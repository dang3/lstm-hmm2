stos
cwtl
add
push
mov
call
mov
mov
push
push
mov
push
push
call
push
call
mov
lea
push
push
push
call
lea
movl
push
lea
call
push
mov
call
test
jne
xor
jmp
mov
mov
push
push
push
push
call
mov
lea
push
push
call
push
mov
call
mov
mov
lea
push
push
call
push
mov
call
mov
lea
push
push
call
push
mov
call
mov
lea
push
push
call
push
mov
call
lea
mov
push
call
lea
mov
push
call
mov
mov
mov
sub
sub
push
mov
mov
mov
call
mov
mov
call
push
mov
call
mov
mov
call
push
mov
call
mov
mov
call
mov
lea
push
push
call
mov
mov
mov
sub
sub
push
push
mov
mov
push
push
push
push
mov
call
push
push
lea
push
jmp
mov
add
push
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
push
push
push
mov
call
mov
call
push
mov
call
push
mov
call
pop
pop
pop
mov
pop
add
ret
nop
nop
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
call
lea
xor
push
mov
mov
mov
call
mov
mov
movl
movl
mov
mov
cmp
jle
mov
mov
add
cmp
je
inc
add
cmp
jl
mov
cmp
jl
or
mov
or
cmp
jne
cmp
jne
push
call
jmp
mov
lea
shl
add
shl
mov
test
je
mov
mov
push
push
push
push
call
mov
mov
test
je
mov
push
push
mov
push
push
call
mov
mov
test
je
mov
mov
push
push
push
push
call
mov
mov
test
je
mov
push
push
push
push
call
mov
mov
sub
dec
lea
je
lea
shl
add
lea
shl
push
lea
shl
add
lea
push
push
call
add
mov
dec
mov
mov
mov
mov
cmp
je
push
call
mov
mov
sub
dec
lea
je
shl
lea
push
push
push
call
add
mov
dec
mov
mov
xor
test
jle
xor
mov
mov
lea
or
inc
mov
mov
add
cmp
jl
mov
push
call
mov
lea
sbb
inc
add
and
push
push
push
call
mov
xor
test
setne
push
mov
call
mov
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
inc
mov
mov
cmp
jge
mov
mov
mov
xor
lea
rep
mov
push
mov
mov
movl
call
mov
add
mov
test
movl
je
mov
call
movl
jmp
xor
or
push
mov
mov
call
mov
add
mov
test
movl
je
mov
call
movl
jmp
xor
push
mov
mov
call
mov
add
mov
test
movl
je
mov
call
movl
jmp
xor
mov
mov
mov
mov
mov
lea
push
lea
push
push
mov
mov
mov
call
lea
push
add
push
push
call
mov
mov
lea
lea
rep
lea
add
lea
mov
push
push
call
mov
lea
mov
lea
shl
add
lea
mov
rep
mov
mov
test
je
push
push
push
call
test
mov
jne
mov
mov
mov
lea
cmp
mov
push
jl
lea
mov
push
call
jmp
inc
mov
push
call
mov
mov
shl
sub
lea
add
mov
add
shl
push
push
lea
lea
push
call
mov
mov
add
add
movl
xor
shl
mov
mov
mov
add
mov
dec
test
jne
mov
mov
cmp
jne
push
call
mov
mov
jmp
mov
lea
shl
add
lea
mov
cmp
je
mov
xor
cmp
mov
je
cmp
jle
mov
mov
mov
sub
mov
mov
cmp
movl
jbe
sub
mov
je
mov
push
cltd
push
push
push
call
mov
push
push
push
push
call
test
mov
jbe
test
jle
mov
xor
divl
mov
mov
mov
mov
mov
or
mov
mov
add
test
je
lea
push
push
call
add
test
je
push
push
push
call
mov
add
testb
je
push
push
call
add
test
jne
mov
jmp
add
push
push
push
call
push
push
call
add
test
je
movw
jmp
push
push
push
call
add
mov
or
mov
mov
test
je
mov
mov
movl
mov
test
je
mov
mov
push
push
push
push
call
mov
test
je
push
push
push
push
call
mov
push
call
push
mov
call
mov
pop
pop
pop
pop
mov
add
ret
push
push
mov
push
mov
sub
push
mov
push
mov
movl
xor
mov
cmp
jle
push
mov
push
lea
mov
push
call
mov
inc
add
cmp
jl
pop
pop
lea
push
call
lea
mov
movl
mov
movb
test
je
push
call
add
movl
lea
mov
movl
mov
movb
test
je
push
call
add
movl
lea
mov
movl
mov
movb
call
lea
lret
lock
add
and
inc
and
add
push
into
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
xor
lea
mov
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movb
mov
mov
mov
mov
cmp
mov
je
cmp
jne
push
mov
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
mov
call
lea
movl
call
pop
xor
pop
mov
mov
add
ret
push
push
lea
push
push
push
push
call
mov
lea
push
push
call
lea
push
call
mov
mov
imul
mov
mov
add
mov
add
cmp
mov
mov
jle
mov
testb
je
mov
push
lea
push
push
push
push
call
mov
push
lea
push
push
push
push
call
push
lea
push
push
mov
push
call
mov
push
push
push
push
call
push
call
mov
cmp
jne
xor
jmp
mov
push
push
mov
push
push
call
mov
push
push
push
push
call
push
call
mov
cmp
jne
xor
jmp
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
push
call
mov
cmp
jne
xor
jmp
mov
mov
push
push
push
push
call
mov
cmp
je
mov
push
push
push
mov
push
call
mov
lea
push
push
push
push
lea
add
testb
je
lea
mov
mov
mov
mov
mov
mov
mov
imul
mov
push
lea
push
push
mov
call
mov
mov
mov
sub
mov
push
push
mov
sub
push
push
push
call
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
imul
push
push
push
call
mov
mov
mov
sub
mov
push
push
mov
sub
push
push
push
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
push
push
lea
push
call
mov
mov
mov
sub
mov
push
push
mov
sub
push
push
push
call
mov
lea
push
push
push
lea
cmp
inc
add
xor
testb
je
mov
lea
push
push
push
mov
call
mov
cmp
jg
mov
lea
push
push
push
push
call
mov
add
lea
push
push
push
call
add
jmp
push
lea
push
push
mov
call
mov
mov
push
push
push
lea
push
push
call
mov
add
mov
push
mov
push
lea
lea
shl
cltd
idivl
lea
push
push
push
call
add
mov
cmp
jbe
push
lea
push
push
mov
call
mov
lea
push
push
push
call
add
or
xchg
add
je
push
lea
push
push
mov
call
mov
lea
push
push
push
call
mov
add
lea
push
push
push
jmp
mov
lea
push
push
push
mov
call
mov
lea
push
push
push
call
mov
add
lea
push
call
mov
mov
push
push
call
add
cmp
je
mov
mov
push
call
lea
push
mov
call
mov
mov
push
push
call
add
cmp
je
mov
push
mov
call
mov
mov
mov
push
push
push
push
lea
push
push
call
mov
mov
add
push
push
push
lea
cs
inc
add
testb
je
cmpl
je
mov
mov
push
push
mov
push
push
call
mov
mov
mov
inc
add
cmp
mov
jl
lea
push
call
mov
mov
mov
mov
sub
push
push
mov
mov
sub
push
mov
sub
lea
mov
sub
push
lea
mov
push
push
call
add
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
mov
call
lea
movl
call
mov
pop
pop
pop
xor
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
mov
test
je
mov
mov
call
mov
push
mov
call
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
movl
call
pop
ret
nop
nop
nop
nop
sub
mov
mov
add
mov
mov
movl
mov
mov
test
mov
movl
mov
je
push
lea
push
push
call
add
jmp
movw
mov
lea
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
je
cmp
jne
mov
test
je
mov
push
push
push
push
movl
call
xor
ret
nop
nop
nop
nop
nop
mov
push
mov
test
mov
je
test
je
mov
pop
ret
mov
lea
push
mov
mov
mov
push
push
push
push
push
call
test
jne
pop
ret
mov
push
push
push
push
call
mov
movl
test
je
mov
test
je
mov
push
push
push
push
call
mov
pop
ret
test
jne
mov
pop
ret
mov
push
push
movl
call
mov
push
push
push
push
push
push
mov
call
pop
ret
nop
push
mov
push
push
mov
push
push
push
lea
push
push
mov
call
mov
mov
add
xor
add
mov
test
je
push
xor
push
push
mov
push
push
push
call
mov
inc
add
add
cmp
jl
mov
pop
mov
pop
pop
pop
pop
ret
mov
pop
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
cmp
push
mov
je
call
pop
add
ret
mov
mov
inc
mov
mov
cmp
jl
movl
mov
lea
push
mov
mov
mov
push
push
push
push
push
call
mov
inc
mov
mov
cmp
jb
push
lea
push
movl
mov
call
mov
test
je
push
mov
mov
mov
push
push
push
push
call
mov
mov
cmp
jae
mov
xor
lea
rep
lea
movl
shl
add
mov
mov
lea
lea
push
push
mov
mov
movl
call
jmp
mov
pop
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
lea
push
call
mov
test
je
push
mov
xor
lea
lea
rep
mov
movl
push
mov
lea
mov
push
mov
movl
call
mov
test
jne
pop
lea
push
call
push
mov
call
mov
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
mov
push
cmp
jae
mov
add
cmp
jb
mov
mov
mov
xor
imul
div
xor
div
mov
push
xor
div
push
mov
mov
push
push
call
add
pop
pop
pop
ret
nop
nop
nop
sub
push
push
push
mov
mov
push
mov
mov
lea
cmp
ja
xor
mov
jmp
mov
mov
mov
mov
mov
call
mov
call
mov
shr
mov
lea
dec
fildl
add
test
mov
je
mov
push
call
test
je
mov
lea
push
push
push
push
call
mov
push
push
push
push
mov
call
pop
pop
pop
pop
add
ret
das
outsb
shlb
xchg
outsb
shlb
add
add
add
add
add
push
mov
push
mov
sub
mov
push
mov
push
mov
push
mov
lea
mov
call
mov
lea
push
push
movl
call
mov
mov
sub
cltd
idivl
mov
test
jl
cmp
jge
lea
push
call
cmp
jl
push
call
jmp
mov
lea
shl
add
push
lea
lea
lea
mov
mov
push
rep
call
movl
movl
push
push
push
movb
call
push
call
push
lea
call
push
lea
push
push
call
mov
add
push
push
call
push
call
mov
mov
push
push
mov
push
push
push
call
mov
push
push
push
call
mov
mov
test
jne
mov
push
push
push
call
mov
mov
test
jne
mov
push
push
push
call
mov
mov
push
push
push
push
push
mov
call
movl
lea
mov
call
movl
pop
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
mov
push
push
call
ret
nop
mov
push
push
call
ret
nop
push
push
mov
push
lea
push
call
mov
xor
test
jle
mov
mov
add
cmp
je
inc
add
cmp
jl
cmp
jge
mov
lea
shl
add
mov
mov
push
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
lea
push
call
mov
mov
push
call
test
jne
push
call
pop
xor
pop
ret
push
mov
mov
mov
rep
push
call
pop
pop
mov
pop
ret
nop
push
push
mov
push
mov
push
push
push
push
mov
mov
test
je
push
push
call
pop
pop
pop
mov
mov
add
ret
push
call
add
mov
test
movl
je
push
mov
call
mov
jmp
xor
mov
lea
push
lea
movl
mov
call
lea
lea
push
call
lea
lea
add
std
jg
add
add
adc
add
mov
add
inc
add
push
call
push
push
mov
call
test
jne
test
je
jmp
push
mov
call
push
mov
call
lea
push
call
mov
push
mov
call
test
je
mov
test
jne
mov
push
mov
call
mov
push
push
push
push
call
pop
pop
pop
mov
mov
add
ret
push
call
mov
mov
call
test
je
mov
push
mov
call
mov
pop
pop
pop
mov
add
ret
nop
mov
xor
push
test
push
jle
mov
mov
lea
cmp
je
inc
add
cmp
jl
pop
pop
xor
ret
lea
pop
shl
add
lea
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
test
movl
je
push
call
add
mov
pop
ret
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
mov
not
test
je
mov
push
mov
call
jmp
mov
call
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
jmp
mov
cmp
jne
lea
shl
add
shl
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
lea
sub
shl
add
lea
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
lea
shl
add
shl
push
call
mov
mov
mov
mov
lea
shl
add
shl
mov
shr
rep
mov
mov
and
rep
mov
sub
lea
shl
add
lea
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
not
test
je
lea
mov
shl
add
shl
push
push
call
pop
pop
pop
pop
add
ret
lea
shl
add
shl
push
push
mov
call
pop
pop
pop
pop
add
ret
sub
push
push
push
mov
push
mov
mov
not
test
je
mov
push
mov
call
jmp
mov
call
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
jmp
mov
cmp
jne
lea
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
lea
sub
xor
rep
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
mov
jl
mov
mov
lea
push
call
mov
mov
shl
mov
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
lea
xor
rep
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
not
test
je
lea
mov
push
push
call
pop
pop
pop
pop
add
ret
shl
push
push
mov
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
je
mov
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
mov
cmp
jne
lea
shl
add
shl
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
pop
mov
mov
pop
pop
pop
ret
mov
cmp
jg
mov
cmp
jle
mov
lea
sub
shl
add
lea
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
pop
mov
pop
pop
pop
ret
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
lea
shl
add
shl
push
call
mov
mov
mov
mov
lea
mov
shl
add
shl
mov
shr
rep
mov
mov
and
rep
mov
sub
lea
shl
add
lea
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
je
mov
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
mov
cmp
jne
lea
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
pop
mov
mov
pop
pop
pop
ret
mov
cmp
jg
mov
cmp
jle
mov
lea
sub
xor
rep
pop
mov
pop
pop
pop
ret
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
mov
jl
mov
mov
lea
push
call
mov
mov
shl
mov
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
lea
xor
rep
mov
push
call
mov
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
movl
call
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
movl
call
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
movl
call
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
add
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
daa
adc
dec
adc
insl
adc
jl
shlb
test
test
and
adc
push
adc
and
and
fadds
inc
and
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
add
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
je
push
mov
xor
lea
rep
mov
mov
mov
mov
lea
push
push
push
mov
call
lea
push
push
call
add
add
lea
mov
push
push
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
xor
lea
push
push
push
push
movl
call
add
test
je
mov
mov
push
call
add
test
je
mov
mov
add
inc
cmp
jae
lea
push
push
push
push
call
add
test
jne
pop
pop
pop
mov
pop
pop
ret
mov
cmp
je
cmp
je
cmp
jne
movw
pop
pop
pop
mov
pop
pop
ret
movw
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
push
call
add
test
jne
pop
ret
mov
xor
cmp
pop
sete
ret
nop
nop
nop
sub
lea
push
push
push
mov
push
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
cmp
jne
mov
lea
push
push
call
add
test
jne
lea
push
push
push
call
add
cmp
jne
lea
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
mov
mov
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
cmp
jne
lea
push
push
push
call
add
cmp
je
sub
pop
neg
sbb
pop
and
pop
add
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
jne
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
pop
sub
pop
neg
sbb
pop
and
pop
add
add
ret
cmp
jne
pop
pop
pop
mov
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
je
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
push
push
call
mov
lea
push
push
push
push
call
add
test
je
cmp
je
lea
push
push
push
push
call
add
test
jne
cmp
jne
push
push
call
mov
push
dec
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
mov
xor
add
cmp
mov
mov
pop
loope
add
add
js
dec
jl
add
and
cmp
dec
lea
push
push
push
push
call
add
test
je
cmpw
je
lea
push
push
push
push
call
add
test
jne
cmpw
jne
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
jne
push
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
lea
add
test
movl
movl
movl
mov
je
mov
lea
push
push
push
push
call
add
cmp
je
cmp
jne
mov
lea
jmp
cmp
jne
mov
lea
jmp
cmp
je
lea
push
push
push
push
call
add
cmp
jne
pop
pop
pop
pop
add
ret
mov
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
mov
inc
test
jne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
push
lea
push
lea
lea
push
push
push
push
movl
call
push
mov
call
add
cmp
mov
ja
mov
pop
pop
ret
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
test
jbe
test
je
mov
inc
cmp
jb
xor
cmp
setne
dec
pop
and
ret
nop
nop
nop
nop
nop
nop
push
push
push
call
mov
xor
add
cmp
jne
pop
xor
pop
ret
push
call
add
cmp
mov
jne
push
call
add
xor
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
push
call
push
mov
call
mov
mov
add
mov
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
lea
push
push
mov
call
mov
add
test
jne
push
push
call
add
jmp
xor
push
push
call
mov
add
test
je
cmpl
jne
push
push
call
lea
push
push
call
push
push
call
mov
mov
in
repz
add
adc
add
inc
add
add
mov
add
cmp
jae
mov
fsubr
inc
add
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
test
je
mov
arpl
inc
add
add
mov
add
cmp
jb
push
push
call
add
inc
push
push
call
mov
add
test
jne
mov
test
jne
push
push
call
mov
add
jmp
pop
pop
pop
mov
pop
add
ret
push
push
call
mov
add
mov
test
je
xor
push
push
call
add
test
je
cmpl
jne
lea
push
push
push
call
add
test
jne
inc
push
push
call
add
test
jne
mov
test
je
mov
test
je
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
mov
push
push
call
push
push
call
add
xor
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
mov
out
add
call
mov
xor
inc
add
add
mov
add
cmp
jae
mov
mov
sbb
inc
add
push
push
push
call
add
test
je
mov
test
je
mov
cmp
jae
mov
mov
mov
mov
inc
add
add
dec
sldt
mov
add
cmp
jb
mov
test
je
mov
cmp
jb
pop
pop
pop
mov
pop
ret
movw
mov
inc
pop
pop
mov
pop
xor
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
push
movl
call
add
test
jne
mov
pop
pop
ret
mov
mov
push
mov
push
push
push
push
call
add
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
push
movl
movl
call
mov
add
test
jne
pop
ret
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
xor
cmp
mov
mov
mov
mov
je
mov
dec
mov
jmp
mov
mov
push
push
call
mov
add
cmp
jne
mov
mov
mov
mov
inc
cmp
mov
mov
je
mov
pop
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
add
test
jne
pop
ret
mov
lea
push
push
call
mov
movl
movl
movl
lea
mov
add
mov
test
je
lea
mov
test
jne
mov
mov
pop
ret
nop
nop
nop
nop
push
push
mov
test
movl
jne
lea
mov
cmp
jne
xor
pop
pop
ret
test
jne
mov
lea
mov
test
je
mov
lea
test
mov
jne
mov
test
je
jmp
mov
test
je
mov
jmp
mov
lea
test
mov
jne
mov
test
je
mov
cmpl
jne
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
push
mov
movl
test
jne
lea
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
push
mov
push
lea
push
mov
lea
push
push
push
push
movl
call
mov
add
test
jne
push
call
mov
add
test
jne
pop
pop
mov
pop
pop
ret
lea
push
push
call
movl
movl
movl
mov
mov
add
mov
mov
mov
mov
mov
movl
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
push
mov
lea
push
push
push
push
call
add
cmp
jne
pop
ret
mov
mov
mov
push
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
xor
push
mov
lea
push
push
push
mov
call
mov
add
cmp
je
push
call
push
call
lea
push
push
push
call
mov
add
cmp
jne
mov
pop
pop
xor
pop
pop
ret
nop
nop
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
je
xor
ret
mov
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jne
push
mov
or
xor
repnz
not
dec
pop
mov
push
mov
lea
mov
movl
cmpl
je
mov
pop
ret
lea
lea
push
push
push
push
call
add
adc
mov
pop
ret
push
call
mov
add
cmp
sbb
pop
neg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
iret
xlat
inc
add
push
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
mov
lea
lea
push
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
test
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
add
sub
pop
pop
add
icebp
jecxz
add
mov
push
dec
push
push
cmp
push
ja
mov
mov
mov
mov
jmp
mov
push
push
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
cmp
jne
xor
pop
pop
pop
pop
ret
mov
mov
mov
push
mov
push
mov
push
push
push
call
add
mov
mov
pop
pop
pop
pop
ret
push
shlb
push
shlb
xchg
xchg
shlb
push
xchg
shlb
sub
push
mov
push
mov
push
push
push
call
add
test
je
push
lea
push
push
call
lea
push
push
movw
call
mov
add
test
je
lea
push
push
call
add
test
je
mov
mov
movw
movw
add
push
mov
push
lea
push
push
push
push
call
add
pop
pop
pop
add
ret
mov
dec
cmp
ja
jmp
mov
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
jne
xor
pop
pop
pop
add
ret
lea
mov
shlb
stos
cwtl
shlb
into
cwtl
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
out
inc
add
insb
and
test
push
jne
push
call
mov
add
test
je
mov
push
push
call
add
mov
test
jne
cmp
je
mov
push
push
push
push
call
add
pop
pop
pop
add
outsl
jecxz
add
cmp
jl
cmp
jg
add
push
mov
lea
mov
shr
rep
mov
and
rep
mov
movw
lea
push
push
push
push
call
add
test
pop
je
mov
push
add
push
push
push
call
add
pop
pop
pop
add
aaa
clc
inc
add
pop
add
scas
jmp
add
push
push
push
call
mov
xor
add
cmp
je
mov
xor
mov
push
rep
mov
push
cmp
je
mov
push
mov
push
push
push
push
call
push
mov
call
add
cmp
mov
je
mov
mov
movl
mov
mov
mov
mov
mov
mov
jmp
mov
push
mov
push
push
push
push
call
mov
mov
cmp
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
push
call
push
mov
call
add
cmp
mov
je
mov
lea
push
push
mov
push
push
push
mov
call
test
je
mov
mov
cmp
jne
movsb
repz
add
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
xor
cmp
je
cmp
jne
lea
mov
push
push
push
call
add
push
push
call
add
cmp
jne
mov
jmp
mov
push
call
mov
add
cmp
jne
mov
jmp
lea
push
push
push
call
add
push
push
call
add
test
je
mov
jmp
mov
push
push
push
push
call
mov
cmp
jbe
mov
push
lea
push
push
mov
or
xor
mov
repnz
not
dec
push
push
push
call
test
pop
je
mov
cmp
jbe
mov
dec
cmp
je
mov
mov
push
call
push
call
add
push
call
push
call
add
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
test
je
mov
push
call
add
mov
test
je
push
call
add
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
add
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
xor
cmp
sete
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jbe
dec
mov
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
add
push
call
add
ret
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
inc
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
mov
cmp
je
cmp
jne
mov
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
cmp
jne
cmp
jl
cmp
jg
movsbl
mov
sub
mov
mov
ret
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
push
push
call
add
test
je
mov
mov
test
je
cmp
je
cmp
je
cmp
jne
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
cmpb
jne
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
cmp
je
cmp
je
push
call
add
mov
jmp
mov
lea
xor
push
push
call
add
test
je
mov
cmp
je
lea
push
push
push
call
add
test
je
imul
mov
lea
push
push
add
call
add
or
pop
xor
pop
add
ret
mov
pop
mov
mov
pop
pop
add
ret
push
call
lea
xor
push
push
call
add
test
je
mov
cmp
je
mov
inc
cmp
jae
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
cmp
je
pop
pop
xor
pop
add
ret
lea
movb
mov
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
pop
movw
mov
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
cmp
jne
mov
pop
pop
mov
movw
pop
add
ret
mov
pop
movsbw
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
push
call
add
ret
add
push
call
add
ret
push
mov
push
mov
push
mov
push
push
push
push
call
add
test
je
cmpw
jne
push
push
push
push
call
add
test
jne
pop
pop
pop
ret
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
mov
mov
ret
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
test
je
mov
mov
push
push
push
call
add
test
jne
mov
add
test
jne
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
push
call
push
push
call
mov
mov
push
push
mov
lea
push
call
add
test
je
mov
pop
ret
push
push
call
mov
add
mov
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
push
push
je
mov
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jb
cmp
jbe
lea
push
push
call
add
lea
test
jbe
mov
sub
and
shr
mov
mov
mov
jne
mov
lea
push
push
push
call
add
pop
pop
add
ret
mov
mov
mov
mov
inc
cmp
mov
jb
mov
test
jne
movl
pop
xor
pop
add
ret
mov
lea
push
push
call
add
test
jne
pop
mov
pop
add
ret
mov
mov
mov
mov
mov
pop
mov
mov
inc
mov
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
jmp
add
push
call
add
test
jne
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
push
push
push
push
call
mov
add
test
je
dec
add
pop
and
mov
mov
lea
mov
push
push
push
push
push
call
add
test
jne
test
je
push
push
call
add
test
jne
push
push
call
add
test
jne
mov
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
test
je
mov
push
push
call
add
mov
mov
test
je
mov
pop
pop
pop
mov
pop
ret
nop
nop
sub
mov
push
push
lea
push
lea
push
mov
push
push
push
push
movl
call
add
test
jne
mov
mov
mov
mov
lea
push
push
call
add
test
je
add
inc
cmp
jl
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
push
push
push
call
mov
add
test
jne
pop
pop
ret
push
push
call
add
cmp
je
pop
xor
pop
ret
mov
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
push
push
call
add
cmp
je
xor
mov
push
push
call
mov
push
push
add
add
sahf
cmpsl
add
loop
aad
movsl
pop
add
add
push
add
out
add
add
push
stos
add
out
scas
mov
add
xchg
pop
xlat
ja
pop
mov
imul
lcall
mov
in
add
push
push
push
push
call
add
in
add
add
add
mov
add
add
jb
mov
add
jno
test
rcl
int
ret
add
add
add
hlt
pop
popl
push
push
push
call
add
add
loopne
add
movb
jmp
mov
pop
testb
add
ja
stos
add
ljmp
pop
push
push
push
push
push
lea
push
push
push
call
add
aam
pop
add
jns
repnz
mov
add
add
mov
pop
roll
movsl
add
out
sub
pop
push
push
push
push
push
push
push
push
call
cmpsl
in
pop
mov
jne
aam
add
add
jmp
mov
add
add
add
jbe
leave
cltd
test
add
lret
sub
pop
call
push
lea
push
push
push
push
call
add
add
add
negl
xlat
add
pop
imulb
rolb
add
lock
sub
pop
call
push
lea
push
push
push
lea
push
push
call
les
add
add
stos
ret
std
add
pop
nop
add
add
add
add
add
xchg
xchg
push
add
adcl
cld
add
fistps
in
repnz
pop
push
push
push
lea
push
lea
push
call
add
lods
lock
add
add
leave
add
mov
add
xchg
jbe
add
add
sarb
add
into
add
add
enter
pop
call
jmp
push
push
push
push
push
push
push
push
lea
push
push
call
add
js
add
out
pop
add
fildl
add
cmp
mov
addr16
mov
jle
add
add
mov
add
add
sub
pop
ret
push
push
push
call
mov
sahf
add
lcall
fadds
pop
xchg
add
add
add
add
mov
add
add
mov
add
xchg
pop
mov
mov
push
push
call
outsl
mov
add
add
test
filds
add
pop
fs
add
lret
stos
add
fnstcw
add
je
fstps
add
leave
lahf
filds
test
filds
data16
into
ja
jns
push
add
sub
pop
add
push
push
call
pop
jae
repnz
clc
mov
rclb
add
add
test
mov
test
out
add
add
cwtl
pop
add
icebp
cwtl
icebp
les
sub
pop
add
push
push
push
push
call
push
je
jne
add
repnz
push
rolb
std
popf
jp
lcall
mov
add
lcall
lock
lcall
ret
insb
dec
add
mov
push
push
lea
push
push
call
add
les
int
fdivrs
nop
incb
cwtl
loopne
mov
movsb
in
jne
add
add
rolb
cmc
xchg
mov
ret
mov
add
cmpl
mov
hlt
lcall
sbb
push
push
lea
push
push
call
mov
add
arpl
add
scas
xchg
sti
leave
fistpl
add
fwait
sahf
loope
add
cmc
out
mov
loope
pop
add
clc
loop
add
int
leave
stos
push
sub
pop
add
push
push
push
sub
add
xor
ror
inc
sub
lea
lea
pop
ror
sub
rol
rol
pop
push
push
push
lea
push
call
imul
ja
jp
xchg
add
rcrl
in
add
add
mov
add
imul
add
mov
add
add
add
ret
lock
pushl
push
push
lea
push
push
push
push
push
push
call
cli
imul
hlt
push
mov
fiaddl
cltd
pop
lcall
jns
add
add
incb
filds
mov
stc
push
mov
filds
out
add
push
xlat
add
push
icebp
mov
stc
add
cmpsb
jp
add
fiaddl
mov
add
sub
pop
call
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
mov
add
add
jecxz
add
stos
sahf
xlat
shll
cld
mov
imul
add
jo
add
lods
jp
data16
add
sahf
add
shrl
add
out
sub
pop
mov
push
lea
push
push
push
call
fiaddl
stos
jp
bound
lods
rolb
aad
in
xchg
push
add
loope
push
add
add
add
add
ja
add
repnz
pop
into
add
add
cld
mov
jno
in
in
addl
push
fwait
add
flds
xchg
les
add
add
mov
out
add
mov
lret
add
inc
call
push
push
push
push
lea
push
call
pop
addb
lret
pop
xchg
hlt
add
add
into
ror
push
js
cmpsb
je
fdivs
ljmp
popf
jge
add
mov
xchg
add
add
fcmovnb
mov
out
add
rcl
add
inc
call
add
cmp
push
lea
push
push
push
push
push
lea
push
call
out
mov
add
push
add
fwait
add
add
out
add
mov
jge
repnz
fsts
add
loope
popf
testb
add
gs
mov
lahf
xchg
add
xchg
jecxz
arpl
clc
add
mov
sub
pop
push
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
mov
iret
mov
xchg
pop
xlat
add
mov
je
add
insb
lret
jle
xlat
add
in
repnz
cltd
add
add
push
add
add
add
add
add
aam
add
cli
add
sub
pop
pushl
push
push
lea
push
call
add
pop
pop
shrl
add
cld
lds
addl
lods
add
mov
out
rolb
add
roll
add
jl
cmpsb
mov
cmpsb
add
mov
add
stc
lock
icebp
jb
add
add
add
in
jns
out
in
hlt
pop
pushl
push
push
push
push
lea
push
call
jge
enter
mov
jmp
lock
xchg
add
std
add
add
cmpsl
jmp
push
add
add
sub
pop
call
pushl
push
push
push
push
lea
push
call
add
push
add
mov
add
jne
rolb
add
xchg
mov
std
jecxz
not
aad
int
fsubr
lret
jne
mov
mov
in
int3
add
jne
push
push
push
push
call
add
stc
pop
rol
add
add
add
add
mov
fdivr
lods
mov
aam
add
mov
xchg
add
int
cltd
push
xchg
mov
flds
jmp
add
mov
add
pop
call
push
push
shl
shr
add
push
xor
add
rol
ror
ror
sub
shr
pop
shr
shr
sub
pop
push
push
push
push
push
push
push
call
arpl
add
lea
aad
ljmp
test
mov
icebp
add
push
test
mov
mov
nop
add
add
jmp
faddl
add
push
add
add
mov
mov
pop
add
add
flds
jne
push
push
push
call
movsb
jge
lret
repnz
add
xchg
enter
mov
lock
mov
fmulp
add
ljmp
add
add
mov
jp
add
add
mov
mov
jns
nop
mov
sub
pop
call
push
lea
push
call
mov
int
add
fsubs
add
into
add
xlat
add
scas
mov
jl
mov
add
add
sub
pop
push
push
push
rol
inc
push
sub
add
shl
xor
xor
sub
shr
sub
xor
pop
lea
pop
push
lea
push
lea
push
push
call
mov
rcll
add
xchg
jnp
imul
cld
jecxz
add
in
add
cltd
add
fildl
pop
pop
push
fildl
fildl
xchg
mov
sahf
mov
cmpsl
jmp
out
add
mov
push
loop
add
cmpsl
mov
add
sub
pop
push
push
push
lea
push
lea
push
push
push
call
xlat
add
mov
add
mov
add
add
mov
rolb
add
movl
mov
add
add
mov
add
bound
add
add
push
cmpsl
add
push
call
push
push
push
push
push
push
lea
push
push
call
mov
add
movsl
pusha
add
add
jae
add
push
mov
add
lods
xor
fadds
ficoml
add
add
outsl
jmp
push
jp
outsl
add
add
stos
out
add
jns
pop
addb
mov
lds
add
add
lret
mov
in
shll
in
loopne
mov
push
push
push
push
push
push
push
push
lea
push
call
add
imul
jmp
leave
in
sahf
fbld
jne
mov
pop
add
jne
scas
mov
add
pop
xchg
addr16
pusha
add
in
jp
jno
add
cmc
gs
data16
add
mov
mov
shrl
pop
mov
ret
add
pop
sub
pop
push
mov
push
push
push
lea
push
lea
push
push
push
push
call
mov
in
add
add
clc
add
add
addb
into
add
ret
mov
xchg
hlt
in
imul
in
loopne
add
push
push
push
call
loopne
add
add
mov
add
add
popa
jbe
les
jecxz
mov
mov
fmuls
add
in
hlt
pop
add
push
push
push
lea
push
push
call
add
lret
add
add
add
mov
fiadds
fadd
add
add
add
add
fbld
mov
add
add
add
add
xchg
fcmovb
add
add
hlt
mov
cld
add
addb
std
mov
aam
mov
add
add
sub
pop
add
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
outsl
in
add
call
aad
push
in
add
pop
fs
leave
pop
mov
add
andb
in
fdivr
lcall
xor
adc
xchg
xchg
xchg
and
out
push
push
push
push
push
call
fwait
add
add
add
outsl
push
xchg
addr16
ret
add
fidivl
add
jno
add
add
lcall
in
in
add
push
lea
push
push
lea
push
push
push
push
push
call
mov
add
add
add
push
movsb
cmpsb
mov
xchg
xchg
add
add
int
loopne
add
mov
push
push
loopne
push
mov
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
data16
mov
imul
xchg
cmpsl
add
in
jge
mov
add
aad
roll
add
xor
push
push
push
push
lea
push
push
call
add
fisubl
in
cmc
pusha
je
mov
add
xchg
call
incb
push
aam
push
or
in
call
add
add
and
dec
cmpsb
lea
push
push
push
call
add
add
mov
jns
add
js
xlat
flds
add
addb
mov
sahf
test
in
jne
add
add
mov
add
add
push
add
cmpsb
lret
jne
jno
mov
in
in
lcall
lock
push
lea
push
push
call
jmp
incb
add
jmp
add
add
add
jae
add
add
popa
mov
xchg
push
add
add
movsl
mov
fidivs
jecxz
add
push
add
add
pop
lcall
pop
add
sub
pop
mov
xor
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
add
movl
rolb
add
test
loop
movsb
add
add
mov
call
add
add
add
xchg
imul
jge
scas
hlt
aad
lock
mov
add
add
lcall
mov
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
repnz
add
jle
addb
add
add
mov
aam
xchg
sti
shr
mov
mov
jns
add
add
jnp
gs
add
in
jp
mov
jp
fs
add
add
add
add
insb
iret
test
add
mov
xor
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
add
aad
mov
add
add
add
push
jl
add
cmpsb
scas
push
call
push
aam
push
pop
popa
add
jne
add
les
push
push
push
call
mov
incb
xchg
add
add
add
add
mov
aad
mov
call
cwtl
xchg
out
add
jae
jns
add
stc
scas
add
add
sub
pop
sub
push
push
push
lea
push
push
push
push
push
call
enter
movsb
outsl
nop
add
ja
mov
add
stos
add
mov
add
cwtl
mov
test
pop
test
cltd
add
xchg
scas
add
add
add
test
pop
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
call
scas
mov
cli
arpl
add
jl
add
mov
les
fiadds
mov
mov
icebp
jcxz
filds
rol
jo
roll
add
loope
lret
negb
imul
call
out
xchg
les
in
fcomps
movsb
push
pop
pop
push
lea
push
push
lea
push
call
je
mov
add
popf
pop
add
test
shll
mov
in
add
xlat
out
stos
mov
add
mov
add
roll
mov
add
mov
std
lods
jle
enter
pushf
jnp
add
cmpsb
sub
pop
mov
add
push
push
push
call
movsb
ret
add
test
add
rolb
mov
hlt
add
add
add
add
mov
faddl
mov
add
loope
mov
fadds
mov
add
push
sub
pop
add
push
xor
pop
add
push
lea
push
push
push
push
call
xchg
add
aad
add
add
jb
sbbl
add
xchg
add
jo
add
test
jecxz
loop
in
in
pop
mov
xor
push
add
xor
add
pop
mov
xor
push
push
push
lea
push
push
lea
push
call
lret
add
rcrb
add
add
add
add
faddl
out
rolb
add
cmpsl
out
rcll
push
add
loopne
popf
mov
lods
add
lcall
dec
sub
adc
pushf
xchg
add
inc
testl
ret
mov
add
push
lea
lea
pop
add
mov
push
push
add
push
sub
add
ror
dec
sub
sub
inc
shr
dec
rol
pop
shr
shr
sub
pop
push
sub
pop
pushl
push
push
push
call
pop
lock
add
add
pop
add
push
les
sti
fcoml
jge
pop
add
add
leave
mov
add
pop
jmp
jbe
les
add
sub
pop
call
push
lea
dec
pop
push
push
push
add
push
or
not
add
shr
sub
add
sub
not
not
xor
pop
ror
inc
not
pop
push
push
call
xchg
gs
add
fs
fadds
xchg
pusha
stos
movsl
add
mov
add
push
xchg
add
add
test
add
mov
add
add
add
std
popl
addr16
sub
pop
push
push
push
push
push
push
push
call
ljmp
add
xchg
add
jbe
std
cld
add
mov
add
loop
add
mov
add
add
mov
add
mov
lods
sahf
test
xchg
add
int
test
fbstp
push
add
add
add
cwtl
xchg
pop
xlat
add
add
cmpsl
push
push
call
add
push
rolb
into
lods
add
add
add
push
mov
jmp
add
imul
frstor
add
mov
add
pop
add
popf
jmp
add
out
xlat
xchg
xchg
icebp
add
lcall
add
fldl
test
je
add
rorb
aad
push
call
add
cli
fwait
add
add
test
add
add
jl
lret
addl
add
js
ror
test
add
insb
jne
mov
iret
add
enter
lret
sarb
mov
add
imul
pop
add
jp
lcall
push
lea
push
push
push
push
push
lea
push
push
call
fmulp
jle
push
add
movsb
idiv
add
add
add
leave
add
shl
aam
pop
fcmovb
movb
jmp
fmul
add
lock
cmc
jp
jbe
add
jmp
jmp
add
mov
lcall
mov
push
push
lea
push
push
lea
push
lea
push
push
call
sti
pop
add
add
popa
add
jae
fwait
cld
add
lds
mov
aad
ficoms
rolb
fdivrl
add
fisubrl
add
mov
mov
add
xchg
xor
add
add
mov
add
ret
clc
mov
sub
pop
add
add
push
sub
shl
shr
not
pop
add
push
lea
push
push
push
lea
push
push
push
lea
push
call
fiadds
add
movsb
add
lds
ret
shl
fcomp
repnz
mov
loopne
add
mov
insb
add
add
xchg
shl
jle
add
in
mov
enter
jne
mov
jno
add
addl
cwtl
pop
addb
jp
scas
add
add
push
out
jns
push
in
loopne
mov
xor
push
push
push
push
push
push
push
push
push
call
push
int
add
add
addr16
xchg
add
add
add
mov
add
mov
xchg
lret
add
out
cmc
add
lcall
jne
push
sub
pop
push
push
push
push
push
push
push
push
lea
push
call
push
call
movsb
rcll
fwait
mov
add
xchg
call
add
push
pop
popa
xchg
add
mov
out
addr16
cmpsb
mov
js
push
add
add
add
popf
cwtd
add
add
mov
sub
pop
mov
push
push
lea
push
push
push
push
push
push
push
push
lea
push
call
lock
mov
andl
fwait
add
pop
xchg
add
add
add
add
push
pop
add
add
outsl
lahf
add
add
add
add
sub
pop
xor
push
push
lea
push
lea
push
push
call
add
insb
stc
add
add
push
ret
xchg
enter
mov
push
add
testl
add
out
fdiv
push
leave
mov
call
rolb
jp
fs
filds
add
mov
add
add
xchg
rcl
add
sub
pop
add
push
sub
sub
pop
add
pop
push
ror
pop
mov
push
push
lea
push
push
lea
push
call
mov
add
stos
stc
aad
add
add
mov
add
push
mov
flds
add
mov
xchg
iret
add
lods
movsb
add
cwtl
xchg
add
in
lock
lcall
or
push
push
push
call
add
add
sti
mov
fists
add
mov
jno
push
add
add
add
add
mov
add
jb
lret
pop
push
xchg
xchg
test
shrb
lret
fiadds
add
lods
rcrl
add
jbe
fcmovbe
lods
sub
pop
add
push
push
push
lea
push
push
push
push
call
mov
add
jp
mov
in
push
add
clc
jp
add
int3
leave
mov
jne
in
aad
add
out
mov
rep
push
push
push
lea
push
push
push
push
lea
push
push
call
push
pop
add
mov
arpl
add
xchg
insb
xchg
add
add
js
add
pusha
popa
scas
lahf
add
pop
add
stos
mov
int
add
fcompl
dec
and
icebp
xor
adc
movb
inc
arpl
out
enter
je
push
xor
sub
pop
mov
xor
push
rol
pop
mov
xor
push
push
call
pop
add
fndisi(8087
add
push
test
add
add
mov
add
add
shl
pop
add
xlat
test
sub
pop
add
push
ror
pop
add
push
push
push
lea
push
call
push
test
lock
ja
clc
nop
add
push
faddl
popa
xchg
add
lock
jecxz
test
pusha
mov
mov
add
popl
imul
add
add
add
mov
stos
into
fisubrs
test
push
filds
add
mov
fnstcw
add
add
mov
lock
lcall
mov
xor
push
dec
pop
add
push
inc
dec
pop
pop
push
push
push
push
push
push
lea
push
call
fwait
in
add
bound
mov
add
mov
stos
into
xlat
add
int3
mov
push
add
leave
add
add
test
int3
jge
push
jne
std
xchg
mov
lret
jo
add
add
pusha
stos
xlat
jl
pop
add
add
mov
int
add
mov
sub
pop
rep
push
push
push
lea
push
push
push
lea
push
call
add
sahf
add
ret
addr16
add
arpl
add
lea
int3
int
add
add
popf
add
xchg
iret
pop
cmpsb
add
fwait
mov
out
jmp
xchg
add
add
add
add
mov
xchg
sahf
add
addb
add
jle
ja
lods
add
add
in
lcall
dec
sub
jno
adc
push
lea
push
push
lea
push
call
jge
loope
lret
add
add
fdivrs
add
add
add
cwtl
frstor
push
jns
jmp
xlat
add
add
popa
jo
fsubs
add
out
add
std
push
mov
push
lods
xchg
add
mov
rcl
push
out
in
call
push
lea
push
push
push
push
push
push
push
call
add
incb
add
test
cld
add
add
add
add
add
add
xchg
add
add
pop
js
push
add
add
js
push
sbbl
add
add
add
test
addr16
pop
mov
add
add
hlt
push
mov
shlb
loopne
add
push
push
push
push
push
call
nop
movsl
lea
cli
add
test
xchg
add
stos
js
push
pop
add
pusha
cmc
push
pop
add
test
add
push
mov
pop
mov
out
pop
push
in
ret
cmpsl
sub
pop
or
je
push
rol
add
not
pop
mov
add
push
push
push
push
lea
push
push
push
push
push
call
add
cltd
push
add
cmpsl
stos
into
add
pop
add
push
add
add
add
test
testl
add
add
push
stos
int
ret
mov
js
mov
mov
add
push
xor
rol
lea
pop
rep
pop
push
push
shl
push
or
not
add
ror
not
sub
not
pop
sub
lea
not
pop
push
push
push
call
ja
jns
mov
stos
fs
test
add
hlt
add
js
add
add
test
into
add
pop
add
push
sbb
popa
add
mov
add
add
add
loop
xchg
ficoms
add
add
sub
pop
pop
mov
push
shl
pop
mov
push
shr
ror
pop
mov
jmp
push
push
call
add
js
mov
add
add
add
loope
fildl
xchg
add
add
jbe
add
pop
add
pop
hlt
xchg
mov
push
lods
fiaddl
lcall
mov
push
not
pop
add
push
add
lea
pop
push
push
push
push
call
jne
mov
ret
add
add
xchg
int3
imul
xchg
test
lods
jle
add
add
popa
mov
add
scas
mov
add
pop
add
add
add
add
int
add
sub
pop
push
push
push
pop
mov
pop
push
dec
not
sub
pop
pop
pop
push
push
call
std
add
mov
add
add
pop
cld
add
stc
add
jge
push
add
add
lods
mov
add
add
xchg
add
scas
mov
popf
filds
lret
fcoms
clc
lcall
leave
push
ror
rol
ror
lea
pop
ret
push
push
push
push
push
push
push
lea
push
push
push
lea
push
call
scas
mov
add
pusha
add
add
xchg
add
push
push
add
loop
sbbl
test
cwtl
add
test
add
add
add
mov
add
in
fdivr
lcall
in
push
dec
xor
pop
add
push
push
push
push
call
cmpsl
add
cld
lret
jecxz
js
leave
push
add
add
cltd
add
xchg
mov
roll
add
mov
jl
cmc
add
mov
add
in
incb
in
jns
add
in
hlt
lcall
push
push
push
push
lea
push
push
push
push
lea
push
call
sahf
test
mov
jns
mov
idiv
shl
add
std
mov
xlat
mov
add
lahf
add
les
and
out
aam
jno
add
sub
pop
push
push
push
lea
push
push
push
push
call
cmc
add
push
add
lds
rol
xchg
mov
mov
add
add
xchg
rolb
jne
pop
pop
pushf
repnz
sahf
xchg
in
add
lcall
inc
cld
add
add
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
lods
movl
out
ja
add
add
xchg
add
add
mov
test
cmc
add
mov
cmpsb
sub
pop
addl
push
sub
pop
test
je
push
shl
sub
pop
mov
push
push
push
push
lea
push
push
push
lea
push
push
push
call
rcrl
xchg
test
add
aad
push
jb
add
xchg
jnp
lea
int3
mov
mov
xchg
mov
lcall
pop
push
push
push
lea
push
push
push
lea
push
push
call
add
addr16
add
add
push
add
std
mov
add
pop
add
mov
add
mov
add
jp
add
xchg
add
ljmp
lea
add
ret
mov
add
add
add
xor
pop
mov
add
mov
xchg
lcall
pop
push
push
call
lcall
int
or
push
pop
add
icebp
add
jle
pop
add
orl
iret
add
popl
jnp
add
add
mov
hlt
add
leave
add
cwtl
add
ljmp
mov
rcl
add
jp
sub
pop
leave
ret
push
add
pop
push
mov
push
push
push
call
add
add
xchg
lret
lods
incb
add
pop
movsl
arpl
jb
add
nop
add
add
add
add
mov
stos
mull
mov
popf
add
add
in
hlt
pop
add
push
push
lea
push
push
lea
push
push
call
add
mov
mov
fwait
loop
ljmp
add
jge
std
aad
add
mov
xor
arpl
mov
xchg
add
add
add
jnp
add
test
push
mov
lcall
push
push
lea
push
lea
push
push
lea
push
call
test
mov
xlat
add
add
push
lods
shl
add
test
mov
add
loopne
movb
add
lcall
add
sub
pop
push
push
push
push
push
push
push
push
call
add
in
roll
add
add
add
stc
add
add
jno
icebp
add
add
fs
lods
jne
jmp
filds
pop
add
push
mov
add
add
mov
add
add
scas
add
loopne
add
lods
add
arpl
lahf
clc
sub
pop
push
testl
push
push
push
call
loop
add
add
add
add
mov
add
add
aam
add
in
stos
add
in
in
add
add
add
add
pop
imul
mov
rcl
add
add
add
incb
push
add
loop
stos
imul
sub
pop
addl
push
add
pop
push
push
push
push
push
push
push
lea
push
push
push
push
call
repnz
push
add
test
aam
movb
pop
xchg
stos
arpl
lahf
fst
add
add
push
fnsave
enter
add
jmp
add
jl
in
fdivr
lcall
jns
call
out
pop
mov
pushl
push
xor
add
pop
push
push
lea
push
lea
push
lea
push
push
push
call
fidivs
jecxz
mov
add
int3
rclb
add
adc
mov
enter
add
add
ds
call
add
loopne
pop
cmpl
jne
push
sub
ror
inc
xor
pop
pop
pop
push
shl
add
pop
pop
pop
push
shr
dec
pop
leave
push
lea
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
add
add
add
add
pop
add
add
add
mov
mov
int
add
jl
add
fmulp
loop
sub
pop
ret
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
jmp
add
mov
xchg
lret
ja
add
call
imul
mov
mov
lret
test
add
add
add
mov
add
add
mov
add
add
ret
movsl
mov
push
xchg
mov
fdivr
lcall
push
lea
push
push
push
push
push
push
push
push
push
call
stos
add
push
push
xchg
nop
add
ja
add
xchg
push
add
xchg
mov
test
add
add
scas
xchg
add
add
add
add
jle
add
fnstenv
lcall
hlt
push
mov
xchg
xlat
add
loope
sub
pop
mov
push
shl
dec
pop
add
push
push
push
lea
push
push
push
push
call
add
add
add
lahf
mov
mov
jecxz
add
add
jmp
add
mov
fsts
pop
add
add
addb
fbstp
add
lcall
push
push
pop
push
movl
push
push
push
push
lea
push
push
call
int3
add
add
jae
mov
int
add
mov
xchg
out
add
push
pusha
add
add
out
jo
shll
xchg
mov
add
mov
add
sub
pop
push
call
push
xor
pop
push
push
push
call
push
pushf
add
jbe
add
add
jmp
pop
aad
xchg
stc
add
mov
add
cwtl
add
add
fldl
jns
pop
add
push
in
jecxz
fcoml
out
mov
push
stos
mov
add
pop
add
mov
in
clc
pop
call
push
add
pop
subl
push
dec
add
pop
cmpl
jne
pop
push
push
push
push
push
push
push
call
add
scas
lea
bound
add
add
mov
ljmp
testb
addb
mov
int3
sub
pop
pop
push
not
pop
pop
push
push
push
push
push
call
mov
add
push
je
push
dec
jnp
add
bnd
add
in
xchg
add
jno
add
add
leave
bound
pop
add
add
add
add
test
in
in
pop
pop
push
xor
pop
leave
ret
push
sub
pop
push
mov
push
ror
pop
add
push
push
push
push
push
push
lea
push
lea
push
push
call
stos
add
loopne
fcomp
mov
fstp
pop
imul
fnsave
imul
add
pop
add
addb
add
add
add
mov
insb
call
lock
add
lock
pop
push
push
xor
shl
sub
pop
push
push
push
add
rol
xor
pop
push
push
add
add
add
pop
mov
lea
push
push
call
add
roll
add
lds
icebp
add
add
cli
stos
add
mov
pushf
jmp
add
pusha
add
push
add
bound
test
add
mov
in
clc
pop
sub
push
shl
pop
mov
shr
push
rol
ror
not
add
pop
add
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
xchg
add
lods
cmc
push
add
loop
lret
add
add
jnp
addb
les
add
lds
pop
xlat
add
mov
xchg
mov
out
repnz
lea
out
sub
pop
mov
push
lea
push
lea
push
push
push
push
push
call
mov
iret
add
mov
pusha
sahf
mov
movsl
jp
mov
mov
addr16
aam
imul
mov
mov
mov
fadds
std
std
add
ljmp
add
sbb
lcall
andb
jge
lea
push
lea
push
push
push
push
lea
push
push
call
arpl
add
mov
iret
icebp
std
addr16
add
cltd
push
test
in
add
push
mov
imul
add
add
jnp
add
mov
addr16
push
out
add
add
add
pushf
nop
add
add
cmpsb
out
add
add
lret
sti
add
leave
mov
in
fdivr
lcall
inc
or
shlb
xor
sub
rol
sub
pop
mov
push
add
add
pop
mov
push
add
pop
cmp
jne
cmp
jne
push
push
lea
push
call
bound
add
add
jo
add
add
add
xchg
add
pushf
scas
add
jbe
int3
sahf
lods
out
ja
aam
add
mov
add
roll
add
hlt
lcall
inc
adc
push
jle
pop
movl
jmp
push
dec
rol
ror
shl
pop
mov
mov
push
sub
shr
lea
pop
sub
jne
push
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
mov
add
push
pop
popa
xchg
add
out
imul
add
jmp
ret
loopne
jae
add
add
add
add
add
andl
lea
add
in
test
jne
mov
add
mov
jle
arpl
insb
push
pop
mov
lahf
sub
pop
mov
movl
push
lea
push
lea
push
push
call
add
in
ficoml
stos
jp
push
xchg
add
jnp
gs
js
add
int
add
mov
add
lods
push
gs
insb
add
les
add
add
mov
add
add
mov
lods
cltd
popf
rcl
lahf
add
js
mov
mov
pop
jmp
mov
push
push
push
push
push
push
push
push
push
lea
push
call
add
jns
clc
add
xlat
add
std
int
aam
mov
push
add
test
pop
sti
lods
add
add
int
insb
aad
call
add
mov
cmc
mov
add
add
andl
mov
movsl
fwait
add
xchg
xchg
add
fcmovne
add
push
testl
pop
mov
cmp
jne
push
push
push
push
call
jmp
pop
testl
add
add
add
fldl
add
sahf
add
add
add
mov
pushf
negl
insb
lock
movsb
mov
in
add
add
add
add
in
lock
mov
push
shr
xor
pop
movl
push
lea
push
push
push
lea
push
call
pop
in
jle
enter
test
sahf
add
pop
add
ja
cmc
push
add
add
xchg
jecxz
in
in
pop
jmp
mov
push
push
push
push
push
push
call
pushf
push
add
hlt
cwtl
mov
jb
lods
movsb
mov
mov
add
out
mov
add
js
add
add
mov
add
add
in
add
jb
in
call
cmpw
jne
push
push
call
fs
js
test
mov
mov
out
push
add
fisubrs
add
xchg
mov
jmp
test
xchg
cltd
sub
pop
mov
push
push
lea
push
push
push
call
xchg
lahf
aad
lock
loopne
clc
add
cmpl
pop
add
add
jo
mov
stc
add
mov
add
iret
push
loope
jbe
add
add
add
into
mov
sub
pop
movl
push
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
imul
into
addb
add
outsl
insb
add
add
jno
out
add
adcl
add
stos
int
cld
imul
add
out
fldl
add
add
in
jns
mov
fdivr
lcall
jbe
add
push
lea
pop
pushl
push
lea
pop
pop
push
dec
rol
inc
pop
mov
push
push
push
lea
push
lea
push
push
push
call
popa
imull
xchg
add
mov
scas
lods
jno
in
add
fiadds
stc
cwtl
add
add
popa
mov
rolb
in
in
lcall
inc
sbb
push
call
data16
bnd
add
add
jae
cwtl
add
add
ja
lods
icebp
popf
in
mov
mov
lods
out
add
loope
add
into
mov
add
jbe
add
shr
lahf
jge
add
filds
push
add
add
ja
lcall
test
js
add
mov
mov
lcall
push
or
fcompl
push
rol
push
or
not
add
shr
shl
not
sub
inc
add
ror
lea
pop
inc
pop
push
add
pop
push
push
rol
sub
inc
pop
call
push
pop
cmpl
je
push
push
rol
lea
push
xor
add
add
xor
lea
sub
rol
sub
sub
pop
xor
inc
rol
add
pop
push
push
push
push
push
push
lea
push
push
call
add
hlt
mov
add
add
mov
xchg
add
stc
pop
push
add
arpl
add
add
mov
jbe
add
cli
push
jae
jp
in
loopne
lcall
call
push
inc
pop
cmpl
je
push
push
shl
push
or
inc
add
sub
rol
sub
add
shr
pop
shr
sub
pop
push
lea
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
scas
scas
xchg
lret
xchg
push
mov
xchg
cmc
add
add
ja
repnz
add
js
vorps
jne
add
add
popf
add
add
push
add
mov
mov
testl
mov
add
jp
add
add
roll
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
popa
sahf
xchg
add
mov
incb
add
aam
ljmp
cmpsb
add
add
addb
movsb
add
add
add
add
imul
add
mov
add
cmpsl
xchg
sub
pop
call
push
push
lea
push
push
lea
push
push
call
add
test
imul
mov
push
mov
add
add
pusha
test
add
add
arpl
pop
mov
mov
in
call
cmpl
je
push
push
inc
push
xor
add
rol
sub
xor
pop
sub
add
ror
pop
push
push
push
push
lea
push
push
push
lea
push
call
add
fistpl
add
addr16
xchg
adcb
add
add
stos
mov
push
std
mov
jno
fildl
jne
add
add
mov
add
repnz
mov
add
test
mov
push
stos
sub
pop
push
call
push
lea
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
stos
stc
add
int3
add
add
add
add
pop
int3
mov
add
xchg
icebp
insb
add
sub
pop
cmpl
je
push
push
dec
push
xor
add
sub
sub
pop
rol
pop
push
inc
pop
push
call
push
pop
cmpl
je
push
push
sub
add
push
and
add
not
sub
rol
not
not
pop
sub
shl
lea
pop
push
not
add
pop
push
call
push
push
push
lea
push
call
out
add
add
add
add
add
mov
add
movb
add
add
add
jmp
mov
testb
mov
add
hlt
mov
add
stos
xchg
jae
jnp
test
lcall
cmp
or
int3
je
push
push
add
push
sub
add
sub
ror
not
pop
dec
inc
shl
lea
pop
push
push
push
push
push
push
push
call
out
jb
lcall
pop
lret
mov
mov
jp
push
out
aam
sub
lods
pop
out
imull
addb
jp
add
outsl
fiaddl
sub
pop
push
call
push
push
push
lea
push
lea
push
call
xchg
popl
test
pop
push
rolb
movsb
add
mov
in
popl
bound
mov
lahf
incb
jns
add
sub
pop
cmpl
je
push
push
not
sub
shr
sub
push
and
add
sub
shr
sub
lea
pop
xor
add
ror
pop
push
push
call
nop
add
add
mov
jb
ja
addl
movsb
lahf
push
fadds
add
stc
icebp
add
cld
add
int3
fstpt
cmpsl
jle
add
add
iret
lcall
pop
lret
fiaddl
add
lods
add
movb
sti
xlat
stos
xchg
mov
aam
pop
stos
js
pop
out
aad
in
clc
pop
push
call
push
push
push
push
lea
push
push
push
push
push
push
call
add
xchg
mov
jbe
add
add
rcll
stos
jp
add
add
pop
mov
add
scas
enter
mov
testl
jmp
mov
add
cmc
jns
out
add
add
lcall
lcall
js
int3
fldz
ret
adc
add
push
push
dec
push
push
pop
add
inc
sub
xor
shr
shl
shl
pop
ror
shr
pop
push
push
push
push
push
push
call
popf
add
add
add
push
add
imul
bound
add
cltd
add
add
add
icebp
add
in
call
push
push
call
xchg
add
add
rcll
add
stos
sarl
mov
mov
scas
jno
add
addb
in
mov
test
fiadds
add
pop
add
add
lcall
dec
xor
add
movl
cmp
rol
je
push
push
shr
shl
push
sub
add
lea
add
shr
sub
dec
sub
pop
rol
ror
rol
sub
pop
push
add
ror
add
pop
push
call
push
ror
xor
pop
cmpl
je
push
push
inc
ror
push
push
pop
add
add
add
sub
add
pop
ror
ror
sub
sub
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
add
add
add
mov
addr16
add
add
mov
arpl
add
jno
mov
add
fstpl
add
mov
add
mov
add
lds
add
aad
add
sti
mov
add
xchg
out
add
add
pop
add
xorl
push
push
add
pop
call
push
lea
push
lea
push
push
push
push
push
call
add
add
jo
roll
iret
pop
pop
int
mov
add
in
lahf
pop
frstor
mov
add
movb
lock
add
cwtl
jle
test
rolb
add
xorb
ret
icebp
cmpsl
add
out
fildl
mov
lcall
js
xor
ret
test
icebp
loop
ja
ror
ror
add
push
xor
add
inc
sub
inc
sub
sub
inc
pop
pop
push
push
lea
push
push
push
lea
push
call
add
pop
fadds
aam
add
add
hlt
hlt
enter
add
add
add
add
scas
add
mov
add
call
scas
add
add
stc
iret
aad
mov
add
fistps
add
sub
pop
push
push
sub
ror
pop
call
push
lea
push
call
add
mov
insb
fnsave
fs
loope
push
call
rolb
loop
add
push
jo
stos
cli
xchg
outsl
mov
add
in
in
clc
pop
cmpl
je
push
push
rol
sub
push
xor
add
ror
not
sub
lea
sub
dec
pop
add
pop
push
sub
inc
sub
pop
push
call
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
repnz
add
add
lock
mov
cltd
int3
add
add
in
jae
add
xchg
arpl
js
xor
pop
ret
cwtl
add
add
pop
xor
push
push
push
lea
push
lea
push
lea
push
call
enter
jb
insb
movsl
pop
add
lds
add
hlt
add
xchg
add
shrb
add
add
add
mov
in
movl
jmp
push
push
call
testl
ret
add
lock
int3
add
add
add
test
jno
int3
insb
pop
jns
lahf
jmp
in
clc
pop
xor
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
pop
add
fs
movsl
stc
add
in
add
add
add
mov
testl
lea
sar
jge
add
add
push
out
add
add
into
js
cltd
mov
data16
add
mov
push
lcall
pop
push
sub
not
pop
pop
pop
push
lea
push
push
lea
push
push
push
push
push
push
push
call
cmc
push
add
add
push
scas
add
xchg
add
stos
mov
lods
int3
add
xchg
add
lods
add
add
add
loop
add
add
fiaddl
add
pop
xchg
add
xchg
sub
pop
leave
push
push
push
lea
push
push
push
push
push
call
add
add
je
add
mov
add
xchg
mov
pop
add
jo
loope
jge
mov
leave
loope
add
cmc
imul
add
add
loopne
ret
push
push
call
pop
mov
add
add
add
xlat
fsqrt
mov
imul
add
add
add
add
push
add
pop
mov
add
add
mov
add
add
lcall
push
xor
shr
pop
mov
push
inc
add
pop
add
cmpl
jne
push
push
rol
push
or
not
add
add
lea
sub
rol
inc
shl
lea
pop
ror
pop
push
push
push
push
push
push
lea
push
call
add
std
iret
add
loopne
add
add
loopne
add
add
in
stc
mov
add
jp
add
sub
pop
pushl
push
ror
add
ror
shl
pop
call
push
push
push
lea
push
push
lea
push
push
push
call
mov
add
xchg
lods
add
pop
fadds
hlt
out
add
pushf
add
add
jno
add
fwait
add
add
add
add
xchg
add
imul
pushf
faddl
mov
add
rcrl
add
add
jmp
pop
push
call
push
dec
not
shl
pop
jmp
push
add
sub
pop
cmpl
je
push
lea
push
push
push
push
push
push
call
add
add
cmc
cmpsl
fisubl
mov
add
add
add
jns
xchg
lcall
lret
add
jecxz
std
add
mov
add
mov
jecxz
push
push
add
cmc
add
cmpsb
add
ja
jmp
add
sub
pop
cmpl
jne
push
push
push
push
push
push
push
push
call
mov
pop
push
add
add
jns
add
shl
movsl
mov
add
add
popa
cli
sub
pop
mov
push
lea
pop
call
push
push
ror
push
or
not
add
add
sub
shl
add
shr
pop
add
shr
sub
add
pop
push
shr
shr
ror
pop
pushl
push
shr
not
not
pop
call
push
push
push
lea
push
push
push
push
push
push
push
call
jl
mov
jns
add
add
add
push
add
call
pusha
mov
push
add
lahf
add
add
pop
out
add
rcll
add
pop
fadds
jns
test
add
fildl
add
cld
sub
pop
lea
push
not
lea
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
push
call
ja
out
lods
mov
mov
pop
outsl
add
in
jae
scas
icebp
mov
mov
add
add
arpl
add
add
imul
add
add
mov
add
add
mov
pop
mulb
lcall
xchg
add
lahf
xlat
pusha
jne
sub
pop
push
push
shr
sub
pop
push
push
push
push
push
push
push
call
lahf
fnstsw
xlat
lock
add
push
cld
add
lret
pusha
aad
imul
fbld
popa
add
in
add
add
xchg
pop
cltd
sub
pop
call
push
ror
pop
ret
jmp
push
push
push
push
push
push
push
lea
push
lea
push
call
add
pop
in
add
mov
mov
mov
add
pushf
jne
mov
lret
add
add
add
int3
pop
loopne
mov
add
js
add
add
lcall
add
shrl
in
fdivr
lcall
jge
add
test
add
add
and
xlat
push
add
push
sub
add
not
xor
dec
sub
xor
dec
xor
pop
sub
pop
push
push
push
push
push
call
mov
cwtl
xchg
jb
mov
add
add
pop
add
cmpsl
arpl
xchg
add
push
jbe
mov
mov
addb
jmp
lret
mov
lcall
filds
add
js
push
jae
add
in
pop
pushl
push
push
push
push
push
push
push
push
push
push
call
pusha
add
add
add
lcall
arpl
test
sbb
push
add
lahf
std
out
mov
add
leave
add
add
push
ja
lea
xchg
mov
push
add
addl
add
iret
add
cbtw
add
xchg
add
add
jae
add
push
push
push
push
call
pop
lds
test
push
aad
mov
add
add
add
add
nop
lods
add
bound
mov
mov
std
add
push
add
mov
push
sub
pop
call
jmp
push
push
push
push
push
push
push
push
call
add
mov
mov
pop
add
lret
add
jbe
movsb
fwait
jmp
bound
add
out
clc
in
add
add
test
add
lods
xchg
add
push
add
in
int3
add
test
movl
or
jne
push
not
not
sub
rol
pop
mov
push
rol
lea
shr
pop
mov
push
lea
push
push
push
push
call
add
add
mov
add
add
jo
roll
jnp
stos
add
add
add
gs
lods
mov
je
add
add
cld
add
add
push
add
sub
pop
push
push
not
shl
ror
pop
jmp
push
push
add
shr
shl
xor
push
and
add
dec
lea
ror
sub
rol
ror
shr
pop
rol
rol
pop
push
push
push
push
call
outsl
mov
movsb
pop
lea
xlat
jge
scas
scas
add
lock
movb
test
xchg
add
xchg
ljmp
add
push
outsl
faddl
add
test
div
add
add
mov
pushl
push
push
call
rorb
imul
mov
subl
xlat
out
add
ja
add
in
clc
pop
call
push
rol
not
inc
pop
call
push
push
add
sub
push
xor
add
sub
sub
ror
pop
shr
pop
push
lea
push
push
lea
push
push
push
push
push
call
add
js
add
add
popf
loope
pop
add
lcall
lea
add
add
sbbl
loopne
scas
mov
push
rolb
mov
add
add
insb
add
pop
lahf
cwtl
sti
sub
pop
pushl
push
sub
pop
call
push
dec
ror
shr
add
pop
call
push
push
dec
push
sub
add
sub
sub
xor
dec
pop
sub
add
sub
pop
push
shl
add
sub
inc
pop
pushl
call
push
sub
shr
xor
pop
call
push
push
xor
push
xor
add
sub
not
shl
add
sub
sub
sub
pop
shr
xor
rol
ror
pop
push
push
call
out
xchg
scas
int
add
in
lahf
add
add
out
jnp
je
add
add
mov
jp
add
jb
fisubrs
mov
lcall
jne
push
ror
pop
call
lea
push
push
call
push
stos
add
outsl
cmpl
add
shrb
add
mov
jl
movsl
mov
push
jmp
add
add
into
add
lcall
push
lea
push
push
call
shlb
add
add
add
imul
mov
add
add
loop
add
add
mov
add
jb
shll
add
add
add
je
push
add
add
push
cmpsl
fsts
pop
add
movsl
fadds
sub
pop
call
push
push
push
push
pop
add
sub
shr
shr
pop
sub
inc
pop
push
pop
pushl
push
ror
add
pop
call
call
push
push
xor
rol
add
add
push
sub
add
sub
not
sub
pop
xor
add
pop
push
sub
rol
pop
pushl
push
push
call
pop
iret
mov
popf
add
add
add
add
push
add
mov
je
fsub
add
test
jmp
pushf
add
cmpsl
aam
pop
pop
mov
pop
pop
add
add
add
sub
pop
call
call
push
push
dec
shr
inc
push
sub
add
add
shl
not
lea
sub
xor
xor
pop
dec
add
pop
push
shl
shl
pop
pushl
push
shr
inc
sub
pop
call
push
lea
push
push
call
jae
jge
add
cwtl
in
add
mov
lahf
add
jmp
mov
add
in
enter
mov
lcall
rclb
addr16
push
push
push
call
fucom
in
add
add
add
jecxz
add
cmpsb
add
add
add
jnp
jno
add
xchg
add
les
fs
add
lock
add
fildl
add
nop
repnz
sub
pop
lea
push
push
push
or
not
add
not
xor
ror
sub
dec
pop
add
sub
pop
push
add
add
pop
pushl
push
sub
dec
xor
sub
pop
call
push
pop
push
call
push
push
sub
push
sub
add
sub
shl
inc
sub
inc
shl
inc
pop
add
not
pop
push
push
push
push
push
push
call
mov
pusha
int3
add
add
lods
in
add
lahf
add
jp
push
cmc
add
add
add
mov
mov
movsb
sar
cltd
lods
sub
pop
pushl
push
push
push
lea
push
call
add
add
aam
lods
lcall
add
add
aad
add
add
add
add
mov
fcmovb
pop
stc
std
add
rolb
push
into
cmpsb
xchg
add
out
mov
int
sti
add
xlat
mov
cli
add
int
in
lock
call
push
push
lea
push
push
call
push
mov
scas
add
popa
mov
add
movb
xchg
in
mov
add
iret
mov
std
int3
xchg
lock
sti
cli
add
imul
in
subl
stc
movsb
jnp
fucomi
add
loopne
ljmp
lcall
rclb
scas
sahf
jmp
push
push
lea
push
call
push
mov
add
test
fnstsw
add
add
lock
add
add
rorb
lret
mov
cmc
jmp
incb
add
outsl
test
add
aad
fisubrl
xacquire
mov
fnsave
xchg
rcll
movl
lret
sub
pop
mov
push
push
add
not
push
xor
add
shr
xor
shl
rol
sub
not
rol
not
pop
rol
sub
ror
pop
push
shl
sub
add
xor
pop
pushl
push
sub
dec
add
pop
call
push
push
rol
pop
pushl
push
inc
lea
pop
call
push
push
sub
shl
push
xor
add
sub
not
not
sub
pop
rol
add
pop
push
sub
pop
pushl
push
inc
sub
pop
call
push
push
lea
add
push
or
not
add
shl
sub
sub
shl
inc
pop
add
pop
push
push
inc
inc
rol
push
or
inc
add
sub
sub
not
lea
ror
pop
ror
xor
pop
push
not
add
pop
call
push
push
add
push
push
pop
add
sub
shl
ror
pop
inc
pop
push
push
push
push
push
call
mov
add
addb
pusha
mov
pop
test
jl
clc
jp
stos
addb
jbe
loop
repnz
lcall
add
add
jns
cld
sub
pop
pushl
push
add
pop
call
mov
push
rol
shr
pop
lea
lea
push
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
lret
pop
fistl
mov
add
add
add
xchg
add
std
push
add
mov
add
rcr
add
in
fcomps
push
lea
push
push
push
lea
push
call
ja
add
add
imull
jbe
fwait
mov
add
add
push
add
add
add
add
arpl
addr16
pop
add
aam
stos
adc
clc
testb
jmp
in
in
lcall
push
dec
shl
pop
push
push
push
push
call
mov
mov
mov
add
mov
testl
jae
add
add
add
pop
jmp
in
mov
fdivs
mov
test
add
loop
imul
add
push
add
js
push
sub
pop
push
push
lea
pop
push
push
push
lea
ror
pop
push
push
sub
add
pop
push
pushl
push
push
push
push
push
push
call
leave
add
fidivrl
mov
xlat
hlt
jns
popa
add
iret
add
movsb
pushf
mov
mov
add
add
movb
add
add
xchg
test
add
mov
add
aad
push
sub
pop
push
push
inc
pop
call
push
push
sub
add
push
xor
add
ror
sub
sub
inc
lea
pop
inc
pop
push
push
call
cmc
add
cltd
repnz
std
int
cmpsl
add
add
xchg
out
push
add
add
add
jns
test
add
add
add
jge
imul
add
mov
lahf
jmp
jns
test
add
jmp
add
sub
pop
pushl
push
push
lea
push
push
push
push
lea
push
push
push
push
call
addb
push
addb
add
add
mov
arpl
jno
mov
add
jmp
outsl
add
scas
leave
mov
jno
add
xchg
fucomp
rcr
add
loopne
test
or
add
sbb
or
es
push
push
push
push
lea
push
push
push
call
mov
fiadds
in
imul
add
aad
add
add
add
nop
call
lock
push
sbb
nop
add
movsb
imul
add
imul
mov
addl
mov
jmp
shll
movb
call
push
sub
ror
sub
pop
mov
push
pop
pop
dec
jne
push
push
lea
push
lea
push
push
push
push
push
call
pop
stc
imul
addr16
cld
push
in
testl
add
add
add
out
add
pusha
mov
scas
movl
call
push
push
xor
dec
push
xor
add
sub
add
xor
sub
pop
dec
not
shl
pop
push
add
rol
pop
pushl
push
push
push
push
push
call
lods
add
add
add
add
add
add
xchg
add
add
pusha
cmp
lahf
jle
add
cmc
mov
push
lock
call
mov
cli
les
add
cli
jmp
ja
add
fs
push
sub
pop
call
push
push
lea
push
lea
push
lea
push
push
call
xchg
jae
js
add
jp
lds
add
add
mov
pop
filds
jbe
loope
add
xchg
add
add
add
add
add
add
movsl
add
add
add
add
mov
add
pop
sub
pop
push
call
push
rol
ror
pop
mov
push
push
push
lea
push
call
in
add
cmpsb
push
jbe
out
fistpll
add
ja
add
xchg
mov
rol
xchg
lahf
sub
pop
lea
push
push
add
push
xor
add
inc
inc
sub
shl
pop
sub
add
pop
push
ror
shl
inc
pop
pushl
push
pop
call
push
rol
pop
push
push
sub
pop
call
push
push
shr
lea
not
push
or
not
add
inc
shr
rol
sub
dec
shl
pop
pop
push
push
push
push
push
push
call
jb
add
rolb
add
add
lea
fisubrl
stos
popf
add
xchg
leave
lahf
add
add
nop
mov
add
lahf
add
add
add
in
call
push
ror
add
shr
pop
call
push
sub
not
pop
call
push
lea
push
push
push
lea
push
lea
push
lea
push
call
jnp
ror
cmc
cld
add
icebp
mov
mov
add
std
mov
js
arpl
aam
ja
pop
out
add
add
add
add
sahf
sub
pop
mov
push
push
lea
push
push
push
push
call
jno
lods
xchg
movsl
add
shlb
add
mov
add
hlt
test
mov
mov
rolb
lods
add
cltd
in
add
lcall
pushf
and
ljmp
cmp
shr
push
and
add
ror
sub
add
dec
dec
shr
pop
not
shr
pop
push
shr
inc
pop
pushl
push
push
lea
push
push
push
push
push
push
lea
push
call
int
pop
mov
lret
add
pop
outsl
add
loopne
test
add
data16
rorb
add
cmpsl
add
add
popl
sti
add
add
hlt
mov
sub
pop
call
lea
push
push
push
lea
push
push
push
lea
push
call
add
add
add
movsb
mov
repnz
shll
mov
rolb
mov
xchg
pop
flds
rolb
lock
mov
add
fwait
iret
add
add
add
pop
add
mov
scas
roll
rcr
lods
mov
add
lods
pop
add
add
add
sub
pop
push
push
push
push
push
push
push
push
call
jb
add
add
test
add
or
lahf
in
add
pop
pop
hlt
lahf
icebp
mov
call
add
add
add
pop
add
add
jmp
xchg
fists
add
add
add
add
shll
jle
lock
test
in
push
fs
sub
pop
push
push
push
lea
add
pop
pushl
push
push
not
shr
push
or
not
add
add
not
not
sub
sub
not
pop
xor
ror
pop
push
shl
inc
shr
sub
pop
push
call
push
push
shl
lea
sub
push
sub
add
dec
sub
dec
lea
pop
add
pop
push
sub
pop
pushl
push
xor
lea
pop
call
push
push
shr
shr
shr
shr
pop
call
push
push
shl
push
or
not
add
sub
lea
shl
pop
add
rol
pop
push
lea
push
push
push
push
push
push
call
pop
add
pusha
jl
into
pop
mov
je
mov
cld
add
add
insb
jge
push
jno
add
push
mov
leave
cld
addl
pushl
push
push
push
push
call
mov
push
add
nop
add
mov
repnz
pushf
mov
test
rorb
pushf
pushf
jbe
add
add
test
add
add
add
add
sub
pop
call
push
lea
push
push
push
push
lea
push
call
xchg
pop
push
add
hlt
mov
popa
sti
pop
pop
add
leave
push
filds
add
fmul
jno
mov
jge
add
roll
out
add
add
add
add
add
xlat
fwait
call
push
ljmp
sarb
ljmp
call
call
push
push
push
push
push
push
push
push
lea
push
call
mov
lods
in
sahf
loopne
stc
add
cwtl
mov
add
add
shlb
add
out
add
shll
movsl
cwtl
and
add
pop
jl
add
add
push
add
fldl
in
add
mov
mov
pushf
xchg
stos
add
add
add
push
jge
sub
pop
jmp
pushl
push
lea
push
push
push
push
push
push
push
call
orl
jle
add
add
mov
fs
popa
leave
mov
add
leave
je
cltd
stos
mov
mov
popf
test
lret
add
cmc
xchg
jecxz
leave
add
mov
movsb
stos
add
add
add
add
lcall
mov
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
aad
add
vpaddd
out
add
call
pop
jne
mov
jo
aam
mov
push
add
sub
pop
jmp
push
push
lea
inc
push
xor
add
add
shl
sub
sub
xor
pop
inc
pop
push
push
push
call
add
loopne
pop
popa
add
mov
add
imul
xchg
add
add
add
mov
int
push
add
imul
roll
in
mov
mov
mov
add
add
add
loopne
frstor
out
mov
add
mov
add
sub
pop
pushl
push
shr
pop
call
push
push
push
push
lea
push
push
push
push
push
call
lret
jno
lds
lods
jne
aam
filds
int
mov
xchg
out
mov
add
mov
add
stos
add
sub
pop
call
push
push
add
add
rol
xor
push
or
inc
add
inc
sub
not
add
inc
pop
add
pop
push
rol
sub
pop
pushl
push
shr
ror
pop
call
push
push
xor
not
pop
call
push
push
call
rolb
roll
sti
add
fs
add
fadds
fiadds
ljmp
fildl
pop
roll
add
test
lahf
out
add
mov
insb
cld
jge
add
add
lret
icebp
imul
clc
pop
loopne
fcom
add
pop
add
add
rolb
mov
in
clc
lcall
add
push
push
lea
push
call
xchg
add
xchg
add
add
orb
enter
add
fldl
mov
in
add
gs
shlb
pop
add
je
test
lahf
add
int3
fwait
add
js
out
lret
bnd
add
mov
mov
hlt
pop
pop
push
lea
push
call
int3
fsubrl
scas
add
test
test
xchg
add
imul
add
cltd
push
mov
pop
mov
ljmp
add
push
add
pop
add
roll
jns
push
roll
pop
mov
jmpw
sub
pop
pop
pop
push
lea
push
lea
push
push
push
call
add
popa
aam
add
add
pop
movsl
test
add
add
add
pop
add
ret
jecxz
jne
add
add
mov
out
mov
lahf
andl
pop
pop
push
sub
dec
lea
sub
pop
leave
add
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
sahf
rcll
add
jge
add
popa
mov
push
add
into
cltd
xchg
xchg
pop
add
pop
cli
add
iret
mov
sti
add
test
mov
in
xchg
cli
xchg
imul
mov
lds
add
cli
add
leave
push
lea
not
pop
ret
push
ror
pop
push
push
push
push
push
call
add
xchg
add
jge
add
sub
add
add
lcall
add
roll
add
fwait
add
add
add
mov
fdivp
add
lcall
in
push
lea
push
push
push
push
call
les
into
icebp
mov
imul
jno
scas
aam
add
mov
mov
in
add
push
mov
add
fldcw
in
pop
cmpl
jne
mov
push
pop
jmp
push
add
rol
dec
pop
mov
push
lea
push
push
call
add
add
pop
xchg
test
in
test
add
in
mov
data16
mov
test
add
ljmp
sub
pop
and
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
jae
clc
xchg
sarl
add
in
push
add
jmp
mov
aad
cld
jecxz
in
add
js
add
icebp
add
fldl
add
mov
jl
add
out
lock
add
call
sub
pop
xor
push
push
lea
push
push
lea
push
push
push
push
call
add
add
add
add
mov
addr16
add
add
xchg
add
add
fwait
pop
notl
hlt
lret
add
push
sbbb
iret
xlat
xlat
push
add
aad
les
mov
add
jbe
add
sub
pop
xor
add
push
add
add
pop
xor
push
inc
ror
shl
pop
dec
push
lea
push
call
jge
lret
add
les
loop
add
pop
add
add
lea
clc
add
add
add
push
add
mov
stos
push
out
xchg
lods
sub
pop
sub
jmp
push
push
push
push
call
add
add
add
push
shll
add
lahf
add
arpl
mov
add
add
lock
sub
push
lea
push
push
call
add
aad
outsl
fs
je
jle
cltd
rolb
mov
jns
in
push
mov
jecxz
mov
fwait
lds
loope
add
mov
xchg
xchg
add
add
sti
xchg
add
gs
mov
add
mov
push
shr
add
mov
add
mov
add
jle
add
cmpsl
iret
jp
add
in
hlt
lcall
xor
lea
push
push
push
push
push
push
lea
push
push
push
call
add
in
pop
mov
xchg
cmc
add
add
pop
lods
xchg
add
jb
mov
add
out
subb
add
add
add
xorb
out
add
add
add
pop
mov
in
fcomps
jmp
cmp
jne
push
dec
add
pop
mov
push
dec
pop
lea
push
ror
inc
pop
sub
mov
push
push
push
push
push
lea
push
call
mov
add
add
add
xlat
add
sti
popf
jecxz
mov
add
jl
add
add
add
int
mov
xchg
out
add
add
cli
push
in
add
add
in
call
push
lea
push
push
push
push
push
push
push
push
push
call
xlat
flds
add
add
jns
add
add
add
test
add
pop
add
mov
jb
push
jle
push
pop
add
add
jb
test
lods
bound
pop
push
jge
rolb
add
jb
add
out
int3
add
sub
pop
add
push
lea
push
call
add
in
add
add
mov
add
lods
cld
add
popa
jae
out
jle
into
cli
add
lea
sub
pushl
push
add
pop
pop
push
sub
sub
pop
shr
and
push
shr
pop
sub
cmp
jne
push
shl
pop
leave
ret
push
push
call
xchg
mov
xchg
add
add
icebp
add
mov
mov
clc
arpl
add
rcl
test
add
aad
or
add
add
jle
add
lcall
mov
push
sub
sub
lea
pop
add
push
push
call
add
pop
cwtl
add
add
cmpsl
fildl
mov
jl
clc
xchg
pop
add
xlat
test
cmpsb
shll
add
popf
xchg
pusha
pop
xchg
pop
jne
add
add
push
out
xchg
add
into
add
jne
in
iret
xchg
add
lcall
push
xor
sub
shl
pop
push
push
push
push
push
call
add
fisubrs
rol
imul
add
push
add
rolb
lret
add
add
imul
add
int3
cmpsb
test
add
imul
xchg
cltd
add
in
hlt
pop
push
push
push
push
push
push
push
push
push
call
icebp
call
add
mov
mov
add
addr16
cltd
movb
mov
xchg
jmp
pop
add
js
pop
push
scas
sbb
hlt
push
add
roll
out
ret
popa
add
mov
outsl
sub
pop
push
push
sub
ror
inc
pop
mov
push
push
push
push
lea
push
push
push
push
call
aam
faddl
mov
add
and
nop
fwait
add
out
add
cld
xchg
test
add
xlat
add
jmp
in
loopne
lcall
push
cmp
ror
add
lea
pop
sub
push
rol
xor
ror
pop
mov
push
add
pop
shr
push
push
push
push
push
push
lea
push
push
call
jbe
std
roll
xchg
add
addl
pusha
add
fildl
mov
add
std
add
jp
pop
icebp
add
add
add
add
pop
add
jge
cld
pop
add
add
lcall
fimull
add
subb
fldt
push
push
int3
push
lea
push
call
addr16
leave
add
orl
add
mov
rolb
shll
add
std
add
xchg
add
test
push
add
add
in
lods
flds
imulb
xchg
test
add
push
mov
pop
ljmp
add
sub
pop
add
push
ror
pop
mov
push
lea
push
push
push
push
push
push
push
push
push
call
add
sarb
incb
push
push
sahf
add
add
lds
add
xchg
ja
test
addl
add
mov
enter
add
add
add
push
pop
cmpl
shlb
cmpsl
leave
add
add
push
mov
add
sahf
stc
add
fdivr
lcall
jge
push
push
push
call
scas
mov
mov
push
cmpsb
neg
add
add
fwait
add
push
testb
cmpsb
lahf
add
mov
fsubrs
add
add
xorl
add
add
scas
mov
push
add
add
add
pop
test
lcall
notb
popa
jnp
adc
pop
push
push
push
push
call
add
rcll
movsb
movsl
mov
lret
js
mov
mov
hlt
sarl
add
mov
jbe
xchg
pop
out
scas
mov
mov
sti
push
jge
xchg
add
xchg
fldenv
movsl
sub
pop
mov
push
lea
push
push
push
push
push
call
stos
jbe
sti
mov
jge
push
mov
cld
add
addr16
imul
add
jne
int
mov
pop
imul
shl
pop
jmp
add
fwait
lock
mov
fldl
add
add
add
add
mov
add
gs
sahf
lock
sub
pop
and
push
dec
add
not
pop
rol
push
shr
inc
ror
rol
pop
rol
push
push
push
call
jno
mov
add
push
stos
jecxz
aam
jns
cmc
imul
jo
add
cltd
fadds
pop
add
hlt
add
out
fs
hlt
add
add
fdivp
repnz
mov
gs
add
mov
add
cmc
add
rorb
jle
add
mov
add
mov
xor
inc
push
lea
pop
cmpb
jne
add
push
push
lea
push
call
push
add
movsb
popf
add
test
add
add
mov
cmpsb
scas
xchg
mov
add
add
cli
cltd
add
add
mov
push
jno
sahf
add
leave
add
out
add
js
call
hlt
lcall
inc
or
test
add
add
lea
pop
add
cmpl
jne
push
lea
lea
lea
pop
xor
pop
push
push
push
push
call
add
lods
bound
push
add
shl
pop
mov
fadds
xchg
add
add
add
in
add
pop
add
outsl
jmp
jnp
stos
mov
nop
add
push
push
lea
push
push
lea
push
call
leave
mov
add
cld
add
xchg
lds
add
mov
clc
fdivs
out
push
aad
fisubs
rcrl
rcll
lcall
pop
push
not
rol
ror
add
pop
pop
leave
push
lea
add
sub
dec
pop
ret
mov
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
jge
loop
aam
repnz
mov
jae
out
add
addb
jle
add
add
fdivrl
jo
add
add
rcl
sub
pop
add
push
push
push
push
lea
push
push
call
les
xchg
push
add
add
add
ljmp
xchg
add
add
sahf
add
movsb
add
add
mov
xchg
scas
add
mov
sti
jmp
out
xchg
hlt
add
add
testb
add
push
add
testl
add
add
sub
pop
mov
push
push
not
dec
pop
testb
push
push
push
push
call
add
add
add
add
test
pop
sarl
in
sarl
add
add
sub
pop
pop
push
push
push
call
ret
xchg
test
add
jecxz
bound
shlb
add
mov
cli
add
in
in
roll
test
cli
arpl
bound
mulb
xchg
lret
js
stos
jmp
add
icebp
add
loop
mov
ror
mov
add
add
mov
rolb
lcall
xchg
mov
movb
xor
not
pop
push
push
push
lea
push
push
push
push
push
push
push
push
call
icebp
rcrw
push
pushf
add
add
add
cwtl
sub
add
je
add
push
out
ljmp
add
add
enter
cmc
add
lea
mov
mov
mov
jbe
clc
lret
pop
sub
pop
call
push
push
push
push
push
call
add
rclb
add
lcall
push
cld
xlat
add
add
loopne
insb
add
add
stos
mov
pop
addr16
add
add
lahf
stos
add
add
xor
push
shl
xor
not
pop
pop
push
lea
push
lea
push
push
push
lea
push
push
push
call
push
add
mov
outsl
add
lods
rolb
add
loope
icebp
mov
fbld
add
lock
mov
mov
mov
mov
cmpsb
stos
add
icebp
pop
xchg
lret
cli
sub
pop
pop
push
xor
pop
pop
pop
push
push
push
push
push
push
call
push
incb
add
add
add
add
int
push
add
add
out
insb
add
jno
testl
int
scas
rolb
repnz
fbstp
scas
add
add
push
add
push
add
sub
pop
pop
push
push
push
push
push
lea
push
call
push
loope
add
imul
pop
imul
add
add
pop
add
mov
jno
push
add
add
add
push
push
lea
push
call
add
mov
cmp
add
add
pop
mov
add
mov
add
mov
cmc
add
add
loop
add
xchg
mov
stos
leave
push
xchg
add
testl
add
jmp
xorb
popa
push
call
test
cmpsb
push
add
add
xlat
add
mov
gs
test
xchg
fcom
push
push
fmul
add
jo
add
add
mov
add
mov
jne
out
xlat
mov
fidivrs
pop
add
push
push
add
xchg
jmp
js
rclb
add
lcall
push
lea
push
push
push
lea
push
lea
push
push
call
pusha
add
enter
push
add
pop
sti
enter
add
jl
add
add
movl
add
roll
add
add
flds
push
add
add
lcall
in
add
push
xor
dec
pop
push
push
add
sub
rol
pop
push
push
lea
push
push
call
add
add
fists
pop
add
jno
push
enter
jge
mov
push
add
jge
push
cld
shl
add
stos
add
add
out
lock
outsl
add
cld
xchg
xchg
add
add
add
add
add
lret
sahf
push
jno
in
hlt
lcall
push
push
push
lea
push
push
push
push
push
call
xlat
mov
mov
xchg
push
add
add
add
add
fildl
mov
push
add
mov
xchg
jo
mov
lea
mov
fstpt
add
xchg
stc
loope
je
sub
pop
mov
push
push
lea
push
push
call
in
jle
lea
je
mov
rclb
movsl
jp
jbe
add
mov
pop
addl
imul
xchg
lea
add
add
fdivrs
xchg
push
add
jmp
cwtl
mov
movsb
jae
sub
pop
push
push
lea
push
push
push
call
addb
popf
std
push
add
jae
add
add
in
add
add
lock
out
ja
mov
add
fldl
lcall
lea
push
lea
push
push
push
push
call
repnz
icebp
cwtl
jl
jno
ficompl
xchg
cwtl
out
xchg
mov
add
xchg
test
add
in
jo
adc
clc
add
pop
add
add
jae
imul
fildl
add
add
add
pop
test
fiadds
push
add
cltd
add
shrb
in
in
lcall
ljmp
sub
pop
mov
push
push
push
push
push
lea
push
push
call
popa
scas
in
sar
add
pusha
add
add
lcall
add
mov
add
push
add
stc
add
add
iret
add
lret
add
xchg
popf
add
add
jb
mov
sbb
add
lcall
ljmp
push
push
push
call
add
cmc
xchg
pop
add
add
add
addl
add
mov
sbbb
fcmove
scas
mov
add
add
add
lcall
fimull
test
mov
push
push
call
push
add
mov
jbe
add
xchg
add
mov
add
add
lea
add
add
add
pushf
aam
popf
mov
lcall
fsts
leave
cltd
xor
stos
outsl
push
lea
push
call
scas
add
add
shrb
add
add
imul
add
pusha
lret
fadds
call
push
add
fldl
pop
add
add
subl
sahf
test
pop
add
sub
pop
pushl
push
lea
push
push
push
push
push
push
call
add
mov
lret
mov
push
add
add
enter
nop
ret
mov
pop
pop
movsb
pop
sar
icebp
fdivrl
in
in
popl
push
inc
pop
mov
push
push
lea
push
push
push
push
call
jl
mov
lcall
add
add
mov
add
std
add
add
add
add
popf
test
add
nop
add
pop
pop
adcl
add
jl
add
addr16
add
mov
sub
pop
add
push
shr
rol
not
pop
xor
lea
push
add
sub
pop
mov
push
push
push
push
lea
push
call
pop
cltd
cli
arpl
pop
add
ljmp
add
out
sbbl
add
add
add
mov
add
add
add
xchg
add
fcomp
jp
bound
fnstenv
add
roll
add
add
add
add
shrb
loopne
lret
add
lcall
shll
rclb
rol
push
ror
ror
not
pop
nop
nop
push
push
push
call
data16
add
lock
add
add
pushf
add
add
add
ja
lods
movsl
testb
add
cwtl
add
xchg
loop
lahf
stos
dec
enter
sub
pop
xor
nop
push
push
call
jmp
jge
popl
notb
add
add
push
xchg
add
movl
pushf
mov
in
mov
mov
add
add
imul
add
in
add
shl
lods
add
sub
pop
nop
push
dec
pop
inc
push
xor
pop
nop
nop
push
pop
cmpb
jne
push
ror
sub
lea
not
pop
add
push
dec
dec
pop
nop
nop
push
xor
ror
pop
cmp
je
push
push
push
push
push
call
add
or
mov
pusha
pop
fiaddl
popa
out
lea
add
shll
mov
lock
add
flds
add
fwait
add
fildl
nop
push
sub
lea
xor
pop
inc
push
lea
push
call
add
hlt
js
insb
add
add
add
add
mov
aad
out
add
roll
add
mov
test
cli
cli
movsb
std
add
add
cli
fadds
bound
pushf
outsl
lret
arpl
in
in
stos
add
mov
movb
add
scas
test
add
mov
add
add
jnp
sub
pop
nop
push
push
lea
push
push
lea
push
push
call
lea
call
shr
addb
lret
jnp
fs
mov
adcb
int
add
add
aad
add
add
mov
in
call
xchg
sub
inc
int3
dec
test
push
lea
push
push
push
push
call
add
icebp
repnz
ret
push
add
add
pop
add
add
rcrb
push
add
xchg
cli
in
add
push
cld
add
pop
sub
pop
cmp
jb
push
lea
push
push
lea
push
push
push
push
push
call
add
int3
popa
sahf
jno
lret
add
add
push
pop
lcall
xchg
add
add
add
xchg
pushf
jne
add
add
xlat
test
add
lcall
rclb
lea
push
push
push
call
push
add
add
cld
cmpl
cmpsl
add
mov
mov
add
add
add
cld
jge
add
mov
add
add
jp
add
add
add
loop
add
popf
jbe
mov
xchg
add
add
clc
add
in
pop
jmp
push
shl
add
sub
shl
pop
mov
push
lea
pop
add
push
push
push
push
push
call
add
mov
add
pushf
add
and
data16
fldl
add
mov
add
add
add
imul
mov
loope
pushf
lods
jns
ljmp
jnp
add
loop
add
jo
push
lods
add
mov
jb
inc
sbb
push
push
push
call
insb
add
ret
add
mov
add
add
nop
push
mov
add
add
push
mov
add
add
add
add
into
push
cltd
add
je
addr16
pop
pushf
fwait
lods
mov
in
lock
add
push
rol
add
pop
mov
push
add
shl
pop
xor
push
add
pop
xor
shl
push
lea
pop
xor
shl
push
inc
pop
xor
shl
push
push
push
push
lea
push
call
add
lods
add
ror
add
add
add
std
add
mov
pop
arpl
mov
mov
add
insb
add
xchg
mov
pop
add
pop
lods
add
add
iret
out
push
stos
bound
stc
pop
loop
mov
lcall
or
push
xor
lea
pop
mov
add
push
add
shl
pop
pop
push
dec
sub
lea
pop
pop
pop
push
lea
push
push
call
xchg
add
add
cmpsb
out
int
add
mov
stos
movsl
add
add
pop
add
add
in
hlt
pop
pop
push
lea
push
call
in
into
add
add
mov
add
in
add
jnp
addl
into
test
imul
add
aad
aad
add
addb
lea
pop
test
leave
push
lea
push
push
call
add
pop
mov
scas
xchg
pop
test
add
faddl
mov
popa
movsl
add
loop
lods
ret
aad
rolb
scas
add
int
mov
mov
add
mov
fildl
mov
add
push
add
lcall
or
push
push
xor
sub
shr
add
pop
mov
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
mov
popa
sti
cmc
xchg
lahf
add
add
pop
add
in
idivl
fadds
add
add
jno
sbbb
mov
add
imul
add
add
int3
add
test
push
push
xchg
addr16
add
add
popf
add
add
ljmp
mov
in
loopne
lcall
push
lea
push
push
push
push
push
push
push
call
filds
repnz
add
add
jne
cmpsl
add
ret
stc
add
add
xchg
aad
add
cld
lahf
mov
call
add
add
stos
jecxz
add
add
add
jle
lea
add
arpl
add
fs
add
aam
add
cmpl
fcoml
lcall
push
xor
rol
not
pop
push
mov
push
add
shr
pop
mov
mov
push
push
push
push
push
push
push
call
imul
shl
jnp
add
fistpl
pop
add
flds
add
add
add
add
mov
in
push
add
mov
add
add
pop
add
add
mov
add
ret
jmp
mov
lds
sub
pop
test
je
mov
push
push
push
push
call
add
scas
add
sbbl
cmpsl
lahf
add
add
add
add
add
stos
popl
filds
lea
int3
shrb
mov
add
in
lock
test
je
mov
push
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
pushf
shrb
add
pop
add
aad
aam
in
movsl
add
add
scas
add
jne
add
add
and
pusha
popf
leave
add
leave
cwtl
iret
add
fdivr
lcall
dec
or
lea
sub
shr
not
pop
mov
inc
push
push
lea
push
push
push
push
push
call
add
add
sar
add
out
xchg
add
add
mov
xchg
xchg
add
popf
lcall
xchg
test
add
mov
mov
popa
sub
pop
cmp
je
push
lea
push
call
add
add
fcoml
mov
jecxz
les
add
add
mov
imul
add
into
aad
add
in
add
add
rorb
addb
add
loope
rcrb
push
push
push
lea
push
call
add
lahf
stos
push
mov
pop
push
mov
add
add
add
mov
add
aad
lock
lock
jne
pop
call
add
cmpsl
add
in
in
inc
push
add
pop
cmp
je
push
ror
inc
dec
pop
test
jne
push
add
pop
xor
push
shr
sub
pop
pop
push
push
push
lea
push
push
push
push
push
call
add
fcmovnu
add
add
loop
add
stos
xlat
add
loop
add
xchg
add
mov
cwtl
add
add
mov
lock
mov
add
add
add
xorl
rcr
incb
pop
push
inc
not
ror
pop
pop
push
lea
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
pusha
add
out
jnp
add
enter
loop
gs
add
arpl
xchg
mov
out
xchg
jne
movsb
std
shl
jns
jb
add
mov
aam
add
add
lcall
ret
push
sub
not
pop
mov
push
lea
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
rcr
add
mov
add
lret
mov
add
fs
add
push
pop
jo
add
add
jnp
int
jns
add
int
push
clc
fiadds
roll
add
mov
sub
pop
inc
cmp
jne
push
rol
shl
shl
pop
lea
push
dec
pop
mov
push
pop
test
je
mov
push
push
lea
push
call
fucomip
imul
movsb
lret
add
push
add
push
cwtl
jmp
jo
add
rolb
xorb
add
add
jp
cltd
add
jmp
add
add
je
fdiv
add
rcr
jmp
sahf
add
test
call
xchg
lcall
movb
loopne
test
call
call
jb
arpl
add
jp
pop
rcl
add
rolb
push
add
mov
push
mov
add
pushf
test
push
mov
push
push
push
call
jmp
add
cmc
cltd
add
pop
jae
lea
pop
jne
mov
push
add
add
add
push
add
add
add
mov
pop
mov
push
sub
pop
test
je
push
shl
pop
mov
add
push
push
push
push
push
push
push
push
push
call
add
pop
add
xlat
add
call
mov
rol
add
add
add
add
loope
mov
pushf
add
add
add
fcmovne
hlt
pusha
add
loopne
test
call
rcrl
mov
mov
sti
call
add
push
call
data16
xchg
pop
arpl
add
add
pop
pop
add
pushf
mov
sahf
out
add
jmp
test
add
mov
add
add
push
aad
add
xchg
add
add
lcall
rcrb
out
shl
add
pop
pop
pop
push
add
sub
pop
pop
push
lea
push
call
mov
jge
aad
add
add
test
in
rolb
add
ret
add
insb
add
movsl
push
loopne
imul
frstor
add
add
hlt
cld
outsl
add
mov
jecxz
add
sub
pop
leave
push
push
push
lea
push
push
push
call
les
add
stos
sub
lods
push
add
push
hlt
mov
add
mov
rolb
jb
jmp
mov
add
mov
add
add
mov
push
jbe
hlt
add
movsb
test
in
call
ret
lea
push
push
push
push
push
push
lea
push
lea
push
call
add
insb
add
add
mov
add
lret
push
std
push
pop
jno
lea
addr16
rolb
test
jmp
push
mov
mov
push
jp
add
out
jle
add
loope
in
jno
add
mov
sub
pop
pop
push
sub
shr
pop
pop
push
lea
pop
pop
push
rol
pop
pop
push
add
xor
pop
leave
push
add
pop
ret
push
sub
shl
shr
pop
mov
push
sub
not
pop
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
jecxz
jmp
add
push
filds
jb
add
add
in
add
add
movsb
in
mov
mov
add
jecxz
add
test
pop
push
rclb
add
js
in
fcompl
pop
push
push
lea
push
lea
push
push
push
push
call
scas
xlat
add
add
test
add
pop
add
data16
xchg
call
add
cmpl
jno
testl
stos
jbe
mov
add
adc
push
arpl
leave
push
push
push
push
push
lea
push
push
call
fdecstp
add
out
add
loop
mov
lods
xchg
add
add
jl
add
imul
cld
add
mov
add
in
out
add
sub
pop
ret
xor
cmp
cmp
cmp
xor
adc
adc
adc
xor
adc
cmp
repz
xor
adc
jb
adc
cmp
rcrb
add
lea
out
push
mov
inc
xor
fimuls
aad
mov
push
bound
cmpsb
push
push
pop
ficoms
aas
lock
or
cld
jo
inc
mov
push
jne
movsl
sbb
push
push
test
cmp
addr16
inc
pop
fstpl
pop
inc
shll
or
sub
mov
cli
outsb
dec
mov
add
mov
jp
jno
push
inc
sbb
mov
pushf
pop
cmpsb
adc
ret
fs
xor
leave
es
lret
lds
mov
adc
insl
jl
jmp
popf
shrb
xor
fwait
pushf
in
ss
out
jl
out
dec
cmp
push
xchg
fists
xor
xor
ds
dec
cmp
fsubrl
and
jb
mov
dec
mov
jnp
mov
add
pop
push
jb
and
inc
ret
test
dec
and
std
xchg
and
jecxz
int3
mov
jb
mov
sbb
insl
sub
jmp
insb
or
dec
movsb
fsubrp
mov
ds
stc
into
or
enter
xchg
mov
test
fsubs
ljmp
dec
mov
lock
int
cld
mov
faddl
xor
sub
push
push
dec
lock
fisubrl
jae
popf
decb
popf
xchg
fwait
pop
pop
in
or
lret
fdiv
and
cmp
mov
jge
and
lods
sbb
mov
out
push
or
mov
xorl
xchg
enter
insl
orl
sbb
cmpl
sbb
loop
ficompl
xlat
dec
and
and
fldt
and
in
rcr
xchg
mov
adc
push
inc
jnp
dec
aam
decl
leave
mov
mov
aam
flds
das
mov
out
mov
adc
hlt
xor
inc
add
cli
cltd
pop
push
xchg
mov
adcb
je
mov
mov
mov
mov
sbb
sub
push
cmp
sbb
ss
sub
push
adc
mov
dec
push
mov
jne
mov
xor
popa
mov
sub
arpl
xor
es
mov
ljmp
je
cmpsl
loopne
sarl
mov
mov
cmp
and
push
stc
push
jp
std
ss
xlat
shl
lret
pop
and
or
lock
xchg
shl
mov
cmc
arpl
lds
shr
je
pop
push
pop
mov
sbb
popf
ret
lcall
imull
ss
outsl
out
jmp
xchg
sub
lahf
jl
and
addr16
pop
mov
inc
pusha
push
or
js
mov
test
push
mov
negb
inc
cld
or
insb
add
xchg
scas
fstl
nop
in
cmp
push
cmpsl
roll
std
rcrl
jmp
xchg
nop
push
cmp
push
xor
dec
or
je
jmp
push
push
dec
or
sbb
pop
mov
stc
insb
sbb
cmp
jp
fiaddl
pop
jecxz
inc
xchg
orb
add
test
stc
lret
shlb
fwait
pop
leave
sub
pop
mov
lcall
int3
and
nop
in
inc
and
test
xchg
aas
fdivrs
and
cwtl
cmc
ss
xchg
movb
mov
insl
push
push
or
idivb
hlt
ret
inc
mov
dec
mov
aad
sub
out
xchg
xor
sub
movsb
mov
and
jecxz
xchg
stos
addl
jle
out
in
sub
adc
jmp
jbe
cmp
mov
fadd
or
xor
int3
in
mov
add
fnstsw
mov
imul
in
xor
mov
push
sub
enter
fs
lcall
jnp
insb
arpl
stos
mov
sbb
jg
dec
adc
mov
rcr
shlb
stc
add
xchg
nop
inc
xor
scas
mov
xor
shlb
push
mov
sbb
mov
enter
pop
enter
shlb
mov
dec
cmc
das
mov
mov
push
sbb
cld
mov
mov
loopne
jb
fisubrs
dec
fwait
leave
fnstenv
adc
jnp
fiaddl
lods
daa
mov
mov
lahf
insl
lods
or
sub
mov
jp
mov
xor
js
push
adc
shl
jbe
ljmp
int3
jo
scas
mov
popa
inc
loop
and
arpl
in
sbb
adc
xchg
mov
pop
adc
mov
sub
in
cmp
jb
xchg
push
bound
mov
ljmp
or
dec
mov
xlat
out
repz
je
jbe
pop
jle
mov
loope
mov
mov
and
cmpsb
stos
fldcw
ffree
sub
sahf
mov
push
ret
jno
mov
aaa
ljmp
and
scas
mov
mov
jge
or
adc
rclb
mov
xor
push
mov
in
mov
push
dec
ljmp
in
mov
cltd
adc
inc
xchg
xor
testl
dec
inc
mov
inc
jge
xor
sbb
adc
imul
loope
jle
aam
mov
flds
rolb
cmp
lcall
aad
shlb
jge
lock
fildll
pop
sbb
fwait
sub
loop
cmp
pushf
pop
inc
cmp
cmpl
push
test
inc
out
repz
pushl
shll
jmp
xor
test
mov
test
cmc
jle
jnp
pop
push
out
mov
sbb
outsl
cmpsb
push
mov
push
push
fists
xchg
jmp
cmp
bound
mov
or
int3
out
sbb
push
mov
arpl
movsb
js
mov
cmp
bound
daa
push
popf
stos
cltd
add
stos
gs
lret
flds
fsqrt
and
push
jbe
and
add
xchg
lock
jl
out
jb
fildl
ljmp
shl
jl
mov
mov
rcrl
out
cld
add
push
je
cmc
aaa
push
dec
clc
scas
insb
and
pusha
adc
jne
mov
movsb
stos
xchg
testb
xorl
popf
outsb
adc
or
imul
imull
sub
inc
clc
pop
lret
and
sub
sbb
fnsave
inc
push
jmp
insl
int
xchg
les
lret
jmp
daa
inc
or
aad
jecxz
aas
xorb
jbe
fcomps
xor
test
jmp
push
stos
add
lods
nop
enter
cmpsb
push
pop
mov
out
sti
lock
les
outsl
xchg
or
lret
movsb
aad
or
inc
cmp
push
inc
dec
insl
scas
lret
aaa
or
fcomip
jo
dec
daa
mov
movsb
mov
xchg
addr16
push
push
movsl
mov
dec
xrelease
cmp
jmp
jb
mov
adc
fwait
inc
dec
lock
sbb
jge
push
in
loope
inc
jl
pushf
lcall
rcl
push
jl
in
stos
or
ds
pop
cs
lods
pop
dec
inc
jnp
fs
xor
push
add
rolb
jbe
sub
fdivs
sti
out
push
lods
mov
enter
lds
es
int3
inc
xor
adc
divb
fwait
iret
out
push
and
loop
shl
out
jns
adc
push
ret
les
fcoml
dec
popa
sahf
sbb
add
cltd
mov
ret
jg
jae
cmp
and
jg
ljmp
inc
lcall
inc
test
lret
pop
out
jl
ds
add
jns
loop
jbe
andb
icebp
sub
in
cmp
push
push
nop
push
aas
inc
inc
inc
jo
dec
popa
pushl
std
ror
int3
dec
idivl
cltd
mov
movsl
mov
ja
sbb
push
jecxz
dec
subl
mov
popf
inc
scas
pop
inc
rcl
push
dec
push
push
out
mov
adc
movsb
fwait
scas
ficomps
mov
aaa
push
or
jge
leave
scas
ret
repz
push
movzwl
jnp
mov
into
stos
out
aam
sub
cmc
push
movsb
push
mov
popa
subb
push
inc
js
shlb
aad
jb
pop
xchg
mov
out
mov
repnz
pusha
dec
dec
pop
hlt
repz
add
rol
and
pop
nop
cwtl
inc
bnd
leave
cmc
cwtl
and
jmp
inc
out
or
xchg
in
pop
add
jnp
xchg
ss
xor
jns
adc
scas
jb
or
mov
test
fsubl
dec
mov
loop
imul
and
dec
dec
nopl
jl
sub
mov
jne
dec
mov
ss
pop
sbb
adc
mov
pop
sub
or
jns
dec
pop
fidivrl
xor
add
dec
cld
pop
pop
cmp
cmpb
push
xor
aaa
repnz
cmc
adc
lods
push
pop
mov
mov
mov
ret
jmp
sbbl
mov
push
aaa
lcall
les
xchg
roll
shll
cmp
or
dec
mov
xchg
xor
or
pusha
mov
adc
testl
insb
or
xorb
mov
lods
sarl
in
pop
std
and
cld
dec
sbb
aam
sbb
mov
mov
sbbl
enter
scas
push
fidivrl
mov
fldt
lods
pop
or
das
fnsave
push
pop
push
cmpsl
out
push
push
sub
cltd
mov
les
dec
mov
xor
and
std
fsubrl
cmp
inc
or
and
jmp
sub
sub
mov
or
inc
adc
faddl
scas
pop
lret
rclb
movsb
xor
xor
fdivrs
pusha
add
jmp
fs
adcl
ucomiss
lret
in
mov
push
and
adcl
jo
pop
out
rcrb
and
out
pop
je
sub
lds
aas
scas
xorb
dec
mov
xor
in
sub
and
int3
and
add
fsubrp
mov
xor
pusha
out
xchg
imul
in
push
int3
ret
jle
pusha
add
mov
fnstenv
cmpsb
aaa
push
lcall
xlat
inc
lea
imul
mov
cli
pop
adc
cmc
dec
cmp
imul
loope
lret
iret
arpl
sti
lods
push
aad
mov
push
xchg
sbb
cltd
shlb
push
stc
in
cmp
jp
cmpsl
add
sub
jb
adc
insl
out
mov
rcr
cmp
mov
pop
xor
jb
scas
arpl
data16
or
adcb
in
outsb
pop
jmp
jp
sub
jbe
adc
mov
jae
cli
jne
xchg
add
xchg
test
out
adc
pop
lock
add
movsb
movsb
orb
dec
pusha
and
mov
xchg
cmp
mov
jg
fbstp
add
add
mov
stos
cmp
inc
inc
jl
lock
mov
mov
mov
cmpsl
and
mov
mov
in
dec
xchg
aad
int3
xchg
es
ja
popa
xor
jmp
fs
xchg
mov
mov
into
in
pop
jnp
mov
mov
mov
pushl
sub
push
jb
cltd
xchg
adc
xor
testl
adc
test
add
xlat
mov
int3
mov
jbe
daa
in
dec
and
mov
leave
outsl
stc
mov
outsb
divl
sbb
jmp
inc
pop
or
push
fs
and
pop
push
add
cmp
jns
aam
lahf
negl
add
lock
stos
and
fmulp
aam
inc
pop
xchg
dec
add
jmp
inc
lahf
lds
int3
popl
test
shll
rcrl
xchg
lret
stc
mov
jl
pop
pusha
inc
xchg
and
mov
sub
cmp
cwtl
push
movsl
aas
int3
jecxz
jo
inc
sbb
loope
jle
xchg
add
mov
je
scas
test
into
repz
lcall
rolb
aas
sbb
and
stc
pop
jno
cltd
aaa
sbb
movsl
xor
xchg
adc
jmp
orl
cmp
cmpsl
pushf
jg
lock
mov
jp
repnz
sub
ficoml
mov
inc
cwtl
imulb
adc
mov
jbe
mov
push
pop
aad
push
mov
add
sub
stos
es
inc
icebp
int
mov
cltd
xchg
or
cmpsb
loope
cmpsl
jg
into
pop
nop
jmp
sub
mov
adc
vphaddubw
adc
je
cli
xchg
mov
add
xchg
dec
push
dec
xor
fs
lahf
loopne
pop
adc
xchg
mov
or
mov
fidivrl
iret
or
mov
mov
mov
mov
inc
ljmp
or
out
int3
mov
ss
push
mov
adc
sub
shl
inc
inc
and
jo
enter
js
sbb
mov
imul
repnz
xor
mov
adc
in
pusha
adc
dec
mov
sbb
test
gs
cmp
loop
jle
arpl
insl
mov
das
pop
cld
mov
out
xchg
xor
fsubl
inc
loopne
xor
imul
or
shl
xchg
fistl
mov
lds
lds
jmp
cmp
fcomps
mov
jnp
pop
xchg
add
jno
out
jnp
or
repz
xchg
loope
dec
sbb
mov
jle
jge
mov
fsubrs
pushf
nop
outsb
out
xor
mov
mulb
shl
insl
iret
and
inc
mov
cs
adc
inc
aas
jl
addb
fcompl
add
cmc
negl
cmpsl
int
jp
push
and
push
mov
stos
or
inc
dec
jne
in
dec
insb
imul
inc
add
dec
movsb
ljmp
in
ds
daa
cmc
inc
js
push
adc
push
dec
xor
xor
xchg
faddl
out
xlat
push
nop
xchg
cld
mov
fmul
cmp
inc
lahf
and
push
into
xor
fwait
ret
inc
and
cmp
test
pushf
movsl
ss
ret
insl
cmp
xchg
aad
hlt
sub
cwtl
xor
push
jo
dec
push
xlat
jae
sahf
jle
aaa
cmc
xchg
cmpsb
idivb
std
pop
inc
in
pushl
lods
xor
in
and
xor
cli
or
gs
add
fildll
test
mov
loop
popa
stos
loop
push
jge
rorb
push
jmp
fildl
add
jp
mov
je
mov
pop
or
mov
lahf
insb
adc
jb
sti
pop
xor
in
xchg
rorb
jnp
into
mov
cmp
mov
and
push
dec
xchg
outsb
push
movsl
js
xchg
mov
ds
mov
xor
loopne
and
push
or
xlat
jne
popf
rol
int3
lds
out
cmp
imul
inc
pop
xchg
int3
rep
and
push
xchg
or
jo
insb
mov
std
cmp
mov
daa
icebp
bound
jb
sub
xchg
mov
or
pop
into
loope
fdivrl
adc
fldcw
pop
sub
loop
roll
iret
mov
in
pop
fldcw
push
test
jb
jecxz
div
cmp
shl
add
std
xchg
xor
popf
cmp
jo
dec
into
repz
or
out
cmp
enter
movsb
mov
push
test
faddp
mov
mov
and
pop
loop
fwait
jle
or
or
sahf
push
or
jp
push
into
movsl
inc
in
adc
aaa
call
lock
ja
ret
sbb
outsl
push
xchg
lods
jae
iret
add
mov
or
sub
sub
js
pop
lods
jnp
or
inc
push
lret
inc
es
and
ljmp
inc
mov
xchg
imul
push
inc
je
int3
mov
cmp
or
xchg
and
add
jg
and
loop
jno
sarb
adc
mov
jge
dec
mov
xchg
sbb
in
jbe
addr16
pop
push
or
mov
add
xor
cmp
push
idivl
mov
mov
sbb
sub
mov
jmp
in
ret
shrl
sub
in
mov
mov
bound
stc
push
ret
test
inc
add
movsl
jae
sahf
scas
add
iret
lret
out
test
insl
movsb
aas
stc
cmp
lret
test
repz
push
ds
shr
push
cmpsl
xor
lds
int3
lods
icebp
mov
insb
jne
enter
cmp
in
pop
inc
push
movsl
dec
xchg
loopne
stos
xor
ds
push
jbe
and
rcr
icebp
adc
popa
in
xchg
adc
repz
repnz
jns
scas
dec
lret
pop
aas
xor
cmc
rclb
cmp
jnp
sbb
repz
push
jmp
jmp
xor
lret
and
sbb
mov
jbe
adc
adc
fmuls
mov
xor
stos
or
int3
xor
and
in
scas
xor
pop
pop
out
cmp
mov
js
push
scas
gs
xor
and
bound
fwait
dec
pop
add
or
xchg
stos
jmp
fbld
js
fldl
das
inc
jle
add
inc
int
pop
cmc
push
and
adc
pusha
pop
clc
cmc
cmpsl
in
xchg
es
ljmp
mov
add
dec
dec
insl
inc
adc
lods
icebp
or
rol
sbb
xchg
lds
or
pop
movsl
pop
mov
fs
call
cmp
jle
mov
lahf
nop
jb
hlt
xchg
sub
popa
daa
add
ficomps
ja
cld
pop
dec
mov
mov
mull
pop
mov
dec
push
and
or
sbb
sbb
pushf
outsl
or
repz
popa
pop
sbb
lock
mov
xchg
pop
mov
jnp
out
fcmovu
popf
or
and
scas
cmpsl
faddl
mov
shl
aad
sti
pop
adc
xor
push
mov
add
in
inc
lret
push
dec
gs
ret
push
out
jp
jmp
out
cmp
jne
stos
mov
scas
pop
push
add
jns
movl
movsl
cmp
les
xlat
mov
fwait
and
inc
adc
test
mov
popa
push
xchg
inc
jmp
inc
lds
mov
inc
dec
testl
fcompl
inc
add
xchg
xchg
jg
call
out
loope
jle
aad
shl
dec
inc
popa
xor
cmp
sub
jbe
add
dec
lcall
xorl
movb
xchg
bound
add
cmpb
jno
je
mov
dec
pop
push
lret
in
push
fldl
scas
add
repnz
push
repz
sub
fildl
cmp
xchg
mov
xchg
cmp
idivl
sub
lcall
mov
mov
sub
xchg
adc
fbstp
int3
sbb
mov
mov
adc
mov
jo
into
frstor
bound
sub
cmp
dec
in
out
fistps
out
lods
mov
les
pop
sbbb
add
cmpsl
jle
rcr
or
mov
dec
arpl
mov
in
xchg
or
push
into
pop
jecxz
ret
in
or
cmp
test
xchg
xlat
add
icebp
psubusw
xor
pop
lods
fcomip
sub
sahf
jle
fsubs
cmp
scas
pop
jno
ret
xorl
lcall
repz
out
mov
iret
mov
mov
jge
in
lret
aas
jbe
stc
daa
into
cs
cmp
push
push
mov
jnp
xlat
lret
arpl
mov
sbb
pop
and
jle
sahf
adc
xor
cwtl
mov
and
lret
andl
adc
sbb
aam
or
cmp
cmpsl
call
xchg
test
shlb
mov
repnz
jecxz
or
mov
hlt
mov
idivl
push
or
sub
sahf
mov
mov
insb
push
pushf
enter
xor
or
iret
mov
das
mov
loopne
or
stc
bound
insb
imul
lods
mov
mov
dec
xor
jno
inc
shl
jecxz
mov
mov
cmp
inc
or
sub
inc
jge
clc
add
xchg
call
in
pushf
push
in
std
mov
cmp
sub
mov
sub
js
xchg
subl
cmp
ret
in
sbb
pop
jecxz
pop
inc
xchg
jnp
and
xor
mov
mov
leave
int3
jg
imul
out
cmp
and
mov
jbe
xchg
push
mov
testl
cmp
add
jne
inc
mov
fs
sbb
dec
sub
cld
jmp
sarl
xchg
cltd
into
in
loope
jb
in
cmp
out
std
mov
push
and
cmpsb
adc
sar
notl
sub
xchg
and
dec
outsl
enter
mov
sarb
shlb
and
stc
adc
inc
sub
fistps
in
out
jg
cmp
xchg
sti
daa
clc
push
and
push
push
pop
in
inc
jg
sbb
popf
xchg
nop
push
dec
leave
cmp
inc
outsb
mov
xor
cmc
lcall
jl
push
mov
popf
dec
mov
outsb
jo
xchg
outsb
iret
cmp
popa
or
test
lods
xchg
aaa
jmp
push
sub
cltd
xchg
adc
xchg
mov
lahf
xchg
out
pop
mov
jmp
mov
inc
push
dec
lret
out
adc
cmp
push
outsl
pushf
cmc
jl
dec
push
outsb
je
jne
push
push
inc
nop
mov
and
pop
cmp
xlat
push
stc
fidivs
cld
cmp
xchg
adc
into
xor
cmp
mov
add
xor
pop
cmp
inc
mov
hlt
mov
xor
rcrl
xor
cmp
frstor
dec
cwtl
fnstcw
cld
xor
mov
in
clc
sub
sub
dec
stos
mov
xor
imull
shll
push
push
dec
add
sub
mov
in
scas
icebp
dec
mov
jns
clc
xchg
popf
sbb
aam
pop
pop
push
jp
sbb
out
or
or
shrl
push
sub
adc
sub
fildll
lods
inc
adc
out
xchg
movsb
pop
enter
mov
js
mov
mov
mulb
in
and
adc
xchg
into
inc
out
cmc
adc
pushf
in
scas
fxch
jno
sbb
mov
pop
lock
int3
mov
or
jo
xchg
push
shlb
cmp
mov
adc
mov
test
shll
and
or
leave
fbld
pop
cmp
xchg
gs
hlt
shrb
cmc
fwait
test
js
mov
test
aaa
fs
dec
loope
mov
mov
das
out
int
lcall
inc
jne,pt
and
lret
mov
mov
mov
mov
insb
nop
pop
addr16
imul
xchg
xchg
or
dec
inc
aam
inc
addr16
pushf
lds
dec
lret
sub
clc
mov
lcall
mov
push
shr
jno
mov
xchg
call
call
xor
cwtl
rcrl
sbb
dec
gs
mov
insb
mov
push
xchg
cmp
jl
mov
loope
pavgb
frstor
mov
jnp
mov
lods
loope
add
icebp
jo
mov
mov
movsb
inc
lea
cmpsl
adc
xor
mov
push
mov
push
or
and
dec
icebp
shrl
or
mov
inc
sar
pop
pushf
stos
mov
xor
adc
rorl
scas
repnz
popw
adc
stos
pop
rcl
xor
jb
pop
mov
ja
sub
inc
es
clc
loop
xchg
mov
shlb
mov
xorb
lds
dec
adc
fidivl
out
test
pop
outsb
mulb
mov
insb
jb
cmp
xor
das
icebp
mov
xchg
adc
leave
xlat
lcall
adc
jne
adc
cmpsb
xchg
jp
lahf
inc
jnp
enter
popf
cmc
popa
ret
repnz
and
and
lahf
mov
mov
mov
xor
leave
pop
dec
add
jl
or
sbbl
popf
dec
jbe
test
jg
stc
or
aas
andb
loop
and
mov
cmp
je
mov
mov
add
push
mov
les
es
push
ljmp
into
das
fisubrs
mov
imul
jmp
mov
sub
mov
pop
imulb
ljmp
lahf
and
push
jmp
mov
ret
pop
dec
sbb
cmpsl
mov
cli
int
pop
loopne
mov
loop
rcrb
xorb
fwait
int3
gs
mov
fucomp
inc
add
inc
addr16
sub
movsl
loop
and
orl
je
aaa
bound
fs
inc
enter
pusha
iret
adc
jno
xchg
ljmp
sub
xor
mov
je
lahf
mov
jle
and
inc
cmp
jg
jg
test
or
cltd
repnz
cmpsl
mov
dec
test
out
lods
lret
mov
aas
dec
in
sarb
das
imul
push
lock
adc
and
cmp
sti
xchg
enter
gs
xor
cmc
pop
inc
je
pop
push
popf
loop
cmp
add
jns
insb
mov
sub
pop
daa
xor
mov
sbb
sub
fldcw
daa
pop
xchg
orb
mov
sub
mov
add
loopne
aas
jns
sub
fmulp
cmpsb
pop
mov
sbb
in
push
repnz
lds
sbb
fnstsw
mov
test
mov
or
test
or
hlt
daa
lahf
je
je
push
out
and
xor
xchg
push
pop
add
in
mov
cmpsl
and
imul
notb
mov
rclb
fcoml
arpl
push
sub
lret
pop
imul
sbb
add
in
mov
jp
xchg
cli
nop
dec
cmp
adc
mov
fisttps
cs
xor
push
push
sbb
pop
lea
mov
mov
popf
das
push
aas
out
movsl
dec
mov
inc
movsl
inc
xor
dec
call
xchg
xlat
fwait
inc
xchg
cmp
test
jp
lods
ja
jns
push
mov
pushf
aad
push
cwtl
mov
gs
push
sbb
mov
xor
sbb
ljmp
jbe
or
mov
cmp
pop
cmp
mov
icebp
fildll
inc
stos
sub
pop
add
adc
aam
enter
xchg
inc
and
sub
fs
cs
cli
mov
pop
ret
out
jg
xchg
jo
mov
jp
stos
mov
out
adc
mov
sbb
ljmp
push
jbe
imul
outsl
clc
jmp
pop
pop
pop
jg
xor
ret
jmp
rcrl
negb
push
mov
push
and
or
fsts
jg
add
sbb
orl
and
hlt
dec
xor
xchg
mov
arpl
mov
lret
cwtl
insb
mov
icebp
sbb
enter
in
mov
jmp
push
push
std
cmpsl
cmc
push
push
rorl
decb
aad
insl
push
jmp
xor
jge
cmp
fwait
repz
out
out
scas
push
in
or
add
mov
add
ret
jbe
lds
xor
repnz
notl
divl
sbb
in
fwait
je
fadds
lods
pop
or
xchg
and
mov
js
pop
mull
mov
cmp
or
xchg
fisubrs
scas
inc
lods
push
add
xor
pop
jb
idivb
es
add
add
inc
ds
loopne
xchg
ljmp
jns
and
fs
ret
pop
mov
in
aam
jae
sbb
xchg
int
cltd
lcall
jmp
add
scas
xchg
dec
in
cmp
mov
push
lds
jno
test
jo
cmpsl
stc
dec
mov
mov
jnp
cmc
cltd
mov
daa
sbb
mov
mov
pop
imul
cmp
les
sti
sub
jns
xchg
lahf
jno
xchg
repnz
cmc
cmp
adc
xor
loopne
les
cmpsl
in
add
daa
mov
jns
sbb
add
xor
test
fsubl
lret
lock
nop
repnz
aad
add
lods
pop
sarl
adc
jno
int3
xor
pop
jo
test
dec
inc
pop
xor
dec
push
cmpsl
scas
cli
ja
ss
jp
aad
ss
icebp
xchg
cmpsb
mov
jno
gs
movsl
xchg
cltd
pop
pop
xor
fldcw
lods
or
and
sub
and
push
jbe
shlb
cmpsb
xchg
scas
insl
out
stos
lock
aaa
dec
xchg
pop
pop
xchg
push
inc
or
mov
push
and
and
jp
mov
or
idiv
int3
jg
in
movsb
aam
lcall
xor
push
dec
mov
dec
bound
add
scas
adc
xchg
sti
and
or
xchg
cmpl
ja
push
sbb
fwait
jge
or
mov
push
stos
sub
adc
sub
loope
js
pop
add
lcall
out
pop
pop
mov
mov
jl
pop
mov
jnp
call
cmp
add
mov
mov
daa
mulb
add
mov
insb
add
mov
push
mov
push
pop
mov
dec
xor
adc
aas
and
leave
shlb
insl
adc
out
fs
and
mov
or
out
aas
and
add
mov
push
add
dec
lahf
or
outsl
pop
clc
mov
faddp
cmp
xchg
push
or
ret
pop
mov
or
jle
ljmp
mov
mov
call
fisubrl
jnp
out
or
sbb
faddl
loope
decl
scas
mov
sbb
sahf
pop
movsl
andb
add
or
sti
insb
lds
in
xchg
cmp
push
loopne
dec
mov
stc
xchg
add
test
push
lret
insb
sub
or
sbbl
fwait
in
mov
pop
xchg
loope
mov
jp
ss
into
outsb
mov
rclb
fiadds
inc
stos
dec
push
sbb
enter
pop
shlb
lock
scas
jae
repz
mov
jb
cmp
xchg
dec
jg
in
loope
mov
scas
push
dec
pop
dec
divl
je
in
repnz
mov
cli
push
pusha
cmp
or
and
repnz
push
sub
sarb
sub
sub
xchg
jae
sub
ljmp
push
test
mov
xchg
xor
push
lods
jbe
xchg
rolb
sub
out
fisubl
push
shrb
insl
jl
cmpl
fnstsw
jg
sbb
cwtl
cmp
je
jmp
pusha
dec
std
jno
fistpll
adc
popf
bound
cmp
jp
sbb
daa
push
dec
pop
popf
nop
and
adc
add
lods
cmp
xchg
jne
xor
mov
mov
ljmp
test
subb
xor
xlat
jae
repnz
imul
cltd
addb
scas
or
or
jl
ficompl
stos
fldenv
dec
or
xchg
jno
pop
xchg
push
push
ja
push
or
xchg
sub
adc
outsl
mov
sbb
push
sub
cld
mov
test
jb
add
sub
push
fstpt
jge
sbb
ljmp
mulb
scas
push
cmp
push
lods
movhps
jl
or
mov
add
sub
dec
aaa
push
jns
or
dec
mov
add
jb
out
jmp
push
les
loop
out
je
mov
sbb
jno
cmp
lds
xchg
gs
xor
test
pxor
loop
mov
leave
aaa
jae
mov
cmp
pop
es
scas
jl
out
imull
xchg
inc
adc
aam
pusha
and
jo
pusha
xchg
cs
xchg
dec
lods
xor
mov
jbe
jecxz
mov
xor
xchg
add
mov
sub
in
jmp
sbb
xor
mov
mov
xlat
inc
jp
and
dec
fbld
xchg
jno
jae
lea
sbb
aaa
fcomps
and
scas
xor
mov
ret
fisubrs
or
enter
mov
pop
bswap
mov
dec
fsubrs
sbbb
push
loop
fisubl
and
pushf
int
fwait
test
fsubs
mov
dec
repnz
inc
cmp
dec
jb
out
sbb
xchg
adc
add
and
cmp
mov
cmp
daa
lods
inc
out
inc
aam
or
lret
xchg
add
dec
jmp
and
sub
mov
jmp
popa
jp
mov
mov
imul
cwtl
pop
push
pop
mov
test
pop
jecxz
daa
inc
push
and
into
inc
pop
mov
pop
iret
and
jge
movsl
pusha
mov
push
cmp
cmpsb
movsl
negl
cltd
jbe
sub
in
sub
lret
imul
pop
xor
xchg
jae
sub
xor
push
mov
pop
dec
mov
imul
jecxz
pushf
lahf
cmp
data16
xchg
push
out
js
enter
pop
lret
test
cmp
dec
mov
sub
sub
jnp
insb
xor
sti
fwait
cltd
add
in
fisubrl
fidivrs
dec
xor
clc
inc
stos
add
mov
mov
sub
mov
cmp
test
pop
or
adc
les
or
jbe
xor
adcl
jbe
xchg
aas
dec
repnz
shrb
dec
push
dec
jbe
sub
push
inc
dec
aaa
sub
leave
loop
jno
mov
jnp
cmp
add
ret
and
mov
dec
xor
dec
xor
adc
mov
xor
pop
cmp
mov
add
mov
sub
addr16
jmp
inc
in
aad
jmp
xchg
lock
loop
das
dec
in
push
ret
add
xor
adc
inc
sbb
and
iret
sbb
xchg
sbb
dec
outsb
dec
sub
fldt
aam
pop
xor
iret
or
loopne
lds
mov
stos
and
ret
inc
xchg
jge
repz
aas
jmp
cmp
push
fisubrl
lds
repnz
dec
mov
sbb
and
add
in
lods
pop
stos
dec
cltd
xchg
xlat
jne
leave
popf
push
inc
bound
dec
cmp
sub
into
xor
lds
pusha
repz
inc
add
call
ds
daa
xchg
fadds
jp
leave
jl
mov
shr
sub
outsb
cmp
ja
cs
xchg
scas
push
sbb
pop
adc
dec
arpl
xlat
fstpl
cmp
inc
sbb
sub
gs
push
jl
cmp
or
pop
das
pop
aaa
pop
sub
pop
in
xchg
cmc
das
sub
sbb
lock
sbb
sbb
ret
sub
or
and
scas
push
cs
mul
push
jae
jb
xchg
outsb
adcb
loop
jecxz
jmp
icebp
pop
test
fldl
jl
fcompl
xchg
movsb
imul
xchg
sbb
jne
sub
jne
xorb
cs
xor
sub
arpl
ja
stos
lock
lods
jmp
cmp
sbb
lods
xchg
xchg
xchg
pushf
sbb
rcr
fwait
adcb
dec
adc
cld
sbb
nop
sub
jl
lds
cs
add
mov
in
fdivrl
inc
ljmp
int
lods
fcmovu
iret
fcompl
test
lcall
xchg
xchg
pop
ja
outsl
mov
fmulp
into
lahf
sbb
or
in
mov
mov
jg
test
add
nop
cltd
dec
xchg
dec
jle
rcl
mov
sbb
jg
cmc
mov
push
pop
push
sub
push
negl
cmc
jmpw
xchg
fdivl
jo
or
mov
int
ljmp
aas
lret
mov
adc
push
hlt
stos
mov
pop
push
cmpsb
shll
inc
into
shll
loop
clc
pop
jmp
dec
and
mov
mov
pop
inc
in
not
mulb
mov
push
push
test
int3
xchg
push
dec
mov
add
pop
gs
or
jmp
std
xor
xchg
xchg
test
call
loopne
add
mov
jbe
mov
pop
adc
pop
and
cs
fildll
fndisi(8087
pop
inc
addr16
lahf
dec
dec
pop
inc
call
cmpb
sahf
push
cmp
lret
ret
cmp
sub
ljmp
or
cltd
movsb
fcomi
xlat
fiadds
push
mov
adc
inc
inc
cmp
aad
xor
aad
dec
inc
mov
sahf
sarb
mov
adc
daa
xor
lea
xchg
lret
push
mov
jo
jge
dec
leave
mov
jns
xor
test
mov
mov
push
loop
push
mov
xor
sti
xchg
mov
sub
pop
out
mov
jb
adc
inc
push
lcall
mov
inc
lret
cmp
push
mov
jno
aaa
mov
mov
and
hlt
lea
and
shlb
sbb
test
arpl
add
mov
jne
add
push
adc
icebp
leave
jecxz
mov
in
pop
ficomps
cmpxchg
sti
rolb
shrl
mov
bound
in
cmpsb
cli
cli
popa
add
and
rorl
int3
mov
cmp
pop
fistps
jl
out
or
or
add
jb
repnz
rorb
pushf
pop
out
movsl
in
push
mov
sbb
xorl
shrb
fiaddl
xchg
xor
and
xchg
fisttpll
arpl
ret
ret
pusha
insl
mov
cwtl
inc
cs
dec
les
sub
inc
movsb
ljmp
loope
int
in
mov
dec
xchg
or
add
ret
repnz
and
ficoml
push
inc
cmpsb
pushf
sub
jnp
pop
and
jp
test
mov
stos
and
and
xchg
add
adc
mov
mov
sub
enter
nopl
addr16
jle
out
pop
sub
icebp
and
sub
dec
sbb
rclb
xchg
sbb
movsb
mov
cmpsl
jb
push
insl
xchg
mov
and
ss
ljmp
aad
daa
inc
out
stos
and
jecxz
or
pop
adc
sbb
add
push
cli
xor
xchg
jno
adcb
and
push
into
mov
out
das
lcall
scas
call
stos
sub
idivb
mov
sbb
mov
mov
mov
enter
mulb
stos
inc
jnp
ljmp
mov
jle
sub
lock
or
data16
leave
xor
roll
inc
lds
mov
pop
outsl
ret
or
gs
mov
movups
cltd
pop
xor
push
sbb
imul
lock
cmp
push
cs
xor
pop
lahf
and
mov
negl
xchg
jbe
mov
fisttpll
mov
jl
jmp
scas
fs
fwait
mov
sub
push
mov
jmp
mov
imul
and
test
mov
loopne
inc
mov
add
jno
pop
std
fmul
aam
sub
inc
cmp
adc
push
sub
dec
fistps
sbbb
fnstenv
xchg
cmp
fdivs
test
xor
dec
jg
xchg
jb
scas
and
push
lock
push
sbb
mov
out
mov
lock
out
aas
add
xchg
mov
dec
fistl
cmp
sahf
jg
stos
and
and
add
nop
cs
adcl
test
sahf
outsl
movsl
aaa
dec
fnsave
sarb
adc
loopne
mov
cmp
xchg
dec
ficoml
dec
pushf
sub
repnz
repnz
xchg
popa
push
out
test
mov
lock
sbb
jbe
ret
cmp
inc
mov
mov
jne
hlt
data16
cmp
adc
adc
fucomip
or
jae
in
sub
ret
bound
clc
idiv
jne
aaa
iret
jne
mov
sbb
outsb
into
mov
dec
inc
or
loopne
mov
and
out
add
add
jns
ss
mov
or
in
dec
cli
pop
roll
dec
xchg
out
test
sbb
shlw
ds
movsb
cmp
sbb
sbb
in
jl
xor
xchg
das
mov
enter
adc
and
jmp
inc
lock
daa
popa
fistl
sbb
mov
push
xchg
pop
sbb
cmp
in
mov
lret
aaa
scas
lret
ds
cld
repz
pop
mov
sub
stc
pop
repnz
sub
icebp
jge
push
arpl
in
pop
fsubrs
lods
jns
sub
adc
xlat
adc
jg
cwtl
xor
or
or
hlt
lahf
mov
das
scas
mov
xor
sub
mov
fdivrs
cmp
fildl
fsubrl
mov
ja
sbb
lret
mov
out
add
inc
mov
push
insb
fsubrs
sbb
movsl
or
ret
or
push
clc
lcall
cmp
mov
or
mov
popa
mov
ljmp
mov
es
push
jl
hlt
inc
cs
jae
cltd
cli
push
mov
das
add
add
jb
xlat
lods
sbb
es
push
lret
ret
pop
xchg
mov
test
cmc
xchg
sbb
adc
xchg
mov
shlb
jg
sub
pop
xchg
or
cpuid
xchg
push
add
movl
jo
mov
mov
cmpsl
iret
and
push
fs
xorl
add
dec
push
es
nop
mov
push
pop
andb
idivb
mov
pop
mov
push
les
dec
mov
and
pop
inc
sub
repnz
xchg
aam
mov
popf
fs
std
cmp
cltd
sahf
add
in
xchg
sar
mov
popf
movsl
dec
mull
std
xchg
cmpsl
push
call
les
xor
lahf
test
sub
sub
sub
xlat
call
mov
stc
mov
repnz
fidivs
xchg
lahf
js
and
mov
movl
push
pxor
dec
mov
int
mov
out
cmp
cmpsb
out
es
mov
es
sub
bsf
std
xor
xlat
mov
rolb
adc
les
adc
inc
cld
push
mov
inc
inc
scas
lret
ret
mov
fnstcw
or
mov
inc
roll
sub
push
push
jns
gs
sbb
adc
jecxz
pop
shlb
loopne
movsb
loope
fmull
iret
adc
mov
jge
lret
shl
xchg
dec
dec
inc
sahf
cmp
psubb
cmp
jno
xchg
xor
sub
out
jno
pushf
ret
rcll
dec
push
adc
in
lds
stos
stos
push
pop
ret
aad
test
push
mov
mov
push
jle
in
add
xchg
sub
or
jae
or
in
aas
dec
inc
and
mov
jnp
inc
xor
push
enter
cmp
and
mov
outsb
adc
dec
sahf
xor
ret
aaa
insl
std
mov
dec
or
or
jno
or
cmp
mov
fsub
push
dec
in
cmp
imul
jg
fdivl
jae
and
or
and
mov
loopne
out
pop
xor
les
jb
xchg
subl
in
ds
out
push
repnz
adc
jmp
and
add
adc
sti
das
ljmp
scas
xchg
push
sbb
push
mov
jl
jnp
push
xor
icebp
push
or
jae
xchg
xchg
rorl
stos
sarl
or
mov
xchg
or
inc
jnp
hlt
imul
dec
sub
loop
xchg
jbe
jbe
push
jbe
dec
out
test
xor
cmp
sub
jne
out
leave
jae
adc
nop
adc
cmp
outsl
dec
push
test
in
fucom
imul
call
pop
sub
mov
mov
jne
mull
addr16
out
or
aad
dec
inc
ljmp
bound
stos
xchg
test
xor
std
add
movsb
and
xchg
and
dec
aaa
mov
enter
cltd
dec
push
adc
out
nop
aad
imul
clc
push
mov
pop
mov
lods
clc
dec
pushf
rclb
jg
rcl
stc
aas
cwtl
inc
addr16
sar
lock
imull
mov
dec
xor
aaa
jg
or
jg
inc
sti
shlb
jmp
out
inc
mov
push
nop
ds
push
add
fcompl
xor
out
lock
pop
ss
sti
mov
add
mov
jns
push
repnz
pop
arpl
dec
ret
add
add
in
sub
and
cmpsb
fstpt
jne
xor
into
ds
movsl
xchg
jle
xor
pop
das
jp
cmp
mov
xor
stos
filds
push
ljmp
out
gs
test
stos
add
das
xor
outsb
adc
xorl
sub
inc
sub
pop
lock
sbb
loopne
ljmp
scas
adc
mov
cmp
insb
addl
cmp
not
mov
cmpsb
adc
push
aaa
fisubrs
mov
xor
xchg
loop
jecxz
sub
bound
aas
clc
stos
dec
daa
out
das
rcrb
cli
pop
sub
cmc
xchg
aaa
lcall
shrl
mov
cwtl
or
dec
pop
lea
mov
ret
shll
adc
in
addr16
jns
js
shll
push
cltd
les
push
fwait
lret
jle
cmp
add
mov
loop
mov
in
sbb
cmp
loop
cld
icebp
and
jl
cmp
jge
xor
sbb
mov
or
inc
jecxz
adc
cmpsl
jns
sub
mov
nop
xchg
fucomip
into
dec
jns
out
mov
ds
mov
mov
movsb
pop
fildll
cli
and
popf
or
push
dec
fdivr
outsl
pop
imul
push
scas
sub
xchg
mov
fcom
push
add
ja
push
ret
loope
scas
xchg
popa
sbb
pop
hlt
add
pop
or
xchg
ret
aas
or
mov
js
jns
xchg
mov
movsb
shrl
mov
inc
sub
mov
cmp
inc
in
add
div
mov
test
dec
fs
adc
fsubrs
mov
pop
cmp
cld
bound
add
loopne
inc
es
shll
jle
mov
inc
adc
ja
cld
lret
stc
xlat
or
mov
push
cld
popa
fistpll
sbb
xor
xchg
jecxz
scas
sbb
add
jl
test
call
stos
xor
insb
sarb
sbb
notb
loope
out
add
inc
fsubp
jmp
aas
in
les
sti
xor
repnz
outsl
stc
sub
repz
ds
dec
lods
push
adc
push
outsl
clc
jle
pushl
xchg
lods
test
data16
mov
stc
pop
cltd
arpl
imul
cltd
in
mov
jae
and
decl
mov
stos
mov
xor
pusha
xchg
fcmovne
in
pop
lret
push
dec
fcoml
push
and
jo
add
xchg
in
add
insb
ljmp
dec
mov
xor
pop
dec
mov
stos
push
xor
mov
mov
nop
mov
cs
add
push
xor
and
repz
daa
pop
jbe
pop
fdivrs
jmp
fwait
lea
hlt
inc
aam
loop
jbe
daa
inc
add
sub
fbstp
cli
call
mov
shll
jmp
add
jle
mov
divb
push
lock
enter
lods
mov
mov
sti
sub
test
xchg
sahf
sub
fwait
mov
hlt
shl
and
mov
mov
sub
dec
sbb
mov
fisubrs
stos
pop
push
nopl
mov
xchg
mov
sub
push
in
shrl
test
addb
addr16
mov
imul
jns
xor
mul
adc
ljmp
mov
shrl
enter
js
pop
jno
loope
outsb
popf
je
mov
int3
cmp
push
sub
xchg
jmp
jne
mov
dec
pop
lods
test
out
fistps
sbb
sub
mov
mov
push
dec
sbb
loope
cld
cmp
enter
in
incl
mov
add
sarb
push
bound
fwait
leave
imul
lret
sbb
test
jbe
sub
aad
movl
jle
lods
outsb
push
add
mov
xchg
jg
das
cmp
xor
sbb
rcr
nop
sub
lock
fsubrs
aas
push
push
dec
dec
and
lret
xor
rclb
push
mov
sbbl
adc
test
out
pop
sub
int
test
outsl
movsb
shlb
scas
sbb
xor
mov
sub
es
ja
or
loope
pop
xchg
stc
adc
stos
sub
inc
jo
sarl
je
adcb
mov
adc
xchg
movsl
inc
and
pop
mov
bnd
cmp
xchg
fs
lds
push
sub
icebp
cmp
cmp
sub
pop
mov
sbb
les
ret
rcrl
lods
dec
xor
fisttps
in
loop
pop
fcmovne
lcall
push
aad
repnz
sti
mov
inc
subl
mov
mov
fisubs
xor
lcall
pop
pop
mov
out
push
xchg
pop
scas
dec
cmp
xchg
push
xchg
in
imul
arpl
mov
lcall
outsb
or
popa
inc
divl
ss
cmpsb
outsb
or
adc
out
ljmp
int
add
std
mov
lahf
mov
xlat
jb
shr
mov
data16
mov
xchg
or
call
push
inc
inc
cltd
popf
js
into
inc
inc
repz
fstps
push
movsl
sub
adc
push
lods
repnz
push
xor
cmp
xor
push
sub
addr16
ljmp
int3
leave
aaa
sahf
or
add
cmp
mov
dec
rclb
mov
sub
idivb
cmp
clc
loope
js
mov
inc
jns
paddb
adcb
pop
mov
enter
mov
cli
scas
push
or
and
adc
sub
stc
in
push
jno
repz
and
out
loop
out
stos
popa
mov
dec
mov
sub
lcall
daa
pop
sub
pop
sbb
ret
xchg
enter
pop
ljmp
push
pop
enter
xchg
stos
into
addr16
jg
lret
test
inc
bound
xor
test
add
shr
gs
lds
mov
imul
mov
jp
adc
in
es
stos
dec
xorb
mov
repz
fs
xor
add
or
push
lret
pusha
imul
fnstenv
lods
sbb
mov
negl
jae
scas
sbbb
push
movsb
fwait
std
roll
jmp
ficompl
pop
ljmp
cld
push
push
into
lret
pushf
std
fistl
je
sbb
push
lods
fs
dec
cmpsb
popf
pop
push
fdivl
mov
out
das
inc
in
insl
repz
dec
push
ret
out
aas
and
idiv
fnstsw
pushf
in
mov
sbb
stc
mov
movsl
mov
push
stc
popf
adc
jbe
iret
arpl
xor
mov
sbb
xchg
add
subb
cli
sbb
fwait
out
pop
jb
mov
inc
insl
lods
insb
push
je
jle
addl
xchg
sar
add
imul
ja
and
mov
jne
daa
mov
ud2
pop
popa
adc
je
add
aas
arpl
pop
nop
mov
add
cmpsb
ljmp
inc
lcall
sbb
es
cmp
sub
push
mov
push
and
add
mov
push
icebp
movsl
cli
and
popa
rolb
cld
iret
testl
cmc
sbbl
in
mov
add
rorb
mov
dec
pop
jns
mov
lea
gs
mov
mov
popf
fimull
pusha
xchg
pop
mov
sub
and
jo
and
cmp
dec
in
jp
lods
xor
inc
sbbl
pusha
negb
sahf
cmpsl
jne
icebp
xor
fstpl
icebp
add
sub
test
insb
inc
aad
jns
sbb
ret
nop
mov
out
mov
mov
pop
pushf
out
and
outsb
mov
push
lret
je
in
jp
dec
out
inc
mov
enter
adc
out
loopne
dec
sub
mov
fs
cmp
push
or
fs
push
mul
aad
mov
out
pop
pop
xlat
fbstp
popa
push
jbe
jno
pop
dec
in
sub
sub
push
test
xor
ljmp
push
stos
adc
xchg
dec
leave
arpl
xorl
fs
cmp
fxch
mov
nop
hlt
xor
ss
insb
loope
insb
xor
or
lods
fcmove
aaa
mov
gs
and
lds
pop
popl
xor
add
fidivl
cld
cmc
bound
aas
aad
dec
or
adc
idivb
adc
inc
popa
sub
xor
rorb
hlt
cmp
push
pop
or
popa
xorl
cmc
xchg
sbb
call
into
mov
pusha
arpl
jg
fstps
fists
ds
mov
scas
add
out
loop
push
cmp
mov
pop
cs
mov
pop
popa
xchg
arpl
imul
sahf
or
stc
inc
mov
mov
in
mov
xor
ss
es
mov
ja
lret
xchg
stos
movsb
lods
fsubs
mov
xchg
add
push
cmp
xchg
mov
adc
fiadds
out
and
imul
enter
fstpt
aad
pop
inc
ret
xor
xor
or
fwait
aaa
dec
cltd
xor
xchg
imul
or
cmp
fcompl
mov
es
mov
xor
popf
push
mov
pop
lods
lret
negb
pop
sub
and
pop
lea
sarb
jno
or
cmp
or
scas
fistpl
jmp
jnp
inc
pusha
repz
pushf
pusha
and
cs
fiadds
xchg
into
loopne
mov
or
cmc
and
xchg
mov
mov
sahf
stos
push
and
mov
sbbb
pop
add
clc
lock
mov
xchg
jp
xchg
mov
js
xchg
setle
idivl
daa
lret
cmp
inc
cmc
xor
aaa
dec
xchg
xchg
imul
cltd
popa
fs
movsb
negl
jp
add
pop
jno
mov
imul
loopne
xchg
leave
fcmovnbe
mov
or
pushf
lods
cmp
adc
sahf
aad
add
mov
push
add
out
insb
in
cld
nop
mov
push
scas
int3
cmp
cltd
shl
sahf
sbb
mov
testb
push
xchg
add
sub
or
mov
pop
cs
frstor
sbb
sub
stos
xchg
mov
popa
mov
enter
or
inc
pop
pop
push
xchg
jmp
fnsave
add
mov
imul
ljmp
jecxz
mov
push
dec
cmpb
jmp
pop
mov
imul
mov
mov
xchg
stc
mov
sbb
inc
sbb
fwait
enter
iret
cmp
sbb
repz
mov
fisttpl
mov
push
xchg
push
or
inc
inc
iret
fidivrs
dec
imull
jns
push
inc
jp
dec
fwait
rcrl
adc
aas
mov
lock
cmpsl
int3
stos
data16
ficoms
cmp
ja
sbb
dec
out
mov
sub
lahf
mov
insl
xchg
bound
sar
sbb
lahf
xchg
fwait
xlat
xor
dec
leave
and
ss
stc
add
andl
inc
dec
in
xchg
inc
push
bnd
fisttps
mov
popa
cmpsl
loope
add
rcll
cmpsl
xchg
ret
mov
push
xor
dec
in
sahf
aad
push
mov
les
cmp
push
out
xor
xorb
sub
sub
jne
lahf
pop
xor
xor
sar
lret
popf
xchg
adc
cs
sti
setne
mov
push
lods
jns
sbb
xchg
pusha
aam
in
jge
std
scas
push
es
jge
pop
aad
enter
cltd
mov
cmpsb
adc
xorb
aaa
outsb
lea
dec
sub
xor
cli
repz
sarb
mov
xor
lds
and
and
daa
loopne
push
dec
sahf
pop
sbb
incb
hlt
xchg
cmpsb
push
popl
neg
mov
lret
or
fisubl
jl
or
out
xchg
pop
xchg
jecxz
sbb
dec
es
pop
mov
test
push
xor
subl
dec
lods
push
jp
and
dec
out
dec
decl
imul
fstpl
mov
push
pushf
pop
lea
xor
and
push
test
mov
jns
jg
dec
iret
sbb
ja
push
xchg
mov
pop
cmpsl
out
stc
popa
sbb
jl
push
cltd
cmp
push
adc
pusha
or
sarl
in
add
fs
inc
in
jbe
jle
andl
mov
jns
rcrb
loope
dec
pushf
mov
ret
dec
push
ljmp
lcall
scas
dec
pop
xlat
xor
dec
sub
jns
lea
sub
rorl
push
lds
pcmpgtd
inc
push
xor
inc
fsubs
cwtl
inc
cmpsl
lods
cmp
push
xchg
pop
popa
inc
push
les
xchg
mov
push
cmp
dec
pop
popf
shrb
filds
js
xor
test
lods
dec
lock
mov
jecxz
aaa
push
mov
xor
fcmove
ljmp
cwtl
xor
stc
pushf
fsubrl
dec
jnp
out
fidivl
adc
cwtl
cmpsb
scas
jmp
jmp
aad
das
mov
rcrb
sbb
jecxz
cmp
mov
fistpl
sub
sub
fisubs
sub
iret
mov
dec
sbb
fdivrs
js
aam
jecxz
pushf
movsb
bound
rcl
std
cmc
cmp
or
inc
sbb
loope
fnstenv
jecxz
adc
loopne
and
mov
mov
sub
sbbb
jmp
push
lret
loop
or
stos
or
int
jmp
adc
sub
xor
xor
enter
inc
push
shlb
pop
push
inc
dec
push
push
add
mov
and
jnp
adc
testb
or
test
xchg
mov
sarb
jle
fsubrl
pop
es
mov
sbb
add
and
cs
stos
lcall
fcmovnu
test
mov
ljmp
in
jg
ds
xor
add
xchg
inc
bound
push
jbe
imul
xor
push
stos
addr16
xor
lcall
dec
fnsave
call
sub
fistpll
mov
jle
movsb
iret
jne
rorb
lahf
loop
pusha
pop
hlt
xchg
xchg
cs
ja
fdivrs
cli
cmp
push
xchg
adc
out
rcrl
push
sub
repz
ficomps
push
pop
out
sbb
mov
mov
sub
add
movsb
aas
ret
and
cmp
xor
mov
clc
jge
arpl
xor
shll
nop
cmp
xor
stos
jecxz
mov
sbb
sti
out
dec
lret
cmp
xor
lods
pop
sbb
in
leavew
jno
cld
std
cli
xchg
movl
mov
and
adc
orb
aas
loopne
insl
scas
mov
jae
pop
dec
jle
lea
loop
in
mov
inc
aas
dec
lds
fdivrl
aam
cmp
iret
push
pop
stos
stos
xchg
das
pusha
je
add
pop
or
and
cmp
in
lea
in
sbb
adc
inc
or
movsb
aad
adc
sub
add
cmpb
dec
or
sbb
adc
push
popf
xor
scas
mov
movsl
jle
add
cwtl
mov
es
test
mov
lock
fists
sbb
pop
xlat
mov
aas
gs
cmp
pop
pop
iret
push
jmp
push
mull
js
test
stc
shll
pushf
jns
lds
int3
daa
lcall
xor
xchg
adc
xchg
mov
xchg
subl
mov
out
mov
stc
and
sbb
pop
or
lods
push
shlb
inc
ret
mov
sbb
aam
cmp
jnp
stc
jno
test
std
lock
push
inc
mov
push
fldenv
or
int
pop
out
shl
push
cltd
xchg
aaa
jbe
xchg
cmp
out
and
ret
add
cltd
xlat
notb
out
xor
and
pop
mul
movsb
adc
insl
icebp
xor
pop
mov
xchg
xor
cmp
xor
mov
xor
dec
rclb
jno
add
cwtl
mov
fists
shrl
imul
popa
add
push
lcall
lahf
shlb
xor
ror
xor
scas
cltd
je
pop
xchg
push
inc
cmp
pop
movsb
jecxz
xchg
or
pshufw
outsb
mov
js
adc
add
and
mov
inc
jmp
xchg
ds
inc
dec
mov
setge
mov
pop
loop
adc
cltd
jb
sbb
add
fistl
or
cmp
ret
mov
push
in
add
aas
lock
in
lcall
pop
sbb
shlb
sti
mov
loopne
pop
dec
fcmove
push
jno
mov
call
mov
scas
cmp
xor
ret
lret
imul
mov
cmp
push
popf
sbb
xor
jo
jns
add
jnp
push
push
jge
popf
aam
ret
sub
cmp
pop
adc
push
sub
ret
int3
inc
jns
gs
dec
fadd
cmpsl
js
pmullw
adc
dec
hlt
fbstp
nop
mov
and
jnp
cs
jp
lock
fistps
pushf
mov
push
into
push
lahf
pop
dec
pop
mov
js
popf
push
mov
pop
xchg
imul
jns
sub
aas
shrb
cmp
xchg
cmpsl
mov
cmc
mov
mov
fstpt
mov
mov
sub
mov
mov
iret
cmpl
adcl
push
jne
sub
lret
js
jbe
add
shlb
jmp
vmovaps
add
scas
jbe
xchg
fsubl
pop
cmp
icebp
add
xchg
jge
inc
jmp
pop
popf
arpl
lret
adc
cmpsl
mov
cmp
pshufw
insl
das
les
fucomp
insb
loope
popa
and
cmp
popf
and
mov
dec
sub
mov
xchg
cmp
pop
popf
sbb
sbb
fwait
in
ljmp
or
aaa
jg
aad
imul
xchg
std
inc
fidivl
xlat
fsts
movl
adcb
lock
or
mov
inc
jecxz
xlat
mov
push
push
sbb
inc
enter
es
movsb
xor
movsl
xchg
sub
push
pop
inc
je
hlt
out
int3
mov
mov
into
out
popa
bound
cmp
data16
shlb
repnz
xchg
xchg
int
mov
jl
scas
fisttps
xchg
add
rolb
ret
lret
cmp
daa
xchg
mov
imul
and
fsubrs
sub
scas
loopne
add
and
out
lock
testb
out
adc
xchg
and
outsb
sub
fildll
cmp
pop
idiv
mov
mov
sbb
les
out
xchg
xchg
mov
cmpsb
mov
jo
fbstp
xor
aam
dec
add
cmc
test
fidivl
add
decb
push
cmc
mov
sbb
loop
xor
push
cltd
js
sbb
test
sbb
popa
and
jo
mov
xchg
addr16
pop
xor
jg
add
enter
loop
in
mov
pop
jl
push
pop
cmpl
mov
xchg
sub
enter
pop
lcall
xchg
sub
jb
dec
dec
lods
sbb
sbb
mov
into
arpl
loop
add
cltd
adc
loopne
cli
scas
cmc
pushf
xchg
mov
repz
or
dec
adc
call
sub
sbb
adc
lcall
ret
dec
push
and
mov
jnp
dec
xor
add
inc
mov
lock
pop
xor
mov
loope
sub
xor
sahf
cli
mov
rorl
cltd
clc
jnp,pt
es
jecxz
mov
outsl
pop
mov
lcall
es
loope
push
enter
dec
rclb
push
pop
addb
jmp
bound
pop
mov
inc
push
popa
and
sarb
push
push
imul
scas
cmp
out
sub
lahf
ret
sub
test
lcallw
cmp
xor
imul
lcall
jnp
dec
es
fmuls
ds
cmp
jae
xor
and
ljmp
sbb
pop
adc
lods
push
in
shll
rcll
inc
cmp
ljmp
cli
mov
aad
iret
xchg
dec
aad
mov
std
push
pop
xchg
cs
lret
lock
cmp
mov
aaa
jbe
push
inc
add
movsb
push
push
mov
pop
xchg
inc
int
ja
add
push
xchg
pop
aam
mov
xchg
bnd
bound
jmp
sbb
dec
mov
jge
xchg
sub
es
stos
and
cmpsb
push
rep
inc
ret
bound
dec
clc
sti
inc
mov
push
push
stos
movsb
cmpsb
xor
and
shll
xor
out
cmpsl
or
lahf
cmpsl
imul
mov
negb
test
fsubrl
push
jnp
push
pop
and
into
roll
into
clc
or
cmp
push
in
mov
js
mov
mov
scas
fists
call
mov
sbb
mov
imul
jmp
and
cwtl
movsb
loopne
nop
pop
in
js
push
shll
inc
xchg
sbb
jl
sbb
ds
mov
mov
dec
js
fwait
lret
div
out
es
cwtl
jo
jl
add
int3
stc
and
scas
dec
mov
mov
jbe
cmp
inc
jge
cmp
je
xlat
fcom
mov
int3
enter
mov
push
sarb
and
stc
bnd
pusha
jg
cmp
bound
test
hlt
cmpl
into
fdivs
add
mov
lods
mov
xchg
pop
pushf
loop
xchg
push
bound
jno,pn
add
pop
test
fsub
jge
ljmp
imul
dec
repnz
ret
pusha
sbb
jno
push
aad
xchg
sub
jnp
push
cmpsl
icebp
dec
dec
divl
dec
xlat
add
xchg
fbstp
js
push
sbb
insb
dec
sbb
enter
xchg
sbb
shll
jecxz
pushf
pop
out
cld
and
ret
dec
sbb
add
ret
xor
mov
inc
test
test
pushf
in
xchg
adc
inc
add
roll
mov
adc
in
repnz
mov
clc
dec
xchg
push
add
xor
pop
stos
loopne
popf
pop
testb
div
daa
les
xchg
nop
and
xchg
stc
sub
jbe
sti
call
sub
std
pushf
lds
push
arpl
mov
icebp
adc
arpl
jge
data16
add
dec
ljmp
pop
push
insl
mov
test
push
enter
leave
fsubrs
or
add
movsb
in
in
fiadds
or
push
push
outsb
sub
xlat
pop
imul
inc
push
in
nop
cmpsb
mov
jno
and
mov
rorl
jnp
xchg
lds
cli
xor
or
push
mov
sub
repnz
pop
cmp
add
pop
and
push
shl
iret
ss
mov
ret
xchg
pusha
xchg
gs
or
aaa
cli
sti
add
lods
pop
add
or
divl
mov
movsl
cmp
testl
or
lcall
mov
outsl
adc
incb
stos
out
xchg
inc
xchg
push
das
shll
sbb
pop
stc
mov
addb
movl
cmpsb
cld
dec
inc
mov
jle
insl
stos
xor
xor
xor
adcl
ret
xor
xor
push
add
cli
adc
or
sbb
cmp
loopne
sbb
int3
xchg
pop
iret
cmc
mov
out
xchg
out
xchg
stc
and
or
test
test
int
repnz
or
push
lcall
or
push
insl
ret
sarb
mov
add
mov
cmp
lea
faddl
int
fsubl
fwait
hlt
inc
test
mov
mov
mov
jp
jl
int3
js
adc
mov
xor
stc
jle
dec
pusha
std
cmp
jbe
jnp
lahf
loope
jge
xchg
sbb
xchg
das
or
cmpsl
dec
arpl
add
ret
mov
jl
repz
add
movsl
dec
sbb
pavgb
subl
hlt
mov
notb
iret
push
sub
mov
xchg
push
xchg
aad
xchg
mov
ret
ffree
popf
sbb
cltd
or
lock
sbb
push
xchg
or
int3
jle
sub
xchg
sbb
cmp
jno
arpl
sahf
cmpsl
pop
xor
sub
leave
dec
fildll
ljmp
divl
adc
inc
dec
mov
insb
lahf
ret
sbb
and
push
adc
sti
int
adc
sbb
mov
sub
mov
nop
in
cmp
cmpsb
jno
push
test
sub
mov
mov
stos
mov
inc
pop
lret
cwtl
cld
cmp
popf
scas
xchg
cmp
aam
xor
mov
jo
xchg
mov
addr16
test
inc
loopne
out
or
popf
das
roll
pop
test
lret
mov
aad
arpl
pop
jno
sub
mov
mov
cmp
xchg
stos
pop
xor
xchg
push
ror
mov
lret
scas
lock
or
sbb
or
fnstcw
test
dec
mov
lahf
std
mov
xchg
out
pop
cwtl
pop
jmp
test
aam
test
sbb
cwtl
push
mov
push
inc
loop
lds
sub
mov
loopne
mov
cmp
pop
stos
scas
pop
mov
test
pusha
cmpsb
inc
ficompl
fs
sbb
in
inc
popf
popf
lods
mov
dec
xchg
enter
aad
inc
sub
add
sub
loopne
sbb
ja
gs
sub
scas
out
out
add
movsb
xor
and
add
push
dec
and
xor
icebp
mov
imul
aaa
add
cmp
dec
sub
push
push
repz
arpl
adc
inc
test
gs
pop
add
mov
xchg
ja
scas
leave
adc
add
adc
fdivs
adc
add
loopne
dec
repnz
sbb
incl
bound
jl
adc
cmp
lret
xor
xchg
xor
dec
data16
mov
jmp
stos
stc
jb
shrl
push
and
push
sub
insb
js
iret
pop
push
cmp
stos
aad
mov
adc
repz
insb
cs
std
data16
ds
add
mov
pop
adcb
es
dec
std
rorb
sbb
and
aam
stos
icebp
or
push
pop
sti
inc
test
fiaddl
std
push
enter
lret
repnz
dec
clc
dec
cltd
push
mov
cmp
adc
in
cmp
xchg
push
dec
test
push
inc
stos
xor
mov
scas
sbb
pop
jmp
lcall
push
jo
inc
sbb
push
add
out
pop
ja
sub
and
into
out
sbb
sub
xor
aad
test
aaa
mov
lret
and
scas
xor
test
push
sub
sbbl
inc
rcrb
mov
sub
ffreep
lahf
sarl
lock
adc
lods
mov
push
daa
inc
cmp
sbb
xchg
mov
fst
mov
jb
dec
inc
xor
jnp
push
push
add
ds
dec
loope
jae
sub
ja
jp
mov
fisttpll
out
dec
sub
push
jmp
test
mov
mov
sub
icebp
xor
mov
mov
dec
pop
push
in
jl
in
mov
test
and
pop
adc
fidivl
xchg
notb
inc
jns
cmp
xor
lock
cli
lods
fmull
roll
jl
add
jp
sbb
pop
js
inc
and
pop
fisubrl
adcb
xor
shll
ja
fisubs
mov
xchg
pop
pop
inc
scas
sti
stos
mov
arpl
cld
xchg
imul
stos
gs
add
mov
jae
xor
pop
addr16
test
call
xlat
stos
aam
jo
clc
jge
leave
stos
adc
cmpsl
pop
mov
ret
icebp
nop
lret
cmpsb
divb
lock
fdivrp
out
adc
push
dec
fldl2e
sub
fcoms
imul
add
insl
push
cltd
dec
push
test
int
stc
cmp
repnz
and
xchg
sbb
out
jno
sbb
into
aad
push
mov
jle
movsl
dec
and
lods
pop
fdivrl
cmp
add
xchg
sti
xchg
dec
add
push
iret
xorl
jae
mov
sbb
mov
lds
jmp
les
repnz
cmpsl
aad
jge
pop
dec
in
jle
icebp
dec
imul
sub
into
cltd
cmpsl
mov
lock
sub
popf
imul
or
mov
in
and
fisttps
cmc
lcall
or
jmp
pop
mov
negl
movsb
push
clc
jnp
aas
jl
arpl
dec
dec
shrb
mov
test
xchg
and
mov
fisubrs
testb
cs
loopne
xchg
cmp
and
push
sbb
adc
fidivl
inc
jbe
cmp
dec
mov
pop
shlb
xchg
pop
xor
mov
push
mov
sub
lds
pushf
fwait
sarb
ja
cmpsl
push
outsl
push
dec
lret
adc
mov
repnz
adc
sbb
xchg
scas
in
pop
lahf
xchg
mov
jne
adcb
outsl
nop
dec
pop
mov
lds
cli
mov
mov
and
sbb
jp
mov
sahf
lock
mov
xchg
push
dec
shll
in
mov
jbe
inc
fistpl
fisttpll
mov
jno
mov
lods
inc
ret
mov
jg
ret
test
or
nop
push
fstps
push
repnz
push
push
sub
jno
es
mov
adc
xchg
fcmovnu
mov
mov
or
jnp
push
aaa
pop
enter
mov
sbb
jae
adc
pop
clc
dec
inc
popa
inc
fisttpll
xchg
mov
pop
cld
mov
imul
icebp
add
incb
xchg
sbb
xor
insl
pop
les
or
test
int
pusha
ret
mov
loope
stc
add
pop
call
mov
enter
add
insl
mov
sub
ret
test
rcr
adc
jnp
mov
jbe
mov
dec
sub
data16
mov
into
sbb
fcmovne
cmpsb
jmp
mov
cmp
sarb
pop
call
lods
cmc
cmp
mov
mov
aad
out
mov
xchg
cs
dec
or
cwtl
jnp
and
outsl
out
xchg
test
sbb
and
imul
js
dec
pop
imul
cmp
hlt
iret
or
rcrb
add
adc
test
movsb
push
and
ljmp
or
cmp
scas
xor
sbb
jl
iret
adcl
add
xchg
xor
xor
cmpsl
cmp
gs
push
inc
repz
jbe
jnp
add
clc
or
daa
sarb
stc
cltd
sub
jae
divb
sbb
imul
inc
ret
loopne
sbb
adc
jbe
push
nop
int3
lcall
shll
xcrypt-cfb
add
sarb
in
jns
lods
sbb
dec
imul
mov
sti
rorb
lret
adc
nop
call
lods
in
cmc
lret
jne
push
mov
or
mov
xchg
bound
lret
add
mov
xor
cwtl
cmp
push
mov
push
fwait
lods
aam
sahf
xchg
loope
xor
inc
mov
fmul
mov
jns
mov
mov
fs
cmpsb
mov
cmpsl
jg
add
jns
int
ss
pop
hlt
cmp
out
aad
jbe
jl
call
stos
clc
lea
sub
push
sub
aad
inc
and
out
in
cld
sub
inc
xchg
add
pusha
add
inc
stc
incb
addb
hlt
push
faddl
adc
call
jle
dec
ficoml
daa
or
xchg
xchg
xorl
in
jmp
outsl
jno
ret
cmpsl
sub
je
xchg
mov
pop
call
stos
fucom
sub
inc
inc
mov
jnp
divl
inc
inc
test
xor
add
fisubs
push
and
fwait
push
mov
sub
push
test
roll
xor
addb
imul
incl
mov
jno
jno
pop
std
add
jo
popf
cmp
mov
sbb
popa
movsb
pop
push
and
push
inc
cli
leave
push
or
pcmpeqw
hlt
xor
test
fiadds
cmp
movhps
cmp
in
lds
pop
sbb
push
cmpsb
aaa
xchg
arpl
nop
loopne
dec
and
add
mov
cld
pop
dec
lds
jb
cli
rcll
stc
out
inc
cmp
fs
cmpb
scas
cs
aam
mov
xchg
test
sbb
pusha
inc
int3
rcl
adcb
add
or
cli
xchg
ficomps
sbb
push
and
cs
fisttpl
mov
xor
jecxz
test
xor
sbb
jae
push
stos
push
mov
cs
jp
dec
ja
aaa
addr16
clc
mov
inc
push
call
dec
cltd
ss
cmp
daa
push
xorb
lea
aaa
rcl
fs
xor
xchg
repz
dec
jo
mov
pusha
call
mov
sub
rcll
sbb
xchg
loopne
test
mov
mov
cltd
add
mov
jg
lea
mov
and
repz
in
cmc
ja
jp
lods
les
inc
mov
fstpt
pop
and
jmp
inc
arpl
pop
push
jl
dec
mov
js
popf
data16
sahf
aad
fs
jno
insl
cmp
movsl
sti
jb
add
mov
or
or
dec
jge
fmull
mov
lret
imul
lods
push
xlat
add
fsubp
dec
movb
cmpsl
cmp
out
out
add
mov
lods
add
or
push
mov
mov
and
bound
aas
iret
fiaddl
jne
and
and
mov
in
scas
dec
fisttpll
inc
cmpsb
add
jg
dec
mov
push
adc
jecxz
movsl
cmp
or
pushf
jno
sbb
lock
int
jg
inc
mov
push
aas
loop
das
lahf
push
out
in
int
xchg
push
pop
iret
jbe
rclb
mov
jmp
and
mov
out
adc
pop
lret
mov
or
mov
cld
insl
cmp
aaa
dec
cmp
lahf
jl
jmp
jb
loopne
adc
dec
aad
jl
int
jnp
shrb
xchg
mov
or
sub
daa
xchg
inc
sbb
jl
mov
xlat
rolb
add
pop
and
adc
nop
shll
lret
xor
mov
push
stos
lds
xor
and
mov
mov
in
mov
push
movb
dec
stos
adc
jbe
cmpsl
negl
popa
jp
nop
add
dec
filds
sysenter
insl
sbb
xchg
or
adc
cltd
mov
jmp
mov
jg
nop
sbb
in
dec
or
test
out
push
xor
repz
pop
cmp
push
xor
lods
jge
and
cli
sbb
es
jns
mov
out
mov
adc
mov
outsb
push
jmp
xchg
push
jne
mov
jmp
int
or
push
push
pop
std
mov
ss
mov
lret
mov
cmp
sahf
test
mov
jl
pushf
test
test
push
cld
rcl
aas
das
pop
xor
pop
ljmp
in
inc
inc
shlb
hlt
scas
jl
xor
iret
dec
cmpsb
gs
push
les
cmpsl
test
xchg
dec
sbb
xchg
mov
mov
loopne
mov
in
js
mov
sub
mov
enter
and
je
cmp
cmp
pop
and
js
inc
cmp
ja
and
pop
mov
data16
subb
mov
xchg
test
xor
lahf
sti
sbb
test
mov
push
arpl
or
test
push
or
addr16
inc
dec
jmp
cltd
jg
push
mov
jnp
int
and
out
mov
dec
push
mov
xchg
repnz
inc
or
push
test
mov
fiadds
mov
mov
adc
mov
inc
jp
sahf
in
pusha
mov
jp
jnp
mov
std
push
ret
xchg
loop
jbe
add
add
icebp
inc
xlat
mov
push
mov
jne
test
mov
roll
pop
arpl
and
mov
stos
add
out
xor
int
cmp
ret
mov
xchg
testb
repnz
push
stos
push
xchg
sbb
xor
or
mov
insb
popa
add
adc
adc
xor
aaa
mov
or
push
mov
adc
pop
addb
aas
jp
repnz
pandn
jbe
dec
movsl
mov
test
and
push
cltd
jno
mov
test
hlt
andl
movsb
push
mov
iret
sbb
repz
cld
addb
fwait
int
sbb
jns
adc
xchg
test
dec
ljmp
jno
or
out
fcomip
mov
stc
icebp
adc
pusha
mov
cld
loop
shrb
xchg
cmp
xor
and
loope
push
and
mov
add
mov
mov
sub
les
int3
in
mov
mov
int3
shl
ds
sub
mov
pop
int3
aaa
js
movsb
icebp
mov
mov
sub
dec
mov
adc
loopne
in
jg
in
xor
add
push
cmp
jns
lret
iret
cmp
add
test
or
cmp
mov
jno
aas
inc
adc
push
ljmp
adcl
or
dec
and
sarb
jmp
xor
mov
sti
out
into
js
jg
or
les
fimuls
xlat
sbb
lock
pop
mov
lret
jb
mov
int
in
fmul
jo
pushf
js
mov
xchg
jne
ficompl
dec
idivl
xor
push
mov
push
jne
call
xor
push
or
mov
loope
cltd
mov
popa
out
or
push
sub
jne
lock
add
mov
stos
enter
jge
adc
icebp
xchg
xchg
xchg
orl
pop
fcmovbe
mov
dec
in
xchg
fmull
pop
mov
add
cli
scas
int
loop
lods
mov
add
stos
addr16
lret
lds
loop
inc
add
cmovnp
movsl
ficoml
mov
push
xor
adc
popf
adc
and
sbb
ror
dec
movsl
outsb
mov
das
rolb
or
push
into
outsl
or
fldl
or
and
add
mov
sbb
push
jl
lods
mov
or
mov
dec
cmpsb
sub
add
filds
pop
pop
push
movsl
xchg
sbb
push
add
cmp
inc
cmpsb
jp
pop
in
movsb
mov
jno
in
push
repnz
jo
roll
jbe
or
xor
and
inc
fiadds
out
pop
es
mov
fisubrl
xchg
aas
mov
pop
mov
fistl
and
push
xchg
rclb
insb
cltd
pop
and
or
call
sar
test
mov
sbb
jp
jg
jb
mov
push
adc
into
lods
stos
or
xchg
les
jns
mov
adc
jo
repnz
arpl
inc
inc
iret
out
shrb
out
jmp
mov
push
mov
lcall
push
and
stc
sub
push
adcl
inc
dec
push
xor
cmp
mov
repz
add
sub
arpl
cli
push
inc
xor
adc
mov
fdivrp
dec
and
sbb
or
popf
sub
out
or
iret
inc
sbb
cli
por
adc
fcoml
addr16
sbb
add
xlat
or
or
push
push
mov
dec
and
add
loopne
movntq
dec
xor
jno
sbb
mov
in
lahf
pusha
decl
mov
cmc
inc
mov
scas
xchg
mov
call
loop
inc
int
out
sbb
mov
cmpsb
push
out
jne
pop
out
pop
xor
je
inc
iret
inc
adc
mov
sub
in
ljmp
cli
adc
mov
and
lea
ret
sbb
movsb
addb
pop
cmc
sub
adc
leave
pop
xchg
mov
out
cwtl
arpl
push
pop
jb
ja
call
push
int3
imul
inc
pop
and
push
cmpsl
movsl
pop
lret
pop
repz
jo
dec
in
mov
cmc
adc
aam
loop
cmp
push
mov
or
jle
je
mov
loopne
scas
aad
pop
and
xor
and
xlat
scas
dec
mov
mov
mov
scas
jg
mov
mov
dec
rcrb
lds
call
jmp
adcb
mov
sarb
loope
mov
jae
shl
pop
ds
movsl
adc
cmp
sti
push
mov
or
xlat
out
outsl
cld
and
out
imul
sub
xchg
jns
aam
mov
inc
jae
daa
in
push
mov
mov
fcompl
sbb
mov
imul
add
add
sbb
dec
push
push
inc
aad
jge
loop
sarb
push
mov
jl
cmp
xchg
push
ret
dec
xor
cltd
sbb
pop
outsl
test
pop
push
xchg
in
int3
add
loope
jne
cmpsl
test
xor
sbb
sbb
inc
jae
in
shlb
mov
sub
das
faddl
movsl
shlb
mov
dec
or
adc
out
lea
jne
stos
fcomps
xor
imul
movsb
jb
and
or
fildll
xlat
or
daa
mov
xchg
fs
lds
add
and
nop
push
lret
in
fsubr
div
xchg
push
dec
mov
sub
hlt
push
pop
push
int
and
cmp
negl
xor
jmp
pop
lods
imul
adc
sub
cmp
cld
push
lcall
jns
lahf
in
cmpsb
iret
inc
add
mov
mov
mov
jle
pop
imul
les
xor
jl
xlat
inc
mov
repz
or
or
ret
sub
dec
add
inc
and
jle
fidivl
lret
stos
loope
imulb
sbb
dec
cmpsb
repz
in
fnsave
cli
jae
push
cs
movsl
rcll
xchg
pop
les
subl
mov
stos
cli
rcrb
fcomp
mov
pop
data16
mov
enter
inc
scas
mov
sti
sbb
fwait
jp
push
or
xor
aaa
sbb
sub
out
inc
dec
or
mov
inc
call
xor
pushf
test
mov
dec
pop
aad
out
inc
jg
and
addr16
dec
jno
pop
pop
cmpsb
test
int3
pop
lahf
shll
dec
jno
xchg
hlt
inc
or
pop
mov
js
cmp
adc
popa
push
inc
or
fcmovu
sbb
push
mov
fdivrl
xor
adc
inc
mov
pop
repz
jmp
dec
sub
stc
repnz
movsb
divb
inc
mov
rcrb
sub
repz
pusha
insb
and
pop
mov
adc
stos
stc
jb
dec
aad
vmwrite
xor
xchg
mov
xlat
in
jno
shrl
mov
imull
push
dec
aad
fildl
addr16
cld
and
cmc
or
sarb
lcall
inc
data16
cmpsl
sti
sbb
adc
movsl
dec
mov
popf
ret
dec
jmp
sti
mov
sbb
push
mov
movb
std
lahf
insb
push
sbb
js
mov
imul
loopne
addl
mov
enter
test
fisttpl
fisubl
push
lcall
jno,pn
xor
idiv
mov
pop
cwtl
dec
push
add
enter
hlt
pop
push
cmp
sarl
dec
push
fnstenv
stc
inc
pusha
xchg
add
movsb
shll
sbb
test
pop
adc
rcll
in
sub
push
lret
lods
xor
ret
push
push
dec
or
ret
aas
rcll
cs
mov
mov
cmp
filds
rol
cltd
test
es
or
mov
das
lahf
add
push
jo
add
lret
scas
outsl
sbb
xchg
xchg
mov
pop
jmp
mov
mov
mov
std
xchg
pop
push
or
add
cmovnp
mov
nop
jp
push
push
or
shrl
data16
les
leave
lock
dec
xor
idivb
push
sub
stc
push
les
pop
rclb
imul
inc
or
ret
outsl
push
flds
adc
jecxz
xchg
pop
rorb
popa
stc
pushf
fucomip
inc
jns
imul
sbb
fidivrs
sbb
fwait
inc
mov
lods
push
jae
sti
push
js
mov
cmpsb
xor
fstps
pusha
mov
push
adc
jl
dec
imul
popa
mov
sub
sub
jae
lods
push
fistps
sahf
sbb
sbb
sbb
push
mov
int3
lahf
or
lcall
dec
outsb
scas
jnp
out
push
cmp
add
push
pop
enter
adc
scas
or
pop
shrb
mov
sub
mov
aas
ret
cmp
xchg
arpl
test
insb
lcall
repnz
in
insb
pop
and
xor
or
push
leave
and
cld
iret
pusha
mov
adc
leave
lret
mov
stos
inc
sub
das
jecxz
mov
ret
imul
jno
test
outsl
nop
mov
negb
adc
sahf
jge
ds
stc
sub
inc
loop
loopne
mov
jno
push
pusha
lret
xchg
jns
xchg
lods
rorb
iret
sbbl
add
int
je
pop
xlat
add
jnp
fsubp
sbb
and
adc
push
sahf
push
dec
in
jle
stc
xor
arpl
xlat
addr16
xchg
out
shlb
jle
cmp
adc
popa
push
idivb
stos
int
insl
xchg
ret
pop
ficompl
xor
rclb
inc
mov
pop
shrl
mov
xchg
dec
arpl
inc
fwait
ljmp
lahf
pop
sahf
jns
call
int3
fidivrs
ljmp
stos
mov
stos
add
nop
mov
int
jg
je
out
test
repz
pop
into
mov
add
aad
ret
and
xchg
ljmp
sub
dec
fisttpll
leave
int3
leave
je
sbb
insl
push
movb
arpl
cmc
push
repz
scas
js
push
inc
cmpsb
inc
aaa
mov
test
pop
lahf
mov
xchg
jb
cmp
sbb
jg
add
mov
stos
sub
xlat
lcall
jnp
mov
adc
int
xlat
mov
outsb
mov
xchg
jecxz
pop
gs
lahf
std
push
jge
cmp
sbb
lods
push
leave
dec
pop
mov
cltd
jnp
sbb
incl
mov
lock
push
rorb
sub
jno
out
rorb
xor
push
dec
mov
lods
push
sbb
jbe
repz
test
int
pop
dec
sub
mov
mov
cwtl
lock
clc
lea
rcr
cli
cwtl
xor
mov
xchg
loope
push
in
sub
jle
insl
in
ret
call
pop
mov
aad
pop
mov
push
lock
pop
ds
sahf
and
xchg
fiadds
nop
je
je
jle
adcl
dec
push
repz
xor
jbe
insl
dec
dec
jg
dec
arpl
or
jae
push
ret
es
into
cmp
pop
pop
ffree
mov
and
subl
push
adc
jns
mov
pop
scas
stos
cmp
mov
dec
push
mov
pop
add
push
push
inc
test
test
insl
mov
xor
adc
repz
jae
pop
pusha
pop
and
xor
or
scas
rorb
inc
xchg
insw
xor
inc
frndint
ljmp
jne,pt
arpl
in
cmpsb
int
xlat
sbb
daa
daa
ss
lret
push
sub
lods
lods
add
nop
xor
pop
repz
or
mov
call
adc
cs
lods
mov
jno
adc
out
sub
sub
pop
mov
add
mov
stos
push
fs
sti
push
inc
les
aaa
test
and
sbb
ficoms
pop
or
fwait
inc
adc
data16
push
ljmp
popf
sets
pop
xchg
mov
jnp
js
xadd
scas
in
sbb
inc
sarb
mov
sbb
jnp
andb
je
mov
sti
xchg
ljmp
mov
dec
out
dec
int3
push
dec
xchg
jp
pop
sub
je
loopne
xchg
xor
dec
dec
lret
in
loope
jecxz
sbbb
pop
jbe
repz
adc
shrl
stos
sbb
cmp
scas
cs
stos
jno
mov
jmp
push
and
add
dec
pop
notb
and
xor
cmp
pop
mov
bound
mov
sub
les
mov
js
push
mov
pusha
push
jle
nop
outsl
jo
scas
lahf
pop
call
fbstp
out
mov
fwait
xchg
push
mov
in
jle
arpl
imul
xorl
sahf
test
cmp
jns
lret
jne
pop
xchg
xchg
popa
mov
insb
sub
ret
mov
mov
leave
test
shll
sbb
adc
cltd
mov
out
pop
mov
adc
push
ret
sbb
enter
faddl
std
xlat
mov
pop
int
mov
ret
popf
cmc
test
or
and
add
sub
pop
push
rclb
sub
filds
out
inc
inc
mov
lret
push
mov
cmpsl
setne
stos
mov
arpl
inc
sub
lahf
xchg
ss
push
arpl
aas
xchg
push
pop
scas
pop
sahf
in
rcrb
pop
push
test
add
dec
cmp
jbe
jmp
xchg
inc
or
pushf
add
sub
enter
rcrl
jecxz
xchg
inc
xchg
sbb
pop
sub
test
inc
cmp
lret
mov
mov
xchg
loop
inc
cmp
mov
dec
je
and
jecxz
out
mov
sub
adc
pop
mov
cmpsb
aaa
inc
shlb
push
lea
cmp
sbb
or
rcrb
push
sti
or
ret
data16
jne
jo
pop
jmp
mov
aad
dec
xor
sbb
sti
call
fdivrl
ja
push
fiaddl
lods
stc
test
mov
bound
rclb
insb
dec
lahf
cmp
inc
xchg
jae
xchg
jae
adc
pop
jo
lea
mov
mov
popa
test
jmp
lahf
push
xor
loopne
adc
outsl
xchg
cmpsl
ss
sarb
dec
cmpsb
adc
mov
test
out
ror
movsb
popa
pop
xchg
mov
dec
xchg
lahf
pop
out
dec
test
dec
fs
stc
bound
faddl
mov
shll
rorb
ds
pop
fldl
pop
inc
test
inc
jecxz
jecxz
repnz
jge
repz
mov
mov
mov
fimuls
mov
cmp
dec
mov
lea
lds
jle
and
icebp
fcoms
iret
sub
add
outsb
add
xor
jle
push
or
aas
jae
out
add
pop
mov
or
xchg
daa
and
pop
push
pop
cmc
out
cmc
jne
imul
fistl
popf
popf
in
adc
mov
inc
cwtl
jbe
mov
xor
cwtl
mov
or
add
in
inc
call
cld
daa
xor
cmc
sbb
mov
in
popw
add
and
je
mov
fnstsw
or
lahf
lock
or
out
fwait
lods
aas
xchg
xor
rorb
cltd
stos
pop
sub
push
jne
jne
cmp
les
xlat
clc
insb
divl
xchg
jbe
mov
xor
nop
sub
fbstp
stos
mov
out
sbbl
orb
push
stos
pushf
mov
loope
clc
pop
pop
hlt
cmp
out
fdivl
xorb
jle
cld
dec
scas
sbb
pop
adc
pop
mov
shrl
arpl
pop
and
call
sbb
adc
mov
sbb
aam
or
movsl
jp
loope
dec
dec
pushf
push
mov
pop
jl
push
iret
pop
mov
mov
dec
jnp
pop
xchg
shll
dec
sub
push
mov
ljmp
mov
push
xchg
mov
mov
aas
cltd
out
mov
out
pop
jb
nop
mov
jns
add
sahf
inc
pop
sbb
fisttpll
sbb
mov
mov
xchg
and
or
xor
enter
pop
rcrb
std
xchg
mov
cmpsb
mov
inc
imul
jmp
repz
cmc
les
loop
cs
push
out
xchg
aad
add
stos
dec
and
dec
lods
xchg
pop
inc
lock
sti
xor
jmp
insl
rol
ja
dec
dec
mov
mov
jns
sub
enter
cld
adc
nop
stos
pop
lahf
dec
lcall
dec
and
negb
jb
enter
movsl
pusha
das
adc
insl
ja
sub
fwait
not
pop
xchg
add
jg
imul
mov
out
inc
sahf
cmpsl
or
addr16
mov
adc
cmp
mov
jg
dec
pop
fimuls
loop
sub
roll
push
or
adcl
test
ret
movsb
das
cmpsl
aaa
inc
add
inc
lcall
jnp
and
and
js
sbb
add
rcrl
add
repnz
mov
jae
lods
cwtl
jle
jmp
dec
jnp
movsb
and
mov
mov
stos
sbb
movsb
sub
pop
div
or
mov
jmp
gs
dec
in
addr16
iret
add
test
cmp
jo
dec
mov
stc
orl
mov
sbb
stc
xor
push
cmpsb
sub
in
cmc
dec
dec
and
or
je
dec
repnz
or
xchg
pop
lahf
popa
scas
sti
mov
dec
loopne
dec
jge
push
mov
jge
rol
pop
leave
lret
pop
adc
jno
xor
xchg
pushf
or
adc
cmp
xchg
dec
mov
sahf
mov
dec
mov
pusha
add
sbb
pop
ret
stos
pop
lods
pop
add
pop
lret
sbb
inc
jo
mov
testb
sub
lds
mov
mov
adcl
xchg
ret
movsl
mov
xlat
jl
mov
in
pop
mov
xchg
pop
jg
push
in
int3
push
jnp
and
or
dec
jmp
and
pop
data16
sub
pop
cli
fstp
pop
test
or
jns
lods
mov
fbld
push
pop
dec
ja
mov
cmc
cmp
jne
pop
test
cmp
push
popf
sub
pop
mov
jo
std
jbe
ljmp
xor
shlb
sbb
nop
sbb
add
sti
stos
push
in
and
dec
mov
xchg
rorl
lret
mov
or
adc
pop
repnz
sbb
or
out
lds
sbb
sahf
or
into
outsb
push
cli
mov
int
mov
data16
insl
iret
lods
jp
mov
mov
lds
negl
pop
incl
and
dec
or
loopne
xchg
pop
nop
sub
ds
out
pop
aaa
add
pushf
add
jns
jg
cmp
fsubp
movntq
fs
in
in
jg
cmp
loop
inc
dec
mov
imul
adc
xchg
addr16
loopne
test
out
and
xor
jae
loope
popa
push
in
jne
xor
loopne
mov
mov
std
push
fisubrl
dec
test
inc
repnz
cmp
xchg
mov
cmpl
mov
and
dec
pop
fsubs
icebp
cmpsb
add
xchg
loop
cwtl
jae
push
or
and
xor
dec
les
cmp
mov
sarl
jo
push
push
push
and
xlat
loopne
pop
sahf
sub
xor
or
lret
mov
jo
nop
mov
rclb
or
jbe
push
mov
aad
mov
xchg
sub
sti
shlb
jne
push
or
and
ss
push
xor
mov
pop
jge
cmpsb
xor
cmpsl
shlb
xorb
sub
cmc
mov
pop
stos
je
test
ss
das
fmulp
push
inc
cs
lods
rolb
loop
mov
sub
and
dec
mov
or
fwait
dec
out
push
add
test
test
sbb
pop
adcl
xchg
movsb
mov
fldt
add
outsl
jl
xchg
adc
inc
xlat
repz
inc
add
jne
add
mov
jp
popa
xor
jg
mov
fnstsw
push
addr16
int
mov
test
ds
hlt
std
cli
pop
xor
xchg
movsl
mov
in
stos
dec
sarb
stos
xchg
dec
leave
fucomip
push
jecxz
bound
xchg
xlat
fsts
mov
jbe
pop
out
inc
jne
xchg
movsb
xchg
xchg
scas
mov
inc
or
repz
sbb
sbb
repz
mov
or
lret
stos
cmp
jle
and
js
and
xchg
gs
gs
in
dec
add
and
sbb
mov
ja
loop
imul
xor
std
lret
loope
cld
sbbl
sub
jb
mov
mov
je
aam
out
xchg
jno
arpl
and
cs
fnstsw
lret
xchg
popf
stos
xor
mov
push
out
dec
jmp
dec
ja
pusha
push
xor
cli
or
mov
push
dec
loopne
cld
mov
pop
repz
and
nop
daa
push
xchg
popa
mov
inc
dec
or
outsl
sarl
xor
dec
mov
sub
les
push
push
cld
fcmovnb
mov
jae
and
mov
lahf
push
jo
int
movl
or
movsb
xlat
test
jne
sbb
aaa
cmpsl
out
les
lcall
in
xlat
in
dec
push
fisubs
mov
in
dec
push
mov
sub
and
mov
into
sarb
in
or
aam
inc
inc
je
jb
pop
imul
mov
push
int3
repz
cmpsb
pop
int3
xor
gs
pop
xor
sbb
adc
scas
popf
pop
cmpsl
shl
cmp
in
cwtl
and
push
mov
movsb
cmp
xchg
pop
jne
inc
pop
insb
mov
shrl
xlat
xchg
hlt
sub
jb
sti
mov
call
inc
pop
adc
rolb
cmp
sub
scas
scas
lahf
in
cltd
sbb
xchg
sti
imul
out
int
repnz
cli
outsb
sbb
mov
adcl
data16
fnstsw
lods
mov
call
and
cmpl
iret
xchg
xor
clc
pop
ret
js
arpl
jns
adc
loope
arpl
pop
imul
test
xchg
inc
fwait
in
jno
xchg
cmp
dec
and
adc
jle
into
or
repz
push
sti
std
add
xchg
mov
fsubrs
push
cltd
mov
ds
sbb
sbb
popa
cltd
lea
pop
jae
mov
mov
or
ficoms
jge
jecxz
mov
decb
nop
or
jne
xchg
cmp
sub
stos
lods
daa
or
jmp
aad
jg
mov
mov
iret
mov
stos
xchg
mov
mov
dec
cli
or
cmp
jmp
es
xchg
mov
in
sub
adcl
outsl
movsb
mov
cmp
push
icebp
mov
cmp
sub
cmc
add
fnstcw
sub
push
int3
mov
cmc
daa
jnp
insl
ret
push
shrb
mov
jbe
mov
in
sub
pop
sbb
mov
popf
adc
movsb
out
outsb
test
lahf
out
cltd
addr16
jnp
scas
lods
mov
push
je
shl
cmpsl
enter
add
stos
mov
xor
mov
adc
push
pop
mov
mov
adc
jbe
outsl
out
push
mov
sbb
insl
mov
and
outsl
jl
inc
dec
pop
out
xchg
sbb
pusha
aas
cs
push
jbe
bswap
cltd
ret
jl
int3
out
xchg
push
test
clc
cmp
jbe
mov
adc
hlt
addl
adc
mov
push
mov
xchg
cld
mov
out
fs
push
sbb
xchg
cli
mov
mov
rolb
xor
notb
loope
pop
xchg
pushf
sbb
inc
xor
std
in
in
push
mov
lea
inc
pop
ljmp
mov
xchg
outsb
sub
cmp
orl
in
fcomp
aas
dec
sti
inc
cld
int
cmp
inc
pop
xor
push
movb
rcll
sub
popa
jg
adc
in
mov
js
lret
mov
popa
popf
fdiv
in
es
mov
jge
in
jae
popa
mov
mov
cmp
mov
daa
ret
repnz
pop
popf
jbe
mov
int
push
mov
and
fidivrs
test
cmp
shl
sti
ficoml
xor
sbbb
aas
sbb
xor
cmp
call
and
sbb
xchg
push
mov
cltd
jp
push
xchg
or
call
sub
mov
pop
popl
jle
shll
cmp
cmpsl
jge
insb
mov
jl
scas
popa
or
inc
aam
sub
out
or
mov
stos
cli
out
rorl
mov
data16
mov
hlt
push
lods
dec
inc
stos
xchg
or
push
rcrb
xchg
push
in
rcrl
daa
cmp
or
nop
cmp
in
in
cmp
in
lds
popa
push
mov
notb
or
xor
aas
sub
mov
sub
add
movsl
int3
pop
pop
adc
cmp
in
int
adc
inc
rclb
xor
and
out
add
push
fcomip
adcb
mov
cmp
adc
sub
gs
inc
sbb
inc
sbb
ljmp
fstpt
push
movsl
das
aas
imul
xlat
nop
test
lret
add
mov
xchg
xchg
icebp
mov
mov
outsb
icebp
arpl
jno
leave
mov
negl
imul
push
lret
mov
mov
dec
jo
adc
sbb
xor
gs
les
dec
push
or
popf
bound
mov
rcrl
out
popa
bound
push
sbb
rcrl
lret
lods
outsb
sub
cli
push
pop
jnp
add
push
xchg
push
dec
je
cmp
pop
stc
jbe
and
lds
insb
fcomip
in
or
mov
sub
dec
inc
jo
outsb
mov
int3
std
ficoms
subl
mov
adc
out
or
js
pop
ljmp
inc
cld
dec
ljmp
sub
pop
paddq
sti
mov
push
fwait
mov
les
xor
add
cmc
rcrb
cmpsl
mov
pop
iret
xchg
mov
pop
sub
mov
or
inc
push
scas
sub
sbbb
lcall
mov
inc
xor
out
lods
les
jbe
test
mov
test
movsl
pushf
mov
in
inc
pop
push
mov
pusha
add
outsl
dec
sbb
data16
stc
in
ds
and
inc
mov
and
mov
subb
aam
mov
xor
inc
sub
jle
and
pop
lret
sbb
xchg
adc
sbb
dec
jle
jge
movsb
fidivrs
mov
les
pop
int3
stc
xor
jo
sarb
mov
orb
movsb
test
insb
neg
jae
sahf
xchg
pop
cwtl
pop
es
pop
cmp
dec
pop
inc
mov
sbb
mov
sub
lds
push
sbb
ljmp
inc
mov
jge
jge
iret
sbb
inc
sub
xchg
mov
insl
inc
lds
xlat
sbb
into
bound
jae
mov
data16
jp
sub
push
xor
loope
std
push
repnz
push
hlt
js
mov
pop
add
js
out
mov
aaa
divb
xor
dec
icebp
fcmovnb
daa
add
jae
test
mov
std
or
and
leave
shll
loop
gs
and
fcompl
popa
scas
es
mov
sbbb
mov
and
mov
cmp
and
out
scas
adc
jns
xor
xlat
jmp
jle
and
shrl
push
xchg
seta
push
mov
movb
sbb
mov
push
xor
jl
jae
mov
xchg
jnp
mov
lret
sbb
insb
mov
daa
outsb
jnp
outsl
jmp
add
inc
ljmp
xchg
sarl
sahf
imul
loope
pop
sub
testl
xor
in
sahf
xchg
test
jae
fcom
jl
xchg
test
mov
xchg
test
mov
mov
rcl
pop
enter
push
xor
sub
jb
jmp
into
dec
inc
fiaddl
std
mov
mov
and
mov
or
aaa
push
test
jl
adc
dec
rcrb
cmpsl
test
sbb
inc
inc
pop
cmp
hlt
cmp
add
jno
push
xlat
pop
nop
fcmovnbe
inc
cmp
imulb
nop
xchg
pop
cmpsl
fwait
xor
lcall
push
xor
or
arpl
and
lods
or
jl
adc
jp
mov
inc
pop
fcmovnb
orb
insl
rcrl
jbe
shll
mov
push
xchg
ret
lds
shr
test
lahf
or
popf
adc
pop
push
and
rol
inc
sub
add
fistl
ror
jl
dec
sti
cltd
pop
push
sub
loop
loopne
bswap
ret
push
mov
add
cld
sbb
xchg
test
push
outsl
push
shll
test
mov
inc
ret
xor
sub
mov
mov
lds
jmp
mov
pop
sub
lock
xor
jmp
repz
ljmp
jmp
test
aaa
sbb
jo
mov
xchg
clc
mov
into
inc
sub
mov
cltd
mov
cmovae
bound
adc
dec
std
lods
mul
inc
aam
js
push
mov
xchg
pop
loope
mov
jl
ljmp
les
in
jg
test
in
negb
jo
sahf
arpl
add
enter
std
sti
push
pop
mov
in
inc
decb
ljmp
add
mov
pop
test
stos
call
cmovle
stos
xorb
adc
and
adc
and
adc
test
leave
jnp
stos
push
xchg
or
daa
jae
mov
mov
dec
push
cmp
mov
lock
pusha
ljmp
jno
lods
xchg
add
or
insb
push
out
mov
fcoms
add
movsl
insl
pushf
inc
and
sub
xor
xor
inc
ret
inc
sahf
loopne
in
fimull
jp
fld1
pop
outsl
cmp
inc
jns
mov
test
mov
pop
push
mov
into
push
mov
out
push
imul
dec
mov
mov
scas
sbb
dec
xor
insl
jmp
xor
ss
xchg
cltd
test
sbb
push
lods
clc
sbb
push
push
push
jae
test
cwtl
pop
pop
dec
push
cli
or
pop
in
mov
adc
pop
jp
cmp
scas
pop
pop
dec
mov
jmp
pop
xlat
mov
pop
push
adc
pop
pop
dec
pop
jno
xor
stc
icebp
push
dec
push
dec
sahf
aaa
mov
rcrl
lods
aam
loopne
stos
mov
fcoms
cmp
mov
sbb
dec
insl
outsb
xchg
sub
xchg
gs
pop
int
bound
imull
and
cld
or
repnz
stos
sub
cmp
inc
add
mov
mov
fwait
insl
ficompl
jle
ss
addb
jb
loopne
ss
inc
cmpsl
mov
lret
shl
pop
or
and
xchg
hlt
hlt
out
dec
pop
fistps
or
lods
fcmovne
mov
mov
and
sbb
or
stos
movsl
and
stos
rolb
out
rol
or
shll
xchg
je
aas
fsub
dec
cmp
leave
popf
push
fidivrs
fdivrl
jbe
add
ret
and
dec
sub
push
pusha
xchg
iret
pop
cltd
dec
xchg
rcr
popf
pop
insl
sub
and
movsb
or
fsubrp
mov
arpl
dec
mov
ret
clc
jecxz
mov
stc
mov
or
push
movsb
mov
dec
insl
out
dec
adc
loop
dec
xchg
xor
mov
cmpsl
ret
icebp
inc
mov
mov
hlt
jb
rcr
and
jmp
int3
mov
pop
sbb
fiadds
ficomps
mov
cli
test
cmpsb
imul
xor
inc
dec
mov
shlb
pop
or
movb
lret
fdivrs
dec
sub
inc
fwait
add
xchg
jmp
sbb
mov
stos
pushf
add
mov
outsl
lea
rorl
imul
arpl
loope
movsb
add
xlat
popf
ret
int3
pop
mov
push
es
cltd
icebp
xchg
int
scas
cli
inc
xchg
sub
stc
and
mov
mov
xchg
out
shrb
add
mov
in
mov
arpl
cmp
mov
push
dec
xor
sti
sbb
popa
xchg
add
test
nop
sbb
gs
and
hlt
ds
into
lock
mov
inc
add
push
cwtl
fnstenv
push
xchg
inc
xchg
push
test
push
jg
push
addr16
xchg
arpl
pop
test
ljmp
inc
xchg
push
hlt
out
jecxz
xchg
xor
leave
out
pop
fwait
notb
jae
pop
rclb
mov
mov
iret
fs
xchg
addr16
cmovge
mov
cmp
pop
add
test
cmp
aad
mov
mov
sbb
dec
in
xor
adc
sub
cmpsl
int3
addb
add
mov
xchg
lahf
and
icebp
mov
and
aam
add
push
xchg
sub
push
adcl
sub
sub
fwait
pop
inc
add
adc
call
pop
xchg
shll
push
push
pop
adc
or
push
cld
loope
cli
decb
fldt
sbb
insl
pop
or
pop
cmp
addr16
test
mov
pop
and
inc
or
mov
mov
sbb
ss
xor
cmp
in
dec
mov
pop
roll
lock
lds
jns
xchg
xchg
rclb
stos
mov
push
outsb
mov
es
adc
and
xchg
aad
pushf
je
sbbb
xlat
pop
jnp
sbb
mov
push
test
fcmovnb
xor
add
js
jne
xchg
in
addr16
xchg
inc
iret
inc
mov
dec
add
jno
add
push
or
adc
mov
mov
hlt
jne
xchg
ljmp
pusha
pop
xchg
aaa
sbb
sub
and
dec
test
aad
in
mov
rcrb
sub
or
aas
mov
ljmp
arpl
insl
lock
mov
stos
sbb
pop
dec
lea
sbb
data16
loope
dec
mov
dec
das
sub
jns
dec
out
hlt
sbbb
adc
inc
leave
ss
mov
or
xchg
lds
sub
xor
cmpl
and
jns
stos
sub
sub
add
arpl
roll
add
test
xor
sub
cmpsb
leave
mov
mov
mov
imul
fdivrl
mov
hlt
fistps
jne
xchg
xor
and
xor
xchg
xor
adc
push
mov
add
mov
leave
lds
mov
cli
jne
add
jns
cmpsl
mov
push
xchg
jae
pop
inc
inc
jmp
nop
icebp
aas
ja
in
fimull
xchg
popa
sub
cmp
xor
or
jmp
in
psubusw
clc
mov
rcl
mov
popa
aas
dec
or
xchg
jae
pop
and
mov
aas
sbb
push
decb
cmp
std
ljmp
jo
adc
xorb
stos
jo
cs
inc
inc
inc
dec
inc
popf
cwtl
leave
push
in
mov
leave
xchg
std
test
xor
in
cmp
int3
and
pop
or
jno
sub
add
jne
mov
ficompl
daa
adc
mov
xchg
and
mov
insl
sub
mov
imull
mov
mov
shll
cmc
mov
mov
xlat
fildll
cltd
jg
mov
or
bound
sahf
pop
in
adc
mov
push
popa
xchg
add
mov
stos
jne
imul
sub
jbe
push
sbb
push
adc
xchg
and
cmc
aam
iret
xlat
pushf
push
movsl
icebp
lods
inc
push
hlt
into
add
loopne
fbstp
inc
xlat
jo
jbe
icebp
std
xor
dec
push
loop
cmp
iret
shll
xchg
iret
call
push
adc
mov
popa
xchg
in
mov
dec
cmpsl
xchg
repz
fnsave
mov
jne
xor
xor
add
adc
shll
lock
pop
adc
pop
cwtl
cmp
aas
jne
dec
in
aam
fsub
pop
hlt
dec
call
hlt
stos
jb
dec
adc
popa
mov
sub
scas
sbb
pop
jnp
pop
and
pop
mov
clc
repz
data16
das
mov
and
jp
jbe
pop
dec
mov
ret
hlt
data16
add
lahf
adc
pop
mov
andb
ja
add
daa
lahf
negl
xchg
shrl
testb
out
mov
push
push
pop
mov
mov
jecxz
adc
and
push
pop
xchg
jne
cld
push
loopne
adc
mov
mov
pop
mov
test
xchg
sbb
sub
jae
jnp
push
push
cmc
dec
push
mov
sti
sahf
cmpsb
push
jnp
xchg
mov
lea
cmp
xor
ret
mov
out
xchg
dec
adc
lret
sbb
xchg
push
sub
dec
daa
adc
sub
pop
dec
sub
test
xor
incl
xchg
movsb
out
maxps
adc
rcrb
loope
shlb
sbb
sub
adc
xor
inc
dec
add
jge
xor
push
repz
ror
movsb
daa
and
pop
leave
clc
lcall
scas
add
gs
push
sbb
icebp
jmp
pop
push
cmp
jne
xor
pop
jmp
jbe
loopne
sar
mov
mov
sub
or
mov
xchg
popf
sub
in
dec
aad
imul
cmp
add
jne
sub
mov
xor
cmp
sub
jb
and
inc
fildl
dec
mov
cli
push
mov
in
enter
scas
inc
and
push
mov
push
jns
test
sbb
hlt
subl
cmc
push
loopne
xchg
out
clc
mov
push
loope
sub
fnstenv
and
data16
std
stos
testb
xor
jbe
shll
mov
dec
sbb
xchg
jp
sub
and
ljmp
loop
mov
xor
xor
dec
xorl
loop
adc
xchg
frstor
inc
mov
sbb
clc
scas
jl
mov
mov
jl
sar
in
cli
push
pop
mov
dec
xchg
jge
mov
xchg
pop
adc
dec
cmpsb
stos
test
dec
out
jg
inc
outsl
xor
mov
jae
push
insb
mov
jg
cmpl
loop
pop
cmpsl
rcr
mov
cli
xchg
mov
or
mov
add
xor
inc
mov
mov
repz
ret
xlat
aas
add
jno
cmpsl
inc
dec
inc
push
ds
inc
mov
sub
leave
idivb
and
mov
cmc
dec
int
xor
inc
mov
into
sbb
jnp
adc
insb
mov
or
aaa
negb
test
fildll
call
insb
je
sti
das
sbb
mov
pusha
notl
push
push
mov
inc
mov
bnd
xlat
jge
sub
pop
pop
popa
mov
xlat
shlb
lock
xorl
shll
jl
gs
into
mov
ljmp
divb
pop
push
mov
sbb
xor
mov
xchg
pop
icebp
cmpsl
test
dec
aaa
inc
fisubs
enter
mov
mov
rclb
sbb
pop
pop
popf
xchg
xor
leave
jle
jne
sahf
push
fcom
jl
lahf
loope
rcrl
sbb
pop
and
sub
fbstp
rcrl
loope
or
ja
cwtl
shll
js
in
and
mov
js
rcll
xchg
xor
lcall
scas
or
fwait
sti
insb
popa
sub
mull
frstor
jo
sbb
ret
cs
mov
add
mov
out
mov
sbb
jns
inc
dec
insl
sbb
adc
jb
int
sbb
std
sub
ja
mov
sbb
dec
les
lcall
xchg
sub
add
pop
and
dec
loop
cli
movsb
sbb
insb
mov
outsl
dec
push
xor
xchg
ret
stc
push
sub
dec
adc
dec
sbb
pop
mov
loop
add
insl
xor
jecxz
add
pop
sub
xor
adc
aad
xchg
stos
add
pusha
dec
rclb
pop
sarl
push
jae
sub
in
out
adc
adc
xor
icebp
push
cmp
dec
popl
ja
cwtl
popf
dec
sub
xor
add
lods
daa
je
cmpsb
sub
nop
jl
push
pop
mov
mov
cld
call
jg
mov
pusha
popl
xchg
and
loopne
or
jge
cmp
cmp
and
loop
movsb
push
rorl
pop
bound
out
push
push
dec
jmp
shll
pop
and
dec
dec
out
aam
jae
push
or
xchg
bound
iret
or
imul
popf
enter
cmp
or
push
add
pop
repnz
cli
lahf
xchg
dec
adc
std
loope
aaa
cmp
adc
loopne
push
pusha
pop
pop
popf
ss
add
inc
xor
xchg
xorl
ss
fimull
inc
xchg
repz
pop
ja
mov
xor
bound
mov
jl
push
jb
in
sbb
mov
inc
call
into
arpl
mov
test
cltd
cmc
aaa
pusha
test
xor
and
fsub
mov
jb
nop
xor
mov
pop
fdivrl
fisttpl
popa
or
mov
pop
cmp
hlt
xor
pop
aad
cltd
fs
clc
insl
ficoms
clc
sbb
js
jbe
gs
pop
inc
xchg
std
dec
movsb
into
imul
and
out
loop
pop
cli
cmp
xlat
ficoml
jno
popa
jle
xchg
les
xor
or
xor
lock
adc
xchg
xorl
mov
dec
lea
test
adc
xchg
pop
lret
inc
dec
sbb
stos
lods
pop
ret
jecxz
scas
popf
aad
or
cmp
movsl
call
adc
int3
sbb
add
sub
adc
and
sbb
loop
lods
fwait
das
and
pop
pop
aad
sub
jge
mov
cs
sbb
ljmp
mov
pop
fdivs
pop
int3
push
jmp
mov
pop
iret
sub
cmp
adc
out
push
mov
insb
pop
cli
in
in
stc
cmp
cmc
lret
mov
jp
mov
adc
cmpsl
and
test
mov
scas
xor
or
or
push
lock
dec
out
mov
dec
sti
xchg
pop
fsubrp
adc
pop
mov
gs
jp
mov
in
ficoms
sbb
pop
mov
cmc
sub
fwait
inc
inc
out
sbb
jle
xchg
dec
cmp
push
clc
push
adc
inc
addb
loop
mov
nop
cld
mov
adc
in
dec
das
lods
dec
add
aad
or
pop
jge
mov
decb
andb
or
outsb
pop
inc
and
and
xchg
jne
mov
mov
outsl
dec
rol
in
or
push
out
push
fucomip
test
xchg
mov
mov
xor
ja
xchg
mov
aas
les
cli
jb
mov
out
push
sahf
xchg
pop
sbb
clc
pop
push
ljmp
xorb
xchg
cmp
jne
lds
rcl
or
dec
in
pop
aam
arpl
mov
cld
imul
aad
jp
mov
adc
pop
sub
add
pop
mov
test
adc
aam
scas
decl
or
arpl
repz
out
jne
push
cli
lea
lea
imul
xor
sti
xchg
push
subb
push
mov
shll
dec
lea
sbb
jp
popl
shlb
jb
dec
cmp
jmp
imul
mov
sbb
sbb
ret
or
mov
jmp
pop
jp
push
outsl
add
out
pop
in
jbe
in
jno
lret
imul
jns
sahf
pop
lock
jnp
jecxz
mov
cs
dec
repnz
xor
ret
inc
roll
and
jno
and
dec
or
cmpb
jae
mov
ja
dec
scas
adc
scas
ret
jp
and
sbb
ret
rorl
or
arpl
sti
je
outsb
leave
mov
aam
xchg
imul
push
mov
pop
in
sahf
xchg
mov
push
sub
xor
outsl
pop
dec
scas
or
or
out
or
xor
jecxz
cmp
lret
dec
mov
lret
jbe
push
cmp
imul
pusha
outsl
movsl
add
sbb
inc
cmp
data16
in
and
mov
cmp
rorl
inc
mov
jne
sub
sub
call
sbb
sbb
or
outsl
iret
loope
sbb
repz
xchg
popf
pusha
push
ror
cmp
dec
rcrb
pop
fs
das
mov
and
in
jo
out
out
and
sub
sarb
call
jns
fdivl
cmp
lret
mov
gs
lret
xor
sub
and
aaa
pusha
jne
clc
fisubrs
loopne
repz
ss
mov
jge
scas
mov
xor
aaa
jne
xchg
lret
es
or
ljmp
in
adc
add
ja
and
movsb
xrelease
in
cmp
dec
cs
cmpsl
cmp
cmpsb
add
add
ljmp
cmc
ret
sbbl
dec
adc
scas
xchg
xor
push
mov
inc
arpl
clc
outsb
fs
xchg
or
xorb
pop
jno
sbb
push
ret
fldz
in
and
nop
nop
pop
mov
jl
pop
cmp
das
mov
adc
and
adcl
or
pop
imul
sbb
dec
mov
mov
cmp
movsl
pop
mov
mov
xchg
addl
jl
sbb
test
fstpt
es
shrb
adc
or
xchg
ror
iret
push
push
and
or
push
inc
test
adc
mov
js
dec
and
add
out
jl
std
add
cwtl
imul
clc
sbb
mov
dec
inc
les
daa
dec
leave
sahf
push
loop
lret
les
shll
mov
adc
cmc
xor
pop
or
push
mov
scas
mov
arpl
cwtl
out
cwtl
push
out
inc
xor
in
lret
aad
popa
push
sbb
scas
jle
xchg
in
jp
inc
icebp
ja
adc
or
popf
cmp
loope
mov
stos
jecxz
aam
mov
inc
sub
inc
cmp
js
mov
lret
cmp
imul
sub
out
loope
add
icebp
mov
scas
xchg
xor
inc
push
inc
in
xor
push
jne
lret
repz
ljmp
push
inc
sti
dec
push
sbb
lcall
fldl
jl
or
sbb
or
out
sbbl
or
push
ss
push
mov
mov
imul
push
dec
push
xor
mov
xchg
jno
lea
movsl
pusha
cmpsb
xchg
jne
stc
pop
xchg
and
je
enter
enter
js
or
test
inc
in
fcmove
or
dec
xchg
nop
fsts
shld
adc
and
add
xchg
stos
sub
imul
js
xor
bound
cmpsb
mov
jnp,pn
lcall
fnstsw
xor
adc
xchg
xor
sbb
cmp
clc
sti
add
pop
pop
and
push
adc
jbe
xchg
jmp
enterw
mov
push
scas
pop
shl
cs
std
scas
mov
cld
pop
sub
pushf
jp
pop
jne
push
hlt
mov
enter
push
sub
cltd
jecxz
iret
out
dec
mov
out
add
and
mov
pop
jo
push
mov
pusha
stos
bound
flds
clc
clc
repnz
lret
shr
push
jge
sbb
mov
cmpsl
mov
loop
sbb
icebp
cmp
xlat
aas
jnp
xlat
push
dec
sub
dec
in
add
int3
sub
adc
dec
mov
mov
shlb
xchg
sub
sbb
pop
pop
in
sbb
popf
and
int
mov
xor
scas
call
cmp
dec
and
iret
mov
xchg
push
and
cmpsl
lock
outsl
xor
push
inc
rorl
or
cmp
jbe
movsl
inc
mov
xor
out
push
xchg
out
cmc
or
xchg
cmc
jge
out
mov
and
cmp
pop
call
adc
xchg
inc
nop
mov
fmull
in
and
je
and
outsb
popa
dec
call
push
add
lods
ds
dec
out
packuswb
mov
mov
out
mov
or
testl
pushf
adc
sbb
jo
push
cmpsl
xchg
xor
pop
popf
jmp
test
test
vcvtsi2ssl
adc
adc
fisubrl
pushl
aam
inc
and
xchg
pop
sub
adc
pop
enter
cmp
inc
mov
sbb
faddl
test
std
ljmp
inc
adc
sbbb
mov
lock
mov
repnz
aaa
daa
lret
and
xor
xor
xor
imul
lret
mov
clc
sahf
pusha
sti
jno
mov
add
or
mov
xor
data16
jae
je
decl
insl
into
test
ficoms
pop
das
push
jecxz
and
dec
rorl
mov
push
dec
movsb
adc
arpl
jge
adc
ljmp
adc
mov
popf
push
jmp
pop
int
inc
sbb
inc
sahf
jl
cltd
xor
test
cmc
mov
filds
fists
jbe
lret
jp
pop
inc
jno
sub
call
cmp
cmpsb
push
fdivl
and
int3
scas
mov
mov
jne
scas
leave
fildll
jns
xchg
icebp
pop
jbe,pt
inc
and
or
loope
add
scas
faddl
dec
scas
sbb
sti
dec
arpl
cmp
pop
dec
test
and
imul
leave
push
lcall
jo
mov
inc
imul
lea
push
das
lret
add
push
leave
out
and
pop
imul
add
inc
mov
inc
adc
rorb
jo
mov
push
mov
fcmovu
dec
test
loopne
cmp
mov
mov
jge
push
fisttps
ss
xor
sbb
nop
pop
bound
in
mov
daa
add
scas
mov
adc
xchg
push
sbb
fsubl
in
sub
jns
fsubl
imul
mov
lods
gs
imul
loope
out
sbb
sahf
inc
fwait
lcall
inc
fldenv
xor
outsl
xlat
push
rcrl
pop
ret
shrl
dec
jo
enter
dec
pop
add
les
xchg
jno
sub
ss
les
cmp
sbb
jbe
jno
stos
lods
jmp
repnz
movsb
xchg
pushf
ret
pop
mov
xchg
pop
fld1
dec
inc
cmp
mov
xchg
int3
rcll
sbb
xchg
xchg
ret
or
mov
inc
mov
sub
or
leave
movl
jae
movsl
and
push
mov
push
and
or
popf
aaa
jl
jo
mov
imul
jns
lea
xchg
dec
les
jne
js
sub
push
pop
mov
dec
sar
fbstp
jl
into
arpl
pop
jge
arpl
lret
orb
movsl
jne
bnd
mov
pop
sbbl
rcll
xchg
cmp
adc
divb
xchg
fsts
std
les
mov
pop
out
sub
test
or
pop
add
push
pop
push
lds
xor
or
or
xor
mov
mov
lret
xchg
or
shrb
xor
ljmp
addr16
lcall
xor
data16
int
push
jecxz
in
fs
icebp
fcomps
sahf
ds
clc
mov
scas
scas
xor
dec
rcll
xchg
aam
sahf
js
nop
sub
xchg
nop
add
aas
or
jmp
icebp
jmp
fisttps
pop
addl
inc
cltd
mov
push
mov
pusha
ja
out
mov
push
aam
dec
arpl
pop
push
es
add
loop
insb
outsl
outsb
pop
jne
or
jmp
pusha
dec
inc
ja
shll
pop
ds
popl
sar
sub
cmp
ss
mull
in
ficomps
sbb
cld
cmp
imulb
add
mov
push
jmp
inc
cmp
mov
imulb
pop
clc
popa
outsl
cmp
sbb
jg
dec
clc
dec
loopne
fcomps
fnstsw
out
mov
lds
xchg
mov
mov
sub
adc
mov
inc
jbe
jecxz
sahf
pop
jo
je
push
mov
xchg
xlat
in
pop
mov
and
jns
inc
add
jne
mov
sub
mov
das
lea
mov
ds
dec
ja
mov
push
test
push
and
test
xor
addr16
loop
xchg
mov
inc
inc
push
pop
adc
dec
dec
cmpsb
xchg
sbb
xlat
or
aas
fcmovnu
push
ds
adc
lahf
pop
icebp
push
sub
bound
andb
into
cmp
xchg
pop
repz
sbbb
mov
dec
aas
lahf
jno
sbb
lods
xchg
xchg
xor
adc
cmpsb
inc
test
push
lret
push
lcall
repnz
xor
mov
mov
jl
into
aaa
call
es
outsl
andl
dec
and
daa
mov
add
xor
rclb
ljmp
and
jge
ja
xchg
mov
rcrl
push
out
imul
decl
mov
mov
ja
mov
test
and
imul
cli
or
popa
push
inc
rorb
int
imul
push
aas
dec
xlat
pushf
idivb
into
xor
insl
lods
and
addl
div
push
popa
add
dec
add
inc
imulb
and
loopne
xchg
cmp
mov
mov
js
lcall
add
or
xor
aaa
inc
sahf
mov
scas
adc
pop
push
xchg
out
das
mov
adc
and
xor
scas
lock
jl
jecxz
and
xchg
stc
arpl
sub
sarl
rolb
adc
pop
into
mov
mov
adc
xchg
lcall
dec
nop
insl
inc
icebp
xor
push
ljmp
ds
and
push
inc
cwtl
sbb
mov
loopne
test
les
int
addl
enter
cmp
and
call
jnp
dec
jmp
lret
mov
xchg
push
inc
clc
mov
xor
popa
xor
sbb
lds
pushf
fdivs
lcall
clc
fisttps
js
adc
jmp
dec
cmovle
cmp
std
leave
sarl
sti
or
stos
adc
stc
mov
pop
lods
mov
jecxz
ss
fstpt
fdivrl
dec
leave
icebp
jp
push
mov
push
pop
mov
nop
icebp
insl
stos
add
int
jge
loope
jb
pop
and
xchg
sub
lods
xor
ljmp
dec
bound
inc
jp
push
repnz
rorb
or
fs
iret
std
fnstcw
sbb
aaa
in
out
pop
js
iret
cmp
jmp
xor
adc
dec
pop
xchg
pop
xor
ds
pop
je
ljmp
mov
jb
or
stos
and
sti
xor
rcrb
jp
and
popf
mov
xor
lea
pop
fcompl
daa
repz
push
jb
inc
push
sahf
jb
dec
jecxz
mov
iret
inc
lea
sbb
ss
jg
out
dec
adc
inc
sti
or
jle
mov
sbb
jg
ret
pushf
cmp
push
js
lods
rcrb
cmp
push
sbb
pop
sbb
test
insl
cmc
mov
jg
add
inc
xor
das
add
mov
dec
push
xor
jecxz
stos
mov
stos
test
cmpsl
push
fadds
push
or
sbb
sub
sub
inc
fwait
in
pop
dec
push
add
lahf
xchg
adc
shl
and
cmpsb
das
push
lret
sub
mov
xor
scas
xorb
sub
fs
fadd
std
and
mov
dec
mov
int
mov
sbb
fwait
push
shlb
lock
dec
mov
fdivl
addr16
push
test
sbb
cmp
dec
xlat
push
add
in
push
jle
cmp
test
repz
pop
negb
xor
pusha
iret
ss
mov
add
add
cmp
cltd
mov
cmpl
add
rcrl
xlat
pop
test
pop
mov
xchg
repz
hlt
adc
push
je
adc
imul
xor
mov
adc
push
jnp
push
aas
stos
mov
and
mulb
and
mov
mov
push
pop
inc
fistl
mov
push
filds
dec
mov
push
pop
or
xchg
int3
dec
mov
test
sub
aas
hlt
xchg
or
or
ljmp
ficoml
aad
cmp
cmpsb
popf
in
int3
add
push
pop
mov
stos
nop
pushf
fcomps
pop
pop
jb
pop
and
in
das
adc
xor
xor
add
push
cld
cmp
cmp
outsl
in
inc
movsb
ret
sub
jo
mov
cli
jecxz
je
xor
mov
mov
mov
iret
mov
mov
std
xlat
aad
dec
outsl
add
jp
loopne
cmp
lods
daa
pushf
sbb
push
addr16
cmpsl
sub
and
int3
push
mov
mov
in
xor
xchg
jne
sbb
lret
jo
subl
push
push
movsl
mov
mov
std
pop
xor
hlt
pop
xor
cltd
adc
mov
xorb
xchg
xchg
or
les
nop
push
scas
cmp
popa
in
filds
xchg
mov
repnz
rclb
cmc
fldenv
inc
fsubs
loop
mov
adc
jnp
add
das
pushf
dec
nop
popf
mov
dec
clc
xor
pop
aas
mov
jp
xor
lret
daa
leave
pop
sarb
pop
in
test
push
mov
mov
jmp
arpl
xchg
mov
inc
mov
push
pop
cmpsl
cmp
push
cmp
jno
je
mov
stc
insb
dec
out
xlat
jg
xchg
ljmp
leave
cli
mov
cmc
das
jge
cmp
xlat
pop
jb
gs
mov
rolb
sub
mov
fwait
in
shll
cmp
sub
lods
dec
or
mov
or
jbe
lcall
roll
cmp
xor
insl
inc
lea
lock
and
lods
and
cmp
and
lret
push
jne
pop
mov
shl
push
fldl
jl
push
mov
or
cmp
push
adcb
addl
movq
push
repz
and
data16
decb
or
or
add
jmp
push
sub
push
adc
push
fdivrl
popa
ficoms
adc
xchg
lds
mov
pop
movsl
aad
pop
xchg
xor
jl
ds
mov
sbb
rclb
cwtl
das
mull
outsb
push
add
mov
movsl
inc
inc
sbb
rcrl
cli
cwtl
jo
cmpsb
inc
shrl
sti
inc
or
mov
mov
filds
mov
push
mov
cli
das
pop
add
mov
hlt
test
fs
notl
enter
ja
and
fistl
test
imul
jmp
mov
ret
xchg
ja
mov
daa
cmp
outsb
scas
in
xor
mov
jb
push
pop
or
xor
out
ja
cwtl
fdiv
cmpb
pop
int
cld
gs
inc
xchg
mov
popa
add
mov
jg
hlt
inc
mov
jmp
roll
testb
cmpsl
mov
rclb
xchg
fldt
in
std
iret
jne
lods
xlat
jb
jp
shlb
adc
sub
rorl
in
jb
scas
mov
push
add
ret
lcall
xor
mov
push
xchg
mov
icebp
imul
shll
inc
sbb
or
leave
test
xor
nop
mov
test
push
cmpsl
aad
jne
stc
inc
cmp
in
pop
fisttpll
pop
and
or
add
lock
sub
sub
push
add
mov
addr16
pop
mov
mov
mov
outsl
cmc
push
jp
popf
adc
jmp
or
push
sub
iret
dec
jae
nop
cmpsl
xchg
imul
mov
mov
in
jo
xchg
mov
xchg
mov
shll
push
shll
sbb
aas
cmp
mov
fdivl
xor
jle
jmp
jns
mov
cmp
mov
rcrl
xor
cltd
push
ja
mov
leave
lret
inc
dec
xchg
sub
jmp
iret
pop
repnz
xor
mov
ds
loope
jno
push
leave
jle
inc
adc
mov
mov
jne
arpl
lahf
xor
cltd
xor
xchg
mov
mov
lret
in
addr16
jg
dec
and
fucomi
xchg
roll
mov
xchg
mov
adc
xchg
sahf
adc
mov
ret
addl
mul
mov
sti
nop
mov
xor
and
mov
pushf
dec
fisubrs
mov
mov
cmp
sub
imul
jns
add
mov
lret
xchg
insl
mov
push
mov
hlt
mov
sti
lret
jle
or
fldl
cli
addr16
clc
aas
dec
add
sbb
mov
imul
xchg
loop
subb
push
xor
dec
out
sbb
mov
clc
ljmp
add
cmp
addl
repnz
aad
movsb
jnp
adc
jo
enter
mov
hlt
mov
in
push
out
cs
mov
insb
mov
add
les
mov
pop
dec
pop
pop
inc
insb
mov
dec
dec
idiv
std
jl
push
dec
cmp
outsl
push
lret
cld
lock
sub
or
fnsave
bound
or
dec
push
in
lcall
enter
arpl
push
les
in
pop
jne
dec
decl
std
and
jg
jle
stos
sahf
aad
bound
cmpsb
pop
jne
mov
daa
pop
loopne
ljmp
and
mov
scas
fldl
xor
inc
je
jb
adc
dec
xchg
aam
pop
scas
lcall
push
jae
out
push
adc
dec
mov
enter
or
adc
test
xchg
adc
movsl
das
dec
sbb
movsl
ljmp
xchg
adc
fwait
scas
imul
or
or
test
leave
cmp
test
sub
cmp
cld
lods
shlb
add
add
mov
lcall
scas
fwait
dec
push
idivl
mov
outsb
mov
add
sbb
jo
in
pop
test
test
loope
movsb
push
cmp
xlat
stc
out
cmc
adc
mov
dec
jne
push
faddl
jle
lods
cli
or
jns
xor
inc
loopne
jae
push
cmp
out
aaa
push
mov
arpl
lods
sbb
inc
das
inc
aam
aad
cmp
xor
imul
cmp
and
add
lds
pop
inc
jbe
lods
dec
aam
sti
and
jnp
or
inc
sarb
in
and
cmc
or
push
jge
jbe
adc
jne
xchg
sub
xchg
fmull
add
sahf
out
xor
insb
mov
movsl
and
mov
sub
sbb
push
cmp
adc
ret
cwtl
lcall
and
jnp
or
stos
test
and
jge
fwait
mov
ljmp
lods
aam
enter
pop
rcrl
daa
jno
pushf
mov
dec
popf
std
rol
stc
pop
es
aad
dec
mov
xchg
mov
sti
ret
lret
jmp
lods
inc
outsl
cmc
push
mov
xor
in
out
mov
or
jge
mov
mov
mov
clc
in
insb
bound
dec
int3
call
inc
in
ret
adcb
lods
mov
cmpl
push
sbbl
and
test
push
imull
push
mov
fcoml
movsl
sub
insb
mov
jb
jno
dec
cmp
leave
or
inc
divl
mov
aas
jl
sub
mov
or
iret
and
cmp
xor
inc
test
dec
pop
mov
mov
push
sbb
movsl
add
jne
add
paddd
repz
jle
jge
mov
adc
fidivl
dec
add
loopne
test
mov
mov
push
xchg
in
callw
leave
pop
mov
add
adc
movsb
nop
pop
sbb
inc
fnstsw
mov
pop
mov
lcall
loope
lds
mov
push
mov
xchg
cmp
dec
adc
xor
cli
pop
pop
push
push
pop
in
cltd
das
add
fmull
or
jge
inc
push
dec
mov
imul
or
xchg
mov
out
and
dec
clc
cli
in
sub
shrb
sarb
cs
jle
dec
adc
ds
in
rcr
stos
jecxz
xor
jge
jl
and
mov
pop
lcall
push
adc
sub
lods
mov
lahf
and
outsb
push
pop
in
sbb
bound
dec
mov
ljmp
repz
cmp
mov
sbb
push
ffree
sahf
cli
rcrl
fcmovne
mov
out
ljmp
repz
push
popa
test
lret
mov
add
out
adcb
cmpsl
or
in
jne
leave
xchg
repnz
fcmove
mov
fs
pop
outsl
cmp
test
test
or
push
hlt
aam
or
xchg
test
add
and
and
mov
pop
lahf
inc
int3
imul
scas
sub
aaa
mov
xor
in
mov
imul
or
ficompl
cmp
clc
in
mov
mov
hlt
inc
sti
add
fsubr
xchg
xor
push
cmp
sbb
sahf
jle
mov
mov
and
push
mov
mov
xchg
into
rcll
addl
xchg
jp
sbb
push
sbb
xchg
and
inc
xor
cltd
inc
adc
insb
fs
mov
es
mov
add
lret
or
cld
pusha
bound
pop
push
repz
dec
mov
pusha
xchg
fistps
mov
xlat
pushf
or
sbb
cltd
inc
sbb
sub
orl
shl
xchg
add
dec
mov
xor
push
ret
nop
push
inc
fistl
pop
and
push
loop
inc
popa
lcall
shlb
jae
push
dec
add
cmp
imul
or
lds
cmp
mov
rcr
xor
dec
cmp
in
adc
repz
ja
cmpl
cltd
mov
xor
jmp
in
mov
addb
push
filds
ror
inc
jmp
jg
icebp
std
aad
aas
inc
dec
push
inc
fistpl
imul
lahf
cmp
push
xchg
shll
mov
mov
rolb
dec
or
pop
fs
fists
xchg
call
gs
sbb
insl
lock
dec
sub
push
and
cmp
pop
push
lods
int
add
cltd
in
xor
inc
mov
or
sbb
add
or
xor
push
bound
sub
mov
xor
and
xchg
push
push
mov
hlt
mov
sti
clc
sbb
lock
in
jo
inc
sub
and
xor
iret
mov
or
stos
adc
gs
bound
inc
jge
les
stc
push
xchg
or
movsb
repz
icebp
pop
mov
daa
cwtl
stc
inc
aad
iret
cmp
icebp
adc
jp
iret
stc
xchg
and
decl
mov
lret
or
mov
jge
mov
jecxz
pop
lret
cmp
orl
or
jmp
clc
jecxz
outsl
and
fsub
les
pop
add
loope
nop
shrb
add
or
mov
fs
cmp
stos
dec
dec
jns
jbe
mov
into
push
icebp
sahf
mov
adcl
cmpsl
fnstsw
xchg
push
sub
mov
pusha
mov
mov
xchg
jbe
mov
fistpl
and
lret
bound
push
lock
xor
jge
icebp
adc
cmp
xor
sub
xor
das
icebp
mov
fnstsw
in
push
repz
mov
fs
sti
data16
inc
add
ret
adc
dec
sub
dec
bound
mov
mov
and
in
lret
test
mov
cmp
fidivs
sti
lds
sub
sub
dec
pop
mov
aas
jne
mov
int3
scas
xchg
roll
enter
cmc
mov
aaa
stos
mov
in
sbb
loopne
push
dec
ja
cld
inc
jecxz
sbbl
insb
adc
xchg
push
mov
out
fidivrs
sub
mov
jbe
mov
mov
cmp
scas
xlat
loop
push
lcall
sbb
cmp
nop
pop
int
xchg
gs
lds
or
fistpl
push
out
in
icebp
mov
xchg
stos
mov
pushf
imul
shlb
repnz
push
xchg
xchg
lcall
fimuls
out
ljmp
movsb
fidivrs
loop
mov
test
and
test
clc
in
bound
lods
les
xchg
xchg
xchg
dec
fwait
jno
push
and
addl
es
cmp
and
mov
xchg
cmp
in
sahf
test
mov
mov
push
fwait
inc
out
pop
inc
mov
xor
push
jns
es
cwtl
mov
dec
mov
addr16
adc
mov
jle
cmp
cld
mov
xchg
xor
andl
jge
dec
fwait
xchg
xor
dec
sbb
xchg
xchg
in
gs
movsb
xchg
sub
dec
sbb
mov
lea
add
sbb
out
push
mov
or
stos
or
mov
xchg
or
mov
xchg
pop
fprem1
nop
pop
mov
jle
xor
lahf
xor
in
mov
pop
mov
or
rorb
add
pop
mov
in
xor
adc
inc
mov
pusha
iret
mov
push
ret
ja
mov
mov
aaa
out
adc
lock
push
xor
push
inc
xchg
data16
adcb
mov
and
inc
adc
xchg
push
pop
gs
arpl
jmp
cwtl
mov
dec
jbe
mov
dec
and
test
outsb
mov
or
lds
lcall
stc
rcll
ljmp
out
arpl
mov
pop
or
add
int3
leave
jae
out
fucom
bound
or
jle
mov
aas
stc
mov
fidivl
cltd
mov
jne
aad
cli
pop
pop
pop
insl
je
scas
ficoms
andb
or
test
pop
shrb
mov
fdivp
adc
icebp
fwait
jo
in
jle
hlt
or
mov
leave
push
lods
insb
imull
mov
xor
sbb
flds
mov
cld
and
in
mov
loopne
jne
jne
repz
jmp
int3
sub
mov
push
fistps
aam
pusha
out
mov
sbb
pop
scas
out
or
adc
pop
mov
mov
out
push
shll
fsubrl
mov
adc
xchg
pop
push
xchg
mov
fmuls
fistpl
mov
mov
nop
sub
cmpl
jnp
daa
xchg
inc
push
dec
aaa
xchg
jbe
xchg
inc
sahf
loopne
rorl
and
imul
clc
cwtl
sti
xchg
xor
xor
shlb
pop
rcrl
mov
sbb
sbb
mov
inc
call
test
in
pop
scas
add
mov
fdiv
or
and
rcrb
ret
jnp
dec
vpsrlq
stos
mov
mov
jecxz
fisubrs
addr16
lea
shl
add
xorl
int
addl
xor
leave
sub
cmpsb
addl
cltd
mov
lds
or
pop
jge
es
andb
testl
sarl
cmp
pop
xchg
xchg
xchg
sub
imul
pop
push
insl
test
test
push
dec
and
mov
scas
mov
ret
incl
push
fisubrl
and
outsl
push
cwtl
adc
fildl
cs
jmp
fwait
or
mov
lcall
jg
bnd
xchg
loopne
mov
push
push
mov
es
imul
cmp
and
in
sbb
adc
and
lahf
push
add
mov
mov
sbb
push
inc
mov
shlb
or
xlat
in
mov
adc
movsl
cmpsb
xor
or
fsubs
sarb
lret
adc
pop
xor
dec
jecxz
mov
cwtl
imul
jbe
ret
cmc
or
sub
mov
stos
daa
xchg
in
loopne
pop
dec
pop
adc
sbb
xor
lock
lahf
shrb
inc
mov
cltd
repnz
loop
int
xor
xchg
insl
int
hlt
mov
lret
imul
cmp
push
jns
and
jns
roll
xor
jbe
and
mov
clc
dec
jecxz
mov
adc
cwtl
jnp
lods
or
sbb
mov
test
inc
jne
adc
sbb
rcll
loopne
cmpsl
insb
push
ret
push
jge
mov
inc
pushf
sbb
inc
dec
jg
and
sti
iret
jecxz
jge
pushf
leave
test
xor
push
mov
mov
cwtl
and
pop
mov
into
mov
testb
shll
xor
arpl
loope
jb
stos
out
add
or
mov
jae
stc
mov
xlat
sub
or
shlb
shlb
pushf
adc
inc
push
push
or
ljmp
into
or
in
test
pop
insl
push
mov
iret
jnp
out
out
lcall
adc
leave
mov
int
fistpl
pop
or
push
mov
or
mov
sub
xor
out
out
xchg
cmp
shlb
xor
stc
add
or
mov
jno
lret
insb
sub
inc
cld
push
fistl
sbb
mov
or
pushf
lock
lret
xor
ja
xor
mov
mov
jo
mov
js
and
inc
filds
xor
pop
sbb
ljmp
fimuls
lcall
jmp
dec
cwtl
mov
inc
lods
clc
jge
int3
jne
cmp
lea
shrb
push
jo
jo
adcl
fldl2t
aaa
mov
and
test
pop
out
imul
inc
cmp
xchg
aad
cmpb
xor
fldl
lock
adc
mov
add
bound
adc
inc
mov
jb
cltd
jb
rol
xchg
insb
pop
jecxz
inc
fsubrl
push
clc
dec
clc
test
and
xchg
insl
int3
mov
mov
or
pop
jmp
jb
and
sub
cli
sbb
xor
hlt
jecxz
out
lcall
push
mov
and
adc
push
mov
scas
aam
test
fbld
lods
and
popa
adc
test
sti
and
dec
push
mov
push
push
or
out
rcr
aaa
mov
mov
fisubrl
daa
inc
inc
jo
pop
add
clc
push
fadd
pop
gs
push
dec
mov
push
loop
mov
or
jl
hlt
testl
xlat
add
es
or
dec
imul
mov
lock
pop
and
xchg
pop
out
dec
into
push
mov
jg
gs
pusha
rorl
jbe
dec
cmp
cs
jecxz
sbb
lods
adc
cltd
movsb
jmp
adc
movsb
add
or
mov
mov
incl
aas
je
jnp
push
mov
mov
jbe
std
jnp
push
or
outsl
mov
test
in
daa
ret
xor
ror
das
pop
jmp
sbb
insl
dec
stc
push
in
mov
pusha
fs
jle
pop
and
cmp
inc
movsb
xchg
je
jo
and
mov
inc
fcmovu
push
xor
shll
lret
or
mov
push
fs
xchg
cmpsb
shrb
je
xchg
jb
enter
mov
aas
lret
cmp
aam
sbb
cmp
xchg
fstps
lods
or
iret
jo
hlt
cmp
and
xor
lods
fdivrs
js
xor
mov
mov
xor
push
mov
inc
pop
outsb
jbe
add
pop
xchg
cwtl
xchg
icebp
repz
int3
sti
insb
mov
cmp
push
stos
insb
cmp
fcmovne
add
fidivrl
loopne
insl
mov
idivl
pop
sbb
and
cwtl
sahf
fs
jmp
idivl
stos
push
out
arpl
jnp
les
int
mov
in
jecxz
jne
mov
mov
out
loopne
cmp
sbb
xchg
mov
add
pop
sbb
into
ret
sub
flds
mov
sbbl
add
int
or
pop
adc
xor
push
inc
jg
decl
fsubrs
jnp
movsl
leave
sbb
push
push
lock
xor
out
jge
pop
inc
xor
jne
adc
mov
test
xor
inc
leave
add
sahf
ret
push
dec
sub
je
rcr
cmp
lret
jmp
lret
movsl
cmp
enter
adc
or
dec
leave
xchg
es
pop
cmpsl
cmpsb
lods
push
and
dec
js
lock
and
cli
shlb
dec
popa
mov
in
sub
fcomi
insb
shl
out
xor
movb
jle
aam
adcb
into
dec
addr16
lods
mov
push
shll
xor
mov
loop
mov
sub
scas
ror
ss
loop
arpl
lock
mov
sub
std
mov
lds
add
leave
pop
repnz
repnz
in
jns
clc
loop
jg
pop
add
cmpsl
dec
mov
aaa
insl
enter
mov
inc
pop
loope
jo
dec
push
roll
ljmp
xor
loope
js
lds
daa
sbb
jecxz
stos
or
adc
mov
out
pop
orb
mov
jp
sbbb
fs
test
pop
lcall
jecxz
mov
or
ds
ret
push
mov
fistpl
push
adc
and
push
movsl
movsl
mov
mov
aad
sub
cld
push
out
jb
pushf
mov
push
mov
pop
adc
ret
cld
xlat
mov
jnp
loop
repz
add
sbb
dec
enter
negb
mov
or
lahf
sub
mov
mov
call
mov
ret
cmp
loop
lds
or
inc
std
cmpsl
or
loopne
leave
cmpsl
sahf
cltd
mov
outsb
outsb
subb
pop
stos
push
mov
jne
loop
jbe
into
ret
xchg
xor
lcall
xorl
mov
push
int
je
std
xchg
and
addb
ss
xor
inc
mov
sub
stos
shl
movsb
xchg
adcb
cmp
jnp
mov
icebp
ret
aam
mov
sbb
mov
adc
sbb
insl
lea
adc
xchg
test
lds
outsb
insb
popa
test
mov
out
outsb
cltd
xchg
sahf
mov
inc
pop
or
adc
jnp
xchg
and
sub
mov
jmp
add
mov
adc
rclb
stc
cwtl
mov
pushf
mov
mov
jp
mov
mov
mov
incl
adc
push
xor
dec
out
and
pop
in
fsubr
incl
cmpsb
mov
arpl
lock
adc
insb
pop
jno
shrb
push
scas
push
cli
std
fcmovb
bound
mov
inc
cltd
outsl
sbb
movsb
cmpsl
mov
daa
inc
sub
repnz
inc
xchg
push
adc
in
jmp
vhaddpd
xchg
rcrb
adc
call
fs
cld
mov
decl
les
mov
out
mov
or
mov
js
fsubrl
pop
repnz
cmpb
pop
jg
icebp
sbb
dec
mov
fists
rcrb
negb
cmp
xchg
xchg
roll
jg
mov
jg
lods
pop
sub
adc
cmp
js
fadd
sub
xchg
xchg
mov
xchg
push
dec
or
inc
xor
dec
aas
subb
popf
mov
mov
xchg
je,pt
mov
into
or
xchg
dec
cmpb
sarb
xor
repz
cmp
adc
add
test
test
xchg
jmp
jle
push
and
sbb
push
nop
push
hlt
leave
sbb
xor
pushf
shll
mov
in
aaa
fcoms
xchg
outsb
jo
dec
push
or
clc
stos
mov
aas
mov
adc
int3
and
sti
jp
pop
sub
ljmp
jmp
dec
repz
ret
mov
dec
enter
inc
xchg
sub
lret
push
es
push
mov
sbb
xor
push
out
popf
add
popl
stos
repnz
mov
mov
hlt
std
ret
hlt
jg
sub
xor
icebp
clc
xor
sub
shr
mov
fdivl
adcl
mov
out
jle
test
test
ret
ljmp
inc
mov
orb
insb
push
ss
mov
push
fdivl
ja
rcl
mov
nop
das
ja
xchg
and
push
pop
jo
jb
dec
divb
std
arpl
stos
mov
mov
mov
and
pop
shrb
in
in
or
push
xchg
jle
in
push
ret
xchg
lods
push
rclb
leave
pop
add
mov
jns
mov
pop
outsb
inc
and
int
cmp
or
sahf
loope
mov
adc
cmc
adc
clc
js
add
lahf
movsl
xorb
or
xchg
lock
mov
pop
leave
mov
push
xor
jmp
pop
sub
jp
jl
mov
retw
cmp
jmp
popl
aad
ret
test
xchg
roll
shl
inc
push
jecxz
mov
xor
subl
dec
add
or
jp
daa
push
test
rcl
inc
ss
jne
repnz
fdivrs
test
aaa
sbb
cli
sahf
ret
mov
mov
sbb
xchg
push
in
test
mov
add
cld
pop
cltd
nop
shlb
dec
pop
dec
add
ret
call
mov
shlb
dec
fs
mov
int
imul
adc
xor
pop
xchg
jns
and
mov
adc
lods
jmp
dec
push
push
cwtl
xor
cmp
sbb
cwtl
dec
test
and
notb
sbb
jp
jmp
sbb
inc
fistps
cmp
out
xor
popf
stos
dec
pop
sub
xor
out
cmp
adc
pop
mov
xor
mov
fnstenv
in
fwait
xchg
mov
xchg
dec
mov
xchg
cmp
or
xor
xorl
shl
push
je
adc
mov
sbb
cmpsl
mov
xor
mov
test
xchg
or
or
pop
sub
idivl
cli
mov
jg
aad
mov
testb
dec
repz
lahf
fcmovnbe
jge
ja
lcall
test
imul
leave
std
pop
adc
outsl
ret
lcall
mov
cmc
xchg
mov
pop
xchg
mov
jl
lods
aas
je
xor
out
mov
or
xchg
cmp
inc
mov
and
pop
aad
ss
xlat
in
lret
mov
pop
cmpsb
cmp
push
adc
outsl
cs
or
jae
xor
je
jp
cli
in
mov
lret
push
mov
push
fisubrs
ja
jo
mov
push
lahf
jg
xor
dec
imul
mov
gs
leave
shlb
lods
cmpsb
push
pop
mov
sbb
lahf
jg
cmp
pop
out
arpl
xor
sub
jne
xor
mov
in
jecxz
pop
mov
sbb
mov
je
add
loope
les
lcall
xchg
rorb
jne
shrl
lock
int
in
roll
and
hlt
push
push
xor
sub
fdiv
sub
icebp
and
stc
mov
pop
imul
sti
cwtl
je
mov
lcall
cmp
hlt
mov
sbb
or
xor
xor
es
pop
cmp
and
mov
add
leave
xor
xchg
mov
xchg
in
scas
xlat
stos
dec
out
jl
sub
push
cmp
push
add
shll
inc
mov
lods
xorl
inc
inc
mov
jg
lcall
ret
mov
scas
sbb
mov
mov
push
das
pop
mov
fistpl
arpl
mov
cs
xchg
roll
xchg
lcall
jo
jnp
in
xchg
push
push
add
sub
sub
cmp
push
and
xor
mov
xchg
sub
jle
add
loop
not
jecxz
mov
repnz
fdivrs
or
into
std
mov
ret
jne
mov
jg
mov
sub
fnsave
clc
mov
lods
paddusw
add
cmp
mov
adc
in
movntps
movsb
scas
sarb
dec
loopne
push
mov
in
sti
into
xchg
or
cmpsl
add
stos
inc
sub
test
pop
push
and
lods
stc
jbe
sub
push
mov
push
adc
or
loopne
inc
out
pusha
mov
jg
jp
push
cwtl
rclb
out
inc
pop
pop
lret
lods
mov
or
je
in
js
loope
xor
mov
jp
pop
call
push
pop
fucomip
mov
lret
jecxz
movups
push
xchg
jl
add
fbld
scas
in
out
movsl
lods
outsl
dec
movsb
mov
and
insb
fld1
out
mov
neg
lock
shll
lea
scas
mov
inc
inc
lret
out
inc
or
dec
es
and
icebp
jbe
icebp
in
ret
arpl
mov
jg
push
mov
add
jnp
adc
fidivrs
pop
dec
adc
cmp
mov
mov
jmp
add
ja
enter
shrb
dec
jecxz
fs
mov
out
inc
mov
loope
pop
dec
cmc
in
lcall
ret
xor
cmpl
mov
xor
push
je
jle
and
les
mov
or
cmp
movsl
outsb
popf
inc
test
dec
or
xchg
add
jle
jnp
and
cld
pop
insb
sbb
popa
inc
out
js
in
movsl
mov
dec
xchg
fs
dec
xor
sbbb
sarb
hlt
test
mov
push
lods
bound
mov
and
push
fmull
adc
or
dec
sbb
sahf
push
cmp
pusha
out
stos
aad
test
pop
adc
cltd
mov
sub
inc
test
bound
outsl
cmpsb
cli
jecxz
xlat
test
fildl
hlt
cmp
cmpsb
xor
je
out
fldl
divl
mov
sub
lahf
test
xor
data16
and
outsl
mov
lock
mov
in
testb
mov
pop
sbb
fld
and
xor
popf
or
lods
std
xor
adc
iret
and
push
rcrl
stc
subl
insb
test
pop
je
inc
mov
fmul
jbe
pop
pop
int
xor
dec
mov
mov
insl
in
stos
jno
mov
push
mov
dec
imul
test
imul
dec
and
pop
int
stc
jbe
mov
out
cmc
xor
inc
jo
xchg
add
sbb
lret
pop
push
cmpsl
lock
inc
inc
xor
sbb
enter
mov
leave
bound
sbb
rcrb
test
inc
loope
sti
bound
fs
push
shl
clc
stos
or
sub
clc
int3
loopne
test
fnstenv
add
and
das
mov
dec
add
je
mov
hlt
mov
lret
mov
jge
cs
mov
fsts
cltd
jnp
shll
jmp
inc
cmp
andb
xchg
rorl
jmp
jle
mov
dec
cmp
imul
dec
es
adc
xor
push
adc
cli
xchg
sub
mov
pop
or
iret
inc
xor
sbb
sbb
mov
push
in
mov
add
fildll
pop
or
inc
xchg
mov
dec
mov
fsub
fildl
movsl
sarl
orb
pmovmskb
popl
push
stc
xchg
inc
test
negl
outsb
cmp
xadd
xor
pusha
jno
fists
and
rcrb
push
cpuid
pop
fldl
adc
in
aam
mov
scas
outsb
cwtl
sbb
lods
icebp
sbb
pop
loopne
les
fildl
frstor
movsl
popf
jl
pop
mov
mov
add
movsl
imul
xchg
addr16
sub
movsb
mov
ja
sar
push
jnp
test
or
popa
movsl
and
aad
xchg
adc
adcl
mov
movsb
test
jle
dec
loope
mov
cmpb
es
pop
mov
enter
jbe
ss
pop
fcmovu
ret
fdivrs
lods
mov
cmp
adc
fwait
cmp
mov
xor
ret
jle
xlat
xchg
xchg
adc
xchg
jecxz
icebp
jl
test
stc
out
mov
sbb
add
in
lret
pop
inc
roll
dec
xor
pop
jle
arpl
adc
xchg
jnp
test
sbb
out
addr16
pop
pop
inc
xchg
faddl
xchg
popf
mov
pop
xchg
mov
ficoml
leave
pop
or
sub
jb
sub
repnz
xchg
out
mov
je
scas
and
out
xchg
lret
mov
push
shll
dec
js
sti
test
sahf
out
and
leave
mov
xor
cmc
jge
push
mov
orl
xor
dec
cmp
pop
imul
adc
pop
or
outsl
in
imul
andl
test
jmp
mov
daa
test
test
add
addb
jo
jb
pop
rcr
out
lock
pushl
out
push
imul
sbb
push
or
ljmp
test
es
inc
jae
inc
add
fildl
stc
pop
xor
lret
inc
dec
push
mov
add
xchg
sti
inc
mov
pop
jge
in
rcrl
rol
jb
fnstsw
mov
jecxz
adc
sbb
push
cmp
push
shll
loop
add
pop
int
mov
mov
cmpsl
add
pop
mov
std
push
pop
lahf
push
js
mov
negl
mov
xor
and
mov
std
xor
xor
push
jmp
int
in
pop
push
xor
jle
adc
xor
sbb
xchg
or
daa
xchg
xor
dec
fstpt
dec
push
and
testl
jl
mov
cmc
adc
or
fcoml
cmp
adc
jno
in
faddl
addr16
push
and
cmp
ja
daa
mov
mov
movsl
dec
xor
or
lret
add
rolb
xor
cwtl
pop
imul
andl
mov
sarl
shlb
enter
clc
sbb
add
call
inc
mov
jmp
or
lret
xor
cltd
xor
hlt
mov
rcr
jge
fidivs
scas
mov
ss
mov
in
out
and
in
loop
push
ja
fiaddl
clc
cmc
add
mov
jne
dec
lahf
mov
cmp
mov
sub
pop
cmp
lods
mov
test
mov
pop
mov
cmp
jns,pn
aam
insl
into
push
ja
mov
or
push
scas
clc
xor
sti
sub
popa
ja
fists
mov
pop
aaa
add
adc
jns
scas
sbb
icebp
push
insb
dec
ds
or
jae
sti
xchg
inc
out
aam
loope
mov
addr16
xchg
dec
push
mov
pop
adc
cli
sarl
xor
cmc
popf
jle
xchg
dec
nop
dec
cmp
lea
mov
imul
inc
dec
pop
sub
push
ja
fidivs
rcrl
mov
test
lea
add
xlat
es
jecxz
or
fldt
pop
sbb
xor
xor
loopne
add
out
push
and
jno
stc
in
dec
lds
in
jmp
adc
pop
ss
loopne
xchg
fildll
cmpsl
clc
in
test
jb
subl
arpl
call
popf
ds
adc
aaa
mov
sub
repnz
pop
adc
lods
negb
sti
in
cmp
mov
shlb
cmc
ret
test
add
and
jmp
pop
cli
push
adc
push
mov
jae
sub
bts
mov
js
nop
sti
stos
mov
mov
mov
add
loopne
sub
push
pop
fdivrp
rcrb
inc
mov
loope
mov
rcrb
roll
sub
loop
and
rorb
jg
xlat
pop
pop
popa
dec
fbld
pop
cmpb
mov
mov
imul
lahf
enter
mov
int3
in
dec
mov
rclb
imul
movsl
sahf
mov
push
shr
sbb
mov
in
cltd
inc
xchg
dec
insb
pop
lret
xor
addr16
xor
popa
lods
xlat
push
call
push
xorb
das
pop
push
rolb
or
xchg
hlt
mov
aas
loope
fiaddl
mov
dec
pop
in
ret
adcl
jae
push
mov
inc
inc
imul
filds
push
sahf
in
rolb
arpl
pushf
xchg
pushf
add
mov
push
cmc
popf
dec
sub
cmp
xchg
mov
mov
je
jne
aad
push
adc
faddp
and
inc
ss
xor
mov
mov
mov
pop
dec
mov
lea
gs
ss
sar
push
ret
movsb
std
mov
shlb
jbe
xchg
sub
mov
push
fsubl
test
nop
mov
cltd
sbb
push
mov
mov
mov
inc
outsl
sbb
clc
lods
push
orl
sbb
into
inc
add
in
mov
adc
aam
push
sub
mov
and
cltd
js
mov
push
lods
dec
adc
icebp
lods
insl
jle
pusha
pop
or
mulb
and
in
jecxz
das
out
jae
sbb
repz
je
push
jmp
push
leave
mov
cmp
sbb
xor
and
xchg
or
test
in
push
fldcw
jp
add
repnz
notb
add
cwtl
scas
std
out
dec
loop
jae
add
mov
mov
xor
jne
in
xabort
push
scas
mov
xorl
mov
je
fst
adc
or
addw
fs
arpl
xchg
pop
fld
outsl
icebp
stc
or
pop
lock
cmp
mov
add
xlat
insb
mov
out
scas
mov
xor
xor
mov
lea
jno
es
mov
jle
jo,pn
jp
mov
dec
pop
cmp
cs
sbb
xor
je
inc
outsb
jo
nop
xchg
and
pop
jg
icebp
testb
inc
jno
std
cmp
jecxz
sbb
cmpsb
lods
cmp
mov
loopne
loopne
adc
pop
int
icebp
out
lea
in
out
xchg
nop
pop
adc
dec
xor
fldt
test
mov
push
xor
cmpsl
add
mov
mov
mov
pop
faddl
xlat
shr
in
movl
jns
push
dec
cld
push
xchg
test
pop
xor
sub
xor
mov
add
insl
jge
fiadds
push
jge
xchg
xorb
and
cltd
in
fsubr
icebp
cltd
hlt
lds
subb
ja
in
xchg
nop
sbb
push
pop
and
jl
and
jnp
pop
cltd
gs
aaa
jge
xor
cwtl
cld
dec
addb
fildl
mov
pop
mov
mov
sbb
nop
or
movsb
je
mov
lret
add
adc
ds
les
sub
add
sub
or
mov
popf
faddl
dec
mov
gs
das
jmp
cmp
add
xor
jmp
pop
loop
test
xor
insl
inc
pop
ss
outsb
mov
jbe
inc
leave
pop
push
sub
mov
jecxz
dec
jmp
cmpsb
and
testl
out
xchg
test
icebp
add
inc
lret
arpl
std
shl
mov
dec
pop
lahf
mov
dec
das
popf
jg
mov
and
sbb
ds
cmp
adc
mov
lret
and
and
movsb
adc
cmp
call
and
repz
cmp
add
jne
sbbl
pop
jmp
cmp
dec
pop
push
sarb
std
xchg
scas
cmp
mov
cmp
push
and
dec
mov
jmp
and
mov
cmpsl
leave
jmp
push
jp
mov
push
push
hlt
add
test
ja
daa
pop
hlt
bound
dec
lods
popa
mov
fwait
dec
movb
jo
inc
mov
clc
pop
dec
repz
call
xchg
fdivs
aas
jg
das
pop
cmp
and
jmp
stc
inc
out
mov
add
dec
xor
or
movsl
ficomps
clc
jo
test
loopne
loop
out
jg
jmp
mov
cld
adc
test
add
outsb
fistpl
addl
add
stc
lahf
push
clc
add
or
push
pusha
fbstp
jmp
sbb
sbb
mov
pop
or
lret
mov
in
xor
hlt
sub
or
jmp
inc
pop
loopne
and
inc
jae
sti
sti
pusha
subb
insb
insb
dec
or
mov
pop
mov
popf
xchg
dec
push
xchg
xchg
repz
aam
inc
sbb
push
fdiv
sub
or
sti
lret
lods
adc
add
mov
insb
subl
or
xchg
call
xchg
psubw
mov
andb
idivl
out
adc
aad
scas
cmc
lock
mov
dec
pop
add
adc
addr16
adc
xchg
fimull
rolb
aaa
mov
push
scas
or
mov
insl
adc
ret
sbb
hlt
enter
add
ret
jns
or
aas
ret
mov
inc
pop
dec
stc
mov
mov
out
pusha
call
sub
lret
mov
pushf
cmpsb
inc
sahf
clc
cmp
sbb
push
rorl
mov
dec
mov
ljmp
sbb
mov
sbb
enter
addb
xchg
daa
jmp
bound
sbb
add
cmp
cmp
pop
insb
xchg
pop
jae
insb
dec
cmovle
sub
lods
rcl
push
test
xorb
cmp
dec
adcb
popa
popf
jmp
ret
push
ja
hlt
push
jge
addr16
cmovs
test
jnp
push
add
sahf
inc
jnp
std
stos
add
cltd
lret
push
nop
in
cmp
or
or
push
cmp
lods
sbb
inc
repz
adc
sbb
aam
in
imul
lret
sahf
scas
mov
and
cmc
push
loope
pop
incl
fs
pop
xchg
sub
or
dec
push
int
or
shr
repnz
jno
xchg
jecxz
inc
dec
and
jb
std
or
decb
pop
mov
popf
mov
push
mov
add
mov
add
imul
bound
add
pop
mov
cmpsb
sbb
cli
out
xor
xor
push
dec
jge
pop
rorl
or
pushf
dec
outsb
mov
lret
and
jo
fldl
and
out
dec
cmp
mov
lds
movsl
fidivrs
and
xor
xor
addr16
outsl
mov
aas
add
fidivl
adc
mov
push
icebp
mov
inc
scas
imull
pop
xchg
je
dec
js
jge
sub
push
mov
mov
pop
sub
cmp
xor
dec
out
outsl
cmc
mov
subb
push
xchg
pop
sahf
cmpsl
je
repz
dec
paddsb
lea
gs
sbb
adc
and
fistps
sbb
jno
fldl
cmp
adc
insl
mov
mov
ljmp
sbb
pop
pop
push
ja
out
out
add
popf
cmpsb
mov
clc
adc
add
cmp
icebp
subb
sub
notb
mov
in
cmp
addr16
fcoms
lret
inc
addb
loop
lahf
dec
jae
mov
push
cs
adc
push
popf
aad
ret
frstor
out
cmpsl
mov
sub
iret
pop
pushf
xor
and
lahf
das
and
sbb
push
add
imul
mov
gs
cmpsl
mov
shr
outsb
fxch
and
or
cmc
sahf
or
js
lock
hlt
xchg
les
fisttpll
xor
jl
cmp
inc
mov
and
push
repnz
and
std
ret
daa
inc
dec
adc
xorl
test
dec
jns
xchg
and
add
sub
loopne
dec
jae
fsts
mov
pslld
scas
dec
pop
mov
mov
faddp
add
push
movsb
jb
push
mov
adc
mov
sbb
pop
jmp
insl
stos
cmc
mov
push
or
mov
sbb
fdiv
data16
inc
inc
cmp
xchg
adc
push
sub
sub
imul
adc
incb
cltd
or
and
std
jns,pt
or
or
or
data16
mov
or
sti
fldt
sahf
call
sbb
mov
js
push
inc
jno
ja
ja
movsl
xchg
and
aas
xchg
jns
pop
or
pop
popa
push
faddp
dec
push
ljmp
and
push
jnp
cmp
lret
mov
out
or
pop
push
imul
imul
popf
sub
push
add
mov
jl
sub
popf
aaa
aam
adcb
xchg
addr16
pop
in
jb
pop
dec
test
clc
aas
xor
xchg
jns
pop
movsl
out
lds
mov
clc
arpl
lcall
lods
sahf
xchg
loope
push
sti
mov
push
loope
fwait
xchg
mov
fldt
mov
and
adc
lcall
addr16
lcall
das
in
add
adc
mov
pusha
cs
test
cmp
out
and
scas
xchg
loope
cmpsl
sbb
out
inc
push
mov
movsb
mov
xchg
lahf
adc
mov
out
in
imul
inc
loope
rolb
popa
mov
sub
in
mov
repz
stos
rcrb
inc
add
mov
mov
add
inc
fdivrl
popl
lods
jnp
lods
sub
in
in
adcl
add
add
jecxz
mov
mov
cmp
stos
sar
aas
mov
sahf
mov
or
mov
mov
rcl
test
or
popf
cmp
sub
dec
aam
lcall
shrl
xchg
cmp
add
outsl
or
sbb
mov
incl
lcall
mov
pushf
mov
xor
jge
mov
test
adc
and
pushf
data16
xchg
xor
sub
int3
out
adc
mov
push
mov
adc
rcll
pop
into
cmp
repnz
addr16
test
push
pop
inc
leave
mov
sub
insl
orb
js
aaa
or
and
jb
mov
orl
pusha
es
sbb
or
shrb
or
adc
jl
xchg
mov
ret
push
push
mov
xor
insl
mov
add
adc
or
sub
mov
inc
lds
cwtl
mov
jnp
push
cmp
ja
pop
cmp
mov
push
std
icebp
lock
adc
jno
pop
dec
int
sub
test
out
hlt
rol
in
out
inc
push
mov
orl
cmp
sbb
jmp
sbb
sub
jle
clc
lea
mov
scas
outsb
adc
icebp
cld
xchg
sub
cwtl
fdivl
fs
fcompl
jae
ja
clc
icebp
or
cld
inc
dec
sbb
rcrl
jnp
jne
cmp
and
popf
cli
jno
inc
dec
ljmp
xchg
inc
lods
paddusb
arpl
jl
inc
mov
hlt
imul
pop
popa
std
fcmovu
fcmovnu
sbb
call
push
mov
aad
sti
stos
lahf
cmp
stc
mov
rcrb
testl
mov
jnp
cld
addl
jl
mov
mov
and
cli
fdivrl
out
lret
inc
cwtl
aam
jecxz
iret
xchg
inc
out
and
fcmovu
cwtl
outsl
add
pop
dec
rcll
popa
mov
pop
jne
cli
push
outsb
push
cs
das
lock
push
lcall
sbb
sahf
mov
or
dec
stc
dec
mov
cmc
push
or
xchg
add
cmp
test
into
fcompl
cmp
or
mov
jl
aam
in
push
rclb
jnp
mov
dec
clc
inc
nop
add
ret
loope
gs
mov
mov
dec
ret
push
push
push
cmpsl
xchg
fisttpll
fstpt
stos
sbb
imul
dec
popa
adc
in
mov
lahf
xchg
cmp
dec
mov
and
stos
mov
test
jo
ss
jg
inc
cltd
sbb
inc
into
push
mov
test
shlb
aaa
fbstp
or
mov
popa
call
stc
dec
adc
push
vphadduwq
int3
bound
loop
cmpsl
idivl
test
out
push
xchg
pop
xor
test
scas
lods
aaa
int3
push
pop
in
push
xor
cltd
mov
shlb
push
lret
fcoms
pop
xchg
cwtl
bound
mov
ljmp
adc
inc
movsb
shl
ret
xlat
cmp
fwait
or
xor
jmp
pushl
popa
add
add
xor
adc
les
mov
mov
mov
std
dec
mov
out
test
or
mov
add
xor
fsts
cld
inc
test
test
fiadds
xchg
pop
jecxz
push
dec
adc
xor
push
or
dec
nop
cmpl
cmc
push
xchg
xchg
std
ja
mov
push
dec
ljmp
xchg
scas
inc
jbe
out
xchg
pop
iret
loope
loopne
xor
movl
lret
jno
mov
ret
push
mov
popa
mov
adc
or
into
sub
cmp
iret
loopne
rorl
push
shlb
sub
pop
jae
test
lds
testl
push
test
je
dec
lret
rcrl
movsl
lds
adc
jl
out
push
es
add
add
scas
inc
arpl
add
push
aas
pop
xchg
dec
jno
mov
xchg
adc
jg
ficompl
mov
imul
insb
sahf
call
sub
mov
pop
mov
xchg
fwait
sbb
fbstp
test
es
lret
lahf
cwtl
inc
pop
outsb
test
inc
mov
stos
dec
in
mov
jno
mov
clc
test
adc
insb
daa
lahf
sub
and
push
cli
mov
es
pop
sahf
cmp
mov
jne
jnp
ljmp
in
cmp
das
lcall
sbb
mov
sub
loope
sbb
cmp
mov
sub
and
pop
fwait
push
push
jno
or
cmp
inc
cmp
pop
jge
xor
and
ja
pop
into
mov
mov
mov
retw
mov
fisttpl
xor
stos
cmp
fistps
mov
mov
mov
push
in
roll
mov
rolb
jl
jp
or
orl
push
test
sbb
sub
mov
fcomps
scas
inc
loopne
outsb
iret
push
rcl
clc
hlt
add
xorb
add
je
cwtl
lret
ljmp
mov
sti
imulb
ret
mov
pop
insb
test
int3
jo
mov
xor
les
mov
ljmp
jecxz
sub
lret
fidivs
hlt
and
movsb
xor
pop
push
loop
sbb
xchg
cmp
mov
mov
test
setle
pop
or
adc
mov
cmpl
hlt
out
mov
pop
push
inc
loop
mov
push
lods
mov
outsb
test
lea
inc
pop
mov
int3
cltd
or
shrb
lcall
pop
fdivs
js
ret
gs
insb
mov
mov
xchg
jo
call
xchg
inc
cmp
gs
xor
xor
mov
xchg
ja
lds
or
lcall
sysret
ljmp
sbb
mov
mov
pop
ret
inc
pusha
out
add
shll
cmp
lods
das
mov
sarl
push
mov
stos
mov
sbb
inc
jo
repz
gs
ficomps
push
dec
fdivs
ret
les
in
out
push
add
frstor
fiadds
jo
and
push
add
add
adc
cmpsl
cmp
sti
into
mov
fimuls
push
test
and
pop
or
sahf
adc
inc
int3
cld
in
xor
cmp
imul
xchg
cwtl
adc
inc
hlt
into
stos
cmp
and
jle
in
movsb
leave
sub
je
out
xor
ja
push
jl
nop
sahf
ds
sarl
into
orb
lret
cmp
mov
add
notl
push
mov
iret
shrl
adc
adc
push
or
push
and
cmp
xchg
sbb
lcall
pop
jge
adc
out
lret
lea
ds
data16
aas
mov
xor
cli
adcb
jbe
pop
jecxz
push
cmp
sbb
xchg
mov
insl
insl
das
imul
xor
sub
stc
outsb
sub
dec
inc
jl
adc
leave
jp
jle
push
lret
into
mov
pop
add
mov
mov
mov
popf
roll
stos
stos
mov
insb
and
out
incl
sarl
xorl
xlat
or
push
adc
sbb
ja
lods
sub
push
jmp
mov
cmp
sub
pop
aam
or
or
fs
xchg
frstpm(287
jno
sub
xchg
movsl
call
rcll
or
push
cmp
push
pop
out
cmc
ljmp
das
mov
add
jo
jbe
cmp
mov
jecxz
jmp
xchg
ficoml
push
or
dec
lret
popf
mov
ds
leave
adc
ds
int
push
jl
push
movsb
fisubrl
push
mov
inc
pushf
shrl
or
shl
pop
adc
adc
inc
xor
mov
dec
mov
cmp
push
idivb
cmpsl
mov
repnz
fidivs
mov
ficoms
jbe
pusha
mov
push
jne
pop
out
mov
in
int
xchg
mov
adc
inc
or
dec
mov
adc
dec
or
jbe
push
jl
mov
shr
popf
mov
xor
test
pop
mov
ss
in
push
lds
or
ss
jp
lea
icebp
and
and
jp
cmpsb
cmp
test
mov
es
mov
int3
push
inc
mov
xor
push
pop
enter
lahf
stos
cmc
jno
xor
jle
inc
pop
dec
in
inc
fprem1
popf
sub
lods
stos
movsb
sbb
inc
out
mov
lcall
pop
push
xchg
mov
adc
aas
ret
add
mov
outsl
sub
dec
and
xor
jae
cmp
outsl
stc
add
mov
cmp
fnsave
clc
cmp
stos
adc
jmp
gs
outsb
inc
pop
xor
in
add
jmp
xor
or
arpl
push
sahf
call
imul
sahf
pop
daa
mov
popf
and
sahf
lret
cmpsb
dec
push
adc
mov
mov
xchg
pop
mov
stos
inc
mov
das
ret
pop
pop
cmp
int
xbegin
fcomp
pop
xor
or
jbe
stos
repz
jnp
pusha
in
and
jae
jne
xchg
insb
scas
dec
lea
dec
dec
andl
mov
inc
push
xlat
sbb
xchg
dec
add
pop
pop
cmp
loopne
mov
and
sub
xlat
dec
push
arpl
scas
mov
sbb
sahf
push
aaa
rclb
sub
imul
or
mov
push
fcomip
and
add
mov
xor
mov
xchg
mov
adc
pop
sahf
std
sub
xchg
or
cli
out
xor
movsb
in
sub
daa
imull
imul
pop
xor
int3
pop
jb
rclb
add
lret
jns
js
out
dec
jae
lds
fistpl
and
stos
dec
fsts
push
pop
pop
mov
outsl
add
xchg
mov
cmp
icebp
in
fists
jle
ds
in
xor
cmp
mov
mov
push
xchg
mov
mov
sbb
or
pusha
dec
or
sub
or
sbb
xchg
clc
jcxz
inc
repz
jle
cmpb
les
lds
in
shlb
test
icebp
lock
scas
or
stos
cmpsb
sbb
mov
adc
xlat
ljmp
xchg
subb
nop
or
int3
pop
movl
scas
stc
push
inc
xchg
push
jno
or
add
mov
cmp
cmpsl
imul
mov
xlat
xlat
push
sti
mov
xor
or
lods
std
fildl
lods
xchg
das
les
add
decl
xor
xchg
lcall
in
loope
cmp
dec
pop
stc
adcl
mov
gs
mov
cmp
dec
mov
add
xchg
out
xor
pop
daa
subb
rep
mov
cwtl
lock
push
les
inc
pusha
or
add
pop
push
orl
aas
movsb
cmc
stos
cli
sbb
xor
pop
lds
push
mov
pop
call
je
dec
sub
jle
fstpl
and
pop
push
cmp
aas
dec
lret
xor
mov
lcall
adc
mov
gs
xor
mov
push
addr16
dec
cwtl
stos
outsb
bound
fcomps
ss
inc
inc
or
jne
inc
sbb
in
dec
arpl
sahf
jle
xchg
sub
mov
dec
sub
xchg
inc
inc
xchg
sub
popa
push
aaa
cmp
jo
in
add
jg
dec
pop
dec
outsl
loop
push
adcb
and
push
pop
cld
ljmp
mov
dec
push
xchg
push
aam
cli
sub
jge
push
icebp
mov
cmp
popf
shlb
js
mov
lret
loope
jmp
aas
dec
fimuls
sub
fsubl
mov
add
std
and
call
mov
pop
mov
inc
mov
cmp
outsb
lods
mov
pop
cmp
lahf
icebp
ret
adc
sbb
pop
add
xchg
lret
mov
jae
fucomi
aam
dec
icebp
in
mov
out
sub
popa
sahf
cmp
loop
movsl
or
pop
aaa
jbe
cmp
mulb
lods
test
push
arpl
mov
movsb
hlt
fistpl
inc
xchg
aas
data16
add
lcall
shll
and
mov
or
dec
insb
das
lret
lret
repnz
and
stos
sub
ljmp
lods
int3
mov
mov
xchg
mov
in
push
mov
sub
mov
pop
ss
pop
movsb
or
das
dec
or
xchg
xchg
rcl
shrl
mov
jl
call
mov
mov
cmc
or
dec
movsb
inc
jb
pop
mov
fsts
jnp
stos
cmc
mov
pop
pop
push
and
fidivl
cmpsb
cltd
sub
icebp
ljmp
loope
pop
lods
cmpsb
popa
mov
sub
daa
es
pop
pop
enter
loope
cmp
cmp
mov
cmp
insb
pop
sahf
imul
cmc
or
lock
inc
sbb
les
cli
lret
cld
das
in
cmc
xchg
icebp
lods
xlat
nop
rcrl
push
loop
xor
out
cld
cmp
pop
test
int
fldl
cmp
mov
test
loope
mov
dec
not
leave
lods
rcrb
fstps
movsl
mov
jg
insb
lcall
repnz
push
dec
sarb
aas
pop
pop
add
rolb
sbbl
push
orb
int
pop
out
pop
adc
pop
clc
pop
lods
or
repz
out
imul
jl
inc
jns
test
sahf
mov
inc
sti
and
and
sbb
xor
orl
mov
repz
je
push
mov
in
pushw
jle
bound
call
adc
scas
daa
fs
jns
xchg
iret
sbb
add
sub
decl
push
dec
iret
add
push
xor
pop
lods
iret
sub
sub
bound
add
in
add
mov
push
push
cmp
dec
xor
xchg
cld
cmpsb
insb
jge
pop
mov
mov
xor
dec
ljmp
mov
inc
push
jbe
addb
pop
mov
fs
popa
jae,pn
sahf
or
pop
push
pop
ret
pop
push
dec
adcb
cmp
cmpl
push
lcall
dec
rcll
push
ss
pop
sbb
out
les
xor
cmp
ja
popa
iret
push
fs
ss
add
ss
aam
shl
shr
icebp
aad
shlb
dec
cmpsb
mov
xor
test
adc
mov
fbld
dec
pusha
mov
aam
lret
rol
pop
push
xchg
inc
xor
shll
mov
cmpl
and
popa
push
and
loope
cwtl
and
mov
adc
mov
mov
sbb
std
lcall
je
xchg
call
add
mov
cmp
xchg
sub
pushf
leave
es
fsubp
in
daa
mov
mull
cmp
pop
pop
cmp
add
mov
xchg
lds
fs
cwtl
clc
enter
sub
fisttpll
cmp
les
out
aaa
cmp
popa
adc
dec
xor
pop
cli
jbe
pop
sub
dec
adc
mov
inc
xchg
es
mov
jmp
ja
sub
or
cwtl
dec
cmp
ja
add
int
test
jl
pusha
aaa
je
adc
cmp
nop
stos
in
xchg
jb
imul
lret
or
xor
and
mov
iret
mov
mov
sti
inc
xchg
or
push
jns
call
loopne
roll
add
jp
repnz
mov
cld
imul
xchg
stos
int
mov
mov
push
push
xor
xchg
pop
sbb
xchg
fcomi
jl
add
mov
push
jl
xor
pop
sbb
mov
test
jge
sub
lock
jmp
ja
test
fcoml
jecxz
xchg
js
es
mov
jmp
add
jns
out
push
mov
push
aaa
daa
pop
pusha
add
fimull
lea
and
in
mov
cmpsb
mov
inc
cmc
out
cmp
enter
cwtl
mov
xchg
xchg
test
jbe
std
jecxz
cmpb
lahf
frstor
push
jle
mov
pop
xlat
neg
stos
repz
inc
ss
clc
mov
das
mov
ret
lock
shlb
inc
push
add
or
movsl
and
sarl
aaa
jl
ds
mov
loopne
inc
jne
inc
lds
popa
or
insb
cmp
cmp
mov
lods
cmp
push
orl
call
jbe
les
jecxz
or
sub
lds
pusha
mov
sbb
sbb
mov
jne
xchg
cmp
rcll
dec
inc
test
int3
lahf
and
mov
cli
mov
jbe
mov
test
adc
sahf
iret
out
ret
dec
ss
fmull
and
popa
pop
xchg
mov
xor
xchg
jmp
adc
inc
clc
pusha
adc
out
sub
mov
cmp
jns
pushf
mov
ss
outsb
dec
lds
mov
pop
sub
and
leave
pop
sbbb
pop
rcrb
flds
fbstp
sub
je
dec
mov
ret
sub
into
add
cmp
clc
mov
or
addr16
pop
repz
cmc
push
loop
out
movsb
pop
add
movsb
adc
hlt
pop
cmc
and
jle
mov
push
cld
daa
ss
xor
xorb
leave
daa
call
mov
or
repz
sbb
mov
enter
int3
push
les
jge
dec
in
push
ljmp
in
mov
push
add
mov
cmpsl
les
mov
je
mov
shrl
inc
cmpsb
cmpsb
cld
push
mov
stos
inc
xchg
scas
insb
imul
mov
cmp
cmp
stos
aam
jg
in
shl
roll
jnp
shr
mov
lret
and
mov
mov
push
jns
jge
adc
test
lods
xchg
xor
fs
cmp
popf
popf
daa
shl
repz
int
out
test
cwtl
sub
inc
push
mov
repz
shlb
js
jne
cmp
xor
icebp
loopne
mov
loop
insl
dec
out
mov
sub
int
iret
sahf
ret
test
enter
divl
push
cmp
jae
gs
push
in
insl
xchg
bound
incb
mov
dec
add
addb
or
jmp
jno
mov
add
mov
jno
test
jns
mov
paddq
inc
loopne
cmc
xor
outsb
adc
inc
pop
xchg
cmpsb
jmp
addl
jp
push
or
shrl
mov
scas
cmpsb
lods
pop
mov
pop
inc
mov
pop
adc
addr16
sbb
push
pop
inc
test
sahf
cltd
sbbl
mov
sbb
cmp
inc
xor
ret
push
movsb
sub
mov
pop
add
fsubrl
icebp
arpl
fstps
adc
cwtl
rclb
xor
repnz
dec
xchg
fwait
sar
aas
in
push
ud1
mov
push
pop
test
fwait
mov
pop
mov
adc
and
sub
xchg
sbb
pop
cmp
cmpsb
sub
pop
lret
scas
cmpl
stos
pusha
mov
sub
push
push
call
mov
fldcw
shlb
mov
hlt
pop
outsl
outsl
xchg
nop
out
push
hlt
add
xchg
cmp
mov
sbb
fsubl
sbb
inc
cmp
test
in
mov
stc
jne
cmp
sub
mov
push
addr16
sahf
test
push
nop
mov
or
out
addr16
lret
lea
cmp
xor
push
push
sbb
sbb
or
fiaddl
lods
dec
push
fsub
int3
jno
sub
lds
out
outsb
lahf
xchg
push
push
pop
mov
sbb
out
cmp
dec
iret
stos
nop
leave
std
push
daa
aad
xor
ljmp
add
xor
cmp
pop
popf
pop
pop
gs
xor
pusha
ret
and
adc
sets
sbb
imul
loope
xlat
mov
movsb
pop
push
push
arpl
or
add
shl
lcall
outsb
sbb
rolb
xchg
add
div
cwtl
popa
pusha
fucomip
shrl
inc
inc
cmp
repnz
cmp
mov
inc
popa
fdivr
pop
cs
dec
cmp
adc
pop
insl
xchg
push
lahf
xlat
not
test
cli
scas
ljmp
lret
jno
out
jbe
out
mov
mov
mov
add
pop
inc
in
mov
scas
fistl
cmp
out
test
out
mov
leave
mov
sahf
cmpsl
fstpl
pop
adc
push
outsb
into
lods
xor
xchg
add
aad
in
dec
hlt
lods
imulb
inc
dec
push
jecxz
test
jecxz
scas
cmpsb
popa
leave
mov
pushf
cmc
dec
xor
jg
xchg
pop
sub
jmp
dec
jnp
and
fisttps
das
fwait
push
fcoms
and
fstps
or
dec
dec
enter
fiaddl
and
jb
mov
rorb
mov
aaa
pop
loope
jb
cmp
xorl
insb
push
dec
mov
jl
imul
lret
aas
jge
mov
jl
sbb
hlt
lock
xor
xchg
call
xchg
nop
mov
xchg
iret
pop
int
pushf
repz
out
and
inc
mov
pop
cmpsl
pushf
pop
mov
inc
cld
mov
mov
imul
sbb
je
jns
mov
mov
xchg
in
aad
mov
mov
or
sarl
pop
aas
incl
sub
mov
jne
push
rcrl
fdivrl
cmc
or
clc
mov
cltd
mov
jo
mov
shrl
or
inc
popa
scas
pushf
fisttpl
lret
sub
es
push
fists
int
sub
dec
jo
dec
push
cld
ja,pn
repz
mov
fstpl
lahf
mov
inc
mov
fisttps
popa
push
popf
nop
xchg
cmp
sbb
fiadds
pop
dec
int
push
cs
dec
shlb
lahf
xor
loop
cli
jb
leave
daa
arpl
jmp
imul
inc
incl
cmp
cmpsb
sahf
xchg
sbb
test
test
add
xchg
fnstenv
arpl
negb
sub
mov
and
sub
jmp
fs
push
jno
es
dec
push
push
add
push
inc
popa
int
or
pop
sub
jge
mov
int
push
adc
lds
mov
sub
cmc
fisttpll
inc
test
lods
xor
pop
jg
idivl
pop
mov
mov
or
pop
jae
out
push
aam
fucom
cld
out
out
fwait
add
pop
bswap
inc
fmull
rcll
in
or
not
inc
mov
add
das
push
and
sbb
push
inc
or
mov
sub
and
cmp
loope
les
mov
fwait
ss
ret
sub
and
jae
inc
fcomip
jge
int
mov
jns
jle
data16
addr16
jmp
fnsave
cs
xchg
int3
cltd
xchg
pop
mov
repz
insb
sbb
lock
roll
out
xchg
push
mov
dec
adc
pop
xchg
stos
push
pushf
push
xchg
int
jo
push
and
in
adc
mov
add
test
outsb
fwait
rcll
aam
sub
arpl
pop
xchg
mov
jae
mov
adcl
push
insl
cmpsl
sub
imul
dec
int
in
or
sahf
into
ljmp
stos
xchg
adc
shll
enter
jp
arpl
hlt
js
inc
int3
fcomps
cld
mov
out
dec
das
pop
outsb
lock
xchg
jecxz
movsl
divb
int3
ljmp
xlat
xor
lds
or
sarb
repz
mov
fwait
pop
lret
scas
in
dec
cwtl
inc
inc
jns
cltd
pop
sub
out
push
xchg
rolb
movsl
and
pop
fs
pop
lock
mov
mov
leave
jmp
in
sub
out
cs
sbb
mov
je
add
dec
sub
push
cmp
pop
notl
or
ret
or
or
sub
xor
inc
mov
inc
cmovl
or
xchg
mov
movsb
sbb
sti
or
pop
pop
lcall
mov
enter
xor
mov
jge
iret
cmp
jbe
pop
test
push
outsb
inc
inc
outsb
es
fsubr
addb
mov
sbb
pop
adc
out
rcrb
lea
lock
mov
mov
out
loopne
dec
adc
clc
mov
clc
ffreep
pop
shrb
mov
sbb
lods
xor
add
notb
dec
dec
mov
adc
ja
int3
add
or
loopne
mov
testl
xchg
cs
cmp
cmc
test
push
cltd
jp
or
je
fbld
adc
xchg
cwtl
or
pop
fs
push
inc
es
loope
fdivp
jmp
adc
push
test
xchg
stc
sub
and
or
and
add
mov
cmpsl
jne
popf
mov
iret
mov
jecxz
mov
add
jge
cmp
lds
int3
bound
xchg
jl
cmp
fdivrp
outsl
rorl
pop
xchg
sbb
jne
mov
insb
loope
jnp
stos
jp
sub
arpl
inc
dec
lret
dec
xchg
adcb
lret
push
aaa
shrb
pusha
inc
sbb
fxsave
push
dec
cmpsb
testl
push
fbld
pop
sahf
bound
das
adc
inc
cmp
dec
out
mov
push
dec
dec
dec
dec
call
xor
int
pop
pop
and
test
and
loopne
mov
in
pop
jle
sub
aad
sub
stos
lock
sysenter
sub
test
leave
push
jmp
and
adc
add
fdivl
rorb
lods
lret
cltd
andl
fsts
enter
dec
rcr
ret
popf
ret
cmp
fmul
xor
out
pop
faddl
mov
and
push
loop
inc
xor
rol
jg
in
jae
gs
leave
ljmp
dec
mov
popa
lret
mov
adc
pushf
scas
and
sbb
enter
lods
ds
enter
sbbl
outsl
adc
sbb
sub
inc
aad
int3
push
inc
adc
or
leave
pop
jb
pop
pop
imul
fsubrl
in
leave
add
pop
xchg
scas
aaa
out
jo
fnstsw
test
pop
xor
mov
xor
mov
or
cltd
mov
stc
mov
dec
mov
cmpsl
jnp
inc
mov
popf
inc
cmp
mov
xor
leavew
mov
andb
sub
lret
cmp
rcrb
jge
nop
lahf
xchg
cmpsb
dec
movsl
add
inc
xchg
xlat
cmp
ljmp
fstl
mov
clc
sub
les
sbb
daa
pop
mov
push
outsb
inc
jne
mov
xchg
mov
dec
jne
fists
sti
dec
adc
pop
lcall
add
cmp
add
mov
cs
cmp
jnp
xchg
mov
jmp
fucomp
mov
add
sbb
ret
add
outsb
in
xchg
jle
rclb
cltd
cmp
dec
faddp
das
mov
xchg
mov
fbld
pop
push
hlt
jl
pop
xchg
mov
inc
xor
add
mov
push
or
dec
mov
sbb
push
in
push
push
push
push
mov
test
dec
sub
jno
jl
dec
ret
cmpsb
es
insb
sbb
into
pop
mov
mov
hlt
xor
cmp
into
aaa
mov
pop
sbb
xor
fstpl
shl
arpl
addr16
shll
xchg
push
sti
jb
out
and
pop
aam
or
into
jl
fcomps
iret
fwait
cmp
in
flds
lret
in
xlat
lahf
ficompl
sbb
push
pop
iret
outsb
and
ret
insl
add
push
cmp
xchg
cmp
insb
cmpb
stos
mov
lods
mov
cmpsb
ljmp
xchg
xor
mov
cmp
xchg
adc
xchg
inc
inc
xchg
outsl
jns
xor
ret
mov
and
xor
negl
cmpsl
mov
repnz
or
dec
pushf
xchg
xor
arpl
sub
sahf
rcr
int
cmp
push
sub
js
mov
fsubr
int3
testl
fcmove
add
and
shlb
test
cwtl
ret
pop
inc
mov
dec
lret
dec
lahf
rorb
fs
scas
push
inc
mov
xor
lods
jbe
mov
sub
shlb
push
mov
mov
mov
clc
js
mov
jne
loopne
jne
sbb
sub
fwait
test
cwtl
jnp
pushf
aam
bound
dec
xchg
add
leave
dec
repz
sbb
add
lea
xchg
insl
les
mov
insl
jo
mov
loop
jg
xchg
or
imul
mov
es
test
dec
ljmp
adc
lcall
fbstp
mov
xchg
pop
sub
fbld
out
out
push
inc
mov
dec
pop
push
and
bound
mov
outsl
out
push
arpl
in
pusha
ficoms
jnp
arpl
add
iret
mov
cltd
cmp
add
xchg
pop
mov
push
repz
xlat
lret
rcl
mov
mov
ds
cmp
je
xlat
mov
or
push
jecxz
bswap
std
mov
adc
enter
fimuls
xchg
rorb
xchg
popa
lahf
sub
gs
in
push
cmp
call
pop
shlb
xchg
jecxz
pop
fwait
and
out
sub
popf
punpckhdq
mov
cmp
xchg
add
fcmovnb
mov
adc
stos
mov
dec
jbe
fnstsw
out
ret
mov
repnz
loop
inc
jnp
mov
movsb
and
fisubrl
sub
lock
into
push
in
lahf
sbb
loope
jecxz
stos
test
arpl
in
jl
push
out
xor
push
sub
js
xchg
adc
out
sub
lret
sbb
negl
out
lods
jno
lret
test
xchg
cltd
adc
xchg
xor
xchg
sti
les
xor
jg
int
shr
cwtl
and
adc
in
fsubrp
adc
aad
cmp
adc
fs
sub
jbe
add
xor
adc
shrl
mov
xchg
add
xchg
cmc
push
pop
fistl
pop
stos
sub
sbb
lds
mov
lock
sub
test
rcrl
movsb
push
popa
test
cld
pop
je
push
fwait
push
test
into
out
inc
aad
and
clc
loop
push
mov
fcompl
cmp
jbe
pop
scas
repnz
mov
lock
inc
sbb
jb
mov
jmp
sarb
out
aam
repz
adc
popf
jae
sbb
xchg
mov
fucomi
test
jbe
mov
inc
jp
mov
popf
inc
mov
or
or
aaa
ficoms
lods
sub
in
lcall
dec
mov
cwtl
cwtl
pop
movsl
popa
pop
sti
jecxz,pt
sub
je
inc
adc
roll
or
jecxz
sub
cmp
pusha
add
fiaddl
dec
or
pushf
iret
push
movsl
test
shrb
sarl
test
inc
aas
inc
dec
mov
xlat
hlt
pop
push
inc
fdivrl
loope
pop
je
or
cmp
push
mov
push
jecxz
std
test
pop
sub
jle
dec
xchg
mov
lcall
pop
add
into
cmp
stc
add
mov
dec
or
pop
sub
clc
sub
ret
xor
test
rorl
mov
popf
xchg
rolb
sub
xchg
shl
loope
mov
cmpsl
mov
loop
adc
addr16
dec
push
aaa
sbb
and
loope
movsl
xor
daa
sbbb
inc
xor
out
pop
sbb
pop
fdivl
lock
xor
inc
pop
into
in
decl
xchg
das
push
push
adc
adc
ficomps
in
fs
push
cmpsl
stos
cmp
jmp
or
cmp
rcrl
xchg
mov
sbb
sbb
cmp
mov
popa
and
mov
mov
rcrb
movsl
xor
sqrtps
js
mov
pop
sahf
jl
add
imul
xor
xchg
outsb
aaa
data16
mov
test
push
jbe
or
pop
adc
fldcw
xor
push
fnstcw
imul
lock
pop
mov
lcall
adc
iret
pusha
xor
dec
ss
cmp
daa
mov
mov
scas
push
cli
fidivs
sub
fldt
lret
aaa
sbb
mov
mov
jp
jmp
sbb
sar
aas
mov
fldl2t
sbb
xchg
adc
lds
mov
subb
ret
loope
mov
and
xorb
mov
outsb
mov
xchg
jns
inc
cmp
xor
xchg
mov
inc
cli
jmp
xor
pop
cmpsb
add
pop
mov
pop
cwtl
pop
xchg
into
adc
add
mov
push
or
sub
mov
fisubrl
sarl
loopne
add
cld
cmpsb
sub
mov
cmp
pop
hlt
pop
lea
addr16
out
add
inc
iret
and
movsl
loopne
arpl
mull
loopne
pushf
std
lea
rclb
pop
mov
popf
sub
mov
inc
jno
hlt
dec
loope
pop
rcrb
mov
pushf
push
xchg
dec
fld
pop
scas
enter
mov
outsb
mov
sub
sub
add
stos
mov
aaa
and
mov
sahf
cld
fisubrs
ljmp
fisubrl
in
cmp
jo
ds
xchg
add
mov
or
sub
mov
fisubl
cli
or
mov
je
fdivl
cmpl
and
insb
std
and
out
cmpsl
es
sbb
and
subl
ret
and
sub
adc
pop
cs
and
popa
pushf
pop
push
mov
stos
pop
imul
mov
pop
xchg
and
imul
fisubrl
stos
das
adc
daa
xchg
xor
in
mov
jae
push
aad
pop
lock
int3
cltd
cmp
push
mov
jns
rcrb
mov
mov
imull
nop
int3
push
xor
add
push
out
and
mov
mov
mov
cmp
pop
test
stos
mov
test
es
insl
xor
jmp
xchg
cmp
mov
jge
sahf
test
in
pop
dec
xor
test
push
std
jae
push
ds
imul
cmp
insb
or
insb
sbb
jg
xchg
nop
clc
mov
stc
les
push
bound
int3
cmp
ret
hlt
or
mov
es
sub
daa
lret
ss
push
or
mov
mov
pop
or
dec
fistpll
xchg
imul
pop
ljmp
imul
ret
test
pop
xchg
pushf
dec
jp
inc
dec
and
rcll
cmp
loope
adc
or
xchg
fnsave
inc
icebp
pop
push
lock
mov
ja
or
mov
mov
pop
add
cmc
in
cmp
inc
fwait
scas
xchg
mov
sbb
sub
ss
push
dec
movb
mov
rcrb
int3
sbb
jae
sbb
xor
js
push
pop
mov
popf
cmp
push
shlb
test
addr16
jbe
fidivrl
insb
shl
and
test
mov
lret
mov
popa
sub
pop
add
js
jbe
test
pop
mov
sbb
scas
stc
cmpsb
xchg
bound
lods
xchg
cmp
lds
aam
cmp
dec
aad
pop
xchg
lret
in
inc
jmp
lahf
sbb
dec
cs
dec
mov
cmp
pop
xchg
dec
outsl
loop
cld
jecxz
mov
icebp
mov
sbb
jbe
enter
inc
shll
out
loop
lahf
std
jg
into
hlt
pop
ds
fcompl
push
repnz
jmp
dec
pop
push
mov
arpl
adc
in
add
mov
pop
inc
mov
dec
ja
mov
or
repnz
xorb
dec
call
sbb
sbb
inc
fs
loopnew
mov
jge
push
mov
lock
xor
inc
push
and
repnz
jb
outsb
adcl
adc
mov
movl
dec
mov
push
adc
addr16
fdivs
xor
call
stos
daa
jl
push
icebp
push
dec
jmp
cmp
inc
cmp
mov
mov
cmp
jl
std
ja
pop
sbb
fwait
hlt
sti
inc
hlt
push
jl
push
loopne
inc
push
push
addr16
fsubrs
ficoms
mov
sti
into
fimull
pop
push
std
push
push
imul
push
lods
clc
stc
ss
sbb
imul
pop
shrb
and
xor
or
seta
push
loop
iret
fsts
jmp
jns
in
fwait
push
fistps
imul
pop
cli
testb
mov
jbe
les
xor
ss
nop
mov
or
xchg
mov
sub
jmp
mov
xor
cmp
sbb
mov
and
and
push
test
ss
mov
mov
ljmp
xlat
aam
gs
push
sbb
xchg
inc
repnz
mov
push
insl
lea
gs
xchg
or
push
in
fcmovbe
repnz
adc
dec
pop
iret
repnz
mov
movsb
jecxz
mov
jae
and
mov
repnz
in
fs
xlat
into
or
sbb
jnp,pn
cmpsl
and
push
les
jl
fwait
jno
imul
out
sub
jl
push
xor
xor
inc
leave
sub
sub
fimuls
test
std
or
pop
fstl
cmp
and
adc
sbb
fwait
mov
lret
nop
mov
sbb
mov
fcmovnb
lea
pop
push
and
popf
nop
call
xchg
pop
test
mov
xchg
push
iret
out
pushf
add
stos
scas
add
in
push
sub
leave
test
pop
sbbl
call
cwtl
lahf
aam
cli
adc
rorl
lret
enter
and
mov
lret
jl
leave
fistl
jnp
ljmp
je
add
inc
int3
jno
mov
pop
stc
insl
popf
outsb
dec
mov
repz
test
clc
sbb
push
jbe
or
pop
adc
loopne
jle
mov
movsb
jns
jmp
subb
pusha
data16
movsb
sbb
add
cmpsb
lahf
sahf
sbb
sahf
push
fwait
dec
sub
mov
ret
xor
dec
xchg
cmp
push
dec
repz
sub
mov
loope
fidivrs
mov
jle
sub
scas
mov
out
jp
xor
push
out
cmp
push
jae
dec
in
pop
fistpl
cmp
pop
jnp
aad
sub
dec
mov
stos
imul
push
stc
nopl
aam
inc
jno
sbb
repz
mov
ficoms
mov
adc
cmpsb
adc
push
push
mov
sub
lods
dec
fisttpl
pusha
out
pop
sbb
leave
add
test
js
outsl
aas
fisttps
ja
aas
int
in
addr16
xchg
xor
xchg
inc
repz
stc
and
or
jns
jge
cld
insb
inc
fldlg2
in
lea
pop
jmp
sbb
addr16
fsubs
fs
je
dec
sbb
sub
mov
jb
dec
jle
inc
dec
mov
inc
xor
lods
inc
mov
xchg
push
mov
into
xor
and
xchg
sbbb
sbb
push
fimuls
jne
cmpsb
repnz
mov
mulb
int
nop
leave
add
pop
xor
lds
andl
orb
data16
int
shlb
stos
aam
fdivrs
jmp
pusha
adc
mov
in
sarb
xlat
sub
ret
mov
lods
cs
jns
mov
icebp
sbb
or
inc
cmp
mov
test
sub
movsl
aaa
xchg
int3
adc
fidivrl
pop
nop
xchg
dec
push
repnz
gs
sub
out
and
or
jns
adc
stc
rolb
dec
in
fdivrs
push
loop
jp
dec
aaa
add
shr
fs
ret
sbb
sahf
jae
jl
xor
mov
mov
and
call
shrb
pop
xor
sub
push
cmpsb
sti
jb
pusha
adc
xor
jg
push
fisubrl
js
xchg
loopne
js
cmp
xchg
cs
mov
loope
cmpsl
push
inc
cmpsb
lea
pusha
xor
lcall
addl
sbb
and
inc
enter
ds
nop
jnp
popf
notb
mov
shr
nop
je
stos
in
ss
add
cmp
int
add
add
mov
lods
xor
add
sub
push
mov
sub
xchg
add
out
xchg
aam
gs
mov
xor
outsl
pop
out
mov
jne
sbb
fidivrs
leave
mov
loopne
stos
lret
int3
lock
and
sub
push
sub
das
pop
ss
dec
mov
in
ret
adc
insl
cwtl
rorb
test
xor
fdivs
int
push
packssdw
and
hlt
mulb
out
ret
adc
pop
fcoml
in
cmp
adcb
ja
inc
jb
ffreep
and
adc
ja
adcb
fwait
jl
outsb
nop
xor
movsb
sbb
push
jnp
rol
xchg
mov
sub
fs
xchg
outsl
icebp
xchg
int
jmp
cltd
push
imul
xchg
out
jne
push
xor
inc
popa
repnz
sub
pop
rcrb
adc
add
jg
mov
push
mov
das
add
or
outsb
push
mov
mov
movsl
sarb
jecxz
movsb
scas
add
cmp
sbb
xchg
push
pop
fnstcw
clc
cmpsb
mov
xor
push
popf
aaa
dec
arpl
gs
mov
or
outsl
mov
into
jge
inc
sub
adc
mov
xor
jo
mov
lock
clc
push
ds
icebp
leave
sbb
fsubl
pop
jbe
xchg
add
int3
filds
out
mov
pop
adc
sbb
cwtl
fstps
xor
lods
inc
mov
mov
int3
and
in
das
xor
inc
mov
sbb
jbe
or
xchg
sbb
jl
fldln2
lcall
aad
ljmp
dec
int
jmp
fucom
push
dec
aas
sbb
mov
stc
or
stc
xchg
xor
pop
jne
mov
dec
ficoml
outsb
test
stos
gs
ret
iret
repz
mov
es
lods
xchg
std
std
push
mov
xor
push
dec
lcall
sub
ret
mov
movsb
mov
pop
push
adc
test
fists
inc
xlat
fucom
lods
ds
dec
inc
mov
iret
pop
repnz
fcmovnbe
out
clc
add
mov
add
and
adc
pop
nopl
sahf
push
andl
xor
cwtl
addr16
cmp
ror
dec
cli
rcl
xchg
das
sbb
dec
push
stos
jo
cmpsb
lcall
push
xorb
pushf
jle
or
or
adc
add
sbb
aaa
imul
push
push
mov
shl
jnp
sahf
fnstcw
xchg
pop
and
test
fxam
xorb
xchg
loopne
pop
pop
call
inc
hlt
rclb
aas
and
sub
ret
jnp
sub
mov
rclb
cmp
loopne
push
dec
add
mov
inc
insl
dec
shl
ds
dec
pop
jno
aam
sti
loope,pn
in
xor
pop
xchg
insb
push
int3
dec
test
mov
xor
jle
data16
cmp
imul
push
mov
jmp
ret
shrl
xchg
fucomi
in
lret
loopne
shr
jmp
outsl
int3
cmp
add
sbb
test
repz
push
xchg
pop
inc
sbb
mov
ret
int
pushf
shr
arpl
arpl
push
add
popf
jle
rorb
mov
push
inc
lar
push
lea
std
sbb
sbb
pop
xlat
xchg
bound
or
loopne
xorl
out
push
std
loope
inc
scas
xor
mov
pop
or
xor
or
shll
mov
or
jo
notl
pop
jne
jl
call
push
jg
and
push
mov
mov
stos
mov
push
pop
out
mov
mov
mov
pop
push
pop
arpl
jecxz
cld
outsb
push
sbb
adc
fxch
pop
adc
shl
sahf
fsubs
lods
ja
cmpsb
icebp
xchg
cmp
pop
mov
sbb
push
outsb
iret
shl
inc
sarb
adc
aam
rclb
and
out
out
pop
cmp
pop
ja
cmc
mov
sbb
fcoms
xchg
adc
jae
rcl
cmp
inc
int
xchg
int
sbb
mov
pusha
adc
fwait
rcrl
sti
sbb
dec
cwtl
push
xor
pop
mov
shr
push
adc
in
xchg
enter
addr16
sub
push
hlt
in
add
mov
hlt
dec
mov
fnstcw
ss
js
cltd
int3
pop
call
adc
pop
and
or
sbb
ja
scas
sub
mov
or
sub
push
insb
and
push
jns
addr16
clc
push
scas
xor
and
jge
sahf
into
dec
fstpl
mov
mov
xlat
jae
xchg
mov
out
mov
inc
xchg
mov
inc
orb
call
dec
lahf
jle
add
mov
adc
call
jbe
loop
pop
insl
lcall
call
or
mov
es
pop
nop
dec
sub
std
cltd
jmp
dec
dec
jae
call
sbb
push
adc
pminub
fldenv
jmp
mov
jecxz
pop
push
mov
mov
stos
iret
insl
scas
or
adc
aaa
push
addb
xlat
mov
hlt
dec
rol
inc
scas
xlat
sbb
in
cltd
xor
in
adc
das
dec
inc
jnp
mov
icebp
push
movsb
js
xlat
das
jns
cmpsl
into
imul
xor
sub
in
inc
int3
inc
ret
addr16
ret
ds
mov
jmp
out
aaa
cmpsl
lods
or
mov
mov
or
push
push
adc
cmp
test
sub
lea
outsb
mov
idivl
jne
stos
bound
les
movsb
mov
lods
lret
adc
sti
lea
and
pop
in
xor
inc
sub
lds
sbb
mov
data16
push
std
arpl
je
imul
jg
fwait
daa
loopne
sahf
into
jno
pop
push
scas
mov
mov
cld
mov
push
rcrb
mov
dec
xchg
pop
dec
jg
add
and
mov
add
sbb
cmpsb
gs
fwait
push
shr
mov
or
pusha
clc
idivb
push
dec
jo
mov
adc
cmc
out
loopne
mov
jle
jle
xchg
xchg
out
xchg
scas
dec
std
mov
sub
pop
loope
repnz
pop
aad
sbb
xchg
xchg
mov
mov
bound
jns
push
jmp
dec
dec
and
orl
jp
cmp
pop
ret
mov
mov
arpl
xchg
mov
fcomip
push
inc
mov
jmp
dec
shll
pop
pop
mov
lret
fld
sbb
lahf
pop
cld
cmp
nop
jns
lock
mov
es
mov
in
shl
cs
shrb
cmp
stos
int
push
imul
push
and
in
jl
ljmp
nop
sti
iret
outsb
cmp
hlt
sbb
or
sbb
test
xor
popf
in
out
icebp
pusha
cli
add
add
sub
jno
pop
jo
into
mov
xchg
xor
hlt
inc
or
sbb
adc
mov
lock
iret
add
mov
jno
insl
jecxz,pt
sbb
or
jl
cmc
bound
std
ljmp
push
adc
inc
test
push
popa
test
jmp
hlt
mov
test
out
xchg
add
popa
int3
or
bound
incb
test
sbb
pushf
push
xchg
adcb
pop
nop
nop
xchg
xor
mov
sbb
push
sub
sub
pop
adcb
movsb
es
movsb
push
xor
xor
dec
push
call
sub
sub
xchg
cltd
adc
addr16
pop
dec
lea
jmp
rorl
sub
test
push
into
in
mov
addr16
out
pop
adc
inc
paddsb
movsb
rcl
fsubl
xor
out
cmp
mov
into
push
mov
ss
push
jl
sbb
imul
jns
fstl
test
dec
sub
sbb
cs
lods
hlt
lods
fs
lock
pop
xor
push
cld
sbb
fisttpll
lahf
xchg
jno
mov
aaa
add
jl
ret
xchg
mov
lds
sbb
rclb
je
inc
pop
push
fildl
add
test
mov
out
or
lds
mov
jnp
shrb
sub
test
sub
outsl
out
scas
or
add
mov
pop
xor
lods
shll
pop
filds
ja
add
pop
mov
das
subl
sub
sub
lcall
jge
ss
cmp
and
dec
mov
dec
xchg
push
adc
inc
mov
testb
cmp
jnp
dec
add
in
data16
cs
xchg
sahf
imul
mov
movsb
lret
dec
xor
pop
mov
pusha
mov
ret
and
and
dec
inc
xorb
mov
cmpsb
lock
daa
das
mov
inc
nop
test
xchg
imull
ds
mov
fldenv
ret
or
inc
bound
sarl
push
incl
and
push
adc
sti
popf
dec
data16
sahf
push
pushf
mov
cmp
emms
loop
adc
loope
addl
add
dec
mov
push
out
mov
xchg
cmc
xchg
mov
sbbb
test
ds
mov
cmp
fistpll
inc
lcall
mov
movl
inc
imul
xor
sub
mov
es
and
addr16
ret
sahf
jle
call
xor
int3
inc
mov
add
out
mov
cld
addr16
rcl
arpl
cmc
or
lret
mov
and
stc
adc
xchg
jns
sbb
daa
dec
popf
inc
clc
cmp
and
pop
lahf
test
sbb
test
xor
push
mov
cmpsl
inc
int3
arpl
roll
and
cmc
scas
mov
les
fldcw
loop
and
pushf
rcr
out
push
xchg
aaa
sub
jge
in
arpl
push
dec
jns
sbb
enter
inc
jle
ljmp
push
lds
jo
xlat
repnz
pushf
loop
cli
setp
lahf
mov
cmpsb
mov
pop
add
lahf
icebp
mov
int
lahf
xchg
leave
sub
mov
lahf
pusha
jecxz
pop
mov
and
adc
roll
icebp
in
bound
mov
in
aam
sub
mov
dec
scas
inc
sub
outsl
xchg
lea
std
sub
pop
add
lret
and
push
sbb
in
sbb
mov
cmp
mov
and
test
in
mov
inc
sub
roll
imul
mov
jo
movsl
or
rclb
adc
xor
into
mov
negb
mov
push
push
ljmp
ds
adc
arpl
and
repz
inc
repz
lock
movsl
xor
mov
ret
or
jb
sub
sbb
rcrb
sbb
addb
and
sahf
mov
es
outsb
or
lds
les
inc
fnsave
in
cmp
dec
ss
das
mov
pop
arpl
cltd
sbb
cmp
ret
outsb
dec
xchg
pusha
push
add
xchg
outsb
mov
mov
xchg
jae
or
out
ret
jbe
int
and
cmp
lret
cmc
lods
jge
fwait
bound
test
lcall
flds
sbb
pop
test
mov
faddp
inc
mov
jge
dec
popa
popaw
push
mov
sub
jle
into
ljmp
inc
xchg
pop
adc
mov
aas
mov
push
imul
leave
sub
pop
inc
inc
add
xor
pop
iret
fistl
in
subb
int
jecxz
and
mov
mov
add
add
outsb
and
les
ja
jae
jmp
iret
inc
fld
push
or
push
rclb
movsl
pop
xor
lds
push
pop
aad
cld
xchg
and
inc
imull
push
mov
mov
pop
repz
inc
jge
test
enter
fsub
jg
dec
adc
mov
loopne
mov
orb
xchg
sahf
or
sbb
cli
fnsave
enter
push
cmp
lods
aam
data16
mov
enter
fxch
adc
push
inc
fadd
mov
call
push
jbe
and
out
dec
loopne
pop
ljmp
pop
inc
sahf
leave
mov
or
ret
lahf
xor
mov
lods
adc
mov
push
mov
push
mov
fimuls
jl
in
sub
xchg
aad
not
jo
mov
aam
mov
xchg
ret
xchg
sub
push
insl
mov
pop
bound
push
xchg
mov
dec
cmpsl
mov
ljmp
out
xor
movsb
mov
ljmp
xchg
dec
adc
ja
jge
in
repz
jo
inc
jge
mov
insb
lret
push
jno
fidivrl
aad
cli
jo
out
add
testb
jl
cld
xlat
push
imul
iret
jnp
in
mov
iret
xchg
ret
sub
cmp
idivl
mov
fs
bound
es
xor
in
cmp
fsincos
sub
imul
mov
dec
aas
dec
or
mov
push
mov
dec
lods
shll
push
pop
icebp
dec
ds
scas
sti
xor
nop
xor
lcall
testb
call
mov
or
xchg
pop
sub
or
pop
pushf
add
dec
cmpsl
or
aas
dec
aas
adc
sbb
and
test
mov
mov
push
outsb
loop
sub
loopne
or
inc
lds
clc
in
lcall
lods
or
in
call
adc
jl
stc
lea
js
jp
jno
xor
nop
test
lret
xor
inc
adc
mov
mov
movsb
outsb
mov
xor
popa
shll
dec
aaa
or
jg
xchg
jno
or
aad
cmc
popf
sahf
push
mov
sub
pop
lret
jne
fisttpll
add
popf
aaa
orl
mov
jo
lret
test
mov
ljmp
add
ds
xchg
jbe
sub
fisubrl
xor
xor
cmpsb
mov
movsb
sbb
lock
dec
push
mov
addr16
sub
add
sahf
inc
ficoms
and
jmp
test
mov
push
ja
jns
test
mov
sub
and
daa
pop
push
jb
fwait
stos
int
mov
jmp
push
sub
rcl
pop
gs
sbb
fs
out
popa
jno
xchg
jbe
push
lahf
add
sub
aad
cmp
xor
es
inc
xchg
mov
jb
sub
mov
add
imul
and
sub
in
hlt
push
push
mov
cltd
fmull
cs
subl
push
addr16
add
or
mov
add
rcll
inc
xlat
aaa
es
fstps
xchg
lods
dec
mov
bound
daa
xchg
aaa
mov
jmp
subb
xchg
mov
cs
popf
mov
mov
xchg
and
sub
jg
ljmp
pushf
arpl
mov
xchg
or
enter
insl
fildll
pslld
inc
or
sar
push
jle
test
popf
loop
cmp
mov
inc
rorl
jmp
sarl
or
negl
inc
mov
int
jg
xor
push
ljmp
push
cmp
sahf
rcr
sub
sbb
lahf
pop
and
cs
enter
int3
push
dec
add
cmp
ljmp
lods
push
test
inc
cltd
es
cmp
adc
idivb
jg
xchg
xchg
xchg
out
insl
int3
push
clc
mov
pop
sub
repz
mov
aad
xorl
mov
mov
push
imul
hlt
sub
sbb
dec
mov
mov
jle
fidivl
sbb
jle
idivl
in
cmp
stos
fcom
sbb
fs
cli
je
pop
sub
sarb
mov
cltd
sub
push
pop
test
loope
insb
aam
out
repnz
leave
xchg
cmpsl
fisubl
les
pop
into
mov
push
insl
fcompl
aas
fmull
jbe
xchg
cmc
or
jno
cwtl
jge
scas
in
loope
imulb
nop
loop
outsl
xchg
stos
test
jbe
fiaddl
clc
clc
jge
or
clc
mov
inc
inc
imul
nop
push
add
mov
scas
pop
push
jo
mov
mov
jne
adc
adc
js
cmp
cmp
cmp
mov
das
jb
sbb
stc
in
lods
dec
push
call
sub
sbb
jo
jo
data16
fisubrs
std
jb
xchg
lock
movb
inc
adc
sbb
hlt
mov
insl
push
movsl
push
push
clc
pushf
cmpsb
pop
and
jg
fwait
stos
add
daa
fnsave
movaps
sub
ljmp
xor
call
nop
cmp
pop
out
jae
in
insb
js
jns
sub
out
xor
or
repnz
mov
jge
mov
cltd
cmpsb
clc
cs
jns
movsb
std
fidivrl
test
cmc
cmp
shrb
jae
pop
xchg
loope
loope
dec
js
daa
fsubl
in
out
loop
mov
repz
sbb
sub
fiadds
outsl
cmc
and
xchg
hlt
dec
ficoms
lea
jmp
int3
scas
jbe
adc
lcall
cmp
jge
jle
stc
jmp
cmpsb
mov
sub
add
inc
gs
and
clc
clc
in
test
ja
mov
push
jl
add
ret
je
xchg
adc
dec
mov
nopl
or
nop
lcall
clc
fwait
sahf
mov
mov
sbb
jmp
jno
cmp
fstps
xor
lock
cmp
notl
pop
pop
stc
mov
jns
outsb
xchg
push
and
js
push
in
jns
jge
pop
push
xchg
cwtl
stos
sbbb
stos
xor
in
je
cmp
push
inc
mull
push
das
and
shll
mov
cmp
push
mov
das
inc
movsb
idivb
xchg
mov
mov
imul
adc
int
sub
xor
gs
pop
int
push
out
fs
dec
stos
xor
ljmp
cmpsl
mov
sbb
movsl
cs
aad
int
add
scas
dec
sarl
notb
xchg
or
push
stc
cmc
push
inc
jnp
cmc
add
pop
cmp
cld
push
dec
sub
xchg
in
pusha
mov
inc
and
inc
push
add
test
sahf
repnz
jae
inc
push
and
cmc
pop
fadd
push
inc
push
fidivrs
addl
push
int
add
jbe
lods
fnstenv
test
cmp
mov
sahf
dec
adc
es
loop
jl
int3
fistps
icebp
dec
pop
dec
add
pushf
popa
mov
sbb
aas
inc
clc
cwtl
xchg
cmp
and
cmp
inc
inc
add
out
ret
enter
mov
fwait
ret
shl
decb
push
inc
cld
cmc
out
aad
dec
imul
mov
xor
insb
cmp
lock
push
sbb
push
lds
das
and
cld
push
push
mov
mov
sbbb
pop
add
cmp
movsl
sbb
loope
lret
cmp
mov
or
adc
jnp
sahf
push
sbb
cltd
xchg
xor
clc
loop
hlt
fiaddl
push
addr16
sarb
nop
push
fsubl
xor
xor
push
mov
sarl
fs
and
mov
and
and
movsl
subb
jg
pop
mov
aas
nop
insb
jbe
and
push
inc
sub
inc
cmp
insl
rorb
gs
hlt
xchg
pop
mov
bound
xchg
or
andl
inc
ret
dec
jo
push
scas
add
cmc
xor
pop
out
adc
outsl
push
loopne
subl
mov
cmc
rcrb
and
jbe
ret
call
mov
test
pop
add
outsb
test
in
adc
out
leavew
sub
icebp
xor
xchg
hlt
pusha
dec
xchg
jecxz
cwtl
push
mov
jmp
std
pop
test
outsl
or
mov
int3
repz
xor
es
inc
in
clc
ljmp
repnz
jnp
into
jecxz
and
out
popf
divl
xchg
xor
adc
or
pop
jecxz
mov
in
inc
stc
mov
inc
into
in
or
pop
test
enter
lcall
add
jnp
mov
xor
cmc
popa
loope
mov
jmp
out
xchg
inc
jo
test
gs
sub
cld
hlt
es
sub
mov
mov
dec
add
outsl
je
push
daa
cmp
sti
or
fwait
xor
insl
cmp
dec
rolb
mov
adc
call
out
rorb
daa
xchg
icebp
and
loope
repz
test
cld
rcrl
push
push
cmc
out
lods
inc
test
aam
pop
cmp
int
pop
call
je
es
xlat
sbb
xor
lea
jge
jb
xchg
push
les
fidivrl
in
cmc
repnz
addr16
push
mov
mov
jno
sub
push
mov
and
mov
sub
and
adc
sub
sub
cld
js
ss
push
in
sarl
sub
cs
insb
cmp
cmp
repz
imul
test
adc
add
aas
movsb
mov
dec
adc
xchg
cmp
xor
jp
xchg
inc
mov
sub
daa
push
and
push
scas
les
pop
sbb
add
xor
fdiv
xor
fiadds
adc
jae
lods
mov
inc
scas
mov
pmaxsw
mov
jg
mov
shlb
repz
ret
pop
pusha
dec
jge
shrl
test
popa
cmp
jmp
pop
into
in
adcb
mov
test
adc
mov
cltd
cmpsb
mov
jge
aas
push
adc
sti
mov
addr16
shll
sub
jle
data16
dec
add
mov
jmp
mov
mov
test
add
insb
scas
lret
shlb
mov
imul
add
imul
addr16
gs
pop
sarb
xor
inc
jecxz
bound
cmp
je
test
jg
lods
int
neg
arpl
pushf
andl
adc
fidivrs
sti
rolb
push
xchg
pop
mov
insb
xor
scas
in
add
sbb
mov
aaa
dec
mov
pop
mov
jb
loope
sbb
out
aas
sbb
xchg
bswap
les
jle
push
sahf
adc
xchg
int3
xchg
jno
out
lret
inc
cmp
or
xchg
stc
cmp
sahf
bound
xor
sbb
adc
fucomip
ds
in
bound
sub
pop
xor
add
mov
insl
push
pop
out
xchg
out
push
mov
adc
or
in
sbb
adc
pop
int
shrl
sub
sbb
lcall
xchg
lret
inc
sbb
aad
cmc
iret
mov
int3
jb
push
jbe
in
clc
ret
dec
arpl
dec
mov
nop
jmp
lret
je
or
fnsave
mov
inc
and
adc
cmp
into
aas
push
sbb
call
hlt
add
sub
push
adc
pusha
push
vdivss
stos
pop
aam
inc
mov
xchg
bound
nop
stos
aas
testl
ret
gs
andb
add
add
sub
cmc
push
arpl
mov
cwtl
dec
xchg
popa
rep
cmp
add
ficoms
into
sub
fidivl
fwait
imul
inc
cmp
cli
and
jl
test
sbb
cmpsb
int
test
adc
mov
mov
xor
xor
push
out
mov
mov
loopne
or
clc
out
jmp
push
mov
jb
mov
xchg
int3
cld
jne
push
xlat
repnz
jmp
mov
lock
cltd
notl
pop
jne
xor
xchg
pop
xchg
jg
cmp
fists
jo
cmc
xor
adcl
mov
cwtl
jmp
mov
pushf
mov
lret
inc
pop
mov
xlat
test
ret
mov
pop
popf
repnz
xchg
outsb
adc
mov
mov
jns
pop
es
insb
jmp
out
test
movsl
push
jp
xchg
inc
and
sub
shrl
mov
mov
jmp
pop
jmp
and
cld
pop
sbb
pop
out
int
js
fisttpll
loope
add
pop
or
aas
scas
sbb
mov
push
fwait
mov
icebp
xchg
jmp
mov
push
sub
add
dec
aam
imul
sbb
xchg
call
mov
or
cltd
aam
pop
aaa
jne
daa
fs
loope
out
bndldx
mov
pop
aam
in
pop
movsl
filds
inc
inc
ret
hlt
dec
jns
in
adc
test
lahf
mov
mov
in
pushf
js
jb
icebp
mov
mov
insb
je
push
outsb
fs
outsl
cli
test
adc
pushf
and
and
jmp
test
add
int3
push
mov
push
sub
add
jmp
mov
cld
stos
imul
inc
cli
inc
rorb
mov
insb
daa
cmp
shl
and
add
push
mov
mov
xchg
out
out
cmpsb
or
cs
loopne
mov
and
pop
xchg
in
ss
in
pop
cmp
jo
push
jmp
xchg
sahf
fisttpll
xchg
aaa
je
pop
out
xor
int
fadd
mov
enter
mov
gs
inc
lret
out
xchg
jg
fmull
lret
shlb
std
xchg
das
lock
mov
loope
adc
rcll
es
jo
dec
and
cmp
mov
push
push
xor
popf
aaa
dec
ja
rcr
dec
add
push
pushf
lock
jns
out
test
lds
ret
ja
insl
fnstcw
xchg
sbb
push
and
mov
movsb
ret
jp
dec
and
sbb
sbb
dec
aaa
cmc
add
or
pop
loope
clc
int3
and
mov
adc
call
mov
dec
les
cmp
add
iret
sub
in
dec
stos
into
ret
rcr
stos
or
mov
dec
loop
lahf
lcall
movsb
aaa
fcoms
sbb
es
mov
dec
test
mov
sbbl
mov
ret
jge
fstpl
mov
insl
cmc
popa
xor
mov
mov
push
in
jmp
pop
pop
imul
pop
and
ltr
and
cltd
popf
movsb
cmp
sbbb
subb
xchg
lea
pop
pop
xchg
add
jl
push
aas
arpl
outsb
xor
jmp
jb
cmp
xchg
inc
fs
in
dec
mov
shlb
jecxz
inc
xor
jmp
jmp
gs
sbb
jmp
pop
aam
ret
rclb
xchg
int3
sub
cli
stc
gs
jnp
dec
ret
push
push
xor
dec
sub
mov
fiaddl
push
jg
cld
sahf
cli
or
rolb
arpl
xchg
inc
loop
subb
xchg
dec
negl
jnp
push
xor
fstps
xchg
add
cmp
xchg
cmp
gs
pop
stos
jmp
mov
inc
dec
sub
jmp
int
sbb
cs
inc
sti
inc
mov
stc
jo
push
stos
pop
push
lods
pop
data16
push
ret
add
movsl
mov
cmp
dec
pop
out
aad
add
pop
push
mov
cmp
leave
push
dec
xchg
pop
pushf
cwtl
repnz
mov
loop
js
outsb
lret
inc
and
fwait
stc
andb
mov
fs
pop
xlat
jge
enter
stos
cmpsb
or
adc
add
xchg
out
adc
outsl
nop
xor
std
aaa
test
cli
jl
sub
daa
dec
shlb
push
xchg
fst
push
push
dec
sbb
jbe
mulb
push
imul
je
sbb
or
inc
sbb
in
and
rcrl
xchg
sbb
nop
pop
dec
mov
inc
arpl
ss
sbb
sbb
aaa
add
pop
data16
ljmp
xchg
dec
stc
testb
jle
mov
lds
cmp
aad
xor
lret
insl
int
pop
stc
sbb
out
fs
popa
loopne
ret
mov
cltd
or
orb
mov
in
sbb
std
mov
add
lcall
mov
and
inc
cwtl
shlb
outsb
imul
inc
insb
hlt
out
xchg
pminsw
jb
stos
inc
pusha
pop
mov
cmpsl
mov
push
push
in
xchg
mov
and
or
sahf
xchg
mov
leave
fs
outsl
popa
xor
ja
inc
stc
mov
lret
aaa
sbb
icebp
xor
add
lcall
fwait
and
inc
mov
or
repz
sbbb
jbe
or
jae
xor
pop
cmpsb
test
add
incl
stc
lret
nop
mov
ja
stc
pop
mov
inc
mov
xor
mov
andl
adc
sti
es
inc
push
pop
mov
mov
pushf
sbb
in
shll
icebp
ljmp
jns
or
outsb
mov
xchg
push
cmp
int3
icebp
popf
loop
dec
mov
push
in
les
loope
pop
hlt
out
in
fwait
add
call
jg
and
rcll
rolb
cmp
rcr
sub
push
adc
xchg
lds
add
sbb
imul
stos
push
adc
imul
lock
pop
ret
mov
jbe
mov
mov
ret
adc
aaa
jg
sbb
sub
add
mov
inc
cwtl
pop
loop
and
xor
repnz
lret
scas
mov
mov
jo
daa
jb
sub
insb
jp
adc
out
inc
pop
sub
popf
ljmp
push
pop
pusha
ss
push
loope
xchg
mov
pop
mov
mov
fisubrs
mov
jle
mov
sbb
xchg
jae
lds
or
xor
jg,pt
inc
stc
xchg
outsb
jp
ret
hlt
out
xor
xchg
cmp
sub
or
inc
or
in
push
push
cli
jecxz
and
jmp
add
shrb
sub
scas
scas
and
repz
push
sbb
push
imul
sub
int
mov
das
jmp
xchg
cmp
pop
repnz
dec
jae
jecxz
and
fs
ds
sub
mov
ret
and
pop
fdivs
out
lcall
mov
xor
in
sub
loop
pop
rcl
adc
popa
repz
push
jg
xor
ja
jns
adc
and
pop
mov
cmp
pusha
dec
sbb
divb
out
add
scas
mov
stos
out
dec
sahf
adc
mov
adc
sbb
stos
mov
insl
test
insb
jl
and
sbb
push
xchg
sti
fidivl
jmp
pop
xchg
cmp
dec
insb
or
out
xor
sbb
lahf
std
in
pusha
leave
out
mov
inc
push
andb
pop
das
or
in
cmp
dec
int
aaa
ss
in
or
xchg
jae
fisubl
or
inc
imul
shl
std
lods
fcomi
pop
cmp
xchg
mov
jg
mov
std
lock
aam
and
xchg
enter
repnz
mul
inc
daa
push
adc
shlb
stos
pop
in
lods
pop
inc
jo
aad
xchg
jns
pop
out
clc
push
outsb
popa
xchg
jbe
xchg
cmp
mov
fmuls
add
in
shl
push
popf
or
scas
pop
dec
ljmp
into
int
jnp
sbb
outsb
mov
mov
xchg
in
adc
push
sub
push
xor
subl
sbb
sub
rcrb
pop
sub
out
mov
mov
sub
mov
aas
scas
addb
mulb
fsubrs
psubw
cmp
int3
or
jne
ldmxcsr
inc
cwtl
aaa
into
popa
movsb
xchg
cmp
cmp
and
std
and
in
cmp
faddl
inc
out
mov
mov
jle
mov
dec
pop
fistpll
mov
sbb
and
aam
into
stc
mov
push
addr16
orl
dec
add
push
cwtl
push
sub
dec
addr16
or
movsl
and
xchg
adc
and
xchg
je
clc
out
inc
jbe
mov
cmp
loop
inc
into
movsb
call
js
stc
and
scas
sub
adc
push
jb
mul
lret
addb
mov
mov
adc
lahf
arpl
or
mov
aam
ljmp
insb
xchg
dec
stos
pop
in
add
fdivs
std
pop
push
clc
pop
jnp
jne
xor
popa
mov
sbb
and
stc
and
fs
les
push
lds
jle
dec
jo
clc
push
std
sbb
stos
pop
pop
inc
jo
pop
fstpl
rolb
outsb
ficoms
xor
je
mov
mov
xor
mov
dec
pop
aad
ja
pop
fisubs
xchg
xchg
dec
clc
mov
lock
test
jno
pop
and
stos
daa
mov
adc
jo
xor
mov
dec
mov
test
ja
sbb
push
sub
dec
cmpsl
dec
fmuls
mov
xchg
mov
addr16
aaa
mov
xchg
cmp
adc
dec
jg
mov
enter
pusha
les
and
fldl
xor
add
push
and
inc
jb
jae
int3
sub
inc
jle
dec
xlat
fsubrs
mov
cmp
rcl
mov
adc
in
mov
test
jbe
jl
sti
add
leave
mov
jmp
stos
js
pop
ja
jb
jnp
int
push
and
fs
rcll
popf
sahf
addr16
mov
scas
es
adc
add
fsubrp
pop
adc
lahf
add
lods
push
notb
add
sbb
adc
mov
loop
push
sub
out
insb
int3
fstp
ficoml
nop
jge
aas
xor
cmp
pop
xchg
enter
xor
mov
mov
mov
push
fists
scas
mov
add
cmp
ret
pop
and
add
out
popf
sbb
out
les
jge
and
mov
pushf
cmc
hlt
popa
xchg
cltd
pop
and
xor
lahf
add
mov
mov
es
mov
inc
sbb
pushl
testb
pop
dec
fisubrs
pop
mov
lods
sbb
push
or
push
sbb
ds
or
xchg
fs
add
into
lcall
rorl
imulb
dec
xchg
inc
add
add
aas
fsubrp
cmp
mov
mov
push
icebp
in
mov
add
jnp
sub
int3
into
adc
inc
pop
inc
xor
lods
roll
lea
js
jecxz
test
cmp
push
inc
pop
inc
icebp
push
movsl
popf
push
push
sahf
movsb
sar
jl
cltd
in
mov
ret
stos
mov
stos
jne
xchg
dec
hlt
mov
dec
mov
shrb
mov
or
push
dec
in
pop
dec
jle
ljmp
sub
fldenv
jae
mov
cmp
in
pusha
dec
xchg
fmull
arpl
call
sbb
and
mov
cmpsb
jb
sub
xor
sbb
jns
jne
add
ljmp
and
loopne
fcomi
or
les
sub
jmp
inc
cmp
movsl
repnz
test
xchg
pop
or
in
enter
mov
xchg
lock
xor
pushf
pusha
mov
mov
clc
enter
popa
loopne
call
sbb
xchg
sub
adc
fiadds
fcomps
xor
sub
adcb
jb
fcomps
cmp
xchg
xchg
out
in
rcll
pop
xor
mov
dec
mov
pop
push
push
sbb
cmc
mov
out
arpl
movsl
movl
jl
scas
mov
cmp
xchg
test
push
and
adc
push
aaa
add
in
mov
mov
out
inc
pop
das
pop
sbb
or
push
stc
daa
push
adc
add
cmp
ret
mov
cmpl
insl
fiaddl
stc
fs
mov
ret
push
adc
adc
jns
fmul
negl
or
cltd
mov
js
xor
cmp
mov
jns
add
aaa
lds
pop
inc
mov
int
das
mov
add
lock
pop
dec
dec
loop
xchg
jae
push
and
cmp
aas
mov
push
dec
xor
push
lcall
pop
dec
repz
sub
lea
and
jbe
aas
out
imul
jae
aas
das
mov
lock
push
out
loope
xor
ljmp
imul
shll
jecxz
test
enter
in
mov
pop
add
cmpsb
add
cmp
mov
inc
std
scas
or
xor
ja
popf
pop
xchg
icebp
cmp
adc
lods
in
sub
sub
inc
cmc
pop
jb
dec
fsubrl
icebp
insl
jmp
dec
fucom
lcall
jne
push
adc
je
cld
pop
aaa
iret
dec
jno
lret
loope
xor
insb
loop
call
cmp
stos
sbb
and
push
inc
loopne
or
fwait
popa
add
xor
jno
mulb
lret
mov
cmp
lahf
mov
insl
jae
dec
inc
into
movsl
lds
movsl
sub
jle
rcl
std
mov
or
mull
push
sbb
test
mov
xor
addr16
adc
pusha
mov
std
xchg
add
xchg
xchg
test
push
stc
sbb
dec
pop
sbb
ret
push
sub
pop
dec
cmpsl
mov
fdivr
jnp
sub
movsb
push
leave
mov
xchg
cld
popa
and
push
xchg
cs
hlt
outsl
repnz
ret
popf
icebp
pop
cli
stos
in
xchg
sub
ss
icebp
push
mov
mov
jns
out
and
lret
sbb
cmp
out
fadds
mov
es
hlt
sti
sbb
sbb
shrb
pop
cmp
jbe
lahf
mov
dec
push
add
push
popa
movsl
xor
jae
cs
je
and
dec
or
jg
movsl
lods
pop
mov
cmpsl
ja
mull
cmc
fwait
test
dec
xor
mov
sbb
movsb
mov
pop
sub
or
loopne
cmp
mov
or
and
xchg
mov
mov
xchg
ljmp
xor
and
and
xchg
jo
inc
in
repnz
push
jno
int
mov
inc
fisubl
inc
sbb
push
stos
xor
add
test
hlt
gs
aad
insl
imul
repnz
rcll
test
out
sbb
ret
stc
adc
xor
shl
pop
push
imul
inc
mov
rclb
out
pop
cmpb
and
jne
xchg
xor
leave
add
push
pop
jae
enter
loop
sbb
xor
dec
jle
dec
notl
push
cmp
sti
cmp
sbb
dec
pop
sti
cmpsb
cmp
adc
push
xlat
lret
add
push
pop
shlb
nop
sub
sar
inc
inc
lods
shrb
outsl
clc
sbb
in
pushf
imul
mov
test
adc
in
push
push
or
lret
xchg
test
sbb
lock
cld
ljmp
pop
or
lods
repnz
popf
mov
pop
mov
xchg
sub
popf
ds
mov
inc
add
sub
imul
insl
ret
and
lea
xchg
test
xor
inc
stos
pop
mov
iret
xchg
movsl
mov
pop
insb
pusha
bound
pop
cmp
test
cli
aam
int3
xor
test
lds
jg
dec
enter
xchg
xlat
das
sbb
jecxz
loop
scas
loopne
in
push
int
enter
es
push
ss
push
jmp
sub
sbb
test
mov
cmp
popf
pop
xchg
sbb
dec
loopne
jle
into
lcall
adc
jne
bound
mov
ret
cli
fidivs
sub
mov
and
adc
movsl
adc
int
push
shrl
lock
shll
mov
xchg
sarb
xchg
scas
sbb
aad
mov
mov
orb
xor
das
cmpsl
scas
mov
mov
inc
sbb
rcl
in
inc
outsb
mov
das
inc
mov
in
push
ret
mov
lret
fistpl
jb
bound
gs
out
sub
mov
orb
push
sti
popa
cmp
jg
or
test
fwait
push
int3
dec
stos
scas
outsl
inc
push
jl
ljmp
lods
sarl
sti
xor
pop
les
add
sbb
cwtl
add
scas
or
out
out
es
xor
or
fiadds
in
sbb
cmp
or
xor
pusha
aas
addr16
cs
push
mov
inc
out
mov
xor
adc
jg
les
mov
or
add
jp
lea
push
inc
jmp
sahf
lock
cli
mov
test
push
sbb
jmp
hlt
push
out
sbb
cmp
lea
mov
mov
or
stc
mov
inc
mov
out
adc
xchg
inc
call
dec
dec
mov
movsb
cmp
outsb
jle
sub
mov
loop
jo
push
inc
aaa
xchg
fsubs
mov
and
mov
int
test
clc
ss
movsb
mov
lods
push
stos
fsubr
xchg
cmp
mov
pop
jle
pop
cltd
sbb
je
cmpsb
inc
lea
xchg
pop
ss
mov
aad
fs
shlb
out
sub
cmp
fiadds
mov
cltd
mov
xor
lea
lds
push
adc
xchg
pop
push
jae
jns
fs
sahf
sahf
clc
subps
push
int3
sbb
push
inc
cmp
mov
in
xor
rep
push
lahf
xlat
xchg
inc
scas
sbbl
xchg
mov
dec
fsubrl
cltd
sbb
pop
jno
test
gs
enter
fstl
repz
mov
dec
or
mov
xorl
jb
xchg
nop
and
pop
xor
push
inc
clc
adc
jl
cltd
aas
jb
pop
mov
mov
lret
movsl
sub
mov
in
fwait
into
mov
sti
xor
pop
repnz
mov
movsl
push
les
nop
add
xlat
es
mov
mov
xor
or
pop
mov
ja
aam
jp
es
dec
pop
push
adc
cmp
fidivrs
ljmp
dec
aas
dec
mov
add
aam
adc
add
inc
jnp
dec
jns
int3
popa
xor
xor
mov
negb
mov
lahf
cmp
xor
fdivp
pop
jo
out
sbb
push
dec
test
inc
in
in
sbb
pop
stos
inc
cmp
clc
pop
inc
cmpsb
pop
aam
jnp
xchg
jmp
ret
inc
inc
fcoms
test
cmp
iret
dec
add
xchg
xchg
sub
mov
lret
test
pop
xchg
mov
add
xchg
inc
jl
xchg
sub
mov
inc
jg
cmp
jo
lea
dec
inc
sbb
fsubl
fidivl
dec
rolb
mov
pop
arpl
test
int3
xchg
jne
dec
es
imulb
nop
cs
add
sbb
aad
lea
pop
test
xchg
sub
les
pop
and
cmp
daa
lret
out
and
pop
test
sbb
out
out
sbb
inc
stc
cld
pop
jo
or
fmul
ljmp
sub
ds
cld
adc
pusha
movsl
mov
jb
sub
js
adc
stos
sub
cli
fildll
push
stos
scas
movsl
popf
or
pop
lret
int
inc
xchg
data16
pusha
dec
sub
jl
sub
xor
repnz
push
push
push
adc
inc
rorb
fadd
add
mov
jmp
adc
adc
mov
dec
out
push
push
fwait
mov
outsb
sbb
in
inc
adc
mov
jp
cmpb
ja
cmp
sub
jp
je
mov
pop
cli
xchg
add
xchg
jno
popf
jl
and
mov
popa
mov
jl
push
repz
in
nop
add
test
xlat
out
clc
push
icebp
aad
insb
mov
jle
sbb
mov
es
insl
lret
pop
ja
in
inc
cmp
xchg
shll
leave
hlt
adcb
cli
addl
enter
shrb
cmp
mov
mov
les
mov
xchg
pushf
sub
mov
les
add
cld
pop
jo
sub
adcl
mov
lods
mov
clc
in
fwait
sbb
mov
sbb
jecxz
sbb
mov
int
mov
arpl
jp
xchg
and
mov
mov
les
cmpsl
cmc
sub
jle
adc
sub
dec
add
mov
imul
rol
ds
sbb
inc
or
dec
jp
mov
mov
mov
dec
push
xor
and
mov
xor
leave
shlb
or
push
pop
xchg
sahf
int3
cmp
adc
add
les
test
iret
pop
test
pop
jp
aas
rcrb
mov
or
jmp
jg
test
jne
ret
mov
fs
ss
pop
cmp
cmc
rorl
sub
dec
jae
xchg
jge
jno
push
loop
roll
or
int
mov
sub
push
jge
loope
dec
cli
out
test
and
push
mov
push
mov
outsb
cmp
xchg
add
in
or
mov
pop
or
inc
or
aad
scas
push
xor
jbe
sarl
pop
pop
mov
dec
stos
in
xchg
dec
xchg
and
mov
xor
mov
icebp
push
mov
pusha
ljmp
and
cmp
and
push
jmp
cmp
outsb
sti
pop
cld
pop
iret
or
sahf
in
sarl
mov
popa
test
cli
das
inc
xchg
pop
jb
xor
xchg
and
std
loope
clc
sub
pop
xorl
sbb
cmp
shll
dec
cmp
jbe
jmp
inc
jmp
jg
in
cmp
cmc
ret
push
or
dec
loopne
jne
mull
loope
dec
iret
loope
adc
sti
mov
sarl
add
addr16
lcall
add
cmp
mov
xchg
or
inc
pop
clc
jne
imul
fldl
fldenv
jb
ss
push
and
lock
adcl
shlb
arpl
in
fists
or
aam
dec
bound
loop
lock
fildl
jo
add
fcomi
pop
jnp
xor
sbb
xorb
xchg
scas
out
out
aam
pop
out
into
ljmp
lds
orl
or
hlt
mov
adc
pushf
stos
out
jl
pop
into
jb
imull
negl
inc
ret
into
popf
enter
lret
mov
inc
leave
mov
xchg
rorl
adc
mov
cmp
loope
repnz
xchg
push
mov
mov
nop
dec
cmpsb
or
jbe
mov
js
scas
call
loop
popf
push
outsl
or
mov
xlat
cmp
push
fwait
ds
mov
xchg
insb
out
inc
sub
shrl
insl
xor
inc
shrb
jo
push
pop
hlt
out
mov
mov
and
pop
or
xor
test
repnz
jmp
rcll
leave
test
xchg
test
adc
adc
and
xlat
sub
cwtl
stos
mov
std
pop
xchg
addr16
inc
jb
cwtl
idivb
popf
add
jmp
sub
sahf
stos
xchg
subb
sbb
cmp
inc
adc
sub
leave
ja
xchg
lahf
in
fnsave
adc
cmp
add
mov
cmp
sub
mov
fiaddl
adcl
sub
cmp
cli
mov
xor
and
add
jge
ja
addl
xlat
mov
push
pop
lock
in
sbbb
dec
jmp
jnp
mov
out
fucomp
sbb
enter
repnz
fidivl
push
or
push
lcall
movsb
das
ret
mov
fcomi
cs
rorb
add
int
fbld
fsubr
sub
insb
call
scas
movsb
lods
hlt
jmp
and
mov
repnz
hlt
sbb
test
gs
mov
arpl
sub
movsl
out
add
mov
ret
rcrb
jo
adc
and
pop
sbb
inc
push
nop
cmc
clc
pusha
adc
pop
push
sub
mov
mov
std
xchg
and
ljmp
dec
int3
push
push
mov
lret
xchg
popa
push
cmp
pop
push
adc
push
mov
pop
xor
add
xchg
jle
notb
mov
pop
mov
aas
leave
in
movsb
int3
lcall
sub
mov
mov
xor
leave
ljmp
scas
or
outsb
or
mov
in
pop
pop
fwait
add
mov
test
es
imulb
icebp
fdivrl
dec
push
movsb
inc
stc
pop
sahf
fmul
jle
xchg
int3
icebp
mov
sbb
mov
fiadds
mov
dec
sbb
jecxz
xchg
icebp
popf
dec
out
pop
or
lahf
mov
ret
push
rcl
ficoms
outsb
es
es
mov
cmp
fwait
cli
imul
inc
and
cwtl
mov
mov
inc
in
jns
in
lret
cmpl
aad
lds
cmpsl
lods
sub
cwtl
aam
addl
or
aam
repz
das
mov
aad
lea
fcmove
scas
cmpsl
push
mov
pop
push
daa
push
mov
pusha
aaa
test
sar
jmp
repz
xlat
loop
inc
sbb
add
aaa
inc
roll
dec
sbb
cmp
adc
test
mov
mov
xor
xor
mov
es
test
mov
inc
fldl
sti
mov
popa
js
add
and
push
data16
xchg
cmc
xor
pop
adc
mov
adc
cmpsl
std
int
pop
lods
dec
inc
push
aam
mov
sub
es
push
imul
lods
or
test
push
or
adc
sti
dec
sbb
fisttpl
arpl
mov
push
pop
shrl
mov
loop
jmp
sbb
arpl
add
rclb
mov
mov
sub
int3
or
arpl
orl
jecxz
pop
mov
lahf
data16
inc
add
dec
test
int3
pop
sahf
inc
xchg
mov
cmp
push
fwait
mov
mov
cld
inc
scas
cmp
pop
mov
mov
sbb
mov
push
push
rolb
push
and
mov
lahf
jbe
or
hlt
adc
mov
push
shrl
sbb
jno
and
sbb
movsb
adc
dec
jo
mov
ss
daa
xor
int3
dec
dec
data16
negb
or
mov
lret
cmp
xlat
jmp
fwait
les
jbe
xchg
jo
mov
cmp
and
mov
mov
fwait
divb
add
movb
mov
cld
es
sbbb
out
adc
dec
cmp
mov
or
fidivrs
adc
push
xor
add
scas
fmul
loope
rolb
in
repnz
mov
cli
pop
outsb
setge
les
jl
popf
push
sub
mov
xlat
or
test
mov
adc
or
inc
cmp
pop
xor
or
icebp
lods
sbb
xor
mov
aam
dec
add
or
jecxz
push
cmp
pushl
mov
mov
pop
add
mov
adc
mov
and
lahf
nop
and
pusha
es
or
lds
push
push
mov
mov
loopne
jp
aam
xchg
rorb
movsb
rcr
inc
mov
lahf
inc
fwait
pop
mov
arpl
xor
fnsave
ds
out
cmp
push
lods
shlb
jmp
pop
jns
mov
pop
push
xor
or
sub
jno
or
loope
aas
addl
stc
cmpsb
addl
inc
aaa
sbb
mov
scas
cld
or
scas
sbb
fbld
push
cmc
insb
shrl
push
movsl
mov
mov
dec
push
or
fldl2t
dec
mov
js
dec
cmp
pop
aaa
cmp
mov
mov
xor
or
xchg
fs
xor
mov
iret
notb
lock
cld
mull
mov
or
test
rol
and
orl
cmpsl
jge
dec
jge
popa
push
les
cs
xchg
push
mov
jae
sbb
mov
sbb
lds
xor
inc
sbb
fisttps
sahf
aas
iret
xor
mov
popa
mov
aas
sub
daa
mov
adc
test
out
mov
js
and
ret
clc
ret
sahf
add
in
orb
jo
sbb
ret
or
inc
in
mov
divb
fdivs
loope
add
repnz
pop
and
cmp
sub
ret
dec
sub
sub
push
lea
inc
inc
adc
icebp
add
mov
fs
pop
mov
out
pushf
into
or
or
push
pop
jbe
jp
jno
add
sub
inc
adc
add
inc
xchg
pop
lret
popa
xor
and
push
orps
push
dec
sub
sbb
cmp
fldcw
push
pushf
mov
adc
outsl
enter
jmp
mov
add
daa
push
or
and
sahf
or
fwait
dec
or
jo
les
div
mov
and
mov
into
and
aad
pop
or
mov
fs
and
xchg
xchg
and
adc
test
adc
mov
push
fdivl
mov
fisttpll
hlt
jp
jmp
mov
in
ret
cld
js
jo
cmp
call
pushf
jno
loopnew
scas
inc
rorl
sbb
or
inc
pop
push
mov
cld
xor
xchg
adcl
in
nop
lea
pop
mov
stos
je
sub
imul
incl
shl
jnp
push
and
loopne
fisttpl
jnp
ds
es
movsb
mov
sbb
popa
flds
sbb
jno
mov
in
scas
adc
xor
cmp
cmp
push
add
jl
stos
pushf
dec
xor
test
jns,pn
stos
or
push
repnz
ret
xor
imul
into
cmp
cmp
shlb
cwtl
cmpsb
mov
test
mov
or
cmp
mov
lret
cmpsb
imul
fwait
push
fiaddl
aad
xor
adc
scas
stc
lahf
test
sub
and
add
or
mov
xchg
or
leave
mov
in
push
dec
jbe
jne
test
out
cmpsl
xchg
inc
xor
ljmp
adc
and
pushf
push
sub
pop
sbb
cmp
shlb
sbb
leave
cmc
ret
das
sar
imul
test
add
les
or
es
or
push
jp
jecxz
or
mov
push
adc
mov
test
sbb
in
xor
lret
push
sbb
aas
orw
pop
call
xchg
movsl
cmpsb
mov
cmpsl
rclb
jnp
int
shlb
adc
cmp
in
je
jmp
ret
mov
push
das
xor
xor
mov
scas
dec
adc
or
add
push
xchg
mov
xchg
mov
sub
push
ret
fwait
scas
jb
movsb
rcr
mov
mov
xchg
inc
inc
xor
mov
jle
or
adc
rorl
mov
pop
jb
sbb
cmp
mov
aad
loope
aaa
sbb
das
repz
orb
mov
adc
or
mov
mov
int3
test
dec
or
jg
rorw
sbb
cmp
or
pop
sbb
inc
clc
cmp
xor
iret
insl
in
xor
jns
jecxz
mov
lods
push
out
push
popf
mov
sub
xor
or
inc
inc
aaa
pop
mov
jne
push
data16
mov
cli
rorb
repnz
pop
and
in
lea
adc
sahf
xchg
pop
sub
in
mov
inc
insl
leave
pop
jb
jecxz
mov
add
cmpl
mov
fsubs
popa
ret
sti
inc
cltd
cmp
pop
add
rclb
hlt
xchg
mull
repz
lret
and
inc
fmuls
mov
in
sbb
cli
cmpl
xchg
test
adc
cwtl
mov
ja
mov
in
jbe
rorb
adc
dec
push
jecxz
stos
jae
dec
adc
mov
popa
loope
movsb
ljmp
dec
mov
sub
int3
mov
lock
jo
test
sub
jae
dec
jmp
mov
pop
jb
sahf
jmp
jle
insl
mov
out
mov
push
out
sbb
cmp
push
push
mov
mov
mov
sahf
jecxz
lea
jne
fs
add
jg
jns
aas
rcrl
jnp
cmpsl
ret
pusha
test
add
adc
int3
fistps
jg
cmp
adc
sub
out
cmpsw
fidivs
cs
jp
pop
pop
pop
sbbb
jg
push
out
out
insl
pop
imulb
repz
and
jmp
and
dec
pop
cld
ljmp
insb
int3
or
sar
hlt
pop
bound
or
dec
mov
sub
dec
test
xchg
pop
sub
jg
push
push
inc
add
push
xor
loope
loop
mov
add
cmp
xchg
jae
cmp
push
movsb
ds
lea
sahf
pop
data16
lahf
xchg
push
mov
test
movsl
arpl
mov
ja
cld
jecxz
adc
add
aas
xrelease
sub
push
mov
inc
into
dec
push
mov
mov
neg
sub
sub
sub
mov
cmp
test
jp
and
mov
push
push
jno
xor
add
and
fldl
sub
repz
dec
les
jmp
and
inc
lea
sqrtps
or
or
mov
stos
jo
and
js
aas
sub
aad
daa
xchg
push
cli
and
std
clc
shlb
push
mov
cld
mov
dec
into
cmp
in
sbb
lock
lret
mov
dec
in
pop
mov
jnp
cmpsl
lods
mov
mov
leave
int
std
adc
insl
popf
fsubp
or
sbb
sub
push
inc
jmp
mov
lods
or
inc
mov
mov
jp
inc
pusha
xchg
jns
add
aaa
inc
inc
repz
loopne
or
jnp
and
stc
mov
or
cmp
and
cwtl
inc
jg
jns
ss
adc
aas
ror
xor
aaa
movsl
out
in
or
ret
cmpsb
inc
push
pop
insl
xor
movsb
testl
in
lahf
rcrb
mov
outsb
ret
fst
arpl
jge
mov
dec
mov
ja
pushf
in
lcall
lea
lret
mov
outsl
test
cwtl
fists
push
mov
cmp
or
add
imul
dec
out
jno
xchg
int3
ffree
int
xchg
adcl
push
rorb
sbb
mov
clc
gs
cmp
push
inc
xchg
in
es
lret
addr16
out
mulb
jnp
dec
cltd
adcb
jne
push
and
xor
mov
mov
jle
mov
popf
dec
add
and
inc
mov
mov
fs
jno
out
insl
inc
dec
or
mov
cmp
insl
sbb
je
sbb
dec
iret
inc
inc
popf
xchg
mov
rcrb
push
cmp
mov
rcr
push
lods
loopne
ficoms
mov
test
xor
popf
mov
loope
idivl
jg
ja
xor
mov
adc
rclb
out
in
cld
jmp
into
mov
into
ss
pop
jb
adc
inc
jb
or
leave
and
es
call
xchg
mov
pop
ret
pop
pushf
xchg
test
push
negb
rclb
inc
std
cli
imul
test
stc
pusha
sbb
cmpl
sarb
inc
popa
repnz
cmp
shll
aaa
outsb
mov
movsb
push
mov
lock
push
jns
std
pop
push
jnp
loope
insb
cmp
inc
mov
cmp
xchg
pop
push
cmp
in
add
aam
inc
or
mov
loopne
xor
push
js
sub
inc
pusha
mov
and
push
sbb
jnp
mov
leave
mov
inc
jp
sbb
dec
mov
scas
fs
in
sahf
mov
xchg
or
xchg
sub
jl
xchg
push
push
ss
lods
nop
loop
and
pop
iret
pop
sub
mov
jmp
rorb
jnp
ficoms
add
and
pop
ret
jmp
or
dec
ja
dec
pop
xchg
addr16
inc
push
jl
pop
xchg
rcr
cmpsb
mov
ret
lock
xchg
lahf
leave
lods
inc
ljmp
add
je
outsb
scas
push
push
cmp
fiaddl
push
nop
cmp
hlt
mov
das
icebp
adc
jp
xor
lcall
imul
push
sub
inc
add
loop
enter
sbb
adc
loop
stc
loop
insl
in
jp
ljmp
cmp
loopne
mov
jns
inc
or
cmp
push
jnp
push
add
cmpb
xchg
lret
or
sbbl
lods
pop
mov
mov
jecxz
mov
push
jo
mov
pop
pop
je
loopne
jmp
cmp
jp
dec
mov
pop
sub
mov
fincstp
mov
and
fnstenv
mov
lahf
ds
adc
dec
xor
out
lahf
les
mov
xor
adc
faddp
cmpsb
jmp
jg
nop
adc
out
pushw
cmp
jne
movsb
icebp
mov
cmc
lcall
xor
and
lea
and
add
shr
cmp
ret
into
sbb
in
inc
divb
mov
jae
or
cwtl
pop
jge
sub
imull
in
clc
ja
add
push
add
dec
inc
dec
mov
mov
pop
jb
sbb
jnp
add
pop
xor
ret
data16
sarb
cmpsl
dec
stos
hlt
loope
or
daa
cmpsb
inc
es
addr16
cld
dec
adc
cmp
xchg
gs
out
ds
pop
or
out
movsb
sub
lahf
jns
jl
andl
addl
mov
pop
stos
jge
dec
outsl
and
inc
jp
cmp
or
lcall
enter
into
mov
outsl
outsb
rep
sahf
push
cmp
movsb
sub
add
push
jnp
adc
pop
aaa
push
repz
jnp
mov
inc
shlb
dec
out
repz
rclb
lahf
daa
adc
cltd
or
push
sbb
out
data16
lret
push
fidivrs
mov
push
push
jge
inc
xorb
inc
stos
popf
or
mov
pushw
xor
rol
test
in
pop
push
pop
loopne
xchg
clc
sbb
mov
dec
rcrl
adc
mov
test
sub
test
mov
sub
xchg
sub
xchg
xor
cmp
push
ret
bound
mov
xor
outsb
mov
pop
mov
lret
xor
ja
sub
sub
inc
mov
je
jmp
jbe
and
aaa
or
mov
stos
add
repnz
loopne
push
ret
add
fcom
jno
movsl
pop
xor
fisubrl
pop
add
decb
add
mov
pop
ja
cmp
fildl
and
dec
xor
pop
mov
push
fwait
call
dec
sbb
jne
xlat
jbe
sbb
in
subb
mov
in
std
mov
jae
xchg
fdivrs
xchg
mov
in
inc
pop
icebp
cmp
arpl
cli
pop
mov
les
xor
mov
add
repnz
nop
sti
dec
cmc
insb
scas
sbb
pop
mov
out
nop
lret
mov
daa
fsqrt
repz
inc
repz
xor
dec
lea
and
pop
arpl
mov
adc
inc
scas
mov
repz
xor
ret
pop
or
rolb
xor
out
jge
xor
sbb
ret
and
push
popl
or
pop
subb
or
jns
inc
mov
jns
pop
mov
mov
xlat
dec
mov
sub
xchg
imul
aas
icebp
mov
pop
testl
jge
lods
je
xor
aas
out
call
sub
pop
enter
out
or
cmc
in
mov
inc
dec
loopne
jge
cmpsb
push
or
and
ffreep
out
push
cmc
lock
mov
pop
pop
pushf
dec
pop
std
enter
inc
sub
pop
add
inc
add
sub
mov
mov
outsl
pop
lret
dec
loop
mov
push
and
ds
or
push
fcomps
ljmp
adc
add
jge
ja
or
lcall
mov
or
dec
int3
cmpsb
inc
push
sbb
popf
cwtl
inc
push
push
rol
test
xor
add
fwait
lcall
jp
or
pushf
lds
bound
inc
inc
inc
xor
inc
pop
cmc
imul
jbe
jb
fistps
sbb
mov
xchg
jb
jo
xor
sub
or
adc
cmp
jmp
fs
inc
mov
xor
xor
pop
xchg
or
mov
and
pop
pop
mov
inc
enter
xchg
movsb
ljmp
add
mov
xchg
or
arpl
test
js
ss
hlt
fnstenv
sahf
add
sti
call
push
inc
push
xor
out
repnz
leave
ret
jle
add
push
xor
mov
lock
loopne
scas
mov
out
mull
mov
push
jmp
mov
push
ret
ret
shl
mov
add
jnp
pusha
stos
repz
dec
in
mov
add
fbstp
xor
add
cs
xor
aam
int3
xor
jnp
mov
xchg
cmp
pop
fwait
cmp
xor
inc
test
out
lcall
add
and
ds
adc
cmp
push
sbb
pop
xchg
cmp
push
outsl
cwtl
jge
sbb
scas
out
shrl
iret
sub
add
or
punpckhbw
pop
jae
xor
out
fs
in
jmp
pop
push
xchg
repnz
lock
mov
insb
outsb
mov
sarl
rorb
and
adc
cmp
jns
js
push
sti
or
cmpsl
out
lds
pop
daa
xchg
and
xchg
jns
xlat
mov
dec
fsubs
jbe
jb
push
ss
fs
cmp
inc
rcl
into
mov
mov
mov
hlt
stos
push
mov
mov
cmp
shlb
mov
in
js
jae
fdivs
testb
jbe
repz
jg
cmp
sub
frstor
call
lret
inc
jbe
pop
jecxz
cmc
pop
mov
cmpsb
lret
gs
insb
mov
mov
xor
maskmovq
testl
adc
mov
dec
xor
add
pop
adc
jmp
cwtl
rol
add
push
in
sbb
outsb
mov
sub
add
stos
loop
adc
xorl
stos
in
mov
xchg
push
das
adc
mov
mov
adc
seta
sub
pop
and
lods
cmp
js
fs
insl
cmp
adc
xor
pop
pop
mov
jge
xchg
data16
rorb
pop
or
xor
pop
into
repz
add
push
les
int
aas
cltd
cmp
sub
iret
pop
push
lods
frstor
scas
mov
rorb
sbb
arpl
dec
jmp
stos
aaa
stos
test
cmp
addr16
iret
xorl
pop
test
adc
int3
stc
test
nop
mov
mov
dec
mov
pop
mov
xor
jg
ficoms
adc
pop
lods
inc
mov
xchg
aas
mul
mov
popf
add
lods
lea
test
cmp
lret
sbb
call
mov
scas
pop
cmp
jge
jbe
mov
call
adc
fadd
aaa
mov
jle
mov
das
dec
mov
xchg
xor
ret
je
addr16
add
sbb
je
je
rcl
aam
in
pop
sub
ja
xor
sahf
fstl
sbb
insb
and
rcr
andb
or
sub
dec
data16
ficoml
test
ljmp
push
stc
mov
loope
sbb
stos
jnp
cmp
pop
sarb
lcall
push
cmp
lret
mov
inc
cmp
stos
adc
and
add
jecxz
pop
mov
pop
in
std
jbe
test
xor
jae
xchg
dec
fmuls
cli
add
dec
out
mov
pop
xor
push
xchg
fcomip
and
dec
ret
adc
dec
xchg
jecxz
mov
jno
fstl
dec
mov
jb
lea
fcmovu
mov
mov
stos
cmp
mov
out
mov
add
xchg
sarl
mov
and
xchg
fadd
fcoml
inc
jg
sbb
xor
loop
cld
jp
jmp
aad
std
out
adc
jae
mov
cmpsl
add
jg
sbb
dec
push
pandn
add
mov
mov
pushf
cltd
push
mov
daa
jg
packuswb
adc
lods
inc
mov
test
or
sub
test
into
mov
fwait
fwait
inc
push
fdiv
lret
imul
xor
mov
sub
mov
lods
int
and
stc
inc
hlt
sub
xchg
popf
pop
jecxz
push
mov
cmp
ffreep
out
jle
dec
fisubrs
std
mov
mov
xchg
into
dec
mov
mov
in
loop
cs
xchg
ja
sub
lcall
fadd
jbe
movsb
sub
mov
ret
lret
mov
xlat
out
imul
lret
popf
jnp
idiv
or
pop
push
sub
popa
lcall
push
dec
sub
mov
dec
aas
xchg
sub
dec
out
loop
lods
inc
shlb
gs
add
adc
xor
popf
sti
dec
xor
push
fisubrs
adc
mov
inc
rolb
mov
mov
jg
mov
xor
adc
repnz
mov
fnstsw
or
stos
lea
gs
pop
jle
add
xchg
out
cs
mov
sbb
out
lock
mov
push
jg
cmp
bnd
cmp
test
sub
or
mov
in
lret
inc
movb
add
leave
sub
pop
mov
mov
scas
push
fmulp
xchg
pop
call
movsl
out
outsl
mov
sbb
xchg
mov
sbbl
fdivr
xchg
fwait
pusha
cld
jbe
xchg
fdiv
dec
std
data16
or
ret
cmp
lcall
insb
bound
fs
pop
test
dec
pop
cmp
fbld
mov
call
cmpsl
stos
mov
mov
inc
in
mov
mov
call
mov
cld
jo
push
add
sub
lret
test
add
push
mov
adc
pop
sahf
outsl
cltd
clc
jmp
sbb
pop
lcall
repz
xor
xchg
aas
sub
icebp
shrl
aas
pop
lret
dec
cli
insl
in
xor
push
in
out
bound
imul
push
xor
lods
insl
loopne
push
fwait
daa
dec
jbe
pop
xor
movsb
pushf
test
xor
call
stos
lock
mov
in
cmc
in
out
dec
jge
int
mov
iret
mov
jmp
inc
mov
and
push
jne
hlt
icebp
mov
loopne
insb
data16
sbb
shr
cmc
mov
cmp
aad
push
push
or
lods
ret
movsl
out
mov
shlb
or
lds
sahf
jge
cmpsb
push
pop
lret
outsb
cmp
rcrb
mov
pop
push
stc
cmp
jp
mov
addr16
pop
dec
mov
dec
sub
mov
pop
popa
push
cmp
outsb
sub
lret
pop
cmp
sar
push
push
xor
mov
daa
lea
fwait
cmp
lret
int3
sub
and
mull
cltd
daa
lret
mov
rclb
inc
mov
push
adc
adc
pop
cmpsl
jge
call
jmp
int
aam
jle
loop
pusha
daa
add
sbb
imul
rcr
cmpsl
sub
into
addr16
jbe
or
sub
movsb
lock
pop
xchg
movsb
adc
mov
sub
push
mov
stc
lahf
testl
lea
lock
push
xlat
ret
fsubs
out
das
outsb
fdivrp
push
push
sub
cli
jmp
sub
fs
outsl
ficoml
xchg
ret
pop
mov
inc
sub
and
loop
repz
xor
jb
jno
push
int
enter
mov
xor
mov
outsb
pop
fbstp
mov
jb
mov
push
push
xor
xor
adc
sbb
adc
sbb
nop
inc
hlt
roll
jge
inc
fistpll
jae
push
cmpsl
pop
lcall
movsl
sti
clc
jle
pop
hlt
aad
test
push
mov
or
aas
iret
fdivrp
es
pop
xchg
and
call
out
inc
ffree
mov
insl
outsl
mov
arpl
xorb
pop
divl
out
pop
cmp
adc
xor
jle
dec
nop
sub
fildl
mov
mov
ret
mov
adc
mov
mov
test
insb
push
lcall
dec
fidivs
inc
cs
dec
jno
inc
cmp
cmpsb
push
incb
addr16
cmp
add
out
jo
inc
loope
mov
jg
ret
out
mov
add
cltd
jle
lcall
adc
subl
sbb
add
cmp
test
hlt
loopne
xlat
dec
dec
and
ds
in
insl
rorl
push
insb
cmp
mov
ret
and
stos
cmc
sbb
sbb
scas
mov
cmp
xor
inc
mov
push
inc
cmp
push
loop
push
sbb
dec
mov
popl
mov
jmp
pop
xchg
in
pop
pop
sbbb
rcrl
cmc
jns
and
jl
lahf
pop
push
dec
mov
hlt
push
and
fwait
mov
loope
cli
add
jg
xor
test
pop
mov
stos
loopne
sbb
pop
in
les
std
mov
jbe
sbb
sub
mull
mov
adc
je
ja
pop
mov
into
mov
dec
cmp
sub
ret
mov
mov
mov
pushl
jo
lcall
xor
pushf
push
pusha
arpl
push
pop
sarb
mov
int3
xchg
stos
jecxz
mov
stos
test
jnp
fstpt
shrl
loop
shll
rclb
stc
dec
cltd
mov
adc
test
adc
ret
and
fsubs
or
fcomip
add
or
data16
jl
mov
mov
adc
movsl
fwait
andl
ss
fbld
push
out
ds
mov
lret
in
xchg
gs
adc
call
cmc
addr16
das
clc
xchg
hlt
inc
xchg
insb
mov
testl
dec
cmpb
jg
sbb
xor
sub
aam
adc
sahf
pushf
jp
mov
inc
mov
mov
mov
leave
int3
js
pop
inc
cmp
jmp
mov
idivl
cmp
repz
jl
js
pop
cld
out
out
fs
fisubl
push
or
and
test
into
mov
inc
and
xchg
fwait
outsb
dec
aad
shl
les
mov
dec
jns
xor
mov
scas
test
jle
mov
fisttpll
sbb
pop
jnp
push
cwtl
adc
add
ffreep
sub
loope
mov
push
in
addr16
jl
mov
je
outsb
xchg
mov
sahf
jne
jl
call
and
andl
adc
pop
inc
test
or
lahf
add
sub
in
pop
dec
stc
sbb
jae
out
ja
jmp
mov
loop
test
pop
pop
mov
ss
or
fisttpl
shll
xor
pop
ja
cli
push
push
push
jmp
xor
jl
dec
test
shl
adc
ret
add
shlb
pop
cmp
sub
adc
pop
add
nop
jnp
jecxz
dec
pop
repz
shrb
in
push
mov
xor
fwait
adc
xor
aad
or
fisttps
jle
stos
xor
pop
cld
lds
inc
lods
dec
sbb
add
lret
shrb
sarl
in
fldcw
lret
xchg
sub
fldcw
sub
inc
sub
daa
test
push
es
mov
xorl
test
jno
ret
mov
jmp
cmp
ja
dec
test
jnp
roll
jle
imulb
aad
jns
pop
pusha
add
mov
sahf
dec
inc
jne
popf
jo
sub
cmp
lock
out
xchg
outsb
insb
mov
clc
movsl
mov
and
adcl
sarb
mov
insb
imul
mov
ss
stos
pop
addr16
inc
adc
sbb
inc
fyl2x
add
xor
test
insb
pop
ret
pop
sbb
in
cmpsl
jmp
pop
popf
mov
fdivs
lret
iret
mov
xchg
and
insl
mov
sub
jl
jmp
jnp
and
mov
xorb
xor
in
cmp
mov
pop
push
sub
mov
pushl
cmp
imul
mov
leave
aad
add
sub
push
dec
jo
out
imul
cmpsl
mov
ljmp
rolb
adc
pop
push
cltd
xchg
mov
pop
push
lea
das
adc
outsb
int
ret
push
mov
mov
insb
dec
or
or
mov
mov
xor
sbb
pop
xorl
les
xchg
sub
js
adc
lret
jge
sub
push
push
sbb
mov
adc
cmp
dec
nop
jge
shll
loop
mov
inc
ret
lods
push
loop
mov
jno
push
out
mov
loope
inc
xchg
dec
push
enter
popf
push
fldt
out
xchg
aas
stos
mov
je
mov
mov
lcall
lds
push
pop
jno
dec
cmp
pop
mov
push
lret
cmpsl
xchg
push
sbb
movsl
cs
jge
cltd
les
mov
shll
and
push
fadd
add
inc
mov
push
pop
outsb
sti
data16
mov
fcompl
xchg
push
fistl
pop
adc
dec
dec
push
pop
hlt
add
std
or
dec
std
test
and
mov
push
fistl
mov
inc
cmp
aas
int
bound
sbb
jle
int3
push
rcrl
inc
sub
jbe
sbb
pop
adc
dec
push
test
lahf
in
inc
add
push
pmaxsw
stos
cld
insl
aad
sub
xor
stc
popf
xchg
cmp
test
sbbl
and
sbb
add
mov
pop
or
dec
stc
loop
cmp
pop
mov
daa
xor
mov
jne
xor
jg
and
loop
push
rcrb
nop
outsl
repz
xchg
jl
test
outsl
or
inc
out
mov
pop
adc
ret
into
lds
outsl
mov
jge
cmp
movsb
out
xchg
mov
sbb
dec
lds
enter
aam
addr16
bound
repnz
push
sub
pushf
inc
sub
mov
aaa
daa
adc
clc
ds
sub
mov
jge
or
pop
cwtl
cmp
insl
orps
mov
push
add
adc
push
ficoms
mov
mov
loope
addr16
sar
xchg
cmp
test
mov
xchg
add
js
addr16
in
test
sbb
pop
inc
or
mov
or
xchg
dec
push
add
cmpsb
pop
jno
mov
lods
pop
sub
xor
adc
cmp
push
in
sbb
jmp
cwtl
cmpsb
repnz
push
sbb
in
xor
fbstp
mov
and
xor
mov
xchg
xchg
adc
mov
ss
das
lcall
push
outsb
xor
jbe
std
jns
popf
xchg
sbb
cmp
mov
jae
push
lea
and
mov
cltd
push
xchg
int
gs
pop
out
xor
fstp
les
and
push
in
xor
and
enter
cltd
and
sub
xchg
lea
es
mov
pop
pop
mov
and
sbb
lods
mov
jbe
repz
dec
and
inc
stos
sub
jae
ds
pushf
cmp
ret
aaa
push
scas
lea
pop
xor
dec
adc
dec
mov
imul
repnz
xchg
and
leave
or
pop
scas
repz
jnp
lcall
int3
push
ficoml
sub
xchg
in
add
and
inc
or
hlt
stos
imul
push
sbb
lods
test
enter
add
or
ret
test
test
adc
mov
xor
dec
mov
push
call
pop
std
inc
ljmp
cmp
jle
jl
and
pushf
cli
or
ret
lods
les
ja
dec
add
mov
push
insb
cmpsb
push
push
out
cld
push
sbb
jp
outsb
cmc
out
mov
pop
out
mov
xchg
mov
xor
ffree
add
adc
xor
push
add
xchg
out
xor
push
daa
mov
in
mov
lret
jne
cmpsb
push
les
adc
scas
mov
cmp
jge
mov
push
imul
nop
outsb
inc
xchg
je
mov
lods
jl
push
int
adc
sti
and
jnp
sub
jg
xlat
mov
test
aad
xlat
add
pop
popa
iret
sub
adc
mov
mov
outsl
out
clc
xchg
cld
imul
es
cmp
cmp
jp
jle
fadds
push
pop
push
aam
add
les
ret
ss
adc
pop
push
push
nop
ljmp
fadd
or
jo
jmp
mul
xchg
and
inc
pop
xchg
jne
adc
and
xchg
clc
mov
shl
jns
jp
arpl
adc
cmc
add
adc
loopne
or
dec
ret
cmpsl
lea
inc
rcrb
cmp
sbb
pop
pop
popa
lock
movsl
stc
cmp
push
mov
dec
mov
ss
dec
jg
mov
add
pop
adc
jp
in
test
adc
sahf
jne
ficoml
repnz
jp
push
push
inc
scas
shrb
arpl
mov
data16
scas
cmpsb
add
negl
jp
enterw
lods
and
fldt
insb
jbe
popa
mov
das
mov
pop
xchg
xor
lods
jp
popf
test
loopne
cmp
sub
pop
stos
mov
mov
test
data16
xor
shlb
aad
inc
add
mov
cmp
out
pop
jae
data16
and
mov
add
inc
mov
jo
out
or
popf
popf
adc
add
jno
cmp
sahf
aas
std
dec
mov
lods
fbld
int3
pop
dec
xchg
mov
adc
push
inc
or
leave
mov
orb
inc
push
add
fidivrl
aam
dec
repz
addb
jg
insb
rcr
dec
orb
loopne
mov
movsb
shrb
mov
cltd
insb
sbb
enter
in
xchg
jg
fsubl
sti
shl
imul
mov
inc
flds
jmp
cmp
or
add
jp
pop
movsl
mov
mov
ljmp
enter
lret
sbbb
dec
icebp
jnp
xchg
incl
jle
clc
stos
xor
fsub
fcomi
dec
int3
inc
repz
fiaddl
pop
andl
out
xor
xchg
sbb
adc
psubsw
scas
adc
aas
in
pusha
jbe
mov
je
sbb
xchg
subb
fstpt
ret
adc
lds
mov
xchg
gs
loope
dec
push
dec
pop
add
out
out
psubd
stc
cmpsb
imul
loop
lods
jg
fstps
pop
xchg
cld
xor
mov
gs
shrb
out
xchg
shll
test
or
jne
movsl
ljmp
and
pop
lds
test
and
ljmp
push
mov
xchg
mov
mov
mov
push
sysexit
fmull
mov
pushl
pushf
aad
rorb
fnsave
mov
cmc
leave
dec
mov
jns
dec
cld
lret
pop
mov
mov
sar
pop
call
dec
dec
lahf
and
dec
loop
jo
pop
stc
ficomps
shlb
pop
adc
mov
into
cmp
out
and
scas
ja
mov
mov
adc
mov
and
and
dec
sbb
sbb
adc
popa
jp
frstor
mov
mov
push
inc
lds
mov
fisttpl
and
cmpsb
cld
mov
adc
js
xor
sbb
cwtl
addr16
or
nop
in
sub
xchg
and
shrb
mov
jge
aad
aam
imul
mov
xor
sub
jge
and
lret
push
divl
dec
scas
repz
sti
cmp
lock
aam
outsb
insb
add
and
int3
repz
aam
mov
mov
aaa
jl
push
add
enter
cmp
imul
ljmp
jp
sbb
andb
inc
push
xchg
xor
push
fwait
sbb
push
ret
cmpsb
xchg
cmp
das
out
in
or
in
ja
xor
arpl
jae
fsubrp
inc
add
pop
mov
pop
xchg
fwait
pop
out
aad
jns
test
sub
mov
jbe
xchg
subb
call
mov
ja
sbb
pop
fistl
mov
leave
jle
gs
jae
pop
pop
cmp
mov
lcall
cmp
faddp
aam
mov
push
stc
xchg
mov
and
mov
into
and
sub
mov
xchg
xchg
dec
int3
push
jp
outsb
push
int
jbe
sbb
push
bound
jmp
cltd
imul
fnstsw
sbb
sub
insl
dec
cmp
shll
jns
jns
ret
sub
lret
mov
mov
mov
cld
jb
sub
imul
mov
push
mov
sbb
jge
mov
aaa
or
jns
jle
clc
hlt
dec
fsubl
inc
or
filds
sbb
push
cmc
dec
imul
sub
jl
lods
pop
inc
pop
add
popf
mov
cmp
xor
mov
out
scas
popf
fbstp
cld
popa
rcll
mov
shll
mov
std
test
or
jne
sub
sub
or
jbe
xchg
inc
popa
sub
dec
lea
out
or
inc
imul
xor
pop
jp
sbb
test
dec
inc
gs
mov
gs
test
aaa
inc
ret
add
sub
lea
sub
and
cmp
push
cmc
mov
mov
ss
xchg
pop
xchg
rolb
mov
int
mov
scas
std
fldt
pusha
sti
cwtl
add
out
inc
sub
inc
outsb
cmova
scas
sub
cs
dec
repnz
dec
int3
sub
fstl
repz
mov
mov
push
sbb
mov
xchg
jecxz
aas
push
sub
popf
add
adc
jge
cltd
outsb
call
pop
jmp
pusha
jbe
test
mov
fimuls
push
cmc
in
test
adc
jns
sub
xchg
shrb
popa
adc
add
xor
hlt
pop
cmp
into
inc
fisttpll
iret
or
jle
inc
sbb
call
inc
movq
pop
adc
data16
jne
mov
shll
inc
adc
mov
lods
push
or
mov
test
push
gs
int3
out
sbb
into
les
test
loopne
inc
or
xor
or
test
mov
pop
or
scas
icebp
outsl
call
or
inc
ljmp
aaa
sub
stos
repz
fcompl
test
repz
cmp
xor
mov
adc
pop
and
mov
adc
and
pop
pop
push
mov
mov
inc
sub
ja
subb
mov
cmp
mov
mov
sub
sub
mov
jecxz
pop
pop
mov
sub
jecxz
pop
cmp
cld
cmp
pop
scas
pushf
hlt
loope
sbb
ds
inc
pop
aam
lds
icebp
cmp
cmp
rorb
pop
adc
push
pop
mov
arpl
mov
inc
jle
cmpb
jnp
das
pop
xor
outsb
scas
gs
xor
and
test
push
pop
xor
adc
lea
stos
cmp
rorb
push
fcomps
mov
data16
daa
lss
jecxz
push
call
rcrl
push
andl
in
fs
jnp
fs
out
cmp
xchg
repnz
cmpsb
leave
clc
cli
les
pop
push
pop
ret
inc
std
jo
mov
enter
and
lcall
imul
addl
push
inc
outsl
shrb
scas
cld
dec
icebp
push
fisubs
jmp
incb
add
sarl
and
mov
xor
xchg
loopne
mov
push
in
out
xchg
scas
lock
xorb
mov
xchg
in
jnp
ja
mov
jl
push
cmpsb
pusha
gs
repnz
adc
jle
daa
mov
stos
icebp
mov
pop
jmp
mov
insb
and
imul
shrb
les
xchg
pop
pop
mov
lahf
or
or
sub
cwtl
and
xor
mov
outsb
pop
imul
sbb
std
je
xchg
xor
xchg
mov
cwtl
add
sub
mov
mov
dec
sub
pop
cmp
fwait
inc
int
gs
leave
ljmp
cmp
inc
mov
push
jb
lahf
out
rcl
or
pop
sub
movsb
and
inc
fmuls
dec
lret
adc
and
stc
mov
mov
stos
mov
mov
fldenv
jp
sahf
hlt
int
or
xchg
adc
add
shrb
inc
sbb
movsb
mov
insb
das
aad
dec
repnz
mov
jae
sub
dec
xchg
out
and
mov
sub
xor
out
sbb
out
dec
mov
or
adc
sbb
mov
mov
cs
cmpsb
or
and
and
xchg
in
or
push
lock
mov
adc
push
andl
and
add
ja
ret
cmpl
fistpl
inc
repz
out
pop
mov
cltd
add
ja
jle
roll
jg
or
dec
xlat
flds
outsb
bound
jo
test
xor
xchg
pop
push
pop
xlat
lcall
repnz
lcall
inc
dec
mov
xor
sbb
stos
pop
sub
cmp
jb
adc
cmpsb
inc
adc
cmp
pop
jl
or
cmp
test
mov
clc
cmp
cwtl
pop
mov
sub
cmp
jmp
xor
adc
ljmp
sbb
test
imul
mov
sbb
xchg
and
rcrb
fiadds
test
cmp
btc
lahf
mov
sub
cmp
shll
xor
pushf
sbb
scas
mov
xchg
jo
int3
scas
insb
out
repz
cwtl
imul
insb
ret
lret
cmp
sarb
sub
adc
scas
and
fcoms
pop
xor
mov
outsb
pushf
fisubs
pop
popa
push
jmp
lods
cmp
leave
or
cmpsl
dec
rcrl
aas
mov
sub
jbe
mov
xchg
ds
mov
popf
outsb
jnp
outsb
daa
test
ds
call
and
cmp
and
or
sbb
pop
sbb
imul
and
dec
cmp
mov
cmp
loopne
sarl
in
fisttps
insl
idivb
and
fyl2xp1
ret
xor
andl
xchg
ret
lock
jno
into
inc
push
in
dec
ds
cmp
insb
pop
sbbb
xchg
sbb
lret
movsb
add
test
xchg
das
push
rclb
or
rcrl
in
gs
sub
sar
push
lds
push
loope
shlb
jecxz
pop
push
jns
sub
lock
cmp
or
nopl
adc
call
cmpsl
aaa
fcmovnb
push
inc
insl
fcoml
pushf
and
push
add
fstpl
add
dec
js
push
xchg
and
cmpsl
cmp
xchg
mov
push
jbe
into
cli
hlt
imul
ret
mov
push
mov
cmp
lds
out
xchg
hlt
mov
lret
add
and
cmp
push
je
adc
xchg
xchg
xchg
stc
gs
cld
fdivr
mov
cmp
adcl
shrb
push
out
addr16
jle
add
pop
fildl
pop
sahf
cmp
sbb
call
pop
iret
push
jnp
mov
add
and
cmp
add
sahf
inc
loopne
pop
movsl
mov
aad
loopne
cli
mov
xchg
xchg
jb
push
pop
scas
dec
out
das
xor
dec
lcall
cs
outsl
cmp
popa
mov
xchg
push
cltd
popa
pop
xchg
out
push
jmp
cmp
dec
mov
jno
fs
push
cli
xorb
imul
and
or
inc
ret
test
in
dec
fiaddl
jb
adc
test
icebp
clc
das
shll
test
inc
shll
xlat
arpl
push
lret
ja
xchg
je
or
roll
dec
mov
lahf
adc
sub
mov
mov
add
mov
jg
lret
sub
mov
fists
pop
lret
jge
in
mov
orb
and
cltd
sbb
ljmp
scas
lret
movsb
out
fidivrs
pop
jmp
push
je
xlat
xor
mov
inc
pusha
std
frstor
or
shrb
es
inc
pop
hlt
mov
nop
jle
pushf
xor
rorl
mov
popl
dec
jne
mov
ffree
add
cmp
cmp
dec
jne
aaa
push
imul
shll
push
mov
rol
jg
rorl
lds
fptan
and
jns
scas
addr16
popa
adc
xchg
xchg
or
lcall
fwait
ja
fsts
ficoms
and
cmpsl
ficoml
pop
xchg
in
idiv
int3
inc
repz
js
cmpsl
mov
xchg
or
dec
sub
sbb
push
add
jp
push
pushl
jo
insb
das
sbb
and
pop
std
push
push
dec
sub
mov
mov
xor
fists
stos
shlb
mov
mov
adc
test
rolb
les
dec
and
fistpl
dec
jmp
popf
pop
xor
das
mov
xchg
jae
cli
adc
pop
js
push
jbe
shlb
dec
dec
sub
adc
push
jge
hlt
xor
adc
repnz
mov
jbe
shlb
std
lret
xor
mov
repnz
loop
push
jmp
insl
push
dec
jp
sbb
mov
outsb
and
into
jp
and
arpl
loope
in
xchg
int3
iret
scas
sub
aas
pop
leave
test
push
popf
jmp
outsl
movsb
inc
mov
shl
or
idivl
pop
sbb
pop
mov
popa
push
mov
or
mov
jns
xor
pop
insl
mov
lret
mov
stc
lcall
xor
shll
sbb
popa
inc
mov
pop
mov
mov
adc
sub
xchg
push
inc
jne
dec
imul
mov
aam
push
repnz
shl
int
jo
cmp
mov
repnz
xor
shld
icebp
inc
ret
cmp
daa
dec
xor
adc
rcll
cmpsb
mov
or
sbb
push
push
add
jmp
xchg
fildll
mov
push
or
xchg
jg
inc
mov
loopne
adc
jo
mov
std
inc
push
addr16
dec
inc
stos
sub
inc
or
mov
jnp
fiadds
or
inc
loop
jbe
adc
mov
out
in
mov
xchg
pop
or
inc
ret
pop
xorl
or
add
sbb
push
sbb
outsl
repnz
adc
pop
or
add
pop
xchg
jecxz
or
jge
les
mov
cmp
jl
xchg
int3
int
in
int
test
jb
mov
adc
cmp
or
shll
xlat
mov
mov
mov
mov
imul
repz
mov
outsl
xchg
sbb
out
mov
and
pop
jle
pop
pop
imul
adc
lahf
aas
cld
imul
shlb
lods
test
sub
sub
pushf
jbe
loope
outsb
sub
cmpsb
and
scas
mov
xchg
lods
push
push
or
xor
push
notl
inc
clc
pop
nop
int
stc
jns
pop
jb
lods
or
sbb
in
sbb
dec
test
mov
xor
shrl
and
js
mov
pop
fcoml
fistpl
arpl
sbb
jae
push
xor
addl
enter
and
imul
or
dec
ret
cmpsb
scas
pop
sub
andb
cli
or
jge
ja
out
cmp
fidivrs
mov
mov
xor
decl
pop
testl
lahf
sti
lcall
int
pop
dec
jecxz
mov
mov
and
loopne
inc
jmp
scas
mov
mov
addr16
cmpsl
jbe
xchg
scas
insl
jnp
sub
fs
mov
test
dec
or
out
mov
cwtl
and
fsts
inc
dec
aam
ret
sbb
imul
cmp
xor
mov
mov
movsl
leave
sbb
inc
jnp
fsubrs
out
sbb
jbe
xor
xor
or
pop
adc
imul
xor
add
dec
jmp
sub
push
jmp
outsl
mov
stos
into
mov
andb
mov
dec
into
sbb
iretw
mov
inc
movsl
inc
dec
and
pushf
xor
push
andb
xchg
in
loop
mov
dec
push
shl
and
dec
sbb
stc
ficompl
in
sarb
xor
push
hlt
int
jnp
cmp
bound
mov
je
outsb
es
mulb
or
xor
adc
out
nop
cmp
jae
mov
jge
hlt
inc
stos
rorl
mov
test
adc
or
dec
into
aas
sbb
jbe
push
push
inc
push
lahf
inc
sub
outsl
or
in
aaa
hlt
or
movsb
adc
mov
mov
xlat
jle
cmp
loope
adc
push
mov
and
in
push
mov
xor
push
div
out
fs
jge
shll
mov
fisttpl
pop
jnp
leave
imul
pop
adc
test
sub
push
dec
add
sbb
pop
shlb
loopne
iret
mov
or
sbb
and
push
icebp
movsl
data16
pop
mov
push
mov
or
mov
sub
into
push
or
adc
movsl
in
xor
mov
mov
jns
xchg
aaa
das
jge
fnstsw
ficoml
test
in
loopne
ficompl
data16
data16
xor
int3
sub
ret
push
in
ret
dec
push
jge
add
lock
test
pop
rorl
jp
jp
dec
sub
std
andb
movsb
pushf
lds
sub
lahf
shrl
mov
or
jmp
push
test
dec
nop
sub
jmp
mov
test
inc
mov
outsb
fwait
dec
inc
push
xchg
bound
daa
xchg
pushf
and
mov
les
inc
inc
jne
push
mov
add
jl
and
sub
dec
sbb
loop
mov
mov
sbb
and
jno
fstpl
lcall
lods
and
sbb
imul
push
mov
and
cmp
rcr
xor
stos
mov
incb
push
push
push
pop
repz
std
mov
jb
jmp
movsb
arpl
ret
adc
cltd
icebp
rorl
cmp
mov
dec
scas
out
xchg
fmul
out
xor
pop
movsb
mov
add
popf
or
jmp
push
push
dec
arpl
sub
div
push
sahf
mov
es
ljmp
mov
sarl
in
ljmp
in
jb
mov
scas
orb
out
incl
mov
aaa
inc
push
shlb
or
mov
fadds
addr16
adc
pusha
pop
or
push
insl
mov
insl
cli
les
push
das
loop
out
inc
mov
cmp
fcomip
xchg
pop
xor
insb
pop
mov
sbb
fildl
adc
push
stc
ds
adc
ret
mov
mov
rcrl
in
xor
mov
sbbb
mov
or
hlt
rcrl
repnz
std
popa
out
mov
dec
adc
xor
ficoms
sub
cs
rcrl
mov
mov
sub
lahf
stos
cwtl
mov
aad
das
lock
mov
mov
fprem
mov
jb
out
inc
jns
xchg
dec
lahf
and
or
dec
add
lea
cwtl
ret
aad
jl
mov
xchg
mov
testl
xchg
sub
and
or
pop
dec
mov
fcmove
addr16
lea
jns
sbb
aaa
stc
or
data16
test
mov
decl
outsb
imul
ror
jnp
inc
xchg
mov
into
call
pop
out
xor
int
sub
jbe
xor
lcall
inc
jb
int3
mov
cltd
inc
adc
jno
fstps
or
push
cltd
push
and
push
in
out
stc
test
and
adc
ficoml
sub
fs
loop
mov
fnstcw
jmp
test
jbe
movsb
push
mov
jbe
mov
xchg
mov
dec
outsb
mov
call
inc
jno
mov
or
testb
in
sbb
cmp
repz
test
adcb
adc
mov
sub
in
idivl
pop
mov
loopne
mov
bound
pop
lock
add
sbb
adc
test
mov
cmp
cwtl
and
pop
adc
jg
imul
cltd
loope
test
sti
dec
mov
inc
mov
rcrb
scas
scas
fdivrs
dec
mov
xor
mov
xchg
cmp
xor
or
movsb
xchg
push
in
inc
lcall
adc
hlt
inc
sbbb
outsl
add
sti
mov
andl
sub
dec
push
dec
xchg
ret
iret
movsb
imul
out
dec
adc
out
fnstenv
xchg
xchg
xchg
insl
lods
sbb
cld
dec
nop
xor
jb
push
dec
cmpsb
shll
pop
mov
test
xor
xor
xchg
fisubs
jg
xchg
lret
stc
push
pop
jb
in
cmp
sub
or
addr16
inc
test
dec
add
push
out
mov
jecxz
push
int3
repz
fwait
jno
scas
mov
shll
cmp
ja
and
lret
inc
scas
lods
outsl
adc
cmp
pop
mov
cs
into
mov
stos
push
lock
xchg
fdivr
jg
xchg
lods
cmp
daa
add
aam
stos
lods
test
daa
mov
das
ja
inc
jmp
push
insl
sub
xchg
inc
scas
xor
aaa
loopne
inc
les
add
mov
xchg
dec
fbld
cmp
das
adc
cli
jmp
xchg
mov
sub
cmpsb
mov
or
fildl
addl
pop
shlb
pop
cmp
cld
fucom
js
xor
jns
inc
push
jecxz
arpl
pop
cmp
pop
pop
sbb
mov
mov
pop
xor
dec
sbb
in
loop
mov
out
movl
jbe
arpl
inc
mov
cwtl
push
push
lret
mov
or
mov
jae
cld
mov
push
xor
cmc
cmp
sub
mov
mov
sbb
push
aas
jnp
adc
jns
dec
bound
outsl
movsb
test
and
and
daa
jl
ljmp
cmpsb
loope
jne
mov
lret
es
adc
dec
fstl
mov
sbb
scas
inc
add
sbb
ret
mov
sub
jmp
icebp
xchg
pop
add
prefetchwt1
fnstcw
call
dec
push
cmpb
push
add
sbb
cmp
and
inc
adc
mov
notl
ret
in
xchg
cmp
aas
movsl
stos
mov
sbb
mov
inc
or
mov
dec
sub
test
cmc
inc
cmc
mov
mov
pushf
lcall
cltd
cmpsb
dec
fs
les
adc
clc
sub
pop
and
ret
xor
add
js
mov
in
repz
sbb
repz
addr16
and
xchg
imul
call
mov
add
adc
dec
repnz
cmp
add
xor
push
or
fs
jno
loopne
int
roll
dec
dec
test
das
imul
jbe
mov
pop
xchg
mov
sbb
ja
sbb
repz
ficoml
sbb
lret
push
pop
sbb
xchg
mov
mov
push
mov
cmp
leave
pop
or
aad
adc
pop
jns
ds
ljmp
push
je
insl
imul
decl
xchg
ljmp
clc
jecxz
imul
outsl
or
adcl
xor
mov
push
push
test
subl
inc
pushf
adc
or
in
sbb
dec
leave
inc
push
jmp
push
insl
call
xlat
je
cmp
sub
mov
inc
push
jle
imul
sub
cmp
lock
movsb
pop
int
das
adc
xchg
in
cmp
imul
cmc
lods
dec
xchg
inc
addr16
xchg
dec
jp
repz
ds
cmp
fcmovb
daa
cmp
mov
das
loopne
std
push
jge
pop
test
test
jmp
and
xchg
and
inc
ret
insl
and
adc
mov
movsl
out
push
popl
hlt
insb
xchg
or
xor
in
mov
inc
fcoms
sub
add
push
insl
fs
xchg
xchg
inc
in
mov
in
jecxz
push
fcomip
in
push
cmp
mov
dec
arpl
lods
icebp
mov
mov
iret
cltd
cmpsl
pop
ds
xchg
pop
xchg
and
inc
test
js
pop
cmc
test
pop
mov
and
es
xor
fwait
call
sbb
sub
cmp
movsb
inc
ss
xor
out
and
ret
out
adc
push
pop
dec
int
mov
push
mov
mov
movl
sub
insb
add
push
xchg
cmpsl
sahf
xchg
lock
lret
fldcw
cwtl
and
xchg
mov
dec
fwait
push
aam
pop
and
sub
add
inc
jae
add
popa
push
scas
daa
repz
and
scas
inc
mov
imul
lcall
stos
arpl
mov
jle
repnz
mov
cmc
xor
push
cltd
rcr
inc
jo
add
sbbb
lcall
jb
mov
stos
dec
xchg
mov
push
hlt
fwait
loopne
pop
sub
jbe
push
jnp
or
jae
xchg
out
adc
pop
ret
mov
lods
rep
jno
loope
sub
mov
mov
sbb
lcall
out
push
popf
pop
imul
pop
dec
leave
dec
sbb
gs
mov
and
dec
jmp
and
fst
push
pushl
xchg
stos
dec
movsl
jo
sub
lods
outsb
cltd
fs
sbb
test
sarl
rolb
sbb
sub
lcall
mov
rcrb
push
jns
xchg
pusha
sub
loopne
sbb
add
scas
xor
sahf
lahf
inc
jns
inc
add
jmp
mov
lahf
das
shlb
adcb
shl
daa
roll
push
aas
cmp
shrb
loope
mov
and
pop
popf
xlat
jbe
mov
inc
xchg
xchg
mov
and
mov
adc
adc
xor
rclb
fs
lods
into
push
imul
or
or
cs
jnp
inc
and
add
add
sbb
in
push
lret
or
inc
pop
mov
add
ja
mov
mov
jae
cld
out
idivb
arpl
cltd
movsb
cmpsb
mov
xor
loope
repz
outsl
ja
xorb
cmp
sub
jae
or
adc
ja
jbe
push
gs
mov
add
test
push
sbb
and
sbb
xor
mov
into
sub
fs
pop
mov
loopne
cmpsl
cwtl
jge
fiadds
push
cmp
insb
sub
cltd
or
mov
shrb
scas
inc
xor
pop
int
enter
into
jae
dec
adcb
xchg
fcmovne
data16
lahf
adc
sub
inc
imul
movsb
dec
add
xchg
mov
push
pop
lds
xor
movsb
scas
fsubr
sbb
stos
pop
mov
outsb
cli
pop
push
ja,pt
lcall
into
push
sbb
aas
mov
jne
and
push
std
inc
popa
or
jnp
pop
add
jnp
out
sarb
cltd
add
add
and
loope
adc
mov
mov
inc
xorb
dec
mov
pop
and
sub
icebp
mov
ljmp
rcrl
push
adc
insb
jle
xor
scas
xor
test
jns
pshufw
sbbb
stc
push
mov
leave
addr16
fidivl
lock
jno
std
sub
xchg
popf
aaa
mov
xchg
dec
lahf
test
push
inc
in
push
dec
test
out
lock
bound
adc
adc
cmp
lods
in
mov
inc
or
and
pcmpgtw
add
repz
or
nop
dec
sarl
mov
xchg
lret
xorl
inc
repz
imul
xchg
shr
lock
addr16
popa
into
push
push
mov
imul
icebp
inc
pop
mov
icebp
adc
pop
and
push
lret
call
ljmp
ss
or
sbb
push
sbb
dec
clc
xlat
push
in
popa
mov
std
lret
push
std
mov
je
add
jg
ss
fdivl
xchg
mov
jne
fsubp
cmp
xchg
mov
test
or
data16
pop
sub
into
notl
popf
scas
sbb
shr
icebp
adc
sub
or
pop
pop
cmp
fidivrl
int3
lret
aas
push
iret
and
loop
lcall
hlt
imul
mov
mov
js
and
mov
std
sub
ja
std
movsb
xchg
or
xchg
mov
cltd
jp
push
lret
imull
xchg
jecxz
xchg
outsb
sub
jg
inc
fwait
out
cmpsb
ds
adc
mov
or
inc
and
sbb
loopne
aad
out
and
cld
mov
sbb
fnsave
outsb
adc
mov
call
cmp
xchg
addb
dec
inc
jb
rcl
insb
repnz
adc
mov
inc
nop
rcl
xor
imul
aas
cmp
lock
js
jge
mov
add
fcoml
cld
xor
outsb
dec
aas
ret
jp
loope
sub
bnd
pop
lea
fadds
pop
or
sbb
lcall
js
out
sub
add
ds
push
mov
int3
push
cld
xor
iret
js
sbbl
enter
lods
and
int
aam
xor
push
mulb
lret
jns
pop
nop
inc
pop
sahf
je
mov
sahf
iret
outsl
lods
in
cmp
xor
xchg
or
int3
mov
xchg
cs
std
mov
or
push
insb
xor
divl
jge
je
or
xchg
adc
and
jne
lea
test
or
inc
into
sbb
out
aam
inc
xchg
lods
mov
shll
lret
mov
loopne
addr16
dec
adc
test
adc
rolb
inc
or
addl
add
or
es
mov
cmp
nop
fildll
repnz
pop
jbe
pop
rcr
ds
pop
add
dec
scas
sub
shl
test
popa
hlt
fidivrs
popa
out
add
in
mov
mov
out
and
xor
and
mov
jge
xor
mov
mov
mov
or
ja
daa
push
sub
or
jns
cwtl
or
cmp
leave
add
dec
pop
mov
sbb
fstpl
jno
pop
mov
jae
mov
jno
faddl
mov
lods
pop
dec
icebp
jns
lock
push
sbb
pop
cmovno
shll
scas
mov
rcrl
scas
cmpsl
xor
ss
ficoms
js
int3
fsubrp
fsubrl
in
dec
or
cld
lcall
and
shrb
dec
cmp
cld
lretw
clc
pop
in
mov
xchg
inc
pusha
adc
test
out
arpl
sbb
popa
mov
mov
jmp
mov
push
or
mov
ret
and
sub
fsubrl
adc
inc
pop
sti
inc
mov
pop
jp
loope
jle
cmpsb
and
pop
bnd
push
lock
out
std
shlb
pop
fstpt
rorb
jl
xchg
lret
test
fs
push
ja
jae
xor
psadbw
das
xchg
push
and
int3
push
movsb
push
push
cmc
clc
sbb
pushf
add
cwtl
pop
mov
sub
dec
mov
aad
cmp
jae
in
jg
outsb
sahf
hlt
rclb
cli
sahf
std
std
mov
mov
jg
in
sti
fsubrs
mov
fwait
dec
aad
push
and
lods
ljmp
xchg
sbb
pop
dec
lcall
stos
push
cmp
mov
rcll
aad
dec
repz
pop
nop
sub
pop
shr
cmp
enter
dec
movsl
shlb
add
enter
xor
lret
mov
or
dec
into
inc
inc
ret
jecxz
mov
cs
or
adc
call
mov
adc
lahf
xor
leave
jmp
mov
dec
cmp
aaa
xchg
enter
cmpsl
imulb
jns
insb
sub
loop
sbb
stos
js
ret
popf
mov
fsubl
jle
pop
cmp
jecxz
stc
sub
inc
cmp
ret
roll
mov
scas
jns
push
outsb
push
cmp
add
cli
jbe
push
nop
cmpsb
and
or
and
or
shrl
and
sahf
lods
dec
outsb
lahf
cld
and
sub
jp
push
aaa
orl
xchg
rcrb
sub
lods
cwtl
scas
shrl
repnz
in
pop
jnp
js
pop
push
pop
and
add
jmp
mov
aaa
shll
aad
pop
repz
inc
imul
pop
test
roll
jns
or
test
mov
icebp
sbbl
arpl
push
leave
fld
or
insl
add
and
inc
aad
inc
mov
leave
sub
cltd
mov
sti
and
sti
adcb
aam
mov
sbb
subb
jae
add
mov
lods
lret
cmpsl
mov
outsl
mov
add
push
dec
jle
imull
inc
push
rorl
out
dec
daa
enter
push
jp
je
sbb
test
dec
aas
fcoms
test
sub
mov
sarb
xchg
shrl
add
xchg
movsl
mov
xrelease
mov
daa
mov
jae
adc
fwait
pop
lds
push
cwtl
jge
xchg
pop
cmp
lock
mov
adc
ret
arpl
aam
push
insb
dec
dec
jo
in
cmp
test
ljmp
mov
mov
loopne
sub
xor
cld
pop
das
adc
and
mov
cs
dec
xchg
mov
or
add
jnp
test
call
rcr
fwait
add
cmp
leave
unpckhps
and
xor
into
ja
gs
ja
pop
inc
call
xchg
inc
shrb
add
dec
addr16
sub
clc
jge
das
lods
xchg
or
sar
pop
sbb
sub
cli
inc
fisubs
lods
in
push
mov
sbb
or
call
mov
mov
test
je
ficomps
movsb
inc
sbbb
and
inc
gs
inc
out
push
mov
xchg
inc
popf
push
out
adc
jl
sarl
cwtl
push
or
cmp
fwait
mov
popa
popf
or
xrelease
leave
stos
push
outsl
addr16
in
out
inc
fdivs
inc
out
push
add
fwait
or
or
sbb
loope
jno
jge
aad
rcr
lods
lahf
push
dec
and
lcall
ljmp
mov
sbbb
sar
repz
sub
iret
mov
stos
jo
cmp
outsb
cmpsl
xchg
mov
fs
orb
add
cmc
adc
ja
xor
shll
or
xor
cltd
int3
xchg
pop
fiaddl
lahf
mov
leave
xchg
mov
push
pop
sbb
add
mov
fs
fnstcw
adc
push
jecxz
enter
shll
cmpsl
es
inc
fisttpl
and
adc
pmulhw
int
adcl
cltd
mov
loope
cmp
in
out
aaa
test
sub
scas
pop
loopne
add
jmp
fisttps
xor
nop
ds
cmp
cmp
scas
cvttps2pi
gs
dec
dec
jl
rorl
hlt
jnp
and
loop
testb
scas
mov
dec
scas
and
scas
mov
int
cltd
ja
push
and
push
repz
jo
aas
push
rcrb
lret
aam
jmp
mov
test
cmp
ret
adc
test
lea
stc
jno
mov
adc
and
fldenv
aam
and
sahf
pushf
ja
inc
mov
xor
sub
sbb
push
jl
push
lret
aas
add
adc
xchg
mov
xchg
xor
xorl
mov
adc
cmc
xchg
xor
sub
aad
ss
mov
fmull
jecxz
das
and
insb
lods
xor
mov
sub
in
fwait
daa
fwait
push
ret
outsl
into
sbb
not
popf
inc
mov
dec
test
rolb
addr16
cwtl
sbb
testb
xor
arpl
mov
sahf
cmp
cmp
lcall
stos
popa
outsl
nop
popa
out
loop
inc
arpl
pop
dec
sbb
inc
add
push
sub
outsl
int3
divb
cmc
mov
mov
inc
push
pop
aas
push
lcall
adc
push
push
push
mov
ret
jae
pop
ficoml
fdivl
ds
dec
stos
pop
push
lret
add
xchg
push
mov
pop
enter
xchg
aam
push
out
fbstp
mov
nop
jl
pop
pop
inc
pusha
in
push
stos
jns
add
push
jl
add
lahf
inc
lods
push
aas
lock
cli
mov
ffree
dec
and
pop
ja
idivb
dec
sarb
rorb
xchg
or
aam
or
inc
mov
or
sarl
or
xchg
xor
xor
xchg
daa
outsb
adc
or
fwait
push
sub
push
push
xor
xlat
movsb
or
inc
jge
lret
into
push
ljmp
shlb
scas
sub
ss
into
mov
js
call
jo
cmp
mov
and
cld
sub
adc
and
and
roll
test
cltd
hlt
ror
loope
push
shlb
out
mov
lock
mov
es
daa
mov
dec
mov
leave
sub
sbb
std
pop
xor
getsec
shl
pop
jmp
or
mov
mov
fiaddl
nop
nop
popl
cmp
mov
xchg
cmpsb
call
enter
xchg
test
inc
out
pop
int
flds
cmp
jo
mov
pop
cmp
insl
stos
push
jbe
xor
adc
cli
out
outsb
sbb
jmp
sub
loope
sbb
fsub
jl
leave
mov
adc
dec
dec
xor
pop
adc
outsl
mov
movsl
or
aam
cmp
loop
sarl
fisttpl
dec
xchg
jbe
cmpb
adc
or
mov
jae
add
movsb
std
push
call
lods
mov
xchg
vphaddwq
jo
adc
ss
movsb
push
pop
and
fwait
cmpsl
icebp
jno
mov
ss
push
xchg
push
jo
movd
cwtl
pop
adc
ret
aas
mov
adc
cltd
test
fwait
and
cmp
push
inc
jnp
cli
inc
bound
cmp
fxch
add
fistpl
mov
xchg
outsl
mov
insb
cmp
adc
xchg
mov
test
iret
lahf
mov
lea
and
pop
pop
mov
sbb
xchg
adc
lret
nop
inc
push
lock
cs
and
psrld
dec
out
out
fst
movsl
push
pop
mov
enter
insb
jns
jmp
lret
cmp
sbb
sahf
cmp
fstpt
sarb
mov
leave
or
mov
dec
xchg
mov
lea
in
xor
int3
cmp
cmpsb
test
mov
add
arpl
sub
call
mov
jle
inc
xchg
sbb
push
pop
sub
xor
scas
nop
enter
test
mov
adc
cmp
inc
leave
repnz
and
lret
cmp
pop
mulb
into
ret
call
bnd
cmp
xchg
in
dec
jmp
mov
subl
leave
mov
sub
xchg
lods
sahf
scas
xchg
or
mov
das
pop
in
popa
mov
sub
cmp
cltd
rol
out
push
cs
imulb
pop
mov
int3
outsb
xchg
jg
repz
mov
or
pop
jb,pn
pusha
and
jns
ds
mov
loopne
add
xchg
cwtl
dec
mov
push
sub
cwtl
decl
sbb
and
ljmp
jp
mov
iret
clc
nop
loope
sub
dec
jmp
adc
es
mov
add
ja
fistps
ret
addr16
sub
mov
lcall
sbb
sub
fnstenv
xor
mov
add
out
test
sbb
inc
and
lds
or
ja
push
add
ss
outsl
push
mov
stos
or
mov
sbb
push
xchg
les
arpl
mov
or
mov
sub
clc
mov
clc
adc
add
rcrl
xchg
mov
lea
js
and
int
sarb
outsb
stc
pop
jl
and
mov
test
dec
adc
clc
add
repnz
xorl
loopne
stos
test
in
dec
cs
push
cltd
jb
xchg
cmp
push
jo
cmp
push
lahf
ret
nop
scas
jae
aam
push
sub
add
stos
addr16
rcrb
cmp
adc
cli
sarb
pop
les
sbb
cwtl
adc
cs
testb
clc
or
ret
mov
lock
lcall
popa
or
jns
cmpsb
in
les
in
int
sbb
mov
add
stc
dec
add
mov
inc
dec
es
clc
icebp
sub
add
in
bound
pop
add
shl
cs
pop
push
in
xchg
mov
sbb
imul
rorb
shrl
push
pop
in
mov
loop
aaa
loope
gs
sahf
int
xor
cwtl
rcll
lret
add
addb
dec
ljmp
dec
lds
mov
sub
mov
rcrb
pop
mov
xlat
jns
popa
or
jmp
iret
cmp
sarb
adc
and
adc
jge
movsb
popa
test
stc
push
sbb
inc
mov
mov
fstps
lahf
loope
pop
xor
movsb
std
sub
fmull
test
dec
cld
xchg
sbb
xchg
js
and
repnz
push
jb
jne
mov
das
adc
xor
push
call
pushf
pop
in
mov
dec
add
mov
jns
int
xlat
pop
dec
mov
jo
mov
adc
gs
out
ljmp
inc
cli
mov
into
pop
adc
lea
cwtl
es
mov
sti
data16
shll
mov
mov
aaa
addl
lods
dec
sub
xlat
pop
mov
add
dec
push
mull
movsl
or
js
jl
dec
mov
popa
cld
mov
fsubrl
jmp
ljmp
std
aas
xchg
popf
mov
xor
push
inc
adc
fisttpll
pop
fs
inc
loop
jge
cli
inc
loopne
je
shll
lods
pop
xor
jmp
shrl
popl
dec
push
cmp
test
inc
mulb
lret
or
mov
cltd
lcall
cmp
stc
movsb
sarb
test
mov
add
pop
or
stos
aaa
cmp
fisttps
ret
negb
push
movsl
xor
divb
push
or
xchg
loope
test
loopne
adc
and
xchg
fdivs
dec
clc
pop
lds
push
jle
push
sbb
fsubl
fs
pop
or
push
rcrl
mov
scas
push
scas
fsubs
ret
xor
add
mov
mov
idivb
mov
bswap
outsb
scas
das
cmp
pop
inc
es
popa
imul
stos
push
test
dec
adc
scas
push
mov
xchg
xchg
inc
bound
std
mov
mov
jns
test
dec
subb
das
nop
mov
xor
pop
scas
stos
out
inc
or
xor
inc
dec
mov
xchg
pop
fstps
les
or
dec
les
cld
jmp
mov
mov
pop
addl
shlb
das
int3
divb
iret
or
out
jo
jb
sbb
repz
xchg
mov
mov
push
ljmp
mov
movsl
add
push
rolb
popf
in
in
or
scas
pop
test
push
pop
jns
lret
sub
jp
pop
or
in
mov
push
mov
sbb
and
mov
xchg
bound
cmp
dec
mov
mov
add
dec
xchg
or
scas
xor
gs
and
inc
pushf
xchg
mov
xchg
mov
pop
sarb
mov
lret
lret
dec
arpl
pop
xlat
out
rolb
or
cld
pop
jg
mov
push
jne
nop
aaa
adc
ret
adc
jp
scas
pop
push
mov
shlb
mov
mov
out
ds
repz
and
mov
aad
dec
subb
push
jbe
pop
jo
cmpsb
jg
mov
cli
je
repnz
sahf
mov
mov
scas
sbb
cmp
adc
and
out
mov
loopne
add
ficomps
mov
in
cmpsb
mov
les
mov
sahf
fs
xchg
fucom
mov
pop
rcll
sbb
dec
xor
jno
mulps
clc
xchg
and
rol
or
mov
add
shll
popa
dec
sbb
sbb
pop
jmp
add
aam
clc
jnp
ficoms
test
dec
or
or
or
out
loop
pop
dec
int
sub
cmp
push
push
pop
and
clc
pop
aam
gs
fwait
lret
mov
ret
leave
xor
repnz
in
test
test
stos
pusha
rorb
add
dec
adc
jp
push
int3
pop
popf
jnp,pt
mov
jae
frstor
andl
bound
and
and
jmp
mov
sti
shlb
add
mov
pop
push
movsb
incb
stos
pop
lods
dec
js
or
xchg
rorl
or
adc
imul
mov
stos
fs
cltd
mov
xor
test
sahf
jno
inc
pop
repz
jo
pop
insb
xlat
lret
inc
inc
adc
popa
sbb
xchg
inc
fldenv
mov
push
mov
mov
cld
adc
test
inc
arpl
out
add
nop
pop
sbb
int3
insb
and
jo
and
loopne
or
lahf
cmp
aam
cwtl
or
lock
sbbl
movsl
pop
loop
shl
insl
mov
dec
jbe
xchg
aas
push
cwtl
push
sbb
and
xlat
mov
fistpll
sbb
jl
inc
std
cmpsl
jl
cmpsl
xor
cmpsl
int
seto
les
jle
fs
test
popa
addl
mov
push
fs
adcb
lock
pop
pop
add
test
push
mov
dec
loopne
ret
xor
or
dec
clc
repz
pop
pop
icebp
aam
or
out
movsl
push
xchg
push
inc
adc
push
fsts
xor
sub
ret
xorl
call
int
pop
int
xchg
mov
mov
aam
inc
ljmp
jnp
mov
or
jno
or
push
es
movl
fcomps
adc
scas
repz
push
sub
jmp
decb
mov
cmpsl
mov
push
dec
je
jnp
mov
pusha
fwait
sbb
dec
clc
int3
stos
and
gs
ds
fists
minps
aam
push
add
mov
pusha
sub
popa
ret
jo
pop
out
negb
add
xchg
dec
sarl
scas
dec
sbb
cmpsl
pop
out
loop
cmpsb
out
mov
jg
pushf
or
jmp
push
jmp
or
jecxz
or
push
loopne
or
data16
inc
popa
imul
and
or
test
mov
and
pop
dec
bound
sub
shl
call
fcmovnu
cmpsb
inc
cs
das
and
add
mov
cmp
lcall
mov
fsubrl
and
pop
movsb
insb
lcall
pop
mov
je
xlat
in
adc
mov
push
adc
xor
popf
jb
push
mov
pushf
push
scas
out
addr16
or
pop
mov
jns
dec
movsb
out
cmp
jo
js
add
push
add
sub
adc
jg
ja
and
dec
dec
jae
lods
sub
test
jge
jp
fidivl
pop
dec
inc
in
pop
jne
xchg
scas
inc
sub
inc
call
mov
ss
sti
xchg
push
test
inc
shll
push
or
ret
sbb
loope
int3
pop
or
mov
sub
les
cmpsl
pop
pop
cmp
xchg
gs
mov
aas
and
mov
popa
xchg
mov
fists
push
cs
repnz
mov
push
imul
push
push
icebp
xchg
xor
xchg
push
out
or
mov
fisttpll
addb
scas
pop
mov
pop
jle
add
mov
idivb
jo
aas
push
pushf
imul
inc
in
pop
scas
inc
or
lods
mov
mov
sbb
out
je
in
das
movsb
adc
push
pop
gs
xchg
out
sti
iret
mov
sbb
jb
dec
stos
xchg
imul
aad
sarb
sbb
jbe
add
es
cmp
dec
dec
add
and
jne
push
sbbb
fsts
or
jl
rcr
movl
push
ds
push
call
push
loopne
iret
out
pop
add
lods
das
xchg
sub
inc
pop
mov
icebp
fwait
arpl
rclb
dec
aaa
gs
push
pand
das
adc
jge
std
ror
xor
sar
ds
inc
arpl
jnp
dec
bound
loop
incl
mov
ficompl
and
mov
out
sahf
int3
sub
and
pop
sbbb
stc
push
xchg
and
lods
mov
sub
call
inc
outsl
cmc
adc
xchg
mov
cmp
aam
daa
lea
xchg
inc
test
insl
sub
insl
loope
sbb
mov
mov
inc
out
add
test
je
add
into
mov
dec
fistpl
arpl
cmp
test
adc
aas
jno
push
stos
cltd
xor
ret
push
dec
push
cs
cli
sarl
push
mov
dec
push
inc
pop
and
cmpsl
xchg
pop
xchg
mov
xchg
out
or
jnp
adc
xor
jl
sti
xor
xor
mov
mov
xor
test
pop
into
je
cmc
mov
dec
xchg
mov
sub
or
fiadds
jle
es
dec
int
inc
jno
mov
push
test
jp
push
sub
enter
cld
xor
mov
orl
decb
loope
popa
icebp
jle
push
cwtl
and
fdivl
or
push
and
jnp
imul
and
dec
push
mov
mov
add
fneni(8087
gs
adc
in
loop
test
adc
sbb
add
and
cwtl
stos
or
inc
mov
mov
stc
nop
lret
or
xchg
jb
xor
loop
mov
ret
jmp
fdivrp
hlt
mov
pop
adc
adc
xor
lahf
and
ficoms
add
iret
pop
fidivs
jg
fiadds
xor
add
jb
fwait
mov
or
add
push
js
dec
push
push
mov
jmp
push
jb
push
popf
cmpsl
loop
rcll
add
dec
push
fcmovne
leave
cmp
aam
or
lcall
mov
or
mov
stos
sub
inc
xor
negl
sbb
push
adcw
scas
xor
leave
rol
imul
int
push
ja
jp
icebp
jns
add
jno
aam
cld
adc
mov
lods
or
dec
sarb
and
cmc
pop
dec
movsl
mov
push
jae
ret
pop
or
mov
push
rcl
add
xchg
sbb
mov
add
test
adcb
jns
fisttpl
insl
xchg
xor
daa
or
xor
xchg
cld
pusha
pop
push
mov
cmp
imul
inc
sbbl
add
es
or
fmuls
adc
cmp
mov
sbb
mov
test
dec
popf
mov
iret
jno
fcompl
rorl
inc
mov
repz
xor
add
jmp
fldt
enter
test
xchg
mov
testb
icebp
and
mov
push
pop
and
adc
rorb
push
lds
xor
movsb
aam
enter
mov
mov
push
pop
int
inc
aam
idivl
dec
mov
leave
sarb
sbb
stos
stc
jmp
daa
jb
cmp
dec
pop
xchg
imul
icebp
xchg
jge
push
sbb
addr16
dec
jo
xchg
pop
lcall
jns
idivl
repz
imul
mov
inc
fs
push
jb
mov
mov
fwait
or
or
int
cmpsb
push
sub
out
cwtl
adc
push
or
push
dec
mov
and
iret
pushf
mov
mov
cwtl
shll
xor
cli
ds
pop
dec
mov
lret
lock
adc
fistps
sarl
outsb
js
sbb
mov
fnstcw
fwait
xchg
mov
scas
xor
and
fcom
loope
push
xor
lock
jno
inc
rclb
mov
xlat
xchg
xchg
lret
stos
mov
rcl
cld
dec
and
xchg
mov
push
cltd
mov
inc
lods
inc
dec
bound
jl
push
adc
xor
mov
cvtps2pd
push
sbb
out
or
dec
das
and
mov
dec
in
dec
and
aas
mov
test
cmp
jg
pop
cwtl
out
test
mov
subb
pop
sbb
adc
into
sub
and
xchg
sub
cmp
xchg
mov
ss
mov
stos
and
lret
mov
cmp
popf
out
or
xchg
out
mov
arpl
sbb
lahf
push
sbb
mov
nop
cli
in
dec
inc
clc
push
push
sbbb
mov
push
nop
test
test
jp
or
int3
adc
repnz
push
shrb
enter
lahf
sbb
and
mov
loop
lcall
adc
or
jl
andl
stos
and
mov
or
pop
in
lods
pop
arpl
xchg
mov
rcrb
test
add
xor
xchg
push
cmp
xchg
mov
or
imul
cmpsb
lea
sbb
call
mov
xor
push
ds
push
test
jbe
cmpb
notl
pop
push
fnsave
push
cmp
sub
cmp
nopl
ja
adc
xchg
or
jo
jge
xor
subl
fistpl
loope
and
aam
cmp
addl
mov
mov
jp
sbb
fcmovne
js
sbb
loop
aas
popa
imul
jle
push
dec
xchg
scas
ffreep
repnz
inc
lea
xchg
mov
icebp
repnz
pushf
test
sub
je
adc
ljmp
cmp
loop
xor
dec
inc
adcb
or
in
inc
cmpsb
pop
sub
mov
test
std
jnp
push
cmc
enter
lcall
out
push
sbb
mov
and
sub
adc
shll
xchg
adc
popa
lock
fcmovu
test
ret
jne
arpl
sbb
jno
jp
sub
sbb
sti
pushf
sbbl
jae
int
inc
fisubs
outsb
mov
cld
in
nop
and
mov
inc
lods
xor
ja
xor
jbe
pop
cmpsl
xlat
xchg
inc
pusha
dec
push
int
add
inc
mov
adc
sar
cmpsl
cmp
nop
jno
sbb
mov
mov
or
push
cmp
push
repnz
aaa
xchg
dec
xor
icebp
jmp
movsb
cwtl
push
and
add
add
fstpt
sbb
dec
or
mov
push
mov
shlb
call
std
cli
cmc
shlb
cmp
shlb
xchg
gs
out
mov
xlat
bound
icebp
lock
add
fwait
mov
les
adc
sysexit
push
sarl
inc
xchg
mov
adc
imul
cli
stc
mov
pop
or
out
lahf
mull
inc
cld
fidivrl
pop
and
popf
leave
arpl
pop
fs
cmp
mov
repnz
aam
xor
xor
lcall
mov
dec
push
hlt
pop
std
pop
ret
out
shr
and
cmpsl
add
jge
pop
cmpsl
fiadds
in
negb
leave
pushw
and
aas
popa
mov
mov
dec
int3
xchg
inc
push
aad
mov
in
mov
inc
std
mov
jne
std
test
hlt
add
dec
and
loop
mov
push
filds
lods
xlat
dec
into
push
dec
inc
push
inc
mov
fbld
mov
sti
inc
xchg
pop
aad
mov
daa
inc
sub
cmp
and
stos
push
shll
mov
xor
repz
fmull
das
xchg
not
out
add
pop
push
ljmp
mov
sbbb
repnz
mov
push
call
adc
les
cltd
nop
fmull
push
add
or
inc
lret
inc
add
dec
adcl
or
or
loopne
xor
mov
mov
lea
lock
pop
enter
imul
cs
fs
inc
sarl
lods
dec
lret
dec
mov
test
in
mov
dec
mov
scas
xchg
sub
divb
arpl
popa
ret
jl
hlt
cltd
repz
int3
mov
movl
stc
push
xor
leave
mov
loop
shrl
xor
mov
mov
je
ss
js
mov
pop
sbb
xor
loopne
jnp
les
adc
cltd
jecxz
push
inc
jmp
aam
out
sbb
scas
inc
ljmp
pop
adc
inc
cwtl
lock
push
notb
add
out
arpl
mov
inc
sub
out
mov
adc
mov
mov
addr16
mov
out
adc
lea
xor
arpl
sub
lahf
or
in
das
pop
push
push
jecxz
xor
ss
repnz
jmp
jmp
cs
and
mov
and
add
or
mov
inc
dec
dec
push
loopne
and
cs
out
lcall
pop
dec
cmpsb
jo
lret
xchg
xor
mov
push
xor
pop
mov
or
and
hlt
stc
stc
dec
and
mov
shr
gs
inc
xchg
pop
inc
jno
scas
adc
sarb
adc
push
xchg
aaa
sahf
or
push
es
out
cmp
sbb
push
add
shl
outsl
aad
ljmp
dec
subb
lcall
mov
mov
sub
popa
cmpsb
sub
dec
add
jg
popf
fsubp
jl
shrl
cld
sub
xchg
fldl
xlat
dec
sbb
pop
outsl
sbb
xchg
xor
sbb
xchg
out
push
idiv
std
dec
adc
sbb
push
into
into
lods
sbb
pushf
int
sub
lret
mov
jge
shlb
dec
cltd
xor
ss
sbbl
mov
pop
stos
aam
dec
mov
cmp
pop
inc
in
clc
pop
out
mov
jl
pop
cs
pusha
lret
or
mov
fdivs
or
jno
loop
pop
mov
test
sahf
arpl
or
mov
fwait
stc
nop
dec
or
pushf
mov
sub
cmp
sub
push
fnstsw
test
les
stos
sub
cmp
scas
pop
in
sbb
add
fnstsw
fisttps
inc
sahf
dec
lods
xchg
dec
add
add
and
and
cmp
sub
sub
inc
ret
stos
or
sbb
jo
pop
repz
pop
js
add
imul
outsb
ret
bound
mov
inc
cmpsb
lods
xor
mov
add
add
mulb
mov
outsl
xlat
outsb
inc
cmpsb
mov
adc
mov
bound
bound
cwtl
in
lcall
add
fstpt
xchg
cwtl
inc
dec
jae
dec
xchg
int
cli
icebp
lret
mov
inc
mov
add
pop
data16
sti
push
pop
inc
dec
into
push
or
mov
icebp
popf
int3
push
int3
pop
xchg
mov
mov
pop
push
lds
and
aad
sbb
subl
sahf
push
test
imulb
inc
cs
xor
ret
xor
fisubs
shlb
inc
mov
out
test
into
lret
ret
xor
cmp
cmp
aaa
cwtl
sti
loopne
mov
or
cmc
mov
mov
jg
or
jl
cli
pop
out
or
mov
test
xor
pusha
xlat
and
les
jmp
sahf
cmp
lcall
cmc
or
cld
pop
into
and
mov
std
imulb
sub
xor
cmp
pusha
push
sahf
bsf
fs
push
sbb
out
inc
adc
sbb
add
pop
fwait
cld
fistl
jmp
add
aam
sub
inc
inc
stc
fldpi
fucom
sub
dec
pop
push
cld
ds
or
add
jmp
pop
inc
mov
mov
pushf
and
sbb
mov
fsubp
mov
mov
adc
mov
sahf
cs
and
or
or
les
fwait
in
cmp
inc
rcrb
pop
test
scas
das
movsb
jge
pop
and
xor
cmp
imulb
xor
inc
movsb
movsl
jbe
lret
leave
or
xchg
test
mov
xorl
cmp
mov
mov
test
pushf
xchg
adc
cmp
inc
shrl
sahf
or
push
jns
jns
jmp
fnstcw
inc
jno
leave
and
cmp
mov
sub
or
fwait
lcall
mov
fidivrs
add
jb
loope
movsl
xchg
push
pop
adc
mov
dec
adc
imul
xlat
adc
xchg
aaa
or
pusha
js
repnz
addr16
aam
fxch
dec
fcoms
imulb
mov
adc
cmp
daa
loop
lret
and
dec
sbb
negl
cmpsl
adc
stos
jp
pop
pop
or
dec
cmpsl
sti
cmp
sub
ret
sbb
jbe
cld
mov
push
cli
leave
ljmp
leave
push
enter
jns
push
shrb
ror
xor
test
sub
gs
cmp
fwait
mov
aam
stos
dec
repz
xor
cltd
lret
or
or
inc
mov
and
mov
ficompl
jbe
sub
repnz
mov
addl
sbb
mov
inc
cmpsl
lret
cmpsb
and
mov
push
jb
inc
ficomps
adc
xchg
test
popf
fs
sub
pusha
clc
int3
sbb
or
push
adc
arpl
lods
sarb
xor
inc
mov
mov
xchg
add
dec
xchg
pushf
and
sbb
mov
and
mov
insb
mov
ljmp
fbstp
outsl
outsl
xchg
in
incl
jg
jg
inc
dec
xchg
sbb
test
cwtl
ljmp
dec
in
mov
xor
add
and
lcall
test
cmp
adc
clc
xchg
adc
inc
jge
xchg
mov
std
xorl
xchg
mov
call
xor
mov
bound
mov
lcall
stc
bound
push
jne
imul
xlat
ret
movsl
roll
lret
nop
lahf
leave
add
cs
sbb
repz
aas
sbbl
pusha
jne
enter
sbb
xor
sbb
pop
inc
xlat
push
mov
aas
xor
addr16
dec
adc
stos
out
stc
add
mov
cmp
mov
icebp
mov
in
leave
xor
push
int
imul
mov
xlat
stos
pop
iret
jns
adc
jo
clc
pop
push
call
lret
fs
shlb
pop
xchg
bnd
and
mov
jecxz
add
mov
loop
negl
mov
push
push
add
into
cmp
cltd
scas
fistl
jmp
mov
ffreep
mov
in
mov
mov
je
jl
test
scas
adc
cltd
scas
sahf
pop
test
incb
add
and
or
inc
xor
jne
xor
sub
mov
push
mov
fs
fs
das
int3
mov
aam
in
cli
ljmp
es
test
js
push
jle
pop
xchg
push
and
xor
loop
rcrl
cmp
sub
inc
mov
gs
es
incb
int
pop
mov
mov
je
pop
ret
out
lret
push
mov
fmuls
or
xchg
inc
rorb
nop
adc
xchg
sbb
lea
rcll
ds
cmp
jno
movsb
lea
xor
les
cmpsb
or
push
lea
xor
pop
lea
stos
cmpsl
dec
ret
mov
inc
dec
negb
testb
push
ds
mov
mov
mov
out
repz
xchg
shl
and
mov
ljmp
inc
xchg
dec
mov
stc
jb
pop
lret
sub
push
add
mov
repz
out
aas
js
xchg
push
stos
leave
ret
ljmp
leave
pop
sar
shrl
bound
pushf
push
push
adc
popa
xchg
jp
dec
and
je
fbld
out
mov
shlb
test
adc
cmpsb
repz
aas
adc
inc
sbb
iret
jns
in
les
nop
ljmp
pop
scas
dec
fwait
mov
or
arpl
xchg
jge
lahf
and
sti
sbb
in
orl
dec
xchg
mov
add
jp
cmp
mov
roll
dec
test
mov
mov
mov
ret
shll
sbb
lods
mov
sbb
pop
daa
pop
sarb
out
xchg
cmp
aam
fdiv
xchg
or
lea
cmpsl
pusha
test
mov
cmc
int
insl
fnstcw
ljmp
push
sub
js
icebp
xor
mov
into
mov
cmp
int
push
add
das
test
enter
xchg
push
add
mov
mov
or
sbb
push
or
jmp
cmp
fnstenv
loopne
sbb
jle
fisubl
loopne
and
pop
pop
cmp
cmpsl
imul
icebp
xchg
bound
sub
pop
in
fwait
xor
insl
pushf
aam
shll
push
ret
daa
lds
mov
adc
jb
cmp
lret
pop
xchg
mov
mov
in
push
lcall
adc
fidivrl
aam
mov
sub
push
fcmovbe
gs
mov
out
adc
adc
inc
mov
decl
fsts
mov
push
stos
ds
fcoml
addr16
leave
pop
dec
lea
gs
adc
jo
in
jb
sub
fcomp
mov
lds
dec
cmp
mov
xchg
xor
or
jle
movsl
jmp
test
dec
fisubrl
push
out
pop
fisubl
fcmovb
mov
inc
ret
sarb
cs
inc
insb
mov
and
mov
push
xchg
in
repz
xchg
jbe
xor
js
add
mov
xor
mov
xor
push
ret
push
test
inc
loopne
jae
mov
outsb
bound
sbb
push
lret
sub
jno
mov
insb
ljmp
cmc
mov
fst
bound
xchg
mov
xlat
add
cli
stos
sub
push
test
or
test
mov
cmc
iret
call
popf
out
out
dec
xchg
xor
mov
data16
cs
push
sbb
adcb
icebp
out
sbb
inc
push
mov
fwait
adc
jg
push
loopne
dec
mov
pop
shrb
sbb
and
repz
push
cmp
repz
xchg
add
lret
inc
lcall
addr16
inc
gs
lcall
jb
ret
pusha
andb
iret
xor
test
and
daa
in
mov
xlat
sahf
adc
mov
pop
push
adc
pop
mov
and
imull
xor
cli
mov
cld
dec
out
call
or
imul
decb
xor
mov
sub
add
call
loope
inc
in
popl
sbb
or
pusha
sbb
inc
adcb
xchg
and
sub
cmp
lods
mov
lret
pop
pusha
push
mov
or
adc
sub
std
ljmp
popf
int
xor
pop
and
mov
dec
lods
mov
and
out
mov
dec
add
adc
dec
pop
pop
sbb
mov
cltd
jmp
sub
addb
adc
inc
lcall
lock
sti
fsubs
je
sub
popf
popa
xchg
or
push
subl
mov
std
pop
pop
xor
push
push
std
sbb
dec
push
sbb
flds
leave
mov
cmp
lods
scas
loope
jp
fdiv
rcrb
inc
or
cld
add
jo
and
jno
jne
orb
pop
cmpl
push
pusha
sub
xor
sahf
cmp
movsb
outsl
push
adc
fs
adc
cwtl
cmpsl
pop
loop
adc
icebp
es
testb
and
push
pusha
popf
lahf
stos
popa
pop
stos
int
sub
bound
xchg
sbb
jo
push
out
or
shrb
jmp
lods
xor
or
add
add
adc
in
fisubl
clc
stos
popf
pop
adc
mov
sbb
adc
fs
adc
cltd
movsb
cmp
mov
sub
shr
dec
pop
mov
loopne
mov
sbbl
adc
int
mov
sbb
std
jl
cwtl
dec
dec
shrb
into
mov
imul
loopne
dec
add
test
call
int
das
sub
out
dec
popf
sub
xor
inc
mov
pop
int
lret
mov
mov
and
pop
in
xor
shll
push
popa
insb
adc
ficoml
sbb
out
nop
loope
dec
push
inc
popa
cmp
jl
jo
xlat
out
sbb
scas
mov
mov
into
jg
std
in
hlt
sbb
sbb
jo,pt
cli
setno
in
cmp
sahf
jno
out
arpl
aas
pop
mull
js
cmc
pop
or
das
mov
aaa
xor
daa
scas
cs
push
mov
inc
mov
pusha
mov
inc
pop
aas
int
or
adc
lea
inc
repnz
dec
in
sbb
push
lds
dec
inc
imul
mov
stos
mov
sbb
inc
xchg
xchg
test
adc
imul
push
je
cld
fmulp
fbld
inc
adc
and
js
popa
sbb
insl
int3
adc
shrl
add
stos
push
mov
pop
sbb
sub
push
mov
shrl
xchg
xor
repnz
loop
imul
xchg
out
pop
xchg
outsb
test
dec
sbb
test
cltd
mov
inc
xorl
jmp
pop
fldenv
sti
pop
xchg
ffreep
inc
xor
outsb
pop
leave
loope
adc
sbb
mov
adcb
sahf
jno
into
sub
jl
dec
jb
or
aad
cmp
sarl
sahf
cmp
lods
fsubrl
imul
push
loopne
and
lock
push
inc
ljmp
cld
pop
call
add
push
jl
jae
nop
das
push
into
test
loop
scas
loopew
aad
inc
pop
lods
cmpsl
or
in
adc
arpl
outsl
xchg
and
add
ret
xlat
dec
pop
out
cmp
in
dec
cmp
sub
sub
popa
out
jbe
gs
cld
jl
into
and
cmp
inc
stos
or
pop
aas
out
xchg
adc
cmp
dec
mov
iret
test
fnsetpm(287
lret
pop
push
je
mov
jbe
mov
inc
push
lea
xor
in
lahf
call
inc
jns
lret
faddl
gs
leavew
mov
sbb
scas
addr16
jno
cmp
ret
push
scas
shlb
pop
pop
test
dec
push
inc
xchg
push
inc
jecxz
fs
jle
pop
imul
test
cltd
in
xor
mov
jno
nop
add
shll
in
push
dec
push
je
sub
pop
jp
scas
xchg
mov
jmp
mov
mov
imul
shrl
mov
jnp
and
cmp
iret
loopw
stos
pop
mov
in
and
push
testl
notb
mov
jle
repz
adc
pop
popa
rorl
or
and
fiaddl
mov
loopne
mov
sub
clc
sbb
aaa
pop
cmp
sbb
test
loopne
jb
sbb
jg
dec
add
push
pop
pop
cmp
mov
mov
adc
addr16
sub
mov
push
or
or
rcrb
aam
jne
lods
test
loop
lea
inc
call
sbb
test
pop
fisubs
inc
loopne
jno
stc
pop
mov
fisubs
sub
call
or
mov
pop
push
imul
xlat
mov
sbb
icebp
and
in
sbb
ss
push
cmc
pop
imul
loop
pop
mov
mov
out
icebp
lods
pop
or
adc
testb
fdivrp
loop
loope
pop
sahf
ja
push
fs
loop
iret
jmp
rcll
pop
dec
pop
outsl
fxch
fstpl
sti
lahf
xchg
mov
fcompl
push
mov
daa
repnz
or
sbbl
ljmp
sub
cld
push
arpl
inc
mov
cwtl
or
das
inc
addb
push
ss
jo
mov
mov
out
or
mov
fisttpl
lcall
mov
or
jge
dec
lods
mov
pop
push
nop
clc
fs
xchg
ljmp
fstl
das
mov
fimuls
arpl
xor
adc
test
xchg
xor
mov
divb
mov
or
pop
xchg
mov
jmp
cwtl
lock
xor
lods
dec
xchg
pop
push
ret
cld
jns
aaa
leave
int3
cli
mov
mov
add
pop
loopne
test
mov
dec
push
lret
jnp
xor
stos
cltd
pop
jb
int3
or
xor
cs
aas
jle
shr
and
aam
int
pushf
or
pop
dec
js
pop
imul
xchg
cmpl
ss
dec
cli
pop
gs
xchg
adc
push
jg
loop
sub
jnp
push
mov
jg
sub
aam
ljmp
fld
xchg
out
into
ss
jmp
enter
jg
pop
call
clc
inc
push
pop
shrb
lods
pop
cld
mov
adc
call
aam
imul
mov
xor
xchg
sbb
shrb
fcoms
pop
call
push
add
insb
ljmp
adc
mov
test
hlt
jle
cmp
loop
test
push
pop
daa
ja
lret
push
pop
fcoml
cli
adc
jbe
sbb
jecxz
mov
fcomi
les
push
andb
dec
cmp
out
pop
mov
jns
insb
xchg
xchg
xor
outsl
imul
mov
mov
cmp
or
pushf
xorl
das
loop
test
jp
stos
ljmp
push
and
adc
xlat
in
mov
lods
cld
and
daa
and
mov
dec
mov
xchg
lret
out
icebp
ret
mov
subl
clc
mov
add
mov
mov
ljmp
mov
mov
mov
xor
jb
arpl
cli
stc
ret
xor
inc
push
lds
outsl
icebp
cs
int3
inc
ret
jo
jmp
pop
mov
nop
fsts
fxch
mov
shll
and
push
cltd
lret
in
aad
xor
or
cmpsb
imul
iret
inc
xor
sti
mov
pusha
xchg
push
mov
daa
cmp
jecxz
fsubr
inc
sbb
sahf
rorb
add
sbb
andl
jl
in
rclb
sti
sbb
fdiv
sub
cmp
cmp
pop
in
cmp
inc
push
pop
daa
jae
cmpsb
inc
sbb
xchg
and
cmp
arpl
add
sbbl
lret
sub
les
jl
and
lcall
test
pop
inc
add
bound
mov
imul
mov
jbe
ror
sbb
mov
repnz
jp
mov
dec
mov
and
xor
test
aas
lret
movsl
or
mov
pop
push
jbe
lret
pop
adc
cwtl
push
ja
mov
xor
push
xor
add
outsb
or
sub
lods
ljmp
or
imul
cmp
movsb
cltd
add
dec
shll
jns
leave
sbb
mov
pcmpgtd
mov
fs
mov
pop
add
mov
call
pop
out
hlt
adc
adc
pop
xchg
mov
xlat
jl
sub
loopne
lea
dec
or
and
loop
lret
adc
mov
push
imul
js
es
push
loope
cmp
cmp
jmp
mov
cltd
jne
adc
roll
popf
jp
inc
stos
push
out
dec
add
add
pop
lds
mov
pushf
xchg
xor
cmp
pusha
xor
out
sub
push
in
or
sbb
xchg
cs
addr16
jp
cltd
scas
sbb
add
js
mov
mov
push
repnz
hlt
pop
pop
mov
pop
dec
shrb
add
jno
mov
mov
jb
xor
movsl
int3
in
orl
lcall
scas
in
cmp
jbe
sahf
xchg
sti
mov
xchg
xorl
jb
adc
shl
pushl
fisubl
mov
jno
mov
jl
xchg
sbb
mov
je
loopne
sahf
rolb
aad
xor
xor
out
sbbl
add
pushf
adc
rcl
adc
loop
outsl
repnz
dec
test
stc
lods
mov
cmp
je
mov
dec
mov
out
fistps
push
out
fiadds
mov
mov
rcll
push
leave
aas
sub
jecxz
sar
enter
scas
jl
imull
sbb
sub
xlat
lods
and
cmpl
cmc
sbb
lea
sbb
call
repz
fs
cmpsb
jbe
shll
pop
stos
je
cmpsl
mov
mov
sbb
movsb
cmpsb
xchg
pop
xchg
aas
js
and
cltd
rcll
dec
dec
aaa
test
pop
loopne
out
inc
rcll
scas
inc
cmp
mov
lcall
xchg
pusha
out
cli
sbb
loop
dec
dec
rorl
scas
test
mov
das
testl
jne
mov
test
lcall
xchg
ja
jnp
lods
loop
push
push
je
sub
jle
test
xchg
aaa
xor
ds
xor
nop
xor
jmp
pop
ss
adc
jg
movsb
pop
cmpsb
xor
push
push
jbe
sarl
je
inc
add
das
inc
mov
lock
sahf
mov
mov
ja
pop
lds
xchg
data16
subl
cld
cmpsb
jmp
lock
fstps
jnp
mov
imul
movsb
mov
dec
lcall
sub
adc
pop
pop
mov
and
adc
push
inc
loopne
rclb
aam
subb
repz
fistps
lret
les
fcmovbe
shlb
xor
sbb
dec
ss
in
xchg
mov
orl
into
xor
outsb
dec
hlt
mov
mov
cmp
jne
mov
pusha
sti
adc
lret
dec
int
pop
cmc
xchg
fcom
cmc
mov
push
pop
xlat
rcl
mov
shlb
dec
mov
jp
adc
testl
int3
out
mov
add
test
in
mull
push
leave
or
jle
fwait
popa
out
lods
int
push
and
sbb
movsb
mov
mov
lret
push
cmp
call
sbb
xor
add
sub
and
fdivl
add
add
clc
icebp
loop
jp
lcall
fdivl
xchg
jmp
ds
pushf
jecxz
insb
adc
and
lcall
inc
dec
inc
ss
mov
push
adc
outsl
xorl
js
inc
cmp
xor
enter
aaa
inc
addr16
push
ffreep
in
jge
ret
push
mov
mov
sarl
push
imul
and
jge
fimull
jmp
les
push
add
mov
popf
sub
loopne
xlat
js
xchg
test
push
fdivrp
add
rolb
push
push
mov
test
subl
jle
and
cltd
rorb
add
jae
aad
jae
std
mov
mov
sub
scas
lock
dec
popa
jb
sub
inc
das
sbb
fildl
jmp
fnstsw
sbb
and
xchg
mov
icebp
adc
movsl
cmp
mov
jecxz
ljmp
stc
cld
stc
gs
push
pushf
sbb
fsub
sub
xchg
pop
pop
fimull
sahf
ret
out
fiaddl
inc
mov
sbb
xchg
mov
jecxz
push
arpl
ret
test
rorl
mov
push
loop
stos
xor
push
insl
sub
cmp
xchg
dec
xchg
mov
jmp
test
loope
cmpb
and
jg
scas
sbb
cmpsb
adcl
mov
cltd
ss
push
mov
xchg
mov
bound
push
fdivrs
dec
into
cmpsl
sub
mov
mov
bound
mov
jno
inc
loope
ljmp
mov
mov
enter
pop
stos
outsb
adc
mov
xchg
enter
xlat
inc
lock
repnz
es
stos
push
mov
inc
repnz
sub
cmp
jne
movsl
mov
xor
cli
aas
push
stos
fnstcw
hlt
fidivrs
mov
test
je
cli
movsl
dec
mov
add
loope
pusha
xchg
rcl
rcrl
mov
mov
mov
lea
mov
xor
pop
pop
cmp
call
pop
int3
test
cmp
ljmp
cli
leave
inc
lds
loope
arpl
xchg
imul
fsubrl
imul
sti
enter
adc
mov
test
rolb
mov
daa
add
jmp
sbb
enter
aas
or
iret
xlat
scas
xchg
sbb
sbb
out
sbb
dec
cmpsb
mov
jbe
mov
lahf
andb
xchg
jecxz
sbb
sub
mov
mov
sahf
mov
insb
sub
or
insb
sahf
out
shlb
sub
inc
xlat
adc
ret
mov
out
aad
and
pop
dec
movsl
stos
add
daa
mov
lea
inc
mov
in
jne
pop
xchg
inc
mov
stos
hlt
fildl
jae
mov
cmp
push
and
mov
inc
xchg
and
pop
ss
inc
in
push
lea
inc
jle
iret
add
or
nop
xchg
sub
ds
fistl
fiadds
imulb
mov
inc
dec
cmc
outsb
pop
sbbb
ja
cltd
sbb
addr16
repnz
inc
lahf
sbb
js
jle
or
jge
jbe
push
imul
pop
popf
jmp
pop
out
xchg
push
repz
in
push
and
jo
cltd
call
push
cltd
cltd
mov
aad
mov
mov
add
cmpsl
in
insl
int3
loop
cmp
pushf
pop
jnp,pt
pusha
sahf
pusha
xor
pop
push
movsb
push
out
inc
add
loopne
cmpb
dec
pop
xchg
and
outsl
fimuls
mov
sbb
cmpsl
test
test
daa
in
mov
fwait
idivb
mov
adc
inc
and
hlt
je
mov
cli
inc
jge
std
and
mov
and
xchg
jns
mov
mov
push
dec
pop
sub
or
jb
nop
jbe
sub
pop
jecxz
push
cmp
mov
test
and
pop
data16
jmp
xlat
xor
dec
sbb
cmpl
xor
lret
enter
inc
out
pop
push
stc
jbe
sbb
adc
xchg
addr16
or
ss
xlat
add
dec
data16
outsb
xchg
cmpsb
scas
hlt
add
and
adc
mov
push
sub
or
push
inc
outsb
sub
stos
popa
icebp
inc
repnz
leave
out
or
pushf
loope
int
aam
push
insb
lods
xchg
push
mov
in
inc
dec
lret
mov
add
int
movsb
dec
cmp
dec
jne
jnp
insb
pop
stc
xor
in
repz
dec
aas
int
push
mov
repz
scas
inc
pop
sub
nop
mov
hlt
leave
lds
test
into
mov
sbb
mov
outsb
inc
sbb
lds
outsl
mov
scas
repnz
dec
xchg
jbe
sbb
push
test
push
push
ja
inc
ds
aad
ja
clc
js
pop
sub
pop
push
cmovns
clc
enter
stos
push
loope
test
mov
pop
xchg
jmp
and
outsl
fstpt
xchg
mov
orl
fstps
push
data16
jne
insl
mov
xor
xlat
scas
inc
push
and
cmp
negl
outsb
or
pop
fldt
adc
loopne
movsb
mov
xchg
xor
dec
cld
jmp
cmp
mov
mov
cltd
loop
sub
sub
int
lret
inc
pop
cli
mov
aam
or
cwtl
stos
add
sub
xor
call
es
hlt
jp
clc
daa
mov
fnsave
jp
mov
int3
das
lods
movsb
pop
inc
neg
push
scas
lds
cmp
cmpsb
into
arpl
stc
dec
adc
and
stos
in
enter
xchg
push
pop
xor
fwait
lock
clc
push
mov
lret
cmpsb
rolb
push
sbb
fmull
dec
scas
dec
inc
mov
cmpsl
jmp
inc
lods
lret
jecxz
fwait
mov
xchg
repz
add
dec
sub
notb
ja
sub
cmp
std
xchg
inc
stos
jl
fstps
cmp
lods
adc
lods
and
xchg
call
sbb
xor
mov
inc
jp
adc
dec
movsl
fwait
sub
jo
repnz
and
jle
push
mov
cmpsl
push
inc
jne
insl
inc
call
stos
mov
pop
leave
test
popf
pusha
add
pop
in
push
test
and
ror
lods
notb
lds
rolb
fwait
aas
push
jle
adc
mov
or
mov
xor
sub
test
pushf
jbe
xor
lods
jns
mov
insb
mov
push
xchg
adc
cmp
lahf
sbb
pop
ret
decb
jge
pop
icebp
dec
xchg
lret
adc
outsb
mov
fsubr
sub
and
jbe
call
lcall
lods
rcrb
test
ror
push
sub
or
arpl
or
push
fildll
pop
sbb
dec
repz
mov
je
leave
adc
insb
mov
pop
sbb
sbb
cmp
outsb
or
pop
cs
arpl
mov
shr
fstpt
fildl
leave
sub
or
js
sub
xchg
test
mov
sbb
xor
xchg
jo
addl
bound
mov
and
or
outsl
leave
push
sahf
or
sbb
pop
in
notb
sarl
cli
cmp
jae
and
jmp
xchg
xchg
xchg
xchg
mov
jnp
stos
std
xorb
jmp
sub
fld1
rcll
xchg
clc
fisttpl
ss
stc
pop
test
mov
out
dec
xchg
sub
aam
rcr
push
cmp
pop
xlat
push
fwait
shlb
call
test
fs
mov
push
pop
adc
imul
inc
dec
fldt
iret
mov
aad
push
cs
jge
shlb
push
jne
imul
cmpsl
jge
pop
xchg
lret
mov
dec
mov
insl
push
xchg
adc
out
clc
mov
push
inc
test
or
sbb
dec
push
pop
stos
pop
dec
outsb
or
sti
and
xor
add
in
sahf
add
dec
xchg
or
xor
das
cwtl
testl
fimull
jmp
fisubrs
xchg
push
mov
ljmp
in
jge
add
xor
mov
sub
sbb
ljmp
stos
cmp
inc
in
lea
fwait
push
pop
dec
mov
enter
incl
sbb
decl
ljmp
cmp
shrb
scas
jg
inc
and
push
lret
into
inc
inc
data16
nop
and
cmpsl
add
jnp
shll
dec
repz
and
cmp
mov
sub
out
fistps
add
cld
jo
inc
xor
xchg
push
jp
xlat
cltd
stos
fs
xor
stc
outsb
scas
mov
pop
lods
ja
mov
pop
pop
or
ljmp
mov
mov
sti
adc
or
mov
orl
mov
outsb
fdivl
fildll
imul
xchg
pop
dec
icebp
and
in
mov
mov
jmp
in
les
in
scas
insb
js
outsb
scas
sub
push
iret
sti
cmp
mov
mov
jnp
push
adc
cs
aad
jl
mov
and
push
sahf
rcl
sbb
in
fdivp
xor
popaw
mov
xchg
out
aad
jae
icebp
jg
xbegin
fwait
into
aad
sub
and
jmp
cmp
rcrb
jge
push
inc
addr16
sarl
sub
ficomps
lea
movsb
xchg
push
mov
or
fsubp
aas
call
and
or
inc
dec
pop
cmp
scas
dec
mov
jp
jnp
or
fadds
leave
cld
ljmp
lret
mov
or
cmpsl
sahf
repz
push
fst
cmp
in
popf
ret
mov
or
ds
or
cmp
das
ljmp
push
and
dec
cmpsb
bound
stc
mov
popf
pandn
pop
pop
mov
arpl
dec
ja
rol
add
pop
stos
add
add
out
add
add
fcomi
movsb
add
adc
adc
in
sbb
data16
mov
dec
divl
push
add
imul
xchg
mov
and
jns
sti
xor
jbe
dec
push
ja
cs
scas
rcrb
imul
inc
mov
sbb
mov
cmp
or
data16
inc
test
inc
xchg
jno
movsl
push
push
flds
inc
nop
xor
dec
mov
push
inc
popa
mov
mov
es
notb
ss
jbe
imul
push
stc
bound
sub
std
aad
xor
jge
neg
out
jnp
gs
dec
scas
das
std
into
mov
stc
int
push
lods
imul
lahf
dec
sub
sarb
fdivrs
inc
shll
mov
mov
xor
sub
mov
jp
inc
std
cmc
lock
mov
jp
out
test
dec
inc
xor
fs
xor
data16
sar
or
dec
inc
rorb
push
mov
ljmp
xor
mov
lods
sbb
pushl
jno
andl
pop
sbb
lret
jecxz
add
leave
pop
jae
lret
jb
and
in
iret
movsl
adc
mov
ds
or
xchg
popa
pop
bound
add
pop
mov
xor
mov
sub
shlb
cltd
arpl
jmp
mov
mov
bound
out
add
in
shlb
testb
push
dec
sbb
adc
push
loop
shl
imul
nop
cmpsb
ljmp
xor
jnp
fimull
mov
enter
into
clc
leave
pop
clc
cwtl
ds
or
push
inc
lret
add
xchg
gs
fstp
enter
jge
cmp
data16
fbld
repz
pop
mov
fstl
dec
test
ljmp
add
mov
cltd
mov
loope
xor
clc
loopne
xchg
leave
or
in
divl
sbb
xor
test
mov
int
mov
or
jl
pop
dec
dec
pop
aad
enter
mov
mov
sub
nop
xorl
push
addb
dec
je
stos
mov
inc
arpl
jno
xchg
pop
sbb
adc
xchg
sub
push
clc
fwait
jo
push
mov
or
push
add
jbe
cmp
lret
loop
jo
stos
mov
xchg
pop
adc
js
add
sbb
nop
into
lcall
xor
aas
cs
mov
sub
add
insl
fnstenv
bound
addr16
push
in
fisubl
mov
xchg
dec
aam
fisttpl
xchg
insl
xor
sub
and
mov
sbbl
adc
xor
insb
fcomp
loope
sub
mov
lcall
pop
fwait
sub
mov
imul
and
xchg
popf
add
andl
push
ret
inc
insb
and
fdivs
mov
jne
dec
and
sub
cmpsb
or
pop
ss
cli
sub
lret
ds
sbb
pop
sbb
add
jle
lahf
jnp
pop
rorb
lret
jge
mov
adc
mov
test
idivl
bound
fstps
mov
cmpsl
sbb
mov
lods
sbb
jmp
mov
and
push
push
enter
jbe
test
icebp
dec
lahf
adc
stc
jl
cmp
repz
arpl
jnp
add
aad
push
int
test
inc
push
gs
push
inc
pop
xchg
insl
sub
inc
mov
loopne
mov
mov
pop
shr
mov
xlat
out
cmpsb
push
mov
test
pop
sub
mov
jo
sbb
scas
and
mov
mov
xchg
fcomip
icebp
imul
lods
mov
and
jns
mov
mov
xchg
insl
nop
mov
sbb
push
dec
pop
jnp
imul
cmp
and
adc
push
mov
xor
sahf
mov
push
lods
push
cmpsl
stos
inc
fcmove
push
aad
popf
int
mov
test
addr16
cli
pusha
mov
adc
push
mov
jae
dec
hlt
inc
mov
pusha
fwait
inc
mov
int3
xor
out
and
push
xlat
mov
ja
sbb
sub
cld
and
or
and
sub
jno
xchg
bound
xchg
xchg
sarl
jle
lods
mov
int
lods
nop
fwait
idiv
and
xor
pushf
jmp
js
dec
mov
push
sbb
inc
sbb
enter
add
repnz
xor
xchg
xor
cmp
mov
int3
mov
push
and
negl
int3
mov
add
mov
xor
cmp
subl
push
push
outsb
push
lahf
movsl
dec
mov
jbe
or
aaa
subl
mov
inc
xor
jle
sub
cmp
testl
inc
xchg
inc
rclb
shl
adc
xor
mov
push
sub
fimuls
enter
inc
adc
mov
int
fdivrp
mov
sub
lret
jge
data16
imulb
into
scas
pop
imul
cmp
lock
cmp
out
pop
ss
arpl
xchg
cwtl
testb
stos
mov
pop
rcrl
out
mull
xchg
dec
pop
addr16
pop
idiv
adc
sbb
inc
inc
out
push
mov
pushl
arpl
xchg
adc
rcr
lods
shrd
lret
mov
cmp
adc
roll
ljmp
js
stos
pop
rcl
pushf
inc
mov
lret
fldenv
in
aaa
fwait
movsl
ja
test
ret
adc
and
adc
loopne
xchg
fildll
ret
mov
inc
aad
dec
push
and
fisttpll
insl
ret
lea
dec
mov
inc
mov
fs
dec
pop
xchg
fwait
inc
xchg
mov
repnz
clc
sbb
add
add
xor
push
push
jb
movsl
push
jbe
aam
andb
cwtl
jno
inc
inc
sbb
push
mov
inc
dec
fpatan
test
test
xor
out
cli
shlb
pop
adc
rcl
je
mov
dec
pusha
lea
cmp
mov
mov
ja
repnz
xchg
pop
push
stos
push
sbbl
or
sbb
jb
cmc
and
cmp
mov
ret
dec
jmp
push
jge
shrl
lock
pop
call
sbb
mov
mov
pop
xor
adc
cmp
or
into
mov
addr16
sub
enter
in
test
dec
dec
inc
movsb
cmc
jle
decl
sub
cli
pop
sub
pushf
lahf
sti
sbb
scas
push
cmp
sub
lods
stc
push
fldcw
pop
add
cwtl
imulb
mov
les
inc
gs
push
js
fs
stos
xor
push
lcall
push
test
arpl
push
or
lcall
mov
rorb
sti
jg
ja
nop
cltd
add
sbb
jmp
and
stos
dec
cmp
cmpsb
cmp
mov
scas
in
cmp
dec
mov
div
out
inc
push
or
lcall
data16
out
mov
scas
jle
cltd
pop
and
shll
in
pop
in
cltd
std
sub
icebp
push
jno
movsb
cli
xlat
cmp
aaa
xor
int
fldenv
ret
cmp
ret
inc
mov
push
mov
outsl
js
mov
xchg
and
sahf
dec
hlt
adc
mov
sbb
sbb
aas
insb
sub
in
or
loope
xchg
fs
push
mov
pusha
out
xchg
pop
pusha
pop
in
or
cltd
and
adc
jg
xchg
cmovae
inc
sbb
mov
scas
es
popf
pop
xchg
mov
mov
repz
out
in
aad
push
int3
cmp
hlt
mov
xchg
imul
addl
or
or
add
lock
mov
adc
test
xor
cvtps2pi
add
pop
sbb
test
stc
jae
xor
dec
push
push
push
aaa
gs
subb
stos
dec
dec
mov
rcll
cmp
ljmp
add
cld
aas
scas
cmp
cmp
xor
push
je
mov
cmp
lea
cmpsb
sahf
and
mov
aad
mov
xchg
cmp
popa
pop
push
jnp
lea
cmc
scas
insl
fisttpll
xor
sub
xor
jmp
loop
inc
lock
adc
push
xor
inc
inc
xchg
fadds
jno
std
js
dec
fadd
insl
jae
es
push
sbb
or
xor
mov
mov
and
ret
cmpsb
sbb
mov
dec
lcall
ficoml
subb
sbb
sbb
aas
and
mov
xchg
push
lods
push
add
jg
sub
ret
jge
pop
aad
lods
cmp
lods
dec
mov
cmp
lds
dec
gs
int
and
xor
cmp
push
aas
cmpsl
clc
mov
cmp
pusha
and
push
das
cmp
cwtl
push
ss
mov
mov
pop
xorl
pop
test
cmpb
and
shlb
jb
cmp
test
push
cmp
mov
ja
ljmp
sbb
jae
adcl
or
xor
jmp
fsub
pop
mov
test
test
sbb
pop
or
fidivrs
add
ret
clc
clc
test
cmpsb
out
jae
mov
pop
lahf
add
mov
mov
or
and
shll
ja
lods
mov
stos
in
pop
aas
nop
and
xlat
sub
pop
fnstcw
ja
xor
xor
xchg
es
inc
push
out
and
mov
push
lcall
jmp
shll
imul
and
pop
mov
ret
xchg
xchg
pop
mov
out
das
in
insb
adc
daa
pop
push
subps
test
shll
or
popa
and
jne
sub
or
push
inc
icebp
sbb
and
jbe
sarb
inc
mov
mov
cmc
adc
lock
filds
mov
or
jl
sbbb
add
xor
subl
or
aam
cmpb
add
xchg
inc
cs
cwtl
lret
lea
dec
jno
sahf
out
mov
mov
or
push
imul
imul
and
push
mov
push
daa
int3
jl
fcomps
imul
cs
addr16
xchg
shll
sub
jg
or
leave
jecxz
xlat
adc
popa
dec
stos
ds
sub
sbb
sub
mov
push
cmp
add
and
dec
mov
push
sbb
lahf
in
into
std
mov
mov
push
adc
cli
jp
dec
push
xor
push
adc
cltd
adc
mov
leave
int
inc
push
xor
adc
pop
sti
ljmp
mov
sti
sub
inc
test
cmpsl
jbe
push
outsl
mov
sub
jns
cmpl
inc
aas
ss
in
hlt
mov
mov
data16
test
lods
loopne
nop
dec
lcall
cmp
jo
das
pop
push
fadds
jp
shrb
stos
stos
and
imul
cmp
dec
in
mov
dec
stc
mov
int3
dec
cli
mov
mov
in
in
sub
inc
and
leave
sub
xor
add
cmpb
in
mov
imul
jle
xor
adc
xor
xchg
xchg
stos
fnstenv
mov
sbb
jg
mov
and
jne
adc
xorb
mov
mov
adc
cmp
clc
iret
movsl
pop
clc
es
lahf
dec
dec
ss
dec
inc
mov
es
insl
out
leave
push
sbb
xchg
inc
icebp
mov
sbb
mov
fsubl
and
cs
adc
and
sti
out
lea
lret
rclb
loopne
addr16
mov
inc
push
loop
imul
cmp
clc
cmp
jecxz
int
inc
push
test
inc
mov
int
lret
fadds
pushf
ficomps
xlat
jmp
xchg
xor
cmpsb
not
lea
fucomip
out
push
rol
and
leave
lret
mov
xor
dec
fstpt
movsl
or
and
sub
sbb
test
fs
cmp
jecxz
pop
inc
mov
popf
cli
xorb
aad
mov
shrb
xchg
sub
xor
out
jb
pop
lods
xchg
orl
xchg
movsb
stos
icebp
test
in
or
cmp
mov
mov
pop
cmp
call
jnp
sbb
in
jo
inc
in
out
fidivs
cmp
insl
mov
dec
cmp
jo
fists
iret
out
fcomi
jae
pop
or
sti
push
gs
jmp
stos
outsb
movsb
cltd
sub
pop
dec
mov
add
std
inc
mov
sbb
jne
add
ljmp
mov
pop
lahf
nop
dec
push
outsl
or
enter
jne
std
movsl
mov
ret
add
mov
in
adc
mov
and
xchg
xchg
fdivrl
jns
adc
cmp
xchg
mov
mov
mov
mov
shrl
add
fnsave
lea
mov
mov
push
jb
icebp
sbb
js
add
and
dec
pop
jno
ret
xor
daa
inc
fdivl
mov
ret
int3
fmulp
into
cmp
nop
jae
mov
sub
iret
adcb
mov
push
xchg
call
or
mov
mov
repz
mov
ljmp
lods
and
adc
xlat
mov
fs
pop
cmpl
dec
sbb
mov
in
loope
test
jecxz
popf
or
stos
xor
cmp
mov
push
les
ljmp
in
popa
adc
xchg
std
in
aas
js
fiaddl
jns
or
add
movb
out
inc
jecxz
loop
sbb
pop
incb
dec
pop
negb
push
fcoml
sub
ljmp
or
test
or
loope
stos
and
insl
add
cmp
pushf
cmpsl
mov
into
xchg
lcall
mov
stos
aas
lods
fdivl
subl
sbb
popf
movsl
leave
jne
hlt
pop
in
and
mov
inc
out
mov
or
jge
gs
in
mov
jg
shll
popa
daa
andl
adc
push
es
pop
jno
leave
and
mov
repnz
mov
std
mov
xchg
aas
pop
dec
insl
movsl
sub
jno
leave
mov
mov
pop
dec
push
scas
push
mov
or
xchg
je
lret
adc
cmp
dec
in
mov
and
xor
leave
rolb
xchg
add
dec
push
adc
push
pop
jl
cmp
cmp
xchg
repz
pushf
test
jecxz
mov
data16
mov
into
inc
cmp
mov
sti
mov
stc
mov
mov
jg
sub
std
sub
mov
mov
dec
sub
stc
and
shll
notl
xchg
adc
ljmp
and
insb
arpl
aam
pop
add
movsb
aas
lds
ud1
dec
loop
int
mov
pop
push
push
dec
nop
test
fs
and
rclb
cmp
rorb
jmp
add
xchg
lret
mov
jns
push
mov
stc
aam
test
cwtl
pop
add
shrb
mov
and
push
sbb
test
lahf
mov
sarl
cmp
jne
mov
clc
lret
das
lret
dec
insl
and
mov
sub
cmp
and
idivb
je
xchg
sub
xorl
loop
dec
stc
cmpsl
pop
mov
xor
inc
push
push
xor
or
sti
sti
imul
es
jg
stos
inc
inc
pop
out
sbb
shr
jne
lret
or
popf
dec
cmp
sbbb
jg
or
cmp
fs
xchg
push
pushf
dec
push
fmuls
xor
arpl
jnp
imul
and
xor
cs
fdivrl
sar
jp
mov
lret
outsb
jg
lds
dec
xchg
imul
cmpsl
dec
xchg
int3
jg
mov
mov
pushl
add
test
inc
xchg
jo
add
jmp
xchg
push
xchg
inc
mov
stos
and
out
lea
jo
stos
push
sub
int
xor
push
push
push
jmp
leave
repnz
mov
cmp
call
push
enter
pop
aaa
or
out
jb
adc
cltd
stos
mov
sbb
push
adcb
push
dec
test
std
aad
lds
sbb
popa
or
pop
icebp
js
mov
mov
sbb
dec
and
das
lcall
xlat
xchg
in
jl
mov
and
fs
addr16
dec
adc
outsb
hlt
add
push
mov
jae
jecxz
jle
outsl
inc
sbb
xchg
adc
push
inc
mov
dec
or
or
xor
mov
inc
sbbb
jle
pop
sbb
xor
mov
es
orl
enter
pusha
adc
pop
mov
mov
push
pusha
ds
sbb
int
pop
jb
cmpsl
ja
ds
jne
fstps
add
cmp
rolb
lods
mov
cmp
mov
rcrb
cltd
inc
pop
adcb
ret
test
dec
and
mov
aaa
inc
movsb
and
pop
shrb
mov
repnz
lcall
inc
rorl
scas
push
sub
push
stos
call
les
int3
jne
cmpl
ljmp
fistl
mov
movsl
pushf
in
es
shll
jns
jecxz
in
cltd
inc
cmp
cmp
mov
dec
xchg
pop
mov
ss
dec
mov
and
mov
test
stc
mov
sbb
lock
stos
xchg
sahf
fucom
xor
mov
js
mov
mov
cwtl
cmp
xchg
inc
ret
pop
push
scas
jp
scas
jge
and
mov
pop
mov
inc
or
leave
xor
ret
je
das
cld
and
mov
mov
leave
add
adc
sbb
daa
mov
pop
call
mov
fwait
xor
pusha
fdiv
push
xor
pop
cmc
sbb
inc
loop
loopne
lahf
jp
xchg
pusha
mov
je
ljmp
mov
arpl
inc
push
jg
ret
into
loop
fneni(8087
loop
rcr
jns
push
mov
inc
into
cwtl
xchg
sbbl
mov
decb
dec
test
jae
pop
ret
sbb
faddl
or
and
add
sub
mov
cli
gs
sbb
cmp
jmp
inc
adc
bound
imull
clc
sbb
icebp
mov
and
scas
xchg
aas
addr16
or
mov
stos
scas
mov
add
loop
mov
aam
frstor
mov
sahf
xor
or
cmpb
test
gs
jle
xor
sbb
jmp
dec
cmp
pop
dec
scas
sarb
pop
inc
sub
lret
or
and
popf
aas
xchg
mov
rolb
icebp
dec
jecxz
mov
into
nop
std
xor
or
out
sub
sbb
repz
iret
ret
insb
xor
mov
decb
push
push
jb
popf
lret
dec
in
inc
sarl
xor
movsb
mov
shll
stos
loope
push
fbld
cmc
daa
cmp
mov
add
mov
inc
mov
xor
jne
in
pop
and
out
jnp
popa
enter
pop
std
sbb
mov
rcrl
cmp
mov
mov
or
fcmovnb
and
and
fs
add
xlat
mov
push
dec
push
andl
and
dec
jo
dec
jb
mov
sahf
mov
push
pop
pop
test
jecxz
inc
push
scas
push
lret
aam
mov
iret
rclb
pop
ja
jle
outsb
cmp
cmp
lds
sub
add
inc
mov
jmp
dec
add
mov
frstor
push
xor
ror
mov
stos
in
jne
sub
adc
cmpsb
pop
loop
ja
popa
xchg
enter
push
movsb
and
sbb
sub
pop
xchg
cs
mov
popa
inc
ja
scas
test
xchg
clc
fsubrs
push
lret
addr16
add
push
pop
xor
fucomi
sahf
dec
xor
daa
jbe
pop
imul
lds
sbb
stos
jg
push
ret
fisttps
cli
mov
imul
nop
lcall
in
cmp
pop
jns
sub
ficompl
shrb
cmp
fisttps
add
xchg
ret
inc
add
jne
or
jne
aam
push
and
loop
inc
lds
push
push
sbb
cld
pushf
js
or
mov
xchg
lea
iret
cmp
aad
xchg
jp
jge
push
in
inc
insl
and
push
lcall
sub
add
sbb
stos
and
push
lods
divl
rcll
add
loop
cmp
movsl
mov
imul
or
or
push
nop
mov
in
pushf
mov
cmpsl
fwait
shlb
gs
in
xor
popa
test
mov
fisubl
ljmp
sbb
sti
adc
push
insb
pusha
in
push
mov
adc
arpl
inc
stc
cmp
mov
add
mov
sub
mov
out
inc
gs
cwtl
add
mov
outsb
cwtl
pop
fsubs
mov
int3
and
lret
or
or
push
roll
lods
adc
push
loope
movsl
call
or
stos
mov
mov
lods
pusha
stos
cmp
sub
fwait
hlt
movsb
test
gs
sbb
in
mov
inc
jne
xor
pop
rcll
in
iret
andnps
dec
out
daa
loop
js
popl
mov
adc
cltd
jno
push
jmp
lds
push
mov
mov
add
bound
xchg
jmp
xchg
rorb
addl
xor
inc
daa
je
xchg
mov
cmp
push
jns
and
movsl
sub
lret
or
mov
jmp
mov
pop
and
mov
xchg
xor
insl
adc
xchg
lods
dec
adc
rcl
cltd
js
mov
loope
addr16
lahf
nop
pop
pusha
movsl
test
dec
ja
sbb
mov
pop
aas
xor
inc
jl
call
adc
cmp
outsl
lea
add
pop
daa
sbb
inc
mov
aam
pop
pop
pop
mov
inc
and
stc
sbb
mov
jbe
cmp
sub
movsl
lea
hlt
and
xor
mov
fnstenv
arpl
jge
test
addr16
jns
and
pop
dec
and
push
cwtl
lods
add
push
and
rclb
pushf
pop
in
push
or
jl
leave
mov
aaa
popl
push
mov
fsubl
clc
test
imulb
mov
xor
jecxz
cmp
test
aas
jne
cwtl
cmp
xchg
cltd
sub
xchg
hlt
xchg
lods
icebp
fwait
mov
shrl
les
repz
push
inc
imul
mov
cld
loope
pop
add
imul
fimull
iret
sbb
and
aas
outsl
fs
dec
int
sub
sub
ss
sub
lods
dec
outsb
repz
sub
test
call
ljmp
mov
pop
xor
in
fcoms
shrb
pusha
lcall
in
adc
dec
das
enter
mov
or
aaa
cli
pop
mov
addr16
jae
mov
and
xor
lods
xlat
flds
push
and
enter
cmp
pop
add
in
clc
arpl
dec
mov
jo
mov
jae
sbb
mov
imull
add
outsl
mov
add
pop
movsb
repnz
pushf
je
out
sbb
pop
aad
adc
repnz
aaa
inc
pop
fnstenv
int
aaa
and
xchg
sbb
ljmp
pop
in
in
out
xchg
stc
mov
mov
mov
pop
mov
icebp
mov
lock
push
mov
ds
sbb
jl
nop
mov
subb
data16
push
push
mov
dec
adc
dec
out
lret
pop
jae
pop
inc
js
adc
loope
lret
rclb
cmp
fsubl
dec
cmpsb
push
mov
xchg
inc
dec
pop
xchg
push
lods
test
adc
jnp
jecxz
xor
sub
add
mov
or
out
arpl
jne
push
fadds
mov
call
push
sub
inc
mov
bound
push
push
addb
loopnew
mov
sti
out
xchg
jo
mov
rcrb
xchg
pusha
jo
jns
cmpsb
pushf
mov
es
ret
pop
cli
xchg
jbe
adc
stos
fildl
xchg
mov
pop
popf
leave
ss
mov
sub
push
push
lods
insb
jge
inc
and
jnp
or
mov
roll
push
sub
inc
mov
fsubrs
std
jp
popa
test
subl
in
shl
daa
sbb
mov
adc
lahf
loope
jge
in
pop
pushl
sti
cwtl
pop
ficoms
je
inc
movsl
push
movsb
jg
incb
ret
outsl
mov
sbb
xchg
loopne
loopne
sub
sarl
cmp
leave
sub
sahf
ror
into
out
ljmp
mov
icebp
lret
daa
jge
add
stos
pop
mov
cmp
movl
mov
addb
mov
repnz
maxps
sar
sub
daa
pop
jo
fiaddl
inc
mov
or
in
xor
insb
outsb
inc
in
hlt
ja
inc
mov
clc
adc
rcrl
xchg
cmp
jle
mov
or
bound
dec
mov
cmp
pop
in
push
lret
popa
std
fnstsw
cmpb
xor
cmp
mov
mov
dec
push
lret
or
push
leave
insl
mov
push
stos
ret
in
cmp
pop
xlat
and
and
jmp
cmp
test
jp
cmp
stos
adc
and
out
mov
stc
inc
inc
jmp
shrl
mov
push
lcall
adc
push
ret
cmp
push
js
nop
imul
dec
cwtl
xor
jnp
push
mov
push
mov
stc
add
sub
mov
aaa
and
ret
fsubrp
lods
push
js
sub
std
cmp
cmp
mov
std
push
xor
sub
stc
or
dec
scas
lods
pop
jbe
shrl
ret
push
dec
insb
mov
xchg
inc
ret
sbb
ljmp
pop
xchg
daa
mov
sbb
leave
cmp
or
mov
xor
mov
push
jecxz
push
push
in
cmpsl
xor
js
inc
jmp
leave
pop
ret
out
fldl
insl
orb
push
xchg
sti
pushf
jne
movsl
sbb
andb
insl
aam
push
fisttps
jo
shlb
sub
inc
call
out
cmc
xchg
ds
jmp
aaa
push
inc
and
adc
fdivrl
cmp
jl
rcll
xor
jae
or
pusha
sub
mov
call
add
nop
ja
ja
jecxz
ss
mov
inc
sbb
imul
sub
stos
push
pop
cmp
or
ss
pop
imul
dec
in
pop
xor
femms
ror
sub
out
xchg
movsl
test
cmp
mov
dec
cmp
mov
repnz
shlb
test
insl
mov
lret
adc
sub
sahf
outsl
push
mov
pusha
cs
in
shrl
push
mov
push
movsb
or
inc
inc
mov
xor
movb
inc
mov
mov
sbb
or
xchg
jae
add
lock
gs
jmp
int
iret
scas
mov
subb
pop
pop
lds
clc
in
and
inc
dec
xchg
das
pop
lods
xor
mov
mulb
arpl
bound
fs
in
xor
std
lock
cmp
imul
es
sbb
add
fcoml
fwait
xor
mov
xchg
mov
cwtl
jnp
or
adc
xchg
repz
ficompl
jg
cmp
push
xchg
mov
lods
roll
scas
inc
test
movsb
and
cwtl
enter
xor
jae
into
and
xchg
sub
sbb
push
adc
stos
xchg
aad
data16
pusha
mov
push
int
cmc
dec
cmpsl
fildll
movsb
out
push
fiadds
sub
pop
aaa
rorb
lret
pop
dec
call
mov
fadds
push
xor
cmp
sahf
shl
subl
xchg
lret
push
nop
mov
enter
jmp
out
mov
das
jge
xchg
sub
mulb
loopne
sub
gs
cwtl
jl
cmp
inc
dec
inc
loope
push
mov
test
out
insb
lret
repz
push
mov
test
add
mov
pop
xor
mov
popa
inc
dec
fstl
xchg
mov
das
push
mov
call
out
and
gs
shlb
jo
and
adc
ret
xchg
mov
mov
pop
loope
cmp
and
hlt
jecxz
fwait
inc
xor
fnstcw
xchg
mov
dec
hlt
or
in
out
or
rcrl
or
adcl
aaa
outsl
in
lret
pop
adc
lods
std
sbb
leave
ss
inc
mov
cmp
pop
cmp
mov
xchg
sbb
xorb
and
cmc
clc
sbb
neg
jb
out
enter
mov
pop
call
mov
inc
fbstp
pop
dec
sarl
mov
jnp
sub
xchg
mov
imul
dec
lods
mov
pop
loop
sarl
adc
in
push
cltd
pop
int
rcrl
xchg
dec
mov
sbb
jno
mov
out
xchg
add
jns
pop
stc
loopne
xchg
inc
popa
sti
sahf
aas
cli
dec
shlb
clc
sbb
mov
sub
sbb
adc
and
or
js
mov
push
orl
stc
mov
aaa
mov
jl
leave
adc
aaa
mov
push
push
or
cmp
lods
mov
repz
add
test
pop
test
sarl
insb
fs
add
mov
inc
rorb
cmp
clc
rcll
mov
xchg
or
cmpsb
fsubs
and
bound
movsl
fbstp
sub
lcall
lods
std
xchg
ret
inc
mov
or
cs
es
mov
adc
repz
push
mov
aaa
dec
fcomps
sub
fs
push
sbb
dec
push
imul
pop
icebp
aas
lahf
fisttpll
xor
fs
daa
leave
inc
adc
rcll
mov
push
xor
arpl
cmp
out
xchg
test
stos
rcll
popa
cltd
sbbl
jmp
out
cmpsl
sbb
rcrl
jg
fstps
repz
rol
hlt
sbb
mov
int
leave
insl
nop
pusha
sub
out
sbb
xor
sbb
or
sub
adc
or
loop
jge
ja
mov
adc
rorb
hlt
in
mov
lds
enter
mov
xchg
adc
cmp
aad
stos
out
xchg
add
or
add
sbb
add
push
inc
pop
jbe
jg
rcll
lock
mov
jae
pop
cmpsb
clc
and
and
movsl
sti
sahf
in
insl
sub
inc
lahf
iret
mov
in
mov
aam
jp
call
aas
out
dec
mull
jns
rcl
push
mov
xchg
push
mov
testb
mov
push
aaa
jnp
push
cmc
push
xorb
mov
inc
outsb
sti
jae
arpl
jne
cmp
push
scas
jle
dec
or
and
cmp
push
mov
sub
addl
xchg
fdivl
lods
rcrb
add
lcall
adc
movsb
in
mov
daa
test
dec
stos
push
or
lret
cmp
jmp
xchg
mov
mov
cmp
inc
xchg
cmpsb
cmp
movsb
sahf
cltd
out
add
xchg
xchg
lcall
fstpl
xor
out
gs
stos
in
adc
cmp
mov
and
jnp
mov
xchg
sbb
fisttpl
dec
sti
xor
in
cli
cmc
lret
add
push
cmp
int3
shrl
aam
notl
xor
cs
or
jb
test
or
or
pop
rol
lock
sbb
loop
subl
jne
pusha
jb
or
into
cs
popa
pop
and
negb
stos
mov
ja
imul
hlt
lret
fbstp
in
es
push
sbb
mov
cmp
xchg
ret
mov
dec
mov
inc
test
mov
mov
add
or
add
cmp
data16
movsl
mov
dec
sbb
sahf
sahf
mov
add
pop
fstpt
fsub
pop
dec
test
push
xchg
mov
dec
jns
mov
imul
test
lret
add
or
into
lods
decl
inc
aam
pop
clc
pop
repnz
xorb
and
jge
pusha
mov
hlt
xchg
fistps
pushf
xor
adc
loope
iret
push
into
adc
jmp
cmp
std
mov
pop
out
imul
ret
xchg
mov
jmp
fidivrs
inc
repnz
test
out
sahf
test
dec
movsl
push
pop
daa
daa
je
inc
cld
pop
cmp
cmp
out
jae
sub
jmp
push
loop
shlb
cld
inc
mov
mov
cmp
cmp
mov
shl
insl
mov
mov
sbb
daa
push
je
cmp
dec
sbb
das
insb
cmpsl
mov
je
cmc
outsl
mov
stc
add
movsb
xor
ret
mov
xor
sbb
mov
pop
cmp
les
mov
pop
dec
jmp
add
call
inc
pop
mov
aam
stc
mov
xchg
mov
sbb
or
add
insb
jnp,pt
xchg
pop
call
dec
jbe
hlt
jmp
scas
cmp
addr16
xchg
leave
push
test
mov
cmpsl
push
daa
or
test
movsb
scas
mov
cmp
in
iret
or
movsl
out
jp
lret
ficoml
dec
mov
mov
les
sahf
mov
aad
adc
and
xor
cvtps2pd
jecxz
fisubrs
and
sahf
cmpl
lods
mov
fidivl
dec
js
sarl
pop
insb
test
and
push
sbb
sub
xchg
cmpl
insl
outsl
imul
cmp
sub
and
lock
cmp
insl
rorl
cmpsl
dec
cli
lret
loopne
incl
mov
mov
ficoms
jns
std
add
jl
cltd
icebp
fisttpll
xchg
jbe
jb
pushf
je
mov
cltd
cmc
fsubl
in
mov
cmpsb
insl
jp
or
adc
and
mov
pop
test
shl
inc
or
imul
mov
in
jne
repz
divb
inc
rol
push
adc
or
adc
mov
xor
repz
pusha
repnz
cmpsb
add
or
dec
int3
mov
repnz
cltd
dec
add
out
shlb
push
sub
fdivs
ja
in
sbb
fs
and
mov
pop
dec
add
in
imul
pop
into
fcomip
enter
je
lcall
call
jnp
call
rcrl
xlat
mov
aaa
aas
mov
nop
or
scas
dec
push
jl
jl
or
scas
and
ret
cmp
out
fisubl
sbb
repz
xor
jg
xchg
sarl
sbb
and
or
not
lret
push
or
lea
lret
or
inc
inc
adc
xchg
or
cmp
imul
mov
inc
cli
and
jbe
or
push
cmp
or
out
js
mov
lods
cli
pop
xchg
xor
and
int
subb
pop
jmp
stos
lcall
cmc
daa
add
aad
or
lret
lods
popa
mov
pushf
push
push
sahf
inc
out
addr16
loope
lcall
mov
or
cmpsb
sub
mov
pop
jnp
jmp
jbe
push
lret
jge
pop
insb
fsubs
mov
inc
test
xchg
jbe
ret
or
jmp
or
push
clc
fcoml
sahf
xor
ds
xlat
iret
push
in
lea
jnp
adc
ja
int3
outsb
imul
lods
mov
mov
mov
pop
or
into
cmp
loopne
dec
xchg
fidivl
cmpsb
dec
add
jmp
int3
mov
loope
popa
add
lods
mov
and
dec
sub
out
fisttps
push
cmp
mov
add
jbe
jp
adc
fst
movsl
push
adc
add
sbb
dec
jb
movsl
lret
mov
test
sbb
ret
imul
mov
std
push
mov
addr16
das
add
mov
stos
dec
rcrl
pop
jp
mov
ja
and
repnz
shlb
xchg
sub
mov
sub
xlat
je
out
mov
in
inc
push
mov
or
push
sbb
xlat
out
pop
cmp
sbb
sbbl
cmp
mov
mov
cmpb
es
in
loop
jmp
faddp
leave
hlt
mov
addr16
lods
push
out
inc
popa
jecxz
xor
ret
ficoms
out
xchg
scas
xchg
cmp
shlb
xor
push
sbb
fistpl
cmc
jno
lcall
mov
sub
mov
mov
mov
insb
push
mov
shrl
mov
add
add
shlb
rcl
mov
inc
pop
mov
cltd
pop
adc
incl
addr16
dec
cmpsl
and
inc
incl
or
dec
mov
and
stos
cmpb
orb
jge
mov
or
scas
mov
or
xchg
xor
jnp
fnsave
out
pop
arpl
lods
lret
ret
je
and
into
mov
mov
popf
mov
enter
jns
lock
mov
sahf
mov
jno
loope
frstor
add
mov
mov
movsb
adc
adc
xabort
push
push
cmp
and
aad
fisttpll
or
push
xor
dec
inc
jbe
popa
cli
push
jns
pop
int3
shrb
dec
js
xchg
lret
add
mov
or
lahf
dec
cmpsl
push
shlb
mov
jecxz
inc
adc
pop
int3
jle
push
jnp
std
sbb
add
adc
clc
incb
adc
dec
cs
aad
clc
jp
jle
daa
fdiv
or
cmp
xlat
adc
adc
push
or
push
std
inc
and
es
push
pop
add
lret
data16
xchg
pusha
hlt
nop
mov
inc
jge
cmp
es
or
faddp
add
jl
pop
xor
fnstcw
loopne
mov
inc
fsubs
std
pop
imull
pop
lahf
lret
movb
nop
jmp
das
mov
dec
push
pop
out
repnz
dec
inc
cmp
pop
cmp
aad
ret
clc
sbb
aaa
insl
nop
jmp
pop
fnstsw
cmpsl
or
mov
enter
int
xchg
dec
in
icebp
repnz
or
jmp
les
lea
std
ss
mov
adc
xchg
cmp
je
ja
mov
pop
and
xlat
imul
lea
sub
mov
insl
adc
aaa
sbb
mov
loope
add
push
inc
dec
cmpsl
or
clc
popa
dec
sbb
shlb
xor
mov
push
mov
ret
orl
test
fstpt
jno
into
aas
mov
sub
mov
lods
mov
mov
lods
mov
mov
shrb
xlat
mov
ss
cmp
dec
ret
adc
in
rol
xchg
adc
shlb
imul
pop
aam
mov
mov
ret
dec
lods
and
xorb
dec
jge
lahf
sub
fcom
or
cld
jl
dec
loope
stos
shrb
pop
lock
sti
nop
das
in
cld
xchg
fmull
stos
push
push
pop
unpckhps
dec
xor
pop
cltd
add
and
ljmp
loope
notl
cs
clc
mov
aaa
cli
xor
add
cli
negb
jne
cmp
cmp
fcoml
adc
and
mov
out
lret
subb
sbb
pop
cltd
adcl
in
and
test
mov
movsb
clc
dec
mov
lock
pusha
ljmp
sbb
dec
in
clc
cmpb
into
shrb
mov
pop
in
sub
test
fs
sub
adc
lds
mov
inc
repz
mov
lahf
out
adc
pop
xchg
pop
inc
mov
push
ret
sti
inc
mov
rorl
dec
jecxz
les
dec
and
cli
shll
rorb
pop
mov
ljmp
ljmp
jg
jbe
je
mov
push
jb
xor
adc
cmp
xor
out
testl
insl
imul
push
mov
outsl
push
sub
adc
jae
adc
gs
inc
xor
mov
pusha
in
aam
lret
mov
shrl
jns
jge
cmovle
pop
test
add
int
push
fcmovb
fnstsw
inc
cmp
loope
cmpsb
jbe
sub
sarb
or
sub
and
test
mov
cli
test
popa
in
fs
push
dec
scas
adc
jbe
pop
loop
cmp
jb
push
add
cmpl
out
mov
lds
shll
sahf
lock
mov
lods
fidivrl
and
pop
daa
jnp
jae
lods
mov
jo
jle
es
sti
or
inc
nop
aam
ja
sub
inc
add
ja
push
into
adc
mov
sbb
inc
test
dec
fwait
arpl
sahf
jmp
scas
test
mov
push
roll
adc
shrb
cmp
and
lahf
xlat
add
sub
fdiv
push
xchg
dec
jmp
subb
xor
pop
xor
hlt
sahf
repz
cmp
inc
fcoml
mov
cmpsl
out
insb
push
inc
xor
mov
rcrb
lea
ret
dec
fistpl
jg
ljmp
test
sbb
aad
daa
and
cld
or
and
test
stos
loope
iret
ss
fcmovnu
sub
aas
cmp
mov
sahf
hlt
push
mov
sbb
mov
and
aaa
ja
adc
mov
sbb
sbb
jnp
scas
fildll
js
sbbb
imul
lret
mov
mov
sub
in
and
lock
add
test
fwait
sahf
adc
or
xchg
and
out
inc
push
xor
popf
inc
mov
js
mov
jecxz
jne
pop
loopne
mov
dec
or
scas
test
add
outsb
cltd
inc
les
or
cmp
inc
leave
push
sahf
pop
fidivs
imul
dec
or
and
sub
inc
xchg
inc
xor
out
movsb
fsub
pop
stc
xor
int
pusha
lods
pushf
std
shlb
xchg
add
rclb
push
adc
adc
lods
mov
mov
push
gs
jae
scas
or
adc
test
jmp
pusha
cwtl
mov
notb
movsb
xchg
and
jae
mov
stos
xchg
aaa
jp
lock
sub
jb
ljmp
mov
xchg
aam
lea
stc
mov
nop
xchg
mov
xor
jae
cmp
mov
cwtl
xchg
das
mov
jnp
mov
iret
inc
fstps
xchg
imul
out
adc
push
cmp
xor
xchg
bound
dec
mov
push
pop
fcomps
adc
jb
dec
mov
cwtl
mov
xchg
in
orl
push
icebp
jb
add
push
adc
pushf
mov
pop
dec
aaa
mov
popa
fsts
xor
jno
push
jbe
addb
cli
add
aaa
insl
dec
and
movsl
xchg
outsb
pusha
or
dec
or
adc
xor
pop
pop
add
adc
shrl
fbstp
dec
enter
push
push
fidivl
ret
ret
push
mov
stos
aam
jl
imul
fbstp
and
inc
and
add
jmp
jmp
jne
cwtl
xor
jo
mov
sti
add
sub
xchg
loopne
lea
loopne
add
pop
cmp
dec
es
aas
sub
xchg
stc
jbe
les
xchg
lods
or
add
and
fsubrp
xorb
push
dec
aad
test
xor
inc
sub
dec
and
rcrl
dec
or
mov
in
mov
jge
jne
sarl
sbb
jge
add
pop
pop
loopne
cmpsb
sub
rolb
out
cmp
in
cld
lret
sbb
xchg
dec
jae
sahf
mov
xchg
push
std
sarl
mov
insb
lods
add
jae
ror
xor
pop
mov
test
mov
adc
es
in
cwtl
stc
repnz
mov
pushf
jnp
mov
mov
vmovdqu
dec
fdivs
xorb
pop
popa
sub
jmp
test
xor
dec
sub
in
out
fst
sbb
jp
xor
ss
jb
sub
jp
push
jl
mov
cmp
outsb
inc
insb
dec
jne
push
scas
pop
mov
mov
cmpsl
arpl
inc
fdivrs
pop
jne
jle
aad
shr
xchg
cmp
fnstenv
cmpsb
outsl
ljmp
sbb
push
test
cmc
jne
xor
call
mov
adc
or
enter
cmp
cmp
pushf
hlt
cmpsb
aaa
aam
pusha
out
iret
ret
call
xlat
jnp
mov
lahf
enter
mov
jae
and
in
and
cltd
ljmp
stos
cmp
js
icebp
sarb
lds
inc
mov
push
xor
or
mov
out
xchg
out
or
sbb
adc
adc
mov
xlat
jmp
jno
je
in
push
stos
push
inc
insl
inc
jle
lods
dec
sbb
lods
scas
lds
sub
pusha
lods
andl
dec
xlat
arpl
mov
mov
and
inc
xchg
xchg
inc
push
les
dec
mov
adc
sti
dec
pop
jmp
jns
dec
dec
xchg
sbb
xor
ljmp
shlb
pop
jae
xchg
sub
or
imul
mov
daa
add
movsb
sub
add
cld
xor
mov
jnp
mov
popa
cltd
xor
and
jge
clc
orl
test
out
fucom
insb
sub
fptan
imul
adc
mov
jmp
jecxz
decb
cmp
loop
stc
adc
or
mov
add
movsl
les
sbb
and
inc
aam
xchg
repz
out
jle
mov
mov
add
js
xchg
sbb
loop
push
cmp
xchg
imul
jnp
mov
cmpsl
sub
jecxz
movsl
jge
add
je
int
pop
or
push
push
lret
inc
cmp
mov
cmp
mov
call
test
int3
push
psubsb
scas
or
orb
ljmp
lret
mov
outsb
out
hlt
imul
dec
mov
sub
jnp
ja
into
xor
rorb
add
sub
inc
dec
inc
test
sar
outsb
fildll
inc
repz
ja
in
shrl
xchg
sti
out
in
in
in
sarb
mov
pushf
loopne
mov
mov
jo
movsb
movsb
xchg
shll
out
mov
adc
xchg
mov
jmp
enter
stos
loop
or
addr16
jmp
xor
sbb
imul
std
insl
xchg
sarl
sub
jb
cli
pusha
sub
inc
int3
pop
orl
notl
pop
lods
iret
aad
fiadds
xchg
xor
gs
inc
jle
lods
push
push
cli
mov
cltd
fnstenv
jnp
xchg
xor
lds
pop
rorb
push
adc
push
fiaddl
hlt
out
jns
fs
loop
pop
inc
movsb
sub
loope
cmpsb
stos
sbb
pop
xor
adcb
mov
mov
ret
cmp
test
jecxz
push
pop
mov
bound
add
pop
movsb
daa
mov
push
mov
jl
mov
bound
mov
mov
xor
mov
cltd
das
scas
es
ret
sbb
push
pop
scas
iret
jbe
mov
aaa
pop
adc
xor
add
xchg
mov
dec
adc
jns
lahf
push
mov
push
mov
icebp
jbe
xor
lret
cmp
add
jecxz
mov
imul
or
stc
loope
repnz
loope,pn
pushf
lahf
sub
nop
int3
dec
or
sbb
ljmp
pushf
and
dec
nop
xor
scas
je
jnp
lret
iret
add
or
mov
test
stc
mov
shl
fwait
ja
and
sub
and
and
leave
test
xchg
cwtl
mov
dec
mov
xchg
push
pop
adc
es
xor
push
push
xchg
mov
int3
pop
in
jbe
mov
inc
in
or
scas
add
scas
pop
jmp
loop
dec
or
lods
inc
dec
or
or
cmpsb
lret
movsl
mov
div
pusha
lods
add
ret
mov
mov
out
jno
jle
jp
mov
push
jne
push
mov
mov
aas
sbb
mov
push
in
jl
or
push
imul
inc
dec
ret
adc
cmpb
sub
jg
fisttps
xchg
dec
mov
cltd
testl
xchg
xchg
scas
add
cmp
lods
xor
dec
in
jo
mov
mov
sub
jl
sbb
bound
or
sub
icebp
mov
push
divl
arpl
cmpsl
jb
pop
int
sub
in
or
or
shrb
aaa
pop
dec
jmp
sub
stos
cmpsb
pop
xor
in
aaa
mov
xchg
xchg
xor
mov
sarl
sbb
sub
adcl
push
shlb
jne
adc
cmp
jp
mov
mov
or
or
int3
add
xor
bound
leave
jecxz
loopne
nop
cmp
in
movsb
push
sbbb
mov
push
mov
pop
and
inc
dec
dec
mov
xor
imul
test
dec
cmpsl
popa
and
mov
cmc
push
jle
cmp
fucomip
movb
movl
test
repz
mov
loopne
xor
ret
dec
lds
sbb
mov
popf
adc
cmp
mulb
push
imul
adc
xchg
push
or
or
mov
dec
icebp
xchg
mov
xor
inc
ficoml
or
rorb
jae
out
mov
stc
iret
adc
push
xchg
jb
aas
test
jl
push
stos
sub
in
cmp
addr16
jle
mov
bt
xor
fiadds
lahf
pop
pop
mov
push
jns
and
cmp
dec
fwait
jo
push
fists
ret
arpl
mov
filds
mull
out
shll
push
bound
cmpsl
mov
xchg
addr16
cmpsl
pop
mov
idiv
insl
or
call
loope
lock
dec
repnz
inc
das
xor
sbb
xor
mov
sbb
cmp
mov
mov
xor
pop
adc
xchg
rclb
mov
imul
jp
adc
popf
cmc
pop
sub
push
jbe
ret
jge
or
cmp
clc
shll
pop
lods
repz
mov
pop
xor
hlt
inc
cmpsb
mov
out
jl
arpl
sbb
scas
xchg
outsl
in
cmc
sbb
xor
jno
mov
adc
push
cmpsb
insl
and
sahf
mov
and
popf
sbb
out
test
hlt
mov
cli
pop
and
push
pop
pusha
lea
mov
sub
scas
insb
sti
fdivp
hlt
jge
ret
repnz
scas
sub
adc
jb,pn
aad
push
and
mov
push
mov
je
mov
dec
jge
jl
xor
out
jl
outsb
aad
cwtl
test
jb
shrb
shlb
jp
ret
pop
xor
xchg
push
je
pop
push
cmp
das
and
mov
lods
les
jb
push
call
inc
aas
cmp
add
pop
es
jl
mov
ss
adc
inc
addr16
lds
push
cmpsl
jmp
jmp
xor
sub
dec
pop
orb
rcrb
cmp
test
imull
shlb
pop
sbb
mov
aad
sub
js
and
xchg
fcomps
aad
aas
sub
sbb
pop
es
rcl
or
push
in
mov
jecxz
mov
out
sbb
scas
leave
mov
daa
mov
shll
xchg
aam
cmpsl
ficoml
sti
jnp
inc
imul
pop
mov
daa
xchg
push
shr
pop
ja
dec
push
sbb
test
and
imul
push
mov
cmp
jne
xor
mov
sbb
xchg
adc
xchg
add
les
lea
repz
pop
stos
jne
dec
test
roll
js
imul
mov
pop
sbb
xor
das
push
ljmp
push
jb
in
xor
pop
cltd
mov
call
xchg
in
cltd
xor
out
shr
xchg
std
or
mov
xchg
fcmovu
jecxz
dec
jmp
cvtps2pd
mov
fcmove
jb
dec
mov
xor
inc
pushf
rorl
adc
or
rep
shll
push
xchg
test
loopne
push
xchg
lret
lock
dec
fwait
mov
ljmp
dec
cli
push
aas
jbe
push
inc
js
roll
scas
jb
push
in
out
lret
dec
jne
dec
cmp
sub
dec
xchg
push
inc
xlat
inc
fnstenv
daa
es
mov
scas
pushf
out
mov
addr16
cmpsl
inc
fisttpl
and
adc
mov
mov
mov
add
pop
fwait
push
les
jmp
mov
inc
std
cli
jns
lea
pop
jae
jno
pop
pop
fldl
nop
jne
jle
cmp
fnstcw
inc
dec
loopne
cld
cmpsb
pop
std
xchg
mov
rorb
mov
idivb
xchg
mov
cwtl
pop
cmp
or
xlat
jo
call
or
adc
je
push
push
fisttpl
jb
xor
dec
mov
fsubp
rcrl
inc
dec
fnsave
cmp
push
imul
jecxz
enter
xchg
xor
inc
mov
scas
xchg
imull
and
int3
mov
push
ret
adc
lahf
rorb
and
insl
cwtl
or
clc
xchg
enter
out
cmpsl
cmp
jp
mov
hlt
idivl
mov
xor
mov
dec
xor
mov
push
ljmp
nop
shrb
sbb
sbbl
into
into
push
cmp
sub
xor
lods
dec
lret
stos
jmp
dec
loope
movsl
or
push
adc
arpl
into
lcall
sbb
ret
adc
pop
push
mov
push
sub
adc
jns
fldt
loope
das
lret
cltd
inc
insb
dec
lds
add
and
jg
imull
jbe
xchg
sbb
or
ja
int3
mov
repnz
out
inc
fucomip
loopne
push
mov
and
dec
popa
popa
jbe
jb
sbb
repnz
ja
pop
in
cmp
mov
popf
loop
addr16
loopne
out
das
in
in
mov
xchg
loop
mov
pop
jp
mov
cld
rorl
in
lods
xchg
add
icebp
dec
push
sub
sahf
stos
mov
or
or
jecxz
loopne
add
xchg
fdivrl
fdiv
in
inc
or
stos
sar
add
mov
push
jne
pop
or
mov
mov
sbb
hlt
icebp
push
adc
cld
fdivp
dec
rcl
mov
fcompl
jb
mov
mov
in
xchg
adc
push
inc
sub
sbb
pusha
div
fs
lods
aas
cmp
das
or
push
mov
aad
outsl
xor
rolb
in
jle
lret
and
arpl
or
into
mov
lret
mov
jnp
lods
test
mov
xchg
xchg
loop
jo
cmp
out
push
mov
lods
sub
enter
xchg
fdivl
lods
lret
xchg
bound
stos
in
xor
stc
xor
and
xchg
cmp
lock
cmp
inc
subb
mov
sbb
xchg
daa
cmp
shll
xor
inc
xchg
cwtl
sarl
sub
lods
aad
push
loop
push
pop
jecxz
ljmp
rorl
lea
fdivs
incl
bound
sub
or
mov
sbb
cwtl
dec
and
cmp
enter
dec
cmp
mov
pop
jge
ret
push
rcl
test
inc
ficoml
or
xchg
lcall
outsb
adc
dec
jg
push
das
outsl
shlb
or
es
push
aaa
cmp
mov
xor
mov
dec
aas
sub
push
rcl
sbb
cmp
imul
data16
nop
popf
jns
nop
clc
pop
push
push
aas
and
sbb
push
mov
call
push
cltd
pop
mov
and
cmp
cmc
imul
or
je
aam
sti
sti
lret
outsl
sahf
jno
insl
sub
pop
out
fs
add
js
adc
scas
pop
cmpsb
adc
loope
test
sub
push
dec
cmpb
in
push
fucomp
mov
or
and
jle
test
out
sub
adc
cmpsb
cmpsb
xor
call
cmp
jne
test
jl,pn
fnstsw
shrb
mov
xchg
sub
sbb
adcl
or
lock
pop
xor
xorb
ret
stos
cmpl
mov
imul
imul
xchg
lcall
jp
cmp
mov
scas
lods
inc
adc
ret
cmp
sti
lods
add
sbb
daa
cmp
mov
xor
arpl
pushl
ljmp
xchg
sbb
xchg
push
ds
fwait
movsb
mov
outsb
dec
lahf
push
popf
push
jg
repnz
xlat
lock
sub
cli
dec
fcoms
xor
ret
cmp
stos
jmp
ds
insb
xlat
pop
pop
dec
jl
scas
paddsw
xlat
faddl
push
jecxz
cmpl
imul
xor
pop
sbb
xchg
xor
mov
cli
enter
fwait
xchg
das
push
push
jo
xor
add
lods
inc
fnstcw
cmp
xchg
add
inc
sbb
xchg
cs
inc
inc
shll
sbb
push
jmp
ja
loop
mov
sbb
out
dec
cmp
pop
inc
xchg
mov
cmp
sbb
rclb
bound
and
aaa
stc
cmpsb
mov
aas
stos
outsl
dec
into
mov
adc
adc
fcmovbe
jno
mov
and
dec
pop
or
inc
mov
xchg
test
scas
adc
in
pushf
insl
xor
add
xchg
sub
repnz
push
mov
mov
daa
rolb
sbb
xchg
scas
mov
lea
sub
call
mov
out
push
outsb
sbb
mov
dec
fdiv
push
adc
loopne
int
xchg
lsl
mov
push
and
jne
stos
jnp
cmp
push
mov
or
push
fs
push
filds
ror
mov
mov
mov
pop
mov
adc
mov
xor
xchg
in
jle
push
jp
jle
xchg
fdivrl
test
cld
scas
mov
loope
aam
mov
pop
movsb
movsl
pusha
pop
lds
xchg
sbb
xchg
sub
add
xchg
es
in
sub
add
ret
jo
push
out
lret
jle
lahf
addb
jecxz
pop
sub
nop
mov
cld
adcb
out
or
cmpsb
std
add
repz
fsubr
mov
or
lods
lods
cmp
lret
add
shlb
in
test
in
mov
xchg
aam
out
mov
cmp
movsl
inc
orl
xchg
aam
and
add
repnz
jecxz
xlat
mov
cmp
lretw
out
int
mov
sbb
out
or
sar
xchg
pop
mov
cmp
pop
imul
sub
jmp
repz
or
shrl
imul
inc
push
dec
movb
mov
das
push
inc
fisubrs
fwait
out
adc
dec
iret
outsl
or
cmp
jle
sbb
mov
xchg
testb
jge
jle
xor
outsl
cmp
call
jle
sub
xchg
rol
iret
out
dec
adc
loop
cmpsl
hlt
mov
outsl
out
aaa
mov
and
or
lahf
shr
mov
pop
aad
mov
xchg
pop
mov
shll
je
mov
nop
ret
xchg
stos
pop
jle
mov
out
cmpsb
cmp
ljmp
andl
test
cld
call
jp
loope
xchg
adc
cmc
int3
jp
and
sahf
inc
jbe
sub
jmp
es
bound
int3
pop
aam
aas
jecxz
jno
lea
adc
ret
movsb
rcll
shlb
icebp
shll
or
adc
fwait
add
insb
and
fnstcw
aaa
xor
xchg
xchg
sti
loop
pop
scas
repnz
add
pop
dec
push
and
push
jg
bound
lods
cltd
int
and
xchg
int3
pop
mov
lahf
ret
les
out
outsb
jle
add
push
mov
push
popa
mov
pop
jp
or
stos
fisubrs
jl
ss
andb
das
in
cwtl
and
test
cmpsb
mov
daa
sub
add
and
dec
dec
push
in
nop
lds
out
xor
lret
push
xor
cmp
lahf
mov
xor
fildll
mov
mov
pop
int3
stos
push
inc
lahf
dec
std
jmp
mov
pop
and
lds
xlat
sub
cltd
sbb
xchg
subl
negb
movl
lcall
out
sbbb
jb
and
jecxz
cmp
add
cmp
dec
mov
subb
ja
xchg
sbb
add
push
mov
push
cltd
test
and
dec
sub
insb
add
ret
mov
sbb
test
rolb
pop
inc
cmp
add
lock
and
mov
into
incl
das
outsb
mov
fyl2xp1
pop
fadds
notb
xor
mov
in
adc
add
cmp
std
or
sub
xchg
dec
adc
pop
jne
xchg
or
push
dec
sbb
mov
mov
movl
mov
pushl
xorl
mov
sub
push
repnz
mov
push
add
push
inc
arpl
ss
insl
insl
mov
sbb
push
add
js
xorb
cmc
or
adc
jo
lods
cmp
jg
inc
xchg
adc
aam
and
sbb
int
mov
test
xchg
cmp
lds
aam
sbb
cmp
mov
and
dec
pop
psubb
shrb
aaa
aas
pop
loop
repz
xor
int
jns
jne
data16
int
pop
xchg
lods
aaa
pop
test
repz
movl
out
sar
daa
ss
pop
adc
cld
xchg
dec
push
sarl
push
mov
sahf
ja
test
pushf
dec
nop
mull
cmp
or
inc
lea
movsb
insb
jg
and
hlt
test
loopne
shl
mov
mov
sti
movsl
add
mov
or
addr16
inc
push
lods
jge,pt
pop
or
jecxz
jne
mov
addl
inc
inc
dec
sbb
pop
je
scas
lea
ret
stc
jne
mov
lahf
aam
sbb
outsb
scas
bound
jmp
mov
push
dec
sub
pop
and
jae
sbb
lahf
push
ja
ja
mov
leave
aas
xlat
notb
test
mov
lea
int
fiadds
jno
dec
fcmovnb
jbe
mov
mov
mov
dec
lcall
out
jae
adc
cmp
mov
cmp
iret
pop
xchg
lret
add
pop
and
dec
pushl
inc
push
mov
sbb
mov
adc
aaa
sbb
xchg
out
sbb
dec
inc
inc
sub
inc
xor
movl
mov
sbb
jge,pt
lods
xlat
mov
into
xor
pop
mov
dec
scas
ret
cltd
int
mov
addr16
clc
cmpsl
xorl
jp
test
popa
nop
out
sub
and
fnsave
mov
mov
cmp
pop
push
jns
cmp
mul
lahf
je
shlb
inc
or
jbe
dec
add
inc
mov
sub
mov
outsl
leave
xor
and
push
fnsave
or
mov
push
fidivrl
rorl
and
pusha
mov
scas
bound
dec
movsb
pop
mov
push
nop
pusha
jns
aaa
and
push
push
or
adc
pop
fwait
ror
aad
jmp
andl
fs
xchg
mov
jp
cmp
fisttps
push
pop
xor
inc
and
sbb
jle
arpl
pop
das
sub
cltd
call
sbbl
mov
out
gs
outsb
dec
das
aas
inc
sub
nop
lock
sbb
sub
call
sahf
loope
mov
jmp
push
mov
popa
jp
nop
jns
std
push
out
std
mov
fmulp
adc
mov
pop
mov
fistl
push
mov
inc
cltd
inc
pop
mov
mov
mov
lods
adc
cmp
arpl
push
in
popf
test
mov
mov
xchg
pop
push
std
lods
mov
xchg
dec
and
sbb
sub
or
mov
repnz
and
push
xor
out
in
loopne
or
nop
movsl
mov
sahf
push
mov
sar
icebp
les
scas
mov
mov
ret
pop
add
dec
movb
in
and
lods
imul
inc
jp
cld
mov
dec
mov
xor
mov
sub
push
bound
dec
jae
idiv
inc
dec
aas
aad
clc
mov
out
imul
inc
ja
int3
cmp
sub
mov
pop
push
jl
dec
mov
je
jl
xchg
mov
xor
in
shll
sub
jo
cwtl
jg
movsb
in
inc
cmc
cs
jne
cmp
lods
das
das
cmp
and
faddl
xchg
clc
cmp
je
mov
stc
sti
adc
out
icebp
loope
sub
outsl
mov
or
stos
xlat
fcoms
lret
mov
insl
push
adc
jmp
push
dec
sbb
mov
sub
mov
sub
lock
sbb
push
das
jnp
stos
mov
mov
rol
xor
or
shrb
addl
fsubrl
cmp
fs
stc
mov
lret
cmpsb
pop
sub
sbb
mov
push
inc
xchg
mov
sub
sbb
outsb
lret
out
pop
push
cltd
pop
lock
call
jmp
sub
push
xor
xor
ds
or
jge
out
cmp
ffreep
imul
shrb
push
aas
add
lea
cmp
mov
mov
test
push
mov
and
adcl
sbb
daa
dec
das
sub
jbe
cmpb
jg
xchg
xor
stos
cmpsl
fs
movsl
pusha
and
adc
cwtl
add
or
outsb
inc
rorb
xchg
pop
lcall
push
fdivs
jno
in
xchg
or
mov
lret
inc
inc
std
gs
inc
push
push
inc
sbb
cmpsl
in
or
fs
rcll
loope
mov
push
mov
mov
mov
add
mov
lods
push
cs
cltd
inc
test
adc
fdivr
xchg
es
ja
fisttps
xor
jge
test
orb
hlt
lcall
lds
enter
les
jne
jl
jno,pt
lahf
scas
mov
jge
arpl
fdivl
inc
aas
repz
out
lock
xor
xchg
mov
clc
mov
bound
addl
mov
test
push
arpl
xchg
jmp
fcoml
ret
add
pop
int3
aad
enter
push
and
mov
in
xlat
push
xor
inc
and
jg
test
add
mov
aam
mov
mov
add
sbb
scas
mov
popa
pop
xchg
jbe
addb
xchg
jns
and
mov
add
mov
loopne
icebp
aas
cwtl
xor
iret
iret
push
arpl
and
rclb
add
add
bound
div
adc
mov
lock
popf
cltd
mov
fs
insb
add
jge
in
adc
into
ljmp
pop
add
jl
cmp
jo
jo
outsl
and
or
leave
sbb
adc
mov
mov
bound
dec
aas
lock
cs
pushf
push
sub
adc
dec
sbb
mov
cmpsb
mov
add
in
add
mov
jp
ret
pop
ja
fcoms
add
inc
ficoms
add
xor
lods
mov
and
push
push
outsl
and
push
pop
cmp
jg
hlt
cmp
jmp
shll
shl
lret
jl
pop
push
fldl
dec
mov
fsubr
outsl
js
dec
mov
es
aad
loope
mov
xchg
adc
pusha
call
leave
add
push
sub
jns
cmovne
daa
and
test
xlat
mov
jb
int
mov
push
sbb
sbb
scas
rol
mov
into
mov
adc
pop
clc
sub
mov
das
clc
mov
xor
nop
call
mov
and
aam
pushf
test
out
shrb
pop
out
stc
and
cmc
je
fwait
iret
mov
cmp
jg
push
bound
call
push
aad
mov
or
into
push
inc
add
lods
and
es
dec
sub
outsb
scas
mov
mov
frstor
nop
push
push
cmp
jl
in
mov
push
bnd
test
push
in
scas
dec
add
in
sbb
mov
mov
loop
xor
xchg
test
add
test
add
push
rorb
pop
mov
int3
adc
test
divb
das
popa
xchg
jnp
in
and
jecxz
push
xor
sub
xchg
inc
jmp
fwait
cli
nop
aaa
int3
fnstcw
sahf
out
jl
into
jmp
out
lea
or
xchg
dec
pushf
call
fadds
jge
into
icebp
hlt
fs
mov
sub
dec
jl
es
mov
lea
js
nop
pop
cli
mov
rcrl
ds
xchg
daa
aas
aad
push
xchg
xor
xor
movsb
or
mov
or
ret
fsubl
lds
or
xchg
add
daa
mov
iret
or
stos
mov
pop
ss
int
scas
sub
lods
pop
mov
jmp
jge
outsl
jge
dec
ret
fcomi
add
pusha
and
add
ret
outsb
cmpsb
cmp
mov
std
lret
cltd
cmp
inc
daa
lods
and
mov
jns
into
test
inc
dec
and
ret
pop
pop
xlat
cli
fdivr
addr16
xor
pop
lret
aad
test
push
dec
pushf
push
andl
aas
xor
lahf
and
clc
push
sbb
sub
dec
sbb
mov
pop
mov
negl
imul
mov
shll
ret
out
lods
jbe
imul
xchg
xchg
jbe
adc
mov
call
stos
jl
insb
scas
push
flds
cwtl
lret
andl
inc
mov
jbe
scas
ficoms
cmp
fdivr
out
adc
fucom
lahf
dec
pandn
cmp
sub
pop
and
fldcw
mov
dec
mov
lret
int
sub
mov
hlt
aad
add
pop
adc
pop
mov
js
push
inc
or
xlat
push
xchg
or
pop
popa
jle
fcomps
xchg
mov
xor
push
movsb
inc
je
cmpsb
inc
adc
das
mov
pop
add
test
jbe
cmpsl
das
leave
sub
push
jp
push
stos
cmp
cmp
lock
sub
mov
pop
and
push
das
add
or
sar
addr16
fisubrl
imul
mov
cmc
jbe
sti
add
and
aas
mov
jecxz
mov
clc
adc
nop
xlat
cld
outsl
push
xchg
cmp
mov
mov
mov
and
fdivrs
jo
push
stos
xor
and
jge
and
sti
test
sbb
int3
insb
shrl
lods
pop
and
mov
adc
nop
push
and
xor
movsl
push
dec
pop
cwtl
pop
push
mov
sti
jmp
dec
jmp
jmp
fwait
cwtl
out
sub
or
mov
out
mov
cmp
fwait
jmp
pop
xchg
mov
nop
pop
pop
inc
xor
or
cmp
jae,pt
rclb
fadds
mov
in
pop
fcmovnbe
sub
mov
mov
pusha
mov
xor
xchg
std
scas
add
mov
inc
sub
xchg
out
jb
cmp
scas
in
xchg
sbb
lods
sbb
pop
fwait
std
mov
addr16
xor
frstpm(287
sahf
ret
or
sub
sbb
fwait
ficoms
aaa
inc
cmp
int3
or
nop
xchg
negb
bound
adc
dec
pusha
or
adc
dec
add
mov
fcoms
das
mov
pop
scas
lods
sbb
lcall
cmp
out
lcall
addr16
cwtl
xchg
or
repz
inc
movsb
adc
lea
pop
rcrl
mov
pusha
cli
or
sti
or
stos
mov
jg
inc
xor
cmp
ds
xor
xchg
push
mov
jae
dec
imul
xor
stc
sbb
jg
lock
dec
dec
and
pop
std
lds
mov
xor
jp
aaa
xor
loopne
adc
jae
jmp
into
jb
lock
imul
icebp
repnz
add
fadds
outsb
sbb
ret
add
add
jge
mov
push
sbbl
lahf
arpl
dec
mov
mov
sbb
mov
jecxz
adc
call
hlt
and
cli
add
xchg
dec
dec
aam
lret
add
test
movsb
pop
adc
fcompl
lahf
or
add
adc
fmuls
orl
mull
sbb
mov
xor
not
sarl
out
or
lods
int3
fs
pushf
dec
testb
aaa
into
sub
cs
insl
lods
jae
cmpsl
ljmp
stos
sahf
sbbb
call
aas
shll
aaa
pushf
mov
mov
dec
in
and
insl
popa
outsb
mov
ss
sbb
inc
cmp
push
sbb
mov
imul
pop
sub
in
cld
fadd
jno
or
jl
sahf
pop
cmp
lcall
add
sbb
fwait
or
push
repnz
sub
jmp
and
stos
sarl
scas
orb
add
dec
add
xor
pushf
dec
sub
push
ret
xchg
lcall
les
pop
xor
sub
push
fs
pop
je
push
mov
xchg
notb
pop
aam
repnz
sbb
das
jne
push
xchg
inc
fistpll
je
add
ja
sbb
shlb
lahf
and
cmpsb
mov
cmc
push
jne
inc
or
insl
addr16
pop
js
je
sti
jo,pt
sahf
adc
aaa
call
mov
into
shl
fbld
leave
cmp
insb
xor
mov
rcl
mov
stos
pop
leave
pop
psubq
xchg
push
call
leave
add
loop
inc
mov
ja
xchg
xchg
imul
mov
lock
ret
mov
xor
pop
sbb
ljmp
mov
gs
andb
mov
loope
test
sub
pushf
jo
adc
mov
ds
addl
sbb
iret
xor
sbb
mov
mov
ja
repnz
and
cmp
lock
lcall
xorl
add
adc
ss
jg
sti
addb
adc
shl
int3
push
loopne
lods
xchg
mov
pop
cmpsb
sub
add
add
icebp
stos
cwtl
cld
add
cmc
loopne
mov
shrl
push
fisubs
sahf
xchg
popf
movb
mov
pusha
js
sub
movsl
and
xor
dec
mov
xlat
mov
mov
repnz
rorb
xor
pop
sub
cmpsb
add
cld
sbb
adc
dec
dec
push
add
mov
push
call
sahf
mov
lcall
ja
shl
data16
jle
sub
jb
aam
stos
ss
int
push
scas
pop
outsb
mov
fcmovu
addr16
lret
push
sub
out
xchg
shlb
out
rcl
fsubrs
jecxz
dec
inc
fwait
and
popa
jl
jge
mov
ljmp
stc
daa
fsubrs
outsl
aam
jnp
test
cmp
outsb
into
pop
test
mov
test
mov
stc
jo
test
mov
loope
sub
test
mov
dec
lcall
sbbb
loopne
jo
or
frndint
aaa
inc
cmovle
mov
out
sbb
xchg
fidivl
add
push
and
jne
sub
jne
mov
aad
inc
call
mov
enter
imul
fldenv
ret
aam
mov
mov
mov
pop
das
test
lock
mov
mov
xlat
adc
cli
getsec
add
aad
and
lcall
filds
cld
pop
xor
getsec
adc
push
js
pop
daa
outsb
sbb
add
pop
or
jg
out
lahf
push
mov
cmp
cmp
pop
aaa
dec
rcll
mov
adcl
xor
in
sbb
mov
dec
adc
dec
xor
fwait
mov
clc
cmpl
dec
cmpsl
xchg
jns
call
in
imul
lods
inc
loop
jge
ret
add
call
sub
jle
stos
xor
xchg
and
int3
bound
popf
in
int3
xchg
jge
addr16
cmp
inc
xchg
cmpsl
dec
xor
push
testb
hlt
inc
xor
ror
inc
xor
fistl
mov
dec
and
loop
and
shrl
cwtl
cltd
fwait
ds
ret
xchg
adc
mov
and
mov
cld
orb
cmp
enter
popf
inc
pop
push
xchg
popa
repz
fadds
pusha
push
mov
rolb
adc
inc
add
insl
call
jb
clc
loop
sarl
add
push
push
xor
sbb
sahf
into
outsl
outsb
hlt
push
mov
aaa
out
bound
lret
sbb
mov
cmp
lock
adc
daa
lods
mov
and
mov
mov
mov
ror
incb
inc
inc
push
cmpb
and
orl
add
ret
loop
ret
xor
rorl
mov
mov
movsl
cmc
sub
jno
mov
mov
scas
xchg
cmp
or
xchg
movsb
stos
data16
daa
scas
xchg
lock
aas
test
ja
pop
inc
cmp
pop
iret
and
in
sbb
cmp
push
outsb
xor
fiadds
sti
sbb
add
sub
and
int
xor
sbb
ljmp
dec
sub
xlat
mov
call
sbb
xchg
or
fwait
xor
inc
cmp
filds
xchg
mov
ret
cld
pop
push
mov
ret
data16
clc
push
adc
outsb
mov
or
pop
shrb
insb
lock
out
js
pop
mov
sub
mov
imul
insb
repnz
add
jns
xchg
movsb
cmpsb
cltd
pop
mov
sti
jb
mov
pop
out
dec
lods
mov
add
movsb
mov
cmp
add
outsl
cmpsl
xor
push
movsb
sub
jnp
adc
mov
add
out
shll
stc
add
cmc
jo
pop
fadd
mov
lret
inc
jbe
ljmp
mov
mov
mov
fwait
pop
cmp
clc
loope
cmc
imul
cs
push
jge
push
and
mov
and
lock
xor
xchg
cmp
inc
fmuls
fcoms
and
pop
sub
cmp
lahf
jae
outsl
stos
push
aas
adc
or
xor
fcmovb
cmp
aam
ret
ret
jb
fcoms
dec
sub
mov
sub
clc
add
sbb
push
pop
call
cmc
test
bound
xor
subb
sub
jae
sbb
push
insb
xor
add
pop
aaa
add
shll
mov
cmpsb
dec
rolb
into
sub
mov
add
and
in
push
jecxz
jns
jle
lea
adc
add
pop
lds
sbb
sbb
push
sub
addr16
and
mov
test
mov
mov
cltd
ret
mov
scas
in
add
roll
cwtl
ss
sbb
add
sbb
mov
or
je
fs
and
js
rcl
inc
xor
dec
mov
sbb
fildl
test
push
add
dec
repz
sbb
and
mov
xor
pop
mov
in
pop
xor
repnz
xor
or
aad
push
sbb
push
cmp
sti
pop
aad
jbe
adc
popl
xorl
dec
pop
enter
push
aam
movsb
mov
inc
movb
mov
sub
or
mov
push
movsl
cmc
das
jo
sbb
cld
sbb
lcall
push
push
mov
insb
inc
or
jb
xchg
and
call
fs
data16
sub
jbe
mov
ficoml
cmp
jbe
add
push
fadds
fsubs
cltd
enter
popa
inc
xchg
push
jbe
push
out
sub
clc
lock
ds
jmp
outsb
mov
xchg
rclb
jb
mov
je
repnz
cmp
icebp
xor
and
hlt
and
enter
repz
iret
inc
aam
xchg
hlt
ja
lahf
jae
dec
or
sbb
push
add
cwtl
outsl
mov
ds
adc
push
or
mov
push
lahf
inc
sub
jle
imul
push
or
cmpsl
cmp
push
jo
imul
cwtl
xor
mov
clc
jno
sub
movsl
lock
sub
and
jae
pop
repnz
dec
jb
xchg
mov
jns
les
mov
pop
add
push
dec
push
add
ret
add
cvttps2pi
cmp
leave
bound
ljmp
rclb
aad
add
sbb
adc
jb
andl
scas
je
push
jp
fdivrs
mov
das
pop
outsb
sbb
add
push
les
je
inc
adc
xchg
addl
divl
push
call
pop
insb
or
push
jno
inc
stos
or
enter
jge
leave
mov
mov
jg
mov
adc
out
cmp
adc
imul
cmp
inc
xor
cs
adc
fsubl
test
pushf
add
pop
out
jne
rcll
xchg
mov
jge
and
push
sub
jle
cmp
cmp
mov
jmp
and
and
imul
movsl
add
sub
or
mov
shl
flds
push
inc
push
call
mov
sub
les
pop
lret
and
xchg
imul
xchg
pop
incl
push
aad
sbb
cld
imul
pop
push
stos
mov
push
or
sbb
pop
xorl
push
rcrb
add
and
movsb
and
fisubrs
mov
jae
nop
test
add
notb
les
dec
pushf
adc
mov
addr16
jg
mov
add
fs
into
std
or
and
add
fdivl
ljmp
jl
dec
jmpw
out
stos
shl
push
rcrb
cmc
push
sbb
jbe
mov
and
xlat
push
jne
arpl
cmc
jbe
pop
mov
ja
lea
mov
jns
jnp
icebp
rcrl
mov
adc
jmp
lea
stc
inc
add
ljmp
sahf
mov
adc
ret
xor
xor
mov
jns,pt
int3
pop
call
rclb
sbbl
je
imul
inc
xacquire
push
inc
idivb
xchg
adcb
sub
cld
call
pop
mov
fistps
inc
mov
imul
mov
mov
mov
mul
aaa
fidivrl
int3
push
or
fwait
cld
mov
and
hlt
cs
jnp
sub
fs
loope
cmp
insb
push
jecxz
ret
jecxz
dec
push
lret
and
xchg
dec
jle
push
shl
ja
in
cltd
repz
testb
inc
and
pop
test
mov
bound
leave
jns
mov
add
xor
add
cmp
stc
or
es
fs
das
mov
cmp
sub
fldt
int
push
cmpsb
or
xchg
stc
cmpsb
mov
xchg
dec
add
leave
mov
icebp
pop
mov
dec
ss
test
lcall
imul
rorl
xor
mov
mov
sub
jle
or
mov
sar
jl
dec
mov
daa
ljmp
gs
in
jmp
inc
pop
pop
leave
scas
mov
mov
sub
add
sti
test
movsb
dec
aas
pop
les
ret
shl
mov
aaa
push
hlt
ret
ja
mov
cmp
je
lahf
jns
sbb
xor
ret
and
ficoms
cli
push
mov
cmp
inc
add
outsl
fnstsw
xchg
clc
outsl
pop
adc
icebp
les
mov
add
lds
scas
inc
je
pop
inc
ficomps
inc
mov
xchg
pop
hlt
data16
bound
out
lock
fiadds
adc
jl
mov
outsl
sub
inc
shll
mov
insl
add
xlat
aad
jge
xchg
icebp
int3
aad
sbb
push
mov
cmp
cltd
insb
sub
sahf
jp
lcall
dec
push
adc
jno
mov
in
and
jo
push
sbb
mov
sbb
or
xor
inc
nop
dec
xchg
cmp
and
cld
pop
push
movsb
mov
mov
outsl
sub
jge
inc
mov
rcll
mov
inc
or
or
and
div
daa
lcall
daa
push
mov
aam
mov
adcl
ret
cmp
cld
mov
rol
out
pushf
jmp
arpl
adcb
cmp
add
test
sbb
xchg
sub
push
xor
outsb
out
jmp
cmp
jne
addl
mov
js
call
inc
dec
pop
insb
pop
in
and
add
or
push
pop
and
mov
sub
int
fwait
inc
push
push
add
scas
rcll
add
and
std
test
xchg
test
push
or
mov
xor
pop
xchg
fcoml
cli
cli
popa
arpl
pop
add
push
lcall
and
sbb
add
popf
negb
mov
in
and
dec
lcall
jmp
in
lcall
popa
ljmp
lods
nop
cmp
inc
cs
add
or
shll
dec
test
or
sbb
and
ljmp
mov
punpcklwd
cmpsb
aaa
mov
repz
nop
mov
and
clc
add
sarl
push
int
decl
out
pop
pop
push
xchg
xchg
pop
cltd
clc
push
and
pop
addb
jns
aas
cltd
in
inc
rorb
add
pop
nop
jp
add
mov
scas
aad
out
lock
aas
dec
insl
out
cmp
inc
cmp
or
push
inc
fidivrl
popf
enter
shrb
jns
push
jl
sub
iret
push
clc
dec
insb
mov
inc
xchg
mov
outsb
loopne
enter
xchg
pop
fists
insl
mov
push
fsub
divb
sub
sbb
sbb
std
push
insb
dec
in
cmp
outsb
jl
pop
cmp
push
xor
lods
adc
pop
add
cs
mov
imul
repz
add
xchg
jle
mov
pushf
jg
sar
leave
fldl
cli
fdivs
scas
inc
fsubl
addr16
mov
pop
dec
test
fwait
jl
aas
in
bound
jbe
add
jno
add
and
sbb
sub
mov
sbb
popa
insb
enter
inc
stc
jge
fmuls
jno
pop
ljmp
outsb
jecxz
pminsw
cmp
sub
fisttpll
or
test
int
xor
dec
dec
addr16
push
cmp
or
cmp
fldt
pop
out
xlat
inc
sbb
xchg
pusha
movsb
inc
lret
pop
dec
adc
popa
sbb
outsb
mov
fldt
addl
jns
aam
inc
inc
sbb
es
jge
push
enter
lods
enter
cmc
notl
aaa
pop
icebp
push
stc
inc
je
inc
js
pop
inc
inc
sbb
test
xchg
in
roll
out
cmp
icebp
xor
cmp
xchg
cmpsl
cmp
mov
dec
mov
mov
in
faddl
xlat
fadd
sub
bound
lahf
repnz
push
pop
loopne
lods
pop
clc
out
lret
cmc
lock
ljmp
aas
cld
cmpsl
inc
lock
cmp
sqrtps
hlt
rcrl
in
mov
sub
pop
xor
xchg
in
rorb
push
and
fdivs
fdivl
add
sbb
es
cs
jne
mov
test
sahf
inc
mov
jmp
push
lods
jb
fsts
pop
pusha
sub
mov
push
sti
leave
push
test
xor
movsb
sub
push
and
loope
popf
or
cmc
scas
jns
pop
sahf
mov
hlt
outsl
loope
std
push
mov
xchg
cmp
es
dec
mov
int3
jne
dec
mov
mov
lret
in
dec
xchg
dec
push
mov
inc
arpl
add
pop
mov
loope
push
ret
pop
xor
fs
push
mov
push
push
lcall
push
pushf
rep
jecxz
lret
xor
loope
mov
aaa
inc
daa
mov
jl
xchg
data16
cld
mov
sbb
and
sti
in
pop
nop
setno
leave
inc
inc
pop
or
or
dec
dec
xchg
inc
jge
mov
fisubrl
and
push
cltd
ss
dec
adc
imul
adc
ljmp
movsl
adc
ja
std
adc
mov
mov
rep
fidivs
xor
ret
add
imul
mov
cmp
movsl
je
inc
std
add
jae
xorl
ja
cmc
test
sti
push
int3
fidivs
fwait
push
mov
xchg
jnp
dec
out
movsb
cwtl
imul
jl
popf
cmp
aam
jmp
jae
dec
mov
insl
out
pop
nop
int
jl
jg
fidivrs
mov
ja
cld
decb
inc
bound
sbb
test
mov
mov
add
push
imul
xchg
out
or
sti
inc
daa
and
and
or
and
mov
mov
mov
into
or
repnz
xorl
mov
xor
sub
in
mov
push
pop
aas
cmpb
cmp
std
loope
cmpsb
xor
push
aad
fmuls
ror
and
add
inc
fcoml
pop
push
out
mov
movsl
sbb
outsb
xchg
cld
xor
call
xor
fs
sbb
sub
cmp
lds
jecxz
or
jle
inc
mov
mov
pop
pop
add
mov
cld
je
add
mov
int
test
test
lods
cmc
jmp
fisttps
dec
push
pop
add
in
push
pop
test
xchg
or
inc
sub
push
jp
loop
push
cmpb
fprem
adc
sbb
cwtl
sar
xor
sub
pop
push
loope
loopne
push
arpl
inc
xor
xor
cmp
mov
mov
inc
xor
sub
sti
or
xchg
pop
xchg
and
jne
jbe
daa
xor
sub
push
jo
xor
fildll
dec
pop
add
pop
xorl
xchg
arpl
orl
icebp
mov
dec
jg
adc
ret
push
shlb
and
or
out
sbb
test
shrb
call
add
icebp
cltd
insl
fbstp
add
aad
fisubs
or
cwtl
test
mov
cmp
sbb
orb
js
mov
fadds
and
in
nop
xor
mull
mov
mov
adc
add
mov
adc
mov
inc
cmpb
xchg
and
sub
cmpb
flds
sub
ret
rolb
xor
test
pop
jno
mov
cmp
hlt
paddusb
jne
pop
add
jmp
sti
enter
and
mov
inc
repz
mov
ret
jge
dec
testl
pop
adc
imulb
icebp
ret
mov
imul
push
sarb
jmp
jmp
sti
shrl
lret
sbb
and
popa
les
ret
je
shl
sbb
movnti
pop
orb
xor
aam
xchg
mov
xor
pop
call
cmc
orl
ja
jbe
and
pop
xor
sarb
and
xchg
loope
out
inc
sub
sub
fimuls
in
adc
ljmp
into
sbb
int
inc
mov
test
mov
scas
add
adcl
fwait
cmp
pop
or
fmull
xchg
sahf
mov
sti
mov
stos
and
mov
aad
faddp
sbb
push
mov
inc
stos
std
lret
jae
cmp
loop
xor
push
mov
je
cmc
adc
sub
sub
lea
mov
inc
adc
sbb
cmc
xor
pop
pop
cmp
sub
and
jo
cmp
mov
int3
pop
xor
jmp
daa
sahf
xor
ss
push
int
push
not
xchg
sub
les
push
jmp
pop
rcrl
stc
insl
mov
mov
fistps
xchg
cli
mov
shrl
lock
stc
mov
test
cmp
filds
mov
data16
adc
imul
xchg
pop
loop
leave
test
cld
inc
push
sub
xchg
pop
push
or
sbb
mov
lret
sub
jbe
mov
outsb
adc
loop
shll
loope
loopne
mov
push
xchg
insb
pop
adc
mov
in
push
js
sub
mov
mov
aaa
sarb
adc
add
jecxz
dec
cmp
hlt
jno
scas
pushf
jne
or
sbb
enter
cmp
sbb
adc
sub
rcr
mov
cmpsb
fnstsw
ret
imul
cmp
shl
test
mov
xchg
sbb
pop
sbb
jp
pop
pop
call
xor
cmpsb
dec
pop
inc
mov
xlat
cld
mov
fdivl
aaa
bound
lcall
lret
mov
cmp
stos
jg
jnp
pop
xchg
xchg
adc
xchg
sbb
aas
push
add
subl
lds
sub
xor
cmp
std
sub
xlat
rcll
inc
xor
mov
xchg
or
icebp
and
movsl
mov
mov
cmpb
icebp
cmp
sub
jmp
push
in
bound
repnz
sub
pusha
jne
popa
cmc
jmp
in
add
jae
pop
data16
dec
jnp
ficompl
mov
das
xor
cmpsb
add
dec
adc
lock
push
cmp
xchg
add
mov
pop
shr
daa
xor
xor
sbb
pop
aam
imulb
or
adc
stc
or
cmp
pop
adc
xor
cmp
cmp
add
xor
jne
pushf
mov
pop
ja
mov
outsb
jnp
jae
fmull
shlb
ljmp
sbbb
dec
lret
lret
fbstp
push
mov
sub
xchg
jge
daa
pop
sub
xchg
add
fnstsw
push
sarb
sbb
xor
leave
push
sete
or
jne
push
inc
aas
jne
mov
in
imul
outsl
xchg
ljmp
adc
es
pop
mov
sbb
mov
jnp
lock
clc
xchg
sub
inc
mov
push
fwait
mov
xchg
addl
aas
dec
pop
jge
lock
testl
inc
int
cmpl
pop
fcom
rorl
scas
jne
push
push
das
mov
push
jmp
xorl
roll
jno
push
mov
js
adc
dec
mov
push
aaa
call
mov
push
cmp
fldcw
push
fcomi
mov
rcl
mulb
adc
add
stos
mov
ja
sub
adc
push
mov
repz
cs
fildll
std
imull
push
push
and
mov
daa
add
outsl
add
mov
cmp
mov
stos
pushf
xchg
fcoml
cmpsb
adc
insl
xor
or
mov
test
jecxz
cmp
scas
dec
enter
push
ds
aam
imul
xor
in
or
int3
imul
push
sar
and
sub
clc
jb
dec
fbstp
adcl
cmp
jne
ds
rsqrtps
jge
sub
and
push
mov
mov
pusha
leave
ror
cmp
and
hlt
scas
pop
loop
imul
mov
out
movsb
pop
sti
cmp
mov
add
mov
mov
mov
insb
lahf
cld
das
js
insl
inc
or
pop
cmp
test
jo
in
xor
cwtl
mov
js
int3
ret
aam
cltd
out
inc
test
sub
adc
roll
sti
xchg
orb
out
xor
sbb
jae
push
lods
lret
xchg
inc
jb
add
js
xchg
jbe
jnp
cs
push
cmpsl
fwait
cmp
in
mov
std
push
inc
and
loope
stc
repnz
mov
xor
ret
add
gs
xor
xchg
or
and
int
jb
fwait
xor
clc
mov
popa
xor
dec
daa
pop
lock
pop
adc
xchg
sub
ljmp
lods
push
pop
jl
clc
jae
outsl
inc
andnps
cwtl
push
cld
adc
jnp
stc
mov
test
jbe
xchg
sub
ss
add
data16
test
mov
aam
xchg
push
cmp
andl
sub
cli
test
sarl
ljmp
mov
dec
jb
and
dec
flds
xchg
sbb
add
mov
pop
push
ss
jmp
pop
push
xchg
jp
inc
and
ds
pop
in
mov
xchg
push
push
outsb
js
adcl
gs
jle
lods
fimuls
ficoml
mov
cmc
add
dec
mov
jge
xchg
or
cmp
dec
mov
imul
pop
jl
dec
gs
mov
cmp
stc
xchg
cli
jmp
jl
imul
enter
ret
clc
dec
mov
in
fs
push
es
fwait
sub
stos
adc
gs
test
adc
imul
popf
or
cmp
cmp
popa
mov
sub
pop
sub
dec
xor
push
in
andl
std
cwtl
lcall
insb
stos
stos
cli
pop
sbb
and
in
mov
test
pop
push
pop
mov
ljmp
lods
adc
or
test
or
mov
jg
jp
push
xchg
fcompl
orl
push
and
fwait
repnz
out
andb
lods
in
mov
ret
loopne
adc
inc
adc
sub
push
cmc
cmpsb
mov
fwait
jmp
test
pushf
mov
jg
push
clc
push
sub
push
sub
sub
jmp
insb
adc
pusha
mov
jo
movsb
leave
xchg
outsb
es
cmp
cmp
push
add
andl
add
xchg
inc
dec
and
push
out
pop
scas
dec
aad
movsl
jae
iret
sub
mov
cmp
xor
jns
cmp
jecxz
lret
or
and
jl
sbb
or
ss
and
enter
filds
mov
dec
aad
jle
lods
mov
rorl
or
add
or
mov
or
fsubl
rcll
add
js
loope
fsubrs
test
or
daa
and
ja
in
pop
xor
or
lds
loope
dec
scas
mov
sub
ss
outsb
mov
repz
jmp
push
je
mov
and
and
xchg
outsb
loopne
cmp
es
mov
fwait
xor
pop
test
lcall
mov
pop
mov
stos
cmp
call
mov
push
mov
fnstenv
rorb
outsb
xlat
xor
popf
das
and
mov
or
push
test
in
loope
mov
cmovae
mov
test
sub
icebp
andb
mov
std
dec
cmc
lcall
imul
out
lahf
aaa
mov
pop
ja
out
dec
data16
fists
sarb
sahf
adc
jno
mov
stos
scas
inc
out
cwtl
mov
mov
clc
adc
pop
adc
mov
pop
out
cmp
into
mov
stos
and
dec
jmp
mov
mov
cmp
jne
jg
test
mov
pusha
jecxz
pop
mov
dec
xchg
mov
ss
and
aas
and
and
sbb
sbb
inc
cld
fcom
and
ret
mov
sub
cltd
cmp
and
loopne
xchg
ss
xor
add
push
js
mov
test
mov
call
rorb
push
ss
or
jl
cld
loop
or
imul
mov
imul
xchg
fs
push
adc
test
loope
aad
push
push
aas
loop
adc
cmp
mov
int3
inc
or
ja
shlb
xchg
sub
in
sub
andb
fstpl
lock
insl
dec
je
or
cmp
loope
xor
jae
stos
xchg
imull
sub
loopne
cli
xchg
aas
adc
sub
out
into
les
xchg
mov
mov
cmp
xchg
mov
orb
xor
jns
aad
push
jns
sbb
mov
dec
inc
push
out
jbe
sahf
adc
push
imul
stc
fwait
and
mov
dec
mov
lahf
push
jg
es
mov
ret
mov
xchg
inc
stos
stc
rcll
enter
lahf
adc
mov
pop
data16
cmpsl
fwait
sbb
mov
mov
insb
mov
lret
out
inc
loopne
jb
div
cwtl
push
out
xor
cmpsb
mov
std
cmpsl
stc
xchg
imul
js
loop
sbb
js
cmp
pop
jno
adc
cmp
fs
fld
or
test
ud2
mov
cmp
cs
dec
adc
je
pop
adc
popf
decb
sub
ffreep
sbb
mov
clc
mov
dec
in
bound
mulb
daa
mov
pusha
mov
xor
cmp
and
or
and
lret
insb
mov
idivl
loope
inc
fdivrl
subb
pop
out
and
sbb
adcl
je
sbb
or
repnz
xor
popa
xchg
ljmp
fnsave
or
ret
or
cltd
sbb
and
inc
add
leave
clc
mov
and
data16
fimull
enter
mov
cs
or
out
hlt
xor
add
cmp
pop
gs
mov
add
lds
push
mov
imul
cmpb
cmpsb
dec
movb
scas
adcb
dec
xchg
cmp
popf
cmp
hlt
sbb
shl
mov
addr16
cmpsb
adc
sub
sub
jnp
push
xchg
roll
and
mov
jns
jbe
lods
push
fildll
push
jbe
movsl
adc
push
cmp
sbbl
add
mov
aam
cs
clc
pushf
out
mov
rol
lods
in
cmp
jg
sti
out
pop
mov
aam
daa
cli
lret
mov
jbe
inc
sbb
arpl
lods
xchg
inc
dec
and
call
xchg
fnsave
cmc
cmp
icebp
and
cltd
andb
addr16
clc
jg
sub
mov
fadds
push
inc
mov
jae
outsb
pop
sub
in
icebp
gs
xor
cmp
xchg
lret
in
cs
cmp
add
sbb
pop
insb
popa
loope
in
divb
cmc
add
movb
or
mov
cmc
cmpsb
or
into
std
fbld
push
add
sub
int3
push
call
or
aaa
sahf
mov
pop
adc
cs
pop
hlt
sbb
popa
inc
mov
test
mov
ds
frstor
shll
mov
insl
and
enter
sahf
dec
xor
and
jle
scas
ret
outsl
in
push
outsb
insb
stc
cs
mov
outsb
cmpsb
push
daa
mov
and
push
push
in
and
lods
and
xor
xchg
dec
inc
and
add
sbb
ljmp
pop
inc
in
sbb
das
and
lock
cmp
sbb
cli
jo
movsl
aaa
jmp
out
or
dec
shlb
flds
jnp
and
popf
hlt
fistpl
fwait
jle
pusha
addr16
jg
and
shl
stc
mov
push
cmp
push
icebp
jb
xchg
aad
nop
push
cmc
pop
mov
sarb
subl
fwait
clc
xchg
push
mov
into
popf
int
xor
xchg
or
std
push
fnstenv
xchg
bnd
inc
adc
xor
push
pop
mov
mov
pop
pop
enter
sarl
rcll
push
adc
faddl
dec
test
in
xchg
pushf
loope
imul
ljmpw
roll
test
aas
sbb
ljmp
jp
arpl
mov
inc
mov
jge
push
ret
iret
ficoms
xor
mov
out
jo
loope
mov
int3
mov
out
xor
xchg
sbb
into
cli
and
mov
pop
pop
daa
jne
adc
xorl
mov
clc
mov
stos
jl
mov
adc
lret
insb
loopne
dec
cmpsb
jge
jnp
adc
addl
out
mov
jmp
cmpsb
push
xor
aam
sbb
mov
add
jmp
subl
sbb
xor
pop
jg
cmpsb
dec
loop
dec
mov
cmp
jne
jnp
push
testl
inc
loope
jnp
or
xchg
test
push
adc
mov
pop
sbb
out
adc
xchg
icebp
cmp
call
aad
in
out
and
pop
adc
jne
ss
std
mov
jae
jmp
jge
pop
pop
popa
jl
xor
mov
pop
jg
movsb
adc
mov
ljmp
jb
test
mov
push
inc
cmp
jp
pop
lds
ljmp
aad
lea
pop
push
in
out
add
clc
inc
fmul
dec
scas
push
lods
mov
in
pop
xchg
jnp
lcall
in
or
out
sbbl
push
adc
sbb
stos
repz
iret
adc
outsb
test
enter
add
sub
dec
add
pop
test
les
lds
pushf
gs
adc
jecxz
aam
cwtl
mov
adc
ret
pusha
dec
sarb
sub
xchg
jle
pop
adc
subl
fistpll
roll
pop
aaa
lods
push
movsb
inc
les
inc
ss
addr16
shll
cmpb
xorl
adc
popf
nop
push
lcall
negl
add
mov
sub
iret
mov
ja
test
in
sbb
sub
aas
and
repz
push
movsb
shll
imul
and
ret
push
movsl
or
adc
loope
cmpsl
lcall
addl
xchg
cmp
and
cltd
cmp
outsl
out
ret
sbb
and
lret
sub
into
ds
push
mov
jl
mov
add
adc
pop
pop
enter
sbb
hlt
push
bound
dec
cmc
loopne
mov
mov
dec
jp
std
nop
insb
mov
add
dec
pop
adc
mov
xchg
dec
inc
in
cmpsl
add
mov
inc
push
pop
push
xchg
mov
mov
and
or
repz
add
aam
add
inc
xor
gs
fsubr
pop
sbb
and
mov
sub
pushf
inc
add
mov
imul
mov
cmc
xlat
in
arpl
cltd
inc
ror
dec
pop
ret
cmp
outsl
sbb
scas
mov
xor
mov
dec
in
sub
cmpsl
cmp
pop
jbe
lods
repnz
add
pop
insb
add
or
std
test
push
xchg
xchg
ds
xchg
push
xor
xchg
add
dec
inc
mov
mov
test
out
cmp
adc
loop
add
xor
out
rorl
dec
mov
sbb
xor
inc
cmp
aas
incl
arpl
jae
dec
lahf
cmp
sbb
mov
jo
addr16
pop
lock
hlt
pop
jmp
dec
xlat
push
cwtl
sub
xor
jbe
push
lret
loop
daa
jnp
cmpsb
sbb
pushf
adc
mov
sbb
add
dec
mov
dec
jg
out
jmp
cmp
out
jo
mov
int
ja,pt
mov
std
fcmovu
pop
nop
jecxz
out
jne
pop
mov
jmp
mov
aaa
mov
jge
jle
lret
pop
add
push
lahf
sbb
fdivl
call
dec
inc
xchg
in
outsl
cmc
sbb
jg
aad
lock
stc
ret
loop
push
insb
add
mov
fimuls
aas
lret
jne
adc
cmp
leave
sbb
cwtl
call
dec
jbe
add
mov
pop
rcl
popa
mov
clc
sub
loope
call
cmp
xor
xor
add
insb
fisttpl
adc
movsl
cwtl
loopne
jns
call
lock
dec
add
push
xlat
cmpsb
pop
cmp
ret
sbb
nop
pusha
ret
stos
mov
lahf
sbb
xchg
stos
dec
sahf
sbb
aas
data16
jbe
adc
repnz
jmp
out
cmp
les
pop
lcall
push
ja
jbe
int3
stc
adc
inc
gs
inc
jnp
sub
adc
add
push
outsb
addr16
mov
jnp
int3
outsb
stc
dec
inc
jae
pop
cmp
sub
sbb
xchg
cmpsl
inc
dec
push
or
inc
xchg
add
jns
test
cli
loope
mov
mov
pop
lds
adc
mov
je
xchg
sbb
xchg
out
mov
sbb
clc
adc
rcll
scas
ljmp
lret
sahf
mov
inc
aam
outsl
dec
cmp
or
clc
ss
mov
fildl
cmp
add
mull
sub
xchg
mov
push
test
cmp
aam
in
hlt
bound
adc
shl
pop
cs
inc
and
dec
shlb
out
xchg
repnz
out
aaa
jo,pn
sbbl
xchg
adc
jb
std
sbb
out
add
rcll
fisubs
jmp
push
inc
hlt
nop
push
fs
mov
push
lock
in
mov
push
call
fildll
add
lock
lods
sti
pop
push
in
ret
add
arpl
addr16
in
shll
scas
das
push
push
xor
call
jle
test
icebp
sahf
sbb
dec
jecxz
xchg
mov
or
icebp
clc
push
arpl
scas
fidivl
inc
ret
adc
push
xlat
adc
or
and
rorb
imul
fadds
arpl
cmp
scas
xchg
test
xor
jno
mov
call
bnd
sbb
ljmp
mov
fidivrs
daa
xlat
push
dec
daa
xor
int3
sarl
sbb
push
push
mov
or
mov
shrb
cli
jmp
push
sbbb
push
decl
test
insl
aam
test
in
stos
mov
sub
push
cmpsb
push
scas
mov
pusha
pop
or
pusha
mov
and
dec
cmp
lret
sbb
rcrl
cmp
mov
std
lods
into
xchg
jb
xlat
ljmp
dec
and
nop
pop
xchg
xor
sar
xor
test
int3
mov
jno
adc
xor
cld
rorb
idivb
fisttpll
out
fildl
shrb
jmp
scas
std
inc
clc
adc
cmpsl
pop
fnstsw
adc
add
insb
inc
scas
or
jo
enter
inc
repz
repz
outsl
shlb
add
cmp
fsubrs
ljmp
lds
sahf
jmp
and
data16
call
mov
jo
out
mov
mov
adc
mov
pop
xchg
and
or
in
pusha
lea
jns
pop
fsts
out
call
rcl
push
les
sti
xor
cmpsb
inc
loopne
mov
add
cmp
out
out
loopne
xlat
jl
push
lcall
xchg
dec
xor
mov
stos
inc
lcall
lret
std
aad
xor
neg
andb
push
imul
mov
ljmp
dec
rol
cld
xchg
daa
je
push
inc
lods
sti
inc
lds
mov
inc
aad
or
in
stos
loop
in
sarb
in
jno
pop
xchg
popf
adc
jo
xchg
push
push
movsb
mov
icebp
lea
mov
mov
test
loop
imul
stos
push
je
push
adc
into
cmp
js
mov
movsl
xchg
cmp
jno
lea
mov
lock
xchg
sar
rcl
hlt
xor
ja
mov
cmp
test
xchg
mov
add
sbb
cltd
dec
inc
imul
mov
jne
jae
lret
sbb
pop
jo
cmpsl
jl
add
frstor
fnsave
jne
movsl
aas
nop
mov
inc
push
mov
jns
cltd
pop
in
inc
clc
enter
arpl
dec
jne
inc
sbb
int
dec
cmp
fs
ret
outsl
jns
ljmp
das
das
cmpsl
sbbb
sub
pop
icebp
lcall
subb
or
ljmp
into
mov
xor
icebp
cli
jo
pusha
jb
mov
lcall
icebp
add
push
decb
push
push
es
cmp
aam
jle
sub
sbb
hlt
mov
push
aam
call
push
lea
sbb
cmp
in
ja
lahf
sbb
fdivrl
xor
or
aam
adc
adc
mov
xchg
out
jg
lret
xor
mov
fcoml
imul
sub
jmp
add
bound
mov
outsb
or
mov
and
std
pop
xchg
ret
pop
stc
mov
fs
or
stc
pop
test
outsl
movsl
add
xchg
repnz
arpl
int3
lods
xchg
test
cwtl
or
into
es
mov
and
movsl
dec
xchg
icebp
pop
and
cs
in
sarl
jne
aaa
jbe
popa
jmp
loop
sub
fxch
pop
adc
mov
add
mov
lods
outsl
andb
movaps
shrb
cld
add
sbb
mov
xchg
pushf
mov
push
nop
jb
jmp
jmp
mov
ds
and
mov
sbb
loopne
cmp
add
es
into
repz
mov
push
jb
and
mov
lret
push
mov
test
mov
das
mov
lcall
push
test
in
push
mov
xlat
push
push
jne
xor
fnsave
int
mov
sbb
xor
test
mov
mov
ljmp
adc
inc
xor
and
xchg
stos
ficoms
mov
lea
hlt
lods
enter
mov
inc
cmp
leave
jg
iret
sahf
pop
mov
xchg
push
sub
cld
aas
stos
dec
xchg
pop
addb
imul
ss
out
jns
mov
cmp
or
or
movb
popf
loopne
sbb
rorl
decl
sub
sbb
lods
mov
fdivp
jnp
andl
push
push
push
mov
inc
gs
ja
test
mov
ss
popa
xor
stos
xor
outsb
lret
inc
sub
call
jge
mov
push
xor
imul
or
or
and
cmp
nop
repnz
rcll
push
icebp
stc
pushf
inc
imul
dec
xchg
pop
enter
movsl
cwtl
dec
push
out
xor
stos
add
adc
ret
pop
adc
dec
cmpsb
stc
addb
xchg
cmp
push
in
lret
dec
jecxz
jmp
jp
sub
rcrb
out
and
imul
xchg
xchg
mov
test
insl
or
jle
sub
aaa
inc
dec
aad
mov
inc
inc
insb
scas
shl
xchg
sbb
subb
inc
scas
mov
sahf
pop
push
xor
jno
cs
pop
test
cmp
nop
xchg
jae
xchg
push
enter
dec
mov
enter
iret
cmp
inc
bound
sbb
cmp
pop
pop
ficomps
js
inc
sbb
mov
sub
cmp
leave
dec
loope
xor
push
cld
daa
shrl
sahf
mov
ss
cli
mov
xchg
sbb
adc
lods
lret
and
arpl
cld
mov
cmpsl
aas
adc
test
mov
fs
push
cmp
jle
aad
dec
pop
add
pop
sbb
fs
or
mov
sub
xor
sahf
bound
push
or
xor
idivl
inc
jnp
jae
inc
sub
or
out
jno
gs
loop
add
dec
mov
cmp
gs
mov
inc
sub
lock
fisttps
xchg
sub
mov
cltd
insl
dec
inc
ret
bound
xchg
stos
int3
lcall
test
jecxz
ss
mov
push
xchg
sbb
lods
rcll
push
jae
mov
enter
adc
rcrl
psubb
leave
and
pop
mov
sub
mov
cs
xor
mov
sub
lods
xor
xchg
or
stos
jnp
mov
pop
in
test
cmp
addr16
push
jb
loopne
lahf
stos
shr
mov
pop
cli
push
outsl
push
add
mov
dec
insb
subb
insl
enter
sbb
mov
xor
enter
or
and
sub
adc
ftst
loope
mov
jle
dec
inc
out
xor
inc
addl
ss
push
icebp
inc
sub
stos
fadds
aam
rclb
std
lea
add
adc
xchg
sub
cmp
scas
aam
push
push
xchg
aas
push
data16
sub
sbb
pop
loope
lods
or
or
and
ss
stos
arpl
mov
sahf
cmpsb
mov
testl
cs
pusha
sub
sbb
push
sbb
popa
mov
xor
mov
orl
xor
insb
jne
cmpsl
mov
mov
lea
lahf
leave
add
xlat
or
add
data16
call
push
into
lods
shll
mov
jae
and
lahf
sub
call
jb
jne
shll
jmp
jns
mov
jnp
mov
sbb
test
mov
in
leave
ret
mov
mov
cld
repnz
dec
loope
cmpsb
out
dec
mov
es
adc
sbb
mov
hlt
jg
sbb
mov
push
cwtl
pop
adc
xchg
in
dec
in
into
xor
and
push
out
shrl
cmpb
ljmp
inc
push
xor
movsb
add
jp
cmp
jmp
out
cmpl
mov
flds
mov
push
dec
pop
sub
dec
outsl
mov
scas
dec
sbb
outsl
adc
aam
popf
ja
lcall
mov
outsl
or
ret
nop
push
aas
pop
jo
sub
push
fldt
imul
push
jge
sarl
push
aaa
pop
jp
popf
lahf
mov
out
sbb
xchg
pop
cmpsb
push
btr
jno
mov
lea
mov
push
pusha
stc
test
cmp
mov
rorl
je
aad
fsubrl
push
xor
mov
movb
push
cmpl
nop
mov
inc
adc
jmp
adc
fnstsw
mov
dec
jo
push
jne
push
jno
or
xor
testl
cmp
mov
sbb
sub
adc
movsb
cwtl
cmovp
fisttpll
inc
mov
int
lods
mov
jbe
or
insb
in
popf
sbb
pop
jecxz
in
loop
xchg
and
sahf
into
inc
sub
mov
and
add
popa
ja
jns
mov
pop
sub
fistpll
inc
mov
mov
jb
add
addr16
sub
mov
sbb
mov
mov
mov
pop
mov
insb
mov
ret
push
and
push
loopne
dec
filds
push
xor
sub
fsubp
push
hlt
das
insl
shlb
lcall
mov
mov
cwtl
lcall
xor
leave
lods
mov
js
mov
mov
inc
push
cmp
push
cmovne
in
lods
push
bound
jmp
out
aam
push
lret
inc
jg
cld
add
pop
sbb
sub
lock
xchg
testl
fildll
lods
mov
xchg
pop
fwait
mov
dec
xchg
aaa
sub
fildl
mov
lds
jb
loope
int3
mov
inc
jno
and
cwtl
mov
in
jp
inc
stos
test
inc
sub
adcb
das
adc
les
jecxz
adc
pop
loope
adc
pop
push
jb
test
mov
fisttpll
int
scas
test
xchg
xor
hlt
test
cmc
jno
lods
xchg
int3
jmp
fs
lods
xchg
mov
adc
dec
les
sahf
adcb
loope
test
dec
mov
jbe
fs
sbb
fadd
push
in
lret
jge
cs
jmp
data16
and
sub
pop
lea
mov
mov
sub
test
jg
repnz
roll
int3
std
lret
sbb
push
mov
pop
pop
lods
das
movsb
jnp
xor
and
outsb
mov
adc
leave
sbb
jg
pop
push
ljmp
or
imul
add
std
js
jmp
push
arpl
xchg
cmp
mov
int
ja
in
fxam
decl
mov
sar
fwait
mov
insb
mov
cbtw
jmp
xor
icebp
dec
jbe
loope
sahf
sub
negl
mov
lret
mov
jle
jo
sub
adc
js
cmp
leave
xchg
or
dec
sub
or
jno
xchg
rol
cmpsl
fsubs
xor
dec
sahf
push
cmp
xchg
pop
inc
or
aad
subb
outsl
stc
hlt
or
das
imul
mov
outsl
sub
js
xor
mov
lea
push
iret
mov
fs
xchg
sub
cwtl
cmp
xor
int
cmp
add
jno
stos
int
fcmovu
ret
push
add
mov
ss
lcall
aas
jmp
testl
add
scas
fdivs
cmp
ljmp
sbb
cmc
loop
pop
dec
xor
fs
mov
and
movsb
les
imul
add
outsl
jmp
mov
inc
in
mov
roll
test
jecxz
jp
ss
nop
cmc
clc
jns
dec
loopne
into
mov
dec
mov
adcb
shlb
pop
rcl
mov
lock
shrl
jp
insb
pop
xchg
fwait
aaa
mov
repnz
aaa
or
stos
jns
lods
out
jecxz
cltd
rcrl
xor
in
and
add
push
ljmp
lahf
div
insl
lods
sbb
out
or
inc
cmc
aam
ficoml
fsts
leave
outsb
push
jge
jae
pop
pop
and
imul
gs
pop
loope
cmpsl
dec
pop
imul
cmp
or
or
xchg
xchg
jp
shlb
mov
je
loop
cmp
out
clc
xchg
xchg
aad
das
stc
jecxz
xor
aad
dec
addl
jbe
add
loop
int3
mov
jns
call
fs
cmp
imul
out
xchg
rorb
in
das
adc
push
lcall
inc
pusha
outsb
add
xor
rcl
jmp
inc
aaa
pusha
push
sbb
xor
xchg
pushf
int3
into
mov
adc
pop
movsl
mov
xchg
sub
rorb
cmp
inc
jl
loop
xchg
pop
outsl
adc
nop
call
jp
test
popa
insl
jp
cmp
jl
xchg
add
jae
stos
es
mov
sbb
mov
loopne
mov
loop
push
sti
aas
fwait
sub
push
pop
sub
inc
xchg
and
loope
and
and
lods
std
adc
xor
cmp
jge
jns
mov
aaa
leave
daa
daa
xchg
push
push
scas
fwait
add
outsl
push
testl
shrl
cmc
hlt
xor
sbb
outsl
jmp
mov
jnp
xorl
push
mov
aas
andnps
sbb
insl
cmp
insb
pop
push
or
nop
sub
jb
test
gs
mov
xor
fdivrl
push
repz
lock
stc
dec
movsb
or
pop
inc
cmp
mov
xor
inc
mov
push
jp
les
mov
pop
and
sub
mov
icebp
add
xchg
pop
clc
test
dec
jge
and
mov
jmp
mov
sub
das
push
push
inc
cmp
aaa
movsl
cmc
rorb
divl
mov
cmp
xlat
addr16
xlat
lds
jne
mov
in
pop
cmpsl
mov
sub
push
lret
or
add
mov
in
pop
ror
hlt
addr16
out
mov
cmp
out
arpl
pushl
ret
xor
mov
xchg
mov
pushf
mov
jnp
mov
cli
jecxz
ljmp
and
mov
cltd
fwait
or
xchg
out
xchg
gs
jo
clc
daa
cmc
hlt
adc
test
and
aaa
mov
int
mov
lcall
jecxz
xchg
movb
sbb
mov
jnp
stos
add
mov
out
sbb
leave
stos
mov
sub
cmp
out
fistpll
aas
inc
cmp
std
bound
je
add
lcall
jnp
aad
imul
and
and
aad
dec
pop
pusha
pop
jmp
mov
and
jp
pop
int3
aaa
mov
fucomi
ret
xchg
xchg
js
int3
gs
in
mov
add
sub
loope
call
sbb
xor
add
mov
cmpsb
jp
mov
dec
sub
adc
int3
sahf
xchg
bound
xchg
into
jno
sub
and
xchg
mov
jle
and
sub
outsl
cmp
or
mov
mov
sahf
aad
arpl
xchg
dec
pop
imull
cmp
dec
jecxz
or
das
ret
sbb
jnp
pop
and
jl
dec
testb
jge
rcll
je
cmp
and
xchg
jge
out
push
fdivl
pop
cmpb
dec
xchg
addl
pop
jl
ds
imull
fs
jo
ds
mov
dec
lret
sti
add
insl
pushf
repz
jae
bound
decb
dec
mov
push
cwtl
cmp
mov
mov
push
sub
pop
xchg
mov
fadd
fistl
push
shll
push
sbbb
pop
push
enter
in
sahf
mov
loope
bound
loopne
fwait
inc
mov
mov
addr16
loopne
inc
scas
scas
or
shrl
aaa
add
subl
mov
loopne
add
out
lret
or
adc
inc
das
aad
aaa
cmp
shrl
mov
sub
and
lahf
enter
push
xchg
fidivs
daa
clc
jecxz
sub
shrl
mov
push
xchg
jg
adc
pop
mov
or
insl
pop
dec
or
fld
roll
fsts
or
inc
jo
lret
rorb
lea
xchg
aad
popl
ss
push
jmp
scas
lods
push
jns
bound
inc
sub
out
call
mov
sub
push
and
outsl
pop
adc
push
popf
adc
jl
push
sti
in
jmp
out
adcb
loope
stos
cwtl
cmc
xchg
imul
inc
lds
xchg
outsl
cmpsb
pop
test
xchg
fdiv
pop
outsl
xor
cmp
push
sbb
insb
fcmovb
pusha
shlb
xchg
sti
jl
jmp
xchg
or
lea
ss
cmp
sub
in
lcall
test
test
lret
push
pop
and
sub
ret
xor
push
mov
lcall
stc
mov
cmp
test
inc
jecxz
insb
jns
lcall
pop
pop
dec
std
ffree
bound
add
insl
cs
loope
lret
mov
sub
push
jae
jp
xchg
sahf
cmp
dec
xchg
rclb
cwtl
fisttpll
mov
stos
and
mov
mov
pop
mov
sub
pop
push
imul
and
add
mov
or
push
mov
test
bound
inc
enter
insb
dec
mov
lret
cmp
icebp
fmull
sbb
gs
das
xor
mov
prefetcht0
sti
xchg
clc
call
fs
mov
aas
movsb
mov
xchg
inc
ds
rcrl
mov
inc
and
sub
repz
ret
cmp
add
fisttpl
mov
fiadds
cmpsb
push
mov
sbb
popf
call
sub
push
xchg
stos
dec
xchg
pop
sub
mov
or
call
stc
jne
movsb
fisttpl
or
xchg
push
jne
xchg
push
pop
jge
jbe
loop
rep
stos
ret
mov
test
push
bound
subl
call
xor
jmp
orl
add
mov
cltd
jb
repnz
adc
mov
adc
cli
mov
into
jge
call
xlat
div
inc
idivb
add
sbb
in
xchg
insl
test
fs
or
outsb
mov
xchg
inc
stos
mov
int3
fwait
aam
xor
popf
jle
adc
aam
dec
mov
test
xor
iret
pusha
ss
stos
xchg
pop
arpl
cltd
std
xchg
mov
andl
lahf
mov
aam
ret
mov
xchg
popf
bt
jns
dec
push
movsb
cmp
xlat
jecxz
aaa
call
mov
xor
xchg
jg
rorb
mov
call
pushf
dec
push
add
mov
mov
sbb
cmc
js
es
ret
aad
jno
sarl
and
push
fidivrs
mov
jmp
out
jmp
dec
in
movsb
pop
incl
dec
push
into
das
test
inc
mov
add
fwait
push
lahf
dec
jl
or
push
loope
lods
jecxz
icebp
scas
push
adc
ret
jg
cmc
es
fwait
jae
lret
rcrb
xchg
push
xchg
jg
popa
test
xchg
adcl
xchg
pop
push
test
and
movsl
push
icebp
and
cltd
push
xchg
int3
mov
lock
notb
inc
or
xor
mov
movsb
jp
adc
flds
hlt
pop
ret
and
dec
clc
cld
mov
or
jnp
mov
add
sahf
mov
cmp
jb,pt
cmpsb
dec
dec
dec
test
mov
arpl
lods
inc
mov
loope
clc
decl
push
mov
mov
lret
pop
mov
clc
mov
or
les
sahf
pop
and
mov
or
add
jge
pop
push
les
push
and
jl
xchg
add
test
js
push
jp
xchg
fmuls
enter
jno
mov
push
in
mov
mov
sub
das
test
and
fmul
jmp
jp
fsubrs
jbe
fwait
enter
xchg
dec
ss
xchg
xor
mov
xor
or
or
mov
push
jne
push
xor
xor
insb
and
jae
jb
ljmp
xchg
jle
pop
dec
movsl
sbb
mov
and
mov
out
xchg
aaa
popa
push
jp
xchg
jecxz
lea
push
test
pushf
fs
add
mov
lock
cs
js
and
in
or
lahf
jo
dec
test
and
mov
dec
pop
fstpl
mov
shll
and
mov
cltd
mov
stos
mov
ret
outsl
dec
movsb
pop
inc
mov
add
mov
sbb
ds
xchg
outsb
sub
sti
arpl
sub
mov
pop
sbb
push
test
adc
arpl
leave
sub
aad
int3
pop
lods
mov
aam
into
add
fst
add
mov
mov
mov
in
push
dec
push
scas
xchg
xchg
cmp
adc
out
cwtl
ss
pop
das
bound
aas
pop
ja
cwtl
lret
pop
adcl
pop
mov
sub
add
sbb
arpl
repnz
stc
xchg
cmp
imul
fcoml
xor
lret
ja
dec
sbbl
lods
push
out
mov
test
test
push
je
or
sub
arpl
mov
mov
mov
sbb
shlb
cltd
sbbl
in
sub
das
jg
push
arpl
in
adc
push
dec
xor
out
inc
adcl
fnsave
shrl
pop
cwtl
xchg
lock
push
adc
xchg
ds
xchg
mov
adc
cmpb
cmp
sub
test
adc
ss
popf
xor
sbb
and
out
shll
ss
push
aaa
ret
sbb
enter
add
dec
test
push
sbb
or
cmp
es
setl
icebp
rcrl
xchg
adc
sub
testl
int
xchg
sti
icebp
add
popf
xor
mov
mov
dec
sub
in
orl
popa
mov
jns
adc
loop
or
fs
data16
scas
insb
jbe
inc
jae,pt
push
jmp
pop
lret
mov
cmp
orl
dec
cmp
dec
pusha
subb
pop
repnz
adc
lret
pusha
xchg
cwtl
dec
jno
dec
and
sbb
imul
fs
push
cmpl
xor
jp
aam
inc
mov
jmp
or
mov
sub
xlat
sub
mov
pop
mov
enter
incb
dec
xchg
xor
pop
scas
mov
add
dec
fidivl
fiadds
mov
xlat
xor
xchg
jmp
cmpsb
or
out
adc
movsb
out
cmp
and
lds
lods
push
cli
xchg
push
ret
xchg
pushf
inc
sbb
aam
mov
add
mov
push
sub
in
sahf
outsl
cmpsb
iret
push
into
lcall
sub
lcall
int3
mov
xchg
sbb
push
inc
xor
mov
lret
and
scas
push
dec
mov
lods
repz
les
mov
jo
out
and
mov
enter
sub
stos
in
inc
xchg
adc
fcoml
dec
xlat
sbb
sbb
es
push
mov
aas
jmp
imul
adc
xchg
inc
inc
into
leave
jge
lret
xorb
push
xor
pop
push
inc
lea
dec
dec
fdivrs
mov
sti
ljmp
mov
fiadds
mov
into
iret
jl,pt
rcr
xchg
xchg
adc
sub
push
inc
cmc
hlt
push
lods
popa
cmpl
jmp
and
andl
shll
adc
pop
push
gs
push
inc
inc
and
mov
adc
outsb
cmp
mov
mov
out
push
cmpb
pushl
pusha
adc
rorl
stos
adc
repnz
jmp
xchg
jge
cld
jmp
clc
mov
xchg
push
and
mov
or
gs
icebp
decl
and
and
jge
inc
out
fsubl
insl
inc
jns
xor
int3
outsb
sub
xor
movsl
mov
jae
dec
xchg
push
movsb
xor
xor
mov
push
adc
xchg
xor
mov
mov
cmp
addr16
cmp
fldl
sbb
in
jecxz
pop
pop
dec
add
cmp
cmp
sbb
pusha
pop
fidivl
fwait
in
out
not
addr16
pop
or
jmp
mov
mov
mov
test
push
push
xchg
ret
push
lock
dec
push
ret
add
add
and
loop
bound
pop
pop
mov
add
jns
aad
pop
jmp
add
jmp
in
mov
test
xor
insb
xchg
push
mov
scas
dec
es
mov
dec
adc
adc
dec
lret
xchg
mov
xlat
mov
cmp
jp
das
fstpl
addr16
jns
push
dec
mov
loopne
dec
fnsetpm(287
pushf
fists
out
in
or
out
daa
push
repz
inc
repnz
cmp
out
js
cmpsl
loope
xor
popf
sbbl
or
repnz
and
mov
popa
xor
test
pop
sbb
mov
cmpsb
js
test
xor
cmc
pop
lcall
popf
mov
sbb
out
mov
insb
sbb
mov
dec
dec
jnp
pop
or
movsl
mov
ret
cwtl
or
mov
movsl
add
aad
add
icebp
insl
jno
and
and
popa
xchg
pop
dec
xchg
cmp
jmp
enter
out
pop
sub
jmp
fs
movsl
dec
iret
mov
loope
mov
or
adc
xchg
push
xlat
in
sets
xchg
mov
cmp
jecxz
mov
aam
sbb
pop
push
inc
cmp
push
sub
dec
xchg
arpl
ret
aam
mov
xor
out
nop
sub
sbb
lock
sub
sub
mov
inc
int3
pop
gs
lock
jecxz
pop
or
arpl
xchg
js
daa
mov
cmp
pusha
cltd
or
jg
push
test
in
adc
xchg
ja
dec
dec
mov
repz
fnstcw
fstl
add
movsl
and
jg
roll
aaa
pop
lods
enter
inc
push
and
fs
pop
insb
stos
popf
imul
subb
fidivl
fstp
js
xchg
and
mov
pop
cltd
faddl
in
shlb
sub
aam
rcll
loope
nop
add
cwtl
mulb
adcl
movsl
fldenv
xchg
cld
xor
pushf
add
push
lret
orl
shll
or
aaa
insb
jnp
adc
leave
sub
sbb
xor
cmpsb
ljmp
and
or
aad
push
cmp
dec
dec
imul
xchg
cmp
jle
push
les
jp
jmp
arpl
addl
loopne
lahf
lods
scas
lods
scas
lret
fidivs
jp
jo
in
loopne
in
ja
jmp
mov
sub
pop
fcomip
cmp
jge
movl
out
mov
sbb
mov
test
mov
push
push
aad
je
sub
in
pop
daa
mov
jne
mov
in
int
in
scas
fstps
inc
mov
sar
test
movsl
js
or
cli
in
add
pop
dec
ds
mov
dec
cmp
into
lret
pop
test
faddl
movsl
les
xchg
hlt
int3
push
lods
movsl
jge
cmpsb
andl
lcall
insb
rcll
mov
jne
arpl
mov
jno
xor
aaa
cmp
and
dec
inc
adc
es
js
cmp
and
add
sub
mov
sub
sahf
orb
std
je
mov
add
cmp
mov
inc
cmp
mov
push
loop,pn
and
and
pop
stos
lahf
cmc
mov
xor
push
addb
out
outsl
mov
mov
adc
mov
iret
out
repnz
hlt
cs
pop
push
pop
pusha
sbb
rcrb
aaa
adc
ds
sub
add
inc
fsts
push
in
or
xchg
cwtl
add
dec
mov
out
mull
enter
mov
mov
push
ljmp
sbb
jb
bnd
pushf
add
es
ja
pop
dec
jl
jnp
icebp
mov
movsb
mov
into
jp
data16
repz
adc
out
loope
jp
mov
outsl
sub
cmpsb
das
xor
fmull
sub
dec
outsb
mov
test
add
andb
push
mov
jbe
les
ret
cmc
lcall
dec
and
sbb
adc
and
mov
jl
cmp
pop
and
adc
inc
cmp
test
mul
adc
pop
in
pop
mov
mov
push
push
ljmp
cmpsl
jge
shr
mov
fldenv
or
ss
sub
cmp
sti
rep
fdivrl
cli
jno
mov
insl
mov
lds
pop
inc
jno
leave
mov
mov
adc
jle
add
mov
adc
in
mov
adc
pusha
ret
sti
cmpsl
xorb
mov
ds
jmp
subl
repnz
sbb
mov
enter
or
push
jg
lret
sbbl
cmp
sti
adc
repz
add
mov
xor
adc
jmp
push
adcb
scas
mov
imul
insb
adc
stc
mov
inc
aam
pop
icebp
ja
xchg
test
sar
cs
mov
sub
mov
sbb
or
inc
dec
nop
lods
outsb
add
shl
xchg
repnz
xchg
lods
stos
js
or
cltd
mov
lret
and
dec
inc
pop
mov
mov
sbb
adc
cmpsb
xlat
out
js
or
shrb
pop
mov
popf
je
dec
jno
sarb
and
jp
sbbb
push
dec
test
rcrl
push
test
pop
test
bnd
data16
jnp
push
popl
leave
cmpsb
shll
stos
dec
movsb
movl
mov
enter
cli
loopne
pop
sahf
pop
scas
shr
pop
jns
faddl
testb
outsb
ret
sbb
sbb
inc
xor
jns
and
xchg
mov
xchg
in
movswl
jbe
pop
push
mov
mov
and
pushf
cmpsl
mov
mov
adc
inc
imul
int
orb
in
sbb
les
pushf
and
and
shll
test
push
fnstcw
outsl
or
jb
push
test
ljmp
ljmp
xor
aas
push
xchg
cmpl
pop
stos
cmp
les
pushf
mov
or
pop
ja
xor
adcl
loope
out
sub
mov
jmp
pop
and
pop
in
mov
mov
dec
cld
jns
pop
mov
pop
je
movl
cmp
pop
mov
inc
pop
dec
out
cld
xchg
pushf
imul
std
cmp
mov
imul
inc
in
stos
push
pop
jmp
mov
jo
push
outsl
and
mov
mov
cmp
xor
mov
mov
inc
lret
mov
xchg
xchg
xor
std
popa
out
pop
nop
xchg
cmp
push
push
mov
lahf
outsb
js
cli
sbb
inc
imul
push
sub
sub
sub
mov
into
push
lea
sahf
rorl
and
repnz
xchg
mov
jae
addr16
jge
shll
in
cmp
pop
or
ljmp
dec
movl
enter
push
sbb
insl
push
popf
iret
and
add
lret
sub
into
fmulp
push
mov
pop
and
inc
sbb
xchg
mov
stc
jbe
ljmp
cld
sbb
sub
mov
insb
mov
lret
aaa
adc
jle
hlt
xchg
push
sbb
pusha
ret
mov
shrl
data16
mov
sahf
or
inc
push
sub
ljmp
jb
dec
fldt
dec
cmp
popf
xchg
cli
sets
push
fildl
subb
idiv
sbb
stc
sarl
in
iret
pusha
test
cmp
lret
lcall
jle
dec
loope
inc
cmp
jbe
or
pop
in
sbb
push
adc
lea
xor
mov
dec
or
dec
push
inc
push
xchg
push
jg
dec
push
les
shrb
loop
mov
mov
fbstp
nop
cmp
bound
xor
clc
into
pop
movsl
xor
cmp
decb
dec
gs
inc
xlat
pop
mov
pop
push
mov
sub
mov
in
jmp
pop
cli
adc
mov
jecxz
cmp
jbe
mov
addb
adc
lods
dec
sbb
sub
add
mov
jg
repnz
stos
scas
divb
ret
sub
pop
das
stos
lahf
sarb
popa
mov
ljmp
rorb
lock
jmp
es
adc
popf
or
or
hlt
dec
orl
cmp
sbb
mov
stos
jl
jbe
pcmpgtd
jmp
cmp
pop
imul
push
xor
push
and
clc
rcrl
sub
sbb
pop
mov
lea
mov
imul
in
hlt
mov
mov
xchg
imull
daa
xor
movsl
push
data16
rorl
into
pusha
mov
lcall
cltd
fsubs
mov
xlat
loop
pop
leave
andb
cmovae
in
mov
sub
cs
push
in
cld
sub
dec
mov
add
pop
xor
neg
xchg
mov
int3
pushf
mov
cmp
es
ror
out
push
jns
mov
mov
fsts
mov
sub
into
mov
push
mov
add
jno
sbb
pushf
mov
mov
adc
cwtl
xor
addr16
mov
loope
enter
mov
and
js
std
pusha
and
int3
mov
mov
pop
sahf
pop
mov
lret
int3
xchg
inc
incl
mov
out
xor
sbbb
mov
and
xor
add
and
inc
sbb
sub
into
cmovno
xchg
jp
or
fwait
ljmp
pop
pusha
lods
or
jmp
test
or
jmp
pop
fists
das
stos
mov
enter
pop
adc
push
dec
xchg
nop
or
mov
outsl
mov
imulb
in
addr16
insb
pushl
push
push
mov
xorl
fisttpll
insb
sub
pop
mov
mov
pop
imul
fs
inc
adc
sbb
inc
jae
test
sub
add
push
cmpsb
push
jns
jg
pop
insl
ljmp
mov
xor
push
andl
sub
and
pushf
mov
negb
jg
inc
aad
aad
lods
cmp
xchg
mov
rcrb
jns
adcb
jns
popf
pop
jo
shl
or
inc
lcall
dec
sbb
mov
test
xchg
dec
xlat
js
in
xchg
sbb
fistpl
outsl
in
cmp
ret
jo
ror
imul
call
push
loope
addr16
add
shlb
xchg
add
jp
xchg
fcomps
test
jo
popa
inc
jo
and
cmpsb
adc
xor
lahf
dec
test
push
dec
insl
int
insl
insb
repz
cmp
es
mov
clc
rcl
dec
xchg
pop
mov
stos
test
pop
sub
dec
stos
pop
pop
mov
test
pop
div
mov
jbe
clc
sahf
roll
fwait
bound
dec
out
and
pop
pop
movsb
ret
loope
cmpsb
mov
sti
push
je
cmpl
push
js
fisubl
and
adc
scas
push
aaa
sarl
outsl
xchg
ss
aam
repz
ljmp
pop
sub
movsl
mov
lea
shrl
lock
addr16
xor
mov
test
arpl
repz
xchg
lahf
loope
in
add
inc
dec
outsb
rcrl
dec
rorb
xchg
pusha
cld
xchg
mov
nop
pusha
in
imul
sbb
adc
aas
inc
rorb
jns
sbb
es
xchg
test
iret
nop
data16
mov
daa
hlt
outsb
adc
scas
loop
cmp
insl
jae
cmp
mov
fistpl
fstps
xchg
test
outsb
pop
std
push
mov
pop
cmp
and
cltd
push
ret
jns
mov
shll
pop
loope
xor
mov
out
ljmp
clc
out
dec
repz
sar
mulb
gs
xor
scas
jg
sahf
aaa
stos
pop
push
pop
mov
shl
fs
push
push
pop
stos
push
in
adcb
sbb
jnp
addl
cmc
mov
push
and
or
adc
jbe
aaa
xor
mov
push
dec
test
aaa
out
lahf
dec
gs
pop
cwtl
fisttpl
lods
mov
rcl
add
shll
xchg
push
mov
arpl
fisttpl
int3
stc
mov
sbb
es
push
int3
push
outsb
call
je
add
sub
mov
sti
out
inc
pusha
xor
mov
add
out
pop
inc
pop
pusha
or
pushf
lea
and
dec
shlb
pushf
push
cmc
and
icebp
aas
mov
jl
dec
lret
pop
add
ret
mov
push
xor
sub
inc
lods
test
or
push
xchg
in
aad
sub
push
icebp
mov
bound
mov
pop
sub
out
out
rorb
mov
pop
xchg
sub
push
and
mov
push
jnp
and
jnp
jne
int
cmpb
fisubrl
and
xchg
dec
repnz
mov
sbb
repnz
lret
das
adc
mov
mov
insl
mov
aam
pop
lahf
daa
sub
jecxz
jp
out
cmp
mov
pop
sbb
xchg
hlt
daa
mov
fidivl
pop
dec
push
xchg
dec
icebp
mov
int
les
out
jp
rcll
jo
dec
push
jl
test
stos
xchg
mov
mov
imulb
jns
sahf
test
sbb
scas
dec
jne
std
scas
push
jmp
xchg
sbb
ficomps
rolb
xchg
fbstp
xchg
push
repz
bound
push
shrl
iret
lcall
add
rorb
loopne
ljmp
leave
dec
xor
xor
mov
mov
jge
pop
and
pop
inc
sub
sbb
xor
iret
repnz
shr
xchg
dec
imul
mov
out
xor
das
daa
repz
mov
ja
pusha
or
lock
xlat
bound
cmpb
add
mov
xchg
xor
daa
adc
jnp
push
dec
jne
rorl
sbb
fsubl
rorl
pop
sub
movsl
jl
pop
adc
mov
nop
mov
rcll
int3
int3
adc
sub
movsl
jl
pusha
mov
mov
std
mov
mov
das
fadds
lcall
jno
inc
mov
mov
sub
sbb
pop
std
repz
cwtl
jb
jecxz
sbbb
or
loop
fisubrs
jne
iret
xchg
sbb
insb
push
push
sbb
arpl
scas
add
jnp
ret
dec
pop
jne
imul
adc
loopne
gs
sbb
add
enter
mov
jmp
movsb
daa
imul
sti
test
push
testb
or
add
inc
les
aam
mov
pop
jecxz
add
cmp
pmaddwd
and
add
mov
and
in
jbe
jge
ds
test
pop
sub
fwait
fwait
out
mov
xchg
in
ret
repnz
dec
int
into
mov
add
xchg
adc
cmpsb
sbb
test
out
pop
fistpl
out
push
xor
clc
mov
or
or
out
stos
mov
cmpsl
ficoml
mov
push
test
into
fwait
jg
les
divb
cmp
out
mov
test
test
jl
push
rolb
outsb
cmp
roll
sub
xchg
sbb
call
in
push
int3
test
iret
add
in
and
popf
fsin
inc
lods
cmpsb
adc
and
push
subb
lret
inc
jg
inc
cld
int3
dec
adc
shll
push
cmp
les
mov
leave
aam
popa
add
cmp
test
das
add
adc
movsl
sub
adc
gs
xchg
scas
inc
fstps
lret
and
insl
lcall
in
into
out
lret
jecxz
xor
push
movsl
inc
loope
sbb
ficoml
lahf
fnstcw
mov
aad
in
orl
mov
das
clc
cwtl
push
sbb
and
jecxz
jp,pt
mov
movsb
enter
js
or
xor
ret
mov
rorl
mov
xor
mov
jnp
rcl
jae
in
fucomip
and
movsb
adc
adc
adc
andl
jg
hlt
movsl
inc
mov
stc
and
mov
mov
ss
mov
sbb
add
xor
jge
iret
arpl
mov
mov
sbb
push
push
es
fbld
or
inc
sub
mov
add
ss
pop
std
lretw
cld
insb
mov
mov
mov
inc
iret
lahf
movl
rcl
jg
sub
aam
js
icebp
and
call
rcll
push
push
mov
cs
andl
aam
cld
loop
sbb
ret
xchg
sahf
into
fmuls
loop
pop
mov
push
mov
xchg
movsb
sbb
jb
push
push
fcomp
push
jns
cmc
imul
je
mov
and
daa
mov
push
fs
inc
aad
sahf
fadds
jne
push
mov
loop
jl
push
fdivrp
movsl
xchg
repnz
pop
xchg
imul
push
daa
repnz
mov
fcmovne
frstor
ret
outsl
mov
aam
cmp
enter
mulb
shlb
mov
pop
test
fisttpll
pop
ret
sahf
jecxz
cmpsb
mov
xor
mov
fcomi
pop
inc
in
sub
sbbl
cmp
lahf
and
pop
push
jg
mov
cmp
aas
ret
xchg
pop
adc
ret
in
shlb
cmp
iret
fwait
mov
mov
stos
mov
lds
adc
mov
dec
rclb
xchg
and
sbb
lret
cmp
aad
call
cwtl
fsubp
and
push
add
aam
mov
push
xor
mov
inc
inc
in
xor
jae
adc
push
int
in
jo
aam
adc
dec
inc
inc
out
mov
lods
int3
jns
pop
cmp
xchg
sub
jmp
ret
lods
loop
and
subl
mov
fs
aaa
xchg
mov
pop
pop
cmpb
shll
cli
lock
push
inc
push
rcrl
pop
mov
aad
cli
jae
sbb
and
inc
sbb
xor
xchg
dec
push
inc
add
icebp
test
test
les
in
scas
sahf
push
in
and
arpl
pop
in
fldenv
jno
cltd
inc
push
das
sti
cltd
and
inc
cmpsl
fmul
movsb
iret
pop
cmpsl
mov
push
decl
shl
aam
sub
sbb
mov
iret
inc
inc
je
push
fcmovu
jmp
aam
bound
lret
arpl
inc
imul
rclb
cs
or
cmp
pop
xchg
test
je
add
mov
add
push
bound
jmp
out
jne
dec
scas
push
sbb
mov
nop
icebp
jno
out
sbb
aad
push
jae
mov
push
mov
cmc
aaa
in
pop
mov
mov
cld
test
adcb
mov
dec
sbb
push
cmpsl
sbb
iret
bound
ret
call
mov
test
stos
stc
aas
lret
push
sub
sub
mov
aam
fsubs
stos
loope
test
and
sti
pusha
xlat
mov
sub
pushf
pop
adc
ficompl
jmp
xor
ss
mov
sub
scas
xadd
insl
shll
out
push
test
clc
xchg
dec
jae
pop
movsl
push
xor
mov
mov
dec
rcll
pop
pop
and
mov
push
sbb
push
adc
scas
inc
cmp
xchg
roll
and
add
sbb
insl
jge
push
daa
lret
addr16
fsubrl
sbb
pushf
lods
stos
jne
xchg
add
jnp
out
scas
cmp
push
outsl
dec
jbe
mov
push
mov
ja
xor
xchg
adc
cli
int3
xchg
jmp
aam
stc
pop
shll
inc
int3
shrb
pop
sub
xchg
inc
int3
sti
dec
push
mov
dec
jp
lods
ficoml
movb
dec
or
lods
gs
lret
iret
out
xor
sub
test
add
inc
lcall
jmp
test
in
shl
pushf
jmp
adc
and
jb
outsb
or
or
test
and
out
lods
stos
test
stos
xchg
shrl
sbb
mov
mov
xchg
es
inc
dec
incb
je
enter
pop
sbb
xor
xor
dec
dec
dec
jae
test
pop
cmp
mov
ret
dec
and
sub
sub
cmp
cli
dec
cli
stc
roll
xchg
lods
dec
repnz
inc
repnz
fimuls
mov
fcmovnbe
add
aam
std
mov
aaa
xor
popf
adc
daa
jmp
nop
sbb
mov
mov
xor
pushf
pop
push
ss
or
ljmp
addr16
arpl
mov
dec
adc
and
xor
jns
xor
adc
xchg
fsubrl
lock
js
mov
fisttps
int3
les
pop
neg
test
mov
clc
mov
cmp
loope
insb
push
insb
dec
push
sub
out
test
scas
dec
mov
cmp
xchg
int3
pop
mov
dec
cs
jg
hlt
xchg
or
imul
mov
sbbb
push
les
pusha
mov
cli
pop
xor
jb
xchg
aam
pop
outsl
fldenv
or
push
mov
xor
rcll
stos
hlt
xchg
fcoms
push
jb
lods
mov
adc
std
sbb
pushf
jns
add
sbb
push
popa
mov
xor
cld
lahf
dec
outsl
inc
or
lods
shrb
xchg
push
cwtl
or
rclb
in
push
or
xor
adc
lahf
and
fnstsw
orl
and
out
mov
add
dec
in
mov
cmc
or
sahf
cld
xchg
mov
repnz
std
lock
arpl
popf
cmpsb
push
int3
movsl
and
cmp
inc
mov
pushf
cwtl
jno
cli
and
mov
lea
pop
pop
jle
cmp
scas
adcb
lock
shrl
cmp
jmp
nop
xor
mov
adc
and
xor
mov
pop
and
lods
daa
insb
jecxz
jmp
call
mov
mov
lea
sbb
mov
sub
in
ficomps
xchg
daa
ret
in
lods
lods
sbb
rorb
test
sub
or
mov
addb
leave
lcall
andl
jmp
sbb
fists
adc
jns
lock
or
insb
test
xchg
jne
push
pop
adc
dec
lret
push
pusha
ss
ret
push
data16
jns
pop
subl
xor
jecxz
test
dec
pop
sahf
push
xchg
hlt
enter
aad
inc
inc
sub
adc
push
dec
mov
lahf
inc
into
dec
rolb
mov
inc
adc
loop
ljmp
lods
xor
out
sub
fisubl
dec
jns
out
js
and
cmc
adc
push
iret
lret
fiadds
icebp
mov
bound
dec
in
add
in
pop
add
lods
roll
repz
popf
jg
mov
cmp
push
dec
clc
mov
in
test
outsb
shll
xor
movsl
mov
add
lods
pop
lret
rclb
push
ret
loop,pt
pop
test
pop
sbb
movsb
inc
inc
or
hlt
fdivr
enter
shrb
nop
dec
ret
xor
push
ds
mov
inc
aam
dec
push
mov
ja
test
fisubl
and
std
arpl
mov
aam
scas
mov
shlb
ljmp
cmpsb
xor
jl
xchg
dec
ds
inc
adc
imul
inc
sub
imul
int3
clc
jb
clc
push
adc
dec
ffreep
shl
xor
push
xchg
scas
aad
fisubrl
sti
fisubrl
jmp
push
cs
arpl
push
movsb
cmpsb
jmp
add
mov
test
test
xchg
icebp
in
and
push
inc
push
xchg
cmp
or
xchg
and
push
test
ss
mov
pop
gs
mov
rcl
ds
add
rol
jl
das
sbb
outsl
dec
stos
mov
jg
or
call
push
mull
add
or
jns
fdivrs
xchg
add
mov
push
xlat
movsl
ja
dec
sbb
adc
lock
clc
negl
mov
ret
xchg
mov
add
lcall
out
or
inc
cmpsb
adc
daa
mov
push
cmp
and
mov
nop
arpl
and
xchg
sbb
mov
mov
dec
adc
mov
or
pop
jg
lcall
stos
pop
cld
pop
std
push
and
or
outsl
xor
add
sbb
mov
sbb
stos
insl
jmp
sti
mov
inc
mov
imul
dec
in
lcall
cmpsb
outsl
sub
ret
jne
pop
mov
jae
push
stos
xor
xor
outsb
shrb
mov
sbb
pop
inc
fcoml
and
pop
cli
ss
mov
pop
mov
xor
jg
inc
mov
pop
mov
xchg
mov
mov
push
cmp
enter
mov
cwtl
aas
add
lock
sbb
shr
jo
mov
loop
call
xchg
gs
xchg
or
dec
cmpsb
ljmp
gs
xchg
or
iret
enter
mov
out
mov
mov
adc
push
hlt
pusha
push
and
test
mov
xchg
push
jb
inc
out
decb
stc
cld
sub
xor
clc
std
sbb
inc
xorl
test
dec
iret
icebp
popf
pop
cmp
cmp
imul
xor
inc
mov
xchg
xor
xor
mov
imul
add
mov
and
mov
dec
arpl
or
adc
out
sbb
loope
mov
dec
enter
out
inc
cmp
add
adc
stos
sbb
push
fsubrs
mov
mov
push
cmp
mov
aam
mov
pop
cmp
pop
inc
ds
pop
adc
addr16
or
adc
cs
mov
movsb
mull
fmull
xchg
outsb
stos
lret
cmp
pop
cld
mov
add
push
stos
jns
pop
lret
sti
dec
divb
ret
jbe
add
insl
stc
cld
push
test
pop
hlt
sub
std
aam
add
push
in
mov
insl
out
in
cmp
rcrl
shll
stc
mov
repnz
jle
xlat
test
jmp
cltd
xchg
mov
add
repnz
add
enter
xor
lret
je
daa
fdivs
iret
xchg
sbb
iret
adc
adc
cmc
lds
or
ljmp
neg
sbb
jae
lcall
pop
shll
sbb
sti
xchg
pop
mov
sbb
leave
rolb
xchg
insb
xchg
push
or
mulb
mov
jne
aaa
clc
ffreep
or
arpl
mov
test
jne
cmpl
push
sbb
mov
enter
sub
push
addr16
inc
out
out
gs
mov
xlat
dec
rorl
mov
ret
xor
pop
aaa
rep
push
stos
cmpsb
mov
or
addl
subl
rcrl
xlat
mov
int3
sbb
ret
lret
imul
add
in
mov
mov
into
lea
inc
arpl
in
cwtl
mov
mulb
add
and
jecxz
jmp
push
sbb
mov
ret
adc
push
cmp
repz
xor
loope
xchg
jle
or
inc
push
jl
leave
rol
push
sub
sti
sub
inc
xor
xchg
add
sbb
stc
cmp
sub
nop
mov
or
dec
mov
xor
sbb
jns
nop
aam
fwait
jge
or
sti
xchg
aad
aad
cmp
in
call
out
scas
stc
hlt
cmp
shl
iret
inc
rcl
ss
mov
xchg
daa
pop
jg
addr16
shrl
gs
stos
mov
jle
xchg
push
leave
push
out
and
lcall
sarl
ficoml
into
fnstenv
scas
mov
and
push
fwait
xchg
cmp
adc
push
pop
inc
dec
out
xchg
mov
clc
subb
lret
push
xor
sbb
mov
or
out
mov
mov
fmull
aad
mov
adc
in
ja
sbb
xlat
mov
iret
or
std
scas
jns
cmpsl
call
sbb
popl
movb
jnp
fwait
in
xor
xchg
movsl
outsl
push
push
subb
push
or
leave
cli
gs
pop
daa
cmp
pop
inc
xor
or
aam
sti
add
xchg
je
cmpsb
cli
loope
push
inc
rcr
cmp
jne
aam
fnsave
inc
adc
insl
clc
int3
push
nop
popf
xor
roll
test
mov
ljmp
mov
lock
adc
cmpsb
fwait
dec
daa
sub
sti
ret
xor
inc
jmp
sbb
ja
pushf
pop
dec
or
daa
inc
adc
and
lods
mov
aam
ret
sbb
mov
into
sbb
ds
cs
sub
pop
jle
push
inc
jg
dec
jo
enter
xor
clc
push
mov
into
movsb
arpl
mov
sbb
adc
fildl
out
das
sbb
out
or
xchg
xor
lods
addb
adc
neg
xchg
jecxz
mov
insb
cmp
ja
mov
or
nop
dec
and
xor
popf
sub
out
push
sub
dec
lock
in
add
rorl
dec
imulb
aam
jno
lea
lcall
xchg
jmp
push
push
mov
in
jo
cmp
or
mov
ljmp
pop
lea
loop
mov
lds
popa
sbb
dec
lods
cld
push
mov
and
insl
push
mov
lods
data16
xor
dec
movsl
push
mov
es
xchg
jo
fnsave
jmp
jle
sub
push
lods
ljmp
std
loop
test
stos
repnz
add
jb
pop
push
rcl
icebp
imul
in
cmpsl
cmp
mov
lret
sbb
sbb
movsb
push
lcall
imul
repnz
rorl
pusha
out
push
sub
out
lret
leave
xor
dec
out
mov
lds
das
pop
sbb
dec
sub
cmp
push
jl
xor
stos
insl
inc
or
orb
xchg
xor
imul
addr16
fidivrs
jg
mov
rclb
pop
popf
cltd
popf
inc
int
inc
flds
mov
ss
dec
add
inc
subb
aad
hlt
mov
jne
insb
int3
loope
dec
out
adc
mov
out
andl
cmc
inc
fsubrl
sub
pop
addr16
jbe
xchg
adc
push
mov
inc
ljmp
pop
mov
mov
rcrl
xor
popf
adc
jg
inc
nop
iret
sbb
hlt
fsub
pusha
dec
shlb
pop
pop
lret
repnz
jnp
inc
add
rcrb
fdiv
jmp
dec
pop
imul
adc
or
jp
mov
ficompl
sbb
or
push
pop
push
outsl
xor
aad
dec
push
mov
add
shlb
mov
pop
fwait
ss
cmp
jns
inc
sbbb
push
scas
pop
push
loopne
es
sarl
cmp
or
stos
movsb
jmp
mov
jns
neg
cmpsb
pop
mov
xor
test
lods
daa
xlat
test
sub
dec
mov
mov
lahf
jne
fdiv
sub
or
xor
cmc
out
js
ja
and
shrb
and
adc
push
cmpsb
std
jl
arpl
pop
movsl
inc
repnz
push
dec
pop
aad
push
clc
xor
stc
jns
jecxz
lgs
test
loopne
imul
mov
lock
movsl
cltd
sahf
das
pop
stos
mov
inc
rorl
dec
pop
dec
psubsw
push
vmovntps
pop
sbb
dec
mov
sub
outsb
cmp
jmp
lds
xchg
pop
inc
popa
fiaddl
inc
push
xchg
shlb
fdivr
jae
fildl
pop
dec
cld
cmpsl
xchg
in
mov
xor
sahf
jo
icebp
ret
jg
mov
adc
ror
or
mov
adc
lock
pcmpgtw
popa
xchg
mov
loopne
scas
dec
mov
and
out
in
adc
test
or
mov
jns
cmp
mov
mov
and
bound
gs
xor
sub
loop
pop
sahf
jnp
push
push
jp
loope
cmp
add
cmp
out
ret
adc
jle
mov
sbbb
mov
rcr
lock
out
int
xchg
lret
cld
in
pop
aam
data16
js
inc
mov
mov
subl
movsl
test
inc
xor
or
or
mov
inc
push
lret
mov
inc
cmpsb
shlb
mull
inc
fwait
pushf
mov
test
add
imul
mov
roll
nop
push
out
push
mov
pop
adc
xlat
sbb
cmpsb
cmp
mov
cmp
addr16
xchg
mov
mov
jb
inc
fdivs
dec
bound
sub
out
cmp
enter
add
and
add
cld
cmp
loopne
into
lods
sub
inc
push
mov
push
imul
mov
jle
mov
jl
es
fidivs
ret
jle
daa
mov
mov
test
mov
notb
fwait
in
jle
pusha
push
repnz
pop
push
out
popa
dec
popf
mov
mov
sub
push
scas
data16
imul
dec
or
xchg
jmp
aas
les
mov
dec
mov
fstl
sub
bound
imul
cs
mov
push
lret
inc
imul
xchg
jl
ja
movsb
and
nop
pop
adc
lret
adc
push
pop
std
aaa
out
or
dec
adc
adc
mov
inc
mov
rcrl
sbb
lcall
ja
mov
jmp
lret
push
cwtl
sbb
cld
xchg
mov
je
jge
and
rcrl
insl
mov
mov
pop
pop
aam
leave
pop
loop
icebp
dec
mov
and
hlt
fisttpl
pop
stc
mov
dec
mov
push
xchg
push
into
das
adc
fcmovu
adcl
js
pop
scas
stos
test
ja
test
icebp
nop
xor
push
lret
mov
in
add
sub
push
out
les
aam
dec
or
inc
cld
out
inc
hlt
xchg
dec
fstl
ja
add
pop
push
mov
repz
fldenv
xor
add
and
and
mov
call
jno
inc
sub
xor
lock
pop
aam
lcall
and
sub
icebp
sbb
cmpsb
loope
mov
adc
lahf
xchg
mov
and
xor
mov
ud0
add
je,pn
mov
push
push
inc
xor
loop
mov
enter
xor
mov
out
xor
bound
lsl
sbb
jle
insb
push
inc
push
inc
push
xchg
lods
xchg
xor
sbb
js
repz
xchg
sub
outsb
scas
sbb
hlt
aaa
mov
xchg
cltd
lcall
fdivl
inc
lods
cmpsl
mov
movsl
ror
mov
sbb
insb
sub
mov
pop
pop
mov
fwait
in
push
dec
and
mov
lahf
sub
sahf
movsl
aaa
das
dec
leave
push
mov
mov
mov
push
dec
adc
out
js
mov
mov
imul
pop
adc
insb
xchg
cmovge
jae
call
xchg
sbb
mov
popa
les
sub
xlat
push
sbb
repnz
lock
jno
stc
mov
sub
mov
ret
test
iret
jae
dec
imul
outsl
out
mov
cmpsl
sahf
adc
clc
xchg
xchg
and
sub
push
stc
dec
and
fidivl
out
pusha
dec
enter
aas
div
cmc
push
mov
push
insb
popf
mov
outsb
pop
pop
mov
cs
gs
rcrl
movsb
sub
and
das
ds
cs
lds
jae
jmp
cmp
add
cmp
iret
in
loope
scas
mov
sbb
inc
sub
adc
divl
faddl
or
fstps
stc
cmp
pop
leave
mov
ljmp
cmp
adc
rol
or
insb
inc
out
iret
sub
cs
xchg
vmovdqa
and
add
sti
inc
mov
pop
arpl
lock
sub
mov
mov
mov
adc
xlat
aas
jns
movsw
inc
dec
lea
inc
mov
jp
adc
push
lcall
ss
jne
mov
or
icebp
and
pop
push
aam
cld
les
add
mov
xchg
cltd
mov
cmpsb
mov
aas
fdivrs
xchg
dec
int3
imul
js
mov
pop
jle
pusha
lock
jnp
je
movsb
out
mov
dec
scas
cld
mov
ljmp
std
inc
adc
xor
mov
jbe
fimull
insb
adc
cmp
jmp
add
jecxz
bound
cmp
add
and
jbe
out
xchg
cmpsl
cmp
fcoms
pop
jl
lods
pop
push
out
pop
das
cmpsl
add
mov
xchg
pop
clc
test
mov
jno
fcompl
insl
movsl
test
jge
shl
sub
inc
adc
add
adc
push
call
pop
in
lret
sarb
loope
stos
add
fwait
xchg
and
dec
shlb
shrb
push
jge
sub
xchg
cltd
sbb
int
or
inc
adc
sub
movsb
dec
adc
jns
lret
test
sub
icebp
jno
outsl
adc
xor
je
addr16
jno
push
mov
mov
jg
and
inc
loope
xorb
push
lret
clc
mov
js
cmpsl
test
bound
cmpl
popf
ss
sub
xor
das
pop
in
mov
pop
mov
cmc
mov
or
clc
pop
sbb
jno
pop
cmp
imul
std
sbbb
push
arpl
push
pop
or
ljmp
loope
xchg
jnp
cmp
in
jge
and
xor
cmp
aam
inc
jle
sub
push
xchg
cmp
pop
jbe
lea
sbb
aaa
xchg
dec
je
in
loope
jmp
lahf
cmpsb
iret
lret
jo
scas
jge
aad
xchg
movsl
aam
add
push
rorb
pop
sbb
pop
push
xor
cmp
pop
dec
call
pop
or
movsl
int
xchg
fsts
scas
xchg
push
jmp
xor
push
in
shrl
add
and
sbb
in
sbb
adc
movsl
jg
gs
jecxz
movsb
sbb
xchg
cmp
or
adc
cwtl
mov
xor
add
xor
pop
out
nop
cmp
mov
je
cmp
mov
daa
out
xor
lcall
xchg
fdivr
inc
mov
bound
xor
sbb
dec
mov
xchg
inc
jl
jnp
dec
sub
imulb
aam
loope
push
in
clc
and
add
stos
mov
adc
dec
jno
pushf
repz
stos
leave
cs
xor
xor
scas
jae
jb
xlat
xor
and
inc
imul
aam
push
push
scas
outsb
pop
clc
lods
fnstenv
inc
in
int
jg
sbb
adc
mov
or
sarb
pop
dec
js
inc
movsb
dec
repz
or
in
xchg
cmp
pop
outsl
data16
jns
out
imul
xchg
or
mov
daa
mov
pop
aam
scas
repz
jp
xchg
mov
xchg
sbb
fldenv
hlt
mov
scas
ret
mov
push
inc
mov
das
repnz
pop
arpl
and
pushf
jns
icebp
jno
fwait
jbe
roll
mov
insl
mov
push
mov
and
or
push
lret
jns
dec
dec
push
adc
push
push
leave
cli
xorb
gs
jno
into
xchg
and
mov
gs
inc
jo
stc
dec
imul
das
addr16
or
cmp
test
lds
push
jbe
mov
loopne
sar
loopne
cmp
out
stc
and
imul
stos
aad
je
les
sbb
dec
into
out
add
out
xchg
sbb
out
mov
std
pushf
inc
sub
mov
cltd
lret
mov
or
cmp
pop
cld
test
mov
mov
mov
add
cmp
jmp
insl
cmpsl
mov
dec
mov
ror
ret
popf
stc
cmp
push
and
mov
int3
lcall
andb
adc
add
into
cwtl
hlt
div
mov
mov
xor
adc
in
add
adcl
sbb
or
jbe
out
sbbl
sbbl
mov
or
repz
movsl
xchg
mov
std
test
in
push
push
xor
add
jl
dec
mov
xor
xchg
push
mov
mov
iret
jns
sti
cmp
fmuls
xlat
lahf
lock
sbb
adc
addr16
adc
mov
or
mov
inc
nop
mov
lret
push
add
test
stc
test
dec
adcb
xchg
jnp
mov
sub
xchg
sbb
fldcw
pop
imul
lcall
data16
mov
lds
insb
lock
psadbw
and
cwtl
xor
mov
scas
jns
inc
mov
mov
jecxz
sub
enter
sub
inc
jo
dec
aam
mov
xor
in
aaa
adc
fs
in
adc
test
or
daa
fxch
fdivrl
ret
mov
lock
es
jecxz
push
ljmp
into
movsl
jns
scas
and
stos
aad
pop
and
in
je
lret
lcall
mov
mov
mov
rol
in
out
out
test
lret
call
test
push
xchg
jnp
adc
lods
rorl
xor
adc
rcrb
xor
aaa
sbb
sahf
jl
mov
das
jne
push
jnp
or
adcl
push
xlat
in
iret
dec
push
add
int
lea
rclb
mov
adc
insb
jb
and
lcall
imull
or
sub
push
add
aam
fwait
shlb
xor
sbb
into
mov
push
pusha
insl
push
pop
mov
mov
inc
jbe
adc
or
ss
sub
sub
or
insb
cwtl
insb
ret
mov
adcl
repz
stos
insb
pop
jg
in
sti
ds
push
clc
xor
dec
les
repnz
xchg
in
stos
xor
ffreep
ljmp
xchg
add
jbe
test
pop
pop
xchg
or
push
xchg
dec
xchg
pop
mov
lahf
inc
repnz
in
test
fnsave
pop
aam
push
int3
mov
pop
in
and
mov
ret
inc
sub
or
mov
adc
arpl
divb
pop
icebp
imul
mov
jecxz
test
pop
ret
repnz
push
fidivl
push
sbb
dec
loopne
jecxz
mov
cmp
push
mov
inc
scas
pop
and
scas
xor
cpuid
ja
es
add
arpl
aam
mov
cmc
es
inc
cmp
push
lock
out
push
xor
fstp
mulb
mov
hlt
mov
inc
add
mov
push
jne
jle
mov
mov
stc
mov
sub
and
dec
ss
mov
loope
and
mov
dec
jbe
mov
int
popa
in
subb
dec
mulb
loopne
jmp
push
adc
cmc
jle
cmp
mov
aas
and
in
push
push
lea
test
and
lods
cmpsb
leave
lea
mov
lcall
popf
dec
pminsw
insb
mov
add
jge
fildll
mov
insl
xor
dec
test
fidivs
xchg
dec
and
aam
out
adc
int
enter
and
mov
iret
enter
out
shrl
imul
nop
mov
dec
popa
xlat
repz
adc
mov
fldt
inc
xchg
mov
xchg
jne
cmp
adc
imul
xchg
in
iret
ja
jmp
rcrb
fldenv
into
jnp
mov
xchg
sbb
jmp
iret
pushf
mov
xor
dec
mov
cmc
cmpsl
nop
push
insb
xchg
outsl
dec
lock
int
mov
fnsave
fsubs
out
add
call
mov
sub
mov
xchg
stc
fucom
or
sahf
sbb
pop
ret
fstpt
dec
dec
je
mov
and
cmc
and
sub
or
xor
dec
push
gs
ret
scas
fmull
cmpsl
stos
mov
sbb
idivl
cltd
arpl
in
jle
adc
jo
in
sbb
inc
and
dec
inc
dec
cld
cmp
jmp
aaa
cmpsl
push
lods
in
out
mov
inc
adc
movsb
lea
inc
mov
dec
mov
mull
xchg
pop
push
inc
add
shll
jb
mov
pop
jl
mov
jp
ret
pop
xor
cmp
orl
or
je
adc
loop
pop
insb
pop
inc
popf
rcrl
ja
cmc
lock
sub
test
pushw
fwait
xchg
jg
ret
bound
aam
icebp
inc
xchg
sbb
or
int
or
push
adc
imul
in
push
pop
shrb
mov
or
and
adc
lock
and
notl
lods
adc
xchg
inc
mov
mov
out
push
out
dec
mov
push
pop
nop
jmp
ljmp
mov
pop
bound
cmp
rorb
cwtl
ret
shrb
addr16
xor
add
and
lods
pop
xor
addr16
cmp
lret
cmp
fsts
lret
pushf
pop
adc
cmp
dec
lods
mov
addb
scas
pop
push
cmp
lods
mov
ss
in
test
fdivrp
pop
enter
mov
aaa
roll
push
pop
and
sub
push
mov
in
mov
insb
xchg
insb
adc
les
xchg
je
ja
push
add
fstl
sbb
and
cmp
in
lds
aaa
iret
outsb
pop
fdivrs
adc
aad
mov
mov
test
ficoms
sbb
and
pop
adc
xor
pusha
inc
lods
cld
xor
push
les
dec
cmp
xor
xchg
loop
shl
out
sbb
in
or
sbb
iret
push
fldl
mov
mov
enter
dec
lret
mov
bound
stos
nop
lock
icebp
movsl
adc
sub
iret
push
push
in
fneni(8087
pop
sbb
popa
lock
add
mov
mov
or
je
dec
popa
imul
aad
fsubrs
pop
outsb
sbb
adc
sub
or
es
sub
imul
or
insb
dec
jmp
pop
cmp
xor
notb
movsb
jo
icebp
xchg
adc
das
jno
or
cmpsl
pop
add
fcomp
mov
pop
xchg
xchg
mov
sti
mov
push
cmp
mov
lahf
jnp
push
push
dec
xchg
add
mov
negb
out
rcl
xor
sbb
mov
pusha
test
ret
leave
rclb
or
push
and
mov
arpl
cmpsb
pop
adc
jnp
cmp
cmp
inc
or
adc
fimuls
push
xor
cmp
es
stos
hlt
js
ds
loop
and
call
dec
or
int3
xchg
ret
mov
mov
fcom
mov
add
xor
shll
dec
sbb
ficomps
jo
scas
std
jmp
cli
cmp
pcmpgtw
inc
pop
test
js
leave
out
mov
fcmovu
xchg
xchg
dec
sbb
push
xchg
in
rolb
test
push
jl
ljmp
shll
leave
xchg
in
mov
mov
or
add
pop
mov
addr16
mov
push
and
insl
sti
sbb
jl
jns
aas
jl
sbb
inc
xchg
jno
out
or
adc
xchg
push
xor
and
dec
lea
test
int
out
insl
xchg
test
aas
out
leave
decb
js
sub
xchg
dec
dec
or
mov
js
cltd
sbb
add
sbb
outsl
scas
out
movsl
in
jae
and
cmp
jg
int
lret
js
mov
pop
ror
movsl
sbb
cli
lds
xchg
sbb
jle
add
ja
or
test
int
imul
in
loop
push
dec
xor
jp
lret
popf
push
cld
dec
popf
cli
popl
loopne
push
add
test
pop
pop
sub
xchg
lcall
jle
dec
or
mov
cmp
cmp
lcall
clc
inc
out
das
mov
inc
adc
clc
or
in
add
idivb
xor
scas
sbb
ljmp
scas
mov
sahf
or
xor
sub
mov
repnz
mov
and
into
push
add
and
xchg
mov
jle
dec
sub
stos
bound
insl
repnz
into
cmpsb
cmp
stos
loope
aas
lcall
aad
jl
xchg
ja
es
mov
arpl
push
mov
lahf
insb
xor
pop
sbb
xchg
push
cmp
jno
imul
mov
jbe
ljmp
mov
mov
sbb
mov
lret
rcrb
mov
push
ljmp
in
pushw
mov
jp
mov
das
push
les
filds
cmpsl
push
subb
addb
pop
das
pop
push
pop
xchg
subb
mov
insb
xchg
leave
adc
dec
mov
fisttpl
dec
fcompl
inc
aas
in
pop
xor
mov
sbb
mov
mov
movb
scas
mov
jno
fnstcw
jle
int3
pop
inc
subl
adc
stc
insl
inc
icebp
lock
cmp
pop
mov
inc
dec
adc
jmp
push
inc
aaa
jl
pusha
imul
das
fdivr
int3
xchg
frstor
scas
gs
mov
jmp
adc
repz
mov
out
loope
pop
enter
cmp
pop
sub
xor
adc
loopne
cmp
sub
mov
icebp
xchg
mov
aad
jge
stos
jmp
stc
cli
or
mov
ja
xor
mov
sbb
xchg
cmp
or
sub
mov
aam
pusha
lock
ror
scas
inc
je
ja
pop
add
xchg
js
notl
scas
add
mov
stc
dec
xchg
insl
imulb
pop
and
jbe
fs
cmp
in
dec
out
push
sub
jg
add
lods
jmp
in
add
divl
mov
add
jmp
orl
lods
call
jp
inc
dec
or
or
cmp
lods
cmp
adc
xchg
xchg
bound
test
stc
hlt
sbb
loop
xchg
mov
rcll
push
or
jge
cmp
cmp
ljmp
cmp
xlat
mov
sahf
mov
push
cmp
repnz
cmp
in
sti
lret
lret
mull
stos
icebp
inc
fcmovnbe
neg
push
outsb
pop
ret
dec
pop
ss
mov
lds
push
or
loope
sbb
out
lock
sbb
jmp
leave
lock
jecxz
or
adcb
mov
mov
sbb
cmp
pop
mov
mov
xchg
pop
dec
insb
mov
mov
mov
cli
push
lds
xor
aaa
sub
inc
xlat
inc
mov
daa
in
mov
mov
pop
in
cli
sbb
sub
cmpsb
pop
dec
leave
scas
inc
testl
js
jae
mov
xor
stc
ja
sub
les
sbb
add
int
dec
cmc
pop
sbb
jb
add
les
shrl
mov
sbb
bound
and
mov
sbb
mov
std
xor
loop
aad
cmp
mov
imull
cmpsb
jb
cwtl
pushw
pop
sbb
out
lcall
lea
sub
xchg
fistl
xchg
sub
iret
pop
repz
sub
int3
cs
jns
dec
stos
pushl
push
push
enter
adc
ja
mov
mov
test
add
mov
add
je
outsl
popa
mov
cmp
sbb
xor
fldcw
imul
ja
popf
cmc
sbb
add
mov
rolb
cmp
pop
mov
jo
stos
inc
in
add
adc
add
arpl
xchg
loop
pop
lock
fidivrs
mov
xchg
jp
out
fsubrl
mov
test
in
jmp
inc
xchg
mull
sbb
adc
adcl
stos
outsb
mov
popa
mov
cmpsl
jp
testb
das
aam
loopne
stos
pop
sbb
push
or
and
sarl
cmpsb
into
imul
jg
push
sub
sbb
movsl
or
jmp
test
sub
es
fld
push
jns
mov
pop
mov
add
repz
imul
fsubl
sub
in
es
jo
outsl
int3
jno
mov
or
push
inc
out
int
and
adc
leave
pop
push
mov
xchg
push
dec
loope
pushf
mov
fildl
xchg
leave
add
lods
ja
jle
sub
mov
dec
sub
hlt
testl
ljmp
cmpsl
mov
orl
loopne
loope
jg
cltd
mov
pusha
lea
inc
mov
addl
pop
mov
sbb
out
sti
xor
arpl
add
inc
ljmp
jb
incl
or
lret
jg
orb
aas
nop
cmp
and
sbb
in
sub
fisttps
mov
ja
addl
xchg
push
mul
dec
and
push
fistpll
mov
jo
add
int3
cmpsl
cmpsb
iret
push
jbe
pop
push
push
sbb
add
imul
push
dec
jmp
jp
pop
cs
nop
push
outsl
dec
lret
jge
jae
xchg
out
pop
xchg
mov
mov
in
je
inc
aad
xor
push
cmc
aad
insl
pop
mov
push
lds
dec
dec
aas
stos
mov
lock
lds
sbb
rcrl
push
pop
jno
addr16
jg
jbe
pop
sub
adcl
mov
or
sub
repz
ficomps
or
stos
pusha
pop
jo
clc
xchg
fs
lods
into
mov
sbb
out
or
and
outsb
mov
sbb
adc
dec
rorl
and
dec
jmp
int
dec
mov
push
adc
mov
push
lret
lret
lods
xor
lds
mov
icebp
sub
in
lods
cli
orb
pop
pop
icebp
iret
out
scas
sub
stc
mov
pop
shrl
fidivrs
mov
cmpsl
xchg
fiadds
mov
mov
sbb
les
popf
add
hlt
es
aas
mov
cmp
cwtl
rorb
insb
movsl
inc
pop
in
aam
ds
data16
and
add
adc
mov
out
int3
in
inc
mov
jp
out
ljmp
loope
add
adc
jmp
xor
push
push
inc
stos
mov
sub
pop
ret
lea
cli
xchg
outsb
xchg
loope
in
push
jae
xor
pusha
jl
mov
push
pop
scas
add
mov
sub
orl
cmp
in
lret
dec
shlb
pusha
jl
std
xor
js
xor
daa
and
ljmp
sti
lods
xor
stos
or
dec
pop
repz
xchg
mov
pushf
fsts
add
cmp
or
mov
loopne
loope
subb
mov
add
imul
add
add
repnz
into
loopne
rcll
imul
sub
es
out
lahf
rclb
pop
dec
je
pop
lret
mov
insl
adc
test
cld
cwtl
mov
cli
mov
ret
roll
ss
ds
dec
and
or
push
je
xlat
sub
push
aad
push
imulb
cmp
jnp
arpl
pop
cmp
out
jmp
scas
or
gs
ficoml
ja
mov
cwtl
dec
add
xchg
inc
adc
mov
ljmp
vmptrld
jb
cmp
xor
shll
and
mov
mul
pop
lret
loope
int
jb
shlb
cmp
sbb
dec
push
fcomps
inc
es
cwtl
dec
aam
lods
pop
xchg
outsl
inc
ficoms
inc
push
adc
cmp
pusha
lock
inc
xor
pop
pandn
leave
ja
xchg
addr16
xchg
xchg
test
mov
in
cmpsl
add
out
shll
xor
stos
js
lret
jne
xchg
sahf
xchg
jb
mov
push
filds
sub
pusha
sbb
out
or
and
pminsw
cmp
mov
cmp
pminub
jmp
cwtl
icebp
and
movsl
sbb
dec
jae
jmp
repz
lock
mov
pop
outsb
popa
push
mov
lock
jg
dec
stos
push
jge
shlb
push
jo
sbb
clc
cmp
loopne
sbb
test
push
clc
mov
inc
hlt
loopne
cmp
addr16
dec
in
je
fsubrs
mov
mov
stos
insb
cmc
test
sub
adc
mov
jg
adc
jo
lock
icebp
lods
addr16
or
sbb
sbb
iret
jnp
arpl
cmpsb
cmpsb
int
adc
pop
pop
pop
adc
cmpsl
adc
int3
xchg
fs
pop
add
je
xchg
out
adc
loopne
mov
sub
scas
dec
dec
jp
jl
jnp
mov
xor
mov
push
leave
dec
bound
cmp
addb
dec
pop
dec
sub
fisubl
xchg
repz
bnd
popa
sbb
loope
cmp
int3
dec
stc
scas
pop
sbb
fdivrl
imul
addr16
daa
cwtl
push
pop
scas
jb
sub
inc
xor
push
sbb
in
push
mov
and
pop
gs
cli
lds
or
and
lcall
xchg
mov
inc
cmp
lds
out
jo
ljmp
adc
fnstcw
mov
out
mov
mov
jmp
jae
lahf
call
push
pop
xchg
push
mov
mov
pop
inc
mov
push
inc
repz
stos
or
pop
cld
sub
sub
jecxz
testb
pop
mov
dec
push
icebp
rcr
add
push
inc
pushf
sbb
loop
xchg
out
idivl
shl
adc
lods
das
jnp
lret
addb
mov
push
lds
es
insl
aad
pushf
test
loopne
sti
sub
fnstsw
daa
push
int
mov
out
pop
sbb
loopne
adc
dec
cmp
jp
push
add
add
pushf
xor
sbb
cmp
das
popf
into
addr16
inc
push
jnp
fildll
rorb
js
mov
stos
lods
dec
cmp
and
adc
jb
aas
icebp
fcoms
shrb
adc
adc
jl
push
ja
xchg
pusha
jmp
gs
inc
pop
iret
dec
cmp
imul
mov
inc
lcall
xchg
jle
pop
stos
ja
push
ds
std
dec
or
icebp
lock
inc
imul
jo
cwtl
xchg
int3
push
fisubs
mov
iret
pop
icebp
sub
push
in
daa
sbb
pop
mov
ret
dec
stos
in
mov
rcrl
cmp
sub
enter
xchg
insb
pop
jno
push
fisttpll
test
ret
mov
pop
inc
jne
inc
xchg
or
sub
sbb
adc
bound
cli
push
fnstsw
xchg
jne
push
js
mov
js
lods
into
loop
mov
mov
push
pop
test
jle
jg
mov
pop
ret
mov
lea
hlt
aas
dec
cmp
dec
sbb
inc
lods
ret
jbe
pushf
outsl
les
cmpsl
sub
loope
add
ss
push
sbb
rolb
out
out
je
imul
jbe
mov
out
xlat
or
out
imul
jb
jo
mov
dec
arpl
push
ljmp
xchg
into
mov
stc
adc
xor
push
inc
dec
cs
push
push
repnz
inc
in
enter
jb
ss
es
imul
sub
or
lock
inc
mov
mov
xchg
add
pop
xor
sbb
pop
cld
inc
int
ljmp
jg
mov
xlat
xorl
inc
mov
outsb
dec
insb
push
jae
push
inc
lcall
dec
test
push
sbb
sub
push
or
shlb
loop
int3
je
dec
xor
xor
lret
jae
adc
in
push
xor
adcl
out
xor
loope
std
insl
sbb
adc
or
das
cmpsb
test
loop
in
test
or
fchs
rclb
subl
int3
xchg
jbe
lods
pop
pop
jecxz
add
cmp
movsb
jecxz
fwait
lock
int
es
aas
rol
and
xchg
push
mov
popa
clc
push
mov
out
in
cmp
or
rorb
ljmp
stc
inc
mov
jl
orb
stos
xchg
mov
jge
push
mov
jb
rcll
test
cmp
fcmovb
mov
sub
push
mov
leave
pop
jge
push
sub
mov
es
push
in
jo
pop
adc
test
inc
aam
pop
in
sar
stos
cmpsl
out
int3
xchg
aam
xor
xor
xchg
or
cs
jae
mov
mov
inc
jo
or
ds
ret
out
inc
decb
popa
nop
adc
push
sbb
cmp
lock
and
jns
rcrb
pusha
mov
fbstp
push
jg
and
push
adc
subl
in
je
pop
jl
mov
fwait
cmc
mov
push
in
or
movsl
pusha
cmp
push
pop
cld
mov
ficompl
cmp
mov
cmc
mov
stc
daa
dec
dec
mov
test
movsl
adc
movsb
push
inc
push
xor
adc
test
mov
cmpsl
std
pusha
mov
adc
fldenv
pop
add
add
jno
jnp
jecxz
xchg
xor
xor
fstl
mov
std
sub
shl
xor
adc
push
out
dec
push
dec
popf
adc
in
jmp
scas
xor
lods
mov
lods
and
and
or
in
add
push
mov
cli
adc
addr16
into
xchg
iret
sahf
in
sarl
xchg
inc
jmp
sbb
inc
es
dec
cld
mov
subl
in
dec
sub
shl
cli
mov
jno
and
bound
sbb
nop
out
sub
icebp
lret
xchg
xor
scas
dec
popa
mov
lea
xchg
fwait
mov
ret
sub
jno
lods
adc
dec
jecxz
ret
pop
in
sub
notl
das
xor
cmp
insb
aam
rorl
dec
test
push
and
in
imul
fildl
push
out
lret
sbb
push
or
in
sub
pop
adcl
loopne
pop
mov
add
sbb
cs
iret
and
mov
xor
jae
xor
sti
or
seta
pop
or
cmp
orl
cld
cwtl
mov
xchg
icebp
inc
jecxz
fwait
sbb
mov
in
in
xchg
or
dec
xor
inc
in
bound
fst
inc
fsub
in
xchg
lahf
jle
popa
xor
mov
adc
fst
in
and
inc
jg
orb
mov
cmc
mov
push
dec
push
loope
adc
cmp
xchg
jp
pusha
jle
arpl
sub
mov
test
stc
jg
jbe
ljmp
mov
xor
pop
lret
stos
in
inc
sub
andb
test
adc
adc
stos
cmpsb
lods
es
cmp
sbb
dec
xor
xor
adc
out
cs
push
fistps
xchg
jb
sub
mov
add
pusha
lret
mov
cmp
fstl
fwait
cltd
popf
call
icebp
dec
sbb
jno
test
jno
mov
jl
jo
les
dec
test
outsb
sub
or
outsl
arpl
movsl
xor
mov
rclb
std
cmp
lock
and
xor
lods
lods
sti
movsb
ja
jge
and
scas
push
mov
enter
mov
leave
daa
sarl
out
jmp
inc
rorb
and
lea
rclb
mov
cs
ss
xor
inc
cmp
out
add
xchg
roll
scas
jl
inc
imul
lock
fsubr
dec
mov
popa
adcl
mov
push
fs
lret
insb
sbb
sahf
xor
fs
sub
out
xor
nop
fstl
hlt
xchg
or
inc
or
mov
inc
sbbl
adc
arpl
xchg
data16
insb
leave
or
lods
and
in
ret
push
inc
loopne
lret
aaa
fiadds
mov
je
mov
cltd
dec
cmpsb
insl
aaa
fs
mov
cmp
fsubl
rolb
cltd
leave
int
adc
push
mov
pop
idivb
fs
mov
inc
cld
rcll
ja
das
repz
enter
clc
test
pusha
sbbl
jno
push
sbb
push
mov
inc
sti
xchg
add
icebp
fdivs
jb
push
les
rcrb
mov
push
pop
icebp
jns
ds
shrb
scas
mov
test
push
pop
fidivrl
filds
mov
ljmp
ds
daa
xchg
outsb
dec
rorb
xchg
stos
xchg
test
xor
mov
jb
lock
and
out
add
sbb
jp,pt
cmp
jl
arpl
jo
xchg
cmp
ljmp
pop
loope
mov
hlt
arpl
out
push
dec
jl
pop
pmullw
aam
test
jle
imul
rcrb
out
faddl
or
xchg
sub
xchg
scas
jae
adc
xchg
mov
shrb
adc
scas
out
test
pop
scas
outsl
mov
or
push
ds
inc
mov
cmp
dec
roll
lcall
sahf
mov
loope
xor
sbb
aam
fcmove
hlt
decb
in
pop
std
nop
adc
mov
xorl
xchg
mov
addb
mov
inc
in
pop
mov
cmpsl
add
es
push
in
cltd
xor
mov
jp
and
sub
fs
rolb
push
dec
sbb
fists
mul
jnp
cmpsl
imul
jbe
sbb
sbb
add
mov
mov
inc
repnz
xor
out
add
or
sub
inc
insl
popa
jae
dec
or
jecxz
mov
inc
dec
lret
jnp
or
in
sub
lds
pop
ljmp
stos
jecxz
out
mov
jbe
mov
stos
cmpsb
mov
nop
jns
arpl
addb
xchg
push
mov
jnp
pop
jp
std
sbb
push
push
imul
xchg
cmpsb
shlb
xchg
outsl
push
test
cmc
inc
xchg
xchg
inc
add
pop
sub
jbe
ja
sub
nop
lods
pop
je
xor
arpl
dec
inc
pop
loope
xorb
xchg
xlat
add
add
pop
mov
popa
fdivs
jnp
ds
movsl
push
dec
idivl
jae
push
sbb
mov
pushf
faddl
jo
dec
lea
loopne
leave
mov
ljmp
outsl
sub
iret
dec
movsb
js
push
loopne
add
inc
mov
subl
dec
mov
xchg
movsb
stos
pusha
push
pushf
adc
xor
mov
jle
sti
test
xchg
repz
scas
xor
ret
test
sub
pop
icebp
mov
mov
sub
popf
adc
sub
ljmp
xlat
and
mov
jge
mov
cld
xor
pop
nop
fists
lods
xor
pop
das
into
cmp
int
shr
xor
stc
cltd
cwtl
xchg
fldenv
outsb
xchg
jae
gs
mov
cmp
stos
int
negl
sbb
popa
jnp
fbld
mov
cltd
push
std
std
daa
mov
mov
jbe
mov
inc
push
in
add
add
sbb
ror
adc
mov
adc
mov
xrelease
inc
push
xor
mov
mov
std
add
into
pusha
out
xchg
jo
stos
sub
sub
push
out
jae
les
cmp
or
mov
ja
mov
iret
sbb
nop
dec
and
xchg
icebp
addr16
test
xlat
cmpsb
push
test
ja
jne
test
mov
scas
xchg
inc
cmpl
int3
cmp
jp
dec
pop
mov
mov
mov
std
in
dec
orl
mov
fst
dec
das
hlt
add
stos
fidivrs
lret
push
add
mov
fadd
xor
push
xabort
daa
cmc
ja
xor
out
pop
loop
push
std
or
negl
inc
fldt
push
xchg
hlt
add
mov
lcall
fldt
mov
into
mov
mov
dec
int
inc
imul
xor
push
dec
dec
sbb
into
jnp
insb
or
push
jno
pop
loope
repnz
pop
pop
xlat
or
div
push
repz
and
and
jbe
out
xchg
inc
jmp
das
dec
mov
js
push
mov
sbb
or
nop
jbe
dec
ret
sbb
addl
pushf
jl
mov
shl
push
cmpsl
adc
iret
push
sbb
cmpl
insl
xchg
mov
hlt
pop
aam
mov
xor
dec
push
add
adc
inc
mov
sbb
scas
jnp
cmpsl
pop
rcr
sbb
and
sarl
aaa
outsb
mov
jb
test
adc
andl
xchg
inc
adc
inc
pushf
xchg
popa
sbb
outsb
test
cmovl
pushf
lcall
loop
sahf
push
sbb
and
jo
xor
scas
std
movsl
cld
cmpl
xorl
and
inc
pop
pop
loope
mov
mov
lds
rclb
inc
stos
sub
pop
cld
cmpb
pop
mov
fcoml
lods
enter
push
fisubrs
mov
pop
xchg
scas
scas
sbb
stc
push
or
hlt
adc
pop
jecxz
lods
sub
xor
mov
or
xor
mov
xor
xor
jecxz
xchg
pop
adc
das
out
and
jg
and
test
