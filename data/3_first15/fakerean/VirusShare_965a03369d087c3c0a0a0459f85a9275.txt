add
add
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
inc
cmp
lea
je
call
add
popf
pusha
decl
test
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
out
inc
add
push
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
fwait
sbb
sub
cmp
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
push
inc
inc
add
add
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
sub
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
dec
ss
add
or
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
and
inc
add
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
inc
inc
add
pop
leave
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
rolb
out
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loope
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
inc
inc
add
add
adc
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
inc
inc
add
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
fnsave
inc
add
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
pop
and
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
sub
nop
or
add
or
add
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
and
add
add
add
and
mov
str
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
inc
add
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
add
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
add
je
sub
inc
and
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
mov
inc
add
lea
push
mov
mov
mov
push
movl
mov
movb
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
popf
cmp
add
add
pop
fwait
push
add
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
add
rorb
add
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
jnp
inc
add
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
push
ds
add
sbb
incl
sarb
mov
ret
cmp
add
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
insl
das
inc
add
add
mov
and
cmp
jne
mov
mov
push
inc
add
lea
push
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
jae
inc
add
mov
jmp
mov
push
mov
mov
call
mov
mov
inc
add
mov
mov
jmp
mov
mov
mov
push
call
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
inc
add
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
inc
inc
inc
add
jne
mov
test
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
mov
xor
mov
and
inc
shl
mov
shr
shl
not
and
and
cmpl
je
lea
call
lea
push
mov
call
cmp
je
xor
inc
push
push
push
pushl
call
mov
andl
test
jne
mov
andl
test
jne
push
push
lea
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
mov
call
test
je
push
mov
mov
mov
call
test
mov
je
mov
push
call
mov
test
je
mov
push
call
call
pushl
mov
push
call
mov
push
mov
call
mov
test
mov
je
mov
push
call
add
call
mov
pop
leave
ret
xor
jmp
push
mov
push
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
xor
cmp
jne
inc
mov
push
push
push
push
call
lea
call
xor
leave
ret
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
lea
call
mov
mov
call
push
push
push
push
push
pushl
mov
call
mov
lea
call
pop
mov
pop
leave
ret
push
andl
test
mov
je
mov
push
call
mov
test
je
mov
push
call
cmpl
jne
mov
pop
ret
push
mov
and
sub
cmpl
push
push
jne
pop
pop
mov
pop
ret
andl
lea
add
push
push
mov
movl
call
mov
mov
test
jbe
push
pop
mov
mov
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
je
call
add
decl
jne
lea
call
lea
call
lea
call
jmp
mov
push
push
call
jmp
push
mov
and
push
push
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
jne
pop
mov
pop
ret
mov
push
push
call
jmp
mov
call
cmpl
jne
xor
inc
cmp
jne
cmpb
jne
ret
xor
ret
push
mov
push
mov
push
push
mov
call
test
jne
cmp
jne
mov
call
mov
call
test
je
mov
call
cmpb
jne
xor
jmp
mov
push
pop
call
test
je
pushl
mov
call
jmp
xor
mov
mov
call
pop
pop
pop
pop
ret
mov
and
or
jne
xor
ret
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
sbb
pop
jne
xor
inc
leave
ret
push
mov
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
punpckhdq
outsb
jnp
add
dec
add
add
pushf
lahf
mov
mov
testl
mov
add
add
jo
add
mov
add
test
add
add
add
fsubrs
popa
add
add
add
xchg
push
mov
add
push
push
push
push
push
push
push
push
call
lock
add
add
cld
mov
add
add
outsl
fstl
out
pusha
add
inc
movsl
add
xchg
movl
data16
iret
nop
mov
scas
mov
je
xchg
loopne
add
mov
add
pop
popl
push
push
push
call
xchg
aam
add
add
mov
out
push
jb
mov
testl
mov
mov
add
lock
lret
iret
jnp
jae
fnstcw
lea
pop
push
push
push
lea
push
push
push
push
push
call
jns
add
add
shll
roll
filds
add
jecxz
xchg
mov
add
lret
push
in
pop
bound
fdivrl
scas
pop
add
xchg
xchg
add
data16
mov
test
fldl
cld
add
sti
add
fbld
cwtl
out
add
add
push
mov
push
insb
mov
imul
scas
lea
ret
jmp
mov
sbb
push
push
push
push
push
push
push
push
push
call
arpl
scas
rorb
shlb
mov
push
add
test
addr16
push
add
out
xchg
out
lret
add
fwait
clc
push
add
add
mov
add
add
rolb
lret
cmpsb
add
xchg
hlt
lea
pop
push
push
push
lea
push
call
insb
add
arpl
addl
push
pusha
addl
les
rcll
add
add
roll
stc
add
ljmp
lea
add
add
xchg
add
sub
ljmp
out
in
scas
into
push
ljmp
add
add
pop
faddl
stos
test
add
add
flds
add
ja
int3
lea
pop
push
push
push
lea
push
push
lea
push
push
call
add
mov
lods
idiv
fnstsw
add
add
add
je
add
les
pop
jmp
clc
jae
jbe
pop
add
mov
mov
add
fildl
add
add
jne
add
addl
mov
mov
mov
lea
pop
call
push
push
push
push
call
cwtl
mov
out
in
add
mov
mov
add
add
in
push
ror
mov
jns
fdivr
push
pushf
stc
mov
pushf
add
cmc
cld
xchg
lods
pop
add
xchg
cli
test
int
cli
clc
xchg
lret
cmc
sahf
gs
xchg
xchg
lds
pop
add
loopne
add
jmp
add
bound
pop
mov
adc
jo
add
push
lea
push
call
mov
add
add
add
add
add
out
xchg
ror
arpl
scas
add
add
addb
add
add
sar
add
fiaddl
xchg
cld
mov
or
add
mov
lods
push
lea
push
push
push
push
call
add
xchg
aad
std
xchg
add
add
add
push
enter
add
add
popa
jo
hlt
loop
test
add
add
jecxz
add
cmpsb
mov
add
add
int
cwtl
add
out
add
push
jnp
scas
add
mov
test
add
lea
pop
call
push
push
push
push
push
lea
push
push
push
lea
push
call
arpl
add
arpl
pop
xchg
hlt
lea
add
scas
add
in
add
mov
add
out
add
lahf
add
add
arpl
add
fildl
mov
add
mov
add
pop
add
cwtl
add
mov
lea
pop
jmp
ret
push
push
lea
push
push
lea
push
push
push
push
push
call
mov
xchg
mov
imul
stos
jmp
add
orl
add
add
in
add
add
add
xchg
add
mov
push
adcl
add
add
jbe
mov
lea
pop
mov
mov
push
lea
push
call
ret
add
addl
loopne
int3
jns
test
add
add
add
add
add
cli
add
add
fdivs
lea
pop
add
push
push
push
push
push
push
call
add
mov
mov
add
add
add
jo
push
jb
add
add
pop
ljmp
lret
add
pusha
pop
add
test
push
mov
lea
pop
add
add
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
jae
add
fcmovbe
add
add
clc
add
add
scas
add
add
add
add
add
add
jp
lret
fwait
add
add
cld
popf
fsub
popa
add
add
mov
xchg
pop
jne
les
leave
pusha
cwtl
pop
mov
lea
pop
mov
push
push
push
push
lea
push
push
push
push
push
call
xchg
add
add
test
aad
fdivl
mov
jle
jno
mov
lret
add
scas
lret
add
add
popa
out
int3
cld
xchg
add
cmpsl
lods
add
xchg
mov
lea
pop
xor
push
lea
push
push
push
push
call
xorb
add
jno
jp
je
add
outsl
test
mov
add
fldt
add
bound
sahf
lods
add
mov
add
add
add
jl
add
out
lret
add
add
pop
add
push
push
ror
push
or
not
add
sub
sub
pop
ror
sub
rol
pop
push
push
push
lea
push
lea
push
push
lea
push
call
pop
lds
jl
add
clc
outsl
out
add
add
popf
cltd
add
add
testb
loopne
add
add
mov
add
push
movsb
add
push
add
mov
sbb
pushl
call
push
lea
push
push
lea
push
push
push
call
mov
add
mov
mov
mov
bound
add
add
push
add
jge
repnz
add
int
add
pop
add
mov
lea
pop
mov
push
push
push
push
push
push
push
lea
push
push
push
call
sti
xchg
mov
push
xchg
movsb
pop
pop
xchg
mov
jmp
add
add
add
mov
jb
fadds
test
add
mov
add
cld
pop
mov
add
filds
mov
add
rcll
add
popl
jp
push
cli
loope
ljmp
add
pop
add
ljmp
bound
pop
movl
push
push
lea
push
call
popa
repnz
mov
mov
imul
lods
in
push
add
test
jge
add
push
orl
push
out
into
sarb
lea
pop
lea
push
push
push
call
add
add
sahf
aad
enter
leave
pusha
pop
mov
add
movsl
add
negl
data16
pop
add
xorb
xchg
enter
in
add
ja
jnp
mov
add
cmc
popa
out
ror
mov
add
mov
add
rorl
test
add
lcall
push
pushl
push
push
push
push
push
push
push
push
push
call
test
fwait
xchg
add
push
push
add
xchg
lods
mov
add
stos
jge
add
add
add
mov
cltd
test
in
add
add
out
add
add
jae
add
lret
mov
lret
add
imul
add
add
and
pushl
push
lea
push
lea
push
push
push
call
loop
lret
add
xlat
xchg
add
mov
lods
add
mov
push
call
arpl
add
jge
add
stos
nop
add
int
add
mov
scas
jbe
rclb
mov
add
add
push
mov
xchg
call
add
incb
stc
add
out
jle
xchg
addl
mov
lea
pop
call
pushl
push
push
push
push
push
lea
push
push
call
add
in
jno
gs
add
pop
add
pop
add
add
add
jmp
add
mov
add
cmpsl
test
add
mov
add
add
add
add
mov
add
pop
lods
mov
out
add
add
shr
jae
rcrl
add
lret
jae
pop
fiaddl
lahf
gs
call
les
jne
push
push
push
push
push
push
lea
push
call
lock
mov
add
popa
fimull
roll
fldl
mov
add
mov
ret
fisubl
roll
add
mov
mov
pushf
nop
mov
add
add
add
add
add
adcl
out
sbbb
into
add
rorb
pop
call
push
push
shl
inc
xor
push
and
add
sub
ror
sub
sub
xor
rol
pop
add
rol
pop
push
push
push
push
lea
push
push
push
push
call
add
cltd
jne
mov
push
pop
add
push
je
aad
fwait
test
roll
xorb
jne
mov
ret
mov
mov
pop
pop
add
xlat
add
mov
add
add
add
add
mov
stos
int
add
fwait
add
pop
pushl
push
push
push
push
lea
push
lea
push
call
adc
add
mov
add
icebp
mov
test
add
jae
mov
push
movsl
shl
loopne
lret
std
shlb
jle
mov
stc
lds
jnp
push
add
icebp
add
scas
add
pop
add
in
push
ret
add
mov
add
hlt
add
xchg
jo
add
enter
int3
lea
pop
call
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
jecxz
pusha
movsl
flds
add
pop
mov
add
push
add
outsl
add
add
push
scas
add
scas
lcall
shr
mov
add
nop
add
pop
ja
mov
lea
pop
push
push
push
not
push
sub
add
sub
lea
sub
pop
not
rol
shr
pop
push
push
push
push
push
push
call
ljmp
test
out
adcl
ljmp
add
pop
mov
jo
add
mov
out
out
add
jnp
add
movb
jmp
jno
add
aad
fdivrl
add
lea
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
insb
jnp
add
shlb
add
xchg
icebp
pop
add
cmc
sar
add
add
lret
jp
add
int3
add
loop
add
mov
add
jne
hlt
pop
add
repnz
jns
push
push
int
imul
jmp
sti
iret
mov
lea
pop
push
push
push
push
push
push
lea
push
push
push
call
arpl
add
add
ljmp
add
add
jle
push
add
scas
add
icebp
leave
rolb
jle
fbstp
cwtl
out
add
aad
jns
xchg
leave
add
addr16
add
fimuls
pop
call
mov
push
push
push
call
jns
mov
add
addl
xchg
cld
fldcw
test
mul
add
testb
rolb
add
add
mov
mov
add
jecxz
add
arpl
add
add
push
xchg
mov
add
sti
add
lahf
add
cld
add
add
jb
imul
add
and
add
mov
lea
pop
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
add
popa
add
addl
gs
lahf
add
push
xchg
add
stc
add
add
xchg
add
aam
in
bnd
enter
mov
add
stos
out
mov
mov
mov
add
bnd
add
mov
pop
push
mov
push
push
lea
push
push
push
push
push
call
icebp
add
cltd
ljmp
add
add
std
popa
jnp
scas
mov
insb
aam
add
add
loopne
cmpsl
add
add
add
add
add
pop
add
mov
sti
add
mov
lea
pop
add
add
push
push
lea
push
call
xchg
add
add
add
xchg
out
jae
xchg
fadds
gs
add
in
lcall
jae
scas
xchg
add
cltd
add
popa
add
sti
mov
pop
out
filds
roll
fildl
mov
xchg
into
fsts
add
pop
add
in
les
ret
in
push
add
pop
jae
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
add
std
add
enter
jbe
nop
mov
add
add
add
add
add
scas
add
mov
add
fs
xchg
stc
add
mov
lea
pop
add
push
push
lea
push
lea
push
push
call
add
loopne
add
call
test
jmp
push
repnz
cwtl
add
add
loop
gs
pop
xchg
lret
rclb
test
imul
cltd
add
les
pop
and
fiadds
cmc
mov
add
data16
pop
mov
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
add
fimull
test
add
pop
add
add
jae
add
push
icebp
add
mov
faddl
mov
mov
mov
lods
add
bound
rolb
fsubrs
mov
lea
pop
xor
push
lea
push
push
lea
push
push
lea
push
call
pop
repnz
xchg
ficompl
push
add
push
aam
scas
add
xchg
popf
in
mov
push
add
pop
movb
popa
add
add
add
add
cmpsl
mov
add
roll
add
add
lea
pop
add
push
push
push
push
lea
push
push
push
lea
push
push
call
add
cltd
add
mov
mov
leave
add
add
add
outsl
ror
add
add
add
cltd
jbe
mov
add
mov
div
add
add
add
xchg
add
mov
add
add
cwtl
add
mov
lea
pop
add
pop
push
push
call
insb
add
add
pop
add
leave
add
push
loopne
aad
push
jle
lret
push
sti
jno
fiaddl
add
jno
jb
in
stos
shl
std
ror
xlat
add
mov
mov
add
push
add
or
dec
add
icebp
test
push
push
push
call
add
add
add
add
add
in
arpl
nop
jp
add
ja
arpl
add
scas
jae
int3
pop
mov
movsl
scas
push
cld
add
add
add
filds
in
add
add
adcl
loop
loop
push
addl
add
loope
loopne
scas
add
out
add
repnz
add
add
or
mov
push
push
lea
push
push
push
push
lea
push
push
call
lds
jnp
add
add
add
mov
add
add
popfw
sbb
call
add
fninit
add
mov
push
rcll
pop
jmp
jl
mov
add
pop
add
add
data16
xchg
jns
ret
pop
mov
add
xchg
mov
lea
pop
xor
push
lea
push
push
push
push
lea
push
push
call
push
mov
mov
push
lods
add
mov
add
add
mov
mov
cmpsl
add
jae
leave
mov
jno
push
int3
loopne
test
add
add
add
in
orl
add
add
pop
or
sbb
push
push
push
push
push
call
add
add
mov
rol
add
add
out
add
xchg
add
jno
jmp
mov
xchg
add
add
add
cli
add
mov
add
add
jge
add
enter
lret
add
add
out
add
add
mov
lea
pop
sub
push
push
lea
push
push
lea
push
push
push
push
call
add
add
jp
cmpsb
add
repnz
add
add
lret
enter
loope
add
add
add
add
clc
xchg
imul
loop
push
cwtl
add
mov
cwtl
add
pop
out
add
mov
mov
leave
addr16
and
rep
push
push
push
call
mov
add
add
in
add
add
enter
add
imul
mov
ljmp
pop
in
add
mov
jge
jge
mov
in
loop
mov
lret
clc
lods
fildll
mov
lea
pop
pop
push
push
push
lea
push
push
call
fdivr
pop
add
hlt
les
add
cli
leave
add
push
mov
mov
add
add
pop
mov
add
mov
data16
fs
add
add
out
call
hlt
lea
pop
mov
push
push
lea
push
push
push
push
lea
push
push
call
add
add
add
mov
jbe
cli
add
arpl
add
jne
cmpsb
in
jnp
add
in
subb
add
test
add
mov
jmp
add
js
sahf
add
ljmp
fcmovbe
mov
lea
pop
add
push
push
push
push
push
push
lea
push
push
call
add
ja
jmp
mov
fnstcw
pop
add
xchg
add
insb
mov
cli
add
enter
shll
rolb
add
loope
jb
pop
add
sti
add
movsl
add
add
xlat
add
mov
add
add
pusha
ret
add
push
add
add
add
fisubs
push
add
pop
add
push
shl
rol
pop
add
mov
xor
push
add
dec
add
pop
mov
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
jno
add
mov
mov
jb
jb
jb
add
cmc
mov
add
call
add
lods
add
mov
add
mov
add
add
add
add
add
out
add
stos
add
pop
testb
movl
push
call
and
adc
push
push
push
lea
push
push
push
push
push
push
lea
push
call
fmull
add
in
add
mov
add
clc
je
cltd
loopne
xchg
add
cltd
push
add
xchg
fists
add
pushf
lahf
jl
cmc
addl
add
fdivr
add
push
jle
add
movsb
add
insb
add
je
faddl
mov
push
add
add
movsl
add
add
xchg
mov
lds
data16
les
add
push
push
push
push
push
push
push
call
add
add
push
add
add
add
mov
cltd
xchg
add
add
add
stc
add
jb
movsb
mov
push
add
mov
mov
in
add
pop
mov
xor
push
ror
add
lea
pop
add
add
push
shr
dec
lea
pop
mov
push
push
push
push
pop
add
dec
add
shr
sub
lea
lea
shr
inc
pop
ror
pop
push
rol
shr
sub
pop
pushl
push
lea
push
push
push
call
add
add
cmc
add
or
add
xchg
add
mov
jns
movl
add
js
cwtl
add
add
jo
add
xchg
out
cltd
jae
cmpsl
lock
mov
lea
add
add
mov
lea
pop
call
push
push
push
push
lea
push
push
push
call
pop
addr16
add
push
enter
add
add
iret
add
icebp
jbe
movsb
scas
cmpsl
cmpsb
cmc
adcl
jp
push
hlt
xchg
mov
add
add
pop
aam
loope
ja
clc
into
push
aad
mov
fildl
pop
xlat
imul
sbb
push
push
push
push
or
not
add
not
not
sub
rol
ror
pop
shl
xor
shr
pop
push
ror
pop
push
push
add
pop
push
push
lea
push
push
push
call
add
pop
mov
add
mov
mov
pop
rclb
mov
xchg
filds
add
mov
sar
pop
mov
add
add
cmpsl
add
aam
bound
pop
call
mov
push
sub
rol
pop
push
push
shl
pop
push
push
push
push
push
push
push
push
call
add
add
stc
jp
add
add
xchg
mov
loope
out
testb
add
mov
ret
add
shl
add
xchg
int3
add
in
add
iret
add
enter
add
mov
lret
pop
loop
add
add
add
mov
imul
jl
out
mov
xchg
add
pop
repnz
lds
popf
sahf
into
add
fwait
mov
add
pop
mov
lea
pop
mov
push
not
pop
add
add
push
push
lea
push
lea
push
push
push
lea
push
call
test
add
mov
jns
test
pop
mov
popf
xchg
lock
add
jne
add
int
std
push
test
add
add
mov
out
add
cli
cltd
add
mov
push
add
xchg
add
call
cmpsb
add
add
fiaddl
add
push
add
test
xchg
add
add
repnz
pop
add
mov
xor
push
lea
push
push
push
push
push
push
push
call
outsl
fisubs
lret
push
lock
add
add
push
add
push
add
je
add
push
add
cmpb
pop
mov
add
test
notb
jo
add
add
add
mov
mov
call
data16
add
shr
icebp
add
mov
add
add
data16
jne
push
shl
pop
push
push
sub
rol
rol
pop
mov
push
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
pushf
add
add
add
mov
int3
add
jae
pop
add
mov
xchg
mov
add
enter
add
into
add
add
hlt
loopne
mov
mov
mov
add
jmp
fiadds
mov
imull
jae
add
imul
push
js
add
les
add
push
lea
push
push
call
cwtl
mov
out
into
clc
int
add
lahf
add
mov
push
push
call
cmpsb
add
data16
add
idivb
out
cmpsb
pop
add
pop
test
jne
add
test
add
mov
testl
insb
fwait
push
add
loope
mov
lods
add
add
addr16
add
push
rol
pop
add
push
push
call
sti
enter
int
add
mov
add
hlt
clc
jae
cmc
cli
loop
sbb
add
mov
add
add
add
test
add
cli
add
xchg
mov
cmpsb
add
fiaddl
add
mov
mov
aam
into
mov
add
add
add
sti
add
add
add
pop
pop
push
push
push
lea
push
push
call
push
add
add
addb
xchg
icebp
int3
fiaddl
add
mov
mov
je
xchg
test
add
lock
xchg
add
push
mov
out
add
rolb
jb
add
xchg
xchg
scas
sti
fiaddl
pop
mov
shll
add
aam
pop
mov
popa
aad
pop
add
pop
les
lea
pop
mov
xor
push
lea
push
push
push
push
push
push
lea
push
push
push
call
out
add
addw
test
add
movsb
pop
in
incb
add
mov
stc
xchg
add
lret
jno
add
jbe
je
pop
mov
add
pop
rep
push
shr
pop
mov
xor
push
lea
push
call
xchg
mov
test
lods
pop
add
add
mov
xchg
add
add
loop
mov
jge
add
add
mov
add
cmpsb
add
push
jne
add
clc
add
hlt
roll
mov
insb
cli
call
mov
lea
pop
or
je
mov
xor
push
shl
inc
not
pop
mov
xor
push
lea
push
push
push
lea
push
push
push
push
call
aad
jmp
ljmp
je
jle
pushf
mov
jbe
add
outsl
add
add
arpl
pop
xchg
je
add
add
pop
lret
pop
jne
int3
cld
add
repnz
lea
pop
add
add
push
lea
add
pop
push
mov
xor
push
add
sub
pop
add
pop
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
add
mov
add
cmpsb
iret
stc
add
push
mov
add
add
out
add
bound
mov
lret
add
add
outsl
push
call
test
add
imul
jno
push
lea
arpl
rep
mov
xor
push
xor
sub
xor
rol
pop
or
je
push
dec
inc
pop
mov
push
dec
dec
add
shl
pop
add
push
push
push
push
lea
push
push
push
call
add
add
rolb
xchg
testl
leave
pop
add
add
mov
ja
add
pop
rolb
pop
jp
addb
fwait
clc
scas
mov
int
rolb
xchg
add
call
jbe
enter
out
jno
push
mov
add
pop
add
push
add
xor
pop
rep
push
lea
not
pop
pop
push
push
ror
xor
shl
push
or
not
add
xor
rol
sub
rol
sub
not
pop
add
shr
pop
push
add
pop
pop
mov
push
push
push
push
push
push
lea
push
push
push
call
fildl
loopne
hlt
jns
loop
mov
add
int3
out
cmc
mov
add
xlat
add
push
std
add
loopne
add
mov
add
mov
jmp
mov
leave
jne
add
fisttpll
scas
add
add
out
add
pushf
add
pop
mov
lods
add
div
add
add
pop
mov
push
shr
pop
mov
push
pop
jmp
push
push
push
push
push
push
lea
push
call
sahf
enter
mov
add
popa
add
add
out
out
add
add
xorl
fadd
test
js
ret
popa
add
mov
lea
pop
push
push
push
push
push
push
push
push
call
movsb
add
addr16
nop
imul
cltd
add
ret
into
jo
add
aad
add
jle
shl
add
loope
testl
mov
mov
fsubrs
in
pop
lods
int3
push
pop
pop
xchg
mov
add
pop
mov
push
dec
add
shl
pop
add
push
push
rol
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
cwtl
jo
arpl
add
add
into
sub
add
popa
mov
push
jno
fmuls
pop
add
add
mov
add
negb
sbbb
rclb
aad
push
mov
fidivrl
add
add
mov
lea
pop
push
mov
push
push
push
lea
push
push
push
lea
push
call
lock
add
jbe
add
pop
add
in
add
addr16
add
ficomps
mov
jmp
jmp
add
add
mov
flds
add
add
add
hlt
mov
push
hlt
add
pop
pop
push
push
push
push
push
push
push
push
push
push
call
add
jo
movsb
rol
push
ja
mov
add
nop
xchg
push
add
add
fwait
add
add
jae
mov
mov
push
jl
icebp
add
add
add
jne
movsl
clc
jnp
in
add
lds
mov
cltd
fstp
add
mov
scas
mov
cld
lea
pop
pop
push
lea
push
push
push
push
push
push
call
add
into
push
int
add
stos
movb
add
add
add
add
add
xchg
add
add
add
add
add
add
pop
addl
mov
pushf
movsl
add
add
pop
js
mov
lea
pop
pop
push
push
push
push
call
add
push
add
stos
add
mov
mov
add
add
add
xchg
into
nop
mov
mov
std
add
add
add
pop
pop
push
xor
not
inc
pop
leave
push
shl
shl
pop
ret
push
push
push
push
push
call
add
andb
add
add
rolb
add
add
add
xchg
enter
int3
loope
scas
clc
int
out
fs
add
add
pop
insb
mov
lea
pop
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
add
add
add
add
sahf
add
add
add
jbe
test
lcall
xchg
mov
push
mov
flds
stos
add
push
add
mov
push
cmc
add
add
add
out
add
lea
pop
mov
add
push
lea
push
lea
push
lea
push
push
push
call
push
add
popf
jbe
lods
add
add
pushf
add
jnp
js
lahf
add
push
mov
add
xchg
cld
leave
aam
add
in
add
in
xchg
cmc
jno
mov
test
xchg
fs
jmp
add
xchg
fldl
add
enter
aad
add
push
jo
scas
add
mov
jne
push
into
add
push
sbb
push
push
push
call
push
lcall
push
jge
push
add
push
add
sti
flds
imul
jbe
cmpsl
les
xchg
sahf
jae
out
add
out
xchg
add
roll
addr16
div
push
add
add
add
hlt
add
nop
mov
lea
pop
push
push
push
call
mov
mov
cwtl
xchg
mov
test
add
add
add
add
iret
pop
fcoml
xchg
movsl
cmpsl
add
jnp
mov
std
mov
aam
add
add
pop
add
ljmp
mov
add
xchg
push
mov
bound
imul
lret
lret
add
leave
mov
lea
pop
push
movl
push
inc
pop
addl
test
je
push
sub
pop
mov
pop
push
rol
xor
inc
pop
pop
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
call
cwtl
add
add
pop
jno
in
int3
lcall
hlt
mov
loopne
lret
stc
push
add
hlt
hlt
push
fs
fwait
mov
add
mov
mov
lea
pop
pop
leave
push
lea
add
inc
pop
ret
push
push
push
lea
push
call
fbstp
int
xchg
gs
fiadds
mov
jge
add
mov
movsb
add
cmpsb
fcomps
rcl
add
jecxz
out
add
in
fildl
add
add
out
add
mov
lret
fcomps
pop
add
add
mov
lea
pop
push
push
push
lea
push
push
call
aam
add
add
add
mov
add
scas
xchg
add
testb
hlt
test
cmpsl
add
shll
mov
addb
jl
aam
cwtl
push
mov
add
add
add
add
add
out
sbbb
je
rolb
add
scas
push
add
pop
mov
add
push
shl
pop
push
push
lea
push
push
lea
push
lea
push
push
call
fucomi
add
mov
add
xchg
add
lds
lods
mov
addb
mov
push
jne
add
jno
cli
out
popa
add
xchg
mov
pop
popf
mov
gs
add
mov
add
add
pop
mov
mov
lea
pop
push
push
push
lea
push
push
call
push
add
mov
add
add
bound
addr16
add
add
rclb
jne
mov
jb
add
loop
testb
pushf
mov
add
add
push
into
nop
add
nop
jecxz
add
mov
popa
or
push
testl
push
lea
push
push
lea
push
push
push
push
push
call
fists
add
enter
add
add
add
mov
pusha
add
add
jae
pop
addr16
pop
add
push
mov
roll
xorb
roll
out
clc
pusha
jecxz
add
add
mov
lea
pop
addl
push
xor
pop
push
push
push
push
push
push
push
lea
push
call
add
push
jns
add
add
add
addr16
lock
jb
xchg
iret
movsb
not
pop
add
add
mov
fiaddl
imul
pop
add
add
add
mov
out
mov
sbbl
add
in
add
add
fcoml
mov
add
iret
add
add
add
add
cltd
add
aam
bound
call
mov
push
xor
pop
pushl
push
ror
rol
shr
add
pop
push
push
lea
push
push
call
add
add
add
mov
xorl
test
jnp
add
add
lret
add
add
lahf
add
sti
add
popa
add
nop
add
add
add
push
add
pop
push
push
push
push
push
call
mulb
xchg
add
stc
outsl
push
add
mov
rolb
mov
add
add
add
out
add
into
add
test
incb
add
add
add
add
mov
add
jns
loop
mov
add
xchg
add
add
jmp
int3
lea
pop
call
push
add
sub
dec
sub
pop
cmpl
jne
push
lea
not
pop
pop
push
push
push
push
lea
push
push
call
xchg
aam
add
push
mov
divl
pusha
jnp
stos
add
jmp
add
cld
add
add
mov
aad
lods
mov
flds
add
out
mov
lea
pop
pop
push
rol
lea
ror
pop
pop
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
add
enter
jno
lods
add
lea
fldl
add
push
fmull
add
add
add
mov
add
add
addb
add
pusha
add
test
add
add
ja
pusha
add
lret
imul
add
xchg
test
mov
mov
add
jle
add
add
arpl
pop
push
push
push
push
push
push
push
push
lea
push
call
add
push
add
js
out
add
xchg
scas
incb
mov
add
add
jae
arpl
add
add
add
add
jne
add
sti
add
add
mov
add
add
aad
movsl
add
fistps
add
pop
leave
push
dec
pop
ret
push
push
push
push
lea
push
push
lea
push
push
call
add
xchg
add
add
mov
add
jno
add
add
popa
add
popl
add
rolb
xchg
jecxz
bnd
movsb
add
loop
mov
lods
add
push
jl
cld
mov
lds
clc
fiadds
stos
cli
cmpsb
arpl
ret
lock
jnp
push
add
jmp
stc
js
mov
bound
mov
movl
and
push
lea
push
push
push
push
push
lea
push
call
add
out
add
add
mov
push
pusha
repnz
mov
mov
add
mov
bound
add
call
pop
leave
add
add
fisubrs
stos
jmp
out
add
push
add
add
add
mov
lea
pop
mov
push
lea
push
lea
push
push
push
push
call
fcmovnbe
fildl
call
add
in
add
pop
mov
mov
in
mov
add
mov
add
add
lock
add
add
xlat
loope
loope
add
add
clc
sarl
hlt
lea
pop
add
push
push
lea
push
push
call
add
ret
enter
xchg
imul
jo
add
add
sbbb
andb
mov
cmc
add
add
hlt
loop
add
jle
add
roll
rcrb
in
stos
add
mov
lea
pop
push
push
push
shr
pop
push
push
push
sub
shr
pop
movl
push
lea
push
push
push
lea
push
push
lea
push
push
push
push
call
add
out
add
ja
add
fcomps
mov
shr
movsb
icebp
std
mov
xchg
imul
add
mov
jbe
aad
cmpsl
outsl
int3
mov
add
push
imul
jbe
popa
ficoml
jle
add
mov
clc
pusha
mov
lods
add
add
jnp
cltd
imul
jne
add
rclb
pop
push
push
rol
shl
sub
sub
pop
call
push
push
push
push
call
mov
mov
div
add
gs
add
lret
add
repnz
add
out
mov
outsl
pushw
add
add
add
mov
stos
pop
mov
jle
pop
add
movsb
out
add
stos
orl
push
push
xor
shl
pop
call
push
lea
push
lea
push
push
push
lea
push
call
pop
roll
add
add
add
add
shll
je
jns
add
add
add
jge
out
add
add
repnz
lea
pop
subl
cmpl
jne
push
push
call
add
rolb
add
in
mov
outsl
pop
push
pusha
add
insb
fidivrl
iret
add
add
mov
add
add
add
add
push
cmpsl
fadd
add
mov
pusha
add
add
add
rcl
add
fldcw
rcrl
add
test
add
roll
add
xchg
je
jl
popl
hlt
lea
pop
pop
push
sub
pop
pop
push
add
pop
pop
pop
push
not
inc
pop
leave
push
push
push
push
push
lea
push
lea
push
push
call
jge
jb
add
nop
mov
add
scas
add
mov
loopne
xchg
jb
shl
add
add
push
ret
lret
lock
add
add
xlat
add
push
jno
add
add
cmpsl
cwtl
mov
loopne
mov
into
cmpl
les
push
push
push
push
push
lea
push
push
push
push
push
call
mov
fdivrp
add
add
jbe
xchg
jno
int
fiadds
fstl
jo
push
test
add
add
test
push
mov
scas
arpl
add
movsb
add
insb
add
add
outsl
lahf
add
add
push
jp
mov
add
add
mov
jb
jmp
fistpl
mov
lea
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
add
xchg
insb
add
xchg
stos
add
leave
add
ja
movb
xchg
add
lds
add
mov
add
fldt
add
int3
add
mov
lea
pop
mov
add
push
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
add
add
add
jp
push
mov
nop
push
jge
lret
add
roll
jo
mov
add
in
push
xlat
add
add
gs
stos
xchg
sti
stc
lea
add
add
xchg
test
add
add
pop
push
push
lea
push
call
enter
lods
rcrb
xchg
jno
filds
filds
add
add
mov
sti
mov
lea
movl
jbe
add
add
rcll
add
mov
add
lods
je
out
rcr
add
add
scas
fidivl
add
push
lea
pop
push
push
ror
add
add
pop
push
push
shl
lea
pop
push
push
push
call
lea
add
movsl
push
add
test
pop
add
jae
jb
add
jnp
arpl
clc
imul
pusha
std
lock
addb
add
jle
leave
cmc
add
subl
jle
scas
arpl
rcrl
jbe
add
add
jmp
outsl
arpl
add
out
mov
mov
lea
pop
mov
lea
push
push
call
add
fcomps
in
outsl
movsb
add
mov
sahf
rcl
cli
mov
in
incb
popf
add
xchg
ret
add
add
add
mov
add
add
add
fisttpl
pop
sub
mov
push
lea
push
call
add
addl
cwtl
add
xchg
add
lahf
movl
sahf
mov
add
cli
stc
jle
jo
mov
jne
add
pop
jo
add
sub
add
scas
xchg
add
jbe
add
pushf
notb
add
jmp
out
stc
lods
add
pop
fsubs
loop
insb
aam
cwtl
jl
les
pop
shr
push
shl
sub
not
pop
add
mov
push
shr
inc
add
add
pop
mov
push
not
xor
dec
pop
add
push
lea
push
push
push
lea
push
call
jne
jl
add
fidivl
popa
lret
add
add
add
pop
pop
add
fdiv
mov
test
lock
push
out
add
add
outsl
xchg
popa
add
pusha
add
pop
into
loopne
out
mov
popf
in
add
add
testb
add
add
lea
pop
add
mov
push
shr
pop
mov
push
sub
pop
cmp
jne
cmp
jne
push
xor
rol
not
pop
mov
push
sub
ror
pop
movl
push
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
loope
add
movsl
xlat
rcrl
sti
add
add
enter
xlat
add
add
mov
js
jb
add
cwtl
incb
add
outsl
add
add
add
add
add
mov
gs
add
fiadds
add
cmpsb
add
roll
jp
mov
add
add
add
push
data16
jl
cld
lea
pop
jmp
push
push
push
push
push
push
push
push
call
pop
mov
in
pushf
jge
add
mov
js
mov
call
test
mov
add
mov
add
push
lcall
mov
add
xchg
les
add
add
imul
add
lret
rcrl
add
int3
lea
pop
mov
mov
push
push
lea
push
push
push
push
push
push
push
call
mov
jp
fxch
lahf
add
push
pop
xchg
mov
add
mov
std
jnp
lcall
test
scas
mov
stos
jbe
insb
repnz
mov
mov
mov
push
add
add
aad
add
fldl
add
jbe
shll
add
fdivr
mov
lea
pop
sub
jne
mov
push
push
call
add
aad
ret
lods
out
jecxz
ljmp
mov
add
scas
add
xchg
add
pop
pop
mov
xchg
stos
mov
add
loope
lods
mov
push
aam
add
int3
lea
pop
movl
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
pop
incb
addb
fimuls
stos
data16
scas
cwtl
add
enter
push
cli
loopne
pop
roll
cli
add
pusha
stc
std
pop
xchg
mov
insb
into
cli
add
add
jecxz
std
add
add
add
sti
add
in
fdivl
sahf
addb
outsl
add
add
mov
addr16
jmp
mov
push
lea
push
push
push
push
push
call
pop
jp
jmp
add
test
add
lods
mov
push
add
add
push
scas
add
add
add
add
clc
mov
add
jae
leave
add
add
add
add
add
add
pop
nop
mov
data16
nop
mov
add
cmp
jne
push
sub
sub
pop
mov
movl
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
call
mov
add
mov
add
add
add
add
aam
add
add
add
lret
push
mov
aad
add
add
add
mov
add
add
movsb
add
stos
add
mov
add
add
ficomps
test
sar
add
fs
xchg
pop
add
lret
repnz
mov
lea
pop
jmp
push
push
push
push
push
call
aam
xchg
lods
popf
pushf
test
mov
aam
add
leave
arpl
jbe
sti
test
cwtl
test
mov
push
add
aam
add
add
add
repnz
add
mov
add
rcll
mov
add
lcall
add
test
mov
add
add
pop
mov
push
push
push
lea
push
lea
push
push
push
call
pop
add
pushf
add
stos
add
add
add
add
arpl
clc
incb
add
add
push
push
add
add
scas
jecxz
add
out
mov
push
jns
cld
add
add
add
cmpsb
mov
add
add
add
sbb
cmpw
jne
push
shr
pop
mov
push
push
call
in
add
add
jno
shr
lds
add
mov
add
cli
fidivl
lahf
les
add
mov
push
lret
iret
push
data16
pop
movsl
add
cwtl
aam
aam
stos
test
mov
pop
add
mov
push
in
mov
push
sti
lds
add
mov
add
mov
lea
pop
movl
jmp
push
ror
not
add
pop
pushl
push
push
push
push
call
mov
add
push
cli
jl
add
pop
add
notb
add
hlt
mov
lret
insb
out
add
jbe
fcmovnbe
add
add
bound
jo
add
repnz
push
mov
lea
pop
pop
push
push
lea
push
push
push
push
push
lea
push
call
add
clc
add
add
enter
add
mov
mov
add
add
add
add
add
add
xchg
jp
jno
add
mov
pop
pop
add
hlt
lea
pop
mov
mov
push
push
push
call
je
icebp
mov
cmpsl
popf
add
cmpsl
add
lea
cmpsb
xorb
add
add
jnp
add
insb
add
jno
adcl
gs
nop
fsubl
scas
lds
lret
jae
les
push
or
dec
rcll
enter
jne
xor
add
ror
dec
inc
sub
add
pop
xor
shl
inc
pop
push
shl
not
shl
add
pop
push
call
push
shr
add
pop
cmpl
je
push
push
shr
push
sub
add
rol
add
sub
inc
sub
pop
shr
ror
pop
push
push
push
lea
push
push
push
push
call
addb
cld
movsb
mov
mov
sbb
les
mov
xchg
aam
push
add
mov
pusha
mov
std
stc
add
rolb
stos
fldl
rcll
mov
add
int3
lea
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
add
push
jns
pop
hlt
les
add
add
mov
mov
mov
add
insb
loop
fdivs
sti
add
cmpb
mov
mov
fiadds
jnp
add
sahf
jb
call
stos
cmc
add
push
add
add
xchg
jmpw
add
add
scas
add
stc
mov
lea
pop
call
cmpl
je
push
push
add
ror
not
push
xor
add
add
shl
xor
shl
sub
add
add
pop
inc
dec
pop
push
lea
push
push
push
push
push
lea
push
push
push
lea
push
call
fbstp
add
test
add
add
add
add
filds
bound
mov
jb
xchg
mov
loopne
mov
xchg
push
pop
mov
lea
pop
push
call
push
push
push
push
push
push
push
push
lea
push
push
call
add
lret
xchg
pop
xchg
cmc
mov
add
jo
add
pop
add
int3
movsl
lods
fcomps
add
cld
fisubrl
cmpsl
fdivrl
mov
add
cmpsb
lock
lods
add
add
add
add
add
add
pop
cmpl
je
push
push
not
push
push
pop
add
sub
sub
dec
ror
dec
pop
ror
sub
sub
pop
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
in
push
movsl
ret
in
fldenv
add
pop
mov
add
lahf
cmpsb
pushf
jno
mov
xchg
pop
add
mov
in
xchg
mov
loop
add
add
gs
fisttpll
add
add
pop
push
call
push
rol
pop
cmpl
je
push
push
push
or
inc
add
add
shr
shl
sub
sub
pop
rol
shl
pop
push
lea
push
call
incb
add
out
add
mov
fldl
jl
add
cmpsl
loop
add
lds
js
stos
add
add
add
add
add
push
icebp
add
add
add
jecxz
stc
loop
add
add
mov
lea
pop
push
call
push
inc
pop
cmpl
je
push
push
inc
shr
shl
add
push
sub
add
lea
not
add
sub
sub
dec
sub
pop
xor
dec
pop
push
push
push
lea
push
push
lea
push
call
repnz
data16
jl
push
add
add
mov
addl
add
mov
push
add
pop
repnz
push
test
arpl
arpl
enter
add
in
sub
hlt
lea
pop
push
push
lea
push
push
push
push
push
push
push
call
subl
lock
add
pop
add
add
xchg
add
cmpsl
jne
add
fadds
add
push
add
cli
add
js
add
mov
scas
js
lret
stc
add
bound
mov
stos
mov
lea
pop
call
push
push
push
push
call
mov
push
scas
gs
add
jmp
mov
jb
add
xchg
add
add
add
iret
popl
add
std
mov
add
xchg
add
mov
lea
pop
cmpl
je
push
push
dec
push
xor
add
shl
add
ror
sub
add
pop
dec
not
inc
add
pop
push
sub
add
shl
pop
push
call
push
shl
rol
not
pop
cmpl
je
push
push
shl
lea
push
or
inc
add
shl
add
shl
dec
sub
sub
ror
xor
add
pop
not
sub
add
pop
push
push
push
call
mov
mov
add
add
add
mov
lcall
pop
mov
xchg
shr
pop
push
movsl
add
add
imul
mov
cltd
add
add
push
add
rolb
add
gs
mov
lea
pop
push
push
lea
not
lea
pop
call
push
sub
pop
cmpl
je
push
push
shr
dec
xor
shl
push
and
add
dec
add
sub
shr
inc
sub
pop
dec
inc
pop
push
push
push
lea
push
call
pop
ret
add
push
mov
add
xchg
aad
jno
push
lock
repnz
movsl
roll
push
loop
add
add
int3
push
ljmp
add
sti
lahf
ja
push
out
out
faddl
jecxz
fisubrs
lret
add
add
mov
lea
pop
push
call
push
push
lea
push
push
push
push
push
call
add
fstpt
add
cld
arpl
jne
add
mov
movl
add
add
rol
add
add
add
gs
add
xlat
rcrb
lds
add
mov
pop
in
add
mov
mov
mov
lea
pop
cmpl
je
push
push
add
dec
sub
push
and
add
shl
shr
sub
pop
ror
shl
pop
push
push
push
push
push
lea
push
call
gs
ret
add
add
mov
jo
mov
push
push
mov
add
add
sti
mov
add
mov
jge
add
add
cmpb
push
add
in
add
leave
scas
jns
add
cwtl
xchg
add
add
pushf
js
adcl
jo
add
add
lea
pop
push
push
shr
shr
pop
call
push
not
add
xor
sub
pop
cmpl
je
push
push
ror
push
or
not
add
ror
sub
dec
add
pop
not
sub
pop
push
push
lea
push
lea
push
call
xchg
mov
add
add
fcmove
subl
js
jge
add
dec
add
popf
sahf
hlt
sahf
fdivl
fldl
add
lods
stc
arpl
add
lds
movsl
mov
lea
pop
push
push
rol
dec
add
pop
call
push
ror
inc
pop
cmpl
je
push
push
add
push
or
not
add
shl
rol
sub
inc
add
pop
add
ror
sub
pop
push
rol
ror
sub
pop
push
call
push
ror
shr
pop
cmpl
je
push
push
push
push
pop
add
sub
ror
rol
pop
rol
dec
pop
push
push
lea
push
lea
push
call
in
pushf
push
add
out
xchg
lret
cltd
lret
jo
add
mov
xchg
xchg
add
enter
add
xchg
add
add
fldl
mov
incb
xchg
adc
call
push
sub
pop
cmpl
jne
push
sub
dec
pop
mov
push
add
pop
movl
push
not
ror
dec
add
pop
jmp
push
sub
pop
xor
pop
push
sub
dec
add
pop
pop
push
add
pop
pop
pop
push
sub
pop
leave
ret
push
rol
sub
ror
not
pop
push
mov
push
push
push
lea
push
lea
push
lea
push
call
jle
ljmp
je
fiaddl
jne
nop
shll
mov
xchg
nop
jno
mov
add
scas
add
xchg
lds
les
xchg
add
gs
in
mov
cmc
movsb
rorl
push
movsl
mov
lea
pop
add
cmpl
jne
push
push
lea
lea
push
or
inc
add
add
sub
sub
pop
sub
add
not
pop
push
ror
sub
pop
pushl
push
pop
call
push
push
call
mov
add
add
icebp
add
leave
add
mov
jns
jb
pop
add
movsl
add
mov
jnp
stos
add
add
add
pop
push
push
lea
push
push
push
push
call
in
loope
add
cwtl
mov
mov
jge
jo
clc
scas
add
cmpsb
movsb
lret
push
popf
add
xchg
add
add
lods
add
data16
add
mov
mov
add
xchg
cwtl
lcall
jecxz
aam
bound
call
jmp
push
push
call
add
add
pop
les
mov
xchg
gs
ljmp
shl
xchg
add
jmp
pusha
mov
jb
add
add
add
scas
jle
cmpsb
add
mov
add
add
jmp
stc
enter
out
hlt
add
arpl
popa
add
add
pusha
or
jge
add
test
add
push
push
push
push
push
push
push
lea
push
call
add
stos
cld
lods
push
add
jecxz
call
add
add
add
mov
fldenv
addr16
mov
repnz
fildll
lahf
add
sti
out
add
fimuls
pop
cmpl
jne
push
shl
shr
shr
pop
leave
push
rol
pop
add
push
ror
sub
dec
sub
pop
pop
push
dec
pop
pop
push
lea
dec
sub
pop
pop
pop
push
push
push
push
push
lea
push
lea
push
push
call
mov
add
imul
push
out
jne
mov
mov
pusha
data16
rolb
mov
add
flds
scas
in
add
rolb
popf
lods
mov
insb
add
ja
mov
insb
mov
lea
pop
leave
push
shr
pop
add
push
push
push
push
lea
push
lea
push
push
call
mov
add
jge
popa
pop
testb
xchg
mov
add
xchg
add
add
ljmp
add
mov
fiadds
ja
jbe
add
std
push
ljmp
add
add
lret
out
mov
out
aam
pop
add
mov
lea
pop
ret
push
push
lea
push
push
lea
push
push
push
push
push
call
mov
mov
lods
rcl
mov
in
ror
pushf
out
add
add
test
fwait
add
add
add
add
clc
sub
add
movsb
push
add
add
lahf
xchg
add
add
out
add
add
sbbb
add
xchg
jno
jb
add
pop
jmp
cmpl
jne
push
push
not
sub
push
sub
add
dec
shr
dec
sub
add
sub
ror
dec
pop
add
dec
pop
push
sub
inc
add
pop
pushl
call
push
lea
push
call
in
xchg
jae
add
out
lret
add
lcall
push
mov
out
jnp
xchg
add
cli
lock
outsl
add
add
mov
testb
imul
add
mov
add
add
imul
add
gs
lea
pop
push
push
add
pop
call
jmp
push
push
lea
push
push
push
push
push
lea
push
call
in
test
mov
mov
add
add
add
roll
add
xchg
add
mov
notb
lcall
add
xlat
lret
jmp
add
pop
add
mov
jp
add
test
jp
fildl
lds
rolb
ljmp
cmpl
jne
push
lea
push
push
push
push
push
lea
push
call
jb
add
mov
popa
xchg
mov
add
stos
mov
push
movsb
add
pop
bound
ret
pop
add
add
mov
mov
mov
xlat
test
leave
add
sbb
mov
push
inc
inc
pop
mov
push
lea
inc
sub
add
pop
call
push
push
push
shr
push
or
not
add
sub
sub
rol
lea
lea
pop
xor
lea
pop
push
push
push
push
push
call
add
add
add
pop
add
out
add
fcmovbe
pop
pop
enter
add
add
call
cwtl
add
xchg
fldl
add
jmp
xchg
mov
add
mov
movsb
cmc
jle
cld
mov
addb
mov
mov
mov
add
bound
pushl
push
xor
dec
inc
pop
call
push
lea
push
push
push
push
push
push
push
call
add
add
lret
incb
add
pusha
mov
mov
mov
aad
pop
call
aad
xchg
fiadds
jno
cltd
cmpl
repnz
add
add
add
add
hlt
lea
pop
call
push
push
dec
push
xor
add
xor
lea
add
shl
sub
not
lea
inc
pop
add
inc
sub
sub
pop
push
shl
pop
pushl
call
push
push
push
push
push
push
lea
push
lea
push
push
push
call
push
lahf
pop
cltd
mov
push
jne
add
add
mov
push
shr
jo
mov
mov
add
jno
pop
in
mov
add
add
add
xchg
jns
add
insb
jns
add
xchg
testb
add
int3
lea
pop
call
push
push
lea
ror
push
push
pop
add
inc
sub
shr
pop
sub
add
pop
push
add
shl
pop
pushl
call
push
push
push
lea
push
push
push
call
bound
loop
test
mov
sti
scas
add
add
scas
add
xchg
add
add
shr
push
add
jb
add
add
xchg
add
jnp
mov
push
mov
add
add
add
jae
pop
add
jmp
mov
add
js
fmull
shrb
dec
pop
dec
push
push
push
pop
add
dec
xor
shl
sub
inc
lea
pop
add
add
pop
push
lea
push
push
push
push
push
push
call
mov
sahf
add
push
mov
add
add
out
test
add
lahf
jmp
popf
gs
push
pop
jae
popl
popf
je
add
add
cwtl
add
add
cld
scas
cli
add
jo
jno
add
cltd
cltd
loope
imul
pusha
add
add
add
scas
addl
jns
add
xchg
sti
mov
add
scas
bound
lea
pop
pushl
push
push
lea
push
push
call
xchg
into
int3
imul
mov
jl
add
testl
xchg
ret
fs
mov
mov
cli
add
mov
mov
stos
test
add
add
mov
rcll
pop
add
add
add
add
fsubs
shl
ja
loope
add
add
loopne
cld
lea
pop
call
push
not
sub
lea
pop
call
push
push
lea
inc
lea
push
push
pop
add
not
dec
dec
sub
sub
pop
ror
sub
pop
push
lea
push
lea
push
push
push
call
add
add
imul
add
add
add
xchg
fldl
mov
cltd
add
fs
cwtl
hlt
mov
mov
test
gs
outsl
out
repnz
stos
add
mov
add
jne
lea
add
mov
mov
movsl
cli
add
add
stos
mov
mov
lea
pop
pushl
push
lea
push
push
push
lea
push
lea
push
call
scas
add
push
cwtl
add
push
add
mov
mov
jno
rolb
add
movsl
add
mov
add
jge
into
stos
imul
mov
add
add
push
add
add
data16
sbb
add
push
inc
pop
call
push
push
add
push
push
pop
add
not
sub
lea
pop
ror
shl
pop
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
fmulp
add
mov
cwtl
pop
in
mov
add
addb
out
cmc
add
scas
rolb
add
js
js
icebp
ror
add
add
mov
lea
pop
pushl
call
push
push
call
add
add
ljmp
add
flds
mov
popf
mov
fcomi
movsb
add
add
jns
xchg
add
ja
stos
add
out
add
xchg
mov
or
shrb
aas
imul
notl
add
jmp
pop
mov
sub
add
inc
pop
xor
not
dec
pop
push
lea
push
push
call
xchg
fwait
add
out
add
lock
add
gs
add
arpl
test
std
repnz
movsb
pop
jmp
mov
add
xchg
scas
add
in
scas
int3
mov
les
ja
add
fists
add
pop
aad
mov
add
push
mov
hlt
lea
pop
pushl
push
lea
ror
pop
call
push
not
add
xor
pop
call
push
push
add
shr
push
or
inc
add
sub
rol
sub
sub
rol
pop
dec
xor
pop
push
push
push
push
push
push
push
lea
push
push
push
call
add
add
bound
add
push
add
cmpsl
pusha
push
add
into
leave
movsl
push
outsl
jp
pop
add
pop
add
aam
clc
fadds
add
add
in
sti
mov
mov
lahf
fiaddl
mov
push
call
stos
add
mov
divl
mov
mov
test
les
jne
call
push
sub
rol
sub
shl
pop
call
push
push
sub
sub
dec
push
xor
add
add
inc
inc
sub
rol
add
shr
pop
lea
pop
push
shl
shl
shr
pop
pushl
push
lea
push
push
push
push
push
push
call
cmp
ljmp
add
in
test
push
add
movsb
xchg
jl
pop
pop
add
push
xchg
cld
add
add
pop
xchg
push
push
sahf
mov
add
sti
sahf
push
mov
lea
pop
call
push
push
push
push
push
push
push
call
mov
add
mov
add
add
add
fdivl
jne
in
ljmp
add
cmc
xchg
add
add
jb
loop
add
add
lret
les
shrb
xor
mov
rol
push
push
pop
add
lea
sub
ror
pop
shr
xor
sub
dec
pop
push
push
lea
push
push
lea
push
push
call
add
add
pop
lock
stos
add
pusha
pop
bound
mov
shll
add
test
add
out
popa
add
into
add
cmc
add
push
out
pusha
add
add
pushf
cwtl
add
out
add
mov
add
mov
fistps
add
int3
lea
pop
pushl
push
push
push
push
push
call
add
jb
sti
add
out
add
fisttps
sar
sti
cld
stc
add
xchg
scas
add
mov
add
add
mov
gs
ret
std
add
ja
stos
add
fsubr
addr16
rcr
icebp
shrb
stos
into
lahf
mov
lea
pop
call
push
push
call
scas
mov
into
add
pop
add
add
mov
sbbl
pushf
jge
add
add
mov
add
out
add
add
test
or
pushf
and
call
push
push
call
lcall
mov
pop
in
add
lcall
add
mov
insb
lcall
rol
add
pop
lcall
add
add
add
scas
push
fnstenv
lock
add
mov
jne
jns
negb
add
jns
mov
lcall
mov
lea
pop
call
push
push
ror
sub
push
push
pop
add
shr
add
inc
rol
sub
sub
pop
not
sub
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
add
out
cld
andl
add
out
js
cli
lds
xlat
call
mov
popa
add
jns
add
lret
add
lods
std
jmp
leave
lea
enter
mov
xchg
add
call
add
iret
add
mov
add
pop
pushl
call
push
push
push
lea
push
call
add
aam
filds
andb
mov
fs
pop
add
ljmp
std
pop
push
jge
push
add
jle
mov
mov
add
add
jle
mov
add
push
in
xchg
add
add
add
add
iret
mov
xlat
jbe
mov
jp
sahf
add
xchg
add
add
fnstenv
aam
bound
pop
call
push
push
shl
push
and
add
xor
rol
sub
pop
dec
pop
push
add
ror
ror
pop
pushl
call
push
shr
lea
shl
pop
call
push
push
rol
push
or
inc
add
sub
sub
pop
inc
sub
rol
pop
push
shr
not
pop
pushl
call
push
inc
inc
pop
call
push
ror
shr
pop
lea
push
push
lea
dec
add
push
xor
add
shr
not
sub
rol
dec
pop
ror
pop
push
push
push
push
push
push
push
call
add
arpl
push
stos
fiadds
add
xchg
push
add
xchg
add
lds
add
pop
addr16
add
lea
add
leave
stos
add
movb
mov
add
rolb
mov
xchg
mov
shr
add
scas
add
mov
add
mov
add
add
add
int
add
mov
leave
xchg
add
jl
add
add
pop
pushl
push
push
push
push
lea
push
call
add
loopne
push
push
add
loope
pop
add
in
in
add
xchg
loope
out
in
loopne
add
add
add
jecxz
mov
filds
jecxz
iret
aad
call
lods
add
cltd
xchg
add
add
pop
mov
add
scas
mov
lea
pop
call
push
lea
add
pop
push
push
rol
pop
call
push
push
not
lea
shl
push
or
inc
add
xor
ror
sub
sub
sub
pop
add
sub
pop
push
shr
add
xor
pop
pushl
push
sub
sub
shl
pop
call
call
push
dec
add
pop
mov
push
push
inc
push
sub
add
xor
ror
xor
sub
pop
pop
push
shl
rol
ror
pop
pushl
call
push
push
push
push
push
lea
push
call
add
insb
rcr
xchg
xchg
add
arpl
movsb
add
jb
add
jmp
mov
out
mov
add
mov
outsl
fildl
cmpsl
fs
add
popf
fldl
into
mov
hlt
fcomps
bound
pop
push
push
push
push
push
lea
push
push
push
push
call
ja
adc
shlb
cltd
aad
test
cltd
je
mov
data16
add
add
jecxz
xchg
push
mov
stos
add
xchg
lahf
jo
pop
add
add
cmpsl
mov
pop
add
pop
xchg
in
icebp
rcrb
add
mov
fiadds
cmc
add
jbe
add
mov
add
add
push
pushf
add
pop
pushl
push
add
pop
call
push
push
push
push
pop
add
not
ror
sub
sub
add
rol
pop
shl
ror
sub
pop
push
lea
push
push
push
push
push
push
push
lea
push
call
pop
add
add
add
jp
arpl
bound
gs
add
bound
testb
test
jge
mov
add
popa
xchg
mov
jge
roll
lret
add
mov
into
add
fiaddl
mov
mov
in
jbe
mov
data16
incb
add
add
lods
push
scas
in
nop
mov
mov
lea
pop
pushl
push
ror
shr
pop
call
push
push
sub
push
or
not
add
ror
sub
not
add
rol
ror
pop
shl
add
pop
push
push
xor
shl
add
push
and
add
sub
sub
add
sub
shl
pop
xor
inc
shr
add
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
add
add
add
cmpsl
fildl
jl
stos
leave
rolb
pop
cld
push
add
add
mov
mov
add
add
scas
test
arpl
shr
add
jo
ljmp
in
add
mov
lea
pop
call
push
push
dec
lea
add
push
and
add
inc
inc
sub
sub
ror
rol
pop
xor
ror
not
pop
push
not
sub
pop
pushl
push
shr
shl
pop
call
mov
push
add
sub
pop
lea
push
lea
push
push
push
push
push
push
call
push
add
add
add
mov
fmul
test
jnp
pop
mov
cmc
add
add
sahf
xlat
out
call
stos
jnp
pop
add
add
push
jmp
movsb
mov
imul
add
add
pop
lea
push
push
push
push
lea
push
push
push
call
pusha
add
add
add
xchg
add
js
add
jns
int3
add
add
orl
add
clc
push
enter
pop
add
jbe
jno
repnz
add
push
mov
add
add
test
sbb
push
push
ror
inc
pop
push
push
push
call
les
stos
jp
mov
std
movsl
pop
fs
add
lcall
mov
mov
add
in
mov
add
into
in
pop
pop
mov
mov
testb
add
popa
imul
out
add
add
add
je
add
pop
push
push
add
pop
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
jb
add
pop
out
add
jne
mov
into
in
lods
mov
pushf
and
sub
mov
push
imul
add
fnstcw
add
aam
lcall
rolb
std
cld
aam
add
add
add
add
push
mov
jl
add
pop
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
add
cmc
jle
jecxz
imul
mov
stos
add
add
std
movsb
mov
out
lahf
adcl
mov
cltd
mov
add
lahf
mov
add
data16
pushl
push
add
lea
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
rolb
mov
stos
add
pop
insb
pop
lds
mov
rolb
add
add
add
out
xchg
arpl
mov
add
mov
cltd
jmp
sub
lock
pop
in
mov
flds
pusha
stc
mov
xchg
mov
in
fwait
add
stos
add
fs
jno
add
and
call
push
push
sub
push
and
add
shl
sub
sub
xor
lea
dec
ror
pop
shr
add
lea
sub
pop
push
xor
pop
pushl
push
shl
not
pop
call
push
push
push
push
call
lock
add
cmc
add
loop
add
in
frstor
clc
add
cmpsb
pop
mov
mov
add
mov
add
mov
add
enter
out
aam
add
mov
pop
mov
lea
pop
call
push
add
pop
mov
push
push
lea
push
lea
push
push
push
push
call
out
add
sahf
pop
mov
shr
add
xchg
mulb
hlt
test
mov
lds
xchg
mov
clc
cltd
add
add
int
test
data16
add
add
addr16
ljmp
stc
add
jb
enter
add
mov
loop
sahf
fldt
add
lcall
add
mov
lea
pop
pop
push
lea
push
push
lea
push
lea
push
call
lret
je
addr16
hlt
add
out
iret
push
sti
add
ror
add
icebp
cmc
pop
outsl
add
ja
add
add
add
std
add
add
add
add
mov
add
mov
mov
jge
mov
lea
pop
dec
jne
push
push
push
lea
push
push
call
add
mov
add
nop
add
pop
add
stc
add
add
jmp
out
add
hlt
add
add
scas
popf
insb
jne
mov
add
xchg
add
add
add
add
xlat
add
ljmp
add
push
lea
pop
jmp
push
push
call
mov
arpl
je
add
add
add
movl
fidivs
lahf
rolb
cwtl
jns
scas
aad
push
add
mov
mov
mov
in
pushf
orb
movsb
ja
out
add
rcrl
movsb
test
bound
pop
call
push
push
shr
shl
shl
push
and
add
sub
add
pop
sub
shr
pop
push
push
push
push
call
shr
jecxz
shl
mov
mov
clc
je
add
pushf
aam
int3
test
in
addr16
add
lret
xchg
std
enter
add
movb
movsl
cld
roll
rolb
jno
add
add
mov
mov
add
popa
std
add
mov
rolb
jbe
xchg
mov
add
push
add
add
jmp
jle
in
insb
out
mov
lea
pop
pushl
push
push
push
push
push
call
fsubl
loopne
movsl
fldl
mov
jae
mov
fdivrl
test
bnd
test
add
push
add
add
scas
cmc
movsb
in
repnz
add
jecxz
imul
in
add
jae
add
gs
add
mov
lods
add
pop
call
push
push
lea
push
push
push
lea
push
call
add
jo
pushf
add
test
add
lods
lahf
add
fwait
add
movb
int3
add
stos
add
lahf
add
add
xlat
mov
xchg
int
les
call
push
push
push
lea
push
lea
push
call
add
xchg
loop
add
mov
decb
ficoml
pop
fiadds
testb
fiaddl
mov
cli
out
add
add
add
scas
add
out
loop
test
test
shl
add
adc
mov
push
lea
pop
lea
push
push
xor
rol
push
or
inc
add
sub
sub
sub
rol
pop
inc
add
rol
not
pop
push
lea
dec
lea
pop
pushl
push
add
pop
call
push
push
pop
call
push
push
shl
push
or
not
add
rol
add
add
sub
add
shr
pop
xor
pop
push
push
call
cwtl
add
hlt
ret
add
addr16
jmp
aam
stos
mov
add
add
mov
add
add
fldl
addb
mov
mov
add
jecxz
fcoml
mov
lea
pop
pushl
push
sub
sub
shr
ror
pop
call
push
push
push
push
push
push
push
push
push
push
call
pop
add
hlt
mov
add
pop
int3
std
push
leave
mov
add
pop
add
add
nop
in
rcrb
mov
les
add
jecxz
push
add
add
add
pop
fwait
pop
aam
loopne
test
add
push
add
in
add
cmpsb
add
leave
popa
jnp
test
add
icebp
mov
lea
pop
call
push
pop
mov
push
rol
lea
pop
lea
push
push
ror
sub
not
push
and
add
ror
sub
rol
sub
pop
add
shr
lea
pop
push
ror
dec
pop
pushl
call
push
add
inc
pop
lea
push
rol
pop
push
push
sub
shr
add
pop
push
push
lea
not
pop
push
push
rol
add
shl
pop
pushl
push
push
sub
xor
sub
rol
push
sub
add
rol
sub
lea
pop
shl
add
pop
push
push
call
push
add
ficoms
jns
loop
add
add
rolb
shlb
push
push
mov
push
add
add
mov
add
mov
scas
add
add
out
mov
add
add
add
add
pusha
pushf
mov
add
addb
add
aam
mov
lea
pop
push
push
pop
call
push
push
not
push
sub
add
shr
lea
dec
lea
sub
add
pop
sub
add
xor
pop
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
scas
pop
lds
jecxz
movsl
hlt
mov
push
test
pop
pop
jmp
mov
add
push
xchg
iret
add
les
pop
add
idivb
mov
add
jge
addr16
xchg
add
movsb
imul
add
jge
add
add
xchg
xchg
ret
int3
lea
pop
pushl
push
sub
pop
call
push
inc
shr
pop
push
push
push
call
mov
add
add
out
pusha
add
add
push
add
rcll
addb
jb
add
mov
cmpsb
xchg
mov
add
cmpsl
jmp
xlat
add
mov
pop
push
add
jno
push
into
xchg
cld
lea
pop
call
push
push
rol
dec
ror
push
and
add
lea
sub
xor
sub
ror
sub
pop
dec
pop
push
push
push
call
pop
add
popf
push
add
fwait
add
add
int
out
js
add
divl
sarl
mov
lods
xchg
add
mov
outsl
stos
int3
cmc
lock
add
in
mov
add
add
mul
push
push
lea
neg
into
add
imul
mov
cmpsl
add
pop
pushl
call
push
sub
inc
add
pop
call
jmp
push
pop
pushl
push
sub
not
xor
ror
pop
mov
push
add
not
pop
jmp
push
push
inc
push
xor
add
inc
add
lea
sub
sub
inc
not
shl
pop
shl
pop
push
push
lea
push
lea
push
push
call
call
jbe
add
outsl
jns
jb
fildl
out
andl
add
add
fdivr
add
add
add
pusha
add
lock
add
mov
add
pop
push
aad
mov
les
jne
call
push
lea
push
push
lea
push
push
lea
push
push
call
add
ret
ficoml
add
add
add
cmpsl
xchg
jnp
outsl
lods
addr16
add
imulb
mov
outsl
cld
add
add
jnp
add
add
neg
add
add
add
add
cltd
add
push
gs
lock
mov
mov
lea
pop
push
call
push
push
not
rol
inc
push
or
inc
add
ror
lea
add
sub
add
ror
pop
sub
add
sub
pop
push
lea
push
push
push
push
lea
push
push
push
push
call
jmp
fwait
jle
add
add
cld
int3
xchg
add
push
add
add
sahf
add
mov
add
js
rcll
pop
add
cmpsl
cmpsl
popf
push
testl
mov
test
shr
hlt
add
add
lcall
ja
hlt
leave
rolb
cmpsl
out
std
add
pop
pushl
push
ror
shl
pop
call
push
push
push
lea
push
call
add
je
lret
xchg
cli
mov
add
in
jle
push
mov
add
pop
fstpl
insb
jmp
add
mov
jns
lock
data16
add
add
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
aam
xchg
add
gs
xchg
add
xchg
add
out
ljmp
add
jns
addl
push
out
push
std
fwait
add
lea
out
add
add
sti
int3
pop
aad
add
insb
lahf
mov
lea
pop
call
push
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
add
xchg
ret
add
in
flds
popa
add
xchg
push
add
add
mov
ljmp
add
lods
lahf
roll
in
add
add
pusha
add
out
add
mov
fisubl
add
bound
gs
mov
cld
mov
add
fmull
push
shl
sub
pop
add
push
push
lea
push
call
pushf
add
cltd
add
mov
imul
xchg
mov
fadds
addb
mov
cmp
add
leave
push
add
jb
aam
sahf
add
std
add
mov
icebp
jecxz
js
leave
je
mov
lea
pop
pop
pop
push
shr
pop
pop
push
push
lea
push
push
push
push
call
jecxz
idivl
leave
add
subb
jae
addb
add
lods
in
add
add
fwait
lret
out
mov
add
push
jnp
add
stos
leave
add
faddl
add
stc
insb
add
pushf
add
add
add
lret
add
add
add
xchg
stos
mov
fadds
jbe
mov
lea
pop
pop
leave
push
dec
pop
add
ret
push
push
lea
push
lea
push
call
scas
mov
cli
push
xchg
cli
bound
clc
xlat
addl
push
add
gs
add
jno
into
flds
fimull
add
cmpsl
mov
mov
int
stos
add
jmp
lds
add
push
add
cwtl
add
addl
add
add
mov
hlt
lea
pop
leave
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
jno
add
add
add
add
xchg
jo
mov
add
gs
add
add
add
add
pushf
jo
add
mov
add
jno
rcrb
add
mov
xchg
pop
ret
push
lea
push
lea
push
call
xchg
rcrl
jo
mov
jl
in
aam
jbe
lods
add
add
add
data16
mov
add
test
shr
stc
scas
add
mov
or
push
push
not
pop
mov
push
dec
add
inc
pop
cmpl
jne
push
lea
push
push
push
lea
push
push
push
push
push
push
call
xlat
jbe
lds
popf
outsl
jge
add
cltd
add
imul
std
add
outsl
add
add
call
popf
out
pusha
pop
mov
push
movb
add
add
add
popl
ljmp
stos
add
out
add
nop
pop
clc
jno
sti
in
push
popf
mov
lea
pop
mov
push
push
lea
push
call
mov
scas
in
add
notl
addb
stos
push
add
lahf
add
stos
add
add
add
add
add
into
in
add
add
js
mov
sarl
lea
add
icebp
mov
add
jne
mov
js
mov
arpl
mov
arpl
jmp
push
sub
not
xor
pop
mov
and
push
not
inc
sub
pop
xor
xor
push
push
push
push
lea
push
lea
push
lea
push
call
push
ret
addr16
test
add
push
sarl
in
mov
add
add
in
add
movsb
add
push
jae
add
testl
push
add
fdivl
add
loop
lods
pop
add
add
pop
add
push
lea
push
push
push
push
push
lea
push
call
jbe
pop
out
push
rcrb
testl
pop
pop
test
roll
add
add
add
leave
rolb
cmpsb
jo
lahf
push
add
add
add
cwtl
into
push
add
mov
stc
add
pop
add
mov
add
mov
cmpsl
fucom
mov
fmull
dec
decl
ror
pop
sub
push
inc
sub
pop
jmp
sub
push
rol
pop
pushl
push
push
push
push
call
stos
sbbb
push
add
lds
negb
add
add
add
xchg
in
mov
int
cwtl
fildl
leave
add
pusha
add
js
ja
xchg
push
add
mov
mov
into
in
icebp
xchg
movsl
cmpsl
add
push
add
add
mov
jbe
mov
push
into
add
mov
add
fcmovb
mov
lea
pop
pop
push
rol
xor
add
pop
sub
push
add
ror
pop
cmp
jne
mov
push
sub
pop
lea
push
push
push
call
lret
mov
jns
cltd
add
mov
mov
add
add
add
in
fnsave
mov
pushf
add
mov
xchg
mov
add
test
cmpsl
add
rcll
les
jmp
inc
not
rol
dec
pop
shr
add
push
add
pop
sub
push
pop
pushl
push
add
pop
pop
push
push
call
test
loop
popf
add
out
mov
fwait
add
loop
shr
pop
lods
fwait
add
mov
mov
add
xchg
add
out
clc
fiaddl
stos
test
mov
jne
addr16
mov
or
jmp
imul
xor
incl
add
inc
mov
sub
ror
pop
sub
cmp
jne
push
push
call
pop
std
lds
add
add
mov
xchg
mov
in
add
cmpsl
test
add
mov
add
push
out
xchg
aad
jp
add
jae
jne
mov
add
add
div
addl
or
push
push
call
mov
add
filds
cmc
int3
add
add
mov
fwait
add
add
add
cmpsb
add
xchg
jnp
in
add
pop
pop
add
add
add
add
xchg
add
push
add
add
bound
stos
mov
int3
add
rolw
push
jnp
add
add
mov
test
int3
lea
pop
ret
push
push
push
call
jecxz
add
cmpsb
sahf
cltd
add
add
aad
jae
bound
popa
add
push
mov
mov
fldl
mov
mov
xchg
add
add
add
data16
push
push
push
push
call
add
add
mov
add
movsb
jge
pop
flds
pushf
mov
movb
push
mov
js
add
add
sti
movsl
mov
add
pusha
add
mov
add
sti
imul
mov
add
jo
add
add
add
add
add
lds
add
jo
hlt
mov
lea
pop
mov
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
mov
mov
jbe
add
mov
popa
nop
push
add
cmpsl
mov
mov
stc
add
add
add
cld
lock
push
int
add
add
add
add
imul
add
add
loope
add
enter
insb
data16
add
movsb
mov
lea
pop
add
push
push
lea
push
call
cwtl
stos
mov
fmul
hlt
pop
xchg
sti
add
test
pop
rolb
add
add
sti
stos
shll
add
add
cmpsb
add
leave
addb
add
add
imul
rolb
add
add
movsb
mov
add
fisubl
pop
mov
add
loope
add
push
clc
jae
mov
jmp
test
add
out
ja
add
mov
add
movsb
mov
lea
pop
push
push
lea
push
push
push
push
call
add
arpl
cld
add
xchg
add
fsts
lock
loop
add
xchg
add
lcall
mov
add
mov
lea
pop
push
push
lea
push
call
int3
stos
negl
cmpsl
data16
pop
int
add
add
fucomip
add
add
xchg
lods
add
popf
sarl
mov
add
add
mov
lret
add
je
mov
add
add
fabs
add
mov
lea
pop
push
push
push
push
push
push
push
call
add
outsl
lea
add
jle
mov
fdivl
add
rolb
mov
int
pop
add
add
scas
int
sti
add
mov
pushf
xchg
pop
jns
add
into
into
int3
pop
add
iret
fiadds
add
loope
add
sbb
push
push
lea
push
call
nop
push
add
out
add
push
add
xchg
add
add
jb
pop
flds
add
popl
pop
lret
inc
std
cli
stos
add
std
pop
add
add
add
loop
mov
jle
repnz
add
fdivs
lea
pop
mov
lea
push
lea
pop
sub
mov
push
lea
push
push
lea
push
push
push
call
arpl
add
mov
les
out
imul
lret
cwtl
jnp
fs
xchg
add
test
push
add
mov
add
add
add
pop
shr
push
sub
lea
pop
add
push
push
push
push
push
push
push
push
call
movb
add
add
push
test
mov
fs
aad
xchg
jno
call
add
push
add
add
fwait
jecxz
roll
add
add
cwtl
fadd
add
jno
push
jl
add
add
call
add
mov
add
out
popf
add
int3
lea
pop
mov
push
push
push
push
push
push
call
xchg
add
xchg
add
icebp
push
mov
lahf
add
lods
test
out
add
add
add
gs
out
add
sahf
mov
je
gs
aam
rorb
mov
imul
jecxz
test
fs
cmc
cmc
add
add
out
fldenv
out
mov
test
andb
add
add
pusha
cwtl
add
fldenv
mov
int3
lea
pop
add
push
push
push
push
push
push
push
push
call
add
push
pop
add
lds
jbe
lds
addr16
fwait
addr16
mov
shlb
repnz
lret
pop
in
int
faddl
rolb
rcr
jns
aam
add
mov
mov
imul
ja
int
add
mov
movsb
mov
add
jns
lock
lock
lea
pop
mov
push
shl
shl
xor
pop
add
push
xor
add
pop
xor
push
inc
sub
add
pop
mov
push
add
ror
pop
and
push
lea
push
lea
push
push
lea
push
push
push
call
add
mov
add
add
mov
mov
xchg
push
test
add
sahf
faddl
push
lods
jle
push
scas
add
mov
faddl
insb
add
add
push
add
add
call
hlt
push
pop
jae
sbbb
test
pusha
js
ret
popf
loop
scas
out
jmp
xchg
test
data16
rol
push
push
push
call
pop
lods
add
add
les
mov
out
roll
mov
mov
add
rcll
lcall
fwait
mov
mov
add
rcrl
sti
test
add
xchg
lea
roll
popa
add
push
rolb
clc
add
pop
rol
xor
push
inc
inc
pop
inc
push
push
push
push
push
lea
push
lea
push
push
call
jae
scas
fwait
add
lret
icebp
add
out
in
faddl
add
out
add
add
add
push
jno
jmp
add
notb
popa
mov
gs
xchg
faddl
add
add
idiv
nop
mov
pop
add
mov
out
cmpsb
mov
mov
jle
pop
pusha
add
int
jle
mov
int3
lea
pop
cmpb
jne
add
push
inc
add
pop
cmp
je
push
inc
lea
inc
pop
add
cmpl
jne
push
push
lea
push
push
push
push
push
lea
push
push
call
add
in
push
mov
les
enter
sahf
enter
loope
add
leave
in
push
leave
add
add
add
scas
xchg
add
pushf
mov
add
roll
push
add
add
out
scas
pop
add
mov
std
mov
je
lret
add
aam
add
add
and
xor
pop
push
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
push
jae
lcall
in
push
ret
rolb
pop
add
test
jns
jl
add
loope
sahf
pusha
test
les
out
lret
cltd
xlat
push
test
out
add
lret
lds
jle
mov
push
pop
add
scas
add
lds
clc
test
imul
add
add
mov
lea
pop
pop
push
push
call
push
cwtl
out
add
add
push
add
mov
add
add
add
loopne
mov
mov
test
mov
clc
add
add
stos
add
mov
add
add
add
lcall
fsubl
fwait
add
in
add
mov
or
pop
push
lea
pop
pop
push
sub
ror
sub
pop
leave
ret
push
push
push
push
lea
push
push
push
push
push
push
call
movb
push
add
xchg
add
add
mov
add
test
mov
pop
add
cld
add
in
cmpsl
icebp
jle
add
add
mov
jb
add
xchg
add
add
lea
pop
mov
push
push
lea
push
call
fcomip
into
mov
jecxz
cld
add
add
xchg
lods
push
add
mov
jae
push
ret
xchg
movsb
add
add
shlb
mov
add
push
add
scas
test
roll
call
add
add
mov
loopne
aad
jbe
addl
xchg
test
add
lret
test
add
mov
add
xchg
add
lea
pop
add
push
sub
sub
inc
sub
pop
push
push
push
push
push
push
push
push
push
call
bound
rclb
add
ljmp
lret
pushf
add
add
jmp
fwait
add
testl
xchg
pop
add
lret
fnstcw
mov
lret
mov
mov
hlt
push
sar
add
rolb
jl
mov
add
add
faddl
add
bound
pop
push
push
push
lea
push
push
call
cld
popa
out
mov
fwait
xchg
add
add
cmpsb
imul
pusha
out
add
xchg
add
roll
add
add
fwait
jae
add
push
add
iret
add
pop
sti
add
test
add
sahf
out
add
jl
add
add
add
add
add
jl
add
add
lds
add
mov
lea
pop
add
mov
push
push
call
jle
fsub
add
int
icebp
add
ja
add
add
add
lods
add
jl
test
add
scas
add
add
add
jae
sahf
xchg
add
incb
mov
add
add
add
mov
add
pop
cmpw
push
xor
add
ror
pop
pop
push
pop
pop
push
push
push
push
lea
push
push
push
call
pushf
add
add
stc
add
loope
add
xchg
lcall
loope
mov
add
add
mov
add
nop
addb
rcll
add
add
mov
stos
add
lods
stos
mov
lea
pop
mov
push
not
inc
pop
push
push
lea
push
push
call
aad
mov
ret
add
add
pusha
add
xchg
cltd
pusha
sahf
out
cld
push
jne
cli
arpl
add
icebp
jno
add
outsl
jb
add
add
add
add
add
testb
iret
jno
out
lahf
clc
add
add
jo
mov
nop
add
rolb
mov
or
call
push
shr
rol
sub
pop
xor
push
lea
push
lea
push
call
out
int
add
add
mov
add
orl
add
add
add
add
mov
xchg
add
push
mov
add
pop
add
scas
add
mov
pop
add
xchg
jns
mov
xchg
mov
add
fmul
push
mov
stos
nop
in
loope
add
mov
lea
pop
pop
push
add
pop
pop
pop
push
push
push
push
push
push
push
call
lahf
add
mov
enter
add
add
mov
testb
into
mov
scas
fstp
add
lcall
add
fs
add
add
pop
pop
addl
cmpsl
test
add
add
test
mov
add
add
lret
add
add
popl
mov
fmull
pop
push
sub
sub
dec
pop
leave
push
add
pop
ret
push
lea
push
push
push
lea
push
push
call
mov
int3
add
add
jle
jmp
cwtl
lods
cli
mov
xchg
add
mov
jl
mov
je
fwait
add
testl
lods
add
jbe
mov
lret
add
int
add
mov
bound
pop
push
push
pop
mov
push
push
lea
push
lea
push
call
shlb
test
add
mov
add
out
jb
jno
jne
push
clc
add
outsl
add
jle
add
push
add
pop
mov
in
add
lret
add
test
imul
add
scas
out
add
sub
mov
rolb
add
mov
xlat
push
mov
adc
hlt
push
push
push
push
push
lea
push
push
call
loope
mov
push
add
les
jb
sbbl
mov
lahf
add
shl
stos
jns
in
add
jns
add
je
imul
pop
incb
add
stos
mov
lret
cmpsb
pop
lock
add
add
add
mov
lea
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
add
jge
xchg
mov
pop
lods
add
add
mov
add
imul
fiadds
add
cmpsl
push
add
je
xchg
cld
add
jmp
out
lods
add
int3
lea
pop
push
push
inc
pop
push
push
lea
push
push
push
push
call
add
icebp
add
ret
add
rolb
add
add
in
mov
add
addb
add
bound
add
jo
out
add
jmp
add
add
add
leave
popa
push
testl
mov
loop
pushf
mov
les
push
add
add
ret
add
lea
pop
push
mov
push
xor
dec
pop
push
push
dec
dec
pop
pop
lea
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
mov
std
mov
out
push
test
add
mov
add
fistps
jle
jmp
mov
imul
add
add
add
add
nop
scas
pop
add
addb
mov
push
cli
add
mov
lea
pop
sub
push
ror
pop
mov
push
ror
sub
sub
pop
shr
add
push
add
pop
mov
add
push
push
push
lea
push
push
lea
push
push
call
clc
add
stos
add
fsub
jle
add
add
jmp
add
in
xchg
fldenv
push
call
add
add
add
bnd
gs
add
pushf
jno
add
mov
add
mov
not
add
add
push
pop
stos
cwtl
pop
add
jnp
iret
add
pop
pushl
push
xor
pop
popl
push
shl
rol
pop
mov
add
push
push
push
push
lea
push
lea
push
push
push
call
jno
imul
pop
add
testb
mov
mov
add
cld
mov
mov
push
out
add
jns
add
add
mov
scas
add
lea
out
fiadds
notl
jl
lcall
add
add
sahf
add
add
add
add
lret
loop
add
mov
lea
pop
xor
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
enter
add
fiaddl
out
popf
add
mov
xchg
jns
push
add
enter
test
rcrb
xchg
add
mov
mov
add
pop
push
xchg
add
add
add
add
xchg
add
jae
pop
add
test
add
lahf
popf
loope
add
mov
lea
pop
lea
push
push
push
push
push
push
call
loope
add
ljmp
out
add
add
clc
test
mov
bound
xchg
add
add
scas
add
jnp
in
imul
popf
int
gs
jmp
loopne
add
stos
add
add
nop
add
cli
xchg
popf
stos
add
pop
jae
cmpsl
add
push
mov
lea
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
rcl
add
outsl
jle
aad
cwtl
fsubs
imull
add
xchg
xchg
je
movsl
cmpsb
jl
fldenv
add
pop
pop
lods
enter
push
add
js
ljmp
xchg
add
cli
add
iret
add
add
mov
lea
pop
add
xor
push
push
push
lea
push
push
call
add
add
incb
xlat
jmp
jmp
bound
mov
add
shll
mov
cld
push
add
mov
lods
mov
add
push
cld
rolb
add
int
hlt
lea
pop
rol
push
push
push
push
push
push
call
ret
push
mov
mov
xchg
add
jno
jne
stc
filds
pop
pusha
add
add
rol
add
mov
lea
flds
add
ja
add
add
mov
mov
lea
pop
nop
nop
push
lea
push
push
push
push
push
push
push
push
push
call
imul
jne
jne
add
aam
add
xchg
add
out
fcmovnu
add
jae
xchg
cli
in
xchg
pusha
clc
mov
cmpsb
add
out
add
xchg
je
test
add
xchg
add
add
test
test
add
neg
in
pushf
ja
sarl
outsl
add
lea
pop
xor
push
push
push
push
push
lea
push
push
push
call
add
mov
loope
add
jo
add
addr16
add
add
int3
push
sahf
add
mov
addb
add
andl
add
icebp
out
pop
add
lret
test
add
add
mov
add
mov
cmpb
add
add
ficompl
xchg
mov
lea
pop
nop
push
not
shr
shr
pop
nop
inc
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
hlt
jbe
add
sbbb
mov
js
add
add
cld
mov
add
ljmp
fstps
add
add
out
stc
add
test
pop
add
clc
pop
jae
cmc
push
add
jle
add
add
jecxz
movsl
jns
mov
fmull
push
lea
push
call
jne
add
pop
scas
jae
in
add
add
mov
fwait
jo
add
test
mov
movsl
mov
add
stc
nop
cli
xchg
add
pop
outsl
mov
add
fdivs
test
add
movsb
filds
push
pop
hlt
add
imul
add
mov
add
add
mov
lea
pop
nop
push
dec
rol
add
pop
cmpb
jne
push
dec
lea
sub
pop
add
push
not
sub
shl
pop
nop
nop
push
lea
ror
shr
pop
cmp
je
push
sub
sub
pop
nop
push
not
pop
nop
inc
push
shr
xor
pop
nop
push
sub
ror
ror
shl
pop
nop
push
push
push
push
push
push
push
lea
push
push
push
call
les
aad
ljmp
aad
mov
add
add
loope
fld
cmpsb
add
ret
jne
jb
jl
std
add
jnp
subb
stos
add
xchg
mov
add
mov
les
jne
jb
xor
push
push
lea
push
push
push
push
push
push
push
call
out
imul
xchg
add
mov
fnsave
add
pop
test
movl
xchg
test
add
add
add
add
add
push
mov
add
loopne
add
mov
jmp
pop
lret
cmpsb
roll
push
test
mov
fldl
mov
lea
pop
jmp
push
add
pop
mov
push
add
inc
lea
inc
pop
add
push
pop
movzwl
push
sub
pop
mov
push
push
call
cwtl
jae
iret
add
add
mov
loope
sahf
popa
stc
mov
push
add
iret
cld
enter
push
shlb
mov
jecxz
add
add
jb
add
add
add
add
jns
add
add
mov
lea
pop
add
mov
push
push
push
push
push
lea
push
push
lea
push
call
add
add
add
loop
jge
pushf
add
pushf
icebp
add
add
mov
jmp
add
mov
nop
je
xchg
add
mov
push
decb
add
iret
loope
stos
movsb
add
test
add
add
pop
push
lcall
add
not
mov
mov
jno
test
add
in
lea
mov
pop
xor
push
shr
shl
pop
xor
shl
push
lea
push
push
push
push
push
push
push
call
pushf
rclb
push
lds
add
aad
add
lds
stc
add
imul
add
popf
add
popf
arpl
push
jge
lds
pop
loop
enter
popa
add
rclb
add
mov
add
add
test
jmp
add
movsb
add
lcall
add
mov
pop
xor
push
push
push
lea
push
push
call
imul
pop
add
pop
clc
scas
pop
mov
mov
add
add
int3
jecxz
loopne
jle
jmp
add
lcall
xchg
xlat
stos
add
std
add
add
add
add
add
lods
pop
add
fiaddl
ja
les
fmull
loope
xor
push
add
shr
pop
shl
push
push
push
push
push
lea
push
push
push
call
add
add
int
out
nop
mov
mov
leave
jb
add
loopne
add
add
add
sahf
add
popf
stos
outsl
stos
lock
mov
mov
stos
add
loop
mov
iret
mov
add
mov
lea
pop
xor
mov
push
add
ror
sub
pop
add
pop
push
inc
rol
pop
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
call
pusha
stos
testb
xchg
out
add
mov
lods
jns
push
add
add
pop
add
xchg
add
add
ja
xchg
cli
add
cmpsl
stos
out
ret
stos
addr16
enter
test
push
hlt
mov
jp
int
mov
add
div
add
mov
add
loope
jge
mov
lea
pop
pop
push
push
push
push
push
call
scas
roll
addr16
mov
aad
imul
popa
sahf
lret
add
mov
add
add
add
add
add
add
add
mov
add
adcl
les
push
shr
ror
shr
pop
ret
push
lea
push
push
push
lea
push
lea
push
push
call
in
add
add
loopne
add
xchg
lods
add
enter
lock
mov
js
mov
add
add
clc
rclb
xchg
js
fs
mov
cli
mov
lea
pop
push
push
not
pop
mov
push
sub
pop
push
push
push
call
mov
add
js
fcmovnu
jle
push
pop
push
add
popf
add
out
scas
iret
jl
add
jnp
lret
test
scas
mov
mov
test
mov
roll
ljmp
popf
add
aam
loop
enter
add
mov
lea
pop
push
push
add
sub
pop
push
push
rol
dec
sub
not
pop
push
push
pop
mov
push
push
call
pop
test
iret
imul
add
pop
aam
movb
add
add
icebp
xlat
add
test
loop
add
mov
add
mov
add
sar
mov
mov
mov
fwait
add
pop
lods
add
add
test
jl
fmull
adc
movb
sub
pop
mov
test
je
push
shl
rol
not
pop
mov
push
pop
test
je
push
xor
rol
dec
rol
pop
mov
mov
push
push
push
push
push
push
lea
push
call
cld
add
les
lds
add
xlat
add
add
pushf
in
add
ja
stc
jge
imul
imul
fabs
mov
add
loope
add
add
mov
push
rclb
int3
push
add
add
mov
add
mov
mov
lea
pop
mov
inc
push
push
push
push
call
in
add
add
mov
add
add
add
add
mov
movsl
scas
imul
add
add
pop
add
stos
add
fstl
xchg
mov
add
add
jge
clc
fildl
call
lretw
pop
pop
mov
fmull
rorb
test
add
test
je
push
ror
shr
add
pop
mov
push
shl
dec
sub
pop
inc
push
push
push
push
lea
push
push
lea
push
push
call
push
mov
xorl
fadds
pop
add
jns
add
rcrb
add
test
add
fwait
push
add
add
mov
outsl
stos
pop
add
pop
cmp
je
push
inc
pop
test
jne
push
add
lea
pop
xor
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
mov
add
cmpsl
add
mov
bound
cmpsb
push
jae
xchg
mov
lcall
incb
scas
xchg
add
pop
add
add
add
fisubrs
mov
add
add
nop
add
lret
add
add
in
test
add
add
add
data16
in
add
cmpsb
push
mov
cmpsb
add
and
push
push
push
push
push
push
call
add
mov
into
add
add
mov
add
jmp
jecxz
add
mov
add
xchg
test
mov
add
jb
testl
data16
bound
enter
popa
lock
mov
add
mov
lea
pop
pop
push
push
lea
push
push
push
push
call
add
add
add
add
mov
add
ret
test
add
add
aam
mov
add
arpl
jecxz
add
stos
jnp
test
mov
add
sbbb
in
add
test
mov
lea
pop
pop
push
push
push
push
push
call
movsl
arpl
mov
add
push
add
add
iret
add
ljmp
add
add
ljmp
add
into
add
xchg
cmpl
xchg
test
fwait
std
flds
hlt
lods
mov
lea
pop
pop
leave
push
push
push
push
push
push
lea
push
push
push
call
jns
rcrb
xchg
scas
mov
add
movl
fwait
add
push
mov
add
add
add
lret
add
ja
lds
add
push
xchg
fildl
bound
add
addl
lahf
jle
mov
out
fnstenv
nop
fisttpll
pop
ret
push
push
push
push
call
mov
cwtl
add
outsl
add
add
stc
add
lea
iret
rolb
cli
xlat
pop
add
fadds
add
lock
cmc
add
mov
jnp
add
fiaddl
ja
ljmp
mov
add
loopne
add
cmpsb
xchg
jbe
hlt
lea
pop
mov
push
lea
push
push
push
call
add
data16
push
add
cmpl
mov
aad
push
jnp
add
popf
fcmovnu
addr16
int
imul
add
outsl
lock
leave
push
icebp
sahf
mov
add
xlat
push
loopne
add
jne
lds
add
add
add
int
add
jae
lahf
mov
add
pop
inc
cmp
jne
push
push
push
push
push
push
push
lea
push
call
add
fldl
add
popa
xchg
add
into
add
mov
add
add
add
add
clc
add
lea
add
add
mov
add
test
imul
add
add
push
add
mov
lea
pop
lea
mov
push
shl
pop
test
je
mov
push
dec
pop
add
push
dec
sub
add
sub
pop
cmp
jne
push
push
push
push
push
push
push
push
push
call
repnz
add
add
popa
add
test
add
jae
and
mov
push
cltd
sub
add
add
fld
push
add
xlat
add
push
mov
lea
pop
mov
push
lea
push
push
push
push
push
push
lea
push
call
pop
jbe
data16
fst
lret
add
clc
mov
add
ljmp
add
lret
rcl
icebp
int
sti
jecxz
pop
add
add
loop
add
add
add
push
lea
mov
popa
add
pop
test
je
push
push
lea
push
push
call
flds
add
add
cwtl
mov
add
add
sarb
add
add
jge
stc
outsl
add
pop
iret
call
add
mov
push
xchg
in
mov
test
add
add
sub
sarb
jbe
pop
mov
scas
rolb
add
pop
mov
push
xor
sub
inc
sub
pop
add
cmp
je
push
add
ror
pop
jmp
xor
push
lea
not
sub
xor
pop
pop
push
lea
push
push
push
call
mov
xchg
add
jle
mov
jecxz
in
mov
add
test
fwait
enter
add
stos
icebp
mov
add
mov
hlt
lea
pop
pop
pop
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
add
add
shl
add
add
add
lea
push
aad
add
add
push
xchg
loopne
add
add
loopne
nop
add
in
push
cli
fdiv
add
add
aam
bound
pop
pop
push
push
lea
push
push
lea
push
lea
push
push
push
call
mov
lret
add
xchg
cmpsl
add
add
int
int3
add
sti
test
add
mov
mov
aad
roll
add
rcrl
movsl
mov
add
add
arpl
pop
leave
push
sub
sub
rol
pop
ret
push
inc
lea
pop
lea
push
add
inc
rol
pop
pop
push
xor
shl
xor
sub
pop
pop
push
inc
sub
lea
sub
pop
pop
push
lea
push
push
push
push
push
push
push
call
lcall
pop
out
rcll
pop
fiaddl
xchg
mov
add
jmp
addl
add
add
xchg
add
jle
push
add
add
add
add
mov
jle
lcall
add
cmpsl
stos
rolb
hlt
add
jp
out
add
add
pop
popa
add
mov
lea
pop
pop
leave
push
lea
push
push
lea
push
push
lea
push
call
add
add
mov
jmp
loopne
add
add
test
mov
add
arpl
in
test
ljmp
add
int3
add
fildl
cmpsl
int
add
xlat
add
aad
std
add
add
arpl
jb
add
push
bound
add
je
pop
add
add
add
fs
add
mov
data16
or
mov
push
push
push
lea
push
push
push
push
push
call
add
add
add
jnp
cmpsb
notb
add
pop
jl
add
test
cwtl
pop
mov
cld
aad
add
xchg
sarb
cmpsb
enter
add
hlt
add
push
add
add
fs
xchg
jb
cld
add
add
clc
scas
add
pop
pop
add
lods
outsl
test
pusha
add
je
jb
enter
pop
stos
mov
lea
pop
pop
push
push
push
push
push
call
pop
jo
push
imul
in
add
test
add
clc
add
xchg
les
iret
rclb
add
add
loope
in
rolb
sti
popf
add
mov
mov
lea
pop
pop
pop
push
push
call
inc
mov
lret
add
jl
fwait
mov
cmc
shl
add
add
imul
add
outsl
mov
add
pushf
mov
rcl
fiadds
add
mov
data16
leave
push
add
add
sub
pop
ret
test
push
test
jae
test
jb
nop
insb
jae
mov
shlb
mov
jae
add
jb
icebp
js
mov
mov
fidivs
jnp
pop
push
pushf
sarb
cld
pop
jmp
movsl
mov
loope
jge
fnstsw
aas
sar
push
arpl
mov
pop
jecxz
das
and
popw
loop
pavgb
roll
pop
lret
xor
push
push
clc
popf
es
jecxz
insb
stos
ret
jl
stc
dec
fdivs
mov
push
jge
arpl
push
rcll
add
cmpsb
push
aas
adc
shlb
in
push
notl
jmp
pusha
aad
and
sbb
sbb
xor
loopne
mov
out
jg
inc
movsb
jmp
testl
sub
push
and
icebp
out
add
xchg
inc
adc
into
push
fcomps
pushf
hlt
lea
fmuls
or
xor
shrl
mov
cmp
test
inc
jecxz
sub
push
jge
mov
iret
xor
sbb
iret
jno
negl
lods
add
and
push
lcall
stc
repnz
pop
xor
push
push
enter
fwait
orb
xor
xor
cmp
pop
cltd
jo
mov
mov
lds
cmp
out
int
insb
add
push
repz
push
sti
or
sub
in
sbb
jbe
mov
push
test
jnp
outsl
adc
jns
push
pop
popa
mov
pop
pushf
sub
dec
cmp
mov
sbb
lods
adc
inc
xor
test
stc
mov
aad
adc
jg
jns
add
sbb
mov
ror
cmpsl
sahf
subl
lcall
sbb
adc
cli
pop
adc
sbb
ret
and
and
sti
jo
daa
fildl
mov
loop
sub
cli
sub
cmp
jecxz
lahf
lea
fistl
les
lahf
mov
push
repnz
lods
jmp
sbb
dec
jae,pt
lds
pop
xchg
jecxz
jno
aaa
jb
mov
mov
mov
inc
iret
inc
aas
lret
mov
mov
push
bound
mov
pop
inc
loope
xor
and
push
out
mov
adc
lds
mov
jne
push
add
fstp
pop
add
add
test
or
cmp
retw
push
or
icebp
test
fisubrs
out
pop
xchg
data16
or
pop
mov
imul
fidivs
cmp
mov
and
and
cmp
and
or
jne
lcall
imul
in
rcr
shll
mov
sub
testb
out
pop
jge
out
int
fwait
in
sbb
inc
lret
stc
add
in
cltd
data16
gs
repnz
or
adc
adc
aad
lret
mov
lcall
push
fwait
into
fcom
pop
stos
xorb
iret
xchg
sbb
inc
outsb
sbb
mov
cli
and
gs
mov
mov
lret
inc
lods
or
es
and
lods
inc
inc
pop
jecxz
loop
sbb
sub
mov
jnp
std
mov
add
sti
xchg
cs
ret
cwtl
push
mov
xor
sbb
and
jp
cmp
inc
dec
or
pop
clc
sub
enter
push
mov
addr16
xor
pop
std
imulb
ret
outsb
clc
icebp
repnz
aas
aam
push
lahf
jno
mov
sahf
xchg
shlb
stos
imul
sbb
outsl
test
adc
adc
jle
add
cmp
subb
adc
out
sub
and
loope
rorl
adc
pop
jnp
push
pop
pop
sti
push
std
mov
movl
int
outsb
jp
pop
loope
lock
enter
xor
adc
int3
jmp
jno
inc
out
test
jmp
bound
xchg
orb
add
mov
xchg
lret
xor
sti
andl
sbb
insl
mov
dec
cld
outsb
ja
stos
aam
xor
push
inc
dec
mov
pop
and
pop
mov
xchg
daa
clc
mov
cmp
sub
in
aaa
scas
shrb
xor
push
mov
fsubp
das
push
push
mov
xor
lcall
fisttpll
decb
lret
adc
adc
xchg
push
movsb
mov
in
dec
popf
lcall
xor
mov
inc
dec
sbb
andb
pop
add
pop
cltd
test
popa
and
dec
fildl
lret
jo
or
jle
popf
pushf
loope
lock
cmp
cmp
mov
mov
sahf
and
test
fsubr
xchg
and
xchg
decl
insl
mov
inc
push
xor
sahf
arpl
mov
inc
movsb
fdiv
xorl
add
pop
xor
cmp
lret
lods
xor
std
cmp
push
pop
roll
sbb
add
adc
loopne
daa
sub
push
aam
push
cmpsl
ljmp
jp
push
jge
dec
in
sub
dec
fimull
cli
ficoms
hlt
sub
dec
mov
xchg
enter
jnp
sahf
pop
arpl
push
into
pop
add
scas
adc
lds
insl
sti
dec
frstor
jae
loope
add
mov
cmp
int
push
xor
ljmp
push
das
add
mov
mov
adc
dec
and
fldl
jle
stos
adc
cwtl
cmpsl
cmp
cmp
and
jmp
jns
fwait
sub
adc
and
iret
lock
jl
subl
xchg
repz
arpl
jns
imul
lds
and
inc
sbb
out
pinsrw
popf
inc
sub
mov
xchg
add
movb
pop
mov
je
jg
push
daa
mov
test
jbe
pop
repz
push
int3
das
jg
fists
inc
in
std
adc
out
and
adc
iret
nop
fsubrp
add
insb
mov
jle
in
leave
dec
jnp
inc
stos
xor
loop
ljmp
cmp
bound
sub
mov
mov
xor
pop
lds
lods
movsb
sti
push
outsl
nop
loope
sbb
jge
sti
xchg
std
mul
mov
dec
pop
rclb
dec
roll
jp
fstp
idivl
inc
inc
fwait
mov
or
xor
jb
flds
gs
pextrw
push
push
jno
mov
std
call
lret
jg
icebp
dec
enter
sub
mov
cmp
testl
push
mov
int
push
incb
or
push
ret
mov
inc
pop
aas
push
insb
int3
aam
mov
dec
jmp
call
sub
jmp
sahf
xchg
roll
inc
fldcw
fstpt
xchg
cmc
shrl
jl
cmp
push
jo
mov
imul
adc
adc
das
data16
sub
mov
or
cltd
addr16
lahf
dec
ss
xchg
push
lds
fmuls
xor
adc
imul
add
popa
cmp
loop
jl
add
cmp
dec
xor
inc
bound
ljmp
cmpsl
sub
mov
xor
pop
sbb
pop
inc
mov
stos
das
dec
sub
push
adc
pop
mov
adc
fsubr
in
add
out
push
pop
mov
xor
or
in
sahf
mov
out
std
ds
shlb
rcrb
push
and
mov
in
mulb
add
inc
dec
cmp
cli
push
add
lods
ljmp
or
aaa
lahf
xchg
or
inc
outsb
xor
jae
sarb
lods
sbb
sbb
sbb
mov
test
push
jne
jmp
jmp
icebp
mov
cmpsb
loope
lock
mov
sbb
mov
adc
jne
test
cmp
test
mov
jnp
es
ret
sub
fdivs
out
es
ret
mov
sbb
sbb
hlt
xchg
mov
mov
adc
insb
mov
repz
sub
push
leave
ss
push
xchg
out
push
pop
mov
and
in
add
sub
adc
cmp
jg
push
xlat
cmp
out
nop
dec
inc
pop
icebp
lret
xor
ljmp
shrb
call
xor
dec
pusha
xchg
addr16
in
lods
mov
xchg
jecxz
addr16
pushf
nop
movsl
sbbl
mov
out
mov
and
stc
adc
xor
mov
frstor
loopne
add
mov
mov
inc
cld
out
jae
lods
clc
aaa
fbstp
xor
fnstcw
jb
cltd
mov
test
jns
pushf
jp
test
xchg
sbb
repz
adc
subb
xor
iret
daa
or
ds
mov
int3
dec
in
ficoml
popf
sub
xchg
lock
pop
outsl
js
ret
mov
cmpsb
sbb
adc
inc
inc
xor
inc
push
std
clc
stos
fimuls
leave
lea
mov
xchg
lds
and
ja
lods
gs
clc
fldlg2
mov
push
pusha
mov
arpl
shlb
add
sub
mov
in
dec
mov
ret
adc
icebp
or
or
xchg
mov
pop
xor
popf
in
mov
aam
mov
mov
inc
mov
neg
shl
lods
lock
loopne
lahf
jecxz
mov
add
roll
test
xor
and
ss
fisubs
dec
sbb
lahf
pushf
fldcw
jge
lea
adc
loopne
xchg
hlt
lahf
mov
sti
jae
inc
test
jns
xchg
adc
js
sbb
mov
sub
push
fisttpl
fnstenv
dec
inc
cmp
mulb
adc
ljmp
iret
mov
sbb
mov
mov
fiadds
aaa
pushf
xchg
push
imul
jnp
mov
shll
xchg
lret
out
aad
inc
arpl
push
mov
mov
inc
insb
jge
xchg
ret
or
mov
dec
rcl
dec
ljmp
inc
mov
es
movsb
pop
sbb
popf
mov
add
das
lods
loop
adc
imul
cli
pop
pop
cld
int3
flds
add
xchg
popa
shrb
clc
daa
mov
stos
subb
dec
sbb
insb
mov
cmp
fdivp
cmpsb
or
adc
ret
mov
xchg
out
or
or
mov
or
adc
sahf
xor
pop
add
popa
mov
pop
scas
jbe
add
out
or
pop
jmp
push
and
lods
and
scas
stc
xchg
pushf
insl
rorl
inc
cmp
jne
pop
cli
pop
add
or
stos
lret
sub
movsl
jbe
shrb
pop
movsl
cmp
cwtl
mov
add
fcmovne
dec
gs
and
sti
push
in
testl
push
xchg
stos
jo
mov
mulb
dec
in
scas
test
sub
push
hlt
loope
jo
pop
int
mov
insb
pcmpeqd
mov
and
ret
fsubr
inc
pop
xlat
pop
ret
inc
sub
rcll
push
or
into
xchg
cmp
mov
lock
cmp
mov
les
jge
lret
fists
arpl
imul
das
andl
test
out
dec
xchg
xchg
mul
mov
in
cmp
nop
aad
out
hlt
jns
sti
push
loopne
mov
mov
jno
addb
jecxz
xchg
loope
inc
sbb
push
in
outsl
mov
push
pop
shl
sbb
and
add
or
adc
in
xor
xor
movsl
adc
push
dec
out
xchg
pop
pop
jmp
pushf
pop
inc
outsb
and
movsl
sub
xor
cmp
sahf
pop
fcompl
add
aam
cmp
push
rorb
add
lock
cltd
dec
and
leave
add
lcall
into
sar
fidivs
divb
cwtl
lret
cmc
daa
or
stc
cwtl
daa
push
mov
int3
adc
adcl
inc
into
test
or
push
fsubrl
daa
ja
sub
rol
fcompl
jne
lahf
cmp
std
dec
jo
cs
sbb
idivb
fwait
shl
pop
fcoml
mov
cmp
rorl
add
clc
xchg
addr16
notl
fidivl
jae
out
bound
xor
push
mov
xor
iret
sti
int3
dec
or
cmp
sbb
mov
sbb
adcl
xchg
lea
sbb
bound
add
int3
mov
push
jl
dec
ja
mov
es
inc
popf
outsb
iret
cmp
mov
push
sub
mov
push
mov
daa
sbb
test
cmc
cmpl
lret
push
push
inc
int3
jne
je
sub
cmp
or
nop
pop
add
ja
dec
pop
lcall
xchg
pop
xor
adc
cmc
jle
push
jbe
cltd
pop
cs
jae
xor
pop
mov
pop
xchg
jno
stos
pop
mov
jecxz
shrl
fsubs
adc
stos
outsb
xor
xchg
arpl
mov
sbb
insb
in
xor
inc
push
fnstsw
add
cmp
sub
scas
js
lods
daa
push
xchg
mov
mov
jge
xor
daa
loop
cmc
sarl
jbe
xchg
add
inc
popa
in
fdivrl
jno
adc
fildll
out
das
hlt
jbe
push
iret
dec
and
mov
dec
xorb
push
add
push
fsubrp
pop
jp
std
mov
aaa
or
lods
mov
pop
iret
jmp
sub
lret
rcr
jp
dec
pop
fistpll
xor
and
in
sarl
mov
inc
imul
xlat
fwait
xor
sbb
sub
push
cltd
push
dec
cld
and
icebp
mov
jg
xchg
les
jl
or
push
clc
idivb
mov
bound
pop
cwtl
mov
repnz
das
loopne
xchg
sbb
out
and
in
sbb
sbb
cmc
icebp
pop
jno
jno
xchg
pop
mov
push
cmc
mov
xchg
adc
in
or
and
mov
push
lret
iret
sbb
jge
sub
and
jge,pt
adc
mov
imul
pushf
mov
cmp
in
dec
mov
cmpsl
stc
fwait
dec
pop
cmp
ret
test
outsl
push
sti
mov
lea
xchg
mov
cmpsl
pop
addr16
jbe
repnz
push
mov
xchg
popa
dec
iret
ss
pop
add
and
inc
iret
mov
movsb
rcr
sti
push
mov
or
int
out
aam
fistl
lods
mov
inc
pop
pop
inc
add
xchg
divl
or
addr16
popa
xor
das
out
scas
mov
adc
int3
push
mov
pop
imul
ljmp
add
fisubl
inc
and
add
mov
faddl
aaa
and
push
xlat
push
xchg
jle
jecxz
pushf
jmp
lahf
es
icebp
inc
mov
out
testb
loopne
fstpl
fidivl
push
ret
bound
repz
cmp
mov
stc
aad
jbe
and
aad
add
add
add
pop
xchg
xchg
mov
xchg
push
xor
xor
or
gs
dec
push
mov
data16
mov
dec
sti
imul
push
in
adc
outsb
cmc
je
out
jae
call
mov
mov
idivl
mov
adc
pusha
pop
in
stc
mov
push
arpl
in
sbb
inc
and
int3
scas
popf
test
loope
sbb
leave
inc
cmp
hlt
dec
rcll
out
outsb
and
fs
into
ljmp
mov
incb
sbb
mov
lods
or
sub
jle
mov
cmp
cmpsl
push
xchg
mov
and
rep
adc
inc
imul
into
add
jns
xchg
imul
out
mov
xlat
mov
xchg
stc
in
aas
xlat
xor
lahf
mov
xor
cli
add
mov
shll
lods
push
aad
and
or
inc
cmp
mov
leave
icebp
sbb
lods
cld
cltd
dec
int
fisubrl
cwtl
cmp
pop
sub
cli
notb
outsl
lods
sti
add
fstps
test
shl
pop
xchg
mov
add
and
neg
fwait
cmpsb
or
int
sti
int
fcmove
aas
arpl
shll
mov
gs
cmp
xor
call
add
lock
mov
add
inc
leave
or
inc
fadds
aam
jno,pn
jg
ror
cwtl
pop
pop
mov
es
pop
into
pop
loopne
add
mov
lret
daa
xor
push
xor
dec
sbb
or
pop
pushf
xor
movlps
xchg
mov
movsl
clc
addr16
daa
push
insb
daa
scas
stos
outsl
mov
test
jmp
jle
cmp
icebp
std
pop
xchg
into
pop
fsubrl
push
xchg
das
dec
dec
and
mov
loopne
push
std
inc
cmp
mov
sub
push
imul
cmp
xor
jg
mov
xor
lret
or
sub
inc
xchg
lcall
push
fs
fidivl
filds
movsl
icebp
pop
push
xlat
push
test
std
sbb
pop
cmp
fimuls
rorb
decl
repnz
loop
fldenv
movsl
adc
and
mov
rep
arpl
xor
dec
rcll
out
lods
ds
xchg
jns
cmpsb
lcall
aaa
notl
movsb
inc
fisubl
pop
push
into
xchg
dec
or
cmp
sub
inc
and
xor
je
inc
sbb
and
adc
ljmp
add
pop
out
loop
push
int3
es
add
pusha
cmp
mov
xor
push
enter
dec
lret
aaa
pop
jns
popa
push
bound
push
out
xchg
nop
push
ds
ret
mov
andb
stos
imul
sbb
inc
loopne
pop
or
push
cld
call
out
mov
fmul
adc
test
adc
sbb
popa
or
test
add
xchg
push
insb
imul
lcall
inc
out
jg
push
out
jle
mov
xchg
inc
sub
insl
mov
test
std
cmp
xor
or
int3
mov
sarl
mov
cmpsb
addr16
inc
pop
hlt
insb
push
rorb
dec
in
repnz
dec
and
cmp
cwtl
push
mov
add
push
mov
dec
lcall
je
out
push
enter
lret
sbb
int3
pop
mov
dec
mov
xchg
dec
lahf
push
movsl
ss
xchg
pop
lret
inc
or
xchg
sub
test
cltd
mov
cli
lock
mov
dec
icebp
sbb
jnp
into
movl
iret
inc
sub
xchg
popf
fxch
and
in
mov
cmpsb
test
pusha
cmp
dec
aad
into
push
inc
sub
cs
jp
lods
inc
xor
out
xor
push
add
in
mov
loopne
pop
mov
lods
adc
sub
shll
mov
mov
sub
out
hlt
jecxz
leave
and
add
xchg
or
and
shll
add
jle
push
shll
sbb
sbb
xchg
push
xchg
ljmp
or
cld
iret
cmpxchg
pushl
scas
jge
mov
test
pop
jb
scas
mov
mov
loopne
sti
test
and
out
dec
pop
loopne
insb
gs
cmp
mov
cmp
loop
dec
pop
mov
mov
and
pop
icebp
aas
sub
lea
xor
cmc
jno
add
xor
and
mov
push
cmp
push
or
das
ret
aaa
xor
pop
push
adc
into
push
sub
scas
cmp
jae
in
fwait
sub
ss
gs
mov
sbb
int
push
gs
add
pop
iret
xor
idivb
cmpsl
arpl
lods
pop
insl
inc
pusha
fsts
inc
enter
or
push
push
and
adc
dec
add
xchg
testl
xor
cs
xchg
jbe
and
js
mov
sahf
loop
inc
arpl
or
lock
ja
iret
in
leave
xchg
pop
movsl
sbb
jle
mov
adc
out
adc
or
mov
inc
das
cmp
roll
sahf
and
andb
sub
filds
mov
popf
mov
add
mov
addb
arpl
sbb
adc
je
ficomps
mov
rdseed
enter
adcb
or
sbb
push
push
test
adc
cmp
iret
in
mov
leave
int3
sbb
fcomip
sub
bts
mov
jg
iret
js
je
popf
insb
xchg
cmp
movsb
insl
outsb
xor
test
movsb
mov
mov
mov
add
pop
jno
or
pop
enter
and
cmp
movsb
xor
aad
inc
loop
rcl
outsl
inc
cmpsb
jns
adc
add
add
or
test
dec
cmp
inc
ljmp
inc
adc
mov
mov
xchg
pop
adc
mov
mov
sbb
test
test
sbb
insb
arpl
sti
dec
push
xchg
and
mov
sub
pushf
push
mov
push
pop
pop
jo
enter
test
xchg
sbb
dec
scas
mov
dec
andb
in
loopne
adc
inc
push
imul
inc
pusha
xor
sbb
pop
inc
sbb
or
scas
xor
pop
push
lods
or
mov
dec
pop
or
scas
mov
sbb
xchg
adc
xor
dec
loope
leave
bound
and
fs
jmp
scas
or
les
stc
jl
or
out
imul
mov
sub
mov
push
mull
loope
imul
cli
hlt
out
fdivr
add
xor
repnz
sub
bound
add
std
sarb
sub
add
sub
rol
cli
mov
mov
test
ret
repz
test
es
and
mov
neg
jl
sbb
mov
push
popf
fwait
cld
mov
pop
xchg
jo
jle
add
jg
jle
pushf
or
iret
inc
sub
js
jge
sub
dec
int3
shlb
push
imul
adc
inc
movsl
cltd
jle,pt
or
or
fsubrl
cmp
sbb
mov
mov
and
daa
jb
xchg
push
jbe
pop
sbb
mov
jecxz
out
xlat
imul
mov
xchg
arpl
into
fsts
push
in
push
xor
sti
jo
iret
push
inc
nop
fcmovnbe
jb
push
or
cmp
sarl
xor
xchg
mov
movsb
pop
lret
adc
data16
mov
push
test
mov
jnp
stos
repnz
sbb
ret
dec
popa
inc
repnz
inc
in
loop
mov
mov
jle
les
pop
sub
test
in
xchg
mov
fldl
pop
push
jmp
push
iret
push
jo
push
cmpsl
test
stc
enter
sti
jae
stc
jl
lods
push
mov
loop
mov
cmp
dec
jl
add
dec
bound
notl
pop
cmp
insl
ljmp
xchg
xor
iret
dec
movsb
bound
fidivrs
mov
pop
jbe
mov
inc
xor
inc
cmp
push
sbb
shl
lds
fcompl
and
repz
dec
fidivl
inc
xchg
add
push
push
cmp
add
dec
lret
loope
rcrl
gs
call
psllq
jnp
testb
orb
xchg
notb
cltd
adc
in
ljmp
mov
push
push
xchg
lods
mov
addr16
push
mov
mov
out
push
shll
icebp
sub
mov
lret
mov
lds
push
jo
lcall
sub
push
mov
xchg
dec
lret
push
jb
lods
fistps
sbb
cwtl
push
jo
xchg
dec
ror
jge
mov
cmc
add
push
push
std
pop
outsb
pushf
sbb
mov
out
es
mov
mov
lods
pop
enter
xchg
lahf
sub
add
adc
in
mov
js
js
cmpb
les
pop
repnz
jae
aaa
cmp
aad
aam
jno
push
or
cmp
mov
mov
sbb
sbb
lods
dec
mov
xor
lock
sub
loope
loope
sbb
cwtl
jmp
sbb
ret
into
cmp
ja
and
push
mov
out
adc
add
pop
xchg
das
js
in
mov
fdivl
mov
adc
orl
test
inc
clc
stos
icebp
jecxz
js
int3
and
push
aaa
icebp
ds
inc
mov
stc
adc
pusha
stos
je
scas
dec
daa
mov
dec
jge
lods
or
imulb
clc
inc
adc
xor
jp
je
adc
pop
jle
add
cld
loope
sub
mov
into
pop
insl
inc
adc
mov
xchg
sub
xor
pop
push
push
insb
push
je
in
les
insb
fcoms
mov
push
xor
xor
sahf
lods
popa
adc
ljmp
xor
test
push
testl
je
faddp
inc
arpl
lea
js
stos
mov
roll
and
jbe
test
inc
push
push
inc
mov
dec
cwtl
rcll
xor
dec
lds
ss
push
cltd
and
test
fsubs
mov
aam
mov
ja
insb
lahf
insl
ffree
pop
cli
mov
icebp
loop
xor
insb
into
loope
sbb
in
fs
xchg
pop
add
outsl
call
clc
subb
jbe
lea
loope
clc
push
dec
mov
push
andl
fs
lret
push
cmp
add
das
enter
or
mov
cwtl
ljmp
insb
hlt
lret
mov
bound
and
mov
dec
cmpsb
add
mov
dec
popa
push
nop
mov
scas
jmp
fwait
popa
mov
and
sahf
mov
popa
jg
lret
add
iret
xor
push
push
push
add
rcr
xor
mov
cmc
or
cmc
jge
cmp
mov
jb
adc
push
mov
js
xchg
lcall
mov
js
lock
mov
pop
arpl
lods
inc
popf
addr16
push
pop
xchg
test
push
cld
std
out
xchg
inc
pop
inc
lds
fildll
pop
add
les
push
inc
xchg
push
push
dec
lcall
mov
sbb
insl
pop
or
sub
ret
out
int
add
xor
into
xor
pop
xor
jecxz
mov
sahf
sub
mov
jae
inc
iret
sbb
adc
and
xorl
or
xor
mov
movsl
add
ljmp
or
add
outsl
ret
xor
adc
pop
sbb
aaa
cmp
mov
out
dec
je
bound
cmp
mov
sub
cwtl
add
or
out
daa
push
mov
subb
bound
cmp
ret
add
mov
insb
lods
out
push
or
adc
xchg
pop
push
add
or
xchg
in
or
xchg
lock
test
pop
add
adc
xorl
dec
mov
sbb
mov
cmp
push
stc
pushf
test
repnz
std
push
rolb
lock
xchg
stos
push
xor
icebp
mov
push
and
fwait
pop
hlt
scas
inc
xchg
imul
push
bound
es
xor
out
fsubl
cmpsl
mov
inc
push
or
jg
arpl
inc
sub
pop
in
ret
loopne
popa
test
jle
or
jecxz
adc
inc
lcall
test
sbb
push
jno
out
jl
popf
push
sub
dec
or
pop
outsl
aaa
xchg
xchg
into
push
cmp
sub
push
adc
cmp
or
and
jo
ret
repz
push
lcall
mov
push
or
mov
stc
repz
xlat
cmpsl
in
push
push
push
fsub
adc
xor
out
popf
add
inc
or
int3
pop
dec
out
pop
in
cmc
ja
sub
add
les
filds
xchg
rcrl
push
jnp
pop
in
add
mov
cmp
aas
das
cmp
xchg
dec
push
xor
aas
push
pop
lahf
xchg
mov
stc
mov
divl
push
rcrb
jg
xor
aad
dec
sub
jmp
adc
rcrl
jmp
jbe
in
or
movsl
mov
mov
mov
nop
add
inc
dec
mov
test
sbb
std
call
xchg
sbb
sub
fnstcw
cmc
mov
sahf
in
cs
dec
add
jno
ja
sbb
mov
hlt
sahf
pop
and
cmp
jg
out
ss
les
in
lret
push
repnz
dec
loope
les
push
outsb
repz
or
cmp
rcrb
dec
push
gs
adc
add
mov
xchg
fldl2e
lock
cmc
cwtl
shll
into
pop
jl
xchg
aam
pushf
mov
pop
sti
in
out
mov
mov
cmpsl
cmp
mov
or
addr16
jmp
xor
mov
add
or
addr16
pop
mov
jge
cmc
jne
sbb
push
xlat
mov
out
ss
gs
out
or
cld
push
and
loop
aam
mov
pushf
mov
or
mov
push
shrb
test
stc
aas
sbb
sti
or
call
add
cmp
xchg
cmp
and
dec
sub
ljmp
cmp
inc
lret
or
leave
sarl
jmp
dec
movsl
js
test
mov
jmp
shrb
mov
add
dec
xchg
and
repnz
and
jecxz
into
jle
lea
std
arpl
mov
adc
cmp
inc
call
inc
negl
xlat
mov
stc
push
icebp
pop
out
add
or
push
les
les
cmpsb
fwait
mov
cmp
mov
sub
adc
mov
mov
pop
arpl
or
xchg
dec
xchg
js
je
xchg
scas
stc
cld
xchg
ljmp
insl
cmp
and
fdivrp
es
add
cld
inc
ret
out
loop
int
xor
aaa
int3
fildl
xchg
rcrb
lcall
mov
xchg
out
sub
mov
inc
adc
jle
push
sbb
xor
sub
in
cmp
outsl
push
mov
xor
fwait
cmpsb
testb
mov
cmc
outsb
test
mov
dec
sbb
cli
pop
mov
rcr
sub
mov
pop
es
shl
pop
sub
aaa
leave
push
pop
stos
push
cmp
inc
and
fsubrl
stc
in
ljmp
jge
es
loop
mov
fisttpll
lea
push
or
or
push
ret
dec
xor
std
cmpsl
xchg
mov
ss
lods
sbb
aam
popa
dec
sub
cmp
adc
ja
dec
cwtl
scas
add
fdivl
in
aad
add
xlat
pusha
and
leave
leave
shr
aad
or
push
pushf
xor
ds
test
pushf
aad
add
dec
jns
lret
pop
sub
xchg
cmp
fldln2
lcall
jl
mov
mov
notb
or
movsl
and
pusha
mov
or
and
xor
push
pop
and
gs
inc
or
and
loop
pop
or
or
adc
movswl
call
fiaddl
xor
or
out
dec
sbb
mov
add
movsb
xchg
bound
push
xchg
inc
inc
std
bound
enter
or
sbb
in
pop
fsubs
cmpsb
jno
ret
mov
or
ret
fldt
sbb
cmp
sbb
pop
addr16
add
or
mov
fsubr
mov
mov
rcrl
and
adc
mov
mov
dec
xor
lods
push
or
popa
sub
pop
mov
addl
test
sbb
leave
lcall
xchg
out
ret
jns
jmp
aas
imul
popa
hlt
jl
or
notb
lods
push
push
or
cmp
jae
aas
pop
and
sbb
leave
pop
mov
out
call
jbe
and
dec
ret
scas
das
xor
mov
fimull
pop
pop
and
jae
push
test
add
lret
fsubrs
sub
push
sbb
movl
clc
and
adc
mov
js
sahf
lcall
and
add
cwtl
jge
mov
dec
sti
insl
sub
cmp
or
cmp
cmp
iret
imul
mov
lock
or
xchg
mov
and
outsl
fld
out
or
filds
cmc
pop
push
push
mov
sbb
ret
pop
add
xchg
mov
pop
xchg
dec
sbb
bound
decl
jnp
adc
xchg
dec
xchg
and
sub
cmp
cmp
dec
mov
or
sub
int3
cltd
out
fst
cmp
lea
out
leave
pop
and
testb
dec
add
lds
jge
pop
sub
div
mov
ljmp
repnz
mov
jns
popf
idivb
fsubl
add
test
out
test
xor
fistpl
mov
xchg
add
lret
adc
dec
adc
insb
adc
xor
je
mov
xor
pop
jmp
loope
clc
aaa
mov
enter
sub
dec
mov
leave
cltd
mov
mov
addr16
ja
sbb
inc
add
xchg
jecxz
in
xchg
pop
sahf
add
iret
lods
xchg
xor
xchg
adc
push
dec
fsubr
add
jmp
push
lret
movsb
pop
and
mov
push
inc
enter
lcall
int
sahf
jecxz
xchg
cmpsl
lock
mov
pop
ficoml
stc
xchg
or
fsts
ljmp
bound
lods
daa
xchg
xor
mov
insl
cmp
cwtl
cmpsb
clc
out
out
es
scas
mov
shlb
pop
inc
out
jmp
sahf
xrelease
mov
add
iret
clc
popa
pushf
sub
mov
pop
pop
xor
and
cmpsl
mov
pop
mov
adc
aas
lret
push
out
jg
cmp
and
xor
shll
pop
mov
add
sbb
inc
xchg
jns
push
jg
lea
dec
lea
clc
mov
mov
sub
lods
cmp
js
mov
lret
cmp
add
sub
je
dec
inc
or
hlt
scas
repz
sbb
sub
idiv
in
popa
and
sbb
cvtpi2ps
sbb
scas
loopne,pt
js
aaa
fbld
iret
test
xor
push
lea
fwait
xor
mov
js
inc
adc
mov
das
add
push
push
add
ficoms
push
lods
push
rcrb
aad
cmp
adc
ljmp
cmpsb
shr
pop
fildll
cmp
inc
push
bound
jle
xchg
jecxz
xchg
adc
jbe
mov
or
cs
mov
cmp
ret
mov
inc
jp,pt
fwait
out
std
sti
mull
pusha
ret
sbb
push
lods
and
jbe
insl
out
pop
push
sub
mov
inc
cmp
dec
sbb
dec
jae
insl
dec
mov
jo
movsl
out
loopne
push
sti
std
nop
dec
adc
fsubl
addl
or
aad
inc
cwtl
shlb
push
out
repnz
pop
add
or
stc
cmp
out
mov
pop
imul
and
xor
dec
decl
test
iret
rcrb
lea
mov
sub
jne
and
adc
std
rcrl
sbb
and
rorl
cwtl
enter
inc
ss
cli
push
test
and
sbb
movsl
push
mov
daa
jg
pop
jo
jg
or
aad
test
and
dec
pushf
test
jmp
repz
pop
lods
dec
mov
inc
mov
int
xchg
mov
and
jae
jno
xchg
mov
mov
adc
orb
inc
add
fs
jmp
sub
mov
add
arpl
adc
into
imul
sub
rorl
push
or
mov
icebp
stos
shrl
adc
int
movb
adc
or
cwtl
and
dec
add
decl
xchg
pop
sbb
adc
xchg
and
pop
adc
mov
enter
xchg
ret
xchg
orb
jg
dec
cmp
lahf
shll
dec
movsb
incl
pop
repz
mov
iret
adc
jecxz
movsl
xchg
jnp
adc
dec
adc
inc
lea
cwtl
sub
lods
testl
sub
jmp
dec
mov
pop
inc
sub
test
call
ret
mov
in
pop
jnp
fcmovu
sub
loop,pn
inc
pop
xchg
adc
pushf
cld
adc
sbb
jmp
sysexit
mov
mov
int3
jb
insl
cmpsl
fnsave
sbb
mov
jae
ss
je
jmp
or
mov
push
xlat
loope
std
icebp
mov
aas
push
lock
divb
enter
cmp
jnp
bswap
scas
subl
xor
mov
mov
movsb
push
aad
lret
add
cmp
js
insb
test
out
xchg
cpuid
out
out
sarl
mov
or
mov
pusha
inc
mov
cmp
cld
cmpsl
pop
mov
les
hlt
dec
mov
mov
shl
cmp
sub
sub
int
psrlq
xchg
dec
sbb
or
mov
pop
pop
jle
push
mov
pop
pop
stos
aad
jmp
pop
out
mov
decl
mov
adc
aam
test
popa
inc
adc
mov
push
cmpsb
stos
mov
scas
mov
and
in
movsb
sub
hlt
pop
add
add
std
stc
loopne
push
jo
lret
dec
mov
or
rorl
cmpl
jno
or
ret
push
lods
jmp
aam
dec
pop
pop
mov
push
test
movsl
insl
mov
lea
popf
xor
xchg
xor
pop
divb
inc
rolb
inc
je
add
jne
rcll
sbbb
mov
jmp
sbb
and
xchg
ljmp
movsl
fst
pop
repz
stos
inc
adc
push
jl
jo
push
mov
push
xchg
aam
xorb
mov
cli
mov
jb
mov
into
popf
popf
adc
xor
scas
fsts
mov
push
cmp
push
dec
inc
or
bound
sbb
lock
inc
test
dec
jo
enter
push
xorb
jp
adc
nop
data16
int3
dec
test
jne
icebp
popl
xchg
adc
inc
and
dec
ret
sub
daa
adc
sbb
lods
push
sub
inc
xor
push
jecxz
push
fs
jb
dec
sub
cmpsb
insl
fsubrp
xor
or
shll
movsl
adc
les
nop
mov
sbb
xchg
and
test
rcr
es
push
sar
xchg
sbb
cmp
out
stc
insl
stos
mov
fsubrs
jp
inc
sub
cld
fidivs
stos
inc
or
lret
out
sbb
sahf
repnz
daa
push
rcl
push
mov
cltd
mov
xchg
jno
cmp
sbb
loop
data16
hlt
loop
pop
mov
jl
jae
and
adc
lock
popf
or
leave
movsl
frstor
adc
adc
fwait
pop
imul
jns
js
xor
clc
sarb
dec
sar
jo
mov
xchg
test
ss
into
xchg
js
mov
cmp
iret
mov
fldenv
or
mov
mov
sub
add
ret
jp
and
out
dec
icebp
inc
add
mov
adc
dec
push
out
mov
decb
xchg
add
pop
in
dec
icebp
inc
mov
test
mov
rcrl
xor
sub
repz
mov
pop
dec
iret
iret
jmp
sahf
shlb
shll
cmpl
inc
ljmp
data16
xor
sub
ss
inc
cmc
jnp
ljmp
xor
ss
push
mov
push
mov
xchg
popf
ret
push
push
or
js
fsubl
dec
lret
and
andb
jnp
in
inc
or
push
jecxz
fimuls
notb
sbb
jecxz
out
lahf
inc
xchg
int
xchg
xchg
dec
lret
fidivl
cmp
and
js
rol
mov
add
das
ja
dec
repz
movl
mov
jae
js
cld
add
cmp
in
pop
jmp
inc
mov
push
jno
shl
cmpsl
test
jb
push
jecxz
adc
mov
loop
inc
adc
shrl
out
push
fbstp
fwait
cmp
sbb
adc
mov
mov
cmp
loopne
scas
and
add
xchg
cmp
lret
lret
jmp
or
fnstcw
dec
imul
mov
sub
cwtl
mov
std
es
xchg
adc
shll
push
into
mov
testb
dec
cli
into
sbb
inc
enter
and
inc
and
call
jbe
hlt
hlt
inc
aaa
push
push
mov
and
mov
insb
and
mov
xor
dec
cmp
lcall
jo
pop
dec
mov
rcrb
cwtl
into
imul
insb
movsb
cmp
push
inc
cwtl
rcrl
btsl
mov
and
clc
sbbb
mov
or
dec
jge
movsb
test
xchg
pop
pop
insb
je
push
mov
into
rcrb
shlb
mov
sbb
mov
sub
mov
outsb
fdivl
add
jle
push
xchg
scas
cmp
pop
pop
mov
int
lea
sbb
mov
aam
mov
dec
add
dec
cwtl
lock
stos
or
imul
xor
mov
xchg
pop
mov
cmp
sbb
cmp
data16
push
sbbl
or
and
or
mov
bound
pop
cmp
lods
ret
jnp
jns
cli
lods
and
addr16
push
ficomps
fmuls
cs
pushf
repnz
scas
or
subb
sub
ret
fimull
pop
shll
sbb
shlb
vpscatterqd
ret
mov
addr16
mov
mov
mov
cmp
ds
mov
hlt
xchg
adc
mov
scas
or
and
add
sub
pop
lods
ja
flds
shr
sbb
lods
adc
push
mov
cmc
mov
inc
mov
jae
and
dec
scas
int3
add
cli
and
ret
pop
cmp
cmp
sub
pop
mov
inc
lcall
xor
xor
sub
sbb
pusha
cmpsl
pop
mov
addr16
out
hlt
pminub
mov
repz
xor
jl
xor
add
jg
stc
mov
addr16
dec
add
rorl
jmp
iret
dec
or
js
cmp
xchg
cmpsl
adc
pop
call
outsl
push
fbstp
sub
mov
fdivl
popf
out
out
push
fwait
xchg
shrb
mov
fwait
adc
repnz
test
or
push
push
mov
xchg
jne
test
insl
popa
sub
idivb
push
mov
add
cwtl
into
push
sub
xchg
or
repnz
cmp
aad
outsl
leave
push
js
test
pop
loope
ror
push
pop
sub
mov
xor
sub
decb
cld
push
pop
cmpsb
in
out
sub
lds
jb
sbb
jg
subl
in
sub
cmpsl
lret
les
jg
jns
xor
jno
add
pop
jle
adc
out
nop
adc
xor
ja,pt
mov
push
pop
push
out
mov
jo
inc
es
fdivr
sbb
lret
mov
mov
jnp
push
cltd
add
shlb
pop
xor
sti
and
dec
test
or
sbb
mov
aam
adc
adc
xchg
aaa
jecxz
or
mov
pop
sbb
lcall
cmpb
aaa
sub
cmp
sbb
mov
and
mov
je
xor
les
les
add
outsb
jbe
jae
ja
or
pop
jb
andl
mov
push
sbb
aam
push
push
lahf
pop
xchg
inc
xor
movsl
dec
cmc
ja
dec
sbb
stos
movsb
push
mov
rclb
ret
repnz
push
cmp
fcoml
jno
test
rcrl
test
dec
pop
push
add
inc
mov
jg
not
js
cmp
and
int3
sbb
cli
jecxz
xor
fwait
xchg
les
clc
xchg
rcr
sub
lock
and
dec
or
ljmp
inc
aaa
jns
dec
cwtl
adc
sbb
fsubr
mov
fwait
mov
shll
leave
push
jp
pop
outsb
inc
sub
xchg
pusha
fsts
int3
fsubs
sub
push
xor
cld
jne
xor
mov
lods
pop
jno
push
aas
sbb
xor
ret
mov
adc
push
add
cmpsl
rorl
mov
icebp
lahf
fdivr
sub
insb
xchg
lock
or
rcll
outsb
or
mov
add
jb
jae
mov
mov
jp
sbb
notb
xchg
test
fdivp
push
sub
fwait
xor
pushf
out
jo
xchg
inc
call
push
out
inc
ljmp
dec
imul
mov
push
xlat
repz
add
jnp
cmp
scas
jae
xchg
stc
xor
aam
pop
add
cwtl
sahf
jb
mov
inc
rcl
dec
bound
iret
mov
repnz
mov
test
out
imul
mul
or
mov
incl
insl
add
sti
fwait
imul
pop
dec
pop
mov
imul
push
sbb
es
add
repz
xor
nop
pushf
mov
mov
mov
jecxz
pop
je
push
xchg
mov
mov
mov
daa
xchg
sub
popa
jne
out
cwtl
leave
mov
add
repnz
cmp
mov
dec
xor
xchg
shrl
jns
inc
mov
sar
inc
sub
shll
and
into
sbbl
aas
je
std
test
cmp
pop
jp
das
leave
xchg
mov
dec
cmp
and
pop
in
mov
lods
mov
pop
addr16
cld
dec
inc
sbb
xchg
and
sarl
leave
and
stc
mov
aaa
dec
aam
pop
rcrl
out
gs
mov
icebp
test
and
sarl
stos
enter
in
mov
dec
pop
scas
jb
and
fcomps
enter
int
adc
out
jns
mov
xchg
cld
push
mov
mov
cmp
xor
and
cwtl
mov
push
jmp
lahf
mov
add
shl
jmp
in
xor
stos
push
enter
fbstp
rcr
push
ret
push
and
in
es
gs
cli
or
call
xor
push
rorb
dec
lahf
xchg
call
xchg
notl
mov
ret
bound
sti
push
ss
sbbl
sub
inc
pop
adc
push
cmp
aas
jbe
pop
xchg
and
out
bound
movsb
mov
std
je
xorb
outsb
pop
cmp
movsl
pushl
jne
mov
icebp
adc
or
cmp
pop
adc
rcl
test
test
mov
cwtl
ss
adc
in
das
adc
daa
das
push
pop
mov
cmp
jb
jo
cmpsl
aaa
add
ljmp
xchg
sbb
push
hlt
add
je
rclb
dec
lcall
sbb
cli
icebp
insb
std
or
and
inc
fistpll
add
fistl
dec
mov
push
movl
out
pushf
shlb
xchg
mov
mov
or
call
dec
and
and
pop
mov
mov
and
cmp
in
repnz
leave
subl
mov
xchg
jg
dec
mov
sub
add
cli
icebp
lret
push
xchg
ret
adc
adc
add
adcl
loop
xor
hlt
bound
enter
arpl
inc
xchg
out
pop
adc
movsl
popf
and
loope
scas
mov
cwtl
insb
mov
in
cmp
out
negb
sub
or
sub
xchg
push
mov
push
mov
scas
lods
push
jnp
test
inc
insl
adc
mov
or
inc
jg
lcall
fimull
mov
test
fs
testb
std
in
sbb
cmp
int
call
hlt
pusha
add
loop
sbbl
mov
pop
dec
cmp
add
xor
aas
pusha
xlat
pop
push
fs
lret
or
addr16
mov
mov
outsl
or
out
add
in
push
fcoml
xor
stos
inc
inc
cs
inc
imul
add
fdivr
sti
adc
inc
dec
es
mov
mov
dec
xor
xchg
jne
xchg
adc
adc
in
dec
sbb
inc
jecxz
and
das
push
cwtl
cmp
int3
clc
loop
fistpl
ds
adc
pushf
popf
dec
lahf
inc
fsubp
cmc
add
mov
ds
sbb
jno
shlb
mov
add
xor
add
or
bound
lods
sub
push
mov
cmp
cmp
jg
inc
sarl
mov
adc
xchg
insl
std
push
jns
pop
jg
fs
push
pop
add
repnz
pusha
mov
xor
or
pop
jbe
lcall
stc
xor
out
iret
gs
push
sub
testl
mov
inc
icebp
mov
addr16
aam
mov
stc
insb
pop
jmp
lcall
ljmp
sbb
add
int3
jmp
and
dec
or
addr16
cmpsl
and
cli
dec
push
sbb
out
rorl
sbbb
repnz
jae
lods
push
add
and
inc
ret
mov
sub
outsl
imul
inc
sbb
sub
nop
push
out
clc
int3
ret
jb
sbb
movsl
push
mov
jmp
movsl
adc
mov
dec
xchg
shll
inc
enter
fs
mov
dec
xor
bound
jl
dec
mov
cs
mov
ljmp
mov
pop
lods
xchg
sub
xchg
outsl
stos
sbb
mov
test
xlat
fs
sarl
mov
out
push
fistps
jns
pusha
inc
xchg
mov
add
inc
mov
sub
test
mov
xchg
fcmovbe
xor
mov
movsl
ret
mov
lods
add
outsb
dec
push
inc
mov
je
cmpsl
cmp
xchg
out
call
cld
cmpsl
xchg
in
popf
pop
in
adc
scas
dec
mov
jecxz
add
inc
push
js
insl
test
xchg
xorl
xchg
push
sarb
imul
push
pop
add
jno
int
cmpsb
xchg
mov
mov
jge
mov
dec
add
aas
jb
dec
cmovne
push
sub
pop
movsl
mov
or
shrl
cmpl
into
inc
pop
lahf
mov
cmp
inc
rcll
aam
mov
js
add
data16
xor
adcb
aaa
sub
add
add
stc
xor
scas
mov
andb
sarl
mov
test
out
push
inc
mov
add
pop
dec
adc
daa
jle
scas
popl
jl
out
xlat
xor
fwait
cmp
and
xchg
arpl
and
scas
jmp
inc
push
mov
pushf
dec
ljmp
push
xorb
cmp
and
dec
jl
add
cmp
mov
dec
adc
xor
adc
mov
jp
push
fisttpl
and
mov
dec
imul
nop
mov
pop
out
shll
mov
ret
mov
or
in
fucomip
xor
test
ss
xchg
repnz
cmp
inc
movsb
xor
int
mov
push
idiv
test
mov
in
in
cmp
cwtl
push
pop
dec
out
fsubp
xchg
mov
or
pop
es
mov
popf
xchg
or
and
pop
jp
sbb
xor
insb
pop
pop
lods
sub
or
fwait
mov
adc
les
in
pop
hlt
dec
mov
int3
pusha
ss
jmp
orb
xor
popa
int3
xchg
mov
lret
dec
and
and
mov
and
xor
in
outsl
xchg
fidivrl
sbb
ljmp
push
cmp
mov
jp
rclb
dec
mov
cmp
pop
push
test
cli
shll
mov
and
loope
lds
movsl
inc
lock
jecxz
sub
jp
mov
pop
jl
dec
inc
cmp
cmpsb
fsubrl
aam
shlb
int3
cld
mov
fmull
insl
dec
shl
repz
or
push
loopne
add
popa
stos
jmp
jmp
dec
push
jp
lods
sbb
in
into
sub
insb
lahf
mov
gs
sub
push
xor
mov
sbb
lock
cld
mov
adc
ss
repz
shll
jno
cltd
jmp
fisubs
add
ret
mov
fldl
sub
cltd
stc
shr
ljmp
cli
pop
repnz
aas
push
lds
and
jmp
cmpl
mov
jno
popf
push
sbb
and
push
and
dec
data16
ret
cmpsl
jg
or
dec
aad
cmp
ss
pop
pop
sbb
sub
jle
cmp
dec
mov
rcl
lahf
push
les
mov
sbb
gs
das
fstpl
mov
jl
xor
mov
push
add
jg
test
or
or
pop
push
sahf
int
push
adc
mov
ss
mov
sbb
pusha
and
push
pushf
and
arpl
push
stos
adc
or
jnp
test
aas
in
or
imul
sub
outsb
fisttpl
sbb
mov
xchg
sti
cwtl
ds
xor
cmp
push
mov
xor
jg
push
dec
lds
jne
mov
movsb
jecxz
sbb
rcr
mov
mov
je
push
insb
cmc
sbb
pop
cmp
movsb
sub
je
ret
mov
mov
xor
movsb
adc
and
sub
out
xor
fcmovnbe
xchg
jno
lcall
lahf
cltd
xor
lock
std
fstpt
mov
std
fdivrl
shl
aam
push
popf
in
pop
fdivr
and
jne
mov
cmp
pusha
or
fsubl
fldenv
hlt
xor
adc
cld
cmp
mov
aaa
sbb
mov
lock
inc
add
psubb
roll
jecxz
jae
out
in
mov
xchg
push
or
pop
cmp
outsl
cmp
adc
out
xor
fidivl
mov
or
pop
ljmp
pop
mov
sbb
fnsave
int3
xlat
adcb
pop
cld
jb
or
adc
inc
xor
js
mov
loopne
adc
repz
cmp
jns
sub
orl
push
js
es
push
jge
sbb
roll
xchg
loopne
lahf
xchg
je
bndstx
rcr
out
ret
pop
adc
fsubrl
mov
jmp
mov
fucom
mov
cltd
cli
xchg
cmp
cmc
xor
sbb
sub
fsubrp
stc
add
arpl
xchg
adc
mov
div
popa
or
jg
mov
push
mov
cmp
and
dec
nop
popa
fisubs
mov
add
fldt
cld
stc
ret
adc
inc
ja
or
arpl
add
or
xchg
inc
jb
pop
pop
sar
mov
and
jecxz
in
rcrb
in
test
jmp
in
or
popa
mov
std
and
xor
adc
inc
xchg
adc
mov
loopne
sbb
test
jecxz
push
xor
xchg
in
aas
mov
jnp
push
leave
lret
and
dec
inc
pop
jmp
pop
mov
push
and
push
sarl
sahf
sbb
loope
jo
mov
in
fisubl
repz
in
jnp
mov
aas
sub
fldenv
xor
cmp
cli
enter
lods
ds
xchg
or
ss
test
jl
jno
xor
repz
xchg
xorl
add
popf
loopne
out
nop
cld
xor
jge
pop
ret
cmp
cmc
dec
cmp
push
push
xor
or
inc
sub
adc
sbb
mov
dec
rorl
enter
mov
adc
sub
fs
popf
sbb
cmp
mov
xorl
inc
ret
pop
xor
inc
gs
xlat
push
xor
adcl
inc
mov
add
int3
pushf
stc
pop
or
nop
push
or
fsubl
cltd
orb
xor
ret
mov
cmp
pop
fmulp
outsl
nop
insb
xchg
cmpsb
or
cmp
jg
aam
ljmp
popf
gs
es
int
push
pop
pushf
lods
mov
cmpsl
push
repz
mov
aad
push
dec
out
fimuls
divb
dec
mov
out
sub
xorb
cltd
in
test
xchg
stos
negb
cld
scas
stos
xor
add
pop
dec
out
cli
divl
pop
insb
clc
inc
sbb
out
xchg
fsubl
inc
in
outsl
movsl
push
lahf
push
mov
lahf
mov
xchg
inc
dec
push
icebp
xor
fdivs
lahf
sbb
js
in
repnz
xor
pop
test
pop
inc
mov
xchg
jne
xchg
or
lret
or
jp
add
jl
addr16
xchg
callw
sbb
and
mov
inc
jo
cli
jl
cs
or
or
lahf
aaa
pushf
and
adc
xor
outsb
xchg
movsb
sti
adc
lret
pop
loop
inc
pop
repnz
mov
enter
dec
mov
push
xchg
xor
mov
cmpsl
dec
add
andb
mov
int
ljmp
movsb
pop
out
lret
xchg
fsubrs
outsb
xchg
popf
lds
sbb
cli
outsb
inc
or
push
mov
mov
jp
fwait
shrb
lret
xchg
mov
jo
cs
out
gs
aad
out
call
pop
adc
adc
mov
fldcw
jecxz
push
test
mov
in
cmp
fdiv
xchg
imul
addr16
frstor
push
pop
jg
push
pop
xor
rcll
xor
sbb
push
js
pop
pop
adc
scas
lcall
inc
mov
leave
pusha
or
mov
incl
test
enter
or
int3
daa
jae
daa
add
add
inc
lds
xor
add
popl
ljmp
fldt
loop
sub
jle
std
dec
mov
insb
cmp
xchg
fdivrs
sbb
lods
adc
xor
xchg
mov
sbb
or
imul
sbb
jp
loopne
mov
and
adc
bnd
jmp
mov
push
sahf
lods
or
in
outsl
cmp
mov
dec
sub
mov
push
outsb
daa
call
sbb
test
push
xchg
aaa
je
test
into
nop
push
cld
int3
cmp
sub
sbb
jae
push
push
cmpsb
pop
mov
and
ret
mov
xlat
mov
jg
adc
pushf
fwait
shlb
push
mov
mov
mov
pop
les
pop
stos
into
loope
push
jmp
xchg
jle
sub
js
xor
cs
pop
sub
xchg
inc
sbb
int3
push
popa
cld
sub
mov
xor
mov
xchg
cmpsl
pop
jmp
jns
movlpd
pop
imul
fnstenv
lods
sbb
mov
pop
mov
fucomip
xor
sub
insb
jmp
inc
jl
mov
fwait
and
mov
sub
inc
jle
push
mov
dec
cwtl
shrl
incl
jmp
cld
fwait
bound
out
jecxz
stos
inc
mov
adc
jnp
push
test
in
fwait
testb
sarl
jnp
imul
xchg
popf
das
ror
out
inc
mov
testb
mov
shl
or
adc
cwtl
mov
xor
int
pop
loopne
test
push
subb
add
fidivrl
rol
adc
imul
dec
jp
cmp
enter
pop
or
mov
pop
mov
xor
push
inc
data16
xchg
repnz
inc
fs
push
push
rorl
rolb
loop
lods
xchg
dec
stos
call
jecxz
aaa
sbbl
enter
pop
cmp
sub
ret
mov
xchg
out
roll
inc
sbb
or
test
mov
inc
jae
aas
in
add
nop
mulb
shlb
sbb
mov
mov
or
cmp
add
mov
fcmovnu
iret
test
adc
cmp
mov
and
inc
sub
xchg
arpl
xchg
mov
les
mov
and
outsl
mov
adc
push
das
repz
mov
imul
mov
hlt
pop
pusha
sahf
inc
out
jl
dec
movsb
imul
sub
add
fbstp
lret
pop
sbb
fsts
mov
cld
push
out
mov
sbb
or
or
sbb
dec
mov
jle
and
mov
out
pop
xchg
mov
jne
je
cmp
int3
dec
fyl2x
lods
mul
insl
in
sbb
test
insb
stc
xlat
jae
inc
shl
xchg
ljmp
adc
xchg
scas
adc
pop
jg
fs
adc
bound
mov
jge
sbb
adc
mov
fldenv
mov
loop
or
mov
jle
lret
les
add
pop
dec
arpl
add
in
in
inc
push
and
in
arpl
sbb
sbb
into
xor
arpl
cmc
rcr
jp
mov
push
cmpsl
fs
cmc
jne
sti
jnp
inc
add
iret
rcrb
fs
xchg
stc
adc
dec
stos
je
rcrb
fwait
aam
movsb
pop
dec
fwait
jae
inc
xor
lret
jno
lods
jge
fisubl
into
sub
leave
push
ds
cmp
pop
push
loope
xlat
jno
sti
out
mov
fwait
cmp
push
arpl
jl
lods
jle
mov
movsb
icebp
push
adc
pushf
shrb
sbb
push
jb
in
push
pop
xorl
ljmp
stos
push
xchg
inc
fadd
mov
mov
jmp
lods
out
iret
aas
mov
sub
or
xchg
divb
leave
push
cltd
mov
aam
and
dec
dec
lret
movsb
lret
adc
inc
jo
xlat
sub
mov
push
mov
mov
scas
int
and
mov
or
jmp
mov
adc
aaa
mov
mov
mov
or
pop
pop
pop
pop
inc
adc
nop
xchg
pop
aam
pop
loopne
mov
mov
comiss
and
stos
ret
and
xchg
xchg
fwait
mov
test
push
outsb
sti
mov
adc
lea
in
in
out
fwait
orl
push
and
dec
popf
nop
int
cld
mov
cld
popf
incb
pop
adc
scas
xlat
and
fisttpl
adc
xchg
pop
push
add
repz
dec
xchg
bound
lcall
add
je
dec
shl
add
mov
mov
xor
sahf
cli
xchg
xor
js
das
sbb
cmp
push
or
adc
cmp
xchg
push
clc
or
add
and
test
xchg
loope
ss
lods
daa
mov
aaa
push
adcl
scas
scas
dec
into
mov
push
xchg
jg
mov
movsl
ss
into
add
ljmp
add
pusha
adc
cmpsl
push
pop
or
fmuls
adc
hlt
pushf
jae
fnstsw
lods
push
rcll
cmp
dec
adcl
mov
push
inc
jns
and
adc
mov
lea
ret
push
inc
nop
shll
push
fsubl
cmp
stc
shlb
xchg
sti
xor
sbb
cmp
test
orb
xchg
add
mov
xor
jno
jb
movsb
cli
test
inc
mov
movsb
clc
int
daa
xchg
jp
jo
je
dec
pop
mov
les
mov
mov
test
mov
pop
or
push
js
das
mov
mov
or
push
js
adc
ret
cltd
or
push
std
jne
pop
pusha
lea
repz
xchg
pushf
sub
add
mov
jge
int
fldenv
ficoms
mov
mov
mov
jp
aas
inc
iret
or
dec
fisubrs
xor
add
push
jl
push
mov
clc
lret
sbbl
cmpb
icebp
scas
dec
cs
pop
jnp
sbb
mov
pusha
test
lcall
dec
iret
dec
notl
mov
cmpsl
mov
cltd
mov
ds
js
lds
dec
orl
mov
in
mov
or
subl
ljmp
sub
cld
aad
aas
stos
loop
call
mov
jno
inc
popf
add
sub
cmp
mov
sahf
leave
xchg
jo
xor
fisubrl
inc
int3
push
sub
jne
adc
cwtl
or
dec
dec
lahf
adc
lahf
push
mov
inc
insb
adc
jnp
test
cmpsl
roll
push
cmp
xchg
imul
scas
stos
test
xor
outsl
mov
jne
mov
jno
jnp
aad
sbb
shrl
popa
test
in
popa
loopne
dec
cmpsb
and
popf
test
or
pop
hlt
ja
dec
out
or
dec
scas
hlt
sub
arpl
xor
aaa
adc
into
push
sbb
xchg
lods
rcll
mov
cmp
out
fldl
adc
stos
sbb
push
mov
repnz
daa
jl
into
fiadds
push
shlb
or
xor
mov
inc
loope
int
push
jns
popa
fisubrs
pop
inc
je
mov
into
imul
jl
sub
mov
outsl
test
cmpsb
in
call
mov
sub
push
dec
pushf
fldenv
nop
outsl
gs
xchg
cmpsl
dec
fs
inc
lods
fistps
adc
test
pop
pop
jno
sbb
jne
inc
out
movsb
daa
and
xor
dec
and
lar
aaa
mov
mov
pop
mov
adc
xor
das
mov
lret
mov
sbb
cld
inc
movsl
pop
sahf
mov
dec
xor
xchg
aas
pop
and
push
test
pop
mov
test
nop
mov
daa
cwtl
xor
cli
inc
rorl
mov
loopne
pop
xor
ret
push
popa
inc
aaa
mov
lock
insb
popf
xor
sbb
adc
inc
cli
lret
stos
and
add
mov
ljmp
call
push
sbb
outsb
jnp
inc
test
push
scas
mov
inc
stc
sbb
add
sub
arpl
cmp
mov
inc
sbb
popa
add
mov
xchg
mov
imul
fidivrl
fldt
arpl
mov
insl
clc
fdivr
mov
inc
add
insb
out
adc
pop
leave
jns
lods
or
and
xlat
inc
xchg
sub
xchg
xchg
jmp
mov
sti
add
jecxz
fisubl
dec
sahf
sbb
jge
pop
loop
mov
scas
cmp
or
loopne
xor
shll
in
aad
pop
fcmovnb
fyl2xp1
sub
fmul
mov
shlb
push
aam
subb
int
dec
lock
push
add
enter
xchg
nop
idiv
scas
pushf
test
scas
jbe
inc
push
inc
sbb
push
dec
pop
ret
sbb
mov
cmp
clc
jae
or
sbb
adc
pushf
inc
and
cmp
mov
nop
push
fildll
and
insb
push
push
filds
pop
in
pop
dec
aad
jae
aaa
sbb
jp
lahf
dec
sar
xor
lcall
icebp
aas
bound
cltd
jae
add
dec
cmp
adc
dec
push
sbb
insb
sub
xchg
add
pusha
cmc
cmpsl
xchg
mov
inc
aad
add
mov
xor
andl
jecxz
sti
int
mov
ds
cmp
sub
fcom
addr16
mov
sub
stos
sbbl
inc
mov
test
push
fstps
jns
adc
push
mov
adc
lock
sub
shll
hlt
add
std
daa
pop
pushf
xchg
lods
hlt
dec
xor
mov
push
and
addr16
sbb
push
sub
outsb
mov
rol
in
pop
lret
xchg
jbe
pop
mov
addr16
cmp
out
pop
push
stc
pop
popf
out
std
push
fwait
es
test
bnd
mov
dec
movsb
fldl
jle
das
push
jp
cltd
mov
inc
jl
subb
gs
rcl
cmp
xchg
leave
popf
jge
mov
in
cmp
loope
pop
inc
mov
xlat
xchg
fcoms
jl
push
mov
fidivrl
push
lcall
inc
fmuls
jp
lret
dec
movsl
outsl
lret
mov
cmp
add
or
xchg
shrb
xchg
fsubr
std
xchg
aam
shll
xor
sbb
mov
jb
out
fwait
sub
lret
popf
sub
out
dec
adc
sbb
data16
adc
in
jge
inc
mov
sti
pop
in
xor
cmp
rorb
pop
mov
mov
jne
jbe
dec
insl
sbb
jno
cmp
lea
inc
sub
adc
fisubrl
cmp
lea
xorb
cmp
and
add
bound
and
fadds
adc
inc
sub
cwtl
sub
mov
test
jo
pop
inc
frstor
push
or
loop
scas
lods
push
movsb
aam
rol
movsb
inc
pop
mov
inc
out
lods
xadd
clc
sbb
hlt
sbb
icebp
loopne
mov
jnp
xchg
or
push
leave
fs
ja
sbbl
js
inc
xchg
inc
adc
fsubr
dec
sub
insb
ret
xor
adc
imulb
ret
movsb
lods
inc
aad
addr16
pop
call
mov
rorb
cmp
mov
dec
or
fs
shlb
filds
xor
cmp
xor
pop
push
dec
lret
mov
add
fwait
shrb
push
dec
std
mov
pop
xchg
cld
repnz
xchg
and
sub
and
push
movsl
mov
sbb
xorl
and
loop
in
outsb
cmpsb
pusha
pop
xchg
nop
cmpsb
jecxz
add
push
ljmp
movsb
test
jne
loope
mov
testl
repz
jecxz
pop
test
mov
adc
jns
sub
lret
xor
cmp
lods
inc
ljmp
ror
and
mov
dec
ds
cmp
clc
aad
test
in
insb
push
ds
inc
xor
mov
mov
xchg
neg
mov
mov
jg
adc
push
pop
sub
or
out
out
imul
push
pop
jp
inc
sub
in
cmp
loop
push
leave
and
inc
xor
ljmp
insb
stos
loope
jno
mov
out
or
or
sub
dec
pop
jb
gs
pop
inc
cmp
xor
or
pop
jecxz
adc
out
xchg
mov
and
xor
sbb
pop
js
mov
negl
xor
mov
pop
repnz
jecxz
ljmp
push
cli
sub
sub
and
mov
icebp
push
les
xchg
mov
inc
xlat
shlb
fwait
jl
je
mov
fisubrs
add
or
pop
push
imul
iret
xchg
push
cmp
scas
icebp
adc
in
leave
sub
push
fwait
dec
or
cmpsb
das
insb
add
lods
in
mov
in
dec
xchg
and
jne
iret
cwtl
in
xlat
arpl
rolb
jle
dec
icebp
xchg
xchg
insb
dec
loope
stos
sahf
hlt
pusha
shlb
lret
jbe
testl
push
out
ljmp
inc
xchg
ljmp
jle
sbb
xchg
loopne
mov
repz
in
mov
dec
and
in
movsb
cmc
enter
and
mov
jb
cmp
and
fdiv
dec
xchg
xor
inc
scas
sbb
add
push
sub
cwtl
aaa
cs
sbb
dec
sub
adc
dec
mov
xorl
mov
sub
mov
and
cmp
outsb
xchg
push
mov
sbb
fstpl
pop
adc
push
xchg
cmp
pop
adc
add
xor
pushf
mov
lods
xor
add
cmp
aad
mov
leave
fs
xchg
or
lea
pushf
stos
and
inc
mov
iret
mov
in
pop
shlb
jb
fadds
aas
outsl
xor
jge
dec
mov
pop
jno
jns
push
dec
xchg
mov
add
inc
loopne
enter
pop
jnp
fldenv
in
dec
dec
inc
cmc
mov
js
test
jge
cld
popl
test
jne
js
xchg
je
stos
in
xchg
scas
push
js
je
lock
add
or
xchg
in
dec
mov
into
push
inc
jo
pop
cmp
aaa
rol
gs
repnz
mov
into
aad
out
or
stos
mov
loope
test
les
cld
xchg
xor
mov
scas
popa
pushf
sub
mov
ja
lahf
cmp
int
call
out
sbb
cmpsl
push
inc
mov
push
sub
jnp
sarb
mov
xchg
shl
jbe
sbb
add
cmpsl
and
adc
adc
pop
fldl2t
rolb
mov
dec
out
dec
movsl
lret
add
inc
pop
stc
int
jo
test
jmp
inc
adc
mov
aad
add
fs
inc
sub
adcl
cmp
mov
stos
imul
mov
stc
jl
lods
dec
mov
mov
fstpl
adc
aam
xor
cs
mov
lock
ja
loope
gs
idivl
stos
nop
iret
jp
mov
shlb
lcall
xorl
xchg
jle
and
aad
into
xchg
xor
popa
repnz
mov
daa
and
jl
sub
pop
cmp
fidivrs
mov
in
insl
xor
out
dec
adc
pop
push
out
lds
xchg
roll
subb
jnp
xchg
js
cmpb
inc
push
mov
test
mov
js
sahf
test
and
mov
cs
push
in
pop
pop
test
mov
stc
push
adc
test
or
stc
js
jne
mov
dec
add
sbb
fmul
lds
aas
fisubrl
sub
pop
ds
lods
out
add
dec
jo
jb
nop
fsubrl
lret
fcmovnbe
inc
pop
stos
test
lcall
movsl
movsb
xchg
xchg
xchg
mov
int3
push
popf
int
sbb
jnp
xor
scas
sub
xor
repz
mov
add
out
dec
cmp
mov
scas
mov
call
in
xlat
mov
pushf
fistps
repz
enter
in
xchg
sub
or
dec
in
aaa
inc
orb
pop
out
lcall
add
mov
mov
test
test
adc
xchg
lret
pop
lock
xor
lret
push
xlat
lock
mov
movsb
jb
push
in
inc
mov
lcall
jae
sti
repz
mov
pusha
cmp
scas
inc
pop
and
in
xchg
xchg
sub
fisttpll
addb
insb
insb
loop
and
jae
cmp
add
imul
mov
outsb
sarl
sub
xchg
inc
cmpsb
xor
sbb
pop
mov
in
or
leave
daa
test
xor
and
sub
pop
arpl
or
popa
dec
loope
fstpt
pusha
enter
in
sbb
jle
inc
test
shrb
call
das
dec
divb
test
dec
stc
or
lock
sbb
adc
test
inc
push
imul
ds
jbe
xchg
jle
push
shrb
scas
mov
pop
cmpsb
or
cmp
cmp
jp
call
mov
test
addr16
arpl
adc
mov
iret
cmp
cmpsl
mov
fwait
out
and
test
les
or
mov
mov
mov
ret
bound
mov
dec
imul
and
push
pop
stc
shll
int
mov
fstp
mov
sbb
rclb
mov
or
mov
mov
loopne
push
push
push
setno
lock
xor
add
ds
mov
clc
xor
xchg
out
xlat
mov
jno
mov
faddl
cmpsl
shlb
and
sti
jge
jns
pop
mov
dec
imul
mov
testb
int3
cmpsl
in
lods
mov
es
or
aaa
loop
out
out
pop
mov
inc
adc
insb
add
pop
js
xchg
pop
ret
popa
xor
xchg
mov
push
sub
subb
int
scas
cs
gs
jne
xchg
push
pop
cli
adc
sarb
xlat
cmp
jmp
xchg
inc
fnstenv
fidivs
push
aam
outsb
pop
jp
add
pushf
std
push
xchg
jge
xlat
imul
mov
cmpsl
sbb
pop
mov
and
arpl
fcoml
xor
scas
stos
xor
das
inc
jns
lret
cmc
or
xor
lcall
cs
das
mov
enter
inc
cmc
ror
add
clc
push
add
xchg
pop
inc
enter
dec
in
inc
pushf
in
inc
hlt
call
jmp
out
popf
pushf
outsl
dec
mov
and
mov
and
inc
testl
fwait
jp
nop
and
mov
arpl
fwait
ret
daa
sub
data16
andb
cld
mov
xchg
jge
leave
bound
push
xor
mov
inc
mov
mov
mov
inc
sbb
shll
test
cmp
fmul
mov
xlat
in
dec
sarl
mov
out
sub
jns
mov
jl
push
jg
es
sub
sti
jne
or
mov
pop
int
adc
sub
lods
dec
lahf
add
push
pop
ds
jb
fidivrs
and
test
or
xchg
inc
add
xchg
and
sub
insb
iret
loope
push
dec
ss
loopne
sbb
push
inc
filds
jmp
adc
cmovs
xchg
push
mulb
pop
push
shll
in
cmpsl
dec
jl
jb
cli
adc
jo
push
dec
xchg
adc
lret
insb
cli
add
aam
pusha
xchg
mov
fistps
push
rcrb
push
sub
rcrl
and
xor
adc
push
or
pop
cmc
fidivrs
cmp
inc
jle
pop
cli
ljmp
dec
sbb
mov
das
and
cwtl
jecxz
jl
push
enter
dec
inc
mov
movsb
fldenv
pusha
filds
push
out
hlt
mov
cmpsb
cltd
dec
daa
jbe
cmp
call
sub
andl
fdiv
imul
xchg
push
dec
imul
push
lods
jne
sub
xlat
jns
adc
je
imul
mov
ja
sbb
movsl
addr16
add
outsl
jne
jle
daa
pop
and
cs
mov
sub
sub
shlb
xor
dec
movsb
je
bswap
jb
fs
imul
cmp
dec
jo
lock
sub
movd
mov
xor
xlat
movsb
lahf
mov
shll
mov
xor
cs
pushl
adc
sahf
xchg
sbb
outsb
adc
pop
pusha
mov
mov
mov
call
insb
and
sahf
dec
add
push
in
push
imul
into
arpl
dec
insl
pop
popa
and
inc
inc
sahf
inc
lcall
cmp
xchg
popa
loope
and
ss
mov
std
shr
jnp
sti
xchg
push
icebp
inc
popa
popa
into
imul
int
push
subl
sbbl
repnz
out
movsl
lea
inc
in
push
lret
mov
push
rclb
shlb
pop
mov
outsl
loop
aas
int3
sbb
mov
adc
adc
and
push
std
les
dec
loopne
jge
aam
aaa
pop
sbb
pop
ja
inc
pop
inc
repz
sbb
rorl
mov
fbld
add
push
insl
lds
push
mov
sbb
fdiv
pop
xchg
xchg
sbb
mov
in
stos
loopne
dec
ja
addr16
fildll
call
rcll
gs
insl
xor
sbb
inc
pop
daa
sub
jle
outsb
add
sub
imul
mov
mov
testb
lret
jmp
pop
in
push
push
mov
jae
dec
pop
data16
les
mov
push
popa
adc
pop
and
pop
test
or
adc
jle
xor
push
or
out
fbstp
push
and
adc
sub
xchg
lret
ja
sub
jecxz
xchg
inc
cmpsl
add
cwtl
hlt
fstps
cmp
test
jge
lret
and
pop
nop
adc
aas
pop
mov
fcoml
js
fsts
shl
xor
sub
test
test
lret
cmc
ja
scas
pop
faddp
pop
sbb
cmpsb
sub
mov
jp
bound
ljmp
inc
aad
movsl
push
in
rcrb
push
jle
push
test
pop
pop
jp
cmp
mov
lahf
push
out
dec
jmp
mov
mov
mov
jno
clc
xchg
dec
out
addr16
dec
mov
jbe
push
and
pusha
pusha
ss
lahf
out
clc
orb
fldl
inc
js
scas
lret
cld
push
fs
sub
lds
cmpl
sub
cmpsb
fsub
lea
mov
pop
sub
pop
jp
or
lcall
ds
pop
stos
xor
sbb
mov
mov
sbb
jg
int3
sarb
adc
arpl
mov
and
fimull
mov
jmp
or
jno
dec
sub
lds
mov
shlb
aad
mov
pop
arpl
inc
scas
dec
push
stc
xchg
int
xchg
sarb
and
mov
xchg
mov
mov
pop
mov
test
bound
adc
in
movsl
sbb
lock
imul
and
mov
fs
lods
fsub
jns
movsb
xor
cmp
movsb
dec
inc
jecxz
shlb
xchg
mov
dec
in
out
aad
and
push
int
loopne
inc
je
mov
in
dec
cmpsb
lcall
pop
push
cmp
cmpsl
movsb
pushf
cmp
add
push
sub
es
sbb
aad
and
in
mov
jmp
xchg
and
and
cmc
mov
add
inc
xchg
jecxz
call
std
pop
mov
xchg
dec
repz
ret
orl
push
cli
adc
push
lahf
into
mov
mov
fs
pusha
jnp
mov
in
dec
adc
dec
xor
aaa
xchg
movsl
shll
test
jecxz
push
jo
sbb
scas
leave
dec
ljmp
inc
ret
cmc
adc
insl
adc
fwait
mov
sub
shll
lret
inc
sub
mov
into
mov
in
fstps
mov
pusha
xchg
jmp
cmp
icebp
fdivrs
leave
add
push
or
inc
shll
call
dec
aam
lock
test
ret
adc
or
xlat
mov
jecxz
ljmp
repz
in
inc
cs
fldl
outsb
or
std
adc
mov
or
add
enter
fisubl
push
pop
pushf
mov
dec
icebp
push
in
push
and
lret
and
outsb
test
aaa
inc
icebp
out
insl
mov
jbe
ret
jo
arpl
lret
jno
jbe
dec
int
jmp
push
daa
sub
pusha
mov
sub
jmp
mov
and
cmp
jg
cmpsb
aaa
int
pop
mov
clc
and
xor
repz
das
popa
ss
or
mov
fidivrl
mov
loop
and
lea
mov
mov
cmp
popa
inc
push
adc
ljmp
dec
jg
add
shlb
cmp
aas
add
adc
pop
cmp
insl
data16
out
jmp
and
stc
movsb
jl
out
xchg
pop
pop
jmp
jge
dec
mov
jb
ljmp
or
xor
and
sarl
or
fidivl
cmp
sub
fdivr
xlat
inc
jmp
ret
es
push
pusha
nop
out
loopne
mov
fistpll
push
movsb
adc
insb
leave
push
movsb
jge
notl
rcrb
call
mov
popf
sbb
fsubrs
mov
rcrl
dec
jae
scas
ljmp
ficoms
daa
imul
aaa
mov
cmp
sbb
mov
mov
into
shll
cmc
packssdw
xchg
adc
fidivs
lahf
sub
stc
icebp
int
and
sbb
loope
add
add
xchg
xchg
sbb
xor
bound
int
add
popa
xor
xchg
mov
sbb
notb
mov
jmp
in
adc
xor
aad
adc
add
dec
std
daa
fisubl
iret
inc
enter
sub
mov
and
jo
push
mov
rcll
lret
sub
insl
sahf
mov
ljmp
loop
lods
sub
stos
out
stc
and
movsl
mov
hlt
pop
sbb
jmp
in
push
lret
fisttps
cmpsl
mov
cmp
jne
adcb
insb
pop
sub
sbb
add
sahf
mov
insb
or
les
or
push
pop
out
xchg
and
inc
outsl
aas
out
mov
dec
leave
test
sub
in
xchg
cwtl
leave
dec
shll
and
pushf
pop
fs
cmpsb
push
movsb
jl
cmp
push
loopne
push
sbb
mov
adc
add
test
out
shl
dec
test
fxch
sub
ss
pop
cmp
cmp
dec
cltd
xchg
inc
mov
mov
mov
sbb
push
mov
pop
js
sub
jae
pop
pop
pop
or
call
inc
ds
std
mov
sub
out
pop
das
ficompl
arpl
out
xor
out
out
adc
jbe
test
fisubl
shll
mulb
xchg
mov
xor
push
pop
pop
inc
std
mov
fldenv
mov
sbb
sub
jle
xchg
outsb
or
xchg
jmp
bound
dec
lcall
icebp
fcmovu
inc
cltd
push
adc
imul
loop
or
adcb
js
mov
movsb
pop
xor
add
or
shll
sub
push
aaa
dec
aad
sbb
mov
xor
popf
fxch
daa
pop
adc
popa
push
xorb
movsb
fxch
xchg
insl
outsl
iret
mov
mov
popa
dec
jne
mov
not
out
mov
repnz
mov
iret
mov
inc
xchg
test
stos
ret
jns
mov
jmp
cmp
jo
out
cmpb
add
std
push
mov
std
push
fdiv
shlb
pop
inc
movsb
das
mov
xchg
sbb
aam
mov
sub
test
mov
insb
bnd
add
add
pop
dec
into
xchg
cmp
adc
ljmp
xchg
shr
and
and
repnz
pop
xchg
cmc
add
xor
add
sti
and
cmp
jp
shll
fdivl
mov
pop
and
popf
add
or
xchg
jmp
test
mov
outsl
cmp
sub
gs
lods
lret
jp
sbb
lret
push
pop
stos
ja
pop
mov
insb
sub
adc
fwait
push
sbb
ja
xchg
aaa
icebp
dec
cmp
xor
jle
add
in
adc
or
scas
movsl
sub
mov
out
sub
jbe
inc
adc
insl
test
sub
jmp
nop
pop
push
dec
dec
cwtl
movsl
jno
add
outsb
test
pop
mov
sub
ret
scas
xchg
in
rolb
mov
cli
mov
mov
setl
sbb
roll
or
mov
notl
jo
push
lret
and
push
pop
jecxz
movsb
idivb
imul
inc
jge
mov
test
mov
and
subb
insl
xchg
dec
push
xchg
cld
xor
lahf
xor
fsubl
imul
mov
xchg
outsl
add
mov
xchg
in
flds
dec
addr16
call
mov
mov
xchg
jmp
call
jmp
xchg
cmp
call
shll
add
into
inc
ja
mov
gs
push
and
sub
lea
nop
cmp
jb
sbb
or
cmpsb
aad
add
sub
xchg
dec
sub
inc
inc
or
cmp
or
cltd
aad
mov
mov
xor
push
inc
xchg
adc
sub
sbb
xchg
push
jbe
cmp
cwtl
xlat
xchg
rol
ret
notb
bound
cmp
fimuls
jo
mov
and
mov
mov
dec
xchg
dec
push
shr
scas
adc
mov
xchg
push
dec
out
mov
mov
orb
mov
and
push
cmp
push
xor
cld
addr16
sub
sti
pop
mov
cmc
xchg
negb
das
cmp
mov
imul
mov
mov
mov
inc
add
movsb
mov
sub
xor
adc
mov
fists
pop
and
push
gs
ret
mov
and
push
push
and
fcmovnu
and
mov
scas
outsb
loop
adc
xchg
dec
inc
mov
mov
xor
fs
imull
cld
mov
sbb
adc
hlt
sub
stos
lock
cltd
xor
fwait
jg
xchg
cmp
xor
fdivrs
call
pop
dec
mov
imul
gs
out
ss
mov
scas
and
sti
or
test
push
scas
loope
scas
aas
push
pop
cmpsb
sub
inc
testb
xchg
imul
or
out
pop
clc
das
fprem
stos
push
mov
mov
xor
mov
cwtl
pusha
cmovne
inc
pop
pop
and
pop
test
adc
cmp
fcoml
jmp
cmp
test
jg
inc
notb
sbb
aad
push
ret
scas
cmp
sub
std
jg
xchg
adc
xor
test
jae
sub
pop
pop
in
xchg
mov
dec
cli
sbbb
jno
cmp
or
aas
repz
or
stc
push
outsb
shll
stos
loop
jl
and
dec
popf
xchg
jge
popf
push
stc
sbb
lock
xchg
mov
aad
sbb
call
fsqrt
pop
inc
jo
lock
xlat
shl
leave
ror
add
add
mov
cwtl
or
xchg
xchg
jb
mov
rorl
cmc
cmp
ja
cmp
iret
stc
fcom
jp
sti
mov
lret
pop
or
mov
or
jno
sub
lods
xorl
ret
loop
dec
repz
das
xchg
xor
mov
rclb
push
push
push
arpl
sbb
aas
jns
mov
shll
and
jle
aas
pop
daa
mov
and
int
sbb
dec
pop
mov
inc
push
mov
int
fists
dec
imul
fdivrs
nop
cld
jno
add
and
jl
nop
sbb
movsb
into
or
pop
cmp
nop
inc
test
loopne
jnp
dec
bound
cwtl
aas
out
add
lret
test
loopne
inc
popa
lods
outsl
xor
jmp
fucomp
jbe
dec
fs
dec
negb
add
test
and
cli
jns
popf
xchg
cmp
repnz
stc
xor
stc
mov
icebp
jg
push
test
sti
push
and
add
insb
mov
cmp
je
ret
mov
sbb
cld
xchg
sbb
test
hlt
shlb
xor
xchg
pushf
sahf
loope
arpl
test
jb
xchg
sub
mov
lds
jb
sub
aas
addb
and
mov
push
jnp
inc
iret
out
xor
push
jmp
inc
shll
cmp
mov
and
or
adc
ljmp
test
push
add
and
push
test
lds
lret
and
scas
pop
dec
inc
cs
loopne
es
cmp
and
leave
orb
pop
cmp
pop
lods
es
sbb
lods
jae
das
jp
nop
loopne
mulb
sub
dec
inc
fnsave
sub
test
gs
push
mov
ret
test
popa
rolb
cmc
addb
popa
xor
mov
dec
sbb
dec
data16
adc
cmp
in
jle
pop
lret
adc
outsb
hlt
push
and
lea
dec
mov
daa
ja
cmp
ficoms
rcll
xorb
sub
sbb
add
clc
aas
fists
addr16
into
fiadds
dec
and
mov
loop
test
push
xchg
in
ret
shl
lods
arpl
xor
mov
into
cmpsb
loop
bound
push
lret
pop
popa
mov
lock
push
fstl
mov
arpl
xchg
pop
mov
mov
inc
pop
call
or
pop
pop
ja
gs
ljmp
xchg
das
jle
jle
fwait
sub
xor
test
in
xchg
cltd
sub
inc
bswap
inc
xor
push
mov
out
imul
lods
push
sub
and
addb
adc
xor
insl
push
nop
jne
fwait
mov
aam
xchg
xor
push
insb
nop
mov
mov
jne
lods
incb
mov
lret
ret
fisttps
or
sbb
out
dec
int3
fsubs
popa
outsb
dec
arpl
repz
jg
push
out
test
pushf
sub
jnp
dec
fcoms
js
icebp
into
movsl
loopne
mov
mov
xlat
adc
xchg
add
test
pop
inc
jp
pop
call
xor
aaa
pop
jb
push
and
mov
or
mov
lds
jb
sbb
push
mov
xor
stos
idivl
and
paddsb
mov
dec
std
xchg
movsb
roll
jae
fisubrl
mov
xchg
add
mov
lds
adc
xchg
adc
ss
jbe
jb
fmull
divl
mov
lods
push
out
shl
dec
inc
adc
pop
cmpsb
sub
and
ret
inc
fs
push
test
mov
mov
pop
pop
in
jp
jl
jns
cmpsl
mov
int
push
sub
enter
dec
push
xor
loope
hlt
mov
popf
jns
mov
cmc
fcoms
rolb
dec
cmp
aaa
pushf
inc
push
push
push
xor
lahf
or
inc
addr16
out
push
xchg
or
or
js
and
int
push
or
add
cmp
addl
sbb
mov
movsl
mov
xor
into
adc
les
jp
inc
data16
stos
fstps
jecxz
nop
cmp
fistpll
sbb
xchg
fsubrs
lret
fs
mov
pop
enter
imul
mov
cmp
pop
popa
in
mov
je
iret
dec
cmpsl
ret
nop
pop
xor
mov
ret
mov
sub
pop
and
test
xor
mov
sti
pop
call
iret
gs
ss
ret
insl
mov
push
call
add
adc
xchg
pop
xor
mov
sbb
or
adc
rorb
and
hlt
or
push
mov
jo
stos
orb
int
sub
aaa
les
cmp
sub
sub
in
call
push
inc
mov
movzbl
inc
adc
dec
jnp
inc
or
pop
lcall
mov
mov
xlat
imul
pop
push
jp
add
dec
popf
hlt
movsl
mov
mov
icebp
or
mov
dec
arpl
mov
mov
repnz
xor
xor
dec
sub
mov
mov
mov
test
xchg
cwtl
shrb
insb
pushf
ljmp
gs
mov
and
push
sub
pop
mov
adc
push
pop
shll
test
fisttpl
or
fsubs
sbb
shll
sbb
mov
loope
fcomi
stos
sbb
outsb
loopne
xor
push
mov
ror
imul
sbb
icebp
mov
inc
xor
or
inc
dec
pop
out
mov
and
sub
loopne
aaa
cmpsl
lret
fsubl
and
mov
push
adc
jecxz
repz
call
loope
pop
mov
js
add
orb
push
add
sbb
addr16
jnp
adc
sahf
mov
add
ljmp
jbe
insl
adc
add
jb
mov
sbb
movsl
fldcw
mov
sub
cmp
das
scas
xchg
push
xchg
aad
jge
lods
in
mov
arpl
and
mov
movsl
cmpsb
movsb
xor
aad
add
xchg
cmp
adcb
fnstenv
inc
fldl
out
xor
adc
in
adc
adc
xchg
nopl
int
icebp
inc
je
lods
je
cmc
ljmp
adc
sub
int
loop
dec
inc
outsl
out
dec
das
mov
stos
sub
ss
mov
gs
dec
das
fs
jl
or
out
xlat
cli
jle
dec
test
jmp
xchg
sbbb
divb
roll
sub
inc
testb
or
add
lcall
push
and
sbb
and
pop
inc
xor
jb
push
adc
jnp
mov
or
fcoms
and
aaa
jns
leave
cld
jp
cmpsb
aad
in
mov
fwait
stos
cmc
mov
mov
or
dec
jle
jo
xor
jnp
addr16
mov
cmp
cmp
enter
pop
push
out
pop
sub
pushf
lods
lea
andl
pop
adc
ret
sbb
fsub
mov
daa
add
cld
mov
out
cmp
xchg
mov
push
arpl
or
std
mov
in
dec
xchg
insl
push
fisttps
pop
loopne
cmc
pop
lret
mov
inc
xchg
mov
shll
jg
rcll
mov
testl
shll
add
inc
scas
push
adc
xor
cld
fdivs
or
setl
lods
sub
push
fisttpll
pusha
cmpsl
fstpl
cmp
inc
mov
in
int3
jb
insl
rcrb
fcomps
test
aad
xor
leave
jl
mov
aam
aad
xchg
imul
mov
pop
insb
stc
ds
scas
das
inc
mov
adc
in
xchg
sub
test
xor
xchg
push
fistpl
mov
dec
je
arpl
ffreep
in
insl
mov
divl
add
xlat
aas
rcl
add
pop
lods
jnp
pop
int3
push
shrb
dec
and
fdivr
lock
fdivl
sbb
int3
aaa
stc
imul
pusha
add
mov
loope
test
dec
fbstp
pop
or
xchg
xor
rcrl
pop
pop
add
pop
sub
dec
or
or
adc
add
cmp
lret
cmp
aam
sahf
pop
xchg
popf
and
jbe
mov
in
loope
xchg
xlat
push
pop
or
xchg
cmp
jecxz
in
test
test
jnp
and
jl
mov
add
push
ficoms
or
and
aas
push
shrb
orb
mov
xor
shll
inc
testb
pop
arpl
sub
add
inc
cwtl
scas
push
movsb
jp
lret
xor
in
push
inc
dec
in
mov
imull
loope
cmc
xor
sahf
adc
mov
popf
movsb
jno
mov
js
in
insb
les
dec
jmp
push
dec
jns
rclb
inc
xchg
adc
sbb
push
fisubs
and
mul
push
jbe
mov
sti
cmp
out
or
jle
lret
in
scas
decl
stos
ss
and
inc
mov
mov
shll
imul
fwait
push
xchg
and
jns
scas
repnz
xor
mov
enter
in
lds
stos
pop
lock
cmp
fcmovnb
inc
push
push
cmp
pop
jbe
or
leave
or
mov
or
xor
push
fdivp
loopne
jb
adc
ljmp
xor
or
xor
mov
pop
adc
sti
pop
ljmp
push
movsl
lret
loopne
jge
shrl
mov
push
rcll
test
leave
lds
jmp
mov
xchg
cmp
push
mov
aaa
mov
out
lret
dec
push
mov
sbb
push
sub
jo
jmp
lcall
pusha
test
adc
mov
shlb
cmp
mov
lds
xor
icebp
sbb
mov
mov
cltd
arpl
or
adc
jl
adcb
pop
and
dec
sub
xchg
or
scas
dec
inc
mov
lock
jb
shrb
pusha
neg
mov
stos
enter
jge
jge
mov
lea
or
mov
xor
mov
mov
lret
test
or
sti
lahf
add
out
add
pop
push
movsl
call
pop
add
sub
mov
dec
pop
sbb
cmpsl
adc
cmp
dec
insl
cli
ja
jecxz
or
and
insl
push
add
pop
xchg
call
push
pop
pop
fmull
call
add
push
aad
test
mov
push
sahf
add
rcll
or
or
scas
rclb
das
or
stos
mov
lcall
dec
mov
adcb
in
cmpsl
jp
add
sub
dec
push
xchg
mov
push
pop
xlat
and
add
dec
sbb
sub
insl
mov
xchg
int3
enter
jno
dec
adc
push
std
shlb
adc
cld
cmc
push
arpl
push
out
mov
inc
jmp
add
xchg
repnz
push
inc
test
or
pusha
mov
cmp
cmp
xor
stos
call
mov
mov
aas
arpl
mov
mov
lea
fsubl
lret
pop
repnz
mulb
fstl
lds
dec
pop
cmp
add
into
jbe
push
nop
out
test
inc
loopne
mov
int3
dec
fidivrs
mov
out
xor
movl
shl
xchg
in
xchg
cmc
mov
cld
filds
push
add
sbb
dec
pop
imul
xchg
icebp
movsl
adc
inc
cli
inc
cmp
xor
movsb
pop
mov
sub
xor
sbb
xchg
pop
dec
je
gs
adcb
and
shrl
imul
popf
int
rorl
mov
leave
or
out
pop
outsb
ret
inc
lcall
inc
or
xchg
sub
adc
or
cwtl
popa
and
lret
stos
mov
adc
jns
inc
mov
mov
pop
jmp
or
pop
xlat
lods
jae
xchg
pop
popf
cwtl
sub
ror
lea
mov
leave
mov
nop
or
fwait
pop
rorb
cmp
mov
sbb
push
xchg
or
push
add
and
xchg
jp
pop
js
cmpsb
lcall
clc
and
adc
imul
stos
aam
dec
int3
movsb
cmpsb
push
cwtl
push
and
imul
out
stos
sub
daa
out
loopne
cmpsb
movsl
inc
shrb
fildl
loopne
jp
aam
mull
sbb
fwait
sbb
push
std
mov
cwtl
ficomps
call
aam
stos
cmp
xor
xchg
scas
push
cmp
dec
and
jmp
xchg
stos
push
and
mov
or
mov
data16
dec
pop
or
mov
adc
mov
fincstp
fdivp
rorl
sbb
enter
mov
callw
sbb
adc
mov
repz
andb
sub
adc
arpl
int3
dec
dec
cmpb
sbb
cmp
lahf
iret
jnp
cmpsl
loopne
repz
pop
push
aaa
loope
pop
dec
xor
pop
mov
ss
jmp
fbstp
stos
fistpl
and
xor
sub
xor
xor
stos
pop
mov
gs
xchg
jge
sub
mov
popa
fimuls
sbb
inc
movsl
dec
clc
push
sub
in
push
cmp
jae
sar
xorl
ret
or
aaa
dec
notb
out
clc
mov
fwait
in
jecxz,pn
movsb
insl
fwait
lds
pop
mov
push
cli
cmp
push
xchg
jle
fldl
bound
jb
daa
sub
aaa
lea
imul
push
inc
mov
and
repnz
jb
inc
aam
jge
pop
cmp
sub
sbb
lods
add
lret
mov
mov
movsb
mov
push
xlat
das
add
rcr
pop
mov
stc
or
push
push
pop
pushl
cmpsb
xor
faddl
aas
jge
test
repz
in
test
pop
xchg
sbb
push
xchg
dec
xor
add
sbb
dec
push
out
cli
push
ljmp
les
cmpl
jne
rcl
adc
mov
loope
or
rclb
divb
inc
out
mov
insb
push
pop
dec
lcall
adc
cwtl
xchg
sub
mov
shll
lea
out
cs
and
mov
jb
push
mov
pop
pop
mov
pop
in
inc
fildl
pushf
ja
xchg
and
adc
inc
int3
xor
add
inc
icebp
and
push
xor
xor
in
jmp
or
or
mov
dec
xlat
testb
adc
dec
out
sbb
push
les
add
sbb
repz
stos
rorl
scas
aaa
repnz
scas
add
or
adc
mov
outsb
mov
dec
or
mov
xchg
adc
daa
xchg
cmpb
sub
push
jmp
adc
and
sub
mov
cmpsl
cmp
push
ja
sbb
pop
adc
pop
sub
pop
and
or
cli
mov
push
sub
fs
shrl
dec
xchg
mov
sbb
clc
insb
dec
mov
fdivr
and
inc
sbb
and
push
aam
pop
pmullw
dec
movsb
pop
lret
out
push
xchg
movsb
addr16
sub
adc
lock
addr16
push
push
xchg
frndint
inc
into
loopne
push
jg
xchg
je
loopne
sub
addr16
pop
and
dec
imul
out
pop
push
ds
sub
xor
repnz
push
cmp
addb
cli
aaa
aas
fldenv
pop
ja
sbb
sub
mov
lcall
addr16
sbb
rclb
mov
add
dec
stc
nop
fcom
xacquire
ja
popa
andnps
mov
jl
outsb
mov
addb
inc
ljmp
out
jg
push
int3
adc
ss
sbb
test
iret
mov
or
pop
cmp
les
and
pop
jnp
fucomp
insl
idiv
inc
enter
cmpsl
notb
xor
pop
pop
mov
and
int3
lods
jg
lods
popa
daa
jmp
or
addr16
sahf
mov
jp
cltd
in
popf
pop
in
sub
clc
add
je
fwait
or
and
dec
iret
cmp
and
stos
punpckhwd
out
cwtl
fbstp
lods
lea
push
push
in
pop
mov
ljmp
outsb
shl
push
insl
dec
dec
arpl
repnz
fnstsw
or
add
test
inc
adc
cmp
and
scas
les
pop
out
xchg
push
int
adc
inc
mov
sbb
loope
and
jl
rcl
xchg
dec
int3
xchg
cmpsb
and
ljmp
mov
iret
in
nop
divl
sar
rorl
add
mov
fists
and
or
add
xorb
xor
push
adc
test
or
stos
sub
and
dec
inc
jae
push
lea
push
popa
xorb
in
test
fdivrs
outsb
xchg
jne
and
mov
mov
jbe
mov
push
xchg
lock
and
push
stos
mov
repz
out
jmp
les
or
nop
out
push
outsl
mov
test
test
pushf
pop
loop
dec
clc
hlt
aaa
and
dec
pop
add
scas
pop
adc
in
mov
int3
cmp
push
and
add
cmc
sahf
sub
cmp
mov
imul
jae
xchg
mov
cmp
jnp
mov
jb
xchg
loop
loop
cmp
mov
push
test
or
les
ljmp
scas
dec
out
adc
insl
rorb
jno
test
or
inc
xabort
aas
mov
es
mul
cmp
cmc
jg
adc
or
xor
ja
test
orb
xor
nop
mov
push
push
cmc
mov
and
xchg
mov
fidivl
pop
add
cmpsb
pop
push
lret
js
pop
sbb
dec
sbb
push
pop
cvtpi2ps
ds
push
inc
fs
adc
test
add
jmp
pop
pop
inc
mov
xchg
inc
push
ret
jno
mov
call
pop
jnp
flds
mov
cmp
xor
push
or
enter
mov
mov
iret
fildll
mov
add
std
jmp
mov
push
mov
aam
adc
lds
shl
pop
mov
xchg
push
mov
inc
mov
cmpsl
in
jne
adc
scas
dec
cltd
mov
jnp
ret
ret
fsubp
pop
adc
popf
mov
std
pop
nop
stc
aas
ds
sbb
sub
mov
and
icebp
jmp
mov
jmp
fisubl
inc
mov
sarb
cltd
add
sub
popf
inc
nop
aaa
icebp
and
dec
cmp
push
cmp
ds
shlb
int3
adc
adc
das
xchg
out
cmp
xor
sti
and
lock
bound
and
nop
push
cmpsl
mov
or
std
test
fsubrl
adc
sub
btc
pop
jge
mov
xor
mov
out
dec
lock
mov
dec
int3
adc
pop
les
mov
cmp
add
push
mov
enter
cmp
dec
ss
inc
adc
sarl
mov
jmp
sbb
pop
sbb
jb
add
xor
push
jecxz
dec
mov
mov
lea
filds
mov
mov
jg
jno
inc
or
xchg
out
dec
xor
and
push
icebp
adc
hlt
aad
repz
sbb
jle
popf
mov
jae
leave
cld
shlb
cs
mov
pop
and
bound
outsb
cltd
cmp
sbb
pop
add
test
data16
aas
jmp
lea
nop
nop
cmp
xchg
inc
jae
lret
add
push
cld
mov
cmovno
add
decb
sarl
cmpsb
push
push
pop
sbb
lahf
mov
cs
adc
bswap
popf
pop
mov
jecxz
faddl
pop
or
xor
adc
movsl
roll
push
clc
cmpsl
sbb
mov
imul
mov
push
push
mov
nop
mov
idivb
inc
sub
sbb
rcl
mov
outsb
xor
cmpsb
rclb
roll
sbb
xor
sub
adc
cmp
push
mov
fld
cld
fdivr
xlat
repnz
std
add
and
test
imul
push
js
lock
fsubs
cmp
lahf
xchg
sub
shrl
stc
adc
fs
dec
rcrl
and
mov
cmpsl
jae
jnp
or
or
jae
and
adc
jg
mov
cld
pop
dec
mov
or
leave
outsl
imul
sub
sti
movsl
xor
mov
icebp
cmp
addr16
ds
pop
and
pop
push
fadd
or
ret
ss
mov
mov
push
and
add
sub
add
fwait
in
jmp
pop
insl
inc
jmp
in
dec
sbb
notl
das
out
out
cld
cltd
or
repz
fwait
stc
cwtl
cmp
xchg
out
iret
ret
sub
sarb
cmp
imul
mov
ret
and
sahf
sub
push
mov
notb
and
xor
jecxz
inc
sarb
in
sbb
mov
inc
xchg
sub
xchg
fwait
in
cmpsb
mov
loop
or
imul
cmpsb
cmp
mov
cmp
insl
xor
cmp
loopne
gs
jo
fsubrl
fmuls
shlb
push
fdivl
int3
jnp
inc
jg
push
loopne
and
or
inc
mov
or
push
and
enter
mov
hlt
xchg
xor
into
jne
dec
rcl
inc
es
test
call
mov
xchg
pop
xor
iret
mov
add
data16
inc
cld
enter
mov
dec
ss
ljmp
inc
fs
pop
jbe
ds
rclb
cld
insl
or
repnz
adc
pop
aad
xor
xchg
out
ljmp
or
jns
jecxz
sbb
push
lahf
adc
test
lock
rcrb
aas
sbb
popa
xor
mov
sub
aas
stos
add
add
jns
jbe
testl
popa
scas
pushf
cmp
pop
das
cs
in
mov
arpl
jbe
mov
in
negb
push
loope
lret
fimuls
scas
aam
mov
out
stc
add
aad
int3
adc
rcrb
mov
push
imul
inc
jb
sbbl
maxps
or
mov
cld
jno
fwait
cmc
out
scas
mov
js
xor
cmpsl
test
dec
inc
pop
ret
lock
xor
push
xchg
push
js
outsl
rcl
aas
cmpsl
addb
mov
add
or
xor
cmp
lcall
jge
sub
fwait
lahf
sub
in
cmpsb
leave
mov
dec
mov
popf
sahf
dec
je
cmp
fmull
pop
fbld
fs
into
mov
adc
pop
pop
cld
lret
xchg
inc
sbb
and
fistl
pop
mov
pop
sbb
push
dec
jo
adc
rcrl
daa
jge
int3
fmuls
adc
sub
inc
les
push
sbb
mov
xlat
adc
adc
std
in
out
or
lahf
push
nop
sbb
jae
inc
xchg
sbb
out
adc
push
leave
sub
xchg
xor
fnstenv
jecxz
jge
sub
lea
push
xor
insb
sbb
iret
mov
xor
pop
cmc
leave
jge
setl
stos
cs
pop
and
pop
dec
and
push
out
cs
xor
jne
dec
movsl
cmpsb
clc
mov
pop
jp
or
xchg
push
test
push
xor
xor
aas
and
adc
into
dec
fmuls
xlat
sub
sbb
shl
fwait
repz
mov
sbb
leave
bound
jp
popf
aam
loop
mov
or
aaa
jno,pn
lods
or
ja
cld
scas
cld
repz
insb
std
scas
leave
inc
sarb
push
mov
pop
xchg
add
sub
dec
movb
xchg
sub
xchg
sbb
dec
push
orl
outsb
sub
test
into
clc
push
push
and
daa
fcomps
xor
adc
arpl
adc
sub
xor
cs
leave
daa
mov
pop
sbb
lret
xor
push
fcmovnbe
ret
icebp
mov
jmp
pusha
and
xor
pop
add
and
pop
sub
push
insl
es
lea
cltd
ret
pop
pop
imul
adc
loop
xor
jp
sbb
jp
leave
mov
push
mov
fcmovnb
sub
lcall
ret
popa
pop
sub
dec
mov
cwtl
pop
fcoml
xchg
aas
xor
xchg
xrelease
xlat
test
adc
mov
adc
shlb
mov
jecxz
or
inc
aaa
fcmovbe
cmp
stos
shll
inc
clc
pop
sub
dec
fcoms
clc
cmp
xor
les
jge
lahf
mov
fdivrs
adc
out
pop
push
clc
mov
or
inc
push
aad
stos
jbe
xchg
jp
ja
pop
pop
jp
mov
outsl
jne
test
repz
mov
pushl
sbb
shrl
or
and
es
je
out
xor
lods
or
dec
push
dec
and
pusha
hlt
sbb
sub
inc
mov
ds
in
dec
mov
pop
stos
mov
lret
and
xor
pop
jne
xor
gs
xor
lret
inc
dec
pop
ds
movsl
inc
adc
mov
clc
ljmp
push
push
push
sbb
pop
in
adc
xchg
mov
dec
and
mov
and
mov
incl
cs
cmp
repnz
ficoml
sub
aam
in
pop
ret
xchg
dec
out
icebp
jns
dec
xor
xchg
pop
pop
mov
jle
aaa
je
cltd
pop
pop
fnstsw
mov
and
push
push
pop
pop
fstps
or
sbb
mov
das
add
xchg
mov
xchg
cmc
repz
push
jae
movsb
sub
pop
push
jle
sbb
xchg
pop
outsl
mulb
xchg
imul
jne
test
aad
and
incl
mov
xor
inc
femms
stc
ds
bound
lret
fidivs
dec
pop
in
push
popa
mov
subl
push
add
scas
or
popa
and
sub
mov
sbb
in
mov
loopne
xchg
push
psraw
mov
lret
dec
push
mov
add
in
dec
fstpt
cmp
into
mov
lock
xchg
ret
sbb
mov
push
and
inc
pusha
mov
push
sahf
and
test
jmp
push
stc
cwtl
mov
pop
es
dec
cmpsb
mov
test
add
lods
mov
xchg
lods
les
out
mov
mov
mov
cmp
sbb
jg
roll
clc
popl
int3
sti
lret
icebp
das
and
mov
dec
pop
cmpsb
sub
stos
dec
sbbb
test
and
mov
xor
or
fs
inc
insb
stc
hlt
pop
xchg
out
in
mov
mov
mov
stos
cltd
ljmp
push
cmp
push
cmc
mov
dec
data16
dec
add
jmp
cs
addl
jns
out
adc
pop
dec
and
out
lds
inc
fildl
imulb
push
push
sarl
jne
add
movsl
mov
xor
es
adc
ret
push
push
and
cmpsl
fstp
jns
testb
add
add
mov
inc
es
sbb
repz
inc
push
movsb
ss
or
jns
shl
push
icebp
dec
jge
fisubl
mov
ret
cmpsb
in
sbb
mov
ljmp
dec
fmull
mov
fstpt
mov
and
sub
inc
or
push
gs
mov
aaa
mov
inc
push
push
xchg
xor
mov
mov
or
mov
jmp
cmc
sub
mov
mov
push
sbb
roll
fdivs
xchg
sbb
inc
pop
andl
xor
or
xchg
rorb
int3
hlt
adc
add
cmp
push
in
stos
in
add
dec
fldl
repnz
hlt
mov
ss
aad
or
mov
out
mov
cmp
cltd
and
adc
call
out
cli
push
decb
pop
test
sarl
gs
add
or
or
lds
dec
leave
fildll
test
xor
push
cmc
loopne
adc
adcb
mov
push
and
int3
addb
clts
pop
adc
lods
out
data16
fs
imul
jns
xor
sbb
lods
cs
mov
fnsave
dec
cmp
call
jg
add
sbb
icebp
jmp
dec
sbb
dec
jno
jp
xlat
mov
push
xchg
loop
cmp
push
xor
pop
add
add
mov
nop
es
mov
mov
mov
xor
jno
push
lret
inc
leave
jne
fldcw
mov
lea
and
rcr
sahf
pop
cmp
packuswb
ficomps
popa
scas
adc
pushf
push
fldt
mov
mov
xlat
dec
push
movsl
pop
and
mov
xchg
cltd
sub
xchg
lods
jmp
outsb
xchg
ja
sub
mov
call
or
notb
das
or
sub
cmpsl
aas
bound
push
enter
insb
inc
imul
adc
insb
pop
or
cmc
dec
pop
roll
fmull
stos
int3
cmpl
lcall
cli
mov
iret
inc
xchg
push
xor
cmp
rcl
pusha
out
jp
mov
das
sbb
adc
mov
cmp
or
fwait
scas
jbe
mov
scas
inc
lahf
pop
sbb
or
xor
adc
mov
divl
xchg
mov
pushf
push
xchg
ss
adc
push
or
push
lret
insb
add
mov
mov
lods
mov
push
cmpl
shll
jg
cmp
mov
fsubl
adc
out
jmp
call
jmp
ja
into
cmp
mov
lods
xor
sti
pop
adc
sub
push
mov
mov
jns
push
jo
inc
push
adc
icebp
dec
and
xchg
cmp
add
in
int3
inc
pop
sub
xor
sar
mov
je
stos
add
cmp
stos
sbb
xor
xor
fistpl
sub
adc
scas
mov
mov
insb
aas
xchg
xor
shlb
punpcklbw
cmpsl
jge
outsl
lods
jnp
xor
rorb
inc
inc
stos
sub
fidivs
pop
mov
je
xor
mov
inc
pop
jne
sub
mov
cmp
cmpsl
subl
fs
mov
daa
ret
mov
fdivp
pop
rcrb
xchg
mov
inc
push
sti
repnz
push
push
xchg
icebp
je
fbld
mov
pop
mov
or
dec
sti
rolb
mov
cmpsl
mov
lcall
inc
dec
jl
cli
mov
jno
mov
ret
cmp
or
and
push
add
stc
repnz
std
gs
add
cmpsl
nop
push
adcl
dec
sti
xlat
nop
adc
fnstcw
xor
lea
pop
fs
stos
dec
mov
adc
mov
out
int
push
push
mov
fistpll
push
jo
out
dec
cmpsb
dec
out
dec
push
adc
xor
rol
inc
pop
push
jge
dec
inc
xor
pop
mov
jge
shr
or
cwtl
mov
add
push
loop
stc
enter
add
inc
mov
out
sti
cmp
jnp
mov
inc
sbb
loopne
std
adc
scas
pop
add
pop
mov
xchg
out
fdivrp
call
mov
jmp
adc
pop
insb
test
cld
xchg
dec
lret
mov
dec
movsl
fwait
mov
rclb
mov
xchg
mov
rcrb
inc
mov
adc
imul
dec
outsl
stc
mov
nop
lock
push
js
mov
xor
mov
sub
and
pop
lahf
hlt
stos
subl
cmp
push
adc
jb
leave
loopne
movsl
mov
stos
xchg
ficomps
insb
fldcw
test
xchg
insl
or
call
ficompl
ljmp
push
cmpsb
mov
or
iret
out
cmp
sub
pop
loope
xor
fldl
negl
js
jecxz
jb
pop
lods
push
xor
xchg
mov
mov
mov
das
cmp
mov
out
mov
and
xchg
pop
add
ds
mov
jg
dec
sbb
and
dec
or
jg
mov
push
in
add
rorl
push
add
ss
pop
test
test
cmpl
cmc
jne
xor
mov
inc
xor
pop
repz
jns
mov
in
popa
push
adc
clc
out
mov
scas
sbb
jmp
mov
adc
dec
lret
inc
into
xchg
int
xchg
jmp
rorl
or
jl
repz
xor
jmp
out
repnz
push
mov
jecxz
lcall
mov
subb
pop
xor
mov
scas
sub
sti
or
adc
das
cmp
sub
mov
pop
add
test
dec
cld
xor
jmp
arpl
stc
and
dec
adcl
inc
icebp
mov
sbb
imul
push
shrb
pop
in
aad
and
shll
test
scas
jb
sbb
loopne
sbb
cmp
jb
jb
jns
push
xorl
fwait
sbb
ret
or
push
jo
add
jecxz
into
add
mov
xchg
pop
cmpsb
push
dec
jo
dec
push
fwait
adc
mov
jecxz
lahf
loope
mov
inc
cmpsl
or
repnz
shrb
pop
ret
push
sub
mov
cld
gs
not
shll
xor
xchg
leave
xchg
lea
call
push
dec
mov
test
sub
jo
cmp
or
add
fisubrs
mov
sbb
int3
adc
sbb
in
lret
adc
js
lahf
push
out
dec
xchg
push
pushf
frstor
fnstsw
lods
adc
fistpl
and
insb
addr16
scas
push
add
mov
mov
loopne
xor
pop
inc
and
aam
ljmp
inc
fsts
outsb
add
cli
lods
push
cmp
add
dec
or
imul
and
pop
dec
iret
in
cli
sbb
push
pop
test
xchg
mov
pop
ror
push
test
sbb
or
mov
das
pop
dec
mov
xchg
loop
adc
mov
dec
sub
add
lret
sbb
xor
add
xor
sti
lret
jns
dec
mov
mulb
in
xlat
and
in
or
push
mov
or
jmp
daa
cmp
mov
vmulps
out
test
jecxz
jle
jae
popf
or
ret
xchg
fists
test
sbb
jle
or
mov
call
mov
fucomip
rcrl
or
mov
jle
adcb
ds
xor
mov
incl
sub
test
cmpsw
pop
jmp
icebp
aas
ss
lahf
dec
in
cmc
push
or
movsb
cmc
jnp
push
outsl
mov
ror
dec
sti
scas
ljmp
test
sub
mov
test
leave
mov
stos
push
mov
xlat
ja
popa
out
xor
xor
add
aaa
jmp
test
shl
cmpsl
sahf
popa
sub
leave
loope
movsl
push
divb
sbb
sbb
dec
cltd
inc
jnp
ja
or
std
lock
aam
jle
mov
mov
xchg
in
jle
sahf
xor
add
adc
jno
jno
call
clc
movsl
or
jg
mov
xchg
push
ss
xlat
stos
mov
insl
mov
sub
sbb
fs
bound
fdivs
push
xchg
mov
outsb
xchg
stos
jae
adc
inc
jp
js
dec
sbb
mov
sarb
icebp
icebp
lea
and
rcrb
sub
js
pop
mov
dec
fdivrl
dec
cmp
xor
lock
iret
push
xor
mov
push
sti
dec
pop
xchg
stos
movsl
pop
popf
ja
je
pop
sub
pop
cmp
cld
sbb
sub
cmp
xorb
jns
scas
aad
into
mov
and
cwtl
and
jecxz
lock
aad
shl
rclb
hlt
movsb
ffree
fisubl
scas
xchg
mov
in
mov
push
aas
je
dec
rcrl
popf
dec
xor
jg
arpl
fucomi
xor
push
pop
mov
push
out
adc
mov
push
jnp
push
mov
stos
sub
into
inc
in
mov
sub
push
sarl
lahf
lret
jne
or
sti
fisubrs
push
jecxz
pop
cltd
outsb
popf
fisubrl
iret
pop
xchg
ss
out
jecxz
loopne
aas
inc
xor
jg
in
pop
decb
mov
dec
mov
aam
or
fcoms
nop
hlt
dec
subb
add
pop
mov
xchg
call
push
cmpl
sbb
mov
iret
pop
pushf
push
or
repnz
add
std
jp
cli
inc
adc
js
jns
or
jp
mov
xchg
mov
adc
ror
out
ljmp
pop
jle
mov
ds
xor
out
xchg
clc
movsb
movsl
ds
gs
and
in
pushf
sbb
xor
shll
popa
push
mulb
pop
dec
ds
insb
add
mov
cmp
xchg
and
in
sbb
ljmp
push
sub
popa
mov
fsubp
fdivrs
lcall
jge
in
out
js
movsb
dec
clc
rcr
xor
test
cmpsb
addr16
jg
arpl
dec
cltd
insl
in
aam
push
ss
push
and
dec
cmp
pop
out
js
in
xchg
jl
mov
arpl
adc
fstl
add
jecxz
imull
and
sbb
mov
jecxz
call
push
xorl
and
mov
test
mov
shl
std
movsl
icebp
mov
xchg
ljmp
out
push
mov
cmp
and
xor
cwtl
fwait
sbb
mov
cld
daa
test
pop
and
clc
mov
dec
xchg
js
loope
popf
lock
fdivr
fildll
pop
mov
out
shlb
add
iret
xchg
fsubl
xor
push
cmp
add
xchg
mov
mov
mov
adc
fistl
push
jae
outsl
sbb
loop
xchg
xor
fidivs
jecxz
xchg
xchg
xchg
mov
ficompl
sbb
stos
cmc
lds
xchg
cmpsb
dec
ds
mov
lret
rorl
dec
sbb
int
push
in
mov
jns
mov
jnp
dec
in
pop
pop
jp
xchg
nop
pop
fstpl
rcl
jmp
mov
shlb
or
fs
daa
jmp
nop
pop
lea
pop
jb
daa
push
sub
xor
cmp
lcall
push
dec
push
fwait
push
mov
insb
mov
cmp
pop
adc
test
xchg
in
xor
or
enter
fisubl
out
jmp
in
stos
jg
xchg
imull
mov
inc
sti
scas
and
and
not
rcll
dec
fstpt
sbb
jae
adc
push
or
hlt
mov
out
mov
fnstenv
repz
push
loop
or
sub
inc
xchg
pop
lahf
lahf
push
adc
adc
xchg
jno
pop
repnz
aaa
fbstp
adc
push
inc
nop
mov
js
popf
int
out
popf
call
dec
pop
dec
sub
mov
push
or
sbb
into
gs
push
push
testl
pushf
jp
enter
mov
sbb
cmpsb
pop
pop
ds
adc
outsl
cltd
test
jne
repz
mov
pop
mov
mov
shl
and
mov
and
loopne
dec
flds
jge
mov
jae
sbb
xor
jecxz
in
mov
lods
pop
pushf
lods
xor
in
push
dec
popf
cltd
inc
jp
jb
sub
and
sub
cmp
or
sbb
int
push
or
hlt
push
aad
dec
rcl
push
pop
cli
les
gs
mov
mov
mov
jge
jo
cld
scas
pop
push
cld
lcall
adc
inc
add
cmpsl
mov
jp
loopew
jg
mov
pop
inc
cltd
add
mov
jg
int3
jo
and
cwtl
push
clc
cs
inc
fwait
mov
sbb
fwait
mov
pop
test
dec
data16
fnstsw
sub
mov
add
fadds
sbb
movsb
xor
mov
dec
arpl
push
push
dec
outsl
pushl
mov
sahf
filds
mov
mov
outsb
mov
xor
mov
into
insb
xorb
aad
lea
inc
addb
jle
cwtl
out
aam
sbb
pop
push
xorl
mov
push
roll
dec
fnstsw
into
fwait
sbb
loopne
dec
movb
cltd
cmp
in
test
call
sbb
sti
push
push
lods
or
les
mov
arpl
mov
enter
dec
pop
pop
aad
pushf
xor
scas
xor
and
movsl
in
out
jnp
jns
out
test
push
xchg
jmp
cld
imul
inc
stos
scas
sbb
int3
push
xchg
pop
push
xchg
subb
sbb
hlt
setno
pop
push
push
ja
repnz
jno
jb
sub
push
dec
call
in
lods
push
test
addr16
fdivrl
fsts
loop
mov
push
cld
dec
fiaddl
fbld
negb
push
jb
in
dec
adc
mov
in
insl
mov
inc
js
push
dec
insb
popf
scas
leave
and
inc
insl
loope
or
pop
push
and
bound
lea
out
mov
stos
mov
daa
pop
mov
pop
or
aas
mov
inc
call
pop
pushf
mov
leave
or
insb
imul
imul
in
movsl
push
cwtl
into
gs
sbb
faddl
fldcw
scas
hlt
pop
lcall
stos
rcll
mov
push
mov
int3
xlat
jo
push
int3
outsb
fldenv
shlb
xor
lret
cmp
cltd
rcrl
mov
mov
js
adc
mov
aaa
pop
cmp
mov
cwtl
or
popa
sub
push
cli
imull
sbb
imul
push
mov
test
dec
cli
cmp
pop
in
daa
pushf
insl
pop
loopne
cltd
enter
jp
sub
xor
pusha
cmp
jp
sti
dec
dec
push
imul
adc
sbb
stos
mov
aas
mov
push
mov
fdivrs
subl
or
push
and
arpl
xor
dec
es
mov
cmpsb
nop
int3
add
in
inc
bnd
xchg
or
fisubrl
testl
adc
dec
pop
nop
xchg
cmc
mov
mov
sub
test
jp
xchg
mov
aaa
sti
dec
test
loopne
or
add
and
sub
or
out
jg
sub
loope
pop
dec
in
enter
js
scas
mov
inc
jns
ret
xor
stos
divl
pop
iret
add
into
mov
popa
jp
fxch
insl
subb
int
cmpsl
fidivrl
rolb
stos
sbb
inc
xor
mov
jp
adc
push
sub
cmp
ror
inc
hlt
pop
jecxz
mov
pop
sbb
mov
xchg
and
inc
pop
pushf
mov
shrb
in
sbb
ret
mov
xchg
out
out
inc
push
out
in
cli
pushf
stos
loop
fsubp
mov
pusha
or
loopne
sub
jns
or
push
pop
cld
loope
enter
add
or
push
ret
cltd
and
jne
adc
pop
icebp
and
adc
dec
ss
ret
sbb
jg
jnp
push
lret
es
loope
outsb
add
dec
jne
test
les
dec
cmpsb
daa
pop
or
add
sub
add
xlat
in
pop
clc
repnz
loopne
ret
and
mov
jg
outsl
jle
jp
lods
sub
arpl
lcall
imul
jle
jnp
les
mov
jnp
sarl
aas
out
jnp
push
loop
cs
stc
xchg
pusha
inc
jno
imul
mov
inc
or
and
lret
leave
push
hlt
ret
in
pop
adc
dec
xchg
or
xor
pop
jecxz
push
pop
cltd
fildll
js
fistpll
outsb
aam
pop
sbb
int3
repz
pop
bound
out
mov
or
nop
mov
test
sbb
sbb
ret
mov
mov
xchg
add
fs
arpl
fmuls
sub
cmp
cmp
lret
mov
mov
test
add
popa
int3
scas
dec
adc
inc
outsl
in
outsb
pusha
sub
subl
mov
xor
jg
or
mov
cmp
mov
pushf
sub
bswap
icebp
in
fstp
daa
inc
xor
push
sbb
cwtl
dec
push
sbb
inc
xchg
data16
rolb
lea
pop
ljmp
lds
mov
andl
xchg
rcrb
and
pushf
dec
push
into
lea
mov
add
cmc
adc
dec
pop
test
ss
pop
in
ds
xchg
push
mov
fldt
jns
int
jecxz
movq
pop
bound
xchg
jl
test
and
dec
add
outsb
adcl
lret
mov
inc
das
sub
cs
xor
jnp
ret
test
repnz
cs
add
inc
adc
js
sbb
lods
cmp
inc
gs
in
cmpb
sub
es
pusha
out
mov
idivb
jae
loopne
push
mov
cmpsl
cmc
popf
nop
into
fdivs
pop
xchg
push
mov
out
mov
in
es
rclb
push
movsb
imul
xchg
lret
mov
xchg
test
jne
jo
movsb
sub
cmp
or
scas
sub
test
sub
and
xlat
lahf
push
jg
pop
lcall
inc
jle
jno
daa
pusha
lods
xchg
jbe
sbb
stos
mov
dec
sbb
cltd
loop
movsb
add
and
push
dec
movhps
or
pop
push
out
xchg
xor
fs
lods
jecxz
ljmp
fnstcw
fstpt
testl
pop
stc
jae
mov
mov
dec
xchg
push
dec
push
ds
and
notb
das
movsb
movsb
int
ja
mov
mov
lds
arpl
xchg
fwait
sub
add
inc
sub
mov
mov
js
push
out
and
arpl
lahf
pusha
xlat
push
lret
xchg
xchg
jae
stc
pop
pushl
cmp
inc
pop
add
mov
sbb
jns
punpcklwd
jle
sbb
push
js
push
mov
das
cmp
cs
xchg
loope
push
mov
adc
or
mov
out
cwtl
popf
test
mov
dec
scas
in
cmp
jns
or
mov
pop
push
adc
adc
stos
rcrb
push
lods
pop
push
pop
mov
fwait
movsl
mov
cmp
ljmp
cmp
cltd
js
cld
lds
insl
outsl
mov
xchg
xor
ja
cltd
pop
jne
dec
in
imul
aas
fsubrs
pop
cmc
pop
shrb
jo
mov
adc
push
jnp
or
pop
jge
leave
inc
leave
mov
sub
ljmp
sbb
fcoml
test
in
mov
scas
stos
xor
adc
std
outsl
xor
sbb
out
mov
icebp
mov
mov
dec
jno
sti
jb
mov
mov
in
pop
pop
push
xor
imul
add
outsb
les
xor
xchg
xlat
inc
adc
and
adc
sub
inc
or
sbb
mov
or
jns
andl
lahf
in
mov
add
pop
insl
xor
inc
cmp
and
adc
out
jnp
mov
xor
adc
lods
push
adc
mov
test
aas
les
sub
je
jg
lret
add
les
mov
xchg
or
and
inc
and
inc
cli
xor
inc
xchg
lea
or
scas
sub
jae
mov
jmp
stos
pop
dec
adc
mov
and
mov
rcll
cld
adc
hlt
jne
outsl
jp
push
push
sbb
mov
decl
inc
arpl
inc
cmp
fnsave
incl
xor
xchg
clc
idivl
xor
jg
jne
xor
in
call
sbb
push
mov
and
add
int3
and
or
xchg
xor
stos
adc
call
lret
xor
and
dec
nop
arpl
int
rcl
xor
outsl
xor
mov
out
bound
outsl
mov
leave
cltd
xchg
cmp
or
movsb
jne
dec
scas
lds
pop
pavgb
jmp
inc
fstl
push
xor
pusha
or
out
add
sub
xor
sub
fxch
push
fcoms
sbb
mov
arpl
push
adc
test
xor
xchg
outsb
mov
xchg
sti
sbb
xor
push
pop
cmp
xchg
xchg
mov
jp
lea
sub
push
jecxz
push
ret
jne
ret
xchg
pop
mov
jo
and
and
hlt
test
cmp
mov
mov
dec
sbb
ljmp
fcmovnbe
gs
lret
insb
das
repnz
mov
dec
mov
fst
and
and
xchg
jle
out
addr16
shr
stc
mov
stos
rorl
mov
lock
or
pop
fistps
popa
push
lret
test
cli
bound
orb
xor
gs
lods
adc
das
loope
stos
cmp
ja
push
repnz
jmp
les
imul
dec
jb
ss
lds
or
and
movsb
push
insb
adc
mov
into
mov
cld
adc
push
aam
pop
pop
sub
adc
out
mov
jmp
inc
adc
dec
fwait
pusha
fnstcw
gs
mov
or
adc
sti
sub
cmp
cmp
push
jg
loop
sbb
dec
xlat
adc
or
repnz
push
mov
dec
inc
adc
mov
ret
cltd
inc
fdivrl
cmp
out
push
loope
dec
js
mov
push
incb
out
push
or
cltd
sbb
lret
adc
or
aam
test
dec
adc
and
pusha
xchg
scas
out
or
clc
insb
xor
fnstcw
adc
jecxz
lea
sbb
jge
js
and
xor
cmp
jp
pop
mov
push
mov
test
sahf
pop
mov
push
inc
lcall
dec
adc
or
pop
addr16
mov
inc
mov
pop
mov
jbe
icebp
or
xor
mov
xchg
scas
pop
sub
testl
je
mov
and
xor
inc
test
stos
test
mov
pop
fistps
lock
add
test
mov
inc
xor
rcl
inc
cmp
shlb
in
push
mov
cmp
xlat
and
fs
out
cmp
jb
xchg
pop
jmp
lock
or
pop
in
lahf
mov
inc
dec
mov
inc
lds
mov
xlat
in
push
iret
sbb
add
cmp
idiv
sub
stc
mov
loop
cmpsb
xchg
sbb
orb
jle
lods
mov
xlat
or
shlb
dec
xor
ret
fs
jmp
sub
aaa
dec
mov
mov
pop
inc
pop
test
js
push
xchg
jmp
lret
movsl
mov
inc
cli
or
push
cmp
mov
mov
xchg
mov
inc
xor
add
aaa
loopne
enter
inc
jp
incl
stos
bound
subb
das
repz
lods
mov
fisttpll
xor
push
pop
es
imul
das
cmpsb
and
cli
push
mov
adc
sbb
pop
pushf
sub
jecxz
int
in
pop
outsb
stos
xchg
movsl
clc
pop
and
not
xor
sub
addr16
pop
jb
std
fmuls
pop
repz
ja
xchg
hlt
lods
mov
sub
push
dec
subb
shrb
lahf
mov
clc
push
loopne
cmp
out
loop
ss
pop
mov
fidivrs
rcll
mov
ljmp
add
xchg
leave
in
mov
cmp
adc
or
pop
add
adc
cltd
in
clc
mov
cli
jne
dec
fstpt
mov
daa
jno
adc
pop
cmc
pop
pusha
and
cmp
cmp
add
xor
cli
mov
loope
movsb
inc
adc
push
idiv
adc
pop
iret
xor
sbb
cltd
jmp
lcall
std
rcll
xchg
aaa
sbbl
test
sti
pop
pop
out
xor
cltd
mov
loope
mov
cmpsl
pop
imul
dec
gs
sbb
mov
xchg
adc
jmp
gs
loope
adc
lds
push
cmp
bound
out
insl
ds
mull
dec
lods
scas
out
aad
stc
outsl
arpl
push
out
add
sarl
or
mov
out
sbb
lds
insl
gs
sub
es
in
xchg
lret
and
jge
cmp
ss
outsl
js
fmull
inc
test
shrb
and
cmc
mov
data16
dec
push
popa
xor
in
xor
xor
xchg
lock
imul
cs
nop
das
jne
mov
cmp
jp
lret
dec
imul
lea
std
mov
mov
test
pop
andl
insl
scas
lret
pushf
inc
ss
rcl
daa
test
push
fcomip
std
pop
dec
leave
stos
and
push
fstl
test
andb
aas
inc
pop
xlat
and
mov
addr16
scas
inc
aad
outsb
fidivrl
jl
jge
adc
aam
lods
push
ja
ret
xchg
daa
fnstsw
cli
mov
test
mov
test
dec
sbb
xlat
sarl
mov
push
loope
addr16
out
ss
mov
fsincos
mov
adc
orb
call
in
xchg
dec
int3
sub
push
mov
jbe
xchg
js
aam
or
lods
inc
sub
lret
in
gs
js
mov
jge
insb
jo
cmp
and
test
cltd
shlb
je
out
adc
mov
xchg
pop
mov
dec
mov
add
pop
jmp
ds
and
sbb
popf
sbb
xchg
fsubrl
outsl
aam
xor
xchg
sbb
and
fisttpll
xchg
subl
ljmp
out
orl
ret
push
out
aas
js
push
xchg
nop
jae
pushf
pop
xor
and
pop
pop
ret
cmp
bound
pop
mov
cmp
xchg
xor
jo
mov
mov
repz
cmp
cmp
and
ds
mov
jge
dec
mov
push
movsl
add
sti
pop
in
iret
ljmp
xchg
outsl
rcll
fildll
stc
add
into
loopne
testb
addr16
adc
les
les
mov
pushf
in
cmpsl
sub
xchg
cwtl
xor
pop
xor
das
sub
mov
xchg
loope
pop
stos
or
shll
dec
push
push
mov
mov
sub
push
and
jle
fwait
aam
cmp
jle
shr
movsb
sbb
out
adc
pop
and
sbb
jl
int3
in
cmpsb
xchg
movsb
mov
sbb
pusha
xor
or
inc
hlt
sbb
push
out
xor
into
sbb
and
pop
mul
wbinvd
lea
dec
and
sub
lds
imul
int3
ljmp
cmp
sbb
ret
repnz
repz
jne
jnp
popa
push
and
pop
dec
cmc
add
xchg
mov
in
adc
je
inc
adc
ljmp
jae
mov
addr16
fstpl
inc
or
jl
or
mov
cs
push
xorb
aad
add
aas
int3
xchg
mov
dec
leave
insl
sbb
add
jno
int3
pop
imul
mov
pop
cs
and
xchg
mov
xchg
cmp
rep
ret
imulb
lahf
sub
insb
sahf
leave
mov
rcll
cmp
cmpsl
dec
cmc
leave
jns
mov
inc
adc
in
add
mov
lcall
pop
lahf
std
pop
arpl
mov
ficoms
sub
jmp
cmpsl
and
pop
ret
jge
out
xor
clc
sbb
push
sub
mov
inc
aam
lds
pushf
std
fisubrl
test
mov
les
fisubl
gs
mov
cmp
adc
aad
lret
bound
dec
in
jo
mov
das
mov
cmp
adc
or
inc
clc
pop
mov
lahf
shll
cld
xorl
in
jnp
and
movlps
into
mov
push
clc
sub
push
shl
or
and
mov
sub
jo
enter
imul
hlt
mov
adc
and
in
sbb
ljmp
inc
xor
push
lods
pusha
sub
push
ja
lret
cld
adc
pop
pushf
or
sbb
mull
cmp
and
movsb
lods
scas
xor
iret
mov
cltd
inc
nop
mov
mov
out
loopne
sbb
js
inc
dec
incb
add
dec
push
test
xor
je
fsts
out
xchg
outsl
xor
idivb
das
inc
nop
push
fdivrs
test
xchg
test
mov
iret
pop
lock
mulb
hlt
xchg
loopne
cmp
cs
out
outsb
stc
scas
adc
pop
cmpsb
je
lods
loope
cmp
mov
movsb
inc
pop
sub
cmp
insl
push
insl
jne
mov
lahf
inc
sbb
sbb
rol
lret
cltd
int
arpl
push
test
int3
negb
cmpsb
mov
or
sbb
leave
repz
jae
mov
lret
dec
adc
rorl
mov
aad
fsubs
and
out
jo
pop
inc
lea
cmp
mov
sub
mov
aaa
shl
mov
cmpsl
and
ds
pop
ss
sub
addb
sahf
adc
shll
insb
cmp
inc
data16
gs
test
out
or
dec
popa
pop
iret
test
lcall
add
movsl
mull
jnp
loope
and
ja
in
hlt
ja
rorb
jp
mov
xchg
add
lret
sbb
push
push
mov
imul
mov
aas
mov
movsb
jl
shl
or
idivl
jp
push
adc
mov
popa
dec
test
mov
or
repz
ficomps
add
out
or
or
push
popf
mov
int
dec
sub
test
inc
mov
cltd
push
sub
or
sub
xchg
jae
iret
mov
cmp
ret
jp
jbe
jp
mov
popa
fwait
push
bound
jg
dec
sub
mov
cs
xchg
xlat
xchg
adc
outsb
imul
jnp
jnp
sahf
dec
inc
add
psrlw
cmp
insl
or
lds
mov
imul
ja
aas
push
cld
push
sub
jg
and
pop
push
sbb
in
test
lods
fbld
cltd
stc
in
xchg
jg
jmp
insl
aaa
or
inc
sub
jmp
leave
data16
jmp
lcall
xchg
adc
hlt
adc
jp
mov
leave
daa
mov
xchg
and
mov
adc
mov
orb
inc
adcb
push
lret
jbe
lock
sbb
add
rcrl
inc
mov
push
cwtl
stos
dec
jns
xor
add
xchg
les
mov
pop
adc
push
insl
jg
pop
popa
and
call
and
xchg
dec
jg
movsl
dec
and
das
je
fcmovnbe
ficomps
ss
xor
test
les
stos
push
jmp
shrb
ljmp
ss
and
testb
out
mov
cmovle
mov
scas
inc
out
mov
push
cltd
inc
test
popa
push
mov
sub
inc
jge
sub
lods
sub
fildll
push
rorl
repz
sub
pop
sbb
adc
cmp
lds
out
sbb
pavgw
cmp
test
pushf
insb
and
sub
dec
dec
and
out
ds
aas
mov
cs
jmp
shl
outsl
mov
int3
cmp
in
cmp
inc
xor
sbb
and
mov
outsl
xor
rorb
lea
out
xor
adc
cmc
cmp
push
sub
fsts
cmp
insb
mov
js
pop
and
fisubrs
dec
insl
lret
sub
in
lock
imul
mov
cmp
test
sub
jle
int
add
rcl
inc
shrb
insb
push
mov
xchg
lods
dec
pop
cmp
mov
mov
inc
push
rorb
jle
int
in
leave
mov
add
stos
and
push
arpl
pop
mov
int
cltd
pop
imul
xchg
cmpsb
xchg
cli
das
sbb
sar
inc
popf
add
xor
pop
jnp
shrb
fs
test
xchg
ds
roll
inc
xchg
lea
ljmp
outsb
loope
cmp
lret
lea
ret
xchg
sbb
xor
sub
mov
lods
in
popf
leave
pop
in
daa
mov
in
outsl
dec
push
movsb
fcompl
adc
sub
cmpsl
lea
jb
insl
test
test
sbb
push
imull
test
and
cmpsb
sti
cltd
out
push
aas
push
fwait
bound
pusha
leave
or
xorb
xchg
popl
aaa
add
sahf
dec
pushw
fwait
dec
lea
jle
fistpll
dec
cmp
cmp
in
stos
add
popa
xor
jecxz
repnz
sub
pop
cmpsl
sbb
cmp
sub
add
push
out
xchg
stos
sbb
cmc
int3
enter
xchg
jmp
gs
add
addr16
or
js
decl
jge
fwait
mov
pop
shlb
out
push
cmp
inc
push
jle
lods
adc
xchg
lock
adc
push
cmp
in
stc
cmp
mov
loopne
push
dec
fadd
ss
pop
sbb
jo
ret
push
push
pop
roll
fbld
in
ja
lret
fstl
pop
movsb
aas
insl
sahf
push
xor
push
gs
loopne
pop
fisttps
subb
aam
xlat
movd
fldcw
test
xchg
jnp
inc
push
rcl
cmc
jns
insb
or
stos
outsb
popa
movsl
out
outsl
leave
dec
frstor
sahf
lea
mov
or
xchg
fadds
xchg
push
dec
mov
push
sub
mov
out
jl
xorb
pop
mul
inc
push
test
mov
lret
popf
in
inc
push
inc
or
jnp
test
shlb
mov
mov
rcrl
inc
and
cs
aaa
xchg
test
cmpsb
dec
fidivs
inc
rorb
inc
xchg
ret
mov
xor
sbbl
push
cmp
das
jecxz
add
outsl
xchg
movsl
push
add
pop
orl
cmp
xor
push
cld
in
mov
repz
xchg
push
int
pop
push
fnstcw
sbb
int
subl
jno
or
cmp
stos
sub
test
addb
arpl
or
in
cmp
or
sbb
or
pop
adc
movsb
cmpsb
out
imul
in
dec
sbb
data16
add
inc
jmp
and
ja
cli
aam
cltd
and
and
ficoml
lret
clc
lea
sbb
and
add
pop
ds
loopne
push
add
pushf
movsb
and
sub
imulb
pushf
sti
mov
sub
int3
sbb
repz
sbb
dec
jp
data16
in
out
hlt
out
pop
and
add
pusha
push
pop
mov
bound
and
test
add
xor
add
out
nop
mov
cmp
test
pop
iret
xchg
add
and
add
inc
mov
mov
push
jecxz
sbb
js
decb
xor
mov
xor
jg
mov
jno
jl
fistps
sbb
add
test
xchg
pop
hlt
scas
loope
jnp
dec
inc
int
xchg
outsl
mov
pushf
aas
daa
mov
call
mov
cmpsl
sub
movsl
jg
cmp
ss
ret
push
jmp
shll
adc
imul
test
push
pop
or
stc
rcl
xchg
lcall
and
mov
scas
test
aas
ja
mov
pop
mov
dec
imul
xchg
pop
xor
adc
add
xchg
std
xor
ret
and
pop
adc
jo
mov
sub
mov
or
dec
or
lret
jae
lret
push
or
out
or
add
loop
sub
xchg
sti
sub
xchg
lds
sub
lahf
fwait
inc
call
inc
push
lahf
pusha
jo
insb
and
push
inc
mov
les
mov
jp
jmp
ficomps
test
into
cmp
loopne
xchg
mov
adc
ror
pop
mov
sbbb
push
push
mov
mov
shrl
test
test
cld
adc
mov
add
les
call
mov
cltd
rolb
lea
in
or
les
push
adc
out
pop
mov
sbb
inc
cli
cmp
sub
es
dec
or
ja
pop
mov
insb
xor
repnz
pusha
mov
inc
insb
lcall
mov
clc
leave
out
push
sub
add
cmpsl
in
sub
jmp
mov
inc
push
dec
inc
sahf
dec
jmp
in
in
mov
cmpsb
das
inc
sub
loop
mov
adc
subl
mov
xor
add
jge
test
xor
pop
xchg
sbb
repnz
setp
gs
outsl
jmp
in
adc
or
jg
sti
out
repnz
aam
aaa
jo
push
add
inc
sti
mov
mov
xchg
test
out
push
or
jge
and
add
mov
ss
mov
cmpsl
and
mov
push
sbb
enter
fs
icebp
faddl
fdiv
mov
ljmp
mov
clc
mov
clc
dec
aaa
arpl
sub
fimull
jp,pt
pop
and
jl
pop
cwtl
sbb
sysexit
or
push
pop
push
and
add
rorl
sbb
enter
rcrb
and
aad
jne
jno
lods
ljmp
push
jno
add
jo
sti
mov
adc
xor
adc
aaa
push
jmp
test
loopne
es
inc
pop
rcrl
lock
in
dec
pop
ds
cmp
and
cmp
jae
dec
cmp
inc
nop
push
data16
insb
lahf
sub
jmp
enter
mov
leave
sub
add
mov
dec
repz
sbb
add
movsl
sbb
into
je
push
outsl
xchg
pop
aas
and
jno
sbb
push
and
icebp
and
and
cmpxchg
jmp
fisttps
inc
daa
jae
cmp
xor
pop
add
dec
mov
pushf
subb
outsl
cmp
pop
xchg
sbb
pop
dec
rolb
shrb
cltd
mov
idivb
xorb
mov
je
outsb
xchg
pushf
int
cmpsb
cmpl
cli
fsub
mov
fcomps
jmp
lret
or
popa
stc
adc
cmp
mov
out
and
jge
aaa
mov
enter
bound
sub
add
aam
add
sbb
repz
outsb
push
pusha
sub
out
mov
cmp
cmp
push
pusha
sub
pop
and
mov
jg
xchg
out
inc
rcll
and
in
in
sub
mov
ret
jnp
out
mov
stc
test
sahf
loope
hlt
lahf
push
mov
mov
out
out
dec
adc
sbb
adc
out
ljmp
in
jb
loope
jge
test
mov
mov
xchg
inc
push
or
mov
sbb
adc
push
adc
aaa
fdivrl
popf
xor
in
pop
enter
lret
sub
andl
sub
jnp
addr16
testl
xor
imul
sub
sub
jo
xor
sub
mov
out
loop
lret
stc
adc
xchg
xchg
lods
fs
fs
add
add
xchg
je
and
mov
mov
mov
jb
movsl
test
push
add
add
push
imul
mov
mov
clc
jmp
call
inc
jg
push
and
stc
data16
test
inc
xchg
adc
enter
mov
fs
popw
aaa
mov
ret
insl
sub
jo
adc
cmc
mov
sub
xchg
jb
std
out
stc
lea
in
mov
adc
xor
cmp
popf
and
xor
movsb
cmp
lret
or
add
adcl
pusha
cmc
dec
lods
insl
jno
aad
xchg
outsb
dec
cs
lahf
cmp
std
test
and
int
decl
mov
and
jmp
adc
sub
shrb
test
lea
dec
cli
push
insl
test
fbstp
pop
push
xchg
mov
pushf
inc
imulb
in
out
cmp
mov
clc
int3
and
jge
rcr
inc
daa
adc
shl
test
hlt
inc
mov
fstpl
shr
mov
and
out
jle
mov
jno
stc
fnstcw
int3
aas
sbb
jno
add
ret
pushf
enter
sub
test
and
in
or
push
cmpsl
jo
out
pop
mov
push
daa
sbb
cmp
mov
add
cwtl
cmp
subl
mov
in
pop
in
int
sbb
dec
push
jg
sub
xchg
cmp
andps
idivb
stos
rcrb
mov
dec
mov
sahf
xchg
sbb
jp
repnz
mov
fidivl
mov
ja
xchg
cmc
push
testl
pop
pop
aam
inc
lds
subb
push
dec
lret
popf
mov
xor
rcr
ds
fmulp
mov
push
movsb
pop
and
outsl
and
or
ret
jno
lods
add
pusha
icebp
mov
adc
sbbb
lods
and
adc
jg
jns
lods
stos
jbe
sti
mov
insl
cmpsl
adc
pop
push
or
fcmovnbe
and
lds
rcll
xor
mov
icebp
inc
ljmp
in
push
mov
push
in
test
mov
mov
int3
dec
addb
sbb
jg
repz
mov
and
adc
sub
test
stos
test
and
add
cmp
ds
pop
or
cli
loope
or
dec
test
inc
loopne
fucomi
push
jo
jl
pop
push
int
ret
cs
outsb
js
mov
imul
mov
push
popa
jbe
xor
lea
mov
cmp
bnd
inc
push
dec
push
fcomps
into
lock
aaa
negl
or
movsl
ss
xor
mov
mov
cmc
adc
mov
pop
cmpsb
imul
mov
int
push
or
shr
repz
ret
mov
jmp
mov
iret
pop
rorl
mov
ja
pop
dec
iret
mull
mov
loopne
imul
inc
cltd
shlb
sbb
aas
mov
enter
mov
nop
xchg
mov
out
ss
enter
pop
inc
movsl
je
rcrl
je
je
mov
test
cmp
xor
imul
add
pop
mov
dec
mov
bound
lret
jmp
out
push
ja
dec
pusha
stc
stos
shlb
int
out
fadd
xchg
test
das
dec
idivl
dec
scas
mov
mov
sbb
into
scas
mov
jg
add
xchg
sub
add
or
xchg
stos
clc
out
push
and
adc
leave
imul
movsb
xor
andb
add
enter
nop
cltd
js
mov
out
add
push
mov
jp
cmpsl
pop
dec
cmp
and
cltd
xchg
pop
out
cld
je
or
lds
inc
insl
hlt
inc
aas
std
shrl
stc
sbb
mov
fwait
mov
mov
sbb
jecxz
xlat
add
jmp
mov
fcomp
adcl
addb
jno
stos
popf
repz
mov
xor
cmp
in
mov
out
ret
jecxz
stos
js
cmc
loop
out
push
adc
pusha
dec
mov
aaa
ljmp
mov
stos
test
mov
adc
and
stos
mov
mov
rorb
dec
xchg
mov
nop
add
dec
repnz
int
lods
pop
xchg
fcomps
lcall
push
outsl
mov
div
inc
ljmp
je
push
or
stos
pop
call
hlt
mov
test
pop
scas
test
inc
xor
pop
add
pop
and
add
mov
pop
cmpsl
pushf
repz
inc
fiaddl
jns
xor
pop
cmp
ljmp
outsl
sahf
inc
add
shr
rcr
popa
dec
pop
dec
shll
jmp
push
jmp
mov
push
outsl
jle
out
in
orl
int
adc
cmp
stos
movsl
sarb
sbb
loope
cmpsl
fsubrl
cmp
mov
mov
arpl
inc
mov
cli
inc
fcmovnu
jb
jbe
jge
fisubs
pop
lcall
test
mov
adc
in
pop
movsb
inc
inc
dec
ds
cmp
rclb
scas
repnz
pop
sub
out
push
lret
or
push
xor
loope
js
fidivl
fs
and
cmp
push
fwait
scas
stc
add
negb
pop
repnz
popa
push
fldcw
lret
ja
cli
dec
dec
leave
lret
pop
mov
inc
mov
xchg
mov
push
ds
jae
loop
stos
adc
cli
xchg
ret
mov
xchg
popf
cvtps2pd
xchg
add
int
sbb
lods
cmp
sub
push
mov
daa
outsl
dec
inc
leave
or
sub
es
insl
icebp
jmp
movsl
sub
sbb
xor
push
enter
ret
cld
movsb
mov
ljmp
inc
adc
push
adc
add
outsb
loop
call
sti
out
pop
xor
pop
jg
sbb
shr
into
cmp
cltd
cmp
gs
mov
or
aad
dec
pop
in
and
insl
and
dec
sbb
and
cmp
sbb
lods
push
xlat
or
gs
push
int
jmp
std
not
aam
sbb
jecxz
xchg
xchg
cld
insl
fcomp
pop
shrb
cmpsl
lock
mov
and
adc
lahf
shrl
lret
push
loopne
in
test
add
les
ds
push
inc
mov
push
imulb
push
push
xchg
xor
loop
outsb
adc
repz
imul
sarb
es
sub
cs
jb
xchg
jae
adc
das
add
inc
sbb
popf
jb
pop
aas
push
or
and
mov
add
loope
neg
cli
or
and
fucom
add
in
jecxz
cwtl
cli
adc
in
les
pop
sbb
mov
fcmovnb
jno
lds
or
insw
aam
cmp
shr
pop
push
mov
jg
inc
cld
mov
scas
stos
ret
cmp
fucomp
in
je
xor
shl
adc
mov
cmp
and
mov
lods
pop
mov
sarb
clc
inc
mov
rdpmc
mov
stc
or
and
jae
imul
push
jb
in
test
fldt
jecxz
xor
insl
mov
in
inc
or
sub
iret
hlt
pusha
jne
push
xor
ret
pop
dec
xlat
test
stos
mov
test
jb
imul
jno
dec
out
push
jns
jne
and
aad
je
lret
fdivp
gs
iret
mov
push
in
sbb
adc
push
data16
aas
loop
das
xchg
mov
pop
enter
sbb
pop
enter
leave
mov
ffreep
lret
jae
and
xchg
leave
imul
cmpsl
pop
je
fsubl
jne
xorl
ljmp
and
mov
mov
inc
add
es
out
std
popa
shrl
int3
psubsb
repz
fiaddl
push
pop
inc
sarl
cwtl
inc
aam
cwtl
test
sbb
dec
add
rol
sahf
push
pop
ss
subl
jae
xchg
subl
add
aas
fdivl
cmpl
pop
jns
rcrb
mov
hlt
out
pop
mov
mov
jg
xor
orl
mov
xchg
add
mov
dec
shlb
es
xchg
rcll
ds
ja
and
xor
mov
movsl
ja
xor
popf
scas
frstor
stc
lahf
push
xor
mov
mov
mov
ret
and
int3
jp
pop
and
pushf
dec
int3
pop
cmp
loope
mov
insl
dec
add
insl
lret
mov
loop
xorl
sarb
cmp
sub
jle
in
or
in
ja
daa
cmp
out
mov
les
push
mov
call
loope
cmovg
xor
icebp
sbb
mov
cmp
jecxz
nop
xchg
das
cs
fneni(8087
fdivp
fxch
ss
aad
or
dec
and
and
nop
pop
mov
lods
and
mov
mov
lods
in
sub
mov
outsb
loop
pop
dec
mov
ja
jmp
cwtl
and
sar
mov
test
fst
mov
shrl
xor
mov
data16
movsb
popf
shll
ja
movsb
cmc
scas
ja
inc
inc
daa
ret
aam
xor
mov
adc
dec
aam
mov
outsb
add
mov
mov
xorb
xlat
jo
and
fmull
enter
sbb
dec
and
shrl
jns
pop
or
test
xchg
aad
stc
popf
daa
adc
sti
sar
add
inc
push
lcall
xor
in
stc
push
jae
xchg
cwtl
out
test
sbb
xchg
sub
rclb
cmpsl
xchg
mov
icebp
xor
pop
lret
pop
test
sbbl
inc
jbe
negl
mov
pushf
outsb
sbb
lods
in
lods
jp
out
loopne
mov
sub
lock
int
popf
test
add
out
push
mov
jne
dec
das
mov
pusha
sub
xchg
fidivl
aam
lock
mov
sub
push
jg
int
push
bound
fiadds
add
cmp
push
or
adc
add
sahf
fcomip
insb
dec
inc
test
ficompl
movsl
xchg
xor
in
and
lahf
add
jp
hlt
inc
test
das
enter
jmp
repnz
xlat
pop
mov
ret
lcall
ljmp
pop
jns
xlat
bound
pop
out
cli
movsl
and
mov
or
mov
out
dec
sarb
mov
xchg
and
push
cmp
pop
rcr
add
shl
scas
shl
in
mov
or
cld
fnstsw
jb
outsb
jmp
in
or
xor
adc
adc
in
ficompl
mov
fsubs
jae
sahf
push
jae
sbb
xchg
cmpsl
and
nop
ss
dec
andl
stc
jecxz
cmp
inc
cmp
inc
sti
or
pop
sbb
adc
add
push
mov
incl
and
mov
popa
xchg
addr16
insb
data16
sub
xor
mov
hlt
and
arpl
inc
xchg
jnp
xor
jge
adc
and
outsl
mov
hlt
sub
lds
outsl
and
mov
sbb
add
test
add
jae
inc
popf
inc
push
gs
xlat
mov
hlt
ljmp
lea
pop
adc
xchg
dec
add
aaa
popaw
sub
cmp
jne
lret
fwait
pop
jbe
mov
adc
xor
jns
aas
mov
jecxz
aaa
sub
adc
cli
and
xchg
cmp
push
mov
imul
outsb
dec
inc
adc
pop
or
xor
mov
filds
sbb
sbb
shll
sbb
test
mulb
movsb
xor
repnz
dec
sub
mov
xor
inc
aaa
int3
push
lods
push
jbe
test
lret
ret
push
scas
ss
movsb
and
cmp
mov
outsl
insl
jmp
cmpsl
cmpl
mov
std
shl
inc
in
idivl
scas
mov
and
out
ds
pop
inc
xchg
aad
xor
xchg
fmuls
jle
xor
popf
lods
std
enter
jecxz
xchg
cmp
inc
mov
sub
sub
sbb
inc
int3
pushf
lods
mov
out
rcrl
int
mov
add
fstpt
or
push
mov
shlb
add
popa
pmullw
sub
lock
pop
divb
lock
addr16
push
rorl
xchg
test
in
jb
imul
cmpsl
mov
out
les
int
jg
test
popa
icebp
lahf
sbb
adc
cmp
jmp
inc
push
std
lods
movsb
out
popa
jo
xor
jmp
mov
or
xchg
les
mov
inc
mov
cmp
pop
and
pop
pusha
push
xlat
movsl
or
adc
aam
icebp
mov
je
cltd
leave
xchg
jmp
std
repz
dec
test
lcall
jp
in
mov
repnz
lods
and
sub
aaa
inc
push
mov
stos
test
in
cltd
sub
push
sbb
add
les
inc
add
popf
cwtl
inc
cmpsb
sub
enter
mov
jle
lods
dec
sub
pop
mov
cmp
push
repz
enter
jecxz
je
or
pop
cs
ret
and
xchg
jb
mov
popa
es
push
orb
mov
mov
fidivs
inc
loop
adc
mov
insb
mov
sub
and
adc
add
inc
loop
sub
mov
mov
ds
movsb
push
ret
and
sbb
xchg
jecxz
testl
mov
sbb
test
mov
or
mov
push
rcl
and
cltd
push
xchg
les
pop
sub
jno
movsl
mov
push
sbb
pop
ds
mov
xchg
test
arpl
leave
fs
mov
mov
mov
xlat
and
push
xchg
xchg
dec
mov
jl,pt
dec
xor
adc
call
int3
andl
mov
movsl
das
sbb
pop
shrb
in
js
outsl
inc
fiaddl
std
out
push
jae
xchg
fcompl
mov
mov
jge
test
repnz
in
dec
mov
out
adc
or
aaa
iret
in
sub
xchg
test
pop
pop
xor
pop
in
sahf
pushf
jae
mov
xor
inc
subb
sub
lret
xor
shlb
out
jno
mov
add
aam
sbb
xchg
add
fists
es
hlt
mov
mov
push
arpl
shll
xchg
dec
imul
xor
inc
mov
jp
jne
mov
cltd
loopne
push
aam
adc
cmpsl
mov
mov
dec
js
stos
mov
and
jmp
pop
jno
popf
sub
jecxz
in
imul
fwait
mov
out
mov
repz
lahf
cmp
adc
xor
cld
enter
mov
arpl
push
cmc
add
or
or
mov
lds
inc
push
imul
mov
jns
pop
pop
jl
xor
fnclex
sub
push
and
xchg
int3
enter
bound
jmp
hlt
mov
add
mov
add
mov
mov
test
and
das
push
lds
rorb
loopne
mov
sti
add
enter
or
test
in
xchg
push
leave
mov
test
xchg
cwtl
fistpll
xchg
jns
je
sub
sub
mov
mov
pop
push
xchg
jle
mov
test
out
xchg
scas
cli
aas
push
sbb
lods
xchg
jecxz
and
xchg
pop
ljmp
jle
adc
stos
add
sub
data16
pop
not
out
add
data16
aam
sub
mov
rcl
cwtl
lock
pusha
in
mov
rol
int3
aad
pop
xor
inc
xor
pop
clc
and
and
in
jb
pop
xchg
into
sbb
outsl
push
mov
fs
andb
mov
push
xorl
ljmp
loopne
repnz
sti
xor
ds
xor
shlb
lret
arpl
loopne
mov
or
jmp
xor
inc
cmp
addr16
scas
cmp
lock
cmp
sarb
mov
lcall
cmp
adc
rcrb
negb
mov
mov
faddl
xchg
imul
pop
aaa
inc
cmp
mov
xor
jmp
cmc
sbb
stc
fldlg2
jns
scas
pop
and
fists
sub
insl
push
inc
push
lret
add
ja
mov
out
mov
rcl
push
and
ja
mov
iret
icebp
fcmove
aas
mov
xor
lock
cmpsl
mov
or
stos
mov
into
cli
sbb
idivb
push
push
lret
sarl
xchg
adc
idivb
add
or
aas
rcrl
pop
rcr
mov
adc
sub
mov
xorl
pop
jb
es
xchg
jae
and
data16
jg
and
mov
jmp
cwtl
arpl
or
subl
out
pushf
insb
sub
test
cmp
arpl
pop
mov
lcall
lds
cld
pushf
out
in
lds
std
mov
mov
mov
push
pop
inc
les
cmp
mov
test
dec
sub
loop
lods
or
cmp
movsl
repz
xchg
insb
js
cmpsb
fwait
mov
xchg
jge
inc
cli
inc
push
sarb
add
jp
ljmp
jo
push
ss
pusha
and
push
adc
push
ss
cmpb
xchg
cmp
fimull
jne
cmp
push
stos
jge
cld
xchg
out
or
imul
clc
fisubrl
ret
jmp
cmpsl
sbb
jo
dec
dec
adc
int3
test
int
fmul
ss
mov
stos
ss
int3
and
rclb
sbbl
in
jae
jle
enter
loopne
mov
and
sbb
mov
flds
repnz
movb
ficompl
por
leave
inc
add
xor
mov
push
scas
inc
pop
sub
inc
inc
sbb
jmp
test
mov
cmp
jle
jns
mov
cs
in
iret
sti
out
and
shl
cmpsb
cmp
xchg
arpl
mov
sub
imul
out
mov
mov
adc
add
inc
jmp
andnps
dec
mov
out
adc
addb
enter
adc
inc
lods
lahf
pop
cmp
sahf
jl
inc
movsl
cmp
or
or
sub
push
call
mov
test
stos
rcll
xchg
sub
xchg
pusha
dec
pop
xor
js
mov
sub
sub
dec
push
push
sub
mov
pop
adc
je
dec
addr16
sbb
loop
sbb
mov
push
test
mov
popa
stos
insb
push
mov
dec
mov
stos
scas
loopne
fnsave
ss
inc
out
cld
mov
call
icebp
add
pop
stc
sbb
cmp
adc
mov
mov
xor
xor
ret
push
lret
test
subl
add
int
enter
sub
popa
push
adc
sbb
xchg
pop
cmp
inc
sbb
out
adc
cmp
movsl
pop
add
inc
cmc
adc
test
nop
icebp
pop
xchg
or
in
push
inc
cmc
and
mov
jge
lahf
or
or
xchg
mov
icebp
fstpt
or
xchg
or
inc
into
mov
popa
test
push
jp
outsb
xor
fisttpll
lock
addr16
or
jb
push
xchg
inc
dec
jge
test
addr16
imul
jo
out
out
js
daa
jp
mov
hlt
xchg
out
adc
popf
jb
jb
and
cmp
adc
add
jns
sub
mov
movsb
mov
xchg
dec
mov
movsl
js
mov
mov
sub
test
inc
test
jecxz
pushf
hlt
push
in
popa
dec
mov
mov
sbb
test
fwait
inc
adc
subl
sub
js
lods
out
pop
dec
in
jb
test
cmpsb
out
aad
ficoms
inc
fcomps
inc
ss
sub
call
aam
pushl
dec
push
mov
incb
and
out
dec
into
lods
lods
mov
mov
and
sub
add
add
sti
lock
sti
push
fdivrl
mov
into
jl
dec
push
inc
xor
push
sbb
repnz
xor
or
gs
push
sub
lahf
testl
xlat
jle
cmc
inc
cltd
sti
mov
push
cmp
adc
and
jmp
mov
sub
call
arpl
fadds
xor
adc
dec
xor
leave
insb
xchg
imul
mov
sbb
sbb
out
clc
jne
ds
push
lea
mov
fistl
es
lcall
push
xor
lahf
or
xchg
jb
xchg
jp
xor
mov
mov
shll
cld
cmpb
call
push
mov
orb
sub
mov
aaa
cmp
push
das
jb
mov
sbb
cmpsb
pop
mov
ss
repz
cltd
adc
cwtl
xlat
mov
and
jecxz
dec
add
pop
or
or
mov
xor
push
pop
pop
sbb
sbb
cli
mov
in
sub
js
in
xchg
push
rolb
dec
int
sbb
jg
xor
push
push
cld
cmpsb
jo
mov
arpl
pop
sub
cmpsl
mov
mov
repnz
mov
mov
int3
imul
dec
push
dec
jg
mov
pop
inc
arpl
xchg
imul
test
out
das
lds
push
popa
xchg
sbb
and
pushf
repz
xchg
mov
stos
out
scas
add
or
js
push
adc
jg
outsl
jmp
movsb
inc
cmp
scas
mov
leave
popf
nop
frstor
into
pushaw
loope
lods
jecxz
or
mov
add
outsb
aaa
push
out
pop
adc
out
jge
mov
pop
pop
lods
mov
out
mov
pop
mov
inc
pusha
pop
scas
xor
push
jns
jg
addr16
loopne
or
test
mov
test
jecxz
sub
repnz
mov
pop
hlt
je
xchg
rcrl
cmpl
xor
push
pop
pop
cmp
mov
daa
bound
pop
push
pslld
movsl
inc
stos
mov
cmp
test
add
mov
stos
mov
cmp
js
push
test
xchg
enter
stos
xchg
or
mov
ja
pop
pop
mov
aas
in
ficoml
dec
sahf
cmp
and
jns
ret
mov
push
and
lret
push
into
jno
ja
lds
add
xchg
bound
dec
lds
and
and
sub
jg
or
scas
and
pop
jg
and
fdivs
shrb
jecxz
data16
les
mov
imul
ret
jle
pop
cmp
sbb
push
or
mov
iret
ret
lret
fnstsw
push
popa
jae
lret
cmp
and
sub
or
push
bound
mov
push
fdivs
loope
cmpsb
addr16
scas
pop
inc
scas
pop
inc
cltd
in
lock
mov
les
and
xlat
je
sub
mov
push
js
jecxz
xchg
sbb
mov
jge
lcall
jp
insl
push
and
int
sti
xchg
lret
fwait
adc
adc
and
pop
insb
out
js
mov
inc
movb
loopne
cmp
xor
aad
sbb
mov
loop
pop
movsb
cmp
hlt
subl
sbb
js
es
les
add
mov
out
mov
and
push
xchg
pop
push
leave
and
sub
fcoms
add
lock
sbb
jecxz
test
mov
inc
adc
ja
cmp
xchg
gs
stos
jns
inc
movb
outsb
pop
push
aam
inc
cwtl
mov
jae
imul
scas
in
rorl
aad
mov
aas
sub
in
xchg
sbb
clc
test
jb
mov
mov
xor
in
jae
iret
popf
loope
outsb
push
in
xor
fnsave
cmpsb
sub
sbb
mov
lods
sub
ret
and
cmp
popa
cmp
movsb
cmp
mov
pop
mov
mov
xchg
pop
cmpsl
nop
lods
add
xchg
and
call
andl
sbb
xchg
fwait
add
or
call
xor
sub
jb
insb
mov
ss
movsb
jge
lret
fsubr
inc
add
xlat
push
cmp
subl
add
movsb
std
ja
out
xor
mov
jns
or
push
je
adc
inc
jns
cmp
cli
xor
xor
push
inc
data16
popf
rorl
sarl
in
inc
jl
insl
jb
cmc
xchg
test
and
ss
clc
lret
in
mov
xchg
jmp
mov
push
or
jp
cmp
xor
ljmp
popa
in
or
cli
adc
iret
shll
xor
dec
hlt
mov
popa
xor
pushf
or
sub
int
es
jl
sub
pop
shrl
and
aas
ja
inc
mov
cmpsl
les
push
stc
out
ja
outsb
addr16
jl
dec
sub
cwtl
inc
fldl
jne
add
movsl
clc
xor
fwait
ret
cmp
sbb
movsl
push
stc
xchg
xchg
jo
push
add
dec
fldt
leave
add
add
lret
mov
stc
ds
xchg
sbb
fs
das
jns
xchg
and
addr16
mov
jl,pt
negl
jae
mov
fildll
jns
and
mov
sbb
call
iret
bound
sub
mov
lods
xchg
push
lret
mov
imul
int
add
pop
adc
lods
mov
or
inc
mov
mov
mov
and
rolb
add
jg
xor
pop
sbb
cmpsl
push
xorl
pop
mov
fsubr
pop
imul
or
bound
mov
mov
nop
jge
push
and
mov
movsb
mov
dec
and
int3
por
sbb
pop
jne
pop
cmp
mov
and
add
sub
adc
mov
loopne
sbb
push
dec
outsl
stos
inc
ja
dec
icebp
inc
hlt
add
sub
pop
cmp
outsb
fimuls
loope
xor
hlt
sti
aad
mov
subl
repz
mov
ds
jecxz
cmp
icebp
dec
imul
das
fstl
mov
pop
xchg
cmc
xor
jp
jg
popf
arpl
add
mov
sub
stos
outsb
in
fwait
ja
cmpsl
addr16
push
sub
cmpl
add
cmp
fs
stos
popl
mov
fcoml
stos
shr
push
aaa
cmc
xchg
dec
lret
push
cs
jecxz
push
loop
bound
fldl
lods
repz
into
dec
ds
jb
insb
jp
jl
cmpsl
nop
lods
push
cltd
fimull
inc
add
jmp
jno
mov
out
dec
cld
leave
lods
lret
pop
aas
xchg
add
fistps
mov
inc
lds
cwtl
jg
pop
frstor
sub
inc
cmp
mov
shlb
add
daa
rorw
lods
inc
out
clc
mov
mov
imulb
jecxz
adc
or
sub
stos
and
test
mov
or
mov
int
mov
cmp
mov
enter
or
sub
scas
sbb
insl
mov
jne
jge
repnz
inc
aam
xlat
outsb
mulb
fistl
pop
cld
dec
mov
je
and
push
fsts
dec
test
mov
iret
leave
test
dec
mov
xchg
xchg
pop
jle
push
loopne
sbb
pop
lock
call
add
imul
inc
movsl
cmp
sbb
out
fisttpll
movsb
icebp
jne
mov
cmp
call
insb
mov
rcl
cmc
iret
sarb
or
lcall
xchg
out
adc
sahf
push
lret
fistpl
adc
pop
outsb
mov
subb
cmc
jae
adc
movb
outsb
fimull
pop
lds
mov
sub
pop
sahf
push
push
outsl
bound
subl
xchg
jp
and
inc
push
aas
mov
lret
jo
ss
icebp
out
sub
jge
in
mov
xchg
jno
add
shrl
insl
sub
sbbl
movsl
fwait
ds
pop
clc
sub
loope
std
popf
cmc
xor
jo
aas
test
mov
pop
jnp
sbb
mov
sahf
jnp
cli
xor
push
popl
xor
mov
push
inc
xor
orl
and
or
repnz
scas
push
loope
jb
jecxz
out
addr16
mov
and
add
mov
fldl
shlb
and
ljmp
call
adc
adc
sahf
sbb
sub
lcall
stc
nop
or
les
pop
je
enter
pusha
cmp
cs
mov
lock
scas
cmpsb
fbstp
push
dec
lahf
popa
adc
pop
cmpsl
xor
cmp
mov
inc
or
and
icebp
xchg
ret
out
mov
aam
push
mov
or
inc
cmp
jmp
lret
int3
inc
mov
filds
adc
pop
aas
imul
aas
and
ja
scas
nop
aad
lds
mov
pop
pusha
outsl
mov
xchg
out
imul
jle
or
xor
cmc
jmp
scas
push
insl
aam
mov
scas
iret
jns
scas
inc
add
cmpsb
add
lcall
cmpl
mov
adc
mov
xchg
xor
dec
cmp
dec
dec
pop
lret
out
mov
lock
out
xor
lret
movsb
lods
or
and
jle
push
or
lahf
pop
in
sarb
mov
gs
add
fwait
xor
jbe
mov
arpl
icebp
test
dec
mov
push
xchg
loope
and
push
roll
xchg
xor
cmp
mov
pop
cli
cmp
or
and
xor
es
push
adc
or
fstpt
sub
jno
fstps
ljmp
lcall
rolb
scas
dec
sub
shlb
in
out
ficomps
gs
pop
and
fnstcw
mov
and
mov
dec
int
xor
or
pop
jl
lahf
sub
mov
maxps
pop
jecxz
clc
loopne
cld
lock
fsubl
test
mov
ja
subl
inc
cmp
mov
add
imul
cli
orl
mov
inc
jge
jbe
mov
aad
jnp
pusha
mov
or
xchg
jne
xchg
test
out
sub
sbb
insb
sbb
ficoml
xor
add
out
dec
mov
push
xor
into
jge
ret
jo
sbb
dec
je
leave
mov
pop
ret
ja
pop
xchg
cmc
outsb
cltd
and
xor
adc
enter
inc
xchg
and
add
cwtl
outsb
ret
sub
ret
mov
in
pop
insb
cmp
hlt
aam
inc
movq
pop
jbe
loope
pop
retw
jbe
les
add
mov
incl
lds
xchg
fstpt
xchg
out
ja
dec
mov
sbb
dec
pop
sbb
sbb
pop
mov
pop
jbe
push
cmp
or
push
pop
out
and
mov
inc
mov
xchg
jnp
cmc
mov
jnp
add
insl
add
sbb
pop
cmpl
ljmp
loope
cmpsl
dec
xor
loopne
xor
mov
jno
jno
sbb
or
rcrb
adc
dec
loop
or
test
pandn
adc
mov
sbb
inc
loopne
jbe
call
or
mov
sbb
mov
movsb
dec
add
daa
pusha
dec
jmp
shrl
cld
in
mov
jge
or
pop
dec
xchg
idivl
stos
fldl
or
out
aas
and
sub
imul
jbe
sub
fisubs
mov
mov
repz
and
call
adc
movsb
or
pop
jne
imul
sbb
push
mov
push
call
mov
in
test
jmp
pop
faddl
in
nop
and
inc
sub
pusha
adcb
shll
add
test
pop
or
jo
cmp
mov
push
xchg
fmuls
push
cld
jecxz
dec
inc
gs
xor
or
mov
rorb
dec
sbb
in
cli
movl
jmp
jb
inc
mov
daa
mov
push
fisubrs
fcmovu
xor
jmp
xor
push
jne
cmp
aas
jne
xchg
in
sti
outsl
ficoml
out
loopne
sti
out
movsb
fisubrs
or
xchg
icebp
cmp
push
data16
dec
inc
xchg
push
push
loope
test
aaa
in
pop
fistpll
mov
fwait
insl
imul
imul
addr16
in
popf
jl
cwtl
sub
push
mov
sub
stos
sub
dec
cmp
stos
dec
add
icebp
test
inc
adc
sahf
fidivrs
xor
cwtl
call
pop
lahf
and
sbb
inc
enter
dec
mov
xchg
jle
or
rcrb
xor
inc
rclb
cld
mov
call
dec
test
sti
push
in
sbb
or
sbb
sahf
pushf
xor
inc
jmp
cli
jo
pushw
stc
push
fisubs
test
stos
iret
int
xor
sub
adc
call
pusha
leave
xchg
out
mov
fcoml
ret
adc
and
lcall
rcrl
lods
cltd
jp
mov
loope
mov
mov
mov
add
ret
movsl
insl
xor
cmp
sbb
sbb
mov
repnz
push
pushf
mov
push
lds
test
call
aam
mov
add
aas
sti
or
or
jmp
lods
fisttps
fstpl
int
lock
mov
lea
push
jge
cmp
rcrb
push
movsb
outsb
loope
bound
sub
push
sbb
jb
enter
loope
mov
add
pop
aas
or
int
sub
cs
test
push
xlat
xchg
sbb
mov
mov
or
xchg
cmp
iret
scas
sub
in
out
cmpsb
test
daa
cmp
inc
in
or
cmp
cmp
movsb
out
mov
out
pop
test
xchg
loop
les
mov
adc
outsb
pop
jg
lret
adc
mov
jns
dec
adc
loopne
dec
lret
es
cli
mov
push
mov
out
js
andb
mov
lahf
test
or
in
dec
add
xchg
daa
test
mov
cmp
cmc
pop
pushf
dec
movsb
enter
mov
push
cmp
cmpsl
sub
fcompl
scas
lods
or
in
je
popa
pop
sub
pop
enter
sub
fwait
sub
aaa
lds
fwait
pop
movsb
jnp
insl
mov
lret
cmp
xor
mov
hlt
scas
push
call
dec
xchg
dec
in
xor
mov
and
mov
push
call
push
jg
mov
sbb
addr16
mov
jecxz
stos
mov
mov
pop
adc
inc
es
into
mov
jmp
repz
fdivs
lret
pop
or
stos
add
pop
mov
inc
dec
lock
jge
add
dec
cs
bound
fiadds
orb
sbbl
in
inc
mov
outsb
mov
pop
scas
jae
ljmp
mov
sarb
and
cmp
inc
sub
ror
sub
movsb
xchg
mov
pop
iret
cmp
je
xorb
push
push
add
fsubr
les
pop
or
mov
sbb
repz
xor
mov
sub
mov
push
mov
test
popa
or
mov
or
ja,pt
in
idivb
push
addb
inc
cmp
aad
dec
mov
mov
aam
xor
inc
mov
mov
dec
andl
call
jle
and
add
fwait
outsb
dec
loopne
mov
repz
movsl
push
lock
dec
sti
cwtl
mov
mov
rcl
jg
pop
inc
lret
call
sub
ljmp
pop
jl
fists
and
or
mov
jns
mov
ja
ja
and
mov
jge
nop
lods
push
insb
push
mov
jp
mov
mov
mov
adc
ja
je
xchg
leave
test
xor
je
cld
clc
jae
test
lahf
in
out
or
out
fyl2xp1
mov
ret
pop
rcpps
xchg
das
popl
fs
addb
xchg
adcb
cmc
cmp
movsl
leave
shr
and
clc
orl
push
outsl
dec
ss
or
insb
inc
inc
int3
and
fdivl
xor
out
fstps
push
sub
sub
pusha
repnz
pop
lock
test
mov
mov
xchg
arpl
dec
scas
jbe
push
test
sub
ror
sbb
out
out
stos
ja
dec
hlt
in
es
add
mov
sarl
outsl
imul
pop
in
sub
insb
inc
or
sbb
js
jp
pushf
addl
cs
mov
ljmp
push
inc
dec
js
cld
out
cmp
cmp
xor
mov
out
mov
dec
xchg
loopne
jnp
adcb
mov
decl
daa
cs
pop
pushf
xchg
cmp
inc
lret
or
mov
std
aad
aad
push
mov
xor
or
dec
cs
sub
push
or
mov
jno
divb
sbb
jge
scas
test
cli
mov
push
inc
add
add
mov
popa
sbb
insl
add
ljmp
xchg
and
mov
or
xchg
es
ds
and
int3
jne
xor
push
lea
dec
leave
add
lahf
ds
scas
jns
push
jb
std
arpl
pop
shrb
out
fstl
sahf
jg
iret
int
pop
mov
pop
cmp
cld
push
inc
enter
dec
adc
pushf
jecxz
lea
into
pusha
adc
xor
shlb
pop
add
imul
mov
stc
mov
mov
nop
or
jg
and
ret
jge
imul
inc
cmc
stos
repz
pop
in
es
pop
jp
leave
jmp
nop
mov
jns
jne
inc
dec
es
cmp
jae
arpl
mov
mov
sub
sub
dec
push
cmpsb
sbb
pusha
cmp
hlt
xchg
mov
xor
or
ds
or
add
cmp
cli
ljmp
push
dec
pop
mov
xchg
fisubrs
or
xor
mov
decl
sbb
mov
ret
xor
into
ss
xchg
lock
fsts
loope
cmp
fsts
pop
sub
xor
repnz
out
lds
inc
jb
push
in
aaa
test
push
les
out
sub
movsl
inc
mov
cs
jne
fwait
ret
push
lcall
add
push
sbb
pusha
call
and
mov
repnz
repnz
cmc
sub
test
adc
fnsave
xor
sbb
jmp
imul
pop
sbb
or
or
loop
lcall
mov
xchg
pop
out
test
jle
jecxz
sbb
xor
xor
add
ljmp
fists
popf
movsb
dec
or
xchg
outsb
or
dec
xor
pusha
mov
repnz
daa
cmp
adc
pop
fs
fwait
out
pop
mov
leave
or
sub
in
cwtl
loopne
pusha
jle
jg
jp
push
xchg
movsb
and
pop
subl
mov
or
mov
fists
cmc
xor
mov
pusha
fwait
mov
mov
fdivr
fsqrt
xchg
cld
or
push
aam
add
jge
stc
pop
js
xor
outsb
and
xor
or
adc
jo
mov
out
mov
xchg
outsb
icebp
sub
adcl
js
je
dec
sar
mov
xchg
popf
mov
outsb
cmp
pop
leave
jl
xorb
nop
insl
jmp
lds
dec
adc
push
mov
cmp
insb
push
testl
fimull
lret
shll
sti
dec
cmp
int3
addr16
dec
ljmp
dec
mov
mov
mov
popa
xchg
cwtl
mov
xchg
rorl
mov
or
enter
mov
fwait
jge
rclb
bound
insb
in
xorl
xchg
shll
hlt
push
stos
notl
mov
add
je
pop
pop
mov
xor
decl
dec
and
std
mov
in
dec
lods
add
je
sub
xchg
ljmp
xchg
mov
in
imul
add
pop
pop
inc
sub
push
aam
sbb
fsts
sbb
adc
cld
gs
js
dec
sarl
cltd
icebp
in
ljmp
out
cld
mov
dec
fs
or
pop
dec
lea
adc
add
push
loope
or
pushf
push
or
popf
cmp
cmc
jge
in
add
push
movsl
xchg
pop
outsb
lods
sbb
mov
mov
mov
dec
ret
pop
mov
push
sub
mov
stos
lea
jne
cmp
repnz
push
fistps
xchg
call
imul
orb
xlat
cltd
xor
lods
lds
daa
fmull
loop
mov
out
inc
mov
in
test
sbb
enter
ds
dec
adc
xchg
xor
push
outsb
das
pop
es
shlw
or
mov
jne
xchg
dec
dec
xor
pop
rcrb
xchg
mov
hlt
push
dec
or
lock
xchg
sahf
mov
mov
lahf
cmpsb
mov
push
insb
rolb
insb
lds
or
enter
mov
test
loope
ja
mov
jno
loop
into
pop
lods
push
jne
pop
gs
add
push
cmp
xor
ret
cmp
push
lret
sbb
lock
scas
or
jecxz
bound
and
mov
pop
mov
mov
jae
xchg
mov
or
pop
adc
mov
insl
fwait
and
rcrl
mov
and
adc
in
push
into
lahf
xchg
adc
pop
stos
repz
inc
mov
mov
sub
push
sti
out
sti
clc
hlt
xchg
pop
jbe
dec
pop
and
cmpsb
pop
sbb
cltd
iret
sub
lahf
dec
pushf
inc
mov
imul
scas
jnp
or
das
lods
xor
pop
icebp
mov
sub
sti
pop
mov
sti
sub
xchg
in
mov
loope
arpl
mov
mov
inc
pop
sub
and
push
cmp
sbb
icebp
dec
xchg
sub
mov
xor
push
aam
push
ja
test
xchg
jo
test
inc
mov
fldt
mov
js
cmpsb
dec
inc
xchg
fcmovbe
inc
and
jne
adc
aas
aas
sbb
jae
pop
mov
leave
popf
push
stc
jl
adc
loope
mov
fcmovbe
out
mov
fstl
pop
sbb
and
clc
lock
testb
dec
and
jno
mov
cmp
fstpt
pushf
out
fsubrp
jmp
mov
mov
dec
outsb
lods
lods
outsb
sub
mov
or
daa
imul
sbb
cmp
sub
mov
jns
sub
pop
ret
pop
stos
sub
aad
mov
and
inc
jnp
loop
push
push
rclb
ret
push
xor
and
or
add
add
cmp
mov
jno
insb
pop
les
test
add
mov
jecxz
push
push
push
add
push
sbb
fidivs
add
jg
and
or
stos
js
add
gs
data16
mov
repnz
mov
leave
jl
rorb
mov
es
add
or
push
das
test
enter
inc
push
in
scas
jge
jl
cmp
leave
mov
lock
sub
orl
jne
loopne
push
mov
cmpb
leave
mov
out
jge
jg
in
push
mov
and
fwait
cmp
jmp
jecxz
jo
jmp
cmc
pop
into
pusha
jno
rclb
mov
shrb
and
rolb
jle
addr16
insb
inc
test
jb
rcr
icebp
insb
mov
ret
xorl
addr16
xor
jg
loop
push
xor
fcompl
dec
or
rclb
orb
cli
push
movsb
ss
xchg
test
jnp
cli
cmp
push
inc
fmulp
mov
test
mov
inc
mov
jno
xor
mov
pusha
adc
mov
cmc
inc
movsl
enter
mov
jmp
sub
rep
push
fldenv
push
jp
dec
push
xor
and
mov
add
mov
add
std
lea
pop
fistl
movsb
jo
aaa
adc
lret
xlat
add
push
add
pop
mov
rorb
mov
fsubs
sbb
xor
cld
push
and
inc
mov
shlb
mov
inc
in
aas
sub
jne
or
mov
inc
xor
mov
adc
arpl
xchg
shlb
mov
bound
addb
jns
sbb
lret
ret
aas
cmc
pusha
xchg
movsb
inc
fnstenv
sbb
filds
cltd
pop
push
es
in
insl
mov
mov
dec
insb
pusha
mov
pusha
mov
adc
mov
sub
inc
or
cmp
lea
icebp
in
fcmovu
insb
cmp
in
fwait
jb
pop
mov
adc
dec
rcl
jg
cmpb
cmpl
xchg
and
scas
nop
mov
inc
enter
icebp
or
out
sub
push
mov
cli
arpl
rcl
bound
xchg
sti
push
jle
inc
xchg
dec
rolb
xchg
adc
or
cmp
sub
add
add
push
test
add
out
sub
push
dec
inc
pop
inc
or
mov
insl
jge
or
pop
pop
or
lods
jne
outsb
xchg
dec
push
getsec
or
inc
mov
pushf
lds
test
add
xlat
xchg
fsubrs
sub
out
testl
test
sbb
fsubrs
xorb
mov
les
mov
xor
shrb
shlb
pop
add
ret
and
jbe
aaa
or
sarb
sbb
insl
add
inc
inc
je
std
and
adc
sub
aaa
mov
ja
andl
sbbl
xor
xor
cmp
push
mov
mov
pop
mov
test
push
ja
mov
mov
aam
sar
pop
mov
in
cmp
cvtpi2ps
xor
mov
fisubl
sbb
mov
adc
push
xor
sarl
leave
sbb
fadds
mov
mov
add
lea
inc
stc
sti
subb
ds
stc
pop
mov
into
sbb
js
clc
mov
sub
sbbb
lret
cmp
mov
nop
push
cmp
test
jge
mov
test
pop
stos
lret
dec
fwait
je
test
and
xorb
outsb
shr
dec
mov
cmp
icebp
push
pop
add
xchg
mov
hlt
test
mov
inc
fsts
dec
sahf
ds
push
pop
scas
jecxz
dec
mov
pop
sub
lea
mov
mov
test
mov
ja
xor
jp
sub
inc
enter
shlb
inc
cli
dec
fs
adc
adc
dec
xor
das
mov
adc
dec
and
dec
orl
rcr
and
lret
pop
cwtl
sbb
aas
movsb
ljmp
jge
cmp
cwtl
out
dec
dec
jbe
insl
jns
decb
sub
les
outsl
cmp
cmp
jnp
dec
and
xlat
insb
fidivrs
mov
das
sbb
push
lret
insb
incl
xchg
mov
and
cmc
cmp
pop
in
loope
add
ret
pop
or
outsb
sti
inc
push
adcb
out
int
into
lahf
addb
push
ret
push
and
cmp
adc
mov
in
and
push
add
jl
out
inc
cmp
jg
gs
fdivl
mov
adc
pop
lods
int
and
ret
or
call
cmpsb
xor
mov
mov
and
fwait
push
out
aad
mov
iret
dec
adc
xor
imul
and
rorb
sbb
or
sub
ret
fisubs
mov
insb
push
imul
loope
imul
aas
xchg
cmovl
or
push
mov
sbb
sbb
call
xor
pop
ficoms
cld
mov
js
dec
mov
and
pop
mov
fisubrl
add
adc
lcall
shlb
bnd
repz
jecxz
or
dec
pop
dec
jle
add
push
fcomps
pop
or
ljmp
or
jecxz
push
idivl
mov
sub
pop
inc
cmp
mov
sbb
cmp
mov
out
jns
enter
sub
mov
jnp
pushf
adc
cmp
inc
outsb
xchg
jnp
xchg
gs
jp
push
faddl
arpl
push
inc
or
dec
push
iret
adcb
outsl
ljmp
jb
dec
popa
in
lock
sbb
xchg
dec
movsl
and
lea
divl
dec
popa
push
jno
daa
and
jo
xlat
sbb
les
lret
lcall
stc
lahf
ret
sub
or
les
movsb
stc
int3
mov
addl
xchg
or
je
movsb
jl
dec
rorb
roll
fstpl
mov
cmc
lret
lea
inc
movsl
sub
cmpsl
xchg
sbb
aaa
or
ret
push
cmp
out
stos
lock
mov
outsl
or
xchg
inc
loope
mov
or
and
mov
mov
imul
jbe
ljmp
mov
xorb
mov
dec
jnp,pt
inc
cmp
data16
dec
stos
dec
dec
dec
test
fmull
jbe
rorl
mov
jae
cmpsb
out
or
lcall
add
and
pop
mov
xchg
inc
add
js
pusha
pop
push
push
and
les
inc
int
jae
fwait
call
popf
jg
add
jno
add
xchg
scas
les
cwtl
jle
popf
add
fdiv
cld
pop
cmp
push
inc
push
scas
xor
cltd
xchg
xor
test
or
call
out
sbb
in
sub
mov
popa
mov
xchg
jle
cmp
sbb
adcb
in
dec
daa
xor
push
data16
sub
push
mov
stos
sub
cmp
xor
int3
or
cmpl
xor
test
xchg
adc
fsts
roll
push
sbb
adc
ds
jmp
ss
loop
stos
and
int
cmp
cltd
pop
in
in
and
jns
inc
inc
or
adcl
push
out
xorb
std
fnstcw
lret
nop
lea
mov
push
or
js
shrb
jl
mov
sbb
in
xor
pop
inc
fdivl
ds
dec
outsb
mov
pop
add
xor
loopne
sbb
dec
mov
addr16
out
pop
xchg
ja
xchg
add
mov
mov
in
pop
mov
aam
in
push
mov
inc
bnd
andl
mov
pop
mov
scas
outsl
fsubl
or
test
dec
repz
std
into
je
mov
xor
divb
push
loop
dec
and
movsb
data16
mov
das
cli
pop
fdivs
mov
out
ret
out
dec
mov
cmp
sbb
inc
jae
and
dec
cmp
cmp
nop
gs
lods
subb
popf
dec
mov
mov
xchg
out
fnstsw
jns
mov
cltd
sub
es
out
in
test
movb
mov
test
push
test
push
mov
dec
lcall
pop
mov
push
pop
push
mov
into
xor
sub
cwtl
mov
data16
xchg
mov
out
mov
pusha
push
mov
adc
pop
push
xchg
cmp
dec
or
arpl
sti
dec
test
scas
cwtl
push
xchg
mov
lcall
and
loop
ret
sbb
lds
xor
inc
cmc
jp
fcompl
jae
divb
inc
rorb
push
inc
out
mov
add
cwtl
iret
roll
outsl
in
arpl
cmc
push
repnz
cld
mov
jl
or
js
push
jmp
out
jecxz
aad
push
cmc
mov
jg
icebp
int3
mov
insl
scas
movsb
pusha
push
leave
jns
mov
fidivl
mov
push
into
pusha
sub
push
sahf
add
adc
sahf
pushf
pusha
jae
mov
iret
push
pop
jmp
push
xchg
push
je
mov
lods
cwtl
add
pop
pop
mov
jle
lahf
cmc
dec
repnz
mov
adc
cvttps2pi
pusha
cmpl
pop
or
lret
jnp
mov
lds
addr16
add
scas
out
pop
int3
mov
or
pop
add
push
add
ljmp
xor
lcall
notl
pushl
dec
mov
imul
and
lods
loopne
mov
aas
mov
sub
fs
jne
push
pop
sub
dec
mov
jne
int
insl
jae
bound
test
faddp
sbb
enter
dec
adc
mov
lods
rorl
rclb
xchg
cmp
push
adc
sbbl
es
add
sarb
or
sbb
cmp
mov
jp
into
scas
sbb
add
pop
xchg
das
mov
lcall
push
push
add
xor
sarl
gs
inc
jge
cmp
jl
insb
subb
pop
int
in
lret
bound
out
mov
xor
xchg
sub
popl
jae
jne
lret
mov
fdivs
mov
or
fistps
mov
repnz
les
in
shrl
jb
push
adc
mov
scas
lock
and
pusha
add
inc
testb
mov
add
cli
bound
addr16
cli
sub
jns
jne
inc
std
push
inc
mov
repz
lods
mov
dec
jmp
or
add
xor
scas
add
enter
push
xor
cltd
mov
shl
jno
add
xor
call
dec
hlt
fisubrs
push
ds
in
fs
dec
les
mov
add
test
adc
push
ret
pop
push
loopne
dec
jmp
rolb
es
fsts
mov
out
cmp
push
add
cwtl
jae
fdivl
fsubr
sub
fstpt
mov
test
adcb
jae
in
mov
or
push
das
arpl
pop
ja
jge
not
push
inc
scas
shr
les
imul
pop
or
or
mov
xor
hlt
out
pushf
rcrl
mov
in
clc
pushf
xor
xor
popa
pop
inc
dec
sbb
scas
cmp
sbb
mov
in
in
pusha
adc
pop
fs
cld
inc
or
call
loop
subl
adc
mov
push
pop
shl
aam
mov
mov
xor
add
jo
inc
rolb
out
fcmove
add
pop
push
and
movsl
daa
adc
mov
setnp
adc
stos
push
es
lret
scas
cli
lcall
aaa
jmp
sahf
adc
dec
iret
inc
bound
ss
popf
mov
insl
push
pop
mov
movsl
jle
sti
sub
leave
jae
sbb
xchg
js
test
pop
jge
flds
popa
ret
cs
pop
adc
jl
sub
jns
pop
jns
pop
cmpsl
test
adc
insb
and
gs
loope
mov
jg
pushf
pop
lock
out
inc
das
xor
inc
mov
jae
sub
dec
xlat
sub
popa
push
sub
ss
mov
test
dec
pop
pop
xor
xor
cltd
cmpsb
ljmp
pop
sub
lret
add
rorb
movsb
lret
jmp
jb
js
dec
jb
pop
dec
mov
inc
lret
push
dec
mov
mov
imul
and
pop
pop
inc
mov
dec
cmpsb
push
mov
sahf
movsl
sub
mov
lds
out
add
or
and
adc
push
movsb
call
in
cmp
popa
jmp
shll
cmp
stos
std
cmpsl
repz
aam
je
or
into
adc
cs
sbb
mov
roll
xchg
sbb
mov
idivb
pop
mov
mov
push
fdivl
test
mov
add
xor
ss
int
cmp
push
sub
dec
and
loope
addl
cltd
push
mov
mov
sub
mov
mov
out
repz
cmp
push
fisubrl
jmp
loop
imul
xor
scas
dec
mov
scas
lds
data16
and
ss
pop
mov
outsb
jbe
aam
mov
fimuls
jl
jne
push
rcrb
adc
cmp
or
mov
arpl
lods
mov
outsb
addr16
in
fisubl
fdivrl
test
aad
sub
stc
scas
mov
sbb
call
jne
pop
fistps
push
jmp
cltd
arpl
cwtl
dec
pop
and
or
push
cmpsb
jg
pop
std
repz
xchg
inc
xchg
roll
adc
sbb
cmp
jle
test
imul
loope
add
dec
cmc
push
mov
inc
mov
adc
sub
fisttps
pop
jae
push
outsb
sbb
loope
and
inc
fadds
shlb
int
test
jae
pushl
adc
jle
mov
sub
mov
clc
lds
dec
push
sub
ret
mov
pop
pop
popf
std
pushf
push
imul
gs
clc
cmp
pop
rcl
and
je
dec
pop
sbb
js
sub
icebp
pop
push
cli
mov
loope
clc
push
cltd
pop
jae
pop
mov
mov
lds
outsb
cmpsl
xorb
add
lea
and
movsb
js
cwtl
lods
cli
add
add
lods
add
cmp
fwait
pop
outsl
outsl
enter
fists
addr16
cmovno
push
mov
lret
jp
idiv
xor
int3
xchg
xchg
jg
js
jae
idivl
es
cmc
popa
ret
ds
lahf
out
cmpsl
mov
sbb
int3
push
popa
ds
mov
xor
jnp
and
es
lahf
cmp
scas
loope
or
dec
imul
negl
mov
pop
jg
adc
insb
jle
mov
xlat
dec
sbb
out
jns
and
jbe
int3
sbb
in
or
cld
enter
pop
pop
push
jnp
insb
mov
xchg
or
push
push
xchg
lcall
outsb
shll
enter
rorl
mov
dec
rclb
mov
rorl
arpl
mov
insl
or
test
fistpl
jb
inc
std
push
or
lret
popf
arpl
push
lods
xchg
in
mov
popa
loop
cmp
sub
popa
pop
cmp
jne
test
and
pop
adc
int3
xchg
cmp
cmpl
fwait
jg
mov
nop
sbb
shr
jle
jnp
jg
inc
insl
push
cs
mov
scas
outsl
mov
stc
jb
add
jl
outsl
xchg
fnstcw
sarl
jmp
ss
adc
fwait
push
jae
pop
and
add
sub
sbb
icebp
and
mov
sbb
jmp
fstps
xchg
scas
cwtl
sbb
sub
imul
and
test
jmp
sbb
sbb
sbb
cmp
pushf
rol
xchg
stos
fnstenv
roll
test
push
in
cmp
test
cmpb
fidivl
adc
hlt
scas
imul
xlat
das
in
lret
lret
dec
jno
shll
mov
lahf
mov
cmp
inc
push
mov
dec
mov
jmp
lock
mov
and
and
cmp
lock
into
jb
cmc
adc
push
pop
jmp
test
and
repnz
xchg
aaa
sub
cs
lret
dec
xchg
popa
add
jb
lahf
pop
jp
sub
or
test
popa
and
push
push
nop
mov
sub
nop
dec
pop
pop
and
js
or
pop
ss
jg
lcall
sub
cmpl
mov
fwait
sub
leave
push
mov
adc
pop
in
fcoml
and
cli
pop
xchg
ficoms
bound
sub
adc
sbb
clc
xchg
and
lea
mov
sbb
pop
lods
lods
cmpsl
push
jp
fucomp
sarl
mov
cmp
test
xchg
mov
bound
jno
and
sti
or
and
sub
jg
sarb
pop
add
or
xchg
push
or
int
mov
out
call
test
cli
and
or
sbb
ja
xor
imul
xchg
xchg
fistl
push
add
aam
xor
mov
or
cmp
imul
icebp
cmpsl
lea
inc
scas
inc
cmp
sahf
lds
or
mov
xchg
mov
add
and
inc
xchg
or
ror
push
mov
jmp
cmp
or
rcrl
daa
sub
imul
icebp
lock
pop
cmp
inc
pushf
push
jg
frstor
loopne
mov
push
xor
inc
je
rolb
and
mov
mov
lock
mov
xchg
test
pop
mov
int
movb
push
popa
push
inc
and
or
xchg
adc
ffreep
or
lock
mov
or
inc
and
jecxz
push
xor
dec
mov
pop
jbe
or
and
pop
out
nop
xchg
push
jno,pn
das
jmp
mov
mull
fcomp
cmc
decb
add
cmp
mov
pop
xchg
test
daa
sbb
mov
add
pop
mov
fwait
xchg
jnp
pextrw
mov
cmp
popf
inc
mov
lods
inc
movsb
lret
lods
gs
mov
xor
push
sbb
es
jg
shll
stc
mov
popa
dec
cmp
pop
mov
or
cmp
test
repnz
aad
loop
sbb
add
cmp
pop
pusha
subl
add
mov
in
or
loop
lahf
and
adc
xchg
cmc
dec
mov
xor
call
xchg
push
cmc
dec
push
lods
xor
and
movsl
sbb
lret
int
push
les
pusha
xchg
push
sub
aam
adc
shlb
mov
lds
or
aas
aam
push
or
adc
in
xor
subl
in
push
loop
lahf
push
sub
xlat
testb
shrb
lods
xlat
cmp
cwtl
mov
xchg
loopne
inc
cmp
or
es
subb
sub
mov
push
loopne
xchg
int3
push
pop
ficoml
mov
mov
mov
ficomps
pop
sub
mov
scas
sub
jb
mov
jae
mov
out
cmpsl
mov
push
push
mov
or
mov
insb
xchg
and
aas
int
xchg
call
insb
imul
in
push
pop
pop
inc
adc
sbb
mov
in
ja
shll
pop
jae
mov
cmp
fsubr
jl
in
adc
fincstp
data16
lret
stc
xchg
mov
pop
insl
mov
cwtl
mov
adc
add
inc
cld
mov
lock
dec
in
xorb
mov
stc
clc
adc
dec
inc
jnp
cli
popl
add
mov
push
push
pop
inc
les
iret
rcrb
int
push
rcrb
pop
and
and
xchg
inc
es
push
test
mov
clc
mov
jmp
data16
das
mov
or
in
mov
xchg
jl
pop
out
out
ds
addr16
jecxz
ret
jns
nop
test
and
in
xor
int3
repz
jmp
mov
add
outsb
mov
dec
xchg
fidivl
shrl
in
negl
sbb
mov
loopne
pusha
std
cs
push
add
or
test
pop
cwtl
and
imul
xor
ja
test
mov
xor
test
test
and
pop
add
xor
jmp
jmp
cwtl
stc
mov
inc
jp
cmp
mov
sarb
ror
and
into
cmp
inc
idivb
jbe
xor
mov
xor
xor
pop
movsl
movsl
xchg
mov
push
aas
add
jne
xchg
and
cmp
mov
leave
mov
imul
push
push
xor
stos
mov
movsl
inc
mov
shr
mov
push
test
add
inc
test
mov
loope
sarl
mov
sub
adc
mov
lods
jmp
mov
icebp
inc
or
xchg
xchg
loop
cmp
and
dec
xor
stos
mov
cmp
mov
stos
sbb
fldenv
stos
jnp
jge
faddp
xchg
xor
sub
shrl
je
gs
mov
subb
loope
fsubrl
insl
mov
repnz
xor
dec
lods
xchg
test
push
adc
fisttps
add
mov
std
push
xor
clc
cmp
arpl
shr
cmp
push
xor
data16
in
inc
leave
sbb
pop
push
mov
xor
js
je
cltd
pusha
dec
pop
movsb
movsl
mov
cmp
and
in
repnz
cmpsb
push
fld
test
cmpsb
cmp
shr
outsb
sub
dec
pop
push
xchg
daa
push
nop
and
scas
cltd
daa
enter
push
fisttps
cmovo
inc
mov
jb
test
jo
inc
es
push
rcrb
es
imul
inc
inc
cmp
adc
sub
in
push
lahf
inc
mov
in
ja
push
les
cmc
and
jns
mov
push
and
mov
adc
mov
test
push
jns
out
mov
fisttpl
push
stos
push
xor
dec
inc
shlb
jg
cld
dec
sbb
test
and
arpl
or
jecxz
mov
and
push
sbb
cltd
or
push
in
cmpsb
popf
pop
loope
xchg
mov
movsb
in
inc
pop
add
loop
dec
or
subl
fnstenv
cmp
ja
push
loopne
cmp
cld
pop
test
adc
lret
repz
insl
lds
fistpl
mov
andl
push
shll
mov
pop
sahf
jmp
sub
cmc
pop
jb
inc
test
cltd
ficomps
pop
int
push
clc
rcl
cmpsb
out
pop
dec
push
rcll
pop
xor
lea
outsl
mov
fdivs
or
out
xchg
xlat
les
nop
jo
sbbl
lret
and
into
and
mov
lock
leave
sub
je
jno
jnp
mov
cmp
xor
adc
mov
mov
xchg
subb
sahf
push
mov
jnp
insl
jecxz
cmp
mov
aad
jmp
push
cmp
mov
or
xor
add
push
loopne
mov
dec
clc
rcl
lcall
ret
adc
jo
mov
sbb
aad
adc
cli
cmp
lods
sbb
addb
push
bound
nop
xchg
xlat
xchg
call
int
jmp
pop
sbb
or
xchg
inc
xchg
xlat
imul
xor
mov
mov
jbe
xchg
in
fistl
and
pop
mov
push
cmp
jg
out
dec
sub
sub
cmp
xchg
mov
aam
add
lret
test
xchg
jle
outsl
push
loopne
inc
jle
std
sub
and
ret
mov
jns
add
outsb
data16
mov
test
mov
and
test
sahf
push
dec
stc
testb
js
sbb
fiadds
iret
add
insb
psadbw
dec
adc
jbe
xchg
xchg
adc
dec
lds
xchg
sti
les
aad
pushf
push
jecxz
and
mov
std
cmp
push
fs
jae
or
pusha
jns
cmp
sbb
aam
pop
fcmovnbe
xchg
sub
add
sbb
jns
and
movsl
imull
ja
xor
xor
testl
inc
bound
and
movsb
ljmp
imul
mov
inc
and
mov
inc
inc
repz
call
xchg
ja
fiadds
jnp
sbb
mov
jecxz
in
mov
jo
push
aaa
sbbb
mov
idivb
mov
mov
pop
lds
mov
xchg
push
dec
sub
adc
mov
pop
popf
jmp
out
stc
xor
fiadds
xor
mov
xor
or
pop
adc
and
sbb
cs
cmp
call
xor
sub
std
clc
fisubs
orl
push
ss
sub
inc
lods
aas
pop
cmp
add
repnz
out
mov
jmp
sub
or
mov
dec
pop
insl
jle
lods
jne
in
jne
clc
stos
mov
idivl
call
movsb
dec
dec
mov
push
sbb
test
pop
jmp
mov
in
xor
jg
ljmp
mov
mov
outsl
stc
shll
and
je
movsb
scas
stc
push
cmpsl
popf
out
dec
div
pop
pop
aaa
lods
xchg
std
xor
arpl
jo
and
divb
inc
xchg
cmp
fstps
inc
jge
add
rolb
call
or
jge
and
jmp
adc
adc
icebp
call
push
jecxz
int
push
pushw
add
fldcw
insb
iret
mov
pop
sti
jmp
sub
aas
pop
sub
test
jne
shl
mov
sarl
fmul
dec
xor
inc
cmpl
nop
scas
test
xchg
nop
sbb
stos
lock
sbb
je
pusha
mov
inc
jle
out
in
cs
mov
push
adc
inc
dec
das
xlat
mov
out
inc
inc
lods
sub
outsb
clc
xor
inc
sahf
clc
insl
and
cltd
mov
sbb
cmp
outsl
and
negb
cmc
sub
fimull
add
cmp
and
fnstenv
pop
sub
mov
jecxz
stos
mov
arpl
sub
xchg
sbb
cmp
call
mov
scas
jg
xchg
mov
add
popa
addr16
les
push
dec
mov
mov
popa
pusha
xchg
mov
pop
cmp
xchg
enter
cli
mov
and
inc
loopne
fs
bound
pop
and
cmp
lods
jb
adc
pusha
in
aas
push
xor
inc
sub
call
xor
inc
jl
xchg
mov
icebp
inc
or
ds
add
insl
mov
lock
repz
aad
cmp
pop
aad
or
pop
inc
inc
es
jl
lock
adc
inc
cmp
add
je
mov
mov
pusha
or
test
cmp
lock
lret
mov
mov
pop
mov
addb
jle
loopne
inc
xchg
cmp
pushf
sbb
jne
sbb
daa
add
jle
push
pop
dec
jb
addb
pop
jbe
fadds
int3
mov
xor
repz
sbb
jge
xchg
fdivs
dec
dec
in
inc
es
xchg
lea
bound
mov
xchg
jge
outsl
lea
inc
dec
mov
sbb
pop
insl
loop
push
leave
enter
pop
push
pop
mov
aas
sbb
mov
adc
sub
std
hlt
stos
mov
jns
and
loop
subl
cmp
data16
sti
inc
imul
mov
outsb
in
popa
outsl
cmp
icebp
add
repnz
nop
popa
loope
inc
dec
int
pop
or
shrl
mov
jmp
adc
adc
test
mov
mov
ljmp
add
icebp
mov
mov
outsb
xchg
mov
dec
pop
dec
mov
sub
dec
push
mov
rcll
ret
inc
pop
movsl
into
scas
jno
lret
repnz
pop
xor
ror
loope
xchg
in
xor
scas
loop
xlat
test
mov
insb
push
jne
add
fmull
cmp
mov
out
mov
pop
and
nop
ret
out
adc
jg
cmpb
mov
arpl
mov
pop
ret
ds
jmp
js
mov
adc
rcrb
incl
push
popa
lcall
aas
loopne
dec
call
dec
out
insb
repz
and
repz
lock
push
sbb
inc
jbe
add
push
or
cmpsl
ret
xchg
adc
cld
out
cmpsl
or
movsl
cmp
lahf
in
mov
imul
dec
push
cli
lcall
pop
dec
dec
aam
mov
cwtl
xor
out
in
vpavgw
es
repz
enter
xor
fcoml
adcb
xor
fsub
imul
movsl
outsl
mov
inc
sarl
push
xchg
lods
orb
mov
leave
or
mov
subl
push
push
loopne
dec
fnstcw
test
push
jbe
sti
dec
cmp
nop
mov
cmp
jne
lods
mov
mov
inc
inc
mov
repnz
inc
fwait
jle
std
int
inc
push
je
insb
mov
lods
adc
lahf
or
mov
test
xor
aaa
fs
pop
dec
pop
rcrb
cmp
or
adc
and
xor
or
movsb
push
scas
mov
leave
inc
aam
cwtl
xchg
push
pop
je
or
movsl
mov
std
sbb
push
iret
adc
xchg
jns
jecxz
test
add
shll
dec
cli
jge
xlat
pop
mov
pusha
scas
mov
mov
jo
imul
sbb
mov
pop
push
sub
jb
psubusw
xchg
pop
xchg
rcl
cld
push
cmpsl
fildl
lods
push
cwtl
sbb
inc
arpl
xorl
inc
testb
mov
lea
push
sub
sub
test
in
sub
push
ja
and
or
hlt
push
lea
cmp
rcrb
cld
xchg
lods
dec
inc
mov
or
inc
mov
js,pt
lea
arpl
push
int3
pop
xchg
push
data16
loopne
movl
pop
sbb
std
cmp
cmp
subl
ret
push
lret
fiaddl
add
insl
test
fwait
sbb
cmpsb
scas
or
sahf
xchg
lcall
test
sbb
dec
loope
ljmp
mov
mov
sub
daa
push
cwtl
fsubr
sahf
or
pop
xchg
fs
or
add
push
mov
das
les
ds
pop
jbe
push
idivb
inc
js
scas
jle
aas
lahf
outsl
jae
xchg
std
lock
inc
ss
aam
sbb
cmpsl
jns
cmp
dec
cmp
dec
mov
repz
icebp
xor
jns
mov
cmp
push
fcomps
xchg
rol
add
inc
sbb
sti
cmp
fsubs
ja
sub
cmp
imul
jmp
frstor
js
cmp
mov
rorl
repnz
aaa
leave
mov
das
rcll
ror
mov
mov
xor
test
daa
outsl
leave
sti
push
popf
insb
test
pop
or
pop
mov
cmpsb
rcl
mov
pop
jmp
push
aad
cmc
pop
jno
lcall
repz
add
cmp
int3
mov
adc
and
int3
sub
daa
or
push
or
jmp
cmpsl
cmc
mov
cs
adcl
lcall
jb
cli
sbb
gs
repnz
lret
xor
sarl
nop
movsl
int3
xchg
pop
sbb
cmp
mov
rep
es
push
repnz
mov
jp
sub
popf
sbb
push
push
add
add
pop
icebp
js
fs
in
aad
test
or
fsubrl
daa
lods
pop
xchg
push
fisttps
jmp
scas
cli
roll
insl
outsl
ja
out
mov
insl
leave
es
pop
int
scas
andl
test
pop
vpsrld
fdivrl
add
imul
jmp
or
push
adc
iret
out
sub
cwtl
addr16
push
xlat
stc
add
jl
cmp
adc
and
cltd
nop
xor
fnstenv
cs
push
cmp
sub
sub
ja
int3
fcoml
addl
xchg
inc
out
test
lods
adc
xchg
xor
ds
or
jl
sahf
mov
push
fcmove
lock
jmp
mov
test
pop
push
mov
notl
sub
sub
add
jle
jg
sub
out
cmpl
lea
xchg
cmpsl
pop
ss
push
inc
orb
popa
iret
cld
test
cmp
cmp
loope
push
mov
js
pop
jecxz
inc
nop
dec
lcall
mov
cmp
mull
mov
imul
gs
orb
daa
mov
divb
mov
add
stc
loop
pop
sahf
sbb
mov
stos
and
jp
dec
push
subb
mov
mov
inc
lods
add
aaa
mov
ds
cmp
lret
out
or
pop
push
fnsave
push
rorb
stc
idiv
xchg
hlt
pop
icebp
inc
lock
pop
lods
mov
sub
fs
mov
jb
sbb
pop
insb
and
fdivr
or
add
jno
stos
shll
or
shrl
je
or
mov
popl
xchg
adc
pop
jae
xchg
imul
add
rorl
jnp
xor
scas
pop
arpl
fidivs
and
clc
testl
or
or
jbe
dec
cmp
and
push
push
cmp
test
roll
xor
xchg
mov
cmp
cli
pop
mov
aaa
xchg
das
jle
mov
pop
or
add
sub
sub
adc
mov
xchg
ficomps
int3
xor
xchg
test
lods
pop
sbb
sarb
lahf
dec
add
fcmovne
out
or
fbstp
pop
ficompl
xchg
push
es
cmp
lret
dec
cltd
cltd
flds
popa
daa
add
inc
or
lahf
movsl
enter
dec
fld
call
xchg
cld
xor
lret
bound
test
out
sub
in
stos
out
and
in
xlat
mov
adc
into
mov
mov
add
out
jbe
mov
mov
iret
les
rcll
jmp
int
test
pop
pop
cmp
mov
xchg
mov
dec
sbb
xor
add
fcoms
mov
inc
imul
in
faddl
test
adc
cmc
lea
popa
outsl
xor
push
xor
xorb
mov
mov
movsb
pop
gs
inc
shlb
movsl
cwtl
ja
mov
jbe
mov
mov
es
push
add
data16
cmp
cmp
lret
and
sub
int3
stc
aam
test
dec
notb
js
mov
fisttpll
mov
call
daa
lret
xor
imul
sub
lea
pop
leave
int
lods
shl
or
xor
fstps
insb
push
fdivs
test
incb
stc
mov
inc
ljmp
nop
mov
loope
jb
cltd
pusha
testl
call
sbb
pusha
popf
and
cmpsl
outsl
mov
pop
test
shrb
sbb
lsl
call
out
sub
cmp
sbb
jl
add
jecxz
pop
jmp
and
ret
out
in
lods
aas
enter
je
inc
hlt
pop
pop
popa
jecxz
inc
sarl
imul
or
cmc
incb
enter
xor
imull
out
into
push
in
add
inc
xchg
jae
xor
xchg
mov
push
xor
call
clc
daa
aaa
cltd
rorb
mov
jg
ds
loopne
imulb
mov
xor
adc
sbb
adc
imul
imul
lea
cmpsb
das
adc
mov
shlb
int
inc
add
cmp
adc
mov
dec
gs
adc
out
mov
cmp
add
sbb
daa
fnstsw
mov
pop
roll
xchg
xorb
dec
pop
xchg
push
and
enter
call
jg
mov
cmc
or
enter
cmp
xchg
sub
jb
outsb
adc
lods
jge
cmp
dec
leave
aas
and
xor
mov
lcall
cs
and
in
push
sahf
mov
inc
jle
xchg
leave
das
mov
jecxz
insl
test
and
sub
cmpsb
pop
fmuls
pop
jbe
std
in
sub
popf
or
les
fsubp
les
push
leave
mov
adc
sarb
pop
int3
aam
lods
cli
xchg
xor
jnp
mov
insl
outsl
daa
sub
lock
xlat
dec
lds
stos
mov
loopne
fisttps
ja
jbe
xchg
mov
dec
mov
xchg
add
mov
mov
xlat
and
xchg
out
loope
lods
mov
out
push
inc
in
xor
scas
dec
shrb
mov
scas
jge
cwtl
jecxz
inc
mov
add
jae
incb
adc
fstps
repnz
mov
test
fldcw
in
stc
cld
and
and
scas
jp
sbb
daa
xchg
xor
add
jl
leave
mov
push
scas
add
test
sbb
ja
add
out
cmp
mov
xchg
lds
and
mov
xchg
xchg
inc
xor
jecxz
pop
push
cli
pop
add
aaa
dec
arpl
mov
xor
inc
mov
in
pop
fs
in
loop
pop
inc
adc
popf
loope
repz
push
pop
outsb
pop
scas
ret
pusha
hlt
push
mov
cmpsb
shrl
cmp
jae
lock
xor
cwtl
sbb
mov
inc
insb
das
pop
xchg
aam
sar
mov
fnstcw
pop
out
mov
inc
test
jp
inc
rcrl
cmp
jle
std
pushf
cmp
arpl
xorl
adcl
fstps
sarl
mov
movsb
loopne
dec
pop
out
mov
push
inc
dec
cmpsl
mov
addb
lret
out
dec
cs
scas
mov
cmp
das
fwait
or
dec
sbb
jbe
sbb
in
pop
add
xlat
ret
aad
mov
lds
stos
mov
sub
push
into
movsl
add
mov
out
mulb
imul
xorb
orl
fcmovnu
add
or
mov
in
jno
fistl
das
push
shll
inc
aaa
inc
arpl
jb
test
lret
mov
pushf
cmp
testl
fisubrl
aas
and
dec
cmpb
push
xor
dec
sahf
push
scas
mov
mov
dec
shr
mov
sbb
adc
sarl
lds
mov
cltd
repz
xchg
mov
dec
fidivrl
xchg
pop
mov
test
mov
icebp
popa
testl
test
add
mov
sbb
mov
dec
mov
push
mov
repnz
test
add
pop
jge
xor
pop
ficoms
test
jo
rcl
pusha
fldl
jno
push
das
sub
jmp
push
cmpsb
push
pusha
xchg
lahf
mov
xchg
jmp
loope
icebp
lret
dec
push
ret
and
mov
scas
popf
in
pusha
in
xchg
mov
cmp
fcom
out
mov
cmpl
mov
cmp
sbb
lods
negl
pop
cmpsb
sbb
pop
lods
out
das
leave
cs
adc
inc
xchg
fiaddl
rorl
or
cmp
shrl
mov
jbe
rol
test
push
add
inc
pop
inc
jge
arpl
or
mov
mov
movsl
or
mov
sub
mov
pop
push
ss
push
push
decb
lea
mov
out
fisttpll
cmp
leave
cmp
jae
mov
push
jl
cli
mov
movsl
and
je
mov
dec
fs
pop
inc
ret
dec
dec
xchg
or
push
xchg
xchg
xor
fwait
xchg
xchg
xor
sbb
cmp
mov
sbb
push
pop
adc
mov
les
rcrl
and
subb
sti
push
mov
add
insb
cmp
aaa
les
push
pop
lret
clc
mov
lahf
cs
cmp
xor
rclb
add
sub
inc
mov
dec
ret
push
xchg
push
push
rcr
sbb
cwtl
lods
and
cld
in
daa
aad
xor
jle
cmpsb
ror
imul
jmp
sub
icebp
jnp
xchg
popf
and
fs
cmpsl
adcl
jns
shr
sub
bound
pop
inc
enter
push
cli
jo
jae
cli
sbbl
call
nop
pop
or
aam
jl
pop
adc
pop
imul
mov
or
mov
lds
or
scas
into
mov
popf
sub
mov
adc
and
xor
in
add
adc
mov
xor
inc
iret
adc
shlb
push
movsl
popa
nop
fildll
xor
in
jne
inc
ret
jg
cmpsl
fs
sub
ret
repz
daa
jns
pop
mov
xor
idiv
dec
pop
pop
xorl
sub
int3
jl
cmpsb
mov
adc
scas
dec
xchg
popl
lods
xchg
js
test
mov
int
xchg
mov
loopne
jnp
aaa
shll
sbb
out
mov
jl
int
scas
rclb
pusha
pop
movsb
jno
mov
cmp
add
sbb
outsb
icebp
hlt
ds
push
loope
pushf
mov
add
mov
sub
and
adc
cmp
inc
aad
adc
mov
push
and
aaa
pop
int3
cmp
pop
outsb
rcrl
jno
add
adc
stos
jb
xlat
add
loopne
fistps
sub
sub
xchg
jne
pop
or
adc
testl
or
pop
mov
out
les
mov
push
mov
or
test
jo
cmp
inc
xlat
push
and
je
sti
ja
mov
pcmpgtd
repnz
out
or
jnp
mov
mov
and
adc
mov
push
iret
fsubrs
mov
loopne
jae
negl
es
cmpsb
out
xor
cmp
out
xchg
cwtl
lcall
leave
dec
insl
dec
jmp
mov
mov
pop
gs
jl
daa
stos
sbb
and
jnp
mov
xchg
out
mov
xchg
cwtl
jmp
jle
push
pop
mov
sub
in
mov
sub
inc
cmp
mov
fistpl
dec
pop
movsb
aas
int3
cwtl
mov
roll
xchg
or
dec
incl
mov
filds
test
outsl
fiaddl
lret
cmpsl
add
push
stos
sbbl
sbb
mov
add
jle
jg
ds
pop
jnp
out
and
xor
imul
jo
fs
rorl
sub
aad
inc
inc
mov
jae
pushf
fdivp
xchg
cld
das
xchg
xchg
cmp
and
sbbb
lret
into
div
and
and
jecxz
sub
aad
int
shll
add
jns
cmp
push
test
je
adc
xchg
mov
add
mov
lods
cwtl
push
add
dec
scas
test
xchg
mov
jne
pop
xor
inc
push
rcr
jmp
mov
fistps
jo
fstps
mov
lods
ja
mov
popf
mov
mov
ljmp
call
inc
out
jns
xor
test
stos
jmp
and
stos
xor
ds
cmpsb
mov
push
cmpsl
pushl
lock
xor
xchg
insb
cwtl
pop
pop
pop
sub
das
xor
lea
mov
push
test
orb
out
addr16
mov
mov
ss
mov
lods
sub
mov
fbld
std
pop
cmpsl
add
out
push
imul
mov
xor
xchg
sbb
dec
mov
mov
addr16
ret
cs
in
jae
fidivs
add
rorb
scas
js
jmpw
push
jb
and
bound
dec
adc
mov
outsl
aaa
push
jns
add
xchg
add
faddl
cmp
and
xlat
out
pop
cmc
int
jecxz
xchg
jle
jnp
jb
daa
pop
mov
popf
test
pop
loopne
add
or
mov
aad
dec
aam
cs
or
mov
mov
xchg
rorl
into
cmp
outsl
fldenv
add
movsb
pop
iret
lods
cmp
orl
scas
add
addr16
in
push
xor
and
lock
xchg
jge
mov
ja
scas
pusha
aad
mov
mov
enter
cmp
and
rclb
test
push
xchg
ss
nop
push
adc
addl
cld
xor
pop
pop
jg
mov
es
jne
xor
jmp
mov
nop
dec
push
push
xchg
sbb
push
clc
sbb
add
dec
dec
leave
or
or
orb
sub
mov
lods
adc
out
cmp
scas
jge
mov
icebp
add
jae
mov
and
ss
rcrb
cmp
test
js
adc
push
sub
push
mov
push
decb
and
pusha
andb
pop
sub
call
fdivs
dec
dec
inc
pop
xor
sarb
mov
rol
stos
wrmsr
popa
inc
cld
or
insb
lock
leave
cmp
in
inc
into
out
aas
xor
mov
jne
pop
add
pushf
jl
cmc
jae
add
cmpsl
mov
pop
repnz
or
jge
xor
dec
rolb
dec
cmpsb
mov
or
xchg
aas
jmp
mov
loop
pop
pop
mov
adc
mov
aas
out
and
cmp
add
mov
out
xchg
fs
adc
cmc
shrl
jb
sub
push
xlat
ljmp
jecxz
jp
adc
mov
mov
into
aaa
fadds
cwtl
sarl
jl
jne
cmp
pop
cmp
cmp
cmp
pusha
popa
jle
pop
out
les
ret
jle
pop
insb
add
loop
or
insb
imul
movsb
outsb
out
add
xor
in
mov
data16
daa
stc
mov
jge
lret
enter
xor
xchg
mov
jl
jle
movsb
jb
sbb
push
call
je
psubb
adc
cmp
fwait
pop
xor
iret
out
dec
pop
jle
gs
in
sbb
or
dec
push
mov
jmp
scas
pop
adc
pop
mov
fcompp
aas
outsb
push
pop
mov
cmp
push
push
sub
adcb
sub
orl
sbb
out
add
stc
and
stos
loope
mov
insl
sbb
push
pop
lret
cld
jmp
popf
popf
sub
lock
cld
mov
mov
jle
push
mov
sub
xor
xchg
ds
cltd
pop
cmp
pop
or
dec
cwtl
insl
pop
push
adc
xchg
out
lret
addr16
add
ret
loopne
jecxz
jmp
imul
test
in
pop
xchg
loope
ljmp
stos
sbb
movl
out
sti
mov
pop
jns
push
nop
mov
adc
pop
ds
add
push
push
dec
popf
jmp
xor
cwtl
pushf
sbb
test
pop
in
push
jmp
mov
xchg
jle
aad
xor
outsb
in
add
cmp
addr16
clc
push
mov
lcall
adc
test
imul
stos
pop
adc
stos
in
shlb
imul
xorl
sbb
into
add
sbb
mov
push
test
pop
stos
aad
dec
inc
lods
jmp
outsb
sub
lock
aas
fsubrs
lret
andb
or
jecxz
mov
cli
cmp
mov
inc
test
or
push
sar
loope
jmp
fnsave
jge
aam
jnp
rolb
xchg
mov
sbb
sbb
popf
shll
testl
pop
pushl
xor
add
mov
sub
xchg
and
fwait
lds
mov
out
rorl
nop
mov
data16
xchg
xchg
xchg
push
jbe
adc
pop
rol
es
adc
adcl
and
sub
mov
sbb
xchg
mov
jmp
or
aad
sub
in
lea
les
ss
shll
sbb
adc
pop
xchg
out
lret
out
inc
inc
xor
mov
mov
or
push
leave
fwait
fwait
shl
gs
cld
movsb
fistpl
inc
adc
shlb
push
mov
mov
jb
cmp
lahf
xor
out
mov
mov
sub
sbb
stos
sahf
jp
and
xchg
fs
inc
addr16
cld
adc
mov
test
adcl
pop
jl
mov
cli
sbbl
xchg
cmpsl
jmp
pop
scas
sub
or
mov
arpl
jle
sub
add
mov
sub
rcl
mov
xchg
mov
mov
or
out
in
xor
fistps
movsb
and
mov
add
xchg
int3
xor
test
fisubrs
dec
mov
xchg
adc
push
mov
mov
lock
sub
lds
sbb
pop
fadds
push
cmp
xchg
mov
mov
xchg
mov
fidivs
jne
jle
jo
jbe
add
out
lcall
inc
es
and
dec
ficoml
adc
dec
stc
js
sbb
scas
dec
sti
mov
lea
test
xchg
fs
mov
xchg
cli
icebp
push
cmc
add
jnp
mov
and
push
inc
das
sub
mov
mov
lcall
xchg
add
xchg
in
cmc
out
roll
jmp
scas
xorb
sarl
repnz
pop
testb
add
cmp
in
test
xchg
and
mov
mov
and
or
ja
mov
and
add
ret
lcall
nop
and
repnz
lds
cmp
jbe
jns
mov
clc
in
push
arpl
subb
ret
mov
push
jnp
out
pop
popf
adc
mov
fs
cwtl
filds
mov
mov
bound
into
icebp
pop
push
ret
sbb
push
sbb
lds
push
stos
adcb
sub
ss
cmpsl
lahf
mov
adc
das
adc
mov
into
mov
loope
bnd
inc
cld
mov
shrl
scas
mov
pop
into
cmp
pop
jo
jnp
call
pop
test
cwtl
fs
pop
arpl
out
dec
mov
outsb
jecxz
cmp
pop
cld
insl
dec
jp
mov
leave
popf
and
stc
dec
repz
repz
jns
aas
fisubs
jnp
mov
inc
pop
cld
outsb
sbb
mov
mov
mov
repnz
repnz
das
xchg
pop
test
inc
and
sbb
into
push
xchg
inc
shl
lret
aad
cmp
or
xor
and
adc
jmp
aaa
mov
cltd
frstor
movl
jp
int3
test
push
pop
pop
aas
shll
xchg
mov
pushf
push
push
dec
xchg
xchg
repnz
decl
jae
mov
in
jns
and
jp
inc
adc
imul
pop
xor
lret
loopne
xchg
sub
mov
mov
insb
gs
cwtl
and
pop
dec
mov
call
ja
sbbb
lods
repnz
xor
xor
adc
out
rcll
sbb
mov
ss
lcall
jns
cmp
addl
lods
mov
shlb
sar
dec
sub
pop
mov
push
push
inc
addb
mov
repz
mov
call
inc
pop
and
add
lock
and
outsl
push
dec
test
inc
dec
imul
cmpsb
jae
jg
repnz
dec
call
or
mov
loop
aam
inc
xchg
push
push
arpl
outsb
bound
mov
cmpsl
dec
into
inc
outsl
out
sub
xor
ss
hlt
pop
lea
les
stos
mov
arpl
test
and
rolb
in
sahf
mov
jo
cltd
out
cmp
std
out
std
iret
pop
cmpsl
xlat
ret
push
add
jp
sub
cmp
dec
into
or
jg
mov
ljmp
subps
dec
leave
jecxz
xchg
mov
lock
or
rol
outsb
fisubrs
sbb
daa
adc
sub
shl
sbb
insl
inc
inc
push
jge
cmpsb
out
mov
or
jo
aaa
ds
pop
mov
jbe
aas
packuswb
test
fistpl
jne
or
sahf
repnz
push
aaa
pop
jae
cmp
sbb
push
jo
clc
add
mov
sahf
push
cs
pop
das
loopne
mov
arpl
arpl
lea
or
or
cmp
cmp
mov
mov
or
lret
outsb
stos
pop
sbb
rolb
or
adc
repz
jl
stos
jne
cwtl
adc
lcall
mov
shl
stos
sbb
or
subb
hlt
or
mov
xchg
call
and
stos
add
cmpsb
out
add
push
gs
lret
stos
sti
or
sub
xor
cli
popa
jno
push
adc
pop
mov
loop
sbb
add
fwait
loope
jecxz
add
movb
xor
mov
xor
mov
sub
movsl
mov
inc
leave
pop
aad
imul
jmp
and
mov
sbb
test
and
add
in
repz
dec
xor
xchg
insl
arpl
and
xchg
inc
int3
cli
fucomi
jbe
lcall
dec
xor
lock
arpl
push
add
addr16
out
push
cmp
inc
test
inc
stos
xor
adc
call
jmp
xchg
add
lret
mov
test
inc
cwtl
popl
or
aas
out
xor
mov
cltd
enter
icebp
inc
test
sbb
ja
rclb
jmp
aaa
add
popa
shr
sbb
lret
aad
scas
shlb
test
sub
les
int
mov
sti
lods
xor
jne
dec
bound
adc
push
and
jmp
cli
data16
test
pop
push
negl
pop
jg
mov
lods
in
lds
pop
adc
movsb
pop
xor
pop
sub
in
lods
or
mov
push
mov
pop
sbb
xchg
mov
lods
jb
push
dec
jns
das
push
insb
sbbl
shll
cmp
cmc
xchg
mov
mov
dec
fsin
jb
std
sarl
jbe
pushf
xor
cmp
jae
and
cwtl
sbb
test
in
xor
adc
aam
mov
push
push
popf
dec
lahf
and
pop
adc
xchg
fidivs
add
adc
std
mov
test
mov
jecxz
data16
sub
ret
sahf
enter
pushf
loopne
and
flds
das
mov
cmp
mov
repnz
jb
out
push
sub
lcall
mov
clc
cwtl
mov
hlt
outsb
add
repz
clc
insb
iret
mov
sbb
leave
int
subl
outsb
mov
test
push
addr16
add
push
or
shlb
iret
cmpsl
mov
hlt
in
jae
jmp
enter
dec
push
adc
inc
aad
ds
sub
cwtl
ror
dec
pop
sti
cmp
sbb
into
scas
mov
js
leave
imul
adc
out
je
pop
add
dec
mov
in
cmp
cs
stos
stos
icebp
insb
les
loop
xor
lea
xchg
and
loopne
and
push
or
pop
leave
mov
lret
repnz
sar
push
add
mov
xchg
fs
push
mov
jno
mov
xor
pop
or
pop
jbe
stos
xchg
add
jb
jge
add
mov
lods
jne
popa
stos
xlat
into
and
dec
push
sub
add
mov
or
lods
ds
mov
insb
mov
insb
cmpsl
ret
test
push
out
out
mov
xchg
dec
in
jg
test
hlt
rcr
dec
pop
sahf
jno
or
fs
sar
fistl
aam
mov
dec
pop
mov
rcrb
movsl
divb
es
xorb
inc
pop
pop
addr16
pusha
fsubl
or
stos
jle
std
or
test
fsubs
imul
ret
bound
ret
leave
lock
arpl
pop
aas
mov
push
push
cmp
xor
adc
sahf
push
add
clc
sub
cmpsl
sub
xorl
movaps
add
adc
pusha
jl
push
mov
xor
xor
aaa
sbb
cltd
imull
roll
out
addr16
sbb
push
add
push
and
nop
pop
subl
fbstp
je
mov
dec
rorl
cld
cmpsb
dec
xor
notb
loop
push
cwtl
je
cmp
mov
mov
pop
mov
push
retw
out
cwtl
lea
sbb
mov
rcrb
hlt
pop
push
mov
pop
loope
loop
cli
notl
stos
jo
push
aam
jo
sbb
lret
mov
es
cmp
inc
mov
std
xor
mov
mov
icebp
adc
les
outsb
xor
test
xor
push
xlat
add
push
stos
xchg
sub
sub
test
mov
push
add
jge
cmp
rclb
rcrb
inc
aaa
test
sbb
or
xlat
into
ret
and
sub
fbstp
shl
fsubrs
adc
bound
xchg
pop
mov
sbb
mov
ficoms
jecxz
ds
lcall
outsl
insb
push
pusha
bound
stc
add
ja
sub
lret
in
pop
adc
mov
cs
push
test
mov
rcl
scas
movsl
inc
add
gs
stos
add
xchg
in
arpl
enter
push
in
or
cltd
mov
cmp
sbb
ja
xchg
sbb
imul
fwait
jge
lock
stos
cmp
cmpsb
push
mov
mov
arpl
or
jne
subl
adc
dec
jp
enter
add
or
cs
imull
cmp
movsb
std
jl
dec
and
jecxz
mov
cwtl
cwtl
test
xchg
push
dec
add
sub
ret
mov
lods
jo
jbe
iret
data16
mov
fcompl
adc
mov
jae
out
test
mov
sub
jb
fwait
ret
pusha
adc
outsb
rclb
ljmp
gs
push
scas
pop
dec
sub
cli
sbb
push
cltd
rorl
roll
mov
add
add
mov
xchg
sub
cs
mov
push
jno
subb
add
popf
mov
in
cmpsl
pop
jg
xchg
pop
jl
dec
push
pop
jg
mov
nop
insb
cmpsb
mov
popl
mov
aaa
pop
sub
popl
dec
sbb
dec
jno
ljmp
pop
nop
rcll
mov
out
push
push
adc
mov
add
jno,pt
mov
sbb
sub
push
fnstcw
imul
sti
push
mov
int
rcrb
jecxz
aaa
jnp
xchg
mov
imul
inc
jbe
dec
mov
xchg
dec
xor
and
movlps
movsb
lods
jne
sub
or
sub
sub
sbb
insl
sub
incl
gs
stos
dec
or
outsl
sub
nop
adc
js
imul
and
jmp
in
shr
pop
push
in
mov
xor
fsubs
push
jge
inc
add
int
out
pushf
sub
ret
adc
lea
cmc
push
incb
or
test
pand
ss
add
cwtl
popa
pop
mov
dec
jmp
inc
aam
push
cmp
xor
je
popa
push
pop
mov
push
cmp
xchg
cld
xchg
xchg
push
push
cmc
xchg
insl
clc
cmp
in
adc
and
xchg
jne
clts
mull
cmp
es
mov
or
mov
popa
ret
fistps
pop
popa
inc
imul
fiadds
cmp
cltd
mov
lcall
adc
leave
add
push
cli
adc
nop
std
and
dec
sbb
pop
nop
fmulp
push
test
jg
push
sbb
add
cmp
lret
jbe
out
cld
pop
jb
test
cmp
lods
pushf
cwtl
xor
out
les
mov
out
js
mov
adc
sbb
jmp
test
pop
lods
pop
test
in
adc
add
out
or
cmc
sbbl
dec
outsl
lds
dec
sub
sbb
mov
cltd
das
inc
sub
sub
pushf
jg
jae
xor
mov
mov
movsl
cmp
sbb
ss
and
arpl
xchg
pushf
loop
insb
sub
pop
cmp
shll
int3
rcll
and
lods
push
jp
dec
outsl
std
imull
xor
idivl
jmp
mov
cmp
aas
nop
add
and
cmp
inc
insl
mov
scas
in
fbld
js
arpl
fildll
rolb
and
call
inc
nop
dec
pusha
push
lea
mov
add
jb
test
pushf
lods
bound
sbb
test
movsl
sahf
push
jp
or
xchg
lds
nop
es
dec
cmpb
cld
mov
xor
xor
pop
sahf
dec
daa
cmpsl
cmp
xchg
jno
cld
lods
and
push
test
mov
bound
pop
add
xor
sbb
sub
pop
pop
iret
cmp
add
dec
dec
or
daa
mov
xchg
jbe
divb
out
stc
das
jmp
aaa
outsb
stos
imul
rcrb
movsb
dec
cmc
xlat
pop
add
sub
stc
mov
icebp
add
shrb
hlt
in
xchg
cmc
mov
mov
movsl
push
jne
hlt
mov
adc
adc
fadd
js
mov
pop
pop
sti
dec
or
popf
clc
push
dec
jecxz
or
and
pop
dec
jns
call
add
sub
and
fs
sub
pop
pop
setnp
inc
inc
lahf
pop
and
cmp
cmp
insb
xchg
jnp
lret
add
pop
xor
xor
jp
lods
mov
mov
jmp
add
push
inc
inc
int
das
movsb
mov
mov
cmp
lock
adc
cmpb
ret
sahf
mov
test
xor
cmp
out
shlb
and
popa
lahf
and
sub
mov
jle
mov
aad
mov
jno
ss
std
ds
xchg
jle
cmp
out
out
push
cmp
lods
mov
xor
sbb
jbe
mov
iret
cmpsb
loope
adc
or
mov
fistl
andb
push
rclb
out
mov
sub
cmp
dec
mov
cli
aas
xchg
pushf
pusha
ficomps
jle
lret
push
mov
leave
and
add
mov
sahf
ret
movsl
mov
ret
jns
mov
cld
jbe
pop
pushw
std
out
xchg
pop
jge
cltd
fwait
mov
test
add
mov
mov
or
pop
mov
jae
adc
cmp
add
jmp
mov
push
push
jno
out
dec
inc
enter
imul
xchg
and
mov
leave
jae
imul
jl
out
loop
mov
or
outsl
xorl
sub
loope
mov
jmp
xchg
cmp
stos
jbe
push
aam
mov
mov
dec
jbe
sub
jg
xchg
push
sbb
mov
or
ds
mov
mov
mov
ret
int
popf
add
mov
jne
loopne
add
push
mov
push
fisubrl
sub
arpl
fstl
push
sbb
hlt
inc
ficompl
pop
xor
cmp
ljmp
aas
addl
mov
cltd
leave
test
scas
and
pop
fwait
pushf
xchg
xchg
dec
sbb
std
sbb
stos
insb
sahf
dec
add
xchg
cmp
std
or
mov
sarl
shl
adc
mov
cmp
and
xchg
mov
jb
add
inc
sub
sbb
lods
daa
inc
adc
rolb
sub
or
mov
xchg
pop
and
shlb
adc
cmpsb
mov
aas
aas
xchg
dec
adc
mov
es
adc
adc
adc
mov
andb
xor
enter
loop
imul
ljmp
sbb
daa
loopne
push
js
mov
jg
insb
or
jo
sahf
xlat
jle
das
and
mov
fisubl
scas
cwtl
add
call
in
fdivl
jb
add
fstpl
test
das
push
jl
lret
outsb
dec
loop
ret
int3
mov
add
aas
xchg
xor
test
scas
std
flds
insl
mov
adc
cmp
decb
and
xor
movsb
loop
push
jne
ds
notl
imul
mov
jg
xchg
fsubrl
data16
adc
pop
sbb
sub
push
mov
mov
inc
int
add
dec
popa
gs
es
mov
loopne
hlt
pop
xor
jno
outsb
jmp
nop
rcll
cmpb
cmpsl
pop
and
iret
jo
lds
push
dec
cmp
or
mov
mov
test
daa
addr16
mov
jge
pusha
push
loop
mov
inc
push
das
mov
push
xchg
inc
jg
ljmp
insl
adc
ret
pop
hlt
jg
push
bound
or
lcall
mov
arpl
popa
push
std
mov
jmp
mov
xor
lret
pop
call
xchg
fcomps
jns
cwtl
scas
inc
mov
adc
shlb
cmp
adc
jo
leave
xor
inc
repnz
mov
sub
repnz
mov
and
icebp
mov
adc
xor
push
aad
gs
lods
movsb
shll
mov
ret
mov
loope
xchg
mov
imul
xor
jns
imul
lcall
loope
pop
scas
in
leave
es
out
mov
jle
jns
ret
leave
inc
and
lcall
imul
insb
xorb
test
or
jo
xor
jg
jg
adc
xchg
xchg
mov
in
scas
add
push
inc
lods
nop
adc
aam
xor
nop
xlat
mov
pop
cmp
out
mov
lret
daa
mov
outsb
jl
fstpl
or
daa
inc
punpcklbw
lcall
inc
xchg
testl
aas
and
xor
jge
sub
mov
sub
mov
pop
pop
sbb
pusha
out
pop
lahf
daa
sub
test
xlat
icebp
insl
adc
cmp
pop
daa
fs
lret
je
xchg
push
or
inc
push
pusha
sbb
mov
xor
and
xchg
pop
inc
int3
xor
inc
in
addr16
dec
addr16
stc
in
lea
sub
cwtl
cmpsl
mov
and
cmpsb
pop
negl
out
mov
push
push
xor
roll
hlt
out
mov
fsts
cmp
or
lock
mov
movsb
aaa
pop
adc
adc
and
icebp
mov
lret
pop
push
mov
nop
ljmp
add
push
dec
lds
sub
fdiv
dec
lods
push
aam
xchg
xor
or
jl
sbb
pusha
pop
push
lods
aam
add
adc
clc
pxor
mov
add
nop
sarb
jle
arpl
or
inc
mov
pop
and
sbb
dec
cltd
shll
inc
arpl
or
arpl
add
inc
ja
repz
cmp
inc
sub
fs
add
clc
loope
xor
int3
arpl
roll
mov
adc
mov
xorb
mov
ja
je
or
inc
je
sub
ljmp
scas
dec
cmp
int3
clc
or
mov
push
dec
shrb
es
mov
sbb
jge
bound
sbb
adc
shrl
popf
nop
dec
xor
xchg
movl
xor
loop
adc
into
and
xchg
dec
fistpll
xchg
mov
inc
push
sbb
mov
cli
xor
daa
jge
sub
inc
into
stc
push
sub
pop
dec
cmp
add
loop
pop
leave
call
test
cld
or
push
jecxz
mov
inc
cmp
or
aad
jg
or
cmc
mul
fs
ret
subb
in
ret
inc
or
daa
sub
jns
dec
into
icebp
sbb
outsl
lods
mov
mov
addl
and
fadds
icebp
cmc
clc
and
mov
out
jno
cmpsl
push
xchg
out
cltd
pop
dec
xorb
xor
roll
push
arpl
pop
in
cmp
dec
data16
scas
sub
aam
cwtl
and
jbe
inc
push
xlat
add
je
jo
mov
call
pop
cmp
mov
scas
outsl
addr16
add
test
and
in
sbb
push
pop
mov
in
imul
mov
divb
mov
fxch
pop
fcmovb
outsl
or
adc
add
cmp
and
mov
jp
mov
jne
sub
scas
mov
notb
test
xchg
mov
ljmp
lret
or
and
dec
out
mov
aaa
data16
loopne
addr16
movsl
ret
add
mov
and
clc
pop
popa
mov
cmp
out
lret
orb
push
mov
sahf
mov
orl
int3
and
mov
xchg
mov
sub
add
xchg
es
jb
nop
leave
dec
mov
ds
push
jns
lods
dec
insb
sub
fstps
popa
jnp
dec
inc
push
loope
sbb
into
inc
jae
shl
bound
in
xchg
into
in
jge
int
jge
sbb
xlat
fwait
stc
jno
dec
jns
dec
fisttpll
les
adc
insl
data16
adc
cli
stc
clc
push
les
js
out
push
imul
jmp
ret
cltd
xor
mov
adc
xchg
push
inc
ds
movsl
mov
or
lods
or
ret
push
or
mov
jmp
aam
add
mul
lret
mov
pusha
fucomi
add
mov
push
bound
fisttpll
pop
push
push
xchg
out
shl
in
clc
lret
repz
out
push
ljmp
jp
add
outsl
inc
jp
int
jl
or
das
sarb
mov
dec
cli
gs
mov
in
pop
outsl
inc
lea
ret
inc
test
lea
popa
push
orb
push
lret
mov
xor
and
sbb
subb
dec
insb
jg
fidivrl
jno
lahf
lahf
inc
stos
cmp
mov
sbb
fs
dec
ret
push
adc
inc
fs
adc
and
pop
call
fldt
push
sbbb
popa
or
test
sub
fsubl
xor
jl
test
inc
gs
pushf
dec
cld
decl
push
ficoms
push
cli
sbb
cmp
ljmp
dec
jecxz
jns
inc
call
popf
mov
xchg
scas
push
jbe
push
lock
xor
sbb
in
inc
fwait
rcrb
loopne
ret
sbb
mov
lock
movsl
xchg
mov
mov
mov
pop
sbb
lcall
xchg
movsl
bound
mov
pop
inc
addb
and
xchg
dec
cmpsb
gs
mov
mov
jns
arpl
mov
jmp
mov
das
imul
pop
lods
push
fldl
add
jp
leave
or
rcr
inc
sbb
push
and
jg
movsl
mov
add
jno
push
mov
jo
rclb
cmc
jnp
lahf
mov
das
leave
shrb
pop
mov
repnz
add
out
aam
das
push
cltd
sub
data16
maxps
aam
dec
xor
pop
push
stc
add
mov
lcall
inc
sub
insl
add
aas
pop
push
jns
cwtl
and
adc
inc
aaa
imul
popl
inc
mov
jg
sub
popl
nop
addr16
sub
lret
dec
mov
sbb
fidivl
mov
stc
sbb
mov
int
mov
sub
cmpsl
push
jno
mov
aam
lret
jne
jo
jbe
sub
jbe
outsb
mov
jmp
cmc
xchg
test
test
rclb
and
mov
dec
fs
push
aaa
dec
inc
bound
mov
ds
call
pushf
mov
cli
mov
inc
test
sbb
mov
movsl
das
fistpl
out
outsl
jg
jg
adc
fs
cmp
adc
lds
iret
fimull
pushf
pop
aam
daa
lcall
dec
inc
pop
sub
adc
xchg
add
dec
lods
cs
inc
jmp
fcomps
push
lcall
ret
add
or
and
shrl
adc
lds
daa
jns
mov
shrb
mov
mov
sub
aas
and
mov
mov
add
or
mov
ret
ljmp
jmp
sub
or
push
loopne
push
cmc
adc
rep
push
outsl
add
inc
aam
mulb
mov
je
cld
dec
adc
cld
pop
cmp
mov
xchg
loope
sub
cmp
mov
scas
mov
loop
popf
push
lcall
fsubs
push
jmp
in
je
add
mov
jge
dec
add
adc
imul
push
shl
notb
jb
pop
dec
and
inc
push
and
and
jge
mov
insl
cmp
fsubrs
push
sarb
and
xor
and
fsubr
push
in
int
mov
ljmp
jae
fstpl
mov
ss
adc
jb
inc
mov
dec
int
push
cmp
mov
push
mov
jae
addr16
and
movsb
adc
test
pop
push
push
insb
inc
pop
cld
pop
or
pushf
push
iret
fistpll
aad
pop
fadd
jno
lret
push
mov
clc
xchg
mov
test
ret
daa
xchg
sbb
jno
loope
iret
into
cs
mov
shlb
in
out
in
fisubrs
sbb
cltd
f2xm1
push
ret
scas
mov
sub
scas
and
mov
enter
fs
test
cmp
pushf
std
xchg
insb
icebp
cld
fnstsw
cmp
roll
dec
sbb
fdivrs
xor
aad
dec
mov
adc
fs
mov
and
xor
inc
pop
and
jns
outsl
stc
cmp
enter
popf
jg
das
inc
shl
and
push
jmp
dec
ror
cwtl
inc
add
mov
cmp
mov
cmpsl
adc
xor
push
out
jno
mov
jge
xchg
outsb
or
xchg
shrb
xchg
jno
push
push
stos
loop
fsubs
loopne
dec
jbe
scas
sub
jb
cmc
popf
loop
adcl
mov
jne
mov
dec
jno
jg
xchg
aas
idivb
adc
sbb
and
sarl
pop
mov
ret
sbb
mov
xor
jno
or
seta
xchg
pop
jnp
sti
mov
pop
movsb
imul
es
stos
imul
jbe
sub
fildl
jne
fists
adc
or
imulb
shrb
mov
fdiv
mov
aam
push
dec
or
dec
loop
add
xchg
adc
arpl
dec
cmp
scas
scas
shll
aas
xor
cmp
cmp
pop
outsl
push
out
cmc
push
mov
sub
mov
mov
mov
pushf
push
fwait
lret
mov
gs
jle
mov
dec
lahf
ja
jge
scas
aad
inc
xchg
dec
call
mov
daa
jnp
cmpsb
mov
jae
push
sub
jmp
dec
sbb
das
aas
sti
mov
pop
lcall
adc
jg
xchg
inc
pop
pusha
xor
or
cwtl
cwtl
aam
popa
or
xchg
movsb
adc
xor
div
and
test
adc
dec
sarb
das
sub
add
add
xchg
jle
mov
add
bswap
add
mov
lea
add
iret
bound
sub
shl
pop
dec
in
add
add
sub
mov
dec
pop
cmp
lahf
mov
mov
ljmp
add
pop
ljmp
jmp
sbb
loope
outsb
dec
jae
inc
shll
or
mov
mov
leave
out
inc
xchg
mov
xlat
fsubrl
cmc
and
jg
mov
adc
sahf
test
fidivrl
leave
mov
jns
sbb
push
lea
add
mov
ljmp
subl
ret
out
or
loope
mov
in
scas
les
jge
sbb
sarl
adc
repnz
push
and
jne
cmc
jle
shlb
xchg
fldl
fisubrl
mov
int
ja
lcall
movsb
dec
ljmp
jo
popa
clc
mov
mov
gs
insb
arpl
cli
adc
push
iret
bound
inc
inc
popa
sub
bound
mov
add
add
je
leave
loop
cltd
sub
push
lcall
jb
sub
xor
dec
dec
adc
imul
fs
arpl
cmp
xor
jo
inc
stc
rorb
popf
mov
lcall
roll
in
xchg
inc
aaa
fdivrs
adc
cs
fnstcw
fs
test
ljmp
mov
and
adc
lahf
test
dec
inc
les
fisttps
add
rcrb
or
sbbl
mov
les
cmp
or
pop
insb
add
loope
in
mov
fsub
cld
dec
jnp
ss
push
int3
add
inc
inc
push
mov
push
loop
hlt
mov
nop
popa
pusha
mov
mov
outsl
dec
sti
mov
cmp
cmp
sub
rcll
addb
or
into
leave
or
lea
xchg
sub
out
mov
adc
shll
or
jmp
fiaddl
push
cmp
gs
inc
lahf
inc
test
adc
cmc
inc
dec
mov
mov
xor
mov
xor
scas
inc
xchg
dec
sub
pop
or
call
xchg
mov
lret
xor
cwtl
dec
mov
xchg
and
jo
cwtl
test
ret
mov
mov
mov
add
inc
or
mov
xchg
push
jecxz
sub
xor
and
lret
int
pop
or
xchg
outsb
mov
fbld
shlb
std
cmpsb
or
mov
jo
pop
sub
sbb
sbb
inc
mov
mov
mov
scas
in
stos
xchg
mov
rdmsr
iret
lcall
inc
dec
or
mov
lahf
outsb
imul
imul
xlat
sub
mov
dec
arpl
dec
push
mov
rcrb
in
jl
push
call
in
lods
lea
dec
jae
icebp
ret
sbb
out
add
orl
fdivr
mov
adc
stos
xor
neg
sbb
ret
clc
hlt
gs
ljmp
xor
inc
push
pushf
stos
inc
mov
scas
mov
sbb
daa
in
sub
sub
mov
inc
jae
lcall
hlt
and
xor
xchg
mov
adc
test
dec
inc
andb
test
xchg
icebp
sbb
insl
add
mov
sbb
dec
push
movsb
and
notl
js
negb
idiv
jnp
mov
jmp
test
ficompl
inc
push
inc
push
sarb
movsl
rcrb
je
stc
out
mov
cmp
int
pushf
push
insl
dec
mov
mov
int
push
xchg
and
mov
rorl
ja
push
movsb
jae
sbb
push
xchg
pop
sbb
xchg
loopne
jb
shl
daa
subb
jmp
in
popf
ret
add
mov
cmpsl
xchg
out
ja
sbb
xor
add
adc
popf
in
lcall
add
mov
jnp
push
cmpsl
sub
cwtl
int
mov
shlb
xor
loope
mov
hlt
pop
test
dec
jo
das
call
cli
rcll
movsb
or
outsb
sub
subl
dec
lods
inc
cmc
cmp
pop
pop
pop
adcb
push
sub
incl
lods
push
inc
andb
cltd
adc
fimull
mov
mov
loop
sbb
sub
adc
dec
stc
add
ja
lock
mov
daa
loope
add
out
jmp
shrl
cmp
ja
jne
insl
imul
mov
mov
xlat
push
cld
fnsave
dec
add
scas
nop
xor
out
and
cmp
in
push
ret
jmp
fldcw
out
mov
loope
xor
lret
loopne
xor
outsb
daa
outsl
ja
pop
sbb
xchg
ficoml
sbb
inc
jae
sbb
scas
and
fsubrs
mov
mov
add
fidivrs
ljmp
pushf
sbb
imul
jne
add
sarb
push
dec
lods
pop
and
sbb
sub
lock
les
js
dec
stc
int3
jns
rorb
jecxz
adc
sarb
insl
sbb
pop
sub
mov
addr16
pop
sub
adc
push
push
test
shrl
fwait
add
call
ret
ret
xchg
mov
mov
adc
push
mov
popf
repnz
cld
xchg
js
jge
repnz
sahf
mov
cvtps2pi
rcl
hlt
popf
daa
push
or
xchg
push
mov
inc
push
out
inc
aaa
jecxz
adc
inc
or
cli
pop
sti
mov
shrl
xchg
stc
movsb
orl
fildl
jno
roll
mov
pop
mov
inc
repnz
mov
mov
sbb
fcompl
cmp
xchg
out
sub
jg
jmp
mov
sbb
adc
xor
jo
fdivl
xchg
ja
rclb
mov
das
pop
push
push
les
movsl
mov
inc
add
subb
or
jbe
mov
aam
repnz
add
mov
test
test
gs
xor
push
lret
fcoms
cld
sub
insb
popa
test
mov
in
push
ljmp
incl
mov
push
ss
int
cmp
push
lcall
stos
cmc
adc
push
icebp
sti
pop
or
imul
jmp
int
call
in
out
sbb
inc
gs
inc
out
pop
and
fnstcw
push
lea
or
loope
push
mov
pop
adc
pop
call
xchg
mov
incb
js
adc
pop
mov
adc
fcoml
and
leave
shlb
das
dec
add
cld
pop
cmpsb
sbb
sbb
subb
cmp
xor
leave
fdivrp
stos
sub
cmp
jge
repnz
xor
cli
push
jp
lret
dec
cmp
pop
cmp
popf
rcrb
inc
lods
cmp
cmp
mov
mov
call
jl
jmp
cs
or
pop
cmp
xor
adc
jb
pop
cltd
outsl
lcall
mov
mov
cmpsb
shlb
je
push
out
add
sub
adc
xchg
adc
jno
icebp
stos
inc
cltd
mov
add
xchg
inc
sub
movsl
and
push
loop
je
adc
js
sub
mov
push
pop
out
inc
das
cltd
jno
adc
mov
xlat
jmp
ja
push
mov
and
xchg
mov
aas
insb
fs
aas
mov
jg
neg
cltd
add
das
lret
mov
test
mov
aad
cmp
jmp
enter
sub
add
bnd
push
mov
test
sti
scas
xor
imul
jp
aas
mov
cmp
push
or
push
repnz
inc
into
andb
repz
mov
pop
stc
xchg
dec
ret
jns
lock
inc
jmp
jecxz
rorb
fmul
pop
or
add
xchg
outsb
push
jge
das
fldcw
inc
je
push
or
mull
pushf
psubw
and
push
mov
pop
data16
mov
test
roll
sti
es
lahf
jg
jle
cli
rcrl
adc
sub
mov
jmp
jae
insl
dec
lahf
addr16
std
lea
daa
lods
enter
push
imul
clc
dec
inc
cld
leave
lret
inc
add
stos
mov
cmp
cmpb
lock
xchg
subb
jge
inc
out
out
lods
outsl
sub
mov
int3
mov
add
dec
inc
pop
jne
or
push
pop
repz
jae
sbb
mov
aaa
in
mov
or
fcomps
leave
fucomp
outsl
jle
xor
int
pop
jge
scas
and
testb
xor
mov
dec
fwait
outsb
setno
int3
mov
dec
lret
jecxz
lret
inc
and
adc
loop
es
iret
xor
mov
ljmp
add
jp
imulb
sub
push
mov
dec
lcall
pop
xchg
shrb
outsl
ret
shrb
popf
cld
ja
ds
rclb
daa
insb
mov
mov
push
jbe
inc
sbbb
out
int3
imul
stc
add
xchg
push
ficoms
stos
in
insl
loop
inc
or
xor
mov
mov
arpl
sub
push
insb
sbb
mov
pop
dec
fwait
lds
outsb
inc
adc
lcall
mov
cld
popf
lods
mov
pop
fcoml
inc
dec
or
inc
inc
dec
mov
fldl
sub
test
adc
jg
pop
gs
push
sub
mov
and
cmp
lret
xchg
movsl
inc
fsub
add
loop
test
jle
lahf
aaa
test
imul
leave
or
sar
mov
shl
jmp
iret
shl
out
adc
imul
pop
imul
in
xor
popa
test
jns
repnz
adc
aad
push
dec
lahf
jbe
stos
nop
inc
adcb
popf
test
and
movsb
pop
mov
sub
addr16
cltd
lret
adc
adc
push
sbb
mov
clc
lret
inc
data16
jg
std
jge
repnz
add
inc
cmpsb
iret
and
sahf
pop
lock
not
push
jno,pn
and
fcoms
jl
mov
fistl
mov
addr16
cmpsl
or
in
sbb
js
xchg
ficomps
inc
popa
xchg
in
popa
pop
movsb
add
mov
addr16
mov
jns
cs
mov
ss
test
pop
pop
cmpl
jnp
inc
xchg
pop
call
mulb
inc
jg
pop
pushl
lock
cmp
pop
dec
test
stc
mov
pop
in
pop
lret
fnstsw
mov
mov
pushl
data16
pop
mov
repz
jo
test
mov
push
in
sti
in
sti
dec
rorb
inc
mov
mov
sar
mov
inc
rorl
lret
in
push
mov
outsb
xchg
out
lret
js
xlat
jmp
or
adc
js
test
ja
shll
das
pop
or
dec
mov
push
jo
or
mov
fmuls
sti
out
in
sti
adc
jmp
and
add
aaa
insb
das
gs
jmp
jb
outsl
cmpb
aaa
cmp
add
dec
into
cld
mov
notl
es
push
aaa
lcall
std
lea
push
arpl
push
test
fbstp
sbb
pop
add
js
push
std
mov
sub
add
mov
jl
loope
cmp
sbb
xchg
je
aaa
cmp
cwtl
xchg
cld
add
sbb
scas
std
repnz
iret
adc
sub
jo
inc
mov
pop
dec
orl
cmpl
lret
dec
sub
std
popa
mov
stc
push
xchg
jg
mov
and
inc
pop
xchg
call
adc
sub
fsubrl
lods
adc
enter
ror
out
outsl
enter
aas
fistl
fldl2t
lahf
sbb
call
push
leave
icebp
test
add
xchg
sarb
rcrl
mov
sbb
jno
in
js
push
fists
movsb
rcr
dec
mov
sti
dec
ljmp
dec
push
mov
jge,pn
test
xor
and
ja
mov
bound
pop
adc
cs
or
mov
mov
push
pop
gs
xchg
ljmp
add
and
test
fistl
add
insb
add
and
les
add
cmp
xor
mov
lcall
mov
aam
arpl
mov
cmp
push
add
cmpsb
mov
sub
icebp
icebp
aam
pop
cli
subl
sub
xchg
cmpb
sub
jne
mov
movsb
push
lea
mov
dec
out
mov
dec
cmp
out
loopne
jl
adc
mov
sub
jno
stos
dec
aad
dec
or
daa
mov
dec
xchg
xchg
push
movsl
adc
cmp
add
push
jo
push
dec
movsl
lock
mov
ljmp
sub
popf
xchg
adc
stos
jnp
lret
int3
xor
shlb
dec
mov
inc
mov
mov
cmpsb
das
ja
daa
rcl
add
xchg
repz
adc
mov
cmc
stos
cltd
fmul
sbb
out
roll
gs
outsl
sbb
out
je
test
out
iret
daa
sti
fimull
fdivrs
ffree
leave
dec
fmuls
cld
cmp
push
or
jle
fidivrl
cmp
sub
add
cmp
push
dec
rorl
push
adc
dec
xor
mov
bound
out
inc
mov
and
pop
xor
stc
scas
cmp
fdivr
adc
mov
xchg
aas
popf
xchg
cmp
and
pushf
icebp
cmc
jno
jmp
stos
dec
cmp
inc
cs
mov
or
mov
lret
ja
ljmp
jnp
inc
pop
loop
push
ds
shll
fs
mov
scas
sub
mov
mov
lea
adc
sahf
test
push
loopne
jno
dec
fst
xor
int3
ja
mov
xlat
sub
fists
xchg
kmovb
mov
xor
xchg
push
adc
mov
dec
loop
mov
fs
jmp
fwait
inc
lds
xor
inc
xchg
mov
dec
push
add
cltd
outsb
fwait
push
jge
push
les
fisubl
sub
add
xchg
cs
into
insb
loop
cmp
fcoml
xor
cmpsl
mov
sub
cmc
and
test
xor
cmp
xchg
dec
lods
movsb
ja
loope
xchg
cmp
or
mov
pusha
ljmp
into
sbb
enter
xchg
xchg
int3
jle
sub
and
clc
inc
scas
push
mov
mov
mov
jb
das
out
inc
arpl
pop
jne
mov
das
adc
outsl
out
pop
aam
pop
adc
cld
dec
sub
xor
mov
xchg
ss
and
jne,pn
cwtl
cmp
imul
leave
mov
incb
mov
or
push
les
xchg
push
sub
enter
sahf
shll
sahf
mov
mov
push
inc
or
sub
push
jns
stos
or
sub
loopne
das
dec
in
leave
in
sahf
mov
pop
lock
lcall
movsb
test
jo
ss
jge
roll
adc
movsl
das
insl
cld
popf
push
std
dec
xor
push
movsb
xor
lret
enter
loop
xchg
jg
out
xor
dec
rcl
pop
mov
mov
inc
in
inc
movsl
iret
cmp
inc
gs
jl
adc
std
jbe
mov
push
mov
hlt
leave
xorl
push
pop
syscall
adc
push
pop
ret
ret
and
add
mov
mov
jmp
lods
inc
testl
sbbb
jbe
xchg
rdpmc
ficomps
jl
jl
cltd
int
jecxz
and
push
out
and
popf
sahf
addr16
cwtl
in
jl
add
arpl
add
imul
loope
add
sub
adc
mov
push
adc
xlat
ss
and
daa
imul
movsb
movsb
gs
fwait
dec
pop
lret
outsl
push
xor
out
aaa
or
cmp
ret
xor
das
ficompl
push
push
into
xchg
or
cmp
cwtl
aas
das
jo
scas
lahf
jbe
lcall
push
bound
insl
imulb
aam
and
cmp
mov
ja
or
sahf
ss
aad
mov
mov
sub
int
xchg
or
ret
stos
mov
neg
xor
fsubs
cmp
iret
popf
cmp
sub
std
popa
roll
into
xchg
sub
shr
loop
lret
sbb
insb
rcr
test
sub
stos
ljmp
jmp
std
mov
and
fistps
in
dec
xchg
lret
and
adc
add
sub
or
sarl
mov
mov
push
pop
ja
mov
push
movsl
clc
jbe
sbb
bound
cli
fstpt
mov
fisttpll
in
and
lret
scas
gs
fwait
sbb
pop
fadd
daa
lock
add
ja
pop
mov
aaa
xorl
les
insl
cwtl
cli
mov
sbb
cs
jecxz
xchg
sbb
jl
cmc
stc
and
mov
xchg
xor
add
mov
pusha
xor
xchg
sub
adc
fnstsw
jmp
mov
cmpsb
int
leave
pop
push
push
aas
fbstp
pop
push
shlb
xor
cmp
sahf
xchg
fwait
ret
pop
inc
cmpsb
stos
xchg
sub
jl
cmp
fnstenv
cmp
aam
mov
or
xor
inc
sub
mov
pusha
iret
cmp
mov
je
cli
ljmp
mov
sub
inc
xor
fimull
in
cmpsb
dec
gs
sub
or
lea
lods
insb
cmp
mov
push
inc
xor
pushf
cld
lds
inc
repz
addb
adc
push
lock
iret
imul
jmp
push
mov
je
int
aad
lea
sub
loopne
outsl
sbb
sti
mov
xchg
and
push
mov
testl
jo
jno
pop
shrl
sahf
cmp
dec
fs
xor
pop
mov
adc
lret
decb
fsubs
test
popa
das
subb
push
pop
rcrb
sub
or
aam
fmull
cmpsl
mov
mov
je
je
add
outsb
mov
push
mov
inc
shr
sti
enter
dec
test
sub
cmpsb
stos
fsubp
xlat
lcall
xor
outsb
pop
dec
imul
sti
addl
push
adc
pop
in
pop
pushf
xchg
out
insl
aas
and
cmp
mov
insb
lds
jecxz
fsts
nop
stos
lods
jp
xchg
push
mov
pop
gs
push
ret
lea
je
lret
mov
xlat
fmuls
fstpt
pop
jne
out
adc
pusha
jecxz
nop
repnz
xchg
jae
add
xor
ror
sbb
inc
test
rcl
cld
mov
or
shl
jo
jmp
out
jecxz
mov
test
dec
cmpsb
out
ljmp
mov
pop
xchg
xchg
ja
pop
push
jns
gs
scas
and
sbb
stos
out
inc
fisubl
nop
jns
jbe
jo
movsl
xor
pop
push
mov
sbb
cld
jl
mov
push
loope
lds
xchg
add
mov
js
lds
mov
or
lret
rolb
es
cvtpi2ps
mov
push
push
and
push
sbb
inc
notl
stc
mov
cmp
cmp
das
divl
les
mov
push
sahf
out
adc
js
mov
notl
je
ror
pop
xor
in
inc
mov
jns
dec
int3
or
jb
mov
mov
ss
jmp
xchg
xor
icebp
jno
inc
push
aam
push
sbb
jle
add
in
daa
add
sbb
jl
pop
xchg
je
xchg
add
scas
and
and
cwtl
int3
ds
addr16
cmpl
inc
pop
adc
inc
sbb
mov
inc
movsb
adc
mov
cmpsl
mov
pop
dec
imul
cmpl
mov
addr16
mov
xchg
in
mov
and
fs
jns
aad
scas
adc
cwtl
mov
add
xor
xchg
xchg
sti
pop
ret
xor
fdivr
dec
dec
xor
shrb
outsl
stos
pop
xor
or
mov
mov
decl
adc
dec
cmp
mov
xorb
xchg
dec
out
out
mov
call
or
cltd
shrl
shlb
outsl
fucom
testl
mov
repz
shll
ds
imul
insl
add
push
cmpsl
add
mov
sbb
mov
cltd
fiadds
lock
loopne
inc
mov
mov
gs
call
or
or
jns
inc
mov
push
mov
jae
jecxz
pop
sbb
push
and
jae
sbb
adc
fucomip
fistpl
sbbl
je
xor
cmc
imul
jecxz
clc
add
mov
loop
cli
inc
mov
mov
xorl
adc
scas
test
push
mov
rcrl
into
jnp
push
mov
push
add
lock
loop
dec
imul
adc
mov
roll
pop
lods
leave
fs
sbb
xchg
pop
cwtl
in
outsb
cmpsl
hlt
subb
jo
pop
mov
sbb
xchg
inc
nop
ljmp
movsl
inc
xchg
int3
mov
jo
out
adc
dec
jno
aad
fwait
out
jmp
repnz
ret
cmc
jae
stos
in
or
orb
mov
shr
rorl
xchg
imul
cmp
mov
adc
adc
pop
sbb
aaa
pushf
stc
fsts
test
mov
push
mov
pop
xchg
test
mov
push
movsl
arpl
jle
jp
movsl
and
enter
lock
mov
mov
pop
adc
jae
and
sub
inc
jmp
xor
inc
fnstcw
xor
push
aaa
xor
imul
xchg
in
pop
scas
mov
stc
pop
jbe
clc
sub
cs
sub
in
ja
in
loope
jle
imul
test
dec
sti
dec
fiaddl
jne
push
push
xor
andl
push
jp
jne
movsb
insb
fnstsw
jns
or
pop
ja
outsl
adc
xchg
cs
fnstcw
jo
mov
dec
mov
dec
and
jle
fst
and
mov
mov
imul
test
mov
or
jns
fs
lret
scas
jb
iret
gs
or
dec
or
adc
adcb
notl
in
cs
sub
mov
dec
jbe
testl
dec
mov
addr16
jnp
std
add
push
mov
add
add
fsubrp
cwtl
shlb
shlb
std
jp
jnp
push
je
cmpsb
push
clc
pcmpgtw
ret
nop
test
testb
notb
decl
outsl
jbe
lcall
mov
test
sti
insl
fstps
sub
xor
bound
adc
jl
rcll
pop
and
xor
popa
jo
mov
adc
dec
repz
xchg
or
and
xchg
push
ffree
pusha
xchg
jg
in
pop
inc
les
sahf
mov
adc
mov
xor
push
popf
xorb
repz
loop
push
fistps
fsubrp
dec
pop
pop
dec
push
push
rcr
jbe
lcall
push
mov
mov
lea
cmpsl
orb
adc
sbb
jmp
repz
ret
aad
inc
int
xchg
ficoml
int
dec
fcmovnb
cmc
push
add
sbb
jb
fstl
push
sub
cmp
xchg
out
pop
inc
sbb
push
cmp
movsb
cs
sub
add
inc
fwait
adc
dec
lds
adc
test
xchg
es
jp
push
jb
dec
mov
cmpsb
mov
push
gs
cmpsl
jg
mull
sbb
lret
mov
cwtl
or
movsb
inc
fnsave
in
lahf
aad
into
adc
mov
subl
xchg
push
aas
add
std
andl
inc
mov
xchg
mov
dec
adc
ljmp
or
mov
add
cmp
cmp
icebp
xlat
sar
adc
and
xchg
push
enter
loop
in
pop
popa
or
lods
in
in
mov
imul
xlat
push
pop
int3
add
jge
stc
add
xor
mov
out
iret
mov
and
mov
mov
movsb
sub
mov
mov
jae
xchg
inc
add
stos
pop
push
cli
xchg
and
sbb
ljmp
xorl
push
jne
gs
popa
jne
adc
push
adcl
std
testl
movsb
loopne
sbb
lea
sub
stos
imul
rol
ja
or
out
out
pshufw
ljmp
fchs
mov
mov
aam
stc
or
mov
repz
movsb
dec
fisttps
sahf
cmp
ud0
out
xlat
mov
mov
jo
jb
cwtl
call
lds
stos
push
movsb
dec
xchg
inc
sarb
out
adcb
mov
adc
lods
mov
push
sub
mov
addr16
dec
imul
jns
push
adc
in
call
insb
mov
mov
shll
mov
dec
inc
clc
xchg
je
stos
les
call
jno
push
inc
int
push
das
xchg
add
es
push
dec
into
jne
ret
les
aas
dec
mov
mov
into
fsubr
jecxz
pmuludq
lcall
sub
cmp
pushf
lds
xor
xchg
inc
inc
jecxz
xlat
ljmp
adc
add
outsb
clc
ss
in
mov
and
imul
gs
cmc
rclb
inc
mov
push
pop
push
rcl
aad
mov
inc
je
iret
cmp
cmpsl
sub
aad
lods
divb
sbb
lret
test
scas
pop
mov
push
push
adc
es
mov
les
ljmp
pop
addr16
jge
sbb
xchg
mov
xchg
shl
mov
or
xor
push
xchg
dec
aaa
push
stos
shlb
push
fistps
sbb
in
dec
idiv
ret
insl
div
mov
popf
aam
sbb
jnp
out
mull
cmp
out
insl
lret
inc
push
test
cmp
mov
iret
mov
sub
cltd
fdivp
sbb
fdivs
cwtl
mov
mov
iret
movsb
std
test
stos
inc
rcl
outsb
dec
ss
ficomps
mov
out
ljmp
dec
mov
inc
outsb
cwtl
dec
shl
ret
add
sub
stc
xor
pop
adc
xchg
jb
and
test
insl
rolb
xchg
adc
fisubs
dec
add
iret
dec
hlt
loop
out
int
das
pusha
xor
or
jb
mov
sub
or
bound
aaa
sti
call
pop
mov
mov
fs
xchg
add
jl
mov
fistpl
or
add
ficoms
lds
mov
pop
sub
in
shrl
call
adc
insb
xchg
sti
lea
xor
push
cld
or
push
inc
loope
sub
scas
lods
pop
les
jmp
enter
mov
insb
test
imul
or
inc
mov
movsb
aam
cmp
jae
push
push
jl
iret
mov
mov
nop
mov
test
stos
xchg
out
sarb
sbb
or
js
divl
mov
and
aam
cwtl
fimuls
lahf
jle
fiadds
mov
xchg
in
sbb
xchg
fisttpll
sti
xor
sub
rol
inc
ja
lds
mov
mov
mov
sub
cli
dec
stc
mov
in
mov
pop
push
ret
in
inc
push
push
out
ror
ljmp
in
push
rorl
cld
loopne
popa
js
jecxz
inc
push
jmp
dec
push
cli
mov
xchg
popf
push
pop
hlt
mov
lea
icebp
popa
imulb
popf
pop
rorl
stos
fwait
sub
insb
cmp
test
orw
out
movsb
into
fsubs
mov
inc
in
imul
mov
hlt
jp
push
jae
js
push
sahf
mull
pusha
jbe
sbb
mov
gs
add
cs
add
add
aad
popf
add
or
sbb
rolb
adcb
fisubl
and
cmp
and
jno
rcll
inc
aad
jno
es
fisttpll
and
mov
or
hlt
aam
jo
test
mov
push
mov
int
xchg
aas
jg
sbbb
add
dec
lcall
movsl
jmp
adc
push
pop
pusha
in
leave
xchg
xchg
ja
mov
mov
xchg
pop
xor
inc
jge
pusha
pop
xchg
mov
mov
dec
sub
push
mov
call
sub
mov
addr16
adc
pop
dec
inc
loope
outsb
loopne
in
mov
cmpsb
pop
mov
test
dec
cltd
mov
aad
pop
pop
scas
push
pop
sbb
imul
and
in
pop
sub
jne
add
mov
jp
xchg
inc
ljmp
std
jo
pusha
add
inc
pop
mov
sti
test
pop
pop
sub
add
fwait
repz
lcall
inc
pop
mov
lret
inc
stos
cs
cmpsb
xchg
pop
pop
xchg
mov
jno
and
pop
mov
faddp
mov
repnz
sahf
jnp
push
test
test
mov
add
pop
orb
stc
mov
and
jb
add
std
loopne
mov
jae
fsubr
ja
std
sti
les
popf
daa
cmp
mov
push
lahf
imul
out
imul
sub
cmp
and
lcall
pusha
xor
int3
cmp
and
lock
mov
mov
icebp
fcompl
inc
sub
xchg
jae
adc
pop
cmp
cmp
sub
es
sbb
addr16
fldcw
movsl
out
sbb
mov
and
pop
in
sub
and
cmp
sub
mov
jbe
xchg
stc
pusha
test
icebp
mov
out
push
push
jg
mov
test
push
sti
pop
pushf
sub
xchg
xorl
sbb
lea
or
or
out
inc
and
push
xor
jbe
test
andps
sub
addr16
mov
mov
jb
lock
sub
in
sub
jmp
scas
loopne
fisubl
andb
clc
leave
sbb
imul
leave
aam
int3
push
outsb
xlat
mov
mov
mov
fucom
emms
add
cmpsb
inc
fmull
mov
jl
or
test
lret
sbb
xchg
andb
enter
cmp
mul
pop
inc
fcoml
jmp
xchg
popa
push
cmpsl
sbb
lods
sbb
movsb
jne
negl
jbe
and
in
arpl
cmpl
call
mov
add
push
fnsave
inc
adc
sub
cld
xor
xchg
rcrl
rclb
sbb
popf
fwait
mov
loopne
or
sub
sub
adc
sbb
sbb
xchg
push
push
movb
mov
fsin
pop
icebp
dec
sub
add
lea
scas
mov
shlb
and
sub
jl
fsubrs
test
or
xor
jbe
jecxz
arpl
push
lea
sti
jns
jnp
adcb
hlt
ror
cmp
cmp
jae
mov
fnstcw
and
js
daa
mov
imul
cltd
loopne
pop
ret
outsb
loope
push
lods
mov
dec
popa
sub
xchg
jae
xor
mov
sbb
fdivl
nopl
mov
xor
mov
push
jne
mov
xchg
and
imul
jnp
cmp
xchg
push
sub
movl
xor
push
sti
jp
popa
les
sub
lods
dec
cmp
adc
jnp
pop
roll
sbb
dec
cmp
stos
arpl
fdivs
rol
stos
jl
cmp
cmc
pop
fcoms
std
mov
clc
bound
jmp
pop
les
sub
out
sbbb
aas
inc
rcll
cwtl
fdivrs
lock
addr16
sub
xchg
add
push
sbb
adc
in
jo
out
das
in
xchg
jmp
fnstenv
sub
sub
sbb
ja
imul
adc
faddl
mov
stc
popf
sub
lahf
imul
cmpsl
cmc
fwait
mov
cmp
outsl
pop
xchg
fs
mov
scas
test
sarb
or
stc
inc
lock
lods
cli
mov
scas
pusha
sarl
cs
inc
cmp
movsl
jo
das
ljmp
into
pop
stos
mov
mov
mov
push
mov
jns
inc
push
addr16
inc
push
inc
push
mov
or
add
iret
sbb
shrl
aas
xchg
cmp
xchg
pop
jle
sub
or
stc
cmp
cwtl
insl
sahf
add
lods
jbe
pop
xor
into
xlat
lods
or
jae
movaps
sbb
push
adc
clc
pop
adc
and
pop
daa
mov
imul
cltd
inc
jnp
mov
pop
xchg
mov
pop
cmc
movsb
iret
ja
ret
arpl
repnz
call
and
mov
arpl
dec
imul
test
pop
mov
je
push
outsl
lock
mov
scas
mov
add
cltd
xchg
push
fdivr
notb
mov
cmp
jno
push
cmp
inc
mov
test
lcall
pop
dec
mov
lret
mov
loop
mov
inc
xchg
jno
fdivl
data16
push
inc
and
lods
inc
push
ss
pop
mov
out
or
xor
in
data16
add
outsl
mov
mov
fstpt
jp
sub
or
scas
mov
mov
or
mov
xchg
mov
call
mov
stos
mov
test
sub
jno
lea
pop
xchg
cmp
leave
inc
cmc
pop
pushf
ss
dec
mov
or
dec
scas
adc
mov
js
mov
xchg
sub
xor
xor
clc
push
js
jge
mov
pop
mov
jecxz
mov
in
push
das
or
nop
mov
iret
inc
sub
dec
inc
je
mov
sahf
mov
daa
sahf
fldenv
jne
sub
sbb
jmp
jbe
push
pushf
push
jg
cld
fisttpl
insb
dec
stc
testl
cli
xor
xor
into
nop
scas
and
sbb
add
jl
fildl
mov
xchg
jno
xchg
mov
pop
ss
das
inc
loopne
or
lock
pop
out
mov
push
mov
adc
out
cmc
adc
and
lock
pop
fisttpll
jg
pop
aaa
xchg
outsb
imul
out
mov
pop
jo
jecxz
rolb
inc
loopne
xchg
sub
shlb
jnp
push
lock
sahf
ja
stos
loope
ljmp
cli
and
and
movsb
sbb
jmp
jmp
cli
out
push
int3
lock
daa
inc
jmp
shrl
fincstp
mov
or
dec
les
fwait
pop
fs
add
xchg
mov
lea
ret
imul
loopne
cltd
xchg
cwtl
xchg
lea
push
jne
leave
push
sub
outsl
cmp
insb
cmp
aas
mov
dec
jp
pop
add
pop
push
fildl
out
sarb
decb
mov
dec
xor
call
orb
pop
outsl
xor
icebp
mov
icebp
inc
sub
or
pop
ja
and
xchg
mov
loop
jmp
movsb
mov
mov
cmp
and
mov
or
loopne
sbb
lock
push
adc
enter
int
xlat
rclb
push
cmpb
pop
or
pop
aas
or
mov
cmpsb
fs
outsl
loope
sbb
in
push
adc
sub
mov
addr16
popa
xor
inc
dec
jbe
iret
add
jmp
and
cld
and
pop
or
xchg
mov
pop
add
jmp
out
adc
fstl
lds
mov
inc
jae
hlt
stc
fistps
pop
push
ljmp
in
lcall
sahf
jno
mov
mov
sbb
push
lahf
or
or
arpl
imulb
jle
push
loopne
ja
jnp
mov
xor
adc
jmp
cmp
leave
inc
lret
lds
les
sbb
sub
insb
imul
aad
shrl
scas
in
and
inc
xor
dec
add
xchg
jp
lds
push
push
adc
mov
pushf
lret
xchg
fcomip
mov
pop
pop
popf
lret
push
in
mov
stos
testl
sbb
popf
sbb
adc
mov
imull
jno
loop
les
test
call
adc
pop
test
sub
loopne
pop
nop
mov
jo
sbb
pop
gs
mov
les
out
ljmp
cwtl
sub
pop
loopne
xchg
iret
lds
mov
mov
xchg
sub
movsl
jae
daa
and
cmpsb
insl
aad
lods
repnz
cmpsl
cmp
add
adc
ss
sub
aas
xor
subl
jmp
inc
je
ds
dec
jge
and
mov
lahf
push
push
mov
pushf
fistps
cli
pop
call
sub
scas
mov
push
fs
xlat
inc
addl
jo
and
xchg
sti
inc
pop
fs
lret
sub
shlb
dec
out
lahf
and
xchg
cli
int3
cmp
pop
mov
and
sbb
xchg
icebp
call
cmpsl
or
addr16
cmp
pushf
lods
lahf
lods
adc
or
stos
test
xchg
aad
inc
test
and
mov
in
jb
pop
test
dec
sbb
stc
jns
cmc
mov
es
outsl
sbb
lds
ss
or
int3
push
mov
push
stos
and
dec
jmp
mov
dec
and
js
pushf
and
sbb
fistps
cmp
sbb
cmp
cmp
imul
shl
orb
dec
jp
mov
mov
or
fnstenv
stos
cmove
mov
xchg
iret
stc
test
jmp
push
mov
repnz
push
inc
push
mov
cmp
clc
cld
scas
icebp
sub
stc
mov
scas
xlat
shlb
mov
les
icebp
mov
lods
cwtl
repz
pop
push
mov
push
xchg
sub
sbb
es
or
jne
mov
xor
fdivl
outsb
in
inc
std
jmp
lock
mov
or
cmp
ret
adc
xor
mov
lock
pushf
push
xchg
mov
aas
testl
or
jecxz
jp
mov
sbb
into
ljmp
popf
mov
ja
dec
mov
push
xchg
cli
mov
cli
loope
test
inc
sbb
popa
xor
in
inc
lods
out
xchg
test
out
push
int
mov
daa
sbbl
xor
int3
adc
notb
scas
mov
xlat
fsubrs
pusha
lods
scas
icebp
pop
mov
inc
mov
test
push
das
fld
mov
xchg
pop
dec
fs
sub
jae
fisubl
push
aas
mov
cmc
out
roll
aad
add
and
mov
or
pushf
pop
mov
mov
in
lcall
fmuls
clc
sbb
into
fstp
mov
faddl
pusha
add
lcall
jnp
pop
mov
jmp
fwait
push
xchg
add
jnp
inc
xchg
xor
sbb
fwait
adc
lret
jge
mov
rcll
scas
cmpl
cmp
lds
cltd
pop
adc
loope
insb
xchg
mov
push
loop
scas
lahf
mov
cmpsb
or
imul
jp
roll
out
jnp
mov
and
dec
mov
push
cwtl
in
pop
jns
sub
mov
push
mov
dec
jle
mov
aam
mov
add
out
fs
xor
lcall
popa
cwtl
ja
sub
das
shrb
push
out
mov
jne
inc
int3
rorb
fcmovbe
mov
xchg
pop
sahf
rolb
imull
pop
mov
cli
push
lret
daa
cmpsl
nop
cmp
or
adc
push
pop
je
jg
out
leave
add
jno
lcall
loop
outsl
loop
popf
pop
cmp
mov
inc
mov
xor
cmp
lahf
mov
inc
push
jb
lahf
mov
jecxz
aad
and
pop
mov
sarb
dec
mov
test
ret
nop
dec
xor
xchg
mov
popa
cmp
jge
gs
cmp
pop
inc
xchg
jns
pop
mov
mov
xchg
add
pop
jecxz
jno
div
popa
decb
pusha
gs
loope
dec
loop
jo
xor
mov
stos
mov
inc
fs
testb
mov
pop
aaa
mov
pop
cmc
push
int3
cmp
adc
mov
pop
fwait
lcall
lahf
stos
loope
or
mov
loope
mov
outsb
dec
sbb
in
pop
mov
seto
dec
xchg
imul
dec
cld
loop
mov
ljmp
jmp
jle
lret
in
sysexit
mov
test
inc
cmp
pop
imul
testl
ljmp
add
movsb
fdivrs
sub
mov
cmpb
xor
xchg
cmp
cmp
enter
add
sbb
dec
sub
fsubr
sbb
xchg
mov
jb
inc
jo
xchg
dec
aad
imul
sbb
adc
cwtl
shll
inc
test
adc
lret
stc
push
xchg
imulb
mov
shrl
hlt
xor
jo
adc
pop
popfw
call
hlt
rorl
xchg
cli
or
popf
push
lahf
cmp
push
dec
mov
out
out
ljmp
or
sub
dec
outsb
cld
lock
mov
in
fadd
mov
and
js
mov
outsb
cmp
shrl
pop
test
in
enter
push
fcompl
in
testl
aas
es
push
cmp
xchg
cs
out
sahf
lcall
rclb
mov
cmp
inc
data16
call
adc
or
xchg
nop
mov
movsb
xchg
and
ret
xchg
inc
xchg
jmp
push
cld
andl
push
inc
inc
adc
in
mov
adc
mov
jnp
xchg
jl
xchg
repz
push
loop
cmp
jge
sbb
out
lods
push
jl
out
sbb
lds
shlb
jecxz
cwtl
popa
fisubrs
mulb
add
mov
xlat
jecxz
and
and
push
adc
pop
dec
xor
adc
add
xchg
dec
push
jmp
pop
cmp
or
mov
dec
ds
pop
jle
cmp
loop
mov
loope
inc
sbb
mov
cmp
idivb
test
and
and
fwait
mov
sbb
xchg
inc
dec
addr16
ljmp
jno
daa
lcall
call
pop
in
scas
int
leave
repz
mov
inc
je
in
mov
ret
stos
adc
syscall
sub
imul
inc
out
or
push
clc
push
fwait
ljmp
xor
mov
ret
and
mov
jl
push
jno
ds
and
sub
inc
enter
push
ss
inc
mov
mov
inc
pop
mull
lcall
xor
shrl
inc
es
test
adc
test
in
mov
cwtl
xchg
subb
or
mov
ja
mov
fs
xchg
dec
roll
push
aad
or
mov
mov
xor
xchg
stos
mov
aaa
cmpsw
orl
in
sub
dec
xchg
aad
push
fisubrl
sub
shl
insb
jmp
add
dec
cmp
mov
nop
lret
fcoms
xor
sub
add
dec
repz
lret
test
jne
sbbl
and
movsl
sub
sbb
adc
cmc
mov
sub
movsb
mov
xchg
popf
fcoml
incl
add
lahf
in
jns
mov
popf
add
out
jne
push
jp
adc
ljmp
or
xor
pop
dec
test
add
and
jbe
loop
xor
dec
repnz
inc
outsl
cmp
outsb
das
mov
enter
repz
jecxz
xchg
enter
dec
mov
mov
shlb
push
stos
and
arpl
mov
inc
push
jl
out
pop
dec
jne
pushf
push
les
add
insb
and
cmp
add
dec
cmp
outsl
sub
lods
sbb
xchg
add
add
paddw
sbb
sub
imul
sub
scas
mov
push
pop
mov
pop
std
push
cmp
ret
int3
enter
cmpl
add
lock
ja
fs
sbb
aam
test
cmp
cmp
cmp
fwait
test
enter
add
call
jbe
das
fcmovne
push
adc
or
xchg
or
sti
aaa
inc
push
les
mov
sbb
push
mov
or
ljmp
je
imul
out
mov
mov
lock
sub
in
ret
sbb
lock
sti
mov
ds
mov
push
mov
pop
sbb
pop
repnz
jnp
arpl
int
les
inc
xor
xchg
and
movsl
lret
mov
jge
iret
cmpsl
shll
inc
sub
xchg
ret
push
pop
sbb
fisubl
inc
mov
hlt
outsl
fsts
mov
or
jns
pop
sbb
pop
or
iret
cvtpi2ps
icebp
dec
lods
test
stos
push
and
out
das
es
notb
les
inc
xchg
cmp
push
cld
and
sar
push
in
mov
sahf
xchg
jmp
mov
xor
sbb
inc
push
in
lea
sbb
clc
push
aaa
xchg
push
adc
mov
adc
jne
jno
out
mov
cs
mov
bound
aaa
mov
cs
incl
aam
into
std
in
dec
movsb
xchg
test
or
pop
add
je
imul
mov
cmpsl
mov
outsb
jl
mov
adc
int
inc
inc
adc
jmp
cs
ss
aas
add
xchg
test
stc
cmp
pop
cmpsb
dec
pop
xlat
cmp
push
jne
lods
xor
jle
jmp
nop
add
jns
xchg
and
xor
clc
and
pop
or
int3
in
and
leave
xchg
mov
and
jae
clc
xchg
jo
je
mov
lds
js
mov
push
roll
sub
xchg
icebp
pop
outsl
xchg
jge
aad
push
and
lret
movsl
mov
ffreep
das
mov
push
adc
bound
lret
pop
mov
xor
push
cmp
cltd
adc
mov
movsl
loope
les
and
adc
pop
mov
lahf
sub
iret
pop
mov
es
lahf
cltd
inc
sub
mov
test
bound
cmp
sbb
push
dec
or
in
mov
out
dec
hlt
cmc
bound
mov
sub
inc
rorb
fldenv
je
pop
and
test
rcrb
sub
sarb
sarl
fsubl
mov
cmp
xchg
insl
jmp
jnp
inc
enter
pop
fs
aad
or
mov
pop
idivb
mull
pop
into
mov
add
push
xor
scas
lea
out
push
mov
or
stos
pushf
cli
adcb
and
fwait
jg
jno
xchg
jmp
and
and
adc
xor
or
pop
fstpl
loope
out
orl
out
or
jb
lret
out
mov
mov
lods
pusha
iret
rclb
add
mov
and
out
fsub
addb
hlt
int3
xchg
out
xor
jge
hlt
outsb
popa
aas
sub
xchg
dec
or
pop
jmp
jg
sbb
pop
jbe
mov
jecxz
fidivrl
in
psrlq
rcll
call
jae
daa
in
push
and
pop
sahf
shl
arpl
pusha
clc
mov
xchg
testb
arpl
xor
mov
mov
in
imul
xlat
add
pop
push
imul
in
xchg
out
stc
popa
std
cmpxchg
xchg
mov
por
pushf
sub
dec
mov
mov
jo
popw
int
pop
icebp
sbb
push
sbb
push
jae
sbb
je
and
aad
lahf
sub
loop
repz
roll
xchg
imul
cmpsl
jp
adc
testb
sbb
sub
dec
cmp
jle
push
lea
pop
inc
out
xchg
sub
inc
test
jnp
jle
ja
and
mov
sbb
sbb
sbb
xchg
aas
inc
cmovb
movsb
aad
aam
inc
mov
inc
lahf
jno
jns
les
xor
popa
push
insb
sbb
or
or
sub
movl
mov
jae
ljmp
mov
add
fmuls
fimuls
sahf
sub
int3
inc
in
ret
mov
dec
pop
push
out
daa
rcrl
lock
stos
lock
out
add
inc
push
sub
mov
icebp
lock
add
xchg
sbb
adc
nop
pop
jmp
pushf
or
cmp
cli
sbb
push
iret
mov
jmp
mov
es
dec
xor
xchg
push
jne
addr16
out
adc
push
in
ljmp
or
jo
sub
sti
or
inc
hlt
sbb
adc
pop
xorb
or
add
pop
pop
mov
push
or
xor
and
imul
popa
push
adc
sahf
insl
pop
xchg
cltd
out
add
mov
dec
jno
adc
stos
add
sbb
test
adc
inc
not
out
dec
cmpsl
xchg
and
mov
in
mov
jge
mov
imul
int
es
out
add
shr
addr16
inc
xchg
xchg
or
loope
inc
lock
jno
leave
add
xor
iret
sub
sbb
stos
or
mov
mov
pop
or
add
movsl
inc
jle
xor
aad
cld
pusha
cmp
pop
rclb
mov
fwait
mov
jecxz
cmp
iret
xor
cld
hlt
jg
pusha
iret
cmpsb
xchg
adc
fdivs
dec
mov
idivb
mov
cld
xor
aad
pop
cmp
add
push
iret
ficoml
test
xor
xchg
lods
in
or
jl
lds
xor
push
dec
push
js
jmp
repz
sti
stos
int
jb
mov
sbb
add
or
stc
jne
xchg
out
shrl
adc
outsl
stc
jns
cmp
or
nop
fstpt
or
pop
int3
xchg
cmp
sub
stc
lods
mov
dec
shr
in
fists
sub
popf
sti
cltd
dec
inc
mov
jb
cli
pop
lock
mov
adc
jbe
aaa
mov
data16
sub
jl
mov
je
mov
pop
lcall
aad
fiadds
xor
xchg
shrl
cld
das
pop
mov
add
and
and
push
imul
jle
ja
or
rcrl
dec
fcmovne
out
shll
xlat
mov
or
mov
shrb
in
mov
movsl
and
jg
imul
daa
das
stos
repnz
cltd
ret
add
lret
clc
das
mov
jbe
fidivrs
mov
or
xor
cwtl
mov
daa
sbb
aad
scas
hlt
pop
outsb
adc
pop
out
sub
dec
test
pusha
sahf
ror
sahf
add
jb
inc
inc
dec
iret
add
pop
push
nop
add
mul
mov
cmpsb
subl
inc
inc
pop
or
adc
ja
mov
cmp
xchg
mov
xor
mov
push
cmpb
lds
testl
sub
sbb
and
adc
mov
icebp
xchg
loop
jge
filds
loopne
popf
out
mov
jne
sbb
pushf
in
adc
jb
inc
mov
pop
sbb
add
xlat
sbb
xor
fldenv
sahf
out
xchg
pop
ret
fadd
cmp
adc
xor
incl
jecxz
sub
jb
and
hlt
pop
pop
sbb
jae
hlt
stc
inc
inc
lds
shl
stos
jo
sti
dec
pop
frstor
nop
loop
xor
push
inc
mov
xchg
insl
or
xor
das
adc
xchg
les
xor
sub
pop
mov
adc
or
pop
rcrl
stos
jns
mov
fidivrs
xchg
and
inc
cmp
cmp
pop
sbbl
pushf
and
xchg
cmp
test
mov
and
fsubrs
dec
pop
mov
inc
inc
and
out
insb
aam
ss
jbe
push
in
pop
add
sbb
ret
ret
inc
jns
push
adc
gs
jbe
mov
xchg
cmovnp
mov
scas
xchg
inc
sub
cmp
adc
rolb
js
mov
mov
mov
dec
push
adc
inc
or
pop
or
sbb
inc
mov
sbb
decl
push
pop
and
stos
xchg
outsb
arpl
mov
push
decb
xor
pop
push
inc
mov
arpl
push
sub
push
mov
inc
pop
inc
test
stos
mov
rcl
ds
add
cld
stc
sbb
stos
shlb
push
lahf
mov
cmp
js
les
jno
push
mov
mov
xor
test
rorb
loopne
movsl
out
cltd
jg
stc
in
call
daa
mov
ljmp
mov
inc
aas
mov
scas
andl
push
jecxz
add
clc
out
and
mov
lds
and
movsl
pop
imul
adcl
pop
cld
and
add
movl
andl
cmp
inc
push
es
jno
call
inc
sbb
pop
cs
xor
flds
xor
mov
mov
mov
aad
mulb
js
loopne
dec
mov
sbb
aam
jle
add
xchg
mov
mov
mov
loope
jp
adc
aam
loop
call
sahf
popa
pop
mov
xor
xchg
cmp
push
sahf
je
stos
adc
push
adc
and
sahf
aad
loopne
shl
movsl
not
push
push
fimull
add
lds
jno
xchg
cli
iret
das
cs
cmp
lods
roll
je
rclb
out
sti
or
outsb
pop
or
jno
adc
jo
int
stc
cmp
jns
jp
dec
aaa
repnz
mov
fidivs
jbe
in
push
hlt
xchg
sub
cmp
mov
out
push
cwtl
out
leave
xor
cmc
gs
lods
sub
jb
jbe
cmp
rclb
test
jmp
or
mov
or
mov
test
sub
mov
mov
mov
sub
push
loope
fs
sub
or
ftst
fld
jl
shlb
lods
pop
jne
lods
fcomi
cli
js
dec
jle
mov
cmovns
add
lds
fidivrl
js
icebp
sbb
stc
and
testl
push
pusha
ss
sbb
jnp
cmpsb
xlat
mov
fdivrl
add
push
out
call
arpl
mov
cmp
push
insl
fnsave
fcoml
out
into
sub
jecxz
add
cwtl
das
or
and
out
rol
repnz
dec
push
lahf
out
xor
fwait
cmp
xchg
adc
in
or
cmp
xchg
gs
idivl
aas
imul
sub
repz
jno
rcrb
repnz
loopne
in
xlat
mov
mull
out
add
cwtl
mov
iret
in
xchg
push
pushf
xlat
addr16
mov
xchg
inc
bound
cmpsl
aad
jmp
stos
rorl
movsb
daa
fmuls
leave
notl
dec
dec
icebp
dec
aad
cltd
lock
mov
push
cwtl
push
fs
xchg
daa
call
in
xor
movsb
adc
bound
jg
loop
pop
pop
lret
pop
add
mov
jb
xchg
sub
push
cld
cmp
jp
stc
pop
pop
mov
mov
or
imul
mov
rcr
scas
add
mov
xchg
mov
push
int3
loopne
cltd
hlt
and
add
dec
fsts
pop
pop
mov
xlat
in
pop
xor
movsl
shl
cld
inc
mov
movsb
arpl
clc
sub
push
leave
xchg
add
int3
lock
scas
sbb
inc
leave
lret
mov
aaa
in
addr16
mov
jnp
stos
sbb
dec
sbb
out
or
lcall
jecxz
mov
clc
inc
mov
push
mov
ljmp
dec
pop
sti
mov
idivb
and
shr
pushf
in
xchg
pusha
das
loop
in
sbb
es
shll
xchg
sbb
xchg
xchg
adc
je
lcall
pop
xchg
mov
push
movsl
mov
int
fs
test
dec
inc
jns
jbe
xor
pop
in
push
imul
push
add
mov
aas
je
cmp
test
cmp
mov
in
cmp
jo
mov
and
fwait
jne
adc
loope
add
loopne
cmp
mov
std
jl
ja
xchg
ret
mov
enter
out
ljmp
dec
leave
push
or
add
sub
jne
hlt
and
mov
add
lock
in
aam
call
lds
lods
rcrb
cld
imul
cld
adc
ss
xlat
sub
insb
or
xor
pop
es
icebp
jle
loopne
dec
loope
in
sub
mov
dec
xchg
sbb
mov
idivl
pop
cmp
enter
mov
out
iret
mov
dec
lea
add
ret
je
repnz
ljmp
loopne
aaa
subps
rorb
ss
sub
ds
jnp
mov
jae
movsb
sbb
aam
xor
movsl
mov
mov
decb
pusha
pop
jl
negl
or
push
rcrb
push
and
add
jb
or
test
stos
into
int3
popf
sbb
push
adc
push
xor
pop
dec
push
nop
mov
std
or
test
andb
jae
mov
push
xchg
fucomp
and
daa
rcll
aaa
mov
insb
push
in
imul
in
outsb
movsb
fs
and
cmp
call
arpl
inc
test
dec
cld
sti
hlt
sbb
sub
jmp
rcrb
fisubl
push
and
rcll
fcoml
mov
jno
ss
mov
mov
lcall
xchg
loop
mov
hlt
xchg
test
cmpsl
les
rcr
data16
icebp
scas
push
add
in
repz
aas
xor
leave
inc
addr16
adc
testl
jno
mov
shr
test
iret
sbb
push
insb
imul
test
mov
mov
aam
stc
cmp
lret
out
cmpsl
add
adcb
dec
xor
xchg
fs
imul
ja
mov
sub
cli
jb
imul
inc
ja
scas
adc
ss
lcall
aad
jb,pn
cmpsb
jmp
movsb
inc
and
out
out
test
lcall
push
mov
aaa
fbstp
test
xchg
push
dec
les
xor
adc
popa
and
dec
pop
popf
push
mov
loope
pop
in
sti
mov
and
data16
adc
xchg
fs
pop
xor
test
cmc
jns
sti
sub
aam
ss
add
movsb
cli
push
push
arpl
or
movsb
dec
jb
mov
push
lahf
outsl
sub
lcall
mov
adc
lds
lods
dec
fcomps
ja
cld
push
notb
fwait
push
fimuls
xor
mov
pop
popf
pop
lret
pusha
mov
les
jns
mov
loop
lea
xchg
lods
adc
std
mov
push
dec
lcall
in
and
scas
xor
movsb
mov
mov
stos
int
pop
push
jmp
popf
lea
cmpl
mov
lods
and
jecxz
push
mov
dec
dec
fmull
cmp
dec
fists
pusha
call
out
sub
adc
cmp
inc
outsb
aad
ror
ds
push
frstor
fnsetpm(287
and
js
insb
out
xor
pop
jae
out
lahf
fisttps
xchg
stos
mov
jnp
fs
push
inc
fsubrl
or
sub
mov
mov
out
xchg
out
cwtl
mov
repnz
gs
jmp
cmp
mov
adc
cmpsb
pusha
sub
test
ret
int
in
repz
adc
and
fsts
dec
pop
in
mov
sbb
mov
adc
les
sbb
push
adc
mov
mov
scas
loopne
nopl
cmc
adc
std
add
jne
sbb
sbb
xchg
push
adc
fs
movsb
push
jae
cmp
fidivl
ss
call
outsl
push
inc
sti
jne
mov
pop
push
sub
pop
mov
sub
cmp
pop
xlat
mov
loopne
mov
leave
insl
or
sbb
int3
dec
insl
sbb
push
inc
test
leave
mov
dec
stos
das
movsl
test
dec
push
fwait
clc
cltd
or
add
pop
add
pop
jno
movsb
fildl
pop
add
or
hlt
jle
sbb
jns
es
and
sbbb
cld
out
pushf
ret
jns
sub
adc
cmp
or
and
inc
sbb
movsl
mov
movsl
and
outsl
sarb
or
jae
dec
lret
movsb
inc
adc
rolb
fistpl
mov
cmc
je
push
push
out
pop
cmpsl
sti
test
arpl
insb
push
hlt
ljmp
lods
and
mov
enter
cmp
xor
lret
loopne
push
aam
xchg
inc
xchg
push
cmp
ret
add
pop
ljmp
xlat
dec
pop
cwtl
in
les
mov
jle
inc
sbb
sbb
lods
mov
cmp
adc
add
stos
xchg
sub
outsb
jo
sub
adc
movsl
cli
mov
sbb
insl
mov
push
loope
outsl
jle
cmp
jp
aas
jmp
mov
xchg
lret
mov
pop
mov
outsl
sbb
cmp
je
mov
js
test
cli
xchg
mov
clc
mov
adc
fucomi
cwtl
and
int
push
leave
addr16
cmp
mov
ss
mov
jns
push
sarb
jmp
sbb
xchg
lcall
jp
test
adc
mov
fucom
les
aad
jae
mov
aas
cltd
test
pop
adc
jmp
jno
rcl
psubd
jmp
jmp
and
js
and
jne
cmpsb
xchg
xchg
in
and
sar
js
push
pop
out
jecxz
fimuls
gs
push
sbb
cltd
cmp
dec
or
lock
mov
mov
data16
add
fs
fs
jbe
add
sub
outsb
cli
cs
sarl
ret
xor
mov
daa
cwtl
cmpsl
xchg
push
sub
enter
add
stc
sahf
and
adc
loope
jp
mov
push
push
maskmovq
testl
mov
push
mov
popf
dec
mov
xor
cmp
jmp
jae
jp
mov
sub
cmp
int3
add
or
add
sti
es
insb
jecxz
xor
aam
popa
jo
repz
dec
mov
jns
icebp
fildl
andl
mov
in
xor
push
lret
mov
xor
invd
push
fnstenv
rcl
inc
in
mov
mov
inc
icebp
out
aas
pop
mov
rorb
add
sbb
mov
aad
pop
jbe
xor
ja
jmp
lods
jne
loope,pn
cmpb
sbb
repz
cmc
cwtl
cmpsb
fidivrs
adc
das
push
dec
dec
and
lcall
dec
ds
lret
adc
mov
ret
and
pop
adc
add
call
addr16
pop
push
push
cli
push
pop
sbb
inc
lock
test
test
cmp
sub
push
adc
stos
xchg
pop
ja
mov
repz
or
xor
add
clc
sbb
xor
jns
inc
shrb
adc
mov
or
jb
jmp
and
push
jno
loope
sbb
les
out
push
cmpsl
xlat
cmpsl
cmp
or
insl
loopne
fstps
std
das
adc
push
mov
xchg
orb
inc
je
mov
push
mov
push
or
cmpsl
mulb
jg
jbe
into
pushf
sarl
in
and
inc
push
xor
pop
pop
mov
xchg
push
leave
push
sub
pop
xor
call
fisubl
daa
std
adc
sti
loope
or
inc
xchg
push
push
push
jae
fcmovnb
xchg
mov
fwait
sub
scas
jle
cltd
and
jbe
lahf
jmp
cwtl
arpl
xchg
push
in
adc
inc
aas
les
mov
arpl
xchg
outsl
subl
pop
insl
inc
add
xchg
pusha
hlt
push
jg
xchg
enter
scas
jg
jae
outsl
add
xor
inc
loop
and
scas
sar
push
roll
or
js
or
push
mov
sbb
repz
add
xchg
and
imul
sti
shrb
call
movsb
dec
sbb
gs
sbb
and
adc
lea
in
sahf
daa
ss
mov
aas
js
push
imul
cltd
lret
lods
xchg
test
push
xor
cmpsb
adc
cltd
mov
jg
scas
pop
bnd
mov
cld
inc
inc
jecxz
aad
add
adc
pop
inc
sbb
mov
cld
or
mov
ret
loop
jno
ss
fwait
cmp
insb
sbb
fwait
into
ret
inc
pop
aas
lcall
enter
testl
sbb
shll
out
popa
sbb
mov
jmp
jl
fisubrl
mov
repnz
cmc
inc
aas
inc
jg
adc
sbb
sbb
adc
mov
jno
fistps
jecxz
addr16
into
or
loop
aam
or
das
or
inc
stos
cs
in
rol
and
sub
sti
inc
sub
leave
adc
sub
push
sub
ja
shl
jge
js
stos
push
inc
jmp
xchg
dec
mov
xor
je
in
jae
int3
lods
add
cmpsb
mov
add
xchg
mov
cmc
lea
popf
outsb
xchg
jmp
lahf
out
mov
ret
out
out
adc
push
mov
xor
sbb
fucomip
cmpsl
jno
jbe
push
ret
dec
push
icebp
sub
xor
push
outsb
loop
ljmp
adc
lret
test
out
movsb
mov
cmp
call
sub
fwait
mov
sub
jl
inc
push
inc
mov
mov
xorl
inc
fnstsw
lods
loopne
add
scas
repnz
lahf
mov
xor
out
mov
and
adc
clc
stos
popa
movsb
mov
enter
ret
enter
cmp
fs
int
sbb
jecxz
or
xor
cs
xor
xchg
sbb
mov
dec
mov
push
aas
xchg
mov
lret
or
add
or
cmp
addr16
jg
mov
sbbb
or
xor
ds
in
loopne
dec
add
arpl
xchg
mov
adcb
ja
aam
add
jnp
mov
lea
jle
xchg
ja
mov
in
shll
rclb
daa
je
mov
out
push
stc
ss
push
ret
shll
mov
inc
xchg
mov
and
lock
push
jb
xor
pop
adc
or
in
popa
shlb
mov
and
icebp
pop
push
fcompl
xor
mov
and
pop
inc
cld
pop
jnp
sub
mov
pop
mov
repz
push
movsb
loope
fldl
mov
data16
ss
mov
dec
mov
xchg
int
adc
mov
dec
shl
pop
test
or
mov
sub
lds
dec
fmul
sqrtps
mov
sbb
repnz
mov
xchg
mov
sbb
out
lret
mov
call
sub
movsb
lods
bound
mov
xchg
mov
inc
mov
ljmp
mov
jb
andl
leave
xchg
dec
por
repnz
pop
incl
xor
stos
sbb
mov
mov
inc
stc
imul
mov
mov
xor
sub
jl
xchg
jno
sbb
fnstcw
inc
js
sub
inc
insl
daa
int
ja
popa
stc
push
mov
mov
or
loopne
add
mov
imul
into
add
jp
dec
enter
add
push
xor
je
enter
out
iret
sti
into
cli
mov
and
cs
lods
test
jns
xchg
mov
es
cld
dec
sarb
mov
loopne
add
add
sbb
and
dec
xchg
jge
je
int
sbb
aam
lcall
lods
aam
insl
fidivrs
bound
data16
mov
and
xchg
mov
push
repz
jl
aam
add
dec
enter
out
push
aad
xor
xchg
xor
ds
fsubl
cwtl
mov
popa
sub
das
stos
cmp
cmc
subb
call
pop
jp
insl
shrl
mov
fwait
in
mov
and
jp
and
mov
adc
fmull
pushf
mov
rorl
rorl
add
lret
fnclex
and
cli
mov
shl
sahf
insb
adc
lods
jecxz
inc
mov
fiaddl
mov
fmuls
mov
cmp
jmp
cmpsb
pop
adc
and
push
lea
add
push
sub
lahf
pop
movsl
mov
mov
xor
imul
xchg
jl
addr16
addl
adc
mov
and
repz
or
mov
add
push
lock
test
or
inc
icebp
cli
aas
std
ss
cld
sbb
mov
and
inc
lods
sbb
mov
fucomip
push
pop
js
jo
jle
sbb
push
daa
pop
daa
and
xchg
call
xchg
movsl
fs
daa
fcmove
jle
push
push
mov
subb
cmp
xchg
das
inc
daa
sti
ja
test
pop
shll
arpl
pop
add
mov
adc
incb
hlt
sub
pushf
jge
and
or
arpl
xchg
xor
dec
andl
scas
imul
lret
xor
outsb
repnz
dec
sarb
dec
mov
cmpsl
cmpxchg
pop
xor
push
jnp
sarb
fwait
pop
inc
sahf
cmpsl
shll
leave
lcall
push
rclb
lcall
leave
in
cld
mov
sub
fwait
inc
add
daa
mov
test
pop
jne
out
fdivrp
mov
dec
insl
pushf
push
lahf
xor
pop
call
scas
xbegin
mov
scas
inc
add
xor
insl
loop
ja
cmpsb
repnz
push
push
sahf
xchg
mov
lahf
pop
imul
loop
ljmp
lret
aaa
mov
out
xor
mov
ss
inc
popa
fldl2t
stos
jo
xor
insb
cmpsb
call
inc
or
mov
pop
adc
lahf
out
iret
daa
push
shr
or
daa
mov
add
add
or
outsb
push
aam
inc
insl
jge
sub
in
xlat
mov
xchg
lahf
jb
add
enter
mov
ret
sbb
jne
dec
pop
mov
xor
scas
es
xchg
pop
lods
xchg
cwtl
sbb
je
push
cwtl
gs
imul
into
lcall
ficomps
push
jne
inc
sbb
inc
adc
loop
lock
out
lahf
push
xchg
out
rcll
sbb
pop
inc
ret
sti
repnz
call
push
pop
inc
jne
dec
xchg
mov
lods
dec
cmp
pop
lods
adc
xchg
jg
rcl
sbb
jo
or
dec
leave
pusha
arpl
ret
add
mov
dec
xchg
inc
push
add
mov
pop
scas
notb
cmp
add
mov
jns
pop
ret
add
jo
mov
outsb
sbb
add
fcoml
gs
cmp
out
imul
imul
dec
push
xlat
xchg
xlat
or
mov
ss
pop
sub
shlb
push
push
sbb
adc
jl
dec
cwtl
scas
add
sbb
pop
outsl
aas
mov
insb
pop
sub
pop
mov
xchg
and
call
adc
or
mov
cmp
inc
fcmovnbe
xchg
mov
xor
pop
mov
add
fldcw
inc
lods
cmpsl
jo
xor
fptan
add
adc
filds
loopne
cmp
pop
jge
cld
mov
xchg
pop
xlat
jmp
cltd
roll
fnstsw
mov
cltd
jmp
mov
sti
lret
shrb
xor
nop
jne
mov
pop
frstor
jge
rorl
pop
mov
mov
adc
mov
pusha
pushf
je
adc
ja
lods
ret
push
sbb
rol
pop
jp
pusha
dec
cmp
xchg
mov
inc
and
xor
jl
push
inc
lret
add
fnsave
push
push
mov
jl
xchg
cmp
inc
imul
nop
ret
add
cmp
adc
pop
xchg
aam
aam
mov
outsl
out
fnstcw
dec
mov
dec
push
or
jb
adc
dec
out
xor
mov
push
mov
sub
test
sub
cli
mov
jge
sub
jnp
out
popa
xor
ja
rcrl
in
int
dec
gs
mov
frstor
dec
dec
add
dec
xchg
mov
mov
test
inc
loopne
in
movsb
pop
icebp
jns
sti
dec
inc
adc
cmp
lret
addr16
icebp
mov
aaa
clc
jecxz
xchg
jmp
pop
jno
inc
and
add
imul
pop
mov
pop
add
and
pusha
jmp
icebp
inc
adc
sbb
fistpll
xchg
mov
or
je
pop
lahf
addl
lahf
xor
aam
inc
adc
sti
dec
subb
shl
std
jae
cld
lret
inc
sub
ljmp
faddl
jbe
ret
int
sub
jns
push
adc
mov
movsb
sarb
aad
hlt
clc
fcompl
mov
or
xchg
aad
lock
loopne
aam
loope
cmpsb
and
mov
mov
jmp
xchg
addr16
jmp
mov
adc
push
stos
outsl
and
xchg
sarb
out
js
orl
loop
jge
popf
cmp
mov
es
mov
pop
loop
mov
shlb
movsb
insl
andl
icebp
and
lds
xchg
mov
mov
bound
test
cmpsl
xor
roll
jmp
pop
dec
lahf
jns
and
xor
call
mov
inc
adc
insb
pop
mov
ds
in
fstpt
cs
movsl
ret
inc
insl
insb
or
out
mov
in
cmpsl
adc
inc
rorb
lods
cmpsl
xchg
out
loop
and
mov
ljmp
xchg
jp
aaa
mov
repnz
push
movb
fnstenv
ficompl
das
adc
shrl
pop
clc
arpl
mov
lret
ret
std
test
dec
xor
sbb
movsb
push
fnstcw
jbe
cs
adc
pop
das
lahf
insl
aas
scas
mov
insl
cltd
mov
insb
mov
sub
push
jl
add
fnstcw
xor
das
push
stos
and
dec
mov
sti
jnp
mov
lahf
in
cmp
mov
inc
stc
out
test
pop
stos
dec
movsb
jmp
fcoms
and
mov
mov
mov
dec
mov
pop
pop
loopne
pop
xor
das
sub
jbe
dec
jne
push
stc
lods
cmp
shl
cmp
mov
lock
test
mov
cs
out
fnstcw
les
mov
pop
jne
ret
mov
cmp
add
cmp
jns
pop
mov
scas
es
fnsave
cmc
jnp
adc
push
mov
xchg
xor
rcll
xchg
mov
mov
sbb
pushfw
int3
mov
push
mov
inc
dec
add
xlat
jae
inc
sub
pop
mov
push
mov
fiadds
mov
pop
adc
fucomi
data16
scas
repnz
in
and
adc
mov
dec
ss
sub
mov
fldl
jle
ret
divl
in
repnz
mov
sub
cmpl
outsb
add
adc
scas
mov
mov
shrb
adc
or
paddsw
fcompl
jbe
inc
jmp
insb
stos
lret
mov
xor
hlt
push
test
push
test
lret
jne
sub
pop
pop
insl
test
test
scas
xor
mov
or
cmp
js
enter
dec
sbb
sub
js
push
aad
mov
sub
mov
push
sub
and
fld1
push
inc
lcall
xchg
push
movsl
jg
lahf
insl
orb
rcl
test
xchg
xchg
arpl
mov
out
and
insl
dec
cmp
in
push
push
sub
lcall
sub
mov
rclb
mov
shl
int
add
aas
or
cmp
mov
push
aam
into
repz
sti
pop
push
pop
jle
push
out
adc
sbb
xor
and
shlb
mov
popf
das
pop
cmp
test
push
sbb
jns
mov
inc
or
imull
cli
into
or
sti
inc
xor
testb
dec
jo
dec
fnsave
nop
mov
add
xor
xchg
adc
cmp
xchg
in
in
inc
loopne
cmp
fsts
adc
out
inc
sbb
sbb
sub
call
pop
mov
movsl
mov
fwait
sbb
ds
sbb
jp
pop
or
cmp
stos
mov
ret
xlat
imul
fsubs
lahf
inc
add
push
and
or
inc
ja
adc
inc
mov
xor
cwtl
xchg
xchg
and
pop
pop
cwtl
imul
xchg
push
adc
and
mov
push
inc
push
daa
pop
xor
lahf
out
push
bswap
sub
add
sahf
fbld
add
mov
lea
call
cld
lcall
cmp
ljmp
rorl
sub
push
dec
dec
pop
aam
cmp
mov
or
push
cmc
call
adc
add
scas
lods
gs
mov
test
fucomip
mull
mov
test
gs
xchg
in
inc
cmc
jmp
lods
shrl
aas
in
popf
jecxz
pop
test
mov
xchg
insb
lret
lods
sub
push
jge
arpl
mov
sub
pop
xor
sbb
addr16
mov
pusha
aam
and
pop
sti
je
dec
xor
or
adc
int3
xor
inc
inc
sbb
mov
jo
scas
idivl
xchg
lds
addl
mov
inc
rclb
adc
cmpsl
or
in
jbe
cmp
movsl
addr16
cmpsb
aam
push
inc
fs
xor
add
sbb
clc
adcb
aad
mov
fmull
addl
or
lock
je
jl
xchg
aam
test
push
call
push
or
cmp
ss
mov
xor
mov
sbb
inc
test
dec
lahf
cmpsb
xchg
cmp
fidivs
cmc
out
scas
gs
enter
inc
sub
jge
mov
stos
cmp
dec
cmpsb
mov
mov
jo
sub
sub
sbb
push
fistpl
aad
or
in
test
rolb
imul
loopne
stos
leave
pushl
ss
sub
pop
es
lock
insl
addr16
lea
orb
inc
adc
push
nop
out
sub
adc
adc
cmp
cmp
movsl
outsl
mov
mov
in
cmp
aaa
jne
mov
je
pop
pop
insb
scas
loop
js
xor
cltd
out
mov
in
scas
jle
int3
push
mov
imul
rolb
xor
rclb
mov
je
mov
into
clc
pop
sub
fs
or
in
xor
jmp
jge
mov
in
xchg
in
jns
mov
sahf
stc
sbb
pop
aad
push
adc
inc
sub
cwtl
test
add
jecxz
cmpsl
xor
test
xchg
xchg
cltd
adc
test
adc
outsb
pop
push
sbb
mov
dec
cmp
arpl
pop
insl
outsb
mov
xchg
mov
or
add
cmp
pop
dec
loopne
hlt
js
sub
mov
jg
pop
test
int3
pop
xchg
in
jno
les
stos
xlat
popa
addr16
ja
add
cwtl
xchg
hlt
clc
hlt
jle
adc
mull
lcall
jbe
call
sahf
sbb
fmull
jl
mov
out
in
frstor
add
test
mov
jb
lret
lcall
icebp
xor
jle
outsb
call
xor
mov
pop
sbb
imul
je
lret
mov
mov
imul
addr16
mov
scas
pop
inc
pop
dec
xlat
mov
pop
ja
adc
xor
mov
pop
cmp
movsb
adc
pop
lods
lods
and
add
pop
cwtl
jmp
pop
or
jle
aaa
in
ja
push
test
mov
flds
add
inc
mov
repz
enter
jno
xor
lret
popa
fnsave
sbb
repz
lock
add
or
cmp
xor
jne
lods
jo
fs
mov
mov
xor
cmp
test
lret
sbb
out
movsb
pusha
push
mulb
pop
lahf
mov
push
int3
xor
xchg
inc
aad
mov
or
push
aam
xor
int3
movntq
scas
std
out
inc
and
push
sbb
push
or
jno
aas
push
out
xchg
sub
xor
imul
adc
sbb
push
sbb
mov
adc
lods
xor
cmp
jmp
into
inc
lahf
push
sub
lcall
subb
mov
sub
adc
fprem1
int
and
aaa
aas
std
or
out
enter
popf
test
popf
or
xchg
shrl
jge
mov
movsl
mov
in
jns
aas
mull
jmp
insb
or
add
xor
pop
movsl
xchg
jg
pop
lea
fmull
lods
sbb
lahf
add
int
mov
in
stos
or
das
and
jmp
xlat
out
stc
push
ja
ret
push
and
inc
test
push
add
adc
aaa
pop
mov
fdivp
and
mov
fidivl
jnp
cwtl
add
mov
popf
push
adc
sub
sub
and
mov
dec
inc
inc
loopne,pt
rolb
cltd
cmp
or
ret
sbb
mov
dec
mov
dec
push
sbb
and
divl
cwtl
inc
insb
pop
loop
lds
movsb
adc
push
inc
jl
in
jmp
and
mov
lods
pop
and
int3
push
dec
ds
fsts
sahf
sub
pop
sar
xrelease
aas
imul
movsl
mov
mov
xchg
rolb
int
inc
test
or
test
rcrb
fnsave
mov
push
xor
or
inc
sub
xor
test
sub
or
pop
icebp
dec
lcall
in
jle
divl
mov
and
jae
cmp
push
into
mov
jmp
mov
jmp
pop
sub
arpl
pop
fiadds
fdivrl
fcoml
xchg
fadds
hlt
mov
mov
mov
jbe
jns
fs
out
jno
mov
jae
lret
adc
test
stc
lret
pop
cmpb
in
test
sbb
mov
xchg
jo
stos
add
lods
cmpsl
push
stc
push
lret
sbb
or
cld
adc
push
add
mov
lahf
mov
je
cmc
jns
mov
sbb
and
push
mov
sub
insb
ljmp
jl
mov
cwtl
sarl
repnz
push
pop
pop
ds
mov
inc
or
cld
xchg
dec
mov
or
sbb
add
pop
adc
pop
xchg
inc
and
iret
cli
inc
xor
jle
test
out
test
xchg
clc
mov
scas
lds
xor
les
push
mov
inc
scas
xor
xchg
int3
sbb
ffree
sahf
jecxz
addl
sti
push
lods
cmp
and
stos
mov
es
aas
movl
xlat
cld
and
outsb
je
jb
mov
adc
adc
push
in
repz
test
popa
lret
imul
pop
fcoms
outsl
addr16
leave
aam
lahf
push
aaa
mov
pop
sub
jne
das
cmp
cmp
inc
dec
xor
std
inc
or
pop
inc
push
ret
fstpt
mov
jp
in
push
push
mov
aad
push
scas
cs
rcr
and
and
mov
adc
scas
ret
cld
imul
push
shll
enter
imul
jp
pop
fisubl
lods
fistl
push
clc
push
imul
test
cmc
pop
lods
mov
dec
js
inc
in
adc
dec
or
mov
cwtl
cmp
lea
push
push
fcoml
add
sti
jne
icebp
ret
inc
sbb
add
dec
addr16
adc
daa
popf
lods
rol
dec
jecxz
cmc
pop
imull
and
xor
lahf
inc
int
sub
jl
cld
icebp
stc
in
mov
pop
sti
cli
cs
scas
and
add
fsubr
dec
loopne
pusha
ret
jns
lret
call
adc
pop
cld
int
ja
mov
ja
sbb
jae
xchg
lahf
pop
pop
call
xchg
cmc
mov
daa
in
mov
cmp
mov
xor
sbb
mov
xor
inc
and
mov
sub
xor
popf
mov
mov
adc
lret
inc
out
pop
mov
jge
out
test
iret
jb
or
add
stc
mov
mov
iret
add
xorb
cmp
fistpl
dec
shlb
test
data16
testb
mulb
addr16
jge
loop
and
mov
adc
scas
dec
idivl
xchg
daa
and
sti
push
add
sub
fisubl
or
cmp
push
cmpsb
jnp
pop
cmp
mov
mov
aaa
aaa
push
mov
outsl
jno
xor
movsb
jmp
adc
xor
clc
je
pushf
out
aas
pushf
lods
push
ret
call
jp
jae
or
cmp
xor
add
sysret
mov
jmp
ds
scas
mov
popf
pop
imul
xor
mov
pop
fdivs
les
decb
sbb
add
adc
call
inc
push
fists
ljmp
mov
mov
daa
iret
stos
out
xor
or
fdivrp
iret
lods
mov
repnz
int
sbb
fwait
aaa
xchg
push
ds
push
sub
inc
adc
sub
pusha
pushf
movsb
loopne
cmpsl
xor
mov
sbb
clc
sub
lahf
xchg
mov
iret
fs
mov
clc
leave
dec
sbb
adcl
movsb
inc
jo
fwait
hlt
addl
xchg
cld
pushf
jnp
pushf
xorb
cmc
xchg
sbb
push
cmp
out
aaa
jmp
scas
fdivs
je
and
fs
mov
ljmp
sbb
add
test
inc
aas
mulb
orl
dec
xchg
jne
jl
add
jne
movsb
mov
jmp
insb
cmp
push
mov
into
fstps
inc
jmp
cmpsl
push
andl
inc
sub
jne
insl
cmp
cmp
ficompl
in
add
push
or
out
es
pop
jno
dec
xchg
test
and
pop
lods
lret
test
xchg
jb
push
cmp
loope
xchg
add
push
sub
mov
pop
mov
pushw
int3
mov
mov
cmpsl
jo
push
clc
negb
bound
sub
daa
cmpsl
test
inc
inc
push
fstps
cmp
lcall
mov
je
xchg
fbstp
xorl
dec
sbbl
push
icebp
cltd
fisttpll
stos
movsb
lods
es
std
jmp
jo
push
sbb
fdivrl
rcr
push
je
insl
sub
fwait
mov
xchg
lods
push
outsb
loopne
cmp
and
movsl
das
push
mov
movsb
mov
mov
mov
ror
xchg
ja
add
inc
lock
mov
mov
push
fwait
mov
scas
cs
sbb
pusha
out
jne
daa
push
inc
push
je
inc
call
lds
xor
add
andl
fcmovb
std
pop
push
cs
xor
push
xchg
lods
cmp
cmp
rorl
sbb
push
cwtl
fsubrp
sti
aam
nop
cmp
insb
roll
push
divl
fisttps
xor
xchg
pop
es
bnd
test
fst
push
push
call
adc
cltd
inc
and
cld
and
add
leave
movsb
fldt
jo
adc
add
shl
jbe
std
jo
icebp
pop
nop
bound
pop
adc
and
enter
xchg
in
add
sub
rorl
sub
adc
xchg
mov
mov
icebp
push
ficoml
xchg
std
into
mull
jge
cmpl
add
cmpsl
add
pop
pop
lock
dec
jmp
int3
or
xchg
adc
popa
inc
cmp
in
xor
push
daa
imul
pop
fnstenv
inc
shlb
mov
in
lods
inc
rcr
scas
incb
jns
sti
push
test
daa
in
xchg
mov
add
test
inc
pop
adc
loopne
scas
movsl
fnsave
jmp
and
sub
xchg
mov
xchg
cltd
lahf
inc
lds
sahf
mov
mov
aad
dec
andl
cmp
cltd
cmp
xchg
xlat
xchg
inc
addr16
stc
cmp
or
ja
popa
cmc
inc
adc
mov
ljmp
mov
iret
rclb
shr
ficoms
enter
pop
cld
add
dec
pop
orb
int
add
mov
shl
pop
hlt
rolb
dec
enter
jne
cmp
mov
lcall
cltd
xchg
loop
in
inc
cmc
jmp
mov
jns
dec
pop
pop
adc
out
inc
loopne
or
mov
lods
or
mov
cli
mul
push
aaa
jne
mov
loopne
adc
push
mov
dec
dec
and
rorl
mov
or
cmpsb
xchg
imull
cmp
call
repnz
mov
fwait
inc
xor
aam
push
roll
dec
mov
mov
sbb
mov
sub
inc
insb
cltd
xor
jno
jns
loop
movsl
xchg
push
lds
adc
outsl
js
ficompl
gs
insl
rorb
jl
push
dec
sub
sub
mov
cltd
add
pop
in
mov
and
movsb
enter
cld
xchg
test
out
in
shll
in
or
sub
lahf
inc
std
mov
mov
andb
hlt
test
sbb
dec
pop
lea
and
lret
adcb
cmpsb
out
add
lods
or
sub
sbb
das
js
in
inc
stos
testl
dec
std
push
jl
in
xor
cmpsb
cmpsl
inc
xlat
add
sub
xor
xor
dec
out
pop
jmp
jnp
cmc
gs
mov
mov
adc
or
mov
outsb
xor
fdivs
push
mov
mov
xchg
insl
nop
flds
icebp
pop
es
insb
xchg
xchg
cmp
pop
pop
sub
dec
movsb
lock
lock
enter
mov
pop
push
push
push
fsubp
out
mov
or
fistps
pop
xchg
pop
and
mov
pop
cli
jecxz
jle
jmp
dec
out
mov
push
inc
mov
cmp
adc
aam
cld
roll
adc
mov
sbb
sarb
insl
pop
pop
inc
jmp
loop
xor
mov
pop
leave
add
mov
add
and
andb
stos
movsl
orb
lret
cs
ret
push
sbb
mov
pop
dec
adc
cmc
outsl
add
pop
add
inc
pop
test
faddl
fadd
enter
xchg
movsb
aam
out
mov
ja
dec
inc
add
xchg
test
bound
movsb
jecxz
xor
sarb
dec
cld
and
stc
sbb
jb
in
jecxz
sti
pop
scas
pop
jecxz
mov
loop
inc
xchg
cmpsl
inc
xor
push
mov
cmc
iret
mov
cltd
rorl
sbb
int
out
or
cmp
fsubl
mov
pop
xchg
loop
scas
out
cmp
hlt
push
les
add
lahf
popa
ffreep
loope
inc
out
mov
mov
lahf
pop
jne
cltd
clc
xlat
std
inc
and
mov
lahf
inc
js
scas
inc
movsb
jg
adc
shlb
dec
dec
xchg
sahf
mov
xor
pop
sub
jmp
pop
cmp
add
push
push
ret
pushf
xor
sbb
scas
pop
cli
mov
aam
lods
arpl
je
add
enter
or
imul
xor
xor
inc
push
cmp
je
arpl
testb
aad
push
xchg
or
and
popf
pushf
int3
repnz
lods
arpl
dec
add
jge
arpl
lds
gs
cli
mov
fisubrl
push
ret
in
out
rcrb
mulb
xchg
lahf
das
outsl
dec
mov
adc
dec
sarb
pushf
les
stos
add
jl
lock
jp
cmc
insl
clc
es
mov
xchg
ljmp
adc
jg
fwait
sub
ss
cli
push
mov
in
out
aam
mov
cmp
cwtl
in
call
movb
adc
bound
jnp
jb
and
mov
ss
in
fwait
push
jbe
rcrb
or
rcrl
cld
sbb
ret
or
adc
mov
sub
pop
jmp
jmp
push
xchg
jo
xchg
jcxz
mov
mov
cmpsb
mov
fmuls
mov
mov
fwait
inc
push
adc
or
lods
xor
and
lock
cmp
jns
clc
lock
jge
sub
lcall
push
fwait
mov
cs
movsl
ds
add
icebp
loopne
jns
mov
jo
sahf
push
out
mov
and
dec
jge
cs
into
shl
imul
push
gs
pop
mov
jo
dec
fucomip
ret
leave
stos
pop
shrb
jmp
xchg
repnz
gs
cmpsl
lods
popa
fisubl
out
out
adc
pop
repnz
out
pop
push
mov
sub
pop
add
imull
add
shrb
add
les
xchg
flds
pop
jl
lds
jg
push
fcmovbe
mov
cmc
nop
imul
fs
ret
test
data16
sbb
sahf
push
cwtl
lock
adc
ret
pop
inc
mov
and
in
clc
imul
test
pusha
sub
lods
or
or
sti
push
pop
mov
mov
out
sub
out
jb
daa
jbe
movsl
add
fnstsw
inc
xor
add
push
stos
sar
fwait
xchg
pop
pop
cmpsb
fdivrl
fnstsw
and
clc
add
mov
cmp
sub
cltd
jp
xchg
cmp
dec
or
data16
das
ret
cli
cmp
pop
mov
imul
imul
pop
fcmovnb
std
push
test
push
pop
das
out
sub
jg
aad
out
lahf
sbb
inc
sbb
inc
mov
scas
fwait
enter
test
es
jne
mov
mov
sbb
out
xlat
xchg
xor
loopne
inc
xchg
rorb
insb
xchg
dec
mov
sbb
icebp
or
pushl
adc
sbb
inc
xor
test
and
mov
arpl
aas
lahf
pop
adc
add
pop
xor
lahf
mov
icebp
out
or
sbb
pushf
jo
je
cmp
xor
mov
ja
pop
jp
cld
clc
mov
mov
jne
xlat
push
mov
push
jns
repz
cmp
dec
pop
dec
mov
into
jne
cmpb
jge
xchg
mov
cld
push
movb
mov
cmpsl
xchg
mov
addb
and
ds
xchg
jmp
stos
iret
mov
sahf
sbb
jg
adc
sub
ficoms
fbld
push
ljmp
sbb
sub
dec
mov
mov
dec
imul
dec
lahf
jne
testl
sbb
popa
push
pop
enter
sbb
dec
and
stos
aad
push
loop
rol
ficoms
mov
out
addr16
jecxz
sbb
mov
outsl
rol
cmp
xchg
into
dec
sub
inc
int3
rclb
in
jnp
cmp
mov
xor
std
add
iret
mov
mov
syscall
fld
enter
test
in
je
add
stc
mov
lcall
push
addb
in
clc
ret
scas
xchg
cwtl
xorb
push
mov
outsl
cmp
insb
and
cmp
clc
push
mov
test
imul
adc
in
xor
xchg
xchg
gs
mov
test
add
in
fimull
das
clc
mov
sbb
mov
mov
xchg
pop
pop
adc
mov
adc
in
inc
cmpsl
jle
arpl
ret
shll
out
loopne
into
dec
sbb
inc
and
push
data16
lret
jg
jns
ret
cmp
icebp
fmuls
or
loope
ffreep
stos
andb
push
xchg
sbb
repnz
addr16
mov
xchg
fidivrs
out
push
repnz
pop
lahf
mov
dec
scas
mov
pop
out
pop
mov
pop
aas
xchg
cmp
test
pushf
insl
adc
sti
clc
in
mov
mov
mov
mov
mov
jmp
add
adc
and
xor
jecxz
adc
in
dec
cmp
pushf
cmp
xor
dec
mov
xorl
fildll
aad
add
cmp
xor
std
xchg
test
xchg
pop
incb
sub
scas
mov
arpl
lret
loop
inc
sub
push
add
sbb
jbe
mov
sub
xchg
mov
pushf
sub
testb
repz
icebp
pushf
xor
andb
popf
pop
es
hlt
scas
in
and
jp
in
test
test
aad
jle
mov
cmp
sbb
adc
sti
es
cmc
or
cwtl
call
push
xor
push
mov
add
arpl
lds
jb
cli
sahf
stos
xor
dec
test
and
push
jle
mov
fisubs
jecxz
mov
sahf
adc
iret
shr
stos
push
pop
cmp
xchg
int3
mov
lret
mov
ret
fidivrl
in
call
arpl
cmp
pusha
sahf
xchg
jg
cmc
ljmp
mov
push
pop
in
out
aas
sub
popa
mov
repnz
push
lods
adc
das
xchg
adc
sbb
cmp
sti
fxch
pop
inc
je
repz
xlat
sbb
adc
in
add
mov
and
add
mov
sub
jecxz
aaa
pop
mov
jle
in
test
inc
ret
cmp
adc
enter
or
mov
xchg
sbb
jnp
mov
add
mov
rcl
push
mov
pop
call
sti
or
mov
push
aad
push
sub
push
jns
push
mov
mov
into
fwait
popa
xchg
arpl
sbb
jp
incb
lret
cmc
sub
shlb
adc
mov
adc
mov
andb
push
xor
adc
bound
push
andl
cld
jb
mov
xlat
and
loopne
jp
idiv
xchg
aaa
adc
mov
clc
xchg
jge
mov
mov
bt
cld
sub
push
and
lods
xchg
sbb
jno
lret
push
cmp
insb
notb
out
jbe
fyl2x
call
in
sbb
jecxz
mov
dec
add
stos
into
out
jo,pn
xchg
xchg
mov
out
fildl
push
in
adc
cmp
imull
dec
addr16
stc
inc
cltd
push
loope
test
dec
jge
lods
sahf
mov
xlat
inc
or
dec
pop
jg
cwtl
add
test
push
dec
mov
aad
lahf
mov
mov
out
hlt
xchg
cli
lahf
loop
xchg
or
into
in
add
jge
loop
push
shrl
into
mov
cld
loop
aad
adc
jne
add
out
xor
mov
fcmovu
cwtl
pop
cmc
jns
jnp
mov
fisubl
lods
jge
cmp
dec
xchg
push
mov
fmulp
nop
and
and
and
inc
aaa
xor
adc
lods
loope
mov
sbb
push
push
mov
push
dec
lea
sub
cmpsb
xchg
and
mov
xchg
rcrb
push
lcall
movsb
or
sti
out
lods
xacquire
dec
xchg
test
xor
out
adc
push
test
rol
adc
addb
add
sbb
pop
call
jmp
xorb
jno
pop
out
dec
repz
mov
xchg
xor
mov
inc
push
lcall
repz
dec
int3
shll
mov
jns
cmp
nop
dec
mov
jmp
outsl
dec
fs
inc
out
dec
pop
popl
pop
adc
clc
mulb
adc
inc
out
es
sub
out
cmp
xor
xlat
sub
fnstenv
mov
cld
xor
xor
inc
xchg
enter
push
push
add
roll
push
stos
in
lret
mov
sbb
mov
sti
cmpsb
in
in
bound
xor
out
cmp
sub
push
sbb
leave
aas
adc
lcall
sbb
xlat
sub
mov
and
and
push
ret
sbb
xchg
inc
lock
icebp
pop
dec
xor
das
mov
mov
dec
sub
gs
das
xchg
push
adc
adc
fs
jg
xchg
imull
sti
xchg
xor
mov
mov
pusha
enter
mov
movsb
inc
xchg
jp
fisttpll
xchg
call
push
std
adcb
sbb
pop
mul
hlt
iret
iret
xor
push
dec
bound
cmp
mov
je
rcll
jl
fisubl
mov
je
scas
mov
clc
or
stos
test
mov
cmpb
imul
xchg
dec
arpl
mov
xor
addb
daa
push
push
imul
sub
mov
divl
add
sarl
insl
arpl
jnp
lret
addl
jne
pop
adc
scas
test
daa
jne
pop
jle
das
sub
aaa
xchg
ret
cld
cld
add
int
cs
jno
sub
adc
cmp
jmp
out
stc
and
push
rolb
loopne
pop
jns
cltd
push
and
fisubs
mov
jb
in
xchg
vmovapd
icebp
jmp
adc
dec
data16
mov
mov
pop
or
or
add
mov
jmp
pushf
inc
adc
fisttps
incb
pop
mov
inc
sbb
pop
push
sti
mov
push
in
lret
and
push
out
mov
lret
add
mov
cli
fsubl
fimuls
push
inc
push
stos
shl
fwait
adc
push
add
mov
sti
sub
int3
loopne
sub
or
inc
xlat
push
fwait
mov
repnz
hlt
enter
inc
mov
in
movsb
hlt
aam
aam
add
lea
arpl
push
loope
sub
mov
mov
add
out
sahf
imul
aad
add
mov
lods
pop
vsubsd
aam
out
xor
dec
mov
call
push
mov
jno
sub
sbb
dec
mov
xchg
sub
fs
cltd
inc
inc
cmpl
loope
mov
addr16
lods
cli
inc
addr16
xchg
pop
push
loopne
decb
inc
cmp
mov
and
rolb
xchg
mov
push
or
out
mov
mov
cmp
ljmp
and
push
fisubs
inc
pop
inc
jmp
jecxz
inc
fadds
inc
dec
or
xlat
int
xlat
and
push
cwtl
dec
test
loop
ja
pop
bound
fdivrl
test
inc
fcoms
cmp
enter
test
lods
imul
adc
sbb
add
insl
pop
or
mov
mov
aad
push
jb
mov
jecxz
jg
or
pushf
xor
fstpl
fwait
in
out
lret
mov
sti
add
push
sbb
mov
add
rcrl
pushf
cmp
xchg
push
push
mov
movsl
cmp
out
pop
iret
daa
push
or
lret
sbb
mov
adc
jno
xchg
imul
adc
sbbb
or
ss
das
xchg
xchg
data16
xchg
mov
mov
xor
insl
pop
jecxz
mov
ficompl
sub
in
and
daa
push
push
ret
add
iret
cld
shll
add
shlb
pop
mov
push
stc
cli
jae
addr16
stos
xor
stos
cmp
out
mov
mov
fldl
orb
push
jns
cmp
jp
push
sub
jbe
in
incb
pop
out
movsl
aaa
lret
push
push
xchg
push
loop
sbb
mov
push
inc
push
push
loop
mulb
cmpsl
data16
adc
and
jne
mov
cli
popf
fs
inc
pop
rcll
fisttpll
push
and
js
pop
movsl
pushf
fcoms
repz
mov
cmp
inc
ljmp
loopew
and
mov
xor
mov
push
imulb
sbb
fucomi
push
jg
out
mov
adc
add
cld
pusha
ja
push
mov
out
mov
jp
ret
push
ljmp
stc
into
xor
sbb
adc
jmp
loopne
jecxz
jl
out
shr
push
cli
inc
ret
in
xchg
jbe
gs
and
imul
movsl
dec
sbb
movsl
dec
and
mov
jno
sub
push
pop
int3
lods
inc
repz
jl
add
lods
bsr
aas
call
out
mov
push
fidivrl
xchg
push
push
call
scas
dec
pop
sbb
cmp
pop
cmp
mov
xchg
shlb
data16
inc
pop
cmc
rclb
pusha
cltd
dec
xadd
leave
mov
and
xor
test
or
mov
push
xchg
dec
lret
cmp
cmp
sub
sbb
mov
jmp
cltd
xchg
lret
adc
or
jmp
jecxz
pop
ljmp
xor
and
or
movsb
xchg
cmp
cmpsl
ficompl
jnp
push
push
lea
mov
inc
jp
dec
dec
out
xchg
outsl
jge
in
mov
je
inc
sub
pop
negl
dec
test
adc
sub
xchg
loope
sbb
xchg
sbb
sub
and
xchg
mov
mov
gs
cmp
cs
dec
jmp
pop
jecxz
xor
imul
jp
mov
pop
and
push
and
fiadds
cld
xchg
pop
imul
rep
push
adc
in
xlat
cli
adc
cld
ja
ja
pop
cmp
or
xorl
test
imul
scas
cmp
repnz
test
sub
test
fsub
les
repz
pop
gs
mov
nop
xchg
inc
pop
adc
xor
pop
sub
mov
adc
sarl
sub
mov
pop
add
dec
popa
adc
fldcw
pop
sub
mov
mov
or
arpl
mov
mov
push
xor
movsl
xchg
mov
jnp
sub
add
fstpl
loope
add
clc
cmpb
enter
mov
and
cmp
pop
push
enter
addr16
sti
inc
jne
sub
das
mov
pop
fsubl
push
cli
movsl
push
pop
daa
je
test
xor
mov
cmp
xorb
dec
mov
add
sti
ror
or
mov
mov
jo
daa
add
lds
push
pop
inc
adc
mov
pushf
pusha
into
cmp
push
iret
jmp
mov
xor
test
mov
xor
mov
stc
clc
aam
pop
mov
imul
mov
and
dec
fnsave
into
sahf
add
call
pop
adc
add
fnsave
sahf
popf
mov
sar
lods
lea
push
insl
in
inc
push
aaa
xlat
lahf
rcrb
pop
adc
loope
jbe
aad
inc
enter
add
cmp
fcoml
add
idivb
pop
cltd
dec
idivb
and
xlat
pop
mov
mull
jbe
sub
xor
cmpsl
sub
jno
shll
lods
push
fwait
sahf
add
add
mov
xor
xchg
push
dec
stc
xchg
fisubs
bound
cmp
fstpl
xchg
js
imul
mov
inc
lock
movsb
and
daa
add
cmpsl
rclb
movsb
mov
xchg
lock
mov
ja
das
push
sbbb
push
and
jbe
cwtl
dec
outsl
shrb
pop
testb
pop
fsubr
dec
push
dec
and
int3
and
jns
test
inc
xchg
or
sub
testl
add
daa
movsl
loopne
sti
shl
lock
popa
xor
sbb
enter
outsl
xchg
mov
add
into
cmpsl
dec
sahf
xor
shlb
ret
rcrb
adc
adc
cmpsb
push
fists
inc
add
jg
sbb
lret
scas
arpl
out
scas
jle
ds
lods
xchg
pop
lods
int
xchg
sahf
insl
je
fdivs
xchg
push
icebp
jo
or
or
xchg
or
int3
mov
jne
mov
adc
add
jmp
insl
divl
aaa
adc
xchg
dec
adc
inc
lret
insl
lds
mov
cmc
xchg
jmp
mov
inc
sub
repnz
cmp
xor
sub
mov
test
int3
icebp
adc
pusha
or
popa
addb
cmp
ret
lock
aad
jg
push
mov
cmp
fcomi
cwtl
cmp
sbb
stos
iret
push
loope
jbe
int3
mov
test
sbb
dec
or
xchg
mov
cmp
add
jnp
xchg
cmp
rcrl
sbb
sarw
pop
push
insl
adcl
xor
adc
andl
mov
mov
jmp
push
pusha
outsl
ja
xor
mov
mov
cmp
pusha
xor
in
rcll
iret
jmp
movsl
test
ja
mov
push
add
jne
jle
lret
adc
lret
outsl
and
dec
sub
push
or
mov
jnp
sbb
andb
mov
icebp
mov
pop
inc
repnz
and
mov
jle
cmpsb
lret
insl
pop
clc
adc
stos
pop
add
int
insl
out
pop
and
inc
out
lcall
jnp
shr
mov
aas
cmp
sub
mov
out
repz
fld
ret
cmp
insl
xchg
pop
stos
shrb
data16
sbb
cwtl
aam
adc
mov
iret
xchg
mov
xchg
ljmp
lret
sub
test
inc
mov
xchg
ljmp
or
jnp
movsb
das
into
mov
push
inc
lahf
jecxz
cmpsb
ljmp
adc
mov
lods
clc
sbb
sub
mov
int3
mov
xchg
xchg
addl
out
sub
imul
mov
push
fimull
pop
push
pushf
rclb
inc
sub
lcall
hlt
push
jb
xor
push
mov
pop
stos
hlt
add
cmp
pop
shlb
inc
fstpt
pop
xchg
das
xor
jne
pop
add
loope
in
xchg
mov
jns
xchg
decl
cmpsb
jg
lock
repnz
popa
aad
or
jp
mov
mov
lods
xlat
push
cmpsb
xchg
adcl
dec
mov
je
jne
sti
ror
add
roll
adc
mov
repz
add
xchg
out
xchg
test
jbe
push
mov
repz
inc
push
and
shr
sub
inc
popf
int
stc
fsubs
in
in
mov
mov
mov
jae
xor
xchg
and
leave
dec
jb
and
stos
pop
mov
pop
leave
lea
pop
andb
dec
popf
xchg
fildll
aam
cmp
inc
leave
push
adc
ljmp
push
int3
rorb
loope
jb
mov
sub
or
stos
dec
int3
fldln2
dec
mov
ja
cmp
mov
cmpsl
scas
push
pop
shll
push
sahf
adc
or
mov
loopne
jmp
outsb
fsubs
and
lret
movb
call
xchg
in
xor
inc
insl
xchg
in
pop
aaa
cli
jo
cld
push
ljmp
mov
aad
add
andl
popf
cltd
lcall
push
xchg
rcr
movlps
sub
addl
jno
lahf
mov
ret
sbb
jl
push
push
xchg
pop
jmp
xchg
imul
adc
arpl
cmpsb
ret
mov
scas
loop
jecxz
scas
cmp
jbe
xor
sbb
mov
inc
mulb
mov
dec
lcall
mov
pushf
data16
xchg
cmc
lcall
das
mov
mov
pop
test
jl
and
clc
stos
mov
jo
mov
inc
mov
mov
mov
out
call
testb
cmp
pop
push
stos
arpl
outsb
cmpsl
push
xchg
sbbb
mov
fsubl
int3
cmp
std
movd
popa
xchg
jo
pop
push
or
int3
mov
mov
add
or
mov
mov
mov
inc
and
and
outsl
mov
pop
cmp
outsl
push
jns
mov
push
addr16
ljmp
and
xchg
dec
mov
sbb
push
cltd
pop
sahf
xchg
cmc
or
mov
stc
notl
mov
pop
filds
sbb
pushf
sub
in
sbb
scas
in
inc
fdivrs
mov
ret
popa
mov
pop
sarl
and
fs
dec
std
and
int
stos
andl
or
dec
inc
push
mov
insl
cmpps
popa
mov
notb
repz
jns
out
mov
clc
fildll
xor
cmp
xchg
adc
out
subb
popf
jae
out
mov
pop
pusha
dec
xor
jecxz
xor
sub
aaa
xchg
xchg
int
sbb
sbb
cmp
in
pushf
sti
dec
ficompl
push
sub
std
cmp
outsb
push
ja
aaa
adcb
xchg
push
sub
jmp
dec
les
push
xchg
jle
pop
mov
int3
pop
outsl
mov
push
les
xchg
jb
test
pop
sti
outsb
inc
xchg
in
fs
push
jmp
push
sub
mov
fucomip
arpl
mov
enter
js
adc
adcl
adc
leave
imul
xor
xor
jecxz
outsb
shrl
jae
shll
test
jne
mov
cli
das
mov
lods
or
ret
push
push
xor
jge
and
jnp
rcr
dec
dec
ss
mov
xor
xor
pop
add
inc
ss
call
bound
sbb
rol
add
out
jmp
lds
leave
aas
cmp
shll
cmp
mov
ljmp
mov
cmpsl
mov
add
cmpsb
mov
lds
sbb
or
mov
outsl
mov
pop
repnz
out
leave
mov
cltd
mov
lret
push
add
xchg
loope
pop
cmp
stc
scas
lahf
push
scas
icebp
cmp
pop
cltd
mov
add
es
outsl
add
add
push
dec
mov
push
push
or
popa
jbe
fneni(8087
push
fldl
mov
ds
xchg
add
jle
mov
cmp
jnp
leave
dec
and
inc
pop
lcall
pop
lods
add
xor
inc
mov
repz
in
dec
inc
lea
mov
or
dec
test
ja
push
pop
sub
mov
mov
ret
mov
mov
adc
sbb
cmp
mov
ret
lock
cli
insb
jno
je
push
dec
mov
xchg
outsb
dec
mov
aas
fwait
sub
mov
mov
pop
arpl
push
push
push
or
mov
pop
pop
lcall
xorb
and
adc
fisttps
inc
mov
mov
mov
roll
mov
add
mov
sub
cmc
fisubrs
jo
mov
add
sbb
mov
mov
add
mov
nop
sahf
addr16
rcr
push
mov
pop
mov
xchg
pushf
out
cmc
aam
lret
dec
lods
lods
adc
negb
sbb
mov
mov
aas
sbb
sub
push
pop
test
stos
fisubl
adc
andl
sarb
divb
mov
ret
ljmp
pop
jl
std
mov
frstor
imul
hlt
jbe
lea
sub
int
daa
mov
mov
pusha
loope
pop
xchg
mov
fstpl
sbb
cmpsb
cmp
outsl
fisubrl
lock
nop
jnp
add
je
push
cmpsb
inc
mov
sub
xor
mov
je
orl
ss
jmp
out
and
push
push
sub
addr16
xor
push
cmp
rcrb
dec
fisttpll
out
sbb
mov
repz
je
mov
push
test
jnp
mov
rorb
fwait
dec
imul
or
xor
jl
inc
push
andb
mov
out
adc
icebp
hlt
mov
cmp
dec
sbb
jns
add
dec
cmp
dec
or
repnz
lret
push
icebp
lods
jnp
inc
aas
pop
adc
push
iret
adc
in
mov
rorl
pop
fisttps
imul
jge
jg
jl
lret
scas
pop
push
enter
in
xor
mov
mov
cmp
sti
mov
out
scas
jne
lret
cltd
and
and
call
mov
popf
or
sti
addr16
orl
or
outsb
add
insl
loopne
call
mov
mov
ret
cmp
sbb
xor
ja
xchg
lods
bound
stc
or
lcall
mov
lods
pop
adc
pop
cmpsl
cltd
cltd
dec
push
cmp
jge
pusha
xchg
add
sbb
in
inc
loopne
add
mov
loop
int
jae
and
mov
adc
push
aas
mov
int3
sbb
mov
push
cmpsl
lock
mov
dec
mov
iret
xor
push
outsb
dec
out
sub
sbb
shll
out
test
xchg
lods
or
mov
test
sbb
loop
add
push
mov
test
shrb
test
out
outsl
cwtl
pop
xchg
add
xchg
stc
inc
test
lods
sub
mov
jno
hlt
cwtl
loope
jb
sahf
orb
rcr
lret
push
jnp
fmuls
orl
lret
pop
mov
add
jbe
push
mov
outsb
mov
xor
js
stos
cmp
enter
cld
aas
test
mov
add
xchg
daa
jae
pusha
rolb
repnz
sub
fimull
or
test
loop
cmp
inc
dec
fistl
cmp
aam
cmp
dec
jmp
mov
hlt
fs
lcall
push
sub
movsb
bound
and
imul
out
lds
fdivr
pop
cmpsb
inc
sti
add
jbe
fstps
inc
incb
test
idivl
cmp
dec
push
rolb
ret
xchg
mov
sub
jo
fcomps
lret
fists
es
popf
les
out
out
fstps
push
jb
push
xchg
and
sub
fwait
outsl
imul
sarb
sub
mov
js
xor
sahf
sub
pop
xlat
xchg
push
movsl
adc
add
imul
mov
sbb
insl
je
in
shrb
stos
adc
xor
lods
push
int
inc
xor
mov
decl
je
div
test
lods
iret
cld
push
stos
push
das
xor
pusha
ljmp
xchg
sub
push
xchg
sub
dec
pushf
lret
rorl
in
clc
cmp
lods
pop
mov
push
sar
mov
movsb
jge
xchg
xchg
jge
xchg
jecxz
jae
adc
lcall
jae
push
pop
or
shrl
fidivrl
outsb
and
lahf
test
mov
push
or
or
add
mov
xor
mov
loopne
or
mov
xchg
test
testl
jp
or
into
shrl
icebp
dec
mov
fstps
pop
loope
movsb
insb
mov
mov
decl
in
and
insb
mov
inc
dec
insb
movsl
cmpsl
and
xchg
xchg
aas
data16
test
pop
inc
mov
mov
mov
push
jmp
push
push
mov
push
aam
xor
mov
pop
push
ja
add
push
roll
and
icebp
sub
loopne
sbb
into
int
scas
enter
ss
sbb
shrl
into
idivl
inc
mov
jnp
sbb
mov
push
or
fsubp
push
cwtl
int3
push
jnp
push
loopne
add
data16
push
jle
jo
in
adc
mov
int3
push
pop
xchg
sti
pop
dec
lock
sub
enter
aad
scas
test
dec
or
stos
push
xor
mov
leave
xchg
ret
arpl
mov
or
call
testb
shll
stc
adc
out
cmp
mov
push
and
int
xor
mov
mov
int3
in
outsl
or
cld
arpl
shl
pop
loope
scas
nop
xor
xchg
cli
fdivr
mov
add
stc
sbb
out
call
loop
push
pusha
gs
inc
xchg
jno
push
scas
sti
xor
mov
pop
test
pop
out
and
jmp
or
jb
mov
inc
and
fistpl
icebp
out
pop
enter
movsl
jmp
gs
push
mov
cmp
pop
xchg
push
pop
sub
pop
pop
test
pop
out
inc
rcl
xor
and
xor
mov
pop
or
sub
or
fs
xor
arpl
in
dec
mov
mov
subl
mov
out
popf
add
mov
push
jmp
inc
inc
adc
jno
xchg
xlat
sahf
push
aas
or
enter
mov
mov
dec
sbb
jb
inc
jb
inc
ficomps
jns
mov
and
jae
jae
xor
mov
loope
int3
shrb
nop
pop
dec
jp
test
cwtl
scas
movb
cmpsl
inc
mov
sub
int3
sti
inc
inc
mov
pop
add
lcall
mov
xchg
lods
mov
mov
and
mov
daa
data16
shl
paddsw
cmp
sti
and
clc
popf
stc
out
xor
push
ljmp
jno
sbb
fsubs
ficomps
or
jnp
mov
cmp
adc
mov
rcr
dec
add
mov
sub
les
loop
les
xchg
push
push
aad
mov
inc
pop
fidivrl
or
std
sar
mov
cmp
xor
sbb
push
sbb
jmp
xor
sarl
imul
push
rcr
jns
adc
xchg
out
xchg
mov
dec
bound
movsl
pushf
popf
lods
jecxz
div
mov
push
iret
mov
enter
test
pop
xchg
adc
ljmp
movsl
or
xchg
out
cmp
cmp
mov
and
mov
sarb
push
xor
das
cld
push
cmpsb
ja
push
or
out
xor
imul
clc
push
push
mov
cli
cmp
mov
lock
int3
jb
jno
lods
cmp
fidivrs
ja
and
pop
add
rorb
inc
xlat
cmp
jbe
dec
mov
mov
inc
cld
scas
push
daa
call
mov
js,pn
leave
mov
push
popa
xchg
or
and
jne
mov
lds
mov
enter
jl
lods
mov
fdivs
les
ss
js
mov
mov
imul
test
dec
cmp
xchg
xor
sub
push
popf
imul
mov
bound
push
and
mov
das
mov
rclb
ljmp
rcll
dec
test
sbb
fsubl
nop
push
pop
insl
inc
lahf
push
xchg
adc
sbbl
push
lds
es
cmpsb
push
fdivrs
or
push
in
lahf
not
sbb
loope
test
pop
inc
add
das
pop
mov
dec
mov
cmc
int3
sbb
sbb
push
xchg
lods
cs
outsl
sbb
pusha
push
adc
pop
inc
adc
mov
nop
mov
jbe
mov
xchg
cmpsb
cmp
sti
mov
xchg
or
jb
loope
cli
not
inc
mov
xchg
sbb
pop
sbb
cltd
xor
and
sub
add
sti
cmp
add
sbb
cmp
cli
jae
je
push
and
loopne
test
lret
push
xchg
cmp
dec
pop
sbb
in
xchg
cmp
out
cmpsl
xor
or
fiaddl
mov
stos
lcall
icebp
insb
stc
lods
and
add
jno
inc
test
and
loope
sbb
in
lret
out
sub
out
orl
popa
ds
pop
xlat
pop
add
rcr
bound
push
fisubrs
sbb
popa
xor
dec
test
push
frstor
fistpll
in
pop
add
dec
adc
xchg
cmc
fs
out
mov
and
xchg
adc
movsb
and
mov
into
xor
cmp
jo
pop
cmp
lret
xor
pop
add
add
push
xlat
mov
out
movsl
aam
sub
mov
outsl
jne
cltd
cmpsb
sub
lcall
mov
or
mov
inc
out
cmp
ds
mov
inc
test
int
dec
mov
enter
mov
or
ss
inc
cmp
sub
dec
mov
lahf
push
rcrl
je
jge
dec
fdivr
xor
imul
movsb
fwait
cli
popf
repz
push
nop
lock
mov
test
lcall
dec
stos
sbb
leave
sbb
adc
cmp
loopne
ljmp
sub
cmp
imul
popf
les
jmp
cmp
loop
fstps
lds
pop
push
out
fidivs
js
je
insl
gs
je
sbb
movsl
fcmovb
cmp
pop
sub
rcl
jbe
add
and
roll
mov
in
repz
aad
out
xlat
sub
mov
mov
xlat
dec
add
xchg
lahf
sub
sub
mov
cmp
pop
mov
into
sahf
jno
in
and
push
lahf
pop
inc
dec
push
sbb
std
movsb
fistl
cmp
sbb
mov
or
fstl
mov
cmp
rorb
int3
push
or
sbb
repz
repnz
jns
xchg
xor
xchg
add
pop
and
notl
dec
ds
inc
xor
dec
cwtl
mov
das
xor
je
jbe
ja
popa
sub
mov
add
mov
test
adc
cli
test
cmp
sti
cmp
push
mov
cli
call
jae
pushf
imul
and
mov
je
popf
sti
lret
xchg
adcl
scas
inc
scas
or
scas
mov
jne
hlt
inc
repnz
rclb
in
cld
mov
mov
push
xchg
mov
sub
mov
fwait
sub
mov
andl
xor
ljmp
je
pop
mov
xchg
clc
mov
lock
pop
mov
push
hlt
jb
xchg
push
or
jbe
push
jno
cs
push
dec
push
fldcw
ja
out
fmuls
aas
lock
out
pop
xor
in
and
sbb
clc
in
adc
inc
add
stos
jno
aad
mov
adc
jns
push
sbb
xor
cmpsb
add
push
pop
fisttpl
insl
push
rolb
test
shrb
paddusw
dec
rep
shll
dec
loope
mov
add
fmuls
loope
dec
xor
mov
out
aas
add
add
scas
insb
aaa
adc
imul
mov
push
pushw
cmpsw
cwtl
cmp
repnz
jp
ljmp
ja
pop
ds
bound
repz
adc
and
lods
lods
fcomps
xor
xor
leave
mov
xor
mov
adc
popa
clc
icebp
jnp
out
add
pop
mov
cmp
out
ret
xlat
jl
push
adc
das
ljmp
cmp
lahf
aas
pop
hlt
insl
lahf
adc
out
ss
sbb
mov
push
ret
dec
jb
outsl
pop
fstpl
fwait
mov
inc
jb
xchg
mov
jb
in
stos
jne
adc
dec
daa
jg
dec
mov
pop
lea
and
stc
aaa
fwait
iret
push
or
into
rol
mov
xchg
or
test
cwtl
add
fcomps
fwait
addb
pop
test
jbe
nop
add
dec
jmp
or
in
lds
test
push
add
inc
cmpsb
je
jae
mov
adc
in
out
popa
lcall
rolb
mov
mov
iret
cmc
inc
fldl
cld
imul
jecxz
cltd
out
jecxz
mov
aaa
push
hlt
cld
imul
jmp
cwtl
jnp
add
or
mov
in
cmp
mov
push
ds
dec
arpl
rcrb
movsl
lea
aas
jae
lock
iret
cld
xor
push
dec
push
in
in
jne
push
push
sub
mov
mov
adcb
int
sahf
xchg
call
iret
xchg
inc
pop
jae
lcall
xor
clc
stc
sub
aaa
les
push
imul
cmp
scas
std
subb
faddl
out
jl
pop
dec
dec
repnz
mov
jge
mov
mov
repnz
push
cs
mov
loopne
and
cmp
push
add
decb
cmp
dec
in
pushf
in
cmpsb
cmpsl
push
add
in
and
mov
lahf
xchg
xor
movsl
xor
addr16
mov
fisttps
rolb
imul
jb
fnstcw
fwait
jbe
mov
nopl
ret
jle
mov
cmpsb
mov
mov
stc
jmp
lods
mov
stos
push
sar
loop
add
out
and
pop
add
add
sti
xchg
xor
repnz
jmp
push
das
pop
cmp
jmp
