jbe
ljmp
call
push
mov
call
push
mov
call
cmp
jne
push
push
push
lea
push
call
jmp
push
push
lea
push
push
call
mov
push
push
lea
push
call
mov
mov
mov
sub
mov
mov
call
test
jne
mov
mov
push
call
test
jne
push
lea
push
push
call
jmp
cmpl
jne
cmpl
jne
testl
jne
mov
test
jne
test
je
jmp
cmpl
je
jmp
nop
pop
cs
adc
lea
inc
lea
arpl
inc
adc
inc
adc
inc
adc
mov
and
add
adc
lea
lea
out
inc
adc
mov
shrb
inc
adc
nop
inc
adc
nop
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
inc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
pop
push
pop
sbb
sbb
sbb
or
sbb
or
sbb
sbb
or
add
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
add
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
sbb
sbb
sbb
sbb
push
push
pop
sbb
sbb
sbb
push
mov
push
push
push
mov
test
je
push
push
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
cmpl
je
call
sub
cmp
jbe
pop
mov
pop
pop
leave
ret
mov
call
test
je
mov
jmp
push
mov
push
mov
push
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
mov
je
mov
push
call
lea
call
lea
call
mov
pop
pop
pop
ret
push
mov
push
mov
mov
push
inc
push
push
call
test
je
mov
mov
push
lea
push
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
test
mov
je
mov
push
call
addl
add
cmp
jne
mov
incl
mov
pop
add
pop
leave
ret
push
mov
cmpl
jne
push
pushl
push
pushl
call
add
mov
mov
mov
mov
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
mov
push
call
test
je
push
lea
lea
push
mov
xor
mov
mov
push
mov
movl
movl
mov
call
push
pop
cmp
jne
pushl
mov
call
test
pop
jne
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
add
push
movl
call
add
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
je
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
mov
mov
jne
inc
add
enter
push
lea
cmp
ja
mov
pop
pop
ret
push
add
push
call
pop
pop
jmp
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
mov
shl
lea
test
je
movl
andl
mov
incl
pop
ret
xor
pop
ret
push
xor
cmp
je
cmp
push
mov
jbe
push
xor
mov
cmp
push
incl
and
jle
jb
pop
mov
push
call
add
mov
pop
mov
mov
movl
pop
ret
mov
mov
mov
cmp
mov
push
jne
call
add
jmp
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
push
mov
lea
call
mov
test
je
mov
push
call
testb
movl
je
push
call
pop
mov
pop
ret
mov
push
mov
movl
add
rolb
les
or
cmpl
cmpl
cmpl
jge
push
mov
test
je
push
call
test
pop
je
andl
mov
test
pop
jne
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
push
mov
and
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
jne
mov
push
call
cmp
jne
cmp
je
mov
call
mov
test
je
mov
test
mov
jne
mov
mov
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
add
lea
call
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
call
test
jne
lea
call
test
jne
mov
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
mov
lea
push
pushl
lea
push
push
call
add
test
jne
add
add
test
pop
adc
jnp
add
test
aas
add
sti
mov
mov
je
mov
mov
test
jne
or
mov
mov
cmp
jne
mov
pop
pop
pop
mov
pop
ret
mov
cmp
jne
jmp
cmpl
je
cmpl
je
cmpl
je
push
call
mov
jmp
andl
mov
mov
mov
jmp
push
pushl
push
pop
call
jmp
cmp
je
pushl
mov
call
jmp
mov
mov
test
push
push
je
cmpl
je
pushl
lea
call
xor
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
push
push
mov
test
mov
je
mov
call
test
jne
and
mov
test
jne
mov
lea
call
mov
lea
add
add
xor
mov
mov
cmp
mov
jne
mov
test
je
mov
pushl
lea
call
mov
cmp
jne
mov
push
mov
mov
mov
call
cmp
pop
je
decl
jne
mov
cmpl
jge
pushl
call
pop
mov
mov
test
pop
pop
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
pushl
call
pop
lea
call
lea
call
lea
call
pop
leave
ret
push
mov
mov
push
mov
call
test
jne
mov
mov
call
neg
sbb
inc
pop
ret
mov
mov
call
mov
mov
mov
call
sub
neg
sbb
inc
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
cmp
pop
jne
push
mov
cmp
pop
jne
test
je
mov
cmp
jne
xor
inc
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
push
push
xor
push
push
call
cmp
je
mov
lea
push
push
mov
movl
call
test
je
lea
mov
mov
mov
movl
movl
mov
lea
xor
cmp
je
xor
cmp
jne
add
add
jmp
lea
lea
mov
push
lea
mov
movl
call
mov
mov
add
xor
xor
lea
mov
cmp
je
cmp
je
add
add
cmp
jb
jmp
mov
jmp
mov
lea
push
push
call
add
test
jne
mov
lea
push
push
call
test
je
xor
mov
test
jne
test
jne
cmp
je
mov
mov
xor
cmp
je
add
add
cmp
jb
push
call
mov
pop
pop
pop
xor
call
mov
pop
ret
cmp
jae
shl
mov
mov
mov
add
mov
mov
push
push
lea
push
call
mov
add
mov
jmp
mov
jmp
mov
mov
test
mov
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
mov
test
push
mov
je
and
jne
pop
pop
ret
mov
jmp
push
mov
movl
movl
cmpl
jne
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
lea
push
call
pushl
call
pop
pop
jmp
push
mov
push
mov
mov
cmp
je
cmp
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
jmp
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
pop
testl
or
push
je
mov
test
je
cmpl
je
cmpl
je
cmp
mov
mov
jne
pushl
pushl
push
push
call
mov
test
jne
push
call
mov
test
jne
mov
mov
lea
push
push
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
jne
mov
test
je
pushl
mov
mov
push
push
call
lea
mov
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
lea
xor
cmp
push
mov
mov
movl
movl
mov
mov
jg
mov
sub
cmp
jg
cmp
jne
cmp
jne
cmp
jne
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
xor
add
jne
mov
movl
xor
pop
pop
ret
push
mov
mov
call
test
jne
mov
mov
call
test
mov
jne
push
mov
test
je
cmpb
jne
mov
mov
call
test
jne
xor
pop
test
jne
mov
mov
mov
pop
jmp
mov
push
call
xor
jmp
add
jmp
mov
jmp
push
mov
sub
andl
push
push
push
lea
call
lea
push
mov
lea
call
mov
test
pop
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
cmpb
jne
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
lea
call
lea
call
lea
call
lea
call
call
testb
je
push
call
pop
mov
pop
ret
push
mov
cmpl
jne
testb
jne
pushl
mov
pushl
call
pop
ret
push
push
lea
mov
call
testb
je
mov
mov
mov
test
je
cmpl
je
mov
push
call
call
andl
lea
xor
call
pop
pop
jmp
mov
test
jne
mov
test
je
jmp
xor
jmp
push
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
mov
movl
jne
push
push
call
add
test
je
mov
call
test
je
mov
lea
push
push
push
mov
call
mov
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
mov
push
call
mov
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
movl
movl
movl
movl
movl
push
push
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
and
or
mov
mov
mov
or
lea
mov
mov
mov
mov
adc
add
add
push
add
add
push
add
xchg
add
add
inc
add
mov
add
adc
add
addb
push
inc
add
add
or
mov
mov
mov
lea
mov
mov
lea
push
push
movl
mov
mov
mov
mov
call
mov
mov
movb
mov
mov
movb
mov
mov
mov
mov
mov
mov
jno
inc
add
mov
mov
mov
mov
mov
mov
push
movl
mov
mov
mov
mov
call
push
mov
mov
movl
call
add
pop
pop
mov
mov
mov
mov
pop
add
ret
int3
int3
push
push
push
push
mov
mov
or
test
je
mov
mov
not
add
and
mov
test
jne
mov
movsbw
movzwl
mov
lea
cmp
jae
movzwl
mov
and
test
je
add
cmp
jb
pop
pop
pop
or
pop
ret
movsbw
movzwl
test
je
nop
cmp
je
movsbw
add
movzwl
test
jne
mov
jmp
sub
pop
pop
pop
sar
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
cmpl
push
push
mov
mov
jne
push
mov
cmp
je
cmp
je
movb
cmpb
jne
mov
cmp
ja
test
ja
cmp
jne
cmpl
jne
push
push
call
pop
mov
pop
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
push
mov
jg
xor
mov
add
cmpb
mov
jne
cmpl
mov
jne
test
je
testb
jne
movl
mov
push
push
lea
push
push
push
xor
call
mov
test
je
testb
jne
test
je
testb
jne
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
lea
lea
xor
push
mov
mov
movl
movl
mov
mov
call
mov
test
jle
testb
push
mov
mov
jne
cmp
jne
mov
test
jg
cmp
jne
cmp
jg
cmp
jne
test
jle
test
jl
cmp
jge
mov
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
jne
mov
sub
push
lea
push
mov
call
movb
mov
test
jne
test
jne
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
sub
adcb
add
xor
mov
push
mov
push
push
mov
mov
lea
push
push
xor
push
mov
mov
call
cmp
movl
je
lea
lea
push
mov
mov
fwait
cli
inc
add
movl
movl
movb
call
mov
mov
lea
lea
call
test
jne
mov
push
lea
call
test
je
test
je
incl
mov
test
mov
jne
mov
test
jne
testb
je
mov
test
je
push
mov
call
mov
test
js
mov
andl
lea
push
push
push
call
cmpl
mov
je
mov
add
incl
lea
push
mov
call
xor
inc
mov
decl
je
mov
mov
push
call
orb
mov
push
call
mov
test
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
je
push
push
mov
test
je
mov
mov
add
add
cmp
jne
pop
pop
mov
addl
mov
add
ret
push
mov
push
push
mov
push
lea
xor
cmp
jne
cmp
je
mov
mov
call
cmp
je
push
call
mov
push
lea
mov
call
mov
lea
push
push
call
pushl
lea
mov
add
call
mov
cmp
je
mov
add
movb
mov
mov
call
cmp
je
lea
push
lea
call
lea
call
pop
pop
xor
pop
pop
ret
mov
call
jmp
push
mov
and
sub
andl
push
mov
mov
push
lea
push
push
push
call
cmpl
je
mov
mov
call
test
je
mov
and
mov
je
push
push
call
test
pop
pop
jne
mov
mov
xor
test
jne
mov
pop
pop
mov
pop
ret
push
mov
xor
inc
movl
movl
mov
andl
test
push
mov
mov
mov
je
mov
shl
push
push
call
test
pop
pop
mov
je
test
jne
test
jbe
mov
test
je
mov
push
push
push
call
test
js
mov
incl
test
je
xor
mov
mov
mov
pop
pop
ret
push
mov
push
push
call
test
pop
je
push
lea
push
pushl
mov
mov
call
pop
test
je
testl
jne
pushl
mov
push
push
call
leave
ret
xor
jmp
push
mov
push
push
cmpl
push
push
jne
pop
pop
leave
ret
mov
mov
mov
cmp
je
push
push
mov
mov
mov
push
push
mov
call
pushl
lea
push
call
mov
test
pop
pop
mov
jne
mov
mov
test
je
and
mov
lea
call
cmpl
jne
jmp
andl
jmp
mov
mov
test
je
push
lea
mov
test
je
mov
push
push
call
xor
mov
call
pop
xor
ret
mov
pushl
mov
lea
push
add
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
push
xor
mov
push
mov
call
test
je
mov
testw
jne
cmp
jne
cmp
jne
testw
jne
mov
push
push
call
cmp
pop
pop
push
pushl
mov
push
jne
or
call
mov
pop
pop
xor
xor
pop
call
leave
ret
push
mov
decl
mov
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
mov
sub
push
xor
cmp
push
je
push
mov
call
cmp
movl
movl
movl
movl
movl
lea
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
cmp
je
mov
xor
mov
call
mov
cmp
je
mov
lea
push
call
mov
cmp
mov
je
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
mov
mov
jmp
mov
push
push
xor
inc
movl
mov
xor
cmp
mov
mov
je
mov
push
call
push
mov
mov
lea
mov
call
add
and
repz
mov
fsts
lea
fstps
mov
mov
mov
mov
mov
mov
mov
mov
call
fld1
mov
mov
mov
lea
mov
mov
mov
mov
lea
orl
orl
fstps
fldz
push
fstps
lea
mov
push
movb
movb
push
lea
mov
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
mov
add
mov
orl
mov
orl
and
or
cmp
movl
movl
movl
mov
mov
movb
pop
jne
mov
mov
mov
cmp
jne
andl
mov
orl
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
push
mov
mov
mov
call
add
mov
mov
push
push
push
mov
call
test
je
cmp
je
mov
mov
mov
movsbw
sub
mov
add
add
cmp
jne
mov
flds
pop
fstps
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
push
push
mov
lea
mov
mov
call
andl
push
lea
call
lea
push
push
call
pushl
andl
mov
lea
call
mov
test
je
mov
test
je
mov
push
push
call
lea
push
call
mov
mov
call
xor
mov
call
lea
call
lea
call
lea
call
pop
pop
leave
ret
push
mov
cmpl
je
mov
mov
test
je
andl
push
push
mov
lea
call
mov
test
je
pushl
mov
push
push
call
mov
lea
call
mov
pop
pop
ret
mov
test
je
mov
mov
test
je
mov
call
test
jl
movsbl
mov
test
mov
je
mov
push
call
xor
ret
xor
jmp
mov
jmp
push
mov
sub
mov
push
xor
push
mov
lea
mov
call
cmp
jne
mov
mov
push
push
call
lea
call
pop
leave
ret
mov
cmp
je
mov
cmp
je
lea
lea
mov
push
push
call
mov
lea
mov
mov
call
mov
mov
xor
cmp
push
sete
push
push
call
ds
inc
add
je
mov
mov
mov
mov
cmp
je
lea
call
jmp
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
lea
mov
mov
push
mov
mov
call
mov
mov
call
lea
mov
mov
push
mov
call
mov
mov
call
xor
cmp
mov
jge
mov
cmp
jl
mov
dec
cmpl
mov
jge
mov
cmp
jl
xor
cmp
lea
mov
jg
test
jle
xor
mov
mov
mov
mov
test
mov
jge
or
cmp
jne
push
call
test
pop
je
mov
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
inc
cmp
mov
jl
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
andl
mov
mov
mov
decl
jne
mov
call
push
call
pop
incl
mov
cmp
jle
jmp
push
mov
mov
mov
sub
push
push
call
xor
cmp
jne
add
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
test
js
mov
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
leave
ret
xor
jmp
mov
test
jne
cmp
je
test
jne
cmp
je
mov
mov
push
push
call
decl
je
andl
ret
push
call
andl
pop
ret
push
mov
mov
mov
cmp
mov
push
je
cmp
je
cmp
je
andl
lea
push
push
push
call
mov
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
xor
jne
test
je
lea
test
mov
je
mov
push
call
xor
jmp
xor
jmp
mov
test
je
mov
rol
xor
ret
xor
ret
push
mov
push
push
xor
push
mov
call
cmp
pop
je
movl
xor
inc
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
pushl
pushl
push
call
test
push
js
mov
mov
call
xor
pop
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpb
push
je
mov
andl
andl
mov
lea
push
lea
push
lea
push
push
call
add
test
js
pushl
mov
pushl
mov
pushl
pushl
call
mov
lea
call
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
mov
push
mov
push
mov
jne
test
jne
mov
cmp
ja
mov
sub
cmp
lea
pop
mov
mov
pop
jb
lea
mov
mov
movw
ret
lea
mov
mov
movw
ret
mov
jmp
push
mov
sub
push
push
mov
mov
xor
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
lea
mov
mov
call
push
lea
call
lea
push
pushl
mov
call
test
js
cmp
mov
mov
jne
push
push
call
mov
mov
push
push
push
pushl
push
call
mov
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
jmp
push
mov
sub
mov
andl
andl
push
push
mov
mov
lea
push
mov
call
mov
call
test
js
mov
mov
test
push
jbe
andl
mov
lea
mov
mov
mov
movl
jmp
addl
mov
mov
andl
mov
mov
mov
lea
add
call
push
pushl
mov
call
test
jne
mov
mov
call
test
jne
mov
test
mov
mov
je
incl
mov
andl
test
mov
je
mov
call
mov
mov
call
cmpl
ja
incl
mov
mov
xor
test
jne
push
push
lea
call
mov
call
test
jne
mov
mov
mov
xor
test
jne
test
je
mov
call
mov
call
mov
test
jne
incl
mov
cmp
jb
mov
mov
mov
incl
test
je
call
xor
pop
pop
pop
leave
ret
mov
jmp
mov
mov
push
call
ret
mov
call
mov
call
ret
movzbl
sub
jne
add
ret
dec
jne
add
ret
mov
and
cmp
movl
jne
push
push
mov
xor
cmp
jne
mov
cmp
jne
push
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
pop
jne
lea
call
lea
call
lea
call
pop
lea
pop
jmp
push
xor
mov
std
inc
add
add
mov
add
in
mov
push
push
mov
xor
push
lea
call
cmp
je
mov
cmpl
push
mov
je
cmpl
je
cmpl
jne
mov
push
push
push
call
add
test
jne
mov
jmp
mov
push
push
push
call
add
test
jne
add
push
add
push
push
call
test
je
mov
pop
pop
pop
pop
ret
mov
push
push
push
call
add
test
jne
add
push
add
jmp
xor
jmp
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
xor
pop
ret
push
mov
push
mov
test
jne
and
testb
je
mov
mov
dec
neg
sbb
and
jne
mov
mov
mov
lea
push
push
push
call
mov
leave
ret
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
lea
cmp
je
push
mov
mov
lea
test
je
mov
mov
mov
test
mov
je
mov
push
mov
call
add
add
cmp
jne
mov
pop
mov
mov
add
mov
pop
pop
lea
pop
ret
push
mov
mov
mov
sub
push
push
push
push
call
mov
lea
mov
call
mov
dec
dec
neg
sbb
lea
inc
call
cmp
jne
movl
movzbl
mov
xor
dec
mov
je
dec
je
sub
mov
add
add
test
mov
je
lea
mov
call
cmp
jne
movl
lea
push
pushl
pushl
pushl
pushl
pushl
call
add
cmpl
mov
je
lea
mov
call
cmp
jne
movl
add
mov
call
cmp
je
cmp
je
cmpl
jne
mov
call
test
jne
mov
call
test
je
pushl
mov
call
pop
test
jl
sub
js
mov
mov
mov
call
cmp
jne
mov
mov
mov
push
add
push
push
push
pushl
movl
pushl
call
add
mov
add
mov
call
cmp
jne
mov
movl
call
test
je
pushl
call
pop
mov
test
jl
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
jg
mov
cmp
jg
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jg
mov
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
add
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
mov
cmp
jg
cmp
jg
cmp
jl
cmp
jg
cmp
jl
mov
mov
pop
mov
pop
pop
leave
ret
cmp
je
cmpl
jne
lea
call
test
jne
andl
jmp
push
push
pushl
pushl
pushl
pushl
call
add
mov
jmp
lea
call
test
je
pushl
lea
call
pop
test
jl
sub
js
mov
jmp
cmp
jne
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jle
jmp
cmp
je
jmp
mov
mov
jmp
mov
mov
jmp
xor
jmp
push
mov
and
sub
push
push
push
mov
or
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
push
push
test
je
mov
push
call
test
je
mov
push
mov
push
mov
call
test
js
mov
mov
test
push
push
jbe
andl
mov
mov
movl
mov
mov
mov
mov
test
je
mov
mov
cmp
je
lea
mov
test
je
orl
mov
mov
push
pushl
pushl
pushl
mov
call
test
jne
incl
mov
addl
cmp
jb
xor
pop
pop
pop
leave
ret
int3
push
push
push
mov
mov
test
je
and
test
je
mov
xor
mov
lea
mov
cmp
je
mov
test
je
and
mov
mov
jne
mov
test
jne
mov
pop
pop
pop
ret
cmpl
jne
test
je
cmp
je
mov
test
je
push
lea
lea
push
mov
mov
call
cmp
je
push
push
push
push
mov
call
pop
mov
lea
mov
push
add
mov
call
pop
pop
pop
ret
lea
push
add
push
mov
call
movl
pop
pop
pop
ret
push
mov
mov
mov
lea
push
push
call
mov
pop
ret
mov
mov
test
jne
call
mov
mov
xor
ret
push
mov
mov
cmpl
je
push
push
pushl
pushl
call
pop
ret
push
pushl
mov
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
xor
mov
lea
push
mov
push
lea
mov
mov
mov
lea
push
lea
push
push
push
xor
movl
mov
movl
call
add
test
je
mov
mov
push
push
push
mov
mov
push
push
lea
push
mov
call
test
mov
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
test
js
lea
call
mov
mov
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
pushl
push
call
ret
mov
mov
test
je
mov
mov
mov
push
call
xor
ret
mov
cmp
jne
cmp
ja
movzbl
jmp
flds
flds
fucompp
fnstsw
test
jp
xor
inc
ret
xor
ret
mov
sub
neg
sbb
inc
ret
nop
outsb
popa
add
adc
add
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
or
push
and
add
call
xor
ret
push
mov
sub
push
push
xor
push
lea
lea
movl
movl
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
movb
mov
cmp
mov
jne
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
mov
xor
cmp
je
incl
mov
cmp
mov
jne
mov
mov
mov
mov
call
cmp
mov
mov
je
pop
xor
pop
leave
ret
push
push
lea
push
mov
call
cmp
je
push
call
cmp
pop
je
movl
mov
lea
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
call
lea
movl
call
lea
call
jmp
xor
jmp
push
mov
push
mov
call
test
je
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
pushl
lea
push
movl
mov
movl
call
push
call
pop
lea
call
lea
call
pop
pop
xor
leave
ret
xor
jmp
push
mov
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
mov
mov
lea
call
mov
pop
leave
ret
mov
jmp
push
mov
pushl
mov
xor
cmp
setne
add
mov
lea
push
pushl
pushl
push
call
pop
ret
push
mov
test
je
mov
mov
add
test
je
mov
and
cmp
jne
test
je
mov
push
push
push
call
pop
ret
mov
call
jmp
andl
xor
jmp
push
mov
and
sub
push
mov
test
push
je
mov
xor
cmp
je
push
lea
movl
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
lea
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
test
js
mov
call
test
js
pushl
call
xor
lea
call
lea
call
mov
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
call
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
lret
add
cmp
je
mov
xor
inc
add
call
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
push
test
je
xor
test
jne
andl
mov
push
pushl
mov
pushl
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
inc
add
add
add
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
add
add
or
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
jbe
inc
add
lea
mov
pusha
adc
and
or
inc
add
mov
mov
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
add
push
add
ret
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
add
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
add
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
add
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
sub
add
push
push
call
test
js
lea
lea
mov
test
jne
push
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
sar
inc
add
xlat
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
testl
inc
or
dec
cld
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
or
mov
inc
sub
shlb
or
dec
xor
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
lea
mov
call
cmp
je
lea
mov
call
movzwl
andb
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
push
call
test
js
testb
jne
testb
je
cmp
je
mov
testb
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
or
mov
jmp
orb
jmp
push
mov
sub
push
mov
mov
test
push
push
jne
mov
test
je
cmp
je
test
je
test
mov
jne
mov
cmp
ja
mov
mov
mov
add
cmp
mov
jae
fldl
mov
sub
fstpl
mov
push
lea
push
push
push
push
call
fldl
faddl
mov
fstpl
testb
mov
je
movzbl
cmp
je
mov
mov
test
jns
lea
lea
cmp
jae
mov
test
jns
push
sub
push
push
call
faddl
fstpl
fldl
inc
faddl
incl
cmp
fstpl
jb
mov
test
je
mov
mov
cmpl
jne
mov
mov
mov
mov
add
push
push
mov
call
mov
cmp
ja
mov
mov
pop
pop
pop
leave
ret
test
je
jmp
test
je
jmp
cmpl
jne
push
call
test
pop
je
andl
movl
mov
mov
mov
mov
mov
mov
push
add
push
call
fldl
push
push
fstpl
pushl
lea
pushl
call
fstpl
fldl
mov
fsubl
add
mov
call
test
mov
fildl
jl
mov
fstps
lea
push
add
call
fldl
jmp
mov
jmp
push
mov
push
mov
push
mov
push
mov
mov
call
test
jne
mov
push
push
pushl
mov
andl
push
pushl
call
mov
add
mov
xor
pop
pop
pop
pop
ret
mov
call
test
je
pushl
call
test
pop
jne
push
mov
call
mov
test
jne
jmp
xor
jmp
decl
push
push
push
push
mov
push
movl
movl
movl
pop
je
push
mov
call
lea
cmp
adc
call
pop
lea
cmp
lock
add
cmp
or
pop
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
call
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
lea
pop
pop
pop
jmp
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
add
lds
test
decl
or
adc
lock
incl
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
sbb
push
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
lea
push
pushl
push
call
test
js
cmp
je
add
mov
lea
call
mov
mov
push
pushl
lea
push
call
push
push
push
call
mov
add
lods
addr16
add
stc
stos
addb
add
in
fstpl
push
jne
add
clc
push
jb
sti
add
xchg
mov
add
jne
arpl
add
mov
add
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
imul
call
test
push
add
popf
nop
add
insb
les
jmp
sub
pop
popl
push
push
push
push
push
call
add
xchg
mov
popf
add
fisubl
add
popf
test
popa
fildl
push
add
clc
add
mov
sti
nop
jle
add
mov
sub
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
lods
iret
add
mov
mov
add
lret
fwait
add
jns
stos
jo
add
add
sub
pop
push
push
push
push
lea
push
lea
push
push
call
jbe
jmp
add
popf
cltd
mov
cld
sar
add
scas
add
add
add
test
imul
lret
add
nop
fisttps
ret
add
fiaddl
add
add
jmp
cmpsl
add
lcall
call
push
push
push
push
push
push
push
push
push
push
call
cli
loope
push
jge
add
out
add
add
add
movsl
add
add
pop
add
stos
add
ljmp
add
add
fistps
fiadds
fdivp
mov
add
sub
pop
call
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
shll
aam
add
fidivrl
add
fiaddl
lea
add
ficoml
cmpsb
mov
add
cmpsb
fidivrl
lds
clc
fcomp
jno
popf
mov
jmp
add
add
xchg
jo
out
add
iret
add
xchg
les
out
mov
filds
lcall
in
lret
in
fdivr
lcall
add
jl
ficoml
inc
add
add
ffree
cmpsl
ret
xchg
cli
add
add
loopw
lock
mov
jne
scas
loop
lock
aam
add
sti
stc
lds
push
add
mov
xchg
movsb
add
ret
add
lea
push
push
push
push
call
jne
je
add
add
add
flds
stos
lods
add
push
push
add
in
imul
mov
rolb
jle
sub
pop
jmp
ret
push
lea
push
push
lea
push
push
lea
push
call
clc
jno
popf
add
add
add
movsb
add
sti
add
add
scas
xchg
loopne
xchg
rcrb
ja
mov
lcall
inc
hlt
push
push
call
mov
mov
add
add
imul
push
iret
add
in
add
add
arpl
out
add
mov
add
mov
add
test
add
clc
pop
mov
add
push
push
lea
push
push
lea
push
push
call
cltd
add
add
add
fwait
loope
add
jecxz
jecxz
int
ja
add
push
jbe
add
add
push
enter
add
fildl
add
add
cmpsb
push
jle
ja
mov
xchg
test
testl
lcall
ret
add
add
push
push
lea
push
push
push
call
pop
repnz
repnz
add
pusha
add
mov
sti
add
add
shlb
add
jb
add
xorb
xchg
jno
fcmovb
jecxz
jb
testl
pop
add
mov
xor
push
push
push
and
add
lea
sub
not
not
pop
add
shl
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
mov
add
add
sahf
rolb
fwait
add
std
fsubr
xchg
std
mov
roll
clc
xchg
add
iret
add
add
les
cmc
mov
xchg
add
pop
add
pop
out
sub
pop
pushl
push
push
push
push
call
add
add
out
roll
add
insb
pusha
in
mov
icebp
stos
xchg
add
add
mov
lcall
lret
add
jnp
mov
add
add
add
add
jb
in
stc
lods
test
add
add
fidivrl
add
add
add
pushf
leave
add
xchg
rcl
jge
hlt
add
pop
rcrb
add
cmpsl
add
mov
add
stos
fldl2e
add
jne
in
cli
out
icebp
out
rclb
stc
lock
movl
push
lea
push
lea
push
lea
push
push
push
call
jmp
jb
fdivs
xchg
sti
mov
add
cli
cmpsb
add
lods
mov
add
xchg
add
add
stc
lds
push
add
out
add
in
xchg
mov
jbe
cmpb
xchg
stos
jns
nop
add
mov
addl
in
call
lea
push
push
push
push
push
push
lea
push
push
call
add
addb
test
insb
add
add
pop
add
mov
push
add
add
mov
mov
add
xchg
ja
imul
add
mov
ja
mov
push
lret
mov
pop
mov
pop
sub
pop
pushl
pushl
push
lea
push
call
add
add
int3
jns
nop
push
add
add
mov
pop
stos
roll
stc
mov
add
xchg
mov
add
cmpsl
add
add
push
sti
sahf
ret
js
adcl
mov
mov
jle
add
mov
pop
leave
add
push
xchg
add
add
push
sub
pop
call
pushl
push
push
push
push
push
lea
push
call
cli
add
add
add
cmpsb
add
int
dec
mov
mov
jno
push
push
pop
lahf
add
jns
out
add
add
mov
pop
add
jne
push
push
call
pushf
aam
add
add
mov
mov
add
int
mov
faddl
xchg
add
loopew
cmpsb
add
addl
test
movl
mov
add
lcall
movsb
aaa
add
push
push
not
sub
rol
push
push
pop
add
shr
lea
sub
rol
sub
pop
ror
pop
push
push
push
push
push
push
call
stc
bound
add
add
add
add
add
add
lods
jne
jp
imul
icebp
add
nop
je
add
int
popf
jge
into
add
xchg
mov
mov
mov
add
add
mov
pop
pushl
push
push
push
push
push
push
push
push
lea
push
call
add
xchg
mov
jns
add
add
repnz
jne
add
jnp
int
jno
addl
add
cld
push
add
add
testl
xchg
add
xchg
in
add
add
add
push
add
push
push
push
push
push
call
enter
jmp
add
iret
into
lea
call
pusha
data16
push
out
jmp
add
add
filds
add
lods
jmp
js
cmpsl
add
xchg
jae
in
ficoms
add
mov
sub
pop
push
push
push
sub
sub
xor
rol
push
or
not
add
rol
inc
sub
add
dec
shl
pop
shl
shr
pop
push
push
call
filds
jno
pop
pop
movl
add
push
fld
mov
popf
mov
movsl
add
add
aam
pusha
add
icebp
add
add
add
xchg
mov
fildl
add
lcall
push
push
push
call
push
jmp
mov
clc
add
add
jge
notl
add
add
lods
jnp
aad
rcl
fwait
jp
add
fwait
mov
add
cmc
leave
add
popa
sub
pop
push
call
push
lea
push
push
push
call
add
mov
test
add
push
stc
popl
add
add
add
scas
pop
test
insb
push
push
add
fsubs
mov
mov
loope
add
ljmp
lret
add
sub
pop
mov
push
push
push
push
push
call
jmp
icebp
mov
sahf
lret
xchg
add
clc
cld
sti
jle
add
xchg
shl
add
add
add
rolb
pop
mov
movb
push
lret
jge
add
jno
cmpsb
aad
cmc
xchg
add
addr16
push
add
sub
pop
push
push
push
push
push
push
push
push
push
call
iret
add
add
xorl
add
push
pushf
shlb
popa
scas
mov
add
mov
ja
add
add
add
sahf
add
in
loopne
mov
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
call
clc
mov
jno
add
ja
scas
pushf
add
add
testl
pop
cmpsl
pushf
jo
add
xchg
xlat
mov
add
rcl
add
cmpl
aad
pop
popl
jne
add
add
mov
add
test
aad
in
fcmovbe
sub
pop
add
push
push
call
fildl
roll
cmpsl
cmpsl
add
add
add
pushf
add
add
jns
jmp
ret
add
call
jp
flds
outsl
cmp
outsl
pusha
pop
add
pop
cltd
add
popf
lahf
xchg
mov
push
pop
pushf
sub
pop
add
push
push
push
push
lea
push
push
push
push
call
popf
add
add
add
sahf
lcall
lret
mov
add
add
add
or
test
add
test
imull
mov
add
pushf
mov
push
add
loopne
add
pop
add
shlb
add
mov
imul
movsb
pop
add
mov
xor
push
push
push
push
push
push
lea
push
lea
push
push
call
pop
repnz
arpl
add
fildll
xchg
push
hlt
mov
into
mov
add
add
stos
add
out
add
je
push
add
stos
scas
push
push
lea
add
add
stos
fcoms
add
add
push
lea
push
push
push
push
push
push
push
push
call
mov
xchg
jge
test
add
lods
add
filds
mov
add
mov
add
xchg
loope
add
andl
jbe
stos
imul
arpl
ja
mov
add
pop
mov
sahf
add
cltd
addl
lcall
mov
xor
push
push
lea
push
push
call
mov
imul
xchg
js
bound
add
enter
add
fldl
lret
loopne
pop
cli
ja
cmpsl
icebp
add
add
mov
add
cld
rcll
sti
test
add
jb
add
add
outsl
fwait
sub
pop
add
push
push
call
add
add
add
add
xchg
icebp
mov
add
icebp
mov
mov
add
add
cltd
lds
add
cmpsl
mov
ret
add
loope
call
xchg
mov
mov
jl
lock
cli
jle
jnp
movsb
mov
lea
lcall
push
lea
push
lea
push
push
push
push
push
call
add
jge
add
xchg
add
popf
orl
add
push
jnp
pop
xchg
lds
mov
add
add
mov
add
add
cli
stc
mov
in
nop
in
movsb
add
add
mov
lds
add
in
in
lcall
dec
add
test
push
push
push
call
hlt
fdivr
add
nop
in
les
test
pop
ljmp
jnp
int3
add
push
nop
add
lahf
jge
mov
add
add
dec
add
js
lcall
add
fldl2t
add
mov
mov
jbe
in
cld
fdivs
fisttpl
sub
pop
xor
push
push
push
push
push
push
push
push
push
lea
push
call
add
lods
jecxz
rcrb
add
add
cmpsl
add
mov
mov
add
push
test
mov
addb
testl
add
jns
add
pop
jns
fidivrl
sub
pop
add
push
push
push
push
lea
push
push
call
mov
addr16
fs
pop
mov
mov
test
pusha
faddp
int3
add
add
pop
add
pushf
add
test
add
add
mov
lcall
push
push
push
push
call
add
push
xchg
xchg
jae
imul
add
movsl
jo
cmpsb
xchg
fiadds
int
add
mov
lahf
jo
fidivrl
movsb
add
xchg
mov
inc
or
push
push
lea
push
push
push
call
add
subb
sti
addb
pop
lcall
mov
cltd
jge
nop
stos
rcll
add
jns
add
add
in
mov
mov
enter
ljmp
iret
inc
push
call
out
add
mov
mov
insb
pushf
push
add
add
int
xchg
mov
lahf
push
mov
out
mov
xchg
scas
in
mov
lea
jge
loop
aam
xchg
mov
stos
cld
clc
add
mov
add
cmpsl
rcl
fdiv
insb
mov
in
hlt
pop
pop
push
push
lea
push
push
push
lea
push
push
push
call
lcall
aam
jnp
cld
icebp
mov
mov
add
add
add
add
test
add
outsl
pop
xchg
add
add
add
in
push
aam
push
mov
add
add
push
fldl
movsb
push
push
lea
push
call
ja
jle
add
add
mov
rcr
popf
out
add
jge
add
add
add
lds
xchg
add
xchg
add
mov
leave
add
add
mov
mov
enter
add
add
adc
je
add
in
add
add
lcall
push
push
push
lea
push
call
addb
add
mov
add
addr16
pop
add
add
xorb
xchg
cltd
mov
aam
add
enter
sub
pop
mov
push
push
call
lahf
pop
mov
add
mov
mov
jmp
enter
add
add
cwtl
add
mov
xchg
add
jecxz
add
pop
fisubs
imul
nop
mov
add
incb
add
sub
pop
add
push
push
push
push
push
push
push
call
add
cltd
lcall
pop
add
xlat
add
add
add
xchg
cmpsb
add
cwtl
add
add
pop
add
jl
call
iret
insb
fdivp
add
add
add
pop
add
jp
mov
jb
adcb
sub
pop
add
push
push
push
call
add
mov
je
popf
xchg
add
ja
add
leave
adcl
add
imul
add
add
fnsave
add
loopne
rcr
sub
pop
add
push
push
push
lea
push
push
call
mov
filds
lret
push
out
fidivs
add
imul
std
xchg
add
mov
repnz
add
add
loop
add
mov
test
push
mov
add
add
add
sub
pop
mov
push
push
push
push
push
push
push
push
push
push
call
addl
test
xchg
imul
aad
add
cwtl
add
imul
add
add
push
add
lahf
mov
add
nop
add
in
mov
stos
int
xchg
add
jmp
add
mov
mov
add
iret
pop
cwtl
pop
in
xchg
fldcw
add
lcall
add
push
push
push
push
call
sti
push
mov
add
xchg
add
div
lds
add
popl
add
add
add
mov
add
add
jmp
xchg
jnp
add
add
cmpsb
push
mov
add
test
jge
add
in
lock
add
push
push
lea
push
push
lea
push
lea
push
call
pop
in
add
add
icebp
out
mov
pop
mov
jns
add
popf
mov
add
jbe
scas
lcall
cmpsl
add
stc
clc
bound
test
mov
mov
lea
cld
out
insb
add
in
call
mov
xor
push
push
push
call
add
fidivrl
xchg
mov
add
mov
hlt
add
pop
cmc
xchg
fistpl
ret
fstps
out
add
jmp
pop
add
add
add
aam
pop
mov
mov
jno
add
xchg
add
mov
lcall
dec
sub
push
push
push
push
push
lea
push
push
push
lea
push
push
call
pop
mov
jne
popa
mov
outsl
stc
xchg
pop
scas
in
js
add
add
lods
add
iret
in
scas
pop
add
sar
arpl
fcoms
jp
sub
pop
add
add
push
push
lea
push
push
lea
push
push
call
cmc
andl
cli
gs
aam
mov
in
add
les
xchg
push
fcoml
push
jmp
pop
add
in
call
mov
push
push
sub
shr
lea
push
or
inc
add
dec
ror
sub
dec
lea
pop
inc
inc
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
call
movb
xchg
fildl
in
add
push
xchg
out
push
cld
add
add
int3
add
int3
stc
add
add
mov
insb
clc
push
aam
mov
mov
sub
pop
pushl
push
push
push
lea
push
push
lea
push
push
call
add
add
jbe
mov
ljmp
add
loop
add
add
push
jmp
push
add
jo
mov
xchg
in
call
push
push
push
push
and
add
add
inc
sub
rol
add
pop
ror
inc
pop
push
shr
pop
push
push
push
push
call
xchg
leave
add
add
push
xchg
add
mov
xchg
mov
xlat
add
aad
add
add
movsb
xlat
sub
pop
push
call
push
add
lea
add
pop
mov
push
lea
shl
dec
pop
push
push
push
rol
lea
not
pop
mov
add
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
push
add
aad
push
movsl
add
jecxz
jne
stos
push
add
add
add
mov
add
repnz
add
mov
mov
mov
xlat
shl
pushf
mov
push
add
pusha
test
int3
push
xchg
add
enter
sub
pop
add
push
push
push
lea
push
push
push
push
call
je
jnp
add
add
mov
add
xchg
push
pushf
hlt
into
jnp
pop
fiaddl
add
addr16
rcrb
push
cwtl
add
add
add
add
int
popa
add
lods
mov
outsl
loop
add
fidivs
jno
outsl
add
lcall
ret
movsb
pop
add
push
ror
rol
pop
mov
xor
push
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
call
flds
add
add
push
out
push
push
pushf
add
add
mov
faddl
enter
add
lret
add
in
add
rcll
add
out
push
nop
add
add
xchg
push
sub
pop
add
push
push
push
push
call
leave
mov
add
out
outsl
arpl
insb
out
jae
test
rcr
jecxz
fdivrp
push
loop
add
shlb
out
add
add
mov
xchg
add
add
add
aam
add
add
add
add
add
add
jecxz
pop
mov
add
add
add
scas
jecxz
in
hlt
pop
mov
push
push
lea
push
push
call
add
add
notl
add
mov
add
add
test
xchg
add
add
mov
lods
add
add
filds
test
add
add
add
push
push
push
lea
push
call
mov
add
pop
add
repnz
add
jbe
test
loopne
mov
add
cld
add
movl
movsl
jmp
xchg
mov
xchg
imul
mov
mov
pop
add
xchg
mov
add
loop
add
in
lock
add
push
sub
sub
pop
add
pop
push
add
dec
pop
mov
push
push
lea
push
push
lea
push
push
push
push
push
push
push
call
scas
push
sarl
leave
lds
ja
mov
incb
add
add
rorb
fsubl
add
add
orb
mov
imul
pop
add
xchg
popl
lcall
or
push
lea
push
push
call
xchg
add
add
nop
push
push
test
add
add
jne
mov
add
xchg
out
lcall
rcrb
out
imul
add
add
mov
js
add
jne
mov
call
nop
mov
add
cmpsb
add
les
add
push
lea
not
pop
rep
mov
xor
push
lea
add
pop
or
je
push
sub
shr
inc
rol
pop
mov
xor
push
push
lea
push
push
call
add
add
add
repnz
pop
xchg
add
cwtl
in
mov
add
add
in
aam
add
add
lods
add
add
add
addl
add
push
sbb
pop
jae
push
push
lea
push
push
push
push
push
call
add
add
insb
iret
jae
ljmp
mov
loopne
mov
sub
lret
add
fsub
fdivl
out
xchg
mov
add
add
add
stos
add
add
add
add
add
xchg
add
in
in
lcall
adc
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
ja
addl
lret
fucomi
add
add
jns
ret
add
add
add
fwait
int3
add
shlb
add
pop
movsb
add
push
jmp
add
jle
sub
pop
add
push
lea
push
push
lea
push
call
lcall
lcall
out
call
ljmp
add
pop
enter
cwtl
addr16
push
addb
add
cld
mov
in
subb
lock
lcall
repnz
sub
pop
add
push
add
shr
pop
push
push
shr
xor
pop
mov
push
push
lea
push
push
call
mov
add
push
jp
add
mov
add
call
add
movl
pop
add
xchg
testb
and
lea
push
call
add
fstpl
enter
and
test
test
jbe
add
popl
add
je
add
in
test
add
std
testl
mov
loope
jb
in
clc
pop
add
push
dec
not
shr
pop
add
push
push
push
lea
push
lea
push
push
call
lods
in
xchg
popa
add
add
add
ja
pusha
std
insb
pop
xlat
add
cmpsl
push
mov
out
push
add
imul
pop
rep
push
lea
push
call
add
add
add
add
add
add
add
add
add
mov
mov
xchg
testl
int3
jge
add
mov
mov
add
fadds
jmp
clc
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
lea
push
call
push
les
add
cltd
iret
pop
lds
sti
mov
add
add
add
sti
add
add
mov
mov
ja
add
pop
xor
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
jb
subb
cmpsb
cld
mov
add
add
mov
mov
add
mov
sbbl
scas
jmp
add
popa
stos
insb
add
add
into
jmp
aad
add
lock
add
sub
pop
add
push
lea
push
push
push
push
push
call
cmpsl
push
add
add
mov
push
add
jnp
add
add
popf
add
mov
mov
mov
sti
hlt
sahf
andl
lcall
leave
je
push
shl
dec
add
pop
mov
add
push
push
lea
push
push
push
push
call
pop
add
js
add
add
shr
enter
test
int3
add
jno
int
add
add
add
add
jp
add
jge
add
jae
push
add
test
divl
add
cmpsl
add
add
pop
add
push
push
jmp
in
call
add
add
movsb
push
push
push
push
push
lea
push
push
lea
push
push
call
popa
mov
add
jmp
in
rcrl
les
fidivl
mov
mov
add
jle
lahf
push
add
add
test
test
cli
hlt
mov
ja
mov
add
imul
leave
push
add
fcmovb
out
stos
mov
add
lcall
push
push
xor
dec
inc
push
push
pop
add
lea
shr
sub
sub
ror
not
pop
not
xor
pop
push
push
push
push
push
call
fiaddl
mov
shll
add
aad
icebp
push
add
loope
arpl
add
add
add
xchg
pop
pop
cmpb
cld
shll
std
push
pop
mov
loopne
out
add
lods
jno
arpl
add
roll
add
js
sub
pop
pop
push
push
push
push
push
push
push
push
call
rcl
insb
stos
add
testb
mov
stos
add
fs
add
sahf
mov
icebp
addr16
add
add
add
addr16
mov
add
add
mov
lods
sub
pop
mov
push
lea
push
push
lea
push
push
push
call
lcall
xchg
add
add
add
negl
into
sahf
xchg
out
incb
push
fldl
xchg
stos
sarl
add
add
test
in
call
mov
push
sub
dec
pop
mov
jmp
push
push
lea
push
lea
push
lea
push
call
push
lcall
shll
cld
add
std
xchg
pop
lds
pop
insb
add
mov
pop
lods
movsl
add
pop
xchg
mov
fiadds
add
testl
add
add
lret
add
mov
add
rcll
int
mov
add
jle
push
pop
push
call
jns
in
in
lcall
push
sub
inc
pop
mov
add
push
ror
not
pop
push
push
push
inc
pop
push
push
push
push
push
push
lea
push
call
cmc
mov
out
jecxz
mov
add
add
add
mov
add
add
xchg
movsb
add
xchg
in
add
add
add
mov
add
jo
mov
add
ficomps
popf
add
sub
pop
push
push
push
push
call
lods
add
add
mov
add
add
add
stc
add
bound
roll
out
mov
cld
xchg
sub
pop
mov
pop
push
push
push
push
push
push
lea
push
push
call
add
sahf
add
scas
jle
movsl
imul
incb
add
sbbb
lret
popf
add
mov
mov
shrl
sti
xchg
je
add
test
mov
add
push
ror
xor
sub
pop
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
enter
hlt
ror
add
mov
add
push
add
xchg
fistpll
out
lods
add
add
add
add
push
add
ret
pop
insb
add
add
gs
add
std
add
pusha
stos
add
fbstp
add
leave
roll
lcall
leave
push
add
sub
shl
sub
pop
ret
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
test
movsb
fsubs
mov
popl
add
jge
add
add
arpl
fdiv
mov
cmpsl
add
add
bound
mov
add
push
pop
push
push
push
push
push
push
push
push
push
push
call
add
fsubrl
les
add
add
push
add
add
add
mov
test
add
add
push
push
push
call
add
addb
add
stc
add
mov
fidivs
fcmovu
sar
add
jns
jge
add
lcall
xchg
add
aam
add
add
push
mov
add
out
sbb
je
add
add
mov
scas
fisubl
mov
test
add
rolb
add
push
add
shl
lea
pop
push
movl
push
sub
not
pop
addl
test
je
push
xor
sub
pop
mov
push
sub
dec
pop
pop
push
push
push
push
push
push
push
push
push
lea
push
call
out
cmpsl
add
mov
cmpsb
out
pop
pop
lcall
movsl
cltd
roll
push
add
add
add
pop
mov
sti
lds
add
sub
pop
pop
push
not
pop
pop
push
xor
pop
pop
push
push
push
push
push
push
push
call
gs
lods
pop
add
aam
add
mov
movsl
pop
add
add
int3
mov
add
in
add
add
push
imul
mov
fdivrp
roll
rcll
testb
add
in
lcall
ret
push
lea
dec
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
lds
je
xchg
cltd
aad
add
jge
lods
lods
sti
add
jecxz
addl
hlt
jnp
push
popf
sbb
add
add
stos
add
add
imul
mov
stc
test
add
cmc
jno
pop
add
jge
int
lcall
cltd
sub
pop
mov
add
push
push
push
push
lea
push
call
mov
add
gs
add
add
add
add
cld
add
div
imul
add
add
add
push
pop
pop
rolb
loop
jge
xchg
imul
leave
lea
add
cmc
xlat
je
add
mov
add
andw
push
je
add
add
add
lcall
push
not
pop
push
push
inc
sub
rol
rol
pop
push
push
push
call
icebp
popl
xchg
ror
insb
add
add
add
into
mov
add
jmp
add
insb
xchg
lea
add
mov
mov
xchg
repnz
pusha
int3
movsb
movsb
add
add
in
sub
pop
push
testl
push
shl
xor
add
lea
pop
addl
push
shr
not
lea
pop
push
push
inc
not
pop
call
mov
push
sub
pop
pushl
push
push
push
push
call
add
add
pop
add
add
addb
mov
mov
roll
add
push
add
add
add
cmpsl
push
push
leave
add
mov
add
add
pop
add
mov
mov
in
imul
cmpsl
jge
add
iret
ret
xchg
add
scas
add
leave
add
in
hlt
pop
push
push
lea
push
lea
push
lea
push
call
sti
mov
addb
add
lods
icebp
mov
fnstsw
add
in
add
fldl2t
fwait
add
addl
loopne
jge
test
addl
push
add
repnz
jle
add
mov
xchg
add
popf
iret
popa
add
add
nop
add
lcall
jge
incl
test
call
lret
ret
ljmp
xor
shr
pop
pop
pop
push
pop
pop
push
push
call
hlt
mov
ljmp
add
add
add
clc
add
add
rclb
add
data16
mull
pusha
mov
add
add
lcall
push
lea
push
push
push
push
push
call
sti
add
xchg
rolb
addr16
add
in
xchg
outsl
fisubs
in
push
xchg
add
leave
cwtl
into
out
int
add
roll
stos
popf
add
add
add
add
shlb
add
repnz
lea
bound
pop
cli
mov
xchg
xchg
std
out
add
push
add
jae
add
add
add
mov
test
ret
push
push
ror
lea
add
pop
mov
push
lea
push
lea
push
call
leave
in
push
popl
lret
add
fwait
mov
add
mov
stos
push
jae
fwait
pusha
ret
add
add
pop
sub
pop
add
push
push
pop
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
pop
push
loop
lock
xchg
popf
jns
mov
add
fwait
add
add
add
add
outsl
mov
andb
xchg
mov
movsb
add
cli
mov
push
std
mov
add
hlt
xchg
clc
xchg
add
cmc
je
add
mov
add
sub
pop
push
push
push
pop
movl
push
push
lea
xor
pop
call
push
shl
dec
pop
push
call
push
push
push
lea
push
push
lea
push
push
call
add
add
add
out
mov
rcr
repnz
fcomp
stc
push
push
idivl
add
fsubs
test
mov
add
rorl
clc
jne
mov
in
in
lcall
insl
cld
add
lea
shl
pop
cmpl
jne
pop
push
shr
pop
pop
push
lea
push
call
mov
mov
xchg
add
mov
out
add
jp
push
jl
mov
cltd
fldl
pop
jl
popa
pop
cmc
std
mov
add
fs
add
mov
mov
out
jle
in
clc
lcall
push
add
inc
pop
pop
push
push
push
push
push
lea
push
call
add
add
add
jnp
add
jge
arpl
scas
pop
out
add
add
add
pop
icebp
add
imul
icebp
pop
add
in
call
leave
ret
push
pop
push
push
dec
lea
add
pop
mov
push
ror
xor
inc
pop
add
push
shl
xor
pop
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
shlb
jo
mov
pushf
xchg
add
lahf
mov
add
add
add
jbe
jl
add
movsl
add
mov
ficomps
fstpl
add
sub
pop
push
push
push
shl
sub
add
pop
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
ljmp
hlt
aam
add
sahf
clc
pop
lods
mov
out
add
push
add
jecxz
jecxz
mov
add
addr16
jno
sub
pop
mov
push
inc
pop
lea
push
sub
pop
sub
push
inc
xor
sub
pop
mov
push
push
call
ret
popf
mov
insb
flds
push
shll
out
cmpsb
add
pop
in
add
in
add
add
add
add
add
add
lret
lcall
add
stos
mov
add
in
pop
add
movl
popf
add
mov
clc
pop
shr
push
push
push
push
lea
push
push
push
call
leave
add
lock
add
add
loop
jp
add
mov
lods
lds
xchg
rcll
add
fcoml
xchg
add
stos
pop
jo
add
mov
pop
nop
xchg
ficompl
std
add
lret
jnp
aam
add
add
pushf
lods
icebp
cmpsb
movl
add
add
sub
pop
add
push
pop
mov
push
push
lea
push
lea
push
push
push
call
xchg
push
shll
outsl
push
idivl
push
add
lret
add
mov
js
imul
add
inc
or
add
inc
pop
add
push
lea
add
sub
pop
mov
mov
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
out
xchg
test
test
ret
mov
loopne
imul
xorl
sti
add
add
add
add
add
imul
jl
call
add
hlt
add
xlat
xor
in
add
mov
xchg
sub
pop
cmp
jne
push
not
pop
cmp
jne
mov
push
push
lea
push
push
call
add
add
xchg
shr
mov
mov
add
outsl
les
jle
add
out
push
add
add
add
mov
xchg
add
jbe
add
add
add
add
add
jecxz
mov
clc
mov
in
lock
movl
push
lea
rol
pop
jmp
push
not
dec
not
pop
mov
push
add
add
dec
pop
mov
sub
jne
push
push
call
mov
xchg
imul
xchg
mov
movsb
add
mul
add
mov
add
fcomip
mov
fstpt
xchg
add
mov
movb
lahf
add
in
clc
pop
mov
push
push
call
incb
push
xchg
arpl
add
fiadds
stos
sahf
add
add
mov
add
ficoms
int
loop
add
stos
add
mov
in
clc
lcall
add
add
jmp
push
ror
pop
mov
mov
push
inc
sub
lea
add
pop
cmp
jne
push
ror
shl
pop
mov
push
push
push
push
push
lea
push
lea
push
call
xchg
add
cmpl
int
add
add
fwait
shr
mov
push
add
add
fisubl
add
add
push
add
add
cwtl
popf
jl
add
add
ja
add
loopne
int3
push
add
push
mov
add
lcall
add
add
add
in
or
push
push
push
call
pop
nop
add
mov
add
pop
jl
lock
add
scas
sti
add
cmpsb
scas
in
add
add
lret
add
add
jmp
mov
bound
fldenv
add
repnz
add
imul
add
add
add
pop
movsl
popa
mov
add
fwait
sub
pop
mov
push
sub
shl
pop
cmpw
jne
push
shr
not
pop
mov
push
push
call
add
add
mov
call
add
imul
loopne
cltd
in
add
imul
add
out
xchg
jb
out
sub
pop
movl
push
dec
lea
pop
jmp
pushl
push
lea
push
push
push
push
push
call
popf
push
add
popa
js
jmp
add
jp
loope
mov
mov
add
jge
add
push
cmc
mov
enter
mov
mov
sub
pop
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
mov
ja
out
add
add
xchg
add
mov
mov
mov
add
mov
jb
add
aad
add
add
xchg
mov
add
add
add
add
gs
lret
mov
enter
andb
sub
pop
mov
mov
push
shr
add
inc
pop
mov
push
push
sub
add
push
or
inc
add
sub
sub
shr
pop
pop
push
inc
pop
push
push
lea
push
push
push
call
in
pop
mov
add
cmp
add
add
loopne
jno
push
add
xchg
into
lret
add
jae
repnz
add
mov
nop
mov
xchg
js
mov
lcall
into
add
push
push
push
lea
push
push
call
add
add
add
add
add
shl
add
add
cld
in
addl
testl
add
pop
leave
xchg
leave
cwtl
add
fucomi
icebp
loop
add
push
add
add
roll
jecxz
push
mov
add
fildl
addl
pop
cmpl
je
push
push
lea
push
and
add
sub
sub
sub
shr
pop
xor
inc
pop
push
push
call
pop
test
popf
add
mov
jb
add
sbbl
mov
cmc
movsb
cmpsl
add
notb
sahf
add
mov
jle
add
sarl
mov
mov
push
cmpb
add
add
xchg
sub
pop
push
push
add
rol
shr
add
pop
call
push
push
push
push
push
push
push
push
push
call
mov
addr16
add
cld
fildl
in
mov
cmpsl
add
add
popf
add
stos
jo
stos
add
test
sti
add
notb
add
push
imul
fdivr
add
pop
sahf
pop
mov
std
add
std
mov
sub
pop
cmpl
je
push
push
lea
inc
xor
push
and
add
lea
dec
sub
inc
pop
dec
shl
add
pop
push
not
sub
inc
pop
push
call
push
push
lea
push
push
call
test
ljmp
js
into
pop
add
xchg
add
add
jnp
jge
into
add
add
lret
jae
sti
in
add
js
aam
out
add
add
lds
add
add
add
pop
int
sub
pop
cmpl
je
push
push
sub
add
push
or
not
add
ror
xor
shr
sub
not
add
pop
pop
push
shl
shr
pop
push
push
inc
pop
call
cmpl
je
push
push
rol
add
push
or
not
add
add
sub
ror
add
pop
add
shl
pop
push
push
lea
push
lea
push
lea
push
push
call
add
filds
add
xchg
repnz
add
addl
mov
rcrl
sti
add
add
add
std
sub
pop
push
push
push
lea
push
push
call
mov
fiadds
fidivs
add
xchg
jp
add
add
add
add
add
mov
stc
popa
mov
add
mov
fildl
sub
pop
call
push
push
push
push
push
push
call
add
add
lea
push
ret
mov
push
add
stc
mov
mov
movb
pop
add
add
test
fiaddl
cmpsl
loopne
add
pop
cmpl
je
push
push
inc
push
push
pop
add
shr
sub
not
sub
pop
xor
add
pop
push
add
shl
xor
add
pop
push
call
push
push
push
push
push
lea
push
push
push
push
lea
push
call
jl
je
popfw
pop
out
add
add
jns
push
add
add
fdiv
sahf
rcrb
add
andb
add
add
lcall
pop
cmpl
je
push
push
ror
push
push
pop
add
shr
sub
dec
xor
pop
sub
pop
push
push
push
push
push
push
call
xlat
mov
add
add
jp
mov
lret
fimuls
jmp
aad
mov
add
outsl
int
add
notl
add
xorb
add
add
fnsave
push
call
push
push
lea
push
push
push
push
push
call
add
add
je
out
add
add
fists
test
jbe
add
out
jne
shll
imul
mov
stos
repnz
add
add
nop
mov
sahf
add
mov
testb
add
rcrl
shrl
cmpsb
add
fsub
int3
mov
lcall
cmp
or
int3
je
push
push
inc
sub
push
or
not
add
sub
lea
shl
pop
add
pop
push
sub
pop
push
push
rol
pop
call
push
sub
sub
pop
cmpl
je
push
push
lea
dec
inc
push
sub
add
add
shl
dec
ror
sub
rol
ror
add
pop
lea
xor
pop
push
lea
push
call
xchg
filds
add
rolb
add
xchg
add
xchg
add
add
xchg
mov
shl
add
add
add
xchg
jns
push
lcall
add
sub
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
push
call
add
mov
add
add
iret
xchg
push
xchg
jo
xchg
mov
mov
xlat
pop
pop
add
add
les
test
roll
mov
bound
ret
add
add
mov
fdivr
lcall
sub
add
push
inc
shl
pop
cmpl
je
push
push
ror
rol
lea
inc
push
xor
add
sub
lea
dec
pop
dec
xor
not
dec
pop
push
push
lea
push
push
push
push
call
testb
lret
testl
mov
add
add
add
add
push
stos
add
incb
mov
add
pop
lcall
lret
add
mov
pop
add
add
xchg
add
jp
cli
loop
sub
pop
push
call
push
inc
add
pop
cmpl
je
push
push
xor
push
and
add
add
sub
shl
add
pop
shr
xor
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
movl
add
add
rolb
fldlg2
add
in
add
add
stc
aad
scas
jb
shll
add
imul
enter
hlt
add
sub
pop
push
push
push
lea
push
call
cli
test
add
add
add
push
mov
add
add
out
add
add
mov
cld
lods
jmp
add
movb
add
add
jno
xchg
add
pop
faddl
add
add
add
movsl
add
mov
add
test
sub
pop
call
cmpl
je
push
push
add
push
or
inc
add
rol
add
sub
lea
sub
pop
lea
lea
pop
push
lea
rol
pop
push
push
lea
push
push
push
push
push
push
push
push
push
call
add
mov
jl
aad
xorl
jecxz
add
xchg
test
push
add
add
loopne
add
jnp
add
aam
pop
add
xchg
pusha
repnz
push
loope
mov
lea
add
add
popf
mov
pop
add
sub
pop
call
push
push
push
push
push
lea
push
push
lea
push
call
pop
incb
lock
scas
xchg
push
add
add
fildl
repnz
mov
loop
mov
jae
lahf
data16
in
cmp
add
js
jmp
les
je
push
push
rol
ror
push
push
pop
add
dec
lea
sub
ror
rol
sub
pop
inc
add
not
pop
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
mov
add
ffree
add
test
add
mov
add
test
add
xchg
loop
add
sub
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
add
mov
mov
pop
clc
addr16
add
add
mov
pop
jge
fdivrs
cmpsb
add
jno
fldt
add
pop
jmp
push
add
movl
xchg
pop
cld
test
outsl
into
push
add
add
scas
xchg
iret
out
fs
add
lcall
cmp
add
add
add
add
pop
cmpl
jne
push
push
lea
push
push
push
push
push
push
lea
push
call
pop
push
movsl
lret
add
jne
out
lahf
add
lock
mov
add
mov
std
add
add
in
fisubl
push
cmpsb
push
add
cmpl
sub
pop
mov
push
sub
pop
movl
push
push
lea
push
push
push
push
lea
push
push
call
add
xchg
jmp
shlb
std
ja
add
in
popl
rolb
pop
in
pop
add
outsl
jae
clc
movb
imul
clc
add
js
addr16
xchg
mov
add
add
mov
in
push
add
loopne
push
add
sub
pop
jmp
push
rol
inc
not
pop
xor
push
sub
sub
pop
pop
pop
push
inc
rol
sub
pop
pop
push
push
push
lea
push
push
push
push
call
stc
add
neg
add
mov
push
fistl
fidivs
fiadds
loopne
mov
scas
lcall
add
add
lcall
push
sub
ror
pop
leave
push
not
pop
ret
push
push
push
push
push
lea
push
lea
push
call
mov
push
popa
subb
add
jae
mov
cltd
add
mov
loop
cltd
add
cmc
mov
data16
add
add
push
add
mov
jnp
add
mov
flds
add
add
mov
add
fadds
add
in
add
push
pop
cmpl
jne
push
push
not
sub
lea
push
xor
add
dec
sub
sub
pop
xor
pop
push
push
push
push
push
push
call
in
add
lret
add
add
popa
roll
add
lock
add
stc
leave
mov
jo
add
mov
addl
add
add
in
call
pushl
push
lea
pop
call
push
lea
push
lea
push
push
lea
push
push
push
call
jne
int3
test
cmc
imul
add
add
pop
icebp
xchg
add
jl
mov
add
xchg
mov
add
add
into
push
cmpsl
add
fildl
lcall
call
push
cmpsb
inc
or
lea
push
call
jge
cli
add
add
add
popa
jecxz
cwtl
fwait
test
add
add
lret
cmpsl
add
popf
mov
subl
add
lods
sub
pop
call
push
push
lea
push
push
lea
push
call
cwtl
cmc
add
xchg
lods
in
add
stc
jl
push
pop
add
outsl
add
pop
add
add
jmp
ret
add
idivl
jae
std
xchg
add
jbe
in
in
pop
jmp
push
push
push
call
mov
cmpsb
add
mov
mov
fistpll
mov
arpl
into
je
pop
lods
stc
fsts
add
add
add
push
ja
cmc
add
pop
jge
mov
pop
imul
cli
cltd
aam
add
hlt
lcall
jge
add
test
push
push
push
push
push
lea
push
push
push
push
call
loop
push
mov
loopne
iret
call
jle
addb
jne
out
fldcw
popf
push
enter
add
push
add
jae
add
add
push
in
jecxz
add
in
add
add
xchg
mov
pop
mov
fdivr
lcall
jge
add
add
push
not
shl
ror
pop
leave
push
lea
pop
add
push
push
push
call
mov
in
mov
movsl
add
js
scas
jecxz
test
imul
pop
push
add
add
lea
rcrb
xchg
add
push
jns
add
xchg
add
fcmovbe
jecxz
add
pop
stos
add
add
in
add
add
lcall
push
push
push
call
jbe
add
add
incb
mov
add
add
je
nop
xchg
cltd
add
lods
insb
loope
test
push
add
add
jle
jo
add
mov
loop
add
mov
hlt
pop
pop
push
pop
pop
pop
push
lea
push
push
push
push
lea
push
push
call
xchg
jmp
mov
jne
ret
rolb
ja
add
add
cld
push
add
test
pop
addl
call
add
in
add
les
movl
loopne
nop
gs
pop
add
jge
add
sub
pop
leave
push
add
add
pop
add
push
push
call
mov
mov
add
in
loopne
add
jnp
aam
into
add
pop
add
add
add
icebp
add
add
stc
mov
roll
fiaddl
add
add
add
add
sub
pop
ret
push
ror
ror
sub
pop
jmp
cmpl
jne
push
push
lea
sub
push
sub
add
dec
sub
xor
add
not
add
pop
add
pop
push
push
push
push
push
push
push
push
call
add
pusha
int
cmpsb
jmp
rcl
iret
add
frstor
add
mov
jp
flds
test
jae
xchg
mov
sub
pop
pushl
call
push
push
push
lea
push
push
push
call
loopne
test
cld
mov
stc
sbbl
iret
xchg
jmp
idiv
mov
test
stc
add
add
in
call
push
call
add
repnz
add
imul
add
incb
in
add
sahf
add
xchg
add
addb
insb
add
add
out
int3
add
clc
cli
clc
pop
xchg
add
flds
lea
add
nop
sub
pop
call
jmp
push
push
push
push
push
push
lea
push
push
call
data16
in
add
mov
lahf
movb
add
aad
jne
mov
pop
add
add
jp
jnp
lods
pop
mov
add
lcall
jge
add
test
push
add
mov
push
push
push
push
call
add
mov
mov
add
push
add
add
add
add
les
insb
jmp
test
add
sub
pop
mov
push
inc
not
not
pop
jmp
push
push
lea
push
push
lea
push
call
fmuls
lcall
add
scas
loop
add
add
testb
mov
add
cmpsl
push
jmp
add
add
pop
rcrb
cmpsb
jle
add
js
add
xchg
pop
int3
cmc
xchg
add
mov
out
lea
data16
mov
xchg
add
add
les
sub
pop
push
push
push
add
push
or
not
add
add
sub
add
sub
rol
pop
inc
pop
push
push
push
call
add
enter
add
xchg
add
mov
enter
add
je
add
mov
mov
filds
out
faddl
in
cwtl
fwait
mov
mov
mov
jbe
jno
cli
jl
cwtl
jno
sub
pop
pushl
call
push
push
push
push
call
jo
add
movsl
add
movsl
test
add
movb
add
add
shll
popa
xchg
imul
mov
add
add
hlt
pop
mov
push
jae
add
mov
mov
notl
add
addb
fstl
cmc
add
mov
arpl
add
add
lcall
shrb
xchg
int
push
ror
sub
push
and
add
shr
sub
rol
ror
sub
dec
add
pop
sub
not
pop
push
lea
push
push
push
push
push
push
call
jmp
xchg
jmp
int3
mov
xchg
mov
add
test
int3
push
arpl
add
add
lahf
jmp
rcr
out
mov
add
xchg
lahf
sub
pop
pushl
call
push
xor
pop
call
push
push
sub
inc
xor
add
push
xor
add
not
sub
sub
dec
add
pop
sub
pop
push
add
pop
pushl
push
push
call
add
add
cmpsl
xchg
enter
mov
mov
test
test
xchg
cmpsb
je
into
scas
jl
lods
mov
add
imul
sbb
nop
add
add
add
add
mov
insb
add
add
test
in
clc
lcall
test
shrb
mov
dec
push
push
sub
add
xor
ror
sub
dec
dec
xor
not
pop
shl
sub
not
pop
push
rol
add
pop
pushl
push
not
shl
pop
call
call
push
push
ror
xor
push
or
inc
add
rol
add
add
not
sub
inc
pop
sub
not
pop
push
lea
push
push
lea
push
call
add
rcll
push
add
xchg
xchg
add
add
mov
fiaddl
add
xchg
lea
jb
push
add
sub
pop
pushl
call
push
push
push
lea
push
push
push
push
push
push
lea
push
call
xchg
rolb
add
xchg
add
add
add
add
jmp
stc
mov
add
clc
aad
add
rolb
jno
add
add
cmpsb
mov
add
add
mov
xchg
clc
add
notl
add
in
add
jo
add
xchg
icebp
iret
add
add
mov
add
push
imul
lcall
shrb
adc
push
push
pop
add
ror
sub
lea
sub
ror
pop
shl
pop
push
inc
pop
pushl
call
push
dec
pop
call
push
push
shr
shr
shl
shr
push
sub
add
sub
sub
add
sub
add
sub
lea
pop
xor
pop
push
ror
shl
sub
pop
pushl
push
lea
push
push
push
push
push
push
push
lea
push
push
call
inc
add
xlat
add
xchg
mov
stos
cmpsl
add
push
sahf
add
rorl
imul
jbe
fldl
add
jp
add
mov
push
sarb
loop
in
add
add
lahf
add
add
loopne
in
fcomps
push
daa
add
call
push
push
lea
shl
push
and
add
not
add
add
sub
sub
add
sub
rol
pop
sub
pop
push
push
push
push
push
call
add
add
scas
repnz
mov
xchg
xchg
aam
jl
add
in
imull
mov
scas
movsb
add
clc
lea
popf
shl
add
lcall
jne
call
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
pop
movb
fidivl
mov
mov
xchg
add
call
add
ficoml
aad
scas
add
xchg
lahf
add
mov
imul
add
add
lds
test
add
add
lcall
shrb
stos
rorb
sub
add
ror
inc
rol
sub
sub
shl
dec
dec
pop
xor
dec
inc
pop
push
lea
push
push
push
push
lea
push
push
call
xchg
pop
in
add
out
mov
lock
add
pop
int3
out
in
add
add
xchg
add
data16
push
mov
lcall
jne
push
push
push
push
push
push
push
call
jp
loop
into
mov
out
add
cltd
push
cltd
add
add
add
add
out
add
add
mov
movsl
out
mov
stos
add
add
cltd
mov
pop
add
jmp
add
in
in
call
call
push
push
add
xor
not
push
push
pop
add
sub
lea
sub
not
pop
ror
rol
pop
push
push
push
push
push
push
push
call
push
mov
rol
mov
iret
pusha
scas
fiadds
add
imul
enter
repnz
xchg
pusha
gs
xchg
add
add
jo
jle
add
fmul
les
add
add
add
idiv
mov
fs
pop
pushl
push
push
lea
push
push
push
call
jp
bound
add
add
mov
add
lea
fistps
jmp
sti
add
add
mov
cwtl
lret
in
mov
mov
add
add
add
rolb
mov
cmc
mov
push
mov
add
sub
pop
call
lea
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
out
jno
add
in
add
mov
bound
mov
push
int3
test
rolb
pop
xchg
leave
add
add
gs
add
add
jnp
sub
pop
push
push
rol
shr
ror
shl
pop
call
push
push
inc
add
push
xor
add
shl
add
add
sub
add
rol
xor
pop
shl
pop
push
push
push
lea
push
push
push
call
call
add
mov
add
lret
ja
mov
jge
sahf
mov
add
mov
add
push
fnsave
divb
cmc
ret
add
mov
add
add
xchg
xchg
stos
rcr
cli
stc
add
add
xchg
scas
add
jne
call
push
lea
push
push
push
push
call
add
nop
add
testl
add
add
movsl
pop
test
add
hlt
enter
cmc
add
mov
arpl
fldl
fs
ret
add
popl
lret
jae
push
jecxz
repnz
add
add
add
jo
shl
sub
pop
call
push
push
shl
push
and
add
add
inc
sub
inc
shr
pop
dec
pop
push
shl
pop
pushl
call
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
adcb
je
loop
stos
add
add
cmpsl
out
lret
leave
iret
add
mov
jnp
add
rolb
test
add
mov
add
mov
out
test
add
mov
add
fdivr
lcall
shrb
pop
bound
into
push
add
sub
pop
shl
add
inc
not
pop
push
push
push
push
push
push
push
lea
push
call
add
add
cltd
add
jnp
add
out
fcmovu
add
ror
lock
add
lds
push
pop
fnsave
fsubp
push
add
mov
add
out
mov
faddl
mov
lcall
jne
call
push
ror
add
pop
call
lea
push
push
dec
add
sub
shl
push
sub
add
add
sub
lea
sub
pop
shr
sub
pop
push
sub
add
pop
pushl
call
push
sub
xor
pop
push
push
sub
sub
pop
call
push
push
sub
ror
sub
push
sub
add
xor
sub
pop
add
xor
lea
pop
push
push
lea
push
call
add
add
sti
mov
add
lahf
flds
lea
add
insb
imul
add
mov
mov
add
sub
pop
pushl
push
push
push
call
add
add
add
add
mov
add
push
movsl
sarl
push
js
add
scas
faddl
pop
add
lods
xchg
add
cld
add
add
test
enter
add
popf
subb
pop
jp
cmc
xchg
fdivr
std
clc
jns
fldl
fadds
test
add
lcall
dec
and
add
scas
cli
sbb
hlt
push
lea
push
push
push
push
call
outsl
add
mov
add
mov
add
je
fldl
add
add
add
mov
add
cltd
add
pop
test
add
add
mov
push
pop
add
add
out
add
push
cltd
gs
add
add
sub
pop
call
mov
push
push
add
push
or
inc
add
add
sub
dec
lea
pop
shr
pop
push
rol
add
pop
pushl
call
push
push
call
repnz
hlt
test
fcmovbe
int
icebp
cmc
add
mov
jnp
sti
in
mov
fucomp
jae
call
mov
in
clc
pop
push
push
lea
push
push
push
push
push
push
call
jno
push
add
add
cld
add
add
iret
mov
icebp
rorb
push
test
xchg
arpl
push
lret
outsl
add
jne
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
jl
add
add
aad
push
jl
jmp
add
sahf
add
xchg
popf
add
add
sahf
add
fildl
add
push
push
add
lret
test
mov
scas
jle
add
push
popf
add
fdivr
lcall
shrb
xchg
push
shl
rol
not
push
or
inc
add
xor
add
sub
add
xor
not
pop
shl
pop
push
lea
push
push
lea
push
push
push
push
push
push
push
call
cmpsl
add
mov
lods
add
add
test
lret
movsl
add
int
jo
flds
add
in
mov
add
mov
add
add
push
movsb
pop
lret
stc
test
sub
pop
pushl
push
add
pop
call
push
push
add
inc
push
and
add
ror
not
sub
pop
not
rol
pop
push
push
add
push
xor
add
shr
sub
sub
lea
rol
pop
sub
lea
pop
push
push
push
push
push
push
call
add
enter
push
jo
into
add
add
mov
mov
insb
fiadds
rolb
add
bound
call
cmp
ret
push
push
pop
add
rol
ror
sub
ror
dec
not
not
pop
pop
push
sub
dec
pop
pushl
push
shl
inc
not
pop
call
mov
push
shl
ror
ror
add
pop
lea
lea
push
ror
lea
add
lea
pop
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
xchg
shll
add
mov
js
cmc
out
add
add
stos
int3
add
add
test
add
in
movl
sub
pop
push
push
inc
pop
push
push
sub
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
xor
mov
mov
in
leave
add
mov
mov
add
scas
stos
sarl
mov
leave
add
lcall
add
add
add
add
mull
fidivrs
std
add
sub
pop
push
push
lea
push
push
push
push
push
push
push
push
call
add
pop
add
icebp
aam
xorl
cld
add
movsb
fiadds
gs
add
repnz
enter
pop
add
add
mov
loope
xchg
fsubr
addb
add
jl
js
pop
mov
std
cmpsb
add
int3
add
add
add
add
out
pop
add
arpl
mov
fwait
add
lcall
add
loopne
inc
xor
pop
push
push
shl
add
pop
pushl
push
push
push
push
call
hlt
int3
xchg
lret
pop
stos
out
mov
add
lods
add
xlat
popa
add
xchg
insb
mov
pop
jge
jl
popl
add
jp
add
push
ljmp
add
lock
push
push
push
lea
push
push
push
push
call
add
add
fildl
add
mov
add
into
in
shlb
in
add
ljmp
add
pop
mov
add
test
fcomps
roll
push
hlt
push
push
dec
rol
dec
inc
push
or
not
add
rol
sub
sub
shr
dec
pop
shl
xor
sub
not
pop
push
push
push
call
mov
arpl
add
add
add
jmp
add
add
clc
add
xchg
mov
add
subb
fbld
jb
add
cli
jno
cli
mov
pop
xchg
in
mov
add
add
in
hlt
lcall
jne
call
push
sub
pop
call
mov
push
push
push
push
call
hlt
mov
je
roll
pop
pop
movsl
ret
add
jb
roll
arpl
mov
jnp
test
add
pop
add
popa
in
std
iret
insb
add
int
cli
add
lods
add
mov
mov
add
mov
pop
dec
jne
push
sub
pop
call
push
push
ror
shl
not
push
and
add
sub
shr
shr
sub
xor
shl
add
rol
pop
lea
rol
pop
push
push
push
call
nop
lods
nop
popf
add
ret
aad
add
push
cli
stc
test
out
scas
jge
mov
into
imul
clc
add
mov
jb
loope
add
faddl
sub
pop
pushl
push
shl
pop
call
push
pop
push
push
rol
pop
call
push
push
call
rolb
addl
add
test
mov
fisubrl
add
add
add
imul
leave
cltd
push
add
xchg
push
add
add
xchg
stos
add
stos
addr16
int3
pop
out
add
pop
xchg
add
mov
mov
jl
xlat
xchg
je
add
fwait
mov
repnz
push
add
sub
pop
mov
lea
push
push
ror
add
push
or
not
add
add
add
shl
sub
dec
pop
shr
not
pop
push
push
push
push
push
push
call
fdivrs
negb
cli
add
add
out
xchg
push
add
pop
mov
mov
xchg
movsb
mov
bound
add
mov
mov
mov
mov
pop
add
stos
add
add
sub
pop
pushl
push
push
push
lea
push
push
call
fwait
jns
push
add
bound
add
add
add
rolb
add
shll
add
add
add
xlat
add
mov
pusha
cli
outsl
in
fstps
fistpll
out
jno
push
rcrb
pop
add
stos
sub
pop
call
push
ror
sub
pop
push
push
lea
push
push
push
push
lea
push
push
push
call
add
add
add
xchg
add
add
jecxz
movsb
cli
lds
cmc
fldcw
push
out
cli
add
pop
lods
add
mov
int
add
into
add
jns
test
bound
add
mov
jno
add
add
icebp
mov
add
fildl
sti
mov
lods
add
add
push
push
cmc
aam
add
lcall
shrb
loop
push
push
add
add
ror
push
or
inc
add
sub
rol
ror
dec
add
pop
sub
ror
pop
push
xor
shr
dec
pop
pushl
push
lea
push
push
push
push
call
arpl
add
add
add
add
jo
push
movsl
add
add
test
mov
ficomps
add
popa
mov
out
xchg
add
add
out
push
mov
fcomip
rolb
pop
mov
push
add
pop
add
in
lcall
sbb
add
push
lea
pop
call
push
not
pop
mov
push
push
push
push
push
push
push
call
mov
add
add
jge
loopne
in
add
add
jmp
mov
add
ja
add
arpl
add
bound
jnp
add
add
pop
test
stc
fisttps
add
add
insb
push
mov
add
add
loope
lds
pushf
and
ljmp
inc
cli
mov
shr
add
push
sub
add
xor
ror
not
xor
sub
add
lea
rol
inc
pop
add
pop
push
lea
push
push
push
push
lea
push
push
push
call
add
xchg
add
add
push
push
add
lcall
movb
sbb
loopne
pusha
add
add
add
add
rolb
in
add
add
lcall
jne
push
push
lea
push
lea
push
push
call
fucomi
xchg
add
stos
add
out
enter
lods
pop
add
cmpsb
mov
cltd
roll
pop
mov
add
add
add
add
cmpsl
fstpl
jecxz
jecxz
sub
pop
call
lea
push
ror
ror
add
pop
push
push
inc
pop
push
push
shl
add
pop
push
push
ror
add
pop
pushl
push
push
shr
push
xor
add
add
sub
rol
dec
rol
pop
lea
pop
push
push
push
lea
push
push
push
push
push
push
push
call
add
ljmp
mov
add
mov
les
jge
cltd
mov
push
add
add
cli
add
sti
mov
fwait
movsl
filds
add
cmpsb
movb
push
iret
pusha
test
mov
nop
push
add
sub
pop
push
push
shl
sub
add
pop
call
push
push
add
push
or
inc
add
shr
xor
sub
sub
lea
sub
not
pop
ror
shl
shl
add
pop
push
inc
pop
pushl
push
add
ror
rol
pop
call
push
dec
add
xor
shr
pop
push
push
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
mov
enter
jge
add
add
fs
mov
fstpt
add
fs
add
rolb
pop
call
push
push
push
sub
add
xor
lea
ror
lea
sub
sub
pop
shl
shr
rol
pop
push
sub
dec
ror
pop
pushl
push
shr
ror
pop
call
push
push
push
push
lea
push
push
push
push
lea
push
call
add
add
jmp
add
xchg
push
add
mov
add
roll
add
out
xchg
jb
flds
sahf
add
imulb
mov
jne
enter
movsb
fidivrs
mov
imul
pop
call
jmp
push
add
sub
pop
pushl
push
not
xor
pop
mov
push
lea
push
lea
push
push
push
lea
push
call
ljmp
push
xchg
sbb
idiv
mov
add
add
xlat
mov
fdivrl
iret
roll
add
movsb
lods
add
fs
add
add
add
shr
mov
iret
sub
pop
jmp
push
push
push
or
not
add
not
rol
sub
sub
lea
pop
shr
inc
pop
push
lea
push
call
jns
sahf
imul
test
mov
add
icebp
mov
clc
add
clc
cwtl
xchg
push
add
add
add
add
add
fsubs
add
roll
add
sub
pop
pushl
push
push
push
push
push
push
push
push
call
cmpsl
clc
imul
add
in
add
out
nop
popa
push
cld
add
add
xlat
test
mov
pop
mov
pop
add
add
call
jge
cmc
add
add
incb
leave
push
mov
add
mov
int
add
push
loopne
lcall
mov
add
push
push
add
sub
ror
pop
call
push
push
rol
lea
ror
dec
push
sub
add
sub
inc
shl
sub
rol
pop
sub
sub
add
pop
push
rol
shr
pop
pushl
push
push
lea
push
push
push
push
push
lea
push
call
add
out
add
loop
outsl
out
stos
fadds
xchg
les
mov
add
xchg
jle
add
pop
ret
add
xchg
fiadds
popa
pop
ficoms
add
xchg
rolb
loopne
pop
push
test
push
sub
pop
call
push
push
dec
pop
call
push
push
push
call
jle
into
add
add
popa
add
add
out
ret
add
lea
add
fnstcw
movsb
push
xchg
cli
popa
lret
jae
lret
add
lods
add
xor
lret
iret
mov
jno
push
sarl
add
mov
jecxz
add
lods
add
outsl
fdivr
mov
jo
sub
pop
leave
add
push
push
push
push
push
call
push
add
call
pop
mov
std
fiaddl
icebp
add
out
fildl
pop
pusha
int3
repnz
jbe
stos
mov
add
add
and
mov
add
mov
test
sub
pop
pop
push
shr
not
add
rol
pop
pop
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
push
add
pop
jb
mov
ljmp
add
cmp
add
add
fs
fcmovne
lods
addl
fcomps
push
lea
add
pop
pop
leave
push
ror
shl
rol
pop
add
push
push
call
add
cmpsl
mov
int
pop
mov
jo
add
fcomps
add
add
outsl
loop
add
jnp
pop
add
add
roll
add
add
add
jnp
lods
in
lock
add
add
pop
add
cmpsl
filds
add
add
add
lcall
push
lea
push
call
add
xchg
ljmp
add
xlat
add
rcl
mov
enter
pop
mov
pop
push
in
sahf
add
cmpsb
jecxz
add
mov
roll
push
jno
add
in
clc
pop
leave
push
add
pop
ret
push
push
lea
inc
inc
not
pop
mov
push
sub
lea
sub
pop
cmpl
jne
push
ror
not
pop
mov
jmp
push
not
add
shr
pop
mov
push
sub
sub
pop
and
xor
push
ror
inc
sub
xor
pop
xor
push
push
push
push
push
push
push
push
push
call
add
movsl
cli
loopne
outsl
xlat
add
add
add
add
pop
jmp
push
add
add
out
pop
jo
hlt
add
add
mov
fcompl
rolb
push
push
push
push
lea
push
push
lea
push
push
push
call
add
fcompl
fisubrs
xchg
add
add
mov
add
add
movb
faddl
add
ljmp
int
add
add
loopne
push
stos
add
ljmp
add
add
mov
add
lcall
dec
call
rol
shl
pop
dec
sub
push
inc
pop
jmp
push
push
push
push
push
lea
push
push
call
clc
add
pop
mov
out
mov
add
fucomi
data16
stos
push
pop
add
add
jmp
add
add
lcall
into
outsl
pop
add
stc
xchg
add
jo
popf
push
add
add
enter
movsb
test
cmc
cmc
add
outsl
pop
mov
jbe
popf
add
hlt
push
fidivrs
in
sub
pushl
push
push
push
push
call
add
stos
add
add
add
lods
pop
jmp
ja
add
add
aam
cmpsb
add
add
add
lods
add
fwait
add
add
out
sahf
nop
add
out
add
loope
push
xlat
add
add
add
add
sub
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
add
add
cld
flds
xchg
fidivs
aad
add
roll
xchg
lret
call
add
data16
add
mov
add
bound
mov
xchg
xchg
add
les
scas
push
sub
pop
cmp
jne
mov
push
shl
pop
lea
push
not
pop
sub
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
push
mov
add
jb
lods
add
loope
out
ja
aam
add
ficoms
loop
add
mov
fiaddl
sub
pop
mov
shr
push
push
push
push
push
push
lea
push
push
push
push
call
add
push
jmp
add
addr16
add
in
lcall
jmp
add
in
xchg
add
cltd
popa
xchg
mov
add
add
push
add
add
add
xlat
add
add
push
add
mov
enter
push
push
push
push
call
add
jbe
add
add
out
jno
add
rcll
jnp
mov
ljmp
pop
int
add
pop
mov
push
lea
loopne
in
stos
iret
add
cld
add
int3
add
add
cltd
rcl
sub
pop
pushl
push
sub
pop
pop
push
dec
lea
xor
shr
pop
shr
and
push
add
shr
rol
pop
sub
cmp
jne
push
push
push
call
int3
lods
push
add
add
mov
cli
fwait
add
xchg
fwait
add
imul
fsincos
je
sarb
pop
xchg
fs
sub
pop
leave
push
dec
sub
add
shl
pop
ret
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
add
add
push
add
hlt
test
pop
mov
add
cmpsb
add
jmp
add
add
fiaddl
add
add
movsl
sub
pop
mov
add
push
push
lea
push
push
call
fadds
add
add
leave
out
jp
add
add
add
add
xlat
add
add
add
repnz
cmc
add
xchg
popa
cwtl
push
xchg
add
xchg
add
addb
add
cwtl
jno
add
mov
sahf
add
sahf
aad
add
sub
pop
push
push
add
not
pop
push
push
push
pop
push
push
push
push
push
call
add
jge
add
out
add
add
loop
xchg
add
clc
roll
jb
push
pop
add
jl
fadds
testl
xchg
add
mov
test
pop
fisttpl
xchg
add
rcr
out
add
push
test
push
add
add
pop
add
add
sahf
xchg
stos
xchg
sub
pop
push
mov
push
push
push
push
push
push
push
lea
push
push
call
lret
add
test
lds
add
pop
add
jae
clc
jae
add
add
mov
mov
lock
mov
add
pop
nop
movsl
add
add
js
xchg
jbe
add
aam
push
icebp
push
add
fadds
lcall
push
cmp
lea
inc
not
pop
sub
push
push
call
leave
add
addb
stos
add
lret
in
sti
add
in
jle
sarl
add
test
pop
mov
add
add
js
add
add
pop
lds
int
out
rolb
add
addl
scas
stc
add
andb
mov
in
sub
pop
mov
push
pop
shr
push
lea
push
call
add
add
jge
add
add
mov
add
add
int3
std
cld
ljmp
popf
jmp
pushf
out
rolb
sti
add
add
add
repnz
clc
lcall
ficoml
ljmp
addb
add
mov
push
push
push
push
push
push
call
loop
push
clc
nop
hlt
addl
test
add
stos
loopne
add
test
rcll
jmp
cltd
addb
jl
add
out
add
addl
add
jmp
add
add
les
mov
jecxz
in
push
add
mov
cmpsb
xchg
add
sub
pop
add
push
push
lea
push
lea
push
push
push
push
push
call
add
add
mov
in
test
arpl
add
pusha
leave
add
shr
mov
decb
jne
mov
in
loopne
lcall
jnp
push
push
call
loop
add
mov
out
add
add
add
lcall
add
mov
mov
add
aad
add
enter
enter
stos
lret
add
add
push
add
lcall
jge
xor
push
dec
pop
mov
push
push
push
push
call
add
add
push
stc
jne
add
mov
add
add
add
add
outsl
add
add
pusha
add
add
add
in
hlt
add
add
add
mov
add
mov
int3
push
mov
test
movsl
mov
add
lock
and
push
push
push
push
push
call
add
push
xchg
add
test
lret
out
add
add
add
popf
jmp
andb
shll
add
mov
push
mov
add
add
mov
lea
imul
sbbl
add
xchg
scas
add
in
insb
add
popf
lcall
in
in
pop
rol
push
lea
pop
rol
push
rol
shl
not
pop
xor
push
not
pop
inc
push
push
push
push
push
push
push
push
lea
push
lea
push
call
aam
movsb
add
jns
add
ficompl
jle
mov
jb
add
in
push
pusha
mov
aad
pop
je
loope
ja
addl
in
cmpsb
add
jae
cmpsl
add
cmpsl
add
ja
stos
add
movsb
insb
jl
je
test
fcomps
cmp
jne
push
push
lea
push
call
jo
add
add
add
add
mov
lcall
pop
shll
out
add
mov
xchg
jbe
add
insb
push
lahf
add
jmp
add
add
mov
add
mov
mov
add
add
in
pop
add
add
push
push
push
call
loope
xchg
add
scas
add
add
mov
mov
add
js
outsl
add
push
ret
mov
jmp
sahf
mov
add
roll
or
test
add
add
enter
ret
adc
jnp
add
test
call
push
lea
push
push
push
lea
push
push
push
push
call
push
icebp
rorb
xchg
add
add
outsl
ret
cwtl
add
pop
add
ljmp
add
test
push
cli
add
add
insb
sub
pop
xor
pop
push
inc
not
pop
pop
push
lea
push
push
push
call
add
pushf
mov
into
cli
add
stos
ljmp
fwait
xchg
addl
lock
addb
jns
pop
add
jle
add
mov
add
jnp
fadds
insb
mov
in
lock
pop
push
inc
pop
pop
push
shr
pop
pop
leave
push
ror
add
pop
ret
mov
push
rol
sub
not
pop
add
push
inc
pop
push
push
lea
pop
push
push
add
pop
add
push
rol
pop
mov
testw
push
pop
pop
push
add
sub
dec
pop
pop
push
push
call
outsl
add
shll
add
arpl
cli
imul
mov
add
add
cli
add
lods
add
lcall
add
pop
push
push
lea
push
push
lea
push
call
add
add
ljmp
pop
scas
xchg
jne
out
mov
add
add
add
icebp
mov
add
mov
xlat
jae
add
sti
mov
add
lods
jmp
addl
xchg
add
lods
add
in
lock
lcall
addr16
call
shl
sub
add
pop
xor
pop
push
lea
push
push
push
lea
push
push
push
push
push
push
call
loop
mov
out
push
jl
add
mov
jno
notl
gs
push
add
lahf
add
in
jno
out
popa
add
cld
sub
pop
pop
pop
push
dec
pop
pop
pop
push
lea
push
push
push
push
push
push
lea
push
call
int3
popa
add
add
rolb
jge
add
jns
popf
add
add
add
hlt
mov
popl
add
fidivl
push
jl
add
add
loopne
leave
push
ror
dec
not
pop
ret
push
push
push
push
call
sarl
add
aad
add
ret
out
shlb
xchg
mov
add
popf
mov
ficompl
add
xchg
xlat
add
add
add
jne
scas
mov
test
lock
lcall
push
push
call
add
add
cli
add
shll
jge
add
popl
in
add
scas
div
add
fadds
pusha
addb
stos
add
add
divb
mov
jl
lds
nop
add
scas
popf
rcl
lret
sbb
int3
lea
add
clc
lcall
in
push
sub
ror
add
shr
pop
add
push
lea
rol
dec
pop
push
push
lea
push
lea
push
push
push
call
pop
add
lea
test
nop
add
xlat
xchg
lock
adc
movsl
mov
mov
mov
fcmovb
add
mov
out
add
mov
aam
pop
add
add
add
std
pusha
push
add
mov
mov
mov
sahf
jb
pop
jge
in
in
lcall
push
lea
push
call
xchg
popa
add
jns
hlt
add
add
pop
push
pop
pop
add
aad
leave
fs
mov
je
add
add
add
add
pop
add
stos
fwait
pop
pushf
testl
in
clc
pop
push
push
ror
pop
push
mov
push
ror
pop
push
push
inc
sub
pop
pop
lea
push
sub
ror
pop
sub
mov
push
push
push
lea
push
call
cld
add
clc
add
add
test
lret
jno
add
xchg
add
push
lea
nop
add
add
add
push
test
add
xchg
std
xchg
notb
lahf
ljmp
add
add
mov
pop
shr
push
shr
not
pop
add
push
shr
dec
ror
pop
mov
push
push
push
lea
push
push
push
lea
push
push
push
call
add
add
imul
movsl
mov
mov
xchg
add
add
xchg
sahf
add
test
scas
iret
xchg
xchg
scas
scas
rolb
data16
xchg
jmp
and
add
sub
pop
add
push
shr
rol
sub
pop
pushl
push
ror
inc
add
pop
popl
mov
push
sub
pop
add
push
shl
shl
add
dec
pop
xor
push
add
shl
shl
shl
pop
lea
push
xor
sub
xor
shl
pop
mov
add
push
lea
push
push
push
push
push
push
call
lea
push
lods
add
cmc
jbe
xchg
cltd
xchg
out
mov
add
add
icebp
add
repnz
movsb
push
add
add
jge
add
mov
add
mov
add
in
add
add
add
add
scas
leave
into
shl
cld
add
fldt
add
sub
pop
xor
push
add
add
pop
rol
push
push
call
cmc
in
jno
test
add
lcall
nop
shll
xchg
fiaddl
call
add
add
test
jno
mov
je
push
test
fscale
xchg
add
lock
leave
lock
add
add
imul
lcall
push
inc
shr
sub
dec
pop
nop
push
inc
pop
xor
push
add
inc
lea
pop
nop
push
push
push
push
push
lea
push
push
push
push
call
add
mov
movsl
add
lea
jle
pop
add
jmp
mov
lock
leave
out
add
add
add
nop
inc
push
ror
xor
pop
nop
push
add
add
pop
nop
push
lea
push
push
push
push
push
push
push
push
call
loope
mov
add
int3
add
stos
lods
mov
add
add
mov
add
mov
sahf
gs
mov
xchg
mov
add
jecxz
ja
mov
jae
stc
add
in
add
xlat
sub
pop
cmpb
jne
push
sub
ror
add
pop
add
push
rol
sub
pop
nop
push
lea
push
lea
push
push
lea
push
lea
push
call
xchg
push
add
jle
lahf
lret
push
pop
add
mov
movsb
mov
push
add
movsb
add
add
jbe
pop
push
scas
add
scas
hlt
sub
pop
nop
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
add
xchg
sahf
stos
mov
filds
add
out
js
add
add
add
add
mov
mov
mov
add
lcall
inc
or
test
add
push
push
push
push
lea
push
call
lcall
mov
mov
push
scas
add
xchg
roll
fs
jl
add
add
test
pop
nop
push
push
push
push
lea
push
call
shll
movsl
fwait
movsl
in
add
add
add
rcrb
mov
fmul
mov
mov
mov
js
add
add
mov
mov
pop
lret
ja
add
aam
add
add
add
add
add
mov
add
in
mov
iret
add
sub
pop
nop
push
push
push
push
push
call
movsl
lret
cltd
fiaddl
loopne
add
imul
js
jecxz
xchg
jae
add
add
mov
mov
add
add
jne
in
in
pop
inc
push
push
push
push
push
lea
push
push
push
push
call
add
movsl
mov
add
out
lds
add
sahf
in
stos
rclb
test
add
pusha
add
scas
push
add
pop
fiadds
add
call
add
xchg
mov
mov
add
add
add
add
ja
add
mov
add
mov
add
add
sub
pop
nop
nop
push
pop
cmp
jb
push
push
lea
push
lea
push
push
call
frstor
fbld
in
xchg
push
jne
pushf
add
leave
lcall
imul
faddl
jb
fiadds
outsl
cwtl
aam
test
bound
sub
pop
xor
push
lea
add
lea
pop
jmp
push
push
lea
push
push
lea
push
push
push
lea
push
lea
push
push
call
cld
in
lcall
roll
data16
lock
add
cltd
fwait
testb
jb
add
loopne
addl
lods
add
add
add
add
mov
add
pop
cmc
stos
add
imul
push
add
dec
pop
movzwl
push
push
push
call
add
cltd
mov
jb
rcrl
int
add
push
scas
pop
rolb
add
addr16
addb
sbb
pop
add
mov
push
push
push
push
push
push
push
call
jnp
push
push
pushf
iret
jmp
pop
fwait
pushf
cwtl
dec
repnz
xchg
add
mov
add
movsl
call
add
mov
add
add
add
add
add
add
xchg
lcall
leave
xor
push
push
push
push
push
push
call
add
add
test
pop
shl
mov
mov
jmp
add
push
arpl
xchg
aad
testl
push
pop
mov
mov
fdivp
add
add
cmpsb
data16
push
loope
leave
add
loope
mov
add
stc
outsl
add
movsb
ret
xchg
pop
add
lcall
loope
xor
push
push
lea
push
call
out
fmulp
add
jne
add
mov
push
pop
add
xlat
fcoms
test
add
xchg
pop
lahf
cld
add
bound
push
add
add
cwtl
lcall
incb
data16
mov
pop
add
add
lcall
loope
xor
push
shl
ror
pop
shl
push
push
push
push
call
add
pop
xlat
popl
ljmp
shlb
mov
addl
fcoml
in
add
push
ret
ja
js
mov
scas
mov
movsb
xchg
cmpsl
add
loopne
lret
add
lods
repnz
add
add
add
add
add
fs
sub
pop
xor
push
ror
sub
rol
pop
mov
push
push
lea
push
push
push
push
push
push
push
call
add
stos
add
lock
loop
add
lcall
stc
roll
xchg
out
add
repnz
inc
hlt
push
push
push
push
push
lea
push
push
call
testb
add
add
add
mov
add
add
jmp
lahf
loop
rolb
add
jmp
add
pop
add
shlb
add
movsb
add
add
add
add
mov
jecxz
jge
adcb
ljmp
mov
pop
sub
pop
pop
push
push
call
pop
lahf
jmp
mov
push
subl
mov
movsb
add
lods
enter
aam
int
add
add
xchg
enter
cmc
ret
clc
lock
add
add
push
jnp
add
push
cwtl
add
in
xchg
mov
add
add
xlat
push
xchg
add
add
pop
pop
push
ror
pop
pop
leave
push
shr
inc
pop
ret
push
xor
pop
push
push
dec
pop
mov
push
push
push
push
push
push
lea
push
lea
push
push
push
call
add
add
add
scas
add
add
add
add
add
ret
idivl
ficoms
add
mov
pop
push
push
push
lea
push
push
call
icebp
add
ror
add
mov
add
pop
jecxz
add
add
add
pop
add
jae
pop
pushf
add
add
imull
movsb
rclb
add
lcall
push
xor
sub
add
pop
mov
push
dec
not
lea
add
pop
mov
mov
push
dec
sub
pop
test
je
push
push
push
push
push
push
push
push
call
xchg
pop
mov
xchg
cwtl
add
fdivs
add
add
add
mov
into
test
mov
mov
lea
add
add
shrb
add
add
xchg
add
scas
imul
in
loopne
lcall
jno
test
je
push
push
push
push
call
add
add
test
cmpsl
jae
lea
popa
pop
add
push
add
lahf
jbe
test
add
jne
add
jecxz
ljmp
add
push
add
mov
in
lock
lcall
notl
sub
pop
mov
push
lea
add
lea
pop
mov
push
lea
push
push
push
push
push
lea
push
call
call
add
add
stos
je
mov
add
add
call
add
add
mov
pop
add
mov
push
jl
pushf
mov
jns
je
jl
add
push
lds
rolb
bound
add
add
test
add
pop
movl
in
in
lcall
push
lea
push
push
push
push
push
push
push
push
push
call
sub
test
js
movsl
pusha
add
mov
cli
add
add
imul
lods
add
mov
gs
mov
popf
mov
mov
lea
ret
add
add
add
add
fsqrt
xchg
sub
pop
cmp
je
test
je
push
push
push
call
iret
mov
add
add
fnstenv
lcall
xchg
gs
push
fcmovne
xchg
fcmovne
mov
out
nop
add
add
cmpb
add
push
add
push
inc
push
pop
cmp
je
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
jmp
add
test
add
js
fiaddl
mov
filds
add
pop
movsb
add
add
add
test
mov
in
fdivr
lcall
rorb
pushl
rclb
shr
ror
pop
pop
pop
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
add
add
add
add
push
xchg
add
push
lods
mov
fiaddl
add
jb
add
add
mov
add
add
add
std
pop
add
sub
pop
pop
push
lea
push
push
push
push
push
push
push
push
call
jmp
push
movsb
std
add
add
pop
jbe
clc
mov
pushf
add
int3
push
addb
add
std
add
add
lcall
push
shl
pop
leave
ret
push
lea
push
push
push
push
lea
push
push
call
jo
add
add
add
mov
xlat
add
lret
lcall
int3
out
push
add
add
enter
rorl
add
add
add
mov
add
imul
sub
pop
mov
inc
push
push
push
push
call
add
add
add
add
fimull
mov
add
push
out
std
add
popf
int3
jno
add
push
add
call
mov
add
sub
pop
cmp
jne
push
xor
ror
pop
lea
mov
push
push
push
lea
push
call
sti
add
rcrb
lret
xchg
add
lock
pusha
movsl
testb
add
add
fs
mov
xchg
add
outsl
add
add
addl
rcrb
mov
outsl
add
add
les
mov
add
add
scas
jmp
add
push
add
add
lock
test
je
push
sub
pop
mov
push
lea
not
sub
lea
pop
add
cmp
jne
push
lea
ror
lea
pop
mov
push
push
push
push
lea
push
lea
push
push
lea
push
call
xchg
mov
add
add
loope
add
ret
jle
test
pusha
add
mov
lcall
add
add
pop
sub
pop
test
je
push
push
push
push
push
push
lea
push
push
lea
push
push
call
rol
add
jne
add
push
fiadds
stos
test
mov
mov
add
add
mov
fnsetpm(287
add
xchg
add
add
fs
in
fcomps
callw
pop
add
cmp
je
push
push
lea
push
call
popf
add
lds
add
add
test
add
add
add
fiadds
out
loop
add
add
add
add
add
mov
mov
scas
jbe
add
stc
add
in
hlt
pop
jmp
push
push
push
push
push
push
call
out
std
mov
add
les
test
popa
add
rcrb
loope
add
add
stos
test
add
add
cli
in
add
add
add
mov
add
ja
int3
push
add
push
addl
add
ja
in
call
xor
push
shr
pop
pop
push
lea
push
call
in
add
mov
pop
rcrb
mov
add
mov
movsb
add
shrb
add
popl
shr
add
add
in
add
out
add
enter
lcall
push
lea
push
lea
push
push
push
call
add
in
stos
pop
add
mov
mov
push
add
add
in
lds
add
add
mov
push
add
pop
arpl
jle
lcall
xchg
add
scas
push
xchg
add
out
add
jbe
add
out
mov
lcall
push
push
call
lods
add
repnz
sahf
mov
ljmp
fnstcw
add
leave
mov
xchg
shll
ficompl
xchg
xchg
add
push
test
add
je
filds
add
add
mov
in
clc
pop
pop
push
shr
dec
ror
pop
leave
push
add
pop
ret
lea
push
lea
sub
pop
pop
push
push
push
call
je
add
xchg
aad
pop
add
mov
add
int
out
push
add
sahf
lret
addb
popf
in
push
call
lcall
pop
push
push
push
push
push
lea
push
lea
push
call
add
ja
lret
aam
loop
mov
add
out
add
jge
add
cwtl
add
popl
pop
add
pop
add
add
mov
pop
push
push
push
lea
push
call
jo
add
sti
add
add
jb
mov
jb
sti
mov
fiaddl
lcall
add
xchg
std
mov
gs
add
out
rcrb
mov
fs
add
fadds
test
push
add
add
add
push
push
imul
xchg
add
sub
pop
leave
ret
push
lea
push
push
lea
push
lea
push
push
call
popf
out
pop
in
jle
cmc
test
xchg
lea
add
repnz
add
popf
add
leave
push
xlat
rolb
add
add
call
xor
pop
pop
pop
push
lea
push
lea
push
push
push
call
mov
push
add
ja
add
addr16
mov
add
into
icebp
in
mov
pop
fidivrl
in
pop
pop
push
shr
pop
pop
push
ror
shl
not
pop
leave
ret
test
jae
add
sti
jo
test
push
insb
outsb
jae
jmp
jae
sub
jae
test
jae
xor
jb
in
inc
push
lret
lods
inc
inc
sbb
in
pop
push
pop
pop
xor
push
or
xor
arpl
popa
lcall
add
lods
das
add
je
and
fwait
pop
adc
push
out
scas
lret
and
jg
and
test
arpl
rcr
adc
sahf
jecxz
jae
xchg
out
ljmp
push
jmp
push
sub
dec
aad
or
icebp
fwait
stos
add
inc
adc
data16
popf
xor
add
imul
lret
inc
movsb
mov
loope
sbb
addr16
jno
or
mov
fcmovnbe
out
stc
stos
push
aaa
int
mov
jns
fdivrl
mov
stc
mov
add
loope
ret
sub
aad
daa
mov
xchg
pop
jo
ret
fidivs
push
inc
push
lahf
stc
daa
lock
or
dec
pop
dec
dec
cmpsl
xor
dec
pop
push
push
call
lods
test
and
adc
lods
fisttps
xor
int3
or
push
xor
shlb
mov
mov
xchg
jl
add
push
and
lods
push
fsubrs
out
jbe
dec
pusha
data16
loop
test
xor
push
js
xchg
mov
cmpl
dec
fcmovbe
push
mulb
jmp
lods
scas
dec
enter
sub
imul
test
sahf
add
popa
int
mov
jno
std
mov
je
pop
pop
inc
adc
out
add
or
loope
daa
out
stos
cmp
and
push
jne
adc
in
mov
dec
mov
push
sub
inc
xchg
rcrl
mov
dec
push
push
cli
loopne
mov
cmp
jb
xchg
xor
loop
notl
xchg
int3
sub
jne
stos
rcrb
push
mov
xor
stc
lods
loopne
push
imul
push
sahf
dec
add
inc
repnz
out
and
sahf
nop
test
mov
inc
lea
add
adc
adcb
push
push
inc
or
mov
sbb
add
mov
jle
add
lret
jle
push
cmpsb
mov
pop
dec
test
lods
mov
mov
xchg
xchg
or
cmpsb
loope
scas
ja
daa
stos
frstor
js
inc
loope
pop
mov
xchg
push
dec
cwtl
out
in
inc
mov
ret
outsl
push
cli
adc
nop
mov
sahf
push
mov
fildll
shlb
cmp
xor
ficomps
add
add
mov
cmp
cmp
cli
pusha
push
sti
pop
add
lock
push
and
pop
inc
pushf
jo
out
int
stc
add
mov
fwait
outsl
stos
xorl
dec
fisubrs
inc
push
inc
lock
adc
pop
dec
cmp
movb
xor
cmpsl
and
movsb
sbb
adc
testl
adc
in
sbb
push
adc
imul
dec
lods
pop
xlat
hlt
and
inc
inc
shlb
cmpsb
and
inc
sbbb
pop
mov
roll
mov
or
stos
jge
lods
scas
ss
popf
mov
rolb
xor
cltd
push
imul
scas
xchg
aas
cwtl
aam
sbb
cmp
outsb
xchg
cmp
push
test
popf
xor
mov
mov
test
les
mov
cmpsb
mov
stos
pop
filds
fists
push
sub
jno
jbe
pop
fwait
scas
pop
cwtl
aas
pop
and
sbbb
into
lcall
fnstenv
js
nop
push
daa
roll
or
shl
push
insl
mov
sti
push
jmp
push
mov
or
pop
push
into
or
cs
pop
dec
aad
and
inc
xchg
mov
mov
sarl
add
push
mov
in
leave
cmp
imul
cmp
rcl
jo
pop
mov
dec
roll
adc
lcall
push
je
loope
or
lret
add
repnz
in
push
fidivrl
push
or
jge
xchg
inc
das
mov
ja
imul
aas
icebp
pusha
gs
std
movb
cmc
imul
inc
add
dec
popf
loope
rcll
test
fcomps
dec
arpl
ljmp
pop
push
cmp
xchg
lret
xchg
jnp
mov
sbb
pop
jb
ljmp
sub
jmp
shrl
or
cmp
loope
arpl
popf
icebp
sub
stos
cwtl
or
pop
aad
adc
mov
pop
push
mov
not
push
inc
pop
mov
sbbl
nop
ljmp
aad
jnp
mov
jno
into
imul
mov
xchg
cmpsb
jle
cmpsb
mov
ret
adc
cs
push
jno
sbb
je
sub
call
or
and
movsl
push
rcl
insb
xchg
stc
xchg
xor
insl
xor
iret
jle
mov
inc
aam
mov
int3
inc
cmp
sbb
filds
hlt
out
aam
jp
adc
pop
pushf
inc
mov
fwait
sahf
jmp
sbb
adc
ss
insl
jle
inc
mov
and
mov
xor
fs
push
sbb
or
mov
mov
fwait
das
rclb
push
ljmp
xchg
out
add
sbb
ss
add
xchg
jmp
call
lea
and
fisubrl
pop
sub
and
lahf
mov
mov
and
jne
mov
push
jge
jne
cltd
xchg
aam
push
ds
jmp
mov
in
push
adc
add
cmp
ret
fbstp
push
mov
push
push
enter
ljmp
scas
cmp
gs
xor
leave
das
mov
add
imul
f2xm1
rcll
xchg
xor
xchg
adc
adc
and
mov
cmpb
lea
cs
out
in
popf
push
mov
leave
cmp
pop
jo
aam
cmpsb
aaa
or
xchg
and
jb
shll
js
sub
rcrl
stos
mov
rcr
push
repnz
sbbl
dec
sub
jecxz
push
test
sbb
data16
cmpsl
inc
add
mov
hlt
jno
xchg
fnstenv
lahf
nop
outsl
cmp
mov
ss
xor
or
insl
push
cld
ret
addr16
das
pop
xchg
mov
faddl
xchg
andl
xchg
mov
inc
lahf
lods
sub
cmp
dec
sbb
popa
push
ljmp
clc
aam
mov
jl
pop
je
mov
xchg
repz
push
fstl
inc
add
ds
xchg
in
fsubr
mov
call
adc
dec
inc
sub
dec
ret
push
pop
dec
mov
xor
addl
jae
pop
test
and
lret
aad
dec
dec
ror
jns
and
xlat
xchg
jecxz
jns
scas
dec
and
imulb
sbb
dec
dec
sub
loop
lret
test
repnz
and
pushf
ud2
pop
cltd
loop
data16
ret
jg
push
add
sub
shrb
loope
lret
repnz
imul
or
lcall
inc
insl
xor
mov
ljmp
xor
sub
es
nop
fnstsw
vmread
mov
scas
fdivr
iret
mov
pop
repnz
or
ss
rcrl
daa
andl
xchg
jbe
fdivrl
fwait
inc
push
leave
mov
stc
xchg
loopne
lea
jmp
cmp
notl
mov
hlt
inc
push
les
pop
push
xchg
mov
pop
mov
adc
sahf
sub
sub
pop
inc
pusha
mov
inc
mov
sub
xchg
sub
dec
or
xlat
int3
or
es
stos
fidivs
nop
pop
arpl
rorl
popl
and
pop
lret
jge
test
cmp
cmp
add
inc
scas
mov
lds
xor
dec
sub
inc
adc
mov
int3
or
imul
lret
mov
stc
fs
decl
aas
cs
jecxz
sti
mov
lock
clc
mov
push
rcrb
clc
xchg
popf
mov
and
imul
mov
dec
mov
cmp
push
in
push
cmp
ret
ja
sub
dec
mov
mov
xchg
sbb
imul
mov
in
or
mov
cmp
jp
ja
fwait
jae
lcall
in
mov
fidivl
daa
add
lahf
mov
inc
fdivrp
xchg
mov
fisubl
in
bound
repz
aad
loop
inc
bound
in
pop
xor
clc
xchg
mov
xchg
aaa
adc
arpl
xchg
addr16
sbb
mov
jge
lret
aam
dec
pop
mov
scas
ss
mov
orl
adc
data16
addb
adc
rcrl
mov
pusha
inc
push
mov
scas
jg
push
int
ficomps
sbb
cli
cmc
jns
add
cli
mov
int3
sub
jp
xchg
js
jb
rorb
insb
adc
loope
sub
xchg
mov
and
andb
cmp
mov
fisubrs
nop
jbe
or
mov
lret
test
add
cli
data16
lret
fnstenv
adcb
adc
iret
jne
pop
loop
cmp
fimull
aam
ret
out
ficoml
scas
pop
sahf
pusha
rorl
jmp
inc
pop
or
mov
dec
cmp
aam
mov
sub
sbb
sbb
out
sti
outsl
mov
push
or
mov
stos
jmp
push
mov
push
popl
add
sbb
xor
dec
xor
cmpsb
ficomps
dec
mov
sti
stos
and
or
fnsave
dec
jg
hlt
xor
sbb
xchg
add
repnz
ret
loope
pusha
sub
cmc
mov
mov
data16
je
inc
xchg
in
dec
call
xor
pop
jmp
sub
mov
push
push
dec
or
mov
cmp
push
addl
or
clc
adc
cmp
sbb
jle
pop
mov
xchg
mov
js
fsubs
dec
and
test
mov
js
jne
daa
in
mov
mov
adc
lds
add
ret
fs
mov
fcomi
scas
ja
add
mov
xor
pop
xchg
xchg
aas
sahf
xlat
or
fsubp
mov
leave
rolb
push
adc
xor
add
jns
xorb
fbld
xlat
cmpsl
xchg
dec
icebp
pop
clc
push
ret
pop
mov
je
lock
cmp
daa
jnp
insb
fimuls
pop
adc
adc
ret
and
pop
adc
fbstp
ss
mov
mov
int
push
out
pop
out
push
push
mov
cli
call
push
xor
xor
imul
sbb
xchg
xchg
gs
push
gs
insb
push
sbb
pop
add
push
cmpsl
pop
addr16
cli
icebp
shll
lret
adc
xchg
rorl
add
cltd
inc
inc
dec
add
pop
ret
xchg
lods
outsb
mov
cwtl
fimull
movsb
pop
insb
nop
add
shll
mov
lahf
mov
inc
xchg
cmc
mov
arpl
fs
lcall
inc
mov
call
sub
scas
push
movsb
sbb
shlb
ljmp
das
or
pop
enter
push
dec
mov
xchg
sti
mov
std
pusha
inc
mov
js,pn
into
arpl
dec
loope
mov
cltd
test
or
mov
xchg
sub
or
cmpsb
hlt
bound
add
lret
adc
std
xchg
jge
dec
std
pushf
jb
pop
sarb
lods
ja
loop
mov
sti
xor
js
xchg
pop
mov
inc
icebp
and
jmp
lret
movsl
mov
mov
lret
jp
idivb
ret
loope
and
fwait
xor
xchg
mov
dec
in
push
incl
repz
push
ficoms
xchg
pusha
into
mov
movsl
addr16
cmpsl
jns
pop
push
mov
test
sbb
int
lahf
jbe
mov
lock
fwait
iret
sub
inc
fdivs
and
cli
jmp
ret
movsl
push
mov
pop
repz
aas
add
adc
jmp
xchg
mov
es
push
push
test
rorl
out
cmp
jp
fsub
or
mov
stos
fisttpll
add
je
lods
xchg
sub
test
outsb
push
cmpsl
js
rcrb
and
popa
mov
xchg
and
and
in
ret
out
rol
pop
aas
push
loop
xor
loope
lds
cli
add
or
push
add
lahf
sahf
and
cmpsl
mov
repz
pusha
data16
adc
dec
imul
test
into
jno
and
jecxz
ds
lahf
dec
and
stc
add
xor
mov
xchg
test
addl
arpl
shrb
inc
xlat
jno
and
push
sahf
idivl
jnp
sbb
movsl
push
xchg
icebp
lret
cmp
loopne
faddl
lock
clc
inc
fimuls
in
xchg
xor
sub
mov
insb
test
xchg
dec
data16
xlat
add
ss
shlb
lret
into
decl
mov
scas
ds
push
arpl
cmpsl
pop
popf
xchg
xchg
stc
imul
psrld
or
clc
ret
ja
cld
pop
insl
or
aam
aas
gs
cmp
cmp
sub
dec
mov
jnp
js
adc
lock
pop
jp
pop
aad
stos
inc
pop
sub
cmp
gs
and
push
xchg
mov
bound
cs
jno
pop
dec
inc
and
lahf
pushf
add
je
xchg
dec
pop
and
cmp
cld
rcl
mov
stos
les
xor
jg
xadd
repnz
mulb
push
loop
xchg
jb
push
dec
aad
sbb
dec
push
in
addb
mov
mov
pop
push
jns
pop
movsb
sti
popa
rcll
pop
and
shll
clc
dec
sub
ljmp
mov
pop
jle
xor
add
stc
pop
sbb
jno
sub
daa
xchg
inc
adc
or
inc
imul
pop
mov
add
mov
and
push
dec
test
mov
mov
dec
hlt
aad
jle
cmp
call
nop
cmp
loop
mov
imul
rorl
pop
fcoml
std
push
or
out
push
jbe
mov
inc
sahf
insb
fistpll
adc
lret
xor
mov
push
in
mov
mov
pop
out
jg
xchg
jnp
jecxz
ror
mov
dec
hlt
mov
lods
scas
hlt
dec
addr16
mov
ret
push
pop
int3
jecxz
mov
out
sub
sbb
sbb
cmp
mov
icebp
push
mov
mov
lea
aaa
loope
cmp
shl
push
icebp
push
mov
jns
mov
cmp
scas
dec
call
stc
out
inc
xcrypt-cfb
cmpsl
pusha
inc
inc
test
adc
pop
pop
std
mov
pop
cltd
jecxz
test
xchg
mov
mov
push
es
loop
test
sti
fwait
icebp
xchg
xchg
adcl
inc
inc
dec
scas
scas
lock
movsl
inc
lahf
test
fcompl
clc
inc
out
jecxz
pop
mov
test
icebp
out
add
sub
xor
xchg
fcomps
cmpsl
add
sbb
or
add
xor
in
xchg
cmc
loopne
test
pushf
adc
mov
push
dec
jge
push
lcall
xchg
std
xor
sub
cmp
pop
fisubrs
inc
js
mov
jnp
sahf
and
mov
and
insl
lret
sub
sahf
add
hlt
aam
cmpsl
out
lfs
lahf
aam
std
repnz
mov
mov
movsl
adc
repnz
outsl
pop
mov
push
dec
lods
fsts
aam
mov
mov
and
aad
std
cli
pop
inc
push
cmp
sbb
std
and
js
cld
jae
xchg
mov
cs
fcoml
test
jnp
nop
mov
les
mov
das
xchg
xor
sub
sti
lods
ljmp
and
lock
xor
test
cmp
and
pushl
mov
out
jle
cmp
mov
sbb
xor
cmp
fwait
pop
stos
stos
sub
push
lds
test
pop
sbb
push
push
xor
lods
sbb
pop
push
cmp
cmp
jno
rcrl
push
mov
or
xor
in
inc
push
xchg
or
or
mov
enter
cmp
sahf
out
sahf
pop
and
xor
mov
cmp
in
adc
sub
rol
cmp
adc
sbb
add
insb
outsb
test
pop
lods
sub
test
cmp
cmp
or
sub
mov
xlat
mov
sbb
or
rcrb
mov
fisubrl
rcr
cld
xor
fwait
sub
or
xor
stos
mov
js
int3
insl
std
or
clc
outsl
and
rcr
fcomi
mov
xchg
icebp
and
gs
insl
bound
sbb
cmp
adc
sar
fwait
das
dec
mov
xor
jmp
loope
clc
jae
das
sbb
inc
sahf
fdivrl
jne
pusha
jl
xchg
ret
push
cmp
daa
inc
ljmp
icebp
and
mov
loopne
mov
dec
data16
cwtl
mov
mov
jno
cmp
iret
sub
xchg
cmc
in
add
cmp
test
pop
adc
scas
mov
insb
bound
mov
je
cwtl
xchg
push
out
mov
ret
add
sub
mov
mov
fnstcw
ja
push
lods
push
push
ds
jnp
or
fucomip
pop
dec
mov
xlat
clc
push
dec
fsub
add
push
pushl
data16
clc
push
push
xor
jo
and
enter
jle
adc
push
pop
lock
push
or
dec
lahf
movsl
mov
lret
out
sub
ret
outsb
fwait
and
pop
jecxz
add
pop
dec
and
xchg
or
inc
fcmovne
cmpsb
dec
cmp
or
jnp
int
repnz
arpl
daa
sti
or
and
add
iret
cli
mov
fcmovb
enter
inc
push
and
in
push
and
shl
sub
push
adc
adc
cwtl
sub
hlt
lods
movsb
jp
and
in
xchg
or
mov
dec
es
fsubl
mov
or
imul
ret
or
add
xor
repz
jl,pt
inc
leave
dec
xor
repnz
xchg
pushf
lret
inc
adc
cld
sub
sbb
add
insl
adc
icebp
jmp
mov
add
popf
aaa
repz
pop
data16
aam
xlat
dec
add
cltd
sub
lock
or
mov
mov
stos
cltd
mov
leave
dec
mov
inc
xchg
popf
bound
inc
pop
lcall
jl,pn
mov
scas
and
mov
fstpt
xchg
movsl
add
cld
rorb
xlat
in
clc
jg
nop
imul
dec
push
push
rol
pop
je
lcall
jne
adc
dec
xor
xchg
je
mov
movb
push
insb
inc
std
xchg
pop
pop
sbb
jp
dec
jmp
jp
add
or
stos
jmp
add
mov
stos
aas
inc
mov
movsb
mov
pop
lods
addb
adc
popa
push
in
daa
shll
pop
and
pushf
jo
xchg
sub
lahf
test
lods
xor
jle
hlt
std
cmc
dec
daa
sub
and
cwtl
scas
cltd
or
mov
pop
cmpsb
movsl
push
scas
loopne
cltd
outsl
ds
loopne
pop
jecxz
inc
and
subl
fdivl
jmp
repnz
sub
divb
xor
hlt
mov
and
clc
stc
movsb
jb
ja
mov
sub
ficompl
fmul
jg
sub
push
ja
aaa
xchg
dec
and
gs
or
sub
mov
orl
xchg
push
aas
mov
arpl
inc
or
fwait
cmpsl
dec
test
pop
adc
ret
pop
mov
fcmovu
stc
mov
inc
int
or
xchg
sahf
iret
dec
fldcw
push
pop
mov
sbb
xchg
and
cli
push
sbb
in
aaa
push
mov
jns
sub
inc
xchg
inc
fdivrl
out
lcall
je
or
dec
adc
adc
aas
dec
lock
push
stos
clc
pop
mov
arpl
dec
jecxz
mov
mov
or
stc
or
psubd
xchg
inc
add
ljmp
gs
std
lea
sbb
les
addb
incl
and
jo
cwtl
cmpsl
and
push
rorb
or
jne
xchg
std
jecxz
cmc
les
and
mov
cmpsb
lret
dec
mov
inc
sarb
fdiv
test
into
adc
mov
inc
out
jb
push
xor
les
or
jle
scas
ret
cld
popf
jbe
lods
sub
mov
xor
pop
into
xchg
cltd
xor
ds
sub
daa
sbb
inc
sub
icebp
out
or
shlb
mov
push
cmc
pop
push
stos
push
scas
loop
dec
test
mov
mov
jno
or
fstpl
repz
jle
inc
xchg
sbb
lahf
mov
lock
pusha
aaa
lock
jb
cmp
push
mov
jo
aaa
fimull
loope
pop
pop
lret
lret
or
jnp
orl
incb
add
cmpsl
jl
stc
lret
mov
lret
les
xchg
jecxz
sub
out
icebp
fwait
sub
inc
sbb
les
jo
std
pop
es
std
sbb
lret
cmp
daa
mov
enter
popf
mov
mov
fcomp
jmp
negl
fcoml
mov
ljmp
lock
orl
inc
daa
xor
cltd
xor
xlat
outsl
faddl
daa
mov
mov
popf
arpl
inc
inc
pop
or
xor
fisubrs
mov
jecxz
mov
ficompl
jnp
idivb
mov
popa
cwtl
xchg
sub
hlt
xchg
cltd
rorb
rcll
sbb
jmp
test
sti
ds
test
inc
addr16
sub
test
mov
inc
xchg
cltd
jle
dec
test
test
push
mov
mov
inc
jae
xchg
repz
es
sub
divl
or
ret
int3
es
inc
mov
jge
ds
lock
cwtl
inc
sbb
in
add
addr16
testb
cltd
add
mov
push
jno
or
out
xchg
scas
and
addr16
fcompl
shll
cmp
adc
adc
lcall
sti
and
stos
adc
fcomip
xchg
rol
je
pushf
sub
add
rorl
subb
dec
jecxz
lcall
ljmp
cmpsb
cwtl
mov
mov
jg
sbb
fnsave
ljmp
call
aaa
and
popa
sahf
icebp
mov
xor
into
insb
idivb
xchg
sbb
fmul
cmpsb
out
pushf
sahf
mov
call
mov
mov
insb
adc
lock
aam
dec
nop
out
or
pushf
jmp
loope
in
sbb
pushf
inc
sub
sub
mov
mov
xlat
out
mov
pop
dec
add
push
jge
addr16
sti
fldcw
adc
in
movsl
js
hlt
div
or
push
nop
mov
mov
push
push
jbe
mov
mov
pop
mov
iret
imul
gs
lret
fisubl
rcll
push
add
mov
mov
in
xor
adc
lock
shll
sbb
dec
ret
adc
sahf
adc
ss
cld
xchg
adc
inc
jnp
jno
test
xor
push
nop
push
imul
ficompl
fldl2e
jo
or
adc
and
xchg
shrb
daa
lock
or
sahf
addr16
lcall
nop
popa
xor
jmp
imul
scas
negb
gs
cmp
jne
or
pop
cmp
push
and
add
pop
sahf
pop
push
push
xchg
inc
mov
cld
out
mov
push
sti
bts
mov
push
inc
lret
mov
and
or
outsl
xor
fisttpl
jb
loopne
cmpsl
repnz
shll
jle
add
idivl
ja
sti
in
ds
jmp
lock
test
and
add
and
les
outsb
mov
mov
mov
or
sbb
inc
dec
add
push
mov
ja
pop
sbbl
cmp
int
cmpb
jmp
jmp
push
addb
sub
dec
add
push
push
test
in
dec
xchg
mov
inc
xchg
fcom
jl
dec
arpl
or
fwait
mov
scas
pushl
pop
int3
outsl
mov
cmp
or
push
jge
xchg
int3
cmp
add
in
fwait
mov
mov
and
ja
xor
imul
mov
cltd
inc
dec
cmp
inc
jle
fisttpl
stc
fsubp
call
nop
cmp
cmp
jle
pop
jno
sbb
push
mov
sti
push
movsb
enter
inc
push
shll
jmp
and
push
mov
loop
fs
cmpsb
jmp
sbb
fsts
adc
xlat
lock
icebp
out
mov
and
popf
xchg
andb
daa
cmpsl
popf
pop
test
cld
push
adc
xor
stos
orb
jo
pop
or
mov
push
push
loop
test
loope
call
in
mov
notl
sbb
xchg
pusha
and
inc
add
adc
push
mov
test
mov
jecxz
xor
sti
mov
divb
jb
lret
xchg
mov
mov
jge
jbe
sub
or
add
jne
movsb
add
stc
gs
dec
dec
mov
mov
push
lcall
adc
pop
vunpcklpd
dec
fbstp
and
push
ficoml
iret
mov
lret
fwait
cmp
lcall
add
and
mov
jae
mov
lcall
into
jne
sbb
jno
adc
lea
add
xchg
addr16
ja
movsb
outsb
lock
jb
add
xor
hlt
xchg
mov
jns
sub
jns
lahf
mov
jle
push
mov
popa
out
sub
xchg
leave
ret
pop
stc
adc
jnp,pt
mov
inc
or
dec
push
pop
in
in
adc
sbbb
imul
repz
xchg
sbb
insl
lock
xlat
xchg
sbb
sub
pop
or
addr16
sbb
dec
cld
jo
int3
repnz
btc
inc
inc
cmp
repz
cmp
push
inc
dec
imul
jne
add
je
cmpl
aam
and
iret
mov
je
out
sub
pop
jne
adc
imul
in
or
movb
jbe
fistpl
popa
push
lret
xor
push
dec
xchg
sub
jo
loop
push
out
xor
cs
int
in
mov
cmp
adc
and
add
cli
popa
xchg
iret
push
mov
in
mov
sbb
loope
jnp
sub
mov
push
call
and
mov
xor
jbe
mov
enter
insl
adc
test
popa
push
xchg
jns
cmp
push
or
adc
daa
jne
push
pop
xchg
push
test
fstpl
scas
out
push
jbe
inc
jmp
and
into
aas
pop
movsb
movsl
adc
cmc
inc
xlat
and
pusha
std
or
fs
mov
subl
popa
xchg
mov
jae
pop
pop
insl
push
add
fs
jle
repz
data16
test
or
ja
insb
jb
in
pop
xchg
xchg
xlat
adc
rdmsr
cmp
dec
pop
test
lahf
nop
cmpsl
xchg
push
xor
fadds
mov
xchg
or
xorb
jnp
ret
mov
dec
adc
scas
cmpsb
bound
adc
inc
fisubs
inc
mov
sub
mov
cmp
bound
lods
xlat
movsb
inc
cmp
mov
mov
setns
lret
cmp
mov
shrb
lret
xorb
push
xlat
pop
mov
ss
xor
adc
mov
icebp
lret
in
cmc
adc
xchg
sarl
push
cmp
jmp
test
cmp
sub
lods
xor
mov
jae
add
xor
jo
inc
repz
jne
inc
pop
xchg
xor
fdivs
mov
dec
push
mov
int3
ret
add
call
adc
xor
push
inc
fwait
jo
mov
mov
sub
add
shrl
pop
insl
fsubl
lds
cld
or
call
cmpsl
inc
loope
js
xchg
or
jmp
or
jns
and
cmc
scas
fistpll
scas
into
mov
mulb
dec
fcomp
imul
out
xor
out
and
lcall
or
pusha
and
fcmovnu
pushf
adcb
in
jge
mov
mov
dec
shl
pop
mov
inc
and
push
repz
jmp
jmp
sub
hlt
ret
test
arpl
xchg
add
in
jns
xrelease
cli
and
sti
sbb
scas
data16
add
inc
mov
bound
pusha
and
popa
jo
popf
mov
pushf
in
int
ss
cmp
loopne
and
out
cwtl
pop
ret
add
cwtl
sbb
notb
imul
pop
cltd
mov
pop
or
inc
or
xchg
mov
inc
and
inc
aad
imul
dec
out
xlat
push
and
ret
mov
mov
ret
cmp
pop
rolb
popa
shlb
xor
xor
out
fnstsw
pusha
icebp
roll
comiss
mov
gs
cmpsb
subb
dec
enter
add
test
lock
and
call
cmp
jns
enter
pop
adc
das
in
pop
cltd
pop
mov
gs
mov
push
sahf
sbb
push
mov
or
test
adc
xor
push
mov
mov
loop
gs
das
addr16
mov
or
dec
arpl
xor
jns
mov
enter
das
test
mov
jae
jge
dec
loope
int3
mov
sbbb
jg
lcall
xchg
fistl
push
dec
xlat
and
repz
xorb
loop
out
mov
popa
pop
mov
cli
negl
or
mov
test
cld
lret
es
fcoml
lcall
fs
scas
lods
push
fisubs
sbb
dec
pop
aas
dec
xchg
cwtl
or
or
mov
in
pop
and
loopne
push
pop
mov
movsl
jb
ja
add
out
add
pop
lock
lds
das
in
fstps
lcall
sub
jmp
clc
aaa
sbb
dec
rcll
pusha
test
cmp
fdivrs
out
cld
test
mov
aam
inc
pop
inc
addb
out
and
pop
sub
addr16
push
adc
cs
cltd
pop
je
lods
inc
cmp
add
hlt
int3
test
xor
nop
mov
popa
xchg
mov
int
add
or
xchg
outsl
int
jno
mov
aam
add
cmpsl
je
aaa
data16
ret
negb
aam
push
cwtl
jle
gs
je
and
lahf
scas
mov
icebp
cmp
xor
ljmp
and
lock
push
push
mov
icebp
into
sar
pop
dec
pop
dec
rcrb
add
movsb
aad
jo
das
pop
fsubrl
add
cs
outsb
cmpb
inc
rcrb
into
xchg
das
pop
imul
insl
pop
mov
in
movsb
mov
fsubl
cli
in
loopne
lret
out
jge
stc
aam
sbb
sbb
and
mov
fisubrl
or
leave
dec
or
adc
xorb
lea
lret
rolb
shrb
stc
mov
call
and
sub
mov
in
xchg
js
sarl
lods
sbb
push
orb
pop
mov
or
cmp
lret
cmp
lea
getsec
push
bound
xor
adc
std
fnstcw
std
bound
cmpsl
mov
jp
into
inc
sub
pop
ret
xchg
repz
insl
mov
pop
sbb
sub
xchg
push
fidivl
aas
pop
divb
lsl
push
maskmovq
notl
dec
test
sarb
and
sub
xlat
jbe
jo
cltd
int3
aam
jge
ljmp
jle
jae
cmp
loopne
loopne
pushf
mov
add
cmp
test
fnstcw
and
pop
iret
and
mov
cmp
aas
pop
mov
push
fstl
sarb
jge
and
stos
add
gs
fwait
rcrl
and
mov
movsb
cmc
enter
lea
mov
mov
loopne
das
jno
sub
stos
cs
mov
pop
sbb
push
jmp
cmp
adc
scas
lods
fldcw
push
scas
in
and
pop
add
mov
in
popf
aam
push
mov
aam
cmpsb
daa
imull
flds
sbb
test
inc
lods
or
fidivrs
movsb
outsb
clc
fldl
pop
mov
mov
mov
pushf
push
movsb
push
xchg
adc
mov
sbb
xor
inc
mov
xchg
int3
es
outsl
out
push
cmp
aaa
and
hlt
jb
das
jecxz
xor
jmp
rcrb
cs
in
mov
inc
mov
sahf
scas
mov
dec
fisttps
fdivrs
and
push
mov
sbb
mov
mov
inc
dec
add
cltd
push
xchg
stos
add
std
inc
clc
inc
daa
cmp
adc
dec
lcall
xchg
mov
adc
inc
ja
fwait
ja
rclb
js
xchg
pop
jnp
xchg
dec
test
inc
popa
mov
das
arpl
aam
inc
sbb
lock
push
in
andl
cmp
push
rcrb
insl
inc
sbb
out
sbb
sahf
push
jo
or
jae
cmp
loopne
cmpsb
insl
and
sub
ljmp
mov
push
jbe
pop
in
cmp
addr16
notb
fbstp
popa
and
adc
popf
inc
cmc
cld
cs
divb
xchg
movsb
mov
outsb
pop
icebp
push
nop
jl
mov
sarb
loopne
xchg
adc
push
inc
mov
rolb
xchg
jo
scas
ret
mov
pop
jo
lret
mov
and
cmpsb
xor
addr16
jbe
lock
mov
cmp
xchg
add
mov
test
add
dec
fs
jl
xor
daa
mov
mov
jno
mov
jns
inc
xchg
out
ficompl
pop
push
cmp
dec
js
xchg
xor
mov
fs
sbb
or
inc
jo
adcb
cmp
jno
das
sub
hlt
pop
stos
ret
dec
adc
push
loope
ret
pop
arpl
and
fwait
std
cmp
sub
sub
nop
fneni(8087
add
mov
dec
jnp
xchg
push
aad
and
cli
push
jns
mov
movsl
dec
es
cmp
mov
test
xchg
mov
mov
popf
outsb
adc
adc
repz
xchg
int
cltd
aam
mov
dec
iret
jae
mov
les
xor
jnp
cli
cmp
sub
repz
mov
daa
xchg
lds
and
aaa
pop
sti
enter
maskmovq
divl
xchg
cmc
dec
mov
xchg
or
insl
lods
push
push
dec
stos
mov
mov
sub
dec
lcall
inc
shlb
inc
insb
or
repz
push
pop
inc
xor
lods
ret
aas
aam
xor
mov
xor
mov
inc
call
lahf
gs
lods
mov
mov
sarl
xor
or
xchg
shrl
arpl
cmp
dec
fldcw
lock
mov
jecxz
rcl
lods
pop
push
inc
push
pop
push
or
gs
hlt
lods
test
out
xchg
sbb
stos
cmpl
fsts
dec
adc
xchg
push
sbb
and
in
push
ja
lods
jg
add
loope
out
adcl
out
lods
cmp
rcrb
or
add
shrb
inc
movsb
ljmp
xor
cmp
js
sub
lods
lret
sbb
aad
mov
test
popf
je
inc
or
xchg
out
fsubl
stos
cmc
push
jne
and
inc
dec
into
pop
gs
out
in
into
fisubl
mov
jnp
pop
jne
dec
scas
rclb
jl
sub
es
lahf
sbb
std
and
adc
mov
adc
repnz
cs
imul
and
add
inc
sbb
inc
adc
mov
pop
iret
sti
lods
adc
bound
ffreep
jne
xchg
sub
sahf
adc
out
scas
xor
pop
sbb
cmp
mov
mov
sbbl
cmc
clc
sub
fisubrl
sbb
imul
ljmp
aad
out
jg
addr16
or
push
push
pop
jle
cmp
out
sbb
cmpsb
incl
push
adc
add
outsb
lret
in
cmp
cli
dec
scas
test
mov
sbb
cltd
in
lea
mov
loope
push
movsb
inc
ds
pop
xor
cs
aas
inc
or
mov
fwait
testb
dec
daa
dec
xorb
lods
and
repz
negl
inc
xchg
inc
jbe
cmp
and
mov
into
sbb
adcl
ss
fisubs
and
xor
repnz
ret
cmp
stos
pop
and
imul
mov
adc
jae
adc
push
cmp
shrb
pop
mov
fadds
loope
repz
push
in
jecxz
jne
lcall
leave
shll
jp
hlt
aaa
push
xchg
fdiv
das
adc
aad
push
int3
push
lock
inc
lcall
sub
stos
sbb
or
loop
and
fsubl
mov
pop
fisubs
stos
mov
std
out
mov
in
mov
mov
divl
jg
xorb
cmp
cmp
rcll
sub
mov
rorl
movsl
notl
add
inc
inc
xor
jl
add
cli
mov
jle
cmpsl
fdivs
add
cmp
fidivs
sbb
and
dec
movb
and
xor
push
adc
pop
leave
adc
jnp
push
cmpb
xchg
cmp
adc
cld
add
cmpsb
or
jg
call
mov
je
push
pop
cmc
std
jnp
stos
xor
inc
lahf
pop
lret
lret
sbb
mov
scas
sub
stos
inc
pop
dec
leave
lret
enter
outsb
cmp
jg
dec
jne
jne
dec
and
cmp
andnps
mov
xchg
mov
jne
or
cmp
add
out
fstpt
jo
add
cmp
imul
pop
dec
jp
sub
outsl
test
int3
imul
inc
mov
add
cs
lret
sti
mov
jno
dec
out
adc
pop
sbb
dec
pop
je
fwait
adc
outsl
imul
push
and
inc
lahf
mov
pop
mov
mov
out
data16
aas
push
outsl
cmp
loope
and
int3
sub
idivl
out
cmp
shll
aaa
push
cmp
es
push
scas
in
adc
push
in
pop
outsl
cmp
gs
nop
std
cwtl
ds
mov
inc
fstp
sbb
or
call
jb
sbb
xchg
dec
xor
push
sub
sub
test
cmp
cli
xchg
popf
call
arpl
mov
jb
sbb
sbb
cmp
subb
in
mov
mov
adc
sub
jge
loop
sbb
push
jecxz
inc
jae
ror
inc
dec
cmp
mov
jmp
inc
push
mov
add
xlat
outsb
sarb
iret
into
aas
es
and
jl
cmp
dec
inc
xchg
inc
cld
xchg
repnz
push
pop
aas
mov
dec
or
cmp
mov
fstps
jae
daa
lcall
inc
cld
mov
faddl
push
cmc
rorb
dec
add
sub
jl
insb
or
jb
mov
jge
pop
sbb
test
xchg
jo
and
mov
lret
out
mov
xor
xor
ljmp
dec
hlt
fimull
leave
arpl
sub
jo
pop
mov
mov
jb
outsb
test
ja
mov
inc
fdivp
gs
sbb
xchg
and
sbbb
mov
cmp
popf
mov
lods
mov
sar
mov
xor
pop
and
imul
pushf
shlb
ljmp
sbb
cwtl
sub
jno
ja
mov
popf
pop
jecxz
sbb
sbb
jo
sub
dec
or
xor
inc
jmp
mov
sbb
and
jno
push
mov
outsl
in
jecxz
jne
pop
add
ljmp
mov
dec
mov
lea
dec
add
sti
pusha
into
mov
push
addr16
push
insl
stc
ret
cli
cmp
cmpsb
or
or
push
rcll
das
push
je
sub
or
insb
and
inc
inc
jle
in
mov
clc
sti
je
push
das
arpl
out
pop
mov
mov
xor
in
or
xor
daa
dec
js
lods
push
add
popa
sbb
loopne
fwait
leave
dec
iret
fs
xor
sbb
xchg
in
insb
shlb
cmpsl
sub
lea
push
or
inc
icebp
dec
les
into
pop
popa
xchg
pop
pushf
out
dec
std
pop
fisubrl
popf
enter
lret
push
std
jno
push
and
dec
rorb
jae
mov
pop
pusha
xchg
xor
cmc
add
sub
or
in
add
popf
fidivrl
inc
test
xchg
mov
mov
pop
pmaxub
repnz
cs
ja
std
movsl
fcompl
loope
mov
adc
fisubrl
cmpsb
popf
pop
insb
in
nop
fcmovu
xor
shlb
inc
sarb
js
aam
mov
lret
lds
test
jns
sbb
jge
pop
leave
ret
mov
mov
mov
leave
and
mov
sbb
xchg
lock
dec
filds
mov
mov
mov
int
push
pusha
jno
add
test
insb
pop
sub
dec
cmpb
mov
and
ja
cmp
mov
and
mov
out
and
push
call
cmpsl
sub
daa
add
mov
ljmp
jnp
cmp
or
rclb
inc
das
mov
xchg
mov
xor
jnp
push
mov
jg
mov
cmp
dec
mov
xchg
dec
test
mov
repnz
scas
int3
mov
add
and
push
jb
sub
mov
pushl
and
mov
fdivrl
and
sub
jns
shr
mov
imulb
pop
sbb
lret
xchg
push
cmc
out
popf
std
lods
sub
push
aam
sbb
movd
call
cmp
mov
mov
fdivrs
subl
mov
sbb
mov
cmp
mov
xor
xchg
jge
das
loop
rclb
push
xlat
pop
sbb
stos
inc
jo
adc
lods
and
pop
sbb
push
inc
lock
ficomps
xchg
fwait
cmp
mov
mov
stc
fsts
lahf
or
mov
or
aas
iret
call
jnp
adc
ret
or
xchg
cmp
push
test
test
popl
emms
dec
imul
fdivs
inc
and
add
or
pop
fisubrs
jl
repz
add
ds
sbb
ss
dec
add
mov
shll
fidivrs
mov
aas
mov
enter
mov
jno
mov
popa
insb
mov
mov
adc
iret
mov
sub
les
aam
add
and
std
and
test
in
xchg
iret
push
adc
test
stos
add
shrl
sbb
add
aad
daa
fidivrs
scas
stos
pop
add
int
jbe
push
push
and
gs
sub
shl
jae
pop
xchg
out
sub
subl
jae
movsl
addr16
shll
icebp
adc
push
pushf
fcomps
xchg
push
pop
mov
test
bound
stos
dec
xlat
lock
pop
add
push
pusha
in
je
jg
stc
pop
dec
popa
stos
jnp
fs
idivl
and
or
imul
pop
sbb
inc
adc
rcrb
imul
sti
dec
leave
inc
faddl
loopne
adc
and
in
cmp
cmp
movsl
loop
fs
in
rorl
mov
daa
lea
jl
notl
ja
cmpsl
fdivl
sub
mov
push
add
mov
xlat
ret
mov
cmp
sbbl
out
push
outsl
mov
jo
popf
mov
sbb
es
negb
xchg
xor
lret
notb
mov
cmp
pop
push
jnp
push
xor
push
dec
arpl
cltd
pop
cmpsb
mov
je
sbb
test
cld
test
shlb
xor
push
movsb
pop
jbe
push
ret
insl
stc
cmpl
sti
mov
lcall
dec
cmpsl
jge
les
push
mov
add
jle
push
das
sahf
rcr
ds
xchg
cli
aas
imul
hlt
rclb
mov
xor
sub
add
pusha
xor
xchg
mov
sti
mov
pop
cli
xlat
lcall
and
cli
mov
icebp
jp
aaa
idivb
lret
lret
int
insl
mov
js,pt
mov
xchg
iret
outsb
pusha
lods
je
mov
add
mov
in
mov
push
les
call
fmuls
mov
push
dec
hlt
loopne
adc
leave
adc
lods
test
pop
pop
ss
lret
adc
adc
test
jo
cmpsb
into
icebp
outsb
add
fcomps
xchg
arpl
and
dec
dec
xchg
in
jp
xor
and
and
xor
mov
add
adc
nop
loope
push
je
mov
jp
push
dec
paddd
xorl
outsl
mov
sbb
mull
aaa
call
pop
xor
xor
cmpl
jle
sahf
popa
xor
imul
mov
push
adc
jne
add
xor
add
insb
aaa
jge
in
cli
lret
push
orl
mov
cwtl
cmp
out
xor
out
imul
sub
lahf
pmullw
mov
sbb
adc
jge
pop
pop
push
in
mov
rcrl
dec
leave
sar
out
and
jecxz
test
inc
ljmp
and
pop
jae
sahf
jg
sbb
dec
xchg
aaa
mov
rclb
jo
repnz
lahf
loope
cmpsb
jg
nop
in
lret
roll
leave
cmp
hlt
loop
inc
nop
xchg
mov
jo
push
lea
cmp
enter
je
bound
xor
lods
std
push
dec
arpl
push
mov
mov
push
test
jae
mov
jb
in
lcall
mov
xchg
adc
out
or
or
push
mov
scas
shlb
cltd
loope
xor
and
add
ret
add
jns
in
jne
jle
shlb
mov
add
xor
rcll
push
jo
dec
enter
pop
mov
insb
add
or
mov
sahf
mov
or
mov
xor
mov
mov
jo
mov
loope
adc
repnz
js
insl
mov
test
in
dec
cltd
test
lahf
add
orb
cmp
fldl
lret
cmpsb
leave
or
sub
in
gs
mov
xor
ds
arpl
loope
jg
les
in
xchg
adc
add
rcrl
xor
inc
jle
ret
push
lcall
cmp
xor
inc
shll
pop
arpl
fistl
add
pusha
mov
je
lcall
pushf
cltd
jle
sub
cmp
or
xchg
ljmp
jg
or
out
ljmp
push
clc
je
cwtl
sti
clc
lds
shrb
ss
mov
pop
jbe
or
cmp
cmp
lahf
enter
mov
mov
adc
adc
repnz
repnz
jb
leave
dec
and
dec
int3
and
sbb
xor
cmp
call
mov
pop
mov
std
sahf
cmp
mov
mov
adc
popa
nop
popa
jns
ljmp
stc
fnsave
sbb
pop
pop
xchg
pop
leave
push
shrb
jl
fiadds
lods
jle
jge
ret
mov
mov
dec
aas
sub
lds
sbb
xchg
inc
jecxz
addb
dec
mulb
loopne
pop
cmp
jg
add
fbld
xor
repz
fdivs
cld
inc
jae
jno
incl
dec
clc
dec
cltd
mov
outsb
add
ror
adc
xchg
mov
mov
fistpl
pop
jl
inc
imul
mov
inc
mov
inc
mov
jns
movsl
xor
cmp
shr
scas
cmp
shrl
mov
add
insl
adc
sbb
fmull
adc
add
ja
fwait
pop
and
mov
jl
or
imul
pop
jo
pop
lret
push
stos
xor
mov
pop
out
sar
and
jns
call
jne,pt
mov
pusha
mov
inc
jne
or
sar
pop
test
fadds
test
cmc
cmc
xorb
imul
sarl
push
test
inc
sub
stos
sbb
and
ret
sahf
mov
cltd
scas
ss
dec
sbb
dec
sub
mov
and
ja
jmp
xor
push
pushf
or
jb
inc
dec
cmp
jbe
fwait
xchg
add
sub
mov
fs
imul
aad
push
jb
pop
cli
push
cmp
imul
mov
sbb
out
flds
in
jmp
mov
jnp
xchg
roll
xor
cmp
imull
outsl
out
jle
xchg
in
pop
notl
sub
mov
mov
cmp
dec
pop
jno
pop
inc
test
arpl
xchg
loop
into
sub
pop
clc
pop
repz
mov
outsb
dec
movsl
push
mov
jle
in
adc
add
das
loope
into
test
cmp
sahf
or
call
pop
fnstsw
arpl
scas
int3
sub
inc
fisttpll
pop
imul
adc
mov
xchg
es
stos
pop
xor
add
stc
jle
dec
push
test
mov
xchg
das
lods
test
ret
push
rorb
mov
dec
ficoml
xor
sahf
rclb
pop
clc
mov
fs
aam
pop
aad
call
cmp
xchg
fisubl
push
ret
std
sub
gs
xchg
fdivl
insb
outsl
inc
inc
sub
pop
test
push
inc
xchg
fmul
lods
fucompp
lea
repnz
lock
mov
cmpsl
cli
int3
adc
xchg
push
xor
fdivr
lahf
dec
xchg
mov
popl
test
push
sub
lds
sub
adc
cltd
mov
mov
push
test
or
pop
dec
and
sub
inc
or
popf
mov
mov
in
sub
dec
subl
mov
js
sub
and
pusha
addr16
fildl
push
inc
dec
mov
and
inc
inc
mov
add
scas
pop
pop
xor
xchg
or
dec
notb
outsl
sub
and
mov
mov
cmpsl
cld
sti
jb
lods
xchg
idivl
sub
cmc
icebp
push
test
mov
add
mov
mov
cmovo
outsb
push
and
or
add
imul
loopne
out
dec
fwait
int3
or
adcb
enter
dec
out
popa
cmp
mov
mov
jge
add
xchg
stos
or
push
lret
jmp
push
stc
cmp
mov
arpl
sti
cs
push
testl
mov
push
filds
test
test
hlt
lods
xchg
jae
cli
arpl
negl
fsubl
mov
add
mov
pushf
adc
pop
mov
push
cmp
dec
mov
push
ss
scas
movsb
dec
dec
jae
cltd
add
xor
les
xchg
daa
dec
fdivr
xor
fmuls
jno
rcrb
lods
sub
cli
icebp
pop
pop
mov
xorb
xchg
pop
in
sbb
sub
add
mov
in
pop
addr16
cs
mov
sub
in
inc
add
xchg
dec
loop
js
add
jae,pn
les
adc
or
loopne
repz
ss
mov
aas
mov
cmp
mov
or
xor
sti
cmp
dec
pusha
or
mov
push
in
cmp
pop
mov
lea
idivl
xchg
leave
shll
mov
ret
and
not
stos
dec
test
adc
divl
movsl
lods
xor
lds
in
pop
push
cltd
pop
je
into
jl
call
cld
push
jo
cmp
cmpsb
test
mov
or
fwait
pop
push
pop
ja
adc
and
mov
dec
sbb
add
adc
mov
mov
dec
mov
and
js
int3
out
insb
dec
mov
jecxz
or
add
or
adc
push
xchg
push
xor
push
lds
icebp
test
cmpsb
adcb
mov
sub
sbb
sub
xchg
popf
cmpsl
out
mov
scas
lods
cmpb
push
shlb
add
mov
or
cmp
mov
shll
mov
lods
pop
sarb
outsb
inc
test
pop
popa
jge
dec
stos
jp
inc
call
jecxz
jo
popf
push
and
aam
mov
sub
test
jl
aaa
mov
mov
test
dec
jne
fcmovu
sahf
push
mov
jae
xchg
test
out
pop
pop
into
enter
mov
sub
pop
xchg
les
and
inc
sbb
xor
cmp
aaa
pop
dec
or
daa
jo
jg
adc
lret
stos
inc
lcall
std
pusha
push
and
xchg
out
int3
imull
pop
push
cltd
jbe
imul
xchg
imul
xchg
faddl
cmp
pop
ss
pusha
lock
orl
inc
fmull
xchg
cmp
cwtl
cmp
lahf
popf
stc
int
lret
dec
push
jmp
mov
das
pop
stc
std
add
stc
idivl
adc
iret
cmp
or
mov
sub
out
mov
popa
cmc
push
jmp
push
in
jo
push
push
rcr
bound
stc
jbe
fmuls
les
pop
or
enter
xchg
loope
and
push
scas
dec
ljmp
sti
push
sub
lods
sbb
mov
inc
jae
or
fdivl
out
into
adc
addr16
das
mov
xor
sub
lret
fxch
push
test
icebp
or
add
pop
cwtl
lds
and
in
ds
jl
mov
sbb
loop
jle
out
or
mov
inc
push
out
insl
dec
aam
push
sbbl
or
nop
shl
lods
jge
cmc
data16
pop
and
xchg
pop
in
ret
push
pop
push
mov
daa
sbb
push
push
scas
mov
jne
repz
cmp
push
stos
iret
push
int
mov
nop
add
xchg
ror
add
repnz
pusha
ret
imul
idivb
mov
jecxz
in
jbe
nop
mov
pop
adc
mov
cmp
add
mov
inc
cld
push
mov
add
xor
mov
nop
lret
mov
cld
pop
fiaddl
push
ja
jl
add
loop
inc
add
out
mov
ror
mov
call
cmp
push
jle
sbb
data16
or
enter
stos
test
add
mov
pop
inc
roll
jae
push
adc
lea
testb
inc
cmp
mov
push
das
xchg
sub
dec
sarb
jnp
mov
inc
mov
iret
ret
mov
enter
add
lahf
jno
jmp
shlb
imul
cs
sub
fsubrl
pop
xchg
setge
lahf
inc
mov
fstl
push
loopne
es
in
jmp
jne
cmpl
mov
pop
push
test
ret
inc
ret
dec
andl
sub
fiadds
data16
out
cwtl
adc
arpl
and
sub
je
iret
out
push
decb
or
ljmp
sub
mov
sti
lock
outsb
push
dec
mov
pop
lods
push
xor
loopne
adc
sahf
fwait
clc
jmp
cwtl
imul
xchg
out
jo
xor
repz
xor
sarl
jo
cmp
femms
and
mov
bswap
mov
dec
xor
xchg
jle
shl
cmp
adc
mov
les
fstps
lods
sbb
xchg
adc
aaa
add
push
xchg
lcall
push
jae
into
pop
xor
add
insb
add
push
xchg
pop
adc
lods
push
push
push
mov
sub
pop
sbb
stos
jne
bound
mov
xchg
aas
sbb
jae
gs
lds
pop
insl
jmp
xchg
out
out
imul
xor
mov
roll
push
push
jbe
cmpl
insl
push
jnp
lock
test
jle
stos
aas
sub
inc
fsubr
into
xchg
dec
roll
imul
leave
ret
fmul
lock
cmp
bound
dec
cmc
test
sahf
lock
sub
push
dec
add
insl
fsubl
es
jo
stc
push
adc
ret
sbb
add
ret
push
add
push
and
sahf
adc
adc
fwait
movsl
fcmovb
movsl
inc
icebp
out
into
pop
out
arpl
subb
stc
ret
push
xchg
testl
ret
cltd
xchg
or
enter
ja
mov
and
inc
popf
mov
add
xor
into
pop
push
loopne
cmp
cltd
pop
ret
xor
jmp
daa
orb
in
pop
add
int3
sbb
mov
xor
addl
lret
call
icebp
sub
dec
push
inc
ss
das
xor
lds
dec
mov
daa
xchg
cmp
in
pop
sub
fldl
or
imul
mov
iret
lds
imul
sbb
stc
subb
insb
lcall
in
or
bnd
inc
ljmp
lds
mov
push
inc
mov
pusha
sub
inc
xchg
and
gs
repnz
pop
popa
dec
mov
outsl
scas
pop
push
shlb
fdiv
sub
rcrb
mov
xchg
mov
sti
add
jae
rorb
jb
and
sbb
pop
rorl
mov
xor
xchg
stos
lahf
sahf
mov
mov
stos
sbb
scas
sbbb
lret
cs
and
cmpsb
ret
xchg
out
push
or
into
loop
adc
aas
and
pop
xor
icebp
dec
ret
cmp
mov
call
lds
or
hlt
xor
aaa
movsl
add
dec
dec
cld
mov
out
mov
push
sbb
mov
xchg
xchg
fcompl
std
cmp
loop
jl
jne
xor
fwait
sbb
mov
pop
add
sub
daa
jp
adc
andb
push
xchg
sub
iret
or
pop
outsl
jno
je
adc
test
jns
rolb
add
rclb
das
in
mov
inc
mov
popl
lcall
lods
cli
lret
mov
mov
fidivrl
fstps
leave
mov
pop
lea
cmp
hlt
sti
inc
xchg
dec
cld
pop
mov
ja
sbb
xchg
or
xor
test
mov
jae
or
xor
int
cmp
scas
aad
inc
jg
or
and
lods
lret
notb
je
add
sbb
mulb
mov
in
cmp
test
pop
or
sbb
fdivrs
mov
das
decl
jae
aad
xchg
stos
dec
cmpsb
xor
xchg
fs
cmp
loopne
loop
std
dec
mov
jns
arpl
jno
popf
cmp
dec
mov
clc
lock
mov
pop
insl
xor
mov
sbb
popf
in
sbb
and
fiaddl
mov
jl
mov
cltd
inc
aaa
jp
adc
popa
and
pusha
out
jo
leave
mov
icebp
pop
cmp
xor
sarb
inc
sbb
mov
pop
mov
rcrb
imul
cmpsl
sub
mov
xor
xchg
xchg
shlb
inc
jnp
mov
cwtl
push
or
mov
inc
cmpsl
fsts
inc
ret
push
jne
jae
inc
sti
pop
in
jmp
lods
inc
rcrl
push
pop
pop
sbb
sbb
dec
pop
or
popf
insl
push
ds
inc
pop
les
test
mov
add
xor
sbb
lahf
push
cltd
mov
cmp
fwait
sub
xor
int3
pop
xor
xor
daa
xchg
mov
fdivr
aas
adc
sahf
push
sti
cwtl
and
mov
jo
push
sub
cwtl
nop
or
sub
add
add
fsubr
pop
mov
ds
jbe
adc
loopne
enter
outsl
push
iret
and
bound
push
add
bound
int3
xor
dec
push
scas
xlat
loop
mov
lahf
lahf
xchg
xchg
inc
jge
fdivr
iret
or
mov
xor
enter
shrl
pop
pop
xchg
fdiv
cld
jl
mov
xchg
and
jle,pt
cmp
mov
in
rol
cmp
dec
or
mov
cmpl
lods
xor
fisttpl
stc
xor
sbb
inc
sub
add
fisttps
or
dec
rcll
jno
add
mov
xor
pop
fiaddl
icebp
mov
rorl
lea
cld
push
mov
orb
pop
inc
xchg
je
jmp
inc
pushf
jmp
ss
movl
inc
sbb
mov
repz
adc
jnp
mov
jae
cmpsl
and
lahf
jbe
pop
xchg
and
outsb
fstl
xchg
adc
cmp
mov
jo
sahf
add
stos
gs
fsub
insb
jg
sbb
dec
cmp
xchg
jecxz
call
cs
movsl
mov
and
inc
push
mov
push
aaa
sti
cwtl
mov
sub
inc
test
mov
incl
test
mov
push
mov
push
push
stos
or
test
mov
aam
test
jmp
xchg
out
enter
jnp
push
lods
cmp
mov
std
shll
jle
dec
add
test
mov
jmp
repnz
js
test
sbb
fimuls
cli
pop
js
mov
sbb
es
in
loop
lret
push
jbe
rcr
mov
imul
gs
movsl
and
test
pushw
mov
inc
test
push
outsl
mov
popf
and
push
shll
or
fimull
xor
add
pop
pop
test
fmull
jnp
rolb
lods
dec
scas
or
fildl
nop
adc
pop
ljmp
fildl
loopne
inc
push
dec
sbb
popl
dec
push
divl
stc
shlb
aaa
jbe
dec
pushf
ror
mov
fnstenv
cmpsb
inc
mov
clc
mov
cld
inc
aas
mov
jne
jg
xor
mov
push
push
popf
iret
inc
pop
daa
rcll
mov
cmp
ja
mov
inc
outsb
inc
pop
fmull
aad
inc
ja
xor
test
roll
fnstsw
cmp
je
lds
sub
jp
xchg
xchg
cli
xchg
enter
mov
pop
jae
nop
mov
enter
dec
and
in
loopne
out
pop
test
jmp
clc
popa
popl
rolb
call
sub
sarb
push
scas
out
push
xor
jnp
dec
rclb
or
add
mov
sbb
call
mov
jle
cli
xchg
pushf
jae
fdiv
xor
fidivrs
iret
inc
outsl
mov
jnp
sbb
cmpsb
or
pop
ds
mov
adc
mov
adc
adc
mov
in
push
mov
jb
mov
adc
push
xchg
inc
lods
or
nop
hlt
or
jge
cmp
cmp
pop
fstpt
lock
pop
imul
inc
add
dec
icebp
push
or
mov
imul
mov
sbb
loopne
movsl
xchg
ja
dec
xchg
adc
mov
xchg
mov
push
sbb
adc
out
push
sti
push
adc
inc
mov
mov
rcrl
fsubrs
mov
mov
dec
sub
mov
jne
mov
aad
test
repz
mov
push
daa
das
shrl
loope
pop
xchg
loope
popf
insl
in
mov
out
movsl
jb
ret
jne
mov
adc
call
push
sbb
or
mov
cmp
inc
les
mov
mov
arpl
xchg
xchg
dec
shlb
les
cld
cmp
fcoms
mov
cmp
imul
cmp
ret
push
sub
pop
cs
dec
lret
or
xor
push
push
test
call
sbb
test
dec
push
arpl
push
sub
shll
andb
sub
pusha
es
arpl
xor
cltd
and
mov
ljmp
sub
lods
cmc
dec
call
jecxz
dec
push
sbb
pop
int
jl
out
mov
pop
mov
insb
jl
stos
push
adc
xor
xor
and
enter
push
inc
movsb
jns
out
cmp
jg
jns
je
sbb
xchg
psubsw
jmp
or
lods
idivl
cwtl
push
mov
inc
filds
push
rol
jge
in
pop
loopne
xchg
inc
fwait
iret
mov
sbb
mov
mov
xor
push
cltd
call
mov
gs
jo
dec
fdivr
rclb
inc
push
jecxz
jns
roll
mov
cld
push
fcoms
lods
orl
sahf
hlt
test
sbb
rcrl
or
and
inc
fcmovu
mov
pop
test
stos
outsb
or
adc
call
cmpsb
stos
sub
mov
iret
adc
pop
mov
je
hlt
cmp
jle
ss
std
inc
lret
enter
aaa
jmp
jmp
outsl
xor
adc
push
repz
push
ret
popa
mov
scas
mov
mov
call
ds
xchg
pop
leave
or
ret
mov
rcr
lock
bound
pop
ret
jae
imul
ljmp
rorl
int
jmp
lods
add
add
out
xor
cmp
lea
adc
loope
mov
adc
scas
cmp
hlt
push
inc
fistl
lahf
ret
les
pop
jge
lret
mov
fs
inc
xchg
inc
bound
js
int3
push
pop
enter
mov
lock
cld
xchg
and
dec
ds
aas
insl
jp
std
dec
roll
adc
jg
inc
push
mov
popa
movb
adcl
icebp
inc
push
and
sti
add
fisubs
outsb
std
or
lea
sahf
pop
lods
iret
insl
push
pop
mov
pop
sarb
rcrl
jnp
sub
call
mov
imul
daa
ds
aam
js
dec
mov
insb
xchg
popa
jae
stos
repz
loop
fs
dec
fidivs
or
repz
negb
push
cmp
adc
adc
loopne
mov
jo
je
xor
jle
loop
adc
fstl
inc
push
pop
ret
pop
mov
shll
xlat
and
lds
xchg
sarl
jns
idivb
out
mov
mov
mov
dec
sub
cmp
js
rcrl
push
dec
mov
dec
xchg
stc
adc
sbb
xor
test
loopne
into
les
idivl
aam
fisubs
mov
inc
stc
cmp
sti
cli
dec
inc
xor
lods
jmp
sti
add
test
add
lcall
jmp
adc
shrb
adc
push
shrl
pop
idivb
mov
dec
and
cmpsb
dec
inc
inc
mov
lods
testb
jno
repnz
pop
mov
ficomps
or
mov
insb
fcompl
dec
mov
add
or
sahf
sub
cmp
das
mov
repz
repnz
mov
out
fisubs
xor
dec
ret
fnsave
loopne
cmp
jno
in
push
push
scas
mov
mov
dec
movsl
inc
pop
pushf
jae
popa
fimull
fs
lret
fistpl
and
cs
lret
iret
fists
js
pop
scas
dec
push
divb
xchg
repz
cltd
sbb
movsb
lock
out
mov
ds
or
int
negl
fs
adc
sbb
fcoml
cli
fwait
ljmp
fiadds
aaa
in
jns
into
inc
call
ss
movsb
mov
dec
fxch
test
sub
adc
or
push
sbb
sbb
fdivp
xchg
sbb
lcall
mov
inc
call
pop
into
mov
leave
lcall
out
je
std
adc
adc
sbb
aad
jno
push
mov
ja
outsb
adc
xchg
mov
pusha
pusha
inc
lds
ja
or
insl
push
xor
movsb
sti
loope
pop
xchg
push
sbb
xchg
nop
jl
xchg
popf
xchg
andl
jg
mov
fwait
imul
cs
mull
xchg
dec
cmp
cmp
mov
clc
jae
loop
or
and
cmc
addl
dec
dec
sti
and
lahf
add
or
xchg
pop
pop
out
sahf
cmp
je
and
mov
mov
movsl
lret
ret
sbbl
mov
pop
outsl
or
fistpll
dec
test
xchg
adc
mov
idiv
push
lds
jne
push
repz
lcall
jp
cltd
mov
movsb
rorl
fisubl
out
sub
ljmp
jg
push
loop
pop
repz
enter
dec
inc
into
mov
jg
lea
sbb
js
sub
pop
stos
outsl
mov
sbb
rcrb
fmull
sbb
mov
jl
dec
dec
xchg
sbb
and
cmc
or
loope
mov
sub
and
mov
add
inc
shrl
aas
arpl
xchg
cmpsb
pop
mov
or
fisttps
cmp
push
sarb
add
leave
lock
sub
xchg
mov
sub
xor
mov
adc
insl
add
mov
xor
sub
inc
sti
movsb
dec
adc
mov
jecxz
jo
movsl
mov
data16
ret
test
loopne
lcall
mov
popf
and
jno
pop
pop
jne
push
sarb
rcl
jbe
in
dec
jg
jns
jno
push
dec
inc
jle
cmc
dec
aam
xchg
sahf
xchg
test
push
in
sbb
adc
xchg
lahf
stc
xlat
jbe
rorl
rol
add
push
xchg
cs
jbe
jmp
movsb
jb
push
sbb
xor
push
sbb
popa
cld
xchg
and
imulb
les
rcrl
jle
xor
adc
cltd
loope
les
push
mov
movsl
pop
outsl
mov
adc
inc
adc
cli
pop
ret
arpl
inc
into
std
adc
pop
sbb
push
cmpsb
xchg
xor
pop
xchg
inc
dec
jns
lret
fisttpll
push
in
ret
enter
pop
mov
ss
fsubs
dec
loopne
add
les
lea
cmpsl
loop
popa
mov
call
test
fbld
cmp
inc
outsl
pop
leave
sub
out
leave
fwait
icebp
jge
adc
cltd
xchg
out
ljmp
out
dec
cmp
mov
xchg
aas
mov
jmp
xor
pop
mov
stos
xor
shlb
in
sbb
enter
pop
jbe
insb
jmp
imul
cld
fs
jecxz
in
xor
pop
jns
pop
or
cli
or
std
shll
sbb
insl
adc
lods
cmp
add
lahf
dec
adc
jne
mov
jbe
arpl
enter
xor
stc
inc
cmp
aaa
push
pop
cmp
and
cmp
cmp
dec
icebp
out
shlb
es
and
leave
or
inc
fisubl
sbb
inc
pop
jne
cld
mov
and
jo
jmp
int
xchg
add
fidivrs
repz
ds
fldl
fldl
xor
mov
mov
jp
jo
add
into
in
push
outsb
lahf
push
movsl
mov
inc
mov
adc
dec
jmp
dec
jge
mov
pop
sbb
add
mov
mov
testl
aaa
mov
mov
inc
jns
nop
scas
jle
std
mov
dec
sub
dec
pop
movsl
jno
sub
iret
je
cltd
push
mov
adc
lds
ja
pop
imul
and
adc
inc
repz
iret
push
dec
add
out
xchg
pop
mov
and
fbstp
mov
inc
or
dec
xor
xchg
sbb
shlb
cwtl
sbb
fwait
and
cld
inc
das
xchg
leave
test
imul
lret
xchg
loope
mov
repnz
mov
add
subb
jno
mov
sbb
inc
mov
mov
push
mov
or
inc
ljmp
push
mov
mov
vpperm
xor
cltd
pop
cwtl
adc
rorb
cmp
push
sub
xchg
xchg
ja
outsb
inc
mov
xor
imul
into
adc
sub
js
adc
in
in
cltd
pop
and
inc
sti
es
pop
nop
jmp
mov
push
push
sbb
mov
stos
xchg
popa
xchg
push
dec
push
cld
lea
pusha
xchg
jp
loope
add
fisubrl
sbb
inc
ljmp
arpl
fcmovnb
nop
pop
cli
lahf
xchg
int
adc
ret
and
pop
sahf
inc
jno
xor
push
lret
test
xchg
ljmp
enter
fstps
xchg
loop
or
and
ljmp
push
jbe
sub
outsb
fwait
popf
out
rclb
jp
inc
xor
xor
fmull
or
pop
sub
mov
mov
inc
inc
imulb
lods
mov
xor
xchg
inc
fistpl
dec
or
cmpsl
and
es
dec
pop
out
roll
lret
out
mov
lret
adc
push
leave
push
jmp
jmp
push
lock
jmp
ret
fisubrs
mov
subl
inc
xor
add
push
ja
ror
ret
shrb
mov
xor
punpcklbw
sti
stos
loopne
daa
xlat
ljmp
xor
sbbl
xchg
fcoml
int
sub
test
data16
or
adc
cmc
mov
or
mov
xchg
jne
fists
lock
mov
cmc
xchg
fildll
inc
mov
cmp
loopne
mov
sub
mov
negb
jge
adc
xchg
imul
hlt
imul
adc
jecxz
cwtl
aam
arpl
test
inc
loopne
stos
inc
mov
popf
xchg
pop
and
mov
jb
pop
or
test
je
sbb
add
pop
push
pop
add
jecxz
fldln2
push
jae
mov
adc
cmp
fcoml
jbe
icebp
pop
daa
aas
mov
lret
xchg
xchg
stos
clc
pop
dec
cltd
dec
jb
and
in
push
mov
and
into
mov
test
xchg
xor
jb
cld
std
jle
cltd
int
jno
xchg
stos
es
cwtl
sbb
mov
mov
inc
sbb
in
nop
xchg
pop
imul
mov
mov
shl
dec
pop
lahf
stos
jo
sarb
outsl
iret
stos
test
mov
lcall
adc
cmc
push
cs
mov
lcall
lahf
ret
jmp
add
jb
dec
fcoml
pop
push
dec
test
jecxz
sti
popf
dec
in
ja
jg
testb
or
jnp
scas
stos
lea
ficoml
imul
or
gs
orb
inc
xor
insl
imul
mov
fucomi
push
xor
aam
pushf
cmpsb
outsl
sbb
in
mov
ljmp
enter
andb
sarl
push
data16
cmp
neg
jl
mov
pop
adc
jno
xchg
mov
aaa
orb
or
int3
mov
xchg
and
call
sub
insl
aaa
insb
push
pop
push
push
aad
sub
sbb
cmp
andb
scas
and
dec
repnz
loop
scas
outsb
push
enter
in
pop
mov
fimuls
pushf
mov
add
push
sti
lods
and
pop
scas
or
and
jmp
push
dec
stos
inc
fwait
mov
ss
adc
lret
sti
cltd
jne
icebp
and
lahf
pusha
xor
mov
jo
in
cmpsb
test
fsts
stos
daa
sbb
and
push
in
mov
dec
fyl2xp1
and
mov
cmp
dec
enter
aad
cmp
adc
sbb
int3
pop
jne
out
fmull
cmp
test
shrl
in
push
push
dec
stos
push
cmp
jmp
and
adc
xchg
push
int
cmpb
int
push
push
jp
insb
repz
sbbl
xor
sbb
add
stos
out
fbstp
leave
xor
mov
cld
mov
xor
xchg
sub
scas
clc
movsb
mov
inc
inc
stos
push
sbb
clc
cltd
cmovle
jbe
into
cltd
adc
add
shll
shll
loopne
mov
push
dec
xchg
adc
mov
stc
dec
push
adc
adc
jbe
cmp
cs
mov
aaa
icebp
lea
mov
aaa
push
jmp
ret
xchg
jecxz
out
jae
mov
cmp
inc
xchg
cmp
out
xchg
fstpt
or
addr16
lea
aas
insl
lods
loopne
adc
cli
imul
dec
clc
pop
dec
in
scas
and
cmp
xor
sahf
and
gs
and
mov
xchg
shll
push
in
xlat
add
out
dec
test
sbb
jnp
in
out
ss
lret
pushf
xor
and
adc
mov
mov
mov
cmc
scas
dec
lcall
lret
cmp
outsb
jae
rcr
xor
cmpsl
adc
mov
xor
and
cmpsl
mov
xchg
jmp
incb
push
xchg
and
push
jnp
or
scas
pop
popf
cltd
loopne
insl
inc
lds
ret
jo
rcrl
cwtl
dec
mov
ds
push
aam
dec
adc
loope
lds
pusha
aam
xchg
enter
outsb
sub
dec
cmp
ret
enter
pop
lock
in
mov
add
push
bound
xor
mov
xchg
mov
and
xchg
imul
nop
and
mov
pop
push
or
jb
cmp
lods
adcl
cmp
iret
mov
pop
std
clc
out
loop
mov
testb
add
xchg
dec
mov
xor
xor
xchg
hlt
inc
lea
daa
pop
jne
mov
adc
dec
pop
or
bound
xor
xlat
xor
xor
push
mov
mov
loopne
cld
xchg
cmpsl
repz
xchg
nop
in
mov
add
test
scas
mov
lret
movsb
aaa
mov
lock
stos
cmp
cs
rcll
es
pop
gs
in
stos
pop
cmpsl
or
or
cmc
aam
shlb
xor
and
jp
rcrl
lds
mov
mov
pop
dec
aad
cmp
cmp
insl
xor
iret
ffreep
dec
pop
sbbl
inc
jge
loope
movsb
lret
mov
add
mov
mov
arpl
outsb
dec
xchg
imul
popa
arpl
cltd
sbb
jno
xchg
mov
dec
push
mov
aad
cmpsl
jge
jns
hlt
push
or
sub
jb
fbld
into
mov
push
xlat
btr
stc
pop
mov
popa
roll
lods
clc
ficoml
int
xchg
jbe
dec
dec
into
into
aaa
adc
inc
cld
push
rcrl
jecxz
jno
rclb
inc
mov
rolb
mov
sub
push
jnp
shll
jbe
call
gs
jns
les
pop
jae
int3
loop
popf
mov
andb
inc
mov
sti
arpl
cmc
insl
cmpb
inc
mov
adcb
shll
das
fs
pop
popf
into
adc
sti
popf
lret
add
test
lock
fimuls
fcmovb
in
loopne
decb
or
enter
jno
nop
aas
push
adc
insb
aas
push
pushf
inc
invd
aad
push
push
and
ds
add
sub
adc
lods
outsl
pop
xchg
scas
iret
push
inc
imul
insl
and
sub
sbb
push
pop
cmp
mov
movsb
pop
or
out
mov
inc
fisttpll
and
push
cwtl
xchg
icebp
out
mov
in
jmp
test
orl
out
sar
jb
pop
jnp
xchg
or
filds
lock
out
add
cli
mov
pop
lret
ds
or
sub
lcall
int3
xchg
in
and
fcmovbe
add
icebp
test
inc
in
pusha
arpl
push
test
es
pop
stos
mov
jg
and
outsl
xchg
std
lret
shll
aam
inc
mov
outsb
push
mov
jbe
es
jb
scas
and
sahf
cmc
mov
divl
in
das
cmpl
jecxz
insl
xchg
mov
mov
sbb
imul
cmp
je
push
sub
outsb
dec
pop
pop
inc
cld
pop
addr16
shrl
data16
pop
into
mov
lds
leave
mov
jg
xor
sti
add
ljmp
cmovbe
push
frstor
sbb
sub
clc
das
cmpb
push
mov
xchg
popa
clc
adc
js
in
sbb
push
inc
cmpsl
dec
call
mov
les
push
inc
es
mov
rorl
ljmp
jbe
xor
insb
adc
add
sar
popf
and
mov
mov
inc
popf
cmp
xor
pushl
pushfw
jl
xchg
cmp
lods
pop
xor
daa
jp
sub
mov
out
or
divl
adc
ss
push
insb
cmpsb
stc
ror
adc
pusha
daa
fnstcw
or
test
mov
imulb
dec
sbbb
imul
mov
out
movsl
add
mov
psrad
mov
rcll
mov
push
sbb
arpl
mov
or
mov
es
out
dec
out
call
cli
out
stc
test
mov
xchg
leave
pop
icebp
cmp
mov
adc
lods
cmp
mov
sub
lds
je
cmp
sub
jle
pop
dec
nop
enter
mov
es
sti
inc
and
dec
sbb
push
pop
daa
out
or
inc
pop
daa
sbb
notl
aas
test
out
fwait
add
dec
jg
dec
inc
aam
iret
js
loopne
clc
xlat
gs
push
gs
ret
xor
inc
loope
inc
and
dec
sub
cli
inc
sbb
ret
jbe
mov
mov
push
fmuls
mov
mov
push
fldl
ja
sub
out
imul
and
xchg
jmp
sbb
inc
rol
popf
adc
and
cli
lahf
push
lret
adc
cmpb
xchg
xor
cmpsl
pop
bound
pushf
push
cmpsl
or
sti
gs
insl
fwait
dec
int3
int
pop
das
sbb
mov
repnz
enter
jl
inc
xorl
xchg
sbb
jp
add
push
aaa
lea
adc
lcall
cmpb
adc
jle
inc
loopne
xchg
lahf
mov
push
adc
cmp
xchg
mov
in
loope
fnstsw
mov
mov
sbb
stc
dec
scas
lahf
jb
dec
mov
adc
fs
fldcw
and
negl
mov
in
mov
mov
cmp
inc
stos
sub
mov
mov
loop
lahf
clc
pop
mov
fadds
and
lods
jge
or
cltd
movsl
popa
add
add
ret
jnp
or
push
fsubrs
add
mov
pop
je
xlat
xor
and
rorb
sub
jp
imul
push
or
sbb
fwait
xorb
push
mov
mov
mov
and
jnp
jle
jg
xchg
cmp
push
in
lds
push
pop
inc
mov
jecxz
insb
lahf
inc
stos
mov
sbb
push
cld
out
fs
mov
adc
or
subl
outsl
loope
shlb
popf
inc
inc
jmp
outsl
xor
stc
in
inc
loopne
cmpsl
lcall
loop
mov
das
subb
lret
lds
popf
fsts
and
in
in
inc
lahf
cmp
ss
test
std
push
xor
insb
int
add
call
sti
in
iret
outsl
sarb
stc
and
ljmp
sbb
rcrb
sahf
pop
push
je
xchg
sbb
xlat
clc
lret
dec
cmp
inc
cwtl
sbb
or
outsl
cltd
fadds
or
mov
mov
inc
fs
push
mov
outsl
dec
stos
pop
mov
push
pop
adcb
popa
lods
jns
sub
roll
sbb
mov
mov
sarl
lods
sbb
sbb
sub
lods
mov
mov
enter
cmpsb
sbb
clc
scas
xchg
jne
adc
push
jge
mov
aaa
cltd
into
jns
fstl
imul
push
xor
mov
push
fcompl
iret
lock
pop
into
mov
mov
jbe
push
mov
push
push
cmp
mov
mov
pop
movsl
popa
lods
mov
mov
popf
das
push
xchg
adc
shr
mov
push
cmp
add
sub
or
loop
jae
test
cmc
xchg
nop
inc
inc
and
cld
pop
ja
arpl
out
mov
out
pop
sub
push
push
out
inc
adc
dec
adc
call
movl
imul
fimull
dec
ja
lds
cmp
add
jns
shlb
sar
pop
repz
loop
es
mov
sub
pusha
lret
mov
inc
add
lahf
pop
or
sbb
shl
push
popa
fildll
fldenv
ror
add
jns
divl
insl
imul
xorl
stos
out
mov
les
cmpsl
mov
scas
xchg
outsl
dec
mov
arpl
stc
enter
mov
test
cs
fwait
inc
fs
test
jns
jle
lea
lds
or
sub
outsb
adc
lahf
call
fcoms
fwait
or
jns
les
imul
cltd
xor
mov
sbb
adc
call
mov
or
sahf
aaa
jl
rolb
mov
stc
loope
jnp
and
insl
sbb
mov
jecxz
cmpsb
shll
lcall
pop
mov
test
and
in
jmp
adc
cli
cltd
cld
add
bound
jle
mov
outsl
lods
pop
push
mov
mov
add
cmpsb
mov
out
mov
scas
sbb
xor
mov
inc
sbb
loopne
mov
xor
into
add
int3
out
pushw
pop
or
jecxz
inc
push
inc
fcoms
add
mov
xorb
outsb
subb
pop
jl
inc
lahf
push
loop
in
inc
loop
lcall
andb
addl
adc
lret
sbb
data16
cld
out
out
aaa
push
ficoms
adc
cmpsb
mov
stos
into
jo
lret
movl
mov
cmp
push
lods
shlb
pop
cmp
and
adc
aaa
lds
xor
cwtl
jle
inc
shlb
sbb
or
cmpsl
xor
adc
hlt
mov
outsl
push
hlt
jmp
mov
jg
add
xorl
sub
mov
xchg
int3
xchg
mov
cli
insb
push
addb
and
push
imul
ss
jecxz
inc
aaa
frstor
mov
data16
ss
mov
inc
push
outsb
push
lcall
xor
xchg
mov
jmp
andb
fs
mov
leave
in
icebp
mov
or
subb
push
push
jns
cwtl
inc
pop
mov
jp
in
pusha
xchg
addb
das
adcl
push
jg
dec
test
xchg
mov
cmp
lret
adc
hlt
int3
ljmp
dec
dec
or
or
cmpsb
add
hlt
or
jae
sub
popa
xchg
cmp
jl
mov
sub
aaa
cmpsb
dec
icebp
jg
fstl
xchg
bound
ret
addl
push
jmp
sub
xor
push
pop
xchg
mov
xchg
dec
and
ss
jg
mov
mov
fcoml
out
mov
insl
arpl
sbb
pop
sti
lds
pop
pop
xchg
out
push
mov
rcll
popa
daa
int3
les
mov
and
test
loopne
ljmp
lods
inc
mov
fwait
jmp
xchg
imul
or
add
inc
jae
mov
jg
es
stc
scas
scas
sbb
xor
das
lcall
adc
lahf
clc
xchg
pop
lret
inc
cmpsl
push
pavgb
popf
dec
or
iret
jg
out
in
cmpsl
xor
sarb
in
xchg
lods
add
test
mov
cmp
lds
mov
aas
loopne
out
les
or
sarl
aam
ret
lret
addr16
sbb
movsl
pusha
aaa
pop
cmp
jge
push
or
xchg
sbb
push
in
js
fwait
jge
js
jae
ror
jp
jne
mov
sbb
cltd
fs
fwait
js
pop
or
pop
sbb
in
insb
xchg
add
inc
in
xor
inc
adc
jbe
mov
pop
push
and
and
push
push
iret
pop
mov
fsubp
loop
outsl
cmpsb
gs
mov
mov
or
subb
dec
dec
in
push
es
xlat
test
jno
test
mov
jmp
adc
inc
subl
push
mov
sbb
into
mov
js
loop
daa
ja
hlt
loop
mov
jnp
mov
out
das
shlb
cmpsb
data16
out
popf
cmpsl
mov
arpl
jbe
fsubrl
addr16
push
sti
and
mov
shll
adc
mov
pop
scas
jno
mov
test
cld
pop
add
cmp
push
pusha
jb
subb
hlt
mov
dec
mov
sahf
inc
adc
push
add
add
lea
dec
test
cmp
sbb
mov
scas
or
inc
js
jns
test
fs
sbb
divb
shlb
aad
jnp
mov
shlb
and
xchg
int
sub
jp
xor
scas
das
or
test
mov
ljmp
daa
and
shr
jge
push
xlat
add
adc
cmc
int
aaa
push
dec
or
nop
xchg
pushf
mov
negb
outsl
loopne
mov
jbe
dec
and
dec
lods
inc
mov
ja
mov
dec
int3
inc
jno
pop
mov
cmp
in
or
or
fstpt
fistl
cmpsl
std
sbbb
andl
cmp
mov
push
mov
jp
addr16
lods
adc
or
inc
inc
add
mov
cmp
lds
cld
xor
in
popf
cld
ret
mov
or
push
aad
pop
loope
pushf
jae
and
ljmp
mov
mov
push
lahf
push
lock
cmpsl
fwait
leave
jo
cld
loope
aad
lahf
data16
les
push
add
fcoml
arpl
arpl
negb
loope
call
popf
inc
clc
mov
add
add
fsts
and
aas
movsb
add
adc
push
xchg
in
add
test
jg
daa
mov
into
inc
cmp
ja
cmpsl
lret
decl
aas
aas
sbb
test
idivl
data16
pop
test
aam
pop
mov
shll
cmp
adc
fildl
mov
lods
pop
imull
adc
mov
sub
cmpsb
adc
addr16
lcall
icebp
xor
sub
jle
repz
jns
pop
sbb
into
das
mov
pop
into
movsl
ss
ds
lahf
sub
js
orl
rcll
mov
lcall
xor
sbb
mov
pop
pop
sub
jl
or
mov
sbb
jle
push
jmp
jp
flds
add
inc
cmp
add
mov
cmp
faddl
out
and
movsb
xchg
fisttps
add
lods
mov
add
loope
sub
push
or
imulb
fcoms
loopne
and
xchg
insb
or
cmp
mov
or
cmpsl
mov
mov
sbb
int3
inc
or
add
jne
aam
andb
jns
popf
das
fldt
xchg
pop
fdivp
sub
xchg
cwtl
mov
sub
dec
test
jo
icebp
pop
push
test
and
lahf
dec
or
add
into
jae
in
shl
aas
ss
rolb
dec
cmc
mov
xor
cmp
xor
call
or
or
jecxz
lret
jno
data16
mov
sbb
fnstcw
shlb
dec
pop
jmp
mov
sub
adc
repz
jle
std
cmp
dec
aam
stos
push
add
pop
les
insl
fwait
sbb
adc
imul
pop
lret
inc
and
sti
clc
ret
inc
data16
pop
out
pop
xchg
xchg
cltd
pop
hlt
imul
imul
and
xor
add
push
imul
cli
xchg
mov
or
sti
pop
aad
xchg
out
ds
jo
push
xor
adc
or
push
pusha
stc
jg
mov
adc
mov
dec
xlat
xlat
movsl
mov
hlt
shll
rcl
sub
popf
xchg
xorb
fmull
or
or
outsb
xchg
adcl
or
jns
push
jno
clc
lret
dec
inc
jno
mov
inc
and
add
xchg
std
in
xor
movsb
sub
jmp
cmp
push
jl
movsb
ficoml
xor
dec
inc
lret
lret
imulb
sbb
xor
dec
xchg
jmp
jb
dec
or
das
xchg
aam
lret
cmp
or
aad
lret
xchg
adcl
mov
sar
or
les
mov
dec
test
pop
ds
dec
xor
sub
dec
lock
jo
imul
rcll
enter
dec
js
sbb
fildll
xor
push
mov
mov
pop
push
movsl
mov
mov
lahf
cmpsl
cwtl
cltd
push
mov
fildl
fstps
lcallw
test
shll
ss
cmc
inc
fstpl
jnp
aas
or
jle
cltd
es
push
call
cmp
cmovo
aam
xor
int
test
pusha
and
addr16
fnsave
iret
jge
adc
cmp
dec
pop
jmp
test
sbb
in
ss
ljmp
mov
movsb
loopne
ss
ret
and
cwtl
sbb
jbe
repz
or
lret
jb
add
loop
pushf
fnstcw
jp
sbb
sub
dec
push
lds
sbb
pop
pop
pop
mov
xchg
shll
leave
into
scas
aad
test
push
and
xchg
arpl
or
jle
leave
into
cwtl
lcall
and
adc
loop
sar
inc
data16
push
or
cltd
sub
pop
nop
push
dec
lcall
les
pop
nop
dec
lea
ds
in
pop
in
sbbl
jbe
inc
repnz
mov
pusha
dec
push
add
adc
mov
adc
sbb
jg
mov
mov
sbbl
in
hlt
pop
data16
jno
or
dec
or
inc
and
push
xor
les
cmp
hlt
test
in
and
iret
dec
push
sub
or
lahf
ljmp
roll
scas
xor
imul
mov
mov
fs
cmp
jae
mov
movsl
xchg
inc
fists
xchg
loop
xor
jno
hlt
loope
mov
imul
icebp
push
pushf
add
pop
add
sub
fucomip
fstpl
lods
popf
xchg
insl
test
leave
je
jl
out
in
aas
int3
outsl
add
in
pop
push
test
das
fldt
xchg
clc
fwait
shl
mov
pushl
jp
test
dec
repz
ffreep
mov
push
sbb
mov
pop
dec
xor
gs
fdivr
cmp
repz
pop
insl
je
stos
adc
pop
cmp
arpl
hlt
mov
jae
mov
mov
mov
ja
inc
cmp
incb
push
je
addr16
push
mov
push
xchg
sbb
test
data16
jae
add
repz
push
pop
stos
sbb
cmpsl
fsubrs
sbb
lret
mov
loopne
mov
pop
mov
jecxz
int
push
hlt
lods
stos
xor
cltd
pop
stos
outsb
add
pop
cmp
sub
jmp
imul
test
in
out
mov
in
imul
adc
data16
call
dec
in
test
out
sti
fbld
scas
or
cld
fisubrl
mov
xchg
mov
fsubrs
repnz
sti
jmp
sbb
push
jns
andb
outsb
fimuls
push
jl
int
mov
shrb
outsl
ror
push
out
push
in
daa
call
adc
and
clc
inc
cmpsb
jbe
outsb
xchg
mov
movsb
mov
add
clc
sbb
pusha
sub
int3
imul
lret
cmp
mov
loop
daa
dec
mov
mov
pusha
jno
mov
inc
fimull
mov
jo
ds
inc
fisttpll
dec
mov
fwait
hlt
xchg
cmpb
lahf
jge
ret
mov
push
fdivr
into
or
clc
jbe
js
pop
and
mov
push
mov
mov
adc
and
ret
in
sbb
pop
or
xor
push
mov
adc
sbb
ss
cmc
dec
mov
mov
mov
imul
movups
jno
imul
push
rcrl
popf
mov
daa
aam
adc
dec
imull
fadds
xchg
cmpsl
sbb
sbb
je
and
aam
xorl
repnz
lock
jge
insl
jne,pn
push
insl
jae
in
or
test
test
xor
mov
pop
dec
add
cmc
andb
cwtl
push
mov
inc
daa
sbb
pop
loop
push
out
xchg
daa
jo
push
mov
push
mull
stos
and
fnsave
jmp
clc
pop
loope
push
lahf
jp
test
mov
add
mov
shlb
xchg
jmp
mov
mov
xor
pop
imul
push
push
loopne
icebp
call
jmp
mov
sbb
sbb
arpl
imull
dec
add
lock
rolb
int
scas
shr
pop
xchg
inc
cs
imulb
int3
movlps
mov
pop
cmpsl
jge
mov
inc
pop
movsb
cli
std
adc
repz
mov
mov
sub
sti
imul
mov
clc
cmp
xor
inc
adc
mov
dec
inc
fimuls
mov
adc
iret
insb
movsl
push
sub
rcr
pop
insb
mov
pop
fdivs
fimull
gs
das
pop
and
cli
push
jp
jecxz
adc
xchg
pop
xor
push
pop
pop
push
dec
xchg
aad
cwtl
inc
push
loop
mov
out
mov
fdivrp
mov
or
ss
jae
lcall
mov
imul
sbb
or
xor
cmp
iret
jg
inc
mov
sbb
cltd
push
mov
push
jg
mov
ljmp
out
outsl
les
lock
stc
ficoml
inc
rcl
iret
inc
mov
incb
into
push
sub
mov
arpl
push
lahf
hlt
ret
or
mov
mov
mov
insl
outsb
lock
loopne
xlat
or
push
mov
addr16
jne
arpl
pcmpeqd
das
cltd
lret
adc
xor
jecxz
push
test
adc
outsl
xchg
pop
testb
sub
mov
mov
or
mov
xchg
push
cmp
stc
loopne
daa
sub
or
jnp
sbb
cmp
or
es
fdivs
rclb
outsl
data16
mov
andl
decl
xchg
jo
jl
out
push
imul
push
loop
cmpsb
cmpsb
push
or
push
fwait
outsl
dec
jb
mov
push
shll
icebp
test
sbb
call
push
inc
xchg
cs
loopne
xchg
fisttps
push
stos
lock
movsl
int3
pop
leave
clc
rcr
cli
pop
jp
inc
repnz
push
out
mov
cmc
mov
in
clc
mov
adcl
fnstcw
jo
add
or
inc
xor
int
js
or
push
add
pop
xchg
inc
cmp
dec
cmp
repnz
fcmove
cs
and
xchg
xchg
mov
add
sub
test
shrb
test
ret
loopne
add
fs
mulb
stc
pop
xor
mov
ljmp
clc
mov
pop
cli
push
push
lea
outsb
arpl
lods
jmp
dec
movsb
jp
adc
push
jp
jp
xchg
adc
or
inc
incb
mov
xlat
add
popa
mov
xlat
mov
mov
into
hlt
into
inc
in
and
mov
add
sub
negb
sub
inc
pop
dec
and
out
sub
sbbb
cmp
jecxz
add
mov
or
cmp
ror
loop
das
bound
push
cmp
sub
jp
fcompl
je
test
and
fsubr
loope
lcall
inc
addb
xor
adc
jnp
xchg
lds
or
pusha
imul
xor
pop
insb
test
jg
movsl
stos
push
pop
pop
lds
imul
out
mov
push
xchg
clc
jmp
mov
push
mov
stos
mov
mov
jne
inc
xchg
nopl
femms
pusha
aas
stc
sbb
xor
add
aaa
lods
adc
xor
xor
das
mov
push
adc
lcall
arpl
scas
mov
cmpsl
push
dec
rolb
pusha
fsubrl
call
in
jae
fldl
int
sahf
arpl
mov
push
lea
hlt
pop
xlat
sti
add
inc
gs
mov
sbb
mov
sub
add
pop
dec
cmc
stc
xorl
cvtpi2ps
icebp
enter
jg
jns
std
cmpl
scas
loop
popa
test
mov
into
jno
leave
mov
dec
xchg
sahf
inc
cmp
xor
call
jne
loop
jge
sahf
loop
cmp
mov
fsubr
xor
and
jmp
and
sub
imul
les
pushf
dec
out
dec
cmovnp
sub
inc
divl
add
pcmpeqd
dec
je
cmp
inc
popa
cmp
inc
sub
fildl
xor
cmc
dec
jmp
inc
push
mov
inc
fidivs
arpl
dec
add
repz
and
cmpsl
mov
in
dec
and
imul
loopne
push
fstl
aas
pop
lret
inc
push
shll
paddusw
adc
fcompp
cld
test
mov
or
jno
aam
or
subb
daa
xor
orb
les
cmp
xor
adc
push
inc
xor
jbe
pop
lret
ljmp
xchg
push
popf
dec
mov
push
mov
jp,pt
mov
scas
mov
dec
pushf
mov
add
jno
lds
testb
mov
stos
adc
int3
xchg
push
imul
cmp
aam
incl
adc
cs
fisubrl
mov
pop
adc
jmp
inc
arpl
xchg
and
xorl
mov
divl
imul
in
push
and
pusha
ret
jbe
daa
scas
cld
cs
xchg
ret
cs
dec
and
aad
hlt
cwtl
leave
sbb
adc
mov
jge
cmpxchg
sbb
lahf
inc
push
mov
divb
testb
sarl
rcr
xor
nop
jnp
fiadds
jecxz
xchg
clc
fcom
sub
cmp
jmp
push
push
mov
push
mov
jmp
pop
call
rorb
faddl
fdivl
hlt
cli
leave
inc
sbb
mov
mov
ret
mov
aas
mov
pop
or
mov
les
pop
sbb
lret
iret
xchg
in
ds
sub
dec
arpl
shrb
sub
and
sti
stc
stc
dec
in
add
sti
popa
popf
ljmp
push
dec
out
imul
add
loopne
jne
mov
push
sti
xor
jge
jmp
sub
jo
push
cmp
or
cmp
shrb
std
pop
les
hlt
cmp
sbb
mov
push
cmp
enter
into
lret
mov
jb
inc
popa
cmp
arpl
pop
inc
addl
push
jne
loopne
mov
aas
es
jl
pop
push
xlat
jo
jno
in
scas
xlat
mov
add
mov
mov
cmp
push
jne
sbb
into
inc
outsl
enter
sub
sbb
mov
cmp
mov
xchg
jns
xchg
jae
fisubrs
sti
ja
mov
pop
imul
divl
push
js
add
or
out
mov
add
cs
mov
mov
inc
inc
xchg
mov
daa
pop
or
and
test
cwtl
mov
pop
mov
or
push
outsl
ret
test
add
test
jmp
pop
mov
es
xchg
repz
test
mov
decl
sahf
push
loope
sbb
mov
in
inc
in
call
sub
lock
push
ret
in
xor
inc
mov
and
dec
pop
cmpsl
insb
adc
sarb
fcomps
jnp
add
insb
dec
inc
dec
sbb
cmp
fwait
fs
jle
mov
adc
les
sub
sahf
into
jns
lret
dec
mov
shll
ss
inc
mov
lods
jge
dec
push
gs
dec
lods
pop
mov
adc
push
push
ds
lret
jmp
repnz
addr16
jae
jl
jp
jmp
sbb
js
sub
push
arpl
cmp
sbb
jns
push
sub
dec
pop
pop
sbb
mov
lea
movsb
pop
sub
mov
je
pop
hlt
icebp
in
fs
inc
fcomp
stc
cmpsl
or
dec
dec
js
mov
aaa
jl
mov
mov
fsubr
dec
mov
ja
inc
adc
add
scas
jno
push
outsl
cltd
aam
test
arpl
gs
pop
mov
dec
subl
out
outsb
xchg
ljmp
popa
pop
movsl
pop
cli
test
popf
dec
inc
push
enter
and
enter
pusha
andl
inc
mov
je
ss
adc
lcall
ret
mov
mov
push
pop
push
loopne
jg
push
sbb
loope
push
jmpw
arpl
fsub
xor
push
ds
pop
ret
arpl
push
push
call
aaa
aaa
add
mov
test
and
int3
adc
fs
data16
adc
inc
sbb
cmpsb
aas
outsb
cmp
mov
mov
or
cmc
loope
pop
ret
sahf
adc
cmp
outsb
adc
test
mov
adc
in
xlat
sub
decl
popa
icebp
sbbl
fstpt
not
mov
and
cmc
fdivr
imul
mov
gs
mov
outsb
jne
dec
out
sub
repnz
mov
sub
xchg
and
mov
lret
push
divb
or
adc
mov
dec
shl
popa
in
add
mov
imul
add
ror
rolb
fnstcw
repz
cmp
xchg
fstpt
jb
add
xchg
mov
loope
inc
pop
lods
adc
or
movsl
mov
cmp
fists
out
fisttps
and
out
xchg
repz
dec
jecxz
xchg
test
adc
push
xor
xor
aaa
add
inc
mov
xchg
cmp
cmp
push
xchg
cmp
unpcklps
pop
add
sub
or
jno
dec
sub
lea
push
cmp
shll
pop
loop
or
jge
popa
mov
mov
mov
xlat
fcomi
and
and
and
mov
aad
sub
pop
addr16
fnsave
arpl
aad
add
pop
jns
xchg
mov
adc
mov
outsb
push
outsl
les
in
push
mov
scas
adc
testb
dec
add
push
fiaddl
mov
rcll
lods
mov
xor
and
ja
push
inc
lcall
insl
call
pop
inc
iret
call
cli
lock
adc
ds
add
into
ljmp
pop
daa
mov
dec
stc
mov
mov
aam
inc
clc
cli
adcb
cltd
sbb
xchg
out
mov
lcall
push
jnp
mov
js
inc
cwtl
sub
insl
andb
and
cltd
insl
iret
adc
mov
nop
in
pop
and
jnp
or
loopne
out
daa
dec
imul
add
xchg
test
fcmovnu
adc
cwtl
int
in
insb
fisttpl
sub
push
mov
sub
test
mov
xchg
pusha
jle
xlat
ja
mov
mov
pop
cmpl
adcb
scas
or
cwtl
hlt
jb
loopne
cltd
pusha
adc
rolb
fcoms
and
insl
lahf
roll
in
nop
int3
adc
into
mov
mov
fwait
leave
paddq
mov
dec
fucomp
dec
fs
pop
fnstsw
xor
and
push
cmpsl
or
mov
lea
pop
cmp
inc
sahf
or
imulb
add
push
mov
rorb
pop
mov
jnp
push
and
fs
dec
dec
aaa
push
cli
nop
push
aaa
cli
hlt
push
icebp
mov
jmp
mov
fsubrl
xor
sbb
sarb
or
or
cld
adc
jbe
cli
mov
fistpl
cltd
jns
outsb
mov
or
pop
repnz
outsl
mov
enter
cs
and
pushf
mov
sub
out
les
fdiv
add
cmp
adc
push
lret
rolb
cmp
cmp
nop
adc
loop
xchg
push
pop
shlb
mov
bound
or
push
js
lock
mov
mov
in
lods
and
adc
testb
xchg
add
xor
xchg
push
inc
fidivl
mov
mov
jno
mov
add
shlb
cltd
push
cwtl
mov
cli
mov
les
daa
jge
xchg
cmp
and
mov
xlat
mov
int
dec
push
add
dec
mov
pop
cmc
and
mov
sbb
jecxz
fidivrs
jg
aam
imul
test
jbe
jb
pop
aas
and
fnstenv
mov
xor
sub
jbe
and
icebp
dec
dec
fmulp
mov
or
sub
push
fcmovne
andb
mov
fnop
xlat
cmp
mov
and
repz
sub
insb
cmp
and
test
cmp
push
pop
mov
aam
inc
ds
mov
push
aaa
mul
mov
sub
addr16
inc
xor
push
pop
pop
add
cmp
jo
push
mov
testl
jl
cmpsb
sub
aad
in
fnstsw
xor
sahf
jmp
mov
cwtl
jmp
aad
sbb
cltd
inc
out
std
mov
call
push
add
xor
mov
adc
je
and
dec
rorl
push
pop
imul
int3
imul
stos
ss
jecxz,pt
mov
xlat
out
jmp
aas
xchg
fidivrl
mov
mov
xorb
pop
xor
mov
add
addr16
inc
lcall
pop
mov
popl
push
jge
or
sbb
cmp
in
cmp
push
jns
sahf
scas
pop
data16
or
pusha
out
xchg
mov
or
and
addr16
adc
pop
and
sbb
xor
mov
xor
mov
jbe
xchg
call
mov
cltd
test
outsb
mov
lock
leave
les
inc
sti
lds
mov
stos
aad
xor
or
in
cmp
mov
shl
int
pushf
fwait
inc
cld
das
ljmp
sahf
mov
adc
ja
mov
fadds
fiaddl
or
dec
lea
cltd
mov
les
mov
push
ss
mov
rolb
mov
jns
jae
or
les
sbb
adc
rcl
stc
out
cmp
aam
inc
pop
leave
mov
mov
push
mov
mov
aaa
ror
mov
dec
mov
repz
test
fildl
or
push
frstor
cmp
adc
mov
into
enter
pop
roll
into
xchg
mov
xor
jmp
adc
jg
fldcw
mov
loopne
adc
dec
lods
mov
out
inc
lret
push
adc
dec
les
addr16
fld
out
lret
mov
es
fwait
nop
fildl
subb
shrl
rcll
sub
adc
jge
jle
inc
sub
xchg
xor
pop
adcl
xchg
mov
iret
mov
push
test
in
cmc
aaa
repnz
xlat
jnp
movsl
stos
pop
pop
mov
pop
adc
insl
pop
dec
fsubr
dec
dec
push
into
add
jbe
push
in
rolb
jnp
push
add
push
test
xchg
fnstenv
fiadds
mov
pop
add
xor
clc
in
pop
jb
in
fstpl
fldcw
pop
cli
sub
push
iret
inc
mov
mov
test
mov
js
push
lahf
inc
mov
push
pop
ss
dec
sub
push
repz
dec
lret
out
sub
mov
dec
ret
mov
sbb
or
cmp
push
mov
cmp
lds
fcomps
dec
sub
testb
xor
jl
pop
jnp,pn
lds
nop
and
pop
jbe
testl
and
fyl2x
pusha
dec
bnd
mov
inc
cmp
jle
aas
stos
scas
test
cmp
movsb
scas
adc
or
ja
addb
movsb
inc
cmpsb
clc
inc
ror
dec
dec
adc
push
xchg
xchg
and
mov
out
sub
add
dec
outsb
or
sub
lods
jne
xchg
sbb
pop
inc
pop
icebp
into
stos
test
sbb
xor
mov
xor
leave
xor
mov
rcrb
test
test
mov
cmp
ret
fidivs
dec
pop
shr
or
test
push
cltd
les
dec
inc
fldln2
lret
addw
cmp
mov
pop
push
aam
mov
enter
div
cmp
mov
jl
addr16
div
pop
dec
push
frstor
xchg
mov
ds
std
sbb
mov
cmp
shlb
cmp
popf
jle
jg
ret
push
sub
lcall
xchg
pushf
sahf
mov
jle
push
mov
lds
pop
call
push
aam
inc
jl
ficoml
data16
inc
in
movsb
or
enter
test
add
jl
push
mov
cltd
lcall
sbb
insb
adc
push
mov
mov
mov
test
pushf
lea
jnp
push
pop
mov
mov
pop
aas
sub
aas
ja
sub
jbe
mov
and
loope
mov
inc
jmp
jl
sbb
pop
inc
dec
fs
sbb
aas
shl
mov
decl
cmp
mov
insl
xor
outsb
sub
pop
ss
lret
cwtl
push
pop
mov
xchg
jp
mov
fdivl
ror
sahf
push
xor
mov
push
jmp
sub
mov
ja
loopne
xor
and
adc
xor
cld
sub
mov
aas
xchg
and
or
cmc
mov
iret
out
dec
dec
pop
sub
and
dec
sub
and
push
xchg
and
ficomps
call
cmp
dec
push
cltd
add
jno
jmp
push
sub
xchg
add
mov
mov
das
out
es
cs
into
sti
push
xor
dec
adc
fwait
or
jp
sti
mov
ret
pop
pop
popf
stos
lock
jmp
test
sbb
stc
out
mov
lahf
icebp
loope
push
inc
add
hlt
faddl
shl
pop
xchg
insl
push
pop
int
jmp
fistps
mov
and
xchg
sub
aad
outsb
jmp
in
shrb
mov
mov
xlat
add
cvtps2pd
mov
inc
xchg
fnstenv
inc
test
fnstsw
call
in
mov
xchg
cwtl
xchg
rcrl
fcoml
jne
cmp
lods
jl
test
add
imul
mov
sarl
mov
ja
cmp
mov
jne
xchg
jae
ss
pop
flds
scas
aaa
sub
jo
jge
or
xchg
inc
arpl
mov
es
mov
sbb
outsl
cld
js
and
xchg
or
pusha
call
lcall
sub
adc
xchg
add
aaa
push
lret
dec
push
pop
movsb
cmp
pop
push
sbb
add
aad
aad
mov
inc
call
leave
xor
dec
push
mov
mov
cmpsb
jmp
sahf
cmp
les
sub
pop
sbb
or
inc
cmp
stc
repz
sub
push
lahf
int3
lock
add
mov
add
int
cmp
and
mov
and
in
imul
enter
cld
jl
adcl
cmp
mov
xchg
hlt
mov
or
pop
imul
fisttpl
xchg
sbb
fildl
pop
ljmp
das
xor
lahf
jae
and
add
ljmp
arpl
jmp
jbe
pusha
int3
int
fistpl
hlt
gs
inc
fcomps
jmp
xlat
lods
pushf
inc
js
xchg
sub
sbb
movsl
mov
sti
fscale
push
sti
aam
pop
sarb
jle
dec
js
cmpsl
bound
pop
pop
mov
ja
dec
sbb
out
jne
mov
push
fisttpll
rcr
push
outsl
test
add
pop
sbb
scas
pop
push
scas
repnz
pop
fstpl
fistps
jp
pop
sbb
movsl
jp
push
imul
jo
pop
cmpsb
mov
xchg
test
mov
and
add
in
dec
enter
pop
cmc
icebp
cli
and
pop
sbb
call
jle
and
fmul
inc
or
mov
mov
mov
dec
je
loope
into
sahf
dec
push
mov
and
lock
ficomps
outsb
adc
xchg
inc
xlat
sahf
adcb
dec
push
iret
fmulp
xor
movsl
mov
test
sbb
and
dec
mov
sbb
pop
inc
lods
shlb
int3
mov
aam
shlb
mov
test
or
push
int
das
xchg
js
ret
xor
shlb
pop
dec
in
inc
sub
dec
adc
mov
jl
cmp
ret
xchg
push
jae
push
hlt
lret
pop
xrelease
xor
adc
ficomps
push
arpl
adc
add
sub
pop
cmp
out
cli
add
and
addr16
sbb
xor
jl
pop
pop
cmp
inc
loop
add
pop
push
fwait
push
mov
push
addr16
mov
inc
push
data16
push
xor
loop
int
ret
mov
mov
jo
xlat
repnz
hlt
out
cmovo
mov
lds
orb
lahf
and
cli
jg
pop
rcr
push
fsubrs
sbb
sub
lock
fcomps
mov
js
push
cmp
and
call
pop
cmp
sub
rol
cmp
adc
xchg
mov
mov
fisttps
sbb
cmc
inc
cltd
inc
jle
icebp
punpcklbw
mov
divb
out
adc
jge
js
add
outsl
add
arpl
pop
jno
push
push
pop
loopne
enter
push
stos
imul
push
mov
mov
aam
xchg
arpl
into
jae
and
in
adc
jg
pusha
mov
dec
adc
mov
jmp
ds
or
mov
pop
pop
or
cld
pushf
xchg
lods
dec
push
stos
rcrb
mov
ja
lret
push
dec
mov
into
sbb
sarl
jg
lret
push
cmp
nop
out
or
ja
lret
gs
add
adc
hlt
or
push
pop
mov
mov
pop
out
mov
mov
sub
xchg
push
pop
xor
pop
and
jg
mov
mov
fisubrl
pop
pop
scas
js
cs
jmp
add
xchg
or
jp
in
ljmp
add
mov
pop
inc
arpl
inc
mov
mov
outsb
daa
loopne
aad
mov
sar
mov
and
inc
jne
xchg
inc
pop
sub
jge
jbe
mov
fnstcw
in
lods
out
in
push
push
rorl
decl
imul
adc
sahf
sahf
outsl
pop
push
and
and
bound
mov
xor
scas
pop
adc
addr16
mov
and
inc
push
pop
jge
imul
aam
dec
int
sbb
push
push
fwait
ljmp
sub
pusha
std
inc
rcrl
popa
ss
fdivrs
sbb
popa
stos
pop
imul
pop
iret
jne
sbb
mov
adc
xchg
cmpsb
fcmovnu
or
and
mov
jecxz
sbb
jle
push
xor
adc
or
in
ljmp
xor
dec
imul
ds
mov
addr16
aam
pop
pop
xchg
fstps
daa
sub
adc
inc
test
add
aas
jbe
movsl
test
lret
cltd
mov
mov
jne
jno
cwtl
xlat
lret
ds
in
nop
aam
les
fs
add
sbbb
ljmp
cmp
fstps
cmp
lret
sub
std
sbb
adc
mov
sbb
loope
or
sahf
insl
in
dec
repz
out
and
cwtl
int
inc
into
pop
outsb
repz
sub
xchg
or
and
sarb
dec
ja
and
adc
cmp
jmp
cltd
arpl
push
leave
xchg
xor
mov
sbb
subl
mov
jecxz
test
rcrb
test
popf
es
jns
cwtl
add
dec
out
sti
jne
cmp
fcompl
mov
inc
add
daa
cmp
daa
leave
jmp
ljmp
mov
aad
mov
out
jle
gs
xor
es
cmp
loopne
lds
ret
ret
addb
ljmp
ss
xchg
in
aaa
insb
sahf
ja
cwtl
aas
dec
je
xchg
and
test
in
or
fldpi
xchg
in
add
xor
or
cmp
ljmp
pop
push
sub
jl
sbb
jl
jmp
call
mov
dec
fwait
pop
pop
loope
sbb
bound
dec
aas
xor
mov
cmp
js
cmp
sub
sbb
or
sub
or
mov
loopne
pop
loopne
mov
jl
nop
punpcklwd
jecxz
mov
xchg
pop
xchg
inc
fnstenv
jge
inc
scas
test
and
dec
cld
mov
insl
mov
mov
aaa
push
lods
pop
adc
in
int3
aam
cld
stos
pop
inc
test
imul
jns
idivb
aad
in
sub
jg
nop
int3
mov
xor
push
xor
cltd
movsb
in
adc
cmpsl
repz
stos
fisubrs
inc
add
xchg
scas
into
jmp
xchg
repnz
adc
dec
push
pushf
dec
inc
dec
cld
inc
je
fildl
xchg
xchg
ljmp
ss
leave
test
or
pop
add
pop
add
cltd
out
jg
sbb
dec
cwtl
xor
or
mov
sahf
cltd
cs
aas
add
mov
mov
in
cmp
inc
leave
js
adcb
push
add
movsb
ftst
cmp
icebp
aas
or
xlat
mov
push
pop
in
pop
add
adc
test
sub
mov
add
insl
and
bound
insl
das
aas
dec
jp
push
push
adcb
push
rcrl
lcall
loope
mov
push
loop
adc
in
in
sahf
mov
addb
out
jmp
and
xchg
out
cmp
popf
cld
xchg
cld
push
xorb
aas
jns
jmp
enter
xchg
into
pop
jge
data16
mov
das
cmp
sti
psllq
test
aad
loop
xchg
sti
sub
cwtl
jb
or
jle
xorb
popa
lea
gs
or
dec
fisubs
push
jle
xor
ret
les
mov
addr16
cld
daa
sbb
lods
or
push
push
pop
outsl
lahf
mov
mov
rorb
popa
sub
icebp
mov
cwtl
cltd
scas
outsb
cmp
xchg
aaa
pushl
jge
cmpsb
iret
push
iret
cmc
notl
jp
int
loop
push
rolb
mov
mov
fwait
inc
insl
lret
addr16
adc
dec
into
faddl
test
out
imul
mov
dec
loop
test
jbe
mov
lods
and
jbe
jg
test
movsl
cmp
in
nop
mov
push
or
and
mov
movsl
lcall
jl
jmp
idivl
cmp
outsb
mov
or
lock
push
inc
scas
xchg
mov
fmull
and
jle
jno
cld
mov
and
out
cwtl
sub
cltd
es
mov
push
mov
clc
jmp
pop
push
cmp
call
ret
cmp
aam
js
shll
push
adc
add
xlat
adc
mov
in
repnz
aas
out
adc
fwait
xchg
inc
ljmp
shrl
pusha
and
sub
dec
aaa
and
shlb
mov
test
lret
popl
jmp
cmp
pop
lods
repz
lahf
push
pop
sbb
mov
ss
sar
out
mov
sub
cmp
dec
bound
in
dec
mov
mov
or
mov
cmp
loope
xchg
cmp
mov
ret
pop
out
sti
lods
cmp
xchg
sub
xor
xor
mov
or
int3
sbb
popf
or
sub
aam
lcall
cmp
jo
xor
sub
gs
lods
mov
sub
push
inc
loopne
cmp
ljmp
inc
std
or
ja
xchg
dec
sbb
lahf
sbb
jne
mov
adc
test
xor
cwtl
sub
imul
int3
mov
lods
mov
mov
repz
mov
jno
mov
jo
add
outsb
inc
or
insl
xchg
mov
dec
pop
inc
mov
icebp
dec
outsl
dec
dec
xor
mov
adc
push
lock
mov
cmp
lods
insb
inc
and
aad
inc
sti
insl
andb
clc
jno
imul
cmpsb
ret
adc
inc
arpl
push
pop
loope
push
push
push
hlt
gs
push
arpl
test
jnp
ja
push
lea
jl
mov
jo
or
jp
clc
ljmp
cwtl
mov
je
pop
sbb
pop
notb
adc
scas
dec
ret
or
vmaxps
mov
movsl
loopne
push
insb
call
call
add
fwait
cld
xor
ret
arpl
mov
fwait
lcall
and
xchg
popf
sbb
mov
jnp
or
or
dec
daa
or
and
jmp
ds
cmpsb
sti
sbb
insl
test
cmpsb
ret
push
lods
ss
fisubrs
mov
push
aad
xor
xchg
rep
pop
cld
scas
mov
xor
dec
imulb
divb
dec
pmullw
mov
cmp
cmp
pusha
sbb
pop
fxch
lods
mov
sbb
lret
and
das
ret
mov
scas
mov
mov
sbb
push
xor
sti
icebp
cmp
stc
mov
cmpb
push
outsb
dec
push
ret
clc
int3
jne
jns
lcall
xchg
sbb
adc
testb
pop
lahf
popa
push
xlat
add
out
push
loop
jo
pop
cld
hlt
rolb
push
cmp
dec
movl
adc
out
test
inc
inc
jnp
sub
push
sub
cmpsb
mov
push
pop
pop
mov
xchg
cmp
ret
in
sub
xlat
ja
pop
jmp
fadds
xchg
inc
loop
divl
xchg
dec
inc
jge
gs
ljmp
xor
sahf
pushf
mov
lds
fwait
adc
std
cmpsl
or
pusha
xchg
sbb
insl
mov
fcomps
addb
out
fisttpll
jp
inc
pavgw
lcall
adc
mov
xchg
addl
pop
cld
repz
mov
push
faddl
mov
shll
hlt
cwtl
dec
in
test
sub
rclb
shrl
dec
xor
cmp
cmp
mov
xchg
push
dec
xor
pop
in
leave
cmp
paddq
mov
lds
or
dec
cs
cwtl
ss
adc
jg
loopne
stos
out
out
mov
or
dec
push
lods
sbb
cmp
in
dec
sub
mov
push
dec
pop
pop
arpl
xchg
jecxz
jmp
pop
test
rep
sti
pop
mov
movsl
cmp
jl
xor
fidivl
lcall
adc
fisttps
xchg
scas
sbb
pop
or
pop
adc
lcall
test
sarb
inc
shl
mov
daa
add
addr16
daa
aam
mov
xor
mov
and
pop
sti
xchg
sub
mov
sub
xor
movb
mov
pop
add
movsl
xchg
xchg
std
cli
mov
sbb
lds
ljmp
mov
mov
aam
stos
aam
jmp
shrl
jne
out
notb
xlat
mov
xor
dec
mov
aas
cmc
jg
cs
ljmp
cmp
xor
dec
push
leave
hlt
mov
pop
mov
jae
test
cli
mov
lret
ljmp
jnp
es
mov
sti
push
cmp
pop
popf
sti
aam
fwait
sbb
addr16
and
fstl
hlt
mov
andl
lods
mov
lds
movsl
scas
adc
adc
in
dec
xor
dec
les
ljmp
add
daa
frstor
clc
int3
inc
pop
sub
lods
jns
popf
cs
jae
sbb
addb
jo
aad
sbb
push
andb
mov
insb
sti
dec
enter
out
pop
repnz
nop
sub
pop
popf
gs
pop
in
dec
xchg
insb
out
push
sbb
pusha
sub
and
pop
es
je
jbe
add
test
mul
cmp
rorb
daa
ljmp
fisttpll
lock
xchg
into
popf
and
jae
jae
sub
lods
mov
lcall
or
loop
test
xchg
push
daa
sbb
ljmp
mov
aad
fidivrs
sahf
adc
xor
sbb
push
mov
lock
pop
adc
lcall
add
loopne
xchg
test
or
pop
leave
idiv
pop
or
or
loope
xchg
pushf
stos
orb
cvtps2pi
push
aaa
adc
inc
stos
add
imul
and
into
push
xchg
aam
fldenv
test
dec
fcomip
cmp
test
movsb
data16
jg
jmp
xchg
cmpsl
xchg
outsl
cmp
std
sbb
insb
mov
and
push
sub
and
push
aad
lds
and
aam
shl
stos
imul
subb
ljmp
push
jns
lret
lret
cmpb
mov
add
dec
enter
mov
mov
popf
out
push
jnp
popa
dec
inc
sub
jg,pn
add
fldcw
shlb
inc
aad
pop
lcall
js
push
stc
xchg
xchg
pop
cmpsl
mov
xchg
mov
ret
stos
push
lds
popf
cmpsl
inc
cmp
cli
mov
test
sbb
mov
push
fstpt
insb
int3
inc
cli
enter
add
and
data16
inc
push
adc
or
test
mov
pop
xorb
ljmp
in
lahf
pop
dec
lcall
mov
cmpsl
push
cltd
stos
jle
pop
stos
xchg
std
xor
scas
imull
or
fists
and
aad
test
scas
popf
lods
lret
sahf
int3
dec
jbe
movsb
cmp
ret
mov
or
mov
xchg
dec
popf
jmp
xor
imul
jl
dec
mov
adc
lahf
add
dec
fidivs
jmp
aaa
fwait
and
cmc
insl
mov
or
add
xchg
gs
or
arpl
fsts
mov
sbbb
mov
cmpsl
cmpsb
fsubrl
mov
stos
xchg
jmp
xor
sbb
call
popa
cmp
sbb
dec
xlat
pop
test
out
or
xchg
into
sub
adc
xchg
xor
jno
je
mov
inc
aaa
test
sbb
add
test
add
or
or
xor
sahf
outsb
xchg
cmpl
test
in
das
jecxz
sbb
adc
testb
xchg
cmp
hlt
jmp
in
dec
es
sti
and
ss
pxor
inc
ds
xor
test
subb
cmp
jmp
mov
fwait
pop
xchg
jle
push
or
std
push
push
dec
mov
mov
push
data16
and
jne
dec
mov
mov
mov
inc
pop
ret
loop
mov
aam
push
push
xchg
push
push
or
aad
bound
dec
enter
aas
push
dec
push
ret
xchg
push
xchg
cs
lods
sub
outsl
lea
push
scas
mov
xor
insb
ljmp
hlt
call
iret
or
fidivl
pop
loopne
rcrl
lds
cld
lods
adc
add
lds
lret
pusha
fcoms
push
lret
mov
xchg
testl
idivl
in
rcr
xchg
lods
push
aaa
fs
shll
add
mov
mov
jb
xchg
loope
mov
cmp
fmulp
sbb
inc
jecxz
mov
cmpsb
xchg
and
mov
pop
pop
mov
dec
sub
fnsave
push
mov
inc
in
sub
mov
or
insl
sbb
sahf
sbb
jb
cld
inc
insb
enter
mov
push
int3
add
dec
inc
std
xor
ret
inc
sarl
sbb
lret
dec
mov
subb
lock
rcl
add
lods
xor
mov
mov
push
jge
mov
adc
fdivl
jmp
adc
in
gs
icebp
in
dec
and
movsbl
xor
push
and
mov
int
xchg
daa
lock
ror
leave
inc
jp
test
aad
dec
dec
mov
js
add
push
xchg
out
jle
pop
imul
insb
sbb
test
fwait
mov
js
xor
inc
rcrb
or
pop
push
test
xor
mov
aam
mov
enter
dec
out
out
push
pop
ja
je
dec
enter
repnz
sub
push
jle
gs
movsl
aad
xchg
sbb
ret
clc
pop
test
in
sub
push
mov
cmpsb
sub
subb
mov
sbb
pop
das
lods
gs
movsl
movsl
inc
int3
mov
lret
xor
mov
rcr
inc
inc
mov
sbb
and
cmc
enter
xor
add
cli
push
cmp
arpl
push
aaa
and
cmc
xchg
divl
add
cld
icebp
js
mov
pop
jo
add
cmp
pop
std
inc
shll
sbb
cmp
mov
and
ds
push
test
push
jle
loop
pop
jmp
fsubr
sbb
fcomps
sbb
cmpsl
bound
cmp
sar
cmpsb
ljmp
inc
jge
sub
je
in
aam
and
shrl
in
test
pop
fiadds
jmp
in
lods
lods
sbb
add
pop
fs
pop
or
jge
xchg
cmp
mov
xchg
cmpl
rcr
mov
jmp
scas
cmpsb
mov
aam
mov
pop
pop
push
insb
divb
fimull
mov
push
mov
xchg
loop
lahf
and
sub
out
dec
jns
lcall
rorl
push
lret
and
shlb
inc
movsb
in
addr16
rorl
mov
sub
push
out
sbb
mov
add
push
dec
popf
or
fwait
add
pop
cmpsl
push
push
nop
inc
fsubr
sub
fwait
call
ficoml
sub
jnp
sub
sbb
inc
dec
mov
icebp
shlb
movsl
test
add
xor
push
pop
dec
cmpsb
xor
xchg
enter
jl
mov
and
sbb
xchg
pop
dec
and
fists
dec
pop
test
mov
pop
or
xor
dec
je
lods
popa
cmp
ss
inc
dec
lods
pop
and
jbe
adc
movsb
push
imul
ljmp
pop
push
pop
das
jno
sub
insl
cmp
jb
ja
pushf
sbb
mov
add
mov
mov
mov
xor
mov
ja
fildl
dec
movmskps
mov
pop
dec
fcmovu
insl
insb
imul
cltd
hlt
pop
stos
sbb
ret
push
pop
cli
lret
into
dec
cmp
adc
and
jmp
cmpsb
insb
iret
std
xor
push
insl
pushl
ror
jmp
outsl
xchg
cmp
ja
inc
cwtl
test
adcl
pop
add
xchg
sub
sar
jo
cmpsb
push
sbb
pop
push
push
cmp
push
xor
push
andb
fs
jle
push
inc
cmp
push
testb
sub
repz
dec
lret
push
call
pushf
fwait
shlb
push
dec
leave
mov
mov
dec
mov
les
adc
js
inc
outsl
std
imul
imul
scas
lea
add
sbb
scas
jnp
jmp
iret
insl
adc
aaa
jp
je
sub
mov
and
jnp
in
adc
int
adc
push
push
test
into
add
repz
jbe
cs
add
gs
rep
cmp
cmpsb
rcl
repnz
mov
in
out
xchg
push
jbe
mov
imulb
dec
mov
cmp
fstpt
dec
xchg
cmpsb
aad
aas
dec
hlt
and
psadbw
jb
jne
aad
mov
ljmp
mov
roll
mov
iret
xor
lret
mov
push
sub
sbb
xchg
mov
mov
aam
test
stos
or
lods
lahf
cmp
xorl
xchg
cmp
in
fistpll
outsl
adc
dec
maskmovq
imull
enter
loope
in
out
leave
lret
scas
dec
rcrl
mov
shlb
jmp
dec
insl
sub
scas
sub
mov
mov
xor
out
sbb
fistpll
and
jecxz
push
and
push
pushf
ja
jl
lea
pop
loop
push
jge
daa
setp
data16
mov
mov
mov
xchg
in
repz
lahf
push
xchg
mov
pushw
push
mov
call
mov
mov
pop
sbb
xchg
jb
add
cmpsl
pop
gs
xchg
jbe
inc
stc
jl
inc
icebp
push
add
jb
adc
push
dec
push
insl
shlb
popf
push
cmp
lcall
das
inc
adc
outsb
dec
add
rcr
sub
imull
jle
jmp
sub
mov
loopne
xchg
addr16
dec
pop
jmp
fistpl
out
out
insb
mov
pop
cld
stos
fiaddl
and
mov
ljmpw
inc
stos
mov
ret
lea
dec
sbb
dec
xor
sbb
pop
xchg
mov
push
xor
jl
adc
xchg
jnp
shrl
sbb
inc
aaa
cmp
outsl
imul
inc
xchg
and
dec
xchg
jmp
xlat
nop
and
xchg
inc
push
jp
test
into
aas
or
adc
inc
mov
cld
in
sbb
inc
add
adc
bound
movsl
fs
mov
push
setnp
jmp
bound
sbb
enter
sub
dec
push
idivb
pushf
push
add
jo
push
jne
pop
fsub
dec
sub
jecxz
repz
pop
push
add
sub
dec
inc
pop
inc
inc
loope
sti
dec
aad
arpl
or
in
bound
out
out
xor
push
xchg
insb
push
sbb
ja
scas
aas
jmp
cmp
insb
outsb
jecxz
cmp
iret
lcall
shlb
rorl
xchg
xor
adc
ja
std
aas
ss
jb
fcomps
lods
cmpsb
sub
cwtl
in
mov
hlt
inc
sub
and
mov
or
mov
xchg
loope
lods
mov
adc
nop
decb
out
cli
test
jecxz
dec
push
inc
aaa
sahf
movsb
xchg
mov
jne
imul
mov
jne
adc
bound
cli
fmuls
call
jp
xchg
imulb
add
dec
dec
aad
sbb
testb
sbbl
cld
cli
jbe
mov
ljmp
pushl
xchg
lods
stos
addr16
call
sbb
hlt
adc
sbb
sahf
pop
test
mov
add
jmp
lahf
mov
jge
pusha
loopne
push
mov
fmuls
fwait
xor
and
xchg
insb
repz
loopne
aam
mov
testl
insl
sti
decl
cmp
pusha
cmp
xor
sbb
push
cld
stos
negl
push
into
stc
pusha
insb
and
leave
cmpsb
lods
and
aam
sub
mov
adc
mov
pop
pop
add
xlat
das
dec
pop
mov
das
mov
lahf
and
mov
sub
mov
xor
fcoml
outsb
and
cmpb
pop
dec
ficomps
push
push
roll
lods
xorl
fidivs
pop
call
jnp
xchg
popf
sbb
cmp
sub
mov
xchg
add
jp
sbb
pop
aas
mov
aaa
lods
adc
iret
in
push
repnz
sbb
cld
mov
flds
cmp
and
aaa
sbb
push
sub
lret
push
les
mov
cmp
adc
lods
and
pop
pop
cltd
cltd
imul
call
repz
dec
or
pusha
mov
loop
cmp
jb
push
scas
mov
xor
js
push
mov
insb
stos
cmp
ret
vmread
push
stos
cmpsl
dec
sahf
jge
add
mov
pop
fwait
lods
cmp
mov
movsw
insb
xor
push
imul
imul
arpl
push
aas
xchg
dec
into
fimull
mov
adc
mov
and
pop
fadd
cmp
popa
imul
xchg
sti
pushf
push
pop
jo
inc
std
dec
test
xchg
fistpll
mov
push
out
lret
inc
xchg
jns
pop
stos
or
stos
fwait
xor
test
popf
mov
in
mov
aas
mov
xchg
popf
es
cmpsb
pop
ljmp
or
xor
sub
push
or
scas
pushf
cli
aad
push
clc
insl
push
lret
rclb
adc
pop
mov
fistps
dec
mov
sbbb
sbbl
fstps
pushf
out
sbb
inc
out
mov
xchg
nop
mov
adc
fnsave
xor
ljmp
xchg
or
into
cmp
pop
sub
stos
jecxz
and
xor
cmp
pop
or
pop
idivl
aam
dec
ja
ljmp
jb
out
fstps
into
inc
sbb
popa
cmp
repz
jno
aas
pop
cmpb
jne
imul
xchg
mov
aas
call
cwtl
sub
jnp
sub
ret
dec
cmp
jne
rcl
push
popf
loopne
mov
aam
xchg
xchg
xchg
inc
popa
cwtl
jmp
xchg
je
subl
xor
dec
xchg
rclb
stos
sbb
imul
xor
inc
mov
lahf
inc
and
test
push
xchg
mov
in
mov
lock
mov
std
push
mov
or
fistpll
push
fwait
test
fstl
adc
jns
imul
mov
pop
jecxz
cmp
imul
mov
repnz
sbb
mov
sbb
pop
sbb
mov
mov
fwait
xchg
fcomps
and
mov
arpl
dec
ljmp
mov
out
cmp
pop
popf
pop
pop
insl
lea
mov
mov
or
outsl
shrb
clc
add
pop
or
lret
push
xor
xor
push
in
cmc
pop
push
mov
cmc
sbb
pop
inc
cmc
filds
out
xlat
add
pop
adc
pop
sarb
or
insl
mov
or
in
cli
insb
mov
lods
jg
fisttps
int3
jmp
sub
fld1
test
test
ds
addl
lods
out
imul
mov
notl
jbe
in
mov
clc
inc
out
cmc
jecxz
clc
jno
add
dec
sbb
inc
stos
push
mov
scas
mov
xlat
fistpll
mov
mov
mov
push
jge
ja
dec
loop,pt
scas
xchg
call
inc
test
or
inc
wbinvd
push
dec
adc
sub
push
stos
pop
xchg
push
cmc
aaa
insb
jne
dec
cltd
add
ret
mov
push
lret
iret
popf
jno
push
mov
cmpsl
jp
lahf
mov
scas
xchg
xchg
cmpsb
movb
push
push
sbb
jge
and
mov
ds
repnz
inc
jbe
and
push
pop
inc
leave
js
dec
mov
stc
leave
movsb
jp
dec
mov
pushf
or
xchg
lods
into
push
mov
pop
cmp
ja
sub
and
fs
sub
in
jmp
mov
or
push
fistpl
stos
jecxz
xor
mulb
add
jnp
pop
shlb
push
push
inc
lcall
mov
sub
jmp
js
loope
cmp
les
lea
mov
sub
sbb
int
jl
push
add
push
sbb
pop
fistpll
rcll
popf
hlt
or
pusha
inc
and
and
test
sbb
movsl
pop
xchg
jge
hlt
add
fwait
ja
stos
lcall
movsb
cmc
jnp
and
push
cs
enter
imul
sbb
not
cwtl
jg
call
lahf
pop
outsb
ja
roll
lods
xchg
aad
lock
into
stos
outsb
std
dec
dec
mov
mov
xchg
xchg
mov
aad
fstl
aaa
adc
push
out
jae
sub
fidivrl
sbb
pop
testl
cmpsl
pop
fbld
jl
jle
lds
fsubrl
int
dec
js
add
clc
out
or
push
mov
mov
sbb
mov
mov
dec
pop
cmp
adc
jp
ret
add
nop
mov
pop
mov
test
test
xor
test
mov
push
jg
or
push
cmp
sub
inc
mov
cmp
lock
aas
pop
push
pop
mov
pop
inc
movb
clc
movb
scas
lods
sub
insl
and
in
adc
sub
inc
rorl
adc
jnp
xchg
pop
adc
repz
fnstcw
fadds
out
pop
lret
clc
mov
cli
push
nop
and
mov
mov
out
ja
out
repz
cld
fimull
or
adc
stos
outsb
push
push
cmpsb
loopne
pop
shll
jne
dec
pop
movsl
mov
pop
stos
arpl
jle
mov
mov
and
pop
jle
insl
inc
xchg
and
fs
sbb
push
ja
push
and
dec
sub
mov
inc
pusha
incl
popf
push
mov
pop
movsl
mov
cltd
cmp
sub
mov
test
shl
arpl
aas
out
push
pop
pushf
loopne
shll
inc
int3
je
movsb
lret
iret
mov
fdivrs
popa
daa
sbb
leave
fidivrl
and
test
add
adc
leave
jbe
inc
mov
shr
jno
imul
cs
mov
jmp
mov
stc
mov
xchg
xor
dec
hlt
ds
jo
imul
or
scas
dec
popl
cmc
pushf
pop
adc
xor
js
std
add
cs
lret
jbe
ss
mov
xchg
jno
sbb
jle
setp
xor
and
int3
sbb
in
icebp
clts
clc
je
fwait
arpl
cmp
aas
nop
fmul
sarl
pop
xchg
ja
in
jp
jns
outsb
pop
pop
ret
sub
lds
cmc
xchg
loop
inc
rorl
and
cld
iret
sub
cmp
mov
pmaxub
xchg
outsl
xlat
and
sub
xor
cmpsb
sub
imul
jmp
aam
push
cmpsl
outsl
pushl
mov
stc
push
icebp
into
cmpsb
leave
jbe
add
add
in
mov
sub
sub
fucomp
dec
mov
fcomp
jbe
cmp
mov
in
sbb
and
dec
sub
cmp
adc
mov
jns
stc
jae
sbb
insl
mov
insb
int3
adc
inc
jmp
or
call
mov
or
in
gs
push
mov
jge
push
jbe
pusha
inc
push
int3
push
lods
cmp
xorl
aam
outsb
je
mov
lret
enter
xor
movsl
in
jecxz
sbb
out
cmpsb
jmp
ds
dec
or
mov
pushf
sbb
mov
enter
mov
fwait
sarb
inc
cli
dec
adcb
gs
xor
push
je
xchg
jo
mov
inc
in
pop
mov
movsb
inc
push
xlat
dec
and
add
jge
mov
sarl
data16
mov
lret
in
nop
fmuls
ds
jle
xchg
shll
int
scas
sub
push
clc
jp
scas
fldcw
xchg
push
addb
push
cmc
jno
add
mov
dec
mov
lods
cwtl
add
sub
stos
and
jo
pop
fcmovnu
dec
popa
dec
pushf
adc
enter
out
or
jp
xor
and
mov
rcll
push
mov
scas
mov
or
fwait
dec
loop
sub
cld
fildl
loope
mov
ret
jle
cmp
in
mov
fnstcw
mov
cmp
jmp
jb
scas
std
push
sahf
xor
mov
fst
mov
jge
in
jecxz
sub
lods
jp
insb
clc
pop
xor
jl
jns
fbld
aam
mov
sbb
mov
dec
xchg
pushf
movb
fimull
leave
iret
jno
loope
pop
roll
subl
jg
in
mov
mov
data16
out
sub
outsb
fidivl
lock
loope
shlb
sbb
fisttpll
and
xor
jp
js
popf
sbbb
ret
pop
repz
es
ret
jne
push
es
sbb
leave
mov
jmp
jmp
sbb
adc
and
je
pop
leave
sub
aaa
shrd
in
pop
fwait
jno
jecxz
or
fsubr
repz
cmp
adc
mov
loope
sbbl
addb
ret
mov
out
dec
mov
mov
icebp
inc
fs
repnz
in
and
xchg
loopne
or
pop
add
dec
push
push
repz
inc
mov
push
fnstenv
lods
shlb
cltd
pop
mov
daa
mov
pop
imul
add
loopne
rcll
aam
scas
imul
ret
subl
mov
out
lods
aad
popa
and
repnz
push
cmc
cmc
xor
stos
aas
shlb
xchg
xor
ror
test
sbb
cli
sbb
iret
out
or
scas
xchg
gs
jg
jo
pop
lods
arpl
sbbb
mov
movsb
mov
in
mov
cmp
dec
loop
mov
xchg
inc
ficomps
fs
sbb
arpl
ss
repnz
popa
jle
inc
rcrb
jg
adc
ljmp
mov
addl
shrl
std
mov
aas
fwait
cmc
inc
js
gs
and
aas
les
lock
movsb
push
cmp
or
mov
xchg
aad
sti
pop
fisttpl
out
in
dec
pop
repz
mov
xor
xchg
mov
xor
shlb
ret
inc
cs
push
and
stos
push
cltd
hlt
cmp
jmp
cld
in
and
sub
in
cwtl
hlt
lcall
and
cmp
dec
aaa
xor
xchg
jnp
out
cld
icebp
push
cltd
pop
cmp
pop
push
add
dec
iret
inc
repz
pop
fneni(8087
int
xor
cmp
jmp
and
ja
insb
pop
frstor
mov
mov
or
mov
and
sub
pop
flds
push
jmp
inc
inc
clc
jno
jg
roll
dec
xchg
xchg
add
outsb
mov
in
sub
je
es
scas
or
mov
cs
adc
lcall
out
mov
xchg
clc
test
sub
mov
mov
dec
test
and
adc
jl
movsb
xor
mov
fcmovne
add
loopne
neg
lea
test
cld
andl
and
jge
out
lea
sahf
xor
ja
inc
ljmp
cld
sbb
pop
mov
ss
mov
leave
fmulp
int3
jbe
push
push
into
rolb
adc
bound
out
jne
jnp
lahf
and
jb
push
xchg
mov
or
xchg
push
sub
sbb
cld
sub
fsubp
sub
enter
pop
fdivrl
mov
and
aad
lcall
pop
sub
jbe
mov
jae
sbb
fs
xchg
pop
lods
mov
bound
scas
push
int3
out
xor
fpatan
jmp
jecxz
sbb
mov
test
dec
lcall
dec
jns
out
fcom
imul
repz
push
enter
dec
xor
lret
nop
in
sub
jns
pop
pop
mov
out
sbb
mov
pop
sbb
mov
xor
mov
jne
mov
ss
lcall
jmp
scas
idivl
out
jb
mov
leave
dec
or
xchg
sbb
ds
push
das
cltd
dec
pushf
mov
fwait
adc
or
mov
mov
shl
stos
enter
mov
jno
jle
xlat
test
out
cmp
mov
mov
push
fcom
in
push
push
clc
xchg
add
imul
loopne
sahf
addb
or
imul
rcrl
cwtl
adc
xor
ds
xchg
xor
test
in
repz
cltd
or
xor
incb
xor
in
repnz
imul
clc
xchg
es
pop
xchg
fcoml
popf
mov
and
out
in
inc
xchg
sbb
mov
and
add
test
mov
mov
hlt
sub
cld
jg
push
xchg
inc
dec
jmp
jecxz
dec
push
sbb
imul
adc
inc
int
cmc
lret
test
das
cmpb
gs
test
ret
rolb
sub
xor
rcll
and
xor
adc
adc
mov
dec
cld
div
mov
xchg
std
cmp
dec
sti
adc
loope
xor
mov
jg
and
jl
xor
dec
and
or
add
push
dec
sbb
sti
or
aad
subl
stos
clc
mov
cmpsl
lods
mov
sub
sbb
aam
cli
add
xchg
mov
push
dec
out
call
imul
pop
fptan
lock
pusha
in
inc
mov
call
add
and
jp
sbb
popa
arpl
lods
mov
sbb
push
sbb
lea
dec
push
lahf
jle
sub
das
xchg
imul
lret
ljmp
sub
xor
out
push
xchg
lods
rcr
dec
ljmp
std
rcl
loopne
sti
out
jle
fnstcw
rcll
arpl
shll
aaa
jp
pop
sarl
icebp
mov
xor
aaa
cmp
imul
sub
mov
stc
cmpsl
mov
js
imul
pop
aam
push
fucomi
int3
and
xchg
push
sbb
mov
and
adc
lods
pop
sbb
loop
push
daa
jmp
fisubrl
or
dec
cli
stos
dec
jmp
sahf
aad
outsl
int
or
arpl
sti
ss
pop
xchg
dec
rcr
xor
xlat
and
or
int
cmp
test
add
popa
gs
out
mov
sub
lret
stos
push
call
and
incb
push
stos
scas
scas
sub
mov
loope
xor
popa
clc
dec
mov
cwtl
cmp
es
lcall
jmp
bound
jns
jae
xchg
xchg
std
fists
adc
mov
inc
mov
es
sbb
fimull
jecxz
js
mov
push
add
sahf
mov
fidivl
push
push
jae
pusha
mov
mov
scas
dec
xor
mov
incl
mov
cld
mov
pop
lods
stc
sbb
call
jmp
jne
dec
leave
out
push
mov
jb
sub
add
cmp
ss
ret
mov
arpl
popa
ja
and
jo
adc
rorb
mov
repz
adc
or
add
jns
test
xchg
inc
xchg
xor
imul
lret
mov
daa
popa
or
mov
mull
cmc
xor
test
les
in
mov
inc
dec
push
mov
push
int3
add
and
cmp
rcll
loopne
jno
mov
imul
jbe
and
and
dec
je
std
movsl
push
in
std
jns
and
sub
leave
jge
mov
pop
leave
cwtl
add
mov
push
or
xor
push
int
js
add
inc
std
jo
mov
and
jg
fwait
jb
add
inc
arpl
lods
adcl
dec
aad
dec
xor
jp
adc
sbb
and
jg
mov
fs
mov
insl
repnz
frstor
mov
dec
arpl
sbb
sub
jnp
mov
adc
or
xchg
lods
mov
mov
pop
push
xor
outsl
pop
out
insl
aaa
sub
call
xchg
cmp
iret
jo
dec
pushf
add
dec
xor
adc
jns
jbe
cwtl
jae
fisttps
pop
leave
xchg
and
xchg
push
enter
mov
neg
scas
sub
jl
pop
xlat
xlat
or
jns
dec
pop
stc
xchg
pop
mov
xchg
shlb
aaa
pop
movsb
add
push
push
fwait
in
adc
mov
jns
pop
js
mov
sub
xor
mov
lods
mov
mov
cld
in
mov
add
mov
rorl
ja
test
add
cmp
test
outsb
and
mov
pop
push
xchg
mov
stos
push
cwtl
xor
push
xor
cmc
iret
aad
mov
sarb
jecxz
lock
inc
ss
fcmovbe
mov
xchg
push
sbb
movsb
js
test
lods
sub
cmpsl
jmp
aas
dec
push
cmpsb
adcb
mov
std
dec
xchg
push
into
test
push
out
jne
cmpsb
and
clc
rcll
xor
incl
daa
mov
add
shll
xchg
and
nop
mov
cmp
out
movsl
out
inc
sbb
adc
leave
xchg
icebp
adc
out
cmp
lea
aam
push
cs
push
jmp
test
outsl
sub
or
mov
adc
sarb
popf
movsl
mov
in
push
mov
jae
and
mov
xchg
popf
lret
flds
dec
lcall
mov
jb
jg
addr16
ficoml
mov
stos
inc
mov
call
lret
mov
cmp
cmp
js
mov
nop
outsb
push
inc
push
je
jne
lahf
add
adc
mov
iretw
or
push
add
movsl
inc
xchg
aad
push
inc
xlat
xchg
lods
adc
addr16
jo
out
pushf
pop
je
sbb
fnstenv
mov
jge
jle
add
add
cs
jecxz
xlat
xchg
mov
scas
movsb
adc
jns
das
sbb
pop
mov
out
jle
add
cli
xor
jo
pop
mov
inc
and
out
xchg
test
xor
movsb
fists
mov
cmp
xchg
ret
out
adc
push
mov
push
pop
push
bound
mov
ja
int
shlb
pop
ret
push
repnz
out
fcmovnb
add
int
add
mov
xchg
push
jle
test
push
cli
repnz
iret
loope
lahf
and
fmuls
arpl
std
hlt
dec
cmp
push
push
cld
jnp
cltd
inc
scas
aas
js
cmp
jb
test
in
loopne
sub
sub
iret
dec
and
and
xchg
repnz
xchg
ja
inc
in
insl
pop
jge
jmp
ljmp
aaa
mov
inc
ds
or
pusha
fldl
adc
in
icebp
ss
and
and
jo
stc
popa
sub
stos
fxch
testl
pop
out
dec
xchg
inc
jmp
movsl
and
and
cld
adc
inc
sub
mov
xor
xchg
test
xchg
pop
sbb
mov
jo
xor
arpl
adc
and
push
pop
test
xor
pop
cmp
adc
xchg
or
mov
jge
mov
sub
xchg
lea
cli
and
cmc
jae
test
cwtl
lcall
inc
fwait
test
addr16
outsl
pop
lahf
pop
scas
sub
add
xchg
dec
push
push
adc
lcall
roll
repz
cmp
jge
mov
adc
nop
and
jle
cmp
cltd
jle
shl
push
outsb
scas
sbb
mov
lds
ljmp
inc
popf
int3
or
sub
cmp
daa
xchg
scas
cmc
cmp
sbb
mov
jg
mov
push
ret
fldl
jo
xchg
leave
jne
jl
adcb
cmp
and
mov
jl
repnz
int
jmp
addr16
or
mov
lods
add
fidivrs
int3
jg
cmp
rcrl
inc
notb
aas
inc
in
call
shll
and
stos
lahf
mov
or
stos
pop
orl
or
inc
inc
in
jne
mov
inc
in
pop
lds
ja
ljmp
dec
cs
sbb
jae
ret
andb
jbe
lods
clc
fstps
jo
fsubs
add
xchg
inc
cmp
pop
pop
bnd
sarb
jbe
stos
pop
xor
pop
push
cs
jle
sub
in
sub
movsl
inc
cmp
fidivs
int3
push
sbb
testl
test
sub
shl
cwtl
sbb
dec
push
inc
daa
and
fwait
in
jno
cmc
jle
sbb
pushl
jp
jbe
mov
mov
cmp
push
jp
cmpsb
rclb
inc
jno
xchg
push
jo
test
push
pop
or
mov
cmp
dec
xor
repnz
mov
or
fadds
enter
mov
cmp
lahf
insb
inc
dec
loope
add
push
sbb
arpl
popf
ljmp
fists
xor
loop
test
leave
bound
loopne
cs
dec
xchg
cmc
aaa
adc
bound
jo
xor
xchg
mov
ljmp
pop
outsb
cmp
lahf
into
inc
movsbl
xchg
andb
and
xchg
jmp
jne
xlat
setp
push
divb
das
stc
cs
inc
xlat
stos
jno
jno
mov
pop
data16
xor
mov
jne
sbb
push
inc
add
and
add
pop
popf
push
test
popf
jle
sbb
xchg
mov
or
ljmp
in
push
mov
mov
pushf
dec
sbb
jg
add
out
jbe
test
leave
mov
pop
je
loope
push
jbe
xor
ljmp
add
les
adc
scas
sbb
cmp
pop
cmp
cmc
push
xlat
cmp
xchg
adc
sbb
and
call
data16
jmp
pop
pusha
rcrb
mov
fs
imul
fnstsw
inc
movsl
cmp
sahf
inc
xchg
dec
outsb
mov
adc
dec
and
mov
aas
mov
data16
int
lcall
je
sub
sbb
or
lcall
repnz
or
sub
mov
lds
sarl
inc
sub
popl
sub
push
int3
adc
inc
nop
pop
and
cld
pop
jp
out
jp
jg
ja
sbb
inc
das
xorl
xor
xorl
fisubrs
jb
loope
pop
inc
adc
inc
xor
mov
mov
cwtl
xor
imul
jmp
xor
fwait
push
xlat
mov
mov
out
push
ljmp
inc
sub
mov
push
mov
xor
jb
lret
xchg
test
push
inc
xor
daa
push
cmp
fildll
push
push
add
or
stc
xor
inc
ds
pop
pop
adc
subl
movl
mov
out
nop
sbb
cmp
mov
je
jle
daa
sub
movsb
daa
xchg
dec
int3
and
dec
stos
jl
mov
stos
inc
sub
test
mov
stc
enter
mov
xchg
sbb
mov
lret
addb
cmpb
and
push
sti
jae
shlb
mov
fisubl
stos
jle
add
shrl
aam
repnz
cmc
xor
insb
mov
mov
jns
nop
and
xchg
stos
dec
xchg
stc
and
or
adc
add
jl
imul
aaa
lea
dec
std
mov
jnp
add
arpl
or
jns
divb
push
mov
outsb
loopne
xor
or
lcall
cmp
sbbb
sub
in
adc
cmc
bound
xorl
xchg
jns
xor
mov
or
xchg
sbb
cmpsb
movsb
pop
cwtl
in
int3
hlt
mov
mov
std
push
and
jb
fldl
adc
enter
sbb
ljmp
sarl
fs
in
jmp
xchg
enter
jo
fcompl
push
xor
push
cmpsb
jnp
sub
inc
adc
push
mov
cmpps
fiaddl
push
sub
test
mov
scas
add
dec
cmp
in
cs
adc
cmpl
sbb
adc
adc
test
rclb
dec
jle
mov
iret
or
into
int
cmp
in
push
sbb
sbb
lds
push
pop
mov
pop
pusha
jl
aas
imul
sub
repz
subl
sti
cmc
sti
out
and
and
add
mov
stc
cmpsl
sahf
orl
jns
mov
fsubrl
inc
sub
jg
mov
outsl
lahf
or
hlt
mov
xlat
push
sbb
xchg
mov
adc
mov
ss
leave
stos
mov
fldenv
shrl
popf
mov
xor
dec
jmp
or
and
pop
das
les
inc
and
push
add
addb
mov
insl
es
xchg
add
lahf
fwait
jle
pop
dec
in
jo
shl
adc
jle
pop
aad
movsb
test
pushf
fisubrl
mov
or
xchg
cmc
std
insb
pushf
fildll
ja
add
js
loop
push
push
jbe
test
icebp
cli
mov
mov
test
add
call
notb
jns
icebp
add
mov
dec
mov
popa
test
mov
in
sahf
and
xor
fcoms
outsl
xor
sub
pop
mov
push
sbb
aad
sbb
inc
sub
mov
lds
loope
sub
popf
dec
loopne
scas
outsb
mov
mov
aaa
or
jo
and
adc
rcrl
mov
nop
inc
jbe,pn
cmp
push
push
push
inc
fwait
push
jp
mov
inc
xor
pop
add
in
cmp
or
inc
sbb
adc
xlat
hlt
xchg
mov
mov
xchg
into
push
jo
xchg
ret
jns
mov
dec
test
arpl
cmpsl
call
pop
xor
and
cmp
jne
ljmp
adc
jmp
aad
mov
xlat
cwtl
mov
mov
dec
sarl
cmp
fstpl
in
sub
imul
shlb
ret
xchg
fwait
arpl
dec
js
mov
in
ja
jp
stos
mov
aaa
pop
inc
push
adc
inc
stos
ds
xchg
pop
xor
cmovp
pop
mov
dec
leave
das
xchg
scas
aam
stos
mov
dec
pop
adc
pushf
jbe
mov
shl
cmp
jae
and
mov
test
sbb
and
test
insb
cmova
jae
cmp
xchg
ret
pop
sub
stos
popf
lock
addr16
jle
mov
inc
stos
jmp
daa
lret
les
cmp
repz
int3
mov
lret
lcall
adc
fnstsw
sub
jecxz
mov
add
inc
fsubrl
xor
mov
xchg
inc
cmp
sub
ret
dec
test
popa
push
lahf
cwtl
test
dec
pcmpgtw
push
jno
test
sub
pop
fldt
addr16
repz
cmpsb
stos
fcoms
movsl
mov
fdivr
ss
pusha
aad
jle
insb
sub
and
cmp
les
outsl
cmpsl
cmp
ja
pusha
mov
push
in
adc
add
jmp
jb
mov
lret
icebp
scas
stc
call
add
dec
ss
into
aaa
mov
dec
arpl
xor
cli
mov
and
push
push
dec
mov
pusha
dec
movsb
in
or
dec
dec
xchg
repz
mov
mov
cs
jg
lahf
mov
cmp
xor
ja
add
push
xor
fwait
aam
push
rorb
lods
pusha
inc
out
cmp
xor
cltd
adc
inc
int
and
jmp
hlt
cltd
ss
jge
jmp
into
call
fstpt
and
rcl
sub
push
dec
push
mov
inc
dec
push
mov
int3
jecxz
xchg
and
cmp
inc
call
pop
cmpsl
aas
inc
push
gs
ficoms
cmp
pop
je
jmp
in
sub
sub
push
sti
adc
test
and
rcr
mov
push
adc
sub
dec
pop
fldcw
or
int3
js
stc
scas
sub
xchg
sarl
cmp
cli
or
int3
sub
daa
cmp
test
xchg
test
hlt
inc
sbb
iret
cli
testl
xlat
or
mov
pop
sub
inc
aas
cmp
sub
shld
insl
mov
push
mov
lods
pop
dec
pop
inc
mov
mov
or
fnstsw
cmp
dec
pop
and
fneni(8087
mov
lret
sbb
pop
aad
cli
add
cmpb
insb
call
in
cld
outsb
adc
cwtl
int3
push
xor
xchg
pop
lahf
dec
enter
xor
popf
inc
das
scas
mov
and
jp,pt
and
lock
jg
cwtl
sbb
out
push
sbb
ficoml
jb
push
pop
dec
ss
add
add
sub
aad
xor
loop
inc
xchg
rclb
push
push
jns
pop
ficompl
cmpb
xor
andl
sbb
sub
jge
bound
add
jne
push
and
jecxz
cmp
push
sbb
int3
cmp
mov
subl
xchg
addr16
push
and
out
or
icebp
xorb
jge
push
scas
adc
lock
icebp
jns
mov
sub
cmpsl
pop
jl
jb
hlt
jmp
shll
cld
mov
lret
sbb
or
sub
add
and
int
mov
mov
sub
dec
fmul
sti
cmpsb
dec
and
push
das
xor
movsb
sub
dec
daa
addr16
in
fdivrl
dec
lret
int
shll
push
fisubrs
inc
lea
add
jnp
jecxz
adc
imul
xchg
and
sbb
jns
cwtl
xor
popf
adc
ret
std
sub
push
adc
jg
int
mov
fs
mov
cmp
test
ficomps
je
pop
inc
jecxz
or
pop
ret
lahf
data16
push
mov
mov
dec
fstl
pusha
inc
adc
mov
adc
adc
mov
pop
mov
and
or
or
mov
cmp
sub
add
inc
inc
insb
adc
popa
mov
pop
sbb
jecxz
mov
xchg
stos
adc
repnz
mov
push
addb
lea
int
dec
xchg
movsb
xchg
andl
lds
js
and
test
test
shlb
mov
sbb
loope
push
stos
jo
push
add
test
jb
xchg
fs
cmp
mov
in
jecxz
les
es
call
lret
je
jb
pop
mov
and
lods
sahf
jno
aam
rol
test
add
movsl
mov
shll
sub
adc
add
adc
sbb
sub
pop
imul
fs
lods
lds
xchg
ljmp
xchg
data16
imul
call
hlt
aas
xor
mov
popf
aam
xchg
dec
sub
inc
es
xchg
push
test
int
xor
imul
in
mov
das
inc
and
mov
mov
ljmp
mov
sub
jp
mov
mov
cmp
xor
insb
sbb
cmp
mov
sub
lret
cli
int
pop
add
mov
dec
mov
push
add
xor
xchg
mov
enter
xor
jo
mov
push
lock
or
jne
cmpsl
lret
lods
mov
fwait
cld
and
sbb
neg
pop
int3
or
call
mov
lahf
fisttps
mov
lahf
and
hlt
das
push
popa
lods
sti
cmpsb
lahf
cmp
lea
cltd
cmp
xchg
inc
cwtl
push
or
out
aad
push
hlt
dec
out
cmpsl
test
dec
add
popa
pop
mov
iret
out
test
hlt
pop
lods
aam
push
iret
orb
add
lret
scas
or
dec
ds
dec
stos
movsl
cmpsl
or
jno
call
lods
iret
add
jno
sbb
push
lods
inc
xchg
cwtl
inc
ret
sub
cs
adc
push
jns
mov
adc
arpl
sbb
call
cmp
shr
xchg
hlt
rol
mov
out
cli
clc
lahf
je
arpl
jp
xchg
mov
sbb
xchg
in
aaa
push
insb
adc
add
mov
xchg
dec
pop
test
xchg
mov
push
jg
subl
ja
popf
ja
xchg
xchg
imul
jae
add
mov
and
push
xchg
out
dec
orl
jle
iret
nop
xchg
insl
hlt
test
mov
xor
sbb
aam
icebp
pop
dec
mov
fcoml
shll
in
adc
sbb
popa
notb
popl
mov
cmp
xor
sti
notb
mov
push
mov
inc
pop
adc
mov
jbe
pop
dec
lahf
mov
cltd
scas
test
out
test
push
xchg
ror
imul
and
xchg
jl
shll
cwtl
aam
pop
xor
pop
mov
ror
mov
mov
test
or
sub
sub
sub
sub
mov
dec
scas
int
negb
push
jge
mov
sbb
stc
add
fucomi
ret
mov
xchg
xor
movswl
leave
mov
or
sbbl
push
and
xchg
cmp
stc
repz
pop
loopne
insb
push
add
jb
jnp
cli
dec
mov
and
inc
stos
mov
xchg
xchg
mov
and
into
int3
or
pusha
jmp
pop
add
cmpsl
pusha
jb
xor
and
mov
outsl
cwtl
push
jno
pop
xchg
iret
test
movsb
push
and
loop
mov
mov
mov
jb
fwait
mov
pop
hlt
ljmp
pop
and
mov
xor
imul
scas
pop
imul
lock
sti
add
jns
or
inc
cmp
jmp
hlt
dec
adc
xchg
push
gs
mul
jbe
jl
cwtl
data16
mov
mov
sbb
mov
nop
hlt
das
insl
aad
and
jle
aas
popf
mov
js
cmc
or
push
pushf
cmc
mov
mov
and
pop
mov
mov
popl
shlb
stc
xor
mov
in
xor
adc
jmp
pop
aas
sub
xor
push
mov
push
lock
insl
out
mov
lret
pop
xchg
notb
inc
or
xchg
jns
pop
les
cmc
sbb
inc
gs
pop
pushf
dec
sbb
and
cmp
shlb
jo
roll
in
mov
in
cmpl
mov
adc
and
das
in
adc
ficomps
xchg
jg
fildl
fiaddl
popf
cmc
jmp
mov
sbb
push
pusha
movsb
add
lock
pop
cs
mov
pop
cmp
jns
dec
xchg
fs
push
nop
pop
mov
mov
jnp
adc
mov
pop
inc
mov
in
lcall
aas
xchg
xchg
sbb
punpcklbw
xchg
out
repnz
jbe
fldl
mov
fldcw
dec
mov
clc
inc
lret
sub
test
test
push
or
xchg
mov
andb
jmp
ds
in
sub
jmp
inc
inc
fstps
pop
xor
jne
and
dec
cmp
repnz
adc
sbb
mov
fdivs
cmp
in
xor
shrl
xor
and
pop
jp
jae
loope
mov
lods
adc
sub
repnz
fwait
xchg
subb
mov
mov
stos
xlat
mov
mov
jecxz
ret
stos
lret
gs
shrl
inc
loop
fbstp
push
xchg
jae
mov
popa
dec
push
pop
out
cmp
adcb
xchg
daa
cmp
pop
fsubrs
call
or
xchg
adc
push
iret
stos
gs
mov
into
or
mov
dec
clc
jge
push
popa
push
push
idivb
ret
inc
mov
fisubrs
out
add
add
les
push
mov
mov
arpl
mov
fimuls
int3
pop
adc
call
dec
mov
cmpsb
jo
mov
push
xor
dec
jns
pushf
mov
flds
es
pusha
push
sarb
adc
lods
fistpl
push
mov
mov
mov
xchg
jnp
cli
in
or
ljmp
fldt
testb
ret
add
cld
jmp
mov
cltd
sub
pop
add
sbb
pop
xor
adc
scas
fists
hlt
inc
mov
ja
lock
decl
mov
mov
ljmp
sbb
cmc
xchg
adc
inc
dec
dec
cmc
aas
sahf
xor
inc
adc
les
inc
pop
push
daa
shrl
add
dec
daa
fcmovb
inc
shlb
stos
jp
xchg
cwtl
divb
out
jmp
pop
mov
pop
pop
mull
aas
shlb
inc
jl
cmc
cmpb
repz
sbb
dec
aad
cmc
dec
test
inc
lods
pop
xchg
int3
jno
orl
int3
cmp
push
pop
loope
sbb
popa
sub
sti
adc
cld
dec
jns
imull
xor
jno
dec
out
or
loop
lock
sub
fsubl
pop
pop
ja
lahf
cmpsb
aad
cmp
loopne
dec
test
jnp
dec
and
dec
insl
and
bswap
xchg
sbb
cs
aad
lock
movl
sub
adc
xlat
cmpsb
stos
mov
adc
jbe
roll
inc
rorb
jns
sub
pop
cld
pop
ficomps
mov
sbb
push
mov
testb
dec
sub
cmpsb
sti
adc
dec
mov
mov
push
fldl
loopne
xor
sub
mov
fwait
cmp
mov
mov
sti
push
push
lahf
jge
cmp
jge
fs
cmpsl
and
jle
in
lock
add
adc
fistpll
cmpsl
and
dec
jns
clc
mov
xchg
or
loope
pusha
inc
scas
jae
push
sbb
jns
or
fidivrl
stos
icebp
mov
sbb
adc
sbb
xchg
jae
idivb
xchg
scas
pop
ret
or
push
mov
push
fidivl
add
loop
icebp
pushf
add
push
pop
icebp
pop
xchg
lret
lcall
mov
orl
dec
xchg
lahf
add
out
insl
mov
or
add
rorl
out
jge
pop
lret
pop
inc
xor
insb
pop
push
int3
xchg
test
test
xchg
adcb
outsl
adc
lahf
sti
out
stos
push
sub
je
ret
shlb
mov
std
repnz
js
je
je
inc
pop
mov
xchg
mov
sub
icebp
cmp
jmp
dec
and
adc
jne
push
add
mov
leave
xchg
test
push
sbb
in
imul
pushl
dec
add
mov
inc
rcl
mov
daa
mov
jnp
lcall
jnp,pt
out
dec
pop
push
mov
pop
outsl
shrb
fwait
mov
out
fwait
sbb
ljmp
mov
in
test
mov
popa
scas
push
pop
sub
mov
xchg
ficoms
imul
aas
mov
cmpsl
and
hlt
sbb
mov
adcl
mov
dec
sbb
inc
fbstp
lea
enter
mov
sbb
xchg
and
fs
mov
push
popf
rcrb
lods
enter
ja
enter
add
stc
adc
leave
jmp
cmp
cmpsb
sub
pop
enter
lret
mov
ficompl
inc
adc
sbb
dec
cmp
cmp
outsl
jns
into
jne
scas
fcoml
loop
in
je
js
test
xchg
imul
mov
or
out
in
ljmp
sub
dec
add
pushf
dec
push
xor
or
pop
push
scas
push
jnp
arpl
push
push
call
cmp
add
jmp
fcomp
jecxz
addr16
int
loopne
mov
mov
add
pop
and
mov
xchg
std
pop
rolb
or
sbb
or
xchg
pushl
jns
and
push
lods
sub
fidivrs
xchg
outsl
lock
push
mulb
inc
xchg
inc
outsb
shll
sub
ss
add
scas
xor
addr16
inc
inc
cmpl
mov
lods
xchg
inc
imul
mov
stos
mov
lret
clc
insb
inc
jmp
outsb
insb
fbstp
loope
add
jnp
cltd
call
loopne
iret
push
in
jge
cmp
fs
push
lret
cmp
xchg
insb
jb
lods
sarb
fwait
xchg
cwtl
and
je
dec
mov
cmp
les
dec
pop
icebp
in
adc
mov
xchg
xchg
sti
xchg
jg
jne
pop
add
mov
mov
mov
push
inc
adc
nop
addb
cmp
lods
popa
out
add
aad
push
je
inc
sbb
mov
push
ret
inc
sbb
imul
mov
pop
jo
or
js
gs
mov
and
mov
adc
mov
sbb
inc
lods
mov
fbld
jmp
mov
pop
push
and
aaa
mov
mov
sbb
bound
fistps
dec
das
arpl
imul
xor
fs
lds
fsubs
fdivrs
mov
jne
sarb
ret
pusha
lret
cli
adc
in
xlat
cmp
cmp
int3
pop
test
sbb
cmp
adc
insl
add
scas
fs
mov
mov
repz
popf
dec
or
push
mov
cmp
test
arpl
scas
cmp
push
shl
mov
in
pop
pop
imul
xchg
dec
fstl
jl
add
push
xchg
outsb
mov
scas
and
sub
xchg
sub
mov
insl
pop
xchg
ljmp
push
and
jle
jle
icebp
out
sbb
push
pop
pop
ret
jo
and
add
xchg
test
inc
leave
pop
pop
or
outsl
jle
inc
pop
into
fwait
and
dec
cmp
cmp
dec
hlt
not
mov
das
repz
sub
divb
insb
lods
shlb
jbe
adc
fldcw
test
popa
dec
sbb
xor
imul
sub
jbe
fstpl
pop
mov
adc
push
out
fisubrl
jl
xor
adc
fwait
insb
pop
mov
pop
fnstcw
xchg
in
lahf
push
cmpsl
mov
xor
mov
cmc
pusha
jae
push
das
aad
imul
push
stc
sbb
add
lcall
jle
sub
aaa
jp
int3
popf
xor
dec
inc
mov
sbb
bound
jbe
ret
pop
mov
call
das
hlt
inc
fs
jge
in
pop
stos
fmul
into
arpl
adc
pop
mov
inc
js
aaa
repz
jb
insl
add
jl
cmp
xchg
cmp
mov
int
jle
ds
or
or
xchg
push
adc
mov
inc
mov
mov
aam
push
adc
xchg
test
sbb
scas
loope
xchg
in
rorb
jb
or
ret
cmp
pushf
pop
lret
jo
les
sti
xor
fcmovnbe
cmpsb
adc
add
and
aam
pop
pop
jb
sahf
bnd
addr16
jmp
xor
test
adc
mov
push
mov
jecxz
and
push
mov
inc
inc
aad
sbb
push
out
in
inc
ja
sti
push
cld
or
push
testl
and
enter
mov
and
iret
shlb
aas
pop
adc
mov
inc
mov
sbb
jns
sbb
mov
imul
push
neg
jnp
add
push
pushf
mov
les
jnp
aas
pusha
sbb
mov
lret
fisttps
fwait
xchg
pop
cld
xchg
or
mov
lea
fldt
outsb
aas
pop
nop
mov
xchg
push
lcall
pop
ficoml
movsb
sub
mov
pop
xor
xor
rorl
dec
add
bound
scas
dec
xor
shlb
xor
add
mov
jns
jno
movsl
js
sbb
iret
stc
mov
lock
hlt
fldcw
fs
and
jp
lcall
insl
or
xor
mov
add
pushf
mov
pop
scas
dec
ret
add
sbb
fcmovb
or
xor
loopne
mov
or
jl
rep
stc
les
sbb
add
cmp
jmp
sub
inc
ss
mov
jno
pop
sub
pop
dec
sbb
mov
sbb
xchg
mov
lahf
inc
xchg
loopne
mov
shll
test
jno
icebp
mov
je
dec
imul
insl
xor
rorb
fisubl
loopne
es
cs
xchg
jns
mov
or
mov
add
dec
xor
ss
cmc
lret
int3
push
out
repz
lods
shl
push
imul
imul
push
pop
ret
xor
mov
jecxz
xchg
ret
sub
mov
aas
sbb
popa
xor
shl
dec
scas
mov
sbb
lods
cli
inc
mov
cmp
stc
adc
mov
mov
dec
jg
add
pop
cmp
movsb
pop
loopne
pop
fldenv
loope
mov
xchg
repz
jecxz
ret
sbb
push
call
nop
test
push
mov
hlt
js
fcomip
ror
loope
xchg
sub
or
xchg
cli
dec
cmp
loope
cmpsb
adc
mov
rclb
inc
stc
in
inc
or
adc
adc
cmp
gs
fistpll
mov
lret
jbe
pop
or
outsl
gs
sahf
sub
dec
jge
add
lret
dec
test
data16
cwtl
movb
out
in
jae
mov
xor
scas
mov
push
call
adc
subb
xor
shlb
sarb
adc
fsubl
add
inc
mov
xor
push
fimull
pop
mov
xchg
cmp
mov
lea
rorl
popl
shrl
and
mov
mov
mov
jae
inc
push
adc
xor
insl
xchg
imul
xchg
cmp
push
in
xchg
mov
xchg
push
sub
pop
loop
cmc
fadds
rorl
lcall
jae
and
lods
push
sbb
gs
sbb
dec
aaa
out
test
sahf
pop
push
repnz
lret
dec
cmp
push
pop
aad
cmp
lea
faddl
adc
cmp
sbb
inc
mov
lea
aaa
mov
cmpsb
cmc
xlat
aam
mov
mov
mov
mov
js
cli
fsts
push
inc
xor
and
jae
rcll
cmc
stos
std
mov
jmp
sahf
movsb
xor
imul
cmp
xor
ds
mov
iret
adc
cs
push
ljmp
xor
mov
stos
cmpsb
mov
xlat
and
lea
inc
nop
movsb
cli
cmc
pop
inc
repnz
dec
inc
aaa
adc
in
push
push
rclb
aad
inc
inc
inc
arpl
movsl
aas
not
or
mov
mov
add
fs
int
push
push
cs
pop
or
push
addl
out
idivl
ret
mov
pop
pop
xchg
sbb
and
mov
int3
xchg
out
inc
mov
pop
dec
xor
je
sub
movsl
fs
add
push
mov
icebp
and
sub
or
leave
imul
or
data16
xor
sub
jne
sti
shll
dec
scas
mov
sub
sub
mov
gs
out
xchg
ret
adc
sar
pop
sbb
movsb
mov
arpl
jge
add
jp
jno
stos
into
ss
pop
and
jno
xor
ficompl
mov
cld
mov
je
ror
inc
es
es
inc
and
lock
push
pop
inc
sbb
mov
jg
jmp
pop
sbb
sahf
add
inc
sbb
sbb
sub
mov
inc
addr16
std
push
mov
jecxz
imul
popa
cmpsl
xor
pop
xchg
or
fldcw
and
sbb
xchg
int
loopne
icebp
gs
sti
push
das
mov
push
hlt
clc
test
stos
pop
mov
bnd
push
mov
faddl
xchg
jle
add
std
adc
sub
ds
dec
inc
inc
jg
xchg
xor
mulb
loope
cmp
push
inc
orb
sbbl
das
in
aaa
lods
adc
xchg
inc
inc
fsubs
adc
pop
aaa
incl
mov
xor
and
test
dec
mov
in
and
ljmp
out
ja
mov
push
sbb
and
xchg
jecxz
cmp
xor
ficoms
lods
adc
enter
es
mov
fnsave
sub
lock
xor
cld
mov
lcall
int3
jmp
add
popf
jmp
pop
and
shl
adc
addr16
jbe
mov
dec
adc
insb
pop
ds
xlat
in
das
push
cmp
fistpl
xchg
and
int
add
push
out
sub
pop
inc
ret
test
test
dec
daa
out
lock
in
push
out
das
mov
sahf
dec
push
push
xorl
xchg
jl
add
cs
mov
cli
mov
scas
pop
fwait
xorb
pop
ljmp
dec
add
in
es
testb
cmpsl
inc
mov
andb
pop
pop
outsl
xchg
dec
lret
cmpsl
inc
stos
sahf
jb
or
ret
adc
lret
out
xor
incb
stc
ljmp
loop
sbb
sbb
or
push
insl
xor
rcl
push
and
dec
pushf
aad
ja
sbb
xor
jecxz
jecxz
push
xlat
push
adc
fs
xchg
jg
stos
lret
stos
xlat
mov
adc
pop
sub
sbb
or
push
enter
fiaddl
in
and
imul
or
cwtl
fcmovne
jnp
bound
fs
xlat
lods
sahf
mov
in
cltd
jp
ljmp
xchg
pop
mov
lcall
cmpsl
lret
sti
xchg
cmc
filds
ja
mov
loopne
fnstcw
clc
dec
clc
sti
adc
sub
gs
bound
dec
mov
aaa
into
mov
and
inc
inc
dec
xchg
push
movsl
out
pop
into
add
cld
mov
lahf
shrd
dec
lock
lods
popf
sub
push
fimuls
or
aaa
popl
sarl
cld
insl
arpl
jge
sub
push
pushf
das
imull
pop
clc
jmp
add
xorl
roll
int3
adc
popa
push
addr16
sub
pop
aad
xor
aam
leave
jp
aaa
inc
es
cwtl
cltd
fstpl
fldl
pop
jmp
sbb
mov
sbb
mov
or
ja
jnp
dec
mov
jmp
mov
push
into
jo
mov
roll
pop
or
in
sub
mov
inc
mov
mov
jecxz
mov
mov
mov
add
sbb
aas
push
sarl
ret
shlb
pop
jo
in
dec
push
div
data16
je
gs
mov
and
popf
jg
add
fnstcw
call
xor
add
mov
rcl
jp
lods
popa
inc
cld
out
loope
jle
fstl
add
push
sub
shr
cmpsb
add
push
mov
mov
add
cli
popf
mov
mov
rcrb
inc
xor
or
lea
lret
popf
sarl
inc
cmp
jmp
inc
pop
mov
mov
dec
adc
mov
cmpsl
iret
gs
cmp
lods
sbb
xor
rolb
mov
jno
cli
mov
sbb
inc
xor
test
push
cmpsb
mov
add
xchg
repz
outsb
es
jp
adc
je
adc
mov
mov
sub
or
cmc
aaa
mov
std
enter
std
fstl
daa
or
pop
ljmp
sbb
adc
add
test
test
jg
mov
lea
pusha
mov
lret
or
rcl
jno
add
mov
pusha
xchg
sbb
jle
stos
jne
push
mov
mov
es
iret
mov
mov
out
into
imul
nop
hlt
inc
cmp
fldenv
mov
insb
aas
pop
add
std
lret
arpl
repz
push
arpl
adc
jle
cli
sbb
cmp
std
lods
ss
or
rcrl
rclb
int3
mov
sti
popf
jno
push
mov
lods
stos
push
adc
testb
les
pop
pop
inc
ficompl
sub
jle
mov
mov
push
mov
test
lea
jne
pushf
dec
outsb
and
decb
mov
pop
mov
leave
adcb
mov
js
jns
cmp
loopne
ret
dec
mov
adc
jge
xchg
adc
mov
cli
sbb
std
insb
mov
test
icebp
ss
rcrl
mov
hlt
mov
loopw
stc
ja
in
sarl
ja
xchg
imul
mov
jl
jge
pop
push
jae
push
ret
mov
cmpsb
or
xchg
outsl
ret
inc
mov
fldenv
add
add
add
pop
gs
mov
sbb
aaa
in
out
scas
xchg
call
mov
mov
shrb
xorl
testb
pop
pushf
xchg
loop
pop
test
inc
enter
add
mov
popa
cmp
das
mov
cld
imulb
push
cmp
daa
and
mov
pop
pop
mov
inc
dec
movsl
bound
or
mov
mov
mov
push
or
insb
inc
aam
clc
or
push
xor
inc
aad
xor
pop
pop
insb
fs
pop
mov
mov
jo
inc
sub
xchg
les
jnp
mov
xchg
and
das
pop
inc
sarl
cmpsl
ss
stos
jg
decl
mov
inc
xor
addr16
addr16
sub
mov
inc
dec
subl
and
jmp
xchg
stc
xchg
xor
stc
add
or
out
in
cwtl
mov
jb
or
add
and
cmp
xor
dec
or
rcll
mov
cmc
cwtl
fisubrl
sub
xchg
or
or
orb
arpl
mov
mov
sbb
push
jp
push
lods
inc
jp
add
mov
test
xlat
icebp
leave
pop
dec
scas
loopne
push
in
daa
dec
in
repnz
pop
aam
cmp
pop
insl
adc
sbb
xor
and
pop
ror
insb
sub
std
mov
xchg
adc
mov
pop
insl
dec
ret
test
cmpb
scas
in
or
test
xchg
mov
mov
mov
add
shrl
mov
gs
cltd
in
sahf
or
cld
pushf
cltd
or
nop
xor
out
xor
sub
neg
pop
ret
test
ffreep
inc
cmp
lods
test
sarl
xor
pop
rcr
sbb
cmp
push
pop
cltd
int
mov
mov
dec
adc
fisttpl
sub
repnz
js
mov
sub
add
inc
pop
ja
sub
xchg
mov
mov
cmpsl
jno
das
ficomps
jo
in
or
adc
cmpsl
shl
push
jle
ret
nop
jmp
cltd
es
xor
insb
daa
sub
loop
lret
add
cmpsb
leave
push
xor
push
leave
neg
push
mov
mov
jb
test
pushl
roll
cwtl
and
pushf
addl
push
adc
js
xchg
shr
adc
xchg
jecxz
pop
lcall
negl
jb
sbb
cmc
sbb
inc
test
enter
jg
mov
pop
mov
jnp
and
or
push
nop
shrb
xchg
dec
xor
push
dec
jge
jae
test
xlat
adc
cmpsl
loope
sti
hlt
pushf
sbb
into
in
inc
fsubs
mov
mov
filds
inc
pop
and
or
pop
mov
mov
cmp
push
iret
push
scas
lods
test
mov
mov
pop
jns
cmp
xor
inc
test
add
aas
das
inc
dec
push
dec
jg
mov
subl
jp
mov
xchg
shrb
pop
jg
insl
sbb
mov
jmp
adc
xor
add
popl
inc
add
aad
movsb
and
sub
mov
jae
les
pop
jnp
or
out
mov
sub
movsb
stos
pop
loope
sub
jo
loop
sbb
or
dec
adc
cmp
inc
leave
push
testl
xchg
push
movsl
jns
mov
xchg
mov
ljmp
lret
push
inc
sbb
jle
shll
movsl
and
pusha
std
call
sub
aad
jle
adcl
outsl
jg
or
dec
lds
gs
push
repnz
inc
sbb
jecxz
and
daa
jo
lahf
mov
sbb
mov
xchg
pop
repz
outsl
fdivs
in
cmp
jo
ss
arpl
or
in
clc
add
push
divb
and
stos
inc
pop
divl
push
ja
arpl
lds
pop
or
pop
sarl
call
out
pushf
repz
imul
xchg
lcall
push
imul
loop
lds
bound
add
std
mov
cmp
push
jmp
js
push
xor
mov
ret
ja
mov
jnp
adc
push
add
mov
mov
pop
jp
sub
or
cmp
fsubs
mov
xor
fsubrs
sub
add
sub
fs
add
inc
les
movsb
or
icebp
mov
test
dec
popf
les
je
bound
and
nop
int
mov
out
inc
scas
sbbb
pop
xchg
lret
fs
int
cmpsb
push
sub
stos
mov
and
fldcw
rcl
mov
data16
xlat
jmp
aam
pop
pop
jl
jg
iret
mov
adcl
mov
add
xchg
fdivs
jne
clc
dec
incl
lret
mov
xlat
data16
pushf
sbb
je
mov
js
xor
push
lods
inc
jb
test
inc
xchg
pop
push
cmp
cmpsb
or
sahf
lret
mov
mov
ss
pop
shr
jno
lock
pop
jle
add
insb
fisttps
xor
inc
call
out
ret
sub
jo
iret
xchg
test
mov
dec
push
mov
sbb
dec
les
jae
xchg
test
insb
pop
sub
mov
mov
push
pop
fstpt
cmp
fmull
sub
into
std
xchg
cmp
daa
push
aas
bound
mov
in
cmpl
dec
fisubrl
adc
mov
push
add
xchg
cmpsl
loop
adc
cld
mov
repz
inc
mov
adcl
dec
xor
jno
and
dec
pop
into
pop
lods
rcrl
into
jo
lods
loopne
jl
mov
adc
outsl
xchg
lret
cmc
test
mov
fbstp
xor
pushl
aaa
imul
test
pop
lahf
test
aaa
addr16
aam
jnp
jg
shl
xchg
sti
dec
rorb
xor
pusha
xor
pusha
rcrb
inc
ret
cwtl
scas
xor
js
jge
inc
movsb
mov
cmp
xchg
or
adcl
leave
outsb
mov
ret
in
imul
push
mov
adc
push
enter
and
sarl
pop
clc
fs
and
dec
mov
gs
xchg
fmul
nop
jmp
mov
outsb
pop
fidivs
stc
dec
enter
mov
push
jcxz
pop
dec
push
mov
xchg
ds
ja
inc
cmp
int
imul
add
stos
enter
xor
pop
pop
pop
mov
sub
in
outsl
test
bound
fucomi
rcrl
out
push
pop
jnp
sbb
mov
pop
ss
pop
mov
xor
or
add
shll
pop
loopne
js
add
inc
jne
push
adc
test
imul
mov
insl
and
iret
mov
and
and
dec
rclb
insl
cmpsb
mov
sbb
push
dec
mov
cwtl
cwtl
cmp
scas
outsl
jp
mov
gs
gs
push
sbb
push
sbb
aas
mov
and
fistl
lds
in
imul
xchg
stc
jb
call
push
loope
pop
cs
sbb
inc
ss
popa
mov
leave
cmpl
mov
sub
adc
and
out
in
imul
mov
cwtl
mov
cli
mov
and
inc
pop
cmc
inc
call
int3
je
imul
xchg
jo
sub
push
jp
xchg
andl
rolb
scas
xchg
and
mov
lret
movsb
cmp
mov
xor
pop
fwait
cmp
xchg
inc
int
jp
mov
aad
in
jne
push
inc
rcrb
jnp
pop
loopne
aas
scas
pop
nop
loopne
aam
insb
daa
and
scas
aad
ret
adc
fwait
repz
and
cli
dec
jb
loop
jge
lods
push
add
pop
xor
add
stos
xchg
adc
add
push
cmp
mov
not
mov
push
ret
pop
push
dec
push
aad
xchg
adc
mov
imul
sbb
pusha
fwait
bound
sub
stc
adc
mov
iret
lea
or
inc
xchg
inc
or
mov
mov
dec
inc
sbb
sub
pop
std
mov
jp
clc
or
dec
dec
es
push
mov
sub
dec
stc
push
pop
push
push
sti
pop
addl
shll
adc
mov
sbb
test
fldenv
xor
pop
dec
add
and
inc
popf
leave
imul
loopne
dec
jle
push
pop
arpl
push
inc
add
xchg
cmp
mov
ret
or
jae
mov
dec
and
cltd
dec
inc
out
cwtl
call
hlt
add
add
mov
je
rclb
imul
int3
mov
fildl
cmp
sub
or
adc
push
push
stos
xchg
and
test
iret
push
fwait
repnz
mov
test
mov
or
xchg
xchg
fimull
mov
jle
lock
repnz
leave
push
sbb
or
and
mov
mov
jge
aad
test
lds
outsb
pop
imul
and
scas
pop
daa
and
add
mov
cmc
js
xor
mov
in
movsl
mov
inc
dec
in
cmp
and
and
in
and
add
push
orb
mov
jge
cwtl
adc
jnp
aaa
push
jnp
pop
adc
pop
iret
mov
fs
cmp
into
stc
aaa
pop
sbb
push
or
stc
pop
jmp
test
pusha
push
enter
adc
ja
in
sbb
add
popa
call
lock
ret
pop
stc
add
push
not
shlb
cltd
or
mov
pop
sub
fisttpll
inc
dec
ds
add
call
dec
iret
imul
jecxz
std
sahf
xchg
mov
push
mov
hlt
adc
mov
std
addl
loop
bound
xor
pop
cmpsb
jno
mov
mov
xchg
icebp
mov
rclb
xchg
lret
adc
mov
mov
test
lret
cld
xchg
ja
push
lods
xor
sub
mov
mov
dec
fstps
inc
xor
mov
mov
and
ds
inc
xchg
fadd
jecxz
jmp
xchg
push
cmpsb
dec
mov
pop
add
dec
jae
mov
add
mov
int3
pop
cmp
add
ds
pushf
and
in
addb
sub
sbb
cli
mov
xchg
leave
out
xchg
sbb
xchg
mov
out
mov
push
jae
dec
add
pop
push
cmp
popf
ljmp
aas
nop
mov
idivb
jge
cmp
or
add
stc
adc
xor
ret
enter
jb
jne
mov
sbb
ss
mov
stos
mov
lods
sbb
push
add
shll
xchg
jg
cmp
stos
cmp
xor
out
mov
mov
adc
pop
sub
mov
in
ds
mov
out
adc
pushf
push
xor
xchg
mov
mov
push
arpl
je
testl
push
lret
sub
repz
ficomps
xchg
adc
inc
push
aad
pop
pop
or
stos
cmp
push
jnp
xor
dec
out
rolb
cmpl
jg
xchg
ds
shl
popa
xchg
xchg
adc
jnp
loopne
and
int3
xlat
lea
ret
inc
dec
adc
ficomps
mov
mov
jb
or
lods
mov
mov
ret
enter
mov
jle
mov
rcll
jae
out
mov
push
sti
outsb
iret
test
aam
aaa
xchg
adc
xchg
pop
js
pop
inc
push
fldt
mov
sub
cmp
jne
cmp
cmpsl
rcrl
cwtl
mov
xchg
fdiv
das
int3
lcall
inc
ret
add
and
push
fsts
inc
dec
and
inc
popa
dec
xor
repz
sahf
add
daa
jns
inc
repnz
fucom
pushf
xchg
fimull
push
mov
mov
pop
pop
cmp
mov
dec
jns
ds
inc
xor
push
jmp
lahf
adc
mov
rclb
aam
sbb
test
add
jle
cld
jg
sbb
sub
xchg
sub
inc
loop
pop
adc
sub
testl
daa
ss
xchg
mov
test
dec
cs
pop
adc
decl
cli
add
inc
inc
mov
out
add
mov
pushf
mov
cmp
add
jp
cmp
adc
stos
lea
scas
ljmp
test
call
lret
out
mov
push
stos
dec
flds
mov
and
inc
bound
cltd
sbbb
sbb
es
and
enter
loopne
sbb
outsb
sti
iret
mov
adc
cld
cmp
sbb
mov
mov
imulb
pop
rcll
out
popf
or
fildl
leave
rcr
test
loopne
dec
jne
push
and
lret
mov
push
andb
mov
dec
mov
repnz
push
and
js
jnp
adc
sub
xchg
add
jno
sub
and
xchg
xor
sti
test
cmp
popa
icebp
fldt
mov
or
in
cwtl
xchg
mov
jb
mov
call
sti
stc
adc
sbb
cmp
adc
ljmp
int3
sub
jno
mov
xor
neg
test
mov
sahf
xor
cli
jle
jp
mov
addr16
movsb
mov
xor
mov
loop
push
insb
xor
test
cld
insl
rolb
pop
adc
fs
mov
adc
outsb
adc
loope
mov
lock
xor
in
inc
test
leave
into
pop
loope
mov
movsb
stc
fdivr
mov
or
and
out
adc
jl
xchg
mov
hlt
clc
inc
xor
lahf
mov
mov
adc
jno
cmp
iret
mov
add
push
xchg
jmp
jmp
loopne
fists
shlb
and
stos
mov
cmp
jb
test
add
fisubl
jl
xor
and
cmp
push
cmp
cmp
inc
jo
testl
sahf
repnz
lock
nop
jnp
test
dec
gs
jle
inc
sub
loopne
outsb
pop
rcrb
adc
pusha
cld
or
pop
add
mov
pop
adc
dec
leave
scas
andb
pop
ss
push
and
ds
mov
shr
cmp
fcoms
and
imul
mov
mov
stos
add
push
push
jp
lret
loope
shl
mov
cwtl
mov
out
mov
push
cmpsl
mov
lret
hlt
inc
cmc
xchg
cld
popa
add
jecxz
dec
push
jae
lea
jge
lret
out
or
dec
add
and
jl
das
sahf
jmp
bnd
out
sub
jg
imul
movsb
push
loop
mov
pandn
cwtl
dec
cld
mov
dec
popa
xchg
or
jmp
add
jg
cmp
mov
in
sub
fstl
popa
data16
rcrb
orb
ja
adc
pop
popa
push
mov
fcomps
cmc
xchg
pop
mov
xchg
or
int
push
inc
jle
ja
cmp
dec
in
rcrb
aad
jp
sbb
fistl
mov
fiadds
icebp
xor
adcl
js
cmp
add
xlat
and
rorl
movups
pop
sbb
mov
xor
adc
dec
test
rolb
xchg
sub
xchg
push
jmp
and
adc
popa
dec
loope
sub
adc
test
dec
mov
xchg
orb
xlat
loopne
nop
push
adc
stos
cltd
scas
mov
push
push
mov
in
fcomp
pop
pop
clc
loope
arpl
jp
xor
dec
sub
out
shll
fwait
pop
sbb
es
xor
mov
pop
lahf
rol
xchg
mov
je
out
jnp
lret
popa
loopne
imul
push
jge
ss
add
sbb
mov
leave
pop
test
adc
lods
xor
cmp
movsb
nop
xchg
insb
ret
outsl
cmp
subl
xlat
inc
adc
xor
adc
jae
sbb
cmp
sti
dec
ljmp
jo
pop
pusha
in
lock
inc
divl
hlt
or
dec
xchg
sub
or
scas
pop
nop
and
mov
cs
repz
mov
jle
in
mov
and
xchg
jne
xchg
push
sbb
adc
mov
mov
push
push
pop
push
flds
ffreep
pop
jnp
jnp
pop
sbb
sbb
cmp
test
aam
ljmp
movsb
loop
push
push
pop
xchg
test
mov
leave
add
push
cmp
addl
mov
xchg
ret
pop
cmp
sbb
push
clc
shrb
test
fdivl
mov
lret
mov
sbb
jb
jmp
mov
pop
add
cmp
inc
jle
and
aaa
and
cmpsl
push
enter
lahf
mov
adc
pop
movsb
push
aam
xchg
in
inc
xchg
inc
in
xchg
xor
test
jo
pop
out
push
push
inc
fsubrs
outsl
imul
gs
xchg
fisubl
fbld
inc
sub
pop
fisubs
mov
cmpl
mov
enter
aam
xor
jbe
shrb
ds
cmp
idivl
push
test
rcrb
xchg
jb
xchg
sti
add
mov
fadd
mov
jns
andb
jnp
xor
add
pop
cmp
push
ss
cltd
push
pushf
mov
or
arpl
pop
orl
imul
cmp
sub
push
cmp
mov
mov
fs
movsl
cmp
repz
adc
aas
xchg
loope
jp
add
pop
test
mov
adc
mov
mov
icebp
pop
mov
sbb
outsb
stos
cmp
add
out
mov
mov
mov
sbb
lods
push
mov
inc
bound
xchg
xor
mov
sbb
lods
popa
icebp
rorl
hlt
aad
mov
jns
push
cmc
pop
fmuls
push
xchg
inc
bound
mov
jl
int3
xchg
sbb
into
pop
std
call
js
or
add
testl
pop
xchg
and
fdivl
inc
cmp
mov
and
mov
dec
adc
push
dec
push
xchg
aaa
lods
jne
xchg
xchg
pop
cmpb
sub
rorl
jae
jl
call
pusha
mov
mov
jae
jg
rcll
sub
lret
jns
xchg
sub
xor
xchg
std
lods
aaa
jnp
mov
pushl
fcmovu
xlat
sahf
xchg
popa
xchg
xchg
cld
faddl
fcomps
push
cs
shrl
cwtl
dec
sbb
adc
andb
xlat
push
out
wrmsr
push
jbe
xorl
sbb
or
andb
mov
bswap
cmpsb
repnz
mov
add
sub
movsb
cwtl
inc
lea
push
movsl
in
std
out
lock
adc
aas
mov
cmc
cltd
dec
clc
cmp
fwait
mov
dec
shl
shl
aam
add
pop
outsb
sub
sbb
cs
xchg
and
sub
push
jge
out
pop
add
cltd
jbe
cmp
aas
cld
icebp
imul
mov
outsl
aas
lcall
test
insl
lret
cwtl
pop
inc
mov
or
add
lret
shr
in
adc
arpl
pop
enter
scas
lahf
sahf
dec
or
mov
pop
mov
shll
mov
sub
push
pop
fistpll
add
push
mov
frstor
mov
inc
jns
adc
push
fwait
dec
mov
jo
in
test
push
lds
pop
fnstcw
or
nop
jge
cmp
inc
insb
rcrb
cmpb
or
add
inc
dec
pushf
fcompl
out
arpl
inc
mov
xchg
sbb
cli
arpl
dec
mov
adc
dec
jle
push
dec
mov
in
xchg
cmp
xor
loopne
divb
inc
inc
mov
push
xor
and
into
int3
cs
std
scas
jle
jne
add
cmpsl
add
clc
test
bound
in
xor
cld
pop
ss
inc
push
or
xor
jge
xchg
push
test
lret
cbtw
out
jb
pop
popf
insb
in
mov
inc
imul
inc
jbe
adc
or
ds
jns
xchg
fcmovnu
dec
clc
push
test
xor
in
dec
into
cmp
std
pop
shl
and
fldcw
sbb
push
mov
cmpsb
cld
arpl
inc
sub
push
push
jp
mov
mov
jp
push
cmp
mov
scas
mov
popa
fwait
stc
icebp
jle
aaa
out
hlt
into
rcr
call
cltd
call
jae
dec
cltd
out
mov
xor
xor
outsb
movsb
out
jl
pop
or
cld
xchg
sub
sbb
or
lcall
or
mov
loope
lods
loop
imul
pop
sahf
pop
jbe
sub
pop
out
push
xlat
movb
fwait
cmpl
or
push
cmpb
or
fisttps
sbbb
lds
mov
mov
je
add
pop
or
mov
or
leave
pop
push
jl
std
lret
lods
cmp
push
pop
inc
stos
cmp
stc
xor
push
lods
sbb
imul
or
dec
frstor
scas
clc
sub
adc
data16
sbb
repz
push
popa
xchg
rolb
inc
sbb
xor
fisubrl
add
push
xchg
sti
xchg
inc
shlb
dec
ret
lret
mov
push
hlt
gs
fs
mov
push
sbb
xlat
cmp
or
sbb
pop
dec
jge
and
aaa
cltd
imul
stos
push
fwait
bound
pop
xchg
jmp
daa
pop
stc
adc
push
insl
pop
mov
scas
pop
ja
sub
vmovq
addr16
and
hlt
cmp
adc
mov
in
mov
roll
xor
add
bound
jbe
dec
test
pop
dec
add
mull
gs
scas
xor
outsb
repnz
test
adc
sahf
stos
xchg
mov
iret
inc
int
mov
jae
jg
stos
dec
rol
xchg
bnd
cmp
stos
pop
push
leave
or
lods
mov
adcb
mov
jns
or
dec
sub
pushf
mov
and
or
fcom
sub
iret
andl
dec
cmp
lods
mov
fnsave
je
adc
sbbb
push
pop
push
lods
jo
dec
andl
adc
arpl
mov
imul
or
cmp
test
sbb
sti
add
sub
negb
fwait
fstl
xor
aam
cli
leave
dec
jl
sub
fcoms
sti
out
adc
pop
mov
hlt
stc
mov
add
fwait
enter
fwait
dec
out
mov
in
ja
cmpsl
insb
dec
scas
push
mov
jp
and
ljmp
add
out
jmp
lock
out
jae
and
mov
inc
pop
mov
imul
dec
pop
or
push
sub
cli
gs
pop
lahf
xor
nop
or
jns
jns
or
gs
lock
imul
cmpsl
jns
sbbb
mov
and
nop
cmp
lock
pushl
in
xor
cmc
arpl
cwtl
call
sub
xchg
cld
jb
cmp
mov
sub
adc
sbb
pop
push
aad
xor
dec
xchg
jmp
leave
and
fmul
pop
jp
add
lahf
insb
insl
repnz
lcall
sahf
and
mov
addr16
xor
mov
gs
daa
inc
inc
inc
jmp
push
xchg
into
lods
lret
nop
pop
xor
insb
pop
and
jge
out
dec
pop
test
jl
ficoml
inc
ja
lea
insb
mov
scas
idivb
add
sbbb
push
test
push
add
orb
jno
fcompl
imul
mov
sub
aam
dec
lret
imul
mov
xor
mov
mov
je
cmp
push
and
test
rcrl
pop
jo
daa
mov
into
push
mov
push
cs
fdivs
insb
lods
pop
push
adc
pushf
stc
cmp
cmp
sbb
jecxz
lock
das
or
lock
pop
shll
jecxz,pn
dec
inc
movsl
mov
sub
int
subb
xor
pop
mov
inc
push
fwait
in
xor
lea
mov
or
stos
lret
cmp
adc
ror
pusha
inc
stos
mov
cltd
or
add
push
pop
repz
loopne
aad
push
pop
shlb
pop
out
outsb
add
jl
and
xor
fldt
stos
sub
and
cmp
rorb
sbb
out
lock
lock
imul
inc
mov
xlat
fcomps
pop
jb
dec
aas
jle
inc
ret
sub
jp
mov
inc
xor
xlat
repnz
movsl
out
fisubl
mov
int
gs
out
add
xor
mov
popa
sbb
stos
mov
enter
test
jb
pop
lock
fistl
xorb
test
repnz
and
sub
fdivr
jnp
ds
fsubrs
out
aam
lret
sbb
lcall
add
jge
jg
mov
cmp
push
push
stos
push
fs
ds
das
jmp
nop
mov
in
imul
push
sbb
mov
xchg
jno
orl
push
pop
dec
jg
pop
and
fidivrs
imul
xchg
in
mov
add
lret
dec
ljmp
mov
int
fdivr
scas
adc
push
push
jb
ljmp
push
scas
push
inc
repnz
jae
sbb
cltd
popa
out
cmp
nop
mov
xor
addb
xchg
ficomps
ja
mov
jle
popf
add
lock
adc
push
mov
fsts
xchg
adc
jbe
or
or
inc
sbb
hlt
fcomp
nop
repz
in
es
mov
cmp
addb
in
adc
cwtl
shl
scas
jno
cmc
mov
jne
mov
dec
ljmp
das
loopne
int3
flds
dec
push
cmpsl
fdivrl
out
and
mov
cmc
int
sub
fisubs
fidivrs
cmpsl
mov
mov
and
lret
pop
add
fstp
xor
loop
orb
js
leave
fs
movsb
fidivrl
sub
add
pop
xor
mov
sbb
out
gs
icebp
pop
dec
ret
sub
int
inc
inc
adc
shrl
xchg
adc
jbe
js
xchg
xchg
dec
xor
sub
jmp
jmp
cmp
or
lret
pop
cmpsl
arpl
lods
xchg
cld
sub
pop
sbb
pop
add
insb
imul
mov
imul
daa
inc
adc
outsl
mov
hlt
add
mov
xchg
rorl
mov
pop
mov
sti
fstpt
adc
xor
leave
repz
fsubrl
out
xchg
mov
aas
popf
push
cld
or
inc
rol
notb
xchg
cwtl
jp
jl
add
push
inc
psllq
fbld
fwait
jns
pop
movsb
sbb
mov
repz
cmp
xor
iret
dec
int
inc
out
cmp
xchg
dec
rorb
popa
int3
and
data16
hlt
mov
dec
cli
dec
sbb
xor
inc
push
pop
ret
enter
lods
lahf
andl
jg
leave
inc
lods
cmp
sti
stc
mov
repz
in
pop
mov
adcl
jbe
mov
cwtl
pop
or
xchg
sub
ja
jnp
jge
mov
ljmp
jne
mov
out
dec
or
stc
lret
mov
cmc
mov
sub
push
or
add
hlt
je,pt
add
inc
loopew
push
push
sub
or
add
cmp
aad
xchg
add
ljmp
inc
aad
int3
iret
je
pop
mov
and
cmc
ja
lods
test
xor
mov
mov
jae
dec
clc
insb
mul
and
jmp
xor
in
sub
cwtl
and
arpl
lret
dec
mov
in
jae
loop
xchg
sub
movsl
jns
xor
scas
test
mov
cmc
fistpl
push
xchg
aas
xchg
rcr
mov
test
or
cld
lea
cwtl
push
out
or
xor
xchg
clc
cmpsl
ret
cmpsl
pop
xor
mov
icebp
movsl
in
subl
push
fwait
jno
and
loopne
or
jno
aas
lcall
inc
xor
fstpt
dec
adc
jnp
ds
mov
xorb
or
lods
mov
je
add
imul
cli
cmp
cltd
jne
mov
pop
jp
push
mov
sbb
jo
loop
fcomip
sub
push
mov
lock
fstps
fwait
mov
repnz
addb
inc
push
daa
push
cwtl
scas
mov
test
sub
pop
push
dec
ret
movsb
into
xchg
stos
dec
push
test
dec
sub
jmp
pop
and
mov
test
push
stos
mov
sub
and
xor
xor
mov
les
cmpsl
fdiv
mov
in
xor
arpl
or
mov
dec
inc
add
fidivs
sbb
mov
cwtl
pushf
sub
sub
pop
add
mov
fs
aaa
pop
adc
ret
xor
andb
and
aas
xchg
mov
mov
xchg
add
add
mov
bnd
cmc
seto
das
dec
ret
push
xchg
stos
xorb
cmp
push
push
dec
add
inc
or
push
rorl
out
sahf
lret
jbe
mov
or
mov
mov
cli
xor
mov
mov
inc
aaa
movsl
dec
movsb
stc
ljmp
jae
mov
or
mov
lcall
inc
mov
sub
std
mov
push
ficoml
and
ljmp
imull
mov
pop
mov
cltd
jle
popl
mov
les
fld
xor
pop
aam
xor
xchg
mov
mov
pop
lret
jb
aaa
ror
into
stos
mov
insb
adc
movsb
sbb
mov
push
or
dec
jl
mov
dec
lea
mov
les
and
pop
mov
je
loop
fistpl
sub
fwait
cld
adc
push
popa
inc
mov
cmc
aam
and
ss
imul
pop
rorl
mov
mov
gs
div
pop
lcall
mov
or
mov
adcl
jo
push
sub
ds
shrl
enter
cltd
mov
cmp
lock
xchg
stos
fsubrl
insb
dec
lds
stos
les
lcall
stc
cs
jl
sub
cwtl
and
pop
sub
popa
rcll
xchg
xchg
ret
iret
int
sti
ret
call
inc
pop
push
orl
sbb
mov
push
scas
cwtl
jle
sahf
pushf
lahf
mov
outsb
adc
std
adc
pusha
ja
xchg
jne
xchg
sub
daa
push
jle
add
or
xor
xchg
movsl
mov
jle
xchg
out
mov
cmp
sbb
inc
add
inc
mov
xchg
jecxz
xlat
loopne
jb
sbb
mov
in
push
sbb
negb
mov
ds
test
cmp
sub
jg
leave
sahf
push
jno
mov
pop
adc
lock
add
mov
leave
sbb
test
xchg
mov
add
std
adc
jno
add
push
or
stos
in
std
jno
stos
adcb
sbb
dec
ds
jb
xchg
scas
mov
aas
outsl
shrl
jno
out
inc
inc
sbbb
sub
shr
or
out
jae
pop
mov
or
mov
in
insl
ja
dec
fsubl
mov
hlt
adc
rorl
pushf
sar
in
ss
xor
add
outsb
fstpt
test
xor
mov
and
mov
jns
pop
add
dec
xor
bound
and
or
ret
cmc
push
sbb
xchg
loope
jne
mov
xor
sbb
mov
inc
popa
mov
and
push
aam
cmpsl
arpl
and
lds
inc
es
inc
insb
lods
jae
pop
lds
pusha
mov
sub
clc
movsl
xor
mov
mov
mov
loop
iret
or
je
jecxz
shr
or
ja
xor
mov
ret
nop
fyl2x
in
js
mov
fcom
addl
pop
sub
popf
adc
mov
int3
rcrb
push
out
fadds
pop
out
ja
orb
jecxz
clc
cwtl
jg
push
nop
enter
push
test
and
inc
test
push
xchg
inc
cmp
pop
les
popa
add
sti
push
sub
in
dec
fwait
dec
jmp
outsb
or
sbb
arpl
stos
insb
and
mov
loope
cld
shl
sbb
pop
cmp
jbe
dec
bound
enter
mov
into
add
lcall
bound
out
sub
fcmove
add
push
add
sub
pop
push
dec
in
mov
adc
cli
outsl
sub
pop
jle
fistps
cltd
pop
into
mov
push
loopne
stc
sbb
dec
arpl
dec
out
push
stos
jg
jbe
in
sbb
inc
cmp
cmp
fcmovu
cmp
mov
repz
cmpsb
xchg
inc
bound
jp
mov
loop
out
hlt
into
add
mov
in
push
and
mov
and
out
fwait
imul
lcall
push
test
bound
mov
mov
jbe
add
loop
outsb
jmp
sub
in
decb
out
push
fs
test
or
icebp
mov
stc
push
jecxz
xchg
xchg
lcall
aas
cld
andb
jbe
enter
ret
std
dec
insl
leave
inc
xchg
push
in
adc
lahf
push
push
xor
xorb
rcrb
js
cwtl
popf
bound
das
sub
daa
aas
bound
and
push
and
cmp
jl
pushf
loope
sbb
outsb
sub
mov
push
mov
sbb
dec
addr16
mov
mov
xchg
mov
xor
ja
imul
sub
andb
jecxz
rorb
cmc
dec
lret
pop
jp
xchg
mov
int3
lock
mov
xchg
adc
or
fisttps
subl
xor
mov
mov
jmp
add
cmp
adc
sub
push
jnp
inc
icebp
clc
sub
mov
or
xchg
mov
dec
inc
pop
push
pop
mov
cmp
push
and
fsubl
mov
push
aaa
jae
in
aaa
dec
sti
or
xrelease
cmp
inc
jmp
popa
outsl
mov
pop
cmp
jns
inc
mov
imul
mov
mov
rcrl
fstpt
mov
movsl
ret
fxch
push
or
subl
test
or
add
fmuls
js
aam
inc
pop
mov
lds
xor
ret
fistpll
lahf
dec
jecxz
shll
mov
mov
lahf
or
out
fstl
dec
ffree
push
mov
jmp
xor
mov
adc
mov
add
sbb
mov
and
test
sti
std
loop
ja
sbb
and
pop
mov
and
inc
leave
cli
add
xchg
test
adc
mov
add
adc
jmp
dec
rolb
push
jb
mov
aam
fs
adc
jns
jb
clc
scas
imul
mov
sbb
popw
push
nop
mov
in
sarl
mov
sub
pop
loop
jae
mov
mov
xor
mov
ljmp
pop
xchg
enter
dec
sbb
call
lret
or
out
sub
mov
and
cmpl
inc
cmp
adc
dec
add
cli
lea
nop
dec
jl
inc
mov
loope
jns
cli
pop
rcl
addr16
fildl
jle
pushf
lret
in
mov
repz
pop
xorb
mov
pop
xor
xor
ror
and
cmp
push
mov
in
lret
fwait
xchg
ret
inc
pop
adc
jae
arpl
xchg
call
xchg
subb
cmpsb
ja
stos
fwait
sbb
pop
cli
rcrb
xorl
jae
jg
and
and
push
and
xchg
mov
mov
xor
sbb
sbb
shr
jbe
out
mov
inc
fsubl
outsl
lods
andb
fwait
mov
icebp
lcall
es
fsubl
aad
xor
adc
pop
fsubr
cwtl
out
cld
jb
call
rorl
adc
mov
pushf
sub
or
and
dec
push
push
sub
push
rcrl
outsb
mov
pop
rcrb
xor
stc
aam
js
ret
jge
pop
sbb
dec
fisubl
aas
mov
insl
stos
je
mov
pushf
pop
frndint
pop
mov
bound
nop
insb
stos
sub
mov
jne
xor
ja
dec
in
lret
into
dec
js
sub
ficoms
xor
loop
insl
cld
out
ffreep
notb
sbb
sub
add
jecxz
sub
jnp
in
push
sub
mov
repz
add
xor
xor
pop
mov
mov
add
iret
sub
pop
repz
std
sbb
out
and
xor
cli
xor
mov
popf
jg
sub
imul
lret
dec
mov
jp
lods
push
cmc
jmp
test
movsl
mov
cmp
add
loopne
ljmp
sub
mov
inc
mov
test
xor
les
bound
sub
and
scas
dec
add
stos
push
lock
les
jge
add
dec
bound
or
jno
pop
mov
daa
loopne
inc
into
roll
push
cli
inc
test
inc
dec
movb
test
and
ljmp
add
lds
push
imul
cmp
js
push
pusha
cmpsl
outsb
data16
inc
in
out
lret
ss
rol
mov
add
adcb
xor
jo
loopne
les
mov
and
sbb
imul
jne
scas
stos
xchg
cmc
nop
mov
adc
lret
sub
rolb
pushl
jae
dec
pop
andl
jl
lea
fs
push
ret
addb
adc
pop
pop
mov
jns
pop
gs
call
sbb
push
ficompl
push
in
jmp
push
cmp
or
pop
daa
sbb
mov
rcr
xorl
mov
dec
test
mov
push
dec
pop
fdivs
pop
lods
jnp
cltd
cmp
fs
pop
or
daa
pop
sbb
aaa
std
adc
xchg
or
imul
mov
out
cmpsb
mov
add
lods
in
fiaddl
jmp
movsl
jns
out
xchg
inc
mulb
andb
into
sbb
sub
inc
adc
cs
aaa
in
jecxz
out
rclb
sbb
cli
pop
mov
fldcw
lahf
sahf
andb
mov
int
or
jle
je
jno
pusha
movsl
fistl
inc
sub
and
bound
popa
rolb
mov
adc
aaa
mov
adc
mov
mov
mov
pusha
sarb
or
cmpsl
stos
sti
mov
or
jl
test
dec
jae
dec
fsubr
jnp
or
mov
subb
pop
stos
cmp
mov
cmp
mov
cmc
xor
aas
psrad
es
dec
push
imul
movsb
xchg
mov
xorb
roll
pop
enter
mov
cmpsl
bound
fisubs
sbb
inc
xor
dec
in
sbb
mov
sti
ljmp
sub
xchg
push
dec
mov
jge
imull
push
in
cmp
daa
pusha
mov
je
push
jl
fbld
and
or
and
popa
lahf
outsl
inc
mov
adc
rorb
add
mov
mov
xchg
jnp
xor
imul
stos
call
sbb
sbb
mov
pop
ds
orl
insb
rorb
pop
or
cmp
cs
or
lret
jl
mov
test
inc
inc
inc
adc
scas
mov
popl
testb
in
cmp
subb
cmp
push
pop
jp
pushf
fbstp
gs
sbb
aad
mov
dec
jle
ret
inc
in
les
mov
mov
pushf
jno
dec
aad
mov
inc
sub
cli
rorb
aaa
clc
cmp
xchg
sti
dec
imul
xor
mov
icebp
inc
inc
adc
daa
pop
and
insl
fwait
push
addr16
fldenv
and
sub
test
mov
jns
add
push
or
inc
sti
sbbb
mov
push
lods
mov
ficompl
sti
shl
jecxz
xor
iret
cmc
sahf
xor
adc
inc
scas
adc
popf
ss
pop
push
outsb
fbld
mov
inc
subl
mov
or
mov
xor
push
punpckhdq
lods
aas
and
movsl
pop
shrb
ror
push
ret
xor
fdivp
lret
add
jle
mov
and
inc
xchg
jg
or
in
xchg
js
mov
and
popf
pop
roll
bound
xor
xlat
std
in
mov
fdivl
and
mov
adcl
cmp
test
repz
or
mov
sahf
das
js
inc
cmc
pop
mov
adc
ss
xchg
pop
xchg
hlt
jmp
sbb
jns
pop
push
fs
mov
ficompl
cmp
clc
lock
fidivrl
sub
je
stc
lods
les
sbb
inc
jb
lret
rcrl
xchg
test
xor
sbb
adc
dec
test
add
outsl
rolb
jbe
or
sbb
lret
fwait
ret
mov
add
adc
cld
inc
dec
inc
inc
pop
mov
cmp
ja
in
call
jg
add
test
js
negl
xchg
push
shrl
jns
xchg
sbb
fstps
inc
outsl
xchg
xchg
jmp
add
sbb
mov
mov
push
cmc
lret
aaa
sahf
push
sub
cli
inc
dec
jno
mov
cltd
or
adc
mov
xchg
testl
ret
test
in
adc
sub
push
je,pn
jno
push
inc
cmc
mov
shrb
xchg
sti
push
insl
push
loope
loop
mov
mov
call
pop
out
stos
jg
ljmp
mov
cmpsb
mov
or
push
dec
enter
and
cs
jmp
repz
shll
sar
cmp
mov
popa
int3
jne
testb
fnstsw
repz
loop
in
mov
sub
jbe
stos
jecxz
fwait
roll
insl
xchg
aam
cld
add
mov
xor
jg
sahf
push
mov
sub
jo
popa
clc
cmp
sub
mov
lret
pop
imul
xchg
out
cmp
and
mov
mov
and
cmp
xlat
mov
jnp
mov
push
jle
in
lods
fwait
lret
shl
inc
sar
or
lds
add
and
decb
lods
xchg
jmp
flds
shrb
incb
out
pop
pusha
pop
dec
call
dec
xchg
mov
fwait
dec
out
pop
movsl
or
lods
stc
jae
xchg
aam
mov
mov
lods
xor
outsb
cmpsl
popf
pop
mov
scas
cmc
inc
add
fdivrp
cld
repnz
jbe,pt
jmp
or
movsl
in
dec
cmc
push
push
xor
addl
sub
insb
ds
sbb
adc
mov
cmp
lcall
das
faddl
or
pop
inc
mov
mov
mov
mov
add
fs
push
cld
jo
loope
scas
dec
inc
push
add
sbb
arpl
std
fidivl
xchg
adc
jbe
mov
test
das
xor
test
cmpl
pop
jp
mov
mov
mov
pop
xchg
sbb
jmp
push
out
xchg
imul
mov
jle
cli
and
dec
pop
and
sti
push
mov
std
mov
decl
pop
jo
fcmovnbe
xchg
inc
pop
aas
sbb
leave
cs
push
xchg
stos
xor
imul
mov
mov
lahf
insb
inc
or
fidivrl
xor
xchg
stos
pop
inc
insl
pushf
lods
fcompl
hlt
jo
sbb
loope
pop
ret
xchg
push
pop
sub
std
push
cmpsl
repz
dec
push
sub
adc
ss
push
cmpsl
mov
jecxz
bound
cld
cmp
clc
je
jbe
or
lret
inc
rorb
cmpsl
notl
das
js
inc
daa
sbb
mov
or
ss
loop
cltd
mov
mov
mov
into
int
pop
pushf
jae
lds
lcall
insw
add
cmp
scas
gs
jnp
out
stos
and
aaa
add
into
mov
arpl
adc
or
ds
cld
pop
and
adcl
pop
cwtl
jno
jbe
cmp
stos
int3
push
xlat
or
add
lods
cli
mov
jns
in
sahf
dec
push
cmpsb
ret
stos
adc
push
mov
lahf
sarb
adc
lret
loopne,pt
into
mov
outsl
insl
jo
insl
into
jb
mov
stos
mov
sbb
fisttpl
sub
cmp
jmp
loop
push
aas
out
movb
lret
dec
push
push
xor
inc
mov
adc
mov
cmp
mov
mov
cmp
xchg
shlb
pusha
pop
sbb
fsts
jge
push
sub
push
enter
adc
push
scas
sub
xchg
jbe
int3
outsb
pusha
or
push
ja
icebp
push
and
sbb
xchg
inc
cltd
push
dec
inc
pusha
fcomip
add
add
scas
lds
push
sub
stos
shrl
out
cli
mov
outsl
pop
xorl
and
push
xorl
pop
dec
arpl
pop
add
sbb
pop
ja
aas
lret
fiaddl
lret
int
aas
mov
cmp
push
mov
push
mov
adc
mov
sbb
fsubl
aaa
rol
in
adc
ja
cmpsl
jmp
xor
cs
push
loope
insl
insb
mov
cmpsb
ss
cmc
xchg
or
mov
sti
sti
lock
mov
jno
mov
fisubl
mov
pop
pop
icebp
das
nop
cmp
jp
int
shll
lret
icebp
pop
adc
xor
mov
jg
mov
jae
dec
cltd
xchg
jecxz
xchg
sbb
test
sti
adc
scas
fisubrs
add
mov
adc
mov
xchg
lcall
mov
mov
mov
mov
dec
and
imulb
mov
mov
stos
pop
sub
adc
inc
iret
fadd
fdivrl
lods
and
hlt
mov
imul
push
lcall
pop
push
pop
dec
cmp
inc
jmp
dec
xchg
mov
sbb
leave
sub
in
bound
mov
sub
cmp
out
test
add
xchg
jg
cmpl
scas
xchg
mov
daa
jbe
adc
xchg
pop
pop
jno
js
popa
lcall
mov
and
cmc
cs
push
jb
mov
arpl
and
les
dec
and
imul
jmp
mov
js
pop
pop
inc
sub
push
pop
mov
frstor
cmp
adc
adc
fs
fildl
cmpsl
mov
into
xchg
cmpsl
ds
arpl
repnz
es
or
dec
pop
cmp
in
lret
sarl
movsb
xor
cmp
insl
mov
aam
out
lods
iret
out
lds
xchg
ret
das
mov
push
rdtsc
jae
sbb
daa
add
pop
test
loope
push
in
xchg
fs
repnz
xor
xchg
add
daa
dec
mov
icebp
or
xlat
bound
js
out
mov
xchg
pop
xchg
in
aaa
in
add
ret
das
adc
repnz
cmp
mov
add
jge
movsb
out
push
or
sub
mov
push
sub
sub
cmp
ret
add
inc
cmpsl
dec
jbe
bound
into
dec
out
pop
xor
dec
int
popf
fmul
pop
adc
mov
fcmovbe
ss
pop
push
in
out
outsl
pop
insl
pop
jmp
mov
lret
xchg
stos
or
mov
sti
xchg
lock
hlt
jmp
adc
jns
mov
call
inc
push
enter
pop
sub
lds
xchg
adc
fsubp
das
fld
or
js
mov
adc
inc
lea
rclb
mov
ljmp
aaa
mov
icebp
or
in
mov
add
sub
and
or
test
mov
mov
cmp
fwait
add
or
and
jmp
imulb
out
aaa
pop
and
aas
xor
clc
or
sub
sub
out
jecxz
jge
ss
outsl
inc
mov
ja
jmp
clc
imul
mov
mov
shlb
sar
sahf
push
in
push
bnd
addr16
ljmp
rcr
or
adc
mov
sub
sub
jmp
sbb
ljmp
pop
gs
inc
xor
inc
cmp
xor
out
addr16
es
and
xchg
or
pusha
mov
push
xchg
in
fimull
mov
or
lds
mov
cmc
shrl
ret
sbb
push
dec
movsl
jl
mov
loopne
jle
sarl
pop
ja
jge
out
mov
test
imul
das
lds
or
mov
cmp
xchg
call
jg
mov
jmp
inc
jmp
jmp
jnp
scas
cld
shll
xchg
subl
sbb
mov
fistps
lcall
movsl
mov
or
inc
aas
es
shll
fsubrs
or
mov
sbb
or
lea
cmp
sub
jp
xor
mov
sbb
xchg
lahf
inc
scas
mov
inc
daa
push
call
xchg
test
or
sub
xchg
mov
pop
adc
ljmp
aad
xchg
and
add
out
out
jg
xchg
sub
sarl
pop
ljmp
cmc
jne
xor
and
in
fldcw
mov
aaa
pop
dec
negl
cmp
sub
jp
cmpsb
mov
lea
bound
rorl
jo
push
hlt
loope
bound
andl
cmpsl
ja
sbb
rclb
jle
and
push
outsl
inc
mov
mov
xor
jbe
inc
cmp
push
push
mov
xchg
ljmp
cld
cld
inc
add
mov
mov
clc
and
mov
cmpsl
sub
mov
xchg
adc
cmpsl
xchg
lds
not
iret
dec
rorl
dec
adc
lods
sbb
jb
xchg
leave
ret
iret
pop
in
insl
jmp
add
lcall
xchg
std
push
push
clc
insl
es
movsb
pop
cmp
jne
insl
aad
jp
stos
int
pop
inc
push
cmp
fdiv
cmc
ret
in
jp
popf
outsl
bound
inc
data16
add
sub
in
cmp
test
popf
cs
push
faddp
mov
sbb
xchg
xchg
syscall
bound
xor
xchg
pop
cmp
rolb
fimull
sbb
std
pop
stos
mov
into
cs
adc
push
ja
rclb
insl
or
dec
mov
push
jbe
movsl
sbb
stos
movsl
pop
mov
inc
stc
mov
push
mov
imul
data16
and
int
aam
xchg
inc
cmpb
stos
sub
pop
xchg
mov
cmp
mov
movsb
lea
lcall
ret
aas
movsl
adc
xor
cmp
das
jg
sub
rorl
push
mov
xor
xchg
mov
dec
out
lods
dec
mov
cmpsb
dec
sahf
add
aad
mov
dec
sub
adc
divb
addb
xchg
cwtl
jle
adc
popa
cmc
in
cmpsb
je
inc
jno
mov
icebp
cmp
push
push
sbb
push
push
lea
pop
lods
ret
mov
jns
lods
mov
xchg
mov
inc
mov
adc
jmp
fwait
ljmp
rol
dec
lret
fisubrl
adc
bts
cltd
dec
xchg
xchg
lods
push
insb
fmulp
movl
mov
aad
and
xchg
stos
sub
push
mov
and
dec
int3
out
mov
ds
add
stos
jmp
dec
push
jp
loopne
cli
add
lea
sbb
jbe
pop
add
out
cmp
mov
and
sbb
adc
mov
inc
aaa
jae
cld
cmpsl
enter
push
dec
and
mov
push
or
in
xlat
test
movsb
jle
or
or
loop
scas
sarb
stos
jne
lea
fbld
fsubl
adc
sbb
jb
jmp
jo
lods
insb
jae
xchg
xchg
subb
pushf
lea
mov
mov
mov
mov
loope
sub
movsb
lret
rol
add
lods
and
scas
hlt
add
test
pop
aad
push
scas
mov
mov
and
dec
into
jo
neg
jl
std
cmpsl
andl
inc
sarl
add
pop
cwtl
push
repnz
mov
insl
jne
subl
or
sbb
pop
imul
je
xor
loope
in
xchg
sarl
arpl
jb
pop
mov
repz
add
adcl
pop
adc
cmc
add
pop
mov
cltd
arpl
mov
lods
xlat
sahf
out
sbb
enter
mov
xor
pop
out
jne
sbb
xchg
aam
out
or
test
cmpsl
test
ret
rclb
xor
dec
aaa
push
xchg
enter
push
pushf
in
mov
inc
test
in
outsl
mov
sti
add
sti
mov
mov
in
ret
pushf
and
mov
push
iret
in
dec
jno
xchg
xchg
mov
stos
dec
mov
sbb
les
cld
fstpl
add
pop
lret
scas
pop
mov
fisubrl
sbb
mov
push
aaa
xor
sub
sbbl
pop
in
std
insb
mov
lret
push
icebp
jne
push
inc
shl
push
cmp
dec
xchg
mov
mov
mov
push
test
rcr
inc
lods
sub
popa
mov
loop
fistl
cmp
scas
inc
negb
push
mov
addr16
rol
cli
xchg
mov
outsl
sub
dec
add
jecxz
mov
mov
mov
fisubrs
push
int3
in
or
jno
xor
ja
xchg
ds
out
jmp
xchg
xchg
push
mov
mov
mov
iret
lods
inc
push
push
inc
fmuls
push
cli
and
in
mov
test
and
stos
repz
xchg
and
je
adc
jbe
pusha
push
mov
test
mov
stc
inc
call
aas
outsl
xchg
aam
sahf
cli
lret
out
add
jl
sub
int
js
sub
or
imulb
pop
mov
mov
pop
and
imul
pushf
pop
cmp
popf
not
in
pusha
jns
cvtdq2ps
orb
push
adc
cmc
idivb
loop
lret
fldt
pop
frndint
pop
sub
push
popa
add
jl
fwait
jbe
add
mov
fimuls
mov
pop
dec
xchg
scas
push
mov
stc
iret
cmp
out
sbb
and
ds
pushf
lods
add
dec
push
cmp
push
ret
scas
mov
jle
mov
sarb
mov
inc
orb
push
mov
mov
repnz
mov
jmp
add
xchg
cmp
test
std
fnsave
xchg
mov
pop
inc
xor
test
cmp
adc
call
cmp
cwtl
hlt
xor
in
icebp
cltd
or
lret
loop
cmc
fidivrl
lahf
sub
nop
push
inc
mov
xchg
or
in
cmp
lods
cmp
ds
jp
inc
test
stc
push
into
and
repz
sub
jb
and
jb
adc
cmp
lds
adc
out
jno
scas
pop
cs
or
je
fidivl
repz
out
pop
lret
setle
mov
into
in
jne
mov
mov
xorb
inc
push
in
push
push
xor
mov
in
ret
xor
mov
inc
fnstsw
stos
mov
in
sub
pop
xchg
out
das
in
stos
jnp
xchg
mov
lcall
aaa
xor
sbb
out
lret
sbb
shrb
jb
sar
aad
outsl
in
into
xor
sahf
cwtl
lock
cltd
push
int3
mov
mov
mov
mov
popa
mov
jno
cmp
cmc
test
mov
jmp
inc
mov
clc
jnp
sahf
ljmp
sub
fmuls
sub
hlt
jmp
lret
cli
mov
inc
adc
jnp
push
popf
push
add
movsl
xor
sub
clc
fistpl
shrl
xchg
mov
adc
andb
outsl
pushf
inc
pop
in
jae
sarb
adc
mov
fs
lahf
or
shlb
lcall
rolb
popf
pusha
xchg
ficomps
jnp
popf
scas
fiaddl
out
push
es
push
fwait
or
push
cmp
xchg
push
cmp
add
xlat
jg
sub
incb
call
lret
add
dec
test
ret
test
stc
mov
je
sti
clc
pop
and
jecxz
das
insl
dec
jns
jge
hlt
xchg
mov
hlt
jge
mov
into
jmp
and
sub
cltd
js
out
xchg
mov
or
into
mov
jb
shrb
and
xor
sub
push
popa
inc
notb
cmp
mov
adc
fwait
call
pop
mov
addb
mov
cmovg
add
jne
dec
inc
mov
mov
int3
aaa
fwait
rol
mov
push
repnz
or
cmc
cmp
push
test
inc
push
push
adc
and
mov
iret
push
pushf
mov
add
push
cmc
test
adc
xor
xchg
cmp
fdivrs
adc
lcall
xchg
je
dec
clc
dec
ror
xchg
fcomi
sub
and
lret
sahf
hlt
dec
stos
insb
mov
imul
in
cmpsl
adc
push
jp
xchg
test
and
jmp
xchg
imul
adc
sbbl
inc
iret
or
pop
or
jle
and
add
sbb
sub
mov
cwtl
xor
inc
ds
push
mov
cmpl
mov
movsl
mov
pushf
out
jno
lock
fsts
lods
sbb
xchg
cli
pop
inc
cmp
xor
lahf
out
cld
lcall
or
pop
lret
addr16
call
sub
dec
inc
push
scas
cmp
and
insl
lahf
mov
rolb
push
push
mov
js
push
jl
cmp
push
mov
push
sbb
nop
lea
adc
shl
xchg
mov
in
mov
gs
fnsave
pop
daa
inc
test
xchg
mov
or
push
notb
xor
lods
jns
inc
out
adc
cmp
dec
inc
xor
aad
pop
pop
add
ret
or
shl
test
push
mov
cmpsl
je
int3
repz
cwtl
mov
aaa
aam
mov
cltd
sub
cld
cltd
clc
dec
shlb
bound
add
jns
out
ror
jp
insl
idivb
or
xor
mov
fimull
pop
cli
and
xor
and
lcall
mov
mov
jp
inc
movb
xor
sbb
pop
insl
dec
fwait
mov
data16
subb
mov
fwait
mov
bound
jl
call
icebp
in
adc
push
jge
testb
mov
scas
push
cli
inc
add
jns
jp
and
lods
das
push
fisttpl
mov
sub
cmc
jmp
cmp
decb
push
andl
xlat
adc
jne
ds
aam
jp
jg
aad
dec
sarl
sti
adc
loope
mov
add
movsl
mov
mov
fisubrs
adcl
insb
hlt
dec
pop
test
loop
and
add
lods
popf
sbb
xor
movsl
fcmovnb
dec
mov
or
out
xor
cmp
mov
mov
int
arpl
xchg
imul
push
jg
imul
imul
mov
addl
fwait
fwait
inc
lods
inc
push
insl
fdivl
daa
or
mov
jno
pop
orb
mov
xor
in
pusha
push
add
in
jns
in
mov
aaa
nop
jp
mov
push
jmp
cs
mov
jmp
mov
adc
xor
sahf
xchg
popa
rorl
rcl
jle
movsb
xor
and
lds
sar
rcll
js
xchg
lahf
mov
add
cs
ficomps
jp
jne
outsb
adc
fldt
adc
adc
sub
cli
loop
loope
or
push
movsl
mov
add
pop
mov
fwait
jg
jo
popf
push
pusha
outsb
and
sub
adc
dec
shr
ljmp
xchg
or
jecxz
push
lea
push
clc
add
dec
xchg
stos
add
shll
lods
insl
bound
xchg
fs
inc
sbb
test
jo
mov
sbbl
imul
test
loopne
dec
xor
lcall
jg
movsl
xor
and
pop
loopne
fwait
inc
mov
test
out
es
xor
mov
push
mov
movsb
ret
fwait
jno
push
dec
xchg
mov
push
hlt
xchg
push
adc
cmpsl
jp
jo
shrl
call
dec
and
in
pop
leave
imulb
test
repz
in
jbe
movsl
in
popa
int3
imul
and
leave
mov
insl
push
xchg
jg
ss
xor
cltd
and
loope
push
punpckhwd
aad
into
mov
xor
push
fdivrs
outsl
gs
out
dec
sub
loop
lahf
aam
cmpsb
add
pop
pop
dec
data16
rcrl
iret
inc
aad
in
sbb
loop
push
test
mov
jl
fwait
ljmp
and
enter
mov
adc
add
jnp
jp
add
jae
mov
fistpl
mov
sub
gs
cmpsl
js
inc
imul
lea
push
test
out
jmp
jle
xorl
xchg
mov
loop,pn
mov
push
xchg
jmp
dec
adc
sub
int3
cmp
inc
mov
stos
lret
test
scas
stos
sub
fst
jmp
sub
dec
mov
stos
stos
or
and
subl
out
sbb
scas
push
adc
in
push
and
sar
lds
shrl
xlat
push
sub
cmpsb
xorb
sarb
cmp
mov
inc
aas
sarl
push
in
loope
into
sbb
xchg
insl
insb
xor
jle
xchg
aaa
add
ds
mov
stc
sbbb
or
sbb
imul
mov
cs
movsb
sub
lidtl
hlt
fisubl
inc
mov
scas
mov
sti
call
lods
mov
imul
outsb
adc
sub
xor
push
xor
into
iret
fidivl
dec
test
xor
fdivrl
sub
xchg
popa
fwait
mov
jmp
sbb
mov
vunpcklpd
mov
es
add
jl
fwait
adc
mov
lret
daa
inc
dec
mov
out
adc
push
mov
push
push
dec
jbe
jnp
cmp
xor
aam
popf
cltd
mov
lret
clc
jb
mov
scas
lcall
xchg
rcrb
fs
out
cmpsb
idivb
adc
sbb
push
fs
rcll
mov
out
mov
cwtl
iret
stc
dec
sub
shl
popf
mov
or
xchg
popf
cmpsb
ja
pop
aaa
adc
cs
stos
jp
mov
aad
lahf
gs
and
out
push
shl
xor
dec
cmc
hlt
adc
inc
sbb
pop
mov
fisubrl
and
inc
fldt
fwait
adc
in
and
pop
pushf
mov
pop
scas
adc
xchg
and
inc
je
mov
jo
and
pop
sub
push
sti
pop
cmp
and
outsb
xor
shll
icebp
xchg
inc
adc
lods
lods
fs
sbb
out
stc
sbb
test
adc
scas
lods
lahf
xor
fildl
lahf
loope
std
cs
into
push
dec
and
lea
jbe
je
out
push
xchg
xor
rorb
push
pop
jg
mov
inc
or
mov
push
mov
lret
imul
mov
ds
push
stos
mov
gs
and
jp
inc
pop
sbb
xor
ljmp
sbb
faddl
fidivs
pushf
mov
mov
pop
in
mov
inc
imul
xor
fidivl
cmp
inc
sbbl
and
in
into
push
push
adc
negl
jg
inc
ret
bound
dec
and
shrb
cwtl
dec
dec
and
sbb
dec
add
sub
popf
int3
lods
ret
gs
inc
sub
mov
mov
and
cld
mov
inc
xor
ficompl
rcll
test
sub
fldcw
imul
and
arpl
stos
ljmp
pop
neg
inc
cmpsl
in
push
mov
dec
push
xor
jae
test
outsl
sub
add
pop
lock
icebp
mov
loope
jge
jne
mov
outsl
in
or
jle
xchg
imul
xlat
inc
jge
arpl
dec
pop
xchg
add
push
dec
adc
in
xor
movsl
outsb
or
jp
cmp
test
xor
fimull
lds
or
xor
dec
hlt
mov
loopne
iret
jae
xor
dec
sar
pop
mov
outsb
mov
add
arpl
xor
movsb
fcmovbe
aas
add
cmp
clc
mov
or
popa
jecxz
movsb
fmull
sub
and
push
or
lods
or
xchg
sub
je
in
dec
jp
test
mov
xor
inc
push
jns
insb
out
push
cli
in
shll
out
jl
aad
sbb
mov
cwtl
int
mov
orb
js
outsl
sahf
xor
movsb
dec
push
cld
adc
mov
inc
repz
into
or
daa
mov
jnp
dec
je
rorl
lret
or
sahf
xchg
hlt
push
jns
pop
insb
stc
dec
sub
pop
icebp
mov
or
cmp
pop
push
inc
mov
and
enter
push
cltd
dec
pop
push
imul
mov
out
cmpsb
js
sub
dec
lret
jmp
pop
addr16
sub
push
rcrl
and
insl
inc
andl
mov
cmp
imull
pop
inc
cmpb
dec
cld
push
xlat
in
xor
nop
adc
je
xor
adc
sti
js
cmp
jbe
lcall
sbb
mov
xchg
stos
and
out
dec
test
xchg
sbb
or
adc
pusha
mov
mov
cltd
sub
push
mov
fisttps
sbbb
popa
mov
and
movsl
mov
test
outsl
cmp
add
and
xlat
aad
ljmp
adc
cltd
fidivrs
mul
leave
pop
jnp
leave
mov
adc
jp
ljmp
lock
clc
icebp
sbbb
les
cmp
mov
mov
fs
aam
jle
bound
cltd
popa
add
aas
pop
or
in
sahf
repnz
shr
cmpsb
js
ja
fiadds
sub
bound
aaa
sbb
adc
test
fldt
mov
fsubrl
dec
cmp
es
push
arpl
movb
cmpb
xlat
jl
fsubr
movsl
out
inc
jbe
mov
adc
sbb
popf
hlt
mulb
imul
data16
cmp
loope
je
aas
inc
mov
xchg
jge
hlt
movsl
mov
dec
push
loope
imul
cmp
test
inc
pushf
push
loop
or
inc
fcmovb
gs
push
sbb
mov
cmp
mov
mov
push
fidivl
xchg
lcall
push
in
push
clc
cmp
mov
cmp
cmc
pusha
dec
clc
cli
add
leave
fidivrl
mov
xchg
aas
or
aad
pop
lcall
mov
adc
ret
fisubs
popa
shr
mov
sub
stos
out
fs
cwtl
sub
sub
jno
daa
cltd
push
movsl
or
daa
rorl
cmc
stos
roll
sub
shlb
jae
loop
ret
fwait
push
push
imul
push
frstor
sbb
xor
in
iret
or
xor
jge
sub
lods
dec
push
cmpsl
push
test
xorb
aaa
mov
xor
in
cmp
gs
in
popa
add
in
call
lock
lock
sti
pop
or
xchg
mov
fs
push
or
jg
iret
out
mul
dec
sbb
pop
xchg
push
repnz
mov
ja
push
xor
inc
jne
push
shll
xchg
sahf
and
jmp
sbb
sub
push
ffree
inc
push
insb
sub
pusha
push
aas
or
add
push
xor
jge
jg
lods
pop
or
xchg
mov
mov
ds
icebp
imul
loope
out
dec
cld
pop
shll
xorb
push
xchg
lods
pop
xchg
out
dec
cld
and
mov
ret
or
mov
insl
lcall
test
and
sbb
pop
dec
lret
inc
sbb
repnz
pop
mov
aam
cltd
hlt
mov
and
pop
les
test
add
and
lds
xor
mov
xchg
push
cmp
cmp
out
or
ret
mov
mov
fsubrp
xrelease
jl
cmpsl
cmp
mov
in
or
mov
sub
push
gs
lcall
std
sub
adc
aad
xchg
push
xchg
or
adc
lock
sub
sub
xchg
movsl
loop
outsl
fs
in
and
sbb
and
sbb
dec
int
sbbl
xor
insb
andl
pop
push
push
lret
rcrb
jb
xchg
xor
sub
arpl
jo
cld
cmp
dec
jp
sub
aas
jge
adc
mov
loop
in
inc
int3
cmp
pop
insl
sub
pusha
sub
sbb
mov
xor
insl
daa
insb
les
sub
or
adc
mov
cmp
fwait
add
jnp
pop
popf
jb
push
icebp
sub
xchg
jp
sub
sub
str
sub
popa
push
movsl
icebp
test
pushf
jb
cld
adc
pop
add
mov
sbb
lret
xor
pop
rclb
push
sbb
bound
xchg
repnz
test
psubusw
out
js
ljmp
adc
dec
lods
or
imul
push
or
addr16
lahf
int
imul
pop
sbb
jo
movb
sub
or
mov
adcl
shrb
or
sbb
dec
fldcw
jge
aam
xlat
adc
sbb
shll
adcb
daa
btc
incl
dec
push
mov
sbb
addr16
outsl
outsl
mov
int3
add
inc
jle
dec
cmpsb
xchg
daa
jge
cmpsl
lret
add
pop
cmp
sub
cmp
add
xchg
stos
mov
je
add
inc
repz
dec
xor
stos
dec
cmp
xchg
push
mov
xor
out
jnp
xlat
add
fistpl
jmp
adc
scas
sub
xor
xchg
push
push
addr16
ss
sub
lahf
or
inc
push
shll
stc
daa
xchg
in
adc
cmp
add
shl
cmp
sub
loopne
jno
and
es
mov
pop
scas
andps
xchg
cmpsl
enter
jno
or
testl
mov
sbb
inc
push
mov
les
sbbl
scas
pop
pop
sub
arpl
lcall
push
ds
push
lret
and
fisubrs
scas
jns
std
cmovl
and
cld
inc
mov
das
sub
mov
aas
xchg
add
pop
pusha
inc
push
fstpt
xor
cmpsl
ret
test
imul
push
popa
mov
test
mov
or
lea
push
push
mov
dec
add
repz
bound
bound
cltd
and
test
xchg
mov
add
ds
sbb
movsb
movsb
lcall
inc
mov
pop
arpl
in
lret
dec
pop
dec
ss
arpl
xlat
mov
mov
aaa
lods
in
mov
inc
iret
fwait
pop
cmpsl
push
or
out
rcrb
pop
jmp
fnstenv
push
sub
xor
test
mov
jle
orb
inc
push
lods
pushf
inc
mov
test
dec
mov
out
cmp
push
les
rclb
add
and
notb
mov
iret
mov
and
mov
xchg
sbb
por
inc
mov
js
pop
lods
cmp
dec
mov
stos
inc
sub
lods
rorb
gs
adc
pop
inc
inc
fwait
rcl
lock
daa
gs
popf
ja
push
add
daa
outsb
xchg
out
icebp
pop
jo
cmc
sub
lahf
cmp
jns
call
js
testl
jle
add
in
lods
test
and
stos
jl
adc
ret
daa
xchg
mov
lahf
xor
cmpsb
lcall
jbe
push
mov
ljmp
std
incl
mov
mov
jmp
jno
sub
pop
dec
imul
fwait
jp
xor
mov
mov
inc
ds
mov
mov
inc
and
out
jp
and
data16
mov
mov
rcr
push
xor
mov
bound
gs
jecxz
jns
shlb
iret
imul
jne
stos
push
test
bound
adc
xchg
and
dec
mov
outsb
mov
xor
add
rcll
cmc
mov
dec
xor
lock
scas
repz
jnp
loopne
int
or
sbb
xchg
pop
xchg
add
ud2
les
cmpsl
pop
insl
jo
icebp
cmpsl
lret
stc
pop
mov
jecxz
sub
jl
add
fwait
enter
and
ret
stc
push
enter
out
test
cli
cmp
movsb
outsb
cmp
mov
fwait
mov
cltd
pop
icebp
mov
and
jecxz
and
and
shlb
sti
pop
or
fisubs
jo
jb
popa
sub
cmp
xor
push
cmp
lock
jbe
clc
cwtl
or
jmp
imul
inc
and
fisttps
negb
cmovo
adc
fwait
ss
push
push
add
inc
negl
cmp
mov
ret
ds
sbb
push
iret
xor
pop
ret
cmp
scas
or
out
lret
fdivrl
test
mov
fildl
dec
sahf
dec
dec
lea
fbld
enter
stos
mov
or
lock
push
dec
sub
inc
add
mov
add
std
push
mov
or
rclb
movsl
sub
jge
es
mov
stos
push
daa
pop
popf
rolb
stc
dec
xor
data16
mov
add
les
es
mov
lcall
rep
sub
mov
sbb
popa
aaa
cmpsl
mov
and
ror
jb
mov
mov
loopne
stos
cmpb
pop
mov
and
imul
cmp
dec
int3
or
call
scas
insb
sbbb
or
mov
mov
scas
mov
aas
arpl
xchg
sbb
into
call
std
adc
mov
imul
cmp
loopne
ljmp
lea
adc
jne
pop
loope
inc
mov
fnstsw
mov
aaa
ret
mov
xchg
sbb
cld
fsubs
dec
jp
nop
mov
iret
xchg
or
and
mov
shll
cli
sahf
sbb
sti
clc
jno
sarb
lea
dec
adc
repnz
pop
push
hlt
lock
sbb
pop
in
ja
ret
mov
jge
dec
std
sarb
jmp
xchg
inc
mov
mov
rcrb
jl
adc
enter
out
test
lcall
xchg
lret
cmp
push
and
ret
xor
jbe
pop
xchg
lods
fcmovb
sbb
pop
sbb
sti
or
test
pop
imul
or
lods
insl
cmp
fistl
mov
hlt
test
push
lods
pop
pop
je
add
mov
inc
jns
push
jg
rcrb
mov
les
iret
aaa
loop
jl
lret
aas
addr16
in
icebp
cmpsb
lock
popl
into
stos
ljmp
pop
and
in
dec
cmc
cmp
sar
movsl
pop
dec
mov
es
sub
sti
mov
data16
adc
push
ja
shll
cmpsl
xor
xor
testl
pop
pop
enter
mov
loopne
jp
mov
lahf
sub
sub
lret
pop
or
nop
jns
fwait
test
or
flds
sbb
sub
push
jl
add
inc
outsl
fidivs
nop
int3
data16
mov
xlat
push
jg
sbb
mov
or
sahf
mov
mov
mov
dec
mov
xchg
xor
lods
xchg
inc
lea
insl
mov
shlb
jae
dec
cmp
fwait
mov
cltd
aad
xor
mov
dec
sarl
sarl
push
jmp
sub
xor
popa
pop
xor
lds
stc
cmp
pop
mov
sbb
arpl
pop
add
je
icebp
fldl
adc
and
xor
jp
sub
jl
subb
push
rcl
mov
jmp
sub
adc
mov
in
out
fmull
pusha
repz
lret
cwtl
out
jle
xchg
push
sub
mov
loopne
dec
cmp
xor
in
sub
arpl
sbb
movsl
fsubs
or
cmpsl
sbb
and
loope
cwtl
sbb
pop
inc
mov
adc
push
jmp
cmp
into
sahf
repnz
data16
or
jg
cmp
pop
out
cmp
rcrl
jo
hlt
adc
repnz
jo
cs
mov
and
xchg
mov
clc
repnz
jp
pop
push
and
ljmp
imul
dec
push
or
pop
test
rolb
adc
and
mov
mov
insb
scas
adc
cltd
mov
push
dec
fst
jns
dec
mov
imul
enter
mov
or
mov
adc
sarl
jle
add
sti
std
subl
lods
dec
popa
mov
xchg
stc
xorl
jmp
cs
int
mov
repz
or
cmp
sub
mov
popa
mov
cmpsb
adc
pop
jecxz
addr16
jecxz
xchg
xchg
xchg
test
jo
mov
pop
fs
pop
mov
es
cmp
or
pop
sub
pop
pop
lods
push
lret
xchg
test
lahf
out
xchg
mov
lahf
loop
cmp
out
pop
pop
dec
xor
xor
push
sbb
sub
test
psrlq
inc
aaa
incl
jl
dec
aaa
and
cld
xor
sbb
inc
xor
dec
ds
pop
xor
mov
out
mov
in
cmp
sbb
xorl
inc
add
inc
lods
arpl
cmp
scas
std
jns
dec
and
fidivs
leave
inc
les
mov
cld
push
or
push
mov
iret
sbb
dec
push
fdivrs
lret
sub
push
roll
xor
negb
cmp
sub
pop
mov
dec
inc
jmp
test
lea
mov
xchg
jns
mov
cmpsb
ss
insb
fs
jecxz
in
cmpsl
mov
in
cmp
xchg
adc
mov
sub
add
push
mov
scas
mov
and
and
sbb
pushf
pop
or
fwait
lcall
imul
sbb
scas
stos
push
mov
addr16
mov
lea
cmp
mov
dec
ret
dec
fwait
pop
sarb
sbb
push
rclb
pop
jle
cs
or
je
stos
mov
test
mov
decb
xor
sahf
mov
dec
mov
sbb
inc
out
cli
xchg
xlat
je
mov
mov
sbb
mov
ja
adc
pop
bound
xchg
rclb
pop
fiaddl
out
and
push
testb
push
orb
mov
add
lock
fistpl
push
pop
sarl
and
xor
mov
inc
lret
jo
inc
enter
sub
sbb
mov
movsb
xchg
push
push
inc
pop
cmpsl
inc
push
sbb
fidivs
lods
cmpsb
xchg
insl
adc
or
and
shlb
xor
and
pop
and
fwait
lods
and
mov
sub
mov
shlw
fdivrs
std
fcmove
xchg
inc
dec
mov
cmp
loope
push
loope
aaa
pushf
adc
push
arpl
icebp
loopne
xlat
bound
cld
cwtl
adc
les
bound
add
into
fnstcw
and
jg
push
stos
mov
insl
mov
cmpsl
sub
aaa
mov
adc
push
xor
iret
pop
push
mov
out
push
inc
push
arpl
ja
dec
or
cwtl
in
jne
and
jno
inc
bnd
pop
or
pop
lretw
dec
push
mov
in
call
lret
push
pop
push
loop
fwait
push
outsb
mov
push
ljmp
sahf
mov
pop
stc
jnp
hlt
jecxz
jecxz
data16
jle
add
jne
cmpsl
mov
incl
push
mov
int
dec
mov
in
test
aas
stos
in
fidivs
or
clc
ss
cmp
subl
jo
lret
ljmp
test
hlt
add
pop
mov
test
cmpsl
sahf
fidivs
cmpsb
sub
mov
adc
cmp
pop
sbb
mov
mov
nop
loopne
aam
sub
mov
aas
pop
jno
inc
scas
jmp
iret
sbb
add
and
negb
out
mov
ss
fidivrl
add
enter
pop
inc
test
movsl
mov
add
jecxz
cmp
cmp
sub
xchg
mov
lea
in
push
sbb
data16
jecxz
je
push
lds
test
rcrb
pop
out
dec
movsl
xchg
mov
xor
mov
mov
and
repz
inc
push
pop
adc
mov
out
icebp
xchg
xchg
jge
sub
and
jg
or
pushf
adc
xor
xchg
mov
test
scas
mov
in
decl
pop
in
out
pusha
adc
push
dec
xlat
jecxz
out
add
pop
je
inc
pop
icebp
and
cld
loopne
jb
push
test
fwait
mov
sti
xchg
jg
push
into
outsb
clc
mov
push
xor
adc
adc
push
lods
cltd
popa
jmp
mov
fsubs
xor
sbbb
in
mov
adc
push
es
mov
and
repnz
push
test
lock
fsubr
roll
cmpsb
xchg
add
cmpb
cmc
inc
adc
enter
jb
adc
sbb
sub
push
mov
adc
clc
sub
in
push
loopne
dec
sarb
mov
xor
xchg
dec
sub
cmp
mov
jecxz
adcl
sub
scas
loope
add
cs
filds
stos
jae
mov
cmp
bound
out
in
add
pop
xor
jo
test
add
sbb
les
lahf
out
data16
sub
daa
out
aaa
push
addb
mov
mov
push
lret
xchg
lods
loop
dec
enter
leave
in
push
test
xor
fcomip
ljmp
test
ljmp
fimuls
adc
mov
jmp
cs
popa
sub
ret
sub
mov
lock
dec
std
push
xchg
mov
inc
and
mov
jmp
scas
gs
xchg
and
and
nop
xchg
mov
ja
xchg
cmp
sbb
mov
sarl
mov
pop
mov
pop
cld
adc
mov
sub
shll
nop
dec
jg
xchg
das
xchg
dec
jae
jno
icebp
sub
cli
cmp
inc
imulb
dec
xor
fbstp
xor
test
or
mov
jae
iret
push
fidivl
inc
aas
stc
pop
lahf
pop
xor
pop
xchg
xor
xchg
mov
cwtl
out
out
ja
xchg
cmp
jecxz
andb
jmp
sbb
ds
dec
or
stos
push
mov
mov
fs
notb
push
fldz
push
mov
jno
cmp
loope
iret
and
adc
fisubrs
gs
loop
nop
lret
push
pusha
jecxz
out
xchg
sbb
mov
lds
cltd
loop
and
sbb
ret
mov
sahf
jp
leave
notb
test
test
or
out
fsubrl
icebp
mov
call
lds
sbb
pop
cwtl
pop
add
cmp
lods
push
or
mov
add
xor
jb
xchg
xchg
out
sbb
mov
clc
cmp
push
mov
aam
movsl
sub
dec
xor
inc
adc
xchg
aas
jge
mov
sbbb
jbe
mov
leave
mov
movsl
or
xchg
inc
inc
dec
jne
fwait
jg
add
cwtl
aad
loopne
push
xor
lahf
ljmp
ja
and
loopne
dec
fwait
or
adc
ret
cltd
sbb
iret
push
fs
lock
jge
loope
ds
in
testl
cmp
pop
out
gs
inc
or
jb
pop
fisttpll
push
or
sub
mov
ret
addr16
sub
jnp
mov
test
ljmp
mov
idiv
fidivrl
dec
fwait
fwait
xchg
loope
icebp
addr16
mov
xchg
mov
cmp
dec
jb
lds
jge
test
out
ljmp
je
adc
in
daa
cmc
jne
pop
sbb
sbb
adc
mov
jmp
in
mov
rorb
jecxz
mov
repz
cmp
xor
jbe
aaa
loop
xor
in
pop
add
cwtl
push
xchg
cmpsl
mov
imul
adc
jnp
add
inc
xor
daa
shl
aam
loope,pn
loopne
or
fistps
out
dec
mov
push
dec
add
push
leave
or
sti
sarb
cmpsl
or
jno
shrl
rorl
stos
jge
notl
mov
or
fldt
mov
mov
or
es
jne
xchg
lods
fnstenv
add
add
cmpsl
icebp
pop
es
sbb
sub
inc
or
enter
mov
xchg
leave
dec
data16
mov
dec
pop
pop
loop
in
cwtl
out
loopne
stos
inc
in
mov
cmc
mov
fbstp
fwait
addr16
adc
ds
cld
fimuls
and
dec
jns
pop
sbb
out
loopne
cmc
mov
xor
or
aad
scas
stos
arpl
and
stos
out
adc
in
pushf
xor
inc
shr
daa
aad
repz
or
test
test
xorl
daa
xor
outsl
fisttpll
inc
div
pusha
mov
inc
and
or
mov
push
ds
sub
inc
cmp
mov
pop
mov
imul
jl
jl
jmp
sbb
addr16
dec
cmp
cmpsl
xor
stos
and
cmp
cli
pop
pop
js
fdivrs
stc
rcrl
pop
sub
loop
imul
std
mov
jp
leave
fdivrs
cmp
mov
and
xchg
mov
lods
mov
push
iret
enter
inc
jp
sahf
popa
or
dec
pop
imul
orl
xor
add
sahf
pop
xor
decb
or
stos
sub
mov
dec
addr16
mov
movsl
xor
popa
out
mov
lcall
adc
cmp
repz
pop
add
pop
mov
xchg
xor
daa
lock
or
loop
dec
data16
iret
test
subb
imul
pop
jmp
jg
fstps
sub
lea
popa
cwtl
add
sub
sbb
out
jl
setp
mov
mov
xchg
sbb
cwtl
addb
sarb
mov
cwtl
cmp
int
sahf
jo
lret
jl
cmc
pop
inc
jns
xchg
inc
jno
hlt
nop
add
xor
bound
xor
test
iret
cs
popf
daa
out
stos
mov
in
je
aam
pop
xchg
push
mov
pushf
rclb
push
out
cmp
sub
xchg
inc
push
ret
cltd
loope
jle
hlt
dec
push
mov
inc
dec
outsb
jge
movsb
xor
nop
and
sbb
xlat
xor
mov
hlt
pop
cmpsl
gs
aas
repz
push
fnstcw
std
imul
cwtl
mov
xor
sbb
lods
inc
adc
adc
loope
push
adc
pushf
inc
mov
movsb
imul
sub
sahf
xchg
iret
inc
mov
mov
call
xchg
in
push
mov
xchg
sub
fcoml
jmp
push
add
arpl
cmp
cmc
adcb
fiaddl
adc
stos
addr16
xor
adc
mov
xor
or
test
stc
cltd
mov
xchg
cmp
mov
push
and
cmp
mov
insb
aam
lcall
or
rcr
jg
adc
aas
aaa
imul
lahf
adc
push
add
test
dec
jo
cltd
ds
aad
dec
adc
and
mov
stos
push
mov
fucom
mov
fadd
pop
aas
push
sub
jns
in
call
or
outsl
mov
mov
imul
jae
lds
dec
xor
insl
push
shrb
insb
sbb
push
roll
mov
push
cld
cmp
imul
jne
jmp
xor
pop
xchg
mov
push
arpl
jle
dec
lcall
lcall
jmp
outsl
test
in
dec
shll
dec
cmp
jl
push
lret
jo
je
mov
ret
dec
lods
lret
xchg
or
xchg
jg
sub
incl
mov
int3
push
and
xor
add
fs
loope
jle
int3
pop
jle
daa
dec
mov
mov
ja
int
js
mull
xor
fxch
mov
or
divl
lahf
inc
lahf
mov
mov
cmp
aaa
or
lcall
imul
rorb
jecxz
add
xor
js
int3
leave
stos
daa
mov
out
cmp
mov
popf
outsb
fucomp
pop
mov
or
jne
pop
nop
inc
mov
fistpl
mov
adc
and
jne
lcall
loopne
pop
cmp
mov
mov
fisubl
pop
inc
inc
mov
xchg
mov
xchg
dec
and
ret
sahf
dec
inc
mov
hlt
inc
xchg
push
sbb
jo
mov
push
mov
xor
and
sbb
cmpsl
or
mov
mov
int3
lods
movsl
sbb
jecxz
sti
or
add
pop
cmc
data16
dec
and
or
sub
notb
fwait
orb
mov
fwait
pop
xor
mov
sbbb
pop
fisubrs
mov
je
adc
inc
cmc
jmp
sub
mov
fcom
loopne
stos
in
fdivl
fildll
mov
adc
out
mov
mov
lret
inc
add
xchg
ljmp
rcrl
push
stc
cmc
mov
scas
xor
fsts
mov
stos
sub
adc
xor
jns
dec
in
jmp
lds
cltd
loop
mov
push
push
xlat
jbe
mov
shlb
insb
push
das
dec
xchg
cmp
sti
outsl
subb
lods
jnp
movsl
adc
fisttps
aaa
mov
mov
dec
imulb
cld
aad
xlat
test
mov
imul
roll
cmpsb
movsb
xchg
sub
dec
int
cmp
es
push
aad
jo
or
pop
and
cmp
mov
fisubrl
inc
fldl
jb
fs
push
or
lcall
jo
cld
xchg
cwtl
fcmovu
sbb
pop
push
xchg
loopne
leave
push
jmp
movsl
repz
pop
call
inc
sub
jae
push
sub
add
lret
add
outsl
sub
pop
inc
lea
mov
mov
xchg
sub
xor
clc
mov
lock
fsubrs
pop
cmp
mov
add
dec
cs
cmp
fstpl
xchg
inc
stos
dec
mov
lcall
enter
adc
incb
lret
aaa
sub
ret
sahf
xchg
dec
ljmp
jne
into
jmp
xchg
leave
and
push
dec
cmpl
dec
sbb
mov
jae
out
sahf
js
dec
inc
xchg
sub
inc
lret
clc
adc
frstor
push
or
mov
stc
inc
xchg
enter
xchg
push
jmp
enter
sbb
mov
shll
and
mov
sbb
lock
dec
mov
jbe
ds
xchg
loop
hlt
mov
dec
dec
call
add
and
inc
pusha
cmp
mov
out
test
mov
mov
add
fcoml
lret
call
xchg
popa
inc
loop
pop
push
popf
or
iret
pop
mov
cwtl
and
not
or
xchg
or
pushf
aaa
into
adc
jns
shl
andb
push
fs
jae
stos
scas
mov
xlat
push
imul
jb
gs
lock
mov
xchg
jp
in
insl
ja
mov
xor
push
mov
sub
add
ss
pop
ljmp
and
jp
xchg
shlb
cld
outsl
fs
and
mov
testl
loop
xchg
lods
cmpsb
mov
lods
les
add
lds
cs
mov
push
push
cwtl
out
es
mov
add
add
xor
in
push
jecxz
mov
dec
adc
lret
lcall
mov
lds
ss
pop
into
stos
stc
enter
enter
adc
dec
pop
dec
jno
cmp
loopne
mov
bound
jmp
dec
sbbb
adcl
xor
fsubl
mov
jl
push
stos
aam
sbb
xor
jle
and
jae
mov
mov
fwait
jle
add
stos
push
push
pushf
xor
mov
aam
roll
loope
rorb
and
mov
mov
push
aas
dec
xchg
xor
pop
test
mov
mov
testl
ds
xor
into
ret
mov
je
mov
in
loope
stc
push
cmp
testb
inc
out
test
pop
cmp
xchg
fstl
push
sbb
dec
ret
mov
cmp
enter
shl
dec
and
fdiv
push
xor
test
ret
rolb
pop
stc
sahf
int
and
imul
mov
and
adc
push
mov
mov
and
and
jbe
lret
jns
adc
in
xchg
test
ret
mov
imul
dec
xorb
sbb
and
mov
xchg
outsb
int
jo
popa
iret
xlat
int3
or
lret
aam
scas
push
lret
inc
enter
add
inc
jl
mov
or
hlt
sti
jmp
sub
mov
lods
lret
dec
in
sub
leave
ljmp
stc
xor
out
dec
xchg
ljmp
push
mov
mov
push
jl
pop
dec
dec
push
pop
leave
addr16
xor
rcl
xor
cmp
ret
in
call
daa
or
fisubl
adc
ret
mov
imul
mov
jno
xchg
cltd
jg
and
mov
cmp
rorb
jne
or
sti
inc
lea
cmp
dec
imul
dec
push
pop
sbb
outsl
repz
hlt
jae
cmp
or
xor
das
addr16
and
ja
sub
mov
movsb
in
mov
cmc
ficoml
js
es
sub
out
mov
rcrl
ret
outsb
pop
mov
aaa
jmp
movsb
lea
dec
sub
cmpsb
pop
fisubrs
aam
jno
xor
daa
mov
negl
jae
aas
lret
mov
mov
out
xchg
call
push
mov
push
cltd
int3
cmp
sub
sbb
mov
ss
daa
lods
cmp
and
push
call
add
dec
adc
push
dec
jmp
out
dec
mov
stc
dec
pop
pop
mov
cmc
icebp
test
jge
jp
popf
xlat
mov
xchg
mov
mov
fcoms
and
inc
mov
pop
push
sub
cwtl
xor
pop
push
adc
lds
and
xchg
sub
fst
filds
pusha
shlb
add
addl
rcrl
fstpl
push
imul
lret
scas
fsubs
movsl
mov
mov
cmpsl
adcb
jecxz
outsl
stc
jg
adc
mov
add
mov
sub
ljmp
rcrl
fisubrl
xchg
and
inc
cmc
in
and
incl
into
into
pmaxub
sahf
xor
je
ret
xchg
cmc
cmc
frstor
cwtl
pop
pop
movsl
pop
dec
mov
int3
testb
aam
sub
jle
lcall
call
mov
cli
xchg
add
and
jae
and
xchg
cmp
inc
shlb
jae
test
call
adc
pop
aad
popf
xchg
leave
pop
clc
fsubs
outsb
and
pop
cmp
mul
jne
inc
xchg
xchg
arpl
jbe
int
stos
jo
lcall
pop
and
push
or
shlb
sti
xor
imul
mov
out
xor
cmpl
xor
dec
cli
sti
pop
lea
test
inc
push
std
scas
sub
in
inc
lods
push
mov
in
es
cmp
and
mov
pop
test
in
jns
jo
out
xor
mov
fsubrl
and
xor
outsb
out
cmp
dec
and
push
adc
xchg
shlb
add
sub
xchg
pushf
sub
or
test
out
pop
xchg
out
cmp
pop
inc
jno
dec
push
and
xor
faddl
repnz
rorl
push
fsubs
popf
push
andb
dec
leave
sub
or
js
push
mov
xchg
int3
das
pop
pusha
xor
xchg
adc
jg
scas
movsl
mov
aas
and
incb
pop
mov
into
test
mov
pcmpeqb
test
fdivs
xchg
ds
loope
scas
fcom
pushf
dec
lock
insb
adc
cmpsb
popa
imul
div
mov
jecxz
dec
mov
leave
or
sbb
cmpsb
dec
mul
divb
aad
add
inc
add
push
mov
jp
inc
inc
test
or
stos
push
jmp
xchg
inc
push
insl
rcrb
idivb
push
mov
pop
jmp
icebp
popf
call
sarb
cmp
jl
mov
inc
cwtl
daa
pop
mov
and
out
mov
xchg
mov
je
stos
or
xchg
xor
xchg
xchg
rcll
arpl
wbinvd
inc
dec
lock
add
adc
cmc
cmp
xchg
xor
fistpll
xchg
jne
mov
sti
into
outsb
inc
ret
cltd
pop
mov
push
mov
ret
fisubrs
push
push
stos
lea
and
stc
ficomps
push
dec
mov
dec
les
push
sar
lds
imull
pop
mov
xchg
cmp
jmp
xlat
xor
jmp
gs
repnz
inc
mov
cs
idivb
sub
mov
cld
iret
dec
sahf
outsl
pop
lods
cmpsl
bound
lods
ss
jo
cmpsb
jo
adc
out
adc
jae
add
pop
cmp
mov
pop
mov
jae
pop
mov
fwait
stc
dec
gs
pushf
mov
adc
jnp
mov
jmp
sub
clc
adc
outsl
jl
aaa
adcb
push
movsl
ret
xor
cmp
scas
push
lock
and
dec
test
cli
xchg
leave
push
cmpsl
ret
add
jae
jo
mov
clc
add
mov
fiaddl
std
fcoms
scas
pusha
inc
data16
xlat
fxch
or
xchg
ficoml
xor
sbb
sarl
inc
push
mov
mov
incb
out
mov
fs
pushf
jne
scas
inc
popf
xor
jl
mov
dec
mov
inc
repz
push
cmp
xchg
add
inc
out
pop
test
ret
sub
cli
sub
sub
sbb
fwait
aas
gs
dec
sbb
adc
pop
xor
lret
call
repz
or
or
xchg
push
out
push
in
imul
add
push
push
popa
mov
inc
inc
push
std
nop
xor
cmpsl
out
xchg
add
and
test
xor
out
loopne
sub
and
push
jae
loope
cmc
or
pop
ds
enter
test
jge
mov
mov
cmp
pop
insl
mov
inc
stc
add
pop
sbb
dec
jmp
pop
jae
mov
cmpsl
mov
cmp
pop
jne
les
insb
stos
lods
add
scas
add
mov
push
in
pop
in
in
add
insl
xor
jno
xor
nop
andb
dec
and
mov
ss
push
call
daa
std
jle
pop
cmp
adc
pusha
popf
or
mov
cmpsb
hlt
mov
or
jmp
pop
push
pop
les
in
repz
dec
nop
mov
fwait
cmpsb
sbb
mov
rorl
and
jae
mov
out
or
popa
arpl
jge
jae
sub
je
insb
imul
gs
sbb
xchg
mov
mov
cs
rcll
mov
jmp
movsb
adc
adc
push
pop
push
pop
inc
ss
inc
rcl
sub
push
out
call
push
hlt
inc
pop
jo
jnp
mov
mov
popa
andl
ret
xchg
clc
les
fidivl
jmp
loopne
test
stc
dec
cltd
inc
sbb
subl
fmull
hlt
or
xchg
fistpl
jp
scas
insb
xlat
out
in
add
add
loope
and
adcb
repz
xchg
mov
insl
jmp
test
add
dec
add
dec
sbb
ret
adc
xor
cld
or
pop
xor
shlb
sub
sub
call
sub
mov
sub
add
aas
jmp
movsl
lods
int3
pop
and
fsubr
ja
pop
leave
push
and
mov
fstpl
aaa
pusha
dec
mov
sbb
test
fsubl
lods
jno
sbb
cli
push
xchg
pop
jno
cmpl
and
repz
popf
jb
jg
xchg
shl
add
pop
add
pop
push
pop
faddl
inc
xchg
repnz
pop
out
icebp
pop
popf
sti
mov
xor
mov
push
pop
stc
add
mov
fstps
mov
cs
sub
mov
or
orb
es
xor
add
mov
int
in
aam
adcb
lcall
inc
inc
sub
and
cld
dec
mov
in
adc
adcl
enter
inc
aam
movsb
push
ret
leave
cmp
jae
inc
pushf
arpl
cltd
or
ficoml
sbb
sub
nop
jmp
cmc
mov
inc
ljmp
je
aad
jno
pop
jns
das
imul
gs
enter
push
push
and
jg
sbb
and
hlt
mov
cld
stc
mov
jne
int
lods
or
pop
dec
in
aaa
enter
ds
xorb
inc
mov
je
add
jno
xor
fidivrl
sti
add
shlb
rcrb
or
mov
push
dec
and
into
popa
sub
into
pop
fidivrl
fldcw
test
cwtl
pop
xor
outsl
adc
dec
repnz
add
xchg
lock
insl
jmp
aaa
andb
movsb
push
jp
jae
div
test
jg
pop
arpl
lock
push
add
inc
add
into
jge
in
and
nop
clc
arpl
adc
loop
cmp
in
jmp
call
popf
and
pop
je
mov
sub
mov
cmpb
ja
xor
hlt
sub
test
sti
cmpsb
lds
test
popa
mov
lea
outsb
jge
xor
dec
stc
cmpsb
mov
pop
jb
ret
mov
jg
out
stc
lcall
mov
adc
and
dec
xchg
and
xor
sbb
jecxz
mov
adc
arpl
sub
stos
xchg
jmp
fs
jb
mov
sbb
das
pop
cmpsb
gs
rcrl
xchg
jne
cwtl
pop
cmp
dec
jae
add
or
sbb
adc
ljmp
mov
mov
fdivl
or
mov
sti
es
mov
cmp
mov
xchg
dec
insb
jle
push
xor
jb
dec
push
clc
shl
ds
or
in
arpl
and
es
cltd
call
fnsave
push
lock
mov
insb
xchg
lock
mov
xchg
decb
inc
out
hlt
jle
inc
jb
push
movsl
lcall
cmp
pop
ficomps
pop
shlb
ja
and
push
popa
mov
lods
lock
ds
xchg
dec
mov
inc
sbb
sbb
or
dec
sbb
lods
inc
flds
dec
pop
test
ret
out
inc
loopne
inc
les
jns
ffreep
lea
aaa
xor
daa
jb
out
pop
lods
xlat
dec
sbb
stc
lods
out
stos
out
and
jp
xchg
cltd
ret
lret
cld
movsb
pop
fdecstp
hlt
aam
mov
pushf
pop
pop
cmp
int
inc
dec
sarl
mov
lods
push
cwtl
cs
ss
push
je
add
test
out
jb
xchg
mov
fcomps
pop
inc
sub
rol
bound
or
in
mov
mov
divb
sub
mov
jns
xchg
fdiv
insl
call
test
les
orl
loop
and
stos
insb
jge
sub
out
mov
test
pop
test
mov
pop
clc
mov
jnp
push
adc
dec
mov
ret
je
scas
mov
popf
std
inc
lret
imul
addr16
or
repz
mov
cwtl
push
mov
insb
cmpsb
sbb
mov
repz
stc
push
sub
jnp
test
rcr
inc
push
outsb
push
sbb
or
out
ret
xchg
jns
fs
push
pop
mov
and
or
les
push
jle
sti
push
lods
and
repz
xchg
dec
sbb
scas
push
add
adc
adc
mov
sub
or
test
test
adc
ds
rcll
or
nop
int3
loopne
popa
xchg
adc
repz
in
bound
in
lret
int
test
adc
adc
add
aad
adc
xchg
add
mov
sub
mov
fimuls
cmc
icebp
notl
cmp
add
sbb
xor
push
xchg
fisttpl
insl
hlt
lret
adc
and
outsb
inc
aam
xchg
in
adc
cli
mov
movsl
dec
in
cli
addb
lock
pop
adc
movsl
sbb
adc
aas
out
int3
inc
shrl
aam
rcll
movl
mov
testb
or
pop
lret
out
dec
jnp
sub
cmc
add
cmp
negb
scas
cltd
xor
je
mov
jle
push
xchg
xorl
pusha
or
xor
ljmp
out
fmuls
dec
cld
and
outsb
les
imul
dec
gs
cmpsb
cld
lea
jbe
dec
les
sbb
frndint
mov
pop
jp
adc
in
push
add
int
addr16
loop
xor
xor
jno
outsb
les
aad
xchg
pop
in
test
sbb
subl
adc
cwtl
divb
rcr
ljmp
mov
and
pop
shlb
leave
dec
jbe
lahf
repnz
cltd
dec
es
shlb
stos
fstl
cltd
les
add
mov
adc
call
in
mov
stos
and
loop
pop
aam
pop
add
jecxz
sbb
jmp
imul
stos
mov
mov
add
xlat
xor
cmpsl
jae
iret
sub
cli
cmp
cltd
std
mov
add
lock
stos
sub
xlat
jnp
or
decl
lret
lock
and
jge
std
push
daa
push
push
fdivrl
lods
fisttps
sub
test
bound
out
rcrb
push
mov
sbb
mov
jnp
mov
cmp
call
test
sub
loope
daa
pop
mov
ret
ja
test
mov
mov
stos
adc
imul
nop
adc
pop
push
cli
inc
mov
pop
jp
fmul
cmpsb
ja
mov
jbe
mov
push
pop
dec
repz
mov
adc
clts
rcll
in
xchg
push
inc
mov
mov
cli
xor
pop
add
ret
into
bound
push
sti
js
mov
adc
lret
movsb
pop
and
pop
xchg
add
jmp
insl
pop
andb
adc
adc
ljmp
mov
lds
lahf
scas
xchg
outsb
mov
pop
xchg
test
mov
sub
lret
sbb
sbb
outsl
lcall
jge
push
adc
lret
in
add
sub
out
mov
cmp
sub
mov
shll
hlt
cmc
push
lds
in
push
ds
mov
and
push
push
sub
int
ffree
fdiv
aas
jl
leave
out
sahf
fcomip
test
adc
xor
push
lods
mov
push
inc
out
mov
and
xor
call
mov
cmp
shrb
decb
gs
mov
dec
xor
and
rcrb
xchg
pushf
add
rorb
lret
mov
sbb
roll
inc
or
xor
push
push
rclb
push
cld
cli
jne
hlt
lret
push
and
push
incb
or
cmp
and
dec
cwtl
negb
in
jge
sti
push
stc
mov
testl
pop
lahf
scas
xchg
fsubl
frstor
cmp
inc
mov
nop
mov
inc
or
in
inc
or
push
xchg
jle
sub
mov
cmpsb
jg
inc
mov
adc
imul
dec
push
push
aad
dec
push
inc
sbbb
scas
icebp
inc
aaa
inc
push
dec
popa
mov
and
jno
mov
imul
inc
inc
xchg
push
lcall
cmp
test
sbb
ds
cmpsl
enter
mov
adc
push
sbb
std
pusha
stc
rclb
fsubrl
lea
push
fdivs
inc
mov
imul
jnp
pop
std
mov
insl
mov
pop
sub
cmp
rcrl
mov
out
jle
lock
inc
push
outsb
hlt
sti
hlt
sar
adc
in
fdiv
sbb
int
aam
lds
mov
adc
lds
sub
inc
inc
sub
lods
xchg
loop
inc
dec
les
je
mov
or
or
das
lahf
enter
push
in
out
loopne
lret
imul
xchg
je
pop
add
cwtl
push
or
mov
cmp
xlat
inc
jle
filds
cmp
mov
sub
dec
pushf
jle
cmp
arpl
jnp
pushf
rcrb
pushf
pop
test
ljmp
xchg
jle,pt
lea
aad
arpl
filds
je
cmp
mov
or
iret
in
testb
jno
mov
divb
mov
das
scas
mov
xchg
out
out
jge
xchg
add
addr16
stos
popf
mov
inc
push
and
sub
xchg
test
out
push
into
xor
test
push
adc
push
sar
sub
addl
xchg
in
jmp
xchg
cld
sti
pop
stc
sub
inc
imul
inc
dec
fmuls
lods
cmpsl
xchg
cmp
pop
cld
pop
loop
inc
out
movsb
mov
test
or
sub
shll
sti
mov
cld
adc
mov
popf
mov
or
clc
dec
xchg
mov
sub
loopne
add
ljmp
jne
jg
xchg
cmpsl
dec
aaa
pop
mov
cld
jge
sahf
and
cmp
jmp
pushf
arpl
sbb
mov
jbe
dec
jae
push
inc
movb
xchg
push
shll
insl
push
cmpsl
jbe
lds
or
cmpsb
stc
sub
mov
and
imul
mov
inc
js
sbb
and
dec
shlb
xor
xchg
mov
inc
mov
idivb
mov
cmp
dec
mov
inc
addb
pop
shrl
lea
insl
scas
ret
add
pop
inc
pop
fistl
pusha
mov
mov
jnp
add
mov
sbb
jo
je
fcmovu
lret
xchg
jnp
push
mov
and
fisttpl
pop
push
stos
cmpsb
fucomip
outsb
xchg
xor
loope
test
pop
in
mov
sub
lret
out
rclb
int
pop
push
xor
scas
inc
cltd
jg
stos
inc
jnp
mov
imulb
iret
jle
dec
mov
xchg
mov
and
and
pop
mov
mov
pop
dec
icebp
test
or
mov
shlb
pop
test
jp
mov
and
rorl
inc
test
add
or
sbb
lock
out
std
fs
mov
stos
lods
pop
push
insb
stos
in
roll
scas
std
ljmp
cmpsb
cmpl
ret
and
popf
fsubs
loope
in
xchg
push
or
repz
push
les
push
leave
push
sbb
cmp
dec
mov
int
int3
andb
arpl
xchg
js
adc
fst
or
roll
mov
push
inc
js
xchg
xchg
inc
loope
cmp
popa
sub
loope
aad
mov
aam
adc
mov
sub
sub
xlat
or
gs
add
pop
dec
lds
xchg
jecxz
movsb
mov
nop
pop
mov
add
repnz
sbb
mov
nop
sub
add
cmpsl
fcmovu
aas
push
cwtl
sbb
pop
jbe
ret
aad
insl
lods
prefetchw
mov
mov
push
lret
xchg
inc
es
in
jnp
and
std
jae
lods
mov
lds
jno
pop
mov
add
mov
loopne
ds
lret
fsub
add
cmp
insl
xchg
data16
leave
cwtl
mov
test
xor
mov
lcall
inc
xor
push
stc
xorl
or
fs
jecxz
cld
xchg
xor
pop
jae
pop
mov
sub
pop
cmp
lds
in
pop
inc
cltd
outsb
bound
in
push
std
inc
xor
add
jnp
pop
loope
in
cmp
or
fdivl
lahf
dec
aas
js
xchg
and
pop
adc
and
test
jmp
in
outsl
pop
push
dec
inc
rolb
sbb
sbb
popa
mov
pop
das
sbb
ret
test
addr16
fisubs
mov
mov
sub
flds
pushf
loope
ss
fsub
or
cmp
lret
repnz
int
pop
hlt
lock
sbb
imul
push
mov
daa
loopne
or
and
loopne
cmpsb
cmc
mov
outsb
popa
aas
inc
push
inc
imul
je
inc
stc
push
fs
loope
cwtl
in
adcb
addl
add
gs
les
pop
mov
xchg
fisubrl
lea
jecxz
mov
int3
dec
lock
xchg
movsb
insb
jecxz
aaa
sbb
jl
xorl
adc
sbb
push
mov
mov
nop
roll
lds
push
and
adc
pop
mov
push
ds
cmpsl
test
sub
or
sub
iret
xchg
or
test
repz
push
xchg
shrb
arpl
insb
push
popf
out
fdivl
sub
lea
loop
loope
jne
aad
mov
test
sahf
outsb
outsl
dec
sbb
mov
mov
inc
pop
mov
adc
or
andl
mov
ret
or
mov
or
cmp
std
push
cwtl
and
and
push
je
pop
gs
dec
xchg
dec
dec
insb
fistl
xor
fistps
mov
sub
repz
aad
cmp
mov
ficompl
push
cli
dec
push
jecxz
lret
mov
xchg
jne
add
and
scas
movl
dec
mov
shlb
adc
jno
or
pop
push
ljmp
sub
outsb
insl
mov
mov
loope
jecxz
xchg
int3
pop
inc
add
xchg
insb
mov
sub
pop
xor
jle
out
push
jno
cmp
pop
fwait
mov
and
int3
hlt
inc
rorl
pop
jae
pop
imul
ljmp
in
mov
movsl
push
test
loopne
push
xchg
cltd
dec
es
popf
pop
or
fsubs
dec
and
stos
adc
adc
jb
push
jne
cltd
push
rcll
pop
cmp
dec
hlt
ja
lods
stc
mov
aad
push
dec
xchg
sub
mov
pop
int3
fidivrs
bound
inc
mov
cmp
push
in
sub
mov
and
xchg
aam
call
popf
lods
lock
jmp
int
nop
dec
fsubs
pop
insl
cmpsb
inc
cmpsb
mulb
push
mov
in
fsubrs
mov
daa
movsl
hlt
repnz
daa
popf
std
int
xchg
dec
ja
mov
jb
pop
sbb
shll
lret
enter
push
mov
repnz
gs
sbb
adc
imul
dec
aas
fisubrl
pop
es
in
xchg
jns
fsubr
jae
rcr
or
std
movsl
enter
popa
cld
sbb
sub
stos
push
insb
enter
stc
push
addr16
push
insl
fcoml
scas
lock
jne
lods
xchg
insb
js
fldcw
mov
mov
test
dec
jnp
pop
repz
or
and
mov
fs
imul
in
lcall
mov
jmp
mov
add
popa
xchg
lods
sub
sub
jp
mov
rcrb
hlt
push
imul
scas
cmpsb
pusha
movsb
jno
imul
les
jae
mov
add
push
addr16
fidivs
icebp
mov
mov
lds
jl
aas
mov
std
xor
int
adc
dec
aas
fs
int
add
adc
pop
lcall
int3
mov
mov
in
mov
mov
fistl
xor
xchg
pop
jae
mov
int3
daa
pushf
dec
ds
pop
or
cmp
int
test
inc
sub
or
jbe
fcoms
repnz
scas
je
addr16
add
xor
xor
jo
out
push
mov
sbb
pop
andb
cmp
mov
test
jnp
lret
pop
shrb
jb
xor
and
dec
cmp
mov
mov
fimuls
mov
inc
inc
rclb
xchg
jbe
out
leave
dec
dec
outsb
or
lds
int
inc
cmp
loop
idivl
mov
sub
aaa
jg,pt
push
aas
mov
push
into
xchg
sbbl
xchg
cmpsl
jmp
js
mov
jle
icebp
sub
jae
lret
ror
outsb
ss
icebp
les
xor
jecxz
mov
inc
das
insb
pop
or
decl
lds
movzwl
jnp
shl
inc
lock
pusha
xorb
enter
cmpsb
mov
bound
lret
xchg
test
xlat
dec
cmp
xchg
push
ret
mov
jns
mov
mov
push
jmp
hlt
in
aad
adc
hlt
ret
fistps
cltd
fisubs
shll
sbb
mov
hlt
sbb
xor
mov
fcmovu
dec
push
xchg
stc
in
push
flds
imul
dec
and
and
xchg
xchg
fs
nop
test
xchg
sbb
adc
int
push
xchg
pop
mov
cltd
arpl
int3
mov
out
in
mov
dec
adc
lods
mov
ljmp
std
loop
stc
addl
adc
adc
stos
lcall
fcmovb
sahf
lcall
aad
and
call
push
lds
add
in
aad
and
and
shlb
xchg
inc
dec
push
xchg
push
pop
xor
and
cmpsl
in
sub
xchg
insb
dec
test
jnp
fdivrs
gs
pusha
test
xlat
lods
loope
ficompl
push
and
shll
insl
mov
jbe
jge
in
or
arpl
jg
shrb
add
sahf
inc
dec
mov
popa
mov
cmp
imul
add
adc
in
sub
scas
sbb
sahf
cwtl
mov
icebp
mov
inc
mov
adc
xchg
lcall
repnz
lock
jmp
call
js
sbb
fwait
xchg
cld
stos
jmp
mov
mov
and
cwtl
std
mov
mov
enter
mov
pop
mov
add
push
out
cmp
adc
pop
pop
rcl
sbb
lock
jb
nop
in
pop
cmp
lret
jmp
xor
insl
aas
stos
push
adc
andl
loop
dec
roll
mov
popf
and
mov
lock
or
ds
push
push
jns
dec
scas
les
sub
dec
in
movsl
mov
fldcw
hlt
mov
out
dec
lods
cmp
xchg
lds
imul
cmpb
pop
subl
inc
push
adc
xchg
pop
pop
stos
or
xor
sub
mov
jb
and
decl
gs
adc
stos
int
cmp
fadds
jmp
adc
adc
popf
es
fwait
mov
mov
call
inc
lock
dec
stos
add
xor
xor
scas
outsl
test
mov
mov
xchg
add
aas
add
je
dec
out
dec
sti
jae
fwait
mov
adc
mov
pop
mov
lock
jecxz
cmp
test
test
or
cmp
bound
cs
arpl
cld
jp
fstps
int
shll
arpl
das
push
movlps
repz
outsb
jecxz
or
popl
lret
out
icebp
or
js
and
popf
sub
cmpsb
xchg
pushf
xor
lods
jmp
dec
inc
pop
nop
jecxz
orb
mov
inc
stc
mov
mov
fidivrs
lea
cwtl
ja
jg
pop
add
pushf
jge
cmp
lods
pop
test
mov
cltd
sbb
subl
repz
imul
and
aaa
mov
jbe
std
lret
push
or
push
mov
xor
cmpb
cmp
jno
mov
cmpsl
cmp
rcrl
jmp
and
mov
xchg
lds
movsl
jg
popf
mov
add
js
pop
mov
push
inc
das
sbb
add
push
cwtl
fistpl
lds
adc
jae
jo
dec
mov
test
inc
dec
inc
fwait
jbe
lret
pop
jecxz
xor
les
pop
push
or
push
jnp
inc
dec
fwait
cs
mov
scas
mov
inc
cmp
adc
lock
sub
mov
test
scas
lcall
sbb
sub
pop
dec
popa
push
jo
jns
or
jb
dec
dec
loopne
xchg
fsubrl
add
xor
popa
and
out
lahf
sbb
jg
pop
adc
mov
dec
dec
inc
aam
mov
inc
cld
cmp
dec
pop
arpl
mull
mov
les
out
loop
sbb
xor
es
jp
mov
push
sti
repz
xor
pop
dec
sbb
pop
push
adc
sbb
cmp
ret
jg
aas
std
call
push
jg
mov
jae
push
out
popf
sub
mov
jl
testb
mov
push
sbb
inc
repz
cmp
xlat
dec
mov
out
mov
or
push
das
mov
stc
jmp
aad
mov
cmpsb
cmpsb
mov
enter
imul
pushf
sti
cmpsb
in
sub
stos
cwtl
imul
in
push
dec
mov
mov
xor
repnz
add
mov
jns
fidivs
loope
arpl
add
fisubs
in
mov
out
xchg
fwait
cmp
roll
test
add
es
mov
decl
jmp
jo
dec
cmp
test
push
sahf
stc
mov
mov
push
gs
pushw
cmp
adc
and
inc
add
icebp
push
mov
jb
or
xor
cli
inc
push
sub
lock
add
add
sbb
pop
or
push
xor
shl
fnstcw
lret
mov
sub
inc
pop
add
and
sbb
add
adc
shll
adc
dec
dec
xlat
and
inc
jne
push
fdivs
or
xor
push
pop
addb
adc
fnstenv
jne
mov
ret
scas
shl
push
insb
and
dec
imul
and
inc
xor
xchg
or
icebp
repz
jno,pt
and
and
ss
xor
loope
lds
dec
mov
popa
fists
push
sbb
in
and
dec
aaa
cmc
data16
dec
mov
insb
mov
fcmovnu
popf
dec
xor
mov
cmp
sub
and
stos
push
mov
test
insb
ds
imul
jp
mov
icebp
filds
insb
jmp
dec
inc
pushf
std
push
pop
iret
lods
push
out
add
xchg
or
out
popa
inc
mov
push
stos
fimull
push
into
or
inc
aam
xor
jg
mov
movsb
sub
mov
jp
insl
iret
push
sub
xchg
call
adc
cltd
add
adc
jne
cmp
rclb
cmp
sbb
jge
xor
inc
mov
pop
scas
inc
sbb
add
push
jmp
clc
mov
or
stc
dec
push
add
mov
inc
and
sub
nop
sti
adc
mov
dec
sahf
fdiv
insb
scas
dec
aad
dec
push
sub
outsw
mov
repnz
mov
adc
out
das
mov
fisttpl
leave
movb
jo
inc
push
sbb
dec
arpl
and
or
fsubp
pop
sbb
mov
inc
cwtl
rclb
dec
ja
cli
iret
push
sub
cwtl
dec
sub
dec
sub
jg
jecxz
pusha
xchg
add
stos
int
icebp
fmuls
test
lds
movsb
cli
shlb
stos
leave
movsl
outsb
addl
subl
ror
and
add
mov
jle
jmp
dec
cmp
imul
pop
repz
ja
mov
outsl
or
fisttpl
xor
into
es
xor
or
dec
xlat
div
cmpsl
test
mov
in
or
inc
adc
loop
pop
aas
js
mov
in
gs
mov
sbb
pop
cmp
mov
and
mov
sbb
outsl
sub
ljmp
push
push
mov
xor
mov
addr16
pop
inc
ljmp
clc
cli
adc
and
daa
das
mov
jecxz
fnstenv
or
std
repz
xchg
dec
xor
add
push
pop
fs
push
and
xchg
jmp
repnz
push
stos
or
inc
imul
xchg
push
pop
out
ja
mov
leave
mov
adc
jne
cmpsb
fmuls
in
add
mov
mov
lcall
movsl
push
pxor
sbb
sub
call
shlb
and
daa
mov
es
pop
mov
ret
xchg
inc
hlt
imul
loop
test
fbstp
mov
pop
xor
test
cmp
push
xor
cmc
arpl
push
fisttpl
sbb
test
xchg
dec
out
sub
pop
stos
loop
dec
sub
std
mov
mov
mov
xor
mov
sbb
cmp
add
or
push
rcl
aaa
sbb
sub
mov
or
mov
lods
and
mov
daa
fcoml
mov
xchg
or
sbb
inc
dec
mov
and
mov
in
xchg
jno
rcl
inc
inc
push
push
or
push
cltd
adc
mov
rcr
in
imul
cli
mov
add
cmpl
pushf
push
sub
sub
push
fucomp
dec
jecxz
pop
scas
shlb
imul
xor
inc
in
push
mov
and
push
icebp
or
push
shlb
jbe
cmp
mov
mov
popf
mov
popa
sbb
add
das
jbe
mov
xor
jae
lods
mov
fldt
fildll
inc
sub
fsubs
mov
outsl
mov
int
cld
or
push
adc
xchg
jge
lods
adc
adc
xchg
vcmpneq_oqsd
xor
mov
lds
sub
sub
sbb
scas
lahf
scas
inc
cmp
loop
nop
movsb
shl
push
loop
sahf
xchg
pop
aad
lock
or
jmp
loop
jae
sbb
jl
or
push
icebp
adc
jle
outsb
cmpsl
jo
sub
out
cmp
mov
in
xchg
mov
jnp
mov
dec
xor
bound
aam
add
aas
mov
aaa
rcl
jb
ja
aam
sbb
int3
cmp
iret
or
and
add
xchg
fadd
out
data16
fmuls
jecxz
sarb
or
int
and
jg
cwtl
out
adc
pusha
cmpsl
into
loop
xorl
adc
movhps
mov
test
aaa
jb
xor
xor
adc
dec
dec
adc
mov
das
mov
scas
pusha
jo
or
add
pusha
jge
jnp
sbb
inc
sbb
or
test
iret
ds
and
xor
dec
jns
mov
mov
push
mov
cpuid
add
stc
imul
add
movsl
or
jg
dec
or
imul
adc
stc
pusha
pop
push
inc
xchg
cld
inc
cmp
xor
xchg
add
push
mov
add
mov
cltd
enter
loope
jle
inc
mulb
cmp
mov
cld
scas
ret
mov
sub
push
iret
pop
mov
stos
sub
cmp
ss
mov
aaa
movsb
addr16
push
inc
fldt
mov
adc
cmp
cmp
xlat
inc
pushf
xchg
enter
mov
xor
mov
mov
cmpsb
bound
enter
adc
xchg
repz
add
out
xchg
repnz
mov
jnp
mov
and
xlat
loope
xor
es
pusha
dec
jmp
pop
int3
stos
lds
pop
inc
pop
popa
fiadds
cmp
push
cmp
mov
cmc
cwtl
lods
adc
push
in
sbb
lds
pop
lcall
cli
cmc
dec
dec
inc
push
jne
or
popf
into
shlb
es
imul
push
iret
addr16
scas
es
rcr
lods
or
nop
push
jbe
addr16
mov
push
sub
pop
nop
mov
and
test
test
push
out
jp
or
push
ret
dec
cmp
jne
fisubrs
cmpsl
mov
cltd
push
scas
dec
inc
repz
or
insl
jne
mov
cltd
xchg
into
repz
add
iret
test
loop
rol
push
lods
jmp
xlat
fdivp
dec
push
pop
or
mov
jnp
idivb
mov
lahf
xchg
dec
inc
push
repz
xchg
sub
imul
cmpsb
push
cmpsl
hlt
jle
adc
xor
xor
insl
insl
mov
sti
cwtl
std
sub
push
adcb
clc
decb
cmpsb
loop
shlb
loop
sub
sub
mov
int3
and
call
push
icebp
or
inc
cmpsl
cmp
scas
mov
adc
push
sbb
cmp
jns
dec
ljmp
nop
ret
pop
insb
test
push
sub
jecxz
addr16
xor
xchg
xchg
mov
sbb
jno
pop
pop
cmp
je,pt
aam
mov
cmp
push
leave
cli
xchg
popa
sarl
push
gs
test
fsubrl
sbb
mov
adcb
adc
add
pop
sti
add
inc
push
jae
insl
fcmovu
cltd
shl
mov
adc
cmc
ss
lahf
mov
mov
xor
xor
aaa
jae
push
in
repnz
in
adc
lds
mov
jecxz
loope
test
xor
in
or
mov
hlt
push
out
mov
pop
dec
push
int
sbb
test
push
movsl
rcrl
pop
decl
inc
shl
mov
pop
out
pop
sbb
cld
xor
movsl
cs
jb
pop
pushf
outsl
shll
sub
jecxz
inc
push
xchg
faddl
popf
cmpsl
ja
mov
mov
xchg
hlt
stos
and
mov
xchg
hlt
and
and
nop
or
fcmovb
scas
jmp
add
xor
pop
xor
rcl
mov
xchg
sahf
add
xor
mov
data16
nop
and
dec
in
sbb
loope
xchg
popa
pop
mov
nop
mov
pop
cmpsl
fwait
push
mov
imul
roll
rol
aad
je
sub
data16
arpl
xor
faddp
and
mov
mov
loopne
sbb
xchg
cmpsb
xor
xchg
mov
push
inc
int
mov
in
int
stos
scas
jo
rcr
rorb
lock
std
xchg
push
sahf
jl
lahf
add
filds
std
imul
je
lcall
mov
mov
sub
xchg
les
jle
jl
sbb
aam
lds
adc
dec
push
push
xchg
imul
ja
jl
aad
imull
and
xchg
lea
jmp
in
xchg
in
pop
aaa
ret
or
cmp
xlat
mov
cs
cmp
and
mov
call
mov
lret
mov
iret
add
mov
jae
lds
adc
scas
mov
or
scas
enter
xchg
leave
xchg
es
arpl
lret
mov
push
shrl
loope
imul
xor
call
push
mov
pop
xchg
mov
clc
cmc
pop
or
sbbl
jnp
shr
mov
mov
imul
mov
fimull
sahf
loop
mov
or
repz
fdiv
xchg
fcompl
adc
hlt
cmp
xchg
cmpsl
mov
cmpsl
mov
sbb
and
mov
fildl
movsl
pop
aam
fdivrp
push
or
int
dec
or
and
and
sbb
repz
pop
test
es
lcall
xor
xchg
or
in
stos
insb
mov
call
pop
lea
push
int
lods
lahf
inc
popf
inc
mov
inc
or
xchg
movsl
jnp
mov
sbb
pop
inc
sbb
xchg
out
mov
leave
movsb
push
xor
sub
ds
xor
insl
jb
pop
hlt
inc
data16
xchg
dec
rcr
inc
cmpsl
jae
ljmp
or
loopne
movsl
push
rcrb
loope
mov
jge
imul
imul
test
pop
scas
fwait
je
adc
or
cmp
cmpsl
inc
mov
loopne
lret
xchg
in
jns
data16
xchg
mov
sub
jo
mov
daa
cmc
xchg
out
aas
add
sbb
push
es
sbb
mov
dec
arpl
jle
mov
iret
loope
adcl
jmp
ret
dec
movsl
mov
dec
pop
nop
add
mov
sub
cwtl
push
dec
mov
out
sbb
mov
or
mov
dec
int
add
jns
aas
pop
adc
icebp
push
add
jle
aam
jb
inc
int3
lock
add
cli
jnp
push
mov
push
out
mov
sub
jg
mov
add
jmp
inc
fldenv
std
orl
mov
or
ss
daa
les
pushw
aas
iret
push
fimuls
push
pusha
sarl
test
or
pop
ljmp
aad
and
int3
jg
in
cmp
xchg
and
in
xchg
dec
inc
lds
dec
rcrb
int3
add
test
add
mov
popa
or
mov
negl
gs
push
sti
mov
and
in
call
lds
aas
sbb
in
add
outsb
adc
and
add
inc
pop
mov
lock
xchg
push
test
cmpsl
and
scas
sbb
inc
add
and
test
divb
push
mov
lea
jae
insb
jl
inc
stc
xor
xchg
addr16
jae
mov
cmc
pop
mov
mov
or
ds
in
es
fldcw
cmpsl
xchg
pusha
mov
int3
cmpsb
sti
adc
pop
jo
jecxz
jo
and
cs
xchg
dec
ret
mov
mov
sub
jb
push
push
dec
push
adc
lods
jg
aam
or
xchg
stc
push
into
pop
cwtl
xchg
and
dec
sahf
or
int
mov
iret
iret
lds
imull
mov
outsl
adc
xchg
and
cmpb
scas
ds
jmp
ss
sub
adc
stos
shll
fs
ficoms
ds
xor
adcb
adc
pop
xchg
or
xor
and
xchg
dec
push
add
adc
call
shl
xchg
ret
add
cwtl
out
xchg
push
stos
les
lods
and
push
sub
in
xor
mov
jns
lea
loopne
daa
fs
inc
mov
scas
mov
shrb
mov
add
test
aaa
jo
scas
jns
xchg
sub
push
adc
xor
jae
xor
mov
mov
add
imull
jns
ret
xor
movl
pop
pop
jmp
adc
std
jg
std
push
jno
movsl
adc
sub
jp
xchg
clc
push
dec
sbb
xor
push
push
daa
jns
aad
negl
call
add
popa
test
pop
push
lret
adc
mov
lahf
mov
mov
outsb
mov
imul
pop
push
popf
cmp
loopne
jns
sahf
lock
xchg
inc
dec
gs
bound
dec
adc
lret
mov
xchg
js
test
inc
mov
add
les
jmp
or
push
mov
jle
inc
cmp
les
in
rcll
inc
ret
xchg
sub
push
or
dec
pop
in
in
sub
rcrl
test
mov
inc
adc
jl
cltd
fwait
lds
push
inc
pusha
mov
ret
mov
sub
push
mov
loop
xchg
mov
mov
inc
outsb
xchg
stos
push
lahf
push
mov
push
jge
adc
out
cmp
rcrb
and
in
pop
int3
dec
add
ss
mov
stos
ss
hlt
pushf
dec
insb
jbe
inc
pop
je
lds
push
jl
xchg
stos
insb
cmpsb
popa
fists
push
lahf
push
dec
inc
inc
push
mov
xchg
mov
mov
add
jmp
jne
cld
xchg
lock
subl
lods
dec
addr16
pop
mov
bound
mov
gs
xchg
push
inc
and
and
in
push
xor
dec
ficomps
mov
add
sbb
mov
repnz
mov
ror
pop
lret
test
std
sub
rcrl
cmpsl
icebp
cmpsl
loop
jns
and
xchg
jmp
cli
nop
inc
cmp
pushf
jg
jbe
cs
sub
xor
popl
leave
mov
pop
mov
insl
insl
je
fdivrs
adc
sbb
jae
aad
jbe
mov
sbb
sub
mov
sub
movsb
inc
loope
leave
in
les
jmp
loop
out
bound
mov
jecxz
add
lods
sahf
cmc
popaw
scas
mov
push
test
icebp
dec
orb
push
cmp
ret
enter
es
loopne
or
mov
scas
mulb
pop
dec
mov
mov
loope
adc
adc
pop
push
out
or
aaa
daa
sti
shrl
pop
cwtl
ret
push
test
leave
dec
sbb
jle
pop
cmpb
lcall
push
inc
mov
test
add
mov
xchg
cs
test
data16
pop
pop
fists
fmuls
fstl
xchg
lahf
repz
xlat
and
popf
jp
sbb
adc
push
cmp
push
xchg
scas
jmp
cli
nop
movsb
inc
xchg
push
ss
gs
pop
inc
sarb
fmull
mov
xor
cmp
jge
pop
movsl
in
fidivrs
shlb
push
lock
leave
stos
dec
jns
xchg
xor
sbb
mov
cmpb
test
sbb
xchg
push
outsl
nop
or
loop
cld
cmp
fcmovu
mov
cmp
push
pusha
je
addr16
push
insb
mov
jo
ret
pop
mov
and
or
cmp
cmc
ss
repz
push
mov
shrb
sub
cltd
pop
repz
inc
adc
loope
or
mov
xchg
jge
adc
loopne
add
test
add
testb
mov
mov
push
cld
dec
jp
fmuls
cli
jl
fnstenv
adc
icebp
nop
dec
fwait
xchg
pop
ret
out
ljmp
ret
inc
mov
jbe
lret
pusha
outsb
addl
mov
scas
or
sub
cltd
inc
sbbl
and
lret
popa
cmp
cmpsl
adc
and
adc
rol
sub
rcrw
adc
ficoml
icebp
loope
icebp
and
into
into
sbb
cmpsb
pusha
stos
test
sub
and
in
xchg
pop
shr
mov
add
inc
jg
or
adc
and
pop
bound
jp
or
decl
cltd
sbb
ret
in
cli
fucomip
into
lds
or
mov
arpl
popa
pop
andl
mov
test
ss
sbb
cli
or
mov
incb
sub
cmp
sub
testb
aaa
cmp
data16
xchg
dec
fisttpl
mov
fcmovnb
adc
js
inc
fdivrl
arpl
jl
jbe
add
stos
and
push
fidivl
sarb
mov
dec
xchg
sub
and
push
outsl
mov
inc
pop
jl
mov
popa
imul
aad
mov
popa
das
shlb
dec
rcr
in
sub
add
repnz
das
cld
cwtl
into
mov
cmpb
pop
cltd
lods
out
jge
jnp
das
lods
outsb
jmp
add
rcll
pushf
mov
sub
daa
sarl
xor
cmp
cmp
dec
jecxz
fbld
hlt
mov
dec
or
popf
fisubrl
movsl
or
ljmp
cmp
add
push
addr16
cwtl
lea
cmp
pop
xchg
mov
shll
adc
dec
cld
idivb
icebp
in
mov
test
rcll
imul
lds
rcr
and
insb
rsqrtps
fs
imul
test
push
shlb
loop
xor
in
or
iret
adc
cmp
pop
in
test
xor
sub
cmp
pushf
xchg
scas
jns
clc
packuswb
scas
aad
int3
push
shrl
cmpsb
ljmp
add
cmp
popf
mov
gs
push
shlb
sub
sbb
xchg
loope
in
sub
std
cmp
cmp
cmp
mov
inc
xor
sub
sbb
outsb
call
pop
insb
loopne
movsl
and
insb
xchg
lret
int
daa
jecxz
push
adc
fildll
vmovdqa
mov
dec
test
and
shr
scas
cmp
mov
flds
jne
inc
dec
xorl
adc
icebp
rcrl
pop
inc
inc
je
pop
repz
sbb
jo
call
mov
adc
cwtl
cmp
cwtl
push
int3
insl
stos
push
enter
mov
cmp
jbe
push
cmovae
fwait
insl
in
popf
xchg
push
and
incb
bound
inc
hlt
addr16
push
push
jge
mov
inc
push
xchg
dec
xchg
and
mov
nop
cmc
mov
sarl
iret
xor
push
insl
xlat
sbb
dec
and
sub
cmp
stos
mov
int
shll
lods
cli
cmc
push
ret
jl
lods
add
lahf
push
sub
dec
addr16
psadbw
call
test
pusha
xor
push
pop
pop
mov
mov
inc
int3
pop
int
inc
mov
adc
fwait
addl
mov
mov
cltd
ret
add
sarb
adc
cmpsb
add
stos
mov
push
ss
mov
dec
xor
imul
test
pushf
mov
xchg
dec
ja
sahf
repz
inc
ret
jne
push
popl
xchg
sbb
pop
lods
cli
sub
and
arpl
loop
aas
push
cmp
call
push
pop
shlb
pop
xchg
xor
add
jns
jae
aam
pusha
add
inc
push
sbb
lcall
mov
mov
mov
push
js
int
add
pop
mov
xchg
jo
xor
pushf
int3
pop
ror
sbb
dec
jg
cmp
xchg
xchg
aaa
movsb
arpl
sbb
sbb
dec
add
lods
clc
xor
enter
icebp
mov
inc
pop
push
jnp
cmpsb
in
aam
mov
daa
dec
lods
cmp
leave
pop
mov
clc
test
mov
adc
lea
cmp
lods
jns
into
scas
pop
sub
cwtl
push
xor
mov
fnstsw
subb
mulb
loope
test
scas
pop
mov
mov
in
sbb
add
popw
mov
lcall
stc
fistpl
push
ffreep
cld
les
fdiv
push
mov
gs
mov
or
xor
movsl
imul
insb
dec
add
and
inc
and
fdivrs
shrl
lds
andb
jbe
sub
daa
sbb
loopne
adc
mov
xchg
lock
rorb
dec
adc
cmp
xchg
popa
add
and
lods
add
mov
lock
ss
sub
nop
adcl
fld
stc
dec
rcl
lock
fcom
pop
ret
enter
adc
loop
rcr
mov
mov
outsb
in
mov
mov
cmp
sub
sbb
push
mov
and
leave
out
in
insl
jb
fldl
mov
dec
add
adc
sbb
and
arpl
aam
scas
sbbb
push
jo
repnz
mulb
dec
fmuls
adc
out
adc
sbb
cltd
out
hlt
pop
push
js
inc
push
repnz
jl
cmp
out
scas
xchg
xor
rcr
popa
out
inc
outsb
adc
pop
cmpsb
add
lret
negl
in
movsb
movsl
rcrb
xchg
cwtl
mov
mov
dec
cmc
pop
push
pop
mov
hlt
inc
test
jne
leave
cmc
pop
in
mov
test
bound
cmpsb
test
std
enter
pop
clc
xchg
bound
aam
pop
cmp
cmp
cmp
scas
cwtl
pushf
das
data16
sahf
mov
icebp
xor
repnz
sub
in
xchg
test
lods
pop
xor
jmp
fbstp
mov
and
and
arpl
jmp
mov
pop
xchg
ja
mov
imul
lods
cli
loope
xlat
scas
shlb
rol
in
xorl
test
loop
mov
xorl
je
xor
gs
xor
adc
js
cltd
pushf
and
mov
stos
or
add
sbb
and
leave
fildll
fistpl
and
stos
scas
outsb
mov
adc
nop
mov
mov
lret
shll
mov
enter
push
mov
sbb
pop
call
pushf
gs
push
lret
mov
lds
mov
cmpsb
test
in
push
icebp
test
loop
add
fucomi
inc
mov
sarl
add
addr16
inc
dec
jecxz
fidivrs
leave
leave
fs
or
jle
adc
popf
adc
cmc
in
mov
cmp
pushf
ss
jbe
inc
popf
sub
push
cmc
js
pop
and
int
xchg
inc
xor
xchg
cmp
mulb
int3
xor
mov
adc
lds
test
sub
mov
sbb
lret
cmp
push
pop
mov
mov
xchg
mov
inc
lret
mov
in
mov
push
pop
mov
lcall
ds
jo
xor
fdivrp
movb
pop
xchg
repnz
aaa
enter
lcall
and
add
pop
adc
sbb
mov
mov
pop
cmc
sahf
xor
subb
inc
jp
xorl
leave
into
rcrl
jmp
dec
mov
mov
sarb
mov
sarl
clc
push
mov
cmp
repz
mov
out
lds
add
mov
or
cwtl
cwtl
jne
loop
sbb
pop
adc
jmp
test
sarb
loop
mov
jns
bnd
jns
xor
aaa
sub
test
inc
sub
mov
subl
mov
cmp
loopne
mov
lods
sbb
cli
mov
negl
push
sub
scas
sbb
mov
ja
sbb
jg
mov
inc
mov
adc
dec
shlb
pop
fistps
rcrb
enter
add
repz
or
ja
outsb
hlt
rclb
outsl
dec
inc
fistpll
inc
sub
jb
inc
mov
in
lret
in
inc
mov
orl
enter
pop
mov
pop
insb
pop
or
test
cmc
xor
and
sub
imull
dec
je
push
loopne
aas
xchg
xor
aas
repz
jnp
adc
scas
loopne
cltd
adc
popa
loope
xor
xchg
lcall
pop
fsubrs
pop
test
das
adc
inc
adc
movaps
rcr
ja
movsb
xchg
fbld
fbld
stos
mov
fsubl
int
jo
mov
popa
sbb
cmp
clc
outsl
sarl
cld
lods
push
ror
or
mov
mov
cmp
movups
scas
ret
movsb
mov
jle
mov
xchg
jae
inc
mov
les
mov
push
stos
mov
cmc
es
sbb
push
or
xor
or
mov
add
or
pop
mov
shlb
add
sahf
push
insb
gs
or
hlt
je
cmp
jnp
neg
idivl
lret
repz
xlat
int
mov
repz
xchg
add
or
jp
fld1
mov
and
dec
lcall
dec
xchg
test
shr
ret
mov
stos
xor
out
push
ficomps
arpl
sub
outsb
movsl
rcl
sbb
sub
mulb
mov
test
pop
in
inc
add
push
xchg
ja
mov
mov
add
xchg
in
dec
clc
pop
dec
cs
add
loope
clc
jne
jne
jge
adc
xchg
idivb
jae
mov
pop
and
xchg
cmp
lcall
dec
into
mov
pop
jnp
out
and
push
pop
pop
push
cli
cmpsl
out
push
icebp
adc
and
scas
jo
or
xlat
dec
jne
inc
fstl
sbb
adc
xchg
in
test
fcompl
sbb
in
pop
dec
and
cmp
inc
cmp
lock
jbe
lahf
rcl
iret
movsl
test
leave
pop
mov
push
lds
test
mov
imul
adc
jle
sub
frstor
cld
jge
lret
inc
adc
lcall
imulb
aad
pop
stos
xor
js
test
ss
or
mov
dec
shrb
jb
loope
lods
add
nop
loope
sbb
ja
dec
lcall
mov
aas
jbe
sbb
loopne
clc
mov
and
xor
sbb
sbb
or
call
fsubrs
jge
cmp
das
xchg
cltd
mov
and
mov
sti
and
cli
push
pushf
add
shl
dec
mov
shll
gs
jno
cmc
xchg
cwtl
pop
outsb
xor
lret
xchg
jae
jle
sahf
mov
jno
jae
daa
int3
cmpsl
sub
cltd
mov
jns
sahf
or
push
clc
cmc
ret
mov
add
aas
es
dec
or
push
repz
add
rcrl
cmp
dec
dec
fdivl
adc
and
scas
sub
movsl
xchg
mov
out
aam
out
aas
loopne
pop
mov
inc
sbb
adc
sbb
stc
dec
into
cmp
xor
pop
je
jo
jp
dec
pop
shll
orb
cmp
mov
push
mov
mov
push
mov
std
xor
stos
daa
cmp
vmovss
push
shrl
icebp
mov
lds
inc
mov
mov
bound
mov
inc
lods
mov
xchg
inc
imul
sub
xor
test
adc
sbb
out
clc
or
xchg
xchg
cld
push
iret
mov
or
hlt
xchg
sti
cmp
nop
stos
push
loope
jae
rorl
ljmp
push
insl
sbb
push
fisttpll
repnz
in
cmp
sbb
xor
int3
fldt
sarl
xor
std
sbb
lcall
pop
push
lret
mov
mov
cmp
in
jns
pop
and
jp
out
or
das
fstps
pop
pushf
fimull
je
hlt
or
test
outsl
sbb
pop
adc
cmc
adc
int3
enter
scas
sbb
xor
aam
push
test
testb
xor
jne
jl,pt
loope
push
push
xchg
or
outsl
push
mov
or
xorb
jns
sub
push
xchg
dec
cltd
outsb
jno
xor
adc
inc
imul
rcrb
pop
mov
out
test
cmp
mov
out
clc
jp
pop
rolb
jp
mov
iret
cmp
push
shlb
xchg
push
das
adcl
repz
shl
pop
dec
xor
sti
and
es
mov
stos
imul
mov
in
sti
std
dec
xchg
in
cmp
call
in
faddl
push
push
fnsave
xor
lea
adc
inc
push
pop
inc
js
into
nop
push
push
or
sub
inc
adc
test
scas
xor
andl
push
les
lods
and
dec
mov
sbb
mov
xor
aam
icebp
push
xchg
lret
pop
ss
fcmovb
jmp
or
loop
out
xchg
adc
lods
mov
or
push
xor
notl
mov
hlt
fsts
aas
bswap
into
cwtl
ss
mov
movsb
lds
and
add
and
or
aam
ret
mov
and
call
fbstp
jl
cmp
test
repz
pop
mov
mov
insl
int3
shrl
and
cwtl
sub
mov
dec
mov
insb
mov
test
jg
lds
and
jmp
aam
loopne
mov
outsb
cmp
mov
push
insb
sbb
std
lock
push
mov
xor
and
fs
js
dec
inc
and
test
out
shll
idiv
cli
push
icebp
pop
test
dec
xlat
push
push
push
mov
xor
jne
cs
mov
sbb
iret
jmp
fs
leave
insl
cmp
nop
xchg
or
jge
movb
ds
ja
in
lahf
cltd
cmp
fists
xchg
push
loopne
and
cmp
inc
lds
stos
push
fwait
pop
out
push
jb
and
jbe
es
adcb
icebp
pop
aas
cmp
fcoml
loopne
out
stos
aam
loope
addr16
mov
mov
cmc
test
pop
movsl
add
repnz
orb
popf
adc
es
sbb
or
outsb
loopne
popa
or
rcl
sub
iret
sarb
lahf
shll
adc
into
pop
add
mov
inc
imul
insb
jb
pushf
pop
pop
out
sub
cmp
into
outsb
ja
pop
sbb
negb
push
ret
inc
mov
mov
dec
pop
in
cmp
in
js
insb
push
sahf
and
sbbl
in
rclb
js
inc
inc
cmpsb
mov
and
outsb
imul
pusha
cli
mov
cmp
int3
data16
out
test
in
cmp
mov
cli
orl
lret
mov
in
inc
decb
dec
xchg
out
mov
and
jne
repnz
xor
add
clc
fsub
aaa
fsub
cmp
vcvtps2dq
cltd
test
add
jbe
fcmovnbe
arpl
pop
ljmp
jbe
mov
loope
imulb
in
imul
mov
xlat
into
fnstenv
dec
cmp
sub
dec
xlat
mov
out
cmp
jle
jnp
dec
lahf
pop
hlt
outsl
xor
cli
mov
cmpsl
imul
jns
xchg
les
scas
mov
adc
xlat
pop
xlat
or
jle
movsb
out
js
and
popf
pusha
mov
ret
out
jno
or
cld
cmp
push
and
cmc
xor
lcall
cmpxchg8b
in
scas
popl
mov
bound
cs
in
dec
bound
xchg
xchg
sub
mov
aaa
lock
sub
cmp
jg
hlt
lods
jne
sbb
test
negb
stc
test
inc
dec
rcll
je
movsb
pushf
pop
les
movsb
js
aas
in
fs
mov
xor
xchg
bound
ret
cmpsb
pop
adc
pop
add
jl
pop
jp
sub
cltd
fildll
pushf
sub
inc
and
jbe
lds
and
mov
insb
call
xlat
popa
insl
mov
ds
and
sahf
push
pushf
sbb
add
lods
sbb
in
xchg
loope
jns
cmp
int
orb
in
pop
into
ja
orb
sub
and
mov
rcr
xlat
adc
push
fistpl
push
jae
mov
xor
or
sbb
jne
mov
pop
and
cwtl
lea
sarb
das
cli
outsl
add
arpl
pusha
imull
pop
repz
or
fiaddl
add
aas
pop
andb
lods
cmpsb
pop
jbe
xlat
lcall
xor
stc
in
cs
lds
adc
fcoms
out
mov
sbb
insl
mov
stos
enter
fmull
xchg
and
data16
adcb
enter
movsb
lock
nop
xlat
outsl
mov
leave
icebp
lcall
jae
adc
dec
push
stos
push
pop
loop
data16
jecxz
jnp
ret
and
sbb
add
adc
pusha
sub
jae
add
aam
aam
add
sbb
pop
xchg
sti
jle
sub
lcall
mov
or
mov
inc
jnp
dec
mov
testb
cmp
pop
pop
sub
ret
sub
data16
dec
movsl
mov
lahf
insl
cmp
es
jnp
add
pop
je
xchg
xlat
int
data16
cld
xchg
rcl
sub
fwait
pop
dec
sub
lea
incb
cmp
out
pushf
sar
insb
add
fisubs
pop
dec
cltd
sahf
insb
mov
dec
insb
mov
subb
out
xchg
push
cltd
add
mov
int3
movsl
aas
popf
sti
popf
sbbl
fld
loope
aaa
aas
vpminub
rcrb
sahf
mov
xchg
nop
pop
aaa
add
out
movsb
adc
push
or
mov
sbb
cltd
adc
ret
inc
jg
popf
inc
movl
push
jg
lahf
movsb
out
jns
icebp
rolb
sahf
int
xchg
xor
and
inc
pop
dec
push
xchg
xchg
sub
jno
and
pop
add
pusha
pop
xchg
add
fstl
jle
scas
mov
and
mov
imul
out
in
shrb
dec
xor
andl
xor
xlat
mov
sti
into
out
add
scas
scas
xchg
or
mov
or
shll
inc
inc
add
int
mov
pop
inc
aad
pop
dec
push
and
cld
pop
lcall
cld
addr16
mov
push
cmc
push
add
and
imul
add
lcall
mov
add
add
nop
in
inc
xchg
int3
call
cmc
faddl
jle
sub
pop
inc
aaa
imul
je
in
addb
dec
xchg
push
pop
loop
lods
mov
insb
xchg
mov
insl
inc
adcb
fbstp
mov
sbb
out
cld
xor
fnstenv
adc
push
out
xor
cmpsb
nop
into
mov
sbb
outsb
lods
xchg
ss
clc
enter
lcall
jge
imul
jbe
adc
cld
xor
dec
cmp
mov
roll
xchg
sbb
cli
test
test
adcb
pop
mov
mov
push
iret
mov
push
xchg
xchg
fmul
add
outsl
dec
mov
jae
add
jmp
add
cmp
or
pop
pop
cs
lods
movsl
hlt
scas
or
mov
popf
jns
int3
cmpsl
loopne
pop
fadd
ret
movsl
dec
jp
cmp
ret
insl
lock
mov
inc
ret
add
sti
jg
xor
popa
lds
xchg
jno
outsb
bound
jns
cwtl
xor
inc
xor
inc
fnstcw
inc
lret
movsl
xor
or
jl
int
xchg
jle
mov
shl
xchg
divb
shll
mov
mov
adcb
repnz
jo
lahf
lret
adc
pop
addb
pop
in
ret
in
addr16
vandnpd
shll
sbb
mov
dec
dec
cmp
pop
les
outsl
into
call
scas
push
nop
bound
cmp
inc
xor
ljmp
xchg
inc
push
pop
xor
pop
daa
sub
inc
sub
mov
xor
push
aad
ja
pop
pop
repnz
data16
inc
push
test
xchg
mov
or
push
clc
loope
and
mov
js
xor
jle
iret
test
js
xchg
lock
stos
or
push
aaa
xchg
sbb
repz
xchg
stc
mov
or
clc
cli
xor
aad
push
int3
sub
lds
popf
jno
or
mov
mov
ss
test
inc
call
pop
jle
dec
in
dec
add
jns
adc
addr16
nop
mov
cmp
out
xchg
push
jb
jno
lret
iret
and
outsl
jle
xchg
inc
out
push
mov
gs
cmc
mov
mov
test
mov
jo
out
mov
inc
fcoml
insb
mov
jge
loope
add
cmp
mov
icebp
push
sbb
xor
jns
or
or
xor
or
or
xchg
test
cmc
xlat
rolw
xchg
mov
divl
cmpsl
shlb
dec
or
push
dec
mov
imulb
xchg
ud0
mov
adc
jl
push
sbb
in
icebp
pusha
sbb
mov
push
jl
sub
push
int3
mov
xorb
fmull
push
stos
lea
pop
xor
je
mov
adc
faddl
jae
cli
movsb
push
inc
sarl
ljmp
sub
es
cmpsb
pop
inc
fsubrs
movsb
adc
cmc
mov
sbb
sbb
xor
or
aad
outsl
loopne
fs
xabort
inc
push
mov
xlat
lods
test
movsl
ret
push
or
and
rolb
mov
mov
jmp
jo
add
xchg
push
xchg
mov
imul
pop
in
cmpsb
mov
mov
pop
arpl
ret
inc
fnstsw
out
call
pop
dec
sub
out
popf
inc
pop
leave
mov
jno,pn
fsubs
mov
repnz
imul
jg
subl
sub
xchg
add
pop
test
in
sbb
xlat
mov
add
nop
in
pop
cmp
mov
push
rcl
loop
insb
and
pop
hlt
xor
mov
fldt
subl
stos
pop
xor
arpl
jne
mov
sbb
inc
xchg
push
test
add
push
dec
push
xlat
cmpsb
lods
orl
fmuls
lods
and
mov
or
clc
or
ja
xchg
insl
fidivl
lcall
pop
cld
inc
jo
and
or
nop
scas
push
cmc
cmp
rcrb
lret
sub
pop
xor
cmp
cmpsl
xchg
mov
and
xor
inc
adc
sbb
adc
addr16
adc
mov
push
rcll
sti
js
jb
jns
imul
aam
mov
add
pushf
and
jecxz
int3
sub
aaa
int
jge
stc
sub
add
test
mull
sbb
inc
add
pop
hlt
inc
test
int3
push
cmpsb
in
jne
subb
xor
adc
and
lods
jle
inc
add
or
into
xchg
xchg
loop
icebp
in
pop
cmp
lods
xchg
inc
or
cmp
xchg
push
sub
gs
lods
sub
lahf
dec
xchg
sub
sub
ret
sub
jp
sub
xchg
mov
arpl
lea
cltd
rorb
enter
xorl
scas
mov
and
cmp
ficoms
sbb
dec
mov
cmpsb
ljmp
stc
cwtl
int3
lods
and
cmp
in
push
jbe
push
sar
jb
fidivrl
or
ret
push
ja
out
cmp
inc
loope
insb
push
ficompl
xchg
popa
lock
or
arpl
xchg
int
ret
lods
mov
lret
mov
push
mov
imul
mov
push
inc
add
test
mov
xor
dec
cmp
imulb
xor
pop
jno
mov
ret
fiadds
repz
rorb
and
jne
ret
jb
xor
pop
jbe
loopne
xchg
mov
xchg
push
cmp
cmp
xchg
cmc
jnp
popf
xor
jnp
dec
jns
mov
mov
std
bound
call
sub
outsl
push
cmpsb
sar
mov
adc
mov
aas
js
in
and
test
mov
mov
dec
cli
pop
gs
push
or
push
aas
cmova
out
out
or
sub
lret
sub
ss
gs
mov
sbb
sub
pop
add
sub
rcll
sbb
xchg
add
xlat
cmc
pop
cmp
dec
push
call
mov
movsl
push
sub
dec
adc
scas
or
or
and
scas
je
adc
pop
out
stos
pusha
pop
push
add
xchg
push
cli
add
fildll
mov
and
xchg
lods
insl
in
sti
mov
inc
jmp
pop
iret
loopne
dec
ds
mov
mov
ret
ret
jmp
add
pop
sti
dec
and
fwait
and
jb
js
fsub
out
mov
fdivrl
xchg
sbb
jno
stos
loopne
lahf
jecxz
lds
inc
cmc
push
loopne
sbb
imul
out
dec
pop
inc
fbld
sub
sbb
jo
cmc
adc
out
sbb
daa
and
stos
aaa
insb
mov
add
or
push
ljmp
fstpt
int
cmp
shrl
lea
addl
mov
sarl
ljmp
ret
out
push
and
sub
lods
cmp
sub
clc
int3
repz
adc
outsl
lahf
jbe
mov
pop
sub
stos
scas
push
or
js
bound
inc
mov
pop
cmp
pop
shr
mov
lds
fsubrp
testb
sbb
cmc
and
fwait
jg
pushf
xchg
adc
mov
addr16
add
pusha
repz
dec
push
test
cwtl
scas
loopne
xchg
push
add
sbb
bound
cmp
push
xor
and
std
dec
pop
arpl
mov
daa
idiv
xchg
out
jnp
sbb
fiaddl
les
sbb
gs
sbb
and
push
xor
xor
mov
mov
test
iret
test
xchg
rcrl
add
jae
mov
stos
dec
add
es
adc
xor
add
lods
mov
push
inc
pop
loop
int3
dec
dec
mov
add
in
adc
mov
dec
fildll
popf
add
enter
stc
jo
data16
stos
loop
pop
mov
in
loopne
loopne
mov
inc
mov
push
cmp
ficomps
test
xchg
addr16
int3
pop
cmpsb
push
sub
mov
sub
inc
hlt
mov
outsb
shl
lea
cs
movsb
inc
inc
add
repnz
push
or
pop
nop
rclb
cmp
fs
test
loop
dec
loop
mov
dec
push
in
sbb
xchg
repz
sbb
jecxz
les
fnstenv
mov
inc
lcall
mov
bnd
aas
fwait
cmp
mov
hlt
mov
sbb
lds
mov
out
lret
arpl
mov
push
jl
jge
enter
imul
add
cmp
jae
dec
lret
fadd
pop
dec
in
popf
jg
mov
adc
insb
inc
cmp
loop
addr16
popa
ret
sbb
arpl
icebp
or
pop
rcrb
add
shlb
iret
out
mov
mov
or
pop
fldt
mov
enter
ja
dec
insb
dec
mov
scas
push
stos
arpl
mov
rcl
test
cwtl
push
mov
fs
stos
lods
mov
pop
sub
sbb
aas
xor
dec
inc
sub
pop
mov
add
ss
xor
sti
pop
hlt
adc
xchg
pop
cmc
idivl
scas
popf
scas
out
or
push
pop
rcrl
jo
mov
jg
mov
adc
cli
cwtl
adc
imul
adc
pop
fmull
movsb
xor
mov
mov
pop
and
push
nop
add
mov
sub
lea
call
mov
mov
in
fsub
and
or
shlb
test
enter
mov
es
jbe
jp
adc
jne
sbb
mov
adc
add
pop
ds
rcrb
clc
sbb
mov
dec
xchg
outsb
mov
sbbl
inc
or
xchg
cmc
mov
out
jbe
mov
fistps
lret
lods
and
xchg
push
js
adc
push
hlt
cmpsb
dec
xchg
xor
aaa
cmp
mov
jno
jge
dec
lahf
inc
jno
mov
mov
inc
push
or
xchg
leave
sbb
out
xchg
ja
sub
jmp
scas
add
repz
jecxz
pop
push
ja
imul
add
cmp
adc
xor
or
xor
pop
cmpsl
int3
push
mov
mov
mov
adc
stos
lods
inc
add
movsl
xor
inc
adc
test
out
jmp
roll
pop
jae
push
ret
xchg
mov
mov
xor
jo
pop
out
add
imul
add
sub
sbb
xchg
mov
dec
pop
js
mov
mov
cwtl
cmp
rorb
mov
pusha
outsl
imul
cmp
cmp
int
mov
out
subb
mov
sti
insl
mov
push
in
inc
inc
add
jecxz
add
icebp
and
and
fdiv
loopne
je
fwait
dec
cmp
dec
dec
lahf
adcb
push
insl
push
lahf
cli
test
dec
shlb
loopne
mov
shl
push
mov
aad
in
xchg
das
mov
and
in
idivb
scas
inc
add
sub
loopne
cwtl
push
adc
push
cmp
insb
adc
or
push
sbb
out
or
hlt
in
and
jo
stos
mov
sbb
nop
out
inc
jno
jp
xchg
lds
xchg
fwait
inc
push
fs
idivb
or
iret
mov
push
pop
test
sub
pop
jecxz
std
sbb
out
sub
dec
jo
pop
inc
jmp
shl
mov
out
push
dec
xor
jae
ret
call
jbe
lock
nop
sahf
rcrb
inc
into
out
dec
ficoml
cmpsl
test
xchg
mov
mov
cmp
hlt
lahf
scas
shlb
imul
mov
icebp
sahf
add
leave
sti
orl
push
and
cli
xchg
stc
push
test
jge
mov
mov
mov
adc
pop
jmp
add
roll
out
adc
sbb
mov
imul
mov
jecxz
dec
outsl
shll
arpl
add
push
mov
sub
lcall
mov
and
insl
or
mov
insb
push
cli
jg
xchg
lock
mov
add
mov
mov
jns
add
sub
fs
mov
aaa
pop
dec
aaa
cmp
ss
xor
or
inc
push
in
sbb
repnz
push
stos
into
in
pop
vpcmpgtd
fcomps
push
enter
or
outsb
test
mov
cmpsb
cld
test
mov
mov
repz
dec
adc
dec
xchg
xor
jle
sbb
fsubrl
das
mov
sub
push
stos
out
lods
cltd
jle
imul
lcall
ret
int3
or
pushf
shll
sub
mov
cmc
xlat
stos
xor
ds
dec
nop
pop
xor
dec
cmpsb
mov
out
and
cmp
stc
in
aam
mov
jbe
shlb
lcall
aaa
outsb
outsb
das
and
rorb
ret
xchg
and
push
adc
dec
cmp
scas
je
cwtl
cmp
sbb
xchg
add
mov
ss
rolb
out
and
nop
cld
outsb
and
dec
inc
mov
jnp
insb
bound
mov
dec
loop
mov
cmp
scas
ds
pop
imul
mov
jae
ja
popa
jecxz
xchg
enter
in
mov
paddd
incl
addr16
scas
pusha
in
jmp
inc
pushf
jns
lock
jo
dec
inc
pop
xchg
mov
dec
mov
sub
add
sahf
rclb
jg
cmc
adc
mov
jp
push
mov
sbb
imul
adc
repz
arpl
xlat
dec
ljmp
in
xchg
mov
pop
insb
outsb
sarb
cmp
xchg
out
fmull
push
push
inc
mov
mov
pop
pop
mov
push
xor
mov
dec
mov
imulb
xor
mov
add
xchg
insl
popa
cli
mov
in
mov
mov
push
jb
pop
imul
iret
fidivrs
jbe
xchg
or
cmp
pmaxub
mov
fdivl
mov
inc
inc
mov
stos
out
add
or
fwait
add
dec
add
gs
mov
mov
sbb
jae
adc
mov
mov
stos
lfs
mov
mov
mov
call
push
out
and
in
lods
jno
push
push
adc
mov
fwait
xchg
call
jns
push
lret
push
mov
cltd
push
push
std
push
or
sarb
jmp
in
repz
add
fwait
cmc
adc
outsb
or
testb
fnsave
arpl
adc
xchg
fldcw
lret
xchg
jmp
inc
cld
mov
mov
and
add
mov
out
fidivrl
inc
push
aaa
pusha
xchg
sub
xchg
shlb
dec
jbe
mov
xor
ja
lds
mov
rcrl
out
es
stos
mov
sbb
sub
mov
pop
push
dec
shl
fs
pop
mov
test
cli
mov
lods
pop
hlt
and
xchg
pusha
pusha
sbb
mov
int3
test
sbb
add
ljmp
dec
inc
xorl
cltd
dec
push
sbb
sbb
loop
jnp
lret
sub
test
cmp
lret
cmp
aad
iret
xchg
loopne
xchg
sub
xor
shll
icebp
arpl
adc
pop
and
cltd
xor
push
inc
push
adc
test
jmp
in
xor
pusha
push
insb
outsb
inc
test
dec
lret
sbb
jae
int
and
scas
dec
aaa
jns
xchg
std
cmpsl
xor
iret
and
and
adc
lret
movsb
lret
jb
popf
cmpsb
outsb
jp
repnz
in
imul
cld
sbb
lock
sbb
pop
dec
mov
insb
gs
inc
cltd
mov
test
mov
dec
mov
inc
add
aaa
clc
hlt
test
xor
pop
fiaddl
sub
mull
xor
push
xor
out
push
cmp
mov
cmp
shlb
and
xchg
imul
xchg
inc
sbb
out
mov
addr16
out
sbb
and
mov
jmp
out
sbb
xor
adc
cmp
fdivrl
cmp
dec
stc
adc
enter
out
and
mov
mov
pop
add
pop
fucomip
in
cltd
pop
inc
xchg
mov
or
pop
jns
ret
xchg
and
addl
jb
inc
mov
cmpsb
mov
xor
mov
jns
popa
sahf
cmp
xchg
push
nop
or
out
jge
xor
add
add
adc
mov
popf
add
in
test
fwait
mov
and
sub
subb
adc
mov
adc
cmp
push
test
enter
jecxz
xchg
mov
sub
lds
out
jge
sbb
enter
pop
add
inc
add
pop
test
pusha
push
mov
mov
or
and
in
sbb
pop
mov
push
jp
pop
mov
sub
inc
stos
imul
push
push
push
cmp
cmp
push
pop
sbb
mov
icebp
pushf
ds
je
mul
cwtl
sbb
out
jbe
jge
jg
jns
jle
dec
add
inc
das
pushf
xchg
sbb
and
add
push
stc
and
mov
mov
adc
push
dec
mov
dec
rorb
cmp
sub
and
int3
sub
mov
ficomps
adc
aas
ss
adc
xchg
mov
jge
pop
mov
das
sarl
jae
aaa
jle
pushf
nop
pusha
cmpsl
xor
or
push
sub
mov
add
push
lcall
sbb
std
or
xchg
stos
sti
adc
or
jbe
in
and
repz
push
test
cmpsl
add
sub
cmpsl
fwait
and
lret
mov
dec
sub
inc
das
jno
mov
data16
adc
adc
pop
cli
out
sub
fwait
jmp
ds
jg
cmp
inc
mov
cmp
mov
mov
adcb
xor
ja
pushf
push
mov
lahf
push
loopne
psadbw
test
shll
lea
loope
stc
test
rol
lock
sti
idivl
insb
shlb
lock
test
and
rolb
mov
mov
cmp
aam
nop
aad
cmp
movsb
inc
jno
push
xor
jmp
sub
xor
xchg
lock
dec
cmpsb
push
imul
scas
daa
dec
aaa
in
sub
test
pop
mov
or
push
cmpsb
ret
and
lea
jle
dec
add
sub
xchg
xchg
xchg
lods
xchg
mov
adc
jae
es
add
call
imul
cli
sub
xor
mov
cli
add
mov
rclb
pop
pop
subb
mov
lods
add
jmp
into
cwtl
mov
sbb
addb
jns
fwait
push
xchg
loop
data16
and
imul
sub
das
pop
mov
and
sbb
sub
into
adc
mov
imul
repnz
pop
xor
gs
rol
sub
sub
sahf
hlt
test
pop
mov
into
fisubs
pop
loopne
cld
sbb
xor
xor
lea
aas
mov
sbb
dec
pushf
dec
out
jge
in
fsubr
cmp
sub
stos
outsl
cmpsb
pop
xor
push
pop
lcall
jg
and
and
cmp
push
jle,pn
jge
mov
add
loop
jp
call
dec
push
push
jns
fstl
add
adc
or
aam
or
add
jae
test
pop
adcl
jge
dec
out
popa
xchg
out
sub
arpl
ret
lret
xchg
sub
push
mov
pop
sub
mov
jne
inc
adc
pop
sbb
lock
subb
sarb
or
sub
cmp
repz
dec
dec
xor
lods
sar
andb
mov
sub
mov
push
leave
stos
cmp
pop
fiadds
sub
dec
dec
aas
mov
push
rol
divps
jae
mov
and
mov
mov
mov
arpl
jae
mov
jmp
cld
pusha
dec
jl
in
cmp
pusha
push
push
psubb
push
sbb
std
call
movsb
cmp
aaa
ja
stc
jle
jle,pt
dec
das
push
mov
arpl
insl
leave
ret
out
scas
dec
sub
fisubl
in
push
mov
out
insb
lcall
dec
loope
sub
ds
xor
daa
jno
shl
call
push
xchg
dec
mov
mov
jmp
jo
cmp
and
nop
in
add
ds
add
mov
cwtl
dec
mov
aam
adc
sub
add
nop
data16
push
dec
ficompl
cmpsl
sysexit
lods
mov
jmp
int3
push
mov
mov
inc
pushf
fprem
sub
or
inc
fisubl
mov
mov
push
jne
filds
in
xchg
popa
test
push
inc
pop
adc
shr
scas
mov
or
mov
filds
push
sarb
and
pop
xor
and
popa
push
cmp
dec
push
jmp
sub
fcmovbe
jbe
mov
gs
fs
repnz
sti
cmp
lret
es
incl
mov
xchg
inc
fs
cmpsl
push
push
xchg
dec
sub
add
cmpl
arpl
add
cmp
pop
call
cmpsb
mov
xchg
test
mov
xchg
or
cmp
mov
xchg
xor
into
and
out
push
push
adc
nop
pop
andb
add
xchg
imulb
pop
push
shll
and
pop
and
pop
lret
pop
mov
dec
xor
cld
jns
dec
pushf
aam
xor
pop
jecxz
push
inc
mov
mov
lea
iret
mov
cwtl
pushf
push
movzbl
mov
mov
pop
jl
or
loop
sbb
mov
push
xor
jp
pop
pop
adc
pop
les
xchg
aas
mov
sarb
sub
cmpsl
add
jne
fstps
cmp
and
mov
dec
daa
sub
pextrw
lahf
icebp
rolb
lahf
lea
dec
add
inc
iret
cmpsl
out
out
push
or
adc
leave
jno
dec
cmp
nop
loopne
popf
out
das
and
lea
mov
cwtl
into
add
xchg
lods
jg
ds
dec
pop
sub
dec
mov
jo
xchg
jne
pop
fstl
pop
test
xor
rorb
or
pop
stos
push
pop
daa
add
xor
aaa
sbb
les
add
fisubrs
ficoms
push
testl
add
push
imul
imul
or
xor
scas
stos
adc
or
dec
inc
sub
sahf
add
mov
outsb
hlt
jns
lods
xor
aaa
push
repnz
inc
call
rol
dec
and
push
shrl
jp
jnp
sbb
not
sahf
jmp
ret
sbb
repz
subl
jns
and
sub
mov
sti
xchg
sbb
mov
inc
jno
fiaddl
cmp
sbb
int
jg
cwtl
inc
adc
das
test
dec
inc
lea
inc
bound
mov
sbb
mov
push
dec
and
sub
push
push
popf
add
rorb
cld
in
das
dec
xlat
fmuls
mov
mov
test
jnp
push
fimull
adc
popf
jo
mov
cmp
insb
sub
pop
mov
outsb
xor
mov
mov
clc
pop
jle
les
lahf
out
addr16
popf
out
mov
pop
es
mov
lret
cmpsl
adc
movb
aaa
ja
xor
pop
sub
and
repnz
pop
xchg
dec
movl
sub
pop
dec
lock
dec
into
cltd
push
lahf
into
add
or
add
dec
sbb
aaa
mov
lods
shlb
mov
or
addr16
stos
mov
mov
pop
repz
pop
xor
xorb
push
add
mov
ss
test
out
imul
sbb
or
pop
test
pop
sbb
scas
mov
test
pop
shrl
dec
out
jecxz
push
cli
bound
cmc
push
das
in
adc
pop
lock
fdivrl
or
popf
jg
mov
mov
mov
xchg
in
int3
aam
cltd
adc
stos
fistps
cmp
add
movsl
xchg
push
out
inc
shrb
jno
inc
jge
or
sbb
sbbb
subb
adc
sub
test
inc
test
adc
in
cmc
rorb
pop
ret
adc
lds
mov
push
dec
andb
int3
dec
adc
sahf
std
xor
cmp
lahf
int3
stos
or
xchg
push
pop
scas
pop
aaa
mov
orb
aas
add
in
loopne
lret
mov
jmp
xor
repz
aam
leave
pop
test
das
int
push
repnz
fildl
inc
es
jo
imul
ljmp
push
and
cmp
mov
ret
popa
jg
sub
movsb
xchg
movsl
sbbb
shlb
or
jg
lahf
lds
movsl
repnz
jnp
sar
or
aam
test
inc
jmp
sbb
mov
bound
xor
loopne
push
stc
dec
fsubr
mov
adc
in
daa
cs
mov
and
lret
movsl
dec
lock
inc
cmp
adc
ret
and
stc
xchg
inc
inc
insb
or
lret
lret
ja
sahf
push
or
mov
push
add
fcmovnbe
hlt
rcrl
push
lods
aad
addr16
xor
sub
icebp
loope
jmp
mov
push
stos
mov
cmpsl
pusha
in
ss
js
add
int
xchg
push
je
loope
in
lahf
mov
sub
addr16
xlat
fldenv
cmp
into
xchg
push
cmp
rcll
sbb
xlat
adc
mov
sbbl
aaa
sbb
pop
popf
or
pop
dec
ds
cmp
cmp
add
inc
xchg
leave
jbe
sbb
sbb
add
movsl
ret
mov
imul
int3
dec
ljmp
fstp
clc
cmp
xor
aad
mov
and
mov
mov
sbb
dec
inc
xor
xor
neg
xchg
insl
pop
pop
xlat
cmp
or
cld
xor
jo
push
fs
add
ljmp
repz
jns
sbb
cli
mov
popf
sbb
lds
ljmp
jno
js
int
movsb
dec
nop
adc
sub
pop
enter
jp
add
ds
xchg
mov
aaa
xor
xor
sbb
mov
sub
push
and
sub
xchg
mov
outsb
shll
in
hlt
sub
mov
mov
dec
lds
int3
jmp
sarb
xor
test
stos
lret
lods
or
scas
sbb
dec
js
cmp
add
aas
daa
ds
sarl
jo
push
inc
sbb
mov
out
adc
hlt
cmp
jp
enter
lods
jmp
xor
mov
sub
jns
add
cmc
popa
push
addr16
insl
inc
push
es
gs
ljmp
push
cmpsb
push
and
int3
rcrb
call
cmpsl
sbb
addr16
cmp
jne
mov
rcrb
rcrl
adc
iret
mov
mov
shll
pop
shlb
inc
out
cmpsb
aaa
lret
adc
into
cli
xlat
add
xchg
repz
loopne
lcall
fcoms
stos
mov
cwtl
test
aaa
push
cmpsl
in
and
adc
cmp
mov
xchg
xor
ds
cmp
cmpsb
mov
dec
mov
inc
mov
lea
movsl
push
je
xor
loop
sub
loopne
pop
sbb
mov
out
shl
popf
and
imul
xchg
and
mov
rcr
and
fists
xor
pusha
pop
outsb
int
add
in
inc
push
cmpb
hlt
ds
adc
sbb
loop
test
shrl
into
insb
mov
sub
pop
or
inc
fstpt
xor
inc
imul
push
push
out
dec
pop
incl
mov
mov
push
inc
sbbl
or
sub
mov
or
fdivs
stos
push
mov
cmc
in
and
jg
in
rcr
insl
pop
insl
lret
sarl
cmc
rcrl
push
sub
xchg
nop
ja
scas
hlt
lock
mov
and
xchg
sbb
add
mov
cmp
loop
test
gs
hlt
dec
jbe
out
and
stos
mov
lods
pusha
mov
mov
mov
shrb
dec
jmp
mov
inc
ret
dec
mov
lods
es
fsts
mov
fiaddl
pop
adc
xchg
mov
pop
mov
add
jg
inc
push
mov
jbe
icebp
add
mov
xchg
jbe
push
jns
popf
add
xor
inc
pop
pop
lock
test
mov
loopne
sub
enter
mov
jmp
movsb
xchg
mov
test
pop
cltd
mov
out
push
negb
into
push
lcall
push
popf
cltd
pop
push
stos
lcall
jmp
and
add
add
outsb
adcb
or
int
push
loope
xor
xchg
and
push
push
fsts
mov
lea
dec
stc
rclb
jnp
mov
and
mov
pop
das
jbe
dec
sub
mov
sbb
cltd
mov
mov
mov
adc
fisubrl
xchg
js
aaa
outsl
sub
sbb
push
jp
lret
test
pop
arpl
outsb
xlat
mov
jno
push
pop
mulb
adc
xor
sahf
in
lret
insb
inc
je
pop
ljmp
pop
or
mov
mov
adc
aaa
jge
or
call
lret
rorb
mov
rcrb
push
cwtl
mov
lea
imul
push
xor
sbb
pop
pushf
or
and
and
les
adc
cmp
xchg
pop
call
mov
mul
cmp
das
shrb
xchg
mov
test
push
inc
ja
jmp
pop
xor
pop
jns
mov
movsl
push
mov
std
dec
jmp
aas
clc
mov
pop
jno
xchg
add
cmpsl
cmp
in
jb
pop
add
lds
cmc
mov
fldcw
inc
jg
push
iret
nop
fs
push
xor
out
ja
pop
sbb
xlat
push
jno
push
jno,pt
cld
push
jl
lock
mov
cmpsl
push
cmp
fstl
jns
icebp
inc
push
adc
in
jp
aam
andb
cmp
add
mov
addr16
in
sbb
push
xorl
pop
and
lock
les
push
sub
sub
cmp
das
lods
and
test
aam
adc
jmp
aam
xor
mov
aaa
cmp
loopne
mov
add
call
or
cli
pop
or
and
dec
dec
mov
push
sbb
adc
pop
sub
xchg
pop
std
pop
in
inc
or
scas
inc
jecxz
or
cltd
sub
dec
mov
pusha
in
int3
test
xchg
adc
shrb
cmp
out
mov
pop
dec
in
loopne
sbb
cmpsl
loope
add
jp
and
pop
mov
hlt
loop
fwait
jp
mov
lcall
sub
xchg
xchg
pop
shr
nop
iret
ja
imul
adc
or
mov
jecxz
pop
inc
es
xor
mov
xchg
push
cld
jecxz
and
mov
inc
xor
cmp
rorb
jb
ss
xor
mov
xchg
ds
dec
xorb
movsb
out
cltd
and
sti
xlat
scas
cwtl
push
inc
lahf
inc
pinsrw
insl
pop
push
out
pop
lahf
test
xchg
sub
mov
pop
call
jmp
mov
xor
xchg
andl
xchg
int3
jge
ficoms
sbb
mov
in
and
fcompl
fwait
push
vhsubps
ljmp
lret
imul
jno
jle
fs
cmp
mov
test
jno
test
clc
test
mov
dec
je
int
std
shr
cmpsb
inc
push
rcl
xor
test
sub
mov
mov
inc
loop
jle
jae
push
movd
mov
xchg
jmp
popa
ret
insb
or
jg
push
jle
pop
xchg
sbb
mov
and
jecxz
rorl
jb
cmp
in
adc
adc
repnz
sub
cmp
adc
cli
xchg
mul
daa
mov
pop
mov
andl
fldt
adc
jp
loope
mov
dec
pop
cmp
out
in
and
fildll
push
mov
sbb
stos
lds
or
add
jp
jmp
in
mov
imul
cmp
mov
adc
roll
bound
enter
push
mov
adc
mov
mov
scas
add
add
dec
lods
test
pop
sbb
cmp
fwait
cltd
outsb
mov
or
hlt
loop
sbb
pusha
cs
xchg
fdivrs
push
aam
or
xor
cltd
jnp
rolb
pop
aaa
sbb
fbstp
mov
push
jl
or
cmp
add
xor
fisubrs
mov
addr16
jno
jle
xor
mov
xlat
loope
jmp
iret
lret
xor
shll
stc
mov
arpl
shrb
jmp
sbbl
ja
movsb
fadd
jl
mov
test
mov
mov
cltd
inc
mov
enter
stos
xor
dec
mov
xchg
lods
loop
cmpsb
sub
hlt
test
push
mov
sub
dec
add
pop
pop
jecxz
sub
xchg
sub
mov
xchg
addr16
idivb
pop
push
mov
push
test
pushf
push
jecxz
jge
sbb
pop
mov
adc
mov
mov
xor
fildll
mov
outsb
bound
cld
inc
mov
sbb
xlat
jmp
mov
xlat
test
sbb
fwait
dec
xor
adc
xchg
sub
addr16
cmpsl
popa
and
mov
sbb
pushf
adc
outsl
mov
lahf
jb
mov
repz
mov
dec
call
jo
cs
pop
push
cmp
add
xor
test
daa
push
repz
popa
mov
inc
fcoml
jp
fiadds
pop
dec
fs
repnz
out
cmp
dec
icebp
pop
ds
push
pop
inc
int
xchg
icebp
dec
sahf
jno
arpl
sub
push
loope
jl
cmp
clc
aaa
inc
rol
inc
jo
mov
push
int
sbb
adc
mov
mov
sub
mov
pop
jge
rcll
mov
lcall
scas
or
sub
sub
add
in
repnz
cld
cs
jo
fldt
int
cltd
add
add
loopne
out
shll
jbe
and
inc
lds
mov
roll
and
cmc
hlt
inc
sbb
lds
jo
xchg
adc
cmpsl
sbbl
loopne
push
cmpsb
ljmp
or
pop
rcl
jb
fwait
int3
adc
pop
jnp
or
arpl
popa
lahf
repnz
lcall
cmp
scas
xor
insb
adc
pusha
jg
sarl
popa
dec
addr16
icebp
les
mov
es
mov
jb
into
enter
jge
fwait
cs
leave
cmp
add
cmp
lret
scas
mov
mov
orl
cli
arpl
mov
mov
and
dec
lods
movsl
lods
pop
inc
inc
and
xor
sub
filds
xor
xchg
cltd
and
xchg
sub
in
dec
scas
and
repnz
cmovle
pop
jp
insl
lcall
pop
lods
rcl
leave
and
insb
gs
adc
in
push
pop
cmc
leave
test
cmp
push
out
rcrl
or
and
lea
outsl
fdivs
orb
aam
mov
push
shl
dec
ja
jl
jb
dec
les
inc
popa
add
ds
in
shll
xchg
xchg
pop
jno
repz
sbb
popa
mov
adc
out
push
push
inc
in
test
ficoml
and
mov
ficompl
adc
xlat
xlat
add
add
fisubrs
mov
dec
out
test
xchg
out
cli
xor
or
cmp
jg
xor
aam
rolb
in
fidivrl
jecxz
pop
enter
aaa
lcall
adc
push
lods
out
lea
call
mov
dec
xchg
mov
loope
adc
mov
call
jbe
adc
lods
jp
iret
mov
lds
movl
int
add
in
lock
fstps
icebp
mov
rorl
shl
push
cltd
ds
lret
popf
and
popf
cmpsl
cmp
mov
scas
xor
clc
cmpl
and
jbe
xor
jg
sbb
leave
incb
call
mov
fiaddl
jge
mov
out
fisubs
rcl
mov
pop
imull
or
mulb
cmp
pop
lods
les
ficoms
and
push
mov
sahf
jl
push
outsb
push
idiv
lret
in
mov
or
push
imulb
mov
arpl
mov
xchg
xlat
cmpsb
jecxz
movsb
sbb
sub
and
sub
out
inc
jo
xchg
test
add
ds
sti
xchg
enter
cmp
mov
xor
fs
sub
shll
inc
and
lret
out
insb
xchg
sti
out
push
testl
sahf
jns
push
push
fistps
test
push
outsl
pushf
xor
data16
ljmp
mov
xor
dec
lods
iret
adc
inc
stc
mov
es
or
pop
mov
cmp
test
shrb
pop
push
push
push
inc
ret
mov
mov
xlat
pop
fdivl
imul
lret
lret
mov
call
mov
ret
popa
sub
cltd
mov
mov
pop
shlb
mov
adc
or
in
daa
xor
mov
cmpsb
pusha
into
jg
into
add
xchg
ret
fstpl
push
aam
xchg
loop
add
sbb
xchg
nop
inc
into
jno
pushf
jnp
ret
jg
rclb
jmp
cmp
and
ds
out
sti
add
cmp
and
test
dec
les
and
mov
xor
adc
pop
int3
or
movsb
mov
mov
push
in
sahf
int3
das
jle
push
outsl
hlt
imul
inc
or
stos
dec
sub
aaa
push
lods
add
add
jae
or
int3
jp
cmp
xor
fisubrl
sti
push
inc
add
lahf
insl
jecxz
jnp
xor
pop
push
jns
cmpsl
xchg
lock
lahf
js
aas
rclb
lods
out
mov
xchg
bound
test
jl
xor
mov
subb
inc
sub
mov
test
pusha
dec
and
scas
movsl
int3
repnz
jnp
sbb
or
dec
dec
loope
fmull
icebp
das
xchg
aas
and
and
add
shrb
inc
ror
mov
xchg
add
sbb
inc
inc
int
sbb
clc
scas
mov
cmp
sub
and
movsl
cmp
add
sub
push
popa
scas
jnp
or
mov
imul
sbbl
or
mov
push
stc
int
sbb
or
or
sub
push
dec
mov
or
aam
test
inc
inc
mov
testb
aaa
xor
xor
repnz
jbe
cwtl
lds
shll
fidivrs
jmp
ret
mov
in
adc
push
inc
out
dec
sbb
movsl
sahf
cmc
les
and
and
push
lahf
jae
mov
flds
pop
shlb
xor
mov
int
loop
loopne
lahf
jg
jae
sarl
je
mov
clc
std
ret
dec
sbb
mov
jg
push
adc
xor
out
iret
mov
jle
cmp
sbb
push
test
in
push
sbb
mov
jle
push
sbb
leave
add
cwtl
fsub
fnsave
adc
pop
mov
mov
mov
inc
movsb
sub
add
loope
or
cmp
pop
nop
out
sbb
xlat
xlat
cwtl
ret
inc
mov
mov
fsub
dec
rcrb
outsb
mov
cmp
cli
inc
or
repz
fmul
ficompl
mov
mov
jns
jle
mov
loope
dec
out
mov
sbb
inc
xlat
add
rclb
mov
xor
inc
pop
xor
movsl
popf
shrb
cs
pop
sbb
notb
idivl
sbb
pop
in
cmp
mov
enter
jnp
sub
mov
adc
dec
insb
mov
addr16
mov
cmc
sbb
lret
pop
jecxz
rcrl
xchg
ret
rcl
dec
or
js
pushf
dec
out
or
repnz
xchg
jbe
out
fnstenv
int3
lcall
jecxz
ret
lahf
cli
cli
cmp
jecxz
stos
mov
add
mov
loop
repnz
inc
mov
dec
leave
insl
mov
inc
sub
push
lahf
xchg
lds
cmpsl
lock
imul
lea
pop
ret
fcmovb
je
cltd
and
sbb
mov
sub
push
cwtl
repnz
dec
inc
ucomiss
popf
js
push
not
mov
enter
sub
test
jne
arpl
ret
hlt
push
popa
sub
sub
stos
mov
pop
adc
cmp
sarb
mov
fidivrl
and
mov
les
dec
push
mov
xchg
xor
loope
int3
shrl
lahf
dec
enter
sbb
mov
js
push
cmpsl
movsl
jns
imul
aad
pop
and
dec
mov
bound
mov
push
cmove
jno
aad
fstl
jp
ss
mov
fidivs
sub
jo
repz
scas
cmpsl
mov
jmp
mov
jmp
addr16
test
and
pop
adc
inc
fmuls
mov
lcall
and
jg
push
imul
movb
faddl
and
or
outsl
sbb
icebp
sarb
mov
or
cld
sbb
sbb
std
cmpsb
xor
inc
push
jmp
stc
mov
add
or
mov
cmpb
pop
lahf
inc
jg
inc
sub
pop
leave
xchg
add
pop
ja
mov
cmpsl
pop
lcall
adc
mov
push
and
adc
mov
pop
xor
xchg
cmpsl
dec
or
mov
shlb
ret
icebp
and
add
mov
outsb
or
jl
shl
sub
stos
xchg
sbb
inc
xchg
or
and
mov
lahf
leave
dec
stos
divb
sbb
dec
in
ss
popf
jnp
lea
mov
jl
adc
dec
cmp
mov
dec
mov
push
jecxz
imul
fcoms
dec
sub
pop
sbb
ret
scas
and
fsts
push
adc
cmc
mov
repnz
cmp
ds
fstpl
hlt
xchg
mov
sbb
or
aam
mov
pop
adc
testl
pushfw
daa
decb
andl
xchg
pop
jle
shll
mov
pusha
sti
pop
and
in
push
inc
xchg
ja
pop
dec
fdivrs
mov
js
add
clc
pop
cmc
jp
lea
int
xchg
enter
stos
lahf
int3
mov
das
adcb
mov
pop
or
cmc
scas
mov
js
push
push
dec
add
lcall
xor
iret
ja
xchg
fmulp
pop
cmp
ss
ficoms
fsubl
pop
push
call
inc
fldcw
testb
mov
in
jne
jns
mov
add
mov
idivb
cmp
sbb
pop
clc
dec
mov
mov
adc
mov
je
mov
mov
xor
outsl
mov
les
lods
xor
ret
ss
xchg
sub
cmc
add
adc
mov
cmp
lock
jge
int
sbb
jecxz
push
dec
fsubr
inc
mov
jb
sub
mov
mov
shl
cltd
sbbb
mov
xchg
or
xchg
xor
cmpsl
idivl
shlb
cwtl
aam
dec
out
pop
mov
mov
pop
jecxz
fdiv
data16
xor
fidivs
imul
adc
out
fistps
jg
inc
icebp
pop
stos
fprem1
sahf
or
and
sarl
arpl
sbb
sbb
mov
adc
mov
call
int3
dec
mov
fcompl
push
leave
iret
subb
pandn
in
push
fidivrs
pop
or
mov
inc
stc
xor
and
mov
push
cmpsb
and
in
enter
idiv
jl
cld
out
pop
aas
push
notb
push
sbb
jbe
jmp
and
xlat
cs
mov
orb
scas
sub
mov
pop
cmp
dec
xchg
and
lret
inc
mov
mov
neg
pand
in
and
pop
xchg
xchg
or
sbb
push
cmp
push
out
dec
or
jle
addr16
jecxz
push
clc
fwait
jmp
and
mov
cmp
lods
sub
mov
xchg
sbb
xlat
xorl
sub
cmp
dec
mov
jmp
ret
mov
pop
insl
adc
fistl
cmc
add
add
push
fsts
dec
imull
and
and
shrl
sti
decb
aad
in
xor
jle
xchg
lock
and
pop
xchg
push
loopne
jecxz
lret
popf
mov
and
stos
push
dec
into
cmp
imul
fdivrl
mov
shll
and
sti
lods
push
mov
mull
mov
mov
bound
in
jnp
clc
cmp
pop
shl
push
enter
lret
lahf
jbe
les
test
fcmovu
mov
mov
dec
shll
jnp
cltd
stos
out
lcall
notl
imul
mov
pop
sub
loop
rep
xor
std
xchg
enter
mov
and
or
jl,pt
cmp
lcall
adc
pop
imul
push
pop
js
push
pop
push
shrb
xchg
dec
lret
ljmp
dec
pop
xchg
shlb
clc
inc
test
pop
jno
mov
popf
fmuls
addr16
mov
lret
sbb
fdivs
or
mov
mov
loope
push
inc
leave
xlat
call
rcrl
mov
pop
mov
imul
repnz
adc
inc
sub
stos
test
pop
shll
js
push
xor
fnstsw
add
stos
addr16
jg
ret
xchg
ss
xor
gs
ja
xchg
movsb
mov
push
cmpsl
dec
repz
lock
add
and
int3
std
int3
or
pop
mov
inc
cltd
push
fcomps
mov
dec
fldenv
pop
jge
rol
ret
nop
jno
dec
mov
jae
lcall
add
xchg
sarl
aam
out
inc
imul
sbb
aam
push
cltd
add
cmp
jmp
call
clc
aad
clc
test
xchg
popa
ljmp
das
push
sahf
push
xor
cwtl
lds
jbe
cmpsl
cs
ret
push
add
cmp
dec
or
fnstenv
sti
adc
add
xchg
xchg
dec
cmpsb
fwait
mov
das
inc
xchg
les
pop
and
fsubr
lds
jbe
fcompl
out
out
in
ds
and
sub
mov
stos
call
data16
call
pusha
sahf
or
inc
inc
fcoms
xchg
les
add
out
jne
cmc
xchg
aaa
xor
out
lods
mov
jnp
out
adcl
jge
sub
adc
xchg
std
out
adc
pop
out
aaa
lcall
mov
mov
icebp
ret
adcl
loopne
pop
loop
mov
loopne
mov
cmp
or
dec
test
mov
nop
mov
movsl
inc
jmp
icebp
orb
xlat
lock
xor
xor
inc
fsin
dec
mov
sbb
add
sbb
inc
dec
lret
push
xor
insl
or
divl
adc
dec
sbb
lds
clc
subl
push
and
adc
sub
movsl
fxch
xorb
mov
mov
fcomps
mov
add
ret
scas
or
mov
jmp
mov
jecxz
add
push
pop
bound
or
mov
sub
int3
sub
ds
jge
mov
mov
mov
add
pop
int3
ret
lret
jbe
insb
adc
test
or
lock
mov
jb
inc
adc
mov
in
or
ficoms
cmc
pop
loope
shll
daa
mov
xor
jns
aam
cmp
xor
leave
int
test
push
sbb
push
stc
mov
aaa
stc
xor
addl
bound
cs
gs
int3
xor
push
xchg
mov
mov
sahf
dec
popa
inc
mov
std
sbb
jo
lea
bound
xchg
pusha
pop
in
push
jmp
or
insl
les
sbb
adc
cs
ret
add
loopne
or
mov
mov
popa
push
sbb
xchg
cmp
pusha
enter
dec
fisttps
dec
xchg
push
dec
inc
xlat
mov
jb
sbb
mov
js
inc
cmp
aad
sbb
test
outsb
mov
jg
xchg
or
or
jae
push
hlt
mov
repnz
les
in
ja
fisttpll
mov
pop
cli
arpl
sbb
js
rcrb
out
push
insl
or
testb
adc
xchg
test
pushf
mov
test
jle
xchg
stos
xchg
pusha
out
mov
xchg
call
sbb
stos
rcrb
rcl
push
mov
add
and
divl
jmp
gs
mov
les
fs
push
and
or
or
mov
xchg
inc
bound
dec
cmp
jmp
repnz
insb
xor
mov
popf
xor
pop
jle,pt
lods
mov
push
bound
call
cmpsb
pop
pusha
scas
lods
sbb
or
pop
jno
pop
lret
aam
scas
sbb
dec
mov
sub
btr
cli
or
adc
mov
subl
push
sbb
sub
lea
push
mov
adc
and
lds
dec
dec
clc
rorl
xor
adc
call
push
mov
adc
movsb
mov
jno
mov
push
fucomp
cmpsl
inc
xor
dec
popa
lods
sahf
stos
imul
repnz
sahf
mov
mov
add
inc
jmp
jb
sahf
or
or
lcall
int3
xor
jmp
nop
dec
ja
push
mov
daa
test
ja
or
shrl
arpl
inc
in
movsb
sub
add
jecxz
leave
int
fistpl
dec
or
repz
push
lds
pop
mov
push
test
dec
fdivrs
shlb
sub
adc
cmpsl
cli
adc
dec
in
sbb
jecxz
xchg
mov
lret
and
sbb
aad
or
mov
fsts
aas
int
cmpsb
popf
ja
and
dec
mov
sahf
fisttps
ss
mov
or
loop
rolb
insl
pusha
pop
popf
sub
push
loop
cmpsl
sbb
mov
xchg
mov
cmpsl
outsl
push
lret
inc
adc
inc
inc
jge
mov
push
in
push
das
xchg
dec
mov
out
pop
out
jmp
push
sub
jo
call
jmp
sub
add
aam
popf
sbb
movsl
cmp
loopne
xor
cs
stos
or
in
dec
or
fnstsw
call
lds
movsb
adcl
ret
cmpl
ficoml
popf
test
lds
dec
mov
aaa
xchg
mov
pop
fstpl
mov
mov
stos
dec
mov
mov
loop
ds
aaa
xchg
cmp
fidivrl
mov
dec
push
mov
mov
data16
outsb
scas
and
sti
div
sub
in
das
les
jo
outsl
lret
addr16
pop
cli
push
push
or
pop
push
push
pop
les
xor
sarb
pop
mov
cmp
int
push
jnp
cmpsb
pop
iret
fnstenv
lea
ja
into
addb
jl
pusha
scas
xchg
das
scas
js
push
icebp
jo
cld
fistl
add
sti
sbb
ss
sbb
xor
cmp
lret
xchg
push
cli
jns
sti
mov
fucomi
xor
push
lcall
lahf
inc
push
into
lahf
mov
mov
cmpsl
mov
clc
push
xchg
push
and
ret
movsl
and
nop
popf
jae
mov
aas
mov
lods
icebp
jo
xor
add
outsl
fcomip
cmp
daa
popa
sbb
jge
daa
pop
xchg
and
sbb
aad
shl
sbb
and
inc
sahf
pop
or
or
shrl
jecxz
push
or
jg
dec
rcrl
sbb
arpl
fsts
mov
adc
stos
cmp
pop
fstps
loop
cmpsb
pop
jne
cmp
cwtl
push
rorl
lock
shl
jbe
lods
push
rcr
mov
ret
cwtl
iret
add
add
stos
push
out
xor
pusha
mov
mov
scas
call
stos
cmp
movsl
push
and
je
add
lea
stc
push
sbb
mov
aam
inc
xor
std
out
mov
mov
jmp
aam
cld
mov
mov
push
xchg
xchg
sarl
test
mov
hlt
dec
mov
add
in
lahf
cmpb
mov
mov
in
push
ljmp
jns
test
xorb
xor
xchg
clc
sti
pushf
addr16
sahf
insl
push
dec
push
mov
push
adc
sbb
xor
cld
inc
add
xlat
stos
adc
and
add
test
ds
into
lods
xor
jmp
rorb
push
push
dec
pop
std
jae
repz
into
jb
jae
xorl
int
cmpsl
popf
incb
aaa
xchg
mov
sub
inc
cwtl
imul
inc
jle
pop
loopne
push
mov
outsl
cmp
jmp
pusha
dec
mov
cmp
ljmp
mov
aas
mov
inc
mov
adc
pop
fimull
add
inc
xorb
insl
call
sbb
xor
mov
cmp
frstor
mov
jmp
popa
mov
in
jp
loope
fistl
cmpsl
xchg
fidivrs
repz
je
cmc
addl
push
mov
pushf
adc
push
dec
out
test
xchg
mov
and
mov
mov
pop
ja
pop
xchg
call
in
mov
cld
inc
pop
add
mov
dec
loopne
jae
lret
testb
cmp
cmp
xor
sbb
pusha
or
