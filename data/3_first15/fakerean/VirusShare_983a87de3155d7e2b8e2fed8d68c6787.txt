push
add
inc
clc
mov
lea
push
push
call
add
jne
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
int3
push
mov
push
mov
push
mov
mov
test
je
push
mov
test
push
mov
mov
mov
mov
je
mov
mov
mov
mov
call
cmp
je
mov
test
je
test
js
xor
mov
mov
test
je
cmpl
jne
mov
test
jne
mov
cmpl
jne
mov
cmp
je
pop
pop
pop
xor
pop
pop
ret
mov
test
jne
mov
test
js
xor
mov
jmp
mov
jmp
mov
xor
cmp
je
push
add
mov
call
cmpl
je
mov
test
je
lea
push
push
call
mov
mov
mov
test
je
mov
test
je
mov
mov
call
test
je
cmp
je
mov
mov
push
push
push
push
mov
call
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
lea
push
lea
call
mov
mov
mov
test
je
test
je
mov
jmp
mov
movl
jmp
mov
jmp
cmpl
je
push
call
test
pop
je
push
mov
mov
call
pop
push
call
pop
ret
xor
jmp
xor
mov
movl
mov
push
push
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
test
je
and
mov
call
mov
mov
mov
mov
mov
call
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
movzbl
lea
push
push
pushl
mov
pushl
call
test
js
mov
mov
mov
shr
mov
and
and
cmp
je
test
jne
mov
test
jne
test
jne
xor
pop
pop
pop
leave
ret
lea
push
pushl
mov
push
call
test
js
mov
jmp
test
jne
mov
mov
test
je
pushl
mov
push
push
pushl
mov
call
jmp
mov
mov
test
je
mov
and
or
mov
jmp
mov
cmp
jne
mov
cmpb
je
jmp
push
push
push
mov
push
push
mov
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
lea
pushl
call
andl
lea
pushl
call
andl
lea
mov
mov
lea
lea
cmp
pop
pop
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
je
mov
push
call
lea
cmpl
je
push
call
pop
pushl
call
andl
mov
test
pop
je
call
push
call
pop
mov
test
je
mov
push
call
mov
test
je
call
mov
test
mov
je
lea
push
call
test
pop
je
mov
test
jne
pushl
call
pop
lea
call
lea
call
pop
pop
pop
lea
pop
add
jmp
push
call
pop
jmp
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
push
call
test
pop
je
mov
andl
test
movl
mov
je
mov
push
call
test
mov
je
mov
push
call
mov
mov
call
test
je
mov
push
push
push
call
test
pop
js
incl
lea
call
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
xor
test
mov
mov
je
push
call
mov
add
mov
mov
push
call
add
push
lea
lea
mov
mov
movl
call
cmpl
je
mov
mov
test
jne
test
jne
test
je
push
call
mov
add
test
je
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
test
je
push
call
add
xor
pop
pop
pop
pop
add
ret
xor
jmp
push
mov
sub
push
push
mov
xor
cmp
push
je
cmp
je
push
lea
mov
call
mov
lea
push
lea
push
call
test
js
pushl
mov
lea
mov
call
cmp
je
pushl
lea
mov
mov
call
mov
pushl
mov
push
call
xor
cmp
je
cmpl
mov
je
mov
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
test
je
mov
lea
push
push
mov
call
mov
cmp
ja
mov
lea
push
mov
call
mov
mov
lea
push
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
mov
mov
lea
push
push
pushl
pushl
call
test
mov
jne
mov
mov
lea
push
push
call
cmpl
jne
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
mov
test
je
cmpl
jne
mov
push
call
ret
push
push
mov
xor
cmp
je
mov
cmp
push
lea
jne
mov
push
mov
call
cmp
je
mov
push
push
call
pop
pop
mov
test
pop
jne
mov
pop
pop
ret
push
call
pop
jmp
push
call
pop
jmp
mov
mov
and
neg
sbb
not
and
test
je
mov
mov
ret
xor
ret
push
mov
push
push
mov
cmp
push
jne
call
test
je
mov
mov
xor
push
mov
add
mov
call
mov
cmp
je
mov
cmp
je
push
lea
mov
call
pushl
call
pop
push
lea
push
pushl
push
push
push
push
pushl
call
add
test
mov
js
mov
lea
call
lea
call
mov
pop
pop
pop
pop
ret
pushl
pushl
push
pushl
pushl
pushl
pushl
call
jmp
mov
push
mov
mov
mov
mov
mov
xor
push
push
mov
mov
mov
mov
push
mov
mov
andw
push
pushl
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
push
mov
push
push
push
push
mov
cmp
jne
pop
pop
pop
leave
ret
cmp
je
mov
lea
cmpl
je
mov
mov
test
je
mov
push
mov
call
test
je
cmpl
jne
mov
add
je
mov
mov
test
je
add
push
pushl
call
lea
mov
mov
cmp
je
test
mov
jne
push
pushl
mov
call
lea
mov
mov
call
push
push
andl
movl
lea
mov
push
call
pushl
mov
push
push
push
call
lea
call
mov
mov
call
xor
mov
call
lea
call
jmp
mov
mov
mov
call
jmp
mov
push
call
jmp
push
mov
lea
mov
push
call
test
je
mov
test
je
pushl
pushl
call
pop
ret
push
push
mov
mov
push
mov
and
cmpl
jne
mov
and
mov
mov
mov
test
jne
or
xor
or
pop
pop
pop
ret
cmpl
je
jmp
pushl
mov
mov
pushl
mov
push
call
ret
mov
andl
mov
mov
pushl
mov
mov
push
call
pushl
call
test
pop
mov
je
pushl
call
pop
mov
ret
push
mov
push
push
push
mov
mov
mov
test
mov
je
mov
push
call
mov
andl
test
je
mov
lea
push
push
pushl
push
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
mov
test
ja
andl
push
pop
mov
test
je
mov
cmp
jl
pop
pop
xor
pop
pop
ret
xor
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
andl
mov
call
test
jne
mov
mov
pushl
mov
push
call
incl
cmp
jae
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
push
mov
mov
mov
push
push
lea
add
lea
add
lea
cmp
jne
test
jne
mov
cmp
mov
lea
jne
testb
movl
je
push
call
add
pop
pop
mov
pop
pop
pop
ret
push
push
mov
cmpl
push
jne
mov
push
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
cmp
je
push
call
test
pop
je
mov
mov
mov
test
mov
movl
mov
mov
jne
test
mov
je
mov
push
call
mov
mov
mov
neg
sbb
and
add
pop
pop
pop
ret
xor
mov
push
mov
call
cmp
jne
xor
jmp
mov
mov
mov
call
test
jne
mov
push
mov
call
test
jne
push
call
pop
cmp
je
mov
movl
mov
mov
mov
cmp
je
push
lea
xor
push
inc
call
mov
cmp
mov
je
jmp
xor
jmp
int3
push
mov
and
sub
mov
push
lea
push
mov
movl
push
xor
mov
movl
call
mov
mov
lea
lea
mov
add
call
mov
push
mov
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
lea
call
lea
call
mov
test
je
cmp
je
mov
test
movl
je
call
mov
mov
cmp
mov
jbe
mov
mov
mov
lea
mov
add
call
mov
xor
mov
lea
mov
mov
movl
add
das
add
and
mov
mov
mov
lea
call
cmp
jae
mov
add
cmp
mov
je
mov
mov
mov
lea
mov
lea
add
call
mov
push
lea
push
mov
call
test
js
mov
mov
mov
call
test
jne
mov
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
mov
mov
cmpl
jne
test
mov
je
addl
mov
mov
test
mov
jne
test
je
mov
call
xor
jmp
mov
test
mov
je
addl
mov
mov
test
mov
mov
je
call
mov
lea
call
mov
test
je
cmp
jne
mov
test
je
call
mov
test
je
mov
movl
call
mov
mov
addl
test
je
mov
call
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
test
push
mov
jne
mov
call
mov
mov
mov
mov
xor
pop
call
add
leave
ret
andl
mov
mov
mov
lea
mov
lea
mov
push
lea
movl
call
mov
lea
call
mov
mov
push
mov
call
pop
lea
call
lea
call
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
mov
mov
test
jne
push
xor
cmp
je
push
mov
push
lea
mov
call
mov
mov
cmp
mov
je
mov
push
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
test
mov
add
cmp
jne
lea
call
xor
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
mov
mov
push
call
xor
jmp
mov
jmp
int3
push
mov
and
sub
mov
xor
mov
add
push
mov
push
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
andl
mov
cmp
mov
jne
push
lea
mov
mov
mov
call
mov
lea
push
call
mov
lea
mov
mov
movl
movl
mov
mov
mov
add
cmp
jne
mov
mov
lea
push
push
mov
call
fildl
fmull
fmull
fstps
flds
fadd
faddl
fistpl
mov
sar
cmp
mov
movl
jl
lea
fildl
mov
fmull
fstps
flds
fadd
faddl
fistpl
mov
mov
sar
mov
mov
add
mov
mov
add
mov
mov
mov
test
jne
test
jne
lea
call
mov
pop
pop
pop
xor
call
mov
pop
ret
test
je
cmp
jbe
push
lea
mov
call
mov
mov
mov
lea
push
push
mov
call
mov
mov
mov
mov
push
push
call
mov
mov
push
push
push
call
mov
mov
add
mov
mov
mov
add
add
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
int3
int3
int3
int3
int3
push
push
mov
xor
lea
sub
jmp
lea
mov
cmp
jne
cmp
jb
mov
cmp
jne
add
add
add
cmp
jl
pop
mov
pop
ret
pop
xor
pop
ret
mov
movl
xor
ret
push
mov
sub
push
mov
cmpl
push
push
mov
je
andl
xor
inc
testb
movl
mov
je
mov
mov
mov
mov
mov
orl
mov
push
mov
mov
mov
call
mov
pop
lea
push
mov
call
test
jne
pushl
lea
push
mov
call
cmpl
mov
je
testb
movl
jne
testb
jne
xor
pop
pop
pop
leave
ret
push
call
test
pop
je
push
mov
push
push
pop
call
xor
movl
mov
mov
movl
mov
push
push
mov
call
pop
pop
jmp
xor
jmp
cmpl
je
pushl
mov
mov
push
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
xor
mov
mov
mov
pop
ret
mov
cmp
jne
add
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
test
je
add
mov
or
ret
lea
jmp
cmpb
jne
xor
ret
mov
push
call
mov
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
movl
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
mov
lea
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
mov
push
call
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
call
mov
push
call
mov
push
call
add
pop
pop
movl
pop
add
ret
movzbl
and
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
mov
mov
call
test
jne
mov
mov
call
test
je
add
test
je
lea
test
je
mov
push
call
xor
mov
mov
jmp
xor
jmp
push
mov
push
movl
call
mov
mov
test
je
push
call
add
mov
mov
mov
mov
test
je
mov
mov
test
je
push
call
add
testb
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
mov
mov
push
call
xor
ret
push
mov
mov
sub
push
mov
push
xor
mov
push
mov
call
pushl
push
call
mov
mov
push
push
pushl
lea
call
xor
cmp
jne
lea
mov
mov
mov
push
lea
add
call
mov
push
call
mov
lea
mov
test
je
andl
mov
push
mov
mov
push
lea
push
call
lea
push
call
mov
call
mov
cmp
mov
jne
cmpb
je
mov
call
testb
mov
mov
mov
mov
mov
movb
mov
mov
je
pushl
lea
lea
call
mov
mov
mov
cmp
je
cmp
je
cmpb
mov
je
mov
mov
push
mov
mov
push
call
cmp
je
mov
mov
call
mov
xor
cmp
je
andl
mov
orl
cmp
mov
je
push
mov
mov
mov
mov
call
mov
push
lea
push
lea
push
pushl
mov
push
push
lea
call
push
pushl
push
push
call
mov
test
js
mov
test
je
mov
mov
mov
xor
mov
mov
lea
push
lea
push
pushl
mov
mov
push
call
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
lea
push
push
mov
mov
mov
push
call
lea
push
call
lea
call
lea
push
call
xor
pop
pop
pop
leave
ret
call
cmp
je
mov
mov
mov
mov
mov
lea
push
lea
push
push
pushl
mov
pushl
mov
pushl
push
call
test
js
cmp
je
mov
mov
pushl
mov
call
mov
cmp
jne
lea
call
jmp
pushl
mov
call
cmp
pop
je
push
mov
push
push
pushl
lea
pushl
mov
push
call
mov
mov
movl
jmp
push
push
lea
push
push
push
pushl
lea
pushl
mov
push
mov
mov
call
mov
lea
push
push
push
call
jmp
int3
push
mov
xor
test
je
push
lea
mov
test
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
jne
mov
ret
cmp
jne
push
mov
test
je
mov
push
xor
test
lea
mov
je
add
movzbl
rol
xor
mov
test
jne
test
je
sub
mov
pop
mov
pop
ret
jmp
xor
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
push
xor
cmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
push
call
cmp
mov
mov
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
mov
mov
call
mov
mov
mov
pop
mov
pop
ret
mov
call
mov
call
test
je
jmp
push
mov
sub
mov
xor
mov
andl
andw
push
mov
lea
push
mov
mov
mov
push
lea
movl
movl
call
pop
push
call
mov
pop
lea
push
call
pop
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
xor
pop
call
leave
ret
push
mov
sub
push
xor
cmp
je
lea
mov
mov
mov
lea
mov
lea
push
add
push
push
mov
movl
call
mov
mov
mov
add
lea
mov
call
mov
pop
leave
ret
pushl
pushl
call
mov
jmp
push
mov
and
sub
cmpl
push
push
je
mov
add
mov
mov
mov
fs
add
mov
mov
mov
mov
call
mov
mov
test
jne
push
lea
push
pushl
push
call
pop
pop
mov
pop
ret
push
mov
push
push
push
push
push
mov
mov
mov
movzbl
mov
call
andl
test
jne
push
push
mov
mov
mov
mov
lea
mov
push
push
call
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
cmp
jne
mov
mov
push
push
push
call
add
test
jne
inc
ret
xor
ret
mov
push
push
mov
push
pushl
or
push
call
mov
push
push
push
mov
call
add
je
mov
movb
mov
mov
push
pushl
push
call
push
push
pushl
call
movzbl
sub
je
dec
dec
jne
push
push
pushl
call
push
push
pushl
call
pushl
mov
push
call
pop
pop
ret
mov
mov
test
je
pushl
mov
push
call
int3
add
lea
sub
mov
xor
mov
push
and
push
mov
mov
push
mov
mov
xor
mov
push
lea
lea
mov
movl
mov
mov
mov
call
lea
push
mov
mov
pop
lea
mov
push
mov
mov
mov
mov
call
test
pop
js
mov
push
lea
mov
call
lea
mov
mov
lea
push
pushl
mov
mov
mov
mov
call
push
pushl
lea
pushl
push
lea
push
call
add
testb
mov
jne
testb
jne
cmp
je
mov
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
pushl
call
cmp
pop
pop
je
pushl
call
cmp
pop
je
mov
mov
mov
call
test
jne
cmp
jne
cmp
jne
xor
push
pushl
mov
call
lea
mov
call
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
cmp
je
mov
push
call
mov
cltd
sub
add
int
call
add
leave
ret
xor
inc
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
mov
cmpl
push
je
mov
mov
test
mov
je
mov
mov
call
mov
mov
orl
testl
jne
mov
mov
mov
mov
push
mov
push
push
push
call
mov
mov
lea
push
push
push
mov
call
mov
add
cmp
mov
jg
mov
push
lea
push
call
mov
test
jle
mov
xor
lea
movzwl
cmp
jae
cmp
jae
add
add
cmp
jl
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
cmp
ja
jmp
lea
push
call
mov
add
lea
add
push
push
mov
call
mov
mov
push
mov
call
mov
mov
push
lea
push
lea
push
push
call
mov
cmp
jle
mov
push
call
test
je
movl
mov
mov
push
push
call
add
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
push
push
push
call
jmp
mov
mov
ret
mov
mov
jmp
push
mov
push
push
mov
mov
mov
push
mov
mov
call
test
jne
mov
push
mov
call
mov
push
lea
push
pushl
pushl
push
call
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
call
cmp
jge
mov
mov
mov
test
mov
movl
jne
mov
test
jbe
mov
cmp
ja
mov
test
je
mov
mov
mov
push
push
lea
push
push
push
call
mov
mov
test
js
mov
add
sub
mov
lea
jne
xor
pop
pop
pop
pop
ret
mov
test
je
mov
jmp
xor
inc
ret
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
add
call
mov
test
je
mov
push
call
mov
mov
xor
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
add
cmpb
jne
cmpl
push
lea
je
mov
mov
push
call
add
mov
pop
ret
push
mov
call
push
push
call
test
jns
jmp
int3
int3
mov
test
push
mov
je
mov
cmp
je
mov
push
push
push
call
add
cmpl
jne
mov
test
jne
push
push
push
push
mov
push
call
add
movl
pop
ret
mov
cmpl
jne
mov
pop
ret
mov
jmp
mov
lea
cmp
je
mov
cmpl
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
cmpl
jne
push
push
mov
add
cmp
push
push
je
mov
mov
cmp
jae
mov
test
mov
lea
js
movsbl
cmp
mov
jae
mov
add
cmp
jne
mov
mov
pop
pop
pop
pop
add
ret
mov
lea
push
push
lea
lea
movl
call
add
test
je
mov
test
mov
je
lea
add
lea
cmp
je
movzbl
mov
and
sub
sub
cmp
jne
and
mov
shl
add
or
test
mov
jne
cmp
jb
cmp
jae
mov
mov
jmp
push
mov
mov
andl
sub
push
push
mov
mov
cmp
jb
movl
xor
jmp
mov
mov
inc
call
test
je
movsbl
mov
jmp
andl
push
lea
push
pushl
lea
lea
call
test
pop
pop
pop
jne
mov
jmp
mov
jmp
dec
cmp
je
mov
mov
lea
push
push
pushl
inc
call
add
test
je
test
jne
mov
cmp
jb
cmp
jb
cmp
jbe
cmp
jb
mov
mov
mov
pop
pop
leave
ret
not
movzbl
shr
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
test
push
je
test
je
mov
lea
mov
movl
lea
mov
mov
mov
movl
movl
movl
mov
movb
call
test
js
mov
cmpl
jbe
xor
xor
nop
mov
push
call
mov
add
cmp
je
mov
mov
add
add
cmp
jb
mov
test
jne
test
jne
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
push
push
call
add
test
jne
jmp
push
mov
sub
push
push
lea
lea
movsl
movsl
movsl
movsl
call
test
je
mov
mov
xor
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
push
call
pop
pop
leave
ret
push
mov
and
sub
push
push
mov
push
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
lea
mov
call
test
je
xor
pop
pop
pop
mov
pop
ret
cmpl
je
mov
test
je
lea
push
mov
call
mov
mov
push
push
push
mov
call
cmpl
mov
mov
mov
je
push
push
push
lea
call
lea
push
mov
call
mov
lea
push
push
push
lea
call
xor
pop
pop
pop
mov
pop
ret
push
push
push
push
call
mov
push
lea
push
push
push
call
xor
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
mov
call
pop
pop
xor
pop
mov
pop
ret
test
je
testl
jne
call
testl
jne
mov
mov
push
pushl
push
push
call
ret
push
mov
push
push
mov
push
mov
push
push
call
test
js
push
lea
call
mov
mov
neg
sbb
and
add
test
mov
js
andl
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
mov
call
lea
call
mov
pop
pop
leave
ret
mov
cmp
je
mov
mov
lea
test
jl
cltd
idivl
mov
mov
mov
incl
mov
ret
call
test
jne
jmp
mov
test
je
incl
push
push
lea
call
xor
pop
ret
push
mov
push
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
add
test
je
mov
cmp
mov
jge
mov
call
test
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
incl
mov
lea
pop
pop
pop
leave
ret
cmp
jge
flds
fstps
jmp
push
mov
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
push
push
mov
imul
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
andl
push
mov
movl
movl
call
addl
add
cmp
jne
mov
incl
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
sub
xor
push
mov
mov
mov
cmp
jne
xor
mov
mov
movzwl
movzwl
cmp
ja
cmp
jbe
xor
mov
mov
test
jne
xor
mov
mov
movzwl
movzwl
lea
cmp
jl
shr
push
movzwl
test
push
push
jbe
movzwl
lea
lea
xor
mov
mov
mov
mov
jmp
lea
mov
movzwl
add
xor
mov
xor
mov
mov
mov
xor
mov
mov
movzwl
cmp
mov
movzwl
movzwl
mov
jbe
cmp
ja
test
movzwl
mov
movzwl
jne
mov
movzwl
push
push
push
call
add
cmp
jb
mov
push
call
xor
pop
pop
pop
pop
add
ret
movzwl
cmp
ja
mov
mov
mov
jmp
lea
mov
cmp
je
movzwl
shr
sub
movzwl
add
add
lea
cmp
jbe
mov
add
cmp
jae
cmpw
je
mov
mov
mov
mov
shr
cmp
jae
mov
mov
test
lea
je
mov
shr
and
add
mov
and
mov
shl
or
mov
mov
add
cmp
jbe
jmp
mov
sub
add
mov
call
test
mov
mov
je
mov
jmp
push
call
add
test
je
push
mov
push
push
call
mov
mov
mov
add
push
mov
call
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
mov
shr
push
shr
cmp
push
jae
cmp
mov
ja
mov
mov
shl
lea
mov
mov
test
mov
mov
je
cmp
jbe
mov
sub
mov
sub
cmp
jae
cmp
ja
mov
shr
lea
mov
and
mov
shl
add
or
cmp
jbe
mov
mov
mov
add
cmp
jbe
pop
pop
pop
pop
add
ret
mov
sub
add
mov
call
test
je
mov
jmp
cmp
movl
jbe
push
call
add
test
je
cmpl
mov
jne
xor
movzbl
push
push
push
call
mov
mov
mov
add
push
mov
call
add
cmpl
jne
mov
jmp
mov
jmp
lea
cmp
jb
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
test
mov
mov
lea
jbe
mov
mov
test
je
movl
add
sub
jne
mov
add
ret
xor
ret
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
mov
test
je
lea
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
xor
lea
push
mov
mov
mov
movl
movl
mov
mov
call
test
je
mov
movzwl
cmp
mov
mov
ja
movzbl
jmp
lea
push
mov
call
push
call
pop
pop
test
jne
lea
push
pushl
call
testb
add
push
xor
testb
incb
push
xor
xor
mov
pop
pop
xor
pop
call
add
leave
ret
fildl
push
push
lea
fdivl
fstps
flds
fstpl
push
push
call
add
lea
push
pushl
or
lea
call
push
pushl
push
pop
call
jmp
push
pushl
lea
pushl
xor
push
call
jmp
flds
push
push
fstpl
push
lea
call
jmp
mov
mov
cmp
jmp
push
adc
adc
scas
push
adc
scas
push
adc
adc
scas
push
adc
cmp
lcall
adc
add
add
add
add
add
add
or
push
mov
and
mov
sub
cmpl
push
push
mov
push
mov
jge
mov
xor
cmp
mov
je
mov
lea
push
push
push
call
test
js
cmp
jne
mov
movl
mov
test
je
push
call
pop
movl
cmpl
je
mov
mov
lea
call
mov
xor
push
lea
lea
movl
mov
mov
call
cmp
je
cmp
je
push
call
pop
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
lea
push
call
mov
pop
mov
cmp
mov
jne
push
push
push
lea
call
lea
mov
call
lea
call
add
call
pop
mov
pop
pop
mov
pop
ret
xor
jmp
push
mov
push
test
je
mov
push
push
mov
call
test
jne
mov
pop
leave
ret
push
mov
sub
testb
push
je
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
pushl
mov
pushl
call
test
pop
je
lea
mov
mov
ret
push
mov
push
mov
mov
imul
push
xor
cmp
je
mov
cmp
jne
xor
cmp
jne
push
push
pushl
call
cmp
mov
jne
cmp
jne
mov
xor
inc
mov
shl
test
jne
imul
cmp
je
add
cmp
jne
xor
cmp
jne
mov
mov
mov
dec
dec
je
sub
je
dec
je
dec
jne
push
call
cmp
je
pushl
push
call
mov
test
je
mov
push
push
call
mov
xor
inc
shl
not
and
mov
pop
leave
ret
mov
jmp
push
mov
and
sub
mov
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
mov
cmp
je
inc
mov
cmp
jne
call
call
test
mov
jne
mov
mov
push
push
call
test
je
mov
call
pushl
movl
add
add
mov
mov
mov
mov
movl
movl
movl
movl
call
mov
push
push
xor
push
pushl
mov
pushl
pushl
call
push
mov
call
pop
lea
push
push
push
pushl
pushl
push
call
mov
pushl
mov
mov
mov
pushl
lea
push
call
test
mov
je
mov
lea
push
push
push
call
mov
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
pushl
pushl
call
pop
pop
mov
jmp
push
mov
mov
test
jne
test
jne
cmpl
je
push
push
push
mov
mov
xor
mov
call
push
lea
call
mov
push
lea
mov
inc
add
mov
push
lea
call
mov
mov
and
shl
xor
and
xor
mov
mov
shr
and
add
shr
xor
and
and
shl
xor
xor
and
xor
test
mov
jne
cmp
jne
or
xor
pop
pop
pop
pop
ret
shr
and
mov
push
call
test
je
jmp
mov
incl
add
add
adc
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
test
push
lea
mov
movl
je
mov
testl
sbb
or
add
mov
test
je
cmp
add
xor
test
je
testb
jne
mov
sub
sub
test
jge
pop
push
call
mov
test
pop
pop
pop
je
mov
mov
push
mov
push
push
call
lea
call
add
ret
mov
push
lea
lea
movl
mov
movl
call
mov
test
je
mov
mov
push
mov
push
mov
push
push
mov
call
jmp
int3
int3
int3
int3
sub
push
push
call
mov
add
test
je
push
push
push
call
mov
add
mov
xor
pop
add
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
push
push
andl
push
push
lea
call
mov
lea
add
mov
push
push
call
pushl
andl
mov
lea
mov
call
mov
test
je
pushl
mov
push
call
mov
lea
call
lea
call
mov
pop
leave
ret
mov
mov
ret
push
mov
push
xor
movl
mov
call
push
push
push
mov
mov
push
mov
mov
push
mov
mov
push
pushl
mov
mov
pushl
mov
mov
push
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
testb
jne
push
lea
push
call
test
je
andb
cmp
je
lea
xor
cmp
mov
lea
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
push
call
add
test
jne
lea
push
call
test
je
push
mov
mov
call
test
je
mov
push
push
lea
push
lea
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
lea
push
call
push
call
test
jne
jmp
movzbl
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
xor
cmp
je
cmpb
je
inc
add
mov
mov
call
test
je
inc
add
incl
jne
mov
mov
mov
call
cmp
je
inc
add
push
call
cmp
je
inc
add
adc
test
je
inc
add
call
cmp
je
mov
mov
mov
call
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
add
and
add
mov
mov
mov
mov
add
add
call
cmp
jne
push
mov
lea
mov
call
mov
cmp
je
lea
push
lea
movl
movl
movl
mov
mov
push
push
call
mov
test
jne
test
jne
cmp
jne
lea
call
mov
cmp
je
cmp
jne
push
mov
lea
mov
call
mov
mov
mov
push
push
mov
call
cmpb
mov
jne
mov
mov
mov
mov
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
mov
cmp
jne
push
call
add
cmp
je
mov
mov
push
mov
call
mov
test
je
mov
mov
push
call
test
mov
je
mov
mov
movb
movb
mov
mov
lea
call
mov
mov
cmpl
je
mov
test
je
cmp
jne
call
test
je
push
mov
call
lea
mov
call
mov
mov
push
call
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
push
lea
call
push
lea
lea
call
lea
push
push
push
call
test
js
mov
test
je
xor
lea
call
test
je
mov
mov
push
lea
lea
call
lea
push
push
lea
push
call
test
jns
cmp
jne
mov
mov
push
push
call
add
or
push
lea
lea
call
lea
push
push
lea
push
call
test
mov
jns
cmp
jne
mov
push
push
call
add
mov
mov
push
push
call
add
lea
call
xor
jmp
mov
add
call
jmp
push
mov
push
push
call
test
pop
je
andl
mov
movl
mov
test
mov
je
mov
push
call
push
pushl
call
lea
call
leave
ret
xor
jmp
push
mov
push
push
mov
mov
push
mov
push
push
lea
call
push
push
push
call
mov
call
test
jne
pushl
pop
and
push
adc
or
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
andl
push
pop
mov
test
jne
cmp
jl
andl
push
pop
mov
test
je
mov
cmp
jl
andl
push
pop
mov
test
jne
cmp
mov
jl
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
pop
xor
pop
pop
ret
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
mov
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
int3
int3
sub
push
mov
xor
mov
call
call
movb
flds
fimull
call
flds
fstps
mov
mov
mov
flds
fadd
faddl
fistpl
flds
mov
fstps
sar
mov
movb
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
mov
push
xor
push
mov
mov
mov
mov
mov
call
cmp
je
push
push
mov
mov
mov
cmp
je
mov
mov
lea
lea
push
mov
mov
mov
push
push
mov
mov
movl
movl
mov
call
mov
cmp
je
cmp
je
mov
mov
test
je
mov
add
push
call
add
test
je
add
cmp
jne
pop
pop
mov
pop
pop
xor
call
add
ret
mov
mov
cmp
jne
mov
jmp
test
je
jmp
mov
push
mov
call
add
test
jne
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
mov
mov
test
je
mov
test
jbe
andl
push
pop
mov
mov
test
je
pushl
mov
pushl
push
call
test
jns
incl
add
cmp
jb
mov
pop
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
test
je
push
push
push
mov
test
je
mov
mov
push
call
cmp
mov
je
cmp
je
cmp
je
mov
lea
call
test
jne
pop
pop
pop
pop
add
ret
mov
mov
mov
add
mov
mov
test
mov
je
mov
xor
test
mov
jle
add
mov
add
mov
cmp
jne
cmp
jne
add
cmp
jne
mov
mov
cmp
je
test
je
lea
push
lea
mov
call
jmp
mov
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
test
jne
push
push
mov
call
test
je
mov
mov
push
call
test
je
mov
mov
push
mov
call
jmp
xor
jmp
xor
jmp
addl
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
cmp
jne
lea
call
lea
call
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
push
push
mov
lea
movl
movl
inc
add
push
add
add
nop
xchg
xchg
push
rol
xchg
out
loopne
jb
add
cld
add
add
push
mov
push
mov
pop
fldl
ret
push
add
pop
mov
add
xchg
add
push
mov
test
fwait
add
fcoms
add
push
push
lea
push
push
push
call
je
stos
gs
clc
xchg
add
add
test
add
mov
test
aam
jae
fcmovu
add
add
movsl
add
jae
add
pop
push
mov
fwait
add
mov
lcall
add
mov
add
mov
out
pushf
mov
lea
pop
popl
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
pushf
add
lahf
repnz
add
arpl
mov
add
push
mov
add
test
add
add
stos
add
jb
adcb
xchg
add
add
add
repnz
sti
mov
add
add
push
add
jmp
pop
add
bound
add
add
add
add
mov
fmull
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
push
call
add
add
ljmp
movsl
arpl
push
nop
add
in
sahf
add
add
clc
add
mov
push
js
lret
cld
add
push
fnstcw
je
jecxz
aad
add
add
add
repnz
add
sub
push
push
push
push
push
push
push
push
lea
push
push
call
mov
jno
mov
mov
cli
in
roll
jb
lods
mov
add
ficompl
jl
add
add
add
add
stc
lea
add
lea
rcl
add
fadd
popf
mov
add
mov
push
add
mov
xchg
add
add
jo
add
add
fwait
pop
pusha
xchg
add
loop
add
pop
push
call
push
push
lea
push
push
call
add
fimull
mov
sti
out
fildl
add
add
add
add
xchg
add
mov
pop
enter
addb
add
mov
lea
pop
call
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
mov
in
fstl
add
fdivr
lock
stc
add
cld
pop
out
movb
add
fcom
rcl
jne
lea
aam
rolb
cmpb
xchg
in
out
loope
enter
add
mov
loope
mov
outsl
add
add
fs
pop
shl
jge
mov
add
add
mov
notb
and
add
loopne
add
push
lea
push
push
push
lea
push
push
push
push
call
scas
jbe
rolb
rol
mov
jbe
std
mov
mov
push
divl
test
lahf
mov
add
add
ja
imul
andl
mov
insb
lcall
lods
pop
add
mov
mov
fwait
add
pusha
testb
fmull
jg
add
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
pusha
add
add
add
arpl
add
add
mov
xchg
cmc
add
shl
add
mov
fistl
in
add
into
xchg
xchg
xchg
add
add
add
out
add
jecxz
mov
jne
jge
mov
pop
ret
mov
push
push
push
lea
push
lea
push
push
push
lea
push
call
idivl
adcb
pop
jmp
fxch
hlt
add
mov
mov
mov
stos
jns
add
pop
mov
add
add
mov
lea
pop
mov
push
lea
push
push
push
call
add
mov
outsl
mov
xchg
in
rcrl
lods
add
ja
add
pop
mov
jb
jnp
add
mov
add
add
xchg
out
push
add
jp
cli
mov
loopne
call
mov
lea
pop
add
add
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
jbe
lods
xchg
add
loop
mov
enter
fcoml
add
in
stos
in
mov
jns
out
add
shrl
jae
add
add
loope
add
test
add
add
lcall
mov
pop
negb
mov
ja
mov
lea
pop
add
mov
push
push
lea
push
push
push
push
push
call
pop
into
xchg
cwtl
test
addr16
mov
add
test
mov
add
scas
add
bound
scas
add
add
mov
jecxz
add
add
rcrb
test
fninit
sti
push
cld
jl
add
xchg
cwtl
add
rcll
pop
lret
mov
jnp
add
add
add
ficoms
mov
mov
add
stc
add
add
pop
xor
push
push
push
push
call
sti
idivb
leave
add
mov
and
pop
stc
xchg
mov
icebp
jns
pop
add
incb
xchg
mov
cli
out
lock
pop
mov
add
loop
cltd
cmpsb
fwait
fwait
call
fs
push
int
add
pop
add
push
push
sub
push
or
not
add
sub
sub
inc
pop
sub
shr
pop
push
push
push
push
lea
push
call
mov
addr16
jp
mov
lock
in
add
popl
je
add
add
sahf
fisttpl
pop
add
aam
add
lods
aad
pop
out
add
mov
add
add
fiaddl
mov
add
add
pushf
hlt
mov
ljmp
addl
test
imul
arpl
pushl
push
push
lea
push
push
push
push
push
call
add
pop
bound
add
add
lret
mov
add
jnp
sahf
mov
mulb
add
add
add
add
out
add
add
add
pop
test
mov
add
add
add
add
cmpsb
mov
call
push
leave
add
lea
pop
call
push
lea
push
call
mov
add
lock
add
add
add
jp
add
add
roll
add
push
push
rcll
rcrl
jae
add
repnz
iret
add
iret
scas
fcompl
jl
outsl
lret
stos
add
jmp
or
inc
call
ror
sub
pop
jns
fldl
push
push
push
call
add
add
jmp
jae
je
add
mov
add
ret
add
and
lock
add
add
mov
xchg
pop
stos
mov
mull
xchg
add
fiaddl
add
add
add
jo
fistpl
notl
fldl
add
mov
ret
fisttpl
pop
movl
push
push
call
xchg
lods
add
add
add
add
add
add
xchg
cmpsl
lock
add
int
cmpsb
sti
add
add
stos
add
add
add
add
cltd
xlat
jmp
add
push
xchg
add
bound
add
lods
std
mov
add
add
cli
cwtl
test
add
stos
std
fstp
push
add
add
add
mov
lea
pop
lea
push
push
lea
push
lea
push
push
push
push
call
fwait
out
push
sub
test
roll
push
in
roll
mov
addb
pop
lret
imul
les
xchg
add
sti
int3
addl
ja
mov
add
add
add
mov
movb
add
jecxz
add
call
add
mov
fyl2x
jb
add
mov
add
add
add
mov
pop
pushl
push
push
call
add
ret
mov
loopne
int3
xchg
stc
jno
mov
add
add
add
scas
pop
addr16
pop
jnp
add
fstps
xchg
add
pop
add
add
pop
add
jle
add
fnstsw
jnp
aam
bound
pop
pushl
push
push
push
push
push
call
push
jbe
mov
add
fsubrl
xchg
add
fildl
add
cmc
add
push
add
jnp
mov
add
add
add
xchg
add
add
std
add
xchg
add
out
bound
cld
add
fidivrs
add
in
add
mov
add
pop
push
cltd
in
add
addl
cltd
pop
mov
lea
pop
call
push
push
call
add
mov
add
faddp
add
movsb
mov
scas
push
add
add
add
mov
mov
add
lods
jmp
popa
add
cwtl
data16
add
pop
pushl
push
push
push
push
push
push
call
add
out
mov
imul
add
roll
loop
xchg
fldl
push
jge
scas
add
add
add
lret
add
push
add
pop
lods
lcall
nop
jnp
add
pop
pushl
push
push
call
roll
test
add
add
ja
pop
into
pusha
xchg
add
add
outsl
addb
pop
je
xchg
addb
jecxz
add
add
add
cld
gs
movl
add
jbe
in
add
add
pop
pop
mov
out
stc
imul
xchg
in
jno
add
pop
call
push
push
push
push
pop
add
sub
dec
sub
ror
shr
pop
sub
xor
pop
push
push
call
data16
iret
faddl
add
add
shlb
jo
xchg
add
data16
add
add
lods
add
int3
fildl
jl
add
add
out
js
stos
out
in
add
jnp
add
add
roll
sahf
pop
add
out
add
add
cld
lea
pop
pushl
call
push
lea
push
call
sbbb
ja
add
add
cli
add
add
lock
push
add
add
loope
add
add
add
jle
add
jo
add
stos
add
int3
push
add
add
rorb
lret
add
imul
int3
fdivr
add
pop
push
push
push
add
push
or
not
add
sub
add
lea
sub
add
pop
xor
shl
not
pop
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
popf
scas
pop
jbe
add
stos
add
enter
add
out
mov
add
add
andl
cmpsl
ret
into
pop
add
xchg
int
scas
mov
hlt
xchg
add
push
jl
lahf
push
add
mov
lea
pop
push
push
push
call
add
lods
int
add
add
cld
add
rolb
mov
mov
pop
pop
mov
jge
push
add
add
lods
jns
add
mov
mov
imul
mov
add
movsb
add
mov
shl
add
pop
push
push
push
lea
push
push
push
push
call
jecxz
hlt
mov
add
push
xchg
cli
add
add
outsl
xchg
test
sahf
add
xchg
add
add
mov
addb
imul
fnstsw
add
add
popa
andl
and
fs
add
mov
add
mov
fmull
rclb
push
push
push
push
push
push
lea
push
push
call
roll
aad
push
addr16
add
imul
in
mov
in
icebp
add
add
clc
add
add
add
mov
addr16
popa
in
add
add
out
push
add
test
add
add
add
add
aad
roll
add
mov
lea
pop
mov
push
push
push
push
push
push
push
push
push
call
shlb
add
addl
add
xlat
add
add
xchg
shl
insb
add
addl
push
pop
push
add
add
xchg
add
mov
xchg
add
pop
push
push
push
push
push
push
push
push
push
push
call
sti
test
add
lock
outsl
mov
mov
add
stos
std
hlt
push
pushf
jle
fcmovb
xchg
int3
lret
add
in
add
cmc
add
add
push
add
xchg
add
mov
add
call
add
int3
mov
add
data16
movsb
add
add
push
add
scas
hlt
jo
add
popa
and
push
mov
push
lea
push
push
push
call
jp
ja
jae
addl
ja
add
xchg
stos
jb
add
cwtl
std
ljmp
jecxz
push
ficoml
add
add
add
add
add
jge
pop
int
mov
add
addr16
out
xchg
mov
add
lcall
add
push
push
lea
push
push
push
push
call
push
loope
add
push
mov
add
add
mov
test
hlt
add
jmp
add
mov
pop
add
jae
mov
add
add
les
add
add
insb
add
movsb
js
fwait
add
pop
add
push
not
pop
add
push
push
push
push
call
jnp
into
repnz
add
fdivl
add
mov
arpl
data16
fdivrs
add
scas
mov
add
addr16
jecxz
lret
jmp
mov
lea
pop
mov
push
push
push
call
mov
jmp
fiadds
shlb
out
add
add
js
test
fucomip
stos
jne
push
add
add
add
fxch
mov
add
xor
xlat
xchg
lret
lods
fs
jmp
mov
lea
pop
xor
push
push
call
add
arpl
add
loopne
into
fistps
in
cmpl
add
loopne
jmp
mov
add
jnp
add
add
add
outsl
test
add
add
addl
add
pop
push
popf
loope
ljmp
hlt
add
rcll
flds
insb
cli
add
imul
imul
pop
add
push
push
push
push
push
push
push
call
xchg
add
movb
roll
add
pop
push
popf
mov
push
add
add
pop
add
sarb
add
xlat
out
loope
mov
enter
push
sahf
add
in
jne
add
add
add
mov
mov
scas
add
add
test
add
jns
add
jle
int3
lea
pop
add
push
push
push
call
mov
fwait
add
cld
out
addl
pusha
loopne
add
jle
lret
jecxz
addr16
mov
fiadds
js
ret
pop
in
add
mov
lea
pop
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
push
call
icebp
mov
add
arpl
add
add
add
fwait
outsl
jmp
add
addl
add
add
fs
add
cmpsl
cwtl
add
hlt
add
imul
js
xchg
movsb
jo
mov
ja
xchg
mov
rcrl
add
test
add
pusha
add
mov
lea
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
push
call
insb
jne
add
add
imul
movsl
lds
add
pop
loope
lret
add
ret
add
mov
xchg
out
repnz
add
add
push
add
mov
shl
mov
lahf
stos
xlat
xchg
mov
shll
loop
sti
arpl
shr
add
cwtl
add
xchg
xchg
xchg
push
add
add
imul
push
push
push
push
push
push
push
push
call
add
int
filds
add
fs
pop
cmc
add
lods
jae
add
add
add
sti
mov
imul
mulb
out
int
add
mov
lea
pop
add
push
add
inc
pop
add
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
add
shrb
pop
mov
aam
rclb
bound
add
pop
add
add
cmpsb
add
out
add
ljmp
mov
push
lods
mov
lea
pop
pop
push
dec
pop
mov
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
mov
out
add
jae
mov
add
lds
in
data16
lahf
fwait
add
add
push
aad
add
lret
add
aad
add
out
jo
popa
mov
add
sahf
add
loopne
stos
roll
loope
jp
mov
add
mov
add
jecxz
pop
mov
jbe
add
popl
mov
lea
pop
xor
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
mov
test
cld
mov
xchg
jns
fiaddl
add
add
mov
add
pop
fdivl
add
add
mov
fwait
gs
push
jae
mov
cld
lea
pop
add
push
sub
pop
push
push
shl
pop
mov
push
push
push
push
push
push
call
add
jbe
xchg
mov
xchg
add
add
add
clc
jne
add
jecxz
add
in
add
add
xchg
add
mov
add
add
jle
jl
popa
pop
cli
aam
mov
add
call
add
add
add
xchg
add
pusha
out
pop
push
mov
add
pop
xor
push
lea
push
call
enter
movsl
mov
add
js
add
add
add
out
fistps
mov
jp
arpl
add
ljmp
add
add
jge
cmpl
loope
insb
fmul
ja
cltd
add
lds
push
in
in
jns
mov
lea
pop
add
push
push
push
push
call
iret
mov
add
stc
add
add
add
add
pop
add
add
add
test
jno
js
lock
andb
push
mov
add
pop
add
add
loopne
pop
push
test
cwtl
jb
int
mov
add
filds
pop
add
cld
lea
pop
sub
push
push
lea
push
call
add
add
pusha
add
mov
mov
movsl
add
add
mov
add
roll
xchg
add
pop
in
cwtl
mov
add
add
add
fildll
add
jecxz
jl
jne
add
testb
add
mov
lea
pop
pop
push
xor
add
pop
rep
push
lea
push
call
add
add
jmp
mov
rcl
add
lahf
add
push
cli
lock
add
mov
lea
xchg
mov
add
jbe
fsub
add
jecxz
enter
into
popf
mov
lea
pop
pop
push
push
push
push
push
lea
push
push
push
call
add
add
xlat
aad
test
movsb
mov
add
mov
add
jo
pop
add
xchg
add
jecxz
faddl
pop
add
popa
pop
insb
orb
loop
add
out
mov
pop
pop
push
add
in
nop
add
bound
pop
mov
add
push
lea
xor
pop
add
push
dec
dec
add
sub
pop
add
mov
xor
push
push
lea
push
call
in
rcrl
outsl
stc
add
aad
add
mov
add
les
jbe
movsb
add
add
add
outsl
jl
pop
add
fcmovu
mov
notl
add
add
arpl
add
mov
cli
stc
add
out
ret
mov
lea
pop
mov
xor
push
pop
mov
push
push
push
push
call
add
in
les
xchg
xchg
add
add
cmpsl
add
pushf
add
lds
add
mov
xchg
add
add
mov
test
je
xlat
leave
add
push
imul
shl
enter
add
add
shlb
mov
push
loope
add
mov
test
add
in
mov
int3
lea
pop
xor
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
int3
add
xlat
add
fadds
add
mov
mov
add
rcl
fcompl
jp
in
ljmp
mov
loop
xchg
xchg
enter
negl
mov
lea
pop
add
push
push
push
push
push
push
push
push
push
call
int
data16
push
pusha
leave
xchg
pusha
push
add
jo
add
rcrb
add
ret
mov
add
add
in
repnz
test
imul
add
lds
lods
mov
mov
cwtl
mov
add
fiadds
jmp
popf
add
mov
lea
pop
add
add
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
movl
add
aad
arpl
add
scas
js
loope
aam
mov
fdivr
pop
xchg
add
add
xchg
add
stos
roll
xchg
out
mov
add
add
add
jno
add
ljmp
jge
arpl
add
clc
loope
add
add
push
call
fisttpll
pop
mov
push
push
rol
push
or
not
add
rol
sub
rol
rol
pop
ror
rol
rol
add
pop
push
inc
pop
pushl
call
push
push
push
lea
push
push
lea
push
call
add
sti
add
pop
mov
mov
add
lock
je
imul
mov
adcl
add
add
add
jne
fwait
pop
test
add
cmc
jo
ret
push
mov
icebp
add
scas
std
pop
add
mov
cltd
add
mov
lea
pop
push
push
push
not
ror
push
or
inc
add
lea
inc
shl
sub
shl
shl
inc
xor
pop
ror
pop
push
lea
push
push
push
push
push
push
call
popa
add
test
add
add
test
test
mov
aam
add
add
std
add
add
add
int3
jmp
mov
shl
pop
subb
mov
jne
stos
hlt
push
into
loope
cmpb
in
add
test
lea
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
int
shl
aam
add
add
pop
int
out
icebp
push
roll
push
mov
add
gs
int
int3
add
add
mov
pop
lods
mov
add
mov
mov
outsl
jmp
mov
roll
pop
test
add
add
mov
mov
pop
push
call
push
xor
add
pop
mov
push
sub
shl
add
ror
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
aad
pop
add
loop
imul
stc
pop
push
add
in
ja
xchg
add
add
in
lds
cltd
movsb
rolb
lret
test
jo
add
std
add
add
xchg
add
add
cmpsb
jns
outsl
push
clc
addr16
mov
lea
pop
mov
push
xor
sub
pop
add
push
push
push
push
call
loopne
add
pop
mov
repnz
xchg
pop
add
add
xlat
add
add
push
jl
mov
add
jmp
add
mov
nop
xchg
add
cli
test
sti
cmpsl
ficoml
pusha
mov
lea
pop
add
push
push
push
push
push
push
push
lea
push
lea
push
push
call
enter
std
movsb
pop
lods
push
mov
add
shll
add
popa
add
mov
add
pusha
add
xchg
imul
sahf
add
add
movsb
mov
mov
clc
add
ffreep
add
add
ficompl
add
add
add
pop
push
lods
add
mov
lea
pop
add
mov
push
push
lea
push
push
push
push
call
add
add
nop
add
mov
mov
add
mov
mov
arpl
insb
popf
add
roll
push
call
jno
ret
fxch
repnz
lret
add
xchg
out
add
add
incb
add
add
pop
add
loopne
cli
add
lea
pop
xor
push
push
push
push
call
add
into
loopne
fwait
lcall
roll
popf
mov
add
call
pop
icebp
add
add
xchg
add
xchg
push
insb
add
fldcw
addr16
jno
mov
filds
add
mov
mov
push
pop
add
add
add
add
pop
add
push
xor
sub
pop
add
push
push
push
push
push
lea
push
push
push
call
add
gs
jecxz
nop
add
cli
mov
add
test
scas
addl
outsl
cltd
add
loope
je
pop
add
pushf
iret
pusha
add
mov
mov
xlat
add
lea
bound
mov
push
push
push
push
push
push
call
mov
add
push
lret
add
lods
add
in
add
lea
repnz
loope
lods
add
add
add
add
add
pop
add
add
xchg
push
jne
add
mov
add
mov
add
aad
imul
add
cmc
add
int3
lea
pop
xor
push
lea
push
push
push
call
outsl
push
movsb
call
add
add
add
pop
pop
int3
imul
add
xchg
pop
add
cld
imul
rolb
add
mov
lea
pop
add
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
pusha
les
add
mov
add
jno
pusha
add
push
push
mov
mov
add
andl
add
out
out
mov
pop
add
bound
in
add
jge
mov
add
ret
hlt
add
cld
add
mov
add
faddl
loopne
or
add
jno
mov
lea
pop
add
push
shr
add
pop
pop
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
call
fs
pop
add
push
add
jmp
push
in
add
pop
not
add
xchg
push
add
add
jl
jns
outsl
mov
add
xchg
mov
lea
pop
mov
xor
push
push
push
call
add
add
lods
mov
add
add
cli
add
sarl
add
mov
insb
hlt
push
add
sahf
jl
add
cltd
in
cli
add
out
add
add
pop
rep
mov
push
push
push
push
push
push
call
add
add
xchg
add
shlb
test
add
cmp
push
addl
add
add
xlat
push
enter
lods
pop
add
add
add
js
add
je
add
loope
add
mov
add
jmp
add
repnz
xchg
shr
in
add
add
mov
lea
pop
xor
push
push
lea
push
lea
push
push
call
mov
mul
imul
cmpsb
add
add
insb
jno
data16
add
scas
test
add
ret
add
addb
mov
add
add
js
add
pop
add
push
shl
pop
or
je
mov
push
push
push
push
call
mov
out
ret
imul
cwtl
ret
fwait
loope
mov
add
fs
in
repnz
add
pop
add
add
add
push
jbe
outsl
add
add
popf
jns
iret
in
add
add
js
enter
add
fwait
add
in
xchg
add
cmpsb
pop
mov
lea
pop
xor
push
lea
push
lea
push
lea
push
lea
push
call
add
jp
mov
push
add
add
add
add
add
add
sahf
imul
call
add
data16
ret
jecxz
out
add
popf
jne
in
lods
push
stos
add
in
sti
add
add
add
add
clc
mov
add
add
xchg
pop
add
add
add
in
mov
lea
pop
add
push
lea
push
push
push
push
call
sarb
add
add
add
add
add
fs
fcmovu
add
fiadds
int
rcrb
add
icebp
icebp
mov
push
xchg
popf
pop
add
add
lods
jno
add
sahf
add
add
add
in
mov
add
add
add
add
lea
pop
mov
push
push
push
push
push
push
push
push
push
push
push
call
jecxz
add
sahf
jnp
iret
test
lret
add
add
sarb
add
jnp
js
add
sahf
data16
add
jae
sar
add
xchg
add
mov
xchg
loope
addr16
jge
push
add
int
hlt
add
mov
add
mov
mov
lea
pop
xor
push
push
call
jo
pop
call
jl
pop
add
add
push
add
js
data16
add
add
jmp
fisttpll
add
jbe
add
shll
jno
les
mov
mov
flds
add
add
or
add
add
mov
insb
xlat
gs
xchg
test
pop
add
push
push
push
push
push
lea
push
push
push
push
lea
push
call
ljmp
mov
rclb
rorl
push
jns
enter
lea
clc
add
xlat
jl
testl
jmp
xchg
xchg
mov
add
add
add
scas
incb
add
mov
add
mov
add
mov
fdivrs
ljmp
scas
add
cltd
push
hlt
lea
pop
add
push
add
pop
add
push
push
push
lea
push
push
lea
push
push
push
push
call
xlat
add
mov
rcrb
pop
out
mov
push
lret
add
movsb
add
add
lds
add
aad
add
add
loop
mov
lea
pop
mov
push
push
push
push
push
push
call
add
xchg
xchg
add
out
add
jno
xchg
add
add
pusha
nop
stc
add
xchg
popa
add
add
add
jbe
add
les
stos
js
cmpl
hlt
push
mov
add
mov
jle
mov
incb
lea
pop
xor
push
lea
push
lea
push
push
call
add
lods
shl
add
pushf
xchg
adcl
outsl
add
outsl
test
jl
add
push
add
add
mov
hlt
add
jo
add
lret
add
add
add
add
loopne
clc
xchg
xchg
add
push
add
add
mov
stos
add
bound
pop
add
push
push
push
push
push
push
call
lahf
into
add
out
add
add
add
test
add
rorl
out
jp
insb
jbe
push
fldl
cli
fisttpll
push
add
push
std
test
add
cwtl
add
pusha
mov
pop
add
push
add
add
sbbl
scas
popf
jecxz
mov
lea
pop
add
push
lea
pop
pop
push
push
push
call
add
je
leave
add
jns
roll
push
fs
lods
add
add
leave
in
loop
push
add
aad
gs
add
jmp
add
arpl
add
xchg
jbe
add
lds
add
insb
mov
shlb
movsb
add
pusha
pop
add
add
add
add
hlt
lea
pop
rep
push
push
push
push
call
xlat
pop
add
aad
add
push
add
jge
popf
fidivs
jle
jmp
xlat
std
jbe
jecxz
out
add
mov
testl
cmpsb
fst
roll
add
notb
pop
jbe
leave
add
add
add
jbe
add
mov
add
scas
lahf
push
in
add
adc
dec
sub
push
call
add
movsb
mov
arpl
jp
bound
add
add
add
in
jae
xchg
imul
add
mov
jl
add
xchg
outsl
loope
add
or
or
push
lea
push
push
push
push
lea
push
push
lea
push
call
mov
xchg
jo
add
add
jae
shll
xchg
jb
lods
add
add
outsl
scas
xchg
add
mov
push
repnz
push
add
mov
lea
add
and
les
push
push
push
push
push
call
add
push
add
add
lea
shrb
in
add
pop
pushf
lret
push
jge
jge
xchg
add
add
push
pop
in
add
test
jbe
test
add
imull
into
mov
lea
pop
or
je
mov
push
push
push
push
call
add
cmpsb
mov
loop
mull
data16
je
clc
lahf
stos
add
iret
add
add
jmp
addb
add
insb
cwtl
add
fucomi
fadds
xchg
cmpsl
faddl
ja
add
mov
cmpsl
iret
add
add
test
hlt
add
add
std
add
in
lods
push
enter
mov
add
lret
xlat
faddl
jl
add
add
lea
pop
add
add
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
ljmp
jmp
add
out
xchg
in
add
in
out
push
fisttpll
jecxz
cmpsl
subb
iret
add
add
roll
rcr
out
push
mov
mov
lea
pop
rep
pop
push
push
shr
inc
not
push
sub
add
shl
dec
sub
sub
not
dec
pop
rol
pop
push
push
call
test
nop
add
test
add
hlt
add
out
add
pop
gs
add
mov
add
loope
int
mov
insb
mov
add
pop
add
add
add
fstp
add
add
pop
je
scas
push
les
rolb
add
push
add
add
add
scas
add
add
add
add
loopne
rolb
imul
mov
push
sub
dec
pop
mov
mov
push
sub
pop
jmp
push
add
pop
push
push
pop
mov
add
push
lea
push
call
pusha
mov
add
insb
lcall
push
jmp
add
add
leave
pop
mov
pusha
add
mov
test
push
rcll
aam
add
xchg
mov
in
mov
add
loope
lcall
mov
lea
pop
push
push
push
call
add
add
addr16
aam
add
enter
lret
insb
mov
add
add
rcrb
scas
add
add
xchg
add
add
out
add
mov
mov
mov
arpl
mov
lea
pop
push
push
push
push
push
push
lea
push
call
add
add
in
ror
jle
cmc
add
add
add
loopne
outsl
int
in
add
lds
push
test
movsl
add
roll
add
out
add
add
add
lret
xchg
mov
mov
xchg
lret
jle
mov
pop
mov
lods
add
add
push
push
out
hlt
lea
pop
push
push
add
sub
not
pop
push
push
lea
shr
xor
xor
pop
mov
push
push
call
arpl
add
push
add
std
add
xchg
rcr
fcomip
arpl
faddl
add
rcrb
imul
add
xchg
pop
fnsave
les
pop
push
push
push
push
push
push
call
add
add
mov
sahf
add
xchg
jmp
add
les
rolb
call
test
jecxz
out
fildl
push
popa
add
jl
iret
mov
add
testb
xchg
jge
fadds
xchg
mov
insb
pusha
mov
sahf
lods
testb
mov
lea
pop
pop
push
push
push
lea
push
push
push
call
cmc
leave
pop
movsl
cli
in
jmp
fcoml
xchg
js
js
add
shrl
fidivrs
add
add
lods
add
rclb
add
mov
pop
leave
pop
ret
icebp
ja
les
push
shl
pop
leave
ret
push
rol
shr
dec
sub
pop
push
push
inc
add
shl
add
pop
mov
push
sub
dec
pop
add
push
shr
dec
pop
push
push
shl
add
xor
pop
push
push
push
call
frstor
add
testb
ret
push
int
add
hlt
mov
add
add
ret
add
stos
add
add
add
pop
pop
pop
leave
icebp
ljmp
cli
add
add
add
jge
jle
mov
popf
add
mov
add
add
int3
lea
pop
push
push
shr
pop
push
push
push
push
push
push
push
push
push
push
call
adc
ljmp
pushf
fstpl
add
ror
add
push
je
jo
lahf
roll
xlat
pop
testl
pushf
aad
std
aad
mov
pop
js
add
les
add
stc
movsb
xchg
push
cli
sarb
les
inc
cld
add
add
push
lea
push
push
lea
push
push
push
call
rcll
movl
clc
add
mov
cmc
enter
into
stos
shrl
add
add
add
add
add
add
pushf
imul
add
add
add
add
ret
add
add
add
mov
mov
add
in
repnz
int
mov
sbb
inc
clc
incl
add
add
inc
ja
push
push
lea
push
push
lea
push
call
or
popf
add
mov
fidivrs
addb
add
add
mov
iret
add
xlat
lea
icebp
jns
flds
add
fadds
add
add
out
rolb
lods
add
add
lods
add
push
push
jle
mov
lea
pop
mov
push
sub
rol
sub
rol
pop
pop
push
not
pop
pop
push
push
push
push
push
push
push
push
push
push
call
movb
mov
insb
ret
add
add
movsb
iret
add
mov
fnstenv
add
iret
pusha
pop
mov
scas
add
jmp
add
add
add
pop
stos
mov
push
add
add
roll
add
outsl
aad
pusha
push
scas
add
std
test
add
in
stc
mov
lea
pop
pop
pop
push
lea
inc
pop
leave
push
rol
sub
not
shr
pop
ret
push
shl
shr
pop
push
mov
push
push
push
push
call
add
add
add
add
add
fwait
add
into
jbe
aad
test
pop
add
add
pop
js
jo
lods
test
add
sarb
add
mov
lea
pop
add
push
lea
add
pop
push
push
lea
push
push
push
push
push
push
call
add
add
mov
xchg
movsb
jge
add
add
data16
add
push
add
lea
xchg
add
xchg
lods
ljmp
stc
addb
jb
addl
les
add
roll
test
add
out
add
mov
cld
call
lea
pop
push
push
pop
push
push
push
add
pop
testl
push
rol
sub
pop
addl
push
xor
pop
push
call
push
xor
add
ror
pop
mov
push
push
push
lea
push
push
push
push
push
call
lret
into
mov
cmpb
scas
add
into
not
add
add
add
add
leave
mov
add
add
xchg
add
add
add
push
bound
pop
pushl
push
push
push
call
add
out
ret
add
add
leave
push
pushf
add
pop
lcall
bound
mov
add
push
lcall
mov
pop
les
add
or
add
clc
call
xchg
push
push
push
push
push
push
call
rolb
scas
cmpsl
or
cmpsl
add
add
xchg
add
mov
add
mov
add
jbe
add
add
stos
pop
movl
jnp
mov
lea
pop
cmpl
jne
push
add
shr
xor
pop
pop
push
push
lea
push
push
push
push
push
call
loope
out
int3
pop
in
jge
add
std
add
add
add
add
jne
call
add
add
add
add
icebp
fsubrl
add
out
lds
fs
mov
push
add
add
lods
out
add
scas
test
call
mov
sbb
pop
push
lea
push
push
push
push
push
push
push
call
rolb
mov
jns
add
shl
cld
add
xchg
add
add
add
subl
shlb
add
data16
movb
loope
out
add
addr16
add
popa
and
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
mov
add
fldlg2
lea
push
lods
pop
stos
add
add
push
add
add
add
add
addl
les
add
mov
add
mov
mov
add
loopne
push
out
leave
rolb
roll
loope
mov
hlt
lea
pop
pop
leave
push
push
push
lea
push
call
aad
push
xchg
cld
add
add
add
outsl
test
add
add
pop
cld
gs
add
gs
mov
test
mov
insb
add
mov
faddl
aad
jbe
push
add
sti
jno
add
aam
add
push
add
add
mov
adc
add
xchg
xchg
cld
pop
sahf
push
add
add
rorb
pop
ret
push
shr
pop
push
push
sub
pop
mov
push
sub
shl
sub
lea
pop
add
push
push
push
push
push
push
push
push
call
add
pushf
movsb
add
scas
add
mov
stos
pop
arpl
add
add
add
aam
xchg
in
xchg
push
mov
je
je
push
add
add
in
pop
add
call
imul
cltd
addb
mov
lea
pop
push
push
push
shl
shr
pop
push
push
push
dec
shl
pop
movl
push
push
call
cld
add
add
popa
bound
push
mov
mov
add
in
insb
mov
add
add
mov
ja
in
mov
imul
imul
js
lea
add
in
push
add
leave
xchg
add
test
cwtl
enter
add
sti
out
lret
mov
lea
pop
push
push
add
xor
pop
call
push
push
push
push
call
add
testl
mov
ret
add
ret
add
test
addr16
aad
imul
into
lods
mov
aam
fdivrs
lret
add
fmull
or
sub
shl
pop
call
push
sub
add
pop
subl
push
shl
sub
pop
cmpl
jne
pop
push
ror
pop
pop
push
add
ror
add
sub
pop
pop
pop
push
push
push
push
lea
push
push
call
pop
out
stos
sarl
add
call
add
lock
gs
add
push
fucom
jnp
mov
push
mov
imul
add
ljmp
je
add
je
xchg
add
out
jno
stos
sbbb
test
jl
loopne
add
bound
add
mov
add
pop
leave
push
push
push
push
lea
push
push
push
lea
push
call
add
nop
add
lock
mov
push
mov
add
mov
lods
add
fcmovnbe
add
enter
in
scas
pop
mov
add
mov
imul
add
mov
fadds
icebp
push
jmp
add
add
lea
add
mov
lea
pop
ret
push
add
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
pop
jle
mov
aad
add
mov
fidivrs
nop
pushf
add
popf
outsl
pop
in
add
add
push
add
rol
test
stc
mov
gs
add
add
jns
mov
add
enter
xchg
out
add
add
add
lds
add
ret
add
mov
lea
pop
mov
push
push
lea
push
push
call
flds
mov
mov
add
push
scas
add
mov
ljmp
lret
add
ljmp
adc
outsl
imul
mov
push
add
int3
add
add
add
movsl
push
mov
leave
jns
mov
sahf
add
add
mov
lea
pop
add
push
push
push
push
push
push
call
fildl
stos
add
out
pop
add
lret
mov
hlt
movsl
filds
mov
push
mov
out
push
add
addl
lds
add
fldl
cld
jbe
lret
add
add
stos
add
mov
push
add
xchg
rcrl
outsl
push
add
add
mov
lds
aam
add
cld
lea
pop
push
push
push
shr
pop
push
push
push
push
push
push
push
call
cli
adc
stos
pop
out
xchg
xlat
add
xlat
add
fimuls
outsl
into
test
popa
add
roll
add
add
filds
add
xchg
test
add
add
add
add
test
push
add
add
add
movl
add
lea
pop
mov
push
pop
lea
push
ror
inc
xor
pop
sub
push
push
lea
push
push
lea
push
lea
push
call
pop
add
lods
fidivl
add
rcl
add
push
jl
add
into
mov
jae
fst
add
in
add
jb
nop
add
test
add
add
fcmovne
mov
movsb
popf
test
jo
xchg
cmpsb
pop
scas
iret
add
jecxz
mov
lea
pop
mov
shr
push
push
push
push
call
add
add
ljmp
add
add
test
test
add
pop
rolb
push
cmpsl
add
add
fiaddl
add
leave
cli
add
pop
addr16
test
testl
js
test
popa
adc
inc
or
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
cli
add
add
mov
loop
in
add
out
in
pop
fldl
push
cmc
add
jb
pop
mov
add
faddp
cli
shrb
shll
shr
add
out
pop
aad
add
add
push
jb
jl
stos
add
insb
add
jnp
sti
mov
lea
pop
mov
push
push
lea
push
push
call
clc
add
stos
push
push
add
out
push
add
add
push
add
add
jae
shll
jo
add
lret
bound
fstps
add
mov
lea
pop
mov
add
push
push
push
push
push
push
push
lea
push
push
push
call
add
cld
add
add
xchg
pushf
add
in
push
pusha
in
loopne
enter
lret
add
jb
add
xchg
mov
pop
sahf
xchg
arpl
movsl
add
jecxz
add
mov
lea
pop
add
push
xor
rol
lea
pop
mov
push
lea
push
call
iret
rclb
add
add
jne
lcall
jl
xchg
mov
xchg
test
stos
mov
add
cltd
addr16
pushf
add
stc
add
pusha
add
cmpsb
test
add
add
add
add
xchg
jae
add
add
in
jl
sti
add
add
lret
push
lea
pop
mov
push
lea
shl
pop
cmp
jne
push
lea
push
call
ljmp
mov
popl
add
xchg
loope
test
cld
pushf
pop
jae
add
je
add
add
add
mov
fiaddl
fcmovnu
add
out
add
icebp
mov
lea
pop
cmp
jne
push
sub
shl
dec
pop
mov
push
push
push
push
push
push
push
call
into
mov
enter
add
popf
add
pop
add
popa
mov
add
mov
out
add
std
lret
test
add
cli
mov
add
jno
jno
add
jno
mov
lea
pop
movl
push
push
lea
push
push
push
push
push
push
push
call
test
fcompp
fs
stos
jno
mov
sarb
xorb
fiadds
add
clc
cmpsb
add
add
mov
push
sti
aad
pop
add
jmp
pop
lret
mov
lea
pop
jmp
push
lea
push
push
push
push
push
push
push
push
call
add
cli
add
add
mov
in
pushf
ret
fnstsw
jmp
imul
add
add
add
leave
lock
hlt
insb
add
enter
add
add
pop
out
add
add
xchg
xlat
add
add
in
add
add
add
add
add
fisttpll
pop
mov
push
xor
shl
xor
pop
mov
push
push
push
push
push
call
add
add
add
cmc
xchg
movsb
mov
fildl
add
xchg
stos
fs
add
jns
add
mov
into
jl
mov
add
test
lods
popa
add
pop
in
mov
pop
test
cwtl
add
fs
scas
fwait
out
int3
sti
add
jecxz
xchg
testb
jnp
mov
hlt
lea
pop
sub
jne
mov
push
shl
add
pop
movl
push
lea
push
lea
push
push
push
push
call
mov
add
fstps
add
mov
add
out
xlat
lahf
imul
loopne
xchg
add
int3
mov
int
fsubl
idiv
xlat
add
pushf
lods
add
mov
sahf
add
mov
ret
pop
pushf
add
fiaddl
jmp
movb
aam
bound
pop
jmp
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
fs
jecxz
add
mov
jecxz
add
add
add
leave
add
add
clc
negl
add
jl
push
add
push
add
mov
add
sti
xorl
add
jae
scas
add
add
in
add
xchg
clc
add
mov
lea
pop
mov
push
dec
sub
shr
dec
pop
mov
cmp
jne
push
sub
ror
pop
mov
push
lea
push
push
push
push
push
call
roll
fcmovne
je
push
je
out
mov
add
ja
mov
lahf
neg
cwtl
mov
std
test
lret
add
xchg
xchg
push
filds
push
test
hlt
lea
pop
movl
push
push
lea
push
push
call
popf
test
nop
mov
hlt
lods
pop
pop
add
add
jne
add
mov
add
jl
add
add
mov
mov
xchg
cwtl
js
movb
mov
mov
fisttpl
add
stc
jbe
xchg
add
data16
xchg
push
lods
jmp
bound
stos
lahf
add
pop
jmp
push
rol
sub
not
add
pop
mov
push
dec
not
pop
cmpw
jne
push
lea
push
push
lea
push
push
call
add
add
add
fadds
enter
test
mov
add
in
add
jb
add
add
jl
pusha
add
ja
jnp
add
popf
cmpsl
mov
pop
cltd
add
mov
iret
cmpsl
loop
std
add
addr16
mov
movl
push
xor
not
shl
pop
jmp
push
push
push
call
mov
shl
add
add
roll
pop
add
lcall
push
add
cltd
mov
pop
lea
ljmp
call
cmpb
add
cli
jmp
test
add
hlt
add
rol
pushf
pop
add
add
mov
lea
pop
pushl
pop
push
add
pop
mov
push
lea
pop
mov
mov
push
push
inc
shr
push
or
not
add
shr
add
sub
sub
add
pop
sub
xor
pop
push
inc
pop
push
push
sub
lea
pop
call
cmpl
je
push
push
sub
rol
shl
push
and
add
add
sub
add
xor
pop
sub
ror
rol
pop
push
add
dec
pop
push
call
push
push
call
cltd
mov
add
cltd
add
fiaddl
push
add
data16
jns
add
jge
in
add
add
sti
lods
stos
add
pop
xchg
add
add
add
mov
gs
pop
add
add
ret
add
mov
add
push
repnz
add
add
mov
lea
pop
cmpl
je
push
push
not
lea
rol
push
and
add
sub
add
sub
sub
pop
add
pop
push
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
je
rolb
add
add
add
mov
sahf
mov
xchg
add
jnp
gs
int
mov
xchg
leave
add
hlt
mov
lea
pop
push
push
shr
dec
pop
call
cmpl
je
push
push
dec
push
xor
add
not
inc
sub
xor
shr
dec
pop
add
inc
not
sub
pop
push
ror
pop
push
push
shr
not
xor
pop
call
push
pop
cmpl
je
push
push
lea
push
sub
add
shl
sub
ror
add
add
pop
inc
pop
push
push
call
mov
scas
cmpl
add
push
int3
add
push
mov
leave
add
movsb
js
into
into
add
add
stos
scas
add
pop
repnz
mov
fiaddl
mov
add
int3
in
add
push
push
add
add
add
js
jnp
testl
mov
int
leave
add
add
pop
push
push
push
push
push
push
push
push
call
rolb
add
add
hlt
cmpsl
cmpsl
lock
lret
add
les
int3
add
fiadds
fdivrs
out
add
mov
rcrl
add
fstpl
repnz
aam
add
add
les
mov
add
pop
cmpl
je
push
push
sub
sub
lea
add
push
or
inc
add
xor
sub
xor
sub
shr
pop
xor
dec
pop
push
add
ror
pop
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
lods
mov
add
data16
add
lret
cmpsl
pop
add
xchg
popa
add
ja
add
sar
cwtl
loop
scas
add
add
add
push
popf
lods
add
stos
in
mov
pop
call
cmpl
je
push
push
inc
rol
dec
push
or
inc
add
lea
sub
not
pop
dec
pop
push
push
push
push
lea
push
call
cmpsb
add
add
fadd
jmp
mov
add
fcoml
mull
mov
add
add
pop
add
pop
add
add
mov
iret
add
add
add
add
jp
add
xchg
add
push
add
add
add
jge
mov
add
pusha
adc
push
call
push
sub
ror
ror
pop
cmpl
je
push
push
ror
lea
push
or
inc
add
dec
sub
sub
pop
add
lea
not
pop
push
rol
ror
pop
push
push
push
push
lea
push
push
call
mov
push
sarl
add
fcoms
lock
add
fisubl
mov
mov
add
aam
std
add
mov
mov
add
add
cwtl
push
cld
add
add
pop
add
lea
pop
call
push
add
xor
pop
cmpl
je
push
push
xor
push
xor
add
shl
sub
inc
not
rol
pop
xor
shl
pop
push
xor
xor
pop
push
call
push
push
lea
push
call
enter
add
push
sahf
mov
in
add
enter
add
testb
xchg
testb
mov
add
jmp
add
sti
jns
add
add
add
mov
pusha
xchg
popa
fidivrl
popf
pusha
add
jns
imul
mov
fsubrs
or
cmpl
je
push
push
shl
shl
shr
push
sub
add
sub
ror
sub
not
pop
xor
lea
pop
push
xor
sub
add
rol
pop
push
push
add
pop
call
push
push
push
push
push
call
add
mov
sahf
pop
rolb
add
lcall
add
sti
ja
divl
add
mov
movl
jns
in
add
scas
add
add
fildll
push
add
ljmp
mov
scas
add
pop
hlt
add
jns
mov
jmp
add
cli
test
cld
lea
pop
cmpl
je
push
push
sub
shl
push
or
inc
add
shr
sub
xor
rol
lea
pop
sub
pop
push
push
lea
push
push
push
call
xchg
mov
add
add
add
pusha
add
out
add
in
stos
stos
jge
lahf
scas
add
gs
imul
hlt
aad
pop
add
roll
add
add
pop
push
push
sub
pop
call
push
not
xor
ror
sub
pop
cmpl
je
push
push
push
xor
add
ror
shr
sub
ror
add
pop
xor
pop
push
not
inc
add
pop
push
push
push
push
lea
push
push
lea
push
call
movsb
add
mov
cltd
add
add
add
push
add
push
jle
add
mul
add
add
add
add
loopne
and
xchg
addl
jb
add
add
outsl
jl
fisttpl
pop
call
push
lea
push
push
lea
push
push
call
loop
mov
shr
jne
add
add
push
loope
scas
xchg
ljmp
add
add
test
add
add
imul
out
cld
in
pushf
iret
add
add
filds
mov
cmpsb
out
add
aam
roll
cmc
or
jecxz
add
fiaddl
ljmp
data16
cmpl
je
push
push
add
shl
push
sub
add
add
inc
sub
add
sub
pop
inc
pop
push
push
push
push
push
call
add
add
push
add
lea
add
fiaddl
stos
movb
push
add
insb
add
jecxz
jns
add
add
add
add
add
call
add
icebp
stos
jmp
mov
pusha
xchg
push
je
pusha
pop
jp
pop
je
push
add
lea
pop
push
call
push
dec
shr
dec
pop
cmpl
jne
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
sarl
popf
add
jmp
mov
popf
add
jge
add
add
cmpb
add
pop
imul
add
xchg
add
add
icebp
movsb
add
lret
mov
lea
pop
mov
movl
push
sub
ror
add
pop
jmp
xor
push
lea
shl
pop
pop
pop
push
ror
pop
pop
push
push
push
push
push
push
lea
push
push
call
add
push
add
add
out
add
add
xchg
mov
add
xchg
lret
mov
cld
mov
adcb
push
popa
in
out
mov
add
int3
lea
pop
pop
push
push
push
call
add
pop
add
movsl
jle
pusha
add
add
jno
arpl
mov
in
mov
lret
add
lcall
stos
add
pop
leave
push
sub
pop
ret
push
push
call
jbe
jo
cmpsl
add
xlat
sarb
ja
out
add
add
ret
add
out
add
add
aam
add
xlat
hlt
fnstenv
push
add
add
aam
movsb
rcr
xchg
add
imul
jne
pop
jo
mov
lea
pop
push
mov
push
add
dec
add
pop
add
push
push
lea
push
lea
push
push
call
cmpsl
lret
data16
add
add
lahf
pop
lods
lods
add
add
out
xlat
xchg
cli
add
add
frstor
add
loop
insb
rolb
xchg
add
add
add
xchg
mov
add
jno
mov
add
jno
xchg
stos
add
add
in
nop
mov
push
stos
jnp
mov
add
mov
lea
pop
cmpl
jne
push
push
add
push
push
pop
add
sub
sub
not
shr
sub
lea
pop
dec
pop
push
pop
pushl
call
push
not
add
dec
pop
push
push
lea
push
push
push
lea
push
push
push
call
or
xchg
lods
loop
add
jnp
add
jl
add
addr16
add
add
insb
in
faddl
add
add
add
add
add
push
imul
outsl
mov
pop
ja
int
pusha
mov
orl
call
push
sub
sub
pop
jmp
push
xor
sub
pop
cmpl
je
push
lea
push
push
push
push
lea
push
push
push
push
call
clc
sarb
add
add
arpl
repnz
mov
add
cmc
mov
push
mov
rolb
rcrl
add
in
pop
add
add
add
add
fildl
xorl
add
add
fildl
mov
add
add
add
add
add
push
push
xchg
mov
lea
pop
cmpl
jne
push
lea
push
push
call
jnp
jge
roll
int3
add
imul
xchg
sti
bound
add
mov
mov
push
add
stos
add
cwtl
add
add
add
jmp
or
leave
push
push
push
push
push
push
lea
push
call
add
rclb
les
fld
mov
out
add
add
add
add
xchg
fcomp
imul
mov
add
add
add
pop
add
add
stc
mov
lea
pop
add
push
ror
rol
xor
pop
pop
pop
push
push
push
push
push
call
test
idiv
mov
xlat
add
insb
add
add
lcall
rolb
mov
mov
stos
add
jbe
mov
jmp
out
jmp
add
lret
shl
in
clc
mov
lea
pop
pop
pop
push
push
push
push
call
add
add
mov
add
jp
add
fnsave
int
loopne
imul
lret
cli
jno
add
lods
lcall
movsb
xchg
scas
cmpsl
faddl
idiv
mov
cmpsl
jo
add
sahf
add
fsub
add
add
cwtl
loopne
mov
mov
movsb
add
jnp
add
add
add
push
lods
enter
scas
pushf
add
rorb
pop
leave
add
push
push
lea
push
push
push
push
push
call
add
add
xchg
xchg
aad
add
jmp
mov
add
add
pusha
add
add
add
arpl
add
add
add
popa
sbb
ret
push
push
push
push
push
push
lea
push
push
call
jmp
xchg
add
push
fwait
clc
out
sahf
addr16
add
mov
hlt
flds
fcompl
add
popl
fists
push
jmp
add
in
mov
add
add
cwtl
mov
add
add
add
subl
add
pop
mov
shll
xchg
mov
lea
pop
jmp
push
xor
pop
cmpl
jne
push
push
shr
push
sub
add
not
sub
add
sub
inc
sub
pop
sub
pop
push
push
push
push
lea
push
push
push
push
call
mov
mov
mov
loop
add
mov
add
lahf
out
lret
out
add
imull
add
incb
add
stos
fs
jns
add
xchg
mov
mov
xlat
leave
add
sarl
std
add
adcb
addr16
jne
add
add
add
insb
add
pop
pushl
call
push
shl
inc
pop
push
push
push
lea
push
push
call
addl
pop
popa
movl
add
add
clc
stc
add
add
mov
shr
mov
movsb
add
jp
gs
add
add
mov
add
fildl
add
fldl
add
cltd
mov
add
xchg
add
add
pusha
adc
rclb
in
push
push
lea
push
call
add
add
add
add
xlat
add
add
mov
add
add
jnp
les
add
cmpsb
mov
add
add
xchg
fdivl
jae
add
pop
test
addl
add
add
add
mov
test
add
pop
jmp
cmpl
jne
push
push
push
push
push
push
push
call
test
bound
mov
test
xchg
scas
ljmp
out
xlat
add
ja
lock
outsl
add
xchg
cmpsl
stc
add
int
ret
mov
bound
add
mov
lea
pop
mov
push
sub
inc
not
pop
mov
push
rol
add
pop
push
push
push
not
not
dec
push
or
inc
add
inc
lea
rol
sub
dec
xor
sub
pop
add
shl
add
not
pop
push
shl
inc
shr
pop
pushl
call
push
add
pop
push
call
push
push
add
push
sub
add
sub
rol
pop
inc
pop
push
lea
push
call
sti
jle
push
xlat
mov
add
add
add
cli
add
add
xchg
sarb
imul
add
imul
mov
incb
mov
mov
lea
pop
pushl
call
push
sub
pop
call
push
push
dec
xor
push
or
not
add
shl
sub
shl
add
pop
add
xor
shr
pop
push
inc
xor
pop
pushl
push
push
lea
push
push
call
mov
test
add
mov
add
sti
add
cltd
cmc
in
out
add
add
add
mov
je
add
xchg
repnz
in
add
lea
pop
call
call
push
shr
shr
lea
pop
lea
push
push
add
rol
push
xor
add
xor
sub
pop
add
inc
pop
push
not
not
shl
pop
pushl
call
push
add
sub
pop
push
push
push
push
push
push
push
push
push
push
call
pop
xchg
add
add
add
cld
add
jb
mov
add
add
add
jb
jae
jle
jnp
jl
mov
popf
add
add
mov
rcrl
lea
pop
call
push
push
inc
shr
push
and
add
sub
inc
sub
lea
pop
inc
pop
push
push
push
push
push
push
push
push
call
out
push
popf
shr
add
fiadds
push
add
leave
mov
add
add
add
rolb
mov
add
into
stos
add
into
add
loop
add
icebp
mov
jp
add
fcmovb
fxtract
add
in
add
fldl
add
fildl
add
mov
stos
add
add
popf
add
mov
addr16
xchg
add
pop
pushl
push
push
push
push
lea
push
push
push
push
push
call
mov
add
add
test
clc
arpl
add
stos
mov
scas
mov
add
add
add
sahf
testl
mov
add
add
add
cli
leave
lea
push
add
subb
mov
lea
pop
call
call
push
inc
sub
shl
pop
mov
push
push
sub
push
sub
add
add
sub
sub
xor
lea
pop
ror
not
add
pop
push
push
lea
push
call
add
add
out
imul
shl
call
enter
push
rol
mov
data16
add
rolb
push
push
add
mov
jno
cltd
icebp
add
subb
or
pushl
push
ror
shr
pop
call
push
push
push
push
push
push
lea
push
push
call
out
add
lds
cld
fs
xchg
cwtl
add
push
lret
add
stc
lea
add
add
ljmp
jae
add
add
xchg
jle
add
add
pop
push
call
push
push
shr
push
push
pop
add
rol
sub
not
rol
pop
add
shl
not
pop
push
push
push
push
push
push
lea
push
push
push
push
call
fdivrs
hlt
js
lret
cmpsl
add
add
pop
xchg
in
xchg
mov
add
mov
int
mov
xchg
repnz
ja
add
cltd
cld
mov
sti
cmpsl
popa
add
fsub
fadds
lods
cmc
mov
add
leave
mov
test
fcomp
mov
lea
pop
pushl
push
not
dec
inc
pop
call
push
push
rol
pop
pushl
call
push
push
shl
push
xor
add
not
shl
lea
xor
sub
xor
pop
sub
shr
pop
push
sub
shr
pop
pushl
push
push
push
push
push
push
push
push
lea
push
call
add
jle
add
add
jle
jae
add
add
mov
add
in
add
popf
add
sahf
js
cli
mov
les
insb
and
add
jecxz
add
and
add
shr
rol
add
sub
add
pop
add
pop
push
push
add
not
ror
push
xor
add
sub
add
rol
shl
not
pop
dec
sub
pop
push
lea
push
push
push
push
push
call
arpl
in
in
fcoml
xchg
add
jl
add
add
mov
mov
pop
add
mov
int
push
movl
push
add
pop
stos
xchg
add
jno
add
add
add
aam
lds
bound
fidivl
cltd
test
mov
lea
pop
call
push
lea
push
push
push
push
lea
push
call
filds
jmp
add
add
in
mov
add
stos
lods
push
add
mov
add
out
pusha
add
cmc
fcmove
cmpsl
loopne
jo
xchg
out
add
jmp
sti
add
xchg
cld
push
lahf
jns
mov
mov
add
add
add
jb
cmpsb
mov
out
movb
movsl
mov
lea
pop
pop
push
lea
ror
not
pop
dec
jne
push
lea
push
push
push
push
push
push
lea
push
call
repnz
add
add
add
add
lock
mov
iret
add
pop
imul
imul
rcl
into
add
add
xchg
add
add
add
subl
insb
in
xor
add
jnp
cmc
out
iret
int
add
add
add
loopne
int
flds
popa
mov
and
jno
add
push
push
push
call
add
lods
add
roll
sti
add
mov
mov
insb
add
add
scas
add
jecxz
add
scas
cltd
add
into
add
std
cltd
add
add
incb
jp
bnd
cmpsb
sahf
add
aam
aad
test
add
add
loope
mov
jle
loope
add
loope
mov
lea
pop
jmp
push
push
push
push
call
add
data16
add
arpl
icebp
loopne
add
add
pop
add
add
jb
add
mov
sahf
jp
add
add
icebp
je
xchg
std
iret
test
data16
pop
add
mov
xchg
in
mov
lea
pop
call
push
push
rol
dec
push
push
pop
add
lea
lea
sub
sub
pop
shl
rol
shr
sub
pop
push
push
push
push
push
call
pop
jmp
stos
mov
les
add
js
ljmp
add
hlt
popa
test
fiaddl
insb
add
xchg
mov
fwait
add
cli
add
xchg
jp
test
jno
add
pop
pushl
push
shl
add
dec
pop
call
push
push
push
lea
push
push
call
add
mov
add
scas
mov
pop
cmpsl
out
les
add
data16
add
add
add
mov
addl
bound
lods
add
fs
iret
add
jp
fcmove
add
imul
test
push
xchg
cmpsb
std
xchg
push
stc
shl
mov
add
pop
push
push
push
push
call
test
jmp
in
cmpsb
add
lret
int3
xchg
add
add
add
xchg
add
add
icebp
cmpsb
cmpl
jno
pop
add
add
aam
cmpsb
add
xlat
add
insb
add
add
add
leave
scas
jbe
add
insb
cld
pop
ljmp
pop
add
add
add
add
pop
jnp
hlt
lea
pop
call
push
push
push
push
call
out
test
in
add
add
push
add
movsb
lock
add
jno
jp
fistps
add
push
mov
loop
cmc
add
jns
add
test
jns
neg
fnstenv
xchg
clc
add
mov
push
cli
addr16
popfw
add
add
test
mov
add
lea
pop
mov
push
add
sub
inc
pop
lea
push
push
shr
sub
rol
shl
push
xor
add
not
not
sub
sub
sub
inc
shr
sub
pop
dec
xor
xor
pop
push
add
inc
add
pop
pushl
call
push
rol
lea
shr
pop
push
push
lea
push
push
push
push
push
push
push
push
call
pop
add
jp
std
mov
jno
add
js
add
lds
xchg
add
add
movsb
test
pusha
scas
outsl
lcall
push
mov
jecxz
mov
lea
pop
call
push
push
shr
push
or
not
add
inc
add
sub
pop
sub
dec
not
shl
pop
push
shl
pop
pushl
call
push
lea
push
lea
push
push
push
push
call
sahf
fiaddl
add
add
lds
add
mov
push
lods
push
mov
jae
mov
add
jecxz
add
add
cli
add
xchg
add
fcomi
lea
stos
add
sar
cmpsl
mov
lea
pop
call
push
push
push
lea
push
lea
push
push
push
push
call
push
add
rcll
mov
add
push
stos
push
xlat
add
add
rolb
jge
mov
add
js
xchg
fsubrp
fwait
add
add
movsb
mov
lods
add
cltd
add
rolb
lds
in
add
mov
les
inc
cld
lea
push
push
xor
not
xor
shl
push
push
pop
add
lea
xor
ror
lea
sub
lea
pop
rol
pop
push
add
lea
shr
rol
pop
pushl
push
lea
push
lea
push
push
push
push
push
call
popa
mov
add
mov
mov
in
lea
push
add
stos
add
add
add
aam
add
scas
add
add
xlat
mov
sti
lods
xchg
stos
out
add
faddl
add
add
add
ljmp
pop
add
les
xchg
add
into
fidivl
movsb
out
iret
mov
push
shr
jns
lock
leave
mov
xchg
pop
call
push
rol
shr
sub
sub
pop
lea
push
push
lea
push
push
call
add
add
test
stc
mov
push
add
mov
add
fiaddl
ret
cmpsb
std
add
add
add
mov
into
mov
shlb
stc
stos
add
pop
mov
lea
pop
push
push
push
add
shl
add
pop
push
push
push
lea
push
push
call
fdivr
pop
lods
add
mov
add
mov
addl
add
add
out
jb
add
add
add
add
leave
test
pop
pushl
push
push
rol
push
xor
add
inc
inc
sub
ror
pop
add
pop
push
push
push
push
push
push
call
add
fistps
cltd
cli
add
add
data16
je
out
xchg
and
test
cmpsb
add
jbe
cmc
lahf
mov
add
std
add
iret
std
stc
push
add
jo
arpl
out
add
add
add
stc
jbe
add
jne
mov
scas
mov
add
mov
lea
pop
push
call
push
push
not
not
push
and
add
rol
dec
sub
shl
pop
lea
pop
push
lea
push
push
push
push
call
add
add
jbe
pop
xchg
movsl
pushf
mov
arpl
loopne
in
mov
jo
sahf
int
call
pop
rcl
add
mov
insb
shlb
out
repnz
popf
bound
add
loop
test
mov
add
xchg
mov
lea
pop
pushl
push
push
call
xchg
add
add
add
cwtl
add
mov
mov
add
popf
out
add
ror
add
add
scas
mov
out
int
fisttpll
lret
add
add
add
lahf
enter
lea
fsts
int3
lea
pop
call
push
shr
add
pop
push
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
mov
xchg
mov
add
int3
mov
pop
imul
jmp
lods
add
mov
mov
push
add
ljmp
addb
enter
icebp
xchg
push
nop
push
mov
pop
lock
hlt
scas
add
add
out
xchg
js
in
scas
mov
lea
pop
call
push
push
xor
ror
push
push
pop
add
ror
lea
rol
sub
dec
inc
pop
pop
push
pop
pushl
push
rol
sub
pop
call
push
sub
not
pop
call
jmp
push
push
push
push
push
lea
push
push
call
mov
popa
test
addl
loope
enter
cltd
roll
cli
pop
add
mov
xchg
mov
stos
add
add
add
mov
popf
push
stc
add
cli
add
int3
add
nop
add
mov
add
out
add
fdivp
fsubp
add
mov
pop
add
add
je
mov
lea
pop
pushl
mov
push
add
lea
pop
jmp
push
push
sub
inc
push
and
add
inc
sub
inc
lea
pop
add
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
push
lock
jge
add
arpl
out
in
test
push
add
rolb
add
add
mov
in
add
push
add
loopne
add
clc
add
test
into
cmc
cwtl
out
mov
lea
pop
pushl
push
shl
shl
not
pop
call
push
push
push
push
push
call
pop
jl
add
add
add
testb
aad
negl
hlt
shl
rcr
add
mov
add
lret
add
add
mov
int3
add
shl
mov
lea
pop
call
push
push
add
not
rol
lea
push
push
pop
add
sub
dec
pop
sub
dec
lea
pop
push
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
call
imul
cmpsb
add
add
push
je
add
stos
repnz
rcrl
mov
mov
cld
lret
mov
push
add
add
in
lahf
add
int3
mov
add
jl
add
xchg
add
movsl
lret
add
add
mov
pop
pushl
call
push
dec
inc
xor
pop
push
push
add
rol
xor
pop
call
leave
push
push
push
call
add
addl
arpl
fldl
add
mov
add
mov
andl
add
pop
add
addl
loop
add
xchg
fst
cmpsl
add
fnstsw
mov
lea
pop
add
push
push
lea
push
lea
push
push
push
call
add
mov
mov
mov
std
push
push
add
movsl
add
mov
pop
push
repnz
mov
rcr
bound
add
add
iret
add
pop
xchg
add
shlb
add
xlat
add
fsubs
push
cmpsl
mov
lea
pop
pop
push
dec
add
shl
pop
pop
push
shr
add
pop
pop
pop
push
lea
pop
leave
push
push
lea
push
push
push
call
call
roll
loopne
add
int3
push
gs
add
add
add
add
pop
hlt
movsl
xchg
add
add
jbe
add
js
push
add
add
add
js
fistpll
adc
add
push
add
xor
shr
pop
ret
push
sub
ror
xor
pop
leave
push
push
push
push
push
call
jl
xchg
les
fiadds
sahf
pop
roll
add
jo
out
leave
add
add
add
add
add
test
in
push
add
fs
add
jo
pushf
add
pop
add
add
roll
jbe
fmull
or
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
jb
add
int3
cmpsl
movsl
adcb
add
movsl
test
ljmp
add
imul
jmp
mov
loop
add
add
add
not
add
lcall
add
add
add
pop
mov
push
push
lea
push
push
push
push
call
cmpsb
stos
insb
fwait
add
xorb
mov
lods
outsl
add
add
add
mov
imulb
add
fs
push
data16
add
xchg
add
add
add
xchg
add
add
test
cmc
add
push
mov
lea
pop
cmpl
jne
mov
push
ror
pop
jmp
push
push
push
lea
push
push
push
push
push
push
push
call
shll
mov
outsl
pop
add
leave
cmpsl
add
fildl
xchg
rclb
stos
jbe
mov
loop
icebp
mov
mov
cwtl
jno
add
fiadds
jae
add
add
add
in
mov
add
clc
add
jo
fnstsw
lea
pop
mov
push
push
push
lea
push
call
add
pop
add
in
push
add
push
mov
aam
add
cli
addr16
mov
push
test
scas
cli
mov
add
roll
popf
push
add
add
fbld
add
js
jne
scas
lock
add
add
add
add
add
rolb
clc
add
add
sti
add
cmpsl
leave
add
mov
lea
pop
and
push
lea
pop
xor
push
add
shl
pop
xor
add
push
push
push
call
mov
add
fidivl
pushf
testb
flds
xchg
int3
flds
js
add
jns
scas
xchg
jno
add
jo
add
add
add
lods
clc
mov
add
lret
mov
into
add
call
add
add
add
in
out
loopne
std
int
lods
out
add
orl
xor
push
lea
inc
xor
pop
dec
push
lea
ror
xor
pop
sub
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
aam
faddl
fldl
ja
sti
add
pop
add
lret
test
add
lahf
add
push
jle
add
jb
mov
clc
mov
push
stos
add
stc
cmpsl
test
mov
lea
pop
jmp
sub
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
xchg
mov
sahf
add
add
add
pop
loopne
in
in
add
add
fdivr
xchg
iret
mov
mov
testl
rolb
into
add
xchg
icebp
xchg
add
xchg
mov
lea
pop
pushl
push
push
push
push
push
call
add
add
lahf
xchg
add
lods
push
add
jl
outsl
addl
add
add
cli
aam
int
add
pushf
add
mov
add
add
cmc
add
push
add
std
add
jp
add
les
push
add
add
pop
add
cltd
lret
cltd
add
mov
lea
pop
pop
push
push
push
lea
push
push
push
push
push
push
call
cwtl
add
pop
add
add
mov
add
add
sarb
xchg
add
add
add
add
ljmp
clc
nop
add
pop
cmpsb
test
jae
lds
testl
leave
mov
add
add
add
add
popa
lods
pop
add
add
add
mov
lea
pop
sub
push
push
push
push
push
push
push
call
add
add
mov
sahf
add
call
ret
add
mov
clc
lea
fldl
add
add
out
call
add
add
add
add
arpl
cmp
jne
mov
push
lea
push
push
push
push
call
add
xchg
addb
insb
add
add
add
nop
add
loopne
addr16
in
add
movsl
mov
push
stc
add
cmpsb
pop
add
add
mov
add
imul
add
add
add
jbe
movsb
int
mov
jno
mov
roll
jno
add
add
js
xchg
pushf
push
bound
lea
push
xor
pop
sub
push
xor
pop
mov
push
push
push
push
push
push
push
call
lods
add
pop
ret
mov
loop
xchg
insb
mov
add
faddl
mov
rclb
add
add
add
add
rcrb
add
stos
fcmovnu
add
mov
pop
jbe
jmp
lea
pop
shr
add
push
push
push
push
lea
push
lea
push
push
push
call
add
add
add
loop
lcall
les
add
test
add
js
mov
call
ljmp
mov
cltd
ficompl
add
add
jae
out
test
scas
add
stos
jbe
int
add
popf
int
jge
jb
jno
mov
lea
pop
sub
push
shr
sub
shl
lea
pop
pushl
push
push
lea
push
call
jge
mov
jns
xchg
mov
push
add
lock
pop
pop
add
lds
add
jp
xchg
gs
add
add
lods
mov
rolb
add
repnz
int3
add
mov
lea
pop
pop
push
push
push
push
lea
push
call
add
add
mov
jmp
xchg
fistpll
aam
jnp
add
xchg
mov
mov
pop
clc
add
mov
add
add
add
add
add
in
jnp
add
mov
lea
pop
shr
push
shr
shl
pop
and
push
rol
shr
pop
sub
push
add
not
rol
pop
cmp
jne
leave
push
push
push
lea
push
push
push
push
push
push
push
call
add
add
int
jp
add
mov
pop
pop
add
fmuls
js
add
add
incb
xchg
add
fs
add
cld
jbe
add
mov
add
ja
add
icebp
add
popa
sub
add
push
add
add
pop
push
mov
push
rol
inc
pop
add
push
push
push
push
lea
push
lea
push
push
push
push
call
add
loope
mov
add
pop
mov
add
add
aad
add
xchg
popf
hlt
int3
lahf
out
mov
add
out
cmpsb
add
enter
lret
rcrb
in
imul
add
mov
lea
pop
push
push
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
test
cli
add
add
sahf
out
std
cmc
add
loop
jne
mov
mov
add
add
add
flds
aam
mov
add
add
test
and
push
lea
push
push
push
call
fidivrs
fs
pop
test
mov
imul
hlt
int3
add
add
jno
add
mov
mov
popa
add
add
int
add
add
testl
add
add
add
repnz
jl
add
cwtl
scas
xchg
aam
jne
add
arpl
pop
push
push
inc
pop
mov
push
pop
lea
sub
push
lea
push
call
scas
lea
xchg
fwait
add
cmpsb
push
add
cmpsb
add
jns
rolb
leave
test
add
add
jge
lcall
scas
shlb
xchg
add
add
add
fwait
add
xlat
mov
leave
xchg
add
pop
mov
push
xor
pop
shr
push
push
lea
push
lea
push
call
add
into
aam
cld
add
add
add
aam
add
pushf
add
jbe
jecxz
add
add
xchg
add
jns
add
ret
mov
scas
insb
add
push
add
add
xchg
pusha
ja
addb
mov
mov
test
cltd
mov
lea
pop
add
mov
push
add
shr
pop
add
push
pop
mov
add
push
xor
add
sub
pop
xor
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
mov
pop
in
mov
xchg
add
add
push
stos
add
add
jmp
add
mov
enter
mov
mov
xchg
mov
xchg
add
add
add
add
lea
pop
mov
push
push
push
push
call
add
pop
shl
push
mov
sar
out
xchg
nop
in
shll
jmp
pop
ja
jle
add
mov
int
mov
add
fwait
mov
int
add
add
add
jp
data16
xchg
add
lret
add
add
adc
loopne
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
fldl
nop
int
add
test
int3
mov
add
sahf
mov
add
add
addr16
int
add
mov
aad
add
add
sti
add
add
in
ja
add
add
mov
mov
clc
jmp
add
add
add
add
pusha
add
add
mov
lea
pop
rol
push
shl
inc
pop
rol
xor
push
lea
push
push
push
lea
push
push
push
call
ljmp
push
lods
add
add
mov
pusha
mov
add
int3
add
pop
add
lret
pop
xchg
add
cmpsl
stc
out
fadds
add
add
add
icebp
add
add
jae
add
mov
add
stos
mov
lea
pop
inc
push
dec
xor
pop
cmpb
jne
push
push
push
push
push
call
jl
mov
jns
add
mov
shrl
scas
add
bound
test
rolb
std
add
mov
test
mov
add
ljmp
pop
add
add
add
add
fptan
add
lock
add
in
xorl
xchg
lea
pop
add
cmp
je
push
xor
pop
add
push
xor
not
add
pop
cmpl
jne
xor
push
add
sub
sub
pop
pop
push
push
push
push
push
push
push
call
add
pushf
add
mov
mov
movsl
add
xchg
add
out
mov
enter
add
lock
js
mov
loop
ror
add
push
add
add
cmp
cld
add
enter
inc
mov
mov
popa
add
lea
pop
pop
pop
push
push
push
lea
push
push
push
push
call
out
jbe
mov
lods
jno
je
add
jl
mov
mov
push
xchg
andl
cmc
mov
stos
add
rolb
xchg
fistpl
jp
aam
push
mov
mov
js
repnz
flds
add
add
out
lret
push
loopne
add
pop
add
add
popa
add
mov
enter
mov
imul
pop
pop
pop
push
sub
sub
pop
leave
push
push
call
lds
in
push
jle
add
add
jl
add
add
add
add
add
orl
add
add
mov
imul
mov
add
push
cmp
lea
pop
ret
push
ror
sub
rol
pop
mov
add
push
ror
inc
lea
shr
pop
push
push
rol
rol
pop
push
push
not
not
shr
pop
add
push
push
lea
push
push
push
push
push
push
push
call
test
incb
aad
add
call
in
add
mov
cmc
push
add
in
bound
jl
mov
rcrl
add
xchg
add
mov
add
cmc
pop
mov
add
mov
lea
pop
xor
push
inc
ror
pop
add
testw
push
ror
add
pop
pop
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
bound
js
mov
aam
add
sahf
add
add
mov
popf
iret
xchg
mov
xchg
jl
add
in
add
add
add
add
lea
pop
pop
mov
push
push
lea
push
push
push
push
call
loop
add
pop
cmc
lret
cmpsb
lods
jp
lcall
cmpsl
add
mov
add
ret
mov
rclb
lock
xchg
mov
popf
add
jmp
mov
nop
add
add
mov
in
mov
in
add
add
imul
pop
mov
lea
pop
push
call
push
add
pop
xor
pop
push
rol
dec
pop
pop
push
inc
add
xor
pop
pop
push
pop
pop
pop
push
push
push
lea
push
push
call
add
cltd
xchg
xchg
popa
mov
add
pushf
pushf
add
test
xchg
add
add
cli
popa
popf
add
add
mov
mov
mov
add
stc
add
push
add
cld
lea
pop
leave
ret
push
push
push
push
push
lea
push
lea
push
call
shll
push
jge
add
ret
pushf
add
aad
push
movsb
jl
xchg
repnz
cltd
repnz
mov
popf
mov
leave
fwait
jge
mov
mov
add
add
jmp
out
mov
scas
add
fwait
add
rcrb
add
mov
mov
jmp
jecxz
add
lods
cltd
add
add
arpl
push
push
dec
sub
pop
mov
push
sub
pop
add
push
lea
push
push
push
push
push
call
lret
add
fcoms
push
xchg
add
add
aam
jmp
cmc
mov
jo
mov
add
mov
add
add
lret
data16
sti
add
popa
out
out
scas
add
add
mov
enter
cld
cmc
add
pushf
into
sahf
mov
xchg
add
int
scas
out
jl
add
jnp
lds
mov
lea
pop
push
push
push
lea
sub
pop
push
push
push
add
shr
pop
mov
push
xor
ror
lea
pop
push
push
lea
push
call
repnz
add
add
fimull
sarl
add
gs
add
add
add
add
mov
imul
imul
imulb
add
mov
add
sahf
add
jnp
add
aad
adc
clc
out
fwait
add
div
repnz
mov
add
cmpsl
add
add
mov
lea
pop
pop
push
sub
pop
lea
push
push
push
push
push
push
push
call
add
int3
ret
pop
add
mov
add
aam
add
xchg
loopne
les
jb
cmc
fiaddl
out
mov
test
xchg
leave
mov
jb
popf
add
mov
lcall
mov
add
lret
add
add
into
mov
add
mov
pop
push
add
sahf
add
loop
mov
jbe
add
je
add
addr16
mov
lea
pop
sub
push
push
lea
push
call
aam
mov
add
test
xchg
jns
add
add
add
pushf
add
je
addr16
nop
imul
add
xchg
imul
stc
xchg
out
int
lea
add
mov
mov
lock
add
add
fldl
pop
movsb
mov
lea
pop
mov
push
push
push
call
add
mov
roll
add
je
arpl
hlt
xchg
mov
stc
xchg
int
push
bound
xchg
add
add
nop
mov
add
add
popa
mov
int3
shrl
push
mov
add
andl
add
push
pusha
add
add
out
cmpsl
add
add
add
lods
add
cli
testb
pop
clc
rolb
imul
push
shl
rol
shl
pop
add
push
push
push
push
push
push
push
push
call
add
ljmp
roll
add
add
in
push
add
jns
lret
mov
jl
je
mov
scas
jl
pop
mov
add
mov
mov
xchg
add
push
mov
mov
lea
pop
mov
push
sub
dec
pop
add
push
push
lea
push
push
push
push
lea
push
push
call
lds
shl
add
jmp
data16
sahf
add
hlt
add
out
cmpsl
add
test
push
add
mov
int
aam
fldl
mov
add
jmp
stc
add
add
fiadds
out
add
add
scas
mov
lea
pop
pushl
push
push
push
push
push
push
call
add
into
jae
push
xchg
cmc
jb
add
xchg
lods
shlb
pusha
pusha
add
add
add
insb
jae
add
jp
add
mov
mov
popa
fwait
add
movsb
add
add
rolb
add
mov
pop
lret
jge
add
push
int3
add
add
ljmp
xchg
testl
lea
hlt
lea
pop
popl
mov
push
lea
sub
pop
add
push
shl
pop
xor
lea
push
inc
dec
pop
mov
add
push
lea
push
push
push
push
push
push
push
call
add
mov
pop
enter
stos
add
data16
movsb
iret
jb
fiaddl
push
add
add
popl
out
add
loop
pop
aam
fwait
mov
add
add
mov
mov
in
loopne
add
add
loopne
add
outsl
add
add
add
fisttpll
pop
xor
push
sub
ror
pop
rol
nop
push
lea
push
lea
push
push
push
call
add
imul
add
mulb
mov
add
pop
add
add
movl
lds
out
popa
jno
add
add
mov
mov
mov
lea
pop
nop
push
lea
dec
xor
pop
xor
push
inc
dec
dec
pop
nop
nop
push
rol
pop
inc
push
push
push
call
add
push
add
lret
add
fwait
popa
imul
pop
lret
add
cld
test
int
mov
fiadds
mov
add
mov
jl
andl
jne
loopne
test
add
pop
nop
push
ror
rol
pop
nop
push
lea
add
dec
pop
cmpb
jne
push
pop
add
push
sub
rol
dec
add
pop
nop
nop
push
shr
pop
cmp
je
nop
push
push
call
jns
loope
pop
add
add
rcrb
add
mov
mov
mov
mov
add
out
add
fs
push
out
jl
insb
repnz
add
fadds
mov
add
mov
mov
push
push
mov
push
in
add
mov
xchg
add
aam
mov
xchg
mov
add
mov
pop
nop
inc
push
push
push
push
push
lea
push
lea
push
push
call
mov
push
pop
lret
clc
add
arpl
movsb
add
jle
leave
add
out
iret
lds
stos
add
rcr
les
add
mov
rolb
bound
add
mov
xlat
add
add
add
add
add
out
les
mov
add
addl
and
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
fidivs
loop
add
add
add
add
mov
stos
test
les
data16
add
add
sar
and
je
add
stos
add
add
add
add
hlt
lea
pop
nop
push
push
lea
push
push
push
push
lea
push
push
push
call
subb
push
mov
push
add
add
add
jns
pop
xchg
in
mov
add
add
cli
pop
jnp
cmpsl
push
xchg
xchg
lock
add
jge
popf
add
ja
mov
add
push
orl
jno
icebp
mov
imul
jb
push
ror
add
inc
not
pop
xor
push
inc
shl
sub
pop
jmp
mov
push
push
push
push
push
push
push
call
add
mov
jae
add
add
sbbl
pushf
push
shrb
aad
stos
lods
add
add
jge
fcmovne
add
sti
mov
add
mov
gs
add
add
add
add
pop
add
movzwl
push
not
sub
inc
ror
pop
mov
push
push
push
push
call
add
add
fldl
mov
popf
add
add
add
add
lods
add
xchg
add
mov
add
add
mov
int
mov
add
xchg
repnz
add
popa
std
mov
clc
add
pop
add
add
out
movsb
xchg
popa
sahf
pop
add
js
add
add
add
cld
lea
pop
add
push
add
shr
add
pop
mov
push
push
lea
push
push
push
push
lea
push
call
lock
pop
jge
fiadds
roll
add
cld
xchg
mov
fistpl
add
mov
add
repnz
add
iret
insb
popa
add
add
push
add
mov
gs
add
add
cwtl
add
add
outsl
add
push
add
xchg
xchg
push
mov
push
popa
add
add
into
add
lods
pop
add
jp
xchg
add
mov
lea
pop
xor
push
ror
pop
xor
push
lea
push
push
push
push
push
push
push
push
push
call
outsl
incb
stc
add
pop
add
add
mov
jmp
add
loopne
add
add
lret
add
fst
add
add
fstpt
faddl
add
mov
hlt
sti
out
add
out
loopne
mov
sub
loope
xor
push
push
push
push
call
mov
add
add
int3
add
add
add
add
pop
add
pushf
fsubp
mov
loopne
xchg
add
ja
rolb
call
pop
jl
add
lea
hlt
lea
pop
shl
xor
push
add
pop
shl
push
push
call
pop
add
add
pop
add
out
add
lods
aam
mov
add
xlat
add
imul
sti
push
add
pop
stc
test
add
lea
cmc
add
xchg
add
xchg
hlt
push
add
out
mov
cmc
add
add
test
call
mov
mov
add
add
mov
lea
pop
xor
mov
push
lea
push
push
call
pop
mov
add
mov
add
add
add
lret
add
imul
jae
pop
in
mov
mov
add
mov
add
out
jnp
fwait
add
leave
add
fiadds
pop
add
add
testl
test
add
addb
addb
add
movsb
imul
data16
add
push
push
lea
push
push
call
mov
mov
js
hlt
jb
into
add
mov
mov
scas
add
add
add
out
add
add
add
push
add
rolb
add
xchg
add
mov
rorl
pop
pop
push
rol
add
pop
pop
pop
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
mov
enter
mov
insb
in
je
add
add
imul
ret
add
data16
shl
add
mov
popf
loope
add
ret
mov
add
icebp
add
jmp
add
add
add
add
roll
les
aam
bound
pop
pop
leave
push
push
push
push
lea
push
push
call
jbe
add
testl
cmpsb
add
add
add
xchg
add
fbld
into
add
arpl
data16
mov
add
pop
jne
push
add
add
jmp
lahf
clc
stos
jno
jns
arpl
je
fldl
mov
lea
pop
ret
push
push
ror
shr
pop
mov
push
push
push
push
push
push
call
lock
add
add
add
sahf
stos
fwait
add
add
add
cltd
jno
add
add
add
push
mov
addl
insb
add
add
ja
aam
bound
push
push
push
lea
push
lea
push
push
push
call
add
add
push
lock
pop
stos
mov
ja
scas
pop
add
add
repnz
pop
testb
add
add
les
add
pop
movl
xlat
add
xchg
add
push
jmp
mov
jl
push
pop
jb
data16
out
jo
les
lods
jmp
lret
test
add
int3
lea
pop
push
push
push
lea
push
push
push
call
popa
add
add
add
pop
add
repnz
fcomip
lods
mov
lods
add
xlat
movsb
add
test
out
in
loop
add
add
outsl
addb
jge
push
sbb
mov
aam
add
mov
add
rcll
add
hlt
lea
pop
push
push
push
push
push
lea
push
push
lea
push
call
add
push
in
mov
je
mov
add
icebp
add
add
add
jbe
add
add
jns
flds
movl
xchg
xchg
mov
repnz
addb
gs
mov
push
jl
add
hlt
hlt
add
add
add
mov
add
mov
lea
pop
mov
push
push
push
push
push
lea
push
push
call
popa
add
add
shll
fidivrs
je
mov
xchg
cwtl
add
test
popa
in
mov
jo
cld
jge
mov
jae
pop
iret
jp
add
cmpb
add
push
push
movl
jbe
gs
sarb
ret
add
lock
leave
add
imul
push
movsl
aam
scas
add
sbb
mov
push
lea
dec
pop
mov
push
lea
push
push
push
push
push
push
push
call
push
push
out
insb
add
mov
add
mov
in
mov
add
jnp
xchg
add
icebp
icebp
popf
jl
frstor
add
mov
add
scas
roll
les
add
push
rol
mov
jle
fldenv
insb
add
mov
popa
and
rorb
test
or
add
sbb
mov
push
lea
push
push
call
ljmp
jle
add
add
add
mov
push
js
xchg
add
add
rcr
sti
add
push
add
mov
imul
add
xchg
mov
add
add
add
push
add
lahf
mov
add
pop
test
je
mov
push
shl
shl
pop
mov
mov
push
xor
add
add
pop
inc
cmp
je
push
push
push
lea
push
lea
push
push
push
call
mov
in
scas
out
add
mov
add
mov
add
mov
add
fs
add
clc
in
push
add
add
les
add
imulb
arpl
test
je
mov
push
lea
push
call
add
mov
lahf
js
add
add
out
scas
movl
add
add
movsl
iret
fildl
add
add
add
mov
add
add
xchg
int
add
fidivs
push
shlb
repnz
add
out
pop
imul
xchg
movsb
add
jl
int
fmull
cmp
je
push
inc
pop
test
jne
push
push
call
movb
add
add
js
jmp
mov
add
push
add
icebp
jge
mov
repnz
leave
mov
loop
add
add
add
pop
add
popf
push
pop
jle
add
insb
mov
lea
pop
xor
push
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
aam
fs
add
fwait
add
imul
add
add
add
push
movsl
lret
pop
loope
add
fidivrs
fadds
add
lods
push
add
bound
mov
addr16
lea
pop
pop
push
lea
push
push
push
lea
push
push
push
push
push
lea
push
call
add
add
pop
add
data16
xchg
outsl
add
mov
add
aad
fwait
roll
std
push
pop
sar
add
push
jp
add
push
xlat
add
lahf
pop
xchg
mov
mov
add
hlt
lea
pop
pop
push
ror
inc
pop
pop
push
push
push
lea
push
push
push
call
add
mov
add
std
add
lods
iret
add
cwtl
add
jae
add
cld
outsl
push
std
add
xchg
lock
jnp
push
push
add
push
movsl
add
mov
popf
add
add
xchg
out
add
stc
mov
mov
add
mov
sbb
push
push
call
lea
push
add
add
in
push
xor
mov
jmp
pop
add
add
aad
add
adcl
add
xchg
andl
imul
mov
lea
pop
leave
push
lea
push
lea
push
push
push
push
push
push
push
push
call
jle
data16
imul
add
add
add
shl
mov
icebp
add
lods
pop
add
lock
add
add
out
add
hlt
xchg
mov
lea
pop
ret
push
push
call
add
add
out
add
mov
add
add
nop
add
ret
add
add
mov
fsub
jmp
jb
add
pusha
hlt
add
stos
jae
add
icebp
add
xchg
add
arpl
cmc
test
pop
mov
add
clc
js
add
add
lahf
xchg
aam
arpl
pop
pushf
nop
add
scas
add
pop
mov
inc
push
ror
pop
cmp
jne
push
dec
dec
pop
lea
push
lea
push
push
push
push
call
mov
imul
ficompl
push
add
lods
iret
xchg
add
lock
mov
add
jb
lret
pop
add
adc
add
mov
test
add
add
lahf
mov
lea
pop
mov
test
je
push
push
push
push
push
call
pop
xlat
movsb
cmpsb
test
arpl
pop
add
add
in
mov
roll
fdivs
loopne
add
add
add
add
mov
add
add
ffree
mov
xchg
add
jmp
add
add
mov
push
leave
aad
xorb
mov
subl
pop
mov
add
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
call
add
mov
add
push
mov
addr16
mov
add
add
scas
jmp
fwait
in
add
loope
add
xlat
mov
cld
add
add
loope
jne
add
fs
into
xchg
add
mov
repnz
add
add
out
jns
mov
lea
pop
cmp
jne
push
add
shr
add
pop
mov
push
rol
pop
test
je
push
shr
pop
mov
push
push
push
push
push
push
push
lea
push
push
push
call
scas
add
add
push
add
insb
stos
add
add
add
push
mov
xchg
add
cld
mov
xchg
ret
add
add
add
in
mull
add
add
add
push
out
out
fbld
add
jmp
xchg
mov
lea
pop
add
cmp
je
push
add
add
pop
jmp
push
push
push
lea
push
call
jae
push
iret
add
add
xchg
jl
movsb
add
add
repnz
stos
mov
mov
aam
out
push
cmpsl
loop
clc
add
iret
xchg
test
add
add
add
call
add
sti
pop
mov
test
add
add
add
add
mov
lea
pop
xor
pop
push
push
push
push
push
push
push
push
lea
push
call
mov
cltd
add
add
imul
fwait
xchg
mov
add
add
add
add
mov
mov
push
ja
int
mov
mov
loop
add
jne
push
icebp
aam
fmull
push
ror
not
add
shr
pop
pop
push
push
push
push
push
push
lea
push
push
push
call
lock
faddl
adc
add
rolb
jo
mov
pushf
add
pop
lods
pop
add
add
add
mov
add
mov
leave
add
mov
add
mov
lret
stos
in
mov
xchg
repnz
fsubs
add
add
lods
add
std
mulb
xlat
aad
aam
bound
pop
push
shr
dec
dec
pop
leave
push
not
pop
ret
lea
push
shr
lea
add
xor
pop
pop
push
rol
shr
sub
pop
pop
push
rol
pop
pop
push
dec
rol
xor
pop
pop
push
push
lea
push
call
add
add
in
add
add
add
icebp
outsl
add
mov
add
add
stos
mov
out
enter
add
mov
push
fstps
add
pop
leave
ret
push
dec
add
add
add
pop
mov
push
sub
rol
pop
pop
push
push
push
lea
push
lea
push
push
lea
push
push
call
in
add
call
add
hlt
add
add
mov
in
data16
movsb
xchg
add
test
xchg
fidivrl
fwait
cld
add
add
ror
in
jge
andl
cltd
xchg
add
lahf
jae
add
add
add
push
movsl
add
mov
lea
pop
pop
push
rol
xor
shl
shr
pop
pop
push
lea
lea
shr
shl
pop
pop
push
inc
lea
not
pop
leave
ret
cli
cwtl
pop
jb
test
jb
push
pop
jb
fcomps
pop
pop
jb
pop
pop
jb
adc
or
pop
jb
xchg
pop
jb
imul
mov
jae
pop
fnstcw
leave
mov
dec
xor
jecxz
pop
add
pop
or
mov
lods
mov
xor
outsb
lods
aam
xchg
mov
je
orl
loope
les
cmp
int
clc
xchg
dec
xchg
repz
ljmp
inc
pop
in
stc
push
mov
popf
pop
mov
or
add
xchg
jb
aas
mov
mov
sti
cmp
test
mov
daa
outsl
adc
sbb
pop
notb
and
lahf
test
or
dec
xor
fnstenv
cmpsb
adc
andb
xor
and
sbb
sub
mov
pop
negb
dec
inc
mov
or
ret
pop
mov
lcall
imul
cmp
fsubs
inc
lods
fmuls
push
mov
or
ret
dec
pusha
push
test
mov
ja
xchg
scas
xlat
notb
das
in
and
cmp
in
mov
push
push
lret
sbb
mov
stos
xor
jl
mov
cmp
mov
xchg
aas
jge
mov
std
inc
jmp
jecxz
xor
xlat
pop
mov
lahf
xor
cwtl
xlat
idiv
mov
mov
leave
xchg
xor
loope
outsb
or
cmp
jl
sbb
in
ret
test
arpl
orl
aaa
cwtl
and
movsl
mov
shlb
insb
in
pop
addr16
sbb
sbb
lods
add
sarb
stos
jl
lock
mov
mov
cmpsb
rolb
xchg
fld1
int
push
repnz
adc
mov
movsb
cmp
add
ret
scas
ljmp
popf
push
jne
insb
popf
cmp
sarb
mov
add
fnstenv
sbb
fcmove
ja
pop
cmp
cs
jmp
add
pop
cmp
xchg
test
dec
sub
inc
mov
in
xchg
andb
jmp
xchg
les
jo
sbbl
pop
rolb
inc
jae
into
jo
mov
sbb
test
lock
cmp
je
pop
out
enter
xchg
or
ja
push
jge
cmp
ss
lods
mov
rorl
mov
in
jecxz
pop
cmp
es
faddp
adc
lock
mov
fnstenv
test
popf
mov
lods
jle
cmp
cmp
jl
std
xchg
insb
sub
addr16
loop
out
jp
dec
mov
jbe
ss
jns
jae
add
addr16
addr16
push
dec
lock
repz
xor
fisttps
gs
cs
popa
repnz
pop
dec
inc
aaa
xor
sbb
gs
adc
jbe
inc
or
ror
adc
or
sbb
xchg
insb
sbb
jl
rcll
dec
scas
or
mov
mov
mov
sub
sbb
xchg
push
jle
push
jno
rcrb
mov
add
jg
sub
inc
sub
fstl
popf
ret
aas
pop
lods
cmp
into
lods
xor
dec
pop
xchg
fisubs
cs
arpl
or
popf
sahf
mov
lcall
xor
add
mov
std
addl
out
lods
outsl
lock
test
push
bound
data16
mov
sbb
js
xchg
or
ja
clc
push
mov
dec
ret
jo
cmp
fbld
mov
mov
cmpsl
roll
call
ds
aad
push
sbb
mov
inc
sbb
mov
adc
sbb
adc
xor
jl
sarb
xchg
ss
jns
sarb
sub
imul
insl
pop
test
outsb
xor
dec
add
test
dec
sahf
loopne
sub
imul
sti
add
repnz
aad
jmp
xchg
pop
lea
push
nop
jnp
sub
fwait
push
jb
pop
cmpb
jns
shl
jnp
or
pop
xchg
push
int3
mov
xor
cs
test
xchg
cld
add
outsl
dec
movsb
sarl
xor
jbe
and
mov
mov
insl
mov
jne
je
cmp
test
repnz
aaa
jge
out
fs
in
mov
jecxz
dec
sub
into
push
clc
repnz
mov
pop
inc
jo
push
ja
mov
sbb
adc
testl
fsubs
dec
add
fcmovnb
mov
or
mov
fstl
or
bound
pop
pop
pop
xor
lods
add
inc
cmpsb
inc
ja
das
scas
and
sub
test
push
cmp
lods
sub
dec
pop
cli
push
cmp
xor
aam
inc
cld
out
fisttpl
mov
mov
frstor
push
scas
jle
aad
loop
nop
xchg
addr16
addr16
popa
jl
enter
xchg
and
lock
jo
sbb
jno
mov
movsl
mov
decl
or
sbb
xor
pop
push
mov
maskmovq
jmp
pop
lret
data16
mov
insb
jo
xchg
lret
sub
push
roll
or
iret
cmpl
sub
imul
xor
and
test
cwtl
iret
xchg
es
mov
movsl
push
sbb
pop
hlt
mov
xchg
lret
and
mov
sub
jle
jnp
out
test
rorb
outsb
mov
ret
sahf
inc
cmpsb
fmuls
mov
arpl
enter
jb
test
repz
or
push
sbb
outsl
jmp
test
mov
orl
lods
cmp
mov
sub
sub
inc
add
fsts
aad
mov
test
cmp
cmp
fwait
jns
test
sub
jmp
aad
add
negb
sbb
pop
lock
int
pop
mov
adc
pmulhuw
out
jge
cmp
sbb
xor
inc
and
jnp
cld
inc
dec
push
pop
imul
ja
jp
icebp
outsl
sub
shll
je
pop
adc
mov
loop
dec
in
lds
adcb
cmpb
rclb
xchg
jnp
sbb
sbb
into
in
lret
fisubs
fs
and
fnstsw
stos
mov
test
dec
add
mov
iret
pop
pop
sti
fstl
sbb
cmp
pushl
mov
dec
xchg
out
arpl
jle
xchg
pop
dec
iret
pop
xlat
xor
jmp
jle
adc
notb
sbb
jno
cmp
mov
test
sub
add
cmc
enter
mov
sub
pop
or
mov
fidivrs
lods
mov
lahf
bound
je
cmp
cmpb
bound
loop
or
rcrl
inc
aad
mov
outsb
scas
xchg
jecxz
or
ffreep
ja
shl
sbb
sbb
push
sahf
int
sub
insb
push
add
setg
lcall
adc
jae
mov
jmpw
sbbb
out
pop
insl
push
adc
sub
adc
pushf
adc
scas
pop
out
jns
mov
pushf
faddp
xchg
daa
in
imul
aad
ja
jb
adc
inc
mov
xchg
lea
inc
mov
mov
push
jne
ret
fbld
mov
lret
xchg
fwait
ljmp
adc
arpl
sbb
xor
xor
mov
aam
adc
data16
sahf
bound
adcl
cs
xchg
mov
addr16
lods
xor
mov
dec
out
xchg
mov
sbb
lea
inc
int3
mov
mov
dec
adc
jecxz
mov
jb
js
sbb
push
cs
popl
sub
cmpsl
bnd
out
into
push
repnz
aaa
movsb
cld
rcrb
push
pop
test
lret
push
jne
sub
dec
pop
insl
cs
in
in
adc
dec
lods
imulb
inc
inc
mov
stos
add
cmpsb
jp
push
sub
or
sahf
std
mov
leave
sbb
xchg
dec
inc
fists
dec
fstpl
xchg
adc
mov
lds
inc
cmp
cltd
dec
add
push
lds
adc
pinsrw
xchg
jg
hlt
inc
adc
aaa
cli
lahf
inc
daa
push
jl
jnp
ds
xchg
movsl
inc
notb
or
arpl
orl
and
iret
mov
lock
and
mov
lds
daa
stos
cmp
sbb
lea
mov
sub
add
push
xchg
ret
inc
std
dec
sub
inc
mov
add
aad
inc
insb
pop
nop
push
mov
lahf
and
inc
fcmovne
xor
cld
dec
cmp
dec
sahf
sub
push
mov
roll
imul
cltd
mov
test
repnz
lock
push
add
mov
imul
sbb
xor
mov
je
push
fstpt
and
data16
sahf
or
pusha
push
stc
xor
ficomps
push
fidivs
in
xor
inc
ds
cmc
ret
push
mov
mov
cwtl
pop
adc
push
in
inc
xor
mov
xlat
pop
dec
mov
ljmp
repz
lds
xor
stos
xchg
xchg
adc
stos
cmp
dec
pop
lret
jmp
sub
andl
icebp
lret
leave
mov
push
mov
jb
inc
mov
push
or
pop
inc
sbb
xchg
xor
fidivrl
popa
je
aam
add
lods
icebp
fdiv
dec
cmc
int3
nop
sbb
popf
dec
and
mov
outsb
int
adcl
xlat
push
xor
mov
and
ljmp
xor
lock
adc
lods
icebp
cmp
jg
mov
sbb
add
call
pop
inc
call
mov
mov
je
aaa
andb
repz
adc
gs
or
xchg
call
lea
xor
and
jno
jp
cmp
mov
adc
into
pop
fs
mov
cmpsb
xchg
ret
dec
cmp
cmp
xor
and
loope
pop
sbb
or
or
mov
mov
mov
adc
xor
repz
outsb
sub
movsl
pusha
and
xlat
mov
mov
iret
dec
fidivrl
nop
out
sbb
out
into
adc
push
addl
cmp
xor
out
push
dec
pop
mov
ss
gs
pop
ljmp
sub
inc
mov
cs
or
push
jmp
cmp
jl
jmp
repz
sbb
jl
loopne
jae
daa
pop
cmp
cmp
cmp
imul
mov
test
mov
loopne
and
cmp
popf
sbb
out
outsl
loope
loope
jp
or
xchg
inc
divb
lock
mov
out
push
call
cs
test
dec
xor
dec
mov
pop
subl
dec
jb
push
sti
push
test
les
cltd
repz
jl
int3
popf
sahf
push
imul
and
lcall
stos
gs
imul
gs
xor
or
add
push
add
ja
rorb
lock
aam
std
lret
cmpsb
jbe
xchg
shrl
pop
adcl
add
insb
push
jno
mov
loopne
in
push
or
push
mov
stos
jne
into
orl
sbb
sub
or
inc
mov
scas
lret
mov
cs
or
decb
jg
mov
and
test
in
out
mov
stos
mov
push
adc
test
dec
jae
add
movsb
rcr
mov
sub
test
inc
gs
out
mov
add
push
test
orb
sbbb
hlt
fwait
jl
cmp
pop
mov
jmp
jns
and
push
or
test
sub
lds
rclb
neg
popf
fcompl
mov
xor
lret
in
mov
stos
in
xor
push
mov
mov
cs
lret
dec
imul
stos
inc
je
popf
imul
jne
fucom
test
add
pop
adc
fwait
push
in
jmp
imul
cwtl
jg
pop
pop
loop
sub
ja
push
inc
decl
pop
add
test
lcall
or
lods
insl
push
and
scas
xor
in
inc
jno
ss
in
sub
lock
mov
test
leave
cmc
repz
loopne
rcrb
les
and
data16
dec
xorl
cmpsb
xor
popa
xchg
js
stos
or
insb
mov
bswap
xchg
imul
shl
jbe
icebp
jne
xchg
lcall
sahf
popf
movsl
stos
sub
push
and
in
jae
movsb
pop
shrd
out
push
in
mov
mov
xchg
gs
fldcw
cld
jle
addr16
int3
jecxz
repz
and
sbb
ja
xchg
push
bound
loope
push
ret
scas
je
mov
outsb
sbb
cwtl
cmp
int3
sub
mov
jmp
mov
jg
movsb
or
ret
push
je
inc
aam
out
stos
or
sbb
ror
loope
popa
sbb
test
ret
push
or
fnstcw
hlt
push
add
cltd
dec
cmpsb
fists
imul
mov
sbb
jp
xchg
xorl
ret
sbb
mov
push
mov
or
dec
xchg
push
leave
push
cmp
lret
inc
neg
movsb
ret
dec
clc
sbb
sbb
jle
inc
nop
xchg
adc
inc
movsl
lret
lahf
mov
pop
inc
xchg
scas
jae
xchg
add
adc
test
and
mov
out
mov
lds
jle
scas
jns
xchg
bound
jge
roll
imul
mov
orb
outsb
fistpl
dec
jl
sbb
icebp
sub
sub
scas
inc
into
fidivrl
stos
aas
int
stos
and
outsb
inc
jmp
outsb
movsl
xor
sub
test
jne
test
shlb
popf
inc
and
jge
jg
leave
rolb
pop
xor
aam
mov
mov
mov
ljmp
cwtl
push
lcall
lds
sbb
lcall
inc
jmp
ljmp
mov
dec
jle
jb
xchg
mov
gs
and
dec
mov
xor
mov
xchg
cmp
popa
adc
adc
aam
cltd
out
mov
jl
mov
inc
mov
ds
mov
mov
lods
mov
ficompl
ja
fwait
test
adc
ret
sbb
int
and
mov
in
std
rcrb
dec
rcr
sub
stos
call
int3
pop
std
notb
sub
xchg
cs
sarb
mov
push
mov
push
cli
and
loope
xor
pop
jnp
xor
dec
loopne
pop
mov
repnz
inc
ljmp
mov
les
xchg
movsb
xchg
jl
js
insl
mov
xchg
push
iret
pop
lret
sahf
mov
add
fcmovbe
and
int
clc
adc
adc
lahf
and
data16
dec
or
push
les
mov
pop
sti
mov
into
sbb
lock
mov
push
std
sbb
call
mov
scas
lds
icebp
enter
push
sahf
scas
jmp
jge
ffree
dec
xor
imul
mov
loop
jbe
pop
imul
or
loopne
jo
or
repnz
mov
or
jle
sbb
in
cmpsb
sub
push
inc
test
dec
aaa
add
mov
mov
mov
enter
daa
sub
xor
sbb
xchg
stos
pop
adc
mov
adc
mov
aaa
int3
out
dec
add
decl
and
dec
aas
mov
xor
fidivs
sbb
sub
inc
add
mov
and
or
sub
mov
movb
ljmp
and
push
scas
mov
pop
jmp
push
lret
loop
push
loop
test
inc
popa
xor
imul
adc
data16
scas
mov
add
pop
adc
jmp
sarl
cmp
cmpl
clc
and
sub
scas
mov
test
jp
hlt
pop
push
mov
cmpsl
lds
in
sub
dec
int
mov
mov
mov
dec
cltd
sub
in
xchg
std
jne
mov
pop
loopne
jmp
aas
test
push
loop
nop
jmp
jns
sti
stc
cs
pop
outsl
fisttpl
cmp
or
push
jg
adc
cmpsl
and
sbb
jae
sbb
sarb
push
xchg
rol
mov
aam
sbb
jbe
lock
lods
movsb
outsl
fstpl
cmpsb
sbb
das
fs
out
test
int3
adc
dec
fs
or
outsl
jnp
jl
mov
add
xchg
xchg
inc
add
das
loopne
or
aas
sbb
je
or
mov
addb
rcll
fwait
sub
movsl
push
jp
rcrb
pop
sarb
test
das
inc
or
adc
decb
aam
ret
ja
pop
out
add
add
pop
push
je
fadds
sbb
or
push
pop
outsl
jae
jae
fldl
insl
in
sbb
pop
xchg
adc
pushl
fnstcw
les
iret
lret
pushf
xchg
popf
mov
sbb
pop
jb
cmp
rol
stos
inc
push
aaa
or
cs
ds
mov
pop
pop
sub
pop
aaa
push
test
inc
mov
in
xchg
cmpsl
aam
pusha
rcrb
ficomps
aas
stc
mov
fldenv
je
and
mov
enter
mov
mov
pusha
xchg
sti
jg
cmp
or
hlt
scas
sub
fidivs
pop
mov
xchg
shll
jbe
lods
cmp
pop
jnp
cltd
jno
notb
jl
pop
fisubl
call
mov
movsb
aam
mov
jle
xchg
out
adc
mov
pop
inc
add
inc
pop
mov
subb
xor
loopne
xchg
cli
pop
mov
clc
xchg
dec
push
insl
stos
ret
bound
add
ljmp
scas
mov
cwtl
int
fs
pop
in
xlat
or
jl
shrb
pop
test
and
mov
rcl
repnz
mov
sub
in
pop
call
cwtl
mov
dec
insl
mov
dec
cltd
sbb
sbb
lcall
adc
push
ret
insb
xchg
push
mov
loope
cld
mov
shr
cli
dec
sub
movsb
inc
cmp
rcr
nop
and
pop
pop
popf
fs
leave
cmp
adc
jecxz
xor
pop
ja
dec
or
jno
push
or
xchg
in
pop
mov
mov
cs
push
jno
aad
pop
pop
inc
loopne
inc
jbe
push
cmp
dec
icebp
dec
fsubs
cld
push
dec
jns
jl
lods
or
int
repnz
arpl
ret
pop
mov
jg
mov
hlt
jg
inc
ret
daa
sbb
test
lcall
adc
jae
pop
inc
outsb
fs
sub
lret
mov
mov
lret
lods
arpl
jp
push
mull
aaa
xchg
ret
imul
in
leave
int
addr16
rorl
test
jae
aaa
cmp
pushf
sti
cmp
stc
mulb
sbb
aam
into
and
adc
int3
mov
pop
scas
pusha
add
adc
push
cmc
sarb
rcll
jp
fcomp
pop
icebp
dec
ficompl
push
fistpll
int
fwait
ja
mov
or
inc
mov
test
mov
mov
mov
testb
loop
add
cwtl
mov
jne
in
sub
pop
adc
sub
cmp
mov
gs
push
adc
cmp
outsl
push
lock
jo
cltd
sarb
jmp
inc
popf
jle
and
pop
daa
insl
push
jp
stos
leave
clc
outsb
inc
punpcklwd
testb
mov
daa
leavew
daa
repz
hlt
cmp
insl
lret
nop
rol
sbb
inc
and
lcall
mov
roll
cltd
jle
aas
mov
add
iret
sahf
mov
inc
mov
cld
dec
push
jno
jne
sbb
inc
mov
cmp
mov
mov
es
in
arpl
fisttpl
inc
testb
push
arpl
lret
push
cmp
dec
or
into
fxch
xchg
aad
fmuls
mov
popa
mov
dec
inc
pop
xchg
addr16
test
fisubs
mov
daa
jb
mov
push
mov
xor
xor
mov
int3
popa
addr16
jg
out
cmp
das
sub
out
inc
push
xchg
movsl
sbb
pop
in
inc
xchg
pusha
add
aam
fidivrs
push
aaa
pop
pushf
cmc
sub
push
inc
xchg
mov
dec
sahf
enter
jg
flds
jecxz
cmp
hlt
cltd
lahf
adc
mov
ss
cmp
cld
xchg
std
insb
push
dec
fstl
call
into
fmull
or
pop
leave
pop
dec
push
dec
and
jl
and
mov
data16
add
sub
movl
pop
xchg
adc
mov
in
cmp
fcomps
mov
sub
cs
mov
mov
sub
into
push
and
push
ja
les
cmpsl
jge
jo
sub
pusha
add
or
jne
inc
sub
dec
repz
and
pop
inc
pop
imul
mov
subl
mov
sub
fdivr
adc
and
outsl
iret
ja
inc
dec
cli
call
mov
xlat
inc
nop
and
push
push
les
push
aas
add
mov
cld
arpl
mov
and
mov
pusha
dec
xchg
sbb
add
pop
push
loope
jl
dec
jmp
ljmp
outsl
sub
jbe
mov
and
sbb
cmp
cld
add
jmp
mov
sbb
pop
cmp
xchg
lods
xchg
jg
sar
xor
mov
push
mov
jmp
inc
sub
push
jmp
cmpsl
into
cs
fchs
pop
aad
loope
dec
mov
in
pop
lds
ss
idivb
repz
aam
mov
xor
sub
cwtl
push
and
imul
int
dec
jecxz
xchg
mov
mov
arpl
mov
jae
xchg
in
xchg
or
insb
lahf
je
jnp
inc
cmpsl
mov
ljmp
mov
jle
daa
pop
lock
and
leave
inc
daa
jg
push
loopne
iret
sub
pop
iret
cmp
stos
fsubr
shll
popa
cltd
faddl
xchg
scas
xlat
cmp
inc
test
xor
leave
xchg
mov
add
stos
movsb
inc
mov
xchg
arpl
fwait
dec
out
mov
lret
xchg
cltd
pop
imul
movswl
iret
dec
pop
mov
test
dec
imull
es
out
sub
push
je
sub
jle
sbb
setp
arpl
adc
enter
mov
dec
push
ds
mov
sbb
insl
xor
mov
push
push
ret
gs
decb
andb
ja
int3
sahf
ret
stc
push
stc
dec
fidivs
mov
js
push
popa
stos
xchg
and
dec
gs
xchg
and
push
adc
push
xchg
stc
add
insl
icebp
adc
sbb
test
dec
mov
scas
add
xchg
decl
jnp
sub
cli
add
cmp
xchg
out
push
enter
call
inc
mov
call
mov
pop
dec
lods
xlat
scas
out
cltd
test
xchg
enter
hlt
aam
jb
inc
daa
push
es
cmp
dec
lret
mov
push
xchg
or
lods
daa
fs
jl
jecxz
mov
add
mov
dec
pop
xor
jne
sbb
xchg
mov
xchg
dec
mov
add
and
push
and
mov
lods
lock
rcrb
pop
out
je
out
mov
hlt
jne
sar
frstor
fidivrl
dec
push
scas
push
dec
nop
mov
or
inc
adc
leave
incb
outsl
aas
nop
jle
rorb
dec
jnp
sub
cmp
dec
adc
ljmp
push
push
cmp
jg
rcll
fcomps
pop
mov
mov
lcall
xlat
push
iret
xchg
inc
stos
push
in
lcall
data16
adc
shl
js
aad
push
pop
and
adc
cmpl
dec
cmc
inc
add
xchg
xchg
pop
inc
das
mov
mov
mov
xchg
or
popa
push
cmp
and
xchg
and
mov
mov
arpl
adcb
mov
push
test
pop
iret
cmp
mov
pushf
lea
rcrb
cli
add
cmp
xchg
sbb
ljmp
ret
xchg
rcr
out
dec
lea
test
rcll
cs
mov
and
fisubs
hlt
lcall
jae
pop
fisubrs
outsl
mov
mov
and
into
jg
push
mov
and
lds
addr16
hlt
stos
insl
pushf
or
cmp
adc
lods
jae
add
cmpsl
mov
push
jae
inc
push
loope
push
jne
push
push
dec
push
mov
je
add
mov
or
in
mov
lahf
mov
pop
loop
sbb
push
adc
xchg
lcall
loope
jp
lods
mov
mov
inc
push
je
mov
leave
icebp
mov
insl
in
iret
iret
jle
dec
jns
mov
inc
or
arpl
push
cltd
adc
push
in
movsb
pop
rclb
mov
les
sahf
dec
mov
lods
outsl
jns
mov
in
xchg
push
cwtl
push
fwait
lock
in
scas
inc
jnp
enter
sbb
mov
adc
lds
cmp
dec
cmpsl
adc
push
jp
dec
pusha
jne
mov
fs
dec
and
arpl
mov
cmp
mov
mov
cltd
pop
xchg
loopne
mov
xchg
insb
stos
aam
xor
xchg
sbbb
push
stos
xor
mov
jns
or
aad
mov
push
in
push
pop
fildl
es
mov
decl
pushf
dec
pop
lock
dec
hlt
fwait
jnp
add
bound
mov
dec
cltd
out
es
jns
mov
add
cmp
sbb
lea
mov
mov
frstor
mov
imul
pop
xor
push
dec
ljmp
pop
jo
adc
ds
imul
lcall
movsl
outsb
out
je
ret
in
mov
movsb
je
adc
cmpsl
stc
idiv
pushf
dec
cld
mov
push
insb
xor
xor
fidivrs
daa
jp
loop
es
cmp
sti
add
les
jl
pushf
xchg
popa
push
xchg
dec
jl
fwait
into
xor
or
into
mov
fldt
cmpsb
insb
int
mov
sti
cld
push
xorb
jle
xchg
adc
push
shll
mov
movsl
jg
rcll
or
xchg
adc
ljmp
inc
dec
mov
pop
cmpsb
imul
stos
aam
inc
fisubrs
dec
xchg
repz
mov
mov
out
add
inc
or
adc
add
xchg
mov
push
repnz
inc
and
push
sti
xor
and
gs
and
cs
sbb
dec
xchg
push
mov
out
pop
shr
fidivrs
push
je
jg
add
push
scas
imul
sbb
pushf
out
fdivrs
aad
sub
fwait
js
fisubrl
pop
mov
mov
pop
jmp
jne
push
sub
imul
xor
pop
xchg
mov
mov
pop
outsb
xchg
push
inc
sbb
lcall
imul
aaa
fnstsw
inc
test
test
lock
subb
xchg
test
fldt
push
add
xor
popa
fidivrs
mov
cmpsb
stos
sub
sub
pop
or
js
sub
inc
adc
fdivs
and
or
mov
mov
and
out
mov
push
loope
pop
adc
lea
aaa
sub
dec
sahf
xchg
aam
xchg
mov
adc
jmp
sete
mov
inc
mov
lock
and
sub
xchg
js
sahf
daa
hlt
aaa
shll
cmc
test
pushf
bnd
lahf
pop
imul
pop
jle
andl
stos
pop
cmp
fbld
jns
pop
dec
dec
mov
popf
and
adc
lahf
jne
mov
loopne
add
xor
xlat
jbe
cmpl
idivl
cwtl
std
push
xor
sti
jle
jne
adc
test
jno
inc
cmc
pushf
scas
cmp
jecxz
mov
movsb
jp
aam
adc
subl
pop
test
int3
mulb
addr16
mov
sar
jne
push
jnp
mov
scas
loop
movb
jne
inc
lahf
mov
outsb
lock
ja
and
cmp
stos
push
insb
dec
outsl
aam
xor
add
dec
mov
adc
sbb
orl
cmpsl
gs
pop
dec
addl
jge
and
cmp
aad
mov
cmc
lock
xor
inc
xchg
mov
adc
inc
and
aad
jg
xchg
sbb
and
adc
in
clc
mov
pop
fadds
test
jns
imul
cmpsb
daa
or
cmp
loope
dec
wbinvd
clc
shr
mov
les
mov
iret
arpl
cmpsb
lock
andb
inc
dec
mov
insl
inc
jg
add
repz
mov
sbb
int
test
cwtl
in
inc
lods
push
or
mov
leave
out
jo
mov
cmpsb
xor
mov
daa
pop
cmp
mov
dec
push
add
movsl
stos
push
add
lcall
aam
popa
scas
push
stos
test
lret
mov
repz
xor
xorl
mov
mov
out
push
sbb
es
jg
fsubrl
out
xor
fimull
adc
lea
fsts
daa
outsl
rorb
cmp
or
lea
mov
scas
dec
cmp
fiaddl
rep
add
fs
adc
push
mov
ret
enter
push
arpl
jecxz
in
or
jge
and
mov
adc
bswap
mov
addr16
push
in
ja
rolb
jae
push
adc
mov
mov
mov
pusha
jns
daa
jge
and
mov
adc
jnp
in
inc
push
mov
jl
push
cmp
ss
scas
and
and
stc
sahf
push
in
test
jecxz
add
int
addr16
add
aam
popa
push
push
mov
jp
or
shrl
add
into
int
test
mov
or
in
sub
cmp
add
mov
dec
outsl
scas
xchg
pop
out
popa
jp
aaa
push
adc
imul
push
adcl
xchg
cmp
int3
gs
xchg
call
or
outsl
nop
add
movsl
push
dec
or
in
mov
xor
xor
out
loopne
rorb
or
cmc
rcll
jmp
pop
push
mov
mov
jp
sbb
clc
pop
repz
dec
clc
xor
rclb
orl
sahf
orb
add
add
jl
ror
mov
out
mov
xor
fstps
lods
lock
hlt
lea
imul
or
fwait
lea
sbb
or
jmp
movsb
xchg
fimuls
insb
aad
andb
mov
loopne
fsubl
repnz
lods
in
mov
mov
gs
fldcw
pop
xchg
sub
jg
shll
sbb
push
aad
push
inc
pop
add
movl
movsb
lret
or
or
test
adc
jne
mov
dec
aas
rcll
xor
nop
pop
sbb
sbb
add
call
in
shl
sub
enter
mov
ljmp
jno
cmp
test
arpl
xchg
addr16
in
int3
mov
pop
mov
adc
in
cmp
fwait
int
adc
loopne
cmpsl
mov
push
call
daa
cmpsb
dec
sbb
lods
movsl
js
scas
fidivl
lcall
ret
scas
mov
gs
mov
pop
sbb
rorl
ljmp
in
mov
xchg
iret
test
popf
add
sub
lock
lahf
pop
pop
out
mov
sti
fs
movsb
jp
dec
push
cld
and
xchg
sub
push
mov
cmp
std
lock
andb
mov
outsb
ret
test
xor
ucomiss
jns
cli
repz
fstpl
push
inc
sti
jno
into
cli
mov
and
lea
sbb
popa
pop
out
imul
jae
xor
rolb
xor
addr16
push
sarl
xor
in
push
stos
out
dec
pop
rcr
out
sub
jnp
jge
pop
push
add
sbb
push
popl
sbbl
stc
push
cmp
clc
movsb
popf
and
jmp
ja
fwait
mov
mov
and
cmpsb
mov
mov
loope
leave
jbe
inc
add
xchg
inc
ret
and
lahf
ss
mov
xchg
shrl
frstor
pop
pop
test
fucom
ljmp
mov
into
clc
mov
add
stos
push
push
roll
repz
xor
xor
js
xlat
add
mov
popf
lret
dec
es
pop
pop
insl
lods
repz
lods
popa
jecxz
arpl
stos
or
shll
sub
push
push
mov
jmp
xor
dec
add
aam
lods
xchg
stc
hlt
xchg
fisubrs
addr16
add
xchg
shl
divl
dec
mov
call
bound
inc
aad
mov
or
xor
mov
xor
iret
movsb
fbstp
mov
dec
pop
into
lcall
loope
mov
in
add
pushf
xchg
test
ljmp
mov
cltd
roll
dec
dec
pop
scas
xchg
xchg
lods
mov
pop
lret
dec
push
adc
std
andl
mov
leave
sbb
xchg
lcall
fists
enter
mov
frstor
sahf
cmp
pop
sahf
scas
std
cmp
pop
mov
and
data16
mov
lret
pop
adc
push
stc
mov
scas
lock
push
leave
xor
in
xchg
jnp
xchg
mov
xor
push
pop
gs
mov
jge
dec
cmc
sub
mov
aas
mov
mov
pop
jl
inc
add
mov
fistpl
push
imul
push
mov
sbb
cwtl
ret
sbb
jmp
and
jge
and
in
sbb
ss
mov
lret
dec
addr16
sub
imul
mov
outsl
pop
xchg
test
add
dec
sbb
movsl
mov
push
popl
in
cmp
mov
xchg
lods
add
jne
out
aas
or
out
mov
add
mov
jl
cmp
jmp
lcall
xchg
and
icebp
sahf
aam
rcrb
jp
mov
rol
ret
push
mov
cld
mov
and
das
les
fcmovnu
cmp
rorb
ljmp
adc
mov
adc
or
and
bound
jbe
sbb
sub
xor
insl
xchg
and
push
add
lods
imul
and
push
mov
sarl
lahf
mov
jae
inc
aaa
decb
call
push
in
imul
mov
dec
stc
add
and
pop
fldcw
int
outsl
lods
jae
mov
sbb
das
mov
push
mov
add
and
stos
rcll
outsb
push
jle
xor
and
sbb
dec
mov
add
pushf
xor
push
clc
leave
ds
xchg
ret
and
inc
push
sub
pop
pushf
lahf
aas
shl
cli
jmp
push
cwtl
fldl
gs
push
pushf
push
lods
cmp
lds
sub
jne
adc
sti
mov
loop
fs
adc
lds
aad
lock
aaa
mov
aaa
or
push
push
jb
mov
inc
add
xchg
dec
xchg
iret
je
adc
call
jbe
incl
bound
adc
mov
or
and
test
ds
xor
and
sbbb
lea
test
pop
in
jmp
jo
sbb
dec
cmpsb
xorb
fcmovu
sbb
stos
cmp
cmp
pop
das
push
mov
sbb
mov
sub
mov
dec
jmp
and
xlat
iret
loop
adc
loopne
mull
insl
addr16
sarl
cmp
loop
lcall
icebp
pop
testb
andb
or
clc
or
imul
fdivl
in
lods
sbb
jmp
jl
jo
fnstcw
ja
pop
cmpsl
not
mov
or
mov
nop
add
pop
xor
mov
cwtl
or
pusha
gs
inc
clc
xor
out
mov
sub
jmp
int3
iret
test
lea
pushl
cmp
lods
out
cmp
lret
es
into
in
popf
push
movsb
dec
ja
je
mov
nop
scas
loop
pusha
fwait
add
mov
pop
pop
ljmp
sbb
mov
adc
push
xor
xor
scas
pop
xor
mov
les
cmp
mov
sub
add
sysexit
push
test
jns
xchg
pop
mov
lock
cltd
mov
aam
ljmp
std
rorl
jb
test
loop
jne
or
lcall
pop
mov
add
jp
and
lahf
xchg
push
outsl
into
jge
into
ss
xchg
mov
rolb
sub
out
shrb
cmp
ror
mov
lds
lcall
mov
add
mov
out
mov
push
outsl
xor
sub
mov
test
sub
jns
mov
arpl
lret
and
out
pop
mov
jbe
adc
push
aaa
into
cmp
ret
in
push
mov
ucomiss
jo
mov
sahf
lahf
movsb
or
outsl
and
sarb
shrl
out
scas
cmp
adc
push
xor
cmp
jp
sub
xchg
rorb
mov
sbbb
adc
getsec
cld
inc
fwait
lds
jle
dec
inc
andb
test
sub
in
aad
enter
icebp
popa
mov
add
ss
mov
out
sub
fidivrl
mov
mov
mov
lods
sbb
sbb
pop
shl
aas
shrl
out
jne
pop
push
mov
push
in
fiadds
insb
rcl
movsb
out
ja
or
int
test
xor
insb
add
dec
inc
outsl
mov
xor
sub
sbb
jb
adcl
pop
xor
inc
scas
sub
loopne
hlt
push
dec
adc
gs
lea
cmpsb
xchg
pop
adc
ret
mov
stos
pop
mov
loopne
mov
pop
daa
imull
push
js
hlt
xor
pop
leave
mov
dec
inc
and
push
sub
push
test
mov
adc
test
pop
xchg
or
lods
aas
ret
pop
fidivs
dec
clc
xchg
je,pn
sbbl
mov
sahf
adc
out
add
mov
push
push
jl
mov
dec
ss
cld
jne
lods
and
or
sbb
icebp
pop
fisttps
pushf
sbb
in
lcall
adc
xchg
mov
pusha
cmpsl
inc
loop
adc
mov
test
fidivrl
loopne
inc
dec
adc
xlat
dec
mov
shr
icebp
sbb
mov
jb
stc
xchg
int
es
add
aam
cmc
pop
test
jge
imul
decb
jp
aaa
in
mov
cld
outsb
sbb
lret
repnz
dec
leave
dec
or
jmp
add
outsl
int
jge
sbb
fabs
inc
out
shrl
sbb
inc
data16
imul
mov
insb
inc
push
ss
aad
pop
cmpsb
mov
test
ret
xchg
test
dec
jmp
fdiv
hlt
repnz
repz
fists
xchg
and
rorb
mov
cs
lods
add
xor
outsl
pusha
mov
mov
or
or
notb
mov
mov
xchg
mov
pop
push
xchg
je
call
loope
sti
xchg
xchg
pop
test
test
test
scas
jbe
xchg
or
fsubrs
sbb
pop
or
dec
pop
push
or
in
cltd
in
mov
jle
sub
xchg
adc
shrb
jecxz
cld
sti
clc
mov
imul
push
punpcklbw
xchg
cli
push
enter
sarb
mov
mov
mov
arpl
mov
ds
mov
push
repz
inc
adc
imul
loope
mov
jmp
push
xor
jg
or
data16
cmpsb
xchg
mov
data16
mov
cmp
je
fs
jg
cmp
jl
and
sbb
and
pop
lock
jbe
stos
sub
and
mov
inc
sbb
inc
mov
mov
inc
test
dec
xor
loopne
push
das
xor
insl
or
dec
or
sbb
inc
imul
les
shll
mov
inc
les
data16
mov
cmc
mov
mov
shrl
add
orw
mov
mov
addr16
data16
lret
aas
mov
xlat
aad
test
out
jmp
aam
mov
sti
add
je
mov
adc
jge
js
jne
shl
ret
in
je
or
inc
or
mov
jne
dec
mov
cmp
sbb
cmp
lock
add
in
xchg
xor
dec
mov
and
and
fldl
lock
lods
and
testl
cmp
call
mov
dec
mov
repnz
cmpb
popf
sub
pop
cltd
xchg
xlat
push
adc
or
xor
test
pop
add
cmpsl
lods
mulb
faddl
ror
push
in
xchg
cmp
mov
mov
jmp
add
xor
xchg
mov
outsb
lea
pop
sbb
mov
rorb
add
addr16
out
pop
jg
data16
fbstp
out
sbbb
sti
repz
lods
in
lea
sbb
and
pop
fdivl
pop
push
mov
je
xor
sti
cltd
mov
mov
cwtl
or
pop
in
scas
imul
push
push
pop
test
aad
cltd
or
jg
jne
cmp
es
repz
into
add
popa
sahf
lret
cmp
xor
pop
or
fwait
cmp
or
stos
subl
scas
dec
xor
push
pop
pop
push
pop
shll
paddb
dec
dec
or
fcompl
cmp
fisubrs
dec
ljmp
push
fnstenv
cmp
xchg
and
shrb
jne
adc
xchg
xchg
mov
and
mov
mov
shlb
lock
or
add
fsub
sub
sbb
mov
rcr
lods
or
sbb
shll
lods
lret
aas
or
data16
mov
rclb
cmp
aas
imul
loope
outsl
jo
insb
sub
dec
inc
aas
cmpsl
add
pop
pop
inc
pop
sbb
daa
mov
rcrb
outsb
std
xchg
mov
divb
jae
fsubp
adc
mov
adc
fcomps
cltd
sub
mov
or
loop
xor
add
movsb
repz
cltd
pop
or
repnz
lahf
icebp
or
pop
mov
push
and
roll
mov
jmp
dec
mov
jns
mov
sbb
cmpsb
into
scas
mov
inc
aam
jecxz
adc
inc
ficoml
data16
out
std
loope
jle
add
lods
test
rorl
aaa
adc
xor
jmp
cmc
cmp
ja
jne
adc
idivl
sbb
cltd
imul
imul
jmp
repnz
or
jle
lods
fisubrl
shlb
sub
icebp
out
dec
mov
jg
sbb
xchg
fstpl
cmp
idivb
mov
pop
outsb
fcmovnb
push
fbld
sub
mov
stos
sbb
push
sbb
dec
mov
in
cmpsl
xchg
and
sub
pop
in
add
dec
xchg
or
daa
outsb
scas
inc
push
cmp
push
push
pop
cmp
outsb
imul
insl
cld
mov
in
stos
aas
insl
out
mov
xorl
push
add
xor
iret
mul
ret
cmpsl
and
adc
scas
sub
js
rol
jl
int
sbb
inc
push
or
loopne
incb
mov
push
out
add
or
jmp
nop
iret
insb
fnsetpm(287
mov
jle
xor
mov
pushf
mov
scas
ret
idivb
out
inc
pop
sub
cs
and
ret
xor
sbbl
jg
call
lds
in
mov
addr16
pop
fdivs
les
mov
jbe
jnp
mov
jl
arpl
cmp
cmp
aam
add
pushf
mov
cmpsl
mov
jo
adc
xor
mov
adc
jno
mov
cmp
aaa
push
fstps
pushl
lods
enter
hlt
rcr
add
push
push
fcompl
sbb
int
fisttpl
mov
xchg
cmp
jecxz
js
xchg
hlt
sbb
jb
push
in
test
jns
ret
sub
mov
int
and
mov
popf
push
xchg
xchg
outsb
inc
pusha
pop
fmuls
std
idiv
loopne
ja
pop
int3
pop
mov
loop
pop
xchg
test
xchg
push
out
test
add
jne
ss
ret
int
pop
scas
ljmp
xor
fistpl
ret
cmpsb
adc
inc
imulb
push
in
les
fidivrl
loopne
ret
sbb
mov
mov
movsl
into
pop
sub
incl
xchg
and
enter
sbb
mov
mov
jp
xchg
adc
add
sub
fdivl
mov
imul
sbb
jnp
les
adcl
sbb
shrl
call
mov
jp
or
test
jno
or
mov
add
cmpsb
addr16
popa
sbb
les
inc
popf
lea
ret
cmpsb
lock
stc
orl
adc
dec
ljmp
inc
push
sarl
pop
push
mov
jg
movsl
cli
adc
jns
push
loop
xor
ja
xchg
and
imul
es
mov
aam
nop
or
cmc
sbb
ja
int
pusha
or
shrl
mov
addl
and
and
jns
jp
and
fucompp
sub
add
sbb
subb
jbe
loopne
adc
push
das
out
add
adc
sub
mov
fsubrl
repnz
div
iret
fmull
or
adc
ja
imul
xlat
js
jecxz
pop
xor
add
xor
fimuls
shlb
cltd
gs
es
add
aaa
sbb
sahf
scas
pop
pop
or
in
aad
adc
pop
cmp
cmp
adc
jg
outsb
daa
push
rorl
mov
jl
mov
fnstsw
into
out
sti
dec
mov
sbb
mov
cmp
and
dec
xor
jmp
xchg
sbb
push
loop
nop
bound
orb
xor
add
lock
jo
hlt
sbb
jcxz
sti
fimull
outsb
dec
add
mov
xchg
push
popf
mov
and
es
into
ret
scas
push
cmp
jb
inc
lods
loopne
pop
pop
xor
or
or
dec
shll
rclb
imul
cmpsl
jne
fimull
mov
hlt
sahf
or
lahf
dec
cmpsb
mov
sbb
mov
cmp
icebp
test
inc
push
in
push
test
mov
cmpsl
in
sahf
add
add
std
mov
push
inc
cmp
adc
xlat
arpl
fcomps
jno
leave
jmp
hlt
and
and
cltd
push
in
or
cmp
outsl
mov
loope
xor
jmp
xchg
jno
lahf
rorl
adc
out
inc
add
dec
pop
test
mov
stos
cmovs
mov
cmc
jmp
sarb
xchg
xor
jnp
in
rclb
divl
test
jae
andb
sub
lahf
mov
cs
inc
cld
push
imul
sub
add
ljmp
popf
pop
stos
jae
xor
jl
pop
je
sahf
push
pop
cmpsl
sbb
mov
inc
pusha
lds
or
pop
call
xor
test
out
rclb
pop
stc
and
push
cmp
cmpb
sbb
xor
pop
inc
mov
and
call
das
xchg
jbe
outsb
lea
cwtl
scas
inc
scas
pop
lods
clc
jle
lea
pop
mov
int3
adc
adc
pop
push
icebp
outsl
push
cmc
aam
cmp
mov
gs
push
push
or
mov
test
arpl
xchg
sti
or
lods
sbb
out
inc
dec
or
xchg
popf
rorb
jp
inc
cmp
pop
push
xchg
ret
jne
pop
adc
push
xchg
stc
and
add
lock
sub
inc
xchg
inc
fwait
dec
nop
adc
mov
jecxz
movsb
cmp
data16
sub
adc
fs
aas
sub
pop
xchg
stos
sub
inc
add
push
enter
or
mov
arpl
sub
inc
mov
mov
jns
fisttps
cmpsb
xor
cmpsb
jno
xor
call
inc
xlat
sub
test
and
shrb
adc
imul
stos
mov
pop
or
sub
cmp
pop
nop
mov
mov
jnp
xchg
fsubrl
inc
loope
push
xchg
mov
int
pop
push
push
mov
xlat
cmp
out
dec
pop
mov
mov
mov
test
pop
int
inc
lcall
inc
mov
pop
pushf
push
mov
cwtl
add
sub
xchg
lret
sbb
mov
pop
daa
mov
sbb
out
imul
adc
inc
shll
popa
mov
sbb
pop
mov
clc
cli
cmpsl
pop
push
imul
stos
call
pushf
mov
mov
sbb
pop
scas
pop
add
or
push
mov
test
pop
decl
nop
rorb
imul
push
ljmp
in
loop
adc
xor
sbb
sub
xor
movsb
push
jbe
mov
xor
jp
add
leave
mov
jae
cmp
jnp
jne
mov
fsts
inc
lods
out
xchg
pop
jne
inc
ja
test
jae
loop
jb
push
std
cmp
sbb
mov
fs
hlt
fnsave
jg
jb
adc
cmovb
and
push
xchg
ss
rol
lods
sahf
cmp
into
xor
push
in
jns
jbe
mov
adc
fdivrs
add
mov
adc
stc
cltd
pusha
test
addr16
sarl
push
jle
inc
cmp
jno
daa
cmc
inc
fnstsw
ss
or
push
adc
test
sub
xchg
je
xor
xor
inc
add
add
mov
adc
push
cwtl
inc
dec
jmp
xor
mov
xor
sarb
repz
add
xchg
into
lods
nop
inc
addr16
adc
push
sar
fs
insb
mull
sub
cmp
int
dec
pop
ffree
xor
dec
filds
or
movsb
xchg
shlb
pop
and
pop
hlt
xor
cmp
cmpb
out
pop
and
xchg
mov
mov
add
test
dec
pop
inc
fxam
add
dec
sub
mov
out
je
hlt
jmp
jnp
into
or
xchg
xchg
cmp
lret
push
fwait
xchg
lods
add
lds
mulb
sub
xchg
inc
adc
jecxz
clc
imul
cmpsb
jl
insb
jbe
inc
pop
or
ret
push
or
cld
sub
insb
push
test
fistpll
leave
call
mov
cmp
sub
mov
dec
jp
loop
sub
loopne
inc
addr16
test
xchg
xchg
push
and
je
inc
stc
sti
arpl
mov
push
xor
loop
sbb
insl
icebp
notl
bnd
dec
mov
sti
call
push
cmp
adc
mov
pop
fidivrs
andb
ja
adc
xor
mov
clc
cmpsl
sub
stc
jg
mov
cwtl
stc
pop
enter
mov
ret
nop
insb
mov
cmp
or
and
inc
and
jns
or
and
lret
popf
js
sbb
jp
aam
xchg
mov
lock
xchg
cmpsb
mov
sub
push
aas
clc
push
mov
jbe
mov
cmp
test
lods
mov
iret
adc
call
xchg
jmp
push
push
jnp
lahf
repnz
sub
sbb
jmp
adc
loope
pop
xchg
je
mov
and
lahf
cltd
lds
fisubs
test
shll
inc
jmp
jo
adc
xlat
cmp
mov
jb
push
sbb
aas
mov
or
scas
in
jae
insb
aam
mov
pushw
inc
push
sub
add
xor
lods
mov
pop
test
dec
sti
int
das
shll
in
pop
cmc
sti
aad
decl
add
dec
mov
test
push
sub
into
mov
xchg
dec
daa
push
push
xchg
xor
ret
movsb
mov
xor
pop
stos
out
iret
sub
adc
repz
fcoms
inc
insl
shrl
test
jbe
cmc
imul
inc
ljmp
inc
out
pop
lods
mov
cli
mov
out
aas
je
popa
aad
cmp
xor
pop
faddl
mov
pop
sub
xor
pop
cmc
or
daa
popf
and
adc
popf
daa
mov
in
popa
mov
das
and
jbe
aam
cmc
mov
movsl
pop
stos
or
test
mov
mov
dec
enter
imul
cmp
xor
xor
adc
cmpsl
and
sub
into
js
icebp
jge
cmc
arpl
xor
and
and
mov
inc
scas
leave
sbb
fidivs
loopne
aad
clc
nop
jg
insb
mov
shlb
sbb
mov
shr
push
and
mov
enter
adc
push
fisubs
mov
vucomiss
pop
lea
fisubrs
pop
je
imul
insl
imul
push
insl
sbb
scas
pusha
pop
int3
mov
pop
add
sub
inc
mov
push
push
add
test
push
cwtl
sub
jae
leave
sub
lret
repz
les
pop
dec
fsubp
jl
pop
lds
mov
mov
shlb
xor
out
xor
jle
movsl
sub
xchg
xchg
and
pop
xchg
xchg
cmc
hlt
pop
push
xor
lcall
cltd
cli
sub
mov
adc
adc
outsb
or
lock
pop
jge
or
mov
pop
in
sbb
jb
lods
xchg
cli
cli
cs
or
nop
sahf
pop
cld
ret
idivb
out
xchg
rclb
or
js
inc
out
xor
mov
in
xlat
aam
je
mov
leave
ljmp
adc
sub
rcll
lock
sbb
inc
jp
add
outsb
pop
or
fistpl
mov
add
jne
add
cmpsb
xchg
subl
sahf
jge
enter
push
xchg
jge
xchg
mov
mov
push
stc
notb
out
out
dec
scas
outsl
in
or
aaa
sub
xchg
punpckhwd
out
notl
push
mov
pusha
out
cmc
or
xchg
out
jle
aas
and
xor
dec
and
pop
les
xor
stc
cmpsl
arpl
cli
cltd
les
and
dec
cltd
cmp
lods
dec
sub
mov
mov
xchg
subb
jbe
inc
pop
or
mov
pop
pusha
aaa
dec
fnstenv
je
and
dec
int
mov
mov
dec
or
xchg
mov
test
mov
cld
shll
sub
pop
ds
in
shrl
pop
jg
mov
and
imul
andb
cmc
mov
push
test
and
das
sti
pop
ds
lret
push
lods
jnp
sub
cld
xchg
push
rclb
ja
insl
call
dec
repnz
jg
mov
stc
out
in
idivb
mov
cld
jl
pop
pusha
xchg
adc
test
push
test
add
sub
aad
mov
jne
pop
cs
andb
int3
bound
pop
iret
ficoms
xor
in
or
push
adc
cmp
xchg
add
mulb
sbb
mov
mov
mov
push
sbb
push
inc
mov
mov
arpl
movsb
xchg
mov
loopne
lret
adc
test
sahf
xchg
push
cmp
in
jae
fmull
insb
xor
test
fs
ljmp
aam
clc
lds
jge
dec
xor
mov
mov
sti
ret
lock
aad
cltd
insb
sub
jmp
jae
test
adc
mov
sub
xchg
adc
cmp
and
mov
and
cmpl
stc
jmp
or
dec
iret
adc
fidivl
icebp
sbb
and
ss
mov
xchg
push
fildll
into
and
sbb
outsl
fwait
jmp
xchg
add
movsb
jle
icebp
dec
and
je
and
mov
fidivl
xlat
in
jl
mov
mov
jns
cwtl
jne
ljmp
call
stc
adc
cld
pop
xor
adc
pop
mov
pop
mov
outsb
dec
stos
xor
jne
mov
je
and
fnstsw
sub
cld
pop
stos
adc
sbb
test
fisttpl
sbb
pop
mov
fcompl
xor
les
mov
fstps
sub
imul
pop
movsb
aaa
add
add
inc
mov
je
fists
negl
mov
lret
iret
iret
inc
xchg
push
lcall
inc
jge
jp
push
mov
ja
stos
add
adc
mov
ror
jecxz
cli
and
mov
add
call
dec
xor
dec
adc
or
scas
add
scas
mov
push
dec
test
mov
jno
into
dec
clc
popf
jle
push
orb
pop
sub
dec
jle
pop
mov
jp
cli
mov
cmp
xor
rcrb
in
mov
fistl
lods
or
push
fcompl
and
xchg
lcall
inc
orl
mov
dec
inc
out
stc
loope
loopne
cld
stc
fidivl
cltd
mov
in
adc
popf
lds
mov
dec
inc
xchg
mov
add
arpl
and
imul
in
sub
pushf
testb
fnstenv
mov
inc
ljmp
fcompl
pop
inc
mov
sbb
fisubrs
mov
push
ss
loope
das
push
pushf
mov
dec
sahf
xchg
bound
sahf
fstps
adc
xchg
enter
pushf
xchg
sub
test
jecxz
push
xor
out
mov
lret
pop
lods
imul
sbb
adc
out
pop
in
sti
ja
mov
dec
in
loopne
mov
jb
mov
fmulp
xchg
xchg
iret
imul
mov
or
jp
iret
jg
popa
roll
iret
lea
and
ret
sbb
lea
pushf
pop
stos
mov
adc
inc
xchg
scas
mov
pop
jo
shrb
hlt
sti
shrl
mov
aaa
xchg
lahf
dec
enter
cmpsl
and
jne
dec
lahf
sbb
sbb
mov
jg
mov
int
les
push
outsb
cld
cmp
mov
movsb
mov
inc
fdivrp
push
pop
idivl
mov
cld
or
xor
jmp
fs
in
push
in
leave
into
adc
mov
mov
mov
adc
mov
pop
mov
cmpsl
mov
test
or
sub
fimuls
imul
stc
repz
xchg
jp
pop
xchg
or
sbb
pushf
xchg
stos
mov
jp
lds
ret
sbb
dec
xchg
sbb
ljmp
fbld
sbb
pop
mov
fimull
mov
sahf
jge
insl
and
je
nop
test
mov
push
ljmp
pop
add
daa
sub
xor
xchg
push
stos
fisttpl
and
loop
in
movsl
mov
push
stos
jb
cmc
cmpsl
imul
lds
repnz
inc
add
dec
push
mov
and
sbb
add
mov
jno
and
inc
mov
loop
loopne
cmpsb
out
sar
sub
shlb
inc
xor
lock
mov
pop
fstpt
jne
lret
outsl
loope
ljmp
movl
mov
mov
pop
lret
mov
pop
sub
jecxz
ds
sbbb
rcl
repz
or
test
cmpsl
push
and
and
xor
bound
out
inc
mov
loope
movsl
hlt
out
aad
out
dec
out
subl
pop
sbb
shlb
lcall
addb
rorl
adc
cmc
pop
sti
or
mov
js
adc
stc
adc
sbb
xor
cmp
shl
leave
pop
clc
sub
pop
xchg
sub
cmpsl
fstps
rolb
shl
sbb
and
data16
aad
sub
cmp
add
faddl
push
ja
mov
sub
xchg
add
lret
sub
and
adc
add
lret
in
jnp
inc
in
pop
dec
inc
pop
add
lock
lock
add
or
in
adc
add
add
cmp
sbbb
pushf
sbb
cmovb
cmp
add
cmp
push
es
sub
fwait
jne
sti
mov
cmp
push
data16
loopne
jl
xchg
cs
cmp
sbb
mov
jmp
lods
xlat
outsb
sahf
mov
stc
jp
sbb
pop
cmp
sbb
inc
add
pusha
lods
mov
inc
pop
aas
add
faddl
ret
jmp
lods
lret
jmp
mov
jge
cmp
jmp
add
push
aam
das
lcall
int3
mov
and
popa
xor
add
xchg
jmp
xor
out
ret
orb
lds
sub
and
push
scas
hlt
aam
out
xchg
mov
inc
lods
xchg
out
push
loopne
push
loop
mov
outsl
call
rorl
xor
ret
sub
cmp
add
in
std
sub
es
xor
insl
addr16
gs
mov
lret
cli
jecxz
pop
movsl
notl
sbb
test
orl
cltd
cmp
sbb
jmp
sbb
add
insl
lock
pop
xor
jnp
mov
shll
fdivrl
dec
stos
xlat
pop
adc
jo
add
arpl
pop
lret
jae
mov
sarb
jmp
xlat
or
sbb
dec
jnp
cmc
mov
fldl
insl
sbb
mov
jne
adc
pop
xchg
sbb
rep
xor
shl
lahf
rorl
fdivr
aad
inc
xchg
sub
loop
in
loope
lods
aas
stos
ja
lock
rcll
mov
in
daa
cmpsl
ja
cmpl
mov
in
mov
mov
mov
rclb
jno
sub
sbb
jge
xchg
push
push
mov
testb
or
jne
adc
xlat
xor
mov
jns
sarl
inc
or
xchg
mov
inc
stc
cs
mov
and
lret
iret
inc
mov
sbb
mov
xchg
jno
sbb
les
or
flds
out
mov
and
lahf
jp
inc
xchg
ds
ret
dec
xchg
cmp
push
lret
adc
divl
filds
jg
push
sbb
xor
lcall
ljmp
fidivrl
or
push
push
xchg
and
push
cs
stos
adc
dec
call
mov
outsb
stc
and
rcll
testl
sub
mov
adc
pop
cwtl
test
mov
es
roll
fs
mov
jnp
sbb
push
cmpsb
rorl
mov
jb
xchg
cld
dec
icebp
sub
add
roll
jns
cld
scas
mov
sub
ljmp
adc
xchg
cwtl
pop
and
xor
dec
out
mov
sub
insb
imul
sti
dec
cmp
sahf
ja
pop
push
rcrl
adc
jle
shl
pop
pusha
jle
cmp
out
or
popa
nop
pop
push
cs
sbbb
sbb
xchg
aad
jnp
push
data16
xchg
into
mov
or
xor
xchg
xchg
minps
adc
lods
fneni(8087
lods
inc
push
call
addr16
fnstcw
push
enter
mov
outsb
dec
xchg
sub
mov
pop
loopnew
repz
mov
jae
cmp
push
sub
les
sub
pop
lock
icebp
test
rcrb
xchg
adc
popf
lds
jno
pusha
sarb
out
imul
enter
dec
es
fldt
cwtl
xor
mov
mov
push
sbb
sub
pop
fsubl
nop
hlt
jnp
imul
icebp
jnp
push
xchg
xchg
pop
cmp
repz
push
mull
jne
shlb
or
pop
cmp
loop
add
and
repz
sahf
and
sbb
xor
mov
mov
nop
jmp
insl
cli
lods
mov
inc
test
shlb
sbb
add
in
sbb
add
fimuls
cld
out
test
jns
pmuludq
and
arpl
pop
add
jg
push
iret
aad
outsl
scas
jns
int
and
hlt
cmc
xchg
sbb
cmp
cmp
pop
mov
clc
adc
je
jge
out
push
sbb
shll
dec
mov
js
sub
icebp
or
jns
fwait
inc
mov
loopne
int3
rcll
sub
movsb
mov
pushf
out
jno
in
push
fs
mov
ret
and
fnsave
mov
jb
pop
or
stos
ljmpw
bnd
rcl
and
lcall
repz
pop
xor
push
mov
imull
push
xor
jmp
add
es
dec
decb
xor
xor
popf
push
pop
out
dec
test
inc
lcall
scas
dec
fcomps
inc
in
mov
stos
aam
or
int
imul
sti
adc
push
dec
ret
cli
loope
stc
pop
jge
mov
adc
pop
call
mov
jp
arpl
leave
repz
cmp
mov
mov
test
scas
xchg
sub
adc
dec
mov
mov
inc
stos
mov
add
imul
sub
adc
scas
stos
xchg
push
cmpsb
lahf
or
sti
fiaddl
std
lock
aaa
aad
push
cmc
out
jmp
jo
enter
add
aas
in
loope
test
paddb
add
addr16
iret
loope
jg
mov
call
dec
or
orb
jb
loop
rcl
mov
pop
dec
sahf
add
loope
mov
cld
cmp
jl
enter
test
inc
inc
aam
aas
and
lea
push
fisttpl
pop
inc
add
adc
lret
popf
mov
sub
mov
push
cmpsb
lea
cmpsl
add
nop
mov
jp
popa
data16
lret
fadd
enter
push
lret
les
stc
and
lock
scas
mov
fmuls
mov
xor
sahf
mov
xchg
xor
jmp
sbb
push
push
jns
lea
and
push
sub
mov
adc
insb
sub
call
in
cmpsl
or
pop
push
stc
cld
cld
lret
xor
daa
sub
mov
xorl
add
push
cmp
xlat
xor
adc
enter
cmp
loopne
adc
mov
mov
dec
and
ret
shll
xchg
loop
pusha
data16
std
cmp
cmp
push
inc
mov
ret
xchg
inc
xor
pop
jb
mul
xchg
incw
jl
call
popa
sbb
jo
sbbb
pop
aad
jnp
mul
cld
mov
int3
es
clc
xor
xor
fdivl
push
or
mov
push
or
hlt
sbb
cld
fidivrl
call
and
popa
test
mov
mov
test
std
dec
test
sti
and
mov
pop
fsubl
push
push
das
push
outsl
divl
xor
mov
sub
incb
popf
std
add
mov
dec
ficomps
pop
lahf
leave
push
aaa
mov
sub
xor
test
mov
sub
adc
test
in
inc
push
inc
and
jecxz
adc
mov
loope
int3
pushf
int
ljmp
mov
mov
cli
gs
outsb
shlb
inc
sahf
popa
lods
add
fadd
xchg
xchg
stos
jno
pop
jle
ds
or
add
mov
xor
push
sub
mov
pop
js
mov
add
xchg
xor
xor
xchg
xchg
outsb
inc
inc
leave
daa
lea
ds
cld
and
sarb
fdivp
dec
push
daa
dec
or
popa
daa
and
mov
pop
or
adc
mov
es
inc
aas
mov
cs
pop
push
mov
lods
xchg
sbb
xchg
pop
push
mov
jge
and
dec
jecxz
jl
movsb
jp
test
fsubr
pop
cmc
dec
sub
cltd
dec
repz
push
nop
dec
outsl
lcall
push
in
dec
int
pusha
xchg
push
pop
xorl
lret
rcrb
sbbl
or
fwait
ljmp
sahf
sarl
movsl
es
push
or
pop
push
aaa
dec
call
xor
cmc
and
mov
mov
xor
jnp
hlt
imul
rolb
lock
js
mov
mov
xor
mov
test
lret
sbb
mov
mov
jnp
hlt
and
xchg
push
mov
pushf
in
scas
sbb
loope
fs
ret
adcb
hlt
sbb
push
icebp
dec
or
pop
arpl
dec
fsubrs
cmc
mov
addr16
inc
icebp
pop
jg
jl
jl
not
cmp
loope
repnz
subb
dec
jo
leave
test
jge
js
shrb
enter
test
es
xor
enter
sbb
dec
push
cmp
xchg
gs
mov
lods
jle
mov
mov
outsl
push
sub
ret
in
mov
aas
push
cmp
stc
mov
mov
in
sub
arpl
pusha
add
cli
jmp
pop
js
dec
adc
and
adc
jns
mov
mov
mov
jmp
adc
lods
lcall
sbb
ds
or
xchg
jle
xchg
push
inc
add
stc
shlb
repnz
xor
or
xor
and
xchg
lock
pop
xchg
loope
pop
cmc
sub
rcrl
pop
fistps
mov
dec
clc
xchg
pop
icebp
out
aam
sub
mov
pop
imul
mov
pop
xor
dec
stos
fstpt
xlat
sub
push
inc
das
das
adc
cmp
decl
jge
push
rorl
loopne
jb
xchg
lds
fdivrl
roll
xor
addb
incl
jmp
cmp
xor
jmp
imul
push
sbb
sub
idiv
mov
out
bound
adc
push
lock
ss
mov
inc
fsubrl
mov
jmp
pop
add
adc
clc
inc
and
je
imul
test
pop
xor
stos
rcrl
pop
xchg
mov
cmp
rcll
addl
pop
ljmp
mov
cli
movsb
int3
fdiv
fdivrl
cmp
subl
aas
into
dec
sub
jmp
in
icebp
xchg
inc
cmp
addb
shlb
in
je
scas
cltd
shrl
imul
test
and
inc
gs
loope
jge
addb
imul
and
add
clc
mov
mov
jg
mov
ljmp
and
jp
dec
mov
xor
int3
mov
xchg
cmc
psubd
adc
sbb
in
data16
pop
in
daa
inc
cmpsl
mov
cmc
and
mov
lds
addr16
or
leave
imul
sbb
mov
jmp
outsl
fdivrl
out
add
mov
push
jne
stc
bound
mov
sbb
pop
add
inc
enter
sbb
lahf
mov
xor
aad
cmp
test
push
cmp
cmp
mov
push
fucompp
jbe
test
subb
xorl
andl
pop
dec
repnz
out
daa
push
jmp
push
jne
inc
out
push
ss
dec
jg
adc
not
mov
xor
mov
adc
xor
dec
cltd
mov
repz
cmc
aas
insl
mov
jp
mov
lea
mov
pop
mov
fdivp
and
add
mov
imul
xchg
in
addr16
popf
mov
out
sbb
or
les
sub
mov
cld
add
mov
jns
out
inc
cs
scas
and
clc
and
sub
andb
lahf
mov
mov
push
jnp
push
sbb
xlat
daa
add
dec
jo
inc
jne
sbb
mov
inc
push
sbb
push
mov
mov
xchg
scas
clc
out
jnp
stc
or
scas
in
sti
es
int
jg
std
roll
insb
clc
push
leave
sti
dec
jb
mov
fcomps
aad
jns
rcr
cmpsl
leave
pop
and
add
fsubs
jnp,pt
xor
sbb
jg
into
ljmp
push
testb
push
xor
mov
sbbl
int3
gs
sbb
xchg
sub
popa
push
pop
mov
sub
mov
pop
repz
popf
mov
bndstx
movsb
std
mov
pop
addb
imul
pop
leave
jmp
jmp
jae
xchg
mov
inc
mov
mov
jmp
ret
test
dec
inc
add
iret
aas
adc
dec
mov
inc
push
and
xor
nop
adc
and
jb
cmpsl
les
lret
fldcw
xor
sub
push
or
dec
adc
pop
add
pop
out
and
ljmp
test
std
std
jnp
fs
pop
mov
jbe
push
ret
jge
adc
push
ljmp
mov
aaa
das
jb
and
in
mov
pop
hlt
lods
gs
pusha
test
push
std
or
jle
fwait
xchg
pop
sub
imul
cli
xchg
push
mov
inc
inc
push
adc
cmpsl
adc
dec
in
ret
lret
mov
pop
int
movsl
or
xchg
jge
cmpsb
in
filds
outsb
repz
mov
mov
imul
test
jnp
repnz
int3
cmp
popf
pushf
scas
leave
sbb
stos
sbb
sarb
es
pop
popa
inc
scas
pushf
std
push
out
pop
popa
lods
pop
and
ss
jo
pop
test
sbb
jb
clc
idiv
mov
call
iret
in
fnstsw
lds
imull
movsb
xchg
and
sub
cld
je
mov
cmp
inc
fstpt
sbb
mov
out
add
mov
cwtl
in
push
lds
pop
daa
sarl
push
sbb
mov
fisttpll
xor
mov
int3
lds
std
dec
or
icebp
call
ss
cmovae
jg
xlat
lcall
inc
lahf
or
push
inc
leave
adc
leave
ss
mov
sub
pusha
push
xor
repz
mov
cmpsl
aam
adc
and
cltd
mov
mov
xor
mov
pusha
lcall
cs
ss
pop
bound
mov
xor
adc
adc
add
pop
inc
stc
xor
faddl
fisttpl
or
pushf
add
cmp
sub
ljmp
jns
inc
jb
adc
push
loop
outsb
pusha
pop
mov
xchg
xchg
or
push
jno,pt
dec
jne
aas
xchg
rorb
sarb
push
xchg
xchg
xor
nop
lahf
xchg
pop
mov
movsl
xchg
push
subl
outsb
popa
push
clc
pop
jg
pop
pop
std
or
or
add
inc
pop
push
inc
inc
jb
mov
cmp
bound
pushf
sarl
dec
es
adc
dec
push
jne
pop
sbb
and
mov
je
or
inc
scas
inc
jg
repnz
sub
loopne
fdivrp
sbb
outsb
xor
mov
adc
jmp
or
sbb
xor
sbb
mov
add
dec
mov
mov
xchg
popf
xor
xlat
and
mov
outsb
fwait
lret
and
mov
rolb
xchg
inc
mov
jp
jge
sahf
xchg
das
add
add
add
lds
imul
std
mov
rorl
clc
scas
or
jns
fdivrp
into
pushf
btc
fwait
popa
mov
flds
in
jge
adc
mov
repz
pusha
inc
cwtl
adc
mov
pushf
call
jno
loope
scas
mov
lret
iret
pop
stos
jl
repz
lahf
cwtl
inc
repz
das
mov
outsb
push
mov
fcoml
fsubs
dec
mov
mov
lret
or
jecxz
jge
ja
mov
push
xchg
jge
test
add
add
push
call
jb
bound
je
xchg
cmc
push
mov
cmpsl
call
out
xor
mov
push
cs
ja
pop
popf
jg
js,pt
dec
mov
clc
and
cmpsl
rclb
cmp
rclb
push
scas
enter
jl
loop
fstp
outsb
mov
mov
in
mov
ret
negl
jecxz
mov
enter
fnstcw
fs
cmp
es
jle
pop
push
cwtl
jno
push
sbb
push
cmpl
enter
push
std
int
dec
idivb
enter
inc
pop
jg
push
pop
sti
mov
movsl
faddl
rep
adc
insb
sub
cld
cmpb
ja
and
adc
pop
nop
xor
pop
cli
dec
add
jl
scas
aam
aaa
ss
loope
or
sub
adc
xchg
xchg
push
js
sub
mov
push
sbb
cmp
and
mov
or
leave
icebp
or
and
mov
sub
xchg
and
xorb
mov
and
popa
cltd
jbe
mov
or
push
outsb
cmc
out
mov
andb
lcall
inc
lods
and
add
repnz
stos
std
sub
jno
adc
push
push
ss
stc
out
cmp
iret
jp
sbbb
je
cmp
inc
aad
mov
outsl
jl
in
add
dec
add
clc
ror
sahf
pop
out
arpl
sbb
jo
and
shll
mov
pop
mov
inc
inc
daa
mov
mov
pop
pop
mov
dec
in
xchg
sub
sub
jg
or
hlt
xchg
mov
enter
push
mov
mov
int3
sbb
mov
jo
jno
les
cmp
lret
sbb
cmpb
out
or
dec
lods
enter
adcb
pushf
scas
stos
pop
jae
out
nop
ret
add
fsub
or
shr
sbb
int3
or
mov
aam
popa
sbb
ja
push
mov
sub
add
loopne
jp
lahf
add
jb
out
jbe
lcall
scas
dec
mov
push
push
jmp
into
jl
push
sub
or
ljmp
xchg
sub
mov
push
push
jecxz
inc
xchg
arpl
pop
and
or
aad
fwait
xor
out
jl
xchg
push
add
mov
gs
insb
pop
cmp
inc
push
out
xchg
push
pop
xchg
fsts
pop
pop
jg
sbb
push
xchg
mov
aad
push
and
sub
int3
stos
imul
loope
aad
daa
push
mov
ljmp
testb
sub
stc
lahf
dec
adc
adc
adc
jbe
fcoml
sbb
orl
xchg
add
push
mov
inc
pop
jecxz
mov
pop
mov
add
call
mov
mov
imul
pusha
mov
std
mov
ret
fisttpll
jmp
test
aad
mov
inc
inc
aad
mov
jne
xlat
adc
dec
movsl
cmp
cmp
mov
push
jp
into
xlat
and
loopne
mov
xchg
jno
mov
shrl
jmp
xchg
push
rol
int
push
push
in
aad
fs
pop
mov
xchg
xor
push
into
stos
sbb
ds
fsubrs
shrl
cmp
adc
lea
or
sub
or
xchg
ss
pushl
repnz
mov
insb
in
ljmp
ja
push
mov
sub
aas
cmp
sub
movsb
in
inc
lahf
popf
sbb
mov
lods
lock
mov
sub
sbb
imul
mov
and
adc
sub
cmpl
xchg
pop
mov
fs
addl
flds
sahf
cmp
add
andb
dec
cwtl
arpl
loopne
popa
rclb
fisubrs
inc
pop
or
inc
push
and
inc
sarb
data16
out
add
pop
inc
pop
fstpl
dec
add
xor
mov
mov
mov
movb
int
popf
push
dec
pop
xchg
outsl
or
lods
jmp
in
sti
mov
cmp
mov
pop
out
ss
loopne
fld
test
stc
loope
inc
dec
add
ret
inc
pop
mov
or
push
pusha
sahf
out
sahf
imul
fcmove
sub
insl
inc
enter
icebp
aam
mov
adc
adc
out
mov
inc
sti
inc
cmp
aad
outsl
xchg
mov
fs
inc
lods
mov
sub
test
jne
fistpl
scas
out
das
and
rorl
xchg
out
stc
mov
movsb
jne
mov
pop
sbb
or
pop
mov
sarl
or
aad
or
in
test
inc
add
inc
push
dec
ljmp
and
mov
insb
shll
mov
or
and
cmc
sbb
dec
leave
jmp
sbb
iret
jb
aaa
xor
movsb
loope
inc
mov
shll
dec
imul
jb
push
ds
shll
inc
test
out
dec
stc
lds
es
fs
mov
sbb
int
lds
mov
int
mov
movsl
outsl
fisubrl
ljmp
and
data16
call
mov
arpl
icebp
loop
insl
fisttpl
rolb
mov
mov
push
adc
bswap
sub
mov
mov
dec
and
add
shlb
xor
ds
pop
cmp
adc
rcrl
or
aad
andb
push
call
inc
add
insb
xchg
mov
inc
jnp
test
sub
fiadds
mov
mov
subb
mov
mov
enter
ja
cld
sub
mov
scas
cmpsl
inc
outsl
loop
imul
popf
dec
je
and
and
lods
dec
jnp
sbbl
pop
jl
jo
nop
xchg
int3
fwait
add
cmpl
repz
fcomps
sub
mov
fldenv
cmp
dec
rcl
xor
shl
movsbl
inc
es
les
inc
inc
mov
pop
xchg
addr16
mov
repz
int
push
mov
sahf
mov
jb
and
mull
mov
push
out
add
jp
rorb
lret
mov
cmp
push
mov
nop
movsb
jo
cmp
pop
jg
insb
repnz
xchg
shrb
enter
mov
jns
sbb
outsl
lret
repnz
fiadds
lods
dec
lret
mov
nop
xchg
xor
cli
lahf
inc
popf
movsb
pop
lcall
jl
or
inc
mov
movsb
cmc
and
inc
sti
push
cmp
push
insb
fdivl
nop
inc
aam
jg
test
push
sbb
fsubrl
push
or
dec
in
ds
lods
or
mov
xor
adc
inc
xchg
hlt
cmp
popf
out
pop
pop
xchg
push
and
pop
loopne
loop
clc
in
adc
in
xchg
daa
cli
in
and
cmc
adc
xor
push
cltd
in
rorb
clc
dec
sbb
push
icebp
loop
inc
add
das
mov
aad
fs
xchg
sbb
dec
adc
loop
in
jnp
push
mov
push
jge
lret
jb
loop,pt
mov
or
lahf
push
sbb
dec
mov
imul
aad
adc
popa
xor
sahf
outsl
neg
mov
dec
imul
add
scas
push
sub
mov
and
or
pushf
mov
lret
push
inc
jle
rcrl
mov
push
adc
push
or
flds
sbb
out
into
sub
jp
push
cmp
mov
cmpl
das
jo
xchg
fidivrs
cwtl
ss
dec
ffreep
mov
faddl
popa
mov
imul
pop
out
repnz
in
inc
sbb
dec
mov
lret
in
mov
adc
fwait
push
dec
idivb
adc
adc
ret
cmp
stos
xchg
inc
xchg
and
daa
lock
push
mov
push
push
sub
ljmp
lahf
ss
aam
or
shlb
lods
fwait
clc
adc
std
xchg
cmp
mov
mov
fstps
aam
mov
cmc
push
rol
sub
mov
or
push
dec
mov
lret
jp
dec
push
ret
fmulp
push
into
jo
dec
ficompl
adc
aaa
cmp
jp
ljmp
pop
insl
clc
mov
es
loope
iret
inc
subb
xchg
inc
sbb
cmc
fldl
in
cltd
jns
sub
mov
ret
movsl
xor
sahf
adc
dec
inc
repz
add
ret
and
cmpsb
xchg
inc
jge
and
fwait
fucom
sub
pop
pop
insl
dec
mov
pop
sbb
push
in
dec
xor
popa
testb
xchg
call
ja
or
mov
cmp
adcb
pop
fdivrs
mov
xchg
jo
mov
mov
nop
sub
cmp
sbb
aam
daa
jge
sub
xchg
aad
jle
cltd
or
cmp
idiv
mov
lret
pop
inc
dec
outsb
cltd
imul
push
adc
sub
cltd
mov
repnz
inc
pusha
lret
leave
mov
iret
mov
stc
adc
lods
or
push
pusha
out
sbb
andl
or
xlat
inc
les
clc
sub
lods
jo
aaa
inc
or
arpl
xlat
xchg
loop
sahf
jb
add
mov
xor
in
cld
jno
data16
pop
stos
mov
lahf
mov
cmp
jmp
ret
popa
mov
iret
aas
dec
push
xor
adc
cmp
mov
cwtl
xor
rcrb
ret
rolb
fildl
out
inc
push
xor
mov
ficomps
xor
mov
in
cwtl
dec
adc
cmpsb
jb
lea
xchg
xchg
dec
lcall
xor
in
xchg
add
sbb
scas
add
les
or
fistpl
pushf
pop
add
jmp
imul
jge
push
pop
loopne
sub
orb
testl
movsl
xor
add
mulb
ficomps
add
push
xor
subb
nop
sar
out
popf
test
mov
popf
rcrl
test
pop
sbb
xlat
nopl
push
pop
pop
pop
xor
mov
scas
push
push
jns
test
test
jecxz
xchg
imul
loopne
jnp
jne
adc
nop
js
jno
scas
scas
push
loopne
enter
out
xchg
lret
jnp
and
rcr
mov
cmp
xchg
stos
adc
xchg
mov
sbb
cmc
sub
outsb
adc
push
push
in
icebp
ss
push
lahf
loopne
push
add
xchg
pop
loopne
fstpl
xor
sahf
sbb
outsb
es
add
std
aad
lds
cmp
test
repz
mov
inc
jb
cs
cs
cli
cmp
out
push
ja
sub
inc
cmc
data16
stos
and
out
cmc
pop
inc
insl
pop
dec
ror
dec
outsl
add
adc
pusha
xchg
insl
pop
add
xlat
jmp
mov
inc
mov
xchg
ljmp
popa
test
xor
push
cltd
gs
or
push
sub
add
sbb
mov
out
fwait
mov
and
xchg
aas
pop
daa
mov
das
add
ror
xorl
push
aas
int3
jmp
add
lods
inc
rolb
mov
jp
sub
les
xlat
mov
pop
fistpll
out
mov
out
sti
cmp
mov
jo
mov
adc
mov
hlt
les
add
and
jg
push
sahf
jp
cmp
fwait
or
pop
adc
repz
cltd
loopne
sub
pop
push
ror
jne
jno
lods
and
pop
jp
ljmp
sub
imul
bound
sbb
add
lods
in
xchg
sub
mov
sti
leave
aad
xor
or
inc
gs
cltd
in
push
daa
enter
aas
adc
adc
mov
sbb
cmpsl
push
jns
mov
popl
pop
cmpb
lcall
xchg
mov
std
loope
xlat
out
or
aas
xor
adc
xor
dec
jbe
scas
cmpsl
lcall
in
push
sub
ja
in
fadds
repnz
jb
fadd
add
ficoms
imul
jno
in
enter
xchg
jbe
rcrb
sbb
out
lock
ror
or
test
arpl
lods
push
daa
xlat
pop
mov
mov
aad
inc
adc
rcrb
adc
dec
movsl
je
dec
sub
pop
cmpsl
push
shr
xchg
push
mov
bound
test
ror
cmc
cmp
and
push
inc
sbb
mov
int
and
sub
and
xor
fisubs
and
or
cwtl
push
pushf
sbb
inc
mov
xchg
ffree
pop
pop
movsb
xchg
aas
ror
mov
lods
mov
pop
dec
adc
push
mov
inc
jge
pop
xlat
daa
cmp
cwtl
add
les
and
inc
fidivs
js
xor
scas
pop
popf
adcl
idivb
pop
pusha
cmp
aaa
sbb
jb
cmp
call
test
ljmp
out
out
loopne
sbb
out
cmp
fimull
lret
test
jb
mov
iret
pop
bound
call
test
mov
pop
mov
push
dec
call
sbb
fstpt
push
outsl
in
in
jle
cli
push
hlt
outsl
pushf
in
out
gs
mov
test
adc
add
pop
mov
xchg
xor
fisubrl
clc
mov
adc
cmpsl
test
sbb
ljmp
adc
ss
dec
into
or
lcall
xlat
sti
push
mov
sbb
and
movsb
subb
in
fs
inc
jno
popf
dec
shrl
lahf
arpl
jb
cmpsb
push
fists
scas
or
mov
arpl
pand
dec
xchg
dec
sub
jge
sar
mov
sbb
cwtl
sbb
ja
mov
decb
movsb
jne
sub
push
xlat
icebp
push
add
xor
inc
xor
push
subb
cmc
pop
pop
or
mov
xchg
jmp
xchg
inc
jno
fs
enter
das
sub
in
push
mov
loop
pop
popa
xchg
inc
loopne
movl
lods
movsb
clc
ljmp
push
imul
out
dec
mov
out
push
pop
les
pop
cmp
and
lea
xchg
scas
std
inc
mov
dec
sub
aas
mov
hlt
pop
dec
lret
in
xchg
cwtl
xchg
dec
sbb
daa
add
xchg
pop
rclb
jmp
out
ljmp
xor
mov
sbb
cwtl
sbb
jl
adc
jmp
call
jp
or
ss
negl
cmp
fsubrs
jns
out
sbb
repnz
addr16
mov
mov
pushf
fcompl
incl
mov
andl
test
dec
mul
sbb
dec
arpl
inc
mov
sub
cmp
shrl
mov
lods
push
fcomps
scas
xor
inc
dec
movb
jge
cmc
rolb
aad
push
int
rcl
add
sub
add
dec
gs
rorl
jecxz
out
xor
sub
pop
shl
or
iret
adc
jne
lcall
jp
bound
xorl
out
cmp
stos
out
test
frstor
push
sub
fdivl
shll
aaa
mov
xchg
dec
iret
pop
push
out
or
sahf
mov
xor
inc
loop
xchg
stos
mov
out
inc
or
les
jae
inc
pushf
sbb
mov
xchg
mov
cmpl
aam
frstor
ljmp
cmp
out
or
mov
popf
or
push
data16
cmp
mov
fnstsw
sub
in
aas
int
xchg
dec
out
in
stos
add
gs
pop
xchg
fistps
xor
stos
cwtl
out
mov
mov
inc
movsb
mov
inc
das
stos
aad
das
mov
mov
jae
rolb
push
fstps
aas
pop
cmpsl
ja
mov
aas
notb
push
cs
movsl
adc
stos
inc
bound
push
mov
push
xchg
push
adc
pop
lret
test
push
push
push
push
ror
add
mov
push
sbb
pop
cld
xor
mov
test
test
inc
lahf
mov
sbb
mov
inc
push
subl
add
mov
push
mov
jns
jecxz
lcall
pop
out
xchg
pop
addl
scas
fstps
inc
out
lret
xlat
cmp
movsb
mov
push
xor
jge
push
jnp
xor
mov
and
sahf
cmpsl
cli
sbb
scas
dec
subl
ret
xor
scas
xchg
mov
lods
fsubrp
mov
mov
mov
mov
int3
add
loope
lds
cmp
aaa
jg
popf
xchg
fistps
mov
xor
mov
cli
xchg
fsubrp
xor
out
outsl
test
cs
jnp
daa
push
adc
xor
stos
mov
lds
insl
dec
mov
pop
loope
out
or
push
xchg
test
mov
mov
std
mov
mov
cltd
and
rcr
fdivl
inc
arpl
or
dec
imul
jo
enter
test
sbb
data16
mov
push
into
pop
repz
shlb
sbb
out
pop
xorl
gs
pop
out
aas
add
sub
mov
loopne
mov
inc
inc
xchg
xchg
imul
jnp
das
mov
xchg
rolb
in
addb
jo
cmc
aam
mov
out
push
mov
jmp
mov
jmp
lret
pop
jge
rol
sub
adc
pop
pushf
pop
in
cmpsb
adc
insb
insl
jg
movsl
mov
xorb
sbb
xor
iret
jl
jno
push
pushl
xchg
and
mov
pop
mov
das
out
dec
loope,pn
fldcw
pushf
sbb
aaa
ss
aaa
das
xchg
les
andl
xchg
push
cmpsb
xor
in
sbb
clc
clc
jle
jmp
lahf
inc
fadds
push
scas
mov
push
sbb
fidivl
sub
jl
xchg
xchg
mov
insb
mov
sbbb
daa
stos
movsb
lcall
push
insb
ljmp
in
fs
inc
pop
push
aam
sbb
adc
mov
push
add
lret
and
jae
sub
sbb
test
mov
fnstcw
aas
int
insl
adc
adc
sti
lret
je
push
sub
xchg
cli
inc
movb
int
out
dec
jb
and
xor
xlat
cltd
and
jbe
jae
das
movsb
sbb
lds
mov
popf
lock
popa
mov
add
jmp
rcrb
xchg
roll
test
push
imul
ficomps
dec
jo
or
cli
xchg
jmp
sti
sbb
xchg
mov
subb
cld
mov
cltd
add
inc
stc
movsl
pushf
lock
sub
push
add
mov
adc
pusha
sub
outsb
cmc
adc
add
sbb
pop
fisubs
negl
jo
scas
clc
loop
inc
jmp
test
add
jge
cmc
inc
repnz
inc
xor
dec
mov
fiaddl
sbb
dec
xor
dec
hlt
inc
jge
ljmp
ljmp
fcoms
jbe
test
inc
xchg
std
pop
nop
push
push
adc
mov
ficoms
shll
clc
mov
adc
rclb
cltd
mov
enter
push
mov
xadd
aas
jne
pop
and
push
pop
xchg
pusha
or
inc
xchg
jae
cmpsl
cmp
cmp
mov
jno
test
or
mov
inc
pop
scas
out
jge
adc
xchg
imul
shr
sbb
fildl
arpl
cmpsl
push
out
mov
sbb
push
cwtl
cld
les
test
and
cmc
xlat
xor
arpl
mov
mov
dec
jmp
test
push
sub
xchg
test
mov
sbb
or
push
push
cmc
pusha
ret
fbld
out
cmp
ds
data16
xchg
ret
pop
les
and
dec
xlat
adc
out
cmp
xor
jno
ss
mov
pop
xor
dec
in
addl
sbb
mov
test
cmp
int3
xor
clc
das
dec
push
fistpll
cs
bound
pop
in
test
mov
adc
lret
adc
roll
pushf
or
test
mov
push
pop
inc
cmpsb
popa
push
stc
ror
ret
imul
fdivrp
jl
sahf
add
jmp
mov
test
js
jne
sarb
xor
cmp
imul
loope
cli
pop
cmc
stc
mov
std
sbbb
fistpl
xor
out
xchg
ss
cmp
movsbl
lea
mov
mov
pop
jecxz
lock
add
loope
mull
pop
test
xchg
push
adc
jns
ds
pop
out
xchg
lods
inc
or
into
dec
pop
jbe
inc
bound
sub
xor
adc
and
add
add
test
cmp
cs
iret
dec
jo
push
jl
cltd
or
pusha
adc
mov
aam
mov
pusha
or
mov
loopne
imul
popl
ret
cmp
ljmp
cmp
mov
orl
sub
loopne
mov
mov
and
mov
cmp
jle
pop
and
cmp
out
stc
pop
or
add
push
aas
jnp
scas
or
inc
mov
sub
icebp
insb
ret
insl
out
add
lods
jne
mov
mull
mov
mov
mov
xor
les
inc
nop
hlt
lret
push
test
cmp
cmpsb
sbb
push
out
mov
cmp
shrb
dec
pop
pop
or
mov
cld
adc
mov
std
jge
shl
mov
inc
or
xor
xor
das
sub
stos
xor
cld
cmp
aad
xchg
popa
push
sub
pop
cmp
aam
pop
cmpsl
mov
xchg
sub
sub
aaa
fisttpll
test
movsl
in
gs
popa
adc
nop
mov
jle
into
sbb
pop
jno
ret
js
xor
fst
dec
jae
stos
pop
enter
les
xchg
xlat
cmpsl
add
fld
cmpl
add
les
aas
xchg
or
mov
data16
fnstenv
popf
mov
rclb
cwtl
jmp
pop
jecxz
les
and
adc
icebp
mov
mov
dec
sbb
sbb
into
dec
adc
adc
inc
or
lods
movsb
outsb
orl
icebp
ljmp
lods
lea
in
lret
xor
stos
rclb
fisubs
or
test
sub
fildll
fiadds
mov
cmpsb
inc
cli
sbb
jg
outsb
adc
dec
js
mov
stos
stos
sub
lods
sub
outsl
or
dec
cld
loope
notl
dec
sub
mov
shl
xchg
test
outsl
clc
pop
pop
int3
mov
fs
push
cltd
outsb
out
or
dec
mov
sub
shrb
jbe
push
or
jne
test
lahf
mov
sbb
sub
les
cltd
push
test
xor
xor
sbb
dec
jl
dec
dec
stos
int
jle
scas
outsb
std
test
mov
in
cwtl
dec
js
jbe
and
lret
cltd
add
mov
dec
jb
mov
das
test
pop
mov
loopne
mov
jbe
dec
mov
mov
push
mov
mov
push
lods
pop
inc
pop
push
mov
mov
frstor
cs
rclb
pop
sbb
vunpcklps
sbb
leave
fidivrl
aas
test
ret
cmpsl
inc
jmp
push
or
sbb
inc
cmp
pusha
cmpb
outsb
gs
inc
cld
add
loop
shll
jg
jp
cmp
mov
xchg
or
mov
sub
push
xchg
int
or
mov
repz
sub
xor
inc
leave
fcmovbe
lea
adc
pop
adc
lods
adc
iret
dec
rep
push
ljmp
movsb
ja
cmpsl
mov
cs
int3
mov
dec
push
jnp
lea
or
insl
or
push
jl
js
in
pop
insb
xchg
nop
and
mov
jnp
or
inc
xor
inc
pop
cmpsb
sub
fadd
xchg
cmp
adc
loopne
mov
icebp
addb
inc
and
fisttpll
lds
cmp
cmpsb
or
aas
push
or
sub
mov
xor
add
cli
push
push
pop
cmpsl
fldenv
jp
pop
repnz
das
mov
popa
jp
dec
dec
jmp
mov
push
fisubrs
clc
sbb
jnp
xchg
loop
mov
dec
mov
ljmp
mov
adc
loope
push
das
jns
or
setno
stos
inc
push
push
add
adcb
sub
ret
enter
repz
pop
cmc
or
or
out
push
lret
add
push
add
cmp
int
clc
std
clc
mov
out
jnp
mov
int3
inc
repz
in
pusha
sub
add
and
nop
mov
bound
out
jl
sub
sub
jle
mov
insb
adc
sarl
mov
pop
int3
out
pop
push
or
stc
jb
adc
pop
sub
push
pop
testl
cld
clc
and
add
popf
int3
imul
push
das
push
and
mov
add
add
jmp
mov
out
mov
mov
pushf
jae
cmp
push
loop
fildll
cmc
ljmp
dec
cltd
lods
out
and
dec
xor
arpl
and
or
mov
iret
or
mov
outsb
pop
cwtl
icebp
lret
mov
xchg
cmp
sbb
mov
xor
sahf
jnp
outsb
dec
test
jbe
cmp
popa
adc
push
sbb
dec
insb
sbb
or
fwait
in
cmc
push
std
xchg
xor
xchg
iret
or
imul
xor
aam
mov
cmp
mov
into
mov
push
pop
loopne
outsb
lcall
sub
jmp
adc
ljmp
inc
xor
and
adc
or
add
insb
xor
call
sub
jns
test
lods
xor
mov
jbe
ljmp
pop
jp
jl
cmpsl
fisttpl
adc
push
adc
mov
push
cmp
fistl
fabs
pop
xor
jmp
mov
lds
mov
mov
cmp
lret
in
xchg
xchg
or
test
xor
dec
std
fwait
pop
nop
mov
inc
xor
inc
and
aad
sbb
mov
dec
push
dec
je
xor
pop
ret
xor
xor
jg
mov
jo
lret
add
xchg
cmp
inc
sbb
xchg
jno
inc
adcl
ja
mov
inc
cmc
add
cmp
mov
js
add
lods
fs
fldt
enter
mov
mov
sbb
and
icebp
cltd
adc
stc
lcall
xchg
add
jge
or
add
mov
mov
popa
ret
test
mov
data16
push
aad
movsb
fstl
inc
xchg
mov
mov
or
pop
fistpl
ret
andb
cmp
outsl
rclb
xchg
lds
aas
jg
cmpsb
cwtl
and
inc
push
stc
lret
cmp
inc
inc
fimull
cmp
cld
rolb
fcmovu
inc
add
mov
and
xchg
mov
test
add
inc
aad
loop
subl
jnp
scas
adc
and
fistps
loope
sub
test
vpsubsb
add
daa
es
xor
xchg
inc
adc
js
leave
dec
pop
push
pop
jae
cmpsl
sub
pop
cmp
gs
xchg
mov
gs
jecxz
jecxz
mov
jnp
divb
ficomps
repnz
arpl
or
ljmp
loope
xor
sub
popf
xlat
lret
and
ret
outsb
mov
ss
cmpb
pop
jno
outsb
mov
or
ss
pop
mov
pop
fwait
das
pop
jnp
xchg
in
int3
push
add
icebp
subb
pushf
mov
notl
fdivrs
cmpsb
jg
cmp
test
pop
fwait
fs
popw
and
loopne
jns
aas
or
mov
push
movsl
jns
into
xor
or
cld
mov
add
fisttpl
dec
mov
adc
in
mov
int3
sarb
loope
jns
std
popa
jo
into
fldl
in
cmp
push
xchg
lods
pop
dec
inc
xchg
outsl
mov
pop
inc
jae
pop
imulb
add
mov
je
jo
cmp
call
push
jp
test
jno
sbb
mov
cld
arpl
pop
mov
jno
mov
rcl
sub
mov
cmp
adc
and
and
into
mov
data16
outsl
jle
fisubrs
aaa
or
cs
push
test
cmc
dec
mov
das
xor
sub
or
outsl
and
xlat
or
or
add
ljmp
pop
xor
cmp
cmp
testb
mov
test
cmp
cmp
nop
cld
filds
mov
jmp
in
hlt
and
mov
cmp
fidivrs
mov
mov
cs
out
cmpsl
xor
mov
andl
mov
mov
mov
aas
jnp
pop
mov
stc
adc
pop
add
test
mov
sub
call
movsb
std
xorl
dec
pop
cmp
jb
fcomp
cmpsl
mov
fidivl
cmp
fildl
ljmp
rclb
xor
lahf
ss
xlat
sbb
cmp
loop
out
push
xchg
mov
bound
rolb
ja
xchg
adc
jno
pop
push
push
add
sub
lret
mov
nop
insb
das
mov
xor
loop
negb
aas
fwait
mov
inc
sub
stc
mov
sub
fucomip
and
adc
sub
lods
mov
shlb
sub
xchg
cmpsb
mov
fisubrl
popa
fsubrl
or
sbb
movsl
or
inc
pop
xor
push
add
lret
outsl
and
lods
sub
add
xor
xchg
mov
pop
in
sbb
repnz
out
inc
sub
add
sbb
and
repnz
fwait
data16
push
push
lods
lret
loope
rcr
arpl
pop
jecxz
add
lock
dec
aaa
and
jp
sahf
in
inc
xchg
insl
cli
sub
lock
mov
loope
in
outsl
add
xchg
out
ret
or
jge
xor
xor
fcomps
xchg
cmp
ljmp
clc
mov
bound
pop
jno
xor
or
pop
incb
bound
cwtl
fdivl
or
xchg
daa
dec
cmp
cmp
insl
sub
subl
sbb
jnp
repnz
scas
mov
pop
out
mov
mov
jbe
movsl
clc
mov
lret
jge
mov
and
sub
popf
out
and
dec
dec
mov
aas
mov
andb
adc
dec
dec
jg
leave
in
cs
mov
xchg
sub
mov
and
push
xchg
xchg
insb
les
pop
pop
xchg
in
cmp
sti
repz
imul
call
or
inc
jne
sub
shll
sub
jno
mov
mov
pop
inc
cwtl
cmp
test
inc
dec
fldcw
cmp
adc
push
or
shrb
bnd
test
mul
sbb
fldcw
pop
pop
cs
mov
loope
into
popa
pop
rorl
sarl
es
xchg
lods
ret
cmp
loope
push
scas
int3
adc
out
sbb
rolb
imul
lahf
in
push
or
mov
cmp
addr16
cmpsl
fmul
test
jbe
lods
xchg
test
mov
sbb
mov
pop
adc
enter
test
ja
imul
movsl
incl
lods
or
push
add
clc
insb
cmc
xchg
outsb
add
test
add
dec
push
mov
sbb
sub
push
pop
mov
in
cld
lods
stos
mov
sbb
xlat
repz
bound
sub
popf
mov
xor
pop
cmc
adc
das
rcrl
adc
pop
pop
xor
mov
stc
in
fwait
in
out
call
dec
int3
and
es
cli
sbb
dec
lcall
and
sbb
scas
imul
mov
push
gs
cmp
cmp
mov
xchg
leave
xor
push
outsl
jge
adc
dec
lret
and
scas
jnp
and
xor
pop
movsb
adcb
xchg
scas
mov
fildll
mov
hlt
pop
pop
call
jg
add
inc
push
mov
or
mov
out
leave
jg
xchg
das
and
ret
daa
in
sbb
add
out
cmp
sub
mov
ss
jne
iret
shll
adc
adc
lret
xchg
mov
addl
fists
pop
insb
repz
cmp
inc
and
push
sbb
nop
stos
cli
dec
fstl
sub
mov
out
outsl
pop
inc
bndldx
cmpb
dec
xor
out
push
out
addb
mov
test
fcompl
movsb
stos
push
push
and
out
dec
mov
mov
or
jb
notb
inc
add
ficoms
jns
pusha
xchg
int
push
shl
dec
stos
inc
lea
clc
jl
sahf
mov
dec
aam
movsb
pop
sbbl
fs
mov
aad
mov
fdivl
imul
cwtl
push
mov
inc
xor
xchg
sub
xchg
inc
xchg
or
lahf
pop
mov
decl
cmp
bound
lret
ret
mov
mov
rcrb
sarl
xchg
push
jnp
push
in
sarb
nop
push
push
sub
mov
push
jo
orl
dec
adc
adc
subb
dec
sti
dec
loope
stos
fildl
jle
pop
nop
fbld
mov
mov
rcrl
test
in
repz
dec
loopne
inc
stos
cld
xor
jecxz
jns
sbb
xor
stc
sbb
mov
pop
mov
imul
push
xor
sub
imul
lret
cmc
enter
mov
xchg
add
add
insl
jmp
sbb
sub
out
aas
in
xchg
je
lds
push
sbb
pop
push
test
ds
mov
add
repz
imul
cmp
pushf
leave
loope
dec
scas
xor
pop
dec
mov
jmp
sahf
jmp
push
cmp
addl
scas
cwtl
xchg
stos
jl
std
sbb
mov
and
inc
mov
frstpm(287
sbb
mov
jo
xor
push
xchg
xor
pop
xchg
push
js
xor
push
loop
inc
dec
dec
adc
xor
pushf
mov
lock
mov
jae
rorb
cmp
pop
mov
adc
sahf
adc
jae
or
fistpl
xlat
ds
sub
sbb
stos
or
fcoml
hlt
out
mov
xchg
mov
lcall
mov
push
push
imul
scas
notb
sub
mov
aam
pop
inc
lods
jno
cmp
out
xor
add
popf
cmp
int
and
shll
and
loopne
push
jmp
cmp
mov
sbb
push
fmull
add
hlt
cltd
mov
imulb
xor
jnp
and
jmp
and
cmpb
mov
cs
dec
pushf
cli
fcoml
shrl
int3
fs
mov
nop
sarl
cltd
jo
rcrl
push
push
std
pop
in
add
pop
icebp
enter
imul
das
push
sub
xchg
cmp
mov
or
adc
dec
dec
mov
movsl
jnp
lret
cli
push
lcall
sbb
jae
dec
xchg
daa
mov
pop
lret
pop
loop
ret
cmp
scas
sbb
xchg
pop
or
pop
xor
jns
push
inc
ss
rolb
lcall
ret
pushl
shlb
cli
aad
iret
or
outsl
sub
xor
adc
adc
mov
repz
sbb
fcoml
push
and
in
pop
inc
or
jae
flds
add
lret
jnp
mov
adcb
sbb
sar
rcll
fnsetpm(287
push
testl
xchg
sti
push
mov
mov
dec
fwait
ds
dec
hlt
mov
mov
test
push
sbb
cmp
leave
mov
mov
insl
and
xor
ja
sarl
incl
pop
aad
mov
lds
inc
mov
shll
bound
in
test
sub
push
lea
mov
dec
pop
test
mov
push
jne
dec
jl
mov
pusha
inc
aaa
mov
mov
inc
repz
jmp
mov
mov
loope
jnp
enter
out
fnstenv
ds
mov
ss
jno
cmpsb
sbb
pop
inc
xor
sub
xchg
xor
lock
bound
push
mov
inc
scas
cwtl
dec
repnz
fs
mov
xor
adc
icebp
adc
add
into
lds
and
jecxz
imul
loop
mov
cwtl
cmp
cmpsb
jo
push
arpl
cli
dec
inc
mov
js
dec
int
cltd
pop
js
push
int
je
add
stos
idivb
sti
xchg
jp
dec
mov
pop
insb
test
ficoml
xchg
lcall
xchg
or
loop
lret
int3
mov
jns
clc
inc
insl
inc
scas
jnp
mov
and
pop
push
push
xchg
mov
inc
je
xchg
loopne
mov
sar
cmp
ds
mov
add
cmp
dec
adc
push
and
mov
fmull
mov
clc
into
repnz
jl
mov
rcrb
nop
mov
lds
mov
call
add
mov
out
adc
in
mov
out
inc
icebp
xor
xchg
mov
pop
mov
lcall
xchg
mov
icebp
loopne
aad
scas
nop
lods
nop
sbb
xchg
lahf
mov
cmpsb
pxor
sbb
dec
jmp
leave
mov
sbb
arpl
sbb
inc
mov
rolb
loop
or
inc
mov
or
cmp
gs
mov
scas
scas
mov
mov
jg
js
jno
xchg
repnz
lret
mov
je
es
ret
fcomps
shrb
rorl
xor
mov
cld
pop
or
and
sbbl
push
push
jg
adc
hlt
lahf
cmc
push
mov
xorb
std
pusha
mov
xor
xchg
clc
sbb
inc
mov
mov
xchg
pushf
ljmp
ret
xchg
push
fwait
jp
xor
mov
lret
or
test
sbb
hlt
mov
ficoml
fcmovnb
in
and
lock
and
lahf
dec
push
mov
mov
ljmp
sarl
lock
cld
and
mov
pop
add
push
fwait
dec
jg
xchg
insb
ds
cmc
xorl
xchg
jo
fdivr
adc
pop
and
in
mov
fidivs
loopne
loope
inc
dec
popf
leave
scas
xchg
insl
pop
fstpt
negl
cltd
sub
addr16
jcxz
add
and
mov
jae
hlt
test
push
shrb
aas
insb
push
inc
mov
loope
fisubs
mov
into
mov
sbb
dec
mov
je
ljmp
cwtl
cmpsb
or
cmp
push
jg
inc
loop
movsl
mov
mov
insl
xlat
mov
fwait
inc
adc
dec
fdivl
sub
mov
cld
push
ffree
int
lahf
call
jo
pop
scas
mov
stos
je
testl
inc
cmp
xchg
cmp
xor
push
fcomps
adcb
sub
or
sbb
pop
pop
dec
xor
scas
popa
push
in
cmp
push
sub
fldl
sub
rcll
or
add
xchg
push
iret
movsb
sub
or
aam
adc
cmc
in
mov
pop
mov
mov
jg
and
add
fidivrl
jmp
xchg
mov
ljmp
pop
inc
adc
fidivl
stos
jne
mov
mov
pushf
jbe
lea
jnp
jb
test
xor
cmp
pop
sbb
inc
cs
test
adc
lods
cmc
mov
cli
lcall
mov
into
adc
jge
rcr
mov
lock
hlt
and
mov
jbe
scas
bound
daa
pop
inc
jae
iret
mov
push
scas
add
mov
or
push
rcrl
lcall
cmp
dec
inc
jno
xorl
add
xor
cmpsb
ja
push
mov
cmp
lock
mov
jb
shrb
cmpl
mov
aam
mov
arpl
in
xchg
or
sbb
ror
lods
cmp
insb
cwtl
lcall
sub
fistpll
dec
int3
mov
lcall
dec
mov
out
push
loope
and
dec
xchg
jmp
ror
inc
repnz
lret
inc
test
inc
jle
xchg
stos
pusha
sub
dec
mov
mov
int
vmread
mov
xor
xor
fidivrl
sub
pop
dec
fs
and
jmp
nop
out
hlt
xor
sbb
je
fwait
out
pop
adc
cmp
dec
rorb
pop
popa
jnp
repnz
movsl
adc
addl
stc
mov
jle
sbb
scas
test
mov
test
push
negb
pop
movsl
xchg
dec
loopne
jp
in
inc
or
insb
insl
test
nop
daa
stos
in
adc
xchg
pushf
adc
push
mov
inc
xchg
loope
dec
test
popf
lret
ds
or
addps
adc
bound
xchg
enter
mov
jnp
mov
fistpl
mov
int
int
js
rcrl
mov
cmp
cld
mov
and
aas
pop
xor
ret
dec
loope
setb
clc
pop
xchg
push
jo
cmp
sahf
das
leave
and
jg
ficomps
lahf
push
or
adc
outsb
sub
sarl
in
cmp
ds
mov
mov
test
test
sbb
rcrb
loope
aad
repz
out
aas
xchg
pop
imul
adc
stc
gs
jle
imul
int
xchg
push
push
arpl
jecxz
cmp
lret
pop
jns
pop
xchg
cmp
jae
rcrb
sub
lock
outsl
arpl
mov
arpl
jle
test
adc
leave
sahf
sbb
lret
push
pop
xor
gs
sbb
in
subl
inc
and
pop
das
rcrb
out
lods
cwtl
mov
ja
xor
jns
mov
les
xchg
adc
shlb
cmpl
fstpl
mov
jbe
push
jo
sarl
mov
out
mov
jae
sbb
or
xchg
test
jg
push
clc
daa
gs
cmp
dec
jns
sarb
mov
rcll
clc
call
adc
and
mov
out
xchg
out
lret
jge
jno
dec
mov
cli
in
xchg
add
or
mov
dec
sti
aas
jns
add
or
hlt
jns
adc
pop
xlat
dec
cmp
stc
add
pop
into
push
insb
jno
sub
mov
mov
or
daa
ljmp
sarb
cmpsl
movsb
mov
nop
sub
inc
jns
cmp
adc
ret
ficoms
xchg
out
sub
incl
cwtl
scas
testb
cmpsl
das
jle
leave
stos
pop
insb
test
mov
add
out
push
inc
inc
addr16
mov
roll
mov
adc
repnz
cld
inc
icebp
out
adc
xor
jle
mov
fstl
mov
cmpsb
add
mov
mov
pusha
ficomps
push
sbb
sbb
inc
mov
adc
dec
push
cmc
imul
cs
add
pop
adc
xor
out
pop
jmp
or
mov
jne
sbb
add
stos
faddl
mov
test
pushf
mov
inc
std
xchg
lea
cmp
clc
cli
or
loop
xor
and
pop
cmp
sahf
adcl
mov
ja
xor
pop
dec
out
movsb
and
adc
push
fisubrl
sti
sub
and
rcrl
mov
add
add
push
fsubrp
loopne
cltd
scas
ljmp
scas
cld
adc
out
imul
test
sbbl
mov
sub
jp
das
fiaddl
ret
jle
and
aam
sbb
jle
add
gs
lods
mov
int
dec
out
jno
repnz
lcall
mov
fcmovu
jns
mov
std
movsl
out
or
fdivrs
out
sbb
sbb
jno
mov
jb
inc
pop
fisubs
xor
pop
leave
inc
jle
fs
cmp
stos
pop
je
jg
out
test
xchg
popa
cmpsb
loope
fildl
or
insb
cltd
aas
stc
and
fwait
or
or
int
pop
pushf
add
popa
fistl
into
loop
jl
push
adc
adc
pop
cmp
xchg
jbe
stos
bound
sbb
mov
leave
pop
mov
cmpsl
xchg
xchg
scas
stos
iret
fisttpll
insl
dec
mov
jmp
and
jns
out
mov
add
mov
mov
or
ror
gs
push
or
or
sahf
and
cmp
ja
hlt
sbb
add
add
lods
mov
int3
stos
mov
cmp
add
mov
scas
imul
dec
xor
aas
xchg
int
movsl
cmp
mov
dec
mov
cmp
push
ret
ds
cmpsl
pop
in
out
pop
or
adc
arpl
adc
leave
enter
cld
mov
mov
pop
mov
stc
scas
lcall
fidivrs
pushf
cmpsl
sahf
jg
inc
and
ljmp
fcmovnb
fisubrs
xchg
bnd
rorl
inc
test
mov
mov
xor
rol
cmp
popa
or
inc
ret
std
data16
lock
ja
or
or
or
lods
aas
stos
mov
jle
mov
mov
les
mov
stc
ret
dec
pop
or
icebp
cmp
movsb
adcl
jl
pop
inc
add
and
mov
and
movsb
push
aaa
lcall
cmpb
rorb
test
iret
push
addr16
in
pop
stos
scas
cmpsb
push
adc
jle
pop
cmp
sub
nop
mov
movsl
cmp
push
aas
insb
bnd
mov
cld
mov
pop
or
inc
inc
push
ret
dec
push
les
scas
push
scas
sub
or
xchg
sbb
xchg
inc
das
push
stc
ds
xor
push
cwtl
addr16
jb
xor
sub
mov
mov
push
lret
xchg
mov
inc
mov
cld
push
xchg
add
fs
insb
mov
divb
mov
sarb
dec
ret
imul
xchg
add
lahf
jo
mov
leave
cmp
popf
int
enter
fnstenv
dec
and
std
jb
std
shlb
out
pop
in
scas
sub
and
rcrl
and
sub
imul
push
xor
pushf
out
or
or
pop
pop
jno
jns
jbe
mov
int3
outsl
imul
mov
add
dec
scas
dec
insl
scas
dec
fists
adc
lahf
loope
add
repz
lret
xor
movsb
pop
pop
gs
adc
adc
jo
mov
jno
fldcw
cmp
shld
movsb
cld
lret
ss
and
outsl
xchg
mov
sbb
mov
scas
fistl
and
push
imul
lret
mov
clc
dec
stos
cmp
jp,pn
das
movsb
dec
sub
sti
je
inc
pushf
sbb
cltd
jb
mov
nop
iret
push
xor
push
or
mov
add
xchg
outsl
mov
push
inc
sti
add
rorl
popl
and
outsl
mov
scas
add
dec
xor
xchg
std
jmp
iret
test
dec
lahf
mov
sbb
pop
mov
xchg
sbb
repz
popa
dec
mov
clc
inc
out
repnz
inc
jg
sub
lahf
mov
mov
cmc
or
in
sahf
out
cwtl
ret
aaa
mov
repz
and
sub
out
and
sti
stc
mov
push
test
jae
sub
push
dec
pop
outsl
push
sub
stc
cld
fs
xchg
ficomps
sti
mov
nop
repz
sbb
cmpsb
pop
into
dec
adc
fisubrs
push
int3
sub
in
pop
insb
ja
mov
cltd
aam
int3
mov
adc
mov
out
hlt
mov
add
ja
bound
jle
xchg
arpl
mov
ret
ret
dec
push
xor
xchg
inc
sbb
popa
and
inc
movsl
das
dec
mov
lock
mov
lret
inc
xor
xchg
cli
or
adc
jg
adc
loopne
pop
nop
sbb
pop
mov
cwtl
mov
or
jns
adc
fildll
cmpsl
iret
inc
push
xchg
mov
and
cld
inc
es
scas
cmp
sbb
jb
cmc
imul
shr
out
cwtl
aam
push
jnp
mov
sbb
cmp
cs
xchg
mov
mov
shll
xchg
out
nop
outsb
push
movsb
cmp
es
insl
dec
and
ja
jl
mov
sarb
dec
xacquire
hlt
loope
insl
lret
pusha
mov
jns
daa
pushf
add
sti
pop
pop
cmp
push
add
cld
push
mov
adc
mov
imul
dec
and
jnp
and
in
sub
push
loope
cli
repnz
jg
mov
mov
cmp
jbe
cmp
test
loopne
fistl
loope
fisubrl
out
hlt
fnstenv
pop
ficomps
push
mov
push
mov
cmp
jmp
iret
pop
pop
mov
fisttpll
pop
das
cwtl
inc
cmpsl
push
inc
nop
jl
sahf
sbb
xchg
cli
cmc
cmp
cmp
push
das
xor
test
jno
xchg
xlat
stos
lds
push
and
out
leave
lods
inc
mov
jae
out
imul
mov
add
arpl
aad
loopne
inc
insb
or
push
scas
fstpt
dec
or
push
inc
fstps
and
clc
jno
shl
xor
mov
fcoml
jecxz
and
addr16
sub
mov
adc
sub
xor
daa
cmp
js
aam
jge
mov
lea
push
test
arpl
mov
ret
ljmp
out
pop
or
and
subl
and
fwait
cmpsl
dec
sbb
add
sbb
sbb
mov
lods
hlt
pop
adc
nop
imul
xchg
adc
js
or
das
and
pop
repz
xchg
daa
cmpsl
ficoms
les
sbb
add
sbb
mov
and
sti
jge
es
mov
add
fldt
sbb
lahf
and
je
mov
adc
test
jp
add
jmp
xchg
dec
outsb
sbb
sub
sub
iret
mov
aas
mov
xor
test
in
and
jns
repnz
add
int
add
cltd
in
cmp
mov
mov
mov
sbb
lods
scas
ds
dec
out
jns
pop
in
shll
cmp
and
and
js
sbb
jl
or
cmpb
jecxz
dec
sbb
les
cmp
dec
pop
jp
cltd
jg
outsb
or
inc
pop
push
ljmp
dec
and
jl
mov
xchg
or
pusha
cmp
lock
fwait
adc
jmp
jge
xchg
in
jecxz
adc
inc
ret
xor
fsubs
ret
ret
out
cld
sti
call
arpl
add
adc
or
addr16
lret
adc
lcall
mov
mov
jg
out
out
mov
pop
mov
dec
aas
test
arpl
cmp
call
das
inc
jne
pop
mov
icebp
cmpb
push
mov
fdivl
add
test
pop
mov
add
jmp
dec
lods
and
jae
movsb
pop
push
mov
or
xchg
mov
mov
jg
jl
outsb
sbb
fisttpll
movsl
mov
in
js
fsubrl
repnz
pop
call
repnz
je
clc
popf
cmc
pop
push
js
scas
bound
cmpsl
ja
cmp
xor
icebp
pushf
xor
mov
scas
shr
push
out
xchg
push
call
pop
sbb
and
cmp
out
notb
pop
leave
pop
pop
mov
mov
stos
jecxz
inc
cmp
ja
push
test
clc
orb
stos
cmp
mov
lret
dec
lods
pop
fdivrl
pushf
shl
dec
ret
sbb
sahf
xchg
je
cmp
add
push
test
sarl
mov
mov
ja
addr16
cmpsb
incl
jns
out
or
das
and
jbe
jmp
inc
mov
aaa
mov
lret
loop
xor
jns
inc
cmp
mov
daa
inc
jg
repz
push
push
and
push
sbb
lcall
stc
je
pop
mov
lods
jbe
cmpsl
loopne
mov
fsubrs
js
pop
fidivrs
repz
lock
mov
add
or
or
mov
jp
lods
jmp
cmp
repnz
lea
cmp
in
inc
xor
sbb
lret
mov
stc
and
icebp
sti
ds
cmp
lahf
rcrl
xchg
enter
and
xchg
call
inc
sbb
pusha
xchg
test
je
push
mov
push
or
int3
add
mov
stos
minps
add
push
into
adc
add
dec
pop
xor
out
repnz
adc
cmp
ret
mov
rcll
add
repnz
lods
cmpb
cltd
arpl
insb
mov
xchg
jp
push
dec
jge
das
das
sub
test
push
jg
gs
cmc
mull
or
testb
jns
in
mov
int3
insb
add
push
dec
fisubrs
inc
xchg
cmpsl
jae
pusha
jo
xlat
cwtl
clc
dec
sbb
xchg
push
jp
push
rclb
xchg
gs
cmp
jmp
ret
adcl
hlt
insl
xor
push
lret
out
fsts
cmpsb
or
sbb
test
jge
add
jns
mov
stos
lret
xorb
dec
and
sub
sub
cmp
lock
notb
movsl
push
fldt
das
in
clc
adcb
dec
mov
popf
dec
int
loope
or
popl
mov
es
mov
lret
je
mov
sbb
pop
xchg
inc
fyl2x
add
lds
in
dec
add
icebp
and
popf
jge
ret
add
dec
sti
push
rclb
pop
jge
adc
pusha
int
mov
int
loope
pop
sub
popf
lock
in
add
loope
cmpsb
jo
orl
xchg
jl
icebp
mov
pop
clc
xor
out
adc
mov
movsl
fildl
inc
inc
sbb
cmp
xor
rorl
outsb
inc
std
cmp
enter
loopne
mov
mov
icebp
xchg
popa
test
mov
ja
xchg
cmp
mov
loope
mov
jae
mov
mov
sbb
dec
or
fistps
inc
imul
hlt
pop
sub
xor
loopne
loopne
pop
loop
jns
or
imul
sub
xchg
sub
loopne
jbe
cs
inc
or
out
push
insl
movsl
adc
cmp
fwait
outsl
roll
stos
and
pop
and
xchg
add
jns
push
divl
imul
mov
mov
mov
int
stc
and
jecxz
lret
leave
mov
std
or
lods
inc
roll
loop
fwait
inc
ficoms
stos
jnp
rcr
or
dec
ds
xor
adc
aas
push
movsl
push
jge
dec
pop
cmp
arpl
xchg
xor
dec
jb
cmp
insb
mov
imul
sbb
fmuls
lea
xchg
shll
ret
jp
push
or
ljmp
sub
add
je
push
lods
xchg
ss
sub
mov
push
cmpsb
cmp
arpl
movb
xlat
or
lods
cmp
jle
xchg
mov
push
jle
out
fdivrl
ja
std
nop
imulb
int3
and
mov
sbb
stos
cmovno
mov
clc
filds
out
pop
mov
cmp
es
lret
stos
sarb
sub
fs
sahf
mov
pop
roll
and
push
fsubrl
test
cwtl
cmp
sub
pop
cmc
xor
loope
out
sub
mov
rcrb
call
mov
sub
mov
bound
fsubrl
push
into
jl
mov
pop
pushf
shlb
mov
inc
jae
cmpsb
pushf
dec
mov
clc
out
fmull
cmpsl
imul
xor
jecxz
enter
adc
mov
or
call
sub
lock
aam
dec
loopne
mov
or
push
stos
xlat
cmp
jae
shlb
fldenv
and
std
or
adc
mov
push
fwait
mov
xchg
adc
xor
xchg
mov
in
pop
sbbb
xchg
sbb
outsl
mov
or
lcall
sub
fistpl
in
jno
lret
or
ret
mov
fwait
test
pop
push
adc
aam
inc
aas
lcall
out
mov
sub
xchg
int
scas
negb
xor
push
aad
mov
jbe,pt
or
xor
in
fstpl
push
icebp
ja
pop
adc
inc
mov
and
jg
mov
sarl
ret
mulb
adc
lret
mov
mov
jmp
loopne
insl
pop
fnstcw
scas
add
pop
pusha
in
loopne
aad
es
and
cmp
icebp
mov
call
frstor
jmp
add
ss
xlat
outsl
mov
test
cmp
hlt
lret
push
out
jns
addr16
out
mov
sbb
sarl
add
push
jb
testl
daa
dec
cmp
imul
mov
sub
xchg
ficomps
xor
push
movsl
push
movd
xor
add
movsl
outsl
sbb
add
xchg
pop
inc
mov
idivb
imul
sub
fcomi
xchg
shrl
outsl
ficomps
imul
add
shr
cmpsb
mov
xchg
push
or
arpl
xchg
push
nop
dec
andl
or
cmpl
std
sbb
mov
inc
jne
ret
test
jecxz
shl
mov
aaa
and
or
or
int
pop
pop
push
and
out
pop
mov
ret
sub
fdivrl
test
leave
js
jb
adc
add
inc
ss
add
enter
mov
clc
sbb
cmp
movsb
lret
adc
pop
and
mov
jbe
or
dec
pop
jl
loopne
fcmovb
pop
dec
mov
cmovle
mov
mov
iret
fs
dec
enter
mov
rol
push
std
cmp
xorb
sbb
xchg
rorb
idivl
fisubs
shll
rorb
pop
stos
dec
mov
xchg
aam
push
stc
pop
mov
test
pop
lds
repnz
xchg
cmp
mov
out
mov
push
enter
inc
test
xchg
fdivrs
iret
repz
lcall
xor
shrb
in
mov
lea
or
sub
insb
stc
fmuls
mov
dec
jno
mov
nop
dec
xor
cmp
push
cmpl
mov
xchg
in
jo
sub
icebp
mov
pop
lret
popf
pusha
out
mov
push
sub
sahf
push
out
out
or
dec
mov
subl
jge,pt
cwtl
ror
xor
popa
aas
mov
xchg
fdivs
jl
or
adc
or
xchg
cmp
adc
andb
pusha
or
cmp
imul
out
scas
adc
xor
fadd
scas
xchg
je
and
jbe
push
and
aam
fdiv
lods
xchg
dec
cmp
xchg
stos
enter
addr16
jb
pop
ret
int
pop
jge
popf
fdivs
cli
jno
loop
push
into
inc
shrb
mov
jg
decb
push
jne
cwtl
icebp
in
cmp
lds
xor
pop
mov
jle
lea
inc
adc
mov
orl
lret
ljmp
pop
shlb
movsb
and
in
arpl
jno
push
test
out
adc
and
mov
pusha
xchg
movsb
jmp
pop
jge
dec
add
sti
pop
push
dec
ss
pop
pushf
dec
xor
pushf
loope
testl
test
xlat
cmc
fcmove
mov
out
es
push
in
fidivs
xlat
cs
cmp
sbb
and
or
pop
ret
xchg
data16
pop
jno
push
out
cs
push
mov
mov
out
neg
fs
shl
ss
insb
sarb
pop
in
xchg
sub
repz
jmp
xchg
mov
or
dec
adc
sub
push
xlat
add
cmpsb
movsb
or
lret
pusha
sahf
inc
mov
xor
or
repnz
cmp
sub
sub
sub
jecxz
in
add
test
stc
jno
or
mov
push
jge
push
test
jg
xcrypt-ctr
cmpsl
pop
add
push
jno
out
jno
lret
test
mov
xor
xchg
adc
orb
sub
sub
add
xor
test
mov
sbbb
and
jo
test
loop
mov
lock
mov
sbb
dec
fidivrs
cmp
jns
loopne
inc
popa
cld
rolb
push
sub
jae
lret
push
arpl
rcrl
rcl
in
pop
loopne
xchg
jg
sbb
loope
add
or
daa
sub
sub
mov
xor
mov
daa
sbb
push
pop
jo
inc
push
lods
mov
loope
push
sub
nop
mov
push
jae
stc
mov
orb
cltd
add
hlt
popf
lds
push
movsl
jg
or
add
je
outsl
pop
cmp
pop
sub
mov
subb
lea
mov
sub
sub
clc
push
add
lcall
popa
xor
dec
inc
rol
aad
mov
ficomps
adc
push
xchg
sbb
mov
sti
sub
sbb
call
scas
cmp
or
mov
pop
mov
inc
lods
lds
lret
subb
inc
pop
mov
jo
lock
test
cmp
xor
fisubl
inc
xor
xor
testb
adc
pop
inc
subb
out
inc
faddl
sti
divb
cmp
into
js
sbb
adc
xchg
xchg
xor
mov
sbbl
out
ljmp
loope
sub
and
dec
cmp
cld
enter
push
pop
neg
aam
shl
lcall
adc
cmp
mov
cltd
push
xchg
xor
daa
adc
xchg
mov
sbb
lret
addr16
adc
or
push
xor
and
adc
sar
cmc
and
rcrb
push
cmpsb
sbb
enter
pop
dec
jae
dec
das
stos
push
hlt
roll
jmp
pop
mov
xchg
js
jns
fadds
fists
sbb
mov
in
movsl
arpl
add
fstl
lock
pushf
inc
or
sbb
loope
mov
stc
call
cmp
jae
xlat
push
push
push
lcall
cmp
fdivrl
outsl
cli
test
imul
mov
and
dec
xor
or
jae
ror
push
inc
xorl
and
repz
push
nop
adc
fsubl
jns
xchg
push
shrb
js
jo
inc
jecxz
movsl
bound
imul
cmpsl
mov
mov
cmpsl
cmc
jb
xor
sahf
jg
clc
es
fwait
stc
test
cmp
inc
bound
jno
xchg
pushf
mul
out
gs
popa
add
daa
mov
sub
out
push
sub
adc
enter
fistl
mov
cmpsb
adc
test
fsubr
scas
fwait
out
dec
jp
in
mov
xchg
shrb
test
les
xor
cmp
fwait
cmp
lock
push
mov
cmc
and
dec
jg
cltd
shrb
mov
and
mov
push
mov
mov
inc
jge
and
xor
rcrb
cltd
jecxz
icebp
sbb
push
sub
data16
clc
cmpl
movsb
out
sbb
inc
lret
or
mov
scas
jle
jnp
cmp
xchg
daa
sbb
cmp
sti
in
out
icebp
inc
xor
enter
iret
hlt
add
xor
or
dec
jecxz
sbb
mov
shrl
dec
sahf
std
andb
sahf
sub
pop
in
loope
push
data16
pop
fildll
in
sub
add
rolb
push
fistps
cmp
nop
sub
push
sahf
loop
sbb
xchg
imul
jecxz
les
mov
subl
mov
dec
xchg
fwait
cmp
push
daa
gs
mov
dec
icebp
inc
stos
lds
imul
hlt
cmp
xchg
sti
sub
jae
roll
push
or
dec
adc
cli
fidivrl
cmp
mov
xchg
inc
out
sbb
adc
enter
push
xchg
xchg
add
mov
outsb
and
je
xor
jecxz
mov
aad
sub
cmp
xlat
loopne
outsl
push
adc
cld
sub
mov
and
aaa
xor
scas
je
pop
les
xchg
mov
mov
xchg
icebp
dec
jecxz
loop
mov
pop
movsl
sbb
mov
sahf
leave
iret
or
mov
push
pop
loopne
fcoml
sbb
imul
rorl
imul
inc
pop
inc
adc
arpl
adc
test
or
and
sbb
cmp
addr16
popf
sbb
cmp
pop
cli
lahf
mov
ljmp
idivb
jge
loope
mov
fnstsw
aam
push
test
xchg
jns
loope
dec
idivl
jle
push
sti
mov
jne
push
adc
sbb
outsl
test
stos
adc
or
push
aad
cmpsb
lods
inc
sbb
push
jb
fisubl
das
fsubp
je
sub
push
pusha
xor
xchg
mov
xchg
inc
int
daa
fistps
in
int
int3
fsubrs
lret
and
fwait
sbb
jg
mov
pop
xchg
ror
rolw
xor
mulb
inc
rcll
aam
ljmp
pop
dec
shl
jmp
jno
mov
popa
jp
mov
popa
mov
ds
push
rol
rolb
cmp
lret
and
inc
cmpsb
into
test
xor
xchg
pop
fs
pusha
popf
test
stc
inc
add
lret
rcrl
mov
adc
xchg
and
pusha
lret
sbb
sbb
or
cwtl
push
mov
hlt
pop
jmp
shll
sti
xor
stos
mov
fisubrs
mov
jl
sbb
mov
repz
jecxz
xor
mov
mov
stos
scas
mov
mov
loopne
or
dec
cwtl
and
cmp
xor
mov
xor
jg
mov
inc
cmp
stos
enter
stc
sbb
pop
das
les
fwait
xor
jnp
out
pusha
dec
rcrl
adcb
cmpsl
xorb
add
stos
subb
shll
adc
dec
and
xchg
icebp
dec
dec
xchg
jne
push
jno
jbe
das
loopne
lds
dec
cltd
jo
and
imull
or
les
out
cmc
jnp
push
cs
test
scas
push
pop
shlb
mov
adc
aad
lock
push
jmp
cmp
sub
jp
cmp
das
fisubrs
icebp
xor
jp
and
test
bound
xor
imull
imul
scas
jnp
xor
mov
repz
and
jmp
and
add
or
dec
pusha
mov
sub
icebp
add
das
ja
fiaddl
dec
push
or
sub
xchg
out
sbb
das
pop
or
nopl
mov
pop
inc
jb
mov
mov
xchg
pushf
jo
inc
sub
xor
inc
fdivrs
shrb
in
or
sahf
sub
and
cli
fmul
inc
pop
inc
push
cmp
add
test
add
mov
movsb
imul
cmpb
stos
outsl
jecxz
dec
lods
loopne
scas
sub
in
mov
scas
ljmp
pop
outsb
addr16
fcompl
je
dec
ja
in
add
inc
jo
or
lahf
sbb
movsb
xchg
iret
es
dec
jnp
cs
mov
inc
mov
jge
or
out
repz
jno
adc
adc
mov
xchg
fisttpl
ret
lret
adc
out
pop
fcoms
gs
notl
and
jg
fsin
lret
mov
dec
mov
outsl
movsl
test
inc
out
jmp
jmp
shl
dec
mov
mov
imulb
jns
push
pop
mov
test
out
imul
mov
js
das
jns
mov
or
mov
inc
out
push
sub
adc
aaa
add
adcl
incl
rcrb
xchg
popa
jne
enter
shll
dec
jl
dec
leave
imul
inc
push
jecxz
pop
ret
push
pop
pop
jo
lret
ficomps
cmp
pop
push
lock
cmp
add
mov
lds
cltd
stc
xchg
insl
inc
mov
xor
jnp
lret
loope
cmp
jecxz
cmpsl
scas
je
pusha
mov
loopne
sti
in
jnp
mov
add
int
inc
jge
shlb
or
shlb
ljmp
in
push
dec
pushf
xor
mov
jb
popa
sub
mov
push
stc
jmp
add
dec
fistl
mov
rcrb
insl
aam
xchg
xchg
adc
lods
or
push
jo
and
xchg
into
pop
xor
sub
sub
xchg
addr16
dec
jo
add
rcl
jecxz
loope
lret
subb
mov
mov
sub
test
out
and
stc
adc
imulb
xchg
loopne
mov
loopne
add
rcrb
mov
add
sbb
push
jae
jecxz
and
fildll
movsb
int
idivb
fisubs
mov
jecxz
mov
pop
mov
or
scas
push
push
xchg
or
pop
call
add
sbb
nop
push
ss
push
outsl
out
push
push
pop
xor
mov
xchg
xor
aaa
sbb
lods
cmp
pop
xlat
mov
or
loope
mov
pushf
jl
add
lcallw
minps
xchg
sub
adc
mov
or
adc
repnz
or
cmpsl
cmpsl
movsb
jge
cs
addb
icebp
push
leave
ret
sub
cwtl
mov
inc
call
push
add
fwait
mov
xor
mov
adc
jg
push
lahf
jne
lcall
pusha
sbb
mov
jno
dec
mov
add
sub
shll
in
jnp
pop
movsl
mov
out
mov
lock
imul
scas
lcall
cld
mov
cmp
rcrb
mov
fwait
pop
rcrb
cmp
inc
xchg
sahf
leave
and
sub
nop
mov
jle
mov
or
or
sub
movsl
sahf
testl
in
xchg
filds
insl
movl
and
mull
add
mov
fwait
lock
sub
scas
xor
sbb
sbb
mov
cmp
scas
fisubrl
ljmp
test
hlt
xchg
push
xchg
hlt
es
cld
loop
mov
add
ret
sahf
pop
push
dec
stos
push
setno
or
add
mov
push
push
mov
rorl
inc
aad
and
roll
mov
sub
cmp
cmp
ret
cmp
mov
pop
push
jmp
xchg
dec
mov
sub
dec
sahf
and
cmp
imul
inc
repz
insb
xchg
and
in
xchg
inc
loop
filds
pop
sti
dec
add
sub
mov
fstps
xor
dec
aaa
pop
in
shr
push
popa
adc
cmp
hlt
ret
add
pop
rcrl
sbbl
outsb
leave
pushf
subb
or
pop
icebp
add
xchg
mov
sbb
push
pop
mov
insl
jne
dec
cmp
dec
clc
pop
addl
xchg
outsl
into
mov
rcll
or
mov
pushf
pop
jbe
sub
imul
lcall
mov
ror
mov
fbstp
sti
imul
adc
sub
into
iret
cli
pop
sub
call
jp
fidivl
jl
test
or
stc
js
jge
xor
lret
lahf
mov
sub
cmp
out
adc
xlat
std
std
or
in
pop
enter
pop
sub
cltd
mov
and
aam
rorl
jns
cmp
xchg
push
adc
cld
add
lret
push
inc
and
mov
inc
call
mov
xlat
out
insb
sub
and
inc
jb
cmp
mov
lods
fs
or
and
arpl
and
in
gs
int
mov
cmp
icebp
and
adc
imul
mov
mov
mov
imul
fcompl
xchg
adc
add
fnstsw
ss
in
and
loope
jnp
outsb
sub
pushf
push
or
adc
cs
and
mov
and
outsb
dec
mov
addr16
test
fs
ret
mov
or
cmp
ljmp
xor
popa
pushf
bound
roll
lods
xchg
sbb
mov
popf
pop
cmp
cmpsl
add
adc
cmpsl
mov
lcall
mov
xor
insb
inc
add
cmp
jbe
push
ret
inc
lcall
adc
xchg
stos
or
movsl
rcll
ret
cmpsb
or
xchg
popf
sbb
fdivrp
out
out
jnp
inc
add
jnp
mov
imul
iret
std
mov
and
insb
jp
pop
js
mov
scas
pop
push
jmp
and
stc
outsl
sub
js
stos
rclb
pop
lahf
fcom
cwtl
cmpsl
sbb
movsl
in
mov
push
mov
jp
pop
inc
jmp
inc
mov
dec
fstl
nop
ljmp
stos
lea
shlb
movsl
xchg
inc
fisubl
jbe
in
repnz
pop
sub
push
mov
cli
or
push
mov
sub
jnp
lock
pop
lea
ficoms
inc
les
push
std
cli
sarb
sub
pusha
inc
adc
push
pop
orb
mov
scas
std
roll
inc
stos
or
inc
icebp
mov
cmp
xchg
cmp
dec
daa
je
inc
addr16
mov
dec
push
js
test
mov
mov
js
add
dec
adc
xor
or
push
dec
dec
inc
xchg
out
pop
xorl
add
add
es
cmp
ss
rorb
mov
inc
cmpsl
push
mov
dec
xor
push
dec
rolb
fsubrl
in
xor
xchg
mov
cmp
xchg
out
sbbb
mov
cli
dec
shll
clc
stos
sub
adc
sbb
scas
loop
xchg
xorb
pop
add
cli
mov
xchg
cld
mov
shl
fldl
js
sbb
leave
jge
stc
cltd
lods
jae
mov
sub
cmp
push
xor
or
dec
aad
mov
inc
sbb
enter
add
test
out
call
jg
test
les
xchg
mov
or
ret
sub
fistl
inc
pop
pop
or
sub
xor
cmp
pop
pop
jb
orb
push
cmpsb
clc
inc
xor
aas
dec
daa
outsb
sbb
push
loope
iret
mov
mov
movsl
out
push
fimull
push
cld
adc
jmp
mov
mov
cmp
xor
push
out
mov
sbbl
mov
in
int
fcmovnu
add
rcr
adc
andl
dec
xlat
xor
lcall
push
out
roll
push
insb
inc
lret
sub
int3
or
out
dec
mov
push
scas
imul
sbb
push
jb
lods
gs
ljmpw
mov
out
stos
pushf
aam
cmpsb
stc
xor
jbe
xchg
clc
lods
es
fs
cmp
pusha
jmp
sahf
mov
push
or
xor
push
push
mov
in
stc
xor
sbb
jmp
mov
jo
or
sub
js
jno
ds
lods
pop
outsb
aas
and
dec
fcompl
push
test
jmp
pop
inc
and
sbb
idivl
mov
mov
sbb
sarb
add
pop
aad
pushf
adc
mov
inc
rolb
loope
inc
pusha
xchg
hlt
inc
std
fwait
jbe
jge
lret
clc
jb
mov
fscale
emms
inc
in
aad
dec
mov
fistpll
jne
rcrl
cmpsl
pusha
loope
cmpsb
shrl
mov
push
in
test
ret
bound
add
lods
xor
mov
or
ret
decb
or
mov
orl
add
dec
js
jp
fcoml
sarl
mov
cld
fidivrl
popa
pop
xchg
out
popf
into
push
adc
sarb
fiaddl
iret
mov
pop
pop
mov
add
sarb
imul
dec
pop
das
mov
insb
push
outsl
data16
test
arpl
adc
mov
xchg
loopne
pop
nop
jbe
jno
pop
mov
adc
sbb
mov
xlat
mov
int3
cmpsb
fistpl
rcrb
nop
push
bnd
jecxz
ret
scas
or
fldl
mov
imul
jle
lods
mov
cld
jae
jge
push
sub
test
divb
ret
movsl
sub
mov
fidivs
push
mov
pop
cli
cmp
push
sub
cmp
jecxz
repnz
mov
push
mov
mov
fdivl
or
jl
das
xchg
cmpsl
iret
inc
out
xlat
cltd
xor
imul
mov
pop
and
mov
add
imull
pop
lret
jae
sbb
outsl
xor
ljmp
mov
jnp
icebp
mov
rcl
mov
loop
add
mov
ret
cwtl
jp
sub
jne
dec
mov
popa
jle
and
roll
ret
imul
mov
cmp
fisubl
mov
cmp
bswap
testb
lret
mov
leave
xor
std
insb
inc
adc
es
add
sti
jne
adc
inc
mov
cmp
jp
sbb
mov
fs
scas
les
std
jns
cmpsl
jmp
jns
push
xchg
and
mov
and
cmpsl
aam
pop
jo
scas
mov
and
dec
lods
sahf
mov
loope,pt
mov
rcrb
fwait
sti
ljmp
or
repnz
cld
adc
mov
bswap
in
insl
mull
mov
or
xor
sbb
lahf
inc
mov
sbb
adc
cmc
and
and
and
jge
mov
mov
inc
dec
pop
and
lods
mov
repz
add
xor
or
jno
outsb
cmp
push
inc
adc
ljmpw
ret
popf
cmpsl
out
push
mov
inc
addr16
call
hlt
adcb
lods
dec
sub
cmp
cmp
and
pusha
pop
popf
cmc
cmc
lcall
mov
out
jno
xchg
shlb
pop
sub
push
leave
mov
adc
pop
sub
xchg
aam
dec
pop
and
dec
movsb
lahf
ljmp
sbb
shll
push
xlat
jp
je
pop
sub
pop
rorb
imul
fmull
jns
xor
hlt
mov
mov
jle
cmp
test
jmp
jmp
and
adc
shrl
stos
lret
jecxz
jno
in
cli
rol
idivl
inc
movsl
xchg
push
add
push
inc
into
arpl
flds
sysenter
loopne
clc
repz
out
popa
pop
insl
clc
das
xlat
pop
jle
mov
sub
adc
mov
insl
adc
mov
fisubs
std
cmp
popf
addr16
add
movsb
add
xchg
sti
add
and
or
dec
loop
sub
imul
dec
pop
sti
shrb
jmp
mov
jp
call
cmp
sub
and
cs
pop
int3
sbb
js
adc
jo
in
imul
lcall
xchg
inc
popf
lcall
mov
jne
ljmp
out
mov
dec
mov
and
jmp
add
push
xorl
mov
inc
lods
popf
out
addr16
aas
testl
loope
out
pop
test
sti
icebp
ret
fsubrs
sub
outsl
push
das
das
xlat
movsb
sbb
mov
cmpsl
xchg
cmc
or
add
xor
xchg
ja
mov
dec
das
roll
jbe
std
push
hlt
push
mov
push
xor
stos
mov
pop
test
mov
and
push
add
mov
cmp
sub
fs
icebp
mov
pop
push
rcr
cmp
movsl
sub
mov
add
fmuls
add
pop
xchg
insb
cmp
inc
push
das
fiadds
or
fs
sub
mov
aam
push
mov
jbe
push
adc
ja
sahf
cmp
inc
xchg
jp
cmp
sub
pop
sbb
jns
fldenv
sub
popa
rorb
cmp
push
cmc
cmp
xchg
mov
inc
cwtl
nopl
pop
sbb
cltd
sub
sub
push
or
xlat
push
aaa
out
add
cmp
dec
pop
enter
outsl
mov
cltd
xor
jmp
mov
cmp
mov
add
fisubs
loopne
push
mov
ss
cmp
mov
in
idiv
call
iret
hlt
rcl
push
or
sbb
fwait
push
push
lds
mov
sub
fcomps
adcb
jmp
jl
cmpsb
stc
mov
mov
outsb
sub
push
xchg
push
mov
in
ficomps
pop
cs
fs
and
cmp
std
sbb
orl
scas
xchg
add
lret
popf
out
rclb
pushf
add
out
into
dec
cmp
sahf
mov
or
mov
pop
aad
in
sar
pop
jl
push
jmp
jg
fnstenv
aad
filds
xor
mov
mov
add
push
iret
rolb
imul
inc
cld
stc
push
rclb
pop
sahf
mov
push
cmp
nop
into
test
outsl
sbb
pushf
and
and
add
mov
aam
push
rolb
lods
lea
aas
mov
iret
cmp
sub
xchg
push
sbb
cmp
inc
ljmp
aaa
mov
xchg
mov
xor
aaa
push
sub
xor
cmp
cmp
inc
stc
cltd
pop
mov
cmc
flds
xor
pop
test
mov
lret
stos
hlt
mov
adc
in
mov
clc
xchg
pmovmskb
add
ljmp
jns
mov
pusha
lret
pusha
xor
js
xchg
repnz
adc
rolb
lods
das
pop
mov
stos
mov
ljmp
xor
cmpsl
imul
ret
gs
or
pop
mov
jecxz
in
enter
je
in
cmpsl
lds
pop
or
sbb
mov
out
pop
ja
shlb
rolb
mov
fwait
and
data16
ss
out
and
lahf
shll
enter
repz
mov
push
loop
leave
jle
scas
pushf
inc
inc
ja
adc
or
cmp
or
arpl
mov
aam
pop
mov
ret
add
pop
cmp
or
and
push
ret
inc
outsb
mov
dec
fists
punpckhdq
inc
add
or
xchg
adc
and
xchg
inc
fsubrs
out
or
movsb
imul
mov
adc
mov
push
cmp
cmp
sub
mov
data16
icebp
sub
testb
es
inc
mov
stos
adc
shlb
jae
scas
andb
inc
fiaddl
jno
sub
mov
inc
jp
or
xchg
leave
sarb
outsb
xlat
out
cmpsb
inc
pop
xchg
and
movsb
push
mov
push
xchg
sub
sub
int
out
mov
and
subl
xlat
int3
sbb
push
in
cmp
mov
adc
daa
mov
sub
mov
xor
jne
int3
mov
cmp
fcoms
in
sarl
negl
sbb
pop
and
shrl
or
inc
imull
cltd
popa
adc
mov
mov
out
xor
inc
sub
notb
xchg
fnsave
outsb
mov
outsl
std
inc
xor
sahf
sub
or
imul
mov
testb
or
inc
into
lock
lea
fwait
lods
lcall
repnz
loopne
and
nop
imul
cmpl
dec
push
inc
nop
loopne
aas
lods
jns
das
and
sarb
pop
mov
push
jp
dec
cmc
ss
xor
mov
dec
and
rcl
vunpckhps
cmpsl
in
pop
jg
outsl
xchg
sub
daa
add
and
mov
adc
test
fdivrl
stc
fimuls
cli
push
sbb
lods
sub
pusha
out
test
rcrb
and
roll
lods
mov
gs
cld
fnsave
shrl
lods
pop
aam
mov
push
mov
mov
lock
scas
xchg
mov
jle
ja
mov
jle
cltd
cmp
mov
jle
cld
pushf
mov
jb
mov
iret
mov
xchg
ss
mov
mulb
lea
sbb
popl
cmc
or
fisubl
xchg
mov
mov
sub
pusha
mov
repz
andb
in
push
pop
cmc
mov
sub
inc
fdivr
mov
rolb
or
aad
adc
shll
jecxz
stos
xor
sub
inc
add
cmpsb
lds
mov
or
in
mov
sbbb
inc
push
cltd
popa
loop
enter
nop
outsb
inc
out
add
push
in
hlt
cmc
cmp
adc
pop
pop
dec
loope
cmp
sub
cld
cmp
mov
adc
xor
pop
stos
sbb
hlt
pop
jmp
push
call
push
movl
pop
or
into
mov
sub
fs
mov
xchg
pop
cs
mov
dec
push
punpcklwd
pop
mov
das
cmp
rorb
scas
cld
lock
sbb
jns
mov
fiadds
ret
es
fwait
push
inc
adc
xor
nop
cmc
pop
cwtl
ja
adcl
aaa
dec
test
push
xor
sbb
fsubrp
arpl
repz
sub
fsts
movsl
pop
xlat
cli
mov
or
sahf
iret
loop
pop
mov
mov
jmp
mov
or
push
mov
adc
es
int
andl
or
inc
je
rcl
sbb
xchg
and
subb
mov
xchg
ficoml
jl
fldcw
je
adc
imul
mov
cmp
clc
sbb
mov
in
popa
insb
add
cli
out
lret
mov
das
stos
arpl
aaa
sbb
add
xchg
loopne
orb
jmp
adc
or
mov
stos
mov
push
jns
inc
leave
sub
xchg
pop
shl
aaa
pop
rcrb
jae
jo
xchg
pop
out
lods
in
mov
cmp
sub
pusha
in
inc
insb
xlat
in
sub
sbb
dec
test
movsb
jne
addb
mov
sbb
popa
aas
and
repnz
iret
cmp
clc
lods
xchg
enter
xor
loopne
dec
push
insl
push
jge
adc
pop
add
pop
inc
fildll
push
adc
adc
notl
or
jno
push
sbb
dec
mov
or
ret
nop
pop
fidivs
arpl
xor
inc
or
or
xchg
pusha
test
adc
mov
pop
mov
das
sbb
shlb
shrl
mov
rolb
sbb
fistpl
int
ret
inc
out
enter
add
fdivrp
xor
pop
sbb
scas
xlat
flds
pop
jp
and
nop
push
in
ja
cmpsb
je
adcl
or
movsl
ljmp
shlb
jl
ds
outsb
push
iret
mov
mov
inc
pop
aam
clc
jp
adc
mov
shll
stos
cltd
es
dec
mov
xlat
ret
movb
mov
xor
das
sub
xor
into
and
rclb
mov
xchg
loop
or
dec
add
in
bound
xor
in
inc
fcmovbe
dec
sub
jne
lahf
push
or
cltd
mov
sub
xchg
call
push
pushf
and
push
lcall
test
or
inc
andl
int3
sub
mov
xchg
stos
mov
xchg
xor
inc
sbb
sbb
movsb
addr16
and
das
inc
fprem1
data16
pop
xchg
add
repnz
sbb
or
dec
sub
sar
or
mov
scas
dec
clc
mov
fldt
mov
xor
pop
xor
mov
mov
dec
xchg
xor
sbb
dec
sub
inc
dec
lds
pop
sub
jmp
mov
es
sbb
push
pop
cmp
repz
insb
scas
out
iret
lds
out
leave
test
icebp
mov
push
test
sbb
cmc
es
daa
jg
mov
adc
mov
xchg
lret
adc
mov
jl
repnz
mov
push
sub
or
stos
scas
out
dec
adc
xor
jmp
sbb
imulb
ljmp
xchg
xchg
cwtl
and
jne
rorl
fwait
cli
clc
jae
xor
pusha
cmp
test
fidivrl
cwtl
in
add
pop
mov
in
dec
sbb
adc
mov
xor
daa
repnz
jmp
xchg
xchg
push
rcl
ja
sub
adc
cmpsb
pop
in
loop
add
push
pop
out
decl
mov
sbb
aaa
pop
mov
adc
pop
lock
cmp
pop
sub
test
sbb
popl
jle
lds
ret
add
xlat
or
push
divl
mov
push
ja
roll
add
mov
xor
lret
mov
xchg
push
in
loop
jg
sbb
cld
mov
pop
jge
fs
test
pop
stos
in
and
or
aaa
cltd
outsb
jle
sarb
sbb
xchg
aam
dec
adc
or
fwait
insl
shl
test
mov
adc
in
pop
xchg
inc
mov
jle
or
sbb
xchg
movsl
dec
rorl
popa
mov
sarl
dec
outsb
test
or
das
sbb
mov
dec
sbb
xchg
sub
test
sbb
test
and
xor
adc
mov
cmc
push
cli
or
inc
shll
inc
pusha
jle
add
mov
jne
inc
les
mov
xchg
sub
xlat
rcll
mov
nop
xchg
mov
pop
sbb
add
ja
or
enter
mov
and
fnstenv
push
out
pop
xor
repnz
jp
jmp
clc
jo
mov
stos
mov
lcall
callw
inc
mov
jp
mov
loop
jge
push
jmp
sub
hlt
adc
dec
push
pop
mov
or
cld
push
jmp
jns
xchg
popf
fmull
test
into
jbe
cwtl
out
testb
jle
or
dec
pop
cmpsl
xchg
push
inc
fisttps
idivb
add
or
add
test
sub
jae
pop
pop
cmpl
jo
mov
les
xchg
movsl
add
icebp
add
loop
sbb
push
xchg
jle
loopne
outsl
int
arpl
cmc
dec
xor
popf
rcrl
dec
dec
repz
jae
add
sbb
ss
fsubl
pop
jno
xlat
mov
fs
xchg
jae
lods
pop
sub
sub
add
jns
and
jle
jmp
push
popa
aam
push
mov
inc
out
inc
aam
adc
add
push
movsl
add
push
fwait
mov
inc
pop
sub
stos
out
or
ljmp
or
mov
stos
clc
out
roll
movsl
jge
push
mov
jecxz
lods
movsb
stos
in
lcall
dec
sbb
lea
mov
out
cs
in
fstl
enter
dec
insl
outsb
mov
sbb
addl
xchg
sarb
and
jmp
fmulp
mov
stos
push
push
jo
fstps
fwait
jl
mov
sti
push
dec
mov
sub
xchg
popa
mov
ret
insb
addr16
or
adc
dec
push
and
or
inc
scas
adc
popa
sub
paddusw
fcoms
fwait
add
lret
cmpsb
jb
sbbl
js,pn
sub
imul
bound
ljmp
stos
mov
pop
outsb
ds
nop
dec
push
or
int
sahf
xchg
in
adc
shrb
pop
pushf
mov
jbe
mov
in
mov
sub
push
dec
sbb
rcr
pop
les
mov
sbb
dec
fsub
and
dec
fptan
nop
aaa
jg
add
mov
iret
lahf
fcoml
flds
cmpsl
push
push
outsb
mov
jne
mov
loopne
mov
add
sub
inc
stos
mov
adc
loopne
popa
mov
push
xor
rcrb
cmpsl
test
or
test
fdivrl
pop
in
mov
cmpsl
mov
movsb
pop
jns
jb
test
xor
xlat
scas
sarl
xchg
lret
cs
cmp
pop
push
movsb
popl
dec
xchg
inc
push
ja
pop
rorl
xchg
outsb
lods
mov
inc
sub
jmp
adc
addr16
out
adc
jmp
std
ss
jbe
sbb
mov
loope
pop
lods
xchg
es
mov
jae
jmp
pop
movsb
pusha
inc
xchg
call
sbb
xor
out
push
pop
dec
sub
add
inc
cmp
movsl
out
sub
mov
scas
push
lret
cmpb
xor
insl
dec
push
ds
pop
out
xchg
push
adc
stos
int
xor
ja
dec
mov
lock
ret
xchg
sub
cmp
jno
cmpsb
inc
fldcw
nop
fildl
xor
mov
sbb
pop
dec
fwait
mov
mov
jb
inc
jbe
enter
mov
frstor
insb
mov
fwait
sub
lret
xchg
jb
int3
pop
dec
imul
sub
mov
jo
stc
dec
movl
or
adc
dec
es
jle
ljmp
repnz
xor
or
push
sahf
and
jno
test
out
pop
ljmp
jae
xor
pop
jbe
push
out
js
cltd
rcll
mov
je
into
xchg
into
push
mov
push
out
xchg
scas
fwait
or
mov
dec
sub
fimull
dec
aaa
mov
ljmp
inc
enter
insb
xchg
aaa
cmpsl
push
test
adc
mov
inc
out
xchg
and
mov
cmp
xor
out
jnp
jno
push
and
fsts
adc
mov
loop
or
xchg
mov
xrelease
aad
in
cmp
lret
dec
mov
test
inc
repz
and
shr
dec
pop
adc
arpl
in
and
fldt
sbb
push
mov
enter
mov
div
test
lods
outsl
or
cli
scas
int
inc
dec
mov
cmp
dec
mov
stos
jle
sub
push
hlt
sub
das
out
mov
xor
add
or
cmp
sub
enter
mov
mov
pop
or
sti
pop
fbstp
aad
push
xor
sahf
std
mov
inc
mov
xor
rol
adc
movsl
jle
shll
out
pop
imul
sbb
pop
adc
jecxz
aaa
push
dec
test
insb
mov
out
out
bound
jp
mov
in
bound
xchg
fwait
test
pop
cld
sub
adc
fidivl
dec
jo
icebp
mov
gs
add
jge
xchg
inc
subb
mov
add
xchg
fs
pop
or
push
ljmp
jbe
divl
dec
mov
jno
mov
stc
cmp
in
rcl
inc
push
fldt
andl
lods
ss
insl
adc
jp
cmp
ret
movsl
or
popa
mov
cmp
adc
in
ss
push
test
xchg
sahf
daa
insl
cmp
rorl
rdtsc
mov
or
jne
jbe
mov
inc
mov
jle
mov
les
cwtl
stc
das
loopne
aad
jp
jl
sub
scas
and
scas
xchg
xor
sub
out
jb
sbb
hlt
frstor
out
mov
les
inc
in
imul
add
and
ret
mov
mov
mov
cmpsb
ja
xlat
add
leave
pushl
sbb
sbb
mov
lret
sar
push
inc
mov
xchg
rcrl
push
jle
lds
cltd
lods
insb
or
dec
aas
orb
stos
mov
enter
cli
sbb
push
test
call
fwait
adc
data16
in
mov
add
dec
cmpsl
in
push
inc
daa
aad
jl
outsb
cwtl
cmp
hlt
inc
lods
push
xchg
dec
pop
fwait
or
sarl
lahf
or
pop
shll
xchg
jle
aam
adc
je
adc
jmp
inc
enter
test
sub
loope
dec
test
mov
and
cld
or
repnz
push
mov
test
movsb
hlt
inc
adc
outsl
cmp
sbb
mov
stos
lea
sub
inc
in
mov
adc
mov
call
test
xlat
out
cltd
ret
sub
fstps
ret
push
mov
mov
jmp
xlat
pop
xchg
pop
repnz
mov
and
into
dec
sahf
push
arpl
cmpsl
js
stos
sbb
push
test
jg
sarb
pop
mov
fnstenv
cwtl
bound
pop
stos
or
cmp
or
jbe
xchg
stos
or
mov
sbb
push
orl
dec
popf
mov
aad
lds
cmp
mov
ret
sub
sub
in
xor
ss
ret
xchg
ret
les
sbb
das
test
jo
in
je
mov
push
cmpsl
xchg
jnp
fdivrl
lds
cltd
pop
mov
ja
and
mov
mov
jecxz
in
sub
rclb
das
lcall
dec
into
mov
ret
filds
lahf
pushf
sbb
mov
call
mov
cld
dec
xchg
fwait
ss
adc
jb
js
push
outsb
aas
xchg
rorl
lods
dec
mov
pop
filds
fcomps
arpl
les
mov
pop
aam
aad
push
loopne
cmp
lea
mov
jl
dec
daa
test
repnz
mov
movsl
mov
dec
dec
adc
pop
sub
les
pop
mov
hlt
fneni(8087
and
adc
mov
and
imul
xchg
pop
ret
adc
push
inc
dec
mov
mov
insb
jp
dec
or
jmp
or
inc
mov
lea
adc
fwait
push
stc
or
sub
sub
ret
in
xchg
xlat
cs
mov
sub
mov
and
sub
notb
cmp
out
xchg
imul
ret
push
inc
out
jmp
jb
ds
dec
or
mov
jo
stos
and
jp
or
pop
add
xchg
bound
enter
push
iret
jno
mov
out
add
jnp
std
and
and
jle
pop
xchg
pop
inc
xchg
lea
mov
add
aas
xchg
rol
inc
leave
insl
gs
push
mov
pusha
bound
jb
push
mov
cld
push
push
test
jmp
dec
adc
xchg
add
sbb
sbb
fnstenv
das
lds
imul
popl
pushf
xor
and
fcmovbe
call
push
jg
jb
dec
adc
sbb
cmpb
repz
mov
into
lds
mov
nop
fisttps
fsubs
hlt
add
fneni(8087
pop
push
xchg
std
mov
and
dec
stos
into
cmp
jns
daa
jns
adc
sti
hlt
lret
sub
int
lods
add
mov
fists
push
cmpsb
push
mov
push
inc
xchg
gs
push
adc
fidivs
fwait
dec
gs
push
in
mov
movsb
loope
leave
jge
lahf
or
sub
xorb
inc
sbb
stos
push
push
mov
mov
sub
insb
xchg
fwait
ret
inc
les
pop
psrld
add
dec
sbb
cli
cs
std
addr16
js
in
fnsave
xchg
call
cmp
popf
dec
dec
pop
push
dec
and
hlt
stos
mov
dec
sub
sbb
cmpsb
push
xlat
daa
sbb
push
or
push
movsl
adc
pop
insb
and
ret
stc
aas
mov
adc
test
jo
arpl
pop
sarb
orb
xorl
push
xchg
ficomps
rcl
mov
stos
jg
testl
rcr
add
dec
push
cmc
push
dec
jno
mov
sub
popf
inc
in
xchg
xor
ret
add
pop
pop
mov
push
movsl
dec
out
push
iret
aas
mov
arpl
inc
xchg
pop
mov
mov
daa
mov
fidivrl
or
fnstsw
inc
dec
mov
clc
lret
cmp
inc
jo
push
inc
call
adc
sub
out
notb
mov
push
xchg
mov
iret
mov
pusha
stos
ds
test
nop
lret
dec
push
vpaddusw
fists
mov
pop
cmp
jae
xor
dec
sbb
cs
xor
rclb
nop
std
addb
pop
adc
sub
add
test
sbbb
test
cmp
or
and
xor
and
cs
outsl
add
push
lds
add
arpl
lods
pop
mov
test
cmp
repz
inc
mov
pop
fstl
pop
adc
loopne
mov
jbe
call
inc
mov
addr16
mov
inc
inc
inc
jnp
jnp
mov
jmp
sarl
jo
cmp
sbb
andb
push
into
outsl
int
dec
mov
ffreep
add
in
les
jne
lods
or
xchg
fdivl
inc
test
adc
jp
gs
pop
mov
jae
xchg
jo
inc
jnp
movsb
push
je
mov
inc
mov
pop
in
outsb
inc
loopne
icebp
ljmp
inc
leave
adc
test
repnz
sbb
mov
fidivs
scas
loope
jl
stos
aad
push
and
cld
push
mov
xchg
mov
sbb
insl
fisttps
and
push
sub
mov
mov
movsl
mov
mov
xchg
fdivrl
jb
and
test
jo
sbb
sbb
imul
cmp
mov
test
mov
mov
pop
scas
popa
jg
loopne
popa
mov
in
cmpsb
pushf
cld
out
test
outsb
inc
sar
sbb
mov
scas
lea
js
imul
cmpsb
push
repnz
jns
ss
mov
test
cltd
ja
xchg
xchg
mov
xor
insl
ret
mov
movl
mov
mov
mov
sbb
loope
outsb
mov
leave
and
pop
xchg
xchg
mov
ja
mov
fnsave
push
or
lds
ja
mov
sub
and
inc
out
jl
add
fsubr
xlat
mov
mov
loopne
sbb
insb
push
pop
dec
fistpl
jae
mov
insl
pop
push
data16
cltd
call
and
push
push
imul
int
mov
push
push
std
cltd
mov
adc
cwtl
imul
sbb
mov
lods
call
repnz
or
pusha
stos
test
jo
cwtl
xchg
nop
jl
punpckldq
daa
dec
dec
addb
pushf
cmpsl
jge
jg
jnp
jle
fisubl
or
out
cmpsb
in
jge
loope
or
test
mov
inc
mov
mov
xchg
or
mov
sbb
push
pushf
jae
lds
movsb
idivl
sbb
pop
ja
pushf
sub
fs
fldlg2
cmp
lods
scas
lret
inc
call
mov
rclb
mov
testb
push
adc
push
shufps
xchg
int3
gs
dec
movsb
cmpsb
in
imul
mov
sub
faddl
sub
ss
mov
stos
aad
push
jmp
nop
inc
mov
loop
or
xor
push
repnz
cs
xchg
inc
sbb
jne
push
shll
aaa
mov
push
fwait
clc
aas
add
pop
xchg
and
pop
dec
dec
xchg
fisttps
adc
adc
xchg
jecxz
xor
scas
in
enter
pop
adc
and
sti
xchg
sbb
jmp
dec
cwtl
lret
adc
sbbl
ja
aaa
mov
adc
int
cli
xor
cmp
lods
icebp
iret
mov
mov
clc
push
lea
jmp
into
fnstenv
popa
test
xor
and
fs
cltd
xchg
push
jo
mov
mov
std
push
clc
push
cmp
cmp
push
push
andb
leave
loopne
xchg
sub
lds
lods
and
icebp
jno
xor
and
lret
stos
sub
sti
sub
insl
loopne
loopne
xor
cltd
imul
pop
dec
shll
and
sbbl
fidivs
faddp
sahf
leave
sbb
pop
pop
clc
fsub
add
inc
xlat
fistl
inc
mov
testl
add
push
div
or
or
fildll
stc
mov
in
mov
push
scas
push
shl
cld
inc
div
push
mov
mov
incb
push
enter
jg
roll
mov
fcomp
xor
out
scas
ljmp
pop
imul
arpl
or
mov
clc
ljmp
cltd
mov
stc
pop
mov
hlt
rcrl
lret
sbb
loop
or
out
gs
daa
rcrb
cmpb
stos
je
mov
rcll
data16
out
pop
out
push
push
movsl
ja
jge
or
dec
xlat
arpl
fsubrl
mov
cmp
xor
inc
sbb
ds
mov
jg
or
mov
popf
fiadds
sti
fisubs
out
xlat
test
lcall
adc
push
sub
xor
bound
movsbl
js
loopne
ds
leave
inc
icebp
sbb
xchg
ja
aad
jp
cmp
je
movsl
decl
out
dec
push
and
push
adc
mov
push
xchg
rolb
pop
mov
mov
cmp
inc
fisubrs
xlat
sbb
jmp
xor
mov
out
rcl
cwtl
sbb
jp
pushf
jbe
xchg
mov
pop
jns
pop
mov
fs
repnz
cmp
shl
fisubrs
mov
fwait
adc
int3
mov
mov
popf
xor
add
sahf
fldl
movsl
mov
inc
pusha
add
or
repz
movsl
frstor
mov
arpl
inc
icebp
push
mov
and
mov
cmpsb
or
inc
push
inc
and
fwait
jnp
arpl
xchg
adc
mov
lods
xlat
shll
push
mov
jmp
sub
stos
test
fwait
jg
inc
aaa
inc
pop
push
inc
cmp
dec
rolb
divb
fistpl
sbb
das
pusha
sbb
xchg
mov
mov
mov
loope
cmc
sbb
data16
ss
xchg
aaa
cltd
add
fldt
xor
in
sub
out
jbe
adcl
push
add
mov
cmpsl
jmp
into
dec
xchg
mov
jg
sbb
xchg
jle
leave
ror
pop
mov
cmp
call
roll
lods
rcrl
sbb
subb
ficoms
dec
push
fs
ret
test
mov
mov
jp
xchg
bound
frstor
cli
scas
xor
sub
dec
mov
je
fildll
xchg
push
test
jb
in
nop
out
cmp
jno
jno
aas
jmp
sarb
cli
lcall
iret
and
imul
movsb
stos
push
sub
dec
mov
add
xchg
stc
jbe
inc
sahf
push
in
mov
jp
or
fistpll
jns
pop
pop
jo
mov
push
lret
mov
adc
sbb
neg
ret
int
cmpsb
loope
ss
js
les
sub
adc
dec
scas
inc
mov
inc
mov
xchg
adc
mov
xchg
mov
inc
dec
sub
fisttps
mov
stc
xor
jo
clc
sbb
mov
cmp
icebp
outsl
insl
push
fnstsw
xchg
pop
cmp
inc
std
mov
call
jns
cmc
sbbl
lods
rcl
lock
rcl
shll
add
test
mov
cli
jae
fwait
sub
cmp
insl
and
arpl
cmp
ret
mov
jp
mov
push
out
cmp
fs
push
fstl
xlat
jle
push
test
lcall
mov
insw
ficoml
ja
hlt
enter
aad
test
cld
test
push
sar
pop
inc
sbb
pop
or
dec
jecxz
inc
imull
xchg
arpl
lcall
adc
test
sbb
movsl
dec
nop
std
popa
push
cld
addb
or
dec
test
lahf
adc
inc
lcall
mov
lret
push
inc
cmp
xchg
dec
push
insb
cmp
movsl
cmp
sub
in
pop
out
inc
jne
mov
and
jnp
leave
or
scas
jo
mov
or
xchg
pop
sbb
cwtl
or
loopne
xchg
clc
neg
call
leave
mov
in
pop
fucom
push
sbb
or
sbbl
aam
sbb
sbb
loop
mov
cmpsl
pushf
pop
sbb
punpckldq
pop
sti
xchg
in
xchg
ficompl
pop
or
lret
popf
dec
inc
popf
xlat
pop
push
cltd
fnstsw
push
jae
and
mov
inc
or
daa
and
pop
xchg
xchg
adc
sahf
dec
mov
pop
fwait
jecxz
cmpsb
jmp
ret
data16
rol
dec
inc
jl
jle
repnz
dec
pop
arpl
dec
jns
pop
adc
xchg
icebp
data16
push
xor
inc
dec
adc
mov
inc
shll
pop
jmp
fwait
ljmp
nop
push
iret
inc
addr16
add
lahf
mov
dec
xchg
mov
fnstsw
jmp
push
test
fs
inc
push
pop
stos
into
or
pop
xlat
jne
dec
pop
sarb
ds
or
dec
push
xchg
mov
or
stc
jl
cli
mov
cltd
push
sub
sbb
and
std
adc
pop
push
adc
aaa
xchg
pop
loop
dec
stc
leave
fimuls
jbe
sbbb
cmpsb
cmpsb
pop
pop
mov
andb
push
loopne
outsl
sub
and
das
xor
push
lea
shlb
stos
adc
test
jge
sub
int3
jno
push
mov
cs
xor
inc
dec
xchg
mov
sbb
push
xor
push
lret
data16
xor
stos
dec
out
xor
push
or
rolb
inc
sbb
and
jmp
mov
and
pop
dec
sbb
sarl
mov
nop
adcb
dec
mov
dec
aad
in
pop
and
ss
jae
js
pushf
lock
lds
lds
xor
idivb
mov
mov
push
pop
xor
into
inc
and
cmpb
into
xchg
cld
mov
jmp
lods
dec
and
cmp
pop
lret
pop
icebp
jae
loopne
jecxz
pop
pop
mov
ret
pop
popf
mov
inc
test
push
iret
es
lds
push
movsb
mov
cltd
pop
xorb
in
cld
fldt
cmpb
ret
jmp
xchg
pushl
data16
xchg
dec
cli
int3
pop
movsb
ljmp
xchg
jmp
int3
gs
push
mov
push
testl
lea
popa
mov
sti
out
xor
cmp
xor
push
pushf
mov
dec
lret
add
mov
adc
insl
in
add
jg
in
test
cmp
mov
jbe
test
hlt
lock
out
cwtl
addr16
sbb
clc
mov
jge
hlt
nop
aas
daa
hlt
aas
int3
adc
and
ja
cmp
mov
or
lods
xchg
or
cmp
xor
and
test
push
sub
sub
cmp
cmpsl
pop
mov
lock
adc
daa
push
in
insb
xor
push
pushf
aas
shrb
and
add
pop
or
enter
xor
outsb
sub
pop
mov
stos
leave
mov
mov
or
and
add
cmpsb
punpckhbw
lock
pusha
add
stos
mov
mov
adc
adc
or
sbb
and
sti
lods
mov
fwait
popa
outsb
lods
sbb
or
mov
adc
mov
in
into
hlt
and
test
jb
push
pusha
dec
pushf
test
jmp
fisubs
in
ret
int
adc
or
les
xor
pop
fwait
pop
divl
shrb
fiaddl
mov
or
add
lea
loop
xchg
cmp
mov
mov
andl
dec
loopne
inc
lahf
dec
inc
fadds
cli
dec
mov
push
int3
scas
sub
lods
out
fildll
mov
and
into
inc
xor
xchg
lods
adc
pop
pop
hlt
jae
imul
out
dec
mov
mov
jp
fadd
mov
add
xchg
out
dec
ja
cmp
ret
xor
xlat
mov
cmpsb
push
xor
rorl
cwtl
movsb
or
mov
pop
xchg
es
inc
push
es
stos
aad
clc
fs
pushf
sub
ljmp
loop
sub
lods
movsl
and
sbb
inc
aaa
push
adc
inc
jns
push
mov
repnz
xchg
push
dec
jb
divl
push
ret
mov
es
sub
xlat
adc
clc
add
push
loopw
testb
cmp
fistl
shl
outsl
adc
outsb
or
sbb
out
lock
jae
dec
shlb
fs
arpl
shll
add
inc
dec
pop
add
in
fdivl
push
xchg
mov
sbb
adc
lds
cmc
or
inc
mulb
cmp
iret
or
leave
sti
xor
mov
repz
add
xor
add
ret
and
sti
cvtps2pd
push
xchg
dec
fsubrp
ja
xchg
ss
push
ret
jge
cmp
cmp
lea
pop
js
push
push
mov
lock
mov
ret
test
lods
outsb
mov
lret
test
adc
popa
insl
inc
jg
xchg
sahf
mov
call
or
das
pop
and
loop
sbb
cvttps2pi
fcmove
je
cmp
fnsave
mov
push
js
mov
jmp
xor
add
mov
jmp
flds
mov
call
popf
push
sub
sbb
xchg
lahf
xor
xchg
bound
push
outsl
shll
pop
mov
jo
enter
lock
movsl
shl
adc
lret
dec
inc
das
inc
sub
push
ds
in
cmpsl
cltd
outsb
pop
jle
jmp
fbstp
adc
rcrb
sbb
cs
inc
loope
imul
bound
pushf
xor
mov
aam
xchg
and
and
cmp
jne
lcall
mov
imul
les
icebp
jnp,pn
and
pop
inc
xor
pushf
mov
ret
sub
cld
cmc
cltd
out
sub
jnp
cmpsl
jb
adc
cmp
sbb
int
adc
cmp
dec
or
outsb
xlat
in
cmpsl
cmp
pusha
add
out
dec
fwait
das
sbb
mov
sarb
fwait
mov
jle
jae
test
push
ss
aas
mov
xchg
arpl
mov
push
cmpsb
ret
add
cmpsb
mov
dec
and
pop
cmc
ret
andl
jnp
bound
movb
push
dec
push
xchg
and
inc
xor
or
movsb
in
mov
jnp
mov
sub
cmp
jmp
cmp
xchg
into
cli
ds
push
cmp
mov
mov
hlt
int3
scas
inc
or
and
icebp
sbb
in
nop
mov
jns
icebp
ja
les
dec
inc
push
rcrl
in
sahf
push
adc
mov
sbb
daa
adc
jne
xchg
push
movsl
push
jle
sub
or
dec
lods
fnstsw
and
imul
cmp
xchg
mov
scas
pusha
rcrb
cmp
test
stc
xor
sub
or
jae
movsb
fwait
jns
mov
pop
das
cli
fsubrp
in
imul
sbb
mov
xchg
lahf
cmp
das
ror
jbe
test
outsb
lods
pop
cmpsl
stc
lret
adc
lahf
sahf
mov
out
mov
pop
pusha
inc
dec
lret
lock
lods
aam
ret
pop
rolb
dec
mov
add
imul
out
inc
call
les
fnsave
aam
inc
cmpsl
mov
mov
push
sub
inc
in
int3
xchg
cmp
repnz
cmpsb
adc
dec
arpl
les
test
lock
into
inc
jns
xchg
ja
cmpsl
xor
movb
xchg
dec
mov
xchg
shl
fdivl
and
dec
mov
cmp
jae
cmc
mov
mov
mov
shlb
sbb
lcall
pop
push
rcr
es
inc
cwtl
xchg
cmc
repz
jecxz
inc
xchg
inc
or
inc
adc
pushf
fdivl
imull
movsb
dec
sahf
imul
and
outsl
inc
sbb
mov
rorb
adc
xor
rolb
loop
les
push
std
pop
sbb
fisttpll
xchg
insb
cwtl
lock
push
call
lcall
sub
mov
mov
and
lods
push
stos
inc
notl
cmp
nop
sub
aad
movsb
push
lods
mov
loope
mov
outsl
cld
add
mov
push
cmp
cmpsb
or
cmp
lahf
popf
outsb
cwtl
pop
add
jne
push
out
and
cmpsl
push
bound
mov
mov
jno
shrl
push
lret
ret
int
xor
mov
pushl
mov
movsl
clc
inc
inc
push
mov
mov
cmc
mov
xchg
add
cmp
sti
ficoms
inc
gs
prefetcht1
lock
fs
mov
mov
insb
xchg
bound
xchg
int
pop
imul
jnp
out
pusha
or
ss
dec
imul
insb
mov
pop
mov
add
and
negb
inc
jge
lret
scas
cmc
hlt
lods
pop
add
rcrl
sahf
inc
outsl
pop
and
mov
in
fbld
test
ret
aad
lret
push
and
push
add
cmpsb
subb
sub
dec
jno
loopne
popa
inc
rcrl
aam
jnp
fwait
adc
test
cli
test
pop
out
adc
stos
mov
add
insl
fcoms
testl
inc
jno
jne
jecxz
sbb
push
pop
andb
lods
cmp
xor
out
aas
negb
xor
fwait
mov
or
xchg
lea
outsl
imul
adc
scas
fcmovne
jmp
jmp
hlt
add
cwtl
cwtl
and
xor
xchg
scas
fs
push
fs
dec
jno
and
test
jbe
fidivs
not
xchg
aaa
rol
call
add
push
insb
jmp
mov
sbb
xor
mov
and
push
cltd
push
lods
push
sub
cmp
repnz
stos
sub
loope
ffreep
cltd
push
pop
xor
push
and
test
ficompl
xor
sub
sbb
or
add
or
shll
push
mov
test
jno
into
mov
sub
push
pop
mov
stos
out
jno
outsb
push
daa
xchg
push
std
mov
cmp
and
call
mov
xlat
sbb
xor
bound
cld
jnp
push
mov
sbb
inc
jecxz
fistpl
dec
inc
mov
sub
push
insl
and
sti
ss
pop
pop
mov
or
xchg
test
dec
sbb
cmpsb
std
add
cmp
out
pop
push
ss
sub
mov
pusha
add
inc
lock
rcrl
fwait
or
enter
xor
mov
xchg
sbb
xor
xchg
mov
mov
lret
cmc
or
mov
test
xchg
adc
xchg
pop
xchg
in
cmp
jb
push
xor
push
popa
mov
sahf
test
test
and
fbstp
fstl
cmp
fsubs
mov
mov
push
or
fcoms
mov
sbb
fistpll
mov
mov
scas
and
into
dec
into
mov
mov
aaa
call
pop
fldt
mov
or
mov
popa
push
jp
cmp
mov
dec
mov
mov
xchg
rolb
inc
cmp
push
sbb
insb
leave
in
data16
dec
cmp
cwtl
mov
stc
lods
aaa
out
sbb
xchg
mov
cmp
dec
add
cltd
push
sbb
scas
push
pop
rclb
loope
out
cmpsl
outsl
push
test
lds
sbb
xor
popa
xchg
pop
mov
cmpsl
ret
xor
cli
dec
or
lcall
dec
or
mov
pop
sbb
ret
repnz
in
inc
insb
shr
cmp
sbb
pop
das
out
push
inc
sbb
mov
in
cmpsb
test
push
outsl
sub
inc
jecxz
mov
stos
xchg
add
xchg
popa
shlb
mov
outsb
je
mov
dec
jg
test
push
sub
lock
fstpl
repz
dec
xchg
xor
cmpsb
loope
ds
xor
dec
sub
cmp
rorl
mov
adc
imul
lods
cs
cmpsl
sbbl
shrl
into
mov
mov
or
push
ret
ja
pop
push
stc
call
stos
xor
rclb
imul
inc
sub
inc
sub
js
xchg
push
into
cmp
test
xchg
and
repz
lahf
or
adc
orb
enter
pop
or
jmp
cmp
in
test
dec
nop
xor
aaa
lret
pop
mov
enter
push
cli
add
dec
in
or
jb
pop
inc
pop
adc
int3
jae
sbbl
fld
and
aas
ret
cli
sbb
jecxz
add
xor
test
mov
dec
push
mov
jns
cmp
and
pop
or
fbld
xchg
shrl
cmc
dec
ret
cmp
adc
jne
incl
addr16
test
push
and
stos
dec
mov
loope
add
out
fucomp
fwait
mov
mov
mov
stos
lods
xchg
sahf
incb
addr16
cltd
inc
mov
lods
js
or
pop
shrl
lock
frndint
mov
nop
out
adc
jo
sbb
ss
clc
push
pop
lods
push
adc
rcrl
sbb
sbb
repnz
aam
xchg
test
mov
sbb
outsb
cmp
sbb
daa
stc
push
imul
imul
mov
and
add
or
hlt
xchg
xor
filds
add
sbbb
paddd
mov
addr16
jl
lds
push
push
shll
jno
mov
enter
jmp
dec
dec
adc
insl
xor
fcos
mov
ljmp
jge
sbb
fimull
cmp
jl
xor
pop
add
iret
stc
test
adc
mov
sub
test
testl
leavew
fdivrp
cmpsl
mov
dec
pop
fildll
into
or
adcl
into
ljmp
mov
jg
push
and
cmpsl
cmp
jmp
notb
int3
mov
or
xchg
cli
rorl
sub
xchg
lods
inc
test
and
fwait
mov
aad
xchg
xchg
imul
cmp
into
mov
cs
xchg
pop
or
in
inc
jmp
lds
pushf
adc
ret
sub
bound
pusha
daa
lods
adc
sbb
adc
xchg
mov
push
movsl
pop
jmp
jno
ds
xor
insb
or
dec
pop
in
and
push
scas
aam
push
mov
mov
xchg
mov
xor
push
aad
push
lcall
bswap
mov
mov
mov
mov
dec
popf
orl
sbb
sti
and
insl
ret
data16
cmp
push
xchg
mov
rcrb
fwait
push
sub
loopne
jmp
xor
sub
out
movsb
scas
filds
sub
insl
pop
cmp
das
test
mov
dec
jge
mov
push
cmp
xlat
roll
xchg
in
sbb
push
cld
sub
and
add
loop
push
fs
dec
xlat
mov
jge
incl
fmuls
sbb
inc
mov
ficompl
icebp
mov
fisttpl
call
inc
sbb
int
int3
ret
adc
adc
in
dec
lods
xchg
mov
cmpb
cs
mov
dec
pop
fbld
jo
push
push
cmp
mov
outsl
fwait
or
rcll
mov
sarl
outsl
cmp
pop
shrl
or
xor
cwtl
mov
xchg
das
cmp
jg
jp
inc
or
lods
sub
push
xchg
mov
out
fisubrs
test
jp
dec
sahf
mov
lcall
dec
xchg
leave
or
inc
sarl
add
sti
les
test
or
stc
mov
sub
pop
popf
aaa
gs
cmpl
fisttpll
sahf
rclb
movb
shl
les
inc
adc
cwtl
cmpsl
arpl
inc
mulb
hlt
or
outsb
cld
ss
nopl
xlat
sub
xchg
xchg
movsb
add
lret
pop
arpl
test
cld
sbb
les
test
cld
movsl
pushf
or
aas
ds
data16
and
es
xor
jl
xchg
jbe
ucomiss
ss
scas
lds
into
push
lret
sub
mov
push
inc
dec
mov
aad
add
mov
into
aam
inc
add
mov
enter
mov
loopne
into
inc
sub
mov
jbe
adcl
popa
sarb
int
sbb
push
jp
mov
jmp
cmp
mov
and
mov
mov
or
cmpsb
or
sbb
inc
xor
addl
jns
xor
mov
cmp
inc
in
fs
xchg
add
adc
es
jae
ss
jmp
scas
sub
insb
dec
loopne,pn
addr16
ficomps
jno
and
mov
xchg
es
mov
sbb
bound
mov
lock
outsb
push
jne
les
fnsave
fildll
jecxz
dec
cs
mov
popf
and
cmc
pop
fcmovu
inc
sbb
inc
ja
fsubrs
jecxz
mov
je
das
push
rolb
lds
test
out
dec
movsb
js
and
xchg
fnstenv
xchg
mov
mov
imul
dec
xchg
mov
push
aas
mov
iret
addr16
jge
xchg
in
inc
dec
lret
fsts
insl
inc
dec
cmp
sub
xchg
nop
mov
mov
jmp
cs
shlb
shrl
inc
iret
out
jae
icebp
mov
pop
mov
dec
lea
popf
jl
or
dec
dec
ja
sub
mov
out
arpl
lods
xor
imul
jecxz
or
mov
push
jnp
sub
cmc
push
mov
out
loope
sbb
dec
mov
xor
les
scas
pop
mov
ja
shll
sbb
cs
cmp
sysenter
add
mov
lret
xchg
push
fsub
mov
orb
lahf
cmp
call
lea
int
xchg
cmp
insb
int
das
cmpb
cmc
int3
adc
jge
movsb
lret
jae
movl
adcb
js
push
fldcw
lock
addr16
insl
push
mov
mov
jnp
in
mov
out
or
or
jg
cld
addr16
add
loop
mov
daa
jne
mov
cmp
add
cmp
fldenv
shll
mov
jns
in
add
imul
mov
das
rcpps
jno
sarl
xchg
les
subb
mov
xchg
out
pop
test
mov
jg
movsl
test
xchg
mov
dec
or
push
repnz
mov
cmp
pop
ret
loopne
lods
repz
add
xorl
and
stos
repz
imul
push
mov
push
adc
out
arpl
inc
clc
add
stc
mov
insb
mov
scas
adcb
les
push
cmp
mov
push
pop
aas
xchg
in
xor
cs
sbb
mov
xchg
popf
push
std
push
aam
jno
cmp
xlat
inc
xorl
sahf
data16
loopne
insw
inc
dec
inc
mov
in
cmc
mov
mov
js
fwait
pop
jp
xchg
mov
lds
mov
es
std
adc
insl
push
jge
push
mov
sub
adcb
sbb
sub
inc
mov
cmp
jnp
out
cmp
dec
sub
push
int
inc
sahf
pop
pop
das
sub
push
xor
pop
push
roll
fstpt
cltd
xchg
sti
stos
sbbb
jmp
dec
mov
addr16
xor
sahf
xor
ret
test
scas
push
xor
sbb
inc
popf
std
pop
pop
pop
inc
jnp
cmp
fstl
arpl
mov
dec
loop
push
push
mov
xor
loope
lea
pop
add
rol
cmp
jp
dec
lds
clc
inc
pushf
jb
mov
jg
repnz
test
jb
dec
jge
jns
fwait
dec
in
test
aam
dec
jnp
scas
cli
popl
mov
in
dec
imul
mov
in
adc
rcr
scas
push
jne
cmp
dec
sub
mov
fs
lret
xor
dec
inc
xor
orl
ljmp
jae
adc
xlat
imul
cmp
cmp
jns
inc
enter
or
add
testl
mov
jmp
mov
jb
push
or
mov
nop
or
cld
bound
push
add
into
dec
xchg
adc
in
push
inc
in
das
mov
ret
adc
aas
and
and
stos
jmp
cltd
push
fldl
push
ss
iret
shl
fstpl
lret
lahf
enter
enter
hlt
clc
outsl
sbb
cmc
popf
lcall
out
out
pop
jb
insb
popl
xor
xor
cmp
adc
jae
adc
rcr
hlt
lods
je
dec
int3
in
adc
and
xorb
sbbl
add
pop
mov
arpl
daa
fs
pop
mov
dec
andb
mov
xchg
jno
aad
jp
xchg
aaa
outsl
sbb
pop
mov
jae
or
adc
outsl
mov
lea
test
stc
sub
and
pop
fidivs
adc
iret
jo
pop
sarb
arpl
addr16
push
inc
mov
dec
and
mov
pop
push
inc
xor
in
fsincos
push
int
lds
inc
daa
sub
lret
pushf
pop
movsl
push
push
pop
and
cmpsb
jae
mov
pop
daa
jo
out
push
dec
ljmp
xlat
push
arpl
dec
jle
add
jno
std
pop
add
paddsw
fs
xchg
xor
sbb
stos
and
adc
push
in
pushf
mov
pop
adc
out
add
pop
aas
cmpb
imul
lahf
js
add
mov
xor
or
aad
xor
jmp
arpl
bound
sub
pop
jo
pop
lret
jo
adc
cmpsl
mov
ret
faddl
push
and
clc
mov
pushf
inc
push
push
int
push
in
loopne
out
ret
stos
mov
sbb
sar
pop
scas
cmp
adc
stc
stos
mov
roll
aad
fcomps
out
mov
je
inc
stos
out
mov
ja
sti
je
mov
in
fisttps
mov
int3
xchg
sub
inc
dec
dec
sub
je
inc
aaa
push
ret
push
sbb
sub
sbb
mov
sub
push
sub
ror
shlb
mov
or
divb
sub
incl
pop
mov
arpl
xor
in
jo
sbb
push
sub
fistpll
add
cmpsb
fimull
ja
mov
jnp
bound
jmp
mov
xlat
mov
push
fs
or
shrb
fwait
cmc
mov
sbb
loop
leave
stos
mov
mov
pop
push
or
cmp
sbb
adc
ficoms
inc
stos
das
dec
ja
adc
in
test
cld
jb
fs
add
jns
iret
in
cmp
out
xorl
mov
loop
mov
int
mov
sub
shll
test
loope
jl
mov
xor
sub
outsb
adc
jmp
pop
push
addr16
cs
jle
mov
cltd
adc
pop
sarl
sub
sub
adc
fs
sub
rclb
scas
arpl
lods
ja
jl
push
sbb
jns
jae
fiadds
push
dec
cmp
lods
aas
ret
and
push
push
mov
adc
sub
jno
or
inc
sub
dec
xchg
fidivrs
insl
cmpsl
mov
add
or
xor
or
jmp
lret
fmull
lea
stos
sub
mov
fidivrs
push
lea
xor
rcrl
ja
aam
pop
jbe
xchg
jmp
push
xor
sti
aam
pop
or
nop
pop
in
ret
daa
xchg
cmp
repz
cmc
scas
faddl
int
inc
dec
fmul
call
cltd
xor
xor
adc
je
xchg
push
or
xor
jmp
lods
push
pusha
ja
sub
test
daa
xor
mov
sbb
and
jl
pop
cmc
js
daa
clc
sub
cwtl
mov
lods
aam
stos
or
xor
sub
pop
imul
xchg
add
inc
push
inc
jp
clc
xchg
push
incl
or
mov
add
cmp
push
jle
rcr
insl
mov
popf
cmp
adc
jmp
scas
xchg
dec
leave
jae
fisubl
dec
mov
or
sti
rclb
imul
push
and
or
in
ret
mov
lret
mov
je
fwait
dec
test
daa
les
jmp
push
push
mov
lods
sub
and
cmpsl
push
push
mov
mov
lock
lcall
inc
xchg
enter
fstp
cmpl
cmc
lcall
dec
adc
repnz
mov
xchg
cmp
mov
sub
jo
stos
lret
stos
je
pop
pusha
jl
mov
inc
dec
push
cmp
das
test
mov
sbb
fs
cltd
push
lahf
into
push
hlt
adc
stos
mov
and
lods
cmpsl
pop
mov
movsb
imul
mov
leave
outsl
or
loope
sub
addl
iret
ficoml
cmp
aaa
lds
xchg
xchg
mov
loop
pop
out
xlat
inc
andl
push
into
or
icebp
sbb
outsb
inc
decb
mul
adc
je
ror
test
fisubrs
lods
or
shrl
mov
cmp
adc
or
lods
mov
insl
add
aas
repz
and
jl
dec
int
mov
shrl
enter
push
jg
fs
mov
call
jl
jne
inc
call
jns
jno
test
out
inc
xlat
adc
or
mov
sub
xor
sbbb
cmp
xor
sub
imul
mov
ss
jns
cltd
cld
fildll
mov
decl
sub
mov
mov
add
das
lcall
js
stc
push
xchg
rol
cmp
or
loop
loop
mov
repz
pop
test
jo
mov
lcall
xchg
cs
sbb
jp
loop
push
je
cmpsl
adcl
mov
aaa
aaa
fistpl
bound
adc
ja
mov
insb
sbb
je
cwtl
not
lods
scas
mov
push
lea
cltd
mov
lods
xor
idivb
jo
jmp
or
jmp
pop
push
fwait
or
add
xchg
mov
cld
mov
xor
jle
mov
mov
mov
pop
scas
sub
mov
inc
daa
xor
jnp
call
enter
adc
jo
cwtl
iret
lock
lods
dec
stc
mov
jecxz
enter
cld
pop
cmp
adc
mov
pop
push
pop
idiv
test
adc
cmc
out
jp
pop
push
in
mov
mov
cmp
mov
fcoms
iret
add
cs
xor
sub
stos
pop
xor
xchg
mov
mov
mov
push
mov
lret
and
ret
xor
pop
push
push
xchg
xorb
addr16
mov
stc
lock
cwtl
mov
cmp
inc
popf
es
js
outsb
ror
cs
cmc
push
sub
push
push
or
mov
stc
xchg
mov
pop
cs
ret
push
aas
add
fisubrl
adc
adc
jns
int3
cmp
pop
jp
int
adc
dec
and
popa
punpckhbw
jmp
pop
push
fwait
push
outsl
jle
jg
outsb
and
jb
aas
out
or
fimuls
cltd
fisubrs
add
pop
rolb
call
add
pusha
decl
ficoml
fstpl
mov
gs
insb
sbb
xchg
xchg
and
xchg
cmpsb
jmp
xlat
test
test
das
mov
mov
push
mov
adc
inc
clc
insb
mov
sahf
xor
test
mov
push
pop
cld
dec
inc
int3
inc
cs
orl
jle
mov
mov
mov
das
add
je
mov
pop
dec
outsb
lahf
jne
push
add
sub
shrl
insb
jnp
int
sti
cmc
into
dec
cli
movsl
mov
loop
jmp
push
jecxz
sub
aas
mov
test
add
sub
iret
cmp
out
repz
mov
pushf
push
push
hlt
push
shll
mov
out
xorb
xchg
arpl
je
enter
xor
sub
subb
adc
inc
out
aaa
push
add
mov
daa
jne
lods
dec
les
ss
addb
imul
and
mov
outsb
ja
cmp
mov
aad
sahf
ret
out
cmc
pop
sbb
or
push
test
cmpl
push
das
and
sbb
sbb
testb
pop
sbb
sbb
roll
fldcw
ficoml
out
outsl
or
pop
std
mov
fiadds
int3
mov
shrb
xchg
sbb
fdivrs
outsb
jg
add
into
in
outsl
sahf
adc
adc
imul
mov
mov
mov
sub
lods
sti
or
and
bound
add
sub
ja
adc
push
divl
jmp
push
cltd
sub
adc
fsubl
cmp
pushf
into
mov
mov
mov
mov
das
aam
cmp
sbb
mov
imul
int
pushl
lcall
or
ret
push
cmp
scas
stc
int
mov
fdivrl
xor
mov
pop
outsb
testb
sbb
jns
push
cmc
orl
adc
rorl
sub
cltd
inc
fdivl
or
fiaddl
loop
movsb
test
mov
push
loopne
pop
loop
pop
jbe
fcmovb
nop
pop
xchg
pusha
imul
ret
pop
push
das
mov
mov
jmp
jnp
rorl
push
insl
mov
inc
adc
int
or
and
xchg
mov
dec
push
mov
movsl
mov
pop
mov
in
ja
stc
ljmp
roll
hlt
adc
mov
pop
imul
mov
mov
pop
test
int
stos
pop
out
xor
mov
lcall
shr
inc
cwtl
pop
sbb
push
xor
adc
xor
out
loope
mov
adc
and
fldt
cmp
push
sbb
nop
je
test
ret
push
xor
ja
or
xchg
and
pop
adc
mov
adc
add
pop
shrb
xchg
in
ud1
out
cmp
sub
and
enter
negb
ret
mov
mov
les
lcall
add
mov
sbb
fldl
movsl
dec
xlat
iret
pop
dec
mov
xor
push
mov
jg
lods
fnstenv
jp,pt
test
adc
aaa
push
or
lods
add
xchg
xchg
or
mov
icebp
mov
adc
push
xor
pop
sbb
dec
pop
add
mov
arpl
and
repnz
jge
enter
test
xchg
mov
in
cltd
aam
cli
dec
ja
pop
push
adc
in
repz
loope
pop
xor
iret
sub
xor
movsl
mov
cli
push
cwtl
cwtl
lea
push
cmp
sub
fnstcw
add
push
sbb
xor
fwait
imul
mov
js
popa
dec
and
or
add
fisubs
scas
dec
pushf
pop
pusha
xchg
or
sarb
nop
dec
jae
inc
sbb
cli
test
subb
xor
sti
push
xchg
rcrl
int3
dec
xor
xchg
das
call
ljmp
lea
cld
gs
fs
call
iret
dec
xchg
sbb
xchg
insb
push
pop
imul
imul
or
mov
adc
daa
add
fxch
sub
sbb
stos
pop
je
js
xor
mov
rcl
icebp
inc
das
rolb
outsl
repz
mov
push
aas
imul
icebp
mov
test
sub
cwtl
dec
inc
sbb
ret
inc
in
add
xchg
mov
mov
ficomps
pop
test
fst
push
repz
jno
and
shlb
mov
nop
xchg
fwait
pop
xchg
adc
jge
addr16
inc
xchg
mov
test
mov
fdivrs
jb
std
lds
jb
add
adc
push
push
sub
jne
cwtl
pop
daa
dec
ret
lods
add
mov
inc
lea
icebp
fs
movsb
pop
lods
jns
mov
pop
inc
xor
jno
repz
mov
sub
or
dec
or
mov
or
or
inc
xor
sbb
fisubl
orb
push
in
add
outsb
out
popf
pop
dec
mov
sub
or
jecxz
push
adc
ret
in
adcl
xor
jecxz
sub
stos
lods
out
or
stos
fildl
ss
outsl
or
loop
inc
and
je
addr16
js
stos
incb
mov
xor
jl
subb
dec
xchg
xor
push
adcl
pusha
and
push
and
jp
pop
push
orl
pop
mov
push
imul
jne
lcall
inc
movsb
dec
repnz
pop
sbb
xor
and
pop
scas
sub
pop
or
jg
inc
mov
push
sti
jle
inc
jb
js
ds
enter
jnp
insb
sbb
sub
cmc
push
ficompl
add
xor
out
pop
fcoms
dec
stos
sahf
pop
scas
cwtl
incl
pop
mov
popf
call
sbb
int3
loop
in
inc
cld
sahf
adc
add
out
mov
push
and
cmpsl
sbb
inc
xor
in
jp
fdivs
mov
outsb
imul
mov
test
mov
or
vprotb
lea
add
add
mov
sub
mov
in
scas
scas
lea
enter
jns
sbb
xor
push
cmp
and
ret
and
mov
mov
shrl
push
aaa
mov
out
cmp
cltd
imul
in
loopne
into
sbb
out
icebp
js
cmp
cmp
push
mov
sub
mov
mov
dec
adc
add
jae
test
jmp
sbb
add
mov
and
hlt
jo
shll
mov
mov
jnp
pop
adc
rcrb
das
jecxz
mov
into
xchg
pop
or
adc
into
pop
cmp
pusha
aam
mov
cmp
in
push
jns
push
pop
or
lds
pushf
or
addl
fldt
push
dec
inc
push
js
xchg
cli
mov
cmc
mov
mov
pushf
add
mov
mov
bnd
jo
lock
xchg
fdivrs
int
int3
lods
jmp
icebp
xchg
xchg
inc
xchg
ret
jge
mov
cmp
cli
pusha
push
lods
ret
mov
push
inc
cmp
shl
fwait
jmp
sahf
and
mov
jno
xor
in
sbb
sbbb
cmp
cmp
sub
jno
fnstcw
mov
outsb
out
lahf
add
orl
test
jmp
push
jo
test
and
sub
lahf
xchg
gs
pop
pop
lcall
cltd
sti
jl
pop
dec
icebp
jbe
scas
sbb
push
cmpsl
lea
repz
sbb
andb
add
cmp
pushf
push
jbe
shlb
je
xor
jnp
and
inc
jle
mov
dec
movsl
pushf
mov
pop
fadds
cltd
faddl
aam
mov
sub
daa
xchg
or
movb
and
mov
aad
adc
pop
stc
mov
test
rcrl
jo
or
adc
add
pop
enter
aaa
and
fsubrs
sbb
push
sti
mov
push
cmpsl
inc
or
jmp
push
je
pop
xor
fs
shlb
popa
shr
in
dec
faddl
mov
addl
xor
jae
xlat
or
test
lcall
inc
scas
es
xor
mov
pop
xchg
xlat
repnz
and
inc
in
pop
jl
or
aas
sub
leave
mov
jbe
ja
mov
hlt
pop
sbb
pop
mov
and
lods
jbe
stos
imulb
xchg
dec
dec
push
movsl
mov
jge
and
mov
leave
pop
jbe
ss
cld
bound
pop
cmovne
push
fucomip
cwtl
and
movsb
mov
cmp
jns
xchg
and
push
jp
add
lret
ja
adc
subl
loopne
pusha
ljmp
jae
sub
xchg
js
fs
sub
xlat
fs
or
imul
stc
jns
das
adc
jmp
sub
ljmp
stos
pop
push
repnz
add
orb
mov
clc
adc
ret
and
xor
fdivl
mov
mov
pop
mov
inc
iret
pop
pusha
dec
negl
mov
lret
jns
hlt
ljmp
mov
mov
push
push
stos
addr16
repnz
addr16
mov
or
ret
jg
push
push
cmpsl
out
sub
sub
dec
repz
pop
cwtl
test
dec
mov
cmp
test
adc
add
jae
dec
xor
jp
aam
adc
pop
xor
dec
add
sbb
jae
addb
shlb
loop
in
rclb
add
stos
jl
jg
push
jae
inc
pop
sti
inc
push
inc
data16
test
xorb
sub
subb
js
call
adc
ret
mov
mov
push
jl
sbb
lock
pop
dec
mov
mov
xor
sbb
mov
xchg
cmc
setle
jl
xor
test
outsl
sub
aam
jae
push
jne
divps
push
mov
popf
sbb
jp
jl
pop
retw
mov
loopne
push
xchg
add
mov
or
mov
lods
add
or
popf
dec
fcompl
dec
push
and
pop
xchg
sbb
mov
jg
arpl
in
daa
roll
xchg
cmp
sub
push
cmp
mov
sub
inc
xlat
dec
cwtl
lods
loope
add
in
hlt
push
jne
int3
jae
idivl
repz
sbb
jmp
inc
fucomi
dec
stc
sub
mov
dec
scas
negl
bound
rolb
push
jp
pop
xorl
push
jno
push
bound
out
outsl
out
sub
es
ds
xor
dec
ret
pop
push
or
in
in
push
into
add
push
xchg
and
jae
pop
popf
cmp
jb
das
popf
call
lret
int3
fs
insb
cmp
test
ret
sbb
ss
add
dec
jns
inc
insb
jnp
sbb
int
call
lret
lret
cmp
es
lret
xchg
lret
push
movsb
mov
xor
loop
cmp
orb
int
cmp
mov
js
cmp
fs
xchg
cmp
dec
pop
call
xor
arpl
mov
clc
filds
jl
jae
and
jecxz
lret
mov
stos
dec
xor
mov
scas
fwait
jmp
or
std
dec
ljmp
and
cmp
movsb
jae
cmp
pop
ret
pop
outsb
daa
xchg
aaa
xchg
inc
cmc
fldl
mov
in
and
loopne
mov
jne
dec
mov
mov
clc
jns
cwtl
cli
mov
jge
inc
sbbb
pop
fwait
sti
cmp
push
in
cmp
mov
sti
test
loopne
cmpb
in
mov
aas
xor
sbb
pusha
ss
jmp
dec
and
mov
jae
shl
adc
mov
push
hlt
leave
fidivs
mov
xor
xchg
push
sub
push
call
mov
insb
mov
adc
sbb
insb
sti
mov
sbb
stos
pusha
cltd
ja
and
adc
xor
xchg
cmpsl
xchg
icebp
jb
fiaddl
pop
lret
jmp
js
repnz
nop
push
jns
mov
fsubrs
repz
mov
clc
jnp
cmp
shrb
and
lea
shrb
sbb
mov
lahf
dec
test
jl
inc
leave
push
lock
cwtl
xor
pusha
mov
cmp
ja
add
std
movsb
pop
mov
loopne
mov
gs
xor
lahf
enter
sahf
bound
fstps
add
dec
or
popa
mov
movsb
sbb
dec
mov
dec
test
stc
cltd
icebp
mov
mov
stos
test
push
cmpb
xor
ret
inc
fs
das
mov
les
insb
sub
cmp
popf
lds
and
mov
or
outsl
sahf
cld
cs
stos
inc
lahf
movsl
outsl
mov
js
cs
push
inc
sub
aam
test
outsb
dec
jl
push
into
iret
int3
mov
inc
nop
jae
dec
pop
mov
aam
fldl
add
and
lds
nop
pop
cld
stos
jmp
dec
jle
xchg
lret
xor
mov
push
iret
clc
fstp
cld
mov
pop
xchg
inc
xchg
shrb
mov
lret
cmp
add
cmpl
repnz
inc
in
xchg
popa
mov
mov
lret
lods
fs
add
jbe
xchg
in
outsl
sbb
pmuludq
xor
ret
mov
push
xchg
mov
test
enter
fidivl
cmp
ja
inc
rclb
loope
sbb
add
lds
xor
icebp
pop
test
push
cmpsb
or
inc
cmp
cmp
nop
cmp
mov
movsb
jle
jecxz
mov
push
lods
mov
fildl
ret
ror
fdivp
and
pop
mov
dec
cmp
mov
sbb
sahf
push
stos
push
mov
push
sbb
int3
xlat
jbe
add
mov
aad
aas
inc
cmp
push
pop
ljmp
stos
mov
jecxz
pop
outsb
int3
inc
lret
mov
xor
dec
xchg
mov
mov
fildll
mov
int
push
pop
inc
sub
ret
sti
dec
inc
dec
push
sub
jle
pop
mov
aaa
xchg
and
repz
add
push
in
stc
inc
mov
jne
enter
mov
and
jg
movsl
inc
adc
cltd
inc
jne
jne
mov
test
popf
jb
mov
mov
lahf
pop
sub
push
nop
sub
xchg
out
lds
jle
add
add
int
or
push
cmpb
les
mov
mov
imul
dec
insl
mov
cli
mov
push
jmp
jne,pt
mov
ret
and
sub
dec
sbb
test
push
bound
xor
fsubrp
fstps
imul
push
sub
sar
sbb
int3
sbb
mov
push
mov
aam
imul
inc
fstps
inc
inc
sbb
out
cmpl
daa
cmp
mov
es
mov
lds
xchg
ds
inc
add
mov
sbb
mov
push
pop
gs
and
mov
push
pushf
sbb
mov
push
iret
pop
jecxz
inc
lods
insl
xlat
push
divb
sti
inc
notl
sub
mov
sub
cmp
and
mov
ss
xchg
ds
clc
add
sub
xor
mov
leave
sub
adc
stos
clc
dec
pushf
lock
pop
sub
push
mov
bound
cli
xor
insb
fdivrp
fsts
lods
dec
or
lods
sub
sbb
loop
push
xchg
data16
push
pop
or
pop
mov
sbb
les
inc
jg,pn
fwait
repz
mov
jge
jle
jle
scas
js
stc
pushf
ret
jbe
mov
loopne
xor
cmc
cmp
push
in
and
inc
fildl
clc
pop
test
mov
movsb
pop
inc
cmp
mov
add
cltd
adc
dec
mov
nop
and
test
mov
dec
push
adc
push
push
xchg
jp
lcall
pop
xchg
pop
xor
push
push
std
les
inc
adc
imul
jne
and
jo
pusha
testb
sti
jae
andl
xchg
or
lods
adc
test
adcb
cltd
js
jle
andnps
push
xlat
jmp
or
insb
xchg
nop
es
movsb
sub
imul
jmp
push
clc
cltd
jb
ljmp
sub
jns
mov
or
arpl
mov
xor
mov
xchg
packsswb
fimull
mov
or
out
daa
cmp
aam
pop
insb
push
jb
out
jbe
popf
test
push
iret
or
test
dec
gs
popa
pop
sub
sbb
in
cmp
cs
decb
mov
push
in
jb
sbb
fmuls
sbbl
out
aam
cmp
jae
mov
sbb
inc
inc
repz
mov
sbb
ss
mov
iret
insl
loope
push
dec
dec
xor
inc
fdivr
cli
aam
xchg
mov
push
stc
sti
les
add
or
pushf
jge
add
add
dec
sub
xchg
mov
xchg
xchg
cmp
push
dec
push
dec
lret
shlb
xor
mov
inc
popf
arpl
and
pushf
xor
mov
bound
mov
pop
nop
andl
xor
jo
mov
or
jecxz
sahf
sub
add
mov
or
cmpsb
mov
add
push
loope
ret
xchg
aad
or
in
repz
pop
outsl
jb
aaa
pop
lock
cmc
enter
pop
adc
jno
bound
cwtl
imul
js
es
in
mov
ljmp
adc
imul
dec
pop
push
push
cmc
inc
out
add
cmp
fsts
fisttpll
lock
jl
loopne
leave
fistpll
lret
insl
cmpl
adc
iret
fsubrs
xor
cltd
add
pop
call
sub
push
ret
icebp
cwtl
je
xor
cld
push
call
push
xchg
push
sub
call
and
mov
mov
dec
fidivl
outsl
mov
jecxz
testl
xchg
aad
mov
jns
mov
jo
xchg
or
lret
das
shrl
das
lret
cmp
lods
add
pop
or
lahf
inc
lcall
xor
hlt
movsl
inc
jg
xor
adc
in
popf
rcrl
mov
cmp
push
out
push
push
fmul
mov
push
fs
and
cmpl
dec
adc
bound
fimuls
test
sub
test
insb
jg
movsl
and
es
pop
inc
cmp
push
into
lods
jp
xor
add
pop
fmulp
pop
inc
xor
pushaw
push
orb
xchg
cltd
push
fwait
pop
call
sbb
pushf
jecxz
xor
push
pop
mov
inc
mov
shl
mov
cltd
inc
xchg
ss
lds
or
mov
cmp
je
pop
in
mov
test
fnstenv
fadd
imulb
int3
xchg
gs
dec
dec
addr16
js
adc
test
repz
hlt
ret
out
push
cli
sbb
inc
fisubrl
bound
and
xchg
imul
or
and
out
add
loop
xor
cmp
sbb
cmp
movb
pop
rolb
je
inc
xchg
jle
insb
data16
arpl
sti
test
adc
or
or
push
lret
ret
mov
mov
mov
push
sub
jb
pop
cmp
cmp
mov
pop
xchg
mov
xchg
inc
pop
pop
mov
sub
inc
psubw
lods
nop
cmpsl
stos
aad
mov
test
das
aad
adc
cmp
xor
sbbb
sbb
pop
push
outsb
mov
ret
push
sbb
das
mov
pushf
lods
mov
out
mov
sub
ss
jmp
cmpsl
cmpsl
xlat
push
aad
fstp
jns
rorb
or
fimull
rcrb
imul
sahf
jmp
and
jo
ljmp
xchg
jae
sbb
mov
sti
mov
arpl
int
inc
or
jle
fsubs
mulb
xlat
popf
cmc
sub
cmpsl
mov
jbe
int3
push
inc
push
jl
test
ja
bound
fdivr
and
pop
xchg
xor
pop
push
aaa
ss
jns
rolb
in
lcall
xchg
sub
loop
incl
dec
adc
mov
sub
inc
xor
jae
imul
xlat
mov
lret
flds
lods
mov
arpl
xchg
adc
xchg
cmp
jmp
fisubrl
cmp
sbb
into
sub
push
loop
in
lods
iret
bsr
rorl
fdivrs
imul
fwait
aam
adc
out
fsubrs
inc
loope
imul
bound
aaa
mov
inc
mov
sbb
jmp
lds
scas
xor
les
sbb
xor
scas
sbb
setg
into
shlb
lret
lock
and
or
sub
fld
mull
jle
push
mov
insb
fwait
sbb
cmpsl
mov
movsb
xchg
in
add
mov
popf
std
test
fcompl
lret
les
pop
xchg
scas
aaa
jne
or
and
test
pop
mov
in
fildll
mov
stc
fcoms
test
pop
scas
ljmp
dec
ret
ja
mov
test
pop
lods
and
stc
lods
mov
fdivp
mov
outsb
stc
mov
pop
int
jo
call
pop
sbb
pop
fiadds
inc
sub
sti
jbe
inc
lahf
test
jb
andb
movsb
lea
insl
arpl
enter
jb
and
jmp
mov
mov
add
lcall
jg
adc
adc
lea
lods
inc
pop
test
lcall
outsl
rol
pop
ret
fbstp
cmp
pop
jbe
cmp
mov
jns
sub
gs
lcall
sarb
popa
adc
adc
adc
pop
mov
xor
adc
lock
sahf
jg
jns
daa
push
repz
sub
addl
cmp
int
cli
add
xchg
fstps
xlat
adc
or
arpl
dec
movsl
mov
jmp
inc
push
and
adc
cmp
js
mov
mov
movsb
repz
mov
rcrl
lret
xor
sbb
das
cmp
xchg
xchg
add
repnz
mov
std
icebp
out
mov
ret
mov
lock
sbb
xchg
xchg
lret
sub
test
mov
rcll
ljmp
sub
in
push
ljmp
adc
mov
lea
push
dec
xorl
outsl
andb
dec
cli
daa
lods
into
loop
sbb
xor
pop
pop
loope
in
sbb
sbb
stos
inc
in
dec
or
insl
jo
mull
push
mov
jns
mov
mov
cmp
cmp
daa
cmp
mov
iret
dec
repz
xchg
aam
push
aad
test
or
mov
pop
inc
jge
stc
test
out
or
mov
insb
mov
loop
int
loope
dec
imul
or
mov
sbb
add
sahf
pop
xor
xchg
addr16
jbe
push
aas
clc
cli
js
inc
push
call
test
out
outsl
jnp
push
test
sub
sbb
mov
int
popf
aas
cmpsl
loop
inc
pop
add
idivb
add
scas
addb
loop
push
int
mov
cmc
je
fcmovb
pop
in
loope
mov
scas
jp
addr16
and
cmc
jmp
inc
push
fisubs
xor
pop
xor
addb
inc
inc
add
adc
movsb
mov
add
push
adc
xchg
mov
add
cmpsb
iret
or
sub
xchg
cltd
dec
fnstcw
stc
pop
sahf
fucomp
iret
mov
adc
cmp
int
leave
or
test
stos
add
cmp
pop
loope
cmp
cwtl
cmp
in
pop
ljmp
jl
pop
cmp
or
stc
dec
mov
into
pop
mov
sbb
jb
fwait
shlb
shll
aas
adc
inc
loopne
ss
iret
push
outsb
mov
mov
xabort
ds
cs
movsb
test
xlat
inc
out
hlt
shld
test
lcall
shlb
stos
fcmovb
cwtl
jle
filds
adcl
inc
in
xor
mov
scas
mov
pop
pop
add
push
push
dec
add
sub
xchg
jbe
hlt
mov
movsb
push
out
pusha
mov
jo
aad
mov
out
scas
ds
push
stos
or
hlt
or
xchg
cmp
lcall
aas
push
push
call
xchg
insb
jmp
jmp
imul
icebp
jae
sbbl
push
add
es
mov
fimull
aad
push
iret
pop
add
ss
hlt
mov
and
cltd
popa
jp
cmp
test
pusha
add
mov
into
push
iret
movsl
int
fists
outsb
push
push
jp
add
enter
outsl
adc
pop
xchg
inc
stc
push
scas
inc
push
test
enter
shll
fnstenv
data16
out
dec
pusha
test
int
in
xor
test
call
lret
dec
sbb
aas
dec
lret
mov
stos
pop
mov
dec
cmp
loope
test
cmp
mov
adc
mov
add
push
or
xor
aam
dec
and
sbb
lea
mov
or
lods
call
outsl
cld
pushf
xchg
push
xor
push
xor
mov
sub
and
cmc
xchg
or
aad
xlat
xchg
dec
or
decl
xchg
test
out
dec
sbbl
scas
xchg
or
add
sbb
mov
leave
or
adc
test
cli
lcall
sub
in
or
ret
cltd
push
jg
push
push
inc
mov
fisttpl
xchg
dec
popa
lret
scas
mov
mov
mov
xchg
inc
aad
jne
in
adc
inc
xor
jbe
bound
pop
pop
lahf
orb
loop
dec
testl
in
xchg
pop
arpl
mov
add
adc
loopne
repz
popf
inc
rcr
pop
dec
lcall
aas
mov
pop
popf
push
push
call
js
pmaxub
stos
mov
fsubrs
pop
or
out
test
jle
clc
insl
ret
pop
jp
sbb
inc
loop
cli
jmp
dec
icebp
mov
mov
pusha
mov
jge
cmp
in
mov
insl
mov
dec
push
rcll
ja
inc
fiadds
loopne
xor
test
insl
imul
sbbl
nop
and
mov
out
andl
cmp
test
jb
dec
pop
popf
in
and
data16
push
mov
sbb
loop
pop
jae
cmpsl
movsl
cs
xor
or
subl
xlat
adc
aaa
mov
mov
test
lea
dec
xchg
mov
push
inc
cmp
lock
jl
push
test
movsb
fistpl
test
push
jb
dec
push
inc
and
pop
cmpsl
subb
das
xor
in
aad
outsl
push
jmp
jo
xor
mov
ljmp
int3
xchg
mov
movsb
movsl
fldl
or
jle
push
ja
dec
and
add
idivl
or
lods
jge
call
jbe
ret
es
es
cmp
xor
cwtl
insl
popf
in
dec
cs
idivl
loope
enter
js
insl
adc
sub
cmp
xorb
shr
sarb
jnp
mov
mov
mov
es
out
aad
jno
imulb
dec
pop
je
pop
mov
lods
and
lock
in
push
pop
ds
inc
repnz
and
out
cltd
stos
lea
enter
jns
in
mov
push
lret
mov
cmpsb
mov
mov
sub
and
lea
cmpsl
xchg
push
lahf
rclb
loope
add
adc
addr16
push
stos
inc
in
mov
cmp
aaa
xchg
mov
out
jl
iret
pushf
sub
mov
test
jo,pt
int3
and
adc
inc
mov
add
pop
push
push
addr16
lret
popl
push
push
lods
cmp
mov
adc
hlt
call
cs
cmp
popa
xlat
es
push
dec
xor
adc
xchg
push
insl
mov
or
and
push
pop
fwait
pop
and
cltd
push
fsubrl
pop
movsl
jecxz
xchg
icebp
inc
lahf
mov
mov
dec
push
movl
icebp
fcoml
test
cmp
sub
pop
iret
scas
outsl
lcall
adc
fs
in
lods
aaa
and
call
int3
pop
mov
into
mov
aaa
popf
das
es
mov
test
aad
dec
das
pop
mov
cmp
pop
pop
xchg
push
or
aas
add
cmpsb
ljmp
dec
mov
lods
cltd
int3
xchg
cmp
movb
mov
movzwl
jae
push
mov
roll
or
dec
push
mov
test
xchg
and
sub
add
add
mov
scas
or
adc
test
andb
loopne
stc
orl
xor
lret
pop
jbe
mov
or
xchg
adc
shlb
xor
xchg
aas
cmp
lds
push
xor
cmp
stc
ret
mov
push
fucomip
sahf
push
sub
xchg
xlat
push
ja
jmp
test
out
ror
mov
or
pop
int3
rclb
scas
mov
outsl
jne
mov
add
out
xor
daa
pop
xor
mov
imul
es
add
nop
inc
fisttpll
cmp
sbb
in
mov
test
imul
inc
or
xlat
imul
cmp
mov
cltd
fidivs
cmp
sub
daa
pop
movsb
and
inc
je
repnz
pop
fists
int3
andb
out
pop
ja
mov
fwait
mov
ret
or
lock
pop
lock
adc
mov
add
lods
mov
fwait
or
xchg
mov
stos
cmp
sub
ret
test
es
mov
les
dec
cmc
mov
dec
loopne
xchg
ljmp
stc
fwait
xor
sub
mov
in
cmp
dec
jae
sbb
xchg
add
pop
ss
cli
sarb
pop
hlt
aam
rol
adcl
test
pushf
push
xor
imul
inc
outsl
iret
dec
xorb
xchg
dec
incb
fstps
jle
shrl
xor
fidivs
imul
sbb
sbb
xor
shrb
dec
cmp
mov
mov
lds
adc
das
xor
dec
shrd
enter
fbld
mov
mov
data16
data16
js
sbb
pop
pop
cs
out
and
lods
sbb
push
ds
jo
sbb
adc
add
pop
mov
xor
dec
mov
orl
idivl
dec
fimuls
lods
pushf
repz
lahf
fwait
push
adc
add
sub
out
rol
rcll
sub
fsubs
dec
repz
int
mov
mov
and
loope
andb
scas
mov
xchg
push
cmp
das
dec
ret
xchg
pop
mov
sbb
and
pop
lock
sbb
lods
xchg
and
dec
aas
ret
jne
test
cmp
sub
mov
pop
and
jmp
das
mov
pop
and
sub
or
outsl
scas
pop
cmp
mov
ret
pop
sahf
sbb
or
in
pushf
cmp
jg
sub
ljmp
call
imul
pop
sub
jnp
fidivrl
fwait
inc
xchg
pop
add
add
es
cwtl
call
mulb
jo
push
push
mov
sbb
lea
cmpsb
jns
mov
and
mov
test
jl
mov
icebp
lret
enter
insl
sub
aad
push
aaa
push
rcrl
dec
lods
inc
xor
lods
dec
test
jmp
pop
sbb
shrb
fwait
cmp
fsts
sbb
pop
jne
rcr
into
and
pop
push
mov
or
shl
jp
or
mov
push
int
push
out
or
popf
cmp
xor
movsl
lahf
mov
aam
cmpsb
loopne
ficoms
mov
test
push
cli
cld
inc
out
cmp
hlt
dec
insb
rolb
dec
out
call
pop
ds
lock
mov
enter
fimull
and
dec
push
nop
mov
lcall
inc
jge
push
mov
mov
out
shll
sahf
insl
lret
outsl
pop
cmpsb
sbb
push
sbb
mov
cs
cs
xor
in
dec
outsb
dec
sub
mov
iret
hlt
loopne
fnstenv
ficomps
test
or
xlat
test
stc
sbb
sub
sbb
cltd
sbb
push
lods
mov
stos
dec
mov
pop
xor
pop
xchg
dec
pop
or
lcall
push
inc
pop
or
cli
icebp
cli
mov
sbb
dec
fidivrl
xchg
mov
add
and
jbe
mov
fs
mov
push
push
or
push
pop
adc
push
ficoml
and
jp
xor
rcrl
repz
xor
daa
pop
insl
scas
stos
jns
test
lahf
dec
mov
sbb
inc
pop
fldenv
xchg
xchg
push
fwait
mov
scas
addr16
xor
sub
ljmp
in
push
pop
xchg
cmp
mov
inc
addl
sbb
lret
fstpl
rol
sbb
dec
mov
fs
enter
push
clc
stos
aas
negl
ror
stc
dec
mov
cmp
sub
push
lret
pushf
mov
lock
repz
inc
xorb
ja
movsb
aad
lahf
rcll
jno
mov
arpl
imul
bound
inc
cltd
mov
insb
mov
cmp
cltd
cmp
scas
movsl
movsl
push
lret
test
adc
mov
push
jmp
push
xchg
sbb
xchg
add
loop
jl
xchg
xchg
lret
dec
lds
int3
mov
out
mov
jp
jnp
push
xchg
add
mov
leave
or
push
inc
movsl
sub
add
pop
test
ljmp
mov
sarb
daa
sub
sbb
add
jp
sbb
es
sbb
add
loopne
pusha
iret
adc
dec
sbb
cli
adc
push
icebp
fldl
mov
mov
mov
fistps
jne
xor
dec
pop
cmp
adc
pop
aaa
xchg
jno
aam
xor
xor
out
and
les
push
subl
lods
cmovae
mov
xchg
icebp
ja
pop
pop
arpl
fcmovnu
int
les
aad
lahf
mov
sbb
pop
jmp
sti
jmp
je
adc
fwait
lods
mov
pushf
add
loopne
aad
shrb
pop
aas
sbb
ret
and
inc
xchg
push
lods
js
jb
into
cmpsb
add
push
pop
inc
divl
mov
pop
add
incb
mov
push
daa
mov
sbbl
shrb
flds
outsl
scas
outsl
pop
add
sahf
dec
lock
out
test
sbb
shr
and
adc
std
sub
sbb
jmp
inc
lret
add
sbb
filds
push
add
xor
imul
scas
pop
and
add
or
sub
mov
mov
inc
push
cmp
mov
div
adc
lock
mov
fcomps
add
into
int
cmpsl
mov
das
int
int3
and
and
push
jl
mov
notl
or
cmp
xor
xchg
mov
push
adc
pop
aam
jo
jp
pop
pop
pop
int3
aad
aad
enter
clc
sbb
insb
mov
jg
pop
test
push
push
and
lods
mov
add
sub
push
cmpsb
shl
out
mov
ficoms
cmp
mov
sbb
jp
adc
int
push
pop
sub
into
dec
jl
mov
cs
and
stc
cmc
fs
addr16
bound
shlb
imul
fs
mov
and
ret
fildl
lahf
int
push
xchg
test
minps
repz
cli
lock
or
imul
sub
jg
pop
dec
xor
push
sbb
test
addr16
sub
mov
or
push
jl
jecxz
and
pushl
pop
mov
push
mov
mov
mov
aas
js
sbb
int3
dec
rorb
dec
jne
inc
jbe
mov
cmp
mov
pop
mov
pop
ss
fcmovne
mov
xor
pusha
adc
insb
xor
hlt
lea
int3
imul
cmpsl
adc
bound
mov
inc
stos
xchg
ret
fiadds
xchg
push
add
rcll
pop
adc
data16
fs
out
mov
in
cmp
mov
xor
and
and
sahf
push
pop
mov
fildll
dec
mov
icebp
pop
test
je
out
mov
addr16
cltd
sbb
scas
out
ss
stos
iret
es
jbe
mov
inc
es
mov
rolb
jae
aas
int
cmp
dec
iret
push
icebp
pop
fdivl
dec
push
ja
lret
sbb
mov
xchg
jp
orl
pushf
imul
cmp
sub
rcl
addr16
mov
and
push
out
mov
in
jnp
je
pop
iret
push
rol
or
mov
mov
insl
adc
into
sti
cmpb
sub
push
pop
xchg
cmp
les
ficompl
lods
push
addl
dec
add
pop
scas
cs
out
xor
pop
pop
cmpsl
xchg
iret
fstl
ficompl
add
ljmp
push
and
xchg
int
andl
mov
aaa
inc
mov
call
cmpsl
repnz
imul
fwait
sbb
pop
pop
jmp
pop
int
jmp
xor
dec
pop
test
inc
cmp
pop
leave
inc
sbb
cmp
push
js
les
mov
xchg
gs
in
mull
out
sub
daa
or
js
insb
sti
call
popf
push
cltd
les
pop
fwait
pop
subl
rclb
sbb
ret
test
je
das
sub
pushf
popl
rclb
fidivrs
cli
test
aad
and
and
push
jmp
inc
add
ds
inc
or
push
or
sub
and
sub
lcall
subl
xchg
stc
lret
cli
jbe
mov
and
dec
in
and
lods
lcall
jno
clc
test
addr16
int3
add
jl
pop
mov
fwait
ss
fdivrl
out
lea
sub
adc
mov
mov
icebp
push
sub
and
jge
pop
jle
mov
dec
cmpsb
sbb
pop
es
stos
mov
mov
sub
icebp
dec
inc
aaa
jo
scas
enter
push
or
cmp
int
mov
dec
out
imul
ss
stos
and
les
push
jle
pushf
push
push
call
icebp
lahf
movsl
xchg
insl
xchg
roll
int
dec
push
mov
icebp
fisubrs
mov
inc
psllq
fstpt
in
data16
pushf
andl
and
loope
faddl
push
xor
mov
mov
cmpsb
clc
lock
lods
or
sub
pop
enter
pop
sub
call
dec
xchg
push
not
mov
aaa
mov
lock
shr
xchg
xor
in
repnz
je
push
pop
fistl
add
pop
xchg
sbb
stc
or
pusha
popa
out
repnz
lret
mov
dec
rorb
sub
idivb
ror
push
xor
nop
push
int
lods
add
adc
lods
xor
loop
aaa
push
push
mov
xchg
mov
adc
scas
in
cmpsl
ret
daa
and
mov
jl
pop
inc
es
mov
leave
ret
mov
jle
jmp
stc
outsl
and
into
push
push
jp
pop
clc
cmc
add
iret
das
in
adc
inc
and
mov
fbld
mov
scas
lcall
jp
pushf
xchg
fwait
mov
inc
shl
mov
cmp
jns
adc
fistpll
in
repz
gs
mov
mov
cmp
and
daa
or
mov
ret
icebp
out
jge
test
xorl
xchg
fldt
or
sub
xchg
push
into
dec
cmp
fwait
mov
div
add
les
imul
dec
pop
fnclex
into
in
out
aam
test
mov
aad
mov
mov
and
jno
cs
jmp
jae
hlt
das
jmp
cwtl
sub
or
leave
inc
push
jb
outsb
arpl
and
ss
fcoml
or
test
gs
mov
mov
xor
mov
pop
fcoml
push
jecxz
addl
pop
sbb
popf
dec
adc
push
xchg
mov
outsb
scas
in
xlat
into
mov
jo
xor
sbb
pop
jne
jne
add
mov
xlat
in
pop
xchg
sub
cmp
jb
dec
adc
xchg
cmp
add
shlb
cld
cld
push
sub
aam
into
mov
cli
mov
dec
ss
push
sub
pop
pop
aas
adcl
inc
orb
cli
enter
or
je
sub
adcl
into
cmpl
mov
mov
sbb
lods
jg
repnz
hlt
push
pcmpgtd
mov
xchg
inc
dec
inc
mov
stc
push
inc
cmp
mov
inc
pop
testb
or
out
mov
jg
dec
cmc
ss
mov
lods
shrl
and
loop
cwtl
add
out
push
mov
shrb
fstp
aaa
or
xchg
daa
xchg
lods
stc
xchg
aam
int
inc
mov
or
jno
lret
mov
and
ljmp
andl
cli
jno
fidivrl
cmp
adc
mov
mov
hlt
inc
sub
adc
mov
ret
popa
pushf
xor
shll
add
lods
pop
mov
cmp
nop
adc
inc
incb
movb
sbbl
lcall
rcrb
mov
mov
mov
jmp
add
and
fmulp
cmp
jecxz
call
or
push
out
int
sahf
xorl
enter
inc
dec
scas
push
loopne
and
push
pop
mov
pusha
sub
mov
lahf
cmp
out
mov
jg
jbe
pop
cltd
pop
lods
dec
jmp
scas
cmp
mov
lods
les
sbb
xlat
rclb
daa
or
xor
popf
push
sbb
xchg
mov
sub
pop
ds
and
xor
pop
mov
pop
rorl
pushf
in
mov
stos
mov
lods
loope
or
test
xor
repnz
or
std
repnz
cmc
fistps
jge
add
cmp
cmp
lds
sub
ds
mov
cmp
mov
cwtl
inc
pusha
mov
cmpsl
xchg
in
insb
sub
fstps
jmp
adc
or
push
mov
xchg
dec
lods
test
out
push
scas
enter
rclb
inc
jb
mov
jle
inc
dec
cld
into
mov
jmp
fidivrs
out
mov
cmp
out
inc
jbe
mov
inc
mov
jns
in
mov
ljmp
mov
push
outsl
sbb
xlat
lea
sbb
dec
cmp
mov
sbb
cmc
test
insb
pop
outsl
mov
ljmp
in
mov
clc
shl
int3
cmc
mov
or
shrb
xor
add
dec
mov
lret
cmp
test
cmp
bound
jl
lock
ja
mov
test
mov
adcl
into
ljmp
mov
xchg
inc
dec
mov
popf
rcll
ret
call
cmc
cmp
xchg
mov
cmc
mov
mov
repnz
ficoml
mov
cwtl
push
jae
jns
int
cltd
xlat
test
jae
dec
pop
icebp
loopne
mov
push
jmp
fdivl
add
imulb
sbb
mov
ds
sub
iret
shl
xchg
xor
xchg
fcmovnu
jb
cmc
xor
inc
pop
imul
jbe
fadds
inc
adc
sbb
repz
jnp
xor
movsl
jae
jle
xorb
pop
or
andl
adc
jge
mov
pop
pop
push
jmp
push
cmp
fstps
scas
rorl
outsl
jb
xchg
add
and
gs
hlt
jne
xchg
dec
cwtl
or
sbb
shlb
adcb
cmp
inc
cltd
jecxz
ljmp
orl
cmp
stc
sub
test
cmp
ds
fcoms
mov
and
xchg
cltd
icebp
jbe
lea
cld
mov
inc
stc
lcall
lret
adc
push
inc
cs
hlt
scas
out
scas
push
les
add
fists
ret
cmp
ficomps
dec
movsb
ror
mov
mov
popa
mov
jle
movsl
push
jae
pop
clc
lods
add
repz
jl
out
xchg
push
pop
jb
aam
icebp
out
out
scas
jnp
jl
mov
out
jno
sub
push
xchg
inc
lahf
aaa
push
push
push
pop
cmpsl
adc
xor
xor
call
sahf
roll
inc
out
out
mull
jnp
lahf
pop
mov
stos
jl
sub
or
adc
inc
out
add
je
inc
dec
add
ljmp
scas
xor
add
jmp
mov
lds
into
cmpl
mov
fwait
pop
jle
push
cld
push
movsb
mov
inc
xor
mov
pop
lret
mov
push
jo
outsl
cwtl
cmove
cmpb
movsb
js
dec
pop
push
push
scas
orl
pop
rcrb
in
orb
or
cmpsb
stc
pop
or
fisubl
lods
inc
outsl
mov
int3
jmpw
popa
hlt
push
stos
ds
sub
lahf
xchg
loopne
ret
dec
mov
mov
pop
in
repnz
cmp
sar
repnz
xor
dec
aas
leave
jb
push
int
fucomi
jne
dec
inc
cmpsl
shll
test
jp
jl
rclb
cli
mov
pop
jle
inc
inc
cwtl
out
cwtl
cld
and
jne
jmp
cli
shl
cmp
hlt
add
jnp
popa
xchg
in
je
add
dec
rclb
in
xchg
add
fidivrl
xchg
sbb
inc
mulb
lea
inc
mov
mov
cmp
and
lcall
imul
xchg
push
pushf
insb
add
dec
dec
push
sub
repz
je
sub
outsl
cld
sti
fiadds
scas
pop
nop
dec
imul
fwait
cs
insl
add
xchg
rol
push
pop
add
pushf
sbb
xchg
outsl
dec
xor
aad
lcall
xor
jl
shlb
ja
sahf
inc
pop
xchg
jge
dec
and
cmp
jp
xchg
notl
adcb
in
inc
jmp
out
inc
sub
lock
jmp
subl
icebp
dec
and
mov
add
push
lock
sub
aam
call
or
flds
push
push
lods
push
mov
in
loopne
add
call
add
pop
xor
pop
pop
push
inc
std
mov
and
cmp
imul
lods
sbb
fcompl
sarb
push
rclb
sub
adc
lods
test
loopne
fimull
mov
xchg
xlat
sub
testl
movsb
clc
loopne
push
in
int3
pop
rdtsc
dec
cli
inc
dec
fisttps
jo
xchg
mov
mov
push
inc
cmp
push
pop
enter
cltd
dec
stos
add
cs
lods
test
movsl
xchg
out
cmp
stc
repnz
fistl
cmp
addr16
and
or
ret
inc
add
mov
inc
stos
cltd
push
in
loop
mov
jns
lods
scas
cwtl
rorl
sbb
push
fnstsw
dec
scas
lock
dec
shrl
mov
xor
cwtl
push
filds
inc
pop
leave
mov
jge
gs
xor
or
call
std
push
adc
popf
subb
mov
add
aad
sbb
mov
pop
sub
lods
or
add
add
xchg
add
mov
adc
dec
mov
push
mov
lret
in
loopne
stc
mov
out
mov
add
jnp
mov
cmc
sub
cwtl
sahf
int
mov
push
mov
cmp
sbb
inc
xor
pop
stc
jo
stos
outsl
xchg
jo
or
mov
mov
cmp
mov
leave
es
mov
verw
movsb
bound
and
and
push
fdivs
ret
out
cmpsb
jbe
xor
sbbl
js,pn
fs
fdivl
xchg
jg
mov
cmpsl
jbe
mov
mov
test
jbe
mov
adc
pusha
fisubrs
jecxz
aad
popf
push
pop
fadd
lock
push
lock
hlt
sbb
xchg
loope
fldt
or
movsb
addl
mov
sbb
cltd
cltd
mov
lock
lcall
insb
pop
pusha
add
ljmp
dec
dec
call
cmp
pop
add
mov
es
xchg
jb
test
cmp
mov
in
dec
adc
add
xchg
int3
xchg
shrb
xlat
arpl
es
out
push
sbb
sbb
sbb
or
aam
bound
gs
lcall
mov
in
imul
insb
and
in
cmpsb
inc
pushf
pop
dec
fsubrp
pop
js
or
mov
stos
and
cli
out
adc
in
imul
lods
mov
jb
sub
xchg
sbb
and
cmp
jns
pop
into
ds
js
cmpl
cmp
ret
and
lret
and
icebp
mov
cmp
stos
push
cld
jp
inc
jge
frstor
jae
in
cmp
adc
bound
ja
shrl
lods
jbe
mov
jns
push
sti
jns
push
push
jne
adc
sbb
xor
insl
push
lcall
xchg
push
jecxz
jns
std
fistps
int
cwtl
add
pop
push
pop
jg
lock
loopne
inc
lret
out
xchg
jp
mov
das
jl
fildl
popa
sub
scas
in
in
dec
ja
jge
adc
pop
push
cmp
insl
xchg
push
sahf
pop
aaa
push
mov
ja
push
cltd
xchg
shlb
mov
push
mov
in
jne
push
cmp
push
in
testb
aas
sbb
mov
lock
fneni(8087
mov
mov
cmp
inc
arpl
repz
clc
and
out
dec
inc
inc
insb
pusha
int
xor
mov
xchg
mov
adc
mov
mov
cltd
xchg
mov
scas
ds
inc
sub
aaa
pop
imulb
out
shll
push
xlat
shll
pushf
icebp
xor
arpl
out
lds
nop
jg
ljmp
jne
test
out
insb
stos
andb
cmpsb
mov
mov
dec
push
or
addr16
dec
mov
pop
push
mov
jno
sar
outsb
cmpb
push
negl
push
fisubs
mov
bswap
fbstp
push
jl
add
sbb
cmc
scas
xor
fidivl
clc
mov
sub
adc
and
adc
call
push
jo
scas
stos
out
dec
push
test
fwait
imul
rcll
inc
xor
loopne
push
cmp
jbe
pop
push
loope
nop
sub
mov
popw
add
dec
dec
rorb
cmpsb
sub
and
push
pusha
out
push
mov
add
ret
mov
push
jle
jge
dec
xchg
xchg
cmpsl
insb
dec
sbb
addr16
jp
and
xor
cmp
sub
mov
inc
mov
cmpsb
cwtl
mov
das
lock
cmp
nop
ror
pop
sub
ss
testl
inc
adc
clc
insl
xchg
iret
fdivs
mov
loopne
insb
push
cli
mov
aaa
leave
jb
shrb
mov
rorl
negb
xchg
mov
jns
ljmp
sti
pop
dec
cmpsl
or
pop
hlt
imul
adc
mov
pop
adc
push
outsb
dec
pop
add
mov
outsb
and
sbb
cld
dec
xor
sub
dec
jne
cmp
sub
cmpsl
xor
pop
xchg
lea
cld
loop
xchg
mov
imul
jle
es
mov
add
lds
cmp
sbb
pushf
nop
fsubr
pop
mulps
daa
or
xor
push
rcl
insl
sub
lahf
fsub
stos
stc
fwait
xchg
jno
aam
jo
push
dec
pusha
mov
int3
divb
mov
cmp
add
pop
push
mull
in
in
xchg
js
arpl
popa
sbb
or
jns
aas
inc
inc
adc
xchg
push
xlat
insb
in
sub
pop
cld
movsb
adc
cs
outsb
inc
je
xchg
into
stos
jbe
sbb
sbb
add
es
movsl
rcll
dec
ds
rcrl
cltd
cwtl
repz
cld
jne
cmp
inc
ret
cwtl
das
notl
push
or
mov
xor
or
out
push
int3
xchg
push
push
js
testb
push
adc
shrb
inc
xchg
or
into
cmc
jmp
push
dec
jg
dec
ds
aad
pop
fimull
jno
loop,pn
add
push
popa
cmp
cmpsl
inc
fildl
hlt
ljmp
mov
lahf
insb
or
jbe
das
ljmp
push
adc
pop
call
mov
fsts
xchg
mov
or
shlb
xchg
sub
mov
mov
js
in
mov
ds
mov
add
jle
js
gs
push
inc
xchg
std
out
in
push
aad
cmpsl
dec
cpuid
imull
fisttpll
sub
es
inc
scas
pop
loopne
jbe
jmp
sbb
jbe
and
xchg
push
les
push
dec
lret
shll
in
ret
jg
jb
dec
push
mov
and
shrb
jne
pushf
mov
mov
add
mov
lret
cmpsb
inc
negl
jae
cwtl
fisubs
or
xchg
cmpsb
cmpsl
shrl
push
xchg
push
lcall
jecxz
fisubrl
dec
pop
enter
movsb
jbe
inc
mov
leave
cmp
aas
jb,pn
sbb
notl
aam
jp
sub
xchg
mov
jbe
out
mov
int
out
mov
jg
push
fmull
je
xchg
sub
rcll
lds
and
mov
fnsave
xor
dec
adc
sbb
ljmp
out
or
add
cmp
jne
xchg
movl
cmp
ja
out
push
lods
rep
icebp
repnz
pop
ret
sbb
mov
movsl
pusha
or
push
rcll
fisubs
xor
insb
xchg
add
into
sar
cmc
mov
jp
stos
xchg
lahf
inc
test
push
stc
loop
addb
push
pushf
icebp
fimuls
cmp
and
mov
fimuls
sub
jge
and
push
pusha
call
push
test
push
jp
and
mov
or
xlat
mov
frstor
sbb
jp
test
xorb
enter
cmp
inc
mov
adc
mov
mov
into
adc
loope
imul
out
xchg
jno
dec
cwtl
jb
out
mov
sbb
inc
pop
xchg
fdivl
sti
bound
add
int3
iret
cmp
xchg
out
jns
dec
adc
int3
fidivs
jge
pop
shlb
sub
dec
lret
fnstenv
repz
pushf
lock
cmpb
daa
pop
cld
mov
icebp
rcrb
mov
xlat
addr16
push
pop
mov
xchg
fs
les
and
cmp
or
dec
imul
pop
jg
sahf
cmpsl
movsl
int3
movsl
inc
es
cltd
int3
xlat
cmpsl
add
pop
xor
mov
xor
cmp
lock
mov
adc
addr16
or
out
pop
into
push
pop
fisubl
scas
push
dec
sub
mov
cmp
cmp
fldt
add
int
loopne
outsb
mov
mov
es
mov
aad
adc
mov
xchg
sub
mov
adc
cmp
gs
dec
or
and
xor
sbb
inc
sbb
sub
cli
insb
pop
ljmp
ljmp
in
jae
or
jno
mov
cmp
hlt
jecxz
jg
imul
jle
adcb
mov
faddp
dec
outsl
not
pop
ret
out
ss
arpl
and
xchg
mov
adc
sbb
push
das
pop
pop
and
mov
mov
mov
frstor
pop
cli
mov
mov
ss
data16
mov
xchg
xor
in
popf
pop
mov
jmp
inc
cltd
cmpb
or
out
pusha
mov
fnstsw
loopne
mov
in
addr16
mov
fs
mov
xorl
loope
xchg
fs
js
or
dec
mov
je
mov
fs
loopne
ds
ret
push
adc
je
inc
or
mov
loop
mov
pusha
int3
gs
inc
arpl
stos
into
dec
jp
and
inc
fs
xor
push
adcb
inc
inc
or
js
jbe
jg
arpl
ret
push
icebp
inc
fwait
icebp
fs
mov
iret
mov
insl
leave
inc
adc
imul
push
fadds
dec
or
addr16
mov
mov
mov
sub
cld
push
insb
ret
push
cltd
cmp
adc
mov
cmp
mov
push
stos
scas
or
push
cmc
push
out
or
femms
cmp
test
repz
adc
dec
test
xor
cmpb
sub
jno
sub
outsb
sub
add
shr
cmpsb
cmp
cli
mov
ja
xchg
js
dec
xchg
pop
hlt
inc
ljmp
or
pop
cmc
pop
mov
bound
or
and
movsl
mov
adc
popf
inc
add
cli
scas
lea
test
mov
test
int
jb
pushf
lea
add
add
clc
stc
orl
add
repz
stc
adc
inc
and
fdiv
fidivs
cmc
jo
jb
fimuls
sahf
sti
sar
in
pop
cmp
shl
shl
add
mov
xor
push
mov
lock
push
fs
xchg
push
mov
adc
pop
rclb
or
pop
mov
repz
lods
and
xchg
dec
out
sbb
jne
enter
out
pusha
cmp
push
mov
in
imul
mov
push
or
aam
adc
mov
fdiv
out
jae
sbb
inc
aas
pop
jle
inc
gs
or
lods
or
xchg
negb
scas
pop
dec
sub
push
nop
add
inc
lods
pop
inc
push
rolb
in
ss
and
lret
cmpsb
icebp
out
dec
ficoms
orl
daa
cld
push
adc
jge
andb
popa
insl
shll
push
mov
popf
inc
lahf
pop
std
or
mov
cmp
das
push
mov
jno
or
push
pop
inc
iret
stos
test
popa
int3
and
push
pop
push
pop
clc
mov
out
das
test
mov
jbe
ret
insb
cmpsb
call
adc
push
push
sub
mulb
lock
pop
sbb
sarl
mull
in
sub
push
pop
xchg
loop
insb
fprem1
sbb
and
lret
cmp
lods
lds
xchg
dec
lret
outsb
jns
xchg
push
mov
mov
lods
mov
mov
fidivl
mov
fildl
imulb
sub
fs
sbb
je
imul
inc
push
lea
pop
fisubrl
xor
xchg
cmpsl
or
cltd
loopne
fsub
cmp
add
sahf
stos
int3
loopne
cwtl
pop
dec
mov
cmp
fdiv
pop
fsubrl
or
add
in
nop
adc
or
addr16
and
mov
es
jnp
jle
icebp
insl
outsl
mov
ja
cli
in
data16
lret
movsw
xchg
mov
xor
andb
gs
cmp
mov
rclb
movsb
jne
js
outsl
push
dec
into
mov
aam
mov
jmp
repnz
repz
cmp
in
or
cmp
or
adc
shl
mov
sbb
stos
sbb
push
jle
add
xchg
mov
bound
mov
pop
les
mov
lret
jo
lock
dec
lods
lret
mov
imul
jecxz
out
adc
popf
add
ljmp
fadds
sub
cmp
sbb
cmpsb
fcoms
idivl
or
pop
pop
aas
mov
jbe
hlt
repnz
pop
subl
cmp
mov
rcll
idivb
loop
pop
pushf
jg
sbb
dec
fsubl
test
popa
push
mov
inc
movsl
scas
fisttpl
shl
mov
cmp
dec
xor
push
imul
inc
mov
adc
inc
mov
das
inc
mov
iret
mov
js,pt
dec
mov
test
pop
aad
int
into
in
lods
inc
mov
sahf
and
lret
addr16
pop
jnp
and
push
xor
and
fidivrs
mov
fsub
lea
fwait
pop
mov
lods
mov
mov
in
sub
jno
fs
xchg
pop
stc
and
push
dec
rclb
addl
push
dec
dec
into
pop
inc
imul
sbb
fnstsw
jnp
es
fistpl
pop
daa
rcll
and
stos
jno
dec
inc
push
lods
andl
into
cmp
mov
pop
cmp
fldenv
out
or
push
push
mov
cmp
into
test
adc
aam
addr16
jbe
lcall
mov
pop
pop
cmp
test
sbb
call
insb
lods
push
rcrb
test
sbb
rclb
jb
pushf
mov
outsb
and
pop
jno
mov
andl
inc
jp
imul
jae
imul
scas
pop
popf
mov
xor
mov
cli
ds
push
jecxz
mov
pop
jecxz
fwait
subl
enter
pop
cmp
les
out
loop
bound
rcll
lcall
push
mov
cmp
mov
lods
enter
cwtl
mov
inc
in
lods
sub
cmp
and
jo
aad
leave
or
jmp
pop
ljmp
and
aad
dec
out
xchg
out
or
int3
jge
shlb
sbb
and
push
ds
fcmovne
sub
push
sarl
mov
push
pop
jno
push
or
sarb
fbstp
fucomi
pop
fsubs
and
lods
jg
lea
mov
sarb
aad
xchg
cld
pushf
lods
xor
jbe
or
jns
outsl
and
mov
and
pushf
loope
lahf
mov
je
pop
push
or
push
dec
sub
fmul
cmp
add
test
rolb
hlt
push
xor
add
or
mov
cmp
xlat
das
popf
cmpl
mov
ret
out
inc
pop
aad
and
and
inc
std
std
out
xor
out
out
mov
data16
push
mov
cmpsb
mov
fcmovu
pushf
push
push
insb
or
test
dec
inc
fidivl
ds
push
xlat
sbb
lea
cmp
sub
stos
int3
mov
adc
mov
lds
or
sub
nop
push
ja
iret
fistpl
sbb
loope
pop
push
xchg
mov
inc
xor
sti
clc
push
popa
adc
mov
scas
sahf
push
clc
es
icebp
clc
sbb
popa
mov
cmp
out
mov
xor
sarl
icebp
xor
cld
scas
mov
mov
dec
xchg
mov
fucom
fwait
dec
int
call
dec
mov
mov
insl
dec
push
jp
mov
jns
mov
loope
cwtl
xor
xor
subl
cmp
xchg
xchg
pop
aaa
add
xchg
sub
test
cmp
and
jb
xor
adc
sti
adc
xchg
cmp
ss
mov
mov
push
or
and
pop
or
jb
int
dec
hlt
mov
int3
adc
jae
mov
inc
or
cmc
outsl
cs
outsl
pop
mov
lods
enter
or
leave
pushf
rol
push
xchg
das
or
repnz
pop
push
push
mov
fs
pop
es
test
sbb
outsl
inc
icebp
mov
pop
xchg
jo
andb
cmp
mov
pop
mov
push
pop
adc
pop
sbb
iret
or
pusha
xchg
inc
aaa
stos
mov
xlat
mov
mov
insl
jmp
inc
sbb
mov
adc
adc
add
mov
push
scas
or
or
mov
pop
jns
in
outsb
sbb
ret
loope
ss
xor
aam
pop
flds
cmp
and
fisubrl
stos
lcall
inc
inc
gs
mov
imul
addr16
test
lods
cmp
mov
rcl
rol
lods
adc
push
sbb
and
xor
rolb
xchg
enter
jbe
fimull
insb
aam
int3
imul
popf
ljmp
add
push
push
xchg
iret
mov
sbbl
mov
ds
jl
pop
dec
ja
sub
push
leave
fadds
mov
cmp
arpl
movsb
xchg
add
scas
pushf
aas
cmpsb
adc
stos
iret
pop
xchg
fimull
pusha
lods
jo
push
mov
in
lea
xchg
pop
add
xor
mov
repz
pop
pop
push
sarl
pusha
pusha
and
mov
or
add
cld
xchg
adc
enter
dec
aam
daa
or
cld
mov
push
jae
jns
push
jae
aad
add
out
mov
adc
dec
dec
ljmp
xchg
lods
dec
jnp
cmp
les
xchg
stc
rcrl
sub
mov
outsb
cmp
sahf
es
xchg
mov
cmp
and
xchg
fidivrs
jmp
fs
loop
repz
mov
bound
xor
nop
lea
inc
sbb
cs
pop
fs
gs
adc
or
ret
gs
icebp
jb
xor
dec
cmp
dec
or
aaa
cmpsl
adc
mov
lret
dec
lret
outsl
insb
jnp
sti
icebp
stc
popa
jge
xchg
mov
test
mov
mov
aad
loop
pop
out
pop
mov
sbb
or
addr16
ljmp
lret
cli
loop
add
dec
aas
pop
inc
jb
mov
cs
lods
fwait
cmp
fldcw
and
fsin
jns
mov
pop
cld
xorb
inc
xchg
and
mov
sbb
push
jnp
imul
jns
and
rolb
ss
mov
das
lret
pop
mov
jae
in
jge
or
bnd
push
mov
in
push
ja
ret
jbe
je
adc
push
in
cmpsl
sub
aas
pop
xchg
jae
sbb
insl
lods
scas
outsb
cmp
mov
es
into
cmp
mov
mov
mov
xchg
mov
xor
pop
subl
sbb
pop
jb
fnstsw
js
cmp
les
or
add
and
shll
jp
out
add
popf
out
dec
test
jo
cmp
out
xor
xchg
cld
pop
loope
xchg
push
ds
repz
out
ljmp
popf
cld
addl
les
insb
jae
xchg
jne
mov
fiaddl
push
xor
mov
int
xchg
call
je
push
dec
cmc
mov
out
mov
outsb
mov
bound
jg
pop
sbb
test
xor
shlb
loope
cmpb
ret
out
sahf
imul
xchg
mov
cmpl
pop
shll
out
inc
inc
xchg
scas
add
dec
cmp
fadds
dec
imul
fwait
inc
shll
or
scas
leave
lock
stc
testb
mov
daa
lret
pop
fdivs
xor
mov
es
adc
movsl
or
outsb
adc
jmp
les
xchg
clc
ss
data16
inc
and
mov
ja
popa
data16
gs
dec
std
push
popa
push
jns
mov
pop
mov
or
repnz
cwtl
out
inc
pop
jp
cmp
outsl
mov
stos
sub
ljmp
je
push
push
xchg
pop
pop
insl
push
xchg
xchg
sahf
fcmovu
and
push
mov
ds
or
aaa
xchg
pop
xlat
jnp
mov
adc
push
sarb
sub
sub
dec
xor
cmc
push
mov
mov
cli
enter
mov
imul
lret
adc
fistps
lret
add
out
std
scas
pushf
in
jmp
and
dec
scas
dec
sbb
cmpsb
push
iret
sbb
sub
push
ret
inc
movsb
sarl
add
fistpll
or
mov
and
pop
or
pop
mov
in
mov
shld
push
lods
mov
fisubrl
mov
scas
sbb
inc
ret
fcompl
out
xor
push
push
or
xchg
inc
mov
add
jmp
lea
movsl
inc
icebp
and
mov
inc
xlat
shl
movsb
es
fildl
add
adc
push
xchg
pop
cmc
out
xchg
dec
ret
repz
jmp
sti
inc
push
stc
add
cltd
cld
inc
fstpl
out
push
inc
les
pop
mov
stos
or
mov
iret
adc
xor
xchg
mov
and
out
hlt
cmp
push
sub
mov
mov
mov
xchg
test
and
sti
daa
aaa
and
rcll
cmp
or
push
pop
add
mov
fcomps
mov
popl
push
enter
pusha
fistps
jl
addr16
into
adc
push
xorb
insb
adc
dec
mov
lahf
stos
insb
loope
ror
in
inc
adc
and
cmp
lret
pushf
jnp
push
int
imul
cmp
mov
bound
sub
jnp
repz
adc
dec
call
adc
out
lds
or
imul
push
add
mov
and
pop
sti
mov
sbb
dec
popa
aas
jbe
sbb
sub
mov
mov
push
cmp
lock
call
mov
imul
dec
hlt
leave
xor
adc
push
aad
sbb
add
hlt
lock
add
js
xlat
dec
pop
test
jge
pop
push
aad
adc
dec
jbe
mov
test
xor
out
push
ficoms
stos
popl
scas
pop
std
cmpsb
sti
fwait
aaa
dec
cli
dec
jl
out
mov
rcrb
xchg
jmp
or
xchg
inc
xor
mov
sub
mov
repnz
in
rorb
xlat
jp
push
lea
popa
scas
fldt
adc
mov
sub
ret
jns
insl
and
jne
push
cmp
dec
push
stos
loopne
fiadds
jecxz
ret
repnz
cmp
cmp
loope
arpl
mov
add
stos
jl
out
sub
loopne
insb
mov
jns
data16
fs
cmpsl
stos
je
xor
orb
cmpsl
mov
lcall
data16
cmp
orl
dec
mov
es
cmpsb
cli
mov
repnz
lea
enter
das
pushf
aaa
push
lods
rcrl
mov
test
dec
jo
cmp
sar
and
sti
or
in
jo
cmpb
out
dec
mov
out
in
mov
in
mov
lret
icebp
rolb
adc
mov
fsts
test
mov
xor
loope
inc
mov
into
adc
push
adc
cmp
mov
pop
jge
lret
add
mov
xchg
rcrl
cwtl
add
aam
add
push
jbe
test
mov
clc
mov
ja
add
sub
xlat
jb
cwtl
cmp
mov
xchg
xor
fadds
sub
jmp
enter
mov
push
das
push
out
mov
sub
outsl
clc
or
decb
idivb
imul
adc
inc
lcall
lcall
fcoml
cmpsb
insb
sub
dec
add
negb
jmp
neg
test
sub
imul
negb
dec
int
mov
shll
inc
inc
movsb
and
cmp
scas
sub
push
xchg
data16
cmp
jl
push
pop
pop
push
fwait
imull
into
sub
idiv
or
jnp
jae
stos
xor
fs
into
mov
jecxz
rclb
mov
dec
cmp
pop
out
cwtl
aad
int3
xchg
int
push
push
push
loop
xchg
iret
xor
imul
jl
loopne
inc
fwait
rcll
jb
bound
fcoms
lods
xchg
adc
pop
std
scas
mov
popf
inc
lock
scas
mov
mov
pop
jns
dec
sbb
fwait
cmp
aad
popf
mov
add
cmp
mov
and
fadd
shlb
mov
fucomip
xchg
mov
mov
sub
nop
roll
test
jg
xchg
push
dec
jnp
jns
ret
pushf
xor
adc
pop
je
xchg
and
test
or
mov
aas
sbb
cli
testb
addr16
pop
sahf
aam
out
cwtl
inc
push
sub
sti
push
in
test
rorl
adcl
adc
inc
mov
fiadds
jge
xor
aam
push
xchg
jle
mov
cld
out
mov
pop
jns
jae
sub
stos
lds
fucomp
pop
add
lds
sahf
cmc
mov
mov
invd
je
mov
adc
loope
mov
mov
sbb
sahf
xchg
in
or
xlat
dec
movsl
push
push
mov
rorl
mov
mov
jp
out
push
sbb
xor
push
mov
stos
or
push
ja
or
pop
pop
ds
mov
movsb
push
push
imul
adc
dec
adc
das
outsb
popf
ds
outsl
les
add
jae
mov
jbe
fs
fildll
mov
jge
cmpsl
icebp
sbb
popa
loop
mov
add
lock
pushf
add
ds
push
jg
repnz
rclb
push
dec
xchg
and
inc
andb
cs
out
loop
mov
adc
mov
mov
dec
sub
jmp
lcall
add
stc
add
mov
gs
movsl
jge
jae
cltd
int3
cmp
mov
sub
pop
push
inc
xchg
adc
fwait
repnz
or
pop
inc
push
push
aas
jmp
jg
inc
sub
fistl
mov
stos
out
sarl
in
enter
mov
mov
dec
inc
xor
enter
mov
mov
cmp
fbld
mov
bound
push
pop
fcoml
loopne
mov
out
pop
cltd
inc
stc
gs
es
loopne,pn
aad
mov
arpl
test
bound
push
gs
imul
mov
or
mov
pop
int
jne
xor
mov
and
aam
insb
nop
aas
sbb
jecxz
subb
adc
repz
or
stc
dec
mov
and
inc
push
stos
ds
cltd
push
xor
lcall
cmp
imul
scas
mov
je
rorb
cmp
cwtl
adc
or
mov
outsb
pushf
jns
lea
adc
ret
leave
pushf
test
push
es
mov
or
testl
popa
insb
mov
dec
inc
xor
das
mov
sub
pop
or
or
adc
push
aaa
call
xchg
dec
xor
ja
mov
enter
mov
inc
mov
lcall
jns
pop
sub
sub
and
lods
and
push
notb
les
incl
pop
jcxz
or
daa
cmc
or
sub
fiadds
jle
js
clc
imul
imul
xorw
and
stos
fcmovb
pop
push
cs
lcall
add
mov
sub
cmp
and
pop
dec
fildll
sub
push
aam
ljmp
insb
push
aad
mov
jl
sbb
xchg
xchg
mov
rcrb
call
ret
and
dec
das
les
dec
fidivs
out
xorb
xor
or
insb
dec
cmp
int3
data16
jg
aaa
lcall
jmp
loope
sub
mov
outsl
test
and
adc
sbb
mov
inc
movb
cmp
hlt
in
push
push
lret
imul
or
imulb
cmp
or
aad
inc
pop
in
or
mov
insb
pop
je
cs
lea
or
addb
stos
repnz
lahf
cmp
jp
outsl
xorl
mov
roll
in
push
pushf
out
rorl
lock
mov
cwtl
jb
cs
dec
outsb
in
lahf
mov
or
pusha
jle
cli
or
or
pop
sahf
xchg
and
sbb
data16
aas
in
in
lock
sbb
test
and
push
adc
xchg
fcomps
ja
cld
dec
xchg
and
xchg
out
insb
cli
das
shrl
inc
pop
cmp
lret
cmpsb
stos
lea
mov
cmp
pop
rcr
cmp
mov
stos
jbe
aas
cs
xchg
cmp
and
xor
xchg
shlb
push
adc
lods
and
push
aas
ret
ds
ja
push
cwtl
test
jecxz
mov
sub
stos
and
xor
in
sub
lcall
dec
push
outsl
xchg
repnz
int3
adc
mov
fs
sbb
into
movsb
mov
loope
cmp
ret
cmp
add
cs
roll
mov
or
enter
xchg
out
push
dec
leave
fs
inc
xchg
dec
add
lret
xor
lock
lea
mov
jle
lea
xor
movsb
test
cmp
adc
inc
in
or
sbb
mov
fwait
jns
in
ds
fstp
add
lret
movsl
dec
push
mov
rorb
imul
int3
fisttpl
mov
mov
sub
cmpsl
jb
pop
sub
popa
mov
mov
xchg
loopne
inc
push
pop
jge
push
sar
xor
add
mov
jle
ftst
push
fwait
scas
orb
loopne
filds
dec
ficomps
xor
jecxz
cmp
clc
jge
test
mov
add
ljmp
cld
cmp
jge
or
add
or
xchg
and
mov
repnz
aam
mov
inc
repz
mov
outsl
imul
push
sbb
stc
fiadds
adc
pop
mov
loop
rolb
mov
push
push
rorb
xchg
mov
adcl
xchg
scas
or
xchg
leave
sub
mov
stos
mov
int3
sub
insb
pop
mov
dec
or
nop
and
repz
sub
push
push
gs
pop
or
cmp
mov
jo
mov
inc
sbb
popf
or
cmc
cmpsl
mov
sbb
cmpb
jno
and
loopne
pop
mov
orl
inc
jb
int3
insl
cmp
loop
adc
sub
cmp
pop
insl
fldcw
pop
jmp
cmp
cld
pop
cmpsl
les
sbbb
mov
in
scas
push
push
sbb
nop
out
cmp
lods
mov
shll
inc
ret
mov
push
xor
jae
mov
inc
mov
int
sti
mov
sub
ljmp
jle
inc
mov
popf
std
popa
inc
mov
adc
jge
test
cvtpi2ps
pop
inc
fwait
push
adc
jecxz
rcrl
leave
dec
xor
pusha
daa
mov
add
fwait
push
clc
pop
push
loop
leave
mov
loop
sbb
rorl
nop
fwait
cmp
cmp
lret
xorb
cmp
ret
adc
fadd
pop
and
or
push
pop
push
cmp
mull
pop
push
popl
mov
or
les
aas
aam
in
loope
xor
xor
in
mov
rorb
push
cltd
arpl
sub
push
jnp
lret
pushf
mov
addr16
dec
idivb
in
and
pop
es
clc
dec
pusha
jnp
mov
stos
add
mov
repz
dec
cmp
mov
cmp
movsl
lods
add
lock
cmp
push
xor
mov
sti
cmpsb
or
push
sub
lods
out
shl
dec
test
jnp
test
xchg
mov
push
mov
jecxz
and
rorb
and
lea
push
cs
pandn
xor
icebp
cmc
fwait
dec
xchg
aaa
lea
fldenv
add
push
xor
in
inc
pop
test
cmp
loop
mov
sbb
enter
mov
cmp
out
aas
xor
ror
enter
xorb
faddl
gs
cli
daa
in
cmc
xchg
mov
insl
les
mov
and
orb
xor
data16
loopne
inc
jge
pop
shll
decl
sbb
fldt
test
es
test
mov
push
mov
fisubs
paddusw
int
mov
cmp
cs
mov
clc
pop
std
pop
cmpsl
out
jno
pop
xlat
inc
fsubl
add
dec
fstps
jg
into
inc
or
ljmp
sbb
fdivrs
jmp
adc
push
inc
dec
into
cmp
sti
pop
loop
mov
adc
mov
loopne
sub
mov
sub
mov
ljmp
scas
test
or
fwait
cmpsb
or
fcomp
lcall
cmp
arpl
cmp
mov
mov
sbb
xor
sahf
fst
cmc
mov
out
inc
mov
mov
mov
dec
fsubs
aam
pop
push
add
mov
add
hlt
out
gs
js
jle
lahf
int3
and
scas
rorl
sbb
jne
push
dec
sub
repz
stos
fwait
pop
cld
cld
xchg
mov
push
out
clc
jnp
or
mov
xor
arpl
cmp
push
mov
lea
scas
icebp
xchg
sub
push
out
test
nop
pop
fs
sub
dec
jnp
xchg
jmp
sbb
jne
icebp
jbe
iret
std
adc
cltd
xchg
stc
test
xor
xlat
mov
sub
xchg
cs
sbb
out
push
fwait
jns
sub
xor
and
fisubrl
inc
push
jmp
pop
cmc
or
sub
xchg
inc
ljmp
arpl
sbb
or
sub
inc
xchg
adcb
jg
test
xor
add
mov
pop
fidivrs
in
sbbb
sarl
pushf
adc
outsl
insb
or
jbe
xor
popf
or
add
bound
outsb
mov
loopne
hlt
mov
or
add
rorb
je
push
std
popa
jle
clc
inc
enter
flds
sti
lcall
lods
loop
aam
ror
ds
and
xchg
mov
xchg
cltd
cmp
jb
out
xchg
mov
idiv
inc
mov
lods
jmp
jp
jecxz
and
sbb
loopne
mov
rorb
rol
in
lret
push
lahf
movsl
add
nop
mov
sti
popf
push
call
mov
jecxz
lret
xor
sub
ljmp
or
ret
mov
inc
lea
icebp
xor
jmp
adc
dec
fdivrl
cwtl
fisubrs
cmc
adc
nop
cmp
mov
mov
fistpl
out
xchg
push
inc
int3
adc
mov
dec
dec
js
jno
rolb
insb
js
loop
xlat
xchg
pop
adc
loopne
fcomp
sahf
add
pop
cltd
fcompl
push
shl
pusha
lret
mov
jle
xchg
testb
push
stos
movsl
dec
in
and
imul
cld
xchg
cmp
pop
dec
mov
pop
sub
imul
or
mov
sbb
sub
and
ret
push
inc
fisubrs
mov
or
push
cmp
jbe
loope
sub
lock
out
push
cwtl
inc
aaa
inc
ret
adc
ds
leave
adc
fmull
das
pop
aad
mov
scas
push
adc
or
nop
ret
mov
pop
and
xchg
outsb
in
sub
mov
mov
jnp
push
jbe
aam
lahf
inc
xchg
aaa
dec
movsl
popa
fisubrs
cwtl
orb
data16
mov
int
hlt
adc
xor
pop
xchg
sbb
inc
jns
and
scas
stos
sub
lock
lcall
mov
inc
addr16
cmc
sti
int
sahf
cltd
aas
cwtl
aas
shlb
lret
push
jno
ds
outsl
outsl
pop
ror
xchg
int
cmp
inc
or
test
xchg
cmp
xchg
ret
mov
mov
int
in
cmpsl
or
out
push
sbbl
mov
cld
mov
scas
xchg
xchg
divl
into
adc
lds
jmp
mov
ret
adcb
mov
and
pop
fmul
fmuls
jp
push
pop
aam
gs
inc
push
and
mov
mov
loop
xchg
out
pop
pop
mov
je
pop
jle
repz
push
scas
and
inc
pop
fwait
sbb
jbe
shll
fistpll
out
push
xchg
lds
rcll
adc
ljmp
nop
cwtl
lret
pop
test
out
xlat
gs
and
dec
es
dec
aas
mov
call
jno
cs
neg
fdivl
hlt
push
aad
xchg
ss
fwait
iret
repnz
adc
lods
jp
xor
in
jns
mov
jg
jl
xor
mov
pop
popf
lock
pop
xor
sbb
adc
adcb
push
mov
pop
mov
push
xor
sbb
sub
test
int
push
xor
mov
mov
sub
mov
and
stos
jns
push
arpl
lea
fs
add
hlt
jo
jb
inc
mov
xor
push
movsl
adc
ret
adc
loope
dec
insl
push
xchg
xchg
mov
ds
add
mov
push
mov
dec
das
int3
cli
and
dec
pop
push
sub
lret
movsb
jno
les
ret
jno
push
shlb
push
lcall
repz
and
into
mov
fbstp
cmp
adc
hlt
inc
and
sbb
jg
mov
mov
ret
mov
or
push
fisubrs
dec
mov
test
mov
sarl
enter
adc
and
daa
fildll
in
mov
aaa
push
jnp
pop
in
lea
ja
cmp
inc
popf
sbb
lret
mov
pop
or
fwait
pop
xor
and
insl
enter
popf
js
cltd
jge
leave
outsl
aaa
inc
push
ret
test
mov
jmp
lods
call
adc
in
arpl
adc
inc
mov
int3
daa
dec
repz
mov
mov
outsb
add
mov
sbb
scas
fldenv
roll
pop
shlb
adc
dec
add
mov
add
jb
mov
cmp
xor
sub
mov
movsb
sbb
adc
mov
xor
dec
aam
mov
cld
xchg
sbb
jecxz
cmp
lock
dec
loope
call
inc
jbe
xchg
mov
jp
jnp
repz
add
xchg
mov
lret
out
clc
mov
push
aam
std
jl
lcall
ds
and
aad
insl
adc
sbb
aas
js
adc
add
xor
aaa
mov
or
jne
mov
in
in
xchg
lret
sbb
xor
into
les
popa
jno
pop
push
push
or
jnp
mov
cmp
test
mov
cmp
iret
xchg
in
sbb
sbb
aam
movsl
xchg
call
push
and
outsb
test
lods
cmc
outsl
xchg
inc
inc
inc
adc
mov
repz
sub
data16
fldl
data16
xchg
push
mov
ljmp
call
adc
call
adc
ljmp
jno
insb
cmp
out
imul
sbb
int
loopne
mov
out
shll
mov
icebp
xchg
adc
je
mov
xchg
out
into
add
ja
insl
fistpl
inc
xchg
rcrl
loop
cmpb
shlb
leave
adc
cmpsb
jle
inc
dec
xchg
aas
shll
cmpps
dec
dec
out
rcl
sbb
jmp
mov
pop
pop
add
sbb
add
push
push
fisttpl
adc
sbb
inc
xchg
ss
fimull
mov
sahf
ret
stc
rcrl
jbe
insb
dec
mov
icebp
test
lret
push
pop
mov
inc
and
xlat
das
jecxz
aad
dec
adc
jle
pop
out
or
hlt
cmp
mov
add
pop
dec
fdiv
mov
and
stos
jae
sahf
sahf
imul
clc
dec
or
ret
push
add
push
decb
daa
or
adc
add
sub
jmp
mov
push
std
ret
xlat
adc
shll
cmpsb
sbb
daa
or
sub
test
mov
insl
mov
faddp
fwait
add
subb
or
push
lods
and
jl
push
mov
pop
jb
jl
inc
sub
push
int
cli
ja
arpl
movsb
and
bound
fnstcw
bound
push
mov
movswl
iret
enter
inc
daa
rolb
pop
aas
pop
xor
aam
cmpsb
in
out
pop
xchg
dec
or
xor
out
popa
mov
fildll
iret
idivl
add
icebp
loop
les
mov
das
es
fiaddl
in
ss
mov
inc
mov
and
movsb
add
scas
scas
mov
subl
jae
cmp
lahf
pop
jp
aaa
leave
ss
stos
insb
stos
test
push
mov
inc
addb
mov
into
mov
xchg
in
xor
pop
xor
sbb
jecxz
mov
cmp
adc
shlb
sahf
nop
add
mov
sbb
push
pop
les
popf
mov
jae
pop
jb
xchg
and
sahf
mov
xor
or
adc
sbb
jbe
push
cmp
mov
mov
jno
cmpsb
mov
sbb
inc
mov
cli
iret
mov
sbb
js
lcall
or
push
sub
cmp
int
ds
loopne
pop
mov
out
dec
in
cmpsb
sub
les
es
mov
and
jecxz
and
out
popf
popf
shl
leave
cs
jg
call
and
lods
xchg
jp
ficoms
sbb
in
dec
jno
inc
sub
add
cli
in
dec
out
into
push
scas
dec
xchg
mov
fistl
pop
faddl
fcmovu
mov
push
cmpb
scas
stc
scas
imul
outsl
adcl
mov
xchg
fcmovu
in
out
mov
fidivrl
scas
sub
and
and
and
dec
push
std
stos
jmp
fimull
and
pusha
jbe
ffree
push
pop
or
cmpsl
ret
push
xchg
push
mov
and
test
int
or
xlat
adc
cli
mulb
clc
roll
scas
sbb
sbb
mov
mov
dec
fcmovu
add
jo
sub
clc
push
cmp
jg
cmpsb
cmpsl
mov
jnp
mov
cmp
sub
push
jns
push
enter
rorl
push
xor
mov
loope
subl
inc
jle
push
dec
loope
lret
sbb
repz
sti
aaa
mov
mull
pop
int
out
pop
mov
add
jae
loopne
xor
mov
in
loope
mov
sub
or
in
dec
filds
out
inc
jbe
fisttpll
sbb
jmp
mov
inc
insb
out
repnz
popf
and
loopne
mov
dec
mov
test
or
sarl
xchg
mov
inc
sahf
inc
lds
mov
fucomip
in
mov
mov
adc
fists
addr16
cmp
fcomp
cmpsb
sub
rcl
lcall
push
mov
clc
int3
nop
mov
fimull
ret
or
mov
test
imul
push
sub
xor
sub
sbb
aas
je
mov
fwait
dec
mov
xchg
insl
push
pop
shll
pop
pusha
roll
lods
or
sahf
jge
hlt
push
rolb
fcompl
icebp
jnp
pop
aas
sbb
pop
inc
addr16
fimull
mov
ret
test
add
lcall
inc
pusha
mov
or
je
mov
out
lock
lods
dec
and
and
lods
cwtl
out
testl
lcall
mov
push
add
mov
jno
push
ret
mov
call
xchg
mull
movsl
sbbl
cmp
mov
jge
jmp
repz
mov
cltd
inc
iret
adc
aam
xchg
mov
pop
push
mov
lcall
mov
xchg
ja
pushl
fstpl
cs
xchg
das
loope
xchg
and
xchg
sub
xchg
pop
cmp
repz
test
jo
mov
insl
sub
out
push
adc
iret
icebp
cmp
scas
xchg
push
enter
xchg
adc
pop
pop
test
pop
imull
arpl
jb
xor
call
jmp
int3
mov
outsb
popf
xchg
mov
into
call
or
jg
add
cmc
movsb
and
imul
in
lods
cmp
cwtl
mov
inc
outsl
repnz
in
dec
int3
popa
fcmovbe
mov
lds
cmc
lret
jnp
push
loopne
iret
mov
push
xchg
push
jae
cwtl
pop
fcompl
inc
mov
or
cmp
cltd
sbb
daa
icebp
xchg
lcall
aad
pop
cmp
sub
jle
fisttpll
cmc
mov
push
cmc
inc
vmovmskpd
mov
and
scas
sbb
stos
sub
lret
out
insb
pop
arpl
idivl
cmp
and
inc
add
jmp
dec
sbbl
and
aam
sar
mov
pop
jmp
shll
insb
mov
gs
js
adc
push
push
imul
mov
repz
les
cli
lods
lds
shrb
imul
scas
or
xchg
or
xchg
out
fwait
mov
sub
aaa
push
push
sbb
nop
ljmp
mov
cmp
xchg
mov
inc
jae
push
sbb
cmp
test
movsb
bound
push
jno
data16
pop
dec
mov
dec
dec
cltd
leave
push
and
test
cs
xchg
sub
movsl
pop
std
push
daa
insb
mov
xchg
inc
pop
iret
mov
daa
les
aad
mov
pushfw
insb
push
notb
test
test
xor
xor
call
fs
loope
cwtl
jne
or
cmp
jns
cmp
and
or
add
les
mov
outsl
xchg
call
daa
ror
cmovbe
mov
add
sbb
mov
pop
mov
insl
loop
js
out
movsl
add
bswap
push
aad
xchg
mov
das
stos
dec
dec
cld
pop
pop
loop
inc
sti
inc
cs
mov
ljmp
pop
sub
dec
adc
adc
adc
lret
add
cld
pop
test
movsb
aas
pop
mov
adc
jno
movsl
push
jecxz
push
jae
push
inc
push
xor
filds
cwtl
cli
cmp
pusha
jl
jecxz
rolb
pop
addl
adc
aad
xchg
inc
fidivs
cmp
dec
stos
mov
inc
push
adc
jl
push
aaa
mov
int
mov
jo
std
lret
hlt
int
mov
sub
in
decl
jmp
out
loopne
inc
mov
in
nop
push
cmp
out
stos
push
in
adc
mov
data16
push
and
xor
inc
rcrl
iret
and
fsub
lods
xchg
xor
add
push
fs
popa
or
shrb
pop
rol
gs
cmpsl
dec
pop
xchg
jmpw
push
push
fildll
mov
out
mov
aam
dec
stc
jl
and
mov
std
fstpt
add
add
and
mov
cmp
fistpll
push
mov
ficoml
mov
adc
xchg
sbb
add
repnz
loope
xchg
mov
jmp
inc
rcrl
xchg
daa
test
fnstsw
out
or
addr16
in
lahf
icebp
sub
adc
notb
push
dec
enter
in
fcomi
dec
test
addr16
lret
jmp
data16
and
xor
xchg
xchg
int
pop
popa
addr16
dec
or
cmp
rclb
fadd
and
movsl
mov
xlat
stos
std
or
mov
cmp
jb
adc
or
outsl
and
cmp
and
and
cmp
add
xchg
pop
rcll
cli
js
cld
add
xlat
cmp
add
frstor
dec
jle
push
fdivs
stc
add
mov
inc
daa
popa
jle
das
loop
cmp
jae
xlat
sbb
adc
push
sbb
fs
out
cmp
sub
fs
sbb
or
push
popf
sbb
cmovle
push
push
lock
inc
sbb
test
jecxz
xorl
repz
rclb
jo
add
lods
call
fmuls
sub
or
jle
sub
leave
mov
jmp
xchg
cmp
pop
test
jnp
push
jae
fnstenv
xchg
push
and
aas
mov
lcall
mov
push
in
in
mov
ja
cmp
and
xor
xchg
dec
fisubl
shrl
jmp
add
js
aad
jne
xor
aad
aad
lods
push
fldcw
sahf
pop
xchg
cmp
pushf
bound
out
daa
push
mov
xor
nop
popl
aas
aad
subb
jle
rclb
ds
out
ja
push
add
mov
divl
xchg
pop
adc
mov
mov
jno
dec
xor
mov
arpl
fwait
mov
inc
jae
xorb
lds
clc
adc
into
lahf
xchg
sbb
gs
or
cltd
loop
push
xchg
or
repz
jmp
jl
ja
daa
cmp
test
sbb
adc
jnp
jmp
dec
test
and
out
mov
fnstsw
sarb
mov
mov
jns
sbb
xor
sub
imul
bound
cmp
and
testl
jo
outsb
or
icebp
movsl
and
add
jne
dec
sub
jae
or
out
gs
sbb
xor
pop
subl
clc
loopne
pop
sub
gs
push
dec
add
jecxz
pusha
push
jb
movsb
sarl
daa
int3
mov
test
jecxz
inc
sub
test
or
cmpsl
mov
pusha
je
push
mov
fmuls
add
sub
mov
sahf
mov
sub
and
sahf
or
jae
adc
pop
aas
andl
dec
ud2
fldt
cltd
into
bound
mov
aam
scas
test
dec
add
ja
push
loop
flds
push
inc
leave
xchg
push
inc
xchg
loop
fwait
cmc
or
mov
or
jbe
fldl
mov
or
pop
adc
in
test
adc
addr16
shll
cltd
push
shl
test
xor
imul
sub
xor
sbb
xor
xchg
mov
sub
xchg
pushf
jnp
or
mov
mov
aad
adc
pop
daa
aaa
xor
mov
jecxz
ds
cmp
sub
push
enter
pop
mov
adc
sub
xchg
mov
fnstcw
fsub
xchg
jge
icebp
std
enter
dec
push
mov
test
hlt
mov
xchg
push
inc
cmovns
loopne
daa
or
aam
mov
lea
mov
mov
jae
out
push
xor
sbb
jo
xchg
adc
cmp
lahf
xor
xor
insl
fsubl
mov
iret
int
notl
or
sub
filds
idivb
rorl
imul
xchg
loop
or
mov
push
jae
jne
push
nop
js
adc
adc
imul
dec
jmp
sub
cmpb
cmc
inc
loope
inc
mov
pop
xchg
jle
cmpsb
imul
inc
cli
xchg
inc
fmull
arpl
icebp
in
sbb
adc
or
int
fwait
push
je
mov
hlt
mov
scas
push
mov
dec
jae
xor
push
movsb
outsl
aas
and
outsl
bound
mov
pop
mov
mov
arpl
pop
jecxz
push
cmp
test
push
cwtl
mov
rorb
cwtl
mov
jecxz
add
mov
cmp
mov
popf
in
into
mov
cmp
fwait
inc
mov
sub
inc
and
cmpl
test
inc
sti
mov
jne
in
xchg
fiaddl
pop
outsl
ret
nop
lret
ja
mov
stos
cwtl
sub
rclb
popf
xchg
in
pop
xor
js
sbb
ja
push
aam
add
jp
in
mov
push
pop
stc
mov
cs
mov
lea
enter
in
cmpsl
mov
pop
lds
dec
fdivrl
ss
or
stc
hlt
enter
sahf
aad
inc
xor
dec
pop
popa
mov
fstpt
adc
xlat
xchg
adc
movsb
xor
cmp
xorb
dec
lods
lods
lds
mov
fbstp
sbb
push
arpl
push
mov
ret
add
mov
sub
cmp
mov
lret
push
cli
xchg
jne
and
imul
push
testb
scas
xor
outsl
std
push
sti
subb
int
push
es
ljmp
pop
inc
jb
std
xorl
mov
sarb
jle
jb
int3
and
mov
mov
test
cmpsl
loop
test
pop
pushf
cmpsl
jo
es
js
ds
sbb
pop
and
push
sub
mov
push
inc
lds
push
fmull
es
aad
js
jae
repnz
arpl
pusha
cmp
out
xchg
dec
lcall
bound
test
clc
fistl
add
mov
dec
mov
xchg
mov
popa
xchg
imul
out
inc
dec
adc
mov
ret
hlt
fisubl
cmp
sub
jg
xor
push
push
cltd
jp
test
add
dec
lds
daa
cwtl
popa
fdivrp
rolb
sub
adc
pop
sti
jg
pop
adc
jg
roll
fisubs
mov
xor
push
xor
cmp
jnp
mov
push
inc
popf
and
icebp
fstps
fiadds
aad
scas
xor
inc
cmp
adc
ret
sub
div
loopne
repnz
push
enter
sbb
scas
cltd
mov
mov
outsl
cmpsb
mov
lock
fildl
ret
jl
fwait
lods
inc
push
cmp
ja
cvttps2pi
dec
xchg
mov
push
mov
ja
es
lock
jg
leave
sbb
pop
daa
in
das
push
mov
jno
xor
pop
sti
loopne
xor
mov
in
sub
ja
cmp
sbb
xor
std
pop
leave
jl
cmpsl
push
pop
inc
pop
fists
punpcklwd
cltd
scas
lcall
pop
enter
adc
pop
scas
aad
in
xor
sbb
rcll
mov
sbb
pop
out
sub
xor
sbb
and
icebp
out
pop
mov
inc
mov
mov
or
int
or
fnsave
aaa
lea
shrl
or
or
inc
push
add
fcmove
xchg
out
push
jae
sbb
shrl
xchg
push
enter
insb
sahf
jecxz,pn
ret
add
adcl
cmp
lds
and
inc
fdivrs
rcrb
adc
test
pop
ljmp
test
subl
insl
insb
inc
fstl
cmpsl
mov
sub
or
mov
cltd
mov
dec
out
push
jae
jnp
in
pushf
lcall
xchg
repnz
inc
and
jecxz
inc
ds
mov
enter
dec
ja
jb
sbb
mov
repz
scas
pop
add
sub
jns
mov
jne
out
leave
ja
addr16
out
xor
jae
outsb
lret
gs
push
jb
lahf
inc
mov
daa
sbb
enter
xchg
or
mov
xor
mov
enter
mov
pop
je
ljmp
dec
faddl
inc
and
xor
xor
add
xor
inc
add
lcall
and
pop
es
mov
lock
pusha
sti
repnz
cwtl
ret
pop
adc
mov
ss
inc
rclb
out
sub
or
and
pop
cmp
ss
pusha
adc
pop
dec
add
jnp
scas
mov
lret
add
mov
push
dec
aam
fiadds
movsb
test
lock
aam
add
cmp
movsl
xor
loope
pop
out
bound
jp
fldenv
fdivrl
xchg
test
and
push
adc
jle
and
pop
dec
jecxz
sbb
or
xchg
sub
faddl
icebp
and
es
cmp
or
adc
push
aam
pusha
outsl
mov
jecxz
icebp
mov
sarb
sub
call
iret
fwait
stos
add
pop
ljmp
lea
jg
and
cmc
push
dec
xchg
and
adcl
adc
test
mov
adc
and
clc
jae
sub
jne
sbb
jno
cmp
adc
psllq
mov
pop
mov
pop
shlb
xor
shr
and
dec
jbe
fldenv
pop
mov
in
stos
cmp
cmc
adc
adc
jge
xchg
das
pop
mov
pop
ss
cmp
mov
jge
pop
jge
xlat
sub
jmp
and
jp
mov
stos
js
mov
in
mov
pop
fstpt
in
add
sub
jns
sub
jg
arpl
push
arpl
ja
scas
mov
cwtl
or
xor
dec
js
push
mov
cmp
adc
subb
das
mov
jl
cmp
sti
push
fisttpll
std
data16
loopne
sbb
lock
lds
leave
dec
mov
inc
push
out
shrb
jle
adc
adc
mov
out
movb
or
fwait
sbb
out
ljmp
xchg
loope
jg
inc
push
jno
push
lret
ja
xchg
dec
mov
mov
dec
cmp
mov
cmp
sub
pop
push
repnz
sti
ret
daa
inc
pop
in
hlt
movsl
cmc
adc
push
fidivl
push
in
sahf
and
xchg
sbb
jb
push
pop
je
in
or
shll
or
mov
in
lods
jge
dec
dec
inc
xchg
add
or
xchg
mov
inc
insl
sbb
sbb
ret
pop
push
cld
mov
aas
insl
loope
test
outsb
mov
inc
js
popa
fdivs
movsl
cmp
and
mov
cmpsb
jge
pop
mov
sbb
call
and
add
roll
xchg
mov
adc
cmovnp
ds
repnz
sbb
addl
push
xchg
js
sbb
mov
jl
mov
ss
movsb
xor
mov
dec
xchg
dec
and
out
divl
ljmp
and
pop
out
xchg
cli
jb
xorl
imul
in
pop
mov
int
rcrb
sbb
and
mov
imul
cmp
je
mov
xor
outsb
fdivr
nop
inc
hlt
xor
out
inc
daa
cmp
or
cltd
mov
inc
out
push
pop
imul
adc
out
sbb
fidivrs
mov
inc
adc
repnz
add
jl
fistpll
inc
popf
mov
inc
ret
out
sub
iret
subl
add
add
aad
mov
mov
sbb
and
std
scas
push
pop
sub
cmpsb
outsl
divb
push
pushf
push
and
cld
popl
sub
test
loopne
dec
sbb
ret
jno
in
sbb
inc
inc
lods
lret
test
shl
dec
xchg
adc
cmpsb
xlat
pop
push
lcall
xlat
pop
adc
xor
mov
cmp
scas
lea
mov
pop
movsl
ficompl
push
arpl
ss
push
add
mov
xchg
aam
xor
xchg
repz
cwtl
cld
out
outsb
test
lret
dec
fcmovbe
pop
inc
cmp
faddl
xchg
sbb
stos
pop
ret
jp
xchg
xchg
jne
sarb
fisttpl
pop
inc
pop
jmp
mov
push
mov
jo
sbb
lock
adc
mov
loop
mov
push
std
hlt
jno
add
daa
fistpll
mov
and
ljmp
pop
sub
stos
repnz
cmp
lds
das
pop
mov
mov
mov
mov
test
pop
pop
xor
scas
pop
pushf
push
push
shrb
cmc
jnp
xchg
in
outsl
and
sahf
jbe
loopne
mov
data16
ja
inc
xor
test
and
outsl
and
mov
shll
jbe
jno
push
ret
dec
inc
pop
sti
cli
imul
outsb
jns
xchg
cwtl
stos
lahf
addr16
hlt
stos
in
sbb
xchg
loope
cld
cli
jg
or
mov
xor
shrl
xlat
inc
dec
and
inc
or
mulb
aad
lods
adc
ljmp
sbb
adc
out
arpl
push
or
sub
jmp
pop
mov
push
mov
dec
xchg
cwtl
sub
daa
jl
push
sbb
iret
pushf
xchg
xchg
jnp
cmp
out
pop
dec
dec
sbb
int
mov
xchg
xchg
mov
jo
nop
add
iret
aas
subl
mov
and
mov
jl
repnz
lea
xchg
push
lods
push
sub
or
stos
jnp
gs
mov
push
dec
dec
push
sub
add
xorb
mov
push
call
add
sbb
movsb
loope
mov
mul
sub
pop
add
cmp
mov
sub
dec
inc
lock
add
test
dec
out
xor
scas
das
jnp
jmp
ljmp
inc
pusha
push
dec
fcomps
fnstcw
ljmp
outsl
sub
cli
pop
shl
push
sbb
enter
shlb
scas
xchg
pop
mov
and
push
mov
pop
fldenv
lret
lret
and
and
test
jp
sbb
ds
mov
aas
xor
movsb
add
ja
mov
or
lds
fsts
addr16
lock
or
xchg
xchg
ret
jecxz
jge
xchg
jg
push
ficoms
xchg
das
lcall
mov
push
inc
mov
insl
inc
inc
aaa
sbb
mov
xchg
adc
push
pop
mov
jmp
inc
enter
jg
pop
pop
push
lods
mov
js
lahf
jb
mov
dec
insl
jns
xchg
mov
aad
jo
out
in
cmpl
push
test
jg
cmp
test
jp
testl
dec
adc
pop
lock
es
push
adc
out
push
test
and
cs
repnz
xchg
sub
gs
out
lahf
push
je
sub
test
dec
add
add
push
lret
bound
pop
mov
mov
andl
fisttps
nop
cmpsl
les
and
mov
mov
inc
je
push
es
mov
insb
in
sub
stos
dec
jb
sbb
or
adc
mov
hlt
push
push
pop
iret
inc
xor
add
sub
push
jmp
mov
cld
mov
mov
gs
es
jge
or
jo
imul
xchg
jl
dec
mov
jp
mov
sbb
in
aas
call
out
pushf
jl
jl
mov
push
andb
mov
cmp
fwait
clc
and
enter
mov
xor
ja
xlat
mov
lahf
lods
cmp
adc
roll
jmp
nop
mov
mov
insl
out
leave
fs
mov
mov
sahf
sbb
scas
aas
cmp
in
push
add
dec
bound
lret
mov
scas
inc
sbb
xor
sti
pop
into
clc
fistpl
call
jns
insl
bound
or
add
mov
nop
xchg
mov
inc
mov
sbb
jnp
or
xchg
or
pop
pusha
lds
scas
pop
xor
fisttpll
or
dec
outsl
sbbb
xor
aam
movsl
sub
lret
into
mov
push
xor
leave
popf
cmp
dec
sbbb
jg
negl
mov
adc
enter
and
sub
or
jb
stc
mov
mov
dec
xchg
mov
mov
movsl
pop
les
mov
inc
aad
or
daa
cmp
cmpsl
int3
les
popf
xor
je
fstl
jnp
test
lret
sub
loop
loope
jl
test
jno
lods
lds
orl
sahf
push
ja
lahf
mov
outsb
or
xchg
push
dec
scas
sub
pop
push
sbb
fisubs
setl
and
mov
inc
lcall
sub
jle
stc
int3
subl
das
dec
fsubrs
or
fimuls
jmp
js
inc
xchg
sbb
loopne
xchg
xchg
jns
fidivrl
rcll
into
and
imul
iret
lret
cmp
push
popa
push
inc
sbb
push
data16
test
push
aas
fwait
ja
push
scas
into
lcall
addb
dec
xor
mov
jb
pop
loop
dec
sub
cmp
shll
and
mov
push
dec
gs
push
add
adc
shrl
xchg
scas
les
test
jge
xchg
in
in
out
cmp
xor
dec
cmpsl
mull
int3
leave
sub
mov
icebp
sbb
daa
jae
dec
xor
dec
cmc
stos
subl
inc
adc
mov
sub
mov
es
inc
mov
sti
dec
in
sbb
cmp
adc
and
and
fsubl
stos
and
or
das
mov
lods
scas
push
jo
sbb
scas
pusha
or
jmp
pushf
loope
and
cmp
dec
mov
repnz
adc
cltd
rcll
pop
jns
add
ss
out
push
mov
jne
ja
pop
inc
cmp
adc
push
gs
divb
call
in
lret
notb
inc
aaa
pop
fmuls
inc
aas
xor
push
or
enter
jae
bound
rcrl
cmp
mov
jb
fs
xchg
sbb
mov
inc
adc
shrb
imul
das
xchg
sub
fwait
pop
fwait
lods
mov
cmp
mov
mov
in
pop
inc
adc
pop
and
fldl
mov
repz
and
push
pop
inc
test
std
cld
add
int
pop
add
loopne
cwtl
dec
mov
jl
nop
mov
es
push
lsl
lods
insb
je
stos
xor
ja
jne
or
in
xor
mov
stos
out
test
mov
xor
push
mov
lcall
or
inc
popa
repnz
jno
jmp
mov
nop
xor
mov
jmp
aam
call
pop
popa
call
out
mov
mov
inc
jbe
lea
cmp
dec
mov
inc
jge
dec
mov
sub
stc
pop
inc
jp
and
loop
inc
mov
push
cmp
ds
out
aas
add
fwait
call
iret
in
daa
dec
sbb
mov
gs
fdivrl
adcb
fimuls
jg
mov
arpl
sbb
add
lea
cmc
add
dec
movsb
rorl
inc
jb
arpl
cmp
xlat
adc
mov
inc
fwait
dec
mov
sahf
imul
shll
mov
stc
cmp
test
out
dec
ja
dec
mov
subl
shrb
inc
push
pop
mov
adc
or
sub
add
push
mov
aad
pop
fistpll
fcmovu
add
sahf
dec
insb
es
daa
mov
in
dec
mov
xchg
cmp
jecxz
xchg
sub
pop
cli
pop
cmp
inc
jo
bound
push
push
cmp
ja
cmc
int
in
xchg
pop
ficomps
mov
mov
fwait
bound
mov
shl
repz
repnz
es
pop
push
repz
mov
fistpl
add
xchg
mov
xor
lods
stos
dec
xchg
lock
pusha
test
and
fbld
xor
add
jno
or
cmp
mov
pop
ret
adc
clc
mov
xchg
lahf
jge
fists
push
call
sbb
cmp
test
cmp
jmp
inc
sub
add
dec
pushf
lds
popa
pop
pop
imul
and
push
sbb
push
inc
mov
pusha
cwtl
int
cmp
repnz
test
hlt
inc
pop
mov
or
adc
sahf
jns
push
cmp
pop
inc
sub
push
mov
jp
outsb
sbb
inc
mov
xor
pop
shll
push
in
cmp
arpl
pop
or
shl
std
aas
sti
hlt
mov
pop
mov
fdivr
pop
dec
sti
fsubrl
jb
in
and
leave
fwait
and
sub
push
scas
xchg
xorb
xchg
pop
dec
fdivs
cs
jp
jbe
test
in
jg
pop
mov
add
sub
shlb
addr16
sti
lods
call
adc
jg
test
cmp
mov
dec
roll
or
mov
clc
pusha
clc
inc
call
aam
cmp
inc
test
std
aad
pusha
das
xadd
sub
and
arpl
or
xchg
aaa
mov
inc
outsb
and
idivb
pop
sbb
test
negb
fwait
out
cmpsb
jmp
sub
push
movsl
or
orl
out
clc
pushf
mov
lahf
lret
sbb
stos
std
jbe
testl
jg
es
in
xchg
mov
aas
sbb
movsl
xlat
ss
dec
cmp
jmp
arpl
mov
mov
jns
mov
dec
push
sbb
scas
pusha
icebp
push
mov
dec
and
or
into
mov
out
and
in
xor
dec
xchg
cmpsl
dec
cmp
fs
fcmovnbe
mov
or
rorb
fldenv
and
mov
imul
add
rcrl
pop
pop
jnp
jmp
loopne
sub
lea
mov
inc
and
mov
lods
sub
nop
xlat
loopne
pop
lret
sarb
and
xchg
in
scas
fildll
nop
fmull
dec
in
test
outsl
repz
rcl
push
mov
cli
dec
xchg
js
mov
sti
pop
sarb
cmpsl
mov
dec
sub
push
xor
jnp
in
out
mov
adc
out
loop
mov
push
xchg
icebp
lods
outsl
scas
pusha
mov
sbb
and
or
dec
adc
test
or
out
dec
addl
xlat
cmp
sub
and
inc
movb
pop
loopne
pushf
jne
fs
mov
cmp
adc
pop
out
pop
mov
xor
popf
xor
inc
jg
int3
mov
shlb
pop
jns
cmpb
add
xchg
icebp
sub
hlt
loope
ds
lds
scas
div
test
mull
clc
xchg
dec
mov
push
adc
ror
mov
add
cmp
icebp
rcrl
inc
xor
cwtl
mov
ret
les
mov
pop
mov
xor
jo
pop
andl
pop
push
sub
not
popf
pop
dec
bound
popf
sub
mov
pop
movsb
pushf
leave
push
je
sub
dec
sub
sub
mov
mov
xchg
mov
mov
testb
mov
in
mov
idivb
in
gs
jae
mov
jecxz
pusha
aad
mov
lds
sbb
sarb
mov
mov
fildl
lods
mov
jl
adc
fiaddl
lods
test
ljmp
movsl
and
and
or
dec
loopne
jb
jg
add
or
scas
loope
addl
ret
call
jl
in
cmc
mov
mov
sbb
and
call
and
mov
mov
aas
fs
rol
sti
push
push
xchg
or
mov
popa
cmp
cltd
adcl
lods
outsb
dec
cmc
cmp
xchg
std
sub
imul
testb
insb
lods
adc
mov
aad
jmp
hlt
loopne
add
add
aas
mov
jg
leave
movsb
aas
xchg
divl
repnz
sbb
pop
push
repz
inc
mov
adc
cmp
pop
or
or
or
iret
xchg
inc
lcall
pop
inc
pcmpeqd
sbb
mov
adc
into
dec
lret
mov
cmp
jecxz
cli
cmpsl
cmp
sti
jg
or
inc
scas
fwait
mov
mov
aad
rclb
jmp
les
sub
inc
aaa
or
pop
adc
insl
mov
out
repz
push
imul
movsb
pop
xchg
pop
testb
popf
sar
aam
mov
jb
or
test
xlat
jns
push
dec
dec
shlb
loope
push
mov
js
insb
pop
mov
roll
mov
popa
inc
jmp
fcomp
sbb
gs
je
popa
inc
add
or
mov
ds
cmp
sti
and
in
movsb
test
les
cmpsl
push
or
cmpsb
mov
jmp
cmpsl
add
mov
aam
ds
xchg
shl
mov
ja
push
insl
sarb
jnp
lret
insl
push
pop
push
sbb
imul
mov
rolb
subl
sub
jmp
decb
mov
inc
les
inc
js
push
scas
mov
or
xchg
cmp
pop
sub
jb
out
testl
pushf
jecxz
mov
pop
mov
cmp
inc
mov
mov
fdivl
push
add
repz
mov
cmp
or
mov
ljmp
orl
jg
adc
inc
xor
int
leave
add
add
sbb
aaa
out
xchg
ret
sti
add
sbb
inc
fdivrl
in
lds
jae
rclb
out
call
int3
loop
sbb
imul
outsb
push
xlat
jnp
fsubrp
dec
xchg
xchg
bound
jbe
and
popa
or
shll
sbb
mov
xchg
mov
jns
stos
out
push
lret
jmp
aas
daa
in
jo
gs
in
add
and
loop
out
arpl
push
jae
cmc
mov
aad
add
lahf
test
mov
inc
hlt
sub
dec
jle
jmp
dec
in
cmp
mov
test
fldenv
ljmp
dec
je
sub
mov
mov
arpl
xchg
mov
lock
mov
xchg
ja
xor
push
shld
adcl
js
das
push
adc
cmp
lret
into
dec
and
lahf
jb
cld
lods
jb
nop
sbb
xor
hlt
add
xchg
and
mov
xorl
sub
add
xorb
pop
xor
popf
ret
sub
add
jno
or
fistps
push
loopne
pop
adc
movsb
call
mov
inc
push
into
cmp
test
test
jle
cltd
xlat
lret
outsl
loopne
and
inc
add
fimuls
shrb
insl
mov
hlt
lock
or
fsubrs
adc
cmp
cwtl
and
mov
mov
cli
and
shrd
std
movsb
mov
cmp
or
out
push
sti
jnp
imul
mov
aas
inc
pop
je
mulb
cmc
push
mov
enter
int3
arpl
mov
test
push
jle
adc
inc
push
jo
mov
mov
pushf
sbb
mov
cmp
popf
rorb
orl
push
xchg
xchg
pop
mov
jp
push
testl
sbb
mov
pop
and
testl
xchg
in
out
sub
adc
ret
lods
and
push
mov
jp
insl
lds
jecxz
out
cli
repz
negb
dec
xor
loope
sub
push
xor
aad
outsl
mov
stos
sub
sbb
mov
popa
imul
cmp
pusha
addb
lea
push
daa
hlt
sti
jns
imull
and
fldl
fwait
cmpl
shl
ret
xchg
and
xor
inc
lea
pop
xchg
dec
out
lock
scas
dec
fs
inc
ja
into
sbb
pushf
jb
lods
outsb
pop
add
cli
xchg
inc
push
cmp
inc
int3
cmc
dec
lods
xor
lods
pop
out
pop
movsb
inc
add
pop
inc
lahf
sub
jp
cli
cld
mov
arpl
repz
inc
lret
icebp
inc
fscale
in
fstpt
xchg
or
mov
push
mov
inc
ja
push
mov
outsb
fs
add
mov
jne
inc
fsts
xorb
arpl
cmp
cli
jmp
ret
js
inc
mov
push
push
sti
mov
in
sahf
pop
adcl
xor
loope
js
sub
addr16
mov
jge
or
jne
fwait
mov
cmp
ja
pop
in
hlt
push
jle
inc
adc
or
ljmp
dec
mov
test
xlat
in
dec
mov
mov
icebp
js
mov
outsl
jle
jmp
pop
paddb
testb
xchg
fcomps
lock
mov
mov
outsb
ret
xchg
cli
lret
repnz
outsb
jnp
aam
adc
inc
mov
mov
movsb
dec
adc
int3
fnsave
lods
ret
pop
insl
rolb
xchg
sbb
mov
in
je
mov
jmp
jae
rolb
sbb
cwtl
sbb
in
push
fwait
mov
es
outsl
repz
inc
lcall
mov
enter
mov
or
pop
dec
cwtl
sub
push
leave
ja
in
iret
sbb
movsb
and
adc
xchg
test
mov
inc
stc
inc
aam
popa
imul
mov
inc
scas
mov
pop
push
mov
clc
or
mov
mov
dec
jns
jecxz
es
ret
gs
or
sub
inc
jle
popf
sbb
lock
jo
lahf
es
insl
loop
mov
cmp
scas
xchg
test
push
mov
xor
mov
push
and
movb
adc
jge
fimuls
in
push
xchg
ss
inc
rcr
xor
pop
andl
hlt
cmp
push
clc
cli
out
mov
daa
xchg
lea
mov
mov
inc
fs
inc
mov
loope
mov
or
mov
sbb
sbb
mov
jbe
mov
aad
aam
pusha
mov
cmp
in
and
sbb
dec
sub
adc
push
ret
loopne
icebp
hlt
xlat
dec
test
insl
or
dec
addr16
orl
or
inc
add
cltd
pop
and
out
stos
adc
jmp
stos
jo
pop
mov
in
mov
xor
push
mov
xchg
mov
xorb
cwtl
into
mov
bound
fs
imul
clc
in
pushf
bound
dec
pop
push
sub
push
mov
jno
xor
push
fsubs
mov
push
jecxz
insl
je
xchg
or
cwtl
dec
lret
ljmp
jmp
jb
jg
lea
cmp
sahf
rcr
ret
into
shlb
push
ja
pushl
push
popa
repnz
xorl
aad
jnp
or
jecxz
adc
pop
and
ret
pusha
int3
mov
mov
stc
xor
cmp
repz
inc
repz
fiaddl
clc
pop
enter
xor
int3
lods
imul
out
bndstx
ret
test
aaa
xor
loopne
pusha
or
mov
pop
aad
or
push
sub
dec
xchg
inc
xor
aaa
aad
imul
mov
icebp
stos
popa
dec
adc
pop
mov
cmp
add
aad
jns
mov
mov
sbb
push
mov
dec
jecxz
xchg
ss
mov
rclb
int
enter
and
jle
jbe
mov
sbb
mov
imul
mov
sbb
inc
addr16
adc
iret
lea
add
adc
and
negl
jae
mov
lcall
cmpsb
sub
outsb
xor
mov
xchg
dec
flds
dec
addb
xchg
or
inc
push
icebp
push
repz
dec
adc
or
das
iret
add
mov
mov
into
xchg
mov
cmpb
cwtl
sbb
cwtl
in
shlb
jg
and
jle
dec
pop
scas
arpl
pop
mov
lcall
add
xchg
jnp
xchg
mov
mov
jecxz
sbb
movsb
stc
nop
dec
in
sbb
and
push
push
dec
sub
icebp
push
mov
pop
pop
in
xchg
inc
sub
pop
cltd
stos
pop
std
sbb
pop
enter
nop
cmp
pop
sbbb
in
xchg
mov
and
add
mov
movsl
adc
xor
aas
dec
or
sub
shrb
imul
xchg
or
xchg
sbb
add
add
out
popa
test
xor
nop
xor
mov
jp
cmovns
loop
lea
sbb
pop
mov
or
nop
jp
adc
mov
jl
iret
notb
fstpl
ret
mov
hlt
fildll
dec
push
adc
bound
cmp
jl
mov
or
sbbb
repz
mov
xlat
std
cmp
pop
cmp
aad
dec
mov
dec
call
mov
pop
das
adc
push
jg
inc
out
jns
jmp
xchg
push
xchg
mov
pop
xchg
xor
pop
add
fucomip
jmp
fcmovne
imul
mov
mov
mov
mov
cld
je
cli
stos
data16
call
jbe
dec
loope
inc
inc
sahf
xor
inc
jg
popf
movsb
pusha
negb
mov
mov
cmp
lahf
add
sbb
jbe
in
mov
and
js
mov
cmp
mov
outsb
pop
outsl
insb
xor
add
sub
sub
inc
jl
xor
mov
pushf
fmull
lods
jb
jnp
xor
in
mov
cmp
jge
rol
xchg
das
mov
sbb
aas
scas
and
sbb
shll
xor
sbb
lods
movsl
fisubl
pop
xchg
pop
jecxz
movsb
pop
ficompl
mov
es
jle
xor
inc
ljmp
aad
rcl
pop
adc
das
icebp
inc
sbb
push
sub
jnp
cltd
daa
jmp
jne
inc
xchg
fldcw
mov
dec
dec
jbe
xor
fadd
mov
push
cmp
mov
sub
push
scas
dec
aam
inc
test
adc
push
roll
loope
mov
aaa
dec
sub
lds
mov
out
and
aad
pop
sub
pusha
xor
inc
sahf
jb
xchg
mov
sub
xchg
jnp
into
mov
xchg
out
in
sar
inc
test
iret
dec
aam
stos
int
push
cld
fisubs
mov
inc
rorl
sub
sbb
cli
daa
adc
loope,pn
jge
idivl
jno
cmp
cs
nop
imul
nop
sbb
xchg
push
jge
popa
pop
push
cmp
cmc
mov
lods
stc
shl
int3
dec
jae
mov
mulb
mov
test
test
cmpsl
or
mov
aas
and
mov
ljmp
in
leave
dec
loope
jg
or
popa
icebp
sub
mov
pop
jnp
xchg
jne
sbb
add
dec
scas
fprem1
loop
inc
and
push
in
xlat
cs
sbbl
addb
inc
dec
xlat
cmp
cli
xor
out
add
lock
shrl
mov
mov
arpl
outsl
test
cli
dec
push
stos
movl
fucomip
mov
sbb
int3
jo
push
mov
clc
lods
xchg
or
adc
ss
hlt
popf
xchg
push
xor
pop
pop
sbb
pop
adc
push
jno
leave
shrl
into
mov
push
cmp
mov
rcr
jno
inc
push
lds
popa
dec
jmp
lret
test
fdivl
sti
scas
xor
bound
add
stos
rcll
or
inc
test
inc
mov
nop
mov
jg
sbb
xchg
insl
and
lods
push
pop
lea
mov
rcrb
dec
fs
pop
add
fsubl
inc
cmp
lcall
ss
sub
mov
dec
jbe
inc
pop
addr16
xor
and
push
dec
mov
mov
add
cmp
out
negl
jp
lahf
je
inc
cld
add
fildll
out
push
xor
int3
popa
adc
mov
lock
push
cmp
add
xor
pop
cmp
add
fcoms
xchg
and
decl
pop
jbe
insl
xor
lret
jne
lcall
mov
ret
ja
out
stc
movups
sub
jg
add
ja
test
imul
mov
xchg
cmp
jo
in
mov
or
outsb
mov
ret
test
inc
rorb
mov
cwtl
loop
xor
outsb
and
push
popf
push
mov
xor
add
andb
jns
cmp
add
mov
js
push
popa
dec
push
xchg
rorl
in
ret
les
jne
fdivrl
fnstcw
js
jo
jbe
cmc
push
int
into
cwtl
lret
sti
sbb
lret
out
repnz
cs
scas
imul
ds
or
out
cltd
dec
out
bound
push
scas
xchg
fsub
out
std
xchg
aad
or
xor
out
xor
adc
es
out
push
in
jge
adc
hlt
jmp
push
dec
inc
enter
pop
or
adc
lret
sub
mov
push
or
cmp
and
mov
sbb
popa
mov
jne
mov
jmp
sbb
or
inc
jb
or
mov
das
jl
and
out
out
scas
cld
inc
lds
pop
xchg
xchg
mov
mov
add
and
adc
out
stc
pop
inc
jmp
jb
lret
xlat
jo
outsl
das
int3
out
push
mov
jle
mov
lock
aaa
mov
inc
imul
pop
sar
test
mov
sub
call
fsubl
push
ss
push
jns
lret
pop
pop
aas
cs
out
pop
scas
add
shrb
inc
mov
dec
pop
int3
cld
mov
fs
aaa
push
push
dec
into
dec
clc
fildl
cmp
lahf
in
xchg
scas
popf
das
icebp
and
es
aas
adc
sub
xchg
loopne
push
adc
mov
mov
je
in
mov
jae
rcrb
mov
call
scas
jo
add
adc
lods
insb
inc
xchg
out
sarl
repz
mov
or
push
xchg
scas
adc
push
xchg
cmp
pushf
repz
arpl
scas
test
or
add
fsubrs
cmpsb
and
or
add
movsl
or
js
mov
push
or
rorl
jno
push
jle
mov
ret
aaa
push
popa
in
sub
mov
xchg
xchg
mov
push
je
enter
subb
inc
dec
sbb
mov
sbb
pop
inc
in
popa
shrb
aaa
pop
push
lahf
mov
ja
adcb
pop
cmovs
loope
sbb
repnz
xchg
int
mov
add
ss
cmpsb
xor
lock
bndstx
dec
pop
addr16
and
mov
push
into
movsb
in
mov
call
out
and
cltd
mov
subl
mov
sahf
das
out
mov
sub
roll
xor
sbb
mov
int3
xchg
ds
mov
cmp
pop
int
jbe
cmp
decl
idivl
and
sar
jl
ficomps
push
or
das
prefetcht0
bound
dec
xchg
push
in
dec
rcrb
push
sti
cwtl
sti
jle
add
jmp
jne
or
ja
lods
jb
xor
jne
jns
imul
jno
push
sub
test
imul
out
or
push
jno
sbbl
inc
pop
adc
imulb
add
movsb
cs
push
push
addl
inc
mov
push
inc
in
call
nop
mov
enter
xor
scas
call
mov
cltd
dec
ficoms
addl
xchg
sbb
cmc
mov
jae
mov
or
xchg
outsl
mov
xchg
xchg
push
xchg
hlt
cltd
movsb
mov
push
adc
loope
push
inc
fnsave
or
out
imul
push
push
test
pop
sahf
adc
outsl
lret
adc
mov
xor
lods
mov
lret
imul
leave
push
data16
inc
pop
cmp
das
or
ljmp
pop
mov
push
inc
rolb
lret
pusha
adc
insb
shll
xchg
mov
leave
in
jnp
dec
shlb
repnz
dec
adc
enter
and
loopne
bnd
repz
lret
movsb
adc
mov
notb
push
sbb
ficompl
pop
in
pop
adc
mov
xchg
pop
orl
lods
out
jbe
adc
cmpsb
jecxz
lcall
clc
cmp
repz
call
lds
rclb
addr16
cmp
sub
cli
fsubr
mov
outsb
xlat
cmp
jno
addr16
jmp
cmp
inc
enter
push
sysenter
adc
stos
inc
cld
sti
ljmp
call
sti
add
lods
push
add
xor
stos
and
rcrl
sete
mov
std
cmp
std
add
cld
or
or
mov
push
xchg
popa
mov
cltd
dec
jae
fadds
push
nop
mov
mov
testl
push
fimull
pop
jmp
xchg
aam
adc
inc
imul
daa
insb
add
icebp
push
int3
push
mov
pop
mov
arpl
dec
inc
test
out
jnp
sub
xor
adc
testl
sbb
hlt
adc
imul
aaa
add
cli
pop
pop
jl
outsb
pop
adc
lods
inc
loope
mov
scas
notb
add
fsts
lcall
add
push
in
shlb
xor
sbb
das
xorb
jmp
jnp
mov
pop
pop
and
lcall
cmpsl
cmpl
js
mov
pop
out
pop
sbb
lea
adc
inc
outsl
ljmp
pop
xchg
pop
outsl
shll
pop
jne
loop
mov
adc
cmp
sbb
loopne
pop
add
mov
lahf
test
pop
jbe
test
pop
outsb
and
push
pop
sub
outsl
cmp
fsubr
sbb
inc
mov
outsb
mov
ljmp
cmp
inc
add
lret
adc
xor
fwait
xor
pop
aaa
pop
or
adc
add
dec
add
enter
or
es
mov
dec
jne
pop
clc
push
repnz
adc
add
mov
pop
subl
pop
inc
pusha
popa
hlt
mov
es
and
mov
lds
pop
cld
dec
rcll
xor
lea
xor
cwtl
dec
in
sbb
loope
sbb
dec
aam
out
mov
lock
and
xchg
pop
inc
mov
enter
push
js
lret
mov
push
pop
adc
cwtl
in
dec
inc
mov
enter
fiaddl
aad
cmp
stos
and
decl
adc
fwait
inc
add
mov
popa
daa
fisttps
cmp
fsub
icebp
orb
stos
hlt
mov
and
mov
out
fists
jle
mov
add
inc
sti
rorb
popf
cmp
mov
add
add
mov
aaa
and
cmpsl
or
jae
pusha
leave
scas
aas
gs
fdivl
sub
in
arpl
mov
dec
clc
scas
sti
call
jne
mov
movsl
rolb
popa
stos
xchg
jecxz
jnp
loope
mov
repnz
lods
les
ds
jle
cli
daa
xchg
jecxz
pop
mov
xor
nop
mov
repz
pop
flds
mov
fnstcw
repnz
push
test
pop
xchg
sahf
add
in
int3
repnz
mov
pop
gs
cmp
nop
adc
scas
mov
ss
cmp
lods
push
mov
xor
dec
mov
and
hlt
jbe
mov
jnp
xor
enter
sub
fistps
mov
leave
lea
pusha
aam
push
cmp
stos
repnz
sbb
mov
cmp
ja
push
je
lret
xchg
cld
push
mov
fwait
cld
xchg
addb
nop
imul
fmul
push
mov
pop
iret
test
push
loop
shl
adc
mov
addr16
pop
lcall
pop
nop
xor
loope
jecxz
adc
call
test
fmull
bound
imul
pop
sub
sahf
cli
add
bound
inc
and
adc
test
add
add
rorl
inc
lahf
cli
jle,pn
or
dec
sub
mov
mov
inc
shlb
clc
sub
hlt
scas
out
pop
outsb
enter
cmp
cmp
add
into
jno
xchg
add
push
inc
into
and
cltd
cmp
or
sub
pop
xchg
dec
jg
inc
cmp
sbbl
jo
dec
gs
adc
sub
push
bound
mov
or
pop
push
std
dec
jnp
mulb
ficompl
out
cmp
ret
add
cmp
jbe
mov
loopne
into
sahf
or
xchg
fidivrs
cmp
lahf
add
xor
mov
xchg
or
mov
hlt
push
pop
and
push
jnp
jmp
jne
jmpw
mov
fistl
daa
or
adc
pop
fidivrs
sarb
and
lret
fisubrl
es
pop
add
in
cltd
addb
clc
loope
je
sbb
outsb
push
std
fiadds
xor
jns
xchg
inc
out
dec
pop
stc
insb
push
push
xchg
push
arpl
nop
inc
je
out
js
fmuls
mov
scas
sub
movsl
push
loope
adc
adc
das
mov
lcall
into
bound
movsb
inc
arpl
into
insl
pop
outsl
in
mov
sbb
stos
in
fs
sub
mov
mov
stos
xor
mov
lahf
and
mov
mov
xchg
in
out
xor
subb
inc
mov
and
mov
push
pop
mov
in
and
in
subb
add
sub
mov
fs
sbb
mov
inc
mov
push
xor
mov
jne
mov
jns
int
sbb
and
or
test
pusha
mov
mov
inc
push
ret
pop
jnp
jo
repnz
mov
negl
insl
mov
mov
clc
mov
fidivs
mov
bound
sbb
jg
mov
jbe
mov
inc
sbb
sub
xchg
add
clc
insl
js
test
or
insl
ret
lods
pop
mov
adc
enter
and
jae
aam
icebp
mov
icebp
cmpsl
add
loope
dec
xchg
sbb
push
call
inc
push
push
ret
fldt
and
mov
sbb
aaa
dec
es
rorl
add
shrb
inc
push
add
mov
mul
shlb
out
dec
sbb
adc
movsb
push
add
loope
mov
mov
sahf
cld
outsb
clc
push
in
jg
xor
pop
add
mov
repz
sbb
insl
mov
jmp
mov
jg
int
inc
fdivs
ss
mov
xchg
cmp
das
sbb
pusha
clc
sub
sub
adc
stos
dec
fstpt
mov
mov
xor
inc
test
pop
rcr
out
fwait
jmp
jae
and
inc
loope
pop
mov
mov
dec
addb
into
push
or
mov
push
mov
adc
pop
mov
enter
inc
dec
jmp
mov
sub
out
scas
out
mov
stos
jmp
fwait
jecxz
mov
mov
adc
fists
mov
mov
mov
mov
jno
mov
mov
add
push
pop
pushw
pop
and
or
ds
orb
and
movl
mov
mov
mov
sahf
mov
les
and
in
or
insl
pusha
call
cmp
xchg
icebp
inc
icebp
xlat
in
cmpsb
repz
into
mov
adcb
jg
das
ljmp
or
fimull
and
xor
test
inc
and
stos
xor
xchg
out
xor
stos
mov
xor
cmpsl
scas
add
lcall
scas
xchg
addr16
jle
ret
push
stc
jecxz
mov
mov
inc
movsl
push
imulb
fiaddl
loopne
popf
ja,pt
imul
outsl
rep
sahf
ror
loope
pop
andl
pop
ljmp
mov
in
cmp
icebp
and
das
popa
imull
adc
sub
xor
insl
mov
test
hlt
das
or
fcmovne
pop
lds
sbb
xchg
mov
in
add
nop
in
mov
mov
sbb
aam
pop
pop
insb
push
or
hlt
fildll
aad
in
xor
dec
adc
scas
cwtl
es
mov
in
push
mov
and
stos
push
pop
push
bound
stos
inc
leave
add
insl
sub
mov
jp
cmp
cs
into
push
push
outsb
lea
xchg
or
adc
mov
mov
jecxz
sub
js
jmp
xchg
xchg
jp
xchg
lds
jb
pop
cmp
dec
add
pop
push
cltd
hlt
sub
sti
add
push
faddl
nop
cmp
out
mov
cmp
popa
xor
xchg
inc
sub
sbb
add
mov
or
pushf
cmp
cs
cwtl
jb
xchg
cmc
es
test
mov
addr16
das
data16
cwtl
hlt
or
cmp
add
pusha
xlat
jl
xchg
mov
push
aaa
push
push
decb
mov
cmc
xchg
sbb
cmpsb
cs
es
sub
mov
popf
lret
sbb
bound
or
repnz
add
mov
mov
lock
pushf
std
faddl
xchg
mov
fbstp
imul
aas
fimull
mov
or
ss
scas
pop
xchg
inc
sarl
repnz
gs
xchg
cld
lds
mov
dec
mov
stos
pop
push
fldt
mov
rol
lods
gs
or
adc
mov
or
subb
sbbl
cwtl
clc
push
lds
clc
jge
xor
dec
add
add
inc
or
movsl
aam
ljmp
arpl
aam
cmp
in
xchg
stos
fsts
push
xchg
mov
cmp
js
lea
add
icebp
mulb
dec
dec
out
jg
rcll
lahf
aam
mov
pop
lcall
sbb
xor
data16
cli
aam
iret
push
dec
loope
pop
and
dec
xchg
loope
insl
cltd
inc
mov
iret
in
fisubl
pushf
pop
insl
inc
int
inc
in
dec
test
jne
test
cmpsb
sub
lods
inc
lds
jo
jae
sub
lea
daa
xor
fistl
mov
xchg
divb
into
pop
js
inc
popa
mov
js
stos
inc
sub
imul
sub
sub
mov
cmp
lret
aam
dec
jne
les
sarl
nop
xor
cld
mov
addr16
adc
xchg
in
jecxz
pop
js
stos
test
mov
test
xchg
js
cmpsl
les
adc
insb
in
std
movsl
scas
loope
insb
in
aam
jge
aad
insl
xchg
mov
jae
roll
int3
cmp
inc
scas
adc
pop
testb
pop
lock
sbb
in
ja
das
sbb
or
aaa
aaa
dec
inc
repnz
and
dec
leave
adc
inc
push
pop
inc
and
gs
inc
xchg
test
xchg
or
cmc
xor
or
mov
jb
push
pop
xor
popa
mov
ret
and
adc
adc
cmp
cmp
inc
aas
lods
shl
dec
stos
and
scas
jg
rcrb
pop
into
sbb
js
and
push
js
push
outsl
mov
dec
cmpsl
dec
enter
aas
sub
pop
icebp
call
pop
int
mov
notb
jle
sub
sub
aad
xorb
fdivs
hlt
cmp
aas
cmpsb
pop
and
sbb
sub
dec
test
in
sahf
cld
mov
pop
adc
mov
xchg
sub
inc
pop
aam
add
in
fisubrs
cld
mov
sub
jns
loop
outsb
faddl
lcall
xchg
aad
adc
outsb
xor
cmp
sbb
int
cmp
cmpsl
mov
and
mov
insb
ds
jmp
cmp
xor
loope
cwtl
mov
daa
jno
pop
fcmove
imul
ds
xchg
or
es
mov
push
fidivs
sbb
lcall
stos
push
out
loop
test
jns
scas
sub
inc
jmp
pop
mov
xorb
adc
mov
cmp
mov
inc
sti
mov
inc
and
and
inc
aad
ljmp
adc
cmp
and
mov
push
mov
sarl
fs
add
mov
jns
movsb
mov
sti
sahf
mov
push
mov
mov
jns
sahf
out
mov
mov
cmp
nop
sbb
mov
mov
ret
push
pop
dec
aad
fcmovb
inc
add
es
add
xor
pop
popf
repnz
jnp
daa
leave
out
inc
aam
movsl
rol
into
cmp
pop
movsb
bound
pop
push
inc
sbb
push
jb
and
cmc
mov
pop
jo
shr
or
cltd
jmp
aas
filds
mov
aad
push
push
fcoml
or
fdivrs
jp
ret
je
pop
jne
aad
mov
dec
iret
xor
jbe
addr16
sub
xchg
out
jns
adc
fisttpll
cli
pop
sub
cmp
mov
sub
popa
adc
and
loop
sub
out
fnsave
add
es
inc
inc
push
adc
in
mov
pop
sbb
fs
xchg
xchg
pop
in
push
xor
inc
inc
inc
sbb
push
add
incl
xor
and
dec
rorl
adc
xchg
movsb
sub
and
add
stos
adc
mov
imul
cmpsb
push
inc
inc
rcrb
pop
cmp
lds
xchg
jbe
mov
fimuls
mov
lods
sbb
dec
add
pop
gs
sub
inc
sbb
push
out
lahf
loopne
mov
jge
fsubr
or
loope
or
lcall
xor
xchg
arpl
das
xchg
out
loop
jle
test
xlat
pop
and
pop
mov
outsb
test
mov
cmp
cld
inc
inc
popa
cli
and
or
je
outsl
rcrb
jns
ss
xor
cwtl
sbb
cmc
out
fsubs
xchg
mov
mov
das
loopne
xor
adcl
sahf
cmc
xor
stos
pop
fimuls
movsl
xlat
mov
rorl
and
gs
jp
inc
icebp
loope
outsl
and
mov
icebp
lock
les
stos
mov
adc
rcr
adc
cltd
sbb
andb
and
int
mov
jecxz
or
test
cmpsb
scas
dec
xor
pop
mov
jge
incb
jae
dec
imul
pop
mov
mov
ret
loope
fistpl
inc
pop
bnd
daa
mov
shll
add
lea
scas
jl
sbb
mov
inc
inc
aaa
and
loopne
lcall
or
gs
cmp
ret
or
xchg
adc
out
push
lock
enter
out
int3
push
sbb
into
cmp
jmp
push
pop
out
gs
test
jno
das
arpl
orb
out
pop
cli
insl
ja
mov
pop
mov
test
or
inc
adc
mov
sub
add
out
lea
sbb
sbb
mov
mov
pop
jl
lcall
sbb
bound
xchg
sahf
xlat
push
xor
dec
mov
pop
imul
cmp
mov
faddl
adc
movsl
sub
pop
sub
les
mov
adc
xchg
xorb
xor
rclb
int3
xor
adc
pop
sbbl
icebp
fs
xchg
dec
push
mov
add
jmp
pop
rclb
push
jbe
bound
cmp
int3
mov
ds
ret
push
pop
mov
sbb
or
stos
dec
sbb
lret
pushf
lea
and
stc
cmp
sbb
sbbl
aad
sbb
sub
mov
decl
stc
faddl
xchg
pop
pop
mov
gs
scas
std
add
mov
push
ja
jb
or
fucomp
adc
sub
jecxz
or
jbe
pop
call
and
out
push
jmp
mov
sub
jmp
lods
loop
cmp
les
cli
xlat
push
stos
mov
inc
leave
lds
mov
pop
mov
sbb
xchg
lds
stc
or
and
ret
setg
pusha
jo
inc
loope
mov
rorl
inc
sbb
xlat
or
cmp
dec
pop
hlt
mov
push
xor
fnstcw
adc
xchg
mov
inc
mov
jo
in
xor
adc
mov
cmpl
and
sti
arpl
mov
cmp
sets
outsb
ror
in
dec
addr16
sub
outsb
mov
out
inc
or
adc
hlt
fstpt
imul
inc
fisttps
out
dec
adc
pop
stos
inc
popf
add
test
push
xor
mov
sbb
xchg
repnz
adc
pusha
mov
and
and
jns
inc
cmp
cmpsb
inc
ret
scas
int
xchg
or
add
push
cmp
test
nop
mov
pop
mov
lea
pop
mov
dec
stc
jl
insb
mov
push
lahf
mov
xlat
popf
xlat
sub
inc
sbb
leave
adc
dec
data16
mov
pop
cwtl
ret
decl
xor
jnp
adc
jb
adc
popa
repnz
ffreep
adc
ja
xlat
ret
xor
xor
aaa
cmpsl
or
adc
flds
jnp
ret
inc
mov
popf
mov
xchg
sbb
ror
shll
ss
cmp
add
cmc
pop
pop
dec
push
inc
das
inc
cmp
int
dec
mov
inc
push
js
push
add
adcb
in
test
lcall
in
je
mov
mov
fbld
aad
cmc
repnz
dec
insb
adc
movsb
loopne
aaa
and
aas
int3
stos
jle
mov
cmp
shlb
fwait
and
and
ljmp
adcb
stc
fisubrl
int3
cwtl
fisubl
out
jg
adcb
test
call
lods
shrl
push
ss
xor
adc
pop
lret
mov
mov
jb
stos
ljmp
addr16
cmp
push
int
add
push
pop
stos
lcall
fistps
xor
test
insl
pop
sub
adc
cmpb
cld
rolb
stc
mov
cli
jecxz
int
sti
xchg
sbb
mov
jae
cmp
ds
push
cmp
mov
iret
sub
push
xor
outsl
pop
cmp
mov
jae
ret
xor
mov
pop
cltd
lcall
addl
test
fbld
push
mov
out
jns
xorl
add
and
and
xchg
add
pop
popf
mov
or
xchg
lea
pushf
adc
jae
in
test
lock
jg
ss
push
arpl
add
clc
xchg
bound
sarl
xlat
int3
dec
fiadds
cmp
dec
xor
loope
push
jmp
push
nop
daa
pop
add
gs
les
mov
lods
inc
push
cmp
scas
mov
sarl
adc
cli
ret
add
fdiv
mov
outsl
cmp
ret
or
mov
xchg
mov
out
mov
sub
and
ror
and
aam
pop
test
scas
jp
not
movsl
aas
bound
movsb
or
xchg
lcall
outsb
outsb
adc
sbb
loopne
push
stos
xor
fs
mov
add
ret
push
lahf
or
jmp
xor
jmp
sbb
pop
shlb
sub
mov
mov
and
sbbb
hlt
cs
lods
or
ss
mov
subb
dec
into
or
or
test
pusha
inc
scas
push
ret
jb
cli
sub
add
rcrb
pop
loopne
popa
mov
cmp
xor
lahf
xor
dec
pop
pop
xchg
pop
out
mov
inc
jno
es
pusha
nop
out
loopne
sbb
jmp
sbb
and
pop
xlat
clc
push
sbb
mov
pop
jno
fs
fwait
rclb
lcall
jb
jae
mov
inc
mov
aad
adcl
or
bound
mov
sub
lock
xor
fnstenv
int3
fwait
add
lret
adc
jmp
inc
ss
cmpsl
aaa
sub
iret
add
cmp
outsb
mov
int
sbb
pop
inc
popf
cmp
jae
js
movsb
jnp
call
test
cli
xchg
mov
dec
mov
out
mov
cmp
and
push
ja
pusha
push
adc
popa
adc
incb
out
bound
or
rorb
sti
sarl
dec
xchg
mov
mov
jg
or
and
imul
adc
shrb
cld
adc
std
and
adc
repnz
jecxz
and
enter
outsb
xchg
sbb
popa
sub
pop
mov
lcall
dec
or
insb
mov
cwtl
aas
mov
xchg
data16
jl
addr16
pop
jbe
xchg
and
inc
push
out
and
dec
xchg
mov
jbe
sub
rcl
dec
jmp
ret
orb
sub
pop
imul
leave
mov
and
inc
into
mov
cmp
or
mov
xor
push
into
cmpsl
pop
imul
push
jnp
out
mov
dec
lods
push
mov
pushf
repz
pop
inc
sub
insl
xchg
or
das
inc
lock
addr16
fildl
xchg
cmp
jecxz
sub
fildl
popf
and
or
aad
arpl
stc
loopne
fisttps
jl
mov
jge
xor
lods
scas
jno
inc
sub
sub
rcrb
in
jae
and
push
mov
lock
mov
std
out
adc
cld
lret
mov
scas
test
sbbb
cltd
test
mov
cmc
xchg
push
pop
jns
push
xor
xor
sbb
jl
sub
nop
push
outsb
inc
cmp
push
mov
sbb
into
test
mov
ret
jg
xchg
inc
sbb
push
jecxz
or
fdivr
mov
shlb
inc
inc
insb
dec
cmp
xor
out
lahf
sbb
inc
test
jle
jo
inc
enter
mov
jno
je
pop
inc
push
pop
and
xlat
enter
aad
mov
mov
sbb
pop
xchg
ljmp
das
mov
js
xor
int
jns
sbb
sub
out
cmp
scas
cmp
mov
stos
loopne
sbb
cmp
in
cmc
outsb
and
popf
daa
div
and
adc
scas
jp
and
in
dec
ds
insl
cmpsl
ljmp
lock
cmp
mov
push
push
and
cld
adc
sub
aad
insl
xchg
cltd
shrl
pop
outsb
ret
jge
pop
lahf
pop
inc
xchg
xchg
inc
push
lods
cld
fwait
jge
rol
mov
loopne
xchg
in
shlb
cwtl
dec
add
les
aam
xor
iret
fcmovnu
sub
fcompl
xor
and
scas
insb
addr16
and
fidivrl
mov
push
outsb
push
movsl
imul
ja
inc
hlt
pop
test
notb
inc
pop
fwait
inc
add
sar
sbb
mov
push
pop
repz
mov
aad
sub
ja
add
jge
inc
mov
and
mov
pop
dec
js
test
add
mov
popa
enter
iret
pop
pop
sub
cs
mov
or
jb
pop
xor
xchg
lock
pop
jno
addl
ret
js
add
mov
leave
fists
dec
pop
or
aas
andb
sahf
push
movsl
xor
es
dec
mov
hlt
in
inc
incl
mov
or
insb
pop
mov
lods
flds
add
js
jnp
dec
out
out
xchg
sbb
sbb
js
js
aaa
seta
push
jp
filds
xchg
mov
repnz
adc
ljmp
push
or
sub
addr16
in
pop
std
test
addl
pop
arpl
pop
ret
mov
ret
cmpsl
xor
inc
mov
daa
xchg
cmp
insl
jae
pop
movsl
pop
push
push
sub
in
pop
mov
mov
mov
mov
insl
inc
sbb
dec
hlt
xlat
mov
xor
aas
sti
in
mov
loopne
fs
das
push
mov
cmp
mov
dec
push
lcall
jp
cmp
cmc
mov
jns
cmp
add
cwtl
in
jmp
fcompl
xchg
cmp
decl
sub
xchg
imul
scas
fidivl
cwtl
dec
negb
mov
lahf
and
or
das
xchg
lods
add
out
ja
call
and
fdivrl
push
and
bound
repnz
lret
jg
pop
pop
xchg
push
cmp
pop
arpl
lods
xor
call
jmp
cmp
pop
jecxz
and
das
rcrb
jg
sbb
in
data16
mov
andb
mov
stc
pusha
and
out
into
jl
mov
pop
mov
rcll
pop
cmp
jmp
or
inc
mov
fsubl
lods
sub
and
push
dec
test
out
adc
lock
adc
es
mov
sbb
pusha
cmpb
in
adc
jl
push
xlat
roll
es
out
int3
psubd
sbb
int
aaa
sub
and
pop
lret
cmp
aaa
js
mov
lcall
push
mov
fmul
pop
je
xor
jne
dec
mov
sahf
mov
inc
mov
adc
ljmp
and
lods
sti
sbb
add
js
ljmp
inc
pop
push
in
adc
mov
mov
scas
mov
fwait
adc
cld
aam
dec
push
xchg
cmc
mov
ljmp
cwtl
lods
push
jmp
jecxz
out
mov
xchg
jns
xchg
xor
push
push
or
jmp
dec
mov
push
cmpsl
int
jge
sbb
dec
push
test
lea
loope
mov
roll
push
and
jmp
bound
pop
andl
sbb
inc
test
sub
xchg
mov
fs
lret
and
and
xor
lret
cld
cmpsl
cld
adc
fs
jmp
xchg
mov
icebp
dec
mov
mov
mov
cmp
popf
and
divl
je
test
outsb
add
inc
fimuls
mov
adc
dec
arpl
push
pop
dec
cmpsl
push
pop
sbb
in
lea
inc
mov
xchg
pop
push
ja
roll
bound
adc
mov
mov
cmc
push
outsl
inc
adc
filds
fnclex
in
mov
mov
popf
lods
xor
inc
les
ss
inc
mov
cmp
dec
inc
add
push
push
fstl
mov
aad
test
test
add
add
into
mov
cmp
jp
inc
nop
rorl
mov
or
out
mov
insb
sbb
dec
jb
xchg
jle
mov
addr16
push
mov
shll
pop
sub
dec
hlt
mov
dec
in
jns
xchg
jecxz
mov
movsb
lds
in
jle
insl
aad
sbb
addl
sbbl
fcmove
fldenv
shll
popf
add
insb
xchg
mov
sbb
jae
mov
into
jo
iret
jge
jmp
shlb
and
ja
ljmp
cmp
cltd
sahf
cmp
mov
adc
ds
movsb
and
sub
sarl
je
lods
test
add
cmp
push
pop
lea
or
inc
pusha
loope
dec
or
iret
dec
inc
push
cmp
jmp
adc
mov
in
xor
sbb
inc
mov
add
jle
cmp
cmp
and
cmpsl
mov
inc
xchg
inc
addr16
fwait
movsb
ljmp
test
outsl
int3
pop
push
bound
jmp
daa
fisubrs
cmp
and
mov
xchg
inc
push
test
add
sbb
imulb
sbb
jne
not
clc
lock
xor
jno
scas
lahf
lods
sar
pop
enter
xchg
add
icebp
mov
movsl
pop
test
pop
jecxz
add
mov
int3
and
cltd
add
xchg
xor
hlt
cmpsl
jnp
xor
fcmovu
loop
shrl
data16
popa
jecxz
cmp
pop
test
jo
ljmp
testl
in
xchg
dec
mov
std
inc
xchg
pop
cmpsl
lock
and
dec
jle
mov
sbb
adc
and
add
sbb
ret
xchg
shlb
mov
mov
xchg
movsl
sub
mov
lcall
sti
push
mov
sbb
dec
xor
cs
shlb
leave
xor
popf
mov
jl
xor
pop
cmpsl
mov
cmp
lcall
ficomps
add
push
imul
adc
insb
sub
push
cli
xlat
insl
xchg
xchg
icebp
and
or
xchg
mov
icebp
mov
push
leave
mov
add
and
mov
pop
adc
sarl
and
pusha
cltd
pop
cmp
cmpsb
sarl
push
gs
cmp
push
je
je
mov
jp
mov
loop
shrb
sahf
mov
movsl
push
xor
cmp
in
out
lret
cmp
das
ds
jo
jg
dec
test
cmp
adc
mov
and
stos
cwtl
mov
pusha
push
rcrb
dec
movl
cld
loope
lods
cmp
cmpsb
movsb
ja
push
xchg
ss
das
mov
pop
mov
pushf
rcrl
cmp
call
cs
cmp
das
mov
icebp
es
mov
out
mov
aam
cmpsl
insl
fwait
jo
xor
and
mov
arpl
cmp
test
ret
mov
xor
cmp
jecxz
dec
dec
xchg
es
jns
dec
inc
xor
rcl
add
xor
or
arpl
outsl
into
xor
and
nop
pop
jp
and
lahf
dec
adc
mov
clc
pop
and
aaa
pop
cmp
fsubrl
les
push
adc
push
jne
leave
cmp
sbb
xchg
jg
xchg
notb
js
jnp
pop
imul
test
movsb
push
adc
scas
sub
sbb
sbb
xchg
ss
xchg
inc
pop
test
xchg
pop
outsl
hlt
xchg
mov
shrd
daa
pop
mov
mov
jne
pop
dec
sahf
mov
out
xchg
or
sbb
sub
cmc
and
stos
loopne
jbe
int3
popa
shlb
stc
xor
sub
mov
ret
lcall
sub
ret
dec
mov
cs
lea
add
push
mov
aas
mov
cmp
mov
sbb
sbb
and
mov
fidivs
xchg
ja
inc
xchg
mov
sub
ret
fnstenv
inc
mov
adcl
sbb
cmc
icebp
cmpsl
mulb
leave
aam
mov
push
xor
ret
and
cmpsl
mov
mov
in
pusha
bnd
popf
and
push
add
xchg
cmp
jae
out
decl
out
call
lahf
insb
jecxz
int3
pop
testl
inc
pop
dec
or
xor
sbb
inc
sbb
adc
sbb
mov
xchg
gs
cmp
mov
insb
lcall
je
imul
cmc
call
imul
outsb
das
cmpb
sarb
leave
xchg
mov
push
int
gs
shlb
xor
loop
push
mov
mov
lahf
cli
pop
push
aam
add
mov
mov
shlb
sbb
jne
adc
inc
loope
cmpsl
out
jbe
lret
popf
xor
jne
pop
lock
call
ja
ja
mov
cmpsl
and
push
add
rcr
cli
inc
xor
mov
ss
xchg
mov
sbb
lods
or
or
sub
push
push
cmpsb
popf
testl
push
pop
outsb
sbb
int
sub
fdivrl
or
popf
outsl
loopne
push
push
pushf
mov
loope
enter
push
ret
mov
mov
dec
clc
aas
mov
or
push
mov
pop
add
jns
in
adc
cmp
sub
push
cs
repz
iret
leave
xchg
test
cmp
int
and
stos
sahf
mov
aam
mov
loopne
fdivrs
xchg
aas
sbb
pop
sub
shll
addb
iret
cmpsb
leave
outsl
jbe
hlt
shlb
push
mov
sbb
aas
ja
sbbl
and
pushf
jo
in
adc
in
mov
bound
mov
mov
xor
rcrl
xchg
ret
out
gs
ss
insb
mov
imul
mov
mov
arpl
in
ds
int3
mov
pop
or
sbb
add
les
jmp
sbb
add
xchg
clc
stos
es
add
loope
in
push
or
mov
lock
mov
sbbb
mov
repz
push
in
add
cs
sbb
ds
push
cmp
mov
add
shrl
aaa
mov
bound
or
lea
hlt
mov
gs
stos
inc
mov
in
pop
icebp
xchg
cli
ret
nop
fnstenv
sbb
mov
call
push
aas
cmpsl
nop
rcrb
pop
jns
lds
push
pop
sahf
jae
inc
xor
push
imul
stc
stos
pop
pop
xchg
jge
add
aaa
cmp
pop
testl
fisttpl
pop
push
add
out
ret
mov
in
push
pop
lcall
idivb
mov
pop
push
popa
cli
xchg
jbe
in
xchg
cmp
ljmp
xchg
push
mov
jno
pop
xor
xor
in
mov
insl
or
mov
or
and
xchg
lcall
adc
inc
stos
pushf
cmp
js
mov
sub
adc
cmp
into
and
in
test
js
inc
or
mov
jne
xchg
and
pop
sahf
xor
jne
in
aaa
xchg
outsl
out
inc
cmpb
cltd
xor
sub
jbe
rorl
gs
push
sub
loope
call
fwait
jne
lea
rcll
clc
cmp
lret
lret
stos
push
sti
dec
pop
test
ffree
mov
xchg
out
je
lret
dec
sub
add
icebp
data16
lock
dec
movsb
and
jno
and
rcl
pop
push
ja
push
dec
sub
ret
or
cmpb
inc
ds
out
rorl
sub
cli
dec
inc
stos
push
dec
icebp
dec
hlt
sub
sub
xchg
jno
xlat
out
sbb
mov
adc
aaa
push
pop
arpl
aas
jb
xchg
push
add
and
sub
cmp
mov
sahf
or
pop
arpl
lret
cmc
jo
cmp
aas
repnz
jbe
orb
lock
dec
ljmp
daa
aam
pop
and
xchg
or
imul
insl
pop
popa
jno
aam
mov
xor
xlat
call
lcall
frstor
xchg
sahf
addr16
sub
mov
mov
sub
cli
negb
jo
push
push
lret
xor
jnp
test
test
inc
xchg
notb
ret
adc
sbb
stos
cwtl
fimuls
xchg
lods
jo
sub
pop
dec
mov
add
popa
jnp
scas
xor
filds
add
sub
sub
xchg
add
mov
lock
test
mov
pop
sub
jl
xor
mov
stos
jecxz
lcall
mov
shlb
cmpsl
sub
xor
and
inc
cmp
loopne
add
pop
fdivrs
cltd
out
bnd
xorl
pop
into
sub
aas
sub
cmp
pushf
mov
cmp
push
in
xchg
lcall
push
insb
dec
jmp
lods
shll
adc
jo
sub
notb
jl
test
cwtl
int3
pop
lcall
and
jb
xchg
imul
lods
ffreep
xor
sbb
mov
or
sahf
xchg
fidivs
push
pop
sub
scas
push
in
test
aam
xor
sbb
sti
cwtl
pop
mov
ffreep
xor
jnp
loop
test
push
lods
bound
rcrb
push
adc
aas
adc
mov
dec
sbb
fnstsw
testl
into
rcll
popa
jp
pop
add
les
dec
jmp
daa
jne
lret
fldl
popf
je
xor
pop
scas
inc
lea
test
pop
and
lret
sub
push
xor
insb
rorb
loopne
mov
shll
sahf
cltd
or
hlt
bound
pop
cmp
mov
inc
jge
pop
ret
dec
sub
dec
pop
int3
pop
pop
pusha
sti
cmpsl
pop
jne
adcb
lea
pop
xchg
bound
mov
pop
mov
into
ss
aas
addr16
adc
jmp
sub
push
jmp
loopne
je
inc
loope
insb
nop
push
cld
outsl
cmp
adc
mov
insb
jne
js
syscall
sti
insb
jae
fwait
cld
es
cld
ja
xchg
dec
push
and
xchg
pop
pop
inc
icebp
adc
leave
mov
je
pop
adc
xor
cmpb
stc
addr16
out
inc
or
mov
pop
and
daa
add
sbb
jne
mov
shrl
lcall
mov
ret
aam
lcall
push
stos
cmp
sub
imul
add
mov
scas
fnsave
mov
fisttpl
sbb
pushf
outsb
or
int3
jge
stos
imul
dec
xchg
scas
mov
pusha
pop
jns
sti
imul
idivl
add
mov
mov
adc
or
jns
add
pushf
cmp
cmp
xor
jb
rolb
cld
out
movsb
xchg
popa
lods
push
xchg
dec
and
mov
hlt
rclb
shll
cltd
xchg
fwait
addr16
inc
adc
mov
jns
fcomps
hlt
fcmovnu
mov
fbld
push
fisubrl
sub
mov
mov
dec
jne
sbb
out
fs
inc
and
pop
fildl
ss
push
cwtl
aad
inc
movsl
ss
aas
jecxz
pop
arpl
sti
sarl
leave
mov
adc
incl
pop
push
jg
xor
mov
sub
mov
pop
into
adc
pop
xor
sti
lea
adc
mov
jl
clc
mov
push
xchg
or
inc
nop
sahf
mov
mov
dec
movsl
iret
mov
testl
scas
inc
cmp
test
pop
clc
mov
pushf
ja
xor
jge
sbb
orl
sub
pop
dec
mov
push
xlat
data16
ret
sub
sub
pcmpgtb
dec
stc
pop
push
pop
pop
pusha
das
or
push
je
jmp
dec
add
mov
out
out
push
in
jge
gs
enter
cmp
int
movsb
rcll
push
push
clc
es
js
add
aam
out
sahf
add
mov
insb
outsl
lds
jmp
mov
sbb
ret
out
mov
scas
xchg
jo
loopne
aaa
pop
mov
mov
adc
pop
loope
and
mov
fistpl
dec
imul
out
sub
xor
fists
or
inc
jno
jmp
movsl
movsl
scas
adc
xlat
jle
movhps
mov
mov
and
and
fsubrs
cmp
sbb
jmp
cmp
adc
int
mov
nop
push
insb
mov
push
lods
jp
lods
ja,pt
pop
and
sahf
ret
jno
insb
xor
jmp
jne
daa
stos
mov
mov
inc
cwtl
pop
scas
xchg
mov
repnz
xlat
pushf
cmp
and
push
mov
sbb
jge
mov
or
xchg
lods
jns
test
call
jl
stos
push
lds
movsb
outsl
fisubrs
mov
sarl
and
sub
adcb
cmp
mov
and
outsb
ret
jb
loop
in
xchg
cld
dec
movsl
in
push
jle
rcrb
leave
fcompl
jb
cpuid
lods
clc
les
dec
and
ret
xchg
aaa
test
and
sbb
call
xchg
sbb
test
incl
lcall
pop
adc
inc
inc
je
sbb
pushf
add
add
mov
jecxz
jb
xor
inc
xor
mov
mov
xor
cmc
xchg
mov
in
lock
mov
fistpll
mov
pop
data16
xor
sub
sbb
ja
gs
cld
and
das
inc
xor
ffree
outsb
rorb
es
testb
arpl
mov
dec
int
dec
inc
and
xchg
inc
dec
cmc
in
cmp
push
xchg
adc
jge
pop
jns
jp
xchg
pop
inc
mov
sub
sub
pop
leave
push
in
mov
hlt
xor
pop
or
pop
in
in
add
sub
shll
in
sbb
push
mov
aad
fistl
scas
sub
adc
mov
lahf
loope
mov
pop
out
pusha
cmp
push
sbb
out
xchg
cmpsl
xor
jno
in
loop
adc
xor
loope
les
adc
fiadds
jno
mov
rolb
in
dec
inc
into
cli
xchg
and
sbb
idiv
popa
test
test
fisttps
rcr
jle
pop
xchg
inc
lret
sbb
pop
xor
push
jp
cmpl
shlb
sub
push
jg
iret
inc
test
mov
fimull
mov
icebp
push
xchg
jns
adc
mov
shlb
lret
or
gs
mov
mov
idivl
dec
shrb
jle
push
pop
sub
in
dec
sbb
je
bound
rorb
test
push
mov
popf
das
loopne
adc
adc
mov
lahf
cli
rcll
sub
mov
gs
jnp
push
cmpl
xorl
hlt
stc
mov
call
divb
cli
jae
iret
into
xlat
cmp
int3
addr16
lahf
push
mov
lahf
and
filds
jp
mov
pop
or
jae
xor
cmpsb
stc
inc
lods
mov
dec
xlat
aaa
pop
notl
mov
in
in
imul
pop
insb
fmulp
movsl
mov
loop
cld
stos
iret
imull
hlt
dec
adc
jnp
in
pop
lret
fsubr
cli
lret
ret
jns
push
sub
mov
inc
and
mov
jle
movsb
mov
stos
push
mov
jb
popa
in
jecxz
sub
jae
or
jp
push
leave
std
movsb
push
fidivrl
push
js
cltd
sbb
divl
inc
mov
test
cmc
add
add
test
das
dec
mov
adc
and
pop
cmp
loopnew
subl
arpl
adc
mov
mov
mov
ret
mov
and
mov
int
inc
push
out
fcomip
xchg
sub
testl
into
inc
pop
sbb
aad
adc
loopne
rorl
and
mov
imul
pop
xlat
push
test
test
and
fs
in
sub
and
repnz
dec
hlt
cmp
fs
ss
xor
pop
orb
cld
jecxz
jns
sub
mov
push
lret
stc
je
ret
inc
dec
xchg
lds
shlb
subb
stos
mov
mov
push
stos
pop
ficomps
push
cwtl
into
pop
cmpsl
mov
jns
movsb
push
std
push
pop
dec
test
stos
inc
or
xor
insl
fwait
adc
mov
mov
insb
xor
xchg
adc
dec
lahf
inc
inc
in
inc
xlat
icebp
xchg
andb
lock
sub
push
jbe
inc
adc
cmpsb
fisttpl
xchg
and
pop
test
lahf
jle
sbb
cwtl
outsl
sar
sub
xchg
pop
pop
cmpsb
pop
pop
sbb
fs
popa
mov
ss
cltd
xor
jb
mov
dec
cmp
xor
xor
imul
push
sbb
bound
fs
aam
push
push
pop
flds
cmpsl
push
popf
loop
dec
into
repz
aaa
dec
stos
outsl
daa
mov
or
adc
hlt
push
or
int3
insl
push
aas
cmp
jmp
scas
shr
pop
pop
in
movsl
jl
cltd
jge
cltd
jge
fcmovnu
sub
sti
add
stos
xchg
gs
in
test
sbb
mov
call
mov
jae
or
mov
jo
pop
xlat
jnp
adc
inc
stc
mov
dec
sub
out
jbe
xchg
lret
xchg
cs
pop
hlt
adc
fcompl
pop
xchg
shlb
mov
pop
andb
js
outsb
push
cmp
arpl
lahf
shl
mov
js
mov
add
pop
add
cmp
iret
jg
push
xchg
sub
lret
cmp
out
pop
inc
sarl
fmull
popl
xor
push
in
and
mov
lahf
jl
sub
or
enter
cmp
sahf
sbb
sbb
nop
lods
ret
loope
jmp
mov
xor
jle
popa
popa
mov
in
rclb
cmpsb
mov
sbb
in
xchg
and
pop
in
out
adc
adc
and
insb
jmp
inc
and
adc
ret
imul
jmp
sti
inc
std
sbb
push
cmpsb
pmulhuw
add
jae
sbb
stos
push
inc
pop
mov
push
cmpsl
cmpsb
pop
inc
imul
jo
sbb
les
mov
inc
sbb
xor
test
nop
xor
jge
sub
add
cmp
imul
sbbb
inc
repnz
mov
lock
adc
lea
mov
inc
pop
adc
mov
add
add
jmp
push
mov
mov
cwtl
sub
push
xor
add
or
js
xchg
xchg
jmp
mov
aad
ss
aaa
xchg
and
js
or
scas
fstps
pop
mov
xchg
out
cmp
fnsave
jmp
dec
cmp
std
push
int
cld
lret
in
test
imul
iret
push
std
pushf
add
and
out
std
repnz
cmpsl
hlt
jb
push
loop
push
clc
sarb
mov
leave
xor
xchg
mov
adcl
jp
jmp
xor
shlb
pop
xor
ret
sahf
mov
sti
scas
cltd
jmp
icebp
add
xor
cmp
aam
xchg
mov
push
adcb
mov
sub
xchg
push
out
jl
add
scas
mov
lds
push
fs
lret
loopne
adc
dec
mov
dec
out
cmp
sub
or
popf
pop
cmpsb
ficompl
imul
shll
inc
fidivrl
xchg
rcll
call
sub
lock
into
in
dec
test
incl
jl
sahf
sbb
pop
sub
xor
mov
ds
mov
fisttpll
movsb
adc
ficoms
cld
out
sub
je
cmp
jmp
es
mov
jo
xchg
xor
inc
popa
in
mov
loope
daa
dec
fimuls
pop
ret
sub
adc
iret
push
jg
jne
lahf
or
daa
gs
adc
sti
sub
pop
or
outsb
lahf
daa
adc
xor
dec
int
lret
push
cmp
sub
jmp
les
add
mov
adc
stos
roll
mov
outsb
mov
test
test
nop
cmp
into
inc
xchg
jae
hlt
movsl
jne
pop
cli
cwtl
in
lcall
and
or
push
adc
or
mov
insb
cmpsb
nop
sbb
and
test
inc
repz
sub
fcmove
ja
inc
inc
push
outsb
pop
push
cmp
sbb
je
add
sbb
inc
in
add
pop
lds
loope
jno
push
aaa
push
addl
rcr
sub
mov
ja
in
lock
std
pop
or
hlt
out
pusha
mov
mov
lret
xchg
dec
imul
fidivrs
pushf
cmpsb
xchg
setnp
test
mov
leave
cld
lods
and
add
mov
mov
jge
call
fiaddl
test
shll
outsl
leave
scas
in
aam
divb
out
mov
ss
or
mov
fsubl
cmc
sub
clc
daa
repz
jge
addr16
pop
ret
hlt
repnz
pop
adc
and
sahf
dec
and
cli
cmp
pushf
add
aad
inc
pop
stc
and
push
sbb
and
das
notl
sbb
lahf
pop
dec
cwtl
in
cmc
add
ficompl
cmpsl
or
pop
popa
stc
mov
aas
fmulp
sub
xchg
lods
fbstp
lret
fisttpl
cmp
xchg
sti
cmp
stc
mov
subl
mov
sbb
dec
pusha
in
lret
or
mov
iret
test
sub
dec
icebp
imul
pop
lock
jbe
adc
sbb
jne
lods
xlat
lret
jp
push
mov
movsl
xor
mov
push
sarl
add
sub
test
jne
sub
cmp
adc
jno
xchg
jmp
sti
jmp
mov
mov
mov
cmp
in
jecxz
jmp
xor
notl
sub
sub
stos
xor
mov
iret
pusha
gs
out
jp
mov
test
fsubl
push
fiadds
jo
pop
popa
out
sahf
repz
push
xchg
popf
jbe
call
gs
lods
incl
enter
fstpt
inc
cmp
loope
cmpsl
rcrb
sub
add
xchg
popa
jo
fbstp
xchg
cltd
xor
xlat
mov
jle
jg
cld
pushf
push
and
and
adc
sbb
aam
cltd
cmp
inc
jecxz
jp
add
insb
mov
clc
add
adc
faddl
mov
inc
lock
in
addr16
cmp
out
popf
dec
jae
inc
test
cmp
push
es
fadds
fcoms
je
mov
sbb
pop
aam
movsl
dec
dec
mov
mov
inc
js
subl
adc
inc
imul
sbb
popa
fisubs
movsl
leave
xchg
cmp
adc
mov
add
in
inc
in
push
imul
adc
out
xchg
jg
dec
mov
lahf
pop
adc
nop
pop
mov
mov
xor
xchg
sbb
out
push
push
popf
bound
xor
pop
xor
mov
and
out
add
pop
out
or
sbb
mov
inc
mov
lcall
add
outsl
xchg
jbe
push
out
ret
scas
shlb
mov
andl
push
xchg
push
ljmp
dec
orl
dec
jp
movl
fisttpl
repnz
pushf
cmp
sub
lea
rcl
nop
jbe
add
pop
sbb
xchg
push
cs
fwait
subl
pop
xchg
adc
aam
cmpl
and
jne
cmc
cltd
push
das
sub
mov
ret
add
dec
ds
frstor
aam
out
shll
js
push
mov
inc
or
jg
xchg
sub
imul
cs
mov
jo
popa
xor
cmp
pop
dec
add
sub
sub
mov
mov
pop
shl
in
ficompl
mov
jge
inc
xlat
jecxz,pn
xor
in
call
mov
fsub
fwait
inc
sarl
cli
inc
cmc
loope
aas
leave
dec
push
das
ret
in
cli
adc
inc
fwait
xor
inc
cmp
dec
add
add
in
jno
cltd
and
adcl
dec
xchg
nop
mov
imul
pop
les
cmp
sbb
les
xchg
mov
movsb
push
loop
fstpt
leave
mulps
shl
mov
push
adc
shlb
dec
jno
xlat
mov
mov
sbb
lcall
pusha
pop
cmp
sbb
cld
adc
cltd
pop
decl
sbb
adc
test
int3
add
mov
dec
xchg
aaa
into
lods
int
aas
mov
fldt
cmpsb
jl
add
lock
sbb
cmc
cmpsb
xchg
pop
xchg
and
rclb
or
ret
lret
push
rcrb
cs
pop
jmp
ret
and
jl
jp
pop
inc
lods
jo
jle
hlt
icebp
sub
jmp
fisttpll
sub
pop
filds
sbb
andl
inc
inc
sub
pop
fdivs
insb
scas
frstor
lcall
xchg
push
inc
mov
dec
pop
adcl
xor
xchg
inc
xor
std
enter
jnp
xchg
rcrb
inc
jg
stos
and
mov
mov
std
cld
iret
loope
clc
xor
scas
sbb
hlt
inc
jne
cmp
sub
jb
clc
pop
hlt
cmpsl
jnp
fdivp
sarl
enter
push
cmpsb
adc
insl
xchg
ss
sbb
sub
and
or
add
shr
xchg
push
push
xor
dec
mov
jnp
jno
pop
sbb
and
iret
js
iret
mov
lret
lea
jnp
mov
and
xchg
outsb
xlat
repnz
divl
mov
mov
enter
aas
test
xchg
sbb
xor
cmp
xor
mov
ret
xchg
movsb
xor
out
cmp
std
lret
sbb
in
dec
inc
or
xor
inc
stos
jecxz
fiadds
leave
pop
pushf
mov
gs
mov
insl
ret
icebp
jg
jmp
subl
xor
into
mov
mov
or
addr16
cmpsb
dec
and
dec
ja
sub
test
push
mov
or
ss
es
or
lock
mov
sti
insb
les
sbb
add
add
xor
and
push
aam
out
movsb
ja
mov
inc
call
frstor
add
adc
cmp
addr16
fst
pop
xor
dec
movsb
mov
jle
test
in
repz
fcomip
sbb
sbb
jns
aad
andb
stc
clc
fstpl
nop
cmp
xor
data16
aas
fisttps
lea
lahf
jmp
jmp
outsl
ds
mov
icebp
push
adc
sub
sub
jbe
jae
fwait
add
jle
out
das
int3
inc
cs
jae
cwtl
lahf
cli
push
aas
sbb
enter
add
cmp
lea
and
jmp
imul
mov
jno
outsl
mov
push
cmp
popl
lea
repnz
dec
pusha
sahf
and
jbe
notl
fimull
mov
stos
ss
fwait
adc
mov
or
sub
ret
ja
pop
mov
mov
mov
xor
popa
or
xchg
iret
pushf
js
push
and
ljmp
pop
jnp
clc
es
xchg
mov
jg
test
int
fcmovne
mov
mov
std
and
cs
push
sub
loope
jbe
scas
lock
sub
jns
push
int3
adc
jae
xchg
pusha
or
das
icebp
dec
sub
data16
xchg
test
leave
insb
stc
das
dec
pop
xchg
dec
dec
leave
std
mov
add
in
cmc
push
ds
bound
cld
mov
xor
push
mov
cli
lret
xor
mul
xchg
pop
je
jbe
daa
and
jecxz
jge
mov
sbb
mov
clc
pop
call
or
mov
inc
aad
or
int
pop
addl
mov
sub
cmc
mov
xchg
mov
mov
iret
outsl
shlb
cmpb
dec
aam
mov
xchg
fdivrl
fwait
imul
les
out
shlb
int
jo
insl
push
add
mov
cmp
dec
jmp
dec
dec
ret
orb
fxch
ljmp
fcomip
sbb
mov
rol
inc
xchg
fs
jle
jne
rcrb
call
fcompl
loop
jmp
outsb
xchg
push
mov
xchg
add
cltd
xor
testl
aas
mov
scas
cld
in
add
ret
or
adc
inc
rorb
pop
imul
jecxz
sbb
mov
test
jne
stc
or
mov
xor
xchg
icebp
mov
ret
sub
fildl
jne
pop
mov
lds
je
iret
in
or
mov
lahf
adc
mov
test
insb
stos
push
mov
loopne
mov
push
shr
xchg
jo
test
sub
in
adc
call
jae
mov
out
lea
stos
pop
push
mov
aas
cmpsb
mov
adc
movsl
sub
adc
sub
dec
gs
iret
shll
mov
repz
dec
dec
push
int
mov
aad
pop
sub
jmp
iret
xor
cld
xchg
adc
jle
push
aam
clc
jg
dec
test
pop
leave
fnstsw
leave
sbb
push
sahf
mov
in
xchg
xchg
xchg
jno
lds
push
add
daa
std
xor
mov
or
aad
enter
xor
enter
lret
mov
sbb
add
add
das
cmp
inc
xchg
xor
cmp
pop
cmc
pop
sbb
push
ret
adc
mov
fadds
in
pop
jb
rolb
out
outsl
push
aad
psrlw
fadd
cmp
test
cmp
lahf
jecxz
out
mov
push
xchg
or
test
dec
pop
sbb
xor
les
jo
xor
pushf
stc
cmp
das
xor
ds
aaa
cwtl
pop
popa
test
mov
push
into
jo
lcall
xlat
mov
xor
jno
into
adc
sbb
push
pop
cmpb
mov
push
or
sbb
jmp
loope
mov
popf
call
cmpsl
fiaddl
push
outsb
repz
frstor
xchg
xor
subl
bound
ds
test
dec
dec
mov
int3
push
jns
fcoms
cmpsl
and
cmp
dec
mov
xor
lea
jb
mov
xchg
dec
inc
out
jno
add
inc
jns
sbb
ss
cltd
movsb
idivl
daa
push
into
inc
stos
adc
mov
cld
inc
sbb
repnz
clc
lods
xor
lock
sbb
and
js
sbb
xchg
xrelease
xchg
jecxz
bound
push
ss
sub
ror
mov
and
mov
push
jno
es
pop
mov
rolb
fcoml
loop
xor
jns
mov
push
mov
jnp
xor
ret
int
inc
dec
cmp
mov
pop
cli
shrl
outsl
push
dec
and
paddq
