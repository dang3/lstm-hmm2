sbb
add
mov
sbb
imul
push
lea
jge
fdivs
loopne
xor
or
sti
and
shr
inc
xor
cmp
test
mov
cmpsb
sbb
jl
lods
cld
or
dec
sub
xchg
stos
mov
sbb
or
inc
int
push
pop
add
in
sub
aad
lret
and
icebp
out
das
popf
lcall
jns
and
loopne
lods
pop
mov
pop
mov
cmpsb
adc
dec
jb
inc
pop
fdivs
aam
aam
mov
rol
push
mov
push
cwtl
sub
lock
pushf
aaa
ss
stc
lea
ret
in
popf
cmpsb
xor
stos
sbb
adc
scas
push
mov
ljmp
or
sub
hlt
out
fdivrs
incl
push
sub
add
or
pusha
mul
sar
and
mov
dec
sbb
imul
cmpsl
mov
inc
inc
out
mov
mov
jnp
in
push
aad
sti
xchg
mov
mov
cmp
fildl
sbb
pop
jnp
sbb
stos
inc
pop
clc
sub
es
mov
arpl
inc
shl
int
daa
pop
cmp
adc
fisttpll
sub
adc
add
xor
stc
rcl
daa
jg
inc
imul
out
mov
mov
mov
lock
jns
mov
xor
lret
add
idivl
stos
mov
pop
inc
push
fsubs
iret
push
pop
mull
dec
add
ret
cmp
sub
xchg
mov
inc
lret
repz
divb
xchg
mov
adc
roll
insl
pop
cmc
sarl
sub
cwtl
mov
and
lcall
sbb
mov
enter
add
fwait
mov
jno,pt
jbe
jle
mov
mov
cmp
jmp
sbb
sub
jno
xchg
fidivrl
push
lret
das
sbb
xchg
lret
out
xor
imul
inc
push
sub
xchg
loop
mov
sub
mov
sub
mov
repnz
jo
int3
jle
jb
int
sbb
pop
mov
bound
and
sbb
xlat
mulb
in
mov
test
xor
adc
popf
jb
xchg
frndint
jns
mov
push
lcall
mov
ds
lods
inc
push
sbb
cmp
int3
ficoml
ret
mov
pushf
stos
adc
xor
dec
lock
stc
fdivl
inc
jns
aad
out
xchg
nop
sbb
ljmp
stos
lea
adc
cmp
nop
enter
pop
dec
and
std
fucomp
popf
pop
movsb
lahf
xor
cmpsb
push
js
mov
mov
and
dec
mov
rcrl
xchg
lea
loope
or
cmpsl
clc
pop
hlt
push
cmp
and
enter
pusha
unpcklps
xchg
fmul
aaa
add
arpl
inc
pushf
ljmp
add
mov
arpl
test
mov
ljmp
leave
arpl
pop
in
stc
xchg
ds
push
cmp
pop
xor
adc
push
mov
into
scas
loopne
jbe
fsubl
xor
and
push
adc
pop
mov
mov
pop
adc
movsb
cmc
push
pop
and
mov
mov
lods
cli
mov
mov
lea
push
repz
push
in
sbb
movsb
out
adc
mov
dec
jae
fsubl
push
sbb
test
in
jo
jmp
or
in
dec
sub
loopne
or
aaa
xchg
push
out
pop
sti
lods
lahf
xchg
push
push
scas
xor
lods
pop
push
imul
insb
sub
mov
cmp
jmp
mull
in
sub
push
lods
arpl
xchg
jne
loope
setle
jmp
iret
cmp
pop
rorb
movsl
cli
insl
pop
xor
and
mov
mov
arpl
cmp
push
std
pop
sti
scas
mov
movsl
xor
sbb
clc
lds
pop
call
mov
fisubrs
push
push
pop
add
cli
or
out
mov
add
cltd
sub
pop
cmp
sarl
stos
loope
mov
clc
pop
leave
sub
aaa
xchg
xchg
cmpsl
cmp
xor
jecxz
mov
mov
cltd
xchg
repnz
sbb
jae
imul
outsl
xor
loopne
push
xchg
xor
xorb
cltd
jle
sarl
dec
xchg
negl
xor
popl
push
mov
movsb
in
xchg
mov
loop
mov
xor
mov
fsubrp
sub
dec
xchg
enter
js
add
icebp
xchg
and
push
fldt
jp
mov
jmp
jg
xchg
push
adc
and
out
in
xchg
cs
mov
and
iret
cmc
mov
insb
shlb
sub
pop
mov
mov
mov
mov
jb
adc
cmc
test
dec
movsl
lret
ret
sbbb
aas
aad
mov
scas
dec
test
ret
inc
cltd
jno
lcall
lret
push
inc
push
stos
cltd
inc
or
mov
xor
sbb
sbb
cmpsl
pop
sub
cltd
f2xm1
cmp
xor
and
insb
push
push
xchg
xor
or
popa
insl
test
call
pop
pop
sahf
push
in
cmp
inc
jecxz
shrl
repz
add
xchg
pushf
sbb
jle
xchg
xchg
push
jle
add
out
adc
inc
inc
and
movsb
pop
shlb
lret
cmp
popf
xchg
xchg
dec
adc
fmul
pop
adc
add
mov
jl
scas
lds
call
jne
cmp
pop
lret
and
mov
mov
sarl
pop
cwtl
rcll
lahf
cld
divb
cmpsl
xchg
dec
rcr
cmpsb
test
ret
idivb
inc
xchg
fcomi
add
mov
inc
rcrl
fiaddl
inc
insb
dec
mov
add
cmp
add
mov
mov
or
pop
cmpb
jle
dec
push
ss
stc
fs
push
pop
xor
add
pop
cwtl
fiadds
push
dec
and
xor
out
dec
push
lock
insb
test
sub
ljmp
jmp
push
fbld
mov
fldl
pop
lods
int3
gs
mov
jbe
jne
push
pop
push
jecxz
cli
data16
idivb
mov
pop
aas
inc
dec
scas
adc
pop
and
pop
jg
lret
mov
aam
mov
int
int3
cmp
enter
movsb
inc
mov
pop
jo
mov
rclb
xchg
mov
inc
iret
cmp
in
jne
jmp
push
mov
jp
dec
lods
dec
testb
mov
stc
or
mov
in
xchg
pop
rclb
inc
clc
cmp
cmpsb
mov
iret
fcmovbe
cmp
shl
fwait
rcl
push
movb
pop
adc
push
jns
push
xchg
imul
or
xlat
or
sbb
nopl
mov
mov
or
push
sub
aas
popa
lahf
pop
jecxz
inc
orb
mov
pop
mov
dec
push
lods
push
les
mov
daa
push
cmpsb
pop
int3
mov
pushf
jne
call
fcmovu
stos
add
push
mov
jl
outsl
jb
enter
xchg
mov
mov
lea
stc
addr16
idivb
pusha
mov
outsl
jle
cld
push
mov
aam
pop
mov
arpl
mov
fsubrs
or
repnz
push
add
inc
pop
loop
mov
mov
mov
adc
pop
std
sbb
pop
adc
in
inc
leave
push
out
jae
mov
and
push
dec
mov
push
lcall
clc
int3
push
lods
mov
in
icebp
in
lods
sub
pop
sub
jbe
xchg
aaa
fdivrp
or
int3
xor
addr16
jmp
fildl
aas
xchg
push
add
ret
fucomip
xchg
jns
or
mov
aas
rorb
ret
in
mov
add
xchg
fwait
imulb
addr16
stos
pop
push
xchg
xor
inc
add
in
jecxz
xchg
cmc
fsubl
aam
mov
loop
sahf
mov
cmpsl
jle
aam
and
adc
repz
cmpb
stos
jmp
dec
sarb
add
imul
push
xor
rcr
sbb
or
mov
push
cmp
jb
sub
push
add
data16
add
mov
push
lret
stos
roll
sbb
in
pusha
out
pop
cmpsb
add
pop
jp
orl
mov
dec
mov
jge
inc
jns
and
insb
add
lock
sub
pop
adcb
inc
imull
and
xchg
mov
fs
pop
ja
incb
xor
sub
and
sub
dec
pop
pop
jo
lea
mov
cmp
pop
cs
int
scas
test
js
pop
xchg
pop
push
imul
insb
xor
mov
add
mov
push
sub
in
insl
fisubrl
ret
rclb
popf
repz
lock
pop
pop
sub
sub
or
xor
loop
push
out
or
add
sti
cmp
push
mov
stos
enter
lock
js
imul
and
mov
negb
pop
arpl
add
cmp
adc
push
mov
rcrl
cmp
fdivrs
popf
ret
roll
jle
movsl
jb
push
shrl
out
pop
mul
cmp
mov
xor
ret
jae
lock
mov
lahf
mov
or
pop
movb
mov
cli
add
dec
imul
leave
mov
cmpsb
jb
xchg
jbe
dec
pop
jle
jmp
out
ret
sahf
gs
cmp
int3
add
popf
inc
fisttps
rcl
mov
mov
mov
into
mov
and
or
push
sub
mov
inc
mov
aad
lahf
rcl
test
xchg
adc
adc
jmp
adc
push
adc
dec
in
cmpsb
and
cmp
loope
dec
xchg
lock
cmpsb
jns
jbe
dec
je
insl
jl
into
test
push
jp
arpl
iret
push
das
cli
push
cld
subb
lcall
jp
jle
repz
jno
xchg
mov
std
xchg
popf
push
int
inc
aad
jp
and
cld
jmp
fdivp
into
pop
inc
dec
popf
or
push
push
bndstx
push
fdivr
fildl
dec
lcall
mov
movsl
or
mov
inc
or
shlb
imul
outsl
sar
mov
mov
subl
out
adc
lahf
dec
hlt
mov
cwtl
xor
mov
dec
or
or
sub
mov
imul
mov
clc
mov
push
and
xor
call
xchg
dec
andl
fldcw
jmp
gs
sub
call
cs
cmp
fcoml
xor
inc
inc
dec
ljmp
mov
fildl
test
es
lock
arpl
lods
xchg
cmc
les
inc
aaa
jge
or
mov
and
mov
mov
jno
sub
in
arpl
cmp
cmp
adc
cmp
xchg
xchg
js
adc
gs
or
std
testl
push
adc
notb
adc
outsb
inc
push
stos
cmp
mov
fnsave
xlat
sub
jl
or
cwtl
dec
lea
lahf
xchg
inc
repz
loope
xlat
pusha
mov
inc
mov
sub
imul
xorb
test
mov
cld
jb
xchg
and
repnz
jae
rcr
sub
icebp
iret
adc
call
jp
mov
push
insl
ds
popa
add
jecxz
push
and
xor
scas
or
adc
loope
orb
pop
jno
lea
or
scas
push
shrb
pop
inc
sahf
lcall
fcmovbe
inc
adc
push
jge
cld
mov
imul
in
push
mov
iret
notl
adc
iret
cld
imul
aaa
push
xor
pop
adc
jo
jmp
mov
movsb
lret
mov
and
jnp
shrl
scas
insl
and
inc
dec
xchg
lea
cld
adc
pop
or
subl
cmp
pop
and
inc
fstpt
das
pop
insl
std
out
into
clc
push
jnp
nop
mov
addr16
jg
cs
ret
sub
jmp
outsb
lock
xchg
repnz
cmp
adcl
cmpsl
jg
insl
popl
adc
imul
stos
dec
add
cmp
leave
fnstsw
push
fmul
or
lcall
icebp
mov
xchg
mov
dec
push
jp
stc
in
js
inc
outsl
icebp
mov
frndint
stos
push
repz
leave
inc
rclb
or
xchg
lods
pushl
pop
mov
cli
push
or
fldl
lcall
push
xchg
jne
test
or
inc
ja
fadds
xchg
in
aaa
ret
cmp
imul
arpl
xor
dec
sbb
lret
jno
aaa
fcmove
mov
repz
ds
imul
in
xor
lds
inc
in
xlat
cld
sarb
scas
lds
pushf
xchg
or
dec
xor
roll
cmc
adc
mov
mov
fnstsw
sub
pop
inc
movsb
or
nop
jo
mov
lcall
lock
ret
jmp
pop
loopne
mov
xchg
outsb
push
inc
int
push
xor
and
test
sbb
jl
leave
lret
sahf
js
mov
pop
std
xor
inc
stos
push
gs
stos
rcl
bndstx
add
cmpsl
cmp
jg
in
in
jle
sbbl
hlt
call
ret
jp
jno
aaa
adc
jae
inc
call
rorb
outsl
push
or
test
imul
mov
pop
xchg
out
inc
rcr
push
xchg
fmull
jge
fistps
mov
mov
shl
adc
lahf
in
mov
je
sbb
stos
xchg
or
cmc
lret
inc
sarb
add
adc
sub
int
xor
jne
mov
cwtl
sub
dec
jle
sbb
inc
cmp
xchg
push
inc
add
mov
clc
and
popa
jecxz
and
rorl
mov
add
sub
call
add
sbb
jg
mov
inc
ror
jb
inc
push
mov
and
shlb
out
mov
mov
add
movsl
xor
pushf
mov
mov
and
jmp
cwtl
cmp
or
data16
cs
shll
xchg
xchg
or
sbbl
aas
shrl
push
jno
stos
or
sbb
and
add
scas
sub
sub
pop
andl
cmp
add
inc
and
cmp
xchg
jge
dec
decl
jb
fwait
jb
sub
imul
repnz
push
sar
pop
nop
adc
fidivrl
fdiv
inc
xchg
lea
dec
pusha
xor
movsb
into
sub
mov
xchg
mov
test
outsl
int
pop
xorb
inc
cmp
jb
outsb
xchg
mov
fstpl
xlat
jl
xchg
js
sahf
bound
rolb
or
mov
push
hlt
outsl
inc
mov
lods
dec
ror
nop
push
mov
in
cld
sbb
popa
jge
fstpt
jg
popa
movsl
or
xchg
jb
rcl
push
mov
mov
mov
subl
js
xchg
and
pop
pop
push
sbb
push
jbe
sub
inc
je
sbb
stos
xchg
ja
int3
push
pop
shlb
add
stos
push
scas
fnstsw
fs
imul
push
in
xchg
fdivs
icebp
data16
xchg
ret
inc
lcall
fildll
pusha
repz
inc
aaa
push
mov
std
add
add
data16
in
push
add
js
loope
mov
jmp
repnz
pop
mov
mov
movsl
mov
mov
and
pusha
stos
push
test
cmp
adc
lret
enter
mov
dec
sbb
mov
add
std
sti
sbb
and
mov
adc
add
xchg
in
push
inc
lret
jl
pop
call
push
adc
cld
jmp
jg
in
jl
mov
testb
mov
xchg
pop
fdiv
dec
cmpsb
and
mov
orb
mov
jle
mov
or
pop
and
sbb
mov
leave
shlb
je
pop
mov
sbb
adc
sbb
pop
nop
adc
jnp
push
testl
push
rcll
cltd
test
pop
add
movsl
dec
mov
jp
mov
out
inc
pop
popl
outsb
xlat
lret
shl
xor
out
mov
movb
add
adcl
loop
push
fsubl
jno
mov
mov
insb
push
mov
inc
dec
leave
jns
stos
add
cmpsl
dec
aam
dec
enter
ret
rolb
in
repnz
adcb
mov
pop
rorl
xchg
repz
lds
repnz
std
xor
hlt
add
jne
ret
cwtl
mov
push
adc
push
cli
aad
xchg
xchg
dec
lcall
dec
outsl
push
shll
add
mov
arpl
mov
seta
xchg
ss
sbb
mov
xor
jnp
xchg
repz
xor
xchg
es
sbb
imulb
add
fimuls
jge
mov
push
mov
xlat
and
daa
jl
mov
testb
mov
add
jge
roll
lret
insl
dec
mov
xchg
mov
je
mov
mov
imul
push
addr16
jno
pop
rclb
cmp
sbb
jnp
lret
mov
iret
in
arpl
in
loop
aaa
mov
inc
out
sbb
mov
sbb
sub
jns
imul
test
mov
in
es
sub
jno
mov
mov
mov
mov
dec
insb
iret
fmul
dec
or
lods
push
cmp
lcall
cmp
dec
sub
mov
mov
adc
jne
in
test
jg
pop
and
jo
inc
cmp
pop
jae
mulb
and
pop
scas
or
bound
into
orb
psubb
inc
sbb
inc
pop
push
lret
dec
mov
loop
sub
scas
inc
pusha
jmp
adc
cmp
fmuls
sbb
cmpsb
popa
mov
insl
stos
imulb
mov
iret
inc
mov
rol
into
dec
sub
int
mov
sub
aas
jne
lea
jno
out
mov
in
loopne
out
push
sahf
sbb
subl
test
push
subb
pop
dec
out
lret
adc
cld
imul
xor
mov
mov
push
jo
inc
rorl
cmp
push
and
or
addr16
push
mov
andb
and
ret
es
in
sahf
dec
or
push
mov
adc
lock
addr16
ja
icebp
cmp
hlt
dec
cmp
lcall
push
mov
out
repz
add
mov
lahf
add
inc
xchg
jmp
xchg
push
or
jns
push
sahf
ds
cmp
jg
mov
mov
cmpsl
add
xchg
mov
mov
dec
sarb
pop
sub
mov
mov
push
and
faddp
cmp
pop
push
xchg
test
inc
hlt
cwtl
es
mov
divb
lods
call
jg
xor
sbbb
movsl
sub
mov
xlat
test
vpinsrw
mov
mov
or
dec
imul
fisubrs
outsb
les
sub
inc
aaa
xchg
sbb
es
pop
pop
xchg
sbb
pop
dec
push
sti
lds
fiaddl
jno
aad
jno
and
sahf
sub
xchg
mov
ficomps
sbbb
xchg
pop
addr16
dec
lea
jl
jns
ljmp
or
add
ds
lret
mov
iret
cmp
stc
out
pop
adc
xor
mulb
cmc
push
imul
repnz
je
push
ljmp
inc
push
jmp
test
fsubs
ss
fidivrl
sbb
sbb
testb
loope
jns
sub
dec
inc
pop
pop
lret
mov
jl
jle
pop
movsb
or
shrl
push
mov
gs
sub
cmp
mov
mov
add
nop
adc
mov
rcr
adc
lret
sub
xchg
pusha
lods
ficoms
rorl
inc
or
and
mov
clc
xor
sti
push
iret
js
mov
fsubrs
out
iret
insb
adc
and
sbb
je
jmp
add
call
rclb
pop
ja
cmp
jl
fisubrl
aad
inc
cli
aam
cmpsb
pop
clc
and
inc
aad
fnstenv
and
adc
aaa
enter
ret
dec
jp
push
into
out
jno
add
jb
or
cli
mov
aam
mov
xchg
orl
nop
fnstcw
or
ja
cmp
lret
or
shlb
stos
sbb
adc
add
inc
pop
xchg
push
mov
xchg
xchg
mov
adc
cwtl
stos
rorl
clc
das
lahf
rorb
test
icebp
sub
nop
cmc
outsl
mov
fidivs
pop
sbb
push
xor
jg
xor
jne
jp
fs
mov
mov
daa
cli
mov
aas
fsubrl
sbb
lret
stos
xchg
push
aad
pop
add
out
sub
imul
cmpb
cmpsl
cld
scas
rcrb
push
push
pop
push
in
js
rcr
xor
sbb
fcompl
fcoml
pop
outsb
mov
and
sub
mov
jp
jo
xchg
fnop
aas
pop
in
ljmp
lds
add
xlat
cmpsb
mov
js
jle
movsl
ret
jmp
sub
fwait
adc
sbb
dec
mov
push
push
mov
mov
mov
jg
lret
mov
in
cmpsb
and
scas
out
out
adc
dec
xor
push
out
addb
sub
push
jo
rorl
fwait
enter
push
outsb
int3
clc
push
jecxz
inc
nop
xchg
jmp
outsl
cmp
push
ljmp
loope
and
xlat
nop
fistl
test
lods
lods
mov
cmp
cmpl
mov
cmp
or
std
xor
ficoms
pop
pop
outsb
das
xor
jle
and
xchg
insl
rclb
cld
jle
sbb
or
pop
or
or
xchg
ljmp
add
in
add
push
scas
push
inc
xor
pop
and
popa
cmp
dec
out
pop
rcr
jno
lds
dec
jbe
mov
cltd
dec
adc
xchg
cltd
xchg
outsb
mov
mov
add
lahf
jb
jae
add
in
insb
fidivs
inc
xchg
das
iret
test
iret
ja
orl
test
jge
add
adc
sahf
hlt
std
into
shl
outsb
arpl
aaa
inc
xor
imul
cmp
or
data16
les
push
ja
cltd
movsb
cli
xchg
adc
arpl
fdivp
jb
push
mov
negl
jmp
leave
scas
arpl
addr16
push
xchg
notl
xor
jmp
into
imul
inc
adc
ret
lahf
in
in
push
xchg
iret
in
push
cmp
cmp
xlat
mov
rcr
rcrl
ret
mov
fsubl
insb
enter
in
inc
xor
dec
mov
jecxz
jmp
mov
test
int3
xchg
jp
xor
and
and
ss
sbb
repz
or
push
invd
dec
and
mov
push
push
add
inc
popl
dec
in
dec
movsl
cmpsl
mov
ret
mov
out
les
push
dec
es
ja
mov
lret
push
xchg
cmpsb
loopne
ss
pop
sub
mov
or
push
and
xchg
sti
lret
mov
jecxz
sub
inc
mov
inc
adc
dec
fildll
jl
test
in
test
gs
jo
pushf
and
mov
jb
sarl
js
pushf
sub
jmp
addr16
fcoml
xor
stc
or
insb
pop
add
pushf
lcall
fidivl
add
push
xchg
fwait
aam
sub
hlt
scas
daa
jmp
cmp
mov
subl
mov
add
jle
mov
jae
out
push
daa
mov
in
popa
push
add
mov
cmpsl
and
jo
popf
dec
mov
jb
movsb
les
frstor
idivl
mov
mov
mov
std
aam
push
cmc
leave
aas
inc
es
or
je
cmp
jo,pt
pushf
shlb
adc
in
mov
out
dec
jmp
mov
rcrb
out
mov
xchg
scas
and
divb
jl
xchg
mov
and
inc
sbb
and
stos
cli
add
repz
int
sbb
adc
xchg
sbb
iret
inc
cli
lret
jmp
stos
aad
push
daa
lds
dec
sub
mov
push
cmp
mov
popa
aad
daa
inc
fsts
daa
or
push
inc
cmp
jmp
mov
and
mov
xchg
add
and
jnp
xor
add
decb
sti
push
pop
lcall
jge
sub
fwait
insb
je
mov
jo
fistl
xchg
stos
mov
in
les
mov
mov
or
test
cli
and
in
and
push
decb
mov
push
aam
fadds
adc
inc
subl
and
jbe
cmpsb
pushf
aas
adc
inc
cmpsl
jb
adc
insb
jl
mov
das
and
adc
arpl
or
scas
lahf
mov
pusha
in
lods
bound
popa
ljmp
adc
decb
mov
loop
jg
xchg
mov
lds
test
pop
clc
test
push
js
dec
shr
inc
das
jecxz
add
xchg
cmp
int
xchg
ret
arpl
sbb
xchg
and
imul
mov
test
sbb
inc
loope
popf
mov
stos
mov
or
popf
sub
pop
insb
dec
loop
shrl
lcall
inc
xor
lret
stos
cltd
and
mov
jecxz
xor
or
add
sub
jae
pop
cmp
aaa
dec
sbb
pop
sti
or
or
mov
pop
dec
and
aam
gs
aas
lret
loop
push
adc
outsl
clc
ljmp
dec
inc
adc
push
xor
cltd
mov
cmpb
loop
sub
jnp
pop
dec
dec
fadds
inc
enter
jns
push
rcrl
inc
movsl
aaa
xor
cs
adcl
adc
inc
jae
repnz
roll
adc
sbb
pop
jns
add
sbb
sub
clc
adc
popa
lods
inc
mov
cltd
out
add
and
xlat
cmpb
and
incb
mov
filds
stos
pop
lea
gs
test
ficompl
adc
cmp
scas
mov
pop
mov
and
inc
icebp
test
cwtl
repnz
jp
addl
adc
push
scas
dec
test
stos
sub
movsl
xchg
arpl
xchg
mov
xor
push
jbe
iret
add
lock
cs
inc
imul
int3
cwtl
ss
out
mov
add
sbb
xchg
pop
mov
lds
xor
imulb
xchg
fs
mov
cli
outsb
adc
mov
ret
jae
ljmp
fldt
xor
mov
jo
es
repnz
push
pop
push
lods
mov
push
fldcw
icebp
sub
lcall
and
jae
and
push
insb
fsubp
mov
rolb
inc
cld
sarl
stc
leave
xor
repz
or
sbb
xchg
aad
xor
mov
mov
dec
out
dec
test
and
inc
adc
and
pop
cmc
popf
enter
xchg
sbb
push
jo
push
and
div
leave
mov
mov
mov
mov
fidivs
icebp
bound
inc
xchg
andb
add
xchg
adc
frstor
push
ret
ret
xchg
popa
sub
mov
push
xchg
dec
lods
dec
scas
sbb
push
xor
popf
mov
mov
lret
mov
adcl
mov
in
adc
pop
cmpsl
mov
jae
loop
das
add
in
jp
add
lods
test
and
cld
mov
ljmp
rcl
jp
add
sbb
int3
stos
xchg
xor
or
fimull
xchg
dec
dec
lods
sub
rcrl
iret
push
repz
mov
in
cmp
mov
fidivs
cmpsl
loope
std
inc
sub
fildl
pop
mov
inc
lret
pop
or
and
pop
push
outsl
pop
ret
jnp
add
lods
inc
xor
das
pushf
into
xor
add
adc
jbe
pop
out
push
stos
ret
cltd
cmp
xchg
xchg
push
pop
aaa
mov
cmp
push
jge
lret
in
fisubrl
add
push
dec
add
ficomps
scas
in
xor
xchg
push
xchg
cmp
lock
repnz
dec
shll
test
ret
cmp
repnz
xchg
push
cld
adc
mov
frstor
pop
pop
sub
and
aas
hlt
and
lea
xor
push
mov
testb
std
xchg
mov
cld
or
testl
xchg
push
js
or
push
dec
cmp
sbb
add
inc
cmp
stos
call
es
mov
adc
sarl
clc
push
add
or
xchg
dec
mov
sbb
pop
xor
pop
push
inc
push
jle
pop
sbb
inc
hlt
mov
decl
mov
out
push
test
xchg
lods
sub
subl
int
pop
pop
test
push
gs
push
jl
je
and
gs
sub
xor
and
xchg
add
into
test
xchg
xor
cli
jb
loope
xor
cmpsl
insb
dec
mov
ss
mov
pop
xor
cmc
cli
mov
sub
lods
add
clc
mov
xchg
aam
jl
adc
sbb
push
adc
loopne
sub
mov
xchg
adc
lret
lds
test
cli
mov
add
insl
mov
mov
jg
mov
in
xor
negl
pop
sub
fistl
stos
ret
rolb
mov
bound
sbb
out
mov
lds
sahf
pushf
jne
loopne
jns
mov
push
decl
ret
lods
sub
dec
mov
sub
repnz
adc
cwtl
das
cs
data16
sbb
js
arpl
push
sub
mov
xor
int3
mov
add
test
hlt
stc
mov
lahf
sbb
inc
mov
scas
lret
sbbb
adc
jecxz
ret
jg
jnp
aad
mov
xchg
mov
imul
and
mov
ret
pop
adc
or
cmp
xorl
mov
into
jle
push
adc
sbb
ja
cmp
mov
inc
cmc
push
xchg
loope
cmpsl
inc
mov
in
sarl
cltd
iret
das
adc
mov
daa
add
jb
inc
jbe
pop
loopne
inc
scas
stos
xor
je
outsl
mov
jbe
das
inc
adc
addb
jl
insl
jb
mov
inc
scas
stc
ja
xchg
mov
mov
pop
mov
xor
sbb
hlt
push
cld
data16
pop
push
push
pop
shll
mov
ret
mov
shlb
mov
jl
int
enter
iret
adc
adc
cltd
pop
decl
and
lods
testb
xchg
dec
outsl
out
pop
mov
je
mov
push
in
cmp
lock
inc
xor
lcall
mov
rcl
cltd
test
in
xor
cmp
or
push
or
jnp
lcall
cmp
push
loop
inc
ljmp
fdivrl
add
nop
roll
inc
adc
fimuls
sbb
out
push
sbb
push
lret
les
inc
mov
add
and
mov
mov
shlb
mov
test
cli
mov
xor
mov
in
cwtl
lcall
xchg
cwtl
in
adc
mov
and
dec
xchg
or
jg
jle
dec
and
adc
dec
shrb
inc
and
filds
push
mov
jge
mov
pop
mov
rolb
clc
lea
imul
leave
xor
out
in
mov
mov
inc
test
sarw
arpl
and
lcall
xchg
xor
sbb
rcl
add
xchg
clc
xlat
xchg
and
push
jno
adc
add
xor
pop
sub
rcrb
pop
sbb
xor
cmp
sub
test
inc
cmp
push
inc
add
fwait
pop
sti
and
inc
or
pusha
inc
xchg
cmp
icebp
test
jnp
dec
pusha
push
adc
dec
and
into
int3
into
fs
dec
fsubrp
data16
aas
test
adc
cmp
cmp
or
xor
in
xchg
int
insb
sbb
mov
test
jnp
sbb
xchg
jne
cs
leave
pop
dec
lock
mov
inc
daa
cwtl
mov
and
or
push
and
les
xchg
insb
out
jae
mov
and
in
or
sbb
or
push
sub
pop
xchg
lret
xor
and
dec
pop
sub
dec
lods
fisttpll
out
pop
xchg
iret
in
push
push
pop
loopne
gs
xor
push
imul
popf
sbb
sbb
pop
aas
jo
daa
shrl
lret
cmpsl
mov
push
dec
lods
push
stos
sbb
push
mov
xchg
faddp
shl
mov
and
lea
not
pop
xlat
push
mov
mov
aaa
pop
and
xchg
cld
jno
insl
data16
out
sub
loopne
push
movsl
or
pop
cs
push
sub
test
add
lods
pop
xlat
mov
lret
inc
mov
pusha
or
mov
out
stc
sbb
or
addr16
inc
js
push
loopne
mov
jne
xlat
loop
in
jge
in
js
push
fcoms
dec
pop
rcr
inc
in
adc
and
int3
lock
jl
dec
or
adc
out
stos
aas
pop
xchg
xchg
jmp
and
hlt
aam
outsb
int3
add
rol
xchg
mov
mov
mov
int
popa
outsl
repz
cld
sub
cmp
outsb
shlb
add
leave
int3
daa
lods
mov
lret
mov
or
scas
mov
rorl
add
cmpsb
incl
dec
add
lock
sub
and
cmp
adc
or
add
mov
mov
ljmp
xlat
out
jmp
dec
in
jmp
mov
jo
xchg
rolb
xchg
jg
ret
jae
mov
adc
mov
push
adc
sti
mov
test
mov
sub
lods
aam
icebp
push
fmulp
pop
mov
add
int
in
in
jg
aad
cmpsl
lds
xchg
mov
mov
incb
xor
inc
fisubrs
repz
ret
aaa
in
push
lcall
push
mov
cli
sahf
mov
out
icebp
les
lcall
add
push
xchg
in
add
insl
mov
popa
int
hlt
ljmp
shl
int
cwtl
or
data16
das
sbb
movsb
cmp
insb
dec
insl
ss
lret
fnstenv
dec
clc
addr16
mov
imul
xchg
dec
dec
out
inc
in
sbb
adc
inc
or
fistpl
lods
fisubs
cmpsb
out
cmp
sub
add
mov
or
in
push
test
mov
pop
addl
xlat
ljmp
pop
sahf
out
das
in
mov
push
xchg
fisubrl
mov
or
cmp
test
xchg
cli
mov
mov
mov
popf
mov
stos
pop
shlb
sti
pop
push
iret
xchg
jge
mov
pop
xchg
jnp
inc
psrlq
and
adc
jecxz
xchg
push
push
xchg
adc
aas
or
push
addr16
psubw
fnstcw
pop
cmpsl
subb
jbe
js
int3
jnp
rcl
dec
loopne
mov
ret
shlb
lea
xor
cs
dec
jg
lds
rolb
push
mov
add
mov
out
in
mov
mov
aad
xor
in
xor
inc
insl
mov
pop
adc
insb
lret
mov
pop
js
mov
ficoms
aaa
push
inc
sti
cld
lret
pop
adc
sti
lret
mov
mov
mov
les
jle
jge
shlb
daa
adc
mov
push
pushf
mov
bound
mov
mov
lahf
push
adc
decb
jne
xorb
jnp
fsubrl
inc
lods
mov
xor
jle
movsb
adc
in
ds
mov
fcmove
add
ret
enter
xchg
mov
add
add
push
sti
loop
or
and
sub
out
push
andl
dec
xor
and
aam
test
repz
push
mov
mov
sbb
hlt
cltd
in
adc
dec
mov
xchg
and
mov
fcomps
ror
lds
xor
shlb
pop
stos
stos
addl
mov
sub
push
imull
push
pushf
test
adc
imul
and
fisubl
test
jg
push
mov
stos
sub
vpmullw
jnp
ds
mov
fmulp
xor
dec
add
addr16
imul
and
outsl
movsl
mov
mov
cmp
xchg
push
lock
imul
insl
lret
adc
pop
imul
and
mov
popf
jp
jne
std
inc
or
inc
cmp
push
icebp
lea
cwtl
addr16
inc
mov
mov
sbb
sbb
mov
mov
out
push
sbb
xor
std
push
mov
outsl
dec
xchg
sti
mov
stos
out
push
or
add
mull
stc
jge
mov
shl
stc
pop
pop
aas
adc
or
jle
adc
xchg
iret
push
jecxz
jmp
push
mov
in
add
dec
jae
pop
xlat
xor
jg
pop
int
mov
jbe
in
mov
cmpsl
jbe
mov
sbb
xchg
inc
sbb
clc
lret
xchg
mov
inc
pop
out
adc
lock
jmp
lods
fstl
cmp
or
sbb
enter
sub
in
cmp
inc
mov
fbstp
aad
sub
arpl
jae
repnz
pusha
aad
jb
xchg
movsl
or
hlt
or
movsb
fdivl
cltd
popf
out
add
push
jmp
xchg
aas
inc
and
mov
jmp
cmpsl
or
bound
ds
addb
stos
jle
jg
aas
and
ret
into
dec
inc
push
dec
mov
pusha
and
mov
sbb
ret
lds
fcmovnb
push
push
lock
xor
cwtl
ja
hlt
insl
sbb
scas
mull
adc
jmp
addps
xor
int
pop
xor
loop
lock
in
push
xchg
mov
in
sbb
or
in
rolb
repnz
dec
pop
daa
jae
jp
jmp
inc
add
cs
inc
push
dec
sbb
pop
xor
push
or
cs
call
jne
jae
xchg
xor
icebp
mov
mov
sub
data16
inc
enter
test
sbb
ret
cwtl
jmp
inc
ret
movsb
push
aam
cmp
mov
and
sub
xchg
adc
cmovo
jl
mov
bound
fcoms
loopne
xor
push
lods
aaa
xchg
and
push
js
add
sbb
gs
xor
pop
and
and
push
rep
nop
xchg
push
jecxz
push
inc
adc
jno
adc
jle
jge
lret
xor
in
sbb
adc
rorl
mov
pop
cmp
mov
ficompl
dec
and
xchg
arpl
pop
mov
xor
and
popf
scas
stc
fmull
rcrl
ret
sub
xchg
lea
add
xchg
fisttpl
mov
call
mov
cmp
and
and
in
mov
xchg
adc
mov
cmpsl
scas
fnstsw
jne
sbb
pop
sbb
mov
dec
jo
or
movsb
loope
test
fadds
imulb
inc
xchg
mov
repz
imul
enter
popf
mull
int
icebp
ja
lret
add
bsr
jo
out
add
sub
or
inc
mov
call
push
add
mov
sbb
push
fisttpll
mov
jo
push
pop
pop
mov
fisubs
or
jns
enter
cmpsl
cwtl
inc
test
imul
lret
pop
pop
or
mov
push
xchg
or
dec
sub
add
das
sub
clc
aas
cwtl
mull
or
inc
into
cmp
loop
add
lods
inc
xchg
push
adc
aam
mov
xchg
call
hlt
push
cmp
xchg
and
jg
scas
inc
push
sub
pop
lcall
mov
aaa
dec
sbbl
cmp
lret
pop
js
test
mov
and
addb
clc
scas
loope
xor
repz
fiaddl
adc
push
sub
out
outsl
jmp
pop
cmp
ss
push
push
in
in
sub
jb
aas
pop
or
xchg
add
div
mov
mov
lcall
xchg
insb
adc
popa
gs
jb
xor
mov
lahf
mov
inc
lret
mov
icebp
lret
inc
pop
lahf
hlt
repz
adc
cmovne
cmp
mov
xor
push
mov
stos
sub
cmc
nop
and
movsl
and
pop
daa
fdivrs
sub
leave
xchg
xor
jl
push
push
xchg
mov
inc
in
jno
not
xor
cmp
jnp
xchg
cs
lahf
rcrl
or
es
or
outsb
mov
test
out
lahf
repnz
das
scas
stc
mov
xor
xor
sbb
pop
lret
mov
les
pop
minps
pop
orl
movsb
jle
pop
pop
andb
jp
clc
je
cmp
cwtl
xchg
movsb
jmp
mov
int3
sbb
add
sub
cli
xorb
lcall
xor
sti
dec
cmc
mov
pop
imul
fsub
mov
lods
mov
repz
sub
mov
fistps
xchg
or
addl
pop
dec
mov
pop
jns
stc
jnp
push
xor
push
es
les
pop
xor
dec
iret
pand
test
cmp
xchg
xchg
subl
or
sbb
loop
daa
leave
push
mov
lock
in
outsl
sub
stos
jle
inc
xchg
mov
ds
out
jno
mov
je
or
mov
fidivl
or
inc
leave
sbb
daa
aam
out
cmpsl
sbb
xor
pop
data16
fsubl
cmp
mov
filds
and
cmp
mov
lods
push
in
cwtl
inc
mov
push
mov
repz
movsl
adcl
sarl
loope
dec
dec
inc
push
rolb
pop
xlat
mov
add
je
cwtl
scas
adc
mov
nop
xor
mov
mov
xchg
mov
fsubrl
sarl
mov
ret
sub
cmpsb
lret
adcb
rclb
or
fimull
xor
aad
popf
in
mov
and
cmp
mov
sahf
sbb
xor
insl
lret
sbb
adc
or
out
js
jl
xchg
popa
jg
je
adc
shr
xor
je
pop
in
shlb
popf
mov
pop
lahf
mov
std
jg
inc
cltd
push
stos
inc
js
mov
sbbb
cwtl
sub
into
test
mov
cmp
ud1
aam
adc
repz
jle
inc
cmp
mov
mov
jns
les
mov
adc
mov
arpl
loopne
in
add
sbb
mov
scas
xchg
jnp
jmp
push
push
loopne
mov
add
inc
and
negl
inc
out
test
dec
jl
fisttpll
adc
jno
pop
push
daa
stos
pop
int
test
test
mov
sbb
pop
outsl
mov
test
add
stc
inc
popf
dec
inc
add
pop
imulb
push
jnp
insl
ret
dec
and
jae
dec
and
cmp
lods
and
sti
out
test
fbld
fnsave
scas
adc
inc
outsb
ja
lcall
cld
pop
cmpsl
sbbl
and
lods
mov
cltd
and
fistpll
xor
fnstsw
sub
inc
sub
lods
push
xor
aad
sub
call
frstor
xchg
xor
xor
pop
or
lar
jbe
inc
dec
in
fildl
shl
fadd
ss
sub
jo
inc
mov
jle
loopne
std
lock
aad
pop
lcall
sub
inc
sbb
push
add
cld
int
pop
inc
sahf
adc
push
push
xor
xchg
cmpsl
fnstcw
sbb
lock
adc
movsl
lahf
adc
cltd
mov
sbb
or
lock
ljmp
mov
out
in
mov
mov
loope
fidivrs
pop
pop
mov
in
mov
push
add
add
jno
mov
xchg
xor
add
sbbl
in
cmp
mov
dec
not
adc
push
scas
mov
call
mov
push
push
movsb
mov
je
xor
leave
mov
fisttps
mov
int
pop
jns
imul
test
mov
pop
or
xor
sbb
sbb
mov
mov
xor
mov
xor
push
sarb
jae
imul
inc
js
dec
mov
ja
pop
mov
out
aad
xchg
push
adc
cmpsl
and
ljmp
add
test
inc
inc
or
jmp
into
cmc
ret
xchg
test
mov
ja
mov
sub
or
clc
dec
dec
rcl
int3
xor
ss
dec
lret
xchg
mov
pop
cmp
jg
jmp
std
or
cmp
mov
xchg
sub
std
jp
arpl
ret
add
push
mov
fwait
pop
cltd
call
testb
sar
scas
imul
cmp
adc
sbb
mov
xor
xor
cmpsb
push
push
pop
int3
pop
aam
pop
mov
icebp
cmpb
xchg
sahf
cmp
andb
inc
cmp
xchg
jle
sbb
pushf
xchg
dec
outsl
push
push
mov
push
int3
mov
ds
aas
inc
mov
jmp
xchg
lods
xchg
jecxz
lock
stc
popa
negb
decb
mov
xchg
mov
loopne
out
out
inc
aad
aam
inc
xchg
loope
cmp
je
int
or
adc
fsubrl
inc
in
cmp
mov
mov
cmp
push
xchg
in
pop
push
dec
test
xchg
lahf
movsb
dec
sahf
mov
insl
pop
xor
enter
cltd
mulb
jns
iret
das
fimull
mov
subb
int3
aam
dec
jg
inc
xor
fs
mov
jne
inc
dec
cmp
call
movsl
lods
test
or
clc
je
scas
mov
out
in
cmp
mov
loopne
jns
mov
jecxz
xor
adc
divb
out
sbb
or
in
gs
ja
inc
add
movsl
jl
dec
xor
popf
into
or
shlb
or
or
inc
and
das
adc
adc
push
jge
push
xor
sbb
in
jno
nop
imul
arpl
jbe
out
mov
lret
sub
and
fistps
clc
in
add
xchg
test
nop
repnz
or
sub
jle
loop
es
pop
pusha
sub
mov
fsubl
cmpb
addb
or
test
arpl
aam
into
push
ds
push
and
sbb
sahf
push
testl
pop
mov
sahf
inc
jg
loope
jecxz
lock
mov
mov
inc
pop
mov
pop
repnz
cmpsb
jne
mov
and
mov
testb
pop
mov
jne
aas
sbb
daa
dec
xchg
scas
jb
and
stos
loop
dec
roll
cwtl
or
in
testl
cmp
pusha
scas
mov
outsb
mov
dec
sbbb
mov
xchg
fstpl
cmpsb
fisttps
sbb
jns
enter
jp
xchg
jne
push
cmpsb
in
mov
subl
xchg
inc
xchg
repz
aam
pop
inc
jns
mov
aas
sbb
sarb
lods
cmpsb
or
push
mov
xlat
xchg
add
xchg
test
lret
cmpsb
dec
in
repz
sub
pop
gs
loopne
imul
scas
cmp
push
clc
or
das
iret
ljmp
add
add
xor
lcall
sub
sbb
adc
push
inc
add
mov
enter
inc
sub
push
or
dec
ret
int
ficoml
jecxz
cwtl
cli
ljmp
mov
sahf
jo
cmp
xchg
cmp
movsb
mov
jbe
jmp
mov
loope
fwait
pop
dec
mov
test
test
inc
xchg
inc
mov
stc
lret
fwait
sub
or
ja
cmp
sbb
xor
sub
jge
mov
xor
fisttps
push
arpl
shl
insb
cmovnp
dec
mov
int
cs
mov
or
mov
hlt
shlb
push
mov
pop
cs
xor
pop
and
jno
mov
setl
jecxz
int
imul
std
mov
and
cmpsl
cld
mov
xor
aam
pop
and
in
mov
lret
xchg
add
sbb
jbe
mov
movb
mov
popa
xchg
test
aas
out
add
test
daa
lods
leave
xor
mov
ljmp
fsts
imul
xlat
mov
xchg
push
mov
jg
aam
aam
int3
ja
fcompl
pop
repnz
out
add
xchg
pop
jg
pop
mov
out
test
mov
aas
repnz
out
cli
iret
cwtl
hlt
mov
fisttpll
daa
and
int3
xor
sbb
sbb
aaa
jne
stc
mov
add
cmpsl
jle
aad
ja
xchg
test
pop
lock
xchg
test
sbb
out
cmp
mov
lea
xor
push
inc
jns
and
add
data16
push
cmp
inc
lods
and
fwait
mov
out
mov
nop
fisttps
scas
test
aaa
mov
imul
sbb
out
scas
dec
lahf
mov
push
mov
inc
test
xchg
addr16
fistpll
rcll
ret
inc
jle
mov
lods
sub
push
sub
ss
rorb
enter
pushf
les
fisttps
scas
mov
daa
and
mov
out
sbb
lret
jae
pop
dec
leave
mov
fsubs
scas
xor
adc
mov
outsb
repnz
fs
jmp
add
xlat
inc
test
pop
inc
fldenv
mov
sub
push
pop
loope
jae
rol
popa
sbbl
mov
dec
dec
ja
shll
fucomp
pop
mov
fs
mov
pop
ret
ficompl
jne
sub
test
mov
sub
pop
test
mov
mov
sub
js
mov
js
aaa
out
gs
add
test
inc
xor
lea
push
pop
movsb
insl
bnd
cmpsb
dec
sub
ja
push
push
int3
loopne
xchg
mov
orb
scas
mov
jno
mov
sarb
and
or
iret
inc
movsb
out
lods
fisubrs
repnz
sbb
sbb
es
push
lock
adc
cld
cmpl
mov
sbb
dec
cmp
cmp
stc
jp
mov
sub
xchg
cmpsb
jno
add
stos
rcrb
push
mov
pop
mov
shrl
ret
or
clc
fsubs
sub
pop
scas
mov
or
pusha
enter
insl
je
cmp
inc
inc
jecxz
out
sub
pop
sub
orl
divb
adcb
fcoml
xor
in
push
lods
cld
fidivs
dec
pop
inc
rcrl
shrl
icebp
fiaddl
out
jmp
adc
cmpl
mov
cld
lret
insl
fistpll
inc
loope
xchg
aaa
dec
add
xor
jo
lcall
jecxz
push
push
mov
cltd
xor
add
adc
sarb
dec
inc
sub
lret
movl
push
fldt
sbb
loop
xchg
mov
inc
shll
sbb
fs
cmp
push
jge
mov
jge
insb
jno
mov
cmp
mov
addr16
jbe
xchg
or
jne
xchg
test
dec
mov
push
lret
repnz
inc
cs
outsb
dec
jbe
pop
add
imulb
mov
or
push
xchg
sbb
subb
jmp
sub
mov
pop
cs
loopne
pop
cld
int3
inc
mov
xchg
dec
popa
mov
into
jb
imull
lock
lcall
lods
inc
hlt
pop
dec
mov
xor
mov
test
cld
pop
push
popa
and
and
in
icebp
int3
adc
mov
or
ret
xchg
jecxz
outsb
lods
in
xchg
mov
ljmp
out
jp
sbb
or
ja
or
movsb
mov
jp
mov
xor
adc
lods
jg
dec
in
sbb
sub
popf
dec
xchg
adc
dec
mov
clc
jmp
and
xchg
sbb
out
add
lahf
into
pop
push
mov
xchg
push
test
add
dec
les
test
xchg
jmp
mov
out
gs
push
pop
mov
inc
into
adc
leave
mov
cmp
mov
push
or
xchg
stos
jg
psrlq
xchg
adc
movsl
aaa
jo
xor
mov
dec
incb
cmpsb
inc
jne
lret
adc
sbb
ja
leave
xorb
or
ja
clc
sub
jno
xor
repz
aaa
ss
add
xchg
mov
cs
pop
add
int3
cmpsb
inc
popa
inc
jmp
or
rcl
shll
inc
loopne
mov
jb
in
adcb
or
mov
addb
fnstenv
adc
sub
js
mov
pop
sarb
cmc
mov
xchg
insb
jle
or
sub
push
mov
jbe
xchg
xor
fnstsw
inc
insb
or
jo
lret
lret
mov
fidivs
mov
xor
mov
add
jg
mov
test
movsl
sub
jge
pop
movsb
mov
lret
push
xchg
jg
cmc
cmp
push
sub
faddl
mov
popa
sub
dec
lea
fwait
jmp
cmp
jecxz
fdivr
fldt
loope
insl
fists
xchg
sub
sub
xor
sbb
xchg
std
shl
mov
sarl
and
out
sub
or
aam
fimuls
jmp
out
test
cmpb
jno
inc
cli
movsl
cwtl
or
push
cld
push
dec
ja
stos
rcll
int3
sub
pop
mov
dec
lret
or
cmpsl
push
push
mov
into
dec
add
and
cmpsb
mov
mov
mov
xchg
mov
adc
movsl
sti
imul
adc
inc
xchg
ss
repnz
mov
add
test
jmp
mov
push
mov
outsl
sub
clc
daa
lds
andb
and
or
adc
jg
push
dec
sbb
sbb
in
push
and
in
dec
jb
dec
pop
loop
jb
push
ret
cmp
movb
xchg
in
xchg
xchg
jno
mov
jmp
push
jecxz
stos
ljmp
sbb
jbe
xor
xor
ret
fsts
mov
int
adc
sbb
ret
sti
sbb
outsb
test
dec
lods
test
mov
add
adc
xchg
int3
push
leave
imul
add
adc
mov
jl
hlt
adc
mov
subb
xor
scas
or
or
loop
sahf
pop
and
pop
stc
sbb
adc
mov
mov
xor
jns
cmpsb
jnp
add
xor
fldt
fstpt
lock
aad
xchg
push
push
xchg
ja
jns
dec
insb
leave
pop
mov
lds
sbb
xchg
push
xchg
add
outsl
sbb
gs
in
xchg
jo
fwait
sub
xchg
imul
xor
addr16
sbb
jge
cmp
adc
into
cli
sti
xchg
inc
into
add
sbb
push
arpl
popf
and
dec
or
mov
andb
inc
push
jp
movsl
mov
pushf
jg
sbb
fstl
ljmp
dec
mov
sub
incb
and
cmpsl
add
sbb
or
addr16
les
and
jp
mov
xchg
dec
mov
jp
pop
mov
loop
aaa
jo
cmp
dec
jge
enter
jp
shrb
lret
subl
jge
inc
cmc
add
or
pop
xor
pop
mov
pop
mov
shlb
loop
and
mov
push
sub
push
idivl
testb
sbb
je
xchg
cmp
pusha
dec
mov
daa
inc
gs
int3
andb
imul
xchg
mov
pop
mov
xlat
add
stos
or
xchg
xlat
popf
mov
sbb
mov
mov
fwait
push
aaa
or
and
and
fxch
mov
xor
mov
sbb
out
pop
mov
sub
sub
push
xchg
in
push
dec
frstor
xchg
sub
repz
add
sarb
pushf
cmc
sub
repz
insb
loop
jecxz
lcall
scas
or
push
mov
mov
test
or
add
movsl
ret
dec
cmpb
jnp
add
in
mov
sub
sbb
cmp
xor
inc
inc
push
insb
add
mov
loopne
xor
xor
leave
push
test
inc
rcrb
jmp
nop
jbe
jmp
test
xchg
ret
lods
inc
push
addr16
adc
mov
cmp
dec
je
lea
insl
inc
dec
pop
or
add
push
jo
lcall
sar
push
add
cmc
movsl
xchg
loop
mov
add
ds
pop
sbb
sub
mov
or
lahf
mov
xor
ficomps
sub
shll
or
pop
dec
sbb
imul
or
adc
inc
inc
dec
leave
popf
adc
dec
mov
xor
sub
fisubrs
cmc
pop
lods
shl
pop
sub
push
movb
pusha
cli
into
leave
adc
push
adc
testl
xor
xor
push
push
js
mov
or
and
pop
mov
sub
mov
test
inc
mov
in
negl
push
jge
jg
adc
sub
test
out
push
push
jbe
xchg
pushf
xchg
rcrb
push
inc
fcomps
pop
mov
or
mov
push
jecxz
popf
add
stos
xchg
or
adc
cmp
shlb
pop
jno
and
insb
jg
aad
adc
push
jmp
or
add
imul
lods
div
je
inc
lret
mov
mov
mov
mov
jne
xor
fs
xor
lds
pop
jmp
jmp
push
push
xchg
dec
pop
mov
addr16
adc
out
and
in
daa
jp
inc
fcoms
or
outsb
lods
movsl
test
and
mov
xchg
add
jb
inc
loop
jns
mov
cmpsl
xchg
sub
lods
or
in
xor
and
loopne
outsb
into
ljmp
fdivrl
mov
sbb
aad
and
cmp
in
inc
mov
sub
ffreep
ret
mov
mov
sub
repnz
cld
shll
push
inc
push
xchg
dec
and
mov
lock
jge
push
lret
cwtl
mov
jnp
dec
jg
repz
leave
adc
ss
mov
das
int
and
xorl
nop
leave
add
fucomi
jmp
icebp
add
call
aas
inc
ret
gs
hlt
dec
insl
stos
loopne
or
arpl
rcrl
mov
mov
mov
idivl
xor
xor
inc
inc
cmp
xor
je
inc
int3
test
jecxz
xchg
les
xchg
cmpsl
enter
sbbl
sub
rdmsr
xlat
rorb
stc
mov
lahf
pop
lcall
test
adcl
pop
jecxz
cmp
mov
jae,pt
xchg
xchg
add
test
jb
movsb
aad
mov
adc
cwtl
sub
jg
and
mov
dec
sbb
movsl
addr16
pop
cmp
les
aaa
andl
push
mov
cs
repz
lods
pop
xchg
pop
leave
xchg
test
out
add
int
clc
decl
jns
xchg
fwait
push
std
dec
mov
pop
dec
xorb
adc
push
imul
pop
lret
jne
int
rcr
into
sub
scas
test
xchg
push
inc
push
jp
jmp
stos
push
jg
in
add
testl
mov
cltd
add
cmovge
pop
in
aaa
addr16
inc
jbe
das
ljmp
sub
pop
incl
hlt
jmp
ds
dec
mov
pop
das
es
sti
xchg
loop
enter
jb
mov
jne
sub
inc
mov
jae
xchg
sti
xchg
addr16
push
addr16
movhlps
js
pushf
jecxz
xlat
bound
mov
xchg
dec
test
lret
scas
je
inc
movq
cs
stos
loopne
inc
adc
and
hlt
clc
cmp
ss
cmp
dec
cs
push
rolb
fisttpll
sbb
out
out
pop
cmp
push
out
mov
sub
mov
repz
push
adc
push
cmpsb
scas
shr
cwtl
mov
xor
movsb
fimull
rep
add
mov
cmpsb
pushf
sub
aas
test
lods
dec
daa
mov
and
adc
inc
mov
mov
push
push
sub
fldl
ds
jge
sub
and
pop
cltd
loop
jmp
or
dec
or
insb
push
insb
cmp
out
mov
and
add
xor
or
fisubl
addr16
popf
dec
out
cmp
mov
adc
pushf
jg
stc
mov
and
sbb
sub
and
mov
mov
and
push
push
adc
outsb
cli
xor
ficompl
jmp
repnz
shlb
and
mov
mov
les
and
fwait
shll
insb
add
xor
mov
cmp
jp
lds
ja
sbb
aam
xor
dec
loope
and
popf
sub
mulb
dec
mov
gs
stos
pop
mov
gs
pushl
xchg
inc
stos
adc
jb
scas
xor
fstpt
push
test
mov
sbbl
leave
ret
aaa
sub
sbb
out
jb
adc
adcl
lahf
add
out
popf
push
sub
cli
mov
mov
adc
movl
fstl
test
gs
mov
ja
dec
xor
imul
and
dec
es
jge
daa
popa
jno
push
inc
dec
mov
in
fwait
push
mov
inc
pop
adcl
cmp
xor
jg
lret
movsb
je
cld
lock
lock
mov
stos
fimuls
cltd
jmp
pop
adc
or
xchg
stos
inc
hlt
dec
pop
inc
cmpsb
cli
ljmp
mov
add
ds
ds
add
fidivl
shl
sub
sub
push
mov
je
add
jmp
mov
cmpl
imul
mov
into
hlt
idivl
mov
in
fcmovb
mov
stos
inc
xchg
jge
loop
fidivs
inc
or
mov
mov
pushf
pushf
cmp
mov
ror
fstl
cld
outsb
push
xor
inc
es
lret
int3
into
sbb
xor
mov
outsb
fdiv
push
test
addr16
sub
mov
mov
arpl
stc
sbbb
loopne
xlat
sti
orb
frstor
and
fisubrs
stc
mov
jecxz
lret
int3
mov
sahf
imul
in
mov
pop
inc
mov
enter
add
clc
mov
or
insb
js
jl
pop
sbb
dec
and
daa
push
or
ficoml
rcll
fldt
xchg
mov
cmpb
dec
pop
addr16
jmp
pop
sub
xchg
test
adc
sbbb
loop
xchg
xor
mov
xor
mov
and
mov
xlat
pushf
mov
ds
pop
xchg
arpl
xchg
stc
push
ret
fmull
pop
in
lret
sbb
mov
nop
pusha
xchg
lods
test
sub
push
in
add
sbb
test
mov
in
mov
cmc
xchg
data16
fwait
xor
sub
xchg
sbb
sub
andb
lock
ja
cmc
adc
adc
sarl
out
lret
inc
call
cmc
xor
xchg
addr16
test
xor
pop
imul
les
les
leave
mov
arpl
pop
jnp
adc
imul
fnstcw
mov
stos
sub
or
movsb
mov
enter
inc
sub
cmp
adc
xchg
xchg
lds
push
icebp
sbb
adc
das
push
push
fildll
mov
adc
pop
jge
mov
mov
pop
fcomps
pushf
pop
push
sub
jbe
jae
loop
jmp
jmp
xchg
pop
mov
loope
in
lods
out
outsb
mov
push
xchg
jns
hlt
pop
xchg
xlat
jne
inc
and
jae
fwait
repz
mov
incb
pop
adc
fstpl
push
outsb
out
xchg
sbb
adc
jmp
add
cmpsl
mov
sbb
nop
dec
cltd
xchg
aas
adc
inc
dec
jp
lcall
adc
into
adc
mov
mulb
adc
imul
add
and
jmp
sub
jge
ljmp
lds
or
push
push
mov
push
std
pop
adc
cmp
cld
int
adc
out
mov
xadd
jge
or
push
loopne
xchg
fidivrl
popf
pop
cld
fwait
movsb
fadds
fidivs
sbb
mov
outsl
sbb
fwait
and
jne
es
mov
test
mov
aas
xor
mov
arpl
in
mov
pushf
filds
nop
outsl
ljmp
loope
dec
jno
mov
mov
mov
ds
aas
pop
orb
sahf
cmpsb
add
xor
adc
dec
test
ja
aad
inc
test
addr16
out
pushf
lahf
aam
mov
cltd
enter
test
stc
dec
stos
pop
fidivrs
lcall
lahf
inc
push
mov
test
cmc
dec
icebp
fcos
dec
cmp
scas
lar
and
and
fmuls
arpl
mov
int
xchg
xchg
jmp
push
mov
push
mov
adc
mov
cmp
jo
fcmovb
shl
fdivrl
push
popa
ds
sub
xchg
fwait
cmp
orl
and
jg
add
ret
in
jno
lahf
nop
pushf
sahf
push
pop
inc
pop
scas
into
xchg
push
xchg
xor
fs
mov
scas
adc
mov
mov
pop
xor
mov
xor
mov
mov
dec
loopne
lds
adc
push
jbe
jl
and
xor
jmp
aam
test
fstpt
cmp
dec
mov
mov
jmp
pop
test
jbe
inc
inc
movsl
mov
popf
dec
mull
mov
loopne
inc
fsts
cmpsl
or
shrb
ja
or
outsb
outsl
dec
and
loop
fildl
aas
xchg
nop
cltd
mov
pop
cmpsl
pop
adc
jo
out
scas
mov
enter
jno
xor
shrb
add
jecxz
enter
or
in
iret
lcall
movb
or
dec
mov
nop
xchg
andb
jecxz
xchg
sbb
inc
sbb
or
data16
fwait
xchg
test
push
aam
xor
cwtl
push
jmp
hlt
daa
pop
mov
sbb
lea
sbb
pop
jno
fisubrl
mov
stos
imul
sbb
stc
cli
sti
dec
or
cltd
adc
sbb
push
sahf
imul
cmp
sarb
js
jae
sbb
add
mov
fwait
jae
movsb
cmp
loop
push
xor
mov
notb
insl
pop
fucomi
dec
test
mov
push
add
mov
xor
dec
jno
sub
push
sub
add
dec
pop
shl
xchg
loop
inc
dec
xchg
dec
data16
movsl
push
arpl
cmpsb
mov
lahf
lcall
jo
pop
mov
in
pop
cmp
out
scas
mov
mov
andl
adc
dec
lcall
mov
aad
or
clc
hlt
mov
pop
pop
jmp
cmc
pop
outsl
leave
mov
mov
cmp
or
idivl
jecxz
jno
fldcw
fsts
adc
xchg
pop
push
shll
mov
dec
add
push
mov
dec
inc
cs
mov
cs
mov
orb
aaa
aaa
or
enter
imul
hlt
jne
push
push
inc
sti
xor
ds
inc
cmp
cmp
dec
add
daa
call
clc
stos
xor
or
dec
jecxz
adc
cli
cmpsl
inc
push
ss
imul
les
add
pushw
dec
jg
mov
call
or
lret
jp
cmp
test
mov
jb
rol
pop
jg
test
mov
and
adc
insl
or
inc
jae
mov
push
jae
pop
inc
dec
call
mov
pop
leave
stos
lock
and
movsb
xchg
lret
or
sbb
js
out
or
dec
nop
es
pop
ret
pushf
rol
in
lret
sub
push
inc
addl
xor
nop
jo
test
pop
fldl
pushf
pop
lret
stos
jl
jmp
xlat
insl
dec
pop
mov
popf
pop
test
push
mov
sub
in
nop
lock
mov
jnp
test
push
xchg
enter
ret
pop
xchg
push
or
arpl
nop
loop
jbe
cmp
hlt
data16
outsb
pop
stos
push
insl
inc
cwtl
xor
push
in
xchg
xor
push
jp
adc
xchg
fwait
push
push
icebp
insl
out
cmp
lods
and
test
push
pop
cmc
adc
incl
or
push
push
test
cs
lcall
sbb
int
cmp
jns
xchg
or
sub
adc
pop
shll
pop
add
inc
dec
and
mov
das
or
push
or
arpl
jecxz
aad
mov
fistps
cmp
cmp
xchg
out
pusha
jb
mov
jo
int3
cmpsl
jmp
call
mov
jae
adc
or
out
jo
pop
je
in
dec
inc
ds
jbe
cmp
xchg
les
daa
mov
bnd
in
fwait
push
or
sbb
in
sbb
movsl
shlb
sbb
sub
pop
mov
pop
and
adc
mov
jno
sbb
mov
or
mov
push
adc
or
add
sub
mov
adc
cld
fwait
mov
push
inc
cwtl
outsl
data16
movsl
out
inc
scas
pushf
clc
pusha
dec
call
movl
ss
ljmp
add
mov
adc
int
pop
mov
pop
icebp
pop
std
test
addl
push
xchg
in
mov
pop
xchg
pushf
shlb
mov
fwait
push
and
push
mov
fisttps
jae
mov
inc
jno
in
push
loope
jmp
stc
cmpsb
sub
fcmovnbe
insb
pop
lcall
xor
in
fisubs
aaa
aaa
cs
dec
lret
gs
sbb
gs
dec
mov
jo
jb
mov
loope
call
pop
movsl
push
xchg
sahf
xor
xchg
xchg
loop
push
jae
xchg
dec
add
mov
sub
fcoms
or
stos
mov
push
inc
mov
inc
mov
sbb
jne
fsubr
lcall
push
dec
cld
loopne
cltd
add
xor
daa
popf
add
repz
subb
sbb
jno
mov
sub
mov
imul
mov
test
jno
adc
sarb
mov
inc
nop
push
test
mov
into
inc
sbb
mov
ret
aaa
sub
xchg
lret
add
ficoms
ja
pushl
add
scas
insb
mov
mov
out
and
das
into
fdivrs
pop
cltd
sbb
enter
lcall
lds
stos
lcall
jmp
xor
dec
out
outsl
out
paddsw
dec
xchg
mov
jmp
test
fldenv
hlt
push
das
aam
sbb
jbe
jmp
mov
pushf
xchg
shr
xor
rcrb
sti
mov
bnd
lods
fwait
mov
std
mov
xchg
insb
aam
cmp
dec
sub
enter
push
shld
les
adc
inc
arpl
and
pusha
xchg
das
scas
pop
nop
insb
adc
jb
mov
sub
mov
mov
lods
sub
leave
inc
and
movl
add
or
push
dec
xchg
rcr
mov
or
cmp
test
xor
inc
dec
inc
add
mov
mov
jg
hlt
out
mov
cmp
inc
xor
mov
test
fstps
dec
fcompl
stos
jb
and
std
or
aam
push
cmp
push
jns
xchg
mov
inc
out
inc
add
jg
lods
inc
scas
or
pop
lret
das
jge
adc
daa
fidivrs
sub
push
xlat
ficoml
or
mov
cld
xor
faddl
mov
aaa
std
enter
jp
add
cmp
aas
push
inc
dec
repz
rclb
inc
test
nop
sbb
jno
push
popa
sbb
les
xchg
pop
scas
sub
xchg
mov
push
inc
fimull
ja
cs
mov
or
shrl
frndint
pop
sbb
add
aam
ret
xchg
sbb
test
cmp
mov
repnz
out
jo
popf
sbb
imul
xor
outsb
mov
or
test
pop
mov
inc
jmp
and
pop
out
movsb
pop
out
lahf
cmpsb
adc
sbb
mov
imulb
push
dec
arpl
sbb
push
ficoml
adc
push
movsb
int
les
dec
xor
or
jmp
adc
ljmp
adc
insl
insl
lods
xor
jno
jo
mov
lret
push
lods
mov
mov
sbb
dec
mov
out
push
add
or
and
xor
subl
push
adc
jp
icebp
mov
in
lret
jge
push
mov
xchg
sbb
push
add
xor
add
jp
mov
test
dec
inc
aad
add
lods
jb
sbb
mov
push
divb
mov
xor
mov
pop
bound
shl
popa
js
jnp
or
push
push
sub
out
xchg
repnz
lods
cmpsb
lock
shlb
dec
mov
xor
cld
outsl
xchg
mov
outsb
fs
aas
cmc
jo
iret
ss
lahf
push
call
fstpt
mov
cmp
outsl
loop
add
fs
xchg
and
cld
xchg
cmp
push
cmp
loopne
lea
push
aad
jle
movsb
mov
fstpl
std
insl
pusha
xor
xor
cli
xchg
daa
stos
mov
in
cwtl
notb
aam
lret
pop
sub
or
cmp
push
push
pushf
lcall
xor
bndldx
or
das
xlat
sbb
mov
pop
mov
sub
aam
cmp
lcall
ds
sahf
sub
jl
inc
sahf
sti
dec
sbb
sub
in
or
stos
mov
jp
push
test
sbbl
pop
sbb
fwait
pop
sub
pop
in
pop
repz
push
mov
jmp
inc
outsl
jb
xchg
mov
repz
cmp
or
pop
jne
in
fs
addr16
pusha
in
int
pop
movsb
mov
or
stc
xchg
in
pop
inc
out
arpl
push
into
int3
repnz
jbe
xchg
xchg
push
cmovbe
jle
sbb
xchg
xor
and
lret
test
cwtl
loopne
leave
cld
jl
insl
sbb
jne
cmp
into
cmc
pop
lock
neg
mov
pop
cmp
das
fsubrl
mov
lods
inc
pop
sbb
daa
repnz
ljmp
cmp
nop
rep
cmc
hlt
cmpsb
pusha
dec
xor
test
imul
adc
repz
fwait
xor
sub
xlat
fdivrp
ficompl
cmp
push
dec
bound
decb
sub
stos
cli
test
ret
pop
in
ja
fisubl
add
dec
mov
into
pop
jge
mov
xor
fs
push
mov
aam
divl
xlat
loopne
jmp
mov
sub
repnz
push
mov
ret
clc
daa
sarl
xchg
inc
clc
jmp
add
call
xor
xchg
xor
jo
dec
sub
jge
push
stos
push
inc
jb
sbb
pop
das
dec
cmp
outsb
pusha
jmp
lea
mov
mov
out
idivl
mov
stc
push
mov
cmp
stos
aas
mov
aam
pop
test
fsubrs
popa
xchg
fwait
scas
gs
call
cli
ja
jb
pop
aas
or
mov
sub
mov
out
aam
mov
xlat
in
cmpsl
push
mov
xchg
jmp
sahf
shr
mov
arpl
popa
cld
les
jo
scas
outsb
mov
add
xchg
fnstcw
xor
nop
jmp
ret
xor
add
inc
dec
mov
leave
lods
lea
out
into
xchg
pop
hlt
and
push
or
push
loop
in
je
vmovupd
icebp
fistps
mov
mov
jne
jno
cmc
mov
lret
push
sarb
jl
test
sbbl
das
xor
xor
cmp
push
push
cmpsl
and
or
inc
lds
xchg
cmp
xchg
jmp
fnsave
and
movsb
ljmp
repnz
xchg
xor
test
push
call
xchg
je
pop
xchg
add
dec
xchg
nop
sbb
xor
outsb
shll
call
sub
sub
dec
in
push
jb
xchg
icebp
fdivl
mov
aas
out
jnp
pop
xlat
jbe
ret
movsl
and
rcrb
inc
testl
pop
cmp
fisttpl
cmp
divl
push
stos
popf
mov
jne
into
enter
cld
mov
mov
cs
add
dec
sbb
sub
mov
jg
pop
mov
xchg
adcl
clc
add
out
cmpsl
pusha
mul
sub
shrl
xchg
cmp
mov
sahf
pop
adc
cmp
xor
xor
mov
adc
das
scas
xchg
sbb
xchg
ja
cmp
cli
mov
jne
lret
into
cmpsl
cmp
outsb
mov
add
lret
xor
iret
inc
mov
hlt
xor
inc
mov
inc
loopne
lea
lret
pushf
xchg
in
aaa
mov
sti
xchg
mov
xor
cmp
stos
arpl
cmp
inc
mov
add
out
sbbl
xchg
pop
stos
lods
imul
push
push
cmp
push
or
repz
mov
popf
pop
xchg
int3
xchg
fwait
shrb
daa
pop
mov
and
pop
cmpb
pushf
xchg
js
iret
ljmp
testb
cmp
adc
lds
and
jle
rcr
adc
loopne
xchg
fucomip
mov
and
mov
in
adc
push
ret
sub
sub
pop
push
mov
cmp
mov
push
sub
push
jle
fildll
mov
inc
mov
sbb
repnz
enter
psrlq
outsb
adc
jno
dec
out
xchg
jmp
sub
jae
fcmovnu
and
lcall
inc
adc
aad
pop
add
xchg
pusha
fists
cmp
incl
xlat
aaa
arpl
sbb
iret
movsb
or
fstpl
pop
cltd
cmp
push
jmp
test
or
mov
push
adc
div
mov
leave
loop
rcr
fcomps
sbb
inc
jge
dec
lods
push
inc
push
loope
cmp
push
rcrb
int
sahf
fisubl
xchg
das
in
xor
mov
xchg
popa
jl
daa
dec
cltd
sub
inc
mov
dec
test
push
cvttps2pi
mov
call
xchg
inc
lods
into
inc
aaa
xchg
push
leave
adcb
and
mov
cmp
dec
cmpsb
inc
push
cmc
cli
add
lahf
mov
cmpsb
pusha
sub
push
aaa
push
xor
adc
sub
test
lods
shlb
fisubrl
lea
adc
mov
in
into
mov
mov
daa
fisttpll
ficoml
xchg
ljmp
mov
adc
aaa
lods
jg
lahf
repz
scas
xor
mov
and
lcall
push
fidivrl
arpl
outsl
mov
aam
mov
dec
andl
push
xchg
aas
xchg
call
repnz
and
jge
out
ficoms
loop
cmp
xchg
dec
sbb
pop
and
and
xor
jecxz
jmp
mov
mov
int3
fidivrl
xchg
and
cmpsl
jne
leave
cltd
jb
fwait
jnp
arpl
push
hlt
inc
inc
test
and
push
xchg
cmp
inc
jns
nop
and
andb
pop
in
pop
leave
inc
mov
rcll
mov
outsb
out
stc
inc
cld
fcoms
adc
xchg
add
insl
pop
data16
push
jno
notb
add
popa
pop
into
xchg
cld
jae
inc
inc
pop
divl
sub
cmp
call
dec
mov
adcl
rorb
in
sbb
sti
xchg
ret
push
in
lds
sahf
call
iret
aad
or
lret
and
pop
adc
inc
outsb
dec
push
es
and
popf
xchg
cmpsb
sbb
iret
and
xchg
arpl
inc
popa
and
push
iret
cmp
outsb
dec
mov
xor
mov
jne
xor
add
sarb
imulb
cmp
xlat
scas
scas
aad
adc
dec
aaa
ljmp
jmp
lret
sub
je
pop
mov
fsubrs
xor
ja
inc
adc
fdivr
mov
push
adc
mov
stos
adc
repz
dec
cli
inc
ss
mov
das
jne
xor
mov
push
aam
fcoms
mov
cwtl
sbb
mov
dec
addb
xchg
lods
mov
scas
jae
jo
enter
and
dec
outsl
shlb
lcall
add
jl
xchg
dec
inc
int3
sub
out
fs
mov
jae
inc
pop
mov
fisubl
das
jno
jge
scas
push
ficomps
dec
jmp
cmp
mov
in
mov
sbb
and
mov
pop
and
shl
dec
ljmp
push
push
inc
push
mov
mov
or
and
jns
popf
push
vpsubq
clc
sbb
cwtl
nop
mov
inc
rorb
mov
inc
insb
inc
bound
fsqrt
fwait
cmc
loopne
sahf
es
lret
js
psrld
xchg
jne
mov
mov
in
notl
cmp
adc
data16
fldl
mov
hlt
pop
imul
movsl
call
jne
jg
icebp
popf
out
push
ds
cs
rcl
xor
test
aad
inc
leave
loopne
fimull
aad
dec
lret
pop
jo
push
cpuid
cs
bound
add
fmuls
lcall
into
push
sbb
into
loop
stos
adc
jge
xchg
pop
mov
and
sbb
cmp
cwtl
out
xor
fildll
dec
or
lret
pop
jmp
dec
ja
inc
pop
cmp
imul
sbb
mov
aaa
mov
mov
aam
fildl
sub
mov
in
pop
daa
jns
inc
and
sahf
xor
adc
jmp
enter
lods
mov
loopne
test
inc
sbb
sub
rclb
dec
movsl
lods
xchg
mov
cs
jecxz
mov
cs
and
sbb
or
xor
cmp
sbb
ror
bound
movsw
xlat
and
xchg
xabort
imul
push
mov
lea
pop
aaa
aaa
xchg
jge
lahf
or
dec
inc
push
jmp
leave
sbb
testl
cmp
sub
stc
add
aas
adc
das
test
scas
cmp
sub
mov
cmpsb
out
sti
mov
or
sub
fnsetpm(287
jae
std
mov
jbe
insl
sahf
lret
add
or
loope
fwait
movntq
out
adc
inc
clc
dec
ret
mov
lea
leave
mov
int
pop
or
inc
xor
imul
cmc
inc
or
adc
rcll
repnz
adc
add
dec
aas
outsb
xchg
push
xchg
jmp
push
or
pop
jnp
dec
mov
hlt
or
in
xchg
aad
add
jge
outsb
cmp
push
stc
mov
sbb
jne
loop
mov
imul
jge
sub
cmp
pop
nop
adc
aas
pop
js
js
add
es
pop
sahf
xor
jbe
fldenv
popf
call
dec
and
pushf
add
jle
leave
popa
dec
fidivs
and
cmpsb
ja
adc
and
lcall
mov
dec
outsb
jns
mov
nop
add
dec
cmp
sahf
xor
mov
out
mov
cmp
inc
jge
or
adc
cmpsl
cmc
and
fstpt
das
stc
mov
in
shll
mov
lock
add
push
push
bound
cmp
mov
sbb
ljmp
idivl
xor
loopne
loope
sbb
loop
fildll
push
sbb
aad
shlb
mov
sub
inc
clc
pushf
mov
push
cmpsb
cmc
xchg
fisttpl
fimull
inc
popf
mov
inc
push
daa
dec
into
movsb
push
out
outsb
bound
mov
iret
fdivrs
or
mov
andl
aaa
mov
fwait
inc
enter
dec
stc
lret
int
jae
fistps
and
cmpxchg
incb
jp
mov
in
xor
or
add
dec
out
aad
fisubrl
aas
das
out
xchg
je
lret
mov
pop
and
pop
lea
add
mov
ret
inc
mov
fwait
jns
xchg
addr16
cmp
adc
add
push
jb
out
movsb
inc
test
cmpsl
jmp
cmp
fcomps
inc
or
jmp
sub
jle
lods
and
xchg
ljmp
jno
cwtd
fwait
pop
add
fwait
sub
out
loop
aam
orl
loopne
jne
out
cmp
mov
aas
dec
std
les
loop
xchg
fdivp
xchg
je
xchg
and
push
mov
outsb
pop
mov
mov
jne
xor
mov
andb
sar
ljmp
add
add
push
testb
and
imull
or
lds
cmp
outsl
jbe
inc
clc
sub
cwtl
jo
stos
mov
push
push
orb
jns
insl
into
xor
shlb
movsb
fnstenv
test
push
mov
mov
push
hlt
jns
daa
aaa
je
cmpsb
jns
cmc
test
stc
orl
repz
aam
ds
js
lcall
into
aad
and
pop
push
jle
stc
popf
dec
pop
adc
lahf
jne
in
imul
cli
sbb
in
mov
nop
out
shr
data16
in
mov
loopne
jmp
xchg
push
push
mov
or
movsl
xor
jno
push
sbb
mov
cmp
mov
loop
rcll
xlat
stos
pop
int
cltd
enter
ret
pusha
les
xchg
shrb
ljmp
aad
pop
jns
mov
test
ficompl
icebp
xchg
fadds
jmp
divl
xchg
lahf
push
je
xlat
dec
cmp
mov
psubusb
xchg
test
fcomps
pop
mov
movl
out
jnp
or
pop
icebp
enter
popa
test
mov
sbb
fldcw
push
or
sub
cmp
and
add
adc
pop
inc
jns
test
push
shll
pop
shr
xchg
scas
out
pop
testl
and
jmp
jne
jo
inc
rcr
andl
or
fldcw
call
fldcw
add
mov
popa
push
imull
mov
clc
pop
jmp
insb
dec
dec
mov
rolb
sub
add
lods
mov
stos
jle
and
cmpsl
adc
fcmovb
sbb
xchg
push
movsl
ljmp
push
movsb
js
sub
shlb
cmp
jge
repz
lahf
mov
and
scas
and
aam
push
adc
xlat
mov
pop
int
test
push
dec
imul
sub
repz
pop
fmuls
shll
in
in
out
jb
shrl
and
mov
aam
adc
sub
ljmp
dec
sub
or
mov
jmp
mov
lret
sarb
scas
and
dec
cmp
sub
sahf
stc
aaa
pop
pop
mov
dec
cmp
dec
sbbb
cmpl
in
mov
xchg
push
out
mov
bound
mov
pushf
ljmp
aad
mov
fs
dec
or
dec
pusha
push
dec
cli
jno
lret
stc
leave
test
and
push
aam
scas
dec
stos
pop
or
lds
addr16
test
ret
mov
das
fcmovnbe
cmp
pop
ret
test
fldenv
fstl
movsl
mov
jecxz
adc
js
push
push
pop
push
pop
add
repz
push
lods
and
mov
or
fidivl
xchg
lods
scas
mov
addr16
add
pop
js
push
mov
insb
push
xchg
addr16
push
clc
pop
add
jmp
lret
test
sbb
xor
mov
fldcw
movb
out
pop
dec
scas
cmp
lods
mov
jae
push
jmp
ja
decl
sub
or
test
daa
cmpl
pop
mov
into
mul
int3
pusha
aaa
cmc
mov
inc
rclb
add
jl
popa
mov
dec
punpckhbw
xor
add
sbb
clc
das
sar
xchg
flds
cltd
jmp
or
mov
adc
add
out
xchg
and
fs
sbb
pop
sbb
cmp
cmp
cltd
in
xchg
mov
lahf
aas
xchg
negb
and
ja
push
push
push
or
lock
cli
jl
xlat
fincstp
rcr
icebp
stc
sbbl
and
imul
push
pop
imul
test
in
arpl
movsl
pop
pop
mov
out
ret
push
mov
sbb
rcrb
insb
call
xchg
sub
nop
pop
and
sub
fisubrl
jo
add
leave
cwtl
and
adc
les
or
xchg
aaa
mov
fsts
int3
insb
ret
xchg
dec
sbb
fsubrp
js
js
add
push
dec
pop
cmpsl
outsl
cmpl
js
xchg
in
pushf
cmp
pop
add
mov
dec
loopne
jge
test
mov
gs
arpl
add
inc
icebp
loop
lcall
cli
hlt
movsl
cmc
ret
pop
xor
push
loope
loop
mov
or
jo
mov
mov
stos
data16
sub
push
popa
add
je
xchg
imul
mov
aam
inc
stc
in
and
repz
mov
cld
and
bound
ret
push
cwtl
int3
push
mov
adc
rcrb
mov
xchg
lods
inc
mov
sti
push
add
add
push
xor
or
sub
cmp
lret
repz
das
add
repz
inc
cmp
push
inc
pop
loopne
repnz
lds
jo
xchg
in
add
dec
rorl
stos
pop
adc
insb
int3
test
in
outsb
xchg
mov
jp
cmp
lcall
push
dec
lret
jno
cmp
inc
push
add
adc
cmpsl
or
add
mov
fisubs
xlat
xchg
inc
xchg
js
sub
push
cmp
adc
sbb
shll
jle
jp
frstor
and
pop
pushf
hlt
sti
mov
out
adc
arpl
dec
lret
mov
jno
hlt
outsl
or
ja
lds
outsl
loope
mov
push
movsl
je
test
cwtl
cmp
mov
sti
add
cld
push
clc
inc
in
js
xchg
les
push
out
jne
push
sub
scas
test
sub
fdivrs
xor
test
mov
inc
into
jnp
movsl
in
xchg
lahf
aam
add
mov
jbe
repz
push
add
xchg
dec
ja
or
dec
push
inc
mov
inc
ror
xlat
lods
jg
mov
jmp
mov
out
mov
popf
xor
mov
das
cmp
mov
xor
cmp
mov
inc
call
push
or
inc
sub
clflush
ja
sbb
fwait
nop
lea
adc
fisubl
fmull
enter
jl
je
lret
dec
lcall
cmp
in
cmpsb
push
xor
pusha
xchg
movsl
xchg
xchg
pop
jmp
sbb
and
xchg
adc
popa
pop
scas
arpl
jbe
mov
subl
das
fwait
cmp
stos
add
imul
mov
lret
cmpsl
sbb
scas
mov
arpl
cmovno
mov
dec
pop
inc
jecxz
pusha
inc
outsb
xor
mov
mov
test
scas
adc
add
mov
push
and
orl
pop
inc
std
movsb
jge
stos
subl
rclb
test
cmp
jg
faddl
mov
rolb
in
fcomip
xor
std
lahf
pushf
ljmp
into
xor
int
xor
mov
shl
cmp
lock
sub
daa
ror
icebp
sti
outsb
out
and
sti
sbb
nop
in
xchg
rcr
popa
orb
dec
mov
jns
mov
or
add
add
inc
dec
mov
movl
mov
add
cmp
scas
outsl
cmp
jg
pop
es
int3
add
scas
or
jo
lret
mov
adc
jmp
adc
test
insl
test
cmp
sub
insl
mov
in
lret
add
push
push
jmp
sub
push
sbb
faddp
sub
outsb
hlt
xchg
lret
sbb
out
test
int
fisttpl
xchg
mov
call
adc
mov
and
push
lcall
add
xor
sub
nop
addb
jmp
outsb
cli
adc
in
lods
pop
mov
fiadds
aam
sbb
dec
lods
insb
sub
rcll
xchg
adc
es
imul
dec
xchg
xchg
shlb
ljmp
repz
notl
fdivs
rol
mov
out
inc
sub
dec
nop
sub
push
repnz
sub
xchg
or
add
push
sbb
jmp
push
ljmp
dec
nop
pop
jmp
fcmovnbe
or
or
leave
xchg
shr
adc
mov
loope
js
adc
test
popf
add
sahf
in
stc
out
cmpb
int
int3
xor
or
mov
mov
push
test
cld
pusha
test
xor
jb
push
mov
fcmovu
movhlps
push
jbe
push
jb
xor
sub
mov
mov
jno
xchg
repz
enter
inc
das
cmp
jl
cltd
ds
xchg
fisubs
xchg
in
adc
faddl
dec
fcoml
leave
aaa
push
adc
inc
jl
xor
cmc
repz
bound
or
in
xor
dec
aaa
rclb
xchg
mov
test
add
push
xchg
out
cmp
mov
daa
cmp
lcall
nop
add
popa
sub
xchg
mov
jno
addr16
enter
xchg
inc
mov
xor
pusha
scas
scas
leave
loope
ljmp
enter
mov
int3
mov
sti
or
pushf
outsl
adc
ljmp
fcmovnb
jbe
ds
push
ficomps
and
adc
cmc
iret
pushf
arpl
jmp
inc
in
cli
and
sub
mov
test
mov
test
cmp
inc
clc
xchg
sti
mov
inc
pop
dec
mov
stos
mov
cmpsl
mov
lods
lret
jge
jmp
es
scas
int
lret
sbb
dec
lret
add
addr16
iret
sub
fstp
mov
int3
jbe
cmp
sub
xor
aad
adc
push
fsubs
lahf
insb
adc
insb
and
sbb
push
aaa
std
dec
mov
inc
aam
push
inc
mov
pop
xchg
mulb
xor
gs
sbb
stos
jecxz
push
xchg
mov
popf
arpl
xor
xorl
or
pop
pop
pop
nop
rorl
insl
add
cmc
and
sar
adc
fstpl
aad
in
inc
jmp
xor
setp
movsb
leave
cs
fmul
gs
mov
jns
lahf
cmp
mov
addr16
test
sbb
mov
push
push
dec
pop
fmull
push
xor
int
dec
lret
and
push
pop
inc
notb
lcall
fnstcw
sbb
xchg
add
inc
mov
jmp
cmp
jg
mov
jae
pushf
call
adc
cmpsl
mov
scas
je
inc
mov
push
and
loop
test
pop
rorb
mov
rorl
arpl
mov
dec
lret
adc
xchg
movsb
pop
xor
cmpsb
adc
mov
push
mov
jno
add
ret
or
push
adc
leave
mov
dec
ds
jnp
lock
in
loope
stos
xchg
ljmp
shlb
repz
ret
mov
xchg
fstl
mov
out
push
pop
fcompl
cmp
jne
std
push
data16
cmp
cmp
mov
jp
pop
or
mov
cmp
lret
mov
mov
repz
add
ret
lods
popf
inc
das
fbstp
push
xchg
jne
ror
lods
jl
mov
mov
imul
xchg
loop
cld
fstpl
popa
insl
add
rcl
je
xchg
mov
fbld
jns
mov
add
lea
push
xchg
and
pop
and
xor
lahf
mov
or
in
int
mov
shrl
pop
adc
jae
xchg
daa
mov
outsl
mov
sub
enter
xchg
je
in
out
rcll
mov
push
shll
adc
ljmp
stos
push
lods
push
fwait
test
hlt
inc
repnz
inc
push
sti
shl
aad
push
and
sbb
scas
out
mov
pusha
aaa
lea
inc
jb
in
inc
mov
pop
sbb
and
ljmp
xchg
clc
sahf
js
inc
ss
xchg
fdivrs
fbld
in
push
inc
pushf
pop
cmc
xchg
xchg
xor
and
aam
out
fwait
incb
pop
push
fisttps
adc
mov
imulb
js
mov
adc
adc
or
in
clc
mov
pop
pop
mov
sub
cmp
decb
es
clc
xor
and
push
jbe
test
mov
lahf
push
xor
sar
ret
icebp
adc
cltd
jl
stos
ss
mov
adc
cs
xor
xrelease
dec
xorl
les
adc
add
dec
or
pop
inc
std
sub
dec
cwtl
and
jne
out
mov
adc
fstl
add
mov
jle
shll
pop
or
movsb
adc
hlt
or
lea
mov
xchg
in
les
aas
addr16
cmc
adc
mov
enter
jnp
addr16
sti
and
add
data16
mov
cld
cmpsl
xchg
orl
push
push
jl
outsl
mov
push
adc
mov
sub
cs
addr16
les
dec
push
sbbb
cmpps
jecxz
pop
nop
dec
mov
int
dec
xor
or
and
fidivl
ja
dec
jnp
scas
jne
or
data16
pop
ret
cld
mov
jcxz
mov
mov
repnz
imul
sbb
cmp
shl
rolb
pop
and
xor
xor
sub
fidivl
stos
imul
push
in
mov
and
fistpl
and
dec
dec
or
hlt
inc
jbe
xor
mov
xlat
fstl
sahf
decb
mull
lcall
loope
dec
add
lds
hlt
in
aas
cmp
add
adc
and
fisubs
cmp
jno
out
adc
rorl
iret
mov
jae
push
subl
fnstsw
and
jns
inc
mov
cmp
xchg
xorl
jle
jns
push
fnstenv
lahf
sub
cmp
cmc
jno
xchg
xor
mov
jns
repz
mov
push
mov
pop
movl
mov
rcll
hlt
call
stos
jp
test
test
and
and
popa
cmp
sbb
std
pop
out
cmp
mov
repz
lret
hlt
xchg
lods
and
push
bnd
xchg
sahf
test
adc
fs
popa
cmpsb
dec
dec
pop
les
rcll
jmp
ret
sub
mov
xor
movsb
lret
testb
sbb
xchg
js
mov
psllw
inc
int3
mov
inc
xlat
jns
test
or
push
adc
pop
in
sbb
sbbb
adc
out
cmp
dec
mov
mov
mov
scas
ja
ljmp
in
or
in
jle
sti
shlb
lds
int3
push
je
mov
ret
or
pop
repnz
dec
adc
mov
mov
aad
mov
and
cmp
jno
sbb
hlt
daa
push
push
pusha
push
fadds
mov
lds
scas
mov
cmpsl
push
and
pop
lret
cmpb
mov
push
ja
mov
popa
gs
shrl
mov
fwait
loopne,pt
mov
lahf
mov
imul
mov
hlt
and
stc
add
jb
mov
int3
adc
push
add
sahf
scas
pusha
push
mov
dec
dec
jge
pop
inc
adc
sbb
cmp
adc
fmuls
xor
pop
lods
mov
gs
mov
testl
bound
popa
add
into
cmp
aad
js
popf
pop
int3
or
and
lret
leave
jge
pop
out
out
ja
and
mov
outsl
sub
cmp
into
adc
fdivl
adc
dec
add
adc
add
lods
inc
lods
pop
pop
inc
add
adc
mov
test
int
imul
sbb
xor
mov
add
addr16
sbb
orl
sub
jp
inc
xchg
imul
je
mov
push
sbb
dec
mov
mov
mov
mov
xchg
jb
popa
mov
push
shl
dec
aas
dec
mov
cltd
xchg
xor
adc
aas
inc
aam
xchg
xor
test
cs
lret
sahf
jecxz
ja
adc
or
push
mov
adc
mov
mov
jb
fiadds
hlt
fldl
in
dec
pop
mov
lret
sahf
dec
icebp
test
adc
out
cltd
dec
iret
nop
scas
scas
and
sbbl
xchg
push
rcrb
test
mov
and
frstor
mov
movsl
jmp
adc
dec
push
jbe
push
fisubrl
xchg
push
out
imul
lcall
push
add
lods
mov
enter
lock
scas
js
mov
sbb
and
pop
int3
fisttpll
fistpl
std
sub
aas
ret
jno
pop
jo
add
das
out
test
in
std
or
xchg
js
jmp
imull
in
and
pop
mov
dec
lcall
jae
adc
rorb
pop
fwait
jp
int3
sub
pop
cmpsb
sub
jns
aad
fsubs
push
and
and
popa
jle
in
loopne
cmp
fstps
insb
push
decl
add
or
out
stos
inc
cmp
mov
sub
sar
inc
sarb
push
mov
imul
icebp
sarb
out
lock
inc
jg
scas
sti
scas
int
inc
dec
or
cmp
orl
in
jnp
dec
mov
cmp
xor
aaa
cmp
dec
sbb
outsl
mov
mov
outsb
push
inc
xor
repz
xchg
push
adc
ficomps
loop
jecxz
xor
xor
fsubl
das
jo
push
jp
mov
pop
sbb
jp
andl
fnstenv
add
inc
jne
enter
es
xor
sub
push
jl
jae
dec
andl
packsswb
dec
or
icebp
xchg
rcrl
jns
mov
mov
lcall
mov
pop
arpl
aas
mov
xlat
popf
cli
cmp
std
daa
dec
repz
es
fwait
repz
dec
push
add
adc
pop
jmp
jg
ret
and
mov
xchg
dec
and
jp
pop
lret
js
stc
push
mov
cmpsb
in
xchg
lds
adc
jns
adc
cmpsl
popf
rcll
mov
addl
pushf
repnz
sbb
sub
jno
imul
push
push
leave
xlat
mov
add
clc
xor
pushf
mov
imul
bound
mov
xchg
outsl
rolb
fs
inc
lret
adc
in
mov
fst
jge
push
jmp
xchg
fiadds
adc
push
scas
negl
mov
sub
lcall
ret
inc
hlt
shlb
mov
lods
add
lock
das
jo
ja
out
and
adc
xchg
cmp
push
jle
push
add
ja
pop
push
dec
mov
outsl
jne
adc
outsb
in
stos
jl
mov
add
push
and
xor
test
shr
mov
mov
ds
sub
add
cmp
mov
insl
or
scas
fisubrs
adc
and
push
repnz
jp
adc
add
out
xchg
aad
or
cmp
insl
add
mov
jbe
add
adc
dec
orb
adc
inc
divl
and
testl
add
rcrl
ja
daa
negl
mov
daa
stos
xchg
mov
add
sub
das
inc
fsubs
ficompl
in
push
adc
jnp
fildl
xchg
in
mov
lea
call
sbb
ds
pop
aad
out
imul
sahf
aas
add
or
jle
jp
inc
stos
outsl
outsl
imul
pop
inc
iret
adc
xor
add
xor
addr16
add
lods
test
cmp
sub
inc
fst
in
loope
xchg
jge
insb
int3
pop
xchg
sarb
or
push
clc
jbe
cmp
push
test
xor
xchg
pop
mov
add
sbb
or
and
ficoms
pop
data16
adc
sbb
pusha
mov
pop
das
out
adc
dec
sbb
cmp
das
mov
popf
xchg
bound
insb
jg
aam
push
and
cmpsl
sbb
mov
mov
sub
mov
lds
adc
mov
fsub
sti
xchg
cmp
add
or
adc
hlt
sarb
sbb
mov
pop
jge
adc
jp
test
push
cmp
pop
sarb
lcall
sbbl
fs
enter
int3
and
cmp
clc
push
mov
lods
xchg
cmp
fimull
dec
nop
sti
shll
sbb
cmp
inc
insl
mov
out
mov
test
xchg
lahf
je
rclb
pop
cltd
cmc
inc
ret
or
push
loopne
fcoms
in
stc
cmc
jb
pushf
pop
out
dec
repz
cli
ficoml
mov
in
mov
and
icebp
xorl
lcall
cmpsb
mov
std
or
andb
fsubp
divl
daa
xchg
push
daa
inc
dec
mov
shrl
test
mov
cmp
nop
dec
xchg
adc
push
mov
pop
xchg
scas
mov
push
adc
mov
pusha
sbb
mov
and
in
sahf
fwait
popa
mov
dec
les
sub
sbbl
xchg
add
out
jae
int
pop
sub
and
xor
push
lcall
fmuls
inc
and
rcll
pop
in
inc
incl
xor
or
aad
cmp
add
mov
mov
pop
popa
iret
imul
mov
push
popf
sub
mov
es
shlb
sahf
mov
adc
roll
fidivs
pusha
pop
testl
add
push
adc
shll
cld
mov
filds
popa
mov
clc
pop
push
loop
xchg
jbe
pop
cmpsb
xlat
cmc
mov
nop
mov
hlt
iret
rorl
mov
dec
ret
aas
push
fmull
add
enter
mov
push
and
adc
and
ret
cmp
or
out
adc
in
pop
sub
jno
int
lahf
in
cld
aas
shl
inc
subl
stos
loop
or
out
dec
movl
pop
cmp
cli
xchg
call
inc
das
and
jno
push
adc
mov
imul
jbe
aas
mov
ret
pop
std
mov
fwait
adc
cs
dec
or
pop
cli
insl
sahf
hlt
push
pop
lahf
or
mov
imul
pusha
mov
popa
push
cld
ss
and
repnz
in
leave
xor
sbb
sbb
dec
mov
xchg
cmpsl
jbe
sti
sbb
mov
leave
jbe
mov
sub
sbbb
adc
es
push
xor
sbb
mov
mov
into
stos
push
dec
cmc
and
push
mov
push
mov
or
mov
lea
imul
pop
or
out
jge
jecxz
sub
xchg
mov
shrl
pop
fstl
dec
mov
test
mov
fwait
xlat
hlt
jnp
inc
cli
mov
and
es
push
ljmp
push
jne
fwait
fwait
insl
mov
rolb
fsubs
xchg
adc
dec
icebp
stos
pop
les
xchg
push
in
jle
mov
jns
out
call
cmp
dec
xor
mov
ret
enter
jmp
add
xchg
sbb
sti
mov
push
iret
xchg
adc
outsl
sti
dec
es
imul
ret
jb
jl
mov
push
test
pop
pop
mov
jo
int
dec
cs
or
lcall
aaa
or
cmp
xchg
fwait
stos
sub
jnp
xorb
dec
je
or
sub
std
pop
push
das
mov
imull
xor
sbb
jns
js
add
or
xchg
dec
dec
mov
cmp
xor
pop
adc
add
jo
dec
test
xchg
sub
sub
adc
cmp
mov
mov
stc
fdivs
nop
mov
loopne
nop
jne
mov
mov
cmp
mov
daa
rclb
loop
mov
fcomps
arpl
and
testb
data16
mov
pop
mov
xchg
xor
sbb
aam
pop
aad
mov
std
loope
adc
in
dec
aam
addb
aas
repnz
push
pop
sahf
dec
or
mov
mov
dec
dec
orb
lcall
pop
daa
es
xor
call
pop
inc
inc
or
xchg
push
daa
sub
stos
hlt
mov
xchg
je
adc
pop
mov
popa
inc
mov
push
push
call
ret
xchg
xchg
aam
jne
aaa
es
dec
outsb
dec
lods
aam
stos
inc
pop
sti
insb
stos
in
loope
jl
inc
lcall
hlt
test
xchg
jge
imul
loopne
pop
or
xchg
mov
xchg
inc
adc
or
aad
lret
aam
inc
rol
add
xlat
mov
add
mov
stos
mov
lock
and
push
xor
xchg
clc
jns
pop
inc
ss
and
push
pop
add
xor
outsl
jno
adc
cmp
pop
test
jno,pt
leave
fildl
nop
inc
mov
sub
xchg
addr16
mov
pop
roll
enter
fs
push
es
addr16
dec
dec
jbe
test
jge
sti
push
scas
add
adc
jae
fstl
jecxz
pop
iret
sti
out
xor
lcall
pop
arpl
lods
and
lea
or
sbb
fucom
push
data16
repz
movsb
mov
clc
call
jae
orl
aaa
rcrb
movsl
push
int3
je
pop
pop
mov
pushf
inc
push
orl
push
inc
mov
enter
leave
jp
mov
push
xlat
bound
data16
movsl
scas
rolb
cmp
xor
fptan
cmp
sbb
mov
and
jge
xchg
int3
stos
jp
fwait
lcall
adc
inc
inc
repz
mov
lds
and
inc
lahf
fs
inc
push
in
repz
push
add
xchg
sub
hlt
mov
push
pop
cmp
push
enter
add
mov
test
movb
out
push
decl
shl
xor
mov
mov
movsb
cmp
dec
xchg
cmpl
rcrl
push
repnz
int
stos
xor
xchg
ja
dec
out
stos
inc
mov
add
scas
scas
testb
insb
sar
addr16
xor
push
pop
fistpl
mov
nop
lahf
cli
mov
xor
xor
decl
seto
lcall
pop
sbb
sbb
negb
loopne
icebp
fiadds
ja
int
lea
add
mov
cs
xchg
lds
ds
imul
xor
andl
divb
jg
pop
cs
negb
imul
fstpl
sahf
bound
xor
pop
andl
rcll
xchg
sbb
lret
cmp
jmp
mov
lods
add
scas
test
addr16
adc
icebp
cmc
loopne
stc
ss
out
and
lcall
mov
mov
jl
add
add
push
add
cmp
shrl
dec
push
xchg
mov
outsb
fwait
fwait
rcrb
xor
cmpsb
mov
and
xor
xor
fmull
push
or
cmp
rolb
cmp
rolb
call
sbb
rolb
add
jp
xchg
pop
into
popa
push
cmpsl
sbb
lods
sbb
cmp
xchg
and
jbe
test
inc
gs
inc
fidivrs
sub
push
jne
sub
popl
lock
sub
xchg
mov
mov
fs
imul
pop
jno
call
leave
mov
mov
adc
xlat
add
scas
fmulp
popa
addl
xor
in
ss
fimull
scas
xchg
jg
test
sub
mov
inc
mov
fisubs
sahf
lods
out
fsubs
in
js
inc
out
or
js
cmp
adc
push
movsl
out
aas
mov
add
xchg
rcll
inc
mov
pop
ret
repnz
lcall
es
or
sbb
cwtl
ret
test
sub
in
mov
mov
movsb
pop
cmc
nop
test
pushf
jge
inc
insl
das
inc
xor
imulb
mov
scas
jb
repnz
or
adc
repnz
pop
push
sbbl
pop
mov
pop
into
arpl
xchg
mov
xor
mov
xchg
sbbl
lock
fcomp
push
mov
stos
sub
push
fwait
mov
loop
push
mov
xor
push
jnp
mov
cli
add
shll
xchg
inc
fisubrl
lods
or
subb
adc
mov
enter
xchg
fwait
cmc
clc
movsl
dec
js
scas
xchg
fsubrp
mov
cld
scas
ja
jle
daa
push
push
add
cmp
lret
push
mov
in
arpl
push
sbb
imul
cwtl
cmpsb
cmp
push
ret
mov
xor
mov
add
negb
adc
out
and
cwtl
pop
dec
jb
jno
inc
loopne
adc
sub
mov
repnz
addr16
jno
clc
pop
repz
add
ljmp
mov
aas
pop
lock
xchg
push
aaa
add
lahf
sti
xchg
xchg
outsb
mov
popf
es
add
outsb
add
lock
test
or
outsb
mov
scas
adc
mov
push
push
mov
fst
mov
push
sub
pop
mov
mov
pop
mov
cmc
std
mov
jmp
mov
cmc
ret
sub
mov
sub
lahf
movsl
fcompl
test
inc
sub
push
jae
pop
ja
add
data16
and
xor
and
sbb
out
gs
sub
mov
lods
shlb
or
dec
arpl
ss
xchg
repnz
aas
mov
jmp
sbb
sahf
and
mov
xor
nop
or
stc
out
mov
fnstenv
loope
dec
xchg
aad
jb
imul
xor
cmp
sub
stos
mov
xchg
push
sub
mov
add
daa
jnp
mov
mov
call
mov
xor
mov
xchg
aas
mov
add
inc
daa
jg
cwtl
and
mov
cs
int3
out
loop
call
mov
add
sub
and
sub
sub
dec
cltd
and
xchg
sarb
cmp
and
fs
add
fucom
cmp
and
lahf
stc
add
ljmp
in
pop
jb
adc
icebp
in
sub
jae
in
cli
cmp
sub
insl
test
pop
jge
rorw
dec
stos
outsl
jne
jnp
push
pop
imul
xor
test
xor
stc
push
out
sahf
fnsave
movsl
stos
inc
sbb
jp
cwtl
movsl
pop
mov
mov
test
out
xchg
mov
fadds
mov
push
imul
inc
decl
out
addr16
out
insl
in
mov
aas
inc
pusha
and
and
dec
xlat
ja
js
ss
jge
clc
les
inc
leave
xchg
xchg
xchg
pop
jg
insb
and
mov
lods
mov
mov
sub
jbe
pop
or
cmp
and
xchg
int3
lret
lock
pushf
mov
arpl
imul
adc
mov
cs
mov
adc
out
loope
jne
mov
xor
dec
stos
xor
stos
insl
js
shrl
insb
mov
mov
orl
inc
xchg
dec
pushl
lods
lret
add
or
mov
add
inc
jne
xchg
lds
sarl
mov
outsb
out
les
add
lods
repnz
mov
or
inc
in
iret
loope
adc
test
jbe
add
adc
lods
mov
int
cmp
adc
or
cmp
mov
sub
sub
mov
adc
jns
pop
push
test
data16
sahf
cmp
prefetch
or
push
sarl
loope
test
xor
pop
adcb
data16
aad
int3
jp
sbb
mov
mov
pop
cmp
shlb
jae
sbb
fbstp
xor
jl
sbb
fsubrs
fsubs
imul
xor
stos
cmp
out
imul
scas
dec
jae
es
mov
lcall
dec
ja
jecxz
cwtl
or
leave
cli
pop
test
xor
negb
mov
enter
in
or
je
sarl
pop
cmp
shll
mov
je
fwait
orl
popa
cmp
out
pop
mov
jae
inc
cmp
mov
or
xlat
in
mov
lea
in
dec
push
into
pop
add
cs
xchg
jne
adc
imulb
pop
mov
in
std
pop
lods
jecxz
cmc
aad
cmp
pop
or
je
ds
pop
xchg
dec
dec
imul
shll
xchg
fcoms
clc
dec
dec
out
adc
cld
mov
mov
ror
fstl
fadds
mov
fs
xor
movsl
test
adc
les
pop
mov
mov
xchg
mov
pop
lds
xor
jg
cmc
inc
loop
dec
lea
add
inc
aad
test
mov
mov
into
in
arpl
jne
sub
mov
rorb
in
insb
push
sarl
pop
sbb
shrl
cmpsb
mov
fsts
leave
push
sti
mov
jp
stos
mov
dec
push
insl
into
dec
dec
pop
xchg
fs
pushf
mov
loope
mov
lret
lods
loope
dec
ja
jb
mov
nop
outsl
inc
repz
movsl
push
arpl
rclb
mov
lcall
cmp
jns
push
mov
lcall
cmpsl
dec
sub
pop
outsl
lcall
fwait
cld
scas
push
int
cmp
sub
jnp
loopne
pop
stos
dec
call
loop
pop
out
inc
loopne
mov
fmull
inc
fsub
dec
xchg
inc
jnp
jae
daa
and
cmpsb
aas
rcl
mov
mov
or
insl
jp
pop
lock
ret
shr
aaa
push
mov
adc
lret
shrb
mov
and
pop
bound
arpl
inc
stc
lock
and
fisubrl
cmp
hlt
clc
xchg
outsl
cmp
mov
xorb
fbld
ret
arpl
cwtl
mulb
push
push
mov
cli
mov
inc
jno
cmp
pop
movntq
out
loope
push
add
rorb
jmp
pop
fwait
ror
aam
cli
test
sbb
dec
sbb
xchg
inc
int
lods
add
push
mov
lahf
jle
cmp
add
adc
jl
mov
cmp
call
shlb
rcr
fs
jg
out
in
mov
jecxz
fists
push
adc
xchg
sbb
sub
fldcw
mov
pavgb
je
cld
mov
pop
fcmovbe
jne
shlb
es
ljmp
hlt
in
pop
mov
push
cld
mov
or
jle
or
aas
jb
sbb
mov
fdivrs
rcr
movb
and
sub
jne
out
pop
ret
rclb
test
stc
outsb
icebp
jo
bt
pop
inc
movsb
mov
clc
jns
adc
mov
sbb
or
xlat
mov
aaa
gs
bound
add
ret
cmp
jg
sub
xchg
and
es
push
mov
pusha
add
dec
roll
imul
mov
or
xor
stc
dec
aas
scas
add
jns
into
frstor
arpl
inc
mov
inc
icebp
xor
rol
les
xor
mov
out
lock
jbe
push
pop
jns
daa
mov
pusha
sbb
dec
or
jb
push
fisubrs
or
dec
dec
icebp
nop
and
das
rcl
imul
sbb
lahf
mov
enter
xchg
outsl
cltd
pusha
fwait
popf
ret
pop
repz
adcb
insb
sub
imul
sub
pop
inc
cmp
adc
or
fisubrs
in
xor
and
in
js
inc
mov
jae
xor
mov
pusha
push
nop
call
out
cwtl
inc
lods
ljmp
nop
shlb
pop
xor
pop
pop
dec
xor
into
pop
sbb
gs
jne
les
loopne
jp
add
orl
xchg
dec
test
dec
xchg
pushl
ss
xor
xchg
das
stos
pop
xor
lahf
xchg
ljmp
arpl
decb
xchg
cltd
stc
jle
cmc
ja
pop
fwait
inc
jmp
push
push
pop
push
mov
out
or
jb
fcom
movsl
shr
pop
cmc
pop
sti
dec
and
ret
insl
cmpsb
nop
pop
adc
popa
rcl
out
xlat
jbe
int3
aas
mov
mov
stos
xchg
inc
or
rcr
add
xchg
xor
loopne
out
adc
adc
cmp
cwtl
cli
cltd
stos
sbb
mov
cmc
in
xchg
mov
movsb
int3
sbb
xchg
add
mov
add
scas
repnz
jnp
sbb
and
jmp
mov
push
dec
jns
mov
and
sub
call
fdivrs
add
sbb
decb
ljmp
stos
fsubrp
lods
fwait
cmp
ror
test
xlat
jp
mov
and
or
cltd
fs
jbe
adcl
dec
js
into
dec
call
pop
mov
pop
mov
mov
stos
fldenv
xchg
lods
add
sbb
add
andb
jmp
leave
pop
lret
loopne
dec
xchg
mov
sbb
push
xchg
out
arpl
add
xor
cs
pop
pop
pop
adc
jge
sub
lock
cmp
out
inc
jbe
lods
lcall
je
push
test
aad
dec
mov
mov
addb
jb
mov
push
ljmp
push
insl
int3
loop
or
int3
push
lret
outsl
je
push
sbb
sub
jp
pushf
fwait
cmpb
pop
pxor
dec
dec
jg
push
out
add
ds
cmc
scas
jmp
fcmovb
lahf
repnz
rolb
mov
ja
std
adc
push
mov
sbb
push
pop
and
es
xchg
mov
and
mov
dec
and
jbe
jo
mov
mov
xor
xchg
pushf
stos
outsb
or
outsl
data16
and
mov
push
adc
mov
fstpt
xchg
push
ficoms
pop
add
out
mov
andl
sub
mov
out
fistpl
out
idivl
dec
push
mov
jbe
enter
fsub
data16
and
xor
xor
sbb
shll
mov
jl
sbbb
lea
ss
xchg
push
xchg
scas
xlat
bound
test
sub
fldt
mov
lock
mov
and
xchg
bound
pop
out
sahf
loope
jo
dec
mov
rcll
sti
dec
push
mov
adc
sub
out
not
sti
sarl
mov
in
ljmp
mov
repnz
movsl
in
loopne
xor
add
insb
sahf
sub
leave
mov
test
clc
add
ret
xchg
fdivl
cmpsl
lret
push
cli
jmp
jmp
mov
pop
xlat
or
inc
not
xchg
aas
int3
xchg
roll
cltd
inc
in
inc
fstl
or
je
cwtl
cld
pusha
cmpb
mov
dec
pop
addb
jo
mov
daa
and
push
pushf
rorl
push
mov
mov
pavgw
gs
aaa
icebp
jmp
scas
movsl
inc
leave
xor
mov
insb
insb
adc
fnstcw
inc
fsub
and
jbe
enter
ret
roll
out
jo
push
pop
ret
fsubl
jg
sti
enter
movsl
adcb
subb
test
push
dec
jecxz
lds
ja
xchg
push
popf
jo
jo
jne
sub
lods
sub
sti
push
jle
notl
cmpsl
push
insb
push
mov
mov
es
sbb
adc
jnp
mov
inc
xchg
dec
xor
sbb
popf
in
cmp
mov
adc
ret
addr16
xchg
mov
gs
push
ffree
add
ljmp
push
cmp
and
ret
xor
mov
push
sbb
int
push
xchg
insl
dec
mov
sbb
mov
cld
push
inc
lods
popf
push
lods
ficoms
addr16
pop
ljmp
in
xchg
fisttpll
cmp
sub
popf
push
cwtl
sub
ret
sbb
adc
rclb
sub
sub
das
lods
cwtl
mov
xchg
data16
adc
push
nop
push
repz
mov
ja
jno
inc
outsb
ljmp
pop
push
mov
jp
inc
add
mov
jp
scas
leave
arpl
fs
daa
lods
out
pop
jne
pop
mov
dec
sub
sbb
or
jg
pop
or
test
inc
or
cmp
jmp
into
fidivl
mov
scas
scas
mov
stos
lret
mov
loopne
or
adc
adc
lret
fdivrp
and
jnp
xor
sbb
shlb
adc
pop
mov
add
popf
ljmp
sbb
les
or
mov
cwtl
xor
cmp
jne
movsb
inc
add
xor
fisttpl
inc
test
jp
shl
dec
inc
sahf
mov
lahf
push
les
loop
xor
pop
or
call
mov
pop
test
and
push
push
dec
scas
test
cmp
or
pop
pop
xchg
push
ret
popa
loope
fisttpll
xor
and
inc
xchg
xchg
mov
pop
sub
and
jne
sbb
add
scas
inc
inc
mov
std
or
pop
mov
repnz
or
sbb
dec
das
out
ljmp
daa
lds
mov
js
push
dec
mov
imul
adc
jb
psubq
mov
mov
mov
inc
xor
add
or
imul
inc
jnp
mov
aaa
push
in
adc
rdpmc
dec
cltd
bound
clc
jmp
and
enter
punpcklwd
mov
sbb
cmpl
out
mov
inc
cld
loopne
cmc
pop
or
add
mov
das
ficompl
jle
or
pop
pop
cmp
das
adc
rol
dec
mov
lcall
out
pusha
and
xchg
pop
adc
es
or
or
mov
dec
mov
mov
aam
jo
out
jp
ficoms
stos
add
adc
mov
es
or
inc
mov
lret
dec
push
xchg
inc
xchg
out
inc
adc
mov
incb
cltd
mov
icebp
xchg
add
imul
stos
sarb
bound
shr
jge
mov
jg
int
cmp
sbb
jge
pop
jne
cmpsb
jp
or
lcall
les
lods
adc
sbb
lods
dec
incb
jno
jnp
out
and
movsl
outsl
mov
into
push
dec
icebp
jns
mov
test
and
int3
cmpsl
mov
insb
repz
ret
sbb
mov
stc
lea
mov
xor
imul
pushf
shll
mov
movsb
stos
sbb
jbe
mov
out
push
rolb
cltd
push
cmp
fcoms
test
push
je
and
out
xor
and
bound
pop
cmpsb
xorl
jge
inc
pop
test
adcl
aas
mov
cld
fcompl
sarb
out
mov
insb
jbe
mov
loopne
lahf
test
mov
mov
sub
or
pop
in
fdivp
test
dec
aad
lcall
daa
sbb
data16
lods
ficompl
and
dec
xchg
out
mov
es
ret
dec
xlat
push
sub
ret
stc
and
or
pop
dec
aaa
sar
lock
testb
jmp
jns
mov
in
lods
xor
sub
out
mov
cld
icebp
and
loopne
int3
or
push
cs
mov
push
sub
dec
insb
out
push
aas
icebp
pop
jl
aas
xchg
mov
jle
jp
inc
push
pop
pop
enter
test
lret
dec
into
ret
pop
sbb
xor
sarb
insl
shlb
lds
stc
push
mov
and
lea
push
jnp
into
mov
iret
push
sbb
popa
xchg
clc
pop
xchg
loopne
pop
sub
jo
sar
add
pushf
test
aam
cmc
mov
pop
inc
jge
sbb
cmpsl
mov
or
dec
enter
pop
push
pop
icebp
mov
pop
xor
push
dec
ret
dec
push
shrb
sbb
push
popa
sub
fstl
imul
or
pop
int
mov
jg
mov
xchg
mov
das
or
push
pushf
test
test
iret
or
push
test
mov
or
dec
ja
lcall
sbb
jl
fisubs
push
mov
rcrb
inc
mov
out
fmuls
sbb
mov
inc
mov
clc
loope
clc
into
dec
cmp
js
fsubrs
addr16
lret
or
jbe,pt
inc
mov
mov
mov
sub
bnd
mov
test
enter
mov
inc
sahf
dec
test
inc
dec
das
push
gs
xor
push
mov
insl
jp
cmp
stc
xor
decb
subb
sbb
mulb
call
mov
in
sbb
add
jns
rcll
mov
lcall
movsl
adc
add
push
xchg
push
in
test
dec
inc
xor
adc
popf
xor
push
xor
lret
adc
inc
push
movsb
cmp
xor
div
ljmp
push
and
pop
adc
out
xchg
movsl
xchg
inc
adc
divl
in
sbb
and
lea
mov
and
inc
sub
sub
jns
or
jns
mov
sbbb
loopne
mov
add
cmpsl
push
out
jb
lds
sub
sar
sbb
mov
jae
jle
in
incb
add
xchg
cli
dec
lcall
fstpl
jp
xchg
leave
and
pop
fsub
out
sbb
dec
push
jge
xor
xchg
mov
dec
dec
mov
xor
sub
cld
sbb
movsb
adc
ret
in
ret
inc
cltd
fadds
daa
sbb
lret
enter
cmp
lret
jge
fidivrs
or
sbb
test
in
sti
push
mov
shlb
in
ss
xor
add
icebp
icebp
orl
mov
cmp
xchg
mov
and
stos
cld
js
hlt
jno
lahf
cwtl
nop
adc
jns
jle
shrl
sti
jo
sub
lods
movsl
fimull
jnp
push
test
push
sub
and
jg
mov
fstp
rcr
xor
jle
or
ret
mov
mov
mov
je
lret
add
rorl
leave
into
inc
dec
sbb
stc
loopne
int3
xchg
pop
or
inc
clc
cmpsl
push
jbe
dec
das
scas
frstor
sbb
call
loopne
sbb
jbe
imul
in
pop
arpl
mov
xchg
test
jns
dec
push
nop
fdivr
push
inc
pop
lock
mov
mov
shl
pop
xchg
pop
add
sub
into
jns
and
rcl
stc
xlat
dec
adcl
sahf
mov
jmp
in
shlb
sbb
sahf
push
and
add
std
loopne
sub
lea
mov
push
cmc
or
in
movsl
jns
mov
in
mov
imul
jo
sbb
or
jae
scas
xor
adc
out
xchg
out
cli
jbe
sub
fdivs
cmp
mov
adc
mov
dec
test
das
dec
cmp
dec
les
sbb
dec
les
add
mov
inc
fdivr
pop
inc
push
cmp
stos
pop
adc
pop
test
jbe
mov
pusha
pop
test
out
fwait
mov
push
pop
xor
ljmp
lahf
xchg
xor
push
xchg
xchg
mov
mov
xor
jmp
cmp
popa
shlb
pop
aas
je
xchg
jge
mov
filds
out
jle
jmp
out
std
pop
int
mov
test
mov
mov
leave
mov
or
aam
subb
jns
stos
fisubs
cmp
rcrl
and
xor
inc
add
jl
std
sub
scas
and
dec
sbb
pop
inc
loope
pop
lock
pusha
hlt
xlat
loop
movsb
mov
fidivs
jnp
popa
lahf
cwtl
dec
or
cmp
add
jmp
subl
or
sbb
dec
lods
divl
jbe
inc
hlt
sbb
cmp
pusha
daa
popa
push
mov
loope
mov
insb
mov
push
sbb
jbe
jp
ss
stc
clc
dec
pusha
pushf
pop
mov
xchg
xchg
ret
inc
sarl
in
test
xchg
and
adc
hlt
push
jge
dec
test
fnstsw
mov
xchg
jecxz
iret
cmpsl
clts
roll
mov
xchg
and
xchg
popa
add
mov
sti
mov
push
jp
push
push
pushf
out
mov
and
push
push
xor
xchg
jecxz
jb
push
push
mov
nop
mov
mov
cmp
loopne
push
or
dec
orb
xor
leave
mov
xchg
mov
sbb
aaa
jge
sub
xor
inc
xchg
lret
pop
int3
int3
fnstcw
repz
mov
adc
sub
outsb
sub
xlat
inc
cmp
sub
xchg
insl
or
xlat
cmpsb
inc
push
jle
fistpll
dec
mov
xchg
dec
movsl
push
mov
sub
adc
lcall
xor
add
push
pusha
dec
loopne
test
into
lea
pop
xor
mov
mov
test
dec
xor
xor
fimull
cltd
outsb
pop
dec
cmpsl
jecxz,pn
std
sub
push
icebp
pushf
test
shl
mov
enter
cs
sbb
jl
call
pop
insb
cmp
push
xchg
lods
or
mov
aas
scas
and
pop
sbb
out
lret
ret
mov
mov
les
mov
outsb
ja
cmpsb
jecxz
movsl
xor
dec
xchg
pusha
jae
movsl
fnstenv
stc
push
imul
jo
dec
sub
pop
and
repz
adc
stc
rorl
mov
jmp
pusha
ja
jp
mov
movsb
sub
int3
xchg
nop
dec
sbb
aas
inc
xchg
into
jle
pop
js
inc
sub
xor
ror
cmp
in
scas
dec
xchg
adc
xor
stos
arpl
lock
scas
mov
sbb
adc
es
lods
sub
and
ret
in
jbe
pop
mov
push
sbb
and
dec
inc
push
jo
lahf
aad
hlt
fmull
inc
xchg
cld
scas
aad
call
pop
insb
cmp
mov
pushf
jl
vphsubwd
mov
sbb
inc
inc
cld
inc
test
addr16
add
add
je
push
or
ja
lds
mov
shrb
adc
adc
popf
outsb
mov
inc
push
outsb
daa
fsin
xchg
ret
scas
add
sbb
fdivrl
sbb
add
mov
ljmp
ss
clc
out
mov
cmpsb
leave
pop
push
pop
sbb
mov
mov
pop
bound
lahf
outsb
lock
fwait
jmp
cmpsl
sub
shlb
ljmp
nop
cmc
out
jne
pop
mov
mull
cmp
fldl
xor
add
out
xchg
inc
out
push
fldl
enter
xchg
fcoms
mov
push
dec
inc
jmp
jnp
fs
inc
xchg
popf
int
jo
out
mov
dec
xchg
dec
mov
cmp
ret
mov
adc
push
xchg
pop
sub
sub
mov
dec
jmp
push
mov
jo
stos
mov
cli
out
loop
popa
scas
call
pop
mov
xchg
xchg
mov
jmp
sub
in
outsb
out
fiadds
scas
xorb
push
nop
shl
pop
imul
and
xchg
movsb
xchg
mov
push
ja
stos
test
or
leave
add
pop
sbbl
xor
sub
cmp
adc
dec
stos
lods
jns
dec
xchg
pop
jno
lahf
jle
lret
mov
insl
stos
inc
popa
push
in
mov
sub
inc
mov
fstpl
sub
cmp
pop
das
lods
jbe
pop
jmp
rolb
jmp
or
bnd
mov
adc
stos
int
push
rol
mov
in
fstpt
inc
fs
ficomps
xchg
repnz
mov
pop
call
xor
fmuls
add
jle
mov
dec
es
jecxz
popf
gs
icebp
lods
fdivs
inc
movsb
cmp
sub
icebp
insb
js
iret
loop
dec
xchg
or
mov
pop
out
dec
ss
mov
inc
mov
xor
push
adc
mov
mov
mov
sahf
imul
sbb
lret
in
clc
mov
xchg
fisubl
sbb
call
idivl
imul
test
mov
dec
sub
hlt
mov
jecxz
or
nop
sti
push
mov
dec
or
push
mov
mov
mov
ja
xor
mov
xor
in
loope
mov
and
mov
ja
sub
popf
mov
pop
xchg
mov
dec
jle
push
cltd
mov
jmp
jbe
xorl
nop
arpl
cli
in
push
into
cltd
cs
addb
mov
dec
push
fimull
adc
xor
inc
aaa
push
mov
sub
pop
adc
adc
popl
js
cmpl
popa
dec
xchg
add
mov
add
sti
add
fsts
arpl
push
jg
push
inc
jmp
daa
insl
lods
mov
pop
fs
mul
scas
lea
fincstp
pop
stos
enter
push
xor
jnp
push
jle
push
ret
scas
movsb
stos
dec
mov
mov
ret
xorb
insb
outsb
sub
fildl
mov
es
into
mov
dec
or
push
fwait
dec
pop
sub
add
fld
lds
div
xchg
pop
cmp
inc
pop
mov
pop
mov
sbb
mov
pop
pop
lods
roll
add
cmp
mov
inc
push
sub
cmc
sarb
adc
pop
rcrb
xchg
rolb
mov
or
push
stc
mov
repnz
mov
addr16
pusha
outsb
adc
or
fdivrl
les
js
jne
ficomps
dec
mov
sub
dec
and
push
ficompl
sub
rorl
and
and
rcrl
js
xchg
stos
xchg
aad
daa
lea
xor
scas
mov
pop
push
pop
mov
and
pop
ljmp
mov
xchg
test
mov
mov
or
iret
pusha
jbe
cmp
pop
leave
divl
test
popf
lcall
mov
gs
mov
ja
mov
xor
inc
sbb
xlat
add
dec
fnstcw
add
dec
mov
ret
repnz
push
xchg
xor
pop
imul
inc
mov
gs
add
sbb
test
adc
pop
sbb
test
or
rcrb
inc
jge
icebp
rcl
jmp
outsb
add
mov
dec
inc
inc
xchg
mov
test
mov
xchg
inc
mov
xor
test
int3
or
or
rcrb
sub
outsb
inc
data16
sbb
repnz
mov
pop
inc
dec
lret
lret
lea
or
xor
hlt
jmp
push
sahf
es
pop
inc
mov
sub
dec
addr16
sahf
stc
mov
scas
or
leave
mov
sbb
cwtl
clc
mov
adc
jnp
addr16
or
outsb
dec
adc
cld
pop
daa
ja
int3
test
test
stos
int
addr16
popf
cmp
adc
outsb
mov
lahf
in
sbb
out
adc
fldt
adc
jo
dec
pop
leave
cmpsb
rclb
nop
push
stos
mov
test
sbb
imul
xchg
mov
jmp
sub
inc
jmp
jbe
scas
stos
fucomp
sbb
inc
scas
je
mov
gs
pop
dec
cli
or
push
cmp
popf
xchg
lods
rorb
icebp
cmpl
jl
add
fs
in
pop
xchg
dec
pop
aas
jp
sub
mov
sub
jecxz
mov
mulb
pop
test
das
jnp
imul
dec
xchg
cmpb
push
jns
test
inc
mov
xchg
pop
xchg
jae
leave
scas
jmp
mov
sbb
rorl
or
adc
pop
in
femms
out
adc
lahf
xchg
mov
ret
or
icebp
sub
icebp
shrl
xor
sarl
mov
hlt
shrb
xchg
push
lea
rcll
mov
or
popf
jp
inc
xor
cltd
lods
test
test
fisttpll
addr16
jecxz
icebp
xor
mov
imul
ud1
je
fidivrs
inc
jg
adc
jb
jns
xor
jb
imul
jne
testb
bound
lods
push
xchg
mov
out
mov
cmp
push
in
mov
and
push
inc
pop
add
adc
jns
lods
lods
ret
pop
xor
sub
add
je
stos
dec
xor
fsubrp
sub
or
push
sbb
ss
inc
and
ds
xchg
fildl
xchg
dec
ja
std
insl
mov
ljmp
gs
sbb
stc
mov
mov
mov
pop
and
icebp
addb
ljmp
xchg
in
inc
sbb
jg
inc
mov
test
or
lea
clc
pop
xchg
mov
push
lock
adc
push
repz
sbbb
int3
mov
cld
push
pusha
pop
sti
push
cmp
outsl
popf
adc
ret
bound
xchg
jns
xor
xchg
mov
in
cmp
mov
inc
popf
sbb
scas
and
movsb
sar
call
cli
lds
mov
mov
sbb
pop
sub
mov
add
or
jl
sub
or
aam
inc
in
cmc
rol
daa
push
mov
movsl
clc
pop
in
sbb
lret
jle
cwtl
scas
inc
sbb
hlt
jns
adc
sub
hlt
sub
pop
es
lock
or
adc
ja
add
cli
pop
ror
shlb
lea
mov
es
bound
ja
inc
dec
sbb
cltd
aam
pusha
test
and
cmp
pop
fsubl
not
les
iret
scas
jge
adc
clc
jle
fcmovb
fisttpll
leave
xlat
pushf
add
mov
mov
gs
out
add
dec
pmaxsw
data16
dec
cmp
cmp
xor
pop
sti
in
jg
movsl
dec
in
in
leave
inc
or
imul
mov
xchg
push
cmpsl
jo
movsb
testb
sub
popf
les
insb
das
inc
es
and
ret
imul
jge
stc
push
mov
xor
filds
xchg
adc
in
ret
add
add
xchg
inc
test
add
aaa
add
mov
or
scas
out
inc
sbb
addr16
xchg
sub
mov
sub
scas
test
push
inc
sbb
sbb
fadds
hlt
fimull
lock
scas
dec
xchg
ljmp
or
mov
jl
insb
orb
sbb
mov
es
xor
cmp
dec
lock
adcb
aam
cli
rcrl
frstor
lahf
test
pop
fisubrl
jae
insl
inc
or
xor
test
xchg
mov
dec
test
mov
into
popa
cmpsb
and
mov
stc
jge
fisttpll
push
out
lods
popa
mov
jmp
or
jg
outsb
mov
lcall
scas
jns
addb
jge
jle
xchg
dec
setno
decl
daa
js
adc
sti
std
int
xlat
into
stos
mov
mov
pop
mov
jecxz,pt
inc
or
cmp
push
sub
imulb
mov
pop
xor
lret
mov
gs
add
inc
std
inc
xor
mov
xor
adc
mov
fnstsw
cmc
cmp
jo
movsb
adc
mov
daa
dec
xchg
add
in
sub
and
mov
push
rcrb
leave
jg
stos
mov
repz
cs
jle
jmp
lods
xor
or
mov
stos
pop
repnz
inc
and
dec
lahf
jo
inc
mov
push
mov
sbb
or
mov
and
push
pop
or
mov
xchg
cmp
sahf
popf
mov
outsb
sub
mov
mov
std
jo
movl
xchg
out
popf
mull
dec
fucomi
repz
jmp
or
icebp
xor
xchg
in
lret
ja
loop
jae
cmp
sub
cli
jecxz
sbb
lret
mov
mul
sbb
les
ja
push
push
imul
sahf
mov
cmc
sbb
cmpsb
and
and
add
push
mov
adc
cltd
xchg
push
movsl
xchg
into
scas
dec
enter
sbb
inc
cmp
scas
test
push
fdivl
pusha
cltd
jbe
push
ss
mov
push
dec
mov
jge
sbb
mov
pop
or
push
int
xrelease
mov
addr16
hlt
and
dec
push
lahf
outsb
nop
adc
xor
das
cs
mov
scas
idiv
loope
iret
jae
sub
pop
push
pop
roll
add
rcrb
push
cs
or
push
jmp
rcrl
test
add
pop
inc
roll
rcll
sub
daa
xor
movsb
ret
pop
add
aaa
fcmovnb
cld
mov
mov
mov
int3
iret
std
rcrb
xchg
hlt
xchg
pop
add
movsb
nop
outsb
mov
stos
jnp
test
out
jmp
int
fyl2x
cs
test
dec
aas
mov
pop
mov
xchg
daa
dec
mov
movsl
ja
out
mov
xchg
dec
dec
mov
adc
inc
jl
jecxz
stos
loope
insl
and
xor
mov
fldcw
cwtl
loopne
sti
add
push
cmp
das
loope
lds
add
push
sbb
mov
cmp
and
jae
adc
mov
clc
dec
clc
jne
fiaddl
cld
je
jg
test
mov
pushf
cwtl
ss
outsl
int3
sub
in
aam
aad
test
xchg
inc
mov
cmp
imul
lods
adc
pop
orl
loopne
mov
ss
mov
jg
mov
stos
add
cmp
sbb
clc
bound
mov
push
test
int
popa
mov
addr16
ds
jo
sahf
jle
sbb
cmc
je
in
lock
in
push
sbb
pop
nop
icebp
or
and
sub
fisubs
sub
jecxz
adc
aam
push
sbbb
and
in
mov
xchg
stos
pop
xchg
sbb
mov
out
sub
fiaddl
loopne
sbb
das
xor
cmp
aas
test
out
shrl
repnz
popf
je
rol
pop
pop
mov
inc
sbb
and
fisttpll
loope
in
pop
xlat
cmpsl
and
dec
mov
lds
adc
sarl
jecxz
mov
nop
add
sbb
or
xchg
dec
imul
icebp
jo
fists
cltd
xchg
icebp
inc
xchg
jmp
orl
stos
xor
stos
sbb
inc
shlb
out
push
loope
bound
xor
mov
or
out
jno
cwtl
je
dec
adc
mov
inc
jo
dec
ret
int
mov
push
mov
out
mov
pushl
and
or
mov
jne
sbb
xchg
shll
inc
sbb
pusha
sbb
add
mov
xchg
movsb
jae
in
test
cmp
inc
nop
and
jle
cmp
mov
inc
sub
fcoml
out
lods
loope
push
jge
adc
mov
sub
sub
cli
add
and
sbb
scas
xchg
mov
int3
pushf
push
mov
cmp
movsl
pushf
push
jae
jge
pop
in
fcompl
mov
cmp
mov
in
vandnps
out
fiaddl
jnp
sub
dec
mov
js
js
lret
orb
sahf
sub
lods
out
cmpsb
test
out
pop
popf
dec
pop
cmpsb
cmp
addl
lods
mov
jno
aad
daa
and
sbb
ret
adc
push
in
gs
or
dec
push
pop
mov
jo
inc
jmp
int3
and
ror
jb
ljmp
and
sbb
xchg
inc
sub
push
push
data16
lods
mov
mov
or
int
inc
push
jo
jnp
and
ja
pusha
ja
ljmp
in
push
inc
add
or
adc
ss
stos
cmpl
cli
inc
stc
repnz
jmp
mov
sub
hlt
ds
jb
repz
cmp
dec
dec
test
divb
and
add
iret
cltd
add
mov
lret
xor
out
aam
push
mov
insl
test
sbb
fs
imull
movsb
imulb
andl
sub
jg
int
rcrl
xor
sbb
xchg
inc
orl
cmpsl
rorb
insb
enter
push
xor
das
mov
mov
cmc
sub
sbb
pop
sahf
aam
shlb
cmpsl
jb
std
sub
pusha
push
inc
rol
inc
xchg
push
mov
sub
xchg
mov
out
sbb
sbb
int3
xchg
sti
mov
stc
in
push
jns
add
cld
lahf
insl
call
popfw
inc
out
or
sub
inc
pop
flds
cmpsb
fildl
xchg
sbb
ss
and
sbbl
mov
mov
cltd
das
add
adc
imul
insb
sbb
fldenv
cli
push
mov
aaa
int3
sbb
and
push
outsb
add
push
mov
jo
mov
pop
mov
ja
bound
jecxz
push
inc
lret
adc
add
dec
in
mov
dec
cmp
divl
std
push
xor
push
and
lahf
dec
mul
xchg
mov
xchg
addr16
jle
cmp
push
push
lds
sub
rolb
ljmp
or
aam
cmp
and
enter
xor
pop
enter
jmp
inc
or
mov
dec
xchg
fcomps
jecxz
push
mov
push
sahf
call
sub
pop
and
jno
add
xchg
loop
cwtl
cmp
pushf
push
mov
orb
sub
rcll
popa
mov
jae
jnp
mov
xchg
mov
pop
repnz
in
sahf
lock
sbb
clc
sub
fimuls
xor
shl
repnz
call
ret
lds
insb
movsb
push
push
jnp
stos
imul
lahf
sar
shrb
sub
jns
add
sub
mov
and
mov
dec
jne
out
cmp
mov
mov
notb
hlt
mov
stos
jbe
popa
mov
rcrb
inc
scas
fbstp
xorb
push
test
xchg
mov
out
movsl
lcall
pushf
rclb
jmp
fwait
ss
test
sub
xlat
mov
adc
repnz
sub
inc
pushf
inc
das
mov
and
jge
sbb
add
lods
sbb
lret
push
jo
jmp
sub
iret
cmc
dec
mov
in
imul
jle
mov
popf
cmp
cmp
inc
lgs
pop
mov
out
push
lea
xor
sar
adc
outsb
inc
pop
aas
push
cmp
shrb
shl
adc
cmp
mov
outsb
je
test
fdivp
dec
dec
in
inc
jge
push
test
subl
jp
push
lds
hlt
pushf
pop
stos
lcall
mov
adc
ret
xor
data16
vpshuflw
ret
push
cli
and
jno
inc
fadd
rclb
icebp
mov
jmp
cmpb
add
add
enter
cli
mov
test
jle
add
jbe
repnz
xor
and
jae
sti
inc
pop
jb
sub
sub
pop
and
add
mov
cmp
push
sbb
lods
lock
cmp
enter
sbb
pop
es
jno
mov
ds
and
sub
pop
inc
and
cli
sar
xchg
mov
data16
ja
dec
or
sub
inc
or
lds
cmp
popa
pop
lods
rcll
jmp
dec
pop
call
add
mov
push
xchg
inc
lahf
push
mov
or
push
sbb
mov
lea
pop
push
inc
jne
xor
sti
cmp
cmp
hlt
test
dec
aas
sbb
cwtl
mov
daa
mov
popa
das
cmp
mov
cmp
cli
ljmp
jp
ffreep
pop
mov
mov
push
lret
fistl
push
ss
pop
and
inc
pop
in
lods
xchg
test
pusha
or
repz
psubusb
and
mov
cmp
fdivrl
popa
lret
movsl
out
bound
iret
push
sbb
cmc
stc
aad
pop
dec
jmp
lret
and
loopne
test
add
push
xor
pop
fstps
mov
push
inc
add
cltd
in
jp
cwtl
adc
in
push
mov
repnz
lds
inc
popa
jbe
fisubs
scas
gs
movsl
add
cld
or
adc
sub
adc
adc
gs
scas
mov
ret
jl
in
xor
jns
addr16
repz
in
sbb
mov
mov
lcall
mov
jp
or
mov
xchg
push
add
pop
ds
arpl
sti
xchg
fistps
outsl
push
lret
and
loopne
mov
dec
sbb
arpl
test
or
lret
mov
sarb
repz
push
out
xchg
mull
jmp
int
fwait
test
emms
jb
test
adc
mov
mov
push
or
adc
roll
push
popl
dec
xor
rcl
fdiv
mov
mov
incb
popa
adc
dec
mov
inc
or
inc
mov
mov
sbb
rcl
stc
loopne
lea
aam
push
mov
cmpsl
or
test
pop
cs
fldl
adc
add
aam
adcl
dec
adc
xchg
lcall
fdivrs
outsl
push
and
jnp
dec
adc
loop
push
inc
repnz
rcrl
shl
and
xorl
jmp
popa
aas
xlat
dec
sub
mov
sbb
lret
outsl
imul
adc
pop
jb
fdivs
in
sbb
fwait
lea
adc
mov
in
jmp
fdivrl
lret
test
mov
jne
sbb
les
mov
jo
sti
inc
dec
add
leave
mov
out
pop
in
jno
rcrb
sub
mov
sub
inc
xchg
ret
mov
jp
fwait
stos
cmpsb
and
adc
push
cmpsb
or
cltd
pop
cmpsl
push
xor
shr
xchg
icebp
ss
dec
sbb
or
cmp
push
jp
mov
scas
mov
mull
xor
push
mov
pop
imul
hlt
cmp
sbb
aas
cmc
fwait
popf
popf
jl
push
or
cmpsl
icebp
rclb
repz
lcall
sub
mov
int3
imul
xchg
jo
xor
js
adcb
popf
xor
shrl
mov
jo
xor
movsb
mov
jnp
outsl
jae
popa
aad
push
cmp
outsb
stos
or
lock
mov
out
fcmovnbe
and
inc
out
addr16
in
xchg
out
std
pop
mov
mov
sub
pop
dec
hlt
in
add
push
pop
out
shlb
jp
leave
mov
push
lock
mov
out
into
sub
fimuls
notb
fldt
mov
in
andb
adc
int
push
mov
adc
jg
mov
sbb
subps
push
xchg
ret
in
jo
ret
xchg
pop
test
mov
adc
test
shll
les
sub
int
aaa
rcr
pop
xchg
fldenv
fdivr
inc
pop
movsl
sbb
xor
js,pn
out
mov
lcall
out
add
mov
pop
inc
push
cld
lea
ja
mov
add
enter
mov
inc
cmp
out
out
fs
or
push
test
dec
xchg
fisubs
sub
sar
mov
pop
addr16
das
sahf
shll
subb
jae
mov
je
imul
add
outsl
push
add
fidivrs
out
sbb
dec
outsb
sbb
and
sub
out
mov
add
xchg
cmp
imul
iret
jle
test
xchg
xorl
movsb
ja
lea
push
cltd
repz
pop
xor
lods
or
push
and
lahf
cld
push
push
cmp
test
cmp
inc
imul
mov
xchg
jno
xchg
rcll
fisubrl
or
cmp
xor
add
xlat
popf
inc
inc
test
testb
dec
sub
push
leave
push
jns
cltd
imul
pop
jecxz
mov
push
les
repnz
push
iret
dec
bound
push
rorl
and
movb
addr16
jns
adc
jns
push
popa
hlt
xor
pop
cmpsb
mov
idivl
mov
sbb
leave
xchg
rolb
and
xadd
imul
dec
sbb
cmp
clc
mov
xchg
es
mov
push
jl
loope
jge
mov
je
iret
insb
cmp
or
les
mov
loop
ja
sub
lods
push
je
jbe
imul
adc
cli
and
jmp
jo
and
rorb
in
dec
xchg
sbb
mov
les
orl
jmp
aam
sahf
mov
dec
in
je
and
daa
andb
ret
sbb
lret
push
lahf
jle
int3
lret
push
push
in
shl
clc
or
adc
add
fwait
jns
dec
lods
dec
sbb
push
mov
in
dec
mov
inc
pop
pop
rcr
mov
arpl
popf
and
pop
jno
cmpsl
push
mov
sbb
fcomi
and
imul
inc
xor
pushf
jb
lahf
inc
mov
addr16
cld
out
dec
fcoms
call
cli
jl
cs
pop
push
ljmp
jns
mov
movsb
add
lock
push
fcmovbe
out
mov
rorb
inc
or
cmp
mov
sbb
sahf
insl
pop
insb
push
jns
mov
push
adc
mov
sbb
jp
dec
xchg
lods
enter
sbb
test
and
in
dec
test
aam
cmp
cmp
pop
xor
add
mov
mov
adcb
xorl
clc
push
cld
es
xor
inc
add
xchg
pop
xor
jecxz
fisttpll
loopne
mov
pop
cmp
xchg
sahf
push
xor
cmp
inc
sbb
test
jmp
insb
fwait
jecxz
xor
xlat
and
scas
jle
sbb
add
out
hlt
arpl
sbb
or
pop
cmpsl
sti
xchg
xchg
mov
mov
rcl
push
shl
sub
sarl
lcall
fimull
sbb
inc
pop
scas
mov
pop
mov
aad
push
call
sti
adc
je
sbb
jae
or
lds
stc
sub
push
cmp
in
pop
test
sbb
out
xchg
fs
lret
bound
adc
mov
dec
sbb
dec
mov
out
lods
dec
jl
pop
mov
mov
ret
aad
popf
fisubrs
fsubrl
mov
inc
pusha
in
test
lock
in
sbb
and
cmpsl
fxch
add
icebp
inc
and
sub
lods
aad
sub
push
xchg
icebp
sub
fmulp
lcall
add
andl
xchg
loopne
aam
mov
data16
in
mov
jge
cmp
sbb
xor
leave
or
inc
and
in
movsb
popf
inc
shll
and
mov
loopne
leave
ljmp
cmpb
xchg
xlat
lods
push
test
xchg
mov
mov
mov
in
sub
mov
inc
lock
mov
cmp
lds
push
sub
dec
ljmp
inc
mov
aaa
mov
fidivrs
ret
push
pop
pusha
pop
mov
bound
outsb
mov
add
or
leave
stos
lret
xor
jecxz
mov
mov
push
jecxz
stos
xor
push
or
pop
and
mov
push
outsl
fdivrs
popa
sbb
and
dec
je
icebp
push
aas
dec
loop
xchg
jmp
mov
out
mov
xor
mov
sbb
xchg
sub
test
lahf
sarl
xchg
push
inc
mov
mov
cmp
addr16
or
sar
lods
mov
xor
or
pop
neg
scas
push
sub
insl
insb
pop
andl
cmc
adc
in
inc
sub
and
insl
clc
xchg
jecxz
jb
inc
push
xchg
inc
cs
cltd
xor
mov
mov
sbb
ss
lods
push
enter
push
loop
iret
fldl
pop
call
xchg
gs
std
or
pop
pop
aad
popa
sbb
cmp
mov
fistps
cmp
add
insb
mov
lock
or
scas
jbe
mov
std
cmpsl
and
sub
dec
scas
les
sbb
lea
shlb
test
push
cmp
insb
mov
scas
cmp
add
push
inc
or
cmp
fwait
pop
incl
mov
into
cmp
sub
xor
mov
lcall
adc
lock
sar
repnz
dec
aad
pop
xor
pop
add
xor
nop
cmp
mov
nop
sub
inc
xchg
adc
push
jl
lods
lret
dec
jae
roll
xchg
inc
inc
ret
mov
xchg
push
orl
test
in
rcl
pop
in
fmulp
fucompp
or
lret
gs
jnp
mov
pop
sbb
xchg
int3
cltd
adc
pop
fiadds
push
aam
into
cmp
icebp
add
lret
cli
mov
dec
xlat
loope
imul
mov
jp
cmc
arpl
cmp
push
cltd
testl
lock
cmp
jae
loop
addl
aam
add
pop
pop
mov
mov
pextrw
scas
mov
ss
push
sbb
or
jno
insl
idiv
mov
push
xchg
subl
dec
xor
cmp
call
mov
mov
pop
pop
mov
idiv
lods
je
ja
test
cmc
shl
jb
xor
iret
push
and
addr16
daa
fs
mov
add
push
cmpsb
clc
push
pop
cmpsb
pop
add
jb
xchg
mov
xor
lock
push
mov
out
add
add
cmp
jecxz
pop
das
shl
fdivrs
or
and
rcrl
dec
cltd
filds
call
int
cld
push
shlb
stos
leave
sbb
sti
int3
adc
or
or
aas
jg
aam
push
mov
test
je
mov
cmpsb
in
push
cltd
push
out
rcrb
jne
mov
jns
out
add
or
int3
jb
fwait
ret
and
lret
and
xchg
in
icebp
sti
xchg
jge
cmp
clc
rorb
inc
shl
push
movsl
xchg
mov
sbbl
xchg
adc
or
cwtl
jl
pop
mov
ret
imul
sbb
repnz
sub
dec
fs
and
inc
mov
stos
push
outsb
xchg
cmpb
push
fsubs
rcr
fnstcw
bnd
ss
jg
mov
ss
fwait
and
ljmp
out
into
je
loope
jne
xchg
jl
push
enter
jecxz
pop
data16
jo
fsubrl
fstl
pusha
dec
int3
rcrl
or
xchg
xor
adc
xor
mov
aam
iret
push
mov
adc
outsl
sub
js
adc
fidivrs
hlt
cmp
or
subb
jmp
xchg
ret
and
outsb
sbb
inc
into
xchg
sub
loopne
cmp
out
clc
push
mov
lods
stos
test
std
inc
rorl
jge
lds
into
mov
cltd
or
pop
cmpsl
fstpl
aaa
sub
mov
fistps
ja
sbbb
jg
mov
lahf
fsubl
lods
dec
test
aad
sbb
mov
adc
mov
sbb
mov
movsl
push
ret
cli
cmc
pop
mov
mov
jmp
pop
out
cli
outsl
mov
in
jg
mov
in
cld
pushf
sti
in
or
lock
add
pop
out
sbb
lock
fs
pop
dec
and
jge
cmp
fwait
leave
inc
add
fimuls
stc
shrb
jo
lahf
push
in
inc
sti
push
jns
int
jge
pop
cmp
fs
xor
xlat
pop
or
cmp
jl
pop
loop
icebp
adc
inc
lock
fidivl
mov
xchg
xlat
mov
rcrb
sub
jecxz
lock
inc
dec
cmp
mov
push
std
or
xchg
mov
outsl
nop
cltd
roll
imul
popf
cli
mov
enter
lahf
fldl
leave
mov
stos
dec
andl
aam
nop
jg
cmp
pushf
fdivrs
imul
jb
or
inc
lods
xchg
xchg
ficompl
cmp
pop
es
arpl
in
xchg
leave
adc
sub
ret
gs
hlt
lock
cmp
sbb
stos
std
pushf
fidivrs
add
add
ljmp
je
xchg
jns
mull
cmp
and
mov
aad
pusha
clc
and
sub
mov
push
xor
out
pop
pop
mov
loope
or
lods
shll
push
outsb
fsub
enter
dec
int3
inc
adc
jmp
mov
mov
jmp
pop
mov
fs
jae
jbe
stos
jp
mov
ds
fwait
sub
mov
sbbl
pop
je
pop
xchg
mov
mov
pushf
inc
or
or
and
popa
js
mov
xor
pop
lea
ljmp
mov
dec
add
inc
stos
sbb
lds
sub
sbb
xchg
xchg
lcall
push
cmc
les
sub
dec
jmp
rorb
xor
xor
mov
jp
sbb
cli
int
xor
cmpsl
sahf
push
rolb
mov
and
inc
lahf
jns
stos
fidivrs
jge
rorl
stos
rcrb
leave
xor
and
jp
xor
cmpsl
sub
nop
inc
jb
loop
ljmp
push
sbb
pusha
push
mov
or
jbe
inc
mov
lock
pop
pushf
xor
cmc
sbb
xchg
icebp
xor
cmpsl
jns
mov
roll
xor
and
and
and
test
fsubrp
jnp
daa
lcall
cmp
fstpl
or
mov
imulb
out
cmp
lcall
cmp
pop
mov
push
addr16
mov
mov
push
add
jg
cmp
or
xchg
lea
ret
xor
adc
clc
addb
incb
cmpsl
xchg
sub
fsubrl
sahf
inc
jbe
je
jae
dec
popa
repz
in
jmp
int
out
jmp
adc
shrb
roll
add
clc
pop
push
imul
adc
xor
mov
stc
cmc
fs
push
push
fs
dec
mov
mov
mov
and
pop
in
lcall
push
into
repz
imul
iret
in
add
sub
mov
addr16
vrcpss
roll
insl
lds
scas
push
push
jnp
and
jl
push
xor
mov
inc
scas
inc
lock
loop
xor
lcall
jmp
and
dec
jbe
jno
jno
push
test
loopne
dec
mov
bound
gs
dec
and
in
and
xor
mov
addr16
ret
les
push
mov
pop
int
mov
jl
sahf
jle
and
inc
aaa
jle
push
cmpb
inc
lcall
push
mov
xchg
add
inc
mov
sti
push
jle
inc
cld
mov
mov
jge
mov
cmc
or
cmpl
mov
xor
cmp
into
imul
jmp
out
stos
inc
cmc
xor
inc
nop
js
jle
sub
loope
rclb
lods
cmpsl
adc
push
pop
xchg
test
cld
add
test
or
mov
xlat
cli
jge
insl
out
sub
pop
pushf
cwtl
test
test
jnp
movsb
inc
push
sbb
pop
aam
movsl
push
std
imul
push
gs
repz
adc
das
das
inc
push
jp
aaa
es
fdivs
stos
push
add
cmpl
repz
clc
push
inc
rcl
inc
inc
inc
test
arpl
pop
or
push
and
repnz
pop
inc
add
sub
repnz
punpckhwd
xor
cwtl
cs
sub
in
push
mov
ret
sub
mov
mov
mov
push
pop
and
cmp
test
or
inc
mov
ror
mov
sahf
test
and
jno
xchg
cmpsl
push
lock
clc
adc
out
add
jmp
xchg
loope,pt
rorb
test
mov
xchg
ljmp
je
sbb
cmp
pop
insb
js
addr16
mov
aad
std
adc
xor
push
das
mov
cmp
ret
dec
jo
cmp
scas
xor
rep
sbbb
cmp
inc
lods
stos
pop
push
mov
mov
popa
jp
jl
jno
ret
ja
inc
jl
inc
fwait
loop
lock
int3
push
fisubs
push
daa
sbb
xor
inc
test
incl
add
jmp
inc
pop
lds
inc
xchg
inc
push
test
cmpxchg
adc
adc
push
dec
cmp
ss
popa
push
push
pushf
xor
ljmp
in
fldl
mov
push
lds
cs
in
int
mov
shll
out
ljmp
xlat
out
push
jmp
dec
daa
pop
ret
rcrb
pushf
lahf
call
ret
out
pushf
test
xlat
xchg
test
adc
subb
insl
mov
sub
out
imul
mov
dec
sbbb
jmp
sahf
adc
cmc
jne
pop
inc
sbb
mov
sahf
xchg
cwtl
inc
inc
mov
ficoms
imul
lret
sub
pusha
adc
fisttpll
mov
leave
ss
push
xchg
fstl
dec
icebp
icebp
xor
decl
nop
dec
insl
sub
adc
xlat
iret
aaa
fstl
test
in
scas
push
sub
cmpsb
dec
sub
dec
mov
arpl
inc
xor
pop
stos
es
mov
adc
mov
mov
inc
sahf
xchg
aaa
add
xlat
rcr
cmp
cmpsl
sub
mov
nop
pop
sbb
cmpb
add
pop
pop
aam
dec
jae
pop
repz
mov
jp
das
cltd
stos
out
addr16
andl
add
std
loop
loopne
out
fstl
or
cli
pop
sbb
aas
or
xchg
mov
xchg
cmp
add
cwtl
ret
dec
mov
out
sahf
xchg
jae
in
repnz
daa
sub
orl
xchg
dec
call
cmpsl
and
xchg
ret
mov
mov
test
lods
ljmp
push
testl
dec
push
pop
loopne
loope
lea
and
mov
cs
out
dec
mov
adc
jae
xor
push
pop
sti
sub
push
stos
sbb
loop
imul
repz
mov
insl
cmpsb
dec
pop
mov
pop
or
cs
je
dec
mov
into
notb
and
jl
xchg
pop
loope
daa
push
jmp
cmpb
add
insl
sbb
or
mov
jge
and
inc
sub
xor
dec
rcrb
in
dec
lods
mov
je
mov
mov
popf
call
and
xchg
push
es
xchg
xchg
stc
repz
call
pop
add
shrb
call
xor
aad
ja
iret
push
sbb
in
mov
xor
mov
stos
and
mov
cmp
jo
sub
popf
adc
stos
pop
lret
push
or
adc
xchg
enter
pushf
call
push
fisttps
jno
movsb
cwtl
in
movsl
cli
pop
js
cli
fnstsw
dec
dec
sub
dec
pop
adc
inc
push
dec
pusha
xchg
add
add
mov
adc
addr16
lea
fwait
push
test
clc
test
jg
fucomi
loope
inc
pop
pop
push
xor
and
xor
mov
add
mov
das
and
mov
pushf
pop
jl
pop
and
mov
test
test
popf
xor
lret
mov
and
aam
jae
shll
sub
lret
fists
cmp
pushf
push
inc
loop
ss
scas
xorb
mov
mov
add
pop
cmp
xchg
rcr
dec
sub
leave
aam
scas
add
out
mov
fdivl
mov
in
lcall
sub
jo
or
cmp
in
jg
adc
and
or
pop
ja
cmpsl
xchg
xor
lods
pop
or
dec
fidivrs
jle
orb
mov
leave
mov
jge
out
xchg
in
and
ficomps
idiv
aad
cs
sub
sub
sahf
mov
cmp
dec
dec
incb
insb
loope
mov
sar
sub
orl
jl
pop
sbb
daa
jl
fimuls
rcr
repz
out
sti
jno
jno
pop
das
cmp
ss
xor
mov
push
data16
jae
cmp
movsl
loopne
sub
or
pop
xorb
cmp
sbb
cmp
mov
ret
dec
scas
fistl
lds
movl
rclb
mov
in
cmp
gs
pop
push
inc
gs
lret
and
inc
ss
or
push
xlat
in
dec
adcb
neg
int3
pusha
sar
add
or
sub
adc
and
ret
mov
or
sub
cltd
lds
js
and
push
mov
leave
cltd
scas
dec
mov
mov
or
divb
sub
push
repnz
jmp
fimull
lods
and
inc
jp
shlb
mov
mov
fildl
pop
cmp
or
inc
int
dec
push
push
mov
inc
adc
enter
sbb
push
sbb
cmpsb
aad
mov
js
cld
imul
push
pop
push
in
cwtl
pop
xchg
test
pop
mov
push
or
mov
sub
add
mov
mulb
cmc
lea
hlt
loopne
stos
xor
mov
inc
ja
jae
imul
arpl
gs
pop
xchg
enter
mov
dec
arpl
pop
cmp
cs
aad
fbld
pop
sub
popa
adc
or
call
push
sub
mov
rclb
fisttpll
xor
jo
mov
lods
add
jae
movsl
je
cmp
pop
and
dec
sbb
mov
inc
mulb
pusha
fnsave
movsb
mov
mov
popf
jmp
xchg
adc
jno
pop
idiv
or
ss
fnstenv
dec
add
push
or
int3
out
test
push
sbb
push
mov
lds
xor
aad
push
mov
int3
ret
lea
add
fmul
outsb
test
pop
stos
aam
mov
es
ljmp
lret
inc
mov
and
repnz
and
cmp
andb
lret
fs
inc
mov
sarl
ja
xchg
and
xchg
outsb
enter
out
fsts
loope
scas
lcall
dec
movsb
mov
fwait
stc
cli
pop
inc
inc
push
push
mov
notb
mov
shl
add
cs
cs
push
lret
mov
ds
stos
push
cld
divb
sub
xchg
xchg
lret
xor
pop
pushf
lock
into
je
add
jae
call
in
dec
adc
jmp
decl
les
repz
daa
cmp
cmpsb
popf
movsb
fildll
out
cmc
clc
pop
test
push
pop
dec
cmp
sbb
movsl
and
xlat
jo
das
cltd
shrb
divl
inc
pushf
sarb
adc
or
push
cmpsb
rcll
faddl
rol
add
push
mov
mov
inc
imulb
repnz
dec
data16
mov
push
lods
out
out
leave
lret
jno
lock
notl
lds
in
aas
cmpsb
push
or
mov
push
adc
imul
mov
jnp
or
arpl
sub
sbb
lea
out
mov
adc
test
mov
stos
sarb
inc
jle
shrb
cmc
outsl
or
dec
xor
rolb
add
or
ret
pop
xchg
fistpl
aas
data16
lea
jecxz
add
ja
add
fildl
sub
jae
bound
mov
jg
cmpl
cmc
mov
dec
add
sub
stc
in
adc
lea
popa
xor
fistl
fwait
lret
int3
out
mov
mov
sbb
inc
fisubrs
inc
ss
dec
xchg
add
stos
push
std
fistpll
lds
pop
insl
inc
hlt
lcall
stos
flds
pop
mov
inc
mov
lock
int
or
out
dec
pop
test
mov
xchg
rclb
or
push
adc
inc
popa
xchg
lea
or
int3
js
outsl
arpl
jg
dec
fsubrs
cwtl
push
icebp
mov
mov
mov
sbb
popf
jecxz
andl
popf
jmp
dec
mov
push
xorb
and
sbb
jp
pop
mov
xchg
xchg
mov
jb
mov
ljmp
sub
repz
and
dec
mov
and
roll
shrb
cmp
push
jge
and
sub
je
mov
mov
inc
xor
mov
mov
fidivrl
aaa
cmc
mov
loope
adc
ud1
sub
jno
repz
hlt
mov
std
out
and
daa
cmpsb
add
xchg
stos
fsts
arpl
fcmovne
cltd
jge
fcompl
cmp
popw
lret
in
mov
dec
stos
das
out
leave
xchg
jmp
jecxz
pop
into
lds
pop
adc
shl
mov
jns
cwtl
mov
enter
insl
mov
and
arpl
pop
xor
and
xchg
pop
xchg
fyl2xp1
or
pop
out
test
insl
push
stc
inc
cmc
and
stos
mov
xchg
dec
or
ja
push
aas
pop
je
add
bnd
imul
fimull
pushl
mov
sub
adc
insl
jecxz
mov
insb
push
rol
mov
inc
das
gs
repz
sahf
adc
test
xchg
or
push
outsb
js
lods
sbb
fnstcw
adc
xchg
xchg
lea
jle
xchg
outsb
idivl
icebp
out
and
pop
or
and
in
fnstenv
lods
push
mov
jo
fnsave
into
push
add
push
push
xchg
pop
xchg
adc
outsl
jmp
negb
mov
popa
in
ret
lods
insb
adc
inc
and
dec
insl
dec
cmc
flds
ljmp
add
mov
sbb
and
mov
daa
or
divb
test
test
sbb
in
or
sub
sub
int3
sbbb
pushf
inc
pushf
mov
hlt
cmpsl
in
add
pop
and
icebp
jp
jge
mov
mov
cld
lods
rclb
fwait
ret
jmp
je,pt
ret
sti
cwtl
mov
mov
sbb
cmp
adc
dec
cmp
mov
jmp
scas
popl
loop
in
lret
insb
icebp
push
fwait
mov
cmp
pop
push
fldcw
dec
add
inc
mov
push
loop
sub
cmpsb
fsub
ljmp
scas
add
into
cwtl
push
xor
mov
loope
sub
xchg
add
rolb
sub
add
fstpl
cli
in
hlt
xchg
aaa
sub
int3
adc
mov
push
lret
bound
xchg
ret
mov
les
test
push
rcrl
xorb
add
xor
outsb
shld
xchg
adcl
push
sub
ret
inc
or
xchg
repnz
xchg
mull
dec
sub
pop
js
and
and
xor
sub
inc
mov
dec
push
xor
inc
push
dec
scas
insb
stos
push
mov
lcall
fisttpll
icebp
xor
mov
bound
mov
dec
xor
clc
daa
or
lods
sub
pop
dec
lret
pop
fdivrl
push
xor
mov
dec
out
insb
cli
ja
push
xor
cmp
dec
mov
cmp
xchg
mov
push
aaa
dec
adc
pushf
pop
sub
stos
cmc
cmp
gs
popf
pushl
adc
sbb
fimull
in
repz
mov
cld
push
jp
mov
push
jmp
mov
dec
into
loope
lock
jnp
add
adc
hlt
stos
push
out
outsb
stos
and
xor
shll
add
jecxz
repnz
mov
das
sbb
sbb
loop
xor
dec
mov
fstps
xor
and
fstpt
adc
sbb
cmp
xchg
test
add
cmp
add
andl
add
sub
adcl
daa
dec
sbb
mov
cmp
ds
jmp
ss
es
cmp
js
mov
or
mov
lcall
icebp
inc
pop
lret
addl
test
roll
xor
dec
mov
adc
or
test
cmp
insl
test
xchg
xor
xchg
daa
jmp
hlt
pop
push
adc
pop
mov
or
jo
cmp
aaa
inc
mov
lahf
mov
loop
or
adc
inc
es
icebp
aaa
mov
in
sbbl
aas
cwtl
lcall
dec
mov
pushf
lods
cmp
iret
sub
arpl
jmp
or
scas
loope
xor
mov
dec
mov
push
les
adc
xchg
lahf
fnstenv
xchg
aad
lret
lods
mov
inc
mov
jl
in
pusha
sub
cmpsl
mov
cmpsl
insl
xor
dec
divb
mov
idivl
or
insl
xchg
mov
add
and
cli
icebp
adc
sar
cli
stc
aas
dec
out
loope
idivb
xor
pop
xchg
ds
xor
mov
push
and
ret
out
jnp
inc
movsl
mov
mov
imul
es
mov
sub
inc
adc
les
int
les
inc
andb
dec
mov
inc
out
and
sarl
call
xor
subb
mov
inc
pop
jbe
push
pop
xor
outsl
pop
out
mov
fs
les
pop
push
push
push
rorl
imul
outsb
fisubs
push
fldl
pop
faddl
mov
dec
mov
mov
mov
xchg
jl
orb
jb
cmpsl
sub
fmul
fcmovnbe
dec
xchg
mov
jg
mov
push
sbb
dec
mov
mov
outsb
add
in
inc
into
scas
in
adc
inc
inc
jo
mov
test
cmpsl
jmp
add
or
mov
push
mov
outsl
loopne
repnz
test
jmp
mov
in
movsl
mov
jp
xchg
pop
test
cmp
sub
or
icebp
test
inc
cld
jmp
lcall
cltd
mov
add
and
jbe
add
test
mov
fcoms
movsl
lret
rcrb
push
rorb
fistpll
xchg
push
movsl
push
sub
or
lods
inc
mov
push
jp
adc
lds
mov
clc
addr16
push
jg
ja
xchg
nop
lock
xchg
pxor
out
xchg
mov
jbe
pushf
xchg
je
dec
lahf
outsl
xchg
inc
push
rcl
dec
in
and
jp
push
pop
sahf
ljmp
movsl
sub
into
insb
sub
pushf
pop
pop
push
cli
mov
pop
mov
popf
into
jo
fst
out
imul
arpl
push
add
sub
push
add
test
inc
loope
adc
jp
pop
dec
shll
dec
int3
cltd
sub
xchg
enter
push
test
int3
jg
mov
fistl
imul
jb
push
clc
push
xor
jno
andb
shrb
cmp
in
shl
filds
lock
lret
mov
adc
xchg
jmp
aam
loopne
loopne
or
int
adc
ljmp
into
daa
fcmovnb
lret
je
stos
mov
ljmp
in
daa
lds
add
andb
xor
push
mov
addl
imul
icebp
sub
sbb
ljmp
add
adc
jne
gs
lods
add
sbb
les
lahf
decb
inc
sub
jge
xchg
call
push
int3
inc
das
add
int
cwtl
pop
or
testl
imul
jmp
les
pop
mov
mov
sbb
jecxz
std
and
cmp
inc
xchg
sub
xchg
and
subb
popf
dec
ss
loop
popa
inc
dec
push
xchg
xor
arpl
or
andb
das
rolb
jns
ss
int3
jmp
push
faddl
iret
inc
ret
scas
sub
push
push
imulb
ror
std
or
jmp
cmpb
xchg
fst
nop
cmp
psrld
push
loop
rcrl
mov
iret
lods
mov
mov
lahf
inc
mov
out
inc
test
pcmpeqw
pusha
jl
fwait
sub
hlt
add
clc
mov
arpl
lea
icebp
divl
cmpsb
xor
jl
jno
dec
outsl
or
and
push
mov
sbb
lahf
decb
xchg
mov
scas
loopne
mov
ror
push
inc
into
fimull
in
xchg
xchg
ss
movsb
xor
rcl
lods
ljmp
out
and
mov
leave
xor
mov
dec
mov
fs
mov
pop
and
js
pop
lods
and
int
in
ret
int
ret
mov
insl
xchg
cld
cli
mov
pop
xchg
jbe
testb
mov
fdivrs
jne
into
sub
cltd
roll
push
cmpsl
cmpsl
dec
add
aad
int3
and
push
fmull
pop
mov
repnz
sub
fistpll
push
fmull
popl
or
outsl
stc
adc
sub
sub
pop
xor
cmpsb
les
jl
mov
icebp
mulb
dec
test
icebp
scas
movsb
pop
add
sbb
rolb
xchg
stc
loopne
jg
xor
dec
push
test
jl
leave
pop
pop
div
push
xor
out
les
sub
outsl
mov
js
insb
pop
adcl
fisttpl
jecxz
xchg
daa
mov
loope
ror
xchg
out
insl
dec
xchg
or
fldl
cld
push
test
cs
negl
push
jl
xor
subb
or
fwait
imul
pop
mov
in
sbb
das
lock
aas
inc
sbb
cmpsl
sbb
popl
scas
sbb
xchg
sbb
cmc
sahf
testl
push
or
cmp
jecxz
mov
int
insb
inc
add
mov
or
lret
mov
mov
mov
fimull
cmp
or
insl
fisubrs
sbb
fistl
mulb
addr16
xlat
adc
test
push
addr16
dec
jnp
loop
push
mov
mov
or
mov
stos
xor
inc
sbb
and
pop
jno
sub
jae
mov
xchg
add
mov
pushf
push
int3
push
dec
mov
icebp
in
adc
pop
pop
and
gs
xor
xchg
cli
cmp
jg
fbstp
lods
inc
repnz
add
mov
cmp
xor
stos
inc
in
inc
xor
loopne
xchg
sub
jo
dec
and
mov
push
mov
inc
aad
orb
repz
mov
sbb
ljmp
daa
xchg
movsb
inc
repz
je
ss
dec
push
out
mov
ucomiss
pusha
pop
insb
mov
clc
cmpb
popa
mov
ret
adc
mov
and
mov
xchg
daa
and
mov
cmpsb
add
mov
je
cltd
lret
sbb
add
mov
sahf
cmp
cltd
cmp
lcall
aad
jl
in
push
movsb
in
stc
adc
outsb
xchg
cmp
insb
ljmp
push
ljmp
mov
and
jo
sub
sbb
jl
popa
rcrl
gs
and
or
aad
hlt
cmp
mov
and
jnp
pop
add
iret
cmp
jmp
mov
inc
dec
jmp
jo
add
std
cmp
jnp
or
lods
inc
jno
cli
stos
lea
fwait
add
fbstp
add
arpl
in
adc
out
movsl
rol
ret
and
jne
cmpl
shrl
daa
sbb
nop
mov
sbb
out
jne
mov
pop
idivb
add
xchg
ja
xchg
mov
mov
dec
sti
inc
js
dec
add
add
lcall
jbe
jb
push
mov
xchg
push
jo
mov
mov
jnp
mov
lods
rolb
xlat
inc
mov
push
das
xchg
insl
pop
mov
mov
dec
pop
loop
clc
sbb
xor
xchg
arpl
pop
jecxz
lods
test
sbb
mov
in
xor
rcr
ja
mov
add
aas
ficoms
mov
fistpl
cli
inc
cmpl
pop
pusha
loope
jbe
addl
or
lock
nop
jae
adc
sub
push
or
inc
rcrb
or
enter
leave
loopne
test
iret
sub
sub
dec
adc
add
shrb
xchg
arpl
xor
movsb
mov
xchg
stos
adc
add
mov
mov
cmpsl
and
mov
adc
jnp
and
xchg
iret
or
stos
into
mov
cmc
pusha
mov
inc
fists
cld
cmp
fbstp
or
xchg
or
bound
inc
sub
test
push
mov
andb
inc
mov
dec
add
popf
mov
inc
shll
les
sbb
pop
jle
cmp
pop
jecxz
jb
dec
ljmp
pop
lahf
adc
nop
mov
jno
js
mov
andb
and
sub
addb
leave
or
push
fildll
mov
ret
scas
jo
insb
dec
js
fildl
adc
in
cmpsl
pop
xor
pop
mov
ret
sub
fmul
inc
pop
mov
imul
adc
cs
aad
gs
fdivrs
jae
test
push
lods
mov
push
cmpl
loop
jmp
mov
push
sbb
push
xchg
aad
cmc
imul
add
mov
dec
loopne
in
pop
cmpsl
inc
addr16
add
in
call
stos
and
fidivs
lret
xor
adc
data16
stc
or
add
mov
shll
push
inc
sub
cli
cmpsl
add
test
cmc
mov
push
inc
lahf
out
fistpll
pop
adc
mov
out
loopne
in
pop
xor
sub
mov
or
jb
jne
push
mov
fsubl
je
movl
std
lcall
loop
lods
imul
dec
push
pop
dec
nop
mov
sub
stc
xchg
push
push
mov
fsubrp
jmp
push
sub
out
leave
test
push
push
fcomps
xor
push
enter
dec
xor
jl
neg
lret
push
lret
adc
mov
and
int3
andl
insb
in
push
and
enter
jo
mov
psraw
adc
fbld
imul
loop
pop
xchg
push
dec
call
stos
push
mov
push
lods
mov
dec
cmp
fldt
xchg
add
cmp
movsb
sahf
pop
adc
int3
es
lret
ret
pop
pushf
or
add
mov
clc
leave
mov
dec
scas
mov
sbb
sub
pop
ret
pop
test
xchg
movsb
fiadds
les
add
pop
lahf
sub
iret
pop
cmp
push
cmp
and
mov
stos
shl
jnp
fwait
xchg
jbe
loope
in
std
push
sub
es
fwait
repz
ljmp
js
leave
add
addr16
pop
adc
daa
aas
adc
testb
mov
daa
and
or
or
xchg
rcrl
jo
xor
xchg
shlb
dec
stc
dec
lcall
add
jbe
les
mov
cmp
out
xchg
fiaddl
and
xchg
in
adc
call
nop
adc
rorl
inc
sbb
push
in
pop
jns
jbe
and
sbb
push
inc
mov
cwtl
sahf
add
dec
add
aad
ret
insl
subb
and
mov
aad
push
ret
arpl
xlat
lods
push
mov
cmp
bound
mov
inc
cmpsb
inc
lods
testb
mov
mov
sbbl
inc
mov
inc
mov
sahf
sarl
in
pop
rclb
mov
mov
int3
sahf
jne
lret
adc
inc
int
fdivrs
aam
ljmp
adc
lret
bound
cmpsb
repz
mov
push
pushf
bound
and
jns
into
ljmp
fiaddl
adc
clc
je
xlat
outsb
arpl
roll
add
lret
sti
fdivl
dec
test
sub
sbb
orb
jmp
pop
scas
jl
test
inc
jb
inc
testl
aaa
add
jns
ret
out
jle
cltd
mov
cmp
pushf
fs
push
or
xchg
scas
sbb
xchg
dec
enter
pop
jbe
adc
pop
dec
insl
sbb
cmp
or
movsb
lods
xor
enter
cltd
xchg
lods
xchg
adc
xor
jp
or
aad
xorb
dec
aad
xchg
adcl
mov
imul
dec
pushf
pop
mov
cs
bound
pushl
movsb
insl
sbb
mov
loope
mov
rorb
das
insb
shlb
xchg
xchg
mov
aam
int3
rcrb
lock
or
sbb
je,pn
lret
xor
xchg
out
lods
not
add
adc
mov
adc
inc
lock
roll
in
repnz
sbb
int3
xor
fisttps
sarl
sbb
inc
cs
sub
xor
inc
aam
dec
xchg
mov
cmpsb
jl
sbb
mov
and
repz
push
lods
movsb
enter
adc
mov
cmp
dec
add
push
ret
xor
fcmovne
icebp
data16
jae
adc
imul
adc
je
mov
or
movsb
scas
outsb
adc
push
cmp
mov
and
or
sub
shl
mov
pop
rep
sbb
inc
sbb
add
nop
add
sbb
mov
sbb
ds
notl
add
mov
inc
fisttps
aaa
xchg
jb
cld
cmpsb
pop
scas
jo
xchg
faddp
test
loopne
ja
icebp
mov
sub
jne
imul
jne
addr16
aas
add
push
fwait
in
mov
jns
cltd
jns
push
mov
adc
xchg
jno
adc
dec
adc
lods
pop
sar
mov
insl
aas
out
lret
fisttpll
dec
call
pop
ss
and
push
lahf
sub
test
movsb
and
push
bound
cmp
sbb
clc
outsl
test
outsb
xor
cmpsb
mov
cmp
sbb
sbb
sub
cs
and
scas
jle
lret
ret
inc
add
int
push
cwtl
pushf
div
mov
ljmp
ret
sbbb
push
sub
out
test
inc
sub
enter
jmp
mov
pop
mov
ja
dec
mov
push
rcrb
enter
mov
mov
loop
cmpb
or
push
bound
pop
mov
out
mov
lds
lret
or
ret
repz
add
push
fstl
adc
fs
cs
jnp
mov
adcl
daa
fcoml
lds
sbb
mov
lds
insl
jo
leave
aas
insb
pop
icebp
loope
jns
jg
fs
fnstenv
inc
sub
mov
fnsave
mov
sub
stos
and
xor
mov
pop
ss
pop
push
ret
xchg
loope
loopne
fsts
pop
loope
adc
push
add
ja
inc
enter
repz
cwtl
mov
insb
insl
ds
shlb
ljmp
pop
iret
sub
test
jge
jb
pop
mov
cwtl
cmpsb
out
jp
add
inc
test
push
out
mov
xor
gs
cwtl
popa
and
mov
shll
dec
outsb
lahf
out
lods
inc
cmp
icebp
test
sahf
pop
testb
lds
iret
dec
mov
mov
call
push
repnz
bound
pop
mov
js
or
in
sbb
out
popa
add
inc
jne
mov
mov
outsb
nop
push
mov
pop
jle
fiadds
cmpsb
dec
scas
mov
ljmp
and
sbb
cli
jl
mov
out
add
dec
mov
sub
add
push
sahf
out
ret
pop
pop
pop
add
stc
or
les
ret
in
jae
cmpsb
repz
pop
hlt
mov
sub
jmp
shl
ret
inc
iret
fdivs
jo
mov
loopne
les
jbe
sub
or
jle
loope
subb
test
mov
sahf
add
repnz
push
or
cli
repnz
loop
inc
push
mov
in
cmp
insl
pop
xchg
mull
mov
fcmovu
add
fisttpl
add
lret
xor
jae
inc
sbb
add
xchg
arpl
dec
jecxz
and
idiv
sbb
in
mov
lahf
lock
mov
mov
and
and
daa
pop
xchg
sbb
ds
je
mov
cltd
icebp
insb
jnp
pushf
ret
and
sbb
mov
mov
test
adc
bound
ret
cmc
pop
add
dec
hlt
adc
push
in
shll
sahf
inc
sbb
cmp
out
and
mul
cmc
fld1
jne
lods
vdivpd
or
mov
cmp
imul
nop
repz
xor
mov
fistpl
mov
sub
jmp
sti
pop
je
jmp
push
xchg
jae
pushf
mov
inc
fildl
pushf
jo,pn
bound
xchg
sbb
adc
nop
push
fmul
or
pop
stos
or
sbb
jmp
jl
icebp
fistpl
jno
nop
jns
subl
movsb
pop
mov
xor
dec
cmp
sti
fnstenv
lods
hlt
clc
add
sbb
dec
ds
test
out
and
testl
mov
jbe
frstor
dec
scas
es
jo
in
scas
movsl
inc
enter
aad
js
xlat
push
sub
add
push
sbb
mov
pop
cmp
cmpsb
mov
mov
add
push
insl
sub
fwait
push
cwtl
pop
bound
xchg
pop
jmp
inc
mov
bound
popa
and
cmc
and
jne
shll
xchg
dec
sbb
sbbb
int
or
outsb
imul
test
mov
pop
fs
ja
and
xor
mov
inc
rcll
xchg
add
popf
mov
jg
jge
cmpsl
lret
mov
pop
std
scas
mov
lret
add
cmc
imul
lds
mov
xlat
mov
in
push
push
insl
cmc
fwait
push
inc
mov
stos
adc
or
das
xchg
add
cmp
push
out
insl
jmp
lahf
ljmp
repz
xor
int
inc
pop
xchg
push
pop
add
mov
cmpsb
dec
sbb
notl
aaa
shrl
mov
lds
pop
xchg
xchg
shlb
adcb
and
sti
cmp
out
mul
lods
data16
idivl
aaa
and
int3
fisttps
imul
add
cmpsb
adc
jae
and
daa
or
lret
or
fnstenv
and
lods
es
push
cs
fisubl
push
dec
jnp
mov
add
pop
cmc
pop
lahf
dec
mov
int
add
leave
test
rorb
jns
pop
mov
jmp
out
jg
dec
imul
inc
movsl
scas
xchg
lret
cmc
xor
pop
mov
popl
lcall
sub
daa
pop
push
addr16
mov
repz
sbb
jae
push
fnstsw
xor
cwtl
adc
es
aam
pop
fistpll
pop
pusha
enter
pop
rclb
ret
mulb
inc
sub
pop
loope
insl
and
jne
and
loopne
lahf
ljmp
fidivs
js
dec
out
sbb
mov
cwtl
sbb
push
push
clc
jnp
lret
hlt
jnp
inc
fimuls
lds
or
nop
pop
xlat
add
jo
dec
add
cmpsb
cld
scas
pusha
loope
lock
jbe
jge
xlat
lods
fiaddl
jl
and
std
cmp
shrb
out
pushf
cmp
mov
js
xchg
sbb
dec
ss
sbb
xchg
inc
push
bound
and
push
push
xchg
std
sub
mov
outsb
outsl
jae
addr16
rorl
dec
or
mov
jo
and
add
cld
or
ja
stos
outsl
bound
mov
lods
or
pop
fisttpl
jecxz
int3
add
pop
mov
iret
dec
inc
ret
imul
and
fildll
outsl
sub
push
cmp
pop
mov
lods
lds
dec
popf
pop
js
popf
mov
inc
sti
aas
pop
add
push
mov
aaa
xchg
testl
lods
push
mov
push
sbb
or
xor
rcll
fs
lods
mov
nop
sahf
or
xchg
inc
or
lods
xor
push
mov
sbbl
test
insb
dec
insl
mov
insl
or
sbb
push
push
sbb
jp
loop
cs
inc
mov
divb
aad
and
scas
sbb
icebp
jmp
mov
dec
push
adc
daa
push
xor
inc
sub
adc
pop
lods
call
or
lock
pusha
xchg
adc
rorl
repz
dec
inc
fwait
mov
in
popa
lret
loopne
or
hlt
inc
mov
sbb
out
mov
jmp
cli
xchg
stc
sub
mov
mov
adc
xor
popw
pop
movb
mov
sbb
and
add
imul
push
aaa
lret
in
mov
jmp
mov
sub
mov
pop
data16
push
xor
lahf
jp
not
movsl
push
xor
lret
mul
sti
xchg
adc
dec
mov
cltd
test
cmpsb
jo
jnp
and
jg
outsb
pop
int3
jmp
loopne
fcomps
ret
jge
je
imul
loopne
lods
jl
pop
jp
ficoms
sbb
fisttpl
mov
pop
in
jne
and
inc
inc
mov
sub
adc
imul
mov
pop
in
sbbb
scas
das
mov
das
stos
test
mov
inc
in
inc
mov
test
mov
jno
dec
adc
rclb
enter
lock
icebp
stc
mov
into
inc
das
pop
xor
lret
mov
outsb
gs
dec
mov
test
xchg
cmp
inc
test
push
pop
and
cmp
add
cli
stos
out
ret
or
pop
fadds
jns
dec
mov
xchg
cld
je
mov
imul
int3
or
enter
lret
xor
cmc
sbb
adc
loop
xchg
daa
mov
out
mov
scas
mov
stos
inc
jl
jle
test
lret
push
sbb
mov
test
push
cmp
ret
mov
fwait
add
les
scas
mov
cmp
mov
xlat
test
sti
mov
aam
inc
and
push
loopne
clc
aam
lcall
mov
xchg
cmpsl
push
test
pushl
xor
inc
int3
mov
xor
stos
pop
xor
pushf
inc
insl
pop
mov
movsl
add
pop
jbe
xor
shlb
mov
ljmp
fdivl
push
in
movsl
roll
dec
js
out
test
cmpsl
loope
inc
adc
jo
mov
jns
mov
adc
cltd
xor
movsb
push
cmp
push
pusha
cmp
out
mov
aaa
lret
test
popa
pusha
int3
inc
out
leave
mov
adc
fwait
mov
sub
sarl
mov
add
or
xor
dec
inc
scas
mov
shlb
daa
mov
fimuls
scas
mov
call
imul
js
mov
out
xchg
push
sub
in
andl
add
mov
aad
adc
fstps
movsl
mov
sbb
arpl
dec
xchg
mov
inc
repz
lret
rcrb
aas
aas
sarl
cmp
sub
cld
inc
pop
test
push
push
test
ja
and
xchg
cmp
fbstp
movsb
inc
or
movsl
inc
pop
cmp
mov
les
jl
and
push
test
sub
mov
or
and
stos
mov
and
lret
push
aad
adc
cmp
cmpsb
sbb
adc
or
fsub
or
stos
test
call
data16
lret
push
pop
inc
cs
mull
loopne
mov
ret
sub
inc
push
mov
ja
es
stos
popf
jecxz
stos
push
adc
xchg
dec
inc
arpl
fstp
shlb
or
add
mov
mov
jmp
mov
or
outsb
add
outsb
stos
out
shll
mov
sbbb
pop
jbe
inc
adc
jne
dec
into
push
pop
jno
insb
mov
push
pop
repz
jno
mov
mov
push
xor
mov
pop
js
insl
xchg
lcall
push
aad
xor
out
rorb
shlb
pop
cmp
push
leave
aam
xor
mov
imul
loope
pop
mov
cmc
jne
cmpsl
jg
mov
out
dec
cmp
test
sbb
pop
lods
and
jne
aaa
mov
inc
xor
jnp
fwait
pushf
lods
sub
in
jb
inc
mov
fs
mov
push
ljmp
insl
out
popa
mov
xchg
sbb
mov
aad
inc
jae
add
cmpsl
rcrl
mov
loop
adc
adc
cli
aam
sub
sub
cltd
mov
mov
leave
js
scas
xchg
and
aas
clc
adc
push
movsl
push
fdivr
or
enter
fmuls
in
mov
push
out
push
dec
out
cmp
push
sub
int
xchg
shrb
lret
adc
mov
test
or
mov
rcrb
cwtl
cwtl
cmp
xchg
movsl
add
mov
out
scas
dec
je
aas
pop
jmp
mov
fisubrl
mov
test
inc
xchg
inc
dec
dec
movb
xchg
gs
repnz
cmp
es
jmp
leave
inc
subl
lcall
pop
inc
push
sbb
jg
cmpsb
jl
inc
pop
jnp
les
push
pop
lret
shlb
out
or
popf
jecxz
mov
jns
add
mov
loopne
push
pop
xor
dec
inc
or
sti
daa
xchg
sub
push
lods
popf
into
cmp
sbb
cmp
icebp
aam
jp
jmp
push
jne
lret
fs
clc
jne
fdivr
out
cmp
aam
ja
and
inc
repnz
sub
sbb
enter
pop
bnd
adc
jbe
dec
popf
pop
popa
cwtl
cmpsb
dec
xchg
shl
and
sub
sub
imul
cs
xchg
out
sub
loope
dec
dec
jae
imul
or
test
fdiv
je
ret
and
xchg
mull
roll
inc
dec
cmp
mov
gs
out
mov
dec
hlt
push
pop
adc
or
push
adc
and
and
rcrb
jl
push
ret
cltd
cmpsb
mov
adc
outsl
xchg
pop
xor
xor
dec
cmp
cmp
dec
and
adc
jnp
add
decl
cmpsb
xor
push
xchg
mov
test
imul
inc
add
mov
movsb
lock
daa
sbb
pop
fxch
je
pop
fsubrs
add
push
je
sbb
mov
aas
push
enter
add
jae
push
adc
jge
xor
xor
mov
mov
dec
cmp
push
lret
push
daa
in
mov
xchg
loop
or
out
pop
xchg
jmp
or
in
jl
sahf
repnz
pop
fistl
or
lods
jne
push
ss
dec
cmc
xlat
inc
mov
sbb
mov
cld
push
sbb
rorl
add
sbb
mov
ficomps
jnp
jmp
mov
dec
jns
cmc
std
adc
rcrl
sub
xchg
jge
xchg
arpl
and
jb
and
sbb
in
enter
jb,pt
ret
lret
adc
inc
cwtl
ret
scas
dec
sbb
dec
test
je
lods
push
dec
dec
xchg
test
mov
hlt
lahf
jp,pn
xchg
jg
jne
add
daa
and
rcrl
rcrl
xchg
es
and
clc
push
mov
aaa
xchg
insb
pop
mov
aas
mov
rorb
lcall
adc
sub
cwtl
cmp
adc
std
test
stos
stos
scas
leave
or
call
insb
cltd
sti
and
mov
xchg
push
lret
fwait
lods
xchg
sti
mov
flds
mov
jbe
jg
adc
lcall
cwtl
in
lds
cld
test
mov
cmp
sub
cli
sbb
push
shrb
push
fstl
push
and
js
xchg
imul
repnz
pusha
test
fnsave
cmp
adc
in
sbb
adc
sti
out
ss
stc
iret
fisubl
fcomps
fists
mov
and
cmp
or
mov
adc
sbb
adc
mov
cmpsl
mov
ss
push
lahf
mov
sub
dec
add
adcb
push
pop
jae
inc
push
mov
inc
dec
clc
pop
out
bound
push
or
cmp
adc
loopne
andb
or
jecxz
jno
mov
popa
inc
scas
insb
sbb
and
lcall
or
mov
ret
adc
in
cmp
xchg
mulb
cltd
hlt
mov
movsb
or
cmpsl
test
sti
imul
imul
xchg
push
jl
dec
lods
imul
push
shr
mov
add
imul
adc
scas
pop
iret
das
and
loopne
and
and
add
pusha
scas
enter
or
ja
nop
lcall
scas
jmp
nop
aas
pop
sbb
adc
ljmp
adc
rclb
pushf
mov
mov
mov
lds
xchg
inc
fwait
sub
inc
loope
gs
fdivrp
jo
sbb
inc
aas
sub
into
xchg
cli
add
nop
mov
sahf
iret
jle
subb
dec
dec
das
xor
loopne
imul
clc
inc
shrl
icebp
jmp
push
nop
jno
sbb
mov
insl
pop
fwait
std
xchg
pop
add
xlat
aam
mov
push
add
movsb
mov
dec
sbb
mov
mov
mov
enter
xchg
xor
pop
xor
sahf
outsb
std
sahf
xchg
adc
loop
mov
cmpsb
inc
mov
push
jbe
or
inc
adc
xchg
and
daa
gs
dec
call
jbe
xchg
fwait
or
push
aaa
loopne
adc
add
sbb
aad
push
mov
fldenv
pop
out
stos
loop
push
push
sub
outsl
call
subl
rcrl
mov
imul
repz
pop
fadds
std
dec
push
pop
icebp
mov
push
jns
test
sbb
xchg
add
pop
inc
push
outsl
call
pop
mov
fstpl
mov
xor
fldt
push
out
cmp
sub
and
add
loop
popa
popl
incb
mov
adc
fsubs
sub
insb
jmp
test
or
in
add
dec
repz
mov
js
xchg
jno
fs
addl
mov
lcall
cmp
push
jmp
out
pop
andl
rorb
cmp
adc
fiaddl
in
je
mov
cmpsl
popf
aaa
inc
mov
popf
pop
imul
push
inc
dec
push
repnz
xor
mov
and
pop
pop
in
adc
imul
jns
pop
inc
rcll
rolb
dec
dec
out
popf
mov
das
jae
cmp
pushf
jecxz
stos
xor
outsl
push
pop
hlt
les
sti
mov
jecxz
arpl
sub
lds
stc
cmp
sub
lds
mov
lock
popf
lods
mov
scas
jne
xchg
scas
sub
fildll
mov
sub
adc
aad
icebp
jg
ds
les
xchg
cmc
scas
add
jb
data16
mov
or
jg
mull
adc
cmp
shl
push
inc
ss
xchg
sti
xor
out
mov
mov
push
iret
fxch
lock
lahf
dec
pushf
daa
xor
mov
jl
arpl
jno
mov
adc
push
enter
lcall
fcmove
xor
mov
es
and
push
pusha
jecxz
aas
push
cltd
mov
sbb
and
test
lcall
int
inc
sbb
jecxz
mov
dec
sub
mov
xchg
cmp
and
cmp
push
ss
bound
nop
add
stos
cmp
int
outsb
dec
test
icebp
push
lahf
popl
loopne
sub
sbb
push
ret
xchg
adc
mov
sub
pop
lock
outsb
test
movsb
int
dec
mov
mov
mov
repnz
pop
dec
add
mov
test
sub
xchg
ret
fiadds
fwait
mov
test
sarl
fstl
ljmp
push
cmp
pushf
mov
mov
dec
jl
add
lock
inc
mov
in
imul
daa
int
ret
adc
or
add
pop
mov
or
jae
fstl
mull
lods
lret
addb
jb
xor
xchg
or
stc
rcr
sahf
aaa
mov
mov
mov
adc
fadds
clc
xchg
ret
sbb
cmpsl
sub
lcall
add
and
lods
mov
hlt
push
gs
push
arpl
popa
popa
mov
ds
arpl
test
dec
ret
loope
stos
cmp
andb
xlat
arpl
inc
jge
mov
fwait
push
mov
pop
mov
sbb
ret
cmp
xchg
mov
lds
inc
push
fldt
loop
or
sub
sbb
inc
inc
pop
push
push
pusha
out
sahf
pop
pop
push
bound
out
sar
mov
ret
stc
cmp
and
mov
inc
pop
and
dec
push
jecxz
sub
jns
ret
jno
int
sbb
jnp
xlat
add
ljmp
cmp
mov
jmp
xchg
stos
xchg
call
cwtl
outsb
pushl
cmpsl
into
stos
dec
iret
push
flds
loope
mov
arpl
inc
aaa
xchg
dec
popf
sub
xor
jnp
sarb
push
jmp
test
rcrb
pushf
inc
mov
pop
jns
pop
loope
add
pusha
dec
push
sub
cmc
inc
repz
jmp
xor
cmp
jb
jl
cli
pop
cmp
dec
cltd
jbe
ljmp
out
test
push
push
and
roll
mov
xlat
dec
adc
push
out
ss
adc
pop
icebp
rcr
pop
jo
jno
insb
pop
xor
andl
outsl
xchg
data16
mov
pop
jge
fidivrs
lods
jecxz
out
mov
mov
push
aad
add
xchg
shl
fxch
pop
and
aas
fldln2
xchg
sbb
add
cmp
add
leave
cmp
insl
adc
outsl
adc
push
xchg
lods
adc
jle
inc
pop
xchg
push
mov
mov
addb
mov
ror
xchg
mov
lcall
pop
insb
out
aad
mov
nop
pop
mov
xchg
insl
sbb
push
add
iret
lods
js
or
adc
add
gs
mov
xchg
jecxz
pop
dec
sub
lods
sub
jmp
push
xor
lcall
outsl
jg
test
xor
js
das
sarl
add
pop
or
jp
push
push
xchg
notb
fmuls
push
aad
nop
icebp
enter
pusha
mov
repnz
lcall
push
arpl
stos
push
fisttpll
out
xor
adc
cmc
aaa
mov
sub
sub
fstps
push
outsb
aam
aaa
lahf
int3
push
mov
pop
aad
inc
stos
int3
fs
out
jnp
sub
pop
filds
testl
out
lret
mov
sbb
out
xrelease
cld
loopne
out
mov
xchg
add
aaa
dec
iret
push
iret
lret
push
jecxz
jo
jno
xchg
clc
jmp
jns
jb
subb
inc
aas
mov
adc
lahf
or
repz
into
cmp
dec
pop
jg
in
and
push
dec
dec
sbb
mov
xlat
sub
sub
push
mov
or
add
lahf
adcb
mov
pop
push
mov
out
cwtl
aas
dec
adc
dec
and
ja
mov
and
sub
xor
sub
and
adc
gs
dec
bound
sbb
dec
sub
outsl
lret
xor
mov
mov
movsl
jne
or
aad
cmp
jbe
cmpxchg
mov
fisubl
pop
imul
or
push
or
xchg
mov
sbb
push
clc
arpl
cltd
cmp
dec
out
leave
dec
xor
push
mov
leave
jle
dec
lods
cmp
xchg
jbe
shlb
add
push
outsb
insb
fdivrl
into
xchg
jnp
lahf
pop
mov
xchg
les
add
sbb
and
shrb
loop
test
push
xor
cmp
dec
sbb
mov
shll
insl
es
lods
adc
hlt
out
xor
inc
push
data16
out
stc
mov
outsb
pop
mov
repz
push
clc
testl
out
hlt
cmp
xchg
and
push
lea
repnz
jb
notl
jnp
mov
fdecstp
js
out
enter
movsl
je
insb
pop
push
popa
pusha
xor
ret
lods
xchg
jecxz
mov
cmpsb
sbb
sbbb
ror
enter
cmp
sbb
daa
mov
jecxz
sub
or
pushf
jbe
jecxz
mov
xor
ret
add
adc
addb
test
in
xor
movb
das
ja
ret
adc
mov
mov
pop
mov
jge
push
jp
push
sbbb
push
dec
sub
out
adc
call
shlb
mov
mov
pop
push
shl
pop
fsubr
sub
xor
clc
xchg
aaa
xchg
push
add
xor
int
lahf
inc
mov
daa
enter
ret
mov
hlt
dec
dec
sbb
jns
adc
lahf
mov
repnz
adc
or
outsb
pop
jb
push
int
cmp
xor
xor
not
push
mov
inc
jg
push
cld
mov
jnp
mov
dec
xchg
push
in
sti
add
push
add
inc
push
movsl
into
subl
xchg
pop
stos
pop
data16
sbb
cwtl
lret
sysret
push
lret
mov
pop
cltd
mov
jns
je
in
xor
clc
js
les
lea
mov
rcr
mov
movsb
negb
dec
or
in
clc
add
negb
mov
movsl
jne
jl
fsts
mov
push
repz
push
push
sub
fwait
lds
in
aad
faddl
repz
mov
scas
xchg
dec
mov
rolb
push
dec
into
jae
sar
pop
arpl
inc
enter
or
pop
or
cmc
clc
enter
outsl
lahf
nop
jns
pop
sbb
lods
jae
sub
mov
out
dec
insl
mulb
imul
outsb
mov
mov
and
and
pop
ljmp
arpl
pusha
and
lret
or
repz
push
sbb
adc
pop
xchg
inc
cmp
jmp
jbe
sbb
xor
push
or
dec
cmp
jnp
adc
shll
ja
mov
xchg
shll
out
xchg
loope
into
mov
add
push
cmp
cmpsb
dec
xor
mov
push
add
jb
idiv
push
pop
insb
pop
in
pusha
out
or
adc
stos
mov
fsubl
aad
or
aaa
int
or
jle
and
call
sbb
lcall
ds
daa
gs
pop
rol
or
lret
in
je
ffree
fcomip
lds
gs
aad
lea
xor
insb
jns
cmp
fadd
jns
add
or
xor
pop
fiaddl
xchg
js
fcompl
shll
or
mov
sahf
lock
lret
dec
fnstsw
jg
adc
cmp
sbb
inc
mov
out
add
sub
ret
jge
push
or
pop
xchg
push
mov
cmp
int
xchg
push
mov
xchg
and
push
js
ja
imul
mov
lret
fwait
rcrl
loopne
std
adc
dec
in
ss
cli
sbb
call
out
pop
aam
cmp
push
test
es
hlt
mov
pop
jmp
lds
push
iret
mov
inc
fistps
cmp
out
cwtl
adc
addr16
inc
aaa
movsl
add
sti
in
mov
ret
roll
nop
out
xchg
ss
in
jo
push
pop
mov
jge
orb
and
add
xor
mov
sbb
jb
shll
adc
test
sub
add
loope
fwait
pop
stc
push
sti
stos
lock
sub
inc
movsb
mov
mov
dec
mov
push
push
clc
loopne
mov
add
push
sbb
xor
mov
pop
xor
ret
adc
bound
and
das
cwtl
add
mov
fistl
aad
ljmp
push
adc
nop
cli
pop
movsb
xchg
or
repnz
and
ss
mov
ret
rcrb
xchg
xchg
cwtl
notb
and
ret
in
or
jnp
push
fisttpl
xlat
test
add
xchg
enter
hlt
ja
xchg
mov
mov
mov
mov
enter
mov
ja
out
mov
movb
cmp
ss
cmpsb
xor
aad
fldt
or
sub
xchg
jp
mov
scas
mov
jle
pop
xchg
lahf
icebp
call
pop
insl
mov
mov
xchg
adc
push
sbb
pop
lds
or
mov
lods
lods
mov
sub
and
and
jg
xchg
cmp
jnp
dec
das
ljmp
xchg
pop
jmp
cmp
das
lock
dec
mov
testb
out
or
sar
mov
mov
or
and
mov
mov
addb
push
and
pushf
xor
sub
imul
negl
popa
cmc
dec
mov
insl
popa
xor
lods
sbb
sbb
inc
cli
test
daa
les
fbld
jmp
rorb
lods
shrb
sti
ja
mov
cli
sub
cmp
xor
into
mov
out
xor
and
jl
jp
and
and
cmp
lods
je
dec
xchg
pop
push
jbe
in
test
das
mov
test
pop
insl
mov
pushf
jb
je
sti
hlt
adc
negb
push
hlt
sar
jg
sub
dec
call
sahf
out
cmp
fnstsw
adc
pushf
lds
sbb
xor
lock
jns
sub
xor
and
and
popf
mov
les
sub
and
mov
sub
mov
sub
icebp
popl
fiaddl
mov
ret
enter
ret
jge
adc
repnz
and
sbb
push
rorl
std
loopne
or
sbb
mov
fiaddl
ret
xchg
mov
and
mov
jne
ja
test
adc
popf
mov
test
sbb
fisubrl
hlt
dec
nopl
insb
xchg
ret
sub
mov
shrb
out
stos
xchg
push
enter
jl
mov
jl
mov
sarb
adc
addr16
repz
rol
or
lret
movb
pop
outsb
jns
cmp
add
popf
push
lcall
xchg
jl
or
mov
movsl
test
sbb
jecxz
daa
icebp
cltd
loope
sbb
add
pop
jne
sbb
shr
or
loope
in
mov
je
xor
jmp
in
imulb
rcl
inc
xchg
cwtl
enter
sbbl
js
jl
negl
outsb
insl
jbe
scas
dec
jp
or
loope
stos
and
imul
stc
sub
sub
lods
ja
lcall
clc
sub
pop
or
mov
xchg
movsb
mov
push
into
sahf
jecxz
arpl
out
rorb
or
fisubl
xchg
jmp
jae
dec
jo
loop
mov
test
xor
sbb
xor
aam
lret
xchg
push
inc
mov
pop
aam
sti
cmp
cld
cltd
sahf
dec
and
or
inc
jp
lahf
jg
jmp
shll
out
xchg
adc
lahf
in
add
xorb
xorb
jbe
jge
movsb
adc
insb
pop
and
ret
pop
xchg
or
sub
rorl
les
and
repz
mov
lea
popa
cmpsl
pop
jae
ret
test
or
jmp
dec
fadds
outsb
sti
pop
loope
pop
pusha
pop
inc
push
les
dec
add
dec
decb
sbb
or
push
cltd
out
jns
mov
push
mov
imul
das
pop
aad
lods
scas
fsubs
pop
adc
and
jbe
dec
cmp
mov
fs
fsubrs
rolb
fwait
pop
adc
js
stos
inc
pop
cmp
repz
cld
fdivrs
cmp
sbbl
dec
mov
and
sbb
adc
sbb
xchg
aas
adc
adc
icebp
or
push
js
je
mov
push
jb
repnz
mov
add
fs
pushf
add
enter
xchg
arpl
aad
or
lds
rcr
pop
xlat
enter
sahf
push
inc
insl
fwait
popf
clc
ret
mov
loopne
ljmp
mov
call
push
insb
push
ror
mov
in
and
std
jnp
sub
xor
pop
out
dec
inc
and
mov
sub
shl
sete
cmp
push
sahf
jge
mov
in
movsb
pusha
dec
sarl
out
mov
cmp
popa
xor
std
ja
scas
bnd
push
je
les
and
mov
mov
pop
dec
inc
add
jne
and
sysexit
jecxz
xchg
adc
bound
pop
dec
in
cmpb
mov
bound
sub
cmc
mov
out
xchg
aaa
sub
mov
cwtl
xchg
push
push
fsubs
mov
lret
leave
cmp
push
outsl
cmp
insl
std
fildl
jl
xor
lret
pop
mov
sbb
or
js
jge
xchg
mov
popf
dec
bnd
add
or
ja
sbb
and
jecxz
xlat
xchg
mov
jno
call
lcall
clc
push
sbb
into
into
repz
cmp
xlat
pop
mov
out
fnclex
sub
and
xor
fwait
adc
pop
sbb
insb
pushf
shlb
fisttpll
loope
jno
stos
in
mov
xchg
fs
mov
daa
mov
iret
repz
and
jns
fnstenv
push
aam
jmp
scas
xchg
shlb
pop
outsl
imul
dec
pusha
jo
incl
sub
ja
mov
jno
mov
add
decl
dec
call
dec
xlat
pop
adc
jne
xchg
leavew
repnz
lret
lods
shrl
mov
xchg
lea
fstps
ds
fists
test
push
lret
dec
mov
cwtl
imul
ss
inc
jg
fsts
cmp
mov
outsl
jns
movsl
sub
xchg
add
nop
mov
cmp
icebp
testl
ds
jns
dec
fstl
idivb
jnp
mov
and
ja
stos
cmpsb
adc
enter
scas
nop
xchg
add
nop
sahf
sub
sbb
sbb
mov
addl
sti
lds
pushf
mov
pop
xor
les
sbb
outsb
dec
sbb
xchg
jns
addr16
push
data16
lods
push
out
scas
pop
push
and
adc
or
sbb
mov
repz
loope
inc
adc
mov
mov
ss
out
mov
adc
stc
cmp
fcmovu
pop
jnp
loope
fisttpll
inc
idivl
mov
mov
sbbl
fwait
sbb
test
leave
fisubs
std
jnp
insb
adc
xchg
jns
push
ja
les
sahf
jne
dec
sub
mov
xchg
mov
movsb
jnp
push
pop
cld
sbb
push
ret
push
xchg
test
adc
adc
mov
fucom
push
int3
in
xor
icebp
cmp
jmp
pusha
mov
dec
pop
stos
fisttps
mov
rorb
fstp
and
repz
add
xor
cmpsl
daa
ss
cmpsl
push
shlb
dec
xor
ss
sti
jle
and
cld
fucomp
pop
inc
aam
outsb
push
xchg
xchg
movsb
sahf
stos
cmpsl
sub
fcoms
fildll
aaa
clc
push
nop
cmp
insb
inc
mov
sarb
jle
loop
inc
push
out
cltd
push
push
mov
mov
push
xchg
repnz
mov
mov
push
or
fistpll
xchg
fwait
daa
imul
test
clc
jb
fwait
sub
lds
cld
out
hlt
dec
xchg
js
push
jno
push
cmpsb
js
pop
out
outsb
test
sub
xor
addr16
jnp
mov
push
je
sub
dec
push
sub
nop
adc
mov
int
cmp
jg
push
jecxz
pop
pop
jae
aas
outsb
dec
or
lcall
enter
xchg
notb
lock
mov
ds
stos
lret
sbb
lds
ljmp
push
push
fdivp
mov
sub
pop
lods
shrb
daa
cmp
mov
cwtl
lret
ret
data16
mov
dec
dec
stc
aad
dec
xlat
dec
mov
push
jno
lea
xchg
jmp
jnp
ds
pop
sbbl
xor
scas
jp
mov
xchg
aad
adc
sub
cld
and
imul
imul
addr16
sbb
mov
scas
mov
cs
adc
mov
push
imul
xor
inc
iret
jne
fs
imul
cmp
leave
outsb
xor
mov
fdivs
adc
in
xchg
rorl
sbb
scas
clc
fsubrl
rolb
mov
shlb
repz
imul
jg
subb
sbbl
shrl
adc
cli
xchg
std
idivb
lock
mov
xchg
pop
lahf
cmp
ja
fimull
aas
cwtl
dec
cmp
fcmovb
loopne
add
sub
cwtl
mov
push
lods
dec
dec
fldenv
cmpsl
jns
adc
mov
cmpb
rclb
aaa
pop
or
xor
pop
movsb
cmp
negb
dec
pop
push
movsb
lret
mov
mov
or
xchg
repnz
inc
xchg
in
lcall
and
inc
idiv
xor
jae
rcl
jbe
test
pop
cwtl
cmc
shl
lock
mov
mov
and
lret
mov
mov
cli
lods
cmp
pop
add
or
out
sub
pop
push
popf
and
dec
in
dec
and
jp
popa
stos
mov
mov
jnp
dec
mov
fwait
mov
dec
outsb
mov
cmp
adc
shrl
adc
cld
ret
call
and
dec
es
fiaddl
lock
xor
jns
xor
lcall
and
mov
stos
cmc
cmp
ret
or
ja
int3
into
jno
adc
dec
popa
pop
push
dec
call
dec
hlt
aaa
loop
das
fstps
push
push
jmp
test
test
mov
test
mov
in
jno
mov
aaa
add
sub
and
and
pop
fidivs
sub
movsb
movsb
jbe
mov
ficomps
xchg
or
add
ret
push
pop
push
mov
lahf
cmpl
mov
gs
les
lock
ret
cmp
or
adc
in
xor
shrb
xchg
xchg
imul
loope
ret
inc
pop
jl
mov
sub
pop
sbb
loope
xchg
es
loope
adc
and
incl
sub
fisttpll
inc
mov
repz
mov
iret
dec
or
fidivrl
pop
mov
hlt
fnstenv
sub
mov
enter
rclb
xchg
jo
fwait
cli
test
xor
add
mul
imul
sbb
and
aaa
dec
jmp
mov
stos
and
popa
rclb
or
aas
clc
fisubrs
dec
xchg
lods
mov
or
in
inc
les
cmp
sub
push
inc
mov
sub
arpl
cli
push
ret
xor
shll
fs
lret
int
sub
hlt
andl
stos
mov
sbb
adc
in
stc
movsl
loope
sbb
push
mov
jge
popa
xchg
push
pop
dec
dec
shll
out
add
adc
and
movsl
jl
sbbl
imul
mov
or
in
and
mov
aaa
and
out
mov
fdivs
sbb
cld
lock
mov
jae
mov
lods
and
mov
sti
cmp
pop
mov
fwait
inc
fnstsw
jmp
pop
fmuls
dec
arpl
inc
dec
or
mov
nop
pushl
jp
push
adc
popa
or
cli
xchg
pop
or
aas
sbb
mov
ja
sarl
adc
sbb
pop
cmp
xor
mov
mov
popf
or
test
mov
mov
xchg
mov
incb
lret
data16
repnz
mov
cmp
add
jne
les
ret
test
das
icebp
or
mov
xor
push
xor
test
out
inc
idivl
push
pop
mov
ror
xchg
lahf
lock
jb
pop
mov
mov
insb
pop
std
arpl
pop
or
lods
xchg
nop
call
lret
xor
mov
jnp
dec
and
sbb
imul
mov
fisubrl
inc
daa
lods
cmpl
inc
sub
add
daa
pop
mov
xor
xchg
mov
cld
mov
sbbl
addr16
addr16
pop
imul
xchg
mov
aam
rclb
dec
stos
mov
add
nop
das
sub
lds
mov
fwait
test
and
xor
popf
js
xor
sub
es
pushf
cli
adc
add
pop
rorb
dec
lahf
cmp
out
mov
mov
popa
dec
call
ja
lret
aaa
pop
loopne
adc
mov
push
into
xor
outsb
incl
inc
cmpsb
out
cld
jg
cmc
aam
xchg
jge
pop
cld
ljmp
in
int3
inc
pop
push
ret
jae
fcmove
cmpsl
pop
pop
rclb
daa
cmp
xor
push
test
jg
insb
std
xchg
push
in
xor
mov
call
xor
xorb
shrb
jb
xor
ds
push
aaa
cmpb
int
repz
jmp
dec
pop
out
xor
negb
xor
push
mov
mov
sub
dec
enter
hlt
adc
fwait
dec
in
push
mov
xor
add
rcl
mov
cmp
aas
mov
sbb
mov
fsub
mov
imul
pop
fistpl
sahf
or
scas
shll
stc
xor
rcll
stos
dec
pop
sub
xchg
lcall
gs
leave
cli
push
lock
cli
icebp
mov
incb
inc
mov
inc
jo
lret
daa
push
jne
inc
cmp
xor
call
sbb
add
sahf
push
arpl
jmp
leave
stos
repz
push
repz
gs
pop
loope
movsl
mov
or
arpl
and
cltd
pop
mov
inc
pop
or
fbld
or
loop
cmpsb
sbb
rclb
mov
jne
call
pop
mov
dec
sbb
mov
adc
and
dec
mov
stos
int3
mov
or
or
es
pop
xorb
out
add
lcall
inc
xor
add
cld
xor
iret
pop
popf
sbb
movsl
pop
xchg
test
ljmp
or
jns
loop
sbb
stc
lahf
inc
lcall
cld
push
push
lods
sbb
cmp
xchg
out
mov
fistpll
inc
dec
mov
ret
rclb
jno
mov
fbld
repz
sbb
inc
dec
xor
push
or
enter
negb
sbb
shll
inc
cmc
jle
aam
inc
inc
mov
cmpsl
jnp
push
fbstp
add
lret
movsb
inc
sub
dec
fldt
std
inc
aaa
dec
mov
cmp
mov
jmp
mov
mov
ja
bound
mov
dec
test
lcall
add
pop
insl
pop
dec
lahf
mov
cmp
xchg
mov
mov
fwait
cmp
repz
cwtl
icebp
jle
inc
sarl
into
mov
cmp
cmp
pop
sahf
inc
sarb
dec
fisttpl
adc
and
adcb
dec
repz
into
push
dec
inc
fwait
cmp
repnz
sbb
dec
push
xor
sub
mull
pop
or
cmpsb
sub
add
popfw
cmp
loope
dec
mov
push
dec
push
inc
js
cmc
in
sahf
or
aaa
in
xor
jns
push
out
in
mov
cmp
test
outsl
shrb
inc
hlt
aaa
loop
test
pop
mov
es
push
addb
sub
mov
ret
clc
mov
sbb
fstpl
cwtl
sbb
xchg
ljmp
sahf
cmc
inc
xchg
aam
push
xor
jo
add
jb
lret
sub
xor
cmp
cmpsl
in
push
shlb
mov
cmp
mov
test
jne
adc
mov
adc
push
push
inc
mov
inc
lods
push
jmp
xchg
scas
jmp
popa
jge
pop
fisttpll
shrl
mov
scas
in
shll
mov
pop
adc
cltd
pusha
imul
jno
mov
jp
jne
mov
jo
dec
dec
ds
adc
dec
push
jns
sub
inc
dec
insb
cli
add
cmp
ret
cmp
test
out
out
aad
push
xchg
aam
cmp
mov
mov
rorb
push
adc
or
mov
push
inc
imull
cmp
sub
fmuls
sub
lret
mov
pusha
ja
sti
into
rorb
stos
cmp
in
push
rorl
movsb
outsb
jbe
xchg
sbb
xchg
lcall
mov
sbb
ds
mov
repz
mov
mov
pop
pop
outsl
add
jecxz
lea
test
cld
mov
dec
ja
and
sub
xchg
ds
add
jb
andb
pushf
in
jns
add
inc
ret
xchg
dec
sti
inc
sbb
dec
mov
js
mov
mov
pop
mov
mov
mov
in
outsb
dec
mov
gs
jge
xor
jle
pop
mov
pushf
std
out
inc
lcall
les
repnz
cmpsb
push
inc
mov
ljmp
out
lock
int
mov
lcall
push
insb
subl
lea
mov
and
fsubr
and
dec
lea
mov
push
cmp
dec
cwtl
mov
adc
aas
pop
and
mov
mov
fnstenv
aaa
jp
sbb
adc
push
mov
inc
fnstsw
mov
mov
inc
pop
mov
popa
sti
insl
xchg
and
jne
xchg
fistpll
sub
xor
and
mov
push
pushf
jecxz
mov
bnd
add
icebp
mov
and
imul
mov
bnd
out
sbb
adc
mov
push
and
cwtl
push
mov
mov
ror
fsubs
inc
cmp
and
and
popf
push
in
ljmp
sub
nop
imul
sub
mov
dec
inc
push
dec
xor
std
jmp
xchg
mov
sbb
inc
push
out
fs
outsb
cmp
xor
pop
lcall
test
popa
sub
stos
test
or
icebp
cltd
mov
sti
pop
bound
adc
sub
xchg
push
es
inc
dec
xor
mov
ljmp
mov
out
aaa
push
pop
mov
mov
mov
sti
cmp
push
push
lcall
std
cwtl
movsb
push
aas
push
sub
adc
movsl
dec
mov
inc
lret
mov
pop
lea
sti
cmp
adc
adc
daa
inc
cld
int
and
in
mov
sbb
xlat
lock
dec
loop
add
cli
movsb
in
decl
sti
ss
xchg
ret
cmp
mov
inc
movsl
dec
pop
jmp
dec
das
cmpb
call
enter
subb
cmp
cli
sbb
ret
sub
int
jmp
mov
push
pop
clc
mov
push
sahf
sbb
arpl
cmp
pop
mov
sbb
mov
xchg
mov
adc
lock
lcall
xor
or
jae
sbb
fdivrs
lock
dec
fsubs
std
sbb
pop
mov
jae
flds
jl
add
fstl
inc
push
mov
or
pop
sbb
jae
push
xchg
cs
fwait
cmp
shlb
adc
mov
mov
mov
sub
fdivr
inc
clc
movsl
testb
jg
ffreep
jb
push
cmpl
xchg
xlat
cmp
xchg
inc
xorl
ja
xchg
iret
mov
popf
mov
fdivr
int3
push
jecxz
push
repz
test
cmp
gs
adc
xchg
jl
xchg
or
mov
inc
adc
sbb
xchg
mov
sub
lret
mov
xchg
pop
pop
lret
lret
insb
sub
pusha
or
imul
xor
mov
sub
push
mov
add
jbe
push
mov
push
xorl
clc
icebp
dec
dec
jg
mov
xchg
xor
ret
repz
ficomps
mov
fsubrs
push
movsl
xchg
arpl
gs
adc
je
adc
jg
inc
cli
in
aas
in
icebp
mov
adc
add
flds
mov
fucomi
or
cmp
das
fwait
pop
sar
inc
xchg
das
sub
sbb
xor
jb
es
fisubrl
add
mov
test
xor
mov
pop
int3
outsb
out
sbb
push
mov
sbb
push
cwtl
lahf
sub
insb
xor
push
adc
mov
stc
mov
dec
mov
pop
adc
dec
dec
cmp
arpl
or
sbb
insb
test
shrl
add
rorb
imul
test
add
inc
mov
fsts
lcall
xorb
cmp
jb
fwait
arpl
inc
stos
ret
gs
mov
mov
or
lahf
push
lahf
addr16
adc
add
repz
scas
in
in
fisttpl
mov
cmpl
rcl
cmpsb
cmc
pop
xor
je
sub
pop
mov
btc
outsl
adc
xchg
and
xchg
push
push
mov
cmp
or
mov
addl
fldl
and
xor
dec
inc
out
aaa
lea
mov
xor
cmc
xchg
ljmp
popf
mov
cmp
add
rcll
sbb
fiadds
clc
cmpsb
sbb
popf
cld
xchg
push
repnz
mov
cmp
sbb
pushf
inc
mov
dec
in
mov
pop
rorl
inc
fcmovnb
jg
xor
mov
lcall
push
test
int
div
pop
cmp
dec
sbb
lcall
inc
add
mov
mov
pop
jo
ja
dec
mov
jp
aas
inc
sbb
mov
sbb
out
pop
inc
imul
mov
cmp
out
jo
iret
cmp
enter
pop
pop
daa
dec
sbb
nop
adc
notb
pop
mov
lret
sub
dec
mov
stos
into
fst
sbb
cmp
fstpl
xchg
cli
int3
add
push
cmpsb
xlat
notb
add
lods
inc
leave
cltd
enter
movsl
push
xlat
or
dec
je
jbe
outsl
xchg
and
repz
sbb
inc
xchg
xor
cmpsb
mov
sub
nop
push
in
mov
shll
pop
dec
out
inc
and
lock
xor
stc
sub
push
pop
mov
test
pushf
adc
std
cmp
jmp
push
mov
cmp
sub
mov
aam
and
insb
jnp
dec
sub
daa
or
xor
sar
xchg
mov
cmp
and
xchg
lahf
jae
xlat
scas
dec
je
add
in
decb
mov
and
cmp
mov
sti
adcb
xchg
mov
dec
mov
cmc
mov
mov
mov
jp
inc
gs
lods
pop
sub
sbb
imul
outsb
cmc
das
int3
push
dec
jge
data16
mov
sub
cltd
stos
or
jns
shll
sub
push
mov
dec
popa
dec
repnz
ret
cmp
mov
movsb
mov
das
lret
cld
mov
or
mov
adc
dec
jmp
sti
xchg
negb
stos
jl
popa
movsl
sbb
add
mov
sbb
hlt
out
pop
dec
jg
repnz
cmp
pop
jl
xchg
pushf
push
jmp
data16
push
dec
mov
and
mov
lahf
lea
mov
mov
sahf
push
jg
in
xchg
lret
shlb
cltd
das
inc
icebp
jg
sub
inc
movsl
push
jno
add
repnz
cmpsb
out
pop
aad
test
mov
stos
xchg
rcrl
jg
fsubrl
fwait
sub
loope
popa
cmp
and
cmp
lds
adcl
imul
add
test
mov
mov
mov
icebp
sbb
add
and
adc
dec
mov
das
jge
cwtl
add
rolb
mov
stos
mov
mov
cmp
scas
jl
sub
push
jns
push
mov
sti
mov
jb
lods
pop
lret
lea
and
add
jae
inc
dec
ret
sub
jb
and
dec
mov
mov
jo
jo
stos
inc
mov
add
rcr
dec
sbbl
cld
call
decb
insb
ljmp
mov
cmc
test
shrb
pop
mov
jb
pop
or
lods
xchg
or
out
cs
mov
xor
add
outsl
inc
lock
jecxz
data16
icebp
dec
sub
test
jns
add
xchg
loop
pusha
ret
jecxz
rcl
fdivrp
sub
jne
jae
xor
and
inc
sub
fidivs
cli
clc
sub
imul
test
and
mov
xchg
sub
outsb
inc
cmp
and
pop
movsb
cld
sbb
mov
in
fildl
add
sahf
or
sahf
push
jb
cltd
shll
add
sbb
out
lock
jbe
aas
cli
jbe
lcall
push
ljmp
insl
dec
cmp
mov
fisttpl
in
fcmovne
incl
add
in
icebp
std
mov
cmp
sbb
inc
aam
pushf
or
repnz
fimull
pop
rol
movsb
mov
push
jbe
sub
adc
push
test
sub
pusha
jb
cmp
jp
sbb
mov
sub
xchg
cli
cmpsl
in
aaa
idivl
fldt
stc
mov
in
mov
sbb
sbb
dec
mov
pop
popf
sub
inc
and
sbb
leave
jmp
cli
lock
xchg
loope
dec
cltd
push
xorb
mov
mov
test
push
ret
pop
xchg
mov
jg
data16
mov
cli
add
mov
xchg
xchg
push
xchg
mov
xlat
push
adc
imul
daa
imul
cmp
flds
lds
aaa
add
sbb
mov
popa
cmpsb
cmp
scas
rolb
out
push
or
jg
jge
ljmp
pop
sub
or
inc
sti
cmc
scas
lahf
push
adc
ds
les
sbb
daa
loop
nop
cs
testl
shrl
mov
mov
enter
xlat
and
hlt
adc
stc
je
rclb
pop
shlb
icebp
cmp
stc
xchg
and
stos
push
add
orb
cmpsb
jl
and
fwait
scas
loope
jmp
mov
cmpl
sbb
ja
aad
dec
loop
pusha
and
pop
cmp
loope
mov
add
adc
scas
js
rorl
pop
cmpsb
lods
push
insb
xchg
repnz
sub
test
push
insl
mov
mov
movsb
out
fnsave
xor
jae
xlat
jmp
iret
lahf
push
lods
ja
jmp
sub
fnstsw
lods
fstp
dec
push
add
and
jp
fsubrs
in
mov
fildl
rcrl
in
inc
pop
pop
stc
or
and
out
mov
fst
sbb
cmp
pop
in
inc
insb
xor
js
bnd
aas
and
inc
inc
add
adc
lret
sbb
testb
mov
jnp
ja
inc
jne
cmp
test
sub
mov
dec
test
xchg
adc
shll
jae
pop
mov
das
push
add
sub
mov
mov
add
js
jl,pt
inc
lea
adc
mov
sub
mov
jge
or
ret
jns
repnz
inc
and
lods
loopne
xor
dec
mov
and
dec
orl
test
lret
mov
imul
dec
cwtl
fisubs
movsl
sub
ss
nop
loopne
decb
mov
or
cmp
lods
js
mov
dec
adc
push
mov
xor
sub
dec
addl
jbe
scas
ja
inc
scas
inc
adc
aam
lods
push
idiv
lods
lahf
dec
clc
pop
lret
jb
dec
mov
jle
ret
in
push
bnd
pop
pop
sub
dec
shlb
xchg
sar
push
pop
xchg
das
sbb
jecxz
jecxz
test
mov
ss
jmp
int3
imul
jbe
jmp
mov
adc
pop
fnstcw
aam
enter
sbb
jle
loopne
xor
xor
in
imul
inc
fldt
dec
test
mov
sbb
inc
cltd
aam
es
in
cmp
mov
sbb
mov
pop
les
mov
sti
test
sub
jmp
add
shll
cmp
cmpsl
mov
push
into
pop
adc
cwtl
dec
shrb
rcrb
jl
cmp
mov
jae
mov
iret
mov
sbb
lds
fidivs
subl
popa
and
inc
mov
mov
xchg
movsl
aaa
addr16
repz
popf
and
add
roll
data16
or
std
ss
add
adc
repnz
adc
popf
inc
xchg
out
into
xchg
sbb
leave
sbb
sub
addl
pop
xor
hlt
push
lods
jae
out
sub
xchg
aas
notb
sti
loop
pop
cmpsl
mov
pushf
lcall
lret
sub
subl
pop
inc
xor
nop
mov
jb
jbe
pop
push
jbe
adc
jmp
sbb
dec
mov
mov
xor
dec
xchg
in
lret
andl
insl
dec
stc
cmp
xchg
push
fistps
and
fs
enter
or
add
push
movsl
loopne
sahf
lret
imul
mov
ficoml
movsl
pop
xor
or
sbb
setg
call
jns
mov
push
mov
push
aas
or
xor
push
or
dec
push
add
mov
push
pop
dec
scas
jp
jno
xchg
stc
test
xchg
inc
in
jnp,pt
pop
jmp
add
outsb
push
test
cltd
and
pushf
sbb
mov
or
inc
jmp
jg
std
dec
es
int3
sbb
mov
ja
and
pop
mov
and
out
cmp
xor
sahf
out
jo
jno
mov
mov
jbe
xchg
sbb
xor
mov
enter
insl
pop
xor
into
lcall
or
rclb
frstor
cmp
or
jo
fwait
and
push
aam
in
pop
jae
gs
lods
cmpsl
push
sbb
fstps
clc
inc
std
mov
and
push
push
and
dec
out
les
int3
sbb
and
lods
pop
adc
add
jge
jae
outsl
and
insb
mov
adc
mov
lods
popa
xor
sbbl
pop
pop
xor
mov
xchg
ss
js
push
es
sti
pop
icebp
adc
jne
fs
xchg
xchg
xor
gs
das
xor
call
movsl
or
jge
jecxz
fs
fwait
mov
inc
or
adc
dec
pushl
mov
leave
mov
ss
sub
insb
inc
ret
pop
call
mov
push
add
jns
out
xchg
inc
jnp
flds
pop
js
loope
xor
leave
dec
imul
int
xchg
sahf
pop
mov
pusha
data16
xor
inc
insl
adcl
pop
push
test
cmpsb
fs
inc
or
xchg
push
mov
addr16
fcomi
fmull
fsts
andb
call
js
jno
orb
pop
data16
or
bound
jl
or
inc
push
sub
push
pop
and
xchg
int
ret
jno
adc
pop
outsl
ret
enter
sbb
ljmp
xchg
call
imul
loop
pop
xor
daa
fcoms
push
aad
mov
sub
lods
mov
es
gs
mov
inc
mov
jmp
je
das
cmp
jecxz
fadds
mov
cmp
decb
jnp
push
sti
imul
xor
adc
lret
jns
xchg
fildll
shrb
loopne
lret
ret
lret
lods
push
adc
push
adc
cmp
sub
sub
aaa
dec
dec
enter
shlb
sub
jl
pop
sbb
sub
push
xchg
sub
sbb
mov
add
out
inc
cltd
pop
das
jle
mov
add
in
test
daa
cltd
push
xor
xchg
pop
hlt
popa
test
adc
mov
ljmp
call
sub
dec
lock
add
into
in
pop
and
dec
push
adc
sub
int3
outsb
dec
cmp
test
imul
sbb
lock
rorb
dec
loop
push
sbb
or
popa
out
sbb
jbe
mov
xchg
push
mov
movsl
jg
jne
ret
scas
or
cltd
adc
lods
jns
push
xor
cs
sahf
jne,pt
mov
sub
push
iret
stc
gs
lcall
sub
stos
dec
aad
mov
add
xchg
pusha
push
bound
les
pop
adc
mov
inc
pop
xor
loope
test
push
adc
repnz
loopne
sarl
sahf
nop
insb
jl
daa
stos
aaa
mov
sbbl
push
and
pop
out
pop
cmp
imul
and
icebp
cmp
movsb
andl
xchg
pop
jp
pop
clc
cmpsb
xor
mov
outsl
imul
imulb
dec
jge
adc
les
jo
mov
adc
xchg
in
push
mov
add
dec
imul
lods
xchg
lock
push
repz
out
dec
lods
in
cmpsl
repz
cmp
aas
shll
lret
push
mov
ret
andb
lcall
cmp
push
push
or
push
in
mov
push
popa
mov
fistps
ja
pop
add
pop
jl
scas
sbb
pop
not
dec
add
adc
inc
out
adc
test
int
ds
loope
pop
test
outsl
mov
xlat
mov
and
fs
mov
stos
enter
and
stos
js
cltd
sub
mov
sbb
cwtl
mov
jp,pt
xor
pop
shl
adc
push
xchg
cmc
arpl
in
sub
dec
dec
pop
xlat
xchg
in
xchg
and
pop
mov
rcr
or
cmc
add
and
out
inc
push
xor
push
fdivrp
jb
fldenv
loopne
jmp
out
cmp
je
je
call
in
xchg
lock
fildll
lret
imul
mov
push
outsb
stos
jnp
adc
in
cltd
inc
dec
jmp
cltd
cmpsb
mulb
out
push
dec
ds
or
mov
icebp
roll
sbb
loop
lahf
sub
or
ss
mov
sub
cmpl
ds
fwait
pop
fnstsw
lret
jg
jo
mov
mov
inc
xchg
dec
pop
inc
icebp
nop
das
sbbb
adc
mov
push
pop
xor
and
dec
adc
subl
daa
outsb
loope
aam
push
fdivrl
xchg
mov
hlt
mov
movsb
dec
jecxz
mov
mov
mov
dec
insb
aaa
xlat
pop
pop
lahf
shrl
mov
lds
fdivs
and
xchg
cwtl
mov
data16
cs
inc
jle
in
dec
dec
pop
in
adc
or
gs
adc
dec
aad
inc
aad
and
jae
pop
cmpb
and
adc
xchg
or
dec
lods
push
add
sti
add
sbb
fcomp
stos
jo
and
popa
repz
mov
sbb
stc
ss
jp
stos
movsl
lret
loop
and
cmp
mov
push
mov
popa
mov
inc
jb
pusha
inc
fisttps
aaa
cmp
aam
ja
dec
test
push
add
int
shrb
clc
push
popa
adcl
pop
mov
loope
push
add
test
jp
inc
popa
pop
fdiv
mov
daa
mov
sbb
lods
pop
sbb
dec
test
xchg
fldt
inc
jmp
cwtl
push
jbe
xlat
cmp
add
push
add
test
mov
xchg
cmp
repnz
cmpsl
mov
sti
mov
mov
mov
enter
insb
mov
int
fstps
jg
xor
mov
mov
addr16
xlat
add
inc
cmpsb
sbbb
xchg
pop
insl
jae
fdivs
fwait
call
or
or
iret
or
mov
es
pop
test
fcmovne
inc
test
test
dec
xchg
shl
sbb
cld
fnstenv
dec
stc
fildl
or
ljmp
jae
sbb
fnstenv
push
rcrl
or
sar
xor
lds
xor
jecxz
fcompl
dec
xor
inc
or
test
mov
loop
cmp
push
and
loop
pop
ljmp
int3
dec
in
mov
mov
xchg
hlt
fcomp
aad
fstps
lea
in
repz
mov
or
dec
ja
or
test
jb
pop
fidivrs
fwait
dec
aaa
ds
les
andb
adc
sti
nop
out
enter
movsb
sarb
sub
and
mov
jmp
mov
lods
mov
lret
fimull
ljmp
aam
iret
xchg
jo
xchg
mov
es
jne
sub
lcall
call
sbb
mov
jmp
push
pop
ds
bound
orl
sbb
mov
push
inc
cmpb
idiv
mov
pop
jle
push
inc
lahf
es
push
outsb
daa
and
mov
adc
xor
cld
cmpsb
insb
in
idivb
jmp
aas
sub
adc
stc
imul
arpl
cmpb
daa
popf
add
dec
lret
xchg
adc
je
scas
pop
push
sbb
stc
das
inc
lcall
adc
repz
test
cmpsb
ss
pop
in
rclb
xor
in
bound
inc
test
and
adc
or
mov
fwait
ds
insb
pop
lods
xchg
mov
jne
shll
shrb
jge
and
adc
incl
jb
out
jae
ja
push
iret
pop
mov
inc
std
cmp
negl
lret
ss
push
aaa
mov
mov
imul
sbb
push
sahf
clc
jb
ljmp
lea
mov
rcrb
movsb
fidivrs
ja
faddl
pop
jecxz
or
adc
arpl
xor
lods
xor
hlt
dec
daa
and
std
inc
imul
fwait
inc
push
imul
xchg
movsl
jno
int3
adc
and
ss
mov
into
push
mulb
fcmovne
mov
mov
and
mov
mov
dec
xchg
mov
aaa
mov
mov
or
pusha
roll
mov
repz
nop
xor
test
dec
mov
cli
jo
ljmp
push
mov
push
xchg
sahf
xlat
pop
stc
sar
leave
fistl
push
ja
sbb
imul
jmp
scas
push
mov
repz
and
pop
imul
inc
add
cld
jb
bound
adc
xchg
adc
loop
scas
mov
inc
adc
jo
xorl
jae
test
test
divb
scas
aaa
out
jecxz
imul
jb
xchg
pop
pop
stos
fcompl
shll
inc
sti
jbe
add
ret
aas
movsb
jae
sbb
les
addb
and
adc
pop
mov
dec
mov
fldt
popf
pushf
jge
add
jnp
hlt
jg
dec
bound
dec
aaa
lods
pop
sarb
mov
add
adc
add
loopne
push
ds
inc
sub
add
stc
adc
ret
test
aaa
icebp
pop
stos
sti
test
leave
div
ret
xor
sti
or
lods
mov
pop
data16
das
xchg
jb
xor
cmc
jle
cmp
mov
push
pop
shll
icebp
mov
inc
ret
sbb
test
sbb
cmp
lahf
pop
pop
mov
lahf
scas
scas
repz
lds
cmp
mov
cmp
push
xchg
gs
jne
add
sbb
out
jae
mov
pop
xor
repnz
adc
aas
test
js
jbe
leave
mov
jle
mov
test
data16
xor
iret
imulb
jns
out
cmp
mov
xchg
jp
sahf
fcmove
add
mov
jae
scas
dec
sub
mov
mov
hlt
pusha
xor
je
jmp
xchg
sbb
repnz
fs
in
push
jo
sub
or
adc
pop
sbb
out
pop
movl
mov
pop
dec
scas
inc
xor
pusha
pop
or
std
mov
pop
leave
lods
push
sti
or
cli
cmp
imul
push
sarl
push
aaa
bound
pop
dec
jae
adc
push
roll
add
jle
push
jbe
frstor
push
cli
popf
and
adc
mov
xchg
jle
fisttpl
add
push
ljmp
ret
imul
js
jge
in
ds
fstps
repnz
outsb
das
dec
push
sbb
push
stc
inc
test
and
sbb
repz
pop
lods
sub
gs
mov
mov
jge
xlat
repz
add
aaa
sub
add
jb
xor
rolb
push
add
jg
mov
dec
mov
xor
fstps
dec
stc
hlt
pop
xchg
sarb
pop
inc
and
and
imul
outsb
and
cmpsb
loopne
adc
addr16
cli
add
repz
sti
jo
cmp
dec
and
stos
test
inc
jl
inc
and
cmp
lds
jnp
sub
fsts
call
adcl
insb
sbb
jl
loopne
out
pop
mov
andb
mov
xor
inc
fsts
dec
sub
movsb
push
es
jno
daa
jbe
sub
sbb
adc
xor
xor
dec
xor
sbb
stos
js
sbb
jp
stos
cmp
adc
xlat
push
scas
lret
popa
js
imul
ret
mov
cmp
pop
inc
in
or
lock
cmp
xchg
jmp
into
sub
xor
jge
pop
mov
ror
arpl
stc
movsl
jecxz
fsubs
fidivrs
dec
inc
xchg
shll
roll
mov
sahf
and
mov
and
test
outsl
push
sbb
nopl
lea
outsl
adc
dec
dec
loopne
or
insl
scas
inc
fdivs
cs
mov
jne
repz
adc
push
xor
or
repnz
pop
lock
push
and
shl
mov
cltd
loopne
push
rcrl
jmp
dec
iret
adc
cld
xor
mov
xchg
insl
xlat
scas
mov
inc
inc
mov
addr16
adc
mov
xchg
sub
push
out
test
push
lea
lahf
faddp
cli
bt
das
mov
or
insl
test
call
adc
jae
cltd
pop
outsb
idivb
mov
and
outsb
enter
xchg
out
scas
bswap
adc
add
xor
daa
decb
dec
xchg
fs
and
jge
pop
sub
test
lret
test
in
into
repz
xor
cmp
flds
stos
test
aas
xchg
repz
inc
fnstenv
and
mov
sbb
mov
cmp
pop
inc
mov
sbb
and
out
out
out
cmp
mov
add
fs
inc
inc
es
inc
rcr
out
push
loopne
bound
fwait
dec
mov
mov
mov
jge
ds
enter
iret
mov
cmp
xchg
sbb
ss
or
icebp
cmpsl
sbb
jnp
repz
and
xor
pop
dec
cld
xlat
mov
add
jp
lods
cld
inc
insb
outsl
std
xchg
mov
sbb
mov
icebp
mov
add
lret
xchg
jno
pop
shrb
dec
sbb
mov
test
es
push
cmp
lret
xchg
cld
push
push
mov
dec
mov
xor
inc
int3
jp
mov
adc
xchg
out
dec
repnz
xor
ud1
sub
cmp
push
sbb
sub
inc
jb
push
scas
lods
or
sbb
cmpsl
enter
leave
in
mov
mov
ret
divl
adc
addr16
out
loop
xchg
push
addr16
jb
push
adc
push
repz
into
les
stc
push
xor
adc
jbe
inc
and
mulb
xchg
push
or
add
dec
paddb
loop
sub
enter
add
mov
ret
aad
dec
sub
add
push
push
imul
rclb
dec
icebp
pop
arpl
inc
mov
sub
popa
push
adc
enter
out
dec
call
fisubrs
daa
std
pop
or
bound
fs
sub
jge
shlb
call
sub
jecxz
inc
subb
insb
jne
aas
push
push
lcall
xor
aam
data16
mov
sub
adc
lahf
jmp
insl
lret
xor
iret
out
nop
imul
shrb
les
push
mov
daa
adc
and
in
or
or
or
pop
ja
mov
dec
mov
and
sub
nop
and
fdivl
add
xor
dec
adc
insl
lods
dec
sar
bound
add
es
pop
mov
or
or
dec
pop
incl
mov
lea
movsl
mov
pop
fwait
inc
sbb
mov
push
outsb
ds
fs
jae
fsubs
dec
subb
cmc
push
xor
push
cmp
je
test
mov
dec
in
inc
dec
mov
xchg
sti
dec
mov
add
or
xor
jae
rorb
mov
and
int3
inc
gs
sub
cwtl
clc
mov
adc
add
hlt
clc
inc
mov
mov
in
pop
loopne
adc
out
xor
in
mov
ret
lock
fcomi
sti
dec
repnz
es
fcoml
mov
inc
loopne
icebp
sbb
xchg
jmp
lcall
mov
adc
cmp
and
dec
push
out
cwtl
mov
xor
pusha
fidivl
pop
aam
test
mov
mov
das
out
dec
push
add
or
mov
push
outsl
cmp
movsl
stc
in
sbb
mov
add
je
in
cmp
cmc
push
ret
xor
push
cwtl
mov
xchg
sub
jl
xor
enter
pop
rolb
inc
rorl
push
sbb
push
jg
ljmp
loopne
outsl
mov
mov
sahf
adc
arpl
pop
xor
xor
add
test
mov
push
xchg
add
push
push
push
cmp
out
pop
push
icebp
mov
test
or
xor
cltd
mov
xchg
ljmp
inc
mov
ss
das
out
pop
mov
push
lock
andl
bound
insw
or
out
push
mov
out
jo
or
inc
cmp
lods
mov
mov
sar
pop
dec
bound
pushf
pop
push
sub
es
adc
imul
sbb
dec
xchg
add
fstpt
hlt
cmp
stos
repnz
xchg
inc
push
mov
xchg
xor
stos
aas
shl
mov
or
adc
jo
iret
dec
insb
ljmp
es
mov
or
out
mov
inc
mov
out
jecxz
push
pop
std
pop
enter
aaa
loopne
divb
scas
adc
loopne
add
xchg
negb
icebp
mov
cli
leave
pop
les
jl
pop
insb
jns
scas
fcom
jae
jle
int3
and
mov
dec
mov
bound
outsl
cmc
enter
fdivl
sub
push
ljmp
std
mov
adc
adcb
pmaddwd
lcall
inc
mov
repnz
jbe
inc
stc
aam
adc
push
pop
cmpl
scas
mov
cmp
xor
push
mov
pusha
ds
jns
add
pushw
push
jl
mov
or
xchg
pop
pop
and
adc
inc
sub
xchg
mov
lock
repnz
pop
mull
xor
jge
dec
mov
je
pop
fistps
xchg
stos
int3
cmp
lds
insb
push
repnz
jb
loop
sub
inc
cs
bound
shr
mov
add
mov
mov
fsubrp
ljmp
nop
cmc
fdiv
lret
cltd
sarb
push
movsb
testl
or
rcrb
xchg
xor
pop
xor
sub
cmpsl
cld
aam
adc
or
jmp
movsbl
push
sti
add
dec
add
xchg
test
jae
insb
push
scas
ficoms
pushf
jno
push
cs
mov
cmp
xor
sti
cmpb
inc
jecxz
fiaddl
jge
mov
stos
pop
popa
adc
hlt
add
popf
sbb
notb
popa
out
cwtl
mov
adc
test
or
xchg
mov
aad
stc
jne
in
inc
pop
sahf
leave
movsl
adc
in
pop
sti
movl
add
pop
cmp
xlat
pushf
xchg
gs
clc
imul
fisubs
add
scas
jbe
mov
push
ds
ja
sub
out
push
cmp
ss
pop
sub
loopne
lcall
and
loop
inc
pop
insb
lcall
xlat
test
imul
mov
ss
out
jb
pop
stc
popa
add
je
orl
je
jo
cs
cltd
jp
mov
and
test
sarb
test
push
adc
hlt
mov
sub
mov
lret
dec
xchg
ja
lcall
mov
sbb
loopne
sbb
mov
ret
scas
jl
dec
aaa
aas
shrb
xor
nop
mov
pop
cmp
in
ret
lods
dec
popl
aad
cwtl
fadds
adc
sub
outsl
lock
jecxz
ss
push
push
ds
jnp
inc
jae
test
ss
or
mov
xor
int3
pop
dec
xchg
pop
imulb
call
stos
xlat
nop
imul
mov
testb
cmp
pop
xchg
les
jne
pop
mov
xchg
in
gs
xchg
mov
lds
arpl
stos
or
adc
inc
sub
loop
cmp
lahf
jle
sub
popa
push
or
jno
adc
dec
cwtl
jo
mulb
inc
mov
fidivrl
sub
push
and
pop
sbb
lcall
movsb
cmpl
fwait
mov
adc
imul
xor
stc
push
push
dec
ja
jmp
pushf
and
loope
push
adcl
mov
lods
push
enter
pushf
movsb
mov
cwtl
mov
sbb
push
sbb
adc
push
cmp
aam
push
cmp
or
cld
add
test
stc
mov
pusha
scas
xchg
jb
push
cld
mov
fwait
push
jne
xchg
and
pop
sti
sub
jns
adc
mov
mov
or
scas
sub
add
icebp
inc
decb
loopne
ret
lea
fucomp
add
outsb
icebp
adc
mov
data16
js
lahf
imul
stos
xchg
dec
cwtl
bound
dec
xchg
xchg
bound
and
int
insl
fcmove
into
fistl
sub
dec
pop
divb
pop
and
nop
mov
lods
fcomps
push
add
and
popa
dec
imul
sub
aad
test
lret
push
pushf
fstps
lahf
into
repz
daa
mov
adc
inc
int3
mov
ds
mov
jbe
mov
aad
aas
jae
orl
inc
fisttps
jne
pop
test
push
dec
xor
call
pop
xchg
or
gs
lods
push
dec
dec
jg
mov
inc
std
and
idivb
xchg
and
adc
sbb
fadd
arpl
xchg
pop
cwtl
sbb
shll
pop
cli
mov
outsl
aad
aas
outsl
mov
jmp
push
cmp
lds
and
jecxz
mov
popf
fdiv
aaa
xor
out
ret
push
out
pop
mov
sbb
int3
sbb
xchg
notl
cmpsb
sub
pop
aad
clc
fisttpll
insb
mov
ljmp
and
sub
cli
sti
sbb
movsb
mov
ret
mov
fs
mov
mov
dec
jmp
xor
mov
or
push
fnsave
mov
or
sub
sbb
jnp
jnp
dec
ret
push
aaa
xlat
fwait
pop
mov
andl
lock
adc
mov
repnz
inc
sub
and
testl
mov
cmpsl
fdivl
inc
pop
enter
nop
aad
adc
mov
inc
stc
inc
push
lea
scas
pop
add
ja
fiaddl
es
mov
ret
mov
mov
icebp
xor
insl
mov
enter
pop
push
mov
je
mov
fisubrs
dec
jge
jae
mov
xchg
clc
jp
rorl
xor
push
mov
insb
xchg
cs
clc
inc
fwait
adcl
jge
inc
dec
enter
andl
adc
gs
pushf
jnp
mov
push
clc
pop
rorl
push
les
cmc
inc
pop
scas
std
in
jl
sahf
dec
inc
shrb
pop
inc
mov
stc
sti
test
ffree
inc
sbb
mov
cmp
rolb
test
mov
gs
stc
sbb
leave
push
mov
mov
cmp
sti
pop
mov
push
mov
popl
pushf
adc
insb
mov
pop
mov
negb
pop
daa
cmp
mov
jg
sti
push
subb
ret
cmc
add
rcrl
test
loope
xchg
test
popa
cmp
popa
push
xchg
jecxz
adc
inc
shll
addr16
mov
sbb
adc
enter
scas
cmc
add
outsb
inc
adc
jecxz
lcall
testl
popf
pop
sbb
int
and
push
dec
out
in
sbb
sub
ja
cmp
adc
or
pop
das
mov
shll
je
push
mov
adc
xchg
mov
inc
and
or
clc
push
scas
out
cmp
test
sbb
and
cmp
cmp
jmp
xchg
lock
test
daa
lds
xchg
test
in
lahf
adc
xorb
mov
and
or
sub
jp
lods
lret
pop
in
push
push
sti
rclb
push
mov
or
jge
bound
pop
and
cmc
mov
out
aas
les
test
pushf
in
xchg
and
inc
lea
dec
out
mov
sahf
rclb
fld
cmp
pusha
shlb
jo
lret
pop
int
arpl
popf
enter
lahf
adc
inc
bound
andb
sub
dec
in
jnp
stos
cmp
in
jg
repz
daa
cmp
xor
mov
lahf
test
lods
mov
adc
pushf
jge
dec
pop
add
test
jns
xchg
insl
and
inc
jecxz
mov
stos
adc
mov
lds
jo
mov
jo
cmpsb
pop
jbe
js
mov
iret
inc
data16
fninit
or
fs
jg
orl
and
loopne
pop
sbb
loop
in
mov
adc
mov
xchg
sbb
rclb
add
mov
and
mov
popf
aam
pushf
iret
in
adc
push
sbbl
adc
shl
sbb
in
lock
inc
lea
jnp
cld
adc
subb
jns
data16
cmp
push
cwtl
mov
jp
shlb
shrb
push
sti
inc
pop
lcall
pop
icebp
roll
idivl
adc
std
push
js
add
outsl
and
and
or
stos
xor
push
add
aas
fstpt
outsb
loop
and
in
xlat
repnz
xchg
sub
cld
in
popf
mov
aam
popf
imul
push
jecxz
or
mov
add
orb
mov
push
or
popf
add
or
xchg
cmpsl
xchg
ja
imul
jns
out
sahf
mov
cmpsl
pop
ljmp
jno
lds
mov
dec
inc
push
inc
repnz
shrl
cli
jbe
rcrb
leave
sbb
test
scas
jl
pop
or
or
xchg
iret
out
out
sahf
inc
sub
dec
cmp
push
mov
dec
xchg
mov
in
xor
aam
shld
cmp
loopne
pop
hlt
fisubl
sbb
lea
sbb
mov
adc
pop
ja
mov
or
dec
daa
es
nop
sub
sti
fistl
add
test
mov
or
push
sub
fwait
lret
outsb
lods
mull
mov
mov
lret
inc
inc
jecxz
xchg
and
xchg
inc
xchg
xchg
push
mov
call
cs
xchg
test
add
and
inc
pop
fstl
stc
mov
push
sbb
sub
sbb
add
push
ss
aad
cmpsb
loope
ds
adc
pop
or
lcall
cld
sbb
pop
incl
mov
cs
mov
fisubs
jmp
iret
popf
inc
and
mov
lahf
fimull
sbb
in
daa
xchg
dec
and
js
cmp
mov
pop
pusha
xchg
mov
xor
push
xor
push
dec
mov
lods
addr16
push
inc
mov
aas
cmp
aas
push
and
sbb
lds
sbb
and
sub
lret
push
xchg
add
inc
mov
cmpsb
cmpsb
dec
jnp
mov
cwtl
cmp
add
fldt
mov
fisubrl
fwait
xorb
stc
push
cmp
imul
loope
xchg
pop
mov
call
inc
pop
sbb
dec
dec
xchg
mov
jne
and
push
lcall
ljmp
push
jp
mov
or
push
xor
add
or
pop
dec
mov
mov
pop
mov
mov
fs
das
or
scas
aas
inc
lods
mov
mov
push
mov
mov
pushf
repz
testb
daa
jmp
or
mov
pop
mov
rcll
out
pusha
pop
mov
inc
push
ss
push
icebp
pop
xchg
or
sbb
and
jb
push
xlat
dec
jl
inc
sbb
shlb
jl
movsb
or
cli
inc
mov
dec
cmp
adc
cltd
ds
pop
adc
mov
xchg
xchg
lret
mov
int3
add
scas
mov
jge
call
pop
pop
inc
or
cld
dec
adc
pop
or
mov
add
or
jp
push
lahf
push
lret
es
and
ljmp
cmp
bound
movsl
andb
loope
xor
mov
adc
arpl
mov
xor
fistpl
or
cmpsl
adc
mov
decb
rolb
sbb
out
outsb
xchg
pop
pusha
clc
out
push
push
mov
cmp
fstpl
outsb
or
sub
add
fcoml
dec
ret
inc
out
xor
xchg
add
mov
loopne
jmp
leave
cmp
add
jbe
decl
adc
movsb
fcoml
xor
sti
jno
and
lods
dec
cltd
in
inc
push
lcall
and
cmp
out
outsb
out
adc
movsb
dec
sbb
mov
sub
pop
cmpl
push
lds
xor
ljmp
xchg
iret
popf
mov
dec
jns
insb
div
mov
inc
push
cld
loope
adc
bound
inc
sub
or
mul
out
pop
push
rcr
negl
out
adc
sbb
push
push
fs
mov
data16
js
cmp
adc
lds
and
xor
shlb
mov
sbb
add
pop
jmp
call
mov
xlat
sarl
push
divb
imul
pop
jp
in
sub
adc
js
push
imul
sub
jmp
bound
icebp
sbb
js
pop
in
pop
push
call
lcall
mov
and
pop
divb
cmpl
push
addr16
sub
fsub
std
xlat
popf
andb
lods
jle
push
dec
out
jmp
pop
aam
out
xor
and
ret
pop
xchg
mov
and
inc
out
xchg
cmpl
fistpl
aad
pop
ficompl
inc
shld
cld
std
repz
mov
daa
cmc
and
sbb
gs
in
jns
inc
mov
loopne
sub
iret
ljmp
aaa
xlat
cld
dec
aam
inc
jno
xchg
pusha
stos
adc
adc
call
bound
pop
sub
add
sub
pop
mov
mov
mov
std
mov
push
inc
mov
sahf
mov
repnz
dec
push
or
xchg
push
je
out
aas
push
popl
pop
outsb
or
dec
xchg
pop
and
bnd
sbbb
sub
lods
jnp
repz
adc
inc
mov
jecxz
test
rorl
in
and
jg
cmc
push
sbb
adc
xchg
int3
xor
imul
in
mov
clc
ljmp
mov
adc
movsb
sub
inc
adcb
dec
xchg
addr16
xchg
dec
out
fbstp
mov
and
fisttps
push
mov
mov
daa
cmp
iret
test
sub
mov
test
aas
lea
push
psrld
movsl
fildl
or
iret
sbb
fcomps
inc
pop
inc
pop
pop
cmp
or
test
test
stos
add
sub
fidivrl
cmp
cmp
sub
xlat
jecxz
jmp
icebp
pusha
pop
mov
dec
jne
pop
xchg
mov
int
loopne
sub
hlt
cmp
inc
inc
ret
cwtl
and
aas
insl
lret
scas
je
sbb
cwtl
shll
es
movd
mov
sub
cmc
adc
mov
movsl
sbb
lret
out
add
push
ljmp
clc
ja
dec
mov
cmp
cmp
sti
imul
mov
cmp
mov
xchg
loop
xor
arpl
push
push
loope
bound
clc
inc
dec
imul
pop
stos
iret
jmp
mov
and
icebp
notb
mov
mov
jno
jle
cmp
jnp
pop
inc
mov
lea
inc
mov
mov
xchg
mov
mov
jmp
divl
xchg
xlat
and
jle
in
test
in
pop
das
pop
in
and
xchg
mov
insb
mov
inc
pop
in
divb
inc
xlat
sahf
popf
or
test
cmp
std
dec
mov
pop
call
xor
sbb
aaa
add
mov
xchg
es
jp
lods
mov
push
dec
jp
mov
popf
pop
mov
sbb
xchg
mov
mov
xor
and
push
or
add
in
inc
or
pop
xchg
jne
fcmovbe
jg
ret
push
jno
bound
jbe
fnstcw
cmp
cmp
je
nop
adc
clc
or
add
sbb
xchg
nop
jge
stos
inc
cmp
rcrb
std
xlat
out
fsubl
cmp
mov
pop
jns
push
popf
sbb
daa
pop
pop
lea
jmp
dec
aas
fsubs
lea
sub
std
imul
xchg
nop
dec
out
fs
cltd
gs
aas
fwait
outsb
sar
shrb
and
cmp
pop
pusha
xchg
sbb
insl
loope
lret
ud2
icebp
dec
std
gs
inc
pop
das
push
ds
jns
out
test
adc
cmp
mov
rorl
dec
xchg
sbb
mov
mov
outsb
fbld
in
pop
sub
mov
or
out
mov
push
pushf
adc
lods
bsr
fwait
inc
xchg
adc
sub
pop
mov
cpuid
jl
jmp
pop
adc
xor
xor
aam
adc
mov
pushw
jp
mov
test
inc
cld
lods
je
stos
insb
inc
pop
repnz
jge
cmpb
mov
xchg
cmp
mov
pop
sub
add
dec
and
jbe
pop
iret
mov
inc
imul
cmp
xor
out
movsb
jl
xor
jns
xor
fisubs
and
dec
movsl
cltd
pop
adcb
adc
in
mov
dec
popl
mov
leave
mov
xorl
cmp
leave
xor
repz
cmpsl
imul
pop
sbb
stos
clc
fdivs
inc
mov
pop
fnsave
sub
ljmp
push
jno
sub
or
jl
xchg
call
rcrl
lds
bound
sbbl
cmp
pushf
cld
test
push
and
sbb
and
jp
mov
pop
inc
scas
lahf
daa
in
xchg
mov
add
fs
sbb
sbb
mov
popf
jae
mov
cwtl
pop
xchg
jg
insl
sub
push
leave
add
mov
adc
push
jb
jb
inc
popa
mov
movsl
jo
mov
daa
adc
mov
mov
mov
cmp
clc
jmp
ret
out
ffreep
pop
leave
js
cmp
push
or
test
cmp
xchg
push
mov
mov
aam
and
cmp
dec
jo
xchg
xchg
int3
pop
stos
call
rorb
add
mov
xchg
add
dec
pop
jmp
shll
add
rclb
inc
adc
ret
mov
mov
xchg
ja
outsl
lcall
enter
stc
cmp
divl
mov
cmp
sub
mov
cmp
mov
mov
lret
jb
push
jb
fwait
lcall
xchg
sbb
mov
lock
push
add
outsl
cmp
adc
dec
adc
add
pushf
or
jmp
jp
clc
mov
mov
mov
push
movsb
aas
loope
lea
sub
mov
mov
jmp
add
aad
or
outsl
jae
xchg
mov
popf
addr16
sbb
test
adc
jno
stc
fadd
xchg
sbb
sbb
xchg
adc
or
jecxz
fidivs
nop
sub
lahf
jns
fsubs
xchg
lock
ss
fistps
mov
xchg
inc
bound
or
or
jl
outsb
mov
bound
loope
lahf
add
mov
or
popa
xchg
ss
inc
roll
sub
rorb
test
mov
aaa
cmp
xchg
aas
aas
mov
lcall
inc
sbb
jmp
jge
lods
push
dec
data16
sub
pop
out
rorb
mov
mov
lods
fistps
imul
cld
cmp
mov
int
cmp
pop
sbb
jnp
shl
xchg
lods
imul
scas
push
imul
ss
mov
sbb
mov
adc
ja
cs
test
xchg
negb
xchg
into
inc
xor
xor
out
and
inc
mov
sahf
add
cwtl
or
push
xor
inc
sbb
jge
stos
lock
in
iret
leave
test
pop
pop
lea
dec
lods
jae
dec
movsl
ljmp
and
sbb
xchg
in
cltd
loop
and
dec
stos
xchg
out
mov
cmpsb
inc
sbb
loop
xchg
lea
mov
pop
cwtl
add
rcll
lret
in
ljmp
jnp
cmp
daa
add
int3
mov
out
xchg
adc
jno
cmp
lcall
or
pop
cmpsb
sbb
and
lock
ds
fidivs
inc
push
push
push
xchg
adc
shll
dec
sbb
aad
adc
xchg
pop
rolb
pushf
ja
pop
pop
pop
add
push
test
pop
cli
pop
notb
rcrb
jne
mov
or
push
sbb
xor
jo
xchg
cld
fs
mov
lods
inc
jno
aam
dec
inc
cmp
jge
jle
insb
inc
cmp
lods
add
adc
lret
mov
dec
dec
imul
xchg
and
push
insb
std
cmpsl
cmc
pop
mov
cmpsl
arpl
stos
add
jmp
or
into
js
inc
pop
cs
push
cmp
adc
dec
nop
xor
imul
lods
mov
aaa
xlat
fcoms
add
mov
jnp
adc
stos
js
jg
dec
adc
sbb
cmp
add
dec
jmp
add
mov
xchg
cmp
mov
xor
dec
mov
inc
call
dec
popf
lock
dec
jno
mov
cmpsb
mov
cmc
adc
jo
jns
test
into
mov
add
pop
push
ret
cld
lret
in
xor
xchg
aaa
jle
mov
add
stos
cmpsl
mov
je
push
mov
addr16
add
mov
mov
ja
mov
sbb
mov
in
hlt
mov
fldt
mov
pop
adc
cmp
nop
pop
loop
mov
mov
mov
mov
flds
test
xchg
in
aad
mov
mov
mov
dec
out
test
push
cmpsb
leave
pusha
ljmp
or
popf
aam
adc
inc
dec
iret
pop
jmp
stos
in
mov
mov
repz
mov
dec
dec
cmp
jg
jg
sahf
test
fstpt
dec
icebp
push
das
inc
dec
rcrl
or
add
shl
jb
pop
pushf
aaa
iret
cmp
loopne
cmc
fsub
mov
mov
push
sbb
and
xor
pop
pusha
shlb
sbb
mov
fbstp
adc
fadds
mov
loop
pop
and
test
imul
sbb
mov
jb
sub
cwtl
loop
cmpl
stos
and
pushf
adcl
pop
insl
cs
mov
and
dec
sub
mov
loopne
adc
stc
jge
stos
xchg
jno
push
adc
add
out
out
push
dec
lret
ds
aas
ja
add
pop
rcrb
inc
jae
popa
xchg
cmpsl
pop
fdivrs
sti
clc
adc
loopne
cli
testl
in
cmp
testb
rcrb
pop
inc
dec
sub
mov
call
int
cld
adcb
adcb
in
lret
iret
xchg
inc
mov
adc
subl
pop
arpl
outsl
lret
pop
inc
loopne
pop
ficoms
gs
mov
stos
call
push
fstpl
aam
jne
or
and
jb
jne
in
xor
xchg
fcomps
fwait
mov
in
add
xor
in
test
pop
push
adc
leave
ss
iret
stc
test
cld
out
sbb
and
pop
jno
fiaddl
mov
mov
cmpl
call
mov
loop
lret
and
mov
scas
fidivrs
mov
pop
inc
notl
fldpi
fbld
ja
int3
push
lock
das
cli
sahf
popaw
mov
mov
push
test
xchg
or
mov
fs
mov
mov
pop
and
vfnmadd231pd
add
pop
test
add
pop
lret
imul
xor
ljmp
jo
in
mov
push
push
inc
enter
into
subl
sti
lcall
into
xor
fs
sbb
push
and
add
adc
or
push
enter
adc
in
sti
cmpsb
rcll
push
pop
insb
jns
into
daa
xchg
in
fimull
call
inc
add
aad
mov
jle
pop
xor
jl
scas
fcomi
lret
out
inc
push
xchg
icebp
adc
jbe
scas
and
lods
aam
jo
jmp
pop
popa
push
push
and
mov
daa
xchg
pop
test
cmc
cmp
push
pop
xchg
push
add
adc
dec
mov
mov
push
cmp
data16
js
loopne
ljmp
in
mov
mov
sub
sub
jb
jnp
jnp
orb
jle
xchg
cmp
xchg
and
les
xchg
test
mov
pop
xor
gs
push
xchg
sbb
and
xchg
loope
cmp
fcoms
in
sbb
lahf
lahf
push
sbb
lds
sbb
jnp
jg
repz
imul
into
inc
ficoms
rorb
add
sub
sahf
roll
pushf
jp
jge
rorb
sbb
cmc
outsl
scas
sub
push
and
xchg
pop
leave
mov
cmp
and
enter
hlt
orl
in
fdivrl
andl
scas
ror
dec
push
mov
lods
sub
dec
aam
movsl
dec
ret
daa
je
pop
dec
xor
xor
cwtl
jecxz
pop
sbb
add
pop
insl
mov
fidivl
or
loopne
mov
push
jnp
test
cmp
mov
xor
push
iret
inc
ja
xor
mov
dec
call
lods
mov
stc
in
data16
out
int
pop
sarl
lcall
or
pop
lcall
pop
xor
pop
mov
dec
int
dec
sub
bound
hlt
xchg
rorl
popf
cwtl
jne
mov
sbb
repz
insb
pop
stos
lcall
xchg
inc
adc
je
sub
fbstp
jecxz
inc
mov
pop
pop
fs
lock
outsb
test
addr16
push
cli
pop
cmp
stos
imul
sbb
jle
sbb
xchg
sarl
jae
xchg
jbe
push
dec
loop
out
loope
lcall
and
cmpsl
clc
cld
test
bound
rcr
sbb
and
sub
popf
rol
and
add
arpl
xchg
stos
adc
sti
inc
inc
scas
mov
xchg
pop
data16
daa
shl
pop
sbb
addr16
daa
pushf
inc
cmp
lods
mov
xchg
aad
xor
dec
testl
mov
mov
mov
cmp
lock
out
cmpsb
int3
pop
mov
mov
jmp
sbb
lods
js
inc
out
loopne
or
dec
mov
adc
stos
call
daa
pop
push
sbb
aam
shl
jns
movb
mov
cmp
pushf
test
mov
std
pop
in
pop
xor
and
xlat
push
jl
cmp
and
adcl
mov
rorb
in
imul
out
test
stos
fwait
scas
in
add
dec
adc
add
pop
cmp
int
scas
push
cwtl
jns
pop
mov
divl
arpl
je
sahf
inc
popf
add
sbb
scas
out
pop
cmpsb
jl
mov
fs
lds
data16
xchg
pop
jbe
jno
jmp
out
cltd
pop
enter
shl
hlt
iretw
es
mov
jle
fsubl
nop
inc
icebp
inc
test
cmp
and
movsb
xchg
inc
jne
mov
stos
andl
es
lret
push
sarl
pop
test
aad
push
adc
addr16
lret
fildl
sahf
mov
add
fs
inc
int3
cmc
mov
les
push
mov
push
fistpll
xchg
insl
ljmp
shrb
cli
xchg
clc
lret
outsl
aaa
out
imul
insl
outsb
test
or
push
out
xor
mov
repz
imulb
lds
sahf
sub
mov
dec
clc
test
or
dec
sbb
shrb
fistps
cmp
inc
mov
shrl
int3
pop
aas
push
xchg
scas
ljmp
rclb
insb
sti
mov
mulb
sub
dec
cmp
push
push
shr
fldenv
nop
mov
shlb
sbb
jns
lret
mov
xchg
and
mov
push
dec
inc
cmpsl
cltd
pop
repnz
adc
adc
pop
inc
test
cmp
jno
add
in
mov
mov
outsl
mov
pop
and
and
and
mov
xor
adc
xchg
push
push
add
scas
jmp
jge
pop
cmpsb
fbstp
or
sbb
jns
stc
faddl
loopne
shrl
pop
into
push
mov
fcmovne
xchg
rorb
fisubrl
and
loope
pusha
push
push
sbb
push
lock
shrl
xorl
pushf
sbb
clc
mov
mov
in
inc
mov
jle
inc
lock
cmpsl
es
push
fsubs
pop
fnstcw
loope
xchg
pop
sbb
push
sbb
out
dec
aam
dec
inc
add
push
stc
fmull
inc
push
inc
imul
mov
scas
insl
fildl
push
lods
aas
push
adc
imul
jns
push
dec
cmpsl
add
andb
loope
or
insb
ljmp
jbe
cmpsl
sub
mov
push
fwait
add
testb
mov
sbb
sbb
xchg
push
nop
pop
mov
test
in
sub
mov
pushf
dec
jmp
sub
scas
shll
and
push
loope
je
jb
cmp
push
jge
add
loopne
std
outsl
mov
les
rcrl
inc
push
adc
xchg
mov
popf
push
add
xor
dec
or
lock
add
jae
insl
les
fmulp
dec
pushf
in
into
out
leave
push
jg
or
xor
jno
cmp
fs
fstl
or
fidivl
push
push
scas
sbb
jo
add
inc
xchg
jle
lret
pxor
mov
jns
mov
or
test
adc
fs
enter
std
repz
mov
jl
cwtl
int3
iret
xchg
mov
dec
fs
and
jge
jl
mov
push
fadds
movsb
sbb
mov
daa
scas
scas
pop
mul
cmc
lret
adc
cmp
jno
out
sarl
imul
mov
add
ret
cmp
das
mov
inc
andb
stos
dec
mov
cli
push
cmp
jmp
ret
sub
pop
jno
sub
jb
sbb
roll
outsb
pop
jl
fdivp
xchg
test
loope
sarb
adc
jmp
and
adc
dec
and
je
in
sub
sub
jge
mov
mov
push
or
arpl
mov
mov
sub
jmp
je
pusha
mov
andl
xchg
fcompl
pushf
jp
jno
int
push
push
inc
imul
ljmp
sub
cmp
enter
or
pop
stc
fmull
outsb
test
lods
test
in
inc
stos
mov
lds
mov
clc
sbb
pop
pushf
sbb
repnz
ret
sub
add
stc
sbb
mov
adc
out
add
shlb
cmp
loope
into
lods
xorl
lcall
xor
jl
jle
pop
mov
outsl
lea
push
inc
or
cmp
leave
or
fcmovne
sbb
ret
ret
jp
add
fldcw
les
pop
lods
loope
xchg
roll
sahf
iret
mov
cmp
xlat
dec
xor
jmp
mov
xlat
out
insb
outsl
push
xchg
sahf
add
pop
push
rclb
rolb
jmp
cmp
mov
stos
rcll
imul
repnz
ss
lods
mov
add
and
pop
add
push
loopne
xor
cmp
dec
pushf
sbb
mov
dec
nop
push
pushf
cmp
lcall
dec
andb
adc
xlat
mov
pop
mov
lret
mov
pop
dec
aad
xor
ds
jp
adc
mov
mov
xor
addr16
jecxz
clc
adcb
in
nop
arpl
jp
mov
cmpsb
jmp
and
mov
inc
mov
push
sti
push
push
aas
inc
cmp
jge
sti
nop
out
iret
ljmp
adc
cmp
inc
mov
fs
stos
jge
adc
popa
xorl
cmp
shlb
sbb
pop
inc
jp
xchg
jbe
or
aas
dec
or
mov
ds
dec
dec
cli
dec
mov
outsb
cs
dec
mov
or
dec
jae
cld
iret
dec
sub
aas
xor
pop
idiv
xlat
adcl
into
mov
icebp
lock
and
mov
push
into
cmc
cltd
mov
fnstsw
jnp
out
jmp
in
cli
xchg
cmpsb
push
push
dec
dec
jg
add
lods
or
les
pop
jo
mov
xchg
jecxz
pop
mov
pop
insl
push
add
in
mov
mov
scas
jmp
data16
dec
push
push
mov
and
dec
or
data16
ds
dec
and
enter
fldt
rorw
stos
dec
lahf
les
sahf
mov
out
addr16
push
dec
das
jns
sbb
jp
push
xchg
movl
in
cwtl
shlb
mov
cmp
icebp
insb
dec
sbb
jp
fwait
and
scas
ja
jmp
or
pop
adc
sub
ret
arpl
rorl
or
pop
call
cmp
jge
jmp
and
and
insb
aaa
cli
cmc
xor
sahf
push
sbbl
fimuls
mov
dec
sbb
popa
add
loopne
cwtl
cmp
mov
jne
test
repz
out
rcr
lods
jnp
jmp
cwtl
pusha
push
cmc
mov
ds
aas
pop
test
mov
movsl
imul
testb
push
xchg
cmpsl
repnz
clc
pop
mov
hlt
add
mov
aaa
in
clc
test
lock
imul
add
cmp
or
xchg
xchg
xchg
mov
fnstcw
enter
mov
fisttps
shlb
hlt
cmp
pusha
mov
add
adc
sub
bound
sbb
int
pop
cmpl
add
cmc
dec
sbb
jl
lahf
xchg
xchg
lock
scas
cmp
scas
nop
pushf
xor
mov
push
cmp
mov
sarb
xchg
test
stos
mov
gs
sbb
out
scas
fisubrs
sbb
repnz
sub
add
mov
testb
rclb
inc
xlat
das
lock
cmc
jae
dec
jmp
inc
aaa
movsl
mov
cld
mov
sub
mov
icebp
lods
test
push
mov
shlb
sbbb
out
mov
bndldx
aaa
push
dec
inc
xchg
insb
clc
jge
sub
addr16
roll
sub
add
notl
mov
pop
adc
lea
cmpsl
pop
movsb
or
xor
jg
inc
push
sbb
push
mov
mov
dec
mov
insb
aad
fstl
push
stos
pop
aad
sub
push
cmp
mov
cmp
stos
xor
lock
sbb
loopne
jecxz
cmc
cmp
inc
test
hlt
gs
fdivs
dec
push
and
cmpl
push
fimuls
xor
pop
pushf
xchg
inc
jge
dec
repz
sbb
js
loop
mov
insb
push
pushf
dec
push
addl
outsl
mov
lret
sbb
jno
lret
or
mov
lret
popa
cmc
cmp
jle
or
sub
test
pop
mov
push
fimull
lods
sbb
mov
mov
dec
push
movsl
pushf
ds
sub
cmp
inc
add
repnz
imul
popf
and
sub
loopne
sbb
lcall
pop
mov
cmp
in
and
stos
and
loop
js
jnp
cmc
aad
inc
fsubrl
mov
arpl
in
sbb
mov
push
push
fisubl
shrb
xor
push
dec
jge
cwtl
adc
cmp
jnp
adc
in
dec
cmp
ror
or
xchg
and
xchg
sbb
cmp
xorl
pop
mov
mov
jmp
cltd
cmp
or
ss
sbbl
shll
cmp
mov
or
or
xor
mov
pop
and
cmp
repnz
out
add
call
xlat
stc
sbbb
call
sub
sbb
sub
lret
jmp
dec
cs
push
bound
mov
bound
fdivrs
cmc
scas
mov
pusha
push
jbe
aaa
sbb
lods
iret
mov
sub
cmp
int3
stos
sbb
cmp
jno
or
iret
fwait
add
xor
mov
jb
sub
in
sti
cmp
and
xorb
push
pop
or
jo
dec
pop
fistl
adc
sbb
lahf
in
shl
push
cmp
xor
jae
and
sahf
cltd
xchg
jb
xchg
mov
in
cmp
out
mov
cmp
fisubrl
dec
add
push
fs
mov
popa
sbb
cmpb
pop
out
or
jnp
mov
mov
adc
push
xchg
and
xor
or
push
mov
aas
das
mov
inc
rcrb
jl
in
fadds
cmc
pop
push
pop
push
xor
mov
push
hlt
pop
insb
das
xor
pop
add
pop
inc
loope
xorb
fcompl
push
push
pop
push
and
sarl
subb
jp
sbb
push
cmpsb
add
sbb
jne
sti
outsl
jb
and
outsb
fidivrs
fnstenv
movsb
lods
adc
mov
hlt
scas
push
inc
cmp
push
lods
cld
or
int
and
push
xor
addr16
and
mov
xor
movsb
add
mov
cwtl
xchg
gs
push
or
or
pushf
cmc
mov
push
repnz
cmp
and
pop
stc
inc
test
cmp
inc
cmp
jns
dec
sti
hlt
adcl
cmp
jmp
lods
ljmp
mov
cwtl
mov
xchg
mov
mov
or
jg
jl
mov
insl
arpl
adc
fwait
out
insb
loopne
cli
stc
mov
aam
mov
lea
adc
fsubr
adc
icebp
inc
dec
inc
and
aas
mov
rcr
lock
inc
clc
cmc
cmc
pop
test
mov
imul
out
bound
jmp
mov
xchg
push
add
rcrl
lds
scas
and
xchg
or
adc
sbb
mov
aaa
sbb
inc
and
fstl
fwait
insb
xor
pop
mov
push
aaa
inc
rcl
enter
ret
jmp
lea
sbb
sub
ljmp
inc
decb
sbb
and
mov
adc
adc
mov
xorb
adc
aaa
push
cs
mov
inc
jl
jl
das
jg
ficoms
cmp
mov
inc
dec
jl
mov
jecxz
push
adc
pop
cmp
repz
mov
xchg
std
leave
repz
lock
fwait
adc
out
pop
iret
push
ss
mov
orb
frstor
jae
push
inc
and
add
enter
or
jns
and
or
dec
std
loope
iret
test
mov
pusha
cltd
enter
add
ret
gs
jne
lahf
xchg
and
cs
jge
in
pop
push
xor
mov
jns
je
imul
jg
addr16
push
fstps
mov
std
imull
push
cmp
test
addr16
jg
je
idivb
cmp
pop
sub
in
xor
jp
xor
aas
fs
and
cmpsb
outsl
fs
stos
jno
fldcw
push
pop
hlt
lret
jo
les
out
mov
in
test
cmpsl
cltd
loop
stos
jecxz
shrl
inc
pop
xchg
push
jb
push
adc
cmpsb
imul
xchg
dec
jo
and
lret
and
pop
shl
sarl
enter
jge
dec
arpl
lahf
or
jnp
xor
mov
inc
sub
xor
in
mov
cmpsl
in
repz
mov
movsl
inc
jb
and
cmp
lahf
pop
js
orb
adc
sbb
movsl
leave
cli
pop
push
negl
mov
mov
popf
pop
aam
cmp
mov
mov
inc
insl
sub
push
imul
jmp
and
jbe
aaa
cmp
bound
and
pop
cmp
mov
pop
stos
or
sti
out
add
xchg
inc
fisubrs
fcmovu
xchg
sub
loopne
aas
es
cmp
ret
lret
sbb
lahf
xor
xchg
jp
xlat
sub
mov
not
mulb
sub
stos
jge
xchg
lea
jge
add
cmp
xor
jno
sub
xor
ret
lock
and
cmp
aam
jge
sub
enter
jmp
pop
fisubl
das
cmp
aaa
fldcw
sub
das
and
mov
imulb
rcl
mov
cmp
stos
or
iret
movsb
or
sub
iret
xor
adc
mov
cmp
or
mov
andb
fs
xchg
adcl
and
dec
cmp
inc
or
outsb
inc
hlt
pop
adc
test
fcomi
mov
sub
dec
push
add
cmpsb
inc
icebp
cmp
fs
adc
sbb
loop
cmp
pop
pusha
xor
xchg
mov
cltd
or
lret
les
mov
and
insb
xor
stos
inc
add
pop
xor
adc
mov
cmp
ficomps
loop
je
int3
nop
or
mov
xchg
cmpl
lds
arpl
repnz
fincstp
mov
xchg
cmp
or
nop
jb
inc
xchg
sbb
fmul
adc
lods
arpl
into
jne
mov
mov
imul
icebp
lock
mov
inc
testl
enter
sbb
lods
mov
or
loop
adc
scas
inc
and
cmp
fsubl
fldlg2
cld
cmp
nop
and
gs
movb
or
sbb
and
dec
inc
mov
push
popf
xchg
push
fcompp
loop
cmovne
xor
scas
mov
jl
cmp
jne
sar
addl
insb
dec
or
or
pop
enter
ret
pop
dec
inc
cmp
aad
pop
sub
divl
ss
sbb
loop
pop
lods
loop
clc
push
push
jae
addr16
pop
rorb
cmpsl
roll
jne
inc
scas
mov
mov
and
pop
cs
xor
enter
fdivr
sbb
lret
and
xorb
cwtl
in
mov
repz
in
xchg
pop
cmpsl
sub
push
xor
fisttps
scas
pop
mov
dec
jle
add
mov
in
inc
sbb
fnstenv
mov
andb
and
clc
ret
jne
cld
cmp
ret
cmp
out
fstpl
sbb
pop
or
add
mov
in
mov
into
aas
pop
adc
ja
aas
shrl
daa
pop
sbb
push
clc
sub
icebp
aad
outsb
aas
lock
pop
mov
fs
lods
cmp
lahf
cli
insl
or
loopne
xor
dec
cmp
xor
xchg
inc
dec
scas
shrl
xor
push
loop
or
inc
ret
dec
mov
lods
push
in
lods
push
push
cmp
pop
pop
pop
mov
call
mov
into
int
add
pop
lds
mov
call
xchg
imul
cmp
jo
mov
push
jb
xchg
pusha
or
aam
xchg
mov
ds
sbb
fmul
sub
outsl
shll
enter
mov
add
pop
push
and
jge
mov
and
neg
inc
and
cmp
ja
adc
lods
ret
cwtl
or
push
out
push
xor
mov
es
insb
out
pop
mov
pop
in
push
iret
loope
jne
cmp
movsb
pop
sub
test
fstl
stos
adc
mov
dec
sbb
nop
stos
notl
push
icebp
out
push
mov
mov
ljmp
push
pop
push
repz
and
xor
hlt
xor
sub
clc
adc
lods
repnz
pop
push
jbe
jo
imul
pop
scas
ret
fisubrs
xor
sbb
int
and
push
mov
and
mov
ds
rorb
or
sbb
mov
mov
pop
dec
cs
dec
or
inc
adc
aas
rcrl
fiadds
xor
das
mov
sub
inc
fstpl
dec
fisttpll
mov
fcomps
mov
lret
push
aaa
sbb
jecxz
jno
cld
cld
adc
push
stos
mov
stos
movl
sbb
enter
mov
cld
int
push
iret
mov
lahf
lcall
test
ds
out
jl
stos
out
add
lock
fsubrs
shlb
push
aaa
outsl
movsb
dec
lcall
push
xchg
out
lahf
fsubrs
cmpsb
das
inc
ljmp
in
pop
stc
out
cmc
bound
mov
pop
sti
pushl
cmpsb
xor
mov
push
bound
addr16
enter
lret
sub
cli
inc
adc
mov
xor
out
push
mov
xchg
mov
xor
jmp
dec
cmp
adc
or
pop
int
ss
loop
out
cmp
sub
pop
cmc
push
or
cmpsb
sbb
push
xor
and
ljmp
xor
out
jl
jae
sbb
ljmp
jg
adc
pop
xor
cli
jmp
add
sbb
pushf
fstl
cli
xchg
and
xorb
jno
jo
mov
in
dec
mov
iret
mov
pop
sbb
fs
imul
aad
mov
jno
push
push
call
adc
inc
in
rolb
std
jge
les
sub
paddd
ds
jmp
and
xchg
jbe
or
imul
fldt
test
adc
test
xorl
mov
pop
in
jg
std
fs
pop
cmc
jno
adc
push
rcll
iret
xchg
pop
in
adc
push
sub
push
sbb
xchg
ljmpw
add
mov
adc
out
cs
movsl
or
ret
repnz
rcll
mov
loope
xchg
shll
lods
ja
push
jno
std
movsl
loope
push
movsl
xchg
add
shrb
rcrb
sub
and
or
fwait
inc
pushf
cmc
xchg
adc
ficoml
sub
push
cmp
insb
pop
insl
aam
adc
fldenv
divb
add
mov
rclb
mov
cli
popa
xor
addr16
dec
shrl
ss
mov
sbb
lcall
push
daa
bound
mov
adc
notb
test
icebp
lock
test
xorb
popl
cmp
mov
xchg
outsb
test
pop
or
adc
mov
ja
test
mov
bound
dec
dec
xor
cmpsb
mov
adc
jp
cmpsl
stc
xor
pop
mov
mov
mov
xor
xor
jle
cmp
aaa
pusha
xor
xor
call
mov
add
push
push
mov
xor
das
cs
jne
xor
cmp
sub
jo
jbe
dec
jg
push
std
fcmovu
push
cmp
es
and
push
in
out
cmp
repnz
lock
test
js
or
dec
sbb
orb
adc
ss
test
xchg
and
lea
fwait
sbb
xor
negb
pop
push
add
icebp
ja
sub
fs
leave
js
fwait
cmp
push
inc
ds
sub
daa
xlat
cmc
aad
icebp
xor
dec
pop
xchg
insb
outsl
imul
stos
pop
xor
mov
loopne
push
push
fcmovu
push
leave
jb
ds
or
incl
dec
xor
push
jb
adc
jge
aaa
cltd
outsl
and
test
clc
mov
es
mov
xor
mov
in
mov
xor
sbb
pop
loopne
jbe
xchg
push
lods
mov
sahf
or
cwtl
loop
dec
jo
mov
sub
inc
push
loope
dec
insb
fistps
xor
xchg
iret
pop
pop
xchg
cli
mov
xchg
or
cwtl
ss
stc
sub
xchg
jmp
sub
mov
lret
in
cli
jae
in
mov
movsb
lods
pop
cmovbe
push
repnz
fdivl
inc
sbb
dec
movsl
xor
or
lods
sbbb
sbb
mov
dec
stos
imull
shr
mov
push
les
mov
mov
xchg
push
adc
lret
mov
sub
sub
jle
xor
mov
insb
jbe
in
js
or
xchg
jp
dec
adc
mov
ret
dec
fiaddl
push
sti
lret
cmp
mov
and
inc
cld
mov
outsb
lods
inc
fnsave
adc
cs
add
sti
jbe
out
out
push
xchg
sbb
stos
xor
sahf
das
nop
cs
mov
push
xchg
push
dec
out
fsts
inc
lock
sub
cmpsl
push
cld
inc
mov
jae
movsl
mov
fildll
aad
xchg
data16
xor
cmp
sar
push
xor
scas
jg
call
fcmove
es
cli
and
add
or
pop
push
pop
xorb
add
or
inc
dec
orl
repz
jne
pushf
stc
dec
pop
dec
loope
add
in
lods
dec
add
mov
pop
xchg
ss
sub
sbb
cli
faddl
mov
pop
fimuls
cmp
loop
pop
int
mov
mov
add
addr16
inc
xchg
test
std
lock
enter
jle
cltd
ffreep
lock
lods
call
mov
sub
inc
lea
insl
pop
inc
repz
aaa
mov
imul
jg
negl
test
cmp
insl
sub
or
mov
cmp
dec
outsb
push
xor
xchg
push
mov
test
xchg
push
test
scas
and
mov
repz
iret
ds
or
mov
pop
cmp
jb
lcall
adc
mov
push
and
imul
js
pop
popf
dec
imul
xor
pop
andb
bound
lea
mov
jno
jns
inc
out
dec
push
aaa
aam
test
rcrl
test
movsl
repnz
xor
add
addb
add
daa
mov
pop
xchg
pop
mov
adc
and
enter
inc
fwait
pop
add
mov
sahf
mov
stos
fbld
stos
in
dec
and
or
outsb
mov
orl
jecxz
xchg
xchg
mov
mov
pop
mov
pushf
pop
jmp
and
cs
loope
push
mov
scas
cmpsb
les
add
stc
pop
std
cld
or
fnstenv
push
fdivrl
divb
rcr
loop
and
movsb
data16
in
popf
pusha
leave
repnz
dec
inc
lret
adc
adc
mov
cmp
sub
out
inc
push
sbb
push
bound
repnz
pop
pushf
cmpsb
sub
lret
orl
aas
addr16
sarl
stc
leave
mov
sbb
dec
push
pop
cmp
mov
jecxz
and
lret
mov
out
lock
test
pop
and
stos
fistl
xor
rcr
add
ret
inc
mov
cld
sbb
xor
shll
movd
pushf
mov
rcll
sub
dec
pop
jb
xor
xlat
mov
fisttpl
outsb
iret
mov
push
sub
sub
loop
shll
jb
dec
lea
adc
or
push
popf
shrl
dec
inc
pushl
ffreep
test
cmp
es
mov
rolb
sub
gs
sub
and
andl
pop
jae
popf
int3
push
test
dec
mov
mov
leave
inc
out
inc
cli
mov
mov
shlb
adc
mov
call
mov
in
or
in
movsb
sub
mov
mov
arpl
mov
mov
jns
mov
inc
sub
push
xchg
or
cltd
and
mov
imul
movsb
outsl
lock
insl
jae
and
aas
cmp
fildll
out
loopne
loop
or
dec
pop
xor
test
adc
rol
xor
or
or
loopne
test
ror
das
cld
std
or
inc
loopne
aam
push
cmp
int
into
mov
jp
push
sub
loop
mov
jg
xchg
ficoms
dec
sahf
addr16
cmp
iret
adc
shl
push
sub
push
ror
pop
fdivr
cltd
inc
xchg
ja
add
in
cld
pop
das
sub
mov
pop
pop
xor
dec
nop
clc
xor
fstpl
out
aad
shlb
data16
data16
jle
fwait
ja
inc
mov
adc
sub
cmp
pop
mov
push
mov
ret
mov
xor
mov
pop
xchg
int
inc
xor
cwtl
test
lds
inc
dec
and
add
xchg
mov
mov
sub
subl
add
mov
std
sub
ds
or
sub
mov
outsl
lds
jne
into
jo
mov
mov
out
push
in
xchg
jmp
cld
mov
cld
enter
aaa
enter
cmp
aaa
lods
xchg
push
adc
sbb
or
cmp
jecxz
lahf
int3
mov
out
shll
insb
mov
shlb
jb
and
inc
add
sti
push
sub
jecxz
sub
mov
mov
xchg
ja
adc
adc
mov
sbb
rorl
adc
pop
sbb
cmp
dec
insl
add
cmpsl
sub
loopne
mov
adc
shrl
xor
push
sub
jb
cmp
cmpsl
into
scas
lds
movsb
mov
sarb
cmp
test
bound
pop
jp
sbb
mov
arpl
mov
xchg
sub
and
lea
popf
aad
ss
sbb
movsb
jg
xchg
in
sbb
hlt
lahf
sub
rclb
stc
sbb
mov
inc
xor
divl
sarb
push
pushf
ret
xchg
nop
jno
mov
xchg
or
cmp
mov
jl
imulb
push
push
lcall
mov
adc
mov
sbb
lcall
mov
dec
cld
orb
stos
xchg
dec
js
int3
mov
test
shl
add
ret
js
pop
xchg
add
or
add
aad
adc
xor
jp
mov
outsl
out
movsb
mov
dec
pop
ljmp
lret
leave
fistpll
mov
enter
mov
scas
shll
push
add
js
dec
push
add
fadds
das
dec
cmp
sar
dec
push
insl
and
lods
inc
movsb
jae
lret
pop
ds
inc
push
or
pusha
leave
adcl
adc
push
sbb
and
xor
dec
and
jo
lret
fidivs
mov
imul
fistl
repnz
adc
in
mov
add
stos
push
inc
imul
or
pop
out
xor
mov
test
jge
inc
mov
je
shll
and
add
icebp
into
fdivr
mov
aas
inc
xor
adc
cwtl
pop
ret
xchg
mov
sti
outsl
pop
lahf
and
push
mov
movsl
jae
cmpsb
loope
push
aad
inc
in
sub
adc
mov
movsb
mov
and
fsubrl
add
hlt
loopne
push
xchg
sub
sbb
out
out
push
push
jne
or
std
neg
test
nop
rolb
dec
loope
lds
push
cmp
fstpt
lds
fstps
sub
andl
jmp
in
cmpsb
addr16
mov
xchg
fsubl
icebp
cmp
out
in
icebp
jb
fildll
call
mov
sbb
dec
pop
push
jle
scas
mov
in
fisubrl
es
pop
add
mov
pop
rcrb
test
lret
outsl
push
dec
sbbb
faddl
sub
incl
repz
xor
mov
out
outsl
test
sahf
cmp
ret
ds
cmp
std
inc
sbb
cwtl
adc
std
cmp
lret
dec
inc
mov
sub
and
stos
add
push
mov
sbb
in
cmc
jnp
movsl
dec
xchg
push
out
mov
ljmp
std
mov
fldt
sar
js
adcb
cmp
test
cmp
notb
cmp
fiaddl
dec
mov
std
scas
sub
cltd
into
shll
stos
mov
xchg
jns
sbb
sbb
jns
pop
adc
in
jno
ja
sub
jnp
adc
in
mov
push
popf
mov
lods
int
lock
mov
mov
inc
lods
jns
je
add
cmc
mov
lcall
lcall
mov
fs
jnp
lahf
mov
cmp
out
add
pop
lock
cld
call
ds
leavew
incb
sbb
jecxz
jnp
xor
sbb
imul
add
mov
xchg
ja
hlt
ljmp
add
inc
pusha
or
xchg
jno
popf
push
pop
sub
push
pop
jns
xor
sti
iret
setne
rorb
ss
in
ljmp
or
nop
cld
or
aad
mov
gs
adc
hlt
inc
sub
ss
leave
lcall
inc
aad
xchg
mov
cmpsb
sub
lods
nop
jnp
or
push
cmp
lcall
sbb
add
jns
pop
sahf
jmp
cmp
addr16
jnp
mov
scas
sub
push
aas
outsb
outsl
cmpxchg
lods
cmc
loop
fldcw
into
xchg
push
dec
iret
sub
dec
xor
mov
clc
or
dec
xor
sbb
mov
and
inc
jecxz
mov
data16
outsb
dec
xor
xchg
movsb
add
fstps
into
imul
mov
ja
adc
adc
out
outsl
gs
xchg
inc
insb
push
xchg
leave
ja
leave
mov
pusha
in
call
add
mov
stc
pop
adc
inc
rcrl
in
mov
pop
mov
cmpsb
loope
aam
xchg
xchg
xor
adc
mov
add
stos
cmp
shl
xor
or
out
inc
daa
lcall
xlat
ss
jne
push
adc
sbb
pop
stos
dec
push
cmp
pop
ret
inc
inc
mov
mov
mov
sbb
push
cmpsl
popa
and
loope
add
sbb
inc
xchg
out
int3
aad
es
hlt
shll
push
xchg
icebp
push
inc
add
gs
call
xorl
xchg
addr16
sub
mov
pop
out
ja
pushf
fistl
lret
mov
sbb
pusha
rcl
inc
dec
jno
int3
test
inc
ret
enter
adc
dec
out
xorb
push
test
shll
inc
cwtl
adc
into
jno,pt
lcall
mov
inc
ret
fcmovnu
jp
push
clc
outsb
dec
outsl
aad
movsl
in
insl
xchg
lea
mov
jno
je
add
incb
xchg
mov
inc
mov
pop
push
adc
dec
imul
mov
jo
outsb
scas
roll
daa
les
pusha
lea
and
popf
sti
pop
dec
jbe
jne
dec
xlat
loop
adc
xor
movsl
sarb
loopne
scas
pop
int3
outsl
xlat
jae
fistl
adc
push
cld
xchg
sub
in
pusha
push
dec
cmp
sub
insl
mov
or
movb
adc
fwait
lds
imul
adc
jg
sti
add
jg
pop
sbb
cmp
in
sub
out
orl
aam
jb
sarb
and
lret
xchg
enter
cmp
rorl
sti
pop
xor
cwtl
popa
mov
jecxz
shl
xchg
cld
jl
mov
mov
xor
insb
lahf
jae
push
cmc
add
xchg
or
je
scas
lret
inc
sbb
outsl
cltd
shll
mov
pushf
aad
inc
clc
leave
push
aad
sub
cmpsb
jge
cmpsl
xor
popf
int3
add
mov
jbe
push
push
addr16
repz
sbb
das
daa
jmp
mov
dec
inc
xor
mov
pusha
cmp
inc
paddusb
int
fldl
xchg
xchg
pop
sahf
jno
insb
add
sbb
out
mov
fldenv
push
cmp
adc
rcrb
jnp
mov
mov
inc
xor
fsubrs
add
sub
aad
rcll
cmpsl
dec
inc
push
xor
jecxz
adc
jb
ror
sarl
mov
aad
and
aas
stc
push
mov
pop
mov
pop
jno
orl
adc
sbb
pop
gs
sbb
repnz
iret
mov
xor
loop
sub
push
das
in
xor
fstl
adc
pop
test
aad
xchg
call
int
aaa
or
xchg
stos
in
xchg
ss
xor
fs
fs
lahf
sub
adc
clc
outsl
les
lods
outsl
inc
pop
dec
push
scas
adc
add
adc
jb
push
aas
pusha
sub
movsl
push
sbb
testb
js
mov
mov
sbb
jns
mov
ljmp
jle
push
aam
imul
mov
fisubl
scas
mov
xor
mov
inc
jo
repnz
xchg
sub
push
pop
push
mov
ss
ljmp
fst
add
or
in
inc
mov
mov
daa
push
and
jae
and
ficomps
daa
mov
xor
jae
sub
mov
mov
ror
out
pop
fisubrl
or
pop
cmpsl
xor
sbb
mov
cwtl
sub
jp
jb
outsb
pop
mov
js
mov
pop
dec
mov
pusha
popf
repnz
es
lods
jp
pushf
fisttps
in
movsb
jnp
pop
ret
lds
xor
in
lret
sub
pop
add
mov
outsb
je
ds
loope
aam
mov
icebp
cwtl
jae
cltd
cwtl
imul
push
lcall
js
data16
into
ss
sti
pop
mov
mov
mov
push
add
sbb
enter
mov
fistpl
cs
mov
add
cwtl
clc
lods
push
pop
sub
or
or
push
jmp
xchg
arpl
pop
add
ret
xchg
jnp
jmp
fnsave
lods
notl
or
add
lods
jo
cmc
push
and
clc
movl
aas
mov
sbb
rorl
add
cmp
negl
jecxz
push
les
adc
int3
dec
jnp
adc
dec
iret
jno
and
jp
mov
inc
cltd
fstpl
lock
adc
aad
in
cmp
sbb
push
sti
mov
add
ficoms
xor
loopne
push
fisttpll
add
aaa
mov
out
jg
je
out
mov
pcmpgtd
ljmp
sub
mov
es
ret
jns
push
mov
shll
inc
pop
xchg
jecxz
push
lds
sub
stos
icebp
cmp
loop
jge
lret
js
dec
push
in
jnp
aas
cli
fildll
mov
rcrl
jne
fwait
dec
push
scas
adc
sti
and
fwait
and
adc
add
mov
aas
jecxz
xlat
sbb
int3
mov
call
or
push
dec
or
xchg
adc
call
fdivs
xchg
dec
jbe
and
push
xor
movsl
call
jb
mov
xor
decl
jmp
xchg
sbb
xchg
pop
push
ds
add
sub
xchg
outsl
pop
lods
dec
lcall
pop
mov
jg,pt
dec
popf
pop
sub
ljmp
jnp
sti
cmpsb
fdivrs
mov
call
in
in
xlat
std
inc
aad
ja
lods
adc
pop
sbb
cmpl
fwait
add
mov
inc
ror
and
add
mov
addr16
add
lods
arpl
out
mov
sbb
sbb
inc
pushf
jmp
iret
outsb
nop
or
and
mov
jo
adc
ret
lcall
pop
pop
in
cli
fbld
clc
enter
sarb
push
mov
push
lds
xchg
lcall
dec
push
jnp
or
enter
sub
test
lods
in
sbb
iret
inc
xchg
clc
xchg
push
jo
fcmovu
lret
cwtl
pushf
sbb
inc
add
mov
add
repnz
je
mov
lock
fidivl
js
lahf
shlb
jne
inc
mov
fs
iret
int3
push
xor
subl
into
jne
sub
add
mov
lahf
push
add
dec
scas
pop
syscall
adc
cmpsl
inc
in
in
push
xchg
stc
int
int3
push
xor
std
out
xor
jge
loop
insb
mov
adc
mov
cmpsl
mov
repz
mov
out
data16
xchg
or
or
imul
ret
out
jmp
push
sar
pop
xchg
cwtl
insb
mov
sbb
mov
cmp
mov
sbb
sub
insl
js
addr16
inc
mov
push
out
scas
mov
mov
jno
push
aad
jno
xchg
je
xchg
dec
in
pop
cmp
xor
dec
sub
jo
cmp
push
sub
sub
or
in
mov
cltd
mov
stos
push
mov
pop
stos
dec
jnp
push
orl
or
inc
mov
push
mov
jne
pop
sbb
gs
jae
insb
mov
dec
ja
shll
and
sarb
lods
dec
mov
mov
mov
aad
and
fiadds
or
jg
mov
xor
push
mov
jnp
mov
sbb
pushf
xchg
jle
call
insb
inc
pop
add
fwait
sub
mov
cwtl
fadd
dec
xchg
jnp
repnz
cld
xor
add
adc
jns
outsb
xor
cmp
mov
xor
arpl
inc
dec
pop
and
popl
dec
movsl
stos
or
dec
fs
jmp
loopne
flds
pusha
xchg
cmp
push
test
data16
inc
shrb
lea
dec
fwait
and
rolb
pop
jmp
test
fmul
sub
cmp
in
push
add
jle
lods
inc
push
jae
out
xlat
icebp
jmp
pop
sbb
repnz
pop
pop
mov
inc
outsl
leave
mov
repnz
mov
mov
ficoms
aas
pop
pop
call
je
insl
push
cltd
call
sbb
mov
push
and
mov
test
int
movsl
mov
repz
push
lds
fnstenv
mov
in
andnps
aaa
push
test
dec
out
xor
push
mov
and
dec
popf
xor
sbb
sub
and
aam
jmp
pop
push
add
xlat
lret
jle
decl
push
mov
jmp
inc
addr16
cmpsb
mov
sub
xor
cmp
stos
sub
imull
out
icebp
and
jg
mov
imul
mov
stc
and
rorb
jl
jp
xchg
add
pop
mov
rcrl
add
shl
mov
cmp
mov
push
pop
cs
sub
mov
lahf
inc
fmuls
movsb
sti
sub
push
xchg
add
inc
mov
aas
sub
hlt
sub
out
add
data16
xchg
inc
push
fildl
or
sub
in
test
ret
mov
xlat
xlat
nop
mov
popl
adc
jmp
push
mov
fistl
idivl
pop
lret
xor
add
sbb
outsl
push
inc
and
jb
rol
ja
xchg
in
adc
test
xlat
mov
call
gs
enter
cmp
mov
jmp
cmp
push
dec
pushf
lods
sti
pop
dec
adc
jno
rorl
je
pop
js
xor
mov
xlat
and
xchg
add
pushf
test
fisttpll
mov
repz
adc
mov
dec
dec
mov
jecxz
mov
xor
fnstsw
inc
mov
outsb
outsl
adc
in
inc
xchg
lods
xor
mov
cmp
notl
popa
insl
popa
daa
pop
arpl
scas
mov
jle
divb
imul
cli
scas
sarl
cmp
mov
inc
mov
lock
jbe
pop
int
push
push
mov
jne
ja
std
sbb
inc
mov
movsb
shr
dec
cmp
pop
das
dec
aam
mov
pop
test
ja
arpl
jno
mov
jo
fcompl
dec
ja
out
and
adc
lods
adc
stc
add
inc
add
xor
mov
and
repnz
inc
imul
push
or
ficompl
fstl
fwait
jnp,pn
adc
insl
sbb
out
popa
imul
or
push
jg
add
adc
fmulp
notb
jns
rcr
stc
mov
mov
xor
xor
pop
divb
pop
mov
pushf
push
pop
mov
add
aas
das
out
cmp
std
add
mov
jge
mov
and
mov
mov
insl
mov
mov
mov
push
or
test
push
out
adc
pop
and
movsl
push
mov
pushf
arpl
das
lret
mov
hlt
or
adc
out
dec
outsb
mov
or
stos
scas
scas
cmpsl
test
roll
mov
js
xchg
addl
fbld
xor
cmp
mov
lret
in
push
iret
aam
cmp
fchs
mov
xchg
lret
addr16
rcl
adc
rcrl
dec
fcoml
push
add
jle
lds
ficoms
lret
push
fistps
insb
popa
pusha
lret
sub
rcll
loopne
push
in
xchg
sbb
pop
sub
int
add
aad
dec
lock
out
mov
inc
push
jno
mov
cmp
mov
lret
xor
push
pop
mov
daa
std
stos
sub
mov
or
xor
dec
jecxz
frstor
aas
stos
aam
rolb
jnp
or
aaa
xchg
ret
pop
fsubs
sarl
sbb
fmul
sbb
sub
pop
test
fdiv
xchg
fisubs
xor
cmp
cmp
sarb
addr16
push
or
or
mov
add
stos
or
xchg
and
cli
push
scas
adc
inc
xchg
fcomps
add
sub
arpl
sub
cmp
movsl
aad
ss
jmp
decl
cmpl
out
or
movsb
rclb
xchg
in
jnp
mov
mov
pop
outsb
out
fstps
lret
outsb
dec
add
or
scas
pop
push
mov
ret
mov
fidivs
out
das
xor
outsb
cmpsl
cmp
dec
cmc
mov
sbb
sub
and
pop
fwait
lcall
sbb
nop
daa
cmp
rclb
test
mov
sbb
arpl
dec
imul
cs
add
push
jmp
gs
cmp
jnp
shlb
or
ret
cmpsb
lods
push
pop
out
mov
jb
adc
jnp
push
fwait
mov
adc
aas
dec
js
sbb
imul
and
lret
inc
andl
mov
ret
mov
push
ljmp
jmp
jecxz
mov
and
push
sub
sarb
inc
shrb
pop
inc
out
xor
lods
out
sbb
add
bound
mov
mov
test
daa
mov
test
mov
mov
cmpsb
stos
andl
lahf
mov
push
sbb
imul
push
pop
inc
and
adc
lahf
ja
imul
jmp
lahf
lcall
jg
jecxz
jo
push
insl
mov
ljmp
inc
xor
mov
and
fisttpll
sahf
jmp
mov
adc
ret
rclb
fwait
sbb
loopne
pop
jne
mov
jl
or
out
inc
ja
sub
mov
outsb
xchg
sbb
js
add
adc
mov
fmul
das
push
mov
mov
sbb
or
call
aad
pushf
jg
enter
cmp
out
daa
test
stos
nop
cmp
repnz
out
mov
dec
xor
movsb
call
add
fisttpll
scas
mov
dec
js
scas
inc
mov
cmp
fildll
cmpsl
jp
in
adcl
ret
das
enter
inc
or
leave
cli
ljmp
xchg
mov
jno
xor
add
push
mov
sub
xlat
sub
out
bound
push
sbbl
arpl
imul
arpl
lcall
xor
shrl
mov
jl
data16
es
or
jno
push
and
mov
jecxz
jnp
and
rorb
inc
xchg
lcall
mov
orb
stos
add
and
xor
or
ret
push
rclb
adc
sub
xchg
push
or
xchg
je
mov
fisubl
sub
mov
aad
lods
lods
dec
xchg
mov
sarl
xchg
outsb
idivl
push
mov
lea
fisttps
jnp
incl
mov
sbb
loope
jne
pop
mov
arpl
adc
hlt
mov
jle
pusha
sahf
and
jno
jne
ja
popf
test
stos
jl
sbb
cltd
jne
and
mov
dec
fsubs
shll
leave
inc
sarb
jae
nop
fistpl
aad
mov
or
mov
adc
adc
pop
mov
div
dec
jno
ss
dec
jl
jnp
pop
jle
push
sub
mov
js
cmp
lods
or
stc
adc
sub
out
mulb
lahf
lret
iret
in
setb
pop
mov
sub
stos
cltd
popf
ret
xorl
adc
aam
sub
lea
or
fs
mov
adc
sub
icebp
pushf
pop
int
fisubl
movsl
sbb
cli
in
cwtl
sub
hlt
pop
xor
repz
mov
push
aas
nop
lret
xor
xor
inc
mov
or
add
ljmp
inc
xchg
jmp
pop
or
call
push
lods
jno
aas
pop
loope
aam
pop
daa
out
mov
xchg
adc
xchg
negb
les
daa
fisubl
push
jns
xor
mov
aad
xchg
cwtl
pop
in
nop
fwait
or
loopne
inc
les
cmp
and
or
out
and
mov
sbbb
in
mov
scas
mov
into
dec
lock
das
stos
orl
jmp
mov
nop
subl
int3
int3
mov
jl
mov
add
sar
inc
sub
add
mov
ljmp
sub
pushf
andl
adc
je
xchg
add
fistpl
lea
pushf
mov
clc
call
or
and
adcb
stos
jmp
inc
sbbl
and
aad
pop
outsb
push
ds
lock
ljmp
dec
lret
xlat
cmp
into
in
les
into
inc
sub
push
xchg
in
add
push
adc
mov
scas
jo
out
rorl
dec
pop
xchg
movsb
jae
cmp
insb
xor
ja
std
mov
popa
sub
test
add
aam
inc
mov
jo
lock
fadds
fidivl
mov
inc
repz
dec
mov
sarb
sbb
pop
mov
inc
repnz
roll
sbb
scas
repz
mov
into
pop
dec
loopne
insl
jecxz
mov
cmp
cmpsl
imul
fists
out
push
test
dec
out
sbb
and
in
push
call
or
cmp
fsub
rcl
fadds
mov
lret
outsb
sub
hlt
fnstenv
and
lods
mov
popa
xchg
test
jbe
and
andl
sub
pop
sbb
mov
mov
push
aam
mov
stc
push
push
mul
pushf
inc
sub
pop
call
adc
pop
int
in
ja
cs
inc
lret
and
mov
pop
addr16
and
lret
mov
mov
add
movsl
outsl
lahf
and
lret
sub
adc
testb
imul
stc
inc
sbb
xor
call
dec
jo
data16
xlat
xor
sbb
out
aas
sub
inc
and
pop
dec
fs
punpcklwd
stos
xchg
decb
mov
cli
adc
push
in
sbb
jecxz
test
out
lock
pusha
mov
test
std
sbb
pop
or
mov
sub
xor
aad
rcrl
lock
out
add
or
in
inc
lods
out
rep
lret
sarl
out
xor
ja
or
push
fiadds
jle
jmp
inc
sahf
or
fsubrp
imul
loop
xor
jo
jg
fwait
mov
in
test
pusha
mov
in
jecxz
jbe
xor
adc
pop
mov
or
sahf
sbb
sar
aaa
mov
fst
add
addb
pushl
xlat
add
stos
dec
imul
lea
jmp
lock
mov
or
or
adcb
jne
mov
loop
mov
push
dec
clc
push
out
pop
or
jecxz
xchg
out
mov
and
test
cmp
jle
push
inc
imul
mov
pop
enter
mov
dec
test
push
sbb
xchg
lods
cmp
push
inc
mov
mov
pushf
hlt
scas
ret
jl
or
movsl
or
scas
sub
sbb
addb
cmp
les
popa
ds
jg
in
push
int3
sbb
pushf
xchg
fimuls
pop
mov
ja
movsb
mov
pop
pop
push
mov
push
adc
pavgb
dec
dec
jno
cmp
bnd
aaa
sbbl
cld
mov
fisubs
pop
mov
pusha
sub
int
outsb
jmp
push
jns
and
mov
scas
insl
lods
out
push
lret
aam
sbb
mov
addr16
jb
xor
mov
cmpsl
mov
mov
dec
add
sub
std
jp
dec
xchg
outsl
xor
sub
loop
jo
cwtl
adcl
stc
cmc
sub
movsb
mov
test
dec
cld
mov
push
fwait
push
fsubr
dec
dec
shrb
add
aas
movlps
orl
idivb
movsb
dec
sub
shll
sti
mov
imul
lcall
or
loope
clc
xor
sbb
std
stos
les
dec
lds
xchg
lcall
lea
mov
loopne
insl
push
or
jnp
mov
fbstp
jp
push
insl
cmp
xor
sub
dec
lods
xor
pop
fwait
sbb
xor
fucomp
mov
sahf
int
pop
pop
test
out
push
stos
aaa
and
and
push
mov
fcmovne
dec
jbe
push
dec
or
mov
jo
inc
fdivs
nop
jb
add
pop
arpl
jl
addb
sbb
push
loop
adc
jnp
add
adc
push
negl
push
addr16
sti
sbb
sahf
sub
jmp
andl
shrl
pop
scas
cmpsl
sti
leave
jl
outsl
jecxz
rcll
adc
insl
or
mov
lahf
addl
dec
lock
int
and
jmp
fistpll
sbb
filds
add
lret
pop
push
sti
movsl
pusha
mov
les
sub
in
xor
xchg
jno
or
movsl
cmp
xchg
nop
push
out
rcrb
cmp
test
dec
ret
das
ja
dec
call
cmc
xchg
fildl
cmp
add
sub
adc
js
stos
or
dec
sbb
xchg
gs
or
out
paddsb
mov
ljmp
dec
ja
add
into
fsubrl
add
pop
dec
jle,pt
imul
sbb
mov
aam
cmp
mov
or
lods
inc
or
icebp
sti
inc
jge
cmp
dec
aaa
sahf
and
jg
mov
mov
aam
xor
adc
daa
inc
cmp
pop
jp
push
aaa
push
leave
dec
or
sub
and
jle
and
jns
sub
add
pop
add
aad
or
adc
sub
mov
movsl
in
mov
cli
call
dec
cmpsl
aas
stos
in
xor
shrb
fistps
neg
push
or
mov
add
iret
mov
inc
cmc
sub
aaa
hlt
jl
or
xchg
outsb
or
in
and
cmp
sbb
xchg
std
clc
mov
sbb
xchg
adc
jae
loop
loope
stc
xor
fcompl
lds
leave
pushf
test
loope
cmpb
clc
aaa
sub
dec
adc
add
mov
dec
test
in
adc
insl
fmull
mov
add
fists
pop
dec
adc
hlt
dec
shlb
pop
orl
divl
cmp
or
mov
mov
mov
add
test
cmp
int3
sbb
hlt
dec
add
dec
out
es
xor
or
add
jae
mov
daa
inc
aas
mov
push
inc
int3
rol
out
lods
pop
mov
repnz
arpl
inc
push
mov
fcmovne
and
cmp
jge
jno
lods
mov
lret
jne
fs
adc
lods
jl
mov
icebp
test
mov
loope
into
xorl
cmp
xchg
cli
xchg
les
cwtl
inc
cmp
sub
add
in
out
mov
mov
mov
pop
notl
adc
and
lea
pop
xchg
rclb
mov
xchg
dec
cmp
cbtw
mov
enter
ret
ds
dec
loopne
outsb
scas
mov
loope
sahf
xor
shll
pop
pushf
add
js
clc
mov
inc
sub
cwtl
decb
fisubl
mov
pop
nop
sbb
ss
cld
xchg
out
stos
push
lcall
add
add
ficoml
insb
push
pop
pop
cmp
stos
jl
or
out
push
jle
add
jo
add
in
loop
pop
ljmp
mov
adc
or
out
xor
inc
lret
out
cmpsb
clc
mov
movsb
cmp
inc
test
sub
mov
and
and
jl
cmc
xor
mov
test
mov
cmp
pop
data16
sub
leave
ljmp
or
add
mov
cmc
pop
or
jle
loope
hlt
and
sti
movsb
jnp
adc
and
xchg
call
cmc
aaa
and
xchg
sub
dec
add
test
hlt
jecxz
pop
out
dec
xorl
jp
leave
movsl
sub
cmpsl
or
dec
mov
mov
xor
mov
cmpsl
cmc
or
inc
adc
mov
rclb
xchg
inc
insl
movsb
imul
rcl
stos
icebp
dec
pop
loop
mov
push
add
dec
jmp
cmpb
dec
add
inc
or
insl
mov
cmp
lock
sub
out
data16
push
enter
popa
lret
xlat
in
mov
wbinvd
dec
sub
and
dec
out
sti
scas
sbb
sub
mov
mov
rolb
pushf
cmc
cs
push
fiadds
call
add
and
fcmovne
sub
add
dec
out
pop
cmpsb
insb
aas
mov
es
imul
lock
dec
push
lods
sub
mov
mov
call
adc
add
mov
inc
push
jmp
pop
jne
pushf
hlt
jns
movsl
lods
out
inc
mov
adc
outsl
subl
dec
mov
ret
in
mov
cwtl
jne
jl
rclb
xchg
insl
icebp
loope
lods
mov
dec
rolb
imul
mov
pop
mov
push
lahf
pop
push
add
jge
pop
inc
inc
xchg
mov
fwait
icebp
hlt
pushf
pop
iret
pop
rorb
rolb
das
bound
lahf
cmp
sub
stos
fdivs
fadds
enter
shll
adc
cmpsb
shll
pop
push
add
push
ljmp
add
gs
mov
stos
lcall
jb
aam
and
xor
pop
xor
xor
and
lods
push
fldt
xlat
jae
sbb
cld
sub
sarb
mov
fildll
push
cmp
inc
jecxz
fwait
mov
fisubs
rcll
mov
lock
loop
sbb
sub
sub
iret
push
sbb
cwtl
jp
inc
xchg
and
jmp
and
and
mov
dec
fisttps
lods
xchg
add
aam
mov
clc
inc
lock
popa
subl
ss
sub
insl
add
mov
mov
sti
nop
jns
test
popa
popa
and
adc
nop
mov
mov
inc
lcall
popa
data16
sub
in
cmp
pusha
mov
pop
jo
ljmp
add
adc
out
jecxz
mov
mov
cmp
xchg
test
pop
sbb
jecxz
leave
aas
cmp
rcll
scas
sub
mov
mov
fidivl
xlat
xor
lds
or
jmp
mov
inc
in
aad
js
inc
mov
sbb
jmp
jg
and
mov
pop
jmp
mov
and
ret
adc
ret
jecxz
insl
insb
addr16
xchg
cld
mov
pop
rcl
into
cmpsl
in
in
out
xor
push
xchg
inc
add
add
insb
push
lods
movsb
sbb
or
lea
ds
mov
data16
jmp
sbb
sub
daa
xchg
xchg
push
data16
sub
sbb
movsl
fs
adc
jns
lods
loope
xchg
daa
sub
jmp
lea
pop
mov
scas
pop
shll
nop
ret
in
pushf
pop
roll
mov
int
mov
pop
sub
push
xor
push
aam
jecxz
xorb
aam
xor
out
icebp
sbb
cmpb
lcall
nop
jl
push
push
inc
mov
sub
mov
sbb
out
jle
adc
cmp
jno
push
add
hlt
aas
pop
sub
gs
cmpsl
orl
or
xchg
sub
cmp
or
inc
mov
mov
jge
sbb
sub
jl
cmp
mov
or
xchg
pop
push
or
jnp
gs
xchg
xor
into
push
sbb
notb
daa
sbb
pushf
and
xchg
inc
pop
adc
addr16
mov
negb
pop
mov
push
cmp
ljmp
fdiv
add
xchg
sub
bound
out
add
jae
inc
stos
jmp
jecxz
icebp
daa
mov
in
inc
pop
sarb
pop
scas
lcall
xchg
jecxz
or
inc
lret
ss
adc
dec
mov
inc
lods
mov
cmpsb
jno
lahf
pop
ds
push
mov
hlt
pushf
aam
adc
pop
call
mov
mov
adc
mov
test
daa
stos
jge
adc
xchg
push
mov
or
cmpsl
filds
jns
fimull
test
or
xchg
ss
aad
inc
pop
cmp
movsb
jp
push
xchg
hlt
mov
add
aam
jecxz
lcall
xor
outsl
pop
lret
stc
aad
jne
or
and
pop
inc
jge
aam
sbb
repz
stc
loopne
ret
roll
xchg
repz
mov
mov
push
jmp
scas
jne
push
test
jnp
and
mov
inc
pop
in
aad
xor
adc
notb
test
pop
stc
cmp
rcll
sbb
xor
cmp
xchg
push
scas
fisttpl
fcompl
shrl
fs
sub
out
lds
out
into
add
sbb
cmp
xchg
pushf
rcrb
jbe
negb
push
call
xor
out
repnz
iret
push
mov
fnstenv
aam
mov
push
fs
aas
sbb
adc
ljmp
out
das
mov
push
aad
adc
dec
or
jmp
xor
fs
in
mov
push
mov
mov
adc
loop
push
mov
addr16
scas
fidivl
std
adc
cwtl
pusha
mov
movsl
hlt
jg
adc
inc
jnp
inc
or
roll
jle
mov
mov
push
fildll
call
pop
or
and
sbbl
int
test
inc
pop
or
mov
add
movsb
in
or
aad
push
dec
xchg
in
xchg
in
fwait
mov
jno
ficompl
and
or
cmp
push
add
mov
in
dec
mov
aam
push
movsb
or
cmp
xor
xchg
std
xchg
enter
in
push
push
js
push
ljmp
cmp
xchg
mov
mov
mov
cmp
mov
lea
mov
out
jno
inc
arpl
jno
inc
fadd
popf
pushf
sub
in
mov
shrl
out
in
adc
dec
jp
out
sub
mov
addb
add
pop
outsl
and
jg
cmp
std
sar
jbe
pusha
inc
aas
adc
popa
push
push
or
mov
stos
out
loop
pop
popa
push
cmc
xorl
cmc
fnsave
jbe
xor
ja
cmp
inc
dec
push
add
inc
stc
out
fnstenv
pop
lods
xor
and
fsts
xchg
xchg
sub
lret
add
fucomi
push
loopne
testl
jmp
mov
inc
dec
test
sbb
push
mov
mov
mov
shll
lret
arpl
insl
sub
addr16
xor
movsb
sahf
fs
loop
jecxz
mov
shl
int3
lret
xorl
imulb
cmp
xchg
dec
lcall
mov
push
jnp
sbb
sbb
bound
in
aad
cmp
adc
fucomi
dec
ds
push
sbb
sarl
mov
xchg
inc
push
dec
shll
push
lods
dec
jnp
jns
or
cli
jg
push
xor
int
icebp
andb
adc
lret
cmp
or
and
hlt
mov
push
adc
ror
sahf
push
cmpsl
outsl
sbbl
pop
adc
mov
test
int3
xlat
or
repz
push
cmp
ljmp
xlat
cmp
gs
sub
xchg
mov
test
icebp
xchg
ret
xchg
sahf
cmpsb
push
push
lds
inc
adc
sti
cmp
pop
fildll
push
out
lock
sbb
pop
lods
mov
jnp
sub
outsb
or
xor
int3
scas
lcall
xchg
and
push
mov
jle
daa
adcl
pop
faddl
pop
lret
movsl
pop
push
inc
std
fimuls
cmp
push
inc
daa
push
jo
jno
inc
sub
roll
out
sbb
push
ljmp
xor
outsb
imul
outsb
int3
cmpsb
data16
stc
cmpsl
mov
mov
jae
mov
shll
jl
lcall
jbe
mov
inc
notb
cltd
add
stc
sub
out
clc
and
scas
add
loopne
push
loop
cmp
fidivs
test
jae
ja
lods
fs
pop
enter
ljmp
lret
jl
in
mov
lcall
mov
sbbb
jle
mov
add
ss
xor
jmp
inc
push
fistpl
popf
pop
jno
pop
mov
shrl
adcl
into
dec
jae
incb
mov
cs
aam
and
jge
sahf
xor
mov
imul
mov
pop
or
movsl
cmpsb
mov
pushf
jae
jg
adc
mov
add
idivl
sarb
lahf
imul
idivl
js
inc
scas
out
push
sar
pop
push
call
fwait
cmp
dec
inc
add
pop
pop
mov
dec
adc
push
popf
ss
and
mov
jo
pop
imul
movsb
mov
add
ficoms
mov
test
push
pop
and
icebp
dec
inc
sahf
cmp
or
scas
pusha
test
add
sub
out
mov
jecxz
sar
leave
shrl
inc
push
cmp
mov
hlt
test
jecxz
leave
pop
and
andl
or
add
xchg
xor
adc
push
mov
fistpl
pop
arpl
xor
stc
push
in
pop
in
cmpsl
add
xchg
ret
mov
mov
pop
aas
stos
or
mov
xor
xchg
mov
repnz
ret
movsl
and
mulb
jecxz
pushf
test
pop
push
or
mov
sbb
jno
xor
popf
popa
arpl
lods
jl
sub
jb
cld
outsl
jle
mov
pop
js
pop
push
sahf
std
pop
and
das
outsl
mov
cwtl
aam
es
repnz
mov
dec
data16
cmp
pop
xlat
imul
push
mov
mov
xchg
add
movsl
pop
imul
sub
and
int
cwtl
mov
pushf
hlt
insl
loope
call
mov
mov
jbe
rcl
shrw
mov
js
jge
push
cltd
xor
xchg
xor
add
int
popa
loopne
repz
add
outsb
push
xor
lahf
dec
cmp
inc
or
push
jns
mov
pop
jl
in
mov
jmp
insb
scas
or
cmp
xchg
jl
or
sti
mov
mov
inc
mov
cwtl
je
movsb
jmp
add
cmp
add
call
out
sbbb
adc
std
sbb
sbbb
jge
das
outsb
xor
rcr
mov
lods
rcrb
nop
cld
stos
daa
lret
movsb
pop
push
pusha
jo
test
sbb
sahf
inc
mov
lret
sub
pop
xlat
negb
mov
cld
std
adc
push
jno
mov
sbb
dec
inc
jl
cld
je
test
in
and
add
pop
out
xchg
inc
stos
sti
lds
lret
out
lock
stc
fstl
into
and
xchg
dec
fistps
inc
mov
iret
add
cmpl
popf
fcmove
fnsave
les
fwait
test
shl
iret
adc
out
movsl
cwtl
scas
mov
and
cs
leave
leave
xchg
xor
out
ret
add
stc
shlb
cld
cmpsb
xchg
and
stos
daa
mov
xlat
jecxz
push
push
pop
clc
lret
mov
push
call
imul
push
jbe
shlb
cmpsb
xor
mov
mov
repz
pop
add
sub
xor
hlt
jb
jmp
call
xchg
aad
cmpsl
adc
out
jmp
fcmove
jle
and
mov
sub
sbb
outsb
divl
pop
xlat
jg
or
sbb
addr16
pop
push
push
mov
jnp
leave
sahf
sbb
xor
inc
adc
addr16
add
push
xor
mov
nop
xchg
lock
or
mov
sbb
jmp
nop
inc
out
fldenv
in
jns
adc
sub
movsb
mov
dec
cmp
add
loop
mov
xor
in
add
jnp
mov
into
cmp
xchg
lret
int
add
bound
ds
imulb
outsl
mov
push
popf
add
cmp
dec
or
dec
jmp
stc
stos
out
jae
fwait
cmp
rcl
jb
mov
ficomps
call
push
leave
test
int3
xor
adc
xchg
push
pushf
sbb
nop
aad
movsb
cli
push
sub
cmp
mov
xchg
mov
aaa
ss
dec
or
arpl
cmp
jo
das
cwtl
jno
ljmp
fs
lcall
lods
cmp
test
dec
jle
jmp
xchg
xchg
mov
sti
adc
in
loope
jns
lret
testb
repz
add
xchg
or
movsl
cmp
xor
sbb
push
push
push
cmc
cmp
cwtl
adc
test
out
mov
orb
mov
sahf
xor
test
jge
jb
hlt
fidivrs
inc
sbb
jb
out
cli
das
fdiv
mov
insl
pop
and
out
add
lods
mov
jb
aaa
and
shll
mov
xchg
test
sbb
sub
int3
lods
cli
sub
push
mov
fs
and
jp
cli
leave
repnz
in
mov
mov
outsl
pop
add
pop
sbb
movsl
out
std
dec
mov
sbb
mov
dec
test
mov
push
dec
mov
push
imulb
or
daa
xor
lahf
adc
arpl
inc
repz
mov
mov
inc
dec
push
mov
ss
in
rolb
pushf
test
movsl
sbb
int
mov
or
mov
push
pushf
adc
ja
xchg
das
loope
jne
pusha
pop
pop
daa
lea
sub
inc
push
cmp
arpl
push
lcall
push
test
sub
lods
mov
icebp
enter
call
ljmp
lods
jl
and
enter
mov
xor
shlb
adc
push
outsl
ja
js
shll
test
jne
inc
adc
stos
mov
or
rcrb
out
ds
repz
mov
js
and
jae
stos
in
cmpsl
rorl
stos
rorl
jge
xchg
popf
adc
mov
into
imul
xchg
fnstcw
xor
gs
add
insl
dec
jae
loopne
push
lret
roll
jg
sub
jmp
lcall
mov
cmpsl
out
lret
int
xor
xor
into
dec
addr16
pushf
mov
cmpsl
xor
loopne
pop
in
dec
ljmp
movsl
push
cmp
pop
push
push
test
jb
sbb
ljmp
cmp
cmp
xor
mov
enter
jl
xchg
sub
sub
adc
cmp
shlb
fdivr
rcl
mov
pop
jmp
inc
lret
cmp
arpl
mov
popa
maskmovq
imull
mov
lret
stos
popf
cmp
lods
cld
mov
adc
les
aad
mov
aaa
aas
jnp
and
fcompl
inc
outsb
cmp
ficomps
jno
xchg
adc
ret
clc
cmp
jno
ficomps
int
inc
mov
xlat
jmp
jle
and
xor
mov
mov
jae
iret
add
sub
loop
ljmp
lock
lea
xchg
scas
cld
andl
int3
popa
jnp
jle
movsb
and
lock
cmp
and
pop
fistps
mov
loope
lahf
dec
out
mov
or
mov
dec
cwtl
mov
mov
arpl
sahf
jge
cltd
mov
mov
nop
sbb
pop
mov
fisttps
mulb
mov
push
fisubrs
je
xor
mov
outsb
jns
lahf
or
repnz
lcall
jae
iret
imul
out
lret
jge
je
out
jle
ds
repnz
adcb
pop
pop
push
xchg
mov
popa
pusha
loope
xchg
shlb
std
loope
inc
sbb
pop
xchg
notl
int3
cwtl
loope
stos
xchg
shlb
mov
aam
jne
xor
std
loope
push
sbb
call
cmpsb
mov
mov
je
push
dec
cmpsl
ja
pop
dec
and
jle
cmp
push
dec
mov
add
push
sbb
in
rolb
cmp
add
sub
adc
ds
dec
sub
out
dec
and
push
xchg
jno
xor
dec
mov
mov
lods
loop
shrl
sub
and
int3
cmp
sbb
inc
test
push
xchg
pop
stc
mov
cld
cmp
arpl
sbb
rcll
out
jg
adc
lcall
add
lret
xor
cwtl
cmpsl
cs
mov
mov
icebp
mov
lahf
addb
or
out
jbe
lods
pop
sbb
xchg
pop
push
inc
not
mov
and
inc
arpl
dec
and
push
pop
mov
loop
xchg
rclb
cmpsb
dec
cli
lds
xchg
punpckhwd
bound
divl
addr16
cmpsb
mov
loopne
test
jb
mov
push
pop
lea
adc
setge
lret
pop
jle
sbb
mov
idivl
mov
enter
lret
cmp
pusha
add
cmp
add
jle
mov
rcl
and
pop
ss
adc
lock
or
in
inc
mov
cmpsl
or
jo
lds
pop
cli
adc
iret
cmp
sarb
sbb
cld
sub
addb
xlat
pop
sub
push
fcoms
xchg
pop
into
scas
cmp
inc
mov
add
in
aam
and
ficoms
xchg
adc
inc
out
mov
mov
xorl
cmp
mov
in
mov
jmp
sub
mov
cmp
mov
iret
ja
lock
cs
and
add
pop
push
shl
dec
or
fists
test
dec
mov
inc
add
adc
int
sahf
ljmp
cltd
lods
fstpl
add
jbe
bound
pop
into
jl
mov
dec
xchg
imul
mov
fs
ret
pop
mov
std
add
inc
mov
cmp
gs
lret
ret
popa
lret
stos
sbb
test
inc
xchg
repz
cmpsb
in
jp
xor
or
sub
mov
mov
sti
and
dec
shlb
adc
es
push
xor
lods
cltd
pop
fs
adc
xor
cld
je
add
inc
dec
add
dec
jbe
xchg
push
call
and
mov
xchg
pop
in
lods
cmp
sbb
shll
movsl
incl
mov
or
movsb
aad
push
mov
xchg
jp
xor
push
popf
out
push
imull
ror
adc
push
jns
jo
popa
call
cmp
lds
imul
aaa
sbb
pop
call
imul
and
fnsave
cmp
dec
rol
cmpsl
inc
mov
xchg
clc
loop
sub
movsl
mov
hlt
out
jg
pop
xchg
stc
push
cli
inc
cs
and
push
int
inc
pop
xchg
and
es
xor
std
mov
adc
lods
addr16
dec
inc
mov
push
lods
test
cmp
jnp
mov
dec
push
cmc
push
inc
mov
call
stos
shrl
mov
ljmp
or
mov
or
das
lods
sub
jne
or
pushf
jp
pop
push
add
push
in
fxch
jae
push
add
jne
pop
jnp
inc
pop
add
cmc
xchg
xor
les
clc
in
test
xchg
mov
push
lock
repz
xor
pushf
xchg
shlb
dec
daa
pop
xor
xchg
out
outsb
xor
les
daa
nop
pop
out
jae
add
jp
shl
lock
out
adc
int
add
arpl
fstps
mov
loope
and
pop
sub
inc
adc
in
cltd
mov
daa
push
or
sbb
lods
ljmp
pop
adc
jl
clc
rol
dec
pop
outsb
mov
sbb
xor
mov
mov
outsl
add
or
inc
lret
and
fsubl
ret
fadd
lock
imul
movsb
sbb
repnz
push
sbb
out
mov
fimull
push
jae
shl
mov
push
mov
call
cs
xor
jo
std
and
xchg
cwtl
arpl
mov
ret
push
ret
xor
sub
push
or
mov
lock
xchg
add
js
ss
pop
push
pop
repnz
xchg
push
cmp
and
add
outsb
into
fstps
dec
imul
mov
cmp
in
add
fprem1
jg
or
jmp
sub
shl
pop
mov
inc
cs
push
or
cmp
movl
add
setg
jne
scas
jecxz
cs
xchg
cmp
sbb
sbbl
or
fsts
lea
testb
movsl
lods
or
cli
rcll
pusha
test
dec
cltd
push
in
test
or
jne
push
mov
or
scas
mov
push
stc
push
xchg
push
ja
push
lock
or
sub
cli
add
arpl
ss
in
out
das
testb
stos
mov
lret
fmul
repz
inc
jmp
inc
mov
mov
aam
int
xchg
push
out
cmc
mov
push
test
add
nop
push
ljmp
addr16
loope
and
mov
push
movsl
insl
or
pushf
adc
movsl
int
lret
inc
outsb
insl
stos
cmp
pop
loopne
bound
push
jl
mov
xor
sbb
add
lods
add
inc
jb
mov
mov
add
jl
test
std
test
pop
faddp
ret
sbb
iret
mov
cwtl
test
pushf
xchg
lret
jb
xchg
in
mov
stos
mov
jb
mov
loope
xchg
cmp
xor
fisubl
dec
mov
clc
notb
pop
fcmovu
sbb
movsb
das
add
orl
or
mov
inc
scas
popf
push
adc
xchg
test
lds
sub
sub
xchg
jmp
orb
stos
or
shl
pop
or
sbb
in
inc
mov
or
test
pop
ja
dec
leave
or
sub
mov
out
movl
add
or
xor
mov
arpl
ds
mov
enter
jmp
sarb
mov
mov
imul
mov
inc
push
iret
outsb
orl
dec
je
and
sub
lea
call
test
jecxz
lcall
xor
scas
test
push
je
sti
xor
shlb
test
push
pop
jae
mov
push
xor
aad
enter
fnstenv
adc
fistpl
dec
push
testb
lret
dec
adc
aas
outsl
jbe
hlt
in
cmp
add
mov
dec
jg
dec
jnp
adc
cwtl
in
aad
add
push
fsubl
or
loop
pop
sarl
neg
clc
insb
lds
daa
daa
sub
xor
outsl
stos
pop
and
or
out
xor
jnp
ret
scas
jo
fisubs
ljmp
sbb
xor
pop
mov
cmp
push
insb
mov
es
mov
cmpsb
mov
in
fadd
xor
cli
mov
xor
add
add
stos
orb
lds
mov
sub
or
movsl
sarb
cmp
pusha
push
cli
sarl
mov
faddl
repnz
xor
lret
pop
frstor
mov
xchg
inc
scas
cmp
idivb
out
cmp
xor
jno
pop
mov
stos
mov
insb
jle
fstpl
int
cltd
mov
test
fcom
xchg
mov
stos
movsb
pop
repz
in
sbb
ljmp
ret
sbb
divb
fistpl
popa
jb
cmpsb
sub
add
test
movsl
jae
adc
inc
loopne
std
and
and
decb
lea
stc
rclb
pop
jg
mov
stc
dec
add
sbb
fs
or
lcall
mov
lahf
inc
pop
jae
je
call
lock
les
imul
stos
xor
mov
xorl
inc
cmc
cmp
push
cmpl
stos
sub
add
cmp
sarb
divl
adc
lods
pop
popf
shrb
dec
lcall
fistl
and
test
sbb
cld
repz
nop
scas
jecxz
and
fwait
mov
lea
lods
rcl
sub
push
xchg
aad
loop
call
incb
aam
mov
jecxz
in
mov
pop
out
pop
popa
js
and
pop
mov
lcall
mov
dec
mov
push
jae
rorl
ret
sahf
ds
ds
inc
lret
sub
mov
icebp
jecxz
fcoms
ds
or
inc
mov
sbbl
inc
rolb
movsb
repz
add
in
jecxz
xchg
test
xor
fisubl
inc
inc
xorl
cmp
enter
lock
scas
rorl
call
xchg
pop
mov
jns
push
sbb
mov
leave
cmpsb
jo
cli
dec
aaa
sti
and
int
lods
je
jne
pop
lret
bound
repnz
movsb
ret
rep
testb
das
pop
adc
lds
stos
dec
lods
leave
fbstp
addr16
dec
fs
jne
sub
stos
xchg
pop
addr16
sbb
jo
add
pop
lahf
inc
outsl
ljmp
push
lret
lds
adc
loope
ds
push
outsl
pop
call
imul
pop
stc
out
adc
mov
loope
push
mov
stos
and
shr
js
lret
repz
imul
xchg
cmpb
fcmovnb
dec
mov
enter
cmp
ja
xlat
rorb
lods
lods
fildl
scas
repz
int
push
jnp
in
int
adc
jle
insb
mov
fdivs
mov
stc
add
mov
divb
mov
xchg
jns
test
sub
sub
mov
aas
pop
rcll
cli
pushf
leave
aas
test
mov
rcrb
adc
add
shlb
dec
jns
jns
and
lods
shll
int3
mov
cmpsl
dec
push
and
mov
popf
sbb
pop
push
mov
inc
pop
test
jmp
in
adc
mov
and
xor
jg
repnz
pop
movsl
jo
out
inc
int
jp
fdivl
adc
pop
scas
es
pushf
out
mov
rcr
cltd
lods
mov
sbb
pop
fiaddl
mov
cmc
jae
je
mov
jbe
cmpl
push
fwait
pop
fdivp
call
pusha
cmp
and
xchg
sahf
test
push
adc
fxch
mov
push
clc
lock
add
lahf
enter
push
xor
test
jge
xor
ljmp
xchg
in
xor
mov
mov
adc
cmp
xchg
jae
adc
test
jmp
mov
add
push
rcrb
icebp
add
jecxz
jnp
cs
or
imul
cld
rorl
jne
xor
mov
fyl2x
xor
out
hlt
push
pop
and
leave
scas
mov
out
lea
push
mov
push
sbb
insb
imul
sahf
xor
cld
xchg
std
mov
out
nop
jg
test
adc
xor
dec
adc
inc
out
cmp
hlt
pop
je
pop
mov
fs
popf
imul
cmp
aam
in
cmpsb
xchg
test
ds
sbb
jp
into
int
addr16
lods
or
cmp
jbe
mov
mov
jp
add
stc
cld
dec
jp
dec
mov
pop
push
sbb
pop
fmuls
std
xor
out
lods
dec
xor
lahf
ret
popf
or
out
push
xor
test
hlt
pop
push
mov
outsb
jmp
lcall
push
sbb
add
push
ret
fimuls
or
xor
cli
aaa
adc
sbb
in
ss
pop
mov
and
decl
fucompp
sarl
imul
imul
cmpsl
xor
add
dec
leave
lock
shrl
pop
mov
lcall
mov
xchg
dec
mov
in
aad
inc
jge
mov
and
or
pop
cli
int3
je
subb
push
es
inc
jmp
push
ficoml
js
cli
stos
std
or
jmp
aam
cmpb
xor
xchg
xor
mov
push
aaa
fidivrs
stc
push
lock
stos
sub
jbe
aaa
push
mov
cmpsl
loopne
push
out
cmc
xchg
sub
or
out
fiaddl
jno
fwait
adc
xchg
sub
xchg
fs
pushf
xor
push
and
xor
icebp
pushf
xor
in
les
xor
pop
add
int
popf
fwait
or
aas
sbb
arpl
jl
stos
in
outsb
loopne
and
jge
test
sbb
mov
cmp
or
out
or
and
lods
xchg
call
psrlw
insl
dec
adc
fimuls
mov
jecxz
neg
jg
sub
test
imul
add
xchg
sub
inc
fisubrs
cmpsb
fsubl
dec
int3
mov
xor
inc
popa
frstor
in
test
xchg
xor
jae
xchg
in
cmpsl
sub
mov
xor
sbb
fwait
das
adc
sbb
inc
sbb
add
jle
adc
mull
fs
test
iret
jle
idivb
jl
pop
mov
into
xchg
cli
lret
scas
shr
sbb
pop
jns
sbb
push
cmp
imul
mov
psubd
xor
add
xor
stc
push
push
push
lock
jecxz
pop
inc
addl
adc
call
adc
repnz
mov
repz
adc
in
pop
insb
lcall
imul
pop
call
ss
in
dec
jge
xlat
xor
mov
mov
xchg
sub
cld
jp
xor
movsl
fldl
inc
dec
xor
cli
inc
stc
jp
outsb
das
fadds
call
jg
ret
popf
mov
mov
cmp
mov
and
notb
xor
lds
mov
sbb
test
inc
or
or
mov
push
pop
jl
pop
pop
pushf
cmpsb
inc
cld
in
push
xchg
mov
mov
mov
stos
xchg
clc
add
data16
cld
xor
mov
icebp
pop
dec
mov
scas
pop
adc
xor
jns
cld
mov
adc
and
aas
jmp
fs
and
pop
mov
loop
or
and
js
jmp
adc
imul
pminsw
mov
pop
push
dec
xchg
nop
leave
fsts
inc
and
sahf
adc
cmc
repz
cmp
jae
add
adc
jno
adc
mov
daa
mov
inc
jmp
aas
inc
lea
xorb
fnstenv
inc
aad
cltd
cmp
add
sti
push
push
jl
fwait
mov
fucom
out
les
rcr
sarl
inc
xor
mov
pop
lahf
decb
int
add
push
mov
inc
rcl
gs
xchg
popa
adcl
jo
xchg
sbb
clc
ds
jmp
inc
lahf
sti
stc
jns
or
mov
push
xchg
xor
popa
dec
xchg
and
sbb
dec
sub
push
dec
cli
fucomi
out
nop
jle
add
test
outsl
push
fucomip
xchg
adc
mov
in
js
inc
and
cli
emms
movsbl
and
in
or
mov
dec
hlt
inc
mov
jno
xor
jmp
dec
ret
call
dec
int3
cmp
or
pop
adc
xor
cli
sarb
sub
lock
call
loopne
scas
aam
cld
lods
stos
adcb
pushfw
cmp
cmp
cli
dec
xchg
insb
les
or
jecxz
scas
inc
aad
adcl
dec
movsl
cmpsb
mov
call
xchg
cmpl
inc
and
mov
sub
push
jne
mov
fimuls
in
jmp
xor
dec
fwait
inc
lea
jp
sbb
or
data16
cmp
sbb
mov
mov
xchg
inc
rcll
arpl
out
out
daa
jno
jnp
xor
or
inc
movsb
xor
cli
pop
and
jle
pusha
mov
sahf
lods
movsl
and
fldl
dec
ds
enter
mov
lock
stos
mov
xlat
lret
sbb
in
fwait
clc
into
mov
dec
jp
fcmove
inc
popa
inc
neg
lcall
mov
mov
xchg
push
aaa
leave
mov
xor
push
mov
out
push
mov
fwait
add
sbb
daa
cmpsl
jg
ffree
mov
dec
xchg
in
jmp
pop
pop
add
inc
pop
push
movsl
imul
push
in
mov
push
adc
test
and
fs
movsb
data16
xchg
data16
imul
jnp
xchg
or
lods
sbbb
aaa
sub
sahf
mov
mov
mov
pop
dec
mov
hlt
rorb
or
outsb
push
int3
push
jb
adc
inc
inc
mov
into
ror
insb
sbb
iret
jmp
pop
inc
js
jno
mov
mov
mov
nopl
xor
cs
iret
aas
mov
or
adc
mov
cld
adc
add
sahf
test
sbb
pop
xorl
mov
jge
mov
ficompl
inc
jo
jnp
repz
mov
ret
daa
push
cs
pop
mov
cmp
inc
add
fcmove
or
imul
fs
scas
rolb
push
mov
sub
pop
test
dec
in
pop
fistpl
out
add
shr
pop
sub
mov
mov
andps
lret
pop
jno
sbb
jne
sbbb
lods
sub
xchg
adc
jecxz
xchg
in
lahf
stos
cmp
pop
mov
pop
fwait
aas
loopne
cmp
mov
jnp
dec
xchg
js
push
xchg
lret
push
cmp
ja
out
in
inc
cmp
or
or
loope
test
lret
enter
inc
lcall
jb
js
inc
shrb
or
add
les
jnp
int3
add
sbb
inc
push
cld
out
icebp
pop
pusha
cli
sbbb
shlb
out
inc
pop
sarb
mov
cli
andb
lds
adc
pushf
fistps
mov
inc
push
inc
add
dec
clc
adcl
clc
fwait
mov
outsb
fidivrs
insl
test
add
mov
aaa
push
imul
adc
repnz
imul
sub
jb
mov
enter
push
dec
cmp
mov
out
lcall
call
mov
lahf
and
out
fwait
in
arpl
mov
xchg
out
cmp
cmpsb
xchg
push
testl
outsl
mov
ror
sti
xchg
daa
int3
inc
out
mov
mov
cmp
or
cmc
add
rolb
aaa
push
test
sar
int
lock
cmpl
lods
mov
clc
insl
out
subb
fistpll
push
or
jg
jb
pusha
jecxz
sbb
xchg
and
mov
adc
push
pusha
ljmp
adcb
gs
shlb
mov
int
out
repnz
jmp
dec
aam
stos
nop
sbb
in
test
ja
jle
imul
insl
jge
dec
sbb
and
nop
and
mov
xchg
jmp
repz
in
andb
roll
push
pop
clc
filds
arpl
or
pop
jne
mov
push
adc
hlt
imul
dec
mov
jmp
or
mov
or
jae
loopne
mov
imul
int
inc
dec
lret
ds
mov
mov
jbe
xchg
cmpb
sbb
sbb
pop
scas
je
push
mov
jo
daa
call
mov
xchg
sahf
cmp
sub
insl
into
mov
in
mov
nop
imul
pop
xchg
nop
cmc
std
or
ljmp
cli
pusha
push
dec
bound
add
pusha
aas
testl
add
jmp
jno
cmpsl
sub
cmp
mov
pop
sbb
pop
repz
adc
sbbb
iret
mov
ret
mov
sub
out
insb
xchg
fwait
sarl
out
sbb
jbe
bound
mov
mov
dec
push
mov
and
inc
test
push
shrl
inc
push
out
adc
xor
mov
push
insb
add
cmp
pop
out
pushf
addl
movmskps
gs
imul
mov
dec
push
and
or
inc
xor
dec
inc
mov
fsubr
push
popa
mov
push
jge
cmp
add
fucomip
xchg
pop
ret
sub
fs
sbb
shlb
or
cmpsl
mov
cltd
cmpsb
cs
outsl
iret
lret
adc
mov
sarb
jne
addr16
mov
fsubp
out
outsb
mov
pop
xchg
stc
inc
pop
mov
mov
pop
cltd
pop
xor
fsubrl
mov
mov
int
dec
and
mov
xor
push
jbe
or
ret
mov
or
pop
loop
or
sub
fdivrs
mov
int
push
sbb
mov
sbb
int
stos
add
xor
add
sub
outsb
mov
add
pop
leave
add
pop
sub
pop
xchg
fnsave
mov
push
dec
jle
loop
dec
adc
push
loop
jno
imul
pushf
in
xchg
xor
cmp
push
call
loope
stos
imull
jecxz
mov
inc
and
mov
ja
xchg
not
sub
in
movsb
int3
ss
out
jbe
mov
cmp
or
mov
insb
push
roll
out
jle
cmpsb
or
outsl
lock
mov
cmpsl
and
outsl
pop
mov
stos
dec
sub
push
jmp
jb
fcomps
movsb
stos
mov
and
lods
adc
pop
pop
nop
stos
or
push
movsb
mov
mov
sti
push
or
jb
outsb
repz
into
insl
add
hlt
repnz
sarb
mov
jp
das
push
sub
xchg
inc
loopne
jo
mov
mov
push
popf
shlb
mov
cli
lods
fldz
movl
adc
inc
jg
push
sbb
xchg
add
pop
inc
sarb
adc
sub
dec
jl
dec
adc
repnz
mov
inc
lret
shlb
cmpl
or
loope
imulb
outsb
pop
jno
ret
xchg
fadds
pop
inc
lret
ret
xor
pushf
nop
add
movsb
sbb
stos
ficompl
mov
shll
pop
ja
push
push
xor
push
mov
and
popf
mov
dec
lods
xchg
jns
sub
pusha
mov
lods
in
aas
rcrb
out
or
fsts
jmp
sub
rolb
adc
lret
inc
sub
jl
inc
scas
dec
cmp
add
imul
fdivs
sub
mov
bound
push
sbb
fs
popf
insl
add
lods
adc
out
mov
iret
push
lods
insb
or
sbb
lods
mulb
clc
shl
mov
fsubs
add
mov
and
xor
pop
inc
add
pop
dec
add
and
sbb
adc
jne
jl
xor
pop
xlat
and
pop
in
sbb
mov
xchg
movsl
mov
test
dec
xchg
xlat
lds
sbb
adc
pop
out
in
jp
in
les
popf
push
pop
out
fwait
divl
std
adc
addb
out
pop
jae
pusha
xor
mov
fcomps
sub
shlb
sub
stos
scas
mov
cmp
push
push
jle
je
loopne
dec
cmp
movsl
fisttpll
ret
xor
push
imul
add
mov
rcrb
push
or
xor
loopne
cmpsb
cmpsb
xor
jl
adc
xchg
leave
mov
fs
mov
aaa
cmp
xchg
rep
leave
and
xchg
enter
jmp
pop
mov
mov
ljmp
int
xchg
inc
mov
lds
xchg
loope
lods
aam
aas
clc
imul
rorb
or
clc
push
sbb
fcomps
sti
in
xor
mov
add
js
pop
push
cwtl
xor
addr16
mov
cmc
sub
xor
inc
mov
and
jl
imul
sbbl
push
lds
adc
push
ds
stos
mulb
mov
ss
jmp
mov
add
lcall
jg
sub
into
lods
inc
rcr
leave
shll
rcrl
xchg
sub
aaa
push
fmuls
iret
shll
adc
lods
lea
push
jmp
shrb
movsl
fcomi
jnp
imul
add
mov
mov
and
xchg
dec
inc
xchg
xor
cmp
xchg
add
dec
lock
pop
xchg
xorl
jbe
popl
push
inc
mov
imul
pop
pop
test
pop
or
popa
cmp
insl
add
mov
fdivr
aam
push
dec
ret
dec
outsb
inc
or
in
push
adc
mov
leave
mov
and
notb
cmp
pop
rolb
pop
fwait
lds
out
cmp
add
sub
popa
in
cmc
jp
test
xchg
negl
fdivl
gs
shr
cmp
in
push
lahf
mov
or
cmp
repnz
sbb
push
add
or
mov
xchg
mov
lret
mov
mov
jg
or
add
fiaddl
dec
push
loopne
fwait
cmp
pop
sbb
jne
into
sub
xlat
inc
aaa
jecxz
or
clc
aad
adc
pop
fcoms
test
out
adcb
inc
add
loop
test
notl
in
xchg
test
inc
jns
clc
push
pop
adc
out
repz
mov
jo
aad
andb
push
sti
pop
lods
mov
mov
inc
shrl
or
push
add
imul
in
notl
dec
adc
clc
pop
mov
xchg
int3
scas
mov
push
mov
or
or
lea
loope
out
push
andl
inc
pushf
adc
mul
xchg
int3
pop
mov
mov
cmp
aam
xlat
and
lods
ficompl
xorb
es
cmp
fsubrl
dec
xchg
je
xor
inc
push
mov
in
shll
and
push
jl
adc
sarb
stc
xchg
inc
lcall
inc
shll
cmp
imul
into
dec
sbb
mov
jg
ljmp
gs
popf
mov
jno
adc
jne
shll
dec
rdtsc
divl
out
aaa
push
jmp
jmp
fnstenv
testb
movb
dec
mov
mov
inc
push
mov
ljmp
stos
loopne
cmp
clc
scas
cli
pusha
push
xor
mov
loop
dec
rclb
outsb
cmp
push
inc
shll
out
push
inc
iret
push
jns
imul
sub
out
or
in
pop
xchg
ljmp
dec
inc
out
fsubrs
adc
ret
jp
popa
loop
fs
lods
inc
mov
xchg
xor
sbb
push
xchg
aaa
clc
lods
insb
cli
out
fmul
iret
xor
addr16
push
dec
sub
pop
xor
aad
shl
fsubl
rcr
stos
and
mov
xor
pop
inc
loope
aad
arpl
pusha
pop
cld
sub
xchg
hlt
out
int3
cmp
dec
iret
and
jle
cmpsl
je
sbb
sti
movsl
test
fs
rcl
rorl
pop
mov
lcall
std
push
cmc
fisubrl
je
pop
movsl
lods
jl
add
andl
pop
push
mov
mov
test
test
jo
xchg
jno
xor
mov
push
jb,pt
repz
call
mov
fs
loope
xchg
rcll
or
gs
xlat
insb
push
dec
cmpsl
sbb
cli
lods
mov
ror
pop
fdivrl
adc
sbb
shll
and
dec
sti
or
movsl
mov
roll
dec
ja
jnp
idivl
jns
mov
lods
and
in
and
mov
js
add
sbb
inc
adc
mov
movsl
fcoml
push
or
mov
jne
sbb
lcall
push
cmpsl
mov
mov
push
in
gs
pop
mov
cli
int
fnstsw
stc
jnp
ret
or
ficomps
cmp
je
pop
mov
fists
cmp
sbb
and
stc
or
jnp
inc
mov
sbb
jno
add
xchg
add
test
xchg
dec
aaa
sahf
aad
test
mov
pop
cmp
sub
push
adc
out
sub
pushf
mov
mov
and
lret
daa
lea
jg
add
xchg
xor
jbe
mov
cmp
push
mull
cmp
js
xchg
xor
jl
test
cli
mov
xchg
cmp
test
outsl
push
mov
rclb
mov
cmp
push
mov
sahf
or
shrb
aam
imul
shlb
push
dec
cmp
test
add
push
hlt
and
or
mov
adc
mov
cwtl
dec
xchg
cmc
push
xor
test
pusha
pop
and
dec
jb
nop
fldcw
test
mov
xchg
lods
cmp
sub
std
jno
mov
push
xor
xchg
das
shll
fisubl
dec
das
std
mov
mov
sarb
fwait
lcall
push
push
push
jg
fwait
sbb
pop
scas
or
hlt
lock
rorb
jmp
les
mov
ror
lret
xchg
js
jae
xchg
fwait
mov
hlt
outsl
sub
movsb
loop
push
into
jo
add
mov
pop
roll
xchg
mov
mov
fldl
mov
xor
and
into
cmpsl
xor
lds
shrl
std
xor
daa
sub
insl
in
push
or
xchg
shrl
or
inc
mov
in
add
rcrl
mov
mov
mov
adc
push
dec
clc
pop
cltd
rcll
and
mov
aad
cli
out
pop
cmovp
in
int
pop
xor
or
ljmp
cmp
add
loope
mov
aaa
lcall
imul
adc
jb
adc
and
xor
push
sbb
into
sub
stc
mov
xchg
les
mov
addr16
sub
mull
push
adc
in
cs
mov
jge
mov
faddp
pop
push
das
movsb
lcallw
and
sbb
xor
or
push
xorb
and
sbb
imul
inc
daa
adc
mov
clc
mov
fsubr
cli
sub
add
sahf
sbbb
iret
aaa
incl
push
addr16
pop
sbb
in
sbb
xchg
lcall
lahf
pop
xchg
movaps
mov
test
arpl
add
imul
cmpsb
adc
sbb
inc
jbe
jb
je
cmp
cmp
cmc
adc
mov
mov
sti
push
push
inc
lods
nopl
inc
cmp
les
stc
push
add
adc
jge
pop
adc
inc
xor
add
ret
subb
xchg
or
push
mov
cmp
ljmp
xor
leave
mov
addb
fs
dec
out
lahf
and
push
jp
mov
fwait
jmp
test
scas
insb
mov
lret
xor
jb
out
sub
outsl
fildl
in
inc
dec
fidivl
mov
and
insl
cs
xchg
imul
jbe
mov
hlt
mov
jb
mov
insb
push
lahf
and
mov
cmpsl
inc
jl
aas
imul
xchg
bound
call
xchg
sub
xchg
or
aad
sub
dec
cmp
scas
mov
rorb
cld
inc
pop
mov
lods
into
adc
aam
repnz
jmp
idivb
or
dec
push
ret
insb
mov
sub
mov
leave
cmp
pop
test
popf
cli
loop
mov
mov
push
cmc
mov
repz
hlt
sub
xchg
ds
push
or
cmp
or
loop
push
ret
cmp
or
pop
leave
in
push
cltd
divb
clc
xor
arpl
movd
xchg
sbbl
out
pop
mov
popf
pop
sub
mov
data16
sub
mov
mov
sub
xlat
loopne
stos
push
mov
add
sub
and
and
xchg
ret
cwtl
std
lea
jno
pop
cmp
js
and
ror
sahf
jns
in
lret
mov
push
inc
out
sub
lcall
stos
andl
fcmovbe
jns
push
sbb
outsl
inc
divl
int
or
add
jp
push
cld
push
repz
jns
ret
xchg
cmp
out
pop
xchg
mov
mov
mov
imul
adc
pop
push
cwtl
scas
sbb
mov
ljmp
ja
and
nop
adc
sti
mov
leave
rcrb
lret
or
gs
gs
fidivs
stos
arpl
jp
xchg
loop
mov
hlt
fidivs
push
inc
and
enter
in
fldt
xor
dec
aaa
roll
inc
push
je
jmp
fdivl
dec
shll
insl
bound
inc
in
mov
push
gs
inc
fwait
iret
mov
or
aad
adc
into
cmp
push
insl
push
pusha
push
adc
pushf
add
negl
cmp
fisubrs
push
cmp
rorl
fsubs
pop
push
sbb
cmpsl
xchg
arpl
cmp
inc
inc
pop
push
sub
sarb
adc
pop
ret
orb
pop
call
out
adc
jmp
test
pusha
cld
dec
mov
lret
inc
scas
adc
adc
ret
lods
push
rol
dec
rorb
xchg
inc
dec
push
test
dec
mov
mov
out
sub
loopne
sahf
stos
inc
mov
fwait
or
pop
mov
fs
mov
daa
jbe
ds
xchg
push
mov
pop
inc
jmp
jae
fisttps
insl
add
sbb
push
sbb
iret
pop
lods
dec
loop
pop
mov
imul
inc
mov
xor
push
mov
lret
mov
movl
lret
test
mov
insl
dec
fs
icebp
xchg
cmp
mov
mov
cli
mov
addl
dec
jl
jp
jo
loope
popf
mov
in
jae
nop
pop
int
negl
pop
and
daa
insl
test
pop
jg
rep
sub
iret
mov
inc
int3
shr
xlat
mov
xchg
icebp
cmpsb
xchg
sahf
icebp
push
dec
pop
fiadds
jae
arpl
cmpsb
mov
lret
inc
sub
shll
out
fists
hlt
pandn
or
enter
int
lods
jb
ret
gs
pop
mov
push
xchg
shlb
aaa
add
into
cmp
icebp
clc
sub
sbb
mov
adc
dec
imul
pop
mov
scas
gs
push
mov
mov
or
popf
mov
mov
outsb
ds
and
xor
xchg
shrl
mov
nop
data16
push
nop
sbb
cmc
mov
mov
pop
out
adc
push
sub
jb
fs
jp
sbb
jge
stc
dec
jb
mov
ret
pop
inc
popf
fidivl
jns
cmp
and
hlt
add
mov
cld
xchg
lahf
ret
ret
inc
inc
add
xor
xchg
mov
xchg
lock
jge
push
pop
stos
pop
stos
jno
hlt
pop
cli
outsb
mull
in
call
aad
test
movsb
movsb
sbbb
jbe
ret
in
inc
lds
out
xchg
mov
repnz
dec
mov
mov
clc
das
stos
jl
jae
pop
addb
add
repnz
push
pop
stos
aas
mov
out
sub
js
je
jb
in
stos
xor
cmpsb
addr16
inc
mov
test
out
jnp
movsb
sub
add
jb
in
sbb
out
repnz
pop
pop
and
sub
pop
inc
stos
scas
mov
pop
stos
faddl
movsl
test
je
icebp
dec
test
sub
mov
or
inc
xchg
mov
rclb
inc
mov
inc
jmp
arpl
xchg
jle
xchg
mov
std
mov
adc
leave
ret
ja
sbb
imul
into
jno
sub
or
add
and
adc
mov
insb
mull
sub
fbld
popa
fstpt
xor
cmp
and
mov
push
dec
and
fwait
jo
mov
insl
sbb
or
outsl
stos
xor
sub
cmpsl
clc
jnp
enter
sbb
out
dec
ds
inc
rcr
call
daa
xchg
loop
roll
sub
scas
dec
xlat
sbb
push
add
push
pusha
push
xor
push
or
xor
subb
fistl
mov
mov
jmp
mov
mov
pop
aaa
mov
in
outsb
adc
mov
jp
fstpl
and
insl
call
ret
pop
mov
inc
xor
add
cmpsl
test
mov
fidivl
in
in
movsl
repz
jle
cmp
lcall
mov
scas
mov
in
out
adcl
ja
push
ss
aam
shll
loopne
test
mull
jge
aas
sub
xor
push
xor
dec
sub
nop
icebp
sbb
out
push
inc
pop
gs
push
mov
scas
xchg
mov
outsb
dec
jns
mov
into
imul
cmpsb
push
sub
xchg
jns
shll
out
inc
test
fdivrs
int3
xchg
add
sti
nop
add
or
xor
imul
mov
or
enter
imul
cmc
dec
popa
loope
add
ret
popf
cmp
cmpl
mov
nop
adc
ljmp
test
lea
push
cli
pop
adc
jecxz
cmp
adc
movsl
cmp
clc
adc
mov
ss
mov
int3
es
xchg
dec
scas
mov
cmp
cmc
jno
cwtl
add
mov
push
cmp
cwtl
divl
aaa
test
dec
sub
clc
xchg
push
icebp
jno
or
cld
inc
pop
xor
mov
mov
fdiv
jge
shrl
pop
cwtl
xor
fisubrs
in
push
pop
jecxz
test
pop
and
mov
lret
arpl
arpl
pushf
push
ret
dec
shrb
sub
les
insb
inc
in
sub
cltd
pop
push
cmp
mov
nop
inc
das
cwtl
ljmp
outsl
jae
lock
sbb
mov
in
inc
int
repz
mov
xchg
mov
xchg
loope
pop
aaa
push
add
arpl
xor
rclb
add
mov
pop
sbb
repz
cld
into
add
loope
out
ret
dec
push
int
insb
outsl
je
push
lret
pop
int3
inc
jbe
daa
rorl
sub
shl
jle
jmp
mov
sub
xchg
jl
xor
ss
std
cld
fadd
jmp
dec
les
sbb
xchg
push
out
movsl
in
xchg
dec
sub
mov
call
popf
ret
xchg
sub
mov
lret
sub
and
or
cmp
xchg
sbb
out
and
stc
and
pop
inc
mov
in
stos
lock
js
mov
add
cmpsb
test
jg
mov
in
out
xchg
jbe
sbb
imul
popl
out
push
jnp
adc
daa
adc
out
mov
cmpl
mov
adc
pop
aam
daa
or
push
hlt
outsb
adc
cli
pop
stos
sub
mov
ds
mov
add
fisttpll
mov
push
ds
push
dec
or
clc
mov
adc
lea
or
mov
inc
push
fnstenv
or
push
sub
fwait
inc
add
xor
pop
sub
cmp
ljmp
mov
xor
mov
insb
out
into
inc
leave
mov
mov
sub
fpatan
mov
dec
imul
xor
lcall
scas
add
sbb
mov
repnz
jb
push
add
jmp
push
std
adc
mov
std
push
fnsave
imul
mov
and
pop
jbe
xchg
push
pop
popl
cmpsl
mov
xchg
imul
mov
test
pop
xchg
push
jno
sub
dec
popl
mov
push
mov
fisubrs
push
loopne
cs
out
sub
es
xchg
ja
int
xchg
loopne
pusha
adc
fisttpll
popa
add
pop
xchg
lock
xchg
cs
scas
dec
xlat
xor
mov
push
mov
stos
jmp
in
sarl
cwtl
cmp
jg
lds
xchg
clc
or
adc
dec
push
push
mov
pushf
jmp
sbb
sub
jg
insl
cli
dec
jmp
aaa
sbb
adc
jno
xchg
daa
out
add
push
mov
mov
xor
xchg
jg
or
or
push
pop
bound
stc
xor
hlt
scas
imul
or
sub
pop
cmp
inc
mov
rorl
bnd
fisubrs
test
or
lods
jmp
stos
addl
lds
std
and
jge
call
ljmp
push
add
sahf
cmp
jmp
inc
mov
sbb
inc
mov
sbb
nop
into
or
sbb
movsb
or
sbb
out
int3
pop
push
and
sub
lcall
nop
int
dec
nop
mov
fisubs
dec
fdivrl
adcl
aad
in
mov
sahf
or
addb
xor
or
out
xor
inc
int3
les
aad
cmp
sub
cmc
or
pusha
repz
popa
inc
add
pop
sti
xchg
inc
dec
gs
rorl
enter
in
faddl
push
data16
ds
cmp
jne
push
xor
imul
jecxz
movsl
clc
jbe
lds
cwtl
cld
mov
roll
pushf
pop
xchg
iret
rol
mov
lea
xor
mov
pop
or
ret
rcr
or
jmp
gs
mov
shlb
push
imul
push
int3
sub
mov
jo
sub
loop
xlat
push
cmp
sarb
jg
lcall
cli
sbbl
int
rol
mov
inc
fnstcw
mov
aam
mov
lock
inc
adc
sub
dec
sbb
sbb
sbb
jl
inc
std
fnstsw
adc
mov
bnd
mov
lret
leave
push
sub
and
push
imul
mov
push
fstp
test
bound
inc
arpl
and
adc
cli
sbb
add
repz
pop
xchg
mov
js
fidivrl
aad
dec
xchg
mov
pushf
and
scas
add
movsb
sbb
cmp
in
lods
lods
int3
add
ds
loop
pop
push
push
aas
mov
test
jns
pop
out
push
adcb
jb
push
jno
cli
xchg
xor
imul
and
jns
or
mov
cmp
push
mov
and
jne
je
dec
orl
iret
pushf
mov
jge
in
lcall
sub
and
pushf
mov
mov
cmp
lea
adc
fmull
xchg
out
xor
or
icebp
cmp
fidivs
popf
or
leave
into
jo
imul
inc
adc
and
ret
cmpsb
outsl
into
adc
push
jns
lahf
xor
mov
and
xchg
push
sbb
push
ljmp
test
roll
adcl
mov
adc
push
sub
jle
sub
sti
push
add
xorl
sub
in
xchg
inc
sbb
cmpsl
lret
xor
cmp
mov
cmp
xor
xor
xchg
or
popf
push
insb
xor
sti
mov
les
push
insl
add
pop
push
xor
sbb
outsl
fmulp
xchg
mov
imul
or
repnz
cmp
mov
fildl
push
xchg
lock
add
mov
inc
ss
cmpsb
iret
xchg
fldl
adc
mov
fnstsw
testb
push
lret
int3
sahf
or
aaa
push
push
xchg
jae
mov
add
in
add
mov
mov
popf
push
pushf
dec
cmp
test
push
les
pop
arpl
mov
or
gs
inc
cltd
sahf
mov
out
cmc
stc
dec
xchg
movsb
push
jno
mov
inc
sti
cld
cmpsb
scas
imul
pop
jae
inc
mov
scas
scas
dec
mov
daa
adc
add
mov
mov
in
orb
jmp
sahf
jae
mov
aad
add
sbb
cmc
testl
test
adc
mull
mov
sahf
dec
repnz
sub
cmpsb
pop
mov
mov
xchg
repnz
xchg
imul
mov
sbb
xor
test
add
test
adc
pop
lods
cmp
test
sub
xor
test
or
imul
ror
dec
ret
mov
mov
xchg
dec
jns
sbbb
or
aam
scas
iret
out
addb
push
arpl
sbb
sub
mov
xchg
popa
es
hlt
fstl
mov
add
and
cmp
push
inc
mov
push
or
fsubrl
mov
lods
cmp
push
and
in
mov
cmpsb
sbb
cmp
sub
fmuls
adc
push
ljmp
lods
xchg
jge
loop
sbb
dec
bound
jl
lds
out
push
sub
inc
fisubs
je
adc
ret
dec
jge
jg
add
iret
or
jp
in
nop
mov
stc
flds
push
rolb
incl
or
ror
popa
popf
cmp
stos
pop
push
out
cmpsl
scas
mov
cmpsb
dec
in
pop
fcompl
ljmp
int3
jne
ljmp
test
sbb
adc
scas
mov
pop
int
gs
imul
push
fsubr
push
xor
pop
test
bound
or
adc
inc
and
push
mov
icebp
mov
and
nop
push
hlt
stc
aad
jl
xor
pop
xchg
dec
jns
or
scas
pop
lret
loop
pop
cmc
dec
ret
arpl
and
mov
adc
js
push
movsb
sbb
aad
sarl
pop
fs
std
incb
jae
xchg
mov
js
test
cltd
fst
pop
leave
bound
iret
pop
out
mov
andb
in
xchg
push
mov
jg
movsb
dec
repz
jl
dec
arpl
sbbl
add
shlb
xchg
adc
fists
jne
fwait
or
add
jb
lds
fldl
mov
in
mov
insl
pop
ja
inc
gs
xchg
test
xchg
je
jno
cmpsb
in
xor
jno
pop
or
test
jmp
xchg
push
mov
and
sub
loop
sbb
mov
push
inc
lods
sbb
shrl
mov
mov
push
aam
push
sbb
fsts
inc
xor
test
mov
iret
jne
leave
push
imul
lds
data16
shlb
and
movsl
mov
out
mov
ffreep
jecxz
stc
push
xchg
and
xor
mov
jecxz
xor
je
stos
lahf
fdivrl
loope
aas
jno
and
test
sub
dec
cs
jp
cmp
aaa
outsl
imul
xlat
add
dec
ss
mov
and
lock
sbb
cs
aaa
dec
loop
outsb
daa
ret
push
pextrw
mov
mov
ljmp
hlt
in
std
jne
dec
test
test
negl
sub
add
dec
adc
cwtl
pop
xchg
loopne
fcomi
sbb
arpl
sahf
push
stc
movsb
jno
lods
std
pop
and
pushf
xchg
mov
sbb
cmp
sbb
je
test
dec
cmpsl
fcoms
jg
jl
jmp
pop
cmp
xor
repz
les
xchg
lock
cmp
lds
xor
and
aad
outsl
out
adc
iret
sbb
gs
cwtl
push
sub
add
pop
and
push
cmp
rcll
imul
clc
push
push
enter
sbb
lret
loope
pop
add
mov
das
fnstenv
cld
sbb
sub
mov
pushf
xor
imull
pop
inc
cmp
adc
dec
or
out
and
jnp
ret
fs
mov
fbld
pushf
ja
add
push
or
popf
xor
jne
shrl
inc
push
fsubr
call
xor
xchg
cmp
leave
jmp
pop
push
or
jp
shr
pop
push
mov
sti
imul
enter
repnz
xchg
xchg
push
out
pop
outsb
enter
call
mov
mov
mov
idivb
jae
sub
imul
jb
mov
mov
rcrl
stos
push
out
hlt
fs
or
or
lahf
and
or
ja
cmpl
add
movq
jne
mov
mov
lcall
lds
stos
inc
in
or
add
adc
push
std
dec
arpl
rolb
mov
aaa
inc
and
cmp
xor
out
insl
je
pop
je
sub
repz
insl
ret
loop
and
cld
jbe
loopne
adc
cld
loope
push
outsb
pop
pop
shlb
fs
and
lock
int
daa
int
loop
outsb
lods
push
arpl
add
jmp
loope
ljmp
movsb
dec
jns
loope
push
in
out
cmp
mov
push
imul
xchg
jo
sbb
clc
std
add
or
aaa
cld
repz
mov
add
xchg
cmpsb
mov
dec
cmp
pop
mov
lods
fstpt
jp
jp
aam
add
data16
faddl
jnp
jnp
dec
std
pop
sub
pop
lock
out
mov
sbb
cmp
sarb
ret
xchg
stc
lock
shr
inc
loope
add
push
mov
jecxz
adc
andb
fdivs
lods
xor
mov
and
jg
fcoml
insl
jp
fisttpl
xor
mov
jno
mov
mov
fwait
push
fdivrs
lret
ret
ret
mov
inc
mov
and
and
cmpsl
xchg
or
inc
push
push
and
and
mov
xchg
and
or
jmp
repnz
xchg
int3
add
pop
out
xchg
sub
and
push
jl
enter
xchg
test
cmp
xor
inc
lret
mov
cmp
xor
mov
fld
aam
add
mov
test
jo
mov
and
cmp
hlt
lds
cwtl
push
mov
mov
cmp
pop
push
jae
movsb
jo
jle
xor
popa
cmpl
xchg
aas
pop
lock
cmp
cmp
daa
xor
cli
mov
jnp
dec
aaa
je
leave
add
pop
insb
adc
pusha
ljmp
add
push
dec
and
pop
pop
sub
insl
stos
andb
ja
rorl
out
lret
mov
inc
icebp
in
jbe
outsb
pop
sbb
mov
jne
mov
sbb
outsb
cmp
icebp
mov
mov
js
lahf
mov
dec
push
xor
fsts
xchg
int3
sub
int3
sbb
icebp
in
loopne
xchg
pop
jo
push
cmpsl
jmp
inc
jl
or
inc
std
sbb
clc
mov
and
push
leave
and
adc
sbbl
aam
int
pop
je
rep
sbb
stc
stos
jmp
test
dec
pop
shrb
inc
je
dec
inc
into
add
das
cmpsb
in
mov
insl
xchg
ja
mov
cli
mov
inc
insl
aaa
mov
mov
pop
inc
jg
add
repz
repnz
test
dec
inc
push
jmp
jb
stos
rclb
pop
mov
xor
int
insb
les
je
push
fstpt
sub
je
inc
cmp
xchg
pop
pop
pushf
lds
in
jle
push
xchg
daa
add
mov
inc
mov
int
sbb
je
divb
mov
aaa
lcall
shrb
mov
push
mov
pusha
pop
clc
incl
stos
cwtl
dec
pop
test
pusha
or
xchg
adc
push
push
jns
mov
xor
enter
jne
clc
pop
subl
lods
pop
sub
adc
adc
mov
jg
jbe
mov
out
and
call
je
mov
push
out
dec
jnp
roll
cltd
clc
into
mov
or
call
int3
jp
mov
movl
cwtl
sbb
xchg
fldenv
push
xchg
ljmp
imull
xor
es
popf
mov
pmullw
stc
or
add
shrb
dec
add
in
dec
leave
scas
jg
push
xlat
mov
cli
in
in
xchg
movsl
pusha
fucomi
add
jecxz
sar
iret
sub
push
cmp
dec
lock
or
int3
or
cmp
push
mov
xlat
pop
int3
sub
jmp
stc
pop
testl
adc
imull
rorl
je
daa
push
xor
std
call
xor
xlat
outsl
jmp
and
or
push
cmp
pop
jp
fstpl
jb
or
xchg
cltd
aam
leave
sbb
ror
mov
push
and
or
and
roll
xor
push
add
or
add
cli
adc
sbb
je
add
cmpsb
cli
loopne
sbb
ljmp
dec
pop
xor
dec
mov
jmp
and
jns
dec
orl
loopne
inc
mov
cmpl
fwait
lahf
xchg
xchg
les
ret
xchg
int
call
arpl
fstp
dec
dec
clc
mov
aad
icebp
das
mov
dec
sbb
push
jle
xlat
es
mov
icebp
sbb
mov
push
or
jb
cwtl
cmp
cmp
sbb
notl
repz
add
les
inc
add
mov
cmpsl
mov
mov
pop
insl
sti
mov
lock
cmp
dec
aaa
dec
mov
mov
sub
xor
mov
sbb
cmpsl
outsb
add
std
or
ss
repnz
push
cwtl
sahf
xchg
testb
xor
fdivr
rol
jle
jo
stos
xor
test
ljmp
fistps
lods
subl
arpl
mov
cmp
outsb
mov
jns
scas
or
push
cwtl
movsb
mov
loopne
rcll
imul
movsb
or
popf
mov
fstl
mov
push
push
sbb
in
fwait
mov
mov
js
shll
arpl
mov
clc
orb
and
test
ja
cwtl
inc
lea
stos
jne
or
mov
mov
cltd
ret
outsl
mov
in
xlat
mov
push
or
lock
push
xchg
jo
push
lret
pop
and
sbb
test
sbb
cltd
movsl
adc
loope
push
mov
mov
sbb
pushf
push
stos
push
ret
cltd
inc
cmp
enter
xor
and
cmp
mov
push
notl
mov
sahf
std
gs
jnp
ljmp
jecxz
push
xor
and
pushf
ficoml
stos
ret
xchg
xorb
iret
pushf
push
testl
and
jp
mov
imul
aam
pop
push
out
cmc
test
jne
enter
or
push
mov
test
inc
pop
xchg
je
push
sbb
ja
mov
dec
in
les
cmp
inc
ret
mov
jl
sbb
add
cmp
mov
jp
arpl
lahf
addr16
ljmp
push
data16
pop
cmp
data16
in
adc
cmpxchg
mov
inc
cmp
shrl
in
jl
std
shll
lods
int3
push
imul
push
mov
ds
addr16
xlat
pop
nop
add
add
in
adc
orl
mov
jecxz
push
cmp
arpl
push
int
and
mov
mov
push
sbb
jmp
stos
hlt
mov
jae
mov
cmc
mov
or
fs
mov
dec
xor
pop
sar
rorb
loop
jecxz
xchg
dec
popa
sbb
xor
outsl
add
dec
jns
adc
jmp
sub
adc
mov
jb
cmp
sbb
test
and
data16
sarl
lcall
sbb
add
mov
es
pop
fsts
aam
int3
insl
adc
add
out
idivl
xchg
dec
rorb
aas
hlt
nop
enter
clc
mov
mov
xchg
int
in
adc
xchg
out
gs
jae
jb
repnz
inc
adcb
ss
cltd
mov
sti
icebp
sbb
pop
imul
dec
jbe
add
lds
dec
ficompl
data16
xlat
push
adc
fs
outsl
xor
mov
inc
scas
add
into
pop
mov
pusha
adcb
add
sti
mov
cmpsb
adc
outsl
xchg
inc
in
add
add
cmp
dec
andb
dec
movsb
fists
mov
pop
xchg
mull
xchg
loope
subl
push
inc
xor
test
pusha
add
subb
mov
jno
sbb
mov
jne
fidivs
jbe
cmp
shrl
adc
jg
inc
mov
in
and
push
cmp
lret
fdivs
lock
inc
add
push
dec
rorl
cwtl
jmp
cs
loope
ljmp
call
data16
movsb
adc
lcall
aaa
push
sbb
shl
pop
imul
enter
fidivrl
mov
outsl
mov
ss
cmp
pop
pop
jg
cmp
or
cltd
mov
bound
mov
xlat
lods
jmp
sbb
bound
sub
mov
lods
mov
xchg
push
push
icebp
inc
sub
and
insb
adc
sbb
movsl
xchg
sub
adc
arpl
mov
jo
sub
pop
ljmp
scas
cmc
pop
fistl
int3
pusha
mull
es
outsl
push
das
cs
nop
xor
jge
pop
sub
call
push
leave
aad
adc
mov
jecxz
not
std
fstps
loopne
dec
rorl
push
mov
push
mov
jp
sbb
out
mov
cltd
into
leave
mov
gs
in
pop
mov
popf
fsubrl
icebp
jmp
mov
notl
sub
mov
outsl
jo
add
adc
sub
rcrl
mov
sub
rcrb
mov
jns
fisttpl
add
push
inc
sub
inc
push
enter
xor
jno
outsl
dec
nopl
adc
mov
lret
cmp
or
push
push
and
divb
adcl
add
pushf
jecxz
mov
mov
loop
jns
dec
adc
fistpll
adc
jecxz
sti
outsw
mov
cmpsl
imul
arpl
pop
dec
les
push
cmpsl
iret
and
mov
pushf
fadds
das
mov
mov
adcl
popa
jnp
pop
bound
stos
pop
jmp
jecxz
in
sub
nop
or
stos
mov
loope
data16
mov
scas
pop
pop
dec
cmp
popl
adc
cmpsb
pop
add
xchg
aad
cmp
mov
popa
xor
mov
lock
jle
mov
bound
repnz
adc
mov
movsb
jne
mov
stos
mov
xchg
iret
cmp
xor
mov
push
jmp
stos
jge
stos
sbb
sbb
pusha
dec
mov
mov
push
push
add
adc
jb
rcrb
ret
pushf
mov
dec
xchg
dec
adc
lea
sub
fists
inc
pop
shlb
mov
jg
sbb
mov
xlat
outsb
pop
or
or
cltd
push
roll
mov
cmpps
push
rol
sub
and
or
outsb
ret
add
popa
rcll
mov
or
insl
xor
add
subb
sbb
push
aad
aas
fnstcw
gs
out
fistl
mov
xacquire
stos
test
inc
jecxz
sub
pop
mov
push
das
push
cmp
pop
xor
jo
enter
dec
mov
cmpl
into
dec
mov
lahf
out
or
mov
les
ljmp
test
fxtract
insl
dec
cmp
xchg
sub
push
dec
sub
es
in
in
outsl
mov
jle
ja
xor
outsb
je
data16
pop
push
add
sbb
gs
and
imulb
push
dec
sbb
jmp
or
adcb
movsl
lock
stos
add
dec
mov
sub
jns
jo
pop
imul
dec
addr16
lock
scas
leave
cmpsb
push
outsl
pop
leave
add
and
scas
adc
jp
call
inc
mov
shll
lcall
test
call
movsb
adc
imul
popf
xchg
jo
ret
mov
ss
jne
mov
cmp
pop
rorb
sbbl
sub
xrelease
lcall
adc
pusha
sbb
loop
shll
xor
rolb
push
dec
bound
push
push
cs
aad
stos
arpl
leave
int
movsl
faddl
cld
and
adc
cmpb
jl
cmp
imul
pop
cltd
jnp
add
push
movsb
xchg
sahf
mov
mov
loope
mov
jl
mov
enter
adc
add
cmp
cltd
mov
pop
mov
jo
addr16
and
and
rorb
jb
stos
jns
je
adc
sub
xchg
mov
test
push
dec
test
inc
out
jno
sarl
lds
mov
sub
fisubl
jae
shlb
jmp
cwtl
add
cmp
inc
cmp
dec
mov
fucomp
pop
push
int3
or
dec
push
je
adc
andl
and
cmp
dec
in
fmuls
add
out
lods
nop
sub
cltd
jne
dec
xor
hlt
fwait
ja
out
shll
dec
or
xchg
push
jae
leave
add
add
cmp
or
test
loope
ficomps
mov
sub
loop
sahf
xchg
jle
mov
jmp
movb
jno
mov
add
das
push
dec
fstpl
xor
in
in
jmp
cmpsl
rcrb
push
sub
loope
aad
mov
and
mov
popa
sub
gs
rorl
test
jnp
cli
xor
jp
inc
rol
sub
xorl
es
push
add
mov
icebp
or
movsl
mov
or
push
mov
in
mov
ds
lock
jno
sbb
lods
les
inc
and
addr16
shrb
jp
test
mov
add
mov
dec
add
sbb
jno
mov
repz
push
mov
jnp
mov
pushf
add
lock
ljmp
ja
jne
xchg
popf
lock
in
shr
add
fldl2e
dec
push
adc
insl
sub
push
push
push
popa
mov
push
jl
nop
fldt
dec
call
scas
mov
and
insb
imul
mov
push
cmp
aaa
mov
cli
push
xchg
popf
pop
icebp
jmp
push
test
insb
jmp
push
data16
mov
jae
pop
add
push
cmpsl
xchg
fs
shr
out
inc
jle
dec
stc
jmp
jo
movsb
aad
adc
pop
push
add
adc
lahf
add
push
xor
adc
xor
arpl
and
arpl
in
daa
push
leave
test
aaa
jno
shll
in
xchg
popf
xchg
jno
or
push
add
mov
cltd
unpckhps
dec
or
imul
mov
and
clc
add
loopne
adc
in
fcmovnu
insb
fwait
jb
movsl
sub
cli
pop
movsb
mov
and
daa
push
popf
rorb
cmp
stc
data16
mov
adc
cmp
cmpb
insl
ljmp
and
ljmp
leave
inc
lahf
lret
pop
sub
in
js
mov
aaa
cmp
mov
dec
fldenv
in
mov
popa
xor
je
sub
mov
add
cmp
ret
dec
sbb
movsb
mov
ds
jbe
xchg
test
xchg
jno
mov
sub
mov
mov
test
fisttps
repz
adc
cmp
fsubrs
ror
xchg
dec
cmp
aaa
shll
lock
or
mov
xchg
mov
int3
jg
mov
and
mov
cmpsb
fldln2
jg
xor
push
fidivrl
adc
xchg
lcall
and
push
sbb
dec
mov
fcoml
adc
js
dec
cmp
je
pop
call
and
lods
or
pop
ja
sti
push
sbb
stos
cwtl
cmp
sbb
and
insl
js
mov
adc
les
mov
xor
or
inc
mov
js
imul
lret
test
pop
lret
xlat
mov
aas
test
inc
in
idiv
je
sbb
cmp
cmc
aad
add
mov
push
out
adc
push
dec
inc
sbb
mov
repnz
pop
push
fstps
repnz
pop
or
in
adc
mov
and
inc
and
add
mov
cld
ds
push
dec
push
dec
push
aam
arpl
and
mov
mov
adc
in
add
insl
cmp
and
pop
mulb
arpl
mov
inc
xchg
sub
test
cld
pop
ljmp
and
sarl
fwait
jecxz
cmp
mov
jno
daa
adc
mov
and
mov
xor
push
pop
pop
sbb
cmp
inc
lret
xchg
jge
inc
pop
les
inc
fwait
xor
pop
add
in
inc
std
dec
inc
sar
pop
test
hlt
imul
or
sbb
dec
inc
in
pop
cld
out
fiaddl
sbb
movsl
popa
jp
std
push
outsb
imul
ss
aad
mov
outsl
mov
insb
or
add
xor
xchg
call
push
push
dec
pusha
fdivrs
and
pop
test
and
das
movsb
rcr
cltd
sub
inc
lds
or
dec
call
inc
fcmovu
jecxz
or
faddl
adc
in
into
inc
push
push
pop
ret
add
jmp
sti
xchg
pop
fsubr
push
lods
xchg
add
aam
pusha
outsl
movb
scas
mov
nop
sbb
cmp
cmp
mov
outsl
es
adc
adc
mov
stos
int3
sahf
in
stc
out
fldl
data16
and
cmp
out
movsl
mov
and
pop
mov
pop
cmpsb
cmpsl
mov
lcall
fidivs
in
stos
push
cmp
xor
imul
nop
bound
out
adcb
mov
cwtl
sub
or
inc
xor
inc
ret
inc
rep
xchg
dec
daa
sarl
xlat
xlat
sub
loop
mov
and
adc
leave
fnsave
out
in
js
or
repz
lock
mov
shll
in
adc
add
insb
sbb
aad
add
out
out
mov
sbb
mov
mov
sarb
or
xor
fs
xor
insl
ret
dec
in
xor
add
jge
imull
push
addl
in
cltd
aad
mov
jmp
xchg
jge
add
xlat
jns
bound
mov
push
inc
loopne
inc
fmuls
arpl
xchg
dec
and
rcll
in
or
loop
jae
mov
stos
xor
in
push
adc
inc
add
imul
clc
inc
add
iret
stos
lret
xor
outsl
lcall
xor
xchg
dec
enter
popf
mov
lcall
mov
enter
mov
aad
jno
pushf
mov
xchg
xchg
ret
out
sbb
add
xor
scas
or
pushf
push
lds
or
mov
lds
mov
inc
sahf
cmpl
mov
les
push
fimuls
pop
pop
push
or
adcl
lods
mov
lock
pop
movsb
and
imul
cmp
adc
dec
call
sub
jl
cmpsl
test
pop
push
push
or
xchg
arpl
mov
sahf
ss
sarl
repnz
cmc
cwtl
jo
and
js
fisttpll
dec
xlat
mov
lahf
andb
add
mov
jmp
dec
into
pop
mov
push
dec
mov
std
adc
arpl
push
cmp
push
int3
pop
lea
cmp
cmpl
xchg
es
pop
xor
inc
push
push
jl
inc
imull
push
cmp
js
imul
mov
or
jle
test
sub
xor
pop
push
and
lods
shrl
test
pop
adc
adc
ds
xor
sahf
jb
dec
pop
mov
test
enter
pop
dec
and
int
cmp
in
mov
aaa
sub
call
lcall
xchg
mov
mov
mov
cmp
cmp
sahf
daa
loope
fldenv
shrl
cwtl
clc
aaa
pushf
rorl
dec
sbb
cmp
lahf
pop
fmuls
mov
push
adc
ja
xchg
adc
fsts
dec
pop
addr16
imul
int
iret
shl
sbbb
mov
jl
xchg
inc
inc
mov
out
gs
daa
stc
mov
cmpsb
mov
rcrb
enter
movsl
mov
add
call
sub
out
fistps
je
or
aad
aaa
push
outsb
dec
xchg
jl
es
mov
and
cld
and
cmovne
jg
cmc
js
jmp
popf
cmp
xor
fldt
jae
push
int3
jl
pop
rcl
sbbl
test
mov
xor
cld
jecxz
xlat
push
call
sti
lret
test
in
int
adcl
sbb
push
movsb
shll
fsubr
adc
push
mov
fiaddl
adc
in
cmc
pop
addl
inc
mov
std
mov
pop
mov
mov
repnz
into
pop
adc
mov
lods
mov
cmpsl
xchg
data16
dec
push
jecxz
cmpsb
add
xor
rcll
leave
mov
movsb
inc
fcoms
xor
inc
fisttpl
dec
cmp
shlb
nop
mov
xor
mov
jno
dec
out
call
add
fldenv
addr16
cltd
sub
xchg
insb
mov
stos
push
cmp
jnp
pop
sbb
mov
pop
testb
push
jecxz
inc
div
leave
cs
nop
clc
sbb
push
daa
pop
stos
xor
inc
and
sbb
in
or
push
pop
xchg
fwait
sahf
sub
jecxz
jmp
dec
bound
mov
out
push
adc
loopne
testl
cmpsl
cmpsb
popf
out
mov
and
pushw
sub
bound
dec
scas
call
pop
push
mull
adc
mov
notb
gs
std
xchg
std
cmp
sbb
fldt
push
in
inc
loop
jle
ret
imul
jnp
jnp
psraw
push
adcb
push
xlat
jnp
mov
ret
pop
and
sub
in
shrl
xor
jl
dec
clc
test
jmp
imull
cmp
lods
dec
aaa
add
sbb
movsb
xor
sbb
mov
pop
lret
inc
adc
pop
inc
pop
add
pop
imul
out
pop
mov
scas
pushf
sbb
mov
aad
ss
sub
sbb
adc
cmp
jns
mov
push
xor
fs
pop
fldenv
sub
popa
dec
dec
add
mov
leave
loopne
gs
or
pop
ret
cli
push
int3
lret
jb
cmp
imulb
push
mov
adc
push
jbe
ret
cmp
or
jp
push
dec
add
add
jae
ret
sti
sahf
mov
xchg
ds
leave
hlt
or
push
mov
jge
mov
mov
dec
jmp
movsl
filds
imulb
mov
shlb
cwtl
imul
dec
imul
cmp
add
adc
inc
pop
fbld
testb
cld
cs
stos
mov
fwait
jle
out
cld
xor
data16
outsb
fildll
add
pop
lret
fcmove
jge
adc
push
sbb
not
ja
push
and
push
mov
call
mov
mov
adc
cmpsl
jbe
adc
jo
lahf
mov
mov
mov
out
add
pop
sbb
cmp
sbb
mov
clc
push
imul
testl
add
call
iret
sbb
adc
sbb
ficoms
xor
cs
pop
scas
stos
aas
mov
or
popa
mov
push
xchg
aaa
mov
inc
ret
rcll
jg
add
shl
sete
in
or
stos
sbb
adc
xchg
pop
cltd
inc
sbb
repz
sahf
xchg
jg
push
lods
fistpl
mov
outsl
adc
mov
cmpsl
xorb
test
aaa
push
mov
pop
roll
fs
mov
lods
mov
sub
in
dec
in
jl
mov
cs
ss
cmp
push
aas
imul
dec
dec
ja
jle
movsb
jb
nop
aas
cmp
mov
inc
in
idivb
lock
daa
push
cli
test
lret
pushf
or
arpl
pop
and
fwait
dec
stos
sbb
inc
mov
xor
das
je
out
jg
sbb
sbb
mov
jne
addl
push
mov
push
and
jb
adc
pop
pop
mov
inc
lods
mov
push
cs
imul
test
jae
stos
lods
adc
imulb
xor
jecxz
in
mov
jmp
pop
dec
test
fucomp
and
sbb
xchg
bound
cli
add
subb
es
dec
sub
jge,pn
mov
cmp
incl
inc
inc
outsl
repnz
in
sbb
add
cmpsb
push
mov
mov
add
inc
pop
outsl
lds
pop
adc
test
gs
stos
movsb
push
arpl
ds
mov
data16
aas
cld
xchg
jo
cmovae
and
fwait
mov
enter
insb
fsubr
iret
sbb
mov
jge
push
ret
hlt
push
xor
aam
jp
loop
push
pop
daa
cli
sbb
jp
xchg
dec
bound
add
cmpsb
fwait
cli
aas
pop
rol
sbb
xor
sbb
inc
clc
aad
in
xchg
roll
gs
scas
lcall
fisubrs
pop
aaa
cmc
pop
out
or
pop
icebp
jae
add
loop
xchg
call
es
jae
and
les
pop
jecxz
pop
mov
or
inc
or
push
xor
add
push
xchg
imul
inc
out
imul
fisubrs
mov
roll
ficomps
mov
je
sub
imul
push
mov
scas
or
xor
pusha
dec
ret
push
cmc
add
ficoms
cmc
lret
cs
loop
ret
add
xchg
cmp
ret
mov
xchg
mov
sahf
test
add
inc
cmpsb
inc
cmpsl
enter
cmc
mov
daa
out
sbb
sbb
xchg
and
xchg
ficompl
xchg
push
sbb
xchg
ljmp
pop
fdivs
lret
add
cs
ja
pop
shlb
mov
shlb
xor
dec
jecxz
adc
dec
cmp
jb
into
into
adc
out
push
add
push
dec
int
push
mov
leave
stc
cmpsl
jge
inc
bound
dec
pop
orb
ret
imul
sub
mov
test
add
enter
adc
gs
ljmp
outsb
ljmp
push
or
ret
mov
shrl
inc
push
scas
and
test
iret
cmp
fistpl
iret
xor
hlt
pop
fcoms
into
jmp
cmpsl
push
pop
mov
sti
movsb
lahf
cs
jle
jge
or
xchg
orb
sub
jmp
xchg
in
sahf
mov
das
stos
js
mov
mov
mov
jl
add
or
xchg
jno
push
pop
enter
mov
pop
mov
sub
pop
mov
xor
sub
scas
test
fwait
mov
adc
dec
insl
inc
das
push
fildll
and
or
pop
jg
jno
pushf
jg
xlat
xchg
jmp
in
and
lea
and
div
ds
mov
and
sbb
iret
rcrl
cmp
push
into
push
jbe
nop
adc
stos
mov
mov
incl
mov
incb
inc
xor
test
cmpsb
divl
popa
in
clc
lahf
push
cmpsl
xchg
mov
sti
mov
adc
cld
repnz
xor
popf
push
scas
bound
sub
mov
jp
scas
outsl
or
pop
stc
shrb
mov
adc
and
test
and
stos
pop
int
fdivrs
orb
in
loope
dec
push
aas
pop
xor
and
jecxz
pushf
or
or
dec
cmp
arpl
mov
jno
push
add
outsl
rclb
out
or
cmp
test
xorl
int
mov
rcrl
or
or
push
mov
mov
mov
rolb
ficoms
in
and
cmp
sbb
mov
std
loop
push
cmc
add
jbe
mov
xchg
sbb
xor
adc
dec
daa
fisttpl
add
pushf
xlat
lds
out
and
and
pop
cli
push
xchg
cli
imul
into
sub
cld
mov
stc
push
stc
mov
inc
xchg
mov
dec
xor
into
mov
mov
into
aam
jb
das
sahf
popf
jp
mov
mov
mov
in
dec
dec
movsb
push
or
dec
je
jns
add
push
movsl
aaa
lahf
sub
or
xor
les
or
xchg
sub
dec
outsl
adc
sub
mov
clc
push
push
push
mov
aaa
cmpsl
mov
or
clc
outsl
scas
into
test
sub
xorb
inc
push
xchg
in
xor
push
inc
push
ret
inc
or
fdivr
pop
insl
sub
stos
adc
mov
push
push
xlat
sbb
addl
cmp
jg
inc
mov
jmp
das
ljmp
xchg
cltd
cmp
mov
xchg
shlb
ss
sub
jl
fiadds
xor
rclb
xor
subl
push
imul
imul
in
sub
fbstp
loop
push
insl
test
sti
mov
cmp
nop
and
test
test
iret
xchg
out
jne
outsb
dec
adc
call
xchg
fs
xchg
push
mov
or
movsb
jl
dec
or
sub
test
push
mov
inc
jns
dec
insb
or
jo
negb
or
and
xorl
outsb
and
sbb
jle
ffree
pop
mov
push
leave
mov
sub
mov
nop
push
mov
lea
mov
cmpsb
stos
and
adc
fsubl
xor
dec
lds
mov
cmp
neg
xor
sub
dec
sbb
sub
jp
mov
adc
les
add
loope
in
mov
cmp
mov
sbb
pop
push
sub
in
lea
sbb
or
cs
xor
jns
popa
and
loope
mov
jg
inc
cltd
pusha
fdivl
push
sti
imul
push
aaa
scas
add
test
xlat
push
mov
rolb
xchg
sub
lds
in
cmp
jno
xchg
aaa
lret
add
enter
ret
jnp
adc
sub
and
dec
jecxz,pt
pushf
pop
insl
hlt
shrl
lahf
in
int
insb
pop
mov
xchg
sub
in
jb
and
adc
addr16
push
sub
pop
xor
dec
pop
ja
xor
jecxz
add
scas
in
clc
test
stos
cmp
lret
jnp
pushf
repnz
das
and
std
ljmp
mov
push
add
inc
ja
jns
ja
imul
mov
test
add
es
ret
ds
xor
sarb
int
pop
ljmp
push
cmc
mov
daa
mov
push
xchg
add
xchg
mov
lea
lret
out
mov
fcoms
push
adc
out
mov
fmull
fistps
sub
xor
jbe
mov
outsl
dec
and
daa
cmp
dec
cmp
hlt
push
cmp
fbstp
or
stos
stos
cmp
stos
call
leave
jmp
mov
rcrl
lahf
pop
addb
mov
aaa
std
outsb
dec
mov
ret
fwait
jle
test
xchg
sub
mov
or
pop
sarl
movsl
addr16
inc
mov
mov
cmp
je
mov
test
test
xchg
push
pop
jmp
push
inc
jmp
gs
loopne
adc
adc
jp
push
leave
cmp
loop
xor
aas
mov
sbb
repz
push
movsl
enter
push
add
pushf
mov
ror
push
cmpb
and
fimull
xchg
sub
add
dec
adc
ret
bound
fwait
ret
and
push
mov
xor
cmp
mov
iret
cmp
sbb
xor
jnp
fldcw
in
daa
subb
outsl
aad
loopne
test
sbb
and
shld
mov
sbbl
pop
stos
and
xor
das
out
push
scas
out
int
inc
fcoml
fstps
pop
add
hlt
jnp
icebp
and
xor
data16
xchg
adc
pop
mov
inc
add
popa
mov
mov
in
xchg
mov
movsl
popf
jbe
inc
pop
or
sub
sbb
jecxz
nop
imul
mov
in
sbb
adc
sbb
jb
inc
cmp
jb
divl
outsb
sub
push
call
lods
cmpsb
repnz
outsb
push
test
arpl
nop
daa
int3
pop
and
data16
xchg
adc
subl
or
addr16
push
outsb
cmp
gs
xor
add
xchg
or
xchg
jg
xchg
hlt
cmc
pand
sbbl
mov
idiv
imul
ds
js
inc
adc
stos
std
sub
loope
xor
xchg
and
dec
and
jle
mov
stos
jno
incb
inc
cmp
inc
mov
mov
xchg
in
std
cmp
loop
iret
fs
fwait
dec
lds
and
adc
sbb
or
test
std
jne
dec
fildll
fbstp
xchg
mov
int
mov
mov
popf
icebp
push
add
iret
or
out
loopne
imul
mov
test
mov
rorl
xor
cmc
pop
sbb
mov
lcall
cmp
cmpsl
adc
and
lcall
adc
adc
push
inc
movsl
adc
divb
std
out
xchg
das
xor
aas
dec
in
bswap
clc
xchg
cwtl
push
cltd
in
aad
and
cmpsb
inc
inc
and
stc
push
mov
lcall
jg
adc
xor
sbb
push
rcrb
add
push
pop
push
mov
cwtl
inc
fucom
push
push
int
mov
or
lret
bound
mov
xchg
test
mov
inc
sub
das
push
pop
lods
pop
and
loopne
aad
movsb
xchg
cli
sub
adc
dec
sbb
cmp
xor
rclb
out
mov
std
mov
or
pusha
sbb
sarl
mov
push
call
mov
mov
dec
fwait
jne
inc
vpshld
hlt
add
ds
jne
fsubrs
jge
sbb
and
push
divb
jmp
scas
add
std
add
cmpsb
stos
lods
fstpl
lods
inc
icebp
sub
and
lods
and
lock
jbe
cmp
jmp
pop
movntps
jns
aas
mov
add
outsb
sbb
in
mov
stc
test
imul
sbb
mov
test
rcrl
sarl
aaa
arpl
rcll
aaa
push
repnz
and
pop
adc
pop
xchg
out
insl
nop
pop
dec
js
xchg
ds
fisttpl
mov
xor
lds
sbb
les
nop
jecxz
mov
push
into
in
add
dec
cltd
fxch
cs
push
es
orl
popa
fsubs
stos
mov
jbe
mov
testl
ret
pop
fnstenv
adc
mov
rcll
or
pop
ret
cmp
jge
inc
push
in
stos
ja
cmp
mov
adc
or
and
lods
imul
cltd
sahf
mov
mov
pop
dec
dec
mov
iret
jbe
xchg
stos
sahf
fcompl
jg
pop
jns
or
lods
push
lsl
rcrl
ret
insb
jae
cmp
in
pop
iret
lret
push
lret
lods
inc
arpl
and
mov
loop
fisubrl
movsb
data16
test
pop
jl
aam
mov
fcoms
daa
mov
lcall
gs
jne
pop
jmp
lods
shrl
push
or
xorb
aaa
mov
cli
arpl
push
sub
addr16
dec
in
cld
jb
cmpsb
and
scas
and
insb
add
data16
clc
add
inc
fiaddl
sti
divl
sbb
sub
orb
or
mov
dec
outsl
cmpsb
sub
sbb
mov
cli
es
cmpsb
cmp
mov
cmp
fs
outsb
les
add
divb
adc
push
xchg
pop
sbb
es
fsubl
in
cs
mov
or
push
popa
aad
dec
jp
sub
out
lcall
dec
xchg
cmp
push
js
push
testl
lds
sbb
xor
test
or
es
cld
mov
icebp
rclb
mov
es
cmp
sti
pushf
in
jmp
jge
jg
fcompl
cmp
or
dec
popf
fdivs
push
mov
and
push
daa
pop
divl
mov
or
adc
xchg
cld
cmc
cmc
xchg
sarl
cld
sbb
je
aad
jle
cli
mov
decb
cmp
cmp
add
lods
add
jg
pop
test
call
outsl
pop
sbb
pop
in
scas
sbb
xor
int
add
mov
and
jno
sahf
imul
sub
mov
repz
jmp
lds
xchg
mov
inc
movsb
lock
dec
add
xor
mov
orb
lret
push
ss
xchg
cmp
imul
test
sub
mov
xchg
stos
popa
sub
push
jl
xchg
fdiv
inc
addr16
dec
xchg
cmp
ljmp
lods
cld
sbb
sbb
and
pop
jl
sub
lcall
mov
cmp
movsb
aaa
jle
sbb
jne
cmp
push
and
sti
and
xchg
imul
jno
jns
or
inc
push
mov
push
pop
repnz
pop
bound
cmp
jb
lea
dec
sub
xor
mov
repnz
dec
aas
add
stc
andl
aas
push
movsb
sub
out
movsl
sub
loop
add
pop
fcmovbe
test
mov
sbb
sbb
and
mov
adc
sub
pop
adc
pushf
lods
inc
jl
sub
mov
cltd
lea
mov
lea
jge
sub
roll
lcall
xor
mov
inc
insb
cs
enter
or
fsubp
mov
mov
in
xchg
xlat
pusha
ljmp
jae
push
rcrl
jg
mov
pop
xchg
xchg
flds
loop
add
inc
pop
jbe
mov
xor
cld
jne
leave
insb
jne
fisubrs
pushf
add
lret
icebp
jl
xchg
jae
mov
ret
jle
xchg
and
sarb
xchg
testl
je
mov
jge
cmp
and
repz
xchg
pop
rcrl
pop
lcall
xor
push
scas
test
cmpsb
icebp
and
loopne
adc
xchg
adc
dec
xchg
dec
inc
testl
and
and
inc
daa
popa
fwait
in
ja,pt
or
pop
add
sub
test
pop
and
mov
pop
aam
cmp
in
adc
xchg
mov
lahf
adc
pop
int
mov
jp
mov
ljmp
or
or
out
ret
sub
hlt
jl
ret
inc
enter
or
mov
adc
mov
mov
add
sbb
jge
xorb
lret
test
mov
or
sub
popf
popl
ja,pn
loop
sbb
shl
jmp
adc
les
jae
movsl
mov
pop
icebp
psrad
aas
insl
inc
icebp
and
cmpsl
fsubrs
lret
adc
mov
fdivrl
cmp
repz
faddl
out
bound
jp
call
sub
in
push
testb
push
aaa
mov
jmp
pop
popa
aaa
fists
leave
rcl
mov
fldenv
mov
btc
insb
sub
sub
jne
xchg
xor
mov
repnz
lods
jbe
mov
mov
xor
ss
aad
push
sub
pop
je
fadds
jg
dec
inc
lods
fdivs
aas
out
icebp
pushl
jae
imul
push
sub
incb
jmp
stos
mov
sub
sub
push
pop
xchg
dec
pusha
and
scas
push
sub
iret
hlt
out
or
daa
lea
xor
add
and
sub
sbb
mov
sbb
dec
or
mov
cwtl
into
repz
fnsave
adc
jbe
cmpsb
ljmp
push
mov
dec
in
mov
outsb
rclb
das
out
adc
in
loopne
jns
push
mov
xchg
mov
or
cmpsl
imull
pop
add
inc
sub
cmp
push
es
sub
dec
xchg
ds
repz
adc
sub
sub
imul
pop
ret
sbb
flds
cmp
xor
cli
xchg
mov
shrb
jo
dec
mov
insl
mov
mov
sti
insl
sub
xchg
lret
repz
mov
pop
je
jae
cli
idivl
jmp
cmpsl
jno
pop
insb
mov
bound
add
cmpsb
cld
out
sahf
aad
inc
aas
jle
lea
faddp
dec
leave
in
testb
popf
test
out
stc
add
and
push
cwtl
fimuls
fnsave
sti
into
lock
push
pop
sub
fstl
mov
inc
jb
dec
mov
pcmpeqb
lock
repnz
inc
movsb
fwait
test
and
mov
pop
loopne
sbb
dec
mov
jmp
ljmp
xchg
jp
mov
mov
xchg
jb
and
data16
aam
movsl
stos
andl
les
xchg
sbb
addr16
ljmp
pop
aas
add
jmp
push
and
mov
or
ljmp
sub
dec
cld
cwtl
mov
mov
pusha
clc
pusha
test
sub
outsb
push
lahf
inc
jne
push
jb
lods
sub
add
mov
dec
mov
ror
or
stc
mov
stc
push
testb
fdivrl
cmp
sbb
push
imul
inc
add
mov
push
add
gs
add
push
daa
xchg
addr16
cltd
mov
fdivrl
mov
xchg
pop
push
sbb
fisubs
adc
xchg
stc
ret
dec
inc
shl
insl
add
push
mov
frstor
sub
ss
out
sti
and
mov
bound
sbb
or
xor
sarl
sbb
dec
mov
std
test
imul
inc
incl
fadd
sbb
xchg
mov
inc
arpl
adc
lods
sub
cmp
loopne
lahf
xchg
inc
popf
mov
xchg
pop
push
adc
sbbb
cltd
orl
xor
hlt
mov
cmc
in
jmp
pop
pop
fdivl
lahf
mov
push
pop
lds
test
xchg
stos
sub
nop
stos
xor
ss
pushf
xchg
pop
jecxz
or
loop
int3
lahf
loopne
out
icebp
rcl
xor
and
mov
fsubrl
push
lret
inc
pop
jg
lret
cmp
les
pop
loop
and
lahf
ja
les
mov
sub
sub
jns
addl
push
mov
je
mov
pop
sub
int3
cmovp
jl
mov
push
mov
add
in
arpl
test
lcall
stc
mov
enter
lahf
or
adc
push
in
inc
rcrb
aam
pop
aaa
int3
sub
jo
lret
jge
loop
out
sbb
out
xchg
cmp
repnz
push
lea
ja
add
fwait
sbb
mov
mov
loop
dec
mov
or
cli
sbb
mov
icebp
dec
insl
daa
adc
dec
testb
mov
cmp
adc
cmpsl
out
mov
je
lret
xchg
adc
ret
push
in
cltd
cmp
lock
mov
addr16
stc
mov
mov
push
xlat
aaa
and
ret
adc
or
sbb
jnp
in
inc
mov
fisubrl
jge
xchg
mov
add
subb
fsubrl
pusha
xchg
xor
imull
jg
add
jge
ds
in
fs
mov
shr
mov
lods
cmp
ljmp
mov
scas
sub
pop
mov
std
push
adc
jne,pt
cltd
pop
and
std
popf
inc
nop
mov
leave
push
add
icebp
divl
xchg
in
aaa
cmp
add
stc
ja
add
pushf
cwtl
add
scas
and
int
enter
push
mov
pop
mov
pop
in
push
mov
in
inc
mov
pop
sub
mov
lock
iret
test
insb
or
adc
mov
xor
in
les
clc
stos
push
push
add
ret
lret
mov
cmp
pop
sbb
cs
test
or
movsb
sahf
sbb
lret
jp
push
mov
subl
mov
movsl
xchg
into
push
pop
mov
shrl
push
mov
sbb
shr
outsb
adc
or
mov
cmp
dec
stc
and
jl
push
add
insb
xchg
push
out
mov
adcl
popa
adc
and
gs
lcall
mov
mov
sub
stos
ret
add
fbld
jne
sarb
shlb
jg
push
or
dec
movsb
cmp
and
ljmp
fists
pop
std
add
sub
rcll
xchg
insl
fisubrl
xchg
sbb
mov
pop
and
push
sub
cmc
clc
int
mov
push
ret
push
out
out
sbb
adc
loop
add
sti
rolb
cmp
or
xchg
lret
add
test
imul
xchg
mov
sbb
sti
dec
xchg
or
mov
sbb
int
pop
push
and
cmp
adc
jg
sarb
pop
lahf
mov
rolb
dec
mov
int
aas
cmp
lods
test
sub
sub
mov
notb
stos
les
mov
dec
std
test
test
mov
loop
xchg
nop
shl
in
dec
ljmp
mov
loope
and
fcmovnb
ljmp
sbb
stos
pop
sarl
sbb
add
mov
add
addr16
or
sbb
les
xchg
mov
cmc
pop
out
je
push
imul
mov
lret
outsb
inc
jae
sub
fcompl
or
xchg
insl
push
fimuls
lds
sub
imul
pop
out
clc
push
push
and
popa
sbb
rep
or
iret
pop
in
mov
mov
mov
jnp
dec
dec
xor
outsb
jecxz
cmp
jb
or
xchg
addr16
lods
subl
mov
aad
cwtl
arpl
cwtl
xchg
loopne
push
insb
mov
stos
into
lods
mov
fadd
rep
movsl
in
lods
aad
int
or
add
mov
jmp
frstor
add
into
int
cld
or
sub
insb
lahf
dec
dec
and
mov
testb
xchg
test
fldcw
mov
push
mov
movsb
pop
out
out
inc
xor
pop
inc
pop
jbe
test
xor
out
add
repz
sub
stc
in
jns
sbb
mov
and
int
clc
out
lds
jns
mov
add
pusha
sbb
push
adc
mov
mov
sub
cld
mov
ret
jns
lods
stos
mov
sub
out
jns
iret
xchg
bound
scas
pop
inc
jcxz
insb
imul
ficomps
adc
or
rclb
sub
inc
mov
jns
js
push
imul
loopne
pop
pop
es
jnp
jb
es
lcall
and
out
push
xchg
jnp
aaa
jecxz
push
in
outsl
test
in
subb
push
pop
add
xlat
xchg
aaa
mov
std
dec
rorl
pop
loope
dec
pop
mov
and
cmpsb
mov
loop
push
enter
mov
bound
push
pop
xor
fidivrl
mov
stc
adc
jmp
push
cmp
push
mov
outsb
adc
xor
fs
cmp
push
xor
jno
push
movsb
inc
mov
sbb
mov
xchg
test
popf
mov
mov
mov
cmpsl
mov
lret
clc
inc
imulb
test
lods
cmpsl
mov
push
jne
es
dec
das
xchg
jmp
dec
pop
repnz
mov
pop
cld
stc
cmpsl
mov
rcrl
sub
xchg
inc
setb
call
push
jno
push
push
jge
push
sar
ss
cmp
mov
les
add
push
cmp
jbe
add
pop
rcrl
movsb
rcrb
lahf
cli
int
cli
mov
jle
aad
xchg
jns
inc
push
pop
mov
pop
gs
gs
lea
and
jl
add
xchg
movsl
neg
cmp
and
lret
cltd
dec
in
and
ja
rclb
arpl
rclb
pop
sbbl
dec
lea
call
fdivr
imul
jae
loopne
test
push
xor
lret
jp
sbb
sti
add
jl
fadds
mov
shrb
lods
push
lret
sub
into
pop
imul
sbb
mov
icebp
loopne
or
push
shlb
arpl
xchg
inc
inc
cli
mul
fstl
xor
sub
in
mov
adc
imul
or
div
cmp
mov
dec
dec
sarb
mov
adc
push
sti
pop
sbb
out
jle
popf
sub
mov
pop
xchg
movsl
outsl
fisttps
popa
push
ja
in
or
or
call
mov
push
in
ret
out
xlat
sbbb
xchg
in
pop
mov
test
mov
and
es
xchg
mov
nop
fsubrp
mov
test
xor
shufps
out
cld
push
stc
cmp
and
pop
adc
mov
xor
or
mov
push
xchg
lods
pop
bound
mov
inc
push
jo,pn
dec
movsb
popf
cmp
lock
and
and
pusha
rorb
mov
cmp
int
ljmp
push
dec
ds
jle
dec
lret
es
jnp
les
jns
ja
lock
cmp
sar
sub
lret
lret
fwait
fmull
addr16
xor
shll
mov
add
ret
aas
mov
mov
xchg
mov
lods
mov
jb
and
add
push
loope
pop
bnd
adc
mov
clc
push
cmp
scas
mov
push
imul
push
das
mov
jmp
in
mov
pavgb
xor
sbb
sbb
repnz
xchg
lds
mov
adc
pop
hlt
fmuls
sub
or
scas
lcall
fbstp
stc
or
push
xchg
mov
lret
push
test
mov
cli
jecxz
aam
xor
rol
lds
add
mov
scas
xchg
xor
roll
outsl
push
and
decl
xchg
xchg
adc
sub
bound
or
mov
adc
mov
cmp
js
je
test
push
and
xchg
arpl
testb
and
lods
xor
or
pop
pop
adc
cltd
mov
mov
push
dec
fs
xlat
add
jne
sti
scas
js
and
dec
add
mov
mov
cmpsb
fdiv
mov
cmp
in
mov
jg
in
xor
subl
xchg
pop
lret
xchg
xor
insb
ja
inc
loopne
cli
sbb
cwtl
lcall
mov
mov
sbb
outsl
mov
jb
fistpl
ret
xor
inc
rclb
leave
push
jns
in
push
push
xor
cmpsb
repnz
push
outsb
addr16
data16
cmp
cmpsb
jne
movsl
pop
or
xor
stos
adc
jae
aaa
add
stc
aas
cmp
lret
pop
cs
push
sbb
sarb
push
aaa
rcl
push
ror
dec
iret
test
out
add
mov
pop
int3
cs
push
movsb
pop
dec
aas
pop
imul
mov
jb
xor
pop
jg
test
movups
pop
outsl
movsb
sbb
sahf
clc
scas
or
mov
sub
pop
les
dec
and
mov
test
mov
xchg
nop
repnz
xor
mov
cltd
push
mov
in
shlb
inc
into
in
orb
jmp
sbb
das
xchg
and
rcr
sub
xchg
xchg
dec
pop
int3
mov
mov
xchg
stc
sbb
gs
inc
nopl
mov
xor
movsb
pop
jle
repnz
adc
xchg
xchg
sahf
adc
popf
inc
nop
lret
daa
push
jg
les
add
lret
mov
mov
adc
fcomps
mov
aaa
setb
imul
repnz
stos
cmp
inc
xchg
add
test
and
fdivp
cmp
mov
stos
mov
outsb
or
dec
lret
cld
xchg
adc
add
lret
xor
scas
lock
jg
mov
mov
and
push
xchg
mov
mov
dec
xor
in
jnp
push
pop
ret
sti
nop
dec
mov
dec
test
or
mov
xchg
push
outsl
mov
pop
cwtl
and
cmpl
xchg
pop
inc
mov
xor
sbbb
xor
stc
mov
int3
lahf
enter
jge
loopne
scas
push
imul
sbb
aaa
jp
lea
fstpl
lea
stc
inc
xchg
rolb
add
lret
xchg
fdivrl
pop
ror
aaa
or
sub
mov
out
es
mov
mov
adc
fstl
sub
loop
sbb
std
mov
outsl
pop
sbb
sbb
pop
test
cltd
dec
aaa
gs
inc
scas
imul
int3
call
mov
mov
icebp
add
out
add
adc
ja
aam
pop
jne
push
fcmovbe
std
mov
dec
cmp
mov
in
sbb
mov
lods
push
out
xchg
pop
test
xor
jo
lods
jb
sbb
sub
cli
pop
mov
xchg
arpl
loopne
and
xchg
mov
movsl
outsl
push
inc
add
adc
adc
rorb
fisttpl
lea
pop
test
mov
dec
mov
insl
cli
dec
adc
mov
testl
std
and
dec
adc
mov
mov
out
pop
pushf
mov
sbb
aas
test
mov
fs
mov
pop
daa
mov
or
pop
icebp
mov
lock
js
fucomi
dec
add
faddl
xchg
aas
dec
pusha
xchg
adc
scas
or
xor
sub
mov
jp
test
ret
or
jecxz
mov
ret
out
sarb
fldenv
nop
fmul
or
addr16
shrb
mov
xchg
movsl
cld
lea
fwait
mov
cs
fs
stos
daa
testl
mov
dec
out
fwait
push
aaa
sar
or
scas
fimull
dec
add
stc
fisubs
mov
dec
fstp
movsl
loope
ret
xchg
pop
mov
jb
ret
push
mov
adc
cltd
inc
inc
movaps
movl
fs
sti
xor
popa
jmp
dec
add
or
mov
cld
jae
div
arpl
sub
xchg
and
bound
jle
repnz
mov
subl
mov
cmp
xor
incl
and
stos
outsb
mov
jns
lea
test
dec
pusha
sub
mov
sbb
xor
scas
dec
pop
lods
jmp
call
movsb
jge
xor
xchg
cltd
or
adc
add
test
push
inc
jns
or
test
jl
push
cmp
and
adc
flds
sbb
je
les
jmp
imul
pop
inc
not
or
inc
push
sbb
pop
mov
xchg
mov
or
cs
push
mov
xchg
outsb
cmp
jmp
arpl
and
aam
cltd
cmp
pop
and
ja
xchg
mov
dec
xor
dec
insl
jmp
mov
xor
cmp
mov
loope
xchg
xor
pop
or
aam
mov
push
js
ret
pop
jae
dec
shll
ds
lret
jae
or
fs
push
and
ja
mov
mov
sti
inc
jne
pop
add
jg
test
jnp
mov
addl
push
mov
inc
cli
pusha
mov
push
stos
stc
xchg
mov
jno
xor
cmp
rep
jge
and
lret
fsubrp
int
push
dec
cmp
inc
mov
pop
jb
into
enter
dec
sub
hlt
pop
cmp
outsb
gs
jge
mov
sub
movsl
mov
movsl
les
xor
adc
mov
push
loopne
insb
shll
and
clc
sahf
add
pop
mov
and
mov
push
rorb
sub
lcall
fbld
xor
xor
mov
push
jnp
adc
insb
imul
sub
fidivrl
jecxz
rcrl
mov
test
pop
cmpb
fsubp
outsb
das
mov
ficompl
cld
cmpsl
xchg
inc
push
pop
inc
rcll
hlt
cmp
dec
lods
aas
pop
aad
push
push
inc
sub
addr16
loop
fmul
mov
adc
int3
int3
lahf
mov
add
push
jb
repz
dec
repnz
call
mov
or
cmpsb
outsb
in
cmpsl
shl
sbb
sub
test
out
fistpll
sub
repnz
lock
bound
ds
mov
das
daa
ret
jae
push
push
cmp
push
hlt
adc
ret
xchg
adc
jecxz
mov
cli
lahf
das
cwtl
mov
jae
call
cmpb
in
cmpsl
dec
sub
into
lcall
fstpl
lret
lods
push
inc
fbld
ja
cltd
and
adc
sub
push
out
fcmovnu
push
aad
cmpsl
in
jb
xor
andl
test
lahf
xchg
bound
ds
movsb
pop
cli
cld
ljmp
sbb
push
sub
dec
leave
jle
jl
sub
out
cwtl
mov
and
mov
nop
adc
mov
out
or
inc
std
ret
jb
call
push
sbb
add
out
mov
lret
outsb
xchg
lcall
mulps
call
pop
nop
outsb
xor
and
push
and
inc
sub
mulb
stc
xor
dec
xor
push
dec
mov
and
pop
sub
jb
cmc
mov
cmc
mov
int3
jbe
sub
aaa
inc
ret
roll
sub
xchg
push
inc
push
popf
int
in
inc
mov
cmp
cmp
ret
in
stos
inc
push
push
or
mov
addl
sub
cwtl
mov
nop
xchg
daa
sbb
dec
xchg
dec
daa
jmp
add
popa
shll
jns
pop
pop
mov
or
mov
add
jnp
aam
lea
cmpsb
mov
mov
adc
and
pop
cmc
out
push
xchg
fnstenv
test
push
adc
push
lahf
push
or
mov
aad
aas
fsubrl
or
cmp
imul
xchg
pop
mov
xchg
and
sbb
or
shl
mov
jl
cwtl
leave
adc
iret
subb
mov
sbb
sbb
mul
insb
lahf
out
sahf
and
add
stos
leave
pop
sbb
xchg
inc
mov
xlat
inc
jg
dec
xor
xchg
stc
fisttps
cmp
and
daa
int
push
mov
adc
inc
cld
mov
mov
mov
xchg
stos
sahf
xor
daa
mov
pop
xchg
jmp
push
inc
test
out
add
mov
out
test
jnp
xchg
cmp
js
xlat
nop
arpl
ljmp
sbb
mov
inc
int
bound
jbe
mov
movl
jne
scas
jnp
test
enter
test
pop
std
pushf
cwtl
imul
or
dec
fildl
bound
pop
out
push
sbb
test
inc
ret
ss
idivb
xor
std
ret
jge
daa
cmpsb
mov
rcr
loopne
or
sub
call
jns
hlt
hlt
jecxz
repz
sbb
dec
fs
push
push
ficoml
fidivrl
add
ss
jg
lcall
jl
shrl
loope
loop
je
or
sti
dec
addr16
popf
or
dec
jne
fisttps
mov
testb
and
dec
neg
movsb
movsl
in
scas
subl
fnstcw
push
pop
int
test
xchg
mov
int3
out
aaa
jecxz
lods
push
test
mov
stos
mov
ds
int3
mov
push
nop
pop
inc
push
mov
mov
inc
push
sub
ljmp
subl
jne
out
pop
mov
cmp
in
ds
mov
bswap
xchg
data16
add
dec
dec
jnp
jb
inc
dec
mov
cmp
shll
xlat
lahf
int
inc
dec
cmovge
cli
lods
ficoms
fs
and
faddp
xchg
xchg
negl
lods
repnz
fiadds
mov
not
std
decb
cmp
rcrb
in
movsb
xchg
dec
scas
sbb
jae
mov
mov
je
lea
lcall
out
pop
loopne
daa
mov
dec
sub
sub
pop
insl
aaa
cmp
clc
push
mov
jno
out
mulb
jno
xchg
sbb
push
mov
ret
mov
jle
dec
push
jle
cmp
outsb
ljmp
inc
xchg
xchg
xor
pop
cmp
insl
adcl
and
adc
xchg
dec
jge
mov
jb
mov
in
int
pop
xor
adc
stos
lahf
cmc
mov
lea
mov
or
out
adc
or
push
mov
aad
fiadds
push
pop
xchg
mov
xor
push
jg
into
add
mov
movaps
inc
sbb
rclb
push
xchg
cmp
mov
jns
mov
jp
xchg
mov
push
je
adc
dec
cmp
lret
dec
aad
out
ret
add
sahf
adcb
adc
inc
adc
inc
cltd
hlt
pusha
sarl
xor
mov
push
push
mov
subb
xchg
mov
js
out
loop
popf
cmpsb
mov
jns
sbb
cmp
fwait
test
mov
sub
mov
jne
adc
cmp
push
cmp
inc
jp
pop
sbb
sbb
pop
das
xchg
daa
imul
add
or
movsb
push
adc
jbe
movsb
loop
ret
test
adc
pop
pushf
add
pop
into
je
addr16
in
fsubrs
add
lret
fldcw
xchg
jle
cld
hlt
mov
dec
inc
xlat
fnstcw
test
clc
cmp
shl
xor
or
lds
cltd
mov
fisubs
mov
adc
das
out
dec
xor
jecxz
and
sbb
loop
xchg
stos
out
or
push
insb
das
out
in
pop
loope
jmp
and
arpl
xchg
fistpll
push
xchg
dec
cmc
cmp
xchg
daa
mov
push
mov
mov
xor
sbb
or
mov
nop
scas
xchg
icebp
and
loop
loope
sbb
jge
pop
xchg
pop
push
into
mov
pushl
sbb
xor
push
mov
in
or
fsubs
stc
pop
add
push
fcomps
les
inc
mov
sbb
push
jns
jne
andl
and
push
mov
sub
jecxz
mov
dec
rcrl
inc
fdivl
jbe
add
jp
push
adc
bound
stos
out
repz
ret
in
inc
mov
aam
ret
daa
pop
cmpsb
out
push
hlt
test
jns
xchg
or
dec
shrb
mov
push
lret
idivl
hlt
ret
subb
jge
fdivr
stc
icebp
mov
mov
jnp
xchg
icebp
xor
mov
das
out
mov
mov
lcall
sub
mov
sti
inc
push
pop
test
cmp
cmp
subb
div
add
jg
xchg
jmp
das
cmc
les
dec
or
jno
cltd
push
sbb
mov
mov
iret
adcb
scas
lea
push
jge
mov
push
loope
and
mov
push
lods
loop
xorl
or
clc
nop
jae
scas
daa
push
int
inc
repz
js
pop
cli
pop
xchg
fdivr
aaa
scas
sbb
loop
movsb
js
out
cwtl
inc
int
pop
jg
mov
inc
add
xchg
ss
pop
fisubrl
or
sbb
std
xor
pop
fmuls
pop
inc
std
or
hlt
movsb
push
call
test
or
adc
sbb
adc
movb
arpl
jge
push
test
das
lock
and
pop
pop
mov
mov
inc
repnz
mov
jno
mov
cmc
loop
sar
mov
cmpsl
pop
push
push
notb
es
sti
xlat
iret
rcrb
dec
dec
push
insl
push
or
popf
cmp
xchg
push
cli
inc
inc
cmpsb
push
stos
cmp
in
sbb
mov
sub
cld
fcomi
enter
pop
jl
or
int3
mov
and
fs
clc
adc
xchg
sub
mov
cmpsl
addb
aaa
push
adc
inc
jp
xchg
lcall
frstor
and
dec
xchg
mov
stos
sub
inc
nop
mov
cltd
lcall
jb
andl
fimuls
loopne
cmpsb
mov
xchg
rclb
or
xor
adc
xorl
lcall
movsl
push
inc
data16
daa
jg
jge
mov
lea
jecxz
cmp
xchg
pop
shll
pop
dec
dec
inc
daa
sbb
repnz
popf
xchg
shrb
push
mov
dec
mov
sub
stc
add
inc
loope
pop
and
fwait
mov
ret
cmpb
or
mov
cmp
clc
jp
sbb
stos
xor
pop
xchg
cmpsl
add
push
nop
jb
cli
mov
mov
xor
outsl
lods
lds
test
inc
push
mov
mov
cmova
leave
jle
and
push
lret
dec
mov
daa
mov
das
lcall
sbb
out
gs
mov
mov
mov
dec
aaa
test
fisttps
mov
in
cli
sub
push
push
or
fsqrt
jne
jo
arpl
enter
int
sahf
add
mov
xor
outsb
cmp
push
inc
cs
dec
imul
adc
into
mov
test
mov
repnz
pop
mov
lret
xchg
mov
insl
shlb
mov
xor
outsb
scas
cmp
inc
mov
mov
xchg
dec
add
sbb
ffree
xchg
ja
adc
ds
ret
lds
cmp
and
cmc
mov
or
sbb
insl
int
fwait
xor
xor
orl
adc
sbb
and
add
mov
and
std
lods
in
sub
sub
into
pushf
cmp
cld
dec
dec
repnz
scas
cmc
push
les
jmp
loope
inc
dec
stos
negl
pop
mov
scas
pop
fcoml
rol
lcall
jge
scas
in
jp
mov
jbe
inc
and
leave
int
pop
pop
shrl
mov
jle
dec
lock
xchg
ret
inc
loope
clc
mov
shl
mov
mov
pop
pop
daa
and
or
lahf
daa
stc
mov
cmp
add
jbe
lret
cli
push
enter
or
dec
xor
jno
and
outsb
adc
aas
shll
dec
movsl
lret
mov
addl
xchg
dec
popf
add
inc
jcxz
lahf
sbb
mov
and
or
out
aam
fisubs
enter
or
lret
inc
sub
pop
int3
adc
jmp
inc
mov
addl
push
inc
sbb
popf
fs
lcall
pop
insl
cli
mov
aaa
loope
mov
loope
jne
jb
jno
xor
lret
xchg
pop
sub
nop
leave
int3
push
ds
push
dec
xor
xlat
cmp
in
pop
es
loope
sbb
sbb
xchg
adc
mov
dec
data16
rolb
repnz
int
shrl
ljmp
lea
sbb
xor
dec
inc
fidivs
lds
or
loopne
sub
sbbb
mov
xchg
popa
add
call
sub
xchg
cmp
mov
jecxz
addr16
add
xchg
test
fwait
xor
rcrb
and
or
movsl
sub
mov
inc
mov
mov
cmpsl
mov
shll
nopl
fidivl
int
xchg
sahf
mov
mov
xchg
push
bound
inc
les
sbb
fwait
jnp
lods
in
ss
xor
sub
addl
test
mov
and
xor
or
aam
sbb
popa
int
imul
ficoms
bound
mov
or
and
ja
jo
bound
mov
push
scas
in
aaa
adc
xchg
decb
js
mov
mov
lea
scas
inc
popa
mov
add
xchg
sbb
je
dec
out
test
aas
xchg
icebp
dec
adc
insb
jae
dec
adc
mov
adc
and
andb
mov
add
push
cmp
and
cld
loop
movsl
lret
test
mov
lds
adc
push
mov
pop
mov
jmp
dec
xlat
jne
or
push
and
pop
cmp
xor
fnstsw
dec
jno
fnsave
sahf
lret
mov
es
loope
cs
push
mov
aas
add
iret
pop
daa
lock
or
outsl
xor
pop
iret
dec
psubsb
movsl
jmp
jle
xchg
and
push
and
int
xchg
mov
xchg
adc
test
aas
jmp
loope
push
rorl
test
fstpl
sbb
push
xchg
mov
fwait
adc
mov
cltd
mov
mov
pop
outsl
jae
add
jmp
or
dec
mov
adc
xor
jae
inc
xor
mov
lods
loop
pop
xchg
mov
push
xchg
push
inc
push
push
adc
aad
adc
sbb
mov
xchg
or
sbb
movsb
jns
mov
decb
jl
and
cmp
inc
sub
jge
int
fcom
inc
adc
jg
push
ljmp
sub
xorb
add
lahf
jae
push
pop
movsl
and
mov
lods
sbb
mov
fs
aad
arpl
mov
lret
sbb
push
cs
xchg
out
iret
rolb
jp
adc
inc
inc
dec
sbb
add
ret
push
mov
mov
dec
jmp
xlat
dec
in
je
fsubs
sbb
in
mov
inc
xchg
daa
fwait
lret
daa
in
aam
inc
xchg
mov
jmp
xchg
popf
or
inc
test
mov
jge
decb
cwtl
sbb
aad
scas
push
fsubr
adc
in
repnz
push
shll
lods
jle
rorb
mov
xor
sbb
push
fmuls
mov
repz
data16
mov
xchg
stc
lock
or
jbe
hlt
emms
jg
jl
popa
and
mov
mov
and
out
pop
ds
xchg
adc
push
test
adc
icebp
or
xor
std
xor
fldcw
popl
lret
lahf
cmp
jge
out
pop
add
sarb
xchg
push
lock
imul
cmp
pop
test
test
ja
pop
sbb
ja
push
pop
mov
inc
dec
xchg
leave
test
fwait
clc
cmp
mov
sbb
and
dec
mov
push
or
xchg
xor
mov
bound
push
out
insb
movsl
fidivrs
lret
mov
inc
jp
push
or
negb
loop
xchg
pushf
call
fcmovnbe
xchg
cmp
rcl
pop
ret
add
mov
pop
jno
mov
cmpsl
push
test
ret
pop
icebp
dec
insb
xor
pop
jno
testb
mov
pop
jb
cmp
jns
push
add
adc
push
push
icebp
call
scas
pop
jecxz
scas
push
fstps
or
sbb
lods
xchg
ret
push
outsl
xchg
ja
mov
pushl
xchg
addr16
dec
mov
in
push
inc
call
add
std
call
movsl
lds
mov
dec
loope
std
data16
jle
push
xchg
jl
out
rorl
subl
push
mov
push
imul
cwtl
push
push
shr
jo
cmpsb
push
mov
and
push
int3
hlt
aad
lret
iret
adc
outsb
dec
jmp
js
xchg
sbbl
and
mov
mov
cs
mov
fs
es
cwtl
test
pop
sub
iret
jne
sti
sti
push
test
inc
push
xchg
xchg
pop
jo
fsqrt
in
imul
sub
and
sti
adc
xor
outsl
sbb
push
js
dec
lock
xor
aad
outsb
fimull
lret
and
int3
in
xor
ret
push
daa
mov
lock
xchg
adc
imulb
inc
call
push
cwtl
or
int
dec
sub
jb
sbb
xchg
aad
and
int3
add
popf
xor
jp
sbb
lea
test
mov
fs
push
adc
add
imul
sbb
pop
add
aas
sbb
xchg
scas
testb
push
repnz
sarl
in
adc
push
mov
in
cld
or
test
mov
arpl
leave
nop
push
push
lret
bound
jno
jl
jne
divb
and
das
lods
mov
mov
cmc
pop
xchg
lcall
xor
xor
ljmp
pop
das
sub
int
bndldx
std
iret
inc
push
adc
cmc
jbe
idivl
loope
cmp
mov
test
hlt
sarb
xor
adc
dec
and
push
sub
mov
stos
pop
adc
cmp
outsl
jns
imul
sbb
jnp
mov
movsl
mov
les
lar
xchg
sub
pop
mov
add
shl
adc
adc
mull
aad
in
stos
cmp
jae
dec
cmp
pop
mov
xchg
aas
movsl
push
imul
or
cmp
push
movb
lret
aaa
scas
data16
dec
push
aas
add
cmp
test
int3
dec
cld
xor
dec
push
jb
mov
xor
clc
outsl
mov
imul
lods
rorl
cs
and
addr16
pop
xchg
sub
icebp
xchg
imul
fcmovnu
jecxz
in
test
clc
aas
iret
jl
adc
add
repz
adc
jb
add
jbe
out
mov
movsb
shrl
inc
add
push
mov
lcall
arpl
mov
pusha
mov
sub
lds
lcall
jmp
push
jo
pop
addr16
notl
jbe
pop
dec
add
sub
xchg
jne
mov
sbb
call
or
shr
je
dec
mov
mov
loopne
scas
mov
sbb
mov
sbb
and
les
stos
aaa
fmul
loopne
ss
call
pop
icebp
arpl
mov
int
cmpb
icebp
push
pop
sbb
pop
sub
sub
aad
push
mov
mov
test
or
jg
adc
out
js
push
mov
jb
mov
xchg
clc
mov
es
cmpsl
push
mov
fbld
inc
hlt
stc
push
js
jns
out
dec
pop
bound
xchg
fisttps
sbb
xchg
inc
mov
sub
xor
nop
ljmp
mov
fsubl
jns
sbb
shlb
outsb
in
jle
pop
jne
xor
stos
arpl
cmpsb
std
dec
jae
aad
mov
xchg
movsb
mov
push
insb
out
mov
scas
xchg
sti
jg
mov
mov
pop
rep
bound
test
out
xchg
adc
cmp
mov
jmp
incb
fwait
popf
mov
out
xchg
jno
jnp
loop
mov
lods
adc
inc
ror
add
and
call
sbb
xor
cwtl
xchg
jecxz
or
ret
addb
shll
pop
push
jge
gs
add
aaa
cs
cmp
fistpl
cmp
fmul
push
loope
scas
hlt
add
aaa
or
push
mov
cmp
addr16
jp
sahf
inc
fdivrl
stc
sbb
dec
cltd
jns
test
xchg
stc
daa
and
idivb
sub
pop
subb
cmpl
ja
inc
inc
gs
lods
adc
fldcw
mov
add
inc
adc
jle
adc
xchg
push
cmp
and
jecxz
jg
adc
add
mov
xchg
data16
mov
add
jne
pop
adc
xchg
pushf
jbe
test
xor
inc
dec
push
int3
xor
adc
pop
mov
in
jbe
sbb
dec
dec
and
push
push
leave
pop
divb
addr16
cmp
stc
scas
dec
mov
sub
xor
jae
stos
lea
add
xchg
rol
xlat
adc
mov
ret
iret
push
iret
add
jo
andb
es
fstps
mov
roll
mov
xchg
mov
cltd
divl
add
jb
rcrl
cmp
inc
scas
mov
add
pop
daa
push
lds
push
mov
imul
bound
adc
aaa
mov
push
dec
mov
adc
arpl
mov
xor
xchg
stos
jl
ja
xor
data16
movsl
add
mov
into
jl
jb
jne
dec
stc
dec
lahf
push
xchg
mov
push
je
fs
add
push
insb
fwait
inc
lock
out
leave
jmp
ret
fcompl
sbb
insl
cmpsl
in
jbe
mov
jg
int3
call
mov
and
cld
mov
xor
insb
movsl
pop
jne
dec
sub
test
inc
movsb
and
cli
fidivrs
adc
inc
roll
xor
dec
shrl
add
and
sub
cmc
xchg
js
xchg
jmp
loopne
push
lret
add
mov
ret
xor
fidivl
int
ret
inc
mov
mov
fistl
ljmp
push
in
push
pop
mov
aam
out
mov
repz
inc
or
add
adc
lcall
sbb
dec
adc
push
icebp
add
mov
mov
mov
push
insl
xlat
aad
jge
sub
cli
lods
xchg
xchg
cmpsb
cmp
sahf
mov
cmp
mov
clc
push
popf
jg
push
ss
jnp
cmp
in
jmp
xchg
push
sub
mov
xor
adc
daa
ficoms
sub
int3
cmp
das
lcall
mov
mov
daa
clc
adc
fidivs
mov
xor
push
outsl
sahf
fisubrs
nop
mov
orl
dec
bound
adc
outsb
xchg
movsb
cmp
add
sbb
push
push
mov
mov
nopl
out
std
push
adc
lret
sbb
sbb
daa
jmp
xchg
sub
inc
je
iret
neg
lds
cmp
ret
cmpsb
push
jl
and
jnp
jno
xchg
mov
orl
sub
shrl
push
inc
mov
mov
popa
push
test
mov
addl
pop
and
sub
adc
inc
xor
cmp
ds
mov
nop
pusha
push
push
pushw
xor
cwtl
jb
lret
xchg
push
leave
xor
cmc
and
pop
movsb
xor
jnp
das
mov
jne
inc
xor
dec
inc
pop
sub
fs
out
imul
xchg
loopne
jg,pn
push
mov
cmpsb
and
sbb
add
mov
sbbb
xchg
push
addr16
sub
fwait
out
dec
mov
jecxz
push
mov
push
fisttpl
lds
inc
xchg
xorl
cmc
xor
add
iret
test
jno
and
or
dec
inc
adc
pop
fcoml
and
adc
add
jno
aam
or
in
xchg
pop
jns
fisttps
in
cmp
cmp
stc
outsl
into
negl
fistl
cmc
data16
je
mov
mov
inc
jne
jae
in
jp
cmp
clc
cltd
fnstenv
mov
or
sub
lahf
mov
sbb
pushf
lds
mov
clc
loopne
xor
outsl
mov
movsl
cmovl
xchg
jns
jo
loope
cmp
xor
xchg
or
jle
mov
fcomps
mov
or
dec
leave
xor
pop
addr16
sub
cli
int
pop
mov
fs
xchg
or
stos
mov
loopne
or
sub
outsl
sub
dec
stc
pop
mov
fstl
push
aam
lahf
rclb
dec
fcomps
test
fadds
inc
and
adc
cmp
jecxz
popl
int
stc
test
notl
inc
push
pop
jmp
xchg
cmpsl
mov
fildll
mov
aas
adc
push
int
xchg
enter
shl
adc
popf
sbb
rcrl
push
cmpsb
adc
faddl
shll
jp
psubusw
nop
mov
push
mov
fwait
pop
mov
jecxz
dec
xor
and
cmp
test
in
and
mov
call
call
in
jne
pop
rcll
gs
push
xor
jmp
xchg
dec
inc
cmp
imul
addr16
aad
aam
push
mov
adc
dec
xor
adc
mov
call
shrl
mov
inc
mov
mov
mov
jle
incl
shrb
jl
das
jl
sub
nop
aas
cs
push
daa
jb
mov
xchg
sbb
jmp
lods
enter
xor
xor
inc
outsl
es
and
adc
mov
jnp
jb
pop
icebp
fcmove
out
or
icebp
sahf
xchg
jo
mov
jmp
pmullw
leave
add
insb
xchg
and
aad
mov
and
xor
aas
and
scas
inc
push
stos
cmp
add
out
stos
outsl
pop
fisubrs
inc
lods
add
and
inc
and
imul
adc
cmpsl
inc
cwtl
aad
icebp
jmp
jle
aaa
sub
and
sarb
mov
mov
add
sbb
ja
pop
cmp
mov
xchg
rcr
lods
adc
mov
pop
inc
add
sub
lods
pusha
push
mov
arpl
xchg
es
xchg
pop
xchg
push
push
out
push
cmp
mov
xor
int3
pop
loopne
push
jae
out
cmpsb
add
or
test
scas
pop
jne
mov
jp
and
mov
mov
cmp
out
add
fwait
inc
je
xor
xchg
inc
loope
cmpsl
dec
mov
mov
loope
jne
mov
or
mov
add
repz
sti
les
inc
insl
mov
cmp
jnp
mov
sub
sbb
xchg
lret
andl
or
fstps
push
pop
addr16
sbb
sub
sub
sbb
xchg
mov
jno
push
xchg
nop
lods
dec
enter
sub
mov
mov
mov
popf
cmc
clc
std
loope
stos
std
insl
fwait
xor
mov
pop
shll
and
addr16
push
push
fwait
andl
aam
xor
and
seto
mov
sub
ds
pushf
dec
xor
or
stc
xchg
pop
push
xor
or
mov
mov
mov
in
mov
push
aam
lret
or
xor
and
push
sahf
mov
ds
lds
adc
aam
mov
scas
dec
gs
in
aam
das
cmp
xor
clc
push
mov
xor
mov
and
mov
xchg
pop
push
aam
inc
or
push
cmp
cmp
jne
movsl
and
lods
fwait
lods
xor
xchg
xor
and
push
mov
sahf
jnp
popa
stos
lea
mov
or
xchg
out
or
inc
dec
repnz
inc
and
imul
repnz
insl
push
mov
insb
mov
aad
mov
out
rcrl
inc
xor
mov
bound
pushf
cmp
cmc
xchg
xor
jo
mov
cld
call
into
in
out
clc
leave
call
insb
sti
pop
movl
add
and
adc
test
push
add
popa
jbe
fsqrt
dec
mov
mov
mov
sbbb
dec
pop
cmp
cmp
mov
sti
sar
std
jecxz,pt
mov
push
cs
cmpsb
das
xor
es
inc
inc
xor
sub
lret
mov
mov
ss
sub
in
push
and
mov
inc
push
mov
jle
pop
pop
or
or
rcrl
rcrl
and
jmp
sbb
push
xchg
adc
ja
mov
cltd
push
je
lods
or
movsl
sbb
push
jns
orps
imul
lret
in
mov
cmp
pop
in
fistpl
cli
sub
je
mov
sub
adc
jne
gs
fwait
dec
in
jp
cwtl
lcall
xor
add
mov
mov
scas
push
mov
mov
add
xor
xchg
ud0
nop
ss
push
test
push
push
sbb
negb
xchg
mov
jg
scas
mov
inc
adc
call
pop
insl
stc
pop
dec
cmpsb
sub
fldl
adc
loope
sbb
dec
xchg
sbb
loopne
push
pop
adc
pop
iret
jne
xlat
mov
and
call
call
int3
mov
cltd
mov
cltd
test
out
aaa
popa
adc
cmpb
pop
cmpsl
cli
jnp
add
shr
cmp
add
push
xchg
fildll
in
jne
lock
xchg
xor
inc
js
xchg
pop
cltd
lahf
xchg
daa
mov
push
orl
mov
mov
int
cmp
stos
pop
mov
inc
jp
add
adc
fcomip
addr16
out
jl
pop
inc
xor
mov
and
insb
sbb
cmc
adc
xchg
and
test
mov
and
shr
int3
cmp
push
xor
xor
iret
das
iret
xchg
mov
mov
outsl
pop
loop
insl
xchg
fdivr
not
int3
adc
repz
pusha
rcr
das
jne
cmp
lock
mov
jmp
push
or
stos
fbld
sti
pop
inc
test
push
or
mov
lahf
dec
imull
fistpl
cs
xchg
mov
cmp
pop
xchg
xor
mov
jl
lahf
mov
mov
enter
into
mov
mov
popa
mov
gs
in
lds
sub
pop
push
pusha
xor
stos
repnz
iret
sbb
out
xor
popf
inc
mov
popa
dec
jo
and
xlat
inc
mov
repnz
dec
mov
stos
in
xor
dec
shlb
mov
sbb
adc
push
cmp
jmp
cmpsw
push
pop
andb
loop
xchg
lret
int3
jge
addr16
lret
dec
pop
mov
inc
cmpsl
jo
xor
shlb
or
or
inc
enter
or
mov
and
xor
inc
aas
je
int3
fwait
xor
xchg
pop
push
das
push
call
rcrl
mov
idiv
test
imul
inc
mov
shrb
sub
js
adc
stc
adc
mov
iret
push
cltd
pop
mov
xchg
sub
fdivs
sbb
in
cld
mov
sbb
sti
idivl
rclb
xchg
mov
imul
loopne
in
xchg
es
cs
push
das
out
je
xor
rcrl
in
jg
xchg
lods
or
mov
push
xor
pop
out
sub
inc
icebp
mov
mov
popa
sahf
orl
pop
inc
fnsave
push
popf
sub
scas
lds
std
jno
ficomps
push
aam
cmp
pop
mov
fcmovnb
jmp
pop
ds
cmp
call
mov
dec
or
or
mov
inc
lret
pop
push
into
sti
sbb
add
jg
mov
add
out
push
cmpsb
adc
pop
push
jo
adcb
insl
adc
cltd
xor
sub
icebp
dec
or
fcompl
jno
dec
jae
push
cmpsb
xchg
stos
sbb
lahf
xchg
adc
test
sbb
mov
scas
pushf
sti
bound
mov
leave
dec
inc
lods
cmp
cmp
dec
ja
rcr
icebp
into
inc
imul
nop
sti
xor
and
inc
fst
fs
sbb
test
imul
nop
cmp
sub
fs
xor
call
add
inc
adc
pop
rcrl
cmp
mov
scas
pop
outsl
ja
xchg
sub
or
or
test
loope
fwait
pop
shr
and
pop
movsb
push
xchg
ss
push
or
push
push
das
outsl
aaa
mov
fsubrs
cmc
sub
sub
ret
leave
in
xchg
xchg
xor
nop
pop
int3
sti
push
dec
mov
rcrb
adc
mov
jl
cltd
or
jb
out
jno
sub
pushf
mov
sub
mov
cwtl
sbb
popf
sti
ljmp
adc
mov
xchg
push
or
aad
xchg
xor
xor
cmp
stos
cmp
insl
jne
movsl
add
aad
dec
dec
fwait
popa
jle
add
dec
out
mov
jae
mov
nop
dec
cli
nop
scas
scas
xor
les
cwtl
mov
inc
movsb
aam
mov
mov
mov
lock
mov
dec
test
mov
jns
pop
xchg
and
rcr
fidivrl
pop
inc
cld
push
and
lahf
fdivs
xchg
pop
aas
rsm
icebp
or
pop
mov
xchg
add
dec
mov
mov
add
jae
mov
fsubl
pop
neg
movsb
ja
jne
xor
push
or
mov
and
popf
adcb
andl
pop
sbb
and
jnp
xor
sbb
scas
scas
and
test
dec
mov
sbb
jb
icebp
fsts
fstl
into
mov
sahf
sub
and
in
fwait
inc
ret
or
enter
out
sbbb
insb
cmp
mov
insl
sub
daa
adc
push
popf
lock
push
cld
popa
cmpsb
xchg
jmp
and
sti
push
push
push
popa
in
sbb
fnstcw
aam
pop
add
mov
jecxz
xchg
mov
loopne
bound
ja
xchg
ljmp
xor
push
cmpsl
pop
jp
out
packsswb
test
and
xor
xor
push
push
lea
lcall
jnp
sbb
cmp
rcrl
cli
mov
xor
inc
cld
xchg
shrl
dec
pop
stc
in
cmpsb
xchg
fildll
pop
pop
rclb
jo
int3
das
sub
fdiv
cs
leave
jp
das
ja
dec
out
mov
fsubrl
and
dec
divb
jl
sub
fs
xchg
cmpl
fisttps
mov
jle
jno
dec
add
xchg
push
xor
test
pusha
xlat
add
jecxz
inc
jmp
inc
fistpll
xor
test
lds
xchg
movsl
rcll
lock
rorl
or
xchg
ss
mov
test
and
fmull
mov
jmp
adc
jp
das
sahf
xchg
dec
shl
xor
jmp
or
xchg
mov
mov
pop
rcl
sub
xchg
dec
fists
jmp
mov
imul
enter
std
movaps
scas
sbb
js
xor
jge
jb
jmp
test
mov
pmaddwd
inc
mov
sbb
dec
mov
inc
adc
sbb
mov
test
jbe
outsb
cld
aam
mov
push
mov
repz
std
aam
jno
scas
inc
dec
mov
mov
lret
pushf
jecxz
shr
in
jp
lods
push
mov
adc
in
or
push
into
int
mov
int
ja
loop
popl
xor
cmp
aaa
pop
mov
add
in
dec
xchg
jns
jp
outsb
xchg
add
test
and
adc
je
pop
xchg
pop
dec
push
shr
adc
xor
pop
dec
cltd
and
xor
cmpl
cmp
les
stos
gs
mov
mov
cmp
repz
lods
mov
arpl
aad
xor
negl
clc
and
and
jl
xchg
je
fsubrs
fisubl
inc
push
negl
es
dec
fsubl
xor
fcoml
jge
mov
fcomps
sbb
and
aad
fidivrl
and
int
scas
stc
fildl
sahf
int
inc
jo
sub
and
and
call
pop
mov
lods
or
or
push
mov
cmp
test
jb
aam
jne
lea
leave
jo
push
or
and
pop
lret
xor
in
jmp
mov
push
insb
xor
xchg
in
je
sub
pop
mov
mov
push
jmp
cmc
xor
or
jp,pn
bound
cmp
pop
stc
jae
mov
stos
xor
mov
shrb
cmp
cmc
aad
xor
mov
cmp
push
sbbb
adc
nop
push
xchg
cwtl
lods
mov
pop
lcall
cmp
ljmp
insb
xor
add
push
sbb
xor
gs
adc
cltd
fucomp
pop
lods
mov
cmc
jle
loop
push
add
mov
cmp
sbb
mov
or
jno
cltd
and
rorb
jl
repz
push
inc
fdivs
xor
and
sahf
in
pop
push
pop
push
faddp
outsb
repnz
les
sti
test
xchg
sbb
sub
cmp
scas
popf
nop
int
rorb
shrl
cli
jle
data16
mov
adc
int3
scas
cmp
xchg
sub
sbb
cmp
dec
xor
add
mov
int
jbe
sub
xchg
jg
clc
add
lret
fldcw
pusha
inc
add
sub
ljmp
sbb
das
scas
cmc
xchg
adc
sbb
repnz
adc
iret
nop
ljmp
test
mov
jmp
fldt
in
stos
push
les
or
sbb
fldcw
push
push
sub
add
push
mov
cmp
fnstenv
out
int
aas
xor
stos
stos
sbb
inc
mov
adc
aam
mov
js
jbe
inc
jmp
test
addr16
jecxz
mov
adc
xchg
out
mov
sbb
flds
xchg
pop
and
fsts
dec
sub
iret
lret
ffreep
lea
add
inc
fcomps
fs
push
or
cmovae
lock
lea
pop
aam
cltd
sub
mov
and
cli
xchg
cmp
push
inc
dec
rcrl
mov
pop
push
in
jp
cmpsb
jb
shrb
fisubrl
xor
inc
out
in
cltd
sub
mov
test
pop
jo
push
ja
push
ljmp
sahf
stc
lret
mov
cmc
sbb
mov
das
imul
sar
mov
lahf
sub
shrb
addb
fwait
clc
pop
aas
into
clc
or
outsb
int3
ds
imulb
arpl
inc
sub
pop
fisubs
pop
popa
cltd
push
push
repz
pop
sahf
jns
mov
add
sahf
push
push
call
sbb
push
ret
out
xchg
pop
add
negb
cmp
les
cld
stos
int
push
mov
in
mov
test
mov
push
mov
fisttpll
fldt
sub
mov
in
arpl
inc
sub
or
movsb
call
sub
inc
mov
lret
adc
mov
mov
push
xchg
xor
lock
and
les
push
add
xor
aas
mov
xor
pop
pusha
push
lea
stos
adc
fnstcw
or
cmp
mov
loopne
das
ret
and
aaa
shll
cmpsb
push
sbb
repnz
xor
outsb
jl
pop
std
dec
sti
insb
popf
or
cwtl
push
adc
fcoml
sbb
roll
jecxz
es
fldpi
or
int
mov
int3
mov
dec
adc
sub
adc
lret
shrb
mov
pop
in
sbb
lock
outsb
les
in
mov
mov
ljmp
adc
pop
add
jecxz
mov
sub
pop
sub
je
sbb
clc
sub
jbe
xchg
jecxz
insb
test
xor
jmp
sub
sbb
add
mov
add
aaa
mov
jecxz
xchg
xor
enter
sub
mov
lret
xlat
adc
xchg
outsb
add
cmpsb
lods
sbb
pop
les
and
sti
and
testb
imul
and
clc
pop
mov
xor
push
ret
je
push
ret
aas
cld
enter
pop
mov
pop
ja
cli
cltd
cmp
and
push
fnstcw
pop
popf
sbb
adc
push
pusha
cmp
ljmp
movsl
xchg
pop
out
cmp
aam
in
aad
or
sti
xchg
frndint
insl
pop
popa
imul
out
in
and
ret
pop
lret
pop
adc
jns
call
aad
fildl
jecxz
push
jae
adc
filds
daa
aam
addr16
ds
mov
adcl
movsl
mov
and
scas
mov
mov
jo
cmp
jbe
sub
cs
mov
mov
inc
pop
scas
cltd
pop
test
repz
sub
cmc
js
in
andl
xorl
mov
fcomps
dec
test
pop
gs
cmp
fistl
xchg
mov
sahf
in
loop
in
and
dec
jo
mov
cli
mov
ja
aaa
mov
xor
sbb
push
test
repz
lods
adc
sub
out
mov
sbb
xchg
inc
scas
cmpsl
cmp
xchg
and
push
sbb
mov
cmp
gs
pop
sarb
movsb
push
push
les
pop
jbe
insb
lds
clc
in
jmp
dec
mov
and
daa
into
mov
mov
pop
cli
pop
mov
mov
jecxz
dec
sub
scas
jle
pop
xchg
push
cmp
inc
sub
fwait
push
push
dec
stc
jnp
mov
push
mov
sbb
sub
into
scas
mov
or
iret
int
pop
inc
and
cmp
or
inc
pop
or
push
shrb
and
ja
nop
sub
aad
push
xchg
in
cmpsl
scas
add
adc
out
pop
cmpsb
pushw
push
aaa
cmp
inc
or
xchg
andl
push
scas
outsl
cpuid
insl
push
jns
adc
fcom
pop
cmpsb
mov
jae
mov
gs
push
es
pop
inc
mov
and
xchg
in
mov
andb
enter
add
xchg
cmp
loopne
clc
adc
mov
mov
ud2
lods
or
sub
push
cmp
aam
inc
mov
dec
lods
jg
push
push
out
test
add
stos
or
add
push
nop
sbb
dec
cmp
and
daa
cmpsl
lds
pushf
cmpsb
sbb
daa
sbb
cmpsb
add
dec
into
hlt
mov
add
xchg
jp
js
mov
adc
jne
inc
or
call
test
ljmp
icebp
inc
xlat
pop
mov
inc
hlt
cmp
push
lcall
jb
test
adc
jge
test
add
jns
jge
pop
lds
or
xchg
hlt
sbb
mov
adc
insl
mov
xor
sub
adc
inc
dec
fnstenv
jp
or
adc
or
jno
mov
lock
xchg
sub
popf
mov
addb
loop
idiv
mov
cmpsb
rorl
and
rorb
fidivrs
mov
daa
push
cmpsl
dec
dec
mov
and
cmpsl
dec
cmp
and
aad
pop
jle
cli
out
cmp
mov
shrb
cmpsl
or
jae
xor
mov
mov
and
jle
pop
testb
jmp
pop
rcll
pop
pop
mov
mov
sbb
jl
int
mov
push
sub
pop
jae
mov
adcl
inc
xchg
pop
xchg
inc
dec
cmpsb
nop
iret
xchg
mov
mov
jp
shr
aad
xor
jmp
pop
cs
mov
ret
bound
cmp
xor
sub
movsl
sbb
xchg
push
add
inc
or
daa
stc
dec
adc
pop
popa
mov
sub
rclb
leave
adc
xchg
call
dec
ficomps
add
or
test
jecxz
fwait
mov
mov
out
test
sbb
in
std
popa
dec
ficoms
pop
adc
fwait
xor
lcall
dec
lret
xor
pop
sti
adc
in
cmp
jns
or
or
mov
xor
jg
sbb
fbstp
pop
sub
cmp
pop
cmpsb
std
test
inc
push
pop
outsl
notb
jl
cmp
pusha
mov
add
mov
xlat
jg
add
xchg
repz
arpl
in
push
sub
xor
add
int
add
cli
push
lahf
or
sbb
adc
mov
inc
jge
popf
jo
and
mov
imul
outsl
jmp
aam
or
sub
mov
out
pop
stc
lret
imul
add
fdivrs
pop
push
pop
sub
push
cmp
sbb
mov
sbb
and
cmp
push
push
dec
inc
stos
stc
sbb
test
inc
out
inc
in
dec
test
ja
cmpsb
jle
and
lods
sbb
jnp
popa
push
xchg
jb
pop
jne
adc
pop
ss
pop
inc
dec
lods
jp
jne
push
xor
cltd
fnstcw
daa
jmp
inc
into
ss
sbb
sub
xor
add
and
dec
sbb
inc
loope
cs
ret
scas
cltd
sbb
and
mov
pop
movsl
xor
or
call
stc
mov
fisttpll
jecxz
aad
cltd
bound
mov
dec
test
cmp
mov
out
shll
push
dec
cmp
xor
xlat
cmc
push
push
cmovnp
cmp
addb
gs
ljmp
sbb
mov
int
xor
pop
ret
ss
jne
mov
mov
fstps
mov
adc
pop
mov
stc
add
inc
dec
sub
fdivp
dec
pop
fcoms
aad
loope
pop
push
inc
jno
pop
test
mov
mov
orl
jnp
clc
test
mov
call
out
aaa
or
cltd
jno
jo,pn
daa
or
xchg
js
test
push
movsb
inc
sub
jns
imul
mov
jle
test
sahf
add
mov
in
inc
in
sub
xchg
aaa
fs
testb
jns
testl
adc
lret
jecxz
movsb
pop
ds
xchg
std
pop
nop
pop
das
dec
or
and
cmpsl
mov
jb
dec
add
mov
cmp
out
and
mov
adc
std
in
ds
or
fmuls
into
out
rcll
sbb
dec
push
sub
dec
ds
pop
out
test
lret
in
pop
fs
mov
mov
mov
cli
scas
cli
sbb
les
in
jae
add
dec
out
int
clc
inc
je
inc
fwait
popa
scas
cmp
in
call
mov
in
add
cmp
sub
inc
mov
dec
mov
out
repnz
mov
sub
push
testb
xor
sbb
sahf
leave
int
push
outsb
or
mov
jo
jle
mov
pushf
leave
mov
and
fs
lahf
data16
stos
jl
inc
inc
sbb
loop
call
fiaddl
sub
jbe
das
insb
jne
iret
fildl
outsl
or
sbb
ds
mov
dec
adc
xchg
xor
stc
and
std
mov
repnz
out
pop
mov
pop
shll
mov
mov
jle
in
cmpsl
ja
push
mov
test
lret
mov
dec
sub
cmp
shrl
cltd
or
mov
repz
in
pop
test
inc
lahf
and
sub
dec
jae
outsb
cmpb
movsb
outsb
mov
mulb
cmp
and
jo
xor
or
jmp
push
insb
xor
pushf
jmp
adc
mov
dec
sti
push
and
dec
ds
ja
addl
dec
jge
pop
cmpsb
pop
cs
add
int3
lret
lcall
push
lcall
test
movl
mov
xor
jb
dec
iret
mov
jg
std
mov
js
call
sub
insb
jp
pusha
and
enter
fildll
xor
pop
jae
cltd
pop
out
push
mov
stos
arpl
pop
and
mov
or
cwtl
or
out
mov
add
or
push
mov
in
adc
aam
xor
pop
cmp
lcall
notl
sub
std
push
notb
inc
mov
push
fnstcw
bswap
fadd
jno
stos
push
maskmovq
testl
xor
loopne
or
imul
ss
into
xchg
mov
cld
fstl
pop
aas
int3
loop
push
sahf
fwait
or
dec
mov
xlat
mov
and
loopne
mov
movsb
out
fcmovu
push
insb
xchg
dec
adc
mov
aaa
adc
jg
test
cmp
mov
mov
daa
lcall
out
jns
arpl
fcoml
ja
pop
scas
and
gs
testl
jl
ja
sbb
and
mov
rcll
outsl
mov
inc
push
loop
inc
adc
push
negb
mov
mov
iret
lret
pop
orl
adc
push
adc
sub
sub
mov
xchg
sbb
xchg
les
dec
adc
jo
push
int3
sahf
mov
arpl
jmp
lods
arpl
xchg
jge
xor
jne
sbb
int
sarl
or
xchg
push
mov
lods
pop
lea
xchg
pop
ss
sbb
mov
or
lcall
cmp
add
sbb
clc
sub
inc
mov
xor
mov
add
sti
insl
rcr
xchg
hlt
scas
or
rorw
cmp
or
aaa
sub
jl
ja
sbb
cmpsb
daa
mov
test
rcl
push
jle
cmp
ds
mov
cmpsb
aam
dec
add
sbb
fimuls
outsl
repz
test
mov
in
add
mov
adc
out
shlb
pusha
cld
rcll
hlt
out
lods
aad
aaa
jmp
inc
jp
xchg
fisubrl
dec
scas
fdivs
mov
mov
xor
or
icebp
ret
fsubrp
popf
push
stos
gs
shlb
push
pop
adc
stc
sbb
ljmp
push
sub
pop
and
bound
push
add
mov
cmp
mov
xchg
mov
xchg
add
adc
mov
divl
xchg
pop
movsl
add
push
fs
sbb
in
cmp
jl
adc
sub
pop
int
cltd
push
lcall
imul
mov
test
and
xor
pop
je
ja
adc
pop
jnp
jg
xchg
ret
dec
mov
lret
jne
clc
push
cmpsl
mov
out
and
or
lds
add
jo
and
fidivl
xchg
jg
xchg
out
inc
mov
inc
cmp
int
and
adc
cmpsl
out
sarb
push
call
inc
cltd
cli
jp
cmp
mov
jmp
addr16
insb
sub
and
jmp
rol
cli
or
mov
push
or
gs
mov
outsl
add
pop
rclb
fildll
ss
mov
inc
push
test
inc
jne
mov
scas
mov
flds
fcoml
pop
ret
lods
jns
nop
loop
xor
int
xor
fwait
cmp
sahf
icebp
xchg
mov
xlat
inc
je
fidivrl
test
cs
cmp
adc
xchg
pop
cltd
shll
xor
pop
add
jge
inc
sti
aaa
and
out
push
and
jp
rolb
pop
sbb
mov
push
sub
roll
loopne
xor
movsl
mov
fimull
jb
pushf
in
mov
xchg
lea
sub
mov
sub
inc
out
mov
clc
pop
add
sbb
les
fcompl
or
out
ss
mov
ljmp
mov
xchg
jle
jb
sub
pop
xchg
iret
out
or
xchg
lret
in
xor
cmp
xchg
pop
hlt
fwait
or
fimull
push
hlt
in
push
fsubl
xchg
mov
mov
adc
xor
xchg
fnstsw
push
imul
or
mov
add
pushf
mov
or
add
dec
in
adcb
sbb
add
inc
movsl
xchg
stos
cs
jecxz
xlat
shrl
xor
mov
insl
clc
leave
test
js
movsl
pop
movsb
fistpll
mov
xor
and
ret
jecxz
stc
lods
mov
xchg
enter
cmp
adc
dec
pushf
outsb
and
xlat
stos
pop
xor
lock
stos
cmp
adc
sub
cmp
stc
jmp
pusha
sbb
cmp
cmp
xlat
repnz
les
in
bound
push
jb
jle
add
imull
lods
sbb
fstpt
sbb
add
insb
and
push
test
xor
mov
scas
std
lea
sbb
add
out
stos
pop
ret
lcall
int3
sbb
dec
dec
inc
sbb
and
sbb
out
movsb
add
cmp
pop
in
leave
dec
fnstsw
xchg
lret
push
mov
lods
mov
mull
stos
add
push
aam
jge
es
rcrl
xchg
pop
mov
push
mov
add
sub
cmp
add
adc
lods
imul
cmp
mov
xchg
or
jg
insl
lahf
xor
adc
push
sub
jbe
adc
sti
adc
add
test
ret
push
cmc
je
cmpsb
inc
fadds
call
adcb
inc
push
call
outsb
mov
jg
fsubs
xchg
mov
cmpsb
lahf
out
push
movsb
pop
loope
jge
sahf
or
dec
xchg
jge
and
inc
lds
orl
jmp
push
sbb
pusha
es
aam
adc
out
sbb
jbe
mov
loop
nop
rcr
lahf
fbld
push
in
lea
adc
fdiv
lea
pop
push
cmpsb
cmp
mov
sub
or
insb
pop
test
fisubs
leave
repnz
lock
push
sub
iret
or
push
dec
cmpsl
shll
aas
outsl
popf
sti
inc
ss
fsubs
or
fstps
xchg
add
jno
adc
ss
add
xchg
jl
xchg
fdivrl
fdivr
push
push
movsb
movsl
sub
iret
icebp
cmp
ret
psrlq
dec
cmp
int3
lahf
addr16
jge
and
test
cs
push
ljmp
cmp
push
call
jp
bound
dec
xor
dec
mov
push
insl
in
pop
arpl
lds
jl
into
popl
mov
xchg
movsb
testb
stc
scas
and
jnp
sar
sub
mov
xor
and
inc
call
add
jg
movmskps
sub
inc
mov
and
push
add
inc
out
clc
cmp
sbb
pop
sbb
idivb
mov
loop
hlt
mov
andl
push
shll
ja
sub
pop
pop
das
out
push
add
aad
mov
clc
adc
sub
and
xorps
xchg
scas
mov
dec
lcall
lods
push
outsb
std
xchg
adc
or
push
insl
lret
mov
cmc
scas
es
mov
push
shll
dec
xchg
fldt
movsl
jg
push
mov
outsl
or
xor
push
mov
cwtl
and
sub
jge
and
enter
mov
push
jecxz
mov
pop
mov
sbb
scas
cli
cmpsb
rcl
xor
jb
mov
sbb
cmp
std
mov
mov
test
pop
aas
ja
loop
je
mov
stc
insb
push
push
push
pop
out
movb
push
dec
cmpsl
in
rcrl
out
adc
insl
push
mov
clc
je
jp
lds
fisubrs
jbe
sbb
fxch
decb
popf
mov
xlat
xchg
fs
adc
fldcw
push
xchg
stos
mov
arpl
int3
and
in
sti
add
pop
sbb
inc
lcall
cs
sub
adc
lret
sub
mov
hlt
jmp
insl
cltd
das
cltd
or
and
clc
adc
jge
arpl
idivb
mov
data16
or
or
xchg
xchg
test
sahf
cmpsl
adc
add
or
int
ss
xchg
cltd
xchg
pop
fistl
push
mov
sub
cmp
xchg
inc
insb
js
sub
addl
push
pop
mov
jg
push
dec
pop
pusha
pop
jno
es
or
cmp
shr
xchg
pop
std
mov
enter
cs
push
adc
aaa
popa
sarb
dec
outsl
adc
in
orl
lret
sub
xchg
mov
inc
rorl
clc
mov
cs
cmp
fadd
sahf
fadds
nop
jo
pop
push
push
daa
imul
fldt
push
test
xchg
aas
pop
add
xchg
hlt
xor
adc
test
mov
mov
cmp
xchg
outsb
scas
scas
addl
add
jne
mov
call
push
fistps
sahf
cmp
push
jmp
dec
jnp
stc
add
lahf
cmp
pusha
mov
scas
cli
jne
aad
adc
cld
mov
lds
mov
repnz
xchg
inc
jmp
pop
test
sbb
xor
xor
pop
test
cmp
in
dec
mov
lea
dec
xlat
xchg
mov
adc
out
push
rolb
sub
daa
mov
jne
push
jno
dec
stos
sarb
dec
mov
mov
sbb
popa
or
pop
mov
jns
leave
xchg
inc
or
dec
das
fcomps
sbb
pop
pop
shrl
into
lods
pushf
cmp
jae
add
add
pop
dec
push
fisttps
mov
cmc
mov
jl
sbb
push
push
loope
mov
xchg
mov
testb
cmp
cmpsb
dec
xchg
xor
jns
and
inc
stos
cwtl
data16
pop
push
push
out
in
mov
inc
lret
push
add
jno
pop
ljmp
cmp
or
inc
pusha
scas
adc
das
jno
push
movl
xchg
lods
pop
andb
mov
xchg
xchg
cmp
lcall
imul
or
jns
fcomip
jecxz
in
scas
idivb
mov
push
sub
add
cmp
lret
ret
jl
mov
add
mov
fs
pushf
mov
imulb
fdivp
lret
ljmp
pop
jge
mov
xchg
cmp
loope
or
js
inc
pop
cmpsb
scas
pusha
cmp
mov
mov
cmp
sub
inc
insl
fsubs
dec
int3
js
push
and
and
adc
repnz
imul
dec
inc
mov
call
ss
mov
clc
cmp
loop
xor
leave
int
jo
ret
imul
mov
les
pop
inc
inc
pusha
stos
cmp
test
icebp
sub
adc
pop
inc
out
scas
inc
lods
sub
pusha
and
out
sub
dec
stos
addl
mov
push
inc
lods
lret
popa
mov
mov
sti
and
pop
mov
int
lcall
dec
test
add
imul
dec
das
and
call
pop
mov
xchg
call
inc
lock
bound
adc
and
ds
test
dec
test
cmp
cli
ret
and
shlb
aam
or
and
cmp
lret
daa
out
scas
or
es
mov
mov
lods
nop
push
ja
mov
fs
aam
push
xchg
push
shr
mov
add
sub
xchg
pop
mov
ds
inc
adc
jg
pop
dec
fwait
inc
movsb
sub
and
mov
addr16
cmp
cwtl
cli
std
mov
into
fildll
push
divb
cmpsb
lea
sub
daa
push
fdivs
xchg
pop
fists
sbb
stos
addl
pushf
and
pop
dec
dec
push
add
or
jmp
js
out
fildl
imul
mov
fisubrl
shrb
ljmp
jno
pop
dec
fs
inc
and
jno
or
insb
xchg
mov
jmp
mov
push
jnp
sbb
pushf
dec
dec
aad
mov
fcoms
push
es
or
adc
cmpsb
push
adc
add
orb
or
ds
mov
ja
pop
cmpxchg
sub
insl
addr16
leave
lahf
aaa
in
or
xchg
push
sub
pop
xchg
inc
in
pop
cmc
movsl
scas
push
push
into
and
adc
jmp
aaa
mov
and
adc
adc
insb
add
lret
xchg
loopne
sahf
dec
mov
stos
test
out
pop
jp
or
mov
sub
inc
inc
push
or
scas
fistpll
mov
jl
sarl
cmp
mov
xchg
fldenvs
ret
push
ror
xor
out
xor
movsl
pop
movsb
icebp
int
xchg
test
aaa
insl
fs
adc
inc
loop
dec
adc
scas
dec
shrl
ficomps
test
es
mov
adc
insl
arpl
xchg
push
mov
xor
xchg
int3
or
add
xadd
cld
mov
pop
aad
xchg
pop
cli
fcomps
jge
mov
clc
xchg
xchg
xlat
outsb
popa
and
xchg
test
and
jb
or
lock
and
xchg
lahf
fsubrs
or
pop
adc
sti
xorl
cld
iret
mov
aad
ljmp
sub
cmp
aaa
push
mov
or
incb
dec
js
pop
popf
push
bound
ffree
jnp
mov
pushl
xchg
dec
ds
dec
inc
dec
aaa
ljmp
jmp
shl
mov
in
adcb
cmp
dec
pop
repnz
lahf
loopne
cmc
shrl
pop
jns
inc
aad
push
fldenv
or
and
mov
jg
adc
xor
mov
pop
aam
mov
inc
adc
ficompl
inc
jbe
cmp
inc
mov
or
aam
psadbw
pop
mov
fistps
xchg
jo
int3
icebp
and
and
adc
dec
mov
xchg
roll
inc
mov
cltd
loop
push
xchg
test
lea
dec
push
ds
fisubrs
add
repnz
ja
xor
ja
xchg
push
dec
jge
mov
in
cmpsb
movsl
mov
and
sub
test
lods
imul
repnz
jge
andl
fs
mov
cmc
xlat
xchg
in
cli
out
ret
mov
or
push
jg
jg
lret
adc
je
into
fwait
lods
mov
adc
cmc
fnstenv
inc
jno
xchg
push
movsb
imul
inc
sub
sbb
js
jae
dec
push
adc
mov
jmp
and
xor
mov
imul
iret
push
shl
mov
and
mov
lods
mov
add
mov
daa
out
sub
sub
mov
push
sbb
push
inc
cld
push
shl
dec
mov
push
cmp
outsl
pop
cwtl
xor
imulb
rcl
or
mov
rclb
scas
sbb
movsl
xor
loop
xor
mov
test
xchg
lock
jmp
inc
aaa
fsubrl
cmpsb
jo
pop
in
sahf
testl
or
cmp
stc
adc
rcrl
sub
adc
mov
je
cwtl
outsb
and
pop
fwait
lock
in
cmc
jb
or
sub
or
sti
mov
inc
outsl
jne
in
push
pop
ret
jns
push
bound
test
lods
pusha
dec
or
xor
pop
inc
movsl
imul
ret
movsb
mov
nop
dec
repnz
test
or
sbb
or
fstp
cld
fsubr
cmpsl
icebp
jg
fnstsw
dec
adcl
xchg
mov
outsb
shrl
or
adc
jp
int
push
xor
xchg
pop
call
mov
les
sbb
jnp
rolb
data16
push
popa
mov
enter
test
bound
jl
pusha
mov
push
xlat
cmpsl
cli
jecxz
cmp
fsubrl
lock
lods
int
push
sub
jmp
mov
fcomps
mov
iret
inc
adc
call
adc
mov
cmp
mov
pop
cmpsl
fmull
push
adc
popf
pop
lods
and
loop
jge
adc
notb
push
in
testl
stos
fcmovnu
mov
push
and
mov
or
repnz
mov
xlat
mov
pop
sub
adc
adc
push
dec
in
int3
cltd
xchg
cmpsb
sbb
mov
jb
pop
rorl
js
scas
xchg
lock
leave
adc
cmp
pop
cmp
jl
lahf
inc
push
adc
sbb
pop
push
int3
mov
into
xchg
aad
xor
push
loope
jge
mov
cmpsb
pop
pop
sbb
mov
or
adc
sarl
repz
ljmp
mov
lock
lock
lods
sahf
mov
negb
repnz
push
sub
in
cli
sub
aad
movsl
ljmp
jmp
cmp
xchg
xor
mov
mov
adc
insb
mov
inc
inc
and
loop
xchg
xchg
cmp
and
insl
jb
shll
and
xchg
or
cmp
ljmp
dec
popf
and
fnsave
lret
lea
xchg
test
movsb
sbbb
popa
js
pop
push
adc
jle
outsl
inc
stos
push
stos
ljmp
add
std
adc
jnp
xchg
or
test
shll
mov
adc
mov
fldenv
lret
xor
fnstcw
repnz
jnp
shrl
xor
test
sbb
lahf
pop
sub
fldcw
sub
adc
push
into
inc
outsl
sbb
adc
das
inc
inc
enter
out
icebp
sbb
cmp
sbb
scas
xor
mov
sti
sbb
mov
mov
repnz
lds
pop
jecxz
lock
mov
in
jl
jge
xchg
fwait
and
les
imul
sahf
nop
bound
xchg
dec
or
mov
cmp
pop
js
push
xor
nop
hlt
lods
mov
add
jp
scas
and
xchg
fildl
sbb
shlb
mov
pop
lock
clc
fs
sub
stos
xchg
daa
shll
sarb
cmp
inc
lret
daa
and
pop
lods
inc
mov
outsl
dec
push
jo
pop
aaa
out
cmp
lret
mull
das
sbb
mov
imul
sbb
pop
push
aaa
fsubp
stc
mov
cmp
adcb
mov
sbb
push
lahf
fcoml
mov
inc
fwait
ss
fisttps
pop
adc
pop
loopne
ret
dec
fcoms
inc
push
pop
pop
int3
jp
pop
mov
mov
and
mov
and
mov
mov
insb
clc
movsl
roll
cmp
mov
sbb
in
fidivs
or
repnz
out
inc
pop
fs
or
lcall
xchg
xchg
fwait
cmp
ljmp
jmp
adc
js
xor
sub
repnz
or
ss
mov
jb
out
scas
sbb
mov
daa
mov
lods
pop
jns
jbe
sti
xor
or
dec
cs
imul
adc
gs
jecxz
stos
sahf
shl
mov
sub
cld
dec
js
mov
xor
fmul
int
daa
in
push
adc
pop
mov
pop
mov
inc
push
pop
imull
movsl
inc
mov
cwtl
mov
jbe
shll
add
and
sbb
xchg
or
into
ljmp
mov
cmpsb
pop
cmp
xchg
jl
les
sub
bound
popa
xchg
dec
jo
js
sub
in
adc
filds
addl
orl
mov
or
icebp
adc
add
stos
adc
pop
mov
mov
je
repnz
mov
and
cmp
sarl
outsb
nop
cmp
or
jcxz
jl
ror
daa
and
push
fiadds
sti
int
adc
mov
scas
xchg
push
pop
sbb
scas
cli
pop
or
dec
fistpll
rcl
andb
and
pushf
insl
lret
mov
int3
mov
and
inc
addl
pop
enter
fcoms
sbb
pop
jnp
into
loop
mov
imul
jo
jae
sub
push
xor
pop
sbbb
pop
jle
imul
pop
inc
out
repnz
iret
add
pushf
aaa
xchg
sbb
int3
push
enter
mov
lock
and
hlt
shll
xchg
cmp
adc
int
test
xchg
das
mov
je
fwait
into
sahf
xchg
jge
xor
gs
aam
pushf
sbb
pop
inc
xchg
lea
fcomps
movsb
iret
popa
cmp
sahf
fwait
dec
xchg
mov
xor
dec
xor
mov
std
xchg
xchg
sahf
cmp
xor
mov
bound
and
cmp
ret
shl
orb
mov
jle
pop
adc
mov
pop
cmp
int3
inc
mov
jno
mov
dec
jne
out
mov
lock
xchg
int
aaa
jb
dec
shrl
sub
test
push
sbb
call
add
xchg
cmp
ljmp
loopne
mov
mov
cltd
cs
add
movsb
mov
into
daa
imull
jne
daa
arpl
aaa
push
fdivrs
xchg
inc
sub
pop
mov
mov
das
and
pop
out
mov
push
push
sub
lea
lods
outsl
xlat
xchg
pop
repz
xor
cmp
push
ret
std
sub
jae
loop
mov
pop
adc
inc
and
and
fsubl
out
rolb
push
xor
sub
std
lret
loopne
enter
push
add
stos
movsl
mov
xor
das
ficompl
mov
bound
mov
dec
ljmp
jbe
xchg
or
add
stos
and
cmpb
jo
cli
inc
out
xor
dec
insl
in
sub
pop
sbb
fwait
cwtl
mov
sti
lahf
add
rorl
or
add
lret
xor
sbb
dec
push
aam
sbb
mov
in
jmp
imull
test
push
test
push
push
lds
mov
in
daa
jle,pn
sti
lcall
push
fisubs
aaa
test
loope
jno
xchg
lods
mov
bound
hlt
iret
jp
push
daa
xor
push
out
mov
and
adc
pop
in
fistps
cwtl
sbb
gs
add
repnz
bound
cmp
repz
push
into
jp
jb
shlb
in
push
in
xchg
and
cmp
dec
xchg
hlt
sahf
inc
stos
in
add
decl
hlt
pop
pushf
std
pop
and
cmova
push
or
icebp
stc
and
imul
jnp
mov
in
aaa
aam
add
push
pop
mov
outsl
fwait
repz
das
fdivl
xchg
popf
rcr
movsb
and
and
addl
mov
or
fldt
dec
add
push
adc
mov
addr16
cmp
and
repz
ljmp
mov
ret
aas
mov
mov
pusha
pushf
xor
loopne
cli
adc
cmp
lret
or
je
in
add
push
imul
jbe
push
or
divb
das
dec
adc
lahf
in
out
jbe
scas
scas
xchg
add
pop
repnz
pop
mull
jae
mov
or
push
jb
out
mov
pop
bound
mov
fstps
pop
mov
pop
mov
out
in
lret
and
mov
push
mov
push
jbe
jb
xchg
add
add
or
and
es
xor
iret
frstor
pop
push
movsb
sbb
scas
imul
lret
add
cmp
lods
push
andb
les
movl
inc
xor
loope
mov
sub
shll
jge
xor
pop
inc
pop
mov
popf
lods
mov
or
rolb
pop
insl
jecxz
pushf
push
stos
int3
iret
inc
xchg
hlt
mov
subb
out
imul
lock
dec
add
push
call
xchg
popa
xchg
jge
inc
fincstp
ret
jne
jge
mov
add
jbe
sbb
jge
jp
dec
mov
rcll
dec
adc
xor
cmp
sbb
cmp
lods
fldt
insl
cmc
lock
push
xchg
jns
xchg
lods
mov
push
cwtl
imul
dec
aam
mov
sbb
cwtl
pop
cs
mov
xchg
fs
mov
int3
xor
cld
testb
mov
mov
jbe
mov
cmp
jns
pop
hlt
cli
scas
addr16
pop
shlb
push
mov
popf
jg
dec
and
in
negl
lock
repz
loop
mov
pop
fs
xlat
dec
imul
insl
insl
cld
sti
ret
xor
mov
addb
add
cli
lret
push
aas
cltd
push
adc
icebp
repnz
dec
out
and
dec
lret
adc
and
pop
xor
or
lea
pop
add
and
mov
jp
xchg
jg
fmul
fs
sbb
testl
and
ljmp
push
orl
and
adc
jnp
out
popa
in
xchg
jne
std
bound
lret
les
inc
mov
or
mov
aaa
inc
arpl
dec
into
adc
icebp
shll
or
lret
sub
jg
repnz
fs
fcmovnbe
mov
inc
pop
lods
gs
push
cmpsb
popl
pop
sbb
arpl
pop
in
dec
lods
inc
outsl
xor
mov
sub
jns
xchg
sub
or
xchg
out
mov
rcl
fldt
loope
nop
repz
lret
or
pop
push
push
mov
jecxz
or
jmp
mov
ret
push
ja
sub
or
ds
sbb
push
xor
pop
testl
sti
pop
push
scas
jb
stc
xchg
jecxz
repnz
cmp
pop
std
mov
cs
push
int
sbb
mov
daa
adc
daa
push
mov
test
push
ss
in
repnz
addb
lods
inc
mov
push
push
in
jno
ret
out
jmp
ficoms
cltd
pop
push
lock
js
test
sub
mov
jns
sbb
ffreep
fs
jo
xchg
pusha
ds
and
jno
mov
xchg
mov
push
sbb
xchg
sub
inc
add
pop
mov
pop
dec
shrl
stc
nop
gs
mov
adc
adc
push
enter
xchg
cmp
je
jle
loop
or
xor
cmp
xor
lahf
dec
cld
and
fwait
xchg
xor
xor
mov
mov
pop
cwtl
mov
rorb
jl
jns
les
jp
cmpsb
sub
inc
es
pop
test
cmpsb
ja
mov
sbb
repnz
add
std
xor
mov
xor
shrb
xlat
and
and
fadds
movsl
mov
and
ss
fcmovb
addr16
icebp
fidivrl
cmpsb
cwtl
pop
jne
shl
test
dec
pop
dec
stc
dec
pop
dec
push
xorb
cmp
fisttps
sbb
mov
cld
int3
xor
fstpt
and
rorb
push
scas
push
push
xchg
fdivs
outsl
inc
inc
pop
or
cmp
out
xor
inc
and
mov
fsubrp
in
cltd
jecxz
adc
bnd
out
lods
xchg
mov
stc
aaa
jle
pop
push
insl
push
fldenv
popa
mov
mov
in
es
sbb
mov
xor
mov
out
shll
dec
mov
daa
clc
lods
xlat
mov
add
push
test
and
pop
jp
or
mov
lea
shrl
inc
mov
mov
xchg
mov
pushf
scas
mov
and
mov
sbb
cmp
mov
pop
ja
add
divl
push
dec
ds
mov
rclb
sarl
add
adc
pop
mov
rcrb
xor
scas
clc
addl
popf
lcall
rcr
jmp
rol
lret
orb
add
add
ror
cmp
mov
cmc
aaa
lea
into
ss
mov
in
xchg
mov
sub
dec
mov
add
push
divb
in
imul
sti
push
adc
push
pop
jb
inc
mov
das
push
popf
into
mov
pop
mov
adc
dec
mov
mov
add
mov
inc
push
mov
fsts
in
xchg
xlat
out
stos
jmp
lahf
jne
add
jmp
xor
xlat
mov
std
add
inc
adc
cmp
cmp
sahf
fcmovu
mov
ja
mov
sahf
mov
addr16
icebp
outsb
pop
xchg
jecxz
rorb
jmp
xchg
or
push
shr
jecxz
gs
imul
fadds
out
sub
icebp
iret
or
xchg
adc
adc
mov
daa
lret
jb
mov
mov
push
and
xor
push
nop
pop
mov
into
xor
fstps
mov
mov
fbld
leave
mov
sbb
adc
sub
pop
nop
ds
add
lcall
jo
push
call
movsb
addl
xchg
mov
adc
in
jle
xchg
in
cld
mov
pop
call
mov
pop
add
loop
and
pop
jb
sbb
roll
jmp
adc
jnp
fcmovne
xlat
clc
jno
pop
cmpsl
push
leave
repz
push
sub
xchg
ret
test
xchg
faddp
and
popf
dec
jo
push
js
dec
ror
pop
pop
mov
sub
fidivs
cmp
mov
mov
or
jg
inc
adc
movsl
mov
mov
out
stos
data16
add
mov
test
stos
hlt
pop
cmpsl
insb
push
adc
mov
fcomi
lds
push
mov
ror
in
or
cmp
dec
decb
push
aaa
cmp
aas
das
mov
pop
pop
mov
push
push
fsubrl
jnp
fadds
orb
and
xchg
adc
push
pop
test
add
mov
dec
mov
add
jbe
fcompl
dec
jno
movsb
sub
extrq
and
fidivs
out
sbb
les
mov
iret
cmp
das
iret
jns
insb
leave
les
dec
mov
cli
cmp
or
lock
adc
dec
adc
inc
pop
in
inc
aad
pop
movsl
ficoms
mov
inc
mul
mov
ds
fdivrl
and
sub
lahf
push
adc
div
jne
dec
cmp
jl
jle
lcall
mov
adc
daa
dec
pusha
or
lock
or
pop
jae
sub
cmp
jns
jge
es
fs
xor
cld
jno
les
jl
xlat
pop
lods
int
sbbb
mov
dec
xchg
mov
mov
ret
std
or
dec
inc
sbb
test
repz
sub
or
xor
ja
icebp
out
outsb
xor
xor
test
repnz
adc
adc
pop
ljmp
xor
ds
pop
movsb
mov
jg
mov
call
cmpsb
rdmsr
jns
mov
bound
int
test
xor
daa
adc
adc
inc
xchg
mov
add
icebp
push
add
in
jne
cmpl
mov
in
mov
cmpsb
cmp
and
jl
fwait
push
in
enter
cmp
lret
pop
fimull
push
jge
int
fbld
ret
insl
dec
lahf
icebp
rorb
mov
inc
lods
mov
mov
imul
xor
popf
fs
in
fldt
sbb
adc
outsl
push
out
cwtl
xchg
jbe
cmc
pop
leave
test
add
jle
in
jle
movsb
xor
jb
add
ret
aam
xor
into
sbb
mov
or
repnz
ljmp
pusha
test
pop
mov
in
jge
pusha
or
pop
sti
gs
fnsave
dec
sarb
jge
jo
xchg
jo
mov
or
pop
outsb
test
add
pushf
mov
cmp
and
jmp
lea
mov
dec
jns
sahf
push
pop
cs
mov
jp
movsl
int
subb
pop
out
mov
popa
pop
jo
pop
cmp
xchg
pop
and
imul
or
inc
inc
dec
jb
mov
pop
and
pop
add
cs
xchg
bound
sub
test
or
stc
add
outsb
xor
inc
mov
mov
mov
test
mov
aas
outsl
or
in
or
test
nop
imul
mov
inc
xchg
aad
xchg
xchg
push
push
mov
loop
aaa
bound
mov
xorl
sbbb
mov
pop
ss
push
sub
in
cmc
mov
pop
je
cmp
pop
pop
addr16
insl
aaa
add
mov
sub
subb
es
mov
add
fsubl
imul
into
xchg
fincstp
mov
test
imul
in
cmpsl
int3
push
ret
loope
jno
dec
sub
stos
iret
mov
xchg
cltd
arpl
roll
and
aaa
sbb
add
sub
fwait
leave
lea
ret
mov
xlat
push
adc
inc
xchg
adc
setb
xor
or
jb
ljmp
mov
iret
ja
enter
mov
mov
jg
popa
fsub
dec
je
xorb
xchg
das
outsb
shlb
loop
aad
outsb
gs
ds
mov
or
in
popf
daa
xor
jo
stc
cli
or
or
imul
mov
add
xor
lahf
icebp
cmpsb
add
mov
and
outsb
xchg
daa
stc
mov
shrl
mov
lret
cmp
mov
or
ret
lcall
mov
pushf
sahf
cmpsb
and
ljmp
movsb
pop
xor
mov
inc
cwtl
mov
pop
clc
dec
sbb
fcoms
mov
js
lea
sbb
outsb
jns
xchg
mov
mov
faddl
or
pop
xor
xor
fs
mov
jp
sbb
or
jmp
loopne
cmpsl
xchg
cmp
jle
lock
add
sub
mov
sahf
es
cli
dec
arpl
sub
pop
pop
or
imul
jecxz
cmpsl
inc
notl
jnp
cmp
xchg
xor
out
cmp
mov
inc
jle
xchg
popf
and
mov
mov
loop
pop
rorl
out
mov
pop
jno
xchg
xchg
sbb
test
pop
cmpsb
lods
lds
ret
stos
dec
and
jo
xchg
mov
stos
inc
stos
mov
dec
mov
pop
ficomps
in
add
mov
push
push
lods
cmc
divb
jp
les
push
cmp
push
or
fldcw
inc
lock
rclb
push
push
adc
mov
mov
fldt
push
rcrb
pop
dec
lcall
pop
fwait
xor
push
jp
repz
aaa
insl
cmp
int3
or
mov
rorl
subb
clc
push
aas
jmp
ja
lahf
push
mov
or
and
adc
stc
sbb
and
pop
rclb
cmp
test
dec
adc
push
mov
popa
sub
mov
fstpl
push
jp
out
add
push
shll
cmpsl
xor
and
fldcw
xchg
pusha
jl
ds
pop
movsl
pop
push
cld
aam
lcall
adc
xlat
sub
xchg
mov
mov
lods
pushf
pop
andb
mov
iret
sub
mov
popa
cmp
popa
mov
push
inc
lea
out
mov
ret
xchg
or
sub
ret
mov
orl
daa
ljmp
outsb
mov
pop
test
and
mov
call
je
movsb
inc
in
xor
push
jecxz
pop
jg
pushf
pop
inc
cmc
cmp
ja
addl
cmpb
cli
adc
cwtl
imul
mov
cvtps2pd
cwtl
fisubs
pop
insl
lret
adc
jmp
jl
xchg
mov
call
cmp
cld
in
aad
lea
in
cmp
xchg
rol
outsb
mov
daa
addr16
pop
das
scas
jge
pushf
shrb
xlat
mov
faddl
xor
pusha
test
rorl
movsl
dec
js
out
push
adc
bound
and
stc
fdivrl
data16
outsb
sbb
out
adc
test
pop
leave
andb
inc
shll
xchg
xchg
mov
mov
adc
jae
cltd
xor
adc
pushf
mov
in
xor
sti
shlb
fstpt
lds
sbb
mov
ss
pop
sub
xor
mov
outsb
pmulhuw
xchg
imul
push
rcrb
xchg
mov
aad
movsb
dec
push
cmp
movsb
mov
aad
inc
fstp
or
xor
and
shlb
inc
cli
stos
fs
scas
dec
stos
aaa
aaa
enter
push
push
aad
inc
fsts
mov
popf
sub
arpl
mov
ja
imul
imul
sbb
nop
test
lods
push
jae
sbb
and
je
cmpsl
mov
mov
jo
mov
fs
xor
mov
sbb
out
test
out
cmp
inc
or
sqrtps
cmp
cmp
sbb
mov
sbb
push
adc
sub
mov
sub
es
mov
xor
lret
mov
mov
jo
xor
lock
jecxz
lods
cmc
cwtl
in
out
fnstcw
cmp
mov
push
push
pop
stos
lahf
mov
out
mov
clc
outsl
leave
out
int
or
push
loopne
ljmp
sbb
push
xchg
fcomip
aaa
adc
push
xchg
hlt
dec
test
sbb
ss
pop
subb
icebp
or
mov
movsb
adc
dec
xchg
sysret
cltd
push
adc
loope
push
mov
outsb
push
insl
dec
xchg
mov
xor
insb
adcl
inc
jmp
in
push
std
test
add
and
cld
movnti
add
or
jge
sub
aas
cmc
dec
fistl
pop
push
pop
sub
scas
pop
mov
mov
mov
jno
enter
mov
inc
jbe
ljmp
out
lret
iret
jns
add
test
adc
mov
les
cmpsl
fldcw
sub
icebp
test
aaa
cmpsb
imulb
pushl
push
push
xchg
jbe
test
pusha
jle
mov
bnd
lods
flds
xchg
and
sahf
loope
cwtl
mov
add
leave
push
shrl
popf
bound
mov
jo
inc
stos
repz
push
mov
pop
lods
pop
cltd
mov
inc
cmp
popf
das
pop
ds
mov
call
adc
adc
pusha
outsb
and
je
fwait
dec
mov
into
aad
mov
leave
dec
into
scas
pusha
mov
push
stc
lods
jmp
imul
and
pusha
xor
sarl
popf
jo
jle
fimuls
es
lss
in
lods
xchg
or
jge
iret
insb
add
or
xor
mov
insl
sbb
ss
adc
push
cmp
push
cld
inc
imulb
shll
xchg
xor
or
cld
ss
and
mov
mov
xchg
mov
ja
dec
sub
dec
je
test
sbb
xor
scas
outsl
sub
xchg
xchg
add
pop
into
sbb
insb
movsb
fistps
push
jns,pt
je
jmp
jno
pop
and
leave
lahf
mov
sahf
insl
jp
je
push
jp
insb
pop
fstpt
push
aas
ret
push
lret
xor
cmp
adc
pop
dec
loope
jnp
or
push
inc
jae
clc
push
sub
mov
gs
push
jae
aam
in
stos
inc
push
test
setge
pop
mov
test
fidivl
dec
jbe
int
push
xchg
push
int
pop
xor
mov
push
subb
dec
jns
mov
int3
mov
dec
das
inc
dec
pushf
sub
push
iret
loop
lret
test
test
cmp
les
pop
push
mov
add
pop
insb
outsl
add
sbb
cmp
xchg
sub
dec
loope
lcall
out
aad
shlb
pop
mov
dec
jp
dec
xchg
jecxz
inc
xor
stos
pop
lds
mov
jo
and
jnp
and
out
loop
fimuls
or
xor
orl
in
leave
pop
addb
push
arpl
sub
fldcw
add
daa
sarl
add
dec
sbbl
sub
stos
es
adc
lods
add
jp
cmc
jl
popa
in
scas
aam
aaa
mov
jp
lcall
faddl
adc
xor
js
imul
mov
add
xchg
jg
pop
sti
jbe
psubsw
and
mov
push
push
add
add
fs
nop
movsb
xor
iret
outsb
xchg
hlt
pop
sub
pop
adcb
inc
cwtl
adc
or
adc
mov
push
add
into
stos
subl
int
add
push
mov
xor
stc
cmpsl
pusha
and
int3
push
cmp
sbbl
ja
ss
ja
and
in
cmp
and
and
mov
add
sub
cmp
leave
mov
jg
fidivrs
pop
add
jbe
scas
pop
mov
scas
mov
inc
dec
loopne
jge
stos
iret
lock
in
sbb
adc
xchg
cwtl
add
pop
xchg
adc
push
int3
cmp
mov
or
in
jnp
inc
mov
ljmp
sbb
cmp
dec
das
or
aaa
loopne
stos
cmpsl
aad
lods
pop
mov
out
nop
hlt
cmp
xor
lods
cmc
or
hlt
fildl
add
outsb
sbb
neg
insl
ud0
into
mov
pop
xchg
stos
xchg
mov
into
roll
loope
or
lret
xor
repz
cmc
sbb
sub
es
cmpsl
fisttps
loope
mov
mov
into
das
loopne
mov
mov
sbb
scas
cwtl
pop
rclb
xchg
test
adc
icebp
cltd
sub
mov
cs
xor
sub
pop
ljmp
arpl
push
jne
xor
mov
sub
jecxz
cmp
pop
mul
ret
inc
js
icebp
imul
mov
stos
xor
dec
test
mov
clc
dec
sbb
pop
dec
mov
dec
dec
mov
sub
mov
jae
int
jmp
xor
or
xor
jne
aas
xchg
xor
add
std
dec
test
and
lods
push
int
push
imul
out
mov
jg
adc
and
repnz
pop
mov
das
xchg
cmpsl
mov
dec
jb
data16
sub
arpl
adc
insl
in
or
or
cwtl
stos
xchg
out
xchg
outsl
xchg
movsb
sbb
sbb
fnstsw
inc
ds
jne
in
fnstsw
push
je
push
std
lcall
pop
popa
shll
mov
jge
int
rol
inc
outsb
push
pop
sub
nop
push
jle
lds
xchg
push
xchg
pop
pop
cwtl
test
lods
scas
pop
outsb
jns
std
inc
mov
stos
jns
pop
movsl
in
cwtl
loope
mov
cmpsl
adcb
mov
xchg
das
jb
addr16
repnz
loop
xor
push
cltd
dec
cmp
nop
sub
aad
inc
int
adc
jg
cmp
mov
dec
jle
xchg
and
shlb
add
dec
and
stos
les
lds
pop
cmp
sub
dec
imul
icebp
cmp
or
xor
cmpsb
dec
sbb
fisttpl
in
and
mov
aam
jnp
fildl
mov
push
out
test
mov
push
xor
xchg
mov
push
enterw
and
pop
lahf
pop
stos
daa
sbb
and
xlat
data16
dec
cs
pushf
test
jmp
add
jp
mov
pop
push
xor
in
xchg
sahf
push
cmp
in
cmp
push
mov
and
in
lret
or
out
popa
xor
imul
je
ljmp
out
sub
cli
arpl
lds
pmulhw
mov
pop
je
or
dec
idiv
cs
or
enter
inc
push
div
sub
sub
dec
xchg
xchg
repz
aaa
cmpsl
daa
imul
lock
inc
mov
mov
and
mov
cmp
sub
add
pop
enter
and
inc
xchg
mul
fdivrs
nop
gs
fwait
sub
xor
fldcw
aam
pop
cmc
nop
stos
mov
cwtl
or
xchg
jle
mov
sbb
xchg
xchg
xchg
cltd
in
das
inc
ljmp
fucomp
push
xchg
idivb
adc
movl
movsb
sti
outsb
popf
sbb
mov
ret
jp
push
pop
sub
sub
aaa
mov
pop
insb
or
mov
jle
or
ss
jecxz
adc
jne
sub
fmuls
cmp
mov
in
sarb
or
push
and
mov
bts
shlb
pop
sub
leave
popf
je
xchg
add
cwtl
outsl
fldenv
out
mov
and
js
jl
mov
and
xchg
popf
in
cltd
cmp
dec
fs
fistpll
mov
pop
icebp
push
dec
cmp
add
mov
cld
leave
je
mov
popa
gs
push
xor
cli
adc
shrb
popf
inc
or
jne
fcomps
outsl
or
data16
ror
test
jmp
ret
ds
or
jg
imul
jae
inc
mov
mov
ss
rcl
push
in
and
aad
adc
adc
aas
mov
adc
in
cld
sbb
bound
int
jnp
lret
add
fisubl
or
je
mov
movsl
sbb
mov
sub
aam
shlb
dec
js
idivl
xor
or
jecxz
mov
jne
sbb
add
sub
popf
mov
or
std
cmc
xor
mov
dec
push
push
stc
scas
cmp
iret
jae
jno
sti
dec
pop
jle
adc
cmp
mov
sbb
jne
sub
jo
int
jecxz
mov
pop
mov
daa
mov
mov
out
pop
popf
inc
lods
xor
in
cmp
in
and
push
into
mov
add
lcall
xchg
xchg
mov
leave
in
int
pop
cmpl
add
ret
mov
xchg
fadds
outsb
cmpsl
stos
in
pop
pop
add
mov
in
sbb
sti
inc
jmp
mov
mov
sub
sub
sbb
jbe
divb
cmp
push
mov
addb
push
adc
andl
iret
rclb
mov
fists
fwait
sbb
xchg
mov
aam
ficomps
xchg
mov
inc
rcll
pop
in
loope
cwtl
push
aaa
adc
lcall
xchg
addb
push
cmp
arpl
les
dec
jo
sbb
lods
fcmove
mov
arpl
push
jmp
scas
and
cli
fwait
les
push
pop
insb
sub
nop
int
jl
lret
pusha
ret
or
rclb
sub
out
or
push
push
daa
outsl
lds
lea
jne
mov
fcmovnu
push
pop
cmp
fwait
arpl
loope
adc
dec
xor
cmp
mov
fiaddl
mov
push
sub
push
xchg
pop
pop
nop
insl
scas
js
in
dec
push
and
fucomip
or
xchg
aad
or
sbb
lods
mov
subl
sbb
scas
adc
cmp
adc
fsubrs
out
push
cmp
xor
mov
mov
jecxz
out
ljmp
sub
rorl
push
or
mov
inc
fildll
xor
jae
sub
sub
adc
cmp
pop
dec
inc
jge
cmp
rolb
mov
movsb
pop
or
jae
sub
pop
loopne
jmp
push
and
movsl
adc
inc
loopne
or
test
divb
push
fmulp
ljmp
sub
dec
xor
jno
inc
test
xor
out
or
cmc
nop
and
movsb
nop
sub
movb
xor
out
aad
adc
jp
lea
adc
out
push
pop
add
es
orb
jl
in
popf
mov
cli
jno
xchg
mov
cmp
adc
or
add
xor
pop
xchg
mov
int
jecxz
mov
scas
jno
in
jae
sbb
xlat
shlb
sub
data16
popf
data16
adcb
add
mov
pop
dec
xor
jbe
mov
dec
adc
push
jge
inc
outsb
or
mov
inc
inc
das
bound
sub
call
int3
loop
jne
sahf
fwait
pop
xor
in
pop
jmp
jecxz
and
fsubrs
pop
dec
popa
test
lret
pop
mov
mov
pushf
mov
ret
mov
leave
fucomi
popa
and
jge
inc
insl
pop
stc
test
or
pop
xor
stos
mov
les
arpl
mov
sub
iret
sub
jg
xor
loop
xorl
scas
pop
cltd
pop
pop
jl
inc
sbbl
sti
pop
push
int
pop
xchg
jne
sub
push
mov
inc
or
nop
rol
mov
pop
inc
mov
pop
das
push
fsubp
push
loop
clc
cmc
xchg
stos
push
bnd
xor
push
ss
rep
xor
mov
decb
pop
add
imul
fs
add
out
adc
ja
inc
popa
mov
movsb
inc
pop
adc
mov
mov
into
into
xor
ror
or
mov
cli
inc
sub
and
fistps
aaa
xchg
mov
mov
jp
pop
mov
mov
mov
jle
add
sbb
xchg
lods
mov
filds
enter
int
sahf
xlat
repnz
xlat
scas
xlat
ret
push
or
add
adc
lahf
add
xchg
add
sbb
imul
cs
imul
test
rorl
mov
pop
sub
mov
imul
inc
jl
lret
and
outsb
mov
cmpsl
rcrb
xchg
mov
add
sbb
jmp
pushf
mov
jnp
enter
or
je
lret
mov
push
insl
fstpt
ret
ds
cmp
adc
inc
adc
xor
leave
mov
insb
aad
and
test
in
cmpsb
xor
mov
out
loope
push
lahf
push
xor
sbb
jge
jecxz
cmc
or
mov
sbb
add
xchg
push
roll
cmc
jns
leave
das
and
gs
es
lcall
inc
outsb
jmp
push
cld
sub
out
mov
hlt
mov
sub
push
inc
in
inc
sub
inc
lret
cmp
or
and
mov
dec
ds
push
mov
lods
pop
push
cmp
jne
gs
adcb
adc
cmp
cmp
scas
fisubs
xchg
and
adc
sub
stc
loop
daa
icebp
mov
clc
jnp
sub
int
fs
mov
cs
andb
mov
jo
xlat
xor
les
dec
inc
sbb
rclb
mov
inc
add
shlb
mov
push
fstpl
push
subl
adc
addr16
js
adc
pop
addr16
push
xor
mov
cmp
repz
das
push
into
scas
jns
sbb
jo
or
ficomps
loopne
aas
notb
les
lods
fucom
mov
dec
aam
hlt
and
xchg
push
mov
pop
jnp
jne
pop
pop
adc
cmp
lds
les
je
cmp
outsl
iret
or
adc
sbb
cmp
js
data16
push
xor
and
gs
xor
sbb
or
fstl
push
jmp
pop
xchg
ret
sahf
inc
mov
cmpsl
mov
arpl
inc
xchg
pop
xchg
insb
fidivl
jae
sbb
fcmovb
loopne
call
dec
mov
mov
in
pop
push
mov
push
out
loop
ss
in
ja
leave
clc
cmpsl
jne
mov
mov
es
pop
pop
lahf
pop
mov
xchg
sub
js
rorl
and
imul
adc
lods
dec
mov
insl
sbb
arpl
xor
lods
xor
mov
sub
inc
push
push
fwait
xlat
repz
leave
sahf
dec
jmp
cmc
scas
cmpsl
adc
shrb
aam
xor
jmp
imul
pop
cmp
ret
or
shlb
mov
jae
or
add
cmp
pop
dec
cmp
fimuls
dec
dec
adc
rcrb
andl
cwtl
mov
mov
ss
and
jo
ljmp
lret
fadds
sub
cmp
in
pop
sbb
jns
test
sbb
mov
sahf
push
mov
fs
push
and
subb
cmp
xchg
imul
adc
mov
clc
push
jbe
je
loopne
pop
jne
js
xchg
lcall
fisubrl
cmp
mov
inc
push
adc
outsb
cmpsl
pop
imul
sub
loope
popf
push
stos
addr16
ret
out
lods
mov
mov
nop
neg
cltd
push
inc
lcall
loop
jge
dec
and
movl
inc
ljmp
cmp
mov
xor
aaa
js
sti
pop
sub
mov
mov
mov
std
cltd
decb
cld
sahf
jmp
imul
jl
xchg
mov
xor
xor
mov
sbb
test
inc
mov
fidivrs
mov
mov
mov
lds
movsl
push
mov
loope
fstp
or
fidivrs
leave
mov
lret
shlb
cmp
dec
mov
lcall
sub
pop
sub
fcoms
cmp
sub
push
icebp
pop
push
nop
je
clc
rcrl
in
sub
jo
xchg
cmp
test
fsubs
push
push
out
pop
mov
mov
in
mov
js
fsubs
shlb
test
mov
setnp
scas
icebp
mov
add
movsl
mov
fdivrl
fstps
xor
mov
imul
xor
mov
enter
cli
mov
adc
rcrl
aaa
stos
mov
mull
xchg
nop
movb
xchg
fistpl
xchg
xchg
aad
stc
xor
loope
xchg
or
cmp
and
mov
dec
and
inc
rcll
ret
mov
clc
mov
mov
mov
push
aad
cld
adc
dec
mov
aaa
xlat
movsl
cltd
add
andb
dec
cld
inc
hlt
jnp
sti
or
out
sub
lea
push
or
int3
xor
jmp
sub
aas
gs
insl
arpl
loop
mov
dec
call
xor
shrl
pop
imul
xchg
and
mov
push
loop
and
mov
cltd
xchg
mov
mov
out
ja
fnstsw
inc
add
int3
and
xor
push
into
cld
pop
xchg
pop
adc
push
ficompl
jbe
sbb
add
in
dec
add
adc
and
mov
sbb
jno
sub
jns
sbb
sahf
push
clc
je
dec
jb
mov
popf
imul
cmp
cltd
dec
cwtl
xchg
xchg
pop
ret
or
adc
add
dec
inc
arpl
lahf
dec
jbe
clc
mov
mov
inc
xchg
orl
or
rcr
cs
clc
sti
test
sbb
mov
push
push
movsb
jnp
outsl
aam
test
mov
push
bound
sti
ja
pop
test
cmp
xchg
pop
mov
cmc
lcall
push
mov
lods
mov
jp
mov
aad
mov
jnp
popf
add
jl
pop
stos
movsl
out
inc
push
stos
stos
mov
fstpl
inc
or
cwtl
mov
aad
int3
insl
and
and
insl
sub
jns
push
in
repnz
orl
pop
dec
adc
pop
xchg
shrb
mov
test
adc
and
aas
pop
pop
in
pushf
outsb
cmc
lods
mov
xor
mov
xchg
dec
loope
aam
cmovle
jnp
push
xor
movsb
fcomps
jmp
shl
enter
jp
sub
or
cltd
mov
adc
and
lods
push
dec
popa
nop
popf
lods
push
movb
cmc
je
sub
movsl
sub
cli
test
adc
mov
js
pop
dec
xchg
pop
cmc
and
or
loope
test
adc
dec
mov
xor
rcl
mov
push
xchg
and
pop
pop
push
dec
mov
lock
rcrb
stos
push
or
bound
mov
leave
fwait
mov
repz
imul
sahf
rolb
ja
cwtl
sub
push
loope
jnp
pusha
mov
cmp
lret
js
or
decb
mov
enter
add
sbb
pop
lods
sub
call
mov
push
push
mov
in
lahf
call
sub
sar
std
jns
jecxz
xor
inc
sti
sub
loop
ljmp
mov
std
imulb
xor
mov
and
jl
mov
aaa
in
jns
orb
das
and
lret
repz
push
ss
or
stos
aas
movsb
std
jmp
and
xor
movsl
cmp
jo
out
mov
ljmp
aad
jbe
insb
les
insb
das
adc
sbb
pop
daa
adc
or
jae
dec
daa
addr16
fisubl
inc
sbb
cmp
sub
js
pop
mov
sub
cmp
sbb
pop
sub
lock
mov
or
arpl
jle
bound
cmp
fstp
ss
sub
or
test
into
out
loopne
jl
xor
mov
adc
mov
push
js
jo
push
or
mov
call
scas
cmp
test
inc
pop
call
sbb
xorl
sub
adc
mov
dec
shr
sahf
aaa
scas
jo
cmp
add
jnp
adc
insl
scas
jns
outsl
dec
jp
movsl
movl
cmc
aad
and
mov
enter
adc
and
adc
arpl
pop
push
sbb
dec
bound
lcall
xchg
jle
push
fs
xchg
sbbb
iret
xorl
add
test
dec
mov
xor
xlat
aaa
clc
push
push
or
cmp
sbb
sbb
iret
data16
mov
std
imul
int3
sub
xchg
rclb
or
jle
ja
jecxz
leave
mov
sbb
lret
shl
shll
nop
xor
sub
fcmove
test
rcrl
lods
sbb
into
lods
pushf
mulb
add
and
mov
push
xor
data16
add
das
mov
mov
cmp
shlb
mov
lahf
or
mov
mov
adc
mov
push
mov
in
insb
mov
aad
ficomps
call
push
cltd
mov
mov
inc
into
clc
or
push
dec
inc
dec
dec
add
cli
movsl
jl
mov
push
mov
dec
in
jae,pn
sbb
pop
fsubs
sbb
outsl
inc
out
sub
pop
ret
push
aaa
sbb
dec
xchg
jbe
sub
xchg
dec
loopne
mov
fldenv
movsb
or
std
push
dec
pop
add
sbb
mov
fistps
cmp
xchg
mov
pushf
mov
mov
pop
mov
test
inc
dec
mov
shlb
inc
pop
das
jp
push
mov
sti
sbb
lcall
cmp
hlt
cmp
pop
icebp
rclb
push
cmp
inc
lahf
and
mov
jbe
outsl
xor
aam
fisttpl
adc
xor
mov
add
jne
cld
push
cmpsb
push
mov
enter
in
aaa
mov
imul
mov
mov
fldl2t
pop
fsubs
les
cmp
mov
lock
mov
addr16
lcall
imul
pop
lock
stc
rcll
and
out
mov
fildll
nop
ret
lds
out
sub
outsl
jnp
out
cwtl
aas
mov
filds
mov
test
stc
daa
mov
sahf
jmp
enter
rcr
mov
das
ljmp
mov
pusha
sbb
mov
in
push
pusha
mov
out
testl
jmp
stos
jge
lret
outsl
hlt
das
xchg
addr16
jnp
adc
xor
xor
cld
inc
fwait
lds
lcall
mov
add
push
ror
pop
xchg
mov
xchg
and
ret
faddp
test
sub
jns
mov
cmp
jl
out
and
in
mov
ljmp
pop
int
add
mov
outsb
call
stos
mov
lcall
add
sub
hlt
ljmp
repz
stos
push
jae
enter
incl
iret
nop
pop
gs
mov
jb
sub
insb
pushf
cli
xchg
nop
daa
stos
outsl
inc
sub
cli
ss
movsl
inc
fdivrp
or
jns
push
and
push
rcr
add
fisubs
leave
repnz
xchg
aad
loope
out
push
fwait
adc
mov
faddl
out
leave
ret
mov
out
insl
push
cs
pop
shll
cld
loopne
mov
scas
inc
inc
sub
mov
mov
insl
popa
push
ja
dec
fldenv
cmpsb
cld
add
in
xor
or
ret
inc
insb
lods
popa
dec
std
push
cmpsl
sbbb
enter
mov
xchg
sub
xor
fcom
jo
xor
cmc
ret
mov
imul
add
pop
loopne
arpl
mov
sbb
icebp
int3
jle,pn
xchg
pop
repz
int
cwtl
stc
aam
in
jno
sbb
rcrl
jl
test
call
scas
fnstenv
mov
push
scas
sarb
je
sbb
sti
mov
mov
or
cmpl
pop
js
jmp
xchg
lahf
sti
movsb
icebp
jnp
xor
gs
lret
popf
cmp
and
push
or
cli
ljmp
cmp
leave
inc
or
aad
jecxz
mov
mov
enter
or
cli
sbb
and
mov
ret
movswl
pop
jp
fisubl
xor
mov
lahf
push
push
ja
push
out
pop
mov
sub
pop
xor
outsl
imul
cmp
mov
push
cmp
inc
inc
or
int
add
pop
fisubl
sbb
sti
in
push
movsb
loopne
repnz
gs
push
orb
sub
lret
iret
push
insl
dec
mov
pop
pusha
push
lcall
mov
incl
pop
sti
push
sbb
dec
inc
inc
dec
jecxz
xchg
int3
add
shrl
mov
cmpsl
jmp
mov
loopne
mov
std
jecxz
clc
das
loop
jecxz
xor
and
fstpt
ret
pushf
mov
ja
cli
paddsb
shll
jns
xchg
jb
icebp
fmull
lods
xchg
xor
mov
or
sub
iret
mov
in
sbb
add
sti
jae
daa
adc
xchg
fisttps
outsl
adc
insl
jmp
jno
xchg
add
int3
mov
xchg
js
pop
cli
int3
push
in
aam
push
iret
psubq
xchg
add
dec
sub
or
testl
mov
xor
out
mov
jb
ret
out
mov
scas
sub
ret
or
pop
sub
flds
jl
sbb
sbb
pop
inc
push
arpl
push
dec
pop
pop
and
cmc
out
outsl
lret
mov
add
and
mov
stc
sub
or
xchg
popf
pop
jb
andb
sub
dec
pop
fiaddl
scas
stos
les
and
repz
and
sbb
fdivl
push
or
jmp
aam
dec
mov
pop
popa
mov
xchg
jne
sub
stc
mov
hlt
xor
jl
push
movl
test
push
out
stos
mov
insb
lcall
das
push
decl
pop
mov
mov
xchg
xchg
mov
mov
ror
inc
cmp
cld
or
xor
sbb
bound
push
jb
mov
xchg
lock
fsubrs
mov
mov
sub
out
arpl
cwtl
jge
xchg
in
lock
push
mov
bound
aad
or
push
cmp
mov
cmp
pop
inc
outsl
sbbl
push
inc
and
ds
dec
fcoms
repz
jb
jmp
je
test
arpl
pop
mov
popa
inc
test
popf
rorl
add
pop
in
ds
fwait
ds
sti
aad
pop
movsl
add
fs
push
jbe
pop
out
push
mov
inc
imul
out
mov
add
nop
mov
out
push
fstl
sub
inc
in
lods
lret
popf
mov
mov
jmp
fbstp
outsb
outsl
icebp
push
and
bound
std
in
xchg
push
sub
out
adc
arpl
arpl
fiaddl
mov
sbb
das
cmc
cmc
je
pcmpeqd
xchg
lcall
fwait
mov
movsl
jge
dec
es
into
push
loop
test
and
movsb
xor
insb
cmp
mov
or
out
fmulp
inc
mov
fwait
gs
jbe
lea
packssdw
lock
mov
xchg
addl
sarl
jle
jb
rcrl
sar
lods
mov
imul
dec
sub
in
cwtl
and
imul
adc
sub
inc
std
mov
add
test
jp
pop
dec
add
cld
xchg
aaa
int3
xchg
mov
or
leave
loop
jae
es
jbe
sub
test
ret
sti
leave
cmp
aaa
pushf
inc
outsl
and
xchg
lods
push
add
or
push
pop
sbb
stos
in
aam
xor
mov
dec
xor
jne
mov
mov
shll
mov
aaa
jae
sub
adc
daa
lods
arpl
loope
mov
in
int
push
dec
mov
out
pop
jmp
mov
xchg
add
cmp
pop
jae
xchg
fiadds
add
mov
inc
push
xor
add
lcall
lods
sub
sub
xchg
leave
out
cltd
push
idivb
and
push
xor
push
or
xchg
jmp
inc
insl
adc
leave
cmp
inc
mov
jmp
add
sbb
je
idivl
jmp
outsl
outsb
and
sti
cmp
mov
sub
neg
pop
jnp
movsb
test
outsb
in
mov
or
outsb
iret
mov
outsl
add
mov
testb
xchg
and
jo
sbb
and
mov
xor
pop
call
subl
or
sarl
xor
dec
lret
mov
lcall
xor
dec
mov
jecxz
xorl
and
xchg
mov
adc
subps
adc
mov
xchg
inc
jg
fcoml
push
stc
mov
jg
call
repnz
imul
filds
arpl
cmpsl
mov
inc
push
sbb
xor
xchg
mov
lea
mov
cmp
leave
xchg
dec
mov
and
sbb
jnp
leave
fdiv
cmp
adc
mov
cmp
jns
into
cs
imul
dec
fmull
data16
lcall
stos
out
lcall
cmp
stos
push
dec
ss
mov
push
xor
mov
stc
mov
stos
inc
cs
aaa
pop
dec
scas
enter
sbbb
sarl
adc
push
sub
sbb
jno
mov
bound
outsb
adc
mov
cmpsl
insl
cld
or
fnstsw
shlb
out
popa
inc
mov
push
pop
mov
ficomps
sub
repnz
loop
mov
fdivrs
cmp
sub
jnp
dec
sub
push
xchg
xlat
add
mov
xor
sbb
int
cmp
push
ret
aad
sub
imul
push
fcompl
lahf
pushf
add
scas
dec
std
cmpsb
mov
jmp
or
mov
sub
pop
fildl
lock
cld
dec
mov
inc
in
pop
pop
sbb
cmpsb
jmp
out
mov
movsl
into
sub
pop
adc
push
repnz
xchg
and
je
into
sbb
pusha
sbb
or
das
and
cmovl
add
insl
xchg
enter
xor
clc
jp
mov
push
and
mov
cmc
or
mov
fs
xchg
or
adc
call
push
xor
sbb
pop
inc
jecxz
jge
out
adc
lret
sub
jp
push
aas
and
loopne
cmpb
or
movsb
cmp
push
in
out
call
pop
imul
xchg
jb
pop
xchg
push
cmp
fcmovne
push
ljmp
cmp
add
ds
add
cmp
outsl
or
sarb
mov
add
shr
out
stc
xor
xor
in
jmp
jp
dec
shld
insl
repnz
jp
lcall
sub
adcl
repnz
imul
enter
test
push
xchg
mov
sub
pop
outsl
addr16
inc
in
push
cs
or
xor
sub
mov
popl
out
cmp
fdivrl
mov
mov
lcall
sbb
sahf
aad
and
flds
jp
and
push
out
sub
jecxz
std
cmp
push
mov
dec
flds
movsb
sbb
out
in
xor
js
cs
fstps
mov
add
movsb
js
das
cwtl
rep
jb
sbb
iret
jae
dec
and
lock
cmp
ja
hlt
mov
cmpsb
and
rorl
aaa
inc
mov
and
mov
arpl
pop
sbb
cmovb
or
ret
push
mov
sub
add
mov
mov
jl
mov
movsl
sbbb
add
mov
outsl
fsubp
cmpsb
xor
jns
aaa
imulb
push
movsb
pop
aaa
jp
or
sbb
cmp
fisubrs
cmp
and
fiaddl
lods
scas
mov
pop
pop
mov
xor
pop
mov
leave
pop
fucomip
fs
out
cmp
lods
cmp
ds
sub
mov
pusha
push
adc
inc
pop
sub
enter
mov
sti
or
sub
movsb
cmovno
sarl
inc
scas
out
into
mov
and
cmp
or
out
je
mov
in
mov
or
nop
movb
dec
mov
in
subl
lea
insb
lods
call
popf
loop
adc
xchg
inc
es
popa
lret
aaa
shrb
or
pushf
movsb
inc
mul
jge
inc
nop
andl
mov
mov
xor
sub
mov
or
bound
dec
ljmp
and
jp
es
jbe
cltd
sarl
mov
repnz
lea
rcr
vpmuludq
lahf
in
or
sahf
in
sbb
sub
jnp
daa
mov
insl
xor
int3
repnz
in
movsl
mov
rcrb
clc
fwait
mov
adc
clc
adc
pop
loopne
fisttpl
test
mov
repnz
cs
xchg
mov
mov
ret
and
call
mov
repnz
fwait
imul
lea
xchg
xchg
rclb
pop
test
sub
nop
and
or
aad
fsubrs
repnz
movsl
push
mov
imul
scas
mov
mov
mov
push
repnz
and
stos
shl
insl
pop
xlat
outsl
pop
or
out
mov
ror
mov
leave
out
lahf
push
inc
xchg
xchg
movsl
lcall
xor
and
pop
xchg
pop
fdivr
stos
push
xchg
int3
sbb
mov
pop
add
mov
jb
ret
adc
mov
mov
adc
mov
and
push
sti
lock
and
cmpsb
xor
inc
sahf
mov
icebp
pop
sti
mov
push
fcoml
les
rorb
fistl
in
subb
lock
sub
and
adc
inc
fs
ffree
sub
rolb
add
xchg
sbb
aam
and
daa
push
std
jns
cwtl
daa
and
dec
movsb
push
cmp
and
mov
inc
sbb
mov
inc
ss
push
shrb
jo,pn
or
sub
xchg
in
adc
adc
adc
jecxz
cmp
xchg
aaa
les
inc
jp
arpl
sub
pop
pop
movsl
adc
insb
cmp
cmp
or
push
pop
fwait
loope
shrb
jnp
jbe
jns
bnd
pop
imul
scas
fimuls
loope
jo
call
or
adc
out
js
cmc
cmp
cwtl
pop
mov
dec
in
jmp
ret
es
and
loope
cmpsb
cli
ljmp
xlat
pop
incl
nop
cmp
pop
leave
gs
push
push
movsb
lret
push
sbb
sarl
ja
cltd
cmpsl
aad
push
xchg
xchg
sbb
loope
inc
clc
out
mov
ficompl
or
sbb
add
mov
inc
sbb
dec
sub
pushf
or
xchg
adc
push
xchg
mov
push
mov
sbb
loopne
inc
inc
xchg
push
xchg
or
out
cmp
or
dec
sub
cmpsl
adc
cs
push
shll
pop
add
cmc
push
out
repz
aas
xor
dec
sub
fbstp
in
mov
in
pop
pop
cmp
mov
cmp
cmp
add
roll
test
jne
cmpl
shll
mov
clc
mov
mov
xchg
inc
loop
lods
mov
imul
jl
cld
arpl
loope
sahf
popf
movsl
inc
mov
hlt
orl
sbb
pop
daa
ds
hlt
shll
test
test
out
test
pop
adc
xchg
add
enter
popa
sub
sub
pop
mov
imul
shl
sbbl
mov
lret
les
cmp
inc
popf
test
mov
push
insb
enter
pop
jnp
push
sbb
push
pushf
enter
dec
mov
xchg
loop
in
or
pop
push
enter
pop
fisubl
jp
dec
dec
mov
sub
jmp
fbld
sbb
pop
xchg
test
pushf
mov
ret
stos
xor
pop
mov
push
lret
cmc
sahf
cmp
in
xchg
push
pusha
push
fildl
lcall
dec
addl
fcoms
sub
iret
lcall
push
lcall
or
das
fimull
out
jecxz
jl
xor
adc
mov
mov
outsb
rorl
fisttpll
sahf
mov
lds
nop
dec
mov
fmuls
cmc
aad
inc
mov
jno
lock
call
rolb
jmp
int3
mov
cmp
inc
sbb
rcl
mov
jl
mov
scas
cmp
or
mov
dec
test
jmp
cmp
mov
in
push
int
jo
push
adc
filds
icebp
push
adc
jbe
push
sub
cltd
mov
adc
ret
inc
mov
das
inc
rcrl
cltd
mov
cmp
lea
add
ss
inc
ja
xor
push
outsl
ja
mov
sub
sub
push
loopne
psrlq
pop
sub
sbb
jmp
fdiv
inc
sub
push
bound
nop
es
lret
push
ret
pop
data16
dec
cwtl
xlat
fistps
imul
in
cmp
imul
test
pop
aam
mov
ret
xchg
pop
mov
loope
sbb
xchg
andl
cmc
xor
jne
xchg
add
pop
push
iret
xor
xchg
pop
sbb
cmp
push
hlt
jg
add
enter
fwait
cmpsb
mov
inc
cmc
imul
xor
sarl
mov
push
push
out
jp
sbb
pop
test
mov
sbb
xchg
sub
std
movsl
mov
ret
push
lock
cwtl
sarb
mov
fisubrs
int3
loope
push
negl
push
aam
pop
fisubl
jne
aam
xchg
leave
mov
xorl
in
jne
mov
lock
sarb
pop
subl
outsb
js
cmpsb
cmp
pop
mov
lds
pop
inc
adc
std
out
outsb
mov
push
stc
movsb
push
cmp
fdivrl
mov
stc
scas
scas
inc
arpl
cli
sbb
fwait
pushf
mov
jl
out
push
shl
stc
and
jae
cltd
adc
filds
add
sub
cmpsl
fisubl
sbb
daa
jp
xchg
popf
imul
xor
add
mov
fwait
lret
xchg
xor
ret
aas
push
loope
aam
es
pop
outsl
arpl
outsb
push
push
scas
jns
or
fcomps
xor
adc
jae
or
std
mov
ret
adc
je
icebp
cld
add
pop
xchg
int3
mov
bound
bound
xchg
lcall
test
mov
fcom
sbb
jae
add
inc
push
jb
dec
aam
mov
js
lcall
mov
icebp
jl
sbbb
push
pop
testb
test
sarl
sarb
jb
ljmp
jno
dec
jne
xchg
inc
jo
insl
adcb
pushf
lahf
xchg
fs
lds
insl
sub
fs
jae
adc
fnsave
inc
lret
inc
in
das
inc
mov
in
enter
std
sub
movl
test
jne
adc
jg
std
data16
jae
adc
fadd
xchg
xchg
aad
sub
test
lea
cmc
and
out
push
jecxz
jmp
dec
outsb
cmc
repz
push
xchg
inc
xor
cmc
mov
ds
jno
ret
push
add
movsb
push
cmpsb
xchg
cmpsl
add
push
push
addr16
pop
xor
daa
mov
rclb
dec
mov
mov
fsubrl
mov
mov
enter
pop
clc
shll
sub
pop
mov
inc
loopne
in
pop
into
inc
jl
lds
ficoml
push
ja
cmpsl
add
fcoml
outsl
ljmp
push
mov
lret
xor
adc
aas
jmp
inc
ljmp
rclb
or
sub
inc
and
mov
mov
cmpl
pop
fldcw
mov
mov
cmpsl
xor
sarb
js
dec
jne
jg
xchg
je
fmulp
xchg
push
push
out
push
pop
jecxz
push
sbb
loope
sbb
cmpsl
xchg
fs
ficompl
mov
test
or
imul
dec
fldcw
aad
push
cli
daa
mov
inc
negl
mov
cmpsl
fwait
jl
cmp
jb
jge
loopne
int
mov
sbb
xor
cmpsl
mov
cmp
mov
dec
pop
sti
stc
xor
fadd
lret
jmp
ret
cltd
jo
xor
daa
mov
aaa
jae
lret
into
xor
lahf
push
fimull
fst
pop
xor
sbb
dec
xchg
pop
add
push
and
mov
or
js
or
xor
pop
jl
jecxz
insl
xchg
pop
mov
xor
mov
cmp
mov
jo
cltd
test
pop
imulb
jl
popf
pusha
ficomps
mov
testl
or
iret
push
clc
mov
insb
cmp
ror
adc
fs
mov
adc
fidivrl
fnsave
sub
inc
jne
pop
in
aaa
xchg
mov
dec
adc
shll
inc
and
push
repnz
sub
fcomps
pop
out
data16
divb
das
loopne
nop
dec
adcb
enter
cmp
jns
iret
faddl
fsubs
adc
cmp
aaa
mov
sahf
xor
and
outsb
or
stc
or
mov
shll
xchg
stc
scas
push
push
sub
pop
push
add
sub
and
cmp
jns
dec
pusha
pop
inc
inc
inc
aad
in
dec
mov
aaa
jae
push
in
sarb
scas
mov
incl
sub
call
adc
xchg
aas
inc
push
inc
push
call
test
in
icebp
jp
out
fisubrs
mov
scas
out
aad
mov
jb
mov
sbb
sbb
jno
mov
test
sarl
cli
inc
adc
loope
cmp
mov
and
sti
cmp
dec
das
mov
mov
jbe
dec
xchg
hlt
gs
inc
lret
dec
and
and
push
aam
or
or
mov
and
int
push
jg
mov
sbb
add
mov
ljmp
das
jl
jb
push
adc
add
sub
jp
in
add
mov
xorb
xlat
push
es
push
or
mov
fdivs
rclb
cmp
xchg
sti
das
cld
cmp
push
stos
cmp
mov
adc
andb
loope
cmp
dec
xchg
popf
mov
add
jge
cltd
leave
je
cmp
imul
repz
cs
repz
cmp
pop
push
jecxz
mov
aaa
iret
pop
mov
and
bound
mov
iret
push
and
pop
insl
pop
sti
out
mov
cs
dec
in
call
dec
movsb
lcall
push
xor
xor
pop
ds
sbb
xchg
outsl
push
aas
adc
fisttpll
or
and
std
xor
fimull
add
add
fsts
jl
lret
es
sub
addr16
add
iret
xor
fisubrl
adc
and
pop
xchg
mov
jno
shr
pusha
in
into
lods
mov
cmp
ja
movsl
lahf
daa
push
js
cmp
sbbb
sbbb
and
mov
cmc
pop
mov
or
fdivrs
pop
sbb
xlat
ret
cmp
cmc
pushf
iret
adc
out
add
repnz
inc
sbb
pushf
inc
inc
roll
cmp
pop
and
mov
popf
fsubs
dec
jno
xchg
push
cmp
mov
mov
rclb
les
xchg
xchg
scas
push
push
fiadds
int
add
sbb
stos
nop
das
inc
mov
push
ret
mov
or
mov
and
loopne
mov
out
sub
nop
cwtl
and
pop
daa
mov
sbb
inc
xchg
fs
sub
and
mov
loopne
mov
adc
outsl
insb
lcall
xlat
repnz
lock
push
lret
cmp
das
pop
and
int3
jae
or
push
out
inc
push
outsb
mov
push
add
and
aad
xchg
mov
push
cltd
repnz
push
lcall
outsl
arpl
jp
cs
cmpsl
sub
in
mov
mov
movsl
imul
aaa
fdivr
jecxz
mov
adc
js
xor
iret
or
mov
cli
imul
stc
push
pushf
add
repz
cmpsl
imul
mov
cmpb
cmp
stos
add
cmp
mov
mov
addr16
mov
push
out
bound
cmp
xor
lret
ljmp
xchg
ds
loopne
leave
loopne
repz
mov
jae
sahf
push
lock
adc
insl
xorl
rclb
xlat
outsl
roll
xchg
out
in
ss
dec
add
cmp
mov
mov
and
jbe
and
out
mov
cltd
fnop
aad
dec
jmp
add
cltd
daa
out
sub
in
or
btcl
jnp
sti
mov
sub
int3
push
xchg
xchg
add
mov
icebp
xor
xorl
loopne
es
clc
icebp
add
int
test
pop
xor
or
lret
mov
dec
mov
xchg
ret
repnz
add
sahf
scas
jo
mov
movsl
fld
ret
lods
add
jo
mov
scas
xor
mov
mov
jl
xchg
loop
lods
sbb
loop
xchg
jae
push
sub
sub
jge
test
fcompl
push
inc
pop
cmp
in
sbb
pop
add
arpl
insl
pop
int3
or
insl
or
adc
dec
enter
fdivs
sbb
test
ffreep
repnz
addl
mov
xchg
or
insl
ja
cs
jecxz
push
popf
stos
scas
push
gs
mov
adc
xor
stos
sahf
xor
pop
bound
ds
add
dec
in
insl
repz
mov
mov
jge
test
mov
pop
pop
lds
outsb
insb
ljmp
mov
das
jg
int3
add
fidivrl
daa
nop
xor
push
lds
or
cld
or
addr16
pop
repz
repz
imul
xor
shlb
mov
cmc
dec
out
add
shl
pop
xchg
lods
aas
push
enter
outsb
inc
ljmp
daa
lret
movsl
cmc
sub
inc
mov
repz
popf
fwait
hlt
sub
lods
shrl
dec
mov
pop
int3
outsb
pop
inc
dec
sub
cli
add
add
push
mov
test
pop
mov
xor
pushf
xchg
scas
fistpll
fcompl
pushf
ficompl
fisubrs
mov
mov
lods
adc
popa
scas
or
cwtl
jg
mov
jne
pushf
sub
pop
popf
cmp
jbe
aaa
loope
aas
mov
and
inc
xchg
test
or
jp
sub
mov
test
push
stos
or
mov
notb
sub
loop
imul
loop
sahf
fsubrl
roll
sahf
cli
lock
fiaddl
xchg
mov
cld
subl
bound
ss
enter
leave
dec
xorb
dec
sbb
push
arpl
cmp
xchg
bound
add
mov
or
fistpll
xchg
inc
fdivl
repz
cld
jmp
pop
mov
outsb
xor
push
call
fs
ficoml
inc
xchg
test
loope
clc
fsts
shr
test
adc
lahf
ja
fwait
leave
jecxz
pop
arpl
iret
ja
int
add
adc
jne
cli
pop
ja
or
xchg
cmpsl
jbe
and
loop
pop
ja
icebp
sbb
xlat
mov
mov
pop
mov
test
bound
xchg
gs
ret
test
sbb
in
sti
cmp
sbb
jecxz
adcl
xor
out
add
hlt
in
scas
and
xchg
dec
push
lcall
jne
ret
or
arpl
ds
mov
dec
cld
xor
daa
enter
adc
or
popa
std
pop
mov
mov
adc
jne
inc
dec
xchg
inc
or
rcrb
fisubrs
ret
ret
js
cwtl
inc
mov
jmp
sbb
comiss
lods
cltd
xchg
or
cmp
int
lock
mov
pop
jmp
sti
push
sub
xchg
mov
inc
pusha
push
lds
ljmp
add
push
imul
push
cmp
push
in
pop
sarl
sub
xor
fdivrs
xor
arpl
dec
test
add
dec
cmp
add
xchg
in
lea
mov
mov
dec
mov
dec
fsub
dec
andb
popf
cmpl
hlt
outsb
jo
xchg
fdivrp
adc
ret
enter
xchg
fwait
js
adc
pop
cld
scas
jmp
cmp
mov
adc
or
inc
pusha
fcmovu
lds
call
and
test
mov
mov
pop
popf
xor
es
cmpsl
sbb
lret
mov
jne
jbe
dec
mov
gs
pop
or
sti
js
js
inc
mov
imulb
xchg
fldt
ljmp
xor
addr16
in
ljmp
cmpb
pop
aam
jno
lock
ficomps
pop
pop
mov
xor
negl
sub
inc
outsb
jge
xchg
or
mov
loopne
scas
outsb
add
inc
xchg
mov
add
stos
ret
test
pusha
mov
daa
jns
sar
test
jmp
add
adcl
mov
cld
adc
outsb
sti
and
inc
scas
xchg
scas
imul
test
or
stos
bound
push
ret
nop
les
out
sbb
in
jo
inc
lea
lods
cmc
push
iret
shl
xchg
lea
gs
pusha
sub
push
pop
sbbb
stos
dec
adc
xor
sbb
cmc
xchg
sbb
push
das
xlat
lds
sub
inc
push
push
adc
add
pop
and
pop
gs
fwait
inc
sub
sub
and
lock
pushf
outsb
inc
sub
xor
cmpsb
ja
xor
pop
adc
mov
cmc
jnp
mov
inc
imul
mov
dec
shlb
sbb
adc
jae
sub
in
insl
cmp
mov
rorb
and
fnstenv
addl
stc
jg
ss
cltd
push
adc
pop
xor
mov
into
jecxz
imul
icebp
pop
and
pusha
stos
pusha
outsl
inc
jae
les
cmp
inc
jge
cmp
sub
std
jle
mov
nop
jne
xchg
ljmp
sbb
andl
jecxz
mov
xchg
sub
xchg
dec
mov
jecxz
movsl
notl
push
add
lahf
cmp
cmpsl
insl
lea
shll
pusha
xlat
push
sbb
mov
clc
mov
popa
add
push
sti
mov
xlat
adc
dec
mov
push
fcmovnb
cmp
fwait
das
mov
pop
int
xchg
js
fidivrl
pop
mov
inc
mov
fisubrs
or
mov
shr
mov
sar
push
mov
jecxz
push
xor
mov
pop
scas
fcompl
aaa
dec
je
xchg
cmp
shll
enter
add
pop
mov
ljmp
fimuls
insl
pop
adc
les
divb
mov
push
mov
push
and
das
add
add
cwtl
movl
adc
enter
movsl
pop
pop
cmpsl
addr16
scas
stos
lret
jnp
dec
mov
in
sahf
pop
lcall
cmp
or
fsts
jno
ljmp
imul
pop
adcb
out
cmc
and
ret
pop
push
add
adc
push
add
push
mov
out
xchg
ret
sub
jge
dec
bound
scas
pop
pop
dec
mov
stos
iret
mov
cld
jo
mov
mov
ret
adc
in
mov
in
push
inc
jecxz
outsb
mov
mov
push
or
cld
fsubs
push
lods
add
jecxz
lods
or
pop
clc
jnp
or
push
dec
test
push
cmp
mov
push
pop
mov
lret
out
lcall
push
cmp
mov
into
mov
push
mov
dec
jl
and
push
arpl
fsubp
loop
and
adc
enter
mov
fnstcw
lds
mov
jle
pusha
xchg
aad
jle
dec
scas
sbb
sub
imul
xchg
mov
add
jecxz
add
cld
fistps
test
pop
sub
add
es
mov
jmp
int3
popa
jo
aam
push
pop
pop
push
cs
sahf
fisttps
mov
arpl
push
sbb
pop
cmp
xor
push
and
jno
out
jle
and
aam
sbb
xchg
ljmp
adc
jno
jecxz
pop
mov
xor
dec
xchg
imul
mov
shlb
imul
jge
cmc
repz
imul
cwtl
es
test
sbb
xor
mov
cmp
sub
mov
sbb
push
sbb
sub
inc
cmp
jl
scas
lret
int3
test
cli
pop
icebp
jne
xchg
mov
lds
push
and
bswap
popf
cmp
or
xchg
or
push
sub
and
jnp
pop
inc
outsb
pop
mov
add
mov
jo
mov
jecxz
cltd
pop
out
push
icebp
add
imul
sub
pop
mov
imull
inc
dec
ja
mov
int3
inc
xlat
xchg
repnz
icebp
push
cwtl
add
adc
jg
push
jo
xlat
xor
sub
xchg
rclb
sbb
push
inc
mov
ret
xchg
loopne
pop
xchg
sub
xchg
enter
adc
cmp
mov
mov
jmpw
and
lods
xor
sub
repnz
inc
mov
pop
jno
hlt
rcl
push
mov
fdivrs
ret
and
loopne
add
mov
mov
movsb
mov
loop
mov
xor
fadds
pop
mov
loop
in
repz
in
and
xchg
stos
cmp
or
stos
je
lret
lds
das
gs
popf
pop
imul
mov
push
scas
jb
inc
xchg
jp
loopne
pop
stc
or
mov
ja
insl
mov
mov
ja
pop
rolb
in
addl
mov
or
jne
mov
jb
mov
mov
scas
loop
sub
xchg
pop
idivl
pop
das
xchg
in
aam
sahf
xchg
out
cmpsb
aas
mov
push
mov
sub
popf
jb
in
das
mov
mov
js
xchg
mov
sbb
cmc
or
aad
dec
mov
sahf
testl
pop
pop
jecxz
inc
mov
adc
push
cmpsl
shrb
push
je
fistl
jmp
cwtl
icebp
xchg
jnp
inc
outsb
or
adc
push
test
sub
cmp
push
std
lods
cmp
mov
popf
shrb
lahf
push
xor
js
jp
push
and
dec
rorl
loopne
mov
mov
mov
ret
jae
cmpl
xchg
inc
icebp
mov
push
pop
mov
and
xorb
add
insl
xchg
cld
sbb
enter
xlat
nop
lcall
sub
jmp
test
inc
sub
jnp
pop
sub
les
and
sub
stc
imul
and
jbe
cwtl
mov
mov
imul
mov
jg
mov
xchg
loopne
dec
and
sahf
pavgb
and
or
inc
clc
xor
and
push
scas
fbstp
ret
test
rorb
xchg
push
dec
sti
mov
out
pop
jle
sarl
mov
or
gs
roll
jmp
fs
popa
sbb
xchg
jb
add
int3
leave
sti
data16
jb
sbb
pop
rolb
inc
hlt
lds
popf
data16
jno
add
mov
es
mov
inc
pop
addr16
das
repnz
stc
mov
pop
and
repnz
dec
mov
xchg
pop
add
pop
inc
mov
aad
cmp
mov
sbb
xchg
scas
inc
movsb
push
bound
movsl
cltd
mov
int3
adc
cmp
test
stos
push
das
push
dec
xchg
mov
repz
push
cmpb
fdivr
test
xchg
stc
cmpsb
adc
dec
scas
scas
inc
xor
dec
cli
and
dec
mov
fisttps
pop
dec
insb
aad
leave
mov
imul
aad
ds
cmp
push
add
push
pop
in
adc
test
mov
inc
ljmp
pop
jg
popa
test
fsts
sbb
or
sbb
push
sahf
mov
push
cmp
test
ds
bound
call
rcrl
xor
mov
aad
adc
daa
lea
test
sub
sub
jne
out
pop
xor
sub
sbbb
js
add
dec
mov
mov
cld
fcoml
dec
mov
repnz
lret
in
loopne
mov
ljmp
int
out
das
test
ja
jg
pop
lahf
lcall
insl
dec
mov
data16
push
push
xor
mov
mov
movsl
jo
loope
dec
adc
inc
cmpb
outsl
xchg
addr16
mov
aas
dec
and
jp
dec
in
rorb
lods
fstl
or
popf
inc
jnp
iret
jp
test
or
xchg
out
popa
or
cmp
push
sbbl
negl
sub
popf
out
in
icebp
push
fs
pop
mov
rcrl
stos
add
into
jp
xor
insl
sbb
mov
cli
in
mov
ljmp
fidivl
jne
mov
daa
xchg
mov
fistl
icebp
mov
xor
pop
xchg
jae
mov
fcomps
jge
lock
loope
leave
cmp
aas
xor
shll
pop
addr16
cmp
mov
cmpl
xchg
xchg
jnp
lret
outsb
jae
mov
add
mov
push
in
jnp
stc
shrb
xor
and
sub
jnp
xor
das
and
mov
ss
push
push
sub
push
mov
adcb
add
sub
test
pop
hlt
lret
divb
ficomps
add
dec
movsl
and
mov
cmc
les
cwtl
repz
imul
lods
pushf
xor
pusha
dec
test
adc
gs
and
jmp
push
test
xchg
inc
dec
add
xchg
push
cmpsl
in
out
inc
ret
stos
adc
push
lret
nop
repz
dec
sti
fistpl
iret
jo
sarl
or
cmp
sbb
insb
cltd
sti
sbb
dec
inc
sbb
mov
lea
out
scas
mov
sub
lret
add
xchg
fcmovbe
sub
fwait
je
or
sahf
stc
loope
cmpsb
stc
jmp
add
lret
xor
fsubrl
cmp
aaa
inc
mov
iret
lds
adc
jle
add
decb
pop
ret
test
cli
sbb
stos
icebp
cmpsb
inc
xlat
add
lcall
insl
outsl
pop
and
mov
les
leave
cmp
mov
in
add
dec
stc
loopne
jmp
pop
push
ja
xchg
mov
lret
cmp
mov
in
sbb
pop
testl
insl
daa
movsl
push
cmp
xor
fisubrl
sbb
adc
xchg
cld
ffree
ds
fimuls
ret
ds
arpl
jo
and
into
mov
mov
push
pop
data16
inc
or
mov
iret
dec
sti
sbb
cmpsl
jnp
or
push
js
cli
or
sbb
jb
outsl
into
dec
push
jbe
lret
add
bound
jnp
mov
mov
mov
or
add
sbb
lock
scas
fidivl
xchg
jno
pop
sub
add
loopne
cwtl
pop
adc
add
iret
les
popl
mov
xor
mov
cmpsb
mov
dec
inc
adc
arpl
mov
mov
dec
and
jge
jnp
jnp
rorl
or
mov
test
adc
mov
fdivrl
cmp
push
mov
movsl
cli
cwtl
xchg
pop
rcll
push
jns
gs
cmp
xchg
test
cld
mov
mov
push
inc
pushf
push
loop
in
inc
je
adc
ficoms
outsb
jge
pushf
nop
in
cwtl
mov
lea
outsl
and
mov
pop
xor
lcall
fnstsw
out
sbb
sbb
mov
push
and
push
loope
xor
add
je
sub
push
sub
dec
lods
cs
jmp
adc
jae
lret
rorb
dec
out
mov
les
arpl
ss
rorl
mov
or
mov
jle
mov
or
cmpsl
das
and
punpckldq
ficoml
xchg
subl
shl
shrb
and
adc
fs
aas
pop
cli
cmp
ret
in
sub
rorb
jbe
inc
mov
push
mov
dec
dec
xchg
imul
inc
lock
scas
fs
popa
xor
ljmp
adc
shlb
nop
or
sbb
jge
add
sub
mov
cmp
outsl
in
int3
movsb
mov
xor
inc
imul
sub
jno
and
stos
sbb
and
adc
or
pop
jae
call
cld
loopne
push
and
aaa
test
lret
sub
inc
rcrl
push
fsubrs
fsubl
insl
xchg
call
fildll
or
stc
cmp
pop
sbb
pop
int3
cli
sbb
or
in
sub
std
cmp
inc
jle
add
das
push
jge
add
sahf
std
gs
xor
cwtl
out
test
daa
add
loope
mov
mov
adc
into
es
lret
mov
movsl
lret
movsb
push
int3
test
xchg
stos
mov
cmp
and
leave
add
mov
dec
pop
xchg
lret
or
mov
loop
jecxz
xchg
mov
inc
and
sub
pusha
movsb
cmp
fwait
add
fdiv
out
mov
inc
or
stc
out
jb
xchg
mov
xor
and
mov
and
push
mov
adc
call
into
addr16
int3
cmp
jg
pop
loopne
sbb
loope
sbb
out
std
pop
addr16
clc
pushw
loopne
call
rcr
mov
cmp
movsl
or
jnp
push
out
sti
loopne
mov
mov
aas
jb
mov
jo
sbb
clc
adc
lods
into
pop
pushf
inc
lea
rcrb
dec
lcall
push
cs
mov
ret
test
xor
mov
cmpsl
test
jo
scas
test
clc
sbb
xor
subb
mov
lret
sarb
xor
in
fwait
loopne
xchg
mov
sub
xor
push
xlat
cli
ja
xchg
jg
or
outsl
jne
and
les
adc
mov
mov
cs
stc
stos
push
aaa
imul
sbb
xor
mov
mov
sub
orl
shll
mov
lods
bound
std
xchg
cmc
sti
dec
shrb
fwait
fwait
shll
and
push
jg
pop
mov
pop
and
cld
std
stc
add
add
rcl
xchg
and
push
in
jg
cmc
insb
or
lods
dec
inc
mov
and
xor
sahf
mov
dec
cmp
test
pushf
cltd
xchg
lds
insb
jl
jg
movsl
insb
xchg
adc
add
not
lahf
sub
add
movsl
xchg
lock
jg
pop
sbb
xchg
movl
xor
mov
sbb
dec
rorb
nop
xchg
repz
mov
cltd
mov
sahf
mov
mov
shrb
lea
push
stos
leave
adc
lock
xchg
std
push
and
movsl
push
add
pushf
jmp
gs
add
aaa
vmwrite
mov
lods
les
or
jae
adc
les
cmp
xor
lret
jp
add
sub
fdivrp
mov
mov
adc
rcr
shl
jmp
pop
rolb
mov
icebp
add
imul
addr16
testl
mov
andl
rolb
loop
mov
mov
mov
push
lods
fidivrs
pop
jecxz
pusha
imul
push
pop
stc
enter
sahf
stos
pop
dec
cltd
sub
cmpl
std
push
jno
add
nop
int3
push
into
das
push
mov
shrb
add
sub
push
jmp
jl,pn
pop
mov
ss
andl
push
sbb
mov
out
and
xor
shl
mov
xchg
ret
in
ret
jne
jbe,pn
les
loop
mulb
loop
icebp
xchg
test
mov
xchg
xchg
xchg
dec
jmp
mov
inc
add
aam
or
cmpsb
in
cmp
or
in
pop
cwtl
test
jnp
xor
aaa
mov
sti
push
adc
aad
xor
mov
sarb
xor
fbld
adc
loop
stos
pushf
test
pop
loope
fs
out
inc
mov
test
std
lods
dec
dec
pop
icebp
cmp
xchg
jle
out
cmp
ds
repz
repz
ljmp
mov
push
or
add
daa
ret
push
stc
lods
xchg
int
ret
xchg
and
fwait
jmp
js
outsb
mov
push
mov
insl
xor
dec
dec
rclb
xor
xlat
repnz
stc
or
pop
ja
xor
out
fisttpl
scas
fiadds
test
icebp
jo
call
rorb
jecxz
addr16
sub
mov
or
adc
adc
sub
orb
cld
mov
aam
jle
jns
pushw
popa
lret
loop
ja
popa
out
insb
push
xchg
aam
mov
test
sti
push
pop
push
testb
insb
add
hlt
jg
fstl
pop
adc
sub
rcrb
aam
mov
mov
pop
aaa
movsb
imul
int
adcl
or
cmp
icebp
adc
and
lock
xchg
mov
push
sub
aas
cmp
push
repnz
push
or
pusha
cmp
xchg
xchg
inc
cmpsb
push
icebp
jmp
shl
jbe
inc
mov
push
xchg
xor
jle
mov
xchg
shll
mov
sbb
push
fpatan
jp
bound
cwtl
das
sub
cmpsl
bound
sub
cmpsb
out
xchg
jnp
cmpsl
sub
loope
mov
lret
rcrl
pusha
sub
lret
sub
adc
pop
ja
and
notl
jne
jae
filds
notl
mov
adcb
add
push
lock
pop
jl
popa
xchg
ret
sub
insb
lock
pop
adc
sti
shrl
inc
xor
aam
loope
jo
scas
sbb
mov
mov
cli
out
xlat
jno
out
xchg
mov
mov
cmp
push
ret
hlt
and
sbb
fsubs
xchg
sub
adc
sub
mov
fstps
xor
sbb
shl
js
shr
les
in
dec
repz
pop
and
cmp
pop
push
jge
mov
mov
push
push
mov
pop
jg
push
scas
pop
xor
mov
dec
xor
lahf
cmpsb
in
mov
gs
push
imul
dec
push
out
js
cmp
popf
xchg
mov
dec
test
js
or
out
mov
adc
shl
les
add
mov
mov
cmc
add
je
inc
or
sub
or
sub
push
mov
sarl
jb
jbe
dec
mov
pop
leave
sbb
pop
pop
jge
mov
push
mov
scas
adc
jmp
xor
data16
imul
out
into
pop
inc
push
pop
add
or
or
icebp
stos
xchg
push
pop
fucomi
inc
addl
lcall
add
into
sbb
insl
cmp
jl
movsl
in
daa
stos
xor
dec
into
lods
stos
pop
sub
mov
lock
cmp
es
mov
push
add
setl
lahf
int3
leave
fwait
jmp
push
data16
fnstenv
push
push
nop
fwait
int3
pop
jg
aas
bound
add
or
push
jg
je
pop
rcrb
sbb
xlat
push
xabort
loope
pop
imul
push
cmpsb
cmp
bound
xchg
dec
mov
loope
mov
sti
jno
movsl
lret
shlb
rorl
dec
bound
cmpsl
sbb
fisubrs
leave
jl
jnp
jmp
in
inc
cmp
in
or
mov
das
les
or
sbb
icebp
lds
aad
push
sub
and
dec
pusha
pop
jge
adc
test
rcr
daa
adc
pop
xchg
ja
cmpsb
iret
test
test
mov
popa
imulb
dec
dec
sbb
insb
adcb
leave
inc
lods
mov
pop
dec
jbe
xchg
bound
sbb
sbbb
push
je
xchg
sbb
out
sbb
xchg
clc
xor
push
popf
push
int
or
popa
in
out
cmp
mov
nop
xchg
or
cs
xlat
xor
jne
jae
loop
flds
add
mov
adc
add
pop
xchg
scas
in
xor
xchg
cmp
jb
adc
mov
xor
add
xchg
rcrb
push
popa
xchg
mov
mov
fwait
push
inc
cmp
sbb
add
lahf
xchg
mov
xor
jp
aas
add
sbb
dec
nop
xchg
mov
fxch
rcrl
or
inc
movsb
out
fdivs
outsb
out
sbb
daa
test
lea
xor
push
insb
ror
pop
lahf
xor
je
xor
or
sub
jne
push
or
adc
mov
mov
push
inc
mov
jmp
adc
adc
outsl
add
mov
mov
fs
xor
pop
enter
mov
inc
jno
and
dec
sti
push
cmp
enter
lds
repnz
test
pop
sti
cmc
loopne
ss
mov
jb
in
out
je
pop
and
test
xchg
pop
pop
mov
lret
add
aam
xchg
pop
mov
insl
inc
pusha
fwait
add
jle
aas
ljmp
sbb
mov
mov
cwtl
cmp
lock
sub
mov
pushf
insl
insb
adc
mov
dec
in
xor
cmp
add
fs
arpl
cli
dec
jb
insl
mov
stos
sbb
ja
subb
xchg
pop
mov
lods
arpl
stos
addr16
sbb
aas
sbb
insb
scas
pop
mov
outsb
adc
jno
mov
and
jle
push
dec
testb
push
jl
lock
inc
fcoml
mov
sbb
repnz
into
mov
pushf
push
xchg
movsl
xchg
and
add
cmp
push
sbb
mov
sbb
and
mov
scas
and
repz
mov
cmpb
sub
sbb
sbb
sbb
adc
inc
and
push
cwtl
or
inc
add
leave
cmp
lret
or
shrl
xchg
inc
lods
mov
in
mov
mov
test
pop
lock
xlat
pop
pushf
call
xchg
int3
or
xor
loopne
xor
aam
outsl
ss
cs
lahf
add
push
int
fisttps
push
fwait
test
pop
loope
jp
and
add
shrb
orl
push
jb
inc
bswap
cmp
mov
jnp
std
fadds
pop
aad
outsb
filds
repnz
int
xor
sub
adc
dec
fists
cmp
mov
inc
sti
jmp
mov
jmp
ljmp
xor
cmp
xchg
or
outsl
aad
mov
in
and
cmc
adc
pop
sub
mov
iret
inc
sub
leave
sar
sti
std
roll
dec
cwtl
mov
mov
addr16
mov
ljmp
inc
aaa
aas
pop
cmpsl
lahf
push
out
xchg
dec
and
stos
ja
hlt
push
flds
icebp
sti
subb
push
mov
sar
aad
mov
sub
in
xor
jle
insb
in
cmp
ja
outsb
push
dec
les
outsb
or
xchg
pop
mov
mov
and
adc
xlat
sbbb
lea
icebp
fwait
mov
idivl
mov
outsl
mov
cmp
sbb
imul
roll
ret
repnz
arpl
inc
pop
insb
rcll
dec
push
mov
xor
and
mov
loop
xor
mov
and
add
push
push
in
lcall
cmc
insb
data16
cmp
out
daa
cmp
in
mov
fwait
mov
out
ret
push
pop
out
pop
xor
rol
cwtl
in
or
data16
test
cmpl
mov
mov
icebp
adc
push
pop
dec
jbe
pushaw
iret
loopne
push
aas
pop
pop
fldenv
sub
insl
jnp
shlb
jmp
pushf
pop
cltd
test
mov
dec
daa
int
pop
sub
dec
or
jo
scas
jo
sti
add
fistps
decb
enter
orb
mov
push
pop
mov
push
sub
dec
pop
sbb
fldcw
lret
lahf
mov
in
sub
xchg
addr16
inc
sbb
mov
pushl
les
cmp
cmpsl
push
inc
data16
test
hlt
sbb
sarb
das
or
xchg
unpcklps
xlat
mov
xchg
jno
inc
xor
cmc
dec
push
dec
sbb
setge
xor
fisttpll
fdivl
test
jo
shlb
popf
dec
cmpb
cmp
mov
in
xchg
stc
xor
jbe
pop
xchg
lods
or
mov
repz
mov
mov
sbb
and
cmp
in
xor
cmp
xlat
cmpsl
cltd
fdivl
xchg
mov
pushf
js
shlb
mov
pop
xchg
sarb
test
std
inc
std
cmpsb
fsubrl
pop
rorb
pop
pop
fldenv
cmpsb
sbb
lock
fdivrs
in
pop
or
mov
inc
leave
lods
push
xor
or
in
push
pushf
mov
push
insl
rcll
out
mov
jmp
scas
and
jnp
scas
loope
mov
add
push
pop
ss
out
xor
pop
pop
movsl
add
mov
mov
jmp
pop
pop
clc
sbb
inc
or
sbb
das
cmp
cmp
cmp
jnp
movsb
test
dec
add
js
dec
arpl
sub
jnp
xlat
mov
cmp
jne
insb
pop
and
stos
fistps
add
sbb
in
cmpsl
mov
sbb
add
cltd
pop
add
mov
repnz
pop
jnp
adc
movsl
mov
mov
inc
shll
inc
mov
inc
xchg
popf
int3
stos
stos
add
out
cmc
fdivr
inc
jg
mov
or
stos
aas
mov
mov
xor
sbb
pusha
mov
imul
xor
xchg
xchg
lcall
cmp
mov
cmp
lock
sbbb
lds
pop
in
lods
sbb
inc
divl
mov
xchg
xor
aaa
je
jns
mov
mov
xor
xchg
call
cmp
bound
andb
mov
xchg
movsb
stc
in
mov
in
ja
outsl
jle
mov
sub
testb
lea
adc
cmp
cmpsl
push
cmpsl
cmp
cli
inc
jo
aad
jge
push
dec
mov
mov
or
sbb
lcall
test
sbb
mov
xchg
push
xor
shld
add
inc
sbb
sbb
sub
lcall
filds
push
pop
jmp
xor
test
dec
test
dec
shl
loopne
ficoml
fwait
inc
or
fwait
pop
ficompl
or
in
sbb
dec
sub
repnz
inc
jae
mov
dec
lea
push
mov
je
xor
mov
mov
cld
subb
cmp
jnp
jno
jae
jnp
xor
jl
inc
jecxz
loope
jnp
sbb
shll
fmuls
xchg
iret
mov
fabs
push
xchg
push
fildll
stc
adc
popa
mov
push
jne
jmp
jbe
and
cld
push
pop
je
in
mov
sbb
and
fs
adc
dec
loope
inc
add
out
cli
lds
in
push
nop
rep
stos
xlat
mov
mov
dec
es
pop
push
and
add
out
jbe
cmp
sarb
idivl
xor
icebp
sub
pop
push
xchg
dec
cmp
insb
addl
lods
imul
stc
mov
xchg
or
xor
jge
pop
adc
and
xor
adc
in
dec
adc
xchg
fildll
or
and
adc
mov
sbb
sti
stc
das
dec
pop
gs
out
dec
inc
out
mov
cltd
mov
adc
mov
or
int
sbb
movw
mov
insl
dec
clc
rcrb
mov
fisttpl
mov
mov
add
xchg
lods
sub
sub
xchg
jb
mov
jae
mov
dec
insb
mov
lret
xlat
push
inc
mov
leave
js
jno
xor
pushf
xor
fbstp
hlt
pop
cmp
or
insl
jae
xor
jmp
repz
push
dec
out
push
mov
out
repz
dec
imul
aaa
mov
scas
cmp
or
push
fcompl
into
imul
adc
cmpsl
sub
movsb
movsb
push
dec
loopne
jbe
or
lahf
ror
xchg
jmp
ja
test
lcall
jle
das
mov
push
bound
cld
movsb
mov
and
cmc
iret
std
jne
pop
js
xchg
pusha
inc
mov
cmp
jb
lock
aas
jbe
xchg
lods
mov
xchg
shld
mov
xchg
call
ljmp
mov
jl
popl
stc
sbb
bound
push
xor
jbe
or
testb
dec
rorl
loop
inc
push
push
xor
jnp
sbb
je
xor
fimull
or
jo
jl
push
scas
jmp
popl
lret
push
jle
insl
sub
jae
outsl
sub
icebp
mov
out
outsl
mov
inc
mov
mov
add
movsl
hlt
or
pop
ja
ds
mov
jno
stos
lods
movq
mov
aas
std
movsl
cmp
jo
test
or
aad
subl
cltd
sub
loopne
pop
aas
xor
add
or
inc
in
movsb
push
sbb
sub
pop
jg
dec
mov
adc
and
data16
pushl
pop
pusha
cmp
fmulp
sbb
lods
and
fcomip
jbe
sti
jp
lea
pop
stc
add
stc
pop
jno
sub
lret
jl
jecxz
add
sbb
add
int
push
repnz
add
stos
jno
fmul
adc
imul
jo
fidivrs
add
dec
shll
or
cmp
movsl
cmp
xor
pop
mov
scas
xor
test
sbb
lea
mov
setae
xchg
jnp
and
lcall
imul
lcall
mov
repnz
add
lea
cs
push
stos
jecxz
cli
in
jbe
repz
icebp
sbb
sbb
sub
scas
repnz
pop
push
or
sub
fildl
pusha
out
enter
icebp
or
addr16
movsb
aaa
push
ds
js
adc
jmp
push
lds
aaa
jp
ffreep
adc
adc
sub
lods
pop
loopne
bound
sbb
sub
cmp
int
mov
jne
jg
shl
movsl
inc
xchg
out
or
in
and
jns
insb
pop
mov
push
mov
mov
inc
push
dec
insl
sbb
sbb
std
cmp
push
cmp
jge
push
scas
jle
mov
xor
lds
adcb
push
xchg
xchg
mov
sbb
mov
std
inc
fdivl
rcr
sahf
repnz
test
jae
or
rol
stos
sbb
dec
imul
inc
les
loop
mov
fcompl
fidivrl
ss
or
inc
out
ret
test
mov
inc
and
test
mov
jge
xor
stos
nop
aam
test
fsubrs
ljmp
jne
subl
subl
adc
int3
stos
jmp
popf
movsb
ds
dec
sub
ss
cmpsb
fdivrl
test
mov
pushf
mov
movsb
outsb
jb
insb
xor
and
cmp
jno
fs
sbb
add
repnz
jg
sahf
sub
jo
xor
icebp
jg
idivl
es
push
xor
dec
push
add
add
into
test
add
xor
pop
xor
inc
daa
fisubrl
dec
test
aam
lret
outsl
dec
stos
ljmp
or
fistpl
jg
cltd
mov
imul
in
pop
shlb
jo
sbbb
cs
xchg
sub
test
sahf
mov
mov
iret
ss
mov
jbe
xchg
ret
testb
xorl
dec
or
lret
outsb
lret
insb
insb
ds
inc
mov
test
and
or
pop
into
enter
cltd
clc
mov
inc
dec
fists
dec
loop
xchg
add
repz
push
push
adc
dec
cmpsb
fldt
lcall
hlt
lea
sbb
inc
aaa
add
xchg
scas
iret
clc
push
cmp
mov
ss
sarl
insl
jle
and
enter
mov
rcll
adc
push
xor
addr16
repz
cmp
push
jae
cmc
and
mov
das
cmpsb
scas
dec
sub
mov
dec
mov
mov
in
pop
fisttps
pop
fisttps
xchg
fsubl
xlat
gs
mov
inc
sub
rolb
mov
xchg
test
pop
pop
dec
pop
lock
add
ja
add
mov
inc
mov
jmp
nop
mov
inc
push
imul
mov
jp
push
cmp
int3
loope
push
or
inc
fistpll
mov
jno
dec
call
add
enter
push
repz
pushf
imulb
inc
adc
stc
mov
xor
fwait
gs
es
stc
fs
mov
push
cmpsl
adc
mov
loope
push
xchg
pop
lods
jbe
cmp
jmp
sub
cltd
pop
shll
lcall
shr
mov
push
add
xor
sub
fldt
lea
je
out
xor
mov
xchg
inc
pusha
fistps
cwtl
loop
in
mov
clc
add
icebp
adc
inc
movsb
daa
mov
aam
fwait
mov
jg
mov
scas
in
push
mov
fstpl
repz
repnz
sar
stos
incl
mov
call
test
pxor
mov
call
test
aas
sarl
out
mov
in
push
adc
paddd
add
mov
in
aad
mov
in
stos
adc
fs
pop
sub
push
test
mov
fmul
icebp
pop
adc
pop
clc
xchg
mov
mov
fcompl
arpl
jne
jbe
push
xchg
rorl
lcall
testl
cmpsb
lret
cmp
sbb
shl
inc
mov
or
push
repz
nop
push
imul
sbb
cmp
lods
xor
jbe
xchg
xchg
push
push
daa
in
rclb
loop
pop
adc
lcall
icebp
aaa
xchg
mov
jmp
mov
dec
jnp
dec
jecxz
mov
jge
aad
lods
add
pop
adc
push
mov
data16
push
jnp
fs
outsl
cwtl
adc
rcrl
jmp
out
add
loop
dec
cmp
push
mov
or
in
into
sub
pop
mov
inc
and
dec
pop
cmp
rep
ss
cltd
es
mov
adc
sarl
lahf
jbe
jecxz
call
out
aas
gs
stc
adc
or
cmpsb
mov
adc
fistpll
jp
adc
ficoml
jo
or
push
loop
aam
xchg
int3
les
pop
pop
hlt
stc
repz
or
cmp
pop
dec
and
imul
add
in
fcompl
lret
cmp
not
test
cli
idivl
push
das
sbb
cmp
stc
ret
iret
in
xchg
cmc
pop
xor
jmp
ret
sbb
cs
xlat
dec
cmp
cmp
and
mov
mov
test
jmp
or
xchg
pop
pop
mov
repz
lods
push
cmp
cmp
fdivrs
inc
mov
cmp
mov
push
inc
jnp
jg
adc
or
cmc
arpl
mov
inc
mov
lret
call
popf
call
jmpw
mov
repnz
fs
pop
xor
lret
imul
lock
inc
xchg
jecxz
xchg
sbb
dec
ficomps
dec
cltd
mov
sti
leave
scas
sub
iret
and
imul
sbb
inc
mov
jmp
ret
xor
movsl
push
inc
cmp
pushf
dec
rol
sub
and
dec
mov
mull
repz
aad
loop
int
fsubrs
xchg
mov
mov
or
jp
cmpsb
shr
pop
fdivrs
push
mov
outsl
dec
ret
sub
pop
andl
insb
add
in
pop
xor
subps
test
test
adc
push
xor
xchg
inc
mov
aam
in
imul
sub
inc
pop
subb
inc
sub
nop
jb
dec
adc
sbb
xchg
push
inc
cwtl
push
leave
xchg
jmp
or
stos
loopne
arpl
test
cmp
fisubrl
bound
xchg
rclb
inc
gs
sub
push
fisubl
pop
out
jmp
adc
xor
inc
fs
fnstcw
push
scas
fldt
and
jg
jmp
repz
imul
dec
mov
pop
push
push
mov
in
lahf
data16
jle
jne
inc
lahf
push
les
in
jecxz
out
cmp
push
repnz
lahf
cmp
mov
and
xor
jle
xchg
xchg
jae
xor
aad
out
cmp
jmp
lahf
jp
push
jo
mov
imul
mov
xorb
jb
notb
ret
lahf
or
mov
jp
jne
jp
mov
xchg
cmp
mov
aad
inc
leave
push
jl
or
in
jl
dec
xchg
adc
cmp
addr16
rol
push
pop
scas
ror
pusha
repz
adc
push
popa
and
inc
mov
movsb
mov
mov
mov
mov
jecxz
scas
mov
xor
mov
push
inc
not
add
into
pop
pop
mov
enter
pop
aaa
pusha
fs
std
mov
pop
cmpl
notb
je
xlat
cmp
or
sub
cs
sub
icebp
dec
push
xchg
xorb
sub
mov
pop
lds
cltd
arpl
jo
repz
jg
push
sbb
mov
sarb
neg
and
sbb
and
cmc
xchg
cmpsb
mov
push
add
mov
mov
fs
idiv
mov
jecxz
test
mov
mov
test
fpatan
or
jmp
lret
es
fdivr
and
cmp
stc
insl
lods
cs
pop
sti
mov
or
into
mov
fsubrp
sbb
jbe
sarl
mov
fnstsw
sahf
xchg
and
jge
gs
sub
jbe
push
pop
ror
cmp
sub
and
mov
cli
xchg
ljmp
int3
lods
mov
aaa
pop
cmp
idivl
aaa
sbb
hlt
cmpsl
aaa
insb
mov
ss
ljmp
das
arpl
mov
mov
mov
cmovae
mov
pop
ds
xchg
mov
mov
cmp
jbe
add
push
push
mov
inc
rorb
popa
jbe
dec
push
imul
or
sbb
scas
or
ds
pop
adc
xor
adc
xor
cltd
push
sbb
push
scas
frstor
add
push
popf
xchg
jp
cwtl
add
adc
fcmovnbe
subl
inc
adc
mov
push
or
lahf
mov
push
test
adc
cmpsb
cmp
pushf
mov
ret
adc
sarl
pop
inc
mov
mov
jg
out
pushf
jl
fsubl
ret
cmp
pop
inc
js
mov
sub
ja
jnp
sub
cmp
fmull
ds
fldl
sbb
push
and
mov
cmp
sti
adc
mov
test
arpl
dec
mov
adc
stos
add
adc
mov
addl
or
inc
or
aam
aam
and
mov
cmp
cld
and
mov
roll
iret
movsb
pop
adc
pushf
mov
fwait
mov
lds
loopne
jl
sub
aad
mov
push
xchg
loop
xorb
push
sarl
fisubrs
and
cmpl
negb
push
into
pop
fistpl
sti
out
fcompl
and
and
xchg
pop
popf
dec
cmp
mov
hlt
je
push
ds
adc
pop
xchg
sbb
jmp
mov
push
outsl
imul
xchg
push
pop
leave
mov
adc
mov
nop
mov
lods
or
out
mov
std
ffree
nop
iret
sbb
add
mov
test
jns
dec
xchg
data16
adc
gs
push
dec
int
insl
mov
adc
sub
xor
adc
call
xchg
out
mov
insl
cmp
outsl
jns
sub
push
xor
rcrl
outsl
in
insb
addr16
add
inc
inc
hlt
ret
nop
ds
mov
sarl
ficoml
inc
je
fisubrl
out
pop
ljmp
movsl
data16
aam
inc
cmc
scas
mov
flds
mov
popa
push
or
pop
mov
aaa
push
add
loope
pop
push
mov
sbb
xlat
faddl
sbb
and
push
out
push
adc
jle
dec
jmp
imul
je
jl
inc
push
or
xor
cmp
rorb
sbb
dec
imul
lods
lcall
repnz
outsb
jecxz
popa
icebp
cmp
xlat
ret
mov
stos
mov
clc
test
xor
push
jge
bound
fdivp
pop
sbb
cli
jo
int3
jmp
add
and
mov
mov
dec
dec
je
xchg
xor
and
xor
pushf
mov
sub
inc
dec
js
sub
hlt
outsl
jnp
nop
int3
or
xor
idivb
sbb
cmp
pusha
sub
push
mov
mov
lea
xchg
mov
pop
jnp
scas
mov
jb
mov
lret
jecxz
enter
repz
imul
imul
pushl
pop
sub
xlat
pop
mov
int
sti
mov
and
in
fisubs
xchg
jns
pop
mov
mov
lods
je
dec
push
out
repz
pop
jl
mov
sbb
lret
cmp
mov
lea
nop
fisubs
jbe
fdivrp
pop
adc
cmpsl
and
push
aaa
cmp
inc
repz
rclb
mov
cmp
mov
mov
pop
lods
push
xchg
sahf
loopne
popf
xchg
dec
test
push
dec
cmp
dec
cltd
xchg
hlt
das
or
dec
imul
cmp
adc
jns
or
adc
jp
mov
pusha
add
pop
repz
inc
inc
in
daa
dec
shrb
dec
inc
bnd
lahf
adc
lods
je
imul
imul
enter
popa
vrcpps
cwtl
mov
push
lret
push
add
shl
cmpsb
mov
cltd
lret
subl
leave
jns
fmull
dec
xchg
adc
pop
popa
push
or
out
xchg
push
pop
fnstcw
pop
aaa
movsb
push
adc
inc
mov
data16
test
scas
fsub
jp
cmp
dec
cli
jae
push
int3
into
fdiv
cwtl
inc
adc
test
jmp
jmp
add
pop
mov
sti
loope
repz
lret
dec
int3
push
adc
and
call
fisubrs
pop
sarb
insl
adc
imul
jge
and
cmc
dec
lret
xor
xor
lea
mov
mov
cmp
rolb
dec
scas
test
es
adc
stos
dec
pmullw
push
imul
repz
pop
sbb
subl
andb
push
mov
sbb
cs
inc
push
xchg
rcpps
js
xor
or
jecxz
inc
pop
cld
inc
int
imul
cmpsb
mov
adc
popa
repnz
out
push
dec
loope
adc
subl
stos
xchg
lret
int3
add
ss
imulb
lods
dec
stc
lret
psrad
mov
lods
std
or
lds
and
stos
sub
jb
jae
pop
ja
dec
xchg
ret
int3
push
inc
sbb
rcrb
and
sbb
xor
inc
lods
bound
add
stos
into
mov
sub
jae
dec
push
int
aad
aas
mov
jge
sbb
jle
and
sub
push
ret
dec
scas
cmp
sub
sbb
js
sbb
mov
rcll
aam
pop
sbb
out
mov
xchg
mov
enter
inc
orl
sarl
ja
divb
loopne
sbb
insb
sbb
xchg
xor
inc
ljmp
data16
sub
xor
xor
fists
fisubrl
adc
sub
mov
and
nop
daa
fbstp
gs
mov
lret
das
cld
lret
xchg
or
sub
pop
int3
xor
jl
mull
pusha
adc
rcrb
and
sbb
dec
jnp
mov
and
loop
int
pop
hlt
fnstenv
ss
pop
push
js
das
es
jo
daa
xor
scas
cmp
daa
cld
rorb
pop
or
test
or
stc
cs
pop
loop
shufps
clc
pop
mov
adc
data16
inc
inc
insl
xor
int3
push
fs
dec
or
cmp
sbb
js
jle
std
jo
sbb
push
mov
mov
aad
jne
inc
push
cmc
cmp
test
cmc
adc
fldl
jno
xor
lcall
cmc
push
jae
xchg
adc
sbb
test
addr16
subb
data16
inc
imul
std
arpl
push
inc
mov
pop
mov
and
pop
dec
outsb
mov
pop
add
pop
setne
push
cwtl
clc
cmp
mov
pop
ret
push
sub
std
push
inc
and
push
dec
test
test
andl
inc
inc
aam
push
insb
test
or
adc
callw
sbb
xchg
push
pop
int
pop
out
cmp
scas
add
mov
in
dec
call
xchg
and
mov
clc
into
mov
inc
xor
ret
scas
xor
cs
out
sub
sbb
and
cmp
xor
test
ja
test
ss
xchg
sub
stos
xchg
or
xor
add
add
pop
adc
int3
rcr
xor
add
pop
pop
mov
into
xor
mov
jns
jne
shrl
mov
popa
inc
outsl
repnz
add
pop
lret
ret
fnsave
xor
gs
bound
jb
fs
cmp
shrb
and
push
js
scas
xor
insl
pop
jnp
or
pop
iret
mov
inc
sub
jle
cmp
xchg
hlt
in
add
movsl
cmpsl
mov
notl
stos
jne
lds
push
push
or
mov
ds
pushf
in
cwtl
or
in
add
jbe
mov
lret
cmp
mov
cmp
leave
negb
add
jo
loopne
jns
cmp
daa
inc
rcrb
cmp
pminub
mov
or
nop
jbe
ja
mov
mov
jmp
jle
pop
mov
push
insb
jge
xchg
pop
xlat
cli
ljmp
mul
lahf
sub
xchg
xorb
mov
jg
inc
add
leave
jo
call
jne
out
bound
push
xchg
mov
mov
jle
mov
pop
add
jae
add
icebp
xor
cmp
mov
insl
mov
jo
test
pusha
shrl
mov
cmp
rorb
movsb
dec
bound
xchg
in
out
inc
pop
cmp
dec
int
cmpsb
push
stos
data16
aaa
inc
inc
mov
outsl
add
nop
pop
cmp
stos
adc
loopne
negl
and
imul
js
xchg
jne
jns
adc
aad
sbb
cmp
hlt
ljmp
test
out
push
shlb
inc
popa
popf
push
lods
leave
xlat
or
or
sbb
fwait
mov
cmp
subl
popf
je
jp
inc
cmp
dec
aaa
or
pop
aas
mov
fcmovbe
pop
cli
xchg
adc
sbb
je
jmp
sahf
sbb
mov
loope
out
in
add
out
pop
dec
push
stos
mov
ficoms
mov
add
inc
daa
cmpl
push
xchg
divps
and
add
fwait
xchg
add
mov
aas
mov
mov
inc
and
clc
jno
fidivrl
aas
mov
sbb
cmpsb
mov
outsb
rcr
jle
shrd
insl
movsb
ret
sbb
testb
fdivl
fnstcw
and
stos
cmp
cmp
cld
out
jno
ds
dec
mov
fbld
jle
push
in
mov
and
movsb
dec
mov
cmp
int3
and
jp
dec
adc
push
sarb
jg
mov
loop
fwait
add
mov
repz
and
mov
test
stos
mov
cmpsl
xor
mov
jl
es
or
ds
movsb
and
ficompl
clc
pop
push
in
daa
push
pusha
scas
lods
ret
cmp
sub
add
adc
and
fidivrl
push
push
and
aam
jecxz
push
add
mov
xchg
insb
inc
stc
push
adc
add
sub
dec
adc
mov
xchg
add
push
jl
push
jge
sbb
aam
pop
adc
rol
mov
mov
sarb
fdiv
lar
stc
cmc
mov
ljmp
lea
cld
mov
out
sub
je
pop
jne
mov
xor
loop
movsb
into
xchg
fwait
pop
addb
pop
push
mov
adc
push
aad
rclb
xor
jnp
push
and
fisttpll
mov
add
adc
out
out
jne
dec
xchg
out
cltd
or
lock
jbe
ds
inc
das
scas
or
movsb
sub
dec
scas
fnstcw
sub
add
out
fs
mov
jae
adc
sahf
sbb
sbb
cmp
out
rclb
cli
popa
pop
mov
out
ds
jo
stos
cmpsl
xchg
pop
loop
dec
xchg
or
stos
cmp
jns
test
fs
or
stc
adc
out
cli
xchg
fldt
shlb
sbb
xlat
and
mov
movsb
lret
pop
pop
mov
pop
adc
in
and
into
xor
loope
insl
sub
setge
sbb
sub
jecxz
inc
ret
inc
cmpsl
adc
xchg
subl
pop
mov
aam
inc
pop
outsb
in
es
inc
adc
lods
mov
jne
andb
sbb
addr16
jno
mov
movsb
shll
xchg
adc
mov
mov
cmc
xor
mov
into
pop
dec
xchg
nop
sbbb
fs
adc
addl
lahf
out
arpl
lahf
js
sub
push
lcall
add
loope
pop
or
cmp
inc
push
dec
idivb
dec
inc
mov
outsl
pusha
mov
mov
stos
add
mov
inc
lcall
in
popa
mov
inc
mov
jns
mov
jp
push
aam
xchg
pop
or
or
pop
mov
mov
iret
flds
or
dec
pop
das
jb
cmp
sub
sub
call
or
pop
pop
jb
cld
cmp
push
ds
ss
jg
in
push
mov
repz
imul
popa
outsb
sbb
fsub
xchg
or
sbb
mov
loop
pop
orl
lods
into
sbb
lahf
shll
pmulhuw
cmp
inc
test
imulb
andb
mov
cmp
call
inc
pop
mov
mov
xor
cltd
stos
jae
push
push
mov
jnp
mov
mov
jmp
inc
pop
mov
fistpl
xchg
jmp
dec
lock
clc
jbe
adcb
shl
sub
lds
jno
pop
scas
jo
add
lock
jne
sti
shrb
bound
ss
sbb
das
outsb
add
fisubs
ds
pusha
or
add
into
lret
push
dec
loopne
sub
leave
push
push
lahf
adc
dec
or
aas
mov
jnp
mov
or
pop
stos
lret
mov
push
xchg
mov
aam
pop
xchg
dec
fisttpll
xor
movsl
xchg
pop
aad
xchg
inc
scas
sub
paddusb
mov
mov
dec
jo
loopne
mov
adc
in
dec
cwtl
jp
std
or
mov
arpl
xchg
dec
xlat
adc
es
push
idivl
or
fcomps
sub
into
repnz
sti
fdivl
inc
stos
xlat
inc
and
sahf
shlb
cwtl
or
insl
mov
xor
pop
or
iret
lret
out
lea
pop
fwait
jbe
addl
sub
clc
fcmove
and
repz
and
addr16
adc
mov
sahf
jecxz
bound
adc
fdivs
hlt
and
shrb
or
dec
dec
xchg
test
ja
mov
pop
inc
pop
ja
cld
sbb
movsl
xor
or
daa
sub
outsb
dec
lcall
cltd
sahf
es
in
cld
in
mov
movsb
jnp
addr16
movsb
mov
jno
aad
imul
and
add
inc
push
jg
out
fcmove
arpl
loope
ss
imul
jb
and
les
outsb
mov
or
cmp
mov
xor
pmuludq
push
fwait
imul
les
daa
push
pop
xor
and
cmpsl
mov
push
jno
add
mov
fs
clc
rcrl
js
repz
arpl
and
les
leave
jl
dec
add
xchg
insb
pop
push
lret
into
inc
cwtl
int
push
mov
je
in
outsl
pop
sahf
aad
xchg
outsb
int
shlb
int3
out
mov
push
fadd
into
push
pusha
fimull
iret
dec
dec
test
jg
pop
cmp
scas
ficoml
ljmp
mov
es
stos
inc
push
mov
mov
pop
inc
inc
lods
test
mov
mov
loop
xchg
cmpsl
dec
insl
fwait
add
lods
int3
lcall
push
mov
sahf
lcall
push
xor
xchg
movsl
pop
or
adc
leave
xchg
fbld
inc
push
and
push
mov
sbb
inc
popf
js
and
jge
dec
loopne
pop
mov
lret
movl
mov
lea
push
stc
push
xchg
aam
jns
notb
idivl
nop
jecxz
test
notb
or
stc
stos
push
adc
nop
sbb
xchg
dec
jmp
int
push
dec
dec
push
mov
xchg
sub
inc
mov
fildl
stos
or
scas
sbbl
loope
inc
inc
popa
and
fbld
adc
pushf
lock
lret
jns
mov
push
and
incl
xchg
lods
gs
test
mov
mov
mov
fdivrp
nop
sarl
pusha
leave
lods
mov
mov
jae
sbb
push
insb
push
je
shlb
dec
and
int3
outsb
daa
mov
gs
jne
bound
or
and
jmp
add
mov
push
jae
mov
daa
lds
xchg
dec
movsl
adcl
xlat
into
test
test
mov
aaa
sbb
je
mov
loopne
cld
scas
mov
ror
sbb
loopne
sub
adc
movsl
and
xchg
inc
xchg
dec
pop
or
aaa
popa
adc
xor
mov
mov
and
rorl
int3
stc
push
shl
pop
mov
cli
out
xorb
clc
lock
or
mov
in
lret
int3
sub
jae
loope
pop
jnp
rorl
mov
or
xor
pop
xchg
lret
mov
outsl
loopne
xchg
insb
sub
shrb
test
iret
xor
jnp
les
mov
lds
mov
sbb
mov
ja
dec
fsubrs
jmp
xor
icebp
shrl
dec
ret
cltd
cli
push
sbb
push
fildl
xchg
push
sub
jmp
test
clc
mov
pop
and
adcl
mov
sub
inc
jmp
or
mov
push
inc
std
push
fiaddl
lock
cmp
inc
jns
leave
aam
pop
hlt
fsubrl
vphadduwd
lret
jecxz
pop
xchg
ljmp
mov
aad
cwtl
add
push
xor
or
jb
or
addr16
lret
lcall
or
sub
sbb
cwtl
les
push
mov
call
outsl
lods
jge
jns
nop
fwait
xchg
inc
dec
lea
and
cwtl
leave
enter
ret
popf
mov
out
lea
push
push
cmp
and
lret
stos
jp
popf
xor
inc
mov
push
dec
mov
push
mov
dec
add
xchg
and
mov
mov
stc
xor
mov
loope
adc
and
jl
xchg
sub
lcall
pop
mov
xlat
adc
loopne
outsl
dec
mov
or
ja
enter
jne
mov
jnp
out
scas
rorl
nop
call
pop
stos
push
jbe
dec
sub
roll
fstl
and
jmp
into
les
andl
mov
mov
push
mov
push
data16
int3
inc
movsb
test
into
iret
aas
mov
mov
inc
pop
lahf
mov
sbb
scas
movsb
mov
enter
int
mov
adc
xchg
sub
mov
hlt
fstp
es
mov
fnstsw
out
pop
adc
or
icebp
xchg
or
and
outsl
repz
bound
xchg
add
or
fldl
in
test
mov
pushf
xorb
xchg
cmp
jbe
or
inc
inc
push
out
push
xor
mov
stos
and
ret
sbb
ret
jl
jae
lcall
inc
imul
sbb
dec
sbb
stos
mov
test
mov
in
xchg
push
movaps
push
xor
fadd
pop
sbb
out
inc
mov
ds
mov
loop
fnstenv
rcl
es
or
cmp
mov
or
andb
dec
in
rcrl
out
dec
sarb
inc
icebp
cld
ret
das
add
adc
mov
mov
fs
ret
divb
cmpb
jg
or
loope
stc
lock
test
js
sub
cmpsb
pop
cmp
pushf
sbb
or
adc
cwtl
jg
es
mov
add
xchg
in
xchg
pop
xchg
mov
sub
pop
fists
inc
sub
add
inc
pushf
rcl
xor
dec
pop
push
jmp
dec
dec
pop
xorl
rcll
and
adc
sub
inc
sbb
mov
or
int
mov
xchg
cmpsb
imul
push
lahf
push
fimull
imull
fmuls
subb
pop
pop
pop
movl
mov
mov
cmpsl
mov
stos
test
out
addl
xchg
sub
xchg
scas
addr16
jns
popl
fsubrs
rcr
sbb
aas
jg
repz
mov
insl
mov
scas
jb
inc
add
inc
xor
jl
xchg
lcall
add
push
repnz
shl
sub
daa
or
negb
lods
jg
outsb
inc
jnp
bound
daa
push
std
sub
add
pop
or
hlt
inc
scas
push
mov
sub
sahf
mov
adc
mov
xor
push
popa
mov
xor
ljmp
pop
ret
xchg
inc
aas
cmp
stc
pop
in
sbbb
cmc
loop
pop
adc
stos
outsb
xchg
push
loope
rol
ja
jmp
sub
popf
push
call
mov
inc
iret
mov
pop
push
cwtd
lods
mov
cmp
dec
jae
inc
xorb
out
ret
pop
cmp
xchg
mov
fisubrs
xchg
mov
insl
push
cltd
insl
dec
je
jp
adcb
cmp
inc
dec
push
adc
cld
leave
fs
xlat
mov
xor
ss
mov
pop
loopne
adc
rcr
xor
loopne
pop
push
and
mov
mov
leave
pop
xor
jp
add
inc
stos
mov
stos
mov
ja
inc
fisubrl
inc
lret
jge
in
insb
dec
loopne
das
popf
popa
fcompl
inc
xchg
in
jbe
mov
aad
pop
mov
adc
popa
adc
cmp
fadd
dec
mov
imul
mov
pushl
es
dec
sarl
cltd
dec
js
ja
cmp
or
dec
sbb
jmp
outsl
les
sub
adc
outsb
or
add
ret
xor
mov
push
sbbb
cmp
xlat
fwait
ja
adc
or
mov
push
outsl
adc
xchg
xchg
mov
les
popa
push
imul
dec
repz
add
lcall
mov
or
pop
adc
jmp
lret
sbbl
pop
repnz
or
daa
fcoml
push
repz
add
add
cld
rcrl
out
cmp
mov
cmp
sbb
adc
push
push
xchg
arpl
inc
in
insb
mov
scas
scas
mov
jp
jno
icebp
repz
fisubrs
mov
mov
pop
sub
sub
fwait
aam
pop
gs
adc
pop
mov
xchg
es
mov
cmp
ja
adc
mov
and
fbld
xlat
xchg
push
insl
popf
sub
xchg
ret
in
loopne
push
aam
pop
pop
and
insl
push
add
jg
sbb
loope
shlb
cs
and
aam
cs
xchg
inc
inc
fdivrp
mov
aam
mov
cltd
and
ror
mov
lret
jecxz
pop
xor
and
popf
mov
in
mov
shll
testb
leave
mov
cmpb
aad
roll
xor
push
ss
xlat
xchg
and
jbe
xor
jecxz
push
pop
inc
leave
sub
xchg
shr
jne
fs
add
xor
sbb
mov
mov
dec
aam
sub
dec
xor
add
sti
out
inc
iret
pop
push
arpl
add
into
rorb
push
add
pop
and
scas
inc
mov
mov
dec
push
mov
sbb
mov
mov
sbb
mov
movsb
push
mov
repnz
adc
arpl
and
shlb
inc
sub
adc
in
insl
or
jb
xor
repnz
mov
add
cltd
inc
xchg
jl
or
bound
test
insb
push
daa
inc
in
lock
cmpsb
lahf
push
jmp
add
dec
sub
loop
cwtl
iret
je
in
fdivrs
gs
sbb
adc
nop
inc
jp
inc
sbb
pop
sbb
hlt
test
push
pop
xchg
popa
movsb
dec
sahf
cmp
je
enter
or
dec
dec
cmc
jns
shrb
xchg
lods
lods
push
scas
fcoms
lea
jp
loope
sbb
mov
ds
or
inc
repnz
in
or
push
adc
adc
jecxz
inc
roll
cmc
push
and
inc
pop
push
mov
movb
outsb
int3
adc
scas
sbbl
adcb
jno
add
lret
es
shl
loope
inc
dec
int
and
add
pusha
rolb
ds
mov
dec
add
rep
adc
cmp
mov
das
jecxz
xchg
scas
inc
repnz
or
sbb
repnz
push
push
xlat
sbb
test
push
leave
jb
xor
negl
test
jle
insb
xor
dec
bound
in
scas
in
jge
not
pop
sub
sbb
or
ficomps
outsb
mov
mov
xorl
add
in
fsubrl
out
jg
stos
repnz
popa
cld
sbb
push
adc
cli
fimull
rol
adc
jle
out
jmp
iret
aad
push
mov
ret
hlt
cmpsb
out
xor
xchg
sbb
pop
xlat
or
pop
cld
dec
mov
sbbl
mov
inc
mov
push
addr16
aaa
xlat
mov
jne
mov
push
mov
mov
and
dec
les
xor
xor
divl
cmp
loopne
mov
fwait
or
das
mov
loopne
cmpsb
aas
gs
pushl
out
out
cmc
and
aam
pop
or
insl
pusha
mov
add
ljmp
mov
sar
add
jmp
stos
pusha
es
jmp
pop
dec
fs
sub
sub
daa
gs
loop
iret
mov
stc
add
sbb
call
jg
jmp
xchg
dec
adcl
xor
sub
mov
push
push
out
xor
fbstp
cmp
mov
adc
inc
out
pop
push
rolb
xchg
mov
out
gs
shlb
jae
dec
jge
sub
mov
sar
fbld
jae
mov
pop
sti
jl
fidivs
cs
dec
repz
jle
ljmp
lfs
pop
mov
stos
jae
loopne
inc
daa
sahf
cltd
and
shrd
pusha
insl
fimull
fnstsw
mov
out
out
dec
fwait
xchg
sbb
mov
lock
imulb
cld
xchg
ds
movsl
daa
imul
cld
mov
ja
jmp
popf
dec
call
push
inc
push
sub
lea
jb
or
pop
xor
stos
xchg
int3
cmp
lds
jecxz
dec
mov
jbe
mov
mov
jmp
pusha
test
fwait
mov
lret
jle
arpl
outsl
les
or
sub
shlb
add
push
bound
je
negb
sub
fisubl
stos
into
mov
loop
sbb
adc
sbb
cmp
clc
loopne,pt
dec
pop
pop
clc
push
rorl
jle
pop
mov
lahf
aad
xor
loopne
jp
sbb
mov
lods
gs
out
mov
inc
out
push
jnp
popf
cmp
or
push
lret
rolb
and
xchg
ljmp
sbb
push
dec
mov
push
jae
movsb
outsb
ficomps
xor
xor
pop
add
jb
icebp
mov
aaa
inc
lods
push
mov
cmp
or
inc
push
or
inc
cmp
pop
mov
push
lcall
pop
xor
cltd
imull
or
jecxz
jo
sbb
xor
mov
mov
mov
mov
dec
scas
dec
xlat
push
imul
pop
xchg
scas
in
sbb
daa
and
jmp
lret
or
sub
lret
mov
push
loopne
push
loop
mov
gs
sahf
cmp
int
or
pushf
adc
adc
outsb
sub
mov
mov
jb
dec
pop
js
clc
xchg
or
xchg
imul
testb
test
sub
les
insb
movsb
mov
and
mov
jnp
push
out
inc
ret
sbb
xchg
or
lret
or
dec
inc
stos
push
sahf
mov
push
shr
cmp
in
test
fwait
mov
jle
add
mov
push
add
clc
repz
out
adc
inc
pop
scas
ds
les
sub
cmp
ret
jg
outsb
inc
mov
aad
xor
les
jne
pop
adc
push
pop
loop
stos
lock
or
xchg
mov
imul
fstps
xchg
in
mov
fdivr
sub
gs
jbe
sti
mov
stos
ljmp
push
xchg
add
and
jnp
adc
sub
pusha
xor
jne
test
pop
inc
fldt
and
in
sbb
add
jp
cmp
cmpsb
repz
dec
mov
push
and
dec
pop
pop
xchg
cmp
ljmp
xchg
fisubrl
cmp
lahf
jbe
mov
es
sub
or
insl
fisubs
in
xchg
mov
je
dec
in
or
pop
mov
pop
push
and
adc
lods
pop
xchg
jle
mov
mov
jle
rorb
jecxz
rclb
jne
sub
pop
loop
mov
sub
out
pushf
stc
push
mov
mov
outsb
imul
imul
push
dec
mov
daa
push
mov
dec
push
dec
repnz
push
dec
sub
xchg
xor
aas
inc
rcrl
enter
lret
andb
std
in
jnp
out
dec
fstpt
mov
mov
in
mov
pop
sub
test
xlat
stc
outsb
int3
mov
xchg
dec
mov
int
aam
cmc
data16
push
adc
lods
mov
cmpsb
or
and
repnz
lret
jnp
mov
sahf
sti
popa
lods
jl
adc
mov
cltd
mov
jo
iret
rcl
jmp
cmpsb
push
mov
mov
in
mov
sub
mov
pusha
sub
shl
ret
cmpb
test
mov
inc
sahf
pop
rorb
gs
clc
adc
or
sbb
fcompl
out
jmp
inc
sbb
ja
jl
mov
stc
aam
push
mov
jno
xchg
and
lret
push
or
ss
push
mov
push
das
lods
imul
mov
mov
jb
decb
sbb
push
lock
dec
sahf
das
outsl
push
and
push
pop
stos
ret
jle
jecxz
or
lcall
add
xchg
ja
inc
in
cmp
xchg
jnp
pop
add
inc
mov
jmp
mov
lret
mov
fildll
cmp
jns
inc
pop
dec
sub
cmp
adc
fisubrs
pop
movsb
push
adc
ljmp
adc
and
xchg
mov
cmpsl
inc
stos
out
xor
inc
or
in
fnstsw
jne
sbb
in
push
jo
mov
push
cmp
mov
pop
scas
xchg
jno
dec
out
ljmp
cmovns
inc
mov
shll
iret
or
jns
mov
das
pop
popf
inc
push
idiv
pop
or
lods
hlt
jns
sbb
ljmp
aad
xchg
lret
std
and
add
data16
sub
cmc
cwtl
nop
shr
mov
xchg
xor
fsubp
jae
xor
inc
loopne
cmpsl
data16
sbb
mov
mov
cli
orl
js
mov
jbe
je
call
mov
sbb
sub
mov
cmpsb
inc
mov
adc
mov
lea
inc
xor
imul
xchg
add
iret
lret
mov
lds
or
pushf
je
mov
sbb
mov
mov
jp
adc
sub
lret
iret
cld
sbb
push
nop
push
jnp
mov
cmpsl
push
push
iret
sub
ret
in
pop
adc
mov
inc
mov
mov
mov
pop
aas
imul
pop
xlat
into
push
fidivrl
loop
bound
xor
shrl
fs
add
and
mov
sbb
jl
adc
fcmovnu
mov
mov
push
ljmp
frstor
inc
cmpsb
je
add
repz
jnp
pushf
xor
repz
mov
orb
dec
jp
inc
and
cmpsb
daa
iret
stc
repnz
or
jns
pop
xor
lret
cwtl
push
incb
xchg
or
lcall
add
addr16
add
hlt
outsl
add
arpl
pop
xchg
jb
iret
pop
stos
into
mov
inc
and
addb
sahf
ss
mov
out
mov
adc
mov
xchg
add
or
sbb
aad
xor
dec
jecxz
mov
xchg
and
cmp
stos
sbb
push
mov
out
idivb
inc
dec
and
fdivrs
pop
pushf
lcall
lods
mov
test
std
out
jne
sbb
jmp
mov
push
fnsetpm(287
xchg
jg
repnz
mov
stos
sbb
pop
xchg
outsl
js
out
aad
int
rcrl
mov
fisubl
cmp
jns
arpl
mov
inc
cs
cmp
shr
mov
aam
xor
sbb
pop
sub
push
xchg
cmp
clc
push
mov
lods
or
lcall
ss
arpl
add
aad
add
divps
cld
cmpsb
and
jnp
cmpsl
xor
arpl
popf
cmp
jb
divl
or
xor
pavgb
iret
mov
ffree
pop
push
xor
inc
fnstsw
insb
mov
dec
loop
xchg
popa
and
push
or
push
divb
vshufpd
push
loopne
aam
xor
jae
xor
cmp
add
add
mov
int
add
fwait
jns
mov
test
es
gs
and
jecxz
push
push
pusha
mov
mov
pop
jle
and
out
test
mov
sbb
sub
push
lret
push
jmp
jl
out
fisttpl
jb
ficoms
add
or
push
push
stos
push
psubd
pop
add
push
xorb
or
outsb
push
stos
and
aam
adc
mov
nop
out
adc
fmull
cmc
cmpsb
xchg
and
push
cs
push
bound
repz
fadds
rorb
ljmp
sbb
mov
push
outsl
adc
call
cld
imul
lock
cmp
loope
rcrb
inc
xor
mov
mov
jo
popf
lods
mov
insb
out
lods
enter
movhps
xchg
shlb
shll
jae
xchg
aaa
pop
dec
cli
pop
lock
jnp
jae
xorl
sub
mov
pop
xchg
test
clc
std
into
jnp
or
adc
xor
lods
cmp
cmp
add
fwait
ljmp
jbe
mov
or
mov
and
jne
mov
jbe
dec
push
and
popf
stc
in
mov
aaa
inc
xor
sti
add
mov
bound
push
fwait
adc
ljmp
fsubp
xchg
pop
push
sub
or
and
sub
sbb
push
cmp
vpminsw
jns
add
jbe
pop
adc
sub
ret
lods
mov
lods
xor
lds
aaa
nop
stos
pusha
inc
insb
pop
jb
arpl
sbb
jecxz
lock
xchg
repnz
sub
pop
mov
lds
and
int
stos
mov
inc
imul
mov
jno
pop
mov
fdivl
xorb
out
lea
imul
cmpb
ret
or
jnp
jne
jns
test
leave
jnp
mov
add
sahf
jb
cltd
jb
add
jle
sbb
rcll
lods
movb
jne
add
add
nop
mov
mov
enter
scas
push
xchg
in
and
imul
imul
mov
push
cmpsl
jb
shlb
mov
or
mov
pop
dec
imul
push
mov
mov
or
and
leave
insl
cmpsb
push
flds
xlat
or
mov
inc
mov
cmp
imul
adc
adc
pop
mov
jle
mov
mov
push
jle
sbb
cmp
cli
and
cmp
or
sbb
mov
scas
cmpsb
stos
mov
jae
lret
jae
int
outsl
mov
or
and
in
fldl
cmp
inc
xchg
adc
push
stos
add
cli
loopne
jne
dec
sbb
pusha
outsb
es
lea
lret
sub
jb
stos
xchg
mov
adc
cmp
push
imul
mov
adc
push
inc
adc
push
je
or
addl
sub
mov
into
add
gs
and
pushf
xor
sbb
pop
inc
rcrl
iret
int
push
pop
sub
stos
loop
or
jge
add
jno
mov
mov
ds
and
les
mov
mov
and
mov
ret
and
cmpl
and
mov
mov
sbb
mov
jp
mov
repz
lcall
sbb
xlat
in
pop
dec
mov
jecxz
push
jmp
std
push
pusha
ret
rcrl
lea
dec
jne
sbb
adc
in
subb
sub
mov
and
jo
inc
mov
jne
jecxz
mov
cltd
movsl
addr16
pushf
cmp
sub
mov
pop
dec
out
aam
shlb
or
mov
testl
jae
aam
mov
mov
xor
cltd
out
into
lods
jbe
mov
and
push
cld
das
stos
add
fwait
mov
addr16
in
xor
pop
stos
pop
add
cli
sub
loope
mov
cmp
pop
or
inc
dec
subl
loopne
pop
lea
pop
fnstenv
mov
lcall
mov
sahf
xor
mov
leave
dec
cmpsb
adc
stos
mov
jnp
sti
das
pop
mov
cld
sub
mov
test
int
mov
inc
gs
fsts
mov
les
fnstcw
dec
mov
movb
mov
bound
inc
or
jle
and
push
pop
movsb
leave
pop
xor
nop
add
out
push
mov
mov
jbe
sbb
pop
jo
cmp
jne
mov
mov
shr
int3
je
mov
cmpsb
cmc
nop
xchg
and
sub
push
xchg
nop
mov
lret
and
hlt
lcall
push
fwait
cmpsb
shl
int3
jmp
das
adc
mov
adc
or
jmp
sub
cmp
je
lock
fcoml
jg
pop
cli
leave
out
ljmp
stos
cs
test
or
pushf
imul
aad
lock
mov
push
or
out
adc
mov
neg
pop
mov
jl
inc
and
mov
lahf
mov
push
add
xchg
out
cmp
sub
cmp
sti
lea
negl
repnz
iret
add
pop
lahf
push
sub
fwait
push
pushf
aas
lret
add
in
mov
outsb
repnz
xor
xor
adc
out
in
or
outsb
lods
sahf
mov
sbb
cmp
lahf
lret
dec
mov
loope
sub
or
jno
std
mov
into
pop
and
push
inc
xor
cs
sub
cs
leave
imul
and
in
aad
rorl
and
mov
test
movq
in
and
std
jno
filds
out
sub
inc
sub
mov
dec
inc
and
add
mov
xchg
pop
dec
jp
jne
add
gs
mov
fcoms
push
gs
mov
jo
mov
data16
lret
mov
stos
and
adc
cmp
repz
or
sarl
or
ja
fs
sub
cmpsb
and
jecxz
cmp
xor
mov
lods
or
jl
test
popf
pop
xor
es
sub
add
movsb
and
outsl
inc
ljmp
mov
and
negb
push
imul
shlb
cmpsl
clc
xlat
inc
lcall
pushl
test
dec
pop
jle
xchg
lock
cltd
or
cli
aad
mov
stos
repnz
push
rcll
pop
lods
inc
daa
xchg
mov
or
call
add
mov
js
mov
sub
movsl
out
mov
pop
lods
dec
add
jae
mov
gs
fnstenv
pop
repnz
adc
push
inc
mov
dec
imulb
ss
sub
mov
sub
mov
and
fwait
aam
loopne
aaa
pop
add
lahf
pop
xor
jmp
out
xor
xchg
push
jnp
jp
out
leave
sbb
iret
sarl
mov
fnsave
and
xor
test
inc
bound
stos
lcall
adc
test
or
mov
mov
cmovne
cltd
xor
cmp
adc
add
or
ss
mov
outsl
adc
aas
popf
call
jmp
mov
dec
mov
clc
fucomip
adc
daa
stos
jecxz
dec
and
xchg
jle
in
sub
push
into
mov
mov
testb
cli
stos
jo
dec
push
daa
fwait
dec
mov
inc
out
adcb
dec
rcl
fistps
or
or
loope
or
fwait
ja
sbb
addb
or
js
ficompl
xor
mov
mov
mov
cld
dec
jecxz
sahf
lea
pusha
sub
sbb
add
out
mov
je
add
mov
ljmp
push
pop
popa
loope
daa
movsl
pop
sahf
xor
push
pop
mov
inc
lods
jnp
inc
or
xor
cmc
push
gs
cmp
or
mov
mov
pop
jae
repz
inc
adc
mov
aaa
pusha
push
or
jnp
test
ret
sub
xor
mov
mov
lods
sti
inc
repnz
fwait
xchg
push
aas
push
movsl
inc
gs
pusha
add
cmpsl
dec
mov
aad
inc
xchg
ret
jge
xchg
in
mov
pop
jg
loope
mov
dec
scas
push
inc
push
adc
stos
sbb
ljmp
pop
cmp
jb
inc
daa
imul
loopne
xor
inc
or
xchg
inc
out
cmp
stos
pop
ljmp
out
add
xor
sarb
push
std
jmp
or
inc
in
push
sarb
or
jo
fistpl
dec
mov
inc
scas
roll
loope
xchg
imul
sub
xor
mov
ljmp
cmc
push
inc
adc
cltd
iret
es
divb
lretw
and
or
insb
and
cmp
mov
sarl
aas
xchg
ja
shr
add
fs
fisttpl
push
ret
xor
and
shrl
add
jnp
cmp
push
or
push
adc
outsb
out
ror
cld
mov
mov
lods
sbb
fnstsw
cmp
sub
cmp
adc
jl
jmp
in
sbbb
pop
inc
and
push
jmp
test
fistps
ljmp
inc
rcrl
dec
jno
cltd
dec
jg
out
pop
in
jns
ds
imul
or
movsl
lods
lsl
adc
clc
imul
jbe
push
sub
mov
or
ret
mov
lcall
stos
mov
jo
lcall
push
add
mov
mov
std
xchg
xchg
dec
sub
fwait
imul
std
jg
pop
pop
cld
dec
lock
add
or
xlat
mov
sub
repnz
fimuls
lea
lret
adc
mov
sbb
arpl
fwait
jmp
je
arpl
js
add
dec
jo
pop
push
ret
mov
mov
mul
not
aas
mov
xchg
ds
jbe
cmpsb
inc
imul
movsb
xchg
cmpsl
ret
inc
int
add
push
in
jl
push
cmp
fimull
lea
dec
bound
sub
xor
sbb
imul
add
dec
shr
test
add
inc
adc
fists
daa
push
into
mov
xchg
and
and
iret
cs
lahf
dec
adc
sbb
mov
aaa
xor
data16
jnp
dec
mov
push
jno
cld
cli
icebp
negb
scas
and
pop
bound
push
or
inc
negl
sbb
cli
adc
jno
mov
jle
pop
mov
sbb
ja
daa
cmp
pop
mov
sub
pop
mov
inc
daa
cs
push
sub
bound
fadd
ljmp
sub
jl
sbb
cmpb
mov
movsb
mov
jne
cli
ss
stc
pop
aas
xchg
int
sarl
bnd
imul
out
xchg
shlb
sti
fs
in
pushf
xchg
add
push
fsubs
sbb
add
dec
inc
jnp
cmp
jp
or
pushf
push
out
jg
shll
jg
pop
rcrb
ret
inc
mov
repz
push
or
add
addr16
push
clc
shlb
nop
xor
cmp
ss
shrb
fldcw
repnz
adcl
pop
pop
sub
imul
mov
push
rclb
xlat
mov
pushf
jmp
xchg
data16
lods
ljmp
jl
dec
mov
xlat
cmp
loopne
or
or
pop
mov
mov
pop
adc
test
pop
jl
xchg
and
std
pop
adc
jae
mov
imul
int
mov
push
mov
addr16
imul
cmc
xchg
arpl
int
addr16
aaa
dec
faddl
cmp
push
pop
andw
mov
fs
in
cmpb
lods
cli
shlb
xlat
out
into
fnstsw
mov
ret
add
dec
js
scas
je
xchg
or
jo
fsubrl
pusha
jmp
dec
pop
push
mov
out
mov
cmp
out
mov
pusha
mov
clc
fidivs
jne
mov
out
jp
pusha
pop
or
inc
add
stos
gs
mov
mov
scas
flds
add
mov
mov
mov
pop
dec
add
ficompl
loopne
fidivrl
inc
mov
cld
mov
fstpt
mov
lret
pop
es
jle
ficomps
mov
cmp
inc
jo
addl
sbb
xchg
push
add
mov
pop
das
cli
in
outsl
out
dec
movsb
inc
stos
or
leave
sub
dec
out
fildll
test
outsl
xchg
dec
dec
pop
sub
xchg
lods
mov
inc
imul
mov
mov
adc
or
cmp
inc
mov
outsb
cmp
fmuls
lret
negb
inc
cmp
jne
cmc
ja
pop
pushf
jg
mov
fnstsw
cwtl
std
xor
enter
aam
pop
push
mov
push
push
cmp
cmp
mov
cmp
mov
inc
outsl
lds
jmp
lods
out
xor
adcb
push
push
outsl
call
xor
xchg
decl
dec
movsb
or
lock
aam
stos
mov
add
jle
xchg
push
aaa
or
add
push
cmp
pop
icebp
inc
imul
mov
cltd
iret
sbb
outsl
jp
mov
and
mov
mov
xor
rcl
xor
inc
call
lods
mov
iret
enter
addr16
inc
dec
fwait
dec
mov
addl
andb
pop
inc
addb
mov
cvtps2pi
push
sbb
adcb
jp
jb
mov
or
in
inc
adc
adc
sbb
das
das
jns
sti
icebp
jle
lods
sarb
and
or
cltd
lea
dec
cmc
cmp
aas
jbe
cltd
pop
sbb
ret
orb
sarl
cmp
cmp
dec
sbb
lds
insl
out
sub
pop
les
push
mov
push
mov
xor
fidivl
xchg
push
pop
push
dec
adc
jne
push
cmp
lret
mov
mov
cld
xchg
adc
and
mov
adc
addr16
or
fsts
push
mov
cmp
dec
cltd
outsb
in
inc
push
addr16
dec
or
and
test
mov
jmp
fwait
stos
xchg
fimuls
jge
mov
nop
cwtl
or
aad
lods
imul
sbb
xor
adc
push
out
dec
fnstenv
scas
and
xor
add
aad
stos
and
movsb
inc
imul
mov
xchg
pop
mov
mov
inc
inc
test
imul
xor
fstps
iret
repz
mov
inc
pop
push
ljmp
mov
adc
pop
push
movntps
add
mov
mov
jno
sub
xor
shll
sbb
pop
push
jle
insb
out
sbb
test
and
fcmovu
or
ficoml
dec
pushf
jno
push
stos
sti
jp
jmp
jb
lret
push
call
in
and
mov
es
jo
out
add
cmpsb
push
pop
cmp
out
push
sbb
inc
cmp
push
pop
test
iret
cld
xchg
fs
insl
or
cld
int3
ret
pop
sbb
dec
sub
popa
pop
sbbl
cmpsb
fisubrs
jb
insb
xor
adc
dec
and
inc
xor
push
jmp
or
inc
pop
repz
push
cmp
xchg
ds
ds
icebp
jnp
adc
jbe
sbb
mov
pop
leave
mov
pop
mov
add
addl
xlat
cli
hlt
pop
sbb
add
repz
pop
fs
fsubrl
xor
pop
rcr
in
pop
mov
jmp
insb
push
in
outsl
in
cmpsl
rclb
les
fsubl
pop
push
pop
push
jmp
aaa
xchg
mull
and
shll
aad
popf
outsl
addb
cli
lods
mov
dec
bound
cmp
jo
jo
iret
inc
mov
mov
jae
cmpsl
imul
std
aam
movsb
xor
mov
dec
cs
out
rcr
inc
mov
aas
lock
mov
repz
int3
xor
rolb
gs
push
jb
ficoms
dec
cmpsl
xor
xor
xor
mov
pop
fwait
sub
ret
xlat
ret
inc
stc
lock
arpl
js
jne
and
xor
js
push
addr16
mov
pusha
icebp
lods
sub
cmpsl
push
movsl
pop
fadd
cmp
push
outsb
sub
mov
and
in
jmp
into
out
sbb
pop
cmp
nop
loope
aas
je
hlt
std
mov
or
outsb
push
fnsave
mov
or
xchg
call
out
ja
fnstsw
testb
and
xor
mov
mulb
mov
fstpt
sar
test
aas
push
pop
scas
es
and
sbb
xchg
out
lahf
mov
cmpsb
jg
inc
mov
and
inc
in
xor
pop
out
xor
mov
mov
dec
add
mov
das
lods
repz
cli
rcl
cmpsl
out
in
dec
push
cmpb
pop
xchg
jmp
outsb
aam
jne
arpl
imul
enter
repz
mov
pop
lcall
cltd
jecxz
incb
roll
and
ja
mov
dec
mov
fs
lea
scas
sahf
mov
ja
push
mull
iret
and
es
in
stc
jno
jmp
adc
sub
sbb
xchg
mov
fisubrs
xor
push
lods
stc
mov
mov
test
movsb
daa
cwtl
shr
icebp
movsl
push
mov
pop
xchg
shrb
inc
adc
repz
inc
xor
rcll
or
mov
sub
xchg
jb
in
push
into
add
scas
mov
js
sbb
jo
push
push
sti
adc
sub
xchg
lock
sbb
insl
aad
das
int3
mov
addr16
lahf
mov
das
mov
loope
xchg
or
jo
test
xchg
cs
cmp
imul
cmp
push
adc
lods
push
cmp
mov
subb
jnp
xor
adc
ljmp
pusha
cs
lea
int3
test
push
sbb
jne
fwait
sbb
cli
lds
mov
mov
mov
xor
aam
mov
stos
dec
rorb
fwait
or
testb
mov
popf
nop
sbb
push
mov
imul
jl
ja
mov
pop
repz
rorb
pop
addl
mov
cmp
in
xchg
cmp
or
ret
in
pop
cmp
mov
xor
insb
repnz
add
pushf
jg
data16
outsb
mov
cmp
shlb
sbb
push
fwait
ds
in
lea
sbb
sub
sbb
enter
ja
jbe
arpl
mov
add
dec
das
cmpb
cld
xor
xor
jnp
inc
mov
fwait
loope
rcr
dec
sbb
test
and
add
mov
addr16
fisttpl
hlt
inc
imul
push
aaa
ret
rorb
addr16
dec
lcall
adc
addr16
fsubs
in
dec
cmc
or
xor
jae
fs
mov
inc
sub
lcall
sbb
mov
push
out
mov
xor
mov
aas
test
mov
pusha
fmull
or
movsb
icebp
and
mov
sbb
and
push
cmp
sbb
icebp
dec
subl
test
dec
mov
sbb
repz
cmpb
lock
inc
popa
pop
mov
inc
das
loop
jge
add
sbb
mov
addr16
rorb
mov
ffree
and
sbb
xchg
lods
dec
dec
dec
clc
xorl
mov
pop
shrl
or
or
inc
out
je
pop
popa
sbb
imul
int3
inc
outsl
adc
mov
jmp
lods
fnstenv
xchg
ljmp
in
xchg
xchg
pusha
out
outsb
fmuls
dec
inc
add
outsl
and
mov
cmpb
loop
cld
fucomi
push
fnstenv
fmulp
inc
loope
and
cld
out
fisubrs
hlt
xor
in
and
std
jl
test
mov
mov
lret
dec
cmp
mov
xor
sbb
push
xor
lret
in
push
or
or
and
aaa
push
push
fdiv
or
les
pushf
cmp
fildl
mov
out
dec
xchg
add
jge
loope
das
sbb
or
stos
pop
leave
mov
mov
dec
xlat
popa
lods
in
test
and
push
jne
rclb
pushf
fidivrs
add
out
orb
clc
cmp
jb
xor
and
enter
rcl
sub
and
imul
cs
dec
clc
sbb
xorb
push
cs
push
subb
push
ret
inc
fs
out
mov
adcb
mov
sub
dec
insb
mov
arpl
ljmp
mov
int3
adc
or
ret
mov
popf
lret
es
dec
xchg
pop
pop
and
js
cmpl
unpcklps
or
stos
sbb
sub
mov
mov
popa
aaa
out
fstl
pusha
pusha
jg
xchg
fisttpl
mov
outsb
fiaddl
pop
add
mov
movsb
sbbb
sub
stos
fdivrs
es
in
lcall
jp
cmp
or
xchg
xlat
sub
shlb
sub
aaa
xor
lea
push
xor
leave
dec
stc
test
stc
xchg
mov
fimuls
sbb
test
mov
dec
xor
xchg
mov
in
xchg
mov
lea
fildll
insl
popa
pop
fimuls
repz
jecxz
cwtl
outsb
mov
in
mov
sbb
inc
arpl
jge
mov
sar
clc
and
fwait
adc
insb
sbb
push
pushf
jp
pop
xchg
push
std
shlb
mov
add
dec
js
fimull
cmp
pop
cs
ret
mov
cmp
mov
pop
outsl
das
nop
and
stc
xor
daa
adcl
mov
sbb
push
addl
push
popf
jmp
dec
fsubs
pop
jle
push
jmp
mov
fimuls
mov
pushf
stos
adc
popa
orb
cmpsb
and
cwtl
inc
insb
rep
mov
cmpb
aaa
stc
ja
loopne
sub
mov
jmp
xor
aaa
adc
insb
test
cmpsl
cli
aad
std
mov
inc
and
sub
dec
jle
mov
ljmp
dec
push
jnp
mov
mov
test
add
fsubl
adc
push
pop
bound
imul
add
jp
andl
mov
fwait
iret
dec
repz
jo
hlt
cmp
clc
daa
out
jne
lahf
scas
pop
shr
mov
lods
movsl
enter
xor
xor
repz
lods
in
or
jns
sbb
sbb
push
pop
pop
daa
adc
pop
and
mov
lods
int3
sbb
aaa
dec
xor
and
pop
movsb
pop
add
sbb
test
sub
sub
xchg
idivl
lods
sub
imull
push
repz
push
outsl
mov
inc
pop
adc
outsb
mov
inc
and
test
test
dec
mov
pop
gs
xchg
outsb
add
push
dec
inc
fistps
push
adc
gs
dec
lock
or
push
pushf
jmp
cs
inc
cmpsl
xlat
ljmp
mov
or
rol
sti
mov
sub
push
push
ss
scas
popf
jo
test
clc
pop
pop
popf
adc
sub
sub
jnp
add
aad
cld
mov
js
pop
dec
mov
cmp
fldt
pop
mov
fiadds
ret
inc
stos
call
and
xorb
xchg
xor
cmp
dec
arpl
jb
inc
pop
jecxz
jbe
inc
jne
aaa
int3
cs
push
xor
xchg
fstps
mov
mov
or
popf
les
into
es
test
lret
mov
popf
inc
inc
test
adc
mov
sbb
push
adc
jbe
movsl
mov
add
cmp
ret
cmp
cltd
mov
dec
xabort
jnp
in
add
loopne
fdivrs
mov
xor
in
lea
mov
mov
addr16
jecxz
dec
sbb
popl
push
sbb
out
test
loop
popa
ror
add
xchg
outsb
adc
shl
stos
or
orl
shrl
lret
pop
pop
nop
mov
mov
in
inc
nop
ret
stos
sbb
test
sub
mov
loope
add
and
stc
adc
gs
cmp
inc
int
popa
orw
loop
mov
sub
xor
es
movb
sbb
shl
test
mov
add
enter
mov
outsl
sbb
or
mov
pop
push
push
mov
adc
adc
sbb
jno
mov
jo
xchg
gs
test
and
cmp
jle
xor
int
jle
xlat
popf
das
mov
push
sahf
and
insl
mov
insb
out
stc
mov
sahf
repnz
mov
add
icebp
sub
lcall
inc
sbb
fadds
lret
pushf
inc
dec
enter
mov
inc
ja
mov
mov
mov
inc
movb
jnp
dec
fistpll
imul
sub
lods
mov
sub
adc
push
js
fimuls
jge
xchg
xor
out
clc
xchg
sar
mov
imul
jne
aaa
negb
cwtl
iret
repnz
aaa
stc
lods
in
adc
fs
enter
mov
lea
dec
inc
rcll
test
jnp
add
mov
leave
jne
mov
out
cld
fidivrl
sti
mov
jno
pop
js
jmp
sub
out
gs
sub
mov
arpl
cmp
int
js
cmp
adc
icebp
dec
out
test
shll
test
xchg
les
jne
sbb
loopne
addl
shlb
and
inc
adc
push
adc
or
or
call
sbb
and
lods
stos
adc
lret
push
xchg
dec
or
and
out
sti
scas
ficompl
scas
jp
sub
pop
sbb
cltd
mulb
cmp
leave
jae
loope
or
jae
pop
fstpt
aad
loope
adc
mov
mov
dec
sub
popa
pop
shlb
cmp
and
adc
je
and
lock
mov
pusha
mov
loope
mov
rcll
pushf
or
add
cmc
xor
push
dec
jmp
inc
push
sbbl
pop
aad
lock
push
hlt
sub
lret
dec
mov
lea
cmpsl
imul
mov
inc
xor
mov
scas
ret
ja
xlat
dec
xlat
sbb
in
aas
bound
mov
xchg
ret
xorl
xchg
lds
pop
jle
nop
push
ret
cwtl
shrl
out
mov
push
jg
lds
outsb
jb
and
lcall
addr16
cli
add
dec
cmpsl
push
ret
iret
dec
mov
jnp
jg
scas
or
mov
add
mov
xchg
adcl
sar
or
inc
movsl
ss
mov
add
xchg
mov
pop
arpl
xor
test
adc
push
fsubs
dec
xchg
adc
imul
dec
push
adc
fs
hlt
or
pop
mov
pop
pop
mov
in
cli
sbb
xchg
scas
lcall
adc
in
dec
adc
push
jp
xor
adc
or
mov
inc
rcr
add
scas
and
cmp
add
cmp
dec
cmc
xchg
and
insb
ret
js
popa
fs
mov
sarl
sbb
insl
fidivrs
push
pop
dec
outsb
pop
mov
jns
lahf
xchg
inc
lods
dec
adc
pop
fs
iret
sbb
outsb
in
mov
cmp
arpl
enter
adcl
out
adc
inc
add
adc
add
xchg
adc
add
hlt
dec
pop
iret
push
insl
shll
stos
push
cli
inc
in
das
sub
aam
xor
es
repnz
sbb
adc
mov
pop
sahf
push
mov
adcb
sbb
adc
addr16
rep
xchg
repnz
repnz
hlt
iret
mov
mov
sar
jmp
inc
mov
int3
enter
lds
push
jbe
dec
sub
jge
mov
pminsw
push
jmp
add
fsubrs
mov
pop
jge
outsb
out
push
sbb
mov
or
lret
shrb
or
pop
xlat
in
lock
gs
add
lret
insb
cmc
movsb
cmp
cli
inc
jns
xor
or
sahf
nop
or
dec
pushl
in
cmp
or
add
adc
or
sub
or
and
in
mov
jne
inc
cmp
adc
subl
mov
add
or
mov
inc
sub
mov
test
test
clc
and
pop
mov
add
cmpsl
lods
sbb
or
pop
cmp
mov
adcb
subb
xor
fmull
test
out
fs
cs
or
fisttpl
ds
jae
inc
pop
and
mov
dec
fcoml
mov
cli
and
mov
pushf
add
movsl
pusha
adc
jge
cld
sub
mov
push
jae
push
and
mov
mov
mov
inc
cltd
in
pop
mov
test
fnstcw
aad
adc
xor
or
fisttps
sbb
test
ja
cmp
std
push
and
out
stc
mov
lea
sbb
js
rclb
jle
lea
es
int3
repz
mov
push
imul
dec
sub
add
lods
mov
sbb
sbb
adc
into
pop
xor
add
mov
xchg
rcrl
into
out
testb
fimull
pusha
fbld
mov
call
outsb
push
rcrb
insl
sbb
push
push
call
cmp
xor
insb
int3
addl
xchg
or
push
mov
sbb
xor
lret
popf
jle
cli
data16
iret
dec
sbb
push
test
pop
jb
stos
pop
add
sarl
adc
cs
mov
push
jg
jne
aas
mov
jo
mov
sbb
stos
int3
push
enter
jno
daa
insl
gs
call
mov
fcmove
add
push
xor
dec
pop
dec
pop
popl
in
push
iret
sahf
cmp
xor
mov
popa
or
xchg
testl
in
jae
fistpll
pop
sbb
push
out
cmp
dec
jmp
mov
cs
lcall
pusha
push
pop
xchg
fiaddl
mov
cmp
cmp
testb
mov
pop
je
mov
sahf
or
or
sub
and
cmp
pusha
sbb
mov
jg
mov
cmp
cmp
int3
pop
dec
fwait
push
mov
or
in
mov
adc
aad
sub
test
cli
dec
test
addr16
add
xor
in
jns
dec
loope
or
sub
bound
imul
cmp
xchg
xlat
push
sub
insl
adc
pusha
mov
insl
and
loope
jl
mov
out
xchg
mov
aad
loope
fwait
dec
sub
xchg
jmp
xchg
sub
sbb
jae
pop
aam
pop
fisubrl
mov
sbb
adcl
mov
rcll
pop
jno
mov
bound
and
inc
and
js
xchg
dec
gs
rclb
push
add
jl
cli
sarb
xlat
rclb
in
mov
mov
stc
out
adc
inc
fidivs
mov
outsb
or
div
scas
xchg
dec
loop
mov
dec
es
in
or
aaa
sbb
fidivrl
ja
fcoml
aaa
adc
pushf
mov
sub
cmp
sub
sbb
out
ret
inc
xor
in
dec
adc
cmp
popa
fidivl
into
sub
dec
mov
cmp
inc
les
sbb
pop
shrb
ret
aad
leave
jle
xchg
sti
push
out
and
push
xor
push
outsb
jbe
cmp
in
lods
lods
push
cmpsb
adc
jge
xchg
lcall
mov
fdivrs
xchg
out
pop
lea
bound
imul
and
inc
sbb
mov
mov
pop
adc
stos
stos
sti
cltd
scas
roll
mov
pop
in
out
lcall
sbb
pop
test
dec
mov
mov
jbe
outsb
adc
xor
stos
test
lcall
shl
hlt
push
xor
mov
and
and
fldcw
inc
je
test
call
xchg
jle
add
lret
mov
add
aad
sub
add
clc
xor
loope
out
pusha
push
sub
adc
ret
push
add
cwtl
cmp
cmp
xchg
ror
repnz
gs
jge
push
fnsave
mov
push
cmpsb
pop
subl
fcmovnbe
cmc
les
push
adc
loop
es
fmul
stos
sub
add
arpl
jmp
adcl
cmp
fcompl
hlt
mov
mov
jae
cltd
or
jge
mov
jbe
ja
jnp
sbb
js
pop
sbb
jecxz
icebp
sub
xor
aad
hlt
mov
ret
es
enter
mov
xchg
inc
xor
cmpsl
cmp
lahf
loope
and
dec
pop
mov
lret
daa
cmc
and
es
stos
daa
enter
daa
into
add
insb
cmc
pop
out
cld
push
repnz
pop
mov
rcrl
aas
insb
xchg
pop
and
cmp
arpl
mov
mov
orb
popa
pop
rorb
mov
add
push
sti
push
inc
fildl
pop
mov
leave
mov
xchg
jne
arpl
fnsave
int
adc
inc
xchg
das
repz
dec
xor
fistps
pop
mov
mov
inc
movsb
icebp
push
bnd
add
inc
fwait
jg
icebp
add
sub
outsb
leave
pop
das
xchg
das
imul
lret
mov
inc
int
sbb
mov
pop
call
divb
loope
lahf
sub
sbb
add
nop
pushf
imul
dec
mov
mov
lock
dec
inc
icebp
sub
mov
aas
test
xor
stos
icebp
fmulp
insl
int3
push
scas
ss
and
stos
inc
add
sbb
inc
push
in
push
scas
jmp
mov
gs
fbld
fwait
js
add
mov
cmpl
outsb
inc
bound
mov
shll
popf
ss
xchg
dec
lret
fiaddl
xchg
subb
xchg
xor
ret
add
and
pop
sbb
ficomps
outsb
mov
sbb
xlat
xor
daa
jns
xor
icebp
xchg
data16
cli
insb
dec
fwait
push
lds
fs
jns
mov
xchg
xchg
dec
shrl
xchg
jae
push
aam
inc
das
push
insb
lds
aas
dec
jge
jno
pop
test
xchg
jae
mov
xchg
ret
int
icebp
cmpsl
sar
mov
mov
mov
sti
cs
std
mov
scas
jecxz
mov
ljmp
arpl
mov
inc
add
push
in
or
aas
adc
and
fldcw
les
lock
xor
xor
dec
lahf
aam
sub
testb
push
inc
mov
pop
xorl
icebp
jl
movsb
xor
mov
loope
shlb
imul
out
orl
push
cld
inc
push
push
fsubr
sbb
sub
pop
iret
daa
stos
pop
push
sbb
push
aad
xor
lods
int
xchg
mov
add
scas
ss
lahf
adc
dec
insl
test
xchg
jge
and
pop
lcall
or
or
add
loopne
mov
sub
jbe
sub
ss
add
jo
fisubrs
fnstsw
sbb
dec
clc
lea
cmc
xor
out
inc
mov
mov
xor
mov
sbb
xlat
lcall
xor
lahf
sarb
cmp
test
ret
cmpsb
push
inc
loopne
popa
stos
in
adc
mov
js
daa
addr16
push
loop
push
push
add
outsl
add
or
jecxz
sahf
lods
dec
inc
bound
rolb
dec
into
ffree
out
xor
sub
mov
sub
std
lahf
into
outsl
mov
xchg
inc
bound
push
aaa
sub
jg
xor
push
nop
sbb
add
loope
push
xchg
call
test
mov
jb
pop
mov
cltd
mov
and
scas
xchg
cmp
or
iret
inc
xchg
loop
push
push
pusha
out
jmp
pushf
pop
cmc
xchg
test
ret
xor
add
xchg
movsl
out
push
inc
jb
cmp
push
dec
movsl
mov
cs
inc
xchg
les
mov
inc
insl
adc
xor
dec
lret
mov
dec
mov
stos
mov
out
pop
js
xor
out
push
jge
sub
hlt
aad
cs
in
ficompl
fisttpll
aaa
pusha
mov
sbb
mov
sti
test
jle
outsb
mov
mov
cmpl
iret
std
movsb
jo
out
mov
stc
movsl
and
aam
sub
sbb
push
inc
movsl
sbb
mov
divl
xchg
cmc
aaa
or
mov
xor
jns
mov
scas
inc
mov
xchg
popf
inc
clc
in
sub
jl
pop
push
xor
sbb
sbb
jg
add
aaa
inc
cld
add
mov
imul
xchg
daa
mov
inc
pxor
cli
ret
mov
or
ret
pop
xorb
stos
sub
fwait
jbe
jno
dec
or
adc
mov
xor
cld
or
push
jmp
stos
ret
xor
sub
jae
mov
subl
movsb
jae
adcl
loop
pushl
test
mov
mov
jp
cmp
scas
clc
add
hlt
movhps
shlb
loope
cmp
sbb
jmp
sub
dec
pusha
dec
cmc
sbb
adc
jns
insb
cs
rcrl
add
inc
lds
in
sub
xchg
xchg
cmp
or
outsb
clc
adc
movsl
fdivrl
arpl
in
jecxz
das
adc
shll
fimuls
mov
cmpsb
mov
aas
cld
test
sub
cmp
mov
ficompl
pop
dec
xchg
dec
mov
pop
out
jecxz
icebp
mov
cmp
jg
xchg
push
out
inc
sub
or
in
push
cmpsl
movsb
pop
and
test
pop
nop
jmp
mov
mull
hlt
mov
dec
adc
mov
adc
jmp
repz
lahf
cwtl
xchg
scas
push
jbe
mov
jp
cltd
jb
ret
jb
mov
mov
push
int
rol
lahf
mov
ljmp
scas
pop
aaa
jmp
mov
adcl
scas
in
xor
jp
jno
pop
xchg
cltd
mov
sbb
pop
push
pop
out
jge
push
dec
test
call
push
inc
mov
icebp
mov
jg
mov
add
rdpmc
movsb
add
lds
adc
jmp
cmp
arpl
rcl
bound
out
sub
out
pop
mov
add
jp
jle
stc
aas
xchg
xchg
sub
or
cmp
pushl
fwait
jnp
and
xchg
adc
cmp
gs
push
push
fisubrl
pop
nop/reserved
movsl
andl
loope
add
cmp
dec
dec
jmp
icebp
outsl
mov
push
inc
xchg
inc
jns
js
popl
push
inc
ret
xchg
jo
dec
lock
iret
push
xor
mov
sti
mov
add
cmc
dec
daa
enter
ja
repz
dec
movq
lahf
in
mov
or
roll
push
add
jmp
leave
out
inc
adc
mov
or
arpl
dec
xor
jne
fstps
jle
add
add
shr
adc
shll
setge
mov
movsl
mov
pop
jg
rcrl
jae
icebp
ret
or
int3
outsb
xchg
cli
mov
mov
cmp
aas
lods
pop
int
ret
daa
mov
or
sub
push
cs
pop
mov
pop
add
pop
outsl
and
cmp
jbe
call
push
popf
shlb
int3
enter
aam
pop
or
lea
jg
and
insl
mov
mov
cmc
or
mov
es
and
cmp
push
lea
dec
jecxz
jo
push
mov
imul
adc
fildl
insl
jge
push
mov
push
arpl
aad
fistpl
add
int3
or
mov
in
arpl
mov
xor
pop
sub
pusha
pushf
sbb
loope
lods
push
pop
cmp
in
sub
stos
cmp
jg
cmp
or
outsb
test
in
pusha
in
fbstp
out
mov
ljmp
adcl
inc
fisubrs
sub
stc
inc
ret
push
mov
mov
jp
fidivrs
pop
push
push
or
cli
daa
dec
push
inc
sti
jo
fcoms
cld
mov
cmp
and
add
adc
adc
push
xchg
jl
pop
in
shll
pop
rcrl
pop
aaa
sahf
popl
ret
lds
pop
push
lret
sti
inc
insl
xor
mov
js
mov
out
inc
cmp
cmp
mov
inc
sbb
and
shlb
out
rol
pop
aad
or
xlat
add
fs
cmpsl
in
scas
pop
js
dec
push
mov
xor
jmp
and
or
sbb
nop
add
jl
js
bound
movsl
sub
mov
mov
push
sti
jbe
sti
pop
jl
enter
adc
lock
mov
clc
push
pop
inc
mov
pop
rcr
fistpl
jno
push
and
adc
ret
lcall
push
xor
sub
jbe
xchg
mov
aam
lret
mov
arpl
xchg
xchg
int3
imul
adc
mov
incb
push
mov
or
ja
int
call
push
mov
cli
mov
clc
pop
sub
jbe
sarb
jo
cli
aaa
test
iret
rolb
dec
xchg
dec
test
addr16
cmp
ja
xor
fsubr
aas
add
jbe
xor
int3
ljmp
mov
in
inc
cli
aam
es
loope
out
js
mov
cmp
das
xlat
xor
dec
loope
sbbl
xchg
xor
adc
sub
lods
push
lock
repnz
dec
mov
loope
bound
lods
dec
push
imul
mov
jmp
mov
insb
in
cwtl
ror
dec
adc
mov
jae
jbe
and
push
inc
aaa
or
push
test
sub
sbb
testb
mov
adc
or
mov
movsb
test
and
loopnew
push
and
movsl
shl
xchg
stc
mov
imul
loope
insb
push
mov
sub
leave
sbb
jle
xchg
sbb
je
cmpsl
loope
xchg
sbb
and
push
mov
cmpsb
push
mov
xor
jge
aaa
gs
ds
xor
movsl
push
sbb
sbb
inc
xorl
add
mov
lods
pop
cmp
inc
dec
stc
bound
andps
mov
add
jne
and
int
mov
pop
lea
cli
call
push
and
es
sbb
inc
out
data16
xor
cld
hlt
cs
iret
js
pop
add
or
inc
mov
mov
movsl
mov
sub
jns
push
adc
pop
add
repz
adc
push
mov
sbb
sub
cmp
add
sub
inc
pop
jmp
aaa
mov
xchg
push
faddp
jmp
cmpb
pop
jbe
push
push
inc
pop
js
test
insb
mov
scas
lods
xor
inc
movsb
inc
pushf
adc
js
adc
sti
xchg
lret
mov
shl
jo
repz
xor
leave
insl
lods
push
lcall
xor
or
es
xchg
mov
mov
movsb
int
in
cmp
loop
and
fidivl
sub
dec
xchg
pop
push
popa
aas
pextrw
inc
stos
and
xlat
fsubr
inc
sub
aam
push
push
xor
in
pushf
pop
es
add
xor
mov
repz
push
xchg
mul
xchg
popa
ljmp
popa
mov
repnz
cld
mov
scas
mov
and
call
out
test
or
cmp
cmp
xor
xchg
adc
cmc
shl
inc
nop
shll
xor
sbb
push
add
mov
test
cmp
ret
jbe
lret
and
daa
aaa
pop
fistpll
mov
int
jle
and
lcall
in
dec
loopne
jo
jge
aad
cmpsl
out
insl
pop
aad
jg
das
sbb
pop
outsb
dec
add
out
xchg
outsb
mov
jl
jns
inc
fcompl
or
pusha
movsb
fdivrl
push
xor
shll
mov
push
out
inc
out
insb
ja
or
dec
and
mov
leave
push
pushf
mov
pop
sbb
insb
xchg
scas
jmp
dec
sbb
add
out
xor
mov
inc
mov
jb
add
shlb
jmp
and
dec
xchg
ljmp
mov
sahf
in
sbb
push
and
jns
shll
push
pop
in
rclb
sti
rclb
test
pop
in
scas
mov
popa
jecxz
adc
add
pop
rcl
addl
out
clc
andb
sbb
xlat
sarb
cmp
sub
pop
pop
mov
xor
mov
jle
fwait
cmp
imull
pushf
rolb
dec
dec
cli
lret
outsl
gs
dec
or
hlt
ss
cmp
icebp
sbb
sub
rclb
cli
jnp
es
jne
and
and
mov
insb
fstps
sub
ss
dec
add
es
add
mov
jno
xlat
fdivrs
sbb
dec
cmpps
jl
fistps
sbb
in
std
cli
test
sbb
ss
into
jbe
mov
and
out
jb
push
jb
cmpl
pop
add
in
in
lods
push
loop
pop
rorl
pop
ss
or
push
out
and
insb
call
jnp
sub
ss
sub
stc
mov
pop
mov
or
jp
mov
fcoml
mov
pop
insl
fs
cmp
sbb
in
pop
sbb
or
jbe
mov
dec
loopne
mov
jl
mov
xchg
cmpsl
lds
dec
push
cmpsb
out
inc
shrl
les
pop
test
xchg
mov
jmp
jo
sub
mov
cmpsb
clc
xchg
test
and
in
mov
out
pop
test
dec
cmpsl
adc
pop
iret
sarl
and
test
int3
inc
orl
xchg
insb
pop
jmp
fwait
repnz
stc
scas
xor
jmp
inc
int3
xor
lea
jns
sub
cmp
into
sbb
push
cmp
adc
xchg
insb
loopne
pop
inc
mov
arpl
ror
push
testl
outsl
in
repz
sbb
cmp
pop
or
scas
jp
xor
cs
mov
iret
rcr
stos
jne
fdivs
mov
data16
inc
aad
mov
loop
je
vpaddd
into
inc
std
mov
adc
scas
std
dec
mov
adc
addr16
dec
mov
jae
and
adc
or
pop
mov
cmp
pop
and
dec
push
inc
repnz
enter
stos
dec
testl
pop
pop
movsb
testb
fdivs
or
mov
sub
dec
cmp
orb
mov
addl
pusha
cli
mov
add
stos
cmpsb
xchg
cld
iret
rcrl
add
ret
fs
adcb
gs
call
testb
loop
sbbl
test
adc
hlt
fnstsw
lods
mov
or
lret
push
or
jecxz
repz
or
lahf
ss
mov
mov
dec
in
dec
fcmovu
cmpsb
pop
mov
inc
mov
jp
es
shl
inc
push
aam
cmp
aaa
mov
mov
jnp
mov
push
cld
int3
or
inc
dec
jle
mov
inc
cmpb
mov
add
shll
scas
cmpsl
adc
outsb
sbb
popl
add
movsl
fs
adc
dec
dec
mov
aam
xor
jmp
mov
sub
xchg
lds
dec
pop
jne
sbb
inc
xlat
movsb
pop
push
xchg
push
in
pop
mov
jecxz
lea
outsl
xor
jae
pop
mov
dec
addr16
outsl
insb
xchg
push
pop
movsb
rorl
arpl
xchg
dec
or
sub
mov
out
inc
decb
sbbl
and
inc
aam
cmp
xchg
or
cmpsl
repz
mov
mov
jns
jne
mov
fistps
cmp
sub
push
cltd
arpl
pusha
and
jb
in
cmpsb
xor
stos
fucomi
cld
or
mov
inc
sti
push
fs
or
push
cmc
fstpt
out
cmpsb
mov
and
xchg
sbb
sahf
pop
fisubrl
jns
or
lahf
das
cld
mov
add
iret
sbb
xchg
jnp
in
mov
das
lea
jns
out
xlat
xchg
adc
xor
shl
fiaddl
jge
or
jb
cmp
fisubrs
insb
xor
ja
scas
dec
sti
or
jge
dec
and
fs
ds
xchg
outsb
js
add
dec
ret
mov
push
cwtl
dec
mov
fmulp
mov
scas
sbb
out
inc
inc
aaa
popf
mov
ret
rcrb
sbbl
push
and
xchg
xor
mov
mov
xchg
xchg
pop
and
subl
push
aam
jo
repz
cmp
in
aas
pop
aas
push
aas
add
divl
and
adc
mov
cmpsl
lock
sub
dec
faddp
cli
rcrl
sbb
cmc
in
in
std
mov
nop
aas
les
shrb
imul
test
mov
xorl
jb
dec
lret
fwait
jecxz
fists
pop
mov
rcrl
add
xchg
pop
xchg
pusha
insb
and
inc
sub
jl
rcrb
fbld
or
xor
jbe
out
or
and
cwtl
lea
and
das
sub
mov
insl
call
inc
jp
int3
adcl
andl
xchg
or
push
sbbl
or
add
cmp
ret
filds
mov
push
test
sub
pushf
dec
test
and
stos
inc
mov
insb
and
push
sbb
push
mov
cmp
rorb
test
sbb
mov
xor
sti
pop
imul
add
jp
imul
pop
mov
sub
sbb
pushf
bts
lahf
arpl
xlat
xor
es
iret
testb
push
adc
int3
bound
cwtl
and
jl
sbb
add
mov
push
mov
pop
test
iret
sub
fmuls
sahf
repz
and
mov
lock
aaa
sahf
mov
mov
aas
xor
mov
inc
mov
test
ss
sbb
out
pop
pop
inc
cmc
es
in
mov
out
inc
adc
fcomps
adcb
insl
cmpsl
xchg
push
jge
xor
xchg
mov
test
adc
xchg
leave
mov
fdivrs
sbb
pop
les
add
leave
rclb
xchg
ss
loopne,pt
mov
xor
jnp
or
rclb
test
jno
inc
inc
shll
xor
loopne
repnz
rcrb
push
jmp
sub
mov
push
push
js
add
sub
xchg
lods
push
xchg
dec
hlt
mov
sti
add
enter
push
aaa
jmp
sbb
gs
rorb
push
mov
jge
push
mov
sub
js
dec
pop
mov
inc
or
cmp
mov
push
mov
xor
ds
sti
addl
loope
fimuls
cmc
mov
mov
test
xorb
mov
std
jmp
outsl
xor
fwait
mov
into
shr
lods
out
and
xor
push
shrl
mov
pop
in
lods
inc
fs
arpl
pusha
mov
mov
andb
xorb
stos
xchg
sbb
test
roll
mov
xor
cltd
push
into
addb
test
pop
cmp
ficomps
aas
xchg
test
insb
nop
repnz
pop
in
imul
fisttpll
mov
add
std
rcrb
pop
mov
pusha
sahf
pop
push
xor
ss
test
adc
xchg
cmp
leave
icebp
call
mov
push
xor
nop
test
popa
xchg
jmp
mov
insb
mov
sub
shll
test
sahf
jle
leave
das
mov
and
jae
out
sbb
cmpsl
fisubrl
sub
shr
cmc
sahf
ja
cmp
in
imul
inc
ljmp
sub
add
dec
aad
dec
cltd
mov
mov
push
cmp
insb
push
fst
ds
ret
inc
inc
or
into
mov
pop
out
lock
inc
in
dec
hlt
lock
sahf
adcb
lcall
lahf
push
or
shrb
lods
psrlq
adc
scas
xor
push
cmp
add
out
out
xchg
inc
popf
fisttpl
int
negb
inc
add
or
pop
loop
xchg
mov
fisubrs
sbb
push
xlat
add
push
inc
aam
outsb
lods
and
or
rclb
ss
adcb
xorl
daa
repz
xchg
mov
mov
cmp
or
pop
xchg
or
push
inc
fdivrl
movsb
imul
mov
mov
fs
jb
jmp
adc
push
loop
pop
push
mov
ds
sahf
cmc
hlt
roll
sub
mov
out
sbb
je
mov
sbb
and
push
mov
cltd
dec
in
adc
cmp
inc
mov
xor
sbb
shlb
xchg
dec
inc
popa
loop
sbb
cs
xchg
jb
mov
fs
adc
dec
call
pop
popf
jecxz
popf
pop
sarl
dec
repnz
adc
pushf
add
mov
sub
movsl
sub
push
adc
cmp
dec
push
clc
jbe
bnd
or
stos
mov
add
fstpl
je
pop
jns
mov
fstpt
fiadds
std
aam
or
add
xchg
or
mov
sbb
clc
and
lea
lock
fsubl
stc
aam
shll
fcoms
pop
jns
pop
fnstenv
sbb
pop
hlt
add
dec
cmpsl
add
pop
roll
rclb
sub
xor
test
adc
mov
xchg
and
test
mov
dec
push
or
jnp
xchg
xchg
adc
pop
cmpl
jle
fcomps
lret
cmp
and
pop
mov
add
adc
frstor
out
jae
pop
ljmp
mov
pop
inc
fimuls
shrb
cwtl
mov
fidivrs
xor
cmp
aaa
into
sbb
dec
jbe
imul
dec
mov
mov
adc
cmp
scas
add
pop
test
push
mov
mov
adcl
and
pop
jno
mov
pop
test
lods
cmp
lret
push
dec
arpl
pop
loop
ss
pop
or
push
aaa
fcmovnb
outsb
mov
mov
sub
mov
insl
pop
xchg
adc
mov
xchg
push
fsubl
aas
mov
jmp
je
cwtl
inc
adcl
sub
andl
mov
popa
push
mov
mov
lea
xchg
in
and
mov
stc
repz
lock
jb
push
in
add
xlat
fcompl
pop
jns
sbb
stos
adc
jae
xchg
sub
shrl
je
xor
mov
loop
pusha
int
xchg
dec
add
adc
insl
inc
out
imul
cmpb
sub
push
jmp
sub
dec
les
inc
add
sahf
inc
es
scas
jmp
xchg
enter
out
push
adc
cmp
lds
or
negl
sbb
push
inc
lods
mov
add
pushf
jmp
and
outsl
loope
adc
int
outsl
test
div
mov
xor
cld
lcall
aaa
jnp
mov
js
js
push
cmp
mov
sarl
mov
or
push
push
sti
shrb
testl
jne
mov
lods
outsb
dec
aaa
jo
shlb
fstp
xchg
cmp
popl
je
add
jbe
push
iret
push
push
jno
shll
std
mov
pop
push
into
xchg
andl
xor
andb
pop
sti
enter
push
and
shrb
and
sub
jmp
sbb
push
call
je
insl
pop
add
dec
shlb
pop
cld
jae
sub
jae
lret
push
lds
sub
out
inc
jo
movsl
sarb
sbb
push
inc
xchg
inc
pop
mov
cltd
js
xor
test
push
or
mov
jp
mov
dec
jmp
mov
sbb
mov
jo
push
or
sub
out
das
lret
fnstenv
inc
ds
pop
sub
sti
cmp
pop
mov
push
cmp
xchg
pushf
mov
sbb
push
push
sar
pop
inc
or
sub
in
mov
xchg
mov
enter
fbstp
ret
aaa
out
lea
es
icebp
pop
in
sub
dec
jbe
iret
mov
ret
push
leave
mov
in
mov
aaa
xor
xchg
iret
jg
sub
arpl
or
fs
cmc
mov
and
das
dec
push
dec
pop
decb
rol
es
sub
out
mov
fxch
orl
jge
scas
mov
jl
cli
aaa
test
filds
mov
fistps
xchg
lods
pop
inc
jns
and
lock
out
mov
push
sub
test
dec
dec
add
inc
insl
test
ljmp
cli
pusha
movsl
or
jg
ret
cmp
out
repz
es
jle
dec
lret
xchg
push
mov
inc
jno
nop
clc
inc
push
int
add
mov
xor
jae
int
lods
outsl
pop
or
cmp
sbbb
cmp
pop
fiaddl
icebp
loope
adc
sub
sub
ss
jge
push
sub
ror
mov
pcmpgtb
sbb
add
das
jnp
inc
inc
hlt
into
jl
insb
push
and
pop
fistps
in
cltd
mov
add
in
or
sub
ja
and
ja
and
sub
xchg
or
int3
xchg
scas
aam
push
cmp
pop
lcall
rorl
push
mulb
adc
dec
ss
mov
adc
lods
mov
in
loopne
aas
mov
pop
xor
push
mov
jb
jb
lods
mov
xor
in
dec
dec
adc
jns
rcrl
push
aaa
push
pop
add
es
repz
xchg
cs
sbb
jb
cs
das
dec
jecxz
test
insl
test
or
mov
lret
loop
sub
xor
stos
or
dec
nop
push
arpl
sti
or
cmp
imull
push
dec
sti
jle
adc
inc
rclb
leave
test
pushf
scas
or
inc
sub
xchg
lret
in
jecxz
pop
push
es
pusha
ss
orl
cmc
pusha
or
cltd
call
push
cmp
jns
jne
mov
pop
test
in
sbbl
jge
shl
test
add
adc
cltd
xor
fwait
pop
add
dec
dec
or
pop
dec
jecxz
push
fs
xchg
jmp
xchg
sbbb
adc
or
mov
sub
cmpsb
mov
popa
jne
mov
adc
cmp
sarl
into
lods
push
mov
fs
inc
adc
xchg
adc
or
test
imul
shll
sbb
outsb
icebp
sbb
cmp
jg
mov
or
lret
inc
sti
psadbw
xor
data16
push
mov
arpl
add
stc
scas
rcrb
mov
mov
test
mov
sub
or
and
lds
add
mov
and
xlat
in
fcmove
add
xor
mov
lcall
xchg
ja
repnz
test
mov
lock
and
fmull
sbb
dec
or
mov
adc
ljmp
jge
jb
repnz
push
shlb
jmp
and
cmp
cmp
hlt
cmp
int3
add
cltd
scas
mov
mov
dec
dec
movsb
lea
mov
xchg
jne
jne
in
aaa
dec
inc
enter
adc
mov
hlt
jmp
xchg
test
aaa
inc
dec
push
stos
out
add
imul
jecxz
fs
push
sahf
mov
adc
into
adc
hlt
jno
or
push
jle
push
arpl
bound
xchg
enter
and
loope
sbbl
adc
clc
cmp
ror
mov
inc
outsb
fadds
adc
xchg
daa
inc
iret
aad
pop
pop
cmc
push
shrl
pop
je
popf
hlt
repz
sub
lret
movsl
pop
lock
stos
jl
test
scas
sti
add
js
rcrb
mov
mov
xchg
mov
call
and
cli
push
push
jp
push
dec
mov
fsubrs
or
sbb
mov
and
ljmp
test
or
adc
add
out
sbb
or
cmp
js
jmp
sub
and
add
int
stos
and
hlt
and
data16
mov
bound
push
adc
enter
cmpsl
dec
xor
mov
push
shl
push
mov
xchg
orl
orb
cmpsb
xor
xor
popa
shlb
sahf
mov
sub
ret
orb
jmp
stos
inc
sbb
lahf
js
lods
jmp
fcmovb
cltd
and
and
inc
test
in
js
sti
dec
sub
nop
arpl
and
popa
in
jb
arpl
ror
or
mov
mov
mov
pop
adc
or
adc
sahf
and
push
xchg
iret
icebp
sbb
sti
aad
addr16
scas
mov
shrl
pop
pop
cmp
pop
hlt
push
xchg
lcall
adc
fcmovnb
std
ja
imul
shrb
popf
jne
and
xor
dec
cltd
pop
add
pop
cmp
jmp
xchg
inc
out
cmp
pop
in
jne
data16
data16
hlt
pushf
jno
mov
int3
push
jno
fsts
insb
ljmp
mov
out
jle
inc
test
lcall
ljmp
fiaddl
scas
push
pop
movsl
push
cmpsb
pusha
push
xchg
cmpsb
aad
test
push
or
jge
jle
mov
jle
push
inc
fucompp
xchg
repz
mov
dec
or
mov
adc
ret
mov
out
ret
jl
jecxz
push
fwait
jp
notl
mov
gs
xchg
adc
addr16
fwait
insl
cwtl
retw
ret
cmc
sbb
repz
cwtl
cmp
outsb
xchg
mov
jg
loope
dec
push
adc
loope
and
jp
aad
or
out
pop
scas
pop
cs
push
cld
pusha
cmp
stos
sub
xchg
lock
xorl
lods
cmpsl
shr
adc
add
sub
mov
nop
pushf
xor
push
loope
es
imul
pop
push
jae
xlat
mov
jge
hlt
jbe
in
fistps
lcall
jo
jne
sub
icebp
je
jle
mov
leave
sbb
push
and
aaa
inc
pop
lahf
lret
jae
iret
cmp
push
mov
aaa
fwait
sub
adc
ret
hlt
in
cmp
xchg
ljmp
inc
movsl
lcall
and
out
imulb
cmp
call
sahf
std
or
sbb
add
mov
insb
push
dec
inc
lret
inc
mov
imul
dec
add
ljmp
gs
cmp
inc
inc
cltd
sub
loop
std
mov
mov
mov
ja
sahf
xchg
mov
push
int
out
pop
mov
jbe
popa
in
fucom
cli
sub
fldenv
mov
mov
push
imulb
scas
mov
insb
dec
les
dec
dec
dec
insl
push
inc
pusha
xor
and
sbb
jb
movsl
pop
push
pop
loop
lds
outsl
add
mov
push
sbb
shl
sbb
scas
push
pop
cmp
or
test
mov
mov
jl
mov
and
push
pop
test
jmp
mov
cmpsb
ficomps
push
mov
fildl
sub
mov
shlb
sbb
sub
sbb
das
mov
mov
into
sub
push
gs
add
add
in
fs
adc
fsts
mov
ss
dec
gs
or
dec
in
mov
mov
add
mov
movsl
lock
adc
insb
jle
cmp
xchg
repnz
cwtl
ds
sbb
sbb
xchg
xor
inc
jl
inc
jbe
sub
sub
fiadds
mov
aam
jmp
xlat
sahf
cmp
nop
add
dec
cmp
in
divl
addr16
icebp
sub
addr16
enter
cmp
testl
inc
in
push
pop
pop
jmp
insl
pushf
loope
jle
bound
jns
imul
fidivrs
pmulhw
mov
das
sbb
mov
in
push
aaa
in
lock
jno
xchg
push
in
jno
xor
jle
xor
sahf
aas
inc
cmp
mov
adc
adc
or
arpl
imul
fwait
xor
xchg
outsb
mov
mov
dec
or
xchg
sub
mov
es
adc
jmp
insb
out
loop
xchg
sbb
gs
ficomps
and
sbb
cmp
test
xlat
imul
test
inc
push
data16
xchg
pop
lods
cmp
cmp
pop
movsl
pushf
scas
cmp
stos
push
mov
lcall
leave
inc
inc
leave
xchg
pop
sbb
and
in
adc
icebp
cs
out
das
out
std
adc
or
sahf
pop
es
rorl
push
pop
lods
xchg
imul
gs
scas
popa
fnsave
adc
mov
ljmp
and
add
test
jle
adc
mov
pop
inc
push
mov
popf
dec
cmp
in
rcrb
inc
pop
sub
cli
mov
mov
push
dec
mulb
cmp
cmpsl
jmp
inc
mov
jmp
sbb
testb
mov
pop
dec
cmpsb
xchg
sub
lahf
les
in
test
insb
inc
inc
popf
mov
mov
inc
adc
js
in
xchg
add
shlb
inc
test
pop
jmp
faddl
out
cmpsl
movsl
lea
mov
cmp
jb
fisubl
out
xor
mov
mulb
out
jne
scas
pop
jae
inc
iret
push
cmp
push
and
dec
jo
data16
dec
lret
lock
xchg
xlat
lret
lahf
pop
inc
popl
mov
inc
push
push
cmp
sbb
cmp
aad
xlat
mov
rorl
jo,pt
mov
jge
mov
xlat
loope
sarb
cmp
xlat
sarb
sbb
xchg
xor
pop
nop
or
mov
xor
mov
inc
dec
repnz
mov
enter
popf
vmovaps
enter
mov
jle
lea
aas
xorb
ss
add
push
sahf
push
lock
xor
fstps
adc
neg
bound
fdivrl
cwtd
sarl
cmp
fwait
inc
dec
lret
push
pop
cwtl
xchg
notl
imul
and
inc
jg
jns
pop
jnp
mov
cmpb
fcompl
jp
cs
gs
or
fptan
loop
push
fisubrl
xor
mov
dec
and
inc
mov
push
or
inc
xchg
sbb
cli
pushf
lock
jle
pop
push
push
xor
outsl
mov
mov
lock
xchg
sub
cwtl
lcall
ror
xor
data16
jmp
addr16
in
js
push
push
imulb
push
clc
lcall
lret
adc
jnp
mov
adc
repz
mov
xor
lcall
hlt
cmp
and
jno
xor
inc
imul
lods
fimull
pop
pop
insl
xor
out
xchg
rcrl
and
adc
arpl
sub
outsb
sbb
push
mov
add
std
jbe
cmp
loop
pushf
shlb
push
sti
jecxz
push
xchg
inc
lea
outsb
sbbb
add
mov
add
subb
testl
inc
mov
cmp
hlt
mov
cld
fdivrl
stc
pop
add
jne
push
xchg
cmc
add
js
mov
popf
cmp
sub
movsl
shll
sbb
loopne
mov
arpl
imul
sbb
loopne
push
cmp
rorb
ss
fisttps
jp
cmp
fcomp
stos
jp
les
out
adc
cmp
jmp
fisttpl
sub
jo
push
test
inc
test
mov
lock
push
rol
pop
or
or
jge
in
bound
pop
movsl
jecxz
rorl
arpl
mov
jns
mov
jo
add
push
push
push
and
imul
and
xor
jl
scas
enter
ljmp
call
inc
fcoml
clc
cltd
pop
fcmovnu
jae
arpl
xor
xor
push
dec
push
pop
enter
scas
xor
mov
loope
and
into
xor
dec
inc
sub
hlt
sub
sbb
lcall
mov
push
leave
iret
mov
xchg
xchg
mov
aam
out
push
mov
shll
lret
pop
mov
outsl
jae
sbb
in
sbb
mov
add
mov
push
jp
std
ss
push
mov
xchg
jecxz
dec
lock
icebp
jge
outsl
data16
xor
cld
and
cmpsl
loopne
mov
imul
mov
cmp
inc
outsb
dec
push
sub
or
test
stc
mov
jecxz
jmp
cmpsl
bound
xor
mov
xchg
cmp
cmp
cltd
and
xchg
xor
ljmp
cwtl
and
loop
imulb
lcall
push
insl
adc
and
cmp
sti
bound
cmpsb
es
adc
mov
rcrb
push
jl
xorb
mov
repnz
xor
stc
cltd
cmpsb
aas
out
dec
out
xchg
mov
scas
sahf
mov
inc
pushf
mov
mov
xchg
jno
dec
repnz
js
xor
jmp
push
lret
pop
lds
ret
inc
clc
repz
imul
lods
or
popa
xor
mov
popf
xor
sar
jns
xor
daa
cltd
inc
sub
inc
ljmp
cmp
test
daa
rorl
push
inc
shl
out
pop
int3
and
xchg
mov
das
mov
push
dec
loopne
add
xchg
gs
sub
mov
inc
adc
popa
in
sbb
ds
jns
adc
jno
sbb
call
sub
mov
jle
hlt
adc
adc
movsb
lds
fidivl
ret
jne
cmpsl
sbb
aas
jmp
xchg
jnp
cmpsb
mov
sbb
mov
jecxz
pop
push
pop
push
xor
add
mov
dec
stos
popa
js
push
sahf
jb
jecxz
inc
cwtl
mov
adc
addl
mov
daa
pop
addb
call
xchg
xchg
sub
inc
adc
daa
adc
mov
sbb
sub
out
xchg
or
pop
outsb
and
ret
shrb
mov
adc
testb
stos
lret
pop
ja
mov
inc
cmp
jb
aaa
stc
js
mov
jnp,pn
scas
bound
test
add
ret
call
lock
adc
loop
push
push
std
sbb
into
outsl
sbb
cmc
sbb
out
inc
pop
push
sub
mov
sub
cld
xor
popf
outsl
mov
pushf
push
clc
ret
adc
and
pusha
addb
xchg
pushf
push
std
jnp
mov
lock
je
ss
push
pop
addr16
push
cmp
addr16
insl
mov
fcmovu
out
jbe
adc
pop
adc
xor
call
mov
xchg
cmp
jno
aaa
inc
stos
add
jno
imulb
jb
scas
mov
je
xlat
cld
and
fwait
mov
jp
cs
pop
aas
sti
lret
outsb
cli
inc
enter
sub
dec
or
hlt
insl
in
mov
mov
int
adc
pop
lahf
pop
int3
int
and
push
sub
jae
cmp
mov
dec
xchg
je
add
mov
mov
xor
scas
icebp
cld
jle
mov
std
sub
and
sbb
inc
js
cltd
inc
call
test
cmp
enter
enter
popf
loopne
imul
or
dec
dec
andl
fnstcw
and
dec
and
jbe
iret
inc
pop
scas
cmc
mov
shl
out
and
andl
into
dec
clc
mov
adc
sbb
stos
movsb
int
mov
mov
mov
jne
jno
xor
shr
adc
push
cmpl
inc
mov
pop
add
xchg
lahf
lret
rol
das
pusha
cmp
mov
scas
sbb
rcll
adc
add
mov
les
popa
movsl
daa
jno
loop
dec
and
xchg
pop
outsl
push
adc
lock
dec
fwait
sub
in
lret
jae
sub
mov
fidivrs
cwtl
clc
cmp
notl
or
lock
in
lret
jno
mov
cld
repnz
outsb
fcomip
jle
dec
jp
into
pop
adc
jp
ror
xchg
daa
int3
pop
xor
lea
xchg
or
jg
ret
push
xor
mov
jno
dec
mov
inc
ja
mov
sub
aad
pop
call
fidivrl
cwtl
inc
mov
rcll
in
jno
imul
mov
pop
shlb
adc
ret
adc
sahf
or
out
dec
or
mov
fcoms
lods
xchg
mov
ds
mov
sbbl
cmp
in
fnstenv
xor
add
mov
loopne
mov
test
nop
aam
mov
push
cmp
and
dec
xchg
cmc
add
fwait
das
add
incl
sub
jne
push
ret
repz
lds
pop
cmpsb
add
inc
dec
fstpt
addr16
addr16
inc
xlat
add
pop
call
adc
enter
loopne
rcr
sub
sub
ret
push
inc
push
jmp
push
push
lock
inc
cld
test
fisubrl
fcompl
daa
fdivl
hlt
pushf
sub
in
fcmovnb
sti
push
xrelease
xchg
testb
js
inc
cmpsb
lret
addb
xor
cmp
pop
jo
sti
xchg
add
push
xchg
and
icebp
xlat
subl
push
rolb
insl
cmp
in
inc
insb
daa
mov
jae
jle
cwtl
add
fcomps
lock
xlat
stc
or
inc
shlb
push
lock
enter
adc
es
mov
mov
shll
sti
xchg
test
add
jecxz
les
push
mov
loop
popa
inc
aad
jmp
mov
daa
test
push
sub
add
rorl
inc
jmp
es
je
ds
mov
pop
dec
jbe
sub
sub
mov
jb
push
push
lock
lcall
add
and
dec
cmp
xor
cltd
mov
sub
mov
inc
add
rcrl
cmp
movsl
or
mov
sbb
dec
out
xor
arpl
push
lea
int
nop
jne
lock
js
xlat
sbb
aad
cmpsb
mov
sbb
pushf
std
inc
sub
push
rolb
popa
jo
xor
js
sbb
cmpb
inc
push
iret
movsl
xorb
sbb
lahf
jno
loope
subl
mov
or
test
dec
popf
mov
push
pop
push
es
negl
push
cmp
mov
xor
test
sarb
lcall
int3
mov
dec
adc
cmp
or
scas
cmp
in
cmpsb
jb
lret
nop
or
sti
stos
arpl
push
cmp
stc
test
sbbl
jne
push
loope
das
popa
imul
push
or
jnp
ret
ds
dec
cltd
daa
push
mov
sbb
in
jmp
dec
js
and
lahf
dec
sub
and
cmc
adc
mov
adc
push
loope
mov
inc
lea
fwait
inc
mov
mov
outsl
dec
out
inc
jnp
bound
jae
mov
aaa
dec
loope
nop
ljmp
jmp
lea
mov
or
mov
out
jbe
xchg
fimuls
loop
fwait
dec
mov
xlat
pop
pop
rcl
xor
xchg
andl
pop
shrb
xchg
push
aaa
sbb
mov
fs
fdivs
pop
mov
inc
int
imull
cmpsb
jbe
jo
test
ret
inc
out
test
arpl
test
mov
push
push
aam
xor
scas
pop
inc
mov
cmovns
std
lea
jp,pt
mov
inc
and
cmp
jle
rcll
dec
lret
mov
dec
nop
cmp
mov
mov
scas
movntq
inc
adc
popf
push
inc
stos
scas
xor
negl
dec
sbb
inc
jg
pop
xor
dec
in
insb
lods
push
scas
ret
daa
mov
xor
jb
pop
int3
push
rclb
inc
and
pusha
sbb
dec
cs
cwtl
mov
add
fs
or
out
movsb
mov
and
arpl
call
xchg
push
jno
xor
fs
das
inc
sbb
pop
mov
sub
pop
jle
insb
jge
jge
cmp
dec
xor
mov
cmc
call
iret
popf
mov
int3
mov
lahf
add
aad
ret
lcall
stos
les
out
mov
enter
mov
cmpsb
out
cmpsl
scas
mov
lods
leave
mov
stc
and
repnz
ljmp
and
jo
decl
and
aaa
inc
mov
xchg
in
in
aas
cmp
add
add
mov
shlb
adc
in
mov
or
xor
out
and
imul
add
decl
mov
sbb
or
xor
cmp
loop
ja
or
and
jl
in
push
push
xor
and
hlt
xchg
popf
mov
adc
sbb
addr16
ja
mov
into
mov
dec
das
orl
mov
ficomps
and
push
sub
mov
repz
lods
cltd
sub
or
shll
jecxz
sub
rcrl
orl
inc
pop
mov
push
xchg
test
lret
scas
subl
push
adc
mov
test
or
fstp
ljmp
pop
aam
repz
je
aam
mov
hlt
mov
mov
push
movsb
push
adc
insl
sbb
cmp
rol
or
and
insl
adcl
and
out
mov
sbb
lret
ret
mov
sub
adc
adc
scas
pop
mov
das
sub
insb
inc
shll
imul
test
sub
test
cld
out
int3
rcr
jno
and
pushf
fisubrs
mov
pop
mov
mov
push
sub
repnz
fdivrl
cld
shl
out
clc
and
idivl
adc
loop
or
cmp
adc
data16
jge
jl
pop
out
xor
and
nop
pop
push
test
sbb
or
call
and
ret
mov
lods
mov
in
ret
and
std
nop
stc
mov
dec
push
inc
movsb
popa
pop
add
ficompl
dec
and
sbb
pop
mov
inc
mov
sahf
push
pop
sbbl
lds
cmp
stos
out
xchg
fs
mov
enter
adc
mov
std
add
cmove
push
es
add
xor
pop
js
mov
lods
mov
movsb
fdivs
add
mov
mov
dec
out
pop
jbe
jnp
add
in
mov
mov
mov
inc
or
sbb
cmc
daa
stos
cmpsl
stos
lret
dec
ss
out
je
call
add
sbb
scas
xchg
pop
xor
adc
inc
outsl
mov
jge
mov
enter
out
mov
fs
imul
js
xor
inc
push
mov
pop
cmp
shlb
dec
pop
jge
xor
hlt
stos
and
add
ljmp
loop
push
dec
fsin
pop
add
mov
sub
cmp
push
lock
pop
jno
mov
aam
jbe
sub
call
and
or
scas
inc
jp
push
xor
insl
adc
pop
and
push
je
pop
sbb
loope
mov
fsubrp
dec
sbb
cmpsl
cld
and
push
and
popf
push
push
pushf
xchg
cmpsl
pop
adc
insl
pop
loop
or
int3
in
cmc
les
popa
sub
mov
js
mov
mov
mov
sbb
push
arpl
xlat
mov
adc
xchg
js
sbb
fcoms
enter
jmp
leave
mov
jno
pop
sbb
or
push
shlb
cwtl
incl
mov
and
pop
ror
es
inc
jle
cmp
mov
je
and
rcll
movsl
sub
cmp
cwtl
mov
negl
jne
mull
les
push
dec
add
jae
lahf
bound
mov
pop
sbb
icebp
test
cmp
inc
mov
imul
mov
pusha
pop
adcl
jbe
loope
sbb
in
cmp
inc
inc
mov
loopne
jb
nop
mov
mov
ljmp
adc
or
sbb
mov
movsl
push
cmc
loop
push
rcrl
aas
add
pop
xchg
je
dec
sub
in
subl
repnz
cmp
insb
jo
jg
out
pop
test
push
insb
leave
cs
inc
aam
sbb
pushl
and
pop
push
mov
das
push
lock
pop
js
sbb
enter
aas
inc
and
repz
mov
cmc
rolb
sarb
mov
sub
faddp
xchg
jne
movsl
dec
dec
je
pop
enter
lods
inc
nop
dec
lds
les
jp
pop
mov
mov
lret
xor
addr16
les
inc
inc
lea
sahf
std
imul
in
or
rclb
pop
cmp
cmc
mov
pop
fwait
data16
dec
sbb
jmp
inc
shll
lcall
pop
sbb
shl
mov
pop
ja
nop
mov
xchg
aas
jnp
scas
xor
xchg
jae
outsl
and
iret
loop
push
inc
into
mov
mov
insl
test
and
push
mov
out
rclb
gs
outsl
cwtl
ss
mov
mov
iret
cld
push
rclb
mov
dec
mov
movsl
fisttpl
cmc
es
bnd
dec
sub
sbb
stos
jnp
scas
sbb
or
pop
roll
pop
cwtl
das
std
jl
icebp
loope
xor
lods
cmpsl
push
es
sub
cli
adc
xor
jp
inc
inc
sbb
cmp
test
movsl
dec
sbb
mov
or
ret
repnz
push
icebp
jbe
xorl
popf
icebp
cltd
std
jbe
fdivs
shr
cltd
cwtl
push
inc
dec
out
lcall
in
lret
loopne
aad
xor
mov
popa
and
in
pushf
xor
cmc
icebp
lret
loope
aad
stos
lcall
sub
pop
add
cli
out
pop
popf
cltd
loopew
shl
xor
fcmovne
or
cld
mov
in
push
mov
mov
cli
push
mov
leave
pop
dec
stos
daa
aas
or
xchg
inc
jae
or
and
aam
add
jp
rolb
pop
scas
jns
mov
inc
mov
push
aad
add
xchg
inc
adc
jge
xchg
pop
aad
ljmp
or
sarb
enter
mov
xor
or
movsl
je
inc
data16
popf
pop
stc
ja
push
dec
add
ja
jno
ret
ljmp
test
sbb
pop
inc
sub
pusha
aaa
mov
mov
xor
dec
dec
fdivrp
mov
les
and
jbe
push
mul
pop
int
int
repnz
sbbl
add
pop
cmp
or
ret
mov
je
mov
out
pop
pop
cmpsb
iret
stos
cltd
dec
cmp
sbb
sbb
rclb
jmp
pop
or
xchg
cmpsb
pop
outsb
sbb
dec
cli
xor
cmp
pusha
xchg
lret
fldcw
inc
das
fldl
sti
add
and
ja
or
popa
adc
mov
imul
adc
pop
dec
es
ret
xchg
adc
mov
xor
jae
jp
xor
sub
popf
aas
testb
xchg
gs
sub
lods
sahf
adc
jp
dec
add
jmp
sbb
xchg
cld
mov
mov
insb
pop
mov
icebp
aaa
push
adc
std
addl
dec
jge
xor
mov
loope
and
pop
test
inc
aad
pushf
aas
sub
mov
cld
push
fcompl
xor
fdivrs
loop
rcll
dec
pop
sub
mov
cmp
and
xchg
clc
into
sbb
fmuls
loope
cmpsb
cmp
gs
movsl
pop
add
repz
add
sbb
mov
pop
push
sbb
push
push
mov
xlat
scas
hlt
ss
xchg
scas
mov
push
xchg
dec
test
xchg
mov
bound
pop
nop
mov
das
add
xor
mov
sbb
adc
pop
or
test
pop
dec
sbb
mov
jle
es
inc
push
cmc
dec
sti
sub
lock
mov
iret
mov
xchg
sub
pop
mov
in
idiv
dec
mov
fmull
mov
fwait
loop
xor
test
jl
lods
xchg
dec
add
mov
mov
adc
pop
loop
jmp
cmp
fs
mov
xchg
jl
fucom
cmp
push
pop
in
fsubrs
loop
mov
jge
jg
mov
mov
sbb
lock
xlat
lods
and
lea
daa
hlt
jo
in
movb
fsubl
push
mov
inc
and
aaa
dec
fidivrs
hlt
cld
rorl
inc
cli
std
push
push
pop
sub
pop
lcall
dec
int
sub
mov
lods
dec
xchg
push
sbb
icebp
test
xor
dec
mov
cmpsl
adc
dec
add
jnp
cmp
sub
sbb
test
test
adc
hlt
in
add
cmp
cli
sub
pusha
fisttpll
jge
insl
gs
out
inc
rorl
jo
fsubr
mov
and
mov
xor
mov
ss
test
mov
rolb
add
xchg
xrelease
int3
add
mov
mov
inc
imul
insl
xor
pop
loope
mov
outsb
ja
mov
int3
lock
icebp
js
sahf
sub
comiss
and
adc
xlat
inc
rcrl
xchg
push
xor
enter
mov
lahf
pop
fs
push
icebp
fsts
aaa
mov
adc
enter
out
jmp
add
pushf
aas
add
ss
lock
jge
das
stos
xchg
cmp
xor
push
cs
cmp
aaa
aas
imul
test
mov
cwtl
jo
push
push
inc
rclb
jmp
idivb
out
sub
sbb
fbld
push
mov
mov
imul
push
or
shll
sub
jp
out
enter
pop
out
xor
jae
icebp
inc
rclb
sbb
mov
loopne
test
sar
stc
fnstenv
shlb
shrb
or
cwtl
aas
sahf
inc
xchg
into
pop
in
xlat
or
xlat
jp
scas
jne
xor
cmc
es
call
cmpsb
pop
aas
cmp
mov
sbb
daa
adc
stos
push
xchg
int3
mov
jecxz
test
fadd
sbb
push
bound
mov
cmp
cmp
fadds
pop
jecxz
inc
sub
dec
cmp
loopne
pop
std
xor
mov
fdivrs
xchg
gs
dec
adc
cs
add
out
mov
pusha
mov
jmp
pop
add
and
aam
sub
pop
cmpsb
fwait
imul
icebp
mov
lahf
sub
fnstenv
movmskps
xchg
subl
xor
add
lea
xchg
shrl
aam
pop
xchg
inc
ficoms
jb
jl
cld
and
clc
inc
js
rcrl
call
mov
mov
mov
fcoml
push
insb
and
and
pop
out
xlat
popf
dec
gs
xchg
lods
rcrb
add
and
ja
add
leave
js
movsb
adc
test
jmp
addl
adc
fistpll
push
dec
cld
adc
and
in
xchg
inc
lods
mov
cmp
das
sub
ret
jp,pn
xchg
int
movsl
jl
inc
push
scas
mov
xor
sbb
das
mov
popa
lea
insb
xchg
push
jns
test
and
mov
inc
mov
shlb
test
addl
je
dec
nop
popf
xor
nop
filds
push
inc
or
pop
scas
sub
xchg
mov
js
adc
into
push
add
dec
fisubrl
dec
mov
shll
in
mov
popa
inc
test
sti
ret
cld
sahf
jmp
mov
aad
adc
dec
outsl
shrb
and
data16
std
in
mov
mov
dec
outsl
rcll
repz
xchg
adc
call
mov
cmp
jmp
mov
sahf
jns
lods
mov
in
sahf
jae
fsubrl
fidivrs
into
std
addb
mov
push
rclb
push
pop
xchg
rol
xor
or
jl
push
push
xor
mov
mov
push
mov
pushf
loop
icebp
push
jns
lahf
mov
mov
int3
mov
pop
lods
add
push
add
mov
mov
js
cmp
add
aam
fists
lret
xorb
aam
cmp
mov
and
push
inc
jp
inc
rcrl
add
dec
popf
add
stos
outsb
jns
mov
xor
mov
sub
add
stos
fimuls
out
jb
xor
dec
aas
add
sub
movsb
xor
inc
pop
movsb
mov
sub
jmp
pushl
pop
xchg
or
inc
and
shlb
icebp
lock
sub
test
sbb
shll
mov
lea
and
xchg
dec
push
or
inc
push
sbb
cltd
fsub
push
xchg
xchg
push
xchg
out
mov
call
adc
lods
sub
mov
les
imul
sbb
mov
test
sbb
in
sbb
dec
sarl
xor
outsb
push
lret
stc
sub
and
imul
inc
sti
add
lds
push
dec
and
js
call
mov
ss
out
inc
ljmp
inc
sub
mov
mov
and
lret
pop
mov
sbb
ret
push
in
stc
stos
ficompl
rcrb
push
dec
outsb
xchg
push
iret
jns
dec
inc
mov
ss
ds
add
ret
xchg
add
mov
sub
aas
xor
jge
xlat
jg
push
lcall
ljmp
loope
push
loop
je
ret
out
aad
in
dec
in
jg
fists
mov
idivb
imul
mov
jno
adc
push
xor
adc
hlt
int
xor
fidivrs
dec
scas
stos
xchg
scas
andb
in
scas
dec
pushf
or
negl
imull
mov
or
enter
hlt
inc
loope
adc
cs
insb
mov
cmp
fmul
jg
mov
pop
xchg
in
xchg
sbb
push
mov
lds
add
test
cmp
or
in
shrb
fs
daa
jns
shrb
lock
pusha
loope
jmp
int
andb
repnz
push
aam
xlat
push
stos
xchg
cmp
jbe
pushl
add
lods
jge
sarb
xor
mov
and
mov
jne
popa
call
cli
push
call
lcall
insl
dec
adc
ljmp
adc
aas
add
movsb
out
xor
push
leave
push
add
inc
sub
ja
or
aaa
test
cs
push
pop
aas
lahf
lcall
push
mov
cmp
imul
je
cmp
xor
cmp
les
and
push
out
adc
cmpsb
pusha
and
imul
or
ljmp
and
jbe
mov
sbb
shrl
clc
lea
out
insl
test
into
pop
pop
roll
inc
into
adc
xor
mov
jbe
jno
stos
mov
and
fucomip
fsubs
pusha
jl
jo
lds
cwtl
jp
ja
loop
call
inc
bound
jae
repz
in
ficomps
push
or
iret
push
push
rclb
jb
push
jo
fbstp
testb
out
adc
dec
mov
ror
mov
jno
loopne
cmp
sbb
divb
adc
fcompl
jno
in
cmp
mov
xor
mov
fwait
mov
gs
repz
push
and
sbb
sbb
aam
and
fs
aaa
test
xchg
cli
add
sbb
mov
xor
xor
ret
pop
out
push
push
js
les
int3
inc
mov
cltd
mov
hlt
test
iret
insb
cs
sub
pusha
jb
dec
rcrl
leave
mov
push
out
pop
addr16
adc
ss
outsl
dec
mov
mov
xlat
imul
push
cmc
inc
push
rcll
cmpsl
mov
rolb
and
dec
loopne
mov
je
xchg
rcrb
cli
push
faddl
je
test
shlb
jns
push
mov
test
mov
movsl
pop
lcall
cmpsb
sub
cmc
xchg
fs
inc
test
sbb
lock
loope
roll
in
mov
cmp
outsl
testl
sub
push
add
inc
mov
popf
lcall
vpperm
loop
dec
inc
sarl
pop
mov
lcall
adc
lock
outsb
aam
repz
adc
push
mov
mov
loope
mov
push
jns
loope
mov
inc
leave
out
jmp
lea
icebp
jle
inc
aam
test
pusha
inc
mov
mov
xchg
xlat
jne
data16
push
test
test
cmp
lea
jbe
pop
lahf
jnp
cmp
mov
inc
fisttps
cmp
js
jle
mov
jbe
icebp
add
pop
push
xchg
in
mov
push
lods
movsb
and
add
xchg
jns
lods
add
dec
insl
icebp
in
cmp
or
fbld
shl
cmp
or
push
popa
imul
dec
dec
xchg
lock
sbb
jne
loopne
mov
nop
fadd
push
les
ss
test
insb
pop
inc
fistps
lds
sbb
in
mov
shr
incb
jb
ds
pop
loop
mov
orb
daa
xlat
xor
xor
push
push
icebp
enter
ds
leave
add
sbb
aad
daa
lods
les
xor
push
mov
ljmp
adc
mov
cld
fnstsw
popa
fstl
das
and
xchg
faddp
lahf
repz
push
pop
inc
pop
and
pusha
and
arpl
in
iret
sti
flds
das
push
pop
inc
sbb
add
aam
cld
mov
movsl
cmp
sub
jbe
cs
push
clc
and
dec
xchg
sbb
xchg
sbb
xchg
stos
rclb
addr16
jp
enter
xor
dec
or
cmp
cli
sbb
fcompl
scas
sub
push
cmp
jnp
bound
inc
rorb
fidivs
sahf
mov
inc
lret
sub
lcall
dec
in
out
outsl
lea
mov
ljmp
cli
mov
adc
xor
sti
cmc
sub
test
repnz
outsl
cltd
dec
push
cmc
push
hlt
ja,pt
dec
cmc
in
and
add
jne
aas
iret
xchg
inc
push
sub
pushf
pop
insl
dec
lods
stos
fnstcw
jae
and
dec
lock
push
testb
in
int
dec
dec
and
pop
out
jbe
push
jo
xor
ljmp
aad
push
lea
mov
sarb
push
int
add
movsb
roll
adc
subl
xchg
or
repz
test
in
es
stos
inc
jns
or
push
and
xor
sbb
fs
and
adc
mov
les
loop
pop
pop
in
rcr
push
test
inc
pop
je
scas
jecxz
fcmovb
int
sub
movsl
js
ja
inc
cmp
add
adc
mov
jp
lods
das
pushf
sbb
jb
xchg
jo
sub
or
jb
adc
xor
xchg
fldcw
cmp
rolb
std
gs
out
mulb
outsb
lds
loope,pt
cmpb
xor
xchg
insb
mov
add
out
inc
pop
stc
cmpsb
lods
lret
xchg
imul
icebp
sub
mov
push
jg
dec
daa
xor
jl
fildll
inc
adc
and
push
je
scas
pop
outsl
xor
adc
or
mov
push
xchg
fsubp
jge
shll
shl
in
adc
fistl
or
test
adc
scas
rolb
jp
test
sub
adc
ja
xchg
int3
or
idiv
rcrl
into
push
fsts
jge
or
in
push
dec
shll
xchg
in
add
lea
int3
lds
lock
ljmp
sub
fdivr
sbb
out
in
cmp
mov
out
stos
rclb
js
adc
xor
sbb
fistpll
push
or
mov
gs
mov
inc
movsl
xchg
ss
pop
stos
jae
mov
not
out
stos
and
jle
cmc
xchg
jmp
repnz
leave
fldl
dec
stc
xor
nop
xchg
sahf
cmp
cld
mov
iret
push
sarb
aad
orps
pop
or
ljmp
stc
pop
fsubr
mov
ret
insb
fnstcw
xchg
cld
aam
mov
jno
or
inc
hlt
pusha
adc
divl
cmp
and
mov
out
mov
fdivrl
stos
push
xchg
cwtl
inc
and
lcall
out
xor
fistl
or
xlat
xlat
in
loope
xor
fidivrl
repnz
pop
rorb
outsb
orl
or
pop
jge
fdivrp
inc
outsb
mov
jmp
negl
jge
sub
ds
mov
push
mov
sbb
adc
cmc
sbb
inc
push
aam
inc
fs
xchg
mov
xlat
cld
cmp
inc
mov
inc
lods
or
hlt
int3
mov
aaa
mov
cli
les
out
addr16
adcl
aam
push
leave
mov
cmpsb
mov
lods
imul
adc
repnz
dec
dec
push
jp
inc
lret
repnz
cltd
jno
dec
ds
inc
loop
mov
cltd
or
test
xlat
es
adc
pop
mov
mov
jg
vsqrtpd
adc
mov
jg
push
and
fimull
loope
btsl
insb
add
lret
mov
sub
inc
mov
lret
jl
push
rcll
test
out
inc
sub
mov
push
icebp
mov
sti
fmulp
mov
pushf
mov
or
lcall
pop
jo
add
push
cmp
or
cli
sbb
arpl
dec
push
push
mov
rolb
mov
lds
iret
push
enter
into
inc
add
cmp
inc
cwtl
push
jmp
cmpl
xchg
div
addr16
mov
adc
fwait
mov
mov
sbb
loopne
sub
mov
fdiv
mov
inc
pop
jge
mov
cltd
xlat
leave
lret
ljmp
adc
mov
hlt
out
add
lret
mov
ss
jg
iret
popf
sbb
xorb
dec
pop
cltd
xor
pop
inc
addr16
jg
and
mov
or
aas
ret
out
inc
sub
add
in
out
push
pop
cli
cmpsb
push
ss
fildll
movsl
sbb
cmp
ss
jb
xlat
out
dec
out
sbb
push
aad
inc
js
jae
sbb
adc
adcl
or
xor
or
sbb
mov
push
loope
mov
fists
daa
xlat
inc
jge
scas
and
sbb
jno
jge
ret
cs
shlb
pop
dec
imul
sub
lahf
ret
daa
lret
adc
add
add
xchg
dec
mov
fidivl
xlat
cltd
mov
out
pop
mov
sbb
mov
cmp
mov
dec
inc
jl
sub
mov
nop
insb
test
fstpt
iret
inc
out
scas
push
dec
push
mov
sbb
jno
mov
lods
movsl
push
xchg
pop
jl
lea
jp
cmp
aad
xchg
lods
xchg
sahf
push
push
or
out
or
dec
sub
stc
add
fbld
and
pop
xor
loope
adc
xlat
popf
xchg
lods
or
hlt
mov
mov
push
inc
gs
add
insb
or
je
movsl
addr16
pop
adc
push
push
out
int
rep
sbb
inc
sub
imul
push
mov
fs
jge
stos
jns
xor
xchg
fbstp
mov
repnz
push
jle
jbe
xor
mov
push
popf
push
mov
fnsave
mov
cmp
pop
push
inc
sbb
jg
add
fldcw
test
addr16
aad
mov
push
scas
fisubrs
int
mov
mov
adc
or
xor
addl
mov
cmpsb
jo
mov
lret
push
push
mov
mov
sub
gs
jp
nop
popl
mov
scas
mov
jns
aas
ret
and
inc
repnz
shll
mov
xorb
test
xchg
mov
add
addr16
or
add
xchg
jl
jl,pt
add
fistpll
xor
sub
into
mov
mov
inc
and
push
es
stc
xor
ja
sub
add
pusha
and
xor
pop
add
out
cli
push
inc
rclb
and
dec
out
cmp
loop
sub
push
mov
sub
arpl
sbb
scas
pop
or
cmp
sbbl
fimuls
lahf
adc
mov
jg
push
sarl
jmp
sbb
pop
mov
mov
test
lcall
cmpsl
lock
mov
xorb
mov
xchg
pop
mov
push
rol
test
loope
ficoms
add
xchg
loop
pushf
iret
inc
jno
insl
mov
mov
in
sbb
in
adc
mov
pop
cmp
in
ret
stos
aaa
fsincos
cmp
mov
and
mov
mov
add
jge
ficoms
inc
or
mov
fisubs
jge
cmp
push
xor
cmpsb
out
xchg
aam
sub
sti
and
into
lret
sub
xor
fsub
cmp
or
repz
fldenv
push
adc
cltd
xchg
loope
daa
push
push
push
add
sbb
jae
sbb
adc
fidivrl
ret
mov
mov
add
adc
xor
pop
mov
enter
add
loop
scas
icebp
lret
lahf
sub
loope
dec
sti
and
fstl
pop
lret
mov
stos
fmull
rorl
shl
popw
mov
jge
pop
xchg
mov
clc
mov
pop
mov
pop
jo
dec
jbe
std
sbb
fldl
fcomps
xor
and
out
cmp
inc
cs
std
in
out
add
push
fimuls
test
jp
push
inc
ret
jg
sbb
add
cli
aas
lcall
ljmp
scas
cmp
push
popf
aad
sub
jae
jne
mov
aad
ror
mov
sbb
movsl
in
xor
sub
test
cmp
popf
push
leave
ret
mov
jl
std
lods
mov
into
jae
cltd
push
fldenv
push
sbb
push
push
jne
jge
pushf
jb
mov
push
movsb
stc
testb
xchg
clc
test
push
xlat
sar
pop
imul
xor
leave
das
mov
mov
cwtl
dec
in
mov
fldenv
jo
pop
inc
push
nop
mov
inc
ds
insl
leave
or
xchg
insb
stos
mov
xchg
jmp
mov
sub
mov
cmp
jne
lods
pop
push
jb
je
fldlg2
push
xchg
insl
aam
rolb
dec
or
pushf
mov
bound
or
xor
pop
dec
push
sbb
ret
jg
loope
jb
scas
lret
jl
ret
rol
adc
push
jge
scas
push
mov
int
ret
inc
shll
pushf
jge
pusha
jno
xor
notb
cmp
aad
pop
mov
jg
gs
daa
call
push
mov
call
mov
add
push
cmc
inc
xlat
push
loopne
push
sbb
mov
mov
sbb
inc
scas
cld
push
outsb
inc
inc
mov
mov
call
mov
shrl
in
imul
mov
xchg
pop
movsl
lock
test
and
mov
push
insb
addr16
cmp
jl
sbb
test
nop
cmp
sbb
and
jo
ret
cwtl
or
rcrl
xchg
lcall
pop
jae
imul
movsb
cmp
icebp
jnp
test
in
cmp
in
and
and
inc
mov
pushf
loopne
mov
inc
mov
push
or
loopne
icebp
fcoms
adc
arpl
mov
arpl
cmp
xchg
inc
in
arpl
push
mov
fcmovne
jge
cmp
jbe
addr16
aaa
push
bound
in
addr16
int
sub
mov
adc
cmp
cmc
ja
sub
aas
pop
movsl
mov
jg
cmp
jae
and
jle
sbb
cmp
stos
xchg
mov
scas
mov
lret
adc
int
adc
jnp
div
mov
jecxz
push
mov
loopne
stos
xchg
test
test
outsl
inc
fldz
in
subb
sbb
shrl
add
es
into
je
jo
jne
mov
inc
fbstp
lods
out
adc
out
out
mov
sarb
mov
bound
inc
pushf
and
lret
into
push
into
xchg
sarb
int3
aaa
notb
es
dec
and
push
out
pop
fmuls
idivb
xchg
mov
pop
stos
lea
daa
aad
sub
jg
fiaddl
int
cwtl
rcll
lds
out
fbstp
dec
out
loope
mov
and
cmp
fisubs
loop
pop
arpl
jnp
mov
imull
sbb
mov
imul
cmp
bound
loop
mov
rcr
addl
jns
movsb
jb
cmp
addr16
loopne
or
fldcw
test
and
mov
out
xchg
mov
push
add
cltd
and
lock
movsb
xor
mulb
fsubs
leave
jp
mov
inc
bound
mov
inc
ss
jnp
pop
mov
adc
or
sbb
insl
out
aad
mov
xchg
loopne
pop
lea
mov
out
out
mov
cld
xchg
add
push
cwtl
std
mov
inc
dec
test
sub
stos
das
aas
fcompl
cmpl
jl
cs
outsb
imul
pop
call
mov
add
pushf
sbb
cmpsl
out
shr
sbb
inc
ud1
insb
dec
ss
call
in
add
dec
and
ror
in
adc
mov
jb
xchg
test
repnz
pusha
idivb
pop
sub
push
cmp
fsubr
pop
cltd
ds
cmp
cwtl
cmp
hlt
fldcw
icebp
ss
sbb
shl
jp
cmp
jecxz
je
outsb
and
and
stos
fwait
add
insl
add
add
fstpt
jecxz
flds
test
push
push
clc
fldcw
xchg
pop
test
adc
mov
insl
loope
sbb
movsb
sbbb
test
mov
push
addr16
dec
or
out
xlat
add
lcall
sub
or
push
mov
movswl
pop
jnp
pop
xlat
cmp
inc
xchg
ret
test
push
enter
jmp
lcall
in
ret
hlt
push
es
mov
pop
jg
cltd
jo
adc
push
fldenv
je
mov
insb
stos
pop
lds
lea
xchg
loop
icebp
pop
pusha
int
sbb
jns
add
insl
test
sub
jecxz
sub
test
and
test
or
lds
dec
push
inc
push
and
lds
testb
dec
xchg
mov
test
dec
pop
xorl
xor
mov
push
stc
pop
cwtl
mov
rep
arpl
addr16
inc
jmp
mov
and
cs
out
addr16
std
add
jb
mov
pusha
aam
pop
or
negl
adc
ja
loope
dec
jmp
inc
test
jmp
xor
int3
xlat
and
jb
ret
das
movsb
inc
repz
test
shl
in
inc
ficoml
sbb
mov
adc
movsl
rclb
daa
and
mov
or
sbb
rorl
and
cmp
or
xchg
insl
icebp
push
clc
push
mov
insl
cwtl
loop
aam
jmp
and
adc
sbb
cmpsb
cmp
cmc
imul
lcall
dec
xchg
clc
cmovl
adc
cltd
imul
inc
xchg
cltd
add
rolb
add
mov
push
into
xor
int
sub
pushl
outsl
sub
push
mov
inc
out
mov
xor
jno
sbb
imul
push
fidivrs
pop
enter
in
loop
addl
sub
inc
pop
daa
adc
sub
int3
out
sub
fisttpl
rcrl
xchg
mov
xchg
in
xor
jp
insl
xorl
dec
pop
popl
cwtl
or
dec
and
addps
ja
inc
popl
inc
sbb
sbb
into
in
adc
stos
pop
pop
out
xchg
jns
cwtl
xor
and
je
jle
inc
fnclex
sub
addr16
ljmp
jae
inc
push
movsl
imul
or
negl
mov
or
inc
in
jecxz
ret
sub
addr16
rcrl
mov
popf
outsl
gs
mov
sti
pop
pusha
cmp
mov
sbb
mov
out
or
push
fildl
ljmp
addr16
fsubl
cltd
inc
sbbb
aas
adc
dec
adcl
mov
aad
xchg
lods
xor
xchg
mov
jp
loope
xchg
xchg
ret
mov
pop
sbb
das
rcll
mov
dec
arpl
sub
pop
scas
xor
mulb
and
mov
insl
xchg
jg
fstps
mov
int
push
mov
xchg
cmpsb
notb
jp
add
addr16
mull
fildl
addr16
adc
xchg
movsl
fistpll
xor
jae
cmp
xchg
std
pop
pop
inc
push
inc
loopne
mov
test
sbbl
int3
fbstp
cmc
mov
mov
sub
inc
mov
gs
dec
xchg
or
jo
dec
out
inc
mov
mov
add
inc
or
push
pop
jg
inc
add
jno
mov
cmp
and
orl
mov
and
and
sbb
es
xchg
ficompl
xor
int
cmp
test
cmp
adc
cmc
in
pop
in
mov
mov
fmuls
sub
dec
ss
or
pop
movsb
in
jae
int
mov
and
dec
pop
sub
push
call
inc
inc
or
js
sbb
mov
push
sub
fisubl
fisubl
or
and
xchg
push
clc
and
and
or
cmp
mov
inc
mov
lods
shr
insb
inc
mov
adc
decb
stc
add
and
inc
sahf
or
jne
stos
pusha
shrb
pop
add
jo
bound
sarl
jns
icebp
scas
sbb
inc
fisubrl
and
push
lahf
movsb
adcl
jp
filds
jmp
xchg
testb
stos
mov
mov
imul
insl
and
iret
push
and
dec
sbb
sbb
inc
xlat
in
xor
enter
adc
inc
sbb
cmpl
shll
rcr
dec
pop
mov
and
push
out
mov
adc
fsubs
sub
stos
jge
inc
stos
outsb
decb
cmp
cmp
xor
pop
test
inc
fisubrl
xor
dec
loop
lock
hlt
cmp
jl
fisttpl
pop
loopne
push
pop
outsl
jp
clc
pop
lret
test
adc
mov
sahf
or
xor
popf
mov
imul
movsb
sti
mov
aas
std
or
into
and
outsb
or
out
ljmp
out
inc
push
sub
or
mov
mov
fnstsw
fisubrl
jne
sub
push
or
icebp
test
mov
pusha
dec
adc
and
dec
cmp
cwtl
psrad
xor
jae
fdivrl
or
dec
daa
out
hlt
xchg
cwtl
mov
into
xchg
outsl
movsb
jge
scas
push
jne
lret
in
ds
jo
ficompl
call
cmp
push
jp
xorb
clc
pop
and
ja
movsl
scas
repz
mov
outsl
stos
fisubrl
inc
in
add
imul
in
jno
jp
movsb
xchg
cs
bswap
cmc
and
mov
outsb
adc
jae
xchg
dec
mov
aas
lds
sbb
pop
lds
leave
int3
xchg
xchg
xor
arpl
out
mov
ret
frstor
stos
and
mov
stc
dec
out
jnp
xchg
loopne
dec
ds
clc
lods
mov
or
or
lret
addr16
mov
adc
xor
subb
inc
inc
pop
ss
mov
out
lods
adc
repz
fwait
pop
cmp
mov
jl
repz
dec
adc
lds
daa
aad
sub
sbb
mov
test
mov
and
push
push
jecxz
push
cwtl
sub
mov
pop
icebp
les
nop
cld
push
loop
in
adc
pop
or
jb
cmp
xchg
pop
cmp
inc
or
push
rorl
pop
int3
lcall
into
jno
xchg
js
adc
xchg
in
test
adc
jno
outsb
jne
pop
jmp
out
call
xchg
push
sub
imul
pop
fcomi
pop
mov
push
jb
jb
arpl
adcb
nop
aaa
lock
faddp
dec
arpl
lret
imul
daa
inc
lea
jbe
fstpt
mov
imul
repz
stc
jo
nop
pop
sahf
sub
mov
idivl
subb
add
stos
push
test
cmp
xor
push
cmpsb
nop
mov
mov
jl
xchg
scas
or
or
or
shrb
and
aad
in
and
stos
mov
test
pop
mov
mov
out
pop
push
insb
lods
xchg
enter
scas
rcrl
xor
daa
and
loopne
mov
xchg
sub
hlt
lea
into
xor
or
mov
fs
test
xchg
mov
mov
pop
stc
dec
jp
pop
mov
fists
jle
pop
or
fsubs
and
fcompl
shrb
fsub
clc
mov
pop
xor
xchg
xchg
aaa
das
fs
sub
mov
insb
jo
mov
test
bound
lods
mov
ja
add
mov
jp
add
lea
cs
or
push
mov
push
pop
mov
jb
int3
sbb
pop
ja
push
jb
inc
in
jp
cld
lret
lds
ja
stos
push
sti
inc
push
daa
xor
xor
jecxz
pop
push
push
ret
call
jp
es
iret
imul
cmpb
mov
sbb
or
push
mov
sarl
adc
sbb
movswl
jmp
inc
test
sbb
lods
push
push
push
ja
xchg
leave
push
mov
ss
inc
cwtl
xchg
push
add
pop
popa
mov
xchg
or
fildl
shlb
roll
addr16
pop
hlt
popf
aam
stos
push
xor
cmp
in
adc
rclb
push
mov
pop
inc
inc
je
mov
cld
test
xchg
cmp
sarl
mov
jl
xor
imul
add
aam
mov
rcrl
dec
cmpsl
or
outsl
insb
subl
and
cmc
inc
add
call
push
mov
mov
aam
in
cmpsb
dec
dec
sub
lods
test
inc
pusha
push
stc
mov
and
fstps
xchg
xchg
mov
frstor
cmp
xchg
pop
mov
sahf
rcll
pop
jno
xor
mov
loop
aam
xor
stos
popf
sub
arpl
adc
jno
adc
loope
adc
adc
fmull
insl
jnp
mov
test
loope
jge
je
fldenv
inc
fcoml
dec
mov
out
mov
hlt
sub
shlb
push
push
mov
in
dec
outsl
mov
pop
pop
mov
pusha
lret
subb
push
mov
add
adc
bound
or
pop
pop
mov
test
mov
cwtl
xor
mov
add
enter
pushf
sbb
pop
daa
xchg
xchg
cmp
push
in
sub
sub
mov
rolb
sbb
inc
cmp
aas
sub
std
pop
lds
push
push
push
shlb
push
lcall
rcrb
sub
cmp
test
loop
xor
mov
stos
jno
push
adc
sub
nop
out
addr16
jb
mov
push
enter
cmp
xchg
in
cwtl
mov
pop
jecxz
and
cmp
cld
cmp
add
jno
lods
in
adc
mov
pushf
sub
ljmp
movsl
sbb
fbld
mov
lret
pop
test
icebp
xchg
mov
roll
or
xchg
and
xor
pop
jge
pop
js
leave
leave
std
jnp
sub
push
sbb
jb
adcb
insl
and
div
cmp
pop
shll
stc
gs
mov
in
cmp
test
repz
stos
insb
xor
pop
arpl
adc
mov
call
fs
pop
jns
fisubs
pushf
outsl
loop
popf
mov
push
outsb
iret
ja
pop
gs
pop
pop
outsb
inc
ret
cs
sbb
popf
dec
sub
xor
cwtl
lret
fwait
aam
xchg
pushl
fistpll
xor
stos
jbe
pop
imul
ds
mov
sub
push
mov
cmp
loopne
inc
inc
cwtl
or
daa
scas
mov
and
dec
out
add
mov
jo
je
inc
mov
mov
sarl
jg
and
adc
jge
jg
push
nop
xchg
xlat
nop
sbb
jns
push
into
mov
xchg
cld
rolb
shl
push
ss
loope
lods
mov
pop
xchg
hlt
dec
das
or
lds
jnp
sub
pop
push
xchg
into
in
push
xchg
inc
xor
jns
repz
fsts
and
scas
or
xchg
cmp
xchg
or
add
dec
adc
xor
sti
or
rcll
fsubrl
icebp
mov
js
jno
jmp
xchg
push
push
fidivrl
inc
mov
ss
mov
xor
sbb
push
imul
idiv
xor
in
cmovo
cmpsl
mov
adc
outsl
sub
and
repz
jae
popa
push
test
mov
mov
stos
and
std
stos
cmc
or
mov
leave
in
push
inc
lret
cltd
aas
ret
dec
scas
mov
cmp
adc
inc
jecxz
mov
push
cmp
outsb
subb
push
mov
sub
in
jo
std
ljmp
pop
cmpsl
add
lds
mov
mov
prefetchwt1
mov
and
jl
mov
in
lods
lea
aaa
sbb
in
ljmp
pop
pop
mov
pop
mov
xchg
xchg
jns
paddb
cmp
mov
dec
test
jg
imul
xchg
add
adc
ret
or
mov
icebp
sbb
sti
jmp
jns
lret
push
add
sbb
jno
xor
ss
xchg
or
pop
sub
pop
or
adc
std
and
cmp
das
add
outsb
aaa
and
sbb
mov
inc
mov
adc
aad
rclb
into
mov
insl
sub
push
testl
xor
push
sub
mov
cld
cld
inc
mov
jo
test
pop
adcb
incl
cmpl
add
sub
lcall
std
insl
fdivrs
ror
iret
mov
add
insl
pusha
notl
cmpsb
cli
pop
mov
iret
bound
or
adc
leave
clc
lret
aad
mov
pop
cmpsl
jge
mov
jb
fsubp
dec
ss
dec
push
jns
out
and
jb
mov
bound
add
xlat
aas
fwait
or
nop
into
movsb
jge
dec
xlat
mov
je
jl
lahf
mov
sahf
fdivl
xchg
ja
int3
outsl
cmpsl
outsb
addb
pop
repnz
xlat
fistps
or
ror
repz
pushf
dec
mov
pop
pop
sahf
popf
dec
aas
icebp
jecxz
divl
jnp
jge
repz
clc
ret
pop
push
icebp
sub
int
push
mov
mov
dec
and
inc
push
pop
add
push
mov
xchg
inc
pop
and
add
and
push
jle
mov
imul
inc
adc
sbb
sti
jg
sbb
es
aaa
inc
and
mov
sbb
mov
push
pushf
outsl
scas
fldt
cwtl
pop
arpl
fisttps
fisttps
lret
sbb
dec
jb
andb
add
pop
mov
rcrb
iret
scas
stc
adc
sub
mov
dec
mov
push
cmc
sub
fisttpll
or
std
inc
leave
push
fsubrs
bnd
fbld
push
fmuls
frstor
aas
ret
dec
or
aaa
test
enter
loope
adc
ja
sbb
push
ret
rorl
xchg
xchg
add
pushf
in
pop
push
shr
aaa
pop
xlat
mov
inc
xchg
push
ror
scas
ljmp
push
pop
inc
mov
cmpl
mov
shll
inc
testb
or
aas
aad
sti
loope
pop
testb
sbb
xchg
les
into
cwtl
in
outsl
fisubrs
cmp
cmpsb
aam
stc
sub
push
ja
mov
dec
js
dec
push
xlat
cwtl
mov
js
push
in
xchg
std
jg
jbe
ret
push
lock
jae
jmp
inc
and
popf
lods
pushf
incl
and
ficoms
lods
shrl
mov
test
xor
xlat
cmp
sahf
push
xchg
aad
mov
imul
pop
fstpt
clc
icebp
dec
xor
and
sarl
mov
lcall
sub
dec
mov
or
or
sub
or
lret
lods
cmpsb
cmp
adc
jmp
jl
adc
mov
jg
xor
ljmp
or
mov
fstpt
mov
mov
es
in
gs
cs
je
test
scas
push
sub
enter
adc
inc
xchg
fists
and
xor
push
xchg
xor
mov
shl
outsb
test
in
adc
ds
lcall
sahf
sub
fidivrs
das
out
inc
out
mov
pop
cli
cmc
movhps
cmp
push
ljmp
add
mov
cmp
popf
call
out
adc
jne
lret
add
push
stc
shlb
and
and
cmp
insb
cmp
test
scas
mov
lcall
jle
mov
mov
paddw
jns
adc
cld
sarl
inc
cmp
mov
adc
scas
sbb
rol
jae
mov
test
shr
mov
mov
sti
xor
into
xchg
pop
nop
cmp
fmulp
data16
add
movsb
xchg
or
inc
xorl
in
push
jg
sub
push
xor
fistpl
push
loop
dec
aaa
jo
inc
popa
pushf
xchg
jo
arpl
int3
jo
insl
jmp
xlat
xchg
xor
ret
xchg
xchg
cmp
mov
aaa
fidivrs
inc
mov
fildll
test
mov
push
scas
and
sub
adc
mov
lods
add
inc
fsubl
std
ret
dec
lcall
in
lea
pop
out
outsb
adc
outsl
mov
pop
and
test
test
stos
mov
inc
and
xlat
mov
loope
push
repz
fldenv
xlat
or
jle
out
xchg
mov
clc
repz
pop
fcoml
fdivrs
xor
push
leave
push
jl
jb
daa
sub
in
mov
sbb
cld
or
mov
mov
aam
cltd
inc
xchg
jno
jmp
movsl
lret
js
stc
mov
clc
imul
lods
dec
mov
mov
rcr
rcrb
mov
lods
filds
imul
pop
icebp
divl
out
cmc
imul
cmpsl
or
scas
sub
sub
ret
sub
loopne
push
mov
inc
cs
jge
pop
inc
mov
xor
addr16
adc
jae
daa
inc
and
pop
mov
sub
rcll
adc
dec
repnz
dec
cmp
dec
mov
sub
jb
cmp
scas
add
out
push
in
in
jnp
xchg
les
push
xchg
subb
mov
repz
jae
push
push
mov
sbb
sbb
js
bswap
enter
and
loop
add
les
dec
out
cmp
dec
fmuls
xor
xor
jnp
je
push
mov
cli
repz
and
aam
outsl
movsb
popf
add
cld
adc
push
shrb
jae
movsb
cmp
pop
scas
pop
xchg
and
lea
cmp
aad
add
mov
mov
loop
aaa
push
xchg
dec
pop
call
or
mov
mov
xchg
mov
mov
xor
scas
aas
out
mov
cmp
jno
jp
mov
test
sub
mov
fcoms
fdivp
repz
push
movsb
in
mov
movsl
dec
cmpsw
int3
push
mov
stos
and
les
dec
and
or
push
sub
pop
inc
push
and
decb
add
stos
nop
std
push
push
mov
push
xor
in
into
sub
fldl
xchg
bound
add
sub
mov
cltd
std
mov
mov
or
push
xchg
lcall
inc
or
popf
dec
lcall
addb
sti
sbb
mov
or
insb
jmp
cld
dec
mov
push
fimuls
mov
add
inc
movsb
or
jmp
jmp
in
xor
xor
jno
repnz
cmpl
mov
mov
shrb
mov
mov
filds
loope
adc
xchg
pop
rclb
clc
xchg
into
hlt
dec
icebp
xchg
add
leave
xchg
mov
enter
push
aam
xchg
cmpsb
xchg
in
xchg
mov
jecxz
pop
jp
add
sub
xlat
or
and
test
out
hlt
pop
and
inc
push
jne
dec
ja
push
or
mov
jne
xor
lock
imull
ds
adc
scas
push
stos
negl
push
fwait
imul
imul
adc
ljmp
push
push
xor
inc
icebp
push
adc
jecxz
and
gs
leave
sub
ss
test
sti
sbb
loop
push
mov
iret
mov
jns
inc
movsb
mov
cmpsl
lds
xor
jne
push
cmp
or
or
push
mov
in
dec
out
and
or
lds
scas
mov
enter
or
xor
pop
lret
xchg
in
or
arpl
loop
outsb
mov
mov
and
push
outsl
repz
inc
stos
adc
push
sar
int3
enter
gs
inc
or
xchg
cmp
aam
stc
insb
enter
in
pushf
add
xchg
add
fcmove
xchg
mov
xor
mov
jb
mov
and
xchg
aas
mov
and
sub
clc
stc
xlat
sbb
enter
or
jge
iret
mov
sub
clc
sbb
aaa
pop
jae
cmp
lret
push
xchg
sbb
add
orb
adc
sub
push
leave
adc
rcll
imul
ret
jbe
int
mov
and
jl
leave
cmp
gs
test
lea
push
push
cmp
sub
push
inc
mov
pop
jg
sub
mov
fwait
into
jne
stc
add
daa
aam
xchg
sbb
ds
inc
aam
ja
mov
mov
insb
loopne
in
inc
jp
subl
sub
arpl
sti
fidivs
iretw
xor
scas
dec
pop
sbb
ja
incl
sub
pop
push
iret
push
xchg
jo
imul
inc
jge
inc
insb
mov
sarl
popa
mov
push
popa
mov
mov
insl
lsl
mov
and
pop
into
push
cmpsl
cmp
xchg
lock
and
icebp
je
decb
mov
in
mov
mov
or
push
bound
sbb
jo
adc
imul
push
addl
adc
cmp
cmpsb
fsubrs
stos
pop
pop
jmp
adc
into
int3
jae
repnz
int3
push
addl
mov
addr16
xor
lahf
jle
jnp
pop
or
test
daa
mov
jle
bound
dec
dec
shrb
in
and
xchg
loopne
lods
sti
jnp
test
dec
aaa
popa
sarb
mov
lea
sahf
roll
mov
jnp
pop
push
inc
dec
xchg
into
ficompl
jle
xor
inc
aad
ret
push
in
push
sbb
ljmp
arpl
or
adc
in
fadd
cmp
jl
imul
mov
and
dec
xchg
adc
xor
leave
int
ljmp
push
cld
add
mov
cmpsl
subl
aam
push
in
insl
push
xchg
shlb
test
int
pop
ss
and
mov
jns
idiv
pop
subl
pushf
pop
mov
push
mov
mov
mov
cmp
sbb
cli
push
out
js
push
xchg
or
subb
push
outsl
pop
jle
lods
out
or
adc
lcall
fcmovu
fsqrt
aam
movsl
aam
aas
out
orb
negb
in
pushf
cmp
jl
ljmp
in
jns
mov
shlb
and
push
sti
stos
ret
xor
cli
push
dec
test
fcomps
inc
mov
mov
jle
mov
mov
jo
enter
movsl
or
in
or
aam
add
rcrb
mov
push
repz
inc
mov
push
sbb
push
sbb
pop
nop
rcrb
xchg
leave
fnstsw
adc
stc
movsb
arpl
inc
add
mov
sbb
mov
pop
mov
dec
mov
inc
mov
pop
push
xor
xchg
jbe
jge
dec
shrb
xchg
dec
mov
push
les
sub
lea
push
into
out
push
mov
mov
mov
sbb
pop
lret
and
and
mov
push
popf
push
cs
add
out
aas
scas
std
divb
xchg
aam
jge
cmpsl
add
and
jbe
cmp
fstpt
cli
mov
cli
cwtl
fdivs
test
adc
pop
outsb
push
inc
mov
popf
addr16
xchg
cmc
mov
aam
ficompl
pop
lret
stc
pop
mov
dec
scas
xor
add
fldcw
pop
dec
hlt
fildl
ret
sub
sbb
xor
sbb
fstps
cli
jno
pusha
mov
jb
mov
adcb
xor
int
aaa
mov
fisttps
jecxz
add
in
or
mov
inc
outsl
ja
lret
fdivrl
jne
loope
push
cmp
jmp
inc
xor
mov
iret
imul
stos
std
lcall
adc
daa
lcall
jns
cmp
scas
outsl
pop
mov
jge
pop
pop
xchg
jbe
add
nop
arpl
pop
mov
aas
rcrl
lcall
pop
xor
mov
mov
dec
adc
jno
jae
xor
and
or
mov
pusha
test
cmp
jge
xchg
ret
add
xor
cmpsl
sbb
mov
cmp
outsl
dec
xor
leave
and
sbb
int
sti
or
cmp
inc
push
mov
test
cmc
les
pop
add
mov
add
xchg
lods
fidivs
sbb
js
mov
jl
lret
jno
xchg
sub
jae
cwtl
mov
xchg
inc
sub
dec
sub
inc
jnp
stos
mov
in
filds
cmp
sub
or
inc
mov
and
pop
push
mov
fstl
lcall
push
sarl
aad
mov
scas
and
out
cmpsl
leave
stc
fcmovnbe
push
adc
fisubs
and
mov
stc
repnz
js
daa
enter
cmp
push
out
pop
jno
ss
jmp
pop
sub
mov
add
bound
in
cmp
out
mov
lods
mov
fcom
nop
and
movsl
adcb
iret
addr16
clc
rcrb
ljmp
idivl
inc
icebp
and
cmpsb
dec
out
lcall
iret
push
inc
pop
dec
cmpsb
pusha
mov
mov
std
pop
push
roll
xchg
in
loopne
pop
mov
mov
sbb
xor
sbb
inc
mov
shrb
mov
ds
mov
fisubrl
xchg
movsl
xchg
out
sub
push
scas
data16
and
push
out
and
call
subb
scas
popf
imul
out
cmp
dec
cmp
inc
mov
sub
fistl
rcrl
or
dec
dec
xor
repz
xchg
lret
popa
das
inc
xor
dec
in
fwait
sub
adc
inc
lock
leave
pop
addb
lret
sbb
mov
jbe
jg
cli
ss
sub
mov
adc
push
adc
mov
push
pop
mov
mov
test
inc
xor
inc
loopne
test
rcrl
add
lds
cmc
jge
jbe
roll
cli
or
lods
or
mov
cs
adc
cli
pusha
cli
push
mov
sub
pop
adc
test
imul
jecxz
jo
mov
pop
and
mov
mov
stc
lock
addr16
lret
mov
shrb
and
pop
scas
push
adc
dec
cmpsb
aas
xchg
fidivl
cld
cmp
call
inc
push
push
sbb
insb
push
and
lret
repnz
leave
xor
and
adc
adc
push
iret
mov
jg
pop
mov
xchg
daa
add
sub
xchg
inc
int
jmp
sbb
pop
mov
cmp
xlat
dec
loope
ret
cmp
fmulp
stc
dec
cmp
mov
fcoms
dec
mov
out
lods
cli
push
and
mov
dec
sbb
pop
js
into
lods
mov
outsb
add
sbb
mov
ljmp
call
loopne
pop
jo
repz
loope
sub
insl
jecxz
rcr
imul
aam
cmc
lret
hlt
das
loope
paddsw
push
inc
sarl
movsb
fs
dec
cmpsl
or
cmp
loopne
les
add
pop
mov
ret
xchg
mov
std
sbb
jge
and
dec
ret
push
adc
out
push
int
scas
insb
lods
int3
cmp
and
cmpsl
rcll
leave
inc
into
lods
jns
mov
je
cmp
test
pop
mov
gs
or
dec
rclb
sub
xchg
movsl
ret
insb
sbb
test
in
jbe
call
sbb
jne
dec
shrb
daa
mov
pop
icebp
lret
scas
mov
bnd
scas
lds
xchg
sbb
aam
iret
push
mov
xor
ss
push
push
out
movsl
xchg
test
xchg
subl
mov
dec
test
xor
adc
and
add
push
test
out
jge
add
pusha
sub
inc
stos
js
mov
lea
jp
pop
rorb
or
aaa
cmp
stos
sub
scas
add
xchg
cmp
int3
sub
ss
ror
fmulp
or
xchg
loop
cmp
mov
sub
jge
and
dec
push
cld
ret
popf
scas
decb
cld
cmc
xchg
mov
sahf
test
movl
cmc
dec
xchg
jp
std
lahf
mov
xchg
mov
rcll
repz
inc
or
cmc
mov
lods
idivl
out
and
lods
or
mov
mov
cmpsl
pop
imul
push
sub
adc
ret
mov
and
cmp
dec
or
jge
inc
sbb
inc
push
mov
xor
mov
cmpxchg
sub
push
pop
int3
ja
stc
loope
or
out
icebp
popf
cmc
icebp
mov
push
mov
jp
pop
sub
mov
xchg
inc
dec
mov
add
sub
insb
or
sbb
mov
loope
push
sbb
in
fisttps
sbb
mov
fiadds
cli
push
mov
push
out
xchg
das
stos
pop
xlat
rcrb
sarb
movsb
ret
xor
pop
push
rcrb
ja
lea
insb
into
ja
jg
repnz
jecxz
sub
push
pop
gs
mov
jmp
cmp
sarb
pop
roll
push
pop
stos
xorl
test
mov
sbb
xor
andl
and
xor
mov
call
daa
xor
xor
sahf
popa
push
je
and
xchg
xlat
cli
lret
loopne
stos
push
arpl
outsb
jmp
les
xor
mov
xchg
inc
or
pop
push
insb
cwtl
cli
jp
loopne
hlt
pop
outsl
movsl
xchg
fisubs
scas
mov
les
inc
jp
mov
addr16
in
inc
jb
sbb
sub
push
xchg
xchg
repz
cld
das
adc
xor
aaa
add
mov
andl
jmp
rcll
lock
adc
mov
xchg
lahf
aas
and
pushf
test
adc
loopne
cmpsb
inc
jo
in
prefetch
repnz
lods
push
cltd
fnsave
fidivl
mov
lds
add
pop
sahf
fistpl
outsb
jbe
adc
popf
xorl
xor
sub
inc
negl
xor
xor
inc
pop
pushf
adc
lahf
mov
add
movsl
cli
adc
aaa
sub
pop
dec
repz
stc
ljmp
mov
push
mov
fdivs
fnsave
in
push
cld
in
xlat
ret
fnstenv
mov
sub
popa
sub
dec
arpl
aaa
sbb
add
dec
das
call
insl
xchg
mov
ss
rcr
pop
js
in
lea
mov
rcl
fisubrs
les
aam
ds
cltd
mov
cld
lods
fs
sbb
dec
push
xor
add
fs
pusha
lods
icebp
jecxz
jnp
adc
lock
and
xor
insb
add
outsb
jno
push
lods
sbb
lret
xrelease
cmp
fists
sub
add
ficoml
cmp
and
shll
mov
inc
add
out
or
bound
jbe
or
adc
arpl
add
jecxz
mov
into
inc
scas
outsl
cmp
pop
sbb
jnp
lock
xchg
sub
push
aad
dec
push
mov
cmpl
je
enter
add
xor
rcr
stos
mov
cmc
jge
xor
test
sbb
lea
pushf
inc
popf
add
subb
es
cmp
les
adc
or
cmpsb
jmp
cltd
sbb
mov
clc
inc
xchg
sahf
fistl
nop
or
jns
mov
in
push
xchg
add
pusha
mov
push
mov
add
in
loopne
dec
xchg
jo
jecxz
mov
push
xor
stos
pop
mov
jmp
fbld
and
add
dec
xchg
das
notl
sub
inc
aaa
xor
xor
add
push
add
or
xor
cs
faddl
in
dec
jge
sbb
mov
sub
cmp
adc
mov
jmp
push
cmp
xor
jns
out
lods
mov
test
dec
pop
dec
and
adcl
adc
or
fstps
cmp
fstpl
jbe
mov
push
dec
xchg
popf
movsb
out
inc
inc
adc
sbb
das
add
adc
adc
xor
mov
arpl
std
add
scas
cmpsb
ja
pop
rcr
inc
call
sub
into
addps
rcll
repnz
lods
sets
aam
mov
pop
mov
subl
mov
mov
out
sahf
xor
ja
stc
inc
mov
jl
movsl
rcrl
add
inc
push
stc
and
std
ficompl
xor
cmp
mov
pop
or
in
xor
mov
xchg
adc
into
daa
pop
fbstp
jle
push
aaa
dec
inc
sub
push
dec
in
fld
mov
pop
push
clc
add
jbe
cmc
mov
lea
lods
mov
push
cmp
jle
add
aas
aaa
shlb
fincstp
sti
mov
test
or
jmp
cmpsb
imul
inc
push
mov
fldt
xchg
or
sti
adc
xchg
push
es
scas
gs
bound
xchg
in
pusha
jl
incl
out
mov
jge
inc
fisubl
add
push
insl
scas
mov
sub
rcrl
mov
scas
mov
push
movsb
cmp
pop
and
lods
pop
sbb
add
fidivrl
mov
fstpl
push
ret
mov
xchg
jo
icebp
ret
push
inc
dec
jb
pop
enter
xlat
inc
lcall
pop
dec
popl
lret
ds
jge
add
in
ljmp
mov
adc
notb
pop
pop
jg
pop
shr
push
movsl
pop
enter
scas
add
and
xchg
aad
jno
lock
sahf
mov
and
in
fstpt
sahf
arpl
push
ljmp
out
insb
mov
outsl
test
sbb
jns
loopne
jg
enter
sub
mov
inc
test
mov
push
pop
movsb
and
testb
xchg
decb
repnz
das
or
jnp
int
lcall
inc
stos
mov
mov
rorb
jo
add
test
nop
dec
or
adc
ljmp
jbe
inc
in
jg
sub
cmp
jo
mov
les
xchg
iret
popl
pusha
sbb
repz
test
in
mov
lods
scas
jo
and
mov
sub
jnp,pn
rcll
mov
xor
mov
mov
mov
inc
push
adc
mov
lahf
sti
sbb
dec
fsubr
xor
ds
cmp
mov
into
test
pusha
hlt
in
insl
lahf
push
dec
popf
loope
add
cs
test
fildl
fcoms
sub
arpl
xchg
insb
int
popf
jbe
inc
inc
xlat
sbbl
mov
loopne
data16
filds
fildl
xor
lods
jae
jp
adc
jmp
ljmp
sbb
aam
aam
sti
in
mov
pop
jp
add
fs
out
mov
stos
bound
xchg
ds
test
negl
sbb
mov
daa
jmp
dec
test
insl
aas
jecxz
jns
xchg
mov
sbb
adc
jg
push
aaa
dec
dec
pop
out
push
lcall
test
aad
push
mov
insb
cld
lcall
xchg
inc
leave
hlt
dec
cmp
fsubl
adc
filds
es
je
insl
sbb
mov
rcr
sbb
add
mov
in
clc
insl
mov
iret
adc
push
add
mov
xchg
inc
mov
xlat
mov
test
fsqrt
push
inc
icebp
sub
movsb
sbb
loope
aad
push
and
xchg
jne
shl
clc
add
inc
imul
test
jns
mov
or
mov
mov
mov
je
mov
xchg
jl
mov
icebp
int
stc
dec
jg
mov
clc
add
test
leave
mov
mov
jle
mov
fldl
dec
mov
loop
mov
lds
xor
fs
mov
and
ret
pmuludq
fimuls
xor
dec
mov
mov
add
enter
xor
xor
adc
push
test
std
push
mov
xchg
mov
cmpl
dec
jno
adc
stos
sbb
dec
test
add
mov
mov
dec
sub
dec
fwait
ljmp
mov
lahf
inc
add
sarl
in
aam
jnp
aam
fldenvs
je
xchg
mov
stc
imul
pop
out
xchg
push
adc
leave
nop
mov
sub
jge
push
mov
cltd
cmpsb
rcll
add
mov
inc
scas
adc
xor
jge
pop
pop
sbb
sbb
push
fidivs
aaa
jle
and
sbb
arpl
pop
pop
shll
inc
cwtl
xchg
in
mov
pushf
in
cmpsb
jb
in
adc
ljmp
mov
pusha
mov
xchg
jle
out
outsb
cltd
adc
hlt
movsb
sub
iret
push
out
lds
fwait
ds
mov
lret
shll
xchg
pushf
mov
ss
pop
mov
int
xchg
dec
inc
adc
push
lock
ror
je
pop
outsl
lock
push
xor
cmp
jne
sub
movsl
xchg
test
xchg
in
pusha
jno
mov
mov
int
out
shl
or
mov
pop
pushf
lods
mov
popf
dec
mov
leave
inc
xchg
push
jmp
lods
mov
daa
xorl
call
arpl
mov
insl
xchg
dec
ficoml
mov
pop
push
mov
push
and
xchg
sbb
dec
sbb
das
adc
inc
aam
dec
and
adc
jecxz
push
and
jge
popf
mov
mov
cmpl
enter
lods
not
push
push
pop
push
cmp
sub
nop
jne
push
nop
scas
push
jge
call
in
in
popf
movsb
pop
mov
movsl
lret
icebp
push
sub
stos
shlb
js
je
pusha
or
out
fdiv
out
adc
mov
xorb
loop
sub
push
sub
mov
fsubrs
fwait
mov
orb
jge
and
rcrb
loop
dec
push
fxch
sahf
cltd
cli
test
inc
leave
and
pop
test
or
in
mov
nop
lret
aaa
cltd
xchg
mov
cmp
inc
call
rep
iret
jge
aaa
lcall
imul
push
std
inc
and
cmpsl
std
xlat
pop
mov
push
bound
cmc
push
ret
sbb
dec
xchg
stos
movsb
xor
or
in
adc
aam
inc
pusha
lods
sar
cld
stos
cmp
movb
dec
mov
std
push
out
outsb
adc
jmp
idivb
push
or
ds
lods
adc
dec
dec
mov
xor
push
add
inc
insl
cmp
jbe
mov
add
mov
sub
sbb
add
sbb
cmp
lcall
aam
mov
cmp
notl
jge
mov
ds
stos
testb
dec
jbe
pop
mov
xchg
push
es
add
imul
xor
fildll
xor
pushl
jge
rcrb
lcall
popf
movsb
xor
adc
jmp
inc
sub
daa
loope
mov
stc
cmp
mov
sahf
ja
fldt
add
in
and
imul
shll
mov
xor
sub
sbb
out
rorb
or
mov
jne
xor
jb
aad
dec
pop
mull
fldpi
xchg
dec
jbe
lea
sub
lcall
gs
stos
or
aad
not
clc
icebp
aad
dec
fdivp
adc
cmpsb
aaa
push
push
arpl
xchg
in
xlat
outsl
dec
inc
jecxz
mov
pusha
push
add
sub
mov
pop
jle
test
pop
pop
mov
test
inc
pushf
repz
pop
cmpsb
or
mov
std
popf
sbb
xchg
dec
mov
push
pop
lock
pushf
js
adc
sbb
sub
inc
pushf
rclb
xchg
cmp
lock
add
lods
push
aaa
lods
or
mov
shl
push
sbb
and
inc
jl
ss
fstpl
mov
jns
ffreep
cmp
popa
aad
pop
jle
inc
xchg
arpl
mov
jo
lret
cmp
popf
mov
repnz
pop
loopne
pop
jmp
sbb
and
mov
lcall
xor
dec
cmc
test
in
rorl
int3
loope
xchg
jnp
sbb
mov
sbb
pop
js
xchg
mov
cli
add
out
jae
cmp
cmove
and
sbb
lret
test
pop
mov
lds
outsb
lret
xchg
pop
push
loope
nopl
xchg
sbb
pushl
xor
loop
aas
ss
or
and
hlt
orl
xchg
out
jp
aas
fstp
jl
mov
push
sub
orl
pop
mov
cmp
dec
push
jo
mov
mov
inc
ss
filds
xor
test
testb
sbb
push
push
push
outsl
mov
int
xor
add
pop
popa
jae
adc
arpl
in
leave
pop
out
sub
push
rorb
fdivrs
pop
mov
jp
and
jmp
adc
sub
cs
xchg
dec
or
sub
xorl
lds
and
mov
mov
mov
sbb
push
data16
mov
dec
mov
inc
out
addr16
cli
in
shl
iret
sbb
fldt
loopne
mov
adcl
test
and
jl
pop
out
mov
and
je
cmp
mov
and
mov
inc
or
or
jnp
or
pop
cwtl
jnp
out
rcll
sub
testb
xchg
iret
jnp
mov
sbb
mov
dec
aas
test
cld
xchg
lahf
nop
addr16
mov
insl
loope
jmp
sbb
scas
mov
decb
cmp
lock
xor
pop
and
mov
inc
loopne
xor
in
push
test
mov
adc
fisubl
pop
lcall
jne
pop
mov
mov
out
fimull
jbe
jnp
dec
mov
xlat
pusha
es
push
sub
mov
and
aad
rep
push
faddl
mov
mov
push
ljmp
clc
jg
ret
daa
adc
mov
dec
xchg
sub
rclb
fldenv
sub
sub
jae
mov
sbb
dec
jge
stos
outsl
sub
mov
mov
adc
scas
fwait
lods
jmp
mov
fcompl
sub
push
pop
cmp
and
inc
jmp
es
jbe
popf
jmp
sub
jb
xor
dec
sarb
or
lods
movups
push
and
and
xor
mov
mov
in
ret
hlt
cmp
or
outsl
xlat
jl
lock
cmp
jne
sbb
leave
cmc
iret
decl
ja
fiadds
dec
pop
addr16
lret
sarb
jne
pushf
aaa
push
nop
jg
add
or
sub
fwait
adc
cmp
loope
add
sbb
push
and
adc
loop
imul
shlb
enter
jb
inc
push
mov
loopne
out
push
push
sbb
sbb
push
add
filds
cmc
mov
int
repnz
int3
dec
push
fnstcw
popf
mov
aaa
xor
rcrb
test
les
adc
adc
jl
cmp
cltd
xchg
je
arpl
jg
ret
mov
int3
popf
add
dec
or
ret
mov
jne
sti
mov
xchg
sub
idiv
mov
inc
imul
test
adc
xor
fwait
xor
pop
aas
fwait
outsb
mov
jae
xchg
ja
mulb
or
loop
cmp
jae
push
lods
aaa
or
out
mov
gs
dec
mov
xor
aaa
xchg
sbb
les
cmp
mov
mov
sub
pop
pop
push
xchg
pop
pop
inc
push
cmpsl
add
rolb
notl
mov
lods
push
sbb
les
push
aas
dec
fnsave
push
sarl
iret
testl
jmp
dec
inc
mov
mov
ss
or
mov
mov
outsl
shl
or
pop
dec
jb
push
cmpsb
push
pslld
fisttpll
sbb
stos
lahf
pop
jbe
mov
sub
lods
dec
jmp
dec
bound
out
in
adc
or
in
cmpsb
dec
js
mov
stos
inc
sub
rcll
pop
in
rcr
fbld
jge
ror
push
lcall
pop
repz
fs
inc
lods
cld
xor
dec
lcall
popa
and
mov
sahf
push
mov
lahf
mov
mov
push
sbb
rcrb
int
xlat
iret
mov
fbstp
mov
adc
arpl
mov
dec
cltd
icebp
leave
mov
cmp
or
sub
pusha
mov
fld
add
pop
ja
pusha
xor
sub
stc
jg
std
inc
mull
mov
insb
inc
loopne
ja
jle
in
or
scas
push
iret
xchg
cwtl
and
push
push
mov
add
cwtl
mov
dec
mov
stc
cmp
movsl
xlat
daa
push
push
inc
xor
dec
xchg
inc
loop
imulb
aaa
cmp
push
sub
adc
or
xor
pop
icebp
pop
jl
lahf
jp
arpl
dec
add
insl
lea
fsubp
mov
scas
pushl
inc
inc
adc
mov
sub
and
mov
aas
int
push
bound
pop
sbb
gs
mov
pusha
inc
cmp
push
lock
loopne
xchg
aas
ss
sahf
aad
aad
fwait
pop
iret
out
mov
rorb
mul
xor
daa
push
inc
dec
movsl
inc
dec
inc
test
push
sub
ret
leave
icebp
into
sub
les
stos
das
xchg
fdivr
xchg
popf
ret
pop
mov
xor
addr16
roll
or
repnz
rcrb
jge
loope
xchg
addl
outsl
sub
cmpsl
pop
mov
mov
or
addr16
push
das
test
enter
adc
jle
and
ja
bound
cmp
ja
daa
into
movsl
inc
push
popf
jmp
sahf
stc
fildll
xor
pop
dec
cmc
pop
xchg
or
jmp
aam
sbb
lret
cmpsl
andl
xchg
or
das
inc
fdivs
mov
inc
lds
cmpsb
lcall
std
sub
clc
mov
push
mov
icebp
mov
jge
and
int3
jecxz
xor
push
mov
mull
push
stos
push
xchg
sub
in
pop
and
dec
pusha
fcompl
dec
mov
lahf
mov
inc
stos
out
js
jecxz
xor
ja
mov
pop
xchg
aas
or
ja
dec
push
xchg
mov
push
xchg
repz
sbb
jg
in
mov
imul
cmp
lock
sub
mov
mov
or
movsb
jb
int3
push
push
arpl
out
aas
stos
test
xchg
lret
mov
int3
in
arpl
cmp
cltd
push
add
out
or
loop
sub
pop
adc
lods
sahf
mov
nop
jno
cltd
scas
femms
cmp
dec
pop
xchg
ds
fbstp
sbb
fmulp
icebp
sub
xor
mov
mov
jno
sub
push
xchg
jnp
add
jns
lds
xor
adc
rorl
or
popl
lret
mov
loopne
mov
mov
jno
sub
push
rorb
lret
out
pushf
cwtl
aad
nop
int3
roll
cld
int
xor
inc
fsubr
dec
out
in
sub
call
jne
add
pop
lret
mov
fldt
adc
xchg
sbb
repnz
cmpsl
popl
push
or
cltd
xchg
dec
int
xlat
sbb
xorb
mov
ficompl
sub
dec
lods
js
lods
stos
int3
das
inc
mov
pop
mov
iret
in
sbbb
das
sbb
addb
mov
sahf
and
xchg
daa
push
sahf
jnp
xchg
jb
xor
repnz
rolb
xchg
mull
cltd
stos
sbb
fs
mov
xchg
cmc
mov
jae
or
subl
hlt
leave
sub
pop
hlt
scas
jbe
push
mov
mov
jge
lock
mov
mov
adc
jae
push
rorl
xchg
add
xlat
aam
xor
popf
ror
scas
inc
jle
mov
imul
mov
adc
je
out
or
inc
mov
xchg
aam
sub
loope
in
cmp
inc
test
xchg
cs
cmp
outsb
movsb
or
xchg
ja
jmp
add
lret
add
push
arpl
cli
outsl
sub
mov
push
mov
repz
iret
shr
or
and
jne
das
hlt
cwtl
pop
imul
mov
push
xchg
inc
inc
mov
js
push
test
leave
ja
pop
rorb
mov
mov
lret
xor
dec
xchg
ja
test
cld
or
pop
sbb
cli
loop
mov
or
inc
mov
and
in
orl
add
out
and
push
fcmovnu
add
mov
sbb
popf
fmul
pop
subb
sbb
inc
test
jo
xchg
sbb
pop
inc
jle
popf
xchg
jnp
mov
ljmp
xchg
xchg
push
cwtl
mov
sahf
mov
test
lds
or
xchg
xchg
add
cltd
mov
push
inc
sbb
sbb
pop
das
imul
inc
cmp
mov
loop
push
dec
fcoml
data16
mov
add
pop
mov
adc
in
pop
dec
out
stc
lods
sub
aam
fwait
jg
dec
rcll
or
mov
shrl
mov
push
jp
push
call
mov
jns
xor
ja
stos
push
jmp
mov
fsubrs
loopne
imul
testb
testl
inc
insl
icebp
xor
das
inc
stos
pop
imul
in
mov
pop
sbb
mov
mov
out
add
xchg
mov
xlat
sbb
cmc
mov
jecxz
xchg
dec
sub
call
aam
inc
fsubr
insl
and
iret
lds
xchg
sti
ss
daa
fcoml
push
pop
xchg
les
roll
lahf
adcb
push
add
in
pop
std
and
inc
sub
inc
imul
cmc
imul
fcom
cwtl
jne
cmp
mov
add
insl
out
out
fsub
push
in
hlt
out
xor
adc
cltd
incl
fcomp
push
sub
push
mov
aas
shll
cmpb
jle
xchg
cmpl
addb
inc
dec
jp
adc
call
call
sbb
aaa
sbb
add
and
test
mov
sub
push
sbb
les
ret
jmp
push
jmp
inc
fiadds
push
in
mov
mov
mov
aad
adc
loope
fmull
add
inc
pushf
loop
jl
xor
xor
dec
xchg
adc
add
sub
cmp
cli
loope
xchg
xchg
push
shll
insl
outsl
mov
testb
xadd
in
inc
hlt
mov
mov
or
ret
dec
loopne
cld
enter
scas
iret
xor
mov
mov
adc
xor
jl
pop
cld
orb
outsb
in
dec
mov
orb
jge
in
shrl
pop
jb
xor
sti
stos
xor
cmpsl
inc
push
shll
fildl
packssdw
push
repz
and
mov
lods
cwtl
sub
jp
or
inc
jmp
fs
push
sbb
cmp
test
negb
push
iret
push
clc
gs
xor
pop
ljmp
imul
inc
insl
js
cmp
xor
sub
hlt
push
mov
sbb
dec
clc
rclb
in
insl
stos
negl
rcl
sbb
daa
pop
mov
sub
cmc
adc
insl
imul
cmp
scas
pop
push
and
je
ja
jae
arpl
mov
int
lods
inc
mov
ss
mov
arpl
and
ss
lods
nop
out
in
inc
or
popf
xchg
xchg
adc
mov
or
sub
lods
popa
jmp
into
mov
pop
xor
dec
mov
and
sbb
xchg
push
pop
into
mov
dec
or
jecxz
pop
inc
es
lods
js
sbb
addr16
xchg
into
shlb
lods
movsb
pop
in
cmpsb
sub
or
sub
lods
inc
sub
clc
movsb
dec
lret
mov
push
lahf
sti
ds
jne
stc
les
into
inc
in
gs
popa
aaa
stos
pop
cmpl
pusha
push
scas
mov
sub
hlt
jne
ds
andl
mov
out
call
or
rcr
test
push
div
das
mov
cld
sti
sbb
jbe
jb
mov
jns
imul
pop
enter
xor
push
les
cmpl
dec
add
mov
jo
pop
test
jl
mov
daa
xchg
repz
jno
xchg
and
fcoml
xchg
sti
mov
ds
loopne
xchg
icebp
outsb
mov
mov
pop
jbe
lds
notl
loop
push
add
leave
inc
xchg
repnz
add
pop
das
jb
arpl
imul
dec
sbb
push
ret
inc
stos
jmp
xchg
adc
mov
push
imull
enter
sti
inc
and
imul
fsubr
jns
imul
repnz
add
scas
pop
pushf
aad
std
xchg
scas
or
pusha
pop
outsb
jnp
mov
xchg
jns
stos
mov
sti
call
pop
iret
xor
insb
into
and
push
repz
mov
fs
std
negl
lea
inc
jbe
pop
fsubl
jl
lret
mov
repnz
sti
adc
pop
fcmovu
adc
adc
rcr
aam
imul
lahf
mov
ret
sub
cmp
bound
pop
lods
shlb
push
jbe
sub
insb
mov
lds
push
and
mov
aad
sbb
pop
int
mov
roll
xchg
cld
mov
jno
into
cli
cmpb
push
push
push
add
ror
rcr
enter
pop
ret
sbb
pop
ret
jge
outsl
dec
fnstenv
lods
cmp
sahf
cmp
loop
loopne
push
ds
rorb
jb
lds
push
inc
iret
imul
dec
jne
mov
fstl
xor
sbb
sub
dec
inc
adc
pusha
hlt
pop
xor
test
outsb
push
insb
add
pushl
fst
std
stos
mov
pavgw
stos
sub
decb
xlat
cltd
push
inc
cmpl
and
inc
hlt
pop
pusha
out
mov
sub
jnp
loop
stos
mov
das
out
xor
ja
rorl
aaa
lret
push
scas
cwtl
mov
jae
enter
jno
cmp
sbb
cmp
jno
lret
loope
loop
xlat
clc
movsl
dec
test
push
hlt
clc
rcrl
cmp
push
test
jle
push
dec
or
jnp
loope
and
int3
inc
jne
pushf
scas
int3
leave
es
jns
and
sbb
cmp
pop
push
in
scas
pop
sub
test
add
dec
xchg
and
ficoml
fidivrl
sbb
sub
xchg
fucomp
cwtl
push
cli
popa
mov
sub
mov
dec
cld
or
mov
fs
aam
es
xor
addr16
xor
mov
mov
call
js
je
inc
adc
jle
test
jnp
jecxz
and
push
cmp
in
ljmp
lock
adc
mov
mov
cltd
fwait
imul
or
mov
and
xchg
out
cmp
dec
adc
lods
jo
jo
xchg
and
dec
mov
pop
test
into
sbb
or
add
orl
bound
push
xchg
negl
inc
mov
xchg
jmp
xchg
shr
mov
fsts
pop
or
adc
pop
mov
xchg
pop
daa
repz
imul
data16
ret
sub
bswap
lret
movsb
pusha
insl
stos
mov
fistl
cmp
cmpb
jge
aam
iret
loop
or
adc
jl
cs
inc
addl
jne
mov
pop
push
or
xor
mov
nop
ljmp
in
pop
or
imul
insb
inc
bnd
movsb
jne
inc
lds
mov
jae
sub
xchg
jecxz
scas
mov
mov
sub
shlb
push
pop
mov
xor
mov
inc
add
xchg
movsl
rorl
xor
fcompl
pop
xchg
das
mov
push
fldcw
in
and
cmp
push
loopne
mov
xchg
mov
push
test
mov
mov
inc
mov
cmp
into
dec
mov
fstps
rcl
cmp
test
push
lcall
test
pop
es
mov
dec
es
fisubrl
cwtl
jno
xchg
shll
popa
push
lds
sub
mov
and
dec
in
imul
mov
cmp
ret
mov
pushf
pop
lcall
test
jp
mov
pop
imul
fidivrs
aaa
inc
stos
dec
adc
mov
or
or
lret
push
push
out
jle
idivb
push
sub
out
jg
jns
dec
add
scas
test
fdivrl
lods
dec
das
sbb
rol
dec
push
adc
lods
mov
and
cmp
sub
lds
pop
aas
loop
dec
in
dec
sub
adc
pop
lret
inc
jnp
xchg
cmpsb
ret
out
mov
mov
into
repnz
xlat
mov
add
mov
push
jl
int
cmp
je
mov
pop
aas
gs
test
enter
xchg
or
mov
mov
es
jo
mov
xchg
dec
add
mov
data16
pop
jg
and
lds
pop
pop
mov
inc
cmp
fistpll
and
ret
and
loop
movsb
leave
stos
adc
mov
xchg
mov
mov
add
cmp
xchg
mov
popf
icebp
or
dec
xor
xchg
xchg
loop
cmpsb
dec
xor
call
int
dec
cli
pop
pusha
mov
data16
cwtl
mov
push
aam
insl
clc
scas
pop
shll
in
ret
sub
add
adc
push
idivb
sub
lods
lods
inc
mov
xchg
cs
push
cmp
pop
int3
mov
js
or
xor
xor
test
fnstcw
adc
orb
sub
pop
inc
lret
cmpsb
push
inc
lcall
movsb
jl
lea
mov
ficoml
lret
adc
fs
push
dec
sar
lcall
cmp
fisubl
jl
and
sub
xchg
cmpsb
xchg
jmp
inc
filds
mov
xor
fs
cmp
pop
cwtl
mov
int
adc
jo
push
push
push
sbb
add
ds
lods
jge
ljmp
imul
mov
xor
mov
jle
and
mov
xor
test
xor
jp
ret
xor
lcall
lock
dec
inc
add
sbb
jae
jae
inc
lcall
cmp
pop
sbb
mov
sbb
loop
loope
ljmp
mov
add
fstpl
insb
jb
insb
cmc
pop
aaa
decb
addl
dec
lods
leave
cmp
les
jne
insb
jmp
icebp
push
test
call
lds
imul
stc
jge
inc
pop
dec
int
mov
sahf
push
add
xchg
addr16
lods
mov
push
popf
mov
rol
divb
in
rorl
imul
add
fbld
hlt
arpl
and
and
dec
popaw
scas
xchg
jp
gs
mov
bound
shlb
ret
and
sub
nop
rorb
jnp
aaa
xchg
xlat
int
cli
cmpsb
addr16
imul
cmpsl
repz
and
or
sbb
sbb
xor
jno
mov
addb
int3
dec
push
or
sbb
push
sub
mov
cmp
pusha
mov
aas
cwtl
fsts
push
push
push
cmp
mov
movsl
cmpsl
fs
ss
ss
pop
inc
outsl
cmp
addb
xor
pop
ja
popf
mov
cmpl
in
lcall
mov
xchg
out
lcall
add
int
or
ret
fstps
cmp
cld
aad
loopne
push
add
lods
rcrb
xor
xchg
mov
loope
jle
jl
adc
jae
lret
jg
push
jl
dec
inc
or
pop
mov
sub
std
stos
mov
dec
ja
xor
or
xchg
stos
push
pop
lods
lock
test
pusha
lods
frstor
sbb
outsl
or
ljmp
push
aam
mov
sub
mov
sub
push
inc
add
or
mov
ljmp
or
mov
iret
jmp
out
popf
test
popf
jno
pop
cli
iret
adc
jb
mov
in
cwtl
mov
pop
test
inc
mov
daa
sbb
push
pop
idivl
push
test
push
out
xchg
xchg
pusha
mov
inc
inc
jbe
dec
jle
shl
fnstsw
daa
idivb
nop
sbb
dec
adc
fmul
mov
pushf
mov
imul
je
mov
jbe
sarl
mov
inc
push
imul
repz
mov
daa
sbb
cwtl
or
jae
test
xlat
andb
push
data16
lock
rclb
and
xor
add
jp
or
je
shrb
cmp
sbb
lea
jge
lods
push
pop
xor
sbb
rorb
sar
pop
stc
jg
inc
cwtl
jg
stos
jle
jb
mov
out
orl
cmc
lods
lds
mov
daa
push
adc
xchg
or
mov
sub
dec
adc
test
filds
sub
pushf
sbb
mov
lret
adc
sbb
aad
push
insl
cld
or
rcrb
push
cmpsl
sarb
dec
jg
cli
leave
pop
xor
out
aam
mov
jg
inc
mov
fdivrl
jmp
movsb
fistpll
pusha
inc
jge
push
and
xor
ja
adc
mov
in
out
nop
cmp
add
lcall
push
fcompl
fistl
imul
aad
cmp
sbb
loopne
inc
cli
das
test
mov
dec
fidivrs
hlt
pop
lret
add
cltd
lock
in
xor
mov
xchg
hlt
popf
mov
std
pushf
push
jbe
mov
sub
fs
hlt
pusha
sub
js
jnp
jns
clc
adc
inc
pop
and
mov
mov
mov
add
or
push
scas
pusha
mov
push
xor
pushf
pop
sub
loope
jbe
icebp
or
add
mov
mov
push
jl
and
xchg
mov
mov
mov
test
sub
pusha
cmp
push
das
dec
out
sbb
inc
or
out
pop
mov
imul
ret
push
sbb
out
push
xor
je
subb
rcl
repz
push
mov
les
mov
dec
mov
sahf
jl
stos
and
cmp
clc
insb
sub
cmp
mov
lods
xchg
repz
inc
mov
adcl
push
cmpb
hlt
lods
sbb
mov
pop
xchg
inc
aaa
jecxz
xorl
jle
inc
movsl
fidivs
out
clc
xchg
daa
jns
xor
push
jno
push
push
insb
jne
pop
inc
fs
ljmp
xchg
add
lock
fadds
sbb
pmulhuw
popa
shlb
neg
jp
in
mov
add
jp
hlt
lret
xchg
repz
add
sahf
jo
push
mov
jp
roll
dec
add
cmp
dec
das
xor
test
gs
cmpsb
ja
out
adc
gs
mov
sbb
lock
sub
push
das
dec
push
mov
xor
and
mov
mov
sar
fwait
xchg
test
shrl
out
jnp
mov
mov
push
pop
cmp
repz
nop
je
mov
rclb
ljmp
sub
cwtl
sub
imul
cmp
out
push
jb
shlb
cs
xchg
mov
xchg
and
cs
sbb
inc
jle
mov
nop
nop
xchg
popf
leave
sub
dec
pop
in
dec
adcl
push
lea
shrb
push
lret
fcmovnb
sbb
repz
cmp
bound
out
out
jno
adc
pop
out
mov
mov
rorl
mov
call
outsl
jg
rcl
mov
push
es
bound
dec
shlb
mov
lods
dec
leave
ds
cmp
dec
mov
lock
pop
aaa
push
inc
sbb
iret
hlt
cmp
sub
inc
in
jecxz
call
mov
imul
mov
or
bound
iretw
fidivs
test
pop
push
scas
cmc
add
lret
sub
imul
movsl
and
push
std
mov
je
xchg
cld
aaa
mov
add
rcr
aad
stos
ja
outsb
mov
std
mov
dec
sbb
subb
cmp
popa
xor
in
addr16
in
test
jo
and
jns
in
sub
arpl
jmp
xchg
fcoms
call
xor
loop
xor
dec
scas
int3
cmpsl
push
dec
ljmp
jo
imul
int
push
filds
push
or
int
mov
mov
gs
rorb
push
cmp
scas
enter
xchg
xor
outsl
push
fucomi
aad
stos
std
lock
pop
out
inc
scas
sub
xchg
jo
popa
dec
inc
js
mov
call
jo
aas
push
add
pop
fwait
sbbb
outsl
cmpsl
loopne
jl
inc
ljmp
outsl
popf
inc
ret
inc
sbb
lea
not
loop
or
xlat
mov
lock
das
fidivrs
pop
push
nop
leave
adc
dec
jb
pop
lock
test
jmp
mov
and
in
pop
mov
cmp
sub
mov
or
fdiv
jb
xor
popf
pusha
fldl
shll
lods
lock
mov
aaa
push
lock
sbb
stos
aam
sbb
stos
ja
lock
or
mov
inc
push
fldenv
lods
outsl
dec
scas
inc
mov
mov
outsl
mov
lock
iret
add
scas
or
in
popf
sub
clc
and
adcb
fs
sbb
enter
jne
or
gs
arpl
pop
insl
jnp
fimuls
js
sub
imul
orl
cmp
out
lods
xchg
cmpsl
lods
mov
sub
mov
push
test
outsb
out
mov
and
test
cmp
lea
ja
pusha
ds
jle
add
pusha
sub
loopne
into
lret
dec
add
jo
ss
push
and
les
inc
das
lahf
fwait
popf
cmp
lock
scas
xchg
inc
in
stos
or
cld
mov
mov
and
sbb
and
out
daa
fs
push
cmp
mov
roll
xchg
mov
dec
mov
lret
dec
clc
gs
movl
lahf
call
push
vandnps
dec
insl
sub
adc
mov
das
xchg
into
je
dec
loop
or
in
sub
sbb
cmp
sub
xor
lahf
push
push
pop
repz
sub
pop
std
jne
iret
cmp
iret
adc
lret
mov
add
jne
cmpsb
insb
xchg
add
and
jae
xchg
mov
mov
add
test
pop
xchg
lods
repz
je
jp
mov
xor
push
sbb
outsb
dec
push
ljmp
sbb
sbb
mov
andb
push
lods
pop
inc
mov
or
push
mov
push
mov
out
imul
adc
dec
push
sbb
mov
int3
jne
cmp
jae
std
jp
jge
pop
mov
jae
jle
in
push
jmp
cwtl
subb
fsubrl
loop
rorl
pop
add
adc
loopne
sbb
imul
lock
inc
int
pop
or
daa
sti
mov
jns
xchg
in
mov
loopne
outsl
or
imul
stos
bound
lock
push
inc
out
jb
test
lea
xor
jns
loopne
dec
mov
out
sub
lds
dec
dec
lods
out
mov
icebp
pop
int
rcll
or
loopne
inc
jbe
sbb
and
loope
add
test
out
sahf
sbb
repnz
dec
and
pop
pop
inc
test
pop
xor
push
mov
lock
shrl
cmp
lds
insb
jbe
sub
sub
push
cmp
out
pop
mov
sbb
mov
mov
imul
fwait
jb
lahf
jnp
int
jno
add
cld
mov
jmp
cmp
fdivl
je
xchg
jecxz
lock
es
pop
add
mov
inc
jecxz
jns
push
or
xchg
mov
xchg
sbb
std
sbb
call
jnp
outsl
dec
add
fcompl
mov
pop
push
js
hlt
lcall
pop
in
dec
roll
ds
mov
xchg
xchg
cmc
add
sub
mov
mov
dec
mov
sbb
fsubrl
xchg
bound
ror
sti
ljmp
das
ja
rcrb
dec
ret
mov
sti
pop
jno
mov
lret
fwait
or
mov
lods
pop
les
push
xchg
lret
jecxz
scas
lcall
dec
fs
sub
outsl
loope
xchg
pop
add
pushf
push
mov
jb
dec
test
outsl
xor
xchg
and
pop
movb
movsb
std
in
aas
cmp
mov
xchg
outsb
pop
mov
xor
int3
and
scas
fdivrl
std
ds
stc
dec
std
ds
add
push
pop
je
ret
push
fwait
aaa
jmp
sub
mov
pop
fdivrs
push
movsl
mov
push
xor
mov
cmpsb
jmp
cmp
xchg
lock
aas
push
inc
cwtl
and
pusha
jbe
popa
daa
sub
xchg
inc
add
js
xchg
leave
jns
shrb
mov
bnd
cli
es
and
push
dec
mov
jae
adc
enter
or
mov
and
sub
fwait
shrb
inc
sarl
cmp
jno
xchg
lea
lcall
xor
jecxz
push
and
in
sbb
sub
out
mov
mov
pop
jnp
or
jne
movsl
call
jae
mov
cmpl
lahf
or
pop
and
xchg
xor
push
fdivl
inc
xchg
notb
xor
jb
mov
std
mov
mov
rcr
inc
cmp
or
clc
cmpsb
jge
loopne
sbb
bound
xor
or
xchg
aam
or
mov
loope
mov
stos
sub
imul
fdivl
mov
pop
inc
ret
sbb
mov
int
inc
fidivrl
and
fs
in
negb
jl
lcall
adc
jmp
push
and
pop
xchg
xor
push
in
fwait
into
inc
jns
fs
dec
mov
dec
pop
sar
sub
mov
loopne
adc
or
loopne
or
sub
add
cmpsb
arpl
xchg
pop
sahf
adc
inc
scas
adc
jecxz
je
mov
ret
cli
daa
pop
lea
call
xor
mov
mov
and
pop
shll
mov
dec
sahf
ror
sbb
hlt
test
cwtl
adc
cmpb
insl
mov
in
dec
jbe
or
into
push
pop
jle
int3
popf
arpl
or
adc
lock
sbb
lcall
lock
adc
cmp
inc
outsl
pop
mov
pop
mov
jmp
dec
lret
push
add
aas
xchg
dec
mov
mov
add
or
xchg
aad
sti
dec
mov
subb
lret
adc
jmp
inc
mov
ljmp
dec
cwtl
dec
cld
bsf
jns,pn
clc
mov
and
ret
aas
pop
shl
aas
int3
xchg
jge
cmp
or
fdivrl
add
jecxz
cmp
aas
dec
mov
out
icebp
xchg
jns
jo
daa
xchg
dec
insl
mov
lret
mov
mov
ret
in
out
orb
popf
das
xchg
cwtl
push
loop
cmp
push
movsl
xor
adc
dec
fsubp
mov
call
inc
xchg
insb
inc
clc
xchg
cld
mov
pop
push
stc
imul
pop
mov
ficomps
add
inc
xlat
mov
push
xchg
aas
in
push
fwait
loopw
cmp
callw
pop
xor
movsb
dec
mov
add
loope
loopne
mov
ktestw
and
jg
test
lret
add
jle
pop
pop
sahf
enter
pop
mov
mov
add
xor
call
pop
and
sub
js
scas
cltd
inc
outsl
mov
hlt
sub
mov
mov
aad
xchg
xor
xorl
icebp
sbb
pop
mov
ljmp
pop
popl
movsb
sub
jg
into
lret
insl
push
lods
lods
jae
cli
xor
jp,pn
jl
jmp
push
sub
in
dec
adc
mov
sub
std
lods
xor
sub
jns
cmp
push
rep
enter
shlb
fmul
cmc
pusha
jp
cs
test
aam
jge
sub
mov
inc
mov
aas
sub
lock
lahf
xor
ret
mov
cltd
pop
nop
xlat
fnstsw
std
mov
push
push
jno
xchg
aam
daa
and
adc
mov
push
mov
aad
sub
or
mov
popl
out
popl
cmpsl
sub
in
xor
hlt
js
outsl
js
xchg
sub
dec
lret
sahf
xchg
fwait
inc
jae
xor
stos
sub
or
xchg
adc
dec
xlat
call
dec
mov
inc
repnz
jae
mov
scas
jbe
sub
and
jne
push
push
push
in
sbb
adc
mov
adcl
cmpsb
arpl
loop
cmp
leave
mov
and
xchg
rcrb
gs
mov
adc
jnp
jecxz
std
pop
pop
push
ret
mov
adc
iret
adc
daa
insl
sub
mov
rol
dec
negl
fs
dec
mov
adc
mov
cmpsl
je
cmpsb
imul
pushf
add
ret
sbb
inc
jbe
mov
mov
sbb
xchg
jge
jmp
stc
lret
inc
jae
dec
repnz
jmp
jb
int
data16
stos
outsl
xlat
std
push
pop
mov
or
mov
mov
les
jp
push
les
inc
out
fs
test
popf
dec
std
push
sar
and
arpl
mov
xor
xchg
adcb
add
inc
ret
stos
xor
mov
ret
lds
sbb
push
sub
dec
pop
jns
cmp
inc
mov
outsb
dec
dec
dec
jmp
movl
sbb
sarb
scas
test
int
imulb
fwait
mov
daa
fincstp
icebp
jmp
and
out
dec
aas
aad
sbb
jne
scas
push
or
lret
inc
mov
dec
xor
mov
movsb
and
mov
mov
cmp
sbb
insl
push
test
inc
mov
fs
cli
jno
in
fdivrl
pop
push
out
jae
fisttpl
sub
cmp
xor
mov
iret
lock
push
ds
jg
sub
mov
mov
lods
mov
repnz
cli
testl
and
hlt
roll
add
mov
lods
push
and
ret
push
out
pop
and
mov
xchg
or
in
shrw
mov
or
fdivrs
adc
gs
push
das
iret
scas
pushf
pop
push
outsl
sub
sbb
xchg
enter
ret
pusha
mov
jle
punpcklwd
push
daa
les
push
dec
push
pop
jg
pop
sbb
and
xor
push
aas
xor
cli
add
or
jge
orb
or
cmp
iret
out
add
sbb
outsb
xor
pop
gs
fxrstor
mull
cmp
add
push
push
mov
ret
mov
idivb
cwtl
mov
insl
pushf
icebp
mov
sar
lods
sbb
push
push
stos
ja
notl
int
aas
movsl
addr16
test
ds
movlps
js
sub
daa
cmpsb
js
xor
std
lcall
data16
dec
fsubs
loope
inc
cmp
xor
mov
jae
mov
mov
or
mov
jae
push
lods
cmpsl
sbb
addr16
pop
lds
jne
mov
xor
mov
outsl
out
sub
sbbb
pop
add
pushf
push
test
push
stos
pusha
out
mov
push
cltd
test
xor
push
mov
inc
rcrb
fcmovnu
arpl
ret
cmc
mov
push
or
cmp
cli
push
cltd
mov
mov
mov
movsl
out
push
imul
sbb
bts
mov
cmpsl
clc
adc
adc
das
jmp
hlt
pushl
shll
xchg
push
sub
adc
das
cmp
dec
sub
cmp
xabort
sub
push
sub
sar
lods
int3
jns
jmp
lret
lret
cmp
sbb
sahf
sti
or
test
test
loope
xchg
jae
push
loope
jbe
popa
inc
jb
pop
jo
into
lea
mov
jbe
roll
or
pop
mov
sub
rep
loope
add
lods
sarl
jg
mov
cwtl
scas
cmp
push
xchg
movsl
sti
inc
sbb
fldenv
out
sbb
xchg
cmc
and
aas
sub
mov
adc
das
outsl
push
mov
outsl
mov
insb
push
inc
xchg
lea
sub
xlat
add
sbb
jg
or
cld
jno
cmp
or
rcrb
mov
in
or
or
sbb
pop
fucomi
xchg
or
aam
aaa
inc
jp
sti
push
call
push
shr
add
sti
dec
inc
mov
jns
xchg
fimull
pop
mov
testl
adc
and
test
cmpsl
in
cmp
mov
xchg
lods
jge
lret
sbb
and
adc
out
jecxz
aam
xchg
mov
or
mov
test
roll
jmp
mov
rcrb
inc
mov
stos
std
jle
pusha
pop
addr16
movb
mov
push
lahf
popf
pop
push
sbbl
movsb
push
push
in
scas
js
stos
lods
push
arpl
in
add
cmc
dec
push
insb
and
notb
add
adc
aad
stos
adc
fstpl
das
shll
add
movsl
and
and
xchg
inc
jg
or
popa
sbb
sub
and
push
cmp
jecxz
and
pushf
inc
xchg
push
aas
mov
cs
ds
cmpsl
fadds
lods
add
adc
cmpsl
sbb
or
pop
lods
mov
pop
icebp
sub
test
push
fbstp
add
mov
cmp
dec
pusha
mov
cmpsb
nop
cmp
inc
ds
icebp
sbb
mov
jg
arpl
inc
xor
aam
movsb
cli
mov
adc
dec
inc
xchg
or
fwait
ljmp
lock
sbb
fdivl
jne
nop
in
mov
dec
test
push
mov
mov
leave
pop
xor
int3
fisubrs
push
orl
movsb
add
jno
ds
pop
jno
cmp
cmp
pusha
xchg
mov
xlat
repz
stos
push
ljmp
add
xchg
in
idivl
cmpsl
xlat
lea
pop
inc
sahf
lahf
dec
mov
adc
lcall
fs
dec
jbe
pop
lcall
in
sbb
call
cltd
xchg
in
or
adc
push
lods
push
testl
push
fiaddl
movsl
or
dec
ret
je
mov
in
outsb
add
sub
stos
pop
mov
xchg
cmp
test
lret
inc
inc
fistpl
sbb
test
bound
xchg
push
xor
data16
adc
lods
xchg
enter
xchg
lock
cmp
repz
movsl
xchg
and
movsb
sahf
out
dec
insl
flds
lods
divb
jmp
inc
push
je
xlat
add
jmp
in
jp
push
roll
mov
fdivrp
jmp
fnsave
andb
dec
mov
and
xchg
dec
adc
sahf
fldcw
cli
pop
cmpsb
dec
ss
test
and
pop
and
xlat
adc
push
pop
cld
out
fs
in
outsl
cmp
dec
ja
pop
push
mov
xor
mov
jecxz
dec
mov
cmpsl
setns
into
push
pop
shlb
test
pushf
or
mov
jae
add
dec
out
movsb
mov
dec
pop
out
or
loopne
jle
sarl
push
aas
push
jle
popf
lahf
outsl
bound
mov
mov
cmp
and
adc
dec
fsubrl
jae
and
mov
imul
imul
xchg
fcomps
inc
mov
cmc
sub
imul
and
repnz
aaa
andl
mov
mov
and
mov
lock
xchg
test
imul
dec
sar
xchg
int
push
nop
xchg
lahf
pop
ds
iret
gs
pop
dec
dec
push
arpl
mov
sub
inc
lds
clc
inc
rclb
int
icebp
add
jmp
neg
fsubrl
insb
push
push
test
inc
push
cmp
jmp
pop
pop
pop
dec
inc
pushl
sbb
or
add
pusha
push
movsb
push
je
jge
in
pop
roll
aam
push
nop
js
mov
ss
test
pop
js
sbb
inc
xchg
addr16
aad
imul
repnz
jno
rcrb
xchg
sbbl
lods
pop
popf
out
scas
push
xchg
call
popa
cmp
sub
and
or
dec
fwait
jl
hlt
or
adc
fmull
call
mov
push
inc
pop
sbb
orb
mov
mov
xor
std
inc
bnd
jmp
icebp
cli
rcl
jno
xor
dec
call
int
leave
or
xorl
jge
mov
adc
mov
stos
pusha
movzwl
ret
mov
int3
inc
popf
jb
ss
add
mov
jae
mov
push
lea
push
andb
push
xorl
and
adc
mov
loopne
add
cmpsl
dec
or
aam
lahf
inc
mov
popf
mov
out
nop
inc
xchg
cwtl
stc
or
dec
aas
adc
inc
push
mov
xor
ljmp
gs
mov
mov
je
cld
sbb
jge
cmp
mov
jp
pushf
scas
or
add
sbb
xor
aaa
scas
lahf
imul
and
jnp
sbb
loop
bound
adc
subl
push
and
add
push
push
dec
mov
out
nop
loope
stc
stos
fucomi
rorb
fs
aas
push
push
loop
in
mov
iret
js
jp
imul
mov
cmp
aam
shr
loop
nop
inc
add
punpckhbw
addr16
jne
inc
inc
int3
inc
pop
test
pop
lcall
sbb
leave
mov
and
fidivrs
mov
add
sbb
pop
test
imul
cmp
dec
mov
clc
fs
aad
or
clc
jb
outsl
cmp
dec
cld
enter
mov
jns
clc
xor
loopne
xchg
cmpsb
or
lock
lret
lret
adc
dec
adc
int3
mov
mov
fstp
lds
adc
adc
pop
and
dec
sub
lods
sub
adc
or
ljmp
stos
push
cltd
roll
and
call
out
es
mov
lcall
icebp
xchg
stc
jecxz
ljmp
pop
pushf
imul
adc
mov
addl
jle
imul
sub
leave
sub
hlt
popf
lods
pop
into
divb
sahf
mov
add
dec
dec
dec
inc
adcl
ja
xchg
loop
sub
in
or
push
inc
andl
cmc
pop
sbb
cld
lret
dec
pop
jge
adc
xchg
call
scas
je
adc
push
push
xor
jbe
lock
popf
jle
xchg
sub
icebp
into
imul
push
mov
inc
mov
test
or
aam
sub
dec
xchg
insl
fidivrs
add
cmpxchg
xor
aaa
push
aam
or
and
leave
bound
pop
fwait
cltd
scas
lcall
push
in
in
inc
push
divb
aad
jno
iret
xor
pop
ljmp
sub
jne
mov
fucomip
sub
les
aas
std
inc
div
or
movsb
movsb
lods
xor
popf
add
cmp
jne
test
or
fwait
rcrl
or
and
push
scas
jno
js
or
lcall
enter
push
in
inc
movsl
fcmovnb
xor
sub
cwtd
inc
shl
and
shll
in
adc
lahf
fiadds
cmpsb
cmp
loop
jb
push
ljmp
push
sbb
shll
push
dec
dec
jne
fwait
icebp
sbb
imul
cmp
xlat
daa
leave
imul
int
hlt
adc
inc
enter
xchg
clc
imulb
pop
push
and
dec
jp
idivb
or
xor
add
sbb
jge
sub
push
dec
xlat
cld
sbb
dec
jmp
adc
ljmp
cmpl
fsts
inc
outsb
or
add
jo
adc
sbbb
imul
jg
adc
xchg
inc
imul
aaa
jb
sbb
sbb
dec
ror
ljmp
dec
push
aaa
scas
notb
mov
lods
cmpsl
sub
jl
lds
adc
dec
adc
xchg
or
xor
add
insb
inc
ret
jmp
push
lods
mov
pushf
shl
dec
lock
cmp
inc
jae
test
jns
cmp
or
jle
dec
das
leave
adc
fsub
test
scas
pop
mov
in
sbb
adc
stos
inc
jge
fisttpll
sub
push
out
sbb
push
add
iret
ljmp
jecxz
cwtl
subb
out
mov
hlt
push
mov
nop
push
test
gs
dec
aas
jmp
in
outsb
mov
cwtl
aaa
mov
fistpll
scas
jmp
xchg
js
mov
daa
stc
ret
cmp
pushf
and
sahf
fisubl
dec
lret
xlat
pop
neg
int3
cmpsl
pop
fmul
ret
shrb
cltd
out
and
sbb
cli
dec
push
test
jle
repz
andl
shrb
fs
mov
push
push
dec
ret
jnp
lret
out
add
inc
in
jge
mov
or
lret
mov
or
adc
into
jno
adc
jns
add
adc
or
mov
daa
sub
daa
decl
test
inc
jle
ret
std
cld
push
or
movsb
sbb
ja
sbb
inc
fisubrl
push
sub
mov
scas
lea
or
in
xor
data16
pop
loopne
and
jb
and
mov
jp
insl
adc
dec
adc
scas
imul
xchg
cmp
cmp
clc
lds
mov
xlat
mov
outsb
jl
stos
addr16
pop
mov
lea
dec
mov
xorl
adc
pop
push
inc
aas
rcll
pop
sub
push
shll
int
jmp
jb
or
pop
push
shr
xchg
add
jp
leave
add
cmp
jmp
repnz
lods
mov
sub
sbb
push
jno
mov
cmp
loop
cmpsb
xchg
or
jg
lret
dec
xchg
pop
movsb
sti
lods
mov
subl
or
daa
shrl
lahf
rcrl
xor
cmp
mov
imul
out
add
sbb
subps
jmp
cmp
mov
xchg
mov
imul
adc
pop
jbe
loopne
rorl
cmp
sbb
xor
imul
cmp
jle
in
push
mov
hlt
push
inc
rcrl
cmp
xchg
filds
movsb
mov
adc
push
and
ffreep
add
xchg
jle
xor
sub
xor
push
pop
cltd
xor
xchg
jg
add
xchg
jnp
pushf
js
inc
mov
aam
dec
dec
mov
mov
sub
test
mov
stos
dec
cmp
cmp
xor
and
mov
inc
add
and
and
xchg
arpl
push
out
and
scas
fadds
cmc
icebp
sbb
test
or
mov
xor
or
out
sub
cs
cmovnp
cmp
sub
fdivs
adcb
jle
push
ret
mov
test
inc
cmp
inc
imul
sti
xchg
mov
test
outsl
and
add
test
out
mov
mov
test
push
push
xor
jbe
xchg
test
add
hlt
push
mov
inc
jp
add
mov
or
aam
mov
scas
fiadds
sub
in
mov
pop
push
test
and
in
pop
mov
pmulhuw
or
subl
xchg
stc
mov
sub
xchg
mov
addr16
mov
arpl
mov
mov
ja
int3
popa
mov
xchg
repz
sub
cs
mov
insb
out
mov
stc
and
gs
xchg
xchg
shlb
daa
pushf
add
in
mov
mov
xor
je
adc
or
mov
mov
cmpsl
cmp
movsl
mov
addr16
cmpsb
inc
lds
jbe
pop
lret
pop
sub
adc
cmpl
nop
data16
jbe
push
inc
adc
ret
cmp
sti
cmc
stos
call
nop
movsl
or
clc
xor
test
lods
inc
xlat
int3
or
push
int3
push
fs
lcall
movsb
inc
inc
popf
pop
jne
ret
into
sbb
mov
fucom
pop
add
sbb
jns
push
xlat
pop
mov
popa
mov
sbb
or
mov
arpl
cld
push
inc
inc
dec
out
xchg
add
cwtl
jb
orb
fwait
shll
in
pop
sbb
push
xor
mov
mov
push
sbb
xchg
xchg
aas
add
movsl
lret
pop
mov
mov
dec
cltd
mov
and
push
or
bound
ret
and
push
movsb
jbe
orb
out
adc
xchg
cmpsb
ret
inc
ficoms
lahf
test
push
fildl
pop
sbb
arpl
fists
sbb
orl
xsha1
cmpsb
or
popf
insb
dec
push
jmp
inc
jns
mov
xlat
xor
or
sub
push
dec
das
pop
sub
mov
sbb
scas
test
test
cmp
xchg
movsl
mov
sub
sti
or
js
fnsave
cltd
test
dec
pop
xor
andb
fisubrl
mov
jle
arpl
mull
lret
sbb
and
rorl
xor
mov
cmp
mov
in
outsb
mov
push
sbb
xor
mov
lret
dec
push
test
pusha
stos
addb
cmpsb
cmp
inc
xchg
push
mov
mov
add
dec
lds
or
dec
ret
rcll
shrb
pop
das
jle
xor
xor
cwtl
lcall
dec
and
mov
add
inc
clc
add
test
out
stc
testl
cmp
lahf
aaa
repnz
pop
test
add
fnstenv
test
shll
xchg
pop
pop
lret
lds
out
adc
jb
inc
xchg
sub
mov
inc
or
jmp
or
pusha
xchg
sub
xchg
jae
adc
aaa
push
sti
aad
push
add
inc
int3
fisttps
call
out
jae
pop
aas
pop
mov
cld
mov
test
fdiv
icebp
movsl
sub
mov
mov
and
jg
in
sub
repnz
js
scas
jne
adc
jae
xor
hlt
cmpsl
mov
push
pop
movsl
add
and
ja
iret
xlat
imul
xchg
xlat
stos
cmpsl
push
data16
mov
dec
sub
sub
mov
dec
xorl
xor
and
push
push
sub
ret
jnp
mov
or
fdivrl
push
lods
push
push
jo
ret
imull
clc
sbb
add
pop
sub
xchg
jne
sub
pop
mov
add
push
addr16
lock
or
cmp
push
dec
popf
dec
inc
cmp
test
xchg
repz
mov
mov
push
rolw
dec
sbb
fists
add
inc
iret
rcrl
jge
addb
faddp
test
mov
pop
mov
add
sarb
pop
out
xchg
sbb
jno
cmp
imul
mov
adc
bound
dec
xor
hlt
adc
push
cwtl
dec
in
add
in
jne
jno
add
cmp
inc
pop
lea
arpl
sbb
movsb
loope
lcall
repnz
jge
jbe
sbb
stc
repz
int
mov
mov
enter
jle
fsubr
das
mov
add
test
xchg
mov
push
inc
out
ljmp
mov
sub
sbb
and
stos
dec
cmpsb
and
sub
sbb
loopne
xlat
loope,pt
cld
in
movsb
pushf
sahf
push
movsl
push
add
enter
fdivrs
test
adc
test
ret
sbb
fldcw
mov
cmp
push
adc
stos
inc
mov
and
inc
pop
dec
or
hlt
push
int3
div
mov
das
xor
pop
ret
fdivs
call
push
aas
or
mov
movb
out
cwtl
jge
hlt
popa
inc
xchg
fistpll
loopne
mov
and
stc
inc
lahf
mov
mov
insb
daa
inc
in
dec
push
sbb
lsl
push
mov
mov
mov
dec
push
push
xchg
shrb
sti
dec
push
scas
fnstenv
test
ss
das
es
clc
add
pop
pop
sarb
stos
inc
cld
stos
push
sbb
fs
div
xchg
push
pop
mov
arpl
and
sub
mov
unpckhps
push
mov
mov
stc
xlat
cwtl
addl
lret
clc
cmpsl
insb
lcall
subl
fwait
pop
pop
bound
push
xchg
scas
pusha
fcoms
movsl
std
out
mov
sub
cmp
push
dec
jecxz
push
std
sub
mov
pop
lret
jns
ret
jl
ficompl
mov
adc
shrb
push
and
dec
xchg
pop
out
nop
pop
ret
mov
loope
push
out
stos
es
rcll
loope
mov
mov
mov
ds
pop
sbb
mov
xlat
mov
pop
xchg
test
outsl
cltd
out
xor
xchg
loop
inc
scas
adc
mov
test
sarb
mov
fwait
fwait
into
sbb
arpl
mov
sub
pop
fsubp
xor
xor
mov
pop
mov
inc
lcall
scas
pop
mov
mov
mov
test
jo
xor
mov
jnp
xchg
push
push
lret
popf
adc
push
and
dec
sbb
inc
divl
push
fdivrp
jmp
test
mov
dec
mov
popa
mov
sub
rclb
xchg
or
aam
hlt
shrl
xchg
test
mov
out
add
aas
hlt
xor
aam
dec
es
idivl
dec
lods
int
arpl
lds
and
sar
bound
mov
cmp
std
mov
lcall
push
push
push
jne
hlt
stos
ret
and
lahf
mov
fsubl
daa
icebp
mov
inc
sti
pop
jmp
inc
jge
mov
cwtl
into
or
adc
xchg
jnp
push
jno
lahf
std
js
loopne
push
and
lods
dec
mov
inc
icebp
movsl
or
pop
dec
daa
sub
scas
leave
lock
push
mov
dec
jle
outsb
fst
lods
sar
sub
pop
xor
sub
cltd
push
xor
stc
sub
xchg
lds
daa
sub
int3
mov
mov
cli
adc
leave
jno
pop
push
sbb
mov
pop
icebp
test
out
repz
jmp
test
imul
sbb
jge
lock
pop
or
inc
sbb
inc
rcrl
fsubs
push
jg
ret
hlt
pop
ss
fisubrl
sarb
add
fstpt
jb
sti
cld
inc
shl
or
mov
cli
sti
mov
cltd
cltd
cmp
lret
lock
test
pop
xchg
xchg
push
dec
and
sub
mov
dec
rep
lods
jle
icebp
and
movsl
cmp
pop
aam
mov
lds
cmp
push
mov
cmpsl
and
adc
sarb
stos
and
or
outsl
dec
mov
gs
add
sbb
push
aam
add
adc
jp
jp
push
loope
loopne
xor
int
and
sbb
addr16
add
cmp
inc
sub
cltd
dec
arpl
mov
cmpsl
xchg
or
cmp
and
push
js
push
jns
jb
cmpsb
aam
or
push
cmp
jmp
int
int
out
cmpb
push
pop
aad
cld
aad
es
mov
jae
popa
pop
or
xor
mov
jb
jo
fdiv
negl
sub
adc
dec
gs
mov
sub
sti
fldt
mov
test
ret
jmp
mov
add
mov
orb
xchg
dec
inc
lock
mov
cmc
push
push
cltd
outsb
fwait
sti
stos
xor
mov
or
push
add
fadds
jle
mov
sub
cld
pop
popa
dec
jae
test
sub
pop
sbb
mov
or
divl
adc
mov
std
sti
dec
xchg
or
pushf
sub
or
stc
cmc
sbb
movsl
mov
xchg
fisubl
ljmp
xor
movsl
movl
and
mov
out
in
xchg
jge
subl
mov
test
roll
inc
lods
dec
mov
mov
call
jecxz
cmpsb
in
ja
cmp
aaa
jle
scas
pop
loope
fwait
cli
xchg
rolb
testb
into
jne
fiadds
imul
lcall
dec
imulb
jne
mov
mov
pop
shrl
scas
jo
dec
inc
add
cmp
shl
xor
outsl
enter
daa
mov
sub
fcomp
cmp
mov
xor
inc
inc
repnz
inc
dec
out
and
mov
decb
inc
stc
sahf
adc
push
test
iret
mov
out
insb
and
mov
cmp
sbb
sub
mov
or
pop
out
jb
sbb
bound
fstps
xor
ss
shll
fcomps
test
notb
mov
pop
ljmp
in
sub
out
and
outsb
mov
cli
adc
mov
mov
fcoml
in
jl
sahf
mov
ja
gs
outsl
mov
xchg
or
or
or
mov
push
inc
js
jg
push
sbb
ret
pop
jae
and
movsb
cld
mov
mov
imul
xchg
dec
jge
imul
pop
mov
mov
cli
sbb
xchg
mov
jno
cltd
mov
mov
and
sti
sub
mov
leave
sbb
sbb
cld
iret
inc
icebp
loope
jmp
and
cmpsl
jns
mov
iret
pop
adc
dec
stos
push
lcall
test
shl
adcb
sub
stos
dec
mov
push
inc
jge
fsubl
cmp
xchg
test
cmc
mov
hlt
dec
test
pusha
ror
fmuls
ss
xchg
jle
insb
cmpsl
shl
arpl
aad
add
and
outsl
push
pop
pusha
fsubrl
cmc
in
dec
cmpl
ficoms
leave
mov
je
xor
mov
aad
xor
cmp
pop
pop
incb
aas
dec
fsts
xchg
mov
cmpsb
lods
mov
sub
fwait
mov
mov
mov
out
ret
fiaddl
pop
dec
or
mov
out
push
in
or
xor
lret
jo
out
std
or
and
out
pop
cli
imul
testb
popf
mov
enter
in
lret
lock
ss
setne
pop
divl
sub
cmp
xor
xchg
icebp
leave
jno
dec
or
push
dec
stos
push
gs
cmpsl
loop
clc
push
adc
inc
inc
and
push
pop
sbb
out
aaa
and
cli
dec
add
jno
cld
dec
jecxz
gs
cmp
test
outsl
mov
les
sub
xorb
cltd
inc
mov
insl
mov
add
rorb
dec
pop
adc
push
push
mov
pop
add
dec
movsl
mov
arpl
and
jns
push
cmp
jns
aas
shlb
push
sub
xlat
or
mov
sbb
out
jg
lods
dec
mov
and
mov
jns
and
test
imul
push
xor
mov
lret
test
ds
jge
int3
push
inc
dec
mov
pop
dec
bound
push
push
lcall
sbb
daa
inc
lods
popa
aaa
rcrl
pop
loopne
pop
cmp
jbe
leave
xchg
fldl
sub
iret
scas
jnp
ja
fst
js
loopne
lods
mov
dec
insl
rcpps
outsb
add
inc
and
xchg
push
outsb
outsl
mov
gs
stos
xchg
jge
inc
inc
fnstcw
sbb
lea
rorb
jle
pop
ret
xor
adc
in
shl
nop
mov
cmpsl
es
sub
ja
mov
in
mov
fiaddl
loop
inc
fdiv
cmp
movq
push
rorl
iret
fcomps
xor
je
js
push
popf
in
lods
inc
mov
test
sub
inc
sub
sarl
and
xchg
ret
xchg
test
dec
pop
adc
aas
loope
lea
out
sbb
or
mov
cmc
stos
sbb
int
ja
push
mov
xorb
dec
jae
data16
dec
jbe
mov
pop
int
or
cltd
fldl
xorl
lods
mull
sub
mov
cmpl
shll
cmp
jnp
pop
divl
xor
in
jno
adc
aad
in
fisttps
bound
shll
push
jbe
adcl
jbe
add
push
movsb
loope
popf
mov
fadds
aam
lods
inc
repz
andl
pop
outsl
jae
mov
stos
cmp
pop
sbb
ja
jl
xor
orb
dec
pop
shll
mov
shrl
add
mov
test
sbb
loope
push
jno
adc
call
sub
sub
jmp
push
inc
adc
push
cmpsl
sub
daa
les
mov
pop
push
cmpsb
lcall
pop
stos
push
mov
pop
add
push
mov
mov
shrl
lcall
in
mov
dec
int3
inc
lret
and
inc
data16
sub
mulb
sbb
or
push
dec
psubb
jno
mov
push
popa
lret
repnz
in
jg
fsubrp
fucomip
das
sbb
and
push
pop
mov
cwtl
andb
into
cltd
repz
push
test
pop
sbb
ss
mov
popf
mov
arpl
and
jns
aad
mov
in
pop
dec
mov
lret
sbb
adcl
fsubrl
dec
sbb
cli
fs
xchg
aad
repnz
xor
aad
mov
add
icebp
mov
lahf
or
jo
push
add
scas
fcomp
cli
add
movsl
loop
adc
fcomps
test
ror
je
addr16
push
dec
and
test
jnp
outsl
or
push
mov
pop
adc
pop
sub
gs
sbb
inc
out
jmp
sbb
mov
scas
push
movb
cmp
ljmp
insb
and
lret
es
rclb
push
je
xor
mov
lret
popf
repnz
fadd
or
jmp
xchg
cltd
dec
or
pop
insb
nop
sbb
mov
push
in
ret
sbb
leave
jo
mov
fwait
dec
jmp
stos
xor
xchg
mov
ret
xchg
add
push
and
or
arpl
mov
ljmp
stos
fistps
sahf
sub
xor
push
mov
push
fbld
hlt
movsl
pop
push
mov
push
popf
sub
pop
pop
fsubrs
aad
jle
int3
rcrb
setne
fidivl
mov
imul
out
insl
or
xor
cltd
pop
fcomi
lods
jb
cmp
dec
ja
aaa
xor
mov
arpl
fsub
les
mov
fucomp
dec
cltd
jg
push
jno
push
dec
xor
aam
and
xor
push
inc
mov
mov
lahf
add
aad
xchg
sti
ljmp
inc
stos
xchg
add
ret
js
sbb
fwait
ret
sbb
mov
cmp
add
fwait
dec
ja
bound
xor
pop
cwtl
mov
xchg
leave
sbb
out
jge
and
insb
mov
or
test
mov
jns
mov
les
xor
popa
mov
in
movsl
adcb
repz
out
add
int3
xchg
out
lods
mov
loopne
fists
adc
lret
and
push
sub
sub
push
inc
outsb
and
push
scas
das
fistpl
fisttps
sbb
or
adc
cli
and
and
enter
push
clc
fiadds
add
in
test
jbe
add
dec
js
outsb
pop
mov
mov
nop
lods
cmp
add
cmp
cmpsl
or
xchg
dec
movsb
nop
mov
stos
xchg
mov
xlat
xchg
int3
fdivrl
in
and
pop
pop
stos
ja
sbb
dec
das
test
inc
out
leave
sahf
inc
imul
dec
cmp
aaa
sarb
jl
fcomp
cmp
cltd
and
popf
repnz
and
cmp
fcomps
mov
push
stc
fbld
push
les
pop
mov
ja
mov
sub
or
push
jno
xlat
pop
xchg
adc
adc
jl
or
into
adc
add
loopne
adc
push
jo
jae
pop
mov
add
adc
jb
js
mov
or
dec
cld
dec
sbb
jmp
xchg
ljmp
ss
fldenv
pop
mov
adc
dec
cmp
or
aaa
cld
in
test
pop
nop
inc
xor
xchg
scas
shrl
imul
inc
mov
aad
add
sti
adc
movsl
shr
cmp
ficoms
iret
push
lea
insl
divl
push
movl
lods
cmc
sahf
cmp
jae
push
jecxz
dec
cmp
or
and
lods
pop
mov
movsl
cltd
inc
rolb
mov
xor
imul
cmc
dec
fwait
mov
inc
into
xor
and
nop
push
push
in
mov
mov
loopne
dec
pop
sahf
and
ds
repnz
push
mov
loopne
xchg
dec
add
cwtl
xor
icebp
dec
mov
mov
inc
or
or
push
dec
adc
movsl
inc
lret
jb,pt
stc
pusha
enter
push
lods
jle
jmp
fists
adc
jge
sti
xchg
mov
xor
push
dec
lret
in
jl
loop
mov
les
push
jns
pop
int3
inc
nop
adc
dec
movsb
sbb
pop
call
test
stos
and
dec
fdivrs
test
mov
loop
out
xor
cmpsb
push
and
jnp
xchg
imul
test
fiaddl
sbb
sub
sbb
add
imul
push
push
subl
movsl
xchg
jl
int
sbbb
jge
leave
mov
sbb
adc
xor
or
inc
push
cwtl
cmp
jbe
test
mov
dec
cmc
jb
es
imul
and
dec
outsl
mov
into
loopne
add
mov
gs
flds
mov
push
adc
aam
pop
lods
movsb
fcoml
push
shrl
push
arpl
cmp
push
outsl
shlb
arpl
or
out
addr16
nop
popf
or
inc
mov
push
push
mov
mov
pop
divb
loop
flds
jns
loope
lods
rcr
inc
push
push
push
out
xorl
cmp
arpl
popa
add
sahf
lock
push
call
xchg
int3
mov
jecxz
and
jecxz
inc
pop
es
push
mov
push
nop
je
movsl
lret
stos
adc
inc
cmp
add
insl
push
mov
rorb
cmp
pop
in
fdivrl
mov
loope
push
pop
es
mov
stos
push
popa
imul
mov
jb
add
dec
imul
ja
roll
in
pushf
ss
dec
inc
add
xchg
sti
cld
cld
push
pusha
cmp
dec
movsl
mov
loop
pop
sub
pop
mov
and
mov
fnstcw
pop
scas
add
shll
sub
jle
inc
pop
sarl
test
andb
inc
cmp
push
xchg
push
or
cmp
sbb
xchg
or
push
xchg
jge
sarb
add
fstpt
adc
add
outsl
lahf
jne
dec
sub
mov
insb
jbe
cwtl
dec
xchg
test
mov
xor
push
js
arpl
push
mov
sub
push
cmp
jo
and
push
mov
mov
filds
int3
ja
pusha
mov
jmp
stos
outsb
sub
cli
sahf
loope
cmp
xchg
int3
and
roll
add
js
cld
or
lock
pop
pusha
das
push
leave
je
pop
lahf
sbb
hlt
outsl
and
mov
mov
fiadds
orb
lret
inc
jmp
jmp
jne
ret
jno
aam
sub
xchg
jp
sbb
mov
sarl
out
lahf
pop
loopne
out
mov
sahf
jecxz
cmp
and
cmp
mov
sub
call
pop
jns,pt
sbb
jae
mov
mov
aad
mov
and
push
xor
ljmp
pushf
fcompl
push
aaa
xchg
dec
fsubrl
inc
mov
xchg
sub
jge
imulb
sahf
stc
xchg
fcmovb
dec
loope
push
pop
push
test
icebp
inc
pusha
pop
stos
cs
iret
mov
push
or
mov
push
mov
icebp
outsb
lret
adcb
sub
je
mov
push
pop
sbb
rcll
scas
jne
and
hlt
mov
cmova
mov
test
aam
scas
jnp
popf
cld
mov
arpl
cmp
mov
imul
xchg
popf
jp
jle
pop
sub
push
fs
pop
in
mov
adcb
pop
lcall
jl
push
cmp
jp
jb
xchg
xor
lret
out
adc
mov
and
fcmovne
mov
pop
mov
mov
div
lcall
jae
pop
xchg
pop
call
jge
cmpb
fldl
or
sub
jb
mov
out
int
aaa
int3
and
out
or
lock
adc
mov
movsl
sbb
jmp
pop
ljmp
mov
icebp
xchg
iret
dec
and
clc
lea
pop
je
mov
adc
in
addb
xchg
and
mov
mov
push
or
rcl
out
inc
lahf
repnz
jne
mov
popa
dec
cli
pop
bound
psadbw
sbb
shl
int3
xor
xchg
push
lea
dec
notl
fnsaves
push
pop
push
rorb
mov
sub
popf
or
addr16
in
push
imul
mov
int
negl
std
mov
cli
pop
sub
xor
andl
jge
lods
xchg
pop
js
cmpsl
inc
jg
jmp
add
cmp
mov
xlat
out
mov
push
pop
lcall
lods
inc
sti
inc
sbb
inc
jp
or
popa
mov
sbb
enter
inc
pop
scas
and
xchg
inc
dec
cmp
repnz
addb
lcall
sub
pop
lret
add
cs
arpl
jle
out
lds
jne
lahf
mov
or
xor
or
and
cli
ljmp
lods
or
rcll
adc
dec
mov
stc
jmp
or
fldcw
push
idiv
xor
aad
xchg
shll
adc
imul
pop
mov
mov
jmp
clc
lret
rclb
jg
add
inc
xchg
cmp
inc
or
dec
mov
jo
mov
leave
xchg
lods
fidivrs
or
fdivrs
mov
xor
sbb
mov
mov
xchg
in
fmuls
push
out
pop
andb
in
adc
mov
and
popa
pop
scas
jne
outsl
inc
ror
popf
sti
fdivrp
pop
push
stos
push
ljmpw
lods
inc
sarb
cmpsl
sahf
mov
imul
cmpsl
pop
jnp
sub
jbe
inc
shrb
inc
mov
sbb
sbb
imul
fidivrs
adc
mov
arpl
jle
int3
out
pop
sbb
sysexit
mov
push
decb
scas
cmp
gs
jbe
adc
test
mov
das
fcompl
push
pop
jae
mov
or
pop
imull
or
arpl
push
outsb
aam
jne
stos
dec
stos
daa
stos
pop
xor
xchg
lods
xchg
cwtl
pop
test
ds
decb
fmuls
mov
divl
fildll
dec
stos
add
push
dec
sub
out
cltd
adc
dec
cmp
fistps
mov
ljmp
out
pop
imul
add
mov
rclb
mov
roll
shl
mov
into
ud1
shrl
mov
fldcw
push
mov
aam
mov
push
idivb
mov
scas
xchg
cmp
mov
mov
repnz
outsb
test
lea
cs
jbe
jno
inc
inc
loope
jg
cs
loop
pop
sti
mov
bound
divl
pop
jo
mov
mov
jo
fisubrs
call
int3
sbb
outsb
push
jmp
fists
mov
inc
sbb
cwtl
cmp
aam
pop
fld
xor
fwait
fwait
jg
push
xchg
adc
lcall
mov
andl
dec
movsl
push
lock
pop
test
mov
mov
dec
add
jg
jns
aaa
jg
ficompl
jp
sbb
dec
inc
imul
inc
add
in
sbb
sub
nop
mov
mov
imul
nop
mov
jno
lret
mov
pop
lcall
mov
outsb
sub
xchg
sahf
cli
and
in
test
mov
jecxz
xorl
movsl
andb
sub
push
pushf
inc
cmp
push
inc
ret
xchg
pusha
loop
add
in
push
pop
in
dec
scas
cmp
movsb
xchg
stc
xor
pop
pop
scas
pushl
add
jnp
mov
pushf
repz
shrl
mov
lcall
cli
cli
sbb
fwait
push
repnz
imul
ja
mov
or
ss
sbb
mov
int3
pushf
pop
bound
hlt
pop
cmp
ret
aaa
jne
mov
jb
repnz
mov
push
xchg
mov
sarb
mov
jne
or
fldz
cli
inc
and
mov
in
fdivl
pop
orl
cwtl
nop
mov
mov
adc
mulb
add
add
movsl
mov
cmp
dec
sbbl
les
mov
cmp
mov
sub
cmp
mov
mov
bound
movsl
out
jb
jmp
mov
adc
loope
jg
lock
jg
push
mov
movsl
mov
and
scas
mov
lahf
pop
roll
aas
xchg
push
inc
ror
dec
push
push
das
cld
ret
out
mov
les
les
rcrb
push
push
jnp
test
xchg
sbb
scas
arpl
sahf
inc
sbb
fisubrs
jp
lods
fsub
sarb
xor
dec
lret
test
mov
and
sbb
out
push
xchg
repnz
out
and
out
mov
adc
fs
mov
ficompl
sbb
repnz
into
cmp
out
jmp
mov
push
pop
cmp
push
dec
aas
mov
imulb
mov
je
cld
and
addr16
std
mov
fwait
jle
leave
and
repz
xchg
mov
ret
push
clc
fmull
pushf
push
mov
outsb
inc
cmp
fidivs
scas
push
xchg
stc
jns
inc
movsb
sahf
push
mov
stos
mov
movsl
push
pop
insb
or
insl
inc
ret
test
mov
dec
lret
pop
inc
adc
scas
jae
push
jp
sub
mov
jg
pop
call
adc
pop
mov
jmp
bound
lea
sub
movsl
fadds
mov
das
pop
jmp
xor
cmpsl
mov
into
lcall
dec
stc
push
and
mov
mov
and
out
fisubs
cli
lds
test
jbe
les
dec
clc
inc
repnz
in
sub
or
les
out
push
sub
in
or
lea
lret
pop
ljmp
scas
in
push
push
stos
leave
fcomps
je
idivb
call
std
pop
jae
pop
hlt
adc
cli
in
inc
jnp
in
popf
aam
cmpsl
and
ja
inc
xchg
sbb
or
nop
xchg
inc
xchg
test
divl
adc
je
jl
mov
lds
and
adc
pusha
dec
dec
fisubl
adc
into
inc
ja
dec
jo
pop
adc
mov
enter
inc
push
inc
mov
daa
int
cld
adc
mov
jge
es
lahf
dec
jb
cmpsb
fldt
inc
out
cmp
push
pop
jbe
or
loop
pop
add
and
hlt
std
mov
push
fidivl
dec
movsl
push
out
daa
repnz
popf
jae
nop
mov
clc
mov
seto
insb
cmpsl
mov
repz
pushl
into
shlb
jb
aas
dec
roll
dec
jle
xchg
xchg
jno
xlat
out
cwtl
mov
test
pop
cmp
daa
pop
mov
jp
int
mov
add
in
jae
jns
xor
adc
mov
sub
jge
xchg
clc
inc
or
out
jmp
push
sub
in
pushf
es
xor
loope
andb
rcrl
dec
cmp
cmc
jg
push
bound
scas
and
pop
xchg
mov
shlb
dec
mov
mov
adc
sbb
cltd
dec
add
shlb
mov
xlat
sti
movsb
lea
and
xchg
movsl
sub
cmc
fdivp
sarb
mov
ficompl
pop
ret
mov
xor
mov
addr16
stos
lods
xor
push
sbbl
out
jl
xchg
fists
sbb
mov
ljmp
psubq
mov
sub
subb
sti
addl
mov
mov
pop
clc
mov
movsl
enter
test
shlb
push
inc
xchg
les
rcrb
fs
sub
mov
clc
and
inc
dec
inc
xor
in
js
push
xchg
and
pushf
sub
dec
in
lcall
push
add
mov
cmpps
mov
lcall
mov
fnstsw
inc
repnz
mov
rcr
pop
push
in
subl
and
cld
cld
xchg
and
pop
xor
call
scas
mov
jno
xor
jge
pop
jge
jae
push
xchg
ss
pop
aas
in
insl
cmp
push
pushf
int
mov
push
dec
jle
cmp
lret
cmp
mov
out
sub
js
mov
pushf
fistps
dec
xor
xchg
xchg
andb
loope
out
nop
push
xchg
dec
data16
stos
cwtl
inc
out
mov
sub
or
inc
pop
adc
shlb
test
xor
mov
dec
mov
into
sbb
sbb
iret
mov
addr16
imul
inc
push
test
xchg
lea
dec
addr16
aas
aaa
push
cltd
mov
jp
cmp
jle
out
dec
stos
sub
and
jno
lahf
and
xchg
mov
sub
movsb
push
outsl
sub
pop
jne
psubd
jbe
cld
xchg
mov
mov
cwtl
mov
xchg
outsb
and
imul
xchg
sub
out
mov
nop
jnp
jge
pop
lods
jl
cltd
je
cmp
je
int
sub
in
jae
into
mov
mov
jo
movsb
mov
outsb
or
xchg
adc
std
test
sub
ret
inc
pop
and
inc
shll
cld
mov
lods
add
rorl
xor
sti
inc
pop
jp
rcr
insl
mov
xchg
pop
jne
push
inc
pop
xorb
cmp
out
jge
jmp
outsl
adc
inc
push
or
sahf
push
xchg
pop
push
push
daa
popa
int3
sub
jmp
sbb
fnstsw
ret
outsb
das
data16
lret
lods
jo
cmc
push
mov
jo
inc
out
mov
filds
xchg
test
push
das
ja
jae
roll
insl
mov
jle
add
lods
and
xor
bound
push
mov
in
or
xchg
adc
and
loopne
adc
fmull
mov
jp
inc
cmp
and
pop
inc
outsb
pop
loopne
cwtl
jo
cmp
push
cld
add
repz
imull
stos
lea
xlat
mov
lods
aad
xchg
lods
in
push
cmp
ss
push
xorb
xlat
add
mov
xchg
jbe
in
cltd
jno
lcall
iret
mov
jae
jmp
ret
enter
rorl
cmp
fiaddl
adc
xchg
pushf
repz
xor
add
cld
shll
xchg
xor
fdivs
test
add
push
std
inc
mov
inc
mov
push
jmp
push
or
orb
leave
jle
mov
into
and
cmp
mov
fwait
xor
bnd
mov
xor
mov
mov
or
decb
xor
fsts
mov
out
push
aad
mov
incb
loope
ja
or
push
add
mov
mov
dec
pop
jmp
pushf
and
loopne
add
xchg
cmp
shrl
je
daa
push
and
inc
add
pop
lods
mov
repnz
pop
add
jnp
mov
aam
xchg
ds
lcall
xor
xchg
daa
lods
cmp
fcoms
inc
pop
jnp
lock
jecxz
lcall
inc
dec
mov
in
sub
std
mov
clc
push
xor
push
jle
sub
sub
mov
xchg
push
sbb
sub
jb
popa
sub
idivb
dec
cld
xor
dec
mov
lahf
addr16
clc
mov
dec
ljmp
rorb
into
mov
imul
xchg
das
cmp
in
loop
data16
fisubl
cmp
adc
and
movsb
aaa
enter
int
xchg
push
cmpsl
pop
cmp
jnp
int3
inc
lds
push
dec
shlb
aad
in
push
jmp
leave
mov
add
sbb
mov
call
insl
jl
add
xchg
insb
pushf
fadd
mov
cwtl
xchg
xor
rclb
fimull
jecxz
adcb
stos
int
dec
mov
dec
inc
in
arpl
pop
mov
outsl
mov
stc
push
push
out
ja
scas
push
out
out
lods
pushf
pushf
push
jo
mov
sbb
pusha
add
std
xchg
push
jmp
test
jo
xor
pusha
int
xchg
jo
dec
outsl
mov
adc
lcallw
in
dec
imul
xchg
xor
sbb
or
in
push
mov
movsb
pop
orb
imul
loop
int3
mov
jmp
bound
pushf
mov
cmpsb
stos
dec
cli
mov
mov
stos
adc
adc
adc
push
and
pop
push
fisttps
dec
mov
xor
cmp
fbld
stos
add
adc
popf
jle
jns
addb
ja
pop
insl
sbbl
in
cmp
inc
cs
fwait
mov
scas
rcrl
pop
inc
or
ljmp
pop
subb
sahf
adc
jmp
std
or
push
jecxz
pop
mov
mov
adc
mov
mov
call
pop
mov
mov
sarl
test
inc
out
pop
orl
stc
iret
js
fidivs
movsb
sbb
lahf
ret
mov
adc
mov
adc
pusha
mov
loope
das
iret
adc
icebp
cli
mov
lret
test
shrb
in
enter
pop
ss
jo
pop
test
lret
inc
clc
jge
dec
mov
add
or
cmp
sub
fidivrs
insb
cli
imul
dec
lods
movsb
inc
movsl
pop
aas
mov
cltd
out
mov
cmp
cld
adc
adc
inc
pop
aad
xchg
repnz
repz
shlb
call
lods
pop
push
icebp
mov
push
or
sti
lock
cmp
idivb
cli
sbb
pop
loop
jnp
mov
pop
dec
mov
gs
push
sahf
xchg
gs
xor
ret
ror
mov
scas
je
mov
and
ret
dec
fisttpll
leave
lds
in
adc
inc
xlat
pop
sub
pop
iret
stos
mov
cmp
xor
pop
jle
mov
sub
repz
sub
subl
cli
inc
pop
push
ret
inc
int3
and
in
testb
jo
jmp
cwtl
adc
sti
enter
movsb
or
pop
in
stc
neg
push
xor
or
xchg
mov
xchg
dec
xlat
ljmp
enter
lock
add
fdiv
ljmp
push
movsl
lret
int3
repz
sub
leave
or
stc
jmp
fmul
jbe
add
rolb
test
sub
push
and
nop
pop
test
popa
pop
jno
add
gs
sub
adc
jne
or
add
jp
pop
or
add
pop
sbb
imul
xchg
out
sti
insl
dec
jge
shrl
pop
dec
adc
mov
cld
lret
repnz
insl
stos
fcom
scas
out
xchg
insb
mov
mov
inc
xor
dec
push
cwtl
push
adcb
mov
xchg
xchg
adc
xchg
pop
and
mov
push
fld
jbe
dec
les
rcrl
hlt
mov
std
ret
push
scas
fcomps
sti
fpatan
clc
cmc
push
cwtl
cmpsl
int3
arpl
aam
repz
icebp
jbe
repnz
lea
add
sub
ja
testl
call
or
and
jbe
cmpsb
data16
lds
fnsave
inc
xchg
ljmp
filds
mov
inc
fistpll
mov
dec
nop
pop
out
jp
mov
ja
push
dec
dec
sub
inc
stos
outsl
jbe
int3
dec
fisubrs
cmpsl
jae
jecxz
shlb
scas
test
jle,pn
and
cmp
mov
mov
cmpsl
inc
mov
js
add
and
leave
insl
ss
into
mov
or
outsl
push
push
sti
loop
cmpsb
mov
in
jns
xchg
and
jge
or
paddb
mov
or
cmp
ret
ret
xor
lcall
popf
scas
es
sti
or
push
sbb
in
and
push
add
std
mov
dec
sbb
pop
adc
sub
sahf
xor
cmpsb
std
or
pop
aam
push
pop
mov
sub
and
pop
test
cmp
mov
nop
cli
enter
mov
pop
mov
lock
ja
stos
or
or
xchg
xchg
les
addr16
cli
jae
out
test
test
push
dec
in
sbb
cmp
sub
into
ror
sarl
scas
frstor
ret
repz
jns
movsl
xorb
mov
hlt
cli
enter
mov
aaa
mov
inc
aas
push
mov
in
mov
sub
outsb
out
or
out
repz
inc
or
or
and
mov
lock
adc
dec
data16
lds
mov
xchg
sub
repnz
add
cwtl
fdivl
lret
mov
clc
jb
test
test
jae
rolb
fs
mov
sub
das
fisttpl
push
in
pop
test
and
xchg
popf
and
sbb
idivb
mov
xchg
out
mov
push
sti
push
in
mov
dec
ss
fmull
sarb
sbb
divl
repz
adc
pop
dec
popa
adc
or
fbld
pop
insl
mov
xlat
cmp
push
jne
adc
loope
out
or
dec
jecxz
push
mov
push
andb
das
cmp
push
cmp
mov
lahf
rclb
mov
repnz
and
mov
testb
popf
enter
xor
imul
sarl
inc
mov
hlt
aam
mov
xchg
lods
xor
mov
mov
cmp
addl
cmp
inc
and
jne
adc
sbb
xbegin
xor
test
outsb
mov
and
loope
sub
jg
sub
sar
pop
inc
jb
jns
popf
mov
sub
ljmp
shlb
call
pop
adc
popf
aas
jno
lahf
xlat
mov
aas
lds
andl
pop
xlat
pop
lds
dec
push
adc
stos
jge
inc
lcall
loopne
in
push
ljmp
out
rcrb
mov
fs
mov
cmp
pushf
add
xchg
sti
or
les
test
push
add
sbb
or
cmpsb
pop
pop
aas
test
jae
bound
cmpxchg
push
mov
sar
sub
aad
popf
adc
push
xor
nop
pop
or
mov
fdivr
dec
adc
pop
sbb
cmp
shrb
subb
xchg
and
xor
mov
fistl
scas
pop
repnz
xor
push
pop
jb
cs
mov
lret
or
stos
and
bound
sarb
push
jp
xchg
test
push
mov
mov
or
xchg
xchg
lahf
andb
adc
ds
pop
xor
and
mov
or
jno
jae
mov
jecxz
out
lods
or
jno
push
rcrl
jge
std
into
push
outsl
cmp
shl
fwait
das
sub
popf
jae
xor
ds
add
sub
xchg
xchg
outsl
movsl
mov
dec
lea
psrlq
fldl
sub
outsb
in
xor
les
ljmp
inc
nop
xchg
sub
lea
mov
fs
adc
cmp
and
jns
dec
add
or
test
nop
cmp
int
rorl
push
or
loopne
dec
jae
repnz
repnz
outsb
stc
xor
pop
jno
sti
loope
bound
push
add
sbb
dec
or
push
dec
jns
out
mov
mov
add
adc
adc
push
or
fbstp
in
out
test
das
adc
fnstcw
jge
loopne
xchg
jns
fwait
mov
cwtl
cmp
jns
movsb
rolb
cmpsb
mov
push
jle
inc
pop
cli
push
pusha
fildll
sub
ret
dec
mov
push
xor
push
mov
gs
clc
cmp
sbb
in
mov
mov
dec
aam
stc
mov
and
ja,pn
arpl
mov
mov
or
out
imul
mov
mov
jb
xchg
rorl
sbb
syscall
fdivl
and
mov
jle
cmp
and
push
sub
cmp
push
movsb
aam
decb
mov
cmpsl
out
shrl
sbb
or
jecxz
kmovw
dec
sahf
js
out
out
xchg
aad
aam
add
in
sbb
xor
add
loope
lock
pop
lds
jns
add
cmp
in
gs
mov
ss
out
daa
cmpsl
test
mov
ljmp
cmp
lds
jp
adc
pop
in
cmp
nop
mov
or
mov
push
mov
sbb
inc
mov
cmpsb
mov
pop
mov
xor
mov
rorb
mov
ljmp
cmp
xchg
mov
dec
stc
roll
vpcomq
imul
cmpsl
xchg
pop
ds
mov
fnstsw
pusha
add
sbb
mov
enter
push
outsb
fwait
add
inc
push
mov
or
stos
ret
mov
jecxz
in
je
cltd
inc
aad
out
add
jae
mov
insl
jmp
mov
cmp
push
jne
dec
and
and
inc
aad
popa
sub
test
int
fidivs
xlat
xchg
add
pop
iret
and
pop
pop
mov
stos
stos
jmp
mov
aam
out
xchg
jecxz
in
adc
inc
sub
mov
cld
cld
in
insl
and
cmp
mov
fwait
bound
xchg
sarl
ret
mov
decl
push
repnz
fmul
push
aam
out
pop
mov
sub
cltd
cmpsl
push
imul
loopne
sbb
jae
dec
dec
jae
pop
test
jmp
sbb
and
out
test
lods
sarb
mov
in
std
cmpb
cmpb
movsl
outsb
aam
inc
mov
push
mov
scas
stos
ret
lret
add
jle
sbb
pop
jne
inc
adc
dec
cmc
and
cmpsb
sub
es
imul
add
jo
xchg
xor
push
lret
pop
out
or
mov
icebp
cmp
cmp
cmc
out
jae
jge
adc
flds
push
mulb
adc
ljmp
adc
aam
lret
out
cld
jp
and
or
mull
std
int
or
mov
pop
adc
or
mov
mov
int
pushf
jmp
cmp
and
leave
sub
mov
int3
push
sbb
xchg
fidivl
icebp
test
push
jge
mov
mov
and
xor
fnstenv
push
pop
aad
jno
notb
scas
jle
fmuls
das
test
mov
xor
negb
movsb
add
out
add
popf
loopne
push
pop
mov
insl
jb
mov
les
mov
push
lcall
jg
mov
iret
notl
lods
icebp
add
insb
mov
mov
in
in
fimull
subb
mov
inc
push
jb
mov
and
dec
adc
out
arpl
mov
inc
lock
daa
call
mov
sti
je
imul
jne
mov
iret
mov
sti
scas
mov
and
ret
shlb
cmpsb
dec
inc
cmp
ss
fwait
push
cli
adc
adc
lds
dec
dec
in
mov
mov
jno
or
int
je
test
es
mov
notb
adc
ds
and
cmp
lods
jnp
mov
sbb
into
repz
add
pop
aam
pop
push
into
aaa
repz
out
orb
pop
mov
add
xchg
and
mov
sub
pop
outsb
sbb
fsubrl
mov
xchg
xor
xlat
mov
lock
cmpsl
sbb
pop
icebp
sub
or
ss
mov
iret
mov
test
fcmovnbe
adc
pop
testb
decl
into
leave
xchg
dec
pcmpgtb
push
xor
mov
cmpsb
sti
mov
xor
dec
mov
jge
pop
cmp
stos
push
in
xor
sbb
mov
fidivrl
cmp
and
jle
int3
imul
repz
push
cld
add
mov
popa
fnstsw
pop
cmp
dec
xchg
and
js
das
lret
inc
cltd
test
cmp
pop
push
ret
int3
aam
sub
ret
pop
andl
cwtl
lret
mov
ds
mov
adcl
jl
dec
pop
jge
dec
int
jnp
repz
mov
jecxz
sub
sti
jnp
mov
mov
xchg
es
repz
imul
imul
fmull
push
sub
cs
mov
add
stos
fstpt
pop
add
inc
pusha
jp
repnz
push
insb
imul
shr
lret
repz
std
add
in
std
jne
xor
mov
sbb
dec
sbb
pusha
sbb
mov
inc
rclb
mov
clc
adc
push
xor
loopne
fwait
insl
push
pop
and
dec
arpl
pop
lret
daa
cmp
movsb
sbb
mov
mov
push
push
adc
loope
xor
arpl
dec
add
pop
mov
shll
ss
rolb
ss
addr16
jecxz
in
mov
xor
and
js
dec
cli
mov
fdivrp
inc
or
dec
test
add
and
movsl
insb
dec
insl
and
stos
or
ds
lods
and
js
push
sub
sub
outsl
lahf
xor
xchg
stos
outsb
lock
sar
test
xchg
push
fwait
pop
sub
pusha
sbb
push
push
xor
jno
ljmp
test
xor
mov
inc
pop
addr16
inc
or
xchg
fsubs
jo
je
enter
out
es
inc
jp
pusha
add
pop
flds
inc
lock
fwait
lock
enter
jbe
rcr
xchg
fnstenv
outsl
sub
xlat
pop
xor
xor
sbb
je
or
fiaddl
or
xchg
jnp
adc
or
jge
add
lods
push
add
sbb
lcall
sub
fwait
adc
ficomps
sub
xchg
lcall
jmp
pop
fst
call
push
mov
pop
xchg
rcrb
mov
sub
test
pop
xchg
push
push
inc
xchg
stos
loop
lds
test
int
pop
stos
pop
xor
in
mov
pop
sub
pop
bound
dec
mov
and
push
ja
ss
iret
fs
aam
mov
fwait
ret
jp
sbb
je
lock
out
fidivrl
jnp
test
nop
testb
mov
mov
xor
in
imul
in
adc
add
ret
addl
shrl
xchg
cli
push
dec
fistl
or
rolb
mov
mov
rcl
imul
imul
push
fidivl
nop
call
pop
lods
push
cmpsl
push
jl
out
ljmp
ljmp
int3
adc
mov
jg
mov
pushf
sub
jmp
dec
dec
addl
ss
mov
cmp
jecxz
das
xor
and
ret
aas
enter
and
xchg
out
xor
or
imul
add
xor
xorb
dec
xchg
pop
and
bound
cld
and
push
xchg
pop
or
or
or
xchg
aam
or
fsubs
shl
lock
jle
and
and
mov
xchg
inc
imul
imul
pop
push
xchg
call
mov
or
lds
or
orl
cmp
daa
into
xchg
orl
nop
orb
nop
lret
imul
xchg
xchg
hlt
stc
mov
push
lods
add
dec
add
xor
jbe
sub
push
jl
and
dec
loop
lahf
add
fs
or
mov
sbbl
jnp
out
out
sbb
adc
inc
insb
sub
fs
in
mov
sti
out
mov
addb
pusha
in
inc
aaa
aad
es
pop
and
insl
push
ret
out
xchg
jle
sub
add
ficoms
pop
and
inc
not
dec
and
sbb
add
mov
lock
inc
lcall
data16
pop
mov
inc
pop
repz
call
cmpsb
std
inc
dec
mov
push
arpl
inc
xor
cmpsb
fnsave
in
movsb
cmp
mov
adc
les
sub
adc
mov
sbb
pop
add
cli
jp
mov
jb
mov
aad
xchg
std
inc
pop
fucomi
dec
scas
push
jns
add
pop
outsl
mov
jge
jns
js
loop
xor
ret
jns
loope
mov
insb
popf
push
popa
xor
sub
mov
pop
mov
mov
js
cwtl
mov
push
out
xor
aaa
cmp
mov
mov
in
mov
xchg
insb
ja
cmp
fs
lds
hlt
dec
je
dec
and
add
pop
int3
insb
mov
lret
lahf
iret
sub
sarb
dec
xchg
pop
push
push
dec
pop
addl
mov
cli
adc
inc
and
clc
xchg
add
loopne
movsb
add
inc
cmp
repz
ja
out
push
das
sbb
pop
dec
inc
mov
mov
shl
fcoms
jp
add
jge
rclb
cmpsb
shl
cmp
xor
sub
jge
sub
sub
hlt
mov
mov
push
jg
iret
push
jns
push
jl
movsl
cmp
std
cmp
arpl
sub
inc
cmpsb
jp
lret
testb
and
mov
aaa
mov
xlat
aad
push
loop
xor
icebp
add
push
pop
adc
sbb
ds
cmp
mov
inc
jl
in
cmp
orl
sbb
in
repnz
jmp
add
pop
mov
fidivl
inc
in
mov
dec
inc
loope
mov
leave
aam
lahf
imul
mov
pop
mull
cvtps2pd
out
lcall
adc
fisttps
sbb
lcall
cli
test
jae
mov
pushf
fs
notl
fst
adc
inc
adc
cmp
mov
dec
add
jns
xor
or
pusha
cs
jo
fldcw
add
and
adc
cmp
sbb
sub
pop
pop
mov
pop
pop
or
mov
lcall
add
sbb
ds
mov
pop
sahf
out
out
fwait
inc
cmc
jnp
xorl
sar
jl
adc
xorb
decb
sbb
pop
std
aam
push
daa
xchg
jae
pop
xor
or
inc
cmp
int3
movb
xchg
fisttpl
mov
pushf
mov
bound
or
add
mov
xchg
xchg
add
jo
inc
pop
shrl
add
cmpsl
jnp
cli
and
iret
adc
or
jo
in
sub
repz
fcompp
add
cmp
stc
inc
in
imul
dec
jo
cli
inc
cs
lods
es
mov
mov
dec
bound
jecxz
dec
in
dec
xor
lcall
cli
bound
int3
imull
aas
imul
mov
roll
sub
loopne
pop
mov
neg
in
enter
xor
xchg
lods
jnp
daa
cmc
pop
out
fwait
sahf
cmc
aam
inc
mov
mov
sarb
inc
add
xor
or
jbe
scas
lock
imul
cmp
addl
clc
sbb
int
pop
call
icebp
bound
sbb
jo
cmc
pushf
sahf
xchg
insl
push
popa
add
push
insl
inc
loopne
xlat
filds
sub
movsl
test
add
push
or
push
sub
xor
imul
adc
shll
rcll
jmp
in
jnp
imul
mov
pop
push
xor
cwtl
scas
repz
cmp
enter
fmul
mov
xor
ret
xchg
and
jle
insl
dec
push
mov
ja
inc
push
inc
or
loopne
arpl
sti
jmp
call
jge
sub
stos
cwtl
cmp
jl
pushf
inc
pop
push
rolb
mov
dec
iret
push
push
mov
sbb
cmp
inc
cmp
jl
ljmp
cmc
and
aaa
addr16
mov
out
leave
jae
ret
test
dec
dec
ljmp
push
lea
push
cmp
ret
add
enter
sbb
andl
outsl
out
inc
adc
mov
cmp
imul
sbb
push
mov
into
mov
negb
mov
jg
dec
mov
js
mov
xor
in
stos
jns
lahf
xchg
mov
mov
inc
add
jmp
fsubr
jno
cmpsb
sbb
mov
inc
lds
test
sti
pop
inc
mov
or
add
idivb
jp
or
aam
stos
stos
loopne
push
adc
mov
loop
jns
stos
cltd
test
adc
sbb
inc
and
push
fiadds
lods
pop
in
mov
xchg
dec
lods
dec
or
xchg
xchg
and
mov
ret
addr16
jle
loop
in
rcrl
xlat
mov
jmp
jae,pt
sti
aas
adc
cmpsb
push
xchg
mov
test
arpl
dec
fstps
mov
inc
pop
rorb
sbb
dec
inc
aas
xchg
pop
sahf
nop
lcall
outsb
jo
or
ret
daa
dec
jg
add
add
lea
adc
dec
es
pop
nop
pop
insl
cld
test
jae
mov
dec
es
arpl
mov
into
fdivrl
in
adc
testb
or
pop
and
std
lahf
jno
xchg
adc
mov
orb
leave
inc
sbb
pop
push
inc
cltd
mov
add
xor
loop
pop
mov
xor
mov
adc
ljmp
mov
flds
scas
shrb
cld
es
or
mov
hlt
stos
fsubrl
cmp
jp
imul
jno
jmp
int3
sub
jle
test
clc
push
dec
loopne
fwait
or
icebp
lock
and
mov
fimull
je
daa
shrl
mov
cmp
xchg
stc
pusha
sbb
pop
xor
aam
outsl
stc
xchg
out
jg
int3
jp
shlb
scas
outsb
jge
lock
div
jno
ds
push
lea
pop
cmp
push
imul
clc
sub
pop
mov
shll
out
jno
sarb
imul
cmpb
cmp
in
push
sbb
jae
mov
clc
xor
mov
popf
cmp
mov
mov
mov
fwait
subl
add
push
and
mov
das
enter
pop
adc
adc
movsl
mov
mov
mov
push
sub
test
js
dec
mov
sub
add
mov
int3
pop
inc
mov
fsub
adc
movsb
gs
add
lock
adc
fdivrs
adc
imul
ss
jb
iret
leave
mov
mov
nop
mov
push
fwait
dec
lds
push
lret
scas
into
out
adc
cmpsb
popa
xor
dec
sbb
lods
stos
cmpsl
ror
js
ss
push
scas
sub
sbb
fstl
sbb
jbe
jle
add
mov
dec
pop
stc
xor
add
js
pusha
js
pushf
cmp
and
bswap
in
push
mov
pop
lcall
or
pop
ret
push
xor
dec
stos
sbb
sbb
cmp
pop
rolb
decb
int
rorl
fsubs
lahf
popf
repz
sbb
aam
xchg
stos
sar
push
xor
js
rcll
xchg
xchg
loop
lahf
inc
xor
sahf
imul
loope
pop
xchg
inc
inc
xor
fistpl
addb
inc
sarl
shl
lret
mov
pop
pop
rorl
pop
scas
hlt
push
and
fldcw
data16
add
mov
push
rolb
sub
sub
push
push
and
cmp
xor
aam
pop
xor
jg
dec
xor
dec
sub
xor
faddp
mov
xchg
ljmp
loopne
cltd
sub
xlat
cmp
cmp
loop
cld
jle
mov
popf
push
jecxz
jle
ret
dec
imul
ds
mov
fisttps
bound
xchg
aad
xor
xor
mov
inc
aam
pop
mov
mov
enter
psrld
loopne
divl
mov
and
inc
fstps
loop
stos
inc
inc
bound
inc
test
fidivs
sub
test
and
dec
push
mov
es
xchg
and
push
cmp
int
sbb
xor
pop
cmc
xchg
xchg
ds
sbb
out
pop
inc
dec
sahf
shr
mov
xor
pop
es
pop
fstl
addr16
xor
arpl
cld
aad
dec
imul
xor
repnz
sahf
xor
jmp
xchg
sbb
lcall
out
and
push
push
inc
imul
push
push
sbb
mov
mov
mov
sbb
imul
int3
ret
imul
or
fwait
adc
and
adc
push
mov
add
inc
push
sub
enter
inc
cmp
pop
push
jb
pop
mov
popa
jmp
add
fistl
and
cld
pop
sub
and
rcl
fidivrl
inc
mov
jns
mov
and
mov
neg
cld
mov
pop
add
pop
jmp
cmc
mov
es
aam
cli
fucom
loop
out
pop
adc
pop
mov
sub
sti
inc
cli
cmc
xor
and
rolb
xchg
mov
mov
test
push
cld
test
xor
jne
mov
jge
jl
js
lret
cmpsb
int
adc
mov
ret
xchg
es
rcl
jecxz
adc
mov
pusha
lret
mov
mov
and
por
push
sub
mov
sbb
dec
xchg
test
fmull
and
add
pop
lock
adc
lret
test
mov
je
cmp
clc
xor
add
sub
xchg
js
push
sbb
cld
aas
push
mov
ljmp
dec
addr16
scas
out
sub
pop
adc
movsl
or
stc
movsb
mov
fists
jbe
ljmp
mov
cwtl
jl
sub
addr16
inc
jns
dec
leave
inc
in
ret
fistpl
leave
mov
inc
sahf
jns
adc
hlt
jno
jmp
scas
andl
xor
inc
pushf
shlb
nop
hlt
icebp
dec
cmp
inc
mov
and
cmp
lcall
xchg
inc
shll
mov
jecxz
scas
inc
dec
sub
push
add
inc
clc
call
out
outsl
push
inc
in
pop
pop
push
mov
outsl
add
dec
adc
in
mov
loopne
cmp
iret
insl
andb
and
sbb
mov
jg
testb
jle
les
inc
dec
xchg
lret
push
xlat
jb
lods
xchg
mov
hlt
loope
dec
es
mov
gs
mov
cmp
sbb
pop
lret
adc
hlt
fildl
pushf
mov
rcrb
cmp
loop
sub
test
mov
outsb
addb
imul
pop
lds
inc
movsb
mov
push
mov
out
incl
xor
notb
push
sarl
jp
fiadds
xchg
stos
mov
cmc
orb
jno
filds
or
add
into
pop
mov
ds
cmp
cld
xchg
in
test
jo
sahf
xchg
cmpsl
cmp
popf
push
outsb
shlb
and
add
sub
clc
jne
notb
and
dec
pop
push
bound
cld
push
xchg
sbb
sbb
jecxz
xchg
fsubl
sbb
shll
adc
pop
inc
xlat
jbe
jno
adc
inc
aam
inc
add
xchg
data16
nop
cmp
lahf
mov
sahf
imul
jmp
push
stc
bnd
jbe
mov
enter
pop
hlt
in
xor
repz
aaa
out
lcall
hlt
sbb
adc
xor
and
jae
je
sbb
pop
lock
in
popf
mov
and
sbb
mov
insl
inc
jecxz
mov
out
lahf
icebp
dec
mov
fs
xchg
sbb
insl
adc
pop
stos
xor
cmpsl
mov
imul
mov
incl
mov
mov
fiaddl
mov
push
cmp
add
cld
adc
lock
test
or
mov
out
adc
and
adc
mov
sbb
cmp
mov
imul
mov
pop
aas
cmp
leave
rclb
cmp
jnp
push
adc
cs
xchg
jb
add
cmp
and
mov
push
push
cmp
lock
pop
sub
int3
imul
xchg
dec
push
cmp
pop
sub
outsl
outsb
aad
repnz
mov
jl
fs
mov
push
jns
mov
addl
sbbb
jp
sbb
mov
and
pop
ja
repz
movsb
dec
add
in
aaa
adc
adc
inc
inc
in
daa
pop
sarb
addr16
jb
jl
std
mov
not
fnstenv
xchg
xchg
pop
pop
loope
jb
mov
jae
icebp
enter
addr16
test
das
sti
cmp
sub
mov
and
xchg
pop
or
push
mov
lret
xor
sbb
dec
xchg
xor
gs
repz
pop
ret
push
pop
insl
fildll
pop
mov
aaa
sbb
xchg
sahf
push
push
jo
inc
sahf
ds
enter
or
add
pop
stos
or
aaa
mov
cwtl
jne
je
insb
xchg
mov
add
lahf
fwait
jns
outsb
ss
enter
push
cli
mov
fiaddl
cmp
std
fcompl
inc
int
and
data16
lock
mov
mov
insb
sub
in
je
or
lcall
test
imul
mov
mov
stos
jecxz
iret
cwtl
mov
and
inc
out
xchg
scas
cmp
enter
into
cmp
sub
inc
mov
inc
push
les
push
mov
cmp
addr16
cmpsl
seto
stos
scas
lret
xchg
sbb
loopne
jg
inc
hlt
and
xchg
push
sub
cmpsl
fadds
stos
mov
push
mov
sub
mov
in
enter
mov
xor
leave
cmp
fdivrl
aam
lret
sub
sub
sub
jmp
pop
push
mov
xlat
cmp
mov
fisubrs
push
cld
push
mov
mov
xchg
mov
push
ljmp
mov
nop
cmpsl
inc
daa
or
push
cmc
xor
inc
cwtl
fcom
adc
dec
icebp
push
or
lock
aaa
popf
jecxz
popaw
mov
xchg
scas
nop
fs
dec
mov
cmp
in
popa
fadds
push
dec
popf
sahf
push
scas
fldt
adc
jmp
cld
mov
mov
cmpl
xchg
cmp
insb
mov
pop
out
idivl
lods
enter
or
cmp
in
mov
pop
fisubrs
pop
mull
daa
leave
out
cltd
add
cltd
push
testl
scas
mov
add
out
pop
jno
ja
rolb
leave
andb
popa
xor
add
push
xor
and
sbb
mov
fiadds
jno
aas
cld
popf
out
jbe
mov
out
mov
shll
in
out
dec
pop
push
or
push
into
mov
sbb
scas
cs
adc
mov
sbb
xorb
inc
pushf
xchg
add
loopne
jne
push
mov
idiv
lea
cltd
xor
dec
xchg
sbb
test
pop
repz
je
shlb
aas
inc
or
inc
pop
fsts
mov
jp
dec
inc
sbb
mov
repnz
inc
adc
fdivp
movsl
add
inc
jecxz
pop
imul
dec
and
mov
and
ss
roll
mov
jl
mov
xchg
popa
sbb
mov
fistps
sbb
sbb
daa
jno
idivb
jecxz
mov
out
xor
imull
pop
cltd
adc
adc
data16
pop
adc
and
dec
xchg
lahf
or
rcrl
pop
sbbl
xchg
dec
push
mov
push
xor
icebp
jge
sub
dec
addb
sbb
xchg
xchg
mov
je
test
imul
hlt
das
pop
xchg
xlat
xchg
jbe
xchg
pop
shl
cmpsl
outsb
mov
mov
cli
cmp
dec
pusha
mov
leave
xlat
popa
add
or
jmp
jns
mov
js
test
sbb
sub
sub
ficomps
or
xchg
std
or
mov
lods
adc
ret
add
inc
add
push
std
ret
and
cmp
mov
les
mov
ja
daa
fptan
clc
rolb
push
adc
call
cmpsl
arpl
lods
lret
clc
in
or
int
or
dec
xchg
test
sbb
loopne
outsb
sbb
insl
test
fildl
movlps
adc
leave
dec
mov
cmp
cmc
scas
shrl
push
cwtl
scas
jge
lahf
nop
xor
ficomps
xor
add
sub
sub
scas
jb
adc
sti
notb
clc
je
in
std
push
addl
cs
inc
fistpl
ret
xchg
pop
shlb
pop
dec
sbb
push
sbb
scas
pop
fsubl
xchg
mov
dec
jnp
adc
add
sti
mov
or
mov
cmpsl
dec
push
mov
setbe
jp,pt
sbb
add
jb
push
in
out
push
cli
filds
mov
std
cmp
mov
cmovb
fst
nop
cmp
or
adc
cmp
pop
inc
fistl
les
dec
mov
xchg
cmpl
outsb
lcall
pop
pop
mov
cmpl
pop
out
out
pop
repnz
xchg
xor
sub
int
add
popl
pop
loope
mov
repnz
xchg
bound
xchg
test
dec
dec
cmp
adc
add
aad
mov
cltd
push
hlt
out
inc
xor
cmp
mov
out
lods
jp
sub
pop
xor
dec
jb
stc
inc
int
in
or
push
negl
mov
movsl
and
stos
lret
pusha
addb
sbb
xchg
nop
je
xlat
mov
lea
mov
inc
jno
pop
loope
loop
imul
ljmp
cmc
pop
shll
lcall
or
inc
clc
or
mov
mov
fcmovb
popf
es
cmp
or
jmp
testl
push
cs
adc
xchg
test
imul
rolb
lcall
sub
mov
aam
inc
and
mov
and
scas
stc
int3
adc
shll
jg
xor
call
xor
adc
mov
sub
das
loope
mov
mov
rcrb
xchg
into
outsl
and
cwtl
add
inc
pop
jae
test
aaa
jo
clc
adc
mov
jns
dec
loope
test
mov
sbb
test
daa
adc
movl
aam
dec
jo
inc
and
adc
fildll
adc
jl
movsb
or
mov
lods
adc
push
sbb
mov
push
in
sub
jae
pop
mov
sbb
mov
cli
insb
out
pop
aaa
mov
or
xor
fwait
cld
jmp
repz
les
xchg
pop
and
inc
sahf
pop
cmc
xor
imul
imul
enter
addr16
push
rorl
jnp
dec
inc
mov
js
mov
or
pop
pushf
and
add
and
jbe
jae
sub
xchg
loopne
xchg
loopne
test
movsb
xchg
xor
data16
inc
dec
sbb
lods
lods
aaa
push
decl
adc
or
fcoml
xchg
and
cli
sub
jns
push
sub
testb
jbe
xchg
sub
adc
jmp
insl
dec
test
fldenv
bnd
aaa
jae
mov
cli
add
adc
inc
xor
lret
push
ret
jne
mov
mov
jg
adc
jle
jns
sbb
and
push
mov
xchg
sbb
shl
fidivrs
mov
loope
adc
push
mov
and
jae
mov
lock
lret
cmp
stos
cmpsl
jl
mov
inc
popa
adc
pop
out
lahf
addb
jge
pop
mov
pop
test
icebp
xchg
aas
fisttpl
adc
mov
or
xchg
addl
jge
add
arpl
sub
push
xor
ficoms
icebp
push
das
sarb
push
mov
test
xchg
fstpl
jae
rcl
push
dec
fmul
dec
sbb
sbb
iret
add
testl
mov
lea
xchg
cwtl
lret
cmc
iret
rorl
mov
cmpsb
jae
push
and
pop
sti
bound
sub
shrb
adc
cmp
xor
into
lods
aam
mov
or
push
addr16
sub
fucom
dec
in
cmp
xchg
dec
xorb
pop
xchg
dec
stos
cmc
pop
cli
popa
or
scas
addr16
daa
ljmp
sbb
sti
mov
lock
icebp
sbb
dec
add
movsl
push
in
or
into
xlat
aas
std
mov
jne
or
sub
loop
push
pop
test
push
stos
aas
sub
in
fcmovb
hlt
lea
push
mov
xchg
in
lret
loop
movsb
and
daa
sbb
push
jl
jnp
jmp
dec
xor
aaa
and
or
bound
mov
test
lret
cmc
aad
push
push
pop
jno
test
in
push
cli
adc
mov
fwait
es
pop
pushf
and
mov
pop
dec
mov
cmpsb
jmp
inc
mov
and
mov
fnstcw
push
sub
pop
xorl
fwait
hlt
data16
jp
loopne
jo
in
or
add
push
cwtl
sbb
pop
mov
sub
sbb
jns
mov
je
xor
xor
jecxz
shll
in
sbb
push
scas
int
sub
xor
push
cmp
adc
mov
jns
inc
or
aaa
mov
ja
inc
int3
pusha
test
push
lahf
mov
sbb
js
hlt
ja
mov
cmpsb
imulb
sahf
or
and
sub
sbb
pop
xchg
movsb
push
sbb
sbb
movsl
dec
jb
iret
inc
cli
hlt
adc
push
inc
loope
repz
add
push
pop
push
std
pop
sub
jp
lahf
das
push
sbb
mov
or
xor
inc
sub
loope
out
add
shl
lcall
fisubrs
adc
test
imul
add
adc
jg
mov
clc
faddl
pop
mov
mov
mov
test
cwtl
jge
inc
mov
imul
push
xlat
mov
pop
jmp
cmpsl
das
pop
push
fdivl
jl
idivl
movsl
lret
ds
jg
jmp
add
rol
popa
and
push
inc
shrb
cmpsb
cltd
cltd
pop
and
jl
cmp
dec
int
das
test
pop
mov
jl
sbb
sbb
shlb
cmp
jno
cwtl
adc
fldcw
sub
mov
int3
push
subl
aad
jp
and
sbb
movsl
std
clc
dec
test
ljmp
and
rclb
in
push
negb
xchg
in
icebp
and
jbe
or
mov
adc
aaa
adc
push
mov
call
add
bound
popw
dec
mov
fisttpl
rcrb
sti
jmp
jb
negl
sub
and
stc
loope
jg
mov
xchg
gs
inc
jg
adc
and
jne
xor
lds
cs
xchg
dec
add
and
cwtl
jg
cmpsb
mov
lds
aas
xor
test
mov
lret
mov
jne
fsubrp
xor
sbb
or
stc
test
jge
sub
mov
push
ja
nop
jae
cmpsl
sub
into
addr16
std
sub
std
icebp
cmp
mov
mov
movsl
in
mov
into
je
mov
xor
dec
lods
sbb
adc
andb
push
xchg
inc
dec
push
pusha
enter
data16
addr16
sub
clc
data16
or
sti
out
pusha
rclb
lea
imul
js
pushf
sbb
je
mov
stos
and
je,pt
test
mov
and
sti
mov
sbb
sbbb
xlat
aaa
test
sbb
rolb
out
mov
mov
stos
dec
jle
inc
sub
xchg
mov
fnsave
and
cmp
out
cmpsl
frstor
sub
aam
shlb
and
imul
jne
xorb
push
call
jb
hlt
inc
jbe
push
jnp
xlat
mov
out
inc
dec
sub
in
out
cmp
cmpsl
jl
shlb
insb
test
xlat
and
add
imul
rorb
jbe
pop
ja
mov
push
movsb
pop
sbb
shlb
cmpsl
mov
cmp
int3
and
push
ja
and
mov
add
out
jl
stos
mov
aam
sbb
fisubrl
sbb
push
in
sti
or
movsb
int3
inc
es
daa
sub
stc
test
jg
cltd
lea
or
decb
dec
xorl
add
push
push
divl
rorl
movsb
xor
sbb
ret
adc
nop
iret
dec
mov
fisttps
imul
mov
mov
ja
daa
clc
aas
in
mov
ds
push
jnp
mov
xchg
pop
or
addb
xchg
xor
inc
jecxz
data16
ljmp
lcall
sbbl
xorb
roll
xor
aad
sub
sub
scas
mov
pop
adc
mov
negb
out
jns
subb
push
lret
aam
fwait
and
pop
push
lods
pop
int3
mov
sbb
stos
pop
push
adc
add
ret
sbb
mov
psrad
dec
add
push
mov
decb
push
outsb
stc
dec
fiaddl
hlt
dec
add
add
mov
pushf
xchg
test
push
xchg
push
xchg
fsubl
or
aam
push
test
xor
dec
adc
mov
xchg
inc
adcb
cmpsb
xchg
call
sbb
push
sbb
sub
imul
push
ss
mov
mov
sbb
sbb
mov
fsts
xchg
and
in
lods
xor
adc
cmp
cmp
out
dec
push
adc
insb
xchg
sub
mov
or
fwait
test
dec
mov
data16
jl
mov
ret
sub
sub
loop
insb
or
call
inc
in
inc
mov
xchg
jge
ljmp
dec
inc
and
xor
dec
sbb
and
cwtl
dec
pushf
rcll
adc
icebp
test
mov
cld
xor
cltd
fiaddl
and
out
dec
sahf
adc
mov
push
add
mov
data16
and
adc
add
clc
sti
dec
stos
cmp
mov
in
jecxz
lds
push
faddl
inc
lock
jge
lods
lds
cmp
loopne
cwtl
jb
jecxz
rorb
add
adc
fists
xchg
cmpsl
pop
push
sti
in
movsl
jno
mov
out
aad
lret
insl
jae
jl
push
xchg
mov
pop
pop
movsb
lret
cli
jne
cmp
loopne
xor
cld
jl
iret
jecxz
imul
ja
xchg
pop
sub
add
imul
adc
stos
or
push
adc
pushf
push
dec
in
test
out
ss
or
es
sbb
sub
push
testl
mov
mov
xchg
mov
loope
lcall
sbb
jge
pop
test
xor
cmp
push
inc
lods
into
loop
pushf
xor
xchg
rcrb
test
call
xlat
nop
inc
rcl
push
ror
cmpb
dec
test
sbb
xor
fmull
in
push
clc
xor
cltd
int
in
lret
repnz
sub
icebp
or
dec
decb
test
mov
and
bound
imul
arpl
call
jmp
addr16
lcall
fldt
out
xchg
int
push
ss
mov
sti
out
mov
stc
sti
loop
push
xchg
outsl
imul
dec
mov
mov
mov
push
icebp
xchg
mov
xorl
and
paddusw
mov
nop
popf
push
addl
push
loope
jg
sub
sbbb
mov
fwait
inc
or
or
pusha
stos
lcall
mov
or
lcall
xor
add
xchg
jge
inc
push
sbb
nop
mov
fists
stc
sbb
or
jl
lods
xor
loop
mov
lds
lock
push
addb
and
idivl
inc
mov
and
mov
jle
lods
imul
test
addr16
mov
cli
iret
cli
push
lds
inc
push
in
lret
icebp
dec
das
nop
aam
inc
outsb
sub
ss
mov
fiaddl
xchg
les
xchg
jno
jmp
xchg
lahf
inc
sbb
pop
cltd
dec
xchg
cmpsl
outsl
lods
cmp
psubd
stos
imul
dec
inc
lcall
das
test
xchg
sbb
push
sbb
add
push
sbbl
mov
pusha
loope
mov
pusha
sub
stos
mov
cmpsl
jecxz
xor
int3
add
insl
sbb
push
lock
cmp
sti
adc
fnstenv
out
in
pop
sub
jmp
adc
push
mov
dec
jmp
insl
jmp
aaa
pusha
jne
pop
dec
xor
xor
test
sahf
xor
inc
cmp
test
leave
imul
cmp
sbb
mov
shr
xlat
push
mov
lock
push
mov
add
cmp
add
lcall
fisubs
or
inc
in
or
add
sbb
add
sbb
loopne
into
xor
mov
jae
stos
mov
aad
test
push
or
mov
fnstenv
jb
push
sub
icebp
mov
cmp
pushf
std
or
or
jb
into
jge
jle
xchg
clc
push
call
add
fnstsw
mov
ljmp
mov
mov
cmpsl
mov
xor
int3
ret
lret
pop
rcrb
scas
jno
mov
mov
hlt
addr16
jae
cli
or
and
xchg
in
pushf
fcompl
lods
movsb
push
fsubs
or
andl
sahf
sub
adc
mov
sub
and
mov
mov
je
lods
notl
insl
frstor
je
and
adcl
jecxz
mov
ret
leave
cld
fdivr
lock
and
mov
dec
mov
in
imul
scas
test
lods
or
mov
sbb
xchg
pop
orb
lret
shll
and
notl
cltd
add
sbb
stos
out
shr
mov
push
push
lret
cmp
sbb
dec
fldl
xor
mov
cmc
mov
gs
add
sub
xchg
dec
loopne
mov
rclb
out
xchg
pusha
aad
mov
xchg
cmp
jno
jo
or
push
out
subl
cs
out
or
orl
outsb
xor
int3
mov
js
in
sub
dec
popa
rorl
aaa
data16
ret
mov
repnz
pop
into
xor
out
add
stos
arpl
insl
push
mov
lret
cmp
clc
lods
lret
fwait
cmp
cmp
pop
test
out
insb
jle
out
rorb
je
fsubrs
cltd
push
imul
aam
inc
pop
xchg
aas
sbb
call
lret
inc
xor
mov
lret
sub
or
sbb
cld
nop
jle
sarl
enter
adc
pop
icebp
inc
inc
xor
cmpsl
dec
icebp
sti
orl
js
jae
xchg
mov
lahf
sbb
daa
xor
aas
adc
or
fnsetpm(287
outsl
inc
cwtl
mov
fsubl
inc
mov
fs
imul
adc
pop
pop
xchg
addb
push
lcall
sub
pop
push
jb
inc
data16
jne
mov
repz
dec
in
outsl
mov
mov
jge
loopne
xor
add
dec
cwtl
sbb
into
das
cmp
add
loop
push
lret
lds
sub
xchg
inc
mov
dec
xchg
add
push
loopne
hlt
mov
and
adc
jle
lea
and
push
xor
dec
lcall
loop
mov
or
dec
and
cmpsb
sbb
in
ret
cld
mov
cmp
mov
mov
xor
or
and
mov
outsb
xchg
test
nopl
xchg
lods
pop
pop
jmp
inc
cmp
dec
into
pop
xbegin
test
aad
popf
fstl
dec
cli
fidivrs
inc
pop
jle
outsl
or
andl
xchg
push
pusha
jmp
ja
aad
jecxz
out
or
negl
clc
jg
cmp
adc
pop
stos
insl
popf
fsubrl
dec
xor
les
jnp
outsl
out
lods
lret
sub
pushf
add
iret
sub
cli
mull
les
lods
inc
pop
sti
push
xchg
jg
pop
decb
clc
mov
lods
pop
dec
cmpsl
or
mov
pop
pop
lret
iret
pushf
jle
or
jmp
jl
adc
cs
mov
subb
jge
jg
jns
stos
jl
incl
in
leave
pop
sub
sub
stc
out
push
jns
scas
inc
imul
scas
imulb
add
cmp
or
mov
xchg
jecxz
js
ljmp
test
aam
xor
push
mov
and
and
lock
push
rolb
jnp
ja
outsb
adc
popf
mov
hlt
shrl
xchg
in
push
mov
pusha
daa
outsb
icebp
and
sbb
cmp
fistpl
jo
mov
loop
repnz
pop
lret
sub
scas
pop
aad
or
nop
sub
or
repz
inc
test
nop
mov
push
xor
lea
or
and
out
nop
dec
xchg
fnstenv
incb
mov
enter
mov
movsb
dec
mov
aas
xor
mov
sbb
cmp
lods
sub
das
in
movsl
ljmp
xorl
pusha
mov
cmp
inc
push
sbb
add
cmp
mov
xor
adc
sbb
ss
pop
fldt
les
pop
sub
data16
mov
inc
and
out
cltd
cmp
adc
jg
and
jbe
imul
cmp
xchg
das
cmp
dec
push
sbb
lock
xchg
imul
or
xchg
mov
xchg
sarl
xchg
push
sub
jge
das
dec
cmp
lret
xor
sub
vcvtdq2ps
mov
imul
rol
out
xlat
sahf
mov
or
sub
or
push
mov
pop
inc
mov
inc
cld
in
movsl
sbb
xchg
pop
shrl
pop
push
or
aaa
shlb
add
xor
mov
aas
and
inc
fildl
rorb
sbb
sarb
pop
loopne
lret
cmp
jae
xlat
mov
xchg
sbb
and
pop
mov
push
inc
ds
test
jg
sub
out
aas
push
push
ljmp
ja
lahf
ds
mov
sti
scas
or
rcr
arpl
add
xchg
inc
test
cmp
out
xchg
icebp
imull
and
adc
sub
push
inc
stos
push
pop
lahf
mov
mov
xchg
lcall
pop
jp
rcrl
bound
out
add
sub
icebp
lods
xchg
jmp
or
add
dec
cmpl
adc
xlat
push
fisttpll
jle
jmp
test
shlb
jg
cltd
and
inc
ss
ljmp
jl
sbb
jo
push
sar
dec
inc
mov
jae
int
ret
mov
cmc
or
dec
cmc
add
dec
sarl
sti
mov
inc
mov
sub
jne
loope
inc
addl
pusha
lea
out
dec
lock
cmpl
into
fs
in
xor
push
lret
push
jno
cmpsb
mov
mov
fidivl
and
mov
mov
mov
ljmp
sti
test
pusha
lret
rol
lds
pop
hlt
xor
adc
fsubl
cmpsb
xchg
push
push
or
jl
in
popa
mov
arpl
scas
jbe
and
cwtl
pop
aaa
adc
adc
popf
js
iret
mov
cmc
mov
push
mov
paddsb
mov
aad
loopne
or
in
dec
mov
dec
fnsetpm(287
sbb
sbb
les
fisubrs
mov
jl
sbb
movsb
rorl
sub
xchg
repnz
dec
stos
sub
mov
das
xlat
xor
mov
mov
nop
sbb
adc
jns
xor
adc
jp
jecxz
lret
movsb
loope
add
xor
daa
in
stos
insb
dec
cwtl
stc
sub
xlat
aad
xchg
test
xchg
sub
and
pop
or
incb
mull
add
ja
enter
movsl
push
ss
es
push
xchg
add
xchg
or
out
jecxz
gs
sbbb
daa
inc
imul
and
or
cmp
jno
mov
ja
cmpsb
in
xchg
outsb
leave
xor
jo
fwait
int
rcll
xchg
cwtl
out
popf
or
mov
add
mov
or
dec
sahf
insb
mov
cmp
clc
movsl
mov
rcrb
sbb
or
dec
fndisi(8087
mov
loop
push
fmuls
test
inc
cld
and
lcall
and
clc
pop
aaa
add
outsb
push
push
mov
mov
into
mov
dec
cs
adc
test
adc
cwtl
push
jecxz
adc
mov
mov
and
push
cld
gs
xchg
pop
outsb
adc
sbb
shl
daa
sbb
adc
fwait
int3
fsubr
mov
pop
push
imul
jne
add
lret
jb
in
cmpsl
testb
cmp
mov
cltd
jg
inc
jg
push
add
jp
pmaxub
jbe
sbb
insl
xchg
push
push
dec
pusha
pusha
int
push
call
xchg
test
ret
or
fsubrp
push
adc
push
lods
add
rorl
dec
add
cpuid
std
and
mov
fwait
rcrl
inc
cs
jmp
mov
aad
std
push
jge
xchg
push
push
sub
cmpl
sbb
mov
lretw
mov
cmp
clc
outsl
cmpb
mov
inc
jmp
cwtl
mov
in
fld
int
adc
pop
pop
repnz
mov
rcrl
lahf
lods
and
das
xor
sub
aam
sub
aaa
popa
iret
mov
sbb
cmp
sub
out
mov
sub
scas
das
cli
xchg
stos
rcrb
bt
xchg
pop
cmp
int
push
sub
stos
ret
jle
test
or
mov
xchg
mov
push
jb
xchg
cmpsl
push
or
iret
loopne
scas
lret
inc
xchg
nop
arpl
jne
call
inc
xchg
mov
add
mov
mov
and
push
dec
cmp
lret
rcr
xor
testb
pop
bound
xchg
in
dec
imul
adc
mov
adc
sti
lcall
sbb
pop
jg
sbb
mov
test
pop
jbe
mov
imul
xor
xchg
fmull
lea
loopne
jne
jg
mov
lods
xor
imul
loopne
jp
loop
ret
outsl
std
jae
pop
ficoms
pop
xor
cmp
imul
xor
or
mov
sti
adc
js
cs
in
test
push
fcoml
mov
aas
repnz
ja
pop
xor
xchg
repnz
cmpsb
rol
adc
fisubrl
or
imul
add
fisttpll
cmpb
mov
and
subl
fs
inc
movsl
sbb
push
test
test
mov
popf
in
push
mov
pop
adc
mov
jo
xor
mov
cmp
and
inc
push
loope
pop
ss
or
mov
jge
test
daa
push
lods
and
rcrl
mov
push
lcall
les
sbb
mov
pop
cmpsb
pop
xchg
fs
call
repz
xchg
jg
or
pop
dec
sbb
or
mov
jp
int
aas
shlb
aad
fldl
cmp
jge
dec
or
insb
and
loope
jb
repz
aam
aam
add
mov
and
inc
inc
pop
or
int3
and
inc
sbb
rclb
sub
mov
add
cmc
and
fidivrs
ja
add
xchg
addb
sahf
pop
bound
xchg
jb
dec
je
call
or
je
or
jnp
pusha
cmp
fsubrs
inc
adc
xlat
mov
push
insb
aaa
call
sbb
out
nopl
add
outsl
add
jmp
cmp
rcrl
icebp
dec
xchg
stos
sub
int3
fstps
mov
fiadds
push
sub
jbe
jnp
add
fdivl
call
sahf
inc
subl
jmp
pop
pusha
sub
dec
and
adc
mov
pop
dec
mov
jns
cmpb
pusha
inc
inc
gs
push
jbe
push
jb
fcmovu
imul
pop
les
adc
cmp
jle
push
push
cmpsl
loope
xor
rcrl
jmp
pop
int3
enter
mov
jbe
and
jle
loope
out
xchg
fsubr
jns
data16
mov
cmp
lahf
outsl
notl
test
dec
mov
icebp
notb
dec
xor
lock
push
lret
xor
add
ss
cli
fdivrl
sub
xlat
pusha
jle
data16
js
xlat
repnz
mov
pop
sub
faddl
pop
enter
mov
mov
out
and
mov
push
lahf
into
ret
out
cmp
mov
cs
inc
dec
add
cli
xchg
dec
aad
sub
ljmp
push
cwtl
ret
mov
aaa
call
mov
sbb
mov
pop
push
mov
out
addb
lret
scas
xchg
int
mov
into
hlt
fucom
inc
outsb
movsl
pop
pop
fcompl
cmp
sarb
adc
xchg
in
sub
pop
mov
es
test
shrl
or
mov
push
xchg
enter
mull
ret
imul
mov
int
xchg
data16
testb
xlat
cmp
stc
std
and
inc
faddp
leave
push
cltd
fdivl
cmpsb
fwait
cwtl
dec
sbb
imul
aad
sbb
add
mov
push
mov
stc
pop
mov
mov
aas
out
repnz
mov
mov
lea
adc
mov
test
sub
or
cmc
lods
rorb
sub
outsb
insb
xchg
movsl
frstor
mov
fbstp
xchg
cmp
mov
cmc
in
shll
outsb
jl
loop
aaa
gs
sub
dec
jno
fdivs
pop
rcrb
inc
in
inc
push
mov
jne
mov
daa
xor
test
jo
scas
andl
pop
xor
addr16
pop
outsl
push
dec
inc
add
test
and
sti
stc
cmp
mov
imul
mov
ja
and
adc
inc
or
daa
in
sti
xorl
inc
jecxz
repnz
loope
loopne
and
ss
dec
push
cmp
push
arpl
sub
inc
mov
scas
loope
add
xchg
in
push
mov
lret
loop
or
or
fsts
xchg
rorl
mov
push
mov
push
pop
xchg
cmp
subb
int3
sub
pop
loop
scas
insl
addr16
popf
adc
or
rorb
int
jl
cs
xchg
jmp
loopne
jp
hlt
pop
inc
inc
dec
cmp
aam
push
mov
sub
mov
push
jl
pop
xor
hlt
pop
or
sub
pop
pop
mulb
jg
mov
jl
mov
mov
test
cld
into
shll
xor
add
jp
cli
je
cmpsb
jg
pusha
lock
add
inc
push
mov
or
out
pop
lcall
push
xor
jle
sub
cmp
lock
add
adc
jp
mov
add
ret
pop
movsl
pusha
cli
xor
imul
cmpl
push
pushl
inc
push
outsl
sbb
sub
movsl
lea
mov
cltd
mov
xchg
shll
jmp
jo
jp
adc
mov
ljmp
aad
push
movsb
das
cmp
sub
mov
add
sub
mov
fldcw
cmc
jne
pop
sub
fistpll
xchg
push
jo
xchg
push
mov
iret
push
sbb
xchg
dec
pop
notb
ret
cmp
sbb
mov
xchg
dec
cmc
testb
push
mov
cmp
inc
jnp
xchg
xchg
daa
clc
inc
push
xlat
data16
inc
sbb
sub
xor
shll
xchg
test
pop
dec
mov
test
scas
mov
int3
fildll
faddl
lcall
inc
clc
mov
scas
push
mov
xor
mov
mov
addr16
and
mov
lods
adc
leave
xchg
cmovae
dec
or
enter
or
lret
dec
jnp
and
test
pop
mov
aas
cmpsb
sbb
jle
lret
mov
sbb
mov
cmp
sbb
mov
enter
fisubs
ljmp
dec
push
mov
push
adc
imul
push
pop
xchg
jl
dec
dec
adc
icebp
push
xlat
jg
fwait
int
out
mov
xchg
gs
inc
pop
inc
cmp
lds
mov
jb
bound
adc
jecxz
je
out
xor
jb
mov
cmp
mov
adc
push
cmp
insb
jp
cmp
inc
fnstsw
nop
jle
aaa
mov
je
push
sbb
jb
movsb
lcall
es
xlat
jge
cli
jmp
or
in
pushf
xor
imul
je
or
addr16
xor
arpl
pop
lcall
sub
sahf
dec
rorl
rcll
call
jecxz
scas
iret
jb
popf
dec
addr16
imul
inc
fdivl
in
mov
adc
and
xor
bound
adc
stos
sub
fwait
sbb
jle
lea
fucomp
fs
cmp
or
pop
testb
add
fistpl
sub
in
or
pop
lret
out
repnz
mov
aad
dec
mov
xchg
mov
sbb
dec
xor
pop
paddw
out
jmp
aad
icebp
fimull
sub
out
push
xor
jecxz
lcall
add
push
pop
dec
out
or
pop
cmpsl
cmp
pop
lahf
xchg
sub
insl
mov
stc
or
push
std
mov
push
mov
or
nop
jl
mov
push
gs
jecxz
mov
adc
jmp
fsubrl
loop
jl
xchg
sub
test
push
push
jo
outsl
push
push
lret
mov
dec
dec
mov
sub
adc
fsubrl
mov
in
je
out
xor
fs
pop
cld
dec
fnstcw
stos
test
out
sbb
hlt
dec
push
dec
lods
fcom
adc
or
aas
cmp
loop
push
cmpsb
rorb
mov
sub
and
lahf
mov
xchg
push
mov
notb
mov
aam
xorl
mov
push
inc
mov
mov
lcall
push
lea
add
int
pop
cld
and
je
pop
xor
test
fwait
jo
pop
pop
test
pop
xchg
pop
testl
xlat
scas
jge
cmp
in
in
sbb
sbbl
sar
xchg
add
std
push
mov
ljmp
out
mov
in
sub
stos
push
mov
jns
popf
insb
push
lods
mov
and
out
imul
cltd
lods
cmp
inc
sub
mov
mov
shr
jno
fucomp
icebp
xor
jecxz
add
push
sub
cmp
jns
call
ret
outsb
inc
xchg
shlb
inc
dec
sub
sbb
push
push
pushf
mov
sarb
jo
popa
sti
push
push
dec
inc
pushl
movsl
inc
fsubrs
repnz
lahf
clc
mov
sub
outsl
pop
mov
lock
shrb
jne
mov
fdivs
shrb
xor
andb
gs
fcmovne
inc
divb
shlb
push
ljmp
jl
iret
cs
fs
mov
cmp
push
dec
fimuls
cmp
xor
loop
sbb
jge
lcall
cmpsb
test
js
xor
jae
jle
xor
add
push
subl
cli
pop
or
inc
movsl
pushf
ss
dec
call
out
cmpsl
pop
dec
rorl
loopw
push
cmpsb
pop
or
xchg
and
mov
pop
not
roll
cmp
subb
adcb
std
sub
syscall
mov
or
outsb
xlat
dec
in
nop
movsl
jmp
in
lods
out
out
mov
xor
stos
andb
sub
outsl
jno
lds
nop
rcr
popf
pop
dec
xchg
roll
test
mov
fnsave
xchg
inc
sar
inc
push
lcall
jp
ja
xchg
jno
and
clc
fmuls
jmp
pusha
loop
dec
rcrb
movsl
mov
inc
insl
push
inc
adc
add
stc
push
into
in
lret
or
lret
rorb
mov
mov
xchg
xlat
mov
push
cmc
xchg
scas
and
mov
xchg
je
inc
xchg
adc
dec
cmp
xchg
pop
mov
push
les
iret
inc
push
dec
sbb
lea
add
push
xor
push
cmp
add
lods
gs
stos
push
inc
data16
jle
xchg
jp
sbb
mov
push
xchg
aaa
pop
mov
int3
imul
inc
push
cmp
adcl
or
mov
dec
inc
adc
cmp
scas
out
jnp
jecxz
imul
push
dec
aad
imul
pop
sbb
hlt
into
pusha
xor
je
aaa
jbe
jbe
pushf
mov
int
push
in
test
dec
cmp
lret
jno
mov
push
xlat
xor
xor
sti
movsl
stos
push
push
test
aad
lods
mov
add
stc
mov
xchg
test
xchg
xor
sub
sarl
sub
in
jl
or
test
and
xor
push
shlb
xchg
dec
mov
mov
insb
shrd
or
mov
pop
add
addr16
pop
bound
cmp
dec
jae
push
pop
pop
or
lcall
arpl
or
imul
outsl
xchg
xchg
adc
rcrb
xor
incl
sbb
adc
aad
inc
std
mov
test
test
or
es
loop
clc
or
aad
lods
insb
mov
push
and
xorb
std
lods
in
xchg
pushf
mov
jnp
xlat
adc
mov
roll
test
xchg
insl
out
rcl
xor
lcall
ret
jle
nop
enter
addr16
or
in
hlt
ror
and
jecxz
out
push
in
ret
pop
and
orb
sub
ja
jge
pop
out
xor
scas
aam
std
cld
data16
push
adc
push
adc
xchg
enter
cmp
mov
aas
out
aaa
test
jb
int
mov
adc
mov
les
mull
pop
and
mov
out
ret
and
test
dec
add
aam
insl
mov
pop
adc
gs
cmp
pop
stos
mov
lcall
fs
jmp
mov
int3
test
mov
out
mov
mov
sub
push
loope
test
stos
jbe
pop
popa
aam
dec
ds
cmp
scas
pop
mov
mov
out
xor
push
movsl
in
enter
repnz
xchg
mov
adc
or
incl
push
pop
jle
fistps
int
push
rorb
sbb
lods
xor
cmp
iret
ss
pop
mov
sub
loop
mov
clc
xor
fiadds
mov
test
cld
add
mov
cmp
jo
es
outsl
push
push
adc
popf
dec
sub
es
dec
and
int3
ret
inc
int
mov
xchg
leave
sub
cmp
stos
push
test
ds
jecxz
push
inc
aaa
ret
mov
sti
xchg
fcomi
mov
sub
dec
fidivrl
iret
pop
mov
adc
xchg
mov
cltd
or
jbe
or
leave
mov
lahf
aad
das
cltd
jmp
push
cmp
xor
mov
outsl
outsb
mov
add
lret
mov
cld
push
push
std
ret
xchg
lcall
negb
mov
mov
adcl
cld
aas
push
inc
sarl
test
pop
out
pop
and
and
push
test
sub
stc
into
test
es
adc
jnp
jp
lcall
call
push
test
sub
add
adc
cmpsb
test
aam
and
sbb
out
push
pop
mov
subl
push
pop
adc
fsubs
adc
pop
sarb
iret
mov
test
xchg
jle
inc
dec
imul
sbb
xchg
mov
inc
in
sbb
sarb
mov
std
xor
scas
pop
jae
cmp
dec
aad
sub
sub
push
fdivrp
enter
sbb
test
xor
jne
test
sub
cmpsb
cli
pop
outsl
hlt
icebp
dec
mov
xor
icebp
lods
lods
jg
cmp
add
addr16
vunpcklps
out
dec
ret
inc
mov
loop
nop
enter
cmp
inc
xchg
mov
xchg
dec
rol
je
inc
add
out
mov
dec
dec
mov
sbb
sahf
jmp
inc
jge
cmp
adc
pop
subb
jns
or
out
jne
dec
int
outsl
dec
pop
jge
pop
scas
dec
xchg
cwtl
fcomip
adc
loop
out
gs
les
xchg
jmp
mov
xor
cmp
das
or
cmpsl
cmc
int3
mov
out
xchg
mov
inc
bound
mov
pop
jno
out
inc
sub
cmpsl
enter
cmp
inc
push
jnp
movsl
xor
addr16
jno
cmp
push
push
jg
cmp
mov
adc
mov
push
cmp
outsl
push
loop
clc
cli
sub
insb
mov
inc
lret
mov
xchg
outsb
test
fildll
call
xchg
xchg
inc
fwait
xor
mov
popf
aaa
push
lods
jbe
icebp
inc
les
lods
mov
mov
mov
jne
and
sarl
push
std
jg
iret
movsb
fildl
jbe
sti
dec
pop
sbb
cli
push
jbe
repnz
out
in
push
inc
popf
mov
jecxz
jle
shlb
fdivl
iret
sub
pop
pop
adc
mov
and
mov
add
cmc
mov
mov
adc
jb
scas
ja
dec
aad
dec
and
sahf
and
mov
or
jo
test
inc
xchg
cmp
or
push
mov
sbb
rol
in
lret
sbb
jo
lods
sub
iret
ljmp
inc
fisubs
clc
mov
pop
mov
or
jg
mov
pop
test
xor
in
pop
sub
and
and
ret
aam
push
jno
cmp
lods
pop
cmp
lea
adcl
xchg
or
fdivl
loope
pop
xchg
test
cmp
into
rol
fldcw
fstpl
cmpb
sbb
lea
push
cmp
int
data16
sub
mov
sbb
cmp
push
dec
pop
push
hlt
sbb
mov
mov
mov
rorl
insb
into
xor
out
push
mov
sub
lahf
add
push
dec
scas
lods
mov
mov
nop
add
xchg
ja
sbb
dec
jl
arpl
fistpl
inc
popf
cmpsb
pop
xchg
sbbb
add
cmp
inc
sbb
and
lds
cmc
and
add
and
mov
outsl
pop
dec
mov
stc
in
in
pop
imul
push
into
adc
ljmp
rolb
aaa
imul
scas
cmp
loopne
inc
cs
mov
xor
lods
notb
movsl
js
cld
icebp
pop
aad
inc
add
loope
sti
sub
mov
fldcw
or
or
mov
loopne
add
add
cs
push
sub
testl
lret
es
pushf
add
es
mov
jl
shll
cmp
adc
dec
cmp
out
lcall
rclb
inc
or
call
bound
xor
fs
cld
aad
inc
call
adc
pop
bound
test
mov
add
dec
int
and
ja
sub
mov
adc
shll
stc
sti
xchg
add
call
ljmp
jno
in
or
xor
in
out
push
lahf
jl
adc
xchg
ficompl
sti
mov
pop
inc
ljmp
sub
xchg
out
test
mov
adc
dec
jne
push
adc
dec
das
lret
xchg
jbe
loope
cmp
mov
xor
outsb
insl
pop
xchg
jne
negl
dec
pop
push
jo
sub
nop
leave
cwtl
in
push
stos
arpl
fstp
cmpsb
test
xchg
cli
das
ljmp
add
xlat
jge
jl
ss
nop
and
in
repnz
into
icebp
sbb
sbb
jo
arpl
xchg
or
xor
xor
pop
adc
push
movsl
nop
inc
pop
xchg
jecxz
inc
and
fmul
loope
xchg
and
fildl
aad
mov
cmp
repnz
lcall
lret
fstpl
xchg
ss
pop
fcmovbe
mov
call
push
xchg
je
scas
add
adc
in
mov
pop
pinsrw
dec
aas
int3
mov
push
sub
fsubrp
inc
pop
mov
push
lods
leave
clc
popl
insl
cmp
xor
sahf
repnz
jp
push
lea
push
sbb
add
mov
sbb
cld
jmp
pop
cmp
jb,pt
lods
cmp
popa
xchg
icebp
jne
push
mov
sub
int
jnp
or
inc
cmpsw
lahf
xchg
mov
pushf
push
mov
out
imul
cmp
jle
add
xchg
sbb
and
out
and
mov
out
push
xchg
xor
adc
push
cmp
adc
add
mov
in
pop
mov
push
bound
rol
gs
fisttpl
fsubrs
leave
xlat
cmp
and
cmp
sub
das
add
push
sahf
push
out
mov
fs
sarb
sar
mov
mov
or
shlb
lods
shll
adc
sub
lcall
cmpsb
add
mov
clc
mov
mov
out
fwait
dec
pop
jae
rep
test
pop
lret
ljmp
mov
jb
test
cmp
xor
mov
push
jo
cs
dec
xchg
fdivl
cmpsl
sbb
sbb
xchg
in
pushf
or
and
in
rsqrtps
outsl
pop
rolb
imul
xchg
in
or
dec
mov
pop
loope
adc
sar
fwait
popa
loop
cmp
cs
ror
hlt
loopne
cmp
in
xor
xor
jl
xchg
popf
jno
sub
loope
add
jmp
cmpsl
xchg
pop
aad
jmp
mov
cmp
movsb
jno
in
and
mov
fwait
scas
or
push
push
mov
jb
push
pop
mov
inc
push
push
pop
jl
lds
lret
cmp
fcoms
dec
fs
jno
jne
mov
xor
push
push
mov
or
rcll
xchg
in
fsubl
adc
push
xchg
jbe
xor
push
mov
lds
subl
aas
pop
leave
jns
cmpsl
xchg
and
adc
cli
ret
mov
movsb
cmp
pop
stos
add
leave
repz
test
jl
sbb
cmc
mov
incl
jnp
xchg
jp
xchg
adc
adc
daa
out
mov
shrl
cmpsl
adc
andb
sub
je
imul
outsb
roll
es
stc
lods
xchg
xor
enter
and
rcrl
mov
mov
dec
stc
cltd
ss
out
addr16
inc
setb
in
add
cmp
adc
cmp
xchg
sub
xchg
ja
loop
ljmp
inc
insl
adc
and
aaa
push
ss
repnz
and
int
ja
arpl
fidivl
ja
rcrl
xchg
push
cwtl
cli
daa
clc
mov
cmpsl
test
xor
and
jno
pop
and
xchg
lock
push
shlb
lret
mov
sbb
popa
fnsave
test
sarb
xchg
jbe
xchg
xchg
jns
jge
jnp
adc
adc
push
test
and
jl
arpl
out
inc
aad
daa
pop
lock
in
dec
mov
xchg
insb
clc
scas
lods
out
inc
das
fmul
cmp
pop
popf
mov
das
pop
int3
mov
push
adc
fs
pop
addr16
push
pusha
daa
mov
icebp
mov
popf
je
pop
nop
cmp
add
leave
in
cmpl
std
sub
sahf
test
pop
das
dec
or
mov
sub
xchg
dec
or
add
out
loop
dec
push
leave
lods
test
andnps
jle
pusha
sbb
mov
dec
pushf
push
pushf
lods
outsl
test
mov
cmp
movsl
fdiv
dec
sub
add
jne
jae
rclb
jle
add
shrl
jo
inc
dec
testl
mov
mov
mov
xor
dec
or
pop
mov
shlb
mov
nop
insl
dec
sbb
repnz
jb
test
add
mov
pushf
rorb
fdiv
sub
xchg
fs
imul
mov
sub
mov
sub
jno
bound
sub
jns
push
lods
out
push
stc
jp
adc
cmp
xor
jbe
xchg
sub
scas
cmc
jae
mov
or
jle
jbe
lds
lret
loopne
sub
fbld
xor
lret
pop
cmp
out
pop
mov
cmpsl
lock
xor
sarb
or
mov
adc
adc
fsubrl
in
enter
jnp
pop
sbb
or
mov
and
mov
pop
mov
cmc
push
and
sbb
jae
jle
mov
sbb
adcl
push
rolb
mov
call
push
fs
fcomi
out
push
subl
mov
unpcklps
mov
inc
cmp
xchg
imul
add
or
outsl
inc
mov
pusha
pmaxsw
or
mov
outsb
push
inc
lret
mov
divl
mov
jae
dec
fiadds
nop
inc
sub
push
pushf
notb
push
ror
sti
mov
mov
in
shll
out
push
mov
das
mov
insb
test
clc
cld
inc
test
fsubl
lahf
cli
arpl
mov
ss
in
xor
mov
adc
icebp
or
lcall
or
lods
jle
rcrl
sbb
dec
add
pop
inc
jbe
push
stos
cs
rcrl
arpl
lods
xor
mov
lock
jp
fcoms
pop
cmp
xor
or
negl
js
fnstsw
push
out
xchg
sub
dec
or
clc
sub
ret
mov
gs
pushf
or
inc
lahf
faddl
sbb
or
jmp
jecxz
inc
stos
cli
pop
lcall
cmp
xor
push
mov
push
cmpb
aam
popa
js
pop
xchg
into
jle
clc
insl
sub
popa
push
pop
scas
sahf
mov
jge
push
popa
dec
xor
loope
pop
mov
or
push
fs
inc
mov
pop
scas
pop
roll
xchg
in
sbb
sub
sub
mov
push
mov
and
cmp
mov
inc
data16
or
adc
pop
push
imul
sub
scas
pop
xchg
pusha
incb
pop
test
shl
xchg
sbb
ss
sbb
or
push
or
xchg
mov
imul
popa
fnstenv
jnp
gs
mov
lock
jbe
test
ljmp
or
in
mov
rcrb
sbbl
sbb
ss
hlt
lods
push
mov
hlt
adcb
lahf
and
imull
and
negb
fisttpl
mov
inc
sub
pop
cmpsl
out
xchg
push
ds
cmpsb
sbb
imul
sbb
jmp
pop
in
ss
mov
insb
inc
aad
loopne
pop
inc
hlt
add
mov
jle
push
push
and
mov
cld
sub
mov
je
out
mov
out
add
scas
dec
ja
js
jl
sarb
mov
addr16
adc
jg
das
mov
lcall
sbb
or
push
inc
inc
fisubrl
mov
scas
adcl
pop
push
or
or
mov
or
aaa
inc
adc
inc
cmp
movsl
and
cld
mov
aam
inc
cmp
xchg
or
xor
int
scas
loop
sbb
leave
adc
push
aam
rorb
mov
mov
ret
in
push
imul
rep
mov
adc
xchg
mov
imul
mov
outsb
mov
pop
insb
dec
mov
insl
call
fsubrs
mov
pop
push
and
pop
rolb
lcall
xor
insl
sbb
lret
mov
xor
pop
insl
add
sbb
cmp
cmp
xchg
mov
inc
sahf
dec
push
jne
cwtl
outsl
xchg
adcl
lods
in
jae
and
arpl
in
inc
leave
adc
pop
pusha
mov
insb
dec
lret
jg
pop
mov
stc
and
add
jecxz
pop
jb
xchg
in
ficoms
test
call
jo
test
jecxz
std
lods
adc
sbb
pop
push
out
xchg
or
add
cmpsl
xchg
xchg
aaa
cltd
cs
xor
push
andl
in
cltd
jns
fcom
jb
loopne
imul
test
or
inc
push
sub
iret
mov
sbb
lock
jge
fsubrs
out
sub
inc
shlb
push
add
imul
test
insl
jbe,pn
cmp
popa
or
mov
enter
xchg
xor
shlb
inc
ljmp
push
mov
or
jg
add
bnd
add
jno
fstp
xchg
in
pop
xchg
cmpsl
test
loop
dec
add
sbb
inc
mov
nop
pop
mov
lret
mov
add
stc
jbe
mov
push
push
xchg
cs
dec
pop
lea
push
mul
push
push
adc
cmp
mov
fiaddl
shr
pop
mov
xor
push
repnz
mov
in
stos
outsb
add
jecxz
xchg
mov
fiaddl
fadd
addr16
inc
ljmp
mov
imul
push
add
mov
jne
or
cmc
loopne
lods
jne
mov
lds
in
sbb
adc
sub
add
and
sbb
inc
mov
repnz
int3
xchg
cmp
mov
mov
sti
and
lret
mov
jns
mov
jg
xchg
mov
inc
xor
stc
imul
int
scas
pop
jl
sub
and
pusha
inc
xchg
ja
mov
pop
dec
je
aad
leave
cmpsb
lret
inc
jl
adc
test
xchg
mov
xchg
lret
bound
mov
aaa
rcrl
inc
xchg
sbb
pop
movsl
in
push
cmp
test
pop
mov
jmp
add
pop
mov
or
pop
pop
sbb
xchg
mov
sarb
inc
es
jb
in
roll
outsb
push
lock
or
int
frstor
push
stos
insb
dec
jbe
mov
stc
sbb
aam
push
std
xchg
push
cmc
sub
jmp
cld
mov
jg
scas
lret
inc
idivb
jbe
fcoml
stos
int
ja
sbb
add
into
pop
push
stc
pop
and
and
adc
mov
jge
ljmp
cmpsb
push
rclb
pop
movsl
pop
jmp
mov
sub
mov
imul
addb
jle
cmp
push
and
xchg
mov
testb
loopne
or
shrb
mov
pop
pop
inc
sub
sub
dec
scas
pop
jo
std
sar
clc
adc
xor
into
scas
out
mov
outsb
into
mov
hlt
xchg
mov
test
cwtl
pop
sub
out
dec
sub
or
pop
lods
and
shl
ja
mov
and
pop
mov
outsl
push
aaa
dec
das
jecxz
xchg
jg
out
cmp
mov
jns
mov
lods
push
out
sti
inc
inc
and
mov
jo
test
movsb
pusha
push
jno
xchg
lcall
or
adc
popf
js
cmpsb
or
stc
fisubrl
dec
mov
inc
out
sub
mov
out
loope
ds
mov
shlb
mov
adc
insb
cs
shr
sti
dec
add
xchg
push
ja
dec
cli
mov
aas
jb
xor
rol
and
push
adc
push
and
or
das
mov
inc
mov
or
bound
xchg
mov
jg
in
sahf
insl
cmp
mov
cmp
es
xchg
aas
mov
rorl
pop
repnz
lds
push
mov
sbb
adc
cmc
cld
inc
decb
sub
cltd
mov
add
pop
pop
in
js
ret
jns
hlt
jno
test
shll
out
inc
ss
repnz
inc
jmp
mov
sbb
fwait
pop
mov
imul
into
movsb
loopne
mov
pop
mov
cmp
outsl
gs
lods
cmpsb
push
ret
sub
adc
int3
test
into
sub
inc
xor
xor
clc
mov
cwtl
and
jge
or
shrl
xor
out
mov
inc
fcomi
pop
or
jp,pt
mov
cmp
idivb
leave
leave
int3
lret
mov
pop
aas
bound
adc
xchg
aaa
in
enter
cmp
adc
cltd
push
cmpb
ret
outsl
rolb
pop
std
and
ffreep
pusha
xchg
js
aaa
fwait
lods
push
sbb
mov
fidivrs
scas
pop
cmovae
jne
mov
popa
sbb
inc
push
and
mov
mov
inc
ret
add
and
sti
mov
mov
cltd
adcb
ljmp
xchg
sahf
shld
aas
mov
pushf
dec
add
clc
mov
adc
xchg
mul
js
jb
xorb
xor
sbb
xchg
sub
lea
out
and
mov
adc
setbe
or
xchg
push
add
enter
adc
push
push
mov
push
mov
adc
dec
das
call
mov
cltd
mov
jl
loop
adc
jp
jnp
cmp
or
mov
pop
scas
pop
jg
daa
mov
shll
stc
adc
in
divl
jne
insl
imul
inc
outsb
dec
iret
iret
cmpsl
mov
jl
out
jle
mov
xor
add
mov
pop
fldenv
pop
es
in
or
mov
je
push
push
out
mov
pop
or
mov
jmp
iret
clc
outsb
lcall
or
movsb
and
pusha
jno
aad
call
lret
adc
inc
dec
cli
sbb
sbbb
lahf
clc
sbb
mov
lahf
mov
mov
lret
andl
mov
mov
mov
dec
mov
mov
push
jle
ja
out
jnp
push
dec
mov
mov
pusha
lret
cmp
push
pusha
inc
cwtl
cmpsb
shl
lret
std
mov
or
xchg
shrl
je
dec
adc
sarb
dec
sub
xor
aaa
fstps
sub
in
jmp
test
repz
add
out
or
dec
hlt
negl
push
add
jle
dec
icebp
jp
dec
je
xor
pop
cmp
aas
push
inc
xchg
push
repz
add
mov
xchg
sbb
or
mov
mov
ret
call
pushf
hlt
shll
outsl
je
cwtl
cmp
je
sbb
clts
xchg
divb
push
jmp
js
ss
push
mov
sbb
xorb
inc
xchg
ds
pop
push
sbb
dec
aaa
arpl
xchg
in
pusha
dec
and
mov
stos
inc
xchg
xor
sub
dec
inc
in
out
push
cmc
loop
cmp
xchg
mov
shrb
or
pop
pop
mov
sub
cmp
ja
push
clc
jne
in
sbb
cmc
ds
enter
pushf
or
ljmp
sub
inc
xor
aam
std
push
dec
jb
js
addr16
mov
xor
dec
fcoml
fisttps
jge
push
cmpsl
fnsave
lcall
xchg
jl
repz
pop
sub
xchg
mov
aas
pop
push
xor
aam
pop
jbe
das
or
pop
mov
cmpsb
mov
and
cmp
dec
imul
xor
mov
ret
fsubr
test
and
and
testb
mov
in
data16
cld
jmp
sub
mov
lahf
out
insl
sbb
call
jge
dec
adc
cli
or
sbb
cmpsb
cmp
ds
pop
mov
cmp
jge
fbstp
mov
dec
iret
and
daa
inc
js
faddl
mov
inc
mov
test
cmp
cltd
xchg
xchg
cmp
sub
mov
call
mov
dec
cltd
popa
sarl
cs
addr16
sub
xor
repz
mov
movsb
adc
outsl
cld
mov
pop
sbb
adc
cmpsl
aad
sbbl
lods
lds
pop
fstl
daa
add
or
cld
cmp
and
iret
insl
jge
clc
jne
and
xlat
pop
or
in
jge
ljmp
cmpsb
sbb
sub
push
jns
mov
les
iret
mov
clc
xor
scas
roll
test
sbb
dec
repz
repnz
popl
outsb
movsl
mov
mov
sarl
ret
adc
mov
shll
out
cmp
mov
imul
testl
mov
and
mov
push
cs
pop
cmp
sbb
clc
ljmp
sub
repnz
mov
arpl
notl
pop
out
sub
sub
push
bound
gs
adc
or
push
inc
push
in
pusha
lahf
sub
jb
mov
inc
jbe
pop
sahf
and
mov
ret
into
and
push
cmp
imul
mov
or
dec
cltd
and
stos
rcl
fldt
daa
arpl
outsl
jecxz
mov
mov
jmp
std
gs
mov
dec
lock
pop
mov
shlb
cld
cmp
push
sbb
dec
pop
adc
mov
test
dec
aad
add
scas
mov
jbe
pop
pop
mov
fcmovnb
jbe
pop
int
cltd
dec
pop
mov
mov
jbe
push
hlt
dec
mov
bound
mov
ror
jb
add
sub
xchg
insl
into
lret
fnstcw
mov
inc
sarl
pop
cld
rclb
inc
xor
mov
pop
push
movsl
jmp
sbb
pusha
cmp
jge
sbb
xor
and
xchg
adc
push
pop
and
subb
xchg
adc
not
adc
dec
in
xchg
mov
or
outsl
push
shl
sub
inc
lret
ljmp
adc
rol
pop
mov
jecxz
ja
fdivrs
nop
push
xor
rolb
mov
inc
dec
or
pop
test
cwtl
jae
aam
fistps
push
dec
cwtl
fwait
push
xor
fiadds
adc
jnp
out
xchg
dec
ljmp
subl
sub
sbb
jne
and
push
std
pop
in
inc
adc
hlt
mov
inc
repnz
aas
in
daa
xchg
arpl
push
cld
imul
enter
lret
pushl
loope
sar
stc
int
mov
rcrb
mov
cmp
mov
adc
scas
pusha
mov
cli
inc
leave
mov
push
adc
mov
lcall
inc
or
dec
jae
cmp
mov
adc
and
jge
cmp
mov
sbb
sub
aas
xor
in
ss
sbb
loope
xchg
cmc
int
aas
mov
frstor
add
subl
ss
jg
nop
loope
cs
out
test
daa
add
mov
inc
das
mov
call
push
repnz
push
jg,pt
sub
xchg
sbb
insb
ret
xchg
ficoml
pop
pusha
and
cmpsl
inc
scas
mov
push
cmpsb
cmp
leave
inc
jbe
dec
pop
cmp
sub
dec
in
ja
imul
in
push
dec
scas
mov
out
dec
je
cmp
sub
dec
popa
or
and
ret
xlat
out
xor
fwait
sub
mov
lods
out
jns
adc
fcoms
sar
into
add
mov
xor
sbb
dec
mov
cltd
outsb
and
loopne
movsb
mov
arpl
sti
xchg
and
sub
push
jl
add
xor
aam
out
lods
jecxz
pop
push
adc
pop
dec
mov
imul
in
lods
fbld
outsl
xchg
sbb
movsl
arpl
in
mov
gs
or
idiv
adc
sub
mov
sti
add
adc
pop
push
stc
jo
mov
pop
fistpll
push
pop
xchg
jmp
mov
cmp
xor
fcompl
insl
mov
pop
jae
mov
mov
mov
das
bound
cmpsb
iret
mov
and
ja
fnstenv
adcb
jge
loopne
cvtpi2ps
arpl
loop
mov
jns
pop
inc
push
cmc
jmp
mov
mov
push
insl
mov
insl
rorb
dec
jg
push
je
loopne
adc
mulb
fdivr
lret
scas
dec
fsubl
shrl
shlb
sti
pusha
pushl
test
push
push
pop
sub
mov
testl
mov
pop
mov
add
add
pop
mov
mov
clc
sti
xchg
stos
fxtract
adc
cmp
je
mov
push
js
das
je
push
enter
lods
add
xor
adc
add
stos
jb
jg
movsl
jmp
push
popa
jecxz
mov
mov
jp
int
sbb
dec
jnp
mov
out
ss
std
aas
xor
in
stos
mov
iret
pop
pop
imul
mov
push
xchg
mov
movsb
xlat
push
mov
sub
mov
xchg
cltd
stos
jl
mov
fstp
push
push
stos
xor
sahf
pop
add
and
lds
sub
xchg
data16
repz
dec
inc
inc
fistps
pop
inc
xlat
inc
sub
shll
jl
adc
add
gs
adc
cld
sbb
out
pop
fwait
jbe
sahf
into
mov
ja
lock
sbb
push
arpl
dec
mov
dec
sahf
hlt
ss
stos
mov
enter
mov
push
sub
push
in
mov
ss
je
inc
adc
pop
int
mov
jns
jge
mov
fistpl
pop
pop
mov
adc
fimuls
dec
or
daa
sbb
pop
sarb
dec
icebp
xor
into
adc
jp
xor
ja
mov
sub
pusha
and
xchg
and
sahf
push
pushw
adc
mov
push
insl
pop
mov
adc
fidivrl
jle
outsl
sbb
gs
pop
call
dec
jg
add
adc
test
mov
xor
jge
in
sub
test
or
push
fcoml
fiaddl
pusha
int
loopne
jns
sbb
inc
push
sbb
and
int3
or
sub
enter
and
mov
outsl
in
adc
pop
or
fldlg2
sbb
nop
iret
or
inc
jnp
ficomps
push
cmp
cmp
xor
cmp
sbb
inc
jo
test
cmp
movsb
lea
inc
mov
cwtl
adc
mov
repnz
lahf
mov
cmpsb
out
jno
jl
arpl
pop
clc
or
sub
rcll
scas
and
dec
or
popa
pop
addr16
xchg
inc
push
mov
xchg
fwait
arpl
das
and
mov
aam
lds
in
rcrl
ret
rcrl
xor
jbe
lods
lcall
sbb
pusha
orl
ret
pop
sub
repz
pop
xchg
cli
sahf
loopne
xchg
inc
test
mov
mov
inc
or
lock
das
outsl
mov
jb
iret
sbb
je
divl
loopne
lds
insb
cmpsl
insl
mov
inc
daa
xor
ret
sub
lret
das
and
in
adc
cmpl
adc
arpl
mov
out
cmc
ljmp
mov
jne
jmp
inc
fcomps
and
ljmp
fcomps
cmc
fcoml
jle
mov
enter
adc
gs
pop
cmc
outsl
xlat
leave
sti
add
out
pop
roll
and
imul
dec
sub
inc
daa
adc
imulb
fcompl
and
pop
aad
lods
das
ja
xchg
mov
fimuls
pop
mov
mov
cmp
mov
hlt
repz
andl
push
add
std
mov
xor
sti
arpl
inc
mov
lock
ret
mov
mov
and
pop
stos
inc
pop
ret
addr16
xor
decl
push
insb
mov
mov
dec
mov
add
pop
dec
xor
or
mov
stc
sarb
mov
cmp
dec
fs
adc
lret
popa
xor
sarb
out
xor
iret
add
mov
sarb
adc
mov
lods
ss
repz
mov
sub
adc
mov
pop
mov
jae
fnstsw
mov
mov
nop
push
push
jmp
pop
test
mov
outsl
movsl
add
push
pop
xchg
pop
push
pop
sbb
push
mov
cld
loope
stc
jecxz
dec
sbb
jle
cld
lret
jb
lahf
out
out
xlat
out
ficoms
bound
or
mov
stc
dec
lods
dec
ljmp
ror
bound
or
subps
mov
pop
mov
out
mov
pop
jmp
scas
xor
out
push
fwait
daa
lahf
xlat
popa
xchg
sub
add
inc
push
idivl
into
push
insl
inc
out
cmpsb
lods
mov
cs
jmp
xlat
sub
movsb
lcall
jnp
call
xor
js
fs
clc
inc
xor
popf
out
mov
sbb
call
mov
push
aad
mov
jmp
fsubr
pop
or
loopne
sub
sbb
arpl
sub
push
sub
push
mov
mov
pop
daa
xor
xor
dec
inc
add
mul
dec
imull
hlt
jmp
or
push
test
xlat
add
cmp
inc
pop
movsb
push
out
jae
sbb
sbbl
adc
inc
les
fs
fstpt
dec
incl
aas
cmp
dec
or
outsb
roll
shl
or
sbb
inc
and
psubb
and
cwtl
out
xchg
bound
pop
in
add
xchg
mov
mov
add
fiadds
jp
imul
int
or
ss
jecxz
add
lahf
fwait
or
push
adc
loopne
jecxz
cwtl
jne
xlat
testl
fcmovnu
jmp
jle
add
and
inc
inc
insb
gs
push
fwait
jle
lea
enter
addr16
sub
stos
out
cli
dec
cmovs
das
dec
inc
test
pop
sarl
inc
test
inc
or
popf
out
jp
outsb
fldenv
push
out
lret
sahf
inc
jl
pop
je
sbbl
add
xor
pop
pop
js
mov
mov
cmc
test
mov
xor
subl
lea
lret
bound
sbb
ja
bound
scas
xor
lret
and
ss
sahf
dec
addb
adc
sub
push
repz
stos
fsubrl
dec
fwait
jae
cwtl
cltd
mov
in
bound
lea
xor
scas
les
adc
cmpsb
dec
cmc
mov
fnstenv
pop
in
out
xor
mov
lcall
fcomip
mov
adcl
push
mov
adc
outsb
push
push
or
repz
sar
push
movsb
mov
inc
jmp
fstpt
loope
dec
call
lods
fs
ja
push
dec
add
fwait
int3
sub
xor
rorl
xchg
xchg
test
mov
mov
leave
jle
cmp
mov
pusha
sbb
dec
dec
push
aam
and
mov
inc
jl
stc
cli
mov
dec
out
jno
cmp
jl
imul
bnd
inc
mov
ds
sub
outsb
ficoml
sub
jp
lret
ficomps
pop
loop
add
pop
mov
shrb
popf
imul
daa
push
jmp
andl
inc
test
std
inc
mov
mov
add
fldenv
adc
fcmovnu
cltd
cmp
lret
pop
test
cld
pop
mov
mov
lea
xlat
cli
test
pop
lock
jecxz
in
or
sarb
pop
lock
jmp
orl
jmp
inc
ficoms
xchg
mov
daa
lods
or
and
xor
xor
std
lcall
mov
test
pop
stos
push
fcomps
imul
mov
jnp
push
std
loopne
leave
daa
xor
int
or
ljmp
mov
mov
addb
sub
cmpsb
push
xor
mov
outsl
daa
inc
pop
sti
cli
icebp
pop
sti
cmp
xchg
in
mov
xchg
lock
fistl
add
pop
xor
cmp
mov
mov
and
stos
ffreep
and
xchg
push
adc
jp
popf
in
mov
or
fbstp
rcrb
insl
xchg
or
add
lods
or
popa
fcomp
lcall
imul
lcall
sbb
adc
ret
xchg
jg
int3
mov
cwtl
in
dec
ss
cmc
mov
mov
push
arpl
mov
in
adc
loope
cmp
lea
sub
orb
or
js
insl
iret
mov
inc
jl
inc
pop
imul
push
inc
daa
outsb
add
les
loopne
mov
daa
out
cmp
lret
add
data16
sbb
jns
cmp
adc
mov
mov
or
xchg
mov
mov
lahf
bound
lahf
mov
xchg
hlt
jmp
loopne
insl
or
imul
loope
pop
lret
mov
loopne
sahf
mov
imul
fisubrl
lds
rol
add
push
pushf
int3
pop
nop
fisttpl
fldt
mov
sahf
mov
xchg
inc
mov
test
jle
push
sub
sbb
mov
xor
xlat
pop
sub
movsl
loopne
cli
jae
pop
inc
pop
sub
daa
mov
cmp
int3
jae
mov
pushf
pop
fdivs
mov
add
xchg
cld
pop
pop
ret
lcall
aad
repnz
mov
or
xor
loop
hlt
mov
sahf
pop
sbb
pushf
push
xchg
jl
in
add
sub
push
push
xor
dec
mov
shl
mov
pop
adc
xor
mov
jae
shll
lret
cmc
cld
ja
dec
xor
into
or
pop
out
pushf
or
shr
jp
pop
cmp
popf
or
sarl
es
fbstp
test
shrb
jnp
sti
or
jle
lea
push
daa
popa
cmp
jmp
loope
cs
sbb
hlt
adc
gs
daa
sub
xchg
sahf
push
mov
mov
sub
fisubrl
push
and
int
cmp
pcmpgtw
cmp
inc
inc
incb
adc
repnz
push
dec
pusha
repnz
test
inc
cli
pop
push
xor
add
ds
fisubrs
mov
in
call
mov
cmp
xchg
jnp
dec
sbb
cmp
jb
ljmp
cmp
jle
jle
aad
fs
push
adc
xor
push
sbb
cmp
mov
sub
fcomip
ret
pop
lods
sub
ja
push
mov
loopne
pop
xor
shll
sbb
xchg
fwait
mov
scas
inc
shll
mov
jge
mov
into
int
pop
push
jg
xor
out
pop
cli
les
mov
adc
and
mov
aaa
ret
rcrl
je
jne
out
int3
adc
lds
loopne
xor
jge
jb
pop
sbb
jle
loop
fwait
mov
pop
adc
mov
in
add
and
repz
pusha
mov
int3
jecxz
sbb
mov
mov
fisubl
mov
stos
scas
int3
clc
xorl
in
test
mov
sub
icebp
mov
push
adc
out
xchg
arpl
or
fcomi
inc
jnp
popf
inc
xchg
pop
cltd
pop
mov
jg
add
add
sahf
or
mov
enter
fcomps
icebp
xor
js
dec
rolb
repnz
shll
mov
call
dec
add
sub
inc
fnsave
loop
vminps
mov
ss
mov
mov
fimull
jge
ficomps
push
cmpsb
testb
sbb
sub
mov
cwtl
push
lret
push
jbe
jae
scas
dec
xlat
mov
mov
outsb
aaa
inc
lods
imul
or
daa
int
inc
push
inc
movsb
inc
push
popa
scas
je
mov
push
ss
arpl
pop
fsubrs
fmull
mov
cmp
jo
mov
sub
xchg
arpl
test
pop
lods
pop
mov
sub
adc
xchg
lds
nop
inc
push
addl
stos
mul
outsl
push
neg
pop
mov
outsl
inc
std
int3
mov
mov
loopne
push
enter
push
and
and
leave
rcrl
xor
aam
lock
push
fbstp
sub
push
out
push
mov
daa
sub
test
int3
push
pop
jge
icebp
mov
dec
mov
mov
popf
mov
out
scas
outsl
daa
das
stos
mov
sbb
cmpsl
js
dec
cmpsb
xchg
mov
dec
sub
and
sub
test
mov
xchg
fnsave
andb
lods
mov
clc
pop
jbe
les
push
cltd
sbb
sbb
adc
cmpsl
pop
scas
sub
push
fisubs
test
jbe
nop
and
mov
js,pt
inc
repnz
add
dec
data16
test
popf
test
sbb
sbb
adc
imul
cmp
xchg
inc
mov
dec
xchg
lahf
mov
call
sub
and
cli
xchg
cmp
jo
loope
lods
push
jge
adc
sbb
cs
loope
xchg
pop
shlb
imul
imull
lds
adc
dec
test
mov
jle
dec
mov
test
test
sbb
sbb
jne
addl
notl
jge
stos
and
adc
and
aad
adc
lcall
faddl
es
mov
mov
sti
pop
lds
or
mov
fs
adc
push
sub
lcall
lods
scas
popa
int
clc
bound
dec
jno
push
xor
inc
push
pop
scas
inc
ficompl
or
leave
inc
jp
cmp
outsl
insb
pop
ret
xor
xchg
insl
fistpl
jecxz
je
or
xlat
and
movsb
ret
dec
jp
aam
js
add
dec
iret
pop
hlt
pop
enter
mov
dec
and
add
imul
icebp
pop
mov
movsl
dec
std
pop
and
jmp
jne
daa
sub
rol
test
push
inc
mov
faddp
sbb
mov
xor
mov
icebp
add
and
bound
fs
and
pushf
fimull
sbb
lahf
incb
inc
mov
xchg
fsts
nop
out
jge
hlt
mov
sbb
adc
addb
dec
sbb
mov
dec
jne
sub
int
pusha
sbb
addr16
scas
sub
fldl
xchg
addr16
popa
out
and
pop
pop
pop
xchg
stos
sbb
int3
out
xchg
stos
cmp
sub
dec
push
dec
stos
cli
sahf
jo
in
dec
jecxz
mov
push
sahf
pop
test
cmp
add
in
inc
ret
mov
mov
dec
cmp
lds
push
cmpsl
fbstp
xor
mov
adc
movsl
or
inc
dec
push
mov
cld
test
pop
pop
mov
xorl
mov
cltd
inc
mov
cmp
mov
loopne
cmovl
mov
cmpsb
fists
pop
inc
pop
inc
dec
and
sbb
stc
and
mov
stos
add
scas
sbbl
push
sub
cld
pop
xor
push
inc
push
ljmp
imul
push
push
jb
sbb
je
out
insb
cmp
out
jle
mov
xor
ret
das
movsl
mov
mov
test
jns
dec
sbb
add
hlt
add
cltd
or
gs
push
in
ss
sti
loope
jle
adc
sub
ror
mov
call
sbb
sub
je
dec
fs
xchg
nop
adc
cmp
jnp
sbb
mov
fimuls
cwtl
dec
push
mov
iret
ds
push
pop
leave
lcall
aaa
adc
pop
inc
push
jae
in
jmp
pop
nop
or
psubw
cmp
aas
imul
jbe
xorl
jecxz
fs
jge
cld
and
test
mov
ret
dec
loope
sbb
or
xchg
add
insl
bound
cs
jae
mov
and
fldt
inc
std
cltd
or
sbb
jl
test
mov
sarb
xor
dec
push
lods
xchg
jmp
xor
inc
es
lds
lret
repnz
shl
pop
jg
sti
stc
in
or
jecxz
cmpsl
push
cmp
sub
jle
cmc
rcrl
xchg
mov
sbb
mov
nop
test
aaa
frstor
sub
pop
xlat
sahf
xchg
xchg
jmp
and
push
xchg
pop
cmp
pusha
mov
sbb
push
sbb
in
in
and
stc
mov
and
call
lds
adc
addr16
iret
sbb
addr16
popf
xlat
test
test
push
popa
mov
sub
sub
out
sbb
jl
mov
lret
lods
mov
shlb
loop
movsb
shlb
mov
cmpsl
adc
lret
insb
sbb
cmpsl
cmp
mov
mov
sub
clc
push
outsl
aaa
out
aam
jge
jp
fistps
orl
cs
es
mov
les
fcmovbe
cmp
dec
sbb
sub
lods
sub
mov
jbe
in
stos
cli
mov
cld
xor
lcall
xorl
add
push
and
mov
insb
ljmp
jne
jp
testb
xchg
jle
sub
stos
nop
adc
pop
mov
addr16
add
mov
sub
or
adc
or
pop
jg
cmp
lods
add
sbb
inc
xor
push
fcoms
out
jmp
jl
add
js
mov
mov
mov
out
push
andb
test
es
bound
rcr
decb
fildll
std
stc
rclb
orl
and
xchg
or
lsl
leave
and
int
sbb
jne
icebp
push
gs
jns
addb
rclw
fidivrs
test
imulb
jbe
mov
pop
aam
inc
jl
loopne
or
xorl
outsl
fisttpl
mov
xchg
inc
nop
movsl
xor
add
push
add
xchg
dec
or
cmp
cmp
ss
shl
sbb
test
mov
xchg
cld
clc
pop
jp
int3
negb
repz
sbb
jbe
sti
xchg
add
sub
dec
cmc
or
imul
andb
mov
sbbl
pop
leave
jno
les
dec
in
jl
ret
insb
fstpt
add
movl
sbb
in
mov
sar
sbb
shr
inc
loopne
jle
cmp
std
and
enter
into
call
lahf
rorl
mov
sbb
lods
ss
bound
inc
std
testb
inc
stos
mov
mov
pop
movsb
xchg
or
dec
mov
addr16
mov
and
movl
xlat
test
jg,pn
push
or
xor
movl
mov
lods
and
xchg
popf
cltd
or
andl
add
cltd
pop
add
cs
push
sub
ja
es
fmuls
rcl
jno
adcl
mov
fisubrs
push
adc
ljmp
push
jecxz
fsubrl
sbb
popf
mov
inc
data16
iret
jecxz
and
cwtl
add
sbb
das
test
push
mov
mov
jbe
or
adc
mov
lds
sbb
les
adc
push
inc
pop
shrl
push
sbb
aad
shlb
lods
nop
xor
icebp
jns
sarl
aaa
enter
test
or
inc
sub
testb
outsb
popf
push
mov
std
loopne
adc
into
add
dec
pop
mov
xchg
divl
aam
jnp
xchg
mov
or
movsb
ljmp
mov
fdivs
cltd
testl
aaa
mull
jns
mov
adc
stos
cli
into
xor
jnp
jp
and
fidivl
sbb
pop
fsqrt
jmp
lds
fildl
mov
adc
sbb
or
pop
push
loope
pop
in
mov
lcall
sbb
jecxz
xchg
xchg
clc
add
add
xchg
test
and
xchg
or
sub
push
pop
xchg
daa
pop
jb
adc
jb
cmpsl
cmp
roll
adc
mov
cmpsl
jp
out
add
pop
xchg
inc
loope
mov
push
call
cmpl
or
lret
push
cmp
stc
and
mov
loopne
lret
pushf
sub
mov
in
popf
xchg
xchg
unpckhps
sub
movsl
cmpsb
sti
mov
fidivrs
fprem
fcmove
xchg
popf
and
mov
popf
adc
stos
addr16
mov
aaa
repz
mov
test
es
stos
push
fistpll
data16
and
lds
xchg
aad
jb
jno
loop
pusha
or
inc
or
mov
mov
cmpsl
loop
lcall
pop
mov
loope
lret
cmp
sub
and
xchg
push
xchg
sti
or
sbb
adc
inc
adcl
add
aad
sub
call
lods
fdivs
push
lods
dec
cmpl
aad
sub
sub
lock
fiadds
xor
stos
divb
call
sahf
leave
jge
cmpsl
mov
mov
testb
in
data16
inc
sub
xchg
jne
add
sbb
imul
call
enter
out
mov
fdivrs
sub
mov
incl
xchg
mov
decb
test
dec
cs
jmp
aad
ja
push
dec
insl
ja
jno
sbb
mov
inc
inc
dec
and
rcrl
out
insl
sbb
push
fstpt
outsl
add
xor
adc
mov
cld
xchg
or
fimull
mov
sbb
mov
sahf
test
and
pop
aas
sbb
mov
imulb
lea
xchg
sbb
std
dec
inc
addr16
push
cmc
ficompl
mov
cmp
in
mov
stc
or
mov
cmp
jne
ljmp
inc
cli
mov
mov
push
dec
ja
lret
hlt
xor
or
cmp
xor
mov
sub
xor
out
in
dec
mov
sarl
mov
xchg
dec
adc
hlt
sbb
jp
push
fmul
xor
call
loop
pop
lods
xor
push
aam
cs
stos
ret
sbb
fisubl
jecxz
loopne
xchg
push
stos
xlat
aaa
push
in
jbe
aad
mov
mov
inc
je
dec
xlat
mov
in
inc
mov
outsb
int3
push
sub
cmp
and
aad
push
push
xlat
pop
xor
das
aam
cmpsl
scas
cli
add
mov
sti
inc
and
add
jecxz
xorb
sbb
aaa
std
imul
sub
aas
jp
orb
shlb
lret
sub
push
mov
es
lods
sbb
inc
push
push
mov
loop
sbb
push
es
add
nop
mov
push
es
pop
xlat
out
dec
pusha
xor
outsb
aad
pusha
mov
test
jle
xchg
inc
lods
xor
mov
xchg
imul
mov
pop
js
stc
pop
mov
outsb
popa
js
push
popa
sbb
mov
test
aam
outsb
dec
mov
negb
mov
filds
mov
pop
andl
insl
in
pusha
mov
ja
mov
popa
mov
pop
movsb
sbb
dec
insl
lret
sub
fwait
jg
lock
ret
dec
icebp
mov
imul
pushf
and
mov
dec
and
sarb
dec
add
sahf
adc
lcall
sbb
out
mov
js
add
xchg
imul
js
xor
and
xor
movl
mov
inc
dec
cmpb
push
push
mov
dec
push
or
das
mov
fnstsw
jo
cs
mov
mov
in
dec
inc
jbe
add
popf
pop
cmpsb
dec
fldl2e
movsl
fnstcw
add
fisttpll
je
and
aam
clc
cmpsb
mov
ja
stc
bound
icebp
mov
xchg
movsb
insl
push
ljmp
loopne
popa
rcrl
pusha
mov
aas
fidivs
and
cmp
mov
stos
enter
jo
add
iret
out
pushf
mov
pushl
xor
and
pushf
sbb
jns
out
hlt
sbb
pop
adc
jle
repnz
mov
pop
mov
sbb
or
adc
add
mov
push
jnp
pop
jne
jmp
aas
dec
cwtl
int
lahf
sub
pop
out
push
aad
ret
out
pop
xchg
es
xchg
cmc
sbb
notl
adc
adc
xor
roll
fs
or
repnz
pop
sbb
add
pop
movsl
cmp
fsts
sub
cmc
xchg
rcll
push
sti
push
push
popf
cs
pusha
pop
stc
in
sub
inc
ljmp
jb
mov
sti
add
imul
lea
sub
cmc
mov
push
or
stc
in
fisttpll
jb
stos
mov
mov
pop
call
mov
rcrb
add
cmp
cmp
dec
inc
fildll
mov
mov
push
shll
aam
sahf
dec
cmp
out
aam
mov
xor
or
sarb
lret
aas
sbb
mov
out
push
add
mov
int3
enter
fdivr
jmp
adc
and
sbb
jl
hlt
dec
jg
xchg
je
lret
je
push
pushf
in
test
xchg
std
pusha
jns
dec
xor
jl
dec
imul
dec
rclb
jae
push
rclb
rorl
push
push
iret
mov
push
sbb
rcrb
jno
les
imul
inc
test
mov
add
push
stos
insl
push
daa
repz
enter
scas
repnz
add
xchg
data16
pop
insb
fdivl
xchg
lds
mov
mov
add
test
gs
punpcklbw
push
stc
mov
int
xorl
rcll
mov
loopne
inc
or
mov
aam
rolb
and
lret
cmpl
push
mov
push
mov
out
in
jp
sahf
mov
add
or
or
out
adc
lds
jg
mov
cmp
out
les
push
pop
mov
inc
adc
push
pop
insl
mov
fisttpl
sbb
and
loope
rorb
dec
push
cmp
je
imul
adc
loope
inc
xor
jo
scas
xchg
dec
jnp
xchg
xor
in
enter
shll
mov
mov
clc
mov
dec
cmp
sbb
xchg
scas
fimull
imul
jle
cmp
lahf
mulps
or
fs
or
sbb
and
fucomi
sbb
stos
and
xor
std
cs
bound
add
cld
out
and
mov
imul
aam
push
cmp
int3
xor
push
fldenv
jb
xchg
flds
out
movsb
fsubr
sti
daa
mov
xchg
add
fnstenv
movsl
add
mov
push
jne
xchg
lret
subb
mov
lahf
stos
jbe
in
push
movsl
jo
mov
scas
push
inc
inc
cld
enter
cmpl
int
fiaddl
jne
mov
xor
fisubrs
rolb
cs
lret
adc
and
loope
repnz
pop
lock
pop
xchg
xor
add
jne
arpl
aam
int3
addb
dec
add
outsl
cmc
aas
inc
pop
sub
jmp
push
xchg
sti
cmpsl
daa
adc
push
aam
outsl
sub
mov
xchg
aaa
dec
mov
mov
fcomi
mov
lahf
xchg
xor
js
daa
pop
jo
cmp
mov
lea
mov
jecxz
aad
ret
fwait
pop
jle
out
sahf
aas
and
fistl
fimuls
fsubl
mov
sub
add
fwait
adc
mov
mov
fcmovnb
ds
into
push
das
mov
in
xchg
fs
pop
movsw
mov
mov
stos
pop
push
out
push
mov
lret
lea
pop
aam
pop
loope
dec
sbbl
add
ss
mov
xchg
mov
arpl
es
xchg
iret
xlat
rol
les
mov
movsb
loope
sahf
pushf
xchg
push
sbb
pop
ja
cmp
pop
pop
mull
cmp
inc
icebp
jp
push
add
outsl
inc
mov
xchg
mov
pusha
adc
adc
daa
pop
pop
fisttps
int3
lds
popf
ljmp
test
imul
mov
and
adc
mov
andl
jmp
es
out
jne
and
test
pusha
sti
ja
imul
push
pushf
out
fcom
push
mov
xchg
roll
mov
push
fcmovnb
int3
xchg
mov
mov
cmp
mov
xor
add
cli
and
or
dec
push
xor
loop
mov
leave
shlb
sbbl
bound
nop
add
push
xor
sbb
divb
sub
inc
rcll
loop
xchg
jecxz
jno
std
mov
xchg
iret
imul
push
rorl
push
shll
daa
adc
jne
mov
clc
and
sbb
push
push
dec
push
xabort
cmc
daa
lret
ljmp
dec
and
int3
jp
sub
movb
mov
xchg
ret
shll
lcall
sbb
enter
sub
or
jbe
out
adc
subl
pop
pop
mov
mov
fildll
ja
push
ljmp
add
pop
sub
std
pop
xchg
xchg
inc
test
je
lea
mov
negl
or
lods
jecxz
in
and
xchg
cmpsl
fwait
xlat
inc
cltd
sub
or
xchg
loope
dec
xor
repnz
adc
mov
and
jecxz
cmp
les
out
xchg
pop
mov
or
jne
adc
jl
std
add
loop
daa
inc
insb
xlat
xchg
outsb
xchg
mov
xchg
pusha
mov
push
cmc
push
sub
mov
xor
pusha
test
dec
sbb
inc
dec
push
mov
inc
mov
ret
push
int
lds
dec
xor
cmpsb
fsubl
mov
jle
addr16
mov
jmp
leave
pop
sbb
cmp
mov
sti
pop
push
fldl
or
outsb
jns
insb
lods
call
in
enter
mov
push
push
or
pushf
lcall
cltd
pop
and
sar
icebp
imul
mov
fidivrs
xor
xor
in
iret
int3
aas
nop
xchg
mov
cmp
popf
jle
ds
shll
xchg
jne
pop
or
loop
push
and
jno
adc
or
xor
xrelease
inc
sbb
cli
dec
cld
and
aas
dec
xchg
xor
pop
push
add
sub
and
fwait
cmp
mov
cmp
filds
lahf
shll
jno
xchg
sbb
mov
mov
ss
or
in
out
arpl
mov
fdiv
add
pop
inc
mov
and
mov
cmc
dec
daa
mov
fildl
enter
sub
sub
xchg
lahf
mov
lods
mov
pop
and
pop
or
aam
cwtl
ljmp
jbe
or
leave
lds
test
xor
aaa
popa
clc
dec
jmp
adc
sub
cli
pusha
jns
cmpsb
lret
lret
addr16
xchg
nop
scas
repz
aam
pop
push
mov
mov
push
sbb
push
addb
sub
jge
push
cmp
aaa
loop
ljmp
in
jmp
jl
lret
int
xchg
xchg
jns
lods
xchg
xchg
xchg
orb
dec
gs
sahf
jns
dec
pop
push
scas
orb
or
add
movsl
aaa
and
fidivrs
adc
jle
ret
lahf
xor
push
notb
push
sti
push
mov
data16
fldcw
push
cmp
push
out
jbe
jb
xchg
outsl
das
xor
sub
inc
imul
aas
add
stc
jno
mov
xchg
dec
cltd
adc
hlt
call
scas
pop
popa
push
fs
std
jo,pn
jo
ljmp
sub
jb
pop
outsb
add
loop
das
sbbb
call
xlat
jecxz
movl
rcrb
hlt
pop
cmpsb
sub
out
pop
inc
jecxz
pop
cltd
xor
in
ficoml
and
mov
shr
push
jae
sti
mull
pop
push
xor
xchg
sub
repz
push
cmp
test
in
loope
lret
add
in
lds
add
and
inc
push
and
lret
inc
lea
push
sub
shl
adc
mov
pop
inc
mov
or
mov
dec
jp
dec
loope
test
shrb
xor
adc
pusha
xor
xchg
cmp
sbb
jnp
adc
or
sbb
sbb
jno
shrl
pop
call
push
outsb
xor
loop
xchg
or
push
mov
dec
dec
pushf
dec
pop
dec
sahf
mov
loop
ret
std
xorb
or
enter
sbb
outsb
js
test
mov
add
xchg
push
jmp
xlat
stc
sub
test
dec
push
jne
cmp
icebp
sarb
jae
mov
roll
ss
pop
and
lods
rcl
mov
sub
xor
fcoml
outsb
stc
test
push
add
mov
mov
and
shll
pop
lret
mov
push
int3
push
div
int
subb
ja
les
lret
mov
xor
mov
es
inc
jmp
cwtl
mov
jmp
cmpb
xor
xor
outsl
cmp
and
out
test
pop
and
inc
add
movsl
sbb
xlat
jae
inc
popa
pop
sub
xchg
jb
rorl
jbe
cld
in
pop
sub
inc
mov
and
mov
xorb
pop
xchg
imul
scas
jl
inc
mov
push
xchg
pop
mul
aas
mov
jno
xor
addr16
jb
adc
push
adc
ret
cltd
jle
jp
jns
fs
frstor
lock
sbb
lds
sbb
lea
addr16
popf
fildl
adc
enter
jnp
nop
test
vpgatherqq
ret
xchg
leave
stc
xchg
frstor
sbb
mov
shrb
pop
add
sub
dec
xchg
negl
xchg
pop
mov
mov
jl
xor
pushf
xor
dec
aam
mov
popl
shll
decb
clc
add
call
push
pop
pop
jge
test
ret
stc
and
scas
andl
sub
fs
sub
cld
mov
jmp
jo
inc
gs
mov
mov
mov
aad
dec
lock
dec
outsl
mov
inc
std
cmp
inc
dec
xchg
mov
lea
push
fdiv
fists
addr16
mov
xchg
daa
pop
mov
in
lods
cmp
sti
xchg
adc
jbe
xor
in
jns
out
push
xchg
dec
adc
cld
dec
mov
pop
dec
or
jne
adc
xor
pop
and
inc
sub
int
add
and
adc
mov
adc
xchg
inc
push
pop
roll
and
and
push
sbbl
cmpsl
int
imul
xchg
jle
mov
out
mov
inc
iret
test
sahf
test
inc
je
sbb
and
loope
adc
lret
fiadds
stc
add
nopl
mov
in
rorl
sub
clc
stos
dec
fsqrt
and
lock
adc
out
sub
decl
loope
sahf
adc
mov
or
xchg
cld
aas
push
pop
mov
sub
jne
jnp
imul
enter
pop
cmpb
ljmp
pop
ja
mov
pop
mov
pusha
jl
or
adc
lret
dec
mov
lods
es
cwtl
adc
clc
js
inc
pop
pop
dec
in
dec
and
mov
mov
or
xchg
fdivrl
daa
psrld
fbstp
out
inc
xor
mov
xor
or
adc
es
cmp
and
xorb
loopne
or
popa
scas
adc
fiaddl
sbb
and
lds
xor
adc
sub
int
dec
mov
fstps
jmp
test
mov
dec
pop
test
test
cmpsl
clc
jnp
jmp
ret
dec
pop
enter
adc
outsl
mov
mov
xchg
xor
xchg
scas
push
sub
jge
mull
jnp
inc
movsb
imul
xchg
xchg
jmp
into
aaa
add
xchg
fistpl
jb
push
jae
orl
mov
jecxz
hlt
xchg
mov
push
scas
push
imul
sarl
data16
pop
push
ss
es
lea
adc
mov
jo
mov
sbb
imul
xor
dec
xlat
fwait
cmp
lahf
cli
jl
xor
push
jecxz
xchg
clc
outsl
leave
and
xchg
loop
mov
xchg
lock
xchg
popf
insl
sbb
pop
in
cmp
imul
jo
rcrb
cmpl
adc
mov
jecxz
mov
test
gs
jno
add
sub
add
xchg
add
dec
and
int
es
or
js
or
inc
cmpsl
cmp
jge
add
jecxz
mov
sbb
cmpl
inc
dec
jb
movsb
lods
cwtl
cs
mov
shll
lods
enter
movsl
xchg
xchg
add
movsb
dec
movsl
mov
cmp
int
fmulp
push
sbb
dec
stc
int3
sbb
mov
xor
aam
xor
lods
cmpsb
and
xor
push
cmp
or
add
inc
sub
ss
mov
gs
dec
xor
inc
xchg
bound
enter
mov
mov
cmp
jnp
mov
stos
push
or
mov
lods
mov
push
push
add
out
xor
enter
int
arpl
add
push
andl
mov
mov
cmp
mov
jnp
test
addr16
jno
sub
or
lods
ljmp
mov
out
das
arpl
mov
mov
into
jl
mov
xchg
mov
xchg
mov
pop
fiadds
jle
push
mov
mov
movsl
shlb
xchg
jl
push
ja
add
fwait
jne
dec
mov
lea
mov
jo
inc
xchg
into
sbb
out
xchg
aas
pop
pop
jp
in
adc
xchg
sbb
je
cbtw
inc
repnz
pop
sub
push
xor
fs
in
fwait
sahf
pop
fcomps
push
std
fidivl
aas
fnsave
push
loop
pop
mov
add
jg
and
inc
movq
cs
fimuls
divps
enter
scas
add
adc
sub
cmp
pop
pop
push
mov
xor
lods
jbe
into
std
shr
or
scas
cmc
xchg
inc
ss
pusha
stos
jne
pop
push
push
clc
mov
imulb
cltd
push
dec
scas
cmp
push
or
sub
sbb
mov
in
adc
xchg
push
sub
and
sbb
sbb
fldt
and
adc
jmp
cltd
push
adc
shrb
addr16
mov
cmc
jmp
cmp
adc
push
xchg
repz
stc
inc
cmpb
in
sbb
ret
leave
jp
cmp
pop
mov
jge
shrl
xor
sub
pusha
out
sub
jnp
out
push
pushf
cltd
jg
xchg
mov
dec
nop
jbe
insb
sub
pop
ret
enter
xchg
and
jo
aad
inc
sub
mov
or
pop
std
push
pop
fsubl
push
pop
sub
xlat
mov
add
cmp
cld
and
pop
div
push
dec
jg
into
fsubrl
stos
or
lds
lods
inc
pop
push
jl
lret
jb
push
je
add
xchg
push
data16
sahf
mov
test
scas
push
dec
mov
cs
pop
xchg
aas
icebp
rcrb
mov
and
pop
push
mov
xor
cmp
mov
bound
jns
jno
xchg
pop
inc
inc
pushf
xor
in
imul
loopne
hlt
daa
pop
lds
push
imul
mov
adc
mov
rcrb
add
adc
mov
ret
sbb
dec
mov
popf
sti
push
into
push
add
mov
fs
jae
dec
jl
lahf
movsl
std
cli
inc
dec
test
loopne
adc
bound
ja
pop
int3
mov
daa
ds
clc
test
mov
icebp
lock
fnstsw
ja
imul
scas
movsb
stos
test
or
mov
mov
cmp
faddl
pop
fs
stc
sub
pop
sub
mov
lret
add
xchg
fldt
push
ljmp
movsb
les
push
stc
cmp
insb
pop
in
jbe,pn
ret
dec
mov
mulb
and
out
sbb
mov
in
xchg
jl
aad
scas
gs
push
mov
cmpsl
clc
and
in
sub
sub
sub
lods
and
cmp
ret
pop
lahf
jno
mov
pop
cmp
mov
out
sub
jb
fs
popf
imul
dec
mov
adc
pop
das
push
dec
subb
movsb
add
add
adc
clc
cmp
fldenv
or
sub
mov
jne
movsb
sub
lods
out
push
fucomp
imul
xor
scas
pop
xchg
xor
adc
push
sti
inc
jno
push
mov
enter
push
xlat
mov
mov
out
pop
cmp
cmp
lods
scas
mov
out
cmp
mov
sub
hlt
mov
add
addr16
stos
jo
jb
pop
xor
jbe
popa
loope
ret
cmpsb
outsb
cmpsb
and
daa
push
xchg
dec
es
sub
stc
xor
push
inc
fs
xor
mov
lock
rolb
sbb
popf
aaa
sti
sbb
cwtl
mov
adc
push
test
and
sub
push
pop
sub
cvttps2pi
enter
and
insb
fstl
out
popa
rcrb
sti
lahf
nop
data16
js
loopne
adc
in
jno
adc
mov
cmp
movsl
ficoml
lcall
pop
sarb
lahf
and
fnstsw
jne
test
mov
inc
inc
aaa
mov
xchg
imul
push
insb
pop
loopne
adc
or
xor
lret
mov
sub
sahf
sbb
add
xor
pop
dec
push
out
xchg
das
xchg
movsl
adc
add
push
mov
stos
pop
lds
xchg
hlt
sbb
jecxz
mov
sbb
call
lahf
stos
jmp
fldenv
aam
out
add
enter
cwtl
andl
jae
js
shr
mov
push
and
aas
cmp
or
xchg
fs
addr16
pop
in
or
iret
mov
fisubrl
jbe
xorb
cmp
out
mov
or
bound
test
dec
pop
imul
pop
ror
push
out
push
add
insl
mov
and
jbe
xor
adc
pop
sbb
sub
bnd
out
xlat
in
sbb
mov
xchg
insb
push
push
mov
out
mov
push
cmp
jmp
ret
adc
cmpsl
mov
testl
cli
jb
lock
and
rolb
rol
cmp
in
jp
sbb
jae
repz
in
inc
mov
xor
repz
sub
es
jno
scas
sub
stos
mov
xchg
push
jmp
gs
push
sbb
fstpt
addb
pop
jne
je
pushf
sbb
xor
or
jb
fistl
jne
lret
enter
mov
divb
iret
sti
in
lahf
mov
lcall
insl
dec
mov
pop
lret
pusha
push
inc
adc
push
lcall
dec
or
imul
stos
dec
daa
sbb
or
cltd
scas
push
popf
sbb
cld
shrb
jae
out
subb
pusha
mov
pop
shr
cmpsl
hlt
popf
dec
andl
pop
or
stos
and
addr16
inc
cld
fcoms
test
pop
mov
dec
cld
inc
shr
pusha
xchg
jle
test
push
or
out
push
xor
fimull
bound
adc
mov
and
dec
mov
push
fcmovnbe
or
daa
or
mov
inc
test
and
mov
adc
ljmp
add
rcrb
mov
imul
jge
jle
fldt
pop
jle
out
inc
test
push
mov
add
into
lea
jl
dec
fstl
xchg
imul
cld
test
sbb
cmpsl
popf
cmpsl
cld
insb
popa
cmpsb
push
fwait
aas
cld
pop
sbb
and
adc
subb
dec
adc
fidivl
push
adc
jmp
aam
cmp
mov
push
mov
push
cmp
ficomps
imul
pop
mov
cld
stos
lock
push
hlt
push
mov
ja
shl
jne
mov
mov
dec
or
ret
shlb
dec
cmp
fwait
in
mov
or
fistl
adc
repnz
loop
inc
ja
jns
test
xchg
iret
arpl
inc
mov
and
cld
out
popf
int
test
lea
xchg
xchg
add
push
leave
imul
out
test
mov
push
mov
and
adc
mov
add
adc
ss
jbe
sub
cmp
pop
or
cmp
outsb
mov
jb
clc
push
sub
imul
mov
pop
les
mov
daa
mov
data16
push
add
pop
aam
xchg
rcrb
imul
movb
sbb
dec
scas
dec
pop
or
idivl
mov
lea
shlb
jnp
stos
sub
jae
push
arpl
mov
push
inc
mov
sbb
inc
test
popf
dec
imul
xchg
dec
pop
jecxz
pop
push
out
push
dec
xchg
or
shlb
sub
ds
imul
dec
call
pop
fwait
icebp
mov
iret
shl
not
push
cmp
dec
jge
adc
scas
int3
jle
add
in
test
xor
xchg
sbb
sub
std
stos
gs
imulb
mov
and
or
mov
pop
insb
jns
dec
test
push
aam
mov
imul
rcll
cltd
mov
xchg
cmpsl
jnp
les
xchg
dec
mov
push
fimuls
out
fs
inc
push
mov
dec
notl
push
push
int
aad
xchg
fdivrl
lods
dec
dec
push
jns
loop
dec
sub
test
xor
lret
insb
mov
insl
fwait
aam
xchg
xchg
sbb
jmp
xor
sub
xor
xchg
add
adc
inc
fildl
jmp
cmp
fs
insb
mov
pop
adc
jo
shlb
xor
push
jge
jg
aas
sub
jns
inc
jbe
pop
sub
inc
mov
scas
push
clc
orb
sbb
popa
aad
sub
fwait
iret
dec
push
cmp
mov
mov
mov
insl
js
pop
cs
int3
cli
lcall
sbb
adc
pop
fucomip
icebp
movsl
hlt
pop
cmpsb
pop
lret
lods
mov
test
add
stos
bound
aaa
stos
mov
fwait
ret
jl
and
das
fldt
pop
call
pusha
pop
fildll
inc
inc
jb
pop
dec
mov
es
shll
out
push
lds
je
sub
pop
es
mov
sbb
adc
call
test
scas
cmp
push
lret
fwait
mov
sub
jge
bound
fdivrl
push
xchg
sbb
push
add
xchg
movsl
movsl
jp
push
push
xchg
adc
std
std
dec
and
andb
push
test
std
or
xchg
addr16
jge
hlt
push
sbbb
ja
and
jbe
sbb
inc
add
and
cmp
jg
push
or
jbe
pushf
xor
gs
mov
adc
adc
lret
push
cmp
xor
hlt
push
scas
cmp
call
inc
dec
cmpsb
cmp
aaa
inc
addl
push
jmp
loopne
push
inc
cmp
jmp
insb
mov
arpl
sub
std
cltd
adc
inc
imul
mov
decb
inc
mov
sahf
pop
dec
jns
divb
and
cs
pop
mov
call
fnsave
lock
xchg
out
dec
cli
and
ret
inc
push
imul
fistpl
add
aad
dec
jbe
ret
xchg
into
lods
xchg
ljmp
testb
or
clc
mov
insl
push
cmpsb
stc
scas
flds
addb
xor
jmp
mov
jb
incl
arpl
movsb
andb
pop
xchg
mov
out
lock
stc
out
mov
sub
in
std
cmpsl
mov
lret
push
scas
add
loopne
rorb
aas
push
jl
mov
aam
sbb
stos
and
fcom
add
mov
aaa
sub
repnz
jno
int3
scas
mov
jle
pop
test
scas
mov
daa
pusha
cmp
and
dec
jb
inc
inc
pop
arpl
pop
sbb
mov
popl
cmp
nop
push
mov
sbb
in
inc
inc
mov
pop
loop
daa
jecxz
or
lds
pop
lret
mov
or
adc
mov
sbbl
cli
test
ret
mov
repz
jg
mov
movsb
or
popf
inc
add
iret
rep
testb
lahf
mov
pop
rcr
ret
aas
adc
aas
andb
or
xchg
repnz
or
xor
mov
shll
mov
fwait
cld
or
jecxz
rorb
and
push
add
cmc
repz
push
and
lret
mov
inc
outsl
cmc
inc
pushf
adc
bound
dec
xchg
popa
dec
sbb
and
or
pop
lahf
aaa
pop
push
gs
xchg
mov
or
pop
jb
fiadds
push
jbe
cld
jmp
rcrb
imul
jg,pn
out
push
mov
fmuls
lods
outsl
push
ds
ds
mov
rcll
mov
mov
adc
jecxz
jno
add
cmp
roll
test
pop
or
sub
insb
scas
mov
out
testl
psraw
lods
call
and
pop
jo
cmp
fldt
xchg
enter
daa
add
cld
test
or
and
adc
cmp
push
lcall
jmp
je
nop
or
stos
fcomps
pop
sbb
jns
mov
shrl
je
mov
xlat
push
jle
test
test
cld
mov
clc
fistpll
add
les
scas
pop
lods
jp
stc
pop
hlt
add
mov
cmpsb
jae
stc
ds
scas
ret
shlb
and
dec
pop
push
cmp
out
stos
loope
fbstp
shrb
shrl
lret
fadd
fwait
jmp
imul
loopne
aas
cmp
cmp
shl
lods
sub
xlat
dec
rorl
leave
sub
call
das
stos
push
add
mov
mov
insl
xchg
aad
push
popf
icebp
stc
out
mov
xchg
jl
xor
push
xchg
inc
dec
add
movsb
xor
mov
fdivrs
adc
mov
jno
cmc
mov
inc
adc
jle
bound
sbb
out
pusha
sub
lret
xor
es
sti
mov
mov
jne
sub
testb
pop
mov
pop
jb
mov
test
pop
popa
ljmp
xchg
jb
or
scas
sub
repnz
mov
insb
sub
jmp
cmp
dec
shrl
dec
push
or
test
sbb
inc
iret
or
lret
jl
insl
shl
push
cmp
insl
xor
je
sub
jne
frstor
ficoms
pop
sarb
inc
fwait
and
jno
int
sub
out
ret
jp
mov
pop
cwtl
mov
sar
hlt
sub
arpl
fildl
xlat
iret
push
sbb
inc
movsb
dec
sbb
jle
das
mov
imul
cmpsl
sbb
add
leave
xchg
dec
xchg
jno
daa
or
xor
bnd
jne
rclb
lret
test
push
ret
addl
pushf
lock
pushf
jns
jle
push
xorb
cld
ja
repz
out
dec
movsb
filds
add
ja
mov
xchg
out
leave
idivl
jp
cld
add
dec
call
sbb
js
dec
cmp
rcll
xchg
jl
xchg
sarl
cmp
jno
push
and
subl
ret
sahf
mov
add
scas
imul
or
aad
das
in
add
mov
xchg
sbb
sub
jecxz
imull
iret
enter
mov
or
fistps
pop
sbb
hlt
ljmp
cmp
dec
push
rcrb
loope
adc
adcl
mov
into
sub
inc
push
dec
jae
xor
enter
ret
sbb
pop
cmp
shll
repz
xor
stos
sahf
nop
mov
xor
and
aad
push
pushf
imul
sbbb
sbb
cli
push
mov
into
or
movsl
or
xor
mov
mov
sbb
sub
jb
repz
dec
das
into
inc
push
in
scas
jmp
push
cwtl
add
sahf
lret
cmc
add
inc
sbb
xchg
jecxz
mov
xchg
pop
cwtl
mov
scas
cltd
js
sub
stos
cmp
jb
add
sub
xor
aaa
or
arpl
mov
std
push
jnp
xchg
outsb
cmp
test
mov
cwtl
or
pusha
xor
cmp
bound
cmc
fwait
arpl
enter
call
sub
push
test
int
stc
xchg
div
and
mov
clc
cwtl
lcall
test
int
push
push
dec
add
and
mov
mov
mov
lds
jnp
in
sbb
aas
imul
sbbb
jl
cmp
xor
add
outsb
shlb
xor
out
push
inc
jae
jbe
aas
repnz
add
fcmovnu
jmp
push
loop
ret
dec
and
and
sub
xor
push
fnsave
mov
jmp
std
shlb
or
loop
add
js
push
jno,pn
in
and
ljmp
insl
mov
push
pop
pop
cmp
push
pop
jecxz
inc
in
vsubpd
jae
cmp
cmc
jl
jae
mov
arpl
push
xchg
enter
jp
outsb
mov
rorl
cvtps2pi
scas
cli
testb
pusha
pop
inc
or
cmpsb
pop
sub
add
inc
gs
jb
bnd
ja
jne
lods
std
pop
ret
mov
mov
mov
cltd
movsb
push
inc
idivb
shl
push
xacquire
pop
fnstenv
fstpt
cli
xor
dec
inc
inc
femms
outsb
mov
jbe
mov
fdivl
fisubrl
hlt
fidivs
sbb
dec
into
lea
and
call
out
dec
push
in
imul
das
jae
or
dec
jl
jae
aam
mov
mov
jbe
jb
inc
mov
icebp
or
adc
cli
cmc
mov
push
ret
rcll
les
and
inc
pcmpgtw
pop
lea
jg
ss
int
and
push
repz
in
scas
out
sub
push
pop
aaa
and
add
mov
xor
lods
imul
test
adc
or
adc
in
and
adc
shl
out
outsb
sarb
cmc
dec
push
jp
mov
ret
fidivrs
imul
pop
jae
jge
pop
mov
movsb
loopne
mov
or
xor
jno
sub
adc
insb
cmp
mov
fisubl
mov
test
in
xchg
push
pop
in
lret
and
ds
cmp
push
ret
or
lret
into
xchg
jmp
fidivrs
adc
ja
fdivrl
or
jg
or
sub
std
sub
mov
pop
jo
mov
inc
xchg
stos
cmp
xchg
jg
mov
data16
sahf
aas
aam
adc
test
push
int
push
addr16
lahf
dec
pop
loopne
xor
unpcklps
or
addr16
push
int3
add
xchg
int
pop
loope
cld
sub
cmp
xor
subl
adc
outsl
sub
pop
xor
scas
xchg
repnz
or
add
movsb
add
ret
ret
popf
cmpsl
shlb
mov
or
sbb
and
xchg
mov
jl
cmc
sub
mov
sub
test
js
push
sub
jbe
insb
mov
sbb
push
jo
test
jl
je
mov
popa
jp
imul
and
lock
dec
inc
pop
in
inc
das
jp
xchg
test
scas
xchg
mov
xchg
cmpsl
sub
sub
add
xchg
rolb
sahf
add
sub
xor
fsubs
loope
pop
fstp
pop
push
adc
pop
lret
push
repnz
jno
in
sbb
test
int3
push
fs
mov
mov
jp
cmp
or
mov
mov
enter
out
stc
cwtl
aaa
mov
leave
mov
lods
xchg
ja
jge
nop
pop
in
ds
sub
int3
push
or
push
aad
push
push
jno
jp
push
add
xchg
sub
scas
xor
xor
stos
addr16
clc
mov
push
inc
adc
fcmovne
fistps
or
sbb
push
add
and
push
fsub
cltd
jbe
arpl
cmpl
pushf
out
push
leave
pop
lods
aaa
sub
mov
lods
std
mov
push
sub
roll
xor
push
or
xlat
jne
vpand
inc
lea
inc
pop
mov
movsl
or
gs
stos
inc
add
insb
and
out
popf
xlat
outsb
mov
xor
test
mov
lods
lret
into
sub
inc
dec
xchg
jp
filds
push
shrb
dec
lods
push
test
adc
rcr
movsb
call
pop
jge
repnz
outsb
das
xor
cmp
jbe
pop
lds
jmp
inc
shl
rep
cs
jp
sbb
lret
out
fists
push
fdivs
sarb
adc
cmp
mov
xlat
pop
in
fld
pop
add
mov
clc
mov
adc
cmp
imul
jp
leave
cmp
out
adc
aam
notl
scas
andl
jmp
addr16
jns
popf
mov
in
add
sbb
inc
sub
repz
push
mov
cltd
jnp
cmpsl
mov
dec
addb
std
test
popa
pop
out
repz
test
jmp
lods
loopne
into
or
jl
mov
mov
pushf
cmpsl
js
inc
sar
call
add
mov
repz
test
xlat
xchg
inc
xlat
nop
fstp
xor
sub
add
loop
pop
movsb
and
and
lcall
int3
scas
inc
out
mov
push
jne
jns
adc
gs
ret
loopne
mov
cmp
mov
xchg
push
push
sub
xor
ss
lahf
in
mov
sbb
das
in
mov
jno
xchg
cwtl
mov
cmp
test
pop
andl
mov
shll
dec
pop
adc
out
inc
and
adc
popa
call
sbb
jmp
adc
ss
shll
and
and
jmp
sub
mov
adc
pop
lods
sub
out
sbb
pop
push
aam
in
sahf
xchg
jl
mov
inc
out
iret
fwait
mov
xchg
adc
inc
adc
sahf
dec
testl
jnp
adc
mov
jns
sub
push
jmp
lock
add
repnz
jne
mov
ret
fisttpll
jo
dec
rclb
testl
cmpsl
pop
cmp
push
jmp
cmp
in
cs
daa
push
out
stc
jo
or
inc
xchg
xchg
inc
out
test
inc
push
xchg
xor
shlb
add
xchg
sbb
ret
rcll
nop
xor
fs
enter
mov
testl
fs
rorb
sub
xor
push
out
stos
or
cs
dec
test
imul
mov
aad
mov
daa
or
je
rcll
adc
sbb
leave
jo
jno
stc
dec
xchg
dec
stc
cmpsl
stos
lahf
mov
imul
push
in
mov
loop
aaa
jle
test
stos
ds
add
fpatan
jg
loope
fs
testb
xchg
outsl
xlat
jae
jmp
addr16
xchg
int
iret
add
inc
adc
out
testb
lds
nop
xor
loop
lods
lock
and
out
or
dec
arpl
movsl
aas
sbb
cmpsl
xor
lods
fisubl
jbe
lret
and
cwtl
lock
sub
ret
push
fs
rcll
cld
cld
adc
cmp
jne
sbb
into
ljmp
int3
gs
jge
adc
mov
or
fmul
xor
scas
test
adcl
and
mov
imull
xlat
iret
shrb
movsb
out
dec
cmpsb
mov
dec
xor
mov
rcrl
mov
iret
stc
mov
xor
pushf
xchg
pushf
lret
shll
inc
push
push
fimuls
sub
cmp
and
icebp
sbb
into
and
mov
jo
fstpl
cmpsl
inc
cs
adc
cmpsl
mov
push
mov
sbb
inc
stc
fnsave
sub
icebp
adc
cmc
popa
in
pop
or
sub
lock
test
push
and
cmpsb
popf
and
and
mov
into
adc
inc
fnstsw
js
xlat
sub
aad
icebp
nop
and
in
ss
xchg
sub
and
lods
inc
xchg
scas
jmp
jge
rcrl
inc
cmp
lds
ret
jno
mov
movsb
shrl
mov
popa
and
insb
push
and
adc
test
movsl
int
jb
and
or
lret
sbbb
and
pop
mov
mulb
pop
xor
cmpsb
inc
mov
pop
mov
mov
xchg
cmp
ds
mov
dec
cld
aam
ret
lret
inc
mov
sub
mov
mov
xor
out
loopne
ret
sbb
inc
jbe
mov
pop
fs
jmp
inc
add
dec
dec
inc
dec
jge
test
jae
mov
int
jle
test
jmp
insl
or
dec
test
mov
add
xor
std
jmp
in
dec
movsb
movsl
shrl
jmp
pop
mov
daa
das
mov
pop
shll
and
push
or
cmp
sub
add
ds
dec
idivl
test
in
jo
loope
mov
mov
mov
jmp
cmp
inc
mov
adc
test
aad
jecxz
xor
inc
mov
addl
pop
mov
adc
mov
xor
lret
test
push
xor
popa
jo
add
fwait
cmp
mov
les
cmp
add
jp
ja
and
imul
inc
inc
rcr
icebp
pop
test
jnp
sahf
call
mov
pop
pop
dec
or
loope
inc
push
insl
call
push
dec
mov
inc
mov
insb
out
adc
xchg
cld
getsec
cmpsl
mov
sti
sub
in
popa
sub
xchg
mov
enter
inc
mov
lcall
mov
xlat
jno
xor
sbb
movsb
mov
cmp
xor
adc
flds
cmpsb
mov
mov
and
clc
push
push
or
es
inc
mov
mov
cmp
shr
inc
aaa
xchg
ljmp
push
adc
test
xor
dec
xchg
fwait
push
shrb
bound
jne
cli
cmp
and
mov
dec
pop
ret
outsb
cltd
data16
push
jbe
and
fdivs
jle
adc
jp
and
jns
or
shll
pop
imul
enter
popf
mov
shlb
fnsave
outsl
ljmp
popf
pop
fsubs
adc
je
push
cmpl
mov
jae
pop
fdivrs
or
nop
ficompl
sub
imul
fisubrs
inc
outsl
jbe
sbb
inc
inc
testl
sbb
in
cmpsb
mov
xlat
pop
mov
jecxz
jp
mov
gs
lret
add
xor
sub
hlt
mov
cli
arpl
ds
jbe
cmpsb
aad
mov
adc
ja
mov
sbb
dec
fbstp
clc
sbb
pop
es
mov
sub
divb
int
add
inc
popf
inc
sbb
jb
mov
mov
xchg
scas
lahf
jb
push
add
dec
fistl
cmp
cmp
pop
in
lcall
cs
call
sti
out
push
repz
popa
cmp
out
cmp
push
lret
adc
test
pop
mov
mov
xchg
std
js
push
sub
xchg
scas
jmp
sbb
popf
mov
addr16
les
inc
arpl
les
cli
divb
jns
icebp
xor
ficoml
aam
push
lods
mov
aaa
push
jbe
repnz
push
or
xchg
shll
jb
lods
ret
cmp
shll
idiv
cwtl
dec
dec
add
adc
iret
call
cmp
inc
std
das
pop
xchg
mov
add
inc
mov
nop
ss
xor
adc
xchg
int
push
movsb
adc
jne
ret
adc
mov
scas
cwtl
mov
jns
cmp
sub
dec
test
add
jle
and
fisttpll
imul
lcall
mov
adc
sbb
fnstenv
daa
sbb
sub
jg
lcall
nop
ret
mov
fbstp
lds
mov
fwait
inc
jbe
enter
jmp
xor
mov
stos
in
mov
add
xor
data16
and
dec
sahf
jge
enter
addl
scas
aad
push
add
inc
jl
pop
mov
xchg
lahf
dec
inc
daa
nop
mov
cmpsl
inc
incl
stc
pop
xchg
dec
pop
or
jl
out
lcall
cwtl
daa
cmpb
aaa
andb
sub
movsl
jle
and
xchg
rol
lret
mov
enter
arpl
stc
push
cmp
mov
jbe
jge
or
imul
push
shll
movb
lds
push
dec
fwait
ss
repnz
adc
insb
sbb
jnp
dec
jae
into
repz
dec
push
ret
push
sub
je
pusha
enter
scas
lds
jge
mov
lahf
adc
or
dec
adc
xor
call
mov
add
dec
fstl
cmpsl
mov
outsb
cmp
inc
sub
movsl
aad
cmp
loopne
push
bound
or
inc
pop
xchg
aam
cwtl
xchg
xchg
add
sbb
addr16
das
mov
mov
fmulp
inc
mov
xchg
pushf
xor
les
es
inc
cwtl
xlat
sub
out
xor
jge
leave
in
push
inc
mov
jnp
pop
jb
sarl
and
or
xchg
fmuls
add
fbstp
sub
test
inc
xor
pop
sahf
adc
jle
jp
movsb
lcall
sub
sbb
dec
and
pop
shll
inc
in
icebp
nop
nop
mov
scas
ret
or
cmp
mov
nop
aas
jb
sub
pop
xchg
sub
aam
xchg
xchg
pslld
ljmp
dec
popf
adcl
js
out
testb
sbb
cmp
xchg
pop
jae
mov
xlat
add
pop
gs
sub
lahf
test
fcmovnu
nop
inc
dec
stos
lcall
dec
pushf
repnz
lahf
sti
in
adc
jns
xor
push
jle
fisubl
jg
xchg
jnp
pop
pop
rcrb
add
leave
outsb
mov
repnz
and
arpl
sbb
and
pop
inc
pop
add
dec
cmc
mov
daa
xchg
clc
leave
pop
inc
outsl
cmpsl
push
cwtl
cmp
xlat
jle
dec
xchg
cwtl
fdivs
cli
sbb
xchg
mov
inc
jp
add
jp
pop
cmpsl
pop
fsub
push
fstps
or
adc
mov
test
imul
loopne
fisubl
push
out
mov
repnz
xchg
sub
or
jp
sbb
cmp
insl
xor
pusha
daa
iret
mov
or
into
out
cwtl
adc
movb
sub
mov
testl
scas
js
jo
imul
pop
xor
popf
lds
scas
pop
test
pop
int
nop
and
mov
fwait
sarl
fsubs
in
sbb
sahf
add
addr16
pushf
orb
cmp
int3
cmpsb
or
out
shrl
test
lea
and
add
push
jge
pop
add
imul
pop
jmp
aas
mov
mov
or
jns
pop
add
in
movsb
push
insb
lds
into
gs
sbb
push
loope
push
adc
push
and
pusha
dec
dec
dec
jecxz
jge
je
cltd
sub
adc
int3
scas
push
je
add
leave
jg
jo
inc
adc
mov
jg
subb
pop
mov
ss
cmpsb
sahf
cwtl
inc
adc
cld
movsb
mov
jno
dec
and
sti
incl
push
stc
sbb
icebp
mov
loopne
stos
das
movsb
jb
clc
xor
dec
ret
add
mov
cmp
andl
int
jo
xchg
les
mov
std
add
sbb
sahf
mov
jecxz
shrb
xor
cmpsb
stos
dec
aaa
in
add
pop
lahf
test
into
nopl
or
inc
ret
rcr
pusha
dec
stos
adc
adc
and
sbb
and
cltd
jb
adc
sub
jnp
cltd
mov
sbb
jmp
fwait
adc
inc
fbld
push
cld
inc
ret
mov
lds
inc
xor
pop
or
cmp
push
fmull
out
decl
scas
daa
push
stc
xchg
mov
cli
mov
fbld
rcrb
aad
xlat
sub
mov
test
xor
pop
push
cmc
jne
jecxz
sbb
sahf
mov
int
push
jbe
aam
stos
pop
loopne
and
data16
sbb
aam
fnsave
pop
rol
dec
xchg
sbb
repnz
inc
out
pop
aad
mov
mov
inc
addr16
fnsave
addl
stos
loop
pop
sub
push
icebp
cmp
mov
xchg
rclb
sub
in
lods
sbb
in
adc
xor
push
out
adc
test
push
dec
mov
int
fwait
adc
push
call
popa
and
test
popa
xor
dec
pop
out
push
mov
push
test
mov
shrb
cmp
fidivrl
lods
jns
dec
mov
push
cmp
mov
pop
imul
shll
pop
jbe
idivl
in
outsl
jle
rcr
jge
loop
pop
loop
cmp
xchg
rorl
or
push
push
jb
cld
addl
fistpll
in
dec
push
je
push
mov
loopne
cli
stos
jg
test
lock
push
pop
inc
out
jae
rcrb
xorl
inc
mov
jns
inc
sbb
sub
jmp
push
bound
loop
je
mov
aad
sbb
cmc
mov
sub
cmp
mov
sbb
outsb
cmpsl
add
pop
ucomiss
mov
jge
xchg
popa
jnp
cmc
adc
sub
mov
rorb
cmp
or
sbb
in
inc
pop
pop
lret
pop
jg
enter
test
cmp
int3
sahf
decl
jecxz
mov
adc
loop
mov
push
xchg
mov
lock
not
and
fnsave
adc
jnp
inc
stc
out
pop
insl
mov
cmp
sbb
mov
xchg
enter
fwait
js
adc
aam
cmpsb
pop
or
fimull
xchg
add
aad
xor
push
and
outsl
sbb
and
push
pop
into
dec
jbe
inc
outsb
push
or
adc
gs
sbb
xchg
xchg
xor
dec
ja
outsb
inc
add
and
or
adcl
push
dec
jne
ret
imul
jecxz
pop
dec
add
xor
xchg
enter
dec
pop
mov
pandn
icebp
testb
fldenv
scas
or
and
lea
push
mov
in
xchg
jg
inc
xor
jbe
mov
pop
jo
xchg
bound
jo
sahf
sub
xchg
add
jno
dec
pop
cltd
enter
jl
popf
andb
mov
sar
adc
inc
fcomps
pop
sahf
jmp
add
fisttps
std
test
xchg
mov
lcall
xor
sub
mov
jle
cmp
stos
xchg
test
in
and
fcomps
mov
xchg
sbb
mov
dec
xor
dec
sti
sbb
jbe
sahf
insl
fcomps
pop
es
inc
out
leave
leave
pop
xor
mov
mov
hlt
pop
mov
into
movb
in
sti
loop
or
adc
enter
jb
lahf
into
inc
or
lea
mov
out
repnz
ds
push
arpl
imul
stos
mov
cli
leave
aas
mov
outsb
pop
aam
cmp
add
adc
fcomps
or
mov
add
das
mov
add
outsb
in
scas
imul
popf
sbb
cmc
adc
xchg
stos
xchg
cmp
sub
inc
in
sub
pop
mov
mov
lcall
subb
cmp
pop
xchg
push
xor
fcmove
cmp
stc
push
int3
jbe
pop
add
mov
movsl
or
jno
sbb
xor
push
into
mov
ljmp
sbb
mov
ss
adcb
inc
cmp
movsb
int3
imul
dec
mov
lcall
dec
jae
and
icebp
fs
incb
or
xchg
push
pop
sub
lods
leave
add
les
add
das
xchg
add
lea
fldcw
in
xchg
ja
fcmovnb
mov
mov
repnz
add
push
icebp
popf
xchg
cmp
or
iret
and
and
test
rolb
aas
repz
out
push
ja
jno
cli
cmp
sub
mov
rorl
pop
int3
xorb
mov
jo
pop
sub
sar
push
mov
xchg
mov
movsb
add
mov
outsb
out
lret
addr16
xchg
imul
scas
mov
dec
push
mov
leave
das
mov
sarb
fldt
ds
push
xchg
gs
add
pop
adc
lods
or
and
pop
fadds
stos
adc
inc
lea
jge
arpl
and
jg
aam
popf
lcall
jno
pop
fwait
xchg
inc
inc
mov
sbb
and
enter
xchg
and
cli
sbb
int3
cmp
hlt
lea
pop
les
lods
xchg
movsl
mov
imul
inc
mov
sub
jl
stos
aad
out
push
test
jge
push
or
xor
aam
mov
sub
mov
and
cmpsb
add
xor
les
or
lods
inc
insb
mov
adc
test
mov
mov
nop
and
adc
cld
addr16
dec
sbbb
in
xor
movsb
inc
je
sub
mov
add
rcrl
call
or
mov
cmc
mov
fdivrl
dec
dec
out
imul
cld
jmp
mov
pop
imul
xor
sbb
dec
icebp
push
stos
mov
cmp
lcall
cwtl
ret
scas
mov
enter
lds
shlb
leave
cltd
in
mov
xor
adc
lods
jae
push
andb
adc
mov
pop
addr16
mov
decb
add
cmp
loopne
sub
fstpt
and
push
mov
xchg
push
push
and
push
cli
xor
sti
mov
aad
pop
pop
mov
fiadds
mov
xchg
and
jno
fisubl
test
xor
lahf
lahf
leave
or
jne
jbe
jl
fxch
lcall
repz
jle
push
ljmp
jge
pop
add
repz
insb
lods
sbbl
add
or
popf
add
cmpsb
repz
xor
jmp
mov
xchg
sub
adc
mov
adcb
addr16
into
push
or
mov
pop
dec
sti
pop
mov
mov
ds
mov
fisttpl
fistl
mov
mov
fistl
clc
push
dec
out
sub
mov
sarl
jl
sarl
addb
test
mov
xor
sbb
jb
hlt
rclb
enter
cmp
loope
xor
and
test
adc
jb
inc
out
dec
pop
shl
ret
xor
mov
addr16
out
iret
js
or
push
add
and
jnp
dec
arpl
pop
sahf
dec
ret
jne
jmp
sbb
xlat
aaa
sub
fldt
push
xchg
and
dec
in
and
aam
xor
orl
lahf
and
jmp
pop
add
push
pushf
dec
sbb
push
sub
xor
xlat
mov
jnp
imul
push
jno
test
pop
paddq
mov
jbe
cmp
ja
cwtl
imul
imul
cmpsb
xchg
je
nop
adc
stos
xor
cltd
mov
sahf
mov
sbb
jns
cmp
in
push
fwait
mull
je
or
sbb
cld
xchg
shlb
nop
cmp
jns
jne
fcoms
jp
xor
lods
pop
shlb
fnsaves
xchg
adc
psllw
mov
je
jmp
mov
mov
imul
movsb
imul
mov
sti
jbe
loope
cmpsl
push
or
dec
cmp
ret
rclb
mov
add
fstpl
add
pop
fcmovb
push
sub
outsb
bound
cmp
ja
lret
adc
cmp
mov
sbb
out
xchg
push
jmp
xor
int
or
enter
lods
in
add
cwtl
repnz
push
loope
sub
mov
fisubrl
cmp
add
lods
pop
dec
jns
mov
negb
and
test
repnz
cmp
aas
js
sub
jbe
mov
inc
jbe
sbb
in
add
cs
loope
push
adc
test
add
lock
inc
data16
xor
stos
imul
sbb
mov
std
outsl
rclb
dec
and
mov
and
xor
sub
fnsave
ja
daa
addr16
mov
mov
xchg
stc
daa
loope
fldcw
jno
popa
pop
add
mov
xlat
dec
pusha
addr16
rorl
loopne
xchg
mov
push
bound
pop
push
sub
sub
ret
aas
cmp
in
fwait
jl
sbb
fldl
hlt
push
fistl
jg
mov
push
fucomp
pop
inc
sub
lret
push
sbb
cmp
push
jle
inc
hlt
in
nop
les
cmp
ret
xor
rcr
loope
ficompl
jno
push
loopw
mov
dec
and
push
lret
dec
fwait
mov
inc
adc
shrl
bound
pusha
mov
xor
jo
sbb
mov
stos
mov
jg
js
xchg
sbb
mov
in
scas
adc
or
iret
mov
mov
subb
cmpsl
xor
mov
push
test
shl
movsl
adc
pop
xchg
pop
fcoml
xchg
out
lea
icebp
sti
subb
test
out
mov
add
adc
cmp
sbb
sub
frstor
into
xchg
sahf
dec
imull
jbe
insb
add
popf
repz
stc
cltd
jnp
push
sbb
inc
dec
mov
lcall
cvttps2pi
or
pop
aas
mov
lret
movsl
mov
cmp
or
and
sbb
outsb
enter
cld
stc
dec
test
movsl
daa
jecxz
out
enter
push
jecxz
subb
push
outsl
ljmp
lret
lcall
fiaddl
stos
add
negl
jbe
scas
pop
pop
out
outsb
xor
or
cmp
cmpsb
pop
aam
scas
mov
cmc
add
jne
push
imul
sub
das
push
nop
mov
adcl
and
mov
icebp
arpl
inc
iret
push
jmp
adcb
adc
jp
add
push
test
sub
fnstsw
pop
icebp
f2xm1
mov
mov
adc
mov
stos
mov
adc
push
mov
cli
sarl
adc
jne
adc
jge
stos
dec
dec
rcr
or
mov
push
lods
pop
les
mov
mov
pop
xchg
fcompl
scas
jb
fdivs
xchg
mov
jg
xor
fst
bound
pushf
push
add
fsubl
jmp
shr
adc
pop
inc
adc
fisttpl
sbb
push
push
into
xchg
ss
out
mov
inc
mov
lret
scas
add
xlat
out
jae
push
jecxz
add
fs
leave
mov
xchg
rorb
mov
fwait
push
xchg
imulb
pusha
inc
mov
rcrb
shr
ds
in
popa
out
clc
rorl
and
test
sbbl
jo
jne
repnz
lahf
dec
je
xchg
mov
imul
js
cmp
mov
ret
in
mov
fdiv
scas
pushf
shl
repz
push
inc
pop
pop
push
sbb
sub
rcr
xchg
shll
adc
mov
pop
lods
jle
adc
xchg
out
pop
jp
and
push
dec
adc
insb
inc
adc
mov
dec
daa
and
orb
adcl
jle
mov
fisubrl
sub
xchg
xchg
inc
and
add
mov
push
inc
out
or
add
sti
mov
daa
out
push
xor
repnz
imul
pop
sbb
push
shlb
icebp
jge
and
adc
cltd
lcall
jb
inc
jno
mov
sbb
mov
cmp
inc
cmp
fists
call
inc
cli
adc
push
add
aas
out
fcompl
xor
aas
pop
sahf
in
cli
in
sbb
mov
sbbb
cwtl
xor
push
mov
loope
js
rcr
movsl
insl
push
dec
movsb
or
push
fimull
sub
dec
aaa
sti
inc
push
mov
stos
aad
pop
sbb
test
push
push
push
xor
repnz
sub
fisubrs
arpl
mov
call
and
fisubs
xchg
outsb
sahf
jecxz
in
out
xor
imul
das
dec
into
cld
dec
popa
xor
loopne
js
or
das
ror
insl
stos
sbb
push
jmp
sbb
sbb
shlb
push
es
arpl
ds
jl
xor
sbb
sub
or
popl
je
rorl
in
gs
add
sarb
lahf
jecxz
push
negl
push
les
cmp
pop
inc
dec
dec
adc
push
sub
or
clc
or
xor
imul
mov
outsb
or
add
dec
lods
or
daa
call
rorb
sub
outsl
cmc
aaa
add
clc
ja
push
jo
push
ror
sub
xor
ja
adc
xor
inc
and
in
test
cmp
imul
shl
aad
mov
lock
fwait
xor
insl
cld
sbbl
or
out
stc
lods
dec
jno
lret
cmpsl
fbld
scas
inc
and
loope
inc
into
popa
mov
add
icebp
or
dec
loopne
mov
incl
push
adc
lcall
dec
dec
cmpsb
inc
dec
movsl
mov
les
sbb
call
push
xchg
pop
jge
or
push
sahf
insl
stc
andl
sahf
push
sub
push
or
add
out
scas
cld
mov
in
cli
into
cmp
in
imul
pop
scas
jge
inc
in
imul
push
jns
sbb
xchg
inc
jle
xor
add
das
push
jmp
ret
aaa
push
adc
popf
lret
xchg
leave
cmp
xchg
dec
or
loopne
jne
ret
pop
push
push
sub
out
pushf
xlat
pop
sbb
mov
dec
xor
xlat
inc
lahf
stos
jne
xlat
out
outsb
les
ror
out
xchg
in
shlb
xor
xor
jbe
clc
xor
pop
sbb
pop
insb
arpl
mov
cmp
pop
jl
inc
pop
mov
out
pushf
jl
inc
enter
inc
loope
mov
xchg
sub
inc
loop
sub
inc
sbb
cmp
test
xlat
xchg
or
loop
test
rcrb
mov
movups
mov
in
rcrb
lcall
ret
mov
mov
or
call
fldt
or
mov
pop
sub
push
lret
insb
jmp
xchg
pushf
cmp
mov
scas
pop
cld
aam
adc
mov
in
sub
fadd
jmp
loopne
fs
jge
add
in
mov
lods
mov
into
enter
xor
mov
fnstcw
push
jb
xchg
insl
sti
adc
cmp
in
test
sbb
adc
ret
sbb
xor
push
imul
shlb
xchg
pop
mov
test
sub
xor
fs
or
shrb
in
cmpsl
cmp
sbb
pushf
jb
jae
jnp
xchg
decb
inc
push
repnz
add
ja
fwait
into
cmp
repz
sub
lods
mov
xor
dec
dec
fs
mov
add
cmpsl
sub
lret
loop
add
dec
xlat
jg
fsubs
aas
jae
out
std
imul
daa
or
mov
notl
call
data16
rcrb
or
xchg
add
dec
es
lret
sbb
sbb
add
lret
insl
imul
test
orb
lods
clc
add
inc
idivl
jmp
lods
inc
sbb
ret
push
pop
dec
shlb
les
flds
and
pop
leave
or
cwtl
add
mov
push
push
movsl
xor
pop
cltd
enter
push
das
add
xor
iret
cli
dec
cs
xchg
call
and
fwait
adc
in
pop
cmp
lahf
iret
push
test
inc
add
pop
and
insb
fnsave
in
and
jbe
xchg
ret
iret
out
test
inc
int
mov
add
pushf
push
ret
mov
outsb
jmp
sub
iret
sahf
es
mov
pop
mov
jb
inc
orl
fcompl
mov
movsb
es
mov
cld
js
test
xchg
push
fisttps
insb
icebp
push
stc
aad
stos
jno
xchg
and
insb
adc
inc
pop
outsb
push
cmp
mov
inc
shlb
fwait
mov
clc
nop
or
lock
jbe
popf
dec
out
lea
aas
movsl
mov
mov
stos
mov
test
js
and
pop
clc
inc
sti
adc
xor
lods
lahf
dec
mov
test
movsb
std
mov
mov
stos
jge
jae
sbb
jmp
cmpsl
mull
shll
adc
xor
pop
mov
push
mov
test
push
mov
mov
mov
jg
jns
xor
ss
nop
or
paddsb
add
push
mov
jae
inc
unpcklps
and
mov
aad
or
mov
mov
decb
and
xchg
repnz
pop
inc
loopne
clc
outsl
pushf
sbb
cmp
rcr
and
push
mov
sti
push
les
inc
dec
ja
xchg
mov
cs
pushf
shll
adc
jl
pop
xor
sub
movsb
ret
aas
xchg
mov
sti
pop
inc
or
jl
adc
lahf
and
cmpsb
ret
in
xor
sub
xchg
inc
shr
dec
sti
hlt
and
xchg
neg
push
je
aaa
add
pop
hlt
mov
fbld
int3
pop
mov
mov
sbb
mov
ds
mov
mov
ret
jbe
jae
movsl
jns
push
lret
or
jno
xchg
aas
pop
movsl
ret
pop
gs
cmp
enter
lret
pop
arpl
mov
movsb
push
iret
mov
mov
or
imul
daa
cmp
cwtl
add
inc
mov
mov
ljmp
inc
pop
leave
shll
jne
xchg
adc
notb
and
mov
aaa
add
push
nop
adc
pop
out
mov
xchg
fdivl
mov
rorl
in
inc
mov
push
loopne
mov
xchg
or
cs
je
into
sbbb
cmc
outsl
movsl
xchg
pop
mov
fsts
lahf
ds
adc
rol
add
leave
mov
pop
jmp
sub
jle
es
pop
std
adc
sbb
xchg
xor
inc
rcl
test
ret
jb
pop
stos
xchg
hlt
inc
in
add
sbb
aad
call
das
xchg
jmp
lds
mov
sub
and
aam
fwait
mov
push
ljmp
iret
mov
aaa
mov
pushf
mov
sbb
in
jg
mov
mov
daa
mov
rol
insb
mov
insl
or
inc
or
pop
lcall
inc
out
jno
adc
jle
sub
xor
push
or
jns
jne
loopne
xor
shl
insb
pop
movsl
mov
mov
mov
enter
test
cmpsb
jecxz
inc
mov
jecxz
mov
add
adc
test
hlt
jne
adcb
and
out
pop
je
xor
ret
shrb
stos
call
in
mov
jno
jno
mov
rcrb
adc
mov
je
jae
ret
xor
xchg
shlb
out
xor
pop
jns
test
xchg
aaa
aad
fnstenv
mov
inc
popa
mov
xor
je
aam
and
jg
lods
dec
test
fldenv
pop
mov
push
fwait
mov
pop
mov
mov
lds
movsb
inc
mov
dec
adc
push
and
pop
addb
sub
add
push
add
es
pop
in
ds
stc
insl
mov
and
adc
and
xor
mov
repnz
push
mov
push
inc
mov
aam
fistpll
fs
in
sbb
sbb
jge
cmp
ret
rolb
sub
inc
push
test
cmp
jmp
jbe
dec
cmc
inc
mov
std
fwait
cli
push
aaa
insb
mov
pushf
enter
pop
lret
adc
outsb
push
rclb
pop
icebp
push
sbb
insb
std
sub
iret
clc
cmpsl
fcmovu
pop
nop
xlat
test
out
and
arpl
in
in
dec
mov
test
sahf
aad
ror
outsb
fcompl
andl
sarl
cmpsl
and
sbb
dec
mov
lret
xchg
enter
or
shlb
arpl
nop
lock
adc
lret
ljmp
dec
push
ds
adc
test
ret
cld
icebp
push
cmp
adc
mov
gs
or
xorb
inc
pop
mov
xor
shlb
jle
mov
push
cld
cld
dec
jp
or
jg
sub
bound
inc
data16
dec
mov
push
ja
fstps
aam
stos
lret
mov
cli
test
lret
add
sub
pop
sbb
test
in
add
inc
jmp
inc
cmp
sahf
jmp
push
aas
into
shlb
aam
cltd
adc
enter
adc
dec
scas
fs
lahf
jns
lock
out
je
inc
ja
push
mov
pop
fiadds
enter
push
xchg
outsl
int3
push
ds
out
pop
xor
cmpsl
dec
jl
pop
sub
push
leave
add
fiaddl
xor
and
mov
mov
xchg
jge
jl
fwait
sub
or
repnz
pushf
xchg
mov
or
out
jbe
mov
pop
fimuls
jbe
sub
inc
sub
fbld
enter
repnz
jne
js
outsl
and
sub
into
mov
mov
add
mov
cmc
push
mov
adc
mov
sahf
lods
sbb
sbb
dec
push
pop
in
ljmp
mov
ja
fxch
es
pop
pop
arpl
add
jno
mov
pop
jb
sub
test
inc
xchg
push
mov
mov
or
das
fs
mov
test
xchg
fxch
into
jge
into
mov
divl
push
rorb
je
inc
ja
pushf
mov
jmp
mov
and
sbb
mov
xor
sub
into
cld
out
sbb
rolb
mov
mov
xor
lea
pop
xchg
cltd
adc
jne
lea
popa
imul
cmpsl
push
jg
pop
sbb
sbb
jmp
in
cmp
jnp
add
pushf
es
gs
andl
mov
ljmp
push
js
mov
mov
imul
push
lock
cmp
push
mov
lea
xchg
fiadds
aas
add
pop
and
mov
clc
bound
sub
out
xlat
lahf
pop
jp
push
adc
or
push
punpcklbw
mov
fdivl
cmp
int3
xchg
insl
xchg
bnd
push
test
inc
fwait
leave
push
cltd
dec
pop
xchg
pop
jge
push
icebp
out
data16
sti
adcb
dec
mov
jae
push
sbb
nop
lahf
xor
mov
sub
insb
push
pop
ret
jmp
mov
movzwl
xlat
fstps
cmp
prefetch
add
or
jle
out
pusha
inc
jle
movl
into
ret
iret
sub
neg
cmp
insb
add
or
sbb
adc
decb
jle
test
hlt
add
pop
mov
inc
sub
pop
lret
mov
push
jno
out
mov
pop
shl
and
adc
cmpsl
stc
cmp
sbb
dec
sbb
fmuls
mov
jnp
sbb
inc
shlb
dec
add
mov
hlt
pushf
add
and
mov
sbb
add
pop
lcall
jmp
fldt
sub
inc
bound
mov
pop
rcll
jmp
push
xchg
lds
aam
mov
adc
mov
sub
adc
mov
out
xchg
mov
in
cmp
subl
addl
xchg
stos
jo
push
mov
sub
push
xlat
push
scas
rol
leave
pop
ret
xchg
jb
pop
adc
outsb
shrl
popa
xor
mulb
ret
mov
dec
rolb
in
lcall
ret
outsl
test
rolb
sbb
bound
jl
jb
inc
jno
adc
sub
sub
cmp
pop
fsubrs
lahf
mov
out
repnz
fucomip
ds
sbb
ss
cmp
test
fstps
cmpsl
bound
mov
dec
add
lret
aas
stc
pop
sub
sahf
cmp
in
aaa
leave
pop
add
test
xlat
imul
dec
lahf
sbbl
push
push
inc
sub
push
push
sub
test
lea
pusha
dec
insl
sub
pop
mov
out
gs
loope
andl
push
cli
call
test
cmp
push
in
fisubs
aad
mov
mov
insl
sbb
test
in
xchg
push
mov
xor
inc
push
mov
pop
adc
in
adc
repnz
cmp
mov
addr16
rcl
fmulp
or
pop
data16
aad
add
sarb
test
jne
or
push
fstpl
push
add
mov
imul
mov
ljmp
mov
vpunpcklwd
out
cs
push
jne
cmp
cld
pop
fnsave
inc
mov
jg
int
out
bound
push
xchg
popf
out
mov
out
sub
jnp
fidivl
clc
cmp
or
inc
jbe
push
mov
cmpsl
enter
gs
imul
inc
push
ljmp
xor
out
pop
jne
sub
cmp
mov
or
out
stos
into
dec
sarb
shrl
sub
xor
lock
popa
or
add
dec
out
add
lret
aam
push
loope
nop
push
nop
scas
dec
ret
jmp
rol
adc
cmpsb
and
ljmp
shrl
cmpsl
xor
push
lea
pop
mov
imul
push
sarl
je
sbb
mov
into
xchg
mov
fisttpl
sbb
cmpsl
inc
jno
leave
dec
pop
inc
sub
fistpll
push
popa
cmp
lret
mov
outsb
test
or
lods
jne
icebp
jb
mov
les
cwtl
rcrl
int3
lds
push
lahf
out
fs
popf
push
jle
fimuls
sub
push
xchg
ret
clc
pop
pop
dec
xchg
xor
xor
jbe
ficoml
and
scas
leave
repz
andnps
icebp
jecxz
mov
cmpsb
mov
imul
data16
dec
push
xchg
or
xchg
outsl
dec
push
les
js
dec
mov
std
rorl
pusha
mov
pop
rep
pop
or
daa
push
insl
push
movsl
jg
mov
mov
dec
test
cmp
outsl
inc
inc
and
lods
int3
es
dec
je
jmp
xor
ret
xchg
jbe
adc
cmp
out
xchg
es
push
lods
iret
dec
lea
xor
es
subl
lods
push
mov
inc
mov
jne
stc
js
out
popf
jbe
xchg
sbbb
into
jo
ficompl
adc
pop
iret
pop
xchg
push
push
loopne
sub
test
jg
add
adc
imul
and
stc
and
add
outsb
mov
xor
push
sub
and
loope
mov
adc
jle
mov
pop
mov
jle
aaa
xchg
mov
cmp
mov
cli
jo
add
gs
aam
xchg
pop
inc
bswap
sahf
cmp
lret
mov
stos
cmp
dec
mov
arpl
and
adc
pop
dec
iret
popa
sub
loop
cmp
pop
inc
jmp
xchg
pop
ds
jne
cmp
sub
fwait
jns
lret
inc
pop
push
idivb
adc
sahf
xlat
daa
pop
in
push
cmpsb
movsl
insl
movsb
imul
jge
cwtl
xor
jmp
sbb
pop
lea
bound
iret
or
add
mov
mov
lods
outsb
es
lahf
sbb
pop
jnp
call
pop
stos
inc
xor
add
and
jno
jbe
sti
test
daa
push
or
xor
lret
daa
insl
fildll
movsl
scas
and
cmc
mov
dec
fsubrl
mov
xor
xchg
xor
outsb
cmp
inc
mov
je
popf
imul
sub
sub
in
imul
or
addr16
jbe
out
xor
sub
stc
mov
mov
decb
mov
and
mov
jle
xor
sub
mov
and
leave
mov
dec
mov
mov
and
xchg
or
ja
les
cwtl
imul
fimull
icebp
cmpb
movb
dec
arpl
jae
dec
xchg
jge
xor
imul
pop
or
rcrl
mov
pop
xchg
add
mov
pop
and
xchg
cmpl
mov
or
outsl
movsl
sti
in
inc
push
push
cld
orb
adc
mov
rorl
divb
pop
sbb
jmp
bound
lods
addb
and
fdivr
fsubrp
repnz
mov
jp
fistps
fbld
lds
adc
pop
mov
aam
mov
xchg
lock
mov
jb
addr16
stos
push
mov
fildll
mov
and
sahf
test
mov
test
xor
stos
jg
insb
push
jne
pop
pop
jae
int
sub
mov
stos
mov
sti
xchg
sub
loopne
mov
js
push
push
push
js
sbb
push
arpl
pusha
xor
loop
pop
sbb
arpl
pop
aas
mov
cmpsb
jns
sbb
mov
push
mov
inc
es
mov
or
pop
dec
lds
or
mov
lock
jecxz
shlb
les
sub
adc
push
jge
icebp
sbb
inc
shrl
ret
out
mov
shrl
mov
shrl
xor
scas
pop
in
push
xor
aad
arpl
cmp
and
stos
mov
aas
jl
imulb
test
lods
pop
xchg
pop
mov
mov
sbb
into
scas
fs
mov
pop
xchg
pop
sar
dec
inc
ret
aad
xorl
loope
iret
shll
inc
test
sbb
sbb
xchg
sarl
aaa
sbb
iret
sub
and
mov
out
jg
cs
daa
pop
bound
lahf
ja
adc
cmp
cltd
cmp
mov
mov
scas
pop
pop
imull
popa
jnp
pop
push
jecxz
pop
dec
insl
push
sub
pop
ljmp
sbb
jnp
xchg
sub
mov
dec
and
test
test
jmp
pop
mov
ja
loope
inc
test
aaa
jbe
mov
int3
add
divb
sahf
mov
cmp
xchg
lret
push
lock
sub
add
cwtl
push
das
movsb
movsb
movsl
mov
mov
adc
push
lods
jnp
out
mov
aaa
jne
into
dec
jmp
mov
das
stos
mov
jle
shll
insb
nop
add
and
mov
mov
pusha
xor
add
mov
outsb
popa
lods
decb
insl
je
push
jl
push
cmc
addb
or
cltd
aam
out
mov
pop
lods
in
out
movsb
inc
pop
popl
mov
cs
in
add
icebp
jae
mov
hlt
inc
addb
scas
scas
filds
popf
or
cmp
xor
adc
adc
dec
ljmp
call
lahf
cs
imul
lcall
cmp
leave
xor
js
cli
out
icebp
fs
lock
push
dec
sub
ljmp
cli
push
std
add
hlt
mov
nop
inc
fs
movsl
aas
mov
dec
es
dec
xor
adc
repz
rcll
nop
push
push
mov
icebp
fisubs
inc
xchg
jle
pop
push
fwait
in
sub
sub
aas
decl
cmp
in
jnp
inc
popa
imul
mov
cld
pop
mov
jns
or
jl
int3
xchg
sbb
xchg
mov
pop
scas
test
fisubrs
cmp
pop
pop
ss
test
std
pop
nop
sbb
mov
jle
jl
mov
cli
movsb
shll
mov
data16
or
xchg
std
mov
mov
aaa
popf
shll
std
adc
pushf
add
sbb
cmc
push
scas
pop
movsl
mov
jecxz
and
xor
stc
sbb
add
fsub
and
daa
xlat
scas
movsl
ds
mov
sarl
pop
lods
enter
mov
and
push
dec
mov
sbb
subl
sbb
adc
int3
ds
shrl
faddp
test
cs
mov
cmp
imul
out
inc
shll
daa
lock
add
pop
sub
arpl
xor
and
popa
and
and
imul
and
mov
or
mov
jecxz
mov
add
shlb
fidivrl
das
xlat
sbb
lock
sub
mov
daa
test
icebp
xchg
sbb
mov
and
hlt
cmp
sti
push
cld
sub
and
fldl
lcall
repz
or
rcrl
cmp
xchg
js
cmp
fcmovne
pop
into
movsl
popa
push
enter
cmc
test
mov
mov
xchg
out
add
loop
insb
outsb
mov
insl
out
inc
mov
rolb
pop
nop
pop
ret
shll
xor
push
cmp
lds
mov
pop
fs
pop
mov
adc
out
ljmp
mov
push
xor
sbb
out
cld
sbbb
sbb
sahf
rdmsr
adc
dec
jle
mov
fidivrl
sub
cmp
repnz
sbb
xchg
rorl
in
push
insl
aam
lock
and
rorl
daa
aaa
pop
cmp
push
mov
inc
lock
mov
hlt
imul
mov
mov
push
stos
dec
mov
sbb
mov
and
or
int
and
jae
out
mov
pop
inc
jns
in
in
pop
mov
lcall
lock
dec
add
or
mov
xor
mov
nop
out
push
mov
dec
movb
ret
inc
pop
aaa
mov
ret
pop
enter
jle
dec
mov
pop
cmpl
dec
cmp
jae
pop
int3
in
dec
dec
addr16
xor
in
movsb
subl
push
adc
cmc
add
jp
add
push
stc
jnp
pop
sub
lcall
or
or
ljmp
movsb
mov
jns
roll
call
lock
mov
popf
pop
stc
scas
fs
jb
bound
pop
inc
enter
add
imul
add
adc
loope
mov
pop
jle
ret
loopne
sbb
pop
clc
icebp
repz
fcomip
xor
stos
ret
outsl
in
jno
inc
int3
shl
out
or
sbb
int3
push
cwtl
mov
rcll
stos
inc
add
xlat
and
pop
jb
cld
je
mov
push
stos
mov
sbb
mov
gs
pop
mov
mov
dec
jge
dec
int3
std
adc
jno
ja
mov
adc
into
ds
inc
fisubrl
fadds
test
cmp
in
fsincos
js,pn
mov
out
sub
mov
das
subb
addr16
stos
mov
ljmp
and
insl
push
inc
orb
sbb
popf
stc
mulb
subb
nop
inc
add
cmp
xchg
mov
cmc
loop
imul
jp
sbb
fs
cmp
push
cmp
arpl
mov
imul
sub
push
insl
shlb
popa
xchg
enter
jp
into
je
and
shrl
out
jg
je
xchg
add
mov
cwtl
test
mov
add
dec
xorb
addl
sbb
jp
imul
jle
out
inc
shll
mov
adc
mov
or
add
clc
addr16
lea
mov
mov
xchg
pop
in
aad
sbb
cltd
sbb
jmp
std
roll
mov
lcall
lahf
xorl
or
stos
push
xor
inc
jp
sub
adc
fiaddl
daa
orb
xchg
out
sub
andl
fistpll
aam
xlat
das
cmp
add
jle
cltd
es
subl
push
jbe
mov
cmpsb
test
jmp
test
out
jp
stos
gs
notb
daa
pop
es
xchg
pop
fsubrl
and
dec
loopne
invd
mov
xchg
out
les
dec
call
add
lea
daa
fdivrl
xchg
mov
mov
jecxz
mov
xchg
xchg
mov
and
sub
pop
fisubrs
int3
loopne
xor
testb
inc
ja
std
jae
xchg
pop
add
mull
adc
adc
sub
sbb
loop
jg
xor
lock
adc
lods
cwtl
jge
and
mov
ds
xchg
cwtl
mov
xor
shrd
gs
jle
cmp
jo
pop
mov
xchg
dec
jne
sbb
adc
sub
insl
mov
imul
push
xchg
ja
push
out
movsb
pop
sbb
out
test
lret
movaps
jg
mov
fyl2x
in
loope
lcall
sub
xchg
mov
dec
stos
jmp
les
in
jb
inc
clc
popa
inc
xlat
call
test
pop
mov
jno
fdiv
fldcw
adc
mov
xchg
shrl
hlt
ud0
and
mov
pop
or
sbb
test
xchg
nop
or
dec
inc
pop
loop
jle
ret
das
test
cli
and
xchg
push
stc
inc
test
sti
outsb
incl
add
sbb
mov
adc
test
and
push
lcall
mov
push
sub
xor
fisubrs
push
xchg
in
sti
jb
rolb
push
mov
add
push
mov
scas
push
enter
stos
shll
xchg
movsl
add
mov
out
cmp
mov
fisttpll
dec
cmp
push
mov
fnstsw
in
jb
jmp
sub
cltd
jecxz
push
dec
push
fisttpll
negb
sahf
xchg
mov
out
dec
mov
mov
push
ret
sub
adc
bound
rorl
fidivrl
inc
les
pop
in
pop
pop
mov
std
enter
imul
leave
fsub
mov
clc
movsb
sub
mov
pushf
adc
push
push
lock
xor
outsl
cltd
les
xchg
mov
add
fstl
and
cltd
jae
std
mov
mov
insl
clc
cltd
rclb
fsubrl
adc
inc
gs
icebp
or
mov
inc
imul
insl
xor
cs
push
aad
fcoml
aam
inc
and
sbb
add
jb
cwtl
aaa
lods
jb
out
ljmp
dec
xlat
and
aas
movsl
push
sbb
icebp
add
xchg
mov
sbb
sbb
pop
add
dec
jg
loopne
ja
insb
mov
mov
std
adc
xor
inc
push
xor
pusha
inc
push
cmc
or
out
adc
or
inc
shll
mov
std
sbb
push
jle
adc
test
push
cwtl
jge
fisubs
loop
bound
lret
mov
popa
cmpb
xlat
insl
xchg
xor
mov
out
dec
cmp
ja
mov
jo
push
fdivrl
movsb
mov
push
sbb
ret
sub
add
jle
or
mov
jnp
stc
dec
int
cli
pop
adc
enter
daa
test
cs
push
lret
cld
adc
cmp
xchg
jecxz
cld
dec
inc
xchg
xchg
enter
xchg
fwait
lret
mov
cmp
fisttpll
pop
push
cmp
add
ret
test
mov
cli
cmp
in
int
push
jle
mulb
pusha
dec
add
repz
leave
fwait
adc
cltd
and
lds
mov
outsb
js
sbb
push
push
and
outsb
xor
pop
mov
dec
jl
jbe
mov
inc
xor
mov
push
in
sbb
cmp
push
daa
es
arpl
rcl
stos
outsb
test
pop
scas
xor
mov
test
lea
add
cmp
in
jbe
fwait
dec
gs
add
sar
mov
xchg
sub
mov
in
les
dec
adc
insb
iret
imul
out
ret
mov
movsl
adc
lahf
and
in
pop
pop
stos
dec
or
popa
loop
add
jb
dec
loop
mov
lcall
pop
and
or
jp
jle
sahf
fwait
sub
or
btc
xor
frstor
mov
push
cmpsl
inc
repz
mov
or
and
stc
cmp
mov
nop
dec
jb
loope
xor
push
sbb
fadds
mov
mov
std
dec
inc
dec
sub
insl
jl
pop
push
mov
cmpl
sub
cld
lea
or
adc
insb
jne
int3
mov
in
dec
das
inc
into
insl
jno
xor
sbb
ret
pop
call
add
test
imull
popa
xchg
icebp
outsb
fimuls
sub
data16
out
jp
mov
pop
daa
mov
xchg
sbb
jg
pop
out
cmc
sbb
and
xchg
xchg
cmpsl
push
jp
icebp
into
jbe
or
or
data16
xchg
mov
cmp
cmp
dec
xchg
cmp
lds
add
loop
ds
loop
push
jp
out
xchg
mov
out
stos
stos
fsub
stos
pop
cmp
push
sub
cmp
lret
in
jno
out
mov
sbb
cli
out
fists
stos
pusha
jge
pop
data16
repz
add
jnp
dec
xchg
sub
into
add
mov
mov
inc
sbb
insl
dec
fldt
out
stos
icebp
xorb
adc
aad
fldcw
push
lret
add
stos
push
gs
adc
push
rcl
xchg
push
sub
icebp
sahf
mov
adc
sti
movsl
xor
mov
or
cmc
xor
adc
mov
xchg
mov
or
mov
ss
pop
sub
inc
cltd
adc
and
scas
shlb
sahf
daa
jb
add
sub
out
lea
adc
cmp
jo
nop
sbb
andb
pop
dec
push
push
and
pop
imul
jbe
daa
cmc
shrl
adc
fadd
out
imul
mov
and
mov
mov
imul
jae
jo
sarl
xchg
inc
mov
popf
or
sahf
call
lock
stos
jns,pn
xorb
fsts
mov
add
bound
into
mov
out
jle
rorb
push
push
cmpsb
movsl
scas
cmp
cmp
adc
test
mov
outsb
or
or
mov
push
dec
mov
jp
mov
mov
adc
and
scas
sub
andb
in
rol
push
sub
mov
jge,pn
push
shr
push
cmp
push
pop
adc
repz
dec
mov
psubusw
sub
rcr
push
inc
sbb
lods
and
mov
loop
push
movsb
mov
sub
push
cmp
or
pop
sub
lahf
test
filds
lods
cld
sub
sbb
mov
jmp
push
arpl
add
mov
lcall
push
sub
ret
fstpt
shlb
and
cltd
xlat
mov
push
lret
xor
rcrl
jnp
cli
sahf
and
cmp
xchg
jo
dec
dec
jg
push
sti
sbb
push
in
pop
sbb
push
push
push
ja
fyl2x
insb
sbb
xor
xor
push
ja
mov
cmp
or
xor
cltd
pop
int
xchg
int3
jl
dec
outsl
pushf
sub
iret
out
icebp
test
dec
lods
int
push
popa
hlt
add
andl
pushf
mov
cs
fdivp
std
cmp
or
popf
fwait
call
mov
push
push
push
loop
xchg
std
cmp
xor
incb
pop
mov
outsl
fisubrl
fcomi
and
dec
inc
scas
rep
xor
dec
clc
test
test
xor
add
daa
sbb
mov
stos
lds
fs
sbb
scas
ss
inc
aam
movsl
fcompl
inc
mov
xchg
sbb
push
lock
xchg
in
mov
pop
rolb
fnstcw
mov
sub
js
xchg
cmp
sub
jg
cs
or
mov
pop
cmpl
das
xchg
pusha
ret
jmp
adc
ror
push
bound
iret
dec
adc
xchg
jmp
jnp
mov
icebp
xchg
push
mov
test
jp
inc
fiaddl
sti
in
cwtl
movsl
mov
stos
or
jl
lods
push
mov
repz
sub
and
rorl
push
or
pop
dec
mov
inc
stos
add
sbb
mov
dec
mov
pop
std
or
fmulp
adc
pusha
xchg
cld
sub
or
out
into
cwtl
in
movl
lret
mov
or
mov
mov
fldl
test
mov
jbe
test
repz
inc
xchg
cmp
mov
dec
cmp
and
into
pop
cmpsl
sub
cltd
jle
sbb
jo
inc
push
pop
cwtl
jl
mov
jae
mov
sub
daa
jbe
mov
bound
jmp
jbe
ret
lahf
stos
ror
lock
mov
sub
insl
xor
es
adc
sub
adc
push
or
pusha
ljmp
dec
push
fs
sub
lods
cmp
push
sub
xchg
aas
inc
and
mov
sbb
xchg
adc
fildl
mov
mov
stc
arpl
fadds
lret
gs
pop
cmc
sub
imul
cwtl
sbb
lea
cmp
sbb
lcall
mov
xchg
jmp
stos
loopne
push
sti
xor
hlt
sub
sti
pusha
stos
pop
sub
dec
jle
add
mov
inc
int3
gs
popa
inc
mov
cmp
mov
dec
adc
xor
add
push
in
push
xchg
sub
testl
js
loopne
sub
mov
push
notb
xchg
bound
cli
cmp
popf
mov
or
lock
cld
xchg
sub
jge
push
das
sbb
cwtl
addr16
fnstcw
push
xchg
inc
int3
xor
mov
stos
xchg
lods
adc
jge
jge
push
cmp
daa
adc
jle
and
pop
push
mov
cmpsl
and
jmp
mov
xchg
fiaddl
subl
dec
xchg
add
outsb
jp
push
and
into
xchg
ja
out
xor
js
shr
and
jmp
sub
xchg
inc
inc
in
add
adc
fs
lods
jb
das
inc
rcrl
or
movsb
inc
dec
sub
test
lret
ret
mov
out
lret
adc
cmp
dec
cmp
test
sub
fisubl
jo
ret
rclb
out
fisttpl
pushf
sti
mov
dec
xchg
jno
mov
push
popf
add
mov
das
pop
enter
leave
push
sub
sub
dec
xchg
test
pop
xor
mov
xor
lods
repz
fsubr
inc
mov
aaa
xor
movsl
dec
add
add
sub
push
mov
mov
mov
inc
or
flds
cmpxchg
dec
xchg
mov
imul
cld
aas
imul
jmp
lds
lods
ficomps
mov
fs
cmp
mov
mov
ret
mov
cmp
pop
xlat
loop
mov
dec
jmp
mov
es
sbbl
and
cs
iret
cltd
leave
inc
pop
lret
mov
arpl
stos
out
inc
mov
xor
fnstenv
xchg
insb
dec
ffree
loope
lahf
jns
adc
ss
out
jae
add
push
mov
jnp
nop
ds
fimull
jmp
jnp
negb
sar
fndisi(8087
add
inc
test
aad
dec
push
iret
lea
dec
fwait
shrl
ljmp
xchg
or
rcll
test
and
pop
mov
adc
outsl
sarl
out
add
out
divb
test
adc
test
xchg
fmuls
inc
jge
cmc
mov
add
orb
jnp
adc
pop
add
sub
stos
jle
push
xchg
out
leave
outsb
pop
add
ss
or
popf
in
inc
jnp
test
add
inc
sub
lds
in
cs
push
add
aad
stos
xor
out
fs
icebp
mov
jnp
sub
mov
lods
add
ror
pop
test
ds
out
xor
fwait
arpl
sbb
outsl
sbb
push
in
dec
jmp
or
push
add
fistpl
mov
cmp
sbb
lea
loop
and
lahf
or
ja
xor
ds
jge
sub
les
sbb
lock
and
mov
icebp
cwtl
mov
sahf
fisttpl
das
aas
jl
fsubs
stos
insl
shll
pop
push
test
push
pop
test
xchg
add
mov
mov
push
scas
mov
mov
ja
cmp
cs
mov
push
adc
push
xchg
xor
jbe
orb
jbe
sbb
decl
add
cmp
fisubl
dec
cli
ja
inc
pop
xchg
loopne
pop
arpl
lret
stos
sub
jle
push
push
or
pop
jge
cmp
cwtl
addr16
movsl
sbb
negb
cmp
push
les
push
fimull
jl
push
sarl
add
out
addr16
sub
imul
mov
notb
sub
or
add
or
adc
js
and
es
popf
shll
mov
jbe
xchg
ja
out
pop
add
xlat
mov
xchg
cltd
xor
inc
xor
out
cmpsb
int
hlt
jno
sbb
adc
outsl
jno
jno
and
hlt
inc
cwtl
push
shll
xchg
xor
bound
xor
insb
xlat
push
xchg
les
adc
cmp
or
insb
jp
dec
adc
pusha
stc
push
js
lock
mov
pop
in
pop
dec
ret
in
mov
out
xor
jl
out
dec
repnz
in
or
pop
inc
pusha
cmp
mov
sub
push
dec
mov
fcoml
lods
pop
and
loop
subl
xchg
xor
xor
mov
or
mov
test
sbbb
mov
filds
ljmp
loop
or
jg
jle
andl
in
test
or
stos
andb
sub
fdivrp
jle
or
sbb
pop
inc
add
adc
mov
scas
nop
outsb
insl
inc
popa
sub
pushl
and
jne
lea
dec
data16
jge
in
in
inc
test
movsl
pop
test
add
mov
pop
jmp
inc
or
mov
cmpsb
cmp
dec
in
pop
mov
cmp
stos
arpl
or
div
mov
add
test
cmp
jno
aaa
xor
lods
bound
pop
dec
scas
pop
mov
xchg
popf
scas
jecxz
cltd
cmc
push
pop
add
xor
sub
pusha
jge
push
cmp
lcall
lcall
cmp
call
add
int3
loopne
insl
cld
cld
and
push
fldl
cs
pop
stc
lcall
adc
push
int
lock
jmp
stos
cmp
xor
push
mov
rcr
pusha
insl
or
imul
ljmp
adc
push
pop
js
cmp
sbb
jo
xor
mov
in
cli
stos
xchg
in
leave
mov
pop
rcl
sbb
popl
push
jae
mov
xor
incb
push
inc
xchg
adc
pop
mov
stos
cmpsb
sbb
add
int
jbe
mov
cmp
cmp
les
push
aas
jae
add
push
sti
xchg
adc
sahf
cmp
movsb
mov
int3
dec
xor
jno
cli
cld
mov
in
testb
pop
cmpsb
mov
in
loope
int3
sub
jb
mov
fisttps
add
rcrl
fistl
push
jp
movsb
cltd
or
repnz
adc
into
inc
add
sub
in
push
mov
imul
push
push
ret
dec
test
mov
xorb
sub
in
daa
jb
dec
lahf
mov
shlb
dec
and
sbb
or
scas
push
int
adc
shll
ljmp
jg
pop
mov
jns
rcrb
lods
push
aam
outsb
mov
nop
fdivrl
repnz
or
lock
enter
fisttpll
aad
rorb
lods
mov
aad
sub
test
and
jne
xor
imull
xor
add
mov
dec
xchg
inc
inc
sbb
inc
addr16
sbb
gs
cmp
loope
hlt
enter
adc
cmpl
pop
cmpsb
add
adc
adc
hlt
inc
jmp
and
mulb
push
mov
cmp
test
mov
aam
enter
std
mov
sbb
into
stos
repnz
inc
arpl
mov
push
and
pusha
and
int3
mov
mov
lret
xchg
dec
movsb
lret
sub
lret
int
scas
aam
dec
addb
jl
sahf
dec
js
call
pop
inc
and
fwait
sub
mov
out
jnp
add
xor
cli
push
push
andb
shr
fadds
lds
adc
sbb
out
mov
sbb
push
test
cmpsb
getsec
mov
icebp
rcrw
push
pop
mov
adc
divb
sarb
aam
nop
outsl
in
sub
cmc
sub
lahf
movsl
movsb
push
push
pop
lret
call
movsl
push
cmp
push
out
inc
mov
mov
cmpl
adc
std
pop
sbb
in
pop
sub
data16
clc
iret
add
sub
icebp
pop
dec
lea
jne,pt
dec
lahf
ds
xchg
sbb
in
mov
jmp
lahf
fwait
sbbl
mov
sti
cwtl
inc
lods
inc
shrl
je
stos
pcmpeqd
int3
loopne
sub
jae
arpl
cmp
mov
mov
add
aaa
adc
ja
inc
jae
cli
es
cmpl
cli
call
push
xchg
ret
lock
pop
stc
inc
mov
add
cmp
add
mov
xchg
push
dec
push
push
mov
add
shl
fst
lods
cmpb
ds
cmpb
xchg
fadds
cli
inc
sahf
in
mov
inc
lret
out
ja
or
xchg
pop
sbb
xor
mov
or
add
add
sti
cmp
in
push
in
jns
decl
mov
lret
inc
sarl
adc
pop
scas
loope
dec
fisubrl
cmp
or
mov
jbe
out
or
mov
xchg
sub
cwtl
jne
xchg
ret
subl
jne
addr16
sahf
cmpsl
xchg
push
pop
cmp
pop
fdivrs
leave
fs
xchg
push
mov
xlat
mov
mov
cmpsl
jg
jp
aas
or
loope
push
or
addb
das
inc
fcompl
pop
jno
cli
imul
outsl
lret
and
sti
sbb
jl
loopne
imul
fwait
sbb
lret
push
popf
inc
arpl
adc
fs
inc
pop
popa
mov
test
outsb
sbb
inc
daa
push
aam
xchg
sahf
jp
fdivr
daa
push
es
sbb
xor
mov
decb
test
jp
ja
call
inc
es
jp
push
mov
call
sbb
mov
mov
dec
mov
das
sub
lcall
lret
popa
lcallw
jne
mov
jb
fmuls
fmuls
sbb
xor
cmpsb
pop
sub
not
xor
faddl
adc
inc
ficoms
loop
and
lock
nop
inc
fmul
mov
pop
cmc
aas
jge
out
cmpsl
cmp
mov
scas
cmp
sbb
scas
pop
jle
insb
jne
mov
mov
arpl
shlb
pop
mov
pop
icebp
subl
adc
mov
jbe
jne
repz
lods
push
rcrl
loopne
nop
and
into
add
mov
enter
jbe
sub
cmp
cltd
pop
test
xchg
lods
sti
and
cmp
dec
cmp
jl
xchg
xor
repnz
mov
push
or
shl
fsubrl
sub
fidivs
or
sub
out
fidivl
std
dec
insl
aad
pop
sub
xlat
pop
in
mov
int
repnz
xchg
push
fmul
inc
loope
inc
cmovbe
popa
jae
andb
dec
xchg
popf
xor
loope
jns
pop
stos
in
pop
sub
add
xchg
push
jle
jbe
xchg
repnz
shlb
pop
js
adc
jecxz
scas
imul
jle
sbb
inc
and
cli
mov
cmpsb
push
mov
int3
sbb
inc
fbld
fsubr
mov
xor
sbb
adc
scas
int3
pop
push
and
sbb
mov
jb
xlat
inc
aas
jns
dec
jo
je
sar
inc
outsb
inc
mov
orb
std
push
fists
xchg
inc
mov
stc
inc
pop
jno
hlt
mov
arpl
aas
jecxz
imul
push
mov
mov
xchg
bnd
cmpsl
shl
fwait
xor
cmp
mov
mov
enter
sub
in
sub
lea
in
adcl
xchg
xchg
jge
lds
js
addr16
xor
jmp
out
packuswb
dec
inc
aam
xchg
sbb
cmp
loope
lret
dec
and
mov
punpckhbw
inc
xchg
movsl
mov
sub
pop
or
xchg
int
push
ljmp
add
sahf
xchg
push
xchg
and
js
lret
mov
std
icebp
int3
pop
ret
mov
pop
mov
xchg
or
testl
gs
outsb
daa
scas
les
push
mov
int3
and
add
push
push
test
fisubl
pop
mov
mov
fdivrs
mov
and
push
rcr
rcl
add
add
aaa
xor
push
rolb
test
aam
dec
sahf
enter
call
cmp
loope
inc
imul
js
mov
add
hlt
pop
pop
sar
add
aas
ret
ljmp
ss
inc
loopne
fiaddl
sbb
mov
pop
ds
pushf
sbb
js
and
pop
nop
loop
out
xchg
mov
cmpb
inc
daa
mov
and
sbb
cltd
inc
lods
in
inc
pop
rcll
loope
into
jmp
das
lods
inc
pop
aas
or
stc
fadds
xchg
into
jae
sahf
test
mov
dec
sbb
cmpl
sbb
sti
add
mov
mov
mov
ja
xchg
in
jmp
cs
or
pop
xchg
sbb
orl
imul
cltd
sbb
out
fcoms
xchg
ljmp
push
push
jns
dec
dec
lcall
mov
cmc
push
imul
mov
mov
out
int
rorb
int3
cmp
sbb
fsubrl
pop
insl
sbb
push
pop
out
pop
pop
test
xchg
es
or
cmc
adc
inc
jl
cltd
cmp
lret
call
pop
scas
mov
inc
enter
adc
clc
or
xor
or
dec
call
sahf
inc
mov
mov
scas
int3
sbb
hlt
xchg
xchg
fidivrs
popf
xchg
pop
adc
add
cs
pop
pop
repz
repz
ljmpw
and
lea
ret
movsb
stos
imul
stos
lret
jo
daa
test
jl
sbb
orb
fstpl
sub
xor
pop
push
adc
outsb
pushf
jl
sahf
inc
cld
jno
scas
pop
xchg
lods
test
xchg
or
fldt
or
into
pop
imul
or
sbb
xchg
jne
jb
sti
test
jge
xor
cwtl
in
add
adc
sbb
add
inc
push
sub
and
cld
data16
bound
mov
jns
in
sbb
push
imul
jl
sub
adc
cmp
pushf
inc
jl
or
push
mov
cli
mov
insb
sub
shll
cld
lcall
and
xor
adc
lock
popa
dec
in
ja
mov
cmp
lock
lahf
aad
mov
aas
fmul
lock
pop
fidivs
push
fdivr
pop
xchg
cmp
js
inc
outsl
add
xchg
mov
mov
push
aam
inc
js
ret
xor
xchg
pop
mov
lds
aad
int3
xor
notb
test
mov
call
add
imul
xlat
ljmp
scas
popf
aaa
fs
aaa
rorl
cmp
and
arpl
aas
je
adc
and
negb
sahf
ret
and
xor
mov
or
bswap
mov
rclb
jbe
mov
mov
mov
popf
pop
push
shll
test
mov
cmp
xchg
xchg
pushf
into
push
gs
in
sub
sub
sub
mov
cmp
clc
rcll
mov
aad
sub
cmpsl
xchg
scas
add
sbb
popf
mov
inc
sub
imul
gs
mov
pop
mov
push
sbb
cs
stos
push
out
aad
int3
xor
sbb
in
out
fs
push
and
add
xchg
xor
pop
insl
iret
jb
icebp
scas
gs
rcl
push
idivl
pushf
inc
imul
and
sub
into
fidivs
in
xlat
cld
xchg
mov
mov
leave
mov
jge
insb
adc
mov
jns
and
pop
jne
or
mov
imull
sbb
sub
les
int3
imul
std
call
or
enter
lahf
fildll
and
mov
gs
cmc
int
sarb
mov
sahf
pushf
inc
mov
sub
and
sub
aas
mov
jp
pop
xchg
jbe
dec
shrb
hlt
mov
js
cli
mov
out
outsl
int
add
sbb
xchg
adc
iret
mov
test
imul
sahf
in
xchg
pop
lret
dec
jecxz
cmpb
mov
idiv
rorb
mov
mov
xor
rcrb
cmc
subb
pop
xchg
out
inc
into
mov
jo
jb
cld
popf
in
mov
lea
pop
out
push
pop
int
or
push
inc
adcl
leave
cmp
outsl
lds
das
xchg
repz
je
test
scas
push
add
andl
out
in
jae
sub
jo
xchg
xor
or
outsl
mov
mov
movsl
into
xlat
stc
and
inc
xchg
inc
mov
push
jmp
cmp
shll
fists
pop
addr16
dec
dec
push
dec
sbb
add
mov
nop
xor
faddl
fsubs
out
imull
ss
mov
mov
sti
and
mov
lret
fdivrl
sub
xor
adc
jns
fldenv
cltd
imul
das
xchg
daa
hlt
ljmp
xorb
popa
dec
jae
movsl
outsb
cmp
adc
sbb
sti
push
ds
pop
lahf
ret
loopne
and
jno
js
mov
mov
test
clc
mov
mov
adc
int
mov
lea
mov
fidivrs
sti
or
fldcw
sub
add
ss
lret
lret
lods
pop
lret
rclb
inc
mov
add
test
xchg
jbe
add
les
mov
fidivs
mov
loop
jl
xor
ss
xchg
gs
ss
or
jmp
out
adc
stc
pop
jg
fs
scas
mov
push
cltd
hlt
cmpsl
call
sbb
inc
dec
adc
pop
xchg
xor
xlat
and
lret
mov
jecxz
jo
inc
adc
adcb
jmp
jae
sub
xor
inc
aam
in
xor
stos
cltd
pop
push
int
rorl
rcll
push
inc
mov
pop
adcb
adcb
or
mov
std
cwtl
mov
xorb
or
dec
mov
pop
das
mov
scas
cmp
add
repnz
rcrl
pop
sbb
mov
and
or
mov
inc
add
loopne
inc
jne
pushf
test
daa
or
lret
imul
dec
and
inc
jno
mov
insl
adcl
adc
lds
jae
mov
and
pop
add
push
push
clts
pop
out
int
xchg
jge
jg
xchg
pop
ljmp
push
mov
jmp
dec
ficoms
lcall
or
xchg
and
add
in
scas
xlat
ljmp
lahf
out
mov
sti
dec
pushf
push
ss
int
dec
sbb
adc
lods
push
xchg
lds
sub
movsl
popa
lahf
imul
and
mov
test
dec
std
je
cmpsl
sub
out
xlat
mov
hlt
subb
and
in
xchg
and
popf
lea
xor
jmp
push
jle
jno
sub
shrl
and
rolb
std
lds
sbb
ficoms
jmp
and
jg
jecxz
test
lahf
movsl
sar
ljmp
dec
xchg
pop
sbb
adc
stos
test
nop
jmp
lock
and
jle
stc
adc
dec
mov
ds
sub
cmp
jns
cmp
clc
xchg
mov
mov
movsl
bound
cmp
jg
adc
xor
arpl
data16
jp
xchg
cmc
in
sbb
lds
jecxz
adc
cmp
sbb
jp
fstl
rorl
sbb
adc
ret
fldt
jecxz
cmc
push
adc
add
addb
fwait
mov
push
mov
pop
jge
loopne
fwait
stos
mov
dec
movsb
lret
stos
add
dec
lock
and
cwtl
loop
add
xlat
subl
mov
add
pop
imul
mov
leave
pop
les
into
test
dec
inc
divl
xor
push
andl
sbb
mov
xor
ljmp
or
cmp
cmpsl
xchg
cli
jg
xchg
in
cwtl
xchg
add
cli
mov
mov
jbe
inc
and
add
dec
adc
add
mov
sub
stos
movsl
adc
xor
and
pop
das
push
subb
cmp
xchg
shrl
sub
or
sub
lcall
xchg
mov
xchg
scas
mov
fwait
push
jnp
push
adcl
push
loopne
je
int
out
push
stc
cmp
aas
out
inc
pop
je
inc
aaa
ret
add
dec
push
push
adc
jno
mov
mov
daa
xchg
lock
into
ret
dec
and
or
pop
mov
and
xor
rorl
dec
fistpll
mov
jg
xor
jo
or
inc
pushf
mov
push
or
inc
aam
std
mov
jle
sub
sub
xchg
lods
xchg
roll
ret
pushf
fwait
ret
mov
pop
or
out
and
xchg
push
sbb
test
rcrl
or
scas
add
dec
xor
orb
out
fimuls
test
jecxz
es
add
in
rol
shr
push
push
ficomps
loopne
lods
aas
sbb
sbb
shlb
lods
ficoml
test
mov
pop
adc
xchg
outsb
inc
and
lret
sbb
jp
push
pop
call
add
cltd
jge
data16
subl
push
mov
cmp
fistl
push
push
jg
test
test
adc
or
sub
cmp
lods
rcr
shll
dec
ljmp
icebp
xor
cmp
movsl
xchg
xchg
adc
pop
mov
dec
sarb
mov
adc
xchg
enter
cmp
into
xchg
adc
lock
out
jb
or
pop
aad
sub
jle
push
pop
xchg
cmp
or
lock
push
and
sbb
negl
outsl
hlt
gs
ficoml
cmp
aas
mov
addl
outsb
jmp
inc
sbb
imul
xchg
movb
add
test
jno
js
or
out
adc
lahf
push
icebp
push
push
mov
inc
sub
jge
mov
jle
addr16
popf
push
lock
inc
aam
xor
dec
mov
mov
addr16
imul
out
shl
leave
pop
out
jmp
sub
and
dec
jo
add
dec
add
in
add
cmp
and
jmp
cmc
dec
or
enter
rcrl
mov
lods
cltd
jmp
cli
lea
fsubr
xor
lcall
adc
dec
je
pop
add
popf
rcr
outsl
cs
and
pop
pop
mov
out
es
jbe
loop
fdivrl
dec
fstpt
data16
repz
pop
out
add
mov
js
xchg
popf
ret
fcom
dec
clc
movsl
pop
repnz
mov
jae
in
int
jae
cmp
clc
es
rolb
pop
pop
jnp
fwait
and
dec
sub
push
stos
pop
repnz
mov
int
jno
loopne
aas
insl
xchg
les
scas
aas
add
lods
xchg
xor
push
stos
add
and
aas
test
push
sbb
aas
mov
or
cli
and
adc
add
and
push
add
sbb
ds
jge
push
dec
push
inc
idiv
out
dec
cli
inc
inc
sbb
and
les
out
out
pop
jnp
out
and
sub
add
push
das
dec
cmp
stc
ret
cwtl
cli
cmp
inc
mov
subb
pop
push
cmpb
js
sub
scas
loopne
cmpsl
mov
add
ljmp
iret
test
xchg
add
enter
push
mov
pop
and
pushf
lcall
jnp
stos
fdiv
ja
outsl
cmp
or
push
cmpsl
loopne
add
xor
and
loopne
femms
lock
int
fisttpll
idivl
aas
int3
in
incb
sahf
adcl
imul
addr16
rclb
cltd
cltd
and
add
mov
xchg
add
pop
push
movsb
dec
pop
loop
in
scas
inc
push
push
test
je
adc
hlt
mov
cmp
scas
cli
push
cmp
cwtl
jle
popa
mov
add
mov
pop
loope
test
add
cltd
fbld
mov
in
cmpsb
add
into
pop
mov
mov
and
mov
pop
jle
inc
sbb
fisttpll
int3
dec
jno
lahf
mov
sti
mull
or
int
addr16
dec
cwtl
repz
pop
fldenv
lea
cbtw
js
adc
sub
shl
cmc
adc
imul
xor
lret
jl
push
inc
call
mov
repnz
out
mov
pop
sbb
and
sbb
je
jge
jnp
jno
icebp
daa
hlt
nop
mov
cmpl
sbb
adc
jge
mov
fneni(8087
imul
cmp
xor
and
notl
adc
xchg
mov
jb
jb
pop
jns
mov
pusha
or
in
jne
jle
inc
jg
sub
ds
cmp
loopne
imul
add
ss
lret
outsb
xchg
shrb
inc
testl
jo
mov
adc
dec
fistpll
lcall
dec
xor
cltd
std
std
dec
xchg
call
cmp
dec
aam
pop
lods
adc
dec
inc
cmpsb
mov
test
sti
stc
fldt
lret
dec
mov
faddl
je
add
mov
push
jns
and
xchg
jo
and
addr16
jbe
xchg
daa
mov
jns
xor
xor
in
push
mov
daa
stos
xchg
jo
loop
sbb
cwtl
push
adc
push
fmuls
sbb
stos
sbbl
cmp
jge
stos
inc
in
sbb
mov
in
das
je
cmp
orl
inc
mov
dec
es
push
adc
test
and
movsb
out
faddp
mov
inc
adc
movsl
data16
rcr
pop
fwait
xor
mov
xor
adc
sub
icebp
repnz
lods
add
xor
or
sbb
jecxz
pop
push
xchg
mov
and
jbe
pop
pop
fsubrp
mov
fidivrl
and
movsl
mov
enter
pop
jno
dec
incl
test
push
push
sbbb
loopne
insl
arpl
sub
xor
sbb
clc
das
cs
sbb
pop
xchg
nop
xchg
orb
cmpsb
mov
mov
pop
les
cltd
subl
mov
push
scas
stc
xchg
mov
mov
pop
xchg
sub
lds
cmpsl
or
ja
mov
imul
lock
mov
bound
aam
shrb
jo
in
movsb
push
cmovne
cwtl
dec
stos
ss
adc
out
push
mov
pop
sbb
mov
icebp
add
movb
jae
sub
rorb
dec
hlt
cltd
xchg
call
decl
jl
sub
xchg
sub
and
sub
or
test
sbb
push
out
push
pop
inc
stc
mov
xor
sarb
push
lea
xchg
int
adc
and
jns
test
xor
jl
stc
mov
mov
mov
and
or
xor
and
or
stc
data16
push
jno
cmp
mov
enter
push
shll
push
lods
ss
mov
call
dec
test
jg
push
push
mov
cmp
aas
xchg
fsubs
cmc
pop
call
cmp
hlt
scas
in
aas
jl
xchg
push
fdivs
or
xor
cmpsl
test
sti
pop
add
sbb
or
test
inc
push
push
jl
mov
adc
jl
loopne
mov
jg
cmp
and
dec
lods
rep
lds
fsubl
call
sbb
orb
sub
push
lahf
idivb
fwait
add
xor
dec
aad
pushf
loopne
pop
movsb
fwait
loope
xchg
mov
lcall
pop
shrl
pop
push
or
jns
sarb
mov
cmp
inc
cmp
ja
orl
jmp
jbe
mov
cli
add
xor
xchg
fildll
xchg
mov
dec
push
mov
mov
push
push
ja
flds
push
stos
xlat
fistpll
fimuls
add
cwtl
jno
and
inc
sub
leave
push
or
push
jecxz
sbb
ret
xlat
adc
mov
sti
pop
stos
lret
adc
repz
icebp
dec
or
ja
shll
and
pop
xor
test
dec
stos
mov
push
mov
leave
outsl
xchg
inc
adc
ss
pusha
das
ds
or
jae
and
rclb
in
and
inc
xor
xor
das
dec
adc
rclb
nop
in
js
divl
rcll
pop
movsb
fldcw
ret
jne
aad
push
pop
mov
mov
out
pause
inc
mov
jns
mov
cmp
lods
jo
int3
hlt
fcomp
rcrb
hlt
in
pop
jae
jmp
mov
stos
aad
hlt
out
sbb
and
ss
je
push
mov
incl
push
fistps
and
pop
data16
dec
js
stos
dec
cmpsb
fimuls
lock
jno
pusha
daa
xchg
cmp
jno
sbbl
push
neg
sahf
cwtl
jo
add
cmp
adc
mov
push
mov
mov
mov
push
in
pushf
jmp
adc
pop
xchg
stos
dec
fwait
aas
sbb
out
sarb
sbb
add
and
aad
jmp
adc
mov
jl
daa
jnp
aas
push
das
pop
decb
pop
orl
mov
push
add
push
push
dec
jne
dec
push
sar
xchg
push
repz
aas
mov
add
and
mov
sub
repz
out
xor
or
dec
xchg
jle
adc
cmp
scas
or
adc
in
call
scas
xor
stc
cmp
js
fdiv
mov
sub
lcall
fisubs
loopne
mulb
movsl
add
xor
adc
cs
clc
loop
roll
adc
arpl
adc
sar
lods
and
dec
in
mov
xchg
aaa
aaa
and
jo
or
addr16
je
or
lods
sub
nop
xchg
mov
mov
rcr
inc
popf
fcmovnu
fsts
sub
adc
cmpsl
adc
xchg
mov
adc
lret
sub
dec
sarl
das
mov
inc
inc
mov
dec
xor
fldcw
pop
xchg
and
sbb
in
ficompl
mov
sahf
mov
adc
lahf
pop
daa
push
mov
lahf
stos
sbb
xchg
mov
jo
xchg
sbb
jne
push
sti
call
sub
xorb
mov
inc
outsl
lret
xor
stc
cltd
call
xchg
push
dec
xlat
mov
outsb
shrl
fisubl
loope
pop
or
call
sub
dec
adcb
iret
scas
cmp
fwait
cmpsb
sbb
fmuls
rolb
popf
push
xor
dec
sbb
mov
shlb
imul
aaa
inc
add
in
adc
adc
fisttpll
or
push
lods
push
jl
scas
int
dec
popf
fldl
fimuls
mov
mov
sub
inc
pop
clc
mov
jmp
out
fsubl
and
js
or
ds
loope
shlb
mulb
data16
adc
lahf
fisubs
xchg
jns
fdiv
push
xor
and
stos
xor
std
popf
jbe
std
and
into
dec
pop
insb
mov
rolb
mov
cwtl
jno
filds
sub
bound
lds
push
fiaddl
test
xlat
or
pop
ljmp
xor
out
cmp
mov
push
xor
inc
repnz
push
test
pop
xchg
popa
push
mov
mov
or
sbb
xor
push
lods
push
je
add
orb
imul
in
dec
push
cmp
lds
inc
fistl
enter
xor
insl
in
dec
pop
js
les
fs
mov
push
pop
std
mov
mov
xchg
add
dec
inc
push
nop
xor
xlat
jp
mov
mov
popa
test
aam
enter
jge
hlt
dec
mov
lods
cmpsb
mov
jns
mov
mov
shrb
xchg
mov
fidivrl
int3
pop
out
enter
shrb
lret
or
lds
push
out
les
sbbl
fidivrs
cwtl
insl
cmpsl
cmc
sbb
lret
rcrb
mov
ret
movl
leave
stos
mov
popa
jg
dec
inc
push
cmp
push
sub
mov
mov
mov
mov
sbb
dec
test
push
aaa
cwtl
test
test
dec
mov
add
sbb
cwtl
imul
pop
pop
in
lea
and
and
gs
add
inc
xor
push
pop
add
cld
mov
into
int
std
inc
add
test
xor
into
out
inc
rolb
je
sub
inc
scas
rcrb
sbb
es
push
jmp
and
pop
cmp
fidivl
cwtl
adc
lret
add
push
mov
repnz
inc
sub
bound
rolb
inc
scas
lock
lret
xlat
push
aaa
adc
out
fwait
dec
adcl
mov
dec
mov
fsubs
and
insl
je
leave
stc
orb
cs
xor
xor
in
pop
frstor
or
inc
outsl
fwait
push
pop
mov
lcall
fbld
cmp
mov
or
jo
lods
fisttpll
inc
and
add
fbld
fldcw
inc
and
scas
or
xchg
mov
xchg
xor
aam
fadd
and
sahf
and
xchg
insb
dec
adc
xchg
js
cltd
push
sahf
movl
lds
sub
adc
inc
clc
out
push
push
dec
mov
sub
icebp
inc
mov
jne
dec
in
sbb
insl
adc
cmp
enter
pop
push
mov
mov
xchg
and
mov
mov
xor
aad
je
js
cmc
dec
dec
push
fcompl
stc
mov
dec
push
shl
pushf
stos
in
push
inc
testb
nop
pop
mov
cld
mov
mov
imul
xor
pop
sbb
xorl
inc
cmp
cld
adc
js
cmp
xlat
stos
xchg
mov
push
push
fcmove
cld
jg
xor
repnz
decl
popa
push
and
test
das
mov
or
movsb
in
mov
test
cmp
aaa
jg
cmp
mov
test
lcall
mov
ja
inc
ja
jmp
xchg
push
cwtl
mov
jg
test
dec
mov
ret
insb
sahf
repz
or
sbb
fstps
lods
push
mov
mov
aad
jbe
inc
and
mov
jl
cmp
int3
xor
psubd
jl
pop
aad
lea
sbb
adc
jp
pop
push
into
nop
sub
and
ss
sbb
fiadds
xor
mov
pushf
stc
cli
cmpsb
and
fnstenv
sti
imul
cli
pop
repz
stos
sub
push
push
mov
sahf
aaa
cmpsb
dec
test
push
inc
mov
pop
add
dec
imul
mov
std
mov
repnz
mov
rorl
cmp
scas
mov
xchg
xor
inc
les
or
dec
mov
out
pusha
sub
adc
dec
inc
inc
std
adc
add
stc
test
sub
jecxz
dec
imul
sbb
inc
pop
push
push
adc
xlat
mov
movsb
pop
adc
rclb
shrl
jecxz
mov
lret
jns
jmp
add
jno
adc
push
jo
test
sub
mov
mov
lret
mov
add
ficoms
and
or
mov
jnp
sahf
fidivl
aam
mov
jle
lret
mov
lahf
aam
dec
sub
sub
mov
inc
test
dec
push
fldenv
fs
dec
sub
mov
ret
repnz
iret
sub
scas
sub
add
into
lret
int3
and
mov
push
xchg
and
pop
pop
and
lods
mov
xchg
loopne
fptan
daa
cwtl
mulb
sub
cmpsl
rorl
mov
out
pop
fstpt
inc
push
push
ret
insb
mov
mov
aaa
outsb
pop
aam
lds
xor
push
lock
mov
adc
jl
xchg
rol
pop
fimuls
mov
cmp
fnstsw
addl
xchg
pop
sarl
cvtpi2ps
sub
rclb
mov
sub
clc
bound
xchg
or
xor
xchg
and
rcrl
out
lret
cmpsb
popf
sub
xchg
aad
lock
nop
test
cmpsl
push
push
mov
stos
and
jge
mov
popf
inc
sahf
mov
pop
mov
out
and
sub
or
xor
int
leave
jno
movsl
push
push
repnz
or
into
hlt
repnz
popaw
popf
in
pop
push
imul
xchg
sub
int
push
dec
or
cvtdq2ps
mov
shlb
orb
mov
push
out
dec
hlt
xor
or
mov
mov
rcrl
jmp
jl
push
out
rcrb
cmp
push
mov
add
and
adc
icebp
daa
cmp
sub
mov
or
sub
pop
int3
int
mov
inc
jns
dec
movsb
adc
mov
sarb
out
push
pop
imul
add
lahf
push
clc
add
mov
outsb
aad
jmp
push
cmpsb
inc
cmpsb
add
or
fdivrl
pop
int
jge
loopne
mov
pop
sbb
into
mov
lods
sbb
mov
mov
add
fwait
jae
outsl
push
mov
dec
loop
sbb
fisubrs
aas
pop
lds
or
loopne
mov
sub
push
clc
lahf
std
dec
adc
inc
lahf
bound
loope
cmp
cmp
cmp
icebp
mov
inc
loopne
clc
pop
inc
mov
jns
scas
pop
push
nop
movsl
jnp
fstps
sub
sub
out
cmp
push
ja
loopw
dec
push
pushf
sbb
and
push
xor
or
lds
mov
ljmp
std
in
mov
adc
push
das
jge,pt
mov
mov
paddw
testb
shl
push
push
xchg
insb
lods
xchg
pop
loopne
stos
mov
or
shrl
scas
xor
add
xchg
adc
das
pop
mov
inc
and
stos
or
lea
mov
shr
dec
xchg
stos
dec
xchg
mov
push
cmpsb
movb
or
imul
outsb
out
mov
push
mov
push
add
popa
sbb
xor
adc
push
fwait
scas
das
adc
mov
push
xor
lock
int3
mov
sub
pop
jg
add
stc
icebp
iret
jmp
sbb
popf
cltd
fldcw
pop
popa
lcall
push
data16
xor
xor
inc
jmp
cmp
sahf
sbb
data16
leave
sbb
jl
nop
subb
sub
mov
inc
out
mov
mov
mov
sti
xlat
cmp
jmp
addl
sub
pop
push
xlat
cld
in
mov
in
cli
imul
add
lods
dec
mov
aas
aaa
cmp
push
sbb
inc
xchg
in
stc
sbb
sbb
sub
call
out
movsb
adc
lret
int
shrb
inc
sbbl
mov
mov
imul
add
xchg
add
adc
and
sbb
shl
dec
lret
fs
mov
cld
add
pop
jmp
cmp
xchg
push
dec
jb
jge
xor
sbb
movsl
testl
xor
or
dec
adc
ljmp
cwtl
cmpsb
lds
jns,pn
mov
sti
aaa
jg
push
lahf
jb
iret
dec
cmpl
nop
add
push
aas
cmp
xchg
cmpsb
loopne
arpl
ret
sarl
dec
bound
mov
adc
pop
loop
push
repz
pop
test
stos
out
cmp
jnp
loop
shrl
add
pop
repnz
jp
dec
sbb
sbb
mov
aaa
mov
mov
xchg
xchg
mov
hlt
int
add
pusha
jno
mov
aam
jno
lods
sbbb
push
clc
ret
outsb
popl
jle
cmp
outsb
iret
ja
xchg
cld
orl
xchg
sub
mov
xchg
lods
and
aas
leave
icebp
movaps
jo
out
mov
mov
lcall
hlt
jae
aas
add
fcoml
jae
xchg
lahf
test
lock
sbb
stc
adc
sbb
ds
jmp
cmp
push
int
add
lahf
mov
mov
dec
mov
jnp
hlt
jae
or
sbb
mov
int
push
in
and
rol
ja
pusha
xchg
loope
les
out
mov
hlt
test
mov
fbstp
test
cwtl
mov
repnz
add
insb
or
aad
dec
pop
or
sbb
jo
push
jo
jp
xor
mov
push
mov
sbb
or
into
push
hlt
cwtl
pop
sbb
fcomps
pop
out
cmp
cmp
scas
add
nop
pop
cmp
adc
mov
dec
ds
mov
mov
je
inc
cld
sub
fmul
lret
stc
lock
test
iret
push
push
mov
stos
pop
arpl
jne
push
and
and
bound
and
and
pop
push
ds
mov
ja
in
test
sbb
or
cmp
cli
cmp
bnd
in
mov
push
push
mov
pushl
xor
stc
and
xchg
jb
mov
jg
mov
adc
mov
mov
fbstp
ret
aad
gs
jns
std
mov
adc
das
loope
out
rcr
and
mov
xor
pop
inc
out
jnp
jge
addr16
mov
or
mov
push
into
mov
cmp
push
testl
xor
stos
sarb
jg
mov
add
mov
xchg
jl
inc
mov
imul
dec
push
mov
mov
mov
push
add
mov
call
shrb
jbe
iret
rcl
mov
aad
das
mov
xchg
inc
dec
push
add
lods
repnz
xor
cvtpi2ps
int
lods
loopne
inc
incb
ss
enter
jb
xor
mov
push
stc
xchg
lret
and
mov
xor
outsb
sub
push
push
push
mov
andl
pop
cli
xor
push
and
push
outsb
repnz
jmp
testb
inc
fldt
js
sbb
hlt
xor
or
xor
das
jnp
pop
daa
icebp
data16
cwtl
mov
cmp
add
adc
outsb
xchg
mov
sub
es
jle
jecxz
sbb
mov
xor
xchg
push
xor
mov
cltd
inc
jle
push
jns
es
cmp
xchg
adc
mov
sub
ret
add
xchg
int
repnz
inc
je
repnz
icebp
sahf
push
lahf
cld
add
sub
sbbb
fdivrs
lret
cltd
pushf
in
int3
xor
cmp
xchg
into
hlt
fidivrs
mov
mov
inc
das
sbb
fsubr
push
adc
fnstenv
lea
cmc
aad
jb
mov
push
repnz
xchg
fwait
cmp
rclb
push
mov
dec
sbb
ret
jge
sub
and
inc
dec
mov
inc
jmp
inc
and
cld
xchg
inc
push
pop
adcb
and
orb
cmp
xor
in
das
into
mov
movsl
test
lods
loopne
adc
lahf
or
out
std
sbb
inc
xchg
cmp
imul
inc
scas
push
cmp
jbe
cwtl
or
or
mov
arpl
mov
pop
xor
decl
test
lret
or
fwait
dec
xchg
sbb
mov
call
inc
mov
std
adc
xor
cmp
or
cwtl
pop
cmp
mov
lea
lahf
push
xchg
frstor
inc
cmpsb
cld
mov
jle
push
into
fiaddl
test
mov
orb
xchg
xor
mov
mov
and
repz
adc
sub
sbb
pop
lock
mov
sti
mov
and
movsw
cltd
cltd
sub
adc
sti
mov
jle
out
push
inc
cli
scas
mov
shlb
add
idivb
outsl
and
jbe
and
nop
icebp
sahf
aas
inc
into
adc
lcall
fwait
test
inc
adc
mov
sar
adc
imul
push
xor
mov
sub
mov
lock
mov
push
ss
int3
arpl
adc
mov
xchg
stos
mov
pop
cmp
and
in
outsl
xor
out
xlat
pop
mov
or
lods
jnp
sub
mov
enter
ss
shll
daa
fwait
addr16
mov
sub
cmpsb
inc
mov
or
or
not
mov
fadds
in
sahf
filds
addr16
mov
mov
stos
in
divb
das
sbb
fsts
imul
push
or
bound
push
push
xor
leave
jge
loop
pop
cmp
push
pop
fmull
pop
dec
mov
inc
test
icebp
lds
mov
or
mov
cs
sbb
mov
imulb
pushf
pop
loopne
lods
test
jl
iret
inc
nop
stos
adc
lcall
pop
das
mov
fsave
int
mov
dec
cli
insb
jae
aad
mov
fs
aad
sub
mov
clc
dec
fwait
sub
sahf
sub
iret
dec
bound
jg
in
sbbb
sbb
jl
or
sbb
pop
imul
popf
aad
addr16
insb
mov
scas
shlb
pusha
in
xchg
cmc
les
or
roll
dec
sarl
mov
lahf
scas
call
inc
xchg
xor
ja
imul
xchg
test
pop
lea
push
lea
pop
xchg
lds
jnp
fisubrs
adcl
lret
push
sti
push
in
dec
aam
mov
xchg
sub
cmp
inc
sbbb
addr16
mov
sub
or
xor
jg
pushf
loopne
pushl
dec
jnp
cmp
clc
xchg
xchg
in
shll
leave
data16
push
sbb
ret
sahf
popf
loope
dec
jno
movl
mul
and
aas
pop
xchg
sbb
mov
inc
ret
fmuls
filds
clc
ret
psrad
jo
add
dec
lret
and
shl
mov
movsw
lahf
test
mov
inc
jp
in
aad
fcom
inc
or
inc
imul
sbb
dec
jno
aas
icebp
scas
jne
sub
clc
mov
test
add
mov
ret
jb
xchg
daa
mov
inc
add
mov
sbb
pop
arpl
xor
sub
mov
hlt
les
movsl
sbb
xor
dec
inc
pop
ja
jecxz
cmp
cmpsl
scas
xor
mov
pop
dec
dec
addr16
das
dec
fiadds
pop
lret
int
test
inc
lret
cpuid
push
sbbl
test
out
xor
cmp
jo
lock
push
stc
ja
dec
sbb
fstps
out
or
mov
rcrb
sbb
jnp
pop
jbe
xor
xchg
pop
outsb
mov
ljmp
pop
hlt
cmp
in
jg
cmpsb
ja
mov
cmp
inc
or
jnp
jbe
ror
push
lods
in
je
dec
fdivs
ficoml
and
lea
and
mov
add
in
inc
xchg
cld
out
add
sub
js
push
mov
xchg
jmp
insb
add
xchg
insb
xchg
outsb
cmpl
in
mov
mov
loope
repz
and
ljmp
inc
into
sub
mov
fists
cli
popf
adc
add
bsf
enter
popl
push
pop
mov
pop
insb
push
rcr
dec
pop
add
hlt
add
rcrl
ss
test
cmp
aad
lock
xor
addr16
ja
movsl
lods
add
shr
je
aaa
dec
div
mov
or
ss
aaa
movsb
std
daa
cwtl
or
ljmp
add
and
xchg
ljmp
idivb
leave
mov
add
js
or
aaa
xchg
shlb
ss
jbe
pop
imul
push
test
movsl
or
lods
jge
xor
call
cmc
cwtl
jg
mov
mov
mov
imul
je
loop
jle
imul
jp
repnz
in
add
sti
xor
lret
and
js
test
mov
imul
movsb
ficoms
or
lods
icebp
jo
pop
or
pop
mov
icebp
or
addl
in
push
popf
addr16
dec
imul
mov
test
push
stos
pushf
pop
pop
test
sub
or
fcoml
or
mov
scas
mov
cli
adc
jecxz
inc
ret
loopne
or
fidivrs
inc
jmp
std
ret
test
pop
mov
rcrl
out
push
jmp
je
out
or
or
insl
jno
add
and
jbe
and
bound
push
add
arpl
xchg
pop
rcrl
ret
divl
pop
sub
mov
inc
dec
outsb
xchg
and
dec
sbb
adc
jecxz
mov
adc
add
dec
mov
enter
into
add
in
mov
push
and
or
xchg
cltd
in
xchg
cmp
data16
sbb
test
and
fs
fisubs
inc
pop
out
dec
sub
cmpsb
gs
xchg
adc
iret
adc
call
mov
mov
pop
jg
cmpsb
mov
stos
xchg
mov
cli
fstpl
fwait
shl
pop
call
jbe
jno
outsl
pusha
pop
jbe
testb
pop
and
mov
add
xor
mov
leave
out
or
daa
fucomp
pop
or
ret
add
rorb
in
pop
xlat
in
in
mov
mov
and
outsl
mov
lods
subb
jbe
cld
pop
jmp
das
icebp
les
loopne
insb
call
imul
jge
sbb
nop
imul
xlat
push
ds
hlt
jo
test
jg
lret
add
repz
inc
test
lret
cltd
loop
push
push
lods
adc
adc
xor
jo
arpl
inc
or
adc
nop
movsb
mov
fxch
push
ret
xor
pop
imul
testl
pop
sub
subl
ja
cltd
lds
or
loope
int3
lcall
or
stos
xchg
fs
bnd
jmp
xor
subb
fstpl
in
sahf
cmp
fistpll
and
icebp
icebp
inc
xor
dec
and
daa
adc
jno
sti
cmpsl
mov
mov
push
jbe
out
int
iret
sbb
xor
sub
insl
adc
mov
test
add
cmpsb
fsubrl
dec
hlt
adc
mov
cmp
int
mov
inc
leave
xlat
or
insb
fistpl
aas
push
into
cmp
imul
jmp
mov
jae
imull
add
popa
shlb
dec
subb
mov
mov
mov
cmp
jnp
cmpsl
xchg
xor
xchg
sahf
push
xor
hlt
push
loop
jmp
mov
lahf
push
lret
push
jg
scas
add
xor
cli
mov
dec
dec
aaa
jno
mov
loope
ds
add
lods
hlt
jno
sarl
idivl
mov
test
cmp
push
mov
ret
fidivrl
movsb
push
filds
leave
push
test
iret
pop
test
inc
cwtl
or
mov
pop
push
imul
lods
mov
pop
push
lods
push
in
pop
or
in
dec
push
and
js
xchg
adc
and
lahf
shrb
sti
and
je
daa
xor
add
mov
inc
push
add
or
mov
xor
call
mov
shrb
adc
cmp
jnp
ds
sbb
setg
xchg
adc
cmp
int3
xchg
inc
dec
repz
jb
adc
scas
cmc
mov
fdivr
jl
fisttps
addl
xchg
repnz
movsb
inc
inc
xchg
xor
incb
jae
pop
add
mov
cltd
imul
fcmovbe
orb
cmp
iret
ds
or
stc
fsts
mov
test
push
xchg
arpl
pusha
rcrb
les
shlb
xor
repnz
mov
movsl
push
adcb
cmp
mov
push
nop
mov
jge
pop
ljmp
xchg
movsl
loop
add
inc
loope
int3
data16
inc
cmp
jns
mov
pop
xchg
jae
xchg
jbe
pop
or
mov
das
outsb
clc
imul
shld
enter
inc
push
pop
outsl
push
mov
dec
add
inc
shlb
mov
cmpsb
or
ret
pop
xchg
sar
iret
fdivl
mov
adc
sti
lods
leave
xlat
mov
xchg
les
shll
les
arpl
es
cmp
stc
jbe
aam
jg
outsb
scas
and
push
js
das
mov
inc
push
mov
out
jmp
mov
jne
or
hlt
scas
lret
mov
leave
fmuls
lret
shll
aad
jle
nop
fcoml
adc
and
add
lahf
mov
xor
xor
test
adcl
in
lods
daa
push
or
xchg
ret
outsl
test
js
mov
cmp
pop
push
mov
divl
mov
es
cltd
inc
sbb
push
cmp
jmp
dec
sub
and
lds
clc
jg
iret
mov
lahf
sbb
mov
data16
xchg
je
lock
pop
pushf
mov
out
xchg
mov
and
mov
xor
lret
pop
pop
jnp
popf
mov
dec
inc
jp
repz
add
pop
test
push
pop
xor
mov
lock
jge
or
movl
outsl
sti
inc
xchg
pop
mov
ret
idiv
mov
push
push
in
fcoms
or
jmp
not
pop
int
popa
sbb
loopne
movsb
cmp
pop
bound
shl
loopne
mov
push
add
add
dec
outsl
jp
cmp
scas
adc
repnz
dec
data16
outsl
lret
adc
leave
sarb
repz
pusha
ret
xchg
xor
xlat
scas
add
lcall
sub
hlt
rcrb
cmp
or
divl
out
mov
arpl
lret
add
fwait
dec
dec
mov
mov
push
inc
sbb
push
pushf
push
movsb
aad
daa
mov
lret
cmpsb
mov
lea
fisubrs
shll
loopne
icebp
lahf
mov
in
or
xor
lahf
jl
fisttpl
jmp
and
out
in
lret
test
daa
loop
add
add
and
add
add
loopne
cmp
aad
pushf
cmp
lcall
pop
cmpsl
std
lahf
or
push
push
daa
and
lock
outsl
loope
inc
xor
jecxz
insl
mov
repnz
mov
in
test
push
or
je
mov
mov
push
test
jmp
fists
fcoml
push
mov
lock
mov
outsl
mov
xor
inc
sti
adc
mov
popf
shll
adc
in
clc
mov
mov
filds
xlat
xor
adc
fsubr
js
cwtl
cld
adc
sbb
xchg
insl
aam
and
pusha
movsb
xchg
sub
divb
xor
out
sbb
clc
insl
repz
xchg
xlat
cmp
dec
or
mov
and
sbb
cmp
mov
xor
scas
sub
in
out
out
pop
addr16
or
sbb
add
mov
mov
hlt
jl,pt
cwtl
mov
cmp
xchg
push
dec
pop
mov
mov
cmc
push
call
cmpsb
in
sti
xorl
xchg
out
outsb
lcall
pusha
out
repz
sbb
xchg
ljmp
test
push
and
fisttps
and
cmp
fdivp
adc
ds
and
or
pushf
sbbb
into
mov
aam
add
mov
daa
jecxz
sub
mov
movb
mov
or
jl
orb
jmp
cmpb
lods
call
fs
push
xchg
fistpl
dec
fsubl
inc
addb
add
dec
movsl
xor
xchg
pop
add
ret
mov
push
xor
pop
mov
stc
mov
sbb
pop
xchg
xchg
sbb
xchg
aaa
inc
ret
outsl
out
inc
sar
pop
mov
adc
lods
jo
dec
push
dec
push
xor
inc
adc
add
push
mov
cmp
or
push
scas
shrb
mov
push
cmp
mov
xchg
xchg
addr16
xor
rcll
mov
movsb
sub
inc
inc
push
addr16
push
jnp
clc
inc
leave
test
xchg
inc
outsl
mov
sbb
inc
cmp
loop
adc
ret
sbb
xchg
sub
push
add
mov
and
mov
shrb
leave
stos
subl
in
loope
mov
loope
iret
push
xor
inc
pop
repnz
stc
xorb
cmp
imul
lock
xchg
stos
sub
or
push
pop
add
in
stos
movsl
mov
dec
mov
pop
cld
mov
xor
bound
outsl
mov
add
and
fistpll
ret
xchg
std
jno
sbb
pop
lret
push
fisttps
xor
and
add
xchg
cld
cmp
popa
jge
add
sbb
in
rcrl
cmpsl
xor
fstpl
pushf
adc
hlt
or
dec
xchg
pushf
inc
neg
ud0
push
mov
icebp
jmp
inc
and
cmp
in
jle
inc
and
push
sbb
inc
repnz
inc
xor
push
mov
fwait
daa
inc
cltd
pop
push
or
sbb
or
pop
pop
les
xchg
les
mov
pop
icebp
cs
mov
push
das
and
call
push
xor
leave
mov
test
sub
mov
mov
mov
out
push
fs
in
out
xchg
xchg
ds
sbb
gs
pop
jl
ret
lds
mov
es
pop
mov
js
xchg
push
aaa
sbb
lret
sub
jp
mov
push
std
aas
pop
iret
stc
pop
repnz
sub
adc
arpl
dec
mov
scas
sub
negb
pushl
inc
mov
xlat
rcl
cltd
sahf
stos
ds
mov
iret
mov
mov
into
mov
call
lock
ds
lahf
inc
bound
dec
add
mov
add
aaa
cwtl
daa
or
sub
or
ljmp
pop
das
dec
jmp
cmp
adc
insl
pushf
pop
out
test
push
jl
cwtl
jne
dec
fadds
stos
push
fadds
enter
lds
or
lret
sub
pop
mov
mov
xor
enter
sbbb
add
sbb
test
xchg
ss
popa
jnp
mov
lret
sub
mov
clc
dec
push
aas
movsb
jnp
mov
add
sarb
jbe
mov
cmp
pop
shrl
add
sbb
jecxz
xor
test
ljmp
mov
test
andl
loope
push
jg
dec
dec
stc
rorl
enter
mov
hlt
stos
xor
fists
cmpsl
jb
pop
movsl
insb
mov
rorl
movsl
push
dec
loop
jge
fwait
mov
pop
cmpsb
es
cs
pop
cmpsb
or
add
push
or
mov
les
outsb
orb
js,pn
and
mov
mov
shll
push
cmp
jg
xchg
xchg
xchg
fdivl
cli
cs
cmp
pop
xor
add
repnz
pushf
stos
nop
adc
pop
pop
dec
xchg
mov
shl
stos
pop
stos
bswap
jne
leave
push
xchg
test
xchg
aas
ljmp
push
rcl
cmpsb
dec
xchg
mov
mov
or
test
gs
fs
inc
sub
inc
mov
imul
mov
mov
fmul
ljmp
in
cmpsl
jno
lods
inc
sbb
jb
imul
push
sbb
lock
es
push
aaa
mov
lock
jo
repnz
imul
es
xor
cmp
sub
je
sub
adc
cmpsl
mov
sarb
jl
mov
add
jl
stc
inc
xchg
mov
out
adc
js
movsb
add
jbe
xor
daa
pop
sub
adc
mov
aas
int
add
sarl
inc
xor
cmp
push
mov
dec
in
jl
aaa
xor
std
int3
bound
xchg
jns
lock
or
movsb
add
call
mulb
push
loope
test
pop
xchg
lfs
sbb
cmpsl
add
xchg
pop
and
or
stc
pop
mov
lock
mov
xor
xchg
shlb
adc
int
push
mov
and
add
xchg
shll
push
mov
or
mov
test
mov
andl
imul
xor
clc
outsb
aaa
cmp
dec
mov
cs
test
outsl
lahf
xor
xchg
add
xchg
push
ja
push
movsb
dec
addr16
mov
ret
pushf
mov
sub
clc
cwtl
inc
ds
fistl
nop
inc
arpl
jns
cwtl
popa
out
jns
mov
xor
in
dec
sub
mov
ljmp
pop
jecxz
mov
fcomps
ja
dec
dec
test
dec
aad
lcall
xor
fst
xchg
in
inc
loope
icebp
dec
inc
cmp
test
dec
fmuls
stc
aas
fdivrs
add
das
movsb
xchg
in
movsl
xchg
push
mov
mov
sbb
inc
mov
lds
add
pop
sub
imul
inc
xor
nop
fucomip
jecxz
xor
jb
xor
dec
mov
xchg
push
dec
imul
sbb
pop
lret
or
jae
sbb
xchg
call
scas
mov
xchg
in
les
clc
out
lret
jne
push
adc
inc
mov
addr16
mov
push
cmc
insb
add
mov
movsb
inc
ja
cmp
lahf
outsb
stos
push
inc
mov
arpl
aam
cmpsl
jns
pop
xchg
fwait
mov
dec
fs
xor
adc
sti
lea
jge
scas
mov
or
pop
dec
stos
addr16
jl
jg
hlt
jno
bnd
popa
cmc
scas
in
stos
hlt
sub
bound
fcoms
fdivrs
jp
icebp
aam
adc
aas
mov
mov
and
mov
imul
pusha
enter
mov
andl
in
pop
stos
xchg
rorb
rol
daa
cmc
jp
push
jno
inc
fadd
pop
inc
fwait
add
adc
sub
test
rcll
scas
push
nop
je
call
ds
mov
sti
add
mov
cmp
pop
inc
inc
ret
and
imul
cwtl
xor
aam
ja
dec
in
mov
jo
addr16
int3
mov
cmpl
insl
fsts
pop
mov
aad
and
lds
mov
push
cmp
ret
mov
sub
jnp
rcrl
mov
xchg
xchg
fcmovnu
xchg
sbb
pop
sub
jb
mov
lret
push
loopne
fbld
sahf
xor
iret
hlt
xlat
test
daa
push
imul
out
dec
pusha
les
sub
insb
add
jl
mov
dec
jns
mov
mov
mov
pop
cmp
inc
andl
cmp
mov
inc
or
push
cltd
jns
jne
lahf
dec
ret
imul
aad
insb
cmc
sub
adc
sbb
ss
repz
ljmp
stc
pop
addr16
jmp
inc
in
imul
xor
inc
pushf
cli
popf
in
xchg
lret
arpl
jl
lcall
and
lret
scas
in
push
mov
xchg
push
xchg
jmp
mov
and
pop
stos
addr16
addr16
jge
aam
pop
aad
sub
daa
leave
fcoms
loop
push
sbb
adc
icebp
mov
jecxz
fsubl
add
sbb
aam
cmpsb
js
mov
ffreep
mov
fistpll
out
in
pop
inc
cmp
dec
xor
scas
es
out
pusha
xchg
cmp
movsb
jecxz
dec
xchg
xchg
dec
jbe
push
js
ss
and
adc
aam
loopne
lret
cmp
cmp
or
or
xchg
popf
movsb
shrl
mov
scas
daa
xor
loopne
jmp
push
lock
sub
lcall
or
mov
out
stos
jp
gs
mov
and
pop
out
mov
imulb
add
test
xchg
jo
mov
xchg
std
or
sub
jle
mov
inc
fisubrl
mov
les
aad
movsl
pop
push
xlat
or
fstl
daa
mov
inc
cs
cmpsb
test
inc
enter
adc
push
fsubs
pop
into
sbb
sub
int
int
fsts
out
mov
imul
outsl
adcb
jge
adc
fs
sbb
popa
mov
adc
mov
stos
or
aam
mov
sarl
pusha
push
je
jp
add
std
xor
inc
movsb
add
loop
das
sbb
xor
lock
pushaw
loop
inc
and
mov
repnz
insb
aas
and
idiv
push
movsl
popa
int3
outsb
push
sub
ljmp
popf
hlt
addr16
mov
pop
jmp
dec
loop
stos
mov
xchg
stos
and
dec
mov
mov
cs
mov
cli
cld
lret
stc
xchg
nop
xor
lods
es
mov
mov
lea
cmp
adc
lret
fisttps
dec
gs
mov
das
jle
sti
aaa
mov
push
xor
adc
adc
sbb
mov
repnz
sub
cmc
sbb
push
out
cli
movsb
scas
jmp
mov
dec
sbb
test
sbb
test
cld
or
xor
pop
cmp
in
inc
dec
add
xor
into
jo
dec
outsb
pusha
mov
mov
pop
push
and
scas
pop
jae
lret
repnz
xchg
test
lods
inc
xchg
mov
dec
imul
ljmp
ficompl
subb
inc
imul
xchg
in
mov
push
popf
xchg
gs
int3
push
mov
push
inc
jg
sarl
mov
pop
popf
inc
adc
dec
popa
xor
leave
jno
mov
mov
mov
pop
mov
xchg
xchg
dec
xor
lahf
pop
push
sbb
outsb
xor
data16
adc
inc
mov
inc
fidivrl
jl
push
das
mov
icebp
sbb
rol
cwtl
out
into
xchg
movsb
inc
cwtl
cmpsb
pop
movsl
mov
push
stc
jae
js
xor
fs
pop
mov
or
les
push
add
adc
pushf
jnp
mov
lcall
add
jno
cmc
cmpsb
inc
jo
sub
jge
push
adc
popl
mov
inc
loope
loopne
sahf
and
jne
fistpl
pop
mov
or
out
dec
sub
xor
fists
movsl
mov
adc
mov
and
sbb
pop
js
fsubrs
push
sti
gs
jne
ret
inc
jecxz
lret
pop
jno
lods
and
xlat
sub
stc
dec
xor
fnstsw
add
nop
sub
insl
test
cmp
xchg
repz
push
xchg
shlb
loopne
dec
fstl
popf
js
ds
repnz
xchg
push
arpl
bound
aam
push
mov
bound
mov
inc
inc
ljmp
fldcw
icebp
cli
roll
idiv
test
in
mov
mov
add
daa
lahf
fsubl
fistpl
push
sbb
ljmp
mov
adc
aam
xlat
nop
mov
dec
rcll
sub
repnz
cmp
or
les
insb
jp
mov
mov
add
jae
out
pop
sbb
jb
mov
and
or
lock
test
jno
js
cld
in
mov
lods
mov
imul
pop
stos
add
sbb
lret
roll
repz
xor
test
inc
iret
lcall
shrb
xchg
and
fdivp
pop
add
ljmp
mov
jnp
mov
or
into
test
xchg
aas
or
or
push
jl
sub
insl
mov
add
xchg
xchg
or
xor
mov
cmp
push
orb
mov
scas
and
mov
movsb
sbb
jns
rol
lret
mov
dec
subl
rolb
mov
shrl
push
push
lods
push
je
pop
mov
mov
mov
out
adc
fisttps
ljmp
lcall
je
xchg
push
xchg
cmp
adc
lock
testl
jnp
scas
push
xor
push
aaa
mov
mov
xor
stc
adc
mov
mov
mov
or
sbb
aaa
inc
into
lock
dec
repnz
popf
ret
sarl
add
fucom
std
mov
clc
stos
xor
sbb
jl
mov
cli
sbb
adc
lea
xor
lahf
daa
je
cli
xchg
nop
jmp
push
xor
dec
jae
cmc
cmpsl
lcall
xor
or
data16
leave
les
aad
jp
inc
add
mov
scas
jnp
data16
jb
scas
cmpsl
mov
xchg
sti
fstpl
jb
lahf
inc
mov
xor
add
xchg
test
out
mov
shr
ja
popa
add
aam
inc
jns
cltd
lock
aam
ljmp
and
push
and
gs
loopne
dec
out
outsb
enter
out
stc
push
push
mov
popa
in
and
mov
mov
out
out
xchg
pop
pminsw
push
sbb
lahf
xor
push
outsb
daa
mov
ud1
adc
push
outsb
xor
jae
push
cmp
jbe
cmp
jl
xlat
cmpsb
jbe
jl
jbe
lret
incl
mov
std
cmc
pop
iret
sub
jge
es
insb
jg
add
xchg
repz
add
dec
out
loope
inc
fimull
decl
test
mov
and
shlb
xor
dec
out
std
ret
and
pop
inc
imul
daa
repnz
and
jmp
sub
push
sahf
push
adc
mov
mov
or
push
fnstenv
pop
shll
dec
sub
push
sbb
xchg
lcall
push
pop
mov
pop
rcll
or
pop
cmp
insb
rcr
scas
lret
or
or
and
stc
sub
adc
mov
jo
arpl
into
test
push
dec
out
jae
cmp
push
mov
xchg
and
mov
push
pop
and
cs
dec
ret
mov
cld
sti
inc
jmp
dec
lods
es
xor
dec
inc
xchg
xor
cmp
and
jmp
enter
jnp
mov
jno
push
and
les
adc
cmc
icebp
jne
nop
xchg
sbb
daa
icebp
push
inc
mov
mov
cmp
mov
inc
jecxz
shrb
xchg
xor
add
ret
js
pushf
push
negl
mov
jp
dec
xor
xor
fistl
loop
push
xchg
sbb
xor
mov
sub
imul
sub
outsl
icebp
push
iret
js
mov
stc
das
xlat
cli
pop
stos
loopne
in
test
fcomip
insl
cmp
xchg
sub
test
push
add
add
xchg
sub
ficompl
mov
mov
test
testb
cwtl
es
gs
cs
mov
add
jge
out
sub
sbb
pop
mov
ljmp
dec
test
addb
addb
stos
or
sub
inc
cmpsl
in
lods
inc
adc
out
push
loopne
cmp
inc
mov
mov
dec
or
cmp
testl
mov
add
int
outsb
enter
mov
stos
mov
pop
xchg
jge
lahf
sub
out
imul
pushf
leave
arpl
mov
outsb
sbb
or
data16
xchg
adc
mov
test
lds
push
mov
repz
sti
cltd
fsubr
stos
movsb
xchg
jecxz
stc
stos
ja
aam
jae
inc
les
ds
xor
repnz
aad
inc
movsb
es
sahf
shll
test
or
jae
mov
push
jae
xor
lods
mov
mov
addr16
popf
shl
jle
ljmp
jl
stos
mov
pusha
or
push
sbb
pop
adc
mov
xchg
add
adc
xlat
push
ds
cmp
scas
jl
pop
push
lea
fwait
leave
ds
cmp
pop
and
lcall
jns
test
pop
inc
cli
xor
sarb
scas
mov
mov
push
nop
xchg
push
cs
pushf
inc
lock
popa
cmp
mov
filds
and
lret
dec
xchg
mov
or
mov
mov
and
mov
xchg
daa
outsl
mov
cmc
repz
cmc
sarl
fwait
inc
cwtl
inc
pop
sahf
push
xor
xor
dec
imul
aad
insb
inc
mov
jp
sub
or
mov
aam
sub
iret
inc
fsubs
cmpsb
dec
add
sarl
xor
movl
push
cmp
mov
cmp
cltd
adc
dec
bound
pop
or
cmp
xor
adc
jge
xchg
sub
lret
xor
pop
xchg
inc
pop
xchg
mov
dec
dec
mov
sub
push
mov
cwtl
cmp
push
inc
in
addl
mov
lods
mov
roll
out
pop
add
dec
ficoml
mov
in
aas
insb
es
into
xchg
mov
sub
sub
sub
mov
sbb
add
mov
adc
mov
outsl
dec
les
mov
lods
xor
lock
push
icebp
pop
cmc
test
enter
push
mov
adcb
adc
shrl
fmull
rclb
dec
out
test
mov
mov
sbb
jns
shrl
add
xchg
and
mov
or
sub
gs
insb
cmp
add
movsl
testb
test
xchg
pop
xchg
xchg
add
sbb
xchg
jp
pop
and
rcrl
adc
and
sbb
aaa
daa
mov
ds
dec
jmp
loopne
das
xchg
or
sbb
loopne
mov
jnp
fsubs
imul
inc
add
sub
cmc
xchg
fdivrs
fs
ss
data16
das
out
addr16
xchg
push
idivb
add
add
xchg
mov
xchg
push
pop
sbb
jno
xor
aam
inc
mov
arpl
sub
comiss
out
mov
mov
mov
sub
sbb
xchg
xchg
faddl
fcoml
inc
in
dec
ret
add
xor
mov
cmp
nop
push
jl
enter
adc
push
inc
add
mov
mov
mov
add
mov
sbb
cmp
mov
push
xor
xchg
sbb
pop
ds
push
mov
daa
jge
sbb
pop
call
mov
jb
push
xor
jne
mov
dec
inc
add
shl
aas
or
loop
xchg
hlt
leave
mov
in
sahf
daa
mov
mov
adc
call
mov
xorl
sbb
sub
mov
lret
sbb
push
repz
out
lahf
push
divb
in
pop
push
pop
leave
outsl
cmp
ljmp
clc
xchg
int
push
sbb
inc
push
incb
mov
sbb
mov
or
sub
out
popf
imul
push
dec
mov
or
push
ss
jmp
iret
jle
pop
gs
add
popa
scas
pop
lock
stos
cmp
test
sub
into
popf
mov
sbb
sbb
outsl
scas
sbb
lock
inc
out
repnz
xchg
mov
or
cwtl
pop
and
sbb
xor
or
sub
enter
cmpsb
adc
push
sub
pop
dec
fnstenv
loope
fwait
jmp
dec
shrl
push
pushl
pop
pop
jle
test
jl
sbb
push
mov
mov
mov
inc
fildll
jmp
pop
out
push
sub
aas
mov
push
xor
mov
xor
std
scas
popf
jae
pop
outsl
test
xchg
cmpsb
cmc
scas
daa
out
cmp
push
cltd
loope
mov
pushf
inc
pop
cwtl
aam
add
xchg
mov
jecxz
call
insb
es
hlt
fadd
imul
mov
loop
or
push
pop
test
lahf
cmp
imull
xor
divl
mov
xor
mov
add
cs
shrb
push
adc
dec
pop
adc
push
or
push
mov
imull
jg
xchg
rcl
loopne
lods
and
inc
jg
lea
xchg
stos
insb
jmp
mov
rorb
fcompl
jae
jne
loope
int
lcall
stos
in
mov
push
xor
cmc
jp
push
xlat
movsl
pusha
mov
push
sbb
cwtl
pop
bound
mov
pushf
adc
ja
add
xchg
imul
mov
mov
add
stc
pop
sub
add
xchg
cmp
jb
push
sbb
xchg
cmpsl
aaa
sub
mov
mov
in
or
push
dec
sti
shll
bound
fnstsw
inc
sbb
cli
js
jge
jae
adc
pop
sbb
push
adc
in
add
test
in
cwtl
and
sahf
test
or
lcall
xor
jge
andl
test
cmp
push
ja
pop
jbe
sub
adc
cmc
cmpb
inc
jns
jl
js
testb
insb
xor
insl
push
outsl
ljmp
push
add
pop
ret
insl
and
mov
mov
push
mov
js
int3
xchg
in
out
insb
fnstsw
aas
cltd
arpl
push
sub
fcomps
nop
and
inc
int
in
sbb
pop
bound
stos
aam
inc
jecxz
add
mov
mov
xorb
pop
push
ficoml
cmp
push
cwtl
fiaddl
incl
sbb
pop
fs
add
test
mov
arpl
push
ja
adc
lods
sub
mov
imul
lock
js
dec
inc
cmpl
stos
cmp
cltd
ret
add
icebp
icebp
pushf
ds
inc
stos
outsb
jmp
loop
mov
pop
out
mov
inc
dec
test
insb
popa
pop
mov
fsubrs
xchg
xor
ret
push
test
push
fiadds
xchg
dec
dec
inc
cmp
add
icebp
adc
jne
das
ss
sub
push
test
and
xor
cld
scas
mov
dec
xor
das
bound
int3
sbb
adc
popa
jnp
pushf
sub
or
xchg
mov
inc
add
mov
jp
sbb
mov
xchg
nop
mov
xchg
inc
adcl
lret
in
icebp
sbb
sti
push
pop
ljmp
pushf
mov
mov
pop
ds
add
js
lret
cld
jecxz
adcl
push
movb
inc
out
aad
adc
cmp
test
inc
mov
push
in
xchg
fcom
mov
pusha
addr16
pop
js
mov
cmpsl
xor
imul
test
mov
aad
xor
mov
push
sbb
jmp
pop
xor
add
int
nop
mov
pop
push
stos
inc
cltd
outsl
loop
push
mov
arpl
xchg
jbe
mov
ja
sti
push
and
insl
notb
jne
xor
mov
pop
int
jo
mov
adc
add
cmp
loopne
lds
xchg
push
mov
lods
adc
cli
fisttpl
lock
add
sbb
add
stos
bound
rorl
pop
cmp
outsb
outsb
sahf
gs
mov
mov
outsl
pop
and
sti
inc
push
mov
daa
lock
mov
mov
cltd
ss
xchg
xlat
ret
sub
arpl
lret
loope
ja
lret
inc
cli
jne
out
mov
mov
shll
push
adc
sbb
jns
sub
imul
pop
push
loope
pop
mov
xorl
sarb
add
testb
leave
pop
and
imul
cmp
fwait
pop
mov
cmpsb
testb
imul
imul
je
cmp
out
fsubrp
jmp
pop
in
cmpb
push
pop
fwait
mov
imul
mov
enter
in
add
jb
ret
cli
xor
add
outsb
dec
fnsetpm(287
mov
pop
pushf
sub
mov
ret
mov
std
or
jecxz
xchg
out
fidivrl
sbb
test
test
sbbb
imul
int3
mov
and
add
loop
sbb
mov
add
cmp
scas
repz
lahf
pop
hlt
ja
mov
fldcw
pop
int
sbb
movsl
jno
add
btr
push
imul
std
mov
movsl
pop
jb
aam
dec
repz
fsubrl
addr16
mov
je
cmpsb
fdivs
rorl
aad
scas
aaa
cmp
aaa
sbb
jne
je
imul
jg
adc
addr16
loope
sbb
inc
pop
and
frstor
mov
and
or
and
xor
aam
lock
addr16
mov
enter
mov
inc
xchg
lds
mov
loopne
cmpsl
bound
sbbb
and
sahf
jo
jp
mov
add
popa
sub
push
cmp
jnp
inc
xor
inc
push
pop
xor
jb
jbe
nop
xchg
data16
push
xchg
fists
cmp
mov
in
sbb
jg
lcall
pop
cmp
xchg
outsl
mov
fs
fidivl
mov
adc
xchg
or
aaa
sbb
pop
sahf
scas
jle
cmp
out
test
push
aas
shlb
mov
leave
lcall
enter
incb
movsl
movsl
lret
and
cltd
call
add
inc
and
push
aam
sar
outsb
sti
or
lods
test
mov
jnp
movsb
inc
int3
movsl
cmp
outsb
mov
stc
mov
inc
cwtl
sarl
pushf
jge
std
mov
scas
call
rolb
xor
push
fistpl
dec
fiadds
pop
cmpsl
jb
push
adc
das
sub
inc
in
loope
loope
xor
mov
dec
cmp
sbb
cmpsl
pop
cld
dec
mov
adc
xchg
in
popa
iret
loope
or
out
idivl
inc
mov
xor
pop
arpl
sub
insl
push
mov
inc
push
mov
inc
mov
sbb
sbbb
add
pop
pop
jl
aaa
push
sar
xor
es
icebp
stc
stos
inc
inc
or
mov
cmp
in
cld
inc
sbb
pop
aaa
mov
dec
xchg
pop
std
sbb
fistpll
push
or
pop
sub
xchg
adc
mov
push
cmpsl
loop
movsb
shrb
lahf
pop
pusha
xchg
mov
lret
jmp
or
jecxz
jne
rclb
jge
mov
out
sub
pop
rcll
lock
mov
and
sti
imul
or
mov
into
mov
pop
pop
loopne
je,pt
mov
fsubl
cld
outsb
or
mov
les
sbb
scas
push
push
add
mov
fs
cmp
inc
dec
out
jae
hlt
xor
sbb
imul
sub
lret
fidivrs
pusha
mov
mov
js
pop
and
shlb
ficompl
scas
loope
rcl
data16
movb
das
pop
aam
sub
bound
fldenv
inc
xchg
jmp
fwait
cli
jecxz
shlb
sbb
and
and
out
cwtl
cld
dec
dec
ljmp
aam
mul
mov
sbb
cs
bound
lcall
fdivs
jp
imul
dec
or
sub
lret
lea
std
ljmp
cmp
js
jnp
xchg
fcmovnb
mov
cld
push
sub
sub
jno
sbb
jnp
dec
fnstenv
inc
leave
mov
fucomip
sub
mov
jmp
popa
cmp
stos
sbb
stc
or
js
jb
mov
fmul
out
sub
adc
ljmp
out
mov
js
mov
and
jnp
sahf
push
mov
lret
mov
cltd
cltd
outsl
sbb
xor
dec
jne
push
icebp
sbb
add
mov
cmp
push
push
arpl
push
adc
lahf
rcr
outsb
out
and
jle
xor
xor
dec
jbe
lods
inc
aaa
movsb
inc
mov
bound
xor
sub
hlt
addr16
mov
pop
enterw
add
push
ret
sbb
push
es
jg
shl
inc
mov
dec
bound
mov
cltd
int
repz
mov
ljmp
in
je
cmp
cmpsl
dec
xchg
or
mov
pop
mov
fstl
jns
cli
fidivl
fsubrl
push
mov
sbb
inc
dec
scas
lea
mov
iret
xchg
test
jae
push
jo
xchg
add
imul
sub
mov
add
pop
and
xchg
into
in
repz
imulb
ja
push
add
adc
dec
lcall
in
rclb
cmp
xchg
scas
xor
adc
push
mov
out
mov
jge
add
ja
jne
xor
je
cmp
add
add
inc
sbb
pop
inc
cmp
cltd
jmp
divl
and
mov
rorb
jnp
jb
xchg
sbb
enter
icebp
mov
rolb
inc
and
xchg
hlt
sub
sub
cmc
jb
imul
das
pop
test
mov
mov
jo
mov
stos
mov
jle
jge
pop
mov
mov
test
push
js
pop
arpl
dec
outsl
mov
xchg
mov
std
adc
pop
shll
and
push
mov
push
xchg
sbb
sbb
lods
les
dec
scas
jl
int
and
push
dec
adc
minps
les
push
int3
popa
mov
adc
sysexit
pop
sub
loop
stos
loop
call
or
sub
mov
jg
push
push
cmp
cmp
inc
add
ja
sub
test
stos
adc
pop
dec
loop
jmp
inc
push
add
jmp
in
mov
sub
xor
pushf
pop
stos
mov
popa
push
add
dec
jle
or
dec
or
mov
sub
xchg
mov
dec
std
mov
push
sub
pop
ds
lods
mov
dec
cmp
lock
pushf
aad
add
or
daa
pushf
or
push
add
fwait
dec
aad
pop
pop
fisubs
mov
out
int
jne
insl
sbb
adc
jnp
pop
inc
imul
xlat
adc
pop
adc
xchg
rcrl
loop
mov
je
sbb
js
add
jno
jecxz
pop
popf
mov
int
jnp
xor
pop
fsts
orb
xchg
xor
cmp
aaa
js
inc
fcmovnu
xor
inc
add
scas
push
jge
inc
adc
sbb
mov
insl
jle
sub
out
cmpsb
adc
mov
arpl
enter
ret
fdivl
xlat
pushw
out
cltd
push
out
cli
or
push
gs
mov
cmpsb
xor
sub
mov
lret
mov
repz
xchg
loope
mov
and
ja
mov
shlb
push
das
loopne
sbbb
pop
out
aad
insl
sub
sbb
aam
pushf
mov
cs
cmc
mov
or
pop
mov
xchg
xor
movsb
fs
cwtl
jbe
cli
rol
xor
gs
imul
movsl
sub
mov
aad
inc
clc
adc
shlb
es
es
fwait
add
add
inc
adc
pushf
int3
mov
push
mov
sbb
sub
sbb
es
subb
adc
jns
jg
mov
insb
mov
adc
iret
and
inc
pushfw
out
movsb
xor
xchg
iret
sub
mov
es
data16
add
and
and
pop
or
test
add
inc
mov
in
inc
aad
test
or
xor
pusha
arpl
repz
cmc
scas
ja
xlat
and
pop
aaa
test
cmc
xchg
test
add
push
ljmp
arpl
test
sub
ds
ret
jnp
jno
dec
aaa
add
jns
xchg
cmp
pop
mov
jmp
jle
rorl
int
mov
js
popf
inc
cmpl
fisubs
sub
mov
xchg
push
popf
adc
imul
or
cmp
scas
ret
aad
inc
push
loop
cli
sbb
xchg
adc
mov
inc
pushf
xchg
mov
jle
cmpsl
inc
cmp
mov
push
inc
mov
out
mov
xchg
stos
dec
out
fnstenv
mov
test
daa
mov
xlat
int3
jl
in
dec
test
adc
fisubrs
lcall
jne
cmp
iret
sub
jnp
mov
xchg
pop
lahf
mov
dec
and
addr16
cmp
mov
jno
adc
and
pop
jle
or
gs
in
sbb
jne
aam
jbe
pop
jbe
in
outsb
pop
pushf
outsl
ljmp
pop
call
lcall
cltd
pop
pop
push
jno
insb
repnz
and
adc
aam
or
in
out
repz
cmp
inc
inc
es
mov
mov
loopne
add
pusha
out
adcb
dec
out
es
jl
cmp
imul
xor
je
iret
or
pop
push
add
inc
jmp
scas
jnp
rcl
xchg
je
add
xor
hlt
jecxz
adc
xlat
adc
sbb
into
lret
loopne
and
jge
call
imul
xor
lods
xchg
mov
xor
test
or
mov
in
cmp
scas
inc
xor
out
test
clc
adc
inc
ret
mov
in
jne
xlat
add
js
in
jne
lock
les
mov
cmp
fwait
testl
enter
stos
aas
cmp
pop
shr
in
pop
inc
xchg
lret
aad
scas
mov
xor
mov
out
fcmovne
int3
lods
xchg
cvtps2pi
cltd
xchg
inc
js
dec
ds
add
fisttps
rorl
push
jl
psrld
in
mov
jecxz
cltd
into
xor
sub
dec
mov
ljmp
mov
mov
shrb
dec
mov
pop
jg
scas
xlat
pusha
in
call
inc
test
loope
aas
jb
fcompl
fs
sub
cmp
pop
cmpsl
xchg
or
addr16
jne
adc
scas
in
mov
dec
jnp
fimuls
stc
jo
jmp
cltd
xchg
cmp
into
cwtl
inc
mov
inc
jo
sti
fdivs
pushf
xor
mov
adc
movsb
aas
inc
iret
into
arpl
lods
cmpsb
xchg
push
xor
inc
xor
jae
outsb
rcl
sub
jmp
sbb
push
ret
rclb
cli
adc
sub
pop
push
fimull
or
sub
testl
add
fucomi
fst
mov
mov
mov
frstor
xor
add
nop
xchg
sarl
stc
out
ljmp
aad
jbe
insl
xchg
lret
jb
jns
outsb
inc
insl
movsl
inc
cmp
in
push
mov
mov
mov
lret
fs
je
jns
dec
pop
int
mov
fcoml
and
dec
test
js
push
mov
push
pushf
testl
jno
jle
dec
dec
or
adc
mov
pop
stos
test
xchg
push
mov
mov
cmp
mov
in
adc
repz
and
xor
sbbl
jno
sub
jp
lods
popa
test
fst
fisubs
xchg
inc
push
ret
lcall
inc
dec
cmp
pop
push
ja
addr16
mov
xchg
xor
test
push
out
pop
xor
sub
cmp
mov
mov
cmp
cmc
inc
int
dec
movsb
inc
jae
cmp
movups
xor
cltd
dec
loopne
mov
fsubrs
insb
fsts
dec
mov
pushf
xchg
lea
push
loope
test
sub
xchg
fildl
sahf
or
cld
int3
mov
dec
xor
or
xor
jne
sbb
or
outsl
aad
mov
aas
ret
repz
shll
adc
sub
punpckhdq
jmp
divb
inc
jb
aas
imul
mov
add
mov
jmp
fucomip
adc
jecxz
out
das
leave
xchg
int3
pop
stos
jg
xchg
jl
aas
or
mov
pop
add
pop
pushf
xchg
jge
xor
jb
mov
mov
cld
xlat
loop
mov
pop
mov
rorb
sbb
inc
sbb
leave
faddl
cmp
sbb
daa
ja
adc
addl
cltd
fidivs
test
shlb
inc
insl
lahf
lahf
daa
into
mov
push
push
push
or
push
aaa
sbb
pop
jmp
mov
push
les
out
test
notl
out
je
cld
rolb
fldcw
sbb
cmp
in
mov
scas
push
dec
movd
rolb
push
in
jp
mov
adc
cmp
xlat
push
jecxz
fs
push
sarl
xchg
add
scas
icebp
xlat
jbe
cwtl
fisubl
mov
jle
add
jnp
cmp
sub
and
mov
outsb
jne
test
inc
in
jnp
sbb
inc
cmpsb
dec
xchg
jp
or
out
adc
pop
shlb
jnp
push
sbb
mov
or
inc
hlt
inc
xorl
pushf
insl
adc
lret
mov
stos
movsl
rcl
mov
lcall
call
push
add
rcrl
mov
dec
add
leave
xchg
sarb
add
leave
outsl
mov
leave
mov
or
push
xor
cmpsl
cmp
loop
je
mov
jle
mov
cmc
leave
ret
dec
js
fldenv
adc
fildll
ss
sti
mov
movsl
dec
loop
mov
aad
pushf
cld
adc
mov
mov
dec
dec
cmp
push
lea
test
in
adc
pop
std
leave
dec
les
jecxz
stos
pop
mov
and
jnp
jl
push
push
xorl
and
rorl
ljmp
idivl
fisttpll
pop
mov
fisubl
pusha
movb
rep
push
adc
xor
sbb
imul
pop
enter
shlb
xor
xor
sbb
mov
push
or
into
lods
and
rorb
ret
call
outsl
mov
fimuls
xchg
call
fsts
cwtl
mov
push
cltd
or
mov
fmull
and
nop
add
sub
gs
aam
xchg
sarl
out
loop
or
mov
div
cmp
sub
dec
add
mov
js
cmp
mov
stos
ret
and
lahf
je
daa
rcr
je
jmp
in
push
push
dec
lahf
mov
pop
cmc
imul
mov
inc
lea
std
push
push
cltd
ret
jecxz
enter
jmp
sub
and
fwait
jo,pn
hlt
mov
rolb
fwait
sub
push
cs
imul
ljmp
mov
pop
jbe
fmuls
sub
mov
cli
sbb
dec
xlat
jl
mov
xor
fadds
inc
aam
out
gs
popf
in
cltd
xchg
mov
and
sbbl
cmp
jge
insb
add
mov
sub
or
in
inc
sub
sbb
nop
fwait
cmp
jb
mov
add
push
cmp
and
lcall
mov
movsb
xor
mov
or
add
fimull
jle
inc
out
jbe
clc
cmp
cmp
js
pop
repz
push
movsl
in
je
shlb
or
add
add
mov
es
leave
pusha
dec
inc
outsl
pop
xlat
rcrb
pop
jns
testb
mov
push
xchg
pop
aas
sti
jo
cmc
gs
sbb
cwtl
aam
mov
lret
fstpt
hlt
push
ret
mov
not
int3
aam
sub
fistpll
jbe
setnp
pop
rclb
fsubs
lret
repnz
jl
jns
xor
popl
push
iret
pop
mulb
enter
xchg
mov
mov
insb
fidivl
push
cmp
fs
dec
push
cmpsb
and
add
mov
fwait
and
mov
sub
cli
and
sub
lock
and
mov
jp
fidivrs
mov
stos
clc
add
jl
out
ja
jmp
cmp
iret
inc
ret
int3
sub
cmp
loope
dec
scas
movsl
out
aas
mov
add
xor
sub
sub
pop
inc
icebp
pusha
mov
mov
pop
adc
lret
mov
nop
sub
cmp
loopne
out
xor
cmp
or
or
stc
mov
xor
sbb
push
pop
add
loope
adc
inc
jne
sub
int
into
sub
jne
pop
ret
ror
int3
sub
fsubrl
mov
add
nop
xchg
cmpsb
and
adc
adc
and
adc
mov
jo
sarl
cmp
movb
xor
lea
push
cmp
inc
enter
into
lock
mov
imul
sahf
jecxz
dec
lods
mov
sti
and
leave
adc
mov
add
lcall
loopne
pop
xchg
bound
and
mov
cld
xchg
xchg
ret
and
sbb
mov
push
add
xor
jecxz
pop
in
and
adc
call
cmp
sarl
add
push
jo
cmpsl
mov
lret
mov
jnp
gs
xorl
xchg
push
jge
loope
dec
mov
mov
mov
test
mov
xor
push
gs
jecxz
xor
and
in
arpl
mov
xor
inc
cltd
xchg
add
and
push
lock
and
pop
shl
ret
lret
mov
jp
sbbb
add
mov
add
mov
lds
sbb
fstpl
add
loope
cmp
stc
push
test
mov
add
fwait
test
fdivs
pop
test
cmc
cmpsb
mov
and
insl
rcrl
out
in
sbbl
fsub
pusha
cld
dec
cmp
aad
imul
inc
pop
dec
xor
mov
mov
push
fidivl
cli
xor
icebp
mov
int3
jae
call
cmp
inc
rorb
add
sub
and
outsb
cli
lret
jae
cmp
hlt
xorb
cmp
mov
jno
adc
sbb
mov
notb
or
mov
pop
jb
pop
rol
jbe
subl
addr16
fistl
xchg
sahf
enter
adc
jo
fidivs
adc
sub
icebp
js
mov
cmpsl
lods
xlat
xlat
arpl
imul
or
jno
push
cmp
and
inc
sbb
xchg
lods
shrb
jo
jle
arpl
movsb
ljmp
loopne
inc
cli
jb
insl
mov
push
pop
dec
ss
adc
dec
popf
ffree
or
push
add
jo
jns
push
addl
and
fidivrs
dec
pop
test
sbb
jp
nop
adc
mov
push
inc
mov
dec
scas
in
enter
add
jnp
mov
add
jle
xor
pop
lods
push
push
pop
add
aam
mov
mov
div
cmpsl
and
fstpt
gs
xchg
imul
inc
ss
shlb
xor
inc
mov
into
xchg
jecxz
adc
and
xchg
outsl
cmc
push
dec
repz
jns
test
xchg
pushf
pop
xchg
mov
and
test
mov
pop
and
fldcw
call
cwtl
shll
clc
push
aad
fs
dec
pushf
mov
mov
loopne
sahf
mov
cmp
inc
xorb
inc
mov
adc
pusha
pusha
das
push
jo
push
ret
push
pusha
clc
test
jecxz
adc
cli
sahf
data16
jb
popa
adc
movsl
stos
mov
pop
dec
mov
test
lods
lret
sahf
mov
pop
xor
add
sarl
ljmp
mov
sub
add
xchg
sub
add
jg
ja
sbb
and
js
cmp
scas
std
fwait
sbb
mov
scas
or
or
ffreep
idivb
xchg
movsb
sub
add
enter
xchg
or
dec
or
je
movsb
ficoml
jg
xorb
loopne
push
or
loope
xchg
scas
pop
loope
test
hlt
dec
push
jno
pop
cmp
negb
jge
xchg
enter
mov
jmp
mov
jecxz
push
push
out
fwait
sub
insl
push
push
stc
and
out
pop
xor
push
xchg
inc
mov
and
push
pop
addr16
xchg
push
sahf
fsubl
and
xchg
pop
lea
lahf
scas
mov
hlt
mov
pop
data16
stos
mov
pop
dec
outsl
push
aaa
std
testb
sub
mov
sub
xor
add
xchg
in
adc
add
mov
pop
mov
arpl
fdivrl
push
jecxz
out
bound
scas
xor
in
outsl
std
xor
add
in
into
push
pop
jmp
out
add
inc
jg
mov
mov
pop
xchg
out
ljmp
adc
cmp
push
out
int3
push
test
mov
int
adc
sbb
pop
xchg
or
ss
call
out
xchg
jl
rorb
sahf
dec
or
xchg
shl
dec
loope
mov
adc
fcomi
mov
pop
push
sub
fucomip
push
rcll
les
mov
mov
popa
sub
adc
cmpsl
data16
pop
clc
mov
mov
dec
xchg
and
clc
adc
mov
pop
dec
aad
pop
mov
dec
adc
and
push
test
pop
imul
mov
pop
add
lods
dec
mov
mov
ret
out
sub
adc
repnz
ret
xchg
das
xlat
push
adc
test
call
xlat
test
lea
xor
add
xor
dec
js
jb
orl
pop
dec
shll
sbb
fld
js
mov
jnp
xchg
xchg
leave
push
test
mov
loope
sahf
movsl
lahf
cli
and
dec
jo
xor
in
pop
pop
movsb
in
xorb
xchg
xchg
notb
mov
jne
adc
jge
in
xor
stc
xchg
fwait
cmpsl
jnp
leave
or
jg
or
adc
ss
mov
inc
dec
adc
or
in
cmp
inc
or
mov
adc
xchg
mov
or
nop
or
incb
hlt
mov
or
negl
dec
fs
nop
inc
data16
add
sbb
add
enter
or
fsubrl
fdivs
pop
das
loop
inc
jmp
daa
add
xchg
jne
insb
mov
repz
fidivl
dec
inc
push
in
fcompl
inc
jb
loope
lret
arpl
cmp
lret
repz
pop
addr16
loopne
jle
test
sbb
and
push
lcall
cmpb
cmp
loop
ds
jl
jo
lret
ja
inc
push
push
mov
mov
int3
mov
cltd
push
test
xorl
popf
mov
jg
mov
or
mov
shrb
inc
jl
scas
dec
lahf
sti
lret
sub
xchg
inc
add
cmp
lock
mov
sbb
test
daa
sbb
pop
fldcw
and
xlat
inc
ja
sbb
rolb
aad
les
jge
add
cs
push
dec
cmpsl
rcl
mov
cli
and
gs
jno
shll
cmp
addr16
lcall
push
outsl
movsl
add
ljmp
adc
sub
pop
lds
push
sarl
mov
fnstsw
int
mov
inc
repz
inc
inc
adc
scas
cmp
sbb
xchg
orb
pop
sahf
and
mov
fsts
xchg
ret
mov
push
push
rclb
orl
push
pop
sub
repnz
xchg
push
out
pop
mov
sbbb
insl
or
popa
xor
mov
bound
sbb
inc
push
pop
sub
lock
pop
mov
push
jnp
std
mov
scas
inc
cld
cmc
stos
xchg
lret
jp
sbb
cld
add
pop
add
mov
push
stos
cmp
xor
cmp
xor
sub
mov
mov
add
or
mov
or
xchg
ret
sbb
dec
outsb
inc
cmp
push
cmc
cmp
push
xor
push
call
fbstp
das
sti
jns
xor
rolb
in
movsl
shll
mov
sbb
xor
jmp
push
lods
fwait
pop
xchg
dec
sub
and
movsl
movsb
icebp
lret
stos
pop
mov
sbb
pop
mov
xchg
lcall
fnstsw
jge,pn
adc
push
es
jmp
mov
insb
dec
popa
cli
clc
jmp
fdivrs
push
shll
mov
jl
imul
xor
popa
lcall
mov
mov
mov
push
cmpsb
jae
or
dec
jb
lea
popa
stos
bound
popa
mov
insl
cwtl
cs
jge
loopne
out
mov
mov
popf
insb
inc
in
and
fistpll
or
sub
cmp
push
mov
hlt
cli
pop
sbb
mov
xor
inc
lahf
dec
xor
call
test
xchg
leave
sbb
mov
nop
mov
fs
xor
repnz
in
imul
mov
and
filds
mov
ljmp
sub
addl
adc
enter
xor
rolb
pop
or
jne
mov
pop
mov
xchg
pop
adc
xchg
bound
out
out
push
add
add
mov
inc
cld
nop
gs
push
dec
data16
scas
cmpsb
int3
dec
pop
mov
js
jg
cmc
fistps
mov
xlat
dec
leave
inc
push
lret
xchg
xchg
jmp
movsl
aam
jge
cmp
loop
mov
mov
pop
pop
andl
push
call
lods
mov
rcrl
adc
mov
jae
icebp
ret
xchg
sahf
lcall
mov
data16
inc
outsb
dec
adc
jle
xor
mov
jge
insb
stos
call
and
push
pop
pop
nop
out
xchg
arpl
movsb
push
jnp
dec
xor
out
out
dec
dec
fwait
or
push
sub
sbb
push
mov
sbb
add
push
or
call
mov
and
incl
mov
mov
lret
sub
mov
sub
jmp
mov
sti
das
lahf
sar
andl
test
sub
add
or
jns
dec
mov
imul
sbb
mov
adc
cld
fimuls
mov
jnp
sarb
jo
mov
sub
ss
loopne
fs
test
dec
inc
adc
dec
scas
jb
stos
add
out
push
arpl
ljmp
shrl
pusha
andb
cmpsl
imul
insb
repz
jecxz
xlat
mov
cmpsb
fwait
orl
movsl
aaa
lret
cmp
ljmp
in
xchg
rolb
into
sbb
or
mov
jo
fnop
outsl
cwtl
push
or
aaa
and
dec
loopne
sub
loope
movl
das
clc
pusha
mov
adc
mov
mov
pop
or
aas
xchg
nop
jbe
xor
xor
sbb
dec
and
movsb
or
mov
mov
negb
and
sbb
and
subb
adc
mov
push
pusha
lret
test
arpl
outsb
pop
jmp
cmc
pushf
divl
mov
pop
sbb
std
push
sti
sti
les
mov
mov
mov
insb
pop
sbb
mov
jl
es
and
int3
es
mov
nop
fwait
loope
mov
shll
gs
push
mov
lret
sbb
xor
push
stc
add
jg
or
jb
add
push
mov
icebp
add
icebp
gs
jo
dec
sbb
pop
fdiv
push
inc
jbe
repnz
lods
xorb
or
imul
jnp
movsb
xchg
popa
mov
inc
xchg
sbb
loopne
into
inc
adc
lods
movaps
mov
or
sahf
pop
and
or
xchg
shlb
mov
jle
ljmp
movsb
jno
scas
mov
sbb
divl
pop
test
icebp
testb
sub
cmp
pop
nop
les
mov
dec
aas
adc
mov
xlat
andb
aad
cmp
pop
idiv
iret
sub
rorb
addl
add
lods
test
or
jmp
insl
mov
pop
push
jle
or
jnp
xchg
daa
cmp
rclb
ja
lcall
pop
in
sub
push
add
dec
mov
addl
mov
or
push
jae
adc
adc
mov
cmpsb
dec
rorl
mov
dec
xchg
inc
test
ret
cmp
pop
test
inc
lret
out
mov
lock
test
adc
push
shlb
and
leave
stc
loop
in
in
sti
sbbb
test
iret
xchg
mov
stos
mov
sbb
scas
xor
in
jb
mov
out
outsl
rcrl
lea
mov
js
or
enter
sti
ret
nop
cltd
or
fwait
push
xchg
pop
testb
xchg
jne
adc
add
std
cmp
mov
movsb
out
sbb
sub
jo
fwait
pop
mul
sbb
cwtl
and
outsb
push
lods
inc
jmp
sbb
xchg
cmp
int3
push
push
aad
cmp
imul
sub
sub
jg
in
jns
push
push
xchg
xor
xchg
and
div
jmp
lds
cmc
lcall
stos
sub
fidivrs
cmp
adc
dec
inc
fmulp
pop
mov
lret
pop
dec
mov
dec
outsb
mov
bound
push
or
inc
inc
sub
adc
frstor
rol
fsubr
outsb
push
or
insb
aam
ficomps
pop
sub
push
push
rorl
jne
add
into
mov
xor
icebp
int3
mov
jge
xlat
imul
insb
xor
jg
fcoms
adc
enter
iret
cmp
mov
jno
push
jg
notb
add
test
jo
repnz
mov
sub
es
repnz
lock
and
clc
hlt
dec
jecxz
jp
mov
or
jle
push
rcrb
loopne
out
mov
sub
popa
dec
ror
out
cmpsb
lods
mov
mov
leave
cmpsl
dec
push
xor
jnp
dec
push
in
jb
sbb
mov
out
adc
out
lds
incl
dec
es
pop
cmp
jp
mov
cmp
cld
out
jb
dec
stc
notl
ljmp
hlt
aad
sbb
cmp
and
pop
xchg
sbb
add
jbe
movsl
scas
pop
inc
and
ret
ficoms
hlt
out
jmp
sub
arpl
into
mov
mov
sbb
dec
outsl
iret
aaa
out
mov
cmp
sub
mov
clc
stos
movsb
mov
dec
mov
aas
pop
inc
cmp
xchg
fidivs
ret
pop
or
dec
add
adc
jg
aas
add
adc
lahf
jns
fldenv
xchg
and
jg
out
jne
insb
xor
scas
or
fiaddl
mov
sub
cmp
add
dec
xor
movl
mov
cmc
js
sub
push
lock
xor
shrl
in
lcall
cs
sbb
push
ds
mov
push
mov
lcall
out
divps
dec
adc
pop
inc
or
je
sub
popa
pop
pop
sbb
dec
dec
loop
push
arpl
xor
arpl
ss
popf
sub
inc
fcmovbe
push
jmp
mov
pop
ret
fcom
pop
xor
icebp
outsb
pop
cmpsl
jnp
pop
fadds
mov
xchg
dec
rorb
jmp
jne
push
call
xchg
mov
lock
push
lahf
and
xchg
cmpsl
je
or
mov
xor
test
loopne
mov
fidivrl
scas
loope
outsb
cli
mov
and
cmp
pop
data16
aam
pushl
mov
xor
cli
into
fsubl
sbb
out
xor
push
dec
ja
mov
in
mov
shll
les
daa
in
pusha
jge
dec
fwait
xchg
lahf
gs
ljmp
xchg
jmp
into
xor
test
les
xlat
cmpsl
popa
mov
and
pop
inc
pop
rcrl
sarl
mov
frstor
push
daa
push
data16
movsb
stos
negl
lcall
mov
shl
sub
ret
mov
push
add
xor
cmpsb
push
sbb
or
pushf
push
xchg
xor
xlat
inc
add
mov
out
pop
mov
pop
stos
sub
rclb
lea
lods
repz
dec
lahf
ret
mov
in
ljmp
inc
jp
rorl
icebp
push
dec
mov
cmpsl
push
lret
mov
dec
adc
and
mov
insb
mov
adc
pop
adc
mov
xchg
xlat
dec
movsb
pop
or
jo
movsl
or
scas
es
bnd
mov
xchg
aam
sarb
sub
sbb
out
out
into
addr16
jns
lods
aam
sbb
mov
ror
addr16
sub
push
mov
sahf
loopne
mov
outsl
cld
add
fiaddl
fxtract
pop
jl
pop
cmp
cwtl
mov
and
pushf
pop
aaa
jp
in
mov
scas
mov
stos
mov
in
addr16
das
fwait
aam
cld
or
sub
cmp
jae
ss
cmp
sub
pusha
jno
aam
adc
mov
mov
sub
add
in
pop
fwait
insl
fnsave
popa
push
fucomi
jns
or
xor
mov
dec
push
push
test
xchg
mov
push
gs
jmp
fldenv
les
cmc
xchg
pop
or
push
push
ds
inc
insl
adc
sbb
xchg
fstl
lea
dec
jae
pop
loopne
aad
jle
leave
and
sbb
push
adc
dec
jb
cltd
insl
pop
js
inc
jl
push
in
pop
out
push
lods
sbb
mov
arpl
push
pop
inc
dec
cmp
mov
testb
int
push
fwait
bound
and
add
adc
das
cmpb
inc
fdiv
sub
and
jne
xchg
sub
mov
mov
push
cld
or
jae
push
lods
test
sbb
lcall
adc
icebp
lret
and
dec
push
aad
inc
ret
ja
rcrl
mov
push
scas
adc
xchg
ja
nop
dec
xchg
sahf
push
sbbb
sbbl
pop
pop
test
inc
ljmp
in
flds
popf
jbe
jnp
xor
cld
mov
jnp
stos
cmpsl
add
xchg
sbb
push
mov
scas
ret
sub
pushf
adcb
xor
rcrl
mov
addr16
lods
add
fnsave
aaa
mov
clc
daa
inc
cwtl
dec
add
sub
add
out
mov
pop
shlb
ret
add
sti
adc
xor
pop
push
mov
or
and
jne
pop
mov
xchg
fcmovb
pop
aas
inc
cmp
or
pop
jl
flds
stos
int
xlat
xchg
lahf
nop
fs
push
mov
dec
int
cmp
mov
push
jns
and
dec
xchg
xor
adc
ror
out
sbb
inc
jge
xor
and
fnstcw
sbb
cmpsl
rorb
dec
lret
xchg
sti
fidivl
xor
lock
shr
into
sbb
cmp
shlb
xor
jl
movsl
enter
clc
cmc
push
pop
and
jle
out
in
add
mov
push
cmpsl
insb
and
lret
mov
cmpsb
xchg
lds
scas
adc
push
cwtl
mov
mov
push
int
aam
dec
je,pt
sti
dec
arpl
repnz
mov
mov
and
scas
test
insl
push
ficoml
out
in
lds
pop
andb
cmp
out
in
mov
cmc
mov
push
dec
mov
jne
add
xchg
outsb
aam
pop
bndldx
inc
movsb
std
adc
jns
icebp
jp
popf
pop
pushf
pop
icebp
ds
cmp
sbb
sbb
icebp
or
stc
enter
stos
and
shll
ds
sub
jp
arpl
dec
icebp
mov
jge
mov
mov
cmp
inc
loop
adc
adc
fs
sub
repz
mov
fdivp
sbb
pop
mov
test
fucomi
js
out
add
inc
inc
inc
or
cmp
cmpsl
sbb
or
fdivrl
xchg
cmp
daa
push
mov
idiv
repnz
pop
and
xchg
pop
int
mov
addb
stos
shlb
dec
push
in
push
cli
xor
cli
sub
ds
dec
xchg
ljmp
and
aam
xchg
xor
das
lahf
stc
in
push
les
dec
shlb
sub
push
ja
sub
dec
sbb
pop
fwait
and
sbb
fnstenv
xchg
mov
ret
loope
arpl
jno
mov
xor
mov
cmc
aas
outsb
paddw
aas
dec
daa
addb
enter
test
mov
ja
roll
pop
add
test
adc
add
push
cli
mov
cmpsl
test
sbb
test
rcr
mulb
push
or
jnp
xchg
and
inc
hlt
clc
movsl
out
out
jns
adc
fcoml
and
pop
std
jl
pop
adc
and
mov
fidivrs
ds
or
ficomps
mov
movsb
pop
fmuls
stos
insb
cmp
xchg
inc
fstpt
imul
and
enter
push
push
and
js
sub
xchg
daa
mov
pop
sbb
out
mov
xchg
outsb
or
fidivrl
push
pop
dec
leave
push
int
dec
jecxz
addl
xor
arpl
popa
aas
in
insl
aad
mov
gs
je
mov
stos
jb
fdivs
std
lea
push
movsb
jg
outsl
cmp
push
dec
push
xchg
out
outsl
inc
push
pop
or
das
pop
xchg
cmp
or
jmp
into
mov
mov
sbb
lret
mov
ja
xor
jl
jns
movsl
jle
mov
iret
push
icebp
sbb
mov
stc
lret
cmp
arpl
into
jo
and
ja
fwait
push
mov
sbb
rcll
lahf
xchg
sahf
xchg
movsl
sub
inc
sbb
in
lock
mov
filds
mov
cmp
pop
hlt
jmp
cmp
popa
xchg
dec
or
jp
addr16
xchg
and
ljmp
and
adc
out
dec
cld
lods
lcall
in
sahf
out
out
icebp
out
clc
pop
and
pop
sarb
cli
mov
push
mov
mov
mov
pop
push
cmp
shlb
mov
hlt
insl
mov
rorb
push
fs
xchg
imul
addr16
dec
inc
sbb
add
adc
ret
movsl
loope
aam
mov
dec
pop
in
inc
pop
iret
jno
push
and
xchg
push
cmp
jge
jg
push
lahf
fcom
js
dec
mov
sbb
push
mov
dec
call
loopne
inc
pushf
lods
stc
cmc
jo
jle
mov
push
shrl
int
xor
cs
push
xlat
sbb
insl
cmp
mov
scas
inc
data16
ret
pop
adc
imul
bnd
mov
mov
mov
and
mov
sbb
add
test
lea
add
adc
sarb
sub
sub
xchg
pusha
and
in
pop
pop
lret
inc
andw
lcall
sub
push
mov
push
xor
mov
addr16
lds
inc
cmpsl
arpl
movsb
cmp
aad
mov
pusha
je
sarl
icebp
nop
mov
sbb
in
pop
movsl
cmp
adc
test
push
xchg
out
push
rol
xchg
inc
in
sub
stos
sbb
jbe
bound
dec
repnz
rolb
sbb
sub
aad
mov
mov
and
sar
sub
inc
jmp
data16
sub
sbb
xor
adc
mov
jnp
cmp
pmulhw
jae
adc
mov
jnp
lret
cltd
fimuls
loope
rorb
rolb
and
in
cmc
adc
jle
mov
mov
push
aad
jae
rcrl
dec
rorl
out
sbb
xchg
or
cmc
xchg
negb
int
sbb
aad
loop
xor
xchg
les
in
jecxz
mov
daa
scas
add
or
lret
jmp
lret
cmpsl
cmc
sub
push
pop
push
xor
repz
mov
test
sbb
lock
jno
dec
xor
dec
xlat
xchg
pop
in
dec
mov
jno
add
sahf
inc
pop
inc
mov
movsb
mov
add
inc
call
sub
ret
and
push
scas
aam
jmp
jne
jb
sub
xchg
je
aas
mov
iret
xor
jnp
enter
pop
xchg
js
adc
and
and
add
mov
out
addr16
test
mov
mov
jb
mov
cmpsb
rcll
loope
lea
mov
and
movsl
ljmp
out
js
rcrl
repz
or
loope
xchg
push
call
and
lcall
push
popa
mov
adc
xor
sbb
adc
dec
int3
das
rcr
pushf
enter
test
add
mov
fcomps
imul
push
dec
in
mov
sti
xor
movsb
mov
push
or
scas
pextrw
xchg
mov
pop
arpl
test
xchg
jns
and
push
push
inc
jbe
leave
sub
pusha
xor
adc
out
adc
mov
fs
cltd
loope
jns
filds
sar
lods
jns
fs
xor
insl
insb
adc
push
mov
lcall
dec
pop
cmp
adc
push
and
dec
mov
lods
fwait
dec
mov
jno
push
xchg
or
mov
push
sbb
push
lods
fs
imul
jnp
sti
sub
adcl
xor
clc
ret
hlt
packssdw
lret
cli
sbb
xchg
add
sbb
mov
rol
or
xor
adcb
inc
sub
mov
cmp
mov
push
xor
xchg
popf
mov
fistps
clc
cmp
xor
lahf
daa
outsl
cs
push
push
push
cmp
ret
jl
insl
sarl
cmc
ret
test
lcall
stos
sub
jmp
pop
inc
ret
mov
inc
aas
sti
jmp
mov
lods
adc
xor
movsl
out
fcomps
xor
push
mov
dec
cmp
or
stos
xchg
or
cmp
jle
mov
xchg
sub
mov
or
dec
daa
into
dec
or
sbb
sahf
stc
mov
insb
sti
in
test
sub
mov
jmp
sub
sbbb
mov
ljmp
and
sti
fldl
mov
dec
andb
pushf
cwtl
xlat
or
int
mov
inc
test
js
addb
push
mov
roll
push
mov
scas
fsubs
pop
popa
ljmp
xor
or
xor
sbb
mov
aad
adc
ret
cmp
pop
push
movsb
adc
lea
int
shll
repz
jbe
sub
push
movsl
sub
xchg
fildll
in
sbb
in
pop
data16
jl
lds
les
sbb
stos
xlat
xchg
shr
push
mov
mov
dec
sbb
rcr
or
lret
cmp
out
pushf
push
xchg
dec
push
mov
dec
stos
cmp
mov
repnz
cmp
cmp
movb
int3
mov
imul
in
xchg
lret
jbe
cmc
jb
pop
inc
dec
push
sahf
pop
lods
mov
decb
cmc
rclb
sarl
sub
and
daa
in
leave
lods
rcrb
test
lods
add
pop
into
in
loop
lret
repnz
mov
fld
sub
inc
popf
jl
jnp
xchg
dec
iret
pop
ljmp
mov
aaa
sub
xor
cmp
movsb
and
inc
cmpsb
sbb
pop
cld
ds
std
push
xor
jae
mov
std
mov
mov
pop
in
pop
pushf
pop
iret
lret
int3
scas
and
cmc
jmp
aam
imul
pop
and
mov
leave
fcom
out
inc
addb
lods
outsl
nop
das
mov
sub
lock
int
jno
es
and
pop
icebp
rcrb
jmp
pop
jnp
cmp
fwait
cs
sbb
ja
frstor
insb
or
sbb
jmp
in
cmp
data16
fwait
rorl
shl
pop
lds
loope
pop
mov
push
jo
add
aas
push
jne
call
xorl
mov
dec
cmpsb
outsl
inc
cmp
test
fnstenv
fcmove
mov
jmp
mov
int3
xor
push
loop
xchg
fsubrs
aad
cmp
xchg
lret
or
lods
mov
lock
add
sbb
dec
fists
lret
jnp
mov
add
pop
stos
lods
push
pop
int3
shlb
loopne
fistpl
test
mov
cltd
sbb
ret
mov
lea
xor
sub
insl
cld
ror
adc
test
pop
shll
std
fcoml
push
pop
jnp
inc
sbb
add
popf
sti
sbb
dec
hlt
add
inc
or
push
jno
dec
push
push
xchg
cmp
fists
fmull
movsb
sbb
aaa
sub
into
pop
fsubrp
clc
int3
shlb
dec
jle
loope
ljmp
addr16
dec
add
mov
sub
movsl
out
xor
xor
loopne
jae
shrb
ret
cmpsb
rcrl
push
cmp
sbb
iret
les
test
pop
orl
pop
fwait
dec
push
arpl
stos
sti
and
rolb
mov
mov
test
insb
push
mov
jbe
or
jg
xchg
mov
pop
xlat
jae
pushf
mov
lea
dec
je
adc
push
sub
daa
add
mov
clc
jae
cmp
mov
push
xlat
in
or
and
push
pop
fidivl
cmp
lret
pushf
mov
and
adc
or
cmp
cmp
scas
mov
push
icebp
pop
rol
jo
test
lret
shl
outsb
push
mov
adc
leave
push
mov
popa
les
test
repnz
fistpll
sub
addl
fs
mov
mov
ss
dec
add
mov
mov
mov
mov
lods
adc
cmpsb
or
arpl
xchg
dec
into
mov
mov
jns
adc
repz
jo
stc
shlb
add
add
adc
shr
add
shll
adc
pop
pop
out
fnsave
out
fsub
and
dec
pop
jmp
inc
jo
jl
jnp
sub
xchg
mov
mov
push
xor
push
pop
or
fsubrl
movsb
dec
and
add
addr16
insl
pop
cmp
pop
pop
xchg
dec
test
sahf
cmp
mov
pop
push
loop
and
lods
enter
lock
jecxz
lcall
nop
dec
jbe
mov
outsl
push
xchg
iret
mov
stos
shlb
or
fists
sub
loop
pop
dec
shlb
inc
mov
les
push
mov
repnz
les
sbb
mov
sub
mov
data16
xor
jle
ds
pop
xor
pop
es
lods
pop
movsb
movsb
jge
fiaddl
mov
mov
sbb
cmp
jo
rcrl
and
adcb
ds
lret
pop
dec
lea
popl
and
lods
stos
dec
mov
sub
push
icebp
movsl
and
mov
mov
addb
es
das
dec
add
pop
scas
mov
into
pop
push
popf
fdivrs
dec
scas
mov
jmp
fs
je
dec
mov
mov
inc
ljmp
mov
in
int
test
addb
jne
mov
lret
es
pop
xorb
cs
add
loopne
sub
popf
xor
hlt
mov
ret
pop
inc
adc
gs
roll
push
mov
stos
std
inc
int3
dec
mull
into
pop
push
add
fistl
movsb
imul
or
sub
movsl
cmp
mov
sahf
push
into
lods
ja
or
out
imul
inc
jmp
mov
leave
or
xorl
and
scas
scas
orb
fs
cwtl
imul
fsubrs
sbb
cmp
mov
mov
xor
mov
movsb
sbb
mov
movsl
pop
bound
adc
data16
mov
mov
xor
aam
or
push
idiv
inc
and
sub
lret
in
in
mov
lret
inc
lea
iret
pop
orb
pushf
jmp
cmp
pop
mov
sub
fsubrl
xchg
sti
xorb
add
stos
push
adc
jp
fnstcw
push
dec
xchg
or
es
imul
outsb
rorb
push
inc
scas
fwait
sub
clc
jecxz
lret
sub
fldl
xchg
pop
int3
out
mov
lods
sarl
inc
add
mov
sub
lods
or
push
imul
in
rol
outsb
leave
sbb
lret
les
jno
popf
flds
cmp
rolb
nop
fisubrl
mov
push
out
xor
pop
outsl
pop
lods
out
xchg
daa
testl
dec
sub
dec
daa
out
aad
aam
push
pop
aas
getsec
mov
das
mov
dec
push
mov
mov
test
mov
jge
pop
inc
in
pop
repz
sbb
xchg
inc
in
inc
rorb
ja
jae
loop
daa
and
pop
mov
test
enter
dec
lret
adc
test
call
lahf
xor
inc
roll
lock
xor
clc
pop
gs
addb
xchg
mov
xchg
ret
or
pop
inc
and
fdivrs
ljmp
mov
js
push
mov
push
sbbl
adc
pop
inc
mov
or
fidivrl
aad
mov
test
popa
ret
shrl
insl
pushf
cld
push
insb
sub
mov
pop
inc
hlt
mov
bnd
fdivrl
lds
insb
sbb
clc
sti
cli
dec
in
mov
mov
inc
cmc
jle
movsl
adc
mov
jae
inc
aaa
lods
test
scas
or
xchg
dec
and
les
sbb
imul
arpl
or
fwait
xchg
and
sbb
or
adc
cmp
fsubp
dec
xchg
xor
jo
sbb
div
fmuls
xor
int
mov
add
cmp
or
out
fiadds
call
mov
sbb
dec
xor
cld
aas
xor
xorl
mov
or
cmc
fidivrl
std
or
pop
aaa
xlat
cmp
mov
sarl
call
outsl
mov
loop
xchg
nop
add
test
and
jnp
push
pop
aam
cmp
pushf
adc
push
cmp
in
and
loop
push
int3
test
and
mov
int
std
pop
mov
bswap
push
cmp
repnz
mov
ja
adc
adc
xchg
sbb
stc
jmp
stos
les
cmp
pop
daa
jae
hlt
push
pop
nop
movsl
aaa
sbb
pushf
or
pop
mov
sub
mov
lahf
jbe
push
fwait
jae
xchg
sub
lods
xchg
jmp
add
jle
test
not
cmp
dec
adc
pop
fs
mov
mov
shlb
xchg
arpl
cmp
and
dec
rclb
adc
fld
mov
in
iret
mov
pop
sarb
je
add
inc
shrl
test
lahf
cmp
cwtl
pop
and
aad
or
leave
hlt
fisubrl
cmp
outsb
icebp
cwtl
push
lcall
or
imul
jge
push
cltd
lea
mov
cmpsb
mov
adc
mov
stc
or
lock
cmp
les
xchg
add
outsb
add
jb
lds
stos
inc
xchg
das
dec
in
jnp
jp
mov
je
xchg
jmp
iret
bound
ss
pop
sahf
xchg
test
sub
and
fnstcw
imul
sub
arpl
mov
mov
xor
insb
or
inc
fs
lret
mov
test
ds
cmpb
push
jge
in
mov
into
jns
ret
outsb
cmp
js
inc
ja
dec
in
in
out
xor
je
aam
divl
mov
push
xchg
mov
or
jmp
icebp
sub
cmp
add
mov
cmp
cmpsb
into
xor
mov
push
or
test
xor
outsl
lds
xor
pop
fistl
out
mov
dec
cmp
xchg
sbb
pop
lret
mov
clc
mov
inc
dec
jecxz
popl
pop
jo
jmp
ja
repz
sahf
jns
filds
pop
jbe
sbb
lret
xor
xchg
loop
js
out
xchg
dec
adcl
cmp
mov
and
cmpsb
idiv
push
and
lea
push
mov
sbb
and
push
xor
inc
mov
inc
push
xor
xchg
jecxz
add
sub
outsl
decl
sbb
orb
test
pusha
inc
xrelease
add
inc
repz
outsl
shlb
jnp
sbb
or
test
arpl
push
test
ficompl
sets
xchg
shrl
and
mov
push
clc
push
jle,pn
sub
repnz
shll
adc
lret
pop
push
cmp
xor
iret
insl
popf
fmull
cmp
sti
or
in
orl
arpl
add
add
rol
pusha
cltd
stos
clc
dec
mull
lea
sahf
inc
sub
fistpl
jmp
mov
cld
xchg
aam
loope
fstpl
cmovnp
ret
xchg
jg
add
or
cmp
in
out
adc
pusha
xor
outsb
adc
jl
ljmp
clc
fidivs
mov
out
xchg
in
imul
scas
push
das
adc
cmc
lods
lret
daa
mov
cmp
scas
iret
mov
xchg
xchg
test
dec
or
add
test
scas
fistl
dec
not
cmp
push
inc
movsb
cmp
adc
arpl
xor
loopne
xor
data16
mov
loop
ss
adc
jne
xchg
aaa
test
mov
xchg
jbe
pop
mov
fbld
xchg
mov
pop
xchg
and
mov
or
xor
xor
stos
mov
rorl
ljmp
mov
pop
or
fdivrl
mov
push
fstp
jecxz
jnp
pop
adc
mov
or
inc
in
adc
cwtl
in
mov
push
cmp
sub
loop
dec
jno
mov
enter
jp
sahf
add
clc
lock
jbe
jo
adc
or
inc
idivl
pop
addb
push
js
leave
pop
aas
stos
cmp
lods
and
lcall
daa
lret
sahf
scas
call
push
mov
and
xchg
dec
dec
cmpsl
std
mov
sarl
or
gs
out
shrb
and
sbb
dec
mov
lock
push
pusha
dec
in
psubusb
subl
fsub
loop
ffreep
or
pop
mov
and
adc
dec
pop
sbb
cmp
loopne
dec
dec
pop
jne
jg
jnp
cmpsb
mov
sub
mov
xor
mov
and
pop
int3
xor
cmp
test
dec
fisttpll
cwtl
test
stos
subb
out
pop
pushf
in
loopne
lods
fistpll
mov
insb
xchg
mov
push
mov
imul
mov
xchg
jb
jg
inc
lods
aad
or
mov
data16
test
loop
sbbb
push
adc
pop
inc
adc
or
hlt
or
adc
movsl
cld
adc
pop
loope
ret
xchg
dec
pop
fs
flds
pop
int
sarl
or
add
dec
pop
add
mov
idivl
adc
sbb
mov
ret
int3
push
pop
popa
jbe
jmp
sub
mov
int3
fcmovne
clc
outsb
pop
movq
das
out
sub
nop
push
js
sbb
sbb
and
jne
popf
and
pushf
push
inc
arpl
cmp
and
sub
in
jge
fbstp
enter
data16
in
jmp
sbb
adc
lcall
mov
test
out
sbb
xchg
cmc
sub
xor
push
inc
pusha
daa
andb
adc
inc
and
lods
xchg
icebp
test
mov
jmp
mov
adc
mov
xorl
dec
cld
sbb
mov
or
inc
xchg
aaa
icebp
lock
mov
sub
movsl
rclb
jg
cmp
andl
add
in
ds
arpl
lods
aaa
and
ja
movsl
aaa
sbb
pcmpeqw
cld
dec
jp
mov
int3
lods
push
pop
pop
jns
jns
jle
mov
jg
loope
and
and
add
and
adc
mov
adc
mov
add
outsl
push
inc
and
cltd
inc
jae
jl
orb
popl
test
les
add
out
lret
mov
jne
add
push
jo
and
int
lods
cmpl
aas
pop
jl
adc
popf
dec
scas
push
fcompl
mov
and
sbb
mov
popf
cld
xor
dec
mov
push
mov
pop
inc
push
push
mov
xor
jecxz
add
ljmp
cmp
xchg
push
dec
loopne
movsl
cltd
lock
xchg
pop
jge
mov
pop
cmp
pop
jmp
fldcw
fstps
mov
sbb
pop
or
jno
mov
imul
fnstcw
inc
std
mov
mov
fisttpl
hlt
les
outsb
sarb
dec
es
shrb
ret
add
mov
jbe
out
int3
add
pop
cltd
dec
aad
pop
out
imul
mov
or
icebp
loope
fisttpl
xor
dec
push
mov
int
add
or
daa
sbb
jge
incb
jnp
fistpll
lahf
mov
cmpsb
sbb
pushf
pop
das
and
pop
adc
hlt
data16
xchg
xchg
cmpsb
jp
aam
fsave
add
mov
test
add
add
fists
cmpsb
dec
jge
add
shl
xchg
and
or
addr16
hlt
xor
jbe
lcall
xchg
adc
xor
add
push
cmp
fsub
dec
outsl
mov
lock
inc
lods
js
popa
xchg
sbb
or
pop
scas
ja
sub
pop
pop
push
popa
and
mov
fld
sarb
push
lds
push
fdivp
pop
fcomps
inc
call
xchg
fwait
cmpxchg
cmp
das
push
add
pop
out
rol
sbb
sbb
mov
sar
testl
sbb
shl
sti
push
fcomps
je
shlb
imul
inc
fs
insl
adc
sbb
xchg
pop
mov
jbe
jl
mov
xor
insl
adc
xor
adc
aas
inc
in
sbb
rcrb
out
push
mov
xchg
inc
pop
loopne
shll
cmp
les
mov
inc
jge
jl
cmc
movsb
ffree
lock
mov
imul
lock
inc
dec
sbb
cli
jmp
sarl
and
add
sub
add
testb
pop
push
scas
ret
cmp
add
adc
je
jne
push
sbb
in
into
iret
dec
push
or
lret
cmc
cmpb
cmp
mov
xchg
mov
mov
jmp
mov
or
xchg
imul
jns
ja
pop
js
xchg
add
jne
xor
popf
call
divl
push
lahf
add
cld
ficompl
or
nop
cmpsl
xchg
inc
jbe
push
cmp
mov
push
jg
sub
shrb
jg
daa
pop
lahf
stos
bnd
jp
xor
sub
push
jns
sub
jle
and
pop
sub
inc
push
cmpsl
xchg
xor
cltd
xchg
mov
cli
repz
inc
xchg
shlb
sbb
mov
push
in
scas
stc
bound
jmp
xchg
je
test
icebp
jns
xor
xchg
jnp
or
mov
sub
mov
cld
xchg
std
loop
dec
ss
pop
mov
xor
push
mov
ja
aad
cmc
push
lods
push
mov
lcall
xor
add
imul
lcall
pop
pop
cmp
adc
jo
xor
movsb
test
mov
fcom
shl
mov
sbb
jmp
mov
insl
hlt
cmp
aad
cwtl
test
test
xor
mov
jmp
stc
shlb
outsl
movsl
push
mov
ja
and
leave
scas
mov
ret
xchg
fists
cs
jae
pand
push
mov
push
mov
push
in
push
mov
jae
popa
sub
adc
out
sbb
ljmp
into
dec
bound
mov
xor
add
push
jle
add
inc
bound
mov
js
xchg
bound
xor
inc
xchg
movsb
loopne
decb
or
sbb
out
stos
fsubl
jl
cltd
lods
inc
iret
push
jne
inc
mov
dec
stos
test
cmp
dec
sbb
aas
hlt
ljmp
out
xchg
daa
icebp
inc
mull
clc
stos
sub
sbb
cmpsl
imul
inc
jmp
mov
ds
xchg
insb
mov
lods
push
sti
dec
shlb
mov
adc
push
pop
adc
xor
or
je
loop
test
or
jbe
dec
xchg
jg
add
push
enter
pop
movsl
ja
es
inc
mov
loop
jmp
xlat
hlt
mov
js
adc
test
adc
sbb
and
push
sub
ror
add
dec
pop
daa
js
subb
dec
pop
mov
xchg
in
pop
fimull
pop
out
icebp
mov
xchg
adc
into
sbb
setnp
loope
cmp
pop
mov
std
aaa
add
sti
movsl
andb
mov
add
mov
aam
and
bound
sub
xlat
fwait
inc
cmp
or
lods
jns
into
dec
leave
fsubrs
hlt
pop
mov
outsb
sub
insl
rorl
adc
ljmp
sub
dec
push
imul
inc
dec
sbb
in
aad
xor
pushf
popl
jge
sub
sbb
and
mov
test
arpl
mov
cltd
into
test
sbb
loopne
sub
and
sbb
xchg
xchg
pop
sbb
add
jp
aaa
out
mov
popf
movsl
jg
pop
mov
dec
subl
jb
sub
loope
js
mov
mov
mov
xchg
pop
repnz
test
clc
push
xchg
mov
and
test
aaa
int3
out
icebp
invd
jns
mov
es
mov
repz
ljmp
orb
inc
outsl
lahf
or
ret
pop
int3
scas
repz
loope
pop
popa
aam
cld
pop
test
xor
add
add
add
pop
jbe
leave
fldenv
stc
cmc
mov
cwtl
sbb
or
popa
mov
jbe
push
shll
test
movb
ds
mov
sbb
sbb
mov
stos
push
adc
fptan
mov
jl
call
out
in
xchg
inc
out
fistpl
lret
or
xlat
data16
sti
outsl
imul
sbb
jge
xchg
push
lods
hlt
clc
icebp
out
sbb
jle
xchg
xor
dec
dec
test
cmp
adc
repz
sahf
cli
cmp
daa
cmpsb
rcr
loope
mov
sbb
mov
adc
sub
and
out
and
ljmp
dec
test
mov
movsl
dec
sbb
test
test
push
xchg
movsb
cmp
sbb
adc
orb
add
mov
imul
js
cmpsl
pop
inc
arpl
addb
push
test
lods
cltd
sub
pusha
push
pop
into
adc
scas
sub
or
push
add
cwtl
mov
add
hlt
incl
imull
imul
pop
js
stos
xor
xchg
xchg
sbb
call
push
add
jno
fwait
cs
inc
mov
fwait
dec
in
test
ja
xor
icebp
dec
push
adc
rorl
pop
stos
sbb
or
insl
arpl
jb
mov
fmuls
xchg
clc
sub
repz
lods
pop
pop
stos
insb
imul
or
es
roll
ja
lods
mov
fadds
xchg
jne
mov
fldt
aaa
push
jl
add
scas
leave
add
out
ret
adc
sbb
mov
cwtl
mov
scas
pop
or
adcl
jnp
mov
fisubs
xchg
cwtl
loopne
ret
push
mov
push
pop
jle
jns
jmp
icebp
mov
aas
adc
adc
mov
lods
fnstcw
push
cltd
ret
inc
aas
push
stc
sub
xor
jl
jmp
push
pop
movb
clc
mov
jns
adc
dec
add
jle
adc
lds
inc
mov
jle
push
push
aaa
pop
adc
cmpxchg
mov
xchg
xlat
in
fstps
xor
cmp
ja
adc
movsl
sbb
jb
jnp
or
or
pushf
jne
dec
push
fistpll
addr16
inc
cmp
mov
dec
fsubl
cmpsl
mov
jno
jne
xor
gs
stos
sahf
and
addr16
push
shlb
pop
js
xchg
fwait
xchg
cmpsb
je
cwtl
adc
fists
push
fisubl
pop
lds
xchg
adc
subb
xchg
sub
pop
in
inc
dec
jmp
sbb
pop
xchg
out
das
iret
mov
lret
jbe
fiadds
std
int3
ss
cltd
aad
iret
or
and
adc
mov
or
loopne
add
fimull
ret
fs
xor
and
out
out
and
xchg
fsubrl
gs
mov
inc
cmc
inc
xor
xor
xchg
lods
and
ficomps
xor
dec
xor
cmp
xchg
popf
scas
cli
js
mov
push
std
mov
jge
gs
dec
mov
cmp
test
cmpsl
mov
ljmp
fs
mov
cmpsb
push
cmp
hlt
cs
ljmp
nop
xchg
mov
ss
iret
mov
xchg
inc
out
in
or
incl
leave
lahf
repnz
data16
pop
lods
xor
aad
lds
cltd
stc
jl
data16
adc
out
mov
inc
aam
cmc
jp
lret
dec
jo
mov
insb
stos
ss
enter
cmp
push
daa
lock
mov
pop
out
jnp
xor
inc
insl
xchg
lods
xor
sti
xchg
jl
mov
cmp
mov
xor
dec
repz
js
cmpsb
sbb
mov
addr16
mov
fsubrp
sti
cli
pop
dec
push
movsb
das
push
xor
xchg
xchg
mov
subl
fadds
xor
adc
ss
call
or
testb
std
push
mov
mov
or
ds
mov
sahf
imul
in
or
cmp
ja
roll
add
enter
mov
je
ficomps
loope
jecxz
or
stos
sub
add
inc
ss
js
fists
movsb
add
shrl
mov
stos
call
je
imul
sbb
inc
xor
rcrl
xchg
sarl
ja
imul
test
mov
test
xchg
outsl
es
insl
pop
pusha
addps
dec
rclb
outsl
shll
outsb
aas
stc
sti
sarl
sub
cmc
stc
or
inc
pop
xchg
mov
push
xor
mov
sbb
or
add
ljmp
mov
inc
into
dec
and
je
xchg
jmp
and
enter
sub
cmpsb
jno
rol
scas
or
xor
lahf
ds
xor
mov
or
adc
insb
dec
ret
int3
pop
sbb
dec
mov
cltd
out
aad
sub
addr16
add
int
dec
jb
adc
popf
cmp
dec
aas
sbb
jge
mov
dec
add
or
sti
xchg
cs
mov
sbb
jae
lds
sbbl
cmp
mov
and
jbe
std
push
or
mov
jbe
mov
das
xchg
sbb
pop
mov
jo
cmp
cmp
pop
mov
ss
sbb
pop
add
inc
movsb
inc
add
fsub
adc
cs
lahf
pop
sub
mov
fstpt
pop
adc
or
jnp
mov
jbe
push
pop
xor
lods
cs
xor
imul
popf
xorps
imul
in
xor
dec
ljmp
mov
fwait
and
sbb
adc
jge
adc
insb
cld
dec
push
shlb
aam
jmp
adc
inc
pop
cld
jecxz
int
int3
in
dec
pop
sbb
sub
das
add
inc
fnstsw
je
lcall
mov
add
sbb
jnp
mov
pop
das
xchg
fsubrl
das
int
das
movsl
int
sbb
mov
movsb
pop
out
pop
xchg
mov
push
cmp
and
lret
enter
scas
and
ljmp
loop
jmp
and
dec
inc
add
cmp
add
mov
push
stos
jmp
jp
inc
call
inc
fstpt
repz
dec
mov
push
in
jl
test
out
cmpsb
jge
sbb
xor
pop
xchg
clc
fsubrp
scas
sub
add
mov
mov
cmc
sbb
adc
adc
cmc
rclb
or
mov
push
lods
push
cmpsb
pop
push
fxch
fs
jmp
push
fstps
adc
add
das
jge
rolb
jg
fcomps
push
rorl
js
sbbl
les
inc
aas
jnp
jmp
adcl
lcall
jnp
in
lahf
xor
mov
sbb
lcall
add
mov
bound
popa
test
sub
mov
or
ss
aaa
les
sbb
cmpsl
stos
daa
adc
dec
xor
loopne
pushl
adc
sbb
subl
xor
xchg
aad
inc
jmp
add
pusha
mov
and
adc
cmp
scas
dec
push
jno
addl
roll
outsb
inc
rcll
mov
mov
jge
or
mov
loope
nop
sbb
mov
sub
insl
iret
sti
sbb
int
decl
push
xchg
rcrl
and
jle
in
shr
xchg
mov
ljmp
sub
incl
pop
sub
jecxz
dec
jg
jae
iret
dec
fnstsw
stos
and
out
dec
leave
adc
adc
out
cmc
test
aam
inc
push
dec
scas
movb
icebp
mov
scas
fmull
in
mov
mov
pop
out
orl
mov
sub
jbe
sbb
add
shll
repz
inc
jno
outsb
and
movsb
inc
pop
std
pop
shll
rclb
jmp
iret
jns
out
and
sbb
repnz
or
mov
xchg
or
sbb
add
fadd
cmpsb
leave
xor
inc
ret
adc
adc
aas
lcall
pop
xchg
sbb
loop
sbb
add
out
cmp
jecxz
push
push
test
idivb
std
jno
and
mov
push
or
stos
lds
repnz
inc
dec
test
lods
icebp
sub
fstps
xchg
mov
jl
add
out
pop
lds
adc
rcrl
cmp
fisubrs
xor
adc
mov
inc
and
insb
imul
sbb
aas
mov
xchg
test
jl
aaa
dec
dec
icebp
push
jg
sub
pusha
pop
pop
and
stos
popf
pop
stc
and
mov
cs
ret
cmpsb
dec
out
bound
es
pop
mov
push
fldcw
add
jo
mov
xchg
into
sarb
ret
mov
jecxz
pop
xlat
loop
lods
pushf
cmp
repz
cmpsl
popa
mov
loope
inc
std
inc
cwtl
stos
dec
push
sub
insl
pop
in
and
fdivs
sub
cmc
sbb
mov
pop
aas
ds
repz
mov
ljmp
pop
je
std
out
dec
enter
mov
inc
repnz
add
pop
and
out
loopne
add
mov
mov
test
lea
in
sbb
loopne
test
push
pop
mov
mov
lea
xor
jge
loopne
or
sbb
jnp
adc
jge
push
mov
outsb
in
movsb
subl
movsl
mov
and
and
inc
fs
pop
fistl
mov
pop
les
mov
in
shlb
sbb
dec
inc
pop
out
xor
test
push
inc
aad
mov
repz
or
loope
dec
push
mov
jp
icebp
jle
je
add
add
repnz
leave
in
repz
dec
ss
loopne
adc
movsb
sub
mov
fwait
lahf
add
fldt
or
jmp
aaa
mov
jp
aam
aam
testb
and
js
or
dec
aaa
sbb
xor
fnstsw
cmp
cli
cmc
jecxz
sub
aas
out
jb
lret
cmp
inc
jae
dec
pop
mov
or
stos
cmpsb
fistpl
pusha
push
outsl
sbb
xorl
mov
jmp
test
jg
scas
popf
or
pop
dec
dec
xor
xchg
in
push
dec
inc
push
push
sub
idivb
shr
cvttpd2dq
sbbl
sbb
lods
notl
nop
push
in
aaa
inc
lea
or
sbb
jle
dec
mov
push
sbb
daa
in
loopne
push
inc
dec
adc
mov
mov
test
je
pop
xchg
in
xor
cmp
jle
ljmp
mov
fmuls
mov
jo
das
loop
mov
and
jp
cmp
inc
xchg
jbe
stc
mov
aas
aas
movsl
jle
std
loopne
xchg
push
adc
or
testb
lea
add
adc
repz
dec
fldt
imul
cwtl
push
jg
fwait
push
bound
mov
xchg
adc
out
sarl
xor
adc
ret
out
and
dec
cwtl
leave
xchg
pop
push
fndisi(8087
xor
lret
stc
add
aad
mov
mov
cmc
lcall
push
jbe
les
mov
xchg
ret
test
std
mov
xor
bnd
cmpsb
push
xlat
je
jl
jne
pop
int
push
ljmp
ret
out
les
inc
mov
je
xor
rcrb
das
popa
sti
aam
int
mov
mov
jno
loope
aaa
clc
mov
jns,pt
push
cmp
mov
outsl
add
sub
add
mov
rcll
add
dec
dec
adc
hlt
aad
arpl
jnp
cld
jo
xchg
dec
incb
jmp
inc
push
xchg
xchg
mov
mov
cmp
push
mov
lods
or
and
mov
mov
dec
pop
out
out
out
mov
stos
sbb
push
fildll
pop
xor
or
sbb
insl
pop
loope
popf
push
push
ret
mov
movsl
ficomps
test
or
push
jg
fnstcw
mov
es
or
cld
sub
js
inc
outsl
fimuls
mov
mov
iret
jl
mov
out
jg
pusha
jne
scas
push
cmp
push
loop
inc
sbb
loope
add
cmpl
cs
push
cmp
mov
or
adc
aas
pop
sbb
and
lock
xchg
inc
rorb
jne
ja
aad
lret
sbb
xchg
dec
cli
arpl
lcall
inc
or
outsb
call
mov
cmpsb
jae
sbb
in
jns
jbe
xor
rorl
sarl
pushw
cwtl
pop
mov
adc
into
in
dec
scas
stc
push
or
jae
sub
test
cmpsb
popa
sahf
sbb
push
js
nop
addr16
xor
mov
aad
xorb
jns
inc
in
data16
mov
fnstcw
aam
sub
inc
jno
xlat
notl
jne
xor
fldt
sub
xor
add
pop
movsb
xor
movsl
jnp
out
ret
xchg
outsb
xchg
xlat
andl
movsb
push
orl
pop
mov
aad
jle
loope
adc
dec
cld
cmp
mov
jp
enter
fisubs
mov
ss
fisttpl
andl
xchg
sbb
mov
daa
subb
add
mov
lret
les
les
lahf
inc
mov
and
mov
adcb
fs
ret
lea
pop
int3
and
inc
repnz
aas
or
fcoms
inc
mov
mov
out
push
cmpsl
in
and
hlt
aad
sbb
stos
dec
sub
or
cld
stc
ficoms
jmp
xchg
sbb
stos
insl
dec
jbe
mov
pop
pop
mov
lret
add
fildll
sbb
sub
xor
dec
inc
adc
es
js
pop
iret
cmpsb
sub
fmul
fmul
push
lcall
test
adc
mov
int3
jno
sub
or
sbb
addr16
pop
pop
repz
cmc
cmp
fnstenv
in
xchg
mov
push
and
mov
stc
scas
aad
inc
sarl
mov
cltd
pushf
xchg
daa
mov
icebp
jge
ret
fwait
mov
pop
sbb
rcrb
sbb
xor
lret
mov
cs
mov
test
pushf
sub
ret
fadds
mov
adc
out
sbb
cmp
lea
jnp
mov
imul
jge
fs
or
hlt
loop
push
cltd
and
enter
inc
xchg
xchg
cmpsl
lcall
jno
cld
and
es
inc
leave
xchg
jns
push
sbb
xor
or
jmp
adc
or
adcl
test
sarl
hlt
push
xchg
adc
ficompl
cmp
and
loop
std
in
ret
leave
out
pop
and
sub
xor
cli
scas
mov
iret
and
dec
pop
test
dec
in
popf
pop
pop
dec
mov
repz
enter
adc
mov
int
adc
shll
sbb
adc
loope
imul
xchg
pop
out
sub
es
pop
or
and
xlat
shl
xor
mov
out
js
sarl
sbbl
bound
cmp
std
int
sbb
cmpsb
repz
int
nop
cltd
mov
mov
jg
add
inc
lret
inc
mov
sahf
out
push
pop
inc
cltd
pop
mov
cmp
mov
arpl
aas
sbb
cmpsb
inc
jne
xor
pusha
mov
xchg
pop
sub
dec
iret
xor
xor
test
lods
jle
pop
ret
xor
filds
and
insb
inc
mov
mov
inc
or
mov
sbb
and
test
movsb
fistpl
xor
adc
sbb
cmovge
testl
loope
mov
mov
std
add
mov
fneni(8087
push
div
xor
push
add
xchg
cmc
lea
push
cmp
push
mov
lret
adc
mov
scas
push
shl
test
jb
lds
insb
in
adc
insb
loope
sub
clc
iret
cmp
jecxz
pop
inc
sbb
adc
or
test
jmp
decb
dec
ds
inc
sti
jae
mov
cmp
sub
loopne
xchg
dec
push
es
out
movsl
sbb
xor
imul
lea
in
lcall
sub
popf
dec
gs
sar
and
clc
popf
mov
cmpl
mov
or
ret
and
loop
scas
gs
lods
and
fwait
mov
sub
test
xor
cmp
std
repz
int3
loopne
idiv
sbb
inc
cmp
cltd
test
jno
stos
or
sbb
sbb
xor
pcmpgtd
ret
and
dec
xchg
test
cld
sub
push
or
movsl
movsl
and
test
xchg
xor
jno
test
mov
dec
sahf
cmpsl
sbb
mov
sub
xchg
jo
adc
jmp
mov
add
cmp
fs
andb
ret
push
jp
pop
jno
clc
imul
mov
cmc
cmpsb
sbb
mov
push
inc
aaa
pop
iret
aam
data16
ret
addr16
ljmp
cltd
lods
loop
dec
test
cmp
stc
lods
sbb
in
in
into
aas
xchg
insl
adc
sbb
in
rcll
enter
lahf
pusha
cmp
jns
test
adc
push
sbb
mov
pop
inc
jbe
imul
xchg
cmp
bound
rep
gs
orl
loope
pop
mov
pusha
or
mov
and
outsl
lea
xor
fdivs
in
inc
shl
jl
xchg
aad
and
ss
dec
sbb
leave
ja
dec
sahf
stos
sub
jl,pt
int3
jmp
mov
test
lcall
pop
cmp
mov
subb
sbb
inc
movsb
int
sbb
xor
stos
rcrl
mov
pop
stos
dec
push
int3
jne
or
out
es
adc
ljmp
pop
js
lods
pop
lret
mov
test
nop
loop
mov
mov
dec
outsb
rcr
inc
jp
arpl
aam
aad
aas
sub
mov
je
fcmovne
adc
and
out
dec
stos
cmp
movhps
xor
jmp
repnz
jl
cmp
mov
cmc
sbb
xchg
xchg
sahf
dec
adc
xor
dec
pop
push
pop
mov
dec
and
jecxz
fistl
add
std
xchg
dec
jae
les
aam
aad
fcmove
pop
cli
inc
push
cmp
leave
mov
dec
push
adc
addb
dec
sub
shrl
push
cwtl
mov
fsubrl
pusha
sti
adc
add
daa
pop
repnz
xlat
or
leave
xchg
cmc
or
and
lret
pop
sbb
sub
gs
pushf
mov
imul
mov
xchg
pop
and
adc
lret
ds
repnz
mov
lret
mov
mov
test
js
sar
lods
inc
rcrl
xchg
imul
addr16
aad
mov
sbbb
xchg
sub
or
xor
pop
sub
dec
pop
pop
jge
and
cmp
mov
cmpsb
jmp
ja
add
fwait
inc
ret
rcrb
bound
push
test
jl
and
xor
xchg
sbb
adcb
les
filds
sub
or
fcompl
mov
insl
pop
mov
fdivrp
cs
sub
xlat
outsl
adc
mov
or
arpl
jmp
xchg
and
es
pushf
test
dec
pop
ljmp
sub
push
xor
ffree
daa
loopne
xor
push
sub
sti
push
mov
jae
adc
outsl
xchg
add
out
into
mov
ficoml
faddl
int
dec
insl
fwait
pop
jmp
shlb
mov
pop
cvtps2pi
shlb
mov
sarl
adc
lock
adc
shrb
add
pop
cmp
add
sbb
cmp
sub
sub
popa
cs
or
stc
xor
xchg
outsb
jecxz
shlb
into
push
cltd
inc
out
add
pop
push
pop
repz
loopne
mov
mov
xchg
lods
int3
and
dec
inc
and
into
dec
inc
loope
dec
xchg
ret
pop
ficomps
lret
xor
pop
mov
cmpsb
and
shlw
sbb
xlat
or
adc
push
adc
inc
add
ljmp
cltd
cli
add
loopne
push
xor
adc
daa
lea
fimull
mov
xchg
imul
daa
popf
cltd
jne
mov
rcrb
mov
and
in
mov
lods
sub
xor
sahf
daa
fldt
lret
fucomi
shr
adc
mov
xchg
cmpsb
adc
cmp
xchg
push
pop
push
ds
jo
test
sbb
and
bound
fwait
movsb
mov
es
insl
mov
adc
and
popa
pop
jbe
or
push
xor
mov
loopne
negb
and
test
imul
jl
jae
jecxz
imul
shrd
lds
dec
pushf
add
loop
arpl
mov
rclb
add
sbb
sbb
dec
mov
xlat
or
pop
mov
push
jmp
jnp
icebp
cmpsl
lods
outsb
cwtl
scas
sub
cmpsl
pop
sahf
mov
andps
pop
insl
sub
stos
adc
sbb
mov
stos
cs
addr16
jb
aam
fdivl
mov
out
mov
and
outsl
push
and
iret
adc
inc
inc
mov
mov
jnp
sbb
mov
aaa
and
inc
mov
xchg
mov
and
cmp
jmp
lahf
push
lret
into
pop
daa
sub
xor
push
incl
in
dec
mov
insb
fwait
call
mov
xor
xchg
pop
fcmove
push
xchg
pop
hlt
test
adcl
push
loopne
mov
dec
cmp
mov
inc
int3
movsl
jmp
incl
mov
mov
push
addl
mov
ficoml
or
pop
btc
out
das
mov
mov
mov
mov
in
in
sub
out
shll
not
decl
push
and
cmp
out
fistl
mov
rcl
inc
dec
loope
jmp
mov
and
xor
or
add
adc
mov
push
insl
jns
jne
lods
movsl
ret
sti
repz
adc
gs
pop
iret
xor
cmpsl
sbb
test
pop
mov
das
outsl
outsl
sti
xchg
pushf
lods
gs
jo
call
enter
stos
out
xor
clc
test
or
rorb
mov
arpl
call
dec
inc
or
out
pop
cmp
xor
xchg
xor
hlt
inc
inc
test
xchg
add
orl
ret
mov
xchg
lret
jecxz
imul
shrb
imul
add
dec
push
mov
mov
sub
jno
mov
fimuls
push
push
push
cmp
xchg
jno
ja
fs
dec
adc
movsb
loopne
jne
lods
xor
pop
and
adc
test
mov
pop
mov
inc
sbb
adc
jb
and
and
loope
adc
sub
jae
out
or
push
loopne
clc
mov
mov
push
in
es
sub
cmpsb
dec
test
sub
mov
add
stos
mov
mov
out
lret
outsl
cmp
lret
cmp
push
shlb
jmp
cmc
aas
inc
cmpl
xchg
lcall
mov
adc
shr
mov
mov
lock
xor
xchg
subb
cmc
pop
repnz
xchg
clc
sbb
out
jle
xchg
mov
ficomps
js
daa
jbe
cmp
mov
mov
call
mov
or
std
dec
fnstenv
rorl
cmp
push
dec
adc
adcl
es
loop
scas
rolb
push
inc
pop
mov
jnp
cmp
out
frstpm(287
fmulp
sub
mov
sub
mov
xor
dec
pop
xchg
iret
mov
push
xchg
dec
jne
sub
jmp
outsl
or
jecxz
es
or
push
psllw
imul
dec
cld
xchg
cmp
mov
test
repnz
or
inc
lods
inc
mov
push
sbb
clc
inc
sub
xor
push
mov
insl
xor
sbb
loop
cmp
insl
mov
inc
mov
inc
mov
add
inc
test
xchg
cmpsl
inc
loop
xchg
adc
shll
aas
and
scas
add
sub
mov
fimull
mov
mov
mov
push
cmp
xchg
es
push
loope
push
mov
or
insb
iret
pop
sbb
test
push
and
jp
or
cvtdq2ps
inc
cmp
not
push
pop
hlt
or
lock
aam
enter
mov
std
stos
mul
movsl
and
inc
scas
cmp
cmpsl
shl
cltd
mov
jl
push
pop
rorl
mov
inc
push
mov
orb
cmp
ljmp
lods
gs
mov
pop
clc
int3
ss
or
xchg
int
mov
imul
rcrl
ljmp
mov
les
cwtl
fs
and
leave
mov
or
sub
inc
jae
int
test
inc
daa
xchg
mov
lds
mov
jecxz
rclb
adc
push
fildl
imul
orl
xor
rcrb
jno
sub
cmp
test
mov
aas
cld
std
push
or
pop
lret
loop
mov
repz
xchg
fdivs
inc
stos
popa
mov
pop
cmp
rep
jns
xor
add
enter
and
push
fildll
loop
sti
or
add
jmp
jg
add
push
or
push
push
add
clc
inc
stos
sub
push
popa
test
es
and
xchg
iret
pop
jp
out
fsubl
inc
xchg
jp
cmpsl
cmpsl
ljmp
andb
and
test
pusha
xchg
pop
cmpb
jle
pop
call
loop
sub
fcmovbe
gs
push
jo
sbb
mov
inc
inc
clc
or
ret
sub
cld
or
out
lahf
fmull
push
int
add
ret
aas
repz
gs
cmp
mov
dec
fucomi
mov
jge
push
mov
insb
jl
fldl
mov
iret
ljmp
lea
decl
leave
mov
or
mov
andl
mov
nop
push
xchg
or
pop
xchg
mov
xchg
int3
mov
mov
sahf
inc
divb
pop
mov
stc
hlt
lea
or
outsb
cwtl
push
fwait
je
cwtl
sarb
cmp
ret
sub
jne
dec
je
pushf
add
adc
and
add
or
add
fidivrl
out
stc
jecxz
mov
data16
in
dec
sbb
clc
xchg
push
out
jecxz
js
jmp
movsl
sbb
xchg
in
ficoml
gs
xor
test
outsb
icebp
sub
scas
cmp
mov
mov
sbb
shl
mov
xchg
or
daa
stc
push
pop
xchg
test
lock
jl
in
rolb
inc
int3
outsb
mov
dec
mov
add
iret
fistps
add
stos
jne
cwtl
jns
je
xchg
xor
mov
xchg
mov
bound
cli
imul
pop
dec
jmp
dec
and
ljmp
xchg
add
and
fs
out
mov
adc
in
cmpsl
in
leave
xor
mov
push
inc
adc
xchg
add
arpl
fisubrs
pop
push
sahf
fsubs
mov
jle
jb
lcall
jne
scas
dec
pop
int
jne
mov
in
out
lods
xor
and
clc
mov
inc
in
push
and
std
jb
sbb
clc
les
roll
lcall
iret
roll
in
mov
cmp
mov
xor
jecxz
movsb
sub
jg
cld
push
or
push
flds
out
pop
out
xorl
pop
mov
cmpsl
fidivrl
mov
mov
repz
dec
lret
cmpl
mov
movsb
push
ljmp
or
pop
jns
int
test
inc
pop
out
js
ret
cld
or
rorl
movsb
jnp
lret
push
cmpsl
fbld
mov
or
mov
movsl
add
dec
dec
mov
dec
aam
sub
insl
fs
or
fisubs
cmpsl
aam
push
pushf
dec
sub
int
popf
mov
mov
inc
sub
loop
ffreep
out
push
cltd
mov
mov
adc
jg
mov
push
call
clc
xchg
mov
mov
pop
adcl
cli
outsl
pop
mov
inc
pushf
cmp
aas
negl
mov
mov
mov
jecxz
lods
popa
cli
iret
xchg
cmp
test
mov
and
dec
adc
js
inc
fcoml
aas
sarl
rorl
adc
mov
cwtl
scas
or
lahf
ror
ds
rorl
mov
push
push
and
add
push
push
dec
pop
push
mov
leave
rcrb
mov
imul
pushl
ret
jae
push
sti
fdivl
addr16
scas
push
and
cli
jl
mov
rorl
popa
xor
adcl
fsubrp
movsl
jb
std
mov
std
pushf
mull
mov
mov
xlat
or
icebp
mov
enter
xor
inc
inc
mov
sub
xor
stos
out
inc
outsl
mov
sub
insl
cmpsl
and
add
cs
mov
aas
cmp
movsb
mov
fucomp
stos
push
in
mov
les
jge
pop
push
js
into
xlat
loopne
mov
clc
sbb
mov
lds
outsb
dec
lock
sub
dec
xchg
and
scas
jecxz
les
push
stc
stos
mov
lcall
inc
sub
outsl
pop
push
xor
cmp
dec
dec
or
mov
xor
xor
push
out
pop
cmp
testl
ljmp
mov
xchg
leave
sbb
dec
pop
fidivrl
outsl
sahf
xor
and
out
lret
int3
push
rorl
andb
jb
ljmp
jbe
imul
jp
add
sub
pop
xchg
xor
shll
or
hlt
dec
dec
filds
ss
mov
outsl
jbe
sbb
pop
aaa
cmp
xchg
mov
inc
cld
icebp
mov
rcrb
or
decl
shll
pop
xchg
or
inc
fdivrs
xchg
inc
and
int
jo
dec
mov
add
xor
imul
sti
sbb
cld
enter
mov
test
cs
sub
popa
movsl
add
cmp
sub
mov
add
inc
lock
sbb
pop
inc
jmp
imul
xor
sbb
cmp
sub
rclb
insb
imul
pop
fcomi
mov
ret
hlt
das
push
and
lret
push
lock
and
cmpsb
sub
inc
xchg
scas
jns
lods
in
mov
popf
sub
pop
loope
xchg
xor
sub
fildll
fs
jne
into
inc
xchg
add
push
adc
xchg
inc
fwait
push
dec
aas
das
data16
jns
push
jge
sbb
adc
lods
in
jp
adc
or
les
jo
imul
rolb
insl
sub
loope
mov
leave
mov
test
and
mov
xchg
pop
jnp
cmpb
mov
fdivr
xor
aaa
inc
cmpsl
sub
jne
dec
mov
cmpsb
pop
push
je
stos
shrl
push
and
scas
in
out
jbe
mov
push
adc
cmpsb
xchg
jb
out
cmc
out
mov
or
data16
aaa
sbb
popa
or
xchg
pop
in
adc
mov
dec
xchg
ljmp
sbb
jp
popf
arpl
and
pop
enter
sub
mov
mov
push
pop
add
cmp
js
fwait
and
in
shll
adc
sbb
imul
fs
ds
ljmp
int3
cli
repz
sbb
adc
or
nop
or
jmp
test
ret
dec
and
daa
mov
jno
sub
imul
jne
shlb
cmp
pop
repnz
jmp
xchg
fsubl
push
cmc
cmpl
test
mov
adc
mov
push
sub
lfs
es
add
jmp
dec
and
out
mov
add
cmpsb
xor
mov
ret
ret
inc
add
fidivrl
mov
mulb
mov
dec
dec
and
or
or
sub
adc
xchg
aam
fs
ljmp
xchg
xchg
xchg
outsb
mov
sub
sbb
sbb
mov
adc
add
pop
repnz
dec
pop
add
je
sub
cmp
aaa
imul
mov
out
ja
mov
sub
dec
cmpsb
out
int3
cmp
push
jns
inc
sub
jecxz
jg
shr
repnz
pop
ret
inc
aaa
es
dec
pop
push
mov
clc
jb
pop
cmpsb
pop
and
popa
std
sahf
or
mov
xchg
lcall
pop
gs
pop
mov
sbb
les
and
xor
movsl
aas
cmp
xchg
or
adc
outsl
in
js
pop
sarb
and
pop
or
idivl
test
dec
ljmp
inc
cli
lea
sti
xlat
cld
xor
jb
xor
sbb
cltd
dec
xor
movsl
bound
fs
scas
cmc
imul
test
jl
add
sbb
and
sbb
loop
fsts
mov
enter
and
fiaddl
lcall
dec
mov
add
sub
in
xor
scas
cbtw
in
xor
pushf
lcall
lret
jge
inc
push
or
mov
popf
jle
cmpsb
push
mov
inc
jle
imul
pop
popf
iret
stc
mov
into
das
jmp
mov
loope
leave
std
repnz
cld
fistps
fimull
or
jp
int3
lock
pop
in
in
xchg
div
in
scas
jmp
sti
loop,pn
jle
push
jo
ret
ljmp
movsb
pop
scas
fbld
cmp
stos
add
fucomip
mov
dec
pop
jae
jmp
add
push
jae
dec
movsl
cmc
into
ret
outsl
inc
in
inc
jl
xlat
xor
dec
xor
add
dec
scas
fcoml
adc
ficoml
shll
fwait
xchg
mov
push
sbb
divb
ljmp
jae
mull
ja
jecxz
cmp
add
aaa
xchg
pushf
sub
in
cmp
dec
repz
addr16
ret
popa
or
clc
add
adc
lcall
pop
inc
xor
adc
rcrb
sbb
and
out
mov
mov
aad
arpl
repz
jl
mov
adc
aaa
aaa
fistpl
lahf
nop
test
mov
fs
mov
dec
stos
leave
dec
ljmp
xor
je
stos
jle
js
push
inc
das
fisubs
jecxz
sbb
cmpsl
pop
add
scas
sahf
push
mov
sbb
adc
cmp
dec
adc
jb
out
sahf
sbb
repnz
add
lock
loopne
and
arpl
ja
sbb
lods
cmp
and
cmpsl
mov
outsb
dec
scas
js
bnd
pop
test
dec
movsl
or
ret
loop
call
fiadds
lret
stc
xorl
jge
cltd
sub
pop
mov
add
mov
adc
jb
iret
mov
sub
andb
add
dec
or
xchg
push
dec
pop
sbb
hlt
push
jg
sbb
inc
xchg
das
sbb
imul
repz
sbb
out
lods
enter
mov
xor
sub
repz
ds
mov
cmp
iret
inc
lods
pop
outsb
inc
arpl
mov
xor
pop
sub
sbb
and
dec
sub
icebp
addb
fstl
into
mov
daa
fs
fidivl
or
or
test
fiaddl
ds
and
test
jae
fistl
sahf
out
rorl
jmp
mov
ret
sbbl
out
sbb
or
sbb
xchg
jns
out
jl
out
push
xchg
push
jmp
aas
lea
push
int
or
out
pop
mov
dec
add
insl
int
inc
movsw
add
clc
arpl
lock
or
jmp
les
adc
out
in
and
mov
xor
sub
test
insl
hlt
add
pushf
std
ja
push
call
outsb
pop
in
xor
lds
pop
sbb
aaa
addl
jmp
in
mov
jo
ds
mov
pop
or
popa
mov
pop
in
in
mov
jp
jb
nop
xor
lret
lods
jno
in
sub
sbb
push
add
inc
xor
stos
adc
pop
lret
data16
lods
jg
dec
lds
ffreep
inc
repnz
icebp
dec
push
fwait
xchg
lods
mov
add
movsb
cmp
jp
out
sbb
and
insb
sub
mov
sub
movsl
in
cmp
push
and
xor
insl
nop
sub
call
ljmp
jl
sub
insl
repnz
mov
arpl
stos
cwtl
sbb
lret
jns
mov
sbb
test
js
std
icebp
lcall
fdivrl
std
lock
add
cmp
push
adc
sbb
push
ret
pusha
cmp
inc
shr
push
add
std
in
enter
leave
iret
sbb
arpl
inc
addr16
lds
xchg
xchg
insl
add
and
stos
cs
cmp
jo
cmp
stos
sub
and
dec
dec
js
inc
mov
insb
fwait
add
fsubl
das
xor
sub
pop
in
push
mov
adc
xor
xor
and
adc
shrb
ds
pop
sbb
pop
xchg
add
out
push
and
inc
arpl
dec
jbe
jno
and
stc
call
inc
vaddsubpd
clc
xchg
xchg
push
lahf
js
adc
jg
dec
or
rcll
testb
mov
adc
hlt
pop
imul
mov
lret
lret
push
mov
push
and
fs
imul
or
or
pop
mov
mov
fbstp
mov
inc
loopne
xchg
scas
popa
outsb
sub
xchg
dec
jns
out
test
rorb
sub
xor
out
pop
nop
enter
lea
leave
cmp
mov
push
dec
outsb
push
fcomps
jae
std
xchg
cmc
add
and
std
mov
and
pusha
mov
pop
xor
sahf
jb
popf
mov
add
sti
adc
stc
test
jo
je
mov
bound
shrl
cmpsl
push
subb
push
mov
out
dec
jne
mov
mov
jge
inc
loop
xor
call
test
scas
inc
dec
pop
add
pop
rcrb
fiadds
leave
insl
sbb
inc
sbb
jp
add
mov
mov
int3
mov
push
adc
xor
lahf
inc
and
incb
shlb
inc
js
push
push
data16
sti
lods
mov
xlat
push
pop
add
and
insb
pop
enter
daa
addr16
jnp
out
stc
mov
packsswb
cmpsl
sbb
lahf
mov
lea
xchg
loopne
pop
or
push
sti
aad
cwtl
popa
mov
sub
jl
iret
les
mov
xor
lods
test
push
sbb
push
popa
sbb
int
mov
cltd
lret
add
and
leave
push
pop
xlat
fildl
outsl
movsl
cmp
mov
clc
mov
dec
mov
push
aas
out
outsb
enter
sahf
lret
cmp
cld
nop
int3
dec
dec
jmp
icebp
orl
and
push
and
ljmp
and
mov
mov
inc
add
gs
ficomps
and
mov
stos
xchg
xchg
add
movsb
insl
pop
aam
mov
add
pop
aam
insb
test
push
lods
icebp
dec
mov
push
inc
or
pop
mov
lcallw
filds
aad
pop
in
je
inc
imul
in
bound
out
push
fnsave
mov
mov
sahf
shrb
sbbl
int
lahf
sub
pop
mov
bound
push
dec
subb
mov
pop
inc
dec
out
insb
cmp
pop
das
or
cmp
push
lods
dec
test
cmpsl
dec
sbb
mov
push
stc
notl
movsb
dec
clc
ret
sub
data16
repz
cltd
xchg
and
push
cwtl
push
cld
sti
xchg
inc
dec
cmpl
sarl
fwait
pushf
jns
inc
dec
inc
mov
push
fisubs
xchg
or
nop
mov
cmp
jb
and
sub
inc
cwtl
adc
sub
and
sti
dec
inc
or
jle
pop
cmp
mov
fidivrs
cmp
mov
in
cld
sub
fimuls
mov
icebp
out
sbb
lock
pop
push
cltd
dec
stc
dec
jns
adc
mov
lea
mov
sub
bound
sbb
rorl
fstp
iret
cmp
xchg
vmovsldup
adc
jnp
dec
jo
and
or
sbb
shlb
cmp
jle
imulb
mov
cltd
fwait
rcrl
lret
ja
imul
data16
cmp
cmp
rclb
std
xchg
in
movsb
pushf
or
mov
sti
rcrb
cmp
jle
popf
mov
sub
mov
sbb
fidivl
lock
scas
and
sti
pop
mov
adc
push
fwait
jge
sahf
mov
test
decb
jb
jns
jecxz
mov
ss
mov
add
ja
push
fnstenv
or
je
imul
xchg
sti
stos
push
inc
ficoml
jno
imul
inc
sahf
fidivrl
cli
dec
xchg
cmp
xchg
sbb
mov
mov
arpl
popf
test
shll
mov
and
daa
cld
pop
cld
inc
pop
addr16
sbb
rcrb
fs
lcall
int
cmp
test
pop
clc
dec
cmp
dec
fs
mov
das
push
xchg
cmp
imul
mov
inc
or
jp
and
jb
loopne
adc
movsb
hlt
testb
pop
cmp
cmp
sub
iret
or
fcoms
xchg
jmp
iret
je
push
lret
mov
bound
and
mov
cli
shr
iret
push
or
pop
push
and
inc
add
mov
daa
imul
rcrl
sub
add
test
jnp
mov
dec
mov
add
and
addr16
dec
in
mov
xor
sarl
outsl
mov
ret
sarb
int
jb
loopne
test
jg
lock
aam
ficompl
add
arpl
ss
sub
mov
add
dec
mov
scas
jns
aad
popl
fstps
push
popa
shlb
cmpsl
xchg
and
or
push
sub
and
lret
mov
jns
imul
sbb
lret
in
sbb
lret
add
adc
mov
mov
dec
movsb
cmpsl
out
adcb
sub
add
out
stos
dec
shlb
popf
sbb
sub
xchg
jmp
mov
xchg
pop
sbb
fwait
ret
mov
mov
jl
rcrl
xchg
dec
movsb
push
movsl
inc
rorb
jb
xor
add
int3
lret
sub
add
and
jno
or
ds
push
bound
mov
std
icebp
enter
icebp
adc
jmp
mov
mov
push
flds
pop
lds
cmpsl
into
and
dec
mov
sbb
xchg
adc
andb
cmp
lret
addr16
cmp
inc
stos
sbb
push
ljmp
ljmpw
add
and
sti
adc
rclb
mov
ds
push
mov
cmp
mov
ret
jae
jns
pop
cld
mov
pop
loop
test
popa
aad
and
sub
in
and
lret
leave
jecxz
imul
xor
mov
es
pop
cs
sahf
js
dec
inc
dec
lods
outsl
decl
adc
fldt
xchg
inc
pusha
ret
out
adcb
add
ljmp
in
mov
loopne
and
mov
push
loopne
out
or
push
adc
bound
movsl
lock
mov
dec
inc
in
aas
dec
leave
pushf
adc
jb
mov
pusha
inc
jns
and
shll
xlat
adc
test
cli
xchg
xchg
popa
stc
push
dec
mov
fmull
pop
rorb
ja
imul
out
aad
clc
shll
in
andl
pop
decl
fisttps
push
int
cmp
ja
mov
jb
ficomps
sarl
outsb
in
out
daa
xor
lret
mov
dec
jmp
or
roll
subb
or
int3
nop
pop
add
stos
mov
and
lock
mov
adcl
push
roll
pop
cmp
jo
insl
addb
push
mov
dec
lods
mov
jae
rorb
jo
or
iret
les
js
adc
or
daa
push
cmp
dec
adc
sub
sub
cmp
loope
lock
sub
outsl
clc
int3
jbe
cmpsb
cs
ficoms
sbb
mov
inc
pop
bound
xchg
lret
jl
decb
mov
xlat
into
call
mov
pusha
pop
imul
jmp
fnstcw
mov
cmp
add
sahf
add
and
dec
ror
insw
sub
xchg
pop
ja
inc
and
mov
push
outsl
aaa
xlat
lcall
les
mov
wbinvd
jns
xchg
dec
mov
lock
and
mov
iret
ljmp
xchg
nop
or
nop
scas
push
jg
mov
mov
pop
push
scas
cmp
push
push
jnp
push
movsl
sbbb
xchg
dec
pop
xchg
fidivs
insb
test
or
leave
xchg
testb
pushf
imul
mov
int3
mov
cwtl
inc
jo
jb
hlt
popa
cmpsb
dec
push
nop
inc
lret
jo
push
loopne
fisubrl
xor
leave
mov
pop
add
push
sub
sahf
rorb
leave
popl
or
xchg
out
ja
mov
mov
jecxz
mov
subl
fimull
or
nop
imul
loop
jo
pop
mov
add
mov
loopne
cmp
sub
push
cli
xchg
lahf
outsb
or
loop
push
jecxz
inc
pop
mov
fisttpl
fsts
sub
xor
push
stos
outsb
scas
inc
hlt
dec
lock
mov
lret
mov
mov
imul
addr16
imul
shrl
jmp
pusha
in
jns
in
add
xor
push
push
das
call
enter
enter
popa
xchg
test
push
jno
test
add
or
mov
std
dec
test
out
insl
push
iret
pop
xchg
insb
push
ja
jmp
pop
lea
push
stos
out
sti
xchg
pop
xlat
sub
jp
popf
int
inc
dec
es
xchg
in
scas
sti
in
mov
jbe
shlb
jno
and
sub
jb
cwtl
pop
mov
dec
insl
jl
push
das
or
addr16
xor
fiadds
les
pop
push
in
sub
dec
in
sub
jbe
incb
iret
add
cmp
xchg
cs
outsb
cmpsb
jae
repnz
pop
xor
sbbl
lock
pop
jle
inc
push
dec
pushf
iret
jo
ljmp
ds
sahf
mov
lret
adc
adc
push
je
cmp
push
xor
aaa
es
add
insl
nop
mov
xor
fistpl
sahf
fwait
jnp
sbb
jmp
sub
nop
pop
mov
rolb
fs
mov
push
xor
inc
lea
push
mov
add
pop
mov
shrd
mov
adc
xchg
mov
sbb
insl
in
out
aaa
push
dec
stc
fldt
sbb
mov
sahf
out
sub
push
loope
daa
into
xor
xor
jbe,pn
inc
aaa
mov
stos
icebp
mov
adc
popf
push
out
adc
iret
and
or
imul
lret
aad
arpl
cwtl
arpl
movsl
in
inc
adc
mov
xlat
cs
push
xchg
fwait
adcl
jnp
ja
das
loop
dec
adc
repnz
aaa
ret
in
cwtl
sbb
jne
aad
test
sbbl
lret
pop
adc
sti
ret
in
inc
add
mov
fisubl
frstor
das
pop
test
jmp
mov
and
jecxz
sbbl
rorl
in
insb
fs
xor
iret
inc
insb
jno
cs
xor
xchg
cmc
and
pop
daa
dec
out
inc
mov
pop
decb
push
and
int
lcall
mov
inc
test
and
add
pop
out
frstor
add
rclb
pop
xchg
ljmp
pop
inc
inc
call
dec
pop
pusha
mov
cmpsb
push
shlb
or
xchg
mov
mov
imul
jno
push
mov
scas
mov
push
cmp
iret
dec
adc
pop
cs
or
cmp
es
imul
sbb
mov
cmp
xchg
xchg
inc
ja
int
int3
aam
rcrl
ljmp
andl
cs
jne
sub
inc
mov
xor
mov
push
fwait
int3
push
mov
or
imulb
xor
addr16
lods
loopne
sub
or
lcall
xchg
dec
xor
dec
sbbb
es
adc
icebp
jg
imul
sub
lods
idivb
push
push
iret
or
pop
dec
pop
mov
les
xlat
aam
mov
mov
mov
sbb
dec
jl
inc
push
lock
sub
mov
je
imul
fwait
sub
in
push
inc
dec
cmp
pop
sub
push
xchg
pop
adc
xlat
jno
sub
mov
ds
mov
test
push
dec
mov
rcrl
test
rcrl
jl
cmc
mov
scas
inc
mov
pop
out
push
jae
scas
fmuls
sbb
xchg
cmpsb
mov
push
ret
mov
mov
fisubrs
ret
add
addb
popf
mov
into
ss
fisubl
stos
fmuls
xchg
ljmp
mov
push
xor
inc
adc
adc
sarl
pusha
mov
out
aad
sahf
mov
repz
adc
hlt
shll
xchg
xchg
pushf
mov
fcmovnbe
adc
enter
jae
mov
jo
cli
mov
mov
call
cmc
cmpsl
hlt
xor
or
sub
add
add
popf
push
sub
mov
jne
out
ds
dec
mov
nop
xor
aas
cmp
sub
shrl
pushf
es
inc
pushf
ds
jge
or
lds
push
roll
inc
lds
jle
rcrl
or
insb
in
iret
popl
lods
sbb
js
sar
fdivrl
shrl
iret
xchg
cmpsb
cmpsb
xor
add
adc
lcall
xchg
jae
mov
in
inc
xchg
pop
add
and
outsb
cli
lret
inc
sbb
dec
shrb
stos
xchg
daa
lods
or
lahf
pop
fwait
mov
adc
inc
popl
sub
clc
mov
std
scas
stos
fs
ret
jg
test
vmovss
mov
sbb
pop
xcrypt-cfb
cmpsl
mov
lret
xchg
in
faddp
std
and
jl
fs
inc
adc
enter
adc
and
sbb
imul
ret
leave
mov
jnp
addb
cmpsl
mov
add
div
insl
jmp
ret
cmp
mov
sti
cld
mov
xchg
jg
push
addr16
and
mov
push
mov
jge
mov
and
hlt
icebp
cmp
xchg
cmp
pop
cmpsb
mov
gs
cli
pop
imul
sbb
mov
dec
mov
jp
stc
mov
xchg
sbb
mov
test
and
fimull
sub
subl
in
jnp
adc
sbb
sbb
stos
push
or
in
popf
cmp
out
cmp
push
jge
mov
es
std
int3
adc
cmp
icebp
insb
int3
mov
mov
pusha
ret
mov
mov
xor
xlat
inc
fimuls
cmp
nop
sti
movsb
dec
push
shrb
or
dec
das
loopne
push
pop
or
mov
mov
mov
leave
or
pop
out
adc
cwtl
xor
sub
or
mov
and
aad
push
pop
sahf
lcall
add
lds
mov
xorl
mov
dec
call
int
mov
mov
ds
lret
std
xor
sub
mov
fistps
stos
adc
push
out
inc
inc
ret
xor
cltd
cmp
sbb
rcrb
pop
lahf
testb
sub
out
cmpsb
cwtl
cli
mov
imul
test
inc
fs
pop
mov
adc
mov
cmpsb
sti
xchg
loope
jne
and
aas
inc
adc
outsb
push
outsl
jno
aas
adc
leave
jo
mov
out
sub
mov
lcall
test
data16
and
inc
mov
aam
hlt
xchg
or
lock
and
mov
push
bound
add
push
je
mov
inc
jnp
and
pop
mov
out
bound
fs
test
inc
pop
xor
jnp
rolb
jb
inc
sahf
shll
pop
pop
pop
add
bound
sahf
adc
or
mov
jnp
out
mov
ret
cltd
jns
movsl
mov
jno
mov
and
mov
loop
mov
in
cmpsb
mov
sub
lret
cmc
shrb
or
imul
cmp
js
pop
or
xchg
mov
mov
dec
neg
out
js
out
push
mov
and
out
mov
ljmp
add
add
shl
and
cmp
jge
mov
clc
sub
rcl
in
push
mov
mov
idivb
fs
xor
test
aas
sbb
fs
js
sbb
pop
dec
pushf
mov
mov
pop
rclb
jno
mov
push
ja
cmc
je
sub
jb
cmp
cli
mov
aam
push
ret
push
jae
ss
mov
repz
mov
insb
xchg
out
xchg
sbb
daa
outsb
imul
std
jle
in
in
adc
pop
movb
adc
call
cmovno
iret
rclb
lea
cmp
lods
push
in
int3
addr16
cmp
mov
mov
mov
repnz
mov
je
into
cmp
and
or
add
adc
outsb
jb
jae
xor
dec
stos
cmpsb
inc
dec
xor
mov
xor
dec
das
addr16
inc
leave
ja
or
mov
push
dec
sbb
sbb
mov
cs
push
rorb
jae
leave
jmp
lea
loop
xchg
das
sbb
in
pop
sti
lea
cmpsl
sub
jp
int
inc
adc
dec
and
sbbl
inc
lcall
pop
stc
cmp
dec
shlb
dec
adc
xor
int
popa
outsl
fistpl
push
xchg
inc
jb
pop
pusha
inc
test
mov
fildl
xlat
dec
ss
sbb
and
xchg
outsb
mov
int
xchg
xchg
adc
xor
lcall
xchg
adc
sbb
jbe
cmpl
sub
mov
insl
sub
out
insl
cmpsb
cmp
jmp
mov
xor
inc
ror
stc
lahf
popa
iret
aad
mov
fdivrp
pop
insl
fidivl
sti
insb
or
call
mov
sub
add
inc
inc
gs
mov
hlt
pop
and
leave
ja
xor
int3
jg
pop
fbld
stc
lret
mov
insb
adc
into
sub
and
ljmp
iret
in
cmp
and
add
loopne
jecxz
mov
and
lods
cmc
add
sbb
mov
adc
and
add
sub
jecxz
mov
xorl
pop
mov
lds
lods
or
pushf
daa
xor
cmp
fsubs
sub
or
jl
jmp
icebp
push
ja
cs
lcall
loop
mov
mov
lds
sti
in
add
xlat
xor
jo
cmp
mov
adc
cmpsl
lret
pop
xchg
mov
pop
loopne
cmpl
mov
mov
imul
ret
sbb
fcomp
adcl
add
jg
in
ja
inc
and
sbb
mov
inc
hlt
xchg
aaa
rcrb
inc
mov
add
std
pop
sub
js
jbe
outsl
icebp
lods
repnz
fsub
mov
mov
cli
sarl
jg
js
shrl
fistpll
in
call
stos
jp
inc
lds
mov
sahf
movsb
mov
push
int
adc
imul
mov
push
popa
xchg
bound
std
fstps
cmc
fwait
adc
inc
sub
mov
or
aad
pop
jp
mov
cmp
mov
cmp
lahf
sub
and
push
adc
insb
lcall
pop
movsl
aad
pop
xor
nop
pusha
decl
lods
push
sarb
cmp
dec
jo
dec
outsl
es
hlt
inc
cmc
fnsave
mov
sub
lret
lcall
cmp
or
or
add
repz
call
leave
xor
fidivs
test
test
orb
test
xlat
stc
imul
gs
cmp
mov
gs
push
sub
mov
in
pop
pusha
xor
ja
adc
xor
ja
jb
daa
xchg
jno
push
lods
inc
push
add
jns
inc
add
cmovne
pop
shr
adc
data16
adc
into
dec
rcll
in
push
fdivrs
hlt
outsl
and
inc
out
test
mov
addr16
roll
and
dec
lock
mov
ds
push
loope
dec
xor
aas
sbb
mov
pop
outsb
mov
test
das
das
pop
jmp
lock
dec
pop
mov
ss
mov
daa
ljmp
stc
addl
inc
out
stc
enter
inc
pop
pop
cmp
add
xor
adcl
mov
jle
testb
and
xchg
jns
push
scas
test
jmp
xchg
mov
aad
fcmovnb
xor
jo
xor
xchg
sub
push
in
out
push
mov
scas
adcl
hlt
and
fstpl
fs
test
push
out
fistl
lock
scas
iret
insl
pop
jo
jbe
dec
outsl
aaa
jp
and
call
sbbl
push
xor
dec
sub
insb
lcall
test
loope
jp
ss
cmp
xor
xchg
push
fiadds
jmp
out
test
lret
das
jl
sahf
lret
out
sahf
or
dec
in
pop
lods
add
mov
cmpsl
add
lock
ss
ljmp
xor
hlt
rcrb
mov
or
dec
add
fsub
sbb
pop
lea
or
inc
jmp
sar
mov
iret
xlat
movsl
mov
into
mov
xchg
ja
dec
pop
inc
mov
test
xor
hlt
sub
aas
mov
cs
add
xor
jg
fldcw
loop
rorb
inc
sbb
mov
jle
mov
fwait
btc
rorl
jge
das
fcmovnu
mov
xchg
dec
loope
test
mov
shrl
jne
lds
enter
cmpsl
fistpll
fcomi
ret
mov
sub
test
ret
loopne
sti
hlt
cs
jp
loop
aaa
dec
fdivrl
aad
cmp
or
sub
in
iret
mov
jb
imul
inc
inc
mov
dec
movsl
idiv
in
or
xor
or
pop
roll
js
mov
clc
cs
mov
cmp
lcall
pop
mov
mov
aad
adc
add
xchg
shrb
xchg
lock
xchg
push
scas
jo
filds
mov
sbb
pop
adc
out
stos
sub
mov
sbb
cmp
jge
mov
push
cmp
xchg
lea
pushf
mov
adc
push
dec
inc
cmpsl
pop
push
xchg
jne
push
adc
or
xor
push
aas
shl
gs
push
dec
mov
jg
mulb
out
sbb
mov
xor
or
imul
push
loopne
repz
adc
gs
bound
sub
pusha
enter
shlb
shll
adc
aaa
or
dec
or
pop
dec
js
push
mov
mov
adc
cld
arpl
push
mov
mov
cmc
push
leave
test
jae
imul
lcall
stos
test
or
sub
dec
xorl
inc
mov
sub
and
cld
outsb
aaa
movsl
stos
sbb
das
dec
mov
xor
das
mov
bound
insb
fnstsw
add
dec
mov
push
mov
mulb
sbb
iret
in
cmpsb
fwait
es
andb
xor
mov
sar
inc
rep
rcr
out
stc
clc
lock
mov
jne
lods
inc
lds
nop
dec
and
xchg
int
test
xor
jl
stos
iret
dec
add
nop
mov
jbe
insl
mov
mov
jp
xchg
and
jecxz
push
pop
cltd
ja
lret
lcall
and
dec
pop
data16
lea
pop
sbb
and
inc
push
gs
pop
mov
pop
call
jmp
and
out
jmp
ljmp
test
xor
aaa
push
jnp
mov
loop
sbb
xorb
sbb
adc
dec
add
adcl
in
dec
icebp
outsb
clc
mov
fists
cli
and
inc
mov
pop
dec
mov
mov
iret
sbb
inc
mov
cltd
aad
out
fisubrl
xchg
mov
cmpsl
shl
sbb
fidivrs
insb
xchg
mov
xchg
jle
mov
icebp
push
dec
stos
aad
aam
cmc
cli
mov
cmp
xor
imul
ret
mov
movsl
sti
pop
mov
or
jno
fs
mov
adc
push
ja
cltd
inc
fimuls
andl
int3
aaa
les
xchg
adc
xor
pop
add
fs
dec
nop
into
sub
lahf
inc
push
sub
push
inc
jne
ret
fidivs
fwait
and
addl
lret
adc
dec
sbb
inc
pop
push
arpl
stos
pop
xchg
sub
pop
sub
adc
dec
jae
push
mov
jecxz
push
ret
xlat
xchg
cmpsb
pusha
mov
sub
inc
pushf
arpl
push
mov
inc
cmp
mov
std
push
dec
fimull
mov
mov
push
aad
push
fistl
sub
sub
aas
lcall
dec
in
movsl
insb
mov
sub
movl
sahf
ficompl
dec
repnz
pop
negb
sbb
gs
iret
decb
xlat
lret
add
in
mov
fnstsw
xor
pop
insb
insl
mov
pop
inc
push
dec
and
mull
xor
in
mov
les
es
fidivl
imul
push
lret
int
lds
roll
das
jb
sbb
in
ret
push
fadds
les
int
cmc
lods
int3
cmp
push
lahf
repnz
data16
std
push
out
int
pop
das
xor
je
cmp
lret
lea
fnstcw
fldt
or
test
in
jnp
jae
outsb
cmc
inc
lock
loope
clc
les
ficompl
imul
xchg
das
adc
in
xlat
lret
out
filds
adc
insb
sahf
xchg
pop
test
cmc
push
mov
sub
inc
stos
jb
dec
sub
into
out
add
add
andb
push
lahf
mov
shrb
lret
enter
andl
movsb
jo
shlb
clc
xor
mov
xchg
jns
inc
add
push
loope
dec
ret
ja
ja
inc
pop
lods
repz
cmp
in
cld
cmc
xor
mov
mov
jmp
test
push
fdivrs
mov
push
pop
inc
imul
gs
out
xchg
inc
adc
jae
pop
pop
xchg
mov
aas
pop
push
sub
enter
maxps
lods
inc
or
xor
and
push
inc
in
sarb
add
outsb
sbb
fiadds
clc
enter
push
fbstp
pop
in
xor
xchg
paddusw
mull
mov
imul
gs
dec
lock
cmp
out
pop
sbb
and
fmuls
and
cltd
sub
push
ud0
outsb
jb
cli
pusha
jno
jge
test
sub
dec
jo
push
push
rorb
ret
pop
mov
push
into
jp
and
mov
sahf
or
inc
out
test
int3
sbb
inc
xchg
push
mov
pop
push
sub
cmpsl
out
ja
xchg
test
dec
add
adc
xor
enter
scas
sub
xchg
cmpsl
xor
pop
xor
dec
lret
xchg
sub
sub
sbbb
test
jbe
lea
mov
dec
data16
lret
jecxz
lock
push
pop
add
push
imul
call
sti
sbb
push
pop
sub
ss
sbb
fmuls
dec
add
cmp
inc
push
jecxz
or
or
mov
add
jecxz
inc
add
lret
shll
pushf
stos
xchg
mov
xchg
lods
jo
fucomp
xchg
add
ficoms
lods
sub
loop
int
adc
sub
xlat
push
vcvtss2si
mov
push
or
cltd
dec
cld
adc
push
les
sbbb
inc
incl
sbbb
outsb
test
jo
fistps
pop
sbb
pop
fimuls
sub
mov
mov
jle
and
pop
ret
int3
std
std
sbb
mov
outsb
iret
sbb
out
push
icebp
mov
sbb
jne
push
and
fcmovnu
negb
dec
cmpsb
insb
ret
aas
sbb
out
out
inc
out
dec
adc
adc
loop
test
or
push
and
loope
mov
xchg
push
pop
or
int3
dec
test
dec
sub
dec
inc
iret
or
xor
and
addr16
outsl
cmp
cmp
xor
xchg
jmp
lcall
adc
xor
cmpb
mov
push
dec
mov
xchg
mov
fwait
mov
fcmove
jmp
ss
cmc
out
test
andb
nop
mov
divb
stos
iret
stos
lea
cmp
arpl
add
jo
sti
jns
rol
xchg
push
push
ja
xor
dec
jns
fstpl
test
fcomps
mov
push
pushf
in
dec
mov
lcall
leave
pop
push
outsb
or
jb
sti
outsb
inc
pop
out
stos
call
mov
push
lret
and
pushf
repnz
jmp
or
sub
les
mov
lret
repnz
cmp
loopne,pn
sbbl
call
pop
sbb
sub
popf
loope
mov
aam
pop
or
stos
cltd
adc
push
andl
lods
mov
call
jno
xlat
test
imul
or
sub
dec
shrb
jbe
sub
and
mov
xor
lock
and
rclb
sub
pop
mov
cld
mov
xlat
imul
cwtl
add
dec
pop
xor
xor
dec
or
mov
mov
fs
gs
push
inc
mov
stos
hlt
mov
fcmovnb
fcmovne
rolb
mov
jb
mov
dec
cs
aas
mov
jae
xor
dec
aas
lods
mov
mov
xchg
rcrb
and
cmp
xchg
dec
fwait
out
jnp
sbb
dec
cld
out
lock
sbb
dec
je
popa
sahf
cltd
lock
push
mov
es
pop
mov
sub
and
xchg
push
push
push
adc
out
daa
mov
mov
mov
xchg
cmp
push
inc
out
inc
add
jne
negl
cwtl
push
inc
rol
mov
or
jg
mulb
imulb
in
xchg
jb
dec
aad
cmp
mov
sub
in
adcb
xlat
roll
sti
inc
ret
sbb
repz
repnz
lods
pop
arpl
mov
mov
and
jnp
pop
les
sbbb
push
pushf
cld
incl
jb
gs
sti
jmp
xor
dec
inc
jbe
int
cwtl
mov
sub
mov
test
xchg
jne
rolb
inc
lods
cmp
std
mov
adc
push
xor
jg
popf
int
outsl
loop
fcoml
push
ret
or
lahf
clc
lock
repz
xchg
jb
push
inc
jae
dec
cmc
loop
mov
jmp
pop
mov
in
dec
lea
daa
dec
pop
daa
mov
mov
fnstcw
push
dec
cltd
xchg
scas
pop
inc
lret
pop
mov
push
movsb
sub
mov
mov
loope
jb
enter
in
jge
addr16
push
adc
test
xchg
orl
dec
sub
or
popa
pop
repnz
xchg
jo
cmpsl
scas
dec
push
cwtl
add
jns
bnd
pop
je
lods
ficoml
lahf
inc
fmuls
popa
pop
and
push
push
bound
inc
rorb
push
jo
in
inc
fldlg2
hlt
sti
pop
insl
out
fs
and
cld
xchg
dec
fcmovnbe
adc
sub
icebp
ret
jae
cmpsb
sti
pop
jno
xchg
out
push
loope
and
pop
lods
int3
in
mov
fstpl
shrb
in
sbb
and
add
xor
int3
cs
jmp
out
lret
bound
mov
add
insb
rcrb
test
clc
adc
mov
popf
xchg
add
outsb
add
stc
cmp
jbe
pushf
push
jecxz
lds
jb
add
in
jmp
jnp
data16
scas
pop
lcall
mov
mov
or
testb
cmp
fimull
xor
icebp
pop
icebp
mov
adc
mov
inc
insl
sbb
push
inc
pop
mov
and
fmuls
mov
arpl
mov
cli
pop
pop
cmp
sub
push
hlt
mov
pop
test
or
imul
xchg
lods
inc
inc
lret
jns
int
push
sti
dec
aaa
mov
shlb
cli
sbb
sbb
scas
in
pop
cld
into
bound
aam
inc
bound
cmp
mov
xor
add
inc
cmp
xchg
scas
add
xor
popa
dec
push
mov
out
add
sbb
pop
mov
sbb
push
and
lea
test
cmp
das
mov
in
jbe
mov
ljmp
in
mov
div
jnp
gs
pop
fld
sahf
and
paddq
in
jns
adc
inc
lret
or
fcmove
clc
cs
dec
and
sar
sub
jmp
jl
cmpsb
xor
fs
pop
pop
push
scas
daa
mov
sub
mov
cmpsb
andb
mov
mov
and
dec
jecxz
push
inc
add
loopne
shr
cmp
jp
xchg
pop
insl
fwait
inc
mov
xchg
add
out
or
test
mov
mov
pop
add
cltd
test
mov
sbb
dec
and
scas
out
in
stc
sbb
and
pop
push
dec
push
sbb
pop
dec
dec
xchg
sbb
push
push
jle
xrelease
cli
add
scas
push
xor
call
sbb
dec
stos
icebp
ja
or
ror
xorb
inc
xor
mov
stos
add
subb
adc
icebp
aam
in
push
inc
sti
or
jno
mov
or
imul
les
outsl
mov
cmpsl
dec
divps
adc
in
mov
xor
xchg
pop
add
inc
dec
pushl
out
ret
mov
les
dec
mov
mov
or
dec
sub
push
orb
ret
dec
push
push
xchg
les
dec
add
xchg
jnp
mov
stc
cld
inc
add
mov
lods
or
push
in
inc
cmp
sarb
sbb
or
inc
adc
cmp
dec
mov
aas
cltd
fsubrl
out
aaa
sbb
adc
push
in
xchg
das
pop
cmp
xchg
dec
xor
in
mov
fstpt
dec
add
mov
bndstx
adc
inc
sub
add
jmp
scas
rcrb
or
dec
mov
push
cmpsb
lcall
jae
decb
lock
fcomps
add
mov
arpl
adc
mov
pop
insl
sbb
push
pop
stos
scas
adc
gs
xorb
inc
push
jmp
or
push
insl
pop
cmp
mov
xchg
pop
pop
fwait
jmp
mov
pop
adc
aas
leave
popa
popa
and
in
mov
and
popa
in
bound
repz
out
pop
sub
lcall
mov
push
lea
imul
sbb
and
jecxz
cltd
pop
into
fcompp
inc
arpl
jb
or
xor
push
mov
adc
xor
mov
or
mov
add
mov
cmp
xchg
mov
pop
int3
mov
adc
and
icebp
lahf
je
ret
fsubrl
xchg
pusha
in
dec
jl
xchg
inc
leave
xor
bound
int3
mov
mov
sbb
xlat
mov
in
jge
iret
mov
stos
mov
sbb
insb
and
fcompl
iret
fcompl
xchg
sbb
icebp
lea
aas
icebp
test
out
rcr
jo
adc
jp
adc
dec
dec
negl
jnp
sti
insl
mov
add
and
hlt
fcomip
push
cld
arpl
mov
adc
and
inc
dec
movmskps
scas
mov
push
fwait
mov
outsl
push
xor
test
int3
pop
sub
push
movsb
stos
arpl
mov
inc
cs
add
fadd
enter
je
fildl
mov
fwait
imul
mov
stos
out
mull
test
addr16
push
push
decl
mov
add
mov
xor
insb
loop
cmpsl
insb
xchg
adc
sub
in
sub
std
mov
xchg
inc
xor
jno
scas
dec
nop
jno
mov
and
les
jae
inc
push
divl
loop
sahf
les
lock
movsl
push
push
and
sbb
jns
hlt
les
out
push
xor
mov
jg
sub
ss
adc
sahf
sub
sub
cmpsb
jp
xchg
mov
call
loope
sarb
adc
jp
jecxz
cmpsb
ret
pop
lods
cwtl
pop
inc
ret
inc
aaa
stos
mov
lret
ljmp
add
bound
fmuls
into
sbb
mov
sarl
call
xor
xor
ficomps
and
jle
sbb
mov
mov
jns
xchg
test
scas
je,pt
adc
and
shl
ror
push
cmp
in
out
int
fisubrl
and
sub
rolb
xchg
or
pop
mov
pop
aad
push
test
dec
xchg
push
fcomip
stos
jle
lret
push
cli
sbb
int3
in
xchg
shrb
inc
mov
fmuls
mov
mov
ret
push
or
inc
pop
das
mov
clc
testl
push
and
cmpsl
add
insb
leave
lret
aas
lahf
jp
mov
cmpl
inc
pop
adc
adc
stos
ss
inc
cmp
ret
or
jl
mov
xor
test
push
adc
aas
jnp
ljmp
jg
out
jl
push
imul
stos
in
jp
test
push
in
in
push
scas
adc
aas
sub
mov
in
fmul
fldt
xchg
hlt
mulb
mov
dec
and
dec
shl
cmpsb
or
rorl
pusha
pop
nop
sub
xchg
adc
dec
hlt
stc
xchg
ja
ja
mov
cwtl
das
xor
cmp
pop
data16
shl
repz
sub
adc
jnp
sub
clc
mov
adc
stc
sub
sub
push
or
test
pop
nop
jae
pop
jae
xchg
adc
call
imul
inc
xchg
imul
imul
int
jg,pn
add
cmp
mov
mov
mov
push
mov
xor
mov
mov
insb
int3
add
rolb
mov
adc
xchg
jno
mov
push
jmp
jbe
mov
add
sbbb
lock
jns
xchg
loopne
dec
fildl
pop
mov
adc
addr16
call
cmp
daa
arpl
xor
mov
mov
cmp
les
outsl
insl
mov
inc
mov
call
es
xor
in
add
jo
fidivl
xorb
cmp
or
sbb
xor
lock
scas
sub
ja
jnp
inc
popf
xor
adc
pop
push
push
mov
outsb
daa
fadds
mov
mov
sbb
out
mov
mov
mov
into
pop
hlt
arpl
xorl
jl
add
popf
mov
xlat
push
es
xor
daa
ror
popf
cs
xor
dec
mov
inc
aaa
push
sub
adc
xchg
std
dec
lds
js
testl
add
test
sbb
inc
imul
test
sbbl
mov
mov
subl
adcb
nop
xor
fdivl
stos
xor
jmp
xlat
popa
mov
or
or
adc
es
xchg
jle
mov
imul
pop
jecxz
clc
pop
cmpsl
xchg
dec
sub
push
sbb
stos
cld
adc
daa
js
inc
pop
and
push
add
cmpsb
jns
xchg
pushl
push
std
pop
js
and
push
dec
loop
outsb
push
add
pop
movlps
movsl
mov
jmp
inc
fsub
jmp
add
mov
pop
sarl
xor
xor
test
ljmp
enter
mov
fs
jl,pt
mov
andl
test
hlt
fwait
push
les
out
shl
jecxz
sub
js
aaa
push
es
xor
out
fidivl
movsl
and
pop
popa
clc
int3
mov
push
dec
mov
insl
out
test
icebp
add
aaa
xor
iret
cmp
imul
jbe,pt
imul
lret
in
shll
jb
adc
mulb
pusha
jl
xor
in
add
add
or
mov
int
mov
sbb
imul
enter
dec
sti
cmpsb
pushf
sbb
arpl
dec
inc
bswap
loope
inc
jb
ja
mov
jge
test
push
mov
mov
xor
push
mov
lods
or
arpl
dec
lods
in
push
inc
movsb
orl
enter
jge
mov
adc
subb
jmp
test
in
lock
push
nop
out
push
imul
jne
pusha
jmp
das
into
icebp
cli
fmuls
gs
mov
mov
dec
fistps
aam
pushf
test
pop
jae
inc
nop
mov
add
pop
mov
repz
xor
call
add
loope
mov
in
jns
shlb
sbb
xor
outsl
fdiv
mov
ficoms
out
in
popf
imul
inc
stc
xlat
repz
insb
jle
inc
add
push
lahf
mov
xchg
out
out
push
mov
add
aas
pop
les
cltd
nop
imul
push
stos
pop
jg
jle
cmpsb
call
insb
xchg
jmp
or
mov
aas
clc
stos
inc
jmp
and
xor
fucomp
lahf
dec
or
xchg
lock
das
push
pushf
decb
pusha
jecxz
or
hlt
cmp
out
push
insl
clc
xor
les
fiaddl
mov
adc
lods
mov
aas
push
jle
mov
cmpsl
mov
inc
dec
arpl
mov
sub
push
inc
push
or
dec
loope
push
int3
sub
inc
cmc
rolb
push
xor
and
and
mov
pop
push
cmp
addr16
imul
dec
outsb
jle
push
sarl
das
push
lcall
inc
rorl
std
adc
insb
test
jl
cmp
mov
call
aad
and
insl
aam
ja
cwtl
push
stc
loopne
cmpsl
shll
sub
mov
xorl
pusha
jns
pop
lds
mov
jg
xchg
fcmove
cli
mov
clc
aas
jmp
cmp
popa
into
xchg
lcall
or
inc
cmp
adcb
xchg
sub
and
sub
ss
repnz
dec
mov
jge
pop
fists
leave
aas
aaa
and
xor
aas
imul
mov
push
cmp
push
lcall
lahf
sbb
hlt
xor
push
movl
pop
je
rolb
sub
pop
repz
fcmovb
sbb
push
push
cmp
jge
lods
popa
fwait
adc
outsb
and
mov
rol
cli
into
rcr
jae
scas
push
push
cmp
or
push
movsb
imull
pop
add
sub
je
dec
jbe
xlat
jo
aad
jb
in
cmpl
lret
loope
or
subl
sbb
sarl
push
faddl
adc
daa
push
js
pop
adc
out
adc
dec
or
dec
mov
pushf
xchg
stos
rclb
or
add
inc
inc
out
int3
les
jecxz
or
xchg
sub
outsb
mov
call
mov
pop
jo
iret
mov
test
or
dec
xchg
cmc
cmp
pusha
jmp
mov
mov
scas
sub
lcall
das
pusha
inc
in
pop
lea
push
push
add
mov
dec
inc
cmp
fildll
mov
push
dec
xchg
mov
sub
sarb
rcrb
cmc
aaa
sub
lods
outsl
push
pop
icebp
pop
in
in
clc
cld
in
in
adc
popa
jmp
enter
iret
xchg
adc
push
or
mov
lea
add
fsub
out
xlat
mov
movsl
cmpsb
and
inc
mov
fnstcw
nop
push
in
pop
jno
mov
xlat
lahf
hlt
xchg
leave
xchg
cmp
fidivrs
fbstp
cmpsl
rol
in
mov
daa
out
dec
mov
push
out
jae
jns
jne
roll
scas
pop
outsl
inc
je
sbb
outsl
mov
jle,pn
or
ror
fwait
pop
test
adc
mov
sbb
fisttpll
int3
jge
dec
jge
jo
mov
cmp
add
mov
pusha
lea
jns
mov
mov
push
mov
and
mov
inc
lret
in
lods
mov
nop
ret
in
add
sbb
dec
mov
popa
sbb
out
in
and
mov
cmp
mov
sti
and
fwait
ret
jb
pop
jge
cmp
cmpsl
nop
xor
sbb
lods
pop
mov
lret
cwtl
mov
mov
xor
push
add
mov
iret
in
clc
jne
fsubl
sbb
enter
sub
mov
and
add
stc
js
push
scas
lods
sub
push
jge
stos
mov
add
mov
rclb
in
pop
cwtl
loop
adc
ds
insb
sbb
dec
adc
cli
xchg
aaa
add
dec
adc
cli
lret
mov
adc
mov
es
arpl
mov
shll
mov
mov
or
mov
bound
lahf
adc
pop
loopne
lret
fwait
and
mov
daa
je
in
sti
jnp
adc
out
fstpt
inc
repnz
xlat
mov
mov
or
jmp
and
jmp
jbe
sub
test
testb
pop
adcl
stos
add
cli
aas
outsl
out
lea
jg
iret
es
fildl
mov
rorb
lods
enter
xchg
sub
ja
bound
inc
cmp
out
push
fwait
or
mov
aam
inc
mov
pop
xchg
jl
mov
hlt
scas
add
adc
out
inc
fwait
dec
roll
and
add
pop
outsl
adcb
mulb
decl
jb
mov
out
test
std
je
in
subl
push
clc
sub
ja
hlt
dec
adc
push
and
or
stos
sub
inc
mov
xchg
adc
fsubr
adc
iret
mov
xchg
push
add
mov
push
dec
jge
mov
add
jecxz
and
jbe
xor
jl
adc
inc
inc
add
out
mov
mov
stos
cltd
int
xchg
icebp
insb
add
jne
mov
out
sub
int3
into
inc
adc
cmpsl
dec
mov
mov
adc
mov
push
sub
roll
cmp
fisttpll
sub
push
mul
jecxz
jp
stos
mov
mov
mov
sub
adc
fmulp
rorl
fdivrl
jg
cmp
jle
mov
sbb
sahf
jne
dec
test
into
mov
mov
popf
adc
add
mov
dec
inc
jge
xchg
fidivl
mov
dec
dec
mov
in
int3
xor
sbb
std
cmp
mov
push
loope
cmp
jno
cmpsl
mov
dec
dec
cmpxchg
inc
inc
push
ljmp
xchg
inc
mov
xchg
test
push
bound
lret
xchg
adc
cs
pop
into
es
push
icebp
add
popf
shlb
in
pushf
loopne
loope
pop
dec
jl
cmc
cwtl
loope
push
cli
add
inc
ret
in
stos
jge
push
outsb
dec
cmp
pop
and
shrl
enter
xlat
dec
jp
mov
xchg
push
push
pushf
sub
jmp
mov
sarb
aaa
sub
jo
mov
nop
mov
push
add
loope
repz
mov
lret
iret
mov
lret
fsubs
sub
xchg
push
fstps
push
cmp
lea
push
rcrb
ret
lahf
ds
aas
push
inc
mov
xchg
in
dec
adc
mov
cmc
fisttps
mov
sub
sahf
imul
xor
inc
mov
clc
pop
aad
xlat
push
mov
mov
cmpsl
pop
inc
xchg
add
sbb
daa
cmpsl
cs
into
xchg
fnsave
mov
adc
int3
push
inc
mov
lahf
and
push
rcll
fdiv
cltd
ret
stos
sbb
mov
pop
cmp
shrb
lret
or
pushf
sub
movsb
rcrl
or
jecxz
ret
jp
inc
mov
cmc
andb
mov
daa
movsl
aam
in
pop
cmc
inc
mov
int
popa
cltd
out
iret
dec
pop
lret
jl
adc
jl
lret
enter
sbb
roll
ret
mov
mov
ljmp
je
adc
stos
push
into
lcall
push
sub
jecxz
push
adc
stos
stos
lock
sub
jle
dec
roll
mov
aad
jge
xchg
inc
sbb
mov
lods
orl
jp
inc
in
jae
mov
and
cwtl
pushf
stos
push
xchg
lea
pop
adc
add
dec
in
cmp
inc
jae
loope
ret
lock
jg
incb
push
add
daa
xchg
xchg
sbb
or
loopne
fmuls
and
add
pop
dec
jg
test
add
lcall
imul
inc
lret
inc
push
xor
xchg
lret
popa
push
mov
test
jno
andb
xchg
push
repnz
into
add
and
push
push
cmp
lret
adc
call
repz
pushf
rolb
mov
add
test
repnz
sbb
dec
push
and
dec
js
popa
inc
scas
jge
and
xchg
stos
out
sub
dec
cld
nop
ret
jmp
pop
adc
pop
popa
rorl
cltd
add
jns
in
jp
mov
cmp
pop
mov
pop
mov
movsl
jno
xchg
insb
lock
pop
inc
mov
xlat
xor
fildll
jnp
add
xchg
ficoml
shl
xor
fisubrs
adc
js
mov
roll
sub
les
mov
scas
pop
arpl
rcl
test
sub
dec
mov
cmp
cmpb
xor
sar
loop
adcb
dec
or
lahf
ror
int
sbb
daa
lds
in
cltd
sti
mov
mov
cmpsl
test
jns
negl
adc
sub
ror
xlat
lahf
sti
mov
stos
push
adc
jp
je
fsubrs
inc
adc
in
cltd
mov
loop
shrl
mov
lret
adc
icebp
xor
sbb
pop
shll
int3
mov
adcl
mov
and
jns
pop
mov
pop
ret
mov
sbb
aad
mull
jnp
push
lods
call
mov
sbb
mov
je
inc
pop
or
and
into
rsqrtps
out
and
out
add
test
jmp
ss
lret
lock
jp
jae
mov
arpl
or
mov
sub
out
and
xor
xchg
out
cld
push
pushf
out
sbb
adc
add
lret
add
adc
stos
rcrb
xor
mov
jns
sbb
pop
nop
inc
ljmp
push
ljmp
cmp
popf
mov
mov
fwait
add
in
mov
dec
std
dec
ds
rclb
push
inc
mov
lcall
into
dec
mov
loopne
add
rcrb
daa
les
pop
fistps
sbb
sub
fldt
cmc
lds
dec
mov
fndisi(8087
repz
cmp
sahf
fdivs
cmc
adc
cmp
jle
insb
jae
adc
rep
aad
ret
add
je
lods
push
or
fistpll
out
pop
mov
pop
sahf
xchg
nop
push
jecxz
nop
dec
pusha
dec
loop
arpl
faddl
fidivl
mov
inc
push
insl
sarl
int
jp
or
stos
int
xor
cmc
out
mov
ds
cmp
out
inc
inc
adc
fsubs
popf
adc
mov
les
dec
mov
popf
push
mov
lods
or
ja
dec
fs
call
out
std
loope
jo
inc
nop
fs
xorl
pop
lcall
cmp
imul
pusha
mov
xor
mov
imul
pushf
out
in
out
pop
xchg
jle
mov
jmp
test
lods
pop
cs
dec
jmp
shl
dec
inc
into
sub
dec
ficoml
ja
mov
fcmovnu
mov
xlat
jne
data16
das
movsb
jmp
stos
sbb
mov
stos
cmp
fcmove
sarb
mov
ret
clc
ljmp
stos
adc
adc
mov
mov
jp
enter
into
es
push
scas
inc
outsb
sub
ret
and
mov
xor
fiadds
rolb
dec
scas
jnp
pop
mov
push
mov
xor
mov
mov
insl
sti
add
call
fs
jne
dec
ret
sahf
mov
and
and
or
and
lods
stos
or
negl
and
push
or
in
out
clc
mov
mov
lds
movsb
push
cmp
jp
cmp
push
into
and
mov
mov
dec
cmpsb
dec
test
int
movl
jp
pop
ret
les
push
mov
sub
in
mov
mov
cltd
repz
lret
insb
pop
cmc
jle
pop
lcall
sub
jecxz
inc
push
aaa
inc
mov
sbb
iret
into
inc
and
sbb
cmp
dec
dec
xchg
in
cmp
jecxz
push
mov
jmp
xlat
rcll
and
mov
ds
js
mov
mov
mov
fmulp
jecxz
mov
sbb
mov
xchg
pusha
adc
setl
lods
inc
lea
dec
xchg
jp
es
nop
jmp
mov
in
xorb
das
pop
es
sub
sbb
call
push
out
lods
sbb
cld
inc
aam
mov
ljmp
cmp
lock
addl
mov
jecxz
imul
dec
fadds
int3
fs
adc
insl
sbb
jbe
jno
and
loope
repz
and
cmp
xchg
shrb
cmp
xor
loop
mov
addr16
push
xor
mov
ljmp
es
sbb
negl
jecxz
pop
add
adc
cmp
jl
cmpsl
sbb
test
and
xor
sbb
jne
push
jo
xchg
add
jbe
lds
cmp
push
inc
dec
nop
ss
ss
arpl
jb
popa
fsubrl
and
mov
aad
cmc
es
out
cmp
sbb
andb
aas
mov
decb
cmpsl
inc
mov
mov
loop
pop
jnp
aad
adc
loopne
push
rclb
lds
xchg
adc
movsb
inc
sub
test
ret
test
push
pop
sahf
push
adc
cmp
daa
lahf
xchg
icebp
es
pushl
push
sarl
or
je
push
xchg
popf
mov
es
nop
inc
xor
push
pop
push
mov
sbb
pop
jge
enter
lea
push
test
cmp
pop
lods
jp
fwait
pop
push
pushl
and
push
loopne
repz
mov
out
inc
in
fstpl
movsb
jnp
mov
or
lds
aas
xchg
notl
sub
fst
adc
and
popa
mov
testb
lcall
test
sub
inc
inc
lds
aas
repnz
add
pop
cmp
cli
pop
push
dec
inc
fsub
sbb
daa
iret
insb
in
outsb
shlb
pusha
dec
push
or
push
not
fldl
ret
pop
jne
or
ss
hlt
test
jle
mov
stos
into
inc
ds
cltd
pop
es
cs
sub
jle
add
leave
add
ret
mov
xor
jle
shll
pop
sub
dec
mov
aaa
and
sahf
mov
mov
or
xor
les
test
mov
popa
or
mov
aas
pusha
out
xlat
cmp
les
decl
mov
mov
mov
inc
push
mov
push
mov
stos
push
mov
sub
inc
push
xor
mov
mov
sub
push
push
rorl
mov
jmp
je
cmp
cwtl
or
aas
fcomi
and
subl
or
sub
sub
xor
jae
push
mov
adc
sub
jo
sub
fmul
fdivs
push
push
lcall
push
movsb
and
mov
out
cmp
or
icebp
mov
cmp
mov
sbb
cwtl
jp
lods
and
popf
sub
add
mov
pop
mov
lcall
lea
es
and
mov
jnp
lret
sbb
mov
dec
push
ss
es
add
pop
mov
aam
mov
xchg
add
in
sahf
hlt
outsb
cs
loope
sub
push
mov
outsb
add
outsb
icebp
cmpsb
adc
dec
cmpsl
xor
sar
mov
inc
cmp
ss
push
outsl
sbb
dec
mov
leave
lret
adc
push
push
ljmp
mov
mov
fucomip
mov
jg
add
cmpb
xchg
imul
jbe
mov
xchg
or
sub
pop
jb
pop
mov
and
mov
sahf
push
mov
out
and
adc
fdiv
jge
add
rep
jno
call
cmp
or
and
and
mov
push
fildl
loope
adc
out
mov
push
cmpsl
stc
push
or
lret
sbb
push
lahf
cmp
vxorpd
mov
lahf
aaa
sbb
clc
mov
out
cwtl
into
sub
inc
inc
dec
add
scas
mov
mov
mov
xchg
idivl
mov
call
mov
shll
mov
jge
push
mov
mov
testb
xchg
add
cmp
cltd
mov
mov
add
mov
ss
loop
mov
cmpsl
and
lea
fs
call
ss
dec
inc
sbb
cmp
imul
out
mull
inc
pop
adc
xchg
int3
and
jb
aas
pop
push
dec
xorl
jns
ficompl
les
sbb
or
cmp
fs
push
pop
arpl
jmp
in
mov
dec
in
push
adc
mov
and
or
filds
fs
and
push
cltd
xor
dec
int3
xchg
pop
sbb
sahf
std
xchg
arpl
leave
mov
mov
inc
roll
mov
jbe
test
or
xchg
mov
mov
cld
jmp
in
inc
fimuls
pop
testb
scas
push
mull
movsl
outsb
mov
jo,pn
out
out
adc
push
out
gs
and
ret
int
mov
fucomip
jmp
add
push
mov
out
pop
aas
jne
jnp
fdivl
cmp
jne
sub
out
test
mov
fnstenv
cmp
pop
xor
push
cmp
out
jb
pop
push
hlt
xchg
sbb
sub
imul
mov
or
jle
ja
dec
in
inc
mov
dec
xor
pop
stos
pop
lahf
adc
sarb
push
adc
xor
shrl
sub
shlb
cltd
cltd
loope
fs
test
es
mov
push
out
scas
fwait
xchg
mov
ficoml
cld
jge
scas
jmp
dec
or
sbb
testl
in
popa
popa
aaa
outsb
push
cmp
pop
mov
scas
loope
dec
test
rorl
mov
mov
stc
dec
jo
and
adc
xorl
lods
or
pop
mov
jmp
shl
andl
push
cld
inc
xchg
out
ret
sub
aam
cmpsl
int3
popf
data16
cltd
dec
sahf
push
push
lods
sahf
inc
lcall
fsubr
sub
decl
adc
push
xor
mov
pusha
mov
pop
sub
adc
in
or
lcall
or
push
ficoml
mov
push
and
pop
pop
add
mov
fbstp
lret
jno
xchg
fimull
jne
add
pop
xor
dec
bound
sub
insl
pusha
pop
in
add
cmc
xchg
mov
aaa
arpl
incb
or
arpl
adc
aaa
imul
xorb
adcl
jno
mov
mull
lock
lods
dec
dec
addr16
dec
mov
jmp
dec
mov
movsb
or
test
push
add
jne
in
sahf
test
push
stos
addr16
ja
add
sbb
dec
mov
insb
fs
pop
xchg
sbb
in
adc
sbb
andl
into
dec
or
sub
pushaw
dec
sub
ja
mov
adc
mov
pop
popa
js
xchg
xchg
dec
pop
mov
xor
xchg
je
mov
sarl
jmp
fisubrs
incb
rcrb
test
incl
insl
shl
adc
inc
shrb
out
fs
cmpsb
test
outsl
xchg
sbb
pop
mov
dec
pop
push
cmp
rol
aas
out
pushl
cmpsl
sub
mov
sbb
sbb
mov
sub
cltd
leave
pop
shrl
jno
daa
stos
jns
xchg
lock
inc
jae
xchg
inc
pop
in
imulb
dec
int
movsb
jmp
lods
pop
test
int
mov
cmc
test
mov
fwait
jle
add
pop
dec
jge
adc
xor
xor
iret
sbb
jp
xchg
repz
mov
mov
jmp
sub
sbb
imul
and
ds
stos
mov
fadds
dec
arpl
pop
xor
lret
add
dec
dec
ret
leave
das
loop
push
adc
shlb
data16
add
pop
rcr
inc
fsubl
sarb
sbb
mov
data16
aaa
cli
add
sub
push
loopne
les
call
repz
inc
sbb
arpl
xchg
fiaddl
jno
and
aas
fwait
xchg
xchg
sub
sub
out
out
fbld
push
add
sbb
cs
and
add
in
xor
pop
adc
outsl
mov
iret
pop
out
or
xchg
inc
aad
loopne
xchg
in
insb
leave
ds
stc
jle
and
mov
mov
sbb
ret
cmp
loop
inc
mov
ja
inc
mov
sbb
hlt
rol
push
mov
loope
stos
lret
stc
popf
in
xor
xor
inc
mov
arpl
jne
dec
out
dec
pop
mov
dec
xchg
sbb
mov
add
mov
push
lods
pushf
adc
pop
xchg
push
addr16
popa
jmp
cltd
xchg
pop
loopne
or
add
mov
mov
shlb
cli
xchg
negb
scas
jbe
push
lret
jmp
fs
inc
xchg
test
pushf
neg
imul
mov
cmpsl
sub
rcr
xchg
test
insb
outsl
pusha
jb
loopne
ret
fbld
cmc
inc
pushf
shrb
mov
jg
lret
ret
cmp
lret
cmp
mov
bound
testb
sub
cmp
scas
xchg
add
lret
cmpsl
ljmp
nop
pushf
stc
scas
mov
jnp
sahf
stos
xchg
sub
test
flds
add
push
nop
push
and
fstps
shlb
sbbl
or
cld
lock
pop
or
cmp
sub
roll
jbe
lahf
inc
aas
mov
fadds
pop
mov
idivb
dec
inc
mov
cltd
fldcw
dec
jae
repnz
dec
dec
lcall
fsts
sub
scas
clc
enter
fldenv
lea
lds
pushf
xor
iret
dec
shl
mov
sub
and
mov
out
ds
inc
jns
push
mov
jnp
inc
push
cmp
xchg
subb
jnp
clc
push
adc
adc
and
lret
push
mov
test
sbb
mov
ret
push
stos
push
rcrl
or
test
mov
pop
addr16
xchg
incb
mov
mov
leave
cmp
jno
das
jne
xor
insl
cmpsb
cmp
rorl
and
outsb
mov
inc
and
mov
mov
aam
mov
imul
sbb
insb
jl
test
fwait
or
stos
sbb
adc
lods
cmpsl
scas
shl
sti
cld
out
mov
adc
jno
test
cmp
add
add
sbb
add
or
jge
sbb
and
insb
cli
push
repnz
pop
push
ret
outsl
loopne
in
cmp
jl
sbb
push
out
sub
mov
into
stc
sub
loope
pop
fbstp
in
dec
push
aas
add
cs
sub
daa
call
adc
push
adc
out
xchg
stc
push
xchg
jge
mov
mov
iret
nop
stos
cwtl
das
sub
out
xchg
vmread
or
insl
inc
insb
sbb
out
add
pop
cmp
mov
adc
pop
in
cmpsl
pop
addb
pushf
out
cmpsl
lea
addr16
sbb
shl
movsb
mov
addl
sbb
and
push
push
xor
push
jmp
adc
lea
pop
mov
lock
mov
xchg
pop
sti
sbb
rcrb
mov
fcmovu
add
cmpl
pop
sbb
mov
jge
pop
add
sbb
dec
repz
subl
mov
inc
mov
mov
cmp
inc
cmp
sbb
mov
xchg
pushf
jmp
ret
jb
jecxz
sub
add
fwait
ds
lods
push
mov
test
jmp
in
mov
iret
mov
add
lret
cwtl
nop
mov
fiadds
ret
xchg
cmc
jp
xor
jbe
mov
popa
enter
mov
iret
ss
out
adc
testb
xlat
mov
mov
popa
and
cmp
std
or
cli
mov
pop
dec
cmc
aad
popa
adc
inc
ds
pop
nop
clc
push
aas
arpl
jle
pop
bound
push
mov
hlt
out
adc
dec
les
ss
dec
pop
xorl
xchg
dec
jge
inc
jle
arpl
icebp
movsb
rorl
or
sub
lahf
and
cwtl
cmp
fldenv
mov
leave
lea
arpl
lret
es
inc
fnstsw
stos
stc
or
cmp
fistps
xchg
cmp
and
xchg
lcall
xchg
fistpl
les
pop
div
sti
jecxz
dec
dec
mov
inc
sbbl
dec
scas
and
pop
in
stos
cmpsl
pop
mov
js
push
mov
leave
jmp
sbb
movsl
ds
lret
xchg
movsb
mov
in
scas
out
inc
imul
cli
leave
adc
aas
mov
mov
cmp
or
out
push
or
pop
push
std
shll
jp
push
cmp
push
mov
addr16
sub
xor
pop
add
adc
rolb
cwtl
sbb
sarl
mov
rcl
mov
fldenv
mov
mov
sbb
rclb
xchg
ret
xchg
mov
jbe
and
or
xlat
int3
mov
jmp
push
dec
mov
inc
mov
out
mov
mov
mov
lods
inc
insl
and
or
stc
lods
shlb
bnd
pop
scas
inc
sahf
or
push
mov
inc
mov
out
mulb
xor
and
and
andb
fwait
mov
add
bswap
in
xchg
inc
out
inc
add
xchg
lret
jnp
out
bound
xchg
xchg
ret
shrb
and
lods
adc
out
out
ret
inc
add
loopne
sbb
stos
in
mov
movsb
push
nop
das
shr
mov
andl
fistpll
push
mov
lock
add
sub
rolb
and
or
or
mov
sbb
mov
pop
push
push
and
mov
shrl
filds
test
push
add
js
cmp
in
into
fs
rcrl
in
or
cmp
shll
push
hlt
shrb
sub
lret
mov
je
dec
sub
mov
das
add
jge
pop
je
aas
pop
xor
icebp
leave
cli
cmp
inc
jbe
mov
mov
mov
add
inc
fwait
ljmp
sub
jecxz
cmp
xchg
popf
pop
jle
pop
jne
fmul
pop
xchg
xlat
xchg
aas
jne
push
out
mov
or
xchg
cmc
cmp
sub
inc
lds
lcall
data16
cmp
push
imul
sbb
dec
fwait
or
lock
fucom
add
loop
orb
or
pushf
loopne
rclb
push
mov
mov
loop
dec
mov
cmpsb
mov
sbb
dec
pop
push
insb
imulb
test
xor
daa
or
insb
push
aas
out
ret
movsb
lods
cmp
cmp
aas
test
mov
int
jmp
push
mov
cmp
sub
adcl
std
dec
mov
pop
leave
or
xor
repz
or
adc
sub
in
xor
sbb
mov
pop
xchg
movsb
lea
adc
mov
jl
push
dec
dec
cmp
adc
inc
popa
fidivrl
xchg
insb
xor
jae
sbb
sbb
add
and
js
loop
inc
leave
lret
rol
rolb
lret
loopne
jns
pop
in
test
push
sub
lods
mov
cld
insl
imul
and
fcmovnbe
into
pop
sbb
xchg
fldl
mov
aaa
roll
fs
std
movsl
add
in
fldenv
mov
sbb
sbb
mov
xchg
or
jno
in
pop
loopne
ret
sub
std
fdivl
mov
adc
movsl
dec
daa
sbb
out
jle
add
mov
cltd
fldl
fcomp
repz
jnp
lods
pushf
jns
dec
mov
add
sbb
and
in
fldl
insb
mov
test
jle
mov
pop
lret
shll
jb
fisubrl
ret
jp
inc
pusha
jge
sub
xlat
and
dec
jns
std
movsb
push
ds
addb
ret
add
rorb
add
aas
sub
fcomi
jp
and
sub
dec
cltd
sbb
add
xchg
adc
push
cld
dec
imul
outsl
jb
adc
sub
nop
das
push
sub
jb
jb
lea
xchg
dec
daa
push
icebp
outsb
dec
sub
scas
ja
cmpsb
std
inc
das
popa
into
mov
xor
sub
mov
sbb
sbb
imul
xor
cmp
rcll
or
ljmp
jmp
fnsave
pop
sbb
sbb
cmp
ljmp
inc
lcall
int
hlt
mov
cld
repnz
mov
dec
push
lret
shll
enter
xor
lcall
clc
sub
ds
shlb
xor
and
je
cmp
test
testl
cwtl
imul
sbbb
and
fistpll
jo
mulb
icebp
sbb
cmp
negl
pop
pop
das
mov
rclb
loope
mov
movsl
ss
int
rcr
inc
hlt
mov
xchg
jnp
addr16
cli
xor
ja
out
dec
test
shrb
mov
or
js
lods
sbb
ds
sbb
mov
sbb
push
inc
mov
sarl
iret
icebp
mov
sub
movsb
mov
insl
iret
mov
in
inc
js
cmp
mov
push
mov
jle
push
lcall
push
adc
movl
imul
mov
fs
push
xor
test
insb
jo
or
andl
push
jbe
cs
scas
adc
les
push
aaa
dec
aam
lcall
jge
inc
sbb
lcall
add
into
mov
add
out
daa
fdivl
xor
popf
fwait
sub
pop
sbb
push
pop
out
mov
jle
jmp
mov
dec
pop
cwtl
mov
sub
sbb
iret
cmp
pop
push
addl
mov
jmp
dec
push
daa
sbb
dec
mov
jo
mov
js
sbb
in
push
int
fidivl
jmp
not
adc
and
xchg
mov
orb
notl
mov
dec
sbb
adc
outsb
jg
fwait
jge
mov
aaa
or
adc
sub
sub
push
push
add
shll
bound
fistpl
cwtl
aas
gs
subl
push
mov
imul
pusha
mov
fdivl
outsb
test
mov
mov
cs
ljmp
pushf
bnd
mov
daa
std
mov
lahf
sbb
js
xor
lcall
fists
syscall
sub
and
push
jnp
test
xlat
jmp
inc
push
lcall
sub
lock
lret
shrl
cld
adc
repnz
mov
fstl
cmpsb
cs
decl
dec
shl
add
push
aaa
dec
leave
ficoml
test
fwait
inc
inc
jl
daa
mov
add
push
stos
push
jg
sarb
xlat
add
pushf
cmpsl
mov
jbe
mov
stc
add
xchg
adc
push
ljmp
orl
mov
adc
aaa
or
ja
sbb
repnz
fisubrl
jbe
xor
and
mov
lahf
inc
fisubrs
cmc
aas
dec
leave
push
cmc
das
test
and
add
je
mov
push
push
push
add
fucomip
imul
inc
testl
cmp
add
out
inc
push
aad
mov
std
dec
lcall
or
inc
les
jmp
sbb
sbbl
cmc
mov
xor
add
insb
dec
shll
jns
inc
int3
popa
push
scas
fsubrl
int3
mov
lods
sub
mov
cmp
xchg
call
into
mov
cmp
rolb
test
movsl
cmp
jbe
xlat
mov
mov
push
sbb
in
shr
lcall
jb
dec
and
mov
fldt
push
adc
sbb
cmp
mov
movsb
pop
fsubs
adc
xchg
adc
mov
out
jo
inc
sbb
lea
jns
insb
xchg
add
cmc
xor
dec
mov
inc
push
repnz
pop
notl
cmp
in
mov
enter
dec
pop
cmp
jnp
js
jne
xor
int
mov
nop
adc
mov
cmpsb
subl
shrb
mov
jmp
int
out
outsl
bound
mov
mov
xor
xor
nop
add
mov
adc
xlat
dec
xlat
xor
jns
mov
push
jl
pop
inc
jo
pop
ja
dec
jne
cmp
xchg
adc
push
sbb
aas
mov
mov
xchg
jne
and
ja
out
xlat
jb
int3
lods
or
int
adc
cli
or
insb
popa
lret
out
push
dec
cld
jl
lock
mov
or
lods
and
adc
mov
sub
pop
sti
or
pop
adc
push
push
or
shrb
inc
or
rorb
adc
inc
cmc
mov
inc
dec
and
int3
pushf
mov
jl
xor
xor
lcall
clc
add
jl
out
adcl
stc
mov
testb
pop
into
and
fstpl
xor
mov
add
xor
mov
or
and
sbb
dec
and
sbb
inc
enter
jmp
loope
or
lret
out
arpl
fcompl
test
leave
push
jecxz
mov
mov
push
sbb
shll
inc
aam
pop
and
adc
test
loope
sbb
inc
fimull
push
xorb
dec
sub
int3
subb
pop
sub
insl
or
push
jmp
adc
aam
adc
mov
pop
mov
and
or
jbe
subl
cltd
sbb
aam
jae
xchg
loopne
outsb
pop
mov
mov
sti
scas
push
xor
in
jo
push
xor
add
out
mov
orb
and
mov
jb
aad
push
add
cltd
pop
imul
iret
in
in
scas
mov
mov
xor
jl,pn
jns
imul
or
out
jae
idivb
cltd
dec
jmp
icebp
out
das
jge
push
push
xchg
lret
loop
cltd
movsl
test
xchg
fiadds
aam
insl
repz
sbb
inc
inc
lret
lods
leave
imul
dec
ficoml
dec
loope
add
adc
loop
mov
inc
xchg
fdivl
mov
sbb
fidivs
push
xor
popa
push
out
outsl
shr
pop
xchg
dec
les
mov
xor
shlb
xlat
stc
add
loope
pop
ljmp
xchg
cmpsl
pop
mov
mov
add
mov
sbb
xor
aad
test
arpl
mov
mov
jmp
leave
pop
xchg
fs
test
push
add
stc
movsb
mov
jmp
pop
out
add
cmc
ds
inc
pop
xchg
outsb
push
test
and
xchg
sbb
adc
adc
rcrb
mov
stos
xor
mov
jg
push
fisubs
popw
push
mov
lds
cmp
imul
ret
sbb
push
cs
lret
adcl
mov
adc
cltd
ds
call
push
jne
cmp
dec
js
pop
cmp
mov
sub
jae
jge
and
jle
mov
incl
add
dec
int3
loope
imul
js
dec
jle
mov
daa
adcb
push
in
adc
jb
push
cmp
cmpb
hlt
xor
pushf
lret
add
sbb
mov
xchg
fcomps
ss
adc
adc
cmp
mov
cmp
scas
mov
pop
jb
pop
orl
and
jmp
sub
and
dec
rorb
sub
test
and
lcall
aam
xchg
in
sub
add
fwait
xchg
sub
xchg
xlat
mov
add
or
dec
cmp
lret
xor
xchg
sbb
xlat
mov
pusha
nop
dec
sub
add
roll
inc
fsts
push
pop
jo
loope
lret
aaa
dec
pop
repz
mov
ljmp
ffree
adc
addr16
cmc
negl
fidivl
jne
mov
or
mov
xchg
popa
jae
pop
adc
jae
and
es
pop
dec
sbb
pop
xchg
es
clc
loop
fstpt
jp
mov
xor
xchg
lds
dec
sbb
lock
push
inc
pop
adc
add
rcrl
shlb
mov
xchg
imul
dec
lea
hlt
cmc
clc
sub
push
fildl
ds
imul
jecxz
push
and
pop
jge
jp
inc
sub
or
shll
and
stc
dec
clc
xor
mov
aaa
jle
stos
and
mov
pusha
add
or
in
adc
dec
mov
add
faddl
mov
popa
mov
daa
push
bound
pop
or
sub
adc
and
mov
xor
call
ret
ret
std
push
iret
ja,pt
fldenv
or
add
xchg
pop
das
add
push
add
pop
cmpsl
cld
cli
int3
cli
add
sbb
call
std
adc
inc
out
sub
pushfw
imul
addl
aad
xchg
adc
mov
add
mov
outsb
mov
push
xchg
mov
lret
inc
ficomps
xor
in
ja
data16
icebp
jg
aad
fiaddl
push
xor
cli
mov
popf
pop
pop
jo
or
sbb
jo
xchg
nop
nop
adc
icebp
cmpsl
comiss
insl
push
jb
mov
dec
test
inc
mov
test
push
xchg
test
enter
in
xor
call
in
mov
sub
leave
cmp
sbb
cmp
popa
imul
jbe
push
push
sbb
mov
add
sbb
aas
sahf
push
pusha
jge
mov
cwtl
lock
dec
dec
inc
testb
stc
inc
fisttps
jl
in
lods
pusha
dec
inc
xchg
mov
ss
jecxz
call
ret
pusha
adc
add
xor
dec
jp
sub
sub
mov
dec
ret
hlt
xchg
xchg
clc
or
xchg
sbb
out
jle
aaa
add
jb
push
add
out
inc
sub
jecxz
or
mov
lds
pop
insb
xchg
sub
fs
jge
cwtl
test
fadd
rorb
or
lea
test
aad
xchg
pop
cmp
stos
fildll
neg
sbb
xchg
xor
mov
lahf
sub
xchg
jl
xor
jl
jmp
push
mov
or
xor
arpl
fisubrl
inc
arpl
ljmp
aad
push
push
test
xchg
sahf
lret
cmp
inc
ret
inc
sbb
ret
test
pop
cmp
dec
jg
jb
cmp
adc
clc
jno
jbe
jp
outsl
sahf
lock
xlat
loope
je
push
lret
xchg
cltd
insl
in
mov
add
sbb
sub
cli
scas
ret
ret
add
out
or
pop
aad
dec
jge
push
inc
jne
stos
stos
push
les
out
inc
test
push
mov
cmc
bnd
dec
data16
lods
and
sarb
das
and
sub
push
jmp
add
sti
imul
cld
cmpsl
gs
jp
jne
lahf
jbe
inc
and
mov
fstps
cmp
mov
dec
data16
pop
dec
addr16
imul
stos
mov
loop
cs
mov
fisubrs
popf
rol
push
lahf
cmp
jle
inc
or
popa
cmp
jge
push
pop
inc
pushf
pop
addr16
ret
cmp
mov
sub
push
dec
bound
mov
mov
fwait
cmpsl
mov
les
inc
insl
or
clc
test
scas
xchg
cmp
hlt
out
in
jmp
inc
test
mov
mov
lock
int3
jp
divb
aad
aas
xor
ljmp
mov
movsl
jno
jl
mov
roll
ret
scas
pushf
inc
inc
xchg
and
adc
dec
jae
sub
inc
adc
cmp
add
mov
out
mov
sub
adc
cs
mov
dec
mov
cwtl
sub
in
cmp
aad
in
cmp
scas
lods
test
sbb
sbb
test
andb
xchg
aas
inc
out
push
dec
cmp
mov
lea
add
sub
and
popf
mov
lret
jbe
fisttps
pusha
mov
jecxz
xor
or
mov
and
and
inc
popf
fs
cltd
and
dec
xor
jge
daa
mov
aad
fdivrp
push
imul
ja
ss
xor
or
fisubrs
and
cmp
in
add
jae,pt
push
hlt
pop
inc
cltd
push
lret
and
pop
je
adc
out
popf
mov
in
pop
arpl
clc
nop
in
adc
pop
roll
mov
mov
and
ljmp
filds
sub
stos
les
jne
push
std
fucomp
pop
lock
test
jnp
inc
out
mov
loope
mov
mov
sub
sbb
xor
xor
sub
pop
sbb
inc
ret
int
dec
ja
or
es
leave
mov
xor
negl
add
push
jb
testb
inc
sub
lret
mov
dec
mov
push
xchg
cld
imul
lods
fnstcw
jmp
or
je
mov
or
and
fcoms
dec
lds
outsl
jb
out
or
sti
gs
mov
pushf
sbb
popa
and
insb
lahf
test
lods
mov
xchg
lds
fistpll
daa
mov
das
jo
insl
xor
shlb
shrb
insl
push
sbb
inc
xchg
dec
fs
out
ljmp
push
inc
inc
imul
push
xchg
push
mov
jbe
or
cmp
or
jno
pop
leave
push
popf
add
and
nop
repz
adc
arpl
sbb
dec
xor
repz
jl
scas
add
adcl
jb
mov
cld
lahf
or
iret
enter
cs
or
jbe
aas
pop
mov
adc
stos
inc
aad
aad
test
mov
inc
cmp
xlat
cld
shlb
fcoms
xor
fsub
mov
pop
sbb
pop
inc
test
sub
adc
test
xorb
cmpl
mov
into
mov
inc
push
int3
jmp
mov
dec
adc
pop
jno
iret
testb
xchg
rclb
cli
cmp
popf
xor
sbb
or
xchg
mov
pushf
and
jmp
inc
setae
jg
int
inc
ret
and
push
in
push
mov
inc
popf
xchg
fldln2
shl
xor
adc
xor
outsl
pop
dec
aad
lods
ljmp
xchg
or
leave
dec
or
mov
int3
push
add
ret
dec
pop
cld
sti
pop
xchg
add
pop
adc
dec
std
shl
cmpsl
push
call
jecxz
mov
pop
sbb
rcrl
push
cmp
mov
stos
jbe
pop
dec
pusha
dec
mov
xchg
cmp
shrl
lret
pusha
add
je
push
xchg
sub
mov
mov
ret
fwait
bound
ror
cmp
lea
loopne
sub
lcall
mov
pop
mov
jns
xchg
fsubs
cmp
inc
ffree
dec
mov
sbb
and
sub
jmp
aaa
pop
push
push
mov
mov
mov
out
add
xchg
inc
in
ja
out
inc
sub
sub
out
add
push
inc
cs
xchg
js
pop
lds
out
test
and
test
cmpsl
imul
pop
add
add
push
lret
imul
xor
cmpsl
movsb
sbb
dec
lret
mov
jno
negl
adc
in
imul
insb
add
dec
jae
xlat
dec
push
mov
nop
push
clc
sub
arpl
mov
sub
popf
pop
or
sbb
lods
push
aad
mov
pop
sbb
cpuid
dec
and
or
push
call
xlat
call
and
cltd
pop
sbb
xor
cmp
fisttpll
xorl
bound
jmp
insb
fstpl
je
lahf
jo
insb
jp
push
lcall
imul
xlat
pmullw
mov
jno
sbb
and
sub
or
arpl
movsb
add
xchg
movzwl
mov
dec
int3
sti
notb
lock
mov
out
imul
mov
pop
or
call
pushf
aaa
cmp
mov
sbb
or
shlb
and
push
rcrb
mov
pop
inc
enter
xchg
add
pop
mov
jne
popa
mov
cmp
mov
stos
jl
test
push
js
mov
or
ja
bound
mov
pop
sbb
lea
mov
outsb
aas
pop
fwait
into
aas
mov
xchg
leave
dec
lds
jne
fiaddl
sub
lods
call
imul
inc
dec
jge
fwait
mov
movsb
incl
jbe
je
push
and
sbb
adc
dec
inc
mov
jmp
cmp
adc
lock
into
frstor
adc
sub
jg
mov
pusha
push
xchg
test
sarb
xor
cmpsb
jno
scas
sbb
daa
cmpsb
lret
jp
jmp
mov
xor
adc
cmp
fsubrl
sub
stc
push
dec
addr16
mov
or
mov
es
call
lret
stc
sub
shlb
sahf
dec
and
scas
jb
out
mov
lods
loope
sub
mov
and
pop
dec
mov
gs
push
sbb
inc
ljmp
add
clc
rorl
mov
out
in
insl
fbstp
clc
xlat
pop
sub
insl
fstpt
mov
jp
hlt
lea
pop
inc
dec
sub
das
mov
lea
sbb
das
mov
push
add
in
push
call
mov
or
into
and
scas
shl
rcrb
fisttps
xchg
fwait
or
pop
adc
dec
dec
or
jp
dec
add
test
dec
les
or
adc
xor
cli
lcall
add
pushf
ljmp
adc
lock
xrelease
mov
push
push
mov
popa
pop
adc
cmp
scas
js
repz
loop
int3
js
xchg
sub
adc
xchg
mov
mov
cld
mov
and
sti
jne
add
shlb
inc
popa
jge
nop
pop
pop
scas
push
movsb
test
hlt
mov
leave
xor
faddl
in
repz
ljmp
pusha
int
scas
les
nop
ret
es
fwait
and
and
jae
out
shrl
pop
cli
adc
xchg
mov
xchg
in
ljmp
std
add
xorb
and
fwait
mov
push
scas
call
call
pop
sbb
adc
or
sub
mov
scas
orb
in
jbe
or
test
stc
mov
add
rorl
pop
sub
mov
xchg
orl
sub
mov
or
cmp
add
cmc
cld
add
add
popf
insl
dec
cmp
decl
push
aad
ret
mov
mov
pop
mov
int
mov
loopne
psubusw
lea
adc
push
popa
fwait
mov
push
xchg
outsb
push
pop
add
insl
and
jge
jae
mov
add
cld
stc
out
mov
push
sub
stc
inc
sbb
enter
mov
and
int
add
pushf
loop
adc
xor
pop
ja
xor
scas
in
adc
dec
xor
pop
bound
xchg
push
ds
sub
push
ret
adc
xchg
es
jge
subl
insb
mov
or
inc
sub
fwait
push
push
or
jge
adc
sbb
out
fwait
aaa
les
pop
xor
mov
bound
dec
sbb
jl
cmc
dec
and
clc
loopne
cmp
je
mov
xchg
adc
arpl
or
out
stos
adc
lcall
and
cmp
lret
jle
adc
adcb
xor
adc
nop
push
lds
dec
ja
scas
inc
cli
ffreep
out
orl
adc
cmpxchg
mov
sahf
adc
jno
test
repz
into
aaa
in
ds
aam
outsb
int3
push
idiv
icebp
inc
jl
fmull
cwtl
imul
sbb
das
pop
insb
rorb
lcall
inc
xor
push
fcmove
xchg
ljmp
test
mov
jmp
arpl
jns
jns
es
jno
ja
popf
cld
fsubrl
mov
jle
sbb
mov
js
push
xlat
xor
mov
jl
cmp
jecxz
xor
or
jg
ret
bound
xor
mov
mov
pushf
faddp
mov
aas
lret
cli
jmp
insl
test
xchg
sti
push
xor
xacquire
cltd
sbb
xlat
fwait
xchg
sub
in
lock
sub
repz
popa
das
int
fwait
pusha
popa
das
or
sbb
notb
lret
cmc
push
mov
and
stos
test
pop
ss
inc
pop
loop
pop
xchg
xchg
pop
ds
mov
mov
aas
in
lods
daa
mov
sbb
mov
cmpb
mov
ds
or
subl
pushf
es
xchg
or
rclb
sbb
mov
ljmp
fisubrl
jl
xchg
fisubl
mov
movsb
fnstcw
and
xchg
das
xchg
xchg
icebp
pop
ret
jecxz
push
daa
popa
or
jecxz
out
add
bound
in
jp
jle
ss
xchg
es
dec
ja
inc
in
out
rcrl
mov
sbb
mov
mul
or
std
lcall
push
dec
hlt
cmp
iret
xchg
ljmp
push
xchg
stos
xchg
repnz
inc
sbb
lcall
mov
jg
mov
in
xchg
movsl
js
pushf
adc
je
dec
mov
movsl
mov
jb
xor
push
and
inc
repz
aad
pop
outsb
cltd
and
imul
in
outsl
pop
outsb
std
pop
push
les
lock
inc
jmp
dec
les
pop
jmp
sub
aam
je
popa
and
xchg
dec
sbb
mov
and
lahf
jg
lahf
aas
jl
or
xchg
cmpsl
subb
push
adc
nop
scas
mov
and
inc
or
data16
and
mov
sub
sub
daa
in
lret
dec
adc
inc
addb
cld
cmp
sti
xchg
push
pop
and
or
jmp
xor
inc
add
add
xorb
inc
mov
fiaddl
fdivrl
add
insb
in
sahf
pusha
xchg
xchg
es
push
es
ret
mov
mov
in
fmull
lock
push
mov
repnz
int
cld
iret
cs
mov
popf
pop
pop
mov
inc
arpl
subl
icebp
repz
fs
dec
iret
xor
mov
xchg
idivl
test
push
leave
daa
mov
pop
pop
sub
sbb
and
add
add
fs
push
fucomi
xor
out
repnz
xor
mov
fs
aad
mov
inc
jne
push
xor
add
jae
dec
aam
stc
dec
sbb
pop
adc
fisubl
lret
test
fsubrl
ja
xchg
mov
icebp
push
dec
rorl
mov
jl
gs
push
loopne
cmp
push
cld
lcall
and
fwait
outsb
sbb
clc
jne
shrb
stc
lock
jnp
inc
hlt
test
in
add
adc
loopne
stos
xor
in
aad
xchg
xchg
mov
mov
jecxz
mov
data16
clc
and
xor
pop
fnstcw
lahf
bound
add
pop
mov
out
loopne
mov
cmp
nop
mov
scas
mul
imul
cmp
inc
mov
pop
test
lahf
inc
ret
daa
lahf
shl
adc
jo
and
in
test
xchg
sub
push
test
ja
pop
and
sub
cwtl
mov
das
sub
test
sub
fisubrs
dec
movsb
ficomps
xorb
mov
maskmovq
imull
sbb
add
test
imul
orb
or
stos
call
mov
dec
insl
sbb
lock
lret
fnstenv
and
lea
jle
pop
loopne
xchg
int3
xchg
sub
xchg
inc
repz
cmp
int
inc
insb
rol
mov
outsb
aaa
inc
push
xchg
add
insl
push
sbb
js
pop
push
adc
xchg
stos
jns
xchg
lock
arpl
pop
mov
mov
loope
mov
cld
aam
inc
xchg
mov
ss
bound
loopne
int
add
xchg
add
or
and
jecxz
mov
inc
jb
xor
sub
and
scas
xchg
lea
fldt
mulb
pop
adc
cmpsl
xchg
js
dec
pushf
movsl
add
cltd
mov
ss
mov
int
pop
fsubrl
or
in
jno
sub
fidivrl
mov
rcll
mov
es
shlb
adc
sbb
mov
lahf
pop
push
sub
cmpsb
mov
or
and
pop
loop
or
enter
xchg
sarb
add
and
insl
pusha
popa
mov
adc
mov
dec
js
dec
adc
inc
dec
roll
loop
outsl
cmp
pop
es
test
repnz
pusha
mov
outsb
movsl
pop
pop
jnp
sub
iret
pop
mov
adc
xchg
jmp
les
scas
pop
mov
mov
adc
je
jb
jns
push
out
xor
jns
jns
push
icebp
stos
pop
icebp
dec
xchg
lcall
cmp
in
mov
repz
lds
lret
pop
call
jbe
jge
or
fcompl
sbb
dec
call
shll
inc
mov
inc
sbb
sbbb
adc
aad
lds
cld
jmp
xchg
push
stos
sti
cmp
jns
fsubs
arpl
arpl
xchg
imul
or
push
test
pushf
add
outsb
adc
pop
pop
fdivs
dec
inc
cwtl
fwait
add
fisttpl
das
pop
add
sbb
inc
xchg
mov
loop
aaa
out
mov
xor
or
mov
fs
pop
cld
jnp
loop
inc
and
iret
fbld
mov
fsubr
lods
jmp
mov
dec
and
push
mov
pop
push
push
rcrl
test
mov
test
ret
gs
in
outsb
out
in
shl
daa
out
int3
clc
xchg
pop
mov
movsl
rol
je
adc
orb
jge
add
push
mov
mov
cmpsb
dec
data16
jno
jnp
inc
mov
cld
mov
sti
inc
mov
mov
stos
push
and
imul
sbb
jle
jne
test
mov
dec
enter
add
pop
cmp
sub
scas
insl
icebp
es
dec
pop
loop
rorl
xchg
dec
rcr
pop
call
lock
shlb
pop
popf
nop
inc
sub
cld
cmp
sbb
dec
sub
mov
cmp
jno
mov
mov
in
mov
add
push
cmp
loope
dec
jae
dec
call
or
sbbb
xor
in
pop
adc
or
xchg
insl
popa
hlt
mov
out
fisttps
xor
mov
sti
mov
sub
xor
jge
and
subb
sub
dec
bound
xchg
in
xlat
outsb
testl
cltd
mov
mov
filds
jecxz
jb
andl
out
jle
cmpsl
ss
mov
sbb
icebp
pop
inc
fbld
test
jecxz
jmp
or
xchg
fwait
sbb
outsb
shl
mov
sahf
movsb
pushf
jae
push
or
call
jns
subl
pop
roll
mov
pusha
xchg
push
into
fdivl
stc
dec
add
jae
or
push
xorb
mov
imul
loop
xchg
nop
mov
jg
negb
dec
xchg
daa
fiaddl
sarb
mov
ret
mov
mov
pop
jl
xor
inc
xor
cmc
push
sbb
adc
daa
testb
add
lcall
add
mov
outsb
ja
add
xchg
xchg
or
push
nop
sbb
gs
pop
pop
adc
out
pop
or
mov
stos
loopne
adc
imul
mov
add
sub
hlt
lods
jecxz
mov
or
rcrl
iret
test
push
adc
hlt
jbe
pop
ret
out
addl
xor
in
adc
or
je
add
xor
ror
test
lea
adcb
hlt
jmp
xor
icebp
das
push
mov
pop
and
ja
adc
out
mov
dec
and
xor
clc
mov
imul
in
push
ss
pop
push
push
xchg
idivb
xchg
dec
mov
loop
lret
dec
pmulhw
or
ds
rclb
daa
cmc
fisttpl
mov
imul
stos
and
adc
arpl
stc
inc
xor
xchg
adc
dec
or
sbb
js
std
xor
xchg
test
lea
jp
push
stc
fidivrs
dec
inc
ds
and
cmp
pop
jb
ss
loope
cmp
inc
je
rorb
je
jns
rorl
leave
push
add
mov
push
add
dec
loop
mov
dec
adc
mov
xchg
out
insl
inc
icebp
or
jmp
sub
into
movsl
jo
dec
aam
fnstcw
stos
shll
jp
ss
add
sub
bnd
lods
add
sbb
jns
inc
add
push
jle
dec
pusha
ljmp
mov
xor
fstl
pop
jbe
sub
arpl
iret
fsts
add
test
jl
ja
fwait
add
and
ds
jne
pushf
cmp
pop
mov
bnd
hlt
fcomps
stos
xor
mov
pop
cmpsb
or
and
bound
mov
fisttpl
pop
mov
dec
ja
xor
fwait
push
dec
adc
inc
xor
sub
inc
enter
jns
mov
xchg
xlat
pusha
bound
pop
pushf
push
sub
push
rorl
data16
push
mov
or
int
sbb
ret
mov
incb
xor
rcrl
loop
fisubrs
loope
fs
jns
fistps
and
or
adc
xor
cmpsb
sbb
lfs
test
loopne
mov
jle
pop
push
lea
jg
and
mov
je
cs
adc
adc
es
fsubrs
aaa
mov
adcl
sti
mov
sahf
nop
call
add
cmp
sbb
sbb
nop
xlat
ss
mov
xchg
mov
test
dec
lods
shlb
mov
adc
mov
jnp
popa
jno
or
fidivl
push
loope
push
lock
pop
sub
int
das
sahf
movsl
push
pushf
xchg
add
xlat
leave
es
test
in
sub
and
lods
xchg
cmp
in
jne
ss
out
pop
pop
add
sti
jg
stos
inc
popf
aaa
stc
sub
std
pushf
sahf
xor
aam
fwait
stos
cmpsb
adc
jp
or
cmp
push
fnstcw
icebp
sarl
jnp
das
add
movsl
jl
stc
lea
lret
mov
icebp
fdiv
jae
jns
ja
dec
popf
popa
in
mov
out
cmpsb
lds
cltd
lea
ds
xchg
sub
movsb
mov
sbb
leavew
fisubs
outsb
les
shrl
in
lods
les
lds
mov
scas
mov
cltd
add
les
jno
mov
mov
dec
in
sub
jae
fdivs
mov
ret
sub
das
lds
insl
outsb
pop
out
inc
movsb
and
clc
push
cmp
push
ret
gs
push
or
and
loope
outsb
jge
lret
jecxz
xor
cmpb
mov
daa
dec
mov
jnp
mov
lahf
fsubl
jno
jnp
imul
shll
das
mov
push
pushf
mov
jle
dec
rcrb
adc
in
fpatan
sub
pushf
clc
jmp
push
push
ljmp
xchg
movsl
jo
test
es
inc
jnp
inc
stos
test
in
mov
pop
test
in
xor
movsl
xor
int
orb
and
push
dec
hlt
mov
lea
stos
mov
push
jns
ja
xor
imul
xchg
jbe
pop
add
in
lret
ja
punpcklbw
dec
in
xor
stc
sbb
je
fnstenv
jecxz
test
inc
addr16
pop
in
pop
loopne
lahf
xor
shll
mov
mov
sbb
push
dec
stos
cmc
mov
sbb
mov
js
movsb
jmp
fdivs
sbbb
loop
arpl
cmp
std
xchg
mov
cmp
dec
fldcw
pop
and
xchg
fld
or
cmp
dec
test
xor
add
or
inc
nop
and
inc
adc
fidivl
lds
and
sarl
filds
mov
adc
pushf
mov
movsb
mov
cmp
and
cmpsl
es
cmp
adc
nop
or
xchg
and
and
cld
add
or
pushf
mov
addr16
inc
push
arpl
adc
dec
add
ljmp
pop
inc
int
les
mov
leave
testb
ss
xchg
std
int3
dec
and
das
call
mov
cmp
rol
shrb
push
cmp
mov
idiv
maskmovq
testl
jg
stc
stos
je
mov
incb
dec
outsb
push
std
xor
cmp
nop
aad
xchg
and
dec
pop
aas
notl
shl
xor
popa
outsb
adc
imul
mov
in
outsb
push
sub
mov
mov
pop
in
es
push
ja
out
enter
push
jge
jg,pt
jle
xor
jge
enter
fisubrs
jnp
jnp
xchg
sbb
adc
add
xchg
imulb
mov
push
jge
stc
pop
mov
mov
bt
lds
movsl
inc
mov
cmp
clc
jns
cmc
push
or
lods
adc
dec
xlat
and
push
sbb
cmp
test
push
lods
sbb
jns
popf
push
and
ret
xlat
mov
imull
push
jmp
sbb
fcomp
shll
mov
inc
mov
test
clc
or
neg
call
pop
push
or
pop
lods
mov
loope
and
ljmp
icebp
test
popa
cld
jno
dec
mov
aas
cs
out
fbld
xor
adc
adc
mov
fsubrl
addr16
icebp
dec
jp
mov
xor
sub
mov
popf
aam
and
pop
repnz
pop
or
adc
mov
movsl
and
jbe
mov
or
cmp
ss
test
pop
stc
mov
jp
mov
inc
inc
inc
add
add
cwtl
cltd
push
test
jo
jbe
and
fisttpl
sbbb
js
or
xor
nop
jb
fisttps
sub
and
inc
push
inc
dec
cmp
add
jb
out
mov
push
lahf
stc
fwait
sub
fstl
and
mov
cmp
fldt
icebp
or
cmc
sbb
addr16
or
jnp
mov
sub
sub
adc
cmp
out
pusha
cmpsb
sub
adc
cli
inc
bound
xchg
or
sub
add
ds
cltd
sbb
cs
daa
test
stos
xchg
and
jge
sahf
data16
add
inc
cltd
mov
dec
jne
jg
das
sub
mov
lds
lds
push
and
and
adc
pop
cmpsl
push
imul
dec
mov
aaa
out
fwait
pop
and
mov
mov
jmp
fiadds
dec
mov
adc
bound
lcall
jecxz
pop
jnp
inc
xor
sahf
loope
test
xchg
push
inc
sub
mov
bndstx
cs
mov
add
push
fcomps
or
cmp
mov
cmp
dec
popf
xchg
mov
pushf
stc
add
mov
leave
jnp
ja
out
arpl
imul
sub
fsubp
test
pop
push
mov
gs
pop
sbb
jae
jl
les
aad
mov
sbb
cmp
dec
cs
pop
fsubr
out
rol
inc
xor
xchg
add
inc
jecxz
jb
xor
dec
dec
jge
cmovno
dec
imul
stos
mov
scas
inc
adc
push
xchg
mov
call
js
test
test
mov
mov
ss
xchg
xchg
cmpsl
mov
pop
fildl
pop
js
fnstcw
pop
xor
mov
shll
xchg
and
imul
test
and
mov
pop
les
add
cmpsl
scas
mov
stc
mov
in
fsubl
imul
mov
fiaddl
xor
fnstsw
lock
adc
mov
cmpb
and
inc
or
cld
mov
sbbb
mov
dec
or
or
mov
jae
xor
cmp
cmp
inc
pop
pop
add
pop
push
dec
dec
pop
data16
sbb
push
imul
mov
sub
sub
xchg
add
cmp
jmp
mov
das
jne
adc
xchg
inc
mov
sahf
or
arpl
jle
fwait
into
call
ffree
stos
add
test
fcompl
in
jle
lea
lock
enter
adc
call
pop
out
adc
sub
mov
cli
cmp
inc
xchg
fisubs
vmovdqu
jns
mov
repnz
xchg
fdiv
jno
xor
jb
and
adc
cmpsb
test
outsl
int
scas
nop
imul
dec
pop
push
mov
mov
jp
add
or
popf
in
cmp
clc
add
into
push
dec
int
inc
hlt
mov
xchg
negb
mov
pop
push
mov
xlat
inc
xor
movsl
sahf
fcomps
xchg
xor
sti
fbstp
dec
pop
stc
dec
push
out
cmpb
nop
fisttpl
shrl
jle
test
push
pop
cmp
mov
test
cmpb
jle
xor
xorb
and
pop
and
add
data16
out
icebp
adcb
mov
mov
sbb
aad
mov
outsb
xor
mov
mov
sahf
mov
hlt
and
shll
cmp
and
inc
adcb
js
sbb
jne
in
mov
mov
cmpsb
in
jnp
test
pushf
popf
lods
ds
stc
js
cwtl
inc
rol
fwait
cli
loop
bound
pop
lret
clc
stos
jmp
and
sbbb
sbb
jmp
adc
jb
ficomps
stos
das
sbb
movsb
sub
push
stc
push
pushf
mov
ss
fcomps
test
out
xchg
pop
jmp
dec
cmp
hlt
std
addr16
cmpsl
cmpsb
insl
mov
jnp
clc
xchg
in
xor
jmp
adc
mov
mov
dec
std
xorl
mov
jg
iret
jb
push
jg
int3
stc
sbb
mov
lds
fs
xor
lods
outsl
arpl
mov
mov
cltd
mov
std
push
cwtl
mov
lods
fisttpll
mov
cs
jo
mov
pop
cmpb
decb
xchg
xchg
hlt
mov
xor
jecxz
adc
mov
cli
pop
test
leave
xchg
das
xchg
fld
sbb
je
fnsetpm(287
mov
in
sub
sub
arpl
test
pop
mov
repnz
sub
test
push
out
loop
stos
mov
mov
icebp
cmp
in
fisubl
mov
mov
sub
outsl
adc
sub
divl
aam
jae
pusha
cmp
dec
jmp
lods
nop
out
fidivrl
sbb
dec
mov
sub
rcll
pop
mov
outsb
jmp
cltd
lcall
mov
mov
stos
xchg
orl
inc
push
inc
sbb
cld
je
sub
add
aam
mov
repnz
cmp
ret
or
fmulp
aaa
mov
lret
adc
ds
mov
jmp
push
lret
xchg
adc
sbb
push
mul
lock
loopne
xor
push
xor
out
mov
and
or
mov
mov
sbb
lret
dec
in
push
dec
add
adc
mov
test
push
adc
add
pushf
imul
sahf
pusha
dec
add
push
xchg
xor
icebp
cmp
decl
add
jnp
pop
sbbb
mov
stos
add
sbb
push
rorl
ja
mov
or
loopne
sbb
xor
cmc
fbld
cmc
fimull
lds
adc
movsl
jmp
popf
sub
in
icebp
fisttpl
jbe
adc
jb
out
call
or
cmpsl
push
fs
iret
jecxz
lock
popa
add
mov
ret
jecxz
ret
pop
dec
pushf
push
notl
push
sub
xchg
xor
inc
sti
sub
nop
movsb
ja
mov
aam
xorl
mov
xlat
sub
sub
jo
in
xchg
rclb
mov
add
dec
mov
or
pop
out
inc
sbb
pusha
sbb
aam
ret
pop
jns
out
cli
stos
xchg
in
mov
add
sahf
dec
sahf
test
data16
xchg
outsl
mov
push
iret
scas
mov
push
mov
popf
inc
daa
into
icebp
int3
sbb
mov
js
stos
xchg
imul
jmp
inc
mov
sbb
jl
lds
movsl
in
mov
ficoml
ljmp
xor
sub
and
push
rolb
dec
cmpsl
dec
fbld
xacquire
cmp
in
stos
lods
sbb
mov
outsl
or
mov
test
fs
and
pop
adc
enter
out
jl
dec
and
pushf
sub
dec
lods
jnp
mov
cli
xchg
dec
dec
sbb
sbb
xchg
jae
insb
out
add
xor
aas
mov
arpl
movsl
cld
jae
xlat
ss
lea
cmp
rclb
test
mov
lahf
loopne
fstpl
mov
add
xchg
cld
add
push
pop
test
lret
mov
into
cmp
xchg
cmp
pop
outsb
lret
add
add
ret
xor
xor
mov
push
ret
xor
sbb
les
mov
add
dec
movsb
or
das
add
in
xchg
das
int3
sub
inc
cmpsb
push
xchg
fdivl
les
or
sbb
sub
xlat
fmuls
pushf
jecxz
adcl
xchg
pop
leave
dec
in
mov
aaa
subb
insb
pop
adc
rclb
adc
mov
jp
adc
shrl
jo
adc
test
cwtl
pop
cmpsb
sub
loope
cmp
sbb
cmp
xchg
scas
clc
outsl
xchg
inc
lahf
test
pop
lds
addr16
data16
inc
jbe
inc
push
inc
inc
mov
push
imul
jge
shrl
repz
add
pop
shrl
in
bound
cli
xor
push
mov
out
loope
inc
push
dec
push
mov
fildll
push
sub
loop
call
popf
das
in
incb
fbstp
repnz
clc
cmpsb
mov
fistl
pop
test
xchg
ljmp
adc
inc
cmc
inc
addr16
jge
mov
xchg
mov
imul
sub
lret
mov
push
fildll
lds
jne
cli
or
outsl
sub
lods
outsl
cmpsb
dec
sarl
dec
pushf
aas
push
pop
push
jmp
pop
mov
imul
int3
rcrl
lods
mov
mov
and
nop
mov
sub
nop
addr16
inc
jnp
insb
lock
aaa
js
sti
std
and
mov
das
jbe
int
fnsave
push
pop
out
out
nop
mov
pop
mov
ficoml
jnp
xchg
pop
mov
jp
adc
sbb
xchg
inc
data16
pop
outsl
addr16
inc
repnz
push
in
in
xor
push
neg
mov
inc
call
push
fdivrp
stc
lcall
mov
sbb
mov
add
xor
pop
int
adc
xchg
out
xchg
push
leave
jae
fimull
fnstcw
jo
adc
cmc
pop
add
loop
into
push
pop
push
mov
pop
pop
repz
mov
mov
test
shr
negb
pop
and
aas
jb
vphadduwq
loope
fdivr
push
stos
or
dec
cmp
adc
mov
add
inc
sub
xchg
int3
inc
scas
sub
mov
mov
les
add
rol
gs
fmuls
dec
cmp
mov
dec
cmpsl
xor
mov
mov
test
and
sub
mov
lret
lcall
sbb
scas
mov
iret
stos
pop
cmp
xchg
ds
sbb
lods
dec
mov
sub
cmp
daa
inc
inc
sub
lahf
andb
mov
loope
addl
cmc
mov
add
scas
cmp
stos
or
ret
pop
rorb
lcall
push
inc
and
pop
pop
inc
push
fidivl
cmp
int3
ds
dec
cltd
sub
jbe
mov
fsts
icebp
call
fidivl
sbb
fdiv
sub
mov
push
mov
test
pop
push
or
int
sahf
fwait
test
push
lret
insb
sarl
andb
xor
mov
in
jns
cmpsb
mov
test
andb
fstpt
mov
bound
scas
cld
test
xor
mov
hlt
xlat
and
mov
dec
push
iret
push
cs
jnp
ficoml
pop
in
sub
pusha
jbe
movsb
sbb
call
jmp
stos
jno
fs
add
roll
call
hlt
jae
add
adc
fincstp
push
adc
sahf
push
pop
mov
mov
sub
cmpsb
inc
sbb
or
mov
shlb
mov
pusha
inc
fnstenv
cmpsb
cmp
xlat
pop
jbe
sbb
pop
clc
call
dec
push
add
jo
mulb
rorl
in
mov
popf
sub
xchg
add
repz
icebp
imul
jmp
pop
cmc
cmc
jmp
push
push
dec
sbb
lcall
cwtl
in
inc
repz
cltd
adcb
std
xchg
push
mov
pop
lock
sbb
lret
jmp
push
and
fisttps
push
add
addr16
loopne
movsl
fmuls
jno
mov
cwtl
not
out
repz
cmp
xchg
sbb
pop
sub
jp
cld
repnz
leave
mov
add
aas
aaa
insl
sti
cmpsb
sahf
lods
mov
pop
pop
adc
pop
sub
popf
jmp
shrb
mov
pusha
and
jae
push
inc
out
cmpb
adc
adc
pop
xchg
mov
outsb
fs
out
ret
int
mov
cmp
shr
lahf
stc
xchg
push
mov
jg
mov
ret
push
jne
and
jge
dec
mov
lods
ljmp
push
cmp
in
lock
inc
sbb
test
ja
jbe
jmp
pop
dec
jl
inc
out
outsl
jge
lret
fnstenv
ret
in
mov
adc
mov
jae
jle
mov
test
test
fld
pop
stc
cmp
or
inc
cmp
inc
scas
sub
inc
ret
cmc
pop
sbb
inc
mov
cli
int3
insb
pop
pop
shl
icebp
outsb
jle
mov
stc
push
sbb
je
fidivs
adc
stos
cld
jecxz
push
push
or
cmp
into
jb
lret
mov
sub
lret
movsb
xor
jmp
movsb
dec
in
sub
jo
xchg
xor
mov
cld
dec
xchg
shl
stos
orl
fcmove
mov
cltd
arpl
inc
and
mov
and
mov
lahf
xchg
movsl
jbe
xor
jmp
imul
enter
scas
adcl
mov
enter
sub
clc
xchg
ljmp
pop
xchg
ds
fidivrs
cmpl
sarb
mov
iret
popf
pop
and
cmp
pop
inc
add
mov
or
mov
xor
adc
sbb
adc
int
mov
cmc
pop
ja
inc
xchg
loopne
pop
adc
cmp
sbb
imul
je
xor
fmuls
mov
pusha
and
xlat
inc
mov
div
repz
mov
xor
jle
mov
sbb
push
rolb
and
test
adc
sub
shl
pushf
decl
stos
or
repz
rcll
mov
and
sub
popf
jbe
cmc
fs
inc
and
fistpl
out
pop
dec
scas
clc
iret
test
insl
ja
sub
mov
push
outsb
sbb
xlat
fwait
ss
in
aaa
pusha
sahf
xor
aas
mov
out
jnp
xor
jns
pop
sub
adc
xchg
mov
add
int
mov
cmpb
mov
imul
lea
inc
adc
and
push
lds
enter
movsl
stos
or
xchg
insl
add
stos
adcl
rorl
divl
jb
sbb
mov
push
mov
mov
pop
xor
movsl
scas
push
iret
daa
xchg
aas
addr16
cmc
push
mov
fwait
pop
or
test
loopne
sbb
pop
mov
stos
repz
popa
mov
aaa
xor
or
xchg
out
dec
xlat
sub
sub
add
sbb
sbb
sbb
push
cli
lds
popf
movsb
aas
stc
xchg
push
mov
insb
add
sub
int
jbe
cltd
mov
daa
icebp
loope
xchg
dec
outsl
adcl
mov
dec
xchg
add
sbb
out
pop
xchg
daa
test
adc
dec
test
sub
mov
or
jge
inc
fdivrs
adc
sub
push
loop
sub
in
dec
push
lret
mov
das
add
int
ret
icebp
add
inc
sub
adc
jo
fsubrs
sbb
clc
pop
xchg
jmp
aam
or
ljmp
add
or
push
mov
cmpsb
sbb
loopne
xchg
cmp
jmp
je
ficoml
call
add
lcall
nop
and
insb
rcrl
cltd
fwait
dec
stos
mov
add
inc
and
fwait
cmpsb
lcall
in
or
push
mov
cltd
ret
mov
ss
sbb
or
or
xchg
loop
shll
fmuls
adc
mov
out
xchg
mov
loopne
cli
mov
pop
fsts
mov
addb
fs
sbb
mov
adc
gs
stc
mov
sbb
out
pop
dec
xor
es
test
push
cmp
test
xchg
in
pop
in
or
jo
popf
mov
push
cmp
cmp
inc
dec
push
jge
addb
push
dec
adc
lahf
pop
mov
out
xor
inc
aas
test
es
cld
xchg
xor
xor
fsubr
push
je
and
sbb
pop
je
es
aad
es
mov
ficoml
es
inc
mov
mov
in
aam
sub
shll
or
nop
arpl
imul
mov
aas
sub
int3
cmp
fs
nop
inc
es
mov
sahf
inc
mov
mov
aad
inc
lods
adcl
add
inc
in
pop
daa
cmp
fdivs
xor
jmp
jge
sti
push
mov
or
mov
push
jp
lods
push
cmpsl
stos
jl
arpl
mov
and
cmp
push
jle
nop
fimuls
inc
enter
adc
mov
iret
jg
std
inc
in
insb
sahf
dec
adc
bound
clc
sbb
ss
aad
fstps
rcr
adc
pop
cmp
pop
sbb
loop
push
mov
jp
mov
leave
xlat
clc
mov
jns
mov
fcmovnbe
insb
fdivrs
movsb
inc
cmpsl
in
inc
in
aam
ret
jle
and
call
fs
jle
movsl
dec
out
push
insl
out
pop
es
movlps
loope
and
in
sbb
shl
dec
jge
or
sbb
sub
push
aad
add
cmp
insb
stc
xlat
test
test
js
sbb
adc
sub
daa
in
loopne
hlt
sub
push
add
xor
imul
inc
les
mov
idivl
sbb
pusha
mov
lret
push
or
cmp
rclb
leave
sub
cmp
std
inc
mov
mov
adc
push
aas
xor
cmp
mov
mov
sbb
cmp
dec
js
xchg
xchg
or
leave
add
jb
mov
stos
add
sbb
push
xor
and
pop
daa
hlt
in
xor
and
cmp
inc
movl
xchg
lea
repz
jl
mov
stc
dec
jo
arpl
xchg
xor
rorl
and
aaa
mov
loopne
sbb
cld
cmpsl
dec
je
mov
dec
std
gs
lea
push
pop
ljmp
mov
dec
push
dec
aam
inc
add
cltd
adc
jmp
push
dec
xor
sbb
inc
jg
jnp
adc
xor
pop
xchg
addr16
out
mov
and
mov
push
sar
push
pop
out
mov
ror
sbb
dec
cmc
nop
inc
or
jb
scas
mov
cs
ror
test
mov
scas
add
mov
adc
inc
pusha
sahf
push
es
loope
popa
dec
mov
jbe
fptan
mov
adc
jo
adc
out
pop
push
push
cmpsl
mov
dec
fwait
mov
decl
mov
arpl
and
dec
leave
fnstsw
popl
arpl
cwtl
xchg
jo
sbb
in
xchg
lds
call
test
mov
out
lahf
je
mov
mov
es
dec
pop
jl
nop
out
fldt
xchg
popf
inc
fimuls
int3
xor
test
push
shrl
call
mov
jnp
testb
scas
lret
out
xor
mov
jnp
sub
push
push
outsl
inc
adc
add
adc
jne
outsl
outsb
into
and
test
mov
and
loopne
xor
dec
add
pop
pop
cmpsl
xor
sub
cli
lahf
xor
cli
popa
cmp
sbb
iret
jle
xor
jns
fcomip
lcall
lds
jo
outsl
or
push
ss
mov
pop
dec
fldt
into
mov
fld1
daa
loopne
cwtl
and
ljmp
test
aas
fisubs
cmp
inc
lret
jl
dec
dec
mov
out
sub
xchg
stos
dec
adc
daa
data16
cltd
cwtl
push
popf
xchg
daa
test
in
lret
sbb
out
hlt
lcall
and
pusha
leave
rorb
and
mov
or
sbb
xor
sbb
lret
inc
pop
fdivr
push
xor
ss
xchg
jbe
mov
push
nop
mov
xchg
test
inc
subb
dec
rcll
loop
mov
ja
dec
lds
sbb
inc
es
imul
clc
cmp
mov
rcll
test
jno
pop
sub
xlat
and
cmc
or
pushf
daa
xchg
pop
mov
jb
xor
mov
mov
popa
xchg
fimuls
xor
push
negb
or
jo
ds
arpl
out
and
aas
jl
cmp
popf
mov
fldl
pushf
adc
xchg
test
pop
out
lods
inc
aas
mov
push
xchg
mov
mov
outsl
fdivp
shrl
add
or
es
scas
cmpsl
lods
dec
repnz
dec
das
mov
jle
cmp
xor
or
and
jns
push
push
sarb
inc
addr16
pop
and
into
or
xorl
dec
or
sbb
jns
aam
or
cmp
jbe
pushf
gs
cmp
fmulp
mov
sbb
repz
ret
push
cmc
inc
push
rcl
fadd
ss
mov
rcrl
pop
popa
popf
lds
pop
mov
mov
fisubrl
cltd
int3
jo
cltd
push
rol
jns
loope
popf
sub
int3
or
or
push
mov
in
pusha
imul
in
rcll
int
data16
mov
or
das
iret
mov
dec
cli
sahf
pushf
loopne
out
ficomps
pop
and
xor
jge
fwait
add
dec
ss
enter
lahf
push
or
add
iret
imul
fidivl
xchg
hlt
dec
ljmp
mull
ror
xchg
jbe
mov
outsl
dec
sbb
inc
mov
sub
test
mov
rclb
mov
in
mov
popf
std
adc
repnz
ficomps
mov
push
sub
inc
sti
js
rorb
push
aad
add
mov
xchg
pop
xchg
jnp
pop
xorb
dec
rolb
stos
andb
dec
add
dec
adc
add
lret
cmpsl
xlat
pop
jb
fnsave
sbb
jns
addr16
sysenter
lods
cmpsb
mov
mov
inc
imul
pusha
sti
lds
cld
popf
int3
ds
sbb
pop
in
sbb
mov
mov
popf
hlt
cmpsl
adc
push
mov
mov
in
dec
arpl
jns
mov
jg
or
mov
mov
jno
push
push
add
mov
ja
dec
push
dec
sub
xchg
dec
roll
imul
jb
mov
pop
lcall
mov
outsl
sub
pusha
out
sub
ljmp
lea
popf
psubusw
cwtl
jp
js
pop
int
call
fucomi
inc
add
insb
dec
adc
es
mov
mov
ds
xor
loop
xchg
enter
mov
mov
cmc
pop
ret
pop
aad
dec
out
loop
repnz
pop
sub
add
push
in
jecxz
mov
jno
orl
jno
push
fdivrs
and
jo
xchg
mov
mov
push
arpl
mov
add
iret
jmp
call
xchg
pusha
outsb
pop
inc
adcb
bound
mov
push
jae
call
pop
ljmp
insb
fs
mov
or
mov
in
popf
insl
pop
aad
mov
pop
test
mov
daa
enter
ret
sbb
enter
adc
xchg
sbb
push
mov
shr
sub
in
leave
inc
pop
mov
fcompl
mov
cmpsb
out
mov
into
or
stc
cmpsb
adc
jb
add
mov
popf
jb
outsl
push
in
push
std
outsb
push
mov
es
mov
dec
imull
jns
adcl
and
arpl
sub
xor
mov
jecxz
inc
xorl
adc
pop
push
repnz
imul
subb
js
add
mov
xchg
mov
inc
insl
out
push
xor
addr16
mov
leave
scas
test
int3
xor
outsl
push
or
pop
push
ret
out
dec
xchg
inc
cmpsl
sub
divb
es
cltd
mov
mov
inc
gs
jo
pop
add
xchg
push
sar
push
repz
les
inc
mov
sub
icebp
sub
jp
inc
dec
mov
rep
or
mov
pop
fildl
in
sahf
shrb
mov
add
shrb
cltd
rcl
mov
xor
out
test
mov
mov
ret
add
repnz
xchg
dec
inc
hlt
add
jmp
incb
xor
test
sub
dec
jnp
sbb
push
lea
mov
push
sbb
pop
js
icebp
or
mov
pop
insl
gs
jo
cmp
adc
mov
fisubl
loopne
mov
and
shrl
dec
fs
cmp
out
jns
adcb
mov
push
arpl
out
xchg
psubusw
outsb
aam
jecxz
cmp
int
rorl
jle
jecxz
adc
pop
sbb
dec
mov
adc
mov
rcrl
orb
inc
clc
ljmp
dec
mov
adc
jmp
aam
in
inc
inc
ret
popa
add
xor
push
sbb
popa
xor
testl
fs
out
adc
cmp
in
pop
negb
inc
js
cmp
jp
ss
and
xchg
mov
jl
addb
and
into
inc
pop
push
push
sahf
pop
loope
push
adc
push
popf
adc
cmp
jbe
arpl
lds
ljmp
pop
in
and
mov
mov
loopne
xor
in
jg
ret
idivl
mov
xor
adc
out
cs
cmc
cmp
icebp
jl
jmp
jne
adc
push
inc
lea
jns
xchg
add
jno
pop
dec
leave
cmp
sub
xlat
ret
sub
mov
mov
jns
pushf
cmp
jge
fwait
push
int3
jmp
ljmp
andb
pop
pop
and
jl
fs
push
add
dec
test
mov
cld
ljmp
cmp
push
adc
adc
out
xchg
imul
aam
pop
inc
mov
mov
cwtl
adc
pop
fcmovnbe
test
add
in
dec
or
das
cmp
fldcw
push
mov
push
jl
xorb
push
sahf
out
hlt
in
jmp
outsl
mov
mov
sub
inc
int
call
aad
jne
ret
hlt
mov
sub
inc
jmp
ljmp
or
shrb
xchg
cmpsl
shrb
ficoms
inc
stc
lods
ret
sub
mov
dec
shll
sbbb
cli
dec
and
mov
fnsave
dec
sub
movsb
jbe
std
or
cmp
dec
loope
xchg
xor
pushf
cmpsl
not
cld
sbb
ljmp
xor
and
or
les
gs
cmc
sub
out
mov
mov
and
pushf
add
push
xor
or
in
vmovss
fdivr
jnp
test
out
mov
mov
xor
loope
push
shr
xor
dec
imul
into
mov
pushl
jle
mov
fnstsw
jno
hlt
lcall
mov
nop
lcall
xor
push
hlt
ror
mov
add
out
sbb
jmp
stos
out
jmp
fnsave
lock
pop
test
cli
sub
add
xor
push
insl
push
xor
pop
xorb
sbb
out
icebp
ljmp
fstpl
adc
mov
arpl
jecxz
icebp
xchg
xor
arpl
ljmp
mov
repz
mov
cmp
popf
shlb
daa
xchg
or
jecxz
insl
out
ss
adc
inc
andb
dec
xchg
fwait
movsb
mov
push
pop
mov
push
mov
jmp
fimull
adc
out
insl
lods
mov
add
dec
inc
aam
push
lock
pop
dec
loopne
pushf
stc
jne
pop
ficomps
sub
imul
mov
pop
popa
xchg
arpl
pop
mov
xchg
cmc
mov
inc
pop
outsl
xchg
mov
iret
sub
xchg
or
mov
je
and
out
xchg
mov
pop
mov
dec
sbb
js
jnp
jae
cmp
ret
js
lcall
mov
outsb
aam
dec
pop
clc
cmpsl
pop
xchg
and
lahf
pop
push
cwtl
repz
inc
push
xor
xor
rclb
add
mov
jbe
addr16
sahf
xor
inc
stos
cs
push
mov
in
fcomps
into
mov
dec
push
mov
jbe
loop
cld
ret
add
dec
xchg
stc
hlt
sbb
inc
xchg
cltd
mov
in
in
shlb
push
std
bnd
add
popf
inc
ret
fldt
mov
cmp
call
lods
orb
mov
mov
cmp
dec
jge
out
adc
xor
inc
lcall
pop
dec
int3
push
xor
pop
sbb
fldln2
and
jne
dec
sub
imul
imul
stc
inc
pop
rcll
loopne
loope
clc
jecxz
pop
rcl
cmp
pop
daa
in
ja
scas
addr16
test
mov
dec
repz
jno
ret
inc
loopne
jo
cmp
adc
mov
jb
ss
imul
mov
jg
push
push
adc
jno
jno
adc
shlb
aas
pop
js
jno
sbb
sub
inc
pushf
sbb
push
xchg
xor
mov
mov
insl
push
std
mov
aas
out
xor
in
outsb
test
cmp
mov
add
ret
mov
push
out
mov
mov
mov
pop
outsb
fildl
sub
cmp
int
jno
mov
enter
nop
add
imul
push
sbb
add
mov
decl
pop
or
fldt
stos
inc
iret
fsubrp
gs
inc
pop
pop
cld
int
pop
xor
cwtl
adc
das
sub
pop
cld
inc
dec
inc
sub
std
mov
mov
add
movsb
dec
je
das
cmp
popa
jo
pop
xor
jb
nopl
inc
mov
and
sarl
inc
in
xchg
add
and
pop
loope
popa
xor
int3
jge
inc
or
mov
jg
jbe
fisttps
cmp
cld
iret
push
inc
je
aaa
add
sub
cmpsb
clc
fisttpl
repz
cld
sub
out
bound
adc
loopew,pt
cmp
jnp
pop
mov
gs
push
add
push
mov
jo
nop
fldenv
scas
and
cmp
adc
outsl
pusha
mov
xchg
mov
arpl
cli
mov
jp
mov
mov
jns
test
mov
sbb
pusha
sub
or
or
test
push
sub
daa
sbb
sub
iret
xchg
iret
lea
cmp
pusha
dec
popa
int3
or
dec
sti
mov
sahf
test
jno
js
xchg
jnp
lock
pop
xor
push
pop
push
pop
sbb
and
or
jne
cs
fildl
mov
aad
inc
dec
push
push
jecxz
and
ds
dec
pop
sbb
jae
ljmp
fnsave
xchg
rorb
xor
scas
sarl
mov
pxor
jge
pushf
gs
mov
add
and
mov
and
pop
adc
adc
cltd
mov
sub
dec
mov
push
popa
shlb
int
push
xchg
sbb
out
ret
out
jmp
add
push
dec
stos
jge
xchg
outsb
mov
fwait
pop
and
lods
cs
nop
or
mov
cwtl
dec
daa
popa
jne
daa
sbb
mov
aaa
sahf
jns
push
inc
dec
jle
loop
aad
je
push
pop
push
shlb
addr16
es
jne
pop
xor
sbb
sub
in
movsb
jl
lods
nop
mov
jmp
jnp
notb
mov
mov
test
mov
jo
add
push
andl
ret
dec
insl
insl
dec
add
test
out
xchg
mov
xor
mov
in
cld
xchg
mov
and
lahf
cld
push
imul
fmuls
or
mov
or
mov
mov
cmp
in
push
jae
rcrb
inc
jmp
jo
mov
mov
je
jnp
cmp
lds
inc
lock
aaa
jecxz
scas
dec
out
dec
sbbb
sahf
fistpll
sti
std
mov
xorb
mov
movsl
popf
sar
or
xchg
and
mov
out
icebp
jbe
inc
aam
jbe
cmp
cli
scas
sbb
dec
jae
repnz
out
jmp
movsb
fucom
out
fwait
inc
pop
dec
movsb
push
inc
cmp
scas
sbb
jnp
lret
test
pushf
adc
mov
and
pop
jae
dec
jo
and
test
mov
add
pop
aaa
and
jb
pop
cmp
cmp
lahf
int3
ret
je
testb
pop
cmp
pop
stos
pop
inc
sbb
hlt
sbb
push
push
xchg
inc
add
jge
lret
mov
hlt
push
clc
jae
mov
test
movsl
ds
outsb
clc
jmp
sub
nop
fidivs
dec
xchg
jg
sbb
pcmpeqd
fistpl
dec
jbe
mov
sbb
cld
jecxz
pop
xor
test
sbb
arpl
xor
sbb
out
scas
jno
jmp
cmc
arpl
sarb
mov
and
add
push
pop
movsb
shlb
push
mov
subl
push
rol
pop
lea
in
daa
or
loopne
loopne
jbe
inc
loope
mov
in
mov
or
cmp
test
fstpt
mov
jle
xchg
cmpsb
adc
insb
mov
es
int3
add
xchg
jb
mov
sub
xchg
fiadds
into
movsl
dec
xchg
ljmp
aaa
adc
mov
xchg
out
xchg
pusha
nop
jecxz
js
ds
rclb
ss
jnp
adc
rcr
xchg
or
adc
mov
repnz
jbe
adc
push
mov
add
dec
loope
pop
xlat
es
xorl
and
or
or
mov
jecxz
enter
fldt
fistl
xchg
inc
mov
xchg
es
into
push
xchg
inc
lret
add
sub
dec
adc
insb
cwtl
mov
xor
jmp
mov
rcr
clc
xchg
inc
mov
cmpb
fwait
cwtl
lock
inc
in
dec
xor
pop
por
mov
pushf
cmp
ror
xlat
inc
xchg
xchg
pusha
inc
aam
popf
cmp
pop
add
push
mov
out
and
daa
sbb
adc
decb
sub
jb
dec
in
xor
andl
adc
ljmp
jmp
arpl
popa
cli
mov
jle
jmp
xlat
imul
dec
or
cmp
mov
mov
movsl
jge
rcll
std
enter
add
xchg
out
sbb
pusha
inc
or
xor
mov
push
add
and
sahf
pop
jg
or
adc
cmpsl
les
and
lods
mov
xchg
inc
cltd
sbb
dec
mov
repz
cli
inc
jmp
js
mov
pop
push
fwait
push
outsl
int
jbe
adcl
mov
mov
inc
sahf
inc
pushf
ja
mov
sbb
jecxz
repnz
mov
call
cli
sbb
mov
sub
cli
and
pop
mov
cmp
sbb
pop
add
or
or
xchg
xorb
pop
insb
pop
pushf
icebp
das
mov
rolb
mov
add
iret
addb
push
das
pusha
sbbl
loope
mov
jecxz
inc
std
outsl
or
mov
mov
push
jl
push
pop
sti
adc
iret
lcall
jnp
push
dec
scas
lret
hlt
call
jl
adc
int
jmp
lahf
jno
shl
jmp
cmp
cmp
mov
mov
adc
push
add
movsb
sub
dec
push
repnz
push
ret
add
adc
mov
cmpsb
and
out
or
outsb
adcb
je
ljmp
into
js
adcb
add
test
xchg
jmp
test
pop
out
repnz
jae
mov
pop
das
inc
jb
subb
cmp
pusha
mov
and
in
xor
inc
push
mov
popa
cwtl
repnz
popf
sbb
bound
imul
sub
test
mov
add
pop
mov
out
lds
xor
rclb
xchg
jo
ss
sbb
mov
sbb
lods
inc
sbb
test
out
cmp
ss
push
orl
pop
mov
jo
or
xchg
jge
dec
sub
js
fldl
gs
mov
and
mov
int3
fs
sbb
inc
xchg
or
jg
insl
icebp
xor
or
scas
sub
adc
out
push
mov
add
cmp
dec
lcall
jp
cli
push
cmp
ja
lahf
stc
xchg
xabort
das
test
mov
fs
add
jbe
cmp
andl
iret
lret
xchg
jo
mov
daa
clc
inc
mov
mov
mov
aas
push
mov
adc
lds
jp
bound
cmp
sub
add
testl
sbb
add
xor
subl
sbb
dec
loopne
mov
test
shl
lret
pop
mov
pop
push
xor
sahf
adcb
or
movb
lcall
mov
add
mov
sub
mov
mov
push
daa
out
fistps
shr
test
add
push
adc
ret
and
mov
fs
cmp
push
or
mov
push
js
ja
pop
pop
inc
ret
add
fnstcw
cmp
dec
sub
or
mov
nop
mov
movsb
or
adc
cld
xchg
iret
mov
daa
loop
lahf
adc
sbb
in
stc
mov
or
lret
pop
fisttpl
lahf
test
rcll
cltd
pop
repz
iret
clc
cmpsl
jmp
mov
mov
scas
xchg
mov
sub
icebp
out
loop
in
aad
loope
jge
arpl
arpl
push
repnz
call
nop
cmc
adc
jge
mov
lahf
lods
cmp
out
or
push
lods
imul
stos
sbb
xchg
iret
sbb
xor
mov
adc
xor
mov
push
jmp
xchg
mov
and
shr
roll
lcall
out
or
pusha
clc
push
pop
hlt
dec
sub
aam
lock
xchg
test
imul
mov
lds
add
dec
and
test
mov
cs
xchg
je
cmpsb
mov
mov
lods
xor
push
mov
cmpsl
sbb
pushf
sub
fnsave
push
pusha
cli
inc
push
xor
mov
lret
jae
sbbl
or
dec
mov
jle
outsb
and
fistl
shlb
xlat
and
jo
xchg
std
enter
lds
inc
push
lock
pusha
movsl
or
iret
jnp
add
mov
mov
mov
loopne
mov
mov
pop
adc
cmp
mov
sub
fnstenv
jl
mov
mov
lods
js
fldcw
cmp
loop
popf
nop
iret
pusha
jns
push
mov
fs
cs
and
stos
popf
inc
sbb
lea
bnd
mov
aam
out
inc
rclb
leave
pop
cmp
dec
repz
lods
sbb
pop
jno
std
pop
fisubl
insl
xor
mov
mov
inc
and
mov
sbb
and
mov
sbb
scas
insl
mov
mov
or
icebp
pop
pop
rclb
sbb
arpl
cli
or
aam
pop
and
and
pop
fistpll
rol
fisttpll
adc
ss
in
cwtl
push
jle
push
lcall
sarb
xorb
jb
sub
out
scas
cmpb
out
adc
mov
cmp
xor
add
fdivs
ret
lock
adc
push
aas
push
add
aaa
leave
insb
xor
lcall
xchg
int
mov
cwtl
loope
pop
dec
fwait
jecxz
jno
mov
call
sbb
mov
shrb
mov
gs
fcmovnbe
loope
pop
cmp
dec
push
andb
out
imul
mov
mov
mov
clc
xchg
xchg
pop
mov
jno
lahf
lods
jae
or
addps
nop
daa
adc
sub
sub
jb
icebp
push
arpl
xchg
mov
fs
jo
cmc
jge
add
jmp
rol
popf
sub
xchg
mov
push
orb
add
sar
sahf
jo
mov
das
sahf
sub
testl
rolb
add
stc
jp
lret
jns
aaa
in
add
test
pushf
sahf
shl
and
into
sub
aaa
push
fcoms
pop
cmc
dec
mov
test
pop
outsb
loop
int3
inc
sub
repz
sti
scas
fstpl
dec
mov
mov
cltd
es
mov
cmovnp
inc
mov
aaa
cltd
jecxz
into
ret
es
cmp
out
fsubrl
pop
imul
stos
das
arpl
in
xchg
mov
lock
or
leave
and
scas
add
mov
or
inc
lock
lret
and
imul
add
inc
mov
sub
pop
cwtl
rcrb
hlt
testl
xchg
ja
dec
jl
jae
popl
in
sbb
out
sahf
pop
nop
in
mov
xor
lahf
test
fisubs
inc
lret
add
mov
leave
xor
xchg
sarb
jmp
arpl
imulb
into
insl
add
bound
jg
mov
int3
mov
sub
data16
insb
sub
ror
sub
cltd
add
push
in
mov
pop
inc
test
inc
mov
adc
out
dec
gs
xchg
mov
cmpsb
orl
inc
pushf
push
rorb
movsl
and
sub
insb
mov
push
ret
add
or
ds
cmp
xchg
cmc
arpl
jmp
push
xchg
cmc
mov
lds
mov
cmc
ret
popa
mov
addr16
adc
inc
jle
mov
nop
dec
mov
and
mov
roll
bound
add
rcll
ljmp
xor
arpl
mov
in
test
adc
or
mov
lds
es
lods
outsb
jmp
sbb
hlt
cld
into
popa
fcompl
xor
sbb
es
fneni(8087
fists
insl
inc
cli
inc
sub
arpl
or
adc
push
xor
int
sub
jl
push
mov
test
xchg
dec
jae
add
ds
and
cmp
inc
xchg
dec
xchg
popa
aam
out
cmpsb
pop
je
and
mov
jae
call
stos
push
bound
aad
add
push
xchg
xchg
xchg
cmpb
mov
or
cmp
mov
cmp
out
jno
sbb
mov
adc
sbb
or
push
xchg
xor
push
repz
sub
pop
int3
mov
pop
push
and
mov
movsl
xor
xlat
mov
mov
push
adc
jae
jns
xor
cli
jnp
out
outsb
rcrl
push
adc
sub
out
aas
lcall
jo
fs
fcomp
shlb
cwtl
out
or
out
xchg
jae
fwait
dec
xor
loopne
push
cwtl
cmc
shll
sbb
xor
out
pusha
pushf
jnp
ljmp
aad
xchg
test
scas
adc
xchg
cmc
inc
xor
sti
into
hlt
popa
xor
into
lock
repz
adc
dec
in
push
push
inc
shll
in
mov
jl
pushl
das
icebp
mov
rcrb
dec
stc
aam
cmp
xchg
mov
js
cld
clc
sub
sbb
xchg
lahf
sub
push
sbb
mov
jb
ss
in
es
push
add
dec
inc
xor
loope
lock
cmp
cmp
pop
sbb
xchg
pop
int
insb
lret
pop
or
sbb
cmp
int3
pushf
pop
jno
push
sub
orb
add
cmpsl
inc
outsl
test
dec
mov
xchg
ret
je
push
out
inc
xchg
rol
test
xchg
adc
cld
adc
push
arpl
sbb
hlt
push
dec
mov
loop
ss
test
std
movsl
jl
sti
sbb
inc
cmp
sub
sub
ret
mov
xor
push
xor
ja
cmpsb
push
push
aam
push
sbb
cmpsl
movsl
cmp
aaa
mov
fwait
pushf
push
sti
lds
scas
in
sub
cwtl
ret
or
add
adc
mov
stos
push
imul
leave
xorl
loopne
lret
mov
push
das
cli
adc
sahf
adc
enter
push
mov
decb
loopne
mov
out
and
mov
insb
stos
lcall
jns
fwait
adc
dec
lock
ss
mov
push
fildl
pushf
add
mov
jl
in
inc
adc
push
adc
xchg
xorl
xor
aaa
mov
fstl
mov
fs
mov
divl
xor
pop
loopne
out
imul
cli
and
shlb
fst
shrl
pop
xchg
and
gs
imul
xlat
clc
mov
sub
push
mov
dec
enter
or
int
jge
xorb
ss
scas
in
and
pop
ljmp
add
sbb
mov
or
sub
sbb
inc
inc
and
add
insb
sub
jns
push
adc
mov
xchg
sbb
inc
daa
fnstsw
bound
and
std
mov
inc
dec
loop
movl
insb
cmp
mov
pop
xor
cmp
mov
jecxz
xor
lret
mov
jp
push
into
push
jecxz
or
xchg
jge
scas
jnp
cld
testl
sub
repnz
xchg
push
stc
ret
cmp
ja
shl
cwtl
stos
and
in
dec
xor
jne
mov
popf
aas
sahf
aam
inc
dec
dec
cld
or
jg
inc
add
ljmp
sbb
push
in
mov
cmpl
pop
sub
mov
dec
xchg
adc
xchg
loop
push
mov
add
mov
test
push
lahf
sub
inc
fcomps
cmp
ds
cld
xor
and
jo
stc
sbbb
hlt
cmpl
int3
sbb
sub
sub
jle
sti
pusha
adc
outsb
pop
aam
lret
pop
mov
outsb
xchg
xorl
data16
sbb
xchg
or
cmp
lods
pop
das
insb
popf
add
and
jge
aad
inc
es
dec
sahf
dec
jbe
scas
fiaddl
pop
pop
rorb
push
cmp
push
adc
push
mov
ds
mov
pushf
inc
xchg
lods
and
push
sbb
add
mov
dec
mov
mov
sbb
in
adc
fwait
pusha
mov
push
into
or
insl
loope
mov
sbb
testb
sbb
aas
stos
cmp
mov
lahf
mov
dec
std
dec
fdivs
xlat
cmp
mov
mov
sub
jb
push
jg
adc
movsl
xchg
pop
cmp
out
hlt
pop
inc
or
adc
adcb
lahf
push
mov
outsl
push
call
xchg
xor
jl
adc
arpl
push
sbb
ljmp
std
lds
mov
jnp
cmc
mov
dec
cmp
aad
insb
rolb
cmp
add
movb
xlat
xchg
das
fistpll
call
sub
jne
leave
sti
cmp
add
inc
iret
cmp
dec
inc
mov
in
mov
stc
mov
xchg
ret
xor
push
sbb
inc
mov
add
ljmp
fists
stos
testl
ds
inc
mov
add
movsb
sbb
imulb
pushf
dec
aam
jbe
push
adc
mov
in
roll
sub
dec
ljmp
jno
insb
or
mov
insl
xchg
je
jbe
xchg
lods
add
add
cmp
cli
int3
addr16
fcomps
xor
test
xchg
and
test
xchg
test
loope
mov
jecxz
mov
fs
adc
mov
outsl
mul
scas
dec
or
sti
shll
mov
ds
or
loope
mov
ret
out
addr16
push
lods
fwait
add
lea
xchg
fsubrs
adc
loopne
fwait
aas
nop
sub
jl,pt
movsl
clc
add
add
mov
jp
loopne
mov
mul
xchg
jbe
rorl
repnz
sub
shr
xor
cltd
lods
mov
ljmp
in
push
push
mov
cs
pop
orl
push
push
mov
cltd
pcmpgtd
and
and
push
jmp
xchg
imul
fsub
lret
aaa
sub
jl
stc
pop
icebp
aas
xor
lods
lods
and
and
and
jp
jecxz
jmp
not
es
inc
movb
lret
outsl
and
inc
repnz
push
xor
cltd
sti
rorl
sbb
add
nop
sbb
imul
mov
addr16
add
xchg
lock
adc
mov
xchg
jo
mov
push
cs
jg
jnp
and
sbb
scas
hlt
adc
cmp
mull
adc
inc
sahf
test
jne
adc
sbb
rcrb
mov
cmp
pushf
or
mov
outsb
cltd
mov
loope
stos
push
or
cmp
mov
aaa
mov
sarl
xor
fstps
fwait
add
sub
insl
add
iret
inc
mov
enter
lods
mov
xor
outsb
dec
xchg
loop
cmp
lods
push
int3
add
mov
into
add
jl
lea
mov
fnstcw
mov
pop
rclb
push
jo
insb
adc
push
addr16
ret
sbb
roll
xchg
lret
setl
imulb
pushf
flds
sti
fisttpl
adc
add
dec
arpl
xor
nop
mov
in
xor
mov
ret
adc
mov
push
pop
das
pop
les
pop
jno
aam
rolb
and
int3
out
jno
or
xchg
mov
lods
testl
out
add
push
mov
mov
das
or
les
adc
sbb
pusha
mov
cmp
shl
aas
push
aas
jmp
shll
imul
dec
insb
inc
rcrl
loopne
sub
adc
fnstsw
test
in
push
imulb
mov
bound
cmpsb
sub
sbb
inc
iret
add
sub
scas
lods
mov
pop
idivl
out
mov
jne
movntps
stos
pop
lea
rclb
lret
mov
and
mov
in
aas
xchg
mov
test
cmp
dec
xchg
push
int3
mov
mov
nop
cld
cmp
dec
lods
rol
jp
push
cmpl
clc
xchg
bswap
or
and
in
bound
adc
clc
aad
icebp
shlb
cmp
dec
outsb
dec
xor
sbb
out
pop
jnp
xor
adc
sbb
sahf
mov
fs
sub
aad
and
aas
je
xchg
loop
outsl
dec
sbb
mov
push
aad
jmp
test
dec
arpl
int
sbb
js
notl
and
sahf
mov
mov
sub
mov
addb
pop
testl
shll
push
int
lcall
mov
cwtl
mov
imul
out
nop
xlat
orl
xchg
pusha
push
mov
enter
or
push
clc
inc
add
push
mov
ret
push
cmpsl
lahf
jns
sub
inc
jmp
movsb
movsl
mov
push
incl
insl
push
mov
cltd
cmp
in
adc
adc
bound
aaa
xchg
rorl
out
push
inc
subb
hlt
push
mov
sbb
lret
pop
pop
jae
mov
push
ror
roll
sbb
add
mov
test
notb
sub
jmp
mov
ds
push
in
jp
mov
in
or
mov
repz
pop
lock
sub
sbb
xchg
mov
pop
mov
mov
cltd
inc
xchg
xorb
daa
push
fld
scas
leave
inc
ret
mov
pop
movsl
pop
adc
inc
mov
aaa
xchg
jecxz
insl
lcall
jb
adc
pop
mov
cmpl
cmc
dec
sub
jns
push
pop
pop
mov
jae
ljmp
mov
scas
std
gs
rcr
xor
dec
xor
xor
push
lea
xor
push
shll
push
sub
insl
and
inc
test
mov
sbb
cmpsl
hlt
stc
outsb
sti
jl
fwait
sarb
and
cmp
sarl
fwait
into
notl
out
jbe
and
pop
dec
push
sub
test
adc
dec
jl
inc
add
jmp
pusha
push
adc
stc
dec
not
add
mov
mov
mov
out
or
or
loope,pn
cmpsb
jnp,pt
pop
mov
cmp
mov
popf
lock
aas
push
cld
sti
sbb
mov
cmc
in
add
fstp
stc
mov
call
adc
gs
adc
in
xor
insl
jns
aad
fsubrl
xchg
mov
shrb
cmp
or
push
fcomps
and
push
mov
jmp
out
insb
roll
pop
sbb
xchg
add
loope
mov
jne
pop
mov
pop
xor
int3
mov
faddl
addr16
repnz
repz
inc
lds
mov
negl
xor
push
frndint
aam
mov
out
jnp
xchg
push
stos
in
pop
jae
adc
bound
pop
xorb
push
cmp
pop
dec
loopne
stos
inc
scas
insl
jno
inc
push
mov
mov
jno
xchg
push
fsubrs
mov
sbb
inc
adc
imul
sbb
out
jb
cltd
push
jge
inc
and
cmovnp
xchg
push
mov
pop
pop
mov
mov
lcall
nop
mov
xchg
daa
and
or
stc
push
sbb
stos
or
pop
push
mov
fists
pop
jne
jge
ja
mull
xlat
shll
nop
cwtl
rolb
ret
es
cmp
and
mov
pushf
int
lahf
pusha
lods
jnp
outsl
jg
lcall
xor
sbb
int3
loop
movsl
cmpl
das
adc
js
dec
pop
stc
pop
stc
aam
adc
xchg
je
lret
ja
push
or
mov
cmpsl
test
sti
stc
xor
gs
jb
lea
ja
into
sti
cmpsl
sti
push
aaa
adc
pop
pop
mov
mov
enter
lcall
cmc
and
xlat
inc
jl
scas
jb
int
and
stc
sub
hlt
sti
mov
mov
adcl
adc
mov
fists
insl
insb
faddl
mov
rorb
mov
jno
ror
mov
insl
icebp
test
addl
into
jo
cmp
push
ds
mov
daa
push
loopne
outsb
xchg
push
mov
test
jl
lret
ljmp
inc
and
ret
jno
les
orb
hlt
in
test
dec
cbtw
cmp
jo
dec
fisubrs
cmpsb
mov
mov
mov
dec
mov
cmpsl
cmp
mov
sarb
iret
fnstcw
cmc
push
fistpll
lcall
xchg
push
adc
mov
sbb
es
push
xor
mov
in
jno
mull
imul
xchg
psubw
shl
jne
mov
mov
stos
nop
int3
enter
pop
pop
lret
mov
jns
cmp
jns
xchg
cmp
pusha
rcll
data16
imul
cmp
dec
pop
inc
sbb
orb
out
hlt
bswap
aas
sbb
cmp
xchg
jns
sahf
xchg
ret
sub
xchg
xchg
lea
cmp
in
sub
xlat
mov
adc
mov
loop
insl
xor
sub
lock
jb
repnz
push
aaa
pop
adc
or
cmp
repnz
mov
hlt
push
dec
clc
shll
lods
or
sbb
inc
mov
or
jmp
inc
adc
loopne
les
dec
add
sub
pop
cmp
fwait
xor
pop
cmc
jo
cmp
dec
sub
mov
ljmp
or
xchg
jl
fnstcw
jle
inc
dec
sbb
fidivl
lods
std
xor
pop
arpl
sbb
xchg
sbb
adc
fsubrs
lock
js
fldl
test
cmp
lods
mov
jb
push
or
ss
sbb
jnp
add
sbb
xchg
mov
inc
movsl
test
scas
dec
pusha
icebp
push
lret
jl
into
mov
and
pop
fidivrl
jae
stc
jnp
adc
out
aaa
push
repnz
popa
xchg
pop
sub
gs
add
push
xorb
negl
loopne
and
jmp
out
ja
cmp
jo
out
shrb
push
push
sub
push
inc
ficompl
fidivrl
push
cmp
mov
loope
jnp
mov
hlt
imul
cmc
and
sahf
xchg
rcr
mov
adc
popf
test
and
push
cmp
xchg
clc
dec
rorb
xor
mov
pop
push
lret
fimuls
push
push
pop
xchg
xchg
dec
jae
add
fimuls
dec
xlat
xor
mov
xor
push
out
add
addr16
cltd
out
inc
xchg
or
iret
movsl
push
or
cmpsl
lods
push
lock
ss
mov
scas
pop
lret
jp
mov
mulb
jbe
mov
psllw
iret
fstp
shl
mov
loopne
lret
xchg
sbb
xor
int
addr16
add
add
adc
js
sub
xor
jae
loopne
and
dec
pop
and
mov
push
aad
aas
push
pop
ljmp
je
in
jnp
jnp
lock
push
or
jbe
js
test
inc
and
and
iret
pop
orl
mov
mov
mov
dec
sub
adc
pop
pop
shll
rcrb
mov
pop
mov
int3
or
fldenv
add
sarb
push
pop
test
or
mov
push
mov
xchg
fiaddl
and
push
fdivrl
insb
aas
xchg
inc
das
rcrl
push
cwtl
fisubrs
push
cmp
or
pinsrw
and
enter
and
fsub
push
push
jb
mov
mov
lock
pop
and
sub
cltd
roll
leave
inc
push
and
xchg
shrl
testl
rcll
into
lret
mov
mov
pushf
psllw
cs
mov
pop
jb
pop
daa
cli
movl
addr16
stos
ret
stos
fidivl
insl
ljmp
roll
pop
pushf
sub
lret
scas
out
cmp
lock
aas
cmpsb
inc
mov
jmp
dec
sbb
ljmp
and
push
les
popf
pop
mov
cmp
pusha
pop
outsb
xchg
stc
xchg
jno
lods
shr
or
cmp
loop
dec
fiadds
int3
sub
push
xor
cld
mov
daa
xchg
stos
dec
mov
hlt
jl
test
xchg
outsl
das
inc
stos
dec
repnz
jnp
inc
loope
fcompl
out
mov
repz
movsl
xor
jno
divl
cmp
loope
cmpsl
mov
xchg
je
sub
sarl
sub
push
jl
fsubp
inc
jmp
adc
mov
mov
mov
sub
stos
or
push
mov
xchg
scas
xchg
mov
mov
push
in
xor
sahf
and
pushf
mov
in
mov
clc
mov
neg
ret
sub
push
pop
in
fwait
cmp
adc
mov
ds
xchg
data16
mov
sbb
jb
mov
ficoml
stc
out
arpl
pop
jp
popa
outsb
ficompl
sbb
movsl
cmp
add
xchg
xchg
mov
rorl
push
cmpsl
sub
inc
insb
inc
fdiv
inc
sbb
loopne
fadd
les
xchg
sbb
push
popf
xor
inc
mov
and
xchg
in
test
sahf
mov
stos
insb
mov
ja
sarb
cmc
mov
sub
push
test
aaa
sub
push
xor
arpl
scas
loop
pop
cmp
mov
push
mov
xor
mov
sbb
outsl
dec
sbb
pop
movsl
sub
or
jecxz
sub
sbb
nop
decl
les
cmpsb
jae
cmp
rclb
xchg
out
mov
mov
repnz
push
rclb
idivb
add
mov
andl
std
les
adc
dec
sub
test
sbbb
dec
jo
cs
adc
xchg
cmp
push
stos
inc
xchg
cmp
daa
mov
push
shl
dec
dec
push
xor
push
out
dec
dec
pop
movsb
push
in
arpl
out
adc
jns
out
jge
pop
es
in
mov
xchg
mov
rcl
outsb
or
jle
adc
sbb
fs
lret
or
cld
inc
lret
fwait
push
pop
push
test
xlat
inc
mov
mov
pop
decb
loopne
ss
dec
movsb
mov
pop
jmp
push
shrl
jle
dec
sbb
xor
fs
movsb
pop
mov
sbb
cmpsl
xchg
lcall
mov
mov
ljmp
xchg
cwtl
arpl
nop
lahf
cltd
push
out
nop
lret
imul
sahf
push
and
sbb
push
jbe
inc
mov
cmp
adc
add
push
pop
mov
xchg
sbb
repnz
and
mov
lds
es
push
dec
lods
rcll
stos
push
leave
jecxz
inc
shll
or
jp
loopne
inc
xor
inc
mov
cmpsl
sub
cmpsb
pop
xchg
inc
mov
aad
adc
shl
loop
fisubrs
pop
aad
sarb
call
cli
test
cmovo
lods
add
outsb
loope
xor
cmp
cmpl
mov
icebp
out
jno
scas
pop
fsubs
and
loop
nop
xchg
or
or
inc
add
fbld
test
mov
test
movsl
mov
fsubrl
fcmovnb
mov
or
add
mov
arpl
push
xchg
xor
pushl
jge
cs
sub
int3
out
dec
fiadds
mov
xor
sbb
movb
idivb
fstpt
adc
mov
ret
cltd
xor
adc
adc
sub
repnz
fstpl
xrelease
add
lock
adcl
les
push
lret
jl
lods
sub
ret
mov
cmp
jecxz
bound
test
vmovups
or
int3
push
xchg
lret
std
inc
lret
movsl
jnp
push
cmp
pushaw
jno
jns
and
or
loopne
xor
xchg
add
push
jg
outsl
fs
popf
in
add
cmpsb
jmp
mov
sbb
jl
adc
push
pusha
adc
icebp
sub
dec
adc
jp
inc
mov
cmp
and
popa
iret
push
mov
push
repz
cli
add
out
jmp
sbb
pop
scas
push
roll
pusha
ss
repnz
stc
xlat
jp
xor
ljmp
mov
sbb
arpl
mov
mov
jp
dec
stos
cmc
push
mov
mov
xor
pop
lds
shrb
pop
mov
aam
imul
add
add
cmpsl
xor
leave
mov
es
and
stos
clc
and
fldt
jecxz
lret
and
mov
fs
mov
arpl
shrb
jo
push
movsl
je
jmp
dec
fsubr
clc
clc
xor
sub
ret
fsubr
sbb
int3
sub
adc
dec
fmuls
pop
sub
dec
sbb
out
data16
jg
outsb
out
push
push
popf
lcall
mov
sarl
cmpsb
fdiv
faddl
mov
popf
sbb
repnz
bound
mov
xor
xchg
pop
xor
jmp
add
fcom
jae
andl
sbb
cmp
lods
mov
push
xchg
outsl
loop
inc
das
mov
pop
jp
leave
jmp
pusha
insl
out
and
dec
mov
clc
push
jmp
fwait
shl
mov
push
addr16
lock
xchg
in
negl
lcall
aad
orb
ficoms
adc
sbb
fistl
sahf
popa
mov
or
insb
cld
or
es
test
mov
and
dec
jb
dec
inc
lret
shrb
mov
int
cmp
pop
gs
iret
push
stos
in
mov
and
mov
xchg
jmp
mov
test
sub
inc
dec
inc
shrb
xor
shll
std
jnp
fbstp
sbb
out
test
in
das
sbb
inc
std
lcall
jo
mov
fwait
int3
lret
xchg
pop
orl
push
add
or
jb
mov
in
push
jb
xor
decl
ret
andb
pushf
test
mov
sbb
jecxz
js
pop
jbe
inc
push
div
in
cmp
mov
test
fisubrs
loopne
ja
sahf
sbb
lea
stos
push
lock
push
jb
cmp
mov
rol
mov
push
mov
rclb
push
inc
fcmovnb
cmp
push
mov
mov
cmp
aas
fstpl
and
nop
adc
mov
sub
mov
adc
adc
mov
push
inc
inc
pop
mov
sbb
add
cmp
mov
sbb
fwait
mov
bound
mov
dec
adc
sbb
and
xor
sub
ds
inc
insb
xchg
push
mov
sbb
test
pusha
adc
cmpsb
cs
adc
inc
aas
xor
outsb
lret
repz
dec
mov
fstpt
inc
and
and
shl
push
add
nop
imul
xchg
aad
mov
scas
jmp
mov
je
or
js
jno
ja
sbb
or
leave
push
es
jmp
and
mov
xchg
add
subl
jns
ret
out
jmp
scas
mov
push
or
mov
bound
repnz
mov
adc
xchg
call
test
sub
lods
iret
xor
gs
popf
cmpl
sbb
imul
push
fcmovnu
pop
dec
loopne
push
clc
out
rcr
ds
pop
out
adc
loope
lods
rcrl
adc
outsl
or
lods
jbe
ficoms
rcl
std
call
xor
lock
adc
mov
mov
shlb
cmp
add
mov
mov
sbb
pop
xchg
les
shlb
xor
imul
push
cmp
fs
enter
jnp
bound
add
in
cmp
sbb
repz
mov
or
jg
cmp
adc
out
mov
xchg
dec
mov
subl
cmp
leave
dec
xor
mov
mov
test
push
sarl
push
cmp
in
mov
mov
fsubl
out
dec
xchg
gs
mov
jmp
imul
sub
fmull
mov
scas
repz
mov
fldenv
repz
in
lret
push
pop
aas
cmp
pop
add
sbb
in
mov
sbb
scas
pop
ret
push
clc
mov
push
or
add
push
stos
test
inc
icebp
mov
sub
loopne
pop
inc
jbe
inc
mov
and
cmp
icebp
lret
jno
mov
inc
or
jnp
or
and
or
mov
mov
lahf
scas
inc
outsl
bound
pop
push
pop
out
stos
fildl
mov
decb
rcl
movsb
adc
jmp
roll
addr16
test
lods
out
xor
mov
out
cmp
stc
rcrl
adc
cmp
jg
enter
push
test
mov
add
lret
dec
push
and
stos
sbbl
push
mov
cmp
push
in
es
enter
je
xchg
rdtsc
add
jl
adc
in
pop
dec
xchg
cmpsl
movd
push
out
push
jl
or
enter
jge
xchg
push
jmp
cs
mov
stc
xchg
fnclex
adc
adc
cmp
loope
pop
xor
nop
popa
dec
lahf
rclb
ds
mov
adc
jnp
loop
xor
dec
adc
jp
sbb
or
ffree
jae
mov
jae
pusha
xchg
xorb
mov
xor
and
sbb
lods
mov
in
mov
loopne
cmp
int
xor
mov
push
or
inc
cmpsl
sahf
push
lahf
hlt
cmp
mov
lock
or
dec
call
and
lcall
lock
ja
stos
mov
push
adcb
sub
dec
scas
sarl
arpl
push
push
jns
in
xor
popf
mov
cli
mov
xorl
xchg
push
ds
dec
xor
iret
xchg
or
in
daa
sbb
nop
push
inc
sbb
jne
inc
mov
and
cwtl
aaa
xor
shll
and
or
test
mov
leave
cmp
mov
push
repz
mov
sub
mov
adc
insl
in
adc
rcrb
fnstenv
sbb
aam
shlb
movsl
dec
cmc
push
test
movsl
clc
mov
xlat
mov
mov
cmp
push
jmp
mov
mov
movsl
nop
dec
movsl
decb
mov
jno
push
test
lock
pop
cmp
testl
pop
cmp
mov
mov
push
aam
jns
test
jno
pop
xor
pop
mov
in
std
fs
fidivrl
popa
dec
cmp
sbb
pusha
scas
xchg
mov
pop
faddl
cmpsl
fiadds
sub
hlt
insl
enter
into
cmpl
mov
xchg
jb
mov
jb
rcrb
lock
hlt
dec
inc
xor
jmp
and
pusha
aad
or
cwtl
ret
mov
nop
movsb
push
fptan
cmp
icebp
xchg
daa
loope
iret
je
call
push
xchg
fidivrl
orb
sub
push
mov
cltd
rcrl
pop
stos
adc
aaa
rcl
popa
cmpsb
cs
lea
imul
stc
mov
cs
add
jne
inc
push
nop
ja
pop
cli
xchg
mov
lret
pusha
rcrl
jb
inc
inc
loopne
mov
mov
cmp
mov
int3
jl
imull
push
mov
push
pop
movsb
dec
icebp
push
ds
jbe
sarb
jae
lds
mov
bound
inc
sahf
clc
daa
int
cmpsl
test
push
ficomps
xor
sbb
pop
push
rclb
loope
jae
enter
xor
fwait
mov
xchg
adc
cmp
cmpsb
std
xor
add
ss
cmc
gs
inc
xchg
mov
sbb
imul
das
add
test
fs
dec
pushf
cli
mov
pop
test
dec
mov
jle
pushf
aas
push
aam
dec
jnp
or
fdivs
sub
fcoms
popa
int3
xor
pop
scas
or
cmp
mov
mov
ss
loop
shl
js
incb
mov
push
jg
mov
fucomp
and
addr16
lea
dec
dec
adc
imul
xchg
ja
and
pop
xchg
and
sub
cmpsb
adcl
leave
push
sbb
cwtl
jecxz
cld
adc
and
pop
loopne,pt
clc
lcall
push
insb
test
test
loop
push
and
loopne
dec
insb
pop
sbb
imul
mov
pop
cmpsl
cld
pop
xchg
aas
mov
xor
cmp
iret
bnd
sarb
jle
add
jmp
das
in
mov
movsl
mov
inc
sub
inc
gs
out
lret
in
lret
push
sbb
adc
pushf
push
dec
sub
jns
lods
fistpl
add
out
push
pop
dec
mov
mov
pop
sub
xor
outsl
mov
fists
pop
jp
jno
cld
adc
cmpb
loope
js
test
push
lods
inc
subl
jge
add
push
int3
aad
pop
and
mov
ljmp
jg
push
clc
push
subl
xor
arpl
imul
push
stos
xor
ja
loop
test
pop
ljmp
lea
imul
ja
stos
les
cmp
test
jno
icebp
insl
imul
mov
and
xchg
mov
mov
sbbb
xor
xchg
imul
sbb
cmp
mov
les
lcall
adc
call
loope
dec
pcmpeqw
sub
sar
cmp
lods
es
sub
xchg
cmpsl
pop
jecxz
xor
jp
jmp
insl
sub
bound
push
and
loope
xchg
mov
mov
push
cmpsl
cli
insl
xorl
dec
lea
in
dec
pop
push
dec
insb
mov
mov
daa
sub
sub
out
or
pop
bound
or
into
in
pop
xor
mov
insb
cltd
mov
xchg
mov
out
mov
and
push
movsl
divb
loopne
dec
fistl
add
outsb
repz
push
pop
andb
clc
push
cmp
jp
mov
xor
sbb
stos
sbb
popf
cli
cmp
xlat
fisttpll
or
fcmove
mov
insl
popa
push
mov
mov
push
mov
mov
aam
mov
pop
inc
mov
xor
mov
pop
inc
sub
jmp
mov
adcl
mov
fs
popf
fwait
into
insl
jle
push
mov
xchg
or
cmp
enter
dec
sbb
cmp
pop
inc
lods
into
add
lds
aad
mov
mov
or
fildll
iret
push
outsl
cmp
mov
push
xchg
movsb
cmp
jno
loop
lret
lcall
jg
pop
mov
mull
mov
jl
fisttpl
stos
mov
sar
cs
pop
or
adc
mov
xlat
in
mov
ret
inc
ficoml
push
int3
adc
mov
or
jge
inc
push
pop
ret
cmpsb
sub
sub
mov
notb
nop
push
sub
push
xchg
sub
test
mov
dec
mov
mov
xchg
pop
push
xlat
and
sbb
jo
mov
sbb
dec
lods
mov
jnp
in
jne
popa
mov
sbb
mov
push
xchg
add
iret
lods
fs
int
mov
jecxz
lock
ret
dec
mov
or
out
jns
xor
pusha
in
mov
mov
cli
dec
mov
jl
in
xchg
mov
pop
stos
das
test
add
in
repnz
jae
inc
imul
inc
rcl
es
repz
lea
push
mov
mov
mov
pop
push
test
adc
xchg
shrl
fisubs
adc
xchg
push
call
shl
jb
test
popa
in
add
or
push
in
js
add
daa
ds
jo
adc
xchg
test
rcl
repz
push
arpl
mov
int3
jbe
scas
and
and
imul
in
mov
cmc
das
es
add
inc
xor
ja
sub
pop
mov
and
inc
sti
push
and
or
mov
xchg
mov
pop
pop
or
and
aad
jbe
aas
lcall
push
mov
sub
xchg
pop
outsb
inc
sti
imul
outsb
xlat
ffree
jae
out
sbb
add
pop
imul
adc
into
xor
xlat
jns
mov
bound
sbb
daa
add
dec
pushf
cmpb
sbb
lahf
xchg
lahf
rorl
xchg
into
outsl
arpl
and
mov
gs
ds
ret
sahf
cmp
das
push
jb
ficoms
or
sub
enter
fldl
lods
dec
sub
fwait
movsl
int
int
aad
xor
fcoml
icebp
ljmp
and
data16
fidivrl
insl
mov
pushf
xor
fimull
xchg
mov
ret
stc
imul
or
cld
inc
aas
testl
mov
adc
ficoms
jne
ds
aad
jl
sub
dec
imull
xchg
push
fwait
roll
js
outsb
mov
clc
loope
jnp
into
cltd
add
sti
out
mov
inc
sub
inc
jae
push
std
inc
ss
fmuls
add
add
and
leave
sahf
repz
add
ror
push
stc
or
mov
jle
insb
mov
scas
or
xchg
jg
out
repnz
scas
std
mov
in
fisttps
lahf
sbb
sahf
mov
mov
adc
dec
fwait
pop
sub
test
ljmp
and
inc
imul
test
push
cmpsb
mov
sbb
sub
push
mov
xchg
mov
push
jmp
lock
dec
lret
push
mov
pop
mov
xor
dec
jne
sahf
push
add
inc
push
lret
cmp
test
push
sbb
in
ret
push
mov
ret
es
cmpb
sub
inc
inc
testl
pop
lret
inc
sahf
mov
clc
and
test
inc
jns
out
mov
outsl
in
xchg
mov
sbb
cli
adc
add
dec
fisubl
nop
cmpl
rorl
jg
jle
push
mov
jns
dec
add
or
icebp
and
pop
pop
jl
ss
push
pop
jmp
aam
jns
inc
dec
in
push
iret
or
stos
pop
or
daa
out
jbe
sub
mov
pop
scas
sbb
inc
mov
mov
sub
or
adc
pop
and
sbb
sub
testl
adc
mov
stc
lock
xor
mov
jg
pop
add
mov
imul
in
jg
clc
mov
add
dec
lret
pop
sub
or
push
and
insb
lcall
sub
lock
sbb
mov
outsl
arpl
test
xchg
loope
negl
mov
jl
loop
aas
xlat
add
shrb
dec
negl
and
ja
cmpsl
push
inc
dec
adc
mov
inc
mov
mov
dec
xorb
xchg
pop
imul
push
aad
sbb
inc
inc
mov
jbe
adc
and
addr16
pop
insl
pop
sub
xchg
leave
stos
xchg
and
stc
pop
hlt
lea
in
mov
sbb
adc
pusha
jb
mov
jg
adc
inc
negb
mov
jecxz
cltd
xchg
pop
in
add
push
cli
mov
dec
aad
in
aam
xor
insb
cli
sbb
cmpsb
mov
ljmp
out
inc
xor
or
xlat
jle
lods
xor
or
push
cld
imul
mov
arpl
dec
xchg
dec
cmp
mov
addr16
xor
mov
pop
push
clc
or
iret
xchg
mov
in
jno
cmc
cltd
movsb
fbstp
orb
lods
jle
dec
rolb
mov
arpl
xchg
loop
xchg
inc
adc
mov
dec
jbe
mov
add
shlb
mov
fldcw
mov
inc
jg
cltd
adc
rcrl
adc
clc
push
mov
mov
xchg
push
inc
lahf
jns
add
push
adc
jecxz
push
mov
and
mov
repz
dec
xor
movsl
sbb
sub
pop
inc
call
scas
pop
push
adcb
loope
xchg
pop
jle
mov
std
gs
or
jo
pop
pushf
lahf
fimuls
sub
cld
dec
mov
mov
aad
mov
add
jnp
xor
mov
stc
lock
cmp
sarb
mov
or
jne
test
xchg
mov
fwait
int3
loopne
int
stos
rcrl
pop
je
sub
addr16
sbb
popa
push
int3
int3
repnz
subb
mov
pop
lahf
movsl
xor
mov
and
cmpsb
loopne
push
or
fsubrs
loop
mov
mov
emms
je
in
ss
loop
or
lea
mov
faddl
aad
divb
scas
imul
sbb
stos
adc
push
sub
xchg
xchg
mov
jae
sub
inc
shll
push
lcall
add
jmp
jne
xor
mov
lods
loop
mov
mov
xor
mov
faddl
sbb
inc
jo
repnz
add
arpl
jae
les
push
movsb
cmpsl
lahf
sbb
jb
inc
sbb
adc
push
xor
mov
cmp
lahf
cmpb
push
mul
xor
mov
sub
fwait
shl
or
vorpd
and
inc
es
insb
das
int3
scas
shr
movswl
xor
sbb
fisttpl
lds
or
xchg
or
adc
je
push
add
mov
sbbl
imul
pop
ret
int3
insb
or
std
xchg
lahf
jae
cli
mov
jcxz
xorb
test
mov
aam
add
shll
sti
sbb
mov
mov
inc
sbbb
mov
mov
mov
mov
repz
cmp
add
xchg
sbb
sub
dec
in
imul
pusha
or
mov
xchg
in
dec
imul
movsb
adc
pop
xor
dec
fwait
dec
ret
enter
lds
imul
push
sub
xor
loopne
add
inc
push
aaa
cmp
fwait
imul
jle
adc
push
das
xchg
cmp
enter
fsubl
test
xor
sub
enter
push
jns
movsl
or
mov
push
mov
test
xchg
xchg
xor
and
lds
in
jg
jb
lar
xor
out
aaa
pop
fs
cmp
dec
and
sub
pop
mov
in
insl
iret
fadds
cmpsl
adcb
loope
ja
and
or
loop
test
or
std
inc
iret
loop
int
imul
mov
mov
outsb
xor
jmp
sub
jmp
cli
mov
lahf
and
mov
call
cmpsl
jno
sbb
mov
jg
xchg
imul
xchg
fildll
loopne
jl
sbb
mov
icebp
jge
jmp
dec
imul
push
add
leave
shl
jle
sbb
mov
mov
mov
fistps
push
xchg
jo
popa
std
imul
push
dec
imul
mov
sub
jle
stos
or
cmpsl
fwait
nopl
dec
jbe
rcr
pop
and
sarb
mov
xchg
mov
in
push
sbb
push
xor
and
bound
mov
cmpsb
push
sbb
xchg
test
jl
lret
dec
jo
pushf
xchg
sub
sbb
outsl
lds
jno
or
into
cld
sub
push
and
dec
xchg
sbb
out
insl
mov
dec
ret
dec
and
loop
adc
seta
inc
out
pop
cmc
or
or
loopne
or
scas
add
das
sbb
jae
sbb
mov
shll
in
pop
loope
or
dec
and
push
iret
test
mov
in
mov
loopne
movsb
xor
arpl
in
lret
pop
sbb
cmp
icebp
std
xchg
cmp
pushf
into
xchg
lret
xchg
sub
cmp
add
xor
mov
repnz
dec
mov
nop
dec
out
sti
push
pop
ljmp
sub
mov
push
out
sub
add
push
cld
sub
push
pop
and
sbb
les
cwtl
movsb
out
push
inc
dec
shl
jbe
rcr
imul
sub
and
fisttpll
ffree
push
xchg
cmp
ss
xchg
pusha
call
fmuls
add
test
jle
cmpl
shlb
fldl
popf
sbb
rclb
stos
stos
out
mov
sbb
and
stos
loopne
fisubl
jmp
lods
daa
add
pop
outsl
loope
bound
out
sub
test
sub
mov
repz
nop
xchg
bound
push
mov
add
fbstp
inc
sahf
push
into
mov
lret
stos
sbbb
or
lea
cmp
push
lahf
int
lods
pop
ret
cmc
push
mov
and
notl
cmp
push
enter
sar
test
add
and
jb
addr16
xchg
lea
add
sbb
das
test
lcall
aam
cmp
pop
xchg
cmp
inc
ret
inc
jg
cmpsl
ja
push
lods
arpl
les
clc
sub
cmpsl
rclb
cmpsl
loopne
pop
addr16
std
iret
loopne
ja
rclb
loop
xchg
cmc
roll
pop
pop
outsb
sbb
loope
inc
xchg
mov
adc
cwtl
jno
mov
push
stc
outsl
pop
cmp
inc
mov
outsl
inc
sub
pop
loop
xchg
cli
data16
nop
lods
dec
sub
outsl
mov
pop
dec
sti
rcll
stos
pop
in
jne
mov
cmpsb
cmc
sahf
lcall
mov
push
mov
std
inc
xchg
pop
loope
shrb
std
xor
xor
mov
add
dec
clc
add
sub
outsl
sub
pusha
repz
pushf
adc
push
xor
mov
jo
jae
cs
push
jge
add
loop
mov
pop
jae
xchg
aad
movsl
push
pop
gs
aam
adc
icebp
xchg
mov
mov
fwait
subb
cmpsl
mov
adc
fistl
sbb
pop
mov
pop
add
and
xchg
popa
sub
movsb
push
xchg
adc
mov
cmp
rcll
xchg
pop
jb
sti
inc
sub
jg
imul
push
and
aam
cmc
mov
sub
xor
cmp
dec
xchg
nop
dec
pushl
dec
push
dec
fmull
pop
out
xchg
push
data16
aam
rcl
fisubl
movsb
std
ds
mov
push
cmpsb
add
pop
aas
or
xor
clc
mov
loope
in
xor
cld
daa
mov
lods
imul
xchg
icebp
mov
or
jbe
and
sub
sbb
push
into
jp
pop
nop
mov
stc
xor
mov
out
jl
mov
mov
outsl
xorb
pop
xchg
gs
adc
jg
adc
imul
inc
mov
loope
push
xchg
or
sbbl
scas
cmovge
xchg
pop
pop
out
mov
stc
mov
in
dec
cltd
inc
pop
push
bound
es
push
stc
mov
xor
mov
icebp
call
cwtl
dec
jbe
or
dec
outsl
loop
sbb
das
xchg
mov
push
mov
xor
outsb
xchg
cwtl
push
sbb
xchg
mov
jo
xchg
ljmp
sbb
mov
pusha
clc
add
insl
pop
pop
jae
cmp
das
inc
repnz
sub
test
xor
dec
xchg
sub
add
and
xor
adc
sbb
cmpsl
jns
movsb
movsb
aad
not
js
push
ja
mov
xor
repz
or
adc
std
inc
pop
adc
daa
insb
push
cmp
mov
fcmovb
nop
push
adcb
dec
ss
cmpsb
sbb
mov
cmp
inc
add
gs
ljmp
xor
mov
test
jo
in
outsl
pop
inc
sarl
pop
jge
in
int3
movsb
aas
dec
inc
outsl
push
dec
push
adc
dec
add
cmp
mov
dec
mov
repz
les
pop
loopne
dec
fsubl
jnp
arpl
jne
les
scas
fisubrl
negb
dec
push
test
fmulp
fimuls
inc
mov
mov
mov
icebp
mov
dec
fs
pop
int
or
dec
in
pushf
popa
out
pop
push
xchg
fadds
jae
xchg
popf
movsl
in
cmp
cmpsl
in
xor
sub
cwtl
mov
add
dec
inc
out
jmp
or
int3
or
dec
or
jb
xchg
ljmp
push
xchg
mov
mov
push
adc
or
add
jmp
fnstenv
xlat
pop
aas
xlat
pop
inc
hlt
mov
scas
jnp
push
dec
or
adc
pushf
adc
std
dec
inc
gs
out
test
cmc
cmpsl
xlat
jmp
stc
push
pop
out
jecxz
arpl
push
mov
lods
push
or
push
pop
jp
ror
pop
mov
shll
jae
xchg
outsb
mov
mov
test
sbb
jae
cmp
and
push
lret
shrb
popa
outsl
loopne
mov
cmp
inc
mov
cltd
adc
dec
idivl
orb
pop
arpl
stc
ja
mov
sub
sbb
jae
sub
in
and
sub
lcall
sub
adc
idivb
xor
xlat
pop
sub
out
mov
mov
mov
mov
rclb
call
rorl
jne
repnz
in
pushf
ss
adc
adc
mov
test
jbe
sub
and
pop
push
shl
je
iret
jae
fimull
into
cmp
xchg
cmp
mov
aad
mov
inc
fadd
pushf
push
mov
dec
outsl
sub
pop
into
mov
jo
inc
push
and
mov
imul
xchg
ja
dec
incl
add
push
das
mov
inc
lret
push
notb
in
cmp
out
inc
aaa
cli
sbb
xchg
and
push
cmpsl
mov
out
or
add
push
pop
sub
mov
popf
sbb
dec
dec
lret
jmp
and
scas
dec
call
jp
std
pop
jmp
leave
enter
int3
insl
adc
xchg
jl
or
fs
pop
cmp
test
push
pop
xchg
out
mov
aaa
adc
jmp
inc
xchg
add
lret
and
inc
movsl
les
adcb
lret
movsl
and
out
loope
lods
outsb
das
pop
cmpsl
lock
lods
out
pop
fwait
mov
clc
jg
aam
pop
rcrb
repnz
sahf
jno
jnp
daa
fcmovnb
sarb
lcall
add
shrl
out
mov
push
lods
fiaddl
push
in
jle
xchg
pushf
jl
push
repnz
pushf
negb
push
push
in
jo
in
enter
lret
and
int3
imul
push
or
in
repz
lea
mov
cld
adc
decb
adc
lcall
pop
out
push
fiadds
or
loop
xchg
iret
decb
push
gs
iret
in
fstps
inc
mov
movsl
and
adc
push
and
xchg
cwtl
fwait
sbb
fwait
xchg
add
call
call
add
arpl
rcll
pop
and
fldenv
adc
loop
cmpb
sbb
xchg
rclb
xor
rol
or
lds
movsb
inc
shr
clc
test
dec
aad
movsl
pusha
cmp
in
adc
ret
rolb
lahf
loopne
cmp
lods
push
xchg
pop
cmp
loopne
rorb
ret
mov
jns
stos
in
cmc
and
lock
mov
mov
xor
sbb
ret
insb
insb
add
or
fidivrs
xchg
add
test
cmp
mov
daa
adc
xor
xchg
pop
hlt
xchg
out
mov
stc
jae
sahf
imul
rcrb
outsb
dec
les
fsts
fidivrs
sbb
mov
or
xchg
sbb
call
popa
pop
or
xor
push
call
cmp
scas
dec
stos
arpl
pop
mov
jle
pop
cld
push
push
testb
in
mov
jle
xchg
jbe
dec
sbb
ljmp
lcall
and
movsl
inc
outsl
jae
mov
mov
dec
test
xor
dec
inc
mov
xchg
aad
pop
movsl
cld
sub
in
rorl
mov
mov
test
rorb
cli
push
push
jno
inc
popa
pop
mov
daa
push
inc
imul
ds
jecxz
std
or
pop
jns
mov
jo
xchg
cmp
jne
mov
add
dec
lret
lahf
imul
gs
mov
ds
fisttpll
push
pop
cltd
out
adc
scas
lds
popa
xor
aaa
outsb
ss
pop
cmp
cmp
movsl
rcrb
sti
int
test
leave
cmpsl
repz
mov
add
inc
ds
mov
loopne
hlt
adc
aas
lret
fsubp
fmuls
and
or
or
mov
jmp
xor
dec
insl
sbb
insb
je
cmpsb
mov
mov
lahf
push
ljmp
adc
push
push
mov
scas
jecxz
mov
iret
and
test
ljmp
mov
pop
movl
scas
cmc
faddl
mov
jg
imul
jo
mov
push
sub
xchg
add
mov
xor
pop
popf
aam
jle
cmp
test
inc
std
pushf
jns
bound
aaa
sti
xor
dec
cli
mov
dec
int3
mov
push
pop
fbstp
xchg
sub
jmp
dec
cmp
call
cltd
dec
sub
jge
fdivl
outsb
sbb
push
in
sti
rorb
shll
rcrb
pushf
cmp
xchg
jl
sub
lds
mov
push
pop
aaa
nop
das
add
mov
fucomi
inc
jp
sub
sbb
je
fwait
inc
mov
add
mov
and
subl
faddl
jo
jnp
pushf
mov
jl
shr
mov
jmp
or
arpl
pop
in
test
jb
loope
jno
and
lret
clc
outsl
jbe
and
ss
lcall
inc
lods
dec
ret
cmc
dec
das
dec
add
sub
daa
jo
movsb
ficoml
mov
mov
dec
pop
cltd
test
iret
push
in
dec
push
jle
jle
ficomps
call
mov
mov
pop
pop
es
xchg
mov
push
dec
add
stc
xor
dec
and
cli
popl
push
ret
and
pop
shll
jecxz
cmc
insb
jne
into
sub
lret
jae
fdivrp
dec
jbe
dec
dec
mov
add
outsl
mov
mov
inc
sbb
cld
imul
adc
xchg
xor
mov
sub
loope
inc
mov
add
inc
outsl
shrb
or
ret
pop
cltd
push
cli
mov
shlb
cmp
insb
mov
clc
test
inc
bound
mov
pop
dec
clc
sahf
cmc
xor
inc
dec
stos
ret
aad
ds
scas
adc
cltd
xchg
aad
iret
daa
lods
imul
xchg
adc
xchg
dec
aad
sahf
jle
int3
or
mov
xchg
mov
fneni(8087
add
int3
sub
push
shrl
xlat
sti
inc
aad
mov
sub
push
fsubrs
insl
mov
sbb
sti
int
and
jecxz
gs
dec
cmpsl
insb
jno
xorb
test
iret
mov
xor
mov
adc
add
push
call
lcall
adc
repz
or
mov
imul
jmp
in
ja
pushf
or
cmp
mov
xor
mov
inc
xor
mov
xor
mov
and
cmpb
xchg
adc
test
sub
ret
stc
sub
cmpsb
mov
mov
ficomps
in
movsl
cs
dec
sub
pop
sbb
jae
es
jl
mov
mov
xchg
cmpsb
movsl
jns
notl
iret
mov
arpl
cmp
inc
movsb
dec
adc
cwtl
xor
ret
and
sub
stos
push
xor
mov
repz
movsb
mov
cld
push
xor
addr16
cmc
addr16
sub
xchg
mov
ret
mov
mov
mov
das
lods
cwtl
push
test
movsl
loopne
mov
cmp
lods
adc
mov
cmp
arpl
jge
xchg
gs
fnstsw
es
outsl
fistpll
mov
jae
push
jmp
mov
mov
push
lret
popf
pusha
std
mov
dec
out
add
rclb
cmc
aas
adc
or
xchg
icebp
fnsave
lcall
hlt
push
jle
cmp
icebp
in
test
sub
mov
imul
jecxz
push
xchg
ja
cmpsb
rcl
fcoml
stos
repnz
mov
les
outsb
sbb
rcl
cmpb
rcll
xchg
jbe
icebp
add
push
jne
fisttpll
sub
fisttps
push
mov
pop
push
inc
filds
xor
inc
push
cmp
inc
pop
mov
outsl
ja
aad
adc
bound
arpl
push
stc
gs
sub
test
sbb
rcll
add
mov
jmp
test
mov
sarl
aam
sbb
inc
adc
sbb
popa
fnsave
adc
lret
sbb
pop
fnstsw
jae
adc
popf
mov
or
repz
in
mov
jg
ds
ret
mov
or
shlb
add
lods
jg
cmp
sbb
xchg
out
test
int
stos
push
xchg
cmp
imul
push
clc
bound
inc
popa
inc
xchg
mov
and
inc
dec
scas
orl
into
mov
and
es
mov
aaa
adc
xchg
fmull
push
adc
mov
scas
jmp
aad
or
cmp
subl
xchg
add
ds
bnd
cltd
push
dec
loop
pop
imul
fs
push
repz
or
lret
in
rcl
call
mov
mov
cmp
or
sub
enter
push
roll
cmp
rcll
adc
test
xor
mov
fisubl
mov
test
cmp
out
pop
adc
jp
inc
fsubrs
stc
shlb
cmpsb
add
ret
ja
enter
inc
addl
or
ljmp
xor
addr16
shll
outsb
lret
fildll
rcll
lods
push
adc
mov
xchg
adc
aad
pop
push
daa
popa
call
push
lret
mov
mov
lcall
mov
push
or
mov
sbb
mov
cmpsb
lods
cmpsl
push
inc
imul
iret
jg
push
outsb
popf
jl
mov
imul
push
and
adc
ret
pop
jl
fldenv
out
sub
ss
mov
sub
aam
test
inc
pop
fadds
adc
xor
neg
test
push
push
scas
daa
call
jg
icebp
insl
push
fbstp
insb
add
outsl
faddp
int
pushf
cli
imul
outsl
dec
rorb
sbb
pop
xchg
insl
cmp
jge
aaa
rclb
pusha
cli
jmp
aam
push
xchg
outsl
cmc
and
leave
inc
xlat
faddl
pop
int
in
cmp
popf
neg
lcall
bound
mov
push
ja
mov
sar
dec
aas
jecxz
lahf
jecxz
cmovl
lret
xchg
addr16
push
adc
push
test
mov
outsb
and
fs
out
cmp
pop
mov
test
pop
in
out
dec
or
xor
je
lahf
cwtl
out
rolb
pop
cld
out
fcoms
dec
in
xchg
mov
xchg
and
jecxz
ss
subb
movsl
adc
sub
fcomp
repnz
jg
or
jmp
lret
inc
divl
sub
jno
pop
sbb
lret
addr16
and
cmp
xor
insl
stc
push
xor
push
insb
lahf
jns
adc
xorb
lock
adc
push
repz
and
test
cli
jmp
insl
jmp
fnstsw
fildl
mov
sbb
xchg
pop
push
lea
fimuls
ror
mov
call
outsl
xor
dec
cltd
push
das
sub
movsb
sbb
push
pop
scas
cmp
sub
ss
rcr
xor
dec
in
lods
pop
bound
inc
cltd
push
xor
mov
xchg
pop
inc
mov
jg
stos
into
sbb
sub
push
push
lds
cs
fistl
test
mov
cmp
popa
loop
dec
movsb
adc
or
inc
pop
loope
movl
xor
adc
lock
jae
clc
cmpsl
dec
imul
cmpsb
scas
adc
cmp
clc
sub
xor
std
ss
sahf
add
sbb
inc
hlt
dec
jge
mov
push
andb
orb
dec
adc
loope
jbe
pop
mov
xlat
or
push
mov
out
sub
pop
inc
sti
iret
outsb
icebp
inc
xchg
mov
mov
ficoms
mov
imul
pop
andb
mov
xchg
and
mov
mov
add
pop
or
sbb
xchg
push
repz
cld
pushf
cli
mov
mov
ret
sbb
mov
adcb
mov
xor
lahf
xor
je
cld
mov
mov
xchg
jge
ds
cli
andb
mov
sbb
lods
insb
pop
ret
ja
xchg
stc
icebp
jnp
adc
mov
add
inc
xchg
in
scas
dec
cld
xor
xchg
sub
int
xor
push
rclb
sub
pop
and
rcll
movsb
or
in
int3
or
sub
jae
je
and
add
mov
clc
pop
fs
in
test
call
sub
cli
xor
pop
nop
lock
jecxz
cmc
rol
in
into
lods
das
shrb
mov
in
testl
clc
adc
xor
insl
mov
rcrb
sbb
xlat
popa
cmp
je
pop
adc
jo
ljmp
rolb
dec
sbb
xorb
in
shlb
inc
xchg
and
ret
mov
out
xchg
mov
cmpsb
push
push
sbb
push
sbb
sahf
ja
cmc
aam
mov
sbb
xlat
fstpt
dec
inc
pop
add
imul
mov
xorb
scas
mov
stos
xor
pop
xchg
movsb
sub
inc
pusha
mov
jmp
in
jb
mov
mov
in
inc
shlb
xor
mov
test
into
xchg
mov
sbb
pop
icebp
cs
push
imul
jo
mulb
inc
add
ret
das
fcmovb
fbld
cmp
pop
leave
cltd
jecxz
xchg
bnd
pop
adcb
loop
jne
mov
pop
dec
jns
jp
sbb
pop
sarl
les
pop
or
mov
pop
gs
push
lahf
out
dec
mov
pop
enter
int3
and
pop
hlt
icebp
lahf
pop
mov
shll
add
jb
ficoms
jge
mov
inc
in
fidivs
adc
aaa
movsl
pop
add
aad
movl
push
test
jmp
repz
adc
scas
bound
pop
aad
int
xchg
js
dec
mov
jnp
or
jge
into
mov
rorl
loopne
or
fbld
test
dec
pop
dec
mov
jmp
leave
fwait
movsl
lret
mov
test
aaa
mov
sbb
xorps
push
jge
inc
lret
mov
push
hlt
xor
in
jl
fs
insl
mov
dec
adc
pusha
cwtl
inc
dec
cmp
and
jns
rol
dec
out
cmp
filds
add
loope
push
sub
jle
jae
mov
jmp
insl
push
jae
add
ss
adc
adc
xchg
add
shll
jp
sbb
mov
add
addr16
sub
pushf
inc
xlat
xchg
mov
in
sbb
sub
jg
pop
iret
jge
mov
xorl
cmp
and
mov
fcmovnbe
inc
adc
jle
ficompl
out
and
stc
sub
imul
in
jnp
dec
andb
fsubrl
mov
inc
add
loop
mov
in
cmp
in
outsl
mov
push
pop
lea
outsb
adc
mov
mov
xor
ret
mov
js
sub
and
or
jnp
xlat
adc
and
and
int
inc
mov
or
insb
fwait
xchg
and
cmp
idiv
lcall
scas
jae
sbb
pop
mov
or
pop
les
xchg
xor
mov
clc
jp
jb
shrl
idivl
popf
pop
cwtl
imul
or
cmpsl
push
fidivs
mov
in
push
cld
jnp
inc
ficoml
fsts
or
sub
inc
add
sub
out
ja
scas
mov
lret
mov
lods
dec
movsb
movsl
adc
popf
dec
dec
lret
out
test
jno
xchg
xchg
jle
mov
jno
cwtl
and
out
push
insl
push
je
arpl
adc
stc
imul
int3
fstpl
or
and
adcb
sub
adc
call
jge
or
or
enter
mov
xchg
mov
icebp
pop
inc
mov
out
fwait
adc
xor
jge
jmp
inc
dec
add
shll
and
loop
iret
movsl
scas
insb
sbb
fwait
xor
addl
dec
cwtl
and
mov
pop
dec
push
imul
lea
ja
test
pop
lods
mov
ss
andl
sbb
pop
data16
inc
in
cmp
sbb
xchg
xchg
xchg
jge
push
loop
add
inc
dec
ret
push
ja
ja
mov
or
je
jecxz
push
pushf
adc
xchg
mov
pop
out
push
je
xchg
xchg
jg
rcr
cmp
jp
pop
aam
stos
and
jb
add
scas
pop
sub
fs
xor
mov
insb
xor
cwtl
rcl
jle
inc
loope
enter
cmc
ljmp
jmp
cmpsl
add
clc
push
sub
popf
shl
sbb
sbb
in
fildll
mov
mov
push
je
std
les
pop
stos
jge
jb
mul
mov
fsts
jns
xchg
or
dec
test
add
roll
cmp
stc
mov
mov
hlt
out
gs
ret
mov
and
pop
scas
std
mov
fs
add
adc
sahf
sarb
xchg
and
or
ret
repnz
cwtl
and
xchg
jge
jbe
les
pop
push
cmp
lea
pop
push
roll
sti
ss
jl
aaa
add
jmp
or
xor
test
or
pop
les
dec
sbb
enter
cmp
iret
jmp
add
daa
in
je
cmc
in
add
jg
lret
xorl
xchg
into
mov
out
mov
jb
rcl
jnp
pop
outsl
cli
dec
insl
cmp
pop
push
inc
sub
dec
xor
outsl
lret
fdivp
xor
adcl
jp
sub
test
mov
or
lods
sahf
fldcw
mov
add
gs
pusha
in
pop
pop
or
out
adc
out
jnp
repnz
pop
jg
jnp
dec
pop
add
dec
clc
ret
pushf
mov
xlat
addb
aam
ret
repz
pop
inc
popf
rol
and
adc
arpl
test
sbb
insb
xor
js
cmp
push
push
sbb
scas
cmc
xchg
sbb
std
pop
scas
out
daa
or
add
mov
scas
mov
and
xlat
pop
xchg
cmp
or
sub
and
imul
in
icebp
pop
daa
movsb
loop
jp
in
jbe
mov
inc
or
lahf
inc
adc
fiaddl
call
int3
dec
jle
mov
int
in
sbb
ds
sbb
jp
out
jae
sarl
cmp
gs
and
push
decb
jns
sbb
orl
dec
and
dec
push
jl
dec
inc
in
sub
lds
pop
xchg
jno
mov
ss
or
in
xor
xor
sub
jge
adc
or
imul
xchg
pmuludq
adc
arpl
sbb
xchg
cmp
loope
dec
pop
imul
sbb
pop
dec
sub
sub
sahf
lret
cli
mov
add
and
test
dec
push
or
jne
repnz
jmp
cmp
and
out
daa
sub
mov
mov
test
hlt
repz
repnz
xchg
insb
in
push
notb
lock
dec
dec
pmuludq
in
adc
xchg
notl
sbb
mov
filds
cwtl
add
add
imul
mov
ret
arpl
int3
iret
lret
mov
repnz
xchg
cmp
jbe
fbstp
push
mov
sub
add
mov
push
dec
test
push
push
inc
xchg
rclb
loope
mov
iret
fadds
rcl
add
pop
lds
inc
adc
loopne
into
or
sbb
mov
mov
cmp
popf
xchg
xchg
mov
mov
fists
pop
ret
inc
jb
imulb
mov
insb
push
shll
mov
jg
xor
dec
cmpsb
fldlg2
lcall
cmc
push
add
rol
sbb
and
cmp
test
and
xchg
jl
jmp
cs
pop
mov
std
mov
das
aam
es
cmpsb
mov
and
pop
jl
push
stos
lret
jle
rcll
jmp
int
out
sub
lret
pop
sbb
sti
rcll
dec
ljmp
jecxz
fnstenv
push
dec
clc
test
int
ja
ss
mov
nop
mov
enter
rcl
mov
in
fcom
sub
fistpll
xor
out
mov
ja
jb
fidivrl
jbe
in
pop
daa
mov
shrl
adc
xchg
xchg
shl
pop
rclb
scas
movsl
jp
in
popa
scas
addb
into
and
sub
sahf
cld
xlat
xchg
decl
adcb
add
xchg
cld
js
movl
imul
mov
dec
popa
jo
xchg
popf
cmpb
inc
dec
pop
imul
add
fstl
inc
cli
faddl
mov
mov
push
inc
sub
test
es
jle
cmp
pop
jns
or
dec
jl
mov
inc
sub
inc
cmp
gs
mov
in
notl
sbb
fdivl
push
xchg
sbb
addr16
icebp
push
stos
ja
mov
xor
lds
fucomp
clc
mov
sbbl
int
ficoms
xor
mov
sbb
int
arpl
push
jge
imul
fisttpll
out
pop
push
inc
and
push
in
inc
pop
xor
fwait
dec
cwtl
test
sub
mov
sbb
cmp
xchg
loop
jg
fcompl
cld
cmp
imul
sti
mov
das
out
mov
daa
and
and
xchg
sbb
mov
imul
mov
out
adc
sub
sbb
push
data16
ds
arpl
cmp
sbb
cli
call
outsb
jb
arpl
xchg
cmpsl
sbb
cmp
in
jb
jmp
or
sbb
popf
lock
das
out
aam
cmp
jg
adc
mov
inc
or
mov
das
add
mov
lret
das
adc
mov
push
test
nop
xlat
insb
into
aas
popa
push
in
jg
cmpsb
les
jnp
inc
or
imul
dec
popf
aad
xor
sub
sarl
jmp
in
insl
pop
movsb
sbb
pop
pop
pop
outsb
fcomps
push
sub
pop
subl
cmp
dec
mov
std
jns
dec
inc
stos
insl
repz
push
aas
shlb
adc
mov
pop
mov
lods
cli
jecxz
add
rcrl
xchg
dec
arpl
add
sbb
inc
rol
push
rcll
pop
cmpsb
cmpsb
jno
cld
outsb
dec
adc
arpl
push
adc
pop
lret
cwtl
push
sbb
loope
mov
mov
movsl
xchg
dec
push
xabort
popa
xchg
imul
jno
mov
out
jno
mov
loop
rcl
lea
mov
inc
or
inc
dec
fwait
aaa
in
or
addl
in
dec
call
in
jo
adc
out
xchg
daa
sub
inc
je
xchg
gs
test
sub
lods
push
pop
cmp
insb
sbb
or
insb
imull
cvtpi2ps
in
iret
push
ficoms
sarb
movsl
pop
loopne
nop
inc
mov
sti
inc
cmp
sar
js
pop
lods
cmp
mov
jns
pop
aas
xlat
subl
add
loopne
sbb
into
lods
cmp
add
js
dec
cwtl
cmpl
arpl
push
push
cmp
pusha
lods
xlat
dec
icebp
xchg
insb
jle
pushf
cmp
test
sbb
mov
out
sbb
insl
in
add
lret
outsb
push
call
lret
scas
sbb
into
test
and
divw
xchg
pop
mov
std
out
fisubrs
sub
xchg
sbb
mov
or
test
ljmp
lahf
pop
and
rclb
pop
or
ret
xchg
sbb
cmc
mov
jg
scas
inc
rcrl
outsl
xor
sbb
jnp
mov
cmp
lods
inc
add
dec
sbbl
mov
mov
jge
jbe
or
mov
adc
mov
or
xorb
jns
outsl
loope
movsb
add
addr16
outsb
jle
jnp
out
paddd
popf
sub
mov
xchg
cmp
xor
xor
jg
fcom
data16
cmp
imul
lods
sarb
jl
pop
add
mov
adc
pusha
mov
movb
mov
out
lock
cli
pusha
push
sub
enter
hlt
fsts
test
jb
dec
dec
and
mov
in
insl
fisubrs
cmc
push
outsb
popa
in
jae
and
std
mov
xor
mov
push
clc
push
loope
cld
push
test
aas
and
push
and
ljmp
ljmp
cmpsb
xchg
push
rcr
movb
mov
sub
fldl
outsb
mov
dec
xor
mov
add
int
jmp
add
push
mov
and
into
nop
lods
push
sbbl
adc
iret
cmp
movsb
fwait
loop
pop
mov
pushf
jmp
and
add
mov
push
into
movsl
and
jo
push
push
es
pop
iret
jle
inc
ds
lahf
ljmp
loopne
es
push
sbb
xlat
dec
insl
ja
jge
pop
div
push
and
add
jae
fsubs
pop
std
mov
xchg
mov
insl
daa
movsb
and
inc
js
cmp
sub
add
add
push
outsl
sub
cmp
sbb
dec
sub
xlat
mov
or
add
scas
jle
jns
dec
xchg
xor
sbb
push
loopne
jle
fisttpl
js
loopne
mov
fwait
cmp
sbb
xchg
or
push
cmc
shrb
mov
jo
stc
xor
sbb
sahf
fcompl
cmc
sub
cmc
out
in
jmp
mov
or
push
dec
xor
or
mov
sahf
dec
lods
or
add
imul
add
rclb
sbb
push
arpl
scas
push
xchg
ret
popa
push
ss
mov
pop
je
jge
mov
rcll
xor
push
xchg
cwtl
fs
or
imul
fsubr
or
sbb
fidivl
lods
inc
xor
lds
inc
pop
fisubrl
xlat
jmp
loopne
and
xchg
adc
adc
sbb
or
loope
jecxz
cmp
scas
xorl
jb
and
jl
std
lds
es
jne
pmullw
mov
push
leave
add
inc
out
cwtl
roll
dec
mov
push
push
test
jb
cltd
outsl
insl
pop
icebp
jge
push
xor
lock
mov
pusha
xchg
jmp
daa
cmpsl
cmpsl
ret
xor
add
cmpsl
xchg
mov
pushf
sahf
mov
pop
pop
in
stos
imul
sub
jnp
pop
hlt
repz
xor
inc
inc
xchg
cmp
and
pusha
pop
mov
or
out
sub
insb
aaa
shlb
int3
shl
sbb
rorl
jbe
xor
fistpll
adcb
fldt
adc
dec
sub
adc
pushf
mov
ja
and
aaa
mov
push
shr
sub
jge
dec
mov
ljmp
andl
sub
and
pop
add
movsl
jecxz
in
jg
mull
movsb
cmp
add
sbb
popa
add
hlt
mov
loope
call
sbb
jmp
fildll
dec
insl
push
insb
gs
les
inc
gs
enter
jg
dec
mov
loop
pop
dec
repnz
out
push
in
adcb
jne
sahf
xchg
hlt
test
call
test
xchg
jo
mov
push
pop
mov
aad
mov
andl
ds
icebp
sbb
out
in
repnz
xlat
push
pusha
and
sub
fwait
jne
cld
mov
pop
test
ds
lahf
pusha
inc
add
pop
push
pop
sbb
pop
paddusw
mov
push
jo
add
jl
lds
push
movups
pop
push
xor
outsb
push
jb
or
dec
roll
negb
pop
dec
jns
imul
cli
pop
inc
test
fists
mov
jno
sahf
jne
in
sub
insb
in
lret
xchg
mov
jbe
lret
out
sbb
repnz
push
inc
ja
iret
bound
push
jge
mov
inc
in
xor
gs
ja
xchg
aam
bound
push
rclb
xor
lret
xchg
dec
repnz
pop
add
mov
sbb
in
and
cmp
loop,pn
outsb
mov
sbb
adc
fmuls
lret
popa
add
push
xor
dec
or
cmp
mov
sub
insb
sti
inc
in
cld
mov
cmpb
icebp
fcmovnbe
sbb
sub
icebp
xchg
repz
das
mov
mov
push
inc
aad
adc
ret
adc
imul
into
or
pop
loopne
cmpsl
enter
push
push
insl
ljmp
cmp
push
add
inc
sub
inc
xor
or
and
pop
adc
dec
gs
arpl
push
pop
add
pop
jmp
mov
and
dec
iret
push
jmp
fldl
mov
out
dec
dec
pusha
cmpsl
or
push
in
jnp
dec
adc
incb
sub
fs
jl
sbb
mov
lret
add
mov
mov
loop
jmp
xchg
inc
sbb
stos
and
orl
je
or
test
mov
pusha
jle
sbb
cltd
mov
int3
inc
cwtl
mov
inc
sti
sbb
adc
jge
mov
xchg
push
movsl
xchg
xor
dec
mov
sub
stos
js
and
push
gs
mull
add
int3
mov
mov
adc
leave
loopne
into
mov
jp
sarl
bound
mov
test
in
inc
daa
xor
jns
and
fst
inc
mov
fmulp
imulb
movsb
rorb
jne
test
movb
sbb
mov
jle
xchg
std
ljmp
push
adc
scas
mov
push
dec
cmpsb
vcvtdq2ps
and
in
sahf
and
loope
jae
stos
ret
stc
mov
ss
add
fs
xor
or
cmpsb
push
loope
push
hlt
push
cltd
cltd
add
out
jg
out
shrl
sbb
gs
int
ja
sbb
inc
arpl
sub
push
or
mov
cmp
mov
inc
in
daa
lret
adc
jns
nop
jg
inc
mov
xor
stc
test
dec
repnz
lods
repnz
popf
scas
and
add
bound
jge
jmp
mov
xor
xchg
mov
fbld
push
cmp
jnp
jno
and
mov
les
mov
pop
inc
in
mov
and
jne
add
fisubl
xchg
jmp
dec
ljmp
jae
lods
repnz
pop
jp
in
fwait
das
aaa
or
pop
dec
sbb
stc
ret
sbb
add
in
dec
test
mov
sbb
jecxz
lret
ret
cmp
sub
cltd
push
inc
hlt
pusha
outsl
pop
mov
or
dec
sbb
sahf
mov
jmp
lock
and
pop
cmpsb
out
aas
iret
pop
scas
jmp
mov
iret
into
imul
andl
jmp
outsb
adcl
mov
nop
pop
enter
adc
push
popf
addb
push
int3
dec
pusha
ret
or
repnz
mov
lds
jge
xor
shrl
dec
incb
fisubs
nop
gs
lahf
sub
jecxz
cltd
jl
cli
divl
mov
jb
rorb
test
and
clc
xlat
sub
pop
bsf
push
shl
jp
sbb
lret
add
sub
and
jnp
aam
mov
scas
and
shlb
fstpl
sahf
dec
or
aas
addl
mov
fidivrl
scas
push
or
push
stc
xor
cmp
add
adc
sarl
test
int
or
inc
inc
outsb
test
push
push
test
mov
sub
and
test
test
sub
mov
jb
mov
xor
pop
add
std
cld
rcrb
je
sbb
cmp
popf
lcall
xchg
or
dec
sub
jo
mov
out
pop
push
test
roll
inc
push
sbb
mov
shl
je
mov
xchg
mov
mov
cmp
lret
jecxz
xchg
and
add
addl
mov
mov
in
ficoml
lods
mov
mov
je
push
mov
xchg
pop
jp
jecxz
sbb
cmpsl
std
fidivl
push
mov
add
inc
out
enter
push
leave
in
icebp
add
lea
push
xchg
cmpsl
mov
dec
push
cmc
jae
sbb
mov
movsb
fcompp
sub
mov
sar
cmp
or
adc
das
dec
xchg
stos
push
sbb
ja
arpl
lret
ds
cmp
lods
int
sub
xlat
sbb
lods
pop
adc
and
push
add
cmp
dec
sub
nop
lcall
and
je
xchg
mov
ja
xor
sahf
sbb
daa
add
cmp
xchg
push
jle
cli
repz
xor
cmpsl
pop
xlat
push
inc
jecxz
pop
push
add
sub
cld
add
aam
pusha
iretw
cmpsl
xor
cltd
repnz
into
jno
adc
out
andb
xchg
and
xchg
subl
ret
mov
outsb
std
push
jmp
sti
aad
or
mov
mov
outsl
sub
and
mov
ljmp
mov
cwtl
inc
fcoml
outsb
cmp
xchg
xor
rcrb
xchg
int3
cmp
mov
pop
cs
insl
out
lret
popa
loope
jne
aaa
bound
sub
dec
lret
cmp
push
inc
lea
fstpt
sub
push
xchg
mov
pop
bound
sbb
scas
test
cmp
inc
es
das
xor
jns
mov
jmp
mov
mov
jmp
lock
popa
jecxz
mov
rorb
cmp
sarb
mov
jbe
sbb
test
xchg
xchg
cld
je
jmp
lahf
push
out
lock
sahf
insl
insl
sarb
clc
jo
pandn
lcall
xor
shll
lds
aas
out
daa
add
add
addr16
arpl
stc
sub
and
push
aaa
rcrb
cmc
inc
mov
pop
aam
add
lret
xchg
insb
pop
mov
or
jno
lahf
daa
popa
lret
and
pop
movsb
shrl
xor
xor
push
filds
sub
dec
je
sti
ror
push
movsb
sahf
sahf
sub
or
cld
aas
ficoml
cmp
mov
jae
ja
pusha
stc
fcmovnbe
movb
add
divl
mov
mov
sbb
dec
inc
jbe
aaa
hlt
xchg
push
inc
ss
xchg
pop
movsl
and
mov
fs
jb
pop
out
sbb
fwait
xchg
and
les
outsb
dec
in
fidivrl
mov
aas
jle
pop
dec
sub
popl
stos
adc
ficoms
xchg
aas
fcoms
outsl
daa
les
insl
add
mov
jmp
mov
cld
fs
dec
test
outsl
hlt
jb
xlat
int3
adc
ds
lret
sub
adc
leave
pop
jg
stos
lahf
add
adc
xchg
cmp
popf
aas
mov
xchg
or
bound
push
fidivrs
jae
inc
cmpsb
mov
mov
ja
outsb
mov
je
dec
aaa
adc
mov
xchg
scas
push
movsb
and
rcr
lcall
mov
xchg
das
jmp
sub
and
or
in
add
out
aad
or
cmpl
jecxz
mov
push
cmpsl
filds
sub
cli
push
mov
add
bound
stos
dec
imul
mov
scas
insb
or
icebp
clc
cmp
mov
push
mov
ffreep
mov
mov
imul
add
gs
fnstcw
dec
es
mov
call
push
fists
jp
adc
adc
cld
jne
rcll
hlt
es
fdivs
addr16
cltd
push
jnp
mov
cmp
cmp
dec
sbb
shrb
bound
mov
into
mov
outsb
ret
dec
push
lret
movd
test
mov
jae
push
ret
outsl
sub
aaa
dec
pop
or
or
movsb
lret
daa
push
mov
fistpll
cltd
mov
rep
push
mov
add
call
fs
fmuls
test
pop
xor
test
mov
sbb
int3
stos
incl
add
pop
jae
xchg
inc
mov
jle
xchg
jg
add
sub
test
cwtl
inc
jne
clc
mov
mov
inc
sbb
out
xor
lods
out
cmp
in
sahf
or
test
jne
cmc
dec
cmp
cmpsb
inc
js
mov
sbb
adcl
jnp
cmp
or
pop
ret
gs
fcoml
negl
xchg
jo
sub
andb
xchg
mov
out
jnp
imul
imul
je
je
test
popf
arpl
jmp
gs
add
pop
mov
lret
test
and
sub
xor
mov
mov
cmp
hlt
icebp
or
or
pop
and
sbb
lcall
gs
pop
test
stc
mov
hlt
imul
scas
mov
sti
aam
cmp
outsl
add
sbb
add
jne
hlt
cmp
jg
jnp
cmc
les
bound
negl
jle
testb
sbbl
push
stos
dec
imul
inc
cmp
xchg
inc
ret
sub
sbb
fwait
pop
popa
pop
stos
les
push
or
mov
aaa
cmpsl
insl
pop
aas
imul
pop
addb
lock
xchg
test
or
fs
scas
dec
xchg
aas
fwait
test
mov
push
enter
cmp
ja
push
cld
leave
dec
outsb
lea
dec
mov
mov
sub
inc
out
or
pop
arpl
jl
stc
and
push
fs
cli
loop
sub
adc
mov
cmpsl
lods
nop
jno
add
push
sub
lea
inc
gs
mov
xor
mov
icebp
loope
dec
divl
xor
xchg
push
movsb
mov
mov
in
shl
or
out
fstl
imul
mulb
jo
sbb
rcrb
inc
iret
cmc
in
cmp
int3
mov
addr16
mov
test
aad
scas
xor
xlat
mov
inc
sahf
loope
loopne
or
inc
adc
cli
imul
and
and
cld
mov
pop
cs
inc
test
fdivs
imul
xchg
dec
pop
cmp
or
xchg
sbb
aam
shll
andb
rcll
xchg
mov
je
xlat
add
xor
add
and
jo
lret
mov
fdivrl
jmp
out
insb
out
pushf
push
cmc
iret
sub
iret
and
jecxz
mulb
cmp
outsb
jecxz
adc
and
or
adc
jg
lret
jno
stc
xlat
mov
push
dec
adc
jo
lret
das
insb
scas
faddl
sbb
mov
incb
pop
dec
add
outsl
xchg
adc
sbb
rorb
repnz
sub
adcl
push
sub
jnp
daa
mov
in
xor
fcmovb
aas
mov
sbb
add
inc
add
adc
mov
jnp
ss
je
and
test
ret
sti
sub
fs
push
ja
in
shlb
xchg
pop
mov
lods
xor
dec
add
sti
shlb
fcomps
cmp
jmp
mov
nop
push
adc
icebp
cmp
push
arpl
jae
aad
cmp
into
xchg
shl
lcall
bound
inc
std
scas
pop
int3
add
xchg
pop
int
shlb
cs
sub
xor
add
and
jmp
sub
lret
xlat
lods
call
out
mov
jge
dec
adc
rcll
lahf
inc
jge
dec
sub
mov
sub
jne
xchg
je
stc
fwait
sbb
xchg
cmp
mov
adc
in
rorl
mov
xchg
jg
pusha
mov
repz
add
adc
loope
clc
inc
pop
jle
fsts
pop
rcll
outsb
stos
push
dec
cmc
xor
push
adc
mov
and
ljmp
and
cmc
or
jo
pusha
jle
xchg
mov
stc
scas
adc
xor
cmp
ret
and
jb
lahf
inc
adc
jns,pn
aam
in
jns
sub
mov
std
test
repz
std
sahf
sbb
ret
nop
sbb
out
in
sbb
push
xchg
add
dec
mov
push
or
inc
fwait
repz
and
out
cltd
cmc
repz
push
push
xchg
icebp
mov
mov
cmp
xor
push
shlb
dec
int3
dec
in
cld
loop
sbb
stc
push
xor
jecxz
jge
shlb
jl
pop
das
mov
mov
notl
dec
incl
adc
xlat
pusha
ret
pop
out
lds
sti
pusha
cmp
push
rcrl
sub
cmpsb
lret
rcrb
pop
shr
xchg
lock
or
ud0
addr16
aad
or
add
int3
stc
cmpsl
mov
jl
imul
pop
add
xor
mov
add
push
jne
fstpl
pop
aad
sub
pusha
inc
pop
jnp
and
jbe
nop
scas
imul
pop
and
dec
shlb
movsl
cld
aam
fdivrp
add
iret
lods
adc
mov
jge
mov
jp
bound
mov
lret
outsl
in
and
xchg
test
aam
xchg
lahf
add
add
das
dec
imul
xchg
xorl
add
push
jne
addr16
adc
push
or
and
inc
add
callw
popf
pop
fcoms
lret
xor
and
lcall
hlt
mov
faddl
inc
iret
push
mov
arpl
cld
out
dec
cmp
cmp
xchg
fistpll
test
insb
lret
fisubrs
or
inc
mov
cmp
ffreep
inc
sbb
orb
repnz
daa
pop
adc
pushf
and
pop
or
aaa
pushf
sbb
xchg
pop
jle
mov
int3
dec
imul
jmp
xor
imul
mov
pop
sub
mov
jbe
dec
and
aad
cld
lods
mov
daa
movsb
sub
mov
push
inc
inc
or
int
mov
movsl
xor
xor
iret
sub
adc
sti
in
and
movsl
jmp
cmp
test
sbb
pop
loope
xor
cmp
push
je
sub
and
shlb
sub
arpl
fbld
dec
mov
fidivrl
dec
into
xor
xor
mov
fnstcw
xchg
dec
ja
pop
fsts
andl
scas
cmpsl
dec
int
cs
frstor
cmp
sahf
sub
fistpl
stos
outsb
jg
in
cmc
push
rcl
push
jo
icebp
testb
push
scas
cwtl
sbb
xchg
cmp
mov
jnp
nop
jle
sti
or
mov
jmp
sub
xlat
aaa
popf
sub
jne
mov
out
fnsave
hlt
mov
lcall
and
add
mov
jmp
fistpl
sbb
cltd
aaa
cmp
inc
push
or
lock
shlb
push
jnp
shl
jb
cmp
sbb
test
sub
dec
loope
mov
cld
mov
je
daa
jge
xchg
mov
int
dec
mov
cmp
scas
aam
mov
pop
sbb
inc
aas
lahf
cmp
and
lock
stos
popf
int
mov
cmp
lcall
ret
xchg
add
out
sbb
fwait
out
int
mov
push
jge
into
mov
sbb
fwait
pop
stos
push
and
icebp
xchg
notb
push
xor
mov
outsl
cld
mov
add
shll
jo
mov
stos
dec
and
int
pop
push
and
jp
xchg
fs
xlat
icebp
xchg
fmuls
push
scas
mov
mov
jl
pusha
daa
or
test
out
jg
xchg
mov
lret
cmpsb
xor
insl
jmp
inc
dec
loopne
clc
push
rorl
cltd
jnp
cld
jecxz
cmp
sub
out
mov
mov
pushf
push
add
push
lods
cmp
testb
leave
xchg
ret
inc
bound
setnp
sbb
lahf
aas
aas
test
xchg
sbb
test
repz
in
or
mov
sbb
jbe
inc
sub
mov
mov
fildll
dec
roll
movsb
lahf
cmp
lea
mov
shll
add
jnp
ss
fwait
ss
andb
pop
cmp
mov
push
add
jne
int
ljmp
popf
dec
cli
pop
pop
cmpsl
pop
int3
adc
sbb
frstor
aam
out
dec
cltd
push
test
popa
push
aad
adc
and
in
xchg
cmp
cwtl
sbb
rcrl
movsl
dec
lods
ret
cwtl
shl
xchg
sbb
dec
in
cli
dec
mov
adc
popf
pushf
pop
mul
cmpsl
sahf
adc
mov
mov
fucomi
jle
mov
mov
mov
xchg
icebp
cltd
mov
test
jb
lds
dec
xchg
mov
mov
lret
or
mov
and
cmp
dec
lret
push
mov
cli
dec
adc
popw
mov
cwtl
xchg
addr16
pop
xchg
mov
sub
mov
leave
inc
mov
mov
inc
push
jl
and
adcb
mov
in
pop
pop
or
dec
into
push
scas
pop
add
mov
push
hlt
insl
inc
enter
cmpsl
sub
adc
pop
add
jmp
lods
dec
test
mov
adc
addr16
lods
pop
pop
inc
inc
mov
jae
or
repnz
in
mov
jl
dec
aaa
dec
push
mov
in
imulb
push
cmp
lods
adc
icebp
ja
mov
mov
and
decl
jecxz
and
andb
mov
add
imul
pop
and
call
pop
xchg
mov
out
mov
leave
xorl
and
jne
insl
and
adc
mov
clc
dec
push
divb
mov
bswap
sbb
sbb
fsubs
xor
ds
add
dec
xor
xchg
nop
shlb
ds
push
jae
cmpsb
jo
scas
cmp
sub
dec
jmp
leave
bound
push
out
push
in
xchg
movsl
fistps
mov
push
mov
gs
xchg
dec
xchg
push
out
pusha
out
std
jmp
fsubs
nop
xlat
pop
addr16
xchg
int
or
out
shlb
in
pop
fwait
inc
popf
jg
bound
js
jne
dec
dec
shl
ficoml
das
sub
lds
sbb
xor
xor
ja
push
dec
stos
cld
xchg
insb
in
or
sub
sbb
and
cmp
sbb
add
aas
negb
test
or
push
lds
test
xchg
sub
incl
ss
add
pop
push
mov
mov
mov
mov
in
lods
xor
push
mov
adc
push
mov
fdivr
sar
sub
fstpl
mov
add
jg
std
or
inc
shr
in
sub
jp
dec
fisttpl
lcall
repz
stos
mov
cmp
aas
mov
fmulp
jle,pn
push
mov
fdivs
mov
pop
popf
insb
adc
mov
and
pmaxsw
call
jg
stos
push
jl
pop
xor
pushf
cwtl
xchg
stc
mov
std
in
pop
sbb
out
faddl
add
adc
int3
bound
xchg
sbbl
rorl
loope
cmp
fwait
sub
arpl
jo
outsb
cmc
out
push
fimuls
pusha
cld
sbb
jp
xchg
cmc
xchg
jg
cmp
inc
pushf
call
pop
ficomps
cli
push
jns
sub
mov
mov
cmpsb
or
cmp
push
addr16
xor
or
inc
lods
and
xor
out
push
pop
or
dec
add
inc
loopne
imul
fiadds
ffreep
xchg
cld
pop
add
mov
sub
out
dec
push
js
out
inc
int3
arpl
ljmp
js
xor
push
xlat
adcb
fisubs
in
shll
dec
int3
es
cmp
mov
insl
sub
fldt
xor
sub
mov
jecxz
or
out
mov
or
push
lea
rorl
aam
adc
jnp
sti
ja,pt
sub
adc
inc
adc
ljmp
stc
push
pushf
out
sbb
jno
jo
cmc
inc
xorl
mov
or
leave
push
enter
fbstp
gs
stos
add
and
int
out
and
je
inc
shrb
loop
rcl
cwtl
add
or
cmp
icebp
test
fldenv
int
insb
iret
cmpsl
insl
mov
xor
fidivs
bound
adc
jl
xorb
jl
jecxz
es
mov
xor
or
push
inc
stos
and
lret
xchg
nop
cmpb
mov
int
lock
xor
mov
loop
divb
out
mov
in
xchg
and
out
mov
cmp
mov
push
sub
jmp
out
add
mov
push
lea
pusha
pop
cli
js
mov
ret
repnz
xchg
sbb
push
or
add
enter
hlt
outsb
js
clc
loopne
inc
sbb
jnp
xchg
idivl
cmpb
in
inc
and
and
int
in
ret
sahf
outsl
iret
jno
sbb
mov
popf
mov
xor
fnstsw
pop
fsub
test
push
cmp
cmpsl
jge
fisttps
in
jl
mov
sahf
jl
cld
clc
outsb
sbb
test
add
jge
jne
call
pop
aaa
mov
or
cmp
enter
mov
mov
push
scas
and
addr16
mov
cmpsb
loopne
xor
ss
popf
sub
shrl
push
jle
out
leave
in
mov
pop
outsl
fcoml
cmpsl
push
inc
jae
enter
loopne
mov
cs
dec
adc
jne
sub
jle
ror
xor
fcomps
pushf
iret
or
inc
sub
mov
adc
insl
leave
ss
jge
add
and
adc
cld
cli
pushf
orb
push
mov
sahf
add
das
lods
dec
aam
out
xor
add
inc
in
es
sbb
pop
sub
mov
scas
xchg
ljmp
out
xchg
roll
or
add
pop
xor
pop
pop
das
sbb
or
cmp
stos
sbb
aad
scas
mov
pushl
popf
sbb
ss
mov
popf
sub
xorb
jno
jo
jns
int
leave
bound
adc
dec
or
je
jg
lcall
push
push
ja
aaa
test
xor
enter
add
jge
xor
and
gs
mov
push
mov
lods
enter
sahf
setbe
lds
add
in
popf
xor
aaa
cmp
imul
jb
cmp
push
int3
js
mov
and
jns
rorb
dec
aaa
cli
xchg
dec
xlat
add
out
jb
xor
scas
pop
jno
sti
ret
pop
xor
ljmp
add
and
int
lret
clc
daa
repnz
sub
push
cmp
popf
sub
pusha
jns
add
leave
pop
mov
int3
loopne
movsbl
push
ficomps
iret
jo
mov
push
jg
add
mov
cmp
sub
push
movsl
cmpsl
add
or
ds
stos
mov
adc
shll
mov
stos
rclb
jmp
in
ljmp
inc
xchg
mov
mov
cmp
add
insl
andl
mov
aad
aas
stc
repz
aad
aam
cli
or
dec
cmc
pop
mov
mov
shlb
nop
test
fiaddl
notb
mov
bnd
fidivl
cltd
fildl
dec
les
ret
sbb
lods
dec
xchg
cmp
xchg
lea
bound
fnstcw
cmpsl
jns
int3
and
mov
or
cwtl
daa
jbe
mov
mov
lds
fmuls
or
cmp
pop
int
ret
sub
xchg
mov
fsubrs
sti
pop
loope
repz
dec
mov
daa
xor
dec
jmp
or
icebp
jg
rcll
jo
out
inc
movsl
mov
pusha
loopne
or
pop
ret
fs
mov
push
sbb
scas
mov
loop
cltd
dec
aaa
xlat
dec
adc
sub
sub
add
mov
pusha
testb
xchg
fdiv
ficoms
mov
cmp
iret
jns
mov
lods
mov
jbe
out
roll
xchg
pop
std
nop
dec
add
cld
adc
or
lcall
rolb
lods
insl
rol
inc
mov
cmp
pop
push
jecxz
push
aas
cmp
pop
and
ja
push
mov
xor
lock
mov
pop
mov
lock
cmp
lods
lock
insb
ja
cmp
popl
mov
push
adc
pusha
test
jbe
cmp
idivl
arpl
sub
jns
jmp
mov
les
iret
cmp
push
fxch
fxch
sahf
js
jl
push
jno
push
xchg
testl
lods
movsb
jecxz
pop
aad
mov
jno
in
xchg
adc
pop
mov
lcall
insb
stc
adc
pop
or
inc
scas
js
cli
outsl
int
xor
cmp
or
jmp
cli
mov
mov
add
insb
loopne
out
mov
cmp
jl
in
arpl
sbb
icebp
jnp
mov
and
dec
sbb
test
push
icebp
adc
aad
fisubrs
fcoms
inc
rolb
sub
outsl
xor
pop
push
clc
loopne
jle
aas
mov
inc
into
xchg
adc
inc
mov
pop
sbb
lds
fists
lock
sbb
fs
jns
jmp
lret
xor
cmpl
xchg
jno
icebp
in
loopne
cmpsl
dec
dec
hlt
stos
sbb
mov
scas
sarl
lods
pop
lret
pop
repz
push
mov
loopne
inc
fcmovnbe
mov
mov
push
adcl
push
bound
loope
dec
sti
jle
cmp
adc
xor
xor
fs
xchg
or
pop
sti
cli
out
sub
lret
dec
cmp
sub
xchg
repz
daa
push
les
xor
push
push
push
std
xor
test
fs
pop
sub
mov
outsb
sub
mov
fimuls
jl
sbb
ss
mov
jb
int3
sbb
pop
dec
cmpsb
sub
les
jg
adc
inc
arpl
nop
cmpsl
repz
push
mov
test
int3
push
jl
fiadds
push
je
rcll
mov
cld
dec
push
mov
js
out
xor
lods
aad
popa
cmp
fcomip
mov
enter
cmpsb
call
sub
or
addb
rorb
cld
jmp
push
mov
pop
jl
dec
mov
mov
sbb
mov
jl
scas
add
adc
out
stos
xor
stc
jnp
adc
movsl
fs
imul
mov
pop
mov
loop
cli
add
test
dec
fistpll
cmp
pushf
jge
adcb
or
in
pop
in
inc
xchg
shlb
cli
shrb
mov
leave
shrl
fdivrp
test
sub
popf
lret
rclb
cmp
mov
aaa
xchg
cltd
and
mov
pushf
push
jns
shl
sbb
pop
clc
clc
cmpsl
fisubs
mov
add
insl
jp
ret
cli
dec
xor
and
xchg
aas
sbbl
in
push
lahf
jns
mov
fistl
mov
bound
cli
popf
jae
xor
push
push
push
rorl
jne
ja
jg
xchg
scas
aam
icebp
int
push
test
std
pop
iret
xchg
mov
out
aad
pop
cmp
fistpll
int3
or
lret
lock
jle
repz
daa
ljmp
mov
xor
mov
call
mov
lds
dec
jns
dec
sahf
sub
or
repz
add
mov
mov
cwtl
xchg
scas
in
test
or
add
or
lret
add
addr16
pushf
insb
mov
ret
push
mov
dec
out
sbb
sbb
cmpsb
aas
adc
pop
add
sub
sub
repz
jmp
data16
aas
push
cld
mov
addl
add
and
mov
add
hlt
dec
mov
das
xor
iret
sub
mov
adc
test
and
mov
lret
nop
imul
movsb
inc
pusha
pushf
inc
dec
jmp
push
xchg
ffree
xchg
adc
cltd
sbb
dec
gs
out
push
pop
xor
cltd
inc
add
push
imull
pop
cs
jae
xchg
leave
shll
xchg
out
and
in
sbb
sub
add
iret
mov
and
add
adc
aam
push
push
dec
adc
mov
iret
fs
stos
push
dec
rcll
inc
xchg
imull
sbb
xor
hlt
mov
dec
jbe
xor
lcall
fdivrs
stc
test
mov
mov
pop
xchg
filds
pop
rcll
mov
xchg
scas
loopne
cmp
data16
jmp
std
dec
ficoml
pop
pop
sbb
insb
dec
and
mov
lret
cmp
shl
xchg
and
push
leave
jge
mov
pop
jle
fwait
int
add
out
push
sub
inc
xor
push
mov
xor
popf
stc
or
in
or
idivl
mov
pop
andb
mov
inc
or
nop
enter
lds
inc
cwtl
ljmp
sub
filds
add
sub
icebp
adc
sbb
xchg
xor
xchg
aad
or
popf
rclb
jmp
lahf
pop
clc
push
shlb
mov
mov
loopne
pop
cld
in
orb
sub
xchg
arpl
lea
mov
inc
movsl
cmc
fstps
fistpl
sub
push
les
repz
lahf
nop
ret
mov
lahf
sub
int3
inc
aaa
xchg
or
inc
cmp
mov
jns
push
inc
mov
mov
mov
sahf
xchg
mov
adc
mov
dec
mov
std
inc
rcrl
aas
or
push
mov
pop
xchg
sbbl
lcall
xchg
lahf
scas
jbe
mov
mov
mov
xchg
es
cli
arpl
add
inc
push
les
jp
adc
jbe
js
mov
js
dec
jl
je
sub
subl
push
jno
mov
daa
push
or
test
test
fsubr
push
mov
rcrl
mov
bound
mov
sbb
ljmp
xor
jo
push
sahf
add
aaa
xchg
sbb
lods
inc
imul
aaa
es
mov
dec
adc
sub
lret
sub
jp
cmp
cmp
adc
push
push
out
add
cmp
jae
adc
ret
dec
iret
movsl
test
rol
std
and
cmp
sbb
sub
cld
fstpt
dec
mov
lock
xor
push
mov
sbb
sbb
push
inc
cmp
inc
imul
push
cmp
inc
nop
lods
sub
das
add
js
pop
sub
decl
mov
lcall
mov
mov
in
hlt
pop
mov
pop
and
mov
outsl
clc
or
das
fistl
das
lea
push
jae
dec
js
dec
or
fnstsw
add
sbb
inc
loopne
sub
add
je
loop
xchg
aad
inc
bound
mov
lret
repz
gs
sahf
mov
cmpsl
adc
mov
insb
jl
or
and
xchg
nop
daa
pushf
fcmovnb
jne
xchg
xchg
inc
sahf
cwtl
jecxz
push
ja
xor
outsb
out
xchg
into
inc
jle
decl
xor
ss
mov
je
push
pop
xchg
or
or
fs
xor
mov
std
inc
inc
jmp
sti
insb
insl
mov
out
mov
test
xchg
mov
cmpsb
jae
add
pop
or
cli
add
xchg
cmp
movsl
pop
lock
mov
sbb
push
pop
and
jge
flds
rclb
incb
cmp
jbe
lds
sbb
decb
inc
repz
hlt
dec
insb
addl
xor
cmp
ficoml
fidivs
push
xchg
incl
xlat
xchg
and
push
push
push
xor
mov
sbb
shlb
or
test
imul
inc
mov
dec
adc
push
jb
outsb
or
and
ljmp
sbb
mov
or
pop
push
adc
jns
or
cltd
pop
sti
inc
or
mov
mov
lret
jno
pop
push
xchg
xlat
pop
or
int3
sbb
mov
push
cmp
mov
stc
add
sub
mov
push
inc
pop
popa
adc
cmp
fsts
cld
or
shr
repnz
adc
mov
dec
stos
push
insl
and
mov
fwait
push
lds
push
insb
sbb
jns
jno
cmp
mov
xor
sbb
out
loop
mov
and
ljmp
les
lret
hlt
and
jnp
inc
orl
imul
aaa
movsl
fwait
jne
push
pop
inc
mov
dec
mov
sub
or
and
sahf
cmp
in
mov
add
xchg
jb
movsl
repz
out
loopne
ds
adc
or
pop
dec
push
andl
push
clc
into
mov
insb
push
cmp
pop
push
pop
insb
xchg
xchg
int
mov
in
push
lahf
xor
rcrb
fildl
or
add
jo,pt
rorl
sbb
lcall
pop
xchg
jnp
bnd
xchg
push
sub
clc
pop
int3
inc
pop
mov
xchg
stos
add
xlat
movsb
mov
mov
hlt
cmp
lcall
xchg
mov
xor
mov
mov
out
mov
xchg
push
in
lea
push
shrb
jo
cmp
mov
mov
inc
push
sub
or
dec
xlat
fwait
and
into
xchg
cwtl
repnz
or
sbb
add
xor
xor
mov
add
in
adc
daa
cmp
ret
add
mov
lcall
mov
shlb
jp
xor
pusha
cltd
mov
xor
test
imul
out
dec
and
sbb
repz
dec
fcomp
xchg
test
loope
out
push
dec
fsincos
sarb
out
loopne
mov
cli
push
cmc
sbb
cmp
pop
lods
lcall
gs
push
testb
movsb
push
and
test
inc
push
lods
push
push
cmp
ret
cmp
jmp
stos
and
scas
pusha
inc
notl
mov
push
mov
out
mov
arpl
inc
imul
ljmp
mov
pop
push
jns
sub
pusha
mov
add
popa
sub
in
mov
add
add
test
ret
in
mov
sbb
add
ret
and
sub
adc
lahf
xor
xor
mov
cmc
cmp
popl
adc
xlat
xor
sbb
scas
in
add
test
lret
cmp
cmp
xor
in
mov
cmpsl
xor
test
sbb
adc
out
push
popf
sub
out
lcall
jb
out
ss
test
jbe
out
jle
mov
test
orl
and
inc
xchg
stos
or
push
ja
and
js
cmp
pop
adc
nop
pop
sbb
xchg
dec
mov
ja
scas
push
lds
lods
xor
jb
sarl
xchg
xchg
fisubrl
out
cs
loopne
es
test
xor
mov
xchg
xchg
xchg
mov
jbe
xchg
xchg
movsl
pushl
sbb
jge
jb
inc
and
mov
cmp
and
data16
jns
test
fdivrl
imul
add
fiaddl
int
out
cmp
cmp
in
shll
xchg
dec
icebp
in
add
test
fnstcw
cltd
dec
jg
int
jo
loopne
cltd
call
xor
xor
out
or
fimuls
xor
xor
sbb
fistpl
lahf
shrb
jle
test
sbb
mov
jle
in
mov
popf
xor
sub
test
inc
xor
cld
sub
pop
mov
int
sbb
std
mov
pop
clc
mov
sarb
jne
mov
and
and
sub
xor
adc
lds
lret
pop
sbb
mov
ljmp
lret
pop
stos
ja
mov
push
stos
cmp
cmp
sti
into
cmpsb
or
adc
add
in
pop
repz
jmp
fwait
and
push
push
and
ss
add
cmc
inc
mov
lock
cmp
scas
int3
in
nop
mov
movsb
int
xchg
jle
cmpsb
push
jge
in
stc
ret
movsb
cld
insb
xor
mov
clc
movl
out
or
adc
or
mov
adc
ret
pcmpgtb
cltd
mov
stc
mov
add
lds
test
pop
negb
mov
mov
lret
mov
inc
add
icebp
je
adcb
inc
dec
jl
inc
dec
bound
and
clc
lret
pop
push
push
dec
ret
fwait
xchg
stos
add
rcl
ja
das
arpl
pop
pop
dec
test
xor
test
addl
mov
pop
cltd
sub
int3
pushf
dec
orl
sbb
incl
mov
loope
stc
xchg
add
call
or
or
inc
or
mov
pop
nop
sbb
js
mov
mov
jg
pop
mul
int3
add
out
insl
jmp
mov
jbe
mov
cmpsl
aam
and
sbb
andb
pop
inc
dec
or
rcrb
out
in
or
add
inc
or
insl
adc
hlt
fimull
push
rcrb
fdivl
stc
mov
sub
adc
and
xor
int
pop
daa
jae
out
fimuls
movsl
test
inc
rorl
and
dec
mov
mov
dec
jno
fimull
scas
jnp
dec
xchg
sti
push
mov
pop
loopne
xchg
test
cmp
aas
jns
fnstsw
xchg
lea
pusha
lret
leave
xor
dec
out
ljmp
pushf
mov
pop
cmpsl
addr16
push
sti
add
insl
in
lods
sahf
aas
mov
jns
repz
lock
xlat
daa
repz
test
es
xchg
mov
imul
ficoms
call
sub
popa
push
cltd
imul
test
ret
or
testl
js
push
mov
xchg
cmp
xor
mov
cltd
or
and
jno
adc
xchg
stos
gs
es
cmp
aaa
push
pop
lret
hlt
xchg
and
jl
pop
mov
inc
jnp
jns
int
lret
shl
xor
ljmp
hlt
and
cmpsl
lahf
es
jbe
jl
lcall
sbb
in
sahf
lods
sbb
push
cld
adc
icebp
aas
es
mov
mov
adc
sar
xchg
out
and
jns
pop
popf
aam
mov
push
in
clc
in
or
pop
out
nop
es
sbb
pushf
dec
test
cld
shrl
lahf
mov
adc
push
or
jg
dec
add
and
inc
out
fnstcw
stos
mov
mov
and
je
xchg
sub
pop
jbe
jecxz
das
inc
jg
das
and
cltd
pop
je
add
test
mov
cmp
add
and
es
adc
mov
ds
lods
inc
sti
inc
sub
adc
mov
stos
and
pop
sbb
mov
sub
xor
jbe
pop
or
ljmp
inc
fstpt
push
out
jge
or
mov
int
inc
add
insl
fs
mov
xor
xor
ret
sbb
xchg
ficompl
pushf
lahf
das
push
test
aaa
aaa
adc
pop
sbb
pop
add
out
repz
sti
scas
push
cmp
xchg
push
roll
adcb
add
call
les
cld
movsb
or
sbb
mov
scas
pop
sub
sbb
shlb
mov
std
test
lret
loopne
xchg
mov
daa
fwait
jp
lods
mov
mov
lds
adc
xchg
shlb
loopne
sahf
sbb
cltd
call
dec
lock
in
pop
mov
scas
lds
cltd
loop
and
adcb
sti
repnz
xlat
cmc
fisttps
jns
jecxz
mov
add
dec
test
xchg
mov
loopne
xor
inc
cmpsl
int
xchg
pop
pusha
sbb
lcall
int
mov
stos
xor
jbe
add
test
xlat
loop
xchg
pop
rcl
fldcw
out
subb
adc
loop
mov
lret
dec
nop
xor
aad
pop
test
jge
or
ret
hlt
push
cmp
mov
mov
jns
ret
pop
jne
xchg
out
stos
sub
in
or
jae
fs
or
cmp
mov
loope
push
clc
shlb
bound
inc
cmp
sbb
pop
btr
es
inc
mov
mov
mov
push
pop
test
fstl
bound
imull
movsl
out
sub
mov
push
cmp
mov
dec
or
sbb
jmp
loopne
js
jae
test
lahf
fcomip
bound
lds
add
dec
adc
outsb
test
add
fnstcw
mov
push
fistpll
leave
pop
inc
subb
or
sub
clc
dec
push
mov
pop
fld
leave
cmp
sub
mov
xchg
and
push
out
aaa
cmp
xchg
adc
pusha
dec
pop
xchg
ja
mov
jnp
pop
sbb
and
sbb
mov
mov
sub
stos
inc
loope
add
pop
jmp
add
lods
sub
lahf
es
in
xchg
leave
sbb
lret
out
mov
dec
ljmp
pop
cmc
push
lahf
push
jg
pop
adc
movsb
mov
lods
cmpsl
faddp
in
cmp
cld
push
mov
je
adc
xor
ret
imul
xchg
xchg
fisubs
outsb
mov
inc
sbb
dec
outsb
push
sub
fsqrt
aad
fldcw
sti
mov
xor
adc
sub
sub
sub
add
sub
outsb
jp
mov
mov
push
adc
cmc
pop
sub
sub
movsb
ja
in
sub
sub
divl
scas
mov
pop
jmp
jmp
mov
stos
xchg
sub
and
rolb
lret
pop
adc
or
dec
mov
lea
sbb
jmp
sub
fcmovnb
daa
or
out
stos
imul
ret
aad
fwait
push
rorb
sbb
ret
int
jb
add
ja
loope
inc
ss
jl
fucom
test
or
dec
scas
sub
data16
imul
les
test
fdivr
cmp
idivl
lea
lea
call
testb
sbb
pop
adc
xor
icebp
fisubl
int
mov
cld
test
insl
mov
cwtl
dec
jbe
jecxz
xor
in
and
pop
cli
xchg
add
ja
and
loop
stos
xchg
iret
fisubrs
xchg
sti
inc
jecxz
loop
and
shrb
mov
movsl
pop
sub
mov
fs
mov
push
std
andl
mov
or
push
movsb
mov
fcmovne
jo
mov
setbe
add
or
jbe
sub
andb
adc
cmc
aam
test
jae
xchg
cltd
negb
push
or
fildll
jecxz
sbb
adc
jg
rcr
or
sbb
add
mov
mov
inc
movsb
push
pushf
jo
cmpsb
inc
mov
lahf
pop
stos
aam
rcrb
mov
add
push
adc
lret
mov
test
outsl
in
ss
add
or
xchg
jb
lock
repnz
cmp
or
mov
cmp
in
lods
insb
divb
int
shlb
fldcw
popl
pushf
mov
push
ss
push
jnp
shll
push
data16
pop
inc
int3
pushf
aad
rdtsc
and
sbb
and
aam
jl
jl
stc
and
lahf
pop
mov
push
dec
je
add
lahf
divl
xor
rol
add
push
mov
cmp
xchg
pop
in
push
mov
jne
xor
add
pop
sbb
mov
bound
insl
cmc
cmp
addr16
and
push
fdivrl
mov
icebp
fidivrl
add
shll
jp
aaa
call
dec
icebp
in
inc
xchg
fstps
and
sti
mov
aas
cmpb
xchg
into
dec
mov
mov
mov
xchg
mov
jno
lcall
cmp
ja
mov
test
cli
in
out
ret
aaa
xchg
fsubp
stc
daa
adc
or
jbe
xchg
ja
push
mov
je
addl
nop
gs
and
xchg
aaa
and
stos
sahf
hlt
leave
mov
sub
pushf
adcl
arpl
out
lock
pop
lcall
push
sbb
push
mov
push
neg
lock
dec
dec
xchg
mov
jae
pop
sub
jp
call
dec
nop
cmp
outsl
jns
dec
movsl
aaa
into
add
sbb
test
and
adc
jb
or
xchg
mov
xchg
adc
ss
mov
bnd
sahf
xchg
ja
iret
push
repnz
inc
sti
dec
sbb
xchg
data16
mov
mov
dec
push
test
loop
adc
mov
arpl
mov
push
mov
or
dec
lahf
mov
and
push
in
mov
adc
pop
popa
push
jbe,pn
pop
push
loopne
imull
pop
cmp
xchg
loopne
aad
in
fsubs
jmp
sahf
cmp
inc
adc
sti
aad
out
loopne
dec
enter
add
pop
pop
pop
sub
adc
testl
xchg
mov
jae
and
push
adc
outsl
shl
ljmp
outsl
mov
test
mov
adc
je
je
je
lcall
imulb
out
jl
push
ffreep
dec
movsl
addr16
stos
jp
mov
popf
into
je
xchg
lahf
jl
mov
jno
push
pop
cmp
push
adc
jp
sbb
xchg
jle
mov
pop
sti
add
sbb
stos
loopne
jmp
xor
dec
xor
in
rcrl
aad
or
xlat
mov
cmp
out
mov
jo
mov
sbb
pop
ss
mov
xchg
or
mov
jns
stc
cs
dec
adc
pop
jmp
cmp
and
es
ror
sub
xor
adc
fidivs
outsl
or
mov
xchg
push
push
repz
outsl
scas
xor
leave
dec
mov
test
inc
idiv
fbstp
or
sbb
mov
shrl
cmp
cmp
sub
mov
rcll
jnp
inc
pop
cmpb
and
pop
cmp
cmp
inc
repnz
pop
adc
mov
sahf
mov
xchg
add
xor
pusha
aad
adc
mov
roll
in
lret
fwait
add
ja
pop
shrl
lock
ret
xorl
aaa
and
lahf
les
cli
or
call
fldcw
test
xchg
dec
pop
int
jl
out
andb
and
or
imul
dec
add
insb
push
out
scas
xchg
xor
gs
jge
shl
not
dec
jbe
jo
inc
shrb
jmp
bound
xor
lea
add
movsb
sahf
pop
pop
xlat
jmp
pop
xchg
push
ja
mov
push
pop
cmp
jb
div
mov
loop
xchg
mov
sub
inc
lods
jmp
addr16
les
lahf
shl
test
and
inc
sub
pop
mov
insb
add
dec
fcmovnu
xchg
and
repz
or
jae
fisubrl
aam
aas
es
into
outsb
les
mov
mov
push
sub
mov
push
sbb
ss
xchg
test
inc
clc
push
and
xor
mov
add
dec
outsl
lods
cmp
mov
je
dec
cmp
or
ret
jecxz
sbb
pop
int
out
push
sbb
lds
loop
sub
cmp
mov
jbe
or
push
flds
inc
lahf
dec
movsb
or
insb
pop
mov
dec
sub
outsb
xchg
cmp
push
rcl
insb
jp
mov
stc
xor
xor
cmp
inc
out
cmp
popa
sub
mov
jmp
pop
out
pushf
push
cmp
and
pop
sarb
inc
outsb
loope
jnp
pop
rclb
pop
sbb
mov
add
cmp
test
in
xor
sub
es
imul
adc
mov
sub
sub
and
popf
pop
outsl
fdivs
cmp
mov
test
testb
pop
out
mov
push
out
mov
cmc
fnstenv
adc
xchg
fnstcw
xchg
jno
mov
inc
in
push
sahf
push
jno
fistpl
dec
sbb
mov
dec
mov
ficompl
jae
loope
mov
adc
mov
inc
filds
fdivrs
push
push
add
pushf
sarl
sub
dec
sbbb
xchg
or
or
mov
and
das
mov
popa
sub
mov
ljmp
orb
mov
test
iret
mov
jmp
xorl
pop
inc
mov
mov
jmp
fidivrs
pop
sub
cld
xor
pusha
mov
inc
out
sti
iret
dec
fstps
call
mov
das
ficompl
cmp
or
icebp
mov
ja
test
jl
pop
cltd
rcrl
sti
stos
pop
in
insl
adc
shrl
cmp
fistpll
cwtl
rcl
push
or
inc
jg
jge
mov
jb
mov
pop
xchg
fwait
mov
push
xchg
insl
cmp
inc
call
test
cmp
imulb
cmp
data16
mov
cmp
push
sbb
lock
lds
insb
pop
loop
mov
jno
mov
gs
xchg
xlat
movsl
add
xchg
dec
repz
scas
ret
inc
push
dec
xchg
lret
jg
popf
pop
xchg
pop
push
pop
dec
mov
rclb
adc
loopne
or
inc
cmp
pop
rolb
mov
lds
fnsave
or
pop
xor
imul
adc
jp
mov
out
int3
imul
cmp
adc
xchg
pop
jo
int
jo
fstpl
gs
xchg
jmp
sbb
mov
int
insl
push
fcompl
daa
movsb
lods
adc
pop
pop
inc
mov
sbb
inc
int3
cmpsb
jbe
ljmp
sub
les
and
sub
mov
add
and
dec
lcall
inc
adc
mov
mov
push
aad
fsubrp
es
inc
push
aam
jne
fwait
mov
mov
sbb
mov
ljmp
mov
bound
add
gs
dec
int3
sub
cmp
sub
fnsave
lds
add
lods
iret
xchg
out
and
std
cmpsl
enter
add
mov
inc
cmp
mov
cli
sbb
mov
inc
add
cmp
orl
mov
dec
push
inc
je
xlat
mov
fidivrl
add
dec
sbb
imul
movsb
cmp
jns
cwtl
mov
push
mov
cmp
shrl
and
pop
dec
sbb
jmp
push
and
mov
in
lret
cmpsb
fbld
enter
mov
sarl
mov
lahf
fcmovbe
and
inc
gs
enter
and
arpl
mov
aaa
add
shlb
mov
xchg
push
sbb
fisubrs
cmpsl
push
mov
lock
vmaxpd
fcompl
add
mov
cmp
pop
push
insb
adc
ficompl
lcall
and
xor
cmp
jg
aam
adc
int
jno
gs
mov
fwait
cmc
mov
jne
lock
xchg
sub
ljmp
lret
sub
in
or
lds
dec
jno
ret
inc
test
or
repz
cmp
loopne
mov
xor
jl
test
lret
sbb
gs
addl
lret
jae
sbb
jp
lret
icebp
fisubrs
cmp
out
loope
and
ret
movsl
sbb
fidivs
popa
lea
in
imul
jmp
or
movsb
xchg
lds
cmp
lahf
inc
pop
mov
sbb
fisubrl
iret
jecxz
outsl
les
cli
cmp
popf
sub
ljmp
mov
arpl
jmp
dec
jmp
xchg
jnp
sti
adc
mov
jge
mov
insl
xchg
mov
or
cmp
call
pop
add
inc
xor
js
sub
daa
xor
icebp
mov
mov
int
repnz
orl
aas
and
loop
ljmp
test
mov
xchg
push
dec
or
inc
cli
sub
jns
push
mov
imul
or
sti
enter
xchg
xchg
and
adc
aam
cmpsb
xchg
cmp
push
out
mov
rol
dec
inc
cmp
pop
xor
xor
std
sub
push
popf
cmp
mov
add
loop
movsl
xor
mov
call
dec
or
pop
push
lods
pop
or
mov
pop
stc
mov
cltd
jb
jmp
push
sahf
and
inc
inc
inc
fldcw
mov
out
dec
stos
adc
push
xchg
rcll
adc
xchg
push
dec
in
fnstcw
cmp
mov
push
scas
imul
xchg
xchg
and
sub
je
dec
jb
cld
sub
or
dec
cmp
push
in
mov
mull
inc
xor
jb
inc
ds
cmp
cmp
insl
icebp
mov
push
lret
sbb
movsb
cmp
ljmp
and
adc
outsl
jnp
fnstcw
push
jnp
add
or
mov
jno
shl
in
icebp
clc
jne
data16
fst
add
bound
nop
mov
lahf
ss
xchg
jl
insb
cmc
mov
xchg
imul
jl
mov
lcall
sbb
popf
dec
adc
xor
test
dec
jno
imull
cmpb
loopne
adc
add
xchg
nop
pop
ret
push
xchg
das
dec
add
enter
enter
insb
loopne
pop
stc
push
in
inc
nop
mov
mov
mov
add
sub
mov
lds
jo
mov
std
xchg
cltd
mov
les
or
sbb
xchg
push
mov
inc
sbb
sub
sbb
stos
cmp
ljmp
xlat
stos
inc
sub
cmpsl
fistl
outsb
mov
xchg
jl
xchg
dec
jecxz
sub
movsl
mov
cwtl
fsubrl
mov
sub
repnz
lods
in
sbb
loope
cmp
pop
dec
flds
sbb
xchg
push
cmp
insb
notl
xchg
int
fisubrl
orl
mov
jnp
dec
lods
push
jmp
frstor
xor
cs
in
mov
pop
dec
lods
dec
add
mov
jge
cmp
ret
adc
or
inc
dec
sti
das
push
insl
ret
sbb
pop
lock
xor
mov
xlat
lock
mov
xchg
pop
sbb
ljmp
xor
negl
data16
sbb
pop
loope
ds
out
es
push
xchg
icebp
cmp
mov
sub
cmp
push
adc
cmp
lods
jp
pop
pop
addb
cmc
inc
dec
aaa
fwait
vfpclasspd
pop
mov
sti
arpl
mov
mov
out
jmp
ljmp
shll
sti
inc
imulb
sbb
push
int
push
sbb
xchg
out
cmpsb
and
shll
dec
push
pusha
test
mov
xor
stc
adc
dec
pop
imul
scas
and
jl
scas
dec
stos
mov
les
stc
add
in
fstpl
pop
test
jo
stc
mov
jge
add
aaa
call
scas
repz
mov
mov
xchg
out
lea
dec
sbb
and
addr16
sar
loopne
adc
ret
dec
mov
sub
xchg
push
mov
dec
adc
es
in
adc
aas
aaa
add
loopne
cltd
rcl
adc
mov
iret
aam
popf
sti
nop
dec
std
mov
in
push
pop
sbb
fmul
push
xor
flds
jge
xor
and
or
out
cmp
and
jp
aad
dec
fsubp
enter
jmp
jp
sbb
mov
enter
arpl
sbb
stc
inc
arpl
dec
mov
mov
inc
clc
dec
incl
mov
or
ret
ficoml
outsb
mov
dec
cmpsb
inc
out
ret
xchg
sub
imul
insb
mov
adc
imulb
std
or
mov
int3
mov
cmp
sbb
xor
push
into
movsl
jl
jg
or
push
mov
xchg
adc
sub
mov
mov
aas
sahf
xchg
lods
and
cmp
stos
push
dec
in
mov
and
dec
out
sub
fsubrl
and
fdivrl
lds
mov
or
xor
mov
mov
test
cli
inc
pop
mov
sbb
scas
int
dec
icebp
aas
out
fisubl
dec
jl
add
or
jge
mov
dec
ss
test
stos
in
pop
xlat
mov
fsubl
mov
mov
leave
test
sti
pop
cmp
mov
xlat
enter
dec
mov
sti
jb
mov
mov
ss
sub
adc
stos
in
sbb
add
inc
sub
add
out
and
cs
mov
aaa
add
xchg
test
push
mov
add
push
xchg
mov
inc
pop
fisttpll
fdivl
loop
pop
mov
in
inc
shrl
imul
cmovae
sub
push
push
jge
inc
push
mov
xchg
mov
rorl
aad
ja
mov
dec
xorl
fmuls
jae
enter
or
xchg
sti
push
cmc
test
insb
into
sbb
incb
push
adc
daa
jne
and
adc
outsb
push
push
testl
and
jl
sbb
sarl
icebp
and
movsb
pop
jle
mov
sub
jb
sub
jmp
mov
sbb
test
or
jge
cmpl
clc
enter
aaa
inc
add
rcr
sbb
dec
add
fxch
xchg
ja
pusha
mov
sbb
push
loop
mov
movl
test
jns
sbb
data16
dec
or
add
ret
ljmp
movsl
std
sub
das
je
pop
fwait
in
push
inc
jne
scas
sbb
pop
mov
in
jae
out
in
xchg
je
inc
mov
xchg
xchg
inc
movsb
hlt
dec
inc
aad
data16
mov
dec
jg
mov
and
into
ja
scas
adc
sub
pushf
dec
dec
loope
push
pop
and
ret
or
add
jo
mov
add
pop
xchg
mov
in
xchg
xor
jecxz
jne
outsl
sbb
push
je
jl
std
cmp
enter
das
pop
cmp
dec
jbe
lret
mov
xor
cmp
adc
in
sbb
sbb
sub
loopne
mov
xchg
sbb
sbb
mov
jl
add
leave
out
scas
mov
or
xchg
mov
pop
dec
repz
stc
arpl
or
cmp
js
std
xchg
add
xor
mov
leave
and
dec
mov
push
xor
dec
jno
sbb
xlat
push
jg
adc
or
push
jae
jne
jbe
sub
pop
outsb
cmp
xor
or
mov
rol
adc
cmp
mov
mov
fs
or
push
into
mov
or
xor
add
testl
pop
jmp
fidivrs
pop
int
and
push
lods
or
inc
imul
in
fxch
andl
pop
push
dec
repz
and
iret
add
fidivrl
mov
inc
mov
mov
jnp
mov
daa
and
out
shll
fs
sahf
cmpb
mov
jecxz
cmp
mull
or
xchg
out
jmp
cmp
inc
repz
arpl
xor
jb
or
pop
in
sbb
pushf
mov
jg
mov
outsl
dec
mov
test
into
mov
sbb
sub
push
xchg
push
aas
dec
sub
mov
and
ficomps
inc
xor
aad
mov
insl
int
lret
movl
or
jb
shll
mov
sub
ds
jbe
insb
fscale
clc
lret
sbb
daa
mov
dec
jns
sbb
fldenv
mov
sub
icebp
jne
adc
iret
popa
mov
mov
jns
or
addb
dec
cmp
stos
jmp
cmp
cmp
or
sbb
xchg
pop
int
addl
sti
popf
imul
loopne
clc
inc
push
adc
aad
cld
pusha
out
mov
sub
mov
sbb
jbe
adc
pop
ljmp
fstpl
jae
inc
fwait
jl
sbbb
call
lock
rcrb
aad
imul
and
addr16
fildl
push
push
push
mov
fldenv
cwtl
mov
into
mov
and
inc
sub
or
sub
cld
inc
gs
adc
inc
and
sbb
les
push
dec
sbb
and
pop
inc
or
cmp
imul
test
sti
cltd
cs
rorl
cmpsb
ljmp
pop
insl
mov
add
push
mov
sbb
popa
insl
js
mov
pop
lds
sbb
icebp
pop
das
pop
inc
push
cmpb
cmpsb
addr16
stos
push
add
and
push
scas
push
mov
in
icebp
stc
mov
lods
push
push
push
loop
or
xchg
pop
cmpb
ficompl
outsb
pop
and
je
mov
inc
lcall
aaa
xlat
in
or
mov
ficomps
mov
sti
fidivrl
js
movsb
sbb
sbb
mov
mov
andl
sti
sub
lods
inc
mov
inc
inc
jbe
mov
out
mov
mov
out
push
mov
out
rcll
outsl
lret
lcall
jno
pop
arpl
or
inc
xor
aaa
adc
cs
xchg
pop
pop
mov
push
adc
sbb
push
jae
pusha
popf
push
ret
cmpsl
lcall
pop
fsubrl
decb
cmp
ja
mov
inc
push
fs
dec
push
je
scas
iret
cmpsl
push
repnz
stos
mov
lahf
mov
xor
test
cmp
sbb
cmp
mov
jp
or
xor
shrb
cmpsl
fcmovnb
xchg
push
mov
mov
lds
push
lcall
jp
mov
lock
into
popf
hlt
aas
loop
loope
push
imul
pusha
lods
sti
cs
dec
pop
lock
sub
jb
add
pop
xchg
and
pop
pop
sbb
pop
fcomps
pop
hlt
fwait
js
ja
cmp
cmc
test
dec
jle
insb
fistpl
push
and
dec
pop
call
movsb
notl
data16
add
mov
mov
hlt
cld
push
pop
xchg
pusha
dec
lea
rcrl
inc
bound
mov
les
mov
dec
cmpsl
jnp
repnz
dec
data16
push
sti
fidivrl
imul
ljmp
arpl
popa
jns
adc
add
inc
les
out
dec
inc
jne
call
or
movsb
mov
mov
adcb
daa
aad
lret
jne
mov
sub
jg
iret
and
sub
xor
adc
notb
pop
dec
add
and
jle
jmp
in
or
into
push
sub
setl
adc
or
mov
xlat
mov
cwtl
sub
mov
inc
jl
dec
out
xchg
mov
dec
jb
out
mov
xor
nop
les
lock
mov
test
incb
push
mov
sti
loop
xchg
pop
imull
cld
fildl
jnp
push
sub
inc
mov
icebp
push
inc
fidivrl
or
inc
imul
mov
jge
scas
into
int
xlat
adc
xor
fadd
pop
jns
testl
frstor
push
mov
sub
cmp
arpl
inc
sarb
cld
xchg
test
fisttpl
mov
xchg
enter
jnp
push
decb
cmpsb
das
bound
lods
jbe
push
or
and
and
loope
mov
sti
push
mov
fld
mov
in
fmul
outsb
ficoml
cmp
adc
ja
loopne
lret
repnz
movsl
mov
pop
or
xor
inc
jne
sub
sbb
jle
out
mov
lea
push
cwtl
fwait
push
push
fstpl
sbb
das
int3
adc
or
nop
jge
outsl
mov
sub
pop
xor
push
adc
mov
adc
jo
mov
lahf
cmc
or
xchg
rorl
jbe
push
and
mov
or
fs
xchg
in
xor
jecxz
mov
pop
mov
and
fsubrl
das
loope
pushf
lods
loop
cmp
add
iret
fwait
inc
das
jnp
pushf
jp
sub
or
pusha
sti
aam
inc
lds
daa
pop
cmp
popfw
jne
out
fldln2
and
shlb
dec
mov
dec
mov
mov
imul
lret
add
sbb
inc
icebp
subl
pop
sarb
sar
test
push
xchg
sub
lahf
push
sbb
adc
decb
testb
call
push
sbb
fisttps
fmul
std
or
stos
sub
sbb
aad
dec
stos
pop
xor
fwait
push
outsl
jge
lcall
cmp
sbbb
shl
mov
cltd
ficomps
mov
push
aam
add
out
mov
jge
dec
in
jo
jecxz
test
jmp
out
and
std
mov
test
and
popa
xor
cwtl
shll
imul
xor
mov
jno
cmpsl
sub
mov
enter
ja
or
pop
lds
xchg
clc
xlat
and
les
cmpl
or
sbbl
imul
jmp
fildll
test
cs
mov
inc
lret
or
insb
and
cmp
xchg
cmp
filds
jg
or
mov
or
push
mov
pop
push
pop
xor
fxtract
lods
push
adc
mov
sahf
repnz
cwtl
gs
pop
and
es
out
js
ja
adc
jle
insl
imul
popf
mov
xchg
dec
roll
mov
sbb
inc
sbb
sub
callw
lods
push
movsl
stos
fucom
push
jae
fiadds
jbe
lret
xor
ja
ljmp
fidivs
inc
jno
pop
rclb
jle
mov
jle
xchg
jno
pop
adc
in
rorl
jns
mov
push
push
adc
xchg
mov
jge
cld
fwait
mov
cli
jne
mov
sahf
adc
push
pop
pushf
jno
sti
cmp
add
adc
mov
dec
xchg
movsb
imul
out
or
push
scas
and
cmpsb
icebp
mull
pop
sub
jle
dec
insb
and
lods
mov
mov
add
xor
pop
inc
fisttpll
popa
bound
push
test
int
sti
mov
ds
aam
rorl
xchg
sub
mov
fxch
mov
les
sub
xchg
gs
xchg
mov
unpckhps
cmp
or
dec
call
call
mov
pop
jbe
orl
xchg
inc
in
cmc
gs
xor
cld
popa
sub
or
add
xchg
mov
pop
dec
xlat
or
outsl
test
add
dec
test
data16
bound
rclb
idivl
scas
lods
test
repnz
sub
stos
testl
sub
leave
jmp
push
mov
push
sbb
jle
sti
sub
cmpsl
daa
fidivs
pop
iret
xchg
rcrb
xchg
test
and
daa
pop
test
es
pop
aaa
add
popw
fdiv
push
adc
shrl
repz
push
sub
lods
mov
adc
imul
sbb
mov
icebp
pop
cltd
or
add
in
jp
pop
cmpsl
mov
aad
into
inc
xchg
mov
jmp
jo
enter
dec
xor
sahf
and
stc
in
ret
adc
xor
pop
push
jns
jo
outsl
xchg
inc
ljmp
movsb
std
dec
inc
mov
adc
jmp
dec
andl
add
push
xor
pop
cli
lahf
mov
push
pop
dec
and
fstpl
dec
xchg
and
sub
sbb
dec
outsl
xlat
sarb
xor
fimuls
xchg
ret
and
mov
jns
cmpsb
sub
repz
inc
cmpsl
insb
adc
fincstp
sti
enter
inc
fmuls
xor
sbb
add
fdivrl
lock
dec
or
in
mov
jno
gs
cmp
call
adc
rcrb
adc
inc
push
testl
into
js
sub
jmp
or
divb
and
cmp
pop
push
and
jo
insl
dec
push
incb
cmc
repnz
inc
popa
mov
pop
or
fs
xor
cmpsb
cmp
das
addl
ds
or
add
cli
xor
add
add
je
in
cmp
jp
lods
jo
dec
or
and
push
out
subl
xor
inc
dec
cli
mov
cmpsb
mov
pop
inc
nop
incb
fnstcw
xchg
cmp
push
daa
js
mov
xchg
mov
mov
mov
out
jb
outsl
jecxz
or
in
or
popf
lods
sub
push
in
ss
mov
mov
xlat
adc
sub
out
pop
out
das
cmpsb
nop
cmp
fs
xchg
sbbb
pop
xor
in
cli
aam
in
adcb
jne
dec
mov
insl
inc
jg
jg
pop
scas
push
jge
repz
ja
cmc
mov
cli
xchg
ljmp
mov
cmp
xor
movsl
push
or
adc
dec
lea
xchg
jge
mov
xor
cmc
sti
mov
test
cmpsl
ss
lea
mov
mov
mov
ss
inc
push
push
jl
dec
mov
jbe
out
out
insb
aas
mov
shlb
adcl
add
out
cmp
filds
xor
sub
scas
inc
cwtl
mov
and
xchg
fucompp
lods
shll
insb
out
pop
lods
mov
push
add
outsb
sbb
test
cmp
pop
std
fdivs
cmp
lret
cli
addl
dec
mov
enter
mov
dec
inc
pop
or
xor
mov
loop
inc
out
adc
in
xor
movsb
arpl
into
cltd
loopne
xchg
and
or
xchg
jge
xor
jo
add
mov
jg
sub
stos
imul
adc
sbb
fwait
and
shll
push
dec
hlt
xor
jle
cmpsb
bound
mov
jbe
or
xchg
pop
test
push
inc
xor
mov
in
or
dec
sub
sarb
seta
loope
int3
daa
pop
push
mov
mov
stc
aaa
in
fcmove
out
sbb
outsb
hlt
inc
sbb
div
mov
mov
inc
subb
xor
and
sub
sub
sbb
xor
or
call
lock
xchg
fnstcw
add
pop
iret
enter
test
push
push
lea
cmpsl
inc
push
push
fldt
loop
negb
pop
mov
xchg
dec
in
scas
dec
sahf
in
xlat
mov
clc
stos
xor
jb
mov
or
cmp
cwtl
fldt
jne
fcmovnbe
in
dec
movsl
test
push
fwait
jecxz
push
mov
fptan
push
cli
popa
inc
push
pusha
xlat
adcl
fldcw
add
rcrb
aad
shlb
aad
mov
adc
cmp
cltd
mov
add
mov
movsl
lds
insb
bound
cmp
outsb
enter
scas
mov
adc
add
jp
loopne
pop
mov
bound
hlt
out
dec
xor
mov
mov
xor
xor
imul
sbb
sbbb
mov
sub
or
ds
mov
mov
imul
xchg
or
inc
cwtl
mov
sub
jl
aad
les
sbb
xchg
loop
and
mov
outsb
cmp
call
or
add
jl
movsl
jno
and
hlt
or
hlt
mov
js
sub
outsl
and
insl
cmp
jo
fisttpll
sbb
adcl
and
inc
cltd
inc
add
je
or
lods
aam
xor
out
lods
pop
imulb
push
cmp
jg
aaa
arpl
fmul
cmp
sti
or
les
xchg
or
test
scas
pop
xchg
jae
das
mov
push
rorl
pop
int
jnp
ljmp
sbb
xor
sbb
push
xchg
lcall
int
cltd
into
faddl
pop
add
popa
inc
pop
std
pop
enter
add
xchg
daa
scas
inc
inc
scas
icebp
imul
sbb
fstl
push
pop
sbb
dec
dec
fs
mov
fistpll
xchg
sahf
and
cmp
mov
xchg
jl
gs
hlt
lcall
cltd
adc
jl
out
xchg
mov
test
dec
mov
loopne
decb
inc
push
std
imul
push
out
cld
fdivl
movsl
adc
mov
sti
lods
cmp
jns
jecxz
dec
jp
sub
jne
aad
inc
aaa
insl
and
in
popf
and
clc
aad
lods
or
frstor
into
movsl
push
loop
xor
mov
cmpsb
mov
jl
mov
lahf
dec
push
test
push
cs
jle
in
or
mov
dec
cmpsb
and
data16
dec
adc
inc
xor
adcb
cmp
xchg
insb
dec
dec
mov
inc
fisubs
xchg
xchg
mov
push
clc
pushf
xchg
int3
lods
scas
cltd
adc
rcrl
enter
jp
call
jmp
testl
xor
mov
dec
jo
idiv
jb
lahf
test
dec
sub
sub
push
arpl
and
out
jle
pop
cmp
mov
or
cs
imul
push
inc
xlat
out
inc
fcmovnbe
mov
jbe
jmp
sub
xchg
in
cld
xor
push
inc
jnp
pop
cwtl
mov
xchg
outsl
pop
sub
js
sbb
jle
leave
clc
mov
fcmovbe
xchg
jg
ss
cwtl
pushl
lret
out
std
outsb
or
shlb
std
roll
dec
jle
outsb
loop
hlt
mov
mov
xchg
xchg
cmp
or
fsubp
or
shr
push
popa
jo
icebp
js
dec
rorb
cs
stc
hlt
arpl
ficoms
xor
mov
mov
pop
xlat
adc
sbb
jne
rcl
fbld
stos
fcmovne
aaa
push
sbb
and
push
insl
xor
mov
xchg
mov
add
xor
cmp
mov
sub
in
jno
jae
xor
mov
or
inc
daa
sub
xchg
jns
xchg
int
mov
xor
add
sub
jne
mov
sbb
xchg
movsl
xchg
dec
shl
fidivl
shrb
cmp
jg
cltd
dec
push
bndldx
jae
or
jno
jbe
mov
popf
sbbb
cli
or
les
xchg
nop
outsb
or
inc
jae
pop
mov
outsb
or
sbb
int
pop
add
sti
leave
mov
sar
push
mov
jg
pop
fwait
pmaxub
std
repz
mov
enter
fcomip
std
xor
nop
lahf
adc
repnz
fsubrp
pop
je
add
cmpsb
push
adc
push
lret
int3
movsb
shlb
pop
mov
lds
xlat
mov
xchg
orb
xorb
and
inc
pop
mov
movsb
insb
bound
inc
inc
mov
cmpsl
lret
cwtl
pop
int3
mov
cmp
cmp
enter
or
aaa
lahf
icebp
mov
jnp
les
xchg
fwait
and
dec
cmp
inc
pop
mov
mov
lret
out
mov
jo
jb
mov
scas
pop
icebp
jmp
cmp
clc
adc
ds
xor
inc
sub
push
je
rcr
mov
ja
lahf
out
jne
inc
clc
inc
cmpsl
and
xor
push
aam
add
dec
nop
adc
aas
ljmp
inc
scas
pushf
xor
inc
ss
mov
faddl
out
loopne
push
frstor
jl
cmpsb
jae
inc
sbb
jecxz
mov
fidivrs
dec
inc
in
je
jae
lret
jno
add
test
or
dec
insl
call
push
stos
pushf
sti
dec
fdivrp
or
lods
nop
jecxz
divl
leave
stc
loopne
sbb
cmpsb
test
mov
fstpt
jge
lret
xchg
xchg
cmc
and
sahf
mov
sti
pop
jb
pop
jp
mov
push
xchg
sub
push
push
or
imul
cwtl
dec
and
arpl
inc
mov
push
das
push
bndstx
xor
fcmovnbe
loope
lcall
js
ret
adc
mov
test
test
out
repnz
sar
das
pop
arpl
dec
scas
inc
lock
mov
pop
pop
mov
and
and
sub
imul
adc
or
dec
or
gs
jl
movl
js
dec
or
in
inc
js
popf
scas
ss
lret
repz
inc
negl
loope
ret
cs
rorl
push
js
insl
insl
mov
push
cmp
or
push
jb
inc
pop
mov
fcompp
jnp
push
xor
and
mov
movsl
push
inc
push
pop
test
mov
mov
imulb
xlat
inc
jp
xchg
iret
sarl
xchg
in
or
hlt
inc
fisttpll
adc
xchg
movsl
adc
sar
jbe
jnp
mov
push
xor
inc
jnp
subl
test
cmpb
or
add
mov
xchg
rol
push
inc
adc
imul
dec
mov
repz
push
mov
or
mov
shrl
lahf
dec
push
sub
jns
or
jp
fildl
clc
cltd
or
sub
or
or
out
cli
int
xchg
pop
add
fdiv
popf
xchg
mov
xor
xchg
mov
or
add
pop
loope
sub
aam
jnp
mov
mov
and
pop
in
pop
sbb
leave
cmpsb
push
into
push
movsl
test
lds
push
sbb
je
test
addr16
leave
lret
push
xlat
les
and
jp
xor
hlt
sahf
scas
lock
cmp
mov
aaa
les
in
scas
xor
fwait
ja
push
push
mov
sbb
and
sbb
jns
xor
add
xor
pop
and
inc
or
lds
xchg
lods
mov
imul
leave
cmp
mov
cmpsl
or
lret
inc
add
aaa
shld
cmpsb
dec
fisttps
stc
pop
pop
mov
jae
jno
icebp
enter
adc
cmp
xchg
mov
cltd
and
fistpll
sbbl
or
jbe
divl
stos
mov
in
cmpl
orl
ret
cli
inc
cmc
jge
adc
xor
xor
push
je
arpl
or
outsb
daa
mov
out
jmp
movsl
lea
mov
inc
ret
out
adc
add
inc
dec
mov
xchg
dec
jp
adc
jmp
adc
or
gs
and
push
out
xor
cmp
hlt
jo
pushl
and
clc
mov
insl
mov
jle
dec
adc
ret
push
hlt
das
popf
pop
sbb
das
or
jmp
push
push
pxor
cmp
xchg
and
rcrl
hlt
inc
jl
jno
insb
adcb
divl
or
push
or
nop
jecxz
insb
mov
lds
lods
fdivrl
push
sub
pop
loop
fwait
aas
inc
pusha
inc
rclb
or
mov
aaa
mov
jns
mov
repnz
sbb
arpl
or
outsl
or
mov
push
dec
insb
mov
das
fs
push
jmp
scas
xchg
xor
imul
xor
lret
dec
sub
icebp
movsb
in
outsb
or
jae,pt
ret
push
aam
mov
and
stos
gs
insb
outsb
dec
mov
gs
inc
mov
iret
andb
mov
test
pop
mov
gs
push
test
sub
xchg
jns
iret
dec
rcrl
mov
jp
cli
in
testl
popf
mov
mov
add
scas
fisubl
push
mov
or
nop
cs
push
stc
test
enter
xlat
adc
sti
test
mov
arpl
sti
loop
and
rol
enter
sti
mov
out
mov
leave
fcmove
loope
stos
ja
out
xchg
add
jg
pop
arpl
xchg
notb
cmp
gs
jb
dec
out
xchg
lcall
aaa
mov
xor
clc
into
mov
push
jle
vmread
inc
push
sub
push
pop
in
lods
push
mov
inc
inc
jge
aaa
notb
dec
hlt
enter
into
push
sbb
adc
mov
and
and
stos
mov
jae
and
adc
lds
push
inc
xor
repz
xor
mov
test
scas
dec
mov
pop
je
jb
inc
ror
mov
pop
out
cmc
andl
dec
popa
adc
imul
sarb
pop
test
dec
sbb
enter
lret
sahf
adc
int
cbtw
pop
stos
jo
popf
incb
arpl
pop
mov
lret
cmp
je
aas
adc
xchg
andl
pop
mov
insb
ret
xchg
scas
or
neg
stc
bound
clc
ja
or
stos
ret
jg
imul
jge
sti
cmpsl
pop
outsl
scas
or
jmp
popa
hlt
cmpsb
sbb
inc
pop
aam
mov
addr16
imul
xchg
jno
or
sahf
repnz
fsubp
fbstp
sbb
sub
and
jo
adc
push
add
push
repnz
addl
push
jnp
dec
sbb
mov
or
cltd
ljmp
jae
int
mov
repnz
cmp
mov
out
and
jns
add
dec
sub
fdivs
shlb
mov
lock
enter
and
test
ja
movsb
cltd
cmpsl
inc
sbb
leave
jecxz
js
jo
xchg
out
stc
adc
jno
sbb
sahf
hlt
xchg
into
cmp
xor
shlb
leave
js
addr16
xchg
outsb
cmp
add
jecxz
mov
leave
in
mov
fisubs
sarl
sub
mov
pop
outsb
push
cmc
sbb
or
loope
std
notb
dec
cmp
xor
cs
test
das
inc
push
popa
sub
lahf
mov
xchg
shr
sbb
push
daa
or
cmp
cmp
cld
jo
filds
or
insl
jns
xor
push
jg
ret
lret
inc
mov
int3
or
cmp
int
sub
inc
pushl
lcall
cmp
inc
sub
rcrl
dec
out
int3
inc
iret
inc
sbb
sub
je
adc
xor
and
pop
or
xor
add
pop
daa
pushf
mov
movsb
or
xor
and
loop
mov
xchg
test
jae
sbb
add
mov
add
movl
stc
loop
pop
leave
in
mov
mov
jns
pop
adc
adc
in
cmp
hlt
ds
jmp
addr16
jne
fstps
adcl
push
gs
scas
pop
push
xor
adc
xchg
jmp
dec
fdiv
xchg
sbb
xor
dec
and
movsb
add
sbb
sub
dec
cmc
dec
orb
stc
aaa
adc
sbb
fisttpll
stc
and
lahf
je
daa
sub
and
adc
and
je
fdiv
arpl
cmp
cmp
jge
int3
pop
int3
mov
scas
xor
setne
imul
jb
dec
add
loopne
jmp
push
popf
pop
and
mov
inc
loopne
sbb
xor
repnz
mov
lods
idiv
add
cltd
pop
xorb
shll
add
in
hlt
in
bnd
mov
add
shll
mov
mov
and
cli
sbb
xchg
jns
not
negl
ficompl
cmpb
fmull
cmp
ds
push
cmpsb
mov
dec
xor
adc
test
shrb
daa
fmuls
adcb
pop
pop
hlt
mov
stos
aad
jbe
cwtl
push
pop
lret
int
mov
jo
call
dec
cld
pop
je
test
shlb
sub
mov
xchg
mov
adc
or
popf
xchg
dec
sbb
in
push
adc
xchg
mov
mov
popa
dec
and
inc
adc
sub
fldl
mov
push
cmp
inc
sar
sub
jbe
mov
xchg
push
cmp
pop
jo
dec
sbb
inc
jge
shlb
mov
mov
cmpsl
fs
rcrl
shlb
lret
add
daa
leave
sahf
fdivp
fprem1
aad
push
mov
cwtl
jmp
stos
repnz
jne
cs
mov
dec
bound
ret
sub
lahf
in
ljmp
lods
cld
jo
mov
add
mov
xor
jge
adc
dec
mov
out
stos
int3
mov
push
out
outsb
xor
mov
adc
inc
pop
test
push
movsb
leave
jge
jg
scas
or
and
lds
mov
pop
je
and
adc
ljmp
rcrl
pop
xchg
xchg
ja
mov
daa
dec
stos
gs
dec
sar
aam
dec
mov
cmpsb
out
pop
std
mov
jg
rcll
int3
fsubrs
push
mov
inc
pop
mov
pop
and
dec
cltd
mov
inc
imul
mov
dec
add
jne
out
and
ja
sbb
cmp
sti
pop
lret
and
pop
into
in
adc
outsb
js
inc
xchg
pop
jno
call
mov
insl
leave
or
sbb
sbb
and
jl
cwtl
repnz
daa
add
sbb
outsl
rclb
jg
adc
push
sbb
fstpl
xor
pop
das
insl
mov
mov
leave
in
cmc
pushl
inc
aad
sub
les
adc
imull
cmp
mov
or
fstpl
or
pop
test
jecxz
cwtl
jl
inc
mov
lcall
shlb
sbbb
popl
and
repz
subb
xor
add
int
sub
inc
cwtl
mov
mov
bound
sub
mov
test
sub
inc
leave
shrl
inc
xor
not
lcall
dec
test
adc
pop
fstl
pushf
outsb
mov
and
out
xor
xchg
jae
jbe
push
sub
insl
aam
pop
mov
sbb
clc
dec
test
xchg
sbb
rorb
pop
mov
cwtl
cs
jb
dec
mov
adc
loopne
push
fsts
inc
ja
cmp
adc
bound
lock
adc
pusha
push
jo,pn
lret
repnz
ret
cmp
push
mov
inc
xor
xchg
repz
lret
addr16
xchg
mov
daa
add
sbb
sbb
pop
addr16
mov
pushf
leave
adc
lods
push
jp
mov
mov
adc
out
push
pop
ret
lret
ss
test
imul
jle
mov
mov
fbld
rorl
cs
push
or
xorb
xchg
cld
test
stos
cmp
and
mov
jno
scas
pop
int3
xor
jg
xor
shll
dec
push
xor
loope
sahf
mov
cmc
test
push
mov
popa
add
mov
jo
sub
shll
aaa
mov
sbb
stos
cmp
fs
xor
out
push
xor
nop
ficomps
das
pop
sahf
pop
push
lods
adc
jb
lret
imul
adc
test
js
pop
lods
setle
mov
loope
out
les
scas
cmp
xchg
pop
sbb
das
xlat
sbb
jg
mov
xor
into
subl
sahf
push
loopne
mov
arpl
les
jo
dec
dec
loopne
dec
dec
fwait
and
sbb
outsl
push
inc
std
lods
into
adc
subl
dec
ja
aad
mov
shrl
andb
mov
pop
or
or
movsl
sub
push
int
add
mov
sbb
jle
adc
mov
and
int3
jne
out
push
dec
mov
pop
aaa
int3
addl
icebp
pop
loopne
inc
and
push
in
dec
mov
or
cmp
mov
inc
and
adc
out
pop
arpl
aas
push
cmp
xchg
lock
cli
inc
adc
movsl
ret
arpl
add
inc
dec
cmpsl
stc
or
pop
idivb
iret
jno
enter
jge
daa
loop
scas
mov
test
inc
mov
xor
lret
pop
sub
test
inc
inc
shll
fnstenv
xchg
dec
push
iret
and
xor
jbe
lods
into
sti
lds
sbb
lahf
push
ds
jne
nop
js
lcall
jle
jbe
ja
ja
gs
fisubl
jnp
push
mov
pop
mov
stos
sub
mov
arpl
fcmovu
cmp
loope
sti
arpl
push
daa
sbb
sub
in
add
jns
jnp
scas
mull
mov
data16
inc
cltd
pushf
ss
sbb
push
popa
fwait
stc
stos
mov
repz
rol
icebp
hlt
shlb
sbb
push
repz
cmp
adc
ljmp
pop
insl
push
jbe
aas
push
ljmp
lea
sbb
dec
fldl2t
cmp
mov
xor
mov
popa
sbb
aaa
push
sub
cmp
mulb
ljmp
pop
int3
jle
mov
xor
add
insb
sbb
pop
and
sbb
movsl
cmp
ljmp
nop
pop
lcall
int3
mov
ss
add
lods
pop
or
cs
ds
xor
test
movsb
xlat
lahf
xchg
jmp
subb
add
push
popf
test
xorl
imul
ja
repnz
test
in
enter
clc
mov
mov
inc
es
aaa
sub
gs
xchg
mov
mov
es
mov
ud0
aaa
rolb
or
ds
and
test
decl
in
leave
repz
mov
cmc
pop
imul
push
call
xor
mov
jge
aad
sub
sbb
fsubs
push
call
cmpsl
fldt
mov
lea
cmp
shlb
push
fdivs
insl
movsb
jbe
mov
cmp
jne
and
jne
shrl
jg
notl
xor
add
xchg
lock
jmp
int
orl
test
fldl
jae
cmp
nop
push
mov
test
ja
xchg
jl
rorb
push
imul
jne
xor
in
insl
lods
call
mov
arpl
out
and
mov
data16
jp
dec
flds
andb
mov
pop
add
dec
jb
dec
pop
sub
jmp
jno
mov
add
inc
nop
mov
xchg
aam
sub
sbb
mov
jbe
dec
jns
mov
imul
inc
nop
cmp
das
sub
rclb
js
mov
lret
lods
pop
out
cwtl
call
and
jmp
or
lea
sub
adc
xlat
and
pushf
mov
shlb
add
cltd
cmp
adc
sbb
adc
outsl
pop
mov
sbb
call
int
lahf
out
scas
push
ljmp
enter
push
mov
mov
addr16
movb
repz
sbb
std
push
stos
aam
mov
fwait
cmp
sti
lret
or
fstp
cltd
jg
or
mov
leave
rcl
xchg
or
pop
data16
outsl
cld
xchg
mov
fstpt
xchg
add
jecxz
nop
out
dec
sti
in
fcmovnbe
setne
cmp
cmp
fidivrs
je
mov
and
xchg
sbb
mov
mov
pop
cmc
and
mov
xor
jae
rcrb
mov
and
jmp
lea
xor
testb
pusha
fwait
clc
sbb
rcrl
sub
cmp
mov
push
roll
jne
mov
fcomps
sbb
jbe
into
push
fsubrs
mov
lods
sbb
nop
mov
mov
pop
fwait
iret
repz
lea
out
sbb
sahf
xor
das
mov
mov
cmp
ljmp
sti
xor
and
shl
push
sbb
orl
ljmp
add
push
ss
mov
mov
mov
and
inc
push
lods
cmp
cmp
scas
div
xchg
icebp
int
or
cmp
cmc
jl
xchg
or
rcrl
adc
out
js
sbb
enter
lahf
sbb
mov
sarl
js
pop
or
add
add
pop
dec
out
clc
fisttpl
mov
mov
jne
mov
sub
push
mov
int3
cli
xor
in
push
rcl
loopne
push
fdivl
repz
adc
mov
sbb
jge
mov
adc
jl
add
ljmp
shll
adc
adc
sbbl
iret
cmp
xchg
andb
dec
rclb
mov
jecxz
pusha
fs
add
dec
fucomip
and
loop
int
jp
pop
orb
add
fimuls
clc
mov
push
in
fists
arpl
mov
xor
jmp
lods
jns
fstpl
scas
fistl
iret
js
mov
sub
pop
in
nop
arpl
push
add
imulb
mov
cmp
mov
data16
iret
adcb
subl
pop
cli
test
es
dec
fimuls
pop
imul
push
inc
and
sbb
pusha
idiv
fidivrl
pop
dec
cwtl
daa
lock
sbb
pop
cmp
fsubl
inc
jle
jp
stos
cmc
es
xor
not
fisttpl
loope
rorb
dec
pop
sbb
mov
stos
push
jge
mov
je
xchg
sbb
jne
sub
pop
pop
sbb
cmpsl
adc
mov
jmp
scas
jno
and
lcall
cmp
rolb
or
cmp
mov
daa
adc
push
jno
xor
outsl
xchg
sti
mov
dec
jle
test
sbb
in
loopne
xchg
clc
xor
popf
xchg
pop
filds
dec
dec
ds
test
fwait
push
dec
fcompl
xchg
mov
js
mov
jae
cmp
jbe
jl
pop
fnstsw
mov
and
push
or
push
adc
xor
sub
loopne
cs
addl
push
jne
pusha
test
rorl
das
ficompl
je
push
daa
jns
ret
cs
dec
xchg
aam
jb
in
mov
xchg
loopne
fucomip
loopne
mov
cmpsl
ss
adc
iret
mov
int3
sbb
insb
sub
sbb
in
shll
mov
ss
pop
dec
xor
pusha
jecxz
mov
xor
sub
cltd
out
xor
shrb
psrld
movsl
jb
and
mov
adc
sahf
sarl
clc
out
mov
cwtl
movl
add
fcomps
lods
stc
mov
or
insl
add
and
push
jo
xor
jnp
add
sbb
dec
push
cmpsb
jecxz
je
fwait
je
add
bound
mov
inc
adc
pushf
in
sub
xor
ret
push
idivl
lea
and
sti
js
out
xorb
sbb
outsb
call
popa
pop
pusha
mov
cmp
loop
cmpsl
imul
dec
js
inc
adc
stos
rclb
pop
fidivrs
xor
inc
jns
mov
pop
xchg
les
jmp
xor
push
std
hlt
add
push
sub
stc
bound
add
cltd
out
jg
xchg
ljmp
loope
out
je
scas
add
aam
sarl
or
or
sbbb
sti
inc
cmp
mov
xor
adc
mov
mov
sbb
and
je
in
mov
insl
inc
leave
subl
cmp
addr16
push
dec
lretw
ss
xor
xor
jbe
mov
int
mov
clc
mov
loopne
in
jecxz
sbb
fwait
rorb
mov
je
imul
mov
sbb
popf
cs
incl
xchg
jae
imul
outsl
push
popl
subl
fistpl
das
pop
into
inc
pop
fisubs
xchg
incl
lds
in
leave
pushf
ja
xchg
adc
sbb
mov
add
jns
push
dec
pop
lahf
pcmpgtd
jle
mov
insb
xchg
aam
idivb
add
insl
pop
aas
or
sub
je
pop
push
divl
test
mov
jae
loope
jl
sub
inc
cld
and
lea
adc
movsb
mov
negl
repnz
and
insb
mov
sub
cltd
enter
ror
fs
xchg
repnz
cltd
xor
negl
jp
iret
test
inc
inc
jp
jnp
nop
hlt
ja
lret
lock
iret
scas
lods
push
ret
pop
dec
and
fsubp
mov
jno
mov
and
mov
lcall
sub
push
push
mov
lea
adc
jge
inc
mov
adc
inc
adcb
in
test
pop
cmp
scas
or
cmp
inc
lock
cld
xchg
dec
dec
test
sbb
cld
mov
movsb
mov
mov
cmpb
inc
ret
and
ja
out
popa
add
jecxz
pop
test
scas
and
test
popf
int3
repz
mov
add
loop
pop
sbb
dec
outsl
fstps
xor
mov
sub
hlt
ret
clc
imul
test
nop
imul
pusha
notb
cmc
repnz
lods
mov
push
pushf
pusha
repnz
sbbb
sahf
jmp
xchg
sub
xorb
or
fidivrs
aaa
les
add
popf
jmp
lods
scas
sahf
pop
xchg
and
shl
rorb
scas
aaa
enter
jle
mov
xchg
cmc
lods
pop
in
sarl
mov
push
shll
inc
push
xchg
xchg
popa
xchg
xor
jle
and
arpl
pop
push
outsl
sbb
jbe
in
push
daa
out
xchg
push
shll
xor
clc
xchg
leave
mov
or
xor
movb
dec
lds
mov
jbe
jg
sub
push
cs
jecxz
subl
sbb
cld
jp
popa
mov
rol
mov
xchg
loop
negb
push
and
xor
scas
push
rorb
insl
imul
fistpl
mov
mov
xchg
mov
pushf
and
push
push
mov
jns
jns
push
xor
jnp
jle
fisttpl
testb
jge
enter
insl
inc
je
pop
sub
nop
inc
in
sub
lea
lea
push
mov
data16
mov
push
sub
shlb
dec
leave
pop
mov
aas
aas
mov
add
es
mov
imul
sub
jae
leave
jbe
fnstenv
int
inc
cmp
sti
jnp
jb
mov
xor
sahf
enter
add
add
imul
js
ds
push
xchg
pop
in
jae
movsl
lret
lret
mov
jb
aad
cmp
mov
mov
jl
cmp
xchg
stos
adc
outsl
jecxz
shlb
ret
dec
addl
fnstsw
mov
adc
mov
pop
adc
sbb
and
incl
ljmp
push
lock
ret
sub
xchg
addl
jl
and
std
repz
sub
dec
mov
mov
es
xchg
out
mov
xor
xchg
xchg
adc
pop
add
data16
inc
jb
test
mov
lea
ss
mov
inc
sahf
jp
mov
sub
les
jns
jns
loope
mull
lcall
mov
dec
sbb
and
outsl
mov
adc
int
xor
mov
mov
and
xlat
mov
sub
pop
cmp
or
cmp
add
pop
sar
jmp
lea
fwait
xlat
jp
jecxz
pop
aam
pop
sbb
and
inc
bound
scas
lock
stos
xor
test
mov
lods
sub
xchg
lods
mov
jp
testl
pop
out
ljmp
jns
nop
xchg
add
xor
mov
mov
jge
xor
sub
sbb
mov
insb
ret
daa
dec
cmpsl
or
xchg
sti
xchg
ljmp
in
push
sub
cmp
pop
shlb
mov
cmc
je
jge
inc
clc
out
jno
scas
lea
add
fldt
daa
rcrl
lcall
pop
sub
and
aas
mov
dec
adc
adcl
iret
cwtl
nop
insb
xor
mov
pop
push
lea
push
sub
dec
jg
cmp
leave
mov
addr16
lods
pop
pop
mov
mov
jo
fdiv
push
mov
mov
sbb
mov
add
xchg
and
add
pop
out
adc
xor
ret
inc
iret
insb
call
sub
mov
dec
das
loope
adc
pusha
add
pushf
sbb
movsb
dec
mov
and
loope
xor
and
jnp
push
push
mov
sbb
cld
std
pop
sbbl
jne
cmc
add
mov
xorb
hlt
jp
adc
sbb
mov
in
mov
xor
sub
clc
pusha
mov
lcall
sbb
sub
adc
push
orb
and
lods
mov
adc
lods
icebp
pop
mov
lods
fistpll
xchg
and
mov
xchg
lret
in
scas
rol
pop
cmpsl
add
data16
aaa
addr16
mov
add
es
pushf
cmp
popa
jmp
in
mov
cmp
xor
jecxz
scas
or
mov
push
dec
dec
xor
scas
mul
and
arpl
add
pop
pop
repz
push
mov
dec
xor
rcll
xchg
mov
scas
jne
mov
mov
pusha
ret
jg
aad
jp
push
push
fsubl
sahf
mov
out
aam
ljmp
loope
pop
mov
mov
adc
xchg
add
cli
movb
lret
cmpsl
mov
insb
lods
sti
in
fstl
inc
jne
mov
lds
xor
jmp
jp
dec
cmp
jne
pop
dec
lret
cmp
sub
sub
aaa
les
fstps
push
repz
imul
mov
roll
sub
scas
xor
test
and
bound
jecxz
push
inc
dec
data16
aam
xchg
dec
pop
cld
insl
inc
aam
push
outsb
push
aas
dec
cmp
cmp
out
ja
or
mov
or
dec
movsl
or
cmp
repz
mov
or
lea
jnp
not
out
mov
xor
mov
jle
jns
imul
push
aaa
inc
cmpsb
iret
fucomip
jp
into
lret
xorl
or
jmp
movsl
mov
xchg
pop
or
push
add
cs
movsl
jmp
xchg
sbb
sbb
mov
lods
nop
xchg
jb
loope
cmp
add
inc
jne
cltd
jns
mov
stos
sub
adc
iret
faddp
pusha
decl
add
fisttpll
cmp
insb
lock
jmp
inc
movsb
insl
in
in
gs
add
pop
popf
mov
add
mov
cmp
in
xchg
lea
outsl
push
dec
stc
mov
jns
mov
and
xchg
nop
sub
lcall
scas
addr16
mov
or
bound
test
xor
orl
orb
xchg
dec
lock
mov
addr16
mov
xchg
sub
inc
gs
aaa
xchg
mov
lret
or
cs
test
fildll
arpl
sub
dec
in
push
ja
inc
xchg
out
xor
jae
mov
jp
mov
mov
cmc
sub
cmp
iret
orl
pop
lret
cs
cmp
insb
in
les
stc
stc
pop
es
mov
pusha
rolb
adc
jmp
ljmp
in
sahf
flds
repz
inc
jne
pop
cmp
repnz
pop
enter
jecxz
icebp
test
xchg
pop
fldl
out
mov
cmp
testb
dec
cltd
inc
and
lds
push
sbb
pop
cld
rcrl
cli
cwtl
inc
sub
mov
xor
rolb
jae
fs
pusha
adc
or
sub
xchg
xchg
hlt
cmp
in
mov
mov
mov
xlat
in
test
scas
mov
das
jbe
ljmp
popf
sbb
adc
mov
mov
scas
xchg
movsb
jl
pusha
aad
inc
jne
sbb
data16
jg
stc
lods
pop
lods
mov
clc
jmp
dec
dec
je
push
roll
jbe
insl
lods
pop
stos
cmc
sub
mov
mov
cmp
xor
lret
jbe
lock
mov
sbb
pop
sbb
inc
push
rcrb
or
xchg
or
sar
int3
into
xchg
jae
xchg
or
jecxz
or
xchg
mov
push
in
aam
sub
sbb
arpl
movsb
int3
add
out
jne
lds
dec
mov
push
jb
ja
cs
lea
rcrl
sub
hlt
cmp
push
mov
lock
inc
xchg
xor
and
inc
int3
mov
aam
fwait
adcb
sub
adc
jns
cmc
arpl
push
mov
add
sbbl
into
push
lahf
push
xor
pop
cmp
mov
mov
or
out
jle
push
jnp
imul
cs
pop
sub
xor
mov
aaa
jbe
mov
out
es
das
or
dec
movsb
lahf
pop
xchg
sub
sbb
adcl
es
xor
xor
idiv
mov
test
jle
shlb
mov
ret
loop
pop
pushl
scas
int
aam
imul
es
lods
sbb
insb
push
sbb
fsubs
pop
adc
dec
adc
pop
stos
in
xorl
cmp
bound
mov
in
hlt
mov
call
out
xchg
push
pop
push
ljmp
cmp
rcll
xor
push
out
lods
lahf
lods
xchg
addl
arpl
cmp
out
cmp
in
pop
gs
lcall
push
add
and
jb
jnp
sbb
sahf
xor
xor
lock
mov
jge
imul
stos
mov
jbe
stos
cld
mov
pusha
subl
adc
lahf
movsb
push
std
xchg
das
sub
sbb
jne
adc
xlat
jb
fisttps
or
shrb
xor
rcrl
or
enter
pushf
ja
jae
ds
xchg
xchg
cmp
mov
mov
gs
in
repz
adc
cmpsl
and
jmp
jp
pushf
fcomps
xor
add
in
fildl
mov
push
hlt
jns
fwait
negl
dec
push
outsl
xchg
or
cld
jecxz
add
push
xor
out
sub
cmp
inc
adc
or
add
xchg
sub
adc
push
and
xchg
nop
jge
mov
add
fbld
jne
test
fs
xor
xchg
in
xor
cli
jnp
outsb
push
push
or
inc
roll
out
mov
das
nop
call
jmp
or
in
ret
mov
and
xor
fnsave
mov
pop
out
out
mov
in
mov
push
scas
adc
cmp
adc
push
cs
cs
jmp
inc
data16
enter
mov
sbb
icebp
xchg
add
xchg
ds
aam
clc
fnsave
out
inc
xchg
and
inc
cwtl
ljmp
ret
shll
movsl
test
jmp
cmp
mov
ret
cld
xor
cwtl
xchg
xchg
dec
cmc
cwtl
pop
pslld
in
or
dec
push
xchg
mov
and
push
push
cmp
mov
pop
xor
outsb
mov
pop
cwtl
sub
popa
stc
cld
dec
ljmp
fcompl
pop
lcall
les
in
xchg
pop
sbb
std
rorb
and
mov
dec
xchg
les
fistpl
mov
dec
or
insl
lock
xor
sub
pop
cmp
mov
mov
mov
test
div
fs
and
mov
adc
insl
imul
fwait
shrb
pop
adc
out
lret
pop
imulb
bound
mov
ret
repz
pop
aaa
inc
and
loopne
rcrb
stc
sbbl
dec
outsb
mov
ds
xor
fimuls
aaa
inc
jmp
shl
je
les
push
lahf
dec
ljmp
xor
mov
sbb
push
shlb
xchg
icebp
in
lahf
mov
lcall
pop
je
xor
add
ss
bnd
and
or
cwtl
add
mov
mov
lcall
and
ds
adc
fnop
sub
das
out
or
lds
sahf
jbe
add
xor
aaa
xor
add
dec
ret
or
dec
push
xchg
lcall
insb
adc
das
adc
sbb
xor
inc
sbb
in
xor
fiadds
enter
mov
lret
rclb
xchg
mov
popf
pop
or
mov
adc
testb
push
lret
in
fbld
jmp
push
jl
xor
nop
adc
cmpsb
fwait
add
xlat
stc
scas
test
push
or
mov
sbb
jg
sbb
rcrb
mov
ljmp
add
fadds
sub
add
mov
pop
in
insl
popa
mov
sbb
mov
and
in
xchg
mov
sub
mov
xchg
adc
sbb
jp
aas
lds
pop
dec
mov
ljmp
ds
jne
sbb
xor
or
xor
idivb
leave
shll
xchg
aas
mov
enter
aas
pop
mov
and
push
sub
mov
int
movsl
add
or
jmp
sub
pop
movsb
and
mov
shrb
inc
out
lods
and
jg
popa
stc
in
pusha
sbb
mov
xchg
test
pop
data16
xchg
lret
scas
mov
push
scas
cmp
mov
push
imul
cli
aad
out
mov
or
lods
xor
divl
aaa
nop
mov
pop
inc
fdivrl
mov
out
shl
out
leave
lret
mov
pop
mov
xchg
aam
mov
iret
aad
nop
sub
jno
jle
es
add
scas
xor
mov
scas
pop
int
sub
dec
pop
scas
fiadds
cmp
iret
movsl
xor
enter
push
inc
add
test
xchg
inc
js
jp
and
movsl
mov
sti
inc
ljmp
sbb
dec
pop
mov
std
pushw
sub
aad
popf
loop
dec
stos
push
outsb
sub
in
xchg
sub
pop
test
xchg
jae
ret
xor
push
xor
popf
xchg
es
test
or
mov
fidivrs
or
std
ret
js
push
push
inc
cmp
mov
into
pop
js
or
loopne
test
mov
xchg
std
push
ret
xchg
pop
inc
xchg
les
lods
fs
add
mov
leave
lds
push
push
test
fisubs
test
adc
push
mov
cli
and
push
stos
stos
test
cmp
in
popa
lods
test
xor
push
je
in
shll
or
add
fcmovu
lods
ja
inc
cmp
pop
push
lahf
fistpll
bnd
xor
cmp
inc
cmpsl
mov
pop
cmc
rol
lret
cmp
test
in
sub
not
dec
pushf
pop
popa
xchg
pop
jno
mov
push
in
loopne
jnp
jle
mov
add
orl
nop
xchg
movsb
xor
pop
das
pop
adcb
repz
jo
dec
fimull
push
jge
scas
xchg
inc
or
pop
jae
jnp
test
sbb
cmpl
frstor
inc
insb
cmp
jae
push
inc
mov
cmp
mov
fnstsw
scas
xchg
enter
cmp
lods
std
and
cmc
mov
movsb
test
hlt
mov
mov
lods
pop
inc
fstpl
and
mov
rcrl
xor
mov
cltd
pop
loop
sbb
inc
ret
mov
cmp
outsl
sbb
cld
aam
cli
jmp
paddq
sahf
insl
xor
les
push
push
mov
push
insl
mov
xchg
xchg
js
iret
out
jnp
data16
leave
outsl
ret
cmp
movl
push
xor
cltd
popf
dec
mov
or
outsl
mov
push
add
mov
ret
xchg
inc
arpl
mov
cmp
leave
lret
loop
adc
into
pop
cmp
or
imul
xchg
mov
vlddqu
inc
movsb
aas
in
inc
or
sbb
push
jbe
sub
leave
mov
lret
sub
cmp
ss
xchg
pop
mov
mov
and
xchg
movsb
pop
hlt
popf
xchg
dec
push
movb
cmp
je
insb
mov
mov
sub
cld
xor
jp
cmp
aaa
aad
pop
test
test
xlat
jae
push
or
cli
push
aad
push
mov
adc
xor
xchg
mov
jo
fcmovu
inc
repnz
out
sbb
pop
out
cltd
cmp
mov
mov
pop
andb
sub
mov
sbbl
xor
mov
sub
fdiv
adc
fs
and
lcall
inc
adc
test
mov
inc
roll
popf
add
lcall
clc
insb
or
mov
pop
jo
fmull
jge
mov
pop
popf
adc
lds
jmp
lock
je
push
push
mov
ds
mov
mov
popf
push
call
fisubrs
and
dec
push
fidivl
dec
stc
int3
loope
popf
sar
mov
mov
shll
in
xchg
cmp
dec
jno
jb
pop
push
add
fdivrl
adc
sbb
pushf
push
lods
jbe
and
imul
adc
stos
jle
cmp
shlb
sahf
rorb
xor
in
cmp
and
adc
xor
lods
pusha
into
inc
shll
pushf
out
movsb
faddl
imul
aaa
inc
pop
je
xor
scas
test
adc
andb
cs
sub
mov
jge
movsl
pop
sub
js
push
or
cmp
sbb
rorl
cmc
mov
ds
repnz
pop
into
jb
push
dec
cwtl
int
jb
loope
xor
or
add
or
shlb
outsl
dec
scas
sbb
or
adc
adc
addb
jg
cmp
push
rorb
repz
cmpb
lock
popa
push
add
and
pop
mov
dec
inc
or
iret
loopne
cltd
idivl
ljmp
mov
iret
out
add
mov
and
push
sbb
jmp
lret
xchg
jbe
jmp
arpl
pop
xor
or
inc
aam
xchg
mov
idivb
dec
xor
xchg
sbb
loope
daa
and
xchg
fsubs
push
ds
div
stc
xor
xchg
dec
popa
xchg
ret
jg
mov
rcrb
add
adc
nop
fbld
sbb
je
sub
mov
xor
cmp
out
sbb
into
xchg
and
pop
fiaddl
push
cmpl
adc
adc
mov
push
insb
test
jecxz
jecxz
in
outsb
mov
das
scas
xchg
subl
push
add
push
cs
mov
nop
inc
rolb
xor
xlat
xor
push
adc
xchg
cmp
mul
out
mov
add
add
outsl
push
cmp
cmc
and
ror
jbe
mov
sub
sbb
mov
push
and
mov
mov
lcall
pop
rcr
fistl
adc
mov
inc
and
mov
scas
or
decb
jecxz
fdivrl
fsubrl
sub
stos
dec
outsl
inc
sbb
push
cmc
xchg
xlat
testl
mul
in
das
jmp
mul
jne
stos
loope
scas
cmp
adc
addl
xor
or
jnp
cld
shl
mov
jecxz
add
cli
shr
sub
movsb
lcall
out
dec
dec
test
jmp
out
pop
add
add
daa
idivb
sub
rorl
jg
iret
in
shrd
aaa
inc
shrl
xor
jmp
shl
inc
cmc
aad
sbb
in
aam
jae
outsb
repz
sbb
aaa
mov
mov
lea
sarb
insl
xchg
cmpsb
jns
dec
outsb
adc
popf
jns
fisttpl
add
jl
enter
lea
adc
sbb
rcll
lcall
nop
or
lea
ret
jns
xor
dec
add
orb
jns
or
add
fstpl
ljmp
mov
mov
ljmp
push
mov
adc
cmpsb
inc
hlt
ret
enter
imul
jecxz
jns
jl
loop
hlt
lods
push
stos
fcoml
sbb
adc
sarl
pop
pop
dec
mov
fdivr
int
xor
ss
test
js
cltd
push
fptan
incl
or
xor
sub
adc
pop
sub
xor
xor
neg
enter
push
sar
xor
jp
cmp
mov
js
pop
cmp
xchg
xor
push
add
push
fdivrp
dec
mov
inc
leave
fcompl
mov
in
iret
push
adc
and
sbb
jg
xor
add
loopne
insl
aas
cmp
xchg
or
jmp
out
push
popf
sti
movsl
or
repz
aaa
sbb
repnz
mov
xchg
int
pop
adc
pop
dec
mov
cld
and
ja
mov
mov
dec
sti
or
pushl
daa
jb
mov
sbb
dec
add
cld
pop
stc
ret
push
mov
test
jp
outsb
adc
push
movsb
js
jecxz
push
mov
cs
push
dec
adc
mov
cmp
xchg
inc
pop
xchg
inc
cmp
pop
sbb
push
sbb
jbe
adc
fidivrl
movsb
jl
add
mov
in
dec
sarl
mov
add
jecxz
adc
add
cmp
and
lret
or
mov
xchg
xchg
movsb
push
sub
fstps
rcrl
mov
shlb
inc
jmp
cli
xchg
fwait
xor
push
xchg
orb
movsl
movl
inc
push
hlt
cmpsb
lods
sarl
das
push
lret
adc
inc
lret
jne
cmpsb
add
mov
add
jns
into
and
jge
fstl
fnstsw
mov
adc
adc
movsb
jg
add
es
cmpsb
mov
jle
jl
cli
repnz
mov
cltd
stos
inc
jp
pop
mov
sub
fstps
addl
jg
lds
xor
icebp
hlt
sbb
push
repz
adc
jnp
jnp
inc
inc
ror
out
pop
inc
and
pop
add
dec
pop
sbb
fdivrl
pop
clc
mov
and
jp
adc
enter
push
sbb
jg
cmp
jae,pt
jo
ret
loope
add
push
cmc
jmp
dec
nopl
sahf
out
jg
and
sub
data16
cmpsb
je
stos
fsts
inc
push
imul
roll
lcall
dec
jae
repnz
xor
mov
adc
xchg
pop
mov
lds
pop
enter
mov
push
mov
xchg
mov
mov
adc
insl
pop
dec
cld
dec
jecxz
jl
adc
cwtl
imul
inc
cltd
fldcw
dec
cmpsb
inc
cmpsb
push
inc
js
dec
faddl
imul
sub
es
aaa
jno
lods
dec
frstor
pop
xchg
repnz
in
xor
stos
xlat
jl
push
jp
pop
cli
sub
push
fsubr
sub
sbb
mov
add
adc
movsl
inc
mov
aaa
stc
pop
dec
loopne
mov
lods
mov
int
ljmp
int3
enter
into
xchg
std
push
or
fiadds
sarb
and
xor
push
in
loopne
ss
xor
dec
cmpl
addr16
push
push
leave
xorb
mov
inc
adc
mov
ror
outsb
pop
testl
sbb
daa
fnsave
mov
add
icebp
sbb
push
aam
filds
outsl
imul
in
and
js
cmp
arpl
adc
lods
nop
mov
lret
sbb
sbb
std
cltd
hlt
cmp
cmpsl
rcrb
loope
lea
out
in
cs
jmp
insl
les
arpl
jge
xchg
repnz
loope
out
or
fimull
fisttps
cmp
popf
inc
loop
stos
outsl
sbb
and
dec
dec
push
movsb
inc
inc
adc
mov
stos
xorps
push
inc
cld
leave
push
push
pop
loopne
std
cwtl
pop
repnz
mov
mov
pop
orb
aad
adc
cmp
or
iret
nop
dec
dec
mov
jge
out
push
xlat
jne
mov
mov
mov
andb
sti
adcb
movsb
daa
add
dec
mov
in
shrb
in
cmpsb
xor
sti
mov
mov
and
je
jecxz
shrl
xor
mov
add
dec
je
inc
stc
nop
push
test
push
es
movsl
inc
dec
std
xchg
lea
lods
push
pop
add
in
aas
andb
mov
dec
stc
jo
jnp
inc
jge
mov
aad
adcb
faddl
out
daa
lahf
int
fsubl
jb
loope
xor
inc
scas
adcl
xchg
mov
fdivrs
js
adc
scas
push
aad
cli
clc
out
js
jbe
jae
cld
mov
pushf
cwtl
je
cwtl
xor
cmpsl
or
rcrl
ljmp
push
add
fmul
adc
insb
sahf
jb
lahf
pop
mov
jge
dec
es
cld
or
into
jno
xchg
pop
adc
sub
mov
dec
mov
push
outsl
push
jmp
add
push
outsb
jbe
push
add
fadds
icebp
cld
stos
mov
in
mov
js
das
int3
pusha
pop
pushf
mov
jecxz
cmp
pushf
push
inc
jp
lcall
lock
cmp
leave
loopne
mov
inc
jmp
mov
or
mov
push
pop
push
enter
lock
or
adc
mov
sbb
sub
outsb
in
adc
mov
out
fldt
loopne
pavgb
insl
in
add
pop
cwtl
or
imulb
push
mov
test
pop
arpl
aas
jp
xchg
aad
fwait
fs
lock
lods
cwtl
test
dec
push
push
and
popf
jecxz
movsb
sub
sub
adc
fbstp
sub
fs
jl
test
cmp
push
das
xor
out
sub
mov
ret
sub
clc
out
dec
or
adc
cli
orl
lcall
jp
cmp
fbld
sub
hlt
pop
cli
fists
sub
out
mov
cmp
inc
mov
orps
mov
fcomps
push
and
pop
mov
cmp
jns
in
jae
loope
jecxz
xchg
stos
inc
dec
lock
jmp
jp
outsl
jle
std
ret
and
dec
xchg
push
cli
repz
push
xchg
push
movb
lret
into
cmpsb
daa
vpmullw
xchg
xlat
mov
notb
movsb
test
cli
addr16
push
in
sub
push
cmp
mov
rcrl
mov
mov
push
fdivs
and
inc
jp
movsb
cmp
mov
push
jo
shl
add
xchg
sub
mov
scas
or
jo
movzbl
inc
pop
sbb
xchg
mov
or
ficomps
mov
push
adc
cmpsl
inc
jg
add
mov
and
and
push
push
mov
xor
subb
ss
lahf
rclb
push
fnstcw
icebp
iret
cmp
ret
lea
push
mov
stos
ljmp
jmp
in
dec
test
cwtl
cmpsl
cmp
xor
dec
mov
xchg
dec
dec
lock
and
in
dec
jl
out
jne
xchg
pop
out
stos
dec
xor
shlb
sbb
mov
notl
add
rclb
das
les
movsb
sbb
repnz
rclb
out
inc
iret
cmp
mov
rorl
rclb
and
sbb
notl
scas
mov
ss
adc
ret
jl
movsl
pop
push
jmp
lret
cmp
and
push
or
mov
sbb
mov
sub
rorl
mov
repz
xor
clc
pop
xor
aad
sbb
dec
xchg
jge
xlat
push
xlat
ja
lea
out
xchg
cld
lahf
fldenv
imul
rorb
pushf
imul
jno
jns
pop
dec
das
and
leave
dec
mov
mov
adc
inc
jb
out
outsb
sbb
lea
xor
fs
gs
mov
pop
push
push
ljmp
lahf
aas
and
mov
push
and
ja
lods
pusha
mov
mov
imul
jno
loop
int3
mov
bound
sahf
xchg
int3
dec
aaa
sahf
jnp
xchg
xor
sbbl
ds
push
adc
xchg
xor
cmp
mov
cmp
imul
addl
and
mov
mov
shll
adc
cmp
dec
and
aas
jge
jne
test
aaa
js
add
stc
fstps
add
cli
mov
cs
jmp
scas
and
mov
insl
push
daa
jbe
mov
jb
pop
movsb
data16
out
mov
push
xor
fists
rolb
adc
jnp
add
jle
pushf
add
das
and
add
sub
jae
sub
jl
push
inc
inc
dec
daa
repnz
loope
mov
pushl
aam
jle
lahf
lea
sti
fsubl
aas
addb
insb
sahf
dec
push
es
push
imul
dec
stos
adc
fwait
mov
rolb
mov
sbb
and
cmp
fnsave
mov
xchg
inc
sbb
fidivl
clc
arpl
jno
int3
daa
mov
jmp
lret
pop
mov
mov
fdiv
enter
sbb
imul
iret
movl
pop
movb
pop
cwtl
mov
and
push
inc
sub
xor
push
outsb
push
push
lahf
mov
sti
sub
add
xchg
dec
push
orb
addr16
cmp
pop
dec
call
jmp
mov
add
jo
push
aas
shlb
and
pushf
xor
fst
mov
jo
ss
rcll
loope
fstpt
push
add
loope
sub
pop
shlb
jb
push
lods
popf
stc
call
lcall
xor
daa
je
out
or
pusha
dec
mov
cmp
xchg
mov
mov
add
inc
clc
sahf
into
ljmp
adc
fcomps
outsl
jecxz
xor
lret
sarl
sub
pop
add
ss
mov
pop
jl
cli
pop
imul
push
stos
xor
push
aad
sbb
jmp
gs
insl
jbe
mov
pop
adc
adc
add
repz
push
inc
cltd
out
mov
cmp
inc
sarb
stos
pop
inc
hlt
pop
aad
cld
icebp
xchg
inc
mov
fwait
daa
andl
xchg
mov
outsl
ds
push
xchg
arpl
mov
cmpsb
fcom
popa
aaa
fsubrs
xor
int
mov
mov
mov
jne
mov
add
lahf
xchg
outsb
je
mov
fisttps
popf
push
sub
into
jb
inc
movsl
ret
lock
mov
and
das
es
ret
clc
sbb
jo
mov
int
cmpsb
push
dec
call
mov
or
adc
jo
ljmp
dec
pop
pop
movsb
push
jle
fnstcw
rorb
and
fldl
test
ret
sub
sbb
movsl
and
sbb
xchg
into
loop
cmp
mov
inc
pop
cmp
fnstenv
add
jnp
mov
js
pop
test
mov
or
xor
mov
and
jmp
push
mov
mov
pop
icebp
lds
xchg
pop
mov
iret
mov
cmc
cmp
adc
jb
xlat
cs
xchg
pop
or
jmp
outsl
inc
push
scas
rol
mov
sbb
pop
sub
rolb
dec
pop
aad
movsl
adc
pop
lret
xor
mov
lahf
das
or
fmul
push
add
mov
jo
in
dec
repz
inc
popf
push
xchg
jg
rsqrtps
ss
push
push
jp
scas
aaa
fcmovnu
test
jnp
mov
adc
addr16
xchg
filds
gs
popf
mov
enter
notb
lods
stos
jno
cmp
daa
add
mov
push
insb
or
stc
cwtl
mov
pop
push
addr16
jge
mov
sbb
mov
sarb
jne
scas
outsb
or
lahf
cmp
mov
scas
out
jl
jecxz
lret
call
jb
popa
aas
or
inc
call
sarl
sti
inc
aaa
inc
xor
jns
lods
iret
into
mov
test
popf
loope
sbb
aam
aam
insl
adc
lcall
mov
and
in
pop
mov
sub
pop
push
inc
jnp
xchg
pusha
and
jns
mov
or
lds
fwait
push
xor
lods
and
mov
cmpsl
xchg
and
and
xlat
cmp
addr16
hlt
rcr
repnz
in
fstpl
add
mov
mov
cltd
adc
mov
cmpsb
jbe
mov
add
push
adc
jo
pop
sbb
sub
jo
inc
sbb
test
enter
mov
rcll
inc
pop
push
loopne
jmp
dec
jbe
mov
jecxz
cmc
lahf
cmp
dec
jo
jbe
cmp
lcall
loop
or
xchg
andl
xor
popa
push
xchg
and
ljmp
imul
push
in
pusha
ds
xor
lcall
pushf
inc
mov
dec
ror
lock
cltd
shr
in
bound
jbe
mov
aas
ficoml
add
cmp
sbb
addr16
lods
add
dec
mov
mov
pop
repz
faddl
cs
mov
pop
sub
in
cmp
and
leave
fs
mov
jle
or
lfs
in
outsl
lret
xor
jbe
cmp
sub
ret
xchg
cmp
pop
sub
je
cmpsb
pop
push
stos
pop
xchg
jle
xor
sub
mov
adc
cltd
dec
repz
push
jecxz
cmp
cmp
xorb
in
xlat
adc
out
dec
cli
enter
mov
lahf
inc
sub
and
out
jnp
push
xlat
sub
rol
push
sbb
sub
js
les
xlat
aad
cmp
add
ficompl
sbb
shl
mov
addr16
faddp
int3
pop
sti
stos
cmp
int
loopne
out
dec
lods
data16
dec
es
imul
add
into
mov
fildll
aad
adc
push
test
add
insb
or
daa
mov
inc
sbb
mov
ror
xor
icebp
push
xor
or
scas
out
into
sub
or
hlt
ret
mov
rcll
or
mov
mov
sub
adc
loopne
and
xor
sbb
push
cmp
dec
mov
in
push
mov
mov
insb
andl
dec
mov
shl
jb
hlt
mov
mov
pop
inc
mov
jo
push
clc
mov
sub
les
sbbl
jg
sbbb
shrb
pop
mov
negb
xchg
data16
scas
jno
fidivs
xor
divl
int3
test
sti
sub
arpl
push
dec
jl
js
in
dec
inc
mov
adc
insl
jge
outsl
mov
rorb
lahf
adc
and
sbb
cli
shl
js
jb
mov
mov
sub
or
sub
stos
mov
stc
push
push
xchg
adc
xchg
dec
push
je
xor
loope
mov
sub
popa
jmp
adc
jae
mov
pop
jl
stc
scas
pushf
aaa
inc
inc
rcrl
hlt
aad
mov
add
mov
sub
insl
fs
subl
adcb
into
add
sbb
jb
stc
sbb
out
dec
leave
out
lea
push
or
sbb
and
sarl
enter
dec
adc
push
andb
mov
push
xchg
popf
test
out
cmp
cmp
hlt
scas
sbb
cmpxchg
mov
jbe
inc
iret
cld
push
mull
jo
push
insl
sub
shll
sbb
xchg
aad
fistpll
cmp
push
mov
shr
mov
and
out
in
mov
jmp
ds
gs
popa
movsl
bound
in
jbe
mov
aas
fwait
pop
pcmpeqd
dec
rcrl
add
push
fidivl
rcrb
inc
pop
jo
gs
push
dec
add
xchg
or
push
ljmp
inc
rcrb
frstor
cltd
mov
or
sub
mov
adcl
or
subl
sub
push
jns
and
push
add
and
aaa
insb
sub
pop
inc
push
fbstp
xchg
mov
inc
mov
out
imul
mov
xchg
or
loop
flds
xor
mov
jecxz
xor
and
enter
mul
adc
popa
sub
outsl
and
xor
cwtl
cli
scas
cmc
inc
mov
ficoml
rorb
fwait
lret
mov
icebp
jmp
cmp
ljmp
and
dec
inc
je
or
out
addb
push
cs
lock
aad
mov
outsl
dec
jnp
sbbb
test
inc
clc
add
adc
push
push
fs
inc
ss
cmp
sub
adc
jno
pop
iret
xor
out
iret
pop
mov
push
xlat
out
scas
push
pop
cltd
es
aaa
mov
adc
lock
push
shlb
loopne
fstpl
xor
adc
fldenv
push
in
push
inc
jle
cmp
jae
push
std
arpl
gs
loop
movsb
lods
pop
jp
cmc
push
jns
pushf
and
add
icebp
xchg
jle
into
inc
pop
jecxz
std
aam
repz
jae
adc
int3
aaa
test
enter
inc
leave
popa
rcr
pop
les
dec
xchg
out
lea
bound
lret
insl
lock
or
imul
ljmp
dec
pop
ja
mov
in
movsb
ss
mov
imul
adc
add
sub
dec
pand
xchg
xor
and
pop
cwtl
shlb
dec
stos
mov
cmpsl
fsubl
jl
bound
jns
fsubrl
leave
das
in
cmp
xor
or
xchg
leave
insb
lea
leave
movsb
or
sarb
inc
aad
dec
push
xor
cld
fsubp
jns
and
jl
cmp
aas
mov
adc
dec
adc
mov
mov
mov
rcl
push
out
or
pop
fs
jnp
push
or
test
sbb
popf
pushf
push
loope
inc
adc
jl
inc
loope
adc
cwtl
push
outsl
push
xchg
test
lods
jmp
movhps
das
insl
or
jnp
aas
mov
stos
jmp
cmp
les
lret
subl
xchg
or
hlt
cltd
mov
dec
pop
push
popa
pop
std
data16
gs
notb
and
jne
xchg
push
cmp
mov
cmp
adc
and
loope
orl
inc
fwait
jmp
mov
sub
fs
aaa
pop
daa
add
test
cmp
lock
fs
pop
xchg
dec
add
add
pop
clc
adc
lods
mov
xor
call
mov
clc
lock
movntps
and
inc
out
and
cltd
lea
push
pop
ljmp
push
je
pop
test
mov
movsl
dec
test
pop
ficompl
int
xchg
hlt
mov
fildll
dec
mov
aas
xchg
dec
mov
jg
in
adc
leave
dec
aad
mov
mov
jmp
xlat
jbe
or
cmc
adc
outsl
leave
loop
in
jmp
adc
and
mov
call
iret
stc
mov
sub
sbb
jo
pop
cltd
and
mov
cmp
push
jmp
rcl
sub
pop
adc
add
int3
inc
scas
stc
push
cmp
js
cmp
mov
fmuls
dec
xlat
sbb
les
int3
push
addr16
mov
lahf
sub
pop
sub
scas
out
xchg
lret
xchg
mov
int
push
pusha
in
pop
mov
gs
stos
ja
js
jne
push
test
call
pop
pop
shlb
sub
pop
hlt
rcll
xor
dec
repnz
sbbl
or
mov
test
outsl
jl
nop
pop
std
dec
popa
or
mov
fnstsw
fbstp
mov
lods
xchg
inc
xchg
push
sbb
pop
outsl
outsb
incb
mov
outsl
cmp
decl
popf
adc
popa
inc
mov
test
mov
add
stos
xor
mov
pusha
aad
push
add
cmp
call
lock
ret
mov
dec
and
pushl
mov
jp
xchg
and
sub
jne
dec
pop
stc
aas
in
cmpsb
out
sub
xchg
stos
jmp
loopne
cld
push
add
das
jns
movsl
xchg
dec
out
les
insl
and
imul
lods
addr16
jns
cmc
sbb
imul
lret
out
inc
int3
xor
pop
pop
es
inc
bound
xlat
jle
push
pop
into
scas
xchg
in
sub
iret
sbb
pop
daa
jg
xchg
sub
mov
mov
xchg
fistps
jno
jmp
lcall
std
mov
outsb
pop
fucomip
sahf
mov
dec
push
ret
mov
cmp
scas
popf
data16
mov
pop
mov
dec
adc
fs
mov
dec
repz
insl
aas
sbb
jle
mov
sbb
je
cmp
xchg
and
and
dec
sub
mov
pop
push
sub
shlb
xchg
mov
push
xlat
pop
and
xchg
daa
jns
adc
jmp
jo
xchg
je
outsb
mov
scas
das
sbb
js
div
lret
pop
cld
dec
jmp
stos
aas
or
adcl
jge
adc
mov
jno
jne
jecxz
iret
neg
mov
push
xor
fildll
jb
dec
lock
cmpsb
cmpsl
arpl
outsl
rorl
lods
insb
popf
lahf
addb
cmp
lcall
push
adc
fidivrs
btr
insb
dec
insl
in
mov
ror
aam
add
into
and
mov
xchg
popf
sbb
mov
dec
mov
push
iret
ja
cltd
inc
dec
push
push
mov
jg
inc
fisttpll
pop
adc
and
lods
pop
jnp
lds
into
dec
stos
andb
hlt
outsb
mov
test
fdivrl
testb
shl
mov
push
jmp
out
xor
lds
andl
test
les
xchg
int
sub
sbb
jno
push
mov
inc
mov
or
ret
and
je
idiv
repnz
mov
ljmp
inc
and
aaa
lods
pushf
idivb
jne
push
cmp
xchg
es
call
testl
dec
cmp
imul
sahf
push
leave
jmp
aas
bound
dec
fs
mov
and
adc
ljmp
popf
rcrl
xchg
add
icebp
mov
jae
xor
fs
sbb
jge
and
cmpsl
das
mov
int
mov
out
out
popl
dec
and
pop
jle
adc
jbe
fidivrl
int3
daa
test
and
cmp
sahf
out
sbb
xor
sub
rcr
xchg
test
sub
pusha
dec
inc
xor
lea
iret
xor
dec
inc
sub
mov
dec
jno
cli
jne
mov
lret
jne
sub
idiv
mov
filds
das
fs
lods
xor
loope
imull
xor
nop
sbb
mov
into
pop
sbb
push
cmovb
jbe
inc
push
mov
push
or
int3
pop
fcoms
sub
push
loop
mov
je
add
mov
cmp
xor
int3
gs
iret
jnp
insb
sti
in
dec
lahf
xchg
aas
mov
dec
push
enter
xor
jp
jle
dec
insl
test
outsb
xor
loop
jns
test
push
pop
mov
pop
dec
xor
cwtl
into
inc
adc
push
xor
xchg
xchg
sahf
push
in
mov
sahf
and
call
daa
jge
sub
or
je
in
ret
ss
es
data16
and
and
xchg
sbb
ret
pop
lret
into
fs
mov
test
dec
insb
cmp
xor
fldcw
mov
cmpb
cmp
sub
jno
cmpsl
sbb
mov
popf
loop
xor
in
push
xorl
inc
icebp
and
dec
cs
clc
xlat
fldl
test
mov
sbb
lret
adc
fnsave
dec
dec
outsb
nop
xchg
push
inc
fistl
push
movzbl
in
jg
dec
xor
add
daa
testb
lcall
fs
xor
cltd
cmc
push
and
lds
sbb
jmp
inc
fxch
mov
pop
or
inc
rcll
sbb
and
fdivrs
mov
neg
call
push
mov
or
dec
inc
adc
in
pop
add
jne
push
nop
push
sbb
adc
ret
fwait
mov
pop
insb
mov
jnp
mov
lahf
adc
mov
push
and
add
and
test
jl
ja
mov
inc
into
std
aas
js
jg
or
push
mov
gs
fstpl
popa
cwtd
lods
insl
pop
mov
sar
mov
lret
and
insl
mov
push
repz
cmp
cmp
push
sti
loope
mov
jl
jle
inc
sub
sbb
push
jae
pop
aas
cmp
push
pop
pop
or
adc
jmp
pop
xchg
lea
adc
mov
imul
lock
add
inc
out
mov
push
sbb
adc
outsl
jo
sarb
scas
xor
or
test
leave
movsb
testl
std
andb
or
or
leave
aas
jl
jo
or
stos
movsl
mov
ja
insl
rcll
pop
lds
or
or
xchg
mov
and
xor
jecxz
mov
xor
and
fnstsw
xor
sbb
js
fiaddl
out
js
pop
xor
dec
inc
mov
xor
xchg
addr16
jne
sub
sbb
xchg
jg
arpl
cmp
mov
jnp
in
mov
mov
sbb
mov
cmpsb
in
fbstp
xorb
mov
xor
call
mov
jge
insb
ret
inc
mov
sahf
sbb
dec
stc
push
icebp
xlat
aas
fcomp
fidivl
lds
loop
jecxz
sarb
das
loop
jbe
out
mov
inc
loope
repnz
inc
cmpsl
fstl
pop
add
repz
sbb
mov
outsl
ja
xchg
mov
shlb
fucomip
jnp
mov
mov
divb
iret
dec
lds
sub
sbb
adc
lods
xor
hlt
mov
loopne
outsb
adc
lret
fimull
int3
pop
pop
shll
mov
in
jb
sbb
xor
jecxz
jecxz
mov
clc
ja
out
mov
cmpb
push
sbb
inc
or
inc
pop
pop
mov
add
push
add
jg
mov
inc
arpl
pop
mov
jp
idiv
testb
or
movsb
sbb
sbb
stos
pop
cltd
xchg
push
and
jne
lret
mov
data16
imul
fidivl
pop
popf
popa
mov
cmc
call
cmc
push
ss
push
sub
mov
ret
pop
adc
pop
fildl
stos
jne
push
hlt
test
lahf
je
mov
and
arpl
rolb
scas
in
cmp
jge
push
daa
lds
clc
add
loop
sub
jae
adc
aam
lret
pop
jp
mov
xchg
lea
xchg
pop
push
aad
ss
insl
xchg
mov
std
popf
inc
xor
xor
mov
inc
add
popa
daa
loopne
sarl
mov
lret
sub
cmp
subl
stos
mov
or
das
daa
sub
jecxz
jns
test
mov
push
popa
xchg
mov
jecxz
dec
xchg
mov
fs
lea
and
sbb
orb
rorl
in
pop
lods
scas
cwtl
sub
aas
xchg
jp
in
jno
and
push
iret
xorl
jae
cmpsb
insl
pop
sub
dec
inc
mov
xchg
fsubrl
cmpsl
in
lret
cmp
leave
jb
pushf
pop
push
dec
iret
mov
and
sahf
sub
cmpl
mov
jmp
lret
xor
outsl
mov
xchg
xor
jge
xor
jecxz
gs
lock
push
outsb
sbbb
or
cltd
lahf
cmp
repnz
fidivrl
in
jp
push
mov
adc
mov
push
jbe
push
divl
mov
jae
xchg
push
pop
sub
sub
ds
or
outsl
mov
orl
in
out
mov
add
pop
cmp
popa
lods
push
jbe
mov
push
cmpsb
and
dec
jmp
addr16
xor
test
or
pop
inc
loop
in
cld
mov
ret
lcall
xor
jne
sbb
iret
outsb
adc
sbb
in
pop
dec
sub
outsl
inc
dec
and
pop
sub
fimull
outsl
push
cmp
mov
cwtl
xor
sub
iret
xchg
jno
xchg
mov
negl
cli
test
push
dec
sub
push
popf
push
and
inc
lea
xchg
xchg
les
add
mov
popa
pop
jo
and
push
add
xchg
cmp
dec
clc
xor
je
xor
push
xchg
pop
rol
in
out
and
or
xor
inc
sahf
stc
adc
push
push
mov
stos
insl
ret
shlb
sahf
pushf
pop
ja
shl
dec
mov
outsb
pmulhuw
mov
or
js
mov
jnp
mov
mov
int3
lahf
adc
lods
push
push
mov
and
or
rcr
popa
lcall
movsl
jo
out
in
mov
pop
dec
dec
les
sub
cmpsl
pop
in
pop
and
adcb
xchg
jnp
movsb
andb
pop
pop
loope
inc
mov
fwait
orl
cwtl
scas
pop
sti
pop
adc
pop
lcall
pop
stc
int3
jl
icebp
add
mov
popf
sti
lahf
add
sbbl
mov
mov
imul
push
int3
jg
add
cmc
mov
xor
cli
inc
icebp
sarb
hlt
fs
pop
jl
or
lock
sbb
add
or
xchg
cmp
std
or
cmp
and
or
out
scas
fcoml
cmp
push
add
int
arpl
loopne
cmc
mov
mov
aas
mov
push
shlb
das
testl
test
ret
and
mov
ret
ja
and
jmp
dec
nop
loope
fwait
mov
lock
push
and
out
aas
cli
xchg
xor
stc
addr16
mov
fimull
inc
sbb
out
and
cmovg
pop
addr16
aad
add
movsb
pop
lods
push
cmc
jnp
lret
push
lcall
adc
testl
popl
ljmp
xor
mov
movsb
hlt
sbb
shrl
pop
outsb
adc
jnp
dec
popa
std
mov
and
inc
adc
pop
pop
loope
mov
inc
ja
testl
ret
xchg
push
outsl
jb
inc
decl
lcall
fildll
imulb
and
and
out
gs
out
out
mov
xchg
jo
mov
dec
dec
jg
rorl
mov
fs
pop
enter
imul
or
in
push
push
mov
mov
mov
addr16
push
xor
inc
fisttpl
cmc
mov
ds
or
out
int
js
hlt
mov
mov
fnstenv
jmp
bndldx
mov
popa
sbb
sub
stc
lret
fldt
cmp
lods
inc
loope
sub
xlat
out
xchg
mov
mov
mov
ljmp
cli
xor
stc
fistpl
frstor
cwtl
popf
lcall
jge
jne
testb
andb
push
cltd
jns
lret
pop
mov
mov
add
mov
in
test
das
push
ret
add
addr16
scas
shr
ss
popf
iret
cmp
sub
inc
icebp
sahf
adc
out
jp
jl
cmp
stos
pusha
negb
mov
cwtl
push
jmp
xor
rcrl
pop
or
pop
int3
pop
jecxz
popa
xlat
das
jno
add
js
shll
inc
add
jp
pop
xchg
inc
js
nop
or
sti
push
dec
clc
and
pop
arpl
mov
mov
les
je
pusha
add
push
outsl
imulb
fwait
sbb
div
push
repz
icebp
mov
mov
out
inc
xor
mov
mov
xor
or
dec
mov
add
or
lock
xchg
cmc
mov
xorb
dec
addl
ret
or
inc
int3
xor
inc
out
mov
or
jmp
popf
sbb
adc
loope
and
daa
pop
lcall
mov
push
mov
mov
popa
sahf
lods
out
cmp
clc
xchg
dec
mov
inc
xor
out
and
loope
cltd
test
or
xor
fdivs
stos
mov
xchg
dec
fld
sub
mov
leave
lods
es
stos
inc
push
repz
and
jmp
inc
xor
add
and
xor
lods
pop
add
sbbl
sti
add
mov
ficomps
push
and
xchg
pop
cmp
sbb
xchg
mov
fildll
mov
pop
sbb
aad
ficoms
repnz
les
mov
jae
jle
mov
cmp
ja,pt
adc
fstl
clc
cmp
push
cmp
mov
push
fsincos
repnz
out
cld
mulb
popf
fucomi
fstpl
cmpsb
and
mov
aas
xor
ret
or
mov
fisttps
jmp
or
cmp
jge,pt
xor
inc
dec
sbb
jge
lcall
jns
fs
mov
mov
jbe
outsl
cwtl
jnp
sbb
mov
lcall
repz
es
shll
xlat
push
inc
xor
push
mov
cmp
lea
mov
pop
mov
jbe
andl
mov
stos
mov
ds
mov
lds
outsl
in
sub
leave
inc
aas
dec
pop
xchg
fwait
hlt
adc
jmp
inc
inc
cli
iret
int
inc
mov
popl
mov
and
cwtl
lds
aas
mov
in
cmp
and
inc
imul
daa
fldcw
xchg
xor
in
pop
inc
pop
into
outsb
test
xchg
jno
mov
adc
adc
leave
mov
loop
and
push
mov
push
es
xchg
jae
push
jnp
cld
sub
mov
mov
movsb
pop
pop
popa
jno
mov
mov
cmp
jae
mov
into
out
cmc
fildl
mov
imul
dec
scas
dec
inc
inc
std
jo
fbstp
add
mov
sub
mov
adc
xor
mov
mov
out
out
pop
paddw
repz
mov
and
cli
fsubr
fimuls
fwait
inc
rcrl
dec
push
bound
pop
fucomip
out
sarb
jp
jecxz
bound
fs
cmpsb
into
movsb
pop
sub
rcl
dec
test
pop
pusha
lods
out
jmp
and
daa
xlat
inc
cmp
pop
mov
inc
push
out
gs
xchg
xor
and
jecxz
mov
push
and
mov
mov
or
mov
in
rclb
test
stos
iret
mov
in
out
popa
inc
mov
adc
or
fisubs
dec
xor
mov
dec
sub
popf
mulb
add
add
jmp
or
sbb
push
andl
push
mov
add
xchg
mov
divb
pop
mov
mov
add
stos
cs
or
mov
jns
jns
inc
or
jg
sub
push
push
push
inc
push
inc
xor
stc
mov
sbb
fs
mov
and
sti
dec
fmull
mov
imull
in
test
sub
mov
add
cmpsl
pop
mov
out
movsl
xchg
push
sbb
push
ljmp
xor
mov
sub
test
cmp
popa
xlat
xor
add
inc
scas
fwait
dec
jae
or
movsb
ret
push
lds
cmpsb
and
mov
int
cs
inc
push
cli
mov
repnz
ja
test
pop
outsb
sbb
jne
adc
gs
push
push
test
xorl
js
cmc
ss
hlt
dec
imul
mov
stos
cmp
push
test
mov
or
test
in
jno
sub
ret
or
xchg
lret
icebp
cs
test
xor
lods
xlat
stos
add
icebp
js
jne
xchg
xchg
ds
mov
pop
jbe
cmp
lret
mov
xchg
jle
adc
imul
pop
rcll
push
and
sarb
jo
rcr
jno
jle
cmp
nop
push
and
inc
pop
dec
jo
js
xchg
adc
vpunpckhqdq
lds
pop
pop
or
xchg
mov
js
lea
push
cwtl
mov
lret
dec
leave
in
fcoms
and
insb
insb
hlt
popa
adc
pop
sahf
xchg
rorb
int3
lock
mov
sbb
test
xchg
call
and
lods
out
dec
inc
dec
xor
push
jmp
mov
and
or
cmp
sbb
jp
cmpsb
jnp
jb
xchg
pop
add
iret
bound
cmp
or
shr
insl
add
add
xchg
push
jl
add
add
inc
movsb
cmp
jmp
daa
insl
mov
cmpsb
cld
imul
xlat
incb
or
loopne
push
fists
mov
jmp
lcall
mov
popf
add
xchg
pop
push
insl
mov
pop
leave
clc
jmp
add
xchg
or
out
cwtl
pop
pop
gs
cs
ja
pop
pop
xchg
xchg
idivl
xor
shll
cmp
xor
fildl
fiadds
mov
pop
cwtl
js
imul
enter
pop
in
inc
sti
adc
inc
dec
subb
div
and
inc
insb
mov
hlt
jnp
loopne
jo
adc
rcll
sbb
les
stos
or
int
cs
cmp
mov
pop
pop
cmpsb
jo
call
insl
ret
add
imul
arpl
inc
push
aas
mov
xor
mov
imul
inc
stos
rcrl
xchg
lahf
cli
rcrb
in
shlb
daa
scas
les
sub
aad
loopne
cmp
ficoml
nop
add
mov
inc
or
mov
xor
out
das
cmp
pop
nop
mov
fstps
push
or
gs
mov
ret
mov
mov
jbe
cwtl
mov
hlt
add
cli
leave
push
jbe
mov
xor
nop
mov
xlat
mov
insb
stc
cmp
pushf
pusha
shl
scas
add
mov
fs
mov
pop
pop
adc
popa
add
scas
xchg
fistpll
daa
push
cmp
ret
ds
adc
sub
sahf
jg
iret
out
or
sar
mulb
pop
adc
call
xor
mov
sbb
pop
inc
int
inc
push
aaa
mov
call
rcl
pop
jmp
xchg
sub
icebp
test
mov
shll
xchg
push
addb
lret
dec
sub
sub
stc
mov
jbe
jmp
jmp
out
stos
aam
scas
test
and
lea
push
fadds
aas
and
out
enter
inc
pop
movsb
cmp
pop
sub
adc
int3
xchg
sub
int3
lret
mov
movsl
mov
or
les
xchg
xchg
scas
cltd
inc
sub
out
jecxz
mov
stos
sbb
iret
mov
mov
adc
stos
cmp
jnp
mov
add
xor
insb
xor
pop
xchg
lods
mov
divb
test
add
addr16
pop
stos
in
push
imul
lcall
stos
adc
fnsave
cmp
mov
inc
fucom
imul
jnp
stos
lock
inc
cmpsb
inc
mov
mov
test
loope
xor
sub
or
sahf
fnstenv
pop
dec
test
pop
cltd
popf
ds
aad
mulb
mov
pop
mov
pop
iret
fbld
mov
mov
or
xchg
movsb
inc
jp
xchg
es
int
mov
call
std
inc
bound
and
std
add
int3
cmp
mov
lods
pusha
icebp
repnz
out
jns
fstps
mov
inc
jae
mov
push
adc
ss
cli
notb
dec
mov
push
hlt
sti
xchg
xlat
mov
xchg
call
in
jl
adc
xorb
fstl
mov
dec
sub
out
int3
mov
dec
loope
jle
pop
push
fwait
or
in
lds
adc
jns
in
mov
leave
or
sbb
out
out
or
cmpsl
adc
shrb
or
push
xchg
pop
xchg
ret
leave
adc
sub
js
push
ret
mov
test
sbb
sub
lods
fbstp
xchg
ret
or
std
fwait
mov
es
mov
sub
cld
stos
shlb
dec
push
or
daa
in
pop
jbe
jo
int3
pop
insl
aaa
mov
aam
inc
add
mov
adc
cmp
out
mov
bound
es
jnp
repz
jne
sub
dec
jp
dec
lods
xchg
inc
push
enter
arpl
les
pop
pushf
cs
mov
insb
add
or
in
and
sbb
and
sbb
bswap
and
adc
adc
and
and
roll
xor
or
jle
int
push
sbb
inc
cmpsb
addl
xadd
sub
mov
push
or
xor
lock
out
leave
ret
dec
xchg
testl
add
mov
xor
std
ja
ret
mov
cmpl
ss
mov
ds
call
inc
dec
stc
int3
and
test
sub
adc
repz
movsl
pop
lods
pushf
mov
scas
pushf
test
cmpsb
xchg
push
stos
loopne
jge
cmp
lret
push
jnp
andl
mov
push
clc
aaa
mov
mov
push
push
insl
leave
jge
iret
bnd
push
jbe
dec
and
xchg
mov
loop
push
imull
aas
cmpb
and
jbe
dec
mov
loopne
leave
mov
push
test
lahf
icebp
push
sbb
mov
add
andb
mov
pusha
sub
xor
cld
dec
std
mov
mov
xor
adc
inc
aaa
sub
adc
fcoml
mov
and
sub
mov
xchg
ret
adc
xchg
fcmovne
into
fcmovnbe
pop
push
pop
and
xchg
insb
leave
sub
inc
clc
scas
or
loopne
lods
mov
pop
rclb
int3
fsts
add
cmp
hlt
jl
pop
mov
xchg
loop
pop
hlt
repz
cli
xchg
fadds
mov
out
or
rcl
jmp
dec
xor
inc
les
mov
aad
xchg
fbstp
mov
and
js
cld
mov
xchg
cmc
xchg
mov
cmp
aas
sbb
pop
sbb
mov
test
cmpsl
jl
rorb
aam
int
pop
adc
adc
cwtl
sub
fisubs
mov
push
xor
ds
jno
std
lock
push
js
pop
iret
adc
out
icebp
xchg
sbb
stos
adcl
inc
xor
xor
mov
jle
aam
jno
dec
es
aad
movsb
dec
pop
mov
js
out
lods
outsb
xchg
or
adc
sub
sti
mov
cmp
lods
sub
sti
xchg
aad
or
adc
test
pop
mov
push
and
imul
xor
xchg
test
or
mov
stos
add
out
in
pop
into
xchg
ret
add
test
fst
cmpsb
cs
mov
sub
push
dec
dec
and
or
pushl
repz
or
push
jle
scas
arpl
lret
fcomp
out
fnsave
pop
bound
push
dec
inc
loopne
adc
pop
mov
push
js
sar
scas
hlt
add
sub
inc
mov
test
in
push
imul
mov
popa
pop
sub
in
data16
xor
out
imul
mov
xor
sbb
add
push
pop
out
or
orl
sbb
xchg
in
fs
int
jns
pop
clc
scas
jg
xchg
pop
jno
sub
sub
ljmp
imulb
ret
loope
mov
mov
add
into
xor
or
aad
neg
jno
dec
mov
test
mov
out
jg
fstp
data16
adc
or
mov
dec
push
jmp
ja
push
outsl
lret
cmp
leave
inc
mov
pop
mov
jl
mov
outsl
scas
inc
outsl
nop
sarl
push
adc
popf
outsb
repz
inc
or
sub
xor
dec
das
cmpsl
dec
push
fs
scas
cmp
push
out
stc
mov
mov
inc
add
and
ret
gs
adc
xor
je
add
jg
jae
push
lea
enter
aas
xchg
lcall
popf
daa
add
xor
paddd
xchg
add
inc
popf
push
adc
cltd
lret
outsb
inc
mov
cwtl
inc
and
lods
inc
cltd
fnstsw
xor
xchg
mov
mov
out
test
ljmp
xchg
inc
jne
daa
mov
lea
out
cld
push
loopne
shrl
sub
lahf
dec
sbb
jo
dec
call
fs
movsb
sbb
mov
xlat
pusha
sub
ss
add
mov
add
outsl
leavew
jb
inc
mov
fsubrs
jmp
and
xor
sahf
push
inc
or
adc
mov
dec
les
aam
mov
pushf
dec
stos
scas
fnstenv
mov
push
pop
pusha
aad
sti
cmp
cmpsb
jmp
shrl
inc
pop
xor
pop
xor
test
jb
mov
add
std
dec
notb
js
adc
or
adcb
adc
cmpsl
cmp
inc
xchg
and
ret
xor
inc
mov
cs
in
cmp
mov
inc
fs
xchg
sbb
out
mov
adc
test
dec
xor
enter
push
in
cmpl
std
shlb
jno
lds
scas
fs
popf
mov
pushf
lock
out
pushf
sar
cs
aas
push
pop
add
xor
mov
mov
movsb
ret
ja
icebp
and
rcrl
lret
xchg
xchg
mov
xor
aam
push
mov
aam
cwtl
dec
in
xor
inc
cmp
icebp
clc
mov
shll
int
and
and
je
pop
inc
sub
daa
xchg
push
leave
mov
enter
imul
inc
aas
int
or
in
xchg
jmp
and
out
jg
jno
sbb
jno
out
xchg
inc
xor
out
inc
and
jl
dec
mov
outsb
adc
inc
xchg
pop
js
test
push
push
xor
sbb
das
fdivrs
xchg
sbb
or
add
fwait
xor
or
xchg
mov
adc
xchg
insb
cmp
mov
cmpsb
lds
mov
test
cmp
ret
cmp
jge
push
insb
jge
sbb
adc
icebp
aam
cmp
jo
and
fs
xchg
scas
clc
mull
fistl
out
aad
inc
xlat
stos
inc
or
and
test
outsb
ret
add
ljmp
aad
mov
mov
xor
pop
aaa
mov
or
cmpsb
cmovs
out
lret
cmp
mov
and
bnd
mov
jp
in
xchg
mov
mov
testb
rclb
xor
mov
and
mov
bound
mov
xchg
dec
call
fdivl
add
fs
push
dec
xchg
mov
push
das
xchg
ljmp
sub
dec
loop
fsubrl
dec
cmp
sahf
pop
and
jecxz
sbb
cmc
inc
pop
nop
out
loop
sub
and
mov
xchg
lahf
mov
leave
cmpb
sub
insl
xchg
jne
out
scas
push
dec
adc
mov
addr16
scas
cs
jne
insb
aas
push
insl
cmp
out
xor
push
scas
cmp
in
push
cmp
mov
jecxz
or
shlb
icebp
mov
jmp
nop
hlt
jg
push
add
mov
lods
sahf
cmp
movsb
out
cwtl
sbbl
loope
lret
push
sti
stc
mov
loopne
mov
dec
add
arpl
dec
mov
mov
adc
test
cmpsl
sarb
loopne
in
xchg
dec
xchg
popa
fstl
test
jbe
sbb
mov
dec
pusha
lret
push
fcoml
xor
mov
cmc
dec
mov
mov
rol
sub
out
rclb
nop
call
rclb
shlb
sbb
jnp
xchg
aam
inc
dec
leave
adc
add
ja
pop
movsl
inc
inc
xor
cmpsb
add
mov
push
out
sbb
das
cltd
sbb
mov
inc
cld
leave
jle
mov
xor
arpl
ds
int3
fimull
in
mov
imul
ret
lcall
std
lret
mov
dec
bound
test
dec
inc
mov
daa
data16
mov
mov
out
or
cltd
fs
adc
inc
inc
pop
adc
cmpb
and
inc
mov
iret
lock
sub
test
inc
cltd
dec
push
or
repnz
or
jmp
out
leave
mov
jg
in
mov
cmp
std
push
pop
jecxz
mov
adc
inc
and
dec
aaa
push
adc
add
clc
cmc
push
sahf
scas
add
insl
sbb
das
es
mov
pop
popf
into
sub
pop
inc
ss
aaa
xor
les
add
push
sub
incb
lret
sub
adc
sbbl
cmp
fidivs
xchg
aas
dec
jmp
mov
or
mov
mov
repz
bswap
pop
in
sbb
scas
pusha
add
sub
sub
sub
mov
lods
fbld
sbb
mov
xchg
sub
add
adc
shrb
sbb
cmovge
or
popa
enter
push
test
add
xchg
xor
push
sbb
inc
rolb
pushf
pushf
dec
movsl
pop
mov
jne
mov
shl
pop
cmp
sbb
fsubrl
cmp
stos
icebp
cmovg
mov
jle
fstpt
into
or
inc
xlat
cmp
aam
mov
gs
arpl
jg
mov
pop
mov
test
insl
popf
mov
inc
xchg
push
cld
insb
pop
scas
or
pusha
cmc
ds
push
push
int
lods
iret
push
xchg
xor
pop
pusha
cmpsl
lock
mov
pusha
lahf
stos
dec
shll
popa
fstp
ljmp
or
jecxz
xor
xor
push
pop
test
mov
or
sbb
scas
sub
cmpsb
jle
dec
inc
dec
push
and
sbbb
std
dec
test
gs
imul
aaa
cltd
aaa
jno
jne
data16
add
movsl
sub
xchg
jle
dec
sub
aad
outsb
mov
push
sti
adc
les
mov
cmpsb
mov
frstor
icebp
loopne
and
jl
ja
je
jge
inc
push
inc
ss
iret
arpl
jp
xor
insl
sahf
sbb
cli
xlat
sbb
insl
xor
lahf
aas
add
push
and
aam
inc
inc
or
lret
fsubrl
push
jns
mov
adc
shrl
mov
xchg
push
stc
sub
xchg
and
lods
enter
fistps
inc
xchg
es
push
stos
push
outsb
call
fisttpll
aaa
pop
out
out
pop
popa
jl
jg
hlt
mov
cmp
sbb
into
imull
jl
sbb
push
dec
mov
push
shll
sti
orb
mov
sti
pop
lods
mov
inc
and
lahf
xchg
mov
ds
adc
xchg
add
jb
icebp
insb
enterw
js
xor
fidivrl
scas
cs
cmpl
cmp
sub
mov
lds
inc
out
int3
pop
into
or
xchg
mov
stos
mov
and
into
lea
int
and
adc
mov
fnstsw
mov
lret
jae
adc
mov
cmc
shlb
cld
scas
pop
loopne
les
rclb
jp
leave
add
mov
or
imul
loopne
cmp
decb
jae
out
and
lret
xor
jl
sub
dec
in
push
addr16
mov
shlb
xor
add
lock
inc
xor
fadds
int3
lods
stc
cwtl
sbb
add
clc
fisubs
dec
adc
sti
mov
aaa
in
aad
bound
xchg
jl
or
xor
jbe
mov
scas
mov
in
test
test
daa
jg
popf
or
jno
loopne
dec
or
movswl
mov
in
aaa
mov
jae
dec
fdivp
loop
imul
lret
rolb
dec
dec
and
or
fsubrp
pop
adc
push
push
inc
xchg
cli
mov
rol
dec
rcrl
andb
mov
sub
rcl
mov
push
icebp
mov
add
mov
ljmp
clc
loope
lret
mov
xchg
adc
test
pop
out
repnz
js
push
scas
iret
jae
adc
out
xor
adc
dec
pusha
jb
add
stos
and
dec
and
mov
inc
mov
loop
sbb
adc
add
or
sub
jl
mov
cmpsb
push
mov
mov
repnz
mov
mov
fldcw
arpl
cmp
dec
cld
loope
cwtl
mov
aad
popf
sbb
add
sti
mov
ret
xlat
outsb
or
popf
mov
push
add
xor
rcrl
out
mov
rorb
fwait
pop
jmp
or
push
cmp
sahf
enter
mov
push
dec
rolb
sti
daa
clc
popf
pushf
push
out
dec
sub
sbb
pop
sti
lock
fidivl
push
xor
fcomps
dec
lods
jne
dec
cwtl
jecxz
mov
aas
inc
daa
mov
jmp
in
dec
adc
jno
mov
jecxz
push
out
xchg
xor
imul
or
lds
in
popf
faddl
pop
adc
std
icebp
add
imul
add
mov
int
test
push
nop
mov
mov
repz
adc
pop
std
jbe
sub
mov
fdiv
cmp
and
jg
and
scas
fcmovnbe
and
adc
inc
mov
mov
xchg
mov
sub
in
mov
dec
mov
jl
xorb
mov
xlat
lahf
roll
sub
clc
je
data16
pop
mov
mov
fsubp
mov
inc
pop
cld
fdiv
clc
ljmp
mov
inc
mov
rcrl
cmpsb
inc
xor
or
lret
loopne
dec
xlat
jmp
mov
pushf
push
or
jnp
xor
mov
jns
lret
mov
outsb
inc
push
bound
cmp
pop
cmp
add
pop
mov
adc
hlt
cltd
xchg
out
sbb
mov
rcrl
add
cmp
sbb
mov
arpl
xor
sbb
rcl
jp
popf
popf
push
test
cs
out
aad
mov
ret
ja
mov
or
or
and
imul
cltd
add
mov
jl
push
push
mov
sbb
scas
sub
xor
fwait
out
mov
xor
in
js
add
add
cmc
add
fwait
movsl
int3
jp
or
mov
pop
push
sbb
push
out
mov
add
cmp
pop
jo
loopne
pop
out
xchg
aas
lahf
cmp
int3
push
lret
mov
cmp
mov
jo
cmp
dec
push
and
or
xlat
inc
cli
inc
ret
int3
ja
scas
fcomps
mov
pop
bound
sti
jecxz
ret
shl
lods
imul
cmpsl
add
ds
or
sbb
aas
dec
mov
xchg
lret
mov
jns
or
sbb
sub
popa
cli
iret
add
add
mov
ret
jge
ret
rorl
test
pop
and
aam
cmc
imul
pop
ds
cli
jae
xchg
jle
outsl
adc
mov
jne
xchg
ret
test
hlt
add
sbb
popa
movsl
cwtl
push
sbb
mov
dec
outsb
pop
arpl
into
mov
mov
adc
push
or
int3
mov
pop
pushf
sar
xor
ss
dec
sbbb
stos
icebp
push
and
into
sarl
fwait
pop
adc
decl
xchg
outsb
outsl
notl
pop
repnz
roll
scas
shrl
sub
dec
cmp
add
xchg
lods
sub
cld
and
xor
pop
lds
ljmp
outsb
push
push
hlt
xchg
das
sub
mov
iret
sbb
cmc
pop
js
xor
sbb
lods
inc
int3
mov
mov
or
inc
pop
lds
xchg
jp
mov
mov
jp
incl
cmp
xchg
mov
xlat
in
push
lods
jmp
xor
xchg
popa
xchg
push
cmp
dec
sahf
xchg
daa
jbe
out
test
cwtl
in
jp
mov
sub
jmp
stos
dec
pop
cs
mov
and
sbb
xor
push
push
push
add
dec
out
dec
mov
fdivs
mov
mov
push
push
jle
add
leave
sbb
xchg
and
les
xchg
sub
jmp
cld
xchg
shlb
sbb
lcall
ud2
aam
jle
pop
xchg
dec
call
and
xor
or
out
jg
jno
lods
lret
sahf
test
add
cmp
js
adcl
jecxz
jmp
xor
mov
daa
mov
adc
sti
mov
repnz
stos
test
test
fidivl
jbe
xchg
dec
sub
and
mov
clc
push
or
cmp
inc
push
mov
fsts
outsl
and
dec
cwtl
xchg
or
adcb
loope
rcll
cmp
in
xor
lcall
push
pop
jbe
jne
sbb
popf
pop
sub
push
imul
sbb
lds
inc
mov
sub
ljmp
add
dec
and
iret
out
sub
shll
push
sbb
nop
int3
ljmp
adc
adc
or
int
mov
lret
cmp
movsl
cmpsb
or
cmp
or
or
push
sbb
adc
into
imul
scas
loop
xchg
std
push
cld
ret
pop
inc
jnp
pop
pop
pop
stos
std
test
outsl
push
or
enter
lret
imul
or
push
aas
ja
aaa
add
addr16
push
push
push
scas
jg
ficoml
sub
cli
daa
and
lea
ret
mov
fnstenv
xor
xor
jns
cwtl
lret
jne
outsl
cmp
xor
out
pop
xchg
mov
fadds
push
cmp
mov
cli
inc
fdiv
cmc
jge
hlt
mov
and
lock
mov
mov
jmp
enter
cld
insb
jo
push
push
movsl
popf
mov
inc
outsb
enter
inc
int3
mov
and
cmp
mov
lcall
push
mov
adc
jmp
arpl
testl
inc
enter
imul
lea
leave
xchg
or
xor
lods
dec
xchg
movsl
adc
push
and
mov
lds
aam
pushf
mov
pop
xchg
dec
mov
push
and
or
and
jg
pop
imul
mov
mov
neg
push
cld
jg
mov
shll
outsl
cs
mov
call
cwtl
lea
fcmovb
jmp
xchg
int
push
mov
mov
int3
xchg
sub
popl
cmp
pop
adc
divb
xor
pop
cmc
cmpsl
push
mov
imul
std
or
mov
lea
test
shll
mov
xor
js
adc
in
xchg
repz
or
lock
enter
push
out
mov
pop
pop
or
jnp
xor
pop
and
dec
dec
mov
xor
shlb
js
mov
xor
icebp
push
add
dec
lock
mov
mov
or
mov
js
mov
xor
repnz
les
jnp
scas
sbb
mov
dec
mull
or
xor
filds
or
lock
shl
out
mov
cltd
fnsave
cmp
je
movsb
fisubrs
lds
aam
pop
data16
scas
test
push
inc
enter
and
fwait
mov
cmp
lock
shrb
lds
xor
mov
add
test
or
lock
fisubrl
sbb
mov
lcall
out
push
mov
mov
pop
aad
data16
fiaddl
cmpsl
mov
push
and
mov
out
jl
lahf
sub
aaa
test
jmp
inc
pop
dec
mov
push
sub
popa
sti
sti
bound
push
in
and
xchg
xor
hlt
mov
dec
scas
je
ret
movsb
xchg
cmp
out
or
repz
rcl
push
cmpsl
int
and
pop
cli
adc
and
lea
repnz
out
dec
and
xchg
shl
or
push
xor
lock
out
mov
sub
loopne
mov
popf
xchg
and
aaa
sbb
dec
js
fadd
mov
lcall
iret
adc
mov
dec
rcl
lcall
mov
enter
cmpsb
ror
lds
xor
mov
push
leave
scas
cwtl
sub
sub
sub
push
pop
je
jae
push
cmp
inc
es
lahf
jge
pop
scas
insl
cli
lock
pop
scas
fstl
out
xor
add
lcall
xlat
mov
and
and
dec
pop
nop
out
and
jmp
ret
push
mov
cmpb
notl
jae
sahf
out
jne
mov
mov
cltd
push
cmp
stos
push
mov
or
and
jecxz
leave
rorb
cmpsl
jbe
inc
cmpsb
lock
and
or
mov
mov
stc
aas
adc
pop
pop
and
jns
pusha
mov
xchg
and
push
sub
orl
adc
mov
sbb
xor
pushf
movl
movsl
mov
xor
push
loope
sbb
adc
iret
dec
xor
push
or
popf
dec
cmpsl
jb
mov
jns
repz
loopne
loopne
jle
ret
dec
sahf
sub
lret
shl
popa
sub
mov
cld
pop
cwtl
mov
fsubs
pop
movsb
mov
add
sub
leave
push
sub
in
jne
adc
add
inc
push
dec
adc
sbb
pop
scas
std
clc
mov
lret
push
cmc
outsl
movsb
imul
hlt
cmp
pop
out
dec
inc
lds
add
cmp
mov
cmpsl
cli
inc
outsl
jbe
daa
cwtl
pop
or
pop
jge
or
jl
add
arpl
ret
shlb
adc
dec
fldt
push
je
ret
pushf
test
lea
divb
jg
push
xor
push
test
mov
repz
or
mov
push
repnz
pop
xor
cmp
pusha
push
xor
cmpsb
lcall
repnz
loop
sub
jb
dec
outsb
xlat
inc
inc
jge
push
push
clc
cld
rcrl
call
or
js
jb
jno
adc
xchg
or
aam
hlt
push
push
jb
adc
mov
filds
psubusb
das
pop
cmp
xchg
lods
les
arpl
lahf
stc
push
in
incb
adc
loopne
gs
mov
mov
imul
inc
pop
or
scas
pop
rorl
pop
sbb
pop
jno
je
stc
jl
jle
push
push
and
mov
or
pop
xor
fcoms
sub
subb
push
mov
pop
xor
out
jp
add
std
out
out
mov
ja
dec
ret
jnp
dec
cmp
add
js
test
int3
shlb
int
mov
cmpsb
fstl
cmc
data16
int3
test
push
mov
bnd
ret
sbb
loopne
or
cmpsb
or
loopne
lret
xchg
lock
inc
xor
pusha
dec
push
clc
decb
sub
clc
popf
loopne
or
inc
dec
cmp
xchg
jp
push
movsl
mov
sbb
push
mov
sub
jb
daa
add
iret
pop
mov
dec
es
dec
testl
mov
mov
mov
cmpsb
mov
xorb
in
mov
fsubs
pop
push
inc
fwait
mov
mov
fwait
add
lahf
adc
enter
push
icebp
push
add
and
pop
add
sub
adc
sbb
push
es
mov
divb
dec
sub
ss
adc
in
ds
inc
enter
xlat
jb
insb
fisttpl
mov
pusha
loop
add
fidivrl
xor
in
xor
test
enter
xchg
lods
aam
or
cmp
xor
hlt
movntq
out
ja
fldt
inc
dec
xchg
bnd
jge
and
repz
jg
in
dec
jb
iret
test
scas
loope
mov
nop
insb
popf
jle
add
fimuls
dec
sbb
cli
sbb
add
and
daa
inc
iret
sti
das
push
fadds
mov
jne
dec
cli
sbb
cmpb
mov
add
clc
fwait
cmpsb
xchg
out
jle
cmp
xor
sti
mov
pop
add
jne
push
subl
sub
xor
inc
inc
or
mov
test
lahf
push
bound
mov
pop
mov
int
mov
cmpsb
cli
pop
mov
and
aad
popa
cmp
inc
pop
and
xchg
sti
and
popf
lcall
push
mov
xor
test
xchg
faddl
mov
mov
sub
loopne
lods
popf
xor
pop
sbbl
jae
and
mov
fbstp
adcl
pop
enter
mov
lret
scas
mov
sbb
sbb
add
add
push
test
mov
aam
pop
cmp
scas
mov
stc
mov
lods
cmp
pop
sub
mov
xor
mov
cmp
cli
and
outsb
cmp
cld
lds
mov
sub
add
or
ret
mov
fcoml
iret
push
dec
ret
dec
gs
push
aam
daa
lret
aam
push
lds
cmpsl
pop
fnstsw
pop
fldlg2
jp
loope
adc
sbb
enter
add
mov
xchg
out
and
add
stos
sbb
pop
fnstenv
fisttpll
pop
or
adc
sysret
bound
mov
mov
pop
sbb
dec
popf
cmp
loopne
inc
and
dec
jmp
notl
ret
xchg
movsb
call
cmpsl
cmp
loopne
shrb
adc
arpl
sbb
or
rcrb
ret
je
leave
or
mov
xchg
pusha
and
ret
mov
stos
xchg
iret
aaa
and
cmpsl
subb
sbbl
jl
dec
mov
pop
adc
pop
je
adc
mov
lcall
or
mov
jae
pop
sbb
jnp
lds
out
push
orb
mov
int3
and
add
inc
push
call
and
add
shlb
testl
enter
mov
insb
ss
xchg
and
sub
sub
mov
jae
es
mov
dec
xchg
cs
xor
ljmp
mov
gs
fbld
aad
sarb
adc
mov
outsb
mov
std
loope
enter
pop
mov
lods
clc
push
mov
rcrl
push
test
pop
mov
frstor
mov
mov
and
inc
lcall
jmp
xchg
pushf
sbb
and
cmpsb
shll
dec
and
mov
aas
jne
sub
test
insb
mov
and
lock
cmp
in
or
xchg
push
div
imul
leave
movsb
xchg
lods
bound
movsb
fbstp
mov
mov
mov
call
stos
stos
outsl
ljmp
cli
or
out
adc
add
inc
cmp
xchg
mov
out
out
xor
in
je
cmp
jo
pop
sbb
jmp
scas
idiv
and
ret
dec
icebp
jbe
rorl
out
movsl
add
adc
vmovq
lea
bound
cmpsl
jns
aam
mov
insb
and
xor
sub
mov
and
adc
and
jmp
ja
fildll
adc
je
dec
es
icebp
xchg
push
xchg
clc
aas
and
js
cmp
sbb
pop
cmp
sub
insb
push
jmp
mov
push
stos
mov
mov
mov
mov
lret
cmc
repz
shlb
pop
mov
cmpsb
aaa
push
gs
mov
imul
repnz
insl
fptan
and
mov
iret
push
mov
insl
ja
mov
hlt
repz
push
mov
jecxz
pop
movsb
arpl
repnz
icebp
adc
iret
loope
adc
pusha
dec
jmp
pop
fnsave
pop
scas
xorl
mov
mov
push
hlt
fisubs
push
push
mov
and
cld
loopne
xlat
pushfw
loop
ljmp
pushl
xchg
fsub
pop
adc
js
sbb
test
decl
or
fsubrl
mov
cwtl
mov
jbe
pop
je
pop
jmp
icebp
sbb
dec
ds
cmp
in
xorl
mov
or
cld
push
mov
lret
into
or
mov
bound
cltd
fsubs
in
and
lods
in
adc
mov
lock
mov
inc
push
mov
cmc
sbb
xchg
sub
shlb
sbb
repnz
adc
push
shll
adc
inc
mov
dec
inc
ror
mov
pop
mov
xchg
pop
test
vmovhps
sbb
xchg
pushf
mov
inc
leave
in
ja
loop
mov
cmpsl
cmp
inc
dec
dec
test
pavgw
stos
cwtl
jns
and
push
sbb
pop
jo
imul
sbb
testl
add
or
test
cmp
mov
ja
push
rolb
cltd
int3
sarb
inc
or
fs
das
insb
ret
mov
call
mulb
icebp
inc
int
loopne
mov
cmp
in
jecxz
lds
adc
dec
jecxz
pusha
mov
mov
out
dec
in
add
repnz
sti
dec
or
mov
and
push
mov
std
sub
cmp
or
cmp
dec
jno
ljmp
cltd
mov
adc
jmp
push
mov
dec
dec
sbb
add
push
push
out
dec
outsb
add
inc
push
mov
data16
cmp
xlat
add
push
push
pop
js
lahf
push
movb
mov
fildl
roll
aaa
dec
mov
xor
pop
bound
jo
cmp
push
pop
dec
out
dec
mov
bound
push
pushf
mov
or
xor
xor
sub
push
push
cmp
ja
imul
ret
lods
add
outsl
rdtsc
push
mov
mov
cmpsb
inc
fidivs
mov
jo
xchg
cmp
mov
mov
iret
mov
rolb
add
psadbw
lods
data16
mov
jmp
setns
pop
in
fisubrl
fimull
xchg
int
lods
sbb
cmp
sub
or
lcall
sahf
cwtl
mov
sar
lcall
fs
mov
fldcw
imul
les
mov
pusha
inc
cli
and
mov
adc
into
or
sti
out
xor
mov
ret
clc
cmp
fwait
rolb
mov
adc
mov
stc
mov
jle
hlt
cli
adc
add
push
xchg
and
xlat
out
aam
xlat
push
pusha
cmp
rol
mov
or
imul
scas
and
sub
mov
fisubs
outsb
xchg
sbb
cmp
mov
imul
lret
iret
sahf
cs
sbb
jle
xor
fcmovne
mov
cmp
lcall
stc
pop
cmp
rorb
repz
dec
aad
daa
inc
fistps
inc
mov
mov
or
or
pop
imul
clc
pop
movhlps
aam
and
orl
cmp
out
repnz
or
test
in
xchg
and
or
jle
ret
or
insb
arpl
push
sarb
sub
movsb
inc
daa
or
push
lcall
dec
into
xor
mov
mov
in
out
xchg
or
ret
xchg
mov
bound
inc
sbb
adc
dec
sbb
mov
sbbb
ljmp
or
push
mov
jns
sub
imulb
out
pop
scas
lock
xchg
inc
popa
rolb
cwtl
sub
sub
sub
into
sahf
inc
std
aam
es
shr
or
dec
fadds
daa
aaa
push
and
push
jmp
aad
nop
push
repnz
mov
or
enter
sub
movsl
pop
adc
cmpb
mov
int3
mov
stos
dec
xchg
testb
not
aas
repnz
ss
loopne
adc
mov
outsb
stos
xchg
orl
ret
jbe
jge
in
into
jecxz
sbb
rcrl
inc
inc
pop
mov
ror
stc
popa
je
in
fs
and
cmpl
sahf
arpl
xor
cmpsl
mov
inc
mov
xlat
inc
push
or
shlb
aam
in
xor
test
lahf
pop
daa
in
cmp
mov
push
addr16
fidivs
lret
jo
mov
frstpm(287
rcll
mov
nop
add
sbb
pop
mov
sbb
xor
xor
lret
das
jne
sub
dec
or
push
or
push
adc
insb
pop
push
xchg
xor
imul
sbb
pop
xor
sbb
cmp
jle
mov
mov
sbb
sbb
mov
adc
push
fwait
test
shll
and
push
imul
adc
pop
sti
cmp
icebp
adc
push
push
test
or
in
lret
lods
rcrl
adc
xor
std
test
xor
fisttpll
mov
or
lock
xchg
adc
mov
dec
setns
test
out
rcll
push
mov
sub
push
push
ret
pop
xchg
popf
ds
mov
adc
sub
frstor
outsl
xor
fmuls
int
jmp
das
xor
in
mov
cmp
cmc
out
stos
inc
push
push
lods
push
arpl
lods
or
sbbl
pop
jns
dec
shl
or
dec
enter
cld
xchg
cmc
inc
pop
imul
scas
add
adc
push
int3
in
loop
dec
xor
insb
lret
ljmp
in
push
dec
and
mov
dec
mov
out
or
add
xchg
insb
xor
xor
pushf
sbb
rcll
mov
decb
mov
fdivs
mov
ret
xor
mov
fistpl
cmpl
push
fs
mov
insb
pop
push
filds
nop
pushf
adc
jns
push
loop
loope
mov
repnz
enter
ret
pop
dec
ret
xor
cltd
mov
mov
xchg
pop
adc
pop
mov
cmp
dec
mov
add
mov
pop
mov
mov
sbb
lea
idivl
pop
jg
aam
sub
mov
jmp
imul
adc
arpl
or
xor
and
mov
cwtl
shlb
pop
pop
mov
mov
push
pushf
scas
imul
mov
push
jae
xchg
push
fwait
leave
sarl
cmp
xchg
push
mov
ret
sub
ret
mov
xchg
mov
loope
pusha
xchg
dec
push
sbb
xor
inc
clc
aad
shlb
lods
and
jle
jge
xlat
jle,pt
test
lret
pop
adc
aaa
negl
sarb
dec
mov
sub
cmp
mov
stc
mov
fcomps
push
call
pop
sub
mov
lods
cmp
call
arpl
sbb
pop
ret
fistpll
lods
inc
cmp
push
arpl
movsl
mov
mov
lcall
inc
jae
mov
in
sub
dec
das
jle
lea
xchg
iret
ljmp
outsl
sub
dec
lds
inc
ljmp
inc
xchg
sbb
push
lret
mov
add
jl
pushf
or
popl
leave
rcrl
pop
test
jbe
popa
cmpsb
enter
xchg
inc
sbb
cwtl
fsubl
mov
inc
sbb
mov
stos
cld
cmp
xchg
jecxz
mov
mov
jg
aam
cmp
iret
cmc
and
or
mov
popf
aad
rcll
mov
cli
lcall
lret
push
dec
push
test
cmpl
mov
rcr
outsl
sub
in
xchg
mov
stc
mov
jo
xlat
push
roll
repnz
andb
mov
adc
scas
or
mov
cmpsb
jge
push
in
mov
pop
mov
stos
sub
rcrb
outsl
mov
cli
sbb
add
sarb
lods
stos
sub
pop
lock
aad
xchg
mov
cmp
push
jge
dec
test
and
pop
mov
testb
rol
popf
mov
insb
mov
add
lcall
push
out
sub
mov
push
cwtl
push
or
mov
dec
testl
inc
mov
out
sbb
notb
ret
pushf
rorl
test
mov
js
add
lahf
fimull
mov
xchg
xchg
stc
mov
ja
fbld
in
xchg
subb
jnp,pn
insl
jmp
sub
scas
inc
sub
fs
les
in
rorl
lcall
fnsave
dec
jb
push
push
negb
cmpsb
xchg
xor
jmp
paddw
roll
jmp
outsb
clc
sub
scas
cmp
cmp
mov
sub
inc
add
xchg
push
xor
scas
xorb
cmp
call
jl
inc
cmpsb
inc
jg
mov
fsubrl
push
aas
in
dec
inc
shll
xchg
stos
sbb
fs
nop
ret
xor
push
mov
jg
int
fs
mov
jne
loop
cmp
dec
mov
cld
adcl
mov
sahf
or
jg
mov
xchg
pop
push
and
push
or
pop
xchg
cmp
lret
mov
sbb
mov
imul
hlt
mov
pop
and
xchg
cs
data16
pop
pop
pop
out
mov
jp
js
adc
and
xor
lret
iret
inc
aam
inc
mov
mov
outsb
ja
sub
test
ljmp
mov
adc
pop
xchg
jl
cmp
sbb
dec
test
sub
aad
xor
sub
or
cmp
add
mov
ljmp
and
mov
fsts
int
xlat
mov
mov
leave
lods
lods
bound
xlat
testl
sbb
test
jne
pop
jne
cmp
repnz
cmpsb
aas
repnz
fadd
mov
mov
icebp
lods
stc
aas
mov
data16
loopne
int3
lret
ret
add
adc
pop
inc
imul
ds
sub
inc
xchg
inc
fildll
mov
int3
scas
jg
aas
hlt
mov
cmpsb
testb
fbstp
jns
sar
fimull
popf
std
xor
insb
xor
jnp
sub
push
dec
sub
insl
mov
sbb
movsb
mov
dec
enter
fwait
and
jbe
inc
fildl
test
das
jb
sub
or
dec
xchg
sbb
fwait
mov
and
xor
pop
push
cmp
popa
xor
lcall
cmp
dec
lods
dec
push
xchg
push
sbb
inc
jns
fistps
add
mul
mov
aad
mov
test
cmpsb
push
sbb
movsb
push
fs
mov
mov
test
pop
jge
mov
arpl
std
jge
lcall
scas
test
mov
fcmovnbe
xchg
ljmp
loopne
xchg
push
dec
sub
dec
push
dec
dec
subb
rcll
xorb
cmc
dec
cmpsb
jo
lcall
sbb
push
add
push
sub
xchg
xchg
cmp
ja
ret
call
sbb
ljmp
shlb
lret
dec
lods
fs
rol
fwait
rorb
pop
pop
mov
pop
arpl
outsl
push
add
cmpsb
stos
pushf
xlat
and
pop
iret
pop
loope
mov
imul
jge
sahf
push
cmpb
clc
mov
dec
mov
js
roll
inc
in
jb
cld
stos
repz
and
in
add
arpl
popf
sbb
ds
sub
addb
rcrl
inc
push
xorl
sub
adc
aam
scas
pcmpeqw
jp
stos
xchg
stos
lcall
push
cmp
mov
rol
and
add
test
sti
sub
addr16
ds
std
dec
test
push
rorb
stc
mov
les
sub
es
les
rorl
ds
dec
add
pop
popf
jno
into
xchg
dec
negb
out
xchg
hlt
xchg
stos
jnp
lret
fisubrl
cltd
gs
ficomps
and
mov
and
adc
inc
jg
lea
jne
fldl
pop
add
jmp
cmp
jb
repz
mov
loopne
pop
mov
pop
lret
push
or
adc
into
in
pop
or
mov
or
out
mov
mov
aas
push
xor
out
xor
icebp
decb
xchg
pop
je
or
sub
popf
cmp
inc
cmp
jmp
pusha
mov
pop
jbe
and
mov
xchg
jp
in
adcl
or
sbbb
xchg
stc
sbb
rolb
nop
aaa
inc
jns
jp
test
jbe
mov
mov
aam
or
js
mov
fcmovne
ljmp
xchg
jbe
inc
xor
js
lods
movsb
movsl
and
push
cmpsl
out
push
ss
pusha
ret
pop
adcb
pop
push
inc
rolb
dec
inc
test
loope
outsb
loopne
lods
clc
scas
cs
pop
neg
cld
lods
cwtl
stos
push
ficoms
sbb
mov
scas
pop
sub
lods
sub
and
icebp
cs
jae
mov
mov
icebp
mov
fistps
rcr
je
xchg
mov
movsb
pop
mov
iret
mov
repnz
push
xor
push
iret
inc
ljmp
fwait
dec
into
out
jmp
nop
add
xor
adc
add
shr
add
repnz
jmp
loop
ljmp
mov
adc
in
std
imulb
js
ret
push
or
fdivs
cmp
imul
dec
je
mov
or
xor
arpl
lea
jl
test
popf
mov
pop
cmpsb
sbb
xor
add
fs
and
into
push
fadds
cmp
popf
lds
inc
xchg
mov
xchg
push
inc
jp
adc
push
sar
mov
lahf
inc
or
inc
insl
push
adc
jg
sub
pusha
pop
mov
in
pushf
es
jns
xor
loopne
jg
jb
shlb
mov
lea
adc
lods
shlb
cmpsl
xchg
or
mov
int3
xchg
jle
fstpl
mov
cs
mov
subl
lret
test
and
out
out
lahf
xor
ja
sub
jle
scas
out
mov
jb
cs
mov
jo
insl
adc
adc
repz
inc
push
mov
sub
repz
adc
push
or
add
sub
cmp
lret
js
jg
stos
dec
mov
insl
call
je,pn
xchg
or
push
gs
outsl
stos
mov
movsb
mov
es
gs
pop
sub
call
loopne
je
test
sarb
pushf
sti
test
ret
loope
fxam
in
mov
inc
adc
clc
pushf
rorb
es
sbb
sub
pop
bound
pop
fnstcw
ljmp
imul
push
adc
mov
add
popf
loope
cmpsb
and
popa
jne
jg
imul
loopne
sub
and
push
aad
movsb
fwait
push
dec
int
sbb
cli
mov
jnp
clc
xchg
push
cmp
inc
push
mov
fisubs
out
xchg
icebp
in
pusha
sbb
jne
mov
mov
sbb
and
cmpb
xor
inc
jae
mov
test
rcrb
cmp
dec
push
test
push
pop
insl
jno
gs
adc
mov
mov
iret
inc
push
cmc
xchg
jmp
clc
or
daa
lock
fisubrs
fbld
cmp
clc
sti
mov
jb
xchg
inc
leave
push
adc
out
insb
dec
push
loopne
shlb
inc
push
jo
insl
add
jns
std
je
out
in
xlat
and
jmp
pop
mov
lcall
adc
testl
jl
movsl
leave
sqrtps
push
sub
pop
movsb
pop
js
sub
sub
clc
add
mov
fistpl
jno
adc
inc
adc
or
push
jecxz
pop
adc
stos
push
shr
mov
xchg
mov
fisttpl
mov
mov
lods
or
test
outsb
dec
fistps
repnz
je
loopne
push
imul
daa
push
scas
mov
lods
mov
pop
mov
xor
mov
mov
lds
adc
sub
and
and
add
push
and
adc
nop
cwtl
jg
sub
popa
mov
jg
sbb
xchg
add
push
lock
icebp
xchg
xchg
out
xchg
movsl
andb
jmp
and
into
push
fs
ja
insl
xchg
cmc
lahf
adc
xchg
jp
js
mov
adc
mov
jg
std
xchg
es
mov
rolb
push
int3
adc
fisttpl
clc
mov
jb
test
push
push
in
inc
aad
jno
lret
mov
insl
mov
stos
pop
rcr
sbb
loopnew
data16
cmp
pop
cli
outsl
loope
adc
or
add
mov
cmp
fstpl
fnstcw
mov
pop
inc
andl
test
cmp
cmpb
jmp
mov
jle
dec
mov
into
xchg
mov
and
sahf
pop
add
inc
dec
stos
lret
repnz
test
fs
and
and
and
cmp
add
sbb
cmp
stc
xchg
and
sahf
outsl
and
xor
jo
hlt
pop
mov
mov
pop
lret
jo
xor
jmp
jg
mov
mov
mov
fwait
adc
stc
jne
scas
int3
or
scas
cmpsl
repz
jle
mov
ljmp
ja
add
cltd
xor
xlat
inc
insb
and
hlt
add
sub
push
out
arpl
push
push
cli
dec
loop
cmpsb
lret
loopne
rorb
dec
mov
push
jns
cli
inc
lds
out
pusha
xlat
data16
cmp
xchg
sub
loop
mov
dec
cli
sub
push
imul
or
in
jl
div
notb
fucom
or
pusha
dec
bound
mov
jmp
lcall
sbb
push
dec
push
gs
xor
loope
mov
mov
adc
test
lret
fucomp
sti
fstps
ja
movsl
add
jne
pop
fucomip
cmp
pop
shlb
les
cmp
aad
jle
or
int
sahf
movsl
loop,pt
dec
push
pop
adc
or
sbb
mov
stc
push
mov
push
out
rorl
insb
in
pop
pop
dec
lahf
adc
aam
xchg
lahf
jno
fldt
imul
aaa
popf
mov
push
mov
enter
test
jb
idivl
aam
sbb
leave
or
and
and
jle
fldenv
pop
sbb
and
gs
inc
pushf
sub
sub
add
repnz
movsb
cwtl
dec
cwtl
das
sub
adc
mov
and
jmp
push
mov
mov
cs
and
aad
sub
out
pop
pop
mov
cmp
std
jo
push
lea
repz
push
sbb
call
jns
sub
js
les
lret
xlat
pop
sbb
nop
movsb
and
insb
lods
call
add
adc
mov
sbb
pop
jns
mov
rorb
jbe
insl
loopne
cmpsb
pop
lods
xchg
addr16
cwtl
ja
out
call
and
insl
cmp
sbb
inc
addr16
data16
jo
xor
mov
mov
sbb
sub
imul
incl
incb
xchg
test
pop
pop
sub
jnp
loope
jmp
movsb
dec
out
mov
imul
daa
cmc
mov
in
in
imul
xchg
loope
lret
imul
movsb
jg
gs
mov
pop
mov
nop
lods
mov
int
js
jmp
repz
inc
mov
ljmp
jl
xchg
fisttpll
aaa
jbe
pop
roll
stos
jae
pushf
ret
push
cmp
outsl
hlt
inc
inc
int3
pop
mov
dec
mov
test
mov
xor
adc
outsl
sbb
mov
out
cwtl
aas
or
ljmp
inc
push
stc
arpl
ss
push
pop
adc
cmp
fstps
add
enter
movsb
aam
sbb
int3
mov
dec
xchg
scas
sbb
mov
inc
inc
push
jns
shll
notb
cmp
adc
xchg
insl
mov
clc
mov
pop
cmpsb
pop
fidivs
es
gs
es
sbb
stos
fidivrl
jno
inc
mov
in
in
dec
add
lcall
xchg
lret
pop
mov
stc
mov
js
sbb
or
dec
push
out
andb
aaa
xor
mov
pop
jb
xor
fcmovu
decb
loop
arpl
mov
mov
xor
or
xor
cld
repz
sub
xor
je
jecxz
pusha
mov
aaa
add
rcll
pop
pusha
das
arpl
mov
push
rcll
xorl
sub
sub
test
pop
movsb
adc
and
push
mov
xlat
hlt
mov
jle
pop
inc
mov
jb
addr16
adcl
add
std
xchg
repz
or
add
ja
daa
xchg
mov
insb
enter
popf
cmpsl
imul
and
stos
dec
test
fcompl
dec
mov
movl
enter
pushf
xchg
push
pop
ss
dec
lret
das
fnstenv
xchg
mov
mov
cmp
sti
xor
in
jp
xlat
mov
mov
inc
xor
in
sbb
pop
orl
shl
sbb
sub
and
out
lcall
fstl
mov
int3
aad
xor
xchg
stos
repnz
cmp
popa
xor
mov
add
cld
inc
inc
and
nop
inc
cld
push
dec
sub
fcoms
adc
imul
push
xor
testl
repnz
push
lea
fiadds
pushf
push
jno
addr16
push
add
adc
out
mov
inc
int
popf
in
sbb
enter
push
addr16
inc
dec
nop
insb
pop
rolb
dec
mov
pop
arpl
repz
scas
mov
cld
cmpsl
cmp
mov
lods
pop
mov
xchg
push
push
mov
popf
cli
xor
fs
xor
xor
xchg
mov
nop
push
fisttpl
add
sub
daa
bound
pusha
lock
push
jg
int
jae
cli
sbb
push
insb
fdivrs
adc
xor
lds
int
jae
add
aaa
insl
cmp
jnp
jp
ds
popa
pop
scas
mov
rorb
push
cwtl
add
mov
or
xchg
ljmp
loope
add
or
mov
xchg
jne
cs
icebp
pop
jmp
mov
push
push
enter
inc
scas
jbe
lock
enter
incl
subb
fdivrp
mov
jo
mov
lret
xlat
xchg
pop
ret
sub
iret
jg
fdivl
mov
orl
mov
cmp
mov
pop
add
out
or
adc
mov
mov
leave
dec
mov
and
andb
and
je
push
mov
lods
or
roll
jo
dec
or
cmp
fstpt
adc
test
shl
fistps
mov
outsb
sub
dec
xor
lret
or
adc
sub
cmp
or
pop
movsl
inc
repnz
or
sahf
repnz
inc
out
xchg
or
out
movsl
insb
inc
shll
test
mov
aaa
push
and
adc
rolb
outsl
call
fisttpl
or
cmp
jno
rcr
es
nop
outsb
lea
mov
icebp
pushf
mov
xor
xchg
lods
fld
push
out
sbb
test
cmp
sbb
lahf
cld
cmp
mov
xor
addr16
into
mov
jbe
into
insl
mov
jae
add
mov
mov
mov
pop
out
int3
xorl
shll
dec
pop
stos
sub
pushl
adc
mov
pop
daa
fwait
pop
cwtl
loope
dec
cmpsb
testl
fsubrs
icebp
jle
xor
dec
push
inc
mov
push
jmp
jnp
call
inc
rcl
pop
sub
mov
aaa
dec
cld
cs
adc
pop
outsb
adc
push
xlat
push
test
cmp
xor
movsl
xchg
mov
loope
jecxz
ret
lods
xor
mov
xor
xchg
pusha
not
scas
and
xorb
xor
fdivrl
js
leave
jae
or
jg
or
sbbl
sarb
jmp
cs
icebp
test
out
in
pop
call
scas
fdivrl
jge
add
out
mov
xor
xchg
push
je
fistpl
jae
xchg
pop
dec
scas
mov
jb
fs
nop
cmp
ja
pushf
xchg
aam
jecxz
int
bound
outsb
in
sbb
jbe
repnz
sbb
push
and
je
dec
test
test
in
pop
add
xchg
and
mov
mov
inc
sbb
in
dec
ror
fucomip
lods
push
fiadds
dec
sbb
fwait
call
outsb
push
fwait
or
sub
negl
push
and
jg
mov
lcall
les
ret
inc
lcall
stos
xlat
pushf
cwtl
add
add
push
sub
insb
and
mov
lcall
xchg
iret
pop
jmp
aam
add
mov
sub
ds
sub
jno
out
shll
push
mov
in
or
data16
ss
jb
adc
jmp
lcall
and
imul
mov
leave
outsb
xor
push
inc
daa
jg
movsb
xor
jl
imul
mov
flds
icebp
cld
leave
or
or
pop
ret
adc
jb
fcoms
jae
adc
roll
jne
mov
into
out
divb
lock
call
sti
scas
cmp
rorb
push
int
fldt
xlat
cmp
in
xor
mov
ret
stos
or
inc
lret
mov
into
push
lret
and
lret
sbb
sbb
shrl
pop
sub
gs
inc
and
popf
inc
push
hlt
or
cltd
ja
mov
mov
xor
xor
ret
jge
fucomp
and
js
jp
sub
xlat
jmp
ret
push
push
add
in
or
int
and
cmpsl
push
xor
mov
lret
int
lahf
mov
adc
jnp
test
call
mov
insl
push
pop
bound
mov
std
mov
dec
dec
jmp
aam
pop
pop
sahf
xchg
and
push
sbb
jle
sbb
test
and
enter
in
or
aam
shrb
imul
xlat
inc
jl
lret
mov
dec
outsl
push
aam
pusha
or
adc
push
pop
jge
out
mov
leave
add
leave
cwtl
inc
or
ja
jecxz,pt
int3
jp
xchg
mov
lea
repz
push
inc
cmp
movsb
or
sbb
push
fsubrl
mov
adc
cwtl
adc
inc
pop
or
rcll
dec
sti
mov
jae
or
into
and
xor
sub
sub
push
stos
dec
xorb
pop
or
je
xor
or
lds
fcomps
xchg
loopne
cmp
popf
jmp
in
stc
insb
js
push
std
inc
ret
add
aas
lret
ret
cmp
dec
pop
out
sub
jge
aad
xor
cmp
stos
scas
aaa
push
push
lock
dec
add
inc
pusha
adc
in
scas
pop
xchg
aam
iret
dec
dec
arpl
xchg
sbb
jae
or
imul
xchg
xchg
test
sti
gs
mov
mov
or
inc
add
xchg
inc
dec
mov
in
out
faddl
add
mov
xchg
int3
fists
mov
mov
fs
roll
push
shll
inc
icebp
lret
cli
xor
inc
fs
mov
hlt
ret
inc
or
jl
ss
fcoml
cltd
mov
inc
cmp
shlb
and
jl
test
add
insl
sbb
into
inc
sub
ljmp
in
leave
pop
fiaddl
cmp
jae
movsl
mov
lock
inc
jmp
fucomi
icebp
xchg
jno
push
shlb
aad
subb
ljmp
cs
xchg
scas
fdivp
xor
xor
ret
pop
add
sub
fsubrl
xor
xlat
push
daa
mov
stc
sub
xchg
xor
fbld
dec
outsl
pop
dec
jl
push
lods
sbb
push
loopne
jnp
mov
push
xchg
test
les
push
add
jmp
xchg
sbb
pop
lahf
jne
jge
and
lock
pushl
lea
sbb
adc
cmp
mov
adc
pop
push
ret
out
add
andl
xor
inc
les
sub
jmp
sub
test
and
mov
pop
paddb
rcrl
in
insb
jo
dec
shrb
sbb
xor
dec
sbb
dec
xchg
outsl
insb
lds
fcmovnu
orl
das
pop
in
out
imul
mov
cmp
in
jo
add
aas
dec
in
or
lret
jecxz
dec
mov
xor
lds
mov
pop
mov
inc
pusha
lahf
cmp
mov
cwtl
push
xor
add
jl
add
push
cmpl
iret
cmp
inc
cmp
mov
es
jle
mov
inc
loop
and
in
mov
mov
mov
lahf
or
add
inc
test
mov
sub
inc
pop
mov
sub
dec
pushl
fdivr
loop
push
mov
lock
xor
outsb
cmp
mov
adc
mov
jne
rorb
mov
pop
jmp
xchg
adc
lahf
xor
add
mov
stos
sub
loope
lcall
xchg
or
inc
iret
xchg
jle
popa
rcr
enter
jbe
jp
push
loop
imul
lds
enter
daa
addr16
test
pop
dec
add
jno
nop
mov
cmp
push
cmp
xor
inc
aas
test
decl
inc
or
xor
cwtl
mov
mov
orb
xchg
pusha
fcmove
inc
lahf
jmp
loopne
push
push
xorl
test
outsb
sbb
into
push
int3
xchg
fs
inc
and
xchg
xchg
sbbl
and
cli
int3
or
cld
cmp
add
push
or
jge
pusha
or
cmpsl
mov
in
cld
mov
dec
cmp
dec
loopne
or
mov
sbb
cld
lds
dec
or
js
mov
rolb
push
add
or
pushf
mov
dec
jle
addb
push
in
mov
ljmp
mov
xchg
cmpsb
sbb
scas
jl
pop
cmp
mov
int3
push
imul
push
push
ret
or
in
cmp
mov
cmc
mov
out
mov
ret
fisubs
lret
add
mov
inc
jo
lock
out
inc
cmpb
repz
or
lahf
int3
ret
push
addb
xchg
shll
rorb
das
xor
cmp
in
sub
out
dec
popf
ret
cmp
in
imul
and
inc
or
sub
loop
mov
jge
inc
sub
lret
imul
push
cld
pusha
cmc
stc
testl
xchg
imul
dec
subl
mov
and
sbb
sub
mov
scas
sub
xor
lock
outsl
pop
sbb
pop
movsl
xor
mov
in
adc
pop
xchg
sahf
xchg
scas
sub
mov
mov
inc
mov
sub
dec
inc
dec
loopne
test
jge
xchg
adc
pop
mov
icebp
xchg
mov
sub
pop
lret
push
xchg
mov
push
xchg
in
out
mov
mov
test
insl
loop
dec
push
or
mov
mov
xor
int3
xor
dec
out
sub
lock
lods
sub
ljmp
bound
movsb
pop
inc
sbbl
shl
pop
fidivrs
imul
add
cmpsl
cmpsb
int
mov
jmp
cmp
or
mov
jae
pop
inc
or
loop
cltd
jns
lods
scas
pop
movsl
iret
pop
ret
adc
ffreep
pop
xlat
sub
inc
sbb
daa
xorl
pop
mov
adc
dec
aas
hlt
fsubrl
outsb
aam
int
mov
cmpsb
dec
bound
fnstcw
scas
push
sbb
fs
popa
adc
add
push
scas
push
jge,pn
cli
pop
push
add
aam
fmuls
sbb
pop
xchg
int3
pusha
jb
mov
scas
fdivrs
push
dec
push
dec
push
mov
rclb
in
dec
test
test
xor
cmp
out
lods
and
xor
xchg
into
popa
mov
jl,pn
dec
and
sub
std
jbe
mov
jbe
dec
sbb
lret
sarl
sbb
aam
sub
out
repnz
sti
and
inc
dec
pop
inc
nop
push
testb
popa
lds
js
or
sub
push
cli
test
mov
xchg
and
xchg
pop
xor
add
repnz
call
movsl
dec
sub
fcomi
scas
ret
pop
mov
sub
pop
aam
and
jo
mov
dec
test
movsb
mov
xor
push
mov
mov
mov
sahf
xchg
jl
mov
add
xor
mov
adc
in
dec
pop
mov
xor
mov
pop
xchg
or
sbb
adc
mov
addl
cmc
sti
xor
pop
jecxz
mov
fmuls
cmp
cmp
xor
sbb
test
pop
mov
testl
shll
andl
mov
lret
mov
mov
int
movsb
test
xchg
adc
aaa
or
mov
and
lock
cmp
idivb
or
push
sbb
mov
mov
pop
cli
gs
and
push
mov
push
jle
pop
xor
dec
jb
loopne
jo
dec
jae
or
movsb
jg
pop
jnp
jecxz
adc
imul
jl
pop
iret
scas
cmp
or
adc
stc
daa
push
xor
imul
mov
test
movsl
inc
xorl
pusha
pop
clc
push
outsb
push
rcrl
fidivl
mov
add
push
cmp
fs
sarb
pop
mov
repz
stos
and
inc
pop
mov
loop
push
sbb
imul
in
stos
add
adc
sub
fmull
adc
mov
lea
mov
pushf
dec
jo
ljmp
clc
push
cmp
sub
or
lods
lret
adc
push
das
frstor
int3
mov
nop
sub
shlb
icebp
out
xor
dec
popa
inc
push
pop
adc
or
and
stos
push
mov
add
cmc
es
inc
imul
daa
mov
mov
adcl
and
xor
xchg
jl
adc
push
sti
xor
push
pushw
mov
pop
mov
push
cmpsl
inc
cli
xchg
test
xor
in
jno
pop
das
sbb
cmpsl
out
xchg
dec
xor
xor
test
popa
mov
fiadds
frstor
inc
outsb
insb
lahf
pop
inc
xor
adc
mov
imul
fsubl
lods
data16
dec
dec
xchg
popf
adc
sub
inc
and
hlt
lock
mov
push
jo
mov
and
out
and
lahf
paddq
lods
lods
daa
jle
std
in
sbb
mov
adc
cmpsl
mov
mov
outsb
leave
xchg
or
cmp
daa
push
xchg
xchg
cmp
adc
adc
push
push
out
cs
in
add
loope
push
inc
lret
test
sahf
and
cmp
aam
rcr
inc
insb
pop
add
pop
popa
aad
lahf
inc
jae
in
fadd
mov
or
jecxz
sub
mov
or
test
push
xchg
and
xchg
xor
mov
mov
icebp
std
out
fcmovnb
leave
or
xchg
mov
pop
mov
pop
hlt
out
cmpsb
inc
sbb
push
xchg
pop
std
xchg
lahf
jecxz
stc
cmpsb
xor
ja
mov
loope
roll
inc
loop
dec
cmp
fwait
loop
sub
xchg
sbb
sub
sarb
dec
adc
dec
pop
mov
adc
xor
adc
inc
rolb
pusha
fisubl
icebp
leave
sbb
xchg
mov
ljmp
movb
pusha
sub
inc
xchg
mov
cli
cmp
and
pop
jecxz
je
mov
add
cmpsl
add
add
daa
adc
mov
lods
push
adc
in
push
jmp
sub
adc
mov
ret
sbb
mov
clc
push
inc
aaa
cmp
lods
mov
fistpl
lret
push
pop
lahf
jp
std
xchg
scas
or
sti
pushf
and
icebp
pop
add
enter
push
jnp
xchg
sub
popf
dec
add
mov
pop
xor
inc
push
popa
fcmovbe
push
dec
clc
fiaddl
mov
or
xchg
lods
pop
and
mov
roll
xlat
movsl
and
and
sbb
sub
adc
sbb
mov
push
push
loopne
jle
outsl
push
in
lock
and
pop
dec
fwait
add
push
shrl
inc
das
inc
lods
out
fsubrp
mov
das
xchg
ds
push
lret
fcoms
test
aaa
ja
inc
ljmp
xorb
sbb
cmp
push
push
lcall
subb
lahf
mov
pop
mov
mov
sbb
pop
les
xchg
jb
mov
mov
or
sbb
xor
call
sahf
adcb
push
xchg
add
cmp
push
and
inc
jns
mov
add
adcl
roll
cmp
mov
imul
in
lock
sbb
jle
dec
dec
popa
loop
inc
and
jns
ror
pop
aas
pop
lret
xor
xchg
lahf
mov
mov
jno
sub
addr16
std
adcl
mov
xor
outsb
shrl
aam
scas
mov
xor
cli
into
adc
xchg
in
jle
daa
add
xor
mov
lret
stos
stc
loope
in
xor
fistpl
xchg
sbb
cmp
mov
pop
call
jl
enter
test
mov
mov
cmp
addr16
sbb
js
ja
insl
xchg
or
push
sub
ret
inc
out
hlt
fisubs
xchg
and
pop
int3
mov
adcb
fdivr
jl
dec
add
cwtl
outsb
sahf
add
stos
xchg
xchg
mov
fs
push
scas
pop
sub
es
loopne
sbb
lods
push
inc
jb
inc
mov
loope
lods
out
clc
sbb
lds
adc
cbtw
add
ljmp
push
dec
mov
mov
jmp
push
addl
cmp
or
mov
cltd
pop
int
xchg
adc
sti
out
mov
sar
sti
xor
enter
fimuls
push
and
ljmp
and
pop
outsb
adc
adc
adc
lods
sbb
xchg
push
loope
movsb
jns
jnp
out
xor
push
sub
int3
lcall
push
pop
dec
jne
push
pushf
sub
mov
int3
fbld
sub
fidivl
cmp
sbb
mov
fmuls
add
pusha
xlat
das
adc
mov
imul
add
pop
loope
fsubr
and
test
sub
pop
pop
pop
int
pop
ss
adcb
jae
fs
pusha
xchg
shll
mov
pop
notl
jle
inc
clc
rcr
xchg
inc
xor
push
push
mov
push
sub
stos
dec
stc
xor
dec
gs
pop
aaa
jmp
mov
lea
mov
sub
adc
je
cmpsb
mov
sbb
mov
inc
inc
mov
pop
stos
sbb
jl
repz
and
pop
loop
push
and
jge
mov
sahf
in
jmp
jl
pop
mov
ret
sbb
sbb
xchg
out
jle
into
movsl
cmpsb
rclb
jmp
shr
icebp
ret
enter
lods
insl
add
adc
pop
adc
xor
rol
leave
jge
mov
jae
pop
cmpsl
pop
rcrl
mov
test
repz
sbb
ss
jns
out
int3
mov
inc
cwtl
jg
dec
pop
mov
iret
loopne
dec
mov
js
mov
popa
sub
dec
pop
mov
push
js
cmp
mov
loop
fldenv
and
dec
cwtl
aas
push
xor
cmc
shlb
lcall
arpl
lahf
dec
or
pop
mov
shrl
loop
push
loope
and
push
mov
sub
mov
adc
movsb
add
lret
dec
iret
push
sub
iret
outsl
int
jae
pop
stos
dec
mov
jae
jge
fs
lret
push
xchg
push
arpl
es
mov
inc
into
push
lods
aaa
add
enter
cmc
in
pop
jge
cmp
out
repnz
cmp
cli
gs
add
out
cmpb
mov
shll
sbbl
push
or
out
out
or
repnz
int
xchg
xchg
ret
sub
xor
fwait
insl
sahf
jae
push
shll
insl
jo
xchg
mov
shll
pop
inc
in
imulb
sbb
and
jge
gs
in
sub
dec
ds
negl
xchg
cmp
inc
xor
mov
cmp
mov
in
mov
mov
pushf
adc
cltd
das
sahf
rorl
pop
pop
aam
inc
add
es
scas
sub
jge
cs
jmp
add
pop
fnstcw
movsb
jecxz
lret
xchg
add
xchg
inc
inc
or
int
mov
xchg
sbb
jbe
je
test
sbb
push
mov
xchg
js
lock
shl
mov
pop
mov
mov
jmp
sub
dec
bound
pop
repz
std
mov
push
jg
sbb
add
lds
nop
mov
dec
pslld
insl
loop
inc
jle
int3
sahf
add
outsb
popa
enter
and
sub
push
mov
fs
movsl
adc
out
popa
sti
in
and
nop
into
xlat
fldt
or
jecxz
xor
and
imul
arpl
scas
out
mov
xchg
in
mov
inc
adc
mov
in
aaa
inc
in
sbb
mov
and
pop
push
mov
jno
mov
jae
cmp
cltd
outsl
outsb
pushf
cltd
jb
lahf
fstpl
push
xchg
test
lret
xchg
and
fistpll
or
push
push
mov
movsb
inc
ja
dec
dec
xor
jbe
loop
loop
mov
aaa
mov
push
ds
ljmp
aaa
sub
adc
dec
add
adc
test
or
jg
sub
xor
bound
jge
mov
hlt
mov
lcall
or
ja
add
push
lods
adc
dec
hlt
xchg
and
dec
stos
pop
cwtl
push
iret
xchg
ret
out
int
or
stos
cli
xor
out
sarl
sbb
mov
mov
cmc
push
arpl
pop
and
add
add
add
jne
cwtl
jbe
xor
stc
in
int3
cmpsb
sub
loop
pop
mov
in
pop
xor
dec
shlb
or
jnp
jnp
inc
push
insl
sbb
pop
push
fsubrs
mov
cs
cli
inc
xchg
mov
jmp
xchg
mov
pop
stc
mov
or
cmp
sti
cli
rolb
enter
mov
xor
out
jle
pop
lret
data16
xlat
jo
aam
aaa
fwait
cli
adc
xor
in
dec
cltd
cs
cmp
mov
shlb
pop
loopne
xchg
rcrl
hlt
int
adc
adc
nop
icebp
jae
jg
dec
inc
stc
cmp
sub
in
out
lret
fs
push
adc
or
or
mov
and
adc
fstpt
nop
add
cmp
mov
add
ss
or
push
dec
adcl
sbb
xor
lret
dec
subb
xchg
jo
lods
clc
push
xor
push
xor
imul
pop
aam
dec
repz
cs
jg
or
icebp
fwait
cmpsb
pop
aad
iret
test
pop
mov
sub
test
sub
out
pop
sub
xchg
jmp
fdivrl
add
push
xor
inc
jo
or
push
je
push
xor
mov
cmp
push
sbb
cmp
pop
jl
xlat
adc
imul
adc
mov
fldl
xchg
negl
lods
cld
inc
out
xchg
push
mov
lods
dec
mov
sbb
inc
ret
push
rcrb
push
sti
iret
and
mov
cmpl
sahf
mov
into
mov
pop
xor
pop
popa
push
fcmovnb
loope
call
xchg
mov
and
clc
insl
mov
dec
push
xchg
mov
xchg
clc
bound
xlat
cs
cmpsl
mov
push
jae
cmc
fwait
cmpsb
mov
fdivs
xlat
mov
and
fs
fs
cmpsb
cmp
and
test
adc
popf
cmpsb
lcall
lret
xchg
insl
loope
or
popf
push
invd
cmp
jo
xchg
add
ss
and
push
mov
xchg
jno
andb
pop
test
stos
sbb
fisttps
ds
mov
jae
scas
in
sub
jl
add
pop
loopne
int
stos
test
xchg
cld
dec
in
and
xor
cmp
int3
pop
push
xchg
push
pop
push
das
jl
shrb
mov
push
addl
cmc
mov
les
cmpsb
addb
jge
sbb
pop
sbb
push
dec
pop
fstpt
sbb
push
push
shll
dec
and
imul
iret
ljmp
mov
pop
dec
xchg
pop
sarl
arpl
bound
xchg
inc
sbb
mov
sub
call
je
pop
adc
idivb
dec
jne
stos
sub
push
imul
jo
call
bnd
es
pop
paddusw
adc
mov
mov
push
sahf
xor
rcrb
sub
int
sub
nop
jmp
stc
aam
mov
aam
push
repz
ja
cltd
mov
cs
movsl
pushf
fld
ja
loope
mov
xor
mov
lds
pop
sbb
jns
aad
xchg
mov
fisubl
adc
pop
jns
outsl
jg
lds
xlat
or
sub
sbb
sub
and
out
fwait
dec
pop
pop
pop
or
push
add
insb
jecxz
ret
mov
into
push
mov
mov
cmp
mov
cmp
shr
sub
fdiv
inc
repz
stos
es
ret
scas
sti
pop
test
xor
iret
daa
adc
scas
and
imul
sbb
mov
mov
dec
cld
jns
roll
gs
add
cli
iret
loopne
mov
aas
pushf
js
fwait
aaa
movsb
cmp
xchg
cli
jecxz
xchg
lahf
into
lock
lods
push
push
shrb
pop
jle
loope
stc
fstl
cmp
fdivs
sub
bound
arpl
addr16
sub
in
push
js
sub
cmp
add
jae
mov
pop
inc
stos
mov
rcrl
jae
in
iret
aam
push
inc
jge
sbb
jecxz
xchg
test
ficomps
iret
test
jo
jb
movsl
push
jo
inc
jae
popa
mov
insl
outsl
xor
cltd
movsb
mov
aam
jae
shrb
outsb
mov
and
jno
lds
pop
cmp
xor
test
jmp
icebp
scas
sub
and
jo
mov
lret
mov
push
push
inc
sbb
rclb
test
push
pushf
jae
inc
cmc
cmp
adc
cld
xor
fdivrs
jbe
sub
xchg
cmp
gs
std
icebp
jl
push
mov
sub
fldenv
push
in
inc
jp
push
out
and
les
lea
pop
xchg
scas
ljmp
jne
pop
mov
hlt
jbe
call
dec
stc
mov
mov
mov
bswap
mov
inc
pushf
dec
sub
pop
jbe
sbb
adc
idivl
mov
or
xacquire
loopne
bound
xor
ficoms
icebp
or
int
movsl
or
dec
lcall
jg
std
aad
sahf
sbb
and
push
pop
cmp
fdivl
push
cmp
dec
movsb
repnz
stos
aad
or
or
xchg
adc
dec
push
das
ss
ret
loope
jnp
mov
lret
stos
loop
jne
adc
psubusw
ds
mov
inc
mov
popf
jns
xchg
mov
sub
stc
adc
call
and
jbe
sbb
mov
cli
add
cmp
outsl
repnz
xor
pop
test
jae
out
dec
je
popa
imul
nop
insl
lahf
insb
stos
push
orl
test
imul
mov
sbb
add
leave
xchg
cltd
xchg
imulb
mov
sahf
leave
fwait
cli
inc
mov
std
cmp
sbb
or
call
nop
in
and
js
and
sub
insb
jno
mov
pop
mov
in
xchg
pop
pop
add
sub
fdivs
mov
xchg
lods
dec
imul
stos
mov
dec
pop
or
lea
dec
sbb
lahf
add
mov
aam
add
sti
pop
push
std
fisttps
mov
pop
adc
jns
leave
aam
lret
add
dec
lahf
out
mov
and
cs
mov
adc
mov
pop
sub
cmpsl
push
cwtl
scas
fdivr
orl
popf
outsb
cmp
in
and
popl
ss
push
aam
decl
adc
push
or
push
in
mov
sbb
push
ds
push
movsl
pushf
sahf
add
sbb
and
mov
cmp
cld
adc
xchg
rolb
lea
push
bound
dec
jmp
cltd
cwtl
lods
leave
in
sub
add
fadds
leave
add
and
testl
dec
pop
adc
mov
pop
pop
lds
andb
pop
insb
cmp
gs
or
loope
mulb
sar
test
adc
inc
jae
movsl
pop
xor
repz
mov
leave
xor
adc
add
ds
int
sub
lods
pop
jno
mov
cli
js
add
xchg
repz
ret
add
jg
sbb
mov
shll
fadd
pop
mov
fsts
xor
mov
push
xchg
andb
dec
stos
jo
or
sub
push
sub
in
enter
scas
or
or
lret
ljmp
mov
jno
inc
les
dec
and
pusha
push
ja
dec
mov
xor
loop
xor
pop
pop
sub
cli
push
jnp
shr
mov
sub
or
dec
lcall
push
mov
mov
xchg
std
add
mov
addr16
arpl
hlt
xor
or
aam
dec
and
fwait
je
inc
mov
sbb
jg
xchg
ljmp
push
cmpl
pop
test
xchg
sbb
and
out
gs
daa
push
xchg
ror
inc
inc
int
scas
mov
add
sub
inc
dec
ljmp
cmp
shlb
inc
lret
popf
lret
adc
push
pushf
xchg
xor
sbbl
ss
imul
lds
loope
scas
sub
mov
popa
xlat
jno
or
rcrl
cmp
dec
mov
xlat
in
addps
xchg
add
lods
jge
jo
shll
push
mov
sbb
shl
push
fists
sbb
int
and
mov
adc
dec
or
mov
test
mov
pop
and
sbb
mov
and
sbb
jg
sub
add
les
mov
pop
ds
push
ror
pop
shrl
loopne
sbb
outsb
pushf
mov
cmc
mov
dec
cwtl
cmp
dec
in
mov
out
sbb
cmpl
pop
in
das
dec
cmc
sti
lea
lea
shl
test
hlt
popa
mov
in
aam
mov
pop
adc
fldt
xor
adc
lods
lahf
push
add
aam
nop
scas
imul
mov
scas
outsb
and
sub
lods
xor
shll
popf
mov
repnz
xor
mov
ss
aaa
xchg
or
jae
mov
mov
jg
gs
jmp
arpl
inc
xor
mov
leave
cld
fsub
pusha
sbb
jno
sub
sub
add
dec
add
push
mov
cmp
sti
testl
xchg
jo
sub
arpl
aam
add
test
jp
movsb
les
xchg
cld
inc
inc
rcrb
xchg
inc
push
push
sub
adc
insb
pusha
fwait
outsb
inc
int3
dec
and
decl
adc
sbb
xchg
and
add
addb
int
call
mov
xchg
mov
xchg
icebp
repnz
in
addr16
mov
into
cmp
arpl
cltd
fwait
loop
arpl
sub
adc
mov
inc
cmp
aas
xchg
shlb
and
jle
mov
mov
add
mov
fildl
fwait
sahf
pusha
lahf
cwtl
push
pop
mov
clc
imul
fs
add
lods
shlb
rcl
lock
pop
inc
repz
pop
adc
mov
sub
fisubrs
sub
mov
leave
mov
jo
popa
pop
loopne
pop
lods
int
ljmp
lret
inc
add
jmp
icebp
inc
adc
repz
into
out
stos
in
inc
insb
push
int
ret
pop
inc
pop
xchg
stos
in
push
fcoms
adc
mov
fnstsw
in
xchg
fstps
and
push
ss
mov
and
cltd
aam
inc
cmp
sbb
das
cmp
add
and
xlat
fcoms
cmp
inc
sahf
xchg
jo
xchg
fmull
es
enter
ljmp
call
mov
mov
push
sub
addr16
cli
cmp
or
dec
cs
and
adc
cli
sub
sub
cmp
pusha
ss
dec
add
les
adc
arpl
push
inc
mov
stc
jbe
xchg
jnp
sbb
push
and
clc
lods
sarb
jae
in
sbb
add
xchg
mov
aas
mov
fidivs
fwait
cmp
push
push
aam
notb
in
jl
mul
cli
add
jb
adc
adc
dec
aaa
push
xchg
sahf
push
in
jecxz
stos
cltd
stos
mov
pop
sub
add
or
pushf
call
lcall
dec
imul
mov
push
repz
scas
push
mov
arpl
add
jne
jl
ss
sub
ja
add
jp
mov
push
dec
lret
sub
inc
sub
sub
pop
rcll
add
jne
orb
mov
cwtl
jb
fwait
jge
add
in
iret
cmp
pop
adc
loop
test
and
mov
push
cwtl
pop
adc
stos
bound
js
shll
out
ljmp
and
push
adc
icebp
sahf
stc
scas
aas
ja
adc
and
xchg
roll
or
dec
insb
or
insl
jnp
fsubrp
jp
jl
sahf
xor
and
mov
jg
xorb
cmp
push
mov
jb
rorl
mov
rolb
sahf
adc
cmp
ret
sub
cmp
sbb
shll
mov
enter
sbb
lret
call
jl
enter
mov
xor
test
fwait
jl
xchg
dec
incb
jno
cmp
cmpl
jb
adc
std
insl
fdivl
sbb
adc
and
inc
xor
cmp
testl
sbb
bound
pushf
les
fldl
es
pop
mov
or
into
repz
adc
mov
imul
into
out
jb
xchg
ja
sbb
sub
addr16
movl
scas
sti
xchg
jne
test
rcrl
or
test
into
pop
psrlw
mov
cs
and
cmp
push
inc
int
lock
cmpl
pop
sbb
es
dec
dec
xchg
movsl
xor
out
hlt
cmp
cmpsl
cmp
mov
pop
mov
call
mov
mov
sub
cmp
adc
mov
repnz
ret
cmp
push
jbe
mov
push
ljmp
test
testb
ja
inc
dec
push
or
inc
cwtl
add
adc
out
dec
fwait
cwtl
pop
enter
inc
pop
pop
lcall
sbbb
rorb
inc
and
mov
push
ja
xchg
adc
bound
leave
in
pop
jne
jmp
pop
xchg
sbb
out
insb
jg
mov
dec
pop
push
ret
jg
outsb
outsl
fidivrl
jnp
push
adc
lea
mov
sbb
lds
jb
cmp
ret
pop
aaa
mov
sbbb
push
dec
xchg
push
ss
std
dec
add
stc
xor
sti
push
cmp
add
outsb
insb
xlat
scas
adc
add
fldl
std
in
jp
pop
xor
inc
popa
mov
rcll
adc
push
jae
mov
out
nop
sbb
sub
in
add
xchg
cmp
pop
push
xlat
pop
insl
mov
lds
dec
hlt
add
and
je,pn
mov
or
fwait
sub
cmpsl
inc
ss
imul
imul
dec
icebp
prefetch
cmpsb
pop
sbb
fdivrl
addl
sti
ja
cmp
aad
loope
push
stos
or
aam
test
push
hlt
ret
sbb
sbbl
jnp
xchg
inc
addr16
fildl
mov
pop
int
scas
outsb
stos
cs
int3
pushl
aas
ja
dec
pop
jno
jecxz
and
movsb
inc
ja
int
jb
xor
ds
mov
sbb
add
sarb
cmpsl
inc
je
xor
sub
ficoms
inc
mov
jge
lret
fldl
dec
jp
lea
jmp
jge
in
cmp
jecxz
mov
nop
xor
push
les
addl
jmp
mov
cld
pop
in
pop
or
out
repnz
or
fstpt
xor
shll
mov
and
xchg
xchg
xor
xchg
mov
xchg
inc
fs
pop
xchg
xlat
sbb
testb
xchg
fwait
cmp
lret
mov
push
push
icebp
pop
loop
or
pop
fcoml
jno
out
dec
outsl
pop
and
movsl
jo
sbb
cwtl
fsubrp
pusha
push
fnop
movb
add
adc
scas
mov
push
jbe
dec
mov
outsb
icebp
jnp
sbb
fwait
sub
imul
movsl
mov
pushf
clc
inc
push
mov
call
rcll
sub
mov
scas
std
jle
js
ss
addr16
mov
mov
dec
lods
cmpl
dec
outsb
mov
xchg
rolb
decl
add
dec
movsl
push
aas
adc
adc
dec
dec
dec
push
mov
scas
sub
or
cli
mov
mov
aad
mov
scas
movsb
push
mov
lahf
jecxz
idiv
mov
add
push
out
dec
dec
movsl
daa
push
add
ds
mov
mov
xlat
test
pop
lea
aad
pop
dec
scas
sbb
lds
scas
aas
mov
in
inc
push
dec
push
add
jae
pop
fnstcw
xchg
jle
mov
cld
loop
dec
dec
repz
movsb
imul
dec
andb
sub
sub
mov
fyl2x
mov
test
mov
lods
pop
jno
hlt
mov
shrb
in
leave
xchg
call
inc
icebp
jl
in
lahf
bound
mov
push
loopne
inc
aad
pop
adc
push
adc
push
lock
ret
sahf
shll
inc
jns
adc
inc
push
popf
aaa
dec
jmp
inc
sti
fidivrl
loop
nop
mov
movsl
aad
cmpb
inc
ljmp
outsl
add
and
jb
lahf
iret
push
test
pop
popf
inc
sbb
movsb
mov
cli
leave
mov
mov
out
jns
fists
into
stos
add
gs
cmp
dec
sbb
or
enter
mov
pop
mov
inc
add
aad
stos
push
jl
mov
cmp
dec
mov
dec
jns
outsb
fstps
data16
inc
mov
sahf
das
popf
repnz
cld
dec
mov
lret
stc
inc
popl
sub
fsubr
sti
jecxz
xchg
push
shl
loope
inc
mov
imul
jp
sbb
xchg
loope
data16
imul
cmp
fisttps
pop
cmpsl
dec
or
push
rorl
int
ficoml
dec
jnp
outsl
dec
bound
and
repnz
mov
arpl
out
adc
repnz
jge
paddsw
stc
xchg
lds
inc
mov
xor
pushf
push
bound
out
mov
int
idivl
lds
insb
lcall
inc
mov
inc
push
loop
cmc
cmpl
pop
or
fwait
ljmp
loopne
xchg
aaa
in
pop
sbb
adcl
sub
inc
stc
push
fimuls
das
jno
cltd
decl
aaa
cmpsb
fnstenv
notb
popa
adc
out
or
inc
popa
and
ror
pop
pop
jbe
mov
in
les
lods
jge
mov
aas
aaa
sbb
adc
cli
sti
mov
or
inc
test
in
mov
pop
aad
lcall
mov
push
repz
mov
sub
loopne
mov
movsl
xchg
enter
pushf
sarl
push
mov
xchg
lret
sbbl
sbb
inc
dec
in
es
xchg
in
inc
rol
sub
mov
dec
lcall
sti
and
jle
xchg
pop
ss
fstpt
loopne
out
jb
mov
push
cltd
icebp
aas
nop
sbb
or
repnz
jmp
mov
arpl
mov
pop
repz
fbstp
jno
mov
fsubr
outsb
shl
into
xor
inc
mov
xchg
and
adc
push
adc
mov
stos
cmp
xchg
cmpl
xchg
orb
icebp
out
je
fistps
xchg
repnz
test
rclb
mov
hlt
xchg
add
andb
gs
sti
clc
xor
and
fisubl
cwtl
jbe
std
xchg
push
push
xchg
mov
dec
mov
jge
outsl
ja
repz
cmp
mov
or
call
loope
dec
and
pop
sub
outsb
lds
xor
movsl
negb
mov
mov
test
test
out
dec
mov
pop
pop
insl
add
lea
push
or
mov
pop
dec
dec
cmpsb
clc
sub
sti
sub
sbb
jb
pop
adc
retw
mov
xchg
pusha
xchg
nop
pop
push
gs
loope
inc
xchg
jb
or
int
gs
lock
inc
fisubl
sahf
shrb
mov
sysret
subb
fidivl
mov
insl
cmp
mov
and
mov
push
outsb
jge
jbe
scas
mov
add
fwait
mov
push
sub
add
test
je
cltd
dec
mov
pop
repnz
std
dec
mov
cltd
sahf
inc
dec
add
mov
xor
int3
mov
sbb
xchg
adc
sbb
out
add
jo
lcall
aad
loopnew
mov
dec
in
rcrl
test
pop
dec
jle
jns
add
stc
das
xorb
and
fimull
pop
dec
aas
xchg
mov
push
test
mov
lock
addr16
out
loop
roll
lcall
aad
pop
movb
mov
cli
fisubrl
or
movsl
sub
aam
loop
das
jl
jne
addr16
mov
sub
lcall
inc
fstpt
jnp
aad
mov
scas
and
outsl
cmp
out
or
mov
adc
repz
adc
test
sahf
add
jl
movsl
add
ret
dec
dec
addb
jae
xchg
scas
cmp
movsl
jbe
xchg
int3
mov
inc
mov
inc
add
outsl
stc
jge
leave
pusha
jge
xchg
mov
psubsb
xor
mov
cld
mov
jecxz
pop
jnp
out
and
pop
inc
mov
xchg
jp
sbb
and
cwtl
or
shr
dec
jecxz
hlt
std
sbb
cli
lds
xchg
sbb
int3
das
sti
sub
jecxz
adc
mov
test
inc
popf
ret
push
cmp
les
adc
leave
dec
mov
cmc
inc
or
iret
fs
xchg
cmp
mov
push
sub
pushf
dec
cmp
push
sub
in
incl
xchg
push
xchg
push
shlb
jo
add
icebp
cmpsb
xchg
loope
sub
imul
lock
fistl
and
bound
dec
pusha
in
cwtl
mov
lcall
mov
fs
lods
mov
sub
mov
mov
out
loop
ret
enter
clc
push
cmp
jo
repz
sbb
dec
push
pop
add
popf
and
arpl
ljmp
and
adc
repz
out
lods
scas
and
sahf
icebp
cld
movsl
into
jae
ret
in
clc
test
inc
movsb
test
add
fisubl
insb
push
lret
movsb
arpl
sub
sub
pusha
in
xchg
dec
cltd
push
and
mov
mov
or
pop
pop
or
rcll
dec
mov
in
and
shrl
or
cli
and
adc
mov
aas
xchg
ret
leave
sahf
mov
movsb
or
add
cwtl
push
pop
push
xlat
ret
xchg
push
repz
nop
insl
rorl
mov
and
mov
pushf
push
push
daa
xor
or
jmp
mov
add
ffree
or
lret
das
mov
and
jg
adc
rolb
jmp
arpl
ficoml
pop
gs
gs
push
lret
lock
insb
mov
stos
mov
mov
int
repnz
ret
xchg
rol
js
xchg
mov
lock
mov
sarb
je
push
pop
jnp
in
mov
ret
iret
xchg
or
mov
add
sahf
shrl
jg
pop
rcrb
addb
insl
adc
clc
jg
adc
xor
cmc
out
cwtl
sub
xor
mov
xchg
popf
or
loop
push
movsl
addb
sub
xchg
repnz
xor
inc
cld
mov
cmpb
out
lcall
sbb
repz
sub
lret
hlt
aas
mov
mov
adc
lods
sbb
dec
fwait
pop
js
ret
xor
fidivl
out
mov
xchg
jge
lds
pop
push
xchg
xor
out
lret
mov
or
out
ret
sbb
dec
adc
test
jno
mov
sbb
insl
aad
test
repnz
xlat
repz
xchg
dec
sub
sub
mov
cmp
leave
hlt
out
jns
jle
cmp
adc
stos
and
sahf
je
in
pop
xchg
mov
shrb
dec
or
dec
mov
and
mov
sbb
adc
aas
ljmp
imull
fs
push
jmp
out
sub
test
inc
mov
or
je
or
pusha
push
jae
loop
cmpsb
stc
lret
femms
testl
mov
lods
mov
outsb
dec
movsl
push
out
lret
inc
mov
lret
in
ret
fdivr
loope
roll
repz
push
push
mov
ret
mov
mov
fidivrl
inc
data16
daa
dec
inc
mov
mov
pop
movsb
cmp
push
cli
sub
fisttps
and
sti
hlt
mov
dec
cmpb
or
sub
xchg
ss
lods
xchg
ss
inc
xlat
outsl
sarl
imul
cli
lret
jge
ret
sub
push
ljmp
loop
out
adc
push
pop
mov
push
xchg
jle
add
enter
ret
dec
shrl
es
push
aam
push
inc
push
cmp
fdivr
test
fisttpl
sbb
lret
mov
jae
jmp
xchg
or
ljmp
js
pop
xlat
jne
xchg
fists
movsb
ss
or
push
mov
xchg
jg
lcall
gs
insl
push
popf
mov
and
or
lret
ja
cld
jmp
in
mov
add
dec
and
enter
insb
pop
shlb
jae
ds
sub
add
adc
mov
nop
xor
sar
icebp
fwait
rcrl
cmp
pop
lds
std
arpl
jb
rorb
add
jmp
cmp
mov
pop
sub
xchg
pop
or
les
push
shrl
jns
sub
fists
pop
push
lock
and
cmp
push
push
pop
cmp
mov
mov
outsb
dec
push
add
adc
push
xor
loope
test
mov
push
pusha
inc
dec
leave
faddp
push
aaa
loop
data16
test
mov
test
out
sbb
clc
dec
js
and
mov
pop
or
repz
rorl
sbb
sub
adc
push
out
cmpsl
loopne
mov
aam
push
push
or
mov
int3
adc
jbe
add
mov
push
test
pop
mov
mov
pop
mov
jp
mov
pop
adc
les
dec
call
pop
cmpb
inc
pusha
add
fwait
out
inc
arpl
mov
mov
movsl
popf
pop
call
mov
imul
lods
popf
pusha
adc
pop
int3
out
jmp
lahf
cs
jae
xor
push
js
lcall
dec
rorb
lods
jp
cmp
push
das
dec
data16
sbbl
adc
hlt
std
sbb
lcall
idivb
or
or
hlt
xor
sahf
lcall
sbb
test
add
cmp
pop
movsb
dec
inc
mov
cmp
push
cmp
data16
dec
dec
insl
or
gs
push
sbb
or
repz
or
push
ret
add
xor
sub
mov
push
push
int3
pop
mov
or
jge
xchg
mov
adc
mov
mov
xchg
add
pop
pushf
cld
std
mov
fnstcw
jp
fists
dec
xor
mov
mov
shll
sbb
add
mov
neg
dec
leave
lret
ds
sbb
mov
pusha
subl
xchg
mov
es
lret
push
jg
sub
xchg
adc
inc
push
jmp
arpl
in
dec
or
xor
jnp
aad
in
mov
jmp
imull
mov
rclb
xchg
arpl
jne
adc
push
and
inc
push
cli
mov
add
lret
push
and
mov
sub
jmp
mov
arpl
xchg
jge
jl
mov
in
mov
daa
scas
jb
loope
add
sbbl
sub
repz
or
or
ret
xchg
pop
adc
pop
out
dec
mov
shlb
add
sub
cmp
pop
out
in
outsl
jb
push
and
jns
push
daa
shl
loope
mov
pusha
sbb
dec
jmp
xchg
jge
mov
xchg
cmp
inc
imull
cmc
aas
mov
push
dec
mov
inc
pop
sbb
pusha
xchg
fldl
xchg
popa
scas
ret
cmp
into
mov
ret
xor
lock
add
inc
jecxz
xor
push
rol
out
lahf
nop
adc
pop
jp
setle
cmpsb
jle
dec
scas
in
fistl
rcll
call
cmp
jmp
xor
testl
test
add
pop
addr16
mov
add
cmp
sti
inc
into
jns
pop
xchg
mov
adc
add
pop
or
lods
into
in
cltd
int3
aas
xor
dec
cli
xor
aas
sub
sub
and
hlt
xchg
pop
push
jno
mov
popa
movsb
test
stos
ljmp
in
push
fiaddl
rorb
mov
movsl
jb
dec
pop
bound
insb
cmpsb
loope
push
call
jne
popa
ss
pop
adcl
cmp
lods
cli
adc
inc
iret
popf
cmpsl
xor
lret
shr
mov
push
mov
mov
cmp
adc
xor
scas
movsb
xor
mov
jp
lcall
imul
inc
mov
fbstp
inc
pushf
and
mov
js
movsb
outsl
shl
sbb
xor
cmp
int
mov
dec
mov
popa
movsb
aas
mov
je
inc
daa
adc
cmp
mov
idivl
loop
add
sub
in
jge
les
js
and
xchg
nop
add
addr16
xchg
movsl
xchg
cmp
sbbl
sub
jmp
test
xor
mov
loope
sub
cmp
jb
cmc
lods
out
mov
and
cwtl
xor
cmp
mov
mov
pop
testb
sub
jg
sub
std
decl
mov
and
in
stc
jae
rcll
or
sbb
mov
and
and
xchg
out
out
das
mov
mov
mov
or
lahf
sub
and
xchg
jno
fdivr
out
call
cmp
push
jne
fsts
sarl
xchg
xchg
fildl
lcall
cmpsl
mov
mov
mov
pop
add
xor
xchg
jmp
movsl
jb
out
mov
fisubl
mov
inc
in
stos
ret
sub
enter
call
mov
sub
les
clc
dec
mulb
into
lea
dec
xor
ja
lret
mov
xchg
push
fisubs
out
cmp
mov
push
mov
sbb
aas
cs
sbb
fwait
jecxz
jo
mov
sub
sbb
dec
repnz
das
and
popa
xor
adc
cmp
fs
cld
mov
popa
scas
in
mov
xchg
or
xchg
cmp
ja
js
sub
fstps
dec
sub
inc
and
add
pop
lea
lods
js
into
stos
fiadds
imul
xlat
rcrb
movsb
les
sbb
insb
xor
or
cwtl
nop
js
xor
out
mov
mov
test
ljmp
fmuls
pop
es
add
push
fsubrl
lods
dec
push
cwtl
out
adc
mov
inc
filds
fisubrs
cli
cld
lock
leave
popf
out
call
aaa
aad
scas
popl
mov
imul
in
mov
mov
jp
pop
iret
fcoml
jnp
mov
dec
pop
addb
push
addl
xor
out
repnz
scas
lahf
jp
sahf
nop
outsl
pop
and
mov
fisubrs
push
push
mov
rep
and
sbb
adc
mov
pushf
mov
cmpsl
sbb
sarl
adc
and
mov
orl
dec
fstps
negl
psubusw
imul
push
mov
xchg
stos
shrl
pop
fucomip
repz
push
gs
daa
inc
or
out
cmpsb
or
sub
bound
test
pop
sub
sbb
mov
add
or
push
arpl
or
insl
pusha
or
mov
and
in
lret
mov
or
sbbb
cmp
sbbb
inc
mov
in
push
inc
in
inc
cltd
cmpl
mov
or
cmc
insl
fists
std
fisubrl
or
mov
sbb
jecxz
addr16
rorb
and
idivl
imul
push
dec
mov
ror
imul
ja
mov
mov
imul
int3
xor
sbb
sbb
lret
daa
mov
cmp
rolb
mov
xlat
jge
jmp
add
mov
out
lret
fnstsw
int
movups
cs
and
dec
xchg
mov
aad
negl
repnz
dec
xchg
lahf
dec
or
xor
pop
aam
in
xlat
imul
dec
movsb
xlat
push
or
cmp
pop
mov
add
pop
ret
xchg
or
daa
sbb
gs
loope
call
pop
movsb
enter
lret
and
stc
jle
sti
out
xchg
mov
pop
add
adc
sbb
addb
sub
lds
cmpsl
sbb
std
adc
jg
push
sti
adc
imul
test
sub
stc
push
les
jns
push
bound
jb
pop
adc
and
jno
jbe
cli
fidivs
hlt
repnz
movsl
or
bound
andl
cmp
jg
adc
sub
lret
xor
sbb
aam
mov
clc
repz
jnp
imull
dec
dec
addr16
mov
pop
leave
int
push
rorb
iret
jp
inc
cmpsb
pop
sahf
xor
add
jmp
push
popf
pop
std
mov
xor
jb
mov
lret
jp
sub
js
inc
jmp
in
and
inc
das
mov
loop
das
stos
loop
shlb
pushf
orps
xor
lods
sahf
mov
fsubrp
or
dec
mov
leave
cmp
mov
and
mov
pop
roll
les
notl
scas
xchg
or
shlb
jnp
nop
mov
and
aas
xchg
push
js
ret
jns
mov
xchg
arpl
xchg
mov
aad
daa
sarl
xchg
fnstcw
push
popf
ja
lods
cmc
pop
push
movsb
mov
sub
sbb
sub
adc
lock
or
in
inc
scas
and
fdivr
icebp
pop
das
add
push
dec
push
inc
popf
loopne
and
shl
cmp
jecxz
repnz
loop
arpl
test
cmpl
int3
sub
imul
test
ror
xchg
mov
pop
cltd
loopne
aas
xchg
and
mov
sub
mov
scas
lret
add
sbb
mov
xchg
leave
or
bound
pop
cmp
test
push
std
xchg
mov
xor
xor
sbb
mov
enter
push
mov
add
repz
push
fcom
jo
movsl
stos
shrl
or
push
fsubrs
fwait
out
js
xchg
out
das
loop
lock
test
enter
xlat
or
sub
pop
imul
out
outsl
shrl
rolb
rcrl
mov
fsubr
cmpsb
sub
mov
push
imul
or
in
inc
mov
addr16
inc
push
push
inc
outsl
into
and
imul
xlat
aad
lods
cmp
cmpsb
es
repnz
or
hlt
jo
sbbb
in
les
cmpsl
loop
imul
dec
push
movsl
lods
adc
jg
xchg
movsl
data16
pop
push
jmp
xchg
ds
es
iret
repz
scas
imul
or
and
ja
pusha
pop
fwait
inc
pop
mov
insb
ja
adc
in
add
sub
popa
cltd
fisttps
lea
lea
xchg
movsb
fdivl
subb
out
daa
push
lret
scas
adc
loopne
mov
mov
imul
repnz
daa
push
cmpsb
cwtl
jo
arpl
mov
imul
pop
stos
inc
fwait
mov
in
add
sub
sar
into
jne
ljmp
or
mov
cwtl
in
mov
lock
sbb
adc
push
movsb
sti
mov
mov
and
ljmp
add
int
arpl
sub
lret
stos
xchg
cmp
dec
cmpsb
sub
sub
mov
sub
inc
mov
xor
ljmp
or
cmp
icebp
xor
out
sbb
push
or
enter
pop
outsb
jnp
mov
pop
push
inc
into
setns
jl
movsl
jne
xlat
testl
jnp
push
mov
push
push
cmp
dec
sbb
sahf
sub
inc
lret
mov
jmp
lods
adc
push
fistpll
outsb
dec
aas
push
in
stos
sbb
iret
cmp
push
nop
mov
scas
inc
dec
xlat
jl
cmp
mov
mov
adc
adc
dec
sbb
mov
popa
push
addl
inc
inc
in
cmp
xchg
scas
or
lods
ret
aas
mov
mov
nop
psrlq
movsl
nop
mov
mov
out
movsl
lahf
mov
lea
jb
mov
rcrl
jbe
dec
jecxz
popf
mov
outsb
pop
dec
push
inc
rcrb
mov
fbstp
sub
push
fwait
daa
hlt
push
inc
jae
mov
mov
sbb
cmp
cmp
and
pop
cmp
imul
push
push
sbb
cmc
mov
fildl
add
shll
add
loope
mov
xchg
xchg
add
hlt
mov
dec
jge
push
arpl
add
rolb
lods
hlt
test
inc
mov
cmp
pcmpeqw
test
mov
loopnew
dec
push
jb
jg
mov
test
xchg
adc
inc
repnz
sub
mov
jge
outsl
out
and
in
int
clc
loope
shlb
int
push
mov
ds
and
cmp
and
popl
or
clc
push
add
addr16
or
inc
jo
xchg
mov
inc
mov
cmp
scas
test
rcr
sbb
nop
xchg
aam
jg
pop
mov
rol
cmp
xor
jnp
iret
adc
dec
sar
ret
mov
outsb
cmp
and
das
fs
cli
xchg
fwait
sbb
xor
sar
xchg
popf
push
dec
shll
or
mov
and
testb
xlat
sti
test
and
and
push
ja
jo
pop
cmp
jne
outsb
xor
push
pop
xchg
xchg
sbb
test
xorl
rcrb
mov
xchg
insl
mov
cmpsb
xrelease
jl
sub
stos
jb
sahf
push
mov
ret
jne
scas
mov
push
xorl
push
out
mov
roll
xor
faddp
cmc
je
in
fsubrp
mov
fisttps
mov
mov
mov
xor
and
inc
sahf
dec
repnz
fwait
ret
or
std
sahf
test
inc
pop
dec
lahf
addr16
push
test
sub
mov
sarb
les
fcmovne
pusha
daa
pusha
inc
sbb
cmpsl
aam
cmc
les
add
sarb
adc
loop
cld
push
leave
ljmp
out
fs
mov
cwtl
jle
leave
mov
dec
scas
adc
xchg
and
xchg
adc
fcmovb
cwtl
push
mov
mov
push
in
mov
add
out
cmp
insb
adc
pop
test
call
ss
sub
arpl
mov
sbb
dec
ret
push
rcrb
enter
mov
ss
mov
or
pusha
dec
jmp
fstpt
xchg
repz
pop
inc
pop
scas
sbb
sub
jns
pop
iret
rolb
idiv
incb
and
aam
cmpsb
xlat
daa
aas
pusha
testb
popa
mov
fs
xor
push
iret
xor
fdivrl
outsb
dec
aaa
jmp
lahf
cmp
or
mov
sub
adc
and
sets
mov
mov
cli
cmp
daa
dec
subl
popf
xchg
cmpsb
lahf
sbbb
std
jnp
pop
icebp
nop
xlat
xor
push
shl
out
aaa
sub
aaa
scas
pop
iret
lds
sbb
testl
dec
jae
xor
dec
jp
rorb
ds
repz
sub
leave
or
jg
mov
arpl
adc
push
out
adc
pop
adc
imul
sbb
sar
call
int3
test
call
push
add
daa
mov
sti
cmp
out
hlt
push
and
push
div
mov
das
adc
jecxz
stos
test
insb
or
mov
jmp
add
mov
cmp
cs
inc
imul
lcall
pop
ret
incl
dec
es
mov
sbb
mov
arpl
xchg
scas
insb
add
jo
sub
imul
push
int3
shll
cmp
inc
inc
or
push
or
cwtl
imul
jno
jno
add
test
rcl
dec
je
and
ficoml
int3
les
out
mov
movsb
rorb
xchg
sbb
dec
adc
jecxz
xchg
ret
or
out
mov
xchg
jo
sti
les
outsl
andnps
add
ficompl
cli
rclb
jns
movsb
dec
mov
xor
adcb
jnp
pop
stc
shrb
mov
sub
adc
push
add
cmp
shr
rolb
lods
ret
imul
mov
and
jns
rcrl
insb
xchg
fsubs
pop
cwtl
addr16
dec
sbb
popf
jle
xchg
fwait
or
addr16
push
jno
inc
fidivl
mov
push
mov
das
shll
lods
adc
andb
xchg
inc
adc
test
in
sub
sub
jns
pop
pop
int
insb
adcb
push
call
popa
rcr
xor
mov
xor
popf
or
jle
or
push
cli
jno
das
sti
sbb
cld
lret
in
shll
or
test
lcall
sbb
test
jnp
sub
rclb
fyl2xp1
mov
push
in
jmp
fcmove
or
push
add
push
cmpsl
xor
cmp
stos
mov
icebp
movsl
clc
push
loope
mov
xor
lods
dec
bound
pop
insl
test
push
add
mov
jle
popf
xor
pop
mov
insb
lahf
testl
ja
and
test
dec
inc
outsl
es
add
inc
hlt
out
mov
imul
enter
push
leave
mov
mov
or
enter
jp
xchg
cmp
mov
repz
cli
shrl
and
xor
jnp
es
push
lret
jae
int
out
ror
lods
in
add
cmp
aaa
gs
mov
lret
hlt
sbbl
bound
inc
jo
adc
cld
pop
inc
cs
sbb
inc
sub
rclb
xor
leave
cmp
xor
jo
mov
mov
mov
test
lods
cltd
shlb
shrl
jle
jbe
inc
sarb
mov
out
leave
xor
sub
mov
movsb
out
js
loopne
xchg
push
sbb
mov
jle
pop
test
push
sub
daa
cltd
dec
mov
push
inc
dec
dec
lcall
mov
push
fst
push
ss
stos
int3
xchg
sbb
and
clc
jae
jb
test
das
test
adc
loopne
fdivr
clc
mov
gs
or
and
rorb
push
mov
lods
inc
int3
gs
daa
mov
adc
jl,pn
xlat
mov
shlb
hlt
insl
and
inc
icebp
shl
mov
imulb
int
ret
pop
xchg
sbb
scas
aad
popa
cmp
xchg
fwait
mov
pusha
out
aaa
popa
decb
sub
jns
in
push
pop
mov
mov
mov
mov
push
add
sar
or
ja
mov
inc
mov
add
lods
scas
add
jmp
push
cmp
test
cmp
cmpb
cld
dec
imul
jns
test
es
nop
jle
or
repz
cmp
das
cmpsl
pop
push
mov
sub
dec
mov
sahf
sub
mov
gs
inc
movsl
clc
xchg
dec
sbb
mov
cmp
or
ds
in
cmpsl
pop
fcmovu
push
or
xor
dec
repnz
push
mov
les
mov
pop
hlt
ja
sbb
inc
outsb
jae
iret
data16
testl
jne
mov
loopne
mov
push
xchg
jl
shrb
jno
into
mov
pop
jne
sahf
pop
dec
int3
pop
mov
jnp
lds
jle
fimull
mov
jg
add
xor
mov
ret
mov
jmp
inc
xchg
pushf
sub
jns
call
or
fcoml
cmp
xchg
jbe
dec
and
fptan
xor
dec
jecxz
fsubrl
adc
mov
data16
les
sub
xor
push
out
sarb
dec
mov
sub
sti
mov
ficomps
cmp
push
jle
cmp
mov
aad
out
pop
push
enter
pop
in
add
test
xchg
int3
cmpsl
das
sbb
bound
or
push
ljmp
outsl
add
insl
stc
fistpl
jns
mov
mov
out
ljmp
rcll
xchg
fwait
outsb
add
jmp
nop
pushf
adc
xchg
popa
mov
sti
cmp
lret
add
mov
aam
loopne
and
and
imul
inc
out
pop
xor
cmp
xor
int3
lock
insl
mov
xchg
ljmp
es
test
cmp
loope
xor
adc
ret
ja
std
outsb
mov
mov
into
idivb
fisubl
cmp
cld
divb
mov
jecxz
aaa
xchg
cli
mov
repz
imul
out
mov
inc
pop
adc
add
mov
out
arpl
cmp
fwait
and
xchg
loopne
xor
push
mov
loop
out
push
xchg
mov
notl
push
xchg
push
lods
and
xor
mov
mov
pop
imul
xor
movsb
adc
sahf
pop
pop
push
sbb
fs
jb
mov
outsb
adc
neg
push
bound
mov
inc
and
sti
mov
sahf
cmp
shl
lds
sub
lods
xor
xchg
xchg
nop
es
push
and
push
inc
in
push
fcoms
fwait
lret
push
je
sub
leave
arpl
pop
roll
movsb
sbb
mov
test
sbbl
in
dec
xchg
addr16
xchg
add
sub
ret
push
mov
hlt
mov
mov
insl
add
inc
add
jnp
xchg
repnz
add
fmul
xchg
mov
vcvtss2sd
xor
imul
rcrb
addl
aaa
dec
add
es
push
mulb
and
je
sbb
sub
sub
and
xor
adc
test
rcll
pop
ss
ret
addr16
fdivl
mov
lock
cs
or
sbb
jno
fcmovne
dec
mov
daa
fcomp
pop
icebp
adc
test
xchg
nop
or
rcll
addr16
daa
stos
les
fwait
push
testl
mov
xchg
jb
xor
gs
arpl
inc
cmp
push
dec
aam
ss
inc
and
fcoms
mov
adc
out
xchg
jg
inc
push
inc
outsl
test
inc
fstpt
hlt
dec
outsl
jg
push
mov
xor
sub
sub
pop
jecxz
insl
xor
push
aad
or
pop
fcomps
push
push
push
pop
bound
push
mov
sbb
fs
add
fimuls
or
mov
popa
out
xchg
test
aaa
sti
rcrl
incl
sbb
cmc
cmpl
xor
inc
je
sub
jecxz
sti
idivb
sarl
test
test
cmp
inc
pcmpeqd
pop
pop
and
popa
mov
lock
popf
loope
icebp
es
lods
mov
mov
in
in
aas
xor
aas
dec
in
adc
jp
jl
sub
ficoml
stos
sub
in
dec
lahf
subl
aaa
mov
fcomps
aaa
sub
lcall
in
inc
sbb
call
out
dec
mov
test
fildl
lret
addb
xchg
and
cmc
jnp
pop
frstor
popf
sub
frstor
pop
sarb
fcompl
adc
fisubs
repz
pushf
imul
test
xor
adc
scas
xchg
sub
lods
test
sahf
ja
cmc
fsts
ret
les
bound
sar
ljmp
outsb
es
ja
lret
xor
lret
insl
popa
in
cmpsb
pop
jmp
dec
push
dec
mov
jno
fs
dec
or
sub
push
mov
fistps
xor
rcl
mov
cmc
cmp
sub
fcompl
dec
loop
sbb
and
fs
push
daa
mov
rorl
jmp
add
mov
or
scas
pop
and
adc
in
xor
and
iret
lret
cld
add
inc
xchg
test
adc
xor
out
fldl
pusha
fwait
cli
je
cli
xchg
xchg
test
sbb
adc
push
sar
or
xor
or
outsl
fsubrl
loopne
add
rorb
aaa
call
icebp
mov
sub
loopne
out
test
out
add
and
sbb
mov
cs
mov
adc
pop
lahf
xor
sbb
add
add
test
ds
in
out
movsb
imul
or
out
pop
test
jno
lea
lea
mov
sbb
mov
ret
aad
mov
mov
loopne
add
sti
les
int3
xchg
and
rcrl
mov
insl
movsl
test
xor
push
aad
adc
ret
jno
sub
rolb
in
lea
mov
adc
xchg
addb
lahf
je
mov
repz
cmp
xor
lods
jmp
pop
loope
and
and
cmc
push
mov
jnp
inc
mov
popa
jle
jnp
sbb
cmp
add
dec
daa
int
mov
ret
aam
mov
mov
in
int
daa
rorb
cmpsb
add
push
daa
sti
shrb
push
incl
cmpsb
punpckhdq
pop
jnp
cwtl
cmpsb
jecxz
jp
pusha
fsub
xchg
cmp
mov
adc
jb
test
cmp
repz
mov
cmc
push
movsl
cltd
mov
sub
cli
jecxz
pushf
add
sarl
shrl
add
cltd
xchg
mov
or
xchg
xor
outsl
mov
loope
fsubs
cmp
xchg
out
fcomps
leave
cmp
fistpl
sbb
push
outsl
mov
sub
fstl
xchg
insb
cs
mov
mov
jnp
call
decb
pop
adc
outsl
outsb
jne
ss
cltd
subl
scas
add
lcall
aas
mov
mov
mov
sbb
push
push
inc
cmpb
ret
inc
sub
aas
or
pop
fdivl
aas
xlat
or
cwtl
jl
mov
fimull
inc
mov
shl
jmp
pop
jge
and
push
sub
test
push
mov
jecxz
enter
mov
js
popa
mov
ja
mov
leave
dec
mov
mov
add
popa
push
aad
mov
mov
inc
and
fstpt
jae
cmp
push
ret
mov
fwait
or
stos
fidivl
fstp
jns
outsb
ljmp
jecxz
push
int3
mov
rclb
mov
shr
add
sbb
xchg
add
incl
stos
ja
dec
adc
cmp
inc
or
cmp
out
inc
or
cmp
lret
push
push
loop
push
pop
fcompl
xchg
movsl
cmp
clc
fimuls
fs
jge
test
mov
mov
mov
cmpb
idivb
mov
jmp
sbb
dec
and
fs
push
push
out
sar
mov
ret
cmp
jne
mov
sbb
inc
loope
sbb
mov
shll
orl
int3
jecxz
mov
mov
xchg
mov
push
pop
fdivs
es
loop
stos
xchg
movsl
pop
lds
push
test
clc
aaa
xchg
lret
pop
jbe
int
sar
jbe
sub
add
icebp
pop
repz
jmp
mov
xchg
sub
add
lea
jnp
dec
shlb
cmp
repnz
js
adc
daa
bt
jns
mov
mov
push
mov
adc
in
popf
mov
sub
shrb
popa
cmp
add
or
fbstp
mov
xor
jo,pt
push
cmc
xchg
arpl
cmp
inc
add
jbe
test
fisubs
lds
jmp
pop
into
push
xchg
or
xchg
mov
es
loopne
and
xchg
mov
mov
adc
xor
jns
pop
dec
ss
filds
mov
xchg
rcll
or
sets
or
dec
cltd
pop
int3
mov
jg
adc
xor
ret
inc
clc
dec
add
mov
mov
mov
popa
out
fdiv
xchg
int3
push
jg
fwait
cltd
lock
inc
data16
in
mov
xchg
nop
data16
mov
lods
or
mov
popf
bnd
leave
fwait
movsb
jmp
push
push
mov
cmp
xor
movsb
fisttps
rorl
lahf
bound
mov
mov
mov
andl
xlat
xorl
in
mov
andw
int
mov
in
push
mov
rorb
movsl
test
or
pop
jmp
mov
jns
pop
pushf
scas
mov
mov
xchg
xchg
daa
push
sbb
test
outsl
pop
cmc
xchg
jmp
nop
in
push
loopne
push
mov
push
sub
in
mov
repz
and
mov
pop
iret
push
sub
inc
dec
call
decb
fnstenv
cmp
pop
addr16
adc
pop
imul
adc
ret
leave
or
adc
jge
push
and
loopne
enter
sub
mov
push
shlb
out
adc
jno
je
xchg
fst
or
js
lds
das
sbb
and
fs
push
or
push
jb
xchg
pop
mov
pusha
xchg
or
jns
sub
or
adc
mov
fnstcw
mov
pop
xchg
push
in
mov
test
loop
leave
arpl
add
mov
je
rclb
push
xchg
lea
mov
out
adc
dec
pushf
or
aaa
inc
fldt
repz
jae
imul
dec
pop
push
dec
test
add
xchg
add
push
call
ret
xlat
add
fmuls
xor
or
rcl
or
hlt
sub
dec
mov
cmp
add
or
or
lretw
add
shrb
mov
mov
test
sub
xchg
pushf
shrl
test
xorb
mov
push
out
dec
cwtl
add
ja
adc
mov
and
ds
je
pop
dec
xor
jbe
ss
js,pn
lret
pushl
out
push
jl
clc
cmp
insb
sti
pop
mov
jnp
out
xorl
into
dec
pop
daa
std
jl
cmp
add
outsb
cwtl
fidivs
stos
addr16
mov
and
cltd
cli
mov
loope
push
adc
movsb
and
test
adc
jg
aad
mov
repnz
pop
or
lret
xchg
add
je
push
icebp
jno
dec
jae
adc
xor
mov
xchg
loop
add
pop
push
xchg
loop
adc
leave
xchg
and
jo
or
stos
or
or
scas
stc
and
nop
mov
imulb
and
push
add
movsl
inc
xlat
negb
add
jmp
das
jb
std
mov
mov
les
pop
adc
sub
jbe
fwait
xor
add
stos
pop
push
out
sbb
orb
add
cmp
sbb
add
sahf
into
clc
push
cmpsl
jb
in
mov
cmp
push
into
push
add
out
xchg
and
and
mov
call
popa
orl
jp
mov
mov
jo
dec
outsb
loop
jo
xchg
push
jno
or
dec
mov
inc
pop
sub
rcrl
movsb
mov
imul
int
dec
repz
mov
ja
push
mov
icebp
pop
inc
ret
jnp
lcall
jmp
repz
jge
or
mov
in
fucom
enter
stos
sub
cmp
insb
lods
addr16
mov
mov
rcll
in
lret
and
decl
pop
and
adc
test
cmp
push
shrl
test
lret
js
mov
and
lock
fsubs
cwtl
push
mov
out
cmp
mov
or
leave
pop
jmp
inc
fisttpll
adc
inc
scas
ficoms
mov
pop
rorb
std
testb
and
das
and
stos
sub
test
repz
push
aam
sub
push
push
xchg
mov
outsb
test
xchg
divl
fistps
arpl
adc
adc
or
gs
aam
stos
roll
hlt
mov
dec
sub
popa
fsubs
jb
bound
out
xchg
mov
sahf
jp
jge
decl
cmpsl
dec
movsl
sbb
fstl
pop
aam
cmp
mov
pop
jb
mov
int
test
xchg
and
sti
dec
mov
in
test
mov
sub
flds
inc
jno
sbb
mov
xchg
sbbb
dec
pop
bnd
xor
jae
mov
popf
add
rolb
mov
jge
sbb
mov
loope
int3
loope
out
mov
cmp
jmp
mov
sti
sbb
int
push
and
test
jmp
ss
sbb
pop
xchg
lret
fisttpll
cmpsb
js
push
cmp
in
cltd
add
cltd
jbe
jb
int3
rolb
cmp
push
lcall
cmpsb
loop
dec
pop
xor
dec
xchg
mulb
and
popf
lods
xor
add
jbe
add
fadd
cmc
mov
fldenv
jecxz
cmp
ret
cmp
scas
leave
mov
mov
jbe
ss
fcmovb
mov
ss
in
cmpsl
mov
movsb
leave
push
lret
jne
push
rcr
stos
xlat
dec
repnz
lods
sbb
xchg
insl
add
sub
sbb
jp
out
pop
jae
stc
out
out
mov
push
or
das
xor
lea
pop
ja
leave
inc
jno
sub
ss
jmp
mov
sbbb
dec
mov
out
lods
loopne
xorl
test
fwait
mov
inc
aas
inc
xchg
dec
outsb
sub
call
xchg
jns
jecxz
or
cmp
lods
jg
outsb
push
sti
xchg
outsl
divl
imul
inc
in
sbbl
inc
xchg
fidivs
sub
mov
inc
mov
jle
adcl
jo
ja
push
mov
mov
insb
jnp
arpl
in
adc
shlb
rorl
sti
push
push
lods
stos
sub
pop
lock
cmpsl
mul
mov
roll
xor
leave
cmp
das
cmpsb
add
mov
aam
movsb
int3
dec
sbb
inc
decl
jb
jp
mov
lahf
xchg
dec
outsl
data16
and
mov
loope
js
push
lods
jbe
sub
popa
test
scas
add
sbb
repnz
pop
sbb
movsl
mov
add
call
int3
hlt
loopne
push
pop
pop
addr16
idiv
mov
gs
xchg
out
dec
adc
nop
pop
fisubrs
stos
sti
dec
xor
nop
fs
bound
push
ret
pusha
fbstp
mov
jge
add
xchg
data16
mov
pop
ss
lret
bound
cmp
push
push
mov
ljmp
sarb
adc
call
dec
dec
sahf
jle
ror
pop
loop
add
ljmp
push
clc
in
cmp
lock
cmpsl
inc
mov
cltd
mov
scas
ja
scas
pop
inc
clc
mov
jl
ret
push
xchg
fsubr
inc
cld
mov
jecxz
ljmp
imul
xchg
jle
scas
lds
pop
mov
rolb
push
popf
ds
pop
pop
stos
out
aad
fistps
jl
mov
inc
insb
mov
jecxz
lods
add
mov
rcrl
in
or
xchg
mov
popa
es
push
dec
popf
sub
mov
sub
dec
dec
lahf
mov
sbb
loop
cmpsl
mov
rcrl
stos
jl
bnd
add
stos
sub
pop
lret
push
pop
jno
insl
lock
scas
enter
bound
jb
push
sbb
mov
test
in
jge
mov
mov
stos
enter
adcl
rorl
and
pop
clc
push
outsl
jle
in
or
cli
call
out
cmp
out
std
icebp
cmc
outsl
pop
out
mov
adc
sub
cmc
sbb
mov
and
mov
xchg
jecxz
jne
mov
out
cli
push
inc
daa
pop
add
sbb
test
in
mov
mov
add
push
push
xor
and
adc
cltd
popa
xlat
jbe
pop
inc
and
and
gs
add
add
cmp
icebp
mov
push
data16
sahf
dec
mov
ret
ret
sbb
adc
sub
icebp
cli
outsl
cltd
aas
enter
jecxz
jb
pop
repnz
adc
jle
test
insl
mov
jge
adc
icebp
mov
lret
dec
loope
aam
pop
into
xor
mov
mov
icebp
mov
push
dec
cmp
sbb
lds
in
push
add
int
ljmp
test
clc
sar
push
stos
lahf
testl
xor
hlt
push
adc
mov
jp
push
mov
jle
or
dec
in
test
data16
pop
scas
adc
movsl
imul
insl
adc
cmp
rcll
fildll
int
mov
mov
out
lcall
ds
jmp
adc
cmpsl
jno
or
inc
push
sbb
mov
mov
and
sub
dec
or
sub
ror
sbb
out
fsubp
xchg
comiss
mov
clc
pop
and
jns
push
and
flds
das
rorl
lcall
xchg
pop
ret
ds
jg
mov
nop
into
lcall
rcll
rclb
mov
or
test
and
jno
fs
pop
xor
add
test
aad
dec
into
daa
add
and
inc
mov
adc
add
xlat
mov
jbe
push
sbb
xor
les
lock
cmp
sub
xchg
pop
std
and
mov
movsl
cld
xor
or
add
inc
or
inc
xor
incb
dec
idiv
insb
fisttpl
sub
bound
lods
sbb
aaa
ret
mov
xchg
fnstsw
loop
fdivp
dec
jl
fstpt
cmp
or
mov
cwtl
dec
jnp
inc
pop
loop
fwait
jo
add
push
clc
popf
xchg
fwait
pop
idivb
push
jecxz
dec
shll
repz
sbbl
dec
push
nop
cmp
pop
mov
int
leave
sub
insl
mov
shrl
xor
jo
out
pop
mov
mov
xchg
addr16
das
rorb
xlat
pop
shr
call
mov
pop
leave
push
je
stos
or
sbb
mov
scas
sahf
ret
jns
or
rcl
cmp
mov
std
insl
pop
loopne
jle
sbb
mov
and
and
or
cs
lret
aaa
hlt
pop
gs
mov
loop
in
das
les
cmp
and
aas
push
fisubrs
xchg
ficompl
sub
pop
addl
xchg
inc
andps
test
addr16
test
xor
ljmp
in
add
mov
test
das
jg
push
test
decl
jmp
jge
push
repnz
mov
clc
xchg
fiadds
cmc
clc
jp
jmp
arpl
adc
loop
xchg
sbb
test
out
and
and
xor
sbb
in
in
mov
push
push
jl
aas
lock
in
jne
sub
xlat
jns
jl
ja
test
hlt
inc
ret
xor
leave
dec
fiadds
push
push
dec
mov
add
push
jmp
xor
fs
mov
and
lahf
add
or
repnz
lcall
hlt
in
adcb
mov
lcall
jp
jle
pushf
mov
imull
cmp
scas
xor
addl
dec
push
stos
int
jge
jg
jae
and
jne
dec
cwtl
xlat
loop
and
ja
cmp
push
insl
dec
cli
dec
or
mov
dec
pop
add
inc
int
inc
and
movsb
jg
stos
das
in
int
mov
pop
leave
pop
jbe
dec
aas
adc
dec
fisttpll
std
jge
push
lret
stos
inc
mov
testl
fistl
and
je
jmp
bound
fnstcw
inc
cmc
and
adc
mov
ret
aaa
or
mov
cltd
cmp
mov
and
xlat
cmpsl
xchg
clc
inc
out
shlb
lods
std
jns
lret
mov
mov
and
lret
pusha
sub
pop
sub
inc
sbb
cwtl
add
fistpll
cmp
mov
mov
mov
mov
in
mov
adc
loope
mov
ds
test
jae
std
mov
in
mov
add
lret
cmp
push
or
fs
push
add
cwtl
pusha
xchg
aas
out
popa
jne
jle
mov
inc
hlt
scas
cmp
scas
dec
lods
test
or
je
xchg
clc
sub
xchg
xor
in
or
push
in
sub
mov
mov
imul
jp
gs
or
cmc
jnp,pt
inc
pop
fisubl
push
pop
ret
dec
loopne
in
mov
ss
ret
mov
test
stos
jge
mov
sbb
sub
push
faddl
ror
push
aam
fstpt
adc
sahf
dec
dec
xchg
xlat
cli
mov
jg
repnz
jb
inc
xchg
fwait
xchg
xchg
fbld
cmp
into
sarl
enter
cmp
icebp
mov
and
pushf
fs
mov
xchg
imul
add
popl
insl
cmp
iret
jp
or
jl
jnp
fcmovne
stc
xchg
push
pop
sbb
mov
cmp
imul
xlat
xor
and
aad
lret
sbb
iret
sub
fcoms
test
pop
adc
push
push
in
xchg
fucomp
ljmp
pop
sbb
inc
adc
repnz
loope
stos
dec
xchg
or
add
loopne
inc
xchg
call
or
flds
mov
std
or
popf
cli
movsb
push
sub
and
sub
sahf
dec
cmp
push
mov
or
clc
rolb
outsl
cmp
arpl
xlat
fimuls
mov
adc
add
add
xor
lods
mov
inc
jl
sub
lret
xchg
gs
cmc
xchg
ja
in
adc
aaa
cld
or
dec
lea
lret
cmpsb
adc
nopl
jo
std
jne
les
dec
pop
hlt
pop
fcomps
jle
iret
cmpsl
in
mov
imul
push
std
je
push
dec
or
mov
xor
pop
xchg
mov
jne
push
push
imul
test
xchg
pop
sarl
test
call
mov
imul
imul
icebp
fidivs
int
add
ds
outsl
scas
mov
xchg
pop
mov
xchg
push
ljmp
add
dec
stc
pmulhw
sbb
xchg
lret
mov
push
mov
mov
mov
data16
sub
popf
stos
inc
mov
inc
sahf
stc
xor
dec
dec
push
and
out
jle
in
out
jns
jle
std
rolb
mov
push
mov
enter
mov
cltd
pop
adc
mov
adc
incl
test
push
pop
jge
dec
out
push
mov
or
xlat
pop
sbb
pop
xchg
loope
mov
repnz
dec
call
mov
adc
call
push
pop
mov
nop
adc
mov
jg
in
fwait
add
ficoms
push
mov
xor
push
gs
and
adc
ficompl
pusha
mov
fcomps
and
es
pop
mov
imul
movsb
adc
or
cmpsb
clc
into
add
dec
push
pop
rolb
dec
push
fiadds
decl
jae
int3
mov
mull
rol
imul
xor
leave
aaa
out
fcomps
pop
add
pop
inc
xchg
repnz
loopne
sbb
int3
and
pop
sbb
cltd
popa
int3
negb
jne
sbb
inc
daa
mov
stc
lods
rcll
imul
jg
cmpsl
fisubrl
push
sti
sub
and
lahf
loop
or
les
adc
lret
mov
inc
inc
dec
add
cmp
filds
add
pushf
push
mov
ficoms
shl
adc
fdivs
das
mov
lock
cmpsl
fisubs
jg
sarb
push
jle
sti
into
mov
cmp
imul
mov
imul
adc
inc
pop
orb
pop
repnz
jne
lahf
push
fisubl
push
aad
or
fs
out
insb
lcall
push
fisttpll
test
pop
pop
jmp
test
push
jno
fwait
mov
loopne
mov
xchg
loopne
xchg
movsl
sbb
adc
stos
xchg
notb
mov
stc
stc
and
sbb
mov
push
test
xor
in
lret
mov
cmpsl
insl
das
out
xchg
outsl
pushf
mov
or
inc
shrb
lods
mov
xchg
cltd
insb
jo
dec
or
xchg
lret
mov
ds
orl
xor
fdivp
rcll
cltd
fstpt
das
stc
adc
jl
xor
mov
das
xor
add
cmp
inc
cmc
data16
pop
addb
jle
shll
jl
fnstenv
sbb
pushf
xor
mov
psubd
sub
xor
cwtl
mov
xchg
cmpb
mov
jg
push
stc
aad
sets
rclb
mov
sub
in
dec
std
out
adc
pop
leave
mov
pop
push
xchg
fwait
jnp
cmc
mov
adc
pop
xchg
pop
movsl
imul
or
imul
add
jge
jg
or
add
jns
scas
or
std
and
ds
fimull
lds
fs
jp
leave
push
dec
je
cmp
xchg
or
stos
xchg
hlt
dec
addr16
out
mov
cmp
push
pop
jp
iret
xor
add
mov
mov
xchg
cmp
imul
pop
mov
jg
lret
sub
sti
outsb
mov
mov
cs
fcompl
ja
push
loope
xor
xor
sbb
aas
call
push
call
pop
or
mov
jmp
in
push
fidivrs
add
push
imul
jg
jle
rorb
jae
push
pop
stos
xor
out
mov
xor
addr16
cmp
cld
adcl
mov
scas
push
mov
dec
shlb
add
enter
int
fs
or
sub
jae
mov
addr16
jmp
ror
add
jno
adc
nop
mov
inc
add
insb
fdivs
mov
xor
and
and
sahf
pop
inc
sbb
cmpsb
dec
cmp
in
movsb
js
mov
mov
lds
inc
xchg
and
sbb
lahf
popa
mov
push
call
jno
sub
fcmovnbe
jle
leave
fwait
cmpsl
mov
pop
xor
iret
sbb
mov
dec
mov
clc
shll
shrl
test
div
push
push
loope
push
xor
je
sub
jnp
or
jge
test
je
jg
mov
aad
sub
lret
push
ror
dec
mov
popa
and
cmpsb
xchg
repz
outsb
sarw
add
rorl
popa
sbb
aad
sub
or
mov
mov
pop
cmp
inc
mov
xor
int3
divl
shl
sub
mov
or
mov
adc
and
scas
clc
pop
pop
sub
mov
aaa
xchg
scas
and
and
pop
mov
push
iret
ficoml
push
lods
mov
aad
arpl
and
mov
sub
lds
jne
popa
repnz
xchg
or
icebp
mov
jle
nop
xlat
lcall
vmread
lods
jne
mov
ret
frstor
push
out
inc
xchg
cltd
adc
push
jb
jecxz
mov
out
scas
and
adc
lret
lret
orb
std
sub
sbb
push
je
mov
ja
pop
inc
aaa
xor
jmp
pop
in
pop
xor
pop
mov
sbb
int
das
push
push
divl
ja
std
dec
adc
push
jecxz
xor
xor
rolb
xchg
fwait
repz
or
mov
xchg
mov
in
sub
push
and
es
lahf
divb
int3
lods
pop
addl
adc
rcr
sbb
repz
dec
add
sahf
aaa
xor
mov
or
dec
cmp
sbb
sbb
jp
mov
repz
in
ds
loopne
and
sbb
adc
and
outsb
xor
aaa
je
hlt
cmpsb
popl
dec
in
jno
adc
scas
jp
xlat
arpl
sbb
aaa
xchg
fistl
sbb
dec
stos
mov
cmp
adc
ret
in
loop
or
loop
ja
pop
and
sub
mov
xchg
loope
ljmp
mov
fcmovnb
and
pop
loopne
dec
mov
xchg
cld
shr
mov
adc
adc
test
inc
enter
repnz
dec
ret
xor
or
add
leave
mov
push
insb
shlb
fwait
sar
mov
pop
mov
adc
inc
test
imul
mov
push
addr16
or
mov
mov
icebp
sub
xor
aaa
sbb
inc
pop
aam
jne
push
or
sbb
or
cmp
rorb
jp
push
ret
inc
cli
jns
add
outsb
pop
or
test
or
cmpsl
or
popf
ja
test
in
sbb
push
and
iret
stos
mov
fcompl
rol
sub
fwait
out
pusha
js
movsl
mov
test
mov
dec
sub
call
xor
lds
std
pop
or
aas
mov
stc
int3
ja
cmpsl
das
push
imul
inc
ret
ja
adc
mov
into
les
xor
xor
call
in
push
roll
push
add
cs
aas
xlat
pop
out
addl
sbb
mov
ret
test
inc
push
xchg
xchg
xchg
std
cmp
cmp
cmpsl
sub
inc
mov
int3
sub
and
pop
je
jl
pusha
cmpl
add
cmp
adc
push
jo
xor
cmp
sbb
sbb
inc
out
adc
mov
inc
pop
inc
aaa
mov
in
std
sbbl
dec
fcom
out
push
cmp
push
mov
test
in
xchg
push
cmp
loope
mov
jno
push
movups
in
ljmp
xchg
enter
or
xchg
inc
dec
adc
mulb
js
adc
repnz
jp
idivb
test
mov
push
fdivrl
aaa
jl
sbb
cltd
adc
sbb
clc
pushf
dec
adc
loope
cmp
test
aam
jecxz
cmpsl
mov
scas
iret
mov
push
es
cld
sbb
lret
push
pop
stc
sub
xchg
sub
jb
mov
xchg
pop
mov
mov
push
int
sub
xlat
and
push
push
test
xchg
xchg
ds
mov
mov
mov
femms
jb
mov
and
out
pop
cmp
xlat
movsl
pop
icebp
cmpl
mov
pusha
inc
in
jno
mov
js
stos
out
das
mov
out
filds
cmp
and
xchg
dec
jecxz
adc
pop
cmp
pop
addr16
lods
lock
ffreep
lds
push
dec
xchg
mov
xor
jge
shrl
push
jmp
dec
into
xchg
pop
xor
and
dec
mov
lahf
jb
push
loope
push
or
insl
dec
loop
dec
inc
scas
push
push
stc
xchg
stos
imul
in
test
mov
inc
icebp
lret
dec
ficoms
mov
cmp
outsl
inc
in
mov
add
aaa
ret
or
pop
rol
add
imul
and
cltd
cmp
adc
pop
out
in
mov
mov
das
pop
lods
mov
dec
add
or
rorl
lods
fdivr
addr16
mov
test
push
mov
xorl
call
pop
lfs
push
fists
push
dec
clc
ds
and
xor
hlt
cmp
jo
shll
dec
cmp
inc
pop
push
pop
sbb
lods
mov
lds
and
jns
lock
hlt
mov
rolb
cmpsl
sahf
pop
out
jae
sahf
aaa
outsl
outsb
in
and
jne
sub
out
jae
repz
in
out
mov
insb
out
lods
in
sub
inc
clc
mov
inc
adcb
push
faddl
divl
imul
in
fwait
aam
dec
push
mov
sub
std
int3
out
pusha
inc
lcall
out
sub
dec
int3
mov
hlt
inc
lcall
cmp
push
insl
mov
pop
sub
pusha
mov
fiadds
repnz
sti
xor
out
xchg
loop
test
mov
mul
rcll
in
ds
loope
push
leave
mov
ja
outsb
and
or
les
popa
subl
mov
mov
shrb
test
fistpll
mov
hlt
lret
push
jmp
aam
aas
cmp
cltd
pusha
push
xchg
mov
imul
ds
or
subl
mov
in
cmp
mov
cmp
xor
cmpb
cmpsl
clc
jo
icebp
or
sbb
pop
jo
add
ds
sti
mov
stos
jbe
lret
insb
adc
xor
mov
das
js
inc
pusha
sbb
sbb
or
arpl
movsb
popa
push
pop
sbb
test
inc
test
add
sub
cmp
mov
push
ja
test
mov
es
mov
cwtl
popa
pop
add
mov
or
push
pop
insb
daa
ss
dec
fdivl
xchg
js
ljmp
mov
and
xchg
or
jp
and
push
or
imul
test
int3
pop
std
repz
jp
sahf
sbb
add
cltd
dec
adc
sbb
cmp
lea
pop
in
std
sub
daa
push
scas
lcall
fsubrs
sbbl
ret
movsb
mov
ret
lock
pusha
mov
or
lods
popf
in
pop
fmuls
and
call
icebp
cmovnp
mov
popw
sti
or
sbb
sub
mov
or
push
xor
push
sub
ror
add
push
sti
xchg
jmp
sbb
out
rorb
and
aas
sbb
push
jo
cld
adc
fldenv
mov
push
push
mov
repnz
cmp
push
stc
into
mov
mov
daa
hlt
push
xor
cwtl
adc
insl
add
ret
adc
daa
je
aam
out
sahf
xor
lret
mov
cmp
xchg
or
iret
subb
les
aam
cmp
pop
and
dec
es
xchg
inc
cmp
mov
stc
pop
jno
dec
sbbl
insl
mov
and
sub
rorl
sbb
pop
pop
mov
insb
insl
mov
mov
cmpsl
and
jl
popa
test
mov
push
ss
cmp
scas
push
jne
fs
aaa
lret
jb
lds
jb
test
xchg
dec
sbb
cmp
fbstp
push
outsl
lock
ljmp
loop
sub
dec
loopne
or
insl
aaa
fsubl
lret
jae
adc
jbe
jnp
outsl
sub
or
push
fsubs
or
mov
sbb
ror
mov
xchg
negl
lahf
fcomps
lock
pushf
js
mov
cmc
mov
mov
push
outsb
fwait
inc
push
pusha
jns
aas
bound
inc
xchg
mov
push
xor
xorb
int3
sahf
mov
adcb
outsb
in
or
lods
and
ja
cmp
pop
mov
sti
dec
dec
fistps
fwait
cs
adc
mov
aaa
xor
cmpsb
repz
jecxz
cmp
mov
and
pop
imul
mov
sbb
es
fdivl
xlat
es
sahf
insl
test
mov
mov
jnp
adc
push
sub
popa
sbb
dec
inc
mov
enter
sarl
sub
mov
jg
popa
push
mov
das
fcmovbe
andl
stos
movsl
ret
iret
adc
outsl
mov
jno
test
jmp
push
divb
add
rorb
ret
xchg
cmp
sti
push
scas
in
sti
add
gs
push
outsb
mov
movsl
and
mov
fs
pop
add
mov
and
add
cmpl
lock
fldl
mov
pushf
mov
sub
push
pop
pop
xchg
andb
es
push
mov
xor
std
sbb
mov
ficoms
int
shrl
testb
nop
xor
inc
ss
aad
xlat
scas
pop
adc
in
stos
pop
adc
xor
fmull
sbb
bound
sahf
out
repnz
les
push
jmp
mov
cwtl
pop
dec
idivl
xorl
rcrl
or
adc
fs
sub
in
popa
mov
mov
pop
add
and
adc
adc
mov
jo
dec
inc
xchg
push
push
xchg
adc
popa
xor
mov
inc
pop
xor
aaa
ret
xchg
popf
psllw
mov
adc
jo
cmp
and
dec
jno
fisubl
icebp
xor
stos
pop
pop
dec
sti
mov
inc
test
adc
loope
pop
mov
loopne
cmc
leave
mov
xor
filds
sarl
fcomps
and
dec
push
lret
adc
stos
mov
repnz
mov
js
mov
cmp
and
xchg
lods
and
flds
ficoml
lods
sarl
in
pop
out
rolb
stos
sbb
adc
jb
rcr
popa
mov
rcrl
or
fmulp
push
mov
pop
js
mov
sbb
sub
pop
ljmp
xchg
mov
and
mov
cli
clc
mov
push
jbe
jle
inc
mov
push
jns
sysenter
jle
dec
jno
dec
movsb
dec
mov
pop
loop
jl
gs
insl
adc
mov
cmp
inc
push
inc
sti
fistl
cvtdq2ps
fldcw
into
cmpsb
jl
pop
adc
movsb
xor
dec
mov
out
sub
repz
sbb
jne
outsb
jae
xor
push
jecxz
xor
popa
jle
mov
jg
lcall
leave
int3
jns
das
jmp
inc
into
cli
pop
xor
cmp
fimuls
gs
into
aad
loop
cmc
xchg
roll
dec
flds
add
adc
outsb
js
cltd
iret
and
jecxz
pop
outsb
add
int3
push
or
mov
pop
inc
add
push
mov
adc
pop
push
fwait
jge
mov
movsb
push
pop
jecxz
dec
push
dec
add
fs
gs
cld
in
lods
and
jno
leave
and
mov
mov
ret
sub
lods
in
out
mov
push
push
jno
repnz
movsl
or
decl
loope
dec
mov
dec
into
popf
and
cld
dec
lret
in
insb
repnz
les
sbb
push
mov
jbe
int
test
mov
icebp
xor
loope
xor
bound
cli
push
xlat
cmc
enter
pop
dec
popa
dec
pop
add
adc
sub
pop
dec
stc
or
call
mov
stos
mov
shll
out
cld
scas
pop
mov
mov
sbb
xor
sub
in
sahf
lods
pop
lcall
gs
icebp
jno
add
imulb
push
cmpsl
rcr
cld
or
jno
popa
mov
aaa
inc
jl
dec
mov
adc
ss
mov
dec
aad
pop
push
rcrb
xor
pop
ljmp
in
out
test
outsl
in
xchg
aaa
pop
or
aas
sbb
pop
jb
dec
sbb
cltd
sbb
ret
cs
imul
push
mov
pushf
mov
aas
stos
cltd
push
stos
or
cmp
add
sub
lret
sbb
dec
xchg
hlt
outsl
adc
mov
push
in
dec
data16
jnp
mov
xchg
sub
add
enter
mov
pop
sahf
jge
dec
fnstcw
dec
negl
popf
aas
mov
add
xor
push
lcall
lcall
pop
sub
jb
jb
cmp
sub
and
aas
and
mov
shll
jne
pop
pop
test
lahf
lods
cmp
xor
jne
mov
out
call
negl
xchg
jo
push
stos
cmp
pop
in
into
xchg
out
shl
push
xchg
popa
ret
cmp
ret
xor
mov
sti
jecxz
mov
push
fistpll
out
xchg
dec
mov
outsb
sub
ss
cli
mov
mov
push
shrl
shll
push
jg
sahf
cmpsl
gs
mov
pop
jo
lods
cmp
xchg
and
fs
movsl
sub
or
into
lds
push
jbe
in
imul
bound
mov
push
stos
sti
mov
mov
dec
mov
jae
mov
fmull
add
inc
mov
mov
popa
dec
int
jecxz
mov
mov
daa
loope
mov
mov
sub
neg
inc
mov
pop
lret
jp
cld
ret
movsl
cmpsl
pop
out
jle
outsb
ljmp
out
mov
out
xchg
cmp
adc
loopw
push
sahf
push
pusha
ja
out
mov
or
ljmp
pop
mov
decb
faddl
loop
out
in
mov
pop
decl
filds
jge
pushf
mov
cmpsl
outsb
ljmp
pop
add
sti
fnstsw
movsl
cltd
sub
or
cwtl
into
sub
mov
and
or
leave
add
inc
data16
leave
pusha
arpl
push
dec
add
sbb
out
mov
loope
push
nop
mov
in
xor
repz
and
push
sub
adc
les
mov
or
lods
or
aas
jb
xor
scas
inc
jecxz
lock
dec
push
and
dec
pop
cltd
insb
jmp
stc
ret
test
rcr
jb
and
idivb
sbb
xchg
ret
push
mov
fmuls
loopne
andnps
lods
pop
mov
sbb
jp
cmp
test
xchg
ja
pop
stos
adc
ss
xor
add
mov
xor
mov
bound
push
fldt
iret
test
lret
mov
jge
and
cmpl
dec
lods
fwait
out
cmpsl
push
cmp
faddl
sahf
inc
js
sbb
dec
ja
imul
jp
mov
xchg
cld
insl
sbb
cmp
adc
mov
movsl
in
fistps
loop
push
xchg
push
addl
stos
imulb
mov
mov
rcrb
lahf
adcb
and
scas
add
test
mov
sbb
into
pusha
mov
repnz
subb
movsb
ss
and
adcl
lea
popf
je
ss
std
mov
push
and
dec
cmpsl
ja
scas
aas
aaa
xchg
fistl
sub
jl
mov
sub
shrl
sbb
nop
mov
scas
enter
xchg
cli
xchg
fsubrl
int
mov
test
inc
and
repnz
pop
outsb
idivl
imul
pop
lods
fadds
fiaddl
sub
add
add
and
pop
fistps
cmpsb
ss
pop
xchg
mov
mul
cmp
out
fsubrs
jnp
addr16
sbb
mov
and
adc
jg
xor
out
fsubrs
pop
mov
and
cld
ljmp
add
dec
test
cs
loop
push
mov
stc
lods
push
mov
aam
dec
arpl
cwtl
call
or
in
cmp
inc
in
mov
lcall
sub
sbb
popa
imul
add
add
movsl
icebp
inc
lock
pop
mov
xchg
ret
aas
pop
aam
inc
pop
out
sahf
scas
int
xlat
sub
jp
push
movsl
inc
add
push
imul
les
adc
pop
inc
negb
sbb
enter
push
faddp
pop
adc
sub
ret
pop
mov
or
or
xchg
test
insb
cmp
js
sbb
xchg
and
incb
or
or
test
sarl
add
add
test
filds
fdivl
lahf
and
cmovns
lcall
clc
xchg
mov
inc
sarl
pop
push
pushf
lds
jne
int
stos
inc
sbb
pop
clc
hlt
push
test
jmp
pop
enter
jge
imul
xchg
push
in
lcall
inc
into
shlb
jo
mov
sub
out
aam
scas
cmpsb
jo
push
loopne
jno
rcrl
lods
roll
jb
xchg
pop
rcrb
daa
and
dec
add
pop
adc
lods
movsb
outsb
inc
gs
lea
and
xor
mov
stos
lods
repnz
jecxz
sub
sub
fwait
mov
mov
ds
mov
inc
shl
adcl
shr
fcoml
sbb
xchg
stos
xchg
push
mov
mov
loope
adc
mov
cmpsb
int
inc
sub
ret
fldt
pop
jmp
rorb
cmp
ret
xor
dec
lret
inc
cltd
cmp
out
xor
jb
pop
push
and
out
jge
notl
sti
ret
subl
xor
std
bound
icebp
dec
int3
stos
movsb
inc
testb
jle
enter
data16
loop
pop
ljmp
int3
lods
jno
outsl
jp
sub
test
mov
cmpsl
sub
xor
inc
push
lea
sbb
cmp
imul
inc
cwtl
jle
in
inc
fcomps
mov
aad
popf
out
pop
and
pop
xchg
mov
push
rcll
lahf
int3
inc
sbb
or
jecxz
test
or
sbb
stos
nop
and
mov
addb
dec
outsb
rorb
nop
repnz
aaa
cmp
js
loopne
adc
adc
rcll
jns
cmc
outsb
sbb
js
div
mov
test
in
inc
popa
cmc
mov
jns
xchg
popa
or
popa
enter
leave
and
dec
sti
jle
mov
cld
push
loopne
aas
outsl
jo
cmc
sbb
mov
push
movsb
out
jmp
out
cmp
sbb
xchg
ret
dec
testb
xchg
fisubrl
pop
das
xchg
jae
lods
adcl
add
test
rorb
or
ja
xchg
jae
addr16
lret
pop
popa
jbe
dec
es
int3
mov
jp
lods
lcall
aad
clc
icebp
or
inc
stc
dec
push
cmp
enter
xor
hlt
lods
ljmp
dec
inc
sti
adc
push
jne
push
out
cmp
inc
cli
mov
gs
aam
sub
outsl
push
sbb
pop
jae
and
xchg
sti
pop
out
int3
clc
pop
mov
or
mov
xor
into
fdivr
sbb
mov
cmc
test
and
jmp
push
mov
lea
jmp
inc
and
sub
es
fwait
mov
sub
repnz
jbe
gs
sbb
jo
dec
popf
mov
mov
je
or
lea
in
and
test
xlat
out
or
jns
xchg
sahf
mov
xor
xor
xchg
stos
cwtl
cmc
adc
std
mov
lcall
ds
jle
xchg
scas
jle
insb
insb
orb
nop
lcall
roll
sub
sub
inc
repz
js
and
out
incl
insl
pop
js
pop
inc
inc
cmpsl
xchg
push
xor
cmp
outsl
sbbl
jmp
test
call
out
dec
mov
ds
xchg
jae
or
ds
fwait
dec
lahf
sbb
in
push
push
ds
jmp
jmp
or
mov
push
add
inc
test
jb
sub
aaa
or
xor
mov
mov
sahf
insl
pop
bound
cmp
pop
sbb
iret
inc
add
lock
orl
out
mov
mov
ficoms
bound
push
ret
jns
xchg
cmp
fldl
dec
adc
in
push
sbb
inc
lret
mov
pusha
arpl
jg
in
mov
mov
mov
add
lods
mov
mov
and
outsb
int
data16
outsl
sub
daa
xor
imull
call
jbe
mov
ja
sbb
add
into
jl
jge
xor
outsl
dec
cmp
push
test
sub
sbb
out
int3
lahf
jb
xchg
out
mov
in
das
in
ret
in
jne
add
sbb
daa
mov
stos
cmovl
jnp
push
or
jbe
in
das
sbb
adc
inc
sti
xchg
sbb
xchg
sbb
call
mov
jg
mov
hlt
rol
pop
das
cwtl
enter
mov
js
xchg
adc
aas
gs
mov
addb
dec
xor
outsl
xchg
inc
sub
xor
mov
loope
gs
rolb
xlat
cmpsb
mulb
mov
aaa
daa
sbb
les
adc
lock
pop
andb
or
sbb
mov
outsb
push
outsb
push
lcall
and
cmp
mov
inc
xchg
enter
mov
out
pop
jg
xchg
adc
pop
or
mov
jbe
mov
push
js
and
add
ret
insb
test
jb
pop
xor
popa
shld
dec
sti
shr
lods
das
imul
push
cs
inc
or
dec
ret
add
adc
mov
mov
fdiv
aad
xchg
test
adc
mov
ret
in
cli
xchg
adc
xchg
and
rcr
inc
pushf
popf
inc
inc
scas
or
fwait
adc
sub
dec
fs
movsl
push
sbb
rcll
xchg
push
in
xchg
pop
stos
in
scas
and
icebp
mov
xchg
add
test
sbb
mov
rcrb
decb
popl
mov
pusha
fs
adc
je
ja
cmp
add
bnd
pop
add
and
js
xorb
incb
push
pop
xchg
sub
test
fcmovnu
pop
movsb
insb
pushf
push
mov
dec
mov
iret
mov
push
popa
pop
loop
clc
sar
and
xchg
das
repz
cwtl
das
mov
in
lods
push
int3
js
fldcw
in
cli
inc
incl
inc
jp
add
jge
lahf
add
insl
pop
xchg
flds
insl
xchg
in
or
adc
negl
lea
sub
mov
jno
je
ja
lock
lea
imulb
lods
dec
pop
cmc
push
jae
lock
sbb
je
or
mov
mov
lods
xor
iret
xchg
lret
imul
dec
fistpll
cmpsb
push
into
push
ss
dec
fmuls
cmp
insb
jmp
pop
pop
mov
add
into
aad
and
xor
arpl
jg
clc
arpl
sti
in
dec
jg
cmp
daa
cmp
inc
add
mov
jb
cmp
sub
insb
inc
xchg
enter
lock
mov
cld
push
cmp
jne
lds
ja
or
cmp
add
pop
xchg
xchg
fcmovnbe
xor
out
movsl
xchg
movsb
repz
test
pop
mov
jns
icebp
test
lods
iret
lahf
stos
stos
sub
jge
dec
jmp
ret
lret
sbbb
push
enter
pusha
lcall
cltd
jp
outsb
sub
mov
xor
push
jns
pop
std
lods
jmp
call
inc
or
sbb
mov
ret
or
sbb
adc
ss
loopne
pop
adc
push
adc
aaa
pusha
jle
mov
mov
out
mov
aas
dec
rep
xchg
mov
dec
dec
movsl
mov
cs
sbb
jae
in
pmaxub
subb
fmul
out
sbb
imul
mov
pushf
jne
dec
int3
sarl
push
and
int3
ja
mov
jae
mov
sbb
xor
loop
mov
mov
inc
testb
les
mov
or
lret
ljmp
jge
pop
std
enter
insl
loopne
sti
push
fildl
nop
push
negb
fstl
rorl
andl
lret
mov
xchg
fistps
leave
fstps
push
pop
pop
rclb
gs
xor
mov
jecxz
stos
aam
rorb
or
jbe
sbb
fidivs
out
push
pop
addr16
mov
cvttps2pi
jle
cmpsl
bound
adc
xor
mov
fdivrl
sub
mov
push
cld
lds
les
cmp
pop
sti
mov
scas
ret
js
roll
dec
data16
je
in
or
mov
mov
inc
das
sbb
aaa
rclb
mov
dec
lods
push
out
and
aad
mov
xchg
insb
xchg
clc
sbb
arpl
mov
lods
clc
inc
or
push
sti
mov
jno
pusha
adc
jmp
adcl
sbb
mov
cmp
incb
sbb
jl
stc
mov
out
xchg
out
cmp
cli
lcall
mov
mov
xor
cs
push
imul
xor
fsubr
fdivl
call
inc
sbb
mov
jo
popa
jl
or
call
repnz
int
push
cmp
pop
cli
jmp
cmp
jae
jne
aaa
pop
pop
hlt
pop
loop
sarl
fisubrl
pop
dec
mov
pop
ja
iret
push
pop
sub
out
sbb
icebp
push
loop
and
xchg
push
movsl
or
pop
adc
xchg
dec
pop
fs
xchg
shrl
les
loopne
int
pop
data16
sub
adc
mov
subl
sub
je
push
inc
in
xor
int3
push
in
pushf
add
adc
call
mov
mov
mov
sub
mov
cmc
sub
xchg
imul
push
inc
and
xchg
inc
pop
xchg
test
aas
push
add
scas
daa
pop
jg
pop
outsl
sbb
out
push
inc
iret
mov
fpatan
add
dec
mov
insb
movsl
inc
ss
pop
scas
fistl
das
pushf
or
jns
push
xor
popf
xchg
enter
mulb
dec
lahf
or
sbb
jge
sbb
sahf
mov
dec
das
inc
gs
imulb
in
fnstenv
push
sub
jne
add
scas
pop
push
cli
push
cmc
mov
ret
aaa
nop
into
out
clc
lea
fwait
adc
sarb
add
pop
fs
sub
pop
sub
fs
or
jae
jbe
iret
xor
push
ror
iret
mov
leave
adc
jmp
jns
lock
push
loop
sub
mov
mov
push
jb
scas
sti
mov
call
mov
repz
jbe
lock
daa
fmul
ds
out
shlb
pop
jbe
aas
fcmove
ficompl
aam
hlt
rol
inc
addr16
xor
cwtl
adc
or
and
inc
or
and
push
dec
lret
test
ljmp
dec
push
mov
sbb
out
and
imul
xchg
mov
cli
lahf
jmp
and
repnz
and
notl
cmp
adc
sti
pop
pop
data16
and
push
jnp
out
dec
lcall
icebp
sbb
int
outsb
push
fcomi
push
mov
mov
dec
inc
dec
js
jb
xchg
push
data16
mov
movsl
lea
cs
xor
js
cltd
int3
xchg
mov
mov
sbb
xor
add
pop
mov
xchg
outsl
adc
jecxz
repz
mov
test
stos
repnz
into
or
push
jecxz
flds
es
fsub
out
adc
xor
push
lahf
sbb
imul
ficoml
pop
push
dec
pop
adc
cwtl
sub
test
test
cmpsl
lret
stc
mov
out
xchg
pop
mov
or
clc
xor
push
out
into
mov
mov
mov
leave
aad
pop
push
cs
pop
aas
mov
add
and
xor
test
shlb
jmp
push
add
pusha
jne
stc
shrl
popa
push
imull
pushw
subb
dec
or
pop
imul
sbb
mov
push
pop
mov
mov
dec
scas
imul
repnz
mov
shlb
cmc
test
scas
pop
sbb
or
ja
mov
stc
aad
cld
test
cmp
adc
dec
outsb
imul
ljmp
sub
dec
lret
std
adc
loopne
lahf
jae
fldl
sbb
inc
mov
and
cli
cli
xlat
fwait
insl
lahf
jecxz
adc
xorl
or
and
fldenv
lcall
test
andl
lret
sbbl
sub
test
pushf
aam
dec
or
mov
xchg
data16
test
and
adc
mov
inc
mov
out
mov
push
js
xchg
imul
sub
dec
sub
jmp
das
es
dec
mov
pop
out
je
and
jmp
cmp
mov
dec
mov
xor
test
dec
dec
mov
dec
js
push
dec
inc
and
push
sarb
cmpsl
pop
xchg
sub
inc
pusha
xchg
sub
arpl
push
shrl
jno
mov
xchg
in
lods
decl
sbb
jbe
xor
or
jns
adc
das
dec
jo
lahf
out
lret
pushf
cmp
lods
pop
stos
and
call
sub
dec
out
xor
adc
add
xor
sub
pop
jno
mov
inc
je
cli
push
push
sbb
sub
lods
or
sbb
xchg
aas
into
aaa
jo
and
lea
fwait
mov
lret
push
popa
mov
mov
aas
scas
mov
lea
mov
lds
in
pusha
into
xor
jno
sarb
shrl
inc
xchg
fstpt
das
pop
mov
stos
dec
push
sub
adc
jle
fsubrl
xlat
xor
mov
and
pop
out
notb
or
fdivr
scas
pop
push
lret
leave
cmp
mov
inc
fcompl
push
mov
dec
sbb
repnz
jae
or
insl
push
sarb
xchg
lds
or
xchg
movsl
or
repnz
cltd
gs
jnp
cmp
add
or
xchg
int
lds
cli
push
mov
jmp
mov
jmp
sub
or
push
fimull
xstore-rng
cmpsl
pop
push
test
add
popa
dec
jle
data16
pop
shll
push
shrb
out
lea
sub
xor
dec
loope
addr16
xchg
inc
rcr
mov
jge
scas
jns
aaa
lret
sti
cwtl
out
sub
xlat
inc
por
jg
loope
lods
jbe
mov
scas
iret
insb
mov
cmp
jge
in
cmc
aaa
push
jcxz
xchg
xchg
adcb
ljmp
add
insl
das
les
fwait
jge
dec
push
int3
js
mov
jae
adc
pop
jno
push
or
mov
jge
mov
fisubl
mov
enter
call
outsl
test
aad
jmp
mov
insl
mov
xlat
cmp
shrl
inc
in
lret
cs
sub
outsb
jmp
and
scas
and
lods
and
sti
enter
sub
out
sub
fimuls
insb
rcrb
dec
push
pop
loopne
mov
push
inc
jecxz
test
or
mov
xor
inc
cmp
add
in
jle
jg
adc
sub
test
and
jne
pop
jno
xchg
mov
incb
pop
push
cmp
cmp
push
or
xchg
xchg
dec
adc
fwait
std
sub
lock
dec
xor
pop
add
imul
jge
jmp
popl
jo
ss
out
sarl
inc
das
push
and
scas
pop
push
mov
nop
inc
cmp
es
rcrb
je
jb
mov
fsubrl
or
cmp
push
repz
lods
movsl
xchg
into
lret
jecxz
inc
loope
shr
cmp
sti
cmpsb
rcrb
push
pop
sub
jle
outsl
and
pop
sbb
repnz
movsl
inc
sub
jmp
xor
fldl
loope
pushf
xor
mov
push
jbe
or
pop
mov
xor
shl
sub
mov
inc
ret
insb
jg
ret
scas
or
inc
mov
lcall
pusha
jecxz
fmull
adc
mov
outsl
movsb
andl
xchg
into
dec
mov
or
cmpsl
xchg
fdiv
movsb
out
add
cmp
inc
fmull
cmp
sbb
stos
lods
xor
add
push
sub
inc
int3
mov
xchg
rep
or
push
fldcw
inc
imulb
das
fnstsw
out
or
in
outsl
ss
cmp
mov
mov
clc
fxam
rcr
nop
mov
jge
xchg
test
cmp
push
loope
dec
lods
dec
lock
fadds
jmp
mov
icebp
mov
mov
dec
inc
idiv
inc
mov
push
mov
fidivl
xor
leave
mov
xor
std
lret
fists
pushf
cwtl
jno
jnp
fsub
jle
fsubs
push
push
cmp
jne
test
call
cmp
mov
in
xchg
pop
pop
arpl
insl
xor
mov
jp
into
dec
inc
adc
shrl
fs
and
shl
xchg
push
dec
jo
cwtl
insl
loope
xor
fs
rolb
mov
push
mov
sahf
pop
ffree
xor
shrb
mov
and
and
test
jmp
jne
and
mov
adc
loope
std
xchg
pop
mov
jle
enter
mov
clc
sub
fwait
imul
push
inc
push
add
stos
in
jmp
cmpsl
mov
cmpb
stos
ret
push
pop
pop
xchg
or
dec
movl
sbb
idivb
and
aam
mov
clc
nop
data16
push
pop
push
dec
dec
mov
mov
popf
clc
mov
add
sahf
cmp
push
push
add
xor
jle
mov
mov
test
dec
icebp
mov
mov
lods
shll
pop
pop
cmp
mov
cs
aaa
scas
mov
xor
mov
inc
mov
mov
repz
mov
inc
mov
cmp
in
sbb
sbb
int
xchg
mov
ficomps
inc
inc
adc
shll
inc
into
xor
mov
and
leave
in
fldcw
shlb
mov
lcall
enter
xchg
add
jno
push
stos
pop
in
popf
fiaddl
jbe
xor
fwait
xchg
cmp
adc
orb
push
push
add
and
aad
cmp
xchg
adc
in
outsl
ljmp
fwait
and
push
mov
scas
jne
inc
inc
sbb
mov
loope
push
jmp
cwtl
mov
jmp
inc
clc
jnp
xchg
out
lods
lret
addb
jno
jb
cltd
orb
mov
nop
in
xor
movsb
mov
push
xchg
and
xchg
ja
aam
sub
jo
mov
add
cmpb
cli
scas
dec
jmp
iret
mov
js
mov
or
test
jl
jb
cmp
scas
insb
mov
push
mov
mov
repz
lret
jbe
sub
push
pushf
mov
stos
inc
pusha
add
push
in
aam
mov
dec
cmp
leave
mov
inc
std
popa
or
jo
daa
pop
sub
outsb
fwait
outsb
movsl
hlt
aas
add
push
jg
add
sbbl
fstps
in
dec
lea
xchg
loop
xchg
into
lods
cmp
js
es
imul
jl
xor
and
mov
mov
mov
in
pop
filds
ret
lock
cld
lds
shrb
inc
adc
enter
shrl
fistps
mov
inc
hlt
sub
fs
adc
dec
add
in
in
test
cmp
add
scas
cmp
push
add
subb
je
and
decb
jg
out
sub
xchg
mov
xor
or
dec
pop
int3
push
out
jmp
xor
bound
loop
push
inc
popf
ret
xlat
and
lds
cmpsb
mov
sub
sbb
inc
sar
mov
dec
push
mov
rol
roll
cmp
mov
jnp
rcll
add
bound
shll
fldl
sub
sub
data16
fistps
dec
add
jo
xchg
xchg
sahf
int
hlt
cmp
add
dec
mov
mulb
aas
frstor
xor
xor
ljmp
fpatan
mov
lds
test
ljmp
mov
std
xchg
aam
popf
mov
adc
cmc
test
test
inc
and
pop
inc
mov
push
xchg
in
jb
jne,pn
leave
xchg
add
ret
cmc
inc
xlat
out
loope
xchg
shll
xchg
call
jae
test
push
and
pop
cli
mov
pop
jge
push
add
in
lret
call
les
rorl
cli
les
enter
movsl
xchg
scas
pop
mov
xor
aaa
jge
repnz
add
leave
sti
sahf
adc
out
push
or
fisubrs
dec
in
sar
cld
stos
fstpt
inc
sbb
jge
sahf
add
xlat
addr16
in
sbb
mov
add
dec
movsb
push
cwtl
rcrl
lods
dec
dec
sti
cmp
scas
adc
fcmovbe
loope
mov
sbb
lods
shlb
mov
fisttpl
fwait
fwait
stos
loop
filds
lret
out
push
leave
mov
mov
es
xchg
es
jmp
dec
push
inc
jae
leave
push
test
rcrl
aad
jl
cmp
push
ljmp
je
push
dec
jbe
pop
in
jnp
inc
cmpsl
cmp
adc
neg
jge
jns
and
xchg
sti
fnstsw
or
movsb
cltd
loopne
rcrb
scas
mov
and
enter
out
mov
add
ret
jnp
pop
mov
jae
mov
fadd
xchg
outsb
pop
clc
add
inc
out
icebp
push
cmpsb
jle
call
lods
stc
ja
pop
ds
mov
movsl
push
mov
pop
add
pop
popa
mov
mov
cltd
popl
jl
inc
sti
xor
mov
lea
out
insb
movsb
jns
loopne
add
xor
push
cltd
mov
cmp
jnp
rcll
and
pop
test
fadd
add
in
lcall
xor
out
adc
cmp
ss
sbb
xor
mov
cmpsl
mov
loop
fmuls
fnsave
leave
add
xlat
pop
cmp
jp
lcall
lds
or
mov
push
mov
or
cltd
or
add
fbstp
and
xchg
fisttpll
pop
dec
mov
daa
adc
ja
push
sub
adc
icebp
xchg
pop
xor
pushf
inc
outsb
xor
or
mov
add
sub
mov
out
stos
cmpsl
test
cmp
xchg
in
xor
in
pusha
xchg
mov
mov
stc
lods
xchg
fbstp
aas
or
or
sbb
sbb
sbbl
dec
mov
and
dec
pop
adc
lret
push
add
cmp
rorb
sub
bound
arpl
jnp
inc
push
cli
dec
js
adc
sbb
pop
cmp
movsb
mov
push
adc
loop
xor
aas
pop
mov
pusha
mov
mov
shlb
and
adc
subb
lock
in
pop
mov
or
sbb
repz
inc
pushf
jge
lock
push
pop
enter
inc
jp
xchg
pop
and
repz
sub
das
dec
loope
test
into
aaa
pop
xchg
mov
and
shr
adc
xchg
mov
mov
mov
lods
jne
mov
inc
xchg
orl
lcall
pop
jmp
repnz
repnz
pop
imul
lods
add
sti
sub
xor
stc
daa
sub
inc
pop
cmp
rcl
mov
push
adc
fcompl
mov
mov
push
lock
jns
mov
and
and
cmc
in
test
repnz
cmc
pop
imul
ret
push
xlat
ja
data16
mov
or
out
pop
add
cwtl
fistl
mov
add
sahf
test
xchg
lds
cmp
dec
js
xor
mov
stc
cmpsb
fs
dec
cwtl
add
jl
pop
cs
aam
xor
inc
ss
imul
mov
push
ret
lahf
movsl
addl
dec
roll
out
push
add
add
mov
ret
in
add
icebp
loop
insb
mov
pop
dec
idivl
inc
scas
loop
mov
jno
xor
sar
xchg
add
push
pop
cmpsl
loopne
xchg
filds
repz
movsb
pop
iret
sub
xchg
lahf
into
add
and
sbb
lcall
cmp
xchg
cmp
xor
movsl
mov
leave
aam
pop
sbb
sub
cld
mov
insl
or
inc
loopne
sub
inc
ljmp
insb
mov
sti
movsb
icebp
in
adc
or
add
dec
fidivrl
andl
mov
pop
xlat
icebp
jae
popa
jmp
sbb
mov
push
enter
outsb
aad
mov
in
movl
mov
lds
movsl
inc
test
popl
lds
sbb
ja
sahf
pop
xchg
cmpsl
rcrl
filds
fisubs
sbb
daa
jl
xor
div
adc
jmp
shrb
inc
inc
aam
mov
adc
clc
out
ret
movsb
outsl
repz
cmpsb
add
popa
lods
or
ror
pushf
mov
add
pop
clc
cmp
pop
adc
mov
mov
inc
inc
and
repz
mov
rcll
sbb
mov
pop
ss
into
inc
jmp
cmp
or
inc
jp
inc
fmuls
inc
fs
jge
je
enter
adc
sub
jo
out
iret
or
test
jl
push
std
repz
lret
xor
test
xchg
push
int3
add
cmp
fsubl
mov
sub
mov
adc
lret
mov
pop
xlat
add
dec
mov
or
push
sbb
imul
pushf
int
cld
es
bound
sub
pop
rorb
pop
dec
add
lea
int
xchg
cmpsl
dec
stos
outsl
sarb
int3
dec
adcl
sarb
lods
cli
and
or
jns
test
and
lods
in
sbb
sub
prefetchwt1
cli
xchg
jl
filds
mov
cmpsl
pop
aam
xchg
inc
sbb
in
subb
loop
test
inc
imul
outsl
mov
or
pcmpgtw
push
adc
aas
mov
lcall
cli
xchg
pop
ljmp
sub
icebp
movsb
dec
hlt
cmp
push
and
movsb
xchg
mov
pushf
or
out
out
push
push
divl
cmpsl
sbb
add
adc
mov
push
dec
push
sub
scas
test
or
jecxz
push
push
jg
push
mov
repnz
push
and
lret
cmp
gs
jnp
stos
add
add
mov
js
cli
push
mov
setne
push
rcr
out
and
push
lds
push
ss
inc
pop
mov
inc
push
mov
cmp
cmp
sbbl
xchg
negl
sub
xor
iret
std
xchg
add
in
mov
lret
mov
xchg
xchg
push
pusha
movsb
int3
jb
xor
push
mov
pop
sbb
sbb
xchg
mov
sti
cld
in
add
dec
aad
fcoml
sub
fwait
cltd
inc
ss
pop
jb
mov
pusha
cltd
aaa
cmp
ljmp
fwait
pushf
pop
jo
negl
test
jns
dec
gs
and
mov
sbb
pop
mov
iret
aad
jecxz
pop
jne
push
movsl
mov
dec
aam
cltd
push
xor
sahf
or
and
imul
mov
jle
in
repnz
dec
mov
cmpsb
inc
xor
ljmp
rolb
adc
or
leave
jne
or
dec
outsl
jge
inc
push
ljmp
xor
mov
lret
ss
push
imul
je
xchg
jle
gs
mov
or
xor
and
adc
imul
dec
popl
icebp
out
in
and
gs
pop
add
sahf
mov
das
nop
pushl
fcoms
push
pushf
pusha
int3
adc
mov
pop
sbbb
mulb
mov
inc
cmp
js
sbb
std
add
and
hlt
rcrb
add
imul
cwtl
fs
js
or
and
jae
pop
fnstsw
mov
nop
jecxz
dec
and
in
dec
cli
test
dec
pop
fildll
inc
mov
mov
inc
sbb
pushf
mov
fucomip
ret
xor
fmull
bnd
cmc
inc
push
sub
es
sarl
ljmp
stc
ja
mov
mov
xor
xchg
shll
or
push
int
and
popf
xchg
xor
mov
rol
mov
jns
adc
into
push
mov
int
xchg
test
xchg
jmp
repz
add
xchg
int
mov
rolb
sbb
sub
push
jb
push
push
mov
cmc
add
sub
mov
int3
imul
sbb
and
mov
add
add
lahf
push
adc
pop
pop
inc
jnp
cwtl
js
adc
jo
fldenv
mov
or
popa
rcrl
dec
into
jns
xchg
loopne
int3
pop
jno
in
adcb
lret
mov
mov
call
mov
add
insb
icebp
iret
fisttps
lcall
ja
lret
cmp
or
push
push
cwtl
stos
xchg
arpl
out
es
adc
and
or
push
inc
sub
aam
pop
push
pop
lcall
hlt
mov
test
xchg
xor
dec
stos
xor
cs
xor
shlb
jp
inc
pop
test
lds
rcll
loopne
inc
pop
sahf
jge
lret
fs
mov
inc
mov
popf
shl
movsl
out
fmull
sbb
mov
push
loope
xor
mov
and
test
push
push
jb
popf
ret
fcmovnu
xchg
lret
pop
aad
mov
lahf
add
mov
es
jb
xchg
jp
lcall
or
adc
cs
and
cmp
test
push
stos
daa
jecxz
loopne
pop
les
loopne
sub
add
xchg
std
ret
mov
out
jl
dec
enter
lock
movsb
push
cmpl
cmp
adc
push
cmp
out
call
cmpsl
xchg
and
sbb
into
inc
mov
mov
and
inc
xchg
outsl
imul
out
mov
insb
fdiv
pop
out
mov
mov
or
lcall
mov
fimull
ret
mov
insb
dec
sub
adc
aad
jbe
mov
test
xorb
mov
push
jge
mov
mov
inc
cmp
iret
mov
mov
sbb
push
adc
loop
je
aam
mov
gs
adc
lcall
cmp
sbb
push
sub
inc
push
and
out
push
lret
lret
popl
mov
jns
ret
mov
push
jns
inc
pop
stos
xor
jl
xor
rol
test
sbb
insb
loop
inc
outsl
xor
dec
addl
je
or
shrl
sbb
inc
ret
ret
sbb
jnp
nop
pop
fidivrs
sbb
pop
imul
dec
das
sbb
dec
mov
sub
cli
jge
cmp
pop
and
cmp
adc
repnz
cmc
and
jle
inc
in
das
mov
scas
inc
push
push
push
in
cmp
jmp
dec
sti
mov
xchg
inc
outsb
or
xchg
add
and
and
out
fmuls
mov
movsl
lahf
stos
clc
popa
jns
mov
and
out
mov
fs
inc
int3
pop
addb
xor
ret
push
arpl
xchg
mov
sti
jle
push
pushf
lea
imul
ljmp
int
push
sub
pop
cmp
dec
mov
sbb
pushf
pop
pushf
std
push
jl
into
xor
test
ret
and
dec
ja
insb
and
xchg
or
mov
pop
xlat
pop
jmp
and
mov
dec
xor
adc
loope
or
out
sub
stos
sbb
fs
dec
and
imul
push
lock
or
inc
movsl
aam
xlat
popa
adc
bound
bound
jb
leave
push
in
push
push
mov
xlat
or
mov
bound
mov
loop
xchg
repz
rolb
cmpsl
in
dec
pop
inc
lret
insb
cmc
icebp
adc
les
in
js
js
dec
mov
call
adc
aas
movb
imul
mov
fisubrs
add
mov
cmc
std
jnp
out
jmp
test
push
jne
cmp
stc
sub
out
into
mov
mov
xchg
stos
imul
inc
js
pop
in
mov
stc
push
jp
mov
mov
lds
das
cmp
jne
lods
insb
pop
cltd
push
jb
out
sub
cmp
dec
mov
xchg
jne
movsl
cwtl
cwtl
xor
rcrl
sbb
jecxz
iret
cwtl
jmp
incb
push
mov
cmpsl
sub
es
jg
dec
dec
inc
xchg
insl
push
pusha
add
dec
nop
pop
ret
cs
pop
add
loope
xchg
push
mov
add
addb
repnz
incb
scas
inc
mov
cmp
lcall
arpl
xor
adc
shrl
addr16
jg
aas
sahf
inc
sub
cmp
lea
pop
in
sub
pop
sub
stos
lock
pop
xor
cmp
dec
mov
pop
mov
mov
out
in
mov
and
lahf
dec
stc
mov
push
jb
stos
std
or
push
and
lock
test
mov
sub
testb
pop
sub
pop
mov
rcrl
sbb
jb
daa
pop
pop
push
loope
push
cmpsl
inc
or
or
movsb
std
dec
movsb
dec
jns
out
pop
aas
add
ds
jae
lods
popa
pushf
jne
push
pop
cmp
add
lds
popf
test
and
jne
jg
fisubl
push
push
mov
xchg
int
inc
mov
in
insl
add
int3
mov
loop
in
cmp
and
insl
dec
lods
dec
cmp
mov
jns
cmp
mov
jns
test
inc
jp
jnp
inc
xchg
inc
rolb
push
nop
and
scas
lds
loop
ror
test
mov
mov
mov
jno
movsb
jmp
test
adc
adc
scas
sub
icebp
aas
pop
and
sarb
dec
push
jmp
and
xchg
push
mov
pop
lret
pop
mov
cs
imul
push
imul
adcl
add
out
cmpsl
sbb
sbb
mov
pop
cmp
xor
xor
mov
push
imul
in
xlat
push
imul
push
outsl
ja
jbe
xor
xchg
mov
inc
or
cltd
mov
mov
mov
ja
sub
fnsave
addr16
mov
divl
inc
popf
dec
and
loop
push
fiaddl
mov
cwtl
aad
mov
push
mov
jp
push
outsl
out
mov
push
mov
cld
negl
aad
js
out
jbe
pop
subb
xchg
imul
in
stos
adc
test
shlb
pop
das
adc
pop
sbb
rclb
jl
mov
xchg
pop
jp
jg
mov
push
bound
inc
in
int3
ds
and
push
pop
in
ss
aaa
xor
test
ds
pop
inc
push
fisubrs
or
adc
push
or
icebp
daa
negl
divl
lea
pop
scas
dec
loope
mov
or
fidivl
into
cmp
scas
lock
push
lcall
subl
or
outsl
pushf
mov
sbb
jg
in
fucom
loope
mov
fdivs
ss
jne
shlb
pop
js
sbbl
inc
push
iret
imul
in
inc
out
jmp
stc
push
sub
enter
in
in
loopne
and
into
mov
and
lods
nop
jns
mov
test
pop
cmpsb
jg
sbb
loop
int3
mov
xor
cltd
adc
jg
mov
or
je
xlat
push
inc
sbb
cmc
push
and
outsb
xchg
in
dec
ficoml
stos
add
inc
mov
ds
inc
mov
or
inc
and
push
jmp
mov
sbb
adc
mov
xor
mov
rcll
push
stos
mov
pop
repnz
mov
or
jg
insl
pop
mov
push
rol
push
inc
fidivrl
ficomps
mov
jae
into
stos
push
out
pop
test
and
pop
push
pop
out
sbb
rclb
test
outsb
ss
daa
jg
into
dec
out
fcompl
std
iret
dec
cld
test
cld
add
enter
xchg
pop
movsb
out
mov
dec
sbb
sbb
repnz
lods
push
adc
test
test
or
cmp
mov
je
lock
cwtl
xchg
jno
in
andb
mov
inc
nop
in
rolb
shll
mov
je
jge
loopne
out
dec
loopne
icebp
jb
loop
cmp
ficompl
and
pop
pop
scas
xchg
cmp
push
inc
adc
and
push
pop
pop
and
jmp
js
mov
xor
mov
inc
jecxz
ljmp
inc
clc
xchg
cmp
mov
in
and
pop
xchg
mov
dec
push
loope
cmp
jb
shlb
xchg
out
fisubrs
mov
lret
in
insb
and
adc
repnz
xchg
out
pop
andb
cmp
insl
sub
repz
xor
stc
pop
inc
out
inc
outsb
add
outsb
test
in
push
mov
push
aas
lret
mov
push
cmp
test
push
dec
dec
test
std
and
dec
push
pusha
sub
vcvtps2dq
arpl
or
jnp
fisubs
pop
std
dec
xchg
je
adc
mov
fdivp
adc
or
test
pop
bound
stc
aam
push
ret
mov
daa
nop
in
imul
fadd
lds
push
mov
xor
inc
mov
hlt
cmp
movsl
in
xor
sbb
rsm
fsubrs
enter
mov
pop
xchg
sub
cmpl
call
jo
jb
fcomi
lods
mov
sub
sub
cmpsl
dec
cmpsb
lock
jno
pop
and
out
les
aad
xor
add
dec
pop
data16
scas
dec
cmp
adc
mov
add
bsr
jbe
scas
out
push
sahf
cmp
roll
outsb
mov
mov
arpl
pop
aaa
ds
pushf
pop
cmp
int3
addr16
xchg
mov
idiv
xlat
jbe
cmc
mov
xchg
mov
mov
xor
daa
add
adc
mov
sub
mov
xchg
movsb
jbe
repz
cs
adc
jno
mov
sarb
inc
int3
mov
movsb
push
inc
pusha
out
sbb
dec
mov
inc
hlt
inc
jne
pushf
lods
cmpsl
cmp
mov
mov
or
add
ss
lahf
inc
jno
loopne
movsb
adc
stc
jno
add
xor
jmp
push
sub
aas
cltd
pusha
mov
push
lods
loopne
or
nop
bound
pop
push
push
ljmp
add
push
iret
mov
hlt
add
flds
pop
xchg
cld
mov
enter
xchg
xchg
vmwrite
jp
mov
scas
xor
add
push
add
jmp
sar
out
and
rcrb
call
xchg
cmp
cs
inc
lods
jno
sbb
cwtl
ret
fs
iret
outsl
ljmp
fiaddl
add
sbb
flds
scas
dec
xchg
testb
and
xchg
cmp
bnd
stos
dec
stos
and
xchg
xchg
sbbl
xchg
fwait
rclb
lea
push
jns
mov
aaa
cmp
out
cmp
repnz
lret
loopne
loopne
loopne
das
mov
test
jb
lret
xor
pop
int
xchg
xchg
ss
cmp
cmp
cmp
mov
mov
in
xchg
xlat
add
mov
call
std
lret
pop
lahf
mov
popa
into
shlb
dec
outsb
sbb
daa
jo
or
jecxz
aad
lret
cmpsl
shl
sahf
mov
scas
or
frstor
test
test
inc
aad
mov
adc
or
ja
lcall
je
add
inc
sbb
push
or
xchg
arpl
jae
mov
or
popa
push
je
pop
outsb
fs
lods
aam
adc
inc
cwtl
lea
in
mov
adcb
rorb
xchg
cmpsl
leave
pop
push
mov
adc
xor
orl
push
xor
out
mov
aam
jbe
sbb
pop
call
add
outsl
jmp
add
pcmpeqd
stos
fstpl
add
test
mov
mov
cltd
in
xlat
movb
inc
nop
adc
sub
inc
hlt
cs
mov
bound
xor
ret
cmp
lret
not
cmp
dec
add
insl
stc
xor
aad
mov
cli
sub
dec
cmp
sbb
test
cmp
cltd
xchg
dec
js
movsb
shlb
mov
add
or
sbb
cmp
xchg
sahf
es
sub
jo
push
xchg
push
imul
clc
dec
int3
lods
sub
or
mov
and
aam
bound
push
in
cli
icebp
mov
rolb
movsl
or
inc
cmp
dec
les
mov
cld
test
mov
cmp
inc
or
jle
aam
xor
scas
lret
sbb
test
add
arpl
jle
cmp
sti
add
in
outsb
pop
jns
or
xchg
jl
sti
nop
paddsw
hlt
mov
stc
fld1
inc
rcrl
pop
cmp
test
into
out
fbld
adc
sub
push
fldl
stos
lods
pop
cwtl
push
add
mov
xchg
jp
mov
jo
xchg
mov
jl
adc
cltd
dec
push
orl
add
lret
xchg
fs
pop
rcll
faddl
std
mov
maskmovq
sti
cs
repz
push
lcall
test
ljmp
bound
das
cmc
pop
xlat
xchg
rolb
test
in
inc
pop
dec
push
mov
jmp
mov
push
xor
out
repz
xchg
lods
pop
in
popf
test
jle
hlt
in
jne
scas
test
lret
add
pop
add
cs
jnp
rorl
cmp
push
add
sbb
cmp
mov
leave
lea
ja
pop
sbb
js
adc
out
outsb
push
push
push
jg
xchg
idivb
or
call
scas
pop
mov
adcl
sar
insb
inc
jns
or
popa
and
fdivrp
jbe
push
outsb
mov
and
pop
adc
cmp
push
adc
ss
inc
push
out
or
mov
rorb
mov
cmpsb
lret
leave
cmpl
adc
push
xor
adc
adc
inc
adc
loope
mov
sbb
cltd
stc
xlat
xlat
jae
lret
dec
stos
mov
jmp
or
movsb
mov
sbb
push
xor
aas
mov
popf
fidivs
cmp
dec
data16
mov
jbe
jbe
adc
push
jg
inc
xor
xchg
xchg
sbb
mov
dec
xchg
inc
add
add
xchg
icebp
mov
or
mov
jl
xor
push
mov
je
popf
push
and
lds
pop
adc
inc
mov
test
test
sahf
js
psubd
cmpsb
jle
jp
mov
stos
cmp
inc
ret
flds
jnp
movsb
cmp
jg
xor
push
into
scas
jmp
push
jp
sarl
pop
outsl
add
push
iretw
fsubrs
addr16
pop
mov
push
popa
mov
stc
fists
or
sub
xor
mov
jo
push
inc
mov
stos
xchg
jne
fwait
dec
test
jp
add
sub
adc
inc
xchg
fidivl
cs
pop
stos
xchg
xchg
loope
push
out
test
add
ja
loopne
ds
jnp
pop
cmpsb
std
inc
rclb
imul
mov
iret
sarb
popf
je
jg
les
xor
lret
mov
xlat
ja
xlat
jbe
add
repnz
test
jecxz
std
mov
pop
adc
cmp
xor
mov
xchg
add
dec
lret
les
sub
jb
xchg
pop
mov
mov
bound
mov
cmp
pop
cmpsb
imul
imul
testb
fistpl
mov
shr
push
lods
mov
sbbl
or
repz
daa
adc
cmp
adc
xchg
leave
cmp
dec
mov
nop
inc
adc
out
test
stos
inc
cmpsb
push
sbb
cmp
sub
enter
shl
mov
repz
cld
cmp
jne
jle
and
xor
pop
shll
fidivs
les
mov
add
loop
test
fidivrs
outsb
sbb
sub
testb
push
push
ret
in
and
outsb
inc
pop
sub
or
adc
nop
imul
mov
cmp
jo
push
loopne
aas
lods
push
in
loope
sbb
das
xchg
popf
sub
testl
sbb
dec
xor
scas
stc
mov
mov
mov
insl
mov
daa
imul
cld
add
shll
lret
popf
flds
mov
scas
pop
xchg
sub
cmp
roll
mov
orl
cmp
cmp
lret
in
lods
imul
push
sbbl
or
clc
push
out
mov
iret
xor
pop
rorl
mov
out
inc
out
outsl
sbb
adc
roll
or
and
out
lret
insl
and
out
sub
lods
lea
sbb
pop
xchg
or
fistpll
cli
ss
fistl
push
pop
sbb
mov
arpl
icebp
sbb
xor
mov
popa
loope
negl
jl,pn
push
mov
filds
mov
dec
xchg
push
stos
es
xchg
inc
mov
out
jg
xor
sbb
mov
jle
imul
cs
cld
pop
in
mov
and
clc
and
push
jmp
add
push
or
xor
dec
stos
mov
jb
xor
in
sbb
std
std
mov
outsb
rorl
xchg
lret
sub
add
es
sub
dec
sbb
jbe
push
and
out
movsl
imul
mov
cmp
xor
rorb
dec
xor
jge
sbb
cmpsb
movsl
stos
sub
mov
pushf
adc
push
ljmp
imul
and
aaa
push
inc
lods
aam
inc
out
lock
dec
loopne
stos
bound
adc
arpl
jl
pop
and
xchg
jae
jecxz
fs
cmpsl
sbb
dec
push
subl
xor
stos
imulb
mov
test
jo
outsl
insl
dec
rcr
pop
fcmovnbe
aad
push
and
into
out
repz
ljmp
repz
enter
scas
pushf
loopne
sarl
jp
daa
mov
enter
xchg
mov
cli
fbld
mov
dec
sahf
dec
mov
shl
push
cli
and
lock
mov
dec
scas
xor
outsb
adc
and
loope
jo
shr
pop
ja
xor
xchg
push
xchg
aam
sub
adc
cmpsl
add
sahf
add
flds
jmp
mov
sbb
inc
lea
cltd
in
push
nop
dec
push
cld
pop
loopne
push
rclb
pop
jle
inc
pop
xor
and
mov
mov
or
or
nop
negl
xchg
push
mov
mov
xchg
stos
jle
add
xor
and
sub
mov
stos
xor
fidivs
pushf
cmp
lret
mov
inc
mov
mov
add
jle
cltd
sub
jno
insl
xchg
push
cmp
stc
or
cwtl
mov
or
cmp
cmp
dec
jle
fcmovb
add
je
cmp
and
insl
xor
cld
popa
or
pop
mov
cmpsb
inc
stos
fwait
ja
xchg
rorb
mov
in
stos
push
nop
fisttpl
lock
fcoml
shll
pop
aaa
jne
and
arpl
gs
stos
stos
ds
std
sub
xchg
mov
jge
in
in
xor
and
add
xchg
dec
and
jmp
bts
ljmp
fdiv
fstps
stos
aad
rcrb
cwtl
or
mov
or
and
ret
jl
dec
add
jnp
cmpsl
jge
bound
sub
cs
push
adc
lods
mov
pop
adc
sarl
sub
call
inc
xor
insb
out
pusha
add
iret
enter
add
clc
inc
les
xlat
rorb
push
shl
xchg
movsl
xchg
mov
cs
inc
out
lock
mul
and
mov
jl
daa
push
outsl
pop
je
mov
jecxz
in
or
mov
pop
and
movsb
insb
jne
repnz
mov
xchg
fs
and
push
mov
sub
push
dec
inc
clc
mov
cmc
push
jmp
dec
push
sti
sub
jae
dec
add
push
add
mov
out
iret
popf
dec
mov
fistpll
mull
test
mov
xor
lcall
mov
or
out
jp
mov
in
add
aas
pop
addb
sbb
and
lahf
pop
xorb
stc
add
jb
mov
add
jno
rorl
aam
test
add
push
or
stos
adc
popf
stc
xchg
and
sbb
stos
xor
sbb
mov
sub
addb
ret
adc
fwait
inc
xchg
inc
adc
or
adc
rcrl
mov
orb
movsb
sub
pop
das
out
pushf
xchg
roll
imul
test
mov
mov
push
movsb
adc
push
lds
aas
dec
xor
test
icebp
jne
and
lds
gs
lcall
mov
out
cs
inc
inc
rol
aas
ss
mov
psrad
gs
push
or
add
fsubl
repnz
mov
push
lahf
push
pusha
mov
mov
iret
xchg
mov
shlb
out
ja
out
xor
inc
rcrl
aas
sbbl
pop
pop
mov
sti
inc
les
push
adc
scas
pop
mov
enter
insb
mov
lods
loopne
and
cmc
mov
das
xor
movsl
mov
ss
lds
insb
repnz
in
adc
jge
pop
std
sub
dec
movl
in
sbb
jae
dec
scas
mov
xor
jp
shl
mov
aaa
xor
jge
shl
ss
andl
rorb
loope
les
mov
fildll
hlt
cmp
mov
repnz
sub
mov
pop
push
adc
add
out
ret
sub
out
push
fsubs
dec
and
repnz
pusha
fwait
std
and
hlt
lret
stos
cmp
jg
les
lret
test
mov
jnp
pop
mov
sub
push
sbb
cwtl
mov
adc
out
cs
cld
dec
mov
mov
mov
in
scas
push
dec
jg
dec
das
inc
cmp
mov
xchg
inc
out
dec
fmull
div
mov
or
stos
fiaddl
xchg
mov
mov
pop
push
insb
sbb
xor
inc
and
xchg
mov
rcl
das
jne
es
int
fisubrl
inc
stc
inc
cmp
rorl
popa
scas
stc
lods
out
add
in
and
lcall
cwtl
jb
mov
divl
scas
add
jle
push
mov
or
rclb
dec
testl
orb
adcl
sbb
dec
ja
movsl
inc
pop
push
and
stos
cs
pop
mov
das
adc
jl
enter
xor
inc
jns
jmp
sbb
cmc
pop
add
insl
dec
stc
mov
loopne
imul
pop
in
popf
mov
ja
jp
test
or
int
add
push
addr16
push
dec
addl
es
inc
cmpsb
xor
dec
movsb
add
sub
mov
lods
jns
inc
push
and
and
dec
dec
adc
out
insb
in
adc
popa
int3
lods
lea
cmp
mov
leave
add
sbb
dec
test
push
pop
mov
sbb
lcall
inc
pop
mov
or
pop
jbe
dec
loopne
ja
ret
or
adc
inc
shll
xchg
addr16
pop
xchg
push
or
bound
mov
or
sbb
int3
inc
add
fsubs
cli
loope
inc
xor
xor
test
pop
mull
sbb
popa
jl
mov
xchg
es
not
or
pushf
mov
cmpsl
sbb
pop
pop
int3
stos
sbb
lock
test
xlat
ds
jg
lock
adc
popa
loopne
pop
ret
xorb
adc
sub
daa
adc
ja
cltd
iret
adc
jns
xor
gs
jp
cld
dec
in
push
enter
leave
cltd
insb
jp
rclb
cmc
jnp
orb
daa
xchg
mov
and
lock
std
out
movsl
inc
loopne
xor
pop
jno
scas
inc
jle
xchg
lods
movsb
cmp
xchg
xchg
mull
test
push
ret
pusha
lods
nop
inc
fnstenv
cmp
mov
mov
cmp
push
mov
cltd
and
outsb
fwait
aas
repnz
imul
ficompl
dec
test
shll
jp
es
daa
sbb
lahf
xchg
pop
push
cmc
lea
jp
mov
ret
lahf
dec
test
cwtl
aas
incb
imul
mov
adc
inc
add
mov
ret
mov
add
and
fsubrs
ljmp
int3
inc
int3
loop
push
leave
aam
and
add
cmp
pushf
mov
cmp
and
cmp
addr16
and
shll
imul
sub
mov
lahf
xor
xor
int3
aad
push
pop
aas
cmpsb
or
loope
sub
adc
jmp
cld
dec
xchg
ss
pop
xchg
fsubrs
sarl
xor
xor
leave
cmc
inc
dec
push
daa
cs
mov
inc
mov
lods
xor
jbe
sbb
mov
push
or
and
sbb
add
add
add
sar
sti
sbb
xchg
jae
cld
mov
loope
inc
sbb
xlat
call
lret
sub
data16
adc
dec
cmc
movsl
jg
aas
ljmp
mov
jecxz
xor
cli
xchg
cmp
jp
test
test
or
fisubrl
in
inc
es
xor
fistpll
ljmp
hlt
jnp
iret
xchg
adc
aas
pushf
dec
mov
ficompl
call
int3
sbb
or
push
stos
es
lcall
jae
xor
sub
add
mov
rorb
adc
mov
pop
movsb
sub
xchg
cld
sbb
out
pop
jbe
inc
imul
xor
sub
iret
mull
xchg
xlat
pusha
mov
push
enter
lock
ds
aam
std
xor
add
pop
clc
add
iret
sbb
not
std
mov
pop
add
push
xchg
lea
test
in
mov
movsl
add
cmp
insl
push
aaa
sbb
imul
add
popa
mov
dec
sbb
jbe
and
insb
dec
dec
xor
aam
xor
rcrb
addr16
gs
cli
or
mov
jno
push
test
scas
popa
dec
xchg
xorl
mov
bound
fwait
pop
inc
out
pop
pusha
lds
jbe
int
add
popf
inc
sarl
ret
movsb
js
sub
inc
dec
into
sti
aas
mov
inc
mov
pushf
pusha
stc
jmp
mov
dec
push
mov
pop
mov
jne
add
push
mov
arpl
xchg
in
inc
call
mov
or
stos
test
adc
pop
sbb
mov
sarb
imul
sbb
mov
xor
mov
inc
inc
inc
out
inc
push
mov
mov
inc
and
sbb
mov
negl
lds
push
popf
addr16
sub
sub
aad
push
jle
daa
ss
dec
fimull
in
js
cltd
push
or
nop
or
test
add
mov
mov
bound
sbb
lahf
xchg
stc
xchg
push
dec
aas
adc
sub
js
xor
mov
pusha
push
push
out
ja
xor
addr16
adc
sbb
cmp
addb
cmp
adc
insb
xchg
mov
out
outsb
aad
push
ror
push
les
leave
inc
sub
gs
paddusw
jae
adc
mov
mov
int
mov
cli
std
jb
int
dec
inc
mov
loop
and
stc
mov
pop
je
inc
pop
jo
dec
jno
mov
push
in
sbb
add
cmp
mov
pop
lret
leave
addl
jb
inc
in
imul
mov
xchg
lcall
mov
add
xchg
lods
ja
test
shlb
outsl
sbb
xor
out
mov
cmpsl
stos
outsl
adc
and
add
cmp
mov
int
test
pop
in
push
adc
cmp
ds
insb
adc
add
loope
dec
xchg
inc
mov
testl
and
xor
aad
push
lahf
andb
xor
xchg
js
push
xor
jecxz
mov
rolb
cmp
sub
iret
ja
or
jmp
cmp
xor
sub
arpl
cli
lea
out
fsubl
or
aad
xchg
sbb
pop
push
or
test
push
sti
push
add
inc
mov
ret
and
dec
cmp
call
cmp
push
fisttps
pop
inc
pop
mov
fisubs
sbb
adc
cld
push
bnd
pusha
popf
mov
ficomps
nop
pop
int3
daa
jb
imul
mov
cmpsb
xor
xor
add
dec
jmp
mov
push
sbb
scas
xor
mov
imul
mov
arpl
iret
shl
dec
push
mov
es
cmpsb
lds
outsw
xchg
ds
xchg
mov
jbe
and
add
lock
ds
or
mov
mov
mov
popf
out
dec
std
movsldup
cmc
jne
lret
xor
in
ret
sbb
mov
xchg
sub
or
sub
or
mov
xor
xchg
adc
aas
lods
xorb
pop
mov
stos
lret
and
or
mov
fistpll
jge
dec
xchg
hlt
jp
push
xchg
lret
stc
add
mov
push
dec
push
cmp
das
dec
add
inc
jecxz
std
test
mov
sbb
xchg
add
adc
xor
bound
lret
js
push
and
div
lret
push
fisubs
test
inc
jg
lods
pop
inc
iret
dec
stos
aas
or
stos
mov
loopne
xchg
aas
sub
sahf
sub
insl
ret
jp
sti
push
ja
or
movsb
xchg
subl
mov
icebp
and
xchg
xchg
cmp
mov
sub
mov
mov
and
jg
mov
scas
and
fnstsw
pop
ss
mov
cmp
subb
push
push
dec
pusha
bts
in
mov
mov
jno
fdivrl
pop
movsb
addr16
loope
loope
divb
inc
test
xchg
jmp
adc
stos
nop
push
mov
xor
xchg
outsb
popf
repnz
ds
fdivrs
arpl
cmpsl
dec
sub
sbb
push
gs
add
std
bound
fcoml
mov
test
jl
jbe,pn
xor
mov
ror
mov
or
add
out
andb
jmp
mov
sarl
mov
push
test
dec
inc
push
movsb
pusha
jge
pop
fisubrl
inc
xor
mov
ljmp
cmp
jge
or
jge
push
xchg
in
ds
fxsave
adc
mov
fcomi
jle
dec
sbb
in
push
jg
cltd
mov
cs
repnz
ja
clc
mov
jae
ja
rol
xor
jge
xlat
arpl
xlat
loope
mov
cmp
repnz
adcl
pop
jecxz
xchg
inc
sbb
mull
xchg
popa
mov
fs
push
xor
bound
push
mov
jno
cld
adc
xor
in
inc
or
push
test
test
dec
aad
pop
js
das
and
das
lea
scas
imull
mov
out
out
push
stos
fnstsw
int
dec
neg
inc
mov
xor
push
mov
jb
scas
push
lcall
ja
mov
inc
mov
sahf
lods
jne
add
addb
xor
push
and
push
imul
push
aas
repz
test
dec
inc
xor
mov
fs
int3
scas
rol
and
rcll
push
into
sarb
sarl
loope
xchg
mov
mov
aas
shll
mov
or
cwtl
outsb
in
push
insl
push
xor
cld
sahf
xor
jnp
ficomps
popf
xchg
insl
f2xm1
or
mov
test
adc
outsb
pop
movsl
hlt
lahf
out
jecxz
mov
mov
inc
mov
push
test
rorb
fildl
xor
mov
xor
pop
movsb
mov
mov
lock
adc
cwtl
push
bound
mov
push
cmp
xor
adc
push
bound
sti
mov
pop
pop
pop
mov
mov
pop
xchg
mov
pop
lods
mov
xor
test
enter
pop
push
cld
test
ja
dec
mov
mov
ja
imul
inc
enter
in
aad
mov
sbb
enter
icebp
mov
addr16
fistpl
or
xchg
mov
jns
mov
in
sub
and
mov
iret
add
je
adc
fisubrl
and
mov
pop
xlat
jge
xchg
stc
push
xor
lock
imul
xchg
mov
aaa
mov
pop
inc
jp
nop
fwait
fs
lea
pop
fisubs
lods
xor
sbb
test
rorb
xchg
cmpsb
aad
inc
rcr
add
and
es
push
push
mov
fldcw
addr16
roll
stos
insb
out
push
pop
mov
or
mov
stc
sbb
mov
outsl
das
pop
cmpsl
push
xchg
mov
dec
sbbl
add
adc
jmp
mov
in
sbb
push
sub
rclb
dec
in
scas
insl
int3
cmp
mov
movsb
loope
sub
mov
lea
push
and
out
pushw
push
or
sbb
std
xor
lcall
jecxz
mov
mov
push
fiadds
add
adc
inc
inc
enter
push
pop
clc
dec
cwtl
negb
cmp
cmp
repz
ja
fldt
cld
push
stc
js
mov
xor
jbe
pop
xchg
int3
cmp
xchg
movsb
mov
jle
mov
dec
mov
pop
jp
and
mov
fadd
inc
ss
ss
dec
bound
dec
leave
cld
std
push
sbb
sbb
cmp
mov
insl
xchg
pop
lock
test
lods
jne
ljmp
xchg
rcrl
les
mov
dec
lea
fiaddl
je
ss
cld
xchg
sbb
loopne
mov
and
pushw
cmp
sbb
push
cmp
pop
dec
fwait
das
mov
mov
and
sub
aam
mov
xor
divl
psadbw
outsl
sbb
or
loope
adc
mov
mov
repnz
and
stc
pusha
es
push
imul
lds
sub
repnz
hlt
repnz
fsubl
movsb
stc
sbb
inc
test
sarb
jnp
and
mov
xor
jb
ret
mov
movb
xchg
aam
inc
in
jmp
pop
pop
in
mov
inc
dec
mov
and
std
aam
pop
divb
ret
dec
sbb
andl
xor
rclb
adc
enter
test
push
arpl
push
jae
jno
shlb
repz
push
sub
fs
inc
dec
sbb
es
int3
lods
cmp
mov
scas
pop
in
ljmp
sbb
cltd
push
mov
sbb
in
fldenv
adc
xchg
jb
pop
mov
mov
mov
xor
xchg
and
mov
shlb
dec
mov
jecxz
inc
cmp
sbb
pop
cld
negl
xchg
mov
pop
jg
stc
dec
mov
sti
lahf
mov
cwtl
gs
int3
jmp
ret
cwtl
das
jmp
add
loop
leave
cmp
pushf
mov
fldl
rorl
cs
sbb
pop
in
dec
lahf
xchg
mov
ss
pop
push
push
mov
aam
cwtl
daa
cwtl
repnz
push
sarb
movsl
repz
push
xchg
push
loopne
dec
adc
andl
idiv
shrb
outsb
and
in
or
pop
push
movsl
pop
dec
adc
fs
dec
cs
push
in
and
mov
aam
cmpsl
mov
or
test
test
mov
leave
imul
bound
xlat
hlt
xchg
or
js
xchg
push
push
jbe
out
push
loope
inc
mov
mov
pop
insl
and
sub
mov
xchg
arpl
jl
pop
call
add
mov
sub
mov
mov
xchg
pop
lods
ss
inc
outsl
cwtl
imul
inc
inc
ss
fdiv
or
shrd
les
shlb
lret
push
out
xor
and
loope
dec
or
cmpsl
cmp
pop
mov
aad
jl
out
xchg
sbb
xchg
or
add
mov
sbb
ret
mov
push
mov
mov
cmp
push
fsubrl
in
mov
jbe
movsl
test
mov
int
push
movsb
fiaddl
fistps
fldt
xchg
out
ds
xor
jmp
jo
in
lret
aas
mov
out
popf
push
adc
or
inc
jl
ja
cli
gs
lahf
mov
cmp
pop
jmp
sub
mov
stos
inc
adc
or
stc
xchg
cmp
add
mov
adc
cld
out
lahf
js
clc
pop
and
and
fistpll
data16
sti
mov
leave
in
jb
pusha
adc
stos
jnp
icebp
mov
cmpsl
mov
aad
pop
fs
lds
stos
jns
loope
inc
jnp
add
mov
ret
or
icebp
add
pop
sbb
adcb
cmp
stos
movl
dec
addb
xchg
popf
stos
in
push
stos
fsts
fnstsw
into
imul
jno
mov
jl
mov
dec
push
rcr
push
mov
push
push
lds
xlat
test
sahf
fldenv
gs
daa
cmpsl
out
stos
js
stos
mov
mov
add
mov
bound
jmp
mov
sbb
pop
aam
cmc
and
fistpl
xorl
cmp
cmp
mov
scas
aas
mov
jmp
sbb
in
ja
popa
repnz
dec
ud0
ja
push
jo
adc
inc
cmpsl
inc
pop
das
cltd
sbb
push
aam
repnz
and
inc
inc
xor
std
push
sub
push
outsl
jne
ja
movhps
xchg
adc
adc
and
pop
out
jo
cli
ret
mov
loop
std
sbb
jno
movsl
fwait
rcll
cmp
lcall
out
xchg
xor
inc
jb
cld
fwait
mov
mov
push
rorb
xchg
push
or
inc
xchg
rcrl
cmp
sub
mov
inc
xchg
jnp
outsl
mov
mov
out
and
push
xor
scas
xchg
mov
dec
inc
jbe
mov
je
scas
hlt
stc
pop
rcr
pop
dec
add
mov
data16
cmp
or
ds
add
cmp
std
ja
mov
xchg
test
mov
xlat
addr16
int
sbb
push
lret
cmpl
mov
cld
xor
or
mov
cmp
jns
adc
mov
cmp
in
ret
stos
insl
mov
mov
pop
outsb
fsubp
pop
lret
inc
aas
je
jnp
dec
stos
nop
mov
or
out
inc
mov
ret
mov
popa
mov
mov
and
outsb
cmp
lcall
cmc
cmpsl
rorb
or
sbb
fcmovnb
cmp
shll
sub
sarl
test
loope
popf
sbb
xor
sbb
fadds
orb
rcrl
movsb
ret
mov
test
sub
test
pop
pop
out
jmp
lret
push
bound
stos
fsubr
lods
insl
std
cmpsb
add
mov
sarb
add
or
mov
mov
call
push
int3
mov
mov
and
enter
aad
xchg
icebp
shll
insb
dec
push
out
pop
jb
push
in
imul
xchg
pop
aad
xor
data16
add
insb
rcrb
inc
cmp
sub
push
bound
sub
xchg
sub
cmp
cmpsl
stos
jecxz
test
scas
ja
les
loopne
adc
mov
pop
jb
jnp
faddl
or
std
in
mov
sahf
lods
ret
cmp
pushf
lea
inc
enter
xchg
push
mov
cmpsl
mov
push
gs
cwtl
cmp
or
popf
inc
xchg
test
cld
sbb
in
jmp
arpl
adc
and
imul
pop
mov
scas
add
inc
mov
mov
sbb
je
sub
sahf
jp
stc
mov
aas
out
outsl
sahf
cmp
mov
dec
cmp
mov
lea
fisubs
push
cld
dec
xchg
icebp
cmp
decl
jb
xor
jb
sub
scas
fcomps
je
and
jmp
sub
les
scas
adcb
xlat
cmp
cmp
rcr
out
iret
and
pushf
cwtl
mov
pop
sub
leave
mov
xor
push
fdivr
pop
dec
incb
dec
push
mov
push
je
jp
fcomps
mov
jp
mov
push
jg
sarb
push
inc
notb
cs
rcl
js
hlt
cmp
push
mov
ljmp
mov
cmp
lea
shl
in
pop
mov
stos
push
add
add
fwait
nop
mov
dec
cmpsb
cmpsl
push
ljmp
out
fwait
mov
inc
jle
adc
rcll
fidivl
and
adcb
xchg
and
cwtl
fs
outsl
clc
in
push
cmp
fiadds
clc
mulps
push
std
sub
rcll
sub
adc
xchg
mov
mov
cmc
add
mov
scas
fxsave
movsl
lods
mov
and
inc
mov
mov
push
push
sahf
in
rorl
leave
shr
or
and
or
xchg
cmp
mov
inc
pop
scas
icebp
pop
fsub
cmpsl
dec
pop
adc
pop
shlb
stos
xchg
mov
adc
in
aaa
mov
add
add
cmpsl
cmpsb
dec
mov
or
pop
dec
lods
jne
mov
adc
adc
adc
xor
pop
scas
pop
mov
scas
adc
in
out
es
std
push
fidivl
imul
daa
pop
mov
pusha
aad
aaa
adc
xchg
sbb
mov
iret
pushf
fwait
loop
cmp
arpl
add
or
fildll
fst
cli
sub
jne
orb
mov
lahf
dec
out
add
movsb
imul
sti
rcl
inc
fbld
dec
sbb
or
gs
sbb
cmpb
cwtl
cld
and
out
mov
inc
je
dec
jns
pusha
add
push
or
xor
add
cmp
cwtl
movsb
outsl
sbb
das
test
or
adc
fimull
jge
push
pop
or
cmp
cltd
xchg
cld
jnp
dec
sub
push
adc
std
in
mov
ss
add
sbb
vmovlps
out
adc
popa
xor
out
fs
movsl
ret
add
adc
nop
int
bound
sarl
fisubrl
ror
mov
cmpsl
pop
add
push
sub
insb
imul
insb
sbb
jge
aad
jecxz
addr16
mov
adcb
rolb
movl
or
cmp
add
dec
cmpsb
mov
test
cli
loop
subb
cld
xchg
dec
clc
divb
jbe
xor
hlt
shr
popaw
nop
push
xor
cmp
and
icebp
xchg
lahf
jnp
jmp
push
pop
pop
fs
pop
push
jge
push
es
inc
jno
js
imul
dec
xchg
add
jl
dec
divl
pop
ja
movsl
data16
sbb
push
fcomps
rcl
mov
sub
repz
test
popf
seta
mov
pop
push
repz
clc
sbbb
aam
fbstp
push
aad
push
mov
scas
and
fsubrs
mov
dec
push
lock
fs
inc
mov
pop
loope
inc
es
mov
adc
cmp
fdivrl
adc
lret
mov
adc
xlat
fists
xchg
fmull
out
add
pop
pop
lret
jp
out
xchg
std
into
adc
pop
outsl
stc
push
loopne
xor
outsb
adcl
push
and
ljmp
fimuls
push
cmpsl
lea
das
movsl
sbb
bound
ss
inc
outsl
decl
sarl
leave
test
pop
and
lock
aad
shl
shl
push
push
adc
mov
mov
adc
sti
popf
jno
ficompl
cmp
push
movsl
imul
ret
mov
insb
mov
inc
pop
test
xor
fstpl
ljmp
push
stos
js
or
in
sti
ds
push
leave
mov
scas
and
aas
movsl
mov
mov
jge
lret
or
and
mov
ja
aad
adc
repnz
fbstp
leave
cmpl
dec
fistps
or
cmp
pop
js
sbb
dec
pop
dec
lods
jge
shr
mov
lods
inc
sbb
std
jp
xchg
jle
clc
pop
mov
and
test
in
pop
movhps
ficoms
dec
notb
cld
pusha
push
dec
xchg
mov
bound
movl
push
sub
popf
lahf
pop
mov
pop
or
in
nop
sbb
out
fwait
movsl
testb
pop
fcmovnu
data16
lahf
jl
add
push
shrb
negb
cmp
fs
lods
sub
sub
adc
lods
sub
loope
inc
aaa
mov
and
cmp
stc
sbb
inc
jge
xor
add
push
aaa
xchg
xor
notb
adc
cmp
or
aad
subb
ret
cs
int
mov
jp
cmp
rcl
push
stos
mov
adc
mov
pop
sarb
mov
fstpl
push
and
jne
pop
push
push
mov
stc
outsb
iret
fsub
fs
mov
pop
ljmp
sbb
lcall
jae
jno
push
jle
fistpll
or
inc
or
sbb
inc
dec
mov
scas
push
imul
sbbb
stos
pop
sarb
push
sub
aam
dec
or
out
mov
mov
push
inc
cmp
xlat
ficompl
or
pop
sbb
pop
loop
rolb
fst
inc
cmpsl
and
negb
mov
inc
and
cmp
pop
inc
das
fsts
sbb
js
push
adc
test
push
lret
test
outsl
arpl
cmp
push
aam
stos
inc
std
movsb
outsb
mov
pop
sbb
jp
lods
arpl
sarl
adc
rorl
push
sub
sets
scas
movsl
xchg
push
lret
aad
pop
mov
out
push
sti
cmp
insb
lret
jle
dec
jne
sbb
lds
mov
push
cmpsb
cld
xor
sbb
addr16
imul
pop
in
fwait
movsb
push
lds
xlat
sbb
mov
nop
mov
xchg
xor
jecxz
push
pop
xor
js
fdivrl
out
aaa
pop
inc
test
aaa
mov
in
sub
push
mov
xor
mov
mov
iret
push
test
scas
adc
hlt
jo
idiv
int
add
adc
jecxz
call
ja
stc
mov
hlt
xchg
popf
notb
insl
cmc
pop
pop
in
dec
cmp
mov
inc
jno
jg
xor
sbbb
test
xlat
add
jb
pop
push
and
negl
ret
mov
into
cmpsl
xor
in
inc
ret
bound
rcll
hlt
dec
or
push
rorb
adc
test
mov
mov
sbb
daa
addr16
arpl
xchg
cmpsb
in
xchg
test
push
mov
in
fwait
ret
jle
jecxz
fsubl
aad
pop
and
aad
xchg
cltd
add
call
nop
rcll
and
lods
out
pop
in
je
or
imul
add
xor
push
xchg
orl
jp
add
icebp
pop
sub
mov
test
lcall
mov
ds
inc
into
push
cld
ret
cmp
cld
push
mov
mov
sbb
inc
lods
es
repnz
dec
faddp
mov
hlt
push
mov
cmpsl
int
rolb
jecxz
aaa
cmp
xchg
iret
mov
dec
das
imul
mov
loope
mov
int
jne
adc
iret
xor
dec
pop
mov
xor
lock
push
mov
adc
inc
jp
inc
inc
pop
lcall
fs
cwtl
push
push
dec
decb
into
sub
decl
test
push
cmp
push
pop
mov
test
dec
fisubrs
jne
movsb
push
mov
and
jae
fidivl
jns
jne
sti
and
mov
sbb
ret
jns
sbb
lret
mov
in
loop
scas
and
or
push
cmp
aaa
mov
gs
adc
mov
or
popf
mov
and
or
pusha
gs
scas
divb
das
sbb
sub
jle
movsb
popf
in
sub
or
jmp
and
lahf
scas
or
cmp
das
and
imul
xor
pusha
sub
ds
xor
hlt
inc
fwait
push
push
mov
lods
das
xchg
pop
and
fimull
jae
pop
mov
sbb
aam
inc
cmpsl
jbe
dec
inc
scas
mov
arpl
int
sti
mov
into
leave
xchg
add
repz
test
jb
adc
fs
cmpsl
subl
mov
jmp
pop
and
outsb
push
adc
lcall
cwtl
or
dec
mov
mov
pusha
insb
js
mov
shl
jbe
jnp
dec
rcrl
mov
imul
cld
dec
jmp
fisubs
sub
popa
jecxz
das
mov
icebp
push
pop
out
inc
sahf
movsb
lret
mov
data16
sbb
add
push
jae
xor
pop
jl
mov
sub
and
sub
push
fists
pop
lods
andl
jp
outsl
dec
and
movsb
or
mov
mov
add
xchg
pop
inc
dec
and
sar
pushf
push
dec
cmc
mov
sub
cltd
pop
or
add
mov
and
mov
sbb
adc
mov
mov
pop
xor
add
enter
scas
imul
jg
inc
addr16
pop
stos
imul
inc
pop
cmpsb
adc
fstpl
push
pop
pop
and
test
hlt
fucomp
dec
test
dec
adc
stos
dec
rolb
scas
ljmp
cwtl
xor
or
xchg
xor
push
add
out
fbstp
mov
ja
mov
js
repnz
cmp
mov
dec
push
cmpsb
int3
scas
and
mov
sbb
sub
fiadds
and
andb
sbb
pop
cwtd
mov
dec
inc
and
jo
out
orl
lea
cmp
test
inc
or
and
add
in
sub
push
xchg
std
jmp
mov
push
cmpsl
js
xchg
inc
or
js
sub
in
fisubrs
ficoml
out
add
shll
test
add
jl
jae
mov
faddl
ja
jne
and
icebp
push
imul
sub
movsb
sub
xor
mov
cld
and
push
repnz
mov
push
adc
mov
imull
test
in
in
sarl
fwait
jne
icebp
push
cmp
jmp
stc
sub
mov
xchg
addr16
adc
cs
cli
iret
adc
insb
ret
lcall
mov
add
rcll
movhlps
inc
mov
insb
sub
mov
cmp
es
es
div
enter
adc
pop
xchg
cltd
ret
js
mov
pop
data16
adc
cmp
jnp
insl
add
pop
jle
and
adc
xchg
ljmp
cs
adc
movsl
dec
pop
jnp
fisubrl
mov
std
mov
jle
ret
pop
push
cmp
stc
and
or
ret
jecxz
sub
mov
jg
push
not
cmpsl
mov
jge
adc
and
mov
mov
and
je
pavgw
push
aas
cmpsl
pushl
vcmpss
pop
outsl
sub
mov
scas
mov
daa
scas
icebp
xor
inc
lock
xchg
shrl
lahf
stos
push
or
mov
dec
aad
dec
cli
push
jle
xchg
mov
push
lahf
xchg
add
push
push
and
jae
in
stos
mov
stc
stc
scas
xor
sbb
adc
out
adc
sub
add
das
or
rorb
aas
mov
cmpsl
out
dec
push
test
cld
shrb
mov
mov
and
mov
cmp
test
js
xchg
out
xchg
je
popf
cwtl
jmp
scas
pop
lock
jecxz
shr
fwait
or
cltd
dec
test
cwtl
mov
stc
and
stos
lods
fwait
add
dec
push
sti
pop
pop
aas
jno
and
jbe
lds
and
stc
cmpsl
outsb
outsl
stos
ja
loopne
cltd
sahf
imul
cmp
sbb
cmp
dec
jp
cmp
aas
clc
mov
cmc
mov
inc
pop
loope
in
add
fdivrp
clc
call
pop
movsb
loopne
fsubs
add
jp
xor
not
fwait
xchg
lret
mov
pop
gs
jp
in
test
insb
mov
dec
inc
add
data16
mov
ja
cmp
xchg
cmpsl
sbb
xor
inc
mov
or
adc
es
dec
adc
jae
jb
mov
cmp
sti
pop
ljmp
jns
shrl
into
out
add
adc
pop
mov
sbb
sahf
sbb
lret
jne
ss
fwait
je
arpl
jne
push
fcompl
loop
and
add
movsl
sub
into
in
bound
sbb
sub
imul
sub
sub
inc
or
inc
jb
jecxz
jne
push
test
test
int
pop
lods
int
fxch
faddp
mov
and
test
mov
jne
shll
jae
mov
sub
in
mov
adc
cmp
adc
pop
fisttpll
mov
sub
bound
in
mov
and
fmuls
xor
aad
mov
inc
mov
lret
and
sti
lret
mov
mov
mov
movsl
jge
icebp
xchg
lcall
in
lahf
or
aad
push
push
popf
stos
frstor
push
push
inc
lds
pushf
mov
and
leave
jne
ret
orl
fcmovnbe
pushf
add
dec
add
popa
and
cmp
lds
sbb
insb
bound
mov
push
in
inc
pop
and
popa
repz
cltd
jo
test
mov
ficompl
fistl
xchg
stos
rcrb
out
repz
sbb
or
sbb
jmp
or
subb
inc
clc
dec
jae
cltd
stc
jnp
cld
jae,pn
iret
xor
xor
push
cmp
icebp
mov
mov
inc
pop
test
pusha
push
jne
pop
das
push
int3
sbb
push
popl
jge
xchg
inc
xor
in
outsb
add
xchg
popa
jle
fdivl
movb
pop
mov
push
jb
add
pop
aaa
int
std
jns
mov
test
adc
mov
dec
das
and
dec
mov
jne
lock
mov
jle
jo
xor
out
fsub
xor
and
pop
enter
arpl
loopne
das
lret
insb
jl
cli
dec
fmuls
iret
xrelease
jmp
cmp
add
push
add
pop
out
sub
imul
lds
push
leave
out
pop
push
dec
and
adc
adc
inc
lock
popa
lret
data16
clc
repz
hlt
mov
push
sbb
ds
into
jae
call
push
cld
sub
mov
sbb
cmc
sbb
xchg
xchg
lret
add
nop
ljmpw
nop
dec
dec
adc
inc
das
push
and
push
shlb
fcmovu
loop
or
inc
cld
divb
or
adc
cwtl
sbb
pop
cmpsl
lret
int
sub
sub
jle
test
out
adc
int
stos
ret
push
test
add
lods
loopne
xchg
lods
shlb
das
sub
add
push
scas
push
mov
cmc
jb
fcmovu
sbb
jae
pop
jle
push
ret
jecxz
ss
ret
inc
mov
bnd
push
xchg
mov
sti
xor
pop
and
and
and
push
cmp
int3
xor
enter
xchg
in
and
stos
rol
pop
push
mov
out
xchg
xchg
push
dec
push
jne
lret
adc
inc
mov
mov
popa
mov
xchg
pop
pop
cmp
mov
subb
fiaddl
xorl
lret
and
mov
lcall
pusha
push
push
outsb
jle
sbb
popa
and
jnp
aad
mov
xchg
repz
add
stos
std
insb
mov
jge
jno
adc
or
jnp
out
cmpsl
add
pop
push
jmp
add
jo
scas
xchg
adc
dec
mov
and
mov
jmp
or
jb
loop
adc
dec
xlat
testl
mov
push
cwtl
pop
mov
mov
push
jl
pop
mov
inc
repz
jns
enter
mov
push
push
je
adc
inc
out
mov
add
insb
inc
mov
push
cs
mov
ficompl
lcall
xchg
test
mov
jecxz
push
subl
imul
clc
mov
add
add
jg
ret
loope
mov
rclb
cmpsb
dec
stc
fnstcw
pop
inc
inc
in
lret
fisubl
out
rclb
aaa
adc
mov
repnz
sar
mov
sbb
outsb
xchg
ds
jns
fildll
jne
cmpsl
aad
mov
adc
cmc
jmp
jmp
mov
jae
cmp
loopne
in
mov
cmp
or
loop
xor
and
leave
std
jmp
scas
sbb
sbb
bsf
nop
push
scas
sti
fbld
clc
jg
mov
icebp
loop
xchg
xchg
and
scas
lret
lret
inc
add
dec
push
loopne
fldcw
fisttps
xchg
fwait
push
daa
scas
and
dec
dec
dec
push
aad
push
pop
test
ds
push
push
icebp
pop
cmp
mov
jge
ljmp
aad
add
inc
push
fcoms
sbb
das
cmpb
dec
roll
aam
mov
pop
insb
enter
nop
mov
movsb
mov
sbb
cmp
xchg
push
rclb
addb
fldl
pop
testb
fwait
imul
gs
jae
and
leave
xchg
sti
roll
not
scas
pop
sub
fdivrp
shll
leave
mov
rcll
aaa
mov
divb
loop
cmp
int3
cmpsb
sub
or
xchg
mov
jecxz
arpl
add
pop
insl
std
imul
repz
or
xor
pop
fsts
out
sbb
sbb
lret
aas
stos
and
jae
sub
and
or
adc
sbb
jbe
ja
push
xchg
add
stc
and
imul
fimull
sbb
scas
jle
addr16
xchg
das
cmc
nop
mov
sub
mov
sub
fwait
sbb
mov
sahf
scas
jecxz
pop
js
mov
sti
jae
mov
loop
pop
mov
aad
test
call
adc
aam
xor
push
and
push
jnp
ja
push
adc
sub
out
lret
out
sbb
cmp
dec
das
jo
mov
pop
addl
and
sbb
fistpll
fcmovbe
mov
cli
and
mov
sub
mov
xor
add
mov
push
pop
add
or
je
cmp
test
jge
stos
jg
stos
in
fmull
arpl
mov
aad
xor
mov
xchg
aaa
ret
lods
jns
sbb
sbb
daa
fbstp
call
sub
movsb
sbb
sub
xor
mov
aas
scas
or
leave
add
mov
push
xor
loopne
cmpsb
push
jl
xor
and
popf
xchg
add
adc
cs
jae
add
sbb
xchg
sbb
jge
mov
jb
lea
jae
and
add
dec
xchg
scas
insl
add
and
push
out
scas
or
insl
pusha
and
sub
movsl
fwait
mov
sbb
jb
test
fmulp
mov
scas
imul
nop
jb
loope
push
mov
adc
xchg
insb
stc
inc
xchg
ja
lods
push
sub
loope
push
mov
out
stc
dec
fnstcw
fistps
nop
cmp
in
jnp
pop
stos
imul
out
sti
add
aad
adc
adc
xor
xchg
cmp
lcall
xor
mov
cs
jle
cs
xchg
icebp
ds
fisttpll
adc
movsl
inc
jbe
loopne
push
out
jecxz
jo
pop
inc
mov
fmuls
pop
scas
in
inc
arpl
cld
cli
filds
or
or
xchg
pop
mov
or
addr16
mov
mov
inc
dec
movsb
dec
cltd
sbb
pop
xchg
and
cs
bound
test
jle
xchg
jnp
imul
push
negl
clc
imul
shll
jae
outsb
xor
fadd
ljmp
jp
aaa
fucomp
mov
inc
test
mov
stos
subl
or
fsubrs
push
mov
pop
fldcw
mov
push
loopne
sbb
push
xor
mov
adc
movsl
push
dec
fucomp
mov
mov
js
xor
jmp
mov
mov
cs
sarb
orl
push
jecxz
outsl
fimuls
je
clc
mov
subl
movsb
inc
movsl
das
adc
arpl
jge
cmpsb
sbb
add
lcall
rorb
cld
pop
jge
inc
mov
xor
push
or
in
pop
pop
push
cli
std
push
into
add
addr16
add
or
je
adcb
mulb
sbb
out
leave
imulb
cld
in
adc
test
jno
sbb
cmp
mov
adc
cmp
mov
dec
pop
shl
in
or
aam
inc
adc
sbb
je
push
daa
outsl
xor
test
aad
jp
mov
jmp
fwait
push
in
pop
dec
inc
ret
test
sti
pop
cmc
xchg
dec
xchg
pop
adc
addr16
fdivrl
inc
in
shrb
aad
mov
xchg
arpl
jnp
in
aaa
cmpl
dec
push
pushf
push
xchg
scas
cli
pop
jecxz
xor
xlat
and
xchg
sbb
mov
inc
pop
cmpsl
cwtl
ficoml
inc
fdivr
xchg
mov
stos
out
mov
sbbl
add
jecxz
fisubrl
pop
mov
add
xlat
or
cltd
pop
inc
leave
mov
incb
xor
pop
jmp
mov
sub
xor
in
repnz
dec
dec
xor
xor
mov
pop
cmp
add
insl
jnp
mov
fisubrl
pop
shlb
sub
inc
adc
iret
cmp
orl
inc
dec
and
rol
dec
lret
mov
add
sbb
xor
in
mov
pop
fstpl
add
sbb
push
mov
lcall
sahf
andl
int
add
pop
aam
dec
ljmp
rcr
push
outsl
xchg
or
mov
leave
push
jmp
cmpsb
rorl
cwtl
popf
sub
pop
adc
and
mov
xchg
lahf
xchg
int3
inc
in
inc
pop
fs
cmpsl
mov
insl
inc
pop
mov
mov
jl
insb
ss
cmp
pmaxsw
xor
adc
add
cs
cmp
mov
push
insb
hlt
stc
jle
xchg
nop
stos
cmp
sbb
cmp
iret
js
call
inc
aam
add
inc
fistl
pop
mov
xchg
add
push
jno
lahf
and
fisubrs
lds
insb
adc
push
lds
les
push
mov
call
push
xchg
test
pop
xchg
rolb
test
lahf
cltd
or
cmp
dec
jle
clc
and
or
enter
hlt
loope
push
mov
fbld
push
sbb
stos
adc
and
sub
or
rcr
int3
mov
in
filds
loope
fistpl
call
adc
mov
jne
dec
xchg
movb
je
mov
jg
mov
inc
imul
cltd
call
fiadds
mov
push
push
call
dec
je
or
sbb
sub
jbe
scas
ret
daa
mov
outsb
add
dec
jle
xchg
push
lcall
xchg
and
je
jmp
fwait
lods
push
mov
mov
insl
fimull
subb
xchg
ljmp
add
push
push
lret
pop
xchg
sahf
scas
ror
mov
cmpsb
into
lret
mov
sahf
addr16
xchg
add
cltd
push
in
shl
pop
push
test
in
pop
xchg
jmp
movsb
dec
test
pop
dec
mov
dec
lret
repnz
xchg
jnp
jbe
xchg
add
cmp
sub
sub
fs
pushf
jbe
data16
popf
cld
xchg
popf
mov
adc
push
add
mov
push
xchg
mov
loope
fiadds
scas
push
jb
jne
in
bound
or
inc
and
mov
mov
push
jl
dec
out
loope
addr16
dec
sub
xorl
in
movsl
jbe
mov
xlat
int
sub
push
sub
cmp
push
outsb
pop
dec
push
sub
lock
cmp
mov
or
loope
dec
or
int3
loop
lods
sbb
sub
cmp
lock
xchg
daa
mov
dec
popa
xor
outsl
imul
mov
or
xchg
dec
fdivs
int3
dec
adc
push
sub
loope
xor
xchg
or
pop
adc
xchg
sbb
sbb
aam
or
jae
test
pop
cmp
mov
adc
clc
fiadds
jns
ja
add
push
sub
adc
push
call
jp
push
add
xchg
pop
les
jnp
sbb
add
xor
stos
xor
cmp
sti
ret
movsl
or
cmc
lret
repnz
or
insb
cmp
icebp
push
sbb
int3
xchg
fstl
stc
push
repz
push
bound
outsb
lods
ljmp
les
mov
adc
jle
add
sbb
push
add
jns
imul
xchg
rcr
push
das
sbb
mov
fs
divl
mov
sbb
cmpsl
push
loopne
fcmovb
popa
roll
push
leave
adc
outsb
bound
pop
cwtl
gs
mov
mov
cmp
pop
fbstp
js
jmp
orb
pop
pop
ret
fcmovnu
int
mov
jns
mov
loop
sbb
push
xor
xchg
dec
add
xchg
test
mov
lods
std
mov
pop
cmp
sub
sub
mov
and
out
daa
js
out
lahf
mov
fcompl
popf
push
adcb
stc
fucomi
aas
mov
in
xchg
filds
mov
jbe
or
mov
bswap
mov
mov
push
stc
rcrb
sahf
mov
subl
imul
mov
pop
movsl
roll
and
cmp
in
adcb
or
lret
shll
jnp
adc
lods
inc
mov
adc
and
aam
sub
xlat
lds
lods
inc
ds
out
pushf
and
push
add
pop
pushl
ret
decb
mov
lahf
aas
mov
add
fistpl
mov
ja
mov
outsl
dec
out
mov
ljmp
sub
pop
arpl
sbb
xchg
nop
lds
jmp
adc
dec
aaa
mov
into
mov
mov
outsl
ja
mov
andb
xor
fisttpll
stc
lahf
aas
pop
sti
rorl
data16
pop
or
enter
std
sbb
mov
js
dec
and
mov
addr16
mov
aas
loope
lods
rorb
outsw
imul
mov
cmp
mov
mov
scas
lods
movsl
jne
ds
sub
and
mov
mov
imul
in
movsb
cwtl
sub
imul
jne
xor
lret
mov
sbb
xor
sbbb
aaa
add
xchg
shlb
mov
push
mov
push
shrl
cmp
cmp
mov
rorb
lret
fcmove
push
inc
les
or
sub
mov
push
pop
in
scas
push
incl
lahf
orb
pop
dec
or
repnz
stc
jb
mov
orb
mov
hlt
mov
fistps
xchg
xlat
outsl
xor
mov
mov
mov
std
in
add
mov
cwtl
aad
inc
xchg
pop
aas
std
push
repnz
jne
dec
dec
xchg
inc
mov
jne
xor
stos
or
lret
test
int3
sbb
lds
iret
push
in
ficompl
shlb
adc
and
or
jnp
pop
lock
adc
stos
aam
xlat
sbb
fs
scas
inc
lods
inc
dec
cmp
xchg
mov
data16
fnstsw
add
pop
mov
push
js
movsb
sub
jl
je
push
push
out
push
jno
jmp
mov
shrb
add
lret
cmpsl
shll
adc
mov
cmp
mov
test
sbbl
jnp
aas
adc
xlat
iret
lret
cmpsl
sti
fldl
pop
inc
pop
jg
sti
out
fildll
inc
sub
das
push
xor
cmpsl
ficoms
xchg
and
add
test
cmp
mov
cmpsb
fnstcw
loop
gs
inc
cld
xchg
xor
int3
sub
jp
dec
fisttpl
xchg
cmp
lahf
mov
les
mov
loopne
sbb
add
gs
sbb
into
iret
xchg
stos
rcr
out
testb
sbb
inc
sbb
push
push
jae
in
add
or
ret
arpl
jge
add
cmpsb
mov
cmp
int3
lahf
sahf
push
sbb
adc
mov
cmp
imul
add
jmp
dec
leave
hlt
std
sub
mov
xor
xchg
scas
cmp
xor
out
fcmovnbe
int3
jb
lret
jno
mov
daa
aas
jnp
adc
adc
pushf
mov
sbb
fsubl
pusha
test
cmpsl
xchg
fs
adc
add
mov
lret
loopne
push
dec
xor
adc
shrl
inc
adc
lods
cmp
dec
cs
inc
shlb
push
leave
mov
dec
test
pop
sub
loop
in
jg
inc
mov
jnp
push
test
lock
mov
mov
out
rcll
pusha
inc
or
mov
jecxz
inc
shll
movsl
push
stos
mov
js
and
jmp
fcmovne
out
pop
mov
push
enter
mov
or
dec
movb
cmpsl
in
ljmp
push
fsave
shll
adc
xchg
adc
sub
fwait
and
sub
lods
dec
fsts
xchg
in
add
inc
and
popa
inc
push
pop
in
out
mov
mov
addr16
jb
pop
mov
rcll
dec
cmp
pushf
fwait
xchg
mov
push
dec
mov
aad
outsb
add
cmp
sbb
cmp
shlb
cli
xor
inc
iret
push
out
testl
ljmp
push
inc
out
les
push
add
into
inc
sub
lock
sbb
push
gs
fs
push
sti
out
out
push
lret
hlt
lock
out
lret
jns
or
fcoms
dec
lds
push
fnstenv
sub
shl
xor
mov
incb
push
icebp
jecxz,pt
insl
sub
push
inc
mov
mov
ftst
lret
lock
fistpl
fiadds
lods
or
je
push
jl
inc
pop
cltd
orb
data16
add
stos
iret
jnp
sub
xor
mov
push
push
arpl
mov
orl
xchg
pop
dec
in
xchg
out
ja
mov
add
lret
pop
jmp
lods
sbb
stos
in
push
fnstenv
xor
ss
out
cmp
push
jno
mov
neg
mov
mov
dec
mov
imul
push
js
xor
aam
xchg
xor
cmc
pusha
sbb
ret
mov
arpl
push
stos
inc
and
daa
in
push
xchg
add
repnz
sti
fildll
dec
adc
mov
inc
mov
or
xor
leave
in
outsl
gs
xchg
sbb
fcmovnbe
aaa
push
adc
mov
cmpsl
ret
jae
xlat
mov
dec
clc
lret
cmp
jae
stc
adc
jne
or
aad
aas
es
jle
pop
xor
fwait
lcall
adc
pop
or
mov
in
lret
add
into
ds
xor
add
fs
push
lods
push
push
push
mov
sub
cmpsb
mov
cmp
cmp
sub
js
adc
lahf
shrb
sub
xchg
dec
cmp
into
jo
data16
dec
jnp
in
mov
loopne
cltd
clc
movsb
lret
cs
outsl
add
imul
pushf
or
dec
sub
fldt
jle
push
push
sbb
xchg
push
jecxz
nop
fisubrs
cli
ljmp
ret
repnz
cmpsl
or
subb
mov
add
jl
jae
xchg
test
inc
lods
xor
sbb
cli
ds
notl
cmp
cmpsb
xchg
inc
mov
sarl
nop
sub
push
cwtl
xchg
pusha
repnz
das
inc
pop
imul
cmp
lret
mov
jo
jmp
jl
cmp
mov
xchg
xlat
sub
xchg
add
xchg
adc
mov
loop
lcall
xchg
push
lret
jnp
jmp
cmp
push
sub
xor
lret
cmpsl
inc
jg
data16
mov
out
in
leave
and
and
aaa
jmp
lds
lret
cmp
xor
jb
inc
xor
stos
sub
mov
decb
stc
mov
repnz
popa
repz
fwait
jge
sbb
out
mov
test
sarb
pop
cli
les
jno
dec
xor
pop
cmp
enter
pop
mov
mov
out
jp
loopne
inc
loope
push
or
mov
xor
or
cli
xor
mov
mov
fmull
push
inc
std
and
sub
dec
xchg
repnz
xor
lods
push
nop
dec
inc
insl
jge
ret
dec
xchg
movsb
rcrl
ss
add
pop
rcll
or
lods
aaa
cmpsb
mov
mov
test
cmp
stos
fwait
mov
lcall
leave
vpaddusw
adc
or
sub
jbe
mov
sub
rorb
xchg
dec
xor
push
dec
push
pop
mov
mov
mov
cli
roll
fbld
pusha
adcb
push
in
pop
jmp
stos
cmp
dec
xlat
adc
fsubs
pop
xor
add
jns
lods
dec
ss
jge
sti
dec
inc
sub
and
imul
push
mov
push
and
pop
inc
loope
mov
mov
mov
inc
scas
sub
sbb
mov
cli
inc
push
add
vpsubusw
mov
cmp
insb
imul
mov
in
adcl
inc
jne
ror
mov
sarl
jle
pop
mov
xchg
jecxz
in
push
mov
mov
aad
adc
mov
cmp
sti
cmpsb
push
daa
mov
and
imul
testl
lods
cmp
psubb
ss
cmp
and
scas
or
mov
loopne
scas
into
les
adc
jmp
enter
sub
push
mov
sti
and
aaa
cmpsl
inc
jmp
lea
lcall
mov
xchg
xor
test
stos
pop
inc
xor
jno
xor
and
out
cmc
mov
nop
loop
outsb
xor
mov
lcall
pop
ret
xor
daa
es
xor
sti
add
in
rcll
mov
pop
or
rorl
out
shrb
movsb
pushf
cmp
cs
dec
and
dec
xor
sahf
push
mov
mov
jp
mov
add
int
or
and
jmp
mov
mov
adc
inc
push
push
sahf
aad
inc
pop
adc
js
adc
adc
add
dec
xor
inc
cwtl
adc
leave
mov
xor
addr16
insb
mov
add
sub
aad
cs
or
and
jnp
xchg
sub
push
mov
loop
and
mov
addr16
fwait
out
mov
push
xrelease
shll
loope
inc
cmp
xor
adc
cwtl
lcall
sbb
mov
and
jne
nop
mov
inc
push
pusha
fisttpl
mov
mov
popa
push
movsl
fxch
daa
xchg
jno
push
jmp
pop
icebp
arpl
inc
insb
and
or
faddl
mov
jbe
inc
and
adc
fs
dec
iret
out
in
pop
test
mov
notl
mov
sbb
int
pop
lds
mov
in
lods
xor
sbbl
sbb
out
fisubrs
jbe
out
daa
jmp
pop
cmp
dec
lock
test
jbe
xor
outsl
xchg
aad
mov
mov
adc
sub
xor
jle
sub
or
fs
mov
and
scas
adc
cmpsl
jbe
cmc
lcall
lea
aam
lahf
mov
mov
mov
out
rcrb
sub
or
negl
pop
mov
mov
jecxz
insl
push
test
mov
and
int3
xor
sbb
stos
add
pop
outsl
jbe
leave
mov
cmp
sub
jmp
jp
sbb
and
lea
lods
les
in
iret
popf
cmp
addr16
and
and
jle
rcrl
lahf
stos
imul
add
ret
xchg
inc
pop
andps
dec
and
mov
adc
mov
jge
dec
ss
cmp
jne
scas
daa
jp
or
xchg
pop
and
inc
repnz
pop
movsb
hlt
sub
aam
cld
bound
jge
cmp
lahf
fs
cmp
dec
mov
dec
pop
into
mov
aas
pop
clc
mov
dec
dec
mov
fsubrs
lock
and
xor
cmpsb
jb
add
xchg
adcb
inc
dec
cli
push
push
js
enter
push
mov
mov
hlt
jecxz
cmp
and
jge
lahf
loope
jg
ja
enter
or
jmp
js
xchg
insb
jecxz
int3
aad
push
pop
mov
adc
ret
pop
popa
xor
rcrb
xchg
jmp
dec
outsb
cmp
out
and
push
lret
imul
loop
push
rorl
mov
cmp
repnz
sub
xor
dec
adc
xlat
sub
movsb
jnp
xor
xchg
sbb
sub
loope
push
fsub
popf
scas
lods
clc
adc
jae
sub
xchg
cmpsl
jns
icebp
in
pop
leave
sub
sub
sbbl
test
leave
jbe
in
leave
mov
inc
adc
dec
fldcw
lods
imul
sti
mov
jo
icebp
pop
dec
mov
aam
and
mov
sarb
xchg
mov
lret
xorl
or
adc
jb
packuswb
cwtl
add
aam
into
testl
mov
jnp
data16
out
push
das
lret
push
fs
sub
dec
std
test
and
xchg
jo
cmp
push
in
xor
mov
sarb
mov
xchg
subl
sbb
sub
rclb
and
mov
lea
aam
ja
leave
and
into
inc
popf
movsb
sbb
sbb
lcall
jle
mov
andb
pop
lds
in
aas
mov
stc
jns
rclb
pop
and
imulb
adc
lea
fldl
cwtl
inc
xchg
test
lods
mov
js
lret
push
push
mov
out
mov
xor
dec
push
or
lahf
and
cmp
pop
into
xorb
stos
js
sti
gs
pusha
mov
jne
testl
into
adc
and
mov
ljmp
mov
xchg
lahf
jns
ss
mov
xor
jecxz
xchg
lods
in
insb
mov
popa
mov
inc
inc
jp
aad
imul
lcall
sbbb
or
add
mov
imul
sub
adc
jno
push
inc
das
pop
rorb
mov
xchg
xor
popl
mov
push
rorb
insl
rorb
movsb
test
cmpl
push
cld
aaa
add
inc
test
xorl
adc
or
mov
mov
xor
cmp
jl
push
rclb
test
adc
ds
out
adc
cmc
dec
lcall
cmc
inc
sahf
ret
cmpsl
xchg
jno
or
clc
adc
xchg
cmpsl
and
ret
lods
out
adc
dec
mov
fdivl
fistpl
hlt
lret
and
out
sub
negb
fdivrl
and
dec
push
adc
scas
inc
in
jg
inc
icebp
push
mov
jg,pt
sub
in
fdivl
cmp
dec
lcall
fs
mov
xor
cs
mov
sbb
filds
fiadds
add
fwait
xor
push
xor
and
inc
icebp
fs
aad
jae
hlt
inc
sub
pop
add
stos
rcrb
mov
jecxz
add
mov
xlat
add
inc
pop
add
stos
enter
push
jmp
push
inc
repnz
mov
cwtl
movsl
push
das
add
int
and
xor
xlat
xchg
mov
mov
dec
fwait
pop
xor
leave
inc
dec
inc
jae
push
mov
mov
dec
mov
call
rclb
push
sub
ds
movl
and
int
setle
or
fidivrl
or
push
stos
mov
fwait
xor
ficoml
inc
jbe
repz
inc
add
es
jmp
cmpsb
pop
pushf
mov
lret
je
mov
bound
leave
fidivrs
dec
mov
mov
and
add
lret
int3
lret
xor
lock
inc
imull
mov
add
in
mov
mov
push
dec
push
push
lods
mov
inc
mov
mov
pop
dec
arpl
xchg
or
cmp
xchg
shl
adc
pop
dec
sbb
pusha
outsl
add
insl
sbbl
sbb
popa
jg
adc
ja
filds
add
cmp
mov
lcall
jle
repz
mov
fwait
into
xlat
js
jae
out
cmpsl
add
sbb
cli
add
mov
adc
movsl
cmp
in
lods
or
in
push
fucom
loop
stos
pushl
imul
je
mov
xchg
testb
ds
cmp
pop
cli
jmp
test
xchg
cmp
cmc
push
rcrl
shr
lret
sbbb
push
shrl
in
mov
mov
scas
scas
dec
popf
iret
push
loop
mov
fisubl
in
cmpsb
inc
sub
jno
xlat
aad
push
rcrl
std
or
or
pop
test
outsb
jae
dec
popa
faddl
pop
mov
jnp
jno
int
jl
sub
jb
mov
decl
dec
enter
popa
mov
gs
sub
push
adc
mov
std
dec
loope
mov
jmp
outsb
mov
jo
mov
shr
test
mov
pop
sbb
cmovle
jl
xchg
and
call
mov
xchg
add
and
enter
cmc
xor
popfw
nop
sub
dec
iret
sbbb
dec
sti
ja
cwtl
sarl
das
cmpsb
pop
jo
imulb
fcomi
adc
fs
out
jnp
fidivs
xchg
inc
sub
loopne
mov
mov
inc
xor
mov
ret
test
push
inc
mov
mov
sub
inc
jl
mov
stos
xor
dec
push
mov
clc
cs
add
popf
das
cli
mov
inc
mov
mov
xor
adcl
cmp
aam
push
add
lcall
sub
ljmp
cmp
js
out
inc
cmp
mov
fnstenv
je
es
mov
call
mov
cmp
shrl
sub
xor
mov
mov
sbb
insl
shl
mov
cltd
ja
icebp
rolw
xchg
and
out
add
pop
scas
xchg
jns
stos
or
insl
mov
or
ret
or
popl
inc
mov
stos
mov
cmp
div
faddp
push
lahf
jo
mov
push
outsl
pop
outsb
sub
adc
popf
jle
adc
pop
cmpsb
xor
fwait
movsl
push
push
data16
fwait
cwtl
fwait
sbb
mov
and
lret
ss
pop
inc
or
inc
dec
lds
rep
fstpt
out
inc
mov
jno
xchg
unpckhps
popa
xchg
pop
sub
sti
repz
in
add
fnstsw
inc
xchg
test
add
fcmovnbe
mov
in
call
aas
rorb
lock
inc
push
sub
inc
and
push
jl
push
mov
mov
dec
les
out
cmpb
pushl
pop
jge
stos
scas
data16
sub
ja
call
test
repnz
xor
insl
push
jp
and
jge
dec
movsl
int
mov
loopne
std
mov
jge
ljmp
aad
nop
lret
int
ss
pop
push
cmp
mov
mov
mov
test
adc
in
mov
sbbl
sub
ret
cltd
push
xor
sti
jp
xor
ljmp
aad
mov
pop
lcall
mov
cmc
adc
jmp
pop
movsl
int
xchg
pop
mov
and
mov
sub
test
cmp
add
cmp
mov
inc
mov
lock
call
sub
push
or
mov
mov
ds
dec
out
and
jno
insl
imul
mov
imul
testb
adc
pop
orb
pusha
push
and
incb
sbb
mov
jp
call
fs
adc
xchg
or
xor
mov
push
push
shlb
shl
lret
dec
fidivrs
xor
jecxz
mov
out
icebp
ja
pop
cltd
mov
orb
popa
ja
jl
in
add
les
sarb
int3
or
sbb
sbb
rcr
dec
dec
ljmp
pop
dec
mov
shr
int
jle
insb
inc
adc
into
test
adc
push
xchg
xor
sbb
xchg
dec
cwtl
push
jle
xchg
lret
out
sti
sbb
push
out
rcrb
lret
push
int
push
iret
loop
daa
inc
xor
xor
sub
jl
rolb
push
fildl
fisttps
mov
dec
fs
mov
mov
push
inc
pop
ja
add
and
xchg
mov
ficoms
lock
cmp
jp
mov
push
dec
popf
push
cli
sub
inc
sub
out
or
test
sar
adc
rcrb
jne
sbb
push
sub
or
push
lock
mov
cs
jb
test
push
pop
sar
leave
add
icebp
push
adc
test
push
dec
mov
sub
into
insb
sbb
sub
jns
push
adc
loope
jno
test
xchg
cmc
xchg
and
sub
jmp
pop
adcl
js
mov
popf
addl
push
dec
inc
jle
push
nop
cs
pop
loope
popa
pusha
adc
repz
jns
aas
pushf
movsb
aad
cmp
loop
and
and
rcrb
dec
mov
mov
test
dec
mov
pop
fdivrs
jns
call
sub
lret
sbb
xchg
in
cmp
adc
push
push
mov
jb
pop
dec
scas
and
mov
dec
jnp
movsl
push
lahf
in
outsl
js
lcall
cmpsl
into
in
jl
in
mulb
push
lods
leave
movb
lods
add
mov
jnp
test
dec
mov
sahf
fistl
push
adc
ret
mov
and
push
nop
out
inc
sahf
in
xor
ss
sbb
add
xchg
mov
inc
dec
loopne
ss
call
cmp
inc
add
sbb
rcll
icebp
mov
arpl
mov
mov
lock
cmp
sub
dec
out
test
vxorps
pop
push
inc
inc
push
nop
loopne
fldenv
push
adc
fs
in
push
dec
out
loopne
mov
inc
pop
ss
arpl
test
sbbl
lcall
fsts
jae
push
pushf
cmpsb
xchg
xlat
outsb
lret
mov
dec
add
mov
push
xchg
out
out
stc
or
int3
inc
popa
rcrb
in
jb
inc
out
cld
jle
repnz
or
nop
jl
pop
fwait
icebp
pop
and
in
popa
mov
stc
int
dec
and
cmc
or
mov
cmp
xchg
dec
outsb
mov
xor
out
and
shrb
cmc
jo
push
cwtl
out
jecxz
jne
lret
xor
jmp
jbe
ljmp
popf
shll
inc
mov
cld
and
mov
aam
jge
sbb
jae
cmp
cmpsl
flds
jb
sahf
pop
insl
xchg
pop
outsb
daa
cmp
in
arpl
in
bswap
pop
xchg
inc
mov
fwait
mov
or
popf
aad
dec
or
rolb
aad
cmpl
mov
and
add
lret
or
aas
mov
out
fimuls
outsb
push
jle
das
fnstenv
scas
pop
dec
xchg
lcall
int
gs
mov
pop
and
inc
je
movsb
add
js
sbb
or
jne
repnz
cmpsl
sbb
test
sarb
add
push
adc
fimull
mov
call
pop
add
push
add
test
or
test
mov
jl
es
and
ljmp
les
inc
push
xor
sbb
push
subb
rorl
jmp
sbb
insl
jle
pusha
pop
push
inc
decl
mov
fucomi
test
inc
clc
sbb
idivb
dec
imul
cli
inc
icebp
pop
std
shrb
repz
pop
notb
cmp
bound
mov
sub
jnp
sbb
dec
insl
test
mov
push
shlb
cltd
test
loopne
sbb
pushw
jo
mov
jnp
aad
fs
dec
push
lret
std
icebp
mov
sbb
jbe
loopne
inc
ds
cmp
inc
scas
jp
adc
add
enter
push
sub
repnz
cmp
add
dec
insl
fistl
adc
jnp
pop
into
push
clc
pop
cmp
mov
lods
xchg
imul
lahf
mov
and
jg
sbb
dec
cmp
imul
or
jb
mov
test
cmp
and
lret
sub
adcb
inc
sbb
mov
pop
mov
adc
or
clc
cmc
pop
xchg
out
jmp
mov
pop
mov
fwait
add
js
and
movsl
int
fcompl
rcll
notl
dec
jbe
int3
hlt
cmp
jb
lods
out
or
or
cmc
bound
xlat
lea
mov
mov
loopne
mov
cmc
fcoms
out
push
jmp
xor
or
jmp
push
mov
fsubrs
hlt
inc
dec
mov
push
lods
and
dec
xlat
ret
fisttpl
mov
inc
fs
out
icebp
xor
gs
in
sbb
leave
inc
jp
rcll
mov
or
insb
mov
pop
sub
xor
add
sahf
hlt
or
jge
scas
adc
or
mov
ficoml
sbb
dec
lea
mov
in
hlt
ljmp
cwtl
xlat
mov
sub
add
cmp
push
jmp
mov
sub
mov
outsb
push
aas
cmp
js
test
cmpsb
push
push
and
leave
in
rolb
xlat
jp
cmpsl
scas
xchg
xor
movsb
movsl
jne
cmp
in
cwtl
hlt
xchg
pop
lcall
movsb
hlt
and
inc
adc
push
mov
lret
pop
in
cmp
stos
idivb
ljmp
scas
dec
inc
repz
dec
pusha
xchg
lea
movsb
shll
ds
or
add
pop
out
stos
cmc
loope
dec
fiadds
jmp
sti
xchg
adc
lret
aaa
dec
icebp
out
mov
dec
shll
je
pop
pop
sub
or
or
shll
shrb
cmpsl
cli
adc
repnz
push
add
aas
mov
inc
popa
sbb
jno
aad
jno
mov
stos
popf
mov
gs
xor
or
cmp
inc
push
cmp
mov
ja
adc
push
stc
jae
cld
mov
aad
sbb
dec
xor
dec
jns
adc
lock
jno
outsl
repnz
jne
and
cmp
inc
popa
lods
repnz
std
movsl
aaa
push
jne
mov
lcall
mov
insl
add
push
rcll
push
push
jge
mov
out
leave
xor
popa
mov
jmp
sti
test
mov
das
mov
rolb
add
and
stc
out
sbb
das
and
pop
ret
push
sub
cmp
lea
loop
cmpsl
mov
jp
jge
jbe
in
jecxz
mov
jmp
nop
lods
adc
or
dec
outsl
out
mov
push
xchg
xchg
push
pop
mov
test
push
fwait
inc
mov
addr16
jp
push
xor
sub
data16
jmp
cmp
jae
xchg
insl
rorl
enter
jae
pusha
test
mov
in
mov
aaa
pop
mov
sub
or
jmp
fstpt
fsubl
adc
js
xlat
or
insl
cwtl
out
rorb
mov
mov
sarb
in
mov
cmp
mov
ljmp
push
pop
jecxz
lcall
jle
out
das
xor
lds
or
lahf
xor
or
call
int
pop
push
int
aas
cmpsl
push
imul
test
mov
add
add
popf
push
negl
mov
subl
pop
movsl
movsb
push
jne
mov
fimull
mov
subb
ss
inc
neg
gs
arpl
push
ffreep
inc
mov
adc
mov
xor
xor
pop
hlt
lahf
lret
cmc
sbb
xlat
sbb
lods
sub
adc
repnz
sbb
aad
cmp
inc
mov
mov
sarb
xor
jne
movsl
loop
jg
inc
xor
mov
xor
sub
xlat
mov
jp
jbe
xchg
lea
gs
push
sbb
out
xchg
sbb
inc
idiv
adcl
stos
xor
cmpsb
cwtl
push
cmpsb
jl
pop
adc
mov
pop
mov
iret
in
gs
scas
into
mov
sub
pcmpeqd
mov
and
push
sbb
sbb
stos
sbb
or
jp
mov
loope
in
sbb
xor
mov
call
xchg
mov
cwtl
inc
imul
test
dec
dec
bound
adc
jbe
add
std
pop
cmc
and
xchg
jl
stc
pop
push
ss
mov
xchg
test
and
outsl
rolb
add
jge
std
out
push
popl
and
xor
mov
mov
cmp
xor
sahf
adc
xchg
xlat
psubusw
and
mov
movsb
xor
add
dec
pop
ss
ficoml
sub
push
pop
mov
idivb
mov
cld
cmpsb
mov
cwtl
add
sbb
ss
lea
add
dec
jne
xor
mov
mov
xchg
iret
xchg
or
iret
mov
mov
into
vmread
ljmp
cmp
cld
pop
pop
scas
loopne
jmp
dec
mov
pop
call
insl
or
je
pop
xor
mov
test
es
mov
jmp
lods
lret
rorl
orb
jbe
call
xor
ficoms
ret
push
das
outsl
pop
sahf
dec
aas
test
into
lcall
mov
jns
cltd
cmp
xchg
push
xchg
inc
mov
cld
insb
mov
push
pop
xchg
pop
jno
add
fbld
pop
shll
add
mov
sub
dec
shll
outsl
xchg
dec
mov
xlat
fisttpl
sbb
xchg
mov
das
dec
int3
into
jae
cmp
js
in
mov
inc
cwtl
fistl
fidivl
ja
sahf
add
out
mov
and
ficoms
sub
xor
add
insl
icebp
repz
movsl
mov
sahf
mov
xchg
add
xor
dec
test
jne
add
push
aaa
lock
test
xchg
inc
push
movsb
xor
mov
sbb
outsb
mov
cmp
lods
adc
pushf
gs
jg
jb
dec
fwait
adc
sti
add
fwait
inc
outsb
lcall
dec
push
mov
sub
push
lods
jmp
sarl
mov
cs
cld
jmp
push
adc
push
inc
fs
mov
pop
out
jle
push
add
and
in
shl
aam
dec
sbb
ja
shlb
lret
xor
add
nop
scas
movsl
bnd
faddl
lcall
xchg
inc
and
push
out
pop
fisubrl
sub
jmp
inc
aaa
xorb
outsb
xor
cmp
push
adc
mov
stos
enter
mov
fisubrs
inc
and
es
sbb
ja
push
enter
jecxz
fildll
adc
mov
inc
jl
aam
out
dec
dec
jnp
pop
inc
adc
ss
inc
xor
cmp
sar
xchg
lret
popf
je
push
gs
pop
in
mov
jge
sti
and
dec
mov
sti
mov
outsb
fucomip
fnsave
je
fmull
dec
movsb
ret
call
xor
inc
enter
cltd
fildll
jo
mov
cli
pop
jns
ret
dec
repz
mov
loop
fmull
and
scas
pop
jns
mov
je
jecxz
xchg
pop
xchg
insl
out
pop
les
in
jmp
daa
push
rcll
push
test
or
fcoms
aam
mov
and
add
test
and
dec
jg
xor
mov
dec
jle
lods
loop
jl,pt
mov
out
xor
xchg
es
add
push
mov
xor
lahf
nop
push
mov
int3
test
add
loop
into
mov
sbb
je
jl
aas
jnp
jbe
fisttps
mov
negl
ljmp
rcll
dec
test
pop
mov
in
push
iret
or
xchg
push
xchg
aas
pop
ljmp
or
and
adc
sub
stc
popf
jg
jle
add
rcrl
icebp
push
or
xchg
inc
ds
or
sbb
cmpb
inc
inc
je
xlat
loop
les
into
sub
es
xor
rorb
sahf
stos
mov
mov
sbb
jmp
sub
lahf
lods
sbb
gs
faddl
outsl
sub
cmp
lcall
daa
sahf
mov
pusha
sbb
xchg
push
jge
xchg
dec
mov
adc
add
inc
push
xor
mov
xlat
pushf
ds
ja
shlb
testl
sbb
jl
call
jecxz
and
mov
xor
ds
xchg
inc
lock
adc
in
cmp
jne
xor
jbe
fisubs
cwtl
adc
dec
cmpsb
fsubrl
repnz
xchg
mov
xchg
mov
sub
inc
and
sahf
mov
ljmp
xchg
sub
lcall
mov
repz
push
and
ljmp
pop
addb
js
jo
movsl
aaa
in
sub
mov
in
mov
outsb
cmp
jae
inc
sub
lods
push
add
dec
add
ret
pushf
sarl
test
dec
lcall
xchg
cli
das
xor
pushf
add
in
add
mov
mov
or
rclb
out
out
sbb
and
xchg
mov
data16
jl
scas
cmc
rcr
nop
out
or
mov
test
lock
fdivrl
push
add
pop
sbb
sbb
adcb
jno
adc
test
roll
nop
mov
inc
repz
jno
clc
add
adc
lahf
sbb
fildll
xor
mov
scas
mov
push
fs
jge
jnp
sub
test
les
and
test
imul
sub
sbb
jnp
xchg
push
jge
or
jmp
les
mov
pushf
ds
imul
mov
imul
rcr
ljmp
inc
pop
and
adc
add
jg
mov
out
adc
pop
fwait
mov
sahf
sub
popl
clc
mov
jmp
mov
mov
aas
dec
cmp
sub
popa
lcall
sub
in
lods
scas
dec
sbb
xchg
cmpsb
int
cmp
jg
loop
inc
lods
scas
movsl
xlat
xchg
rcll
inc
cld
daa
dec
loopne
inc
in
stc
mov
inc
fwait
and
lds
jmp
fistpll
cltd
outsl
add
or
push
sbb
adc
fidivs
sbb
and
or
orl
pop
or
mov
icebp
adc
lods
js
loope
sbb
mull
out
pop
cltd
mov
aam
icebp
xor
arpl
sahf
adc
jnp
push
jae
ret
lahf
cwtl
sub
mov
icebp
outsb
repnz
daa
pop
cltd
push
xchg
cmp
aas
and
inc
test
ret
cwtl
mov
js
repnz
imul
std
push
icebp
movsb
xor
dec
loop
mov
sahf
xlat
repnz
cmp
out
nop
mov
repz
lcall
inc
xlat
add
leave
dec
inc
dec
cmp
inc
int3
int3
js
adcb
addr16
xlat
and
jno
mov
lret
mov
int
sub
or
fldl
inc
ds
pop
int3
stc
sbb
outsb
xor
jl
movhps
push
cmp
scas
fdivrs
lcall
shl
pop
pop
in
mov
insl
data16
push
in
dec
fwait
cmc
jbe
les
test
fsts
jge
loope
jp
mov
sbb
int
mov
inc
mov
xor
loopne
mov
or
xor
xchg
test
in
pop
shl
stc
cld
mov
jecxz
aas
incl
into
jae
call
mov
jnp
test
cmpsl
lahf
adc
mov
out
xchg
adc
out
mov
ds
jbe
mov
int3
les
xor
je
rorb
fnop
push
sbb
fwait
xor
mov
jecxz
pop
cmp
jle
mov
jbe
stc
je
rolb
fs
shr
xor
negl
mov
adcb
push
xor
mov
push
push
xor
shr
test
mov
jbe
loope
jle
cmp
out
cmc
add
mov
mov
sub
pop
pop
ja
fists
call
adc
es
or
lea
fidivs
fcoms
pop
inc
cmp
in
lret
or
dec
mov
push
mov
pop
mov
int3
mov
jo
ds
sahf
mov
loop
cltd
push
ror
jbe
aas
mov
adc
mov
pop
cmp
mov
inc
dec
push
shlb
mov
sub
es
mov
and
pop
dec
test
adc
adc
jb
scas
repnz
jo
in
mov
jp
xchg
jg
repz
sar
pop
rcll
pop
mov
inc
cmp
imul
movl
cmp
icebp
es
lret
adc
cli
jle
clc
push
test
in
jbe
mov
faddl
mov
cli
pop
push
sbb
pop
imul
jae
xchg
daa
cmp
push
dec
test
fs
and
mov
sti
les
push
dec
iret
mov
addl
mov
sub
pop
insb
sti
pop
xor
inc
adc
add
mov
push
pop
gs
icebp
xor
pop
out
movsb
dec
or
testb
adcl
popa
and
sbbb
insb
mov
sbb
lret
mov
xor
or
cmp
push
mov
cs
push
mov
hlt
mov
testl
mov
aad
testb
inc
push
sbb
fidivl
hlt
xchg
xchg
pop
aad
and
lods
je
out
mov
enter
in
add
or
adc
call
mov
xchg
xor
pusha
jg
in
inc
or
add
cmpb
xchg
cmc
pop
icebp
sub
mov
cs
loop
out
and
add
sbb
repz
loop
sar
lock
xchg
push
rolb
sbb
sub
inc
lea
cmp
adc
mov
paddusw
xchg
pop
shl
adc
sub
add
aam
and
sub
loopne
mov
jo
mov
pop
lods
jae
lret
movsl
adc
cmc
shlb
add
dec
ficoms
jp
scas
jg
and
jns
or
out
daa
lds
in
inc
or
fiadds
pop
iret
bound
and
mov
mov
pop
mov
enter
xchg
sbb
adcb
mov
outsl
es
mov
mov
stos
push
mov
mov
ret
outsb
std
cmp
enter
and
pop
jge
scas
mov
shlb
lock
jg
inc
mov
pop
movsl
and
adc
out
inc
dec
pop
pop
div
and
pop
mov
add
into
iret
nop
inc
mov
cmp
std
lea
call
out
shll
loop
aam
adc
pop
sub
sub
je
popf
ret
jmp
loopne
orl
mov
addr16
pop
andl
push
in
add
ss
or
sbb
int
add
and
xchg
mov
cwtl
xchg
add
out
imul
sbb
cmp
push
cmp
and
sar
cld
xlat
sahf
leave
hlt
insl
jnp
mov
or
lret
sub
adc
inc
pop
fcoms
ret
mov
sti
rorb
stos
inc
xor
dec
mov
push
xorl
mov
jle
loopne
movl
or
mov
lea
mov
popl
jmp
clc
pushf
pop
clc
outsb
psubb
lret
enter
mov
dec
sbb
lock
and
xchg
fists
aam
dec
int
add
add
xor
xor
and
cld
push
push
push
test
dec
mov
dec
sub
inc
push
cmpsb
xchg
add
sbb
aas
mov
jecxz
iret
enter
xchg
jne
jno
negb
mov
and
aad
add
cmp
push
es
insl
std
popf
loope
fadds
cld
iret
sbb
xchg
inc
in
push
dec
aaa
les
and
add
mov
fwait
adc
movswl
mov
cmp
mov
xor
sbb
push
jl
xchg
nop
js
mov
nop
xchg
push
jo
dec
mov
js
pop
ljmp
mov
aas
pop
inc
mov
sub
push
ja
cmp
jl
sti
jo
in
fprem
idivb
stos
hlt
aam
mov
sub
in
and
std
icebp
push
pop
jg
idiv
mov
mov
mov
inc
fistps
sub
sbb
mov
pop
cmpsl
inc
in
aad
mov
add
mov
xchg
or
es
adc
mov
mov
ret
dec
out
das
pop
popa
or
hlt
push
xor
jmp
xchg
or
into
cmpsl
push
nop
shlb
leave
sub
in
mov
jns
or
xchg
loop
push
or
xchg
movsb
test
sti
int
sub
fdivrl
into
fadd
xor
push
repz
test
negb
mov
fisttpll
push
xlat
xchg
test
push
insl
sbb
stc
repnz
or
fadd
je
pop
pushf
sub
aas
stos
stos
fs
jno
inc
insl
pop
sbb
in
sub
pop
bound
jo
daa
mov
arpl
sub
push
push
lret
daa
push
clc
popf
xor
rcrl
jbe
mov
lcall
pop
mov
sbb
dec
stc
nop
test
sbb
adc
jbe
pop
jno
daa
add
sti
outsb
das
mov
push
mov
iret
mov
sarl
ret
negl
xor
cltd
push
es
xchg
mov
stos
aas
or
ficomps
mov
fstps
js
cmp
pop
mov
int3
fadds
pop
push
sahf
inc
jl
hlt
cmp
dec
xchg
inc
sbb
and
xchg
push
mov
rcrl
lds
or
nop
pusha
ss
es
psubusw
addr16
je
mov
mov
rcr
xchg
outsl
cmp
fstpt
clc
dec
nop
mov
rol
push
rcll
push
stos
and
or
jb
mov
outsl
out
ds
pop
mov
enter
cmp
inc
pop
xor
fwait
lds
mov
aad
lea
lret
outsb
add
roll
in
or
das
mull
aas
ljmp
sti
imul
int3
pop
push
int3
jne
or
inc
jmp
hlt
sbbb
stos
out
js
stos
push
shlb
xchg
xchg
add
in
loop
sbb
into
inc
push
mov
insl
int
mov
mov
mov
pop
cltd
int
and
or
pop
cltd
js
iret
or
jle
sbb
or
stc
out
test
cmpsb
stos
orb
ds
ret
aaa
leave
inc
cltd
cmc
faddl
mov
bound
jnp
out
add
ds
and
cld
popa
push
push
and
das
rorl
test
adc
cmp
ficoml
out
mov
shll
sub
jo
sbb
sub
mov
fcomps
jo
and
pop
push
fidivl
decb
ds
pop
inc
xor
movsl
sub
dec
cmp
arpl
sub
clc
dec
mov
or
lods
jb
pop
sahf
add
mov
xorb
flds
les
xor
call
sub
fisubs
dec
pop
std
sbb
scas
insb
mov
pop
mov
dec
gs
xchg
lahf
out
or
fnsave
inc
lods
loope
or
negb
movsl
sbb
loope,pt
jle
mov
xchg
sahf
movsl
or
lds
enter
mov
pusha
sahf
sbb
mov
orb
sarl
mov
xchg
or
idivb
ret
movl
mov
lret
xchg
push
xchg
stc
mov
dec
pop
cmp
cmpl
jp
pop
setbe
sub
xchg
shrb
cmovae
mov
imul
inc
das
ss
add
jg
jp
or
int
out
lcall
sahf
add
pop
idivb
in
js
pop
jns
mov
mov
mov
push
test
cmp
test
repz
sub
push
pop
pop
cmp
rolb
sbb
and
pop
addr16
push
lret
push
iret
insb
ja
xchg
lret
popa
and
or
mov
xlat
dec
jb
pop
jb
pop
sbb
mov
cmp
or
or
ret
testb
fcom
notb
push
lret
inc
icebp
xor
xor
cmp
jo
push
les
ljmp
adc
jb
imul
jl
mov
inc
cmc
sbb
jae
adc
lea
into
add
jmp
movsl
mov
test
xor
fucomi
mov
mov
loope
jg
scas
inc
divl
rorl
ljmp
cmc
mov
adc
xchg
cmp
jmp
pusha
cld
add
adcl
add
decb
pop
adc
shll
jg
fmull
sub
mov
sahf
push
pop
xchg
fnsave
enter
xor
push
daa
fstpl
rcrb
mov
push
mov
mov
out
pop
sub
pop
jp
and
inc
xor
mov
sub
push
out
fcompl
jnp
adc
in
dec
test
aas
pop
div
xchg
lds
push
cmp
popl
nop
jecxz
push
xlat
inc
popf
into
test
hlt
push
outsb
rcrl
xchg
add
xor
mov
cmp
or
xchg
mov
test
cmp
fisttps
fwait
jge
dec
out
xchg
pop
cmp
nop
cmp
jle
xchg
xchg
jnp
shlb
add
sub
and
stos
dec
int
shll
incl
and
mov
in
cmc
push
mov
xchg
or
adc
rolb
aaa
jmp
xor
dec
nop
les
xchg
mov
mov
rorl
mov
adc
je
push
fists
jle
lds
leave
aam
add
in
pop
jb
mov
stos
push
scas
in
test
js
cwtl
iret
adc
movsl
movsl
orl
jo
out
int3
sbb
loop
clc
cmp
xchg
sbb
mov
adc
lea
insl
pusha
add
es
lods
adc
inc
or
push
push
dec
adc
dec
sub
movsl
lcall
mov
aam
pushf
mov
add
or
std
fldcw
movsb
mov
idiv
sub
sarb
push
enter
out
pop
push
mov
dec
cld
fidivl
std
add
sldt
out
lea
pusha
xor
adc
xchg
push
cmp
fwait
or
mov
pop
pop
paddq
dec
mov
adc
inc
add
out
sub
fs
clc
data16
mov
outsl
cltd
push
movsl
cmpsb
rorb
out
test
outsb
fistpl
sub
jb
lock
outsl
adcb
jmp
adc
cld
pop
in
loope
inc
iret
test
xchg
fdivl
pop
push
add
in
imul
mov
and
mov
xor
or
dec
add
das
add
repnz
aaa
mov
cmp
xor
loop
sbb
cmp
addr16
pop
aam
push
daa
sti
shll
push
dec
sub
sarl
leave
js
pop
fbstp
ror
roll
loopne
pop
mov
xor
jp
and
fs
test
pop
adc
loop
cmp
xor
imul
shr
sub
int
pop
push
das
or
sbb
lock
xchg
movaps
outsl
mov
das
xor
arpl
jp
adc
mov
sub
or
and
jno
pop
lret
imul
mov
pop
mov
inc
es
jno
loop
cld
cmpl
push
stc
xlat
xor
xchg
mov
xor
push
push
cmp
imul
inc
add
aam
cmp
mov
icebp
jae
outsb
jecxz
imul
inc
hlt
stos
dec
sub
inc
jne
mov
dec
add
aas
stos
leave
scas
in
push
xchg
adc
and
insl
insb
pop
gs
out
push
into
push
scas
xor
add
adc
test
lods
sub
sti
fmuls
test
mov
fs
mov
movsl
dec
or
cmpsl
ljmp
scas
dec
pop
orb
jo
clc
jno
xchg
xchg
push
jb
push
sub
sbb
cmp
insb
sbb
add
push
inc
jle
cltd
aad
sbb
jns
or
push
ljmp
sbb
push
out
jp
seto
jg
jns
and
jae
sahf
repnz
jecxz
insl
test
xchg
or
sbb
fs
imul
xchg
out
cltd
std
jmp
mov
in
add
out
dec
mov
xor
and
rcrb
pop
jge
xchg
jns
pop
icebp
dec
push
stos
pop
les
lds
push
push
sub
dec
sub
jnp
popa
cwtl
leave
cmp
push
test
mov
jmp
loopne
dec
mov
ljmp
add
xor
movsl
and
or
and
idivb
pop
popa
outsl
arpl
xlat
add
imul
xor
pop
pusha
outsb
test
cwtl
push
les
ss
jecxz
sbb
ljmp
mov
mov
stc
nop
nop
cmp
add
out
jbe
sub
cmp
jbe
jne
jae
sahf
inc
mov
lea
mov
jge
repz
pop
add
jge
cmp
daa
daa
jne
and
xchg
jecxz
xor
loopne
jp
pop
icebp
imul
sub
filds
loopne
scas
fldt
jmp
sub
and
mov
insl
jae
les
hlt
outsl
aad
and
call
cltd
inc
cmp
or
mov
pop
sbb
add
dec
add
jo
xchg
xchg
inc
shr
shll
mov
jmp
in
sub
add
clc
shl
jb
adc
jno
xchg
popa
movsl
xchg
notl
pop
and
mov
or
rorl
mov
cli
dec
push
xchg
jmp
push
cwtl
int3
addb
ret
daa
in
in
shlw
jnp
mov
insb
add
lock
fucom
cmp
jp
xchg
bound
pop
fnstcw
jno
js
adc
sbbb
cmp
push
cmp
out
dec
xlat
inc
cwtl
test
jnp
in
xorb
filds
cwtl
add
out
sub
aam
cmp
int3
cmp
inc
jno
xor
lea
testb
pop
or
cs
mov
sbb
mov
fmulp
mov
xchg
jne
and
fldl
stc
repz
out
mov
ret
add
jnp
inc
loopne
sub
out
in
pop
add
inc
push
shlb
push
push
jb
leave
push
inc
sub
mov
mov
jae
sub
sub
push
pop
scas
push
cmpsb
sarb
sub
insl
mov
mov
mov
add
xor
jle
ret
loopne
ds
insb
mov
mov
add
repnz
idivl
aad
pop
push
adc
insb
inc
movsl
mov
and
mov
sahf
push
decl
and
int3
push
mov
jnp
push
cld
sbb
in
xor
cmp
subb
movb
loopne
lea
ja
sub
pop
mov
xchg
lahf
loop
int3
out
sti
push
movsl
test
mov
jp
push
dec
dec
lcall
push
call
mov
jp
test
lea
or
ja
xchg
lcall
mov
or
mov
fwait
mov
add
repnz
push
dec
pop
jno
shl
mov
jmp
rcl
mov
lret
test
sub
add
pop
xlat
into
mov
xchg
loopne
xor
push
push
mov
xlat
jp
data16
lods
ret
or
mov
ss
cmpb
leave
jnp
mov
call
jle
dec
jl
inc
jne
push
jmp
mov
js
xor
pop
mov
bound
imul
xchg
mov
insb
insl
dec
jge
out
clc
popf
add
dec
pushf
push
pop
adc
xlat
fldenv
icebp
adc
les
dec
xchg
cltd
test
int
test
inc
shlb
mov
fdivl
repz
inc
pushf
ss
shl
pop
mov
dec
and
xchg
dec
shlb
add
mov
mov
inc
fstpt
mov
mov
pop
mov
add
sub
rcll
adc
aaa
pushf
xor
mov
testl
dec
xlat
lods
cmp
int3
pushf
scas
rorl
sbb
jns
mov
or
jno
pop
jg
ficomps
test
insl
mov
stc
jae
inc
ret
mov
fldcw
sahf
mov
mov
loope
shrl
pop
scas
xor
ret
push
jno
cmpsb
ret
push
ret
stc
jl
jno
mov
pushf
inc
dec
outsl
fwait
popa
xlat
mov
sbb
imul
aaa
sub
inc
std
pop
enter
push
dec
pop
mov
cs
dec
jecxz
ss
lock
push
ss
xor
xlat
push
sbb
xor
stc
sbb
call
sub
fstps
mov
sarl
jae
mov
mov
push
pop
fcomip
add
and
jb
fstpt
mov
or
cmp
pop
mov
cmp
cmpsb
xor
test
add
fs
scas
hlt
dec
jp
jns
mov
dec
stos
pop
add
icebp
dec
test
pop
popa
xchg
mov
xor
inc
dec
test
cmc
out
jbe
push
mov
dec
outsb
xor
pushf
sbb
out
and
cmp
js
mov
xor
jmp
imul
jl
jge
pop
daa
dec
fldcw
push
lret
adc
jecxz
or
xchg
push
inc
jns
xor
dec
sbb
add
pop
or
addr16
xchg
rclb
imul
push
sbb
dec
or
mov
push
subb
fildl
divb
push
mov
adc
movsb
mov
stc
ret
adc
push
aad
test
cmpsl
sti
xchg
adc
mov
ds
leave
mov
dec
or
pop
mov
icebp
hlt
gs
push
jne
lret
mov
push
int
jp
pop
popa
in
add
jns
and
fmulp
xchg
xlat
scas
test
data16
push
mov
int3
or
rorb
hlt
mov
cmpb
lock
scas
push
movsl
inc
pop
rcl
mov
aad
add
push
dec
test
pop
sbb
mov
cmpl
push
div
rorb
filds
mov
inc
jb
shr
sbbl
cmp
jg
jo
sbb
and
stos
inc
and
fidivs
aam
xchg
or
mov
xchg
ljmp
sahf
stos
in
ljmp
mov
repz
insl
loopne
cmpl
sete
sbb
insl
in
jge
stos
mov
addr16
sub
pusha
imul
sbb
call
daa
pop
or
push
aam
jo
insl
pop
jle,pt
daa
and
out
lods
je
insl
sti
scas
xor
push
sub
test
leave
mov
pop
fildll
cmpsl
mov
push
jnp
and
xchg
movsl
pop
imul
jae
stos
jne
jmp
xchg
in
pushf
in
fsubrs
fsubrl
sahf
push
jl
mov
add
test
in
movsl
leave
xlat
lcall
jnp
xchg
leave
sub
loop,pt
sub
adc
cltd
loopne
jo
jecxz
addr16
xor
dec
push
leave
insb
push
mov
in
movsl
sahf
pop
adc
cli
pop
pop
cmp
push
xor
insl
in
jecxz
fldl2t
fadd
jl
add
jg
jecxz
pop
inc
mov
faddl
fistpl
xor
push
fwait
pushf
pusha
push
ret
sub
add
mov
cmp
cli
and
xor
jmp
outsb
dec
mov
testb
inc
jae
pop
movsl
or
xor
sarl
pop
push
pop
sub
adc
inc
loop
xabort
aas
outsb
jmp
loopne
jl
push
js
xchg
push
xor
push
and
cli
divb
popa
aam
sbb
enter
mov
in
adc
aas
xchg
in
xchg
fsts
int
dec
call
idivl
and
xchg
xchg
cltd
stos
cltd
xorb
push
mov
pop
mov
adc
inc
enter
addr16
addb
or
das
push
xchg
sub
lods
sbb
adc
mov
repz
adc
fildl
mov
sbb
sbb
cltd
xor
xchg
lea
xlat
xor
dec
xor
clc
push
pop
cmp
add
mov
xor
jno
mov
gs
test
cltd
jecxz
adc
ret
sti
ss
scas
xor
cmp
mov
clts
imul
or
pop
cmp
pop
adc
inc
xchg
push
pop
fimuls
shlb
mov
xor
inc
pop
and
punpcklwd
and
cltd
dec
cld
or
xor
sub
insb
cmp
inc
pop
cmp
sbb
mov
sbb
repz
jge
incb
cmp
rcrb
adc
xchg
and
aas
ss
mov
imul
lods
mov
scas
mov
xlat
or
jb
jnp
jg
mov
loop
outsl
mov
mov
push
mov
insl
jne
std
movsb
iret
pop
into
xchg
xchg
cmc
add
lret
jp
fnsave
jno
xchg
clc
sbb
aaa
jbe
mov
mov
call
push
iret
xor
mov
repz
mov
cmp
clc
adc
repnz
cmpsb
fstl
lea
js
loope
pop
mov
orb
pop
mov
jbe
mov
mov
mov
adc
fstl
outsb
mov
pop
clc
fisubrl
ds
hlt
out
aas
out
push
mov
xorb
scas
pop
fisubs
xchg
outsb
mov
lahf
es
cmp
ss
xor
xchg
jo
push
ljmp
fisubl
sbb
subl
inc
inc
push
dec
jns
xchg
xchg
jge
out
push
int
imul
adc
int
ficomps
inc
test
mov
pop
mov
push
mov
mov
test
loop
cmp
adc
insl
add
int
adcl
imul
sbb
pop
and
xchg
xchg
inc
adc
arpl
out
test
mov
in
pop
adc
mov
shl
pop
scas
loopne
add
inc
nop
aaa
and
xor
or
and
sub
cmp
je
inc
je
pop
or
es
mov
nop
xlat
or
scas
xchg
jecxz
mov
ret
movsl
cmpsl
push
roll
pop
mov
or
add
mov
dec
paddd
shll
xchg
mov
push
test
loopne
call
jp
or
movsl
sbb
pop
lret
mov
and
out
out
orl
xor
cld
lcall
push
add
xchg
stos
lahf
nop
test
or
daa
jno
sbb
fsubr
push
sub
sbb
mov
andl
inc
stos
das
outsb
adc
ja
test
out
mov
sbb
sbb
clc
incl
ljmp
test
pop
mov
int3
les
testl
fbld
jge
popf
out
adc
pop
int3
popa
loope
sti
cmpsb
inc
dec
call
and
pushf
idivb
mov
lret
xchg
xchg
lock
inc
add
dec
out
rorl
add
stos
loope
imul
addl
outsl
inc
out
fistps
popa
popa
cli
movsl
insb
test
sahf
jg
inc
xor
jecxz
fsubl
push
flds
pop
out
or
xchg
cld
stc
push
mov
cs
cs
fdivl
dec
rorl
add
push
and
mov
jg
jp
push
adc
mov
push
xchg
or
inc
mov
out
in
fidivl
mov
scas
outsb
mov
leave
icebp
lret
jg
adc
imul
in
mov
mov
insl
ljmp
inc
mov
faddl
insb
dec
push
mov
or
dec
sub
rclb
mov
sarb
cltd
pop
int
jmp
xor
mov
out
or
outsb
ret
sub
mov
sti
mov
gs
push
out
fidivrs
mov
mov
mov
fidivl
mov
or
inc
call
nop
out
mov
mov
pop
shrl
paddusw
cmp
insb
nop
pop
or
mov
out
lds
lds
rep
push
fwait
lock
push
push
data16
pop
cmp
flds
sbb
xchg
jnp
xor
pop
sbb
dec
mov
int
dec
push
mov
mov
push
cmp
iret
xchg
cmpl
cs
int
jnp
jb
int3
jae
into
rolb
mov
cmc
jge
into
push
mov
add
mov
test
cmp
stos
push
pop
jno
xchg
inc
aad
sbb
xor
push
bound
xor
loopne
and
popf
stos
in
xchg
push
int3
das
rorl
out
xchg
imul
in
cli
inc
push
push
sbb
cmc
sahf
mov
pop
std
sbb
bound
push
pop
mov
xlat
rolb
shrd
add
pop
js
inc
outsb
popf
aad
pop
call
pop
pop
fldenv
in
or
add
adc
sub
aad
out
aad
out
xor
movb
adc
add
push
out
push
dec
xlat
inc
in
mov
into
stos
stos
mov
adc
daa
cmp
push
push
xchg
decb
stos
add
inc
movsl
inc
loopne
ljmp
dec
mov
push
push
mov
sbb
lcall
sub
adc
xchg
jno
daa
in
pop
mov
fisubs
xchg
test
or
in
pop
push
pushf
stos
std
dec
cmpsb
lds
lock
pushf
push
mov
jp
sub
push
out
mov
cmpl
lret
jl
sbb
jb
or
mov
leave
lret
push
out
sbb
loop
repz
add
add
fmuls
push
mov
sub
mov
xor
xchg
jecxz
aas
decl
mov
add
xchg
xchg
dec
scas
repz
data16
adc
leave
int
mov
jecxz
mov
inc
mov
ficoms
inc
jno
adc
les
and
xor
jbe
cs
divb
pop
sbb
outsl
or
rcr
cmc
lock
jmp
popa
jo
pop
adc
mov
mov
fldl
cwtl
imul
mov
push
fistpll
sub
add
repz
xchg
xor
push
mov
ja
xor
mov
aaa
cmp
jnp
out
mov
adcl
leave
and
mov
insl
adc
inc
jae
pop
mov
and
cmpsl
add
cmp
inc
xchg
cwtl
popf
jp
sbb
sub
fnstcw
subl
add
lahf
sbb
jns
adc
jecxz
outsl
popl
pusha
es
les
cwtl
sbb
jne
movsl
add
xchg
pop
push
iret
je
shll
sbb
mov
ss
popa
inc
jp
sbb
insl
fs
dec
sahf
das
sub
shl
adc
adc
rcrb
call
fsubrl
ja
pushf
mov
mov
clc
mov
jbe
jb
fdivp
dec
jmp
inc
sub
sub
pop
lds
stos
xchg
inc
dec
jg
pop
into
cwtl
and
xchg
dec
es
or
lods
mov
xchg
lcall
fmuls
jne
cmp
push
adc
mov
and
xchg
fstps
bnd
cmp
pushf
inc
in
push
frstor
js
xor
and
hlt
fdivp
dec
pop
push
xor
repz
push
mov
xchg
and
xorl
xor
cs
mov
enter
sub
mov
ret
adc
xor
sahf
add
inc
pop
dec
frstor
mov
or
or
and
scas
add
xlat
add
push
jmp
xor
arpl
cmp
sbb
dec
sub
outsl
mov
mov
nop
call
xor
sub
imul
in
repnz
xlat
lods
jecxz
inc
inc
mov
inc
rcrl
jbe
xor
mov
mov
or
mov
es
mov
pop
fwait
mov
mov
lcall
das
decb
outsl
insb
aad
punpckhwd
jb
lahf
popa
mov
aam
cwtl
sub
aad
inc
popa
pop
mov
mov
jge
inc
iret
enter
or
inc
sub
inc
push
sbb
xchg
and
or
cwtl
cmpsb
mov
cmp
ljmp
test
jge
jno
sahf
and
stc
and
test
punpckhdq
lods
cmp
daa
fimuls
enter
cmp
cmp
js
mov
rorb
push
dec
mov
mov
fwait
sbb
mov
addl
sub
into
or
repnz
dec
cmp
jns
xchg
out
push
mov
push
mov
push
add
decb
jp
in
loopne
xchg
jo
out
sub
inc
mov
lock
adc
repz
push
jne
and
cmp
mov
push
nop
inc
dec
ja
add
xchg
test
decl
arpl
pop
sbb
imul
cli
mov
mov
fldenv
ljmp
scas
sub
mov
test
insb
pushf
pop
mov
pop
push
lret
push
clc
es
jg
pop
fld
repz
rorb
sbb
loope
mov
dec
out
or
dec
push
cld
dec
inc
aaa
lret
mov
fisttpll
popa
std
xchg
imul
pusha
push
dec
sbb
ret
mov
cmp
std
mov
pop
je
into
inc
cmp
push
das
xor
sub
xchg
iret
jns
mov
mov
add
sarl
test
call
jge
mov
jecxz
jns
leave
jnp
arpl
mov
andb
lret
in
es
int
push
add
sbb
push
mov
ss
movsl
xor
jne
insb
xor
dec
add
inc
in
and
mov
adcl
loopne
test
fildll
icebp
aad
fmul
shll
insl
sbb
ja
jbe
imul
mov
loop
mov
call
inc
into
pop
mov
adc
lods
daa
inc
stos
xor
add
push
and
mov
push
or
jle
sti
xchg
xchg
repz
push
cld
enter
addr16
ja
sahf
dec
bound
xchg
push
cwtl
aad
fdivrl
pushf
jno
out
add
imul
cmc
add
movsb
jge
or
or
inc
loope
je
cmp
popa
sti
or
push
mov
sub
adc
push
shl
jb
adc
push
jno
adc
adc
mov
xchg
cmp
cld
clc
pop
fdivrl
xchg
mov
lods
xor
movsbl
and
fisttps
dec
test
out
sbb
jnp
adcb
mov
fidivl
xchg
mov
orl
faddl
sbb
les
cmp
mov
inc
je
mov
mov
jo
push
xor
dec
or
xor
lods
jmp
sbb
ret
ficomps
and
adc
mov
or
adc
hlt
xor
xchg
xor
lcall
das
xchg
sbb
mov
or
out
das
loop
sbb
sub
js
lcall
jns
push
inc
pusha
push
jb
aam
faddl
xor
fdivr
xchg
fwait
inc
pop
jns
call
sbb
nop
adc
xchg
sub
rcr
jecxz
ret
xchg
inc
aaa
fstpl
or
data16
xor
mov
xor
mov
fsubrs
shlb
cmpsb
sub
jo
xor
outsb
jg
dec
push
lahf
loope
and
test
add
cs
mov
xor
out
je
loope
js
jo
popa
mov
decb
in
push
lahf
movsb
lods
icebp
mov
sbb
sbb
dec
jae
add
movzwl
fwait
pop
ficomps
out
mov
decl
imul
sub
pop
test
or
add
loope
jg
jno
mov
js
mov
bound
add
inc
pop
mov
dec
ficomps
shl
xchg
jle
jne
ficoms
mov
lods
inc
lahf
xchg
test
pushf
int3
aas
mov
cmp
jnp
xchg
adc
loope
hlt
lds
xchg
lret
jecxz
cltd
dec
cmp
inc
push
gs
dec
adc
shrb
xchg
push
dec
int3
dec
pushf
stc
push
xor
sbb
arpl
pop
pop
inc
addb
bound
xlat
leave
xor
cs
test
out
mov
mov
in
add
outsb
dec
mov
pop
sbb
jle
and
shll
cmpsb
cmpsl
cltd
repnz
mov
mov
xchg
dec
dec
inc
cmpsb
inc
jns
sub
mov
scas
roll
addr16
xchg
ljmp
push
into
push
or
js
cmp
xor
lock
cli
popf
mov
mov
ds
popa
mov
int3
jae
mov
pop
das
iret
imul
inc
mov
cmp
cmp
pop
cmp
aam
daa
into
adc
mov
icebp
dec
cld
mov
jmp
shll
test
jle
lods
js
out
cmp
lahf
push
lods
daa
lds
inc
fnsave
fdivl
aad
push
dec
out
mov
dec
aas
sub
lret
clc
loopne
and
shr
sti
inc
inc
sub
fmul
and
movsb
dec
sbb
decl
and
pusha
mov
aad
ret
mov
pop
movsl
pushf
jmp
xor
lods
ret
out
mov
icebp
imul
adc
stc
daa
rol
mov
ds
and
std
mov
mov
rclb
aaa
jns
insb
jae
dec
mov
sbb
loopne
push
or
dec
fwait
divb
cmc
cmp
movsl
hlt
fsubl
faddp
mov
aad
add
xchg
mov
jecxz
lahf
sub
xor
mov
inc
sbb
mov
sub
mov
mov
pop
fildll
and
dec
pop
adc
sbb
pop
sbb
mov
inc
stos
mov
scas
jl
aam
pop
inc
loop
shrb
sub
aad
dec
fbstp
fxam
cltd
pop
dec
xchg
xor
mov
int
inc
sub
sub
ljmp
xlat
push
das
rcrb
xchg
adc
inc
pop
add
fiadds
outsl
fmulp
jle
inc
nop
dec
sub
out
loope
ret
fwait
jge
mov
enter
dec
daa
add
jecxz
jmp
out
ja
data16
nop
inc
es
jecxz
sub
push
push
decl
jp
inc
dec
lea
rclb
pop
jae
shl
nop
or
fsubrp
scas
mov
fistl
or
pop
pop
jb
insb
fwait
fwait
in
loopne
push
xchg
fwait
mov
pushl
ret
mov
or
sbb
jle
push
cmp
mull
les
sbb
test
jg
pop
pop
cmp
sahf
inc
xor
or
sbb
lret
jo,pn
popa
out
repnz
pop
addl
jp
andb
sub
test
rorl
jno
xor
or
xchg
popf
cmp
xchg
pop
in
outsl
mov
or
sti
adc
fisttps
repz
push
push
je
int
test
inc
xor
int
dec
push
addl
jo
mov
std
ljmp
inc
mov
rorl
pop
jge
mov
mov
cmp
and
inc
rclb
stos
mov
inc
push
dec
cmp
xorb
gs
push
das
out
xor
pop
jns
jmp
cltd
jb
sbbl
frstor
lods
ljmp
inc
ja
mov
rolb
mov
imul
xor
jns
inc
mov
ret
out
lea
in
cmp
mov
push
popa
jbe
lock
jae
pop
lahf
xchg
shlb
fs
arpl
stc
add
or
cmp
fnstsw
push
int
and
popa
mov
pop
push
out
push
out
sub
mov
lret
inc
mov
adc
jbe
pop
sbb
orb
test
lea
repz
xchg
loopne
mov
ds
xor
stos
stos
fidivl
pop
sbb
mov
in
mov
jmp
icebp
cmp
fsubr
pop
ljmp
sbb
ficomps
or
or
ss
pusha
xor
lods
jle
jg
movsb
adc
cmp
and
sarl
pop
rorl
ds
jmp
mov
shrl
xor
pop
daa
mov
pop
outsb
adc
leave
inc
fisubl
and
out
add
int
fmull
ds
test
clc
pop
ffreep
pop
mov
incb
enter
in
aas
sbb
fbstp
mov
mov
or
jns
out
xchg
adc
adc
test
and
fisttpl
fsubrs
jmp
adc
inc
push
jmp
sub
xchg
add
xchg
dec
inc
sbb
adc
mov
pop
cwtl
adc
pop
push
xor
jecxz
mov
test
mov
imul
imul
mov
sahf
aam
lds
ficompl
inc
sarb
sub
xchg
ja
stos
pop
xor
xorb
xor
gs
and
pop
loopne
add
mov
jno
rclb
push
shl
or
test
mov
nop
enter
in
punpckhdq
je
out
pop
fucomi
adc
lahf
add
lret
xchg
imul
fwait
movsb
pop
jg
aas
or
xchg
aam
gs
dec
mov
jge
sbb
test
addr16
inc
loope
push
into
mov
mov
leave
addb
xchg
jae
jmp
shl
lods
push
repz
rcrl
jmp
push
xor
lods
jp
push
adcl
cwtl
and
mov
lods
insb
xchg
jg
xchg
xor
xorl
ret
test
bound
sarl
cmc
arpl
pushf
pop
adc
in
lret
dec
pop
xor
cmpl
add
ret
push
repz
xchg
scas
sbb
pop
sub
add
iret
lods
pop
sub
lret
add
push
sbbl
sub
xlat
push
movsl
into
ret
cmp
sbb
jmp
sbb
lcall
ss
jns
xor
or
out
cmp
test
push
and
shlb
inc
rcrb
mov
inc
pop
add
dec
mov
mov
fcoml
lods
enter
jnp
mov
cltd
mov
add
sbb
xor
fwait
and
dec
dec
mov
pop
popf
repnz
sbb
in
dec
jae
sbb
sarb
subb
ret
or
mov
movsb
mov
and
into
inc
enter
xchg
add
pop
sbb
dec
pushf
push
jns
xchg
xchg
dec
sub
aaa
out
mov
push
stos
mov
movsb
mov
inc
jo
cmp
pusha
adc
out
mov
mov
xchg
fists
and
pop
push
push
xor
mov
jge
xor
jge
loop
popa
mov
lcall
inc
adc
fisubl
loopne
and
stos
lods
xorl
xchg
xor
pop
jmp
mov
rclb
loop
loopne
scas
sahf
inc
arpl
daa
sti
into
enter
mov
mov
jge
jg
push
dec
mov
pop
dec
inc
stos
popf
fistps
pusha
add
inc
jmp
or
loop
ficoml
sub
andb
sub
fucomp
add
jae
mov
adc
adc
xchg
jge
jae
sub
mov
jno
sarb
shlb
jge
repnz
icebp
outsb
shl
rcll
mov
cmp
add
dec
dec
cld
and
movsb
sbb
je
and
rclb
push
xchg
lcall
sbb
jg
dec
bound
bsr
pop
sbb
in
adc
dec
dec
push
jge
pop
push
pop
xorb
std
jne
cmp
lret
js
pop
popf
mov
scas
ljmp
mov
push
pusha
cld
and
lods
mov
mov
popa
inc
mov
sub
sti
lcall
fsts
out
jg
ljmp
call
aad
xor
rcrl
cmp
xor
shll
sub
rcrl
popa
ljmp
cmp
nop
scas
mov
jl
jo
aaa
push
mov
fldcw
aaa
xchg
cld
lcall
mov
xor
test
cmp
push
mov
xor
std
scas
out
sbb
xchg
dec
jo
mov
push
inc
bound
ljmp
jne
enter
sub
push
mov
xor
scas
push
adc
pop
lahf
mov
and
fdivr
mov
mov
jecxz
dec
push
adc
arpl
in
mov
adc
rorb
setp
jb
sbb
mov
dec
in
pop
cmpsb
sbb
mov
aaa
out
adc
sarb
mov
in
add
adc
testl
cmp
ss
fs
adcb
mov
lods
and
lret
xchg
popa
inc
pop
repnz
pop
sbb
jg
outsl
push
push
add
adc
sbb
jne
push
and
lods
repz
cmpsl
xchg
sbb
pop
and
dec
fcoml
ret
stos
in
sti
push
popf
fistpl
cmp
jae
and
rorl
loopne
adc
lret
mov
vpshufhw
and
aam
jg
inc
jno
in
and
out
lods
shll
sbb
data16
sbb
xlat
dec
clc
xchg
pop
fwait
mov
stos
fnstcw
push
sub
mov
pop
imul
rcrl
xor
enter
lods
fsin
sbb
xchg
jmp
pop
mov
out
lods
dec
xchg
mov
out
outsl
imul
pop
sti
xchg
test
dec
lahf
jne
orb
rol
lea
fbstp
leave
pop
data16
mov
insb
dec
bt
push
push
repz
push
into
popf
daa
nop
pushf
and
gs
pop
stos
outsl
pushf
mov
ja
inc
add
stc
jl
mov
popa
bound
arpl
popf
clc
mov
outsb
lret
dec
test
sbb
or
loopne
loope
jnp
rclb
test
sub
outsb
inc
adc
insb
add
loopne
stc
xor
outsl
push
sub
andb
jle
es
dec
add
test
pop
xchg
dec
popf
pop
cs
cmp
mov
mov
mov
jne
sti
into
imul
xchg
jmp
push
mov
or
jb
mov
mov
xor
into
loope
fidivrl
dec
pop
hlt
inc
scas
push
les
xor
pop
filds
push
stos
mov
pop
repnz
pop
jp
clc
and
into
xor
push
call
sbb
push
jl
xchg
add
dec
add
mov
mov
mov
cmp
rorb
mov
mov
scas
pop
mov
or
cli
add
xchg
xchg
mov
and
mov
lods
mov
xor
or
jns
into
lea
jl
jo
jg
jl
scas
insb
adc
ret
cltd
dec
dec
lods
fistpl
pusha
imul
cli
jne
push
imul
push
inc
push
icebp
sub
call
push
lahf
frstor
addr16
test
stc
nop
test
sbb
clc
aad
mov
arpl
daa
push
addr16
adc
or
mov
jg
stos
add
outsb
and
mov
jmp
dec
add
cmpsl
sub
jle
in
imul
jecxz
stos
ret
pop
xlat
clc
jb
rcrb
sbb
loop
rorl
inc
insb
jnp
dec
mov
push
mul
les
cs
push
mov
mov
sub
icebp
adc
mov
stc
hlt
mov
inc
test
cmp
push
dec
sbb
ret
ret
in
es
push
lahf
outsb
loope
out
movsb
adc
outsb
inc
shll
xchg
aam
mov
imul
mov
inc
cmp
xchg
jbe
scas
popf
mov
ss
push
push
or
insb
mov
mov
xchg
fwait
aas
push
mov
xchg
mov
aad
in
or
push
jmp
sub
xchg
nop
xchg
push
push
stos
push
cs
out
dec
fsts
stos
enter
fadd
rcrb
adc
pop
sahf
cmp
cmc
add
leave
clc
andl
push
fs
sub
int
push
xchg
je
dec
loope
cmp
mov
sub
enter
mov
lahf
sub
hlt
lcall
push
push
mov
incb
add
pop
xchg
sub
cmp
jbe
decb
mov
mul
sbb
fsubl
mov
jle
fwait
stos
mov
cmp
hlt
push
push
dec
aad
jp
pop
daa
add
shl
lret
adcb
push
adc
test
fiaddl
scas
je
scas
push
xor
test
push
jl
shl
in
sbb
adc
inc
jae
jne
test
lcall
and
mov
and
and
cwtl
lods
add
jae
in
mov
test
lods
dec
mov
mov
js
mov
insl
pusha
xchg
insb
dec
lahf
push
mov
inc
in
ficoms
mov
jo
adc
addr16
icebp
and
add
fnstenv
aas
das
jle
ret
pushf
sbb
daa
add
ret
or
push
sbb
adc
adc
inc
lret
sahf
fnstenv
aaa
cmp
shll
cmp
int3
inc
or
nop
jl
pop
xchg
in
sub
mov
sub
in
repnz
lahf
int
movsl
mov
mov
ljmp
daa
inc
inc
leave
mov
mov
mov
jae
aaa
or
pop
or
mov
xchg
add
sbb
mov
loope
push
je
pop
sub
aaa
movsb
testl
cmp
xchg
jmp
or
test
ljmp
aas
adc
dec
mov
das
add
xchg
push
inc
lcall
and
mov
sbb
andl
mov
add
cwtl
mov
push
adc
popa
lahf
shl
jecxz
xchg
mov
sbbb
xorb
outsb
xor
adc
ret
nop
inc
lods
add
inc
mov
inc
fcom
or
lea
daa
sbb
cmp
mov
std
xor
lahf
in
mov
pop
jle
imul
pop
adc
and
and
add
adc
mov
push
add
inc
cmc
mov
cmp
push
mov
in
push
mov
xchg
pavgw
loop
lock
leave
nopl
xchg
adc
ret
movsl
pop
pop
fadds
lahf
push
adc
mov
push
jb
out
xor
push
sub
imul
test
inc
and
mov
lds
xor
outsl
in
bound
out
xchg
inc
jb
data16
js
dec
add
or
sti
push
and
aam
inc
inc
test
ret
sahf
loopne
inc
mov
pop
cwtl
cmpsl
push
leave
mov
sub
dec
jmp
push
xor
mov
pop
fdivrs
mov
mov
add
shr
mov
or
and
push
leave
or
test
in
sub
fwait
cli
in
jmp
subb
fcmove
mov
fisubrl
xchg
adc
xchg
loopne
ret
xor
dec
xchg
inc
xor
cltd
mov
pusha
out
iret
inc
sti
inc
out
daa
push
gs
bts
jp
xchg
iret
adc
stos
getsec
mov
inc
das
cmp
pop
subb
push
push
cli
fsubr
xchg
dec
ficoml
sbb
les
cwtl
xchg
shl
aas
insl
mov
mov
xchg
jbe
pop
mov
adc
lret
popa
xchg
movsl
lret
jne
out
inc
xor
add
call
xchg
xchg
hlt
call
test
push
aas
or
fldl
loop
mov
int
in
movsl
push
cwtl
or
ljmp
or
jbe
fdivrl
fistpll
push
insl
addr16
cmp
pop
scas
pop
test
jne
fldcw
cmpsb
hlt
push
cld
mov
gs
scas
lock
pop
cmp
add
imul
sahf
or
xor
pushl
and
out
iret
imul
xor
ret
in
pop
jecxz
addr16
xor
das
and
jne
ja
js
mov
dec
loopne
enter
cmpsl
rorb
cmp
push
sbb
ret
dec
arpl
pop
cli
mov
add
jecxz
enter
in
in
and
lds
jbe
out
pop
xchg
jp
rcrl
cmpb
insb
pop
pushf
int3
sti
dec
or
lea
mov
imul
repz
add
jb
adc
shll
daa
ds
outsl
push
dec
inc
aad
in
dec
outsb
push
jae
xor
cmp
dec
data16
xor
aas
jl
mov
xlat
movsl
cmp
xchg
loopne
or
pop
es
les
adc
loope
push
xchg
bnd
sbb
out
cmp
mov
pop
add
pop
adc
leave
notl
add
mov
cmp
pop
andb
dec
push
out
jecxz
mov
lcall
out
sbb
imul
push
hlt
shlb
test
scas
mov
push
inc
test
push
dec
xor
iret
push
lds
jmp
aaa
add
mov
test
fidivrs
mov
sbb
dec
push
jge
pop
lock
in
imul
adc
sbb
ss
pop
dec
lahf
fs
test
pop
add
add
outsl
push
mov
fidivs
inc
sub
xchg
mov
mov
test
aaa
out
pop
clc
arpl
pop
sbb
add
sbb
mov
cmp
shrb
sti
mov
lods
mov
mov
sbb
dec
dec
out
lret
out
imul
movl
scas
js
jl
notb
cmc
sub
out
push
leave
lock
push
mov
ret
jl
std
mov
add
cli
fwait
cli
fs
minps
adc
jg
pop
xor
xchg
pop
sbb
sub
in
mov
add
jnp
adc
jp
inc
stos
leave
adc
mov
jnp
addr16
sub
jo
hlt
loop
adcb
xchg
push
xor
push
jbe
outsb
sub
dec
mov
popa
sbb
movsb
mov
pushf
jbe
sbb
shll
adc
cwtl
icebp
das
negl
and
and
pop
xor
adc
shr
jo
pop
push
pop
jg
push
mov
xchg
fsubrl
dec
into
sub
out
fisttpll
push
aas
push
fwait
into
dec
rorl
pusha
mov
jg
jle
and
mov
xchg
fwait
mov
jne
add
jg
mov
int3
sub
mov
mov
insl
vcomiss
in
mov
movsl
cwtl
ljmp
sahf
je
push
pop
sarb
sahf
addl
je
std
sbb
jmp
shlb
rolb
inc
jno
orb
inc
fimuls
test
mov
in
sbb
rorl
lock
loope
int
cli
mov
xlat
lock
rclb
es
loop
je
cmp
cs
mov
sub
sbb
leave
ss
bndldx
fwait
int3
push
mov
jns
xchg
jnp
jnp
sbb
push
sbb
cmp
cld
cmpsb
mov
mov
iret
ret
shld
outsl
jbe
ret
add
les
xchg
aad
cmp
sbb
jge
in
mov
sbb
lock
mov
call
cmp
add
pop
bswap
jne
out
loope
ja
insb
push
pusha
dec
call
adc
mov
in
pushf
adc
icebp
mov
out
push
test
in
sbb
inc
dec
mov
jecxz
data16
int3
int3
xchg
out
ljmp
jmp
out
bound
adc
fidivrs
mov
inc
iret
imul
xchg
call
lcall
sbb
jmp
andb
je
ret
inc
std
xchg
cmp
sub
repz
loop
push
xor
ret
notb
sub
add
fsts
push
pop
or
jmp
xchg
out
stc
aaa
add
push
repnz
mov
mov
jmp
adc
scas
pop
dec
adc
xchg
enter
insl
lods
mov
test
jo
ret
push
or
jbe
fistps
xor
sbb
fistl
or
or
enter
jo
or
mov
mov
mov
push
in
mov
pusha
sbb
ret
add
xchg
sti
rolb
mov
ret
or
call
pop
push
lret
pop
jbe
bound
jecxz
adc
popa
xor
lret
mov
lods
incb
dec
lds
das
adc
sti
lds
lahf
bound
mov
pop
mov
test
jl
outsb
inc
idiv
ljmp
testb
and
mov
popf
insb
adc
scas
movsb
push
xchg
cltd
sbb
cmp
je
dec
test
sub
mov
inc
stos
adc
mov
rcl
mov
add
out
stos
je
addl
repz
dec
adc
mov
addr16
mov
cmpsb
mov
out
sahf
push
xor
add
gs
inc
xor
decl
ds
test
jo
mov
sbb
in
jecxz
or
cli
dec
lcall
cmc
scas
and
out
mov
clc
movsl
jmp
sarb
shlb
sub
inc
mov
sub
inc
in
jl
cs
mov
add
inc
inc
into
cwtl
dec
push
xchg
mov
push
jecxz
cmc
stos
jbe
imul
fwait
mov
loopne
adc
addr16
inc
cmp
push
or
dec
and
fcoml
in
cli
test
loop
cmp
mov
js
lods
xchg
out
cmc
in
pop
mov
mov
xor
test
adc
into
add
sub
test
fdivl
test
or
rcll
dec
xchg
lret
mov
or
or
test
rol
add
pop
xlat
sbb
subb
int
aad
dec
pop
mov
jnp
int
stc
and
lea
outsl
mov
or
dec
lret
pop
jg
scas
shrl
leave
push
dec
and
adc
or
xchg
fmulp
ret
or
test
dec
scas
loop
ds
mov
mov
mov
ficoms
dec
sbb
push
ljmp
add
rcl
mov
inc
das
clc
sbb
inc
mov
pop
push
insl
and
hlt
xchg
into
push
fnstsw
sub
or
les
cld
fstpl
inc
fs
jmp
mov
sbb
xlat
xchg
sbb
jmp
cs
xor
outsb
jno
add
insl
xor
adc
stos
fcomi
push
rolb
hlt
push
xchg
mov
negb
ret
insb
sub
dec
je
movsl
test
insl
insl
mov
pusha
mov
test
ja
sub
inc
mov
lds
jg
sbb
push
jo
dec
decb
sub
nop
pop
mov
notb
dec
dec
ljmp
xor
fs
sbb
ljmp
lea
mov
dec
jecxz
push
mov
push
sub
or
hlt
adc
fistl
sbb
push
and
add
ljmp
mov
inc
out
adc
mov
pusha
jg
lea
mov
jmp
push
rorl
jp
push
rclb
movsl
test
mov
shlb
xchg
xor
inc
and
loopne
imul
imul
cmp
cmp
cmp
shll
cltd
stos
mov
outsl
pop
xchg
cmp
rclb
xchg
std
outsl
xchg
call
dec
and
xor
push
cmp
lds
xor
lcall
mov
cwtl
pop
lahf
dec
movsl
pop
pop
jb
in
jo
add
mov
pop
cmpsb
pushf
lods
adc
or
or
dec
fwait
in
xchg
movsl
rclb
push
xlat
bound
fildll
jecxz
dec
and
mov
xor
ja
dec
loope
jns
mov
bound
stos
je
fwait
sbb
mov
andb
push
mov
and
shll
pop
lea
fdivl
cmp
mov
int
cmc
incb
push
mov
xchg
xor
jns
repnz
mov
or
push
in
sbb
mov
push
mov
std
push
pop
scas
testb
lods
push
popf
mov
push
cmp
ljmp
jnp
insb
testl
push
aas
mov
sub
add
push
and
cmp
dec
lret
sub
dec
mov
jns
jp
ret
add
jmp
idivl
xlat
fcmovb
data16
pop
scas
into
xor
jne
es
xor
dec
xchg
in
das
stc
xchg
jle
addr16
sbb
rcll
xlat
pop
out
jae
daa
inc
aad
push
testb
push
jge
js
mov
inc
roll
push
orl
dec
out
mov
fcmovb
pop
lahf
adcl
xor
ret
push
ret
orl
add
mov
movl
ljmp
int3
push
inc
sub
sub
iret
aas
clc
dec
stos
fwait
mov
mov
push
ret
in
jl
add
aaa
movsb
or
add
aas
stc
pop
leave
add
jle
inc
orb
call
push
mov
lods
arpl
add
xorb
xchg
jb
outsb
dec
outsl
xor
call
pop
aam
inc
ja
jae
xchg
mov
cmc
mov
das
aaa
pushf
mov
xchg
pop
mov
call
sub
mov
jno
inc
jno
pop
mov
push
xchg
out
clc
mov
nop
pop
sti
mov
je
sub
pop
xchg
fistl
in
addb
fcoms
push
ja
adc
add
aad
pop
jmp
mov
gs
inc
fwait
fwait
xor
int3
fcoms
pop
add
jne
or
push
cmp
xor
lods
and
repz
mov
add
jle
and
push
mov
xor
and
jno
push
lock
das
cmp
fcmovu
sar
mov
lcall
or
cld
cwtl
stc
xor
mov
mov
adc
jle
enter
loopne
inc
es
or
inc
mov
mov
adc
dec
jo
mov
ljmp
mov
mov
sbbb
xchg
xor
mov
push
inc
stos
mov
movsb
lahf
cltd
lods
incl
mov
shr
in
lods
outsb
fwait
daa
sarl
push
bound
mov
out
or
in
xchg
imul
sub
mov
fimull
dec
int3
inc
aaa
cmp
ds
cld
in
jmp
sbb
fidivrs
jecxz
int
push
cmp
mov
mov
lds
inc
ret
cld
pmaddwd
fbstp
add
and
punpckhbw
inc
lret
jl
movsb
ror
sub
mov
daa
push
insb
xlat
xchg
mov
mov
cmp
sti
sbb
fcomps
add
sbb
outsb
lahf
call
fadds
mov
repnz
jo
gs
push
aas
mov
stos
xlat
cwtl
aas
iret
push
xchg
jns
cwtl
lock
andb
repz
push
gs
sahf
xchg
mov
adc
mov
add
packuswb
xchg
mov
stos
int
lret
sbb
cld
sub
push
scas
and
jne
hlt
push
xor
cmp
cli
push
jge
orb
sbbb
mov
popa
rcrb
rdpmc
fistl
mov
std
cmp
add
out
xchg
subl
fbld
mov
mov
stos
sbb
std
call
sbb
mov
ljmp
inc
arpl
cmpsb
push
fwait
and
mov
dec
push
mov
dec
mov
dec
xchg
jp
push
stc
sub
test
adc
repnz
push
jns
jnp
mov
ljmp
or
arpl
fmull
stc
xchg
pop
aad
sbbb
int
into
movsl
popa
out
cmpsb
daa
sbb
pop
les
lock
aam
test
dec
rorl
jecxz
imul
imul
xchg
popa
mov
sub
pop
pop
push
dec
mov
je
sbb
dec
fsubr
pop
scas
and
test
lahf
push
jmp
pop
inc
xchg
xchg
pop
sub
in
dec
call
bound
std
or
mov
cmp
inc
arpl
fwait
ja
bound
fs
jmp
add
push
jecxz
call
sar
push
aad
outsb
aad
jmp
xor
and
sbb
data16
pop
xorl
add
mov
dec
ja
ljmp
in
cmpsb
rcll
push
cmp
fwait
andb
adc
lret
test
imul
test
cmpsl
xchg
aam
clc
pop
xchg
dec
les
lds
lret
mov
mov
aas
negb
enter
arpl
pop
cli
icebp
sbb
int3
pusha
sbb
std
inc
lds
jp
das
lea
loop
addr16
xchg
add
pop
inc
xchg
add
fistl
lret
or
cmp
mov
test
out
into
inc
leave
inc
jae
mov
push
outsb
hlt
jg
and
or
and
adc
push
mov
test
xchg
cmp
aam
bound
or
xlat
jge
push
sub
jnp
subb
lahf
jae
cli
or
insb
and
mov
push
incb
jp
ds
popa
cmp
or
xor
sar
fnstenv
popa
and
jge
negb
xchg
xchg
es
int3
and
mov
cmp
jnp
leave
jns
ret
fisubrl
dec
aad
push
pop
arpl
stos
jge
mov
syscall
dec
dec
cmp
xchg
test
inc
xchg
jne
jg
jge,pn
sarl
mov
xchg
xchg
add
mov
lea
rcl
push
test
mov
xchg
push
mov
mov
into
arpl
or
movsl
out
dec
cmp
andl
push
dec
cwtl
mov
sti
cli
gs
lds
mov
mov
mov
loopne
or
and
add
stos
aad
xor
pop
stos
cmp
xor
lret
jbe
fs
xchg
push
inc
incb
mov
mov
xor
jg
lods
adc
pop
or
and
add
scas
sbb
mov
aam
add
pop
and
sbb
aad
mov
int3
imul
add
jae
pusha
cmp
jo
or
cmc
lret
lods
add
aam
loopne
imul
jge
insb
mov
lahf
les
cmp
fildll
pushl
pusha
dec
adc
adc
pop
mov
lret
repz
push
inc
pusha
rorl
dec
and
arpl
es
cmpsb
push
sub
push
push
mov
int
stos
pop
dec
sbb
xchg
rcrl
mov
es
push
cmp
mov
icebp
lds
mov
aad
aas
pop
mov
jecxz
cmpsb
lahf
ret
test
icebp
dec
mov
sarl
cmpsb
sbb
adcb
xchg
cmp
sbb
sub
pushf
fists
fidivs
in
jle
xchg
das
xor
clc
dec
sub
add
lock
and
or
pusha
push
out
cmp
iret
mov
xchg
xor
xlat
xchg
push
xchg
inc
fcompl
loopne
std
icebp
imul
inc
lret
scas
adc
mov
add
into
xor
imul
mov
loop
push
pop
cmpsb
bound
insl
sahf
icebp
stos
fimuls
fistpl
add
movsl
test
aaa
mov
cmpsl
push
jno
push
popf
imul
mov
popl
and
mov
addb
push
inc
out
xor
or
cmp
lea
bound
mov
sub
popa
out
jne
in
cwtl
test
jns
inc
adc
loope
push
sbb
jae
mov
daa
test
mov
fstl
sub
jbe
pushf
test
mov
inc
lea
mov
aas
cmp
shll
roll
shrb
inc
movsb
into
add
dec
xor
stos
in
xchg
in
jmp
dec
cmp
stc
pop
cmc
and
cli
inc
sahf
cmp
sbb
push
mov
cmp
push
ja
fcomp
mov
das
mov
xchg
or
jg
call
hlt
loop
loopne
lods
mov
cmp
sahf
insb
lea
add
adcl
hlt
bound
inc
int3
leave
inc
ds
imul
out
repnz
and
pushf
pop
les
sub
movsb
fwait
push
mov
outsb
gs
mov
enter
dec
add
or
insl
lods
xor
mov
mov
pop
pop
sub
ss
pop
fs
mov
fsubrs
nop
stos
xchg
dec
fsubs
aam
push
adc
mov
xor
jge
mov
xor
fdivl
add
and
js
pop
mov
cmp
and
jl
lret
inc
inc
lret
test
lahf
out
mov
jns
mov
sbb
pushf
mov
xchg
loopne
pop
push
pushf
pop
loopne
sti
adc
lcall
lds
in
lods
hlt
leave
das
dec
sarb
mov
xchg
or
jmp
jo
inc
lahf
jecxz
sbb
push
das
cwtl
jg
fchs
push
shlb
mov
js
or
fnstenv
das
inc
iret
stc
xchg
inc
xor
sub
in
ljmp
pop
fimull
sub
mov
aas
xchg
movsb
fwait
ss
mov
sahf
ljmp
or
pop
or
jg
movsb
push
mov
loop
mov
sub
jns
call
cmp
rorb
int3
or
push
test
cli
out
push
ja
lret
fmul
ljmp
out
out
mov
frstor
add
xchg
jp
scas
shr
mov
scas
dec
fdivrl
leave
pop
in
cli
jecxz
inc
lea
stos
lea
int
cmc
mov
lret
fdivrs
out
mov
xchg
dec
add
or
fstpl
pop
add
adc
out
sub
adc
rcr
push
pop
pop
inc
dec
xchg
mov
stos
into
out
xchg
je
adc
in
inc
adc
aad
rorl
movsb
lahf
sbb
popf
aaa
cmpsb
mov
test
sahf
movsl
lea
je
mov
gs
xor
data16
inc
push
sbb
jp
push
ud1
xor
fadds
add
push
pop
aas
pop
icebp
dec
pop
xchg
outsl
hlt
push
out
dec
fidivrl
out
add
jb
leave
rorl
rol
cmpsb
mov
pop
dec
adc
popa
sbb
mov
dec
cmpsb
sti
dec
mov
push
add
jno
jne
cltd
xchg
icebp
out
push
movsb
fbstp
aas
ret
xor
dec
mov
mov
jbe
movsb
jo
xchg
mov
inc
ljmp
push
stc
fildll
pop
enter
jmp
mov
imul
mov
mov
xchg
jno
aaa
jnp
mov
mov
out
dec
int
cmp
ret
out
sbb
sub
xor
xchg
lea
sbb
fldcw
jb
testl
inc
mov
cmp
push
sub
fimull
pusha
call
repz
mov
xchg
fimuls
loope
ds
mov
scas
repnz
pop
xor
arpl
data16
xor
fildll
lock
in
repz
aad
loopne
cmp
xlat
sbb
stos
push
xorl
pop
mov
imul
fistpl
add
sbb
outsb
xor
adc
xor
mov
adc
xor
mov
push
rolb
ljmp
inc
aam
pop
ret
movsb
stos
mov
shll
push
iret
sub
insb
lret
dec
pop
mov
mov
scas
pop
jb
xor
xchg
mov
cltd
test
stos
mov
rolb
xchg
mov
cmc
andb
push
cwtl
adc
aad
jle
ljmp
js
inc
and
std
je
movsl
jne
imul
stc
xchg
xchg
mov
and
push
pop
pcmpeqw
aaa
jbe
push
jmp
movsl
jne
mov
mov
ss
movb
cmp
sbb
mov
je
out
and
lret
add
shl
inc
addb
jbe
arpl
sbb
enter
out
add
cmp
or
pushf
jns
ret
loop
sbbl
mov
mov
jmp
mov
arpl
in
inc
xor
leave
push
orl
mov
outsl
and
shll
pushf
push
push
pop
fs
daa
mov
leave
jp
sbb
inc
flds
push
enter
mov
gs
xor
jmp
insl
popf
cmpsl
cmc
nop
mov
inc
xlat
or
jmp
mov
xor
dec
sbb
inc
lds
insb
jb
outsl
sahf
mov
sub
stos
pop
pop
movsl
sbb
mov
jecxz
jg
pop
mov
clc
cwtl
notl
es
int3
sub
imul
fwait
decb
sahf
cmpsb
hlt
scas
dec
pop
mov
jns
xlat
pop
add
or
push
dec
std
bound
stos
pushfw
pop
rcll
aad
xor
push
scas
mov
pop
daa
js
and
sti
pop
pop
add
add
loope
adc
les
pop
in
add
fcmovnbe
dec
icebp
outsb
and
scas
and
adc
jg
cmpsl
movsb
or
int3
in
sub
jo
inc
lds
rorb
mov
mov
movsb
movb
sub
cmp
pop
decl
jno
nop
inc
jbe
or
or
lahf
sub
sbbl
movsl
push
xor
cmpb
arpl
inc
int3
flds
aas
cmovne
mov
and
in
push
pop
or
lcall
and
jp
mov
orb
mov
jge
out
inc
sub
cmp
xchg
sbb
inc
aam
inc
inc
adc
mulb
mov
cmpsb
out
pop
push
xor
ret
into
mov
or
out
mov
jle
into
enter
push
jne
xchg
gs
arpl
push
sbb
or
stos
div
jae
insl
imulb
push
hlt
inc
xor
pop
enter
jo
dec
in
pushf
lods
mov
out
arpl
insb
sbb
dec
lea
outsb
out
mov
pop
and
and
inc
sbb
jg
in
jns
out
sub
scas
in
adc
sti
add
sub
leave
xchg
push
mov
lods
orb
mov
stc
sub
test
mov
jecxz
clc
popa
in
iret
mov
fsts
mov
arpl
mov
incb
imul
movsl
sub
mov
inc
add
jp
cmc
loope
lods
das
inc
leave
in
xor
pop
push
mov
mov
repnz
clc
enter
push
lret
jns
push
cwtl
fistpl
loopne
inc
xchg
pop
rcll
pop
mov
sti
cmp
fadds
stc
je
adcb
pop
loope
lcall
sub
dec
push
xchg
pop
xchg
cmpsb
xlat
pop
daa
idivb
add
call
pusha
cs
stos
dec
dec
push
or
test
in
xchg
xchg
or
outsl
pusha
push
fldt
cmp
je
aad
cmpsb
or
adc
jp
iret
in
mov
xchg
in
pusha
jecxz
jl
dec
stos
je
lods
aas
std
aam
pop
stos
out
push
stos
dec
adc
aas
mov
cmp
lods
xlat
push
mov
out
pop
shl
inc
xorb
sub
xchg
popf
push
adc
andb
iret
cs
divl
rorl
xor
jno
fwait
cmp
cltd
dec
je
dec
je
dec
clc
jae
lods
jbe
paddq
pushl
pushf
add
add
sbb
lds
in
or
and
sbb
shrl
mov
adc
movsb
and
cltd
mov
movsb
icebp
pop
push
cltd
mov
fildl
fdivs
jns
xchg
pop
iret
out
xor
ds
outsb
les
out
sbb
fstpt
call
jb
bound
outsb
daa
xor
jmp
push
mov
pop
push
frstor
inc
aaa
in
pop
test
mov
call
out
adc
push
inc
xchg
push
pop
mov
enter
ret
sbb
cltd
and
pop
das
or
out
dec
mov
rcrl
xor
jp
addr16
inc
cmpsl
sbb
insl
pop
lret
fcompl
lret
shlb
or
popl
sub
and
cmpsl
and
pop
add
rcll
insl
fdivl
jnp
cmp
lret
nop
fcmovnbe
push
mov
aaa
jbe
mov
outsb
pop
adc
and
scas
imul
bound
movsl
adc
ret
frstor
popa
lahf
dec
mov
and
adc
xchg
jb
jns
lret
loope
daa
scas
push
ficoml
popa
cmpsl
xchg
xor
mov
mov
mov
push
xor
add
call
sahf
rorb
divb
sub
loopne
or
pop
sti
popa
mov
jo
push
mov
cmp
leave
pop
jp
mov
add
shrb
or
ja
out
dec
cmp
ljmp
mov
scas
cmp
mov
add
imul
mov
cmp
add
cld
inc
dec
adc
sub
xor
jno
cmpsb
add
xchg
cmp
adc
mov
xor
fildl
lret
pop
pop
je
in
push
repz
mov
mov
mov
inc
xor
pop
pop
dec
andb
adc
in
lcall
scas
mov
push
sub
push
out
pusha
push
xor
or
mov
negb
adc
lcall
shr
mov
push
gs
and
cmp
or
int
dec
push
xchg
fisubl
aaa
mov
in
dec
pop
mov
and
das
in
cmp
nop
mov
loop
idiv
test
fnstsw
in
rorb
cmp
lds
pop
adc
mov
xchg
or
aaa
stc
cwtl
mov
inc
fxsave
jno
lret
iret
jl
out
mov
test
sub
out
aad
sbbl
gs
loope
aad
stos
test
adc
stos
hlt
mov
adc
jl
out
movsb
movsl
lcall
dec
test
rorb
inc
test
cmpsb
int3
out
inc
dec
lcall
aam
mov
push
sub
mov
mov
xchg
leave
dec
ljmp
ljmp
movl
cmc
fadds
dec
xchg
das
push
or
imulb
loopne
pop
inc
push
add
mov
sub
jecxz
stc
xor
fcompl
pop
cmp
dec
jbe
inc
cmp
imul
inc
popf
pop
xor
mov
ret
and
int3
push
stc
or
adc
sbb
arpl
stos
pop
cmp
das
mov
add
and
pop
leave
out
imul
xchg
cltd
push
int3
jo
daa
outsl
jmp
xchg
mov
mov
jne
inc
cmp
add
cltd
or
fistpl
aam
ret
sub
scas
int3
imul
cwtl
sahf
mov
inc
mov
sub
mov
mov
cmpsl
dec
popa
mov
jg
lcall
inc
movsl
jmp
sbb
insl
add
xor
mov
lret
pop
jo
dec
or
es
out
mov
xor
hlt
adc
test
enter
mul
fdivrs
ljmp
aaa
pop
pop
cmpl
xor
or
sub
cmpsb
bound
movsb
push
jae
sub
push
nop
cmpsb
pop
and
mov
fstpt
lods
sti
mov
cmp
iret
test
mov
and
scas
or
push
sbb
sbbl
or
leave
js
mov
loop
push
pop
xchg
and
stc
adc
cmp
inc
jecxz
jb
insb
add
xchg
rcl
jge
addr16
popf
dec
fs
clc
add
nop
in
out
pusha
fwait
xor
cwtl
cmp
hlt
xchg
xor
and
insl
mov
pushf
xlat
movsl
cmp
pop
mov
mov
shll
jmp
jns,pn
mov
jle
ret
sub
and
or
fdivrs
insb
cmpsl
xchg
mov
sarb
jne
scas
lahf
push
mov
in
loope
jle
cwtl
jns
dec
out
fsubr
add
lock
addr16
ficoml
cmp
hlt
repnz
add
pop
lds
and
mov
sysenter
mov
push
rcll
es
sahf
add
icebp
jae
xchg
test
or
outsb
lods
push
mov
inc
xor
dec
xorb
mov
pop
daa
pop
mov
rol
xchg
addb
xlat
fmul
jg
ret
dec
mov
mov
rcl
or
dec
xchg
mov
inc
shrb
loop
xchg
lret
sbb
or
aad
int
add
sahf
xorb
and
loop
and
mov
mov
adc
enter
mov
adc
lahf
jmp
cmp
decb
inc
repnz
aas
daa
hlt
cmpsb
mov
or
xlat
pop
out
hlt
push
add
mov
cli
push
test
rorl
sti
cmp
inc
or
adc
pushf
mov
and
inc
imul
data16
and
pop
lds
into
fdivrs
rolb
mov
cmp
sbb
pop
jbe
add
jle
sbb
mov
rcr
in
ror
pop
cmp
and
add
rcrl
fwait
cmp
movsl
sub
mov
mov
pop
arpl
fstpl
push
in
sub
sbbb
subl
jl
sub
cs
cld
pop
sbb
mov
stos
cltd
mov
vphsubwd
inc
mov
leave
in
add
je
push
or
mov
lock
dec
add
cmp
push
cmc
clc
aaa
mov
out
jg
inc
std
pop
movsb
sbbb
jno
insb
enter
adc
pushf
loop
xor
and
cwtl
or
sbb
xchg
shrb
jne
pop
xor
fs
xor
jmp
xchg
adc
cmp
insl
inc
fisttps
dec
movsl
inc
inc
ds
test
hlt
pop
lcall
mov
ss
xchg
ljmp
adc
hlt
cli
fsub
jg
jo
mov
pcmpgtb
add
repz
test
sub
add
ret
inc
cmpsl
and
xchg
and
lods
cld
adc
insl
jge
pushf
xchg
icebp
pop
ja
imul
clc
daa
scas
ret
loope
dec
inc
push
or
insl
das
fstl
aaa
ret
in
popf
xchg
add
adc
mov
push
push
mov
inc
loope
adc
sti
scas
xor
pushf
xor
sub
or
mov
loop
xor
test
pushf
inc
xor
mov
xchg
mov
xor
je
out
jp
aad
rorb
in
push
mov
int
push
mov
jo
out
iret
and
cmp
mov
clc
loop
mov
or
popf
lahf
cmp
data16
leave
testb
nop
movsb
or
push
icebp
fistpl
sarl
sbb
adc
push
daa
xor
aad
sahf
mov
mov
jle
popf
and
adc
jp
out
orb
jle
jl
int
add
std
sbb
push
jbe
pop
xchg
popa
in
testb
adc
int
popf
and
jnp
into
push
adc
dec
sahf
inc
dec
or
jmp
xor
jno
mov
jge
cmp
jb
stos
xor
lods
sahf
lds
push
aas
mov
icebp
movsl
ret
push
sbb
push
lods
aad
enter
jo
add
xchg
inc
shll
pop
sub
lahf
sarl
aaa
sahf
mov
popa
ret
lods
insl
bound
mov
jecxz
js
inc
test
inc
inc
adc
jecxz
xchg
pop
inc
or
ljmp
fstps
lods
cmpsb
mov
mov
xchg
sti
fdivl
push
dec
jmp
push
repnz
xchg
mov
push
test
mov
andb
jg
mov
jns
int3
imul
shll
test
push
mov
dec
imulb
mov
and
ja
rolb
cmp
xchg
stos
inc
pusha
cltd
pop
scas
arpl
fisubrl
nop
push
rcr
pusha
fwait
scas
inc
sbb
jg
movsl
aam
popa
roll
call
fstpl
pushf
mov
pop
sub
add
push
inc
mov
add
jno
xor
pop
push
push
test
dec
inc
aam
pop
jne
xchg
cmp
aad
es
add
pop
sarb
add
inc
mov
inc
fstpt
pop
movsl
dec
add
inc
mov
imul
addr16
xor
mov
into
mov
inc
pop
xor
inc
mov
loopne
jnp
mov
imul
clc
bound
repnz
push
loop
mov
add
notb
pop
popa
orl
inc
cmpsb
add
jecxz
sbb
add
mov
xchg
fnstenv
fistl
add
out
dec
outsl
add
mov
push
aaa
call
scas
cmp
cli
mov
hlt
dec
fwait
xor
idivl
lcall
test
lods
out
or
movsb
lods
es
jnp
mov
or
inc
mull
pushf
out
lahf
xor
and
push
jns
pop
or
jmp
jg
bnd
mov
in
divl
lcall
popf
clc
mov
outsl
pop
ss
and
imulb
push
mov
inc
sub
sub
xchg
mov
cli
or
loop
popa
inc
xchg
std
fstl
lahf
or
orl
repnz
jp
pushf
inc
or
add
pop
push
and
mov
xor
inc
dec
sbb
pop
rclb
jb
scas
or
mov
inc
fmull
iret
mov
sub
cmp
xchg
mov
mov
adc
imul
pushf
dec
enter
outsb
shlb
std
xchg
out
cmp
iret
inc
jecxz
cmc
sahf
subl
add
dec
inc
cmp
movzbl
dec
add
dec
inc
notl
adc
xchg
xor
lock
jb
int3
sbb
xor
mov
cmpsl
add
mov
adc
pop
lods
inc
xor
push
mov
sti
mov
or
xor
or
mov
mov
out
test
sub
jle
sub
lret
cmc
mov
and
adc
mov
xchg
and
ds
inc
xchg
enter
add
loopne
dec
xchg
xlat
cs
scas
repz
cmp
mov
scas
and
pop
packssdw
aaa
cmp
ret
dec
je
cmp
xchg
lahf
mov
push
ja
mov
adc
mov
sub
inc
insl
dec
push
sbb
fisubrl
nop
pop
stos
popf
je
cmc
jb
push
jae
sbb
jl
loope
jne
add
mov
mov
repz
scas
popa
cltd
mulps
sub
out
add
aam
mov
in
adc
data16
divb
sub
fnsave
aaa
mov
fwait
mov
pop
mov
daa
jb
sub
out
ljmp
imul
bound
popa
mov
pop
xor
andb
adc
mov
xlat
fimuls
or
loopne
fs
adc
idivl
ds
or
adc
xor
lahf
out
mul
and
xchg
int
inc
aaa
rorb
lock
dec
daa
jb
das
int
sahf
pusha
daa
fsubs
or
imul
cmc
subl
lock
sub
fisubrl
fistpll
nop
in
fisubrs
mov
nop
jns
and
or
lret
xchg
mov
xchg
add
iret
sub
inc
xchg
xchg
adc
or
popf
and
inc
sub
imul
icebp
sbb
sahf
sub
dec
iret
dec
dec
gs
hlt
popa
or
insl
sbb
mov
jmp
jle
pop
push
add
pop
mov
cmpsb
push
mov
aaa
mov
or
stc
repnz
xlat
jns
sbb
mov
push
inc
jecxz
fidivrl
lret
cmpsb
icebp
mov
sbb
mov
sub
loope
sahf
scas
mov
pop
in
in
add
into
xchg
push
roll
sub
insl
loop
adc
sub
add
pop
add
push
xchg
dec
addr16
jg
nop
add
test
aam
jbe
test
push
xor
mov
fnstsw
stc
test
cltd
fs
cmp
inc
jl
into
xchg
out
int
push
je
xor
jmp
mov
xor
aas
je
lock
sbb
mov
mov
pushf
sbb
cmp
add
scas
lods
jb
pop
clc
jl,pt
fcompl
xorb
pop
fistpll
add
cmp
scas
std
sbb
push
nop
cmp
xchg
sti
sbb
test
mov
mov
lret
mov
mov
bound
xchg
jecxz
ljmp
jp
push
cli
out
pop
nop
stc
mov
stos
stc
arpl
or
popa
sbb
enter
adc
sub
scas
fcmovb
mov
aam
in
fsubrl
cwtl
add
and
mov
push
nop
loope
dec
bnd
das
adc
fidivrl
inc
js
stos
lods
cmp
pop
add
cmp
cmp
pusha
push
push
test
lea
adc
jns
adc
pop
push
std
mov
xchg
xchg
adc
out
mov
dec
dec
out
sbb
cmp
mov
aaa
jg
mov
fnop
and
movsl
xchg
mov
add
imul
xor
xor
lahf
pop
xchg
idivl
inc
push
xor
dec
and
mov
out
loop
jmp
mov
pop
or
out
rorb
mov
xchg
jae
pop
sub
into
aaa
push
push
mov
int3
or
add
mov
sub
sub
ret
loopne
dec
pop
je
jbe
popf
add
jo
xorl
inc
das
inc
xchg
mov
in
scas
jecxz
or
subl
out
leave
sbb
int3
enter
dec
or
jl
jmp
jp
out
ret
xchg
xor
fcoml
je
dec
int3
jbe
add
inc
and
rolb
sub
fimull
fldt
sub
push
push
in
adc
fdivrs
cmp
sub
outsl
fisubrl
jne
and
xor
xchg
loop
sbb
ficoms
mov
aas
mov
inc
call
stos
xor
cmp
mov
shrb
bound
or
into
fwait
mov
mov
fimull
inc
push
in
aam
adc
pop
dec
mov
mulps
adc
mov
add
andb
cltd
out
outsb
cwtl
sarl
xchg
call
xor
scas
mulb
push
rorb
mov
pop
cmpl
and
jecxz
fsubs
fldcw
sbbb
mulb
push
outsl
fs
pop
add
sti
js
sub
mov
into
sub
les
imul
jle
imul
pop
in
sub
jns
mov
ss
cmp
inc
jnp
test
jnp
adc
push
cmpsl
dec
push
enter
adc
aam
mov
cld
lds
aad
fs
mov
cmpb
adc
xor
mov
and
push
pop
pop
pop
mov
xor
test
scas
pop
mov
sahf
shlb
mov
fiadds
loope
push
jp
shrb
sbb
xor
aad
push
xchg
add
inc
mov
push
mov
or
cmp
gs
test
pop
jle
psubq
ret
mov
aaa
pop
xchg
sub
jnp
mov
in
jp
adc
arpl
out
out
out
adc
mov
jo
pop
mov
ret
sbb
icebp
out
lods
push
jb
sub
pop
adc
sub
xchg
and
arpl
xchg
stos
ja
aad
icebp
rcr
push
mov
jbe
nop
adc
enter
inc
sbb
sbb
push
outsb
xchg
dec
pop
ficoml
push
movsb
inc
or
mov
mov
mov
cmp
sbb
popa
xor
pop
outsl
push
cld
aad
repz
cmc
push
js
dec
sbb
enter
pop
xchg
push
and
push
ljmp
lods
scas
orb
adc
jnp
mov
mov
jnp
jb
movsb
mov
lods
das
movsb
adc
inc
cs
cmpsb
dec
inc
pop
stc
push
ss
lahf
dec
or
pop
mov
test
fistpll
pop
movsb
inc
dec
repnz
sahf
mov
cmpsb
lahf
mov
pushf
or
stos
cwtl
xor
pop
ljmp
in
arpl
lret
and
rorl
mov
xchg
leave
enter
cs
adc
mov
or
xchg
fstpl
mov
sub
ret
xor
mov
je
jmp
ss
cmp
sub
xchg
jbe
push
and
and
js
xchg
into
cmp
cmp
btc
jecxz
xchg
movsl
jnp
jbe
je
cmp
ja
push
jne
mov
jno
dec
jo
outsl
push
cwtl
pop
ss
enter
es
jbe
xchg
jge
dec
test
sbbb
xchg
sbb
outsl
push
ds
fildl
inc
fisubs
xchg
int3
test
andl
cmpsb
dec
or
rcrl
shrb
xchg
cld
sbb
sbb
or
into
int3
fcmovu
fwait
jmp
jmp
mov
fdivrp
fdivp
mov
jmp
dec
fwait
std
jmp
test
adc
dec
into
fimuls
inc
sbb
jbe
sub
stos
fstps
loopne
lds
mov
sbb
pop
addb
xor
mov
xor
and
or
inc
push
and
in
dec
xor
or
mov
sub
adc
lods
mov
push
daa
cld
mov
lds
cmpb
popf
movsl
xrelease
aas
aaa
xchg
hlt
ss
imul
jnp
push
jp
mov
mov
cmp
aaa
and
mov
lock
nop
lds
xorl
fdivl
xchg
jae
xor
cmp
pop
repnz
mov
push
sub
loope
lods
imul
sub
fisttps
adc
jg
mov
js
jle
aaa
mov
daa
xchg
dec
je
or
push
in
mov
pop
fcomi
in
fstps
popa
adc
or
mov
cmc
add
sub
fistl
sti
fimull
fcmovne
dec
adc
lcall
dec
hlt
int3
ss
ljmp
push
mov
sbb
mov
insl
inc
mov
das
jbe
xor
aad
mov
stos
push
into
inc
add
int3
or
inc
mov
rorl
mov
ret
ds
sub
add
nop
arpl
cltd
ds
pop
pop
sub
adc
out
xor
filds
testb
fcompl
sub
es
xchg
pop
les
out
loopne
data16
jne
xchg
je
mov
scas
jl
clc
mov
and
fwait
xchg
iret
mov
out
hlt
clc
lea
and
addl
sahf
test
sbb
mov
adc
scas
shlb
in
out
inc
mov
fstpt
dec
int
movsb
shlb
pop
cmp
adc
scas
cmpb
mov
stos
loopne
mov
mov
sbb
adc
xchg
mov
ret
stc
push
adc
mov
idivb
mov
test
jno
rcll
mov
out
cmp
mov
imul
ffreep
mov
mov
lret
sub
aad
pop
and
fwait
mov
ljmp
add
and
cli
jne
sub
addr16
dec
out
movb
leave
mov
mov
mov
fcomps
loop
je
rcrb
negb
scas
fldt
roll
xor
inc
out
sarb
mov
xor
jp
cmp
out
cs
adc
mov
add
popa
inc
icebp
shl
divb
lret
iret
sti
push
in
bound
jb
aad
xor
xchg
cli
pop
xor
xor
cmpsb
je
and
repnz
jo
pop
mov
mov
repz
ljmp
mov
or
jge
je
mov
test
dec
fwait
push
mov
cmp
jmp
jno
pop
inc
push
outsb
pop
das
pop
inc
pop
test
das
jp
pushf
or
scas
das
cwtl
sti
inc
dec
mov
rcr
lock
jp
stos
jge
mov
in
arpl
add
aaa
mov
jge
jp
rclb
lahf
mov
add
cmp
xchg
rolb
pop
add
into
inc
test
adc
jns
mov
xchg
stos
lret
orl
pop
fistpll
test
inc
sub
pop
test
inc
hlt
out
lret
sub
inc
xchg
jne
je
inc
pop
into
jmp
test
jo
call
mov
frstor
sbb
mov
stos
fcmovne
or
dec
leave
jmp
mov
movsb
and
out
divb
inc
sbb
or
sub
jp
jne
int3
mov
jge
push
push
xchg
repnz
sarb
mov
es
mov
push
mov
mov
aad
xor
xlat
jne
lret
das
pop
movsl
add
packuswb
rcrb
and
adc
cmp
push
test
xor
add
mov
sub
jg
js
clc
and
cmp
pop
jb
mov
push
mov
xor
js
xchg
incl
mov
aam
xchg
into
pop
pop
push
and
xchg
sbb
icebp
bound
xor
ljmp
xor
adcl
movsl
xlat
dec
sub
jecxz
and
je
add
call
and
mov
outsl
orb
mov
dec
push
fstpt
sbb
fldl
fldenv
rcll
jge
ret
rcrb
cmp
xor
add
aas
popf
jle
push
sub
out
mov
jp
add
test
or
loopne
loop
cmpsl
in
movl
dec
inc
mov
mov
sbb
mov
jle
mov
xor
imul
mov
popa
idivl
cmpsl
pop
jl
loopne
icebp
xchg
pop
jbe
lret
test
test
loope
sub
les
adc
popa
sub
add
xchg
pop
dec
jge
js
xchg
in
mov
sahf
movsl
fcomps
sbb
cmc
mov
mov
fucomp
shll
dec
fidivl
mov
jg
mov
mov
inc
orb
popf
repz
pop
xor
sub
ds
cld
sub
adc
pop
rcr
mov
push
and
sub
rclb
jl
xor
enter
mov
mov
imulb
mov
mov
les
jle
pop
pop
imul
push
repz
dec
rorl
jecxz
xor
adc
in
mov
ljmp
mov
cmp
xor
add
mov
jmp
leave
push
inc
adcl
sbb
xchg
mov
or
movsb
sub
jo
pop
jge
add
and
std
into
fisttpll
aad
mov
fs
mov
pop
sahf
mov
shrb
out
add
inc
push
test
iret
jae
cs
pop
lret
pop
push
fnsave
aad
mov
jno
aad
lds
cmp
jb
xchg
ljmp
and
pop
adc
test
orl
dec
stc
mov
mov
xor
lods
outsl
add
jle
shll
push
jnp
xchg
ljmp
jg
fbld
subl
mov
jo
add
lret
xor
sbb
push
int
pop
je
gs
stc
arpl
loopne
dec
mov
push
or
mov
clc
pop
pop
in
mov
idivb
test
xchg
adc
inc
insb
mov
lahf
dec
aad
jp
or
xchg
bound
mov
cltd
mov
cli
insl
sub
popa
mov
lods
lods
cmpsl
xor
stos
add
out
shl
test
cmc
mov
lcall
push
inc
loope
fwait
in
xchg
sbb
cmc
bound
fnstsw
stos
and
scas
movsl
cmp
add
movsl
stos
sahf
fs
xor
push
xor
jae
xor
mov
cli
xchg
enter
jno
jge
pop
int
and
inc
cmp
lret
dec
out
push
cmc
gs
sbb
push
mov
das
in
jecxz
xor
shll
pop
push
repnz
cltd
int
xor
fisubrl
cmp
mov
fucomip
cltd
sbb
test
add
sarb
out
mov
pushf
adc
nop
loope
ljmp
lcall
in
lods
fst
jge
ja
jmp
cwtl
dec
pusha
xor
es
jns
jl
add
pop
and
xchg
enter
pop
push
mov
mov
lcall
or
add
fildll
out
cbtw
or
sub
andb
and
jo
outsb
shll
push
aas
dec
inc
jge
push
pop
mov
stos
fmull
pop
lret
or
xchg
ficoms
fwait
pop
xchg
les
repz
pop
aad
mov
jmp
mov
jno
enter
in
adc
push
sbb
push
in
divl
repnz
incb
lds
test
jecxz
sahf
pop
repz
jle
out
shlw
xlat
jl
icebp
mov
dec
and
mov
and
xchg
mov
and
data16
jg
in
jae
push
pop
mov
mov
cli
nop
sbb
int
lcall
outsb
clc
aam
mov
and
push
push
enter
push
xchg
jle
lahf
adc
jbe
or
clc
pop
stos
xor
cs
stos
push
inc
call
arpl
sbb
pop
daa
adc
ljmp
out
repnz
mov
xor
or
sbbl
cmp
popf
cmp
push
push
addr16
dec
aas
or
das
out
sbb
imul
daa
jns
jge
push
insb
and
add
in
daa
aad
dec
fwait
pop
jns
or
or
xor
fmuls
ret
jb
sub
fsub
jnp
add
lcall
or
daa
jl
in
or
pop
xchg
repz
xchg
push
outsl
lods
cmpsl
push
and
call
pop
xchg
aas
xchg
jmp
repz
shll
icebp
add
xrelease
or
stos
or
nop
fisubl
lret
mov
out
adcl
mov
mov
xor
sahf
sbb
jne
std
lcall
leave
lahf
pusha
xor
nop
xor
sub
inc
jmp
jmp
cmpsl
mov
or
aaa
jge
inc
fiadds
jmp
insb
jo
lcall
and
fisubs
shlb
push
xor
dec
test
mov
push
leave
std
test
sti
fcmovne
lods
cmp
and
scas
adc
fistl
fildll
push
add
and
mov
les
add
pop
sub
jnp
adc
pop
push
mov
add
push
cmp
mov
movsb
incb
les
adc
inc
dec
push
jmp
addr16
jo
sbb
out
es
arpl
rcrl
xchg
xor
cmp
xor
sub
pop
out
es
mov
inc
loope
push
mov
fstpl
insl
pop
les
mov
pop
pop
xchg
xor
out
cmp
push
xchg
or
mov
xchg
subb
jmp
insb
push
lods
stos
sbb
adc
or
and
cli
data16
and
into
mov
scas
movsl
faddl
jno
xchg
loop
hlt
and
inc
cwtl
mov
cmp
aad
or
xchg
inc
pop
dec
xor
loopne
push
leave
aam
lea
jecxz
xchg
icebp
clc
push
xchg
add
mov
imul
mov
push
dec
in
cmp
mov
filds
mov
scas
stc
pop
or
int3
fdivrs
push
pop
inc
subb
pop
dec
sub
pop
pop
test
pushf
sbb
out
fs
and
xchg
or
mov
mov
xchg
xchg
fdivl
pop
insl
xor
out
stc
mov
sbb
fwait
cwtl
adc
fisubs
sarb
daa
pushf
mov
or
push
mov
shrl
cltd
xor
out
xor
or
test
icebp
mov
sub
out
mov
sub
aas
aad
imul
mov
ficoms
push
cmp
xor
ss
mov
mov
inc
push
into
add
cli
xchg
in
push
xor
sub
pop
mov
xchg
push
hlt
mov
inc
hlt
push
add
cmp
fcoms
adc
fwait
lcall
adc
into
sbb
xchg
mov
or
insb
mov
faddp
test
adcl
inc
rcrl
jbe
or
leave
and
inc
je
mov
imul
hlt
adc
cli
rcl
test
inc
fists
push
sub
in
aam
xor
sbb
push
aad
out
mov
imull
push
aad
sbb
push
aam
mov
mov
mov
inc
movb
pop
lret
sahf
dec
out
lods
push
mov
sbb
mov
and
fwait
jns
in
mov
lahf
movsb
xchg
stc
lcall
aad
xorb
cmp
ret
fsub
and
sarb
pop
bound
lahf
das
jo
xacquire
jbe
mov
sbb
xchg
dec
test
gs
lret
mov
sahf
push
push
mov
iret
xchg
cmp
mov
inc
je
adc
scas
inc
outsb
xchg
cmc
dec
ret
bound
cld
xor
ret
inc
jl
pop
mov
in
call
sbb
bound
inc
int3
xchg
sbb
inc
rolb
test
lock
xor
xchg
hlt
jns
lret
insl
sub
xor
mov
push
push
mov
or
sub
sub
cmpb
or
leave
fwait
out
dec
sbb
add
lret
cmpsl
bound
mov
mov
push
mov
insb
dec
out
jno
mov
pop
lret
fdivrs
insl
ja
cmp
fisubs
mov
in
push
adc
lahf
lahf
test
pop
scas
lods
fwait
scas
and
jle
arpl
mov
add
push
mov
inc
and
sar
push
aas
test
in
popa
adc
jnp
adc
test
and
push
jp
aaa
cli
push
push
lcall
add
push
dec
cmpsb
pop
jmp
rolb
mov
mov
pushl
outsb
lods
xor
subl
aas
leave
std
ja
sbb
rorb
mov
pop
test
mov
stos
idiv
sbb
mov
xchg
mov
xchg
lods
repnz
mov
test
push
data16
inc
mov
dec
aas
dec
or
cmpsb
das
push
cli
pop
mov
daa
mov
xchg
mov
out
mov
sarl
inc
adc
lea
clc
xchg
cmpsl
lret
in
adc
fwait
pop
mov
and
inc
ljmp
mov
adc
out
mov
frstor
pop
adc
js
fimull
xor
mov
adc
cs
push
or
add
mov
push
lcall
sub
pop
aaa
push
mov
sbb
icebp
popf
mov
pop
in
mov
dec
rcrb
lds
cmpsl
addr16
lret
push
insb
repz
push
add
cmpsl
sub
sahf
sub
inc
bound
pop
sub
push
in
in
out
jne
cmpl
imul
call
mov
xlat
or
mov
mov
pop
mov
push
loop
jae
arpl
pop
rcrl
and
sub
inc
lods
xchg
push
outsl
out
sahf
shrb
sbb
test
fs
sti
enter
xor
and
mov
cmpsb
inc
scas
loopne
dec
xchg
inc
les
adc
add
inc
outsb
adc
lret
test
sub
fs
int3
outsb
out
push
jge
push
arpl
cmpl
add
inc
inc
dec
cmp
add
mov
movsl
movsb
cmp
mov
sub
rcrb
adc
leave
inc
add
inc
mov
fnsave
daa
enter
push
icebp
sub
mov
mov
adc
pop
jl
icebp
jmp
sbb
and
and
divb
pop
xor
inc
loopne
test
sub
cs
inc
dec
push
pusha
lea
xor
jecxz
add
fisubrl
push
dec
xchg
add
adc
mov
out
cmp
cmp
inc
inc
or
orb
icebp
xchg
paddsb
fdivs
imul
jp
sbbb
jecxz
mov
movsb
fmull
inc
sbb
std
dec
mov
mov
lahf
or
test
cmp
pop
cli
sub
flds
repnz
push
adc
dec
movsl
adcb
and
adc
les
xchg
adc
jp
sub
aaa
jae
fcoml
add
insb
dec
mov
out
jmp
jb
jb
adc
jp
jb
dec
into
mov
mov
dec
xchg
cmp
mov
sub
addr16
inc
and
das
add
out
pop
clc
jl
loopne
jmp
fmulp
add
dec
jbe
add
xor
sbb
mov
test
outsl
adc
sbb
icebp
and
jo
pop
out
test
mov
lcall
pop
or
jg
out
xor
and
cld
bound
sbb
sbb
fcomps
pop
vmwrite
jbe
xchg
jl
push
decl
inc
or
mov
daa
push
jecxz
mov
xlat
lods
mov
sbb
aam
xor
testl
xor
repnz
mov
push
cmp
push
dec
imul
jge
inc
mov
mov
gs
fdivl
lcall
pusha
arpl
out
shl
js
dec
lds
pop
sub
ret
and
aas
outsl
sbb
out
sbb
sub
lods
stos
xor
ljmp
imul
out
jne
push
sahf
aas
test
out
adc
jnp
mov
mov
pop
or
pop
xor
jle
leave
cmp
cmp
xor
mov
cltd
imul
push
lea
add
mov
pop
pusha
test
dec
jne
sub
mov
loopne
pop
orl
insb
mov
std
fdivl
insb
add
fdivr
jle
sti
mov
imul
pslld
movsb
cs
test
insb
push
shrl
pop
add
jmp
mov
in
push
push
fwait
out
jle
dec
add
cs
shl
adc
movsb
lods
pop
sub
imull
cli
sub
fldl
mov
sbb
les
int
cmp
xor
cmp
neg
pusha
inc
jo
mov
cmpsl
xchg
and
cmp
aaa
aad
fwait
lcall
jb
dec
popa
sub
push
jle
push
insb
sbb
scas
add
mov
pop
pop
push
stos
iret
adc
pop
fwait
aam
pop
add
xchg
push
repz
mov
scas
cmp
rep
ffree
mov
pop
jle
fldenv
lret
xor
or
xchg
insl
mov
inc
icebp
call
xchg
mov
cld
xchg
xchg
enter
sahf
loopne
lahf
repnz
sbb
notl
ja
aaa
imul
je
mov
int
push
pop
stos
push
leave
jmp
and
dec
pcmpgtb
mov
imul
aaa
and
or
push
mov
xchg
jle
or
mov
xchg
xchg
sub
adc
sub
nop
xchg
pop
jl
jns
xchg
sub
jo
lods
dec
jbe
mov
cmpsb
push
sti
into
sti
mov
and
aam
push
lods
out
push
or
dec
fcmovbe
adc
insl
cs
cwtl
cltd
lret
sbb
xor
push
sub
add
pushf
mov
clc
add
test
xchg
in
adc
adc
xchg
lods
outsl
jb
daa
jo
add
out
cmpsl
dec
iret
fsts
push
or
jmp
push
ss
repnz
adc
sub
dec
test
dec
sbb
jae
cmp
sub
push
jno
aam
mov
push
xchg
fsubs
inc
loope
pop
dec
pop
stos
inc
mov
xlat
xchg
ss
lods
dec
roll
mov
mov
mov
cli
cmp
nop
cld
and
rcrl
push
addr16
out
adc
shlb
je
adc
adc
fxch
sub
xlat
arpl
mov
jbe
pop
hlt
jg
je
lods
je
mov
push
ds
adc
add
xchg
addr16
fs
pop
mov
out
sub
bound
jb
sti
je
fadd
jno
sbb
adc
sub
xchg
mov
mov
adc
repz
lock
out
jb
es
dec
cld
clc
mov
or
sti
in
pop
dec
fdivrp
jmp
lahf
and
jecxz
dec
pextrw
sbb
subb
lcall
pop
inc
pop
xchg
and
sub
or
fstl
stos
pop
sub
adc
or
inc
cs
push
mov
je
sbb
pushf
jnp
test
dec
je
adcl
push
push
icebp
addr16
int3
notb
add
lea
aad
mov
ficoms
loopne
xchg
outsl
mov
sbb
xlat
in
and
dec
out
push
iret
adc
pop
pop
cmpsl
add
ljmp
or
lcall
outsl
mov
mov
mov
xor
add
mov
xchg
call
or
frstor
cmp
gs
pop
push
loopne
gs
adc
or
cmp
jle
imul
lret
mov
out
stc
fwait
sbb
not
pop
adc
adc
or
cmc
repz
pop
mov
xchg
mov
cmpsl
push
push
fsubs
fisttps
in
cmp
xchg
xchg
roll
lret
mov
mov
xor
imul
xchg
dec
mov
negb
or
scas
pop
mov
mov
dec
and
enter
into
inc
out
lcall
notb
dec
jge
cmc
mov
aaa
jnp
jb
pop
dec
sbb
hlt
lods
adc
cmp
popa
rol
arpl
jbe
jg
jecxz
lahf
nop
fnstsw
sub
cmp
mov
nop
outsb
add
dec
out
xlat
in
and
jne
jg
xchg
incl
push
data16
and
test
scas
dec
stc
pop
shrb
sbb
xchg
fimull
sahf
pop
out
test
inc
lods
aaa
mov
pusha
cmp
daa
xorl
push
lahf
movsb
and
jmp
push
inc
mov
cmpsb
fstpl
lods
adc
out
sub
shl
es
pusha
push
test
push
lcall
test
or
pushf
xchg
imul
jmp
fs
cmp
jno
dec
dec
scas
out
sub
jl
xchg
loope
adc
dec
mov
cmp
mov
daa
lods
pop
pop
adc
insb
pop
stos
daa
adc
insb
loope
mov
sbb
sbb
aad
test
dec
add
pop
cmpsl
or
fdiv
push
mov
push
push
insb
test
lds
cmpsb
in
icebp
inc
in
out
sbb
leave
cmp
dec
or
pusha
xor
mov
push
insl
mov
xchg
stos
sub
and
adc
jbe
jmp
movsl
aaa
movsb
pusha
adc
push
xlat
sbb
dec
push
imul
pop
icebp
iret
and
cs
sbb
cltd
idivb
cmp
add
pop
xchg
mov
push
les
lods
lea
lea
in
rolb
pop
jno
pop
and
cmp
into
xor
js
and
dec
jo
jbe
iret
mov
loop
iret
lods
push
movsl
fstpl
shlb
mov
push
jnp
cmp
int
popf
and
pop
nop
clc
imul
leave
clc
or
lahf
mov
push
pop
xchg
outsb
xor
push
mov
adc
dec
sub
inc
lds
pop
cmp
lcall
or
and
or
in
lret
clc
ja
fbstp
add
sti
orl
mov
xor
fisubrs
mov
push
inc
stos
cmp
xor
ds
jmp
cmp
cld
mov
imul
jne
pop
mov
add
test
insl
scas
xchg
stos
sarb
outsb
sahf
adc
in
aad
movsb
std
jne
push
adc
and
shrl
fisubs
or
mov
pop
adc
dec
enter
fdivl
ret
inc
xchg
data16
add
icebp
xchg
sbbl
jmp
lds
icebp
andb
jo
insl
inc
mov
addr16
cmp
push
dec
mov
cmp
cli
jnp
add
stos
stos
adc
scas
std
dec
test
int3
jle
sub
sbb
mov
clc
stos
gs
dec
jns
mov
lret
mov
fld
jae
in
xchg
cld
insl
test
push
in
xchg
lret
les
imul
fcom
push
mov
cli
cmp
jecxz
inc
pop
mov
inc
mov
cli
lock
pop
push
mov
orb
adc
cltd
jecxz
call
jge
cmpsb
push
test
movsl
mov
sub
subl
lret
pusha
jmp
mov
std
mov
pop
fisttpl
je
gs
in
aad
push
das
sub
pop
or
cmp
in
lret
xor
addl
in
in
jle
and
add
jmp
or
or
jge
stos
push
mov
jle
fadd
jo
sub
andb
jmp
pop
and
fdivp
jne
out
jo
mov
mov
ret
outsl
push
push
mov
addr16
xor
imul
cmove
pop
lea
popf
push
and
mov
mov
xchg
shll
lods
xor
add
ljmp
bound
loope
vprotq
jnp
sub
push
lods
mov
add
add
or
pop
int
or
jl
mov
cmpl
stos
pop
mov
mov
mov
stos
push
sub
std
outsb
std
add
jo
dec
pushf
fistpl
cwtl
dec
sub
out
sti
pop
mov
mov
dec
outsb
push
push
cwtl
mov
in
test
and
lods
sahf
mov
dec
int3
in
neg
in
pop
adc
push
and
mov
mov
sub
sbb
inc
lea
inc
cs
mov
scas
decb
mov
xchg
aam
mov
sti
or
or
dec
scas
xchg
aam
add
jl
out
aas
cwtl
imul
mov
in
or
arpl
dec
adc
mov
leave
adc
stos
mov
rcrb
lret
aas
xchg
xor
inc
pop
std
outsl
cmc
and
andb
shl
not
lea
gs
xchg
mov
pop
xor
sbb
push
test
rol
adc
mov
orl
pop
cmp
mov
cmp
and
jge
push
push
push
bound
sarb
ficompl
mov
test
mov
push
ret
into
out
cmc
stos
mov
shlb
mov
sbb
adc
lahf
inc
add
repnz
xor
inc
out
pop
dec
std
cmp
daa
pop
mov
xor
add
cmp
mov
adc
loope
jp
dec
pop
hlt
adc
push
popa
jns
test
sbb
xchg
hlt
jbe
mov
push
inc
fdivrs
add
jmp
dec
int
lods
xor
js
or
adc
cltd
mov
aas
negl
cmc
lods
dec
push
divb
movl
insl
test
jnp
xor
lock
sub
sbbb
movsl
mov
jbe
daa
or
decl
fsubrs
mov
jmp
jnp
out
inc
jo
jno
idivl
jp
movsl
pop
xor
test
lea
xchg
add
xor
stc
cmpb
push
insb
xor
insb
dec
nop
insb
push
fadd
ljmp
jae
test
and
push
or
xchg
fstps
addl
in
mov
sbb
jg
insl
adc
mov
and
pop
push
sbb
push
aas
or
aad
or
cmp
imul
mov
jg
sub
aam
scas
xlat
lahf
mov
sbb
mov
loop
outsl
imul
fs
add
scas
insl
jae
xor
daa
pop
adc
bound
cld
mov
jmp
jns
decl
std
mov
outsb
aas
jg
mov
popa
out
cmc
cmp
aas
jg
adc
sub
cltd
jae
dec
xor
ret
loop,pt
adc
imul
hlt
xchg
mov
push
xor
mov
ds
mov
sub
mov
jle
xor
sub
mov
lea
rcrb
xchg
add
loop
fld
clc
pop
push
js
cs
in
sti
pop
add
cmpxchg
jecxz
sbb
icebp
or
call
leave
sbb
mov
arpl
mov
mov
in
arpl
jge
out
outsl
push
push
or
test
popa
add
imul
push
mov
xchg
pop
pusha
test
std
jo
pop
pop
sahf
lcall
adc
arpl
cmp
loop
fucomip
fsts
imul
push
hlt
add
jmp
sti
xor
xchg
lcall
mov
xchg
sub
out
inc
pop
shrl
popa
xchg
pop
das
int
icebp
jno
popa
push
vpmulhw
xlat
nop
dec
jno
or
iret
lcall
add
out
xor
pop
adcb
mov
popf
xchg
or
and
test
mov
rcrl
adc
dec
stos
fistpl
dec
or
fisttps
xor
arpl
and
cltd
std
fwait
imul
jns
and
in
repz
ljmp
mov
icebp
idivb
loop
dec
dec
dec
push
jnp
and
movsb
inc
and
cmpsb
jmp
mov
stos
mov
ljmp
in
fcmovnbe
xchg
icebp
bswap
ror
popa
push
test
mov
cwtl
adc
add
sar
xor
pop
pop
lahf
mov
or
mov
jp
and
in
scas
fwait
push
adc
mov
or
adc
and
cmp
and
push
lret
inc
ret
std
fsub
das
in
cmp
xchg
cmp
xor
test
push
push
punpcklwd
mov
stc
jl
sbb
push
int3
mov
xchg
push
mov
sarl
mov
sbb
cwtl
push
repnz
mov
jb
cmp
rorb
mov
lods
iret
sti
sbb
leave
int
and
scas
scas
cmc
mov
sbb
enter
xlat
shlb
aam
out
push
add
jb
sub
lahf
jno
push
sub
pop
mov
popf
cmp
push
shrl
mov
cmp
add
stos
cmp
mov
enter
xchg
hlt
cmpsl
pop
push
loop
push
outsb
lret
mov
sub
clc
rclb
in
xor
into
lock
lods
pushf
adc
in
mov
dec
ljmp
jp
cmp
in
xchg
and
je
cmp
inc
mov
ja
add
int3
jb
dec
xchg
fiaddl
addl
ret
push
mov
sub
into
int3
nop
or
lret
sbb
das
mov
stos
push
nop
jmp
mov
mov
cli
ficomps
xor
push
jp
icebp
pop
jne
mov
pop
jle
xchg
and
into
pop
sub
andl
pop
mov
mov
andl
movsl
movsl
push
xor
ds
adc
xchg
lods
out
packsswb
xchg
leave
cmp
rolb
mov
pop
imull
pushf
xchg
mov
mov
fld
xor
mov
std
or
in
inc
pusha
in
fdivs
repnz
std
sub
insb
imul
dec
leave
lods
sub
dec
aaa
in
lds
pop
ss
jmp
scas
or
mov
jp
dec
pop
jae
pop
push
jo
jo
sahf
push
loopne
add
xchg
xchg
add
bnd
mov
dec
sub
das
fscale
sub
daa
scas
pop
inc
inc
mov
test
das
sub
jl
xchg
and
ss
xchg
push
fdivrl
in
pop
lds
out
bound
dec
popa
or
pop
aas
cmp
clc
dec
jg
add
mov
loopne
dec
aaa
cmp
xchg
sarl
push
mov
movsl
mov
pop
inc
dec
add
cli
inc
sub
das
jg
sub
pop
aas
call
and
dec
mov
mov
in
mov
push
lret
cmpsl
sub
dec
or
and
mov
sub
inc
mov
adc
pop
cmp
divl
pop
clc
jns
lahf
sub
ljmp
test
pop
xor
mov
cmpsl
arpl
inc
sub
add
lods
mov
outsl
enter
sub
pop
add
jbe
jne
pop
fwait
rcll
cmp
cmp
and
cmp
scas
divb
mov
fnsave
rcr
pop
jecxz
int
loop
jno
push
les
inc
nop
add
fldt
sub
push
inc
mov
add
aaa
cmp
in
ljmp
fnstenv
and
je
or
lcall
jnp
pop
in
pop
nop
movsb
lret
ret
popf
and
in
adc
popaw
jg
add
and
sub
mov
jle
xchg
mov
icebp
les
cmpl
jno
mov
mov
or
movsl
out
mov
imul
dec
mov
insl
cs
out
pop
orl
xor
in
mov
xchg
xor
rcrl
mov
cmp
pop
clc
xchg
je
lds
mov
and
xor
dec
jne
xchg
movsb
fs
xor
cmp
lds
jb
cltd
je
ljmp
iret
pop
jmp
adc
test
push
ret
stc
stos
adc
push
scas
insb
mov
xchg
push
dec
xor
pop
test
movsl
gs
sbb
xchg
jle
lods
test
jp
mov
jge
dec
ret
lret
and
pushf
pop
inc
pop
sub
movsl
int
add
into
cmc
mov
pop
adc
jg
pop
loope
data16
cwtl
or
and
outsl
outsl
mov
in
scas
adc
push
cltd
xchg
sub
push
push
dec
mov
jbe
addb
sub
cmp
dec
jo
pop
pop
lret
pusha
int3
ficoml
in
fmulp
sbb
mov
pushf
jmp
adc
dec
mov
idivl
pop
stc
add
stos
pop
loope
shl
ljmp
mov
cmp
nop
xor
jge
fiadds
or
in
push
pop
jecxz
mov
push
ret
push
adc
and
stos
or
es
stos
and
push
stos
imul
add
or
out
lahf
jbe
push
fstps
inc
jl
push
xchg
insl
popf
loop
out
lods
imul
ret
ds
push
and
sbb
repz
xor
mov
out
test
je
xchg
pusha
lods
cmpsl
inc
jnp
ficoml
dec
std
stos
xchg
and
mov
add
les
movsb
mov
jl
cmp
ret
jle
adc
xor
out
xchg
and
lods
ret
lds
outsl
push
addr16
push
test
xor
idivl
mov
lock
mov
and
mov
in
xor
jecxz
and
push
mov
mov
rorb
roll
movsb
iret
mov
mov
ret
jbe
dec
int
call
cli
push
push
push
pop
jmp
mov
lret
xlat
pop
mov
scas
sub
or
mov
mov
iret
test
sub
ret
lret
cs
pop
push
stos
test
xchg
adc
outsl
test
jg
xor
or
sub
loope
addr16
imul
inc
adc
movsb
cmp
int
das
aad
mov
dec
xlat
scas
or
je
aaa
out
rclb
or
pop
sbb
dec
dec
push
je,pt
push
add
sub
loopne
jmp
shll
in
mov
jno
fsts
pop
or
imul
or
cmp
ja
xlat
push
pop
call
pop
dec
sub
or
cmc
add
loop
cmc
inc
cli
push
push
or
mov
ja
repz
andb
sbb
jne
dec
add
cmp
pop
pop
js
fisttpll
adc
adc
je
sti
insl
or
icebp
pop
push
lods
add
std
daa
mov
adc
test
dec
test
ja
and
push
loop
in
ljmp
dec
jge
mov
mov
or
imul
or
lret
je
repnz
jae
popf
aas
xchg
sub
sbb
jg
ret
jbe
cltd
popf
sbb
mov
mov
jae
aaa
ficoml
fmuls
pop
hlt
and
xchg
mov
pop
mov
lahf
jb
lods
or
xchg
add
sub
aaa
add
mov
push
ret
fmull
jg
out
ljmp
jle
push
xchg
push
icebp
jae
push
add
xchg
in
shlb
cmpsb
test
cmpsl
divl
xor
int3
mov
les
jmp
icebp
ds
sbb
jbe
push
xchg
stc
inc
fisubs
int3
daa
push
insb
aad
push
lods
out
xchg
pushf
cmp
fcoms
jp
ret
add
cwtl
adc
aas
mov
adc
and
ljmp
and
cmc
out
mov
and
cmp
push
inc
test
aad
je
repz
add
arpl
std
xchg
push
sbb
sbb
repnz
xchg
mov
daa
mov
xorl
and
jle
push
dec
and
sahf
js
fdivs
sbb
lcall
xlat
fnstsw
js
iret
push
xor
repz
xchg
fdivs
and
push
mov
xchg
out
sahf
pop
adc
in
xchg
insl
jmp
cmp
iret
es
lahf
ds
push
mov
jmp
pop
scas
mov
push
pop
adc
jb
sbb
icebp
clc
insb
ss
fucomi
jbe
cmp
lahf
outsl
jo
inc
mov
lret
jb
sbb
push
push
mov
push
mov
push
shlb
nop
jbe
out
mov
push
jb
adc
cmp
sub
cld
sub
or
mov
insb
jp
mov
rcl
lods
fisubrs
rol
xor
lcall
and
pop
jg
cmp
hlt
outsb
movsl
xchg
add
out
xor
mov
xchg
icebp
push
in
daa
outsb
cmove
mov
movb
xlat
mov
push
aam
mov
clc
xor
cld
jns
lcall
pop
and
adc
mov
data16
pop
sbb
movl
and
add
mov
jmp
iret
pop
daa
xchg
mov
outsl
in
dec
popa
pop
out
sub
lock
loopne
out
push
stc
jmp
icebp
cs
ja
adc
mov
dec
jmp
test
sbb
pop
or
add
jge
loopne
xor
lods
dec
sub
xchg
sbb
sub
in
dec
das
mov
rol
int
and
mov
dec
pop
sbb
stos
xchg
test
loope
inc
movsb
fwait
imul
repz
xchg
shlb
pop
sahf
cmp
cmp
outsb
or
cwtl
mov
cli
and
fucomp
out
jg
xor
mov
pop
push
cmp
xorl
outsl
mov
shl
or
mov
enter
jmp
pop
or
and
imul
pmulhuw
mov
int3
lret
dec
mov
faddl
mov
mul
sub
fisttpll
lret
xchg
sub
cltd
xor
ss
mov
xor
test
mov
mov
rcrb
push
repnz
xchg
xchg
int3
sbb
lret
pop
pop
cmpsb
pop
scas
in
insl
std
ss
in
pop
idivb
roll
xor
mov
or
mov
cli
repnz
or
lods
cmp
nop
enter
and
jno
mov
mov
xchg
shrb
daa
mov
idivb
imul
mov
jns
mov
dec
aaa
ja
ss
and
incl
stos
ljmp
das
inc
imul
xchg
xchg
jno
lods
js
ljmp
pop
subb
mov
dec
sub
aad
dec
loop
pusha
imul
andb
arpl
jecxz
jnp
inc
xor
rcll
lods
mov
mov
or
sbbb
mov
jne
xchg
xor
jp
pop
int
cmpsb
or
testb
inc
jl
fisubrs
loopne
pop
add
movsb
cmp
push
out
loop
adc
mov
cmp
movsb
addr16
out
adc
fcomip
test
push
xor
push
and
add
out
lods
nopl
sub
scas
sub
adc
jne
inc
loopne
cli
sub
mov
mov
movsb
mov
popa
mov
dec
lret
and
lods
cmp
mov
xor
dec
cli
in
cmp
push
xchg
dec
add
test
push
popf
shrb
push
out
push
in
dec
mov
clc
lahf
imul
lret
add
cltd
imul
fwait
mov
and
aaa
shlb
inc
rolb
add
adc
es
testl
fldt
lret
mov
or
push
das
ret
addr16
enter
orl
dec
sbb
cmc
stos
adc
xor
xchg
addl
and
insb
sti
jns
cmp
xor
pop
add
pop
insl
adc
stc
call
ss
or
je
jb
or
inc
pxor
imul
jle
sub
pushf
lods
ss
and
sbb
sub
out
and
and
addb
dec
mov
xchg
xchg
xchg
jmp
scas
fsubrs
sub
push
insb
pushf
inc
sub
cmp
sbb
cmpsl
popa
pop
insl
push
mov
and
cltd
das
xchg
mov
cmp
pusha
adcb
jmp
jmp
xor
jl
inc
movsb
mov
fmuls
or
fcompl
add
xchg
je
out
into
xchg
sub
stc
insl
push
in
enter
xchg
scas
outsl
xchg
xchg
inc
imul
test
rolb
push
out
push
lods
cmp
push
ja
mov
scas
imul
stc
aam
lods
push
pop
shlb
adc
or
rol
xchg
cld
dec
add
hlt
jp
mov
xchg
jne
push
adc
adc
xor
push
cmp
cmp
xchg
icebp
mov
cmpsl
lahf
cmc
cmp
sbb
clc
xor
pop
pop
pop
into
lods
lahf
mov
mov
pop
insl
adc
out
fcomps
mov
xlat
out
test
loop
call
push
fwait
cmpsl
sub
pop
cmpsl
or
scas
dec
cmp
or
nop
inc
call
ja
adc
in
push
movsb
cli
add
rorb
fwait
dec
call
clc
push
lret
adc
mov
pop
int3
add
test
mov
shr
cltd
jnp
out
ret
rorl
arpl
stc
les
hlt
imul
xor
shll
cmpsl
sbb
add
inc
mov
jae
pop
andl
xor
fdiv
cmp
lods
xchg
stos
or
loope
pop
insl
fdivrs
and
push
js
or
out
xlat
mov
sahf
adc
adc
subb
sahf
sbb
insb
hlt
or
push
testl
testl
mov
mov
sub
shr
push
repz
mov
adc
test
ss
cmovno
in
in
and
mov
fcmovnb
cvttps2pi
mov
les
incl
mov
cmpsb
sbb
xchg
adc
daa
cli
lods
scas
cld
mov
pop
scas
mov
out
lea
data16
cli
add
cwtl
es
push
dec
cmp
push
or
jo
xlat
sub
rclb
xor
cmp
jmp
dec
xchg
int
mov
gs
cmp
shll
dec
bound
lds
lds
mov
mov
sub
and
ret
jno
popf
aam
mov
mov
int
xorb
and
xchg
ret
sub
fs
shll
sbb
sub
pmaxsw
and
jmp
aad
repz
sbb
dec
sbb
sti
adc
test
aad
lahf
dec
ja
fdivr
adc
js
lea
fsubrs
mov
xor
xor
sub
cmpl
cs
or
add
loope
xchg
and
jne
addr16
sbb
fstpt
enter
mov
inc
rorb
out
das
pop
inc
psubw
cmp
xchg
inc
mov
es
push
adc
bound
aad
call
dec
mov
shll
shll
into
mov
lcall
fisubrs
and
dec
jae
shlb
inc
imul
cmp
out
gs
jge
push
mov
or
push
fnsave
int3
xchg
repnz
inc
xor
cmp
sbb
lret
cs
or
pop
adc
out
lods
mov
and
lods
pop
repnz
sbb
dec
jecxz
inc
loop
pop
inc
cmp
cmp
sbb
xor
cmpsb
in
loope
sbb
add
pop
ret
cmp
dec
subl
pop
out
dec
ss
out
and
push
inc
push
ror
hlt
mov
jb
jmp
push
fisttps
jg
inc
test
jle
ret
repnz
pusha
cmp
sub
iret
lret
aad
mov
outsl
jl
mov
xlat
and
dec
and
cmc
jne
inc
or
xchg
mov
shlb
pop
imul
gs
push
xor
aam
and
add
out
shlb
in
pop
add
pop
xchg
outsb
sbb
inc
cltd
jle
imul
loope
cmc
mulb
sti
fcompl
dec
in
clc
fisubrs
inc
insb
stos
pop
dec
cmpsb
aam
mov
aad
in
cwtl
arpl
subl
movsb
xor
and
outsb
movsb
mov
sub
iret
out
ficompl
cmpsl
xor
jg
adc
aad
pop
test
mov
bound
scas
xchg
mov
aaa
ret
add
xchg
inc
sbb
mov
pop
cld
outsl
je
push
add
in
ds
testl
insl
or
inc
imul
stc
and
mov
shrb
loopne
fistpl
jge
push
gs
rorb
fmull
add
dec
or
iret
mov
rcrb
out
arpl
and
sbbb
xor
mov
jo
cs
subb
xchg
or
xchg
movsb
aad
mov
fwait
daa
dec
bound
aas
cli
fistps
data16
adc
fisttpl
adc
hlt
dec
inc
enter
ja
test
xchg
stos
mov
data16
push
mov
repz
pop
lcall
jbe
sbb
mov
jae
jmp
and
or
cwtl
xor
lcall
jecxz
popf
push
ljmp
dec
and
xor
and
adc
dec
push
adc
sbb
mov
cwtl
jmp
bound
xor
pop
or
je
aaa
xchg
and
sbb
lcall
fldl
imul
push
ficomps
mov
stc
or
ljmp
jmp
aam
cmc
cmp
addl
mov
mov
enter
test
xor
sti
or
fidivs
popf
sub
aas
mov
jno
addr16
and
cltd
popf
push
aad
lods
mov
mov
cltd
xor
jae
shrb
sbb
ds
stos
in
mov
mov
outsl
xor
les
sar
jp
sbb
std
jmp
leave
adc
fistpll
dec
clc
or
sahf
push
sbb
jbe
lock
sub
inc
sbb
or
push
add
daa
mov
loop
pop
adc
into
dec
out
mov
std
dec
lcall
scas
adc
xchg
in
jnp
jge
xor
daa
ret
add
lret
imul
jns
xlat
enter
xor
orb
cmp
imul
or
mov
xor
aad
push
and
and
int
int
mov
pop
cltd
and
clc
mov
das
mov
jns
dec
inc
mov
dec
stc
push
mov
xchg
mov
aam
cwtl
xchg
int3
sbb
daa
push
xchg
adc
fxam
inc
out
in
adc
jne
adc
loopne
inc
cmp
cwtl
insl
jmp
in
shll
dec
jbe
jbe
rcll
jmp
cmc
and
xor
cli
sub
in
cltd
cmp
xchg
sub
call
in
mov
sbb
fstl
push
repz
add
adc
sbb
xor
add
mov
ficoms
push
pop
insl
or
sub
ja
pop
or
out
xchg
push
cli
xchg
rclb
jb
push
pop
nop
fstps
xlat
pop
or
xor
das
xor
jo
aas
push
je
icebp
adcb
test
mov
je
imul
scas
xor
sbbb
cmpsb
or
in
sub
cmp
mov
inc
bound
je
mov
pushf
sbb
shlb
sub
or
mov
push
mov
bswap
ljmp
mov
add
fadds
fs
mov
lds
std
mov
adc
or
cli
pop
das
enter
popa
aad
testl
shlb
jge
inc
xor
fildll
jl
mov
je
out
jno
mull
aaa
bound
mov
xor
sarl
push
xchg
lahf
dec
dec
std
fwait
push
popf
lcall
jns
in
mov
nop
inc
and
insl
mov
aad
mov
lock
and
repz
shlb
add
test
mov
fdivs
cmp
insl
icebp
jo
push
sbbl
jg
nop
pop
in
push
push
std
push
std
les
test
repnz
call
lock
hlt
arpl
lods
popa
dec
sbb
faddl
sub
sbb
or
lret
cmp
shll
in
add
add
sub
cld
or
cltd
into
shll
mov
adc
rcrl
mov
mov
js
stc
xor
cmp
mov
jg
inc
mov
wrmsr
push
add
es
push
ds
mov
filds
and
mov
push
arpl
or
dec
pop
out
mov
pop
scas
into
in
xlat
sbb
sub
jnp
into
push
sbb
icebp
mov
sub
cmp
and
xchg
aas
add
test
and
inc
iret
xchg
in
lock
ret
inc
rcrb
rorb
and
mov
add
sbb
mov
movsb
add
js
push
adc
xor
fcomps
fwait
inc
and
je
jl
in
ret
cmp
test
pop
cli
mov
sbb
push
out
sub
cmp
imul
mov
shll
int3
ljmp
mov
sub
adc
js
fwait
arpl
inc
mov
sbb
out
fmul
das
xchg
or
rcrb
pop
inc
hlt
xchg
cmp
stos
imul
movsb
and
and
sar
inc
stos
add
cmpsl
mov
addr16
add
std
sbb
jge
ljmp
fidivl
jb
aad
or
adc
pop
mov
sub
test
mov
les
std
movb
jns
in
popa
rcl
push
in
cmp
cmp
lahf
adc
xchg
dec
sbb
andb
pop
shr
jns
in
inc
sarb
mov
mov
ja
adc
push
cmpsb
outsl
push
cwtl
fs
iret
psubw
es
ja
jns
sbb
out
or
sub
pop
dec
inc
push
scas
or
dec
ficoml
jne
jno
in
les
into
sub
mov
bound
inc
jmp
dec
out
roll
lea
jb
jnp
cmp
xchg
mov
lret
and
xchg
cmp
jp
add
fildll
ds
adc
test
movsb
xchg
outsb
rolb
or
cmc
push
pushf
fidivl
jnp
scas
stos
xor
xor
add
sbbl
dec
test
ds
cmp
ficomps
cmp
popf
jg
mov
inc
outsl
stc
decb
cltd
lea
cs
mov
jg
fs
inc
sub
mull
sar
mov
xor
sahf
pop
pop
xchg
imul
dec
test
cmp
test
sub
mov
outsb
pop
fnstcw
xchg
sub
or
loopne
jbe
loope
xor
cmp
pop
movsl
cmp
mov
mov
mov
mov
je
outsb
nop
imul
mov
ret
mov
dec
mov
fstps
or
adc
pop
loopne
dec
push
jg
jge
add
adc
cwtl
les
pushf
in
pop
mov
pusha
cmpsb
adc
inc
adcl
test
lds
outsb
jne
add
mov
lods
sub
push
adc
sbbl
test
push
xor
rclb
mov
std
push
xchg
mov
popf
mov
dec
test
std
or
ss
or
leave
fbstp
in
pop
cmp
mov
cmp
xor
pop
push
icebp
rcll
stc
stc
dec
pop
call
dec
lret
mov
mov
lret
iret
push
and
pop
lahf
or
pop
inc
push
mov
pop
cmp
in
pusha
test
adc
mov
imul
push
jge
into
or
add
mov
push
add
sti
out
out
std
loopne
fidivs
outsb
push
mov
mov
pop
mov
ret
and
adc
inc
mov
inc
push
push
push
cmp
or
push
loop
cmp
daa
jge
sbb
add
aas
adc
out
jp
mov
and
fsubl
shrb
adc
inc
popa
add
andb
pusha
inc
fiadds
dec
lahf
jae
xchg
repnz
mov
add
cmpsb
cmp
pop
fcompl
adc
pushl
xor
cmp
cmpsb
add
and
jo
fwait
push
out
mov
andb
pop
and
mov
faddp
inc
or
sti
xor
ss
ja
jne,pn
arpl
addr16
pop
loop
cmp
es
sahf
int
lret
cmp
mov
xor
lds
in
jne
sbb
nop
sub
jp
popa
or
iret
lds
lcall
inc
mov
pop
rcll
xor
xor
cmp
out
mov
jmp
mov
and
xor
and
jb
jg
insb
xchg
call
cmp
je
addr16
jle
mov
dec
mov
aas
jecxz
test
hlt
mov
cld
in
call
jo
push
addr16
xchg
movsl
xlat
sub
shrl
xchg
jl
adcl
adc
cs
mov
and
xchg
popa
into
pop
je
punpcklbw
dec
xorl
into
mov
push
nop
pop
test
clc
dec
or
pop
mov
mov
cmc
lcall
sub
shrl
cmc
cltd
push
icebp
iret
leave
adc
mov
cmp
icebp
lahf
mov
jmp
mov
lds
jae
xchg
loope
sbb
nop
test
rclb
addb
sar
pushf
mov
push
push
sti
lret
inc
incl
pop
xor
cmpsl
add
cmpsl
and
sub
jno
aas
lret
call
hlt
adc
jle
xor
inc
xor
sbb
xor
cmp
add
lret
je
or
pop
sbb
xchg
sub
push
lds
sub
ror
push
mov
scas
jnp
cmovle
sahf
leave
cmp
pop
in
fs
fistps
dec
loope
push
rolb
sbb
dec
ja
xchg
pop
sub
daa
cltd
rorb
add
mov
test
push
adc
out
adc
cwtl
or
cmp
leave
out
fwait
mov
push
mov
aas
jnp
push
out
imul
pop
cltd
fcoms
sub
test
mov
arpl
ja
pop
test
js
add
adc
sti
sub
lahf
and
and
inc
pop
ds
pop
jnp
xor
mov
mov
xchg
aas
mov
adc
mov
push
lcall
popa
sti
test
sub
jae
mov
repnz
sbb
arpl
mov
in
add
dec
jnp
mov
int3
mov
addr16
jae
icebp
cmpsl
jo
push
ret
push
loopne
test
sti
inc
xchg
lods
cli
xchg
ret
repnz
in
jp
lret
xor
push
sub
mov
adc
sbb
mov
outsb
push
pop
mov
mov
adc
aam
movsl
sbb
adc
xor
jge
and
push
fcoms
xchg
mov
xor
aaa
in
addl
or
clc
or
repz
pop
test
jle
cmp
mov
inc
inc
mov
lds
pop
xor
pusha
insb
mov
sub
push
loopne
sbb
xchg
bound
jmp
push
mov
mov
or
inc
imul
mov
fbstp
psubusb
gs
jecxz
leave
call
xlat
sbbl
cmp
push
jmp
fldenv
roll
jmp
iret
mov
cli
arpl
jl
loope
mov
fsubs
movsb
pusha
rcrl
push
jbe
data16
rcrb
xor
dec
adc
mov
je
out
popl
insl
xchg
into
pop
push
jl
fwait
cmp
int
jl
xchg
inc
and
pushf
push
dec
mov
popa
clc
fcoml
xor
imul
into
pop
sub
dec
es
add
push
or
addr16
or
andl
cmpsl
std
jo
es
inc
and
inc
movsl
out
into
jg
xchg
jbe
rcrl
cli
mov
leave
mov
insl
cmp
jg
pop
repnz
push
mov
push
mov
inc
lret
insl
push
mov
lcall
repnz
sub
jecxz
fs
lret
push
lods
cmp
ds
cwtl
jnp
rolb
pop
bound
lret
jg
pop
int3
push
lds
xlat
push
pushf
adc
lret
add
xorb
mov
fimull
lret
or
mov
inc
and
dec
addr16
push
push
mov
out
adc
stos
adc
mov
sbb
or
cmp
inc
jmp
out
sbb
test
mov
push
sub
in
pop
inc
xchg
sarl
jne
pop
jo
sub
jo
sbb
or
xchg
mov
mov
cmp
ds
out
fidivrs
push
ret
aam
push
push
xor
adc
xchg
fmul
cmp
sarb
ret
std
dec
stos
inc
iret
loope
jno
test
cmp
out
add
je
jg
jb
inc
lret
icebp
push
xchg
fisubl
aam
in
push
ret
mov
pop
xlat
loop
push
pop
push
stos
cmp
test
aaa
aas
or
mov
scas
and
cltd
fdivrp
outsb
sar
lods
ret
icebp
pop
call
inc
fsts
out
mov
push
add
pop
add
adc
sahf
pop
addl
pop
pop
mov
or
or
jo
mov
mov
insb
loop
or
or
idiv
lods
cmp
and
and
jns
addl
jnp
and
sub
cmp
xor
daa
aaa
inc
push
sbb
sub
jle
ret
mov
daa
sub
jmp
xchg
lret
cwtl
jl
stos
pop
mov
jle
and
xchg
pop
jmp
or
mulb
push
ss
sahf
jmp
fildl
xchg
movsl
orb
sbb
push
sbb
jle
out
jb
dec
inc
xor
xlat
adc
mov
adc
mov
or
cmpsl
iret
adc
mov
int
xor
pop
jbe
xor
aas
add
ss
or
in
xchg
repz
mov
pop
int
inc
out
fs
lods
mov
mov
out
add
pop
xchg
mov
dec
cmp
vminsd
les
lcall
push
in
and
add
adc
push
lahf
pop
cmp
test
mov
inc
sbb
add
test
mov
clc
dec
sbb
pop
add
ret
jg
fchs
dec
inc
outsl
popf
mov
dec
sbb
addb
mul
mov
push
xchg
or
push
pop
cs
and
mul
sub
fcmovnbe
es
mov
or
jp
inc
fisubl
sbb
pop
xchg
sbb
iret
pop
xorl
ss
lds
adc
in
jno
xchg
pop
popf
pop
cmovp
xchg
call
jbe
ss
jle
fildll
arpl
adc
daa
dec
negl
inc
dec
sbb
mov
dec
add
pop
cmp
and
outsb
jge
xor
ss
fiadds
cmp
pop
loop
and
sbb
or
or
or
jbe
jecxz
cmp
mov
lcall
lds
mov
add
pop
adc
aas
pop
pop
sti
insl
jge
imul
dec
xchg
pop
adc
push
movsl
cmc
and
lea
or
xchg
fists
popa
iret
pushf
mov
inc
sub
jae
jnp
mov
mov
sub
ljmp
mov
mov
pop
cs
mov
lret
cmp
in
stc
ss
add
cli
or
fwait
sub
fbld
mov
pusha
hlt
xor
mov
lock
xor
or
xchg
addr16
jne
add
mov
xlat
xchg
test
mov
jmp
mov
into
inc
cmpsl
cmpsb
scas
push
mov
aas
jmp
mov
test
mov
mov
mov
leave
mov
xlat
clc
xchg
push
sub
mov
mov
repz
aas
dec
imul
push
orb
mov
pop
push
test
push
mov
inc
xlat
ss
mov
mov
adc
xchg
mov
adc
pop
jl
add
loop
fs
cmp
jae
arpl
leave
mov
dec
or
stos
xor
adc
and
in
imul
iret
adc
and
arpl
and
hlt
repnz
in
and
shrb
mov
or
mov
sub
mov
mov
xor
ja
xchg
das
cs
mov
ljmp
loope
das
ret
xchg
push
int
mov
jno
push
pop
cld
imul
test
push
pop
nop
sub
jl
mov
clc
push
pop
push
bsr
test
stc
pushf
mov
arpl
mov
int
fcomi
rep
ds
mov
or
and
mov
inc
sub
into
mov
pop
fxch
pop
fsub
mov
into
aad
xchg
and
les
sub
int
loope
ljmp
popf
jb
mov
push
push
xor
push
jp
push
arpl
push
rcll
in
enter
jae
dec
lahf
cld
pop
fisubrs
inc
fdivrs
push
adc
xchg
pop
xchg
arpl
or
loopne
or
sbb
adc
lret
andb
out
aaa
jle
pop
push
gs
pop
arpl
dec
cmp
mov
dec
sbb
stos
mov
rclb
sti
div
add
shlb
sbb
shlb
loop
repnz
movb
push
sbb
enter
fwait
lret
ja
and
mov
sbb
int
loop
inc
dec
pop
inc
into
jns
inc
leave
jb
adc
in
ja
lods
stc
es
sbb
sub
xor
popf
sbb
jl
sarl
jmp
push
aas
inc
xchg
pop
test
xor
inc
addr16
or
inc
cmp
dec
lock
in
jns
xor
push
insb
mov
inc
mov
je
jecxz
pop
mov
jns
imul
mov
and
dec
mov
mov
add
mov
lds
jbe
mov
orl
inc
dec
push
test
rcr
outsb
cltd
testl
mov
mov
imul
hlt
lods
mov
cli
xor
imull
add
scas
add
cs
fcomip
push
mov
xor
push
push
adc
xor
into
inc
add
mov
pop
cltd
mov
lock
jmp
rcrl
test
dec
jp
ljmp
jnp
in
mov
dec
lcall
outsb
cmp
inc
ss
push
fs
jecxz
inc
add
insl
lock
add
scas
out
inc
stos
push
lret
into
fmul
xchg
mov
sbb
mov
jge
cmp
leave
mov
es
dec
stos
inc
pop
outsl
or
fwait
scas
clc
hlt
cmp
dec
dec
and
aas
imul
inc
mov
push
fwait
cmp
outsl
xchg
mov
push
fsubrl
in
cli
pop
jb
rorl
cs
jb
mov
push
cli
pop
shr
jp
aam
xchg
jno
sbb
out
lods
ficomps
push
out
xor
outsw
xor
and
sub
test
push
loop
out
daa
sbbb
cltd
sbb
or
xlat
adcb
pop
fcmovne
sbb
cs
mov
mov
xchg
fcomi
push
or
cmp
pop
cmp
mov
xor
data16
jns
adc
loop
cmp
xor
push
popa
repz
cmp
push
xchg
lods
rorb
and
call
xchg
sub
cmp
or
out
int
and
push
inc
pop
mov
mov
call
bnd
inc
test
setno
add
fistl
push
mov
and
mull
jno
hlt
repnz
inc
sub
mov
lods
sub
js
xchg
bound
push
xor
add
ds
mov
xchg
cmp
mov
pop
adc
adc
loope
in
idivb
jb
nop
aaa
pop
inc
cld
inc
jnp
test
pop
or
lea
lret
fdivrs
cmp
adc
xchg
lahf
lods
out
shrl
repz
sbb
cmc
jmp
mov
jle
clc
repnz
out
into
sub
sub
inc
sub
enter
ljmp
lcall
inc
push
clc
cmp
ds
pop
cwtl
sarb
jge
dec
and
fimuls
xor
adc
pop
movsl
mov
mov
pop
clc
xor
in
leave
pop
push
mov
dec
push
cmp
sar
ja
jne
push
sbbb
lods
std
aam
adc
and
orb
int3
xlat
test
adc
fs
cmc
repz
adc
loope
jmp
or
push
xlat
adc
fwait
mov
pop
or
dec
dec
push
push
mov
pop
jae
jo
xor
out
aad
arpl
xorb
and
je
insb
inc
pop
hlt
sbb
aas
stos
cld
add
sti
cltd
or
push
jmp
fs
div
out
push
cltd
insl
pop
pop
add
mov
pop
fsubrs
and
popa
jno
xchg
and
lods
leave
cmpb
jecxz
aaa
jns
cmp
test
mov
aad
xchg
ret
dec
lret
test
negl
lea
mov
aaa
pop
test
sbb
pop
push
mov
pop
pop
in
xor
and
jae
jp
inc
cwtl
jnp
lahf
xchg
cmpsb
jmp
cwtl
stc
adc
jo
inc
mov
xor
adc
shrb
or
inc
negl
ret
lods
out
inc
pop
or
jns
je
mov
out
iret
out
dec
inc
pop
xchg
add
add
les
jg
pop
sbb
jae
lcall
std
je
inc
xor
mov
cmpsb
std
fucomi
in
not
insl
adc
jns
inc
xchg
mov
jp
cmpsb
mov
popl
pop
mov
adc
jge
out
and
sbb
mov
sahf
add
pop
or
dec
adc
aaa
xchg
cld
shrl
insl
mov
xor
and
xchg
jmp
cmp
add
add
rolb
fists
arpl
sbb
enter
xchg
inc
enter
cli
movsl
push
bound
or
mov
ret
pop
pop
inc
adc
xor
sub
push
add
pop
add
mov
ret
inc
cmp
pop
sbb
lds
xlat
inc
cmp
rcl
xchg
inc
and
xchg
ret
add
pop
xchg
ds
dec
inc
jnp
jno
in
stos
and
mov
sbb
sub
sbb
dec
xchg
inc
xor
addb
dec
test
mov
fnsave
jl
jg
adc
mov
cmp
fstpt
fmull
jo
inc
add
in
mov
and
xlat
jb
scas
std
add
sub
iret
pushf
pop
int3
cmc
pop
sbb
jecxz
loop
mov
jecxz
pushf
mov
fdivl
sahf
mov
mov
std
or
jp
cltd
stc
add
mov
dec
xchg
test
xchg
cmpsl
sarl
cmp
add
out
mov
popa
inc
or
push
cwtl
pop
push
cmp
jo
pop
repnz
out
cmp
aas
aaa
pop
cmpsl
popf
adc
orl
rcl
inc
fistpl
movsb
addr16
inc
out
out
mov
cmpsb
mov
adc
add
insb
in
jo
lret
lahf
and
or
push
cmp
out
jl
cmp
outsb
sbb
popf
mov
pop
pop
mov
sub
loop
push
and
iret
mov
shrb
xchg
cmp
loop
imul
adc
add
out
and
hlt
jb
sahf
call
inc
push
fstl
sub
mov
and
cwtl
pop
scas
dec
movl
fnsave
arpl
ss
loopne
pop
add
scas
shrb
repnz
and
pop
jp
lods
or
pushf
add
out
scas
das
jp
push
stc
mov
dec
fdivs
loopne
ss
mov
je
mov
stos
jnp
and
fsub
test
push
mov
xor
in
rcrl
aaa
cmp
fmull
xchg
push
push
sbb
mov
lcall
cmp
in
cmpsl
fildll
add
test
and
adc
and
ljmp
repz
add
movsl
testl
mov
aam
sti
sbb
mov
scas
adc
test
jecxz
out
xor
xchg
enter
mov
sbb
loop
pop
out
outsl
gs
push
cmpsb
repz
mov
push
out
gs
push
inc
xor
jecxz
sbb
push
leave
jo
xchg
fisttps
push
push
jne
mov
sbb
mov
das
loop
add
mov
adc
je
pop
xor
push
add
ds
test
xchg
out
push
leave
sti
sub
push
jmp
adc
sarb
mov
push
mov
inc
and
pop
mov
sub
push
pop
xchg
sub
mov
rcll
lahf
mov
lcall
pop
mov
inc
jae
sbb
div
out
jge
jno
push
xchg
push
fcoml
popf
test
out
cmp
xchg
ror
cmpsl
push
int
mov
cmp
divl
ficomps
and
and
jno
jg
jl
inc
sub
in
addr16
cmpsl
stos
dec
roll
out
xchg
lea
andb
push
pop
shlb
clc
push
ds
daa
mov
mov
aaa
or
data16
cltd
mov
cmpsl
jno
ljmp
adc
push
je
xorb
clc
add
rcrb
cmp
stos
mov
push
jb
mov
mov
fisubs
cltd
jbe
sbb
movsb
fwait
rcrb
lock
mov
xchg
sbb
and
xor
pop
mov
inc
ret
push
insb
xchg
push
test
pushw
sbb
xor
add
mov
mov
sbbb
adc
inc
push
and
cltd
repnz
sub
int
mov
inc
loope
pop
mov
or
xchg
xchg
mov
shl
or
add
xlat
popa
rcll
iret
insl
xor
out
fistpl
push
push
dec
fwait
jmp
in
or
or
xchg
mov
enter
outsb
orb
aam
sub
push
add
data16
in
push
adc
inc
pop
frstor
std
or
push
ret
push
fnstsw
lahf
repnz
and
jnp
push
and
lcall
lods
mov
inc
sub
clc
imul
mov
rolb
cmc
pusha
les
popa
mov
add
and
dec
sub
stos
pushf
cmpsb
out
ja
int
lock
stc
call
pushf
in
ja
out
xchg
ja
js
sub
xor
cmpl
mov
or
je
inc
notl
fsubrl
and
add
jo
mov
mov
popl
push
in
in
and
xor
vpmacssdd
inc
adc
arpl
jle
sub
cmp
daa
mov
cmpsb
cmp
addr16
mov
mov
insl
rclb
sbb
nop
bound
aam
ret
xor
fidivrs
mov
sahf
subb
mov
icebp
loop
ret
rcrb
outsl
xor
and
mov
rcrb
or
xchg
add
jns
cmp
adc
sub
rolb
mov
fsubrl
jle
dec
jo
xor
add
pop
cltd
cmc
or
ja
inc
lcall
dec
jecxz
pop
xor
std
clc
sub
add
adc
into
lcall
mov
fs
mov
inc
pop
leave
repnz
sbb
pop
push
inc
dec
dec
fsubl
iret
lock
popa
mov
xchg
mov
add
mov
and
ror
jg
dec
shlb
aad
push
not
dec
stc
pushf
fdiv
orl
inc
sbb
stos
cld
mov
jge
std
call
ficoml
insl
push
push
loopne
inc
adc
imul
jp
aas
cmp
cmp
sbb
repz
and
dec
sti
cmp
mov
cmp
subl
fiadds
nop
stos
push
mov
or
sbb
adc
push
sbb
leave
pop
xchg
sbb
fldenv
divl
iret
jo
xor
xchg
xchg
es
insb
repz
push
push
push
xor
jns
fidivl
fs
mov
add
jb
and
sbbl
in
aad
and
mov
add
xchg
fmuls
pop
dec
fsubrs
sbb
movsl
aad
scas
pop
out
outsb
dec
inc
fisttps
ss
sbb
insl
repz
cmpsl
add
neg
out
fs
xor
mov
mov
mov
cmp
lahf
lea
in
add
in
lcall
sbb
sarb
pop
jne
fbstp
movsl
adc
or
mov
mov
mov
mov
xor
outsb
loopne
xor
xorb
ret
imul
add
clc
jno
xlat
pop
and
ret
dec
stc
test
cs
cmp
int3
in
imul
jb
bound
mov
xor
ret
mov
dec
std
cltd
push
push
jo
push
mov
loopne
push
sub
js
in
out
cld
testl
dec
ds
repnz
addl
xor
lds
mov
adc
scas
add
in
dec
mov
jle
mov
lods
shll
inc
inc
jle
or
or
mov
sub
jp
mov
jmp
xor
aam
lds
sub
jle
ret
nop
sti
xor
inc
mov
xor
imul
sub
mov
arpl
pop
dec
mov
or
repnz
scas
les
repz
or
orb
add
pop
dec
shr
push
scas
cli
pop
and
dec
inc
and
insb
popf
pop
pop
loope
mov
or
gs
std
adc
jno
mov
lea
and
jge
sub
lea
xlat
stos
cmpl
scas
rorb
ret
lds
jg
dec
lods
cmpsb
inc
sub
adc
stos
mov
mov
adc
push
or
mov
repnz
sti
mov
push
mov
in
xchg
cli
int
adc
leave
cltd
std
mov
mov
fldpi
scas
adc
mov
add
or
addl
mov
in
inc
sbb
mov
mov
sbb
mov
sub
nop
jnp
bound
leave
inc
sub
jg
sbb
pop
push
add
repz
adc
cmp
fisttps
test
test
push
jmp
mov
jl,pt
lds
mov
add
es
out
mov
enter
xor
push
sbbb
adc
sbb
mov
xor
clc
lret
xchg
out
mov
popa
ds
lods
dec
sbb
popf
mov
insl
addl
repz
mov
adc
add
lret
xor
push
add
mov
scas
mov
jmp
das
cs
fnstcw
and
pop
lea
mov
mov
fwait
and
lret
cmc
sbb
inc
jge
pop
mov
in
add
xor
and
loope
decb
ja
dec
out
adc
adc
test
or
add
or
sbb
hlt
or
out
jno
cmp
in
pop
lods
out
pop
andb
sbb
and
arpl
insl
dec
sbb
mov
repz
mov
ret
aam
cmp
sbb
test
push
lods
subb
lahf
push
lock
jg
ja
sbb
ficoms
inc
fcmovnb
mov
xchg
cmp
cltd
out
push
lock
mov
pop
scas
aaa
mov
push
xchg
xchg
lret
cmpsl
adc
and
dec
sbb
jl
push
mov
fdivp
lcall
subl
sbb
addr16
lret
rorl
adc
imul
lcall
cmp
sub
mov
dec
std
int3
movsl
loope
and
xor
js
inc
inc
mov
scas
sub
pop
mov
ficomps
hlt
ja
out
aas
sbb
and
pop
sub
xchg
inc
or
inc
js
jmp
xchg
mov
mov
sbb
xor
lret
lret
fidivrs
aaa
insb
lahf
cli
dec
lea
pushf
pop
ss
mov
adc
movsb
fs
roll
jp
mov
sub
cmp
fnstcw
aad
fwait
adc
inc
mov
inc
sub
in
mov
repnz
imul
sahf
fcomps
or
fwait
loope
mov
xor
dec
das
in
aad
enter
add
mov
push
pop
jnp
stc
dec
stos
jae
pop
mov
fstl
jno
jo
repz
rorb
stos
sbb
cmp
xchg
imul
das
cmpl
or
imul
fstpl
inc
rolb
mov
test
dec
outsb
cmp
ss
cmp
roll
outsl
jl
cld
adc
push
push
cmpsb
scas
nop
push
pusha
jne
repnz
cmp
add
dec
lds
sub
loope
xchg
or
push
pop
psrlq
scas
cwtl
jne
testb
lods
pop
xchg
outsb
pop
out
fsubr
pop
sbb
in
push
call
call
sub
push
data16
mov
pop
cmpl
mov
dec
ror
and
jge
jb
push
movsl
test
sbb
or
les
sub
out
outsb
ret
femms
sbb
dec
sub
aad
mov
pop
in
movsb
pop
adc
adc
pushf
push
mov
in
stc
loopne
ja
adcb
shl
sub
push
push
cs
arpl
pop
es
jnp
mov
imul
loop
lods
xor
cltd
cmpsb
std
mov
cmp
test
mov
call
mov
shlb
pop
and
sub
xchg
cs
cmpsb
ja
repz
ljmp
dec
pop
jecxz
aam
aad
xlat
push
inc
mov
or
addb
insb
xchg
es
mov
pop
in
jnp
cltd
xchg
xor
mov
stc
pop
add
aas
cmp
lods
dec
popf
or
sbb
sub
or
pop
aas
popf
inc
mov
xor
int3
xchg
xor
lret
inc
aas
sbb
jbe
ret
mov
mov
mov
out
out
into
mov
fwait
ss
xlat
dec
clc
stos
stos
cmc
sbb
xor
es
add
cs
scas
jo
mov
clc
and
dec
jmp
jmp
cmp
xchg
or
xchg
jge
aaa
jle
cmp
dec
cmp
jo
cs
dec
das
out
shll
call
test
dec
jno
mov
in
insl
into
mov
fbld
out
rorb
xor
call
es
nop
xchg
gs
sarl
or
xlat
imulb
loope
and
pop
loop
pop
nop
xchg
fsubs
lret
cli
dec
popf
outsb
test
cs
fs
or
mov
pop
xchg
in
and
jb
add
adc
push
jmp
xor
mov
int3
jb
pop
mov
stos
int
fdivs
mov
dec
sub
mov
jne
or
insl
pop
push
test
scas
inc
jp
data16
or
cmp
cmp
dec
cs
inc
sbb
or
and
mov
push
cmc
push
push
fnstenv
leave
and
hlt
cmp
inc
fisttpll
dec
leave
test
or
leave
mov
int
xchg
cld
cmp
out
lds
jg
inc
sub
sbb
inc
packssdw
rcr
xchg
iret
mov
arpl
add
push
mov
cmp
mov
jne
popa
mov
mov
cs
sbb
rcll
stos
fwait
imul
sub
pop
sbb
push
and
or
mov
or
fsub
fistps
adc
sbbl
daa
icebp
sbb
sbb
in
cmpl
loop
lret
lods
pop
pusha
hlt
inc
push
cli
in
cmp
push
mov
ffreep
in
mov
inc
mov
pop
mov
scas
pop
in
fidivrs
icebp
sub
in
movsl
das
lods
iret
dec
dec
loope
fwait
or
ror
sbb
mov
push
xor
je
dec
dec
repnz
sbb
dec
inc
lahf
push
out
sbb
xchg
aas
out
dec
push
sub
and
inc
dec
jb
addr16
outsb
cmp
jge
or
cmp
bound
lods
fldcw
push
mov
mov
ljmp
outsb
sub
jl
xor
and
clc
rolb
jae
xor
dec
dec
movsl
pop
orl
out
aad
or
je
xor
in
movsl
dec
and
jb
mov
xor
and
bound
fcoml
andl
cmpsb
or
out
ss
data16
ret
and
dec
mov
jecxz
or
push
jp
adc
das
test
cld
movsl
xor
cmp
mov
dec
adc
inc
dec
sbb
loope
les
and
add
and
sub
pop
imul
add
ficomps
and
pushl
popf
xor
enter
mov
mov
add
test
icebp
xor
popa
clc
push
popf
sbb
dec
lret
ja
repz
int
nop
fistpll
xchg
pusha
dec
sbb
xchg
setl
mov
add
mov
mov
jle
testl
fnstcw
mov
dec
cmp
cltd
add
and
jmp
xchg
inc
insb
pop
jmp
jnp
ret
fs
jl
popa
mov
cs
fcomp
rolb
dec
xor
cmp
xchg
dec
fsubs
and
jno
inc
jle
daa
pop
mov
xchg
xchg
sub
jbe
mov
mov
jbe
clc
sub
xchg
sub
and
movnti
and
rcrb
push
roll
shl
ret
pop
cmp
dec
popf
in
subb
mov
inc
imul
mov
test
orl
sub
frstor
imul
imull
pop
jno
cmpsb
jns
inc
stc
ds
pusha
pop
aam
xchg
inc
lret
lahf
repnz
mov
pop
mov
dec
clc
mov
pop
scas
js
sub
inc
add
pop
mov
outsb
hlt
sbb
dec
xchg
lods
cld
lcall
push
xchg
adc
cli
and
mov
or
dec
movsb
pushf
jmp
and
sub
sbb
repnz
out
mov
inc
adc
lret
mov
testl
mov
es
rcl
stc
shlb
inc
into
enter
scas
int3
lret
fwait
xor
or
or
add
sarl
cmp
mov
or
pop
jns
adc
xchg
or
int3
int
pop
or
jg
xor
mov
das
aaa
or
xlat
cltd
inc
mov
lret
xchg
jo
mov
xor
mov
sub
push
leave
andb
xor
sti
in
mov
mov
push
mov
sbb
mov
in
sahf
sarb
popa
sub
popa
addr16
push
sub
movb
mov
sbb
dec
push
mov
sbb
stos
sbb
idivb
sahf
jno
repnz
inc
ja
outsl
pop
gs
push
test
push
mov
sub
jecxz
das
lea
test
jne
leave
xor
pop
sub
add
sub
xchg
das
in
xor
pop
sbb
jb
iret
inc
icebp
inc
std
push
jl
cmc
push
and
stos
rolb
lcall
pop
sahf
gs
xchg
jb
repnz
adc
ljmp
and
insl
mov
pushf
pop
jno
sti
mov
ss
ret
lea
fisubs
mulb
out
jo
sbb
and
or
xchg
xchg
test
mov
ret
cmpb
jo
imul
xor
mov
in
repz
mov
cmpb
out
ss
push
adc
in
add
jb
test
leave
adc
xor
sub
cmc
jo
hlt
mov
add
sahf
inc
xchg
leave
aas
sbb
sub
jo
mov
and
jl
rolb
movsl
loopne
pusha
cmp
into
outsl
out
or
xor
test
push
adc
shufps
repz
lods
sub
and
xor
cmpsb
push
mov
cmp
shll
aad
xchg
xchg
xchg
mov
pop
arpl
rclb
es
shrl
push
test
lea
xor
outsl
out
or
out
mull
mov
pop
fimuls
fnstenv
ja
out
pop
sub
dec
xchg
data16
sbb
sub
dec
inc
push
je
cmpsb
ss
arpl
sbb
lods
and
adc
outsb
addr16
sub
or
lea
or
insb
jg
mov
les
mov
xor
sti
jl
pusha
outsb
mov
mov
mov
adc
push
daa
jnp
sub
shrl
or
mov
ljmp
or
in
pop
sbb
out
stos
lahf
push
data16
add
inc
mov
lahf
mov
out
xor
jecxz
outsl
daa
mov
mov
rorb
inc
inc
dec
or
orb
outsb
unpckhps
cmpl
cmp
sti
sarb
imul
fistl
fs
push
cmp
sub
lea
mov
subl
cmpsl
mov
fnstenv
and
xor
shll
pusha
pushf
mov
xchg
dec
lods
mov
xor
cld
nop
dec
insl
movsl
rorl
lcall
jns
aam
dec
push
lahf
mov
mov
adc
pcmpeqw
insl
jp
xchg
mov
xchg
jecxz
stos
mov
cmpsb
push
in
mov
sbb
inc
sbb
fstp
aaa
cmp
test
cmp
push
jg
rcll
jge
inc
loopne
xchg
cmp
sub
sub
sar
add
arpl
mov
repnz
icebp
leave
test
fistpll
fwait
daa
sub
repnz
jnp
pop
lods
and
loope
fiadds
xor
or
mov
and
pop
mov
mov
stc
xlat
test
xor
and
pop
mov
dec
bound
iret
push
inc
fstps
or
into
movsb
mov
repnz
outsb
jl
mov
das
repz
sub
pop
inc
lret
rorl
jb
fstps
and
push
mov
or
mov
cwtl
push
xlat
insb
aad
popf
cmp
jmp
pop
push
std
out
int
add
mov
or
pop
ljmp
xor
mov
push
cli
inc
mov
xchg
movsl
ja
popl
pop
xor
adc
es
testl
vmwrite
push
mov
shl
stos
add
add
push
filds
cmp
sub
jns
jmp
or
je
icebp
out
fsubr
xchg
in
daa
jl
movsl
push
inc
call
orb
pop
lock
das
push
pop
sbb
rorb
push
mov
push
sbb
add
dec
hlt
or
cwtl
xchg
pop
into
std
outsl
mov
sbb
mov
mov
popf
and
jne
lahf
add
stc
jb
clc
or
dec
repz
lods
in
xchg
jnp
jo
pop
daa
push
xchg
test
mov
cs
enter
xchg
inc
ja
inc
pop
aam
shlb
cmpl
jl
jge
pop
or
ss
xor
add
or
neg
mov
int3
out
dec
stc
pop
jne
sbb
loope
fidivrs
das
push
ds
jp,pn
js
push
push
mov
int
push
mov
js
jno
mov
and
mov
xchg
sbb
gs
jg
push
pop
mov
pop
xchg
xlat
sbb
test
sbbb
stos
adc
sarl
inc
push
or
aam
pop
in
popf
mov
popa
mov
xor
dec
sbb
pop
data16
mov
dec
cwtl
stos
xor
js
fbld
mov
cmp
adc
in
pop
mov
or
mov
xchg
cmp
push
mov
sti
push
fiaddl
xchg
das
cmpsb
imul
dec
add
divb
fstpl
out
ja
roll
sub
rclb
fcmovnu
ja
jns
lods
sbb
adc
mov
std
loope
std
shrb
mov
or
dec
js
cld
jl
mov
jns
adc
loop
mov
push
ret
mov
mov
mov
cmp
in
xchg
into
cwtl
stos
mov
cmp
call
inc
mov
ds
mov
xlat
mov
lret
ljmp
inc
fwait
pop
pop
rcr
rcl
lds
mov
lock
scas
sub
push
lock
add
inc
iret
fnstsw
movsb
outsb
insb
fsubrl
pushf
pop
or
test
xchg
icebp
shrl
mov
jl
frstor
lds
pop
js
test
stos
push
dec
hlt
sbb
or
sub
ds
dec
sub
ss
mov
loope
pop
mov
outsb
push
lods
cli
stc
fisubs
sbb
xor
andb
push
jle
adc
and
cmp
inc
cmp
pushf
sub
and
or
sbbb
subl
sub
dec
jo
adc
roll
or
add
mov
mov
nop
jl
cltd
clc
fisttpll
mov
lods
adc
ds
sahf
lcall
cs
push
dec
push
popa
sbbl
lods
xor
inc
or
aaa
push
xchg
mov
xchg
rcr
dec
jbe
mov
lret
test
test
popf
imul
pop
lods
cs
imull
iret
and
adc
or
pop
push
mov
into
test
mov
sub
fdivl
mov
dec
cmc
pop
cmp
test
adc
mov
and
aam
adcb
lcall
mov
jns
xor
adc
pop
mov
rorb
mov
adc
call
adc
ss
cltd
pop
mov
cli
pusha
popa
dec
pushw
aaa
fsubs
dec
decl
sbb
mov
sbb
loop
repz
out
cwtl
nop
aaa
mov
pop
push
and
adc
xor
nop
pop
daa
jae
je
iret
iret
es
in
add
imul
fbstp
add
mov
iret
scas
xchg
outsl
loopne
aad
cmp
pop
inc
dec
insl
ret
jo
lahf
mov
lods
iret
mov
jg
inc
and
lock
push
ds
pop
sti
jae
xor
fldl
hlt
mov
nop
lock
sub
loop
pop
xchg
shr
dec
test
mov
add
mov
jp
inc
add
adc
push
fidivrs
push
inc
cli
aam
adc
call
xor
inc
inc
cmp
mov
sahf
es
dec
and
push
push
test
repnz
mov
or
pusha
lret
lret
je
push
insb
jns
dec
mov
cmp
cmp
jbe
mov
or
xor
cwtl
jns
ret
push
out
ret
loope
nop
je
dec
jl
mov
xor
xchg
xor
adc
lret
addb
and
adc
insb
inc
data16
leave
andb
call
xorb
mov
into
fdivs
fwait
out
daa
xlat
jo
push
cs
jae
xchg
mov
sbb
xor
adc
mov
imull
xchg
adc
lds
pop
fnstenv
cmp
pushl
cs
push
push
adc
inc
push
jo
test
call
pop
jnp
inc
cmpsb
shll
cmpsl
pushf
add
nop
add
dec
shl
mov
inc
scas
xor
in
out
adc
leave
and
jge
sbb
loopne
popf
mov
dec
loop
xchg
mov
and
repnz
mov
adc
sbb
aad
mov
jg
daa
inc
mov
jns
inc
add
xor
out
mov
sub
push
adc
pop
mov
stos
insl
cmp
cmp
sub
repnz
inc
ret
cmp
mov
xchg
push
jbe
push
jno
and
jno
push
negl
stc
mov
pop
dec
or
ja
mov
pop
push
lock
rorl
addr16
jbe
bound
cmp
lret
dec
mov
dec
leave
pop
pop
mov
shlb
push
jmp
cmp
faddl
mov
mov
or
out
pop
sbb
out
aaa
and
int
cmp
lods
cmp
cmp
js
jae
popf
mov
xor
lods
stc
dec
or
scas
mov
idiv
fnstenv
and
movsb
mov
xchg
xchg
mov
mov
lea
add
cmp
dec
xor
in
push
adc
or
pushf
stos
repnz
pop
test
mov
sbb
mov
mov
or
or
pop
push
ja
fwait
iret
sbb
inc
jae
scas
sar
jo
inc
mov
jl
adc
jbe
jne
repnz
jo
fcoms
lgdtl
or
out
out
imul
jge
int3
sti
ja
jns
jns
mov
dec
xlat
aam
adc
jnp
int3
mov
and
jnp
in
mov
call
popa
out
xchg
arpl
out
push
and
lock
xchg
dec
sbb
push
fsubrl
add
push
jns
jbe
jne
lahf
arpl
shr
adc
xlat
inc
cmp
ja
dec
push
xlat
xor
mov
repnz
jnp
jae
mov
es
mov
je
xchg
pop
scas
call
xchg
fistpll
lock
mov
out
out
jmp
xchg
icebp
insl
in
out
loop
lahf
and
insb
pusha
cltd
dec
cmpsb
mov
and
cwtl
test
mov
mov
cmp
jbe
jnp
xchg
mov
popf
fisttpl
in
inc
mov
int3
mov
jmp
xchg
lods
pop
pop
scas
xor
push
orb
mov
sbbb
push
cmp
mov
dec
sbb
call
repnz
test
test
add
in
imul
fmuls
xchg
inc
loope
fcmovne
mov
jecxz
das
ret
and
push
pop
xor
jbe
mov
push
jmp
inc
sbb
ret
xchg
xor
insl
outsl
les
mov
das
cmp
inc
movsl
pusha
mov
and
shrb
or
out
xchg
xor
push
mov
scas
bound
fld
inc
out
mov
clc
cld
lahf
mov
sub
aas
call
sbb
test
xor
cmpsb
push
inc
icebp
or
and
rep
lretw
xor
pop
xchg
repz
xor
jns
popf
sbb
dec
aad
dec
call
aam
hlt
repz
push
shll
xor
loope
scas
mov
mov
outsb
in
fsubl
inc
mov
sub
sub
jbe
ret
jo
hlt
mov
int3
dec
mov
inc
xchg
dec
push
fwait
sub
loopne
inc
jl
repnz
icebp
mov
add
mov
jl
adc
movsl
cs
pop
bound
mov
gs
lret
dec
jo
xchg
and
pop
bound
xor
inc
add
lods
dec
icebp
sub
jmp
jbe
mov
jle
jp
jge
push
jecxz
stc
popa
pop
inc
push
rolb
jp
pop
out
sub
mov
sahf
pop
jp
incb
mov
mov
cmp
xor
sti
mov
dec
mov
ds
imul
or
std
stc
mov
in
add
fisubrl
push
je
xor
fwait
sarb
cwtl
mov
sbb
out
inc
mov
adc
inc
cld
mov
push
mov
xor
inc
pop
std
or
outsl
dec
or
lret
jmp
cmp
enter
ljmp
dec
push
jl
inc
jp
push
in
push
cmp
cmp
mull
pop
adc
add
jbe
jns
mov
and
jb
lods
rcrb
push
sub
or
sbb
push
repz
push
or
push
sub
out
push
jno
sar
mov
or
pop
nop
in
lret
stos
leave
int
or
pop
ja
imulb
and
fdivrl
into
pop
mov
cwtl
pop
sbb
sbb
out
pop
scas
out
xchg
push
and
xchg
ret
movsl
movsl
or
mov
scas
mov
addr16
stos
mov
test
shrb
hlt
out
popa
rcrb
cs
loop
push
insl
mov
bound
jg
outsb
popf
and
lock
imul
push
mov
jae
pop
add
fwait
int
mov
ja
dec
dec
xchg
xchg
jne
sub
push
xor
xchg
or
xor
fcompl
xor
adc
pushf
aas
xchg
sub
sub
and
lahf
shrl
cmp
pop
loope
jae
icebp
inc
lahf
cli
into
xor
loopne
ljmp
pop
test
mov
dec
ficoml
inc
mov
mov
xor
mov
xor
lock
neg
outsb
inc
out
mov
mov
jg
dec
pusha
add
jbe
cltd
mov
jle
push
in
ljmp
mov
lods
push
inc
sub
mov
push
mov
dec
jo
sbb
adc
into
inc
xlat
jb
jns
push
test
sbb
sti
inc
decl
jb
xor
mov
dec
add
mov
repz
lock
mov
pop
test
popa
sti
cmpsl
and
lds
add
and
fstpt
push
push
jns
mov
mov
lea
xchg
mov
add
shlb
scas
cmp
insb
sahf
addb
pop
adc
es
xor
lret
pushf
inc
inc
lahf
cwtl
das
data16
mov
jae
pushl
lahf
and
mov
push
pusha
shll
rorl
int
pop
jo
mov
xor
imul
cvtps2pi
or
cmp
pop
lahf
cmp
repz
lds
mov
jbe
add
cs
test
and
sub
inc
jg
push
adc
mov
or
pop
jge
outsb
stos
lds
xor
inc
or
pusha
dec
insl
fidivrs
sbb
lcall
xor
push
dec
xchg
fnstsw
cmc
or
xchg
pop
mov
push
cmpsb
dec
or
push
xor
loope
daa
lret
push
push
add
adcl
push
adc
in
mov
mov
psubd
pop
pop
jl
mov
loopne
pop
sbb
cli
dec
in
lret
fs
lods
inc
mov
mov
mov
mov
mov
cli
sbb
sub
mov
sbb
adc
test
and
popl
lret
push
hlt
inc
inc
jnp
sub
jnp
nop
stos
pusha
popa
mov
sahf
xchg
push
sbb
pushf
jbe
adc
aaa
sbb
jne
cmpsl
mov
sahf
inc
aad
cmp
cmpsl
mov
lret
adc
test
out
fs
lret
mov
mov
sub
mov
inc
mov
or
pusha
data16
mov
andl
adc
fdivs
mov
mov
pop
ss
sti
dec
or
aad
roll
pop
mov
daa
xrelease
xlat
imul
add
xchg
jns
jo
xchg
jbe
jl
sub
fsts
jbe
out
loope
dec
sub
cmpsb
inc
in
and
add
cmc
cmp
call
insb
cmp
xor
rep
mov
dec
test
jne
pop
dec
push
fmul
xor
sub
add
mov
cmp
push
inc
loope
jns
fwait
les
insl
or
fidivl
push
fcmove
scas
xchg
adc
fmull
add
and
push
leave
sarl
popf
mov
cld
fildll
pusha
fimull
add
mov
int3
frstor
movsl
cmp
adc
frstor
orb
inc
js
cmpsb
std
xchg
inc
das
scas
push
fdivs
mov
les
sti
xor
ljmp
insl
fistl
mov
cltd
js
fwait
repz
lock
and
sti
sahf
inc
hlt
cmp
mov
cmp
lret
mov
cmp
inc
or
imul
sar
jge
lea
xchg
fnsave
std
pushf
fildll
inc
xchg
shlb
fwait
mov
cmp
jl
dec
stos
in
gs
cmp
sub
jmp
add
mov
adc
arpl
test
icebp
push
cmp
cli
lret
sbb
iret
sti
pushf
cwtl
jp
loopne
sbb
test
mov
rolb
movl
aas
inc
lcall
adc
xor
out
inc
xchg
ret
jne
xor
data16
pop
repnz
or
subb
sbb
adc
or
add
mov
cmp
fs
cltd
cmp
fstpl
push
or
or
sbb
mov
jecxz
mov
rclb
xor
mov
or
sub
bound
add
not
pop
mov
nop
xchg
aad
aas
movsb
cld
mov
sbb
sbb
fstps
cmp
sarb
out
incl
sub
dec
dec
loop
imul
dec
cwtl
pop
and
cmp
in
call
and
and
loope
popf
call
ds
xor
pop
adc
or
sub
in
inc
je
clc
cltd
fsubr
stos
or
mov
out
mov
popl
icebp
movsl
pop
mov
repz
and
push
inc
mov
or
jne
mov
xor
loope
xor
outsb
xchg
xlat
mov
repnz
fiadds
mov
or
lods
into
fstl
inc
mov
inc
fdivp
inc
fcmovne
lret
mov
dec
push
xchg
std
inc
sbb
loopne
cmpsl
pop
mov
repz
xchg
aaa
pop
xchg
in
pop
xor
xor
or
jecxz
pushf
imul
aaa
jge
jbe
xlat
jmp
push
dec
jmp
mov
xchg
mov
push
mov
mov
nop
mov
popa
mov
inc
insl
jmp
xchg
xor
jle
cmp
pop
pushf
and
xchg
fbld
vmwrite
stos
addr16
sbb
mov
sub
fisubl
xchg
mov
push
pop
pop
je
dec
pop
xchg
cmp
fisttpl
iret
out
push
notl
decb
inc
ret
push
xor
cmp
or
xor
int
imul
movsb
in
inc
fldcw
test
leave
push
es
mov
xor
jge
mov
aad
and
and
lcall
inc
pop
lret
mov
repz
lcall
insb
fwait
sbb
push
mov
pop
cwtl
stos
ficoms
fwait
imul
adc
xchg
dec
iret
push
sbb
movsb
data16
or
lods
shlb
leave
lea
incl
clc
dec
sbb
in
and
sub
sub
setb
mov
push
dec
lcall
sub
ja
xlat
fs
repnz
adc
pop
ja
mov
loopne
hlt
mov
outsl
test
rolb
out
cmc
mov
or
adc
sbbl
mov
aam
xor
iret
jbe
mov
inc
sbb
xchg
fstpl
lds
insl
fmuls
mov
fisubl
scas
mov
aas
mov
mov
dec
xchg
push
mov
in
shlb
iret
sub
push
or
or
in
ret
test
push
test
mov
or
popa
jg
adc
sbb
add
pushf
js
dec
sub
loope
clc
dec
adc
jge
mov
mov
mov
cltd
lea
cwtl
fcmovnb
icebp
test
in
jmp
mov
pop
or
cmp
das
sti
in
push
rcll
dec
in
inc
fldt
xchg
dec
jge
xchg
jle,pt
dec
jg
sbb
leave
movsb
and
inc
pushf
push
sbb
arpl
xor
popa
mov
xor
or
dec
push
mov
loope
loope
call
pop
or
pop
js,pt
shrb
arpl
ja
sub
mov
out
ret
mov
ss
in
jo
ja
in
mov
imul
sub
adc
arpl
push
mov
hlt
push
int3
icebp
jmp
shl
or
aad
inc
pushf
flds
in
lock
loope
pop
push
xchg
fs
int3
xor
fisubrl
or
ja
mov
cmpsl
loop
lcall
inc
mov
cmpsb
sbbl
sbb
in
mov
test
push
jo
popl
xchg
mov
xchg
loopne
pop
xor
leave
ja
pop
lea
mov
cmpsb
xor
add
fisttpll
and
add
lahf
sub
mov
sahf
pop
push
cmp
test
push
pop
xor
jae
cmpsl
add
add
add
mov
sub
in
fiaddl
mov
orb
pop
mov
in
and
dec
icebp
or
in
test
insl
ror
mov
lea
xchg
jp
xor
vmovlpd
xchg
jg
dec
inc
nop
push
xchg
loope
push
cmp
jbe
adc
adc
push
rolb
add
gs
mov
lods
aas
add
scas
ret
stos
xchg
mov
fsubl
jns
cmp
insb
lret
loop
cmp
inc
sahf
or
ljmp
adc
orl
jge
stos
ret
xchg
jnp
mov
in
scas
mov
sbb
xor
mov
int3
fcomi
std
addb
xchg
mov
cld
mov
xor
xor
mov
gs
cld
mov
push
or
cmp
add
mov
xorb
jge
std
out
adc
sub
inc
jno
incb
pop
test
outsb
mov
xor
cltd
sti
pop
cmp
jp
rorb
insb
stos
enter
xchg
bnd
xchg
sub
jge
ja
in
aas
das
xchg
mov
stos
clc
jno
fistpll
mov
call
jno
out
inc
roll
movsl
insl
cld
lahf
jmp
inc
jbe
cli
jecxz
xchg
and
sbb
icebp
hlt
add
pop
fnstsw
pop
mov
mov
push
int3
mov
dec
inc
cmp
sbb
mov
xchg
sbbb
icebp
and
cmpb
jp
xor
popa
rclb
push
lea
ss
dec
jge
dec
adc
xchg
push
fwait
mull
stos
cmp
inc
mov
outsl
push
push
pop
lds
mov
adc
leave
push
sub
push
fistpl
mov
push
in
xor
outsl
sub
pusha
outsl
shl
and
dec
xor
pop
sub
add
sub
out
sbb
scas
pusha
in
jge
mov
into
push
dec
clc
push
out
mov
test
icebp
mov
and
int
popf
jb
lods
cwtl
out
or
and
push
filds
cmp
gs
idiv
out
lods
mov
test
inc
or
xchg
scas
dec
cltd
test
data16
push
cmp
ds
out
mov
jge
hlt
mov
das
dec
lea
dec
xlat
add
add
sbb
outsl
ljmp
sbb
pushf
adc
fwait
pop
and
mov
outsb
shl
mov
stos
stc
out
adc
inc
jns
xor
divl
xchg
xchg
push
mull
stos
and
dec
xchg
pop
sub
jg
mov
leave
dec
cmc
in
cli
pop
push
pop
mov
fwait
mov
js
fiaddl
in
das
fdivrl
mov
in
repnz
pusha
call
and
or
imul
pop
cmpsb
or
dec
repz
lret
stos
popf
subl
lahf
push
add
add
daa
pop
push
mov
sbb
test
and
jb
inc
sbb
jmp
sbb
sti
sbb
jnp
shll
outsl
xlat
nop
leave
mov
scas
addr16
jbe
jmp
or
jmp
nop
mov
loope
jnp
cmpsb
andl
sub
mov
pop
cwtl
mov
adc
or
adcl
pusha
dec
mov
in
cmc
int
imul
loope
mov
push
and
and
xchg
stc
mov
testl
outsb
mov
in
cmp
xor
stos
shll
std
or
jb
sbb
js
xchg
arpl
loope
in
lret
popa
mov
insl
sub
fsubs
incl
loope
test
add
inc
and
add
loope
xchg
inc
ja
or
sahf
xor
leave
mov
es
sub
cld
testb
cwtl
jp
cld
mov
and
icebp
je
dec
pop
mov
aaa
cltd
mov
mov
pusha
pop
sahf
xchg
hlt
nop
aas
add
shrb
dec
xor
cmp
cwtl
sbb
imul
inc
mov
dec
gs
insb
push
shr
pop
insb
jecxz
and
xchg
cmp
cmpsb
sbb
scas
stc
xorb
test
test
and
cmp
adc
je
mov
pop
popf
pop
add
push
addr16
jge
adcl
xchg
or
cmp
mov
ss
push
inc
ss
imul
popa
fdivs
inc
aad
inc
andl
or
jmp
ficoml
xor
pop
ja
in
out
mov
xor
icebp
or
roll
pop
ret
aaa
rcll
dec
stos
lds
imul
mov
mov
sbb
aam
xchg
cmp
shlb
test
getsec
jge
movsb
xchg
mov
call
cs
insb
xchg
jecxz
mov
mov
push
imul
jno
xchg
rorl
jb
cmpsb
sarb
mov
mov
repnz
lcall
mov
adc
fstpl
inc
ds
xchg
daa
add
mov
mov
in
je
pop
das
into
popa
lds
push
test
sbbb
inc
pushf
fsubrs
inc
pop
push
lods
xchg
adc
daa
sbb
add
mov
nop
in
push
les
pop
lea
aaa
imul
loope
int
cmpsl
dec
je
dec
jecxz
pop
adc
fists
pop
adc
xor
dec
orl
xor
lret
testl
push
ret
adc
jmp
into
mov
stos
fdivrl
test
ret
mov
adc
outsb
mov
sarb
pusha
mov
dec
adc
fildll
jae
cs
sbb
inc
ss
daa
push
adc
or
sahf
add
mov
pop
test
call
jecxz
pop
adc
orb
les
decb
imul
cmp
cwtl
sbb
out
xchg
ljmp
imul
movaps
xchg
rcll
dec
dec
incb
xchg
mov
push
mov
out
rcrl
mov
push
xor
int3
or
inc
shll
test
inc
dec
sub
dec
cmpsb
test
mov
add
out
ja
xchg
mov
leave
into
push
imul
stos
pop
sti
add
ret
aam
mov
jecxz
fdivs
lods
pop
jl
dec
out
arpl
dec
push
and
loope
outsl
add
in
inc
fisubrl
jl
cmpsb
ret
mov
jle
cltd
xchg
lods
mov
push
divl
jecxz
es
dec
add
or
fcmovnbe
mov
inc
fwait
hlt
leave
push
jbe
mov
sarb
shlb
add
sbbl
dec
cmpsl
and
dec
mov
ss
jge
adc
loope
mov
ret
pop
add
into
sbb
ds
mov
enter
jl
xlat
cltd
shrb
repz
sub
loop
jns
jecxz
mov
mov
pop
or
hlt
jbe
dec
sub
cmp
push
fildl
adc
dec
orl
cmp
mov
cltd
push
dec
int3
jb
rolb
sub
test
mov
ljmp
cmp
repnz
stos
out
or
aaa
adc
fiadds
or
mov
inc
test
sbb
ss
lahf
xchg
adcl
pop
mov
add
cmp
loop
xchg
mov
or
ficompl
pop
dec
or
ljmp
xorb
out
inc
test
push
jne
ljmp
insl
push
shl
fisubs
gs
mov
stc
pop
aaa
addr16
push
imul
add
jecxz
and
fxch
bound
sbb
fdivrs
sub
ja
inc
shrb
sub
dec
lea
cmp
mov
icebp
dec
cmpsl
loopne
jle
lea
inc
adc
cmp
dec
xlat
or
cmpsb
aad
mov
clc
cmp
clc
mov
es
cmpsl
lea
sbb
pop
xor
test
cmp
lods
push
loop
add
add
cmp
mov
cmp
cmp
bound
jb
cmpsb
mov
mov
call
fsub
inc
scas
sub
imul
jnp
or
push
in
cld
sbb
inc
out
aas
sti
js
sub
loope
leave
jnp
jmp
jecxz
xlat
js
fsubrl
fists
mov
mov
and
sbb
jge
push
and
sbbb
inc
out
fcoms
jl
push
jg
xchg
hlt
out
xor
push
mov
pop
movsb
out
cmp
dec
push
repnz
jmp
fsts
adc
and
cltd
jbe
leave
pop
imul
es
mov
or
mov
adcl
daa
jp
push
inc
pop
repnz
mov
or
hlt
inc
cmp
mov
fwait
xchg
orb
jmp
xchg
lods
add
push
dec
popf
pop
outsb
mov
lea
pop
gs
rdtsc
inc
ret
mov
jp
cli
fdivrl
data16
push
pop
mov
mov
pop
adcb
xorb
xlat
xlat
add
insl
mov
xor
rorb
cmpsb
clc
xchg
mov
jl
adc
int
call
inc
sbbl
movsb
inc
or
pop
sub
in
ficoms
addr16
and
cwtl
fdiv
hlt
xchg
jo
mov
rcll
and
rclb
js
cmpsb
wrmsr
xchg
insl
xchg
orb
or
aaa
stos
lahf
mov
dec
jg
ljmp
inc
pop
xlat
cltd
lahf
sbb
fldenv
xor
and
push
mov
sti
iret
cmp
inc
rclb
push
sbb
cmc
add
push
push
mov
stc
xchg
mov
pop
dec
lods
and
lret
hlt
rclb
fs
imul
repz
adc
in
jg
cmp
push
pop
add
xlat
scas
fdivl
push
inc
add
inc
pop
jmp
cmpb
jae
pop
adc
movsb
or
xor
sub
pop
mov
inc
push
jecxz
inc
or
sbb
outsb
jmp
jg
lods
jecxz
mov
int
test
cmp
xchg
iret
jle
mov
inc
cld
mov
mov
xchg
mov
mov
add
cmp
lcall
mov
mov
mov
xchg
sahf
sbb
cwtl
out
push
stos
xlat
fldl
imul
ja
scas
add
out
rorl
jbe
repnz
mov
or
lss
call
xlat
mov
push
mov
push
push
inc
jp
push
sbb
jne
sub
push
orl
hlt
out
cmpsl
enter
mov
jl
ss
pop
lcall
cs
or
jne
data16
stc
dec
push
shrb
pop
pop
lock
outsl
adcl
out
adcl
adc
mov
dec
xor
mov
jbe
dec
or
in
movsl
and
or
cmp
mov
fwait
xchg
add
je
outsb
and
inc
fbld
sbb
sbb
out
cs
dec
lret
pop
aaa
mov
push
mov
int
mov
pop
andl
cmp
dec
jne
mov
clc
adc
sbb
mov
dec
xchg
cs
sub
xor
or
xor
stos
xor
ficompl
fistpl
xchg
mov
mov
dec
jno
iret
outsb
adc
mov
repz
mov
pop
jp
in
imul
aaa
aaa
xor
or
out
idivb
push
inc
add
fcomi
cwtl
mov
adc
bound
es
dec
mov
movsb
jmp
gs
std
movsl
jne
mov
xchg
repnz
adc
adc
push
rcrb
cmpsb
cmc
jae
ret
mov
insl
cld
cli
mov
shlb
sbb
pop
cmc
fisttps
pop
movsb
imul
jo
outsl
inc
jge
mov
pop
cld
mov
cmpsl
cs
cltd
push
sub
das
pop
sahf
mov
jbe
lock
pop
popf
int
sbb
pop
inc
cltd
push
andl
pop
add
mov
inc
test
outsl
push
loop
movb
inc
jo
es
mov
sbb
orl
mov
ljmp
pop
or
and
test
nop
xchg
test
lods
pop
xor
ret
xchg
xor
pop
jno
xlat
or
ret
xor
test
push
mov
loope
popf
and
push
sbb
and
push
lods
mov
mov
inc
out
mov
dec
outsl
stos
out
loop
mov
sub
sub
push
test
mov
xchg
rclb
mov
cmp
push
xchg
push
mov
sub
pop
jl
xor
jp
in
fsts
in
movsl
test
lds
jo
sub
sub
movl
ds
mov
ljmp
imul
xchg
lcall
ret
or
nop
andl
jo
lahf
jno
aam
xchg
mov
addr16
jae
and
lods
pusha
xor
in
inc
icebp
popa
xchg
iret
imul
xchg
mov
iret
jae
inc
inc
push
cmpsb
int
mov
mov
mov
xchg
mov
inc
jge
cmp
mov
mov
inc
test
sub
cli
sbb
dec
sub
call
push
sbb
xlat
dec
mov
and
dec
inc
mov
dec
stos
mov
adc
cmpsb
push
decb
aad
cmc
cmp
sbb
pop
clc
or
lcall
cltd
inc
jecxz
movl
mov
pop
cltd
loopne
cmp
aam
pop
fbstp
mov
rolb
outsb
out
dec
mov
pop
push
cltd
ljmp
add
lahf
cmpb
pop
lods
xor
mov
rorb
ja
out
pop
inc
js
xchg
repnz
aam
or
mov
mov
sub
insl
cmc
out
mov
xchg
push
adcl
pop
into
lds
jmp
mov
test
addl
outsb
jl
xor
or
jbe
mov
aas
xchg
jnp
scas
mov
pop
cld
push
sub
pop
mov
sbb
xchg
jg
aam
xchg
jge
cli
inc
sub
adc
icebp
xchg
or
xor
lahf
and
lret
jae
dec
jmp
ljmp
insb
mov
scas
idivb
in
jns
popf
lods
push
clc
enter
xchg
dec
sbb
mov
fnstenv
push
scas
incl
imulb
mov
pushw
push
jbe
sbb
jg
push
jmp
mov
adc
ja
aaa
sub
push
jno
test
pop
outsl
lock
enter
jb
cmp
jecxz
daa
mov
rcl
cwtl
pop
and
pop
add
test
ja
ljmp
push
or
dec
mov
mov
das
roll
xor
mov
enter
sarb
jg
stos
out
push
inc
in
pop
push
sub
jb
adc
movsl
and
add
fsts
jne
sarb
and
out
mov
daa
xor
repz
sbb
cmpsl
mov
xchg
push
data16
popf
dec
pop
dec
mov
or
mov
arpl
in
push
add
push
cwtl
lods
int3
inc
pop
add
push
das
in
sub
imul
in
fdivr
jmp
add
push
movsb
jg
out
pop
lcall
xor
cpuid
push
mov
mov
fnstcw
mov
call
cmovb
cltd
stc
mov
xlat
cmpb
nop
frstor
pop
pop
mov
xor
mov
dec
and
adc
sub
imul
mov
mov
insl
mov
notl
and
popf
cmp
pusha
mov
dec
mov
inc
xor
or
mov
fcmovnb
sub
fisttpl
icebp
mov
out
dec
sub
popf
decl
ljmp
and
rorl
popf
mov
xchg
in
pop
ljmp
clc
mov
mov
test
js
push
fwait
lret
push
nop
cli
ljmp
mov
jne
ds
or
pop
ljmp
je
xor
jl
adc
ffreep
test
xor
test
ficomps
cmp
dec
or
push
pop
fiadds
cli
js
lock
lods
xor
dec
cltd
test
and
pop
hlt
mov
addr16
js
adc
std
mov
pop
sbb
dec
sarl
dec
repz
imul
inc
das
outsb
mul
dec
adc
ficomps
add
cmp
cmp
ja
mov
adc
stos
rcl
jmp
dec
and
faddp
into
push
xchg
push
bound
mov
mov
jo
sub
or
cmp
xchg
adc
mov
clc
lret
in
add
aas
ljmp
rorl
xor
ss
sti
out
loop
or
cmpsl
cmpsb
scas
mul
lods
lret
cmp
and
pop
js
ds
in
xchg
xor
jp
mov
scas
xor
and
add
sbb
xor
push
push
faddl
sahf
cld
and
ret
mov
and
add
fildll
aaa
and
pop
hlt
out
push
rorl
call
jle
clc
jno
enter
dec
cmpsb
jp
bound
pop
in
pop
push
sahf
pop
out
push
stc
mov
xchg
lea
jmp
mov
cmp
in
nop
push
jno
inc
adc
xor
notb
pop
push
or
or
bound
and
mov
fcoml
jo
div
pop
rolb
inc
movsl
xor
fcmovnu
pop
inc
mov
pusha
xchg
lahf
lods
lds
les
insl
lods
daa
inc
adc
stos
jecxz
cwtl
push
hlt
fsubr
cmp
fwait
cmpsl
daa
lods
cmpsb
xchg
or
rorb
pop
cs
mov
fidivs
sub
dec
jno
into
jecxz
lahf
fcmovu
mov
sub
xchg
insb
xor
inc
sub
stos
jo
mov
cwtl
lock
cli
jmp
nop
sbb
cmp
or
bound
lods
rcrb
xor
pop
xlat
push
adcl
pusha
lahf
ret
pusha
out
leave
add
and
add
inc
fisubl
add
adc
scas
cwtl
mov
das
push
jle
popf
jge
pop
inc
xchg
subl
push
inc
in
jae
fadds
test
js
test
add
insb
push
push
in
inc
sbb
mov
hlt
out
lock
ljmp
stos
nop
loope
inc
lret
test
push
in
aad
inc
adc
cld
dec
add
and
decl
pusha
iret
inc
data16
cltd
lret
imul
push
pop
shlw
fs
and
mov
cmpsb
cltd
enter
into
mov
mov
loop
add
test
adcb
shlb
loope
fnstsw
orl
movsl
out
shrl
lods
dec
and
je
jge
adc
adc
cmp
xchg
or
clc
imul
jne
cmp
inc
lods
sti
adc
stos
mov
xchg
mov
adc
in
add
xor
xchg
push
cmpsl
shll
cmc
sbb
std
add
in
push
pop
mov
in
inc
cmp
cmp
sahf
cmc
or
ret
inc
in
lahf
cmp
inc
movb
call
sbb
mov
xor
pop
out
decb
outsb
add
inc
cmpsl
call
dec
xor
stos
dec
xchg
xor
mov
in
ret
jo
sahf
cli
push
xor
dec
out
mov
bound
es
out
dec
in
jae
movsl
sub
pop
mov
xchg
call
or
or
cmpsl
popa
pop
hlt
mov
jbe
jg
fistpl
fistps
insb
push
adc
pop
mov
ficompl
enter
adc
jne
sahf
xor
lcall
outsl
xor
xchg
dec
pop
insb
cltd
fdivs
mov
dec
scas
adc
cmp
mov
pusha
xor
xor
xchg
rorl
scas
test
inc
jmp
dec
mov
cmp
jno
and
fs
dec
mov
arpl
sbb
stos
push
fistpl
cld
in
jno
xchg
aaa
enter
or
add
mov
sti
xor
sub
pshufw
test
xchg
pop
nop
push
stos
xlat
pop
mov
sar
iret
adc
scas
push
add
push
fisubrs
push
push
and
dec
push
xchg
adcl
and
push
sbb
nop
mov
lock
in
sub
push
iret
mov
ja
out
adc
mov
insb
loop
iret
dec
andl
lods
dec
fcmovnu
pop
dec
push
and
xor
ljmp
and
daa
in
adc
inc
lods
cmp
pop
shlb
aad
jns
or
pop
cmpsl
lds
loope
mov
jno
rcll
insl
dec
icebp
fistps
xor
xor
adc
or
or
inc
arpl
pop
in
das
fadds
pop
mov
nop
rorl
push
cmp
and
fnstenv
push
lods
adc
jmp
xor
ss
mov
push
cmp
sub
loop
sbb
pop
dec
inc
int
xor
inc
pop
fadds
pop
insb
js
inc
pop
out
jns
jecxz
dec
les
clc
and
mov
and
roll
mov
xchg
xchg
mov
pop
dec
jge
gs
faddl
fucomp
scas
aam
jno
mov
iret
data16
pop
in
xor
cltd
shll
rclb
in
enter
movsb
dec
mov
int3
cmc
xor
xchg
sub
ljmp
sbb
or
or
mov
or
push
push
push
mov
lret
sub
popf
push
inc
cmp
and
in
mov
fsts
data16
xchg
test
cmpsb
pop
stos
fwait
aad
mov
lfs
test
jno
out
xor
lds
xor
pusha
aas
mov
push
xchg
lcall
xorb
jle
jl
push
andb
fcoms
scas
xchg
mov
inc
icebp
mov
mov
fwait
push
xchg
xchg
out
sbb
inc
aad
push
adc
add
mov
mov
xchg
push
lods
push
not
iret
fsubs
cld
mov
and
je
repz
push
inc
repz
loop
movl
cli
jmp
int3
mov
jo
add
xchg
dec
ja
out
jl
adc
adc
xchg
fwait
push
in
test
inc
pop
outsb
bound
data16
add
pop
ror
ret
rorl
dec
insb
hlt
fld
icebp
shll
out
mulb
aam
cmp
xlat
addr16
mov
mov
push
loop
sbb
jb
push
inc
mov
jo
lahf
icebp
xchg
or
xor
sbb
cmpb
lret
frstor
cld
imul
out
rolb
ds
add
sub
inc
jne
pop
ljmp
xchg
fs
fildl
and
sbb
adc
je
cli
adcb
pushw
movsl
stos
in
mov
ds
ret
dec
add
jge
mov
das
mov
pushf
or
mov
add
cwtl
inc
mov
lret
xsavec
clc
fidivrl
je
jno
dec
xchg
out
jle
jne
imul
mov
popa
cwtl
cmp
das
mov
lea
cltd
sbb
mov
out
adcl
mov
sahf
js
shll
loope
pop
int3
out
imul
leave
ret
push
cmc
push
out
test
cmpsl
mov
cwtl
jg
cld
int
pop
jbe
push
sbb
add
sbb
pop
xchg
fs
stos
mov
mov
aam
stos
loop
jne
hlt
mov
xor
jle
or
ja
sub
dec
push
outsb
stos
sbb
and
lods
cwtl
push
mov
cmpsb
je
enter
or
mov
push
sub
dec
sub
je
xchg
scas
sbb
push
sbb
clc
aas
loopne
xor
cmp
sub
outsb
popa
and
in
cmc
pop
pop
cmp
mov
outsb
mov
in
dec
jb
test
or
dec
xchg
call
mov
hlt
xchg
ds
and
call
stc
daa
jle
test
push
decl
inc
jge
lahf
daa
sub
add
xchg
scas
xorb
popf
xchg
shrl
xchg
popa
sbb
add
aad
jns,pn
in
loopne
xor
stc
cs
cltd
out
cmp
loop
xchg
adc
cmp
xchg
and
repnz
dec
cltd
pop
out
shrb
das
pop
lret
jle
stos
jno
xchg
mov
rdpmc
shlb
aad
cmpsl
xlat
sub
pop
sub
jne
adc
xchg
mov
fsubrs
mov
jle
out
and
mov
cli
dec
and
or
aam
pop
pop
les
sbb
dec
xchg
xchg
mov
pop
add
movhps
lret
jge
push
lahf
arpl
xor
inc
pop
aad
and
sahf
subb
mov
loopne
pop
jae
pop
cltd
ja
loopne
dec
push
lcall
inc
dec
mov
testl
lcall
add
ret
ja
sahf
jne
hlt
xor
dec
pop
out
cmp
je
push
cmc
ljmp
imul
cmpsb
enter
adc
fiaddl
mov
andb
and
xchg
push
mov
nop
pop
add
xlat
pop
pop
push
out
mov
mov
pop
or
jnp
imul
addr16
dec
pop
sarl
inc
sub
mov
stc
pop
std
test
lret
cmp
repnz
jg
not
test
sbb
jp
inc
pop
lds
lods
dec
xor
test
jnp
cmp
in
jecxz
arpl
mov
jg
jmp
lods
pop
mov
cld
xor
and
push
aad
jns
movsl
cs
xor
insb
xchg
mov
shrb
outsb
mov
fcomps
out
test
inc
into
jne
dec
inc
jl
mov
mov
mov
jns
faddl
loop
lea
mov
xor
mov
sbb
outsb
sub
arpl
notl
rcrl
xor
imul
ss
iret
mov
movl
shrl
das
jge
xor
mov
push
insl
mov
addl
mull
dec
in
xor
mov
or
adcb
cmpsb
fwait
insl
ds
sub
sub
bound
hlt
mov
inc
das
lds
mov
ds
clc
xchg
js
std
or
push
movsb
pushf
movsb
cwtl
popf
push
fdivs
stos
sbb
jl
aas
lcall
int
mov
out
sub
sub
ljmp
ds
xchg
jns
lahf
popf
jne
cli
xor
out
int
jae
adc
cmp
lcall
jmp
outsl
push
nop
cwtl
xchg
and
cmpsl
and
inc
dec
dec
jnp
jmp
lret
pop
lods
cmp
xchg
mov
movsl
call
nop
rcrb
movsb
mov
in
repz
inc
jbe
iret
and
xchg
mov
cmpsb
mov
and
or
scas
subb
add
mov
sbb
lret
xchg
lahf
mov
cmc
imul
sbb
ss
aad
sub
stos
mov
lret
es
mov
sub
data16
mov
push
jno
push
pop
or
dec
sahf
pop
pop
ret
push
lea
sub
adc
and
fldt
cmpsl
xchg
psrlw
je
push
lods
shlb
and
rolb
in
imul
jno
jp
mov
iret
mov
sbb
add
pop
xchg
mov
int
inc
fs
push
adc
or
call
data16
add
push
jle
insb
fs
std
sub
gs
dec
cli
and
xchg
pop
sub
adc
out
stc
lret
in
mov
inc
jmp
fs
xchg
pop
cmpsb
sbb
stos
sbb
pop
repnz
lock
sarl
fisubrs
fdivs
jne
inc
ljmp
jmp
push
jnp
inc
in
or
sbb
sub
lret
pop
das
lock
rcll
inc
imull
pusha
loop
fldcw
inc
hlt
je
mov
jae
ljmp
leave
nop
xchg
push
cmp
cmpl
cmpsl
mov
imul
inc
pop
mov
mov
jo,pt
xor
rcrb
push
sub
hlt
jl
in
sub
jae
mov
ret
addb
movsl
xchg
scas
test
data16
repnz
outsb
mov
popf
ret
je
jo
mov
push
and
jmp
cmp
cmp
sbb
out
stc
mov
jns
fcoml
fisttpl
ret
cli
test
push
jns
and
repz
stc
repz
cmp
icebp
mov
mov
les
jmp
mov
jp
lea
xor
popf
js
mov
sarb
or
fs
jmp
jns
lahf
dec
jge
shrb
add
xor
loope
inc
pushf
mov
fwait
sbb
push
xor
adc
mov
imul
pop
filds
pop
cmpsb
pop
add
cmp
call
int
mov
shll
sub
cmp
xlat
mov
adc
inc
push
push
push
pop
cmp
fsubrp
lea
inc
aas
mov
mov
data16
flds
leave
xor
jecxz
js
aas
mov
mov
clc
dec
dec
add
mov
fcoml
ret
movsl
pop
ret
cmp
cmpsb
jle
imul
iret
cmp
enter
sbb
dec
push
dec
adc
mov
mov
leave
dec
std
add
xchg
pop
push
shll
add
cmp
jo
insl
ss
sub
in
cmp
leave
mov
adcb
xchg
je
outsl
adc
mov
insb
movsl
pop
dec
mov
mov
mov
add
inc
insl
cmp
rolb
xor
pop
adc
jmp
cmp
out
xor
inc
xor
xchg
xchg
mov
cmpsl
ret
sub
fisttpl
movsl
xor
out
mov
mov
outsl
and
push
in
pop
hlt
test
xchg
cmp
adc
testl
cmp
sar
adc
cwtl
xor
sbb
pusha
fs
fs
insl
shl
sahf
nop
mov
cmp
cld
sbbl
cli
test
push
sub
xchg
outsb
mov
push
jnp
mov
hlt
insb
movsb
mull
call
jbe
daa
xor
clc
lret
inc
daa
inc
rorl
ljmp
xor
push
sti
dec
dec
pop
cmp
jle
outsl
cmp
shlb
mov
xlat
lret
adc
add
fisubs
or
push
nop
mov
mov
mov
fucomp
cmp
mov
scas
mov
jnp
int
mov
xor
add
dec
cli
sbb
in
pusha
push
gs
cltd
inc
in
std
mov
mov
arpl
pop
cmpsl
pushl
divb
push
testb
jo
mov
push
sbb
cmp
loopne
sbb
add
out
mov
mov
jne
pop
dec
xor
mov
sbb
push
imul
xor
test
jmp
repz
nopl
popa
in
push
imul
shll
test
adc
push
mov
and
in
pop
aam
stc
sub
pop
lock
les
pop
clc
sbb
imul
xchg
dec
inc
fldenv
shrl
push
sub
adc
mov
add
enter
push
lds
or
inc
ret
mov
pusha
xchg
mov
mov
sarb
and
mov
xlat
imul
mov
pop
pop
out
push
sub
out
adc
cmp
adc
jo
cmp
mov
dec
out
and
cmp
push
push
push
pop
xchg
loopne
test
pop
popa
scas
mov
mov
negb
add
daa
pushf
jl
sub
xchg
into
inc
lret
sbb
fbstp
jnp
insl
jne
push
ret
sub
cwtl
sbb
add
xchg
xchg
stos
ljmp
inc
sbb
jns
adc
rcl
test
aam
lea
flds
adc
ss
xor
sbb
les
movsb
inc
pop
dec
jbe
dec
movsb
xchg
or
test
and
xor
arpl
cmp
add
arpl
aam
cmp
pop
data16
mov
mov
sti
popa
pop
push
das
int
frstor
inc
cmp
mov
cmc
je
fwait
movl
js
ret
mov
scas
int
cmc
test
and
mov
xchg
cwtl
xorl
insb
jae
jns
sbbb
mull
lock
and
ds
mov
pop
fildll
jne
aas
inc
mov
mov
xlat
xchg
mov
cmp
pop
sub
inc
addb
dec
imul
push
pop
jne
data16
iret
call
add
lods
mov
add
pop
sbb
push
cmp
sti
mov
pusha
xlat
dec
dec
idivl
xchg
jecxz,pt
inc
cmp
inc
arpl
mov
sbb
pusha
adc
scas
rcr
lods
mov
dec
and
cmc
flds
adc
lcall
stos
imul
das
dec
dec
test
test
aad
push
xlat
mov
fadd
push
dec
pop
jo
js
mov
mov
mov
or
xor
into
mov
fprem1
mov
test
mov
mov
in
jmp
pop
stos
leave
std
nop
pop
pandn
ja
int
sahf
dec
sbb
push
pop
iret
test
subb
push
adc
je
add
sbb
pop
adc
jae
jb
test
inc
scas
cmc
cltd
mov
std
popa
test
mov
inc
and
push
jmp
or
push
movsl
inc
sub
inc
insl
imul
inc
xchg
pop
stos
jne
xor
or
outsl
dec
in
add
cmc
xchg
or
lods
fs
cmp
mov
insb
cmp
scas
dec
pushf
push
inc
fwait
pop
inc
sbb
and
repz
stc
daa
mov
out
incb
mov
jns
push
pop
outsl
fisubl
inc
mov
xorb
jecxz
and
cwtl
jl
sbbl
mov
xchg
cltd
push
push
das
in
sbb
aam
es
negb
lret
loop
data16
dec
ss
aad
add
mov
push
popf
mov
push
rolb
bound
addb
push
mov
cmpsb
jge
scas
or
dec
mov
push
xchg
fdivr
push
stos
mov
sbb
jle
xchg
inc
lods
adc
push
fsubrs
int3
and
std
mov
sub
and
pop
mov
jge
sub
add
js
fld
loopne
ffree
negl
and
ds
and
sbb
mov
ret
std
dec
mov
fs
mov
stos
test
clc
pop
inc
mov
jp
pop
xchg
adc
lret
sub
stos
rcrb
xchg
iret
iret
cmp
adc
lcall
bnd
sub
cmpsl
jge
cmp
adcl
mov
test
in
xchg
bnd
ficoms
or
stos
dec
test
in
ds
dec
scas
jp
lret
mull
add
outsb
push
stos
jg
test
mov
test
shll
xchg
repnz
inc
sub
out
mov
out
insl
lock
fistl
jo
jecxz
ja
or
ret
inc
in
data16
ficoml
mov
pop
loopne
lret
pop
mov
jo
repz
xor
in
adc
sti
sahf
loop
pop
test
mov
std
and
jp
ret
mov
xchg
imul
mov
fstpt
subb
inc
adc
nop
pushf
or
pop
pushf
sbb
leave
xlat
dec
imul
xchg
ror
adc
cmp
xchg
aas
xchg
cli
push
out
pop
xchg
imul
add
cmp
out
stos
cmc
jne
mov
push
xchg
jp
movsl
sub
sbb
push
outsb
loope
out
xchg
add
xor
pushl
in
lret
xchg
lock
int3
test
stc
push
in
mov
mov
pop
fstpt
cmp
adc
dec
dec
mov
cs
out
mov
or
out
pushf
hlt
and
icebp
add
jns
aaa
mov
and
pop
pop
push
mov
jmp
inc
pushf
inc
mov
xchg
enter
xchg
shlb
lcall
adc
pop
int3
mov
mov
push
out
fsubrs
jl
rclb
cld
es
push
mov
jae
stos
dec
aad
aad
pop
sbb
stc
fwait
aam
inc
mov
mov
push
in
int
inc
imul
stos
negb
jne
ret
mov
jb
cmpsb
call
sub
pop
xor
in
sti
stos
mov
popa
jle
aad
stos
jecxz
adc
outsb
dec
stc
jbe
mov
dec
mov
es
xor
test
push
dec
and
fmull
or
xchg
pop
mov
lret
inc
lds
xchg
icebp
cmp
ds
push
adc
out
pop
fbld
addr16
pop
mov
inc
es
mov
jb
jnp
mov
inc
int3
and
cmpsb
and
push
inc
mov
fs
clc
push
dec
pop
jl
loopne
mov
pop
fldl
push
imul
inc
or
gs
scas
lea
movsb
arpl
daa
xchg
imul
ret
push
pop
or
push
or
or
loope
cmp
xchg
cwtl
repz
out
fcomps
clc
clc
xchg
repz
xlat
adc
pop
sbb
arpl
push
inc
inc
in
mov
nop
cld
jnp
sar
adc
add
inc
cmp
mov
in
int3
xor
pop
sub
and
mov
andl
aas
pop
lds
lret
icebp
ret
ret
loope
popa
mov
pushf
lcall
in
mulb
sbb
call
call
enter
add
subb
cs
outsb
cld
mov
lret
pop
test
lods
mov
lods
sbb
shrl
fimuls
ret
shr
cmpsl
pop
out
testb
jmp
jb
fldenv
imul
mov
push
cmp
faddl
js
pop
loop
mov
fwait
insl
inc
jo
xor
push
or
ret
test
cmpsb
add
xor
cmp
arpl
inc
mov
cmp
push
imul
jg
add
aam
xor
jne
aam
pushf
rclb
sahf
call
inc
clc
dec
out
adc
mov
inc
sbbl
fsubrl
add
fs
push
push
test
ljmp
add
popa
mov
add
ljmp
or
cwtl
adc
mov
jp
pop
fldl
addr16
xor
add
mov
mov
inc
push
test
dec
cmpsl
sbb
test
jns
sub
add
pop
test
stos
jg
mov
sti
cmp
xchg
cmc
fldenv
xchg
and
movsl
ljmp
test
sub
inc
int3
pop
hlt
dec
sar
mov
push
xchg
outsl
mov
add
mov
add
mov
sbb
ret
testb
mov
push
jg
adc
xchg
or
xchg
aas
insb
xchg
mov
pusha
jl
xor
inc
sub
outsb
popf
jg
fdivl
push
mov
push
sti
repnz
outsb
dec
pop
jp
inc
pop
in
rcl
sbb
xchg
ret
pop
scas
mov
xchg
jge
jmp
sbb
jmp
pop
and
stos
sub
or
aad
cmc
push
sbb
pop
mov
ret
cmp
and
or
add
and
int
enter
in
sub
std
cmp
mov
push
xor
imul
aas
mov
mov
lret
fchs
jle
ret
lods
icebp
es
xchg
ret
loopne
pop
xor
dec
cmc
shl
dec
or
inc
pop
sub
push
in
ror
aad
roll
fnstcw
loopne
mov
mov
repnz
ja
cmp
sub
xor
out
mov
lea
fs
ds
fs
js
jb
mov
mov
mov
cmp
subb
pop
jecxz
mov
ljmp
pop
mov
sub
push
int3
and
inc
stos
cmpsb
mov
mov
pcmpgtb
xchg
jle
lea
add
mov
enter
pop
stos
repz
mov
and
xor
shlb
lea
movsl
adc
arpl
cmc
sub
adc
stc
psubusb
dec
popf
adc
push
idivb
ret
out
xchg
fs
push
mov
sbb
mov
mov
and
cmp
rcrl
xor
cmp
je
add
and
dec
cs
push
int
inc
or
dec
add
icebp
aaa
inc
sbb
jge
jl,pn
out
jge
mov
aaa
mov
sub
xchg
cli
lods
lea
cmp
sbbl
xchg
das
andb
xchg
cmpsb
pop
sub
repnz
int
push
aaa
fwait
insb
pop
mov
xchg
jl
ja
jecxz
rclb
lcall
jne
and
sbb
add
cmc
shlb
mov
sbb
push
inc
xchg
push
clc
pop
inc
icebp
repnz
cmpsb
xchg
dec
mov
fmull
sub
pop
repz
stc
adc
out
mov
adc
lret
cmp
mov
cli
aad
loopne
cmp
push
and
aas
xchg
mov
and
rcl
and
push
out
and
lcall
les
mov
cmpsl
xor
jl
aaa
mov
cmp
add
inc
mov
mov
fnstcw
dec
mov
ljmp
popf
dec
insb
sbb
push
inc
add
test
mov
adc
mov
out
jmp
and
mov
fsts
inc
xchg
sahf
dec
pop
cwtl
clc
sar
les
push
dec
int
aad
and
xor
fwait
addr16
pop
push
adc
clc
rorb
fdivl
cmpsl
jne
xlat
aad
test
adc
ljmp
sbb
pop
jl
xlat
cmpl
inc
jae
negb
mov
mov
lods
fcoml
std
lods
or
inc
sti
test
ds
xor
push
add
xor
jbe
fisttpll
sub
ss
movsb
dec
xchg
loopne
int3
cmp
in
push
nop
stc
mov
fstpl
stos
rcr
shll
loope,pt
in
into
lds
add
jg
fldl
push
jae
mov
mov
imul
lods
dec
xchg
cmp
or
dec
sti
add
jnp
scas
in
pop
fsubr
mov
xchg
pop
insl
and
or
loopne
jb
dec
std
add
dec
adc
push
and
pop
cltd
scas
xchg
mov
sbb
ror
in
rolb
nop
sub
adc
mov
or
and
loop
insb
ljmp
mov
lock
adc
fs
jnp
addl
adc
cmp
cmpsl
lret
pop
clc
mov
insb
mov
cmp
ret
cltd
fsubl
cwtl
mov
or
jb
outsb
ss
sti
pusha
hlt
sub
scas
lret
hlt
sub
xor
pusha
dec
dec
sbb
into
lcall
es
fwait
iret
lock
imul
mov
sub
mov
jns
lods
clc
movsb
mov
or
jo
lcall
push
xor
out
adc
adc
push
mov
push
cmp
movsb
std
xchg
mov
call
ret
mov
sub
push
out
inc
jo
mov
jnp
addb
rcll
jbe
cmpsb
aas
test
mov
lods
and
xchg
dec
stos
mov
std
negb
mov
lret
push
xchg
xchg
xor
arpl
not
inc
push
push
cmp
pop
push
jecxz
out
jle
cld
or
sub
fldl
push
sub
xchg
pop
sub
movsl
pop
aaa
sbb
push
or
mov
std
aaa
cmp
push
mov
out
int3
push
mov
xor
imul
xor
imul
loop
adcb
add
mov
push
sar
lcall
out
jg
cmpsl
in
and
inc
add
imul
mov
imul
cmp
cs
idivl
cwtl
pop
mov
jle
push
sbb
or
iret
add
insl
pop
and
pop
mov
mov
sub
mov
ret
jmp
les
iret
and
std
clc
mov
sahf
jp
aam
cmpsb
lcall
test
mov
sti
push
mov
notb
jns
mov
icebp
sbb
out
jp
mov
push
xchg
sub
pop
push
cmp
jge
sub
jmp
jnp
dec
int3
out
or
test
in
clc
push
cld
cld
mov
out
test
cmp
scas
sbb
test
fbld
sub
gs
push
pop
ret
sarl
rcrl
cs
stos
sub
or
dec
dec
mov
nop
loop
subl
mov
push
loope
cmc
push
add
inc
inc
xlat
xor
mov
inc
scas
nop
jecxz
push
cmp
leave
mov
pop
or
jmp
xchg
mov
cmp
push
xor
jo
mov
jae
mov
test
popf
mov
lock
aaa
push
adc
imul
cmp
mov
out
mov
sti
scas
xchg
inc
mov
ret
fadd
cwtl
ror
mov
cli
adc
xor
fwait
popf
nop
lods
ret
sub
daa
cwtl
mov
inc
mov
jl
pushf
lret
sbb
xor
sbb
add
inc
jae
call
add
adc
push
lret
push
rorl
adc
jmp
hlt
sbb
and
pushf
es
sti
int
lods
mov
roll
pop
clc
xchg
lock
push
lods
sbb
mov
push
lea
popa
mov
sbb
pop
pusha
jae
lret
pop
and
lret
test
or
push
cmc
mov
xchg
stc
mov
xchg
mov
xor
aad
dec
xchg
mov
cmp
fisttps
adc
lret
rolb
cmp
mov
cmp
idiv
shll
inc
loop
sbb
inc
int
mov
xlat
adc
jge
xchg
and
mov
sbb
mov
fisttpl
add
jecxz
pushf
add
mov
push
movl
pop
repnz
mov
xor
sbb
inc
dec
push
sub
ror
cmp
add
sbb
mov
arpl
mov
in
lret
add
jb
test
cmp
cmpsb
pop
imull
sub
inc
mov
mov
adc
xor
add
xchg
xor
enter
cli
push
push
ret
in
mov
push
sub
sub
test
test
jbe
test
and
and
ja
dec
cmpsl
push
stc
shll
dec
das
xchg
out
lods
inc
repz
pop
mov
xor
jmp
adc
pop
lock
rorl
fsubrl
cmpsb
pop
iret
jbe
xor
lret
mov
icebp
pop
cmc
sahf
mov
out
lods
jae
sub
and
push
pop
les
xor
xor
and
inc
cmp
lcall
lods
lods
outsl
in
push
lret
push
pop
inc
shrb
or
push
dec
scas
xchg
sub
mov
sti
mov
aad
cmp
mov
xlat
jecxz
sbb
pop
or
mov
xlat
scas
sbb
lock
fdiv
inc
push
jo
loop
ret
mov
add
pushf
cmp
pop
arpl
add
imul
pop
add
or
mov
ljmp
sbb
dec
push
call
clc
mov
outsl
or
repz
negl
rol
mov
stc
mov
test
inc
jb
js
inc
rcll
lret
jg
dec
fistps
adc
jle
xchg
mov
mov
mov
sub
fs
sahf
shrl
aam
cs
sbb
xor
or
cmpsb
mov
lods
addr16
out
aam
int3
in
inc
jl
inc
push
or
ljmp
and
cmp
xchg
mov
sbb
adc
out
adc
lods
push
jbe
mov
sarb
mov
stos
cmp
jae
jne
xor
gs
aad
sbb
jb
xchg
cltd
sahf
aam
jp
or
add
xlat
jl
ret
jecxz
out
sbb
jbe
clc
jae
ftst
add
repnz
inc
ljmp
ss
jmp
aam
or
sbb
in
mov
or
jg
ss
xlat
cwtl
and
stos
outsl
xor
xor
jo
loope
leave
sbb
push
loopne
out
in
nop
test
inc
push
dec
sub
rol
das
loop
ljmp
outsl
addr16
shr
dec
shrb
cs
and
shll
sbb
sahf
inc
push
dec
clc
out
mov
aam
cwtl
enter
inc
lret
pop
mov
push
jne
sahf
and
lahf
std
vpshufd
add
sbb
negl
out
dec
and
add
dec
xchg
add
iret
fsubr
enter
mov
ret
jmp
push
pop
inc
push
sub
aad
lock
inc
mov
push
fistl
std
std
cli
cmp
pop
mov
push
es
pop
lret
test
cs
mov
or
xchg
push
mov
pop
arpl
mov
and
mov
in
fimull
subl
loope
and
xlat
test
repnz
xorl
je
xor
mov
adc
fcomi
mov
push
xor
daa
cmp
in
add
mov
fidivrl
popa
adc
mov
lcall
and
loopne
push
popa
mov
sti
push
or
adc
cmpsl
jle
pop
jp
insb
outsb
sbb
test
jl
orl
leave
adc
pop
xor
aas
push
popf
out
push
shl
cld
push
pop
add
add
cmp
adc
lods
cli
fwait
js
insb
jmp
ljmp
data16
out
shll
test
push
mov
fdivrs
pop
test
jg
shlb
sub
insl
pop
shrb
aaa
cwtl
fucom
jno
jge
in
jo
not
mov
or
add
pop
dec
or
test
inc
stos
pop
rol
nop
es
lods
or
inc
stc
rolb
pop
data16
loop
loop
sbbl
push
or
cmp
mov
lcall
add
test
mov
je
movsl
daa
nop
cmpsl
xor
rolb
push
mov
shll
mov
sbb
hlt
or
or
sub
cmpsl
pushf
mov
mov
mov
out
xor
add
mov
sarl
movsl
push
mov
mov
cwtl
call
nop
out
mov
out
lea
lcall
clc
repnz
int3
in
hlt
mov
cmp
pop
and
lret
sbb
fimull
mov
sbb
hlt
dec
sbb
push
mov
mov
daa
push
mov
add
ret
test
jp
jle
dec
stc
cmpsb
mov
push
cmp
mov
dec
lret
out
fisubs
jns
ljmp
sarl
cmp
sbb
xor
stc
push
or
fisttpll
cmp
and
iret
lahf
sub
out
shlb
mov
jle
and
sahf
ss
mov
mov
sub
inc
dec
aas
jle
mov
hlt
lret
push
xchg
and
inc
or
cmp
out
test
mov
push
jl
fisttpll
je
mov
jg
xor
or
adc
mov
xor
inc
cmp
adc
cmpsb
mov
out
dec
fcoms
xchg
adc
sub
mov
test
push
int3
jg
arpl
adc
bound
mov
xchg
popf
push
mov
or
int
adc
jmpw
add
add
sbb
inc
daa
xchg
mov
fnstsw
mov
xchg
pop
inc
lret
sahf
adc
add
fwait
mov
pop
mov
das
mov
lret
xchg
pop
scas
push
cmp
pop
dec
stos
adc
pop
inc
cmp
scas
and
cmovle
out
divl
mov
push
outsl
popl
adc
cmpl
data16
cltd
cmp
orb
stos
sub
scas
dec
and
mov
or
xor
mov
adc
adc
xchg
dec
fwait
adc
outsl
xor
ret
xchg
adc
jge
jnp
nop
xor
mov
push
or
fs
mov
roll
loope
xorl
adc
xchg
push
lret
lea
jo
jb
outsl
lret
rorb
adc
xor
mov
xor
fs
lods
popf
push
push
lea
or
cmp
xchg
mov
scas
loope
jg
jg
sbb
adc
je
dec
jne
ret
gs
out
xchg
push
pop
add
ret
inc
push
push
jne
popa
shl
jg
test
push
dec
jmp
xorb
daa
jnp
jbe
push
dec
call
push
push
repz
lret
ds
int3
mov
xor
bound
jno
mov
push
in
rorb
pop
sahf
cli
or
mov
stos
movsb
mov
ja
pop
pop
pop
mov
ljmp
ljmp
dec
pop
addr16
push
push
lret
mov
push
adc
js
mov
fwait
cmovbe
xchg
or
xchg
subb
xor
or
mov
mov
mov
sahf
sbb
imul
movsl
sbb
jbe
dec
pop
sbb
xor
cmp
outsb
shll
jns
mull
mov
inc
dec
stos
outsb
sarb
xchg
pop
repz
fs
add
les
xor
ds
lahf
cmp
pop
mov
xchg
and
xchg
inc
mov
xor
pop
cld
lret
mov
rclb
inc
adc
cld
andl
sub
cld
adc
jns
fidivs
mov
or
adc
cmp
push
add
popa
jne
mov
iret
xchg
xor
push
and
addr16
sub
arpl
daa
inc
imul
xor
pop
xor
cwtl
popa
out
ficomps
adc
scas
lds
pop
fcoml
popf
mov
cmp
cwtl
dec
repnz
lcall
pop
lock
cmp
jne
movsb
adcl
aaa
dec
xlat
movb
and
mov
movsb
jns
stos
push
in
lock
rorl
mov
popf
int3
mov
mov
stos
cmpsb
xchg
inc
aam
in
popf
xchg
cmpsl
mov
out
push
cmp
sbb
cmpsl
pusha
dec
pop
xor
les
fdivrs
xchg
out
mov
les
out
dec
daa
test
popa
mov
sti
mov
jb
sbb
out
cmp
xor
repz
shll
stos
sbb
lcall
jle
test
aaa
mov
mov
xchg
inc
adc
sub
pop
mov
jle
imul
lds
out
test
ret
mov
jno
jecxz
dec
add
cwtl
sub
mov
inc
imul
cmpl
xchg
rcll
mov
and
int
fildll
lret
fistpl
add
sub
outsb
adc
inc
mov
push
xchg
sbb
pop
es
lret
xchg
lock
cmp
adc
cmp
sbb
lods
pusha
dec
xor
add
push
push
aad
addl
flds
xor
and
push
imul
add
scas
sbb
add
mov
and
icebp
jae
jmp
pop
xor
sub
loop
imul
test
cmpsl
inc
stos
jb
sbb
out
adc
sub
jns
jp
mov
clc
sbb
adc
insb
xlat
loope
mov
loop
mov
pop
cmp
in
mov
mov
jae
ficoms
les
sub
mov
lock
test
loopne
cmpsl
test
cmc
aaa
sahf
pusha
xchg
in
sbb
jecxz
xor
sahf
mov
fbstp
sbb
fstpt
adc
mov
jo
adc
mov
pop
and
mov
fs
pop
jl
lds
push
sbb
cmp
pop
inc
dec
and
mov
sbb
add
gs
pushf
sbb
jb
fldenv
sub
xchg
arpl
xor
aad
mov
dec
push
xchg
inc
sbb
pop
mov
stos
imul
popa
enter
mov
cmp
inc
and
mov
ret
mov
dec
adc
inc
mov
sbb
sub
adc
mov
add
adcb
cli
sbb
adc
xchg
outsb
mov
push
iret
in
stos
jge
aas
roll
sbb
add
pop
mov
std
push
fnsave
xchg
mov
and
sub
loope
js
push
aas
mov
aam
adc
int
cmp
push
xchg
jle
sarb
div
mov
loope
sub
popf
fsubrl
fidivrl
test
mov
repz
jl
jbe
dec
mov
in
ret
xchg
rorl
jne
test
cs
test
dec
inc
ds
popa
pushf
cmpsb
loope
lea
add
mov
push
rcl
out
xchg
ljmp
lcall
insb
inc
test
xchg
lret
cs
pop
ss
fidivrl
inc
in
sub
lock
lock
push
popf
and
in
push
xchg
insb
or
sbb
mov
pop
sub
pushf
add
jp
je
ret
scas
sahf
add
or
loope
xchg
jle
jg
ja
cld
jg
pop
lods
mov
add
and
outsb
enter
or
cmc
dec
lock
sbb
sahf
mov
fidivs
lods
xor
loopne
xchg
lds
bound
scas
aaa
or
cmc
adc
xchg
test
insb
xchg
pop
mov
sub
popf
arpl
adc
mov
ret
out
cmpsl
add
repnz
cmp
mov
lods
lock
jge
loope
xorb
jnp
push
lahf
ret
or
outsl
push
aas
adc
idivb
and
aaa
into
add
clc
movsb
and
leave
pop
fldt
fistpl
dec
jl
ja
jbe
add
sbb
sbb
loopne
push
or
push
pop
pop
adc
lea
daa
or
clc
fwait
adc
jle
stos
clc
mov
dec
fstpt
sub
sahf
xor
fcmovbe
push
xor
and
pushl
sbb
lret
jle
insl
test
ja
lock
push
cmpsl
ret
jne
cmp
test
clc
in
clc
pop
lret
cmp
or
inc
jle
out
mov
and
cltd
daa
and
mov
cwtl
jg
iret
sub
imul
lahf
mov
cld
in
sti
push
xchg
push
and
push
xor
in
mov
jp
jmp
mov
mov
fwait
dec
es
psubsw
fcmovb
lret
xor
inc
jge
sbb
bound
dec
js
adc
push
adc
cmp
push
or
lock
ss
or
mov
add
push
arpl
das
iret
add
xchg
sbb
pop
mov
daa
adc
mov
daa
cmp
and
andl
jno
push
loopne
lds
pop
das
scas
dec
loopne
mov
jmp
ds
adc
in
adc
xchg
insb
or
rcrb
popa
jo
mov
arpl
and
outsb
movsb
sub
dec
lock
cmp
pop
cmp
adc
inc
lods
inc
addb
cmpb
sbb
cwtl
loopne
fimull
xchg
fidivrl
test
int
xchg
es
sbb
test
or
gs
scas
adc
int3
dec
lcall
jmp
dec
inc
inc
mov
ja
test
sbb
add
jmp
rcrl
inc
dec
out
mov
ret
fwait
jbe
inc
push
lock
lock
out
inc
scas
fs
pminsw
nop
jmp
dec
cmpsl
mov
fadd
add
push
sub
int3
push
inc
repnz
mov
inc
rorb
sbb
push
inc
mov
inc
cmp
insl
cltd
mov
adc
mov
or
subl
in
xchg
cmp
or
pop
mov
cmp
insl
stos
lods
imul
jmp
xchg
call
test
pusha
pop
cmp
int
imul
dec
xchg
or
cs
test
cmpsl
in
ret
sbb
jmp
xor
xor
cmp
mov
push
mov
repz
and
leave
mov
fwait
sub
mov
in
fdivs
xor
mov
sbb
jnp
pop
out
int
cmp
cmc
or
jp
mov
jnp
stos
sub
adc
sub
push
mov
rcrl
rolb
xor
pop
push
imul
jne
jb
mov
xchg
dec
cld
es
cmc
andb
push
sbb
insb
fidivrs
inc
mov
andl
mov
les
lds
or
cmp
dec
xlat
fwait
and
pop
stos
jge
mov
mov
push
shrb
lret
lock
jecxz
rcll
and
mov
sub
add
pusha
pusha
ror
sbb
push
jp
fwait
mov
loop
xchg
add
subb
xchg
mov
add
xor
sbb
rorb
scas
mov
xchg
lcall
mov
mov
or
lea
stc
enter
test
and
inc
aam
xchg
aas
mov
cmpsb
mov
mov
inc
push
mov
into
leave
daa
ret
test
fmul
test
and
or
stos
lret
rcll
xchg
mov
int3
cmp
in
xchg
pop
sub
xor
int
push
jne,pn
lods
sub
lods
in
dec
mov
sahf
pop
std
mov
icebp
clc
scas
inc
and
in
es
sub
pushl
test
lret
aaa
xor
mov
mov
pop
push
inc
and
mov
jb
sbb
add
bswap
or
in
pop
push
lahf
jno
and
xchg
mov
lods
mov
adc
out
dec
dec
shll
test
rcl
js
das
mov
xchg
and
cmp
enter
fisttpl
xchg
out
xchg
cwtl
jns
push
in
mov
lock
sbb
pop
bound
mov
into
test
sti
fst
cmpb
call
repnz
mov
popf
outsb
ret
pop
stos
adc
mov
ds
iret
push
push
xor
or
clc
icebp
xchg
adc
cmpsb
and
repz
int
sub
xchg
xor
leave
flds
popa
push
fistl
xchg
pop
movb
and
leave
jo
loopne
imul
ss
mov
mov
dec
sub
addr16
push
and
jecxz
pushf
or
int
sbb
repnz
mov
lods
sub
add
dec
outsl
pop
out
andb
xlat
lret
fldt
dec
cmp
daa
gs
stos
push
ret
or
ds
adcb
dec
push
das
adc
xchg
repz
mov
pushf
int
and
loop
das
pop
pop
addr16
and
stos
loop
pop
fld
dec
add
jmp
cmp
adc
bound
and
inc
int
lret
pop
arpl
mov
push
xchg
and
test
push
xchg
xchg
int
cmc
add
stos
xlat
mov
inc
sbb
and
jne
in
in
pusha
push
imul
mov
pop
test
add
bound
ja
sahf
mulb
ss
sbb
xor
mov
cmpsl
jmp
addb
jnp
mov
mov
mov
mov
dec
xor
sbb
push
mov
sbbl
xchg
daa
mov
lods
sbb
je
loop
ss
lret
data16
ss
outsb
out
pop
dec
push
ds
cmovp
movb
leave
inc
es
jmp
add
add
jae
shrb
sahf
movsb
lds
mov
sub
or
mull
adc
push
aam
xor
das
mov
and
sub
repz
mov
cwtl
pop
inc
xor
int
jnp
lret
xchg
jae
sub
sarl
xchg
scas
bound
and
aaa
inc
adc
mov
fs
sti
out
jae
repnz
add
xchg
les
aas
dec
dec
ss
mov
cmpl
sbb
sub
les
test
fcomps
mov
pusha
std
popf
or
loopne
jp
and
xorb
inc
jae
xchg
pusha
sbb
sub
mov
pop
pop
mov
dec
aas
scas
jle
sbb
or
hlt
out
je
out
out
sbb
jnp
aad
lods
pop
cmp
stos
into
add
stc
mov
jo
xchg
adcl
in
cmpsl
js
fdivrp
mov
jae
and
inc
notb
arpl
ficompl
call
js
js
sub
cmpsb
mov
push
xchg
xor
repnz
jb
in
push
hlt
push
out
pop
les
xchg
push
jge
push
xchg
mov
cltd
mov
lcall
sbb
mov
cwtl
xor
das
mov
repz
mov
mov
xlat
sbb
shll
xchg
push
xchg
jno
inc
or
sbb
inc
jns
lahf
xchg
add
lock
movsl
roll
mov
jle
inc
push
mov
cwtl
leave
jo
insb
xor
mov
out
mov
jnp
inc
dec
inc
popf
rsm
pop
mov
fwait
lret
inc
cwtl
aad
jmp
sub
in
xor
cmc
push
inc
xchg
pop
ds
push
ds
dec
cmp
xlat
mov
mov
pop
or
jl
ret
scas
pop
mov
mov
mov
cmpsb
jp
push
fistpll
adc
xchg
leave
icebp
mov
jle
push
stc
movsl
mov
push
lahf
jns
sbb
mov
orl
loopne
dec
arpl
jne
add
cld
mov
stos
lea
scas
fwait
out
pushf
jmp
outsb
hlt
sbb
lods
xor
mov
dec
or
js
ljmp
pop
jle
or
clc
lea
cmp
inc
pop
mov
push
mov
pop
mov
inc
jecxz
dec
imul
mov
rolb
orl
inc
sbb
dec
or
out
pop
xchg
jecxz
pop
pop
and
or
jne
or
adc
jmp
add
mov
ficoms
fbld
shll
inc
lods
sbb
in
cmp
ret
mov
iret
cmp
or
pushf
adcb
fcmovb
js
fwait
out
fwait
outsb
cli
lret
pop
js
mov
lcall
pop
dec
pop
mov
out
mov
jmp
adc
pop
or
mov
leave
imul
lods
enter
xor
repz
cwtl
adc
mov
lret
adc
push
lds
repz
xor
jl
fdivr
add
dec
fsubrs
dec
cs
in
dec
jl
pop
int
xor
xlat
imul
mov
adc
push
fimull
nop
mov
popf
fsubs
ret
das
push
add
xchg
inc
gs
xor
xchg
fs
mov
mov
push
push
adc
mov
and
mov
dec
cld
pop
js
pop
jo
pop
rorl
hlt
ret
fsub
push
dec
loope
inc
pop
lock
inc
dec
jl
movsl
into
scas
popf
insb
into
test
jae
movsb
pop
mov
push
cmc
incl
pop
xor
lret
push
insb
mov
jl
test
lods
lahf
sbb
jp
inc
stos
hlt
xchg
mov
sbb
repnz
sbb
shll
hlt
xor
push
dec
sub
out
pop
int3
inc
cmp
das
imul
lret
incl
inc
jno
dec
pop
popf
mov
mov
mov
xchg
daa
cld
xor
xchg
ffree
cld
scas
add
fstps
xchg
shrl
cmp
in
and
xor
pop
daa
cmp
aad
aaa
aam
sub
aas
xchg
lahf
xor
aam
nop
xchg
jbe
push
xorl
cmpsl
cli
shll
xchg
insb
mov
mov
sub
mov
aas
add
mov
das
pop
add
jno
and
push
push
test
stc
shr
sbb
mov
into
push
jmp
xchg
stos
pushf
xchg
jle
popa
daa
fs
push
mov
pushf
dec
pop
jbe
jmp
fisttps
and
jnp
stc
gs
push
ficomps
xor
mov
ds
and
outsl
push
push
ret
sahf
bnd
out
pop
ror
js
mov
or
shlb
popa
mov
sahf
cld
adc
shll
and
xor
mov
add
dec
cmp
fcoml
mov
jns
and
dec
mov
or
aad
out
pop
mov
test
mov
dec
fwait
in
loop
adc
xor
test
add
scas
lret
cmp
mov
cmp
xchg
scas
shll
inc
fwait
xchg
in
cmpb
psraw
pop
and
xor
movsb
sub
js
jmp
cmp
in
nop
test
xor
pushf
vcvtss2sd
jle
sbb
test
out
in
add
in
call
mov
test
sti
mov
cmp
lods
lcall
fsubr
xor
or
pop
stos
pop
lret
ret
in
out
js
xchg
outsb
push
and
xor
adc
out
pop
in
rcr
sub
add
and
call
cmp
stc
lret
jecxz
xor
push
shlb
loop
jo
add
sub
sub
xchg
xchg
test
insl
insb
ds
mov
into
ljmp
stos
mov
cmp
cmp
popa
in
popa
into
insl
xor
int3
ds
sub
jnp
or
cmpl
js
stos
scas
adc
lahf
xor
gs
out
add
pop
rolb
jmp
lods
jl
pop
inc
xchg
push
hlt
jle
xor
adc
sbb
xlat
call
pop
xchg
jmp
cmpsb
xor
aad
fmull
hlt
int
cmp
test
adc
xlat
xor
dec
fdivrs
dec
push
es
adc
push
jbe
mov
aaa
adcb
sub
sbb
mov
xor
push
orl
ljmp
push
stc
push
mov
lds
push
adc
pop
addr16
fs
jge
lods
sbb
in
cmp
mov
cltd
enter
inc
push
int
outsl
scas
jmp
mov
inc
mov
inc
in
cmp
pop
xchg
xor
out
iret
test
in
cmp
cmp
shl
in
jb
pop
adc
sbb
and
in
hlt
shlb
ja
ljmp
ficoml
shll
jb
aaa
cli
inc
add
stos
pop
cmp
add
ljmp
imulb
inc
ds
out
inc
stos
and
into
jno
mov
mov
fnstcw
mov
stos
lods
inc
cmp
push
push
lret
shll
jle
inc
push
or
xchg
mov
ss
out
xlat
xor
jnp
int
mov
jmp
es
sub
idivl
ret
push
push
les
pop
enter
and
insb
fldl
mov
leave
shrb
xor
out
mov
test
xchg
pop
jo
adc
sub
mov
xchg
dec
cmc
loope
out
add
push
insb
push
mov
lea
sbb
sub
imul
jno
loope
pop
mov
aaa
sub
cmp
inc
fisttpll
sub
push
and
inc
mov
mov
daa
adc
xchg
roll
cld
rclb
insl
loop
in
push
push
inc
cli
sub
sbb
xlat
pop
orb
adc
pop
pusha
push
sbb
jmp
dec
cld
inc
jp
ficomps
mov
jge
out
pop
outsb
cmp
subb
cltd
daa
jns
sbb
xor
fisubl
dec
ja
adc
xor
mov
flds
mov
in
cmpsl
cmc
mov
cmpsl
cs
cmp
jecxz
pop
push
push
sbb
movsb
push
adc
in
jb
sbb
jno
andb
cli
lret
pop
or
cld
je
xchg
pop
lods
inc
and
or
pop
es
scas
xchg
cld
sahf
add
mov
xor
pushf
icebp
lds
sbb
xchg
dec
mov
mov
mov
mov
call
stos
roll
test
and
pop
test
and
icebp
pop
cmp
lods
insb
inc
lods
rcll
add
and
sbb
push
out
mov
sbb
hlt
add
arpl
cmp
stos
add
ret
loop
lret
and
into
popa
stc
clc
lods
jb
stos
mov
add
add
sti
mov
push
mov
sub
fucom
arpl
add
lea
das
insl
xchg
xchg
test
rorb
mov
inc
sar
mov
pop
fcomip
cmp
hlt
dec
mov
daa
dec
jmp
lret
clc
in
mov
push
fistl
add
pusha
fsub
xor
ljmp
lock
es
stc
popf
sbb
out
or
jae
movsb
cld
repnz
and
movsl
shlb
xor
push
push
arpl
mov
inc
leave
mov
aas
dec
testb
inc
icebp
daa
and
lret
imul
push
mov
mov
pop
mov
jl
out
out
lahf
in
push
jno
push
cld
daa
pusha
into
mov
xchg
push
jnp
pop
mov
mov
cmp
sahf
es
mov
icebp
data16
std
lods
inc
iret
iret
dec
add
leave
scas
mov
gs
aam
int
arpl
fsubrl
mov
add
stos
mov
pop
insb
inc
pop
in
mov
jg
sbb
lock
adc
pushf
sub
xchg
stos
pop
xchg
aas
inc
add
push
imul
jae
test
out
xor
cltd
rcrl
mov
adc
fidivrs
loop
xor
jae
aad
and
sti
sahf
shrl
adc
sub
xchg
adc
dec
jg
insl
pop
mov
jl
bound
in
jecxz
xor
cmp
sbb
mov
xor
xchg
inc
out
sub
and
push
sbb
dec
cmpsb
inc
adc
imul
mov
fmul
push
cmp
sub
jp
rcr
inc
lcall
mov
mov
xchg
xchg
inc
ljmp
lret
inc
or
cmp
xor
test
mov
cmpsl
mov
in
mov
loop
dec
lret
cwtl
dec
adc
gs
sub
jb
sub
test
sub
cs
popf
and
dec
stc
fucomip
fmull
lcall
push
xor
cmpsb
sti
jl
sub
loope
and
pop
mov
jne
jle
lods
out
inc
push
mov
adc
jns
push
sbb
cmpsb
mov
add
add
jp
pmaxsw
push
imul
shl
test
jle
sub
inc
testb
add
mov
int3
fmuls
jne
shlb
rcr
mov
jg
jge
inc
es
or
clc
stos
addl
jmp
fisttpll
dec
dec
outsb
cmpsl
aad
mov
mov
cmpsl
fmuls
sub
imul
popf
cld
test
hlt
xchg
gs
aad
hlt
pop
icebp
sub
add
imul
add
out
imull
insl
popf
lock
repnz
and
test
inc
ret
jle
and
cli
pop
add
jg
rorl
push
inc
fldcw
scas
test
mov
jb
sbb
push
jp
iret
pop
ret
xchg
gs
and
scas
xchg
mov
sub
addr16
push
push
in
sub
jge
xchg
push
clc
ljmp
insl
mov
shrb
pop
jo
push
inc
call
pop
add
sbb
push
xchg
mov
cmp
lret
imul
mov
xor
pop
pusha
dec
sbb
jne
jb
cli
pushf
mov
fs
aaa
push
dec
push
and
pop
repnz
int3
mov
cwtl
insb
adc
lea
std
lock
or
push
es
jecxz
cmp
testb
gs
ss
xor
xor
sbb
jecxz
mov
dec
mov
ds
mov
xchg
loopne
dec
push
insb
push
mov
ja
pop
xchg
testl
rcrl
xor
ds
inc
or
fdivrl
xchg
scas
aaa
fsts
jb
repnz
addr16
mov
out
dec
dec
mov
jecxz
adc
adc
aad
mov
iret
sbb
jge
in
xchg
add
mov
add
sub
sbbb
add
adc
dec
pop
aad
mov
jge
adc
sar
jnp
fdivrl
mov
pop
cmp
mov
in
rolb
and
jl
insl
mov
xor
std
mov
mov
and
dec
cmp
fldlg2
sub
inc
lret
jo
leave
adc
stos
in
jle
addr16
in
push
push
xchg
and
movsb
int3
es
addr16
arpl
push
add
fisubl
xchg
ret
sub
cwtl
jg
lcall
xchg
cs
adc
test
js
add
dec
or
imul
and
rcll
shr
scas
roll
mov
jmp
mov
fisttpll
stos
fdivs
xchg
cmp
lcall
cmp
loope
lds
sub
sbb
lret
daa
adc
xchg
xor
sbb
loopne
jns
push
mov
bound
repz
jl
pop
shlb
dec
pop
cmpsb
jg
lods
movsb
inc
std
jo
sub
hlt
cwtl
dec
fsubs
loopne
cmp
loopne
subb
pop
and
or
ljmp
and
ja
scas
mov
popa
clc
out
inc
js
push
jle
push
jg
pop
and
imul
cmp
xlat
lea
or
sbb
test
daa
aaa
mov
rcrb
jge
daa
mov
cs
out
ljmp
inc
xchg
fsubrs
sub
jnp
push
add
arpl
sti
add
test
mov
dec
stos
adc
cs
xor
xor
mov
inc
add
inc
dec
inc
outsb
shlb
pop
clc
out
or
int3
xchg
lret
push
lret
push
cs
aad
ret
pop
dec
adcb
xchg
add
push
mulb
or
jl
dec
jge
xchg
jp
pushf
lds
xchg
lock
imul
jp
xorb
push
mov
pop
ret
jl
cmc
outsb
add
test
std
and
imulb
fadd
inc
neg
scas
adc
mov
out
cmp
in
addr16
lcall
fwait
add
mov
pop
and
mov
mov
jo
pop
out
fildl
aam
push
mov
std
fistpll
xchg
inc
testl
imulb
xor
sti
mov
addr16
push
fldl
xor
insl
cwtl
mov
loopne
xchg
or
inc
aam
adc
push
dec
psubusw
xor
mov
ds
push
div
jge
add
mov
xchg
loop
pop
ljmp
cmpsl
or
xchg
pop
jle
cmp
sbb
dec
pop
clc
rcrb
sub
jmp
mov
jg
std
add
jae
mov
pop
nop
icebp
push
inc
push
xor
lcall
push
or
imul
jmp
idivl
mov
dec
push
mov
andl
jle
and
jnp
adc
mov
dec
imul
mov
imul
cmp
out
push
addr16
sub
call
push
xchg
jge
icebp
ret
or
lret
xor
add
inc
test
je
sub
jle
cmp
cmp
xchg
xlat
sbb
fstpt
jmp
movsb
int
add
outsl
in
or
jecxz
inc
lcall
xchg
daa
scas
inc
sbb
test
fiadds
in
into
fisubrs
test
mov
jp
or
push
adc
fadds
and
loope
sbb
pop
in
sti
outsl
pop
inc
mov
mov
out
arpl
add
push
push
xchg
xor
pop
mov
dec
sbb
pusha
je
pop
in
adc
pop
mov
int
adc
jno
outsb
jle
mov
or
dec
jbe
loope
dec
mov
out
out
cs
loope
sbb
scas
mov
sbb
adc
call
mov
or
jne
notl
test
fdivp
enter
popf
arpl
jg
cwtl
addr16
sbb
lret
xor
and
sti
sbb
dec
clc
sub
lret
ja
rcll
aaa
adcl
and
pop
adc
mov
push
addr16
mov
push
xchg
icebp
or
cltd
dec
sbb
mov
mov
test
jg
insl
dec
sbb
popf
inc
es
in
lcall
and
push
repnz
dec
or
cmp
dec
jb
pop
inc
insl
sub
sub
mov
repnz
push
imull
pop
pop
sbb
add
loop
pop
mov
adc
imul
test
jae
cwtl
pushf
sbb
jb
sub
mov
pop
mov
inc
ljmp
in
jae
pop
jo
sbb
push
mov
inc
das
lods
jbe
pop
cmpsl
mov
and
push
dec
gs
cmpsb
add
in
cwtl
popa
mov
pop
jae
out
daa
das
xchg
cli
or
push
add
push
rcl
sbbl
into
cld
jnp
popa
fucomi
out
bound
xchg
cmpsl
lods
mov
les
mov
adc
xor
stc
push
pop
aam
stc
jg
or
rcll
and
push
sbb
cmp
sahf
insl
dec
dec
test
int3
ficomps
add
loop
push
js
mov
orl
aas
xchg
dec
hlt
stos
push
test
push
mov
mov
xlat
push
sbb
inc
outsb
mov
repnz
add
int3
mov
daa
mov
mov
aaa
dec
mov
add
jns
lret
cmp
mov
push
mov
mov
addr16
dec
addb
jp
mov
loope
enter
cmpsl
es
arpl
loope
xchg
iret
in
add
repnz
jbe
pop
jns
loop
xor
iret
ja
xor
and
xchg
sbb
mov
xor
icebp
or
sub
pop
pop
cmp
shlb
jecxz
xor
mov
js
into
fmull
and
and
dec
cwtl
xchg
jp
es
test
aas
adc
pusha
sbb
cwtl
inc
inc
daa
pushf
fistpll
pop
or
stc
or
aam
ja
mov
and
sbbl
fcomps
push
push
shlb
iret
and
sbb
and
mov
stc
sub
jg
mov
jmp
out
mov
jo
sbb
ret
pcmpgtb
rorl
pop
sbb
insb
mov
mov
jne
add
pop
and
repz
mov
out
jo
mov
pushaw
xchg
sub
mov
jns
jns
lahf
or
andb
out
or
add
in
fildl
mov
jp
into
push
inc
push
mov
ja
xchg
sub
sbb
mov
fdivrs
pusha
subl
and
iret
lods
pop
mov
mov
loop
cmp
jno,pt
jb
lods
ja
bound
sti
inc
cs
cmp
adc
sti
cltd
sub
and
add
scas
sub
notb
std
js
test
fcoms
mov
add
pop
push
jns
enter
push
out
stos
sahf
and
scas
mov
xlat
or
aam
cmp
jecxz
hlt
mov
pop
fdivl
dec
mov
mov
insb
add
mov
divb
outsl
xor
xchg
push
js
lahf
out
mov
jl
xchg
hlt
fwait
xchg
sbb
das
pop
loope
mov
repnz
dec
lods
mov
gs
js
add
shrb
sbb
and
loope
and
xchg
pop
dec
pop
inc
mov
sub
add
iret
aaa
cmp
cmp
in
bound
cmp
sbb
mov
lret
push
sahf
mov
repnz
jg
mov
sub
stos
js
and
std
inc
out
push
cli
jnp
hlt
jnp
sub
dec
popf
repnz
scas
in
imul
and
or
stos
outsb
dec
adc
out
fmul
gs
test
mov
mov
push
loop
lahf
push
pusha
cmp
mov
sbb
add
stos
test
out
xchg
test
dec
push
cwtl
in
lock
aam
stos
sarb
icebp
lret
sub
hlt
int3
xchg
mov
repnz
push
mov
mov
add
je
add
fbld
hlt
inc
push
pop
xor
sahf
xor
outsl
inc
mov
lret
into
pop
mov
enter
arpl
js
and
call
xchg
mov
sub
jl
fdivrs
jno
pop
mov
pusha
add
mov
fwait
mov
adc
fwait
adc
push
sbb
sub
mov
jg
in
cld
faddl
pop
into
divl
insb
data16
jmp
ficoml
or
pop
jns
js
scas
stos
lea
lods
inc
sub
into
ffree
cmp
in
mov
int
sbb
jmp
int3
xorb
add
cmpb
or
mov
inc
push
cwtl
sub
push
pop
nop
lcall
push
mov
cmpsl
iret
dec
aad
adc
cwtl
xchg
push
aam
mov
aam
dec
in
imul
mov
cmp
xchg
pop
cmpsl
ret
aaa
xorps
repz
adc
push
mov
inc
mov
push
out
pushf
repz
out
stos
xchg
sbb
fistpll
cmp
add
in
cwtl
mov
fadd
or
out
mov
push
fisubrl
or
mov
adc
cld
mov
adc
jbe
mov
ja
das
cmp
jmp
sub
jne
pop
bound
pop
test
mov
in
into
xor
push
adcl
sub
or
stos
pushf
stos
imul
cmp
icebp
mov
int3
mov
add
les
push
xchg
add
out
insl
mov
xchg
sbb
mov
cltd
jb
and
test
cmpsl
ret
loopne
push
ja
fwait
or
mov
outsb
test
out
pop
mov
scas
scas
cltd
outsl
es
or
mov
mov
hlt
jmp
das
out
xchg
out
xor
pop
push
int3
mov
jne
test
xlat
and
imull
mov
jp
mov
enter
and
xor
sbb
inc
lret
mov
rorb
and
aad
mov
jg
xchg
inc
mov
pop
sub
jno
adcb
sub
push
test
es
ret
ror
lea
xchg
pop
je
jb
mov
cmp
sub
mov
add
bound
dec
mov
rcr
sub
stos
lcall
and
adc
pop
and
and
cmpsb
cli
or
mov
ret
insb
mov
andl
sbb
repz
out
das
mov
or
dec
out
test
ret
dec
mov
stc
mov
xorb
or
test
repnz
adc
adc
and
pop
xor
xchg
jno
call
sbb
adc
dec
pusha
add
xchg
mov
cmpsl
cld
push
cmp
dec
fnstenv
add
push
xor
push
cmp
dec
dec
pop
push
into
push
fcmovbe
outsb
inc
jge
adc
sbb
ljmp
ja
sbb
iret
mov
incl
xchg
push
adc
test
mov
mov
je
and
jo
out
subl
jbe
dec
mov
je
pop
add
ret
lock
mov
adc
sbb
in
in
add
add
xchg
subl
xor
sysret
add
mov
push
pop
daa
push
mov
dec
mov
add
push
addr16
cli
test
mov
cmpsb
sub
jge
and
xchg
ja
mov
jno
cltd
push
inc
cmp
mov
dec
or
lea
xor
cmpsl
jnp
or
movsl
sti
es
push
pop
dec
fldcw
add
fs
pop
push
mov
in
push
xchg
cwtl
push
xchg
je
popa
inc
sbb
inc
lcall
in
sbb
cli
in
arpl
cmp
adc
and
adc
shrl
push
add
jg
stos
fldenv
jbe
add
das
mov
jno
cwtl
dec
jb
mov
fisubs
sar
aaa
pop
pop
sub
push
fcmovbe
test
sbb
rcr
inc
popl
xor
fcomi
or
roll
and
adc
sbb
xchg
mov
cmp
and
add
sbb
or
add
rolb
lods
jmp
cmp
jb
xchg
cwtl
out
mov
xchg
jne
mov
lock
shlb
inc
inc
or
lods
xor
sti
stos
insl
out
movsb
aad
adc
sbb
jae
fidivrs
in
push
mov
push
cmpsl
fucomi
ja
loop
or
mov
mov
lahf
mov
mov
xlat
sahf
es
pop
pop
aas
cmp
cmp
ljmp
aaa
pop
divl
adc
int
int3
aam
mov
jmp
lret
dec
addl
lcall
std
sbb
jl
adc
push
popa
cmpsb
inc
dec
jge
pop
cld
aam
sti
mov
mov
jle
mov
aad
shrb
inc
xlat
mov
orl
out
mov
fistpl
sbb
aad
dec
jbe
shll
pop
in
push
add
or
push
clc
jnp
hlt
jp
mov
std
imul
add
fwait
push
pop
xchg
xlat
repz
sbb
outsb
sarb
xor
jg
pop
mov
mov
cmp
jge
inc
xor
mov
pop
jecxz
fs
jae
and
xor
xor
js
movsl
mov
mov
insb
loope
push
shll
fbstp
or
jecxz
aaa
out
test
cmp
mov
insl
cmp
sub
aaa
imul
jns
test
loop
dec
or
mov
sub
sbb
inc
lret
adc
mov
or
pop
loopne
test
add
addb
fidivrl
int
xor
lret
adc
jb
orl
insb
push
mov
mov
rcll
jno
cs
fucomip
arpl
icebp
je
jecxz
inc
lds
sbb
pop
pop
pop
mov
inc
add
xchg
gs
mov
cmp
insl
fwait
cmpsb
add
stos
jnp
inc
push
adcl
or
rolb
inc
mov
les
lahf
std
imul
insl
push
dec
jp
jo
inc
aaa
inc
in
pop
das
lock
xor
out
lods
inc
rolb
stc
out
cli
or
ret
cmpsl
cwtd
jmp
jns
call
cli
push
mov
in
lret
xor
cwtl
add
dec
iret
fisubrl
sub
test
sub
pop
pop
enter
mov
mov
bound
hlt
mov
adc
ljmp
mov
push
jecxz
lret
and
cmp
lret
pop
adc
or
mov
lock
movsl
stc
ret
loope
xor
add
pop
stos
mov
xchg
movb
jl
scas
jg
add
js
push
push
pop
push
pop
jecxz
shlb
mov
sub
aaa
mov
cld
cmc
stc
movswl
inc
cmc
add
sub
jbe
sarb
push
mov
or
inc
mov
shl
shr
xor
leave
sbb
addb
push
fisubs
mov
sub
lea
jb
mov
lahf
mov
jns
cmp
adc
sbb
inc
lods
hlt
xchg
inc
xchg
jecxz
push
jns
les
sbb
loopne
stos
sbb
sahf
inc
jg
loop
mov
enter
jno
xchg
and
push
dec
dec
cld
popf
lock
add
sar
jecxz
hlt
pop
adc
or
push
sbb
mov
rclb
ficoml
notb
inc
scas
cmp
movsl
or
shlb
movsl
jl
mov
cwtl
test
ds
or
ret
add
fdivrs
loope
lahf
pop
fs
inc
insb
ja
xor
sbb
out
jle
fstpt
or
clc
or
orl
sub
mov
in
lahf
inc
test
movsb
xchg
pop
ret
dec
sbb
rorb
pushl
rcr
rorl
call
pusha
inc
add
xchg
jb
pop
mov
push
dec
mov
imul
data16
jns
push
ret
aad
int
sub
xor
mov
movsb
ret
jge
clc
cmp
push
frstor
push
enter
lods
ds
and
cmp
sbb
cmp
inc
aam
push
jmp
iret
dec
push
push
mov
push
push
xor
clc
movsl
mov
mov
in
stos
push
xchg
fstps
xchg
les
mov
mov
subb
push
pusha
push
push
push
jp
sbb
pop
int
test
aad
addr16
mov
or
repnz
sti
add
pop
sarl
int
or
sub
jle
sbb
lcall
sub
fadds
or
xchg
and
js
add
sbb
stos
cmpsl
mov
mov
aaa
es
aas
mov
daa
cmp
sarb
add
out
aad
fucomi
mov
push
mov
mov
lret
cmp
shl
xlat
inc
mov
pop
xchg
cld
dec
xchg
jo
sti
mov
dec
out
loop
gs
int
vpaddd
mulb
mov
mov
jge
jl
pop
mov
mov
shr
outsl
push
add
sahf
pop
fldl
cmp
movl
lcall
sub
in
mov
and
mov
add
scas
adc
push
jecxz
inc
mov
push
inc
lret
xlat
sub
aaa
mov
cwtl
cmp
pop
pop
mov
cmp
test
out
or
pop
lods
shl
mov
or
lods
pop
shrb
add
dec
jg
sbb
scas
call
iret
in
mov
and
rorb
and
scas
fstpl
das
mov
pop
js
dec
in
xchg
cmp
into
adc
les
sbb
clc
add
mov
pop
in
sbb
std
cmp
mov
mov
insl
enter
sub
sub
repz
stos
or
xor
or
jbe
scas
xor
mov
dec
mov
popa
scas
push
leave
pop
mov
xchg
cs
in
insl
aam
jmp
cmp
add
imul
clc
dec
push
cwtl
in
jnp
arpl
movsb
and
pop
mov
cmpsl
lods
orl
aam
dec
and
lcall
pop
lahf
push
sar
cmpsl
fiadds
inc
jmp
xor
stos
push
cmp
fsubs
mov
call
pushf
push
test
imul
mov
imul
daa
fcoml
inc
cmp
fsub
jmp
test
pop
es
cwtl
push
adc
mov
sub
push
in
insb
out
lret
mov
add
ds
push
daa
mov
jb
jl
inc
pop
xchg
add
cmp
dec
xor
enter
iret
mov
insb
xor
xor
decb
mov
jecxz
and
adc
mov
xchg
in
sahf
push
mov
sbb
stc
sar
jge
and
or
inc
jg
xor
stc
mov
xor
push
movsb
fsubp
nop
outsb
aad
out
adc
jo
push
dec
arpl
mov
sub
daa
or
loopne
mov
out
faddp
pop
ret
mov
xchg
dec
mov
xchg
inc
xor
dec
xchg
mov
mov
push
daa
clc
xor
ja
or
out
xchg
and
or
fildll
iret
sbb
fnstsw
sbb
outsl
cltd
add
andl
into
dec
or
add
fcmovnbe
insl
rcr
mov
push
mov
and
outsb
dec
push
adc
std
jbe
div
fbld
sub
sbb
push
negb
ljmp
jle
repnz
inc
adc
aaa
inc
mov
or
repz
enter
xchg
sarb
inc
test
xchg
lods
jmp
arpl
je
sti
jecxz
adc
popf
dec
popa
mov
mov
mov
jle
bnd
mov
sub
lcall
mov
adc
dec
fisttpll
sbb
jne
jge
inc
repnz
fdiv
loop
and
cmpsl
int3
nop
mov
dec
push
mov
scas
lret
rorb
mov
std
mov
out
call
and
insb
sbb
push
data16
mov
aaa
test
fadd
push
pop
pushf
in
dec
ss
mov
cmc
lods
test
int
adcl
push
push
aad
push
aas
mov
mov
nop
aad
cs
in
aaa
push
lock
mov
adc
test
and
mov
adcb
pop
clc
jle
and
sarb
test
pushf
fs
adc
mov
ret
sub
jno
in
scas
sahf
stos
rcll
inc
into
mov
les
bound
rcll
jle
aad
addb
xchg
mov
xor
arpl
push
inc
mov
cli
outsl
outsl
jmp
imul
jle
jmp
inc
fdiv
sub
adc
mov
or
std
pop
test
inc
shr
jge
fimull
popa
jmp
adc
outsb
das
mov
ret
jno
mov
dec
jnp
or
test
cmp
stc
test
rorl
cmp
in
jno
xor
movsl
and
sub
mov
scas
jnp
mov
cltd
testb
mov
ds
lret
xor
bound
mov
rcl
push
sbb
mov
mov
inc
pop
dec
out
pop
xchg
sbb
daa
xor
push
adc
lahf
movsl
movsl
sbb
dec
mov
inc
in
aad
push
push
dec
lea
pop
fnsave
adc
mov
mov
out
dec
xchg
into
out
inc
push
loopne
sbb
sub
push
pushf
lods
je
mov
pop
mov
in
and
loop
es
popa
pusha
add
aas
add
mov
fsub
push
mov
xchg
into
negb
in
outsl
mov
arpl
fsubr
jl
into
and
ret
pop
inc
xchg
out
lret
pop
lea
add
scas
addb
adc
lods
jl
cld
pop
std
xor
mov
repnz
pop
fldcw
cld
daa
sub
push
sbb
popa
js
sub
inc
repz
xchg
into
cmpl
cmp
shlb
nop
adc
aam
jbe
pop
mov
lea
in
ret
out
mov
inc
out
xchg
incl
inc
push
gs
fsts
lock
jg
add
dec
lods
stos
int3
pop
jp
scas
loopne
pop
les
push
pushf
adc
popl
movsl
hlt
aam
outsl
sub
or
sti
out
enter
and
push
push
pinsrw
ret
inc
sti
call
sub
icebp
notl
popf
mov
icebp
xchg
dec
cmp
inc
mov
adc
imul
adc
ljmp
in
negl
jnp
mov
repnz
mov
xchg
and
inc
xor
jo
push
adc
sbb
fldl
push
lahf
outsb
mov
mov
ret
cmpsb
leave
adc
mov
jns
jae
ja
mov
bound
stos
or
aam
add
add
jmp
lods
push
pop
pop
xor
mov
insl
cs
pop
xchg
sub
lea
stos
push
xchg
dec
add
xlat
inc
or
push
mov
dec
movsl
mov
sarb
push
xchg
jp
popf
xchg
push
xchg
pop
out
jle
outsl
mov
and
les
sbb
pop
xchg
mov
int
inc
aam
lods
hlt
mov
mov
je
push
scas
vfnmsub213ss
mov
adc
lahf
loop
std
sahf
or
jo
dec
fdiv
leave
xor
repnz
push
pop
mov
lret
dec
mov
pop
jmp
or
in
ret
es
dec
icebp
lea
cli
addl
test
loopne
lret
or
pop
push
add
inc
rol
mov
lret
sti
ret
insb
fs
clc
dec
cmc
jmp
insl
arpl
xchg
cmp
push
sbb
ja
imul
movsb
sub
stos
mov
lahf
or
mov
mov
add
cs
lea
jbe
mov
mov
dec
sti
sub
pop
loopne
cld
call
addr16
stos
fld
mov
sahf
out
lsl
push
sub
ss
mov
insb
cs
mov
mov
sub
in
mov
sub
sbb
das
cmpb
sbb
mov
ret
insb
fdiv
scas
xchg
lods
popa
pop
sub
sarb
lock
ror
int
and
jecxz
lea
mov
pop
fisubl
ja
mov
xlat
add
fisubrs
imul
insl
mov
cwtl
cmpsb
adc
jmp
loop
imul
aas
rcll
data16
pop
lock
jge
int
cmp
or
test
and
daa
cmpsw
fdivl
mov
or
sub
das
or
test
sbb
xor
or
aaa
dec
mov
xchg
mov
xchg
roll
inc
imul
nop
aam
lock
adc
fwait
pop
xor
pop
cmpsb
mov
in
int
cmp
adc
inc
sub
inc
xchg
add
xchg
repz
cld
js
arpl
mov
mov
jb
cmpsl
dec
dec
push
insb
aaa
sbb
andps
adc
pop
aam
cmc
movsb
test
jecxz
movsb
sub
loopne
stos
adc
pop
pop
inc
and
rorb
mov
imul
fidivrs
cmp
or
sub
inc
cmp
inc
popf
ficoms
fimuls
sbb
mov
mov
pop
int
xchg
test
and
out
cli
pop
sahf
xchg
sub
test
xlat
leave
cmp
lahf
push
test
cs
push
es
inc
ret
movsb
mov
mov
xchg
and
pop
fildl
fmul
imul
xor
pop
in
gs
dec
lahf
inc
clc
hlt
mov
int
dec
loope
popa
frstor
push
scas
and
dec
mov
pop
roll
mov
xchg
cmp
mov
pop
jo
jno
cmp
lret
push
xorl
pop
shr
lods
inc
popl
jge
push
pop
push
push
xor
sahf
pop
adc
nop
insb
idiv
adc
adcl
sub
mov
ds
lea
and
or
push
pop
inc
pop
insl
mov
lret
sbb
sti
iret
outsl
mov
cwtl
sub
or
dec
dec
in
sub
rcrl
cltd
in
xlat
sbb
mov
ss
jbe
pop
jbe
push
xchg
ffree
sub
add
xor
xor
cmp
lock
xor
aas
add
jg
fldcw
push
xchg
rcl
and
cmpsl
stos
push
mov
sbb
xor
ret
mov
jmp
cmp
or
or
mov
fbld
cmp
fldl
ss
in
je
and
adc
roll
aam
repnz
jb
xchg
mov
aam
test
xor
das
inc
jp
cmp
push
mov
jp
xorb
dec
filds
lret
sub
sub
push
hlt
inc
loopne
xchg
mov
movsl
xchg
sbb
and
sahf
mov
mov
fld1
jg
sub
loope
push
jg
sbb
pop
fwait
pop
fnsave
push
pop
out
into
loopne
aaa
sub
andnps
cld
inc
or
xchg
sbb
mov
das
jecxz
push
inc
push
mov
jmp
pop
bnd
cmp
movsl
xchg
pushf
mov
and
inc
mov
insb
pop
leave
sbb
sub
add
out
aam
ljmp
sub
inc
add
arpl
imul
mov
aas
mov
call
mov
nop
into
fldcw
aas
mov
mov
add
jns
pop
repz
test
js
shl
loop
mov
dec
in
pminsw
repnz
cmp
jecxz
imul
fsubl
inc
es
pushf
daa
mov
jle
sub
pop
jo
xchg
and
sbb
mov
imul
loop
adc
and
mov
enter
in
outsb
gs
jecxz
scas
mov
ret
cmp
jnp
mov
popa
jecxz
mov
lahf
adc
add
aam
mov
lods
in
lret
cmp
in
mov
jmp
xor
lock
mov
sub
bound
ss
push
mov
fcmovbe
popa
pop
or
adc
mov
outsb
sbb
or
pop
dec
push
outsb
mov
add
jnp
addb
pop
jb
ljmp
push
xchg
cs
test
test
xchg
and
pop
push
lods
gs
ret
pusha
jge
xchg
sub
call
jmp
push
scas
xchg
loop
js
xor
je
jle
inc
sbb
adc
lahf
pop
imul
pop
lret
dec
push
test
adc
sbb
insb
mov
add
outsb
movsl
ja
adc
push
jne
lcall
xor
shlb
fistpl
imul
shrl
mov
push
nop
addr16
cmp
jmp
clc
xor
and
adc
sti
aaa
leave
or
scas
dec
jle
adc
daa
push
fdivs
sbb
clc
pop
pop
mov
out
cmp
cmpsl
lock
iret
fwait
sub
xor
scas
sbb
cli
jecxz
sub
mov
cwtl
xabort
pusha
imul
pop
sbb
loope
sub
lret
sub
jo
mov
loopne
inc
ljmp
int3
out
mov
sar
flds
cmp
gs
mov
mov
movsb
pop
leave
lea
xorl
fucomip
loopne
stc
data16
movsl
xchg
dec
jle
mov
inc
inc
pop
arpl
clc
call
movsl
insl
cmp
icebp
jge
and
stos
pop
pop
je
sahf
stos
inc
sbb
sbb
lods
jns
xor
and
jl
out
xlat
jno
xor
cmp
out
jecxz
jns
lcall
and
sti
out
and
inc
mov
cmp
lcall
nop
sbb
or
add
fwait
orb
mov
adc
std
xor
test
mov
adc
ss
dec
xchg
push
sub
test
div
lahf
mov
sub
decb
adc
addr16
or
add
lods
jb
jl
clc
cld
sbb
scas
sub
adc
nop
shll
dec
mov
rcrb
add
test
or
ss
data16
dec
arpl
inc
test
addr16
lret
lea
mov
loop
test
push
sbb
jl
jbe
test
push
mov
movsb
cmp
enter
in
clc
lods
fdivrp
ss
push
cld
jp
adc
in
jo
mov
and
outsb
ja
fwait
and
sbb
sub
sub
push
xchg
pop
mov
outsl
adcb
inc
add
xchg
popf
mov
cwtl
sbb
cmp
cmpsb
dec
rcrb
pusha
lds
outsb
negb
push
pop
sub
sbb
fnsave
cmp
inc
rorb
add
pushf
push
pop
push
cwtl
pushf
addr16
xchg
outsb
popa
outsl
dec
push
and
rcll
and
xor
fadds
mov
sbb
aas
arpl
movl
mov
scas
mov
sub
ds
or
es
imul
dec
pop
push
sahf
push
fprem
in
cmpsb
xchg
push
sbb
test
ss
or
xor
fisubrl
push
sbb
pop
inc
or
js
rorb
sub
add
bndstx
and
leave
dec
and
or
mov
mov
mov
mov
imul
insl
inc
add
fimull
fcomps
jnp
pop
xchg
int
insl
popf
mov
test
dec
sti
js
xchg
aam
stc
cld
in
cmp
push
mov
sub
jns
push
add
xor
mov
jmp
add
jae
movsb
ror
xor
adc
and
das
push
popf
pop
lret
outsb
aam
das
in
jmp
sbb
adc
testb
dec
add
fldcw
sbb
psrlq
movsl
stos
pop
cli
mov
pop
push
lods
sbb
lds
loop
addr16
and
add
out
sbb
lods
xor
adc
add
arpl
int3
addr16
cwtl
in
lret
jo
cmp
fcmovu
addb
pusha
jo
dec
out
jbe
mov
jge
aad
test
das
mov
lcall
cmc
mov
roll
dec
jmp
jo
adc
xor
daa
enter
movsb
sub
mov
sbb
xor
mov
adc
fistps
add
fnstsw
and
dec
imul
stos
adc
fs
push
pop
out
jmp
scas
push
push
popa
jbe
inc
addr16
mov
sub
jmp
fwait
push
push
jmp
mov
aaa
pop
mov
popf
dec
ret
rcr
pop
jb
int3
mov
dec
ss
ja
mov
imull
outsl
mov
popf
test
out
mov
jno
mov
notl
jnp
stos
test
into
sbb
xchg
cmp
sub
je
pop
push
pop
hlt
iret
jle
sub
or
sets
and
shlb
and
jmp
inc
mov
pop
jnp
adc
dec
sub
jnp
cwtl
int
js
js
mov
dec
leave
add
scas
push
cltd
hlt
pusha
adc
sub
shlb
shlb
leave
test
pusha
push
mov
cmp
xor
std
mov
shrl
xor
outsl
in
ss
fistps
sub
pop
imul
jp
xchg
or
bound
in
testb
inc
cmpb
aad
loopne
xlat
xchg
push
int
cli
push
mov
int3
shrl
sub
icebp
jne
fsubs
lods
rcrb
mov
mov
rol
iret
or
jne
dec
movl
sbb
hlt
inc
xor
add
sbb
xor
decl
sti
sbb
shll
and
pop
rorb
inc
push
dec
das
sub
cltd
pop
and
or
xchg
inc
push
aad
lcall
data16
mov
push
andb
dec
push
pop
fisubl
mov
or
mov
xchg
aad
push
xchg
cmp
jo
sub
mov
test
adc
rcrb
sub
inc
imul
xchg
sub
sub
loop
fwait
daa
xchg
push
fistpl
andb
pusha
or
call
lea
mov
sbb
lcall
ja
mov
adc
sub
xor
das
lahf
dec
xorl
xchg
add
fldenv
mov
les
adc
stos
mov
pushf
fnstsw
dec
mov
notl
jle
xchg
dec
stos
inc
add
adc
in
sbb
in
mov
stos
jg
ss
in
subb
aaa
mov
cmc
stc
lods
es
pop
push
aaa
sub
push
mov
xor
adc
pushf
jns
cmpsl
rorl
aaa
xchg
push
stc
lds
cmp
mov
sub
and
sti
stos
sub
sub
pop
and
xchg
shlb
subl
pop
sbb
pop
mov
mov
popa
loop
aas
inc
and
iret
mov
sbb
push
cs
aas
test
ds
mov
addr16
inc
scas
xchg
sub
addb
push
mov
lret
addr16
adc
mov
adcl
popa
jno
jne
pop
test
les
mov
mov
scas
lock
insb
xor
jg
cmp
ret
mov
std
mov
sbb
xlat
jl
sbb
cwtl
xor
lret
jmp
es
sbb
mov
push
push
jnp
fisttpll
jbe
mov
ja
test
fwait
xorb
and
mov
pushf
lods
lcall
jne
js
or
and
out
fstps
mov
mov
arpl
jmp
mov
aad
and
inc
scas
stos
push
sub
cmp
lcall
inc
inc
xchg
out
in
movsb
repz
mov
lret
scas
rclb
jp
or
sbb
mov
call
push
imul
adc
mov
in
outsl
mov
punpckhdq
xor
test
mov
inc
push
mov
mov
std
fimull
pop
mov
inc
push
daa
cwtl
cld
int
movsl
fs
aaa
jb
hlt
mull
cmp
fwait
cmp
cs
push
std
inc
lds
fcoms
test
movsl
inc
jne
popa
or
xor
call
xchg
xchg
mov
jb
movb
jb
or
mov
cmpsb
call
jbe,pn
mov
test
push
adcl
xor
lock
sarl
idivl
cmp
push
lods
dec
cmp
inc
push
cmp
pop
fldt
mov
inc
lret
pop
sbb
jge
sbb
test
lods
shrl
pop
adc
scas
shrl
mov
sbb
jno
xchg
popa
sbb
das
mov
add
sti
adc
in
out
sbb
call
dec
lahf
dec
rorl
movsb
lahf
les
cmc
mov
mov
push
cmp
sub
js
mov
aaa
stc
push
or
fucomip
adcl
xchg
mov
cmp
push
cwtl
out
and
ds
not
sbb
sbb
rclb
shl
push
push
sub
dec
mov
sbb
xor
xor
mov
mov
xor
filds
and
push
lahf
ret
pop
cmpsl
xchg
push
mov
jno
roll
lods
test
adc
cmp
gs
cmc
les
dec
rol
mov
pop
mov
testb
adc
in
mov
fucomi
dec
adc
ret
xchg
mov
lock
out
movsl
jp
shlb
call
in
jl
jge
test
mov
push
add
shrl
and
add
jno
push
mov
lea
int
and
push
rcrb
scas
and
ret
ret
dec
xchg
mov
fdivrl
stos
inc
mov
adc
xor
adc
clc
or
cmpsl
sbb
sbb
mov
xchg
es
shl
js
cld
jg
outsb
fcompl
aaa
dec
cmc
mov
out
inc
sub
fs
sbb
mov
std
not
fdivrl
into
or
xchg
inc
mov
mov
in
cmc
fcmovnb
std
pop
dec
sub
xor
loop
dec
adc
xor
pop
scas
lret
fs
sarl
nop
or
cmp
cld
in
mov
adc
push
pushf
sub
sub
add
jbe
out
loop
in
insb
xchg
dec
int3
xor
pop
sbb
push
mov
data16
push
in
inc
jl
xor
pushf
adc
cli
popa
pop
movsl
out
movsb
sbb
dec
jg
and
sub
cmc
dec
sub
cltd
outsl
ret
mov
aaa
cmp
dec
les
sbb
and
push
popf
aas
pop
in
pop
out
inc
sub
push
shlb
xchg
lahf
and
mov
or
cmp
xchg
fistl
rorb
jp
sub
hlt
xor
or
out
inc
adc
lret
jne
jb
arpl
scas
jle
xorb
and
lock
push
in
push
les
ljmp
sbb
adc
mov
inc
out
adc
icebp
cmp
shll
mov
add
jg
es
sub
push
push
lea
push
add
push
lea
pop
mov
cmpl
dec
je
pushf
or
jmp
push
int3
dec
call
xchg
mov
outsb
pop
imul
push
push
icebp
xchg
stos
inc
enter
test
or
dec
sub
pop
mov
ficoms
adc
pop
cmp
mov
or
mov
mov
mov
les
mov
sub
or
cltd
inc
mov
or
adc
jnp
mov
push
add
inc
add
mov
aam
les
pop
xchg
imul
sbb
out
xorl
aaa
ficomps
loop
cmp
movl
dec
adc
je
mov
jmp
out
cltd
mov
rol
and
cmp
in
movsl
sahf
or
lods
sbb
jne
lret
sub
loope
roll
sahf
cmc
cmp
mov
in
jle
ljmp
idivb
jne
adc
std
ja
jnp
lea
xchg
mov
ret
push
jbe
bound
repz
mov
xor
stos
and
xchg
xlat
popf
ja
cmp
sbb
lret
loop
dec
adc
aad
pop
sbb
mov
std
jmp
inc
or
jbe
jbe
xor
fsts
andl
jne
push
lret
sbb
mov
mov
lds
scas
aas
pop
dec
dec
cmpps
cs
xor
cs
das
aas
cmp
test
mov
test
cwtl
lock
cmpsb
mov
into
push
stos
int3
pusha
icebp
int3
push
inc
pop
loope
mov
in
les
imul
sbb
in
dec
aam
xchg
outsb
sbb
aaa
lret
or
push
inc
fisttpl
sbbl
pusha
xchg
insl
mov
adc
ja
and
test
cmp
out
test
dec
jne
fwait
xchg
jno
add
xor
add
cmp
add
cmp
movsb
adc
psubb
rcrl
loope
cwtl
xchg
jae
xlat
adc
call
add
sub
pop
pop
es
insl
jno
in
push
and
sub
clc
sahf
mov
loope
xchg
dec
scas
testl
cmc
iret
mov
and
inc
push
jp
xchg
jecxz
sbb
repz
mov
add
enter
inc
push
pop
mov
push
sub
push
adc
adc
mov
inc
cmp
stc
inc
fimuls
repnz
xchg
sbb
rorl
std
add
add
addr16
push
loopne
sbb
shll
ret
xchg
sub
inc
cmp
dec
cmp
das
jle
mov
cltd
rclb
je
add
fwait
adc
movsl
scas
inc
aas
jns
daa
sbb
stc
sahf
xchg
xlat
xchg
jo
es
jle
mov
add
sub
out
inc
rcll
fcoml
test
sti
mov
xchg
inc
dec
imulb
mov
in
mov
ficoms
out
push
aam
and
jecxz
mov
xor
xor
fistps
stos
mov
sbb
stos
xchg
dec
imul
clc
int3
add
fcmove
push
outsb
ret
sub
or
mov
mov
imul
or
xchg
gs
dec
mov
aas
in
push
and
imul
enter
sbb
adc
addr16
pop
fsubrl
enter
adc
xchg
mov
sub
daa
in
jmp
mov
sbb
es
cmp
pushf
ret
mov
cmp
leave
in
mov
mov
imul
insb
jecxz
pop
ret
out
test
popa
mov
and
repz
pop
push
add
xorb
adc
stos
mov
mov
aas
xor
jmp
adc
push
push
xor
and
repnz
stc
icebp
sbb
xlat
lahf
js
bound
cmp
ficomps
mov
pop
hlt
jo
icebp
ljmp
inc
xor
je
int3
hlt
jp
pop
in
and
test
jl
sbb
add
jg
mov
stos
jle
jle
test
lret
and
cmp
push
icebp
jo
movsl
test
aas
shrl
pop
addr16
sub
push
mov
fbld
inc
pop
jb
adc
xor
lods
and
insl
dec
sbb
jg
fsubrs
mov
add
mov
xchg
ja
push
idivl
data16
loope
rclb
xchg
test
repnz
loope
repz
xor
xor
adc
or
fidivl
and
popl
cs
push
sub
cmpsl
cmp
sbb
mov
lahf
mov
rcll
loop
cld
scas
push
sub
cmp
stos
into
jbe
lcall
test
ljmp
jbe
test
call
test
ds
into
out
es
sarl
fidivrl
mov
pop
in
adc
sub
cmp
outsb
inc
test
push
sub
mov
sbb
jp
mov
out
lock
loopne
rorb
push
shl
xlat
adc
add
sub
push
mov
fcoms
aaa
add
dec
outsb
mov
pop
in
pop
lcall
aad
jo
mov
fidivs
lock
fwait
xor
sbb
gs
aas
push
cld
sbb
sbb
push
sub
mov
and
gs
mov
cmpsl
cmpsb
pop
or
out
or
inc
repz
adc
stos
fimuls
mov
dec
fistpl
jo
push
xor
icebp
add
and
sbb
inc
std
xchg
cmp
outsl
out
push
sub
arpl
les
test
js
jge
mov
andb
insb
sub
dec
adc
inc
jae
lret
push
cmp
insl
cld
addb
mov
jmp
pushf
mov
loopne
pusha
sbb
in
leave
mov
xor
fsubrs
es
lods
and
lock
adc
add
in
xor
cmp
cwtl
or
cmpsb
fnsave
mov
push
lret
pop
das
xor
decl
test
in
in
add
and
jmp
lret
leave
push
loopne
stos
outsb
push
push
mov
jge
lahf
or
icebp
jae
sub
mov
bound
subl
xor
std
mov
add
test
mov
pop
int3
or
ds
js
dec
fneni(8087
push
enter
aaa
aam
sti
sbb
sbb
sti
mov
mov
sbb
xchg
jg
or
jae
mov
loopne
shl
stos
mov
flds
aaa
repz
xchg
mov
call
dec
ds
push
jp
pop
scas
and
loopne
mov
cltd
pop
jb
sub
sub
movsb
rorb
inc
push
addr16
out
fs
or
scas
fiaddl
inc
sub
or
add
mov
pop
jo
movsb
cltd
jmp
pop
xor
adc
push
sub
std
push
ss
push
in
add
push
sub
lret
adc
cmp
les
stc
pop
dec
ja
sub
inc
pop
cli
xchg
repnz
insl
popf
jnp
cmp
add
pop
xchg
cmpsb
rclb
or
jbe
fcmovnbe
loopne
sbb
call
xor
lods
mov
xchg
pop
sbb
jbe
test
arpl
and
aad
jecxz
or
fstpl
xchg
mov
push
xor
icebp
in
sub
inc
fbld
jmp
fistpll
jo
subl
hlt
incl
jge
pop
sahf
sbb
bound
int
imul
outsb
sub
cld
adc
cmpsl
jbe
sub
xor
fsubl
movd
sbb
inc
mov
outsl
sbb
xchg
or
pop
push
test
test
or
jp
dec
or
mov
lret
in
jno
cltd
aaa
int
iret
out
jl
int3
sahf
sub
inc
loopne
cmp
push
bound
bound
pop
jl
arpl
int
push
je
lret
outsb
ljmp
fmuls
push
jmp
mov
lds
insl
dec
fstps
lds
xchg
and
cmp
test
pushf
stc
cmp
cwtl
xchg
jmp
scas
arpl
inc
mov
add
jno
lret
jecxz
adc
sbb
xchg
test
dec
jmp
lahf
lods
sbb
test
nop
push
stos
pop
cmpsb
cmc
in
lret
cmc
xchg
xor
xor
push
mov
mov
jo
dec
imull
lock
loope
into
sbb
test
enter
sbb
push
hlt
adc
push
xchg
insl
in
pop
jg
mov
fstpl
push
dec
sub
dec
or
sub
aaa
xor
jbe
mov
mov
jmp
pop
out
inc
movsb
fisttpl
testl
pop
or
push
sub
inc
adc
and
gs
pop
mov
dec
sahf
cmp
test
loop
mov
pop
out
fwait
xor
dec
inc
add
dec
out
or
inc
mov
jno
sub
popf
mov
sub
push
stc
test
lcall
out
aas
sub
jecxz
add
xchg
xchg
or
dec
mov
adc
inc
fisttpll
aad
xor
sbb
leave
inc
mov
jbe
sbb
push
in
sahf
ss
jle
sub
jne
das
popf
scas
mov
daa
adcb
shrb
mov
negb
hlt
nop
jle
and
addr16
or
out
out
movsb
inc
std
sbb
pop
sub
test
rcr
mov
mov
adc
and
push
cmp
sbb
inc
or
icebp
enter
xchg
insb
push
in
pop
push
pop
and
shll
into
popa
lods
andb
inc
cmp
mov
mov
loop
push
jge
stos
fnstenv
js
pop
adc
addl
cltd
dec
shl
mov
mov
mov
cmp
sub
mov
push
mov
inc
cmc
cmpsb
testl
daa
mov
xor
sub
pop
or
cmc
in
fdivrp
push
xor
pop
dec
fwait
pop
sbb
js
call
je
repz
ljmp
mov
fcompl
stos
adc
imul
hlt
push
pop
pop
xor
arpl
lods
adc
adc
pop
loop
into
cmp
push
into
mov
adc
adc
clc
pusha
scas
mov
jp
cmp
shl
inc
sub
mov
push
dec
loopne
pop
inc
sbb
idivb
add
in
mov
pop
xor
cmp
cld
out
daa
fldenv
lar
add
xor
pusha
adc
lods
inc
lcall
loopne
test
mov
fucomp
fisubs
ds
inc
jmp
stos
imul
ret
icebp
xchg
adc
push
jecxz
movsl
enter
ja
shll
jl
int
xor
vmovaps
mov
mov
add
mov
mov
in
in
hlt
fsubr
and
mov
cmp
add
test
loope
push
mov
std
test
mov
and
and
push
adc
nop
movb
pop
mov
loope
fists
xchg
fnstenv
dec
mov
fcmovbe
icebp
xor
and
sub
add
insb
mov
je
lds
pop
xchg
and
cmpsl
lret
ffree
inc
imul
push
insb
jne
out
cmpsb
adc
inc
inc
setge
dec
mov
xor
sub
repz
jmp
cmpsl
pop
shl
ja
nop
cmp
xor
add
into
inc
cmp
sbb
out
inc
call
xchg
mov
arpl
jns
les
or
sub
loop
sub
scas
out
xlat
fdivl
test
push
sahf
movsb
xor
jae
cmpl
lret
xor
pop
fadds
mov
into
imul
inc
mov
adc
stos
push
bound
mov
gs
leave
fstps
dec
mov
cmpsl
mov
mov
or
nop
mulb
pop
jmp
andb
push
int
adc
lss
mov
jb
insl
outsl
push
and
aad
inc
add
nop
fnstsw
jno
jbe
rorb
xor
mov
sub
cmpsb
insl
int
inc
daa
frstor
fwait
push
adc
jbe
add
push
pop
sub
fdivrl
into
pop
in
cmp
test
xchg
pop
hlt
pop
adc
hlt
xor
and
lahf
repz
scas
stos
ret
stc
popa
aad
mov
mov
pop
dec
aam
rcrb
cld
dec
daa
pop
stc
inc
mov
repz
in
push
xor
scas
imul
stos
xor
push
loopne
fcos
sbbb
div
clc
inc
leave
pop
in
jge
int3
or
and
jo
cmp
les
dec
adc
dec
lcall
sbbl
xor
inc
mov
aaa
scas
pop
and
push
and
add
lret
in
jne
push
aas
push
dec
andb
push
add
ss
adc
ret
pop
and
inc
imul
ja
fdivs
es
lock
inc
or
addl
loop
mov
mov
repz
pop
adc
xor
pop
insl
in
dec
pop
cmp
and
mov
dec
xorl
fists
pop
mov
pop
fcmovnu
cmpsl
pop
les
rcrl
add
data16
fadd
fdivr
jmp
icebp
inc
mov
inc
mov
pop
pmuludq
sub
xchg
jl
enter
cwtl
jnp
test
repz
mov
subb
mov
repnz
or
shrb
pop
in
clc
je
outsl
fwait
dec
jne
cmpsl
fldenv
sbb
mov
jae
adc
movsl
mov
dec
daa
xor
ret
les
push
add
mov
f2xm1
sub
clc
push
cltd
push
lret
daa
inc
leave
xchg
hlt
inc
repz
add
pop
mov
xor
adc
push
xor
bnd
mov
dec
outsb
fisubrl
daa
adc
add
iret
adc
mov
leave
ljmp
xor
out
mov
pop
repz
cmp
mov
je
jl
xchg
push
cmpsl
push
test
mov
cmpb
ss
loopne
xor
test
testb
adc
arpl
pusha
mov
xchg
dec
mov
pop
push
lret
adc
es
or
lods
sub
icebp
inc
xor
loopne
loop
mov
fwait
mov
add
sbb
inc
loope
xchg
add
insb
test
and
mov
popa
fwait
cmp
jle
mulb
fdivs
lcall
dec
mov
pop
dec
sub
mov
repnz
jp
ret
mov
jge
xchg
rol
mov
out
aam
xchg
loopne
pop
popa
lcall
jmp
or
push
jnp
xchg
jb
sbb
int
inc
cmpsl
mov
sbb
arpl
sbb
mov
sbb
cmp
or
push
add
fstpt
cli
divb
push
jo
adc
jmp
mov
mov
aam
stos
xchg
cltd
aam
ret
jne
add
inc
mov
push
xchg
jmp
mul
fstpl
push
adc
stos
leave
outsb
shlb
mov
loope
lret
push
sub
push
mov
inc
mov
pop
lahf
push
fldenv
stc
aam
jg
mov
hlt
addr16
hlt
adc
mov
in
je
lock
fdivl
nop
cmp
jbe
mov
fisubs
cmp
out
mov
or
push
jl
or
mov
rolb
out
mov
cli
or
cmpb
iret
adc
fsubrl
add
xchg
jb
push
mov
imul
jg
pop
andb
fldl2e
mov
shlb
mov
xchg
push
cmp
out
xchg
test
add
push
in
icebp
bound
sarb
std
pop
divb
shrb
loope
sub
mov
stos
mov
cmc
push
add
lret
inc
out
popf
shrl
mov
cmc
pop
cmpl
push
imul
adc
out
jno
notl
jae
sahf
mov
fimuls
xchg
lahf
in
fst
jnp
sbb
les
call
mov
mov
xor
test
into
pop
inc
ja
push
repz
iret
adc
mov
negb
xchg
jnp
push
and
mov
xor
adc
bnd
popf
int3
dec
sbb
out
lods
mov
repz
or
ja
std
cmp
test
scas
stos
pop
movsl
mov
mov
icebp
cmp
in
aas
jns
push
out
rcll
cli
mov
jp
cld
dec
push
mov
aad
inc
cmp
xor
aas
scas
xchg
les
or
and
negb
lods
jp
add
int3
or
test
push
arpl
in
mov
andb
adc
add
je
dec
mov
cltd
sub
ret
dec
xor
pop
jns
pop
out
adc
dec
sbb
mov
sub
aad
lahf
arpl
cmc
dec
cmp
ljmp
stc
cmpl
dec
push
inc
inc
adc
gs
inc
adc
ds
jbe
scas
mov
andps
mov
repnz
mov
ds
mov
mov
scas
lahf
shll
lods
mov
mov
rol
test
cli
push
sub
pop
icebp
dec
mov
mov
jae
dec
movsb
sbb
loopne
pop
and
js
ret
push
lods
pop
bnd
or
pop
or
xor
pop
rcrb
es
sbb
inc
rol
pop
and
int
in
test
mov
pop
sbb
mov
fnstsw
cmpsl
inc
movsb
sbb
es
xlat
sbb
xor
mov
pushf
insb
lods
mov
mov
into
dec
mov
bound
or
outsl
inc
mov
xchg
cmpsb
loopne
out
mov
sahf
popf
inc
cmp
cmp
ljmp
fsts
clc
pusha
scas
out
xor
aaa
sti
cld
psubusb
dec
cmp
jnp
out
sbb
in
or
mov
mov
lods
adc
lods
push
push
fidivrl
pop
pop
push
xchg
fsubs
out
push
test
sbb
nop
sub
ljmp
or
jg
nop
rorb
dec
sbb
jo
xchg
sbb
sub
ds
loop
xor
dec
sbb
mov
mov
stc
jo
jg
mov
cmp
fisubl
pop
adc
lret
push
mov
inc
jp
mov
scas
ucomiss
jecxz
adcb
popa
mov
cld
and
btr
out
decl
add
fisttpll
mov
andb
jp
fs
jg
push
xor
add
mov
arpl
shll
dec
or
movsb
test
mov
leave
int
lret
pop
in
add
shll
into
in
pop
cmp
xor
cmc
adc
xchg
popf
roll
push
push
movhps
clc
fcomi
pop
movsl
jbe
pop
js
cli
mov
addr16
sub
ja
inc
xchg
int
push
mov
subb
ficomps
repnz
adc
aaa
cwtl
mov
loopne
loopne
inc
mov
xchg
or
cli
and
push
cs
lds
jmp
daa
push
iret
jg
loopne
or
es
dec
sub
int
rcrb
or
pusha
cmpsb
punpckhbw
ret
in
dec
mov
inc
sub
add
mov
pop
jle
sti
push
fisubrs
adc
popf
dec
ss
xchg
mov
daa
jns
arpl
hlt
imulb
inc
lods
push
mov
into
pop
sub
insb
sub
ret
add
enter
mov
mov
mov
jno
pop
imul
call
call
rcrb
fs
jle
sbb
adc
andb
fcomip
mov
movsb
int
nop
fistpl
sbb
shll
xchg
sbb
js
cmpsb
sbb
inc
ret
orb
cmp
insb
sahf
add
dec
loop
mov
xchg
jmp
dec
std
mov
ljmp
push
jae
dec
lret
mov
cs
mov
push
jne
sbb
lahf
repnz
popf
clc
lret
test
inc
cmc
out
fisubs
inc
dec
mov
dec
enter
out
mov
push
xor
xor
movl
js
pushf
movl
popf
push
notl
inc
cwtl
pop
cltd
push
cmpb
xchg
xchg
loop
xchg
stos
loope
std
mov
pop
gs
fnstcw
test
test
dec
and
mov
and
loop
add
insl
lods
mov
inc
dec
mov
and
adc
popf
cmp
lret
repz
test
cmp
jb
jp
gs
mov
js
aad
mov
iret
loope
mov
ret
popa
pop
imul
xorl
pop
xchg
inc
pop
sub
cmpsl
xchg
sbb
push
imul
mov
inc
negl
popf
mov
repnz
fiadds
pop
mov
xchg
mov
inc
iret
xor
or
ljmp
cmp
adc
xlat
in
lret
out
fsts
jb
enter
cs
test
je
adc
leave
or
test
and
jb
add
dec
lds
clc
jnp
out
xor
pop
dec
insl
sub
pop
pusha
lret
scas
add
lods
adc
das
popf
aad
mov
jmp
jp
scas
or
xor
movsl
or
stos
push
inc
add
leave
xor
cmp
jno
repnz
es
xor
sbb
jae
cmc
dec
xor
sbb
mov
aam
sbb
pop
sbb
or
loop
xchg
xlat
mov
jge
xor
cmp
jnp
mov
inc
lcall
push
xchg
test
cs
lock
fisttpll
and
test
or
mov
test
andl
or
and
call
adc
ljmp
push
cmc
add
je
stos
call
mov
lds
pushf
mov
cmp
fwait
xchg
lds
lods
pop
adc
dec
jp
lock
ja
jae
mov
mov
mov
popf
and
dec
test
lret
lods
icebp
pop
pop
pop
imul
cs
xchg
clc
mov
movsb
sahf
inc
dec
or
aam
in
and
es
iret
mov
subl
sub
add
pushf
aaa
lcall
adcl
cmpsl
push
sub
pop
fsubl
arpl
pop
push
xor
sahf
push
xlat
in
sbb
adc
outsl
jae
lret
adc
in
fadd
dec
push
mov
dec
adc
inc
sbb
dec
sbb
and
std
daa
in
sub
jecxz
in
movsb
stc
std
test
push
lcall
adcb
enter
or
int
push
add
rorl
in
inc
int
mov
roll
mov
cmpw
call
inc
xchg
sbb
mov
js
xchg
mov
cmc
dec
jp
std
push
fndisi(8087
mov
inc
test
xor
dec
jo
cmp
nop
pop
pop
push
cmp
pop
mov
push
adc
inc
sub
pop
scas
movsl
or
mov
pusha
out
sbb
inc
es
mov
das
fisubrl
xchg
shlb
add
adc
imul
lret
fwait
push
in
not
test
andb
outsl
bound
mov
mov
aam
pop
mov
pop
pop
insl
shlb
lahf
add
aaa
xor
sbb
sbb
jle
xchg
xchg
fcoms
xchg
neg
bnd
idiv
or
xlat
mov
mov
jp
es
xchg
mov
xor
inc
and
add
jl
test
enter
push
ljmp
int3
sub
mov
mov
sbb
mov
mov
divb
nop
add
sub
enter
mov
and
rol
rclb
in
movsb
cmp
jb
mov
fdivp
in
decl
ja
and
cwtl
in
jecxz
ljmp
sbb
jl
out
push
xchg
cmpsb
xchg
inc
mov
lods
stos
aas
inc
pop
pushf
add
adc
repnz
ret
jbe
push
xor
sti
fmull
and
shrb
jp
push
pop
xor
stc
ret
inc
sarb
daa
dec
filds
into
xlat
lahf
jo
jp
sbb
int
sub
scas
sub
jnp
mov
xor
mov
mov
int
sub
mov
and
adcl
push
fs
xor
jae
add
test
sub
adc
loopne
je
xchg
xchg
sar
or
push
test
mov
mov
je
adc
adc
dec
in
xchg
aad
sarl
es
pop
in
mov
dec
into
insl
cld
pop
xlat
mov
sbb
aad
xor
push
ljmp
orl
cmp
pop
push
les
and
xchg
orl
push
lods
test
call
xchg
fisttps
jmp
cld
sub
inc
es
sub
lret
js
xchg
xchg
push
jo
movb
push
pushf
add
dec
stc
aad
sub
fsubrs
pushf
sub
mov
jp
into
popa
or
leave
gs
mov
mov
or
inc
ljmp
pop
push
adc
or
aam
push
inc
dec
jbe
gs
inc
adc
daa
mov
add
negb
arpl
leave
inc
xchg
adc
xor
and
sub
cld
dec
mov
rol
outsb
andb
aas
xor
fwait
mov
loop
cwtl
jge
mov
bound
fcmovbe
xchg
fs
out
stc
xor
sbb
jne
in
rorb
sub
xor
push
xchg
outsb
inc
icebp
cltd
mov
insb
out
sub
dec
movsl
inc
xlat
fsubr
sbb
sub
inc
pop
sarb
addr16
jns
push
lahf
jge
mov
mov
aad
data16
ret
pop
js
rcll
sbb
scas
adc
incb
sub
pusha
jbe
pop
aaa
mov
lret
push
adc
gs
loope
in
subl
mov
jo
xchg
test
icebp
cmpsb
and
pop
mov
lods
xchg
lret
sbb
push
scas
sub
jge
push
pop
dec
cmp
pop
or
jge
ret
pushf
and
popa
sub
aas
std
inc
test
cmpsl
aaa
inc
dec
pop
icebp
dec
xchg
and
cmp
xchg
mov
cwtl
mov
pop
aaa
sbb
sbb
mov
jge
test
mov
subb
mov
fprem1
fists
xchg
xor
cwtl
xor
insl
outsb
fstp
loopne
cld
test
fidivl
aad
sbb
lcall
scas
and
adc
or
dec
and
negb
sub
gs
arpl
sbb
mov
movsl
aaa
push
mov
sub
xchg
push
mov
sub
and
scas
hlt
imul
jmp
jno
inc
pop
ljmp
repz
sti
inc
stc
add
pusha
mull
cmp
adc
jne
push
adc
inc
lods
stos
cld
push
adc
xor
mov
js
cmp
mov
shlb
pop
jecxz
xor
in
add
cmp
push
fs
ja
dec
mov
add
test
leave
push
imul
lret
shlb
mov
jo
into
pop
and
fiadds
fwait
cwtl
cmp
shrl
adc
sbb
inc
js
and
test
into
jnp
call
ds
cs
jl
and
push
jmp
aas
add
xor
cmpsb
xor
lcallw
mov
cmp
dec
icebp
jbe
or
popa
aam
jecxz
loopne
and
or
lret
in
xchg
xchg
inc
push
adc
movsl
cltd
mov
dec
in
jb
aas
icebp
add
in
leave
sub
and
addb
lahf
je
cmc
adc
xorb
mulb
xor
lock
notl
xchg
push
out
popf
stos
inc
push
cli
cld
xlat
test
mov
or
xchg
jg
shlb
sbb
mov
pop
mov
push
push
sub
mov
adc
inc
jmp
aad
popf
add
xchg
je
sbb
cmp
cmp
fcoml
out
mov
sbbb
mov
popf
mul
nop
jl
push
shlb
test
andb
xchg
add
je
dec
mov
and
imulb
cmp
clc
mov
push
mov
insb
add
jg
jge
ret
fs
popf
sub
xor
jne
je
sbb
or
fists
inc
rcrl
jle
test
fdiv
clc
scas
sbb
adc
lods
lret
pop
add
or
pop
clc
mov
stos
mov
out
ret
mov
jecxz
sbb
out
cld
hlt
mov
fstps
out
ret
push
dec
adc
mov
mov
fstpt
push
jns
xor
mov
pushf
pop
cwtl
and
stos
ficompl
call
sahf
fildll
xchg
out
les
mov
icebp
leave
xchg
nop
mov
and
shlb
pusha
push
fdivl
xlat
addr16
mov
xchg
sbb
mov
in
and
push
clc
adc
pop
les
xlat
pop
pop
hlt
or
ret
add
sbb
fisubrs
aas
js
loop
in
push
ss
push
lret
repnz
inc
adc
icebp
cltd
mulb
fmull
popa
lods
fists
cmpsl
popf
bound
insb
adc
adc
sti
xchg
inc
movsb
rcrl
pop
push
shr
cmp
icebp
cmp
cmp
fisubrs
xorl
inc
inc
imul
cmp
rclb
mov
xchg
ret
sub
lret
ret
loopne
mov
mov
xchg
jnp
js
xor
in
stos
jecxz
jp
out
mov
js
movsb
loope
mov
pusha
xchg
das
xor
lahf
lret
inc
std
push
sahf
test
jmp
mov
sbb
icebp
pop
jb
inc
fucomip
adc
hlt
int
xchg
mov
sbb
fcomps
mov
xchg
fdivs
jle
les
dec
lcall
inc
mov
int
lea
and
ret
sti
lea
cmp
roll
repz
fcmovnbe
inc
xor
xchg
and
divl
fxch
push
lods
mov
shll
push
sub
fsubrl
cld
push
pop
push
xchg
mov
push
into
jbe
inc
lods
insb
and
lea
test
outsl
inc
in
es
jecxz
adc
adc
addr16
push
das
xchg
fadd
test
data16
imul
and
and
xor
sub
out
jge
and
sahf
mov
ret
pop
fadd
icebp
jecxz
frstor
dec
cmp
push
push
sub
test
arpl
mov
ss
add
xchg
mov
and
inc
and
dec
xor
and
repz
stc
cmpsl
out
idivb
jae
cmpsb
pusha
inc
cld
ret
jne
fisubrs
lods
leave
es
dec
pop
into
fnstcw
fwait
outsl
fimull
ret
jl
dec
push
test
out
push
and
xchg
fimull
sub
and
loope
push
popa
test
push
scas
push
push
mov
mov
sbb
stos
mov
outsb
in
fxch
push
negb
cmp
cmp
inc
kmovw
mov
ret
mov
dec
or
das
in
sahf
adc
pop
popa
out
lret
or
pop
pusha
sti
sub
mov
out
sub
xchg
mov
scas
fnstcw
loop
mov
adc
mov
jecxz
pop
jbe
fdivp
fdivr
mov
addr16
outsb
mov
dec
test
fildl
dec
jp
push
and
adc
movsb
enter
mov
mov
xor
rolb
in
adc
push
in
push
repz
add
push
push
scas
mov
test
xchg
sub
xchg
out
loop
out
push
lock
cwtl
push
loopne
stc
popa
jo
mov
jmp
ja
cld
cmpsl
pop
lock
ljmp
outsb
adc
mov
or
aam
mov
adc
fs
aad
rclb
push
orb
sarb
mov
jns
out
mov
shll
out
mov
dec
push
push
mov
push
std
pop
pop
bswap
sti
cmp
push
and
int3
fbstp
cmp
cltd
imul
mov
outsb
ljmp
xchg
test
ret
cmpsb
pop
icebp
dec
push
loopne
xor
out
mov
adc
inc
inc
add
mov
or
out
dec
cmp
sbb
negl
mov
jno
andl
mov
ret
lret
fmul
insl
and
fmuls
rcrb
push
or
mov
jecxz
movsl
and
xchg
test
lahf
mov
std
popa
or
and
jmp
adc
cmpsb
and
jae
or
xor
js
icebp
mov
stos
sbb
and
push
lret
hlt
xchg
stos
aad
pop
fdivl
outsb
push
mov
lahf
adc
and
adc
pop
leave
mov
hlt
pusha
lods
cwtl
pop
cmpsb
and
stos
mov
mov
mov
add
pop
xchg
out
xchg
or
scas
jnp
jle
enter
dec
dec
rol
fwait
test
and
hlt
xchg
jg
adc
pop
jmp
shl
mov
push
push
out
mov
add
push
sub
pop
mov
push
into
mov
mov
xor
ret
xor
cmp
cmp
mov
pop
outsb
and
jecxz
push
jecxz
fistpl
sbb
xor
lock
out
mov
daa
jmp
dec
hlt
or
sahf
add
push
fwait
sahf
push
xchg
out
and
cmp
nop
inc
xchg
adc
mov
add
add
adc
mov
outsl
scas
dec
jae
out
or
nop
adc
adc
add
inc
test
mov
fs
fdivrs
sti
xchg
xchg
test
std
xchg
or
mov
xchg
in
add
pop
scas
xor
cs
and
das
aaa
bound
sbb
jb
addr16
out
push
ret
inc
cmp
jmp
inc
test
lret
and
add
mov
adc
xor
loop
ds
xlat
xchg
repnz
inc
shrb
inc
mov
movsb
inc
jmp
jp
or
sti
cmp
mov
mov
xor
mov
js
mov
hlt
mov
and
data16
and
cmp
repz
out
inc
mov
leave
enter
outsb
cmp
mov
lea
jp
and
lret
ds
push
adcl
add
inc
push
mov
into
cmc
and
push
cld
mov
and
repz
into
fs
std
fiadds
add
rorb
roll
inc
pusha
scas
push
inc
rorb
jp
icebp
pop
mov
repnz
sbb
and
test
fidivrs
xlat
or
test
mov
mov
push
popf
pop
test
enter
icebp
jle
cmp
lock
sbb
ljmp
packsswb
pusha
lods
jg
fnstenv
mov
xchg
add
mov
xchg
ficoms
jl
mov
mov
and
mov
cmp
xchg
sub
shll
cmpb
jle
sar
lcall
outsb
jg
pop
jmp
dec
xor
dec
fcompl
aam
popa
andb
cld
or
lods
imul
aad
or
in
add
push
int3
movsb
and
out
mov
inc
mov
cmp
add
negl
fdivs
sbb
cmp
pushf
push
dec
rorl
fadd
mov
stos
adc
addr16
adc
pop
mov
lcall
hlt
call
iret
mov
push
and
iret
dec
add
or
test
rcrb
mov
pop
push
xchg
enter
mov
pop
stos
insb
mov
dec
nop
jg
loop
pop
ja
mov
call
lret
subl
jno
xor
sbb
jl
int
xor
xchg
adc
pop
fstps
lret
in
leave
repnz
mov
pop
notb
lret
xchg
mov
ds
sbb
aas
imul
fidivl
loop
orl
jl
jl
xlat
push
loope
int
lea
aaa
lcall
lods
ss
push
add
dec
and
pop
les
shlb
cltd
or
inc
sub
ja
fmuls
add
ss
aas
sbb
stos
adc
adc
mov
imul
sub
loopne
clc
mov
jl
aam
add
mov
jecxz
push
add
adc
mov
loope
pop
mov
ret
add
decb
fisttpl
repz
inc
or
sarb
push
and
push
jne
mov
push
vmovsd
adc
sub
push
jle
and
sub
enter
sub
inc
add
jle
lds
andl
outsb
inc
fmull
mov
sub
rorb
repz
push
xlat
push
sbb
mov
lret
jmp
hlt
and
adc
inc
test
jmp
jo
mov
inc
int3
das
mov
pop
add
in
dec
scas
sahf
shrl
jb
mov
in
mov
xlat
sub
scas
cld
or
add
mov
test
sub
cmp
jno
stos
movsb
xchg
popa
dec
adc
pop
xchg
out
dec
inc
jo
ja
in
filds
pop
and
mov
cltd
fs
fs
cmp
mov
hlt
jb
in
mov
movsb
push
adc
push
cmp
adc
mov
fisubl
jb
mov
hlt
dec
aaa
jno,pt
adc
pusha
test
mov
pop
das
sub
shlb
lcall
out
xchg
popf
add
push
insb
enter
in
cmp
sbb
mov
add
imul
dec
scas
sbb
push
push
ret
xor
ret
mov
in
pop
xor
aas
pop
mov
mov
cmpsl
cmp
scas
test
mov
movsl
and
xchg
flds
push
roll
lock
push
outsb
pushf
xchg
and
jge
dec
pop
xor
inc
div
leave
cmpsl
mov
test
pushf
jno
hlt
test
and
dec
cmp
test
xor
sub
sub
mov
push
jmp
cmc
test
cmpl
shll
inc
outsl
in
cmp
scas
lea
test
inc
mov
aaa
sub
xor
sbb
and
add
sub
outsl
xlat
pop
pop
mov
call
pop
cmpsl
and
ss
lea
xchg
mov
push
aam
add
mov
stc
frstor
clc
test
stos
cmp
ds
add
testb
adc
mov
jmp
fwait
jo
cwtl
lahf
add
push
sbb
imul
jno
inc
insb
xor
mov
pxor
in
or
sub
arpl
push
mov
lds
insl
cmpsb
sub
in
cwtl
mov
adc
sub
add
cmp
cs
add
cwtl
jg
mov
jb
pushf
push
pop
clc
dec
xor
out
sub
xor
rcrl
mov
adc
daa
cmp
les
add
mov
mov
mov
push
mov
stos
aas
lods
bound
sub
jb
dec
cmp
int
xor
and
adc
jnp
imul
xchg
xor
enter
clc
stos
insl
scas
ret
push
test
addl
cli
les
mov
jo
ss
insb
imul
cmp
pop
push
push
jg
iret
jp
or
pop
movsb
add
ret
out
and
cmp
imul
xor
push
aam
sti
aad
or
in
mov
data16
mulb
gs
ret
loope
shll
xor
inc
dec
pop
lea
push
pushf
insb
addr16
movsb
adcl
dec
cmpl
dec
xchg
pop
js
test
mov
mov
or
push
pop
insb
and
loope
repnz
adcl
in
cld
mov
fsubl
ja
adc
lret
jae
sbb
sbb
pop
loop
jmp
or
addb
and
sub
and
iret
mov
push
pop
insl
mov
ret
stc
jg
std
add
ljmp
push
push
fdivl
xchg
sub
sbbb
ljmp
inc
and
cmp
shrl
fsubr
lret
rcl
es
sahf
das
sub
mov
inc
out
or
je
popa
shl
mov
pop
jno
push
push
cmp
jns
sbb
daa
test
pop
jle
cwtl
test
pop
push
stc
bound
dec
mov
aas
or
add
and
addr16
scas
push
daa
jmp
sbb
in
out
cmp
jnp
testb
mov
sbb
dec
ret
es
fcoml
ljmp
mov
ds
mov
add
mov
test
imul
add
imul
sub
leave
addr16
push
inc
xor
insl
push
adc
popf
dec
test
lods
sub
pop
xchg
dec
adc
and
cmpsb
sbb
xor
push
mov
cmp
adc
sahf
mov
dec
aam
or
xchg
jne
mov
lock
sbb
adc
cmpsl
iret
or
std
xchg
decl
pop
cs
aad
sub
adc
and
xchg
push
lret
subl
push
cltd
xchg
mov
shrb
xlat
inc
shll
xor
mov
jl
xchg
cmp
mov
pushf
nop
lods
cltd
int
jecxz
push
pop
lcall
lods
jne
insb
push
sub
repz
pop
sbb
stc
add
lock
dec
mov
or
ficoml
sarb
movsb
dec
out
shl
loope
dec
dec
rcll
sti
imul
lods
ret
adc
dec
push
filds
pop
inc
xchg
jg
scas
out
push
dec
mov
scas
out
cltd
xchg
mov
ljmp
movsb
icebp
mov
or
push
das
scas
jmp
push
dec
push
and
das
mov
add
sub
mov
pop
push
cmp
xchg
xor
pop
sbb
mov
outsl
nop
das
nop
addr16
push
outsl
adc
pusha
add
mov
mulb
repnz
mov
xchg
inc
xchg
xor
mov
scas
jo
dec
test
inc
repz
cmp
xchg
add
add
or
push
pop
popa
arpl
sbb
mov
cmp
push
mov
mov
clc
mov
sub
cmpsl
pushl
test
shl
cmp
mov
rol
push
cltd
les
aaa
and
fsubl
adcb
jp
stc
fisttpll
pop
ficomps
shl
inc
ss
push
push
cmc
xor
xchg
or
aad
lea
add
or
mov
xchg
les
int
cmp
fs
stos
pusha
repnz
test
jmp
xchg
in
in
jmp
lds
push
cwtl
xor
and
movl
ss
fcmovnb
jmp
cmp
fstpl
movsl
dec
into
push
nop
icebp
stos
ljmp
mov
and
idivl
push
gs
icebp
adc
sub
fwait
sub
aad
inc
jl
mov
add
pop
call
loop
xchg
push
fldz
dec
cld
sbb
dec
das
pop
sbb
arpl
jb
xchg
js
add
cli
jb
leave
data16
push
and
sub
jae
inc
lcall
xchg
loopne
stos
jnp
xor
inc
push
das
jns
pop
pop
and
or
sub
mov
pop
loope
aas
sbb
sbb
scas
aad
mov
fsubr
popa
imul
cmp
cmc
mov
lods
adc
fstl
in
push
popa
rcl
push
scas
scas
test
aaa
test
fst
push
scas
xor
aam
outsl
pushf
add
pushf
loope
pop
insl
outsb
gs
jecxz
shlb
fnsave
pushf
xor
addr16
mov
repnz
out
fsubrl
or
test
out
fsubrl
sti
aad
inc
mov
dec
sbb
or
push
lcall
adc
mov
push
hlt
push
mov
mov
mov
jecxz
movsb
repnz
loope
sbb
cmp
adc
mov
inc
mov
dec
jb
cmpsl
mov
or
mov
jnp
repnz
lds
pop
subb
lret
push
popl
sub
mov
or
aam
xor
into
pop
ret
rcrl
fiaddl
pop
and
xchg
arpl
inc
cmp
inc
imul
push
mov
ja
jnp
dec
mov
inc
js
stos
shlb
xchg
std
lock
ss
xchg
and
incl
test
lahf
out
gs
lcall
popl
out
dec
ja
mov
adc
cmp
and
rcll
ret
into
sub
push
test
sbb
mov
pop
aad
mov
jae
jp
pushw
hlt
out
dec
mov
mov
insb
sub
icebp
aad
stc
test
cli
movsl
dec
mov
insb
outsb
jmp
adc
push
mov
pop
sub
sti
pop
mov
cmp
inc
add
jmp
in
sub
lcall
add
adc
lret
inc
sahf
fs
push
aas
cs
xchg
adc
js
cli
insl
jge
cli
xchg
push
cltd
sbbl
push
add
mov
shll
xlat
std
fsubrs
mov
pop
dec
adc
xor
sub
aaa
sbb
xrelease
call
cltd
repnz
lods
ljmp
fucomi
outsb
sub
int3
in
or
pop
mov
adc
dec
imul
shrd
add
add
shlb
nop
pusha
push
sub
daa
jbe
pushf
hlt
dec
notl
or
adc
mov
movsl
mov
rorb
dec
sahf
fwait
popf
push
and
cmpsb
push
inc
jp
fst
loope
cmp
test
and
repnz
inc
aas
cs
test
jle
push
lods
enter
lock
test
and
mov
push
and
push
std
pop
aas
adc
lods
dec
or
lds
loopne
dec
xor
cmp
jp
in
inc
and
lret
jecxz
mov
mov
push
xor
sbb
mov
idivb
xor
push
xchg
js
adc
in
lods
pop
mov
js
fstl
push
out
mov
lea
xorb
add
test
push
shll
mov
push
mov
pop
shr
mov
xchg
loopne
pop
inc
sub
jg
jmp
arpl
popf
mov
inc
dec
or
jp
aam
mov
dec
mov
imul
xchg
and
or
mov
mov
and
gs
inc
std
xlat
in
jns
stos
mov
mov
mov
cmc
sbb
jnp
shrb
sbb
std
mov
add
xchg
hlt
pop
push
shl
arpl
lret
imul
insb
inc
loope
pop
sub
les
push
mov
scas
ljmp
jno
fisttpll
rcrb
xchg
jle
inc
es
lcall
ljmp
popa
push
mov
ss
aam
fadd
pop
push
jge
sar
insb
add
icebp
int
pop
pop
dec
in
icebp
dec
mov
rsm
adc
jae
or
xor
ljmp
add
in
in
lahf
scas
inc
push
pop
push
out
push
add
mov
in
jp
jb
cmc
or
or
mov
pop
outsb
aaa
leave
shl
add
addr16
sub
ds
add
xchg
int
imul
sti
lret
cmp
pop
sub
out
jle
cmpsb
cwtl
sbbb
cmp
mov
push
cmc
rep
adc
push
leave
sbb
rorl
cmp
mov
std
enter
or
push
xor
push
mov
jp
loope
mov
js
push
dec
cmc
decl
mov
ret
push
sbb
imulb
push
cmpsb
xchg
xor
dec
ja
xor
mov
mov
jmp
ss
addr16
mov
push
stc
sbb
aam
dec
sbb
outsl
sub
sub
ret
pop
jb
les
pop
out
stc
test
xorl
pushl
or
add
pop
fwait
mov
sub
push
cltd
or
arpl
and
mov
xor
add
pop
jbe
ljmp
shlb
mov
lret
dec
cmp
jl
data16
repz
dec
mov
fs
xor
xchg
int
cmp
cwtl
cmp
loop
stos
jmp
lret
leave
fcom
mov
mov
fsubr
add
jno
ds
repnz
dec
or
cwtl
pop
inc
fdivrl
xchg
icebp
aas
data16
dec
mov
mov
fcomps
dec
adc
dec
push
loop
sahf
add
jne
popa
in
fs
push
aas
inc
cmp
sbb
addr16
jg
mov
ret
repnz
xor
ss
sti
inc
popf
lock
ds
xor
lods
std
xlat
sbb
mov
out
and
xchg
loopne
ret
fstpl
mov
sbb
sti
imul
pop
gs
dec
das
nop
adcl
xchg
mov
inc
imul
call
out
jmp
repnz
repz
jbe
xor
push
mov
sbb
or
sub
clc
mov
ss
std
rcl
xchg
adc
adc
test
mov
in
jno
push
fmull
and
outsl
test
fsubrs
ret
daa
mov
sub
shlb
scas
test
sub
fadds
push
push
push
jle
cmp
shlb
and
sbb
cmc
dec
js
in
or
std
mov
test
mov
jecxz
rcrl
and
ss
jecxz
xchg
or
out
dec
arpl
or
mov
and
sti
lahf
and
in
and
xchg
lcall
jge
repnz
cwtl
cmp
sub
inc
jle
lock
push
adc
cmp
int3
mov
xlat
ror
hlt
es
xor
mov
adc
hlt
adc
call
sbb
xor
and
cmc
mov
pop
xchg
dec
jecxz
sbb
es
cld
and
nop
jns
stos
inc
jmp
cmp
jbe
cmp
stos
pop
insb
std
xchg
leave
js
adc
loop
add
fcmovnu
cmp
push
int
les
pop
sub
sbb
sti
inc
insl
cmpsb
xchg
or
out
inc
cli
cmp
popf
in
mov
xchg
cmp
dec
inc
jp
pop
sub
and
jl
nop
dec
jne
xor
cs
add
cmp
or
in
in
cld
xor
jbe
fnstcw
push
out
mov
xchg
adc
les
lock
xorl
sti
mov
mov
push
repnz
mov
jbe
mov
cltd
dec
stos
mov
dec
or
cld
dec
dec
repnz
mov
push
into
sbb
js
inc
icebp
mov
sbb
js
test
roll
push
jecxz
jbe
cmp
cmp
jmp
stc
push
bound
mov
or
push
sub
inc
pop
jp
dec
std
andl
push
nop
loope
xlat
xchg
adc
test
and
dec
cmp
push
push
mov
std
out
inc
pop
xchg
fs
mov
dec
je
xor
lock
ljmp
imul
mov
ficoml
push
movsb
pop
mov
shrl
lock
or
and
int3
and
arpl
lcall
addb
das
lock
inc
pop
fistpl
jp
cmp
pop
xchg
push
inc
rclb
mov
pushf
aam
notl
out
add
or
rorl
mov
add
cwtl
sti
and
mov
jnp
or
sub
daa
mov
test
adc
push
mov
xchg
xchg
out
adc
je
mov
dec
pushf
loope
jae
adc
mov
jno
insb
sub
clc
push
mov
jecxz
or
ss
addr16
je
xchg
push
out
in
test
or
xor
data16
imul
cmc
movsb
cmp
je
dec
inc
sahf
fidivl
test
leave
fwait
and
mov
dec
mov
les
cli
xchg
ja
bound
sbbl
pusha
aad
insl
mov
xor
xor
sti
inc
dec
sub
jb
jp
mov
xchg
movsl
xchg
push
push
testb
pop
in
decb
inc
xlat
and
popf
push
xchg
push
jae
xor
rorl
and
cmp
and
sbb
sbb
call
jl
in
jae
rcrl
neg
scas
inc
sub
cld
popa
sub
les
adc
push
ss
mov
popa
dec
add
sub
sti
nop
mov
or
add
icebp
mov
hlt
aam
int
jle
arpl
jecxz
xor
rolb
iret
mov
inc
mov
pop
shrl
sti
or
or
pop
cmp
dec
cli
pop
xlat
pop
out
fnstcw
sbb
test
dec
inc
sub
mov
mov
pushf
xchg
addr16
fcoml
adc
push
popf
hlt
push
icebp
and
cwtl
jmp
pop
inc
loopne
test
nop
mov
sub
and
rcrb
arpl
push
sarl
scas
xor
popf
fidivrl
xchg
mov
stos
out
adc
push
or
rol
hlt
mov
xor
pop
aad
and
pop
cmpsb
mov
cmp
xchg
mov
jbe
pop
subb
xchg
adc
push
inc
mov
jae
push
or
ss
out
pop
cmc
xor
cmp
and
mov
and
movsl
pop
push
dec
and
jge
lcall
inc
ja
inc
push
insb
mov
mov
mov
sub
adcl
add
push
or
xchg
adc
or
insl
lods
cmp
cmp
and
lods
pop
jmp
pop
dec
mov
into
fsubl
aad
cltd
loope
push
push
or
adc
xorb
mov
in
out
cmp
mov
out
mov
mov
jne
pop
pop
stc
xchg
jbe
icebp
xor
pop
mov
inc
repnz
dec
faddl
xchg
into
lret
or
mov
movsl
arpl
add
aaa
pop
push
mov
mov
mov
push
jnp
add
pop
ret
cmpsl
addr16
lods
adcl
jbe
mov
xlat
mov
sub
lods
mov
dec
jp
ljmp
xor
sub
cmc
int
cmp
dec
inc
leave
sub
inc
xchg
fdivp
sub
adc
cmp
ficoms
das
fildll
popaw
and
int3
ja
inc
cmpsl
aas
sti
sbb
sub
dec
int3
movsl
das
ja
xchg
aaa
loop
outsl
aad
jecxz
enter
popa
or
mov
adc
icebp
and
inc
xchg
fisubrl
mov
push
add
fsubrp
sti
out
repnz
ljmp
fs
lahf
dec
pusha
pop
mov
and
fistl
hlt
jae
push
inc
sbb
mov
mov
inc
lods
lcall
iret
cli
popf
fwait
pop
mov
movsb
jne
mov
mov
or
xor
lock
jecxz
mov
mov
movsl
pop
sub
cli
pushf
les
repnz
fbld
icebp
xchg
jo
fisttps
mov
test
jno
rolb
cmp
js
xor
push
cld
and
sbb
shlb
sub
into
ffreep
rorl
cmp
ljmp
cmc
test
ja
aaa
mov
adc
jns
or
aas
lea
pushf
decb
mov
xchg
push
pusha
iret
js
hlt
push
lods
inc
adc
sbb
loop
nop
mov
mov
out
jp
arpl
test
xchg
dec
iret
mov
sub
push
in
inc
sbbl
xlat
fdivrp
adc
pushf
fwait
jbe
pop
iret
stos
clc
push
and
lcall
lret
aas
orl
add
cltd
mov
inc
es
jl
jae
insl
out
pushf
out
sub
std
jp
sub
in
sbb
lds
jne
mov
inc
sub
jp
les
pop
hlt
jge
push
aaa
pushf
mov
adc
push
scas
jmp
lds
movsb
push
iret
cmp
stos
cmp
inc
shlb
push
push
je
fisttpl
hlt
or
out
adc
xlat
push
call
pop
mov
xor
popf
inc
test
pop
mov
es
xor
ljmp
sarb
cmp
cmp
dec
int3
adc
sbbb
sub
mov
push
loop
cmpsb
rorb
scas
lock
xor
cmpsb
mov
mov
mov
push
push
cld
adc
into
mov
flds
mov
cltd
dec
test
std
push
jl
icebp
mov
push
cmp
out
push
subl
pop
les
and
mov
popa
pop
or
cmp
jp
or
les
dec
pop
movsb
xchg
adc
imul
iret
cmp
dec
lahf
nop
aad
cltd
sar
cltd
pop
dec
fnstsw
fidivs
mov
insb
call
test
addr16
mov
cmpsb
daa
lods
sub
or
sti
mov
fs
inc
jle
daa
dec
cltd
int
inc
push
ficoml
jp
scas
movsb
sub
push
in
jnp
or
in
inc
rcr
lahf
cmpb
out
xchg
loope
mov
es
aaa
sti
ja
pop
cmpsb
call
in
inc
xchg
adc
mov
ds
sbb
bound
push
fcomps
fimull
inc
int3
ja
fbstp
ficompl
sbb
pushf
cmp
mov
jnp
xor
xchg
pop
xchg
cmp
loop
pop
sbb
add
icebp
lock
repz
int3
movsb
test
or
lret
xchg
adc
loope
ret
xchg
inc
arpl
ljmp
jne
add
repz
in
insb
and
mov
ljmp
adc
mov
popa
imul
cs
push
clc
xor
jb
mov
inc
xor
xchg
into
loopne
xor
jmp
jbe
enter
loope
or
rcll
mov
and
push
pop
mov
dec
popf
mov
rorl
in
data16
and
adc
add
mov
sub
lock
push
pop
les
divb
stc
and
sub
hlt
aad
cld
mov
jmp
cwtl
jge
rol
xor
pop
das
inc
sbbl
jo
or
aas
sbb
or
xor
mov
lds
repnz
or
cmp
or
sbb
pop
cld
xor
mov
fucomi
jle
jo
xor
popf
adc
scas
pusha
pushf
cmpsb
dec
dec
push
xchg
push
mov
add
inc
or
dec
jl
xor
cmp
adcb
insb
push
aad
sub
mov
daa
push
jg
sbb
push
loopne
cmp
pushf
cwtl
call
imul
pop
add
mov
xchg
scas
xchg
fsubr
cmpb
cmp
test
lret
iret
nop
jl
out
lods
movsb
jns
test
mov
ret
int
outsb
add
sub
leave
clc
lods
push
lea
lds
fsin
test
jp
outsb
sub
mov
popa
pop
test
push
jle
scas
mov
jns
sub
sub
xchg
daa
adc
or
mov
mov
mov
jnp
ss
push
movsl
sub
rcrb
cmp
ficompl
adc
cmp
sahf
stos
cmp
mov
ss
ja
into
fnsave
je
inc
and
xchg
and
xchg
pop
fwait
outsl
lods
sub
int
popf
mov
mov
inc
adc
popa
inc
jae
shlb
aas
mov
repz
add
sbb
or
xchg
ss
test
add
mov
repz
cmpsb
insb
shrb
mov
andb
mov
ljmp
jge
mov
ljmp
xor
xorb
sub
xchg
pop
shlb
xchg
xor
mov
pop
xchg
xor
jo
testb
shr
scas
fldl
jo
mov
dec
enter
flds
inc
push
and
pop
int3
sub
adc
mov
int
cmp
mov
imul
dec
xchg
or
xor
mov
lea
gs
cmp
mov
jp
cld
pop
dec
aaa
sarl
in
fwait
add
das
int3
mov
call
lods
or
sub
cmp
add
out
mov
pop
into
lock
aaa
fstl
leave
out
lahf
sti
push
dec
push
inc
mov
dec
outsl
inc
hlt
push
pushf
pop
fidivl
loop
jg
or
out
jmp
fbstp
addr16
add
lea
daa
rsqrtps
add
pushf
imul
stos
jo
les
inc
or
icebp
cltd
fildll
or
mov
sub
dec
mov
jnp
lds
xchg
inc
repnz
lcall
testb
mov
arpl
ljmp
adc
aad
aam
scas
sahf
cltd
and
cwtl
adc
xchg
ret
jge
cmp
adc
xchg
mov
bound
and
sbb
and
mov
das
adc
lret
xor
jno
repz
xor
or
gs
movsb
push
rcll
ficoml
adc
and
js
add
jbe
mov
push
inc
test
outsb
fimuls
imul
xchg
je
add
je
jbe
aam
iret
sbb
cwtl
inc
pop
jmp
sub
fmuls
mov
dec
mov
aad
mov
mov
fcmovnb
dec
cmp
mov
jno
and
cmp
mov
jle
daa
dec
hlt
pop
rolb
or
adc
dec
fists
mul
repnz
insb
xchg
lds
pop
mov
and
sbb
lret
mov
mov
mov
push
pop
es
mov
ficompl
movl
gs
ss
sub
dec
aad
jne
loope
xchg
dec
add
mov
pop
pop
shrb
ret
scas
aas
or
ret
les
pop
or
xchg
rol
push
dec
xchg
fldt
mov
and
sbb
les
sbb
jle
adc
and
je
addr16
jge
mov
in
xor
xchg
sub
xchg
sub
or
dec
stc
or
stc
mov
outsb
mov
je
push
mov
pop
xchg
pop
mov
mov
fcompl
ficomps
sbb
insb
repz
movsl
ficompl
std
out
lea
push
test
inc
cltd
mov
loopne
scas
repz
xor
cltd
cmp
push
out
rolb
dec
lret
not
cmp
mov
push
pop
gs
push
jb
lods
bound
test
mov
into
icebp
xchg
addb
mov
xor
ja
xor
aas
cmp
sub
insl
int
test
jle
movsl
ja
adc
pop
mov
pop
jnp
out
cmp
or
jle
ret
fidivl
ficoms
sub
les
dec
mov
fstps
ljmp
add
or
sarl
pop
loop
test
mov
mov
out
sbb
mov
push
pop
xchg
fwait
aaa
sahf
xchg
ret
int3
push
xor
add
sbb
cmp
cmp
addr16
dec
movb
xchg
rol
adc
mov
xchg
and
mov
jnp
sub
in
lods
jno
ret
cmpsb
leave
sahf
jo
push
inc
daa
push
adc
push
adc
stos
and
xchg
cmpsb
xchg
sahf
idivl
mov
pop
push
add
fwait
dec
xchg
xor
push
inc
fcmovb
jnp
mov
int3
pop
hlt
adc
mov
inc
scas
xlat
mov
mov
pop
lcall
test
aad
mov
mov
jno
mov
outsl
iret
aas
test
aaa
loop
lret
xchg
imul
scas
js
test
test
push
js
decb
push
call
jge
push
jno
popa
xor
inc
xor
ss
or
es
cmp
xchg
pushf
dec
or
xor
mov
es
inc
sbb
repnz
fisubl
add
in
and
jmp
push
scas
cmpsb
addr16
sub
aas
adc
push
dec
scas
mov
cmp
int3
sub
pop
push
stos
mov
iret
mov
push
dec
lea
xor
mov
insb
sarb
pop
dec
bound
or
std
popf
and
push
sbb
and
not
negl
shl
pushf
sbb
fildll
icebp
mov
rolb
pusha
jmp
scas
jo
outsb
xor
je
jo
sbb
orl
pop
add
push
and
mov
test
jo
imul
add
sahf
outsl
jb
dec
orl
pop
stc
cltd
add
push
push
leave
xchg
ret
mov
mov
fildll
mov
jb
add
dec
or
ja
lods
ds
nopl
and
cmp
mov
pusha
xchg
in
xchg
subb
not
jae
jbe
fwait
mov
lret
das
jno
in
or
cmp
xor
mov
mov
mov
push
and
mov
inc
ds
in
sbb
loop
jb
sahf
mov
dec
hlt
push
push
fdiv
xchg
xchg
jl
subb
sbb
xlat
cmp
je
je
sti
test
shl
and
rclb
mov
xchg
jge
std
sub
sar
and
push
dec
mov
stos
ljmp
push
scas
testl
push
jnp
cwtd
sti
xor
loopne
ret
sub
daa
arpl
pop
testb
push
aam
mov
and
mov
mov
inc
dec
out
jnp
and
add
sub
hlt
adc
int3
dec
and
cli
and
inc
push
or
push
fistpl
mov
cmpsb
jbe
jle
rcrl
insb
rcrb
sbb
mov
fstps
xchg
aaa
mov
sbb
adcl
dec
cltd
sbb
adc
repnz
clc
cmp
addr16
xchg
adc
mov
insb
xor
mov
adc
xlat
nop
jle
imul
mov
movsl
test
mov
mov
jle
push
mov
mov
les
imul
jae,pn
jnp
les
bound
push
jae
adcb
cmc
stos
cmp
scas
cmpsb
cmpsl
pop
xchg
xchg
dec
ret
ljmp
inc
cmpsb
mov
repnz
fists
adc
sbb
mov
stc
int3
cli
sbb
in
or
xchg
data16
pop
lods
insl
add
ds
fisubl
sub
imul
fs
jae
sahf
inc
mov
adc
jns
inc
ret
mov
lret
dec
dec
dec
mov
pop
lods
jb
in
and
and
repnz
mov
es
jmp
rolb
cmp
add
mov
lea
cmp
push
sbb
inc
loop
mov
jbe
jle
fs
push
ficomps
jbe
xchg
shll
outsb
add
addl
push
adc
dec
jnp
dec
imul
sub
lods
loopne
jmp
dec
lea
mov
dec
scas
mov
jmp
lods
jo
arpl
push
sti
jns
mov
ss
adc
ret
xor
in
out
aam
xlat
je
notl
cld
addr16
div
add
pop
cmp
and
dec
out
in
ds
fbstp
or
nop
fldl
dec
inc
stos
nop
imul
mov
aam
dec
insb
adc
sbb
jl
loop
lea
in
hlt
push
les
loopne
mov
push
xor
repz
movsl
cmpsb
mov
jp
sbb
je
jae
ljmp
addr16
cwtl
lods
lret
out
in
jecxz
mov
neg
add
inc
hlt
aam
fmulp
push
sub
dec
mov
lret
cli
orb
dec
in
cli
push
daa
mov
jp
adcb
pop
mov
movsb
rcr
aad
jo
jg,pt
mov
shll
rorb
loope
push
xor
sbb
popf
fsubrs
jnp
cmp
mov
in
xchg
jbe
push
mov
adc
cltd
lds
cmp
push
lcall
cmp
inc
lods
jmp
gs
mov
cmp
push
adc
dec
xor
push
or
jp
insl
push
movsb
pushf
addr16
xor
push
add
repz
pop
repz
mov
push
push
ss
std
jno
push
out
and
xchg
pop
mov
lret
repnz
jecxz
mov
inc
mov
adc
pusha
or
cmp
xor
popf
pop
and
and
pop
addb
jge
jecxz
pop
out
fisttpll
subps
adc
es
aaa
cmp
test
add
dec
mov
in
mov
lcall
mov
dec
adc
pop
push
push
mov
aam
adc
pop
icebp
adc
out
pop
ret
inc
daa
push
call
pop
in
cmp
dec
pop
inc
xchg
mov
popa
std
fistpll
and
xor
cmpsl
icebp
adc
push
xchg
jns
push
sbb
xchg
cmp
imul
pop
mov
jl
cmp
mov
push
fiaddl
imul
mov
jle
push
jne
inc
inc
fcomps
in
or
adc
lods
test
mov
sub
push
call
cmp
mov
xor
cld
movsb
jg
call
movsb
and
sub
pop
mov
xor
mov
jle
mov
lea
fwait
mov
jno
loop
mov
jp
cmp
mov
mov
roll
xor
pop
jb
jo
jl
rolb
inc
setg
cmp
and
sub
sub
adc
xchg
gs
pusha
push
lahf
mov
inc
lcall
aad
fldl
and
ds
lret
lret
les
xor
adc
jne
enter
lods
fldcw
imul
shrl
push
shll
aas
int
test
push
cmp
les
fsts
clc
pushf
sub
pop
out
mov
int
es
and
iret
aaa
pop
mov
xorb
and
inc
add
cmpsb
dec
pop
push
add
ret
repnz
add
sbb
pushf
xlat
cli
add
test
xchg
mov
mov
iret
pop
xor
jno
push
pop
xor
insb
jge
ljmp
frstor
out
in
es
ret
dec
out
jl
int3
cmp
aas
bnd
ficoml
jmp
mov
xor
and
lcall
aam
or
pop
jne
xchg
bound
add
bound
inc
and
dec
aam
push
dec
jle
aad
hlt
and
popf
jge
cmpsb
and
fwait
xchg
push
pusha
lock
lret
xchg
mov
dec
lds
ljmp
int3
fs
add
or
cs
xchg
ds
shll
ret
sbb
lds
mov
xchg
cli
fsts
inc
xor
clc
lds
into
adc
adc
add
jns
loopne
inc
sub
out
jmp
adc
xchg
xlat
xchg
mov
gs
pop
test
out
cmp
pop
or
repnz
mov
lahf
inc
data16
push
adc
xor
xchg
jecxz
mov
leave
sub
je
jmp
xchg
mov
scas
js
out
ret
xrelease
inc
jmp
pop
add
out
loop
xor
adc
fcoml
mov
enter
je
add
sub
pop
or
cmpsl
repz
arpl
addr16
arpl
sub
xchg
movsb
push
stos
inc
mov
mov
punpcklbw
fstl
jns
jecxz
decb
pop
adc
mov
rcll
cltd
inc
out
xor
push
test
xchg
or
clc
mov
adc
inc
xchg
dec
arpl
push
cmp
mov
out
repnz
gs
cmp
fs
insl
pop
repz
rol
lods
fxam
mov
ds
iret
adc
adc
notb
xchg
lods
stos
or
cmp
push
ret
bound
pop
inc
test
mov
lret
ud0
xor
daa
jbe
mov
xchg
aaa
jns
sbb
jmp
adc
inc
or
xchg
repz
mov
insl
and
pop
and
bound
jle
stos
aad
jmp
add
inc
jmp
mov
xor
enter
lods
dec
rcrl
sahf
jnp
mov
push
stc
shlb
sub
jo
cmp
mov
popl
loope
push
push
fsts
and
cld
xchg
dec
mov
jge
mov
and
insl
mov
movsl
sub
add
push
mov
jle
xor
add
cmpsb
sbb
xor
test
mov
lea
test
mov
repnz
leave
outsb
enter
mov
or
cld
pusha
add
mov
out
cmp
cmc
lcall
push
add
mov
mov
repz
jbe
and
xor
inc
outsl
sbb
dec
jae
mov
jae
hlt
cmp
dec
ds
mov
loop
and
enter
dec
jne
ds
cmp
mov
lret
imul
stos
and
dec
shlb
inc
add
mov
adc
mov
aad
fdivs
adc
fsubrl
out
cmp
lods
adc
cmp
inc
push
xor
xchg
iret
cmp
mov
add
test
dec
cmpsl
xchg
out
xor
or
cmp
enter
jmp
push
jg
mov
lret
ja
fistl
ljmp
sbb
mov
mov
fnstenv
cmpb
mov
movsb
cmpsb
pop
push
inc
push
fildl
gs
mov
test
and
cli
sbb
cmpsb
mov
icebp
popl
push
cli
movsl
mov
mov
sbb
movsl
cmp
mov
adc
into
pop
aad
orb
mov
mov
push
xchg
jnp
inc
lock
jbe
mov
arpl
aas
iret
cwtl
je
wbinvd
or
loope
nop
sub
sub
and
int3
dec
cmp
inc
gs
jle
and
imul
push
add
push
pop
pop
rol
mov
into
lods
inc
sti
pushf
lock
outsb
inc
add
lods
ja
aas
rorl
fcmovnb
xorl
jns
pop
push
push
cmc
mov
movsb
cmpsb
mov
mov
ja
jo
fsubs
movsl
ds
or
scas
cmpsb
pop
cmpsb
jg
jecxz
xchg
stos
stos
inc
jne
out
popa
mov
mov
and
loope
movsb
fucom
lahf
cmp
pop
leave
pop
stos
loopne
imul
daa
ja
pop
call
sub
push
repz
xchg
sbb
ss
sub
pop
adc
rorl
in
mov
dec
fs
das
mov
aam
out
icebp
xor
out
stos
neg
sarb
mov
jnp
xor
pushf
adc
mov
repnz
call
xor
xchg
addr16
scas
shll
lahf
lods
je
clc
sub
mov
add
into
aaa
adc
inc
mulb
mov
clc
push
adc
out
loope
cld
jge
in
mov
repz
ret
test
jg
imul
xchg
mov
adc
push
sbb
jo
pop
rclb
outsl
mov
sbb
je
push
loop
std
pop
mov
je
fldenv
sbb
mov
adc
clc
jmp
repnz
xchg
mov
pusha
clc
mov
jecxz
push
mov
push
fcmove
test
pcmpgtw
ficompl
push
mov
cs
cmp
push
bnd
jge
in
pop
push
and
loope
and
xchg
pop
push
cs
fwait
inc
xor
xor
push
xchg
bnd
int3
dec
jecxz
aas
shrl
mov
in
es
pop
das
stc
repnz
inc
xor
xchg
cmp
mov
jmp
aas
adc
imul
sub
cmp
cmpsb
jnp
sahf
scas
fldln2
jae
sub
dec
loope
ss
pop
es
sbb
imul
ret
cmp
daa
gs
std
pushf
shlb
cs
pop
inc
xchg
sub
pop
mov
jmp
push
xchg
dec
pop
imull
cmp
mov
jbe
outsl
cmp
mov
icebp
js
push
cmp
add
cmp
push
mov
mov
adc
lds
imul
cli
aam
xchg
sbb
pop
scas
adc
fiaddl
mov
shlb
push
sub
xor
ds
aam
push
jge
fimull
sbb
ds
daa
insb
add
pop
pop
pop
add
call
in
sbb
rcl
or
ja
cltd
movhps
inc
add
and
pop
loop
fdivp
out
jb
mov
seto
jne
add
cmp
push
fstpt
jle
inc
jmp
ret
jle
insb
lret
sbb
iret
stc
dec
mov
lcall
jnp
push
cmpsb
push
aas
pop
jle
aaa
lock
pop
out
or
mov
rcrl
push
in
std
lret
mov
fstps
cmp
push
add
andl
xorb
pop
cmp
push
mov
stos
mov
fcomip
lock
xlat
xchg
push
add
sahf
sbb
xor
lock
sub
adc
outsb
hlt
ds
push
xchg
jecxz
add
add
mov
xchg
add
xchg
stos
daa
sbb
cmpsb
gs
jp
scas
icebp
dec
loopne
out
cmpsl
es
cs
daa
enter
insb
or
iret
fcoml
mov
cmp
jle
sub
mov
rolb
mov
jbe
fmuls
add
or
jnp
mov
out
cmpsl
inc
mov
outsl
add
dec
or
fdivp
adc
jp
lods
loop
les
outsl
roll
mov
jge
stos
and
jb
inc
in
and
jne
test
mov
int3
and
fidivs
repnz
or
outsb
scas
test
push
dec
lahf
jle
daa
adc
dec
sub
mov
stc
cmp
jle
jb
mov
addr16
mov
adc
xchg
cmp
and
jne
jp
je
leave
and
mov
and
sub
mov
mov
lds
hlt
mov
xor
adc
inc
xor
cli
jp
pop
mov
pop
test
jmp
sub
jae
mov
or
xchg
loope
imul
push
bound
into
in
dec
scas
iret
mov
aaa
ds
add
shlb
xchg
add
or
jle
mov
or
movsb
sub
lahf
addl
cs
adc
and
sbb
das
push
xchg
sbb
fsub
fcompl
and
lock
adc
jl
aaa
add
repz
jno
in
in
sub
mov
clc
stos
shll
pop
push
fs
scas
sub
addr16
cmp
push
jb
data16
shrb
cmp
out
jge
push
and
adc
push
inc
mov
pop
inc
loopne
mov
das
popl
imul
movsb
push
xchg
jo
cmp
cmp
test
and
test
out
pop
dec
ficoml
cmp
dec
push
sbb
mov
pop
push
ds
icebp
imul
lcall
mov
loop
jno
call
sub
ja
movsb
inc
cmc
adc
mov
jne
add
icebp
sbb
mov
mov
int
push
lds
clc
loopne
mov
call
xor
cwtl
mov
int
test
dec
push
mov
or
and
mov
and
jbe
xchg
push
or
std
sti
inc
push
sar
mov
cltd
add
cs
pop
daa
push
xchg
dec
inc
sub
aad
repnz
sbb
cli
pop
popl
adc
fsubr
ds
dec
mov
sub
sahf
insl
mov
push
and
int
push
jae
notb
iret
pop
cltd
xlat
dec
add
call
jne
aad
add
mov
in
xchg
push
lods
rolb
xchg
push
mov
mov
cmp
jne
and
jge
xor
pushf
shlb
pcmpgtd
arpl
sbb
add
jge
fsubr
mov
push
shrb
inc
jg
mov
sbb
xchg
mov
xorl
xchg
sbbl
scas
jge
push
test
inc
inc
cmp
test
iret
pop
aam
aad
and
xor
sub
mov
jl
cmp
pop
sub
mov
inc
or
pop
int3
stos
cwtl
in
orb
outsl
sbb
sbb
mov
adc
jle
sub
movsl
cmp
imul
mov
daa
movsl
fwait
pop
dec
mov
or
jb
stos
cmp
ja
pop
pop
mov
outsb
mov
xor
shlb
pop
testl
jmp
in
mov
jmp
cli
jecxz
and
cmp
and
xchg
pop
aad
sbb
adc
testl
adcl
mov
pop
xor
push
push
add
out
test
and
daa
lds
push
out
adc
jno
movsl
test
mov
adc
sarl
sbb
outsl
outsl
std
out
push
repz
inc
aad
pusha
jmp
push
xor
cli
xor
jnp
hlt
scas
and
xchg
push
dec
icebp
push
je
ret
loope
test
repnz
cld
and
cmp
xchg
insl
sbb
jl
xchg
mov
mov
sub
in
pop
fnstsw
leave
in
jns
cmp
dec
adcl
in
fstl
xchg
stos
and
adc
clc
scas
mov
inc
sbb
cwtl
jb
mov
dec
addr16
sub
popa
into
fdivrp
jecxz
lea
or
hlt
mov
push
mov
dec
fnsave
sbb
sbb
sbb
mov
jne
adc
stos
gs
js
rclb
xchg
cmp
mov
sbb
jbe
jge
cmp
mov
lcall
jmp
dec
je
dec
add
shll
xchg
lock
mov
mov
xchg
pusha
jp
and
hlt
out
jg
stos
add
adc
adc
sbb
sub
pop
dec
lret
mov
mov
and
mov
jb
loope
mov
push
leave
pop
xchg
inc
lds
lock
mov
das
arpl
pushf
pop
jns
test
xchg
popa
pop
sub
aaa
arpl
jnp
sub
repz
jg
ret
push
int3
andl
mov
mov
inc
lds
push
and
jo
cmpl
aam
adc
and
cltd
jb
xchg
mov
jg
leave
adc
pushf
push
jle
jns
rol
idiv
movsl
vpcmpgtw
adc
loopne
clc
xor
adc
test
inc
data16
xor
mov
mov
sub
in
sub
ds
push
lea
ljmp
mov
insb
dec
sti
cltd
gs
push
sahf
xor
pop
sub
fst
inc
outsl
jge
add
lret
jb
sbb
jp
arpl
loopne
imul
lahf
lret
enter
add
orb
rcll
roll
xor
int
xorb
nop
lret
popf
popa
in
mov
js
fists
std
std
mov
xor
leave
mov
data16
add
in
fbld
dec
jb
cmpsl
dec
lea
popf
sbb
lods
mov
mov
push
sbb
testb
nop
xchg
hlt
mov
ljmp
mov
adc
cwtl
inc
xor
imul
iret
ror
sub
incl
or
mov
movsb
push
mov
xchg
repnz
mov
fwait
mov
add
sbb
insl
je
dec
insb
ja
enter
cmp
jg
pop
pop
out
les
lods
int
leave
push
rol
add
cltd
jp
mov
adc
inc
scas
sub
pop
das
ja
mov
stc
mov
scas
outsb
pop
ficomps
adc
sbb
andb
mov
push
pop
pop
std
or
shll
or
lods
scas
test
add
dec
or
and
dec
pop
std
out
sti
lss
xchg
and
in
jmp
test
jge
aaa
or
xchg
or
or
mov
cmovb
out
mov
add
rolb
or
out
mov
loopne
sahf
jmp
test
jbe
aam
out
mov
popf
stos
bound
add
xor
repz
aaa
loope
sbb
arpl
pop
sub
cwtl
mov
dec
popf
inc
pop
sbb
les
pop
mov
mov
test
mov
jae
inc
cmc
fwait
xchg
and
out
sbb
add
add
clc
and
out
cmc
jo
ret
push
sarb
mov
ja
cmpsl
cmp
fisubrl
insb
stc
test
dec
mov
mov
mov
mov
adc
dec
leave
and
push
subl
dec
sarl
das
lret
cmpsb
enter
sub
pushf
addr16
xor
pop
ds
push
jmp
out
jge
mov
cwtl
sub
mov
mov
and
cmp
push
js
ret
xchg
xchg
std
enter
jmp
pop
out
sbb
dec
mov
sub
adc
push
mov
dec
mov
fs
xchg
mov
jl
dec
mov
mov
icebp
and
cs
sahf
loopne
pop
xchg
aaa
shr
sarb
pop
popf
nop
dec
push
mov
dec
inc
call
adc
xchg
and
mov
je
sub
dec
out
popf
cld
sti
mov
jae
lahf
add
mov
xor
int
mov
mov
sub
shl
cltd
sub
ss
lret
cmpsb
icebp
sub
mov
je
push
scas
jmp
pop
mov
pop
lahf
and
in
xchg
mov
pop
rcrl
add
lea
inc
xor
push
mov
bound
out
pop
push
outsl
inc
cmc
adc
div
rcl
pop
xor
pop
lcall
push
adc
inc
mov
lret
negl
out
inc
push
shrb
sub
jae
mov
test
ficoms
dec
stc
stos
dec
scas
xor
notb
jae
push
and
xchg
lcall
lods
pop
hlt
mov
popf
shlb
out
out
fcoms
jmp
push
push
xchg
lcall
aas
insl
mov
mov
mov
jnp
imul
ret
xchg
insl
int3
inc
aaa
jbe
xor
pop
and
jmp
je
and
xor
xlat
add
sbb
lcall
pop
idiv
mov
insb
push
es
and
in
adc
popf
out
shlb
idivb
fiaddl
pop
lea
dec
imul
mov
mov
push
fdivr
add
push
aam
inc
scas
pusha
and
popf
pop
into
push
push
inc
and
into
imul
xchg
mov
sbb
jge
popf
cmp
test
dec
jb
sub
push
imul
dec
out
cmpsl
and
push
addr16
mov
lods
mov
pusha
jmp
cmc
xlat
je
hlt
jae
sbb
lret
jmp
pop
pop
inc
nop
arpl
add
adc
enter
xlat
movsb
jecxz
push
sub
mov
xchg
mov
and
adc
inc
lods
jl
jo
gs
mov
in
inc
jle
addr16
mov
xchg
repnz
fisubrl
mov
mov
xchg
sub
out
ficoms
cmp
push
sbb
mov
ja
mov
aam
in
andl
sbb
fcompl
popa
pop
or
mov
sbb
mov
inc
lahf
sbb
call
stos
sub
or
jb
xor
out
jo
loopne
xlat
push
test
jle
push
jecxz
pop
add
fistl
push
push
inc
scas
xor
dec
cs
inc
addr16
negb
push
xor
push
pop
mov
arpl
sahf
xchg
lock
mov
dec
adc
inc
fldenv
test
pusha
and
and
and
push
mov
repnz
inc
insw
push
xchg
fistps
mov
push
adc
mov
lods
in
scas
movsb
pop
imul
imul
out
jns
sbb
mov
sbb
xchg
mov
cmpsb
xor
mov
cmpsl
shr
out
ss
xor
in
or
push
insl
and
or
lock
sbb
cmp
daa
mov
jp
and
lea
daa
jmp
shll
xchg
rcrl
cmp
aam
js
jno
xchg
xchg
push
xlat
jb
out
into
fisttps
add
mov
dec
xor
les
das
pop
lret
push
adc
iret
rorl
cmp
pop
jp
mov
ss
divl
xchg
dec
or
lret
jle
mov
dec
addr16
cwtl
mov
adcb
push
jmp
sahf
mov
mov
dec
or
sbb
mov
lret
cs
and
cmp
xlat
and
xor
mov
sbb
mov
shlb
or
mov
dec
imul
shlb
popa
xchg
lcall
popa
push
dec
xchg
jg
or
rcrl
push
arpl
pop
fisubrs
and
rolb
jg
jle
pop
lock
or
pop
faddl
cmp
data16
sbb
ret
jp
nop
inc
faddl
pop
imul
test
jae
lret
mov
sub
sbb
shr
aaa
iret
cmp
add
jmp
xchg
loopne
push
mov
scas
cmpb
push
sub
push
mov
dec
and
test
jl
dec
aas
clc
pop
imul
mov
fimull
and
shrb
and
cmovs
cmp
cmp
jns
lds
popa
repnz
or
aam
dec
mov
stos
mov
or
and
add
stos
mov
ficomps
std
cmp
cwtl
xchg
enter
aad
push
cmp
push
sar
and
xchg
xlat
roll
dec
test
adc
dec
out
push
lret
sub
insl
inc
cltd
test
or
imul
and
jns
cmp
iret
xchg
iret
adc
cmp
add
add
test
mov
loope
lods
lods
inc
ret
sahf
subl
gs
or
mov
dec
nop
push
sarl
xchg
shlb
mov
dec
daa
bound
pop
mov
shlb
int3
fstpt
testl
inc
outsb
outsb
inc
jge
or
int3
push
push
sbb
or
jmp
in
add
in
mov
lret
outsl
mov
mov
mov
cmp
xchg
inc
jmp
push
mov
mov
mov
push
cmpsb
push
push
pop
outsl
js
cmc
and
inc
sbb
lahf
shll
cmpsb
cmc
cmp
inc
ljmp
cltd
jbe
inc
lcall
inc
pushf
lret
cmp
ret
push
sbb
adc
jb
dec
rcrb
repnz
inc
stos
inc
add
adc
stos
int3
and
adc
mov
pop
mov
pushf
repz
pop
dec
inc
lret
mov
and
sub
test
hlt
mov
or
jmp
pushf
ljmp
jno
push
jg
subb
bound
leave
mov
addr16
aad
arpl
jb
or
lds
xchg
or
push
mov
pop
mov
call
pop
outsb
subl
into
out
dec
adc
andl
lret
stos
out
inc
inc
cmp
clc
inc
in
inc
push
jecxz
fstpt
stos
push
sahf
mov
scas
loop
loopne
cmp
dec
test
and
shlb
cmc
cwtl
adc
sub
and
mov
jle
xchg
int
js
test
dec
dec
aas
ret
sbbl
pop
xchg
in
push
mov
adc
repnz
jae
ja
jecxz
push
outsl
jne
adc
jp
dec
inc
inc
add
push
psubq
xchg
ret
or
andl
jne
shr
fisttpl
arpl
push
ret
outsl
mov
loop
pop
or
jg
lods
ret
jbe
jo
cld
out
loop
aam
mov
stc
push
sarb
jl
cmp
ljmp
cmp
jns
test
lods
int3
mov
or
jo
xchg
inc
pop
mov
inc
inc
loopne
xor
stos
fisttps
sbb
pop
adc
adc
xor
rolb
mov
fcompl
in
notl
mov
test
push
gs
inc
inc
pop
stos
xchg
jb
lds
dec
ret
jnp
pop
dec
scas
mov
outsb
das
dec
and
stos
push
int
or
lret
cs
cmp
sub
jnp
mov
ljmp
jns
jnp
enter
lock
outsb
loop
inc
in
sub
movsl
xchg
add
repnz
data16
sbbl
insl
cltd
cmp
sahf
frstor
cmpb
rol
jecxz
pop
int3
mov
xchg
sbb
jne
sahf
or
mov
pop
xchg
pop
xchg
in
shrl
outsl
adc
inc
jle
or
sbb
fimuls
cmpsb
sti
repnz
or
test
sub
out
in
loopnew
mov
fadds
xchg
mov
adc
xchg
popa
pop
mov
xor
push
mov
outsb
rol
ja
mov
lcall
and
orb
leave
push
lock
stos
inc
subl
dec
sub
jae
outsb
cmp
push
or
inc
xlat
and
stc
cli
ror
out
cli
sub
sub
push
fidivs
mov
and
int
scas
jae
mov
in
cs
test
or
mov
dec
mov
push
jb
jp
sbb
jno
incl
xchg
jle
mov
ret
pop
pop
movsb
loop
stc
mov
cmpxchg
popa
sti
aas
fwait
jbe
arpl
jp
mov
mov
movsl
pop
or
loop
repnz
and
into
jbe
push
jl
aas
andl
rcrl
jnp
cmp
daa
pop
aas
mov
lods
inc
add
into
mov
sub
ret
ret
iret
cmpsl
pop
jmp
fsubr
cmp
jbe
es
clc
mov
jae
outsl
sbb
or
dec
mov
cmp
or
mov
add
inc
out
jg
in
pop
jne
xchg
shrl
mov
dec
mov
ss
aad
adc
mov
orb
jecxz
lods
cld
push
ret
sahf
adc
jnp
cwtl
sbb
cs
test
dec
add
cld
mov
mov
aas
scas
push
sarb
insl
lds
orl
push
mov
leave
std
outsl
popa
jl
imul
dec
cmpsb
les
pop
outsl
ficoms
js
jl
push
sbb
popf
lods
je
iret
sbb
movb
subb
cmp
stos
popa
xor
mov
jbe
cmp
ljmp
fcoml
test
and
xchg
hlt
mov
aaa
fwait
or
ds
aam
and
fdivs
xorl
pop
das
call
and
outsl
fcoms
mov
push
insb
addr16
xor
shlb
mov
add
bnd
sti
pop
or
jmp
popf
hlt
pop
mov
ret
push
jbe
mov
out
and
addr16
in
jae
or
fisttpl
repz
dec
subl
sar
in
mov
popf
rcrl
mov
or
cmp
push
mov
andb
or
pop
lods
rcl
xor
and
ljmp
xchg
add
fwait
sbb
popa
cmc
cmpsb
rclb
jmp
jno
inc
in
hlt
jnp,pn
push
mov
mov
lods
popf
dec
push
pop
pop
dec
fsubs
out
pop
sarl
mov
mov
and
inc
inc
ja
dec
iret
jne
add
cltd
rorb
jb
pop
pop
push
xor
fidivrs
pop
cld
xchg
sub
dec
push
adc
cwtl
mov
dec
rorl
sti
es
xchg
push
inc
js
loop
xchg
gs
stos
aas
mov
mov
or
inc
ss
shl
shl
jno
sti
mov
hlt
dec
mov
dec
into
jecxz
or
lcall
popa
pop
add
xchg
add
les
mov
mov
pop
dec
push
pop
test
imul
pop
gs
icebp
jp
jmp
repz
repz
sti
fdivrl
movsb
and
imul
rcll
js
sbb
test
loopnew
jae
stc
pop
pop
dec
mov
dec
outsl
cld
mov
in
es
mov
ss
adc
gs
aas
add
rcrb
jae
pusha
shll
sub
jge
outsl
fmul
ja
jae
ja
shl
jae
aad
ja
ljmp
aad
hlt
fs
ret
int
int
cltd
mov
inc
pop
or
push
adc
dec
imul
pusha
mov
icebp
xor
loop
adc
sub
ja
repz
test
xchg
jecxz
fdivrs
add
sub
in
or
push
mov
arpl
nop
cli
loop
into
cmc
out
cmp
push
jle
cmpsb
lods
adc
add
imul
test
jne
movsb
lahf
and
cwtl
cmpsl
inc
addl
mov
fidivs
adc
mov
cli
pop
pop
ret
fwait
sub
jle
dec
mov
lcall
ljmp
lret
xchg
and
leave
sbb
xchg
fisubs
rorb
popf
imul
sub
mull
sub
mov
or
lods
add
push
dec
add
dec
push
lock
ljmp
push
test
insl
fs
insl
push
bound
push
test
xor
inc
sub
cld
loop
add
xor
jb
hlt
push
jge
lcall
test
or
data16
mov
int3
dec
mov
movsb
rolb
jo
pop
cmp
shll
xlat
jae
fsubr
mov
mov
pop
sbb
xchg
shll
jge
inc
xchg
jo
dec
inc
add
cmp
add
dec
into
cmp
test
push
jb
sbb
mov
cmpsb
out
test
mov
ror
out
hlt
fwait
pop
dec
sbb
pop
or
jp
pop
pop
dec
mov
sub
popf
inc
xchg
pop
fistps
popf
mov
push
aaa
sbb
inc
xor
add
das
loopne
or
sub
and
aam
mov
jecxz
pop
sub
mov
dec
fs
or
inc
fsubl
iret
out
in
inc
ljmp
iret
adc
bnd
ret
mul
adc
jnp
xchg
pop
dec
int
sysenter
jl
leave
adc
les
mov
xor
and
and
addb
ficompl
mov
cli
mov
mov
xchg
inc
repz
or
push
into
test
jg
repz
and
lods
scas
add
not
push
cmpl
cmpl
adc
xchg
icebp
jb
decb
rolb
mov
pop
sub
xor
ss
and
and
dec
stos
jle
mov
adc
pusha
sbb
cmp
sub
push
push
mov
jmp
lahf
lods
repnz
aas
outsl
test
mov
mov
out
cmp
call
mov
dec
iret
pop
push
jb
test
cs
stos
orl
into
sti
std
test
or
mov
xchg
lock
imul
fdivrl
pop
cmp
das
and
stc
loop
icebp
enter
xchg
test
xor
and
popa
push
daa
add
in
lret
dec
xlat
adc
out
adc
or
push
sub
cmp
sub
and
xchg
or
mov
cmp
scas
ds
adc
adc
out
xchg
lret
rcl
lahf
in
xor
push
lcall
and
in
fidivl
rcl
movsl
out
cltd
std
aaa
neg
push
fildll
push
in
add
xchg
jmp
icebp
rcrl
mov
inc
in
push
and
fdivrl
scas
or
sbb
xchg
mov
decb
loope
dec
cmc
in
nop
shrb
imul
dec
mov
and
lock
mov
int
icebp
jb
gs
adc
in
adc
adc
loopne
xchg
frstor
dec
pop
lock
mov
add
dec
cmpsb
inc
sub
aaa
pop
std
rorb
ljmp
scas
test
xor
les
xor
lods
ds
cwtl
int
mov
push
das
mov
mull
testl
loopne
outsl
cwtl
xchg
inc
sub
mov
or
xchg
push
fcoml
mov
out
or
jno
mov
jo
cmp
repz
jg
insb
sbb
imul
ret
inc
mov
and
pop
or
mov
sarb
cli
aad
mov
loope
rep
mov
sub
iret
push
xlat
out
cmp
or
je
mov
dec
je
xlat
xchg
loopne
loopne
repnz
or
fisttpll
ds
in
pop
cli
loopne
data16
sub
lds
inc
imul
mov
shlb
cmp
dec
cwtl
pop
or
cli
dec
rcr
mov
out
sub
mov
sbb
cltd
loop
out
in
mov
imul
int
inc
inc
add
mov
mov
pushf
insl
data16
std
add
andb
add
fbstp
ss
mov
dec
gs
in
lock
and
jl
cmp
into
push
sub
ja
int3
or
jge
xchg
pop
push
das
test
roll
frstor
mov
add
aam
stc
jae
imul
mov
fisttps
es
sub
outsl
pop
sub
rclb
mov
xchg
inc
dec
add
pusha
add
lret
std
out
fwait
test
mov
test
cli
cmp
add
jmp
mov
jmp
and
jmp
sarb
out
cld
lea
inc
je
xchg
movsb
lods
ret
rcll
and
lret
mov
gs
cmp
cwtl
fisubrl
cld
insl
aam
mov
arpl
sbb
out
pop
leave
ljmp
les
aad
mov
mov
inc
dec
sub
pop
lahf
mov
xor
lock
andl
push
data16
ret
jbe
aaa
lea
out
push
add
scas
aam
jo
addl
sub
mov
mov
mov
xor
sub
sub
daa
adc
jns
mov
push
and
arpl
arpl
les
mov
repz
jns
sbb
mov
ror
into
fimull
fwait
add
js
fnstsw
faddl
xchg
rorl
stos
cli
and
lret
pop
jae
lock
jge
imull
inc
imul
sub
adc
bnd
add
data16
add
repnz
icebp
imulb
mov
mov
or
push
es
push
inc
pop
andb
xchg
das
jno
mov
or
sbb
into
fiaddl
mov
inc
dec
mov
mov
or
clc
add
push
pop
pop
dec
in
add
mov
dec
je
call
or
add
inc
mov
jo
inc
cwtl
scas
repnz
sub
ljmp
shll
xchg
pop
cli
hlt
in
fldl
pusha
and
jae
pop
sbb
jmp
shll
les
dec
movsl
mov
push
add
loope
and
cmc
and
add
int3
imul
or
fbstp
loope
jmp
cmp
pop
rcll
sbb
mov
lahf
push
insl
or
mov
xor
mov
mov
div
pop
orl
fcmovu
inc
xchg
addr16
call
mov
push
out
lods
add
lods
sub
cmpsb
cwtl
aaa
lcall
int
adc
fstpl
leave
xchg
xlat
dec
mov
jmp
sbb
popa
jmp
mov
sbb
pop
mov
xor
movsl
sub
push
xchg
adc
mov
cmp
add
add
lahf
ret
sbbl
dec
movsl
jecxz
mov
lods
and
add
xlat
push
lret
sub
push
cmpsb
mov
test
cmp
stc
je
lods
add
adc
sub
fbld
inc
and
idivb
dec
nop
int3
add
sub
clc
adcb
lret
jge
push
fbld
lret
lods
nop
rcll
call
fs
nop
dec
cmpb
inc
das
pop
jne
fst
hlt
or
imul
ret
xor
mov
xchg
in
mov
jnp
loopne
mov
sbb
mov
add
dec
into
and
imul
stos
mov
lret
mov
movsb
mov
xchg
test
mov
fstl
adc
ljmp
leave
int3
mov
mov
mov
xchg
nop
mov
adc
nop
jno
icebp
or
lods
pop
ja,pt
int
mov
sti
outsl
cmpsl
lods
in
stc
jo
pop
movsl
pop
and
and
aas
cwtl
push
xor
and
nop
xchg
test
mov
inc
sbb
fs
pop
xor
cs
dec
and
dec
mov
cwtl
lcall
jl
fdivrs
adcl
inc
jmp
mov
imul
flds
dec
fildl
pop
hlt
aas
push
adc
add
call
or
sti
xchg
or
loopne
in
int
lea
scas
xorl
loopne
jle
mov
mov
stos
fldenv
xchg
mov
popa
imul
pop
cmp
in
gs
add
inc
xor
dec
addr16
leave
enter
icebp
pusha
sbb
fcomps
sub
out
lahf
or
test
leave
or
jmp
xorl
stos
aam
mov
inc
xchg
and
test
or
addr16
mov
sbb
enter
cltd
test
push
push
push
lock
jnp
cld
xor
inc
inc
sarl
lods
leave
test
addl
js
aaa
ret
fcmovbe
xchg
xchg
rorl
and
rorl
inc
inc
outsb
add
bound
jns
sbb
and
mov
and
inc
inc
mov
push
pop
shl
pop
imul
jp
nop
outsl
adc
rcrl
mov
mov
cmp
in
fidivs
cmp
fmul
cmpsb
cmp
and
pop
test
xor
jne
stc
imul
addr16
push
mov
xchg
sbb
std
xor
add
or
jle
jns
imul
jbe
aad
dec
aaa
push
cmp
pushf
adc
sbb
lcall
lea
insb
jae
jmp
pop
mov
out
lret
and
or
mov
xchg
lea
dec
out
mov
or
aas
jbe
inc
pop
imul
addr16
aam
xchg
dec
dec
test
ds
mov
insl
data16
sub
and
add
rcrl
enter
enter
xlat
loop
push
mov
dec
int3
push
pop
addr16
fildll
les
cwtl
inc
rcrb
mov
lea
cmp
std
cwtl
adc
jl
loopne
scas
xor
cmp
push
mull
mov
int
lret
daa
out
pop
dec
rolb
add
sub
scas
add
and
cmp
fldt
jmp
add
mov
push
xlat
outsb
leave
sbb
ljmp
xor
ds
inc
daa
rcrb
ret
ss
fnstenv
pop
test
mov
insl
sti
pushf
in
out
jne
cmpsl
mov
adc
jmp
loop
push
leave
fs
data16
xlat
repz
dec
push
pop
mov
xor
test
shl
ds
movsl
shlb
adc
dec
repnz
pop
stc
imul
outsl
movsl
add
aam
sub
cs
repz
data16
jle
cmc
dec
out
test
or
in
or
fs
mov
and
cmc
fs
rclb
add
outsl
xorl
jbe
push
iret
add
or
repnz
dec
push
and
push
lret
sbb
or
cmc
jbe
or
push
inc
xchg
xchg
in
notb
filds
and
mov
xchg
mov
fdivs
jb
notl
jb
shlb
pusha
pushf
cmp
movsl
and
adc
call
push
add
sub
and
push
or
and
fcoms
sbb
scas
push
pop
fwait
pop
sbb
sbb
movsl
push
cltd
mov
cltd
pop
mov
pusha
in
les
xchg
jo
imul
and
in
jge
lret
and
outsl
xchg
shlb
repnz
jb
arpl
vpmulhw
fists
push
inc
mov
outsl
adc
push
push
xor
or
mov
repz
mov
mov
std
mov
adc
add
cs
mov
xor
ret
sub
mov
and
sub
sub
cmp
insl
aaa
subb
hlt
lods
jp
dec
movsl
pop
mov
jmp
mulb
push
gs
dec
cld
dec
insb
jb
adc
inc
sbb
mov
cmp
adc
inc
mov
testb
push
push
mov
push
xor
in
push
imulb
pop
mov
insb
add
push
loope
or
xchg
add
sbb
jmp
repz
ljmp
push
bound
mov
or
std
xchg
sub
mov
pop
jmp
rcrl
lock
ss
xchg
push
or
push
lods
dec
in
jecxz
mov
mov
xchg
mov
lds
xorb
dec
sub
dec
jbe
xchg
pop
fisubrl
mov
jecxz
hlt
fwait
popf
mov
enter
xlat
or
dec
fwait
scas
fisttpl
xchg
cmc
test
cmp
mov
imul
add
test
rcl
xchg
mov
adc
mov
mov
push
push
mov
pop
mov
cmp
pushf
xor
jns
xchg
adc
test
sbb
imul
and
push
addr16
roll
ret
push
add
les
mov
sahf
or
and
into
aam
ss
iret
pop
in
gs
jno
cmp
test
sbb
in
mov
inc
inc
xchg
dec
and
add
push
push
sbb
hlt
rcrb
fidivs
int3
sahf
push
icebp
jle
test
je
push
das
pusha
lock
orl
insb
decb
shrl
pop
lahf
outsl
xor
repnz
adc
test
fwait
add
pusha
inc
stc
lret
xor
mov
les
cld
push
jne
out
cmpsb
add
les
pop
dec
inc
cmp
dec
not
mov
push
push
into
push
sbb
cmp
dec
fwait
cmp
cmp
sbb
repnz
je
push
out
ds
pop
inc
sti
ljmp
mov
cmp
hlt
and
push
addr16
ja
ja
leave
jl
or
mov
inc
cltd
outsl
sub
orl
pop
push
daa
mov
cmc
xchg
cmp
filds
xor
and
mov
add
in
pop
push
jl
and
fnstenv
lods
stc
or
into
les
jecxz
xlat
add
inc
xorb
or
sub
cltd
jge
dec
mov
xchg
clc
sub
ss
push
test
ret
dec
das
or
shrb
jl
mov
pushl
mov
sub
lods
xchg
push
dec
jnp
lret
xchg
cli
mov
icebp
xor
in
fisubs
out
data16
or
shl
out
enter
sbb
add
jbe
mov
lahf
mov
lcall
mov
enter
sti
in
mov
int3
rorl
pop
repnz
mov
rorl
std
push
je
push
dec
push
ficoms
roll
sub
fsubs
mov
sbbl
int
jge
jbe
repz
xchg
jae
mov
xchg
pop
mov
test
enter
icebp
js
fs
pushf
push
dec
sub
mov
sbb
dec
xchg
adc
inc
enter
mov
lds
mov
adc
cmp
inc
push
stos
sub
in
out
add
repnz
adc
push
fisttps
mov
insb
pop
jle
jne
repz
out
ljmp
mov
lcall
movsb
imul
insl
cwtl
and
inc
packssdw
loope
les
icebp
lea
or
aas
cltd
daa
mov
mov
mov
jp
int3
mov
out
scas
mov
mov
push
jmp
push
push
push
push
mov
mov
dec
int3
packuswb
sbb
sbb
mov
mov
test
out
arpl
cmp
sbb
cli
pop
bound
outsl
leave
into
popf
pop
lret
jo
into
stos
std
and
inc
out
or
push
lods
repz
adc
dec
pop
and
les
enter
loopne
or
pop
mov
mov
push
adc
stos
mov
mov
loop
add
scas
dec
daa
push
dec
lcall
push
jnp
xchg
jne
dec
int3
mov
out
lock
mov
clc
rol
loopne
aaa
add
adc
mov
jecxz
mov
cmp
cld
cwtl
shlb
sub
cmpsl
adc
xchg
lea
clc
jmp
inc
ljmp
pop
pushf
cld
cltd
out
add
sbb
mov
xchg
mov
jge
int3
bound
push
xlat
and
inc
les
testb
or
cmp
imul
push
scas
mov
stc
fwait
iret
repz
test
push
jmp
push
jnp
pop
inc
imul
shlb
and
jp
xchg
and
lds
jnp
addb
xchg
mov
cmp
sahf
popa
cmpsb
fsubr
pop
inc
ret
pop
add
jnp
in
adc
inc
push
notl
int
cmpsb
icebp
and
and
lret
inc
popf
adcl
mov
jle
sub
es
add
ja
stos
sub
push
les
int
outsb
lret
push
mov
push
fidivrl
sbb
iret
lods
out
imul
mov
inc
movsb
bound
sub
push
inc
outsb
insb
and
pop
shrl
dec
mov
ja
icebp
mov
inc
shll
repnz
lahf
mov
xchg
cmp
test
and
incb
mov
adc
movsl
sbb
jp
adc
adc
push
jbe
mov
cwtl
lahf
call
out
fwait
and
ja
divb
jmp
fistl
pushf
ficomps
xor
insb
sti
ficoms
push
jno
push
scas
daa
cmp
sbb
jp
push
push
jbe
xchg
inc
xchg
rclb
add
repz
ret
mov
jns
dec
dec
jnp
imul
scas
loop
fiadds
cmp
or
mov
push
jbe
jo
add
mov
popa
in
xor
push
fwait
fwait
and
repnz
sbb
ret
mov
jo
bound
mov
int
pusha
xor
gs
negl
jbe
or
testl
add
pop
sub
inc
mov
repnz
leave
and
jno
mov
int
mov
or
pushl
je
cmpsb
scas
stos
pop
cmp
movsb
adc
fdivs
aas
inc
sbb
iret
xor
or
cmp
int3
sbb
test
movsl
mov
mov
aad
inc
xchg
and
call
mov
repnz
or
lock
push
in
jno
inc
std
mov
sub
xchg
cmc
iret
lcall
jae
shr
dec
sbb
xchg
xchg
out
jge
leave
fstl
out
pop
flds
les
je
push
js
mov
push
pop
sub
push
cmp
sarl
cmp
imul
jnp
addr16
out
nop
push
popf
push
scas
inc
push
cmp
jg
pop
sbb
in
add
sbb
enter
jbe
lret
lahf
out
add
jo
cltd
mov
jne
cwtl
imul
jp
dec
mov
pop
icebp
imul
cli
xor
add
dec
dec
jge
mov
aaa
sub
adc
xchg
inc
fdivl
fdiv
outsb
clc
mov
test
lahf
in
loopne
fwait
xor
xchg
icebp
jp
out
pop
mov
xchg
xchg
sbb
mov
push
clc
cmpb
inc
pop
mov
cmc
das
leave
stc
rorl
xor
daa
mov
ret
lods
inc
mov
movsb
out
ljmp
jmp
sbb
test
enter
aam
xlat
fidivrl
sub
ror
xor
in
lods
cmpb
imul
mov
pushf
jge
cmpsl
test
xchg
push
std
insl
lcall
scas
stos
andb
js
mov
stc
vmovapd
and
and
jno
rol
hlt
ficoml
mov
addb
xor
pushf
pop
std
lds
or
enter
dec
xchg
inc
jne
mov
inc
cwtl
jmp
mov
out
cmp
sub
adc
and
pop
jle
sub
mov
repz
jg
push
pop
js
push
arpl
xchg
jno
icebp
adc
rcrb
sarb
cli
fidivrs
push
mov
or
jns
cmp
popf
mov
sahf
icebp
jno
cs
ficomps
dec
loope
enter
shlb
mov
fmulp
int3
pop
loope
dec
xchg
cwtl
jo
cs
fcompl
sti
arpl
fs
call
cmp
orb
cmc
cmp
mov
pop
add
jns
mov
hlt
sahf
sarl
dec
sub
js
lock
ja
ror
mov
xchg
mov
mov
daa
and
push
mov
push
mov
jmp
adc
mov
sbb
adc
xchg
sbb
push
push
cmp
stos
dec
pop
and
insl
out
mov
int3
adc
jle
pop
jle
or
les
xor
jp
data16
stos
xchg
or
add
je
shrl
xchg
outsl
movsb
in
ja
cltd
call
mov
xor
repz
mov
call
push
pusha
fcmovnbe
adc
out
outsl
xchg
mov
sbb
ds
imul
lods
fs
adc
and
cmc
cmp
xor
inc
fstpt
mov
in
dec
push
push
adc
inc
and
aas
mov
push
stos
test
mov
pop
cld
or
and
js
jecxz
xor
mov
sub
dec
mov
fwait
add
jno
dec
mov
push
sub
mov
push
mov
or
ja
mov
jae
frstor
sbb
cmp
dec
test
out
sti
cltd
adc
fadd
inc
mov
jge
adc
in
js
jo
or
imul
add
lea
fnsave
xor
cmp
pop
jo
adc
cli
repz
out
mov
pop
jnp
mov
inc
mov
and
xchg
ficoms
add
xor
enter
or
jmp
outsb
cmpsb
pop
test
sbb
mov
sub
es
fstpt
int3
es
loop
inc
ret
out
pop
or
lahf
fwait
cld
xor
sbb
loop
cmp
andl
jp
adc
mov
xchg
xchg
push
clc
ret
scas
clc
inc
mov
fsubr
ret
out
popf
inc
add
cmpsl
enter
cmpsb
sub
insl
and
mov
mov
sub
mov
loope
enter
js
addr16
jbe
xlat
fists
mov
add
mov
sti
out
cli
mov
leave
ja
xchg
mov
mov
rcl
jg
fsubs
dec
pushf
lods
jecxz
dec
clc
mov
inc
into
stos
cmpsb
mov
and
hlt
cmp
loope
lret
addr16
or
and
call
dec
xchg
cmp
fimuls
sub
lods
outsb
das
int3
mov
rcl
pop
or
cmp
cmp
loop
jp
test
pop
mov
xchg
lcall
or
mov
add
inc
sahf
into
mov
or
scas
xor
push
push
arpl
sarl
fsubrl
pop
les
pusha
add
jle
repnz
mov
pop
ds
loop
clc
pop
data16
sbb
jns,pt
cs
jae
in
in
and
add
lea
stc
mov
and
pop
jl
cmp
inc
sar
ror
and
cwtl
dec
jge
out
lahf
lcall
data16
push
xor
inc
jmp
or
push
inc
inc
ss
push
and
mov
add
fcmovbe
sbb
mov
cwtl
call
adc
shr
push
add
or
orb
jl
insb
cs
stos
aad
js
bound
or
outsl
pop
aad
pop
out
rcll
aam
scas
dec
dec
jp
icebp
adc
mov
jnp
fildll
sbb
inc
mov
mov
insl
fs
push
test
aas
mov
and
inc
mov
mov
cmp
adc
je
ds
xor
adc
outsl
outsb
xorl
mov
xchg
stc
lret
sbb
into
mov
ficoml
push
mov
xlat
and
pop
mov
movsb
jbe
adc
je
push
push
out
jge
push
mov
subb
out
lods
jp
pop
nop
cmp
sbb
mov
ljmp
test
rcr
fimull
test
stc
mov
cmp
and
push
adc
add
xchg
sbb
push
cmpsb
mov
mov
or
lds
mov
xchg
pop
cmp
fistpll
jecxz
clc
add
push
rorb
cmpsb
and
jge
nop
or
shlb
mov
mov
movl
int3
xchg
lahf
adc
push
mov
mov
add
dec
bound
lds
mov
or
mov
and
lock
cmp
adcl
adc
sbb
cs
fsubs
jne
cmp
cmc
rcr
cli
mov
push
mov
pop
repnz
cs
xchg
mov
mov
dec
lods
xor
fidivl
and
arpl
pop
in
je
andl
mov
sbbl
cmp
xchg
inc
dec
sub
mov
xchg
enter
inc
mov
jne
repnz
sub
cltd
pop
mov
fcmovbe
fidivrs
addr16
bound
adc
xchg
jbe
inc
adc
out
inc
std
and
shll
aas
stos
adc
mov
jnp
jg
pop
mov
ljmp
mov
push
sub
add
pop
imul
bound
cmp
mov
push
mov
lods
xchg
ret
xchg
data16
dec
fs
mov
out
and
nop
sbb
xor
xchg
popf
cld
xorb
mov
add
jmp
cmp
aam
ja
sub
cli
add
stc
mov
cmp
fcompl
cmpsl
pushl
add
or
xchg
in
lods
sbb
jno
ret
sub
sbb
loope
scas
push
inc
icebp
roll
daa
jnp
fwait
in
sahf
lock
mov
stc
ss
and
incb
sub
push
dec
fistpl
sub
ffreep
jne
std
pop
dec
out
fdivl
cltd
and
xchg
jecxz
insb
lcall
in
mov
scas
pusha
add
add
xor
in
mov
xchg
push
inc
int3
sbb
cmpsb
fcmovb
in
and
mov
and
sub
mov
popa
xlat
pop
pop
inc
leave
mull
add
sti
xchg
rcr
xor
in
icebp
ret
sub
mov
push
sbb
xchg
call
outsl
mov
jl
lahf
popf
outsb
jb
pop
pushf
ret
cli
lahf
test
xor
out
add
mov
xor
push
cmp
pop
bound
mov
ja
or
cmp
mov
jae
dec
dec
movl
add
aad
cltd
jnp
stos
ja
test
push
add
mov
xchg
mov
and
out
mov
fs
pop
jmp
fucomp
sbb
pusha
out
aam
cli
into
or
imul
mov
inc
mov
cmp
stc
nop
imul
jp
iret
push
mov
lret
rcll
fisubrl
out
test
hlt
aam
pop
aas
xchg
add
gs
xorl
fwait
int3
mov
pop
mov
aaa
push
out
xlat
xchg
cwtl
inc
js
xor
cmpsl
jno
and
insl
mov
ret
push
sub
mov
xchg
jl
inc
pushf
sbb
inc
pop
fdivs
or
xchg
inc
cmp
enter
xchg
fsub
loop
cltd
aas
jnp
or
add
push
xor
pop
rolb
xchg
in
push
lock
xchg
sub
rcl
cmp
add
repnz
or
add
repnz
mov
mov
cltd
or
mov
adc
jmp
shrb
adc
stos
mov
into
stc
sarb
lret
xor
insl
cmp
sub
inc
jle
scas
dec
jno
loopne
jns
subb
rolb
clc
xchg
and
push
cmp
mov
mov
and
pop
xor
mov
mov
mov
jecxz
inc
jnp
ror
sbbl
push
jne
adc
adc
rcrb
call
mov
fnstenv
gs
xor
mov
xor
das
aam
icebp
stos
testb
or
pop
or
clc
loope
scas
push
push
decl
mov
mov
inc
and
adc
dec
stos
xchg
sub
je
aam
inc
push
cld
mov
int
jae
fstp
lds
xor
push
cmp
sbb
add
lods
jnp
mov
rorb
cmp
popa
mov
ret
stos
jp
or
push
mov
arpl
iret
inc
push
data16
push
fidivl
pop
popf
cmp
add
mull
ja
das
popf
testl
mov
add
xchg
out
xor
adc
imul
sub
js
nop
sub
or
pop
push
add
push
popl
test
out
scas
or
push
cld
out
in
jno
out
scas
sub
push
push
push
sbb
pop
movsl
xor
push
mov
cli
and
lret
push
mov
rorb
dec
mov
dec
pop
jo
mov
sub
dec
aad
sarb
roll
jnp
dec
lods
jo
cmpsl
fidivs
adcb
pop
gs
fistpll
out
cmp
sub
loope
hlt
sub
sbb
gs
sub
adc
lcall
inc
std
jecxz
mov
pop
testl
in
in
arpl
xchg
scas
and
adcl
jae
pop
repnz
test
cmp
inc
inc
adc
mov
out
scas
hlt
cld
pop
andb
loopne
cmp
sub
std
jo
inc
pusha
add
stc
and
cld
xor
jge
add
pop
pop
push
mov
movsl
add
aad
pop
enter
repnz
mov
fldl
sub
out
dec
or
pusha
add
je
cmc
cli
xchg
jl
popf
int3
adc
inc
leave
in
push
rcl
push
rclb
xchg
jl
adc
adc
outsb
xor
xlat
into
jnp
inc
sbb
out
adcb
aam
dec
outsl
push
mov
imul
popf
cmp
sti
push
repz
mov
sbb
sub
add
mov
repnz
ffreep
enter
cmpsb
add
adc
dec
dec
inc
ds
je
jbe
add
adc
out
addr16
dec
jne
inc
cmc
subb
cmp
int
lock
xchg
cmp
fisubrs
cmpsl
fistpl
push
add
fnstenv
pop
push
or
and
jle
js
repnz
cmp
and
mov
test
xor
lods
and
mov
aam
test
stc
in
lret
inc
or
into
enter
cld
cmp
and
mov
decb
jecxz
mov
add
dec
rcrb
dec
lods
rolb
hlt
push
jg
xor
orb
inc
movsb
shl
sbb
dec
es
dec
pop
jbe
xchg
lahf
aas
mov
fistpll
leave
sbb
adc
imul
pushf
testl
lcall
clc
mov
push
js
lods
inc
cmpsl
int3
sbb
popf
pop
xor
xchg
jbe
aad
fnstcw
cmpl
jecxz
sub
pop
sub
sbb
mov
mov
jp
rcrl
fnstsw
adc
aam
inc
jecxz
aam
jl
jl
roll
dec
je
jae
mov
and
imul
lcall
jecxz
add
out
xchg
pusha
popf
insb
out
adc
testb
ss
jmp
xor
in
add
ljmp
lock
xor
pop
fistpll
mov
dec
sub
push
sarl
sar
test
cmp
dec
or
cmp
xchg
adc
jb
icebp
and
shlb
ljmp
dec
sti
stos
dec
cmc
popa
add
xchg
add
mov
cmp
push
adc
mov
push
ds
movsb
fsubr
scas
or
push
mov
cwtl
clc
pop
roll
iret
xchg
and
xchg
mov
clc
sbb
push
daa
out
xor
push
xchg
enter
enter
add
add
sub
sub
and
and
fmull
mov
mov
cld
sub
inc
mov
mov
cli
rorb
movl
sbb
pop
add
roll
lcall
mov
aaa
clc
mov
cmp
dec
sbb
push
push
xor
jmp
xlat
repnz
dec
in
mov
gs
lret
jbe
mov
imul
pop
sub
into
rol
test
rcrb
das
rcrb
ret
inc
imul
pop
shll
lea
nop
xor
adc
lods
mov
cwtl
lds
push
push
cmp
sub
push
lods
imul
into
jnp
arpl
push
sbb
daa
push
adc
mov
fcoms
inc
jns
push
into
les
loopne
pop
bts
fwait
rol
insb
or
sbb
sti
ja
sbb
xor
into
xchg
cmp
cmp
cwtl
jb
es
mov
in
or
mov
insl
jmp
jb
or
add
das
test
fstpl
sub
sub
and
mov
fbstp
gs
je
sbb
mov
callw
fstps
cmpsb
xlat
test
test
iret
mov
lret
nop
bound
addl
lret
jbe
inc
push
aas
or
mov
and
mov
cld
shrb
mov
add
hlt
aaa
lods
or
mov
dec
js
mov
xchg
filds
es
movsl
roll
jbe
or
pop
or
jns
mov
mov
repz
mov
mov
adc
sbb
lret
xchg
inc
enter
add
mov
jbe
popf
sub
jne
jnp
lods
push
gs
and
cmp
fwait
std
das
ljmp
fbstp
dec
jne
cs
push
in
addr16
sub
pop
pop
cltd
mov
mov
pop
jnp
dec
adc
add
or
push
cwtl
std
cmp
push
loop
add
das
imul
cmpsl
mov
push
add
add
fdivp
xchg
or
inc
mov
aad
push
add
arpl
sub
or
and
or
addr16
cmp
test
mov
and
push
mov
outsl
mov
pop
mov
test
dec
gs
add
push
pusha
sub
test
out
icebp
sbb
mov
mov
mov
push
pop
loop
cli
cmpsb
push
add
aam
movsb
and
mov
jb
cli
mov
and
lret
push
mov
lcall
push
cmpsl
jne
cs
test
jge
push
loopne
nop
xchg
lea
aad
aaa
dec
sahf
repz
add
xchg
jne
aas
xchg
je
addl
ret
push
mov
push
lds
and
or
rol
pop
cld
mov
iret
or
dec
mov
xor
jnp
cltd
xchg
sub
mov
fs
sub
test
test
jns
mov
ds
push
pop
sti
bound
push
pushf
stc
into
push
enter
jb
fistps
mov
call
mov
xor
gs
rcrb
fucomi
decb
mov
dec
xchg
inc
inc
mov
inc
pop
dec
mov
dec
test
shl
mov
sub
adc
jmp
mov
inc
and
mov
syscall
jge
add
mov
jle
bound
inc
xchg
fistps
je
or
mov
sbb
pop
push
popa
xchg
xchg
testl
rol
add
mov
test
test
jp
xchg
xchg
pop
dec
add
adc
ficoml
shl
pop
cmpl
and
lods
xchg
mov
jl
and
imul
clc
loop
mov
mov
lods
lods
outsl
pop
xor
xchg
inc
push
push
push
push
incl
and
dec
int3
sarb
push
xchg
stos
inc
dec
rcl
dec
shrl
or
mov
and
cmp
lcall
and
scas
xchg
add
push
mov
repz
jo
inc
clc
shr
js
mov
lahf
hlt
stos
rorb
pop
ret
ss
xor
xor
jo
movsl
xor
jns
pop
add
jle
insb
pop
xchg
lods
push
pop
jg
xor
and
outsb
push
adc
lret
lods
cmpsb
adc
or
ss
adc
push
and
dec
mov
mov
mov
inc
fs
mov
mov
bound
cmp
mov
pusha
pop
mov
divl
subl
test
or
in
inc
pop
imul
mov
jecxz
push
mov
shll
cmp
out
cmpsb
lcall
and
jb
fwait
ja
je
cmp
xchg
xchg
mov
cmp
mov
xor
mov
nop
les
inc
xchg
daa
jmp
cmp
or
fnstsw
jp
in
push
xchg
push
sub
inc
inc
arpl
lret
stos
fbld
mov
rcrb
jns
cmp
jl
dec
adc
lds
divb
mov
shrb
test
leave
dec
jp
in
fwait
pop
mov
dec
lea
xchg
jge
and
pop
pushf
pushf
ret
lock
cmpb
sub
frstor
sub
xchg
adc
pop
jl
lea
andl
sbb
mov
push
mov
sub
adc
loope
mov
sbb
in
xlat
push
loopne
scas
repz
pushf
rolb
aad
and
insl
imull
lret
cmp
xchg
pusha
fdivs
daa
push
leave
mov
pop
mov
xchg
int3
dec
fadds
ljmp
mov
sbb
lods
inc
repz
cmp
jg
je
shlb
test
lahf
or
push
jge
push
lds
xor
push
ret
lret
int
dec
in
bound
cmpl
jbe
xor
mov
mul
and
faddl
mov
pop
iret
cmpsb
inc
test
and
int
jnp
arpl
adc
jmp
test
test
xor
and
out
das
jne
sub
pop
pop
std
setb
enter
push
fists
mov
mov
lods
mov
xchg
stos
enter
imul
mov
cltd
mov
pusha
cmp
adc
jbe
cmp
mov
cmp
mov
or
cmp
adc
pop
push
jbe
cltd
inc
jo
rdpmc
push
sbb
mov
popa
pop
mov
js
pop
xor
xchg
inc
mov
jg
inc
jmp
dec
push
dec
jl
mov
lods
mov
rorb
or
jmp
mov
jnp
jnp
dec
or
pop
lret
adc
in
cltd
mov
push
fcompl
or
dec
ljmp
xor
rol
sub
inc
sti
push
fs
push
xchg
in
mov
ja
push
add
jg
in
icebp
mov
or
push
or
mov
jns
aaa
fsubs
mov
ret
jb
push
sub
popf
in
nop
mov
incb
push
pop
sbb
aam
sbb
dec
int
push
adc
loop
fs
sarb
pop
fsubrs
mov
adc
dec
jmp
ror
sti
fsubp
mov
es
mov
out
dec
cli
clc
sub
or
hlt
adc
mov
imull
cmc
mov
scas
add
xchg
aas
jle
stos
and
popf
and
xchg
gs
icebp
testb
mov
cmpsb
notb
jb
jnp
popa
and
fs
les
push
ds
cmp
roll
dec
loop
outsl
hlt
cltd
cmp
ret
and
fistps
add
cli
cmp
push
addr16
or
repz
je
push
ljmp
or
push
lahf
ret
cmp
int3
jecxz
push
imul
orb
sub
mov
sbb
inc
aas
cmpsl
insb
xor
lock
xchg
orb
mov
cwtl
inc
loope
mov
xorl
jne
in
inc
add
xchg
pushw
xor
mov
or
cwtl
bnd
cmp
mov
adc
sub
lret
sbb
xor
jecxz
gs
pusha
push
mov
out
jle
mov
lret
inc
shrl
adc
int3
push
add
and
and
xor
pop
or
fcoms
clc
sub
mov
lret
call
cmpl
cmp
mov
pop
xchg
sub
xchg
dec
pop
sub
mov
and
jo
loope
subb
pop
sub
repnz
push
fcmovnu
sti
stc
mov
pop
shll
sarl
and
sbb
ret
jo
mov
movsl
lods
xlat
xchg
bound
in
pop
inc
test
cld
imul
mov
adc
fwait
push
xchg
repnz
dec
push
dec
mov
enter
stos
cltd
and
mov
dec
mov
dec
mov
xor
sbbl
pop
or
mov
stos
fbld
adc
aad
adc
out
jl
sub
push
std
mov
xor
bnd
scas
pop
fwait
popl
inc
xchg
int
bound
aaa
pop
fsubrs
jle
xor
test
cli
in
xchg
shlb
fimuls
mov
mov
mov
lahf
and
mov
sub
mov
aaa
sbb
in
adc
push
test
aam
mov
in
jp
or
mov
xchg
lods
add
adc
daa
cld
sub
mov
jno
pop
jle
dec
jae
push
test
jecxz
xlat
xchg
adc
mov
xor
ret
sti
jns
sub
adc
cmc
pop
cmp
popa
cmpsb
add
mov
mov
insl
mov
aad
sbb
sbb
pop
or
fprem
mov
dec
mov
mov
adc
mov
stc
cmpsb
pop
cmc
fadds
mov
insl
pop
adc
in
lock
sub
sub
lret
push
jb
mov
xchg
das
jo
xchg
ror
test
stos
insl
sbb
cmpsb
ret
cmc
jl
scas
in
mov
xor
lods
jg
ljmp
hlt
addl
sbb
dec
inc
icebp
push
jns
push
in
popa
sub
mov
jg
outsl
mov
ljmp
dec
mov
addl
stos
cmpsl
add
and
movsl
js
xlat
ja
out
inc
loope
outsb
sbb
cmc
pop
push
loope
lret
bound
push
adc
push
mov
stc
xchg
gs
sub
lock
repz
cmp
xchg
addr16
cmc
arpl
fdivl
pop
pusha
add
xorb
ret
push
cs
clts
mov
jle
mov
std
and
jo
xor
adc
pop
jne
cmpsb
dec
dec
pusha
push
push
data16
pushl
ret
or
inc
fsubs
ss
xlat
push
add
lds
inc
xchg
cmp
xchg
bnd
mov
psubd
test
adc
sbb
or
xchg
lea
dec
stos
sbb
pop
in
xlat
adc
test
mov
test
dec
and
jecxz
jl
inc
lods
mov
mov
movsb
sub
sbb
jl
icebp
test
jecxz
shrl
adc
call
jp
push
hlt
sti
out
scas
cmp
mov
mov
in
je
inc
lods
adc
imul
repz
pop
ret
repz
movsl
mov
dec
dec
adc
inc
or
cs
mov
fisttps
test
popf
push
sub
xchg
movsb
xchg
and
sub
sbb
lret
subb
arpl
test
mov
aad
stos
push
or
push
lods
push
adc
dec
ljmp
and
out
ffree
data16
aaa
clc
stos
cmp
fisttpl
pop
clc
mov
adc
mov
jae
jne
sti
mov
push
scas
inc
mov
mov
jmp
dec
mov
add
test
sbb
nop
cmpsl
mov
xchg
xorl
bound
xchg
ljmp
and
add
pop
ret
inc
aam
imul
push
xor
fwait
push
jge
loope
shl
push
mov
sub
dec
popa
test
sub
adc
sbb
mov
test
pop
push
adc
mov
xor
cmp
jl
pop
adcb
dec
clc
inc
and
jo
or
dec
mov
push
test
push
adc
dec
jg
jg
movsl
push
data16
xor
stos
xor
or
icebp
cmpsb
lds
push
pop
test
aas
lds
dec
jns
xchg
cmp
das
jno
sbb
cmp
sub
xchg
rcrb
rolb
aad
popa
and
xchg
sub
pop
mulb
push
adc
aam
xor
sub
or
pop
out
test
add
inc
aam
lods
movsb
mov
sbb
in
popa
add
cs
out
lcall
inc
jno
xor
aad
push
aam
loop
aam
mov
xor
mov
leave
mov
mov
mov
rcll
and
cli
fsubrs
sti
fsubr
and
pusha
idivl
lods
subb
pop
cmc
out
std
int3
in
inc
cmp
push
cld
xchg
fsts
sbb
outsb
and
fdivl
repz
xchg
xchg
jnp
in
jmp
cmp
xor
cmp
gs
test
stc
movups
jmp
dec
pop
int3
push
and
xor
xor
imul
push
adc
out
cmp
sbb
mov
add
out
imul
inc
test
sbb
jecxz
mov
stc
in
pop
sahf
aam
lahf
clc
mov
mov
mov
out
scas
test
add
pop
jae
and
out
rcr
add
cmp
mov
outsl
mov
cwtl
inc
fadds
xor
lcall
fisubl
inc
ret
in
paddw
mov
xchg
pop
hlt
push
scas
jle
xchg
add
out
cmpw
test
cmpsb
movsl
shlb
ds
cmpsb
or
or
test
idivb
out
mov
jge
sbb
icebp
or
loopne
add
pop
xchg
xor
mov
add
movb
in
add
dec
mov
mov
xor
in
scas
dec
test
arpl
loop
pop
adc
mov
lods
and
nop
adc
js
cmp
inc
xchg
sub
ljmp
movsb
mov
dec
sub
aad
xor
cltd
pminsw
lea
cmp
out
mov
mov
std
xchg
test
inc
fs
jecxz
jne
ljmp
xchg
daa
lret
aad
out
or
iret
xor
repz
mov
cmpb
ret
mov
js
mov
inc
xor
xchg
cld
out
xor
and
aaa
movsl
xor
nop
mov
insl
icebp
mov
repz
inc
cmc
mov
xchg
fs
daa
mov
mov
or
stc
xchg
data16
jno
popa
add
pop
subb
or
scas
cwtl
test
mov
jnp
jnp
or
lcall
jecxz
xchg
mov
das
dec
out
cltd
push
popl
pop
xorl
sbb
sbb
mov
shll
dec
ja
push
jb
fistl
adc
and
fmuls
int
imul
or
pusha
call
mov
xchg
loop
lock
jnp
repz
pop
pusha
mov
sbbb
pop
imul
bnd
cmpsb
daa
adcl
push
cltd
out
repz
scas
pop
lret
xlat
call
call
rclb
cmpsl
push
jns
mov
pop
cmpb
hlt
xor
outsl
je
cmp
sbb
loope
aad
cmp
mov
jecxz
dec
push
rcrb
dec
int3
cmp
fstp
ja
dec
sub
fwait
nop
push
push
and
adc
mov
jge
hlt
ret
cs
cltd
adcb
cmpb
or
inc
push
in
in
xchg
mov
out
mov
and
out
icebp
filds
imul
jne
sbb
out
and
xor
mov
ret
mov
inc
dec
xorl
mov
mov
push
nop
push
mov
xchg
mov
lock
sbb
pop
ljmp
fwait
aad
jmp
outsl
test
ds
emms
sub
push
fwait
das
push
fbstp
ret
ds
outsb
mov
repz
inc
add
enter
jno
push
cs
and
stos
out
mov
ds
mov
cltd
xchg
xchg
push
inc
sbbl
andl
sbb
cwtl
ss
les
repnz
bound
orb
cmp
cmp
cmpb
xor
add
xchg
xorb
pop
lock
adc
push
lock
push
lea
sub
adc
ffree
stos
xor
xchg
lret
mov
mov
sti
aas
sbb
insl
or
leave
fs
cmp
sbb
sbb
jmp
fdivrp
mov
test
pushf
adc
pop
in
insb
xchg
arpl
movb
sahf
mov
movsb
jno
mov
jge
inc
jno
mov
das
call
popa
and
insl
into
and
into
xlat
data16
xlat
fcmovb
cld
or
in
mov
mov
enter
shl
mov
scas
jecxz
sahf
dec
scas
ljmp
sub
xchg
scas
xlat
adc
xchg
adc
outsl
mov
gs
xlat
cmp
ss
sbb
out
xor
movsb
in
out
int
inc
je
fnstcw
jg
ljmp
xor
sahf
xchg
pop
mov
mov
and
sub
cwtl
xchg
sarl
movsb
inc
mov
aas
adcl
add
add
sbb
sbb
enter
xchg
or
add
inc
aaa
adcb
xchg
out
pop
mov
lods
cmp
mov
dec
jo
push
adc
and
sub
push
xor
adc
sub
push
retw
add
pop
push
mov
fnstenv
xchg
ret
mov
mov
fstps
mov
jne
adc
lods
outsb
push
cmc
shll
sub
xchg
aaa
js
pop
ja
mov
push
dec
rolb
adc
mov
loopne
je
jmp
out
imul
hlt
mov
jg
pop
cmc
aam
cli
ljmp
lret
pop
pop
xor
outsb
orb
outsb
sbb
and
or
ja
fsubrl
cmpsb
mov
pop
xlat
inc
xor
dec
cld
out
popf
cltd
test
movsb
mov
popf
jnp
inc
or
mov
mov
sub
xor
sar
mov
das
xchg
push
sahf
out
imul
jo
test
in
sbb
xlat
push
jno
jns
dec
decl
cmpsb
sub
sub
js
lods
cwtl
cmpsb
mov
pop
cmp
pop
sar
cld
mov
xor
ret
sti
push
dec
cli
cmpsl
imul
inc
dec
movsb
into
xor
jp
ret
cwtl
imul
jp
mov
adc
aad
add
mov
lret
xor
or
mov
inc
add
add
pop
or
xlat
adc
mov
fdivs
sub
inc
sbb
stos
nop
sub
cmp
test
stos
xchg
aas
cltd
jnp
mov
jl
scas
iret
or
pop
mov
mov
cmpxchg
cld
push
xor
aad
sbb
orl
sarb
jmp
inc
and
xorb
mov
shrl
sbb
cmp
mov
xchg
js
sbb
vpmulhw
fwait
xchg
sbb
scas
mov
imul
std
lea
test
and
and
loope
cmp
subb
int
andb
arpl
popf
xchg
mov
test
push
and
loop
incb
roll
jo
vphsubwd
mov
pop
mov
or
fcmovbe
inc
jmp
sysenter
loope
pop
cmpl
adc
je
cwtl
out
pushw
je
insb
fsub
mov
inc
xor
insb
xchg
sbb
mov
push
fldl
insl
jns
jns
adc
outsl
xor
inc
add
cwtl
orb
and
dec
xor
bound
inc
mov
dec
jge
jae
loope
popa
test
or
jne
sub
es
in
mov
mov
jo
js
xchg
dec
movsl
sub
push
mov
jecxz
mov
ss
hlt
cmp
mov
pop
aad
push
jb
add
dec
mov
sbb
jl
sub
jne
push
inc
xor
lahf
dec
cld
and
sahf
push
stos
call
lods
mov
add
leave
jle
mov
inc
pusha
bound
ficoml
imul
and
adcb
cmp
loope
iret
out
pop
mov
or
jge
pop
bswap
fstpl
jmp
mov
fnstcw
add
inc
push
imul
in
fistps
nop
sti
nop
push
push
sar
lods
mov
sub
lret
mov
cli
sub
out
inc
aam
lea
imul
push
aad
jecxz
adc
test
shrb
cmp
lahf
and
and
int
inc
sti
sbb
xor
pop
lret
pop
lcall
jnp
pop
popa
pop
test
xor
mov
jbe
mov
xor
add
add
push
jmp
les
pop
mov
js
mov
cmp
into
lret
xchg
negb
fcompp
sarb
lret
stc
push
jp
loop
mov
xchg
incl
cmpl
or
add
push
adc
xor
adc
rcl
hlt
jne
lods
out
xchg
sub
and
addr16
lcall
adc
pop
lds
stos
fidivrs
sti
scas
mov
mov
pop
push
adc
and
pop
mov
cmc
loope
push
ss
mov
sbb
imul
loope
stos
mov
sbb
dec
repnz
push
imul
and
imul
fs
jg
jns
call
sub
test
cmp
mov
xchg
test
xchg
addl
imul
fisubl
gs
test
lret
test
stos
dec
es
inc
or
arpl
stos
add
es
push
mov
cmc
xor
mov
pop
xchg
fwait
jle
adc
leave
mov
sarl
mov
nop
data16
call
mov
adc
aad
xchg
insb
pop
or
or
jl
sbb
enter
sbb
sub
cwtl
dec
push
jmp
inc
mov
ljmp
aaa
aam
loop
mov
call
dec
sbb
divb
cwtl
jecxz
out
shrb
pop
outsl
jo
out
adc
adc
mov
bnd
aas
lock
test
add
and
cld
mov
cmp
jne
stos
xor
xor
test
jmp
mov
and
lods
pop
mov
cmpsl
pop
cmpsb
cs
add
or
pop
dec
add
pop
push
xchg
sbb
xlat
cmp
pop
xchg
sahf
je
icebp
jmp
fstps
push
jl
sbbb
sbb
pop
xorl
into
fadd
out
push
xor
jae
mov
inc
xor
xchg
int
fstpl
mov
cld
divb
ror
push
aas
and
ret
in
les
jecxz
je
fisubs
frstor
cmpsl
pop
cmp
push
push
clc
cli
jmp
sub
outsl
int
rcrb
push
pushf
mov
rcr
xchg
lock
xor
push
and
mov
add
mov
dec
adc
jbe
mov
mov
jmp
aas
mov
je
xor
or
cld
jo
dec
pop
shr
shrl
pop
mov
push
gs
out
mov
dec
xor
pop
xchg
cwtl
mov
les
outsb
cmpsl
push
dec
add
adc
lret
dec
aaa
lds
cmp
inc
xor
mov
inc
mov
hlt
rorb
push
inc
lret
jae
push
repnz
nop
cs
clc
jge
jge
sti
cltd
les
or
sbb
mov
out
pop
push
mov
mov
imul
ljmp
inc
cmpb
xor
xchg
cmp
iret
je
daa
fstps
pop
dec
gs
loopne
subb
sti
sahf
fidivrs
cld
or
sub
repz
mov
jecxz
repnz
mov
and
dec
test
fcoms
adc
pop
inc
mov
sbb
mov
insb
push
or
xor
das
nop
js
mov
sahf
mov
lea
pusha
mov
and
xor
popf
bound
sub
fs
dec
pushf
push
daa
dec
inc
jnp
jno
scas
mov
mov
pop
movsb
or
cmpsl
fstps
adc
or
adc
call
xchg
jge
imul
sbb
rcr
ret
xor
in
fisttps
dec
jae
out
icebp
lods
inc
sub
test
adc
mov
adc
cli
mov
inc
stc
sahf
xchg
add
ss
idivb
outsb
iret
xor
sbb
sbb
pop
data16
cmpb
xor
sarl
xchg
jge
jns
test
sarb
lock
fnstenv
or
out
xbegin
inc
fmul
xrelease
mov
jg
cmp
sbb
cmpsl
in
imul
pushf
mov
inc
sub
and
adc
xor
repnz
inc
dec
xor
or
in
xor
pusha
addr16
inc
pusha
out
mov
lods
insb
inc
aad
mov
mov
sbb
adc
xchg
sti
roll
aam
aaa
xor
jb
lahf
inc
and
pop
out
cmp
jp
test
cmp
pushf
dec
jl
movsl
dec
and
add
cmpb
sub
les
imul
shrb
ds
push
in
xchg
sti
jb
or
andb
push
xor
outsb
sbb
sub
mov
sub
outsl
mov
push
cmp
in
jg
mov
iret
jl
mov
mov
test
sbb
cmpsb
jne
les
pop
cmp
inc
mulb
xchg
pop
bound
jle
push
xor
push
insb
mov
xchg
and
lahf
fcom
push
push
push
sbb
and
add
push
dec
sbb
and
jnp
jno
cmp
dec
xor
cwtl
in
sbb
cmc
arpl
pop
push
jno
lods
pusha
mov
sub
lods
lods
pop
and
sbb
les
js
jp
fsubrs
mov
adc
dec
out
cmp
pop
stos
and
mov
push
lods
jno
xchg
or
fnstenv
ja
nop/reserved
in
ljmp
add
popf
mov
out
xor
push
in
inc
stos
push
xor
mov
shlb
es
loop
sahf
pop
mov
lret
jb
ljmp
out
jmp
nop
sbb
movsl
inc
dec
mov
mov
movl
mov
mov
fadd
dec
sbb
divb
outsl
outsb
cmp
loop
sub
stos
sbb
mov
sarl
pop
xchg
cmp
dec
pop
shl
repnz
inc
xchg
shlb
aad
adc
xchg
mov
jo
andb
or
movsl
cmp
enter
jne
cmp
outsl
fldl
mov
test
mov
mov
inc
jecxz
push
fs
mov
addl
and
adcb
inc
lods
ret
int3
nop
insl
sbb
pop
rclb
int3
ljmp
pop
mov
fidivrl
and
icebp
shlb
inc
dec
push
mov
pop
inc
mov
into
inc
adc
adc
arpl
test
pop
fistpl
mov
cmp
or
sbb
sbb
test
sbb
adc
push
inc
xchg
bound
lret
insb
loopne
cmp
sbb
fs
inc
mov
sub
or
jle
jo
addr16
call
rclb
adc
dec
push
jecxz
mov
aas
or
test
add
lea
adc
fcomi
stos
xchg
lahf
test
jl
xchg
movsb
loopne
int3
inc
insb
push
jmp
loope
push
jmp
data16
xchg
lret
xchg
rorl
sbb
andl
or
int3
mov
inc
xor
lret
in
cmpb
or
cmpsb
push
cmp
pop
bound
enter
xor
mov
inc
cwtl
jl
js
dec
sahf
or
ret
pop
xor
out
jmp
push
ds
test
and
addr16
cmp
aam
mov
fnsave
in
xchg
cmp
sbb
mov
add
adc
movhps
int
jne
nop
mov
repz
mov
sbb
and
and
xor
mov
subl
in
lock
xor
mov
mov
stos
xor
push
xor
es
ret
xchg
mov
les
andl
aaa
in
repz
adc
jg
jns
xchg
mov
mov
lea
and
lods
les
and
and
sub
repnz
les
mov
fcompl
xor
movsb
dec
imul
sbb
xchg
insb
enter
mov
subb
cmp
int3
and
clc
insb
push
ret
sub
int
jl
ljmp
daa
mov
push
mov
xchg
aad
jb
push
cmp
iret
mov
lds
mov
arpl
cmp
test
insl
pop
pop
pop
add
cli
je
xor
or
mov
clc
sahf
or
inc
jne
or
xor
xor
je
push
outsb
aas
inc
mov
push
das
xor
iret
xor
rcl
or
das
mov
hlt
jecxz
cmp
add
mov
inc
imul
mov
xchg
repz
mov
fs
mov
xlat
das
fstpt
imul
lfs
xor
jmp
xor
pop
jl
sub
int
dec
pop
mov
pushf
jae
mov
inc
lds
bnd
aad
pop
hlt
fisttpll
jl
jp
xor
je
jae
in
lock
ret
sar
inc
inc
push
sbb
mov
pop
add
adc
push
lock
fsubrl
xchg
ja
dec
mov
and
leave
js
int
sbb
cmp
testb
shlb
in
cmpsb
sti
loop
jg
and
xchg
mov
clc
fdivl
in
and
leave
push
aad
xlat
test
mov
mov
dec
mov
popf
cld
push
xchg
icebp
cs
idivl
xor
jo
les
mov
ret
flds
pop
jne
mov
jnp
fisttpl
mov
jb
and
and
aad
jl
fs
or
cmpsl
js
popf
inc
jnp
js
inc
fisttpl
lods
jge
insl
mov
or
test
lret
jno
mov
push
xchg
loope
ds
push
mov
xchg
leave
sti
dec
sti
or
aad
outsb
xchg
inc
mov
or
mov
jo
sbb
push
fstps
mov
es
jo
iret
gs
lcall
mov
adc
movsb
cmp
sahf
jecxz
fstps
add
cmpsb
adc
jp
mov
push
sub
add
xchg
in
sbb
out
movsl
dec
in
sbb
sbb
mov
aam
inc
inc
and
xlat
adc
lods
nop
jp
sub
adc
cmp
cmp
pop
add
js
xor
jmp
push
xor
in
mov
fsubrs
aaa
pop
push
inc
gs
nop
mov
jno
push
mulb
add
sub
dec
mov
repnz
sbbl
lock
sbb
jne
mov
sbb
fucom
cmpl
jbe
or
sub
ret
test
inc
sbb
ds
call
sarl
lods
lcall
mov
outsb
cmp
cmpsb
stc
mov
xor
hlt
or
adc
mov
cli
das
clc
cli
sbb
dec
dec
addr16
cltd
mov
or
out
hlt
popf
inc
mov
fxch
data16
add
cltd
jnp
mov
push
fdivl
test
loope
sbb
jns
clc
xchg
std
out
cltd
sbb
xlat
loop
mov
stos
mov
add
mov
lahf
pop
sbb
test
test
fnsave
and
arpl
mov
jae
xor
jnp
arpl
pop
jecxz
cmp
rorl
inc
cmp
xchg
mov
pop
mov
flds
test
mov
cmpsl
xor
pop
lds
jmp
cmp
xchg
and
out
mov
jae
or
mov
sub
loopne
inc
add
xchg
cwtl
push
test
test
fs
sub
sbb
out
mov
xor
out
gs
mov
xchg
aaa
and
push
pop
cmpsb
iret
sbb
aad
bound
shlb
sub
imul
jne
push
mov
aam
dec
adc
or
push
nop
aam
push
adc
stos
daa
aad
xchg
je
lods
jns
je
mov
fwait
out
int
adc
inc
bound
icebp
ret
aam
xchg
hlt
es
aad
xor
enter
sub
daa
jge
lret
cwtl
enter
cmc
push
rorb
add
fsts
in
js
cmpb
mov
pop
jmp
mov
orl
insl
fidivrs
mov
stos
std
dec
cltd
xchg
mov
movsl
roll
jb
xchg
js
add
jbe
gs
push
dec
insl
aaa
push
xlat
int
jne
shlb
push
sub
or
xor
cmp
inc
mov
cmp
fucom
rorl
cmc
mov
fdiv
rclb
hlt
ss
and
add
std
cwtl
and
pop
iret
push
stc
cld
in
outsb
cmp
xor
mov
scas
loope
cmpsb
cmp
mov
add
ja
frstor
stos
xchg
push
jb
mov
test
cmpsb
stos
mov
ret
add
es
inc
jns
adc
adc
ret
aaa
daa
cmp
adc
push
mov
insb
es
or
stos
fisubl
ljmp
rolb
out
cs
dec
loope
outsb
js
cwtl
jp
insb
mov
inc
ljmp
rorb
stos
dec
push
xor
in
dec
xchg
movl
mov
pop
leave
leave
cmp
popa
scas
or
mov
out
push
lcall
xor
lea
lods
dec
push
fwait
jp
inc
outsb
pop
or
sar
sub
fwait
inc
sub
push
xor
mov
pxor
mov
sub
in
sbb
pop
pop
dec
inc
push
inc
stos
cmp
movsb
loopne
jo
mov
mov
push
in
mov
stos
enter
sarl
sarb
jb
mov
ljmp
pop
pop
adc
stos
das
iret
loope
or
fs
sub
rcll
jo
add
and
adc
push
aad
pusha
scas
fdivrs
in
mov
mov
mov
lods
push
je
mov
pusha
inc
add
xor
sbb
cld
xor
in
dec
fisttps
sbb
push
cmpsb
cmpsb
mov
ja
ds
mov
call
xor
add
scas
das
int
sub
imul
add
cmp
cld
or
js
push
lret
mov
movsl
pop
add
in
adc
pop
mov
enter
mov
pop
insb
lock
addl
ret
cmc
mov
mov
mov
sbb
inc
inc
xchg
dec
jo
test
mov
adc
push
repnz
push
ret
jne
xor
mov
xchg
mov
inc
cmc
stos
cmc
mov
xchg
in
movl
cltd
xor
jecxz
add
sub
out
addr16
xor
pop
cld
xchg
js
push
fidivrl
pop
call
addr16
ljmp
arpl
addr16
clc
xchg
stos
cltd
xchg
aam
jecxz
jno,pn
mov
push
scas
lret
ret
inc
stos
sbb
mov
dec
mov
add
inc
aaa
stc
hlt
cmpsb
out
mov
mov
and
or
je
cmpsb
push
fcompl
das
outsb
arpl
cwtl
ds
sbb
inc
call
jns
fistpl
add
push
aaa
mov
push
xchg
aam
cmpl
pop
fimull
rcl
outsb
push
pop
loope
repz
insl
xor
mov
test
fildl
inc
adc
add
std
ds
mov
fabs
adc
mov
js
ror
nop
push
shrl
jecxz
sub
fmul
in
inc
fwait
test
outsb
cli
cld
pop
ljmp
add
je
rorb
add
daa
repz
inc
js
ja
mov
cmpsl
sub
mov
fcmovb
pop
cli
repnz
insb
adc
pop
fists
clc
add
xchg
mov
xchg
mov
push
jmp
ja
sarb
dec
sub
fwait
xor
ret
pop
aam
ret
cs
idivb
dec
mov
xchg
jne
or
outsl
mov
ret
sub
sub
cli
imul
filds
imul
cld
dec
in
shl
arpl
jg
frstor
fdiv
dec
imul
xchg
rolb
mov
ljmp
dec
xchg
push
test
add
sbb
arpl
pop
sbb
int
mov
jl
popa
add
fucomip
ret
add
mov
sbb
pop
lret
in
aad
test
shll
sahf
out
xor
xchg
insl
sbb
inc
push
nop
movsl
or
xor
mov
pop
idivb
lods
insb
lods
or
or
dec
imul
push
leave
or
fcoms
pop
bound
test
add
xchg
cmp
pusha
sub
in
pop
xchg
in
dec
daa
mov
pop
sub
cmp
outsl
cmp
mov
fisttpl
mov
inc
mov
sub
lock
mov
jmp
cmp
out
mov
pop
push
ret
iret
loop
fstl
stos
sahf
jmp
adc
std
lock
lret
mov
inc
ret
mov
fnstcw
inc
stc
int3
iret
pop
ds
loopne
dec
ficomps
inc
movsb
pop
fs
into
ss
adc
out
sub
lret
lret
in
xchg
mov
and
bound
inc
cli
jno
sbb
xchg
dec
pop
mov
fdivl
je
into
xchg
inc
pop
mov
lea
dec
aad
data16
mov
test
cli
outsl
mov
mov
push
mov
add
push
push
and
sbb
dec
inc
fsub
xchg
int3
push
dec
sarl
and
arpl
pop
adc
pusha
push
inc
cmp
insb
dec
push
ja
pop
push
pop
jp
std
sub
xorb
je
jmp
sbb
mov
pop
insb
sbb
lds
sub
sub
rcrb
ja
andb
push
add
push
or
jno
push
inc
sbb
xchg
xchg
call
stc
mov
jne
ds
shlb
hlt
adc
insl
cmp
test
fwait
inc
lret
sbb
push
es
movsb
mov
out
push
ficomps
movsl
inc
scas
ljmp
cmc
lock
cs
mov
pop
sub
in
bound
and
cmp
inc
push
lock
das
mov
mov
jb
sub
add
sahf
jne
mov
nop
pop
or
cli
sbb
gs
pusha
fsqrt
arpl
mov
sbb
and
adc
aam
sbb
iret
jb
inc
cmp
ret
cltd
cmc
roll
mov
mov
xor
aad
in
neg
int3
push
xlat
mov
arpl
or
xchg
xchg
jns
and
and
pop
out
icebp
xchg
push
mov
fsubl
inc
xchg
inc
cmp
mov
jo
mov
inc
sub
mov
in
or
daa
test
pop
push
xor
add
mov
xchg
pop
fcomip
or
add
or
jbe
inc
and
rcll
loope
orl
dec
xchg
push
fnsave
je
insb
xor
hlt
xchg
dec
inc
lods
push
add
push
inc
adc
fcomp
mov
inc
ds
xor
adc
clc
sbb
jmp
or
data16
push
lods
cmc
xor
push
xchg
nop
fistpll
iret
add
push
mov
sub
into
cmp
pop
sarb
movsb
pop
roll
sub
inc
add
in
loope
stc
mov
dec
lods
push
fistps
dec
inc
mov
cmpsb
push
out
xor
arpl
pop
mov
pop
adc
sbb
xchg
fildl
dec
xchg
shll
jns
and
mov
stos
ljmp
xor
add
dec
and
in
std
and
daa
lahf
lea
and
pop
xlat
push
in
aam
mov
repz
in
sbb
push
lds
xchg
insl
sbb
mov
lds
mov
shr
fildl
mov
sbb
and
pop
mov
hlt
les
cmp
out
xchg
jbe
aam
mull
sbb
mov
pop
cltd
xor
push
lea
pop
je
and
pop
aad
pushf
push
mov
jae
sbb
clc
jg
mov
out
into
add
or
adc
mov
clc
push
test
scas
jnp
mov
mov
repnz
and
adc
stos
loopne
popl
hlt
es
mov
leave
les
scas
and
or
cmp
inc
push
addr16
loope
xchg
pop
rcrl
or
out
pop
dec
push
shr
pop
in
push
lods
jge
bound
outsb
or
dec
cmp
mov
int3
xorl
add
cmp
arpl
ds
fldcw
mov
adc
mov
dec
std
scas
dec
pop
mov
fnsave
mov
xchg
jno
push
sub
popf
cltd
xchg
js
mov
call
mov
pop
int3
sbbb
cmpsl
sarb
dec
enter
adc
insl
jmp
add
pusha
ja
jg
imul
add
cmp
xchg
inc
out
xchg
pop
push
and
testl
mov
add
mov
xchg
xchg
lock
inc
mov
inc
sbb
popa
sub
xchg
mov
mov
push
pop
fisubl
sub
pop
pop
pop
jno
lea
cmp
sub
movsl
add
adc
clc
inc
mov
or
sub
add
mov
mov
inc
sub
divb
movsb
cmp
insl
mov
xor
lret
adc
loopnew
mov
dec
add
and
sahf
add
xchg
sbb
shrl
add
getsec
mov
or
mov
aam
xchg
lock
mov
pop
dec
push
loopne
jae
push
pop
in
mov
subl
and
adc
add
das
cmpsl
stos
pop
pop
fsubp
or
mov
hlt
or
ficomps
cmp
push
mov
mov
add
aas
xlat
cmp
test
jg
mov
sbb
jae
int
sub
cwtl
mov
mov
mov
xchg
fcmove
sbb
mov
mov
xchg
adcl
mov
xorl
es
lahf
stc
out
dec
mov
enter
sahf
xor
jns
call
jmp
xor
sub
mov
into
test
and
sub
add
jmp
jg
lahf
push
iret
dec
mov
lds
mov
cld
sub
std
int
jle
jge
sbb
fldl
adc
jp
pop
add
sbb
add
pop
sbb
jae
cmp
mov
pop
mov
pop
or
daa
ja
mov
gs
outsb
xchg
and
roll
xor
and
int3
xor
ret
seta
dec
dec
test
and
in
insb
mov
stc
sub
mov
xlat
mov
negl
xor
push
lds
dec
enter
mov
es
mov
cmpsl
dec
aaa
jb
ljmp
icebp
sbb
xlat
cs
orl
or
arpl
cmp
xor
sub
imul
adc
or
into
sbb
loopne
scas
adc
aaa
popa
scas
sbb
aas
xorb
gs
cmpsl
sub
inc
or
inc
enter
cmp
lret
je
add
ds
mov
stos
lea
and
pop
dec
repz
mov
imul
loope
xor
scas
pop
add
mov
je
sbb
pop
cltd
jnp
js
popf
fstpl
xorb
ss
jno
loop
pop
iret
sub
imul
xor
std
lds
gs
inc
iret
shrb
jg
mov
shll
out
shlb
and
cmp
inc
xchg
inc
push
or
mov
das
scas
dec
fdivr
rorl
popa
jbe
std
cmpb
arpl
aam
mov
sbb
inc
insb
jecxz
and
pop
fsubrp
inc
cs
cmp
loop
ficoml
xchg
repnz
mov
pop
cmp
int3
xchg
gs
cwtl
shr
fcmovnb
arpl
push
cmc
sbb
xchg
xchg
mov
push
xchg
loopne
lret
pop
outsl
push
movsl
enter
jb
push
ss
mov
jbe
adc
mov
sbb
add
leave
mov
lea
sub
adc
mov
aaa
or
xchg
inc
jnp
aaa
stc
mov
jle
push
inc
in
mov
cmp
ror
ss
mov
mov
call
push
jmp
sbb
stos
dec
mov
lret
in
subb
or
and
inc
mov
sub
dec
jns
jmp
mov
sbb
add
ret
hlt
cmp
xchg
dec
sub
je
xchg
pop
jb
ljmp
pop
cmc
dec
fcmovb
pushf
add
push
aaa
sbb
dec
lea
dec
daa
add
and
out
cli
inc
pop
ud0
jmp
and
jmp
loopne
inc
mov
mov
imul
and
jns
insl
out
shl
aam
js
jb
fdivl
fldl
mov
ss
jmp
cmpsb
or
in
fcmovbe
fildl
dec
inc
add
enter
cmp
cmp
sub
dec
imul
and
test
subl
fmull
push
jge
mov
sbb
cld
add
jp
cwtl
jno
js
enter
and
mov
push
add
lahf
adc
dec
rcll
dec
mov
pushl
movsl
push
adc
stos
fst
inc
ds
lret
outsl
test
pop
cli
dec
test
push
or
push
pop
out
frstor
dec
sub
ljmp
add
js
lea
mov
jge
add
and
or
pop
lret
fisttpl
out
cli
outsl
cmpl
sub
mov
sub
mov
add
jnp
fs
pusha
lret
or
aam
movl
pop
flds
mov
jnp
pop
sub
sub
in
xchg
loopne
repnz
leave
push
outsb
mul
xchg
mov
mov
fsubl
and
movl
xchg
in
sbb
in
cmpsb
mov
cld
fisubrs
rol
xchg
int3
enter
sbb
cmp
popl
xor
ljmp
scas
int
mov
xchg
daa
push
addr16
adc
loope
adc
popf
and
pop
clc
fiaddl
stos
outsl
ljmp
cli
imul
lds
mov
mov
xor
repnz
rcll
or
mov
mov
aas
inc
pushf
nop
adc
inc
ror
cmp
jb
pop
or
mov
jp
mov
sbb
rol
cltd
jmp
fcomi
inc
sti
in
fmull
stos
aaa
stc
xor
std
dec
mov
pop
mov
mov
sbb
test
ret
mov
jne
dec
push
mov
lcall
inc
popf
ret
js
in
cwtl
add
jne
pavgw
bnd
and
push
repnz
fsubs
je
pop
icebp
jp
lcall
adc
out
cwtl
xor
xor
cmp
insb
lock
mulb
ret
aaa
add
xchg
ss
xchg
arpl
test
xchg
movb
fistl
outsb
xor
cmp
in
lods
inc
clc
and
mov
mov
cmp
int3
aam
jmp
pushf
cmc
hlt
sarb
and
notb
push
inc
outsb
movsb
pop
dec
push
and
mov
pop
aaa
inc
stos
movb
imul
leave
adc
dec
imulb
or
inc
lahf
pusha
xchg
mov
pop
push
aaa
shll
dec
sti
enter
test
mov
cmp
imull
inc
sub
loopne
lcall
iret
xor
sbb
aaa
cmp
movsb
inc
cli
repnz
xlat
es
xchg
push
jp
cmc
test
mov
cmp
enter
or
mov
push
adc
xchg
lock
lock
add
in
leave
jl
inc
loope
es
sbb
fnstsw
xchg
xchg
adcl
in
add
inc
fisttpl
out
scas
cmpl
lods
out
mov
add
or
pop
lcall
jbe
push
arpl
xchg
in
nop
xlat
repnz
scas
jle
xchg
add
mov
inc
mov
das
inc
scas
cwtl
mov
aad
pop
xor
pushf
and
das
dec
mov
repz
and
cmp
jo
mov
les
mov
test
aam
cmp
out
lds
das
push
mov
adc
gs
lods
sbb
cmp
push
aaa
and
or
fsubs
add
icebp
loope
and
call
dec
cli
cmp
bound
pop
pushw
lcall
cli
outsl
out
add
pop
cmpsb
cmp
test
mov
pushf
xlat
add
xchg
repz
jae
fistps
lods
test
cmp
outsb
fdivrs
cmp
mov
jne
scas
add
sub
je
pushf
shlb
aam
lds
sub
aas
xor
imulb
jnp
sub
dec
pusha
push
insl
in
xchg
sbb
dec
jge
xorb
push
aas
test
sbb
and
std
movsl
fwait
xor
jle
fdivrp
lea
xchg
mov
mov
mov
cs
popf
xor
jne
push
add
dec
std
mov
push
test
cmc
das
xor
idivb
pop
jne
out
jle
jns
je
pop
pop
stc
cmp
xchg
ret
mov
shr
inc
jnp
pusha
pop
cli
pop
pop
mov
jo
ljmp
stos
cmpsb
sahf
mov
sbb
out
mov
loopne
cmp
sbb
fcmovbe
fcoml
add
mov
adc
inc
jne
test
inc
inc
mov
loop
pop
mov
pop
in
mov
leave
mov
rol
sbb
push
pop
mov
add
sahf
sar
das
or
xchg
icebp
repz
aad
cwtl
in
inc
cltd
in
push
popf
dec
shl
test
add
sbb
rcll
mov
dec
inc
cmp
xchg
jnp
movb
xchg
jmp
pushf
and
addr16
scas
push
arpl
stos
je
imul
int3
jne
and
popa
incl
pop
icebp
push
xchg
std
pop
push
fisubs
dec
mulb
push
shlb
addl
or
jae
pop
test
sahf
inc
adc
and
sbb
cs
inc
fdivrs
pop
popa
jmp
imul
add
je
lahf
jns
or
adc
and
sahf
cmp
fsts
jbe
repz
xchg
add
enter
out
imul
in
push
push
pop
add
xchg
mov
aam
lcall
push
stos
jo
pmulhuw
outsl
iret
mov
xchg
sbb
xchg
push
movsl
lods
test
xor
pop
jne
xchg
mov
jge
cmp
fwait
cmpsl
dec
xor
pop
mov
je
adc
jns
dec
ret
in
ss
xchg
aas
sbb
bound
push
dec
cmpsb
scas
icebp
stos
push
push
sbb
fistps
dec
test
jne
cli
xchg
fdivr
sub
cli
sarl
adc
fidivs
sub
mov
leave
fwait
out
xor
xor
cmp
daa
in
mov
addr16
mov
lahf
insb
lea
dec
scas
in
mov
xchg
cwtl
cmc
call
pop
pop
or
leave
cmp
dec
inc
std
sub
xchg
rol
iret
aam
cltd
test
and
hlt
fs
jno
sbb
in
int3
ja
int3
push
jno
shlb
loopne
pop
sbb
xor
fadd
xor
push
jno
xor
sbb
call
cld
cld
shlb
or
xlat
xor
jns
mov
scas
outsl
jae
mov
jb
aas
push
rorl
mov
stos
dec
mov
test
jmp
insb
aas
pop
xor
cmp
inc
lock
push
arpl
subb
scas
xchg
jl
xchg
arpl
xchg
out
dec
adc
lods
xor
inc
xor
sub
mov
inc
hlt
lods
cmp
push
mov
es
enter
movsb
sub
mov
inc
sub
stc
sbb
xor
pop
sahf
lea
add
add
push
int
push
lds
fsubl
cmpsb
cmp
std
inc
cmp
fcoms
mov
adc
lods
jp
xchg
fmuls
xor
loop
outsl
cltd
cmp
sbb
cs
cmp
jg
outsl
rorb
int3
xchg
jnp
add
rol
mov
sbb
mov
sar
adc
nop
repz
outsb
mov
in
add
cmp
out
rcrl
push
in
insb
pop
mov
dec
mov
push
dec
xor
leave
addr16
pop
inc
in
push
scas
mov
mov
cltd
mov
arpl
stc
movsl
cwtl
cmp
sub
inc
shll
xchg
lcall
adc
or
push
pusha
fs
in
incl
js
insb
mov
test
inc
cwtl
call
jnp
adc
push
cmp
xchg
test
mov
insl
cmpsb
mov
lret
int3
sub
cwtl
xchg
sti
mov
cld
jle
jle
in
lods
mov
xchg
cmp
popf
das
out
inc
dec
sbb
jae
mov
push
sbb
add
sti
fcmovb
mov
loop
roll
inc
imul
sbb
imul
mov
sbb
gs
push
mov
leave
decl
inc
ds
shl
jp
hlt
add
push
lock
in
pop
or
push
lahf
popa
int
or
inc
xor
xor
push
add
pop
push
stos
outsl
add
mov
push
jno
pop
cmp
aad
fildl
push
fnstcw
imul
insl
fcmovu
cmp
lea
dec
xchg
fiaddl
mov
dec
inc
cltd
ret
cwtl
or
rol
aaa
in
mov
xchg
lcall
mov
testl
lods
es
fnstenv
ret
xor
adc
dec
jg
dec
or
mov
loop
mov
inc
fadd
mov
jl
adc
ljmp
ror
or
lds
outsl
out
iret
jl
decl
stos
or
fisttpl
xor
fcom
pcmpeqw
pop
movsb
sbb
je
mov
jmp
pop
enter
inc
sbb
or
sub
mov
add
pop
insb
push
icebp
xor
dec
push
sbb
pop
jns
loopne
xchg
fcmove
xor
mov
jb
int
mov
and
cmp
aaa
loope
jge
inc
loopne
add
mov
out
add
dec
pop
test
bt
arpl
xchg
cltd
pop
movsb
das
inc
xchg
sbb
notb
test
lret
imul
and
testb
lcall
fs
cmp
mov
jmp
fisttps
cli
or
int3
loope
out
and
inc
inc
in
sbb
and
inc
je
lahf
cmp
popf
push
movsl
fidivrl
jb
xlat
sub
cmp
leave
dec
sub
jmp
cmpsb
and
pop
mov
movsl
add
mov
dec
dec
fwait
sahf
sub
pop
je
or
rclb
leave
stos
fisttpll
mov
and
push
pop
adc
out
rorl
mov
test
jno
mov
loopne
push
pop
mov
push
stos
push
pop
clc
mov
push
mov
aad
push
mov
bound
jo
dec
xchg
push
iret
xchg
and
dec
int
push
push
iret
fidivrs
cli
add
dec
imul
mov
scas
cmp
mov
movsb
dec
shrb
repz
mov
dec
lea
mov
ret
xchg
test
pusha
stc
xchg
jp
mov
popl
jo
mov
dec
popf
sti
or
iretw
adc
cmp
sub
movsb
cmc
and
das
lcall
mov
add
xor
jmp
popf
adc
sbb
ljmp
add
or
add
js
dec
sub
mov
hlt
cmp
outsb
scas
sti
outsb
sbb
rol
xor
scas
push
aam
jbe
popa
js
pop
into
sbb
jmp
push
add
aam
cltd
mov
scas
test
mov
xor
push
jbe
lock
adc
cmp
data16
and
cmp
jecxz
jg
xor
mov
lods
mov
lcall
pop
mov
adc
inc
sbb
lds
jecxz
cmp
aaa
cmp
outsl
call
scas
and
sub
and
xchg
sub
cs
aas
out
jo
sbb
push
dec
push
mov
movsl
rcrb
fstps
hlt
fisubs
fiadds
lds
test
aad
or
jmp
and
in
ja
mov
cmpsb
inc
xlat
cmpsb
shll
pop
and
cmp
mov
cli
lea
shrb
mov
sub
pop
jnp
adc
jle
repnz
dec
enter
call
inc
cmp
dec
mov
lods
mov
out
adc
dec
or
sbb
and
sti
cltd
test
lds
out
icebp
es
jo
sub
cs
iret
cmp
jge
mov
in
je
scas
or
xchg
mov
adc
enter
shll
dec
xchg
sub
mov
cltd
pop
mov
testb
xor
xor
sbb
int
xchg
and
lock
pop
jo
test
test
cmp
jno
test
cs
insb
dec
jmp
xorb
std
sub
mov
sub
mov
icebp
xor
aam
push
xchg
cmp
cmpsb
testb
xchg
je
sub
mov
adc
testl
inc
add
jns
in
mov
js
shrl
mov
stos
fnstsw
pop
aad
je
inc
xor
inc
push
xor
sub
pop
inc
mov
int
jecxz
pop
dec
ret
jmp
jle
push
jge
pop
clc
decl
push
js
lahf
bound
cltd
mov
mov
sarl
shrl
cltd
xchg
in
in
add
and
imul
test
fst
or
decb
pop
gs
hlt
jns
jbe
fs
jle
cld
push
xchg
inc
and
cmp
add
or
mov
pushf
sbb
fcompl
std
cmp
inc
lret
mov
or
inc
test
aam
xchg
cmpsl
mov
mov
fcmovnu
jmp
nop
scas
loop
mov
or
mov
or
mov
or
add
inc
push
push
or
test
mov
mov
mov
lcall
es
or
add
imul
adc
inc
shlb
insb
sbb
mov
sub
xlat
inc
mov
aad
pop
pop
fidivrs
call
lds
jo
xchg
and
adcb
xorl
jno
push
sub
mov
bound
mov
movsb
aam
cmp
fimull
test
ret
loopne
outsl
mov
push
dec
push
mov
inc
rorb
es
movsb
push
lods
add
sarb
lods
push
xchg
jnp
aas
loop
imul
jmp
cmpsb
sbb
xlat
or
sbb
clc
adc
out
jnp
psadbw
das
data16
xchg
jmp
shlb
mov
sbb
int3
stos
and
lods
adc
pop
ja
popf
sbb
cmpsb
sbb
cmc
flds
frstor
cmp
xor
push
mov
inc
adc
clc
popl
cltd
fnsave
dec
daa
js
dec
fldt
outsb
xchg
mov
out
divb
fadds
xchg
xor
or
inc
in
fdivp
test
push
hlt
lock
testl
xchg
pop
arpl
add
mov
imul
pop
popf
push
in
roll
inc
add
pop
cmpsl
movsb
mov
mov
imul
push
pop
push
jbe
mov
ds
cld
dec
ja
sahf
testb
das
inc
fsub
inc
dec
and
leave
mov
mov
arpl
cmp
lret
fnstenv
dec
out
xchg
nop
out
out
iret
pop
cli
pop
adc
out
mov
imul
aad
test
sub
jg
add
js
lods
and
jns
icebp
sahf
into
nop
lods
imul
dec
pushf
pop
es
cmc
daa
sbb
jmp
jg
sbb
jb
and
ds
xchg
mov
sub
inc
fs
sarb
push
imul
xor
dec
adc
push
ds
mov
pop
mov
jae
clc
push
push
push
jno
dec
sbb
arpl
addr16
jl
mov
mov
mov
imul
loop
xchg
leave
enter
test
cmp
cmc
push
mov
lahf
cmc
in
ss
rcrl
popa
or
push
test
scas
outsl
bound
pop
pop
xchg
and
movsb
mov
popa
cli
xor
mov
mov
shrl
dec
insb
mov
xor
or
jge
bound
pop
mov
insb
or
mov
rcr
popf
insb
sbb
leave
inc
aas
mov
push
in
or
push
aam
out
jmp
stc
cmp
cld
mov
data16
sti
and
data16
xlat
adc
in
std
cmp
push
mov
pop
or
shll
stos
test
test
jg
push
xor
int3
movsb
or
shrl
pop
xchg
mov
sbb
dec
cmp
movsl
or
shrb
push
stos
icebp
divb
cmp
or
pop
inc
repnz
out
and
sbb
popf
lods
lods
jnp
fsubs
push
push
inc
dec
mov
lock
stc
fidivrl
fnstcw
popa
inc
das
or
push
enter
les
fldl
add
inc
jae
jno,pt
dec
pop
pop
and
inc
out
jnp
in
cmp
addr16
shr
jge
addb
mov
pop
js
lret
mov
pop
ljmp
lret
sbbl
addr16
fadds
stos
push
mov
loopne
loop
push
pop
bound
or
mov
mov
imul
lret
cmp
leave
pop
loopne
addr16
data16
pop
dec
inc
mov
repz
out
pop
mov
pop
adc
add
fdivrl
leave
inc
cmpsb
push
outsb
cmp
push
cwtl
adc
jmp
cmpsb
arpl
jle
imul
or
dec
mov
frndint
jmp
sub
dec
movsb
sti
test
cmp
movsl
push
and
movsb
pop
in
ret
int3
push
sbb
inc
adc
in
adc
outsb
mov
movsb
cs
xchg
or
mov
cmp
daa
daa
push
add
mov
int3
sarl
mov
ljmp
mov
xchg
cltd
into
push
stos
xor
fmuls
addr16
mov
mov
repnz
inc
ja
sub
repnz
dec
movsb
stos
sub
and
jge
ss
cs
mov
aas
fs
repz
jns
das
xor
int3
cli
sub
add
adc
popf
mov
push
cmp
sbb
jmp
cmp
pop
jns
loope
lret
inc
ret
fstpt
sub
call
push
mov
cmp
bound
cwtl
jg
mov
fnstenv
repz
xchg
jecxz
jmp
fwait
aam
jbe
rorb
add
push
std
mov
jecxz
daa
mov
fstl
out
aam
xchg
pusha
sub
or
pop
fimuls
jle
mov
int
push
dec
cmp
sahf
insb
hlt
cmp
das
pop
mov
adc
adc
pop
or
addr16
pop
adc
push
mov
fidivs
loope
adc
mov
push
test
fidivl
xor
sub
jbe
in
sbb
fdivl
mov
int3
je
fmull
inc
lea
mov
out
mov
out
mov
out
xchg
sub
xchg
nop
push
fmull
xor
xchg
sub
push
pop
dec
fnstenv
or
adc
mov
cmp
sub
aad
add
cmp
rorl
pop
leave
push
popa
pop
jmp
or
add
sub
test
test
stc
jmp
add
xlat
ja
or
adc
faddl
xor
clc
mov
jecxz
pop
sbb
das
loop
imul
mov
dec
scas
aaa
aas
mov
loop
out
lock
aad
or
mov
cwtl
jmp
or
fistps
xchg
es
fiadds
inc
jo
hlt
xorb
scas
inc
pop
cli
imul
sbb
xor
mov
adc
mov
mov
popa
pop
xchg
or
xchg
ja
mov
or
jo
fistps
add
fsubrl
in
mov
out
arpl
cmp
sbb
and
pop
pop
push
fimuls
ja
arpl
cmpsl
popf
cs
aas
inc
push
inc
lock
imul
idivb
mov
xchg
jo
das
push
and
out
les
xchg
jae
js
sar
pop
imul
xchg
gs
or
fnstsw
test
jp
pushf
cmp
jne
or
pop
fdivs
icebp
ds
or
mov
add
push
inc
loopne
fildll
outsl
in
xor
jecxz
cli
fcoms
or
mov
lret
adc
dec
push
jbe
and
push
loopne
mov
imul
xor
out
roll
push
add
in
mov
fbstp
aas
xchg
in
lds
cmpsb
fcomip
jecxz
xchg
fsubl
mov
sti
leave
inc
stos
jne
fisttps
aas
xor
jg
xor
adc
cmp
jl
rcrl
push
rcrb
out
ret
sub
dec
jg
test
mov
lcall
rclb
jb
push
arpl
jmp
sub
xor
mov
add
or
or
enter
mov
mov
sub
mov
jle
lds
mov
movsl
xor
out
aam
push
push
cwtl
les
imul
jne
bound
cmc
push
sbb
in
in
cmp
or
or
jno
mov
std
jmp
mov
call
jg
negl
int3
movsb
xchg
sub
push
add
test
imul
mov
or
repnz
imul
add
clc
lds
xor
sahf
pop
push
test
xor
es
cli
cmc
mov
xchg
mov
in
jno
inc
ljmp
xlat
movb
mov
pop
clc
cmp
ret
mull
push
pop
sarl
jns
cwtl
in
in
cmp
mov
dec
dec
mov
sti
jno
or
mov
xchg
dec
mov
pushl
xor
and
and
sub
mov
repz
daa
cwtl
xchg
aaa
mov
js
mov
scas
mov
push
aam
jp
mov
cmp
xlat
mov
lret
insb
sub
sbb
xchg
cld
jno
in
push
xchg
mov
xchg
xchg
xchg
into
jge
fwait
addr16
push
jl
cmp
cli
adc
movsb
dec
jg
shr
mov
push
daa
ss
lret
xchg
cmp
enter
aad
dec
xchg
in
andb
test
pop
add
sub
dec
mov
inc
test
loopne
stc
jg
xlat
fcomp
leave
mov
dec
add
pop
lret
mov
mov
adc
jmp
mov
dec
daa
jge
and
dec
ja
movsb
testl
stos
je
mov
movsl
lods
fisubrs
imul
adc
test
xchg
pslld
lret
arpl
sub
std
sar
lret
std
insl
leave
aaa
in
andb
and
dec
fwait
xchg
xor
jbe
rorl
jmp
jbe
in
pop
mov
sbb
push
fbstp
and
push
and
jge
int
rorb
test
push
not
mov
loope
push
cmp
js
cmp
scas
sub
aas
add
ja
ja
sbbl
lods
add
fisubrl
orl
xchg
shrb
or
loopne
lret
jo
cwtl
sub
jge
loopne
aas
xor
repz
lock
push
add
fadds
cmp
inc
mulb
dec
jb
and
enter
scas
adc
arpl
shll
sbb
rol
cmp
and
aam
cmp
dec
ljmp
int3
scas
test
jnp
movsb
out
push
test
leave
xchg
add
xor
stos
mov
jge
pop
pop
mov
jo
inc
and
filds
sub
imul
in
enter
push
inc
popf
mov
push
ficompl
jle
inc
xchg
push
stos
lcall
shll
jns
push
stc
cld
shrb
adc
mov
pop
mov
xchg
push
loopne
or
jbe
jns
shrb
into
or
or
inc
lock
scas
sub
dec
unpckhps
loop
mov
stos
mov
xor
shrb
inc
movsb
push
clc
fs
sarl
inc
roll
add
cmp
movsl
xchg
sti
cmc
push
scas
xchg
jo
cmc
dec
sbb
xor
xlat
xchg
movsb
add
push
pop
or
imul
add
shrb
sub
adc
dec
aas
loop
and
pop
movsb
ja
jbe
cmp
xchg
mov
xchg
stos
addr16
ss
cmc
add
push
mov
cmp
sbb
in
mov
imul
lahf
into
push
shrb
mov
jge
filds
test
mov
xlat
notb
out
stos
cmp
arpl
push
rcrb
inc
push
mov
sbb
sub
pop
jmp
pushw
mov
mov
es
sub
outsl
out
add
dec
mov
dec
es
scas
lods
sbb
mov
in
dec
test
fucomp
sbb
cmp
je
aaa
sbb
push
pop
xchg
or
out
vmovss
arpl
sbb
mov
jns
out
shrl
daa
std
adc
mov
jp
and
cmpsl
cmp
aam
movsl
push
or
scas
and
sahf
sub
ja
inc
outsl
into
push
repnz
cltd
mov
mov
mov
sub
jno
stc
lahf
daa
adc
cmc
push
pop
scas
cmp
add
imul
xchg
lds
push
push
xor
and
inc
mov
test
rol
sbb
js
sub
mov
int
jg
sti
adc
jo
mov
jnp
adc
in
pop
xor
dec
faddp
jle
push
mov
sbb
xor
or
pop
inc
into
imul
push
sub
cmpl
mov
mov
rol
and
shl
xchg
mov
inc
mov
inc
sub
adc
in
rcrl
test
popa
rol
cmpsb
push
movsb
and
add
ffreep
xchg
add
out
push
mov
movl
daa
jmp
push
lods
fisttpll
mov
incl
or
jge
sbb
pushf
pop
push
mov
add
xorb
mov
test
sub
and
dec
mov
rcr
push
shll
push
out
in
or
lods
in
xor
lret
or
pop
xchg
cmpsl
mov
test
dec
sti
add
jg
mov
lods
jns
fnstsw
mov
dec
movsl
inc
int3
mov
add
and
in
mov
sub
adc
out
jns
sbb
shll
xor
outsl
imul
pop
mov
std
mov
leave
pushf
mov
fadd
lea
dec
int
clc
je
popa
jae
scas
in
adc
sub
stos
mov
xor
loopne
cmp
ds
cmpsl
or
test
mov
adc
jmp
adc
addb
and
mov
add
clc
sub
test
pop
xchg
shrl
push
das
pop
das
jle
loopne
hlt
pop
and
inc
or
xor
xchg
outsb
cmc
loopne
cs
insb
stos
mov
inc
jbe
jae
test
test
cmpsb
lock
popa
enter
ja
cmp
or
and
sub
fbld
imul
repz
jnp
adc
rcrl
dec
push
je
or
out
pop
lcall
cld
subb
shlb
mov
xor
fsubrp
add
pop
call
incl
xchg
cmp
and
arpl
push
jl
xor
fisubl
mov
daa
insb
mov
xor
cmp
addr16
or
sahf
mov
aas
push
xchg
in
cmp
push
adc
sarb
mov
jae
subl
pop
shll
push
sti
xchg
mov
push
and
mov
jecxz
pop
push
lock
mov
jns
mov
ja
mov
jbe
inc
mov
dec
mov
xor
inc
xchg
into
cmpsl
xor
mov
push
mov
sub
nop
jg
daa
xchg
mov
in
enter
in
les
cmpsb
repz
xchg
repnz
jns
pop
xor
enter
xchg
mov
and
mov
jbe
ja
dec
mov
sahf
cmp
sbb
arpl
loope
clc
pop
sti
cmp
mov
es
inc
leave
in
rorl
shr
dec
fistpll
test
xchg
ljmp
pop
je
nop
xor
xchg
ror
sub
mov
ds
std
lods
dec
push
lds
mov
adc
jne
hlt
into
adc
in
jle
cmc
into
add
js
pusha
sbb
imul
jno
jle
notl
push
or
add
hlt
and
adc
in
jne
mov
enterw
pop
out
lcall
popa
jl
add
shr
sub
out
sbb
sub
push
ret
mov
inc
ljmp
add
adc
test
enter
decl
lea
mov
mov
aaa
mov
mov
mov
inc
xchg
push
mov
test
pop
in
outsl
sub
mov
fucomp
movsl
dec
xor
mov
adc
mov
xor
sti
daa
jns
aas
push
mov
mov
adc
fimull
pop
idivb
mov
clc
es
lret
sub
fsubrl
push
jg,pt
fdivrl
js
jp
sub
stos
dec
dec
fwait
mov
or
push
insb
aas
data16
gs
test
mov
ror
in
or
pop
push
cmp
sar
add
dec
inc
cmp
stos
dec
fldt
stos
aad
mov
inc
insb
mov
sti
std
push
pop
jb
dec
add
push
aaa
rcrl
push
sub
ds
jnp
orb
xchg
sbb
xor
loop
loopne
lret
xor
outsb
fidivrs
lret
ljmp
aaa
aas
jnp
in
ja
mov
fidivl
xor
repnz
jnp
cld
scas
pop
mov
lcall
fldcw
inc
lcall
lahf
inc
cltd
inc
pop
pop
repnz
mov
loope
inc
or
cmp
mov
mov
xor
jge
and
push
lods
xor
pushf
push
sub
sahf
xor
jle
rcr
fmuls
cmc
shr
add
mov
and
add
jae
pop
push
imul
jge
and
mov
fidivl
adcb
adc
inc
adc
push
xor
jp
leave
movsl
sub
dec
mov
outsl
data16
pop
add
cltd
jb
jmp
add
mov
sbbb
inc
xor
loop
lock
sti
xchg
xchg
mov
ss
jmp
pop
and
adc
lea
jae
not
and
mov
jge
pop
in
xchg
in
sub
inc
jge
pushf
es
add
add
pop
sub
jnp
push
fstpl
pop
jecxz
pop
test
sbb
addr16
stc
mov
push
inc
dec
lret
lret
sub
les
scas
js
cmp
leave
mov
insb
imul
inc
rorb
repnz
shlb
aam
mov
fcmovb
mov
dec
push
jl
popa
xor
hlt
push
fnstsw
xchg
incl
flds
icebp
lret
mov
cltd
in
popa
jbe
dec
not
and
stos
loop
popf
xchg
adc
ret
push
xchg
mov
int
add
pusha
ja
sub
pusha
jecxz
push
push
mov
push
mov
and
dec
or
je,pn
jle
add
jp
jae
push
mov
inc
cmp
jae
orb
or
adc
cli
sbb
movsb
xchg
and
sub
add
lcall
pop
pop
cmpsb
jno
mov
aas
imul
xor
mov
outsl
les
add
ret
lea
dec
cmovne
frstor
add
cs
das
dec
movsb
push
push
outsl
mov
nop
mov
push
test
jg
lods
enter
jne
cmp
js,pt
stc
imul
cmp
dec
mov
xor
and
out
pop
sbb
xchg
or
imul
xchg
sbb
mov
lock
lahf
cmp
adc
push
jo
inc
and
fsubs
out
push
mov
cmp
sbb
cmp
xchg
rorl
addr16
repz
in
mov
add
dec
xor
mov
por
stc
xchg
fwait
cmc
leave
fsubr
repnz
subb
jl
jbe
in
insb
jb
add
sahf
push
iret
adc
sub
mov
sbb
pop
cltd
inc
sbb
orb
int
xchg
loope
lea
sbb
jmp
or
xor
sti
call
loope
xor
stos
jge
je
inc
rcr
inc
xor
test
mov
and
pop
popf
test
mov
mov
and
push
bound
test
jae
adc
jg
cmp
out
add
lcall
mov
inc
push
shl
ror
pop
cli
insl
stc
or
imul
fnsave
aad
push
adc
xorb
jae
pop
push
and
popf
lcall
inc
loopne
hlt
pop
shll
nop
stc
sbb
not
pop
sub
cwtl
lcall
and
push
dec
pop
mov
ja
popa
adc
cmp
ficoms
xchg
adc
push
aam
sub
leave
pop
cmc
push
dec
divb
inc
jno
cmp
aad
xor
lahf
pop
inc
jp
cwtl
dec
push
jl
add
adc
cmovg
xchg
call
and
xor
mov
out
and
sbb
sbb
fcomps
popf
in
out
in
es
ret
or
mov
fsubrs
jle
lock
cmp
push
dec
push
jp
jne
xor
inc
adcl
leave
push
jg
aaa
notb
ror
cmp
jns
xchg
push
cmpsb
add
jno
mov
and
inc
jle
add
add
jg
push
out
cmp
pop
dec
es
cmp
jecxz
and
cmp
out
sbb
cmpsb
out
inc
in
and
mov
cmp
rorl
shll
inc
push
stos
jnp,pt
mov
cmp
stos
pop
dec
sbb
movsl
sbb
imul
stos
mov
mov
movsl
mov
and
je
movsb
scas
addr16
sarb
test
rol
xchg
inc
loope
jmp
pop
jmp
mov
xor
push
int3
cltd
push
xchg
inc
xchg
mov
add
inc
repz
fsubs
xor
xchg
mov
cli
hlt
push
xchg
outsl
popa
or
jns
mov
out
inc
inc
stos
aas
fstl
in
lds
fadds
mov
jecxz
jp
sub
mov
mov
int3
sbbb
sub
mov
xchg
fistpll
add
loop
jae
xor
mov
movsl
lods
test
lods
fldl
sahf
fisttpl
or
int
je
pop
sub
dec
fwait
and
test
mov
fstpt
and
mov
add
and
rclb
jb
push
and
inc
jp,pt
and
mulb
je
sti
xor
cmp
scas
fldt
and
adc
lock
icebp
pop
test
mov
adc
sub
push
mov
aad
fs
sbb
mov
cli
nop
sbbl
or
punpckldq
in
bound
xchg
not
aas
std
xchg
cwtl
test
nop
subb
movsl
pop
dec
push
sbb
les
es
stos
and
mov
gs
jge
mov
push
fchs
inc
cs
stc
mov
mov
mov
jecxz
ret
jne
ja
popa
mov
pop
mov
sbb
lahf
cli
pop
fdivrl
mov
jnp
mov
fisttpl
ret
pop
add
jg
jbe
and
movsb
dec
lcall
push
ret
inc
aad
cmp
jnp
xor
push
iret
inc
push
addr16
or
adc
jge
push
mov
fs
idiv
sub
cli
cmp
jl
fildl
aad
mov
repnz
sub
scas
sub
mov
stc
aas
aam
pop
ja
push
inc
out
test
pop
and
mov
inc
pop
das
jne
adc
scas
js
aaa
outsl
xchg
loop
sub
cmpb
insl
sti
add
addb
push
je
sbb
add
xorl
pop
and
int3
mov
imul
jl
xor
cld
jl
jecxz
pop
jl
je
jae
xorb
push
sbb
pop
xlat
and
xor
adc
sub
dec
mov
xchg
lds
fwait
test
inc
pop
jbe
sub
xor
loopne
lcall
in
push
test
adcb
insb
nop
popa
jp
cmp
popa
imul
loop
test
out
add
popf
mov
push
jnp
or
xchg
dec
popa
das
dec
pop
stos
lret
push
aad
mov
frstor
pop
outsb
xlat
call
imul
sbb
push
push
cmpb
and
testl
sub
jmp
fcoms
jge
mov
cmp
cltd
fbld
cmp
inc
xor
hlt
xchg
pop
pop
fmul
fists
test
aam
loopne
pop
sarl
gs
xchg
lock
pop
loopne
ljmp
xor
clc
jecxz
dec
jmp
stos
inc
jne
hlt
pop
in
sbb
cmp
mov
cmp
je
arpl
call
fwait
add
imul
dec
jl
inc
and
lret
pop
jecxz
add
sub
push
mov
and
repnz
aas
adc
sub
lock
into
dec
push
clc
sub
cmp
inc
mov
dec
cmpsl
dec
mov
dec
push
shll
adc
aas
daa
cld
fnsave
push
jg
repz
nop
or
sub
mov
stc
call
std
inc
aaa
sahf
clc
xchg
pushf
movsl
stos
mov
clc
or
xchg
shlb
lret
jmp
pop
add
xchg
add
in
and
push
aaa
imul
leave
cmp
dec
mov
push
jbe
mov
mov
pop
mov
leave
ljmp
fs
fucom
xchg
xchg
sub
ss
js
rcr
enter
pop
cmpsl
fstpt
ror
iret
insb
cli
sar
mov
pop
stos
xchg
rolb
dec
push
in
sbb
sub
fistpll
cmp
gs
lahf
into
movsb
mov
mov
xchg
inc
into
aas
ficompl
test
icebp
repz
insl
xchg
mov
or
cltd
les
lcall
mov
ss
adc
and
and
cmc
pop
sub
mov
add
mov
pop
in
call
mov
add
inc
outsl
rcll
dec
ljmp
jno
mov
pop
in
clc
pop
arpl
xchg
jae
push
das
aam
lods
fwait
sbbl
cmp
cmp
int3
sbb
mov
pop
push
popa
pop
inc
inc
xchg
dec
mov
mov
inc
jne
mov
add
sub
mov
loope
jl
pushf
movsb
andb
mov
fnstsw
xor
in
cmp
mov
addl
push
test
adc
jp
jl
clc
inc
jae
fnstsw
out
mov
mov
inc
jbe
jl
inc
dec
jno
adc
inc
bound
inc
cmpsb
sbb
dec
push
movsb
pop
xchg
rcl
nop
fldl
in
call
ja
xor
add
push
add
cmpsb
aas
xor
mov
mov
add
sub
cmp
jae
mov
aas
in
enter
jle
and
mov
ja
aad
dec
adc
sub
cmpl
cmp
mov
sbb
int3
sbb
adc
lret
xor
scas
jl
jecxz
dec
sbb
add
sub
roll
clc
pop
dec
or
or
mov
adc
fwait
jo
mov
jge
inc
enter
sbb
pop
nop
jbe
mov
lret
xor
adc
mov
test
xor
push
jo
sub
jae
mov
mov
push
xor
add
loopne
jnp
int
popf
je
mov
sbb
jge
sbb
jmp
jmp
out
mov
pushf
or
ffreep
pop
add
adc
test
mov
fsub
mov
push
and
sbb
aaa
aad
rcr
bound
cmovp
fwait
adc
inc
dec
inc
mov
cmp
mov
mov
test
inc
xorb
adc
pushl
dec
sti
je
aad
adc
push
movsl
insb
cmpsl
sbb
inc
call
fcompl
imul
mov
mov
in
pushf
cmpl
lahf
stos
shll
and
movsl
pop
mov
mov
add
jmp
or
xchg
dec
imul
out
push
insb
inc
pop
lock
push
mov
test
repnz
fwait
push
movsl
mov
cli
scas
mov
ret
adc
stc
int
mov
jge
adc
or
adc
sub
divb
insb
push
std
stos
jae
cs
cmpsb
inc
or
vunpcklps
mov
sub
jg
das
push
push
add
dec
divb
xlat
lock
sbb
mov
push
cmp
xchg
scas
push
jl
mov
fisubrs
xor
jno
jae
mov
and
dec
es
mov
jae
pop
xchg
test
loop
xchg
sahf
or
aam
mov
adc
inc
clc
cmp
les
ljmp
cmp
test
and
movsl
stos
test
mov
and
jp
or
cmp
adc
jno
lea
stos
pop
testl
sahf
xchg
lcall
or
enter
repz
aas
loop
dec
jmp
add
fs
pop
pop
or
dec
push
xchg
push
and
bound
and
in
push
cltd
jp
pusha
mov
je
pop
fstpt
aad
and
movsl
or
dec
adc
xchg
and
fwait
fs
es
int3
and
xchg
push
jb
lahf
call
pop
aas
rclb
jbe
mov
dec
push
dec
push
std
pop
inc
xchg
jg
pop
dec
push
sub
mov
cmp
es
es
std
subb
and
out
data16
out
xchg
hlt
fstl
dec
negb
and
js
in
mov
adc
dec
test
cmp
hlt
push
dec
add
insb
sbb
int3
adc
rcrb
into
push
icebp
xor
fldt
pop
mov
scas
test
mov
add
enter
daa
and
adc
test
xchg
sbb
fstpl
jbe
int3
adc
cli
mov
adc
xchg
pop
xor
ja
sub
and
jg
xor
jb
mov
jbe
xchg
psadbw
xchg
pop
jo
sbb
ja
into
push
stc
fldt
mov
mov
dec
mov
xor
cld
push
cmpsb
add
pop
and
cmp
insb
mov
test
xchg
xchg
add
mov
iret
lea
mov
inc
jg
sub
pop
push
fisubl
test
cltd
test
dec
cmp
push
xorl
push
scas
lahf
inc
int3
fsqrt
pop
out
sbb
push
xchg
sub
sbbl
cmp
add
push
mov
mov
stos
add
push
test
test
loopne
popf
fs
jnp
xchg
push
mov
loopne
int3
dec
out
stos
cmp
dec
cmp
xor
repz
sti
xlat
ss
outsb
and
outsl
push
mov
repnz
stos
pop
mov
bound
inc
add
push
scas
or
cmp
stos
jmp
lods
fstp
outsl
nop
call
stos
mov
sub
xchg
mov
fidivl
ljmp
repnz
lock
mov
jns
sub
mov
push
sbb
xor
call
push
mov
inc
data16
jle
arpl
mov
push
aam
inc
inc
test
push
xchg
rcll
ret
mov
xor
stc
cmp
fisubl
insl
nop
xchg
mul
fcomi
adc
test
andb
ljmp
out
dec
mov
std
cli
fsubrl
jne
fisubrl
sbb
add
xchg
xor
xchg
mov
mov
push
push
nop
rol
adc
mov
lods
mov
movsl
adc
mov
jb
imul
lcall
jnp
aaa
inc
or
imul
pop
fildll
add
sub
mov
int3
jbe
mov
gs
jmp
sti
lcall
mov
xchg
loop
push
xchg
icebp
insl
lock
inc
mov
xlat
es
inc
fstps
xchg
inc
mov
in
inc
xor
sbb
mov
push
pushf
lret
test
sbb
jae
ds
pop
adc
outsb
in
testb
cmp
out
test
xchg
cmp
insl
je
adc
sub
ret
gs
pop
cmp
xchg
jg
fdivp
inc
mov
mov
add
xchg
repz
int3
push
sub
fwait
and
fwait
test
mov
test
sbb
dec
cmp
mov
into
shlb
es
flds
and
mov
lcall
cmp
mov
adc
call
mov
ljmp
movsl
push
mov
xor
lock
mov
cmp
in
stos
adc
push
jae
xchg
cmpl
and
dec
div
pop
sbb
lods
fcoml
nop
jg
aaa
test
ljmp
or
lods
in
mov
lods
cmp
mov
shll
jg
lret
mov
pop
inc
scas
lds
and
popf
xchg
into
add
adc
fsts
pop
outsb
sbb
lea
mov
xchg
out
sub
into
imul
bound
loopne
cmp
lods
lret
lret
fstps
xchg
sahf
cmp
add
addr16
std
outsb
xchg
mov
mov
lods
pop
xchg
jns
fists
xchg
mov
ret
jo
movsb
stos
pop
cld
out
insl
xchg
pushf
test
xor
popf
ja
mov
dec
lods
je
mov
lret
test
les
fldt
stc
fdivrs
rcl
subl
int3
push
or
pop
push
xchg
icebp
mov
push
adc
jmp
fwait
and
lret
pcmpeqd
jp
addr16
adc
push
insb
pop
mov
add
int3
sahf
mov
mov
adc
aaa
push
movsb
jecxz
cs
clc
and
sahf
push
call
push
or
inc
mov
test
add
fbstp
mov
mov
mov
aad
aas
jns
data16
fsts
adc
mov
adc
xchg
gs
in
mov
or
sub
inc
adc
jns
icebp
aad
out
sti
xor
adc
push
das
push
xor
xchg
js
xor
movb
xchg
xlat
fildll
mov
std
test
icebp
sbb
pop
aam
add
xchg
mov
pop
and
pop
pusha
xor
add
ss
sti
mov
mov
nop
jno
mov
out
mov
lods
xchg
jmp
sbb
sbb
sti
ss
int3
fdivr
xchg
xchg
pop
mov
pop
mov
jne
push
sub
adcl
add
mov
lds
and
lods
pop
mov
gs
xchg
jcxz
pop
sub
xor
adc
pusha
and
jp
shrl
push
sub
test
jb
fwait
push
daa
stos
and
test
inc
adc
jmp
call
pop
cmc
lea
mov
lods
push
jae
xor
dec
sub
cmpsb
fstpl
add
pop
add
cltd
xor
jge
rcl
jo
sbb
enter
imull
lsl
adc
imulb
aam
lret
mov
jmp
dec
mov
push
mov
pop
test
add
xchg
inc
loopne
aaa
add
out
sub
inc
pusha
inc
mov
mulb
jp
xor
push
sbb
xor
and
add
jmp
mov
js
popf
xor
xor
ficoml
andb
adc
cmp
jg
add
into
jmp
sub
mov
adc
leave
jnp
pop
test
dec
cwtl
add
mov
int
xor
shlb
inc
mov
loop
fistl
popf
sub
in
insb
jbe
inc
xor
and
cwtl
addr16
scas
shr
cs
xlat
imull
outsl
iret
mul
sbb
jns
wrmsr
jl
je
jae
sbb
stos
pop
out
jns
addl
inc
sub
out
outsb
cmp
js
pushf
inc
outsb
mov
sbb
xchg
xor
xchg
loopne
mov
adc
test
stos
in
and
xor
fisubs
mov
mov
sarl
mov
psubd
inc
mov
repnz
and
popa
jnp
ret
xor
and
dec
pop
imul
xor
xchg
stos
jne
cmp
dec
xor
ret
jmp
xchg
mov
sub
sub
lock
out
lds
arpl
addb
add
xor
xor
sub
in
int3
mov
mov
pop
les
mov
fcmovne
push
push
dec
insl
shll
pop
testl
imul
fldenv
movb
inc
cli
into
imul
jle
mov
pusha
aam
inc
cmpsl
into
popf
fcoml
adc
dec
movd
inc
xchg
cmp
fbld
cmp
sbb
dec
jge
std
xchg
mov
adc
stos
cmpsb
scas
jg
cmp
xlat
test
push
in
adc
fdivrl
mov
sbb
cld
mov
sahf
shrl
xchg
xor
mov
jb
mov
in
mov
sti
pop
mov
lock
push
rorl
xchg
sub
pop
pop
cmp
loope
add
xchg
or
addr16
ret
insl
fcmovnbe
aas
jbe
dec
popf
ja
sub
jne
mov
lcall
and
mov
adc
jge
movsl
not
jg
jg
adc
sbb
fwait
mov
cmpb
adcb
and
inc
cmp
push
test
sbb
inc
cmp
pop
scas
xchg
fs
mov
ret
cwtl
cmp
repz
fildl
cmc
mov
ja
and
or
dec
xor
rorb
mov
testl
sbb
insl
jae
cmp
shll
in
mov
dec
cmc
nop
push
add
pop
insb
mov
adc
inc
cmp
bound
inc
test
aam
push
leave
mov
mov
in
lea
sahf
orb
xchg
inc
mov
in
aad
inc
add
nop
js
sub
xor
rcrb
and
jae
add
or
pop
xor
imul
jmp
fsts
data16
movsl
and
hlt
mov
popa
jge
sbb
fisttps
and
jne
lea
dec
jl
lods
dec
ljmp
movsl
mov
pop
inc
push
test
or
icebp
loope
sub
cmc
je
xor
pop
hlt
inc
das
fwait
jbe
js
stc
jecxz
jo
mov
mov
sar
pop
push
fcomip
pop
lock
and
out
bnd
addr16
and
sbb
fwait
lahf
shlb
pop
repnz
adc
and
sub
sbbb
shll
xor
or
mov
xchg
mov
xchg
mov
lret
in
cmp
dec
pop
ret
mov
in
pop
lahf
pop
flds
inc
lods
ffreep
sbb
jnp
cld
cs
push
xchg
sarl
movsb
rclb
push
sti
xor
into
push
push
add
xlat
or
xchg
sub
dec
or
jbe
jge
addr16
xchg
loop
cmpsb
pop
test
add
cmp
mov
xchg
sbb
push
iret
lcall
push
data16
imul
push
je
nop
add
mov
xchg
or
dec
pop
cmpsl
sub
jne
xor
jl
inc
test
mov
push
adc
xchg
push
mov
jb
scas
dec
sbb
or
aaa
xor
lahf
mov
adcl
pop
xor
inc
push
movsb
xor
jp
andl
repnz
icebp
scas
jno
mov
fmul
pop
aam
pop
lret
inc
js
jp
aad
dec
iret
sti
movsl
hlt
enter
or
mov
pushf
notb
inc
lret
fsubrs
lahf
mov
aam
popf
hlt
push
inc
stc
sbb
sbb
mov
add
pop
in
daa
xchg
lret
jbe
xor
and
fsubrp
cmp
inc
or
rclb
arpl
out
fcomip
out
inc
leave
outsb
ljmp
and
fbstp
push
inc
xchg
movsl
mov
xlat
adc
in
xchg
pop
jo
sub
lods
dec
mov
movsl
orl
dec
xor
scas
cmp
sbb
ficoms
or
pop
daa
adc
adc
stc
or
adcl
das
cmp
pop
cmp
push
xor
and
arpl
movsl
fwait
mov
popa
push
mov
lods
and
cmp
in
dec
call
mov
add
outsb
push
push
cmpsb
xor
inc
sqrtps
inc
inc
adc
shl
dec
push
pop
stos
jne
in
mov
inc
ljmp
xor
fcmovnbe
inc
jp
mov
pop
je
out
cmpsl
imul
pusha
dec
int3
push
and
push
repnz
popf
or
lds
push
xor
inc
out
xor
icebp
addr16
fimuls
stos
or
in
outsl
sbb
repz
fnstenv
sbb
dec
je
pop
andb
lock
popa
fsts
lea
test
jb
rolb
pop
pusha
ljmp
push
xchg
les
mov
stc
out
add
ficomps
rcr
sub
xchg
dec
add
das
lock
test
sub
and
fisubrl
dec
xchg
loop
repz
in
dec
xor
xor
data16
stos
dec
sbb
sarl
pop
fldcw
fists
sahf
fcomps
in
je
sti
or
mov
xchg
jge
outsb
or
mov
fstl
addb
cmpsb
clc
insb
ret
ljmp
lret
scas
xor
fcomip
xor
aas
dec
stc
daa
inc
out
pushf
aad
pop
call
mov
mov
jl
mov
push
push
add
imul
popf
outsl
cs
das
mov
aaa
pop
gs
es
out
mov
sti
mov
sbb
call
mov
cmp
lret
test
ljmp
in
adc
mov
in
repz
or
adc
ja
dec
in
dec
xchg
subb
and
inc
cmpsl
adc
sub
aas
movsb
lret
push
rolb
jns
ja
pop
call
sub
in
fisubrl
add
std
jl
jns
xor
inc
not
in
lods
cmp
mov
stos
dec
mov
aam
sbb
adcl
lcall
shrl
jl
movsl
lock
cmpsl
es
lret
rcl
mov
and
popa
sub
dec
iret
popl
pop
or
stc
jno
jp
stc
push
int3
arpl
in
jns
mov
pop
shrl
xchg
js
testb
fisttpl
es
mov
pop
cmp
dec
fildl
nop
xor
movsb
inc
aam
xchg
test
lret
dec
aam
fs
add
mov
cmp
sahf
adc
mov
es
int3
mov
mov
aad
xor
jae
in
mov
push
jo
mov
add
movl
cmp
mov
xor
jae
nop
sub
pop
cmp
loop
cmp
add
sbb
cwtl
arpl
insb
fisubrs
mov
in
jo
daa
sub
fimull
inc
pop
xchg
pop
into
add
std
jecxz
or
pop
rorl
push
jmp
data16
andl
dec
push
dec
loope
cmp
test
cmpsl
subb
jle
ret
jl
pop
adc
sbb
jmp
mov
mov
cmpsl
inc
adc
sub
test
or
xchg
popf
nop
les
lods
nop
xor
mov
dec
mov
out
into
jne
icebp
pop
movsb
adc
cmp
jle
inc
divb
mov
in
loope
ja
jmp
popf
or
or
int3
pusha
xor
sbb
sbb
mov
jle
int3
mov
pop
add
jne
mov
push
aam
mov
xchg
dec
clc
and
and
xor
and
and
je
ljmp
mov
cmc
incb
gs
mov
ja
dec
mov
insb
sbb
mov
jmp
pop
inc
cmp
mov
jne
mov
dec
clc
std
fbstp
xchg
insl
nop
and
das
adc
lds
xor
mov
lods
lds
xor
dec
mov
popf
pop
fcoms
sub
rorb
jge
lods
pop
jl
sbb
in
sub
fldl
push
das
test
movsl
lret
adc
cmc
mov
je
jecxz
stos
push
dec
out
mov
rcl
mov
xchg
pop
sub
mov
add
test
adc
rolb
imul
loopne
xorb
orl
aaa
repnz
std
add
loop
jmp
jle
scas
pop
and
mov
dec
jmp
cltd
pop
xchg
sbbb
mov
andb
test
mov
cmp
lret
cli
cmp
inc
insl
jp
pop
lock
inc
clc
xlat
movsl
fstps
scas
andl
mov
test
jmp
mov
xchg
insl
arpl
xor
mov
gs
cs
mov
mov
lahf
xchg
int
mov
mov
xchg
mov
jbe
lahf
mov
insl
cmp
inc
sbbb
or
xchg
iret
ret
movsl
inc
sti
in
leave
jl
jne
jo
xor
subb
dec
out
push
dec
mov
movsl
mov
push
lods
jnp
shll
cli
ja
leave
fisubs
sbb
imull
mov
or
xchg
orb
push
insl
mov
xchg
and
fisubrl
out
in
fbld
loope
xchg
pop
add
cld
subb
into
jecxz
jo
mov
sbb
into
pushf
dec
cld
test
jp
fldl
dec
push
shrl
pop
scas
lahf
testb
xor
or
fwait
inc
dec
and
insb
in
push
jle
fildll
aad
mov
push
loop
cmp
pop
cli
movsb
pop
xor
sti
and
leave
loopne
lock
dec
push
push
int
call
lods
lods
stos
in
cmpsl
xor
outsl
sbb
iret
xchg
or
vpminub
mov
push
xchg
inc
cltd
lods
loope
movsl
jmp
xchg
dec
xor
rorb
and
sahf
jae
xor
or
shl
and
mov
mov
xchg
in
xchg
sarl
cmp
test
jmp
push
cwtl
or
pop
arpl
and
outsl
hlt
or
xor
mov
pop
mov
js
leave
stc
iret
mov
jecxz
pop
in
sub
mov
jp
inc
add
test
cmp
faddp
pop
or
into
sahf
movsl
push
dec
insl
fbld
push
adc
fsubrp
dec
dec
pop
repz
pop
pop
inc
cmpb
addr16
das
sbb
mov
and
cmc
add
into
leave
cltd
bound
pop
xchg
push
icebp
mov
frstor
popl
int
push
adc
mov
sbb
out
xchg
sbb
xchg
push
js
cmpsb
sbb
stos
xchg
inc
mov
jnp
sbb
push
and
dec
cmp
adcb
push
jne
imul
cmpsl
sbb
cmpsl
call
out
or
sub
leave
xor
xor
pusha
clc
jl
out
adc
add
push
lods
pop
mov
stos
inc
mov
ret
out
and
mov
dec
call
stos
mov
imul
in
xchg
lea
and
sub
mov
notb
inc
pop
push
push
imul
lret
xchg
or
out
sub
pop
cmpsb
data16
dec
paddb
aad
jp
int3
js
stos
xchg
jle
sub
fstl
push
xor
imulb
leave
pop
jg
xor
cmp
sbb
enter
outsb
add
int
aas
sti
out
aad
jge
cli
fcompl
loope
std
iret
sahf
popa
cmpsb
lods
mov
js,pn
ret
xor
lret
push
mov
sbbb
sbb
sub
sub
xor
outsl
divl
and
sbb
fisubl
iret
sub
ret
dec
stos
cli
xchg
int
sbb
jbe
adcl
leave
dec
add
pop
inc
dec
adc
sub
fdivrs
in
lret
inc
lcall
add
imul
pop
push
fcmovu
in
xor
scas
stc
fisubrs
adc
out
and
fsubl
mov
pusha
ljmp
jge
les
dec
lret
mov
xchg
add
jae
mov
idivb
xchg
shl
jns
inc
sti
lahf
in
orb
and
push
sbb
dec
jne
rcrl
sub
ds
push
test
xchg
push
into
jl
lods
cmc
fwait
in
rolb
cmp
jge,pt
dec
xchg
push
mov
shrl
imul
and
test
or
movsl
add
dec
pop
jp
jno
loope
and
loop
inc
in
iret
test
imul
mov
cmp
sub
jmpw
ljmp
jb
lods
mov
push
popa
hlt
pop
sub
add
xor
rcr
icebp
test
push
outsb
repz
sbb
mov
popf
pushf
xchg
jns
roll
stos
jecxz
sbb
inc
add
adc
in
pushf
scas
in
js
pusha
sub
aas
es
movsb
or
inc
mov
clc
adc
mov
lcall
dec
mov
shlb
subb
movsb
xlat
gs
jle
lea
das
test
dec
adc
and
jno
pop
cmp
aaa
pop
mov
cmp
jge
lret
jae
in
cmp
mov
push
iret
cmp
mov
stc
faddl
loop
xor
sbb
fs
push
xor
fldl
imull
cmp
aam
std
leave
pushf
cli
sbb
mov
pop
sub
xchg
mov
adc
xor
mov
jp
stc
inc
fwait
sbb
in
inc
clc
outsl
popf
shrl
jp
lea
sub
pop
jecxz
fidivl
das
pop
cmp
movsb
mov
pop
repz
push
pop
mov
xor
jae
clc
add
mov
cs
push
mov
or
cmp
and
adc
mov
cmp
mov
movsb
push
dec
jmp
and
scas
nop
xorb
pop
inc
xchg
sbbl
insb
xchg
int
mov
js
pusha
lahf
xchg
mov
pop
mov
shll
rcll
cmp
inc
js
mov
adc
mov
pop
ret
lahf
push
or
cmp
jne
js
call
std
mov
lret
idiv
push
jno
aad
lea
xor
call
ds
jmp
pop
sbbl
push
sarb
sarl
and
mov
lods
movsb
stos
adc
pop
cmp
xchg
mov
add
hlt
loope
and
clc
insb
stos
cmc
in
mov
sbb
and
out
pop
mov
lea
pop
adc
lcall
outsl
stos
ss
inc
aaa
dec
fsubs
xchg
scas
xchg
cltd
popf
sarb
mov
sub
stc
test
loope
xor
mov
ret
and
inc
ret
lods
mov
cmpl
cmp
test
or
cli
repz
jge
pushf
sarb
push
out
loopne
iret
inc
lock
push
push
cwtl
or
cmp
jmp
inc
fdivr
stos
outsb
jg
add
leave
xchg
aas
repnz
xchg
inc
cltd
xchg
out
jno
sub
mov
mov
pop
sti
jno
out
imul
iret
adc
mov
sbb
dec
pop
out
adc
orl
sub
bound
mov
stc
or
dec
jne
clc
loope
push
add
in
cmp
sbb
jge
jo
mov
jne
stc
xor
push
dec
and
push
scas
jne
in
dec
push
rep
clc
test
aam
and
into
lcall
subl
sbb
mov
das
insl
or
pop
jmp
mov
std
mov
cmp
movsb
mov
int3
cli
sub
lret
cmp
in
movsb
adc
cltd
ret
imul
sahf
sub
fwait
in
jno
mov
adc
dec
sub
dec
ja
rolb
cwtl
inc
les
clc
push
arpl
xor
xor
test
test
or
adc
and
ss
and
push
and
or
es
cmp
adc
shr
xor
mov
in
ficomps
in
sub
mov
xchg
mov
in
test
fists
and
jecxz
dec
xchg
cmp
imul
call
mov
leave
shl
daa
inc
inc
bound
xchg
xchg
iret
mov
out
sbbl
jns
jecxz
fistps
cmpsb
mov
jae
jge
add
inc
inc
sbb
add
mov
adc
js
addr16
mov
jo
mov
test
stos
xor
sub
cmpsb
pop
cli
xor
mov
adc
jl
add
imul
insl
enter
fs
rorb
push
mov
shlb
mov
xchg
inc
stos
or
mov
inc
or
faddl
mov
je
xor
cmp
or
xor
test
fisttpll
inc
sbb
imul
jmp
xlat
popf
xchg
outsb
call
jp
test
in
imul
fdivrl
and
fmul
outsl
in
int3
sbb
or
inc
orb
sbb
les
adc
outsl
jae
fisttps
push
rcrb
mov
jp
mov
repnz
cmp
mov
xchg
mov
shrb
sbb
dec
push
jae
das
repnz
cmp
adc
xor
jle
ret
xor
and
push
xchg
loopw
fsubl
int3
ljmp
popa
das
cmp
cli
fcomi
mov
mov
mov
out
jp
mov
jnp
std
adc
movsb
push
add
pusha
add
movsl
add
shll
pop
dec
test
jecxz
mov
mov
xchg
cmpsb
cmp
xor
rorb
cmp
mov
movsl
xchg
ljmp
add
adc
ds
inc
sahf
dec
dec
imul
sbb
pop
roll
xor
dec
or
add
and
mov
jmp
inc
loop
fcomps
dec
jbe
xchg
ficompl
mov
jg
cmpsb
dec
movsl
fisttpl
cmpsl
and
and
and
shl
and
jecxz
js
pop
scas
sub
xchg
mov
lret
sub
aam
mov
inc
aam
mov
bound
inc
rcl
pop
sbb
lcall
xlat
test
dec
sub
pop
repz
sbb
jb
stos
fcompl
pop
cmp
ficomps
push
mov
or
push
nop
mov
arpl
cmp
mov
scas
test
inc
jmp
pslld
inc
fisubl
inc
aad
scas
jmp
call
mov
sbb
fwait
je
inc
lock
sub
dec
cli
lret
jp
out
mov
xchg
push
cli
mov
int
lret
repnz
mov
repz
into
add
add
adc
fsubrs
bound
add
add
inc
mov
mov
pushf
mov
ja
xchg
gs
or
fs
xor
and
jno
sbb
icebp
xor
repz
xor
shlb
cmp
xchg
dec
mov
movsb
push
pop
ja
mov
jno
shlb
mov
and
je
xchg
jecxz
jb
pop
sti
dec
inc
ret
sahf
inc
or
ret
cs
mov
jge
ret
jg
mov
in
xchg
add
cmp
pop
xor
sbb
cmp
add
fmuls
mov
sbb
cli
pop
rorl
jo
push
fldenv
aas
inc
mov
mov
aaa
cs
icebp
and
or
dec
sub
ljmp
jecxz
in
ret
lds
or
dec
jno
decl
xchg
fisttpl
add
loopne
pop
hlt
cmc
loop
test
ret
and
mov
cwtl
jae
in
das
and
pop
sahf
popf
clc
ficoms
mov
icebp
out
movsl
push
mov
in
xchg
out
std
ror
adc
outsl
pushf
out
pop
cli
xchg
xor
jo
in
int
ret
cmc
insl
adc
push
lock
and
daa
jns
inc
sub
and
add
mov
mov
scas
stos
sbb
inc
sahf
or
dec
inc
lods
adc
hlt
sbb
mov
int3
fsubrl
pop
pop
lcall
mov
pushf
test
mov
rorb
sub
cmp
test
pop
pop
or
xchg
sub
xchg
pop
xchg
push
mov
lods
stc
or
xchg
xchg
cmp
cld
cmc
in
out
xchg
sahf
and
xorb
or
cmovae
jo
loopne
fisubs
xchg
vmwrite
mov
enter
push
lods
push
jb
imul
inc
mov
lds
xchg
insl
daa
sub
push
sub
mov
jle
or
inc
test
fsubrs
loop
cs
mov
inc
jl
mov
xchg
mov
movsl
sahf
inc
add
test
popa
loope
xchg
or
sub
adc
test
repz
pop
test
cmp
divl
add
mov
xchg
sbb
std
jns
loope
or
imul
pop
std
lcall
mov
xlat
push
das
and
fisttpll
sarl
xchg
adc
iret
icebp
popf
xchg
hlt
sahf
cmovb
lds
cld
sti
repz
push
xchg
push
jnp
pop
into
test
and
adc
fmull
test
mov
jbe
std
xchg
sub
and
cmpsl
pop
add
icebp
jmp
inc
cs
call
call
mov
icebp
imul
ret
sbb
jge
cmp
and
lret
push
cmc
imul
sub
jo
jae
and
test
fidivl
cmp
loopne
xor
push
cmpsl
cmc
int3
jp
stc
jae
push
cli
push
inc
int
add
xchg
dec
sub
dec
and
dec
xlat
add
inc
mov
mov
xchg
bound
and
pop
or
gs
pop
insb
stos
jg
jle
repnz
push
and
ret
pop
pop
mov
adc
sub
xchg
jmp
add
mov
inc
ret
rorl
xchg
jecxz
mov
mov
orl
les
pop
mov
pop
idivl
add
and
sarl
mov
mov
or
mov
cmc
xchg
pop
lds
jbe
pop
fsubrs
cld
dec
sbb
adc
lods
jl
xchg
push
sbb
sbb
pop
stos
stos
push
sub
fsts
divl
jge
loope
dec
nop
jbe
push
adc
adc
jl
sub
lock
loope
stos
cltd
pop
xor
cmc
lods
push
mov
push
das
mov
in
enter
mov
js
dec
jae
mov
mov
or
jge
loop
mov
cmpsb
outsl
or
push
jp
insb
mov
cltd
lcall
xchg
repz
fidivl
int
in
imul
out
dec
add
insb
dec
inc
js
lahf
pop
cmp
hlt
xor
leave
out
push
push
lods
cmp
lods
mov
push
movsl
shrl
aam
mov
xchg
imul
pop
sub
popa
xchg
jmp
inc
sub
in
popa
outsl
dec
sub
clc
aad
xchg
xchg
dec
inc
sbb
out
fildl
dec
popf
ljmp
mov
push
xor
xchg
inc
xchg
clc
pop
stc
sub
mov
pop
jp
lock
jle
push
adc
or
inc
add
xor
lods
les
push
dec
or
insl
mov
int
and
push
push
ds
imul
mov
sub
jmp
push
sti
hlt
mov
inc
std
lds
adc
sbb
aas
sbb
sub
aaa
pushf
into
call
add
inc
jb
or
mov
jecxz
inc
sub
sub
jmp
mov
cmp
fsubrp
arpl
fsub
dec
pop
cmc
xchg
sub
jmp
and
sbb
cmp
call
mov
sbb
rcrb
cmp
fs
jmp
in
jg
push
mov
lret
cltd
xor
sub
adcl
pop
repnz
loop
jbe
jbe
xchg
cmp
scas
mov
sub
inc
pop
xor
mov
addr16
sbb
sbb
or
in
inc
icebp
mov
or
dec
aad
add
mov
mov
mov
add
aad
in
addl
cli
xchg
pop
imul
pop
sbb
jecxz
sub
int
test
cmp
dec
inc
lcall
fidivrl
ret
adc
cmpsl
adc
inc
inc
push
adc
and
data16
jae
movsb
mov
dec
xchg
out
mov
mov
sub
add
cmp
je
shrl
lcall
push
mov
cld
shl
cld
and
sahf
or
inc
jl
repnz
and
cmp
fstl
decb
ja
and
fimuls
repnz
xchg
dec
repnz
mov
or
movsl
cmovo
fs
sbb
lret
shll
xor
dec
jmp
and
jp
inc
sub
cs
insb
sub
ror
and
sahf
jb
insl
push
lcall
cmp
es
inc
aam
in
testb
push
pop
cld
lock
jb
dec
xor
pop
out
dec
mov
nop
add
jl
test
loopne
cltd
xor
push
cs
or
xchg
pusha
outsl
xor
xchg
fcmovnbe
mov
xchg
sub
adc
fs
pushf
ds
shrb
or
and
push
ret
sbb
into
das
cs
orb
ljmp
xchg
sbb
shll
movsb
xchg
dec
inc
dec
jmp
fsts
cwtl
pop
outsb
mov
fmuls
inc
push
adc
cmc
mov
cmp
mov
sub
xchg
aas
and
popf
adc
inc
aaa
xor
cs
push
mov
xor
test
xchg
cmp
add
fs
pop
dec
mov
mov
sbbb
lcall
and
jle
aaa
rol
out
pushf
repz
stos
xor
aad
dec
and
adc
mov
sbb
iret
jle
fucom
mov
pusha
dec
out
jle
arpl
scas
mov
jp
pmovmskb
mov
aad
and
das
push
and
cmpsb
push
insl
cmp
out
test
jp
jge
mov
pop
xchg
lds
xchg
push
mov
mov
or
aas
sub
shlb
cmp
ss
cmp
sub
or
mov
cmp
inc
add
xchg
jp
repnz
xchg
cmp
into
add
lahf
lock
pop
mov
fmull
mulb
cs
data16
jmp
loop
or
or
ss
imul
push
jl
into
fildl
fst
mov
mov
mov
gs
and
pushf
push
xchg
repz
jae
or
xchg
sbb
mov
sub
adc
push
imul
adc
xor
dec
lods
push
cmp
addl
xchg
xlat
or
aad
loop
in
or
sub
mov
es
das
daa
ljmp
sbbb
testl
insb
dec
ja
push
jne
ljmp
sub
insb
xchg
dec
add
rol
js
pop
xor
jg
inc
cmp
adc
mov
insl
push
jp
rcrb
stos
les
mov
imul
ja
enter
jne
mov
and
xchg
mov
push
pop
fcoml
loope
dec
fdivs
ja
filds
inc
sarl
in
add
movsb
or
pop
popa
mov
flds
sbb
sbbb
aas
cmp
enter
add
xlat
inc
into
ret
cs
addr16
cwtl
decl
xor
aad
push
cmp
sti
and
repnz
adc
enter
mov
xchg
mov
inc
repz
pop
lret
lea
add
iret
cs
dec
mov
lret
sbb
imul
or
xchg
mov
outsb
dec
jmp
lds
dec
insl
fs
insb
mov
inc
insl
cmp
rcll
ss
xchg
cld
call
mov
or
cli
and
xor
and
cmpsb
mov
push
dec
jae
pop
jmp
aad
adc
in
adc
jmp
test
or
jae
out
dec
mov
fwait
push
je
leave
iret
push
or
sbbb
vpunpcklqdq
icebp
mov
ret
sbb
dec
cs
xchg
xor
pop
gs
movl
adc
mov
and
cmp
ret
dec
int
xchg
popa
sti
mov
lcall
or
cli
aam
sub
mov
and
shll
nop
fcomip
jb
out
dec
push
push
ss
dec
loop
fcomi
stc
cmp
pusha
adc
imul
fidivl
sub
jecxz
insl
mov
inc
inc
fildll
jae
dec
and
pop
not
push
push
scas
dec
dec
add
dec
stc
push
bound
cmc
xchg
mov
fwait
dec
xor
mov
sub
dec
imul
insl
push
mov
mov
jne
and
cmc
stc
push
pop
sbb
xor
mov
and
push
sub
test
mov
les
dec
iret
scas
in
sbb
pop
gs
mov
lahf
es
jbe
xchg
xchg
and
jne
fdivl
sub
mov
popa
sbb
frstor
leave
outsb
add
out
mov
add
cmp
cltd
sub
popf
inc
scas
cmpsb
add
ret
sbb
test
fsubrs
ljmp
adc
rcr
sbb
mov
aas
xor
out
adc
popa
in
cli
inc
cmp
dec
inc
pop
jo
sub
lahf
add
and
fcmovbe
rcrb
nop
mov
push
gs
push
inc
pusha
idiv
gs
jg
inc
sub
sub
jg
add
pop
inc
inc
and
add
rorl
data16
dec
push
add
dec
mov
add
xlat
cmp
sbb
cmc
cltd
das
aad
lods
roll
sbb
and
jo
jb
enter
fs
dec
lds
inc
ror
and
js
mov
inc
int
enter
and
loop
out
push
or
pop
mov
push
cmpsl
mov
loope
mov
jae
imul
int
sub
pop
stc
gs
bound
push
and
mov
mov
push
clc
inc
jecxz
ljmp
in
les
test
jp
sbb
bound
imul
repnz
and
cmp
pop
sbb
add
jae
cmpsb
pop
fcomip
mov
or
pop
mov
lret
mov
mov
push
lahf
stos
jl
mov
adc
fstpl
ljmp
ds
sbb
pop
jns
dec
outsl
inc
jecxz
rclb
scas
mov
lahf
adc
imull
int3
add
shl
cmp
jmp
ds
in
add
fxch
mov
test
jp
jl
mov
push
fcompl
out
ret
pop
outsb
testl
xchg
ljmp
repz
rcrb
mov
dec
mov
inc
adc
sahf
mov
push
out
sub
scas
push
jno
mov
lret
pop
mov
cmp
adcb
fnstcw
lds
aad
cwtl
popf
arpl
pop
mov
mov
cmp
stc
iret
inc
call
ss
outsl
cld
mov
adc
aad
sbb
dec
and
jb
pop
push
push
mov
mov
fcos
mov
pop
aad
popf
jb
cmp
xor
lds
and
dec
jne
sub
aas
dec
in
mov
shlb
xor
cld
pop
lods
pop
fnstsw
dec
stos
ljmp
xor
repz
in
add
roll
je
sarl
mov
inc
dec
mov
nop
stos
push
imul
insb
nop
push
aad
jmp
xchg
iret
lock
push
jg
popf
xor
inc
cmc
iret
dec
insb
pop
add
or
pop
das
mov
addr16
in
in
inc
xchg
cli
dec
and
or
add
repnz
dec
clc
cld
dec
jp
les
cmc
lret
xchg
repz
stos
std
sti
call
adc
pop
jnp
xor
test
mov
mov
ret
les
icebp
adc
sub
fistps
insl
mov
xchg
aaa
orl
out
cld
xchg
mov
lret
ret
mov
fsubrp
pop
mov
in
mulb
scas
ljmp
mov
mov
adc
sub
sarl
or
adc
jp
in
fnstenv
xor
jo
jns
xor
in
inc
add
dec
insb
in
sarb
jbe
testb
leave
mov
xchg
shrb
mov
sub
mov
xchg
push
dec
push
adc
sub
dec
cltd
mov
pop
push
sub
fucomip
roll
push
pop
sbb
sub
mov
pop
add
addr16
mov
addl
lahf
dec
into
pop
adc
shrl
movsb
loope
imul
lock
add
jns
aaa
aas
lods
sub
mov
sarb
in
enter
cmp
pushf
pop
inc
ljmp
and
xor
ds
outsb
cmpsb
xchg
xor
rcrl
mov
add
fnsave
wrmsr
in
outsb
fldt
in
popf
clc
inc
cmp
es
push
mov
pop
xchg
dec
sbb
popf
cmpl
imul
in
rorl
cmp
push
dec
lods
and
aad
cmp
into
or
inc
pop
aaa
jecxz
cmp
dec
and
imul
pop
add
inc
dec
call
pushf
xchg
mov
or
add
adc
into
push
out
dec
jo
enter
cmpsb
cmp
lds
outsl
das
inc
out
dec
mov
push
cmpsl
jg
fnstcw
jle
into
mov
aaa
adc
inc
jp
push
push
pop
cltd
cmp
leave
pushf
fsubr
js
leave
iret
xor
jne
inc
lret
cld
mov
out
fidivs
icebp
push
repnz
mov
xchg
out
popf
cltd
mov
test
sub
push
mov
lods
test
add
jle
outsl
data16
in
mov
repz
add
inc
inc
mov
fmul
pop
pop
jo
fidivrl
cltd
mov
out
aad
sbb
and
mov
test
pop
test
and
test
push
mov
push
test
out
xchg
mov
mov
popa
out
aad
add
inc
sbb
pop
fsubr
ja
int3
outsb
test
mov
test
in
cmpsb
add
dec
push
scas
fisttps
pop
cmp
or
into
shrb
ret
ljmp
or
sub
pop
orb
push
cwtl
shlb
sub
jo
test
lea
jp
pop
es
mov
sti
lahf
flds
mov
cwtl
aam
mov
push
sti
test
loop
incb
int3
push
inc
pop
sti
inc
mov
adc
mov
aad
xlat
ljmp
xchg
sub
add
mov
push
out
aas
stos
jge
movsl
movsl
dec
push
push
jbe
adc
jg
aas
push
add
shrl
movsl
push
test
xor
push
sbb
or
movsl
sbb
daa
and
rcll
rorb
xchg
test
test
jo
lds
mov
popf
std
into
je
ret
dec
in
daa
movsb
mov
and
pop
dec
pop
inc
scas
push
xor
jbe
push
cld
fs
mov
push
repz
sbb
xor
mov
enter
sub
stc
mov
in
sub
fcmovne
int
fdivr
sahf
mov
inc
pop
jae
ss
dec
push
fsub
stos
xchg
aaa
push
rcll
jmp
divb
out
ljmp
pushf
xor
stos
cmpsl
incb
add
adc
fdivrs
ja
jbe
stos
in
lock
repz
inc
sub
mov
sahf
jns
cmp
es
mov
outsl
or
out
fidivrl
fadds
nop
repnz
in
loop
xor
insb
insl
daa
add
popa
adc
mov
daa
or
pop
daa
inc
jbe
xchg
lahf
cmp
adc
data16
ficoml
ficoms
and
inc
pop
push
cmp
sbb
cs
push
ja
dec
pop
testl
filds
test
pop
in
mov
cmp
std
stos
call
hlt
iret
push
imul
sar
sbb
mov
mov
lods
test
cmp
sbb
adc
push
jo
into
jno
pop
lea
pop
cmpsl
dec
or
cmp
out
outsb
cli
mov
fidivl
inc
aas
cmp
mov
mov
sbb
inc
jl
add
nop
xlat
push
out
sti
test
popf
gs
jmp
adc
les
jae
jbe
mov
mov
shl
in
std
paddusb
push
sbb
and
and
ljmp
call
xchg
cmp
xor
push
lret
mov
int3
std
rcr
lods
jnp
mov
mov
jns
sahf
lods
cwtl
cmp
sub
and
ds
sbb
test
mov
jmp
xor
testl
scas
mov
mov
xor
xchg
in
testl
iret
out
ret
push
shlb
bound
div
leave
icebp
jo
inc
mov
fdivrl
pop
sub
mov
daa
push
dec
les
ljmp
mov
mov
fwait
lret
leave
mov
inc
in
xchg
and
pop
mov
mov
mov
in
leave
sahf
inc
insb
pop
push
xor
add
jns
mov
dec
test
jle
mov
fiadds
stc
filds
je
insl
cmp
mov
push
mov
fisttps
jge
into
sbb
cmp
out
pop
andb
movsl
mov
xchg
subb
movb
mov
in
jnp
scas
sbb
adc
jnp
das
ss
sub
dec
in
push
pop
inc
sbb
repz
popa
adc
mov
dec
nop
cmp
lea
pop
add
pop
lret
loopne
adc
mov
inc
lock
pop
fnstcw
add
enter
in
or
or
pop
dec
imul
imulb
pop
jns
add
stos
xor
enter
pop
or
frstor
mov
daa
stos
add
ret
rorl
push
xchg
loopne
push
xchg
outsl
mov
test
arpl
cmc
iret
addr16
xchg
mov
pop
jmp
repnz
or
inc
mov
and
cmp
sarb
or
xlat
xor
mov
xchg
add
pop
call
pop
mov
cmp
mov
mov
sub
adc
mov
jne
cld
movsl
mov
push
or
cmp
negb
jae
bound
jl
es
cmp
in
mov
enter
loopne
movsb
jecxz
mov
sub
dec
adc
fdivr
lods
lahf
pop
dec
and
lahf
xor
sub
pop
push
das
jnp
push
jge
dec
mov
imul
cmp
movsl
or
inc
push
movsb
push
mov
mov
or
je
hlt
jge
adc
repnz
pop
stos
sub
add
cltd
jecxz
xor
pop
adc
mov
loope
orl
inc
xchg
out
aas
mov
pop
pop
pop
jnp
mov
xchg
cmp
dec
jmp
dec
sbb
lods
clc
je
lret
test
inc
lea
dec
push
outsl
aas
cmp
jns
push
add
cltd
ret
ret
mov
mov
push
ss
mov
dec
es
xor
cld
push
cltd
leave
adc
xor
mov
pop
mov
loop
loope
and
dec
mov
mov
pushf
mov
pop
xchg
mov
rorl
and
sub
je
mov
sub
out
das
test
rcr
push
lock
cmp
or
or
into
lds
jmp
fs
inc
or
sub
fcoml
ret
mov
sub
jg
rcr
jecxz
jg
jge
inc
mov
je
jecxz
test
mov
cli
dec
inc
movsb
aaa
aam
mov
cmc
stos
orl
sub
rorb
mov
je
aas
sbb
cmpsb
cmp
push
fwait
xor
outsl
call
pop
pop
lret
inc
mov
or
cli
push
push
out
sub
cmp
inc
push
push
mov
push
dec
mov
bound
mov
or
jp
jl
add
or
sahf
pop
pop
and
and
jmp
insl
iret
ljmp
imul
mov
int3
sahf
in
mov
ret
sarl
pop
inc
cmc
mov
pop
js
out
dec
stos
cli
push
pop
push
loopne
fidivrs
inc
xor
cmp
xchg
adc
push
mov
xchg
push
hlt
mul
call
fldpi
nop
cmpsl
jb
or
cmp
push
dec
test
xor
push
imul
rol
ret
cmp
int3
push
pushl
cwtl
cli
or
mov
xchg
out
faddl
sub
push
lea
xor
or
das
mov
xchg
mov
dec
mov
cmpsb
into
arpl
inc
sahf
xor
inc
mov
loop
pop
jno
push
sbb
shrb
jp
xchg
xchg
mov
sbbl
out
stc
dec
cwtl
ja
mov
mov
movsl
or
cmp
xchg
movsl
mov
mov
fcoml
lods
mov
xchg
sbb
inc
fcomps
inc
jg
add
xor
gs
ss
insb
dec
pop
xchg
xor
xchg
insb
dec
fwait
sbb
shll
cmp
mov
or
adc
cs
xlat
adc
call
sbb
adc
inc
in
pushf
ret
mov
lahf
sbb
adc
mov
call
inc
punpckhdq
dec
jge
mov
cmpsl
loopne
test
int
adc
out
mov
imulb
jg
mov
incb
sbb
filds
lock
aas
mov
mov
test
sub
pop
fisubl
push
cltd
cmc
pop
aaa
ret
data16
or
push
lods
sub
jmp
rclb
jno
cmp
in
xor
shll
js
jge
push
sbb
push
fadds
push
adc
xor
das
dec
push
mull
push
pop
int
mov
pusha
push
xorl
mull
lret
sub
cmpb
jmp
cmp
adc
test
jo
repnz
cmp
jo
ss
push
in
ss
jne
pop
lea
jg
test
pop
cmp
pop
gs
cmp
pop
movl
test
sub
xor
testb
mov
sub
dec
out
ret
sbb
xchg
cli
dec
dec
popa
sahf
aas
subl
xor
xor
orl
mov
jae
xor
or
push
cmp
xchg
sar
jp
inc
popa
in
push
sbb
sub
mov
jbe
lods
jmp
jp
mov
jb
cli
das
cld
hlt
fsts
pop
ret
mov
and
mov
xchg
stos
test
add
xchg
ja
in
and
push
lret
aas
pop
dec
jno
dec
in
jbe
in
mov
pop
fadds
mov
cmpsb
xor
test
bound
cmpsl
out
cwtl
push
adc
xor
je
inc
xor
loop
push
pusha
shl
xchg
subb
push
lret
dec
andl
mov
add
inc
je
dec
aas
lods
jecxz
ja
lods
mov
daa
sub
fdiv
or
test
lods
jge
push
xchg
dec
popf
jo
mov
xor
das
movsb
push
cmp
and
lcall
push
sub
mov
gs
inc
xor
and
sbb
lds
jne
jae
inc
cmc
ds
pop
mov
iret
and
test
xchg
call
mov
movsb
and
rorl
xchg
bnd
inc
loop
inc
inc
mov
dec
cli
in
int
mov
sub
jecxz
popf
ljmp
push
inc
in
dec
mov
cltd
jnp
lcall
hlt
fs
or
inc
je,pt
mov
lret
stos
sbb
and
ds
test
adc
xor
pop
push
movsb
fidivrl
xlat
call
or
pop
pop
sbb
mov
test
sarb
paddq
cmc
aaa
lcall
add
dec
bound
rclb
pop
ljmp
mov
dec
sarb
pop
std
inc
sub
lret
fisubs
ljmp
sbb
test
adc
insl
add
push
aam
pop
lret
out
cmp
mov
cmc
notb
cli
fcoml
sbb
add
jno
mov
loop
push
push
inc
add
xor
sub
mov
cmpsl
dec
sub
stos
sbb
and
mov
xchg
lcall
sub
mov
and
data16
in
mov
repz
jno
movsl
xor
fsubrl
lea
inc
push
out
sbb
pop
bound
cmpsb
pop
out
scas
jg
sbb
cmp
daa
inc
push
cld
fwait
jmp
fiadds
sbb
fwait
gs
pop
mov
push
adc
and
or
rorb
mov
jp
mov
in
mov
mov
jbe
sub
sbbb
pop
push
push
xchg
jl
lret
xor
jnp
pop
xor
push
fwait
mov
jle
add
xchg
in
popa
adc
adc
fistps
hlt
adc
jecxz
xchg
sbb
push
loop
je
mov
and
lods
pusha
mov
outsl
xor
xchg
loop
add
insl
jb
ds
mov
fisttpl
andl
dec
mov
jg
xchg
nop
pop
pop
push
pop
xor
push
lret
xchg
nop
mov
ficoml
je
cmpsl
fsubrs
call
sub
aas
int3
movsl
pop
adc
fwait
inc
xor
push
xchg
cld
imul
cmp
xchg
test
les
jge
fnstenv
mov
cltd
pop
mov
arpl
cmp
push
jne
mov
mov
lret
cmpsl
into
sbb
ljmpw
inc
lods
iret
fistl
rorl
fisttpl
out
cmp
in
pop
pop
jmp
ja
out
cli
cmp
mov
out
std
ja
adcb
pop
and
fists
and
sub
mov
inc
clc
cmp
repz
into
cs
cld
mov
mov
sbb
sbb
cmpl
xchg
xor
fdivrp
mov
hlt
sbb
lret
or
xor
aas
jg
test
in
dec
stos
xor
inc
mov
push
push
iret
inc
jmp
cwtl
cmp
sbbb
adc
andl
fidivs
cmc
rclb
lea
sbb
shl
pop
jmp
jnp
popf
jmp
mov
mov
sub
out
test
bound
push
test
or
out
pop
push
push
add
dec
repz
push
ja
daa
jns
inc
push
div
or
jmp
or
insl
js
in
nop
mov
lock
leave
sub
jae
mov
test
xchg
lahf
jno
mov
push
notl
fwait
dec
xor
je
sbb
fsubl
dec
mov
jb
movsb
stos
mov
add
loopnew
int3
jmp
ja
cmpsb
mov
jp
cmp
cmpsb
adc
or
imul
std
ficompl
or
fptan
out
adc
cmp
pusha
ljmp
fs
sarb
and
add
ret
rolb
jo
cli
mov
or
inc
shll
lea
or
mov
jecxz
dec
xchg
sbb
jg
bound
incl
les
mull
in
hlt
mov
sub
sub
xlat
incl
fwait
and
xchg
xchg
mov
mov
adc
outsb
mov
dec
hlt
and
inc
lahf
mov
adc
rcr
push
rcrl
in
dec
inc
movb
push
hlt
push
mov
inc
mov
and
mov
pusha
or
test
xchg
mov
mov
pop
pop
xchg
insl
and
icebp
pop
xchg
aas
scas
inc
imul
sub
xor
dec
fmuls
mov
fstps
jo
testb
adc
scas
and
orb
pop
mov
jno
orl
mov
je
int
xchg
mov
stc
lret
push
fwait
sub
xchg
cli
push
pop
mov
movsl
sbb
arpl
ret
cmpsb
je,pt
jbe
sahf
lea
mov
xor
fxch
xchg
fldt
pushl
inc
rclb
xchg
outsl
sub
ret
adc
popf
les
in
repnz
push
xchg
pop
inc
daa
cwtl
sbb
dec
dec
in
cmpsb
mov
inc
xchg
adc
ss
jecxz
fs
je
mov
mov
cmc
ds
into
xor
test
xor
aam
jmp
pop
adc
in
int
rclb
jo
push
dec
imul
mov
rol
jle
mov
test
mov
mulb
icebp
cli
and
xor
add
aaa
adc
mov
dec
mov
out
jg
dec
rcrb
jg
lea
ret
add
aam
push
and
int
mov
ds
cli
out
sarb
nop
inc
add
dec
or
xor
xcrypt-ctr
cmpsl
push
call
and
cmpsl
cwtl
js
lret
aaa
inc
mov
shrl
aas
jae
mov
movsl
add
sbb
xor
pop
fists
ljmp
cltd
inc
xchg
icebp
loope
and
call
enter
xor
scas
loope
mull
mov
add
add
push
push
fs
xor
push
pop
in
mov
scas
and
sbb
mov
add
std
in
cmp
sahf
stc
and
cmovnp
popf
jb
sti
loop
cmp
cwtl
xor
clc
xchg
int
mov
lahf
stc
into
jnp
jl
inc
pop
in
mov
out
inc
std
data16
das
dec
jecxz
xor
stos
sbb
pop
mov
and
add
or
mov
rorb
cmpsl
imul
in
mov
in
jns
jp
pop
movsl
cwtl
push
mov
jle
es
dec
fstpt
lods
push
adc
xchg
pop
sub
popf
pop
xorb
push
jne
cmc
xchg
pop
cmp
add
push
adc
push
loope
push
jge
rcll
sarl
test
ja
pop
out
cmp
mov
fst
aas
mov
jne
jg
ficompl
in
and
dec
dec
cmp
and
pop
push
xor
insl
mov
adc
jns
inc
int3
inc
addr16
fldcw
vunpcklps
or
or
xor
nop
mov
and
in
push
stc
jb
outsb
sbb
repz
repnz
movsb
out
inc
cli
lds
jl
repz
jns
cmpsl
roll
std
add
lock
jmp
sbb
lcall
sub
fwait
xchg
jmp
dec
loop
test
push
jp
cmpsb
insl
mov
sbb
fbld
stos
mov
ljmp
or
repz
fcmovne
push
mov
inc
orb
stc
jp
out
rcrb
cli
les
lea
sbb
outsl
movswl
mov
movsl
push
mov
sub
mov
dec
movsb
shr
push
adc
outsb
sbb
cmp
mov
push
jo
mov
mov
mov
movb
fstpt
mov
mov
sbb
mov
mov
lods
and
cmpsl
mov
int
xchg
addr16
inc
cmp
pop
aam
les
lock
pop
repz
sarb
cli
lret
jb
inc
shrb
ret
insl
mov
xchg
sahf
add
pusha
sub
mov
cmp
jmp
mov
push
cmp
sbb
cs
sbb
adc
lods
jp
mov
popf
pop
xor
test
cmc
stos
enter
jmp
cmp
xorb
jge
aas
mov
mov
add
and
out
and
cltd
scas
out
xchg
sbb
scas
jmp
stos
imul
negl
fnstenv
pop
inc
sbb
in
and
ficoml
pop
inc
jmp
fistpl
pop
pop
stos
movsw
pop
lds
insb
pusha
movb
mov
cld
push
sub
lahf
mov
loope
xchg
push
inc
or
cmp
fdivr
in
in
loopne
test
adc
or
mov
jns
ljmp
adcl
pusha
pop
stos
push
loop
jb
fsubrs
mov
lods
or
and
into
lds
pushf
sbb
mov
cs
jbe
or
sbb
mov
mov
cmp
and
fs
lods
fnsave
scas
ficoms
ja
pop
inc
sub
sbb
or
jg
test
popf
add
xchg
scas
pop
mov
ret
pop
std
sbb
add
cmp
mov
pop
push
rcl
jae
pushf
jb
and
rcl
in
jb
pusha
sub
xchg
lea
push
lea
inc
outsb
sub
rolb
push
leave
mov
ret
movsl
xchg
incb
jecxz
add
lds
popa
pop
xor
push
lods
pop
pop
test
jb
pop
test
cmp
jp
fwait
aam
enter
mov
jmp
rorb
leave
jbe
lret
mov
repnz
pop
testl
dec
mov
mull
mov
and
pushf
xor
stos
add
or
add
push
and
or
jnp
jbe
test
mov
and
inc
or
mov
jmp
xor
xchg
sbb
sbb
push
push
xor
call
test
mov
inc
and
stc
adc
mov
popa
fstl
bound
pop
sub
dec
cld
ljmp
mov
inc
sub
pop
in
subb
mov
data16
ficomps
out
test
xor
dec
lret
stos
jb
mov
aam
std
mov
jnp
in
and
insb
cmpsb
loop
sti
stos
dec
add
dec
adc
jge
xor
or
jmp
loop
sbb
lahf
leave
scas
cmp
mov
fsubrp
and
or
xchg
add
cmp
xchg
push
addr16
pop
lcall
insl
ret
mov
or
repnz
xor
out
mov
in
mov
pop
les
inc
out
fldt
mov
shll
push
or
and
shlb
movsl
out
insb
jle
jnp
or
add
out
dec
lret
or
movsb
pop
mov
dec
test
sub
xor
push
jl
xchg
or
out
popa
js
and
adc
mov
gs
aas
pop
jns
mov
push
outsl
push
or
jl
pusha
dec
in
mov
iret
push
ret
xchg
cmpl
das
aad
sbb
and
rorl
xchg
adc
dec
enter
inc
jno
inc
mov
fs
jbe
pop
mov
xchg
fldenv
cmpsb
ret
sarb
push
int
dec
pop
scas
loop
cli
fsts
cmpsl
fistpl
mov
pop
mov
mov
mov
inc
push
aaa
jbe
loopne
out
out
fdivr
addb
enter
pop
sarb
lahf
and
cltd
sbb
rcrb
xchg
xchg
shlb
inc
and
movsl
flds
push
inc
test
fs
std
or
jle
jmp
ljmp
inc
mov
ret
inc
mov
cmpsb
stos
sbbl
aaa
mov
test
rorb
stc
inc
pop
loop
mov
test
push
fsubr
ror
incl
push
lods
lods
pushf
arpl
xchg
dec
sbb
jae
imul
pop
mov
lods
cmc
adc
fidivs
mov
loopne
lods
cmpsl
push
mov
mov
cld
sarb
push
pop
mov
mov
ret
sti
mov
out
popl
jb
or
sub
mov
sbb
jp
test
enter
push
ret
pop
jecxz
lds
cmpsl
jne
dec
aad
mov
stos
clc
and
or
mov
mov
sarl
aam
lret
or
scas
jl
arpl
xlat
daa
push
cwtl
push
aaa
sbb
into
mov
sub
mov
popa
mov
sbb
push
lret
out
pop
fstpt
adc
adc
add
into
xlat
lods
loope
fdivrl
pop
loop
outsl
hlt
scas
aas
mov
in
test
pop
andb
jl
loop
mov
rclb
mov
jg
outsl
loop
sbb
test
adc
shlb
lret
mov
mov
add
mov
fdivl
test
inc
sbb
inc
jo
push
iret
arpl
repnz
outsb
das
popf
not
sarb
adc
dec
pop
pop
and
pushf
adc
cltd
pop
loope
mov
lret
jge
test
fsubr
sbb
testb
pushf
pop
push
dec
mov
add
test
pop
out
icebp
sub
jl
cltd
xor
add
ret
or
imul
adc
flds
andb
and
push
pop
mov
stos
xor
jg
mov
ds
sahf
jl
sub
mov
sbb
fs
cs
inc
or
inc
lcall
push
leave
sbb
cmp
inc
or
push
scas
and
cld
jno
jle
call
ficompl
test
add
out
sti
std
hlt
fdivs
mov
sub
jno
sbb
jae
lcall
push
mov
inc
call
jecxz
pop
pusha
or
pop
iret
pop
or
xchg
mov
test
mov
sbb
notb
xor
ss
mov
jecxz
jno
pop
pop
arpl
lret
cmpl
jge
shrb
push
cmp
adc
aad
arpl
and
aas
aas
adc
pop
jmp
mov
in
xchg
cmp
push
mov
mov
pop
or
push
aaa
int
sbb
test
stos
adc
push
test
add
mov
add
adc
adc
pop
and
mov
ja
mov
in
jbe
sub
sbb
sahf
push
rolb
hlt
test
sahf
stos
popf
sub
cmpsl
push
add
lret
inc
lods
scas
jbe
adc
fisubs
xchg
lods
hlt
adc
sbb
stc
dec
mov
ljmp
mov
in
aas
adc
mov
cltd
das
mov
popa
das
ds
call
decl
mov
addl
fcoml
sti
pop
xorb
or
add
or
xchg
arpl
xchg
mov
aas
ss
adc
jecxz
sahf
sbb
cwtl
sub
sarb
ret
ljmp
daa
cmp
fiadds
cmp
jnp
push
add
pop
test
push
outsl
jle
jg
jecxz
xchg
test
inc
sbb
fistpll
mov
adc
or
jae
mov
push
dec
sti
cmpxchg
xchg
ficompl
lods
add
or
pusha
jmp
lcall
xchg
arpl
shl
xchg
mov
aad
xchg
xlat
sbb
dec
cmp
stos
aaa
jle
lods
cltd
mov
xor
jbe
mov
cmp
pop
cmc
cmp
cltd
fwait
aad
popl
xchg
daa
data16
or
sahf
adc
mov
jg
insl
jge
push
adc
icebp
sub
sub
xor
rcl
sti
into
out
adc
stc
jge
in
fimuls
out
xlat
aas
xchg
pop
sarb
sub
sub
in
jmp
jg
fimull
in
out
aam
stos
push
sub
pushf
push
mulb
inc
in
sub
xor
mov
js
mov
adc
outsb
andl
add
pushf
xchg
cmc
fs
rorb
scas
je
or
shl
inc
cmp
fidivl
push
mov
xchg
es
aad
stos
mov
sbb
ror
xchg
or
push
mov
push
int3
fldl
sub
lret
es
rcrb
dec
and
bnd
movsl
ljmp
pop
xchg
mov
xor
mov
inc
mov
mov
cmc
pop
pop
sbbb
cmpsl
mov
and
or
rcl
push
test
ljmp
js
sti
jno
adc
push
adc
inc
out
jg
aas
aam
add
les
mov
push
cltd
fiaddl
aad
bound
fsubr
jl
dec
cli
fs
aam
cmp
push
cltd
test
dec
dec
jne
mov
mov
test
push
adc
icebp
dec
in
xchg
aaa
dec
adc
out
adc
and
popf
push
cmp
clc
mov
aaa
pop
push
or
add
adc
aam
inc
xor
dec
test
shl
xor
cwtl
insl
fidivrs
test
mov
add
shll
je
cmp
sarl
nop
xor
fdiv
pop
in
xor
sbbl
jle
mov
xlat
mov
or
jo
ret
cmp
sbb
aad
mov
push
sbbl
push
fldenv
jge
inc
ret
idivl
icebp
mov
cwtl
test
mov
loop
in
inc
lods
dec
xchg
and
aad
es
or
xor
sbb
add
loop
mov
push
outsb
push
push
cmpsl
testb
mov
or
mov
outsl
push
pop
ret
testl
pop
arpl
jbe
mov
hlt
pop
jg
xor
ret
fwait
icebp
ret
outsb
ss
loope
arpl
push
or
add
adc
roll
sub
clc
sti
add
xchg
clc
fsubrs
cmp
push
adc
pop
das
xor
xchg
xor
mov
pop
dec
mov
stc
mov
nop
int
mov
ret
inc
xor
jbe
fwait
mov
mov
or
es
mov
add
jmp
das
and
jnp
push
xor
push
sub
mov
out
call
adc
iret
pop
mov
je
add
addb
test
jnp
jle
sti
xchg
roll
or
add
adc
cmc
jae
lret
inc
out
add
xor
pop
or
insl
orl
imul
ss
clc
sub
or
xorl
jg
ja
pop
lods
dec
push
and
insb
mov
fcoml
dec
push
addr16
and
push
aam
inc
dec
pop
loop
aaa
cld
mov
ja
mov
pop
aad
xor
mov
xor
pop
stos
scas
rolb
mov
mov
addr16
xchg
incl
or
in
lds
fsubrs
in
xchg
ljmp
and
or
sub
aad
aas
shll
fstpl
repnz
das
testl
jmp
xchg
fidivrs
ja
je
add
leave
lcall
dec
sahf
sbb
pop
jmp
add
adc
inc
mov
and
mov
add
and
cmp
cmpsl
lods
ret
vcvtdq2ps
fs
jl
lock
cmc
sub
lret
or
add
jo
icebp
xor
lods
int3
push
aam
sub
stos
lds
pextrw
mov
movsl
sbb
push
jmp
mov
push
outsl
sub
jo
movsb
pop
cmp
mov
test
inc
loope
das
inc
rorb
jp
hlt
nop
repz
and
dec
lret
jge
test
jmp
idivl
rcrl
in
jbe
xor
in
sub
movsl
mov
jb
ds
dec
push
and
lahf
dec
aas
insb
mov
jecxz
fxch
sub
dec
inc
cld
pop
in
fs
xor
inc
je
and
int3
sar
or
and
xchg
and
fidivs
xlat
cmp
pop
ffree
sbb
inc
cmp
addl
push
cltd
cld
out
out
out
aam
jnp
shll
mov
int
mov
fldl
pop
push
insl
push
jmp
mov
popa
nop
int3
dec
add
fistpll
bound
mov
movsb
xor
lock
or
pop
push
lds
lcall
fstpt
lcall
imul
sbb
cld
les
jns
sbb
repnz
lret
pop
pop
inc
xor
sbb
pop
xchg
inc
movsl
xor
xor
dec
inc
jecxz
and
adc
test
xchg
dec
sub
cmp
test
pop
lea
js
lods
mov
sbb
lcall
xchg
jg
jmp
das
es
nop
arpl
add
add
mov
insb
fldl
cmc
aas
lods
mov
dec
nop
push
mov
enter
sub
fs
mov
lret
jl
push
ljmp
mov
bnd
push
test
xlat
arpl
ret
fs
add
mov
and
xchg
aad
jbe
sbb
mull
xor
je
inc
decb
ljmp
je
lods
cmp
add
lock
or
jecxz
shll
fcoms
bnd
inc
cs
test
testl
out
mov
mov
outsl
xchg
ret
ss
jle
inc
shrl
jbe
jl
and
pop
shll
sub
mov
add
mov
xchg
lock
hlt
push
xchg
dec
mov
divb
loope
shlb
cs
mov
xchg
popa
pop
insl
pop
sub
movsl
nop
mov
inc
jb
cmp
testl
mov
push
dec
xchg
xchg
and
mov
imul
mov
cwtl
test
mov
lods
movsb
mov
lcall
out
jb
sbb
xchg
adc
sub
mov
jno
ljmp
and
cpuid
add
cmp
js
rcll
fwait
adcb
inc
fistl
xor
movsb
sbb
jl
adcl
invd
pop
ljmp
test
inc
mov
and
mov
cmp
test
add
repz
cmp
jbe
jecxz
or
clc
inc
sub
iret
and
sub
movsb
test
inc
aaa
and
sbb
cmp
daa
xor
jb
mov
sbb
push
jne
xchg
adc
scas
mov
push
repz
jnp
jno
cmp
mov
push
xor
jo
repnz
scas
imul
sbb
xor
sbb
rolb
pop
cmp
add
call
add
loopne
cmpsb
push
xor
ret
iret
in
xlat
faddl
lods
shl
loop
push
mov
fdivrs
jno
icebp
sbb
aam
icebp
es
sub
inc
repnz
ja
mov
ret
cmpl
mov
sbb
test
rorl
xor
mov
sub
orl
pop
test
cmpsl
xor
ss
sub
stos
mov
dec
sbb
cmp
int
mov
cmp
sub
push
push
xchg
sbb
std
fiaddl
cmp
test
push
sub
mov
repz
jge
fcoml
cmp
cmp
filds
add
mov
lock
adc
adc
decl
out
popa
sub
flds
mov
xor
sahf
sbb
ror
add
ds
imul
cltd
jnp
out
stc
inc
cwtl
leave
sub
or
in
mov
out
fnstcw
cmp
popf
dec
or
imul
pusha
int
sub
pusha
imul
dec
arpl
add
fistps
cmp
in
push
loope
aad
insb
or
xchg
xchg
push
xchg
push
lea
repnz
push
je
pop
xor
pop
pop
sub
push
cmpsl
test
call
loope
or
cmp
push
jge
insb
add
je
fildl
add
sbb
sahf
xchg
fidivs
and
pop
imul
dec
lret
dec
sbb
ds
int
jl
dec
mov
jle
adc
les
inc
pop
sub
mov
mov
addb
cmp
popf
xor
insl
aas
loopne
xchg
in
lods
aam
or
inc
sub
push
rcr
cs
mov
xchg
insb
push
mov
bound
jbe
lds
faddp
add
xor
daa
ljmp
out
fildll
lods
aas
loopne
add
sub
ror
shrb
cmp
cltd
repnz
xchg
es
xor
sub
adc
popa
jp
or
mov
outsl
lea
jnp
push
push
lcall
xchg
int
cmp
and
dec
inc
jne
mov
or
iret
mov
jbe
notl
xor
stos
xchg
xchg
sub
pop
and
xchg
les
mov
xchg
in
inc
push
ljmp
mov
sbb
mov
xor
mov
divl
sbb
dec
mov
addr16
sub
adc
sbb
divb
jnp
xchg
push
inc
push
lock
add
daa
int3
cs
in
push
es
or
ffree
sahf
sti
lock
daa
hlt
outsl
jo
lea
cltd
pop
inc
cmp
sti
mov
lahf
push
icebp
jbe
jecxz
pop
pusha
cmp
mov
cmp
jno
jne
xor
fiadds
xorl
aad
mov
xchg
int
xchg
aam
sub
imul
adc
mov
sub
incl
mov
test
and
inc
sub
les
loopne
mov
mov
push
inc
pop
mov
fadds
in
xchg
loop
mov
fnstcw
das
sbb
in
cmp
mov
das
std
mov
lcall
mov
arpl
stos
lea
fs
lret
iret
sub
and
mulb
imul
or
scas
or
mov
xchg
enter
sub
cmp
mov
aas
icebp
lcall
lds
popa
cs
shlb
shrb
mov
pop
std
mov
mov
mov
inc
jl
insl
mov
push
fdivp
shrb
das
test
insl
iret
int3
or
test
jb
in
scas
mov
add
mov
jbe
add
mov
mov
and
mov
cltd
lcall
mov
add
cltd
mov
lock
orl
std
repnz
cmc
pop
clc
cmpsb
iret
xchg
pop
imul
bound
push
arpl
cmp
fs
pop
icebp
stos
pop
pop
pop
stc
hlt
pop
stos
or
lea
imul
pop
rorb
and
push
inc
scas
adc
xor
ret
int3
das
fs
call
enter
loop
dec
std
push
mov
aam
push
inc
nop
lods
faddl
lods
sbb
jmp
jns
dec
scas
js
roll
and
jae
jno
hlt
pop
mov
sub
xorl
mov
aaa
out
add
ret
cmp
test
pop
pop
or
ss
inc
enter
insl
or
sbb
das
pop
push
iret
js
jno
mov
pusha
and
stos
and
sbb
rolb
xchg
mov
adc
test
push
xor
sbb
adc
out
in
add
xchg
or
test
test
lods
add
xchg
cli
cmp
subl
inc
xor
js
iret
test
das
rcll
and
mov
mov
fucom
ljmp
mov
and
mov
in
das
xor
pop
jbe
ljmp
cltd
mov
add
xchg
icebp
sub
fdivrs
pop
fmuls
fidivl
dec
cld
dec
sbb
ja
fildll
insb
inc
cmc
lea
popa
inc
cltd
ret
aad
cmp
mov
mov
xlat
imul
loop
add
add
jns
test
out
push
test
pop
jo
daa
push
out
cltd
xor
xchg
mov
sbb
jmp
mov
outsl
mov
scas
repz
mov
adc
ljmp
add
rol
pop
test
mov
mov
fdivs
int3
mov
cltd
and
adc
rolb
pop
out
rorl
mov
testb
and
out
clc
xchg
cmp
adc
jmp
mov
repnz
xor
arpl
push
rcrl
in
sbb
mov
mov
dec
popf
int
mov
in
std
push
in
std
lods
mov
arpl
adc
js
jno
movsl
sub
jmp
adc
sbb
sub
mov
jl
cmp
jb
out
hlt
inc
imul
in
jno
push
loop
in
dec
and
hlt
jmp
lods
dec
add
scas
in
mov
rcrl
frstor
pop
in
icebp
addr16
ret
sub
aaa
outsl
dec
sub
and
fsubs
xchg
out
insl
pop
push
or
mov
mov
je
dec
pop
xlat
jg
sbb
jno
add
jg
test
cmp
inc
and
ja
movsl
xlat
dec
ljmp
mulb
add
shrb
cmp
mov
pop
pop
test
in
jg
pop
ret
mov
push
out
fbld
mov
jmp
push
inc
pop
mov
sub
dec
sub
xchg
add
enter
or
mov
cmp
ljmp
inc
add
divl
or
stc
sbb
fdivs
cltd
daa
in
adc
ds
sub
lcall
xchg
dec
clc
pop
mov
or
cltd
lahf
cltd
fildl
into
repnz
jno
push
cmpsl
shl
push
fnstsw
loopne
and
xor
mov
adc
ss
movsl
fxam
adc
pop
ds
orb
test
and
imul
mov
dec
aam
nop
adc
jns
nop
sbb
mov
mov
adc
jno
ficoml
dec
add
dec
pop
sbb
add
fidivl
insb
sbb
cmc
cmpsl
roll
mov
lods
adc
fcmovnbe
jno
or
push
pop
bound
cmpsb
pop
xor
les
icebp
fdivp
xor
cs
cmc
or
push
out
pop
sbb
outsb
push
inc
or
fistpl
subb
pop
inc
stos
jae
adc
out
jbe
shrl
cmpsl
fsub
ljmp
mov
mov
scas
or
mov
adc
mov
les
imul
out
xchg
inc
mov
xchg
stos
repnz
data16
dec
cmp
pop
or
jne
in
sbb
xor
xor
fdivr
ss
outsl
in
xor
cmp
jg
out
pop
pop
fistl
jp
shrb
add
add
inc
test
jns
mov
fcoms
push
mov
cmp
xlat
cmpsb
daa
lock
jno
push
inc
cld
or
dec
popf
out
sbb
mov
lods
add
jge
inc
insl
sub
inc
sub
xor
sub
enter
inc
call
add
and
jmp
mov
mov
dec
andl
pusha
mov
push
jo
push
jge
push
scas
sub
or
pushf
jle
scas
sub
mov
mov
sbb
mov
pop
jmp
jo
inc
inc
cmpsl
inc
mov
mov
hlt
jb
dec
mov
test
imul
mov
sahf
ret
into
insb
outsl
xchg
mov
inc
mov
cwtl
or
mov
pop
mov
mov
xchg
rcll
sub
xchg
adc
lcall
testb
add
mov
xor
mov
aad
rcr
in
or
adcl
adc
lcall
xor
int
sbb
and
xchg
pop
push
sbb
cld
push
pop
inc
mov
mov
mov
jmp
imul
ficoml
sub
pop
jge
rcll
cld
loop
mov
loope
lret
or
sub
imul
pop
mov
leave
inc
mov
and
aam
into
inc
dec
or
mov
pop
jns
movsb
push
cmovo
repz
fstpl
xchg
push
ja
movsb
sbb
push
mov
pop
cmp
xor
cmpb
pop
andl
push
dec
outsb
sahf
jl
std
pop
int3
mov
pop
test
jmp
test
inc
enter
and
lret
je
adc
mov
push
cltd
mov
jbe
mov
jmp
test
xchg
sahf
mov
inc
data16
lahf
mov
out
add
dec
clc
mov
inc
loopne
jg
pop
fdivrs
pop
mov
imul
js
fwait
jno
jmp
mov
scas
cmp
and
pop
cmp
mov
jo
insb
shll
push
aad
dec
repz
inc
mov
jo
cmp
shll
jb
jne
scas
insb
xchg
pop
ret
mov
loope
dec
nop
push
add
or
inc
jecxz
sub
out
aam
mov
in
cltd
mov
xchg
push
push
hlt
int
jo
inc
jne
das
adc
rorl
mov
packsswb
mov
inc
jp
rclb
adc
dec
in
adc
dec
insb
cwtl
movsb
mov
jmp
roll
cmpsl
dec
aad
in
mov
mov
mov
dec
jno
and
mov
in
sbb
je
dec
rclb
mov
cltd
push
fwait
lret
lahf
in
xlat
loope
jne
adc
fs
out
mov
jp
or
scas
mov
insl
es
sbbl
ljmp
xchg
cmp
cmc
push
fildll
push
dec
loop
pop
ja
push
js
psrlq
fucomi
xchg
mov
dec
push
notl
xchg
jbe
dec
mov
push
js
lcall
mov
hlt
sbb
mov
add
fisubs
inc
push
mov
movlps
jmp
inc
pop
cwtl
shlb
pop
dec
imulb
cmp
dec
or
mov
push
inc
ljmp
shll
sbb
add
dec
push
in
imul
xor
insb
pop
dec
xchg
hlt
mov
mov
push
fimuls
and
pop
jno
out
inc
ret
or
inc
popa
fsubl
xor
cmp
add
lds
std
test
addb
and
std
jo
lods
push
in
pushf
jmp
and
mov
test
sub
notb
xchg
pop
add
push
adc
into
push
sub
int
inc
push
enter
sarl
rolb
dec
xchg
ds
repz
push
add
out
fisubrs
fimull
stos
add
push
rcrl
mov
pusha
or
jae
sbb
shrb
mov
jge
and
loopne
scas
sub
out
pop
out
pop
mov
xchg
adc
dec
mov
and
jl
xchg
fimuls
dec
lods
int3
mov
and
sbb
in
int
inc
mov
pop
and
test
mov
xor
rorb
fimull
mov
adc
jg
pop
subl
pop
aas
int
neg
mov
cwtl
cmovp
xchg
jbe
xchg
inc
sub
ret
xchg
xchg
addl
pop
idivb
jp
and
lds
pusha
ds
and
je
xor
cli
dec
lds
mov
push
sub
js
aas
ja
jns
insb
fistpl
dec
jnp
out
push
push
fnstcw
outsl
mov
jmp
and
jmp
call
cmp
je
sub
mov
leave
pop
xchg
jns
cld
sbb
mov
or
mulb
push
mov
rcll
loopne
das
mov
sbb
cmc
stos
fbstp
push
cmpsb
roll
test
xchg
sti
or
jns
rorb
cmp
adc
xchg
sbb
ficompl
jg
test
int
fisttpl
test
movl
nop
outsl
jns
sub
inc
mov
test
ds
and
loopne
mov
pop
inc
add
fcmove
leave
sti
sar
sub
jae
xchg
mov
adc
shrl
push
stc
or
js
jg
stc
jge
jns
ret
test
sub
scas
xchg
pop
enter
xchg
imul
push
dec
cmp
outsl
jle
sub
fwait
in
lcall
imulb
push
or
add
stc
push
mov
ret
inc
sbb
jno
subb
lock
adc
adc
or
mov
jns
mov
xlat
inc
and
dec
pop
sub
divl
jo
sbb
or
pop
stos
add
pop
pusha
sbb
stc
jnp
mov
roll
push
mov
sbb
aam
outsb
inc
sbb
inc
inc
out
mov
xlat
pop
loope
fldenv
aad
dec
and
pop
and
push
mov
mov
addb
inc
adc
mov
or
sub
adc
je
add
andl
sbb
int
pop
pop
outsb
xor
aam
jge
sub
shll
xchg
rep
push
add
xchg
dec
and
imul
stos
js
std
push
push
push
mov
es
lds
pop
sbb
mov
dec
fdivp
insb
and
xchg
push
xchg
gs
mov
scas
or
mov
aad
lods
lret
xchg
sbb
xchg
xchg
inc
cli
lahf
insl
shrl
inc
add
jmp
ficomps
in
mov
aas
mov
lods
jnp
mov
hlt
lods
popa
inc
mov
xor
in
jmp
pop
adc
pop
pop
inc
lcall
mov
and
dec
push
sbb
mov
cmpsl
and
lret
xchg
cwtl
pop
push
push
pop
rcll
loop
xchg
fcom
jns
daa
push
xchg
int3
cld
sbb
clc
in
in
iret
out
xlat
and
jnp
push
or
in
lcall
pop
popa
jg
fcoms
mov
ds
push
fsts
mov
jl
mov
clc
mov
mov
and
mov
outsb
add
push
push
dec
xorb
test
push
in
loope
adc
mov
das
jns
and
push
fs
stos
and
adc
in
pop
jmp
cmp
inc
adc
jge
aam
jb
push
push
jl
sub
mov
lahf
mov
call
daa
pop
push
jns
sub
in
sbb
mov
push
cmpsl
ja
pop
sahf
gs
sti
sub
fdivrs
or
push
lret
aam
and
sub
sub
adc
loop
imul
inc
movsb
add
bound
jnp
popl
adc
jp
and
push
push
out
cmp
xchg
jns
loop
mov
vandnps
and
sub
loopne
cmpsb
sbb
loopne
sbb
pop
pop
inc
xchg
mov
sub
outsl
or
xchg
aam
pop
sbbb
lods
stc
cltd
popa
popf
fadds
rolb
mov
xor
push
add
in
pop
iret
dec
les
out
push
sub
sub
push
adc
daa
jge
xchg
jbe
push
fdivrl
outsb
addr16
adc
add
xchg
call
shld
xor
mov
pusha
pop
jbe
insl
lret
adc
mov
xor
mov
mov
cmpsl
dec
pop
loope
push
nop
or
push
mov
loop
jbe
aam
push
xor
fcomps
pop
sub
addb
or
icebp
stc
cmp
lret
test
int
icebp
jle
sub
scas
mov
pusha
xchg
repnz
inc
in
add
popf
cltd
lods
stos
adc
lock
mov
inc
mov
xchg
ret
hlt
cs
push
aam
stos
iret
xchg
ret
mov
testb
into
fisttpll
inc
cmp
xchg
pushf
sbb
es
mov
pop
jl
test
enter
pop
lret
jp
mov
xchg
mov
imul
push
js
sub
jne
mov
sbb
sub
mov
mov
cld
jbe
out
test
fisttpl
add
xor
mov
pusha
jnp
imul
sbb
mov
xchg
push
stos
push
test
add
sbbb
jbe
adc
shr
out
jmp
pop
sub
out
sub
popf
daa
xor
lahf
inc
push
dec
add
out
fld
mov
push
xor
or
pop
jbe
jmp
inc
mov
sbb
mov
test
pop
mov
mov
shl
out
push
inc
cmp
stos
js
and
or
cmc
inc
or
xchg
imul
scas
push
dec
lahf
and
or
cld
mov
stc
pop
lahf
push
jp
jne
mov
sar
fs
mov
popl
sub
lahf
mov
push
and
rcrb
addr16
mov
aad
cmpsl
in
sbb
testl
sub
mov
movsb
popf
leave
or
fdivp
and
dec
addl
shl
fistpll
aas
xor
shll
mov
shrb
or
lahf
cwtl
in
push
add
and
and
ss
test
push
mov
lea
or
adc
scas
or
mov
adcl
inc
arpl
cmp
pop
xlat
stc
repz
add
xlat
mov
pop
loopne
cmp
imul
push
xor
loope
ret
pop
popl
sbb
xchg
and
fdivs
faddl
cmpsb
jnp
aam
xchg
inc
mov
push
cmp
pop
add
adc
xor
push
sub
push
mov
daa
mov
cwtl
insb
jbe
sbb
test
jmp
insl
imull
lods
fistpl
cwtl
nop
rcl
pop
data16
out
pop
into
jp
jae
and
out
clc
jp
popf
fimuls
sub
mov
cs
xchg
and
inc
lods
inc
fisttpll
lret
out
pop
adc
rol
xchg
scas
ljmp
cmp
adc
test
std
mov
dec
cwtl
dec
int
leave
mov
push
inc
lock
dec
mov
call
lds
lock
dec
pop
popf
ds
sbb
mov
popa
outsl
adc
push
jbe
scas
out
call
sub
test
cli
pop
push
mov
xor
adc
popf
xchg
cmpsb
push
jg
mov
pop
hlt
sbb
pop
push
push
and
mov
and
xchg
mov
negl
mov
lea
pop
xor
pop
sbb
sarb
sbb
in
movsl
jnp
pop
std
xchg
dec
ret
jb
inc
daa
cwtl
outsb
das
call
cmp
xlat
dec
and
pop
ljmp
fldcw
int3
test
cmc
les
insb
jmp
sbb
es
ljmp
cmp
ds
arpl
sti
fadd
inc
lds
pop
insb
sbb
jmp
mov
xchg
mov
push
mov
sbb
cli
roll
cmpsb
sarl
jl
daa
sbb
js
lock
add
popf
les
cld
push
daa
xor
rol
mov
test
dec
in
mov
fnstenv
int
and
inc
push
loopne
or
cmp
pop
xchg
cmp
leave
mov
xchg
pop
movl
mov
jle
insl
sub
add
lcall
adc
adc
cwtl
mov
xchg
mov
jns
and
and
movsb
inc
push
ret
cmp
mov
movsl
jno
mov
inc
pop
jp
pop
cmpl
and
addb
mov
idivl
loopne
pop
or
inc
pusha
jb
shll
mov
sbb
mov
cltd
orl
mov
lods
mov
cmpsb
cmp
push
cli
push
push
out
pop
pop
data16
aas
lcall
mov
rcl
into
xor
xor
les
mov
and
add
stos
ja
or
jb
xor
push
push
mov
fiadds
mov
inc
call
add
fidivl
jle
xlat
out
mov
and
mov
es
xor
shll
iret
adc
xchg
shlb
and
jecxz
pop
stos
jg
pop
dec
add
hlt
xor
out
mov
adcb
leave
and
jmp
enter
inc
pop
xchg
or
aas
insb
int
les
dec
push
or
iret
inc
adc
jae
out
or
sbb
popa
add
shrl
push
pushf
mov
hlt
test
and
sbb
sbb
mov
inc
lds
mov
xchg
or
xor
adc
insb
dec
es
pop
push
test
add
bound
scas
dec
mov
call
dec
xchg
loop
loopne
sbb
jl
cmp
push
inc
cmp
jnp
or
sbb
popa
mov
xchg
call
fistpl
or
add
shll
pop
or
cmp
mov
jb
cld
mov
hlt
push
cmpb
mov
ret
cli
mov
jne
sub
sub
dec
mov
dec
popf
ja
mov
daa
daa
fcomip
cli
push
enter
push
adc
das
jge
testb
out
out
mov
test
dec
sbb
sti
out
inc
pop
std
mov
jecxz
es
push
and
rcr
push
dec
icebp
cwtl
cmpsl
ds
leave
leave
icebp
xchg
jge
shll
mov
out
mov
cwtl
arpl
xchg
push
fisttpll
in
inc
xlat
addl
ss
mov
data16
xchg
push
mov
test
push
iret
jae
mov
lret
sarl
pop
pop
loope
outsl
xchg
or
mov
or
add
jmp
mov
pushf
movsl
cmp
int3
inc
out
movsb
xor
movb
cwtl
add
icebp
xchg
movsl
movsb
and
imul
add
pop
or
xor
ja
gs
jle
pop
int
xlat
stos
pop
ficompl
jbe
shr
fdivr
push
gs
lds
dec
dec
or
pop
cli
or
sarl
lock
mov
lret
aam
test
out
nopl
lret
bound
inc
and
xor
and
add
jge
xchg
nop
sub
scas
jo
clc
push
mov
jle
push
js
cs
jbe
dec
push
int
scas
xorb
lret
fdivp
mov
mov
in
inc
push
mov
xchg
fwait
sub
mov
arpl
inc
jo
in
push
inc
dec
arpl
mov
pop
lcall
shl
sbb
mov
int
mov
xlat
loopne
mov
cli
xor
faddl
jg
push
jnp
dec
sti
add
std
cld
mov
xor
sti
xlat
add
ljmp
or
jo
xlat
pop
push
cmpsb
add
cmpsb
xchg
imul
sbb
xchg
sbb
push
mov
sbb
jge
mov
mov
and
popfw
or
and
outsb
scas
lahf
or
dec
mov
inc
mov
ljmp
adc
sahf
xchg
pop
jecxz
sub
add
adc
pop
out
testl
cmp
rcrl
shll
sub
call
fcmovne
rcr
xchg
in
xor
mov
xchg
std
add
jno
std
icebp
cmp
popf
jae
lcall
lret
inc
std
add
insb
cmpsb
cmp
loop
bound
push
idiv
fists
jg
stos
cmpsl
xor
nop
add
add
sbb
aaa
mov
fdivr
xorb
mov
divb
jbe
and
mov
movsl
bound
dec
fildl
jae
xor
movsb
dec
or
in
jb
cmpsl
sarl
lahf
lods
aas
sbb
adc
popa
push
imul
fst
inc
inc
inc
insl
sarl
or
cmp
mov
inc
dec
or
push
lea
pop
test
pop
push
cmc
xchg
ljmp
andl
mov
xor
into
push
psubd
pop
inc
cld
sub
xor
imul
or
or
cmpsl
mov
nop
push
ud2
cmp
add
add
gs
adc
bound
jb
pushf
negb
adc
sub
arpl
xor
sbb
xor
aas
add
and
push
dec
or
cwtl
std
sub
jge
add
in
mov
stos
in
and
xor
repz
test
outsb
xchg
in
dec
adc
xor
arpl
or
jge
not
stc
and
jecxz
ljmp
pop
in
sub
and
mov
xchg
ss
inc
or
or
sbb
aam
into
mov
push
push
stc
aas
into
ja
out
ja
jne
movsb
cmpb
adc
xchg
mov
push
lret
movl
cmp
push
lret
mov
sbb
xchg
inc
jge
sub
addl
arpl
adc
xor
or
ret
cld
fcmovnbe
mov
or
test
jns
push
std
enter
enter
xchg
mov
cwtl
nop
xchg
rclb
das
roll
jns
ret
mov
lret
push
fcomps
shrd
and
push
sub
jns
mov
pop
mov
movsb
inc
add
mov
xchg
sbb
cli
lods
dec
add
shlb
pop
insb
fwait
js
mov
push
mov
jg
xchg
sbb
outsb
inc
daa
test
icebp
inc
lret
sti
xor
mov
inc
add
mov
add
or
pop
adc
leave
cli
push
push
xchg
clc
xor
xchg
mov
add
push
je
mov
addb
sbb
jmp
xor
pop
dec
rcll
mov
jns
lret
cmp
jle
daa
mov
xor
pusha
mov
stos
mov
lea
lret
mov
xor
sub
xor
inc
sub
int3
frstor
push
add
sub
inc
push
xor
mov
jb
jg
loope
sbbb
pop
into
mov
loop
lds
sub
outsl
or
test
pop
jo
ret
cwtl
outsb
rol
lret
sahf
sbb
jge
pop
or
jbe
inc
shlb
out
in
mov
adc
cltd
rolb
jnp
shlb
outsl
sub
push
movsbl
call
loop
sti
bound
lods
add
bound
xor
pop
jo
push
scas
sarl
clc
jnp
mov
scas
and
mov
inc
adc
mov
push
xchg
and
js
add
cmp
or
add
stc
outsb
cld
mov
or
jne
aaa
lcall
xor
and
loopne,pn
fwait
imul
push
and
mov
jecxz
push
test
cmpsl
adc
pop
std
iret
rcrb
mov
call
outsl
xor
cmp
stos
adc
xor
pushf
or
pop
roll
in
aam
test
scas
dec
nop
addr16
mov
xor
push
mov
sahf
cmpsl
xchg
mov
add
fwait
cmp
fcom
pusha
sti
adc
enter
inc
dec
mov
stos
sbb
lods
test
lret
movsl
fs
jne
shlb
or
addr16
fisttpl
xor
jns
je
les
push
pusha
pop
push
std
add
stos
fnstcw
test
pop
xor
mov
mov
xchg
lods
xchg
scas
lock
clc
push
jecxz
pop
push
or
adc
adc
fldt
xchg
insl
mov
jle
call
xchg
mov
outsl
mov
jg
incb
dec
jmp
mov
pop
into
stos
fwait
sahf
jge
loope
scas
das
lret
test
sbb
sbb
rorl
mov
scas
insb
xor
push
add
and
push
loop
mov
push
ja
in
push
add
inc
imul
fisubrl
pop
dec
push
negb
jns
push
cmp
in
mov
or
pop
insl
icebp
add
dec
mov
inc
sbb
xchg
or
adc
cmp
fcoml
mov
loopne
imul
out
pop
aas
notl
mov
push
std
movsl
testl
je
ds
bndldx
jnp
idivl
je
xchg
mov
push
or
fmull
rcrb
cmp
stos
jecxz
pop
loop
leave
push
mov
arpl
mov
seto
cmc
jb
lods
mov
ss
sbb
mov
push
dec
jl
and
pop
stos
pop
int
dec
shrb
cmc
mov
ret
pop
arpl
icebp
mov
push
fmuls
cmp
mov
lds
mov
pop
lahf
ss
negl
inc
pop
push
fistpl
jge
cmp
inc
scas
mov
mov
pop
dec
xlat
std
inc
fdivs
iret
jne
outsl
cmp
sti
mov
mov
push
pop
loop
dec
pop
repz
call
fidivs
frstor
adc
push
adc
jmp
mov
xor
mov
std
and
adc
xor
nop
dec
cltd
pop
daa
sub
in
xor
es
iret
call
ljmp
les
mov
and
das
shlb
aaa
enter
loop
cmc
dec
fisubrs
sahf
rcll
cld
pop
jmp
pop
aaa
mov
leave
or
dec
in
call
mov
cs
fwait
push
push
inc
aaa
mov
cmp
cmp
pop
and
stos
fwait
lods
les
xchg
outsb
add
add
outsb
push
insl
adc
adc
jns
or
jae
aam
xchg
cmp
sub
nop
out
pop
dec
daa
sti
mov
fcompl
hlt
in
test
mov
mov
mov
adcl
ja
enter
xor
cmp
inc
mov
mov
jno
mov
sbbb
fstps
inc
fsubl
rcrl
mov
dec
bound
cmp
sub
xor
ja
sbb
ss
shl
into
daa
and
mov
mov
xor
scas
outsl
xor
loopne
push
xor
imul
pop
sarb
xor
push
jbe
out
shl
out
mov
xor
xchg
sub
daa
shrb
or
jno
shrb
push
les
dec
lret
xor
fs
xchg
fmuls
pop
xchg
lods
fisttps
test
and
jns
mov
cmp
rcll
ljmp
out
push
xchg
aad
shlb
jp
dec
mov
xchg
cmpsl
sti
jo
aas
inc
daa
cmp
pop
xchg
cmp
push
vmovshdup
xor
stc
mov
jg
jl
mov
not
mov
push
push
mov
fadds
pop
jbe
out
out
cmp
jecxz
data16
iret
cmp
dec
mov
repz
pusha
rcrb
je
shlb
movsl
dec
aaa
inc
insl
repnz
sub
xor
mov
cltd
or
jne
add
jg
arpl
fwait
push
cmc
ret
divl
movsl
lret
ret
ljmp
push
iret
and
jmp
in
xchg
push
mov
jb
mov
loope
dec
push
jbe
scas
fnstcw
lret
lahf
rorl
jae
cltd
shr
jno
cmpsb
lea
mov
outsb
xor
xor
xchg
and
rclb
mov
ss
dec
dec
fmull
andb
insl
pop
sti
sub
popa
pop
mov
mov
test
mov
orb
mov
int3
cmp
dec
outsl
sti
jae
jb
push
pop
sahf
sub
fildl
sbb
int
lods
in
enter
sub
les
sbb
adc
push
loope
stos
jbe
insl
push
inc
test
jg
fistpll
fldenv
dec
add
jne
jmp
pop
jg
clc
cli
aas
mov
pop
xor
push
cmp
mov
mov
pop
dec
dec
lret
iret
dec
push
test
jl
sbb
fld
or
mov
movlps
shlb
cmpsb
xlat
and
decb
lock
sub
xor
sbbb
jg
or
popf
mov
jno
scas
sub
jo
ljmp
ret
mov
xor
sbb
je
inc
dec
pop
pop
addb
sub
addr16
sti
sub
cmp
or
jo
adc
push
jmp
mov
sub
pop
or
cmc
add
dec
add
mov
shll
cmpl
adc
outsl
jmp
fsubs
push
cmpsl
cmp
lock
lea
inc
inc
mov
mov
mov
add
in
sbb
sbb
or
pop
mov
scas
mov
aad
pusha
mov
scas
push
mov
jo
les
arpl
add
or
mov
pop
pop
out
ja
clc
mov
xor
or
jl
pop
lds
mov
jg
or
inc
cmp
cli
in
inc
xbegin
cmc
add
lea
sub
mov
add
mov
shlb
cmpsl
add
xor
fbld
push
repnz
add
xor
and
pop
mov
xor
cmp
popf
test
xchg
push
and
cmp
rolb
cmpsb
lds
push
sahf
jle
mov
sub
pop
and
or
insb
scas
rcl
ficoms
jne
lret
add
add
sbb
scas
cli
insl
dec
fwait
inc
es
sbb
pop
xor
pop
orl
pop
sahf
enter
mov
lds
dec
ss
sbb
xchg
popa
and
dec
call
aaa
push
popa
insl
add
dec
xor
push
cmc
or
sbb
arpl
pop
call
jmp
sub
sbb
sbb
jmp
cmp
jae
add
fidivl
aad
loopne
inc
lds
sahf
jp
mov
imul
jle
mov
pop
outsl
lret
jg
sbb
mov
fxsave
pop
fld
aaa
out
jo
push
mov
inc
cmp
rol
pop
jo
jb
push
or
xchg
dec
pop
lret
jl
fwait
pop
addr16
gs
dec
imul
enter
aaa
add
iret
cli
jge
mov
les
jb
popf
rol
pop
jl
es
pop
cld
mov
pop
mov
cmp
or
push
negl
ljmp
pop
outsb
lods
mov
cld
lret
inc
add
and
fnstenv
popa
test
pusha
mov
sbb
xor
push
push
idivl
mov
in
mov
mov
sub
and
xlat
fidivrs
test
rcrl
mov
lcall
test
and
gs
lods
mov
adc
xor
movsl
xor
jg
pushf
mov
push
cltd
adcb
and
out
rcll
aad
out
enter
dec
in
loop
cltd
bound
and
mov
push
xor
iret
fcompl
leave
shll
mov
cltd
push
and
or
adc
jmp
rol
test
mov
and
fs
jge
test
addb
aad
mov
pop
popa
aas
push
mov
ret
or
test
mov
dec
popa
add
mov
xchg
cli
gs
rcl
cmpsl
andl
imul
push
int
int
lret
rcll
mov
cmp
dec
mov
leave
loope
outsb
and
inc
scas
enter
jne
mov
dec
into
cs
inc
jecxz
sbb
sub
sub
movsb
mov
divb
movsl
int
inc
scas
mov
jge
mov
lods
out
adc
sub
scas
addr16
lahf
fbstp
mov
idiv
sti
js
push
jbe
xor
imul
add
jmp
or
xchg
je
in
inc
push
push
ds
and
call
imul
in
arpl
sahf
or
push
push
divl
stos
imul
out
or
fs
loopne
jl
jp
pop
movsb
ffree
es
loopne
je
adc
pushf
das
int
lods
xchg
xchg
incl
and
sub
sbb
lret
sub
outsl
jg
aam
in
push
mov
iret
stc
sub
add
movsb
cmp
fcmovnu
fimuls
pop
pop
inc
mov
sub
xchg
xchg
mov
cmp
fnstcw
pusha
mov
loop
lods
call
movsl
jge
cmpsl
adc
mov
aaa
cmp
lds
int3
sub
xchg
push
push
mov
jno
dec
dec
push
lret
ljmp
cmpsb
sub
insb
add
and
sbb
cmp
nop
pop
sub
xorb
inc
das
rcrl
sbb
mov
jmp
int
push
jl
imul
loope
repz
mov
loop
test
cld
dec
lods
mov
xchg
mov
inc
ljmp
push
lds
jp
mov
lahf
xchg
dec
xor
mov
testl
fsts
cmp
aam
cmc
lret
mov
bound
adc
lret
ss
pop
pop
adc
mov
pusha
jns
jmp
repnz
cs
dec
or
fs
gs
and
cld
loopne
push
adcl
lods
iret
aam
push
aam
pop
mov
clc
insl
sub
add
es
and
jne
add
xchg
dec
stc
js
mov
xor
dec
lods
mov
dec
out
sub
inc
lcall
addr16
cmpb
xor
mov
loopne
ljmp
call
addr16
xchg
or
dec
fs
cmp
lods
xchg
xchg
cmp
lock
cmp
les
xchg
cli
mov
xchg
mov
push
stos
shrl
cld
mov
in
stc
jb
mov
inc
sbb
jne
push
fisttpl
sbb
and
in
insl
mov
pop
imul
addr16
aad
and
aas
adc
pop
cmp
imul
push
push
xchg
int
outsb
sub
mov
outsb
addr16
mov
mov
mov
jg
add
pusha
pop
sub
mov
stos
cmp
xchg
jb
cmp
outsb
clc
mov
fucom
cmpl
mov
mov
aaa
lods
clc
dec
cmp
fldt
test
jb
inc
inc
dec
cwtl
les
mov
in
mov
mov
or
lods
loope
xchg
xchg
das
outsl
xchg
jnp
xor
lahf
cmp
cli
push
into
sti
add
dec
nop
icebp
inc
jle
sub
mov
out
mov
jp
lret
sarl
push
xchg
xor
outsb
pop
lea
lods
add
xchg
test
xchg
jnp
not
mov
xchg
sarb
fsts
jno
jle
xor
int
push
mov
mov
mov
lods
xchg
sbb
cmpsb
pop
jno
cmp
xor
scas
clc
in
in
mov
hlt
insb
xchg
ds
mov
enter
jg
jg
or
ret
iret
gs
push
inc
aam
rcrl
mov
adc
ds
adc
dec
pop
sarl
cmc
fbstp
cmpsl
cwtl
or
ds
jo
in
call
and
push
into
outsl
test
lock
push
cmp
mov
jle
or
lret
push
mov
dec
mov
lods
sarb
and
sub
cmp
bound
adc
jmp
mov
rclb
fs
push
jne
test
pop
ss
jnp
jae
jg
push
mov
fisubs
push
push
sti
push
mov
lods
mov
pop
sbb
dec
call
in
ljmp
mov
aaa
jecxz
cmp
jecxz
fs
shl
fisttps
adc
dec
or
or
sub
sbb
scas
ret
jbe
fcmovu
add
popf
jb
cld
fnstcw
into
fwait
xchg
ljmp
leave
xlat
lret
aas
dec
sbb
push
jp
aaa
leave
cmc
xchg
cmpsb
outsl
mov
jbe
jne
ret
adc
mov
cmp
cltd
idivb
mov
dec
dec
lea
daa
xor
lods
pop
pop
cs
and
adc
jne
cmpsb
cs
mov
clc
icebp
mov
stos
fs
cmpb
add
xor
outsl
cmpsb
cltd
mov
sti
out
push
loop
cmp
cmp
addr16
ljmp
sbb
xchg
pop
jge
ja
ret
pop
aad
sub
cmp
cmpsl
mov
ja
ss
loop
cld
pop
ds
push
outsb
in
mov
aam
inc
xchg
sub
test
out
ss
sub
lods
js
cltd
xlat
push
std
fs
in
or
mov
rep
sub
pop
or
and
jle
icebp
cli
xor
pop
dec
adc
dec
mov
mov
adc
cs
cmp
or
or
jno
mov
adc
mov
push
adc
bound
lock
sub
daa
jmp
pusha
push
xlat
mov
xor
add
fidivl
mov
xchg
xor
push
in
inc
and
pop
sbb
das
push
arpl
xlat
mov
sbb
pop
sahf
scas
mov
mov
or
mull
scas
clc
sbb
shlb
lret
int3
mov
xor
nop
xor
or
jo
mov
sarb
hlt
notl
pop
fstpl
je
rdrand
or
inc
cmp
rcrl
leave
sub
add
inc
scas
daa
call
mov
dec
outsl
nop
mov
jge
cmp
push
imul
jl
jle
mov
sarl
rclb
xlat
clc
mov
pop
push
sbb
fwait
cmpsl
hlt
fsubrl
mov
xor
xor
ds
outsl
cwtl
push
into
movsl
out
ss
xor
imul
in
sbb
push
fdivrs
jg
inc
and
mov
cmp
pop
dec
cmp
inc
pop
and
pop
or
pop
adc
xor
and
out
orb
adc
sub
inc
mov
dec
mov
jo
mov
ljmp
test
out
xchg
sarl
mov
inc
xor
into
lahf
sub
push
xchg
or
enter
hlt
rcr
dec
dec
sbbl
push
push
xchg
loopne
call
hlt
test
pop
and
sbb
or
xor
lret
xor
insb
mov
loope
mov
out
adcl
xchg
cs
shlb
sarl
orb
pop
outsb
leave
aaa
cwtl
jne
cmp
mov
mov
jne
mov
add
shll
push
scas
nop
or
loope
es
loop
out
dec
cmpsb
push
xchg
push
add
and
addr16
mov
inc
mov
in
jmp
jmp
add
add
or
add
jecxz
mov
aaa
lods
pop
pop
push
dec
inc
lock
mov
push
or
cmp
clc
xchg
mov
jecxz
and
inc
push
mov
sub
mov
xlat
jns
fnsave
jae
xor
lahf
fiaddl
fwait
cmpsl
push
flds
jns
lea
push
cltd
subl
xor
push
outsb
pop
sbb
lret
rclb
sub
cs
push
xchg
cltd
testl
rol
ficoms
cld
pop
cmp
inc
xor
jnp
push
shrl
cmp
inc
cs
fdivrl
mov
lahf
or
inc
cmp
pusha
adc
les
dec
push
push
pop
inc
xchg
mov
sub
rcrl
pushf
or
and
xor
bound
adc
call
push
ja
xchg
fimull
mov
pop
insl
loopne
test
lret
cli
loope
adc
inc
fwait
xchg
int
shlb
in
inc
pop
hlt
or
sub
mov
lock
adc
mov
inc
and
imul
scas
add
jb
loope
cmp
sbb
mov
adc
js
mov
iret
xor
cmp
or
mov
hlt
inc
and
loop
or
mov
or
popa
cld
popa
xor
jb
inc
jb
mov
call
std
cmp
push
aam
into
js
dec
xlat
or
xchg
pop
inc
inc
ja
ljmp
int3
ja
scas
mov
jg
mov
jecxz
mov
addr16
int
dec
std
xor
xchg
cld
mov
dec
xchg
sbb
aad
fiaddl
jmp
jb
ja
repnz
cs
mov
hlt
stc
adc
aam
pop
push
push
sbb
inc
adc
mov
dec
cmp
inc
pop
or
rcrl
sub
stos
shlb
ret
dec
jmp
stos
mov
and
inc
das
mov
sarl
mov
push
pop
lock
mov
pop
cmp
adc
outsb
fwait
adc
jg
fs
xor
xchg
jle
or
sub
call
pop
mov
push
adc
push
je
enter
push
testb
fsubrl
and
in
cmp
push
jbe
iret
jmp
cwtl
dec
stos
mov
test
dec
mov
push
jae
add
cmp
jle
test
cmp
cs
gs
in
xchg
mov
or
add
orb
jns
inc
jns
cmp
cs
mov
xchg
dec
xchg
sub
ret
inc
mov
jne
mov
bound
pop
test
sub
cli
push
cmpsl
jmp
adc
inc
mov
into
push
mov
sub
mov
pusha
jno
int
sbbb
mov
pop
sbb
mov
lods
in
xor
lcall
stc
mov
movsb
ds
cs
push
sub
mov
fidivrs
mov
lods
lock
xor
mov
mov
mov
xor
insb
mov
cmpl
add
add
jecxz
insb
fcmovnu
aaa
nopl
je
shlb
out
dec
pop
or
movsl
je
test
imull
sbb
loop
test
clc
xchg
inc
addr16
dec
mov
fcoml
stos
fstps
call
push
pop
push
xor
push
or
hlt
dec
scas
int3
cmc
inc
out
cmp
cwtl
daa
jmp
xor
mov
xlat
lock
inc
lret
mov
sub
mov
mov
loopne
test
mov
add
lods
jne
sbb
jb
hlt
pop
dec
test
jle
and
outsb
jl
fiaddl
sbb
sub
xchg
into
imul
jo
testb
cs
push
mov
test
stos
int3
loope
roll
lods
sahf
adc
scas
testl
gs
mov
or
aas
loopne
jmp
pop
pop
xchg
fsts
int
out
add
jbe
pop
pop
aas
push
sub
mov
shrl
shrl
push
pop
lea
jno
pop
cmpsl
jmp
xchg
jae
xor
aaa
js
xchg
jbe
sub
movsb
aaa
jmp
imul
xor
xlat
pop
inc
or
sbb
mov
xlat
mov
mov
cmp
lret
in
loopne
int3
jb
xchg
push
jecxz
and
lret
sbb
push
mov
xlat
xlat
shlb
sahf
iret
inc
mov
data16
je
fsubrl
rcr
jne
inc
roll
aaa
and
dec
and
jnp
cmpsl
imul
iret
les
mov
jge
pop
add
ret
dec
and
out
mov
mov
mov
mov
xor
dec
and
jl
adc
mov
mov
lahf
das
repz
scas
xchg
add
pop
aas
xlat
push
lret
or
cmc
fiadds
mov
xor
pop
andb
in
out
sbb
and
dec
pop
dec
mov
jae
lock
mov
loope
lods
int3
mov
std
jb
mov
and
cltd
stc
push
add
shll
dec
jns
adc
insl
adc
pop
lds
cltd
cmp
repz
jno
xbegin
std
sbb
mov
aas
mov
adc
dec
pop
in
imul
mov
add
popa
add
repnz
sbbb
or
scas
sbb
shrb
pop
shll
or
lds
gs
mov
fbld
mov
out
sbb
xchg
popf
fwait
mov
xlat
jg
and
fcomps
cmp
pop
les
lds
cld
in
popl
lods
mov
pop
mov
mov
fwait
xchg
cs
add
xchg
pop
rolb
shll
push
mov
or
add
imul
lock
js
insl
inc
cmp
rclb
mov
cmp
cmpsb
enter
dec
movsb
dec
pushf
popa
mov
mov
and
inc
ret
fiadds
xor
dec
add
mov
jb
scas
fidivl
ss
jl
add
je
daa
mov
into
aam
int3
aas
inc
jo
je
es
inc
sbb
inc
sahf
jge
xchg
out
pop
stos
leave
inc
lock
out
aas
fdivs
jo
jge
add
cltd
or
xchg
push
ja,pn
clc
aad
pop
xchg
je
push
mov
inc
and
in
int3
fadds
jo
stos
lret
ret
cmpsb
or
fsts
rcll
shl
cltd
xor
mov
pop
movsb
fucomi
call
mov
add
das
je
addb
push
popa
sbb
mov
aam
in
test
pop
jp
test
lret
int
cmc
ljmp
adc
shrl
aas
daa
iret
inc
mov
pop
cmpsl
pop
lds
or
jns
popf
out
movsb
jo
xor
insb
jmp
std
loope
ret
xor
js
cmpsb
insb
cwtl
clc
std
ds
out
sbb
out
gs
jb
mov
andl
je
js
pop
mov
sbb
inc
fadds
push
and
mov
push
inc
push
jge
call
push
jmp
dec
xor
mov
jmp
jbe
es
sbb
cmpl
and
imul
cmpsl
jp
daa
or
fmuls
shl
pop
stos
ss
add
loopne
clc
ja
mov
cwtl
push
sub
cli
mov
add
sbb
sbb
mov
sub
loop
jmp
cmc
sub
je
stc
shl
out
cltd
push
inc
push
sbb
leave
or
div
add
jle
cmp
ffree
lods
cmp
mov
std
int3
mov
insl
sub
imul
scas
loope
adc
jae
movsb
js
mov
pushf
std
push
xchg
inc
icebp
dec
call
add
or
fcomip
movsb
stos
and
call
inc
sub
mov
loopne
xorb
lea
test
push
test
mov
mov
adc
in
xor
insb
pop
jbe
mov
pusha
pop
cmp
xchg
push
mov
sub
mov
in
and
push
test
cmp
or
mov
inc
daa
xchg
repnz
push
mov
pop
ret
lahf
sbb
jns
pushf
mov
in
loop
enter
pop
cmp
int3
sbb
fldcw
mov
insl
int
and
pushf
jp
arpl
loopne
mov
clc
pop
sub
cmp
add
in
fildll
fadd
inc
int
xor
lods
sahf
shlb
out
clc
fimull
enter
fcomps
mov
jnp
or
fwait
mov
addl
or
andl
inc
push
jbe
imul
cmp
cmp
mov
hlt
and
das
jno
test
and
push
sbb
iret
sbb
mov
outsl
sbb
sti
adc
icebp
and
scas
cmp
out
clc
das
jl
rcrl
mov
jo
std
mov
xchg
fmuls
jae
gs
rcl
or
xchg
jb
mov
xchg
ror
push
adcb
je
add
xor
test
ret
sub
mov
cmp
gs
std
or
out
mov
sub
pop
dec
in
pop
cmpsb
push
mov
jecxz
daa
pop
call
mov
cld
je
mov
fstl
mov
xchg
int3
test
jns
push
sub
fnstcw
and
scas
pop
xchg
push
cmp
dec
imul
shl
ljmp
mov
sbb
leave
pop
dec
and
addr16
mov
nop
scas
inc
in
xor
lahf
inc
scas
fimull
cmp
adc
enter
sti
dec
pop
dec
pop
push
xchg
shrb
cmpsl
push
pop
mov
lret
mov
jmp
or
dec
lea
pop
lret
jne
movsl
cmc
and
jp
mov
fcoml
ficoml
loope
bound
imul
lahf
mov
sarl
fisttpl
sbb
mov
in
scas
lea
inc
mov
mov
sbb
cmp
mov
add
dec
lods
inc
out
cmp
clc
les
es
add
mov
inc
leave
and
sub
pop
push
leave
pop
pusha
and
out
cwtl
stos
mov
sub
add
repnz
jge
scas
push
jl
nop
jmp
into
test
push
into
mov
cli
sbb
xor
and
popa
shlb
loopne
push
dec
aam
insl
out
enter
sahf
repz
incl
push
jbe
int3
pop
stos
cmp
sbb
mov
aad
insl
jmp
fwait
adc
inc
out
int3
out
mov
add
std
das
mov
sub
jl
pop
add
or
dec
out
dec
movsb
stos
adc
cmp
adc
push
adc
dec
cmpl
orl
inc
add
xchg
mov
jnp
sub
rolb
adc
xchg
xor
outsl
jb
sti
push
dec
push
mov
dec
mov
popa
data16
inc
filds
adc
xor
shlb
mov
mov
push
nop
pop
or
out
repz
inc
adc
inc
xchg
or
insb
out
loop
mov
mov
jmp
out
gs
mov
xlat
mov
dec
sbb
xor
inc
jae
add
sub
ret
sbb
dec
aam
insb
jg
das
dec
nop
lock
es
jnp
les
ds
push
xlat
es
fsubs
and
pop
inc
bound
and
inc
scas
add
xor
pushl
rclb
arpl
scas
sub
cmp
inc
into
inc
stos
faddl
fs
addr16
dec
shrb
jl
xchg
sbbl
push
jp
and
idiv
arpl
jg
jae
push
clc
or
shrb
mov
ficomps
or
adc
shr
push
jno
lock
inc
repnz
pop
shl
jge
shll
nop
xchg
mov
hlt
pop
mov
ljmp
push
pop
mov
xchg
enter
mov
sbb
std
stc
addr16
add
aaa
sti
daa
push
nop
mov
or
loop
insl
cmp
adc
arpl
lock
int3
push
into
mov
ret
jecxz
aam
ljmp
es
imul
fstpl
and
or
push
cmc
fcmovb
mov
test
jmp
push
dec
pop
fs
and
sub
rclb
push
test
pop
shl
pop
xchg
out
test
cmp
fistpll
xor
popa
xchg
mov
repz
ret
push
or
dec
dec
pop
fisubl
aam
push
pop
das
jae
iret
sbb
mov
ss
dec
fwait
add
jecxz
test
imul
mov
cwtl
pop
iret
sti
in
sub
push
cmpsl
leave
fs
push
dec
xlat
dec
int3
add
inc
out
and
or
scas
dec
std
aad
pop
jb
call
inc
mov
jns
push
loopne
sti
jl
lods
xchg
cmpl
stos
pop
xor
test
notb
mov
xchg
push
pop
and
xchg
mov
add
dec
or
pop
mov
movsb
push
mov
or
in
enter
das
iret
pop
cmp
pushl
fidivrl
mov
or
push
inc
lahf
lods
into
jo
lods
mov
and
mov
add
mov
pop
add
outsl
in
sub
adc
jmp
dec
rcll
sbb
ret
mov
mov
xlat
inc
mov
dec
adc
xchg
test
std
bound
xchg
pushf
jg
ljmp
jnp
mov
bound
dec
dec
movsl
jmp
pop
outsb
jp
inc
xchg
inc
mov
push
push
lret
cmp
inc
pop
add
push
shlb
pop
mov
jnp
fdivrl
inc
repnz
xchg
mov
mov
add
sti
or
lret
icebp
jns
mov
mov
cmc
lea
xchg
in
loop
cmp
or
cli
push
test
push
in
out
out
dec
lock
mov
mov
fisubl
push
and
lcall
adc
insb
outsl
pop
mov
roll
sarl
cld
ret
mov
sbb
inc
xor
ret
mov
in
add
lods
pop
and
arpl
dec
sbb
mov
add
cmc
shlb
mov
xchg
jecxz
dec
cmpsl
test
pop
lea
test
jnp,pt
add
pop
stc
mov
jmp
andl
call
push
and
clc
pop
inc
hlt
mov
push
scas
iret
pop
and
cmp
add
add
sahf
stc
mov
mov
push
jnp
andl
jo
or
loopne
jnp
jbe
xchg
aaa
insl
sub
es
hlt
sbb
dec
cli
pop
mov
jmp
test
int
mov
jp
ds
xchg
in
add
ficompl
mov
mov
addr16
mov
in
imul
jg
pop
inc
popf
cmp
jnp
add
push
stc
ljmp
jecxz
mov
out
fsubrl
data16
shl
cmp
xchg
movsb
js
xchg
and
jecxz
add
pop
dec
iret
or
lock
rcrb
lret
test
fstpl
jae
dec
in
cli
lods
xor
jmp
and
dec
loop
inc
std
jbe
mov
outsb
iret
sbbl
xor
lock
add
push
or
mov
or
daa
mov
xlat
pusha
cwtl
les
mov
dec
loop
dec
mov
shlb
push
mov
nop
jge
gs
daa
es
out
hlt
dec
loopne
sbb
ljmp
jb
mov
scas
ljmp
mov
in
and
jnp
adc
rol
dec
cmp
cmp
cmp
add
mov
jne
dec
imul
shll
fcomip
out
lahf
add
adc
adc
aaa
adc
xor
mov
mov
outsl
test
std
fucomip
lods
rol
dec
sbb
push
and
adcl
dec
adc
cmp
sub
rorb
jmp
dec
in
xchg
stos
inc
in
arpl
repz
es
fcmovu
stos
xor
and
inc
jno
inc
outsl
daa
cmp
iret
mull
sbb
or
xorb
aaa
mov
test
outsl
sbb
in
mov
cs
gs
imulb
cltd
aaa
fwait
cmp
mov
pop
and
lea
sub
cmp
shll
adc
divl
sahf
jno
lods
or
and
xlat
loope
sbb
loopne
loopne
add
jle
test
cmp
shl
loop
out
push
xchg
cmp
int
loop
mov
mov
xor
xchg
pop
xchg
imul
pop
mov
or
xchg
add
ret
sti
sahf
inc
xor
mov
jmp
pop
mov
mov
xchg
nop
notl
pop
in
mov
mov
adc
jo
cmc
mov
out
push
or
rcrb
sbb
sahf
adc
mov
jno
dec
mov
test
cltd
cmpsb
sbb
mov
jns
fs
es
shlb
lret
call
in
add
orl
ret
aad
xchg
add
cmp
loop
mov
xchg
rolb
mov
push
dec
and
adc
outsb
mov
fdivr
mov
mov
js
adc
inc
jne
shll
fnsave
xchg
pushf
ss
xchg
dec
cwtl
loop
xchg
xchg
ds
xor
lds
push
xor
ret
lret
add
sub
pop
test
mov
inc
and
mov
test
ficomps
fisubrs
cmp
lods
mov
mov
pusha
push
in
push
mov
sbb
jle
jne
fs
addr16
push
ret
xchg
iret
je
push
fistpl
pop
and
jne
and
pushf
mov
inc
jb
mov
mov
and
jecxz
sub
mov
adc
lods
lea
dec
add
cmp
push
mov
clc
lcall
mov
push
sti
fcoms
cli
ret
or
xchg
dec
lock
push
dec
mov
pushf
iret
out
sub
outsb
inc
ljmp
sub
jne
insl
mov
les
push
out
push
es
dec
adc
scas
jbe
inc
ljmp
js
mov
outsl
mul
jae
adc
xlat
pop
setp
icebp
fs
loopne
jle
das
adc
std
lods
popa
jae
pop
inc
lods
dec
sbbb
jl
jle
inc
pop
out
ja
shl
aaa
dec
loope
inc
jl
inc
xor
sbb
loopne
jg
add
out
inc
adc
pop
push
fwait
cmp
shlb
sub
push
xor
push
mov
dec
in
sbb
clc
repnz
cmpl
and
inc
mov
mov
out
stos
xchg
or
or
hlt
cmp
mov
mov
data16
mov
rol
pop
and
arpl
xchg
std
dec
pop
adc
jle
mov
test
out
or
jmp
enter
xchg
mov
popa
not
inc
jecxz
mov
mov
or
enter
cmp
jns
dec
adc
fbstp
mov
pop
adc
icebp
pop
lea
sbb
xchg
enter
ret
pop
jle
xchg
mov
mov
mov
mov
dec
out
adc
push
pop
aaa
xchg
xor
or
xchg
addr16
and
incb
push
push
inc
sbb
xorl
mov
mov
frstor
and
mov
popf
addl
bswap
pop
aam
mulb
das
xlat
and
xchg
cwtl
and
jmp
fiaddl
popf
cli
push
xchg
inc
mov
ja
pushl
into
shr
push
sti
out
out
xor
int3
cmp
add
jle
ret
decb
insl
out
adc
or
out
imul
in
bound
cmp
stc
ficoml
jno
jle
scas
shl
idivl
cmpsb
out
jbe
in
xchg
sbb
adcb
add
add
push
jmp
add
push
or
fucomi
daa
pop
cmp
or
mov
imul
jae
out
sub
das
test
fcoms
out
adc
fwait
mov
mov
icebp
jge
inc
movsb
sub
dec
adc
das
test
add
xorl
xor
push
jo
add
sbb
xor
jge
inc
int3
lods
dec
xchg
leave
add
jbe
dec
out
imul
push
in
sbb
add
scas
pushf
mov
loop
mov
mov
push
sti
pop
ja
add
and
arpl
jg
es
push
mov
pop
add
lea
xor
mov
ja
jnp
pop
ljmp
push
jmp
and
icebp
and
jnp
add
or
mov
adc
mov
loop
add
nop
dec
lds
adc
fnsetpm(287
dec
aaa
lret
sbb
xchg
out
cli
mov
xchg
inc
aad
xlat
jne
jmp
repz
hlt
inc
notl
adc
lods
out
call
cmp
lret
or
pop
fbstp
rorb
ret
out
cmpsb
cmp
fcompl
lret
mov
fdivs
dec
sbb
roll
fisttps
lahf
push
in
mov
push
mov
int
fstps
fwait
or
outsl
dec
stos
sahf
inc
enter
int
in
sbbl
int
push
sbbb
xchg
mov
ret
outsb
cmp
dec
sahf
in
jne
mov
adc
std
cmp
outsl
sbb
ja
loop
fisttps
sub
js
mov
mov
sbb
movsl
int3
shrd
pop
stos
data16
and
jbe
dec
mov
icebp
cld
xchg
cmp
gs
test
inc
and
loope
pop
pushf
inc
cld
testl
movsl
sbb
and
enter
xor
push
cmp
rclb
push
shll
xor
mov
insl
and
push
xor
sub
dec
sbb
push
sub
sub
push
lods
xor
out
shll
push
inc
into
outsb
push
dec
fcoms
cmp
mov
sbb
push
into
add
gs
mov
mov
lods
pop
adc
enter
arpl
xor
ret
jp
repz
sub
inc
cmp
push
xchg
inc
loope
xor
ror
xchg
fs
xchg
sub
loop
jp
sbb
aaa
mov
int3
fimull
je
pop
lret
pop
repz
stos
mov
jmp
dec
in
cmpsl
arpl
inc
ds
mov
insb
xor
mov
shll
push
insl
xor
std
lods
mov
scas
std
test
xchg
in
xchg
sub
mov
lds
popa
cli
dec
inc
xorb
jae
jns
xorb
push
add
das
cmp
clc
mov
pushf
xchg
adc
lods
lock
ret
enter
mov
imul
aaa
nop
aas
inc
dec
rep
push
sbb
lahf
mov
xchg
jge
xor
imul
in
js
sbb
jno
loope
xchg
dec
test
inc
nop
imul
ja
bndldx
outsl
inc
xchg
int3
loopne
loopne
pop
jmp
cmp
xchg
push
cmpsl
sahf
nop
sub
jp
jns
ret
and
lahf
dec
pusha
leave
pop
cltd
ret
dec
mov
and
notl
jge
movsb
inc
mov
in
fmuls
inc
out
lock
mov
add
push
ljmp
int
lret
cld
cmp
inc
outsl
rcll
pop
ja
sbb
sub
pushf
cwtl
mov
xor
cwtl
pop
sbb
in
sub
lock
sub
jbe
inc
mov
lahf
or
mov
into
adc
gs
insl
lock
fst
imul
loop
mov
fistpl
push
rdmsr
jmp
add
add
dec
adc
mov
arpl
adc
sbb
gs
lea
xchg
dec
popa
imul
imul
fistl
push
xchg
nop
sub
cli
cmp
add
mov
mov
sub
dec
fiaddl
add
cmpsb
fsts
mov
push
sbb
sub
inc
dec
test
inc
mov
mov
roll
xchg
iret
mov
inc
or
repnz
add
add
dec
scas
cmpsl
rcrl
xor
fs
int
jnp
pop
bound
adc
add
cmpsb
fwait
sbb
adc
jb
push
push
push
data16
dec
cmp
loope
or
sbb
adc
fcompl
push
fsubrl
mov
testl
pop
sbb
inc
mov
and
int3
dec
stc
or
mov
mov
dec
rcrb
and
push
add
loop
pop
mov
cmp
or
int
iret
int3
cmpsb
inc
push
jne
mov
adc
inc
data16
adc
mov
testb
js
sub
mov
mov
ffree
xchg
and
aam
sbb
fadds
sti
and
cli
add
dec
xchg
outsl
insb
repnz
enter
mov
xchg
add
cmp
cltd
shrb
popa
in
inc
lret
orl
ja
lret
inc
add
aas
lea
inc
xor
inc
mov
movsl
ret
inc
mov
fs
adc
push
pop
sub
jl
inc
inc
cmp
mov
subb
sub
sub
bound
dec
ror
lock
mov
pop
ret
bnd
insl
mov
in
pop
into
mov
push
stc
rorl
in
pop
out
lret
mull
fstl
insb
dec
out
fnstsw
xlat
dec
jne
xor
fs
pop
cmp
and
fcmovnbe
in
jg
adc
repz
sub
orl
add
in
and
fnstenv
ja
and
int
jmp
sub
repz
int3
ret
leave
call
cmpsl
add
addl
add
mov
aaa
and
lret
sub
mov
xchg
mov
cld
mov
and
rclb
mov
pop
or
push
push
pop
mov
mov
mov
call
lea
jae
shl
cmp
sbb
sbb
popf
jo
pop
xchg
sahf
xor
cltd
sub
inc
jo
sahf
xor
cmpb
stos
cmc
mov
pop
mov
pop
or
mov
xor
dec
push
sub
add
mov
call
out
sub
push
or
sub
movsb
call
loop
stos
aas
add
push
xor
jne
loopne
cmp
push
repz
cmp
mov
js
cmp
pushf
mov
movsl
jns
or
imul
popf
lret
test
call
fwait
mov
push
lret
cmp
out
roll
mov
add
mov
js
mov
sti
out
popf
xchg
lcall
pusha
inc
movsl
or
repnz
xor
popa
bound
int
inc
xchg
lret
ljmp
das
push
push
pop
int3
adc
insl
xchg
stos
mov
mov
and
xchg
mov
push
fstps
repz
and
mov
jns
jmp
imul
cs
sbb
and
in
jne
andb
cwtl
inc
movsl
pop
aaa
lods
add
cmp
and
fs
and
dec
jl
sbb
into
addr16
jne
lahf
inc
ljmp
sub
gs
shll
fwait
cmpsl
mov
xor
out
rorb
xchg
sbb
mov
sub
mov
add
sub
jns
sub
sub
jns
outsb
shrl
stos
in
inc
add
lods
and
mov
shrl
iret
cwtl
mov
xor
sub
jns
mov
jne
add
inc
pushf
jae
ja
mov
jge
mov
jno
and
add
std
lret
loop
scas
push
cmp
mov
ljmp
jae
dec
jbe
in
adc
cmc
push
orl
cwtl
jb
in
je
add
xchg
pop
lcall
fildll
push
or
adc
js
sti
rcr
ret
jb
mov
incl
pop
add
decb
lea
das
pop
test
fnstenv
mov
imul
xor
sbb
and
jmp
dec
or
pop
inc
or
pushf
fstl
aad
xchg
js
out
pop
xor
addr16
fisttps
hlt
sbb
mov
rorb
xchg
outsb
jnp
xchg
testb
cmpb
scas
pop
shl
out
cmp
aad
out
test
js
inc
fucom
sti
mov
and
mov
adc
daa
xor
pop
lods
sbb
cmpsb
in
popa
sbb
ds
leave
mov
sbb
nop
icebp
dec
lods
frstor
inc
inc
andl
movsb
xchg
push
mov
cwtl
das
pop
int3
aam
movsb
adc
mov
pop
add
je
out
add
and
mov
mov
js
out
push
add
repz
in
dec
aad
mov
mov
ss
int3
sub
fcoml
or
lods
dec
inc
add
popf
xchg
into
in
insl
jmp
ficoms
cmp
arpl
pop
inc
add
cwtl
jp
mov
mov
imul
movsb
ja
setl
mull
xchg
es
cli
data16
gs
imul
jno
inc
ret
mov
test
pop
ljmp
adc
daa
ret
and
mov
mov
lock
adc
add
sbb
stc
fists
and
pop
or
cltd
fwait
lahf
mov
add
dec
cmpsb
popf
ss
adc
jp
cmp
out
aam
xchg
hlt
inc
test
movsb
jb
cmpsl
sbb
inc
lods
add
fwait
or
jecxz
fdivrp
lret
and
add
ret
adcl
adc
mov
sub
and
stc
lcall
push
and
movsb
int
data16
sahf
push
movb
inc
addb
test
adc
inc
outsb
jae
xchg
aaa
fmull
adc
jge
imul
inc
mul
addl
fadd
ret
cld
or
cmp
push
mov
inc
pop
pushf
add
mov
sub
jne
ret
ss
jnp
fmulp
adc
add
outsl
comiss
je
or
add
add
mov
mov
pop
cmp
push
test
mov
mov
jns,pt
loopne
int3
mov
pop
push
gs
rolb
push
push
xchg
stc
out
push
std
mov
outsl
push
mov
fidivl
xchg
pop
scas
jge
or
push
push
add
cmpsl
movsl
or
jmp
and
mov
push
mov
insb
mov
in
push
std
or
xchg
cmp
out
inc
leave
ja
repz
jecxz
ret
mov
jae
in
fnstenv
test
negb
mov
fwait
inc
hlt
fildll
mov
andb
test
stos
dec
mov
frstor
fwait
in
jne
shrb
dec
push
shl
inc
dec
loope
xor
pop
cmp
repnz
jo
fbld
mov
cmp
mov
pop
cwtl
pop
inc
add
stc
cmp
adc
loop
loop
sahf
arpl
enter
maxps
roll
daa
call
pushf
setne
les
call
pushf
fadds
and
pop
mov
and
xchg
out
ljmp
imul
xchg
push
das
lods
pop
and
pushf
pop
cmc
or
es
pop
lret
sbb
fisubl
jecxz
jmp
ret
test
adc
and
mov
jmp
clc
popa
das
ret
lea
inc
mov
push
inc
or
xchg
xchg
adc
in
call
fs
mov
seta
or
aas
add
push
jbe
dec
mov
cmp
enter
mov
dec
lock
push
xor
adcb
cmpsl
lea
rcr
movb
or
jnp
cmp
stos
sub
subl
out
mov
div
or
fimull
cmp
lret
or
ret
insb
pop
dec
aad
jne
enter
and
lods
scas
ret
cltd
lods
pop
movl
adc
lods
aad
cli
push
popf
xchg
movsl
pop
add
rcll
shlb
lods
dec
push
jl
rcll
jae
sub
adcb
or
push
sbb
inc
xor
mov
jnp
in
mov
rorl
jae
sti
das
ljmp
sub
aam
inc
test
psubusw
fcomip
dec
mov
sub
pop
adc
adc
jmp
dec
cmp
jecxz
jp
and
outsb
jle
inc
or
test
icebp
pop
mov
sbb
mov
jno
shll
adc
sbb
stos
dec
loope
mov
jo
xchg
sub
xchg
pop
add
lret
jo
test
add
fimuls
xor
push
mov
push
or
fs
sub
jae
and
dec
dec
orl
push
sub
lcall
bound
sbb
shll
jnp
lahf
and
sub
pusha
cli
push
push
sarb
xchg
adc
shrl
flds
shlb
imul
stos
mov
scas
mov
cmp
rep
fistpl
xchg
subl
aas
inc
cli
dec
sub
cli
daa
cltd
pop
mov
loopne
and
mov
dec
aas
retw
xor
or
daa
in
sbb
add
or
sub
mov
dec
sbb
rcrl
dec
add
loopne
cwtl
cmpl
lock
ficoml
mov
clc
daa
sub
fwait
cwtl
sub
enter
lret
repz
dec
add
dec
and
sti
in
lods
mov
xor
jle
cmp
rcl
dec
arpl
aam
aas
scas
fsubrs
pop
shrl
or
push
outsb
pop
mov
inc
cwtl
sarb
test
filds
jp
dec
les
xor
mov
cmp
repnz
xor
inc
fwait
inc
add
mov
lret
sub
sub
scas
mov
outsb
mov
mov
enter
lahf
pop
mov
or
ret
repnz
sbb
mov
or
xlat
mov
dec
mov
pop
and
test
dec
xor
fwait
sub
cld
int3
mov
sti
cmc
mov
pop
cmpb
test
add
jb
sub
add
inc
loopne
negb
pusha
cld
pop
mov
scas
mov
push
pop
jecxz
dec
ljmp
lods
imull
imul
adc
and
sbb
bound
dec
pop
sbb
push
fdiv
mov
aad
sbbl
sahf
jmp
js
movsb
ret
xor
pop
dec
out
jb
pusha
lret
and
inc
xlat
sbb
fs
bound
aaa
fnstenv
sub
cmp
jle
addr16
rorl
xchg
mov
and
fcmovu
mov
push
aad
out
arpl
test
sbb
insb
pop
xchg
dec
cmc
loope
pop
rol
aas
jl
movsl
inc
out
aam
fs
mov
jge
cmp
pop
jge
jg
les
jns
rcl
sahf
adc
rclb
xchg
inc
sbb
stos
xor
mov
mov
in
test
lock
bound
sahf
cmp
mov
adc
sar
rolb
popf
lret
pop
in
lds
hlt
cld
hlt
je
dec
dec
call
xchg
cmc
loop
ljmp
push
xchg
lcall
xor
xor
dec
dec
mov
lret
das
lahf
rolb
add
adc
push
adc
mov
sub
jge
pop
lock
push
test
adc
xchg
push
pop
stos
cmp
sbb
xchg
xor
adc
stc
stos
cmp
mov
pop
mov
insb
cmp
xchg
call
int3
sbbb
sbb
and
pushf
dec
sub
jmp
popa
jmp
push
sbb
mov
mov
cltd
xadd
mov
enter
ja
test
cmc
sub
push
imul
jp
mov
mov
inc
pop
pop
jl
and
push
imul
ss
and
pop
mov
push
jl
jno
testl
stos
aam
das
jle
jge
push
in
push
or
popl
or
lock
mov
call
cmpsb
mov
pop
mov
sub
std
leave
add
clc
rclb
push
inc
into
push
lcall
mov
loopne
adc
call
cwtl
adc
jecxz
or
notb
test
in
mov
xchg
xchg
add
mov
add
jecxz
mov
aam
jmp
add
pop
cmp
or
xor
cs
add
test
cmp
mov
lock
and
sbb
adc
pop
hlt
adc
ds
jb
movsl
and
push
push
rcrl
jg
mov
fisubl
push
negl
lock
inc
jne
pop
scas
insl
fsubrl
loop
movsl
jo
in
dec
xchg
jne
adc
jne
jo
adc
imull
mov
popa
pop
jne
bound
shll
lds
or
div
loope
test
add
sbb
xchg
jo
in
ficoms
add
sub
loop
shrl
hlt
fcomps
stos
or
push
nop
xor
sbb
sbb
mov
in
mov
or
jge
pop
ja
adc
jl
cld
fldenv
out
pushf
push
or
mov
je
xchg
loopne
out
in
repz
jns
jne
nop
cmp
ja
xlat
into
stc
adc
add
int
mov
pop
pop
add
sub
xchg
mov
in
out
sbb
lods
ss
adc
ret
adc
sub
icebp
pusha
enter
mov
and
shlb
cmc
pop
enter
sub
mov
sti
pushf
dec
inc
repz
xchg
and
pop
in
imul
jp
std
dec
pop
out
cs
dec
push
dec
inc
andl
add
lods
ret
test
test
imul
mov
popl
xchg
ror
test
ljmp
mov
adc
cli
fcompl
push
cltd
xchg
das
add
inc
ss
into
jecxz
fs
mov
test
push
jge
outsb
ret
push
xchg
push
and
loope
sub
addr16
lock
es
int3
loop
lds
stc
cwtl
dec
rcl
xchg
push
addb
mov
inc
lahf
inc
cmp
adc
xchg
xchg
lcall
mov
push
push
jo
data16
or
pop
out
jnp
subl
dec
imul
adc
fsubr
test
jno
push
jl
movl
lret
fnstenv
xchg
dec
sub
xchg
pop
pcmpeqd
and
int
adc
stc
add
and
adc
xchg
rcr
nop
and
mov
xchg
xchg
mov
cmpsl
fisttps
and
fcom
outsl
xchg
mov
sbb
enter
sub
jge
aas
xor
push
orl
bnd
and
es
mov
shrl
inc
out
or
cmp
js
cs
mov
jno
and
push
mov
lcall
push
ret
cmp
cld
ja
jae
and
xchg
mov
mov
pop
bnd
cld
cmp
sbb
cmpsb
xor
cwtl
pop
and
pop
cwtl
pop
arpl
mov
xor
jb
ret
push
sub
or
ljmp
int
es
ljmp
sti
jecxz,pt
push
and
add
fistpl
push
adc
pop
xor
addl
mov
dec
mov
subl
daa
movsb
or
je
repz
inc
or
xchg
cmc
sbb
adcl
fmulp
imul
mov
mov
sahf
hlt
mov
add
aas
xor
f2xm1
inc
cmp
xchg
add
rcl
mov
mov
adc
fldt
xchg
jmp
sub
mov
aad
and
pop
pusha
into
and
in
pop
mov
nop
loop
lret
inc
paddsw
sub
pop
push
dec
pop
and
test
xor
mull
cmpsb
dec
and
mov
in
call
dec
mov
cld
fistl
jg
mov
ds
cwtl
pop
jl
lret
or
push
cmp
int3
mov
jge
add
imul
mov
sbb
lea
sub
imul
or
call
ret
or
sbb
xchg
push
push
mov
stc
sti
jg
popa
mov
fidivl
push
popf
dec
lds
sbb
int3
mov
jecxz
xchg
or
or
js
mov
add
stos
pop
adc
jmp
rcrb
test
push
out
fdivs
jge
lcall
inc
popl
je
je
push
jno
rolb
push
roll
ret
sub
mov
in
mov
add
aaa
pusha
add
jmp
jecxz
fwait
xor
dec
push
ret
ljmp
push
sub
push
jecxz
cli
outsb
pop
aad
fistpll
jg
aaa
sub
insb
enter
push
loope
cmp
and
jo
cmp
push
or
adc
sbb
into
jne
repnz
dec
cmp
push
mov
xor
roll
dec
sub
mov
lret
leave
loop
stos
dec
or
add
cmp
mov
xor
js
mov
repnz
or
cmp
js
jp
jb
inc
push
jne
jno
jne
lcall
icebp
pop
sbb
idivb
sub
sti
xchg
inc
pop
xor
cmc
test
push
push
in
mov
push
in
push
dec
jo
lret
lea
lods
mov
loope
dec
outsb
xchg
imul
push
arpl
push
jnp
and
cli
jbe
lcall
and
push
dec
sbb
pushf
push
iret
xchg
mov
loope
sbb
dec
dec
popa
xor
sub
ret
ljmp
add
xchg
add
ret
and
sti
loopne
inc
imul
loop
push
movsl
in
in
pop
imul
inc
js
sub
insb
je
flds
data16
sti
icebp
sub
jns
jnp
pop
dec
jecxz
mov
xor
mov
jno
sbb
movsb
ljmp
jae
jl
test
dec
das
push
cwtl
shll
sbb
cwtl
mov
add
inc
mov
icebp
pop
mov
xor
inc
dec
push
in
push
sub
rcll
push
sbbl
push
and
repnz
push
xor
and
add
faddl
test
das
push
repz
xchg
mov
outsl
out
lea
adc
loope
dec
cwtl
jno
lods
xchg
sar
cmp
jb
loope
push
icebp
jl
mov
cmp
push
jmp
shlb
cmpsb
or
arpl
sub
and
lea
popa
je
jne
pusha
mov
aaa
and
mov
ror
pop
mov
sahf
xlat
in
add
cmpsl
loop
dec
in
dec
leave
mov
outsb
mov
and
mov
pop
cld
adc
dec
push
cmp
scas
xchg
rcrb
mov
test
movsb
jl
rolb
ficoml
shll
test
sub
push
mov
sub
dec
outsb
cmp
repz
mov
adc
cmp
cmp
inc
addr16
mov
mov
jecxz
out
fwait
js
pushf
out
dec
jge
pushf
sbb
pop
cltd
push
invd
mov
insb
es
or
iret
mov
idiv
sbb
stos
in
iret
ret
stc
gs
rolb
pop
lods
jge
imul
fwait
jb
pusha
pop
test
lret
nop
mov
jb
or
cmp
mov
out
jno
sub
cmp
sbb
ljmp
sub
arpl
lahf
jbe
push
ret
gs
xor
adc
xchg
sbb
sub
cmp
stos
in
movsb
jo
jp
leave
scas
jbe
jno
mov
stc
in
js
outsl
aad
fdivrl
or
jnp
cli
jge
out
push
pop
xor
and
sub
mov
aas
pop
loopne
cmp
push
cmp
mov
mov
icebp
mov
mull
dec
int3
xor
pop
in
cli
lea
lret
ljmp
iret
sub
push
clc
ds
mov
xor
out
dec
add
or
pop
cld
cli
lret
push
push
cmpsl
xchg
lret
adc
dec
push
into
nop
push
in
jle
hlt
rorl
outsl
ficomps
frstor
outsl
xor
sub
dec
imul
movsb
setle
cld
in
add
les
inc
dec
push
shll
push
add
mov
inc
push
aaa
int3
and
pop
mov
jae
out
cwtl
arpl
stos
pop
into
lock
and
das
jae
xor
nop
mov
lods
sbb
dec
js
mov
lods
lods
adc
and
jnp
dec
jg
jbe
push
les
scas
lret
sti
jae
ret
icebp
jno
fisttps
mov
out
lcall
fs
je
imul
adc
std
jns
mov
jge
insb
lahf
bound
adc
popf
in
scas
insb
jo
xchg
xchg
xchg
rorb
and
cmpsb
test
lods
mov
insb
out
test
xlat
pop
mov
into
arpl
mov
out
popa
ret
imul
movsl
daa
dec
mov
mov
ja
and
sbb
sub
mov
les
lods
in
pop
mov
add
fstpl
cmp
cmpsl
pop
movsl
popa
sub
dec
scas
sub
popf
mov
xchg
dec
cmp
clc
outsb
lcall
fisubl
lahf
cwtl
push
pop
roll
mov
aaa
dec
dec
sub
cld
sbb
add
pop
int3
ja
dec
pop
mov
movsb
lcall
xor
rorl
sbb
and
push
scas
out
sub
jno
gs
or
leave
or
dec
push
sbb
mov
shrb
pusha
and
out
je
cmc
inc
adc
xchg
rcr
add
int3
adc
cmpsb
bound
cld
outsb
aad
pushf
shl
pop
push
scas
xchg
rcl
mov
out
ja
inc
pop
insl
int3
not
sbb
add
out
sahf
inc
mov
or
pop
jb
jg
add
sbb
xor
sub
sub
call
int3
cs
sub
into
mov
sbb
pop
or
add
or
ret
or
sbb
and
sbb
mov
xchg
jmp
or
out
cmp
mov
mov
jle
iret
in
cmp
pop
mov
dec
xchg
and
int
and
popa
test
lods
push
in
jmp
jae
push
scas
ja
xchg
mov
sahf
or
dec
sub
in
inc
jge
inc
jg
dec
pop
iret
or
in
inc
into
inc
imul
mov
insl
cmp
stos
movsl
repnz
cmp
push
jp
sarb
and
inc
push
pop
aas
sbb
out
mov
pop
adcl
mov
add
ds
test
cmp
ficoms
fdivl
cmp
jle
mov
repnz
pop
lcall
outsl
sarl
push
cmp
hlt
push
aaa
movsb
dec
sbb
nop
fistl
or
stos
movsl
adc
bound
les
test
sbb
cs
adc
arpl
pop
jl
inc
shr
pop
test
mov
lock
bound
xchg
jne
fwait
je
cmpsb
inc
fs
arpl
cmc
ss
mov
out
iret
ret
roll
mov
cmp
xor
xchg
out
mov
iret
filds
test
fsubl
cwtl
fdivrl
test
out
stos
std
loopne
ds
fmull
pop
fwait
mov
pop
add
subl
fildll
push
xor
daa
cltd
clc
mov
call
xchg
or
sub
and
mov
adc
sbb
shrl
jo,pn
and
cmpsb
popa
mov
or
test
repnz
lock
nop
inc
test
mov
test
dec
add
adc
cs
mov
jns
cmp
mov
or
insl
das
repnz
jmp
sahf
xor
dec
mov
push
mov
mov
lret
jp
cmp
into
stos
not
pop
sub
push
push
jbe
and
out
lock
pop
pop
stc
sub
jge
mov
scas
mov
mov
dec
movsb
mov
sbb
mov
jbe
and
btc
popa
mov
pop
leave
push
repnz
loopne
imul
scas
leave
aaa
jmp
pop
push
sbbb
test
je
in
jl
inc
xor
andl
mov
aam
pop
fdivs
mov
mov
pop
jle
icebp
add
jge
lds
inc
adc
test
xorl
jl
push
mov
mov
ret
test
push
xchg
in
dec
test
ret
cmc
inc
cmc
repz
and
sbbl
and
gs
popa
pop
inc
aaa
call
mov
dec
gs
mov
gs
outsb
sti
scas
pop
mov
fadd
pusha
xor
sbb
sub
daa
pop
push
jns
mov
mov
and
test
sbb
iret
push
rcl
sbb
ret
gs
dec
imul
push
in
addr16
push
cmp
add
into
push
les
sbb
outsb
and
or
jnp
xchg
negb
mov
insl
scas
mov
sarb
jae
mov
data16
dec
adc
xor
pusha
sub
aad
popa
push
lods
notb
out
arpl
pop
cmp
add
push
xchg
std
addr16
jne
lods
es
push
ss
mov
idivl
sbb
inc
call
es
adc
dec
hlt
rcrb
out
stc
xchg
leave
push
mov
or
mov
mov
loope
cmp
mov
popa
faddl
cld
ds
adc
outsl
xor
shlb
jecxz
lods
and
pushf
popa
xchg
lahf
xchg
xchg
loope
inc
outsb
pop
aad
xchg
xchg
cmp
test
icebp
ds
push
arpl
mov
gs
das
push
notb
mov
dec
mov
cld
dec
leave
dec
ds
dec
dec
cld
flds
pusha
test
add
dec
push
rcrl
add
adc
pop
pop
lahf
mov
outsl
imulb
push
push
lock
ficomps
and
je
mov
mov
or
adc
sub
pop
xchg
movsl
jae
test
xchg
mov
mov
cli
inc
mov
subl
in
push
push
xor
jno
movsl
fs
xchg
dec
shll
mov
xor
std
mov
sub
adc
loop
push
adc
arpl
xlat
insb
ret
push
dec
insb
scas
je
out
push
dec
fnsave
mov
jmp
sbb
iret
mov
negb
outsl
in
leave
push
pop
jns
std
cmc
mov
pusha
jle
lods
push
pop
cwtl
push
sub
orl
aam
pop
les
fsts
or
mov
add
mov
in
fnsave
inc
adc
mov
mov
or
stos
psllq
mov
dec
es
sub
jp
mov
sbb
loop
xchg
movsl
cmp
int3
repz
stos
and
xchg
and
fimuls
or
or
std
pop
xchg
jg
cmc
clc
dec
adc
nop
pop
int
mov
sbbl
je
xor
dec
add
dec
xchg
icebp
ret
test
lods
jg
cmpsl
jns
and
test
sbb
ds
pop
cmpsl
and
mov
cmc
gs
mov
push
orl
mov
cmp
scas
cmp
out
jb
sub
imul
inc
sub
lcall
lds
popa
xchg
rolb
in
es
cmp
leave
inc
inc
xor
add
ret
jg
xchg
push
pusha
mov
pop
stos
pop
lea
lahf
sub
popf
cmp
out
adc
jge
ret
subb
fidivrl
lcall
xorl
mov
pop
jge
sub
or
mov
mov
mov
out
loop
mov
arpl
loop
clc
daa
inc
mov
test
jmp
dec
pop
lods
xor
inc
jmp
sbb
loop
inc
mov
xor
lds
xor
xor
inc
in
push
push
aad
test
cmc
notl
xchg
aaa
and
nop
cmpsb
rclb
mov
mov
jo
lret
mov
mov
lock
jecxz
addr16
push
cmpsb
push
shr
nop
out
aas
andb
or
mov
sub
scas
xchg
xchg
idivl
pop
dec
or
and
cmp
int
mov
xor
cmp
cmpb
pop
mov
sub
sbb
mov
mov
xchg
xor
push
loope
or
outsb
sub
add
in
pop
andl
movsl
push
fcmovb
xor
jbe
adc
dec
inc
mov
stc
das
cmp
test
scas
popf
sub
jmp
cmpsl
mov
ret
jns
and
iret
pop
out
cmp
shl
or
fdivp
fbstp
test
fsubrl
call
test
imul
mov
aam
inc
and
push
ja
mov
repnz
mov
cmp
push
aam
and
sahf
js
xchg
xchg
dec
scas
lods
addl
mov
adc
ret
mov
xor
out
clc
push
sub
or
enter
js
lret
cmp
adc
nop
dec
pop
jecxz
or
xchg
jl
imul
xchg
mov
dec
insl
jo
addr16
mov
fbstp
cmc
lods
sub
or
pop
popa
cmpsl
or
push
push
insl
or
adc
shr
ret
sbb
orb
sbb
inc
leave
insl
outsl
lock
mov
and
xor
imul
incb
add
cli
dec
daa
mov
stc
and
lock
and
add
mov
adc
mov
sbb
mov
mov
jnp
aad
mov
add
jo
push
push
lods
lret
sub
sbb
adc
mov
add
insb
sti
mov
mov
ret
mov
mov
cmp
outsb
push
loop
add
and
aad
mov
jg
int3
loop
mov
and
mov
jp
out
mov
adc
lret
inc
cmc
inc
mov
sub
loop
pop
jle
bound
xor
xor
stc
jl
outsl
divb
adc
stc
aam
inc
cmpsl
mov
push
inc
jl
xor
push
cmp
pop
push
adc
lret
jp
sbb
addr16
cld
mov
cmp
std
mov
mov
sub
int3
sbb
iret
popf
pushf
repnz
mov
inc
out
add
test
js
int
iret
sbb
out
or
dec
sbbb
cmpsb
jg
xor
ret
pusha
dec
mov
inc
sahf
xor
mov
sti
fisttpl
es
push
sub
or
sbb
and
or
pop
ljmp
push
loopne
push
fbstp
out
pop
jmp
push
xor
sub
out
clc
jae
lcall
mov
mov
cmp
adc
fsubs
pusha
dec
movsb
cmp
lods
mov
imul
inc
inc
push
aad
lahf
outsl
mov
sub
jmp
imul
add
xchg
lea
gs
icebp
mov
stos
push
push
sti
jne
cmp
and
in
outsl
scas
cmp
int3
ss
rcrl
sahf
mov
pusha
xchg
iret
mov
cwtl
mov
mov
push
pop
enter
repz
and
push
push
daa
sar
mov
call
in
dec
jns
jno
lret
movsb
pop
gs
xor
xchg
out
in
loope
pusha
arpl
leave
repnz
add
pop
arpl
mov
xor
and
lahf
or
cmp
mov
add
sbb
mov
cmpsl
jle
add
in
push
cltd
rcll
mov
inc
daa
adc
xchg
dec
repnz
jae
fstpt
lock
call
outsl
mov
aam
in
mov
iret
lods
cmpsb
mov
popf
icebp
dec
ror
test
dec
xchg
jp
sub
push
mov
loopne
ret
jecxz
or
fsubrl
add
or
mov
into
xchg
or
sbb
mov
scas
test
push
clc
ror
mov
push
or
scas
jb
sbb
adc
mov
sub
pop
mov
inc
jp
sub
es
cwtl
in
cmp
ret
mov
inc
mov
ss
stos
mov
stc
jmp
xor
loopne
xor
sub
mov
jp
push
dec
lods
cmp
sbb
xchg
jge
imul
sub
fs
push
adc
movsl
pusha
lret
add
gs
adc
xchg
test
cmp
sarb
xlat
pop
and
sub
jns
sub
xchg
cmp
mov
push
push
mov
fsubr
and
xchg
jnp
pop
in
aad
mov
or
sub
mov
or
outsb
mov
pand
or
sub
lds
cmp
lahf
xlat
inc
test
and
cli
enter
sti
mov
sbb
repz
xchg
leave
test
dec
mov
inc
test
jb
mov
sbb
cmp
mov
mov
mov
jb
jp
xchg
push
cmp
outsl
lock
repz
push
test
addr16
or
aaa
and
das
das
inc
imul
pop
pushf
js
inc
mov
adc
cmc
inc
xchg
adc
xor
dec
ret
int3
pop
xor
adc
in
test
out
scas
add
mov
icebp
jmp
fimuls
cmp
cmp
dec
daa
adc
iret
inc
sub
movsl
and
inc
mov
jo
dec
dec
or
pop
and
icebp
inc
aaa
push
sbb
cmp
loop
pop
test
xchg
jne
shlb
sub
push
adc
aam
push
jns
lcall
test
andb
add
sbb
or
mov
sti
jmp
mov
add
dec
sbb
jl
mov
add
stos
enter
aaa
aam
out
and
shll
cmp
lret
push
and
cmp
mov
imul
addr16
shll
rcr
xchg
nop
jbe
cltd
jecxz
ficompl
push
scas
sbb
in
je
pop
enter
cmp
imull
sub
cmp
pop
js
popf
or
cmp
les
mov
popa
repnz
mov
push
inc
and
jno
int3
scas
mov
mov
mov
cvtpi2ps
mov
xchg
fcmovne
in
xor
faddl
test
mov
jne
andl
inc
out
call
not
mov
mov
arpl
inc
and
popa
popf
mov
bound
adc
clc
loop
dec
hlt
lahf
cli
xor
add
testl
std
mov
adc
test
sub
clc
hlt
or
test
addl
pop
repnz
loope
rorb
jecxz
or
sbb
lret
pop
mov
outsb
cltd
push
addr16
lahf
sub
push
lods
sbb
fistl
aam
negl
and
add
jmp
out
std
leave
aas
mov
pop
je
into
inc
dec
loope
mov
sar
or
jmp
jge
push
push
and
and
addr16
scas
test
jne
jo
outsl
or
fcmovbe
test
inc
jno
adc
mov
arpl
or
lahf
push
push
sbb
pop
call
out
cmp
imul
out
jle
sahf
pop
notb
add
int3
adc
dec
insb
pop
jbe
sub
xor
arpl
adc
adc
stos
mov
mov
pop
push
nop
cmp
hlt
scas
repz
dec
addr16
call
xchg
mov
adc
int3
sbb
pushf
and
pop
inc
inc
std
neg
aas
pop
lret
ret
mov
sub
mov
mov
aad
rcrb
dec
push
sarb
mov
call
xchg
dec
int
aam
jmp
push
test
mov
pop
inc
iret
push
int3
push
sarl
inc
jnp
push
sub
icebp
test
add
push
ss
sbb
cmpsb
cmp
push
xchg
mov
adcl
sahf
and
inc
adc
push
std
es
mov
jne
in
push
adc
mov
mov
popa
pop
cld
push
inc
pusha
cmp
pop
pop
xor
lock
adc
xchg
inc
faddp
lods
inc
push
jbe
jnp
push
hlt
jecxz
add
mov
lock
int3
adc
testl
ret
cwtl
aad
inc
into
int
in
push
cmp
fnstsw
fstpt
cmp
pusha
jae
test
jmp
outsb
pop
xchg
mov
push
pop
dec
shlb
scas
cld
nop
xchg
outsl
cmp
xor
inc
ljmp
sti
cmpsl
shrb
aad
mov
xchg
cwtl
jge
sbb
in
lcall
push
pop
js
add
xchg
dec
jp
or
test
cld
adc
push
inc
hlt
scas
push
negl
pop
push
jbe
lret
xor
ds
xchg
pushf
sbb
dec
out
ljmp
enter
jge
arpl
or
xor
push
pusha
push
fbstp
into
mov
pop
and
push
mov
insl
jmp
mov
cmpsb
mov
inc
es
imul
mov
jg
dec
jp
xchg
jle
loopne
iret
mov
lahf
lods
loop
or
out
rorl
insb
mov
push
subb
cmp
fcoms
and
lret
cmp
loope
mov
sub
lea
xchg
scas
xchg
sub
adc
xor
lahf
push
mov
cld
test
insl
sbb
out
lods
mov
popa
dec
scas
hlt
push
add
mov
xchg
aam
imul
mov
jnp
cmp
jnp
mov
dec
sbb
lock
loop
xor
lods
shlb
xor
xor
push
fsubrl
fs
mov
push
scas
cmp
jno
push
loope
sub
xchg
adc
jge
lahf
js
mov
add
pop
roll
je
ds
pop
cmp
push
jge
stc
jne
es
lahf
xor
inc
sub
sbbb
test
scas
inc
add
outsb
mov
jnp
dec
mov
xchg
dec
fsubs
or
sarb
xor
fs
out
dec
in
lock
and
mov
sub
lods
out
pop
jg,pt
lret
push
mov
in
imul
dec
scas
xchg
pop
or
push
mov
test
or
fists
mov
fdivr
jne
cmpsb
cltd
push
pop
xchg
jb
mov
push
leave
add
pop
push
cmp
es
xchg
loopne
out
push
aad
pop
out
aaa
call
xorb
sahf
and
adc
out
dec
mov
sub
pusha
pop
and
jns
in
es
sub
movl
mov
shufps
daa
jg
xchg
cmpsl
pop
xchg
add
or
inc
stc
pop
jle
out
inc
cmp
dec
and
popf
inc
push
mov
scas
std
jo
jp
pop
sub
sub
push
xor
nop
lret
orl
bt
fwait
ds
inc
add
xchg
test
lods
test
dec
test
gs
gs
sarl
cld
fmuls
fisubl
fiadds
insb
ss
jbe
xchg
xchg
fwait
xchg
stos
scas
mov
enter
inc
pop
mov
inc
test
ljmp
dec
xchg
xchg
sub
in
std
sbbl
fcoms
xlat
sbb
icebp
sbb
or
mov
mov
aaa
jl
stos
out
into
adc
mov
mov
push
das
push
mov
push
loope
je
adc
pop
and
sub
cmpsb
pop
ret
call
inc
xchg
ds
test
jmp
loop
adc
les
rcll
ja
daa
mov
sahf
mov
leave
add
loope
dec
ja
inc
xchg
pop
call
jbe
stc
push
mov
lcall
fisubrl
mov
fiadds
test
stos
das
pop
fs
rcrb
out
pop
movsl
jecxz
pop
dec
hlt
mov
jmp
bound
dec
cmpsb
xchg
push
jge
xchg
aad
or
out
mov
or
push
ljmp
sbb
lds
jb
mov
mov
stos
ret
sub
jle
movsl
mov
sbb
je
lret
inc
add
dec
or
mov
cld
mov
cs
iret
addr16
push
mov
stos
adc
daa
jnp
sub
lret
mov
jl
subpd
xchg
clc
mov
lea
sub
inc
pusha
push
fs
in
pop
add
pushf
sbb
into
inc
cmp
and
push
aas
pop
fstpl
inc
in
inc
sbb
mov
add
mov
push
pop
and
stos
add
jne
into
repz
mov
xchg
jb
push
lret
pop
scas
jg
or
or
inc
dec
jg
xor
sub
jle
jge
fucomi
jae
stc
xchg
mov
mov
mov
in
dec
stc
jmp
jns
imul
and
sub
incl
sbb
or
fdivs
ds
jns
jae
je
mov
stc
cli
std
mov
fstp
xchg
add
mov
inc
push
ljmp
std
mov
push
popa
pop
dec
push
push
mov
add
and
fwait
das
pop
cmp
aas
dec
or
fildl
movsl
fdivrs
addr16
movsl
dec
add
mov
jno
jl
sub
imul
repnz
es
push
lock
in
xchg
sahf
lret
xchg
jp
mov
aas
mov
stos
xchg
push
clc
pop
dec
xor
xor
push
add
shl
dec
mov
insl
jle
dec
mov
add
loopne
xlat
inc
xchg
xor
dec
mov
in
pop
jo
ja
fdivrs
loopne
xchg
sbb
xor
andl
mov
sahf
add
gs
pop
in
add
mov
sub
sub
lcall
aam
mov
dec
xchg
imul
into
stc
pop
in
aaa
jl
lods
add
jmp
dec
movnti
movsb
mov
in
jnp
aas
mov
mov
adc
rcll
pop
jg
popf
pop
mov
lret
jle
invd
loopne
aas
aas
clc
add
and
add
mov
je
sti
std
inc
mov
repz
pop
fimull
push
iret
fcoms
outsb
jae
out
je
in
pop
xchg
cmc
mov
adc
int
scas
xchg
xor
cmp
xchg
push
push
dec
int
xchg
es
add
inc
push
pop
mov
mov
inc
sub
inc
sbb
or
clc
push
mov
aam
nop
add
mov
mov
imul
popf
push
rcr
into
inc
insb
mov
inc
in
cli
push
push
je
push
mov
jno
sub
pop
or
imul
scas
cmp
mov
push
xor
cmp
jae
adc
call
and
push
adc
dec
inc
pushf
loope,pn
xlat
pop
fwait
pop
cmp
pop
sub
xor
cmp
dec
iret
cmp
je
in
inc
push
adc
sbb
add
ret
xchg
mov
or
cwtl
arpl
mov
nop
dec
test
adc
je
fildl
sahf
icebp
ror
out
pop
andl
loope
sub
or
xchg
xor
push
dec
addr16
mov
dec
sbb
pop
inc
icebp
adc
gs
and
cmp
and
push
sbb
mov
cmp
dec
cmp
ja
js
inc
in
clc
sahf
mov
pop
lods
dec
xlat
inc
test
roll
sbb
insl
movsb
cmp
je
mov
or
jmp
rcrl
xchg
inc
lods
or
subl
xchg
pop
adc
mov
pop
mov
mov
out
ds
int3
jecxz
js
xchg
imul
shll
in
and
insb
addl
rol
xor
data16
xacquire
icebp
outsl
push
mov
xor
pop
jecxz
data16
les
cmc
xchg
xchg
imul
and
cmpsb
ljmp
fists
shrb
nop
pop
cmp
mov
cwtl
push
adc
dec
push
int3
jno
adc
ss
jmp
fst
aam
dec
xchg
and
bound
adc
cltd
addb
mov
cmp
mov
jbe
cmp
and
add
stc
xor
push
xlat
mov
mov
inc
adc
gs
push
jl
enter
mov
cmp
lods
lret
adcb
rclb
scas
imul
int3
insb
jl
lods
inc
lock
add
mov
inc
aaa
je
mov
cmpsb
sbb
or
lds
jne
mov
test
adc
insl
or
sub
loope
push
jb
or
sti
push
sbb
insl
or
lds
orl
scas
out
insb
loop
inc
add
insb
into
sbb
mov
cmp
das
mul
sub
insl
and
push
rorb
cwtl
sbb
jge
mov
cltd
mov
adc
subb
push
shrl
jl
push
sahf
das
filds
adc
nop
gs
jmp
pusha
movsb
sub
jae
mov
pop
pusha
adc
or
mov
je
mov
rorb
mov
mov
dec
aaa
push
imulb
jl
sub
call
xlat
subl
mov
sub
mov
xchg
mov
jl
pusha
xchg
stos
cli
pop
and
mov
sbb
cltd
sar
pop
fldenv
add
pop
jne
pop
sbb
jge
daa
sbb
cmpsl
fisttpll
ss
int3
cmp
mov
fdivrl
insb
cltd
rorl
fisttpl
pop
cwtl
dec
xorl
dec
jecxz
or
jmp
pop
xor
xor
or
scas
jnp
in
mov
imul
fidivrl
or
and
mov
jnp
pop
push
shll
sub
sbb
xor
incl
faddl
jo
rcll
in
jns
shlb
in
lahf
mov
jl
mov
push
insl
int
cli
dec
cmp
sub
push
mov
call
inc
fadds
jne
arpl
adc
adc
cmpl
mov
popf
xchg
out
push
xchg
cmp
push
repnz
mov
pop
lahf
pusha
lock
lret
sbb
push
subb
popa
sbb
sbb
jge
lea
loopne
add
test
xchg
js
and
jle
push
and
roll
repnz
mov
mov
les
and
dec
ljmp
popa
daa
mov
inc
in
insl
dec
imul
in
pop
adc
pop
aaa
xchg
jo
insl
jnp
mov
push
mov
rorb
sbb
dec
dec
rcrl
jmp
and
mov
mov
xchg
jg
jns
mov
or
mov
xor
stos
mov
popf
mov
sub
xchg
xor
lret
xlat
popa
std
cmp
out
mov
out
cli
add
in
leave
leave
test
mov
js
xor
je
fcoms
push
cmc
mov
jae
mov
add
movsb
mov
push
mov
arpl
int
aas
inc
gs
pop
mov
or
mov
addl
dec
jb
xchg
into
ret
sub
lret
out
loope
pusha
add
push
inc
pop
xor
pop
push
adc
lock
test
dec
hlt
ss
inc
mov
in
fwait
aam
pop
push
js
std
outsl
pushf
scas
jmp
dec
xor
xor
hlt
sub
push
pushf
jae
xor
shl
push
dec
loop
push
jo
sbb
cmc
pop
mov
mov
adc
and
cmpsl
cli
mov
sti
adc
sahf
ss
and
lock
out
lret
pop
in
sub
ljmp
lret
aam
and
push
mov
sub
out
inc
xchg
insl
stos
mov
mov
scas
mov
or
fdivs
movsl
test
movsl
mov
das
mov
add
inc
push
fwait
fwait
add
cmpsl
push
aad
inc
push
jno
push
xor
enter
xchg
and
push
paddq
insb
scas
fsubr
or
jno
pop
xchg
or
dec
testl
les
mov
sbbl
flds
mov
sbb
push
xorb
dec
in
mov
enter
jno
addl
sbb
jge
mov
pop
movsb
daa
push
popf
and
jns
sti
hlt
sub
sbb
je
xor
clc
mov
int
bound
mov
rcrb
cmpsb
fnstcw
inc
out
mov
jp
add
lret
pop
loopne
stos
stos
lcall
jge
xlat
std
cld
pop
es
xor
loope
mov
jbe
sbb
jp
cmp
adc
movsl
ret
rorb
dec
jg
adc
fstpl
inc
cmp
andb
xor
mov
addl
shll
mov
dec
push
adc
addl
xchg
mov
push
xchg
je
call
lea
mov
cmp
inc
push
jmp
rol
aam
test
ja
shl
sub
pop
and
std
jecxz
movsl
jno
adc
xchg
fsubl
loopne
mov
cmpsb
std
mov
jbe
in
cmpsb
push
pop
xor
lret
cmpsb
jae
sbb
and
out
and
stos
mov
xchg
inc
rcll
jno
mov
loop
mov
pop
and
jle
jge
adc
stos
aas
pusha
repnz
mov
gs
ja
iret
sbb
imul
xor
adc
or
sbb
test
inc
mov
paddd
es
nop
mov
adcl
mov
mov
jp
lods
xchg
fbstp
sub
dec
cmp
gs
stos
add
ja
xor
lret
frstor
dec
push
aam
adc
mov
inc
idiv
pop
jo
sbb
in
pop
xchg
cmp
in
in
pushf
xor
xlat
adc
scas
add
lcall
mov
xchg
or
dec
and
ss
repnz
je
sbb
insb
pop
jns
pop
xor
pushl
ds
jns
stc
xchg
cmp
mov
leave
mov
mov
jne
xorl
addr16
xchg
pop
sti
inc
lds
and
jbe
subb
push
push
call
fdivrs
dec
sub
dec
sbb
andl
jg
decb
outsl
sahf
test
fs
int3
adc
cmp
int3
mov
mov
cld
rcrl
pshufw
cmpsb
sbb
pusha
shrb
jl
push
lea
sahf
lret
pop
and
stos
or
lret
test
push
insb
xchg
lret
mov
push
ficompl
test
mov
loopne
insb
push
scas
mov
jmp
sbb
xchg
aaa
insl
pusha
mov
mov
and
or
sub
adc
xchg
cmpsl
pop
push
mov
and
hlt
push
and
add
ret
out
xchg
or
adc
add
push
sbb
cwtl
loop
lods
fcoms
loop
lcall
adc
cmp
adc
cmp
loop
mov
xor
lcall
movsb
pop
cs
into
cwtl
lahf
xor
je
push
movsb
xchg
repz
sub
pushf
loope
cmpsb
add
aas
mov
cs
sarb
popa
daa
add
leave
xchg
scas
jae
std
icebp
in
xchg
iret
dec
stc
and
dec
mov
jns
pop
in
sbb
sub
or
or
cmp
hlt
daa
jbe
lahf
dec
jno
jmp
stos
mov
sub
push
xchg
jecxz
pusha
pusha
gs
cmp
movsl
push
imul
jae
int
rolb
das
lods
mov
push
xlat
dec
add
jno
dec
dec
stos
and
cmp
dec
into
das
scas
bnd
adc
cmp
cmp
jle
cmp
shll
data16
jl
out
out
mov
cmp
mov
push
sar
mov
loope
js
shlb
test
fs
mov
fisttpll
clc
xor
movsl
sbb
or
mov
adc
pop
xchg
fcomi
loope
inc
iret
mov
xchg
cld
inc
xchg
mov
cmpsl
xchg
lret
mov
mov
push
sbb
movntq
hlt
mov
xchg
xor
pop
repz
test
icebp
and
jne
mov
push
and
in
and
xor
cmc
je
cbtw
testl
repz
enter
mov
push
jecxz
dec
mov
std
loopne
repz
jp
inc
inc
out
test
aam
sahf
push
minps
dec
push
jb
jl
add
cmp
add
in
sub
sti
insl
sbb
dec
adc
es
inc
outsb
scas
jle
lret
dec
lcall
std
mov
cmc
data16
fbld
sub
pop
cmpsl
pop
push
stc
jno
repz
mov
inc
arpl
dec
scas
cmp
jne
nop
dec
xor
and
sub
xchg
xor
fistps
mov
xor
mov
call
pop
test
cmpb
out
test
mov
mov
call
lret
subl
fscale
hlt
mov
icebp
fwait
push
ljmp
push
cmpsb
and
lea
xor
cmp
jnp
je
dec
jp
testl
dec
cmpsl
cmp
ljmp
add
aas
icebp
jl
xor
dec
adc
dec
insl
push
cli
sbb
mov
dec
push
mov
mov
popa
mov
lea
adc
cmpsb
shrb
add
sti
sub
xor
in
popf
sbb
mov
mov
aas
outsb
push
insl
push
in
pop
movsl
or
imul
push
pop
mov
xchg
jo
add
xchg
stc
dec
and
adcl
adc
shl
jp
pushf
popf
jecxz
jbe
jnp
clc
jbe
lahf
std
pop
cmp
add
jecxz
pop
fcoms
adc
or
jecxz
lahf
dec
xor
lret
ja
pop
xchg
sub
or
mov
adc
in
movsl
lds
in
inc
sub
movsl
in
popf
rcll
sub
hlt
jp
shr
xchg
adc
push
jp
sbb
xchg
xor
fidivrs
jbe
push
jo
dec
lea
in
iret
xchg
lea
or
scas
iret
mov
xlat
lret
mov
lock
or
mov
fmulp
jo
mov
test
cmp
scas
mov
add
sahf
jge
xor
add
jmp
outsl
rclb
shlb
sbb
and
mov
mov
xor
stos
nop
sbb
sub
sub
dec
aam
or
sbb
jnp
ret
inc
lock
fiaddl
jno
lds
enter
xor
aam
aad
fwait
popa
insl
call
add
pop
cmp
mov
jl
mov
movsl
lock
and
mov
loop
mov
out
inc
xchg
jne
pop
xchg
mov
pop
insb
xchg
add
inc
mov
divb
dec
rol
por
or
outsb
push
or
xchg
lock
insb
dec
jbe
jl
shrb
jmp
sub
aam
int3
into
sub
xchg
in
fcompl
add
lock
lcall
sub
or
shll
cmp
xor
sbb
jg
add
pop
and
int3
aas
movsl
jns
xchg
xchg
sub
mov
xchg
scas
cmpl
or
jmp
mov
idivb
push
call
imul
cmp
scas
cmc
push
mov
out
push
shrb
inc
add
lods
push
rcll
mov
sbb
push
leave
out
sub
and
adc
lahf
rcr
mov
sar
fldt
xchg
add
ss
clc
imul
cmp
leave
mov
sbb
inc
jge
cltd
mov
mov
ljmp
pop
js
jno
push
cld
push
dec
cmp
mov
out
ss
push
fimull
xchg
push
dec
or
mov
mov
inc
sbb
fwait
xorb
dec
ret
pop
loope
jns
negl
test
and
test
out
jbe
insb
jo
cmpsl
pop
sub
shlb
or
mov
repz
nop
mov
or
or
out
gs
mov
lds
mov
mov
fldenv
adc
dec
or
pop
dec
pop
xchg
or
add
je
shrb
and
insl
pop
dec
mov
pop
out
pop
mov
jge
sub
sub
pushf
dec
std
xchg
pop
nop
or
inc
dec
add
push
sbb
cmp
or
pop
push
stc
sets
and
mov
out
sbb
cmc
lcall
adc
iret
pop
dec
in
scas
in
or
mov
sub
dec
and
cmc
in
lods
cli
inc
and
loopne
ficoms
sbb
jle
scas
aaa
push
cmp
sbb
cwtl
inc
adc
pop
int3
pop
dec
cmp
and
lock
jno
adc
jmp
aam
cmp
nop
fwait
aas
sbbl
js
lcall
push
pop
pop
adc
push
adcb
in
mov
fisttpl
and
ss
cltd
sbb
ja
call
mov
xchg
mov
shll
dec
mov
inc
adc
out
and
inc
xor
icebp
jns
aad
lahf
xor
out
pop
push
int
movb
cs
or
mov
or
cli
mov
pop
dec
in
mov
pop
xor
xchg
mov
sub
pop
jno
jmp
out
inc
cmp
and
addb
and
and
ds
cmp
js
in
dec
inc
or
jne
aad
pushf
sbb
mov
movsb
xor
inc
sbb
shll
push
ljmp
mov
fidivs
movsb
sub
mov
mov
xor
dec
sbb
push
jne
mov
stos
ror
cli
repz
incl
lahf
and
xorl
js
push
imulb
insb
pop
inc
add
or
addb
andb
sub
sbb
adc
mov
add
add
xchg
xchg
inc
dec
cmp
sub
xlat
jo
dec
sub
fs
nop
inc
add
daa
cmc
sarb
pop
pop
mov
cmp
mov
scas
cmc
mov
sahf
or
ret
popa
mov
shrl
jnp
xchg
leave
push
sub
pop
cmp
test
popa
push
cmpb
addb
xchg
add
push
imul
jl
pop
adc
adc
daa
dec
daa
jp
test
hlt
ss
dec
xor
jnp
mov
leave
lret
xchg
sbb
insl
into
mov
scas
pop
cwtl
mov
mov
cmp
and
jmp
or
cmp
mov
sarb
push
in
cs
movl
loop
cmc
dec
imul
mov
cmp
and
inc
mov
cmp
sbbb
ret
mov
mov
daa
xchg
cmpsl
ret
push
xor
mov
bound
leave
and
push
cmpl
mov
sbb
stos
and
jg
scas
mov
fldcw
and
ss
mov
out
pop
popf
xor
mul
mov
cmpsb
adc
xor
inc
mov
push
nop
mov
push
loop
push
subl
jg
and
lods
fldt
xor
aam
xchg
ds
cmp
dec
icebp
cmpsb
arpl
or
hlt
test
shr
fs
sbb
xlat
sbb
leave
out
pop
or
add
push
out
jmp
jp
jbe
or
jmp
jle
loope
sub
mov
dec
mov
repnz
xor
mov
pusha
jge
cmp
inc
stos
xchg
not
shr
jl
call
or
movb
xchg
outsl
jo
push
or
ret
ds
mov
mov
pop
std
fisubl
sti
clc
jae
inc
push
iret
add
xchg
stos
loope
fs
ret
sbb
shll
loopne
xchg
mov
call
mov
call
cmp
call
cld
pop
lcall
in
xor
jle
in
flds
jbe
leave
dec
pop
stos
sbb
xlat
lods
scas
cltd
aam
mov
addr16
ret
jo
push
inc
add
cmp
les
rcl
sbbb
insb
sar
int
pop
stc
movsl
data16
cmp
repz
jmp
fbld
imul
out
mov
scas
jle
pushf
fmuls
inc
dec
push
and
repnz
inc
daa
xor
push
mov
or
dec
jl
out
and
shlb
popf
cmp
fdivs
mov
dec
in
imul
push
inc
test
fcomps
inc
fldl
pusha
daa
jbe
pop
dec
test
cmp
xabort
je
pop
cmpb
push
aas
enter
push
loopne
jae
dec
xchg
mov
sti
sbb
pop
das
rdtsc
or
adc
and
xchg
fsub
fwait
outsl
push
test
xchg
jbe
insb
into
rorl
int
roll
mov
imul
insl
into
add
mov
lret
xor
xchg
xchg
outsl
and
jmp
sbb
bound
lcall
sbb
rorl
stos
cld
jecxz
mov
and
ljmp
aam
pop
lea
sub
cltd
xchg
xchg
mov
cmp
add
or
and
mov
cmpb
jnp
add
popa
shr
nop
fstpt
or
pop
fxch
xlat
out
mov
arpl
roll
test
fbld
xchg
push
xor
ja
data16
mov
cmp
int
jg
cmpsl
jne
ret
loop
insb
push
sub
lock
adc
inc
cmc
outsb
jmp
jb
outsb
cwtl
dec
cmp
xor
aaa
popa
push
adc
jmp
add
inc
cmp
lahf
sti
test
lahf
or
jno
lret
cmpsl
add
add
clc
mov
mov
pushf
xchg
mov
bound
add
xor
and
pop
cmp
xchg
push
ss
mov
dec
or
scas
pop
fildl
add
pop
jae
cmp
in
pop
mov
mov
pop
out
or
mov
sub
in
xor
fdivs
xchg
pop
dec
call
imul
mov
push
cmp
xchg
pop
mov
paddsw
call
sbb
xchg
add
mov
cltd
mov
test
push
lret
les
pop
das
mov
pop
incb
jmp
push
popa
push
aaa
or
adc
inc
sbb
movsl
test
outsb
ror
lock
int
adc
xor
pop
adc
scas
dec
inc
push
mov
mov
sbb
pop
dec
pop
dec
das
rolb
aam
mov
mov
mov
xchg
sbb
aad
movsb
sbb
xlat
call
daa
in
lea
popf
pop
shl
inc
mov
mov
adc
subb
arpl
xchg
mov
mov
arpl
fdivrp
xchg
xchg
adc
add
lret
cltd
ret
add
adcb
and
xor
test
ret
xor
enter
xor
xor
jmp
movsl
xor
mov
test
repnz
mov
fsubl
adc
enter
fwait
lock
sub
aam
sbb
insb
cmp
push
arpl
cmp
lods
ljmp
sub
fucomp
lods
xchg
sbb
inc
sbb
adc
mov
fwait
dec
cmpxchg
and
outsb
adc
test
push
int
mov
out
popl
cmp
push
add
arpl
int3
inc
aas
stc
cmp
sub
loopne
or
xchg
rclb
jne
fldl
out
sahf
mov
pop
pusha
int3
aaa
xor
jmp
sarb
mov
add
addl
aad
aam
cmp
pop
mov
mov
jmp
push
adc
pop
in
hlt
mov
mov
int3
cmp
fimuls
push
pop
ret
jle
add
imul
xchg
mov
in
cmp
jbe
clc
add
mov
add
leave
scas
test
arpl
out
gs
adc
fwait
cli
popa
pop
lret
pop
mov
sub
add
fwait
inc
test
shrl
push
xlat
pop
xorl
xor
dec
and
aad
jecxz
into
cmp
jnp
pop
adcl
into
lret
inc
mov
or
test
movsl
pop
aas
mov
pop
jnp
test
icebp
mov
jnp
icebp
imul
std
enter
pushf
mov
lea
in
popa
test
xchg
ficoml
dec
mov
mov
jno
rclb
push
jo
daa
sbb
dec
aad
rorl
add
in
xor
mov
in
jnp
fmuls
inc
mov
shlb
fcmovbe
daa
subl
dec
repz
mov
test
lods
dec
cmp
xor
jno
outsl
jns
loopne
sar
mov
xchg
mov
pop
imul
jno
xchg
adc
ss
xor
jo
mov
adc
dec
cld
adc
pusha
mov
sub
popf
pop
inc
xor
jb
jae
psrld
and
ret
shrb
push
add
mov
cmovs
das
cmp
hlt
mov
add
push
fwait
jne
js
pusha
xchg
fdivs
shrb
add
in
xchg
mov
mov
fisttps
pop
dec
call
jge
jae
push
dec
xchg
shrb
scas
mov
stos
adc
cmc
and
roll
push
inc
shlb
sbbl
jge
xlat
xchg
mov
pop
adc
in
es
cmpsl
pop
cmp
les
jl
inc
btr
icebp
xor
lret
add
cmovns
or
clc
aad
jp
adc
jmp
notb
sarl
mov
mov
bound
xor
pop
xchg
add
movsl
mov
mov
jno
mov
mov
inc
jae
mov
jle
in
inc
rcll
add
xor
push
imul
mov
test
es
adc
notl
inc
mov
mov
push
loopne
es
sbb
inc
iret
int3
or
test
hlt
inc
xchg
mov
outsb
in
mov
pop
stc
ljmp
jns
pop
lods
int
mov
int3
or
xchg
push
adc
xor
cmp
ret
or
xchg
mov
out
scas
jmp
mov
fnstsw
std
out
lods
outsb
imul
add
pop
inc
cmp
sub
sbb
jno
bound
dec
outsl
sub
xor
inc
int3
and
subb
lcall
iret
mov
mov
je
or
sarl
mov
adc
sub
inc
and
push
mov
iret
mov
insl
cmp
adc
push
jmp
subl
inc
push
mov
stc
adc
push
sahf
cmp
mov
add
stos
imul
or
rcrl
sbb
out
xor
ret
rcrb
mov
popa
or
xor
cmpsb
adc
outsl
mov
add
pop
xadd
dec
push
or
cmovp
imul
add
pop
lret
frstor
enter
mov
xchg
push
jmp
outsl
push
les
mov
adc
sbb
flds
add
imul
mov
jp
and
jno
sub
sahf
add
cmp
insl
dec
xchg
push
daa
fiadds
mov
js
fcmovbe
dec
stos
sub
pop
xchg
outsl
adc
mov
push
push
pop
xchg
aam
jb
idivl
cmp
repnz
inc
popf
insb
adc
mov
notb
hlt
xor
std
jle
sbb
sbb
fistpl
and
adc
loop
hlt
mov
push
dec
jmp
inc
ds
sbb
or
adc
mov
ret
js
fldt
testl
inc
sti
dec
arpl
or
xchg
cmp
jae
js
bound
lcall
mov
inc
pop
ja
ljmp
jmp
adc
cs
jns
int
jge
lret
ljmp
hlt
gs
jmp
xorl
inc
dec
and
lods
mov
jnp
jb
lea
fstpl
sti
push
xor
lcall
decb
inc
mov
xchg
bound
movsl
lret
loope
jle
add
loopne
pop
dec
add
fidivs
int
in
loope
cmp
fsubrl
xchg
push
mov
xorb
cmp
adc
filds
mov
clc
repz
pop
adc
push
outsb
jl
stos
pop
ljmp
mov
jecxz
dec
pop
cld
mov
push
mov
adc
sbb
cli
lcall
ret
sbb
ficoms
repnz
outsl
sub
int3
rclb
mov
lahf
add
daa
adc
or
daa
mov
jge
sub
js
aam
inc
stc
adc
aas
add
rorl
mov
xchg
mov
shll
adc
and
cmpsb
xor
mov
sbb
dec
sarb
mov
lcall
mov
xchg
fdivp
lahf
xchg
rcr
fisttps
sub
dec
inc
jbe
daa
clc
sbb
mov
cmp
pop
inc
cli
dec
daa
jmp
push
jmp
out
xchg
dec
dec
jmp
push
pop
inc
aam
inc
xchg
mov
pop
sbb
sub
jbe
addb
clc
pop
mov
adc
lock
xor
pop
cmp
cmpb
sub
sti
mov
jo
xor
iret
cmp
push
cmp
xchg
inc
ss
fadds
dec
adc
sbb
movsl
sub
insl
xor
inc
stos
sahf
pushf
cmpb
mov
and
fdivr
test
push
ljmp
mov
sbb
mov
lods
imul
das
mov
int
arpl
fmulp
into
popa
rolb
add
in
mov
push
pop
add
loop
cmp
addb
cmp
mov
sbb
fsubl
fsubs
imul
mov
pop
jo
jbe
movb
push
les
shr
jmp
sahf
rclb
pop
fld
xlat
cmc
xchg
shlb
popf
xlat
arpl
sbb
and
cwtl
xchg
aam
dec
in
cmp
rorb
mov
clc
xor
mov
cmp
xor
in
pop
and
call
add
add
pop
adc
int3
fdivs
fisubrl
es
cs
ds
sbb
and
mov
jne
inc
jle
cmp
stos
mov
in
or
jecxz
cld
rorl
xchg
lahf
cmp
xor
pop
jns
shll
movsl
mov
adc
adc
and
sub
cwtl
pop
push
add
mov
std
std
adc
lock
loope
pop
lea
jne
movsl
roll
cld
xchg
or
push
xor
mov
arpl
cs
pusha
or
les
ret
lds
and
push
les
cmp
mov
mov
lahf
int3
or
and
stc
sbb
fwait
aas
fildl
mov
adc
fsubrl
testb
cmp
push
aas
lret
sub
cwtl
aaa
or
repnz
mov
jns
lock
adc
adc
dec
push
adcl
add
inc
or
xor
adc
addr16
sub
mov
mov
jmp
std
or
lahf
pop
sub
xchg
xchg
jne
cmp
push
mov
dec
test
loope
fs
into
test
lods
aas
fdivl
pop
jg
icebp
sbb
mov
cli
inc
and
enter
mov
ret
jne
sbb
inc
outsb
hlt
sti
mov
fsts
inc
lahf
inc
mov
fwait
lret
mov
fistpl
es
or
cld
imul
loope
push
movsb
in
in
dec
jg
outsb
lcall
mov
cmc
clc
or
outsl
cmp
add
mov
dec
push
mov
fldl
arpl
jne
push
jno
dec
decb
jl
inc
inc
mov
ja
mov
dec
mov
ss
loop
pushf
stos
stc
nop
stos
rolb
incb
xor
jo
pop
jae
mov
push
xor
gs
ret
cmpsl
repnz
adc
push
stc
mov
aas
js
rep
in
sahf
push
mov
sbb
loopne
jae
mov
iret
adc
or
mov
mov
cltd
fcoms
pop
inc
mov
sbb
sbb
sub
pushf
call
xor
es
fidivl
cmp
andb
mov
push
pop
incl
add
adc
sub
lret
add
xor
mov
mov
adc
sbb
mov
shrl
sahf
stos
mov
pop
jle
xchg
std
sbb
pushf
add
xchg
xor
bound
loope
jle
rcrb
ljmp
push
and
mov
pop
sub
test
rcrl
or
rorl
loopw
cltd
and
rcl
jp
icebp
push
rcrl
sbb
decl
pop
inc
pop
inc
std
mov
out
sub
mov
pusha
adc
pop
ljmp
sbb
pop
jo
ds
add
mov
mov
movsl
xorl
shlb
add
jb
jp
sub
adc
mov
shlb
ja
lret
iret
pop
fs
or
or
pop
mov
jb
outsl
lret
ds
stc
out
out
roll
scas
ss
inc
and
insl
inc
mov
rcrb
jge
jae
push
lods
sarb
dec
popf
inc
ret
xchg
mov
fmuls
push
cmp
jne
pop
bound
mov
insb
cmp
xchg
add
outsb
pop
outsl
mov
ret
jl
xor
test
push
cmp
popa
pop
lcall
subb
mov
mov
bound
inc
mov
call
xor
pushl
jno
inc
mov
xchg
jl
pop
add
stos
idivb
cmp
ficoml
fistpll
clc
bound
jns
cmp
mov
jnp
ret
xorb
sub
add
fsts
mov
les
push
ds
inc
out
icebp
mov
andl
push
mov
negb
mov
jl
add
cwtl
mov
aaa
insl
stc
test
iret
idivb
add
das
dec
adc
dec
fisubl
sub
test
xchg
sbb
mov
mov
sbb
xor
xor
pop
scas
cmpsl
call
loopne
inc
xchg
adc
xchg
dec
or
into
dec
mov
sub
xor
xor
fdiv
cmp
xor
sub
and
jecxz
vpmovzxwq
mov
in
popl
adc
outsb
loop
cmp
sbb
add
or
fwait
cmpsl
cmp
rolb
pop
pop
cmp
lods
xchg
lret
ss
sbb
mov
test
imul
addr16
jmp
jp
jno
sub
xchg
dec
xchg
repnz
sbb
rorl
imul
js
push
in
loop
xor
inc
add
lock
daa
jmp
jns
sub
mov
dec
pop
jb
and
pusha
dec
jbe
fwait
imul
cmp
mov
push
xchg
sbb
cmp
out
test
negl
icebp
push
adc
xor
adc
mov
fwait
jb
cld
jno
lods
outsb
jno
shl
jb
push
mov
repz
dec
pop
ret
les
xor
rcll
xchg
push
dec
sbb
outsl
mov
jp
dec
movsb
outsb
cmp
loop
push
add
jo
and
stos
mov
dec
shll
sbb
add
mov
jecxz
lods
or
mov
jl
adc
js
or
sbb
test
outsb
divb
imul
das
imul
jbe
cmp
sahf
subb
sub
or
hlt
cmp
xor
js
stc
pop
sub
movsl
sub
hlt
rolb
sub
xchg
mov
mov
imul
lods
jmp
movsb
ret
sub
insl
push
ds
xor
or
adc
adc
pop
cli
and
fadd
call
cwtl
jbe
mov
daa
das
xchg
push
sub
jne
xor
inc
leave
les
xchg
sbb
cwtl
jmp
and
push
movsb
imul
ret
cmpl
test
ret
add
stc
lret
xor
xchg
nop
pop
stc
out
add
ljmp
loopne
inc
xchg
shlb
inc
mov
xor
loopne
cmc
jg
push
fwait
sub
mov
mov
jne
ret
sti
or
icebp
sbb
insb
dec
cltd
ja
inc
std
dec
add
cmc
cmpb
inc
pop
and
shlb
jae
cmpsb
pop
mov
add
push
sbb
mov
loopne
sarl
cld
call
lock
shld
adc
bound
dec
mov
mov
sub
std
cmpsb
mov
or
cs
sub
ss
pop
popf
cmp
and
mov
xlat
jns
push
mov
sarl
negb
movsl
fnstcw
les
imul
in
mov
push
push
mov
sbb
cmpb
shrb
fptan
jp
or
pop
cmp
jbe
es
in
add
mov
cmp
mull
push
xlat
sub
xor
les
stc
test
mov
mov
popa
mov
add
push
and
stos
out
sub
pop
or
mov
jne
test
or
push
jg
push
cmpsl
add
fstps
arpl
rcr
push
xchg
mov
and
mov
push
pop
movsl
cmp
jle
jp
cmpl
mov
les
fwait
icebp
sar
outsl
jp
pop
aas
jnp
jno
fstl
cmp
jge
outsb
jmp
jl
dec
test
pop
jle
inc
sarl
sbb
movsb
xchg
sbb
sub
xor
aad
pop
frstor
mov
ds
xor
mov
xor
pop
xor
orb
push
inc
or
inc
clc
icebp
inc
jmp
ljmp
add
sub
fldenv
or
arpl
pop
std
movsl
xchg
xchg
aam
push
orl
pop
sbb
mov
sbb
xor
js
shr
xchg
and
les
sti
inc
clc
jl
mov
ret
add
fdivrs
push
mov
movsb
push
mov
push
pop
inc
ljmp
pop
xor
pop
stos
or
out
mov
push
sub
lret
pop
and
xchg
pop
mov
imul
cmp
add
mov
hlt
arpl
push
nop
popa
adc
or
stc
sub
dec
jg
jnp
xchg
loope
int
mov
push
ret
pushf
cltd
add
jge
inc
cmp
xchg
insl
mov
leave
jae
es
mov
rcll
scas
dec
fiadds
dec
add
mov
mov
arpl
mov
adc
ror
outsb
add
aam
mov
insl
enter
mov
or
jmp
out
mov
movsb
int3
lock
cmp
add
mov
fwait
xor
mov
adc
stos
add
pop
dec
ds
sub
or
stos
imul
push
and
fs
or
or
sahf
scas
and
rcrl
testl
cld
xor
or
and
dec
jb
fmuls
sub
clc
js
mov
ljmp
sahf
push
sahf
mov
lds
ja
aam
dec
mov
test
loopne
cmp
push
aaa
lret
and
fsub
jg
pop
sbb
adc
cmp
inc
pop
sbb
orb
aam
or
out
jo
nop
outsb
xor
hlt
sub
or
and
out
cmp
idivb
adc
jl
adc
jb
jo
ds
add
cmp
je
test
mov
es
pop
and
mov
test
push
iret
mov
fcompl
xchg
mov
test
sbb
rolb
or
mov
loopne
jecxz
sub
jbe
jmp
push
dec
push
inc
rclb
scas
ficompl
sub
cmc
jne
orb
mov
fwait
movsb
outsl
mov
daa
mov
test
movsl
xchg
int3
xor
inc
mov
sbb
push
fildll
inc
cmp
mov
push
mov
test
lret
push
mov
outsb
scas
sbb
arpl
mov
mov
movsl
insl
adc
inc
add
enter
arpl
adc
js
aam
and
sbb
pop
popa
or
jmp
mov
push
jnp
lods
cmp
scas
jno
data16
cmp
xor
sub
sub
clc
fldt
lcall
mov
jo
mov
loope
xor
jns
int3
mov
out
cmp
movb
cmp
jo
adcl
sti
add
imul
filds
sbb
hlt
xchg
dec
repz
lods
dec
repnz
lock
sbb
mov
mov
push
insb
test
pop
pop
cmp
pop
insb
mov
mov
fcompl
lock
pop
cmpsb
mov
xor
inc
xlat
and
pop
ljmp
dec
pop
mov
push
ss
cwtl
inc
mov
mov
mov
jg
data16
insl
leave
mov
or
subl
lret
loope
addr16
push
pop
ja
ds
loop
aad
inc
dec
pushf
push
mov
cmp
sbb
push
mov
js
shlb
dec
pop
bound
pusha
adc
xchg
jmp
sub
pop
mov
mov
rorl
in
repz
pop
sbb
mov
xor
jae
psrad
and
xor
cld
xchg
jge
loopne
fwait
jnp
sbbl
and
in
shlb
sub
enter
pop
insb
adc
in
mov
out
mov
loopne
jnp
adc
mov
mov
mov
and
outsb
mov
dec
and
fistpll
and
addr16
popa
or
mov
jbe
scas
call
adc
lea
jno
mov
xchg
je
lret
pop
pop
popf
pop
pop
gs
pop
in
mov
es
push
xor
loope
in
lea
add
push
jmp
stos
jp
jae
sub
fwait
jno
lahf
mov
cmpl
sub
pop
cmp
xor
push
pop
dec
or
add
cmp
lods
or
lods
mov
pop
cwtl
lock
dec
mov
pop
mov
cli
add
outsb
mov
dec
pop
cmp
add
xchg
int
adcb
popf
into
cmpsb
mov
out
lds
test
jnp
cld
mov
xchg
xor
frstor
ss
or
jne
divl
scas
xor
or
inc
dec
stos
jno
int3
xor
addl
mov
bound
mov
or
imul
dec
lods
xlat
and
dec
push
sub
cli
lods
cmpb
movsb
mov
xchg
out
lahf
xchg
mov
inc
fsubrl
mov
sarl
dec
lahf
mov
outsl
in
imul
scas
mov
cwtl
mov
pushw
pop
mov
push
pop
movl
ficompl
and
lods
imul
mov
sub
rorl
cld
das
aaa
fnstsw
inc
mov
lods
leave
add
inc
sbb
push
xor
inc
es
rep
es
gs
imul
cmp
dec
test
movsl
jecxz
dec
xor
jg
push
das
out
hlt
jmp
sbbl
jno
testl
aad
sub
adc
rcll
adc
outsl
in
xchg
dec
mov
push
mov
movl
test
stos
sbb
dec
dec
xor
add
insb
orl
out
jp
xchg
mov
cmp
aam
push
mov
lret
unpcklps
shll
scas
push
shl
push
int
rorb
and
cmpsb
push
or
sbb
inc
mov
pop
or
pushf
sbb
dec
ja
insb
pop
jecxz
movsb
xchg
aam
push
lret
ss
out
pop
adc
sub
mov
and
mov
scas
fsub
lret
mov
mov
addr16
or
pop
sub
sti
bound
inc
imull
sub
loopne
icebp
mov
and
dec
ja
push
xor
mov
push
jbe
sub
hlt
push
and
ret
pusha
fldl
inc
sbb
jl
cmp
xchg
xor
cmpb
ret
mull
fldl
into
or
xor
push
shl
mov
aas
dec
jne
xchg
int
and
xchg
xchg
fdivrl
insb
imul
testb
cmpsw
jns
dec
cld
inc
adc
lods
test
fdivs
mov
adc
cs
sbb
hlt
andl
add
cmp
mov
int3
xchg
dec
inc
lods
inc
or
ljmp
ds
pusha
jmp
repnz
mov
xor
daa
dec
jg
jae
fsubrl
dec
mov
fdivl
aam
clc
adc
xchg
add
push
nop
pop
dec
sbb
jnp
adc
cmp
rcrl
loop
pop
fwait
mov
or
push
jecxz
push
ja
loopne
push
or
clc
inc
mov
sbb
cmp
sub
addr16
out
cmpsl
movsb
jbe
dec
adc
inc
xor
je
aas
mov
and
push
das
push
aam
das
js
cmp
test
cmp
movsb
jo
call
sarl
xchg
inc
scas
outsb
add
mov
stos
sbb
aas
xchg
int3
cwtl
and
cmc
out
cmp
add
fs
xchg
mov
decb
and
lock
roll
addr16
pop
xor
data16
jo
arpl
sub
imul
nop
cmpsl
and
in
push
inc
sub
xchg
scas
jle
xchg
adc
in
in
ret
test
inc
hlt
sub
leave
and
pop
scas
ljmp
mov
icebp
pop
lea
push
cltd
dec
fadd
push
jbe
popf
pop
dec
ds
test
ret
pop
sbb
sti
popa
sub
jns
insl
test
dec
xor
and
cmc
or
cmpsb
les
xor
push
repnz
cmpl
aas
cmpsb
iret
smsw
js
lock
fcoml
rorb
cmc
movsb
pop
xchg
inc
sbb
add
add
push
sub
stos
shrl
inc
push
fwait
mov
mov
adc
int
push
adc
daa
loop
cwtl
pop
mov
add
enter
mov
mov
gs
jle
call
pop
cmpsl
ret
xchg
dec
xor
jmp
scas
xchg
add
mov
add
shrb
jne
cld
jecxz
mov
stos
les
pop
js
jne
ret
rcl
inc
adc
imul
jmp
fstps
push
push
xchg
out
xchg
push
mov
xor
cs
inc
cmpsl
mov
loope
cmpsl
nop
insl
pusha
pop
jecxz
fsubr
adc
movsl
pop
xlat
lea
popl
mov
sub
loop
int3
std
push
mov
in
scas
xlat
sar
pusha
movsb
adc
imul
hlt
mov
cs
inc
mov
fiadds
lock
loop
lods
jno
cmp
push
outsl
cmpsl
fwait
lods
jne
insb
sbb
ljmp
rcrl
leave
mov
inc
mov
push
bound
pop
mov
outsb
subl
cmp
hlt
dec
mov
clc
stos
cmp
adc
mov
jno
clc
rcrb
es
jb
lcall
insb
aam
push
shrb
ficompl
cmp
sahf
shlb
dec
and
mov
sub
adc
je
pop
xchg
int3
and
push
ss
lret
ja
fmuls
adc
jbe
cltd
and
cs
sarb
cld
or
push
stos
or
sbb
inc
sub
push
push
jnp
xorps
or
adcl
and
int
bound
dec
dec
pushf
dec
into
loopne
cmpsb
add
lea
dec
ret
leave
lds
jecxz
mov
jle
jg
fdivs
xor
push
mov
ljmp
rcrb
xor
imul
mov
mov
mulb
insb
jmp
sbb
popa
sub
cmp
adc
dec
lds
mov
sahf
lret
outsb
mov
xor
pop
movsb
sbb
aad
movsb
aas
in
mov
add
ljmp
fs
pushf
fcmovnu
xchg
xchg
adcl
cmp
jg
insb
addr16
jl
mov
cmp
add
scas
je
sub
aas
stos
addr16
fistpl
test
pop
scas
mov
popf
cmpsb
ja
xor
pop
outsb
mov
test
iret
rcll
adc
dec
fildll
jns
or
out
dec
rol
mov
outsb
iret
push
or
fisubrs
xchg
or
in
pop
xor
ljmp
out
psubw
lds
inc
dec
in
xor
mov
jo
adc
lods
in
loope
mov
lods
xchg
jle
mov
clc
push
fsubs
mov
mov
sbb
add
in
test
cmpl
pushf
loopne
in
mov
xlat
fnsave
cmp
imul
cmp
mov
je
jle
xchg
add
add
xchg
mov
jmp
or
mov
in
loopne
mov
xchg
idivl
jno
pop
dec
push
sub
lods
xor
out
mov
dec
scas
push
jg
fs
sahf
dec
cwtl
cmp
test
dec
popa
outsb
add
dec
mov
bound
pop
stos
jle
or
cmp
cwtl
push
jmp
in
push
lret
dec
add
or
mov
in
push
dec
je
xchg
adc
out
das
test
scas
or
insb
lea
jnp
push
or
mov
gs
das
and
xchg
repz
aas
xor
ljmp
enter
loop
scas
daa
adc
xor
fsubs
push
cmc
outsl
xchg
std
add
and
lods
pop
sub
bswap
loopne
aam
mov
sbb
jnp
popf
repz
lds
push
or
inc
mov
lea
xchg
ss
pop
imul
dec
repnz
iret
aad
jno
into
inc
mov
jo
add
xor
and
xchg
adcl
movsb
addr16
mov
cmpsl
push
clc
imul
imul
push
mov
adc
bound
stc
leave
mov
inc
mov
mov
push
ret
adc
push
cmp
xchg
sahf
out
jne
lds
add
mov
sub
mov
shlb
lahf
sbbb
pop
sbb
bound
in
mov
aad
sbb
pop
or
or
ret
popa
jge
xchg
cltd
dec
inc
popa
popa
pop
loop
mov
mov
fcmovnbe
xor
add
rorl
xor
dec
jg
xchg
lret
and
xor
fwait
dec
lahf
adc
pushf
sbb
mov
les
out
pop
sbb
mov
mov
test
and
fistpl
lahf
pop
iret
xor
pusha
out
push
pushf
pushf
daa
jns
out
mov
mov
in
mov
adc
repz
in
and
bound
xchg
aas
adcl
ret
sub
adc
jge
fwait
push
xor
push
sbb
push
loopne
dec
push
add
ret
imul
pop
test
mov
stc
in
jg
mov
mov
out
inc
xchg
arpl
add
sub
push
sahf
sarb
fdivl
nop
inc
ret
lods
sub
add
jecxz
xchg
cmp
mov
ja
fcmove
rcr
inc
xor
cli
adc
mov
push
inc
push
fstp
and
pop
stos
push
cmc
mov
jb
lods
push
mov
aas
daa
xchg
xchg
sbb
add
mov
enter
xor
dec
dec
out
mov
ja
mov
sbb
xchg
andl
xchg
mov
xchg
mov
lea
adcl
fwait
outsb
cmpl
shll
jbe
sub
sets
ret
mov
fisubs
xchg
adc
repnz
and
ja
sub
loopne
arpl
dec
insb
dec
cmc
sarb
ds
cmp
push
lahf
or
sbb
lret
data16
cmc
cld
jo
nop
cld
sti
dec
cmp
mov
pop
xchg
les
xchg
xchg
cmpl
int
call
push
push
shlb
adc
mov
fdiv
add
mov
int3
outsb
movsb
data16
into
arpl
data16
push
loop
cltd
pop
cmp
push
lret
fcomps
lret
les
mov
or
sub
sbb
sahf
shll
cs
sbb
int3
adc
ret
adc
test
adc
int3
push
add
xchg
lods
cmc
icebp
out
pop
jp
addr16
mov
addb
stos
aam
js
cwtl
dec
pop
and
shrb
adc
xor
jo
push
push
and
dec
scas
loope
ljmp
enter
cmp
jnp
fsubs
pop
out
cli
inc
aam
xchg
cmp
cmpsl
sbb
xchg
sub
push
adc
popa
scas
outsb
hlt
repnz
call
xor
mov
shll
adc
jp,pn
in
insb
inc
sbb
cmp
push
sub
sub
scas
cltd
mov
sbb
or
mov
fsubrs
inc
dec
mov
in
mov
cmpl
jno
daa
and
cmp
adcl
push
sbb
xor
pushl
aaa
cwtl
push
jns
jg
icebp
xorb
insl
jl
xchg
sub
jmp
lcall
push
cmp
adc
mov
mov
push
shlb
xchg
imul
push
leave
or
inc
sub
rcl
and
jmp
xchg
orl
inc
outsl
fmulp
or
mov
mov
jmp
push
scas
xchg
enter
test
adc
add
clc
sub
lcall
sub
inc
pop
xchg
xchg
data16
sarb
and
cmp
sub
pop
mov
adc
out
lahf
andb
pop
or
inc
mov
lock
xchg
in
adc
adc
xchg
and
mov
shl
movsb
insb
fwait
in
test
std
pop
imul
jecxz
rcrb
cmpsb
mov
sahf
ret
inc
subb
dec
mov
pop
mov
xchg
mov
mov
add
in
or
lds
in
xor
adc
gs
cmp
pushf
call
add
mov
outsb
pop
jo
shll
mov
inc
aam
fsubrs
imul
pop
jp
fisttps
lods
lods
cmp
sub
xchg
scas
in
and
dec
xor
sub
inc
loop
inc
sub
dec
and
daa
jl
mov
nop
or
int3
jmp
jb
scas
add
pop
shl
sti
popa
test
sbb
les
add
pop
std
add
ret
dec
fstpt
pop
loop
jne
pushf
pop
shl
cmp
cmp
ficoml
push
jno
push
out
jl
shll
xchg
add
mov
in
sti
sub
int3
push
dec
ljmp
inc
or
gs
push
nop
adc
stos
xchg
add
data16
sbb
xchg
sbb
lds
and
jbe
mov
cmc
xchg
aad
cmp
jp
or
aam
push
mov
and
pop
in
mov
daa
lcall
jo
rol
shrb
mov
and
out
mov
mov
cmp
mov
in
imul
xchg
add
scas
dec
jge
jne
xchg
clc
sbb
cmp
outsb
mov
je
rcrl
jmp
sbb
iret
ljmp
lea
xchg
loopne
xchg
mov
or
filds
push
rcll
mov
mov
mov
and
popf
jne
mov
mov
adc
or
cmp
adc
adc
jae
xor
rcll
in
cmpsb
sti
and
sub
or
cmp
testl
push
inc
sub
popl
leave
sub
sub
jnp
in
inc
mov
addr16
cmpsl
sub
out
mov
jno
pop
lahf
mov
loope
push
or
je
popl
in
sub
bound
loope
mov
pushf
xchg
in
sbb
imul
push
dec
addl
loope
sti
mov
mov
ljmp
xlat
sbb
pusha
pop
ja
rorl
mov
inc
cmp
lcall
fmull
inc
out
lahf
pop
fisttps
jge
inc
in
in
jle
xor
inc
mov
loop
out
cs
adc
sbb
add
jge
adc
cld
gs
add
cmp
cld
inc
cmp
inc
xchg
fldl
popa
xchg
test
test
adc
mov
cmc
js
lret
shlb
mov
dec
jp
pop
movsb
mov
push
repnz
xchg
sbb
outsb
sbb
push
pop
push
add
xor
stos
lahf
je
out
das
jg
inc
mov
inc
rcr
and
mov
inc
push
aas
lret
mov
mov
outsb
cmp
cltd
xchg
mov
outsb
das
int
cli
or
mov
or
je
pop
inc
fstp
cli
adc
pusha
sub
ds
std
inc
imul
sbb
add
dec
es
dec
cmp
out
mov
dec
ja
xor
imul
out
jl
cmp
mov
mov
cmpsl
fstp
iret
lds
rorl
iret
jnp
lea
incl
adc
rol
out
cmp
inc
test
stos
add
mov
lods
jg
pushf
das
nop
sub
xchg
pop
adc
movsl
jb
mov
inc
mov
stos
loope
push
inc
jl
inc
stc
imul
xlat
and
test
movsb
and
cmpsl
jnp
popa
outsl
xor
scas
mov
std
adc
lret
push
xor
popa
xchg
sbb
pop
inc
out
adc
sub
cld
aad
mov
imul
lods
jmp
gs
or
enter
fnstenv
adc
enter
dec
test
hlt
pop
mov
mov
cmp
xchg
pop
xchg
and
xor
mov
push
pop
or
and
popf
sub
push
xchg
arpl
shl
cmp
add
rcrl
cmc
jnp
mov
shl
out
xor
imul
jo
idiv
xor
and
push
dec
pop
nop
ljmp
pusha
mov
jp
fcoml
ss
int
xchg
cmpb
sahf
popf
pop
cwtl
test
jp
jle
int
lret
xchg
or
fcoms
jno
out
loop
in
add
or
mov
push
adcl
inc
pusha
push
dec
xor
or
mov
dec
cmp
pop
jge
out
filds
cmpsl
xchg
mov
sahf
jmp
fstps
xchg
jne
cli
stos
sbb
and
jno
pop
mov
mov
aas
or
jnp
aad
inc
pop
dec
xor
xchg
cmp
repnz
scas
or
cmp
mov
mov
xchg
out
mov
shll
jae
push
loop
in
push
cld
in
out
ficompl
lret
add
test
mov
jne
jle
mov
jl
scas
xchg
cld
or
subl
sub
orl
dec
mov
jmp
test
inc
je
int3
pushf
cli
ret
js
or
sub
mov
adc
mov
mov
cwtl
jecxz
cwtl
cmp
lea
pop
mov
test
movsl
ds
and
push
stos
xor
or
rclb
imul
dec
xchg
xor
mov
push
cld
stos
clc
out
mov
xchg
je
xor
or
xor
mov
out
inc
addr16
pop
int
xor
cmpsb
shrb
pop
jns,pt
movsb
sub
xchg
lcall
sbb
sti
adc
clc
repz
pop
daa
int3
lods
test
jnp
inc
jmp
mov
repnz
test
xchg
cmp
jle
das
aam
bnd
inc
jo
fists
cmp
loop
mov
jne
mov
pop
pop
dec
in
xchg
pop
sbb
int3
add
loopne
sbb
mov
cmp
cmpsl
push
push
jecxz
das
popf
fisubrl
in
and
arpl
push
dec
imul
mov
jmp
dec
mov
cmp
sbb
mov
rorl
pop
sbb
les
out
movsb
mov
adcl
pop
add
xor
mov
inc
pop
int
pop
fsubl
pop
pop
mov
jno
fnstenv
sar
mov
inc
mov
xchg
cmp
or
dec
test
push
aaa
or
lret
mov
cmp
dec
push
mov
rcll
mov
mov
push
push
aad
and
mov
inc
xchg
ficomps
cld
int3
test
sbb
mov
fnsaves
shrb
push
pop
test
ficoml
cmp
push
inc
jne
pop
dec
jno
fcmovne
cmp
les
insb
push
push
mov
fcomps
loope
and
add
shrb
mov
ss
inc
sahf
pop
xor
sub
enter
stc
in
pop
ficoms
sbb
popf
roll
rclb
mov
mov
addr16
inc
aad
pop
xor
mov
pop
test
mov
insl
xor
stos
fcomps
out
xchg
push
xchg
out
test
outsl
xchg
jno
push
or
dec
insl
xchg
fidivrl
fnstcw
mov
mov
mov
lods
inc
push
or
test
dec
int3
xchg
mov
int
adc
jno
rclb
out
pop
lret
or
sbb
aam
pop
push
sub
add
xchg
mov
and
enter
roll
mov
xor
lret
pop
jae
pushf
or
mov
mov
sub
xor
lea
sbb
rcl
push
call
sub
mov
inc
lret
mov
mov
pop
ja
xor
dec
jno
adc
fidivrs
add
add
and
inc
shrb
fcmovb
fdivrs
cmp
mov
loop
rol
test
sub
inc
fsubr
jl
sub
cmp
mov
jecxz
inc
cmp
loopne
clc
xor
cld
dec
mov
popl
add
or
fidivrs
shl
mov
iret
add
push
psraw
jne
push
je
cli
sub
push
mov
xor
or
imul
fdivrs
outsl
lods
xchg
lea
mov
inc
cld
mov
mov
in
jb
scas
mov
jecxz
stc
ret
mov
loop
inc
es
jecxz
sahf
jno
out
test
and
push
push
rclb
data16
jne
adc
mov
push
nop
inc
pop
sub
rcrb
pusha
cmpsl
pushf
push
test
out
xchg
scas
call
lds
es
lock
xor
rcll
inc
mov
xor
inc
divl
dec
mov
lcall
xor
mov
sub
and
mov
push
xchg
fsubl
stos
inc
mov
adc
push
push
std
dec
shll
fdivl
mov
inc
push
nop
stos
push
pop
js
inc
mov
mov
lock
lds
cwtl
sbb
push
dec
in
cwtl
imul
mov
roll
adc
jmp
cmp
aas
hlt
xchg
adcb
jo
and
sbb
lret
push
jecxz
imul
lret
xchg
mov
cmp
xchg
push
mov
or
ret
daa
rclb
xchg
adc
push
outsl
flds
fildll
jb
adc
add
cs
insb
xor
test
mov
outsl
rorb
idivl
add
jnp
rcll
push
cmp
cltd
sarl
jb
jle
jmp
lods
mov
inc
ds
scas
cmpsl
sub
mov
lret
in
push
pop
shlb
xchg
dec
add
mov
es
fs
es
fsubrs
movsl
push
in
dec
sbb
push
pop
adc
les
imul
pop
sub
pop
je
dec
xchg
rcrb
mov
xchg
int3
add
pop
xlat
cmpsb
out
outsl
cmp
pop
inc
aad
sbb
testl
mov
mov
or
scas
jmp
aas
sub
lcall
jbe
push
jbe
mov
xchg
insb
es
pushf
xchg
aaa
adc
inc
in
scas
pop
ja
add
or
out
dec
mov
xor
xchg
ljmp
hlt
lahf
fs
mov
in
aam
jb
subb
shl
mov
imul
inc
add
mov
and
xchg
jo
cmp
icebp
push
out
icebp
repz
lahf
jle
jae
adc
cli
add
data16
fimull
mov
xchg
out
push
sub
dec
cmp
in
xchg
mov
xor
cwtl
mov
fistl
mov
test
test
loopne
cmp
nop
mov
cwtl
jg
push
xor
dec
into
sbb
pop
xchg
test
nop
fsubrp
mov
fwait
test
adc
in
out
and
add
xor
cmpsl
cmp
daa
pop
test
jp
imul
leave
int
sbb
call
mov
or
xor
mov
jne
sbb
lcall
push
xor
lret
pop
fwait
ljmp
adc
mov
or
int
cli
and
inc
adc
and
nop
lahf
xor
repnz
out
outsb
mov
or
mov
rolb
add
pop
push
out
or
cmpsl
jp
or
imul
rcll
adc
jbe
push
dec
inc
sub
sbb
subl
mov
out
and
push
jmp
pop
imul
and
add
push
setnp
push
lret
push
mov
add
dec
ds
adc
xchg
mov
cmc
add
lret
daa
mov
jnp
lock
sub
or
jl
filds
mov
jmp
pushf
movsb
xchg
adcl
or
mov
xorl
aam
shrl
or
xchg
loope
repz
cmpsb
andb
out
cmp
or
insl
cmp
imul
fcoms
mov
push
jmp
adc
jp
mov
test
into
out
inc
movsw
inc
cmp
cmp
or
cmpsl
arpl
movzbl
or
inc
push
clc
adc
jne
push
dec
mov
mov
xchg
sahf
dec
mov
mov
xor
push
cmp
fstpt
inc
dec
xchg
stos
shl
idivl
mov
cmp
sbb
adc
xor
shll
sbb
and
push
ja
inc
js
cmp
push
sbb
cmp
cmp
loop
push
cltd
punpckldq
and
insl
and
cmp
mov
pop
scas
loopne
imul
fimull
mov
test
xchg
rcrl
dec
pop
mov
clc
jg
and
cs
fstl
adc
popa
lds
pushf
js
or
imul
stos
inc
ficoml
inc
push
mov
cli
int
sarb
mov
in
mov
int
inc
insl
jno
push
adc
jg
push
flds
mov
aad
mov
xchg
jo
cmc
sub
xchg
xchg
push
jns
push
repz
mov
xchg
arpl
xor
out
push
jb
sbb
test
ja,pn
pop
std
repz
cmp
nop
push
sbb
fwait
cmp
inc
xorl
xor
ret
fbstp
mov
cmpsl
fucomp
pop
mov
pop
mov
pop
mov
shufps
mov
adc
lds
cmp
cwtl
lret
lahf
popl
shlb
shll
sub
adc
jecxz
movsb
fcompl
gs
or
jns
fxch
cmp
ja
adc
ja
xchg
repnz
mov
scas
ja
xor
add
mov
popa
jo
std
lahf
in
pushf
cmpl
mov
mov
gs
inc
add
pusha
call
movsl
out
ror
nopl
inc
loop
sbb
filds
xor
movsb
jmp
cld
in
out
imul
int
cmc
shll
ficomps
lods
fs
xor
nop
test
or
jp
xor
mov
inc
push
ja
cmp
dec
testb
add
lock
pushf
push
jecxz
xor
xor
lods
cmpsb
pop
push
cmpsb
ret
mov
adc
mov
xchg
inc
stc
add
dec
xlat
xor
pop
dec
popf
loopne
add
cmp
push
adc
std
push
mov
cmp
add
push
mov
sub
imul
loopne
cmpsl
lods
lock
inc
cltd
pop
cli
int
mov
mov
fistpl
clc
sbb
filds
mov
push
and
cltd
cmp
push
rcr
adc
fdivp
mov
and
pop
roll
jbe
test
pop
lret
fcompl
push
and
mov
lods
je
js
insl
rolb
enter
hlt
testl
xchg
aaa
push
test
lret
rorb
in
ljmp
xchg
scas
imul
cli
mov
imul
stc
jns
pop
cmp
mov
cmp
sub
or
pusha
mov
rorb
outsl
xchg
pop
movsl
xlat
scas
stos
mov
int3
sbb
cmc
repz
inc
xor
pusha
xchg
adc
mov
xlat
das
shl
popa
js
test
aas
mov
add
stos
sarl
sbb
inc
enter
mov
iret
je
push
and
repnz
and
nop
mov
fldl
push
push
push
mov
das
mov
repnz
sub
shlb
push
push
fisubl
xchg
push
xchg
nop
fidivs
dec
add
into
pop
mov
cmp
shlb
test
loopne
lods
call
dec
outsb
fisubrs
add
sub
mov
sahf
enter
rcll
movsl
fsin
or
dec
fsts
imulb
insl
jnp
mov
pusha
xor
loop
ss
insb
addr16
hlt
mov
mov
and
sub
out
push
add
repz
or
or
test
sub
mov
adc
mov
pop
mov
gs
gs
outsb
jmp
adc
adc
bound
and
and
sbb
es
pushf
shrb
test
adc
mov
clc
cmc
mov
aad
ds
mov
aad
mov
xor
out
cmc
nop
std
sub
xchg
lock
aaa
sarl
fists
cmp
push
fadds
shll
xor
cmp
out
mov
inc
mov
mov
sti
imulb
or
lcall
or
sbb
jp
ja
or
inc
pop
test
cmp
cmp
in
testl
inc
xchg
push
aad
pop
push
cmp
test
popa
pop
push
cmc
clc
mov
push
popf
jg
cmp
cli
fcoms
in
add
ss
in
mov
mov
sub
and
out
das
fwait
sbb
ficoms
jnp
test
aas
fs
mov
out
pop
and
gs
mov
jl
jno
test
aam
andb
shll
movl
pop
cld
in
data16
pop
cmc
dec
adc
mov
adc
les
pushf
xchg
push
into
xor
mov
notb
test
inc
mov
fstpl
movsl
xor
cmpsb
das
sub
dec
dec
iret
lock
jg
jo
xchg
popf
mov
mov
and
dec
jle
leave
out
shll
and
sbb
and
pop
and
push
mov
pop
ja
adcb
add
das
xchg
rcll
push
iret
jge
stos
pop
movsb
aad
pop
xchg
js
roll
in
sbbb
scas
pushl
xchg
mov
cmc
cmp
cmpsb
sub
cmp
mov
addr16
dec
das
in
pop
aas
into
push
sahf
cmp
lret
mov
rolb
mov
push
arpl
sbb
ret
or
sub
cmp
scas
push
in
cmpsl
inc
test
push
clc
cltd
jp
sub
mov
test
mov
enter
adc
add
rorb
dec
inc
out
mov
xchg
xchg
cmpsb
add
xchg
xchg
dec
popa
incl
incb
and
loope
fcoms
das
icebp
outsl
sbb
mov
sub
lret
mov
lock
in
sbb
movsb
leave
stos
es
sarb
loope
pop
jp
cmp
addl
xor
sbb
push
jp
mov
outsl
das
xor
push
fcmovu
pop
mov
sbb
mov
push
xchg
lahf
and
loope
nop
int
mov
mov
movsb
jge
mov
inc
int3
adc
lods
fmull
stos
les
jmp
add
mov
cmp
mov
dec
xchg
popf
cmp
dec
pop
sarl
pop
mov
push
enter
mov
add
call
call
aas
gs
in
mov
out
jno
cmp
dec
inc
dec
dec
popa
shrb
enter
jne
sbb
in
ja
enter
push
inc
mov
aam
in
test
mov
loope
dec
fiadds
in
test
inc
pop
mov
inc
pop
data16
inc
adc
add
or
fstpl
out
and
mov
cmp
dec
and
add
mov
or
jo
adc
ret
pop
ret
and
cmc
nop
test
mov
add
arpl
cld
gs
or
arpl
scas
sarl
adc
loope
and
push
movsl
aas
test
jmp
pop
es
sbb
cmp
xchg
jl
mov
sub
fisubs
lcall
jo
fildl
jns
jl
xchg
sbb
lret
arpl
movsb
shl
xchg
data16
aas
xchg
jns
pop
jbe
test
pop
ss
xor
add
or
and
lret
leave
jecxz
xor
push
enter
mov
sahf
aas
or
jne
xlat
jne
xor
and
ucomiss
or
testl
loope
xor
push
fs
inc
mov
mov
sbb
out
data16
repz
push
fcomps
pushf
das
pop
mov
stos
pop
xchg
lods
xchg
pop
andb
iret
xor
aas
fnsave
test
sbb
adc
dec
inc
mov
jle
aaa
rcl
sub
cli
mov
or
jge
pop
movsl
push
push
lea
push
shll
ret
mov
push
mov
jl
mov
cli
dec
add
xchg
dec
cmc
lock
push
mov
movsb
xor
sub
dec
lds
or
xor
inc
gs
dec
inc
sahf
and
in
and
xchg
mov
lods
inc
pop
add
outsl
push
lahf
push
jl
xor
inc
push
adc
aad
dec
loope
dec
mov
or
clc
js
mov
push
mov
int3
dec
sub
movsl
popa
add
cmp
loope
xor
mov
lret
ljmp
andb
sbb
leave
or
ljmp
test
psrld
fildll
mov
rorb
cmp
imul
ret
es
adcl
mov
or
rorl
lods
xor
ja
cwtl
jae
add
mov
das
sbb
mov
xor
jl
adc
outsl
fs
sahf
xor
sbb
lods
inc
or
mov
loopne
sar
push
dec
in
dec
jl
bound
add
repnz
test
je
pop
pop
dec
in
mov
dec
pusha
xchg
and
mov
jle
cmp
icebp
ficompl
out
out
lock
pop
inc
jg
push
mov
fwait
movsl
mov
jnp
add
xor
nop
ss
sub
call
jbe
ljmp
movsb
ds
int3
adc
cmp
in
popa
cs
pop
outsl
sahf
dec
push
push
aam
lcall
cs
stc
addr16
js
ja
fabs
xor
ja
lods
and
push
pop
leave
cli
xchg
push
bound
xlat
push
cmovle
std
mov
fistpl
cmp
stos
fildl
int
popa
lock
lds
lea
insb
test
adc
push
and
inc
ds
jo
into
mov
out
xchg
cmp
pusha
repnz
push
repz
cli
xor
in
fstps
flds
fistl
into
jg
lret
dec
jo
mov
and
into
or
leave
sub
shll
jo
mov
xor
jbe
mulb
xor
sub
mov
mov
mov
cs
sub
fisubrl
adcl
push
int3
mov
xchg
int
dec
add
xor
shrl
push
adc
sbbb
dec
jge
cmp
sarb
inc
cmp
push
dec
pop
and
mov
pushf
loopne
jae
ljmp
mov
dec
mov
inc
hlt
nop
mov
cmp
jl
push
xchg
sub
cmp
mov
jno
xchg
mov
push
dec
pusha
add
scas
sbb
outsl
loop
xchg
shl
sub
js
imul
dec
movsl
mov
jmp
bound
add
outsl
hlt
jnp
cs
xchg
sub
loope
lret
aad
mov
push
ljmp
push
xchg
xor
xor
xor
inc
adc
push
jnp
outsb
cltd
aas
xor
xor
pusha
arpl
push
scas
push
out
cltd
in
pop
lahf
test
cli
out
lcall
aam
lea
or
add
ds
push
mov
int3
out
rcrl
aad
xchg
push
cli
add
mov
jae
jnp
push
mov
xchg
jns
or
push
test
loopne
loope
or
inc
ret
push
jb
in
jle
xchg
add
jno
add
repnz
cmp
add
pop
ja
mov
gs
jbe
jne
mov
or
mov
lcall
pusha
mulb
mov
addr16
popa
hlt
leave
or
repnz
xchg
push
push
mov
imul
repnz
jbe
fdivs
xchg
cmp
adc
add
add
or
sbb
xchg
in
xchg
cmp
test
jecxz
stos
movsb
popa
fstpl
cmp
jbe
pusha
cmp
xchg
adc
bound
fwait
and
stos
aaa
mov
hlt
push
lods
lock
lods
pop
xchg
pop
jae
insl
push
mov
mov
sahf
mov
imul
js
mov
dec
call
lcall
inc
dec
movsb
cld
mov
pop
sbb
jns
cs
push
mov
movsl
dec
bound
dec
lds
bound
xor
mov
cli
push
aam
or
pop
loope
std
arpl
les
sub
jnp
adcb
pop
movsb
stos
dec
inc
cmp
push
mov
mov
dec
imul
adc
lock
add
out
ret
jne
mov
fs
cmp
data16
inc
xchg
test
out
jnp
mov
ljmp
lret
inc
test
leave
xor
inc
sub
fwait
insl
fs
add
in
or
aam
xor
incl
mov
jmp
aas
popa
loopne
or
lods
and
aas
repz
add
mov
mov
push
filds
cwtl
scas
xchg
mov
push
lods
inc
push
mov
into
pop
addr16
jecxz
pushf
pop
adc
mov
sbb
imulb
dec
xchg
insl
aas
or
stos
xchg
push
rorb
iret
push
enter
lds
loopne
mov
test
xchg
inc
imull
and
into
xchg
mov
lahf
xchg
cmpl
hlt
push
ja
add
jno
and
dec
xchg
lret
pop
and
cmp
loope
adc
mov
imull
pop
xchg
jne
jp
push
dec
pop
inc
add
enter
outsb
and
xor
adcl
jae
lret
bound
test
inc
jbe
shll
cmp
cmc
cmpl
inc
rclb
jbe
push
rol
fsts
pop
jmp
mov
ret
push
dec
push
ljmp
push
outsl
adc
hlt
pop
aad
test
xchg
push
dec
xchg
and
sbb
dec
out
mov
cld
insl
pop
je
out
sbb
add
divb
popa
mov
fs
mov
lock
pop
sub
push
and
cmc
pop
mov
dec
add
cmp
sub
cli
inc
std
insl
sbb
pop
push
arpl
stos
jl
lret
popf
and
sbb
xor
sub
roll
cmp
lods
mov
stos
inc
or
int3
filds
enter
movsb
pusha
jecxz
ret
add
inc
xchg
popa
jge
imul
jo
add
or
xor
ja
adc
aaa
jnp
mov
jge
dec
div
packuswb
test
test
push
xchg
lret
fs
mov
icebp
js
loope
shlb
xchg
sub
xor
test
inc
add
dec
test
or
pop
jl
xlat
sbb
xchg
rcll
lea
pusha
shrb
cmpsb
es
push
cmpsl
inc
mov
push
je
mov
xor
jge
pop
jnp
or
push
adc
push
call
in
mov
or
std
popf
sbb
test
ljmp
push
int3
mov
sahf
mov
scas
dec
rcr
stos
iret
mov
mov
adc
insb
cmp
stos
cs
xor
mov
jno
fs
outsb
dec
insb
loop
es
add
inc
mov
adc
bswap
nop
xlat
push
mov
add
bound
adc
sbb
fldt
jno
mov
xchg
popa
xchg
aaa
mov
icebp
and
cmpsl
addr16
adc
push
icebp
fmuls
ljmp
cli
fwait
pop
jge
mov
add
sbb
xchg
out
inc
ljmp
push
mov
es
aas
decb
pop
mov
or
or
cli
addl
inc
cmp
lea
sub
mov
pushl
dec
aad
sti
cli
rcrb
mov
mov
ss
cmp
scas
and
bound
fcmovbe
mov
push
pop
mov
cmp
movsb
sub
jbe
dec
jno
das
cmp
aaa
pop
das
and
mov
repnz
jne
jp
rclb
inc
mov
jb
mov
sbb
sub
sub
mov
mov
enter
fsubrs
scas
inc
inc
or
lahf
fadd
push
mov
leave
mov
sbb
sbb
sub
std
out
mov
jmp
jp
cld
mov
xor
sbb
pop
loopne
jl
jns
movsb
test
fptan
jg
je
cmpsb
adc
sbb
shl
addr16
adc
repz
dec
mov
and
xchg
std
repnz
cli
lods
repz
test
rcrb
in
sub
dec
into
repnz
dec
xor
adc
jo
mov
add
xchg
out
xchg
pop
cmp
sti
cmc
sub
lret
push
inc
mov
xor
xor
push
mov
clc
cmpl
adc
or
jb
jge
cmp
sub
mov
push
in
loope
mov
dec
xchg
fisubrl
fdivrs
je
push
xor
hlt
mov
inc
jmp
loope
inc
outsb
mov
dec
mov
xor
dec
neg
jl
dec
ljmp
pop
inc
sbb
in
fidivl
xor
dec
mov
scas
adc
cwtl
insl
xor
xchg
jl
push
jp
clc
pop
lods
cmpsb
dec
decb
pushf
mov
dec
pop
mov
xor
and
ljmp
repz
sahf
xlat
inc
lret
je
jae
lret
push
cmpsl
adc
jnp
test
insb
loope
stc
push
or
rclb
int
jo
stc
push
ret
adc
adc
or
add
mov
ljmp
sub
mov
shlb
in
add
xchg
pop
push
negb
test
pop
inc
pop
ds
es
hlt
mov
orb
fldl
mov
xchg
out
adc
in
test
sub
cs
push
out
jmp
dec
jecxz
add
push
push
std
movsl
pop
fidivrl
push
pop
movhps
in
mov
test
push
jae
pop
xlat
lret
or
lahf
push
adc
adc
pop
inc
mov
jbe
lock
fwait
lcall
dec
lret
mov
fwait
rcrb
sub
ds
jae
leave
xlat
stos
add
jle
shlb
in
dec
lods
mov
sub
inc
push
out
mov
les
loope
mov
add
mov
xor
das
add
ds
inc
dec
mov
iret
sbb
test
out
pop
push
movsb
mov
push
cli
fdivrs
popf
xchg
mov
je
mov
jl
mov
bound
je
and
cmpsb
lods
push
movsl
test
cmp
loopne
stos
in
fbstp
xchg
rol
sti
jg
outsb
popa
inc
jne
int
iret
data16
mov
rorb
out
mov
in
and
je
sbb
lods
mov
jl
enter
or
lods
fs
test
loopne
mov
dec
mov
jmp
lock
adc
cmp
call
fs
mov
xor
inc
rcr
mov
cltd
jnp
loope
iret
scas
fstl
lcall
scas
lret
dec
cmpsl
outsl
mov
mov
add
test
push
pop
imul
xlat
scas
xor
imul
add
dec
mov
repz
jnp
mov
or
hlt
int
push
in
fldcw
and
gs
jg
sbb
or
mov
stos
mov
inc
pushf
add
mov
mov
fwait
sub
mov
adc
xor
xchg
cli
rcll
lret
jg
push
mov
std
sarl
cmp
mov
sbb
xor
outsl
mov
aas
mov
mov
adc
lret
pop
xor
jle
pusha
xchg
cmp
dec
push
inc
or
in
and
aas
xor
sub
push
push
adc
insl
js
xchg
outsl
inc
ja
pop
push
mov
in
cmp
popf
repnz
fcmovb
jp,pt
pop
and
aad
enter
xchg
repz
pop
dec
push
mov
mul
sbb
leave
push
hlt
pop
sti
insb
and
std
push
push
aas
adc
in
add
mov
rclb
in
jbe
loopne
jecxz
mov
out
mov
lock
ds
rorl
dec
push
test
pop
je
ret
cwtl
sbb
lret
push
or
cmc
pop
mov
pop
sbb
jo
subb
sbb
imul
or
xchg
sub
subl
pop
dec
fcmovbe
jo
pop
xorb
xchg
add
dec
mov
lcall
xor
push
or
cmp
cmpb
out
xchg
lds
pop
mov
sbb
and
popa
out
mov
fidivrl
jg
mov
push
xlat
sbb
mov
nop
enter
dec
xorl
cld
jo
jae
dec
stos
mov
mov
cmp
sti
inc
cmpsb
fisubs
subl
or
mov
aad
leave
call
outsl
mov
sub
repz
mov
xor
aad
adc
aam
cs
jb
push
mov
xor
sbb
aaa
aad
notb
add
addr16
jl
loop
fsubrs
in
xchg
and
add
jns
cmp
std
xchg
iret
popa
ljmp
stc
into
shrl
shll
sub
rcll
fistpl
pop
mov
cmp
loop
jne
mov
aam
roll
sub
mov
xchg
ficomps
fdivrl
fimull
add
mov
stos
xchg
push
ss
aaa
cmpsb
movsb
lods
inc
jne
imul
sbb
scas
pop
mov
push
test
cmp
xor
mov
loope
out
or
lds
adc
pop
mov
rclb
xor
addl
sbb
and
les
add
pop
xchg
dec
mov
repz
ret
jbe
jle
sub
adc
sub
clc
lods
je
js
add
jno
pop
inc
lods
jg
rep
jo
mov
adc
push
sbb
cld
mov
cmp
jnp
add
pop
arpl
jne
mov
cmp
ja
mov
mov
es
into
cmp
or
add
mov
pushf
sub
test
jmp
pop
dec
test
inc
sbb
cmp
mov
mov
je
mov
test
pop
dec
xchg
pop
insl
jns
xor
outsb
fiaddl
mov
mov
xchg
outsl
lods
mov
and
sahf
sbb
mov
or
ljmp
xchg
ss
xor
decb
dec
into
popa
mov
scas
ret
bound
xchg
cmp
push
imul
sub
testl
rcrl
ja
scas
sub
xor
and
ret
je
sub
daa
adc
xor
or
mov
xchg
cmpb
pop
loop
adc
dec
enter
pop
mov
inc
sbb
js
sar
pop
or
jne
dec
call
sub
stc
add
imul
sub
jle,pt
mov
mov
daa
daa
imul
pusha
xchg
andl
mov
ds
stos
push
pop
mov
mov
adc
mov
mov
pop
pop
push
inc
lea
mov
add
ret
or
adcl
push
ss
sahf
dec
jg
cmp
negl
outsl
insl
or
lea
cmpsl
adc
je
fwait
das
lahf
stos
pop
or
dec
cs
cmp
mov
mov
pop
hlt
into
push
sbb
shlb
out
jo
pop
pop
test
cmp
js
adc
rorl
push
inc
cmp
gs
xchg
add
push
loop
negl
in
clc
lahf
add
test
std
add
jns
insl
adc
xorb
jo
sti
mov
jl
movsl
shll
nop
adc
cs
jbe
gs
clc
jge
imul
adc
sbb
cmp
cmp
xchg
mov
jmp
fmull
mov
add
enter
movsb
scas
cltd
cmp
insb
push
and
popf
dec
sti
jb
leave
clc
push
not
outsl
lret
dec
mov
push
rorb
sub
mov
daa
mov
cmpsl
pop
sbb
repz
pop
rorb
jnp
test
das
insb
lret
mov
data16
mov
sub
fsubrs
or
rorl
xor
sbbb
jbe
jp
dec
adc
jecxz
iret
jmp
mov
xchg
jns
mov
dec
cwtl
repz
sbb
aaa
xor
adc
inc
adc
cli
jae
pop
xchg
pop
lods
dec
dec
adc
mov
or
les
xchg
push
lret
int3
push
xchg
pop
hlt
mov
push
inc
imul
imul
call
cmp
ret
mov
cli
fnstcw
scas
mov
or
movsl
loope
cmc
icebp
pop
aam
dec
add
fs
xor
mov
mov
adc
inc
lea
test
pop
adc
pop
mov
sub
mov
jb
cld
jl
dec
ret
sti
push
sub
stos
sub
cmc
stc
add
in
and
dec
mov
pop
call
adc
lcall
xor
sbb
mov
xchg
out
sub
popf
cmp
mov
hlt
shl
push
mov
xlat
mov
mov
in
daa
and
out
mov
jbe
out
pop
test
roll
fwait
sub
lahf
test
push
repz
add
xor
jp
call
jae
mov
or
or
push
jl
push
mov
jbe
ja
les
dec
sbb
js
ds
data16
inc
inc
fnstsw
jg
or
push
sbb
cli
loop
push
cmp
je
dec
fnstcw
and
mov
and
xchg
in
xor
cltd
push
cmpsb
es
adc
test
inc
into
xchg
xchg
fstps
aam
mov
shl
fcomps
inc
xlat
jg
fs
adc
enter
xorb
mov
push
pop
cmp
in
loop
fcompl
daa
inc
push
inc
pop
cli
popa
lret
popa
fimuls
jecxz
mov
mov
fstl
xor
cld
cmp
dec
mov
fwait
aam
sub
es
dec
inc
push
inc
inc
mulb
addr16
out
aaa
das
shll
rolb
inc
andb
ret
aaa
ret
mov
mov
cmp
push
addr16
inc
pop
and
xchg
setne
movsb
in
mov
mov
fs
add
xor
adc
or
aaa
pushf
popa
xchg
movsl
push
pusha
mov
inc
adc
pushf
inc
jmp
jp
loope
dec
cmpsb
loope
shlb
mov
scas
or
push
rorb
mov
xchg
and
mov
clc
aad
xchg
insl
dec
push
popf
lea
pop
and
negb
adc
das
hlt
add
push
out
lcall
jmp
mov
test
aas
arpl
mov
add
add
ljmp
cmc
das
inc
lcall
lahf
clc
cmp
pushf
in
hlt
insb
call
rcl
outsb
pusha
jl
sub
jle
cs
sbb
sbb
notb
push
xchg
out
mov
shl
push
add
das
adc
mov
outsl
popf
repz
faddl
mov
mov
ja
addr16
ljmp
into
lahf
push
cmp
sub
daa
lods
mov
and
fisubrl
adc
push
mov
mov
mov
sbb
mov
fs
pop
mov
icebp
jne
das
lea
jecxz
mov
sbb
jo
and
adc
ja
cli
fucomi
jmp
inc
test
fcoml
scas
stos
fwait
fs
mov
mov
add
push
ljmp
cmp
popl
inc
aam
xorl
adc
cmpsl
dec
jmp
dec
push
jl
push
daa
or
cmp
cs
bound
push
stos
cmpsb
adc
cmp
xchg
jmp
lods
dec
ret
add
lds
cmp
lods
sub
std
out
cmp
jnp,pt
xlat
int3
pop
std
js
push
mov
and
sbb
jg
ds
pop
aaa
mov
lea
adc
add
dec
iret
jp
stos
neg
xor
fcompl
jo
sbb
fistpl
call
pop
jp
push
push
nop
push
add
das
or
fs
lds
jb
ljmp
imul
jge
lahf
mov
lret
sbb
mov
sbb
shlb
inc
sbb
dec
fcomps
es
movsl
outsl
sub
lods
iret
lahf
ja
add
fdivrp
fisubs
jmp
pop
pop
int
sub
adc
or
xlat
in
sbb
aam
mov
mov
fstps
sti
add
xchg
pop
das
xchg
or
es
inc
out
add
dec
mov
mov
push
aaa
mov
insb
rcr
test
clc
int3
adc
adcb
xor
fwait
and
cmp
mov
and
nop
push
lcall
xlat
push
pop
sbb
mov
jg
insb
add
fisubs
out
xchg
cmp
and
mov
mov
and
or
xlat
in
cmp
scas
pop
add
test
jp
adc
inc
stos
adc
jg
or
ret
or
dec
movsb
jge
mov
sub
inc
out
scas
mov
int3
jp
test
adc
leave
cmc
les
shll
mov
sarb
jl
xchg
test
xor
iret
ljmp
push
xor
inc
add
mov
add
ss
mov
add
jp
mov
mov
in
adc
pop
push
jae
mov
jecxz
push
shr
jmp
xor
push
jmp
jle
pop
fwait
cmp
sahf
shlb
add
dec
xchg
jg
mov
sbb
out
aaa
das
cmp
jle
repz
rorl
jo
jo
lock
mov
xchg
xchg
add
lcall
push
test
int3
push
cmp
jb
push
rcl
mov
sarl
adcb
xchg
xchg
pop
outsb
stos
fs
jp
aad
aas
out
pop
insb
push
mov
shrl
addr16
push
dec
fldcw
cmc
jo
push
cmp
push
outsl
mov
in
imul
movsl
fildl
negb
ja
out
mov
push
xchg
push
test
mov
jae
insl
xor
out
mov
lahf
mov
scas
fldl
bound
aas
sub
jns
xchg
mov
test
dec
call
pushl
and
adc
ficomps
jne
and
js
movsl
jo
jne
sti
fsubp
xchg
jb
sub
or
into
push
sbb
adc
pop
stos
dec
scas
pop
fcompl
fldt
in
fidivrs
daa
out
push
popa
fs
popa
test
dec
add
loopne
sbb
cmp
ficoms
into
cmp
fwait
test
jmp
fimull
adc
in
shlb
mov
inc
adc
xchg
aam
or
mov
adc
test
xor
push
mov
mov
add
mov
lock
mov
sub
bound
addb
dec
addr16
sub
popf
loopne
cmpl
mov
cmpsl
neg
adc
dec
jp
fwait
mov
shll
scas
mov
fxch
sub
arpl
mov
xor
shlb
sub
pusha
aas
repz
and
fs
outsb
push
pop
mov
push
in
push
jne
pop
fucom
out
fiadds
out
out
popw
lret
adc
repz
stc
jecxz
mov
fldlg2
or
das
and
mov
js
push
or
lods
dec
pop
inc
aas
jp
ja
jp
push
or
inc
fsubs
mov
cli
fldl
cld
mov
scas
jo
hlt
sub
mov
cmp
sbb
popf
mov
in
sbb
icebp
mov
fs
push
lods
sarl
mov
test
cwtl
mull
pop
orb
adc
jno
decb
push
jbe
jns
outsl
mov
mov
mov
sahf
xchg
jg
jb
or
loope
rcrl
dec
xor
in
or
fsubl
imul
daa
arpl
or
ss
ljmp
jnp
sbb
dec
scas
scas
mov
lret
lret
mov
sbb
xchg
push
imul
pop
sub
and
push
pop
imul
xor
mov
lods
ss
stos
es
insb
outsl
mov
inc
in
push
push
sub
push
add
pop
dec
mov
mov
rcll
fldl2e
or
shrb
mov
sbbb
loop
jb
mov
pop
push
and
es
cmp
aas
mov
dec
cmp
cs
xchg
mov
imul
rcrl
cmp
dec
ss
sub
jbe
mov
lahf
lret
cmc
outsl
xchg
js
cmp
jl
sbb
fmull
lds
inc
cld
push
sbb
cmp
bound
out
pop
and
mov
xchg
fcoml
mov
mov
mov
rcrl
sbb
rcrb
aad
into
rcr
int3
cld
sbb
adc
lea
xchg
pusha
daa
sbbl
mov
stos
sub
sbb
out
test
xrelease
cld
xchg
jl
inc
and
cs
jp
sub
pop
mov
pop
xchg
add
imulb
sbb
leave
mov
lock
pop
cltd
fdivrs
mov
lds
cltd
pop
shlb
pop
or
scas
je
inc
mov
jns
jge
adc
aas
xor
aas
adc
jl
adc
fidivrl
in
jno
or
dec
xchg
and
jbe
inc
sub
cmp
sti
lahf
popf
xchg
fcomp
stos
or
stos
in
popa
ds
inc
imul
jae
insb
xor
dec
push
mov
mov
add
jnp
add
int3
shl
loope
fdivrl
cmpsl
ret
xchg
mov
cmp
push
or
xor
mov
and
xchg
inc
movsl
jbe
lock
aam
inc
enter
pushf
sbb
aad
dec
xchg
jmp
jmp
cmpsb
add
pop
lea
out
fistl
lret
fs
sbb
xor
loopne
jp
test
sbb
mov
jns
test
sub
or
or
inc
mov
push
insl
aaa
push
xchg
sub
inc
cmp
nop
fisubrs
adc
jg
fdivrl
pop
jl
in
std
cmpb
fs
clc
or
add
xor
cmc
loop
enter
fnstsw
clc
je
push
repz
push
sbb
and
dec
jns
rclb
sbb
sbb
loope
add
in
xor
inc
bound
mov
push
lods
faddl
nop
and
xchg
ds
shlb
mov
stos
ja
mov
inc
test
std
xor
mov
sbb
mov
in
xchg
movsb
xchg
mov
jo
xchg
mov
mov
push
pop
push
add
pop
loopne
add
and
xor
jae
test
sub
shlb
in
int3
lods
les
stc
mov
stos
fs
inc
in
jae
in
mov
pop
add
ret
add
ret
xor
cmpl
push
jp
insb
or
fs
test
or
inc
cld
jae
jmp
jge
push
mov
rcrb
jo
movsb
cmpsl
jo,pt
xor
xor
sbb
movsl
pop
shrl
cmp
cmc
mov
inc
loopne
xchg
mov
loope
pop
inc
std
xor
rorl
dec
xchg
cwtl
cmc
jne
jecxz
lret
cmp
cmp
stos
push
mov
lret
add
mov
cmp
ss
mov
idivl
in
cmp
jnp
lock
mov
and
mov
push
out
mov
leave
mov
shrl
dec
outsl
jmp
loope
mov
inc
insb
jg
loope
data16
mov
cmc
or
sbb
adc
iret
cmp
jg
or
shlb
mov
add
mov
bound
mov
fcmovnu
lcall
shrl
or
add
loopne
xor
dec
adc
adc
dec
adc
push
imulb
ja
xchg
sarb
out
mov
dec
scas
out
jo
ss
les
out
mov
mov
fsubs
xchg
jmp
sub
sub
sub
outsb
js
insb
adc
xchg
lret
mov
das
lcall
gs
fwait
mov
push
adc
adc
sbb
pop
mov
mov
sbb
fwait
lret
pushf
cmp
lret
test
fsubrp
xor
movsl
xchg
sahf
cmp
xor
loope
test
rcll
aam
sbb
mov
sub
cmp
jnp
lahf
jae
inc
movsb
sbb
mov
mov
in
cmpsl
jno,pn
xlat
mov
inc
mov
rcrl
mov
iret
in
dec
xchg
jmp
aam
adc
dec
and
add
leave
outsb
addb
ret
jl
pop
pop
mov
out
es
xchg
mov
fwait
outsb
cmp
cmp
inc
aad
lret
mov
rcrb
pop
inc
loopne
mov
dec
mov
or
mov
sti
gs
jnp
aas
fstl
add
fdivs
adc
les
cmpsl
outsb
in
or
mov
push
push
lcall
arpl
jmp
and
rcrb
sbb
mov
push
pop
jecxz
dec
sub
ljmp
ds
pop
sbbl
ds
sbb
or
sub
mov
or
xor
xchg
mov
dec
imul
aad
imul
stos
xchg
dec
fnstsw
cmpsl
mov
xchg
cmpsb
addl
bound
xchg
sbb
xchg
jg
loope
std
stos
mov
jp
xchg
sbb
mov
pop
dec
cmpsb
incl
xchg
mov
in
je
repz
enter
cmp
cmp
sub
enter
and
and
inc
and
mov
pop
cltd
lcall
push
sub
hlt
outsb
cld
scas
adc
mul
popa
adc
shl
lea
incb
sarb
inc
sahf
push
sbb
jb
cmpsl
aas
mov
cmp
sahf
hlt
cmp
push
mov
and
ljmp
test
mov
mov
inc
shll
xchg
sbbl
mov
sbb
or
xor
dec
and
mulb
jmp
insb
sahf
arpl
stc
and
outsb
jmp
popf
repnz
sbb
loop
cmp
xchg
ret
dec
pushf
push
mov
jns
test
hlt
repnz
pop
out
and
jb
cmpsl
pop
cmp
mov
imul
mov
mov
scas
out
sub
cmp
aaa
jb
adc
mov
jns
out
mov
mov
mov
clc
push
insl
aaa
dec
addr16
out
mov
rolb
mov
and
add
imul
cmp
add
or
sub
sub
cmpb
mov
lock
jge
sahf
sarb
notb
mov
jecxz
dec
sub
push
xchg
dec
rcrl
add
add
lods
xor
gs
mov
je
jp
ljmp
and
cli
inc
or
or
push
hlt
mov
mov
andl
test
aas
adc
fisubrs
xchg
add
mov
test
and
sbb
jno
aam
mov
xor
cmp
pop
mov
insb
sub
out
xor
imul
and
and
sub
adc
imul
jp
push
fdivrs
cmp
out
pop
sub
cli
fwait
xor
push
inc
jecxz
rcrl
pop
addr16
and
inc
std
dec
push
sbb
mov
mov
add
and
jmp
mov
mov
jae
jmp
cmp
xor
xchg
out
rcll
lods
adc
xor
mov
push
call
xor
fcoml
pusha
lock
pop
dec
divb
in
dec
out
mov
jo
jno
ret
mov
sub
ret
push
es
inc
nop
xor
aas
ret
jg
into
iret
inc
push
or
add
out
mov
dec
sbb
cwtl
das
std
add
lea
out
sahf
leave
jae
inc
mov
dec
jne
or
repz
clc
mov
in
xor
aas
cwtl
jne
push
icebp
cmpsb
push
jno
shll
insb
xchg
and
out
adc
jg
mov
ljmp
pop
nop
shrb
mov
fsubs
pop
flds
mov
lods
call
sub
fucomip
in
mul
add
lcall
dec
pop
adc
dec
and
sub
jno
lock
mov
push
jmp
push
test
movsl
inc
xchg
lret
lds
out
outsb
dec
sbb
mov
bound
sub
pop
jns
add
and
enter
outsb
shr
lock
push
jg
jb
jo
mov
aam
leave
pop
stc
in
jp
pusha
into
or
adc
pop
mov
lods
imul
icebp
lret
push
sub
jbe
leave
sub
repz
out
das
das
loop
dec
mov
lahf
out
jecxz
repnz
hlt
lock
cmp
int3
or
xchg
cmc
ss
nop
ss
sub
arpl
fstpt
fstsw
rclb
in
and
out
add
movsl
lret
jne
repz
repz
mov
jl
mov
push
lods
fists
jge
imul
and
in
jae
in
adc
pop
scas
sarl
add
xchg
cmp
pop
push
cltd
and
xchg
push
cld
pop
adc
subb
popf
xorl
sub
jecxz
test
jecxz
adc
movsb
add
jecxz
push
add
jg
out
enter
loop
pmaddwd
mov
push
mov
or
fistpll
hlt
cmpsb
data16
rcll
push
or
adc
inc
lock
shlb
icebp
out
inc
jp
lahf
cmpl
and
dec
std
arpl
pushl
cwtl
add
fisubl
mov
sub
cltd
cmp
ret
sbb
lret
cmpsb
stos
jmp
lret
cmp
aaa
mov
or
pop
loop
jo
xor
mov
pop
mov
repnz
repnz
push
mov
callw
pop
daa
in
jecxz
ret
ljmp
inc
jle
repz
mov
lds
push
repnz
cld
inc
inc
pushf
lret
es
mov
stos
add
sarl
pop
xlat
ret
jp
cs
xchg
cmp
ds
and
jmp
ds
es
outsl
sub
adc
sub
xchg
push
ljmp
xchg
push
sti
inc
insb
sub
mov
out
mov
icebp
test
xor
pushf
or
and
or
or
daa
jle
out
psubw
cld
pop
loope
cmp
mov
int3
add
dec
mov
mov
repz
out
adc
fiaddl
ds
idiv
xor
jg
testl
mov
fidivrs
shlb
mov
or
cmp
cmpsb
and
mov
mov
mov
fcmovb
bound
mov
push
sub
stos
aam
jp
cmp
icebp
ret
mov
pop
enter
jecxz
mov
dec
int
xchg
adc
cltd
ss
inc
pop
and
pop
int
ds
lock
test
fstpt
lods
shrb
cmc
mov
pop
mov
scas
in
es
mov
add
jae
pmaxsw
jo
lret
scas
push
je
dec
adc
sar
dec
fistps
inc
pop
hlt
inc
mov
sbb
fs
cld
add
ffree
scas
stos
xchg
lock
cmp
dec
lcall
push
hlt
clc
mov
iret
lods
jge
dec
and
sahf
nop
pusha
push
pop
shr
lods
testl
data16
pop
inc
int
sti
aad
and
push
cwtl
inc
mov
pop
clc
out
jp
cmp
pop
mov
aaa
pushf
push
in
fcoms
mov
jmp
rorb
into
jge
test
pop
js
cwtl
or
sar
cmp
inc
testl
push
adc
push
xor
sbb
fisubl
imul
sti
movsb
sbb
sbb
dec
jb
fiaddl
fucom
arpl
popf
lods
sub
shrl
dec
mov
mov
in
dec
xor
inc
xor
cmp
push
and
cmp
fdivrl
out
mov
int3
push
fists
sbb
mov
fxtract
xchg
push
sbb
pop
push
add
in
pushf
xchg
or
icebp
adc
xchg
icebp
sbb
mov
sbb
testb
nop
push
stos
mov
sahf
andl
jo
shll
call
movb
pop
cwtl
fsub
fcoms
inc
lahf
sub
sbb
out
daa
push
or
sub
inc
push
fwait
jns
push
out
cld
xchg
xor
adc
scas
sti
mov
test
out
lahf
scas
sub
pop
jmp
inc
stc
inc
jo
es
in
movsb
mov
adc
fwait
in
pop
in
dec
add
and
daa
addr16
les
inc
adcl
mov
and
sub
pop
insl
cld
inc
xchg
push
dec
dec
mov
pusha
mov
mov
mov
imul
push
xchg
cmp
and
pop
movd
fsts
xor
or
inc
mov
ret
or
push
mov
das
imul
mov
cli
mov
pop
lret
in
push
inc
cmpsl
and
sbb
out
jo
scas
dec
adc
mov
xchg
xchg
adc
or
mov
mov
stos
cmp
or
jle
mov
cmp
adc
mov
movsl
jns
cwtl
rolb
xor
mov
dec
cltd
outsl
mov
adc
popa
adc
js
mov
sbb
scas
cmp
dec
cmp
jae
cltd
sbb
outsb
sti
insl
int3
jmp
xchg
sub
stc
call
xor
xor
inc
jl
hlt
and
adc
call
dec
aaa
repnz
repnz
jmp
insl
pop
sub
dec
rorb
dec
daa
pusha
mov
mov
outsb
add
push
jno
lret
dec
sahf
addb
inc
xor
adc
fdivr
ss
pop
leave
mov
dec
inc
xor
lcall
dec
in
out
cmp
push
push
pop
cwtl
adcl
push
inc
mov
xor
mov
scas
gs
xchg
scas
push
cwtl
sub
je
aas
xor
mov
push
inc
inc
jp
cmpsl
cmp
pushf
adc
push
pop
addr16
jg
push
mov
in
mov
and
lret
mov
cmp
mov
jo
call
adc
and
lahf
outsb
cld
aaa
filds
les
ret
imul
lods
dec
adc
xchg
pop
stos
pop
mov
dec
fdivrp
and
and
mov
push
xor
xor
ss
loope
pop
lahf
test
data16
jo
dec
test
and
mov
xchg
and
xor
in
sti
pop
lahf
and
cmp
sti
inc
ja
ja
add
xchg
inc
ret
ljmp
and
lcall
mov
outsl
in
cmp
push
jmp
inc
or
gs
fcmove
pop
aam
js
inc
outsl
nop
jmp
adc
dec
jg
lea
cmpl
inc
jae
cmp
push
pop
or
sbb
test
imul
popf
sub
sbb
lea
jmp
inc
stos
and
cmp
add
jno
sub
sub
fsubs
jo
jo
sbb
lret
rorl
and
mov
dec
lods
inc
sub
and
adc
and
arpl
shlb
std
and
push
aam
add
add
pop
movsb
cli
inc
fs
popf
mov
addl
inc
xor
push
jmp
lea
fsin
jo
xor
adc
aam
int3
jbe
lds
inc
push
push
in
or
cmc
inc
dec
mov
and
or
add
sbb
lods
insb
fstp
push
scas
jb
loopne
fs
and
popa
repnz
lret
sbb
dec
jne
push
fwait
adc
dec
lahf
mov
sbb
inc
out
jo
push
inc
jmp
outsb
sub
dec
in
push
lea
cmp
xor
pop
icebp
in
push
jg
cmpsl
ljmp
test
and
in
jne
lea
andl
mov
cltd
xor
push
bound
cmc
cmpsb
pop
inc
lcall
mov
mov
aaa
push
cmp
sub
subl
rorb
cmpsb
aaa
pop
pop
mov
loope
out
and
and
arpl
scas
in
addr16
jne
jmp
pop
sbb
jg
or
inc
sahf
insl
test
pusha
pop
sbb
pop
dec
stos
inc
sbb
cmp
call
sahf
dec
inc
xor
or
add
dec
popa
push
inc
and
adc
dec
or
push
out
push
sub
mov
adc
sbb
xorb
into
dec
cmpsl
sbb
push
mov
out
xor
or
xor
pop
dec
dec
or
push
push
and
xor
or
incb
int
cld
jp
out
aaa
jnp
lea
jbe
fwait
ret
fs
mov
and
mov
ret
or
ret
cmp
hlt
and
insb
xchg
iret
dec
xor
hlt
dec
jae
loop
jo
enter
lods
inc
inc
xchg
sbb
stos
fnstcw
addb
and
mov
mov
dec
iret
scas
popf
negb
in
mov
dec
push
push
aam
clc
sti
ret
insl
sub
add
push
call
mov
test
xchg
in
cwtl
and
lods
fstpt
cmpsb
adc
or
push
lods
jle
or
xchg
mov
mov
sbb
rclb
sub
int
fildll
test
std
data16
lret
mov
cmp
cmpl
mov
dec
test
pop
xchg
test
xor
enter
outsl
dec
stc
clc
cs
ljmp
lahf
loop
outsb
dec
stc
push
xor
fistpl
stos
adc
adc
dec
inc
xchg
xor
fstpt
add
xor
data16
fs
cld
je
or
pop
xchg
es
xchg
xor
cmp
xchg
push
leave
mov
cmpsb
movsl
dec
jle
xor
in
fildl
xlat
clc
adc
xor
push
loopne
popa
in
inc
lods
cmp
int
sbb
test
inc
inc
out
mov
push
jle
cs
jge
fildll
fdivr
xchg
sarb
in
pop
mov
inc
in
or
sub
sbb
out
negb
mov
pop
jmp
rcl
imul
or
xor
ret
ss
lds
add
sub
hlt
add
imul
adc
mov
loope
lods
aam
jecxz
sub
cmp
out
xchg
iret
sbb
cmpsb
rcl
int
rcll
repz
xchg
lcall
shll
pop
sbb
and
in
jae
call
mov
add
or
xchg
test
mov
inc
rclb
decl
jnp
push
mov
jmp
stos
xchg
aaa
push
fs
xchg
shlb
sbb
xor
xchg
test
inc
movsb
sbb
subb
mov
pop
mov
sbb
adc
adc
inc
xor
cmp
mov
and
ret
mov
mov
lods
sub
cli
in
popa
gs
xchg
add
dec
sahf
inc
mov
rolb
push
inc
nop
int
ds
inc
pop
and
pop
shrl
sub
scas
fsubs
dec
pusha
or
xor
add
sbb
mov
xchg
pop
pop
mov
into
ffree
in
push
jmp
xchg
dec
cmp
lods
sbb
int3
dec
mov
dec
or
xchg
add
lds
in
xor
add
push
jne
push
xchg
pusha
sti
jb
int3
popa
cltd
dec
and
ss
xor
inc
into
int
inc
xor
push
add
les
stos
jmp
or
xchg
mov
cld
es
cmc
loope
cld
and
test
push
mov
int
test
fwait
mov
and
sbb
xchg
mov
aas
stos
mov
addr16
leave
mov
popa
inc
cli
mov
popf
push
sti
add
out
push
mov
mov
dec
mov
loope
sub
mov
inc
mov
add
test
test
nop
sub
xchg
sar
add
jge
fcoml
iret
push
or
dec
inc
mov
pop
ffreep
push
nop
pop
ja
cli
loope
out
iret
andl
imul
pop
cmp
jl
sub
cmp
dec
dec
adc
ds
call
jl
into
jae
mov
fwait
xchg
lock
hlt
push
xchg
and
sub
addr16
stos
call
xchg
cmpsl
or
popw
sahf
fwait
or
sbb
xchg
popa
sbb
jp
mov
push
pop
in
fnsetpm(287
dec
add
mov
push
mov
enter
and
insb
and
jg
or
xchg
lods
push
fisubrl
mov
inc
out
and
jbe
shrb
fiaddl
insb
mov
je
xor
mov
nop
pop
loop,pt
loop
mov
pop
ja
pop
add
xchg
push
or
mov
leave
pop
adc
and
jl
sbb
jo
aas
out
dec
fadd
and
push
movl
mov
adc
testb
stos
lcall
sti
cmpsb
cmp
shll
testl
pop
xor
fucomip
movl
and
popa
jae
stos
jle
mov
popa
movsb
out
cmpsl
notl
fmull
inc
loop
cmp
cmp
mov
xchg
adc
push
fcoms
pusha
stos
mov
aas
mov
outsl
pusha
filds
and
mov
les
and
add
or
adc
mov
dec
xor
add
data16
sbb
push
scas
xor
xor
cli
pop
lahf
lods
cld
adc
add
test
jae
jge
ljmp
mov
ljmp
test
in
stos
fs
xchg
in
mov
jbe
aad
push
push
add
push
sbb
sahf
inc
cmp
inc
pusha
sbb
mov
cmp
dec
ror
lds
cwtl
mov
movsb
out
push
lods
xlat
icebp
outsl
or
xchg
movsl
sub
mov
add
sbb
fdivs
daa
mov
fsubrl
inc
adc
adc
add
xor
push
hlt
out
push
mov
cld
repnz
loope
dec
inc
fsubr
ficompl
jne
jle
sbb
xorb
and
sbb
int
outsb
movsb
loop
dec
repz
push
repz
inc
sub
mov
xor
movb
jb
xchg
aad
jle
cmpsb
clc
add
mov
pop
mov
in
xchg
iret
add
mov
pop
popa
sub
js
sti
and
inc
mov
clc
and
push
xor
and
inc
dec
cld
test
in
in
shrb
pop
dec
repnz
ljmp
shlb
insb
pop
mov
testb
add
inc
cmpsb
add
or
inc
imul
jp
clc
add
rcll
fs
sbb
fcmovb
pop
iret
push
rcl
lahf
andb
xchg
dec
mov
rorb
jmp
scas
mov
inc
pop
out
or
sti
or
jmp
aas
int
and
mov
sub
sub
scas
or
xchg
lds
or
lock
stc
rolb
aad
pushf
rclb
daa
das
daa
push
cmpsb
push
and
dec
filds
loop
shl
and
imulb
pop
int3
stos
jae
jbe
sarl
stos
inc
cmc
popa
adc
pop
or
das
xor
mov
fldt
add
leave
imul
shrl
gs
xchg
int
mov
ror
adc
into
sub
test
movsb
lock
xor
add
cwtl
push
pop
into
rcrb
jne
jge
lret
push
push
cmp
xor
lock
adc
ret
iret
sti
mov
arpl
testl
rclb
outsb
ret
test
pop
sub
or
sarl
cmpsb
test
sub
lods
add
iret
sub
xchg
ljmp
xchg
pop
decl
adc
xor
stos
in
and
sbb
aaa
fdivrp
sarl
cmp
xlat
es
pusha
and
mov
sub
cwtl
push
arpl
fucomi
add
lods
cmp
xor
sbb
jge
insb
ss
adcl
xchg
cmp
inc
lcall
adc
imul
cmpsl
pop
pop
adc
cwtl
or
rol
int3
sub
cmp
hlt
nop
add
push
loope
std
push
in
cld
jae
mov
cmp
inc
push
mov
je
add
xor
loop
xor
enter
or
dec
sbb
xchg
cmp
mov
pusha
fidivrs
daa
push
xchg
out
adc
or
pop
andl
mov
lret
pop
in
pop
inc
jbe
test
enter
and
inc
mov
fistpl
jmp
aam
scas
mov
lods
xchg
repz
imul
sti
jmp
ljmp
out
orl
testl
push
ret
data16
loope
nop
rcrl
sbb
ljmp
movsb
stc
adcl
dec
test
or
iret
stos
sub
in
movsl
push
inc
push
sbb
and
cltd
inc
mov
jbe
xchg
adc
stc
push
jbe
fbld
and
mov
cltd
mov
into
jmp
cltd
mov
fcmovne
ss
adc
mov
push
pusha
pop
in
test
mov
insb
sti
cmp
mov
lcall
lods
xchg
jl
mov
stos
leave
dec
fsub
repz
mull
inc
fcmovnbe
mov
sbb
popa
jnp
push
xchg
inc
lods
xchg
dec
sbb
enter
cs
xor
or
data16
out
nop
nop
ds
jo
fs
sbb
push
andl
cltd
adc
int
mov
mov
into
outsb
in
fsubrl
cmp
xor
pop
push
mov
cmpsl
mov
or
stos
inc
mov
test
mov
out
repz
mov
insb
scas
jb
push
cmp
imul
add
movsb
imul
scas
roll
loopne
sub
cmc
xor
test
aad
fists
fsubrs
stc
or
je
pop
ljmp
nop
das
and
pop
xor
cmp
sub
enter
mov
test
ret
dec
or
cmpsb
jle
dec
inc
sbb
xchg
fcomps
xchg
dec
push
pop
push
icebp
sti
push
pop
push
xchg
mov
jl
les
sbb
push
les
jle
iret
mov
nop
movsb
sbb
in
xchg
xchg
xchg
jp
scas
add
jl
es
push
mov
fistpll
mov
dec
xor
nop
mov
sub
fcomp
inc
add
push
jmp
adc
cmpl
mov
adc
out
mov
and
es
adc
bound
rcll
sub
and
addr16
or
in
dec
inc
int
push
push
xor
mov
in
or
ret
loope
cmp
shll
push
pop
jae
pop
mov
jmp
pop
dec
inc
lods
ja
pushf
cli
or
push
dec
arpl
je
jp
push
mov
out
sub
pop
stos
pop
lea
adcl
or
divb
and
sbb
pop
and
push
sbb
lods
cmc
or
add
aam
pop
sti
and
ja
movsb
xchg
inc
cmpsl
xchg
out
insb
fs
mov
jp
mov
sub
leave
shrl
fisttpll
test
das
test
cli
mov
rclb
xor
in
dec
jbe
push
sahf
out
mov
xchg
add
sbb
dec
cltd
imul
cltd
loop
lock
push
mov
cltd
divl
es
pop
mov
out
mov
lods
notb
popa
push
xchg
loop
sub
stos
push
les
xchg
repz
cmpsb
jl
mov
lds
xor
mov
xchg
add
adc
dec
push
push
xlat
in
mov
clc
repnz
dec
test
xor
out
lea
inc
inc
ljmp
pushf
sbb
ret
cli
cmp
mov
ds
fnstenv
cmpsl
xor
jmp
adc
mov
push
aam
addl
mov
stc
int3
sti
sub
cmp
sbb
sbb
dec
pop
pop
add
or
jmp
in
aam
faddl
jo
shll
adc
and
sahf
pop
pop
inc
cbtw
aad
movsb
add
fs
push
decl
fimuls
pop
xchg
sub
in
sarb
mov
jle
add
insl
repnz
push
xchg
ret
scas
adc
mov
dec
inc
inc
and
sbb
jp
scas
sbb
incb
sti
sahf
dec
scas
xor
les
mov
pusha
inc
jge
inc
jg
add
fisubrs
push
std
pop
add
xor
push
xchg
sahf
pop
addr16
pop
sub
lret
pop
aad
or
and
pop
sub
js
les
inc
mov
pop
sbb
addr16
inc
mov
xchg
out
daa
cmp
adc
adc
repz
cmpsl
mov
pushf
cld
xlat
lods
roll
fimuls
mov
jae
inc
mov
mov
sahf
xchg
xor
je
jecxz
test
jae
dec
adcb
orl
scas
pop
mov
sbb
jmp
pop
fwait
adc
dec
jno
add
ljmp
bound
dec
pop
cmpsb
shrb
imul
orb
fmul
jp
ljmp
out
and
nop
daa
push
in
mov
jle
movsl
iret
xor
mov
popa
sbb
mov
clc
iret
fisubl
lret
repz
dec
or
sbb
stos
cltd
scas
shlb
cmc
jg
pop
pop
adc
vmovups
add
jmp
out
out
inc
lret
mov
lcall
lods
rcl
mov
mov
out
mov
jmp
ret
in
xchg
icebp
xchg
adc
mov
inc
xlat
imull
cld
xor
ret
addl
pusha
ret
or
lods
fs
lods
sahf
cmp
mov
in
movsb
xor
xor
sub
sahf
push
sub
cmc
or
and
mov
and
push
mov
repz
lahf
sahf
jmp
fwait
xorl
fists
aas
add
sbb
leave
pop
or
lret
es
sti
aad
and
add
cmp
cmp
aad
aad
jae
movsl
xor
cltd
loopne
lret
jp
pop
xchg
add
push
push
push
in
les
sbb
gs
xor
aaa
les
aas
lret
mov
lret
movsb
adc
stos
fwait
and
loop
aam
inc
test
imull
sbb
mov
mov
jmp
int
inc
mov
iret
mov
aaa
sub
add
rol
insb
push
jae
push
sbb
adc
lret
push
sbb
adc
stc
scas
popf
fisubl
jmp
push
push
loop
outsl
jno
fidivl
cmp
pop
xchg
jl
fcoms
jns
inc
sti
out
pop
test
push
leave
jmp
and
mov
sub
sbb
push
jns
pop
dec
insl
and
test
push
jbe
adc
mov
dec
stos
cmp
insb
popf
dec
aas
cmp
xor
sub
inc
add
jl
inc
pop
ljmp
or
adc
roll
int
cmp
dec
out
stos
sbb
or
cmp
mov
push
push
mov
sbb
cmp
inc
mull
pop
lock
xchg
fcmovnu
in
in
stos
addr16
hlt
test
add
repnz
cmpsb
mov
cmpb
loope
sbb
cld
std
fldpi
in
sub
jno
lcall
outsb
sub
sti
xchg
imul
loope
outsb
inc
rcrl
outsb
and
mov
lcall
xchg
or
jmp
pop
mov
push
and
pop
inc
add
inc
aas
shl
lock
mov
dec
out
fisubrl
push
lock
or
aam
rcll
dec
jno
stos
sub
or
or
add
inc
lds
pop
pushf
lret
fimull
insl
fbstp
adc
sub
push
xor
cmpsb
mov
stc
shrb
push
cmp
arpl
lret
clc
rolb
je
push
into
mov
add
xor
mov
dec
pop
lods
repnz
and
sub
jns
orl
inc
les
mov
xchg
xchg
mov
scas
lcall
pop
mov
outsb
mov
mov
inc
hlt
sarb
rol
xor
push
xor
dec
sub
adc
mov
xchg
mov
cli
pop
mov
scas
movsb
inc
and
sub
test
loop
pop
testb
out
cmpb
loopne
push
sbbl
sub
insl
pop
add
pushw
cmp
mov
xchg
sbb
mov
jge
cwtl
std
lahf
jnp
or
decb
repz
pop
repnz
and
cmp
sbb
test
ret
sahf
xchg
push
dec
hlt
mov
jle
out
mov
nop
out
or
push
mov
ja
loop
leave
add
mov
fcom
shl
add
pop
in
daa
and
or
jl
mov
out
ljmp
and
add
ja
cmp
xlat
enter
sti
xchg
test
lock
mov
mov
fists
ss
cmp
sub
out
adc
rolb
inc
test
orb
dec
mov
jge
xchg
sub
xchg
scas
arpl
int
in
xchg
icebp
mov
xchg
sti
dec
lcall
or
jge
fucomip
mov
and
gs
inc
test
fwait
xchg
sbbb
push
pop
pop
pop
sub
mov
popl
stos
cwtl
jge
mov
fistl
das
in
xor
hlt
in
out
insb
leave
adc
cmp
stc
in
lods
cmp
jl
std
xor
jle
pop
pushl
int3
and
fimull
gs
outsl
inc
pop
sub
xor
pop
mov
into
inc
sti
pop
daa
loope
xchg
jge
call
fiaddl
inc
mov
xchg
cmpsl
or
sub
mov
dec
es
mov
push
stos
pop
jbe
pop
insl
cltd
dec
mov
sldt
adc
jecxz
test
xchg
sub
sub
adc
cmpsb
and
adc
jo
idivl
in
mov
mov
adc
xchg
in
in
out
stc
lea
mov
fsubl
cmp
push
pop
mov
idivb
xchg
lret
icebp
add
xchg
bound
aam
pop
push
jmp
pop
jge
jo
jle
jns
and
jae
das
push
lock
or
in
mov
shlb
pop
testl
sub
add
pop
cmp
cmp
enter
imul
jl
in
lahf
rol
or
mov
loop
je
hlt
lahf
shlb
imul
cld
call
push
int
push
mov
push
adc
or
lods
cmp
pop
add
jnp
add
xorb
int3
mov
add
test
lea
add
adc
sti
xor
gs
mov
fs
sub
jbe
lock
fildll
popf
daa
popf
cmpsl
pop
pop
jge
mov
xchg
or
pop
and
dec
lret
insl
xchg
std
adc
jle,pt
rcll
decl
imul
mov
mov
and
mov
insl
cmpsb
cltd
loope
aad
push
dec
mov
add
xor
ljmp
into
cwtl
pop
test
movsl
pop
adc
jo
jae
push
sarb
push
mov
imul
xchg
mov
ret
fmuls
mov
push
xorb
pop
adcb
mov
insb
hlt
push
sub
push
mov
pop
and
xor
adc
inc
add
popf
and
je
mov
xchg
jae
fisttpll
sub
xor
test
push
mov
pop
dec
sahf
sub
and
fidivrl
mov
mov
je
nop
repz
mov
iret
jns
lods
adc
xor
insl
inc
fcomps
mulb
xor
pop
cld
fstpl
mov
lods
ja
aad
ljmp
loop
iret
test
clc
test
in
lds
jnp
jmp
hlt
pushl
aas
loopne
xchg
adc
push
test
pop
repnz
xchg
cmp
je
lahf
ljmp
xchg
imul
jmp
pusha
cmp
ljmp
sarl
insb
cmp
jbe
xor
and
sbb
adc
aam
inc
and
jne,pn
dec
xchg
jb
sbbb
jg
dec
loopne
xor
enter
iret
insl
popf
lcall
int
mov
cmp
hlt
jg
mov
pusha
loop
idivb
jge
fcmove
enter
les
iret
push
sub
inc
cwtl
mov
inc
sbb
inc
cwtl
sar
jnp
fdivrs
cwtl
rclb
jmp
call
xchg
ja
mov
cmp
and
bound
sbb
gs
lods
jb
dec
xlat
mov
scas
mov
lock
mov
in
xlat
push
mov
aaa
cwtl
pushf
sbbb
repnz
clc
ret
shl
inc
data16
push
jl
or
or
cmp
cmp
ret
out
push
sti
out
inc
push
cmp
lock
movsb
mov
fistpl
or
dec
mov
push
jno
fcmovnb
xor
enter
mov
stos
int
adc
cwtl
dec
xchg
aad
mull
lahf
mov
jns
daa
dec
loope
vpaddw
popa
rorl
icebp
arpl
pop
xchg
subb
pop
ss
std
test
idiv
xor
jge
stos
cmp
mov
push
shr
sub
das
stos
jns
pop
sub
ret
icebp
pop
xor
notl
js
in
icebp
inc
mov
add
out
int
mov
imul
dec
mov
push
dec
in
pop
pop
mov
xchg
sbb
mov
gs
cmp
loope
pop
pusha
mov
mov
jbe
nop
cmp
mov
cmpsb
test
ljmp
cs
pushf
adc
sbb
outsl
imul
xchg
imul
fwait
out
dec
fisubrs
inc
fimull
xor
in
push
cmp
loopne
xor
fdivl
andb
ja
leave
and
bound
or
sarl
mov
xor
xor
push
rcrb
int
xor
adc
xchg
jmp
adc
add
cmp
mov
mov
repnz
dec
scas
out
push
cmp
mov
pop
push
cmp
in
inc
ret
xor
xchg
lock
mov
in
sahf
arpl
pop
mov
sub
out
mov
call
loopne
mov
in
or
dec
pop
sub
test
into
test
test
pop
shll
mov
hlt
fmuls
mov
popf
pop
repz
and
cmp
push
inc
les
jno
cmpsb
cmc
xor
hlt
movsl
mov
stos
mov
xchg
iret
push
out
adc
pushf
js
idivb
loop
adc
sbb
out
daa
dec
sbb
stc
add
mov
inc
out
ss
lods
loop
repnz
lret
jge
mov
shll
movsb
stos
bnd
mov
mov
push
ficoms
push
cmc
pop
add
push
ja
aam
fstpl
in
push
xorb
int
divl
mov
xchg
cs
push
and
jl
pop
pop
shrb
and
cwtl
mov
sahf
loopne
push
or
faddl
test
in
xor
xchg
pop
loope
and
in
jecxz
mov
push
into
andb
insl
and
sub
pop
in
loope
ret
xor
mov
xchg
and
mov
pop
lret
int
ret
test
mov
cmpsb
dec
cli
es
xchg
cwtl
xchg
in
sahf
dec
pop
daa
stos
pop
sub
pop
mov
inc
repnz
dec
cmp
cmp
sbb
jnp
ja,pt
bound
popa
gs
dec
inc
jb
add
cld
push
inc
fnsave
rorl
lret
addb
mov
inc
mov
xchg
push
add
addr16
jecxz
je
inc
jae
sbb
push
dec
addr16
pop
mov
inc
add
repnz
lock
mov
sub
fidivrl
jmp
add
les
push
xor
cld
push
mov
dec
mov
lahf
sarb
jp
enter
inc
xor
insb
cmp
bound
and
cmp
or
test
fnstenv
xor
in
mov
leave
pop
xchg
xchg
pop
hlt
lods
arpl
lret
in
jp
enter
push
outsl
mov
mov
sbb
or
inc
mov
imul
pop
or
push
ss
xor
jne
repnz
pop
xchg
subb
ret
xchg
jg
test
add
mov
int3
stos
cmp
jp
leave
xchg
adc
pop
xchg
cmpsb
imul
loopne
rclb
addb
fwait
test
mov
cmp
out
and
ret
inc
cmp
mov
adc
shrl
pop
das
iret
fstl
mov
call
std
out
jl
test
in
mov
outsl
sbb
mov
les
call
rcl
clc
mov
aas
push
pop
addl
jo
cmp
sub
fldenv
mov
and
rorb
into
lret
jge
and
stos
mov
std
outsl
cmp
popf
lret
dec
test
outsb
pop
jae
and
xlat
inc
test
dec
fsubs
ret
lea
add
mov
fmull
mov
subb
repnz
xchg
movl
xor
jno
fldt
aam
push
dec
mov
add
xchg
jns
js
xchg
xchg
movsl
lret
mov
and
pop
fildl
out
mov
xchg
shrl
and
enter
and
jle
cmp
add
hlt
mov
jl
daa
in
loop
es
cmp
and
push
inc
ret
rorl
jo
cmp
loopne
and
idiv
xchg
cld
pop
lods
into
mov
cmpb
xor
nop
movsl
jb
or
stos
fmull
inc
bound
shrb
adc
int3
idiv
or
cmp
fcomps
or
ljmp
dec
repz
nop
cmp
dec
cmpsb
jecxz
mov
jnp
insl
mov
out
add
pushf
mov
dec
clc
int3
das
or
dec
jb
std
xor
mov
push
and
maxps
rol
inc
xor
or
stc
push
iret
add
pop
lods
or
dec
aad
cmp
push
cs
xor
fstl
xchg
js
sahf
fstl
repz
xchg
test
das
mov
lret
pop
ljmp
mov
daa
repz
and
sub
lds
int
and
jno
repnz
cmp
push
aaa
xor
mov
cmp
and
mov
outsl
sub
sahf
fimull
sti
push
jnp
imul
dec
inc
stos
pop
mov
stc
sahf
popa
gs
inc
into
movl
push
dec
nop
lcall
scas
mov
mov
or
es
lcall
pop
js
and
jmp
sub
bound
xchg
sub
cmp
dec
outsb
add
push
pop
mov
add
cmp
jo
addr16
in
test
push
xchg
and
loopne
fldcw
jmp
sar
cmp
xor
add
mov
and
movsb
and
into
pop
xor
xor
aas
or
sub
int3
test
push
dec
inc
loope
aam
lods
test
testl
je
mulb
cmp
xchg
lea
mov
add
mov
aaa
mov
lds
or
stos
out
pop
lea
pusha
mov
fldcw
stos
adc
call
mov
add
sbb
fidivrs
inc
bound
je
mov
xor
jp
lds
cld
loopne
std
int
jl
or
cmpsb
mov
ss
and
ret
jg
jbe
popa
jge
inc
inc
mov
dec
mov
cmp
xor
mov
mov
adc
loope
shlb
xor
or
cmp
stc
xchg
jecxz
jg
or
in
dec
and
dec
sub
sbb
push
stc
std
dec
mov
negl
xor
and
mov
fists
in
mov
and
int3
cmp
cli
lock
xchg
inc
in
imul
cld
data16
xchg
jp
cmp
call
gs
and
fwait
adc
scas
xor
fmul
or
add
jne
int
loope
inc
dec
sti
mov
cwtl
and
cli
mov
jg
mov
push
psraw
stos
ds
pop
repnz
ret
andl
sub
in
stos
mov
lret
aas
mov
outsl
cmp
and
mov
xor
in
sahf
sub
repz
mov
fisttps
outsb
lea
jg
lcall
imul
lods
loop
mov
mov
ror
mov
inc
es
je
subb
jp
fs
imul
nop
stos
fs
jae
insl
aas
cmp
setb
cmp
pop
enter
stos
in
insl
imul
cmpsl
dec
cli
shrb
add
mov
push
or
mov
mov
aam
popf
sub
subb
ja
xchg
fwait
testb
sub
aaa
sarb
inc
test
subl
repnz
call
fstps
mov
movsl
sbb
inc
into
scas
hlt
and
stc
loop
icebp
adc
xchg
jb
out
call
int
xchg
loop
in
push
repnz
jecxz
ret
icebp
fwait
ja
das
dec
outsl
pop
dec
pop
mov
sarb
adc
dec
sbb
or
jbe
inc
push
mov
jae
test
rolb
test
bound
test
inc
sbb
fsubs
mov
scas
out
lahf
stos
aad
incl
jnp
push
shll
mov
sub
pop
inc
dec
ror
inc
stc
mov
lods
mov
xor
ret
inc
std
or
imul
jne
mov
sbb
xor
in
sub
icebp
aam
fdivp
add
in
fdivrl
or
dec
adc
jae
mov
xor
mov
popf
popf
adc
js
movsl
jae
adc
in
inc
or
ja
mov
dec
sub
adc
inc
sub
and
into
mov
inc
xor
sub
aam
jb
add
test
jmp
test
shlb
outsl
push
cmc
lock
xorb
bound
inc
dec
xchg
dec
dec
push
cmp
lods
xchg
push
pop
inc
dec
cmc
add
add
in
fildll
ja
mov
rorb
push
lret
dec
or
xchg
push
cld
loope
test
pusha
jae
inc
popl
les
cmpl
xchg
sarb
sbb
pop
mov
sti
xchg
insl
stos
add
pop
mov
xchg
lret
daa
imul
sub
adc
jnp
xchg
jg
lret
cmc
jecxz
inc
sahf
addl
scas
xlat
scas
rcrl
rclb
jae
or
bound
je
or
rorl
jbe
repnz
icebp
or
adc
fs
outsb
push
addr16
sbb
xchg
mov
add
sbb
and
jne
cmc
lods
push
shrl
add
sub
ret
scas
mov
cmpsl
and
mov
and
cmpsb
add
mov
dec
pop
movsl
xlat
sbb
push
cld
mov
repnz
loop
xor
add
enter
cmp
insl
jne
xor
sub
cmp
fs
out
ret
or
inc
cmc
dec
xchg
scas
jle,pt
pop
mov
and
enter
sbb
out
in
ret
cmp
mov
popf
mov
xor
cltd
scas
shl
gs
mov
adc
and
out
cmpl
xor
pushf
push
out
jb
fmull
push
js
fisttps
mov
sbb
mov
adc
add
int
sbb
clc
pusha
push
loop
repnz
out
scas
add
adc
aad
jne
popf
ss
mov
call
and
pop
fdivr
push
mov
arpl
adcl
xchg
in
and
and
int
out
addr16
push
aas
int
out
and
paddusb
mov
int3
push
pop
jg
test
push
xor
aaa
int3
mov
cmp
cld
les
mov
and
int3
rcrl
sbb
mov
inc
pop
popa
pop
rcll
mov
in
xor
mov
fxch
out
std
mov
xchg
mov
or
js
cmc
imul
xor
adc
push
loop
scas
push
and
add
push
fiaddl
nop
mov
loopne
push
jo
xchg
push
ja
mov
test
std
pop
or
iret
leave
inc
shl
pop
int3
leave
inc
bound
movsl
or
iret
imul
mov
out
icebp
mov
sub
insb
xchg
sbb
xor
ja
sub
mov
jns
repnz
inc
push
popf
push
scas
ds
inc
xchg
in
mov
or
call
dec
mov
and
aaa
inc
testb
adc
data16
cs
in
mov
or
push
inc
bound
mov
add
or
cmpsb
mov
xor
jb
inc
jb
cmc
mov
outsb
shlb
and
jnp
inc
test
test
cmpsl
or
loop
insb
inc
cmp
shr
testl
loop
xchg
ds
xor
mov
add
imul
lcall
data16
lock
jecxz
enter
and
mov
rep
mov
sahf
xchg
data16
mov
leave
in
mov
cli
and
cld
stos
cwtl
mov
lret
fbld
mov
nop
dec
add
jp
add
xchg
lea
ret
jmp
cwtl
mov
loopne
sbb
out
xor
sbb
stos
push
jnp
adc
xor
andb
popf
mov
movsb
lret
ret
nop
and
inc
insl
sub
push
mov
mov
pop
in
neg
enter
push
fwait
lret
xor
lret
or
jno
xchg
les
sbb
aad
pop
into
leave
out
test
pushf
fidivrs
cmpb
lret
dec
popa
lret
sbb
push
jecxz
dec
nop
outsb
jb
or
and
push
push
ss
jg
pop
mov
adc
cmp
inc
xor
pop
mov
lods
ljmp
inc
inc
jmp
sub
xor
mov
and
fs
dec
movsl
dec
xchg
ja
imul
inc
pop
out
int
int3
lea
pushf
mov
or
sbb
sahf
ljmp
cmc
add
push
mov
jno
fadds
mov
testl
xor
jae
into
in
test
and
push
and
jne
das
test
and
lods
aad
fucomp
jae
fcoml
ss
movsb
test
aaa
xchg
push
repz
jb
add
jns
xor
cmp
or
sub
mov
jecxz
ljmp
out
fcomip
mov
addr16
pop
rclb
cmp
dec
movsl
mov
add
outsb
cmp
dec
jae
cltd
inc
sahf
mov
mov
sbb
cmc
dec
shlb
or
push
xor
rol
js
pop
xor
test
adc
mov
idiv
inc
int3
out
jg
fwait
adc
push
pop
ds
push
test
mov
xor
sub
aam
and
sbb
les
pop
dec
pop
sbb
and
fisttps
dec
loopne
fs
or
add
fmuls
jl
outsb
xchg
fwait
mov
mov
add
sub
xchg
es
les
in
mov
pop
push
pop
test
push
nop
rclb
in
fiadds
and
jb
ljmp
xchg
jp
push
xchg
mov
mov
push
pop
aad
push
cmp
or
xor
js
shl
lret
xor
imul
inc
mov
adc
outsl
fsts
adc
inc
aad
pop
inc
push
dec
fcoml
xorl
adc
sub
dec
insl
out
std
movsl
jbe
lock
es
cmp
and
rol
pop
push
or
dec
cmp
adc
stos
mov
pop
sbb
mov
mov
shlb
pusha
rolb
push
mov
inc
aas
shll
subl
sbb
loope
lret
ds
arpl
jg
sub
jle
push
mov
cmp
fidivrl
push
add
or
test
pop
add
out
cmpsb
mov
sbb
jecxz
scas
mov
jecxz
add
inc
mov
jo
push
enterw
add
int3
mov
rorb
xchg
stos
xlat
inc
cmpsb
shrl
dec
scas
jecxz
push
insl
icebp
push
mov
cmpsb
mov
insl
loopne
push
enter
xchg
push
sbb
mov
in
adc
pop
xchg
cmp
cmp
or
nop
imul
fnstsw
movb
scas
xchg
repnz
mov
leave
int3
nop
mov
inc
fildll
subb
jbe
xchg
rcll
jle,pt
fwait
mov
pop
les
xchg
adc
sbb
icebp
mov
cli
je
xchg
fiaddl
sahf
bound
mov
push
cmpl
test
lret
dec
sbb
pop
fwait
clc
scas
inc
inc
cmp
mov
js
mov
jle
cmpsl
sbb
cmc
sub
repz
out
dec
add
push
je
pushf
cmp
adc
lock
cmp
mov
cmc
pop
pop
sub
xlat
shl
sbb
xchg
mov
mov
pop
inc
or
test
es
repnz
aaa
xlat
cli
jp
fwait
cmp
cld
xlat
sub
scas
adc
jae
ljmp
inc
mov
pop
add
stos
or
jecxz
jge
dec
loope
outsb
shlb
cld
mov
mov
adc
push
ljmp
push
bound
mov
cmpsb
ficoms
lock
jmp
xchg
and
ret
daa
jae
inc
jg
mov
jne
mov
orb
fidivrl
loop
cmp
push
cmp
int
cwtl
loope
cmp
mov
mov
xchg
sub
insb
push
test
and
je
pop
andl
mov
lret
std
sbb
mov
bound
cmp
add
jb
or
jecxz
test
in
mov
lret
out
adc
fwait
mov
push
pop
mov
testb
stc
jl
lcall
in
icebp
bound
inc
sbb
stos
mov
fistpll
mov
push
outsb
jle
push
and
inc
mov
ds
cmp
testl
mov
xchg
out
ret
add
outsl
daa
movsl
clc
cmpsb
aam
adc
mov
push
fists
xchg
or
shll
cmp
ret
pop
xchg
in
pop
fwait
mov
and
cmp
push
cmp
and
adc
lea
sub
jne
test
xchg
and
pop
adc
out
sub
cmpsb
popf
loopne
push
add
cmpsb
and
es
cmp
dec
bound
pop
mov
fwait
aad
bnd
pop
add
das
cli
xchg
mov
jmp
pusha
dec
mov
pop
pop
test
divps
inc
loope
mov
fsts
lret
jnp
push
sub
push
adc
or
pop
loope
les
popf
push
or
stos
pushf
lds
aas
push
mov
insb
loop
paddusb
push
addl
fisttpll
and
mov
das
fdivrl
int3
xchg
mov
xor
repz
in
cmc
dec
mov
push
mov
sbb
jbe
add
pop
pusha
jp
xchg
jle
jns
and
ljmp
xor
and
in
mov
mov
push
fsts
lahf
subb
mov
icebp
into
jle
int3
and
and
sbb
mov
and
mov
clc
push
push
push
jmp
addb
sub
cmpsb
idivl
into
xchg
dec
xor
fdivp
jno
and
leave
outsl
fadds
mov
movsb
mov
cmpsb
repnz
xchg
js
mov
mov
popa
push
mov
cmc
jb
lcall
imul
mov
fbld
lock
out
shlb
imul
loope
pop
test
and
mov
mov
int3
pop
outsb
in
sub
imul
addl
add
imul
push
mov
imul
aas
popf
and
testb
xor
xchg
repnz
and
lea
jo
jae
cmp
lret
faddp
pushf
ret
pop
in
sub
push
lds
pop
jbe
lods
sub
jno
cmp
inc
ret
cmpsl
jecxz
insl
mov
pop
and
fimuls
mov
pop
lock
call
mov
mov
xor
scas
inc
xchg
mov
push
push
daa
pop
mov
nop
sub
enter
mov
mov
mov
outsl
cmpsb
mov
ret
xchg
ja
test
cwtl
pop
or
les
jmp
pop
ficoml
pop
fcomps
push
dec
mov
notl
add
imul
push
cmpl
mov
std
jo
jnp
popa
add
dec
add
pop
or
cwtl
adc
add
jle
scas
add
jmp
push
xlat
sbb
lret
sbb
sarl
enter
ss
popf
lds
sbb
lahf
xchg
shr
push
xchg
and
adc
ret
subb
pop
imul
sub
bound
stos
xchg
daa
adc
inc
movb
adc
mov
sub
popf
mov
xor
in
orl
sarl
rcll
inc
dec
test
out
mov
mov
repz
test
daa
rorl
into
notb
or
add
decl
fwait
push
ljmp
ds
adc
out
push
popf
xor
enter
mov
xchg
lea
pop
hlt
sbb
mov
pop
add
jmp
mov
and
or
push
push
bound
xchg
cmp
outsl
dec
mov
insl
les
adc
or
jle
cmpsb
stos
stos
scas
out
and
hlt
ret
adc
pop
pushf
pop
add
or
mov
xchg
pop
and
cwtl
mov
stos
shrb
into
xlat
push
push
dec
outsb
mov
rcl
jge
pop
inc
sar
jp
int3
mov
adc
pop
test
jnp
iret
cmp
mov
mov
fistl
jge
mov
mov
pop
inc
add
and
cwtl
dec
mov
cwtl
arpl
mov
add
in
out
cmp
daa
mov
enter
test
add
pop
cld
inc
fnstcw
jmp
xorb
sub
mov
movsl
push
mov
or
jp
ljmp
subl
xchg
or
mov
stos
imul
insl
roll
xchg
add
cmpsl
imul
jle
jg
dec
xchg
repnz
pop
dec
rcrl
pop
ljmp
xchg
xor
jnp
scas
loopne
adc
inc
or
xor
dec
or
out
xor
es
cmp
mov
jl
push
ret
cmc
jl
fmul
into
movsl
jmp
lds
mov
jae
addr16
pusha
ds
adc
xchg
outsl
and
call
lock
cmp
dec
mov
inc
pop
mov
leave
add
jecxz
je
inc
clc
lds
jge
push
cltd
fbld
inc
mov
test
xchg
mov
mov
jmp
std
rolb
popf
push
dec
cli
push
cmpb
sbb
divl
add
and
xor
lods
sbb
lods
dec
mov
push
jmp
sbb
sbb
push
pop
cmp
hlt
jp
add
outsb
das
cmp
stos
push
fs
push
add
cmpsb
in
jge
out
add
js
or
fildll
xchg
loopne
mov
xor
or
sub
xchg
pop
mov
push
mov
xchg
or
push
dec
je
push
add
pop
dec
sub
mov
int
jecxz
mov
in
mov
xchg
xchg
sahf
loope
and
inc
and
cmc
mov
test
negl
pop
cli
push
and
fdivrl
jb
adc
jb
mov
push
add
cmp
stos
push
shl
xchg
mov
mov
lret
pushf
inc
pop
sub
mov
push
pushf
out
shlb
xchg
rcr
push
push
jge
cmp
mov
sub
push
add
lods
imul
je
stos
mov
mov
push
insb
sbb
mov
inc
loop
sub
and
pop
js
lret
dec
pop
adc
mov
xor
add
cmp
push
std
popf
mov
sub
pop
int3
xchg
push
or
xor
std
and
and
shrb
dec
pop
nop
or
mov
out
sti
cmp
and
popf
mov
shl
notb
jmp
pop
insb
sbb
jbe
hlt
nop
cmp
out
nop
pop
subl
sub
pop
push
mov
mov
jo
jns
ljmp
xchg
mov
mov
stos
and
lcall
das
mov
push
push
fwait
cmc
js
icebp
fcomps
insb
sub
scas
cmp
out
cld
pop
pop
xchg
testb
add
xchg
cmp
lahf
xor
cli
push
repz
push
fbstp
mov
mov
fwait
ljmp
jg
or
xor
faddl
mov
movsb
mov
push
inc
cld
shll
clc
and
pushf
mov
pushf
fildll
fbld
fs
adc
adc
dec
xlat
inc
push
xchg
rorl
pop
clc
mov
xchg
mov
mov
or
mov
and
xor
mov
shl
fdivrp
mov
mov
or
xchg
xchg
icebp
mov
cltd
andb
sub
scas
add
lds
test
movsb
jp
sbb
insl
shrl
sbb
out
inc
jbe
inc
fwait
inc
jnp
icebp
mov
ret
fstpl
push
xlat
daa
test
mov
xchg
sbb
lods
push
mov
or
repz
or
xor
mov
cmp
stos
ss
pop
pop
xor
mov
insb
cmc
push
lea
xchg
mov
xor
xchg
mov
sub
mov
lea
adc
dec
pop
ret
push
aad
pop
cltd
lret
hlt
pop
jae
in
adc
arpl
push
lock
push
imul
enter
into
adc
pop
add
lods
ds
xchg
cmp
scas
mov
xchg
push
push
fisubrl
out
adc
sub
mov
cltd
adc
fnstenv
cmp
dec
sbb
lcall
cmc
xchg
cmp
jmp
imul
jg
xchg
cmp
xor
cmp
dec
push
xchg
out
push
push
push
inc
out
pop
and
mov
fdivr
ja
xor
cmp
mov
add
ret
inc
pop
mov
pop
sub
inc
jne
test
cmp
xchg
outsb
xchg
jo
push
rcrl
je
inc
sub
sbb
jns
cwtl
rol
xor
out
cli
inc
sbb
testl
pop
stos
daa
hlt
xchg
std
and
or
cmp
cmpsl
ret
sub
inc
sti
mov
aaa
dec
add
fimull
inc
cmp
jnp
es
aam
xor
mov
mov
int3
xchg
insl
cmp
popa
cmp
xchg
out
mov
jae
sbb
insb
sub
out
and
sub
in
cli
cmp
sahf
adc
jmp
or
pop
adc
jne
test
adc
mov
fidivs
loope
out
push
or
mov
fdivrl
xor
orl
inc
inc
jne
xchg
addl
xchg
mov
pop
aas
adc
loope
js
adc
or
das
lea
sbb
mov
pop
dec
xchg
xlat
push
orl
addr16
dec
lahf
les
loope
mov
inc
shll
pop
in
scas
outsb
stos
stos
into
fs
lret
pop
test
dec
andl
mov
dec
js
pop
shlb
push
fsubrl
jecxz
cld
mov
xor
pop
add
push
imul
sub
pusha
popf
call
push
imul
add
clc
cmp
int3
and
enter
xchg
pop
cmp
sti
mov
inc
fmull
adc
inc
push
in
pop
pop
adc
inc
pop
dec
mov
mov
sub
mov
fimull
jl
xorl
xorb
ds
lahf
insl
aas
mov
ret
jne
shrl
loop
je
dec
cmp
add
imul
push
test
iret
imul
adc
mov
xor
hlt
or
lahf
loopne
xor
popf
cld
sbb
xchg
and
jne
dec
mov
mov
popf
mov
mov
mov
daa
out
pusha
xlat
push
jp
outsb
gs
cmp
or
loopne
mov
fnstcw
add
pop
push
xor
sarb
sub
xchg
mov
repz
mov
sub
movsl
mov
imul
stos
rclb
inc
adc
jnp
iret
cmc
sarb
push
dec
jmp
jp
das
test
xchg
pop
dec
sub
pushf
push
sub
je
aad
shlb
jl
xor
rorl
cmp
andl
das
arpl
dec
cmp
jne
mov
mov
dec
bound
out
adc
test
das
xchg
push
adc
mov
jae,pt
enter
stos
push
in
jnp
std
aas
adc
nop
loope
mov
das
xlat
adc
jns
add
cmc
push
push
into
push
insl
inc
hlt
ljmp
push
mov
ljmp
call
movsb
sbb
push
cltd
xor
pop
jne
fsts
loopne
ljmp
das
xchg
shlb
add
fistpll
pop
mov
push
in
push
dec
pop
push
lods
jp
sub
mov
into
jge
mov
ljmp
insl
lcall
push
cld
or
push
dec
xor
add
inc
mov
imul
or
adc
sbb
cmpsb
mov
ja
jecxz
mov
mov
or
and
jl
sub
stos
jle
xchg
jmp
clc
xor
out
std
ficompl
imul
and
pop
insb
fdivp
es
ror
mov
xchg
les
cwtl
shrl
out
mov
adc
lahf
into
or
mov
mov
test
pushl
leave
dec
cmp
sbb
arpl
jbe
popa
cltd
aaa
sub
xchg
push
push
xchg
daa
push
fldln2
imul
mov
jl,pn
cmpsb
movsb
rorl
cmp
mov
xor
jmp
and
popa
in
xlat
mov
push
sar
jb
mov
call
adc
test
push
mov
ret
or
adc
enter
push
sbb
add
inc
or
xor
xor
xchg
bswap
std
pusha
out
adc
lods
xchg
cs
jmp
aaa
xchg
and
mov
add
xor
sbb
xor
inc
mov
xor
or
xor
inc
xchg
mov
xor
cmp
js
icebp
shlb
inc
dec
movsb
aaa
rcr
daa
out
sub
sbb
pop
popa
and
stos
sbb
testb
sbb
fucom
stc
jle
test
cmc
and
add
lock
pop
or
cmp
aam
add
xor
pusha
dec
mov
stos
add
icebp
loope
loope
xlat
lods
fsub
dec
dec
adc
and
pop
xchg
repnz
shrb
mov
push
mov
sti
fxch
and
mov
shrb
jmp
mov
enter
jecxz
and
test
push
inc
sbb
sub
out
bound
jge
outsl
fwait
cmp
lret
or
std
ror
cltd
jecxz
sbb
mov
xchg
pop
or
movsl
dec
add
loop
sbb
dec
add
repz
or
mov
fistpll
push
mov
fwait
xor
xchg
fwait
push
or
mov
iret
add
subl
push
add
sarb
fsubl
js
inc
nopl
xchg
jbe
insl
dec
test
mov
xlat
jecxz
xor
xchg
and
stc
sub
out
int
popa
xchg
push
xchg
stos
out
or
xor
add
sbb
pop
mov
cmp
test
popf
adc
push
ljmp
mov
aam
rorl
ds
lret
movl
xlat
adc
pusha
mov
and
daa
call
or
cmp
mov
inc
data16
sub
lret
add
clc
popf
loope
data16
push
jo
mov
and
cmp
mov
aad
pop
push
cld
jae
jmp
lret
jns
jns
cli
inc
stos
xchg
cmp
hlt
dec
jne
cmp
sahf
sbb
dec
xchg
sbbb
push
xor
js
lds
aam
mov
pop
jecxz
outsl
stos
loope
sbb
inc
xchg
repz
push
xor
sti
imul
xchg
cmp
xor
pop
xchg
pushf
lods
mov
test
add
das
xor
mov
mov
dec
mov
jg
mov
lods
loopne
and
add
incb
bound
aad
push
jp
and
push
lds
dec
dec
aad
outsb
adc
inc
frstor
jl
shrl
aam
push
xchg
jecxz
aad
inc
popf
inc
enter
pop
or
mov
dec
bnd
push
arpl
push
dec
mov
bound
inc
xchg
or
aas
imul
sub
test
mov
or
std
jmp
xchg
iret
mov
subb
inc
loope
inc
aad
je
cmp
pop
xor
or
rcll
add
je
shr
jb
push
int
jo
add
fwait
in
orl
adcl
test
adc
lods
fs
adc
idivl
rorl
adc
lcall
inc
daa
mov
cmpb
data16
bound
into
cld
iret
pop
pop
pushf
xchg
push
fadds
jmp
xchg
stc
sub
mov
lock
push
cwtl
dec
fldt
test
orl
cmp
and
push
add
and
xor
sbb
fsubs
sbb
rclb
loope
hlt
dec
andb
idivl
add
mov
bound
out
repnz
scas
dec
jae
push
jnp
sbb
push
cli
push
loope
push
insl
cwtl
push
insl
xor
sub
adc
lea
xchg
js
addb
into
data16
push
pop
orl
mov
inc
xor
mov
add
daa
mov
push
jecxz
inc
lods
in
outsl
push
rclb
cmp
sti
loope
int3
inc
mov
jmp
push
int3
mov
pop
scas
pop
sbb
push
jb
jge
mov
in
fs
mov
addr16
pop
mov
xchg
mov
adc
ljmp
into
jo
jp
push
shl
inc
add
mov
cmp
mov
nop
enter
insl
imul
adc
lahf
inc
std
add
xchg
mov
rep
enter
add
pop
imul
push
xchg
gs
addb
lea
sbb
sbb
jb
les
bound
or
rol
jmp
ror
fistpll
xchg
std
enter
inc
loop
dec
scas
in
lret
jecxz
or
lods
sub
fmull
jno
into
icebp
xchg
xlat
rcrl
int3
fldt
jp
movsl
jb
push
sar
movsl
mov
xor
and
xchg
roll
push
xchg
bound
lahf
aaa
push
sbb
std
cmpsb
and
mov
jmp
lea
mov
mov
mov
jnp
mov
sub
jns
fistl
mov
popa
jp
push
inc
fwait
xor
mov
jo
and
mov
mov
mov
dec
sbb
push
mov
enter
dec
enter
pop
pushf
cmp
or
adc
cmpsl
jg
dec
xor
stc
xchg
inc
push
sahf
iret
push
push
xchg
dec
mov
pop
pop
adcb
rcrl
jle
pop
clc
jno
inc
cmp
int3
je
ja
mov
xor
into
lods
mov
pop
pop
test
mov
cmp
dec
inc
add
imul
mov
mov
lea
test
insb
aaa
stc
inc
imul
or
and
je
test
cmp
leave
sbb
fcoml
shll
inc
loope
pushf
pop
sub
je
gs
imul
cltd
sbb
movsl
mov
sub
mov
cld
ret
movsb
lcall
test
mov
loop
jno
xchg
faddl
mov
fs
aas
bsr
outsb
push
mov
lret
jp
scas
or
aad
jo
push
add
test
inc
adc
mov
xchg
mov
in
sub
xchg
cli
or
mov
loop
cmc
stos
xor
lock
loope
test
cmp
mov
rcl
mov
sti
push
lock
mov
scas
pusha
stos
jmp
adc
sub
mov
jns
xchg
clc
jae
out
push
icebp
loope
mov
mov
shll
fisubs
or
xchg
ljmp
mov
inc
js
cmp
lods
mov
out
mov
iret
sbb
push
or
push
or
ja
add
mov
mov
or
adc
pop
cmp
es
dec
cmpsb
loopne
nop
xor
mov
jno
aas
cmpsl
push
daa
mov
test
mov
rolb
repz
mov
fwait
and
push
mov
repz
mov
fcmove
add
outsl
loope
movsl
in
add
lea
pushf
js
ficompl
faddl
lret
inc
sbb
lcall
test
push
call
push
nop
mov
sub
push
jbe
cs
add
aam
sub
and
daa
frstor
xchg
cmp
sub
sahf
pop
mov
dec
pop
addr16
icebp
mov
shll
mov
mov
mov
pop
jbe
outsl
loope
pop
in
inc
dec
jb
dec
mov
dec
sbb
sbb
dec
data16
add
scas
out
or
out
das
sub
mov
lock
fsub
xor
nop
pop
adc
out
jne
sbb
mov
insb
push
fidivl
sbb
ficompl
pop
xor
fs
popa
repz
fwait
arpl
adc
sbb
or
dec
sbb
cmp
push
and
cmpsb
inc
push
xchg
inc
fidivs
scas
adc
mov
dec
std
popf
adc
fildll
push
idiv
mov
clc
lret
push
mov
int
xor
lret
xor
imul
adc
mov
shll
jb
add
std
lahf
add
aad
loop
je
bound
sub
pop
pop
dec
cmp
leave
jmp
or
daa
mov
mov
stos
in
add
mov
popf
xchg
xchg
inc
ds
sub
lret
adc
xchg
repz
fwait
inc
mov
cmp
jae
cmp
jmp
jmp
xor
add
or
mov
push
das
push
mov
sbb
and
inc
adc
inc
cmp
jmp
sub
mov
icebp
sbb
adc
mov
dec
xlat
ja
popw
mov
arpl
aad
enter
insb
push
aaa
xadd
mov
mov
lock
or
inc
fsub
ljmp
mov
in
es
repnz
push
je
and
stc
sets
addr16
addr16
das
fidivs
fst
sub
cmp
fnsave
adc
mov
xchg
iret
dec
jge
add
mov
adc
pop
dec
int
stc
jo
push
or
dec
sahf
cmp
adc
adc
roll
xor
push
cmp
popa
test
dec
xchg
push
popa
or
and
cmp
inc
or
mov
arpl
pushf
insl
stc
xchg
mov
test
outsb
dec
push
push
cmc
lcall
out
jae
into
mov
push
adc
das
push
dec
xor
cmp
mov
int
iret
add
ss
xchg
add
mov
mov
xchg
jp
and
int3
call
repnz
fbstp
lcall
in
sub
adc
outsl
sub
cmp
mov
xor
pop
push
inc
inc
adc
fnstenv
cmpsl
cmp
js
add
shrb
lea
mov
test
pop
idiv
jmp
push
add
in
cmpb
add
pop
repnz
scas
push
jg
dec
adc
jne
jno
test
inc
mov
pop
sub
in
stos
dec
pop
push
jns
dec
bound
pop
inc
mov
xor
cmp
or
icebp
push
stc
push
dec
cmp
mulb
out
imul
bound
push
outsb
sub
scas
xchg
and
aas
cmp
mov
loopne
jno
out
aad
push
mov
sub
inc
test
das
cmp
movsl
xor
push
mov
push
jp
repz
call
xor
sahf
clc
pop
push
mov
push
push
es
rcr
scas
mov
mov
xchg
xlat
shll
call
mov
iret
dec
jcxz
pop
data16
xor
mov
cmp
add
mov
push
adc
jb
std
mov
test
pop
insb
cmp
dec
adc
sbb
dec
lret
dec
movsb
ja,pt
inc
mov
stos
jne
adc
jmp
sbb
popf
mov
in
push
scas
add
in
cltd
int3
adc
cld
enter
push
cli
sysret
push
stc
ret
mov
addr16
mov
xlat
clc
fnstcw
stos
pop
inc
sbb
lcall
sub
sbb
cld
cmpb
lea
pop
movsl
js
pop
push
add
dec
mov
cmp
mov
jno
sbb
jmp
sbb
cs
icebp
sub
mov
test
fsub
arpl
mov
dec
mov
mov
pushf
aad
mov
dec
out
push
or
pop
pusha
sbb
jg
cmpsb
push
popa
mov
mov
outsl
jl
and
adc
mov
pop
stos
les
pusha
push
dec
lret
ss
adc
lods
cltd
js
sbb
lock
out
scas
pop
filds
add
arpl
or
fs
lcall
mov
movsb
add
stos
fwait
data16
sbb
fcoms
fsts
jmp
cltd
or
dec
xor
ljmp
sahf
push
push
out
fidivl
out
xor
movntq
iret
jge
ret
jb
decb
clc
mov
nop
lahf
push
xorb
loope
sub
rcrl
iret
sahf
inc
xchg
jp
or
mov
sbb
call
inc
ret
pop
pop
popf
or
push
add
mov
sub
push
inc
pop
and
inc
stos
gs
pushf
sub
nop
movsb
ret
repnz
jl
cmp
push
cmp
mov
jecxz
repnz
or
dec
fwait
push
mov
ljmp
jge
cmp
adc
adc
xchg
xor
jecxz
sub
mov
and
lds
test
ljmp
xchg
xor
add
push
stos
mov
inc
and
loop
xor
xor
das
pop
mov
repnz
test
jle
test
add
add
enter
lret
inc
and
mov
mov
ss
mov
xor
cltd
xchg
inc
sbb
pop
or
les
imul
clc
add
js
mov
imul
and
sbb
and
push
sbb
loop
das
imul
mov
fcoml
les
idivb
pop
xor
leave
sbb
enter
pop
sub
in
gs
fcmovne
popa
adc
pop
jecxz
mov
mov
mov
push
icebp
rcrl
push
xchg
mov
popa
jb
call
or
sbb
cltd
int3
loopne
es
cmp
cs
shrl
adc
sub
ret
jo
ljmp
push
pop
push
mov
fucom
imul
push
pop
dec
roll
add
test
jp
mov
lahf
test
push
rclb
and
repz
sahf
lahf
xchg
andl
loop
addr16
dec
mov
push
mov
and
push
mov
fists
out
jns
adc
push
push
iret
dec
adc
sub
test
cmc
lock
daa
push
xchg
ret
mov
xchg
mov
jbe
dec
hlt
and
data16
sub
sbb
cmp
mov
imul
test
cmp
dec
ficompl
sahf
jecxz
sbb
insb
push
fadd
mov
xchg
or
int
or
lods
push
cmc
sub
insl
pop
xchg
in
shll
mov
movsl
inc
sub
frstor
movsb
xor
mov
push
adc
repnz
xor
add
pop
sbb
pop
mov
push
imul
mov
add
cmp
sbb
enter
add
ss
rolb
sbb
ror
or
fadd
repz
inc
or
loopne
push
jns
ret
jle
sbb
fnstenv
ret
andb
icebp
addr16
movsb
mov
std
adc
push
push
add
insl
xchg
cmp
insl
xchg
sbb
push
and
into
dec
mov
push
xchg
sbb
repnz
xchg
imul
dec
test
mov
subl
dec
mov
int
sub
inc
repnz
push
add
std
lea
pop
idivl
xchg
incb
dec
and
push
pop
sti
xor
inc
sbb
xor
sbb
cmp
cmp
xor
fisttpll
arpl
dec
dec
dec
jb
fs
sbb
shl
or
das
jo
add
add
les
aam
fimuls
fs
pop
test
inc
movl
in
cmp
xchg
fdivl
jae
loop
test
xor
jne
in
xchg
insb
loop
dec
xchg
cmp
sbb
dec
ds
jbe
leave
pop
repnz
sub
cmp
mov
test
scas
fsubp
or
xchg
push
push
imul
aam
jecxz
xchg
mov
roll
iret
decl
push
pop
cld
adc
test
bound
in
or
push
shl
or
xchg
jnp
lret
cmpsl
out
push
push
pop
mov
push
cmp
shll
xor
fistps
loope
cli
out
shl
dec
mov
cld
fistpl
jecxz
mov
mov
cli
nop
call
and
insb
sub
in
sahf
fldenv
aam
jecxz
jecxz
insb
rcl
leave
pushf
enter
aam
sbb
fwait
aas
rorl
mov
test
ds
mov
adc
xor
ja
imul
jge
repnz
lds
out
nop
sbb
pop
push
jnp
outsl
inc
aad
dec
cmp
jecxz
pop
fwait
mov
sbb
jp
push
sub
xchg
dec
pop
jno
add
clc
clc
push
push
mov
sbb
repz
xor
orl
dec
mov
inc
mov
xchg
adc
or
jge
mov
jne
adc
popa
subl
in
mov
out
sbb
ss
pop
pop
xchg
test
cmp
js
stc
rcrl
mov
addr16
jmp
and
sub
lret
and
jne
stos
xchg
sub
xchg
cmpsb
and
test
mov
mov
push
mov
jecxz,pn
mov
jns
mov
sbb
dec
fdivl
or
or
lahf
pop
dec
in
dec
mov
inc
push
mov
push
out
push
pop
test
jp
ret
mov
xchg
sub
unpcklps
mov
jle
imul
pop
int
sahf
out
sti
xchg
jne
xchg
sub
pop
xchg
mov
call
pusha
stc
sub
or
jmp
imul
inc
lret
fisttps
lock
jnp
inc
hlt
xor
loopne
shl
or
dec
xlat
inc
ret
into
insb
dec
jb
mov
lcall
cs
or
dec
sbb
adc
mov
int3
xchg
popf
xor
lret
xchg
cmpsb
fxch
ret
mov
movsl
pushf
pop
inc
fsubr
and
lret
jnp
cmpsb
cmpsl
in
and
andb
fxam
imul
mov
negl
push
pop
jae
push
sbb
jge
fadd
jecxz
mov
sahf
inc
scas
mov
ljmp
aas
mov
jg
subl
dec
out
push
jecxz
cli
push
cs
xor
into
dec
jnp
pop
je
notb
in
popl
mulb
jg
sahf
push
je
call
test
in
and
sub
sub
clc
stc
or
pop
jns
xor
adc
jo
mov
or
and
into
cmp
mov
adc
inc
rorb
cmp
out
push
xchg
dec
test
pop
fadd
into
fprem
int3
jp
mov
into
mov
xchg
or
sti
add
scas
mov
movsw
cmp
dec
or
stos
inc
mov
scas
pop
or
sbb
inc
fs
jp
js
inc
fdivrp
and
xchg
outsb
dec
sub
xchg
je
pop
xor
out
dec
sub
sub
jns
dec
leave
lea
jl
push
or
repz
aam
mov
pop
sub
pop
xor
leave
or
scas
mov
or
je
sar
hlt
cmpsl
or
mov
rcr
lahf
mov
pop
or
sbb
daa
sbb
and
sub
jnp
cmp
pop
int3
sbb
adc
ds
xchg
sahf
xor
mov
loopne
xor
loop
sahf
jle
or
std
test
pop
shll
and
mov
mov
popf
inc
pop
adc
mov
cmpb
popf
mov
invd
in
int3
pop
jae
inc
push
cmpsb
push
test
outsl
adcl
dec
ljmp
sahf
jno
fdivrs
test
dec
or
mov
sti
aam
adc
sbb
xor
xlat
push
cmp
xor
push
sub
dec
cmpsl
push
mov
dec
push
inc
addr16
das
negb
repnz
pop
in
mov
shr
scas
scas
fisttps
subl
xor
mov
sahf
xchg
gs
les
jmp
dec
pop
les
or
cld
push
sub
fmuls
xchg
mov
out
jp
mov
inc
mov
and
hlt
xor
cmp
push
aaa
mov
mov
outsb
ljmp
out
mov
mov
dec
mov
mov
xor
adc
popf
sub
mov
loop
fbstp
mov
xchg
adc
mov
enter
mov
shrl
bound
mov
pop
pushf
inc
orb
dec
mov
roll
mov
sbb
into
movsb
add
mov
stc
cmpsl
sbb
inc
out
fwait
dec
dec
push
or
push
out
sub
and
test
mov
fidivrs
cwtl
push
cmpsb
cmc
adc
sbb
push
mov
push
jp
shr
aam
mov
xchg
xchg
jecxz
icebp
push
xchg
fcomp
fwait
scas
or
stos
push
enter
dec
cmc
push
add
xlat
push
dec
idivl
int
sub
or
push
push
sub
dec
in
stos
cmp
mov
cmc
cmp
xor
nop
sub
xchg
sti
mov
and
add
inc
sub
aad
addl
add
lods
xor
sbb
cmc
popa
int3
loop
sub
cmp
mov
popa
pop
cwtl
push
icebp
stc
imul
sub
adcl
mov
jne
arpl
jmp
imul
pop
sub
xor
hlt
fcomi
rcl
int3
sti
popa
cwtl
sub
sub
inc
shrb
and
mov
aam
xchg
cmovl
loopw
xchg
xor
jb
jle
xor
inc
inc
jb
dec
xchg
push
jl
xchg
pop
mov
add
js
xchg
xorl
cld
xchg
loopne
arpl
dec
mov
sub
add
lret
push
push
and
add
std
out
ja
and
xchg
mov
pusha
mov
mov
add
leave
ja
adc
and
mov
into
inc
in
xor
ficompl
dec
jo
ljmp
sub
cmp
repz
and
lret
ljmp
mov
cs
ja
cwtl
mov
pushf
mov
jg
mov
iret
dec
cltd
in
lcall
int3
or
imul
movsl
pop
loope
mov
data16
xor
inc
inc
popa
jl
dec
pop
and
jns
push
nop
xor
fisubrl
loopne
pop
sbb
daa
or
iret
stos
out
sub
and
mov
sahf
push
mov
stos
pushf
je
cmp
cmp
add
dec
fcmovnbe
ds
test
insl
shll
jo
sbb
pop
outsb
rol
pushl
imul
mov
in
mov
dec
rorb
mov
mov
pusha
insb
cmpsl
push
adc
test
mov
or
bound
pop
fstps
sub
dec
sarb
sahf
jge
or
call
lret
outsb
pop
or
and
jge
mov
cmc
mov
push
cmp
fcoms
xor
adc
add
sar
es
xchg
pop
cwtl
xor
pop
push
lock
addps
test
fdivp
push
cmp
sub
lds
mov
mov
mov
xor
lds
xlat
adc
xlat
aaa
fadds
in
mov
roll
xchg
sbb
inc
adc
mov
pop
lods
das
sbb
fadds
pop
mov
stos
test
fsubrl
icebp
ror
and
cmp
or
cmp
int
enter
xchg
xchg
xlat
mov
dec
fwait
mov
xor
ljmp
jno
scas
pusha
rcll
cwtl
pop
fists
cmp
movsl
or
dec
movsb
dec
mov
ja
sub
dec
lcall
jl
mov
sbb
dec
aam
jmp
cli
or
clc
and
and
mov
cmpsb
sti
in
repz
aam
mov
xor
and
pop
cwtl
es
and
jo
cmp
xchg
adc
xchg
dec
sbb
push
outsl
push
inc
xchg
jg
subb
xlat
dec
inc
mov
pop
lods
out
or
ret
mov
out
pop
icebp
mov
fstl
jbe
je
mov
clc
inc
push
daa
iret
jne
mov
adc
add
push
add
sbb
push
mov
jne
or
push
f2xm1
das
jp
xchg
fisubl
mov
adc
stos
jl
call
loop
mov
rcl
and
enter
dec
dec
inc
test
dec
dec
push
cwtl
sub
jle
and
push
adc
insl
loopne
sbb
mov
pop
testb
mov
mov
nop
xchg
call
pusha
ficomps
mov
dec
or
std
cltd
filds
jne
or
adc
pop
jg
rolb
adc
jo
sbb
daa
sub
ljmp
or
mov
arpl
xorl
xchg
iret
mov
stos
out
ret
and
mov
xchg
xchg
dec
xchg
jno
push
push
dec
shl
cmp
sub
mov
movsl
jl
scas
shll
or
mov
xchg
hlt
out
jl
gs
lret
mov
mov
dec
leave
stos
je
lret
push
jg
nop
jae
mov
dec
jne
cs
add
lea
inc
cltd
xchg
aam
pushf
outsw
jl
xchg
inc
lods
ljmp
mov
cmpsb
push
push
jns
notl
cmc
movsl
mov
and
or
mov
jne
jmp
into
adc
loopne
outsb
adc
lret
sbb
cmp
orl
pop
cltd
gs
sbb
cmp
mov
adc
xchg
scas
ljmp
and
les
xchg
mov
mov
nop
jb
out
nop
dec
jge
xchg
popf
push
cmp
roll
mov
aaa
and
xchg
cmp
mov
cli
mov
xor
jecxz
cmp
jae
fildll
inc
xchg
cmc
out
sub
fs
push
rcr
sub
test
push
sbb
mov
lcall
fildll
es
xchg
push
push
cmp
push
xchg
mov
lea
mov
jno
adc
or
mov
cmc
jae
and
lcall
lret
pop
jp
or
leave
adc
ljmp
fadd
jl
cmp
push
ljmp
sub
xchg
pop
lahf
sbb
and
inc
pop
dec
adc
sub
arpl
stc
stos
into
call
jmp
adc
mov
loopne
sti
push
adc
popf
cmp
xor
lahf
mov
push
push
mov
cmp
dec
mov
sub
outsb
push
jmp
lret
dec
ret
ss
inc
sbb
dec
jg
out
fsts
jae,pt
lea
lahf
pop
int
test
or
outsl
jge
test
mov
fldcw
push
cmp
imul
mov
fnsave
out
outsl
loopne
mov
or
rclb
cmp
jl
popa
ds
fcmovnu
mov
loopne
fnstsw
push
mov
repz
xchg
cmp
jle
pop
dec
xchg
jo
mov
pop
mov
pop
ja
inc
jge
jns
icebp
push
dec
movsb
push
add
imul
leave
ja
sub
lahf
cmpps
pop
movsb
xchg
iret
push
inc
leave
mov
add
dec
mov
stos
cli
or
xchg
xchg
push
sub
std
jle
or
rcrl
fs
subl
xchg
shlb
stos
shrl
pop
repz
lods
cmpsl
sti
mov
dec
inc
jmp
mov
icebp
cmp
mov
lahf
cmp
fiadds
aad
incb
sbb
lahf
jge
les
mov
mov
dec
mov
push
int3
xor
icebp
mov
js
mov
lret
jne
lods
lcall
aam
pop
push
out
arpl
bound
out
dec
mov
cmp
movb
in
lods
fstpl
dec
adc
push
adc
insl
cli
out
pop
mov
mov
add
push
loop
fnstsw
mov
cmp
pop
pop
sbb
mov
lgs
ret
sbb
push
mov
jge
incl
flds
test
cmpsb
add
iret
aad
inc
xlat
ds
scas
gs
push
jb
jl
cmpsb
jge
outsb
pop
fs
aam
xor
lcall
inc
add
jnp
outsl
insb
sub
push
mov
in
pusha
add
cmp
nop
cli
xchg
in
pop
addr16
mov
es
inc
jp
pop
stos
sub
mov
fwait
loope
xor
cmp
lea
test
sahf
mov
ror
js
hlt
push
jne
std
cli
je
sahf
mov
mov
rcll
lcall
std
mov
divb
lds
ds
sub
lret
int
les
mov
xchg
adc
jle
inc
xor
jmp
cltd
loop
les
lcall
pop
dec
loopne
xchg
mov
cmp
jl
ret
sbb
add
push
adc
pop
or
inc
push
sub
pop
std
inc
mov
aas
testb
pop
mov
pop
rcll
mov
enter
add
mov
pop
adc
ss
loopne
inc
pusha
or
outsl
aam
push
or
jecxz
add
and
insl
push
scas
push
into
lock
jmp
and
and
mov
sti
popl
ja
outsb
stos
inc
cmc
inc
pop
shlb
stos
fldt
push
hlt
pop
ret
mov
mov
xor
fildll
repnz
ds
and
xor
xor
sbb
xlat
xor
jno
out
imulb
sbb
jg
outsl
jge
pop
xor
ja
std
mov
cmpl
out
sar
icebp
in
shll
push
popa
or
sub
dec
sub
inc
mov
sub
inc
sti
xchg
xchg
or
jno
mov
push
mov
frstor
pop
call
pop
push
jmp
pop
push
push
push
xchg
lea
cmpsb
enter
sbb
bound
in
xchg
mov
lds
fnsave
jmp
pop
cwtl
inc
pop
mov
mov
sub
scas
jg
lds
pop
das
or
jae
cmpsb
jno
push
mov
sahf
cmpsl
push
or
mov
leave
and
sub
sti
sub
inc
add
mov
mov
iret
loop
ja
out
decl
pop
aaa
lea
inc
mov
outsl
sbb
jns
xchg
adc
icebp
sarl
xor
adc
movsl
push
mov
cmpsb
mov
xchg
test
divps
addb
mull
ret
pushf
push
je
call
pop
lods
dec
pop
dec
mov
lds
jnp
xchg
aad
pop
and
call
test
push
and
xor
in
imulb
pusha
cltd
pminub
daa
das
out
adc
inc
dec
mov
ljmp
subl
pushl
pop
push
add
movsl
mov
mov
pop
aam
sbb
inc
mov
lock
adc
fst
ljmp
push
lock
jmp
inc
xor
pop
lds
divl
xor
ds
or
out
and
stos
mov
push
xchg
jecxz
xchg
shlb
inc
fwait
cmp
mov
and
xor
sub
inc
sub
push
sbb
lret
adcb
cmc
add
and
jp
js
cmc
cmpsl
stc
faddl
sti
cmp
ficoml
mov
jg
js
xor
push
push
sti
push
and
daa
xchg
les
movsb
out
sti
xchg
leave
inc
popa
fiaddl
lock
inc
shl
into
or
rclb
pop
jmp
adc
pop
jno
and
fsubrs
rorb
popf
sahf
jne
and
jle
and
mov
fcmovu
repz
sbb
mov
int
xlat
pop
pop
outsb
out
mov
cmpsl
or
pop
out
fistpll
in
movsl
cmc
iret
mov
mov
sbb
and
push
repnz
jo
push
daa
mov
xchg
cmp
icebp
out
xchg
movd
mov
rcrb
sub
subb
adc
jecxz
repz
jbe
arpl
or
jbe
adc
test
orb
mov
pop
push
inc
je
cwtl
outsl
dec
shrb
fxch
dec
fdivrl
push
cmpsb
dec
push
cmc
sbb
out
pop
or
sbb
imul
out
pop
leave
add
jbe
test
inc
insl
je
mov
jns
lds
pop
stc
mov
ljmp
mov
inc
add
repnz
hlt
inc
ss
sbb
loopne
dec
je
cmpsl
mov
jmp
cltd
inc
loopne
rorl
into
daa
xchg
aas
or
dec
jbe
jle
mov
and
and
outsb
aam
scas
mov
es
pop
pop
outsl
lcall
mov
shr
xchg
xor
fistpl
loop
fidivrl
addr16
fbld
or
lock
fidivrl
cmp
lock
rcrb
ret
ljmp
lret
sbb
sub
push
fldcw
arpl
rcrl
in
pusha
nop
xchg
pop
xchg
xchg
inc
lcall
insb
mov
mov
test
pop
jae
lods
in
lock
mov
cmc
jge
inc
xchg
repnz
testb
mov
sub
adc
lock
stos
push
or
pop
fcomps
add
pusha
scas
jecxz
pushf
dec
repnz
and
mov
sbb
out
cmpsl
mov
inc
repnz
mov
gs
mov
pop
push
arpl
add
jo
jle
fdivrp
jg
dec
mov
pop
insb
adc
or
movsl
xor
fwait
ljmp
mov
stos
push
fisubrs
repz
addr16
xchg
mov
popf
mov
popl
pop
dec
jnp
jecxz
imul
jle
adcb
bound
fisubrs
lahf
stos
lcall
mov
imul
jbe
test
sub
outsb
push
test
or
jae
and
mov
add
mov
jbe
sub
sbb
sti
aad
xchg
mov
jle
mov
and
pop
pushf
in
jbe
add
mov
popf
test
push
jmp
mov
leave
cmp
push
call
add
push
es
mov
jecxz
data16
das
and
nop
cmc
fsubrl
lods
fidivs
jecxz
adc
stos
jb
jae
mov
adc
mov
pop
cmp
mov
inc
popa
sbb
bound
xchg
sbb
adc
jmp
jmp
cmp
das
mov
rorl
mov
out
sbb
dec
fistpll
fwait
sub
dec
or
in
ficomps
stc
jae
mov
pop
pop
loope
test
std
into
ret
scas
test
jl
mov
scas
inc
sub
xchg
pop
jbe
lret
arpl
dec
and
adc
lcall
sub
test
and
add
pop
push
std
mov
dec
pop
xchg
xchg
mov
mov
scas
inc
or
adc
leave
sbb
cli
mov
adc
mov
test
mov
popa
pop
add
ret
in
test
adc
cmpsl
rcl
aam
inc
pop
stos
and
rclb
sbb
aaa
adc
push
jg
push
mov
push
cmpsl
lahf
fldt
push
and
add
dec
sbb
call
jne
aam
xchg
movsb
mov
pop
stos
call
pop
pop
cmpsb
int3
cmp
fisubs
fcmove
scas
jo
fstps
adc
and
fsubs
add
sbb
gs
stos
fmulp
fistpl
mov
mov
das
mov
xor
inc
sub
xchg
stos
call
sarl
ja
mov
ja
add
jp
mov
ror
cmpsb
rol
cwtl
sub
movsb
ret
cmp
xor
inc
sub
or
pop
std
jb
dec
pop
xchg
or
enter
mov
adcl
or
bnd
aas
fwait
mov
pop
inc
aam
popf
dec
stos
pop
adc
add
jb
data16
pop
fstl
test
pop
and
dec
dec
xor
rclb
sti
lods
shlb
sub
pop
or
xor
fsubl
mov
ja
push
xchg
and
or
add
push
push
mov
fdivrs
nop
aas
sbb
shl
fs
mov
jne
in
add
xchg
fldcw
push
pop
push
lret
out
mov
xchg
shl
push
push
cmpsb
sbb
and
lods
cmp
nop
sub
data16
xchg
mov
mov
push
lcall
jge
and
loop
sub
fcompl
jno
mov
adc
fildl
adc
loop
or
lods
sbb
mov
xchg
add
in
mov
jns
xchg
or
call
gs
and
outsl
aam
xchg
repz
inc
jp
cltd
inc
lods
cli
adc
test
inc
pop
std
mov
xchg
lcall
faddl
test
je
aaa
aaa
mov
fwait
sub
dec
int3
bound
addr16
out
shlb
stos
nop
imul
out
add
ja
or
ss
in
push
adc
jne
pop
jno
mulb
inc
fsubrs
sbb
sub
sti
leave
dec
sbbb
cmpsb
jno
js
lret
jne
icebp
or
incl
jae
ret
ljmp
push
ret
cmp
mov
mov
inc
push
xchg
pop
insl
loope
cmp
push
mov
dec
loope
dec
outsb
add
shrb
loop
sbb
dec
lods
ret
mov
adc
cld
dec
in
jbe
pop
outsl
push
jb
add
andl
push
sub
jo
adc
adc
std
ror
mov
hlt
fnsave
fimull
add
push
mov
imul
xor
or
push
rorb
clc
fdivrl
rorb
or
mov
inc
or
jns
pop
dec
cli
jecxz
xchg
insl
or
xor
jmp
adc
cmpb
fstpl
out
test
out
lea
ficompl
popa
nop
es
ret
jnp
test
sahf
push
stos
jp
dec
pop
addr16
adc
or
inc
cld
sub
adc
enter
mov
or
mov
xor
movsl
lahf
cld
mov
and
cli
cmp
mov
sbb
inc
daa
out
and
jae
xor
fwait
in
or
gs
xor
xchg
xorb
ljmp
test
addr16
jmp
fstpl
addl
es
mov
cld
popa
and
inc
clc
add
pop
cmpl
inc
lret
add
rorl
pop
xchg
fdivrl
mov
pop
clc
mov
mov
mov
fs
add
std
cmp
test
sbb
rcrl
jno
jl
dec
xchg
push
or
mov
xchg
pusha
pop
cmp
sub
sahf
cmp
in
jne
pop
push
out
or
bound
jae
repz
nop
outsl
xchg
out
scas
into
divb
mov
cltd
or
notb
fistpll
pop
push
mov
cmpsl
dec
sub
xchg
out
pop
push
shlb
fs
pop
adc
int3
xlat
xchg
fmulp
test
jo
insl
mov
inc
adc
xor
ds
lcall
push
test
dec
clc
xchg
test
clc
je
mov
inc
add
lret
sbb
les
or
cmpsl
aam
inc
push
pop
mov
pop
pop
lret
jge
jge
sbb
mov
lock
in
ret
cwtl
pop
add
or
pop
mov
and
fs
icebp
loop
loopne
outsb
sahf
push
pop
push
pusha
ficoml
gs
jno
stos
stos
loope
js
push
sub
lret
or
dec
xchg
cwtl
dec
mov
inc
push
xchg
adc
ret
push
push
push
sub
mov
inc
les
loopne
rcl
ret
ds
dec
sub
jecxz
aas
xchg
pop
dec
cld
jl
mov
pop
mov
jle
lock
mov
pop
mov
imul
mov
cmpsb
mov
stos
mov
mov
stos
inc
jbe
fmull
ljmp
je
dec
or
add
les
sub
xchg
push
rcl
js
xchg
test
aam
out
mov
clc
rorb
mov
scas
out
inc
mov
xchg
push
jb
ss
sbb
mov
loopne
sbb
mov
mov
pop
dec
lret
sbb
es
ret
lret
rol
ret
ror
sahf
sbbl
shll
out
mov
fldenv
jb
xchg
push
or
inc
sbbl
and
xchg
sub
in
sub
jne
push
rcll
jecxz
jns
das
and
xor
jle
cmp
dec
cli
sbb
push
je
ds
push
mov
inc
les
mov
ficomps
hlt
xor
lock
repnz
mov
push
inc
idivl
lods
mov
cli
jb
sbb
add
jmp
add
adc
test
cwtl
into
out
push
xchg
mov
das
fldcw
rolb
popf
mov
loope
cmc
or
in
test
sbb
es
xchg
adc
push
repz
sbb
rolb
daa
lock
loope
xor
sahf
lods
adc
enter
sub
shrb
test
jp
testb
or
jns
stos
or
pop
mov
sbb
mov
mov
sbb
fwait
in
mov
mov
push
in
jno
mov
ds
xchg
jge
stos
sub
int
xlat
decb
cmc
imul
in
rclb
das
shll
adc
mov
or
testb
cmp
decb
icebp
push
scas
pop
dec
xlat
and
insl
mov
shr
stc
pop
xorb
push
lods
bnd
adc
xorl
aad
pop
jmp
mov
fbld
fucomp
inc
inc
out
mov
xor
cwtl
dec
adc
and
wbinvd
lahf
fwait
lods
mov
sti
or
sahf
mov
push
icebp
xor
fistl
mov
cli
dec
dec
out
or
jmp
scas
jmp
sbb
lret
sahf
movsl
aaa
dec
push
jae
sub
lcall
pop
int3
mov
icebp
insb
pop
or
cmpsl
fstl
sbb
data16
test
mov
loop
jns
or
imul
cmpsb
test
mov
popf
mov
mov
in
subl
adc
rolb
dec
mov
movsb
inc
insl
push
loope
mov
mov
pushf
adc
xlat
mov
stc
stc
sahf
pusha
push
jecxz
sbb
cld
add
pushf
jb
stos
cmp
scas
xor
adc
dec
fwait
xchg
cmp
jbe
dec
adc
cld
mov
mov
bound
je
sbb
inc
jno
mov
mov
dec
mov
rorl
mov
test
pop
lods
or
push
aad
push
sub
data16
shr
inc
test
sub
mov
dec
pop
lret
int
mov
ret
mov
inc
cli
iret
icebp
ss
jp
ds
dec
inc
pop
and
ret
jne
jg
and
mov
lahf
push
mov
xor
push
shl
pop
ja
mov
mov
push
cltd
xchg
lock
fistpll
mov
out
lds
insb
in
ret
sub
je
aad
movsb
add
jnp
or
push
inc
and
xchg
and
not
mov
lret
enter
push
out
lds
jle
in
shlb
jmp
aaa
pushf
xchg
pushf
pop
out
mov
mov
add
dec
push
pop
jae,pn
mov
sub
and
lcall
inc
insl
xchg
mov
imul
das
cmc
ds
int
inc
imul
pop
ds
int3
inc
xor
das
mov
adc
mov
test
cld
cmpsb
dec
sub
lret
fiadds
lea
out
ljmp
xchg
xchg
aaa
aas
je
sbb
pop
inc
test
hlt
xlat
adc
or
sbb
adc
jmp
es
xor
or
cli
adc
xchg
outsl
pop
mov
jle
add
stc
hlt
jae
mov
dec
cmp
xor
xor
loopne
cli
mov
push
rcrb
pop
jbe
or
mov
clc
scas
mov
test
or
sti
mov
shrl
push
xchg
out
repnz
insb
mov
roll
sahf
add
ss
cltd
rcll
stos
aaa
push
in
add
loope
dec
outsl
xchg
and
sub
xor
mov
in
inc
daa
je
rolb
adcl
enter
push
stos
fs
mov
xchg
sarb
mov
sub
outsb
lret
das
pop
jl
jmp
cmc
in
or
inc
inc
sbb
hlt
stos
jecxz
dec
addr16
loope
fs
clc
lods
inc
pop
inc
and
xor
xor
adc
fucom
out
sub
jae
cmp
lret
cmpsl
das
jne
jns
cli
shl
rcr
sbb
pop
hlt
mov
sbb
loopne
mov
mov
ss
fwait
push
gs
out
inc
sti
add
adc
jmp
lahf
scas
inc
fs
push
movsl
push
pop
subl
stos
push
pop
aas
inc
fidivs
cmp
lahf
xlat
cmp
js
cli
mov
ret
mov
and
sbb
mov
cmp
imul
push
dec
mov
ret
mov
dec
test
pop
lcall
lcall
cmpsl
mov
xor
dec
imul
out
jbe
sub
push
stc
enter
xchg
cwtl
xor
fimull
paddw
iret
sub
outsb
inc
rcrl
dec
mov
mov
adc
das
stc
leave
mov
aad
add
pop
loopne
adc
mov
nop
xor
dec
imulb
js
sub
mov
stos
push
cltd
mov
jo
inc
xor
jmp
ret
push
adc
cmpsb
repz
jle
cwtl
add
test
in
mov
pop
xor
stos
cmp
jne
daa
sar
push
loopne
cmp
or
pushl
inc
sbb
test
fldcw
test
xor
jp
fiadds
xlat
mov
mov
mov
jle
inc
inc
jecxz
mov
jecxz
cmp
sub
divb
subl
stos
ficomps
enter
into
adc
stc
or
xor
pop
and
scas
sbbl
push
lcall
lds
and
mov
sbb
push
testb
lods
scas
mov
push
pusha
xor
adcb
mov
lret
cmpsl
pop
rcl
sub
shrl
mov
mov
push
out
sahf
or
lahf
ja
mov
cld
sub
mov
imul
test
movsb
push
cmp
jmp
inc
fcomps
ljmp
rcrb
or
push
adc
cmpsl
sub
cmp
pop
mov
or
jge
cld
icebp
mov
fdivrl
add
xor
test
jb
or
pop
in
cli
shrb
loope
imul
lock
sti
mov
xlat
xchg
in
adc
adc
movsl
shlb
in
sub
mov
les
fistpll
jne
lret
sbb
and
clc
scas
lea
ret
mov
jp
out
push
lahf
lock
mov
adcl
lret
outsl
rcll
rcrl
aam
cmp
jbe
add
push
xor
stos
cmpl
bound
ds
lea
mov
addb
dec
add
adc
jno
pop
adc
test
ljmp
pop
movsl
mov
sub
scas
sbb
repz
mov
lock
hlt
ss
insl
cmp
xchg
ja
add
xor
cmp
sbb
mov
aad
dec
dec
cmpl
in
push
out
inc
mov
je
inc
xchg
loope
sahf
lahf
push
cltd
mov
lret
add
mov
into
add
adc
sbb
ja
lret
es
aam
test
std
or
fcmovb
mov
jbe
push
inc
mov
add
in
popf
push
lea
into
fadd
hlt
cwtl
cmp
cmp
and
sub
or
push
xor
xor
xchg
imul
jmp
mov
pop
in
xchg
insl
jmp
lods
in
sti
je
stc
push
fcomip
or
mov
push
popf
fcmovb
jge
xchg
lea
adc
stos
jecxz
sub
ret
in
movsl
cs
push
lods
gs
jp
insb
xor
scas
dec
fsubrs
cltd
sbb
push
dec
sti
sub
bound
shlb
mov
jg
push
jne
mov
xchg
mov
mov
cmpsl
jmp
or
jne
sbb
add
pop
ljmp
xor
xlat
xor
inc
xchg
int3
fistps
push
sbb
scas
add
sbb
inc
cltd
add
aaa
push
inc
adc
push
stc
cmc
in
ljmp
int3
stc
push
popf
jne
icebp
sbb
fstpt
arpl
aaa
jl
sbb
into
pop
rolb
mov
sub
dec
repz
pop
mov
test
mov
inc
adc
lods
lahf
ror
pop
call
pushf
dec
in
mov
mov
inc
mov
mul
add
dec
mov
loope
jbe,pt
or
sub
mov
xor
mov
call
fsubs
or
imul
negb
in
cmc
mov
cmc
test
cld
movsb
mov
mov
and
push
movsl
neg
pop
push
sub
jle
or
mov
push
adc
xor
cs
xchg
add
faddl
lds
cmp
cmp
push
xor
push
sbb
or
lcall
pusha
dec
and
mov
les
xchg
xchg
lock
pop
sub
testl
sbb
aas
scas
cmp
popf
fs
push
mov
mov
push
fldenv
insl
repnz
jmp
xchg
cmpsb
int3
jbe
ljmp
fbstp
int3
clc
cmpsl
sub
mov
nop
sbb
xchg
mov
add
out
mov
pextrw
ja
emms
add
inc
add
lret
icebp
inc
dec
leave
mov
cwtl
sub
adc
xchg
repnz
lock
loop
fistl
pop
inc
dec
aaa
insb
sub
stos
sti
aam
and
jns
daa
enter
jnp
insb
sub
xor
cs
cld
mov
hlt
cmpsl
les
repz
inc
ja
jnp
mov
and
lret
mov
jno
xchg
mov
xor
adc
inc
andl
divl
add
and
sbb
jae
aam
jmp
cmp
and
cmpsb
pop
stc
cmpsb
sub
sbb
jb
push
push
xchg
adc
ljmp
lea
sarl
out
mov
xchg
std
or
jnp
push
cmp
xchg
xchg
bswap
adc
cmp
and
or
bound
mov
or
sub
out
mov
pop
aas
in
mov
arpl
hlt
loope
xor
jp
into
dec
fmull
and
push
xor
mov
movsb
out
test
sbb
dec
push
push
adc
addr16
mov
negb
dec
and
jmp
cmpl
test
jo
dec
push
mov
ljmp
cmp
out
mov
add
into
mov
mov
ret
repz
and
sub
ret
dec
mov
mov
int
xor
idivb
pop
fnstcw
scas
push
fcomi
lret
mov
insl
sub
ficompl
jmp
jp
push
imul
mov
jmp
sub
test
in
in
mov
fdivl
sbb
xor
push
push
mov
movsb
jae
xlat
adc
test
jp
les
sbb
leave
lds
adcb
push
xchg
popa
push
fdivl
adc
xchg
push
mov
mov
inc
cmp
ja
xorb
loopne
add
mov
xor
xchg
cmp
pusha
mov
es
in
outsb
add
movsb
push
repz
mov
jae
cmpb
test
push
jb,pn
push
xor
dec
mov
scas
aaa
into
jne
xchg
adc
add
jae
aad
inc
fimull
pop
cmpsl
sub
xchg
addr16
push
rcrl
out
pop
pop
icebp
push
addr16
fistps
push
push
xlat
pop
jne
out
fisubrs
jg
sahf
inc
cmp
jecxz
mov
mov
and
adc
test
adc
iret
pop
jnp
sub
cmp
push
stos
nop
mov
aam
mov
push
mov
jp
or
out
push
and
icebp
pop
fstpt
lret
ret
daa
cmpsl
loope
mov
pop
cmp
and
jecxz
aaa
mov
jae
jge
mov
into
in
lret
rcrb
mov
push
jmp
or
and
and
cmp
mov
xchg
fcmovnbe
sbb
mov
sub
or
pop
push
mov
fisubl
xchg
fdivrs
negl
outsl
sbb
lods
int
add
out
push
pop
mov
add
xchg
xchg
push
push
and
cmp
ficomps
jne
rorb
push
in
call
dec
xor
out
jge
aas
ljmp
pop
es
mov
out
xor
xchg
das
or
and
cld
movsl
in
inc
jmp
or
dec
mov
and
dec
outsl
jne
ret
int
sbb
jge
pop
dec
lret
loope
test
mov
inc
loopne
rcrb
cmp
rcl
outsb
dec
jne
add
leave
cmpl
std
ret
jecxz
pop
and
xchg
inc
jl
scas
cltd
mov
insl
xchg
ret
inc
and
jne
leave
pop
ret
jns
dec
pop
or
inc
push
cld
push
fstl
add
adc
mov
cmp
aas
pop
push
lods
inc
das
movsb
std
mov
xlat
inc
movsb
enter
jno
in
pop
nop
enter
mov
orb
lods
jnp
loopne
mov
xchg
ljmp
fmuls
pop
sub
xchg
xlat
aam
mov
das
movsb
lock
sbb
loop
cmc
pop
push
test
jno
adc
jg
jbe
cmp
add
repz
sub
scas
lret
shr
jle
leave
sahf
mov
mov
adc
ja
and
inc
out
add
push
mov
cltd
fbstp
fldl
scas
imul
imul
inc
hlt
and
push
enter
dec
jnp
das
dec
cmpb
stos
sahf
sub
ja
mov
das
pop
js
mov
cmp
mov
adc
cmp
loop
insl
cmp
lcall
dec
dec
jbe
mov
sbb
popa
jae
add
daa
inc
dec
scas
sbb
ja
cmpb
mov
add
subl
xchg
lahf
das
adc
rorl
mull
inc
mov
adc
xchg
andl
xor
std
ss
ficomps
sub
push
inc
mov
push
sub
inc
cmp
lock
sbb
int3
or
repz
pop
xchg
inc
stc
push
aaa
and
pop
popf
pop
std
mov
xchg
dec
push
add
dec
les
xchg
inc
and
fdivs
add
stc
mov
mov
adcb
stos
sub
xor
push
scas
sbb
out
cmp
xchg
insl
pop
jge
sbb
psubw
xchg
and
addr16
pop
cld
fcmovnu
cmpsb
push
into
fdivl
test
movsb
call
aam
sbb
xor
jno
push
std
jae
cmovb
add
iret
imul
cli
aaa
test
int
pop
mov
cli
inc
fisubl
aad
cmp
clc
int
pop
lods
loopne
call
add
hlt
and
int
xor
xchg
imul
imul
out
sbb
dec
inc
sub
mov
xchg
movsb
mov
pop
pop
fldl
arpl
movl
sarb
sub
sbb
xchg
aad
je
pop
mov
fwait
mov
sbb
jbe
mov
sub
push
lock
cmp
fsubs
ljmp
sub
in
jge
mov
subl
push
add
adc
movsl
lcall
in
add
pushf
fmull
dec
test
mov
push
xor
jae
dec
out
test
leave
lret
in
test
jge
pop
jl
adc
cli
xor
lcall
out
dec
jns
scas
push
inc
xchg
cmpsb
mov
add
movsb
out
lds
out
cltd
cmc
bound
xchg
or
mov
cld
mov
sbb
ss
cmp
ja
and
bound
inc
pop
popf
lcall
push
lret
adc
xabort
sub
xor
mov
xchg
push
inc
push
adc
jg
lcall
add
sbb
sbb
sbb
sbb
jge
push
pop
mov
sar
or
cmpsb
cli
pop
iret
pusha
dec
fmul
xchg
cmp
adc
cwtl
mov
arpl
daa
mov
loop
sarl
out
mov
sti
pop
pop
fsub
ja
mov
and
ds
into
inc
fildll
pop
jl
aad
mov
es
jnp
or
jbe
outsl
jl
jg
cmp
add
cmp
cmpsb
rcr
dec
js
xor
push
pop
push
jae
or
add
faddp
cmp
scas
out
sub
sar
notl
jecxz
fbstp
jno
jo
leave
mov
enter
cmp
xchg
into
je
xchg
pop
jp
xchg
add
aam
dec
xor
mov
xchg
int
lods
lret
inc
jecxz
cmp
push
je
cli
scas
mov
xchg
sbb
sub
test
and
jns
dec
inc
jbe
jb
pop
lcallw
in
push
or
das
out
mov
out
dec
mov
adcb
sahf
sbb
aas
inc
fldl
shr
add
sub
movsb
cmpsb
in
out
aaa
pop
mov
popa
jge
or
loope
stc
jecxz
iret
gs
sbb
sahf
sbb
imull
in
mov
mov
cld
mov
jl
lock
movsb
jno
imul
add
enter
and
mov
movsl
in
jl
es
xor
mov
popl
mov
xor
mov
inc
add
push
xor
subl
sbb
pop
test
adc
xchg
pop
dec
inc
pop
lock
call
movl
cs
xchg
push
xchg
out
cmp
iret
adc
dec
or
push
inc
repz
pop
mov
and
jmp
int
lahf
out
push
mov
imul
or
ds
add
mov
pop
or
mov
aaa
daa
outsb
add
push
sub
xor
push
rorb
sub
pop
cmp
aaa
xor
push
lcall
adc
and
xchg
mov
add
cmp
lret
or
mov
js
mov
and
sbb
cmc
sbb
pop
iret
add
xchg
std
jge
fmulp
mov
jmp
pop
sub
imull
xchg
dec
cmpsb
sbb
or
push
xchg
frstor
std
fcoml
shr
and
int
adc
inc
add
pop
rcrb
cwtl
std
mov
testl
test
xor
mov
pop
call
xor
push
je
push
jbe
sub
xchg
rol
sub
notl
loopne
pusha
or
mov
dec
repnz
xchg
push
in
jb
loopne
insl
sub
add
aas
mov
push
out
mov
and
je
and
xor
xchg
inc
lret
pop
xor
aam
push
je
sub
sbb
mov
cmp
lds
sub
shlb
push
mov
push
push
dec
and
or
cltd
mov
add
stos
aad
jns
jl
dec
les
or
aad
or
bsf
pop
sub
and
jecxz
inc
out
dec
sahf
outsl
aas
add
popf
lahf
in
add
sar
or
inc
xor
mov
mov
pop
mov
adc
fcmove
cmpsl
in
xlat
pushl
mov
cli
in
jp
sub
xor
lea
mov
add
sub
inc
dec
hlt
rcll
aaa
inc
scas
iret
inc
pop
add
inc
lds
or
add
adc
lahf
push
jo
hlt
dec
aaa
fdiv
aaa
xlat
xor
fidivs
add
ljmp
in
or
insb
outsl
pushf
into
mov
jae
pop
push
cmp
sub
mov
daa
dec
push
lds
sub
inc
js
dec
test
stos
fwait
das
sub
lret
or
lods
push
ss
adc
shl
pop
out
nop
out
mov
mov
xchg
clc
xchg
pop
and
jbe
mov
pop
ja
dec
iret
mov
dec
test
loop
lcall
inc
inc
repnz
or
add
popf
cmpsb
popf
adc
js
jb
pop
mov
and
add
xchg
xchg
in
pop
cmp
add
pop
cwtl
popf
and
jl
fistpll
cmp
sbb
aas
push
xchg
pop
mov
push
hlt
mov
in
stos
rcrl
test
pusha
push
add
push
movsb
rol
lock
lret
push
out
xchg
aam
pop
pop
mov
or
ret
in
hlt
push
mov
ja
bound
or
adc
jnp
xchg
adc
cwtl
ret
pop
repnz
dec
add
leave
cmp
movsl
jge
fnstsw
jmp
loop
dec
lcall
shlb
dec
in
cwtl
mov
jno
or
pop
rclb
mov
fdivl
fisttpl
xchg
mov
or
outsl
dec
andl
add
jle
inc
out
inc
dec
pop
repnz
fstpt
cmpb
jmp
lods
arpl
push
mov
sub
sbb
rolb
scas
adc
pop
or
xor
fstps
ljmp
int3
jnp
lock
lret
inc
dec
shl
xchg
ds
out
push
repz
push
xchg
sub
or
aam
int3
inc
sahf
push
adc
sbb
lods
mov
adc
stc
push
sbb
xor
ss
cmpsl
fsts
and
sbb
jbe
je
jnp
out
js
xchg
gs
in
pop
rcrl
xor
jbe
jp
xor
sahf
pushl
les
jne
mov
dec
iret
add
mov
leave
iret
cltd
pop
adc
mov
xchg
pop
lcall
and
pop
jge
pop
mov
mov
pop
inc
stos
mov
add
mov
out
lods
sbb
push
dec
lret
fmull
mov
stos
ss
les
push
cs
xor
imul
ds
nop
lods
in
lcall
in
cmp
int
ss
cld
fs
mov
sbb
sub
mov
insb
xor
imul
push
scas
pop
or
jo
and
outsl
shlb
test
pop
addl
xchg
mov
mov
mov
sbb
sti
outsl
inc
push
mov
pop
and
aad
push
scas
sar
or
outsl
mov
lret
adc
xchg
mov
dec
leave
nop
mov
add
xchg
adc
subl
sub
mov
inc
inc
inc
hlt
push
in
sti
push
repnz
jns
arpl
fistpll
inc
adc
xor
sub
mov
ficompl
mov
in
adc
and
pushf
cli
adc
jl
icebp
std
int
sub
pushf
movsl
dec
in
inc
xlat
pop
movaps
and
or
mov
test
xchg
jmp
cmpsl
mov
into
mov
fisubl
insb
lret
loop
xchg
adc
dec
xor
andb
scas
push
xor
in
lds
mull
pop
mov
mov
daa
push
lahf
pop
sbb
rcll
mov
movsb
mov
push
mov
add
shl
jne
in
lret
pusha
int
xchg
mov
scas
xchg
cwtl
rcl
outsb
push
dec
dec
mov
rcrb
push
mov
cmpsb
jle
inc
jmp
pop
mov
jp
cmp
push
shll
cld
jo
add
das
mov
mov
pop
loop
setle
mov
mov
idiv
int3
xor
out
push
lret
mov
ljmp
scas
add
fdivrl
mov
push
cli
or
mov
popf
cmpsl
xor
jne
aaa
mov
test
add
testl
pop
lret
xorl
jbe
cltd
adc
xchg
xchg
dec
loop
adc
not
lods
dec
int3
and
repz
mov
test
sbb
idivl
sbb
adc
mov
ja
push
iret
xchg
cmpl
pcmpeqd
xchg
push
xor
xchg
scas
cld
cs
adc
sbb
insb
mov
push
pop
in
movsb
data16
fcompl
into
sbb
xlat
inc
mov
fisttpll
test
xchg
cld
push
imul
in
inc
jb
fsubs
adc
mov
push
mov
and
es
int
testb
xor
sub
fisubrs
or
inc
lret
fidivl
clc
or
lret
addb
and
jne
xchg
mov
jmp
sarl
lahf
pop
loope
pop
adc
and
cwtl
aad
sub
xchg
jnp
scas
sahf
loope
lcall
cmc
xchg
add
arpl
add
ja
out
sbb
mov
in
imul
push
out
pop
mov
out
arpl
icebp
fsubrl
push
dec
imul
mov
int
int3
or
mov
cmpsl
int3
jno
sbb
dec
add
lods
loope
mov
add
adc
negl
daa
testl
sub
mov
jl
inc
inc
notb
push
dec
xor
pop
push
inc
xchg
push
pop
xor
jl
test
mov
sub
pop
mov
stos
jecxz
jmp
xor
sub
clc
int3
stc
inc
enter
movsb
adc
rcrb
fildll
jge
leave
int3
gs
jmp
enter
mov
and
push
test
pop
movsb
mov
aas
mov
pop
les
shrb
mov
das
shlb
frstor
or
add
cmp
test
inc
push
dec
cmpl
or
insb
mov
xlat
nop
and
rorl
pushf
sbb
jne
xor
sti
and
repz
and
stos
jo
testl
insl
clc
sti
out
insl
xlat
ss
fsubs
lret
cmp
mov
sub
or
cwtl
inc
dec
shll
xchg
test
jb
dec
repz
movsb
sbb
js
push
sbb
ds
pop
pop
aas
mov
lahf
repz
in
cmp
in
inc
sbb
fisubrs
nop
mov
and
mov
movsl
out
mov
test
cmc
xchg
call
sbb
in
fisttpl
in
lahf
fsubrl
arpl
or
ret
dec
add
pxor
dec
loopne
data16
mov
notl
add
jno
lds
xor
cmpsl
shll
ds
or
dec
sub
cmp
dec
sub
cli
xchg
call
clc
outsb
jno
loop
sub
adc
dec
je
mov
jle
pop
arpl
push
mov
xor
sub
sub
dec
inc
pop
daa
mov
xor
push
jne
mov
imul
xchg
add
mov
shl
mov
adc
aaa
fistl
mov
ret
arpl
xor
adc
fidivrl
ljmp
out
xchg
push
in
setl
hlt
lret
push
push
mov
gs
gs
push
cmp
jo
popf
cli
mov
dec
fcmovnu
dec
adc
jmp
ret
bound
lods
mov
cmp
scas
mov
lock
add
or
inc
mov
xor
jl
les
xchg
in
mov
scas
loop
inc
push
pushw
mov
and
add
testb
imul
inc
mov
lea
notl
pushf
cmpsl
movsb
cmp
sti
jae
shrl
fwait
insb
sub
lods
repnz
aad
leave
lcall
sbb
adc
mov
fldl
and
loopne
clc
mov
addr16
cmp
mov
icebp
mov
jge
xchg
jnp
out
or
jo
js
dec
mov
cmp
fwait
sbb
cli
pop
fstps
aad
adc
jecxz
jmp
insb
xchg
js
push
in
mov
push
sarb
add
mov
xchg
mov
sbb
mov
mov
push
out
xchg
pop
xchg
dec
movsl
adc
fdivs
rorb
movsl
loope
jnp
fsubrl
sub
lret
and
daa
sub
test
jae
mov
jle
cmp
mov
lret
adcb
fistpll
mov
leave
and
mov
push
inc
xor
pop
xor
sahf
data16
and
sub
divl
test
sbb
bound
rcll
xor
repnz
lahf
test
imul
fcomp
mov
shlb
and
cmpsb
shl
cmp
arpl
js
outsb
sub
jmp
stos
bound
sbb
int3
dec
ror
addr16
lahf
popf
cs
in
pushf
dec
out
lahf
jns
out
inc
xlat
pusha
dec
in
add
xchg
fadd
aam
cld
insl
xchg
dec
test
sub
daa
in
push
xor
scas
les
cmp
dec
push
inc
stc
aas
loope
cmpsl
fcmovbe
scas
jl
xorl
push
xchg
outsb
imul
mov
dec
aaa
and
outsl
mov
mov
pop
lds
sub
icebp
aad
mov
add
fcoms
cmp
pop
insb
xchg
subl
in
jg
ss
push
mov
gs
push
pop
outsb
lfs
in
cli
cmpsb
daa
loopne
sahf
inc
push
sub
push
mov
add
jmp
dec
enter
arpl
or
daa
xchg
les
sbb
arpl
add
dec
hlt
fldt
subl
lea
fistpll
inc
pop
sub
jge
out
mov
jns
push
fnstsw
push
sbb
fiaddl
xor
xor
dec
sbb
inc
aaa
and
scas
pop
cmp
mov
leave
dec
pop
fldl
dec
imul
iret
and
fisttps
fcmovne
loopne
mov
das
je
and
je
dec
xchg
inc
push
mov
dec
cmc
movsb
int3
mov
add
pushw
insb
out
inc
xchg
and
push
lods
adc
in
dec
add
dec
mov
pop
pminsw
or
ret
xchg
sbbl
outsl
or
add
push
lds
enter
pop
adc
push
mov
addr16
mov
pop
add
lods
testb
test
xchg
pop
mov
movsb
pshufw
xchg
push
or
and
sub
xchg
nop
mov
cmp
mov
jmp
sbb
popa
adc
jno
fdivl
mov
sahf
movsl
mov
lea
lahf
iret
gs
jne
xor
push
and
adc
out
popf
cmp
xor
xor
sbb
mov
mov
mov
les
pusha
mov
insb
xor
jecxz
add
shrb
mov
das
mov
xchg
nop
xchg
and
testl
iret
stos
add
push
fucomi
jns
dec
or
dec
sub
mov
fcoms
loope
inc
ret
dec
xchg
mov
lea
push
xchg
hlt
cmp
jp
sub
mov
push
pop
jmp
call
movsl
enter
testb
movsb
es
cmp
xchg
jns
and
outsl
push
inc
add
jns
loope,pn
or
cmp
scas
xlat
in
out
push
test
stos
or
push
bound
inc
and
mov
arpl
shl
repz
int
out
or
es
pop
fsts
repnz
add
ret
test
mov
fisttpl
dec
into
cmc
out
or
mov
xlat
jb
pop
sub
popl
cmp
dec
inc
pop
adc
ja
iret
or
add
lods
fdivl
push
mov
jae
adc
cmpsb
imul
fildll
mov
repnz
fiadds
fmulp
call
in
test
mov
pop
jae
mov
scas
xchg
out
rorb
and
cld
inc
inc
ror
xor
lahf
sbb
scas
or
push
iret
pusha
cmp
in
imul
scas
aam
rorl
sub
xchg
push
outsb
lods
push
xor
rclb
mov
adc
addb
adc
cmp
xchg
out
cmp
test
jecxz
aas
sbb
lods
mov
push
sbb
cmp
cmpsb
lods
inc
dec
mov
lret
int
in
mov
lret
in
addr16
nop
ficompl
jns
inc
push
xchg
sti
push
out
lahf
int
sub
push
dec
cmpb
pop
push
and
jle
lods
outsb
xor
cmp
sbb
inc
lods
jnp
es
mov
add
push
testl
mov
insl
and
xchg
filds
add
ds
add
stos
push
inc
lea
test
idivl
dec
mov
call
pop
cld
add
push
mov
fimuls
mov
jb
es
sub
fdivrs
nop
clc
jae
or
xchg
enter
mov
out
jne
pop
into
psubusb
andl
js
pop
into
cmp
sbb
xchg
test
repnz
jp
xor
xor
loope
dec
iret
xlat
mov
jge
sti
rolb
aaa
mov
xchg
popf
mov
push
xorl
xchg
fmuls
daa
iret
mov
mov
adc
out
pop
xchg
loope
cmp
scas
add
push
dec
jmp
push
lcall
and
frstor
addr16
or
scas
sub
sbb
jg
in
xor
shrb
ret
shld
mov
outsl
rcll
sbb
in
cmc
in
lret
sti
imul
movsl
das
stos
shlb
cmp
mov
addr16
aam
lcall
repnz
ret
and
cmpsl
adc
mov
daa
xchg
in
add
sbb
neg
or
fsubs
cmpsb
jp
adc
in
xor
xchg
xor
mov
mov
je
gs
or
loope
mov
push
dec
icebp
jo
outsl
and
xchg
sub
and
fsubrl
and
aas
and
fisubrs
fmull
adc
int
adc
test
sub
xchg
faddl
push
xorb
or
add
push
push
xchg
mov
pop
and
jge
stc
scas
out
adc
adc
add
add
js
xchg
mov
addb
out
push
cltd
cmp
lods
mov
dec
cwtl
aad
adc
lea
insl
pop
sub
gs
add
std
pusha
xchg
xchg
out
aam
fildl
shrb
les
pushf
mov
out
jecxz
mov
ret
mov
sbb
add
aas
rolb
mov
inc
xlat
push
jne
jns
sbb
out
hlt
mov
mov
iret
fmuls
mov
sbb
cmp
fdivr
mov
mov
scas
sub
scas
sbb
mov
shll
ret
adc
push
push
jge
paddsw
push
fwait
pop
repz
enter
push
lds
xchg
divps
setbe
push
cmpsb
lock
aas
fcomps
aas
mov
cld
push
push
leave
jmp
xchg
outsb
inc
and
ds
sub
andl
jl
mov
mov
cmp
icebp
js
insl
jae
fstpt
add
scas
or
aad
mov
adc
fldl
out
insb
jns
inc
aas
xor
aam
push
shl
lcall
push
data16
pusha
int3
mov
push
leave
adc
fs
int
jne
and
cs
shl
out
leave
lret
push
jnp
mov
xorl
mov
pop
clc
jl
push
push
jge
arpl
fsubr
pop
dec
cmp
rol
lock
mov
rol
cmp
psubw
adc
xchg
sbb
xor
dec
test
push
jle
sti
mov
cli
sbb
jmp
stos
xor
push
out
das
xor
sbb
lret
lret
call
into
ljmp
or
dec
fistpl
aaa
adc
dec
mov
push
addr16
scas
push
jbe
lock
js
fsubs
adc
xchg
bound
rclb
gs
cmpb
mov
das
xchg
xchg
pop
cli
add
inc
andl
jmp
sub
dec
dec
inc
cltd
sub
sbb
sbb
popa
outsb
jecxz
mov
mov
shll
dec
icebp
mov
push
insb
out
xor
popf
add
hlt
fsubs
mov
mov
ljmp
sbb
rorl
cmpsb
jae
nop
aaa
mov
push
jp
jne
daa
into
je
mov
not
aaa
fs
add
mov
fldt
sarl
aas
stc
rcrb
mov
lea
or
pop
repz
decl
jle
rcll
stos
add
xor
dec
ljmp
and
mov
sahf
add
notl
mov
sub
mov
and
add
xor
dec
aad
ljmp
out
or
flds
rol
push
push
loopne
mov
insl
es
out
popa
cmp
in
outsb
fcomps
pop
fidivrl
mov
xor
jg
jbe
je
xor
cmc
in
int3
pop
lds
popf
xchg
mov
pop
xchg
ret
pop
jecxz
mov
and
dec
pop
lods
sub
mov
xchg
add
inc
xchg
mov
cmp
inc
movsl
xchg
or
inc
pop
pop
gs
popa
lds
jne
push
cmp
adc
sub
enter
sub
idiv
adc
cmc
lock
in
lods
or
orb
mov
pop
cmp
and
xor
addb
cs
fimuls
jne
push
mov
sub
mov
scas
or
loopne
test
mov
jg
call
aas
jbe
mov
shll
ret
mov
test
pop
scas
xorb
xchg
insl
inc
cltd
aam
fucom
add
dec
push
out
adc
push
xchg
and
pop
add
or
xlat
cmp
xor
or
cmpl
mov
rcrl
cld
repz
or
into
sub
insl
out
jae
insb
add
rcll
in
cmp
inc
movsb
mov
repnz
loop
xchg
testb
arpl
data16
push
mov
and
or
sbb
mov
push
add
adc
pop
jecxz
sbb
push
or
xchg
mov
testl
push
jge
or
pushf
sbbb
test
sbb
adc
ss
mov
push
sub
pop
aaa
int3
sub
jne
pop
or
in
inc
hlt
lock
adc
xlat
cwtl
jp
add
jge
daa
lods
hlt
sahf
cmp
push
gs
mov
outsl
negl
and
push
test
adc
or
mov
in
into
push
cld
out
dec
pop
insl
xchg
xorl
xchg
jb
xchg
mov
ja
int3
imul
mov
lret
pop
or
insb
je
push
enter
icebp
fdivp
fsubs
sbb
push
subl
ret
fbld
push
pop
shrl
push
sbbl
mov
repz
push
mov
jg
test
mov
int
ret
bound
push
das
addr16
lods
enter
cltd
push
sub
std
ret
xor
adc
cli
fcompl
and
push
pop
mov
mov
xor
sub
shl
and
jns
sub
loope
mov
push
lcall
add
enter
or
mov
jmp
xchg
out
cmp
fs
cli
sbb
fnstsw
push
fldenv
out
stos
addr16
call
inc
fsubrp
or
or
enter
or
call
int3
into
not
adc
xchg
cmp
fbld
fwait
dec
arpl
jmp
xor
les
push
stos
int3
sbb
in
mov
add
adc
or
mov
jne
pop
lahf
test
int3
mov
jmp
mov
pop
dec
jno
dec
adc
in
push
ss
aam
xor
add
add
aam
or
mov
mov
push
je
xchg
push
je
faddp
test
inc
push
imul
jecxz
adc
push
mov
ret
insl
ljmp
xchg
push
imul
jg
lods
loopne
out
int3
enter
xchg
xor
cmp
add
jb
faddp
mov
mov
and
cmp
scas
sbbl
adc
mov
push
adc
cs
dec
rcrb
mov
push
mov
pop
pop
jmp
sub
xor
fs
leave
sbb
push
test
xchg
mov
fwait
out
loope
mov
jp
and
jge
dec
sub
add
xchg
push
pusha
jnp
xor
sbb
cs
push
push
call
les
imul
xchg
int3
lods
mov
xor
mov
and
xor
decb
jmp
and
jnp
call
jmp
push
cmpsb
lea
pushf
repnz
jnp
inc
add
mov
or
pop
pop
stos
push
cmp
mov
lret
aad
mov
jbe
mov
into
xor
imul
flds
add
jg
mov
and
test
jb
fisubrl
jmp
pop
ffreep
stos
or
push
leave
inc
xor
jl
sbb
ret
jmp
xor
dec
enter
or
and
push
clc
flds
xchg
lret
mov
sub
icebp
popa
inc
movsb
jo
push
sbbl
mov
and
mov
or
xchg
sub
jmp
das
ret
jl
push
inc
cli
clc
pushf
dec
sbb
push
and
inc
test
repnz
lea
pop
sti
mov
aam
in
imul
pop
pop
rorb
loope
cmpsb
test
pop
stos
mov
ret
sti
push
push
mov
xchg
enter
out
xchg
pop
lods
fs
jp
push
mov
push
mov
or
mov
cmp
and
pop
ja
mov
xchg
fdivrl
call
inc
xlat
pop
ss
insl
and
les
imul
mov
push
inc
in
cmp
jo
scas
stc
stos
sbb
add
shll
stos
add
and
adc
sar
dec
lea
push
cmpsl
repnz
dec
insb
push
add
popa
sbb
ja
ja
xchg
cmpsl
mov
aas
xchg
mov
fists
inc
or
jl
fstpl
jb
dec
cmp
and
or
adc
or
xor
push
mov
add
call
fcmovbe
cmp
adc
aas
inc
add
pop
test
popf
xchg
mov
scas
mov
dec
jnp
stc
mov
and
and
lahf
scas
fstpt
xorb
xchg
outsb
and
ss
xchg
dec
jle
xchg
bound
push
aam
stc
fadds
ds
pop
jne
std
xchg
stos
sub
mov
or
cmpsl
movl
push
xor
pop
mov
pause
fstl
dec
adc
iret
cmp
jo
sub
mov
jne
shlb
scas
ret
mov
test
cmp
movsl
inc
faddl
mov
add
push
jg
sbb
xchg
clc
cli
jno
push
fdiv
fcoml
pop
sahf
sbb
test
pushf
sbb
mov
cmp
ror
scas
push
xchg
in
cmp
pop
divb
xchg
xor
rcrb
adcl
xor
rcll
lcall
fsubrs
jns
je
cmpsb
stos
fs
jmp
std
lock
cltd
icebp
push
cmp
push
movsl
sub
je
add
or
idivb
fs
sub
jle
inc
insb
inc
popf
inc
mov
das
fucom
add
adc
or
add
or
adc
dec
xchg
lods
loop
add
ljmp
in
mov
test
xchg
jne
pushl
jl
icebp
lret
sub
jp
pop
mov
add
sbb
add
in
cltd
jle
or
inc
jle
push
popa
mov
pop
inc
fwait
loope
mov
inc
pop
xor
stc
dec
or
ret
push
jmp
push
mov
sub
adc
ret
int3
test
out
inc
pop
pushf
orl
out
pop
cmc
sbb
dec
sub
push
ss
push
xor
xor
movsb
mov
cmp
cltd
push
cli
mov
add
inc
inc
mov
stos
sub
dec
jecxz
fimuls
ror
imul
ja
int
xchg
and
lds
pop
aas
test
inc
dec
scas
out
pushf
mov
push
mov
or
dec
popf
scas
sub
in
rcrb
sbb
outsl
sbb
pop
movsl
push
push
add
sti
mov
push
ret
push
xchg
shll
add
mov
enter
ss
mov
clc
adc
push
idivl
or
int
add
push
jge
and
clc
push
out
iret
shll
bound
inc
dec
xor
jmp
hlt
pop
insb
jg
jl
push
pop
adc
movb
pop
jbe
enter
inc
insb
fldenv
stc
addr16
and
scas
mov
out
sub
xor
lea
cmp
es
dec
mov
enter
mov
sub
ud2
sahf
mov
dec
fwait
or
test
cmp
jmp
dec
jl
cli
fs
lcall
in
das
push
adc
xchg
xor
xchg
dec
mov
rcrl
pop
xor
cmp
repz
adc
push
sbb
push
je
icebp
mov
xor
out
jl
or
cmp
jno
imul
insl
jp
push
mov
mov
js
js
sbb
das
add
ds
sbb
cmp
rcll
and
push
out
or
sub
jmp
sub
lcall
push
insl
cs
push
in
aaa
lods
cmpsl
mov
push
jno
cmc
xchg
mov
sub
mov
pop
movsb
xchg
nop
bound
xor
mov
leave
jne
xorl
in
jge
or
aad
das
into
std
ret
jns
pop
lret
lret
and
stos
shr
mov
dec
add
jnp
leave
repnz
and
and
shr
bound
sub
mov
xchg
xchg
sbb
les
sahf
je
or
fcoml
dec
xchg
mov
add
adcl
aad
data16
pop
or
test
jo
shll
and
xchg
inc
xor
lret
fdecstp
leave
insb
rol
out
mov
mov
and
mov
dec
pusha
pop
in
mov
sbb
inc
roll
xor
into
mov
testl
and
gs
lret
mov
mov
adc
mov
inc
aas
loop
ja
pop
mov
jge
addr16
mov
adc
xchg
dec
pop
sahf
cmp
xorl
aad
sqrtps
push
add
sbb
cmp
or
jne
jno
sub
fchs
fiaddl
insb
dec
mov
notb
sub
sbb
test
xor
adc
movsb
dec
mov
add
xchg
inc
jno
lea
pop
mov
hlt
fdivs
jnp
mov
sbb
inc
xor
fisttps
lea
mov
lcall
xchg
mov
jae
pushl
sub
aas
in
push
xor
mov
or
mov
fdiv
mov
fisttpl
sbb
bound
inc
push
test
xchg
rorl
mov
xor
out
ja
icebp
add
and
xlat
int3
mov
out
mov
fcomip
mov
jns
dec
fcmove
fsts
andb
push
leave
jmp
dec
cmp
push
xchg
das
sub
add
pusha
adc
lea
sti
mov
add
shrb
mov
mov
add
or
sub
xchg
movsl
lahf
xchg
push
jp
push
movsb
fwait
jnp
mov
shrl
push
push
jl
cmp
enter
in
loope
in
orl
jge
pop
and
in
inc
adc
push
test
mov
movb
in
pop
mov
push
test
sahf
nop
jae
lahf
add
and
xchg
cltd
bound
das
xor
adc
loopne
arpl
cmp
adc
push
movsl
cli
add
xchg
inc
sbb
mov
andb
and
inc
out
rorb
and
out
test
pop
or
xchg
dec
movsb
or
add
xor
scas
sbb
decb
shrl
scas
push
mov
fnsave
imul
test
jg
push
and
pushf
push
pop
mov
dec
insb
iret
idivl
repnz
xor
xor
in
jno
pop
or
jl
jns
rclb
sbb
add
fdivrl
shll
jns
shlb
mov
mov
xor
sub
addr16
jae
and
leave
xor
sbb
addr16
xor
vmovss
adc
in
jp
jb
jae
cmpsl
mov
repz
das
pop
sub
cmp
pop
xchg
int3
int
sub
and
jo
stos
jmp
fcoml
sbb
xchg
jae
in
sbb
and
iret
out
fwait
outsl
aad
xor
mov
lods
xchg
push
or
mov
xchg
push
repz
fcompl
lcall
in
ret
aam
popf
jmp
inc
xchg
mov
stc
loop
sub
dec
xchg
lods
sbb
mov
daa
test
les
out
ljmp
mov
iret
test
shll
or
repnz
stc
push
jnp
add
sub
dec
call
sahf
jmp
movsb
in
loop
aad
or
in
std
in
dec
fdivp
stc
push
ss
dec
sub
fdivrl
mov
dec
push
inc
into
adc
aad
sarb
mov
ss
or
sub
in
xchg
xchg
and
cmp
adc
or
pop
arpl
adc
lret
sub
sub
xchg
enter
jns
xchg
or
jecxz
mov
cmc
inc
in
and
push
sub
mov
imul
inc
and
mov
je
sbbl
lods
adc
pop
dec
lock
sub
lahf
loop
mov
sbbl
imul
addb
int3
pusha
negl
push
push
mov
loopne
add
aad
pop
lahf
inc
cmpsb
mov
aam
pop
aaa
div
push
jnp
in
mov
aaa
imul
jb
pop
xchg
dec
sarl
fistl
mov
cld
xchg
jns
and
sbb
mov
xchg
sarl
flds
xchg
xchg
mov
fnstenv
aam
xchg
pop
mov
cltd
adc
pop
push
mov
lods
adc
sbbl
test
stos
test
pop
mov
push
add
pop
mov
in
cmp
in
aam
push
test
xlat
sbb
xchg
idiv
mov
mov
pop
aaa
xor
dec
mov
mov
dec
pop
lahf
push
nop
inc
xchg
rcll
add
packsswb
movsb
cli
testb
mov
scas
jbe
sahf
rorl
add
repz
mov
repnz
mov
xor
rcll
ret
sub
flds
aam
push
aam
mov
lock
sub
loope
mov
aas
ds
or
test
dec
mov
xchg
pop
cmp
jp
xchg
repnz
push
pop
jp
cmp
dec
cmp
pop
dec
mull
test
xchg
dec
inc
fnstsw
iret
pop
cltd
mov
mov
pop
popa
cmp
int
divb
inc
test
xchg
les
inc
sbb
cwtl
js
ljmp
mov
das
out
cmp
lcall
notl
aad
pop
popf
inc
mov
pop
pop
adc
jl
jmp
test
loop
pushf
lods
fs
cmp
fnstenv
xor
icebp
cmp
inc
icebp
mov
pop
mov
dec
xchg
enter
add
js
cli
popf
repnz
pop
dec
ds
adc
test
popl
jns
je
orb
push
sub
dec
xor
ds
cmp
jnp
lahf
sub
lods
push
sub
push
cmp
addl
pop
test
jmp
push
jp
adc
xchg
jmp
xor
test
loop
xchg
les
std
cltd
out
fs
pop
loope
stos
sub
outsb
icebp
loope
cmp
cltd
dec
imul
cmp
aam
mov
cmp
pusha
imull
mov
fisubrl
aad
std
fdivs
lahf
jecxz
xor
adc
daa
iret
es
xor
outsl
cmp
inc
jno
mov
repnz
call
and
xchg
ret
jno
aam
test
pop
nop
dec
das
ds
lahf
out
ljmp
in
js
and
in
test
stc
mov
mov
mov
inc
sbb
mov
pop
or
jle
adc
mov
mov
jae
or
or
in
popa
dec
sbb
xchg
mov
push
iret
xor
test
fsubl
and
adc
push
push
fisubs
out
sub
cmp
and
daa
pop
pop
pop
pop
decl
mov
fdivrl
xchg
hlt
xchg
dec
add
push
adc
es
ds
fs
inc
mov
mov
das
pop
fst
jmp
test
push
rcll
mov
je
xchg
jne
xor
and
sbbl
cmc
nop
rep
out
mov
dec
cs
add
rorl
pop
push
push
imul
mov
cmp
bound
outsb
stos
pop
test
loope
lcall
cmpl
or
out
repnz
mov
or
inc
imul
and
lods
or
add
mov
fisttps
push
jge,pt
pop
xchg
jmp
insl
cli
adcb
push
lcall
dec
mov
clc
mov
js
xchg
push
out
fadd
xor
push
and
pusha
cld
in
ss
ja
test
inc
mov
mov
repnz
loope
fimull
jbe
mov
sbb
mov
outsb
cmp
test
xchg
nop
cmpl
xor
xchg
out
inc
int3
std
sbb
mov
js
jno
push
xchg
rorl
loope
sbb
enter
adc
sub
jge
xchg
sarl
hlt
loopne
loope
ljmp
push
test
jbe
sahf
fwait
push
jmp
inc
mov
aaa
mov
out
sbb
mov
and
mov
jle
jmpw
sbbl
mov
fwait
aaa
mov
jae
scas
cs
or
popa
xor
sub
and
mov
bound
pop
or
addr16
shl
pop
sbbb
and
sti
ror
push
imul
sbb
add
inc
xor
mov
push
in
cwtl
int
mov
in
adc
jle
out
lods
sub
ljmp
mov
inc
inc
mov
sub
pusha
push
or
add
mull
jg
ljmp
pop
cwtl
fwait
inc
and
stc
ss
inc
pop
iret
push
nop
sarb
int3
cltd
or
mov
pop
das
cmp
push
fstpl
ja
sub
inc
js
pop
out
repz
lds
mov
fisubrl
xor
test
dec
out
jb
js
mov
pop
xor
and
arpl
mov
sahf
test
jmp
cmp
lret
cmc
scas
daa
cmp
mov
inc
jmp
xchg
push
cmp
inc
repnz
aaa
xchg
push
add
mov
dec
in
jle
dec
mov
mov
sub
mov
sar
sar
andb
mov
xchg
aas
stc
jmp
sbb
test
mov
fs
testl
mov
mov
xchg
insl
jg
mov
or
scas
mov
inc
mov
push
cmp
popa
sub
aas
outsb
mov
shlb
lods
stc
push
mov
mov
adc
or
stos
and
lcall
call
icebp
sbb
daa
cmpsb
push
and
dec
adc
mov
pop
addr16
popf
or
idivb
in
dec
sbb
push
adc
xor
pop
cmp
js
out
inc
fnstcw
adc
xlat
test
inc
out
and
mov
adc
xchg
fbstp
negl
das
or
jmp
test
test
data16
xchg
dec
mov
cld
mov
out
mov
out
push
sbb
add
push
push
pop
addb
sbbb
mov
xchg
lcall
addr16
push
xchg
stc
push
cmc
and
sbb
mov
mov
xchg
mov
sarl
in
mov
lock
or
sub
cmc
or
les
mov
cltd
fcomip
mov
loopne
adc
shrb
mov
test
fsts
inc
fmulp
test
push
pop
push
test
aad
test
push
addr16
sbb
testb
xor
cmp
ss
rcll
lock
jmp
xchg
popa
xlat
inc
push
dec
mov
stos
cmp
aas
jne
call
addb
ja
pop
mov
mov
sub
sub
push
push
xor
and
xchg
jo
xchg
mov
sub
mov
and
test
cmc
add
add
stos
call
pop
dec
add
sbb
mov
mov
pop
call
imul
adc
xor
jae
push
lods
xor
xchg
mov
mov
and
cmpsl
lea
bnd
repnz
sub
arpl
adc
movsl
add
adc
push
and
cmp
push
push
cmpb
fwait
arpl
jmp
jns
sub
add
lods
popf
adc
mov
cmp
cltd
mov
mov
cmp
ror
mov
and
push
xor
sbb
pop
lret
adc
aad
pop
ficoms
fdivrl
aas
mov
outsl
int3
ss
mov
and
xchg
lods
xor
jp
jmp
enter
pusha
int
inc
sbb
rcrb
adc
cltd
int
ret
fistps
jl
shll
cmp
xor
push
sub
repnz
sub
rclb
cmp
ljmp
imull
insl
ljmp
sbb
push
fstpt
jecxz
adc
punpckhbw
or
outsl
push
lcall
repnz
jmp
das
cld
std
or
fidivl
les
push
xchg
pop
add
repz
ret
push
cld
fcoms
jbe
adc
mov
loop
ljmp
xchg
xchg
aas
outsl
iret
int3
adc
inc
out
push
lret
fcmovnb
or
jns
inc
add
xor
xor
sub
mov
inc
enter
leave
push
or
xchg
iret
int3
jle,pn
mov
je
sbb
jmp
cmp
outsl
or
mov
cmp
fisttps
leave
sub
push
xchg
xor
les
inc
lods
mov
or
fwait
cmp
and
call
not
shl
xor
das
movzbl
cmp
mov
orl
push
add
jae
cwtl
jecxz
lcall
enter
sub
aad
xchg
add
push
repnz
xlat
ret
xchg
idiv
sahf
test
pop
xchg
mov
jge
add
imul
jp
jnp
xor
mov
int3
stos
and
or
das
pop
dec
pop
lret
pushf
jnp
adc
add
push
out
arpl
xchg
dec
loope
xor
sti
testb
js
cwtl
outsl
inc
fldl
std
pop
ds
inc
lea
push
subb
push
mov
push
mov
inc
dec
mov
lcall
inc
rclb
dec
ret
outsl
adc
or
xchg
sub
add
mov
inc
mov
pop
adc
test
xchg
xchg
in
int3
lock
pop
xchg
add
divb
nop
ja
ljmp
es
aam
cmp
mov
fsubrs
hlt
sahf
outsb
push
jecxz
cld
dec
mov
test
notl
lods
cmp
push
cs
int
fwait
rclb
or
push
leave
fdivl
fwait
jnp
dec
imul
mov
dec
cmpb
or
clc
adc
ffreep
dec
inc
dec
xchg
test
in
into
cld
pop
mov
mov
nop
pop
mov
in
sarl
ficoml
into
mov
jmp
jecxz
int3
aad
data16
fstps
mov
mov
cmpsb
imul
and
xchg
jge
sarb
adc
cmp
mov
cmc
dec
dec
mov
mov
cmp
hlt
aaa
fnstcw
movsb
cmp
shrb
rorb
xlat
js
dec
add
outsb
xor
xchg
lret
push
jae
fldl
push
test
bound
in
lret
lret
inc
in
add
into
cwtl
repz
mov
push
jmp
cmp
pop
ret
mov
cmp
ficomps
fs
xor
aam
scas
aaa
mov
add
add
and
test
and
mov
fistps
cmp
jmp
fs
push
xchg
mov
sbbb
shlb
addb
out
dec
xchg
ret
inc
les
xor
inc
orb
xor
hlt
xor
outsb
sbb
outsb
test
rclb
cmp
pop
adc
loop
jne
cmp
scas
movsb
imul
shrb
mov
pushf
mov
outsl
stos
iret
pop
mov
decb
cmp
cmp
add
stos
jbe
add
outsl
add
gs
popa
push
mov
add
insl
bound
fs
aad
push
dec
inc
adc
outsb
loop
rcr
fwait
inc
push
dec
pushf
mov
add
and
jo
cmpsl
push
cmpsb
rcrl
and
adc
fstl
stos
inc
inc
enter
mov
iret
jecxz
mov
sbb
add
scas
jnp
mov
in
xchg
adc
stc
iret
dec
sbb
rolb
dec
clc
and
test
test
leave
mov
pop
jle
out
adc
loope
or
sbb
fildll
insb
jo
out
je
addb
insb
movsl
ror
cmpb
clc
add
clc
les
stos
sti
sbb
xor
int
test
mov
test
pusha
scas
mov
dec
pop
xchg
jmp
das
loop
adc
call
xchg
mov
fsubrl
xchg
push
scas
nop
int3
add
aad
jle
mov
mov
sbb
nop
and
ja
push
jl
cmp
xchg
sbb
daa
test
pop
inc
or
push
lods
push
aad
test
loop
inc
aam
push
dec
adc
dec
push
arpl
enter
and
mov
sbb
stc
rcrl
dec
xchg
mov
lods
and
or
cmpl
cltd
mov
mov
or
mov
xor
mov
outsb
inc
jns
mov
stc
pop
adcl
xchg
mov
xchg
aam
addb
cmp
outsb
push
out
mov
idivl
mov
mov
lret
pop
adc
outsb
cmpb
lods
sbb
add
loopne
aam
sbb
lea
fmull
xor
popa
and
mov
push
fnstcw
test
sub
mov
or
sarb
or
xor
imul
push
pop
cmp
or
out
insb
pop
imul
daa
mov
lret
dec
push
cwtl
scas
push
xor
or
mov
sti
ljmp
das
xorb
mov
jne
xchg
push
pop
test
aas
add
jecxz
sbb
insl
out
mov
cmpsb
mov
mov
adc
mov
scas
add
pushf
sub
mov
jne
push
cltd
adc
inc
xor
sti
mov
dec
mov
repz
mov
xchg
cld
jns
icebp
mov
pop
jp
and
test
pop
jo
push
daa
out
mov
dec
lret
aaa
push
and
jge
jnp
je
jmp
sub
sub
mov
add
pop
fldl2e
mov
ss
test
sbb
rol
xor
insb
dec
in
cmp
xchg
xchg
cltd
fcoms
rcr
pop
xchg
mov
lahf
outsb
aaa
out
pop
sti
int3
sub
xor
pusha
fdivr
popf
mov
adc
sbb
data16
lea
outsb
insl
xchg
adc
pop
movsb
mov
jbe
jl
enter
or
mov
arpl
cmpsl
dec
pop
dec
outsb
sahf
mov
mov
out
sahf
pop
ljmp
cmp
orl
cmp
and
mov
jne
mov
xchg
out
int3
sbbb
push
push
test
pop
clc
icebp
lret
sbb
lcall
pop
or
sbb
jae
ja
ffree
stos
or
mov
push
test
mov
mov
rcll
fsubrs
add
roll
or
pushf
icebp
insl
daa
xlat
jo
jae
cs
jns
inc
subb
std
mov
sub
insl
add
popf
ret
out
test
repz
shl
jmp
push
sbb
jae
cld
ret
scas
or
decb
xchg
shlb
xchg
lret
arpl
xchg
or
sub
scas
and
sbbl
push
push
dec
ss
add
imull
adc
sub
mov
rolb
and
jp
sahf
adc
push
mov
jbe
adc
xchg
or
sub
fidivrs
das
aam
push
cmp
cmp
cltd
mov
adc
imul
dec
std
in
sbb
leave
je
jmp
es
mov
jge
test
shll
cmp
xchg
and
xor
pop
rolb
shr
cwtl
jo,pt
call
pushf
push
fs
pop
dec
jg
push
in
jmp
mov
dec
jge
ja
jns
sarl
fidivs
subb
xor
xor
outsl
mov
je
roll
pushf
push
xor
fstps
fisubs
std
sbb
lock
push
lds
push
and
cli
subl
stos
xor
xor
ja
or
sbb
and
sbb
int
xchg
jae
xchg
enter
lahf
outsb
in
mov
ss
inc
mov
push
mov
sub
in
out
je
scas
add
cwtl
mov
popa
jecxz
xchg
fidivrs
and
ficoml
jecxz
mov
mov
nop
leave
pop
mov
shl
push
xchg
js
imul
mov
addr16
jae
ja
xlat
jns
addr16
mov
loopne
loopne
pop
sbb
popa
or
jmp
stos
pusha
insb
dec
fscale
push
cwtl
rol
sbbl
addr16
mov
aaa
fnstcw
xchg
mov
pushf
mov
mov
stos
mov
xchg
orb
inc
ret
and
ljmp
lods
xchg
sbb
stos
xchg
push
sbb
scas
mov
push
and
dec
arpl
cmp
gs
pop
sbb
adc
cmp
lods
movsl
daa
jae
loopne
pusha
adc
mov
dec
js
push
sub
mov
mov
frndint
mov
daa
es
es
push
mov
xor
jae
in
sub
filds
cwtl
pusha
xchg
fsubrl
adc
xchg
bound
xchg
lds
xor
push
or
aad
push
mov
sbb
cmc
lret
shlb
mov
arpl
push
imul
shlb
add
pop
cmpb
repz
ret
ret
pop
lods
arpl
pushf
cli
cmpsl
xchg
or
xchg
mov
sub
push
dec
aam
and
movl
lcall
push
pushf
daa
and
push
sbb
jae
sahf
shll
cld
out
mov
mov
jmp
xchg
inc
mov
test
mov
push
ror
imul
mov
xchg
jne
hlt
and
fildll
daa
jno
test
xor
ja
cmp
call
add
jae
jmp
out
popf
dec
fsubrs
addr16
bound
jb
ljmpw
imul
enter
xor
out
cwtl
xchg
and
push
push
sub
nop
push
xchg
das
cmp
neg
pop
bound
jno
add
cli
scas
add
cmp
hlt
sbb
xor
or
mov
clc
jl
fs
cmc
jns
push
popa
jbe
pop
push
test
loop
inc
or
cmp
jae
je
sub
or
xor
in
jb
cmpsl
leave
in
subb
inc
sub
add
mov
xchg
orl
loop
loope
jle
arpl
std
mov
mov
cmpsb
jg
cmpsb
add
mov
rcr
pop
js
fwait
pop
pop
fwait
dec
and
push
lret
lods
cmp
dec
mov
out
shrb
insb
adc
cmpsl
sub
mov
shll
pop
mov
jle
xchg
xchg
popf
mov
lcall
stos
es
adcl
or
xorb
ret
repnz
stc
and
pop
ficompl
pusha
stos
xchg
jge
inc
mov
ficompl
xor
mov
cmp
lods
mov
cmp
faddp
and
test
add
scas
into
sub
lods
fs
jmp
mov
or
ret
jecxz
scas
sbb
imul
pop
xor
jbe
xor
xchg
sbb
dec
mov
adc
xor
cmp
push
rol
in
jmp
inc
imul
mov
push
mov
dec
icebp
std
and
mov
nop
lret
mov
fst
xchg
fstl
or
mov
jp
sub
sbb
frstor
push
cltd
out
mov
pop
jmp
pop
mov
pop
das
test
lcall
push
adc
iret
shl
pop
pop
aas
sar
insl
lods
lock
js
jle
int
mov
mov
cs
aam
lock
daa
mov
xchg
jo
mov
pop
push
xchg
cmp
mov
dec
rcrl
ljmp
repz
rclb
in
jg
ss
popa
ja
pop
js
push
sub
movsb
and
and
rcrb
pop
sub
and
push
in
and
movsb
fstps
gs
js
sbb
inc
enter
jle
nop
pusha
cld
push
aam
nop
xchg
gs
rolb
nop
aaa
stos
hlt
mov
movsb
or
cmp
pop
imul
sub
mov
sbb
or
push
dec
push
clc
dec
bound
jge
out
jle
decl
cmp
push
daa
fwait
popa
popf
push
mov
mov
ja
push
mov
cmp
xchg
pop
and
pop
cmpsb
xchg
ds
or
inc
sahf
out
cmp
mov
loop
int3
movsb
cmp
push
pop
and
int3
fucomi
jp
xchg
lods
ss
mov
mov
adc
fmuls
pop
roll
xchg
pop
sub
and
add
je
xor
mov
sbb
dec
insl
call
into
xchg
in
inc
sub
inc
cli
add
jbe
mov
mov
jbe
es
lret
pop
pop
add
push
push
inc
sub
shrb
mov
jp
in
or
mul
and
les
out
into
adc
imul
mov
gs
or
rcll
mov
ds
loopne
ficomps
loopne
das
jne
dec
popa
and
in
pop
xchg
andb
and
dec
sti
movl
popa
sahf
add
call
inc
and
cmovae
mov
imul
jb
mov
inc
nop
mov
or
es
add
pop
test
mov
sbb
sub
insb
outsb
lock
push
outsb
rcrl
push
and
add
jmp
fwait
sbb
add
inc
mov
push
dec
mov
add
jne
lret
test
mov
cmpsb
sbb
xchg
fstpl
xor
pop
outsl
subps
dec
xor
jne
and
adc
rorb
enter
fsts
jb
iret
dec
jbe
push
test
dec
mov
lret
add
pop
push
outsb
stc
ds
out
jb
lret
cmc
mov
enter
mov
in
fwait
mov
fimull
sahf
mov
add
leave
insb
aaa
es
jg
jmp
cltd
inc
mov
push
xchg
sub
dec
jge
mov
ss
cmp
in
jb
std
lcall
cmpsl
sahf
pushf
xor
push
jge
inc
cmpsl
in
lea
mov
xchg
mov
cmp
mov
sub
movb
xor
xchg
inc
cmc
cmp
and
pop
sbb
nop
ret
adc
pop
sub
fwait
loope
aam
or
subb
mov
pop
adc
sti
jp
push
out
ja
push
pop
dec
inc
sub
inc
pop
mov
xor
stc
jl
and
push
int3
and
jae
pop
sub
inc
xor
in
fstl
sub
mov
in
push
push
sbb
gs
sbb
xchg
inc
insb
shll
pop
lcall
pushf
stc
mov
loope
ljmp
in
leave
fs
adcb
cmpl
bnd
lret
xor
push
dec
insb
cmp
mov
out
repz
push
or
mov
jp
imul
lods
fsubl
stc
sbb
aam
sahf
adc
imul
xchg
push
stos
xchg
lret
mov
loopne
sbb
test
dec
mov
mov
clc
cmp
aaa
shr
or
push
and
into
int
push
insb
inc
scas
pop
cltd
pop
or
mov
lahf
or
dec
pop
push
dec
test
mov
or
sbb
nop
movsl
xchg
push
add
sbb
sbb
cmc
xor
jnp
repnz
adc
movsb
sub
cwtl
fldt
sbb
mov
push
outsb
movsb
fwait
cltd
imul
sub
fprem1
xchg
sub
stc
xor
sub
xchg
adc
icebp
add
int3
sbb
xor
sub
arpl
sub
and
cmpsl
xor
inc
mov
in
and
popa
dec
adc
pop
adc
das
cmpl
and
or
add
dec
imul
insl
mov
dec
imul
xchg
jae
push
setae
sbb
stc
or
and
mov
sub
xor
into
push
inc
ret
mov
jecxz
ljmp
out
xlat
pushf
jmp
sbb
adc
js
outsb
fs
imul
xor
out
ljmp
outsl
lods
loop
push
mov
inc
fcmovb
fwait
sub
sub
icebp
shrb
push
or
xrelease
sbb
xor
dec
mov
addl
jae
or
pop
enter
jge
lret
in
lds
nop
lock
mov
or
into
push
mov
xchg
pop
add
push
movsl
pop
je
mov
loopne
roll
add
cmpsl
mov
sti
inc
pop
adc
mov
inc
rorb
dec
sub
push
cs
cs
mov
fs
mov
inc
inc
ss
ljmp
dec
jp
mov
jle
pop
shrb
fsub
push
xor
cld
cmp
push
sub
xchg
dec
push
pop
insb
js
and
shlb
push
neg
data16
arpl
mov
pop
jne
sub
lods
lahf
dec
lds
or
xor
dec
andl
sahf
loope
mov
jg
cmpsb
push
cmp
pop
mov
rorl
sbb
adc
in
lret
cmp
dec
push
add
jmp
call
dec
daa
hlt
mov
dec
mov
pop
xor
lret
push
das
xchg
adc
popa
push
std
fdivrs
mov
cmc
sub
add
outsb
add
cmp
stos
shl
repz
push
or
jle
jo
lahf
imul
mov
mov
stc
loope
push
push
xchg
xchg
icebp
inc
mov
mov
sahf
xorl
pop
xor
mov
sbb
dec
notl
mov
pop
xchg
jne
lds
sbb
pop
or
leave
ljmp
adc
jecxz
sbb
dec
fcompl
fistps
pusha
out
sti
mov
lods
in
xchg
enter
push
xor
imul
int3
sub
ja
sbb
inc
pop
je
xchg
or
or
fstl
es
add
es
or
sub
loop
pop
lods
pop
mov
scas
jb
ja
mov
cmp
mov
and
adc
movsb
loopne
lcall
push
mov
dec
addb
mov
insb
lret
pop
popa
dec
out
or
dec
hlt
xor
adc
jmp
aas
pusha
cmp
and
adc
testb
mov
fs
cmp
mov
mov
push
sarb
sbbb
je
xor
test
popf
dec
cmp
mov
dec
mov
cmpsb
jmp
mov
jp,pn
xchg
pop
int
pop
test
mov
cmpsl
lcall
adc
inc
maskmovq
pusha
in
ret
jb
xchg
fidivrs
mov
mov
pop
fnstenv
in
sub
pop
or
mov
nop
jne
pop
repnz
fldl
push
add
test
mov
mov
lods
sbb
add
dec
sub
pop
daa
dec
jl
lea
inc
jecxz
outsb
ret
test
add
xchg
jecxz
pop
loope
pushf
stos
mov
xor
mov
jnp
sarl
lret
jp
xor
scas
lret
dec
sub
lret
aam
inc
out
test
add
sub
adc
std
pop
repz
mov
lods
lods
ret
and
add
mov
ror
sub
shll
or
cmpsb
xchg
xchg
xchg
lds
pop
test
es
xor
imul
std
scas
loope
mov
cli
lahf
test
jg
lock
mov
mov
test
ja
fdivrs
inc
jo
notb
lods
mov
jne
and
pop
mov
push
dec
cmp
or
and
mov
or
jle
jnp
fcoml
cs
mov
cmpsb
int
enter
pop
nop
add
decb
std
pop
xchg
inc
pop
outsb
or
fsub
sbb
or
les
mov
pop
shll
stc
cwtl
xchg
pop
mov
push
sbb
dec
sbb
stos
fwait
jbe
call
rorb
imul
xor
pop
ljmp
sub
lret
xor
lret
cli
mov
sub
mov
cmpsl
movsb
pop
lret
push
jbe
iret
aaa
jge
mov
out
sahf
jb
pop
fsubr
adc
pop
xchg
pop
push
xlat
or
out
xchg
push
add
pop
add
sbb
aad
mov
inc
push
xchg
pop
test
mov
lcall
arpl
push
mov
sti
lcall
imul
call
inc
pop
sbb
imulb
out
push
decb
jns
mov
and
addr16
jns
daa
mov
loop
push
js
jmp
scas
stos
cmp
mov
pop
inc
jg
das
inc
cmc
cld
fldenv
icebp
adc
loopne
xchg
aad
xor
mov
mov
push
repnz
fsubr
mov
sbb
js
mov
or
and
xchg
push
adc
mov
add
xchg
fists
js
add
stos
add
frstor
mov
lods
sbb
push
add
fadd
sub
outsb
mov
stos
cmpsl
mov
adc
mov
test
and
pop
xor
sbb
cmp
dec
adc
push
jnp
out
mov
pop
lret
nop
insb
mov
sbb
inc
or
add
inc
jecxz
sti
mov
mov
incb
mov
xchg
sub
repz
sub
jno
mov
addr16
addr16
jle
cmp
push
dec
sbb
into
je
pushf
shl
rol
js
adc
sahf
pop
xor
stos
fnstcw
stc
jo
fcmovnbe
daa
fwait
mov
jp
mov
jbe
movhps
push
dec
jecxz
fs
pushf
lret
cmp
lock
lock
pusha
dec
addl
out
push
sbb
dec
cmp
cmp
daa
or
add
addr16
popf
insb
inc
ficompl
and
test
aad
push
and
ja
or
jle
and
push
xor
cwtl
sbb
cmp
inc
test
shrl
dec
mov
xor
lods
sbb
call
xor
push
testl
jg
adc
push
adc
inc
inc
jb
xchg
xor
leave
imul
pop
gs
ret
fstps
dec
cmc
negb
pop
pop
dec
ljmp
loop
incb
xchg
out
sbb
or
xchg
or
popa
lret
sbb
mov
and
dec
dec
xchg
jl
lcall
stos
out
and
xchg
jge
nop
sub
or
fcmovbe
dec
xchg
or
adc
mov
rorl
popa
loopne
xlat
add
enter
inc
sbb
fs
in
sub
lahf
mov
or
jb
mov
stos
stc
ror
push
icebp
loope
paddsw
lcall
xlat
pusha
xchg
mov
cli
gs
mulb
mov
jle
adc
dec
insl
mov
sbb
fisubl
pop
mov
je
fiaddl
xor
adc
mov
sbb
dec
adc
mov
gs
jb
mov
in
lahf
vmread
add
or
jb
scas
push
pop
adc
scas
in
daa
out
sub
jmp
jle
sub
incb
or
mov
mov
lcall
inc
push
pusha
into
inc
adc
sahf
cmp
inc
pushf
cmpsb
xchg
js
or
aam
jne
cltd
add
sbbl
lret
adc
adc
sub
fnstsw
lcall
add
mov
and
pop
imul
cmc
push
iret
push
or
inc
jns
mov
jmp
jle
sti
inc
pop
dec
andb
pushf
adc
pop
mov
scas
addb
lret
mov
int
xor
jno
ss
pop
or
stos
fwait
cwtl
push
ljmp
jmp
sbb
divl
inc
mov
push
std
hlt
push
sti
pop
or
cwtl
jnp
dec
mov
cmp
lret
stos
or
cmp
aaa
add
mov
xadd
inc
pop
out
shll
shl
cmp
lret
ror
xor
scas
mov
inc
sbb
pop
lods
pusha
sti
lcall
ljmp
xor
aaa
mov
mov
das
sbb
pop
mov
test
icebp
sub
sub
aam
call
push
sub
cltd
rclb
xor
sbb
push
loop
out
rorb
popa
lods
sub
popa
outsl
inc
ds
sub
mov
and
or
add
sti
jnp
mov
jmp
xchg
movsl
in
fcoms
add
out
xlat
mov
sbb
jae
or
xchg
sbb
jne
outsb
clc
and
ss
enter
mov
bound
clc
push
xor
xor
cld
adc
pop
nop
mov
int3
push
jo
hlt
stc
cmp
cmc
bound
incl
pop
insb
dec
es
stc
fisubrl
fwait
mov
das
bound
arpl
sahf
out
xchg
sub
push
sbb
pop
sub
inc
shr
in
cmp
xor
fs
mov
les
out
mov
cltd
push
jb
jne
subl
jge
loope
outsb
or
jb
sbb
cmpsb
rolb
nop
movsb
cmp
xchg
mov
xchg
mov
gs
push
mov
mov
imul
dec
data16
ret
xor
mov
das
push
bnd
push
test
and
pop
mov
fiaddl
xor
adc
cwtl
jl
cmp
aas
dec
sub
test
and
jp
loope
push
lret
mov
mov
jb
pop
pop
popa
mov
xchg
pop
sub
fisubs
dec
inc
pop
movsb
call
paddusw
and
adc
dec
shrb
mov
mov
push
add
aaa
in
mov
push
scas
jecxz
in
sbb
adc
cwtl
add
or
lods
and
or
test
les
xlat
and
cmp
push
repz
mov
cmpsl
cmp
dec
inc
aas
ja
into
or
outsb
dec
pop
add
cltd
add
ret
pop
cmp
cwtl
iret
sti
sbb
cwtl
mov
mov
pop
push
adc
mov
bound
xchg
jb
mov
in
insl
adc
add
lods
mov
adc
fistl
pop
movsl
cmp
in
xchg
dec
sbb
imul
daa
or
mull
xchg
cmpsb
pop
addr16
and
out
ljmp
repnz
adc
imul
mov
into
insb
xor
cmpsl
fmul
cmpsl
jb
xor
cmp
or
scas
xor
mov
inc
add
sbb
repnz
shl
xchg
xchg
inc
xchg
fbld
jecxz
out
in
sub
and
mov
mov
bound
cmc
ss
inc
pop
addl
add
sbb
xor
mov
xor
sbb
leave
and
cwtl
adc
jo
stos
or
mov
shll
sbb
push
sub
inc
repz
ss
insb
dec
push
stos
outsl
aad
stc
inc
xchg
xor
lret
inc
pop
out
xchg
add
mov
ret
fsubl
das
rorl
je
and
mov
and
sbb
pop
lods
repnz
out
int
sbb
jecxz
xchg
mov
cs
push
bound
out
hlt
mov
dec
jb
mov
push
sub
push
jge
dec
cwtl
push
dec
jp
lds
cmp
and
int
pop
mov
push
in
subb
hlt
lea
pop
cmp
fdivs
das
in
xchg
out
in
mov
adc
dec
jno
xchg
ss
or
cmp
cltd
popa
add
aas
sbb
mov
arpl
xlat
out
xchg
loopne
ret
repnz
sbb
jb
jmp
sbb
hlt
push
arpl
pop
push
sub
add
adc
popa
out
mov
test
scas
scas
out
test
gs
cmc
sub
sub
xchg
pop
aaa
imulb
sbb
lcall
xor
mov
cmc
hlt
push
dec
nop
mov
xchg
into
mov
addr16
insb
push
ficoml
push
jmp
fnstcw
lds
leave
pushf
stc
fldcw
into
add
insl
jmp
pop
imul
lds
xchg
push
inc
xchg
xor
push
fdivs
movsl
cmp
fcompl
add
cwtl
scas
dec
int3
cmp
aam
or
aaa
mov
mov
stos
ljmp
fisttps
dec
sbb
js
sahf
shrb
inc
ljmp
pop
repnz
imul
repz
jb
aas
dec
or
sub
sbbl
cmpb
mov
ror
ret
cli
pop
xor
push
sahf
sub
into
cmp
jp
gs
sbb
mov
fnstsw
cmp
jecxz
roll
xchg
or
xor
push
negl
into
aaa
mov
or
inc
sahf
inc
sub
testl
jl
xor
fs
daa
add
cmp
jno
dec
xchg
mov
repz
jns
inc
lods
loope
rcr
push
xchg
jp
test
cs
xor
into
jne
rcrb
ficomps
jg
out
jbe
mov
inc
cmpb
cs
testb
outsl
outsl
push
mov
xor
jo
lock
lds
inc
and
sahf
and
mov
fisttps
es
call
mov
pop
push
out
and
mov
pop
ss
and
stos
adc
enter
push
rcl
sub
ret
sbb
fwait
and
xchg
sbb
mov
in
xorb
add
sbb
cmp
sbb
mov
mov
xchg
dec
cmp
xchg
testb
scas
outsl
pop
xor
push
mov
scas
imul
push
jo
dec
push
ss
sbb
fidivs
int
xchg
dec
insb
mov
jle
ljmp
icebp
xchg
repz
inc
fucomip
jge
into
jl
or
roll
add
repz
mov
cmp
mov
push
cmp
xchg
icebp
xchg
sbb
sbb
pop
ficoms
icebp
xchg
cmp
inc
and
xor
jbe
sbb
in
jl
pop
jnp
push
aas
outsl
sub
call
fs
adc
pop
inc
jl
aaa
pusha
call
cmc
sub
sbb
jle
inc
or
push
in
shrl
dec
adc
mov
mov
cmp
daa
shl
lret
pushf
xchg
pop
jae
out
push
loop
xchg
mov
xor
add
sbb
mov
hlt
jae
outsl
sub
mov
jg
inc
bound
icebp
mov
lods
iret
push
adc
pushf
insl
sbb
inc
dec
mov
ret
sub
mov
or
test
mov
jbe
pop
pop
lock
das
iret
dec
jae
mov
cltd
sbb
xchg
cwtl
orb
lods
or
lods
mov
jo
push
mov
ja
jns
loop
jns
fbstp
inc
or
push
insl
jno
xor
add
jle
int3
into
ds
mov
pop
xchg
inc
lahf
xor
mov
mov
or
ret
inc
cmpsb
jg
xchg
adc
clc
decb
jbe
mov
jle
pusha
pop
in
test
cmp
movl
out
mov
xchg
ds
out
je
pushf
rcll
lods
pusha
pop
xchg
jb
fbstp
in
sbb
lock
jbe
ret
push
pop
shrb
and
inc
jae
ret
movsb
add
test
in
ror
das
mov
sbb
or
clc
and
jl
js
out
push
lods
or
hlt
faddl
sti
mov
lret
jl
fdivrs
sarb
mov
das
cmpsb
lods
lret
out
rolb
cmp
in
leave
repz
dec
jns
clc
insb
mov
mov
sbb
push
les
cmp
outsl
mov
lret
jle
xchg
sub
inc
sbb
std
mov
adc
cmp
sub
inc
mov
mov
and
sub
or
inc
rcl
notl
fstl
bnd
scas
add
mov
xchg
fsubr
jo
scas
out
cmp
sbb
dec
inc
mov
out
mov
mov
cmp
xchg
dec
cmp
in
dec
or
js
cmpsl
or
xor
mov
pusha
arpl
adc
jle
loope
hlt
cmp
insl
xchg
jns
push
adc
and
enter
push
push
mov
mov
and
adc
cmpsb
imul
adc
lock
imul
mov
push
test
mov
push
call
mov
jmp
es
add
cwtl
data16
add
mov
push
dec
xor
push
rclb
mov
inc
ljmp
or
fsubr
rol
add
lock
xlat
cmp
mov
test
mov
in
or
pop
sub
mov
std
lock
out
push
iret
jne
mov
or
rolb
inc
inc
jb
icebp
scas
js
xchg
or
and
gs
mov
mov
mov
add
inc
jns
into
and
inc
popl
gs
or
test
mov
scas
adc
aaa
mov
inc
mov
dec
dec
jp
fists
xchg
dec
or
int
lods
in
bound
les
add
sub
mov
stc
push
iret
and
lock
in
pusha
lock
inc
enter
popa
out
xchg
ret
out
xchg
push
jns
jmp
stos
xchg
or
out
enter
dec
inc
cmpsl
inc
shrl
sahf
or
cld
or
cmc
and
jp
sbb
pop
add
mov
jg
inc
repnz
je
xchg
outsl
adcb
inc
jmp
or
aad
lret
mov
cli
push
xorb
push
xor
dec
jnp
addr16
dec
aaa
out
mov
xchg
mov
mov
testl
inc
int3
and
inc
imul
in
test
jge
imul
orb
mov
sub
mov
fcomi
lods
push
lahf
jecxz
sub
jecxz
cltd
xor
movsb
xor
mov
cmp
mov
inc
dec
movsb
insl
shrl
add
lcall
push
sub
add
add
push
jl
rol
stos
inc
in
lcall
mov
adcl
cmp
dec
jae
and
pusha
lock
cmpsb
mov
fs
outsb
pop
dec
add
sub
mov
movsw
into
mov
pop
rcrb
js
outsl
nop
das
inc
fimull
mov
fadd
cwtl
mov
in
loop
loopne
mov
faddl
jle
aas
iret
dec
mov
mov
repz
cmp
test
test
mov
sub
cwtl
pop
push
mov
ror
rolb
mov
out
lahf
pop
jne
pushf
push
push
or
mov
popf
in
sbb
push
inc
cmp
insl
pusha
lcall
cli
aam
pop
jno
enter
ja
clc
push
sbb
jge
or
jmp
pop
cmp
dec
inc
push
push
into
xchg
mov
std
int
xchg
push
sti
in
adc
mov
adc
cmp
dec
ret
pop
shrb
test
sub
shl
inc
push
inc
xor
popa
cmp
idivb
aas
bound
mov
sub
inc
ret
lock
outsl
nop
push
repnz
mov
inc
mov
mov
mov
xor
sbb
push
imul
test
ss
mov
fdivrp
test
or
mov
aaa
jl
aaa
stos
cli
sub
leave
aam
pop
pop
roll
std
fisubl
pop
push
ss
add
lret
pushf
xchg
mov
jle
or
and
lret
shll
dec
sub
jl
in
fildll
imul
dec
sub
jp
add
mov
mov
sbb
sbb
in
outsl
jg
push
adc
pop
xchg
sub
cmp
sub
aaa
pop
push
data16
xchg
mov
daa
imul
push
rorl
divb
jmp
arpl
adc
mov
mov
test
aad
and
xchg
xchg
adc
fisttpll
xor
jge
sub
push
cs
lahf
add
jg
outsb
inc
lea
and
pop
dec
add
sub
fs
xor
shlb
movsl
and
stos
pusha
in
test
mov
cmpsl
add
dec
lret
mov
adc
shlb
imul
jo
jge
mov
xorl
xlat
out
movsb
rorb
dec
inc
cld
lea
and
rclb
ret
jle
push
sti
sub
mov
dec
data16
outsl
test
inc
int
jmp
dec
adc
test
ret
fsubs
inc
fdivrl
fs
dec
add
xor
dec
sbb
mov
bound
mov
daa
push
dec
mov
mov
jne
mov
xor
xor
pop
dec
dec
sbb
loopne
in
jp
jne
popa
fists
cmp
inc
inc
cltd
faddp
fdiv
mov
popa
push
mov
test
jge
out
arpl
and
mov
es
popa
test
sub
push
shll
lds
and
xchg
fs
mov
sbb
mov
push
fsubrl
inc
pop
es
test
mov
cmc
jo
sbbl
cli
add
ret
mov
shl
sub
mov
jns
sub
xchg
in
js
lock
ret
and
mov
or
popa
jns
ljmp
add
ficomps
and
jno
push
cmp
lock
mov
dec
mov
out
cld
adc
call
ja
xor
imul
movsl
fs
out
push
pusha
push
insl
in
xchg
lret
jg
or
mov
jmp
inc
xor
movsl
movl
jno
outsl
ja
xor
mov
push
fmulp
add
in
cmp
push
adc
test
or
xor
or
lock
lods
in
arpl
outsl
mov
fidivrl
les
imul
shrl
addl
jns
aam
std
call
sbb
jae
popf
test
into
lds
adc
repz
sub
loop
pop
pcmpgtd
test
dec
mov
pop
into
aam
test
int3
dec
pop
jbe
cmp
imul
push
pop
lret
dec
fucomi
mov
push
cmpsl
fdivrp
adcb
pop
dec
int3
cs
cmpsb
xchg
add
push
aas
popf
adc
pop
mov
jnp
and
mov
sbb
or
pop
adc
int
jns
add
sbb
insl
pop
cmp
test
dec
clc
add
into
addr16
loope
fistpl
popa
xchg
mov
loop
in
inc
sub
mov
out
xor
or
cmpsw
pop
push
scas
pop
rcr
filds
rorb
xchg
pop
mov
lods
out
push
lods
pushf
movsl
mov
dec
sahf
or
dec
rorl
outsl
mov
inc
in
mov
or
inc
or
sbb
lock
mov
iret
xor
mov
xor
insb
or
call
or
fs
add
mov
ja
out
pop
imul
call
push
push
js
pop
cmp
jmp
jnp
aas
aad
mov
pushf
jg
pop
shll
pushf
mov
test
mov
out
or
rcll
ss
andb
dec
sub
or
movsb
jecxz
sub
fstpt
jge
and
test
rcll
sbb
into
xchg
lahf
out
sbb
loopne
push
movsb
and
bound
ds
shlb
push
xchg
outsl
mov
mov
ret
in
jno
adc
sub
inc
fisubs
aaa
cld
jge
push
into
pop
add
mov
cmc
gs
fwait
aad
fs
loopne
cmp
cmc
sahf
ja
mov
daa
mov
pop
or
enter
pop
or
xchg
mov
repnz
in
push
or
push
lods
dec
shr
setnp
das
aam
orl
add
lock
fsubrl
and
and
push
adc
lods
push
and
lods
movsb
jle
imul
xor
mov
pop
fs
shl
add
mov
or
add
lods
addr16
push
sub
cmpl
mov
jbe
ljmp
shr
pushf
pop
shl
inc
jb
pop
sti
sub
test
sub
out
mov
pop
dec
lret
cld
cwtl
pushf
fildl
cmp
push
movsb
push
lods
mov
mov
dec
lods
inc
fwait
sti
aas
lahf
sahf
orl
inc
out
fstp
outsl
mov
push
andb
jg
rclb
dec
pushf
push
adcl
sbb
cmp
and
enter
cltd
movsb
mov
cmc
dec
xchg
ror
xor
xor
pop
imul
sub
adcb
call
int
andb
dec
mov
sarl
adc
sub
shlb
add
cwtl
out
int
and
xchg
addr16
lret
test
jae
js
push
sbb
push
pushf
test
je
jnp
lahf
pop
je
sub
jb
shll
or
addr16
pushf
mov
mov
sub
lret
insl
inc
lods
cmp
add
xchg
push
mov
adc
and
out
mov
fdivs
pushf
adcb
dec
xlat
sub
stos
insb
arpl
push
inc
repnz
outsb
fisubl
stc
lds
push
mov
cmp
cmpsb
mov
pusha
out
out
push
xchg
ret
add
pop
mov
insb
iret
sarb
adc
mov
adcl
aaa
aaa
fdivrl
inc
imul
mov
xchg
dec
add
sub
in
ss
inc
hlt
xchg
jo
andb
cmp
into
movsb
les
out
sbb
pop
out
xor
jmp
aas
pushf
movsl
cwtl
adc
lcall
mov
out
repz
add
inc
pusha
mov
in
cmpsl
add
icebp
dec
xchg
inc
repz
test
movsl
add
push
inc
add
mov
test
sbb
dec
jne
mov
lret
pop
jmp
and
adc
leave
dec
stos
sub
shlb
xlat
into
push
out
sbb
imul
adc
mov
aam
jmp
cmp
out
std
mov
push
xor
add
fisubs
xor
xor
sbb
sub
jno
lahf
lret
js
jno
xchg
xchg
jae
mov
lret
dec
push
sarl
adcb
push
push
mov
sbb
movsl
nop
adc
stos
cmpl
aad
cs
adc
bound
jl
push
outsb
repnz
sub
lret
dec
pushf
add
jp
mov
jg
out
inc
sbb
push
push
and
sbb
lods
fninit
lds
dec
cmc
pop
jno
cmp
lret
jo
dec
insl
xlat
cli
xchg
enter
cs
les
loop
leave
sbb
push
stos
adc
sub
mov
or
jae
push
lock
enter
test
shl
inc
xor
popa
sti
push
out
xchg
jmp
add
dec
les
ja
lahf
cld
cmp
out
lock
mov
push
enter
out
adc
mov
aam
scas
lahf
aaa
sbb
repnz
lods
sbb
or
dec
cmp
cmp
movsb
mov
scas
lahf
out
jnp
fcoml
cmpsb
inc
test
sub
lea
add
jecxz
pop
flds
das
adc
and
mov
and
into
xor
sub
cwtl
loopne
cmp
sbb
pusha
cmp
inc
lret
cmp
xchg
cmp
dec
cli
loop
or
nop
popf
fstpt
and
adc
xor
repnz
rcrl
push
or
dec
out
push
lods
hlt
movsw
xchg
push
das
xchg
and
pop
xor
das
leave
ja
fwait
and
test
push
clc
mov
push
cmp
in
daa
and
popa
int
mov
hlt
ret
xor
or
mov
jo
sub
call
cmp
xchg
lret
pop
adc
nop
outsl
je
mov
je
pop
stos
mov
popf
decb
fdivrl
adc
jle
mov
jns
lock
fimull
cmp
ds
mov
aas
sarl
cmp
rcrl
adc
jge
mov
adc
mov
iret
pop
and
lock
sub
dec
lea
xlat
or
in
xchg
dec
push
lds
mov
decb
dec
aas
in
adc
jnp
cs
mov
shlb
add
lret
fstp
and
loop
xchg
testl
inc
mov
xchg
fmull
add
inc
jmp
movsl
mov
jno
add
dec
repnz
out
or
xlat
stc
movsl
and
packssdw
lret
outsl
cwtl
push
dec
shll
fstps
pop
jp
stos
xchg
mov
xchg
mov
daa
cmpb
cmp
inc
or
in
and
push
sahf
popa
fldt
mov
in
or
adcl
sub
inc
push
lods
mov
sbb
popf
lock
je
mov
pop
rorl
add
lds
adc
mov
pop
adc
in
cmpl
sub
lret
mov
jmp
dec
lds
xchg
cli
cmpsb
and
fcmovnb
inc
stos
mov
and
mov
shrl
jns
pop
xor
push
mov
test
pusha
nop
fsubr
or
fists
test
ja
xchg
fildl
in
in
mov
sbb
adc
out
daa
xchg
fisubs
push
push
jb
jecxz
sub
lret
dec
sti
and
add
pop
jo
mov
std
xchg
and
cli
jmp
fldl
push
fmull
dec
cmp
push
arpl
mov
adc
shl
xchg
in
mov
jae
aam
in
mov
dec
xor
jbe
mov
mov
call
dec
or
mov
cmp
sahf
loop
inc
out
pop
je
lock
sti
mov
notb
jb
js,pt
sub
roll
dec
movzwl
in
les
roll
mov
call
or
sub
enter
push
push
jp
push
xor
mov
shlb
inc
stos
mov
jge
das
and
test
clc
mov
in
xor
iret
sbb
repz
push
jg
movsb
ret
or
xchg
mov
daa
jns
les
fstpt
push
ljmp
push
insl
mov
dec
mov
fidivrl
pop
pop
inc
dec
loope
inc
sub
cwtl
adc
incb
sbb
mov
lret
xchg
hlt
nop
inc
jb
jnp
jno,pt
mov
push
sahf
outsb
adc
test
pusha
out
mov
xor
xor
pop
add
adc
inc
cmpsl
xor
rolb
push
pusha
notb
cs
inc
sbb
ds
jns
mov
inc
ffreep
mov
int3
lret
fidivl
cmp
xor
loop
cmpsl
sahf
stos
jmp
jb
daa
jmp
adc
sub
jne
dec
insl
or
push
ja
cmp
pop
popf
fadd
notb
sbb
mov
push
mov
icebp
insl
sahf
sbb
inc
es
jge
mov
jbe
and
lret
cmp
mov
xchg
add
loope
pop
frstor
fs
aam
pop
pop
in
loope
divb
pop
push
jp
or
sbb
inc
and
push
subl
jnp
ret
andb
jmp
sbb
mov
mov
jno
mov
ret
jbe
xchg
fs
popf
inc
rorl
cmp
aam
or
inc
movsb
lods
dec
push
jb
out
pop
cltd
cmp
les
pop
sub
or
xor
and
out
les
xchg
and
ret
cld
mov
insl
ficoml
inc
inc
sub
sub
in
jae
push
in
subl
hlt
dec
mov
jno
jmp
jecxz
in
cmpsb
dec
lcall
outsb
push
or
or
inc
movl
lods
sbb
hlt
pop
stc
pop
aam
iret
jl
mov
test
fisttps
sti
jb
frstor
je
pushf
pop
push
mov
xchg
mov
cmpps
mov
cmp
lock
movsb
mov
adc
xchg
scas
xchg
fs
dec
sub
lret
pop
mov
lods
xchg
xchg
maskmovq
testl
out
add
lods
stc
sbb
xchg
push
mov
lock
mov
movb
cli
rcrl
and
dec
jle
mov
mov
sbb
sub
mov
push
clc
insb
adc
cltd
or
xchg
imul
xlat
and
dec
out
in
inc
shlb
ss
adc
mov
mov
adc
xchg
test
or
test
push
setg
daa
stos
sti
push
ja
pop
jns
push
je
adc
insl
inc
push
fisubrs
out
mov
iret
scas
adc
stos
leave
adc
add
adc
jg
mov
dec
xchg
jnp
or
mov
xchg
mov
mov
mov
ja
inc
sbb
mov
lcall
pop
push
mov
add
clc
jns
shll
dec
lock
pushf
jnp
xorb
mov
and
add
hlt
add
or
mov
sahf
insl
roll
aas
aam
mov
test
pop
push
js
mov
fadds
scas
dec
inc
or
mov
clc
xchg
mov
jne
jae
or
jp
mov
stc
subb
dec
andb
mov
sbb
mov
inc
jecxz
test
pop
aam
pop
add
sbb
leave
xor
sub
negb
fwait
mov
imul
leave
push
sub
pop
push
mov
lret
mov
fidivrs
xchg
adc
mov
lea
or
into
sub
test
jge
mov
inc
lods
jne
mov
jb
inc
jl
scas
xor
ds
test
mov
jg
xchg
cmp
mov
xor
cld
push
pop
gs
icebp
js
out
pop
mov
inc
xlat
out
popf
inc
add
orb
pop
mov
movsl
pop
push
fsubl
scas
rcrb
push
jne
es
or
nop
lds
pop
and
add
cwtl
aam
mov
sbb
cmp
in
mov
sub
pop
cmc
mov
xor
mov
negl
xor
push
adc
pop
xchg
sub
add
cs
push
jo
pusha
out
xchg
mov
out
jle
push
adc
test
push
mov
pop
dec
jmp
cmp
addb
rorb
push
mov
sbb
adc
fbld
inc
pop
pushf
mov
cli
push
mov
and
and
cmp
clc
aaa
lock
add
pop
xor
ljmp
loope
and
push
popf
mov
daa
movsb
out
mov
cmp
nop
leave
xchg
mov
add
inc
sub
add
shlb
test
push
jle
adc
fldt
fldcw
enter
out
mov
push
pop
mov
lock
ljmp
sbb
push
pop
shrd
scas
pop
sti
test
test
mov
xchg
mov
mov
xchg
xchg
sbb
and
push
mov
int
cmp
repz
in
rcrl
mov
push
out
in
and
cs
and
lea
dec
inc
rol
rorb
fucomi
mov
lods
movsb
pop
hlt
cwtl
mov
mov
outsl
xor
bound
xlat
adc
xchg
test
sub
out
std
imul
adc
jg
pushf
shlb
mov
push
jl
add
sub
push
push
pop
fiaddl
pop
cmp
jmp
or
xor
pop
mov
leave
push
icebp
xchg
sub
mov
fwait
inc
rcrb
and
or
pop
and
push
push
cmp
fildl
outsl
stos
xor
lret
shlb
lahf
push
push
dec
stos
mov
jbe
xchg
nop
mov
push
pop
lcall
and
xchg
xorl
in
adc
bound
ds
push
cs
cmp
adc
jl
lahf
xor
mov
test
xor
xor
rcll
xchg
push
arpl
or
push
movsw
hlt
mov
enter
lahf
cmp
loopne
pop
ja
xor
inc
push
dec
adc
out
mov
pop
push
jns
imul
lahf
mov
inc
pop
or
cld
lods
push
push
sbb
sar
add
pop
add
iret
xor
mov
mov
pop
clc
sbb
test
xchg
std
push
pop
cld
loopne
jmp
fcompl
fisubs
or
cmp
enter
mov
jne
scas
arpl
and
jg
gs
ja
jne
mov
and
inc
dec
push
sub
testb
enter
push
stos
jl
js
cmpsb
clc
or
scas
xchg
js
nop
mov
jns
mov
dec
rolb
inc
sbb
jge
and
jg
aad
js
mov
loope
or
cs
sahf
lahf
jle
sub
push
ljmp
xchg
sbb
xchg
je
cmp
dec
popf
mov
icebp
les
jne
jo
pop
adc
dec
int
daa
and
or
cmc
popa
and
imulb
sub
cs
or
pusha
enter
dec
lea
fcompl
jecxz
iret
cltd
push
and
mov
imul
test
out
les
inc
in
mov
rorb
aaa
aad
lock
filds
push
test
jb
push
int
lret
movb
xor
ret
fucomp
cmp
insl
jp
fwait
ja
push
cwtl
scas
fmuls
cmp
jbe
mov
add
pop
mov
fcompl
mov
add
dec
and
sub
pop
push
xchg
in
pop
jg
jno
pushf
fisubrl
out
or
pusha
add
mov
lret
inc
shll
xchg
ss
les
pop
lret
cltd
cmp
sti
insl
mov
ss
xor
outsb
int3
cltd
sub
adc
or
mov
inc
adc
rclb
fisttps
cs
lds
std
test
ljmp
inc
lret
sub
jge
mov
cmp
mov
in
lock
stos
jns
popf
pop
fs
cli
dec
mov
sbb
repnz
dec
sets
jnp
pop
add
and
mov
pop
mov
mov
sti
mov
pop
cmp
pusha
cmp
xchg
scas
les
addr16
adc
pop
arpl
jge
pop
push
pop
xlat
inc
insb
cli
enter
loopne
sbb
loope
in
jl
pop
scas
push
inc
mov
push
int
lcall
sahf
pop
inc
xchg
orl
lahf
jae
inc
daa
clc
xchg
roll
mov
add
xchg
movsb
xchg
xchg
mov
xchg
repnz
fmul
test
jmp
inc
loope
inc
sbb
clc
out
xchg
fidivrl
test
addr16
lock
std
aas
dec
fmuls
and
sbb
orl
inc
sti
shrl
dec
sub
add
adc
pcmpgtd
inc
xchg
pop
cmp
fsubrl
sbbb
adc
int3
data16
xchg
xor
xor
lcall
data16
in
push
enter
dec
es
divb
hlt
lret
inc
jecxz
cs
jbe
aad
popf
hlt
sub
sbb
cltd
icebp
dec
es
aas
aam
mov
add
push
xor
adc
cmpsb
jo
outsl
lods
pop
dec
pop
iret
inc
jle
dec
xchg
and
fistpll
inc
lret
psubsb
mov
dec
pop
sbb
loope
pop
insb
movsl
sbb
or
das
cltd
aaa
jg
enter
mov
movsl
repnz
xchg
mov
push
sub
xchg
sbb
mov
call
push
xlat
push
sub
adc
out
jge
cld
je
xor
push
mov
inc
jp
fimull
dec
sbb
xchg
mov
xor
scas
xchg
mov
clc
push
push
push
out
xchg
push
loopne
inc
or
inc
and
mov
pop
stos
adc
xchg
in
or
jae
pop
int3
xor
sub
cmp
push
push
popa
in
rorb
je
mov
xor
out
ss
add
cmp
in
pusha
aam
ds
mov
mov
das
test
mov
jl
dec
mov
out
mov
fs
or
in
shl
jnp
arpl
mov
mov
fs
insl
into
daa
mov
mov
sysret
loopne
lods
sbb
xlat
shll
int
test
push
ret
fcmovnu
xchg
ret
adc
aam
das
bswap
jp
repz
jb
adc
xchg
sahf
rcrl
jb
sarb
push
dec
jecxz
and
xor
fnsaves
cwtl
xchg
xor
inc
lcall
dec
pop
cmpsb
jmp
xor
jg
in
lcall
jmp
scas
push
jns
adc
jecxz
sub
fmulp
stos
mov
xchg
mov
leave
cli
std
jnp
shl
pop
outsb
les
push
nop
mov
fucomip
adc
fwait
jl
popf
mov
jne
fs
or
pshufw
inc
mov
xchg
sahf
pop
or
inc
inc
rsqrtps
cmp
jb
leave
test
push
ja
sar
and
pop
and
dec
aas
ficoms
rorb
fsub
cmpsb
les
fistpll
xchg
jg
jns
lret
mov
cwtl
adc
imull
dec
adc
mov
and
outsb
jg
pop
mov
inc
fcoms
cltd
or
pop
jle
sbb
mov
pop
xchg
pop
pusha
cmc
jle
hlt
push
sbb
rcr
scas
add
ds
cmp
decl
es
repz
imul
mov
addb
add
jno
fxch
test
popf
xor
pop
or
xchg
fdivs
xor
ljmp
sbb
call
adc
mov
or
cmp
andl
pop
xlat
pushw
mov
fimuls
sub
fistps
sarb
lahf
inc
aas
dec
lea
mov
popf
push
and
and
and
inc
loop
aaa
mov
fwait
pushf
mov
jl
sbb
and
inc
in
ret
cmpsb
shll
or
sub
sbbl
inc
sbb
adc
in
pushf
adc
jmp
xchg
in
shr
adc
push
add
mov
jg
cmpsb
inc
push
test
jecxz
hlt
fwait
pop
pushf
fstl
mov
das
stc
mov
cmpsl
pop
push
lcall
push
push
loop
jl
adc
mov
out
cmpsb
data16
push
pusha
dec
inc
pop
sub
lods
shll
movsl
adc
inc
sbb
fdivrs
lods
arpl
sub
push
scas
xchg
pop
add
int
jne
test
aam
cltd
cmc
mov
nop
ficoms
xorb
sbb
stc
add
in
pop
jbe
or
jb
inc
or
dec
cld
sbb
xchg
mov
sti
out
outsb
xor
das
cmp
fidivs
pop
jb
inc
fidivrs
les
in
inc
xchg
je
in
sbb
into
push
sbb
xchg
daa
mov
xor
int3
add
xchg
lea
std
mov
scas
sbb
icebp
lret
xchg
mov
mov
and
mov
sbb
test
in
xchg
icebp
sbb
aaa
and
jbe
lea
jge
je
out
jns
xor
cmp
mov
and
pop
imul
pop
xlat
call
xchg
imul
add
jge
mov
fistpl
inc
add
cmc
inc
add
jp
jne
sbb
adc
and
xchg
mov
fidivl
sahf
dec
or
dec
sbb
mov
lock
bound
std
dec
pushf
xor
mov
outsb
mov
outsl
lods
or
jle
cs
jb
lret
push
push
and
fistpl
dec
mov
pop
mov
inc
out
mov
pop
cmp
push
and
pop
pushf
push
in
sti
cmp
sti
addl
cmp
pop
mov
adc
shlb
push
repnz
xchg
mov
mov
inc
les
inc
push
ds
mov
inc
jecxz
jo
or
fldenv
jb
mov
xchg
sub
xor
sbb
mov
popl
lcall
inc
inc
sbb
or
push
or
cmpsl
lret
outsb
or
sahf
imul
adc
jae
sti
cmp
cmpl
add
pop
add
cmp
mov
in
lahf
inc
dec
scas
push
addr16
out
or
adc
idivl
icebp
or
cld
mov
cmp
pushf
mov
pop
leave
gs
push
inc
mov
sub
out
push
push
pop
adc
iret
fidivs
inc
fldcw
ficomps
add
nop
js
push
cld
addr16
and
xchg
bound
loope
mov
inc
bound
out
shlb
outsb
xor
cs
sub
orl
push
hlt
loopne
es
dec
and
imul
mov
loop
mov
and
jbe
outsl
stos
movsl
repz
sub
inc
mov
sbb
daa
xor
mov
iret
add
cmp
addr16
gs
fidivrs
scas
mov
dec
fs
imul
mov
pop
sahf
fwait
loope
popf
imul
in
xchg
mov
sbb
insb
xor
cmp
lods
bnd
or
mov
push
ljmp
stos
add
inc
std
mov
fwait
out
sub
pop
and
insb
scas
inc
mov
outsb
pop
iret
loopne
mov
sahf
test
mov
fisubl
jnp
mov
push
mov
mov
mov
pop
sahf
jg
pop
and
and
push
inc
aaa
fabs
mov
xchg
xchg
cltd
popf
lret
dec
aad
cltd
lahf
mov
cmovle
call
out
jge
aam
leave
loopne
mov
mov
mov
movsl
arpl
pushl
insl
cmpsb
dec
repz
add
int
push
je
jl,pt
aas
repz
adc
mov
push
int
inc
out
mov
push
mov
outsl
test
scas
int3
push
jns
mov
pushf
aam
lds
lods
in
fchs
mov
addr16
mov
lea
inc
lods
in
js
sub
pop
adc
sbb
movsl
movsb
fdiv
insl
dec
scas
fcomi
xchg
loop
fwait
jmp
xor
pop
mov
pop
fwait
xor
iret
aaa
shlb
jae
and
xchg
cmp
jo
bound
out
fistps
rclb
aas
push
push
xor
mov
adc
testl
repnz
cmpsb
xchg
inc
add
dec
pop
xchg
outsb
orl
negl
and
rcrl
xchg
xlat
cmpsb
test
xchg
sub
pop
jno
aaa
fbld
ret
pop
cmp
cs
mov
push
dec
test
lahf
std
int3
push
out
push
lret
jo
mov
add
push
push
push
mov
sahf
nop
addr16
je
rclb
shr
jl,pt
jle
lea
jp
repz
xor
sub
add
lds
mov
sbb
mov
xchg
pop
int3
or
or
sub
movsb
scas
push
ss
cmp
int3
fisttps
or
push
scas
mov
std
lret
daa
xchg
or
scas
insb
enter
dec
or
addb
jnp
fdivrl
mov
jne
lods
cmpsb
cmp
data16
repz
es
fsubs
xchg
mov
cwtl
inc
xor
mov
shrb
jp
notb
rclb
sti
sub
enter
push
lods
mov
sub
and
mov
cltd
outsl
stos
clc
aad
lea
subb
test
lods
lret
imul
movb
pusha
and
cwtl
pop
test
in
pop
push
fisubl
pop
pushf
inc
mov
subb
lahf
cs
aam
or
inc
int
std
fisubrl
dec
rcr
dec
aas
dec
pushf
pusha
and
iret
cltd
cwtl
mov
mov
daa
bound
mov
mov
loopne
scas
loop
pop
pop
jb
shrb
mov
inc
leave
xchg
adc
nop
test
push
push
sub
stc
fistps
call
out
movsb
pop
cmpsl
push
pop
test
sbb
int3
out
xchg
in
mov
cli
mov
shll
sahf
and
ljmp
andl
adc
dec
int3
dec
loop
bound
xor
into
cli
mov
cmp
pop
jp
cmpl
ljmp
in
in
xchg
xor
inc
adc
dec
xchg
inc
xlat
dec
leave
adc
pop
stos
mov
cmp
cli
rorl
xchg
mov
xchg
repz
dec
frstor
pushf
test
mov
adc
scas
clc
mov
mov
cli
and
mov
xchg
add
enter
pop
xchg
or
std
fs
push
arpl
or
testb
rcrb
sbb
jno
into
pop
mov
inc
mov
divb
mov
adc
mov
inc
int3
adc
pop
hlt
adcl
cmpsl
iret
sub
mov
inc
lcall
push
fisubrs
jmp
aad
xchg
add
sbb
mov
cmpl
jecxz
addb
int
add
jne
icebp
lret
fildl
insl
mov
xlat
sahf
shlb
scas
rcrb
adc
sub
inc
xchg
pop
pop
lret
outsw
lcall
icebp
leave
inc
dec
mov
mov
pushf
fs
dec
jp
cmp
int
sub
icebp
pop
add
movsl
mov
daa
xchg
inc
inc
push
nop
imul
das
jno
mov
rcll
shrl
sub
test
xchg
sub
pop
push
movsl
faddl
cmpsl
int3
into
xchg
loope
inc
or
iret
pop
out
data16
sub
jae
lret
inc
cmpsb
je
pushl
adc
sbb
cli
and
dec
sub
call
pop
dec
addr16
out
data16
cmp
imull
pop
push
adcl
out
repnz
hlt
aaa
data16
aas
outsb
dec
add
sbb
push
fldenv
insl
popf
add
jle
and
sti
xchg
dec
fnstcw
lcall
mov
das
notb
push
imul
int
sbb
cs
loope
xchg
jnp
jo
daa
xlat
cltd
cmp
sbb
fnstenv
jno
jae
mov
scas
lea
rcrl
xchg
fs
jns
fiaddl
dec
and
mov
xor
xor
jge
xor
adc
xchg
lea
pop
xchg
lahf
jecxz
jbe
or
lret
pop
int3
xchg
cmp
popf
test
pop
xor
stos
inc
hlt
xchg
loope
mov
fnsave
xchg
dec
in
xchg
xor
aam
cmpsb
pop
or
mov
mov
insl
neg
ds
js
popa
mov
or
xchg
adc
mov
movsl
dec
rcr
pop
addl
jbe
sbb
in
sbb
xor
push
adc
sahf
int
daa
jmp
inc
jb
jl
dec
fstpt
gs
cmp
orl
inc
cmpsb
or
test
mov
idivb
stos
out
out
mov
imul
ret
lcall
cs
cmp
xor
out
and
jmp
cs
add
inc
js
and
outsl
cmpsl
ja
ficoml
sti
mov
cmp
mov
xchg
inc
in
es
test
adc
fistpl
xchg
mov
jbe
pop
orb
jb
hlt
mov
popf
xchg
leave
enter
int3
cmp
aas
xlat
outsl
dec
cmp
xor
call
mov
sarl
into
in
clc
pushf
sub
repnz
xlat
inc
push
sbb
pushf
push
ror
cs
dec
imul
in
clc
loop
cmp
jecxz
pushf
cld
mov
jb
adc
or
lcall
cmp
orl
pop
push
das
cmp
scas
int
dec
lds
jae
stos
ud0
nop
add
jle
popa
mov
cld
pop
imul
dec
insb
shrl
and
fldenv
xor
cli
pushf
hlt
xchg
div
aas
fnstsw
out
push
push
ljmp
fcompl
add
cmp
fldt
mov
cmp
pop
call
in
movsb
scas
in
jnp
xchg
mov
stos
push
xchg
movl
push
adc
push
fildll
shrb
pusha
pop
loop
adc
push
testb
out
mov
dec
enter
nop
push
push
jno
push
lret
inc
jae
or
xchg
or
jecxz
sbb
and
cs
mov
pop
mov
call
and
mov
sbb
adc
or
mov
jle
hlt
negb
mov
push
aas
les
or
ud2
mov
pusha
push
pusha
mov
lods
jne
cld
mov
add
aad
and
and
jb
add
adc
orl
and
adc
xor
cmpsl
outsl
lret
adc
in
inc
xchg
sbb
shlb
inc
cwtl
lods
into
and
dec
and
push
dec
and
das
fsubrs
cmp
std
inc
ds
sbb
sbb
es
push
lea
and
inc
repz
xorl
jmp
push
jle
lock
mov
jbe
test
popa
sub
loopne
push
xchg
stos
in
dec
sbb
pop
loope
jecxz
pop
jg
or
cmp
iret
xchg
mov
in
mov
jg
outsb
dec
dec
test
add
inc
add
xlat
dec
fiadds
jns
into
pop
aad
ror
sbb
call
mov
pop
fsts
cld
pop
sub
adc
lods
add
mov
out
ljmp
mov
fiadds
shll
dec
lret
cmpsb
and
add
test
pop
mov
and
dec
je
push
lcall
pushf
test
sahf
shl
jo
movsl
pop
mov
imul
cs
iret
imul
sbb
cltd
xchg
xor
dec
cld
mov
scas
pop
fcompl
loope
imul
ds
jno
pop
mov
repnz
cmp
jge
jmp
mov
mov
or
inc
je
push
test
stc
ljmp
cmp
cmpsl
mov
xchg
sub
out
push
clc
in
loope
out
xchg
adc
inc
negb
aad
std
dec
movsl
pushf
outsb
in
loope
adc
ja
pop
int
ss
jne
shlb
mov
push
mov
clc
rorl
push
fsubrl
sti
jbe
sbb
jle
lea
pop
mov
and
inc
loopne
outsl
test
gs
dec
jmp
fisubrl
rcll
xchg
in
lret
inc
sbb
leave
cltd
jecxz
or
cmc
mov
pop
call
jg
icebp
push
xor
inc
in
pop
pop
add
sbb
sbb
fsts
add
inc
lcall
ror
xlat
pop
inc
sarb
pop
insb
inc
js
jno
iret
je
xor
push
and
fcomp
loopne
or
xor
dec
add
bound
fdivrs
mov
outsb
jnp
test
fdivrs
out
adc
data16
mov
fxch
pusha
inc
fdivs
ficomps
lods
ss
xor
scas
fsubs
xorb
cmpb
mul
movsl
lea
divb
in
sub
fwait
mov
add
mov
jmp
lea
ret
sbb
loopne
pop
jge
jl
push
and
test
sahf
and
int3
push
jb
sbb
hlt
scas
pop
sub
jne
icebp
xchg
faddp
shr
pusha
cs
test
dec
std
and
data16
in
inc
enter
mov
cli
xchg
shll
pop
ja
mov
pop
jmp
inc
test
std
cmp
subl
in
loope
cld
mov
mov
pop
ret
push
in
pushf
mov
mov
cmpl
mov
pop
std
jae
adc
dec
sti
push
fldl
mov
testl
dec
push
out
adc
mov
jg
mov
pop
fdivrl
mov
push
or
mov
rep
mov
ficoms
dec
mov
push
fwait
jns
lock
aam
pop
xchg
in
les
into
push
fwait
dec
mov
int3
adc
ja
jecxz
clc
imul
pop
repz
nop
cwtl
ficoml
ret
out
push
cs
leave
mov
rorb
addr16
stc
fdivrl
mov
or
cmp
push
lcall
add
sbb
lret
cmp
popf
xchg
ja
ljmp
aaa
fld
out
sbb
imul
push
test
lods
sbb
hlt
mov
xchg
aaa
das
outsl
fidivs
sbb
inc
neg
mov
add
cmpsl
iret
jno
push
orb
dec
filds
pop
jmp
std
xchg
xchg
or
fs
int
push
cmp
push
cmpsb
pusha
int
pop
dec
push
adc
sub
add
mov
mov
movsl
fildll
lods
add
mov
pop
int
sbb
sti
mov
xor
loop
adc
inc
ss
mov
ljmp
repz
mov
les
push
jo
cli
or
push
mov
fwait
lret
lock
dec
addb
mov
add
out
xchg
add
jl
mov
mov
pop
testb
mov
push
icebp
cmpsb
cmp
mov
ds
pop
imul
insl
sub
aas
add
repnz
jne
and
in
or
jg
push
push
andb
pop
mov
jmp
fbstp
je
ret
fisubrs
test
or
insb
sbb
fisubl
prefetchw
or
in
arpl
in
cmpl
pop
lods
xchg
sbb
pop
test
and
roll
orb
or
and
pusha
jecxz
pushf
adc
sub
cmp
xchg
mov
xchg
pop
adc
sti
jmp
jne
fbld
ss
dec
ljmp
popa
jge
insb
rorl
into
loope
jp
sub
push
or
orl
add
aaa
lcall
mov
popa
je
je
mov
ds
or
mov
cmc
dec
bound
popf
out
push
add
mov
cmp
mov
pop
inc
bound
js
xor
cs
cmpsb
push
push
lock
out
add
lcall
insb
lea
cltd
mov
jbe
xchg
icebp
inc
cmp
push
push
in
sbb
push
cmpsb
pop
popf
stos
or
adc
sub
push
push
out
jl
cmp
mov
lods
icebp
jge
push
in
cltd
mov
add
imul
insl
adc
orb
clc
sub
pop
jg
push
xor
pop
fcoms
pusha
fisttpll
xchg
push
sbb
adc
or
jne
dec
add
scas
sbb
imul
mov
mov
aam
js
das
fdiv
stos
sub
shr
jp
adc
mov
rorl
inc
mov
lahf
push
cli
mov
xchg
sbb
mov
mov
mov
addr16
pop
xchg
pop
es
aam
and
dec
movsl
lods
faddl
enter
rcll
xchg
nop
pop
sub
xchg
jg
pop
sarl
mov
xor
add
mov
jno
or
sub
add
stos
ss
mov
xor
or
out
cs
into
addr16
cs
jnp
and
hlt
jb
add
shll
cmp
or
inc
xchg
push
cmpsl
and
scas
in
test
add
imul
adc
mov
fisttpl
shrb
sub
mov
sarl
pop
decl
and
in
xor
fdivrs
inc
inc
test
es
adc
int
out
leave
mov
arpl
stos
push
in
push
add
and
pop
in
dec
ret
movsb
cmpl
lcall
add
dec
icebp
jecxz
mov
lcall
call
lcall
in
jne
mov
sbb
add
fxtract
or
mov
xchg
out
int3
xor
inc
xor
or
rolb
xchg
test
sbb
xchg
xchg
push
es
mov
mov
pusha
fsubl
pop
mov
sub
add
js
xchg
mov
jno
out
push
leave
cmp
aam
ss
mov
rcr
add
mov
push
adc
incb
sbb
aad
mov
mov
call
pop
sti
imul
dec
fidivrl
insb
sbb
out
aaa
jno
cltd
sub
les
sahf
in
or
popf
jg
inc
ficoms
movsb
xchg
push
rcr
xchg
mov
test
mov
out
cmp
sbb
cwtl
imul
lret
loop
aam
mov
mov
js
lret
xchg
gs
xchg
push
or
mov
je
imul
jg
add
sub
vrsqrtss
pop
xor
test
mov
pop
mov
sbb
cmp
mov
mov
sbb
cmpsb
adc
mov
sub
sub
aad
or
cmp
movsb
add
cmp
stc
cmp
inc
add
dec
dec
repz
in
or
or
je
ret
jg
insl
gs
push
xchg
adc
pop
lret
jns
movl
mov
sbb
fcmovnbe
ljmp
push
shl
lret
lods
push
setae
fwait
mov
mov
sbb
das
mov
in
add
inc
imul
ret
jmp
roll
pop
dec
dec
jge
scas
xchg
mov
orb
pop
lret
mov
loopne
rorl
cld
push
scas
xchg
jle
insb
mov
push
lods
adc
jbe
mov
and
and
add
sub
daa
int
xor
es
cmpsl
inc
stos
push
inc
mov
rcrb
ss
inc
mov
xor
pop
and
shrb
xor
mov
lcall
pop
push
cmp
call
fistpll
ret
pop
mov
inc
mov
js
pop
add
stos
pop
add
mov
pop
fwait
imul
sub
push
and
jg
cmp
pusha
es
out
push
jmp
xchg
jge
sub
xorb
mov
cmp
pop
cmpsl
mov
repz
add
mov
mov
lods
and
inc
gs
sub
sbb
cmp
fcmovbe
shlb
adcb
ja
cmc
out
cmp
xchg
add
push
push
jae
movsb
push
cltd
inc
aas
pop
mov
lods
hlt
sbb
mov
lret
leave
push
fcoml
sarb
out
add
xor
sub
movsb
data16
call
push
lods
pop
sbbb
mov
xchg
or
test
pop
lret
jne
lods
push
out
xchg
cmc
cmp
inc
cmp
or
cld
and
std
loop
mov
pusha
dec
mov
insl
insl
jmp
out
rcl
xchg
cmpsl
movsl
cmp
stc
or
mov
and
les
mov
mov
pop
int3
xchg
subb
insb
pushl
int3
and
nop
movlps
pop
iret
or
leave
ret
inc
xor
mov
pop
mov
push
fwait
sub
scas
stc
shrb
dec
push
in
jmp
cmp
add
test
stos
inc
repz
gs
adc
js
adc
add
imul
out
dec
mov
scas
push
xor
or
push
das
fsts
xchg
adc
and
fistpl
roll
int3
inc
dec
rolb
cmpsb
pop
gs
mov
lret
enter
jne
push
push
jbe
push
aaa
out
lret
popa
and
jmp
pop
rclb
les
push
mov
inc
test
inc
fcomi
repz
mov
popa
fistps
call
lock
das
pop
dec
cmpsl
push
mov
outsb
fimuls
outsb
call
popa
sub
push
push
and
and
test
sti
mov
cld
xchg
mov
lret
leave
xchg
bsr
scas
xor
test
jg
std
mov
pop
cli
sub
or
dec
imul
dec
loope
mov
popf
cmpsl
and
push
xor
pop
jg
scas
or
ss
or
mov
inc
fwait
cmp
call
or
fsubrl
push
jecxz
and
sub
pushf
push
lcall
or
sub
sub
popw
adc
stos
loope
shl
mov
dec
xchg
lcall
cmp
push
fsubr
mov
imul
xor
mov
aad
int
mov
jnp
sbb
nop
dec
xchg
mov
xchg
jbe
fcmovnb
pushf
mov
jle
cmp
and
xor
cld
xchg
imul
sub
dec
cmp
mov
mov
jae
aad
insb
and
out
jp
and
addr16
int3
xchg
inc
icebp
add
cmc
xchg
test
fmull
push
mov
out
popa
aam
shlb
mov
fldenv
lea
sbb
aad
add
sbb
pusha
or
push
xchg
into
iret
in
aad
subl
loopne
mov
mov
fwait
icebp
mov
xor
fstps
in
jns
cmpsb
xchg
lcall
enter
mov
mov
leave
adc
mov
ret
je
jp
mov
mov
push
xchg
cmpsb
faddl
add
insl
pop
popf
rol
inc
cmpb
lcall
xor
fistpll
aas
cmp
jmp
xor
fwait
arpl
and
mov
mov
out
scas
bound
xchg
in
mov
mov
xor
lods
jnp
inc
adc
ret
cwtl
pushf
repnz
dec
outsl
clc
pop
test
mov
sbb
movsb
lcall
outsl
js
sti
inc
xor
inc
inc
xchg
inc
movb
or
cld
lock
pop
fistl
sbb
inc
jae
iret
add
mov
fisubrl
sbb
imul
repnz
and
push
std
xchg
xchg
fcoml
into
sahf
loopne
push
mov
cwtl
pop
dec
test
ja
fmulp
andl
arpl
mov
stos
imul
dec
testl
inc
sub
mov
xchg
or
lsl
jecxz
mov
pop
fcomip
addr16
jnp
sbb
clc
fstpt
popa
outsb
movsl
andb
mov
push
sti
clc
icebp
dec
pop
movsb
push
sbb
fadd
insl
adc
fadd
sub
mov
jle
adc
xor
cmpsb
xor
add
call
daa
fldcw
or
push
ret
xacquire
repz
jmp
jne
jl
ret
sbb
xchg
mov
cmp
loope
pop
int3
test
mov
push
mov
aad
popf
lock
filds
and
fcomps
mul
push
jns
push
mov
sub
pop
pop
dec
mov
sub
mov
sbb
daa
pop
sti
add
ds
xor
push
mul
push
fistpll
jne
adc
mov
adc
insb
in
mov
mov
gs
aaa
cwtl
rcrb
popf
pushf
es
ljmp
and
or
stc
rol
in
sbb
into
loope
imul
repz
sahf
dec
inc
shlb
or
aad
sub
xor
mov
add
stc
adc
test
dec
inc
inc
mov
jb
add
pushf
fcomps
test
orl
pop
insb
dec
rol
loope
jg
gs
test
fs
cmpsb
in
loope
mov
xor
or
lods
push
or
sbbl
shrb
mov
push
arpl
dec
clc
cmp
into
fiadds
jnp
hlt
sub
cmp
sbb
adc
popf
jl
lahf
push
scas
jo
mov
call
jnp,pn
adc
push
ss
ds
cmp
dec
out
xor
test
loop
loope
insl
repnz
icebp
mov
adc
ret
scas
mov
jae
test
xchg
pusha
or
loop
popf
sbb
nop
stos
daa
js
fidivl
loope
scas
mov
and
imul
outsb
daa
xor
cwtl
mov
movsb
jg
fcomps
mov
push
inc
mov
xor
test
lret
mov
dec
test
push
or
cli
pusha
outsb
and
mov
ficoml
inc
stos
movsb
xchg
or
mov
je
popf
and
imul
mov
neg
push
loop
scas
and
notb
pop
add
sarl
adc
sbb
test
lahf
jl
xor
add
loopne
pop
add
loope
and
fwait
inc
cmp
nop
in
cmp
subl
ror
push
mov
negl
dec
sbb
outsl
pop
aaa
daa
das
and
int3
lea
dec
mov
rorl
inc
in
jle
addl
fnstsw
stc
ds
sbb
lods
and
cmpsl
xor
in
pop
mov
pop
mov
add
aam
and
add
push
adc
ret
pop
hlt
xchg
ljmp
mov
xor
fstl
test
inc
clc
mov
lods
icebp
cmpb
aad
xchg
stos
pop
xorb
xchg
xor
xchg
or
loope
iret
out
lods
test
movsl
movsb
or
xor
sahf
mov
mov
lods
or
popf
daa
ds
jnp
aad
shr
rcl
push
arpl
fs
xor
repnz
outsl
jg
and
mov
xor
repnz
jmp
aam
push
jae
push
aad
mov
clc
ret
xor
cmp
xor
sbb
xor
pop
in
xchg
dec
loope
imul
or
dec
test
push
push
add
jle
clc
jno
adc
add
mov
ja
xor
mov
divl
inc
xchg
stc
mov
and
es
aam
scas
pushf
dec
jb
and
lea
mov
flds
mov
ret
sub
push
stos
jo
stc
aaa
fwait
jp
add
adc
pop
push
loop
fwait
ja
je
adc
in
pop
cmpsb
shrb
pop
andl
mov
mov
dec
cltd
dec
inc
push
popf
push
enter
aam
stc
subl
loop
stos
les
or
jmp
ret
inc
lods
sbb
xor
or
loopne
js
orl
int3
mov
pop
insb
push
dec
femms
sub
push
fwait
or
fidivs
orb
mov
add
fisttpl
paddd
push
add
or
test
mov
or
fsubrl
popa
int3
sahf
lret
inc
mov
fcoml
mov
rolb
lds
jle
fdivr
fdiv
add
sti
pop
jp
xlat
xchg
xor
sbb
push
jle
aas
jecxz
hlt
les
lea
rcrl
sbb
jecxz
inc
shlb
int
adc
bound
add
jns
dec
hlt
outsl
fcoms
jb
jle
add
scas
jbe
inc
call
je
push
pxor
jle
lock
inc
sbb
sbb
adc
outsl
pushf
cmp
inc
jp
test
inc
mov
add
in
dec
inc
cs
in
or
icebp
out
lods
xchg
movsl
ret
sbb
dec
cltd
or
cwtl
and
add
push
addl
dec
popa
or
adc
and
repz
aaa
dec
mov
cmpsb
jl
jp
inc
jb
call
sarb
push
lds
ja
cmpb
and
je
test
scas
ret
jecxz
jecxz
popf
dec
mov
mov
mov
sbb
ss
mov
xchg
fidivrl
das
pop
push
idivb
push
xor
dec
out
shlb
loop
jns
stos
jbe
enter
xor
push
in
cli
jnp
lcall
std
push
lret
cmc
inc
jg
aaa
push
ret
xlat
ja
or
adc
cmp
xor
push
insl
cltd
cwtl
mov
mov
push
pcmpeqd
mov
xor
out
pop
cs
test
fistl
jge
hlt
inc
out
inc
fs
mov
in
cmp
rolb
stos
mov
sti
std
sub
xchg
cmc
cli
jo
fnclex
idivb
int
jbe
xchg
inc
enter
loop
lods
adc
inc
pop
add
cltd
push
push
es
jmp
jb
std
loope
adc
hlt
out
or
or
xor
jo
jl
jne
cltd
cmpsb
cmc
sub
stos
cmp
xor
xchg
neg
add
lcall
adc
pop
push
dec
mov
imul
inc
sbb
or
cmp
enter
fisubs
testb
lcall
or
push
pop
jno
lea
das
sbbl
and
loope
stc
dec
loop
daa
scas
nop
xchg
pop
dec
and
sub
inc
loop
inc
mov
ret
stos
mov
cmp
jno
dec
hlt
xor
pop
popa
sbb
mov
aad
adc
test
dec
jne
mov
pop
or
cmp
sub
sbbl
fiaddl
outsl
imulb
push
and
mov
xchg
outsb
aam
push
cltd
mov
mov
lcall
xchg
jne
and
faddl
push
lahf
sub
not
xchg
cmp
in
xchg
dec
test
cmp
ss
aas
adc
push
test
arpl
ds
xchg
pop
cwtl
int
popa
movsl
cmpl
jb
fcmovbe
scas
sub
aaa
pop
movsl
imul
cltd
ja
or
push
ret
inc
pop
mov
imul
in
not
mov
pop
outsb
xor
mov
adc
cs
addr16
loopne
jns
pop
fwait
jecxz
cli
jo
sbb
fmull
jmp
imul
jle
imull
pop
sahf
in
pop
add
mov
mov
stos
mov
sub
repnz
or
fisubrl
inc
ljmp
mov
or
sbb
mov
cmp
add
sbb
xchg
lds
and
or
add
or
add
dec
adc
cwtl
adc
addb
lea
in
scas
mov
lret
popf
xchg
xor
xlat
mov
or
dec
mov
loopne
lcall
iret
or
push
xlat
cmp
mov
mov
loop
add
imul
xlat
movsb
and
pop
xchg
inc
inc
and
or
mov
mov
test
pop
add
mov
push
mov
mulb
mov
xchg
aam
and
push
hlt
mov
add
xchg
push
in
fcomp
js
and
pusha
or
push
fs
in
jns
data16
inc
xor
mov
mov
jns
push
pop
pop
jmp
imul
lret
aaa
pop
pop
adcl
pushf
jecxz,pn
push
repz
loope
stos
jns
cld
insb
test
cli
scas
pop
cmpsb
popf
mov
jne
or
ficompl
or
test
dec
aam
pushw
hlt
or
imul
js
pop
cli
mov
mov
enter
fsubrl
pop
out
mov
pop
and
inc
adc
dec
xor
subl
jo
imul
cmp
dec
movsb
inc
mulb
add
mov
lods
lods
stc
in
aam
je
fmuls
cmp
sub
xorb
adc
jns
fisubrl
sub
jb
leavew
jmp
les
inc
test
addl
mov
xor
notl
sbb
repz
mov
jbe
dec
je
es
push
inc
push
push
mov
adc
movaps
mov
mov
ret
test
dec
imul
outsl
sub
data16
mov
jmp
iret
repnz
push
mov
sub
or
out
loopne
adc
or
imul
sub
add
mov
cmp
fildll
outsl
push
fiaddl
ss
push
cli
inc
cmp
jecxz
xchg
shlb
push
insl
in
mov
jl
enter
push
enter
or
dec
mov
repnz
dec
outsl
lds
xchg
and
mov
cmp
rclb
fs
push
stos
jno
adc
inc
filds
mov
sbbl
lods
cmp
sarb
cmp
inc
push
faddl
and
lahf
stos
clc
mov
xchg
sub
pop
or
cmovno
aaa
xchg
clc
mov
sbb
das
sar
stos
je
lock
lahf
faddp
mov
sub
shr
xchg
sub
inc
dec
mov
aas
mov
lods
mov
jno
imul
mov
xor
clc
cltd
dec
divl
sar
xchg
dec
push
xchg
or
lahf
or
rorb
hlt
scas
cmpsl
jae
in
pop
lcall
inc
or
sti
inc
jecxz
sub
or
jge
fisubl
and
xchg
adc
imulb
scas
jb
cmp
xlat
sbb
mov
ljmp
mov
cmp
jmp
fnstenv
push
add
add
jmp
sub
shrb
pop
lret
es
add
mov
js
mov
add
shrl
mov
js
jmp
pop
push
cltd
out
xor
ret
or
lahf
jl
pop
out
cli
aad
or
cs
xor
ljmp
jecxz
shll
addr16
rcl
sub
dec
adc
out
int3
ja
pop
xor
out
hlt
ficoms
lods
pop
adc
orb
jbe
dec
sub
pop
sar
jnp
sahf
mov
cmpsb
dec
je
inc
jns
xor
mov
incl
shrl
mov
lcall
sbb
sbbl
add
mov
mov
sbbl
sub
pop
or
mov
mov
test
dec
test
std
pushf
std
scas
sub
and
frstor
loopne
xchg
mov
outsl
inc
mov
aaa
add
pushf
cmp
imul
cwtl
push
sbb
pop
aad
adc
in
fimuls
pop
in
xchg
mov
jne
filds
and
stos
add
xchg
mov
stos
out
ret
stos
pop
testb
movsb
stos
mov
xor
sub
lods
adc
mov
pushf
sbbl
les
xchg
inc
mov
jle
idivb
std
cmp
push
movb
fildll
in
mov
test
fbstp
and
adc
dec
or
fistpl
pop
push
sar
enter
add
idivb
inc
loop
das
push
push
popf
mov
mov
pop
adc
test
faddp
add
adc
sub
stos
and
jge
pop
popf
dec
pop
add
test
mov
xor
cmc
mov
or
jae
gs
and
xor
sbb
mov
jbe
repz
hlt
ret
arpl
cwtl
lock
out
daa
dec
idivl
push
out
imul
je
jle
add
xor
mov
sbb
xlat
push
cmp
mov
aaa
insb
das
cltd
and
out
leave
mov
mov
cmp
iret
cmpsl
rolb
jne
xorl
adc
pop
fdivr
xchg
xor
inc
cwtl
bound
in
adc
gs
out
enter
scas
fnstcw
inc
mov
push
mov
xor
push
aad
add
loopne
adc
push
es
adc
adc
fisttps
push
or
lret
dec
mov
or
mov
cmp
fisubrl
lods
dec
xlat
mov
and
andb
push
sbb
jne
mul
rol
test
div
ljmp
xchg
mov
fisubrl
cmpsb
pop
lret
push
inc
or
jo
xchg
imul
push
movsl
iret
fildll
les
lahf
fld
adc
add
out
aaa
div
test
cmc
shrb
enter
lahf
lret
push
into
test
mov
insb
lcall
dec
and
mov
xor
or
cmp
in
fs
clc
sbb
cmpsb
lock
das
add
mov
mov
jns
scas
in
add
lcall
outsb
and
int
mov
sahf
xchg
ficompl
sub
ret
sub
in
das
insl
fnsave
push
imul
scas
or
fsubp
js
mov
or
pop
iret
and
lods
dec
dec
cwtl
lds
mov
rorl
jne
mov
repz
test
ud0
xor
push
dec
mov
cmp
mov
adc
outsb
sbb
inc
jae
lods
loopne
fs
add
movsl
dec
testl
outsb
pop
xchg
rcll
hlt
mov
divb
inc
pop
add
adc
ficoms
js
std
clc
jecxz
mov
cs
pop
aad
pop
push
inc
cmpsb
xchg
sub
ret
pop
shlb
cmpl
xlat
dec
sub
xchg
fdivrs
fimuls
outsl
adc
push
stos
in
in
repnz
daa
jno
mov
inc
lods
call
js
add
stc
loope
dec
pop
cmp
mov
fiadds
inc
lock
lret
lahf
xor
push
fs
outsl
xlat
lahf
mov
and
adc
mov
xchg
icebp
in
lahf
rcll
jge
push
lods
movsb
loopne
inc
aaa
fidivl
push
popf
loope
xchg
hlt
and
xchg
out
sti
cmp
sub
lods
stos
pop
pop
sub
std
dec
test
inc
mov
add
mov
xchg
push
jbe
xor
pop
add
jns
lcall
sahf
arpl
inc
add
sbb
in
push
loop
fwait
in
mov
pushf
or
xor
add
mov
and
orb
add
out
sahf
scas
fdiv
xorb
aaa
data16
rol
push
sub
pop
rorb
frstor
daa
push
mov
fistps
lret
gs
mov
pop
xchg
xchg
push
scas
into
jnp
sarb
sub
les
and
dec
out
mov
xor
test
in
inc
mov
and
inc
sbb
xorl
imul
xchg
sbb
fucom
in
clc
dec
out
iret
xchg
mov
jmp
ret
data16
pop
push
pop
jo
rclb
hlt
je
dec
rcll
mov
sbb
dec
call
dec
insb
jne
xchg
js
adc
mov
xorb
and
mov
sarb
fwait
jo
push
xor
clc
pop
leave
scas
xor
call
movsb
test
pop
pop
sbb
mov
cmpsb
and
xor
mov
xchg
movl
jg
jne
push
dec
and
xchg
popa
mov
repnz
flds
sub
mov
je
std
pushf
leave
pop
icebp
lcall
push
mov
or
outsl
push
idivl
jle
popl
push
sti
pop
sub
sti
adc
mov
xor
loop
int3
xchg
ja
sub
iret
das
into
lret
pop
jno
lret
lea
lret
mov
mov
shlb
fldcw
push
dec
add
xor
sub
orl
shrl
nop
fld
and
mov
add
lods
pop
cmpsb
jns
adc
cmp
mov
push
ret
rcll
int
xor
shll
xlat
sbb
mov
popf
xchg
fnstsw
mov
pop
sbb
or
dec
cmp
or
clc
bound
lods
inc
test
lea
pop
jo
xchg
rcll
data16
pop
mov
ss
sub
sbb
adc
cmp
in
je
mov
mov
sbb
mov
loope
xchg
arpl
cld
popa
xchg
pusha
inc
cmp
mov
lods
mov
pushf
fmulp
jl
jne
fwait
jge
ret
jno
insl
push
enter
sbb
push
or
divb
mov
jp
cli
jmp
call
push
fcoml
jo
mov
decb
mov
mov
xchg
rclb
sub
imul
cltd
add
or
jle
pop
pop
xchg
enter
xchg
cmpsl
and
xchg
sarl
push
outsb
data16
mov
movsb
jo
shl
lcall
pop
xor
adc
mov
inc
and
cld
jns
stos
shrb
mov
movsb
adc
fs
in
dec
leave
xor
jl
arpl
cmpsb
pop
jns
int3
xor
inc
outsb
push
imul
cld
or
xchg
int
mov
loope
jbe
mov
mov
xchg
fsubr
std
cmpsl
xchg
fmull
push
jbe
sub
jle
shr
cmpsb
mov
xchg
icebp
xchg
scas
xchg
lds
sub
push
mov
frstor
dec
sti
mov
xchg
out
addr16
inc
sti
nop
cmp
dec
adc
pop
ss
cmc
push
inc
add
mov
mov
mov
arpl
clc
rdtsc
ljmp
dec
stos
std
push
add
dec
cmp
std
out
outsl
and
aaa
pop
mov
popf
std
dec
fildl
jne
sbb
cmc
int3
ret
xchg
push
push
add
out
sub
mov
int
jo
push
shrb
idivl
gs
mov
testl
out
and
and
jae
out
rorb
xor
lret
adc
ljmp
loopne
jno
inc
mov
push
sbb
xor
dec
roll
cmpsb
mov
push
js
and
cltd
bound
test
inc
enter
insl
add
jbe
sarb
popa
data16
push
dec
xorl
pop
ret
testb
movsb
pop
frstor
cmp
outsl
test
jo
and
int
or
fwait
test
into
sbb
adcl
xorb
pop
pop
mov
imul
sub
jno
roll
dec
lret
jg
cmp
insb
aas
xchg
daa
enter
es
int
adc
das
mov
push
cmpsb
ret
mov
cmp
lcall
inc
out
or
in
push
xor
jge
xor
sahf
rcl
sbbl
fbstp
and
repnz
loopne
mov
sarb
mov
aam
das
xor
stos
lret
cmpsl
inc
xchg
stos
popa
sbb
shr
jle
or
je
xor
add
int3
rcll
icebp
psubusb
fdivl
std
std
insb
inc
test
xlat
insb
pop
lds
cwtl
incl
mov
dec
ficomps
xchg
inc
xor
adc
xor
pop
movhps
movsb
mov
mov
notb
lret
mov
test
sarl
cmp
dec
movsb
mov
testl
push
push
mov
sbb
movsl
loope
rorl
mov
or
sbb
les
dec
loopne
dec
xchg
pop
fldl
dec
subb
dec
add
fucom
pop
or
rcrb
sbb
adc
enter
ficomps
test
imul
insl
fldl
dec
inc
mov
clc
fucomip
hlt
lods
jmp
das
mov
clc
add
lods
mov
cli
fwait
test
jae
adc
leave
dec
adcl
pushf
jl
cmc
lea
xchg
pop
dec
popf
pusha
nop
arpl
jno
adc
ud0
sub
inc
std
sbb
scas
pop
imul
mov
orb
sub
jmp
mov
sti
pop
push
sbb
in
and
sbb
enter
repnz
imulb
push
sbb
bound
xor
xor
ret
adc
push
pop
sub
cld
ja
movsl
repnz
push
mov
mov
scas
lret
pop
xchg
es
xchg
dec
add
jl
sub
and
out
push
xorl
jne
or
lea
insb
leave
int
cmpsb
xchg
dec
or
into
mov
sti
leave
test
jae
lea
bound
pop
scas
outsb
push
sub
mov
iret
es
popf
mov
jb
ret
ficoms
xor
pop
shll
lret
movb
xchg
in
lahf
and
out
xchg
push
cmpsl
fisttps
repnz
or
jp
gs
rcl
xor
sbb
sbb
xchg
xor
mov
push
xor
stos
xchg
test
cmpl
in
insb
pop
push
pop
add
out
sbb
inc
out
cmp
dec
xor
xlat
dec
test
out
inc
pop
cmp
repnz
inc
mov
xchg
std
mov
dec
in
jp
lcall
rol
sub
adc
sbb
fisubrs
adc
leave
mov
shrl
push
sbb
rcrb
sub
dec
je
sbb
pop
bound
imul
jp
and
and
fnsave
es
and
ret
out
adc
stos
lcall
xlat
test
xor
cli
andb
bound
mov
rclb
xchg
lcall
rcrb
out
movsb
es
mov
adc
dec
ss
inc
frstor
jae
or
sbb
imul
ret
fs
mov
cmpb
shlb
sub
jge
nop
add
sbb
jmp
jbe
fdivrl
loop
gs
call
movsb
movsb
add
rcll
adc
jmp
leave
mov
jmp
dec
pop
dec
sbb
test
jae
loope
addr16
aaa
dec
fmull
xchg
test
cmp
inc
rcl
bnd
dec
jge
adc
pop
xor
add
orb
push
mov
aaa
xchg
dec
pop
pop
and
scas
or
sti
pushf
pop
cld
mov
cmp
xchg
xchg
loop
add
rol
sub
clc
lock
cs
mov
pop
dec
push
cli
fs
push
inc
mov
push
jb
and
repnz
inc
sbb
xchg
stc
jb
sbb
sub
std
pop
fisttpll
and
push
lea
dec
divl
int
fnsave
jg
ja
xorl
mov
xor
jecxz
lock
inc
adc
jl
ret
add
dec
data16
add
and
aaa
adc
inc
sbb
mov
sbb
dec
xor
and
test
sub
mov
xor
mov
dec
pop
push
jl
das
into
addr16
xor
fs
inc
out
scas
xlat
mov
add
popa
aas
loope
popf
sub
leave
iret
imul
or
sub
loope
cmp
push
nop
je
xor
ficoms
jp
fistpll
jae
aad
icebp
mov
jae
jecxz
push
push
mov
sbb
sbb
cmp
test
xor
sub
fildl
imul
das
sub
mov
mov
rcrb
int
xorb
push
inc
outsb
in
cmpsb
dec
mov
bound
pop
mov
cmp
or
sub
movsb
movl
js
stos
sub
xor
inc
or
pop
and
lahf
mov
pop
sbb
add
aas
ds
in
stc
sub
pop
or
mov
mulb
mov
je
es
filds
mov
mov
inc
repnz
jg
andl
push
lret
outsb
xorl
adc
gs
pop
clc
jge
mov
inc
ljmp
fwait
or
jmp
dec
cmp
insl
clc
jl
les
mov
cld
add
xchg
cmp
jmp
popa
arpl
cmp
mov
push
xor
negb
inc
jne
lds
and
out
ror
xchg
repz
negl
frstor
dec
lret
jmp
push
pop
cmp
pop
in
lret
xor
bnd
mov
xor
cwtl
dec
in
in
push
jp
ret
mov
addr16
inc
xchg
lcall
rcr
and
pop
sub
mov
sub
xchg
add
pop
call
into
mov
sub
push
pop
sub
xor
xchg
push
push
jne
mov
lahf
inc
sbb
lods
divl
into
add
jg
loopne
sub
inc
js
in
lea
inc
shrl
xchg
sarb
mov
sbb
sub
pop
adc
test
loop
test
pusha
repnz
jne
je
mov
sub
in
std
pop
xchg
mov
ja
cwtl
icebp
xchg
dec
movsb
fisubs
xchg
push
adc
shrl
add
repz
movsb
test
aam
loop
loop
cld
inc
rolb
cli
xchg
and
lret
pop
mov
add
ja
js
adc
xor
loop
js
xor
out
mov
cmp
and
pop
rcll
int3
fs
addr16
inc
into
push
push
inc
xchg
dec
xor
sub
mov
popf
aad
mov
push
mov
xchg
ljmp
fiadds
popl
shrl
mov
fwait
or
aad
adc
sub
fcmovnbe
mov
pop
shrb
xor
and
mov
push
scas
cmc
dec
out
cmp
in
sti
fmulp
push
mov
add
stos
pop
xor
rorb
test
dec
inc
adc
cs
loope
mov
push
push
fcomip
aas
pop
std
loop
cmp
scas
sbb
xor
pop
adc
loopne
fcomps
jl
cmc
push
add
pop
in
pop
je
lea
jae
pop
dec
xchg
aad
or
push
arpl
lret
or
pop
cmpsl
cmpsl
fsubs
popa
xor
sbb
sub
dec
push
repz
cmp
adc
ret
hlt
xor
push
mov
imul
mov
push
sbb
mov
daa
push
push
or
dec
incl
rcrb
outsl
addr16
cs
mov
aam
mov
xor
push
ja
test
lret
stos
imul
inc
inc
add
mov
dec
cmp
sbb
push
ds
adc
aam
cmpsb
dec
movsl
stc
push
test
int3
js
das
ja
mov
leave
in
pop
mov
xlat
xchg
pop
dec
cmpl
push
out
lds
mov
jbe
idiv
subl
mov
push
nop
cmp
mov
xor
fwait
adc
ss
push
mov
lahf
mov
mov
mov
scas
pop
cmc
jno
aaa
or
insb
push
adc
adc
xor
bound
pop
xchg
lock
bound
sbb
jne,pt
fwait
inc
push
add
push
test
dec
or
daa
mov
adcl
sub
push
test
xchg
mov
mov
xor
leave
add
mov
das
pop
lods
mov
mov
and
cmp
pop
pop
mov
lret
lret
lds
in
in
pop
jns
pop
sub
scas
sub
dec
xor
movsl
mov
mov
stos
mov
insb
lds
pop
rolb
push
mov
adc
mov
add
adc
iret
cltd
cmpsb
adc
or
mov
pop
test
and
mov
jge
add
arpl
inc
sub
or
inc
scas
sbb
fildll
mov
adc
xchg
rcrl
add
jg
mov
dec
movsb
mov
in
adc
loope
leave
popa
xor
ss
push
adc
and
xor
pop
mov
jp
imul
sbb
pop
cmp
outsl
xchg
lret
cli
addr16
inc
pop
dec
mov
push
mov
les
rol
aam
xor
and
or
and
push
icebp
jp
dec
sbbb
xchg
cmp
movsl
aam
sahf
xlat
inc
xchg
inc
fadds
dec
and
jg
or
orl
pop
sahf
push
push
mov
and
scas
lret
shrb
cli
repz
sub
rcrb
test
inc
imul
mov
push
push
add
psadbw
cli
mov
xchg
dec
jecxz
jbe
pop
ffree
add
mov
cld
push
data16
mov
enter
xlat
xor
std
xor
inc
xchg
or
fwait
movl
dec
mov
jbe
jmp
cmp
push
mov
cmpsb
mov
push
es
xlat
sti
xor
cwtl
push
movsl
mov
test
or
loop
adc
sbb
cmpsl
mov
inc
es
mov
or
mov
adc
mov
cli
push
sbb
shrl
shll
inc
cld
notl
lds
push
or
fnstcw
or
or
or
std
pop
and
sub
ret
cmpsl
xlat
into
or
mov
repz
xchg
dec
and
and
xor
xor
into
push
gs
jne
inc
and
leave
loope
pop
or
jecxz
mov
stos
lods
pop
jge
and
scas
fisttpll
aad
imul
sbbl
dec
add
mov
adc
jne
xchg
nop
add
icebp
cwtl
pop
xlat
mov
aam
push
jne
sub
scas
sub
sahf
fsubs
mov
dec
lret
add
cmpsb
cmpb
loopne
push
fldcw
add
sahf
mov
xor
xlat
sti
xor
in
mov
ficomps
add
cmp
lods
lea
mov
cmpsl
xor
cmp
cwtl
push
call
std
and
aad
pop
fistps
lods
xchg
loope
push
dec
das
lret
lds
push
int
cs
mov
js
test
cmp
hlt
cmc
movsl
mov
insl
lahf
cmp
mov
daa
les
rcrl
mov
mov
sahf
fldt
pop
js
xchg
daa
cwtl
and
jl
or
lea
push
xor
dec
or
sbb
jno
push
out
push
inc
or
jbe
stc
in
ss
sbb
dec
xor
cmp
pop
jns
stos
call
cmp
push
pop
fidivrs
rol
mov
ss
xchg
pop
mov
push
pushf
enter
iret
sbb
loop
outsl
test
stc
push
and
mov
movsl
inc
xor
and
stos
jge
mov
inc
sub
mov
mov
push
std
pop
fcoms
call
cmp
sbb
scas
inc
rcrb
cwtl
jbe
dec
cld
push
cmp
std
push
outsb
aam
mov
dec
andl
shlb
and
jecxz
mov
lcall
or
ror
push
pop
inc
mov
lret
sarl
mov
out
jp
xchg
pop
xchg
mov
stos
bound
push
mov
cmp
dec
cmp
into
rolb
in
lods
aaa
ret
bound
ret
test
xor
inc
pop
jmp
lret
imul
xchg
add
stos
xor
js
adc
rolb
mov
fwait
xlat
addl
stc
mov
imul
jle
mov
leave
stos
pavgw
pusha
xlat
inc
sub
cmc
sub
ljmp
xchg
jbe
loop
mov
dec
mov
cld
push
nop
pop
pop
push
push
jmp
imul
dec
psrlq
loop
or
enter
lds
xor
lods
add
leave
or
call
cmp
fimuls
jg
test
lock
fildl
mov
inc
das
or
paddusw
or
pop
push
mov
mov
out
adc
xchg
xor
aaa
xchg
imul
test
pop
mov
sbb
inc
push
sub
in
addr16
movb
ljmp
clc
jmp
xor
ret
xor
in
pop
adc
aam
xchg
out
aad
insb
int3
xor
mov
outsb
out
sbb
jecxz
dec
dec
mov
or
cmp
iret
and
dec
rcll
in
das
lock
cmpsb
sbb
imulb
shlb
popf
ret
xchg
push
mov
data16
cwtl
ret
std
popf
push
cli
mov
cmp
mov
inc
sbb
push
xchg
movsb
int3
push
ret
in
push
push
lahf
jne
rorl
mov
shl
out
nop
decl
shlb
pushf
adc
stos
aas
pop
lcall
mov
out
imul
sbb
jae
in
repz
dec
aam
repz
push
scas
lods
inc
adcl
mov
mov
outsb
insb
pusha
aam
and
inc
orb
pop
mov
pop
dec
rolb
imulb
bound
cld
cmp
jo
icebp
ja
xchg
mov
fbstp
jg
sbb
xchg
pop
mulb
sub
loope
repz
lret
xchg
inc
icebp
add
xor
les
dec
cmp
mov
test
sbb
incl
out
ja
sub
in
pop
mov
ja
cmp
mov
mov
mov
sbb
int3
jo
or
dec
add
es
rcl
or
addl
out
les
and
xchg
and
mov
std
cld
sub
loopne
testb
jp
fdivl
pop
stos
sbb
xchg
ljmp
mov
test
scas
xor
mov
sbb
push
test
cli
jo
jl
cltd
pop
or
or
insl
or
and
adc
push
pushf
or
jle
cld
int
andl
mov
jno
stos
out
int3
push
aam
imul
outsl
inc
push
push
insl
sbb
int
stc
xchg
ss
insb
cmp
lcall
jae
movsl
popa
test
ljmp
mov
or
clc
lcall
in
mov
push
in
and
jae
and
insl
pop
jnp
mov
ret
mov
mov
icebp
cmpl
dec
ret
push
mov
sub
xor
mov
jae
data16
jo
subb
addb
push
mov
mov
mov
xor
mov
or
cmp
fisubl
cld
inc
popf
pop
mov
cmp
pushl
or
mov
popa
cmpsl
outsl
ret
cli
adc
pop
aaa
movsl
xchg
lahf
sarb
cmp
cmc
hlt
jne
les
adc
bound
sbb
add
movsl
repz
jmp
mov
inc
imul
popa
add
leave
add
int
movsb
and
in
ret
test
fdivs
int3
push
int
and
test
cld
ds
add
cmp
push
push
mov
jbe
das
xchg
imulb
sbb
in
sti
repz
leave
xchg
call
cwtl
adc
aam
mov
adc
lods
pop
inc
in
mov
fisubs
add
addr16
cwtl
adc
leave
not
cmc
mov
ljmp
int
test
add
mov
xor
dec
or
roll
lret
test
pop
or
jne
and
push
imul
pop
dec
ret
inc
es
sub
sti
mov
xchg
dec
std
gs
es
pop
mov
fadd
mov
push
or
cli
sub
inc
cmp
ret
jmp
rorb
out
dec
cmpsb
xchg
fbld
add
jb
add
pop
fstl
lret
jp
or
push
jo
addr16
and
daa
pop
hlt
inc
xchg
hlt
mov
daa
daa
icebp
mov
xchg
es
notb
movsl
jmp
sbb
push
fisubs
mov
xlat
xchg
sbb
xchg
andb
jnp
mov
loopne
int
call
jns
insw
inc
ja
cmp
mov
xchg
jb
jmp
mov
mov
in
idiv
in
xor
push
dec
sbb
rcr
loope
xor
lock
push
push
fiadds
in
stos
cmp
cmp
mov
fwait
leave
mov
rcll
push
sub
inc
fidivl
movsb
testb
pop
ficompl
popf
push
gs
test
push
dec
cmp
lods
cmpsl
cmp
adc
outsl
push
add
ror
js
mov
pop
sbb
mov
aas
xor
inc
mov
outsl
rcrb
ds
mov
fstl
daa
cmpsb
lods
xor
insl
sarl
outsl
fwait
xor
push
aaa
add
in
jle
jmp
pop
call
rcrl
jns
fstl
lods
call
fst
sub
and
icebp
in
fistl
mov
xchg
jecxz
inc
and
cli
cmc
inc
enter
fisttpl
idivb
or
xor
pop
addr16
pop
ljmp
aam
xchg
lods
fmull
cmp
ljmp
mov
test
cmp
out
xchg
push
dec
jnp
xor
das
aas
cld
nop
hlt
push
loopne
mov
iret
je
es
mov
cltd
daa
jmp
sub
cmp
movb
mov
xchg
xchg
and
stos
cmpsl
mov
sbb
xor
loop
int
jno
add
adc
push
std
sti
cli
stos
movsb
aas
and
cmp
insl
shrb
test
fimuls
xor
xchg
cmp
xchg
mov
adc
imul
lds
icebp
sub
dec
aaa
das
add
mov
xchg
jle
mov
push
sbb
pop
mov
pop
add
leave
mov
jle
sub
sbbb
inc
movsl
icebp
imul
dec
loope
daa
push
mov
out
mulb
jle
lret
dec
ds
adc
push
ja
enter
insl
mov
testb
shr
sub
adc
lcallw
or
into
je
push
or
jbe
mov
int
fisttpl
lea
dec
mov
int
mov
pop
repz
pop
push
mov
jg
xchg
jbe
or
pusha
cli
lcall
fisubs
add
jge
mov
into
imul
stos
sbb
fcoml
mov
in
fs
addb
or
imul
mov
pop
rclb
leave
cmp
push
nop
jb
push
subb
cwtl
adc
push
inc
mov
xchg
dec
push
add
movsl
sbbb
cs
adc
mov
adc
lods
and
inc
in
add
adc
push
call
aad
mov
das
lret
mov
add
lea
mov
or
sahf
insl
shll
sub
aaa
ret
xchg
rcll
inc
xchg
dec
push
push
adc
movl
mov
lret
movsb
pop
mov
pop
test
sbb
dec
jl
mov
lret
les
nop
loopne
js
in
test
mov
shlb
notl
push
fs
xchg
push
jb
test
lret
cwtl
inc
dec
mov
xchg
aas
mov
insl
cmc
or
jp
std
fsubs
add
notb
sub
push
dec
inc
fisubl
fwait
sti
jp
jnp
aad
cs
test
iret
push
dec
mov
movsb
repnz
jecxz
adc
out
mov
dec
das
popf
pop
lds
outsl
outsb
subl
icebp
sub
pop
pop
scas
cmp
mov
sbb
hlt
or
push
cmp
cmc
imul
in
fs
push
cmp
loopne
jo
mov
fs
cmp
jmp
cwtl
sahf
fwait
pop
les
filds
inc
scas
cltd
clc
xchg
rol
shlb
lret
adc
ret
das
int
jnp
fs
and
inc
push
push
filds
jo
test
jo
out
pop
jo
mov
or
imul
out
lcall
ja
loope
mov
cwtl
loop
scas
mov
sub
cmp
and
das
aaa
mov
and
mov
mov
mulb
idivb
outsl
sub
cmp
lret
mov
rorb
nop
jo
cmp
repnz
pusha
mov
sarl
jge
daa
dec
pop
jg
mov
mov
or
in
lret
fistpl
nop
sbb
sub
xchg
xor
ss
sti
mov
pop
jg
push
push
int
pusha
je
mov
lods
mov
les
popa
inc
in
shlb
jl,pn
adc
or
mov
pop
jmp
std
test
dec
jecxz
xchg
and
push
sub
inc
push
loop
sub
shl
jl
in
mov
or
push
or
vpcmpgtw
out
xor
je
ret
ret
sbb
mov
add
inc
imul
xor
add
xchg
mov
cmpsb
and
xor
or
xchg
xor
or
in
icebp
push
rclb
mov
lcall
loope,pn
fs
dec
jmp
mov
xchg
mov
and
xchg
mov
cmpsl
xchg
les
in
jno
dec
sub
push
push
movsl
jnp
xchg
pop
arpl
and
stos
hlt
std
outsb
xor
adc
lcall
or
inc
out
cli
cmp
popf
pusha
cmc
int3
rorl
ljmp
cmc
insb
jecxz
in
sub
data16
adc
sub
lahf
sub
fwait
push
jnp
dec
divl
or
jl
ret
add
pop
lcall
sub
fs
lods
dec
fisttpl
inc
bnd
xorl
stos
stc
repnz
or
out
push
push
jge
lea
xlat
hlt
add
insb
push
lret
sub
clc
enter
mov
push
xor
test
stos
lods
fsubrl
mov
clc
and
shrb
not
std
push
imul
ljmp
ss
mov
inc
das
pop
call
jnp
stos
adcb
stos
or
push
mov
imul
dec
ds
adc
sbb
fs
xchg
sub
idivb
push
add
mov
ja
inc
add
xchg
sahf
into
fidivrs
in
out
mov
inc
scas
mov
dec
jb
cmp
aam
mov
sub
daa
in
cmpsl
cmpsl
inc
jns
stos
mov
inc
cmp
movsl
xor
pop
test
sbb
and
fidivs
scas
jmp
sbb
insl
mov
rclb
stos
inc
std
push
mov
xchg
mov
and
dec
dec
push
mov
sbb
cmp
mov
mov
mov
aam
je,pn
mov
nop
imul
inc
mov
fstpl
mov
int3
in
sbb
lds
repnz
out
or
xchg
loopne
lods
cmpsl
mov
daa
jl
mov
jo
stos
popf
lret
sahf
insb
mov
mov
xchg
or
cwtl
or
lds
mov
adc
cmp
out
pop
imul
jecxz
xor
call
test
sbb
cmp
sbb
cmp
add
or
in
lods
xchg
mov
enter
xchg
and
test
mov
dec
addl
leave
inc
push
jns
divb
out
mov
inc
cmp
jns
cmp
jge
in
insb
outsb
lret
idiv
rcr
aas
pop
das
or
pop
xor
push
lcall
or
aaa
gs
int3
cmp
adc
cs
fwait
sbb
ds
jecxz
aaa
lods
pop
pop
jmp
mov
cmp
das
xchg
bound
pop
dec
jmp
es
jl
dec
addr16
xchg
sub
push
in
fldcw
pop
es
aaa
fdivs
xchg
pop
fbld
dec
fldcw
arpl
lcall
shll
scas
ja
sti
insb
add
std
sub
lds
mov
je
xor
dec
mov
cmp
fisttps
dec
rolb
push
push
lcall
rorb
loop
out
jb
lods
xchg
lds
repnz
adc
sub
ss
xchg
pop
int3
fildll
mov
outsl
mov
scas
xchg
mov
sub
arpl
lcall
jo
cmp
notb
adc
pusha
or
mov
push
add
or
dec
lods
mov
insl
xor
xchg
inc
mov
add
or
push
psubq
push
fdivr
orl
xlat
or
push
add
dec
jae
out
test
jae
ja
hlt
xor
push
sbb
into
pusha
insb
sbb
inc
dec
lds
outsl
rol
push
mov
scas
sbb
adc
cmc
int3
call
fldcw
sbb
sahf
xchg
lods
cmp
lcall
adc
fistl
and
sub
add
ljmp
cmpsb
xchg
ret
addl
sbb
or
pop
mov
int3
mov
pushf
mov
pop
add
sbb
cmp
push
leave
call
nop
push
sub
sub
sub
popa
sahf
pop
sbb
inc
mov
dec
mov
mull
fdivs
test
pop
and
in
insl
sbb
dec
addr16
loopne
mov
fnstsw
jg
insl
pop
rorb
sbb
jne
test
repz
pop
push
jecxz
mov
add
jno
inc
mov
mov
aam
rcr
lods
jl
test
dec
jp
out
xor
dec
scas
daa
pop
push
lcall
mov
and
cmpsl
jecxz
and
inc
sub
mov
cmc
inc
mov
std
addr16
clc
mov
sahf
test
jl
jo
addb
das
dec
mov
fs
inc
add
daa
add
pop
jge
cltd
and
add
scas
stos
cld
insb
enter
imul
adc
negl
dec
add
jp
ds
push
call
or
mov
ret
mov
xor
imul
sahf
ds
stos
pop
mov
jl
das
pop
mov
mov
dec
scas
xor
xlat
cmp
and
mov
arpl
pop
add
ret
adc
clc
mulb
ret
or
cmpsl
pop
or
mov
dec
sbb
pop
push
idiv
or
adc
mov
cmp
sub
sbb
add
ljmp
enter
bound
xor
dec
mov
pop
sbb
lahf
add
adc
add
aaa
jnp
nop
dec
mov
pop
nop
sub
xor
and
xchg
jle
xchg
cmc
add
imul
xor
int3
lret
mov
dec
and
push
sbb
pop
fmulp
test
mov
adc
and
test
push
inc
sub
arpl
enter
sarl
dec
push
mov
mov
mov
add
loopne
add
mov
xor
or
lahf
lret
pop
call
test
mov
push
push
pushl
lods
les
add
xor
mov
mov
sub
dec
cld
xchg
vandps
jle
movsl
cmpsb
or
lods
out
jo
stc
int
js
rclb
jb
sub
sti
jp
or
lods
sub
stos
xlat
xchg
jnp
scas
jle
loop
dec
xor
mov
xchg
mov
or
cmp
pushf
jecxz
adc
sub
mov
adc
int
stos
dec
dec
mov
fmul
sbb
test
cmp
lods
rol
adc
shll
testb
fcmovnbe
loope
addr16
cmpsl
pop
pop
xchg
mov
lds
in
addr16
add
jle
bnd
jge
cmp
dec
das
shr
jle
jg
ljmp
in
scas
jb
lock
outsb
add
xchg
sbb
mov
mov
in
adc
iret
repnz
cltd
and
je
xor
xchg
dec
sub
xlat
mov
jge
sahf
inc
cmpsb
mov
ljmp
push
adc
jo
ret
test
pop
lods
inc
jge
notb
sub
add
out
clc
repnz
sub
dec
dec
push
pop
sub
into
fldenv
lods
push
jle
inc
daa
sbbl
loop
bound
cld
ljmp
ljmp
xchg
fistpll
imul
negb
add
popa
push
ret
popf
sbb
movsb
inc
andl
ds
dec
imul
dec
rorl
mov
std
repnz
and
jmp
stos
or
adc
pusha
pushl
fs
das
jl
jb
jecxz
pop
je
push
ja
jg
xchg
dec
jbe
sbb
push
push
nop
jae
jle
sti
sub
sbb
xor
and
and
fisubrl
das
cmc
insl
rorl
fdivrp
inc
pop
pop
popa
dec
in
mov
mov
or
add
jp
dec
push
mov
lock
mov
push
pop
sbb
sub
rcr
loope
bound
mov
mov
sti
pop
out
sbb
push
fmulp
and
in
mov
in
repnz
lcall
mov
mov
inc
mov
mov
xlat
sbb
clc
add
push
int3
movb
clc
jo
fdivl
jne
out
sbb
subl
cmpl
fldenv
push
and
jle
lock
shrb
sbb
adc
sub
movsb
fiadds
pop
fcompl
adc
addl
nop
or
repnz
arpl
cmp
xor
pop
popf
incl
icebp
inc
mov
repnz
fsts
enter
add
in
push
xchg
sub
lahf
popl
sub
jge
mov
push
jp
das
inc
fstpl
mov
pop
mov
mov
push
out
dec
sub
or
in
inc
ret
pop
loopne
dec
pop
sahf
dec
test
mov
arpl
je
scas
mov
fld
xor
es
shrb
sbb
mov
test
mov
sub
jecxz
dec
aad
push
movsb
adc
std
and
inc
push
out
pop
cmp
je
mov
mov
test
sti
popa
stc
test
aad
jae
movsl
or
xor
adc
xor
dec
fwait
mov
mov
or
pop
add
push
mov
std
push
sub
clc
lods
aas
xchg
hlt
mov
sub
repz
sahf
negb
into
sbbb
dec
jno
jle
ja
sbb
mov
mov
adc
mov
jbe
or
jnp
out
imul
push
insl
popf
popl
mov
cvtps2pd
es
inc
inc
xchg
sbb
sub
fstps
hlt
mulb
xchg
jmp
and
inc
aam
jo
pop
stc
xor
adc
pop
adc
je
jo
lea
xor
xchg
loop
sbb
cmpsb
inc
xor
xchg
adc
jmp
lea
and
or
push
imul
mov
xor
or
xchg
mov
test
mulb
pop
xor
pop
pop
fimuls
adc
mov
jecxz
shll
lds
and
int
xchg
adc
mov
inc
jbe
iret
xchg
mov
vmread
jmp
xchg
pop
mov
std
scas
leave
ss
add
sbb
xchg
pop
push
jb
lcall
cli
out
dec
repnz
mov
iret
mov
mov
push
xchg
jmp
xchg
imul
enter
dec
or
int3
mov
push
dec
jns
dec
xchg
sub
mov
out
jmp
imul
mulb
or
icebp
in
push
lret
xchg
or
stos
stos
xor
lret
mov
pop
cli
xlat
sbb
fwait
movsb
nopl
cmpsl
jns
pusha
push
mov
les
mov
mov
push
inc
push
mov
mov
and
out
out
fdivp
ljmp
add
pop
jmp
test
pusha
enter
jbe
ret
xchg
enter
data16
popa
pushf
mov
sbb
jmp
fdivs
push
repnz
cmp
sub
push
sbb
inc
xchg
out
jnp
les
lret
lcall
inc
inc
pushl
and
jae
pop
xchg
push
mov
stos
dec
jge
ljmp
xor
jg
xchg
sbb
outsb
iret
iret
rolb
inc
lret
nop
jne
mov
sbb
aam
and
push
int
inc
inc
aas
aas
nop
loop
mov
lret
outsb
jp
fs
pop
jae
lods
mov
idiv
andl
lods
inc
decb
mov
jmp
jge
movsb
sub
leave
adcl
lcall
cwtl
es
and
sar
pushf
cmpsl
push
jmp
dec
push
dec
push
sbb
lds
dec
mov
loopne
aas
xchg
ficomps
pop
cmp
push
add
cmc
fwait
jmp
incb
mov
jne
dec
jp
sbb
xchg
fwait
push
inc
sbb
or
insb
in
jo
leave
push
cli
sub
sub
pop
test
fsubrl
scas
and
fbstp
rclb
mov
mov
test
xchg
sbb
aas
into
cmpsb
jo
cmp
mov
bound
movsl
lods
mov
push
inc
aaa
clc
movsl
call
mov
out
sub
xchg
cmpsl
movsb
adc
mov
lahf
leave
in
sbb
fldcw
mov
pushf
push
insb
xor
cld
enter
arpl
fisttpl
mov
pop
pop
ds
or
or
add
loopne
dec
movsb
bound
sub
mov
aam
add
popf
out
xor
mov
or
mov
sbb
sub
mov
cld
aas
xor
outsb
jl
mov
bound
je
adc
mov
or
inc
out
pop
sub
and
mov
jae
jmp
mov
dec
push
dec
jnp
aad
xor
enter
or
push
cmp
xchg
and
and
and
xorb
add
mov
movsb
dec
add
cmc
cmp
pop
sub
js
lret
in
sub
sbb
fsts
out
pop
cli
scas
in
xor
mov
sub
pop
xchg
mov
lcall
cmp
pop
in
das
jg
into
fdivrl
and
movsl
adc
pop
leave
and
in
das
xchg
in
or
sbb
or
fucomip
pop
sbb
jns
jne
imul
shl
enter
dec
dec
fsubrl
xor
inc
jo
inc
push
xchg
sbb
dec
pop
jno
cmpsl
mov
or
or
dec
add
push
out
icebp
xchg
mov
sahf
loope
add
addr16
call
dec
out
xor
fisttpl
insl
pop
fildl
ds
ljmp
pop
xor
scas
pop
jle
lds
stos
sub
inc
mov
or
inc
test
mov
call
test
fwait
les
mov
and
push
adc
pop
or
or
mov
xor
mov
mov
daa
mov
gs
and
xchg
ss
add
add
test
or
nop
cli
and
add
lods
pop
or
into
sub
enter
daa
daa
sub
sbb
and
aas
lds
xchg
or
xor
aad
or
jno
sbb
jnp
std
outsl
add
pop
jbe
mov
mov
push
or
and
and
sub
sub
push
adc
sahf
rcr
stos
outsb
rol
cwtl
and
ds
insl
insl
in
xor
mov
add
mov
popa
add
dec
jae
push
mov
sbb
test
cmpsb
cmp
loopne
or
jecxz
sub
idivl
psubsb
andl
into
xchg
sub
sub
fwait
mov
mov
mov
mov
dec
imul
pop
filds
stos
jmp
cmpsb
loope
mov
xchg
daa
push
push
or
adc
lds
and
or
imul
test
mov
int
leave
aaa
in
fadd
mov
daa
jae
pop
xchg
adc
cmpsl
push
fwait
pop
cmpsb
sub
aad
cwtl
movsl
sub
mov
dec
jae
clc
mul
or
es
add
aam
inc
insl
pop
out
ds
jo
xchg
inc
adc
mov
icebp
clc
cmp
jnp
aam
es
or
call
jmp
mov
vaddsubps
dec
pop
jns
repz
adc
jo
jge
inc
bound
fistpll
lods
in
jg
sbb
fldt
mov
fucomp
inc
movsl
mov
cmp
test
mov
loope
dec
repnz
mov
pop
daa
out
xchg
jnp
ljmp
mov
xchg
xor
mov
lret
adcl
lahf
mov
fists
shrb
daa
daa
rcrl
cld
jle
lahf
mov
test
pop
mov
mov
mov
test
inc
xor
or
loope
mov
ret
pop
gs
inc
dec
or
mov
and
xor
push
xchg
jae
ja
adc
push
add
out
data16
cmp
jg
seta
push
insl
push
or
popf
or
xchg
pop
loope
xor
into
xor
out
test
in
mov
and
adc
or
sbb
ret
mov
cmp
mov
popf
pop
adc
pop
popa
subb
or
test
mov
jmp
cmc
ss
mov
or
adc
imul
imul
pop
loopew
mov
fisubrl
bound
js
std
jb
pop
daa
fwait
andb
jg
push
in
push
or
rolb
scas
lahf
cwtl
dec
xchg
jae
cld
mov
loope
push
mov
xor
mov
jge
mov
aad
xchg
jmp
mov
gs
insl
mov
sahf
jns
pop
inc
mov
stc
mov
sbb
adc
lret
ja
xchg
xchg
aad
sbb
pextrw
es
pop
add
in
pop
or
pushf
ficompl
mov
in
loope
aas
adc
sti
push
cmp
pop
add
in
sbb
mov
xchg
fmul
cmp
nop
imul
cmpb
mov
mov
ja
js
out
xor
sbb
negl
mov
sbb
scas
mov
and
movsl
or
sub
add
mov
dec
test
adc
dec
mov
jne
je
xor
test
pop
pusha
fwait
in
fcoml
les
jo
mov
inc
sub
dec
das
cmc
dec
push
mov
or
sti
aad
inc
arpl
movsl
fnstcw
sahf
mov
and
mov
imul
jbe
shlb
or
outsb
sbb
ret
push
jp
nop
and
and
in
add
mov
jae
push
loop
fdivr
dec
mov
aad
mov
xchg
pop
cmp
xor
or
jno
mov
sub
pop
lea
insl
arpl
sti
sbb
add
cmp
xchg
rolb
sbb
mov
mov
jl
out
pushf
cmp
xchg
shll
jmp
xchg
dec
mov
push
adc
das
das
jp,pn
mov
out
mov
js
jno
es
jbe
out
push
push
or
mov
mov
mov
xor
rcrl
push
lea
mov
movsl
cmpsl
cvtps2pd
adc
leave
push
jnp
popa
pop
sbb
jecxz
mov
inc
xchg
leave
decl
dec
mov
imul
add
imul
dec
in
xor
mov
xchg
dec
and
lds
sub
js
dec
sub
fs
xor
fidivrs
xor
pop
lcall
lret
jno
imul
movsl
dec
sti
movsb
sbb
adc
mov
xchg
sbb
mov
in
es
cmpsb
dec
mov
jae
jl
je
stos
cs
mov
mov
seto
dec
ja
mov
or
loop
push
pop
sub
mov
jmp
stos
pop
dec
sahf
and
add
jge
inc
xchg
repz
cmc
pop
and
fs
push
cmp
mov
mov
stos
test
mov
push
in
xchg
xchg
lods
jo
adc
and
das
jns
sbb
sub
std
mov
adc
insb
lcall
dec
lods
jmp
mov
cs
xor
repnz
movsb
adc
gs
adc
and
xor
sbb
sbb
dec
mov
pop
shl
data16
xchg
int3
pushf
push
ret
int
sbb
loopne
push
ja
xchg
inc
ds
inc
xchg
mov
shrd
imul
pop
adc
daa
fisttps
xchg
mov
fcom
ret
fnsave
aad
cs
subl
fldpi
jo
fnstcw
clc
flds
cmp
mov
sub
jnp
xchg
xchg
scas
ss
mov
sub
mov
lea
das
fildl
mov
push
and
mov
bound
add
sub
pop
jl
fsubl
adc
sbb
sub
mov
fstpl
rcrl
adc
enter
xchg
ret
cli
fmuls
or
mov
mov
lods
add
mov
aas
or
rorl
jp
adcl
sbb
in
in
dec
mov
jbe
pop
mov
sub
jecxz
lock
mov
mov
cli
mov
pop
mov
push
push
stos
push
arpl
cwtl
sub
pop
cld
inc
out
or
es
cmp
xor
xchg
and
sub
sbb
loopne
popa
ret
or
fiadds
or
dec
mov
cmp
dec
movsb
dec
rorl
and
inc
das
jnp
lea
int3
lods
pop
sbb
xchg
inc
lods
gs
mov
mov
xlat
in
dec
ds
out
pop
stos
push
sbb
xlat
aas
in
test
mov
mov
shl
push
into
mov
jmp
dec
cli
shrl
lock
adc
sbb
popa
sti
xor
icebp
fs
and
outsb
add
sub
cmp
push
bound
lds
aas
push
std
repnz
call
loope
sub
jl
addl
add
jle
or
icebp
jle
or
or
jge
sub
dec
stos
ljmp
cmp
insb
sbb
dec
addr16
jno
xchg
fucomip
add
das
pop
in
mov
jbe
or
cmp
fsubp
shrb
movsb
pop
es
mov
inc
mov
mov
das
enter
sbbl
imulb
mov
out
jmp
shl
add
bound
xchg
add
jg
outsb
jb
mov
mov
dec
stos
test
out
xchg
rclb
aaa
and
in
in
jmp
xor
mov
and
pop
pop
sub
inc
je
jle
jg
sbb
or
cmpl
adc
pop
fsubs
or
outsl
sub
iret
popa
scas
ret
cmp
in
cmp
sub
rcl
or
mov
rcl
test
and
mov
jge
repz
push
ljmp
ret
sbb
popa
adc
je
ds
orb
cmp
dec
fldt
loopne
dec
aas
into
sbb
sbbb
dec
cmp
in
jl
movsb
jecxz
xor
in
addr16
jne
fs
or
jbe
das
arpl
lds
push
mov
in
jo
push
xchg
fsubrl
pop
mov
aaa
dec
push
popf
push
js
jle
addr16
cmp
fbstp
daa
divl
out
adc
aam
daa
imul
lock
jae
cmp
jge
or
imul
rcrb
sbb
and
loop
adc
cmpsl
dec
and
pop
sbb
pop
mov
ret
in
xor
mov
mov
or
addb
lret
in
xchg
lds
mov
jmp
imul
mov
jb
repz
iret
scas
pop
mov
adc
xor
test
push
xchg
xchg
jae
cmp
xchg
mov
cmp
int
cmp
mov
jne
jle
mov
adc
subb
dec
addl
push
xchg
cmovae
jecxz
mov
inc
dec
jl
sbb
jbe
sbb
gs
mov
iret
cwtl
out
mov
out
aaa
sbb
lahf
jbe
lcall
push
add
xchg
aam
cltd
jno
movsb
jg
mov
test
mov
popa
jecxz
pop
push
shlb
movb
les
jo
cmp
xchg
movsl
xor
fcmovnu
lea
scas
shlb
dec
jle
movsl
stc
mov
orl
lea
mov
movsb
jp
pop
bound
out
and
inc
and
add
les
sbb
add
mov
pop
pop
push
les
inc
ljmp
pop
add
repnz
sub
cmp
sbb
dec
cmc
test
mov
mov
jmp
sbb
mov
test
ljmp
cmp
jo
mov
aad
lock
outsb
lods
jge
pop
and
leave
or
jbe
addr16
insl
mov
dec
inc
loopne
js
ja
test
jb
fimuls
das
arpl
push
mov
mov
dec
enter
and
xor
imul
lcall
mov
inc
shlb
loopne
movl
out
das
jnp
jl
movsb
ljmp
sar
dec
xchg
stos
xor
leave
cmp
push
imull
inc
inc
adc
stc
ds
lea
cmpsl
call
fiadds
jg
dec
xchg
sub
sti
inc
out
xchg
out
sub
mov
mov
imul
cmpl
mov
cmp
sar
or
push
fstp
pop
sub
and
jle
cs
adc
out
imul
in
or
jne
or
xor
lods
xchg
imul
clc
and
sahf
or
idivl
sub
sbbb
aas
aad
das
cltd
mov
pop
pop
push
subb
aas
fnstcw
cmpsl
lahf
and
or
fsubrs
daa
push
movsl
push
cs
ss
ljmp
cmp
imul
mov
sub
and
sti
push
jb
imul
cmp
cmc
stos
dec
jp
insb
psubw
and
xorl
add
mov
popa
xor
pusha
add
push
test
jbe
popa
mov
loop
cltd
sub
insl
movsb
stc
mov
jp
fildll
add
mov
enter
add
and
leave
or
dec
int3
pop
test
inc
lods
pop
sbb
adc
pop
xchg
xchg
imul
cld
add
popf
lods
mov
push
stc
mov
je
xorb
fstps
adc
sti
je
add
loop
add
push
rolb
syscall
stos
leave
es
sahf
dec
mov
add
push
inc
adc
fnstsw
cmp
cmp
adc
test
rclb
ljmp
je
loopne
ret
repz
aad
sub
hlt
dec
ljmp
hlt
bound
xchg
rcrl
xor
push
jl
lret
mov
xor
outsl
aad
shrb
lret
add
rorb
xchg
cmpsb
mov
negb
mov
fdiv
jbe
rorl
sub
pop
jg,pn
sbb
adcl
fs
fs
or
mov
dec
test
and
cmpsl
and
mov
mov
pop
sub
std
pop
les
sub
dec
inc
mov
push
jmp
inc
frstor
jge
in
stc
adc
sarl
or
xchg
fwait
mov
jae
test
jno
and
pop
xchg
mov
daa
lret
xchg
jo
test
pushf
pop
adc
lods
mov
pop
scas
scas
pop
push
aam
push
scas
jecxz
idivl
mov
jnp
mov
pop
mov
je
jae
lcall
cwtl
jno
cmp
mov
out
ja
int3
nop
ror
mov
push
outsb
insb
lods
sub
loope
cmc
cmp
pop
mov
pop
adc
daa
jl
mov
mov
mov
adc
xchg
out
dec
dec
mov
stc
inc
cmp
jb
iret
sbb
jge
add
inc
ljmp
push
adc
div
push
sahf
sbb
jne
imul
pop
ljmp
cs
mov
lods
mov
sub
pop
xor
sbb
jno
xchg
repz
fnstsw
push
rcrb
or
or
inc
mov
bound
jae
lock
or
mov
inc
dec
inc
jg
and
sbb
cmp
int
dec
aad
repz
outsl
in
jge
fadds
mov
cmp
lret
icebp
push
inc
jge
inc
rorb
and
daa
sti
pop
xchg
js
push
cwtl
pop
insl
jne
jno
daa
shrb
mov
pop
ret
cld
push
and
das
and
enter
mov
ljmp
shl
mov
iret
sbb
mov
sbb
lods
movl
es
in
add
fcomp
lret
and
stos
lcall
mov
sbb
imul
je
imul
xor
iret
sahf
movsl
gs
es
and
ljmp
mov
inc
jg
pop
push
push
mov
add
aam
insl
adc
aaa
sbb
fsubrp
push
sbb
mov
push
sbbl
sbb
mov
in
and
adc
cmc
jmp
pop
daa
pop
ret
push
pop
add
adc
sbb
inc
lahf
pop
lcall
xor
clc
jecxz
cwtl
dec
ds
orl
jge
sub
ret
outsb
xchg
adc
out
shrl
add
xchg
jmp
pop
sbb
pop
push
or
sub
adc
and
and
testl
pop
pop
and
repz
bound
mov
cs
aas
xor
lret
cmp
push
mov
sub
lods
and
int3
jne
imul
jo
sbb
push
stc
push
mov
cmp
mov
dec
into
xchg
imul
push
mov
xor
aaa
mov
inc
pop
cld
mov
inc
push
int3
fxch
dec
cmp
lcall
gs
out
mov
outsl
into
and
sbb
pusha
in
lock
cmp
xchg
call
push
add
sbb
popa
dec
ja
xor
and
scas
outsb
out
lock
pop
rolb
bound
and
cltd
xor
stc
lahf
test
or
lods
jl
xchg
and
pusha
lds
xchg
icebp
jg
repnz
sbb
push
pop
movsb
sbb
idivb
insl
ja
cltd
mov
or
iret
mov
jmp
jne
push
ret
lahf
sti
jg
leave
mov
jle
das
rcll
leave
in
adc
ja
mov
fwait
dec
int3
dec
add
lods
fndisi(8087
notl
lcall
stos
push
jbe
adc
cmc
nop
mov
loope
mov
adc
fwait
add
push
pop
sbbl
push
mov
cltd
dec
sub
ss
sbb
rclb
cmpb
pop
xor
sbb
scas
test
fcmove
push
aaa
or
sub
dec
arpl
pop
xor
lcall
lock
jb
mov
scas
sbb
mov
jge
pop
imul
pop
add
lahf
repz
mov
lret
ja
push
mov
mov
xor
mov
xor
or
int3
pop
inc
push
push
mov
dec
sub
mov
lods
cmp
or
aam
mov
in
and
inc
shrl
mov
cld
push
iret
jb
jle
or
shll
loopne
movsb
pop
pop
mov
add
pop
push
adc
dec
ja
lods
shrb
inc
idiv
jle
sub
test
stos
cmp
pop
mov
adc
pop
fucompp
repnz
or
xor
adc
xchg
sbb
call
mov
icebp
lret
dec
mov
inc
mov
mov
pop
in
sbb
jne
test
cmpsb
xchg
divb
mov
mov
lret
pop
movsb
xor
call
cli
mov
repnz
andb
xor
rclb
jmp
sub
ficomps
sbb
jl
cmp
ror
add
jne
clc
sub
inc
dec
sarb
push
in
popa
xor
and
add
dec
fnstenv
xchg
pop
pop
xchg
xchg
xchg
mov
movsb
call
lret
clc
adc
lret
loope
cmp
daa
adc
pushf
pop
push
jb
daa
cmp
mov
jo
icebp
int
ljmp
add
jae
leave
lods
out
mov
cmp
test
std
in
stc
sub
adc
or
aaa
ja
daa
pushf
sub
arpl
jnp
jmp
call
rcl
sahf
dec
outsb
cmpsb
in
push
xor
jmp
js
dec
aaa
lock
mov
add
inc
and
mov
sub
insb
inc
xchg
shl
jns
and
xchg
push
ffree
int
stos
inc
xchg
jno
or
push
push
sub
push
push
inc
sbb
ljmp
jecxz
xchg
aaa
dec
outsl
pop
repz
push
pop
sub
push
lahf
push
push
test
add
hlt
les
and
lds
mov
out
sti
pop
jmp
pop
stc
ja
test
imul
mov
cli
add
fsts
cli
jge
hlt
cwtl
push
sub
push
aam
cmpl
das
testl
jl
jl
sbb
stc
inc
repnz
outsb
mov
mov
add
leave
or
fdiv
xchg
inc
xor
in
push
test
insb
dec
or
jnp
mov
cmpsb
daa
testb
sub
lahf
scas
jecxz
dec
out
mov
and
push
out
sbb
mov
jmp
pop
sbb
jle
cmpsl
movsb
fldl
dec
icebp
pop
shll
jmp
xchg
arpl
sub
lock
push
cmp
push
mov
lds
push
lea
test
mov
cmp
jge
movsb
ret
mov
sub
adc
adc
enter
or
or
pop
stos
pusha
adc
sbb
add
lahf
int3
and
adc
nop
adcl
int
fmull
mov
jo
mov
cmc
sbb
mov
xchg
push
mov
shll
out
lea
adc
fldcw
outsb
fnsave
fmuls
mov
aam
sbb
enter
xchg
jecxz
jge
clc
and
repz
cmp
lret
repz
in
cmp
bound
cwtl
push
cltd
rclb
pop
mov
rol
mov
fs
lods
lock
bnd
lcall
fwait
outsl
clc
pop
and
push
jle
es
adc
mulb
inc
leave
jns
inc
or
or
adc
lods
js
fsubrs
pop
push
je
out
ss
enter
repnz
cmp
dec
push
cmpsl
in
lcall
adc
popf
fwait
pusha
push
scas
jmp
jns
push
cmp
push
orl
std
imul
lcall
sub
push
loope
pusha
js
popf
adc
add
in
adc
sbb
jle
pop
mov
movsl
loopne
dec
incl
xchg
daa
pop
cmp
mov
xchg
iret
inc
inc
adc
mov
pop
cmc
int3
pop
outsb
add
data16
jno
xchg
cmp
daa
js
enter
pop
sub
mov
dec
filds
sub
push
int
imul
fcoms
push
and
cmp
repnz
push
out
int3
add
fs
stc
insb
fimuls
nop
int3
incl
sahf
xchg
xor
mov
movsl
jns
xor
repz
loope
mov
inc
sahf
mov
fldl
orl
xchg
mov
hlt
pusha
popa
dec
shlb
shl
sbb
aaa
in
insl
xchg
and
inc
into
sub
arpl
pop
rcll
aad
xchg
pop
add
dec
xor
adc
or
ljmp
in
loopne
dec
stos
xor
ficompl
push
bound
pop
cmpsb
loope
inc
pop
dec
test
push
xchg
ret
mov
mov
mov
pop
xor
dec
mov
incl
pop
inc
ret
lret
cmp
sub
push
xor
imul
pop
js
mov
cmpsl
ret
clc
out
rcrl
and
dec
inc
pop
ret
adc
xchg
mov
xchg
pop
and
mov
mov
mov
inc
nop
mov
in
imul
call
adc
xchg
mov
and
mov
sbb
jmp
inc
adcb
jae
cmc
aam
outsb
subl
cmp
daa
test
imul
js
xchg
scas
inc
jg
sub
imul
adc
fimull
xchg
add
repz
gs
das
outsl
ret
das
xchg
sbb
aad
jbe
test
and
pop
fs
inc
or
add
inc
mov
movsl
lock
xchg
aas
push
jb
push
push
insl
in
sbb
and
push
jge
insb
and
and
inc
push
lods
divl
das
cs
sbb
fildll
nop
call
nop
andb
xchg
add
xchg
xchg
mov
adc
shrb
popf
loope
rcr
jmp
lea
mov
decb
jno
loop
daa
add
sbb
jo
je
mov
loope
mov
pop
test
fdivp
xor
test
insl
jecxz
inc
cmp
mov
cli
pop
popa
push
repnz
add
subb
aas
test
idiv
mov
push
ss
lods
pop
out
fisubrs
ret
xchg
pop
dec
addr16
push
sbb
cmp
cltd
sbb
pop
test
sub
loop
int3
es
push
mov
inc
mov
call
shlb
push
cmp
push
fidivl
sti
test
das
add
sahf
mov
cmp
dec
dec
adc
xchg
xchg
in
cmp
out
fs
adc
stos
fcomps
je
mov
inc
out
shlb
filds
pop
jae
dec
dec
pop
or
testb
cli
lea
loope
ret
sbb
jge
dec
adc
pop
add
sysret
inc
out
push
int
lods
adc
es
popf
js
pushf
hlt
das
sti
add
pop
jne
dec
inc
push
sbb
sbb
fnsave
jmp
xor
insb
adc
dec
int3
jmp
hlt
sub
xchg
push
adc
xchg
je
adc
iret
cwtl
mov
inc
jmp
aam
jecxz
pop
out
gs
xor
out
push
ret
stos
test
std
dec
je
inc
test
ss
mov
arpl
jnp
jbe
fdivs
mov
and
pop
pop
mov
std
dec
sub
outsl
ficoms
and
cltd
add
and
adc
push
cmpsb
incb
int3
cmp
rcrb
and
mov
das
sub
push
jbe
mov
movsb
push
lret
and
xchg
pop
sahf
loope
jle
mul
test
adc
popa
fidivs
outsl
push
mov
cwtl
push
lahf
jmp
ss
and
iret
fcomps
sbb
jg
in
push
loopne
or
mov
mov
mov
push
shrl
and
icebp
imul
rorb
dec
std
mov
adc
aaa
sbb
out
es
nop
outsl
loope
xchg
inc
popa
pushf
mov
mov
xchg
loope
push
mov
adc
test
push
rorb
mov
mov
sbb
inc
jge
lods
adc
cmc
js
loopne
jne
icebp
daa
mov
xchg
imul
nop
cmc
fcomip
das
jmp
scas
orl
dec
push
test
inc
pop
xchg
or
push
bndstx
jg
dec
loope
mov
and
dec
lods
jne
and
sbb
int
cmpsl
fldt
mov
mov
mov
push
xchg
inc
fwait
xor
bnd
push
cs
rolb
rol
xor
pop
addr16
rcl
push
pop
gs
adc
cmpsb
push
sub
xchg
mov
sbb
xor
lods
sbb
xchg
mov
sbb
dec
cmp
push
stos
sub
hlt
aad
mov
push
clc
pushf
sti
cs
std
dec
into
dec
ret
jae
cmp
imul
sti
pop
scas
jae
jecxz
pop
mov
sub
mov
push
bnd
rorl
aad
xor
sub
outsb
sub
jo
stos
nop
or
and
adcb
enter
xchg
cmp
mov
insb
mov
pop
add
inc
rorb
adc
pop
cmp
fnstsw
adcb
ds
and
add
jmp
xchg
ljmp
into
cld
ss
shrl
sti
test
pop
call
sbb
xor
fadd
cli
icebp
into
pop
jle
in
rorl
fcomps
arpl
mov
mov
pusha
add
sub
inc
cmp
jge
das
adc
insb
aad
sub
cmp
push
mov
out
jne
add
jo
dec
ss
or
ret
cli
sub
test
jb
test
enter
push
dec
xchg
and
mov
inc
sbb
out
movsl
add
in
mov
cmpsb
push
stc
stos
pop
mov
ljmp
pop
out
xor
mov
subl
movl
je
int
fs
nop
adc
mov
pop
mov
sbb
sbb
cmp
data16
and
cmpsb
mov
clc
sub
or
pusha
aad
icebp
lret
jns
mov
mov
aad
xchg
mov
xor
test
pop
xlat
xor
movsb
test
aam
stos
mov
cltd
pop
mov
jmp
scas
ljmp
stos
mov
xchg
stc
loop
stos
dec
inc
lret
rcrl
mov
adc
xlat
add
xor
adc
lahf
adc
and
mov
imul
pusha
mov
mov
lods
cmp
sbb
mov
fs
imul
sub
cwtl
icebp
shll
js
ficoml
mov
stc
aas
imul
sub
mov
dec
out
loop,pn
or
push
xchg
test
adc
lahf
rol
mov
hlt
fs
stc
or
cld
mov
in
jmp
mov
and
jno
cli
push
lea
loope
mov
cmc
sub
push
add
sbb
jle
testb
mov
ja
les
jnp
ja
xor
sbb
mov
cmpsl
test
int
xlat
std
scas
dec
lds
inc
dec
lds
jno
sti
or
and
out
call
sbb
push
push
test
mov
mov
lods
shr
sbb
imul
push
dec
sbb
cli
or
nop
jge
mov
jecxz
xchg
sub
loopne
xchg
test
sbb
dec
iret
jge
ljmp
xchg
in
push
les
xchg
add
scas
clc
lcall
fld
push
rolb
xor
fmuls
mov
sbb
sbb
mov
testb
fmul
mov
movsl
fdivrs
out
push
xor
sbb
xor
sub
dec
fildll
stc
ja
loope
push
add
aad
ret
mov
and
xchg
mov
push
mov
fs
enter
dec
daa
leave
jecxz
fiaddl
xchg
sbb
sub
sti
adc
stos
in
arpl
in
in
js
mov
adc
push
xchg
cmc
xorl
aaa
xchg
add
jbe
add
jo
es
nop
jno
fldl
push
and
in
sbb
rolb
push
or
incl
dec
mov
mov
stos
adc
clc
jp
sbb
stos
push
divl
in
push
push
loop
daa
adc
mov
insl
iret
out
sub
jmp
jecxz
daa
fstps
mov
mov
xor
mov
push
negl
addb
sub
bound
out
xchg
repz
fistps
sbb
dec
xchg
inc
les
pop
loope
jo
loop
jo
mov
out
rorl
test
ret
je
lds
sub
loopne
sbb
cwtl
inc
adc
movl
das
adc
jle
jge
or
int3
scas
cmp
mov
cmpsl
fcoms
or
xchg
imul
adc
xchg
ret
dec
daa
sub
rcr
dec
pop
mov
lods
xchg
mov
mov
stc
xor
sbb
aas
mov
or
pop
dec
pop
jmp
shl
mov
mov
lea
sahf
mov
or
push
cmp
fisttps
jp
mov
ret
add
add
test
mov
fwait
jmp
xchg
sub
sti
mov
fs
lret
mov
rcrb
dec
out
stos
pop
xor
push
pop
movsb
outsl
sub
inc
enter
subb
movsl
aad
stos
cs
cld
cmc
stos
or
push
pop
lock
pop
loop
call
fstl
xchg
dec
out
arpl
js
shlb
stos
movsl
sti
mov
mov
idivl
ret
out
imul
sub
jo
push
mov
mov
sbb
dec
adc
mov
mov
lds
add
cli
sbb
jge
lods
lds
inc
imull
xor
xlat
scas
insb
pop
addr16
push
insl
or
push
data16
bound
sbb
les
cmp
lcall
cmp
loope
into
xor
push
lock
cmp
shrb
add
in
add
mov
mov
test
xchg
mov
shll
out
addr16
jbe
jp
adc
ljmp
in
sahf
das
adc
hlt
ret
pop
sbb
lret
adc
dec
jg
pushf
shlb
rol
mov
repz
sar
push
loope
adc
ljmpw
decb
fimuls
xchg
inc
adc
inc
add
nop
adc
mov
or
adc
push
imul
scas
jns
jbe
xchg
sbbl
scas
inc
jle
mov
xchg
popf
xchg
pop
xor
dec
cmp
push
outsb
jb
and
inc
inc
and
pop
push
out
repnz
cwtl
xchg
pop
lret
dec
dec
arpl
mov
ja
push
lcall
dec
mov
and
jnp
push
rep
ret
inc
add
loopne
sbb
sbb
into
jo
and
pop
pop
fs
push
dec
mov
enter
pusha
pop
js
into
inc
mov
pop
mov
and
out
add
xlat
push
adc
mov
in
push
sbb
pop
xor
or
imul
outsl
jbe
jge
push
in
xchg
scas
lods
jp
mov
aaa
in
mov
and
int3
push
add
sub
mov
stos
aam
data16
mov
cmpsl
addr16
enter
fstp
xor
or
pop
mov
mov
ror
std
xchg
outsl
test
leave
aaa
dec
fsubr
sub
out
sbb
movsl
mov
sbb
pop
and
xchg
dec
in
fs
pop
sarl
mov
dec
jae
sbb
add
fsubl
cmp
mov
fsubrs
push
shlb
gs
repz
xchg
xlat
dec
ja
and
test
jmp
inc
fs
cmp
mov
push
test
fbld
sbb
sub
in
lret
je
mov
into
popa
and
testb
push
ljmp
xor
pop
push
cmpsb
aam
sub
mov
jnp
inc
mov
xchg
popf
pop
add
in
pop
test
inc
lret
repz
incb
mov
add
mov
jg
daa
pop
nop
aas
sti
insb
jnp
mov
xchg
enter
in
adc
jle
add
decb
lahf
adc
popf
xchg
movsl
add
and
push
push
cli
ficomps
sub
xchg
fdivrl
js
sbb
pop
movsb
sub
je
jnp
loop
add
jo
shlb
pop
sbb
addl
mov
jmp
jmp
movsb
pushf
js
sub
push
int
pop
jns
jae
popf
pop
fsubrs
in
mov
dec
jae
sbbl
pop
jae
repnz
filds
movsb
jnp
mov
or
lret
fwait
insb
push
push
lods
std
mov
xchg
shll
lds
roll
sbb
loop
xlat
pop
lret
mov
cltd
repnz
bound
test
adc
jl
jp
neg
xchg
mov
pop
mov
xor
sbb
jae
cmp
fsubrl
stos
fsubrp
inc
mov
push
test
adc
add
sahf
xor
insl
in
push
xchg
jns
lods
push
dec
mov
push
incl
add
cmc
lcall
mov
arpl
inc
aam
imul
inc
jl
cmp
stc
or
inc
cmp
stos
ss
lods
jno
cmp
add
into
or
lods
loop
idivb
cmp
jmp
xchg
scas
data16
jnp
jno
and
subb
iret
fidivl
repnz
movsb
out
mov
xchg
mov
es
movsl
adc
loope
sbb
mov
sbb
cmpl
call
int
and
fcoms
mov
adc
es
scas
xor
imul
arpl
xor
test
lods
dec
lret
mov
jp
pop
lcall
xchg
lret
es
jecxz
pop
sahf
rolb
sbb
pop
xor
push
mov
xchg
fadds
leave
mov
xchg
fadd
dec
mov
push
inc
pop
push
sub
lea
jmp
sti
test
sti
pushf
adc
ret
test
stos
push
enter
mov
outsb
and
pop
pushf
lods
lcall
orb
jecxz
aad
hlt
add
shrb
or
mov
and
mov
dec
jmp
es
lret
inc
scas
scas
ret
call
not
sahf
adc
or
stos
cmp
and
fidivrl
xchg
arpl
pop
shlb
cmp
fistl
jne
xchg
mov
in
push
movsl
pusha
jno
test
ljmp
hlt
xchg
int
shll
push
lahf
pop
fstpt
or
in
sbb
push
arpl
lods
andl
and
in
popf
fwait
aas
lcall
mov
sbb
movsl
add
mov
aam
mov
cmpsb
ljmp
lret
out
push
push
fld
dec
sbb
sub
mov
inc
repz
ss
aam
pop
pusha
aad
rcll
imul
bound
bswap
js
testl
es
xchg
sbb
ss
jg
mov
or
pop
call
orb
adc
sub
aaa
push
int
inc
push
aaa
cmp
pop
stos
jg
sub
pop
jecxz
pop
ljmp
sub
push
dec
mov
sub
ja
ffreep
cld
add
les
mov
fiadds
stc
adc
dec
cld
push
jg
fistps
daa
and
inc
sub
xchg
sbb
mov
testl
mov
mov
inc
out
out
pop
icebp
push
xchg
mov
loop
fidivrs
daa
fiadds
inc
or
hlt
out
mov
ret
mov
push
fbstp
enter
frstor
popf
sbb
mov
lahf
sbb
jl
lret
pop
push
mov
int
and
mov
test
or
xchg
inc
xor
xor
enter
scas
daa
push
rorl
in
xor
adc
aaa
pop
fsub
xchg
insb
xchg
xchg
xorl
cmpsb
shll
fs
ljmp
pop
push
push
push
test
xchg
push
mov
pop
lock
mov
andb
nop
pop
fwait
js
mov
das
iret
xchg
push
or
dec
test
mov
cmp
les
adc
mov
nop
lea
or
es
int3
adc
cmp
mov
jp
movsb
in
es
cmp
pop
test
cmp
fstps
bound
mov
add
rclb
jp
mov
xchg
push
call
xchg
sub
jp
push
fidivrl
insb
jg
push
push
push
cld
and
cltd
dec
xor
push
lock
outsb
dec
js
mov
pop
pop
pop
cltd
inc
and
jno
xlat
push
adc
jae
inc
js
jmp
pop
in
xor
bound
adc
iret
cmp
fst
or
mov
repz
dec
mov
incb
and
dec
mov
sub
outsb
fcomp
aam
out
shll
mov
pop
pop
adc
test
fnstcw
xor
pop
mov
popa
rolb
into
add
imul
stos
mov
lock
fdivl
cwtl
push
inc
cmp
xlat
dec
sbb
jbe
dec
adc
add
mov
pop
or
test
sti
pushf
ds
out
sbb
xchg
xlat
mov
xcrypt-ofb
cmpsl
das
popa
or
sbb
dec
roll
sbb
adc
pop
cltd
pop
and
sbb
add
js
cmpxchg
sbb
or
xchg
add
mov
jmp
orb
pusha
jne
push
mov
jge
in
stos
daa
mov
fmuls
jae
inc
das
adc
dec
lahf
repnz
iret
mov
stc
lods
mov
or
negb
xlat
jbe
shlb
and
popa
add
movsl
xchg
sbb
fistl
push
mov
add
sub
in
push
mov
stos
mov
cmp
mov
xchg
push
mov
lds
mov
adc
shr
pop
rorl
ret
sbb
pop
sbb
adc
into
inc
or
sub
mov
dec
jl
imul
es
xor
adc
or
test
movb
sbb
out
mov
ret
cli
in
cs
insl
sub
push
cmpsb
pop
mov
lods
cmp
mov
leave
jecxz
mov
es
test
xchg
pop
bound
mov
dec
cltd
outsb
in
or
cmp
jae
adc
mov
movsl
rcrl
or
ss
mov
inc
scas
or
pop
or
inc
jl
or
mov
les
inc
fildl
js
stos
mov
dec
lret
int
repz
call
xchg
dec
iret
sahf
xor
lahf
daa
adc
pop
pushf
ds
jge
mov
xchg
pop
ret
imul
daa
and
pop
sub
in
sub
in
mov
adc
in
inc
push
mov
mull
das
pop
inc
sahf
push
sarb
divb
cmp
lahf
stos
cs
dec
out
lret
xchg
aam
xor
mov
inc
mov
and
clc
dec
dec
cs
fists
insl
pop
cs
inc
cmp
dec
sub
add
mov
arpl
into
in
iret
test
loop
adc
fiaddl
dec
inc
ljmp
fldenv
and
std
push
jge
mov
xchg
mov
mov
sbb
adc
dec
test
test
inc
mov
sbb
out
lods
dec
aaa
decb
adc
xchg
popf
test
in
pop
cmp
sub
inc
mov
mov
insl
mov
and
pop
xlat
int3
inc
add
fsubr
ljmp
jnp
mov
dec
jmp
pop
push
or
xor
test
or
stos
mov
stc
push
inc
cmp
push
lret
sbb
mov
out
pop
into
jecxz
popf
jmp
pop
push
mov
mov
push
mov
ror
sub
dec
xor
sbb
jns
ret
add
pop
pop
scas
js
sub
outsl
cld
hlt
lea
mov
filds
pop
cmp
aam
hlt
jo
test
jb
mov
sti
cmp
std
dec
test
push
imull
jge
test
pop
xor
or
in
cmp
cmc
stos
mov
sbb
cld
pop
cmpsl
test
jno
insl
and
fwait
dec
lds
clc
in
mov
xchg
mov
cmp
pop
ds
cmp
mov
pop
dec
push
nop
clc
mov
jno
into
push
jmp
stos
jg
imul
nop
push
adc
in
adc
dec
bound
mov
test
les
enter
stos
pop
xchg
and
adc
decl
fsubs
orb
jo
int3
addr16
outsb
xor
mov
pop
sbb
cmp
pusha
push
lock
cmpsb
pop
test
outsb
adc
popa
in
lock
dec
or
xor
mov
movsl
ret
ljmp
js
and
cmp
push
in
pushf
aam
test
dec
sbb
push
xor
dec
inc
mov
fldl
mov
dec
xchg
adc
stc
fsts
adc
push
shll
pop
enter
mov
ds
cmp
pop
inc
push
paddsw
mov
clc
push
mov
aam
fnstenv
popa
and
pop
and
aam
xchg
push
inc
hlt
sub
pop
aam
decl
push
fdivrs
cmp
out
test
push
xlat
sub
mov
pop
jp
sub
insb
adc
sti
jge
ret
sarl
fwait
and
pop
pop
lods
and
dec
and
mov
dec
data16
dec
ja
cld
xchg
sub
cld
in
cltd
jbe
jb
jp
sbb
push
out
xchg
iret
aaa
inc
mul
int
cmp
test
adc
push
les
push
out
es
cs
aaa
mov
adc
mov
pop
pop
push
cs
inc
inc
push
xchg
jg
or
jo
xchg
or
mov
sub
push
jns
outsl
bound
dec
punpckldq
movsb
fidivrs
aaa
or
lcall
push
mov
push
js
mov
iret
jle
adc
sub
and
rcrl
push
adc
scas
imul
adc
xchg
sar
or
dec
sahf
adcl
bound
mov
pop
push
xchg
cmp
lcall
jmp
pop
xor
inc
pushf
xchg
lahf
data16
ja
arpl
je
test
and
inc
das
iret
sbb
mov
pop
js
in
mov
add
mov
dec
lock
mov
sub
jne
push
xchg
cmp
jl
sub
mov
jmp
ds
jbe
adc
scas
mov
arpl
adc
in
shrb
mov
and
and
jne
cmp
ret
shll
inc
and
sub
or
mov
jno
xchg
mul
in
and
xor
add
sbb
shlb
fldt
sub
outsl
fmull
jmp
jle
popa
aas
pushf
jne
out
leave
test
gs
adc
and
add
sub
ljmp
es
hlt
push
ljmp
push
mov
gs
jmp
sti
inc
cwtl
shll
adc
mov
inc
xor
jmp
bound
dec
lea
fnstcw
mov
pop
cltd
dec
pop
subb
movsb
stc
jle
outsb
arpl
lcall
aaa
pop
jecxz
xor
cmp
mov
xor
inc
cli
in
inc
dec
hlt
jne
gs
pop
jb
jg
cmp
adc
in
jnp
inc
sbb
dec
aas
mov
mov
xchg
or
xor
mov
and
inc
cmp
gs
add
or
aas
js
dec
jge
cmpsl
dec
fstl
jecxz
addl
push
sub
jne
daa
inc
fnstcw
test
mov
dec
insb
out
jae
pop
fucomp
inc
inc
mov
pop
lods
popa
push
sbb
cmp
jp
mov
xor
xor
mov
cmp
push
shrb
mov
sub
pop
xchg
xor
fnstcw
das
sub
jmp
inc
fisubl
push
popf
scas
jp
daa
idivl
scas
jmp
fwait
cmp
pop
push
pushf
and
aam
testl
je
push
dec
sahf
fldl
stos
jb
sub
ret
xchg
lods
divl
fldt
mov
rcr
movsb
mov
push
fisubl
movsb
mov
sbb
jge
test
jo
cmpsl
xchg
xchg
push
sarl
mov
dec
push
mov
add
inc
xchg
lcall
pop
fwait
cmp
fadds
ret
mov
pop
cwtl
mov
inc
sub
fisubl
xlat
inc
mov
ret
cmp
mov
adc
sub
add
adc
dec
out
xchg
sahf
loop
xchg
cltd
mov
ljmp
pop
dec
sahf
cmpb
ss
addr16
or
push
test
push
leave
jp
testb
nop
xor
je
data16
fisttpl
daa
gs
cld
mov
push
add
dec
jno
jecxz
sub
ret
push
jmp
mov
mov
push
lret
dec
scas
lock
jns
lret
adc
sbb
inc
hlt
aaa
in
xchg
inc
aaa
xchg
mov
pushf
inc
xor
inc
repz
leave
lcall
cmpsb
pop
sbb
fsts
jns
std
popf
sub
mov
xor
or
mov
std
gs
push
push
test
sub
inc
or
imul
cmp
daa
jmp
jmp
or
movsl
sub
mov
insb
das
out
insb
add
pop
ret
cli
mov
or
add
mov
and
fbstp
addr16
sub
push
repz
mov
push
xchg
pop
sahf
dec
add
inc
incb
call
cld
dec
mov
dec
loop
mov
aaa
cmpsb
fildl
fadd
or
nop
loope
lock
pop
lahf
aam
ja
pop
shrb
mov
scas
pop
lock
push
add
xor
push
shl
lret
adc
hlt
orb
pop
xchg
mov
cmp
jge
cld
sub
jae
jbe
mov
or
mov
push
cmp
lods
and
fsubl
movsl
shll
jl
cmp
add
hlt
arpl
fdivl
leave
lea
sbb
jns
clc
or
scas
dec
sbb
pusha
enter
stc
cmp
add
xchg
popa
imul
lcall
pop
imul
aad
add
imul
xor
outsl
pop
mov
fisubrl
test
dec
dec
aaa
sub
adc
pop
out
int3
adc
pushf
ret
pop
imul
ljmp
lret
popl
or
std
sub
inc
push
adc
ja
daa
into
ret
ss
dec
add
mov
popa
into
xchg
test
orb
add
xchg
iret
jb
in
adc
test
outsl
xlat
fwait
inc
sbb
shl
xchg
mov
mov
cmpsl
ja
loope
mov
add
mov
mov
rorb
es
movsl
xchg
or
and
or
push
sarl
lods
or
or
lods
dec
loope,pn
sahf
and
push
imul
sub
mov
clc
fldl
sbb
push
cmp
sub
gs
mov
addl
stos
inc
and
repz
cmpb
movsl
js
mov
mov
rolb
incb
ret
outsl
loopne
or
adc
xor
nop
int
gs
mov
xchg
sub
jl
lar
adc
pop
push
mov
pop
xor
loopne
in
addr16
xor
scas
dec
push
inc
repz
cmpsl
mov
ss
dec
ss
enter
addr16
or
cmc
sarb
loope
or
sahf
mov
data16
xor
or
mov
add
test
lods
popa
rorl
out
sub
push
loope
push
mov
push
add
dec
lds
scas
test
or
sbb
fs
repnz
jbe
sbb
scas
dec
adcl
dec
mov
adc
cltd
jmp
cmp
es
mov
imul
mov
sbb
std
sub
mov
js
mov
test
sbb
dec
xor
in
push
sbb
testl
push
lds
in
ds
or
mov
pop
fs
mov
add
loop
lcall
aam
ret
dec
sbb
mov
cmp
inc
repnz
pop
hlt
adc
out
mov
aam
push
cmp
int
xchg
dec
leave
stos
sahf
and
jbe
mov
mov
cmp
das
fnstcw
bound
xor
or
add
adcb
adc
nop
add
mov
xchg
inc
jle
adc
dec
sbb
mov
push
repnz
sub
jnp
jmp
pop
mov
je
sbb
push
dec
movsl
jnp
cmp
jns
jae
jno
inc
sub
jno
mov
cmp
inc
mov
xchg
packssdw
or
test
adc
test
out
inc
mov
fisubl
outsb
int3
xchg
add
test
das
lcall
dec
lret
push
lods
jbe
lret
pop
loope
popf
es
in
mov
into
into
shll
test
ljmp
pop
enter
cld
add
push
int3
popa
in
and
repz
or
pop
fcoml
imul
repz
jnp,pn
icebp
and
cld
into
jmp
pop
sti
xor
sub
sub
adc
or
pop
out
imul
hlt
aas
lea
mov
pop
push
rorl
stc
mov
test
cmp
mov
je,pt
sub
dec
mov
inc
push
push
mov
sub
xor
fadds
mov
mov
out
mov
pop
xchg
and
add
int3
ljmp
cs
pop
arpl
fisubrl
inc
push
lods
mov
sbb
dec
ds
imul
fbld
xlat
inc
push
cs
insl
mov
clc
add
mov
or
in
das
insb
faddl
lret
xor
movsb
repz
scas
fdivp
fcmovnb
lods
fcmovnbe
mov
add
pop
rorb
cmp
mov
mul
mov
lods
sub
sub
int
loopne
subl
sub
nop
incb
sbbl
jecxz
lods
int3
movsl
and
add
mov
dec
pop
loopne
lret
jl
xchg
pop
xor
xlat
mov
push
shlb
movsl
loop
adcb
loope
xchg
loopne
cmp
outsl
cmc
ja
mov
pop
fscale
in
push
repz
aas
hlt
push
mov
dec
out
push
subb
jp
pop
jb
xor
pusha
push
push
or
lret
ret
fiadds
jmp
add
mov
inc
dec
push
or
std
daa
in
jmp
out
ds
fisttpll
mov
lahf
addr16
je
add
lret
sahf
xor
mov
add
dec
xor
dec
jl
xor
in
xor
sbb
subl
imulb
push
notb
aad
mov
jbe
jb
or
mov
mov
xchg
les
jbe
leave
outsl
mov
popa
es
addr16
aam
inc
fs
sub
jno
dec
jp
xor
or
int
xor
leave
jle
insl
adc
lcall
mov
ja
or
adc
push
xor
je
dec
or
repnz
xor
imul
lock
outsl
mov
mov
xchg
xor
stos
pop
mov
cmp
stos
adc
adc
adc
jp
mov
cmp
call
pop
ret
ljmp
in
roll
repz
sbb
inc
mov
jno
sbb
inc
mov
pop
sub
out
add
cmp
jg
xchg
inc
jge
xchg
cli
inc
ja
repnz
mov
inc
repz
add
cwtl
es
idiv
pop
and
mov
int
out
out
leave
mov
sub
je
add
dec
push
sbb
sbb
inc
pop
lds
mov
es
stc
sahf
fabs
std
ja
lcall
shll
xor
adc
sub
push
lret
inc
dec
sbb
mov
xchg
mov
push
mov
arpl
push
jno
out
push
adc
data16
mov
fmuls
cmp
pop
pop
fiaddl
cmp
xchg
add
adcb
jl
aam
adc
push
pusha
dec
jae
in
mov
fists
pop
fidivrs
or
or
stos
inc
aad
loop
movsl
mov
inc
roll
cmp
push
pusha
pop
mov
int3
pop
sbb
data16
adc
or
pushl
jmp
push
in
mov
test
hlt
add
gs
push
aaa
sbb
mov
enter
jmp
jne
test
imul
data16
cltd
xchg
dec
pop
cmpsb
stos
cwtl
pop
bound
cltd
jp,pn
mov
mov
jecxz
lcall
mov
jbe
adc
cmp
pop
fldenv
out
mov
xchg
outsl
cmpsb
stc
xchg
adc
sti
cltd
push
dec
jae
test
test
mov
dec
imul
xor
push
outsl
push
push
and
rclb
xlat
cmp
cltd
push
aaa
les
pop
mov
dec
or
lods
jb
testb
sbb
inc
pop
jge
adc
ss
ret
out
xor
sbb
into
outsb
jle
cmpb
les
loope
sub
ds
jl
mov
sub
cmp
leave
sub
mov
imull
ljmp
jbe
cmp
nop
mov
pop
and
cmp
sahf
xchg
test
test
loope
nop
hlt
dec
lods
xor
sub
and
push
loopne
call
inc
in
stos
cmc
mov
lret
jae
push
cwtl
insb
cld
out
and
cmp
mov
mov
fcoml
ret
dec
jmp
adc
divl
xchg
rcll
scas
inc
mov
icebp
mov
and
jl
jne
dec
ret
mov
sbb
add
popa
lcall
xlat
cltd
pop
lahf
mov
xchg
jns
cmp
mulb
adc
testl
lods
aam
loopne
jge
push
xchg
test
add
ss
mov
jne
push
hlt
inc
xor
movsb
nop
enter
shll
lock
test
sarl
shl
cmp
aam
xor
add
pusha
js
and
add
arpl
stos
scas
add
hlt
jmp
stos
out
adc
sbb
mov
loop
mov
cmp
pop
xchg
mov
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
and
rorb
or
mov
dec
test
pop
xor
dec
xchg
mov
mov
lcall
or
fisubrl
iret
xchg
lret
inc
push
sbb
dec
mov
pop
popf
sbb
enter
iret
sbb
add
lahf
movsb
sbb
shl
pop
pop
rcr
jbe
stos
fidivrl
movsl
push
ret
mov
xor
clc
mov
pop
dec
xchg
pop
scas
movsb
mov
jg
in
scas
push
jo
jge
es
shrb
xchg
mov
pcmpgtd
add
subl
pop
push
rolb
lods
lar
sbb
xchg
pushf
push
lds
pop
mov
push
scas
sbb
jae
sbb
xor
les
dec
icebp
xor
popa
data16
insb
pusha
aam
lret
inc
aam
orb
xchg
push
stc
ja
and
dec
ret
popa
push
imul
lea
jbe
add
jp
mov
pop
mov
iret
or
dec
stos
adc
inc
jbe
loopne
out
lret
xchg
dec
mov
iret
xchg
adc
mov
jmp
jne
in
out
adc
cwtl
dec
xlat
mov
fcompl
ret
inc
call
push
mov
jmp
cmpsl
aaa
cs
inc
divl
mov
jge
js
push
lret
repnz
jp
test
sahf
pop
imul
pop
aam
out
sbb
pop
pop
lret
lret
sete
loopne
mov
mov
mov
sarb
mov
pusha
nop
xchg
es
das
in
mov
idiv
icebp
inc
leave
and
push
sti
cmp
dec
lcall
xchg
mov
outsl
mov
push
fidivs
sbb
sub
int
aaa
cmp
jnp
rorb
jb
fcmovu
jbe
fdiv
loopne
ret
or
push
dec
pop
je
int3
jnp
and
or
add
adc
insl
mov
or
mov
mov
lret
dec
fildll
cmp
into
sbb
pcmpeqw
scas
or
test
int3
jp
push
adc
pop
mov
pop
std
adc
es
mov
push
xor
negl
and
ds
push
bound
push
jecxz
or
push
jo
xor
cltd
push
sbb
and
ja
pop
aas
outsl
xchg
popl
sub
add
adc
xor
icebp
out
test
adc
jnp
aam
mov
pop
push
test
and
rol
adc
in
pop
cmp
inc
out
lcall
jo
xchg
push
popf
into
es
shll
push
xchg
inc
pushf
loopne
movsb
ret
add
scas
push
popa
sbb
push
mov
or
push
and
faddp
cmp
xchg
or
mov
cmpsl
sbb
cmp
push
sbb
insl
scas
fldcw
jae
arpl
mov
cli
adc
in
cmc
pop
fcomip
fistpll
push
sbb
sbb
int
xchg
push
push
mov
imul
inc
loop
repnz
jl
add
imul
cmp
push
les
jae
dec
or
xor
adc
mov
testb
mov
and
dec
xor
clc
mov
movsl
or
sbb
int
push
ret
pop
push
fimuls
mov
pop
lret
sub
loop
shrl
arpl
test
mov
push
mov
pop
fdivp
mov
pop
aam
jge
in
data16
sub
aam
outsb
mov
clc
adc
test
lahf
pop
out
loopne
mov
xchg
cmpsl
sub
out
andl
inc
jo
mov
xchg
push
bound
ljmp
dec
xor
test
xchg
stos
jl
fistl
int3
jo
push
dec
popa
dec
push
adc
mov
cmc
in
lcall
xchg
pop
cwtl
lods
rcl
xor
dec
dec
ficoms
lret
push
ds
movsb
cmpb
gs
pop
fisubs
dec
fwait
mov
mov
mov
std
push
jae
push
pop
jecxz
dec
xor
xor
addr16
push
rolb
pop
sahf
xor
aam
notl
xchg
and
stos
outsl
out
insb
mov
push
gs
inc
cld
pop
jno
fchs
movsb
pusha
popf
daa
adc
call
fs
jno
push
subl
adc
ficompl
push
sub
pop
and
adc
ret
inc
ljmp
imul
jmp
or
in
pop
jb
or
movsb
add
and
popf
add
mov
xor
xchg
popa
repnz
xchg
sub
fcoms
mov
cwtl
sub
outsl
lret
cld
push
xchg
ds
mov
push
cmpsb
adc
mov
in
add
fmull
cmpl
adc
pop
cli
inc
sub
cld
out
inc
adc
xchg
xor
pop
call
jp
ret
cmp
mov
inc
pop
push
fisttps
or
ss
jge
mov
int
sbbl
cltd
cmp
out
dec
bound
lods
arpl
enter
fmull
pop
mov
jmp
inc
mov
fs
jae
out
std
inc
aas
int
inc
mov
test
outsb
mov
lds
mov
loope
mov
dec
leave
out
clc
add
call
pop
push
mov
adc
pop
adc
sbb
pop
dec
fstpt
jbe
addb
adc
cltd
xor
pusha
mov
dec
adc
addl
inc
push
mov
sub
dec
dec
shl
aam
lret
or
adcl
out
addr16
movsb
jb
lcall
xor
loop
mov
add
idivb
dec
mov
enter
test
cmovbe
movsl
mov
movsb
sub
xor
mov
subb
jns
sbb
cmp
push
shld
lock
orb
cs
outsl
das
test
dec
mov
cwtl
loope
and
std
ss
nop
xchg
push
into
test
jno
mov
call
jbe
dec
repnz
aaa
out
jmp
fnstcw
pop
sti
add
xor
pop
arpl
loope
xor
lods
dec
andl
jle
add
adc
mov
cmp
fdivl
mov
or
sti
cmp
pop
lcall
jecxz
roll
faddp
in
push
mov
mov
ds
lods
shll
adc
jecxz
call
aas
test
cmpsl
sbb
arpl
mov
sarb
pushf
push
sbb
or
lcall
pop
xor
mov
cmc
or
lea
rorb
sbb
shll
cmc
pop
mov
xchg
dec
or
fcompl
jno
cwtl
cmpsl
mov
cld
movsb
fucomip
mov
mov
lods
or
test
xor
les
cmp
les
mov
pop
int3
dec
and
sbb
jo
pop
and
stos
cmp
cwtl
sub
popf
inc
aas
mov
in
cltd
scas
les
mov
mov
sbb
cs
xorb
mov
or
ret
scas
xchg
and
dec
mov
adc
sbb
cmp
jns
outsl
cmp
enter
into
add
jb
fldl
xchg
gs
mov
icebp
js
shll
sub
mov
inc
or
mulb
mov
xorb
jmp
cmpsl
test
aas
popa
lcall
ret
in
pop
sub
shrl
out
in
sub
lea
sbbl
and
mov
ret
pushf
notl
or
dec
lods
ror
imul
cltd
mov
sar
cmp
xor
push
mov
inc
es
orb
xchg
ds
sbb
call
incl
xor
lods
sbb
icebp
lods
loop
sub
aam
push
mov
mov
adc
ficompl
add
push
mov
push
popf
mov
fidivrl
sbb
leave
and
or
cmp
pop
push
pop
imul
xchg
scas
orl
movsb
notb
jecxz
lret
pop
xor
pushf
pop
test
rolb
sbb
pop
jg
pop
mov
dec
add
fwait
cmp
pop
jo
gs
in
mov
scas
mov
push
aad
jnp
jecxz
add
push
push
cli
mov
mov
mul
sub
ret
pushf
xor
mov
mov
addb
ret
jnp
mov
xrelease
and
cld
ret
xchg
adc
push
rcrl
gs
jo
jmp
and
out
jo
xchg
dec
add
mov
inc
or
shrl
outsl
xchg
outsb
jg
clc
jmp
loop
inc
out
arpl
cld
lea
enter
popf
lret
jnp
mov
imul
push
and
mov
adc
mov
sub
xor
pushf
jle
pop
sbb
mov
jae
cmc
sbb
add
stc
push
mov
pop
incb
mov
dec
fcompl
sbb
lea
dec
pop
cmpsb
dec
mov
popf
repnz
clc
cld
js
int
dec
inc
outsl
mov
fidivl
sub
fs
shrb
dec
sbb
les
loopne
mov
in
fildl
loop
adc
jbe
mov
mov
insl
ds
sub
and
xchg
mov
add
cli
imul
bound
std
jmp
xor
adcl
xchg
fsubl
ss
xchg
jl
cli
sbb
adc
push
aad
push
pop
les
fmuls
mov
or
in
mov
test
pop
cli
mov
out
call
fwait
inc
mov
xchg
or
rolb
adc
ja
push
mov
mov
xor
fdivs
jae
test
pusha
add
insl
movsb
insb
dec
xor
leave
shlb
in
pop
dec
test
mov
sbb
jecxz
push
scas
cmp
pop
push
rcrb
je
loop
xchg
xor
stos
xor
je
xor
fwait
ss
mov
ret
or
ja
das
add
cli
lds
xor
inc
hlt
or
cmp
sub
stos
push
mov
sbb
fucom
mov
scas
jg
test
dec
mov
mov
testl
fwait
xchg
add
popa
sbb
add
aam
out
inc
or
repz
loop
and
sti
push
mov
lock
shlb
push
divl
push
sub
lods
aam
mov
xchg
lds
push
jle
fstpt
fdivrl
dec
xor
rcl
lahf
xor
mov
jecxz
inc
pop
and
stos
pop
inc
and
sbb
aas
mov
cwtl
lahf
stos
cmp
dec
test
lock
jge
jecxz
and
pop
lret
xchg
int3
je
sub
test
ds
fstpt
call
mov
hlt
dec
mov
les
or
add
popa
shll
fsubl
pop
insb
mov
xor
jmp
pop
jmp
sub
add
xchg
and
insb
push
jae
test
sbb
dec
add
cmpsl
cmp
lcall
call
cwtl
mov
insb
orb
push
pusha
push
mov
ja
inc
mov
cmpsb
mov
roll
mov
lods
xchg
xchg
or
dec
push
scas
arpl
shrl
pushf
imul
or
jae
and
loop
ja
into
subl
dec
xchg
fldt
jbe
sbb
pop
dec
mov
jge
call
dec
sbb
mov
and
pop
lea
sub
movsl
arpl
mov
adc
mov
nop
adcl
adc
mov
ja
mov
movsb
incl
push
iret
jp
xchg
inc
cmpsb
push
mov
xlat
inc
rcrl
jg
mov
rcrl
and
mov
std
cmp
ja
out
dec
ss
pop
sub
nop
push
pop
inc
xchg
in
out
pop
push
adc
in
pop
pushf
js
inc
push
lcall
sub
sub
ja
adc
xchg
push
sbb
mov
add
add
add
pop
add
inc
xchg
sub
notb
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
movsl
insl
add
insl
