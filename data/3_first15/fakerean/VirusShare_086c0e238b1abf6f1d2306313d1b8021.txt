je
cmpb
mov
je
cmp
jae
test
jne
testb
jne
jmp
cmp
jae
test
jne
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
add
add
call
mov
add
mov
push
add
cmpl
je
cmpb
mov
je
cmp
jae
test
jne
testb
je
jmp
cmp
jae
test
jne
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
jmp
call
test
jne
cmpl
je
cmpb
mov
je
cmp
jae
test
jne
testb
jne
jmp
cmp
jae
test
jne
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
add
add
call
mov
push
call
cmpl
je
cmpb
mov
je
cmp
jae
test
jne
testb
jne
jmp
cmp
jae
test
jne
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
add
add
call
push
pop
xor
lea
rep
mov
lea
push
mov
push
movl
movl
add
push
add
test
je
mov
add
add
mov
add
cmpl
je
cmpb
mov
je
cmp
jae
test
jne
testb
je
jmp
cmp
jae
test
jne
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
jmp
call
test
je
push
mov
call
cmpl
je
cmpb
mov
je
cmp
jae
test
jne
testb
je
jmp
cmp
jae
test
jne
mov
mov
and
and
or
je
mov
mov
mov
mov
and
and
cmp
jne
cmp
jne
push
push
add
add
call
pop
mov
pop
jmp
add
add
add
add
call
pop
leave
ret
nop
dec
xor
add
add
push
add
cmp
add
xor
add
xor
add
push
add
int3
int3
int3
int3
mov
push
mov
push
push
mov
mov
test
jne
mov
add
mov
push
mov
call
push
push
push
push
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
mov
call
movl
mov
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
cmpl
push
mov
push
push
mov
jne
mov
call
mov
mov
call
cmp
jge
add
jmp
cmp
jle
push
mov
call
xor
pop
pop
pop
pop
ret
push
add
mov
add
add
call
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
mov
push
add
mov
add
push
push
call
mov
mov
add
mov
test
je
push
pop
cmp
jne
mov
and
cmp
jne
mov
call
push
push
push
jmp
cmp
jne
mov
and
cmp
jne
mov
call
push
push
push
jmp
cmp
jne
mov
and
cmp
jne
mov
call
push
push
push
jmp
cmp
jne
mov
and
cmp
jne
mov
call
push
push
push
add
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
call
mov
mov
push
push
push
push
add
mov
call
push
push
push
push
add
mov
call
push
push
push
push
add
mov
call
push
push
push
push
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
cmpl
push
mov
jb
cmpl
ja
mov
push
push
push
add
push
add
push
mov
call
add
mov
add
add
add
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
mov
call
movl
mov
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
push
mov
call
movl
movl
mov
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
push
mov
call
movl
movl
mov
pop
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
mov
push
call
andl
ret
int3
int3
int3
int3
int3
mov
ret
int3
int3
int3
int3
int3
mov
push
call
andl
ret
int3
int3
int3
int3
int3
mov
push
call
andl
ret
int3
int3
int3
int3
int3
mov
push
call
andl
ret
int3
int3
int3
int3
int3
mov
push
call
andl
ret
int3
int3
int3
int3
int3
mov
push
call
andl
ret
int3
int3
int3
int3
int3
mov
push
call
andl
ret
int3
int3
int3
int3
int3
mov
push
call
andl
ret
int3
int3
int3
int3
int3
mov
push
call
andl
ret
int3
int3
int3
int3
int3
mov
push
call
andl
ret
int3
int3
int3
int3
int3
mov
push
call
andl
ret
int3
int3
int3
int3
int3
mov
push
call
andl
ret
int3
int3
int3
int3
int3
mov
push
call
andl
ret
int3
int3
int3
int3
int3
mov
push
call
andl
ret
int3
int3
int3
int3
int3
mov
push
call
andl
ret
int3
int3
int3
int3
int3
mov
push
call
andl
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
push
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
push
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
push
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
push
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
cmpl
push
push
mov
jne
mov
shr
test
je
cmp
je
add
add
add
add
call
jmp
andl
push
lea
call
mov
mov
xor
test
setne
andl
orl
orl
push
push
mov
inc
mov
lea
push
call
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
add
mov
add
add
push
call
cmp
jne
mov
and
cmp
jne
mov
mov
add
push
mov
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
cmpl
push
mov
jne
mov
shr
test
jne
mov
add
test
je
push
push
push
push
add
dec
neg
sbb
inc
movzbl
push
mov
call
add
mov
add
add
add
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
push
add
add
add
call
mov
test
jl
mov
push
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
mov
movl
call
testb
je
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
add
sbbb
ret
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
add
sbbb
ret
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
add
add
call
mov
test
jl
mov
jmp
push
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
andl
call
mov
test
je
add
mov
add
add
call
mov
test
jl
mov
jmp
push
mov
call
jmp
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
add
add
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
add
add
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
add
add
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
add
add
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
add
add
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
add
add
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
push
add
add
add
call
mov
test
jl
mov
push
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
push
add
add
add
call
mov
test
jl
mov
push
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
push
add
add
add
call
mov
test
jl
mov
push
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
push
add
add
add
call
mov
test
jl
mov
push
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
cmpl
push
mov
jne
mov
shr
test
jne
call
test
je
mov
lea
push
call
mov
test
je
push
mov
and
movl
jbe
push
add
mov
call
mov
cmp
je
mov
mov
mov
mov
add
cmp
jne
push
mov
call
add
cmp
jb
pop
pop
mov
call
push
mov
call
add
mov
add
add
push
call
pop
leave
ret
add
add
add
add
jmp
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
push
add
add
add
call
mov
test
jl
mov
push
call
mov
push
call
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
xor
call
test
jne
call
mov
jmp
call
mov
mov
add
test
jl
push
call
push
lea
call
call
add
add
add
push
add
lea
add
push
call
test
jne
andl
lea
push
add
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
add
add
add
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
add
add
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
add
add
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
add
add
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
add
add
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
add
add
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
add
add
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
add
add
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
call
push
lea
call
add
lea
add
add
add
add
add
push
call
test
jne
andl
lea
push
add
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
call
push
lea
call
add
lea
add
add
add
add
add
push
call
test
jne
andl
lea
push
add
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
call
push
lea
call
add
lea
add
add
add
add
add
push
call
test
jne
andl
lea
push
add
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
call
push
lea
call
add
lea
add
add
add
add
add
push
call
test
jne
andl
lea
push
add
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
call
push
lea
call
add
lea
add
add
add
add
add
push
call
test
jne
andl
lea
push
add
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
call
push
lea
call
add
lea
add
add
add
add
add
push
call
test
jne
andl
lea
push
add
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
call
push
lea
call
add
lea
add
add
add
add
add
push
call
test
jne
andl
lea
push
add
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
call
push
lea
call
add
lea
add
add
add
add
add
push
call
test
jne
andl
lea
push
add
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
call
push
lea
call
add
lea
add
add
add
add
add
push
call
test
jne
andl
lea
push
add
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
call
push
lea
call
add
lea
add
add
add
add
add
push
call
test
jne
andl
lea
push
add
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
call
push
lea
call
add
lea
add
add
add
add
add
push
call
test
jne
andl
lea
push
add
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
call
push
lea
call
add
lea
add
add
add
add
add
push
call
add
jne
andl
lea
push
add
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
call
push
lea
call
add
lea
add
add
add
add
add
push
call
inc
add
andl
lea
push
add
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
call
push
lea
call
add
lea
add
add
add
add
add
push
call
test
jne
andl
lea
push
add
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
push
xor
test
jne
call
mov
jmp
mov
add
test
jl
push
call
push
lea
call
add
lea
add
add
add
add
add
push
call
test
jne
andl
lea
push
add
add
add
add
add
call
mov
test
jl
mov
mov
call
mov
test
jl
mov
jmp
mov
mov
add
jmp
mov
mov
xor
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
push
push
push
push
push
call
ret
int3
int3
int3
int3
int3
call
add
jl
call
test
jl
call
test
jl
call
test
jl
jle
inc
add
test
jl
call
test
jl
call
test
jl
call
test
jl
call
test
jl
call
test
jl
call
test
jl
call
test
jl
call
test
jl
call
test
jl
call
test
jl
jmp
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
call
mov
mov
mov
xor
mov
mov
mov
mov
cmp
je
push
push
cltd
pop
idiv
mov
cmp
jne
imul
push
call
mov
cmp
je
mov
test
jle
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jle
cmp
jg
add
add
inc
add
cmp
jl
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
movl
test
je
push
call
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
mov
call
testb
je
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
testb
push
mov
jne
cmpb
je
xor
jmp
push
mov
lea
push
mov
call
inc
add
adc
in
add
cmp
je
push
xor
cmp
jne
push
mov
call
mov
test
jbe
add
mov
add
add
add
push
push
call
push
lea
call
inc
cmp
jb
jmp
cmpl
je
cmpl
jne
push
mov
call
add
mov
push
mov
mov
call
test
jl
cmpl
jne
test
jle
lea
test
jl
add
mov
add
push
add
push
push
call
push
lea
call
cmpl
jne
dec
jns
jmp
dec
cmp
jge
lea
jmp
add
mov
add
add
add
push
push
call
push
lea
call
cmpl
jne
inc
cmp
jl
pop
mov
call
mov
pop
jmp
add
add
add
add
add
call
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
jl
cmp
jge
mov
test
je
imul
add
jmp
xor
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
push
add
mov
movb
call
mov
andl
mov
sub
mov
jns
xor
mov
andl
lea
push
mov
mov
call
mov
test
je
andl
cmpl
jbe
add
mov
add
add
call
add
mov
mov
xor
call
test
je
mov
cmpl
je
test
jge
push
neg
push
push
add
mov
cmp
jle
mov
sub
jmp
mov
cmp
jle
mov
sar
and
and
cmp
mov
jle
push
pop
push
push
push
add
cmp
jle
mov
cmp
jl
sub
mov
jmp
mov
mov
cmp
mov
jle
mov
sub
jmp
xor
add
mov
add
push
lea
push
call
mov
cmp
jge
mov
add
mov
cmp
jb
mov
mov
test
jne
mov
jmp
mov
mov
mov
mov
test
je
call
cmp
jle
mov
xor
cmp
jge
mov
mov
cmp
jle
mov
cmp
jge
mov
pop
mov
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
call
movl
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
cmpb
mov
jne
push
push
add
call
mov
mov
lea
xor
push
mov
call
mov
mov
mov
sub
mov
jns
mov
mov
and
mov
mov
cmp
jbe
jmp
mov
mov
add
mov
add
add
call
add
xor
mov
mov
mov
mov
mov
mov
call
xor
cmp
je
mov
mov
mov
mov
mov
cmp
je
cmp
jge
push
neg
push
push
add
mov
cmp
jle
mov
sub
jmp
mov
cmp
jle
mov
sar
and
and
cmp
mov
jle
push
pop
push
push
push
add
cmp
jle
mov
cmp
jl
sub
mov
jmp
mov
cmp
mov
jle
mov
sub
lea
mov
jmp
mov
mov
mov
cmp
mov
jle
mov
cmp
jle
mov
cmpl
je
cmpl
je
sub
cmpl
mov
je
cltd
sub
sar
add
mov
mov
cmpl
je
cmpl
je
mov
sub
cmpl
je
cltd
sub
sar
mov
mov
jmp
mov
push
push
add
add
add
add
add
add
call
add
mov
mov
cmp
jb
mov
pop
pop
test
je
call
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
andl
push
call
mov
test
jne
mov
jmp
add
mov
add
add
add
call
mov
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
xor
mov
sub
push
mov
je
dec
je
dec
lea
push
mov
je
lea
push
add
push
add
add
jmp
push
push
jmp
lea
push
mov
push
push
push
add
jmp
lea
push
push
push
push
push
call
mov
cmp
jl
add
call
mov
mov
cmp
jne
mov
call
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
push
mov
xor
movl
cmp
je
push
xor
cmp
jbe
mov
mov
test
je
push
call
add
xor
add
call
pop
pop
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
mov
call
testb
je
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
mov
xor
cmp
je
cmp
jne
push
add
call
mov
mov
lea
push
call
mov
mov
mov
mov
mov
imul
lea
mov
mov
cmp
je
mov
add
mov
sub
mov
cmp
jne
cltd
sub
sar
jmp
cmp
jne
mov
xor
mov
mov
mov
mov
cmp
jbe
mov
mov
andl
cmp
jne
mov
sub
shr
jmp
cmp
jne
mov
sub
mov
cmpl
mov
mov
mov
jne
mov
cmp
jge
test
jne
mov
mov
xor
div
mov
mov
mov
add
xor
div
sub
mov
jmp
imul
cltd
testl
rorl
inc
or
testl
in
add
xchg
add
add
mov
add
mov
add
add
call
mov
andl
mov
mov
mov
test
je
mov
mov
test
je
mov
mov
mov
xor
cmp
jne
mov
sub
cltd
sub
mov
sar
jmp
cmp
jne
mov
sub
jmp
cmp
jne
mov
cmpl
jne
mov
mov
mov
cmp
jae
test
je
mov
imul
xor
divl
mov
mov
jmp
xor
mov
test
je
mov
imul
xor
divl
mov
jmp
andl
mov
add
add
mov
test
jge
push
add
pop
jns
xor
lea
cmp
jle
mov
sub
jns
xor
test
jge
add
movl
jns
xor
mov
lea
cmp
jle
mov
sub
jns
xor
push
push
push
push
add
add
add
add
call
add
add
mov
mov
cmp
jb
mov
mov
add
add
add
mov
mov
cmp
jb
mov
jmp
add
mov
add
add
call
add
xor
push
push
push
push
push
add
add
add
call
cmp
jb
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
push
push
mov
push
add
mov
mov
movb
mov
call
mov
mov
lea
push
call
xor
mov
mov
mov
cmp
je
mov
cmp
jbe
xor
mov
mov
cmp
je
push
call
add
mov
add
cmp
jb
add
call
push
mov
call
mov
cmp
jne
mov
call
mov
mov
mov
mov
jmp
mov
mov
mov
mov
cmp
ja
mov
cmp
jl
mov
mov
mov
cmp
jl
mov
mov
mov
call
mov
mov
mov
mov
movb
pop
pop
mov
pop
leave
ret
xor
add
mov
cmp
jbe
imul
push
add
call
cmp
je
mov
mov
add
imul
mov
add
lea
add
mov
call
add
mov
add
lea
add
mov
push
call
lea
push
mov
call
mov
mov
mov
mov
mov
mov
call
mov
andl
xor
mov
mov
inc
mov
mov
cmpb
je
cmp
jbe
mov
test
je
cmp
je
cmp
mov
jne
inc
cltd
sub
sar
add
mov
jmp
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cltd
sub
sar
add
jmp
mov
mov
add
mov
jmp
mov
mov
mov
movsl
stos
inc
add
mov
mov
mov
mov
cmp
jae
add
mov
add
add
call
add
mov
add
lea
add
mov
push
call
mov
mov
mov
mov
mov
mov
in
cmpsb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jg
mov
cmpb
mov
mov
inc
add
add
cmp
jg
add
add
cmp
jle
mov
add
mov
sub
sub
push
add
lea
push
call
mov
mov
mov
mov
pop
pushf
inc
add
add
push
call
mov
test
je
jmp
shl
push
add
call
test
je
mov
mov
mov
mov
add
mov
add
mov
cmp
jg
mov
mov
repnz
jle
add
jle
add
mov
test
je
cmp
je
cmp
jne
lea
cltd
sub
sar
add
jmp
mov
add
jmp
mov
cmp
jg
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cltd
sub
sar
add
jmp
mov
add
jmp
mov
cmp
jg
mov
add
mov
mov
cmp
jb
mov
mov
cmp
jg
mov
cmpb
je
mov
cmp
jne
lea
cltd
sub
sar
neg
add
jns
andl
mov
cltd
sub
sar
neg
add
jmp
cmp
jne
sub
jns
andl
jmp
test
jne
sub
jns
andl
cmpl
jbe
mov
cmp
jg
mov
mov
add
add
mov
mov
mov
add
mov
mov
mov
cmp
jb
jmp
mov
call
add
call
mov
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
push
add
mov
add
call
mov
test
jl
mov
xor
test
jbe
mov
add
mov
add
cmp
jb
inc
add
cmp
jb
or
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
testb
push
push
push
mov
jne
cmpl
je
cmpb
jne
mov
lea
push
mov
call
add
lea
add
mov
push
call
mov
cmp
jne
xor
mov
call
mov
jmp
xor
cmp
jne
mov
shr
and
testb
mov
jne
test
jne
mov
dec
mov
imul
add
mov
jmp
cmp
jbe
add
mov
add
add
add
mov
add
push
add
call
push
lea
call
test
jne
inc
cmp
jb
mov
test
je
add
mov
cmp
je
add
jmp
cmp
je
sub
xor
cmp
je
jmp
mov
cmp
jne
jmp
xor
xor
mov
cmp
jbe
xor
mov
add
mov
mov
cmp
jae
cmpb
movl
je
add
jmp
sub
lea
add
add
add
add
push
add
mov
call
push
lea
call
test
jne
inc
add
cmp
jb
cmpl
je
add
cmpl
je
jmp
push
push
mov
call
mov
mov
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
push
add
mov
call
imul
mov
mov
add
mov
mov
lea
jmp
add
inc
push
add
mov
call
test
je
add
mov
add
mov
push
push
add
test
jne
cmp
jl
jmp
push
add
mov
call
imul
mov
jmp
add
dec
push
add
mov
call
test
je
add
mov
add
mov
push
push
add
test
jne
mov
cmp
jg
jmp
mov
jmp
mov
dec
cmp
jge
mov
imul
mov
andl
add
add
inc
cmpl
mov
jbe
add
mov
add
add
push
add
mov
push
add
call
push
lea
call
test
jne
add
mov
cmp
jb
mov
cmpl
jne
mov
dec
cmp
jl
jmp
test
jle
mov
imul
mov
andl
sub
add
dec
cmpl
mov
jbe
add
mov
add
add
push
add
mov
push
add
call
push
lea
call
test
jne
add
mov
cmp
jb
mov
cmpl
jne
test
jg
mov
call
mov
jmp
xor
jmp
add
add
add
add
add
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
call
movl
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
andl
push
call
mov
test
jne
mov
jmp
add
mov
add
add
add
call
mov
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
add
add
add
add
add
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
xor
dec
mov
je
dec
je
dec
je
dec
lea
push
je
push
push
push
push
jmp
mov
add
add
add
jmp
lea
push
mov
push
jmp
lea
push
mov
push
push
jmp
lea
push
mov
push
push
push
cmp
setne
movzbl
push
call
cmp
jl
add
call
mov
mov
cmp
jne
mov
call
mov
jmp
xor
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
call
andl
movl
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
andl
push
call
mov
test
jne
mov
jmp
mov
call
mov
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
andl
lea
push
call
add
jl
add
call
mov
mov
test
jne
mov
call
mov
jmp
xor
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
mov
push
xor
xor
mov
and
cmp
jae
push
mov
call
inc
add
call
test
jl
add
inc
test
jge
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
test
je
push
call
andl
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
push
mov
xor
lea
mov
cmp
jne
add
mov
call
lea
push
push
push
mov
call
cmpl
je
push
push
add
call
cmpl
je
mov
lea
push
call
mov
test
je
xor
and
and
mov
cmp
jae
add
mov
push
add
call
mov
addl
je
test
jl
addl
jle
addl
je
addl
jne
mov
push
add
call
mov
test
jl
addl
je
add
addl
jne
mov
lea
push
push
add
call
andl
mov
add
mov
test
jge
test
jl
mov
test
je
mov
push
add
call
mov
test
jl
add
lea
push
add
add
call
mov
test
jge
mov
call
mov
call
add
call
pop
pop
mov
pop
leave
ret
mov
push
push
call
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
push
andl
push
mov
push
mov
push
mov
test
je
add
call
test
jl
mov
mov
and
jbe
mov
dec
je
dec
dec
je
sub
je
dec
dec
jne
xor
cmp
sete
lea
mov
mov
sub
neg
sbb
lea
and
xor
test
jbe
mov
mov
push
call
mov
cmp
je
inc
cmp
jb
jmp
cmpl
jne
lea
jmp
lea
jmp
xor
jmp
lea
test
jl
cmp
jge
cmpl
jne
xor
inc
jmp
or
mov
cmp
je
mov
mov
push
call
mov
test
je
add
mov
add
add
push
add
mov
add
cmpl
je
jmp
add
mov
add
push
add
add
call
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
movl
call
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
mov
call
testb
je
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
call
add
mov
add
add
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
call
add
mov
add
add
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
call
add
mov
add
add
add
call
pop
pop
ret
int3
int3
int3
int3
int3
add
add
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
add
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
test
jne
ret
mov
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
cmpb
jne
mov
push
add
movl
call
mov
mov
mov
cmp
ja
mov
push
lea
push
call
xor
mov
mov
mov
mov
cmp
jbe
add
mov
add
add
call
mov
mov
mov
mov
mov
sub
cmp
jle
mov
mov
sub
andl
lea
mov
mov
mov
cmp
je
test
je
sub
cmp
jne
add
mov
jmp
mov
cltd
sub
sar
add
mov
mov
mov
cmp
je
test
je
mov
sub
cmp
je
cltd
sub
sar
mov
mov
jmp
mov
push
push
add
add
push
add
add
add
call
add
mov
mov
cmp
jb
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
testb
jne
xor
pop
ret
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
call
movl
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
call
mov
test
je
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
mov
cmp
je
lea
push
push
pop
mov
mul
push
push
call
test
jge
xor
jmp
mov
test
je
push
call
andl
add
andl
call
mov
test
je
mov
xor
inc
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
lea
mov
mov
xor
pop
ret
int3
int3
int3
int3
int3
push
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
cmpl
je
add
mov
call
test
jl
mov
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
movl
add
call
pop
ret
int3
int3
int3
int3
int3
testl
je
testb
jne
orl
movl
mov
ret
testb
jne
orl
movl
mov
ret
int3
int3
int3
int3
int3
testl
je
testb
jne
orl
movl
mov
ret
testb
jne
orl
movl
mov
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
push
push
mov
mov
mov
movl
mov
xor
and
mov
mov
jne
mov
jmp
push
mov
cmp
jbe
add
mov
call
mov
add
mov
call
cmp
jae
test
jl
mov
mov
mov
lea
push
call
andl
add
mov
movl
cmp
jb
xor
inc
add
test
add
add
mov
call
test
je
xor
mov
mov
mov
mov
cmp
jbe
andl
add
mov
call
mov
mov
cmp
jbe
add
mov
push
add
call
lea
push
mov
mov
call
mov
cmp
jge
mov
mov
cmp
jge
mov
mov
call
jmp
andl
add
mov
cmp
jb
mov
test
jbe
cmp
jle
mov
add
mov
sub
mov
shl
mov
mov
mov
xor
and
add
mov
call
mov
mov
test
je
add
lea
push
add
push
call
mov
cmp
jge
mov
cmp
jge
mov
add
mov
cmp
jb
cmp
jle
mov
add
sub
add
mov
mov
movl
cmp
jb
test
jbe
mov
mov
shl
mov
mov
andl
andl
mov
andl
test
jbe
add
mov
call
mov
mov
call
andl
add
cmp
jb
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
push
push
mov
mov
xor
movb
push
cmp
jne
add
add
call
mov
mov
mov
mov
mov
cmpl
jne
mov
push
call
test
jl
mov
call
mov
mov
mov
cmp
jl
mov
mov
cmp
je
mov
lea
push
mov
call
add
mov
mov
call
xor
mov
mov
test
jbe
add
mov
push
add
call
mov
mov
add
lea
mov
add
mov
sub
sub
push
lea
push
mov
call
inc
mov
cmp
jb
mov
mov
call
mov
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
lea
push
mov
mov
mov
and
push
call
mov
test
jl
mov
test
jne
and
cmp
jne
add
mov
call
mov
test
jl
mov
call
mov
lea
push
add
mov
add
push
add
mov
test
jl
mov
and
sub
shl
push
mov
push
add
push
add
mov
xor
add
and
xor
testl
je
mov
xor
stos
mov
mov
mov
pop
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
push
push
lea
push
mov
mov
mov
and
push
call
mov
test
jl
mov
test
jne
and
cmp
jne
add
mov
call
mov
test
jl
mov
call
mov
lea
push
add
mov
add
push
add
mov
test
jl
mov
and
sub
shl
push
mov
push
add
push
add
mov
xor
add
and
xor
testl
je
mov
xor
stos
mov
mov
mov
pop
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
call
mov
push
mov
add
andl
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
call
mov
push
mov
add
andl
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
lea
push
add
call
test
jl
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
lea
push
add
call
test
jl
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
call
testb
je
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
call
testb
je
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
add
and
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
add
and
push
call
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
andl
push
call
mov
test
jne
mov
jmp
push
add
mov
add
call
mov
test
jge
mov
call
push
call
mov
jmp
mov
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
andl
push
call
mov
test
jne
mov
jmp
push
add
mov
add
call
mov
test
jge
mov
call
push
call
mov
jmp
mov
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
mov
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
movl
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
lea
push
add
add
call
mov
test
jl
mov
mov
jmp
andl
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
lea
push
add
add
call
mov
test
jl
mov
mov
jmp
andl
pop
ret
int3
int3
int3
int3
int3
mov
push
push
mov
call
mov
push
push
call
push
mov
call
mov
test
je
push
call
test
je
testl
jne
push
call
push
call
mov
test
je
push
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
push
mov
xor
cmp
movl
mov
mov
jl
call
mov
cmp
jne
lea
push
push
push
call
cmp
jl
add
call
mov
push
call
cmp
jl
add
push
push
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
call
testb
je
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
mov
push
push
push
xor
cmp
mov
jl
call
mov
xor
cmp
je
mov
and
test
jle
push
mov
call
mov
mov
cmp
je
inc
cmp
jl
push
call
mov
test
jne
mov
jmp
mov
add
mov
jmp
add
mov
call
mov
test
jge
add
jne
push
call
mov
jmp
mov
mov
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
call
mov
lea
push
add
mov
mov
mov
call
test
jl
mov
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
movl
test
je
push
call
mov
add
jne
push
call
mov
pop
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
mov
call
testb
je
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
push
mov
call
mov
test
je
add
mov
add
add
call
mov
test
jge
mov
call
xor
mov
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
push
xor
or
xor
cmp
mov
jle
cmpl
mov
mov
jle
cmpl
mov
jle
mov
lea
push
push
push
push
call
test
jl
add
call
mov
test
jne
mov
call
mov
jmp
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
push
mov
call
jb
or
call
lea
xlat
incl
mov
in
sbbl
mov
rolb
add
jbe
add
add
add
mov
lahf
js
mov
add
add
repnz
nop
lcall
hlt
jmp
iret
add
add
decl
add
add
mov
lds
sahf
lds
mov
call
int3
incl
in
mov
mov
xchg
mov
cld
in
mov
jmp
add
bound
mov
add
call
movsl
mov
mov
lock
test
mov
call
aam
arpl
jp
loope
jge
mov
add
cmpsb
aad
add
push
mov
sub
push
push
call
jno
mov
lock
incl
add
test
aad
loopne
xchg
jmp
add
incl
push
mov
mov
add
add
in
loopne
add
mov
jmp
cmpsl
jle
mov
xorb
add
incl
cld
out
add
stos
fucom
mov
mov
add
in
int
jp
decl
sub
pop
mov
sub
push
call
add
add
movl
add
add
add
filds
add
add
repnz
mov
jecxz
fildl
ljmp
test
test
call
lock
negl
clc
pusha
add
incl
add
loope
mov
mov
in
jne
decl
mov
add
rorl
mov
push
push
call
mov
ljmp
mov
lods
add
mov
incl
add
cld
mov
cli
mov
test
add
fdivr
incl
mov
incl
add
add
mov
jne
out
cli
inc
mov
jae
xchg
fwait
ror
add
cwtl
add
insb
mov
fisttpll
mov
out
mov
stos
mov
sub
push
push
push
push
call
jmp
decl
decl
add
pushfw
lods
test
jmp
bound
cld
imul
std
jae
stc
mov
jmp
enter
jmp
jecxz
incl
cmpsl
test
add
add
add
add
jmp
ffree
add
movsl
sahf
roll
popl
subl
mov
stc
add
add
add
sar
decl
ljmp
cmpsb
or
push
dec
push
xor
add
not
sub
inc
pop
dec
pop
push
call
fcos
call
scas
fldenv
jae
add
mov
add
add
add
int
insb
movsl
scas
incl
out
xchg
mov
add
add
mov
add
lods
mov
fimuls
add
incl
jle
mov
add
ljmp
decl
add
ljmp
in
clc
call
call
mov
push
call
add
add
add
aam
mov
test
mov
imul
jns
ret
out
pushl
lods
out
call
add
mov
mov
cld
add
xchg
decl
mov
incl
mov
addr16
pushf
cwtl
fists
incl
add
add
add
sub
pushl
call
push
call
add
incl
jno
in
imul
add
incl
jne
add
jne
mov
mov
cwtl
xchg
mov
jl
call
lods
add
jl
sahf
add
test
incl
add
add
incl
add
stos
mov
out
cmp
jmp
add
add
decl
in
add
popa
add
add
add
add
lods
imul
incl
add
add
jmp
addr16
iret
scas
rorl
add
je
je
xchg
add
std
cld
xlat
add
xchg
add
rcl
incl
xchg
add
cli
scas
mov
sub
add
push
call
add
add
add
add
mov
jb
rolb
subb
cli
add
adcl
cltd
fdivrs
add
imulb
xchg
add
js
scas
mov
mov
pusha
aam
add
decl
add
js
add
push
test
add
add
add
imul
in
clc
add
push
call
incl
xchg
xchg
je
add
add
add
add
leave
loopne
add
fs
pushf
add
repnz
add
fadds
decl
cld
mov
jp
lcall
jp
add
ret
jmp
lcall
mov
call
filds
mov
add
cld
in
les
incl
call
jbe
add
mov
xchg
in
jmp
mov
add
call
jae
incl
movsb
shll
mov
add
data16
iret
fsub
test
out
add
decl
icebp
cwtd
xchg
nop
call
addr16
lcall
incl
mov
mov
jb
add
add
addl
mov
iret
mov
faddl
mov
add
mov
incl
cmp
fsubr
adcl
add
add
add
test
cmp
xchg
add
jmp
test
dec
sbbb
add
dec
add
dec
bound
call
mov
incl
popa
mov
mov
mov
clc
mov
sub
movl
push
call
mov
enter
add
mov
add
cli
add
call
add
add
xchg
decl
mov
add
incl
add
out
add
pushl
jmp
add
addr16
mov
jne
add
add
loope
bound
clc
decl
or
add
add
test
lods
jmp
add
xor
add
cld
in
lret
rolb
lock
mov
incl
into
xlat
add
add
mov
add
cmpsl
mov
inc
jnp
nop
mov
pushl
scas
iret
mov
mov
add
gs
incl
test
add
fnsetpm(287
cld
add
mov
jbe
les
sub
push
call
jnp
add
call
loopne
cmpsb
add
ljmp
in
jo
decl
arpl
add
mov
call
into
out
incl
arpl
lcall
jmp
mov
add
add
stc
nop
ljmp
leave
add
mov
mov
in
clc
ljmp
inc
test
push
shr
push
or
not
add
xor
sub
shr
sub
dec
add
xor
sub
pop
lea
not
sub
dec
pop
push
call
rolb
add
call
test
jb
mov
pushl
add
add
jnp
mov
add
subl
aam
lea
call
add
fucomp
add
add
mov
add
jl
mov
stos
addr16
std
fst
jnp
flds
mov
jo
loope
lcall
add
pushl
call
mov
push
call
mov
add
stos
jnp
mov
add
mov
imul
incl
decl
incl
pusha
mov
add
add
xchg
arpl
fsub
add
incl
andl
not
jp
add
add
addb
xchg
clc
out
jmp
jmp
sub
movl
lea
push
call
test
mov
test
add
jb
stos
push
lods
add
xchg
add
mov
inc
std
fldl
lcall
incl
incl
out
mov
mov
jmp
decl
jmp
cli
add
lret
call
call
add
dec
add
add
push
pushl
push
call
add
ljmp
incl
jecxz
add
add
jns
mov
imul
mov
ljmp
add
stc
mov
jo
lret
mov
xchg
testb
aad
popl
jmp
fisttps
clc
xlat
out
fs
mov
popa
add
incl
fdivl
stc
add
xchg
imul
xchg
incl
pushl
call
pushl
push
call
add
mov
into
sahf
xchg
cmpsb
call
xchg
int3
jae
mov
jns
mov
cltd
clc
add
enter
ljmp
stos
mov
add
add
mov
int
xchg
roll
mov
ret
stos
add
call
add
add
add
decl
mov
jmp
add
add
add
mov
sub
pushl
push
call
fildll
lret
int
mov
mov
test
mov
mov
xchg
xorb
incl
add
add
xlat
mov
js
fs
add
add
xchg
mov
add
lea
add
cmpsb
pushl
mov
add
out
sti
add
in
clc
pushl
call
push
call
mov
in
in
mov
mov
add
mov
add
imul
add
add
incl
add
jmp
cwtl
mov
push
add
data16
jmp
add
add
xchg
add
jecxz
shlb
xchg
add
roll
add
mov
incl
mov
cmc
add
add
jp
add
in
clc
push
push
sub
push
or
inc
add
lea
lea
sub
inc
pop
inc
dec
rol
pop
pushl
push
call
incl
add
test
add
add
loope
sahf
mov
add
add
dec
add
mov
incl
jno
mov
divb
add
lds
addb
popf
push
mov
add
movsl
int
fidivrl
mov
jnp
jnp
mov
mov
out
dec
test
add
stc
add
add
call
push
push
push
inc
sub
push
push
pop
add
inc
lea
sub
sub
sub
pop
shl
pop
push
call
decb
lods
add
add
xchg
ja
xchg
frstor
filds
mov
stos
sti
mov
outsl
push
bound
loope
jecxz
orl
out
cmc
rcrb
in
cli
xchg
add
insb
ljmp
add
mov
add
js
call
mov
sub
push
push
call
jns
fiaddl
cmpb
lcall
mov
mov
stos
imul
mov
ljmp
leave
loope
add
rorl
jno
add
mov
mov
mov
mov
pushf
add
loopne
stc
mov
in
addl
xchg
mov
mov
test
out
add
add
mov
sub
push
call
push
call
add
enter
pusha
add
cli
jecxz
call
add
xchg
jns
imul
add
clc
jbe
fisubrs
add
aam
sti
out
jnp
jmp
jmp
jb
aam
mov
movsb
sahf
testb
lock
add
int
incl
add
mov
ret
add
jbe
jmp
stos
incl
mov
sub
mov
push
push
push
call
jnp
add
jle
stos
xchg
add
shlb
xchg
insb
in
into
fiadds
mov
icebp
mov
call
jl
add
cmpsl
bound
add
add
stc
mov
xchg
imul
mov
add
std
repnz
pushl
add
add
add
test
pushl
imulb
xchg
testb
pop
call
jne
push
call
cmpsb
push
mov
fldt
ret
out
add
mov
enter
lcall
xchg
xchg
into
add
ljmp
add
in
lret
out
out
add
lahf
jmp
xchg
add
movl
xchg
sar
dec
add
call
xchg
addl
pusha
mov
mov
incl
fcoms
inc
sbb
sub
add
add
pushf
movsb
test
rcl
add
add
xchg
mov
add
out
dec
jb
add
mov
add
add
add
sti
sar
incl
lcall
jmp
add
add
pusha
imull
xchg
add
fwait
mov
mov
decl
ljmp
inc
faddl
lock
push
call
ja
in
add
addb
incl
int3
jmp
arpl
addl
shlb
add
loop
add
out
add
incl
jno
incl
out
repnz
incl
int
add
lods
add
incl
push
mov
add
sti
mov
decl
add
xchg
andb
in
mov
add
mov
mov
sub
mov
push
call
jge
add
add
push
add
add
lea
popl
mov
mov
xchg
imul
add
loop
add
mov
lret
mov
call
jmp
cmp
pushl
repnz
mov
cltd
mov
sub
add
out
add
add
in
lret
add
fildl
sub
in
clc
ljmp
dec
fcoml
pusha
add
add
add
ljmp
decl
add
add
mov
jmp
add
add
add
mov
lcall
nop
test
mov
lea
mov
outsl
add
mov
add
mov
iret
mov
sub
push
mov
push
call
test
add
out
jle
mov
incl
lods
mov
call
fstp
mov
cmpsb
mov
cwtl
int3
aad
add
call
addl
mov
xchg
jle
xchg
call
cmpsb
ljmp
add
jmp
sar
incl
call
dec
aam
stc
incb
incl
fdivrl
add
jmp
jbe
mov
sub
sub
sub
pop
push
call
cmpsl
in
mov
add
add
add
add
add
mov
test
jge
mov
shl
cmc
mov
je
mov
add
int3
jno
mov
notl
les
jae
std
incl
jb
shl
xchg
call
mov
ret
incl
mov
jae
imul
mov
jno
add
in
add
clc
rep
pop
mov
push
call
add
add
imul
push
popf
add
jge
scas
mov
addr16
incl
sti
add
lcall
jge
xchg
test
add
add
in
jne
mov
add
fnstcw
jmp
add
shrb
mov
xchg
clc
div
lods
in
mov
add
cli
cmpl
xchg
add
loopne
add
sub
mov
sub
mov
push
call
add
shrl
mov
jmp
add
mov
mov
hlt
add
mov
add
add
mov
mov
add
add
jae
ja
incl
jmp
sahf
jle
in
add
add
lock
filds
icebp
in
into
in
jo
jle
mov
incl
mov
sub
sub
mov
sub
push
call
mov
pushl
jns
stc
clc
fmull
test
ljmp
incl
add
add
add
icebp
mov
mov
add
add
in
idiv
incl
gs
test
mov
mov
add
add
test
mov
stos
mov
add
aam
mov
sub
add
push
call
add
xchg
jge
in
mov
add
in
jmp
ljmp
scas
pushl
incl
fucomip
add
mov
jbe
int
jo
add
add
filds
popf
stc
mov
ljmp
incl
ja
add
xlat
add
clc
add
mov
push
call
cli
pushl
popf
clc
mov
lret
pushl
jecxz
add
cld
jne
xchg
sahf
data16
cmpl
out
std
add
gs
incl
aad
add
mov
add
mov
clc
mov
mov
fbld
incl
add
leave
mov
push
xchg
jb
fildll
mov
mov
sub
push
push
rol
dec
ror
sub
push
or
inc
add
not
shr
sub
lea
pop
dec
pop
pushl
push
call
mov
jnp
pusha
mov
mov
mov
test
jmp
shrl
add
fwait
add
sar
decl
in
mov
jle
add
jb
xlat
lock
jmp
fiaddl
ja
add
fiaddl
lcall
jb
clc
pusha
add
ret
mov
jecxz
add
add
lret
mov
add
call
push
push
call
push
mov
popf
mov
stc
mov
add
rol
jo
incl
mov
cltd
out
loope
add
roll
rorb
add
icebp
mov
rolb
add
add
mov
add
fimuls
jmp
fnstcw
add
mov
outsl
jp
add
jecxz
mov
clc
push
push
inc
ror
push
push
pop
add
add
sub
sub
lea
inc
shr
rol
pop
inc
sub
pop
push
call
mov
add
decl
jle
in
jnp
add
xchg
imul
leave
mov
jno
mov
add
add
add
add
stc
mov
incl
mov
mov
mov
rcl
add
cld
mov
aad
add
push
hlt
iret
lods
mov
out
clc
scas
add
xchg
mov
call
add
shrb
xor
call
sti
addl
lcall
jmp
jo
ljmp
pusha
decl
addl
in
incl
jae
incl
add
add
add
mov
add
les
add
add
stc
int
add
pusha
mov
add
mov
aam
aam
test
pushl
sub
mov
push
call
add
add
xchg
mov
add
dec
add
incl
mov
incl
mov
data16
add
incl
test
add
shl
add
pusha
js
aad
imul
add
lock
add
add
add
sti
fwait
add
mov
incl
test
call
test
incl
add
clc
push
push
call
fwait
mov
mov
mov
xchg
out
cmp
decl
test
cmpsb
add
sahf
mov
mov
cmpsl
outsl
stc
add
add
fcmovne
add
in
jae
call
add
pushf
test
outsl
fcos
lcall
ja
add
addl
call
clc
call
pop
call
in
sub
call
fs
mov
data16
jmp
fidivrl
pusha
add
lea
add
add
pushl
iret
out
call
add
xchg
lret
add
jbe
add
mov
movsb
lods
mov
js
in
push
cli
add
bound
mov
call
lahf
add
jae
incl
shl
mov
incl
rcrb
clc
ljmp
jne
push
call
lea
add
mov
jecxz
mov
add
add
gs
add
decl
add
pushl
sarl
decl
add
incl
test
outsl
incl
imul
incl
sub
add
push
push
call
mov
test
add
mov
mov
clc
ljmp
xchg
add
sar
add
add
dec
xlat
lds
xchg
xchg
xlat
test
out
add
add
mov
pusha
add
lcall
add
imul
icebp
rorb
mov
sub
mov
sub
push
call
add
add
mov
add
aad
out
jns
leave
addb
add
lret
clc
loope
ret
in
mov
add
jmp
add
ficomps
insb
movsl
add
incl
stc
add
movsb
leave
mov
std
xchg
test
mov
mov
mov
out
shlb
addb
add
add
arpl
mov
mov
sub
add
pop
push
call
std
add
ljmp
add
add
cld
push
add
mov
sahf
add
add
rclb
add
mov
mov
fisttpll
incl
add
ljmp
fstps
std
mov
xchg
add
add
add
cld
in
add
ljmp
mov
outsl
mov
sub
mov
push
call
mov
mov
out
add
mov
pusha
add
cltd
add
add
mov
add
add
fildl
jmp
push
iret
add
lret
xchg
rolb
mov
cmc
jbe
add
jmp
add
jp
ror
add
out
incl
add
sar
jnp
mov
add
add
adc
call
bound
ljmp
dec
fsubrl
daa
inc
add
jle
add
jp
add
incl
mov
fsincos
xlat
out
mov
cmc
add
mov
mov
jmp
mov
mov
add
inc
shl
pushl
incl
popa
mov
lods
add
lret
bound
add
mov
fldl
mov
loopne
ljmp
lea
mov
jmp
mov
popa
add
hlt
decl
push
movsb
mov
push
call
mov
add
jno
fsubs
call
in
cmpsl
add
roll
iret
std
add
popa
call
jo
fcmovne
incl
popf
add
mov
mov
mov
mov
add
add
clc
out
lcall
mov
incl
je
movsb
mov
mov
aad
testb
mov
decl
sub
push
call
jb
add
orb
pushf
jle
xchg
in
add
add
add
incl
mov
jl
jmp
cmc
mov
add
add
mov
add
lcall
add
iret
out
add
mov
add
lock
jbe
add
mov
call
add
add
ret
mov
sub
or
je
mov
push
call
fwait
inc
mov
add
mov
out
xchg
insb
add
jmp
mov
stc
add
add
incl
add
add
add
xchg
mov
jmp
incl
lock
call
mov
in
roll
mov
loope
xchg
add
int3
mov
add
add
mov
add
add
add
ror
add
mov
in
clc
ljmp
jne
mov
sub
push
call
mov
xchg
call
mov
data16
js
ljmp
mov
decl
mov
stc
mov
add
mov
fdivrp
decl
loope
add
roll
add
jmp
clc
divl
xchg
mov
jo
rolb
incl
add
incl
add
adcb
in
clc
add
push
call
movsb
mov
test
decl
outsl
add
icebp
mov
add
add
mov
stos
mov
add
mov
call
int3
in
add
decl
lock
incl
add
incl
xchg
enter
mov
push
loop
add
add
fcmovu
icebp
add
decl
add
push
push
call
mov
cmp
mov
mov
outsl
mov
xorl
mov
mov
mov
out
ljmp
mov
pusha
incl
add
in
lods
mov
decl
mov
add
push
add
cmpsl
fsin
mov
fistl
ljmp
mov
sub
mov
sub
push
call
add
add
mov
sti
xchg
add
outsl
loope
mov
add
std
call
mov
roll
add
mov
jl
xchg
aam
nop
icebp
movsl
scas
mov
je
mov
mov
lahf
fwait
add
add
fs
jl
add
add
call
mov
fiaddl
mov
xorb
sub
add
push
call
add
mov
roll
jl
mov
dec
call
add
add
in
hlt
jbe
mov
mov
add
stos
jl
mov
incl
add
sahf
stos
fwait
std
iret
cmp
fcmovbe
add
hlt
jbe
mov
add
out
clc
mov
jb
incl
call
xchg
push
add
decl
cmpb
mov
add
decl
insb
stos
mov
movsb
jae
incl
in
out
mov
clc
mov
decl
sti
mov
mov
mov
cmpsb
add
add
fs
mov
test
mov
add
repnz
mov
incl
mov
jl
lcall
xchg
xchg
orl
movsb
push
call
ljmp
add
add
add
sbb
jns
add
mov
add
mov
add
scas
add
pushl
iret
movsl
add
into
test
mov
mov
add
add
add
in
mov
mov
jle
add
mov
add
mov
mov
add
out
insb
shll
incl
xor
dec
fcoml
jne
add
cld
add
mov
jecxz
jmp
rolb
add
mov
arpl
add
enter
add
lahf
leave
gs
xchg
add
inc
mov
jmp
in
fiadds
addb
mov
fucom
add
mov
lods
add
add
xchg
add
dec
mov
jns
aad
incl
decl
leave
je
push
call
loop
xchg
mov
pusha
mov
add
incl
leave
addb
add
mov
mov
xchg
mov
sarl
je
test
xchg
mov
add
jns
add
mov
insb
fs
test
add
nop
popa
mov
add
lds
add
mov
jge
cwtl
lds
fisttps
decl
cmp
call
clc
bound
add
add
cli
add
mov
flds
mov
mov
add
movsb
leave
out
ljmp
add
mov
add
add
add
add
lcall
add
loop
icebp
add
add
flds
jo
push
sti
decl
mov
sub
sub
push
call
ficomps
xchg
clc
cwtl
decl
bound
add
stos
add
les
std
mov
mov
add
jbe
mov
add
mov
incl
jecxz
mov
pushf
js
mov
mov
js
fisttps
icebp
mov
decl
add
mov
pushf
fimull
decl
add
push
call
add
mov
mov
decl
mov
mov
addb
mov
in
je
add
add
pushl
add
add
mov
add
mov
mov
xchg
jbe
add
lods
add
scas
mov
add
fwait
pushf
jb
xchg
clc
mov
sub
push
push
push
push
call
mov
lods
mov
flds
mov
add
jo
decl
add
scas
add
aad
filds
add
jnp
add
add
lods
jo
mov
pushf
lret
xchg
decl
je
mov
jns
fldl
jns
mov
jmp
in
clc
mov
dec
add
mov
cli
sti
mov
stc
mov
mov
add
lcall
call
push
call
sahf
je
add
add
pushf
mov
popf
add
add
dec
incl
jbe
movsl
imul
popf
bound
cmpsl
mov
add
lret
scas
add
int
mov
xchg
add
add
into
add
add
into
insb
repnz
js
mov
jge
incl
out
xchg
xchg
mov
add
jae
mov
mov
sub
pop
push
push
add
lea
push
or
not
add
shr
inc
sub
add
rol
shl
ror
pop
sub
pop
pop
push
call
lods
add
incl
add
ljmp
aad
les
mov
aad
add
add
jmp
in
clc
add
incl
data16
enter
xchg
add
dec
mov
incl
add
lahf
add
incl
stos
add
int
mov
sub
mov
push
call
out
lds
mov
add
popl
lods
aam
mov
loopne
test
jmp
std
add
incl
mov
add
in
add
add
add
add
loopne
decl
add
lods
ficoms
arpl
mov
mov
fdivrp
incl
mov
add
add
jne
xchg
decl
decl
imul
incl
test
mov
stos
mov
add
mov
incl
cli
mov
mov
xchg
pushl
jle
mov
mov
jmp
add
add
add
imul
xchg
add
in
add
add
add
add
mov
clc
decl
hlt
call
add
movsl
xlat
roll
fisttps
add
incl
cmpsb
mov
mov
mov
add
mov
add
jmp
fiadds
xchg
add
data16
fdiv
xchg
incl
aam
loope
xchg
roll
jge
ret
mov
add
xchg
loopne
mov
out
add
add
add
add
mov
aam
call
test
jns
mov
sub
push
push
call
add
incl
test
cld
add
mov
add
mov
mov
add
add
addl
fistpll
sti
addb
cli
add
ljmp
jns
add
add
movsl
add
iret
mov
fcomps
mov
add
incb
sub
ret
push
call
mov
add
mov
mov
add
jbe
clc
mov
call
shrl
js
incl
xlat
aad
addl
incl
ljmp
mov
popa
jbe
add
jp
add
add
fs
stc
add
in
stc
in
xchg
add
sarl
incl
call
call
lock
mov
fsts
mov
jbe
test
icebp
sarl
aad
jnp
clc
mov
bound
jnp
movsb
test
clc
lret
push
mov
lods
fwait
add
xchg
add
xchg
stos
test
add
incl
mov
cli
stc
mov
incl
divl
iret
ja
test
mov
push
call
add
hlt
jns
mov
mov
add
add
jmp
into
addb
mov
add
decl
popa
testb
add
popf
mov
incl
mov
incl
ljmp
test
lea
add
fidivl
incl
incl
add
adc
jbe
add
in
mov
cwtl
jae
xchg
decl
popf
sar
decl
add
dec
add
add
add
in
xchg
mov
icebp
add
mov
je
add
ljmp
add
imul
add
add
add
lcall
repnz
mov
call
incl
mov
cld
test
mov
decl
clc
xor
push
call
les
incl
xchg
add
add
add
xchg
xchg
js
out
rolb
add
out
repnz
add
mov
mov
mov
cli
add
mov
add
addr16
add
incl
js
in
decl
add
mov
add
add
add
inc
mov
mov
stos
in
lds
clc
leave
push
call
xchg
popf
jmp
add
mov
incl
add
add
add
mov
mov
dec
lret
aad
in
add
jmp
scas
call
incl
add
jl
fildl
incl
lods
mov
je
add
shrb
incl
inc
push
call
mov
jbe
mov
imul
out
hlt
bound
add
add
mov
jmp
mov
mov
add
imul
cld
add
jmp
add
ficomps
add
incl
fwait
mov
add
loopne
movsl
cmc
add
clc
add
add
add
push
mov
push
push
call
add
ljmp
add
fsubs
jo
cld
mov
add
sarl
mov
ljmp
in
lret
or
mov
out
loope
add
imul
out
shl
xchg
xchg
jecxz
jp
data16
push
mov
mov
orl
fildl
out
add
mov
lcall
in
clc
push
push
call
add
jmp
mov
jl
add
enter
mov
pushl
mov
jno
add
jmp
decl
add
push
jae
lcall
decl
fldl
xchg
scas
mov
mov
jp
fadds
ret
mov
sub
push
push
call
add
faddl
out
std
clc
mov
mov
into
incl
scas
jnp
add
add
add
mov
jge
add
mov
lea
add
add
out
lret
lock
insb
mov
stc
add
lret
mov
add
add
aad
add
mov
sub
push
push
call
mov
lcall
add
lods
add
scas
add
mov
aad
add
rolb
mov
mov
incl
loopne
add
incl
add
add
add
add
outsl
add
imul
std
mov
call
mov
add
mov
incl
mov
push
call
add
add
add
mov
rol
cltd
enter
lcall
add
xchg
add
out
incb
mov
add
outsl
mov
jl
test
add
fimull
ljmp
inc
cld
mov
add
mov
add
incl
add
fwait
cmc
cwtl
add
incl
add
add
add
decl
mov
push
call
mov
mov
mov
add
add
mov
jle
add
mov
leave
add
jbe
mov
call
bound
stc
add
dec
mov
add
jo
add
add
cmpsl
call
ja
lock
inc
mov
popa
mov
xchg
mov
xchg
inc
mov
jb
rorl
decl
call
mov
mov
incl
jns
testl
lret
push
iret
call
add
mov
fisttpll
add
subl
mov
jge
jmp
movb
mov
jno
jmp
bound
xchg
loop
jmp
decl
cmp
push
call
mov
add
lahf
mov
mov
decl
add
jl
add
sti
jnp
outsl
mov
in
out
incl
je
add
hlt
lock
shl
add
ljmp
add
jmp
int
out
je
fiadds
mov
out
xorl
into
add
add
add
push
call
dec
jne
push
call
test
sar
add
mov
rcr
inc
outsl
mov
pushl
incl
repnz
pushl
cld
jne
incl
fmull
in
add
mov
stos
lcall
ret
call
mov
xchg
ljmp
lret
ljmp
xchg
je
add
decl
ret
sub
pop
pop
push
call
jns
lcall
test
mov
mov
je
jne
add
repnz
enter
out
in
test
sarl
int
nop
in
mov
fadds
lods
push
add
add
add
add
xchg
mov
decl
incl
add
decl
mov
mov
add
nop
add
push
incl
lcall
push
call
sti
add
add
jp
jae
enter
jge
mov
add
jb
scas
icebp
mov
nop
lods
ljmp
incl
loop
incl
ljmp
add
int
enter
out
mov
lret
hlt
mov
add
add
add
stos
mov
mov
decl
leave
ret
push
call
sahf
lea
cltd
xchg
add
xchg
add
mov
add
iret
jmp
incl
add
int
jmp
jno
hlt
add
loop
add
bound
loopne
fs
shll
cld
xchg
add
incl
add
add
jo
mov
call
in
push
call
add
data16
lods
add
xchg
mov
add
pushl
jbe
loope
xchg
jl
data16
xchg
std
test
out
mov
jmp
cld
gs
loop
mov
pushl
jmp
je
addb
test
jo
rol
in
orl
orb
mov
sub
cmpl
jne
mov
jmp
push
call
add
bound
call
add
add
mov
movb
mov
add
mov
jmp
add
mov
cmpsb
mov
mov
ljmp
mov
incl
cld
lea
test
movb
call
data16
pushf
mov
mov
movl
insb
js
jae
decl
sub
mov
push
call
add
add
jmp
add
cli
test
xchg
data16
add
add
add
jl
rcl
jmp
test
mov
add
call
add
lock
mov
aad
add
sarb
incl
andb
mov
sub
xor
push
call
mov
xlat
mov
decl
mov
std
incl
pushf
mov
popl
jecxz
arpl
xchg
negl
mov
ret
xchg
cld
sahf
mov
lods
jbe
lock
dec
xchg
shlb
popa
add
rcr
add
loopne
add
cltd
xchg
mov
mov
incl
mov
sub
xor
push
call
movsb
fiaddl
jae
out
testl
incl
movsb
xchg
add
mov
mov
test
negb
mov
test
inc
add
jns
mov
pushl
mov
dec
incl
mov
movsl
shl
mov
cltd
jge
xlat
call
call
loopne
mov
sub
or
push
call
jge
add
mov
jns
aad
add
sti
push
incl
add
mov
in
hlt
lahf
js
test
mov
cmpsl
mov
jbe
mov
add
push
add
add
add
add
decb
mov
jae
fiadds
mov
add
hlt
in
decl
inc
or
push
call
xchg
add
jb
mov
jmp
in
call
incl
fadds
ljmp
mov
incl
mov
call
add
add
je
test
insb
mov
outsl
xchg
jle
enter
dec
add
addb
fsts
decl
jmp
push
call
roll
add
mov
add
add
mov
decl
rcl
incl
mov
jecxz
in
add
outsl
mov
mov
add
mov
roll
add
movsl
repnz
mov
add
add
jne
lock
shlb
outsl
add
jp
sbb
add
add
stos
add
add
lret
mov
sub
jmp
push
call
add
xchg
loop
add
mov
js
aam
fucomp
iret
repnz
incl
pushl
popf
push
lods
call
les
cwtl
jnp
pusha
incl
mov
add
fs
incl
in
add
jb
add
mov
cmpsl
or
mov
ljmp
jp
incl
add
add
js
add
jmp
sahf
incl
subl
incl
fnstenv
add
sahf
incl
in
ror
add
add
mov
call
scas
mov
movsb
roll
mov
add
decl
loopne
faddl
repnz
incl
imul
loope
add
add
sub
pushl
push
call
into
add
imul
add
jns
in
cmpsb
loop
lock
mov
loop
add
out
add
mov
stos
jnp
add
out
add
add
add
mov
add
push
inc
test
sar
incl
testl
aad
mov
incl
adc
inc
add
jnp
add
hlt
call
add
incl
add
lods
ret
sar
jmp
aam
mov
add
rorl
clc
add
add
add
in
add
mov
scas
add
add
out
add
rolb
add
add
jb
mov
nop
loop
clc
test
add
jge
xchg
add
into
jno
push
in
clc
sub
push
call
add
mov
jle
call
xchg
mov
mov
add
into
add
incl
add
mov
lcall
lret
incl
add
incl
jb
add
mov
mov
addl
add
incl
lea
add
cli
jp
add
jne
nop
add
add
lret
add
repnz
mov
cwtl
rorb
cmp
jne
mov
lea
push
call
into
out
in
jne
shrl
add
add
fsubrp
in
mov
loopne
loop
add
lods
ja
popa
lcall
add
and
imul
mov
add
jle
add
lcall
stos
incl
push
test
add
add
ret
mov
sub
sub
mov
shr
push
call
add
in
add
decl
xchg
xchg
sub
push
mov
in
jns
jmp
push
les
decl
mov
mov
jmp
jnp
mov
rcl
nop
mov
add
mov
scas
roll
mov
add
enter
loop
mov
int
fldl
mov
add
movsb
xchg
in
jl
add
fisttpl
cltd
mov
sub
add
push
call
add
add
incl
add
mov
in
mov
mov
mov
repnz
jl
popf
add
inc
test
pushl
jo
mov
add
mov
cld
mov
loop
xchg
ljmp
incl
jmp
jp
out
idiv
incl
add
ljmp
sub
mov
xor
sub
push
call
add
add
in
into
lret
mov
mov
push
in
add
add
mov
incl
imulb
loope
movsb
mov
jno
pushf
mov
incl
mov
incl
in
add
add
decl
mov
gs
add
xchg
out
mov
incl
cmpsb
mov
mov
jne
add
add
incl
mov
push
inc
jne
push
call
ljmp
pushf
int
bound
mov
cltd
insb
stc
out
mov
lret
gs
add
add
mov
mov
xchg
arpl
mov
pushl
mov
add
fiadds
lods
add
cmpsl
cli
add
add
ja
hlt
add
xchg
add
cltd
mov
xchg
xchg
testb
xchg
clc
testl
decl
dec
push
call
xorl
out
add
add
shl
cli
mov
mov
les
sti
add
add
leave
add
lea
mov
mov
mov
out
orb
xor
incl
fisttpl
into
mov
mov
incl
add
incl
les
ret
push
push
call
sahf
add
mov
mov
jnp
jne
rolb
gs
add
mov
xchg
in
jae
mov
stos
add
add
jmp
loopne
mov
scas
aam
test
incb
test
mov
add
pushl
add
add
roll
test
cmpsl
aad
pushl
jmp
mov
mov
push
push
call
cmc
mov
jp
incl
mov
add
push
add
incl
ret
into
add
pushl
mov
clc
sar
lcall
pushl
mov
incl
mov
mov
xchg
jp
imul
xchg
add
incl
add
mov
mov
icebp
jl
mov
add
movl
in
clc
push
push
push
call
xchg
cli
incl
mov
add
add
je
addl
add
mov
testb
mov
mov
jb
mov
decl
addr16
std
pushf
out
pushl
mov
mov
mov
mov
add
add
into
add
jmp
add
call
call
stos
add
xchg
lahf
add
mov
icebp
mov
pushl
jp
xchg
mov
incl
add
add
decl
add
movsl
mov
inc
add
insb
add
mov
mov
testb
ret
incl
fisubrl
dec
mov
sub
mov
mov
mov
push
call
mov
fadds
mov
push
out
mov
xchg
shrb
inc
add
jnp
jmp
dec
add
std
xchg
into
mov
xchg
xchg
incl
cmpsb
incl
vshufps
add
jmp
cmpsb
enter
add
jmp
mov
fs
mov
out
out
mov
popl
popl
mov
add
xlat
in
incl
push
call
mov
mov
ljmp
lret
mov
ret
stos
mov
lods
add
jmp
aad
xorb
xchg
mov
imul
add
stos
ljmp
add
in
clc
add
lock
jmp
cmp
add
cmpb
add
scas
cmpl
hlt
incl
add
mov
out
cltd
mov
mov
sub
sub
push
call
fndisi(8087
add
incl
add
add
addl
add
add
int
jge
aam
xchg
fldt
movsb
bound
add
ljmp
pushf
mov
addl
add
xchg
aam
incl
repnz
xchg
mov
sub
add
push
call
mov
add
ja
out
fsubrl
fdivr
imul
incl
xchg
mov
test
mov
add
mov
popa
sti
int
mov
mov
call
popf
fbld
incl
mov
add
rolb
hlt
loope
add
add
call
add
cmc
fwait
add
jns
loope
imul
jne
pop
push
rol
not
add
pop
pop
push
inc
inc
ror
pop
pop
pop
push
dec
shr
pop
leave
ret
push
push
shr
pop
mov
add
push
ror
pop
push
push
push
push
call
add
mov
add
add
call
fsubl
bound
add
mov
mov
add
mov
lea
push
scas
xchg
aad
add
decl
mov
rcll
out
shlb
cwtl
out
pushf
stos
lods
movsl
imul
sub
push
push
sub
shr
inc
shr
pop
mov
push
xor
dec
dec
pop
pop
pop
push
call
mov
mov
mov
fildll
subb
add
incl
insb
mov
mov
add
xchg
in
sub
add
mov
mov
sar
jmp
mov
xchg
ljmp
loopne
movsb
jle
add
rorb
incl
cwtl
add
mov
mov
sub
pop
push
call
add
jmp
call
add
add
mov
incb
add
mov
sar
data16
lret
in
add
lcall
rorl
add
ljmp
add
add
mov
add
add
std
and
pushl
xchg
add
fildl
mov
mov
cmc
mov
sub
pop
leave
push
ror
dec
dec
pop
ret
push
dec
pop
push
push
add
add
pop
mov
push
call
mov
mov
stos
add
testb
add
call
add
xchg
mov
mov
jl
faddl
add
testb
lods
add
add
add
stc
popl
xchg
add
call
insb
add
mov
imul
add
ljmp
incl
ljmp
add
mov
add
incl
incl
call
add
cld
xchg
xchg
into
mov
pushl
std
xchg
jle
stc
add
out
add
add
decl
lds
mov
stc
testl
stos
xchg
sarl
rcr
pushl
gs
add
bound
mov
out
sahf
add
add
mov
testb
call
push
push
add
shl
shl
ror
pop
movl
movl
push
push
ror
xor
shr
pop
push
push
push
shl
pop
call
test
je
mov
push
call
jmp
fildll
fs
cmp
add
jno
bnd
incl
decl
add
jp
incl
mov
add
std
mov
bnd
add
jno
add
out
add
add
stos
jo
lret
xchg
mov
int
std
decl
lcall
shr
inc
pop
pop
push
call
add
add
cmpsb
add
dec
push
xchg
add
aad
lds
incb
lock
incl
mov
shl
add
addr16
decl
inc
add
mov
add
dec
mov
fwait
add
pushl
decl
aad
arpl
push
add
lods
scas
add
mov
cmpsb
movsl
jle
addr16
incl
add
pop
pop
leave
push
call
jbe
lock
jmp
popf
xchg
mov
add
cmpsl
jnp
in
mov
ja
mov
inc
std
xchg
faddl
add
incl
mov
out
jne
ja
jge
add
iret
jbe
jl
mov
mov
add
add
incl
add
rorl
xor
lret
add
pop
push
push
add
lea
sub
pop
mov
add
push
shr
shr
ror
pop
push
push
lea
xor
add
add
pop
push
push
push
lea
sub
pop
push
push
rol
pop
testl
addl
push
push
xor
not
pop
call
push
shl
pop
mov
push
dec
dec
lea
shl
pop
pushl
push
call
mov
decl
aam
mov
aad
testb
ret
jb
mov
add
subb
add
jmp
add
loop
cmp
lcall
push
mov
incl
mov
incl
in
ljmp
xchg
add
cltd
add
mov
add
add
mov
sub
push
push
call
push
dec
dec
dec
shr
pop
cmpl
jne
push
call
jecxz
leave
xchg
add
incl
add
decl
lods
jb
jb
je
incl
mov
add
xchg
call
mov
out
faddl
mov
mov
add
mov
clc
xchg
jae
add
insb
popf
jb
sahf
mov
fadds
outsl
add
call
mov
roll
add
jle
incl
lea
pop
pop
push
call
mov
js
in
in
test
fisubl
lcall
jmp
add
mov
decl
incl
int
pushf
add
les
je
add
jge
mov
jge
nop
mov
mov
add
add
repnz
incl
add
add
add
cmc
lea
add
faddp
lcall
iret
mov
iret
mov
add
mov
incl
mov
je
add
add
xchg
in
add
mov
jge
mov
mov
aad
jmp
add
mov
decl
jbe
nop
test
jo
add
add
leave
mov
add
lods
xchg
into
add
decl
decl
add
shl
mov
add
add
add
clc
lcall
ret
push
pop
push
push
call
add
add
xchg
add
xchg
mov
add
jmp
mov
add
clc
jmp
iret
faddl
js
cwtl
mov
leave
mov
popf
lea
xchg
add
jp
in
add
int3
mov
call
add
add
pusha
add
shll
add
jmp
add
clc
lret
mov
sub
mov
push
sub
sub
not
add
pop
add
push
call
pusha
mov
ret
popf
repnz
add
xchg
jge
in
std
scas
fsubp
jnp
decl
testb
ret
clc
stos
test
add
add
les
mov
ret
incl
call
ret
add
mov
add
jnp
incl
test
in
clc
call
push
lea
pop
push
push
lea
pop
push
movl
push
call
mov
mov
pushl
sar
lcall
scas
stos
jno
add
xchg
mov
roll
mov
add
pusha
lds
imul
incl
mov
orb
nop
js
lcall
jmp
out
rolb
add
add
cmpsl
faddl
xlat
mov
add
incl
clc
push
push
call
fldl
mov
in
andb
push
mov
jmp
cli
mov
scas
and
out
add
add
test
decb
cli
add
scas
stos
call
incl
test
mov
mov
enter
jp
orl
pushl
clc
call
push
call
push
call
fwait
mov
mov
mov
xchg
add
lret
repnz
mov
jp
addr16
jnp
jmp
incl
stos
test
outsl
into
jp
add
add
incl
add
mov
pushl
lds
add
add
decl
subl
cmpl
jne
push
call
cmpsb
jmp
jl
cmp
fldt
mov
decl
icebp
loope
imul
pushl
add
sti
mov
mov
popa
add
add
aam
mov
ljmp
mov
add
mov
cld
cwtl
add
incl
add
ja
hlt
incl
add
rorl
lcall
push
call
test
pusha
cmpsb
add
ljmpw
incl
add
in
int
fcos
incl
std
mov
cmpsb
outsl
in
push
popf
ret
scas
cmc
mov
lock
cmpsl
mov
mov
incl
xlat
add
orb
sti
add
shr
mov
mov
jmp
mov
add
cmpsb
popa
add
ja
mov
sub
pop
pop
leave
push
sub
pop
ret
push
push
inc
pop
mov
push
push
push
call
dec
pusha
mov
jge
imul
std
shll
add
loope
jns
xchg
js
incl
mov
add
decl
add
mov
fs
add
add
cltd
mov
mov
ljmp
add
lcall
incl
not
pop
push
push
call
incl
mov
add
add
add
stc
mov
mov
add
mov
cld
cmpsb
pushf
mov
push
loope
jmp
add
mov
mov
jle
add
call
add
mov
sar
jmp
imul
add
rol
xchg
test
decl
mov
push
call
addb
jns
cmc
stos
xchg
mov
add
sahf
in
lods
icebp
leave
ljmp
jmp
add
jbe
fildl
mov
add
jmp
scas
add
jle
mov
jge
imul
test
mov
add
mov
lahf
xchg
add
mov
add
mov
sub
mov
push
sub
pop
mov
mov
push
rol
shl
pop
mov
push
call
add
pushf
add
add
mov
call
sar
lcall
add
add
incl
fadds
add
add
out
lahf
aam
fs
add
movl
add
add
add
add
mov
mov
in
test
jmp
jl
mov
mov
sub
inc
inc
dec
push
call
decl
in
jl
add
lods
lods
incl
jle
add
leave
add
addb
je
xchg
ja
out
add
aad
cltd
add
mov
add
mov
xlat
ljmp
incl
mov
mov
shrl
incl
rcll
add
data16
add
in
mov
sub
cmpb
jne
call
add
push
call
jmp
add
add
fsts
mov
ret
fisubrs
add
incl
mov
icebp
jmp
add
mov
incb
movsb
add
mov
add
mov
add
push
jmp
stos
neg
add
jl
sub
fildl
add
mov
add
incl
add
add
mov
sub
jmp
cmpb
jne
call
push
rol
pop
add
jmp
cmpb
jne
push
call
cmc
mov
mov
add
decl
fldl
leave
shrl
add
mov
lret
pusha
out
scas
cld
std
mov
fs
stos
add
mov
add
imul
bound
add
incl
mov
add
decl
mov
mov
jbe
mov
in
int3
ljmp
push
mov
sub
call
push
call
mov
add
xchg
les
call
mov
idiv
mov
cmc
add
lret
add
scas
add
mov
mov
push
popf
mov
iret
mov
lcall
pushl
add
xchg
mov
jns
faddl
jno
stc
imul
incl
addr16
sub
add
jmp
push
call
add
outsl
loopne
add
in
or
cmpl
lcall
jmp
hlt
add
loop
add
add
jnp
bound
test
xchg
lea
jb
add
incl
lods
add
popa
test
inc
std
rolb
lods
sar
fidivrl
jmp
ljmp
mov
add
mov
clc
incl
sub
add
cmpb
ja
push
call
repnz
incl
hlt
test
aad
loope
xchg
mov
incl
add
mov
incl
mov
incl
add
add
clc
incl
add
mov
std
add
nop
scas
add
leave
add
add
add
jb
add
fbld
mov
add
add
pushf
xchg
pushf
popa
into
in
add
fs
test
call
push
inc
sub
add
pop
add
push
not
add
rol
pop
jmp
push
call
int3
stos
insb
imul
mov
cmpsl
mov
mov
mov
decl
add
test
imull
add
outsl
into
pushl
rolb
add
lea
loop
mov
repnz
rcr
fildll
in
shrl
aad
lods
jb
fiadds
add
incl
add
subb
popl
pop
pop
cmpb
ja
push
call
mov
jmp
insb
in
jno
stos
mov
add
add
add
mov
incb
fwait
mov
add
lcall
call
mov
mov
hlt
je
lcall
add
mov
pushl
lea
push
in
add
mov
cwtl
mov
xchg
mov
sub
call
push
xor
pop
add
jmp
push
inc
xor
inc
pop
cmpb
je
push
call
lahf
sub
pushl
add
cld
ret
add
call
incl
cld
add
in
add
int
add
icebp
jmp
movsb
shll
insb
jecxz
add
add
add
ljmp
decl
mov
cmpsl
in
jecxz
incl
mov
lret
incl
out
movsl
mov
sub
cmpb
jne
push
sub
pop
call
add
push
shr
add
pop
jmp
cmpb
jne
call
push
call
add
mov
mov
mov
jne
inc
stc
stos
lret
jle
mov
push
add
jmp
jp
ljmp
call
test
incl
pusha
mov
incl
fucomi
fs
nop
je
add
cli
xorl
add
mov
mov
decl
fistpll
lds
mov
mov
sub
add
jmp
mov
push
shl
pop
mov
push
shr
shl
pop
inc
push
call
shr
jmp
repnz
fimull
add
jmp
mov
je
sti
arpl
decl
in
call
mov
std
jle
filds
cld
jo
iret
arpl
incl
add
mov
fiaddl
add
clc
ja
data16
incl
add
sub
inc
push
call
incl
clc
jmp
add
mov
mov
mov
leave
mov
outsl
incl
add
add
shll
add
add
add
cmc
mov
mov
cwtl
popa
add
add
mov
decl
test
add
mov
imul
incl
jns
cmc
add
fildl
aam
cli
addr16
add
incl
decl
test
lcall
push
call
pushf
jmp
add
testb
ret
jmp
js
ror
add
movsb
add
add
add
xchg
add
add
mov
stos
add
jmp
dec
hlt
out
add
jnp
mov
call
mov
cli
xchg
fadds
xchg
add
add
shl
mov
incl
lcall
leave
push
call
lret
je
mov
ljmp
add
mov
add
aam
mov
shl
add
negb
fiadds
add
add
fcmovnbe
data16
mov
mov
add
add
add
test
out
add
stos
add
add
out
movsb
lock
decl
ret
mov
push
call
add
mov
lds
sarb
xchg
filds
add
std
push
add
testl
imul
sbbb
arpl
add
hlt
lahf
mov
mov
rcl
js
mov
arpl
mov
aad
add
add
loop
mov
add
cmpsl
xchg
repnz
mov
decl
jbe
loopne
mov
mov
aam
mov
sub
mov
push
call
mov
add
test
shlb
out
nop
repnz
ljmp
std
cmpsl
je
mov
add
icebp
add
je
xchg
add
cld
outsl
add
add
in
iret
add
xchg
jmp
incl
mov
jmp
ljmp
add
lahf
int
xchg
fwait
mov
add
add
pusha
add
mov
add
add
jns
add
mov
sub
inc
inc
dec
je
push
call
scas
push
out
add
incl
cli
xchg
popa
mov
out
mov
add
add
jge
enter
add
mov
add
cltd
add
clc
lods
add
add
add
xlat
xchg
add
add
push
mov
mov
xchg
testl
mov
add
mov
addl
lret
decl
mov
incl
fs
inc
add
je
add
add
add
movsl
in
cmpsb
outsl
js
mov
mov
fisttpl
fcmovnb
jo
add
lock
add
gs
std
cmpsb
mov
movsl
shll
decl
add
mov
push
mov
add
sti
add
sti
roll
decl
pushf
add
add
add
push
ficoml
icebp
add
add
clc
incl
cld
call
rorl
sub
pop
push
mov
add
push
xor
pop
push
push
call
add
ljmp
incl
add
test
mov
add
mov
incl
cmc
mov
incl
incl
jl
mov
mov
sarb
add
loope
xchg
add
add
mov
mov
add
add
add
in
mov
sub
push
push
not
dec
shr
pop
mov
push
call
cld
jmp
add
shll
rolb
call
jmp
incl
jbe
lahf
mov
lock
xchg
out
add
xchg
jp
add
jo
mov
rcr
mov
mov
mov
push
add
out
std
dec
add
enter
shll
lods
mov
idiv
mov
sub
sub
add
push
call
imul
xchg
int
xchg
out
fldl
mov
jmp
add
mov
fs
lret
js
add
popa
add
incl
decl
add
incl
mov
jno
add
sahf
add
sbbb
xchg
out
shlb
clc
mov
push
shr
pop
mov
pop
push
add
add
add
pop
pop
push
call
fldl
mov
fs
mov
add
fcmovu
in
stc
add
loop
fadds
mov
mov
repnz
add
incl
incl
add
add
add
fiadds
xchg
decl
leave
add
roll
add
fiaddl
add
cmpsl
mov
sub
leave
ret
push
ror
pop
push
push
call
lcall
add
mov
add
or
xchg
lds
cli
faddl
jle
std
add
mov
mov
add
jo
incl
xchg
decl
mov
jb
add
lea
ljmp
rolb
add
mov
add
dec
loope
nop
test
int
outsl
stc
test
js
js
mov
sub
mov
add
push
push
call
mov
lcall
mov
mov
lahf
loop
jmp
mov
xchg
bound
xchg
test
mov
mov
incl
add
ljmp
fdivrp
cltd
mov
jl
enter
mov
in
fnstenv
mov
add
mov
sub
push
push
push
call
mov
enter
add
decl
jns
mov
add
ljmp
in
mov
iret
mov
incl
jmp
add
test
out
int
add
mov
movsl
jl
rolb
add
incl
mov
loop
mov
incl
jae
sahf
mov
mov
cli
add
add
incl
call
dec
cmp
call
add
add
ljmp
mov
xchg
mov
bound
loop
add
add
add
add
mov
mov
add
decl
mov
leave
mov
clc
add
movsl
mov
xchg
rolb
mov
rolb
jecxz
pushf
jnp
incb
ljmp
incl
or
shr
lea
sub
not
pop
lea
sub
mov
push
ror
rol
shl
pop
shr
add
mov
push
not
shr
sub
sub
pop
mov
sub
jne
push
sub
add
pop
mov
push
call
add
add
add
mov
mov
add
add
add
mov
add
add
fprem1
hlt
popa
add
movsb
test
add
mov
mov
cld
cmpsb
add
mov
adc
cmc
add
add
mov
mov
jmp
leave
xchg
add
mov
movsb
ljmp
mov
mov
sub
movl
jmp
push
call
sti
je
add
add
orl
add
jmp
add
enter
mov
mov
add
call
incl
cwtl
icebp
push
call
add
add
add
bound
incl
out
add
test
sti
mov
shl
mov
sub
mov
push
sub
shr
pop
mov
push
dec
inc
pop
sub
jne
mov
push
dec
pop
movl
jmp
mov
push
rol
pop
mov
sub
jne
push
call
out
xchg
test
rcrl
mov
xchg
in
add
mov
arpl
jae
stos
add
mov
lret
inc
add
ret
fcomp
add
mov
lods
add
call
lcall
cltd
int
insb
xchg
scas
mov
clc
decl
je
add
add
add
add
ljmp
jbe
lock
add
jl
call
decl
xchg
cmc
mov
stos
mov
mov
ret
xchg
fstl
mov
xorl
add
mov
fisttps
push
decl
inc
add
add
jmp
mov
push
call
add
lods
add
incl
add
int
int3
iret
bound
mov
xchg
repnz
fldenv
rcl
add
ja
fstps
add
test
decl
add
ja
add
add
icebp
jge
add
add
mov
sahf
add
lods
test
xchg
repnz
mov
incl
decl
add
cltd
add
add
adc
call
add
mov
pushl
xchg
decl
add
stos
rorb
out
cmpsl
arpl
pushl
add
nop
pushl
in
lock
add
fwait
mov
dec
fdivrs
jmp
mov
incl
jmp
lea
mov
neg
sti
mov
add
gs
call
movsb
add
mov
push
ror
sub
pop
movl
jmp
push
pop
mov
cmpw
jne
mov
push
shl
ror
dec
pop
movl
push
add
sub
rol
pop
jmp
push
add
xor
shr
pop
pushl
pop
push
call
cmpsb
add
call
mov
fistpll
add
xlat
add
mov
jp
push
xchg
add
loopne
jo
loope
mov
xchg
add
add
imul
incl
add
jns
jl
stos
cmpsl
in
mov
lods
add
add
mov
decl
mov
mov
push
call
push
aad
divl
mov
cld
lcall
cli
add
call
decl
cmpl
mov
mov
out
lret
aam
out
add
add
fnstsw
mov
pushl
add
inc
add
add
std
imul
add
add
mov
sub
mov
push
add
shl
pop
push
push
not
not
push
and
add
inc
sub
sub
inc
pop
lea
rol
pop
push
call
push
call
mov
fadds
pushl
into
lret
xchg
fsub
sar
lcall
incl
add
imul
incl
rolb
jge
jl
mov
popf
add
add
loopne
incl
testl
mov
icebp
lahf
add
in
lcall
add
add
je
in
js
incl
add
incl
movsl
cltd
mov
sub
cmpl
je
push
push
inc
sub
rol
push
or
not
add
sub
shl
lea
sub
shl
shl
pop
xor
add
ror
sub
pop
push
push
call
incl
cmpsl
mov
iret
add
jmp
ret
add
add
imul
pusha
pusha
push
add
add
add
add
add
sar
add
sti
add
jae
out
add
add
ja
nop
add
loopne
add
fsubrs
mov
jmp
add
sub
call
push
call
lock
sti
mov
cmc
out
add
xchg
xchg
mov
add
jle
mov
js
add
add
loop
add
stos
jno
lret
fadd
add
add
mov
test
test
jo
call
add
add
add
addl
mov
add
mov
mov
sub
cmpl
je
push
add
sub
pop
push
push
lea
rol
push
xor
add
shr
xor
not
sub
xor
add
pop
add
pop
push
push
inc
pop
call
cmpl
je
push
call
lods
jno
fmulp
loopne
lds
add
add
xchg
in
add
add
add
mov
fistps
clc
add
jle
jae
incl
fcom
jle
in
mov
add
enter
add
xchg
add
jmp
mov
popa
add
jmp
test
mov
mov
mov
add
clc
push
push
push
push
pop
add
shr
sub
sub
inc
pop
shr
inc
shr
pop
push
push
lea
pop
call
push
call
add
jle
add
mov
mov
add
dec
xchg
addr16
add
add
add
mov
add
add
ja
in
std
add
mov
shl
int3
test
lcall
in
lcall
insb
loop
cmc
mov
add
add
jmp
aad
mov
mov
addr16
mov
fisttpl
incl
test
ret
std
pop
push
push
not
dec
sub
push
or
inc
add
sub
dec
shr
pop
shr
dec
pop
push
call
add
lcall
fldl
out
lahf
add
add
cld
mov
in
stos
add
addb
lock
add
call
jge
mov
xchg
mov
cmp
dec
add
add
mov
mov
lods
bound
jne
fsubl
incl
cmc
cltd
add
jmp
mov
sub
push
call
cmpl
je
push
call
les
add
ljmp
add
add
add
add
incl
nop
jo
xchg
std
clc
jmp
jae
hlt
bound
add
mov
pushl
decl
sahf
addr16
jp
aad
add
mov
add
mov
repnz
call
mov
add
sarl
mov
jbe
incl
xchg
outsl
push
not
push
or
not
add
add
shl
dec
dec
sub
shr
pop
inc
pop
push
call
cmc
mov
divl
fiaddl
in
fnsave
add
jne
ja
int3
add
add
into
dec
add
mov
incl
jo
mov
add
push
sahf
int3
add
jno
add
xchg
nop
mov
cmp
pushl
flds
add
mov
xchg
mov
incl
not
pop
call
push
rol
ror
sub
shl
pop
cmpl
je
push
rol
add
pop
push
push
push
and
add
sub
pop
pop
push
call
push
rol
pop
cmpl
je
push
sub
pop
push
push
sub
add
lea
push
sub
add
shr
rol
xor
sub
sub
ror
shr
pop
rol
lea
lea
pop
push
push
lea
shr
add
pop
call
push
call
incl
mov
jae
jp
jmp
jno
mov
add
inc
les
not
mov
jle
add
ljmp
stc
add
jp
js
pushl
movsl
ja
incl
fldl
mov
add
jmp
roll
stos
mov
add
mov
sub
cmpl
je
push
push
dec
push
push
pop
add
dec
sub
inc
pop
sub
dec
pop
push
sub
sub
sub
sub
pop
push
call
push
xor
sub
pop
cmpl
je
push
lea
lea
sub
pop
push
push
sub
ror
shl
push
or
not
add
ror
xor
sub
shr
sub
shl
inc
not
pop
add
dec
rol
lea
pop
push
push
call
add
incl
add
loopne
cmc
add
jmp
add
push
icebp
insb
jmp
rolb
ljmp
lahf
jb
fiadds
mov
icebp
int
mov
testl
add
incb
add
in
mov
enter
add
jecxz
mov
insb
test
ffree
and
xlat
mov
add
incl
icebp
mov
mov
sub
call
cmpl
je
push
shr
pop
push
push
add
push
push
pop
add
sub
add
sub
pop
inc
pop
push
sub
shr
sub
pop
push
push
call
out
pusha
orb
cmpsb
add
add
cld
aam
xchg
lret
mov
movsb
jb
xchg
stc
mov
test
ljmp
xchg
pushf
mov
incl
add
std
incl
mov
add
in
movb
add
fdivl
lods
lea
decl
in
andb
call
add
test
add
inc
mov
test
arpl
mov
mov
sub
call
cmpl
je
push
add
pop
push
push
add
not
push
xor
add
ror
sub
shl
rol
sub
pop
lea
pop
push
shl
pop
push
push
add
shr
pop
call
cmpl
je
push
call
jbe
cwtl
add
xlat
mov
rolb
mov
xchg
mov
add
add
add
add
cmp
hlt
sahf
mov
add
imul
incl
add
add
lea
mov
add
mov
add
add
sti
xchg
clc
ret
incl
ret
push
shr
sub
push
or
not
add
dec
sub
rol
sub
sub
sub
pop
shr
pop
push
push
sub
sub
lea
sub
pop
call
cmpl
je
push
ror
pop
push
push
push
push
pop
add
sub
add
add
pop
rol
add
pop
push
inc
sub
add
pop
push
call
push
rol
shr
shr
rol
pop
cmpl
je
push
call
add
lcall
insb
int3
mov
incl
mov
mov
xchg
out
sti
add
mov
mov
jns
loop
add
mov
incl
add
jp
jmp
into
scas
cld
mov
add
popf
out
out
mov
incl
add
jle
loop
scas
add
decl
incl
lret
incl
mov
sub
push
push
ror
push
sub
add
xor
sub
xor
ror
dec
pop
add
dec
sub
pop
push
call
js
dec
out
mov
mov
outsl
add
mov
add
loope
add
mov
mov
add
add
add
add
xlat
add
incl
add
add
sahf
add
cli
mov
pushl
fs
mov
sub
push
push
call
xchg
mov
add
add
mov
imul
jnp
cld
in
cmpsl
rorb
outsl
add
decl
incl
icebp
add
loopne
cld
arpl
incl
call
mov
in
push
test
js
cli
lea
mov
decl
call
cmpl
je
jmp
push
call
add
stc
jmp
repnz
mov
mov
add
push
add
ljmp
add
xchg
fisubl
jmp
mov
add
jbe
clc
fdiv
lret
jmp
jecxz
scas
mov
add
mov
xchg
mov
mov
jmp
xchg
filds
add
call
mov
add
add
clc
mov
push
call
fwait
popf
add
rcll
loopne
cmpb
inc
mov
add
add
out
scas
add
mov
add
mov
add
scas
loopne
xlat
add
fucomip
jae
add
test
pushl
mov
jbe
call
jmp
repnz
call
arpl
lcall
sub
movl
jmp
xor
push
call
add
div
hlt
mov
add
fs
add
ret
add
incl
ret
in
mov
add
icebp
sbbb
incl
mov
add
gs
lea
add
xchg
imul
jne
mov
fldcw
add
jp
jmp
push
aam
mov
mov
out
add
jns
jle
incl
lods
mov
sub
pop
pop
push
call
add
mov
add
incl
add
mov
mov
test
addr16
incl
xchg
cltd
jmp
pushf
lret
add
add
mov
fwait
idiv
dec
fdiv
pop
mov
fstps
jmp
addl
add
clc
ret
int3
cld
add
sub
pop
pop
push
sub
inc
add
pop
leave
ret
push
push
add
pop
mov
push
call
in
add
add
jmp
mov
jl
jo
push
mov
lods
add
incl
add
add
cmc
test
cmc
scas
ret
inc
fldl
incl
pushl
movsl
out
jnp
add
incl
int
orb
mov
sub
add
cmpl
jne
int3
push
inc
rol
dec
pop
push
push
shr
sub
not
push
or
not
add
shr
add
ror
sub
not
shr
xor
ror
pop
xor
shr
pop
pushl
push
lea
dec
not
pop
call
push
sub
shl
shl
not
pop
push
push
call
std
mov
jmp
scas
jne
incl
add
add
fstpt
out
mov
cwtl
nop
int3
in
incl
mov
shll
stc
mov
add
mov
jge
loopne
jb
stc
loop
incl
add
add
decl
add
add
clc
in
lcall
clc
call
jmp
cmpl
jne
push
call
mov
add
add
std
mov
incl
add
mov
incl
cli
incl
out
jnp
xchg
in
pushl
jl
out
leave
xchg
mov
idiv
incl
repnz
mov
add
add
leave
inc
add
add
mov
add
fidivrs
test
insb
jne
add
iret
out
pushl
mov
sub
push
push
add
sub
ror
pop
ret
push
call
add
in
add
arpl
popa
mov
scas
mov
ret
mov
call
fisttps
ljmp
cwtl
mov
ja
ljmp
clc
outsl
sahf
popa
rolb
add
mov
pushl
mov
jo
icebp
movsb
mov
add
mov
cld
lret
loope
incl
jmp
cmpl
je
cmpl
jne
push
inc
shl
pop
push
push
add
sub
add
shr
push
xor
add
sub
sub
shl
ror
pop
rol
shr
sub
pop
push
rol
inc
shl
pop
pushl
call
push
sub
pop
mov
push
rol
ror
pop
push
push
push
call
add
add
mov
divb
jmp
jo
in
aam
scas
mov
add
cltd
add
mov
test
ljmp
incl
jns
incl
fstps
jp
add
add
mov
fsubl
push
lcall
sub
pushl
call
push
push
sub
push
or
not
add
add
shr
shr
sub
rol
lea
pop
shr
sub
rol
pop
push
call
add
jo
mov
mov
mov
je
lds
add
add
dec
pushf
add
mov
add
add
rclb
cli
add
mov
mov
out
decl
fiadds
decl
add
jno
pushl
add
movl
push
add
mov
mov
add
add
xchg
xlat
rol
mov
sub
pushl
push
add
sub
pop
call
push
call
add
add
mov
call
incl
pushf
add
add
add
add
js
hlt
incl
mov
lods
xchg
mov
call
xchg
jp
lock
push
lods
cltd
xchg
mov
mov
iret
mov
mov
xchg
mov
sub
mov
push
push
push
call
add
in
add
cmpsl
xchg
aad
add
movb
add
xchg
add
add
jge
jns
in
into
out
ret
add
mov
aam
dec
add
pushf
mov
add
mov
jbe
out
mov
pushl
xlat
add
in
fsubr
lock
mov
sub
pushl
push
call
cmpsl
jmp
loopne
jmp
ja
jmp
add
sahf
movsb
mov
add
add
add
sti
in
mov
jno
mov
pushl
rcr
lret
add
icebp
jbe
add
int
cmc
roll
add
add
incl
lock
dec
mov
in
aad
jmp
mov
add
in
clc
call
push
call
mov
add
cwtl
jle
out
mov
jo
ret
mov
lods
test
cmpsl
decl
testb
cmp
fsubrp
mov
decl
add
xchg
add
cli
test
cli
jae
fdivr
mov
add
mov
add
mov
mov
xchg
mov
mov
add
add
clc
leave
push
call
add
incl
add
mov
mov
decl
out
imul
clc
shll
add
ljmp
out
incl
push
in
add
add
mov
incl
jne
fnstsw
jbe
mov
fists
les
add
pop
pop
push
call
add
lods
add
dec
cmpsl
popa
int
movsl
add
mov
call
lcall
je
jge
decl
incl
js
add
add
sar
decl
add
enter
lods
mov
mov
add
pusha
add
jle
movsl
add
popf
lret
jne
incl
push
xor
pop
leave
push
xor
pop
add
push
call
add
mov
add
loop
add
add
mov
stos
imul
add
incl
mov
jb
xchg
jle
xchg
add
xlat
test
jo
xchg
add
decl
mov
jmp
cmpsl
lret
mov
mov
mov
add
add
mov
sub
ret
push
call
fwait
mov
jnp
mov
test
add
mov
sbb
add
jo
test
insb
loopne
jmp
xchg
mov
lds
inc
add
add
inc
add
out
add
add
mov
test
je
addb
mov
mov
mov
sub
jmp
cmpl
jne
push
push
not
ror
push
sub
add
inc
sub
lea
shr
pop
inc
inc
add
ror
pop
push
call
lcall
mov
sahf
in
add
add
add
loope
add
in
add
jmp
arpl
ja
test
loope
incl
add
add
mov
add
xchg
add
incl
add
sbb
lods
mov
sub
pushl
call
push
push
call
mov
into
add
jp
add
fidivrs
mov
aad
incl
mov
shl
mov
add
out
add
add
mov
mov
add
mov
aad
xchg
add
jle
mov
add
mov
addl
nop
add
add
addr16
mov
in
xorb
incl
call
push
lea
pop
jmp
cmpl
jne
mov
push
sub
add
pop
push
push
call
stc
add
add
add
add
addr16
stos
jbe
add
bound
add
mov
add
icebp
and
icebp
jge
add
add
add
add
ljmp
outsw
fadds
add
add
iret
mov
incl
add
popf
add
mov
clc
pushl
sar
push
push
sub
xor
sub
push
sub
add
sub
xor
sub
shl
inc
pop
lea
pop
push
call
rorl
sahf
nop
add
cmpl
add
nop
add
mov
mov
decl
movsb
enter
incl
pushl
cmpsl
add
pushl
loopne
scas
jmp
lods
test
cltd
add
out
add
add
add
decl
mov
jnp
incl
pushl
call
mov
push
add
ror
shl
sub
pop
push
push
push
shl
shr
shl
sub
pop
pushl
call
push
sub
shr
sub
pop
push
push
dec
ror
shl
inc
push
or
inc
add
rol
not
sub
lea
add
pop
not
pop
pushl
call
push
shr
rol
xor
sub
pop
mov
push
call
mov
mov
ret
ret
incl
incl
out
mov
mov
mov
add
incl
ja
add
mov
stc
popa
in
mov
aam
mov
add
neg
shl
int3
add
xchg
lret
mov
jne
pushl
xchg
mov
test
mov
xchg
mov
in
clc
push
push
push
sub
pop
pushl
call
push
sub
sub
pop
push
push
call
mov
add
add
lcall
ljmp
add
add
jns
rorl
cwtl
add
add
mov
add
add
bound
push
add
xchg
add
mov
jmp
test
mov
hlt
jnp
fiadds
xorl
xchg
xchg
fldl
mov
mov
sub
push
push
shl
inc
pop
pushl
call
push
call
add
incl
add
cmc
add
add
incl
jge
add
add
add
incl
jne
movl
popa
icebp
jp
add
add
incl
add
mov
mov
cld
mov
add
mov
inc
aad
mov
fcomip
add
fldl
pushf
leave
in
incl
dec
lret
xor
add
push
sub
add
add
sub
rol
pop
shr
pop
pushl
call
push
sub
inc
lea
pop
mov
push
call
add
add
shll
outsl
incl
jle
add
incb
imul
movsb
mov
xchg
jae
stc
test
gs
mov
mov
lret
mov
roll
add
ljmp
mov
mov
lock
ret
lods
add
int3
int
jp
ljmp
add
movsl
stos
add
mov
les
in
clc
push
push
pushl
push
add
dec
pop
call
push
push
dec
push
and
add
inc
xor
sub
dec
sub
dec
pop
not
shr
xor
ror
pop
pushl
push
call
test
test
xchg
ljmp
int
decl
lods
sahf
add
add
ret
push
movsl
xlat
iret
add
rclb
mov
add
add
cmc
xchg
mov
mov
mov
je
clc
mov
xchg
jb
movsb
mov
bnd
rolb
lock
js
add
push
mov
sub
call
push
call
add
fdiv
add
out
mov
mov
rorl
add
jle
enter
test
fdivrs
outsl
mov
mov
xchg
add
incl
out
cld
js
jns
movsb
add
add
add
add
incl
incl
mov
sub
mov
push
sub
rol
shl
pop
push
push
call
call
mov
jmp
add
jle
add
ljmp
add
jo
mov
mov
add
popa
mov
add
jmp
movsb
icebp
stos
imul
je
xorl
mov
add
jmp
add
add
sub
push
push
call
in
data16
fwait
roll
decl
add
inc
mov
mov
iret
add
add
test
add
incl
jge
incl
xchg
jne
in
mulb
lcall
mov
mov
jmp
call
cli
stos
add
out
add
mov
decl
add
fildl
jne
scas
std
push
shr
mov
sub
pushl
call
push
inc
sub
xor
shl
pop
pop
push
call
add
add
out
cmpb
add
jmp
cli
decl
add
lock
lcall
jmp
add
movsb
shlb
out
aam
add
call
mov
add
xchg
cmpsl
test
incl
xchg
add
mov
mov
incl
test
stc
ljmp
pop
inc
add
pusha
add
add
rolb
imul
jns
in
movsl
add
add
fldl
add
jl
in
add
aad
mov
incl
movsb
addl
add
jo
mov
lods
or
fucomi
pushl
popl
mov
mov
fsts
sub
push
push
shl
shl
not
add
push
and
add
lea
not
inc
sub
sub
pop
xor
lea
add
xor
pop
pushl
call
push
dec
sub
shr
pop
push
push
call
add
loopne
fndisi(8087
jge
jnp
ja
jge
jmp
mov
ja
incl
add
add
in
popf
mov
popa
mov
lods
add
incl
mov
loope
in
lret
add
hlt
xchg
add
sahf
je
xlat
addl
les
test
xchg
jnp
cwtl
lret
fdivrs
clc
jp
jnp
cmpsl
jbe
stos
test
mov
mov
lock
je
test
add
call
jmp
push
call
add
mov
mov
jb
mov
incb
add
inc
mov
pushl
xchg
mov
jbe
add
cld
addl
add
decl
mov
add
add
cmp
mov
add
jmp
movsl
jbe
scas
cmpsb
lahf
ret
loop
nop
fwait
rcll
mov
mov
sub
call
push
dec
add
add
pop
jmp
call
push
push
lea
add
xor
push
or
inc
add
rol
rol
xor
sub
not
ror
pop
shr
sub
pop
push
shl
shl
add
pop
pushl
call
push
add
inc
not
pop
push
call
push
call
test
in
add
add
mov
icebp
xorl
incl
shr
icebp
add
mov
add
add
out
add
aam
fldenv
leave
std
icebp
loopne
add
jge
call
add
jmp
mov
pusha
mov
nop
add
incl
mov
sub
mov
push
push
add
pop
ret
push
add
shr
pop
lea
push
push
inc
shl
sub
push
push
pop
add
inc
ror
shr
sub
sub
add
dec
pop
sub
pop
push
xor
rol
add
pop
pushl
push
call
incl
add
fimuls
add
sar
ljmp
mov
add
incl
stos
add
xchg
pushfw
xchg
add
add
add
add
arpl
incl
testl
add
add
add
fdivr
decl
in
cmc
lock
add
mov
sub
call
push
call
add
add
out
icebp
add
iret
iret
stc
add
incl
add
mov
jno
add
mov
jae
jae
add
fs
jl
in
add
add
cmpsb
incl
add
mov
cmpsl
mov
in
lahf
add
add
incl
jb
incb
repnz
mov
xchg
push
add
sub
lea
push
call
mov
movsl
scas
add
fmull
decb
jmp
fs
jmp
add
cli
incb
mov
add
incb
scas
mov
cmpl
add
add
cld
iret
add
repnz
lods
test
decl
sub
push
push
shl
pop
push
push
push
xor
dec
add
lea
pop
pushl
push
call
jb
incb
arpl
in
jne
mov
mov
add
filds
add
add
incl
out
add
jnp
xchg
mov
pushl
add
add
js
xchg
jge
add
stc
cltd
add
int3
movsb
add
iret
add
out
add
lret
sahf
lock
in
add
add
enter
add
call
jmp
in
clc
push
push
ror
inc
add
push
and
add
sub
rol
pop
dec
pop
push
call
push
sub
pop
push
push
push
and
add
rol
sub
shr
pop
not
rol
pop
pushl
call
push
call
in
lcall
jp
mov
mov
mov
jmp
popf
mov
incl
testl
mov
fsubs
jecxz
test
add
add
add
jmp
jecxz
call
shlb
aad
incl
movsl
lcall
shrb
add
add
sub
push
call
push
push
add
push
or
inc
add
rol
sub
sub
pop
add
rol
pop
push
xor
pop
pushl
push
inc
pop
call
call
jmp
push
call
iret
add
add
hlt
lock
ljmp
mov
add
cmpsl
add
jae
ja
add
ljmp
ljmp
fwait
loope
add
add
lods
add
ljmp
add
in
cld
mov
mov
lcall
add
out
int3
rorl
add
imul
mov
sub
pushl
push
not
dec
shl
pop
mov
push
call
mov
decl
mov
jno
call
mov
mov
mov
add
sahf
in
loopne
add
jl
loop
bound
mov
addb
arpl
decl
incl
mov
lcall
xchg
xlat
cwtl
cltd
add
movsl
cmp
mov
jmp
push
push
shl
shr
push
and
add
xor
sub
sub
sub
not
pop
shl
sub
pop
pushl
push
not
not
ror
pop
call
push
call
incl
add
add
add
aad
cli
jnp
cld
out
testl
add
add
fyl2x
xchg
add
call
add
pushf
fcos
jmp
add
out
call
add
lret
jle
add
mov
ffree
cli
mov
decl
jmp
add
add
mov
sub
push
call
push
lea
pop
push
push
inc
shl
add
push
and
add
sub
sub
dec
pop
rol
add
inc
pop
pushl
push
call
js
mov
fcos
ljmp
test
jae
jmp
add
mov
incl
add
incl
add
mov
xchg
je
popa
data16
decl
add
in
clc
nop
in
pushl
xchg
jge
jnp
add
arpl
sti
outsl
sarb
incl
add
mov
xchg
mov
sub
call
push
call
add
add
jo
mov
mov
test
jmp
stos
test
add
loopne
je
cmpsb
out
jge
hlt
xchg
add
testl
mov
aad
sub
incl
les
add
add
imul
add
add
ret
out
mov
loopne
mov
add
iret
mov
xchg
decl
push
push
call
add
incl
mov
scas
push
mov
fadds
mov
jp
mov
incl
jmp
arpl
add
decl
in
add
add
mov
jno
add
add
incl
lcall
add
in
xchg
mov
xchg
dec
decl
call
push
shl
sub
pop
leave
push
inc
sub
pop
add
push
call
sahf
add
add
repnz
ljmp
movsl
test
jno
mov
add
add
out
add
add
mov
mov
rorl
add
fdivrs
stos
jno
movsb
mov
mov
add
gs
inc
add
jge
jp
mov
xchg
scas
jb
add
mov
sub
pop
pop
pop
push
ror
pop
pop
leave
add
push
xor
pop
ret
leave
push
sub
xor
rol
pop
ret
push
call
xchg
fbstp
iret
mov
push
add
incl
mov
mov
add
add
add
mov
add
add
mov
add
add
lods
add
mov
incl
fisubrl
incl
jo
incl
addr16
xchg
jb
jmp
std
mov
rcll
add
in
clc
call
in
push
call
shrb
incl
incl
xchg
clc
add
pushl
idivl
add
in
mov
std
add
add
add
add
inc
clc
add
add
add
xchg
add
fistps
mov
ljmp
add
mov
add
mov
jb
mov
into
int3
fabs
push
movsl
mov
add
incl
arpl
add
add
out
enter
add
ret
mov
cmpsb
mov
add
into
subb
nop
mov
fistpl
incl
popl
mov
mov
push
add
jmp
mov
lret
mov
mov
lds
add
lds
mov
loope
incl
cld
mov
push
sub
sub
inc
pop
mov
push
lea
pop
sub
push
call
jae
in
pusha
jae
test
mov
sbb
add
repnz
add
aad
sahf
add
cmpsb
shr
test
js
incl
add
pushl
incl
imul
movl
roll
mov
jmp
loope
movsl
cld
ljmp
jbe
fadds
rcr
add
leave
jecxz
mov
mov
sub
push
push
call
data16
shl
mov
lock
add
int3
add
shll
add
mov
decl
xorl
cmc
add
test
sti
mov
inc
test
fidivrs
stos
xorl
mov
add
jo
add
add
mov
sub
push
push
push
call
add
iret
push
add
jae
nop
add
imul
add
jns
jl
decl
add
test
mov
add
mov
add
incl
insb
insb
mov
popa
mov
gs
add
data16
mov
xchg
xchg
lcall
in
clc
call
add
xor
sub
pop
dec
jne
mov
push
call
mov
jnp
cwtl
mov
add
mov
add
loopne
add
fcomi
add
add
add
incl
add
add
fidivl
add
mov
mov
add
add
mov
jmp
add
add
fwait
add
fisttpll
incl
inc
loopne
add
push
rol
pop
call
push
add
add
pop
mov
addl
decl
jne
push
sub
pop
leave
ret
push
push
call
add
ret
in
shlb
add
mov
add
add
add
out
mov
push
add
add
xchg
lock
fsubs
mov
add
lods
mov
lret
lock
mov
ljmp
incl
push
mov
xlat
mov
add
add
incl
add
incl
decl
ror
xor
pop
add
push
push
call
mov
add
xchg
call
mov
jne
in
add
jp
add
add
add
add
add
lret
mov
add
test
add
add
xchg
jbe
fdivr
js
add
fldl
mov
cld
cld
mov
add
add
mov
jl
aad
test
add
mov
push
push
push
push
call
cmpsl
add
insb
mov
xchg
in
add
mov
rcl
incl
ja
mov
add
mov
mov
cmc
add
iret
repnz
cld
mov
mov
decl
add
add
add
jns
jmp
incb
jne
loop
add
mov
xchg
sti
cli
xchg
decl
call
pop
or
ret
add
pop
lea
push
lea
xor
pop
sub
push
not
add
pop
mov
push
call
jecxz
add
cmpsl
add
add
xchg
mov
out
je
add
jmp
in
add
add
jmp
mov
int3
mov
out
loop
ljmp
mov
add
mov
incl
mov
sti
add
dec
add
mov
clc
inc
ljmp
add
add
cmp
add
add
add
add
mov
filds
sar
fdivr
call
add
icebp
mov
ljmp
add
mov
add
pushl
lcall
add
mov
mov
out
in
call
incl
mov
andl
aad
ljmp
add
mov
add
add
jp
add
add
cli
mov
sub
add
push
sub
dec
pop
mov
add
xor
push
call
mov
lea
incl
mov
xchg
data16
pushf
cli
mov
mov
add
mov
add
add
mov
add
scas
loope
add
add
subb
mov
incl
add
add
fimuls
mov
mov
xchg
lret
mov
mov
sar
decl
mov
sub
mov
and
push
call
insb
decl
call
add
rorb
int3
in
mov
imul
incl
call
add
xor
add
mov
mov
nop
loop
add
cmpsl
add
add
add
je
fildl
mov
roll
in
mov
add
call
stos
mov
fisttps
incl
pop
add
add
cmp
je
push
shl
pop
add
push
inc
sub
xor
pop
cmpl
jne
push
call
popf
add
decl
add
add
gs
jns
call
call
int3
add
in
testl
push
add
mov
add
add
mov
repnz
add
into
mov
fiadds
lds
sti
fsubl
add
loopne
add
testb
add
incl
jbe
add
mov
sub
xor
pop
push
call
mov
add
bound
mov
insb
movsb
lods
in
mov
add
mov
hlt
enter
cltd
xchg
rcrb
mov
mov
mov
mov
out
mov
add
mov
out
add
call
add
stc
out
jb
add
in
mov
xchg
add
iret
add
add
lcall
pop
push
shl
add
pop
pop
push
shr
not
shl
pop
leave
ret
push
call
add
rcl
rolb
dec
mov
jecxz
cli
push
add
stos
add
mov
loope
add
je
decl
add
sarb
gs
mov
add
xchg
mov
add
add
mov
jmp
call
stos
add
call
xchg
add
clc
mov
add
push
sub
sub
pop
push
push
call
pusha
incl
lcall
test
mull
lcall
jne
popa
mov
mov
sahf
mov
aad
add
add
fwait
add
out
insb
add
add
nop
add
add
ljmp
mov
xlat
jbe
incl
lahf
mov
mov
mov
mov
sub
push
pop
push
call
add
incl
mov
lea
rolb
add
decl
out
decl
jmp
mov
mov
sar
jl
iret
add
add
add
mov
xchg
jecxz
add
xchg
xorb
mov
mov
jne
in
repnz
mov
sub
pop
add
push
call
add
incl
fcomp
add
add
popf
xchg
iret
fs
call
incl
mov
mov
rolb
mov
aad
sar
jmp
add
negb
cmpsl
in
js
mov
add
mov
add
popf
in
bound
popa
add
les
push
mov
add
decl
pushl
clc
decl
add
rol
pop
push
call
xor
push
inc
dec
sub
pop
pop
pop
push
call
mov
add
mov
add
sahf
mov
mov
mov
add
ljmp
add
mov
call
add
ljmp
dec
test
jno
fwait
mov
incl
xchg
mov
mov
add
mov
sub
pop
pop
pop
push
call
mov
cwtl
add
test
pushl
rcr
add
mov
out
je
add
add
call
jmp
cmpsl
filds
test
mov
in
movsb
popf
movsb
stos
jne
addb
xchg
jp
add
clc
repnz
mov
lea
std
mov
add
jmp
int
mov
mov
decl
leave
push
sub
not
pop
ret
push
push
call
xlat
addb
and
xchg
out
clc
incl
add
enter
add
lcall
add
into
add
xchg
pushl
iret
jbe
mov
std
add
stc
cli
add
lcall
add
jo
imul
add
add
fs
mov
cld
add
ljmp
mov
aam
add
mov
in
clc
decl
inc
add
jp
add
addr16
mov
leave
loopne
add
repnz
icebp
mov
mov
add
shlb
add
add
mov
incl
add
test
add
pushl
mov
add
incl
mov
jp
add
push
fildll
add
add
mov
jb
cltd
mov
add
add
add
mov
sub
add
push
push
sub
shr
pop
push
push
call
cwtl
xlat
add
add
mov
cmpsb
fidivrl
add
xchg
lret
test
fld
out
imul
sahf
fs
add
mov
add
add
add
add
mov
add
imul
add
add
add
mov
cmpsb
bound
jecxz
add
mov
add
cltd
jno
stc
mov
ljmp
add
les
incl
xor
not
lea
not
pop
push
push
call
xchg
enter
jp
add
ja
jns
add
test
jns
stos
add
jge
add
mov
cwtl
rclb
lock
inc
xchg
jp
arpl
add
out
rol
mov
add
jne
add
jbe
mov
incl
mov
imul
add
test
js
sahf
push
addb
add
les
add
jb
add
clc
call
pop
mov
push
sub
add
dec
pop
lea
push
add
pop
sub
mov
push
call
add
mov
call
jno
mov
add
jmp
pushl
cmpsb
sar
aad
js
add
pushl
mov
std
mov
jb
mov
iret
add
add
sahf
shlb
scas
lea
add
add
les
incb
sahf
add
cmpb
add
les
jmp
sub
shr
push
ror
shr
xor
add
pop
add
mov
add
push
call
clc
xchg
mov
mov
mov
xchg
mov
cmpsl
inc
jo
testb
rolb
mov
add
out
jmp
jmp
lret
hlt
pushf
mov
mov
lock
xchg
mov
mov
pusha
addl
cli
ljmp
into
call
xlat
outsl
add
mov
mov
mov
push
sub
inc
inc
pop
add
push
shl
sub
inc
pop
xor
push
call
cmpsl
in
loopne
mov
incl
add
decl
add
mov
into
shlb
cmpsl
int3
jnp
xchg
add
lahf
mov
test
decl
mov
pushl
jae
jb
add
incl
add
add
jns
int3
jecxz
add
mov
sub
mov
and
call
push
rol
inc
lea
not
pop
add
push
call
std
cli
xchg
popf
test
je
add
add
add
add
add
incl
jno
popa
faddl
mov
add
jp
incl
mov
stc
add
in
je
sti
add
add
decl
jmp
add
aam
add
test
call
sub
cmp
je
push
call
mov
stos
add
add
mov
mov
les
mov
mov
add
add
add
std
add
out
cmc
out
xchg
lods
std
add
ljmp
div
leave
xchg
enter
add
jge
rol
clc
decl
gs
in
add
addl
add
mov
fistpll
fs
jl
jno
add
enter
mov
jle
inc
add
clc
add
push
rol
rol
pop
cmpl
jne
xor
pop
push
inc
lea
ror
ror
pop
pop
pop
push
xor
shr
ror
pop
pop
pop
leave
push
pop
ret
push
call
xchg
cmp
jmp
add
out
mov
add
out
add
mov
add
incl
cltd
stos
add
decl
add
add
loope
add
out
add
add
add
pushl
mov
incl
add
add
data16
add
mov
insb
add
jnp
mov
decl
decl
sarb
cmpsl
inc
not
pop
add
push
add
lea
inc
not
pop
mov
pop
pop
push
shr
pop
pop
push
call
lret
les
incl
outsl
add
mov
mov
push
cwtl
incl
add
fdivs
ja
mov
mov
clc
in
iret
add
mov
mov
lock
add
jecxz
mov
add
stc
imul
fisttpll
add
mov
xchg
add
lcall
in
clc
lcall
push
add
pop
leave
ret
push
push
xor
pop
mov
push
call
int3
incl
add
jbe
incl
jne
iret
aam
add
mov
mov
add
test
add
add
add
xchg
add
add
ljmp
ja
addr16
in
fdivl
bound
jbe
add
ret
jbe
sahf
add
mov
push
mov
movsb
mov
nop
jno
jne
add
aam
add
mov
add
incl
sti
dec
pop
push
push
not
inc
pop
push
push
rol
not
add
shl
pop
push
push
dec
lea
pop
push
mov
push
not
pop
push
push
call
push
shlb
add
add
add
ljmp
fnstenv
mov
add
add
mov
inc
mov
incl
add
add
mov
movl
mov
std
addl
call
jecxz
sahf
pushl
sti
decl
pop
lea
sub
push
call
mov
mov
add
jmp
clc
add
popf
mov
inc
incl
in
jne
stc
mov
mov
out
movsl
mov
add
mov
add
int
ljmp
add
push
jp
stos
mov
add
stc
add
jmp
loope
shlb
add
decl
decl
add
push
call
test
mov
mov
lret
add
mov
add
add
movb
mov
add
add
cwtl
add
add
jmp
outsl
out
mov
out
add
add
imul
enter
testl
ret
jmp
add
xchg
mov
ja
aam
mov
add
add
jnp
add
jbe
jae
add
mov
sub
mov
push
add
not
xor
sub
pop
add
pushl
popl
push
sub
pop
mov
push
call
xchg
cld
aam
mov
mov
ljmp
ljmp
shll
lods
scas
mov
add
incl
jmp
outsl
add
add
xchg
lcall
mov
add
mov
insb
jns
call
cli
imul
call
in
clc
incl
stc
xor
push
add
pop
lea
mov
add
push
call
add
mov
sti
add
mov
leave
add
imul
add
scas
mov
decl
in
xchg
data16
mov
ja
add
add
add
push
jae
mov
add
fildll
add
ljmp
decl
mov
test
jge
hlt
aad
mov
mov
add
scas
decl
pushl
shr
adc
add
push
call
mov
fsts
add
xchg
add
test
mov
add
add
int3
je
decl
ljmp
add
mov
xchg
add
in
add
cwtl
jge
test
add
jmp
cmpb
push
out
decl
sahf
aad
jge
add
stos
dec
mov
sub
nop
nop
cmp
je
push
call
scas
mov
out
rolb
mov
add
stc
lcall
mov
fbld
add
jae
add
mov
leave
add
ret
add
jmp
js
add
in
je
outsl
popa
mov
xchg
out
mov
mov
add
test
add
sub
nop
nop
inc
push
call
incl
imul
fiaddl
add
out
add
gs
add
pushl
shl
roll
mov
popf
stos
jmp
jmp
rol
jecxz
add
add
js
in
xchg
lahf
jae
mov
ljmp
mov
add
jecxz
mov
mov
incl
sub
shr
lea
lea
pop
nop
push
call
jne
cmpsl
outsl
add
mov
add
add
decl
jmp
mov
mov
add
xchg
add
add
out
xchg
lea
nop
cli
movsb
test
add
jae
incl
scas
loope
incl
movsb
add
andl
mov
add
mov
add
lea
add
incl
clc
jb
xor
push
call
add
fiaddl
incl
mov
rcr
jl
rolb
add
lods
mov
cld
mov
call
mov
test
add
add
xchg
gs
std
add
add
jl
mov
add
fwait
incl
xchg
sahf
pushl
out
mov
rolb
int3
cli
add
jmp
incl
je
decl
jmp
push
call
add
ljmp
loop
add
mov
incl
incl
add
mov
push
add
stos
mov
mov
push
in
fiaddl
clc
arpl
xchg
add
aad
leave
mov
mov
jmp
sar
stc
add
fadds
lret
mov
jecxz
shl
xchg
mov
add
jo
jmp
incl
and
shrl
inc
inc
add
jo
add
hlt
add
jns
dec
out
test
scas
rcr
enter
mov
jnp
add
mov
faddl
xchg
mov
add
test
in
add
add
add
mov
clc
pushf
int
mov
add
add
mov
xchg
mov
mov
xchg
jns
ret
mov
mov
int3
add
mov
sub
movzwl
mov
push
call
xchg
in
add
add
js
add
stos
loop
sti
add
mov
lcall
add
into
add
push
add
mov
add
add
ljmp
mov
mov
add
add
lret
add
scas
incl
nop
loopne
scas
add
rorb
add
mov
push
inc
pop
xor
push
lea
lea
ror
shl
pop
xor
shl
push
inc
shl
add
pop
xor
shl
push
not
inc
ror
pop
xor
push
call
add
cld
into
add
add
outsl
decl
ja
jmp
mov
add
pushl
add
add
fsubr
nop
in
add
add
decl
jecxz
loop
xchg
mov
rolb
push
incl
jmp
add
sub
shl
xor
mov
push
add
sub
lea
pop
add
pop
push
call
add
incl
int3
mov
js
add
xchg
add
ljmp
add
lret
mov
in
loopne
add
add
shlb
shrl
loope
ljmp
add
ljmp
out
mov
push
add
ja
jno
mov
incl
cld
lock
aam
into
mov
mov
in
clc
lcall
shr
shl
shr
pop
pop
push
shl
lea
dec
ror
pop
pop
leave
ret
push
call
rcr
popf
lock
xchg
cld
add
add
xchg
stc
fldpi
fisubrs
jle
cmpsl
lods
into
add
js
incl
roll
imulb
loope
lcall
incl
mov
mov
add
roll
add
add
lret
movsl
stos
mov
mov
sub
push
mov
push
push
sub
pop
push
push
push
push
call
ret
mov
add
add
stos
call
test
mov
fisttpll
int
pushl
mov
mov
mov
add
add
cwtl
jne
fcos
inc
scas
add
add
mov
mov
mov
sti
mov
add
addl
jecxz
lea
mov
mov
push
call
add
add
addr16
jmp
int3
add
stos
mov
scas
add
decl
cwtl
xchg
add
rclb
call
int
lahf
lahf
mov
add
ljmp
mov
jmp
mov
js
add
xchg
pushf
add
add
shll
add
add
lock
incl
hlt
add
decl
decl
add
add
mov
fisubrs
mov
rorb
cli
incl
mov
cwtl
add
add
xchg
mov
add
jnp
add
mov
xchg
mov
mov
mov
aad
add
add
std
add
movsb
add
add
add
lds
out
ljmp
add
popa
movl
in
clc
mov
push
call
add
add
jmp
div
icebp
outsl
std
je
mov
add
add
out
lods
cmc
mov
dec
jo
mov
clc
incl
mov
add
add
fwait
mov
call
mov
cltd
add
in
mov
mov
mov
ficoms
pushf
mov
add
jbe
mov
sub
test
je
mov
push
call
incl
nop
scas
mulb
xlat
aam
incl
mov
incl
add
jle
imul
incl
add
mov
add
rorl
mov
jmp
in
add
add
mov
incl
mov
pushl
incl
je
mov
push
call
add
add
pushl
mov
mov
shlb
pusha
incl
cmpsb
push
jnp
test
incl
add
jge
cli
or
nop
add
testl
ja
movsb
add
mov
jp
add
jmp
ja
jnp
lods
mov
mov
sub
mov
push
sub
shr
pop
mov
inc
cmp
je
push
dec
pop
test
je
push
add
sub
pop
mov
push
call
rorb
add
add
add
test
xorl
jb
mov
jmp
add
loope
call
incl
outsl
icebp
mov
mov
mov
mov
xchg
add
add
mov
decl
out
xor
mov
div
add
cmc
add
add
inc
cmp
je
test
jne
push
call
sar
decl
mov
mov
add
add
rcl
mov
inc
mov
into
jecxz
iret
popf
add
lea
stos
test
std
add
arpl
call
loopne
ret
mov
mov
into
scas
rolb
xchg
insb
add
mov
mov
sub
xor
pop
pop
push
pop
pop
pop
leave
push
call
add
add
mov
int
pushl
mov
add
mov
incl
incl
add
xchg
add
ja
incl
add
nop
mov
mov
data16
lcall
add
call
insb
scas
jl
enter
je
add
mov
sub
ret
mov
inc
push
call
mov
ljmp
outsl
insb
repnz
lcall
call
mov
popa
fwait
add
sarb
mov
add
pushf
mov
decl
movb
jmp
add
add
mov
add
add
ret
int
mov
incl
mov
mov
sub
cmp
jne
push
add
pop
lea
push
shr
pop
mov
test
je
push
rol
rol
add
pop
mov
add
push
rol
pop
cmp
jne
push
call
add
jb
mov
inc
rcl
mov
leave
mov
add
add
repnz
jmp
xchg
call
add
ret
scas
test
add
decl
call
mov
mov
decl
ljmp
leave
xchg
mov
sub
mov
push
call
add
mov
stc
sahf
add
mov
jle
incl
add
into
xlat
mov
xchg
pusha
jmp
stos
cmc
sti
rclb
loopne
add
jge
mov
jb
add
jmp
int3
loopne
clc
xchg
add
ljmp
add
ja
out
mov
mov
cltd
add
jmp
xlat
add
mov
sub
test
je
mov
push
call
jecxz
add
incl
mov
incl
add
in
incl
add
fiadds
jmp
cld
scas
add
add
add
clc
add
add
imul
ljmp
add
sahf
jle
cltd
outsl
jge
mov
lcall
je
or
add
clc
lret
mov
mov
mov
sub
add
push
not
pop
cmp
je
push
call
in
repnz
mov
imul
add
jl
mov
add
push
mov
sti
imul
outsl
jmp
mov
add
mov
add
mov
scas
mov
add
decl
add
mov
mov
add
incl
jecxz
xchg
mov
mov
incl
jl
incl
jmp
push
ror
dec
pop
xor
pop
push
ror
not
pop
pop
push
not
rol
pop
pop
push
call
xchg
clc
pusha
decl
jmp
add
mov
incl
mov
call
add
sarb
andl
fs
add
jmp
add
mov
add
add
in
add
add
incl
call
pushf
xchg
arpl
in
mov
add
add
mov
decl
pop
push
xor
xor
sub
pop
leave
ret
lea
push
call
cld
add
incb
loopne
mov
ja
fnstenv
lock
mov
add
add
cli
fimull
lcall
add
incl
mov
js
jle
mov
dec
fisttps
add
add
incb
add
mov
jle
lea
flds
add
hlt
bound
add
mov
add
mov
sub
pop
pop
push
call
jnp
cld
incl
mov
xchg
add
mov
mov
incl
lods
add
add
fidivl
mov
xchg
xchg
add
mov
ja
xchg
shr
mov
add
mov
xlat
push
enter
jmp
add
mov
add
jle
shll
call
mov
sub
pop
pop
push
lea
add
pop
leave
push
add
ror
pop
ret
push
rol
add
pop
mov
push
add
add
inc
pop
pop
push
call
incl
imulb
incl
jge
fwait
add
out
incl
decl
mov
fs
out
push
mov
incl
add
bound
mov
add
xlat
incl
aam
jle
out
jb
lret
add
rorl
incl
xchg
xlat
mov
mov
add
jmp
mov
mov
mov
sub
pop
pop
push
inc
inc
shr
pop
pop
leave
push
call
jae
leave
xchg
fs
add
add
out
cli
imul
incl
incl
sti
lahf
fwait
xchg
add
add
incl
mov
mov
lds
mov
add
add
mov
xlat
xchg
ret
jmp
add
add
scas
add
pushl
lahf
mov
incl
add
call
xchg
fwait
add
add
rorl
lret
fmuls
add
lret
movsb
add
mov
jmp
mov
incl
add
mov
fdivrs
in
addl
mov
jp
cmpsl
add
add
call
mov
add
cmpsb
add
popf
imul
stc
into
mov
add
incl
inc
rolb
ror
sub
pop
rol
xor
push
rol
pop
inc
cmpb
jne
push
lea
pop
ret
cld
sub
mov
insb
dec
iret
mov
jl
iret
mov
cld
call
enter
enter
enter
enter
enter
lret
mov
cld
js
mov
enterw
pop
pop
mov
ret
xor
mov
inc
aas
mov
lret
nop
nop
nop
nop
dec
or
add
add
pop
imul
add
cwtl
cmp
js
stos
lcall
jbe
and
xchg
aaa
xchg
in
push
or
add
add
jno
inc
loopne
shll
loop
add
roll
test
imul
fstpt
sbb
neg
and
cli
nop
nop
nop
nop
nop
popf
mov
mov
popf
add
add
push
pusha
int3
int3
int3
int3
int3
pop
jo
pusha
movsl
ficoms
stos
loopne,pn
lret
dec
cmp
add
add
adc
roll
rclb
add
daa
cld
pop
and
stos
cmp
jmp
xor
outsb
xor
into
cmp
stc
sbb
xchg
push
insb
repz
pop
xor
ja
fisubrs
xchg
mov
and
add
lcall
shrb
scas
sub
dec
cltd
cli
lock
inc
and
push
mov
adc
cmp
into
fbld
in
add
add
add
leave
sarl
xchg
sub
and
or
add
add
xor
pop
dec
xchg
loope
add
add
push
mov
cmp
test
add
add
add
dec
out
testl
jge
sub
add
add
add
adc
or
add
add
add
add
scas
lods
test
mov
cmp
add
add
add
add
add
add
add
adc
mov
cmp
push
pop
pop
add
stos
jo
and
mov
std
imul
pop
dec
jl
loop
rcrb
xor
sarl
and
add
add
mov
pop
mov
mov
push
xor
xor
int3
int3
int3
int3
cmpsb
cmp
and
or
xchg
xchg
add
add
loope
aad
adc
rclb
push
sub
xchg
cmp
enter
inc
cmp
test
data16
sub
sti
imulb
add
or
stc
jb
ret
out
pop
cli
sub
into
sub
add
jp
or
add
add
sbb
les
leave
fsts
fidivrl
inc
add
mov
mov
int3
ret
aas
push
shr
sub
xchg
in
jecxz
xchg
xchg
pop
popa
push
lahf
sub
push
pop
inc
xor
push
jae
int3
int3
int3
int3
andl
lds
lds
mov
cmp
incb
add
add
cbtw
std
mov
add
add
add
mov
aam
add
add
imul
pop
jp
xchg
ljmp
pop
jne
adc
add
imul
lock
sbb
insb
dec
addr16
mov
mov
push
add
add
pop
es
mov
mov
test
test
ss
dec
jmp
loopew
sub
cmpsb
loope
dec
movsb
ret
fmul
and
rol
pop
add
inc
es
jo
add
add
test
rorl
xor
add
sbb
jae
adc
test
adc
add
add
test
add
mov
pop
inc
je
xchg
inc
dec
xchg
sahf
lret
shrb
push
add
add
jno
out
add
add
cmp
inc
adc
adc
add
outsb
and
pop
pop
imul
test
mov
xchg
pop
cmp
ljmp
lds
mov
add
add
jo
lcall
xchg
push
add
push
loop
cld
add
add
add
jne
fistpl
push
int3
add
add
add
push
fcoml
inc
dec
or
add
add
mov
inc
mov
pop
add
add
lock
mov
pop
xor
dec
pop
pop
shll
xor
add
add
fsubr
pop
out
xor
push
movq
add
add
fistpl
add
add
pcmpeqb
jl
push
testb
add
test
xor
adc
mov
adc
mov
mov
add
dec
jne
add
add
lds
adc
popl
jmp
adc
xor
add
sub
lcall
scas
cmp
lret
pop
jbe
add
add
add
or
mov
dec
decb
and
sbb
add
add
add
dec
mov
xor
jle
inc
pop
push
mov
add
lahf
int
jp
xchg
adc
test
outsb
jbe
in
cld
scas
popf
fisttpll
gs
jno
mov
das
cwtl
iretw
pop
rcrb
or
add
add
in
sub
mov
add
add
push
inc
mov
das
cmp
dec
add
add
add
mov
mov
insl
aaa
cmp
adc
popa
test
or
add
add
add
add
sub
gs
jmp
outsl
andl
add
mov
push
add
mov
fcoms
add
jmp
push
aad
movsb
xchg
pop
mov
and
ss
lahf
shr
add
add
mov
xor
and
cmp
add
inc
es
pop
cmp
mov
adc
sub
jnp
mov
out
push
xchg
dec
push
mov
jo
aam
mov
mov
or
dec
lods
sub
pusha
add
add
add
add
add
add
jge
add
daa
push
jne
mov
dec
xor
mov
pop
jae
cmc
and
add
add
sbb
jo
enter
pop
sbb
sub
add
mov
notl
mov
xor
jmp
loop
ret
push
adc
or
add
add
clc
loopne
fistpl
xchg
aaa
std
push
add
add
inc
or
fincstp
push
das
jmp
push
add
add
dec
pop
lret
aad
lods
lcall
stc
pop
jns
jg
test
sbb
add
fwait
or
add
add
movsb
sbb
xor
pop
sarl
cmp
nop
nop
nop
nop
nop
lret
and
inc
sub
add
add
stc
mov
inc
gs
jo
fidivrl
les
pop
cld
sbb
xor
in
jae
sbb
add
cmp
xor
fwait
call
sahf
ljmp
add
mov
dec
ret
ss
repz
mov
xor
push
int
leave
fimull
xchg
aam
push
fsts
insl
add
add
add
shrb
add
jle
mov
jle
jmp
add
out
test
pop
mov
in
inc
pusha
push
add
add
dec
inc
lea
aad
shlb
push
and
jmp
fcmove
jns
xor
add
movsl
in
cmp
cmpb
sub
out
sub
notb
and
or
add
add
dec
add
add
add
lcall
add
fwait
lcall
mov
icebp
sbb
inc
or
das
sbb
push
aas
and
daa
adc
adc
xchg
push
xchg
stc
dec
popa
xchg
xchg
inc
stc
mov
xor
xor
add
adc
add
lds
push
or
cwtl
test
roll
dec
scas
aas
jmp
lods
xor
add
mov
add
add
or
add
outsl
add
add
add
std
cmp
dec
lahf
ret
add
add
add
inc
movsb
and
mov
or
mov
aaa
sub
pop
cmp
add
jl
fs
add
add
add
add
sahf
lret
xchg
cltd
mov
loop
fmuls
add
add
loope
int3
int3
int3
int3
int3
pushf
pop
shl
inc
sbbb
loop
arpl
add
imul
jnp
andb
sbbl
lock
inc
fbstp
call
enter
insb
push
jge
push
add
push
negb
cmp
add
scas
cmp
xor
add
add
pushf
mov
lahf
push
and
xchg
and
add
call
inc
mov
cmp
mov
add
adc
add
jle
mov
add
loop
xchg
adc
add
mov
test
fsubs
out
stos
push
iret
movsl
cltd
lcall
loop
xchg
out
cld
popf
inc
lret
fwait
sbb
push
push
les
mov
xchg
xchg
sbb
add
add
stos
adc
pop
adc
jbe
xor
add
add
aad
js
mov
push
movsb
xchg
aaa
sbb
pop
sahf
lds
stos
push
add
jb
mov
std
cli
out
mov
std
lcall
dec
sbb
sbb
es
cld
popa
add
add
add
sbb
je
stos
in
addb
pop
mov
setbe
cmpb
jno
jp
xchg
aaa
dec
jno
push
jl
imul
add
imul
call
imul
xchg
cmpsb
iret
dec
subb
mov
jl
lret
xchg
add
push
dec
mov
add
add
and
mov
dec
lods
cwtl
mov
jae
ss
sti
sub
mov
add
pop
adc
inc
leave
mov
adc
mov
xchg
insb
loopne
insl
stos
jge
jbe
cs
subl
and
daa
dec
cmpb
dec
jmp
push
or
add
add
ja
sti
sbb
pop
inc
cli
or
mov
mul
mov
scas
cli
jl
std
shl
xchg
orb
lods
push
add
add
add
sub
pushf
cmp
push
sti
fstpl
lea
inc
mov
xor
lods
jbe
iret
mov
inc
test
xorl
insb
or
add
add
jle
cltd
cmp
in
out
push
fisttpll
cmp
inc
xor
leave
adc
inc
sub
in
cmp
inc
dec
mov
cmc
push
add
jmp
adc
mov
and
push
mov
mov
jo
out
clc
sub
add
and
icebp
lret
dec
inc
sbb
nop
nop
nop
nop
nop
sub
test
es
loope
sub
aaa
jg
hlt
arpl
int
sbb
into
adc
js
cmp
push
pop
add
add
or
add
add
xchg
sbb
jecxz
jl
add
add
xchg
jle
adc
or
add
movsl
and
mov
add
mov
sub
jl
pusha
jne
dec
sub
add
add
inc
inc
dec
sbbl
repz
js
lret
stos
adc
outsb
jnp
or
add
add
add
add
add
adc
addr16
into
add
add
add
adc
add
add
test
push
or
add
add
stos
ret
adc
add
mov
hlt
xchg
cmpsb
xchg
ret
sbb
rolb
add
add
hlt
mov
push
add
add
in
pop
out
push
cmp
sub
pop
scas
int3
int3
int3
int3
int3
stos
mov
movsl
lret
add
add
add
aaa
add
add
add
inc
inc
pop
add
add
ret
or
add
add
test
mov
int3
int3
int3
int3
lret
stc
push
test
cltd
pop
sbb
xor
add
add
add
mov
arpl
cltd
pushf
imul
into
pop
cmc
les
jmp
jmp
pop
and
sbb
mov
jnp
mov
aaa
ret
addr16
and
add
xchg
mov
or
add
add
in
add
xor
pop
sbb
add
add
rclb
in
inc
cmp
add
scas
jbe
fildll
lea
jg
push
add
add
inc
push
inc
pop
jns
xor
mov
repz
mov
fdivs
lret
jo
dec
add
add
add
or
xor
dec
fsubrs
sub
js
into
cltd
add
add
add
pop
jl
out
mov
stos
xchg
mov
scas
and
dec
std
xchg
add
lock
movntq
out
sarb
arpl
or
add
add
push
std
dec
dec
sbb
xor
add
mov
pushf
imul
pusha
aaa
repz
add
add
add
es
mov
inc
pop
mov
mov
loop
out
lods
jecxz
push
stos
dec
popa
je
aas
sbbl
xchg
leave
or
cltd
sub
lret
sub
add
sub
test
push
jno
cmpsb
xchg
push
mov
stos
mov
cmp
cmpsl
cmpsl
or
add
add
mov
jae
movsb
les
out
inc
adc
lret
or
add
pop
aaa
adc
inc
outsb
out
xlat
mov
jge
lea
daa
add
rcr
sbb
leave
stos
mov
inc
dec
fidivrl
pop
inc
sbb
sbb
pop
in
pop
fwait
pop
sub
js
inc
rcrl
add
jle
xor
jnp
xchg
scas
dec
cmp
je
jne
push
pop
add
add
dec
imul
inc
aas
paddw
repz
fmulp
adc
fcomps
add
add
sti
inc
mov
lret
inc
adc
add
add
mov
jnp
add
add
and
push
add
add
mov
pop
repz
in
mov
mov
inc
mov
out
jnp
inc
fstl
nop
nop
nop
nop
or
nop
sub
jb
negl
jle
mov
inc
inc
stc
mov
add
add
add
mov
jmp
subb
mov
adc
roll
popf
adc
cwtl
loopne
mov
ja
nop
nop
nop
nop
nop
jb
popf
out
add
add
jne
add
add
add
andb
jecxz
jae
cmpsl
in
sbb
out
sub
sbbb
push
add
add
sub
out
aaa
mov
leave
mov
and
add
add
stc
cli
rcrb
push
pop
ficomps
ja
push
insl
call
frstor
xor
dec
outsl
push
inc
leave
mov
cltd
loopne
push
push
add
lcall
nop
nop
push
add
add
add
insb
push
daa
lcall
add
adc
mov
push
sub
or
or
add
add
add
add
int3
int3
int3
int3
int3
adc
mov
orl
sbb
cltd
loopne
and
sbb
fildll
fldlg2
add
add
add
add
and
add
add
add
dec
aad
mov
or
add
add
add
sbb
shrl
add
add
add
jl
iret
add
add
add
add
add
and
pop
add
add
xchg
loopne
les
out
sub
and
cmp
push
add
add
add
add
roll
add
pop
aaa
test
movsl
enter
rolb
add
add
sub
stos
js
scas
pop
sti
jno
sbb
cmp
add
into
lret
nop
nop
nop
nop
nop
rcrb
and
xor
add
dec
pop
mov
loop
fnsave
mov
push
aad
add
add
call
xor
sub
bound
mov
inc
nop
nop
nop
nop
nop
xor
xchg
scas
mov
es
int3
int3
int3
int3
inc
jmp
and
mov
sub
pushf
xchg
dec
dec
int
sub
mov
stos
cmp
in
out
test
fadd
adc
aam
lahf
xor
xlat
xor
mov
dec
imul
es
cmpsb
lock
insb
pusha
test
or
add
add
add
add
or
add
add
rcrl
xor
add
jl
inc
lods
out
int
xchg
inc
ret
jb
add
add
add
imul
scas
inc
mov
insb
add
add
add
jp
fwait
stc
xchg
es
xchg
add
loope
fs
dec
mov
push
add
add
add
call
push
add
add
pop
aad
notb
or
add
add
mov
jl
int3
int3
int3
int3
int3
in
add
add
rclb
and
fiaddl
add
add
inc
lods
adc
pop
inc
gs
clc
popa
sahf
dec
dec
clc
test
push
push
or
add
add
in
xor
mov
xchg
inc
loopne
mov
add
add
and
inc
sbb
loopne
pop
mov
xchg
push
sti
sub
add
add
mov
mov
push
dec
int
scas
popf
not
leave
cmp
add
xchg
add
add
and
cmp
add
add
add
add
add
jle
outsl
call
ljmp
pop
jg
mov
push
jp
lock
xchg
mov
insb
gs
dec
lods
push
pusha
inc
add
add
add
mov
adc
xor
adc
jns
shrb
add
add
add
jl
adc
cmpsl
or
add
dec
jno
cmc
faddl
icebp
lods
lods
xor
push
xor
add
add
out
cmpsl
fcomi
filds
test
push
les
add
add
and
add
add
pop
add
add
stos
add
add
add
push
frstor
fdivrs
mov
fcmovbe
fwait
and
push
test
gs
fadds
pushf
sub
add
mov
test
aas
add
add
mov
push
das
sbb
int3
int3
int3
int3
loop
mov
push
iret
fnsave
jmp
sarl
enter
nop
nop
and
add
out
je
loope
push
rcrl
cmp
stos
movsb
xchg
call
push
lods
sbb
int3
int3
int3
or
jmp
sbb
xor
adc
add
add
jno
fldl
fisttps
std
aad
repz
jmp
out
js
nop
nop
nop
nop
cmp
add
add
add
xlat
mov
loopne
popf
sti
mov
stos
inc
loop
push
test
test
add
add
add
adc
xor
leavew
ret
adc
mov
nop
nop
nop
nop
in
mov
pop
les
add
add
negb
add
mov
add
add
mov
call
test
xchg
leave
fst
fists
ss
sahf
lret
xor
clc
mov
outsb
mov
lea
out
sub
out
nop
nop
nop
nop
mov
mov
or
add
add
add
add
add
add
add
add
add
add
add
pop
mov
fsubrs
mul
cmp
jecxz
pop
sbb
dec
or
ss
mov
jle
mov
jl
cmc
iret
clc
not
aas
xor
nop
nop
adc
mov
add
pop
mov
loop
xor
add
lret
xor
outsb
xchg
insl
call
mov
and
sub
pop
jecxz
sbb
negl
xor
int3
int3
int3
int3
int3
inc
jb
and
repz
sub
push
jge
insl
mov
add
add
inc
pusha
or
add
add
add
mov
cld
mov
mov
jle
add
add
push
xchg
dec
push
push
xor
mov
fldl
ja
xor
cmc
add
add
add
in
mov
lods
bound
cmp
push
sub
add
in
mov
aad
xor
add
add
cmpsb
dec
push
add
add
int3
int3
int3
int3
int3
xchg
mov
gs
call
jno
jge
fs
cmpsl
fisttpll
stos
faddl
add
icebp
inc
xchg
add
push
sbbb
cmc
mov
mov
xchg
fwait
scas
pop
popf
es
cli
dec
shll
add
clc
mov
aad
bound
in
into
or
add
add
arpl
cmpsl
inc
jle
xchg
sub
sub
add
add
jecxz
inc
adc
mov
jnp
hlt
outsb
ret
addr16
dec
je
sub
mov
or
dec
sub
and
pop
daa
pop
add
add
xlat
pop
add
add
or
add
add
push
jl
sub
mov
mov
add
call
add
add
add
lods
sbb
jbe
clc
aam
nop
nop
nop
nop
nop
xchg
int3
int3
int3
int3
dec
fimull
dec
out
sbb
mov
int3
int3
int3
int3
int3
dec
mov
sub
jo
cld
cmp
aad
testb
add
add
mov
cwtl
inc
lds
mov
mov
addr16
push
enter
data16
sti
cmp
cmc
mov
outsb
fsubr
outsb
add
add
add
add
push
ss
movsl
mov
stos
movsb
data16
rorl
add
xor
and
stos
mov
mov
hlt
xchg
adcl
nop
nop
nop
nop
nop
add
add
add
ds
mov
aam
not
push
mov
add
add
add
add
add
add
in
ret
in
fsubrp
jbe
insb
lret
test
fldpi
push
add
rol
push
mov
outsb
lret
dec
das
out
jbe
nop
nop
nop
nop
nop
loopne
dec
adc
pop
lds
add
add
aad
imul
add
add
test
cltd
popf
fadd
hlt
add
jle
add
add
stc
fidivrl
shlb
add
inc
addr16
pop
pop
arpl
fdivp
cmp
inc
jl
inc
stos
imul
mov
inc
in
jecxz
jb
mov
mov
mov
jecxz
stos
inc
mov
and
or
add
add
ja
gs
cs
jecxz
lock
mov
push
add
outsl
mov
stos
popa
xor
pop
lahf
inc
xchg
cs
pop
inc
sub
add
xchg
push
movsb
insb
cmp
adc
add
add
call
mov
out
es
cmp
in
pushf
cmp
add
add
add
sbb
addb
pop
test
add
mov
out
ret
jge
dec
into
mov
out
mov
cltd
adc
pop
shrl
add
add
lods
xchg
inc
push
idivl
repz
jnp
outsl
mov
fld
inc
add
cmp
xor
sbb
inc
mov
popl
xchg
xchg
movsb
add
add
add
jbe
or
add
add
ljmp
out
mov
inc
into
in
stos
pop
pop
xor
add
add
add
add
sub
add
add
clc
sti
xor
pop
out
pusha
xchg
andb
and
rcll
add
add
sbb
add
add
mov
add
add
add
or
add
add
in
or
add
add
ljmp
lret
arpl
sub
xchg
int
push
push
add
add
mov
xchg
and
fwait
js
in
pop
test
lahf
jnp
lahf
push
aaa
popa
subl
fldenv
icebp
push
add
add
xchg
mov
sub
push
aad
push
shl
sub
push
jle
lret
lret
pop
repz
movb
pop
or
add
mov
add
add
add
add
shlb
movsl
adc
adc
sarb
xor
and
es
imul
cmp
add
add
add
mov
push
mov
xchg
and
insl
dec
lret
xor
lcall
mov
and
cmc
nop
nop
nop
nop
nop
jns
sarl
lods
in
fs
testb
sub
xbegin
imul
sub
mov
test
add
add
add
pop
xor
sarb
push
xor
ficomps
fidivrl
mov
insb
cwtl
inc
ds
adc
sub
jge
dec
lods
pusha
sub
xor
xchg
adc
dec
inc
scas
inc
dec
pop
movsl
nop
nop
nop
nop
nop
adc
push
icebp
rclb
add
add
push
int3
int3
int3
int3
int3
aaa
mov
add
pop
push
rorl
add
mov
pop
iret
loope
out
mov
insb
lahf
fists
out
mov
xor
xchg
jmp
sub
jnp
ljmp
dec
dec
sarb
je
xorl
lea
sbb
into
arpl
jp
rcll
in
icebp
or
imul
jnp
mov
add
add
loop
lcall
jmp
push
mov
fs
pop
jg
adc
jl
mov
add
add
add
ret
cli
mov
sbb
add
add
orb
rorb
fcoms
std
push
xchg
filds
add
and
sarb
sahf
xchg
pop
mov
int3
int3
int3
int3
int3
iret
cmc
xor
jle
add
add
ret
mov
test
cwtl
notb
or
add
add
jno
jbe
push
rcll
cmp
fwait
pop
cwtl
push
xchg
inc
popf
cmp
popf
rolb
sub
jb
xor
scas
or
add
add
add
add
fsts
push
dec
or
add
add
loop
inc
jb
mov
add
add
into
out
idivl
out
xor
cmp
add
pop
addr16
add
add
cli
mov
or
add
add
add
mull
fnstenv
int3
int3
int3
pop
in
add
add
add
andb
sub
aam
mov
fwait
icebp
or
mov
cld
inc
cli
mov
popa
nop
nop
nop
nop
nop
outsb
and
fbld
std
push
repz
add
add
jb
dec
add
add
add
mov
out
clc
jb
mov
mov
lods
xchg
cmp
pusha
in
lret
xchg
gs
addb
add
add
adc
mov
pop
mov
and
pop
nop
nop
nop
nop
nop
push
push
insl
adc
mov
sub
dec
ja
push
mov
xor
fisttpl
add
imul
mov
repnz
add
add
shl
jo
pop
stos
mov
mov
and
stos
bound
push
push
pop
add
add
call
mov
hlt
jnp
fxch
fistps
add
add
push
adc
sub
fsts
pop
and
int3
int3
int3
int3
orl
add
add
inc
cmp
stos
fstp
add
push
jg
adc
push
aas
push
clc
dec
stc
jp
push
pop
neg
pop
add
add
mov
movsb
fidivrs
add
add
add
and
mov
roll
add
popf
fwait
push
add
call
movsl
adc
xchg
mov
jb
add
add
add
movsb
je
ret
push
sbb
add
add
or
add
add
sub
ficompl
sub
pop
xor
mov
pop
push
imul
add
add
mov
cmpsb
xor
shll
and
add
and
in
sar
sub
sub
pop
xchg
lsl
add
add
push
mov
pop
jns
mov
and
add
pop
add
add
hlt
es
ds
pusha
add
add
add
lahf
movb
mov
add
add
add
sub
lret
data16
pop
cmp
loope
and
lahf
xlat
cmp
mov
addb
and
add
stc
lahf
outsb
nop
nop
nop
nop
nop
cmp
add
mov
and
add
add
xchg
xchg
add
add
add
xchg
movsb
add
add
fiaddl
add
add
push
inc
push
jno
jecxz
mov
cmp
add
not
gs
outsb
mov
inc
mov
lds
sub
addr16
sub
add
pop
movsb
jno
fsubr
js
adc
add
add
adc
shl
mov
and
les
aaa
insl
xchg
gs
hlt
faddl
add
add
push
popf
jge
add
add
sbb
add
add
mov
xchg
pop
rcrl
rorl
movsb
mov
dec
sbb
mov
pop
jl
in
lret
testb
add
add
inc
sbb
in
add
add
movsl
push
fldenv
add
pop
add
add
sbb
lods
ss
push
ja
icebp
in
ds
mov
lret
push
pusha
inc
and
add
add
movsl
cmpsb
xchg
test
mov
insl
xchg
or
add
add
nop
nop
nop
nop
nop
testl
pusha
pop
into
xchg
add
add
add
add
mov
mov
pop
outsl
fstp
pop
add
add
add
mov
std
inc
jo
jmp
rcrl
add
dec
mov
mov
adc
add
add
out
push
pusha
jbe
jp
fbld
lods
mov
dec
repnz
scas
repz
lds
test
add
add
push
add
add
add
push
outsb
cmc
dec
push
faddl
add
add
push
mov
lock
lds
mov
mov
call
imul
lods
and
lods
jo
repz
jp
cmpb
mov
jge
cmpps
shlb
push
sbb
jmp
jno
pop
ss
nop
nop
nop
nop
nop
and
movsl
jae
cmp
or
add
add
or
add
add
xor
js
lea
add
add
inc
push
mov
and
arpl
je
int3
int3
int3
int3
int3
pushf
aaa
aam
out
icebp
jb
xor
jnp
out
das
inc
outsl
cmp
enter
jbe
add
add
sub
add
add
fs
push
mov
cwtl
add
testb
add
add
out
add
add
xchg
pop
push
pop
stc
popa
jbe
ja
lds
jecxz
lock
dec
add
add
add
mov
add
add
rcrl
lcall
sub
jne
pop
dec
iret
and
push
fs
popf
inc
pop
pusha
nop
nop
nop
nop
nop
jle
add
add
add
cwtl
cli
lds
imul
rolb
outsl
adc
dec
or
push
jmp
pusha
stos
sbb
push
popa
aas
fnstenv
inc
inc
push
adc
mov
loop
lea
daa
out
adcb
or
add
add
lea
mov
inc
fldenv
pusha
inc
or
add
aam
fistpll
pop
aaa
cs
test
lret
fs
mov
cwtl
inc
jae
fnstenv
adc
lahf
dec
js
data16
cli
and
or
addr16
pop
lds
scas
pop
push
shlb
test
push
or
add
add
mov
xor
imul
lea
push
sbb
add
pop
inc
push
sub
sbb
push
add
add
ret
sbb
xlat
cmp
add
add
cmp
popf
ds
aad
repnz
jl
popf
mov
ljmp
cmp
mov
mov
pop
add
add
inc
sub
lcall
aam
hlt
xchg
mov
dec
and
loope
cli
mov
mov
fld1
add
add
add
xchg
out
push
sbb
xchg
pusha
lods
push
pop
cmpsb
pusha
sub
push
add
orb
pop
scas
cmp
cmpl
aaa
add
cmp
mov
das
dec
ljmp
add
scas
lods
mov
pop
stc
loope
mov
out
pop
std
lret
or
pushw
add
add
aas
stos
rol
sub
stos
in
cwtl
negb
sub
sub
inc
add
in
pop
lret
jae
cmpsl
pop
popa
cmpsb
mov
in
aaa
cmpsb
pop
mov
es
nop
nop
nop
nop
mov
inc
mov
test
or
add
add
xchg
addr16
xchg
adc
es
imul
std
inc
and
nop
nop
nop
nop
js
iret
mov
mul
call
lret
push
mov
adc
jge
icebp
jns
fnstcw
add
adc
jge
nop
nop
nop
nop
in
mov
gs
aad
push
inc
fidivs
movsb
sbb
add
mov
popa
loop
jne
std
xor
aam
icebp
add
add
add
mov
push
mov
or
hlt
cmc
aad
ffree
fs
add
add
cwtl
xchg
mov
or
repz
divps
push
adc
add
add
rcl
push
add
add
fdivr
or
scas
cltd
scas
mov
cmp
push
lea
rcrl
aad
aaa
add
add
jge
mov
cld
dec
and
scas
mov
pop
jle
jp
mov
pushf
pop
add
add
add
xchg
pop
push
sbb
cmp
pop
xor
je
insl
jb
push
push
adc
mov
mov
jbe
jle
mov
xchg
scas
les
pushf
insl
mov
push
add
add
add
jp
bound
add
add
add
lcall
aas
or
or
add
add
add
dec
nop
nop
nop
nop
nop
mov
xlat
orb
pop
jo
pop
ror
inc
cmpsb
pop
mov
pop
cmp
fcompl
mov
inc
pop
fdivs
ficomps
lret
jp
add
xchg
into
dec
in
pop
cmp
loope
push
pop
lgs
lret
push
add
add
mov
or
add
add
leave
hlt
jo
adc
inc
pop
push
add
add
add
mov
add
push
lds
dec
lods
jne
push
inc
addl
movsl
add
add
add
jb
aaa
pop
test
enter
inc
xchg
fnsave
add
pop
add
add
add
nop
nop
nop
nop
test
mov
jle
lods
nop
nop
nop
nop
nop
adc
add
add
inc
loop
mov
std
sbb
add
test
stos
sub
sbb
add
nop
or
sahf
cmp
movsb
jnp
gs
mov
int3
int3
int3
int3
mov
and
repnz
cmc
dec
dec
inc
xchg
dec
lea
adc
add
xchg
clc
out
sbb
roll
xor
lret
xchg
lock
pop
xor
add
scas
icebp
pop
lret
scas
cmp
add
add
in
psubd
xlat
inc
pop
dec
mov
sbb
call
dec
sbbl
sbb
xorb
push
xchg
ret
sti
inc
ljmp
jecxz
mov
adc
add
add
mov
in
pusha
xchg
add
add
lds
jg
ss
lret
push
jns
pop
sbb
sbb
add
push
and
xor
rcr
outsb
test
lea
cmp
adc
in
mov
test
push
jl
pop
add
add
xor
shll
fsubrs
or
add
add
xorb
das
or
cmp
add
add
and
dec
std
and
lock
lcall
jno
cmp
and
add
add
scas
lea
jp
popf
and
and
lods
adc
in
cmp
movsb
inc
mov
movsl
sub
xor
mov
inc
movsb
adc
dec
mov
sbb
add
add
roll
add
add
dec
orb
add
push
das
sahf
aam
clc
add
mov
adc
loop
rorl
add
add
sbb
and
daa
fnstenv
aam
aas
push
clc
dec
sub
or
pop
jae
imul
pop
rcl
out
push
add
add
xor
leave
outsl
fcmovu
inc
jp
in
add
cmc
push
add
add
add
add
add
in
aam
sub
adc
sbb
add
mov
mov
insl
mov
cmc
aaa
out
mov
inc
jg
push
inc
sub
cltd
in
mov
out
push
push
jo
inc
cmp
add
je
movsb
clc
ret
mov
fwait
mov
xor
push
add
add
add
imul
not
jmp
jle
lock
jp
xchg
rcrl
cld
mov
push
pop
mov
std
imul
add
add
add
addb
loopne
lods
xor
js
jmp
mov
sbb
xor
clc
push
fldt
nop
nop
nop
nop
and
jo
push
iret
pop
xor
dec
or
add
add
and
fdivrs
aaa
mov
xchg
push
pop
inc
sbb
lea
jb
add
fisubrs
nop
nop
nop
nop
nop
xchg
pop
or
insb
imul
sub
adc
add
mov
je
loop
loopne
jae
push
sahf
add
add
add
add
add
mov
fstl
pop
mov
xchg
and
rorb
add
add
scas
mov
xchg
add
add
add
add
pop
cmc
cmpl
fwait
dec
push
jnp
and
insl
fcomp
loope
and
das
cs
adc
add
add
add
sbb
add
add
aaa
outsl
stos
fstpl
ljmp
call
xchg
push
out
inc
hlt
adc
cmp
lods
lea
lds
add
add
mov
mov
aaa
clc
cmp
xchg
loopne
dec
leave
cmp
sbb
add
add
sub
or
add
add
mov
fbstp
add
mov
inc
push
push
aad
inc
pushf
insl
pop
leave
add
add
add
popf
fldcw
add
add
mov
xchg
lea
inc
mov
push
sti
je
stos
push
add
dec
popa
imul
add
adc
pop
lcall
adc
add
pop
jmp
xor
xor
mov
js
sub
leave
pop
add
add
test
mov
jl
ret
push
jecxz
sbb
aad
add
add
repz
inc
jl
ret
arpl
nop
nop
nop
nop
nop
orl
ss
stc
xchg
imul
xlat
adcl
mov
mov
roll
out
adc
hlt
dec
stos
pop
les
int
stc
pop
pop
sub
or
add
add
xchg
dec
and
sbb
cmpsl
repnz
rorl
lcall
enter
xlat
push
xchg
xchg
pop
sar
sub
add
pop
jae
fistpl
into
adc
add
in
mov
test
mov
fisubs
inc
push
lret
jb
xor
add
jns
add
add
xor
add
add
js
subl
jl
test
cld
adc
addb
add
add
jl
lret
out
and
repz
jb
pop
jb
mov
jmp
popf
jno,pt
inc
inc
pusha
mov
lea
add
add
xor
gs
test
jl
pop
sbb
cmp
xor
repz
add
inc
cmp
mov
mov
divl
int3
int3
int3
cmp
dec
inc
imul
add
add
orb
add
add
fs
ja
stc
outsl
jmp
jg
lds
popa
frstor
push
dec
push
in
sti
push
cvttps2pi
daa
addb
mov
xchg
lods
inc
lock
les
cmp
xor
sarl
addb
add
add
add
mov
pop
xchg
dec
pusha
imul
add
ret
fisttpll
imul
xchg
adc
push
in
jns
add
add
imull
push
test
mov
out
mov
xchg
subb
pop
add
add
dec
adc
add
jle
leave
cmp
leave
cmpsl
call
xchg
cs
inc
rclb
je
add
cmp
sbb
add
add
lods
sahf
sbb
add
add
dec
outsb
scas
jmp
mov
mov
add
mov
add
add
and
stos
shll
outsb
mov
test
add
pop
dec
inc
add
add
add
add
add
test
lret
aam
add
add
cltd
rcll
push
movsl
dec
aaa
pop
push
jbe
dec
sbb
dec
sarb
shl
in
mov
loop
in
mov
or
adc
jo
hlt
push
sbbb
cmp
mov
add
add
cld
fsubr
jecxz
add
clc
mov
mov
add
add
nop
nop
nop
nop
nop
cld
jl
jnp
vaddpd
jno
out
push
sbb
mov
out
sarb
sti
das
test
fidivs
scas
cmp
add
add
xor
cltd
add
hlt
lcall
or
sbb
push
rcrb
mulb
add
add
add
inc
and
jmp
xchg
pop
call
and
lds
push
sub
mov
mov
mov
cmp
aad
mov
fstpt
das
pop
test
and
jg
pop
in
or
add
add
je
pop
lods
jae
mov
out
adc
adc
icebp
sbb
shl
repnz
loop
add
add
cmp
pop
js
xor
nop
nop
nop
nop
push
rcrl
push
iret
mov
inc
lea
pop
add
add
mov
leave
test
dec
add
popf
fcom
in
lea
sbb
insb
jb
sub
add
cmc
inc
jecxz
add
add
add
add
add
out
mov
in
xlat
adc
in
cld
jmp
inc
ret
mov
push
or
xlat
aaa
repnz
out
jno
jae
jmp
dec
pop
fdivl
fwait
xor
mov
adc
xchg
sbb
or
add
add
jle
pop
lods
movsl
push
addl
pushf
or
add
add
jnp
add
add
push
roll
add
add
adc
add
add
add
add
add
lock
add
add
push
jb
addb
jae
in
adc
add
add
adc
fmuls
int
pop
xchg
movl
loopew
mov
dec
mov
ret
pop
jge
xchg
scas
rcr
mov
add
or
sub
add
add
add
add
mov
addb
add
add
add
add
push
cmp
clc
popa
mov
push
fwait
and
lods
mov
push
rolb
and
aas
lods
sub
push
add
add
add
and
pop
hlt
repnz
push
cmp
fisubs
adc
lahf
inc
jno
clc
out
sub
add
xlat
push
cmc
adc
cli
bound
jne
aam
sub
push
pop
cmp
aas
decb
sti
mov
imul
xor
add
push
mov
out
mov
mov
xchg
mov
fidivs
add
push
xor
inc
mov
call
jbe
fmuls
stc
stos
mov
xchg
jmp
out
fldenv
pop
sub
add
add
lcall
or
add
add
or
adc
add
flds
push
push
sub
rorl
add
add
push
scas
and
cmp
jnp
les
in
imul
call
jo
adc
adc
pop
add
add
outsl
fadds
add
add
fsubrs
adc
add
push
or
add
add
sub
add
add
add
add
pop
cmp
mov
pop
mov
xor
leave
shll
std
jns
dec
or
add
jbe
test
push
sub
clc
xchg
add
add
pop
add
add
mov
add
add
ljmp
add
scas
add
add
add
add
mov
adcl
stos
cli
nop
nop
nop
nop
nop
push
loop
sub
cmp
and
push
push
add
add
mov
test
dec
mov
insb
das
add
fisubl
push
aas
shl
insl
enter
lock
rcl
inc
stc
mov
mov
movsb
sahf
aam
dec
and
add
mov
xlat
bound
adc
popl
xor
add
roll
add
add
add
rcrl
pop
rcrl
mov
mov
cmpsb
mov
adc
add
add
jg
bound
cmp
mov
sub
mov
out
xor
test
pop
push
add
add
les
jl
xchg
call
pop
and
adc
add
add
add
out
or
add
add
mov
mov
pop
cmp
add
add
add
cltd
sub
adc
imul
mov
push
stc
sbb
dec
enter
add
add
jl
arpl
in
adc
lea
add
add
jmp
ret
pop
adc
pop
addr16
arpl
notl
in
dec
add
add
add
and
sbb
jb
cmp
aad
mov
mov
nop
nop
nop
nop
nop
pop
sub
mov
push
call
mov
mov
add
cmpsb
push
xor
aas
adc
out
cwtl
push
dec
mov
stc
push
lock
add
add
les
add
add
push
imul
js
loope
cmpl
xor
cmp
divb
aaa
sbb
dec
mov
ret
add
push
mov
pop
dec
sbb
sub
icebp
pop
lret
repz
int3
int3
int3
int3
in
scas
pop
movsl
dec
shlb
and
mov
add
and
hlt
jp
jecxz
mov
cld
add
mov
sub
push
hlt
push
das
scas
sahf
fistl
pop
push
repnz
aad
stos
push
iret
jg
sub
je
or
jne
mov
or
dec
outsb
or
add
add
popf
ss
inc
lahf
test
jae
orl
hlt
fwait
movsb
dec
int3
int3
int3
int3
int3
repz
mov
mov
maskmovq
fsubrl
add
dec
lahf
xchg
inc
xor
or
add
add
daa
or
add
inc
add
inc
xchg
in
push
jp,pt
fs
jle
notb
add
ret
mov
xor
xor
pop
mov
add
add
add
sbb
imul
dec
sbb
pop
and
add
add
adc
dec
or
add
add
add
add
jno
jae
push
mov
add
pop
dec
jo
jp
xchg
loope
mov
in
dec
addr16
add
add
add
add
add
add
je
jle
jbe
add
add
scas
popf
cltd
leave
mov
fidivs
in
nopl
add
add
mov
adc
fisubrs
dec
popa
sub
andb
mov
dec
je
adc
imul
int
cmp
push
sahf
aaa
test
sbb
popf
mov
cmp
nop
nop
nop
nop
push
add
add
jg
cmp
add
fnsave
add
in
pop
movsl
jp
dec
mov
out
les
adc
add
add
and
xchg
es
dec
lret
mov
cmpb
fnstenv
add
add
sub
xchg
xchg
outsl
inc
sti
lods
ds
pop
xchg
inc
call
sarb
jge
cmp
and
add
add
add
int3
int3
int3
int3
int3
mov
mov
and
add
add
jnp
call
mov
add
add
add
mov
popf
shlb
stc
push
jno
jp
into
pop
bound
sub
add
fldcw
add
add
outsb
stos
cmpsl
pop
mov
add
push
xchg
xchg
xchg
movsb
orb
aas
lret
push
add
add
dec
test
inc
jae
out
or
imul
pop
jae
cmpsb
loopne
xchg
popl
add
add
mov
add
add
add
mov
add
outsb
pop
lret
add
add
repz
adc
pop
or
add
add
loope
std
xchg
lahf
pop
add
add
add
add
add
int
test
ret
ss
jo
imul
hlt
outsb
fwait
pop
xor
xchg
xchg
add
hlt
and
push
icebp
test
mov
out
and
add
nop
nop
nop
nop
nop
push
rcpps
int3
int3
int3
int3
int3
push
lds
or
add
add
xchg
mov
clc
xchg
inc
adc
add
xchg
popa
ss
xorl
and
add
add
daa
hlt
jmp
cmp
push
fbstp
cmp
popf
aad
dec
dec
mov
add
jns
dec
mov
add
push
test
sbb
add
add
pop
mov
add
enter
add
or
add
add
add
add
dec
out
rcll
js
dec
sti
fcoml
add
add
in
cld
adc
in
je
mov
xchg
push
push
add
push
test
dec
jno
add
add
cmp
jns
lods
push
push
mulb
insb
sbb
xor
add
clc
lock
pop
outsl
repnz
mov
xchg
xor
add
shrl
dec
fdivl
in
dec
xor
xor
int3
int3
int3
lds
aas
cld
mov
lods
out
add
add
add
adc
data16
add
add
mov
idiv
inc
push
mov
jmp
insl
cwtl
ret
bound
test
lods
cmp
int
fwait
lahf
test
mov
mov
xchg
data16
iret
sub
iret
mov
or
xchg
sbb
xchg
in
and
xor
cmpsb
push
neg
mov
add
add
mov
add
add
add
push
xchg
out
cld
scas
pop
cmp
mov
sub
add
push
nop
nop
nop
nop
nop
push
hlt
and
cmpsb
dec
ss
int3
int3
int3
int3
sbb
in
pop
popf
sbb
outsb
lods
lods
xchg
pop
insb
dec
ret
jg
push
sbb
int
aam
das
mov
dec
rcl
jbe
add
add
out
cmp
or
add
add
nop
nop
nop
nop
nop
mov
add
ret
enter
add
add
push
add
lahf
adc
sbb
xchg
xchg
inc
mov
sti
lret
fwait
sbb
add
mov
add
aas
outsb
rclb
add
add
pop
xor
stos
adc
fwait
mov
jle
jb
jne
loope
das
cmc
and
adc
mov
xchg
repz
add
lods
jb
add
add
mov
cmpsl
inc
aaa
or
add
add
loope
adc
addr16
repnz
xchg
cmp
rcrb
add
lcall
xchg
scas
fwait
pop
adc
push
mov
mov
xchg
sub
rolb
pop
scas
sub
add
add
int3
int3
int3
int3
int3
mov
mov
lock
jb
adc
push
xor
jecxz
iret
jo
push
inc
push
add
add
or
add
add
and
shll
insl
adc
mov
dec
mov
cmp
adc
add
add
fwait
jne
push
icebp
dec
adc
sub
add
test
cmp
or
add
add
mov
pop
adc
mov
cmc
mov
mov
rcr
mov
ret
into
xchg
push
loope
aaa
lahf
imul
and
bound
popa
shrl
lahf
out
adc
das
jmp
and
and
and
adc
loope
add
add
scas
ficoml
cmp
xor
add
add
gs
shll
jbe
mov
movsb
inc
mov
jns
into
pop
pop
add
add
mov
add
add
xchg
push
cmp
push
insl
dec
sarb
dec
xorb
inc
sbb
mov
cmpleps
mov
and
nop
nop
nop
nop
nop
inc
add
add
add
mov
inc
sti
and
and
imul
push
les
repz
jne
in
sbb
in
xlat
adc
adc
add
mov
push
subl
lds
add
mov
pop
mov
dec
stos
enter
hlt
or
add
add
jp
imull
sbb
mov
int
int
jmp
mov
add
aam
scas
movsb
mov
xor
loop
mov
pop
add
add
mov
add
add
mov
popf
cmpsl
sahf
shufps
add
dec
nop
nop
nop
nop
nop
sbb
cmp
jp
iret
push
add
nop
nop
nop
nop
nop
into
pop
popf
fsubrs
jg
cmp
outsl
cmp
add
add
push
repz
jecxz
pop
les
jmp
pop
push
outsb
push
jb
mov
aad
mov
lret
sbb
stc
je
push
xlat
jp
inc
add
add
cmp
dec
pop
clc
adc
mov
std
push
dec
in
mov
outsb
popf
lahf
push
and
pop
cmp
add
push
inc
ljmp
mov
push
pop
test
add
and
add
or
add
add
adc
inc
sub
mov
add
mov
push
cltd
scas
jns
or
lods
xchg
enter
xchg
pushf
lock
add
mov
das
dec
aas
dec
push
enter
mov
pop
pop
inc
cmp
cmpsb
add
stc
xchg
mov
push
add
add
add
test
jnp
or
and
dec
add
add
add
jbe
add
sbb
ret
popa
inc
dec
lea
add
add
xlat
xchg
push
sub
add
xor
imul
add
add
mov
jge
je
sub
add
js
aaa
cmpsl
fisubs
sub
add
add
add
cmp
jge
dec
hlt
outsl
and
std
add
add
add
jo
cmp
jge
add
add
sub
lock
dec
xor
inc
cmp
mov
sub
imul
sbb
int3
int3
int3
int3
mov
add
in
push
adc
sub
add
add
inc
push
mov
adc
pop
ret
test
pushf
push
lods
pop
xor
mov
mov
mov
xchg
adc
xchg
punpckldq
xchg
mov
add
scas
dec
pop
add
add
dec
and
loop
add
add
fists
mov
aas
sub
ret
sbb
ss
out
xchg
push
cld
mov
stos
test
int3
int3
int3
int3
int3
fs
inc
out
xchg
inc
add
add
add
movsl
sti
or
add
add
ret
fldl
add
add
pusha
sub
add
add
daa
push
aaa
or
add
add
jns
sbb
out
hlt
in
dec
scas
add
add
add
xor
roll
cltd
lock
add
add
add
sbb
sub
sbb
mov
pop
test
xchg
in
sbb
imul
aaa
fnstenv
and
movsl
fcmovne
scas
imul
xchg
popf
and
xchg
int
add
add
add
mov
jl
xchg
in
jns
int3
int3
int3
or
add
add
mov
sbb
cmp
scas
inc
in
add
add
sar
xor
jb
jb
sbb
aas
xchg
les
add
dec
jle
push
push
aaa
imul
bound
jmp
lods
mov
es
aad
dec
and
scas
add
jmp
push
enter
add
add
add
add
dec
cltd
je
add
add
outsl
mov
push
xor
test
add
add
test
sbb
mov
or
add
add
inc
pusha
std
push
sub
scas
loopne
movsb
std
mov
fildl
add
add
jle
add
add
jb
in
add
jp
xlat
jle
add
add
pop
data16
adc
add
dec
add
sub
xchg
push
imulb
and
hlt
cmpsl
ror
pop
push
or
add
add
mov
add
and
or
add
add
je
mov
sub
movsl
cwtl
xchg
adc
mov
xor
aaa
dec
inc
jno
push
push
test
add
add
sub
xchg
fwait
xchg
mov
cld
and
add
pop
jmp
jp
pop
add
add
imull
mov
push
pusha
sbb
and
mov
xchg
cmp
in
cs
int3
int3
int3
int3
xchg
cmc
sbb
clc
jp
fwait
jae
int3
int3
int3
int3
int3
fnsave
mov
loopne
add
add
xchg
fimull
inc
adc
add
sub
idivl
xor
cmpsb
inc
rorl
sti
in
adc
dec
lods
xchg
in
lock
mov
cmpsb
and
add
add
repz
add
add
sub
add
add
imul
add
add
add
xchg
into
fidivl
shrl
cmp
sbb
ss
cmp
pop
daa
test
in
adc
nop
nop
sbb
or
add
add
dec
xor
pop
aas
add
add
add
int3
int3
int3
int3
int3
lods
loope
or
add
add
add
add
orb
dec
add
add
add
test
fcoms
out
ds
test
je
cmpsb
int
xchg
insb
fcmovnb
enter
xchg
xchg
mov
sbb
add
add
add
bound
pushf
cmp
rorb
mov
lods
popa
xchg
ret
jp
dec
lods
push
jns
popa
call
stos
lock
adc
mov
int3
int3
int3
int3
int3
xor
adc
cs
cld
dec
ret
pop
and
loopne
int
fdivrs
add
aad
and
fsubl
or
add
add
sbb
das
push
add
shrb
shl
pop
in
ds
cmpsb
and
int3
int3
int3
int3
int3
out
stc
jge
pushf
push
mov
xchg
add
cmc
xchg
inc
in
int
idivb
mov
shl
push
mov
pop
enter
push
adc
add
lret
add
add
add
ds
mov
out
mov
add
pushf
sub
add
sub
movl
les
xor
mov
lret
sub
add
add
lods
shll
jmp
pop
sbb
add
add
mov
xchg
ret
std
mov
out
xchg
dec
or
add
add
dec
cmpsb
or
add
add
and
bound
add
dec
dec
aaa
pushf
cmpb
inc
cmpsl
push
out
sahf
push
fdivs
add
add
pop
and
xchg
inc
push
negb
nop
nop
nop
nop
imul
fcomp
jae
and
add
jno
inc
jo
inc
cld
mov
pop
mov
push
adc
cld
add
add
add
addb
stc
cwtl
or
add
add
pop
push
sub
fimuls
add
add
cli
mov
enter
mov
add
pop
test
mov
sub
add
add
adc
add
add
pop
loope
in
sub
movsl
xor
add
add
add
scas
sub
jecxz
inc
mov
cmp
adc
es
adc
push
insl
aad
aaa
adc
pusha
fdivp
pop
test
add
sbb
xor
stc
fistpll
insb
and
xchg
cwtl
dec
inc
pop
scas
imul
add
add
add
inc
stc
leave
add
add
sbb
mov
adcb
sbb
add
cld
aas
add
and
xchg
mov
je
sbb
imul
loopne
gs
mov
inc
movsl
pop
mov
shl
lods
push
scas
imul
pop
push
mov
movsl
lods
in
int
add
add
add
adc
bound
add
push
in
outsl
into
cmpb
das
stos
fimull
add
add
mov
stc
sti
int
xlat
or
add
add
add
lcall
lock
das
push
inc
or
add
add
cmp
cmp
add
add
scas
out
and
xchg
mov
mov
jno
movsl
mov
add
or
add
add
fbld
mov
dec
ds
mov
jmp
cmp
ds
add
xchg
loopne
adc
jbe
cmpsl
icebp
lock
or
add
add
arpl
sti
adc
mov
mov
push
mov
fwait
dec
sub
add
or
mov
in
cmp
aas
mov
arpl
pushf
pusha
out
pop
push
xchg
jbe
jg
sbb
or
rorl
add
add
out
fsubrs
mov
xor
fistpl
or
fsubs
push
fldenv
mov
lods
aad
xchg
jne
out
aaa
shlb
filds
add
sub
pop
mov
push
add
add
push
int
leave
leave
sbb
push
mov
push
mov
stos
es
ret
jbe
adc
mov
lahf
cli
lea
xor
jecxz
add
add
and
sbb
stc
push
mov
add
add
jne
add
add
sub
mov
jmp
jge
jbe
pop
arpl
mov
aad
lahf
xor
add
add
aam
xor
mov
out
sahf
es
pushf
mov
sub
add
add
add
mov
add
add
adc
fwait
test
pop
adc
mov
push
outsl
jp
jno
or
cmp
lds
and
leave
dec
xchg
xchg
add
add
add
xchg
and
add
add
fldcw
jle
dec
jmp
insb
mov
adc
mov
popf
fstl
add
add
test
xor
insb
ret
je
loop
out
sub
int
cltd
mov
cmc
in
movsl
jle
int3
int3
int3
int3
pop
add
add
sub
stos
inc
push
mov
adc
pop
pop
jne
push
sbb
cmpsl
or
add
add
pop
push
push
push
dec
xchg
popa
fwait
gs
cmp
mov
dec
loope
fsubrl
add
mov
inc
adc
gs
dec
pop
xor
and
rcll
jo
mov
int3
int3
int3
int3
and
shlb
push
pop
jno
or
add
add
add
ret
outsb
and
popf
or
add
add
imul
dec
ja
fidivrl
pop
arpl
cltd
cmp
jns
cmp
dec
mov
test
sub
add
add
enter
sbb
dec
jg
xchg
or
add
add
add
add
insb
ret
loop
add
add
xor
or
add
add
adc
and
int3
int3
int3
int
adc
jno
test
std
jno
or
add
add
xchg
cmpsb
jge
aaa
shr
ret
loope
xchg
mov
jmp
and
add
add
add
jbe
add
add
xchg
sbb
sbb
mov
add
add
add
pusha
sti
hlt
repnz
mov
add
add
jecxz
push
shrb
mov
das
or
add
add
add
jmp
cmpsb
cli
push
sub
lods
loope
inc
fdivrp
icebp
and
add
add
add
add
add
add
add
add
xchg
xchg
jl
ss
int3
int3
int3
int3
int3
je
or
add
add
push
test
cmp
adc
nop
nop
nop
nop
nop
jae
inc
out
or
add
add
cli
int
add
add
dec
push
xor
js
adc
pop
add
mov
jno
mov
fld
xor
arpl
pop
pop
xchg
push
add
add
add
ret
iret
pusha
push
xor
sub
push
cltd
test
push
or
add
add
mov
scas
dec
filds
add
add
xchg
pop
push
imul
xlat
xor
jp
jmp
pusha
inc
mov
add
add
shrl
add
add
add
jl
xor
dec
jge
lods
inc
add
add
add
nop
nop
popf
loop
pop
stos
iret
pop
fstps
int3
int3
int3
int3
int3
jecxz
and
mov
sub
lcall
add
data16
xor
pop
lods
push
aas
pop
int3
int3
int3
int3
int3
jno
jmp
dec
cltd
bound
or
add
add
or
lods
fstpl
cmp
add
lods
jno
js
pop
lahf
and
lock
add
add
addr16
int3
int3
int3
int3
int3
mov
js
and
mov
xchg
dec
sub
mov
ss
add
add
or
add
add
cwtl
data16
maskmovq
notl
pop
faddl
add
add
imul
gs
push
pop
mov
add
cld
dec
cld
dec
ret
call
and
cmp
mov
int3
int3
int3
int3
int3
sbb
inc
dec
jl
sub
xchg
flds
sbb
leave
or
test
mov
mov
xchg
and
call
inc
stc
jns
pop
mov
add
add
cmp
add
or
add
add
and
aaa
jbe
jge
fistps
lcall
lcall
lret
cmp
inc
test
sub
add
add
aad
xor
ljmp
add
add
loop
sahf
cmpsb
mov
sub
inc
and
int
push
adc
cmp
pop
or
add
add
rcrl
xor
call
stos
stc
js
add
add
add
sbb
add
test
jnp
dec
add
add
add
jne
mov
aas
aad
sbb
shl
xor
jl
out
sub
add
jnp
jns
cmp
push
xchg
icebp
nop
nop
nop
nop
nop
sbb
inc
scas
pop
mov
and
mov
add
add
add
adc
loopne
lock
imul
daa
popf
xchg
inc
cltd
or
add
add
je
add
add
push
xor
es
stc
cmpsl
cld
xor
sti
ljmp
add
add
add
add
add
lds
pusha
scas
inc
imul
add
add
lods
xchg
stc
mov
mov
enter
imul
fsubs
aam
rol
add
add
add
mov
xchg
icebp
aaa
arpl
adc
enter
mov
jno
jg
shlb
fidivs
sbb
int3
int3
int3
int3
std
hlt
and
fs
pop
jmp
shlb
lahf
mov
dec
bound
clc
and
inc
and
and
xor
inc
mov
mov
adc
add
add
pusha
dec
and
or
add
add
movsb
popf
gs
cmpsb
mov
push
mov
push
add
add
popf
arpl
add
imul
add
lods
or
add
add
icebp
sbb
xorb
bnd
in
inc
insl
lret
jnp
mov
add
jo
test
add
add
add
pushf
pushf
jae
mov
add
push
das
fsubl
nop
nop
nop
nop
nop
outsl
add
add
add
xor
cmpsb
pop
dec
mov
aaa
mov
pop
stc
scas
inc
ds
popl
mov
lret
loopne
push
mov
dec
and
jae
loop
jg
add
add
add
faddl
nop
and
mov
mov
jl
mov
int3
stos
data16
mov
inc
scas
imul
mov
push
xor
sub
push
fs
add
add
pop
ljmp
fcomps
repz
outsb
mov
push
test
jl
dec
ss
add
std
add
add
add
aam
insl
xchg
repnz
test
pusha
gs
mov
data16
push
add
pop
xor
sub
popf
stc
or
xlat
mov
insb
dec
andb
mov
adc
repnz
int3
int3
int3
lcall
inc
adc
nop
nop
push
sub
pop
add
add
cmp
fimull
add
add
iret
insl
in
mov
das
sar
dec
les
idivb
mov
push
cmpsb
fnsave
mov
aad
inc
pop
ret
testb
mov
mov
inc
in
mov
insb
inc
das
testl
rcrb
cmpsl
sbb
sbb
pop
and
rcll
pop
pop
jns
add
add
out
js
add
add
add
enter
loop
xchg
cli
outsb
sub
int3
int3
int3
int3
out
leave
scas
dec
jl
in
stos
fstpl
mov
lcall
cmpsl
fcmovnu
lcall
sbb
lods
or
add
add
adcb
jl
jecxz
add
add
sub
fnstcw
xchg
xor
push
fdivs
fucomp
enter
test
or
adc
out
dec
cli
aam
cmp
or
add
xchg
loope
rolb
sub
mov
shrl
test
outsb
sbb
add
add
iret
push
movsl
or
mov
jge
xchg
push
mov
add
cmc
loop
sti
pop
mov
add
add
add
or
pop
mov
std
pop
loop
mov
pop
xchg
lock
sub
int3
int3
int3
std
pop
pop
sbb
ja
and
daa
add
in
icebp
push
dec
add
add
add
pusha
sub
mov
sub
jo
aaa
and
dec
sbbb
add
add
cmp
ret
scas
lds
fsubrs
data16
aaa
mov
inc
shrl
add
add
jo
nop
nop
nop
nop
nop
push
test
mov
sbb
cli
pop
leave
mov
dec
add
add
add
cmpsb
mov
sbb
jle
push
in
xchg
stc
mov
fnstenv
and
mov
insb
mov
add
add
cmpsl
hlt
or
sub
add
out
or
sub
fisubl
jnp
mov
and
leave
cmpsb
cmp
add
cmp
nop
nop
nop
nop
lock
sarl
sbb
negb
add
add
mov
and
mov
add
add
jge
sbb
add
addl
sbb
pop
push
and
or
add
add
add
mov
xor
insl
sub
mov
add
adc
and
jmp
jg
xor
xor
mov
cltd
btr
xlat
inc
lret
lret
in
fdivl
add
ja
das
mov
movsb
add
add
inc
subl
jo
movsl
cmp
call
popa
adc
add
xchg
incb
xchg
loopne
loope
dec
mov
add
mov
inc
add
add
xchg
or
add
add
out
fwait
xlat
adc
sub
int3
int3
int3
int3
cmp
or
add
add
mov
rcr
pop
aaa
pop
push
ja
add
add
mov
nop
nop
nop
nop
inc
sub
loop
imul
jecxz
icebp
out
lcall
lods
xorb
jns
and
add
mov
sbb
jg
mov
push
mov
push
nop
nop
nop
nop
nop
mov
adc
mov
add
add
add
int3
int3
int3
int3
int3
and
aam
push
adc
aad
scas
jge
push
add
ret
cmp
dec
call
pop
inc
add
add
add
in
bound
add
add
leave
pop
pop
mov
or
add
add
addr16
or
add
add
inc
fcompl
jo
mov
and
repz
jbe
jne
loopne
scas
add
add
add
out
repz
push
adc
xchg
and
jb
lret
in
int3
int3
int3
int3
int3
xchg
mov
mul
sbb
imul
add
fcompl
cmp
sub
add
rorb
add
imulb
cmp
add
add
add
mov
xor
test
subl
adc
add
add
inc
ds
test
imul
mov
add
and
push
pop
ret
add
shll
mov
add
add
fsubr
sbb
std
xor
mov
mov
jno
xchg
fmull
add
cmp
mov
negb
int
cmpsb
int
adcb
inc
inc
lods
mov
mov
std
les
lock
insb
lret
das
in
dec
stos
popa
or
add
add
jne
mov
and
stos
inc
inc
sub
cmpsl
cmpsb
mov
and
sbb
test
add
pop
repz
jne
pop
add
add
ficomps
out
jne
iret
add
add
jo
and
mov
sub
cmp
aad
out
or
add
add
jbe
mov
sahf
mov
sub
mov
cpuid
dec
and
sub
hlt
inc
cmp
inc
add
jo
sub
adc
lds
add
add
xor
int
mov
std
inc
fst
and
in
mov
add
add
xchg
hlt
mov
add
add
dec
cmp
add
loop
mov
je
mov
nop
nop
nop
nop
movb
add
add
sbb
xor
mov
dec
and
jne
lods
adc
pop
cmc
hlt
cmp
xorl
or
add
add
add
add
bound
nop
nop
nop
nop
nop
insb
sbb
cmp
mov
into
fcompl
out
xchg
mov
jecxz
sub
dec
push
adc
add
add
mov
inc
js
xchg
jno
nop
nop
nop
nop
nop
mov
sbb
add
addr16
inc
dec
rcr
imul
sbb
cmp
add
aaa
adc
aam
xchg
or
add
add
jle
icebp
inc
das
shll
enter
sbb
add
add
add
frstor
mov
mov
cmp
mov
mov
cmp
sub
and
nop
nop
inc
jnp
or
add
add
cmpsb
iret
enter
add
add
mov
add
add
sbb
fdivs
cli
loope
int
inc
pop
pop
and
add
add
or
add
add
push
add
add
lock
into
repnz
push
pushf
and
and
adc
add
add
push
lcall
xchg
add
add
add
data16
in
jne
mov
and
inc
inc
fisubrs
scas
jne
add
add
add
add
iret
push
stc
mov
add
ds
push
in
test
lret
les
add
mov
adc
andb
and
add
add
add
cmp
pushf
mov
push
push
scas
push
add
add
mov
sahf
mov
inc
sub
or
add
add
arpl
push
add
add
lea
and
mov
mov
cmc
xor
adc
adcb
mov
gs
sti
or
sub
xor
add
imul
adc
add
add
and
cmp
nop
xor
add
mov
inc
mov
sub
fldenv
sub
cmpl
sub
add
push
mov
adc
cmp
sub
movsb
add
add
add
dec
mov
dec
dec
cmp
pop
ja
and
xor
addl
add
and
addr16
jle
sti
in
mov
or
add
add
shrb
movsl
mov
xchg
fidivs
add
test
and
push
add
add
je
dec
shrl
cld
jnp
lret
cmpsl
sbb
xchg
cwtl
sahf
xor
mov
aam
roll
out
fisttps
add
add
mov
adc
add
into
mov
cmp
lock
inc
cli
std
mov
add
adc
cmc
out
in
cli
push
mov
push
iret
test
add
add
add
xchg
jge
or
add
add
jae
ja
pop
push
iret
ss
jne
mov
dec
mov
roll
sub
add
xorl
jo
pop
add
add
xor
xor
adcb
aaa
and
add
add
add
mov
cwtl
xchg
sarb
xchg
movsb
pop
cs
in
pop
and
sti
div
mov
cmp
or
shll
add
add
mov
cmpsl
push
sub
es
adc
daa
pusha
pop
mov
mov
nop
nop
nop
nop
movsl
test
and
adc
mov
daa
sub
add
cltd
xor
push
int
sbb
mov
imul
in
in
test
cmp
lea
xchg
push
mov
xorl
psubsw
add
add
mov
add
add
jg
add
add
add
inc
iret
out
xor
rol
add
add
cmp
sbb
fdivrl
pop
cmp
push
sbb
or
add
add
xor
mov
nop
nop
nop
nop
loope
arpl
push
add
add
adc
add
add
out
in
sub
cmp
add
pop
fiaddl
push
shr
mov
sbb
rclb
mov
or
add
add
lods
and
rclb
fnsave
fldenv
fisttps
add
add
stos
fistpll
lds
add
add
jge
and
jns
mov
jb
mov
mov
dec
and
cmpsb
push
in
rorl
add
add
jo
or
add
add
mov
nop
nop
nop
mov
or
xlat
ja
add
add
add
mov
into
sahf
movb
add
add
mov
jmp
adc
ficoms
sbb
add
add
add
inc
push
in
flds
add
add
inc
xrelease
xchg
mov
loopne
add
add
add
lcall
jge
push
or
add
add
pop
ret
decb
or
add
add
xor
add
mov
adc
mov
inc
xchg
popf
push
out
scas
call
inc
push
jns
xlat
scas
push
or
jno
or
jo
rorb
repz
pop
bswap
lods
pusha
push
pop
arpl
mov
sbb
add
add
mov
cld
decb
bswap
fisttpl
add
out
sbbl
mov
dec
add
add
dec
inc
stos
in
xor
int
sbb
insb
xlat
pop
in
add
add
ja
sbbb
sub
adc
sub
mov
jmp
cmp
dec
mov
push
add
add
xchg
in
lods
out
movsl
lcall
add
add
lret
add
add
add
push
fcoml
add
xlat
repnz
inc
loope
jns
cmpsb
in
adcl
pop
push
jmp
jp
push
push
rorb
mov
test
add
add
mov
add
add
dec
lret
dec
shrb
add
add
add
xor
cwtl
sahf
test
sub
add
ret
lds
aaa
fsubrl
aam
iret
dec
mov
add
add
add
adc
xchg
nop
nop
nop
nop
nop
inc
ret
or
add
add
stos
imul
add
add
pop
jbe
jb
sub
add
add
or
add
add
inc
sbb
cmpsl
sub
adc
add
dec
and
icebp
mov
add
add
add
mov
add
dec
push
add
test
nop
nop
nop
aam
stc
stc
and
add
push
test
js
mov
adc
sbb
add
dec
mov
pop
mov
or
add
aaa
and
std
mov
std
inc
js
nop
nop
nop
nop
nop
push
dec
dec
cltd
pop
xor
sbb
dec
or
add
add
testb
add
or
add
bound
push
add
add
pop
add
add
loopne
inc
inc
push
fs
pop
add
add
and
call
xchg
repnz
sbb
add
fisubrs
xchg
pop
aas
popa
push
and
sti
mov
cmp
xchg
mov
inc
fdivp
cmp
sub
cmpsb
leave
push
mov
insl
push
aad
ljmp
add
pop
idivb
mov
into
mov
push
dec
popa
xchg
mov
add
add
leave
cltd
outsl
xchg
sub
shl
stos
adc
cmp
inc
push
mov
add
push
nop
nop
nop
nop
nop
adc
xchg
fs
js
push
ret
or
add
add
fsubrl
es
movsl
out
js
jle
enter
das
add
cmp
jecxz
icebp
into
repnz
pop
call
test
popf
or
add
add
mov
jno
imul
loope
dec
sbb
in
cmc
ja
les
sub
cmp
add
add
mov
aam
xchg
imull
xor
neg
mov
fnstenv
je
sub
int3
int3
int3
int3
inc
ds
dec
imul
faddp
adc
test
dec
lcall
hlt
inc
arpl
cmp
mov
cmp
testl
adcl
ficoml
inc
jno
ss
lret
mov
add
xchg
es
js
xor
fcoml
pushf
xlat
mov
cli
stos
adc
add
add
mov
pushf
xor
push
in
test
jb
nop
nop
nop
nop
insb
aad
adc
sarl
dec
mov
push
xor
sbb
add
add
jae
push
je
mov
xor
adc
repz
add
add
jns
or
add
add
add
sub
xor
push
aas
xchg
and
push
xchg
inc
and
pop
add
add
sub
jmp
push
inc
mov
jl
outsb
sub
add
add
cltd
nop
nop
nop
nop
nop
mov
xlat
cltd
repz
in
popf
inc
push
xlat
mov
inc
icebp
inc
lret
and
scas
mov
les
pop
add
pop
xorb
mov
jle
mov
dec
add
add
add
pop
mov
ret
or
sub
add
add
mov
aaa
mov
scas
add
add
add
inc
cmpsb
jbe
jbe
fbld
into
stos
sub
std
cmp
aaa
cwtl
insl
cltd
xor
int3
int3
out
mov
aad
notl
lahf
or
add
add
add
add
fiadds
push
fldcw
add
add
push
lret
push
enter
or
add
cld
inc
fnstcw
add
add
jns
sub
jecxz
add
add
add
insb
add
add
add
test
in
fiadds
add
add
adc
or
aad
lret
mov
fldl
or
add
add
pop
sub
inc
inc
lock
jmp
stc
and
add
push
rol
xchg
ds
add
add
mov
mov
lock
ljmp
jp
sub
add
add
push
dec
loopne
lock
adcb
mov
or
add
add
sub
jecxz
jnp
mov
mov
add
xchg
mov
add
pop
pop
adc
icebp
push
fcoms
adc
adc
nop
nop
fimull
xor
int3
add
add
add
inc
in
dec
test
add
add
movl
cmp
jp
ss
sar
xor
in
add
and
out
test
adc
xchg
loope
push
sbb
add
mov
jns
adc
mov
repz
cmp
lds
push
push
ja
fcmovnb
nop
nop
nop
nop
nop
adc
sub
das
mov
add
add
addr16
add
add
gs
subb
jae
xlat
aaa
push
aas
sub
rclb
add
adc
scas
mov
shrl
add
add
or
add
add
add
add
pop
add
add
add
scas
push
pop
xorb
push
add
add
jno
sbb
divl
outsb
enter
pop
add
mov
int3
int3
int3
int3
test
cmp
add
inc
cmp
inc
pop
jae
loop
xchg
cmpl
or
add
add
xor
clc
aaa
in
lahf
adc
and
inc
pop
adc
arpl
sub
jb
daa
sbb
xor
xchg
cltd
popa
fmull
add
add
add
mov
lock
lds
add
in
sbb
add
add
pop
inc
pusha
xchg
fiadds
pop
add
add
add
xchg
mov
add
popf
dec
sbb
add
add
stos
inc
sti
shl
subl
push
add
add
mov
stc
icebp
aas
push
pop
adc
les
xchg
push
xchg
es
jo
inc
jae
adc
int3
int3
int3
int3
rcrb
xchg
jge
and
andl
ret
in
push
cli
test
push
mov
sbb
add
add
sbb
out
dec
lods
roll
add
add
lds
mov
xchg
int
add
add
add
mov
clc
add
add
les
add
add
push
insb
cmp
and
add
add
cmp
mov
xchg
pop
sub
aaa
or
add
add
adc
add
xor
or
add
add
test
mov
or
add
add
out
fsts
in
shrb
add
sbb
and
nop
cmp
add
add
mov
mov
pop
fld
shlb
cli
jno
lret
add
add
add
mov
stos
popf
stos
lods
and
pusha
lock
in
mov
mov
test
rcll
dec
xlat
lret
into
lods
imul
add
mov
pop
add
add
fldl
or
sub
or
add
add
fidivrs
das
mov
adc
loop
ret
adc
xor
adc
add
add
jae
clc
es
dec
clc
sub
sbb
add
add
add
orl
add
add
rcll
sbb
ss
adc
jns
mov
push
xchg
call
sub
dec
push
add
add
push
mov
ja
add
add
imul
mov
jno
jne
sub
jns
sbb
xor
das
mov
test
mov
dec
xchg
daa
or
add
add
dec
int
xchg
dec
inc
and
sub
and
popa
or
and
addr16
xorb
or
add
add
sub
das
out
xor
mov
imul
push
ss
jl
xchg
mov
int3
int3
lret
ret
je
shl
icebp
mov
sbb
pop
jno
cwtl
ja
lds
jnp
fcompl
add
cwtl
push
add
add
pop
rcll
add
add
xchg
loop
jnp
pop
mov
push
int
mov
ret
mov
ljmp
xchg
lods
stc
sarb
cli
aas
cmp
jb
sub
sub
dec
xor
push
movsl
outsb
or
add
add
add
add
out
clc
dec
mov
add
add
fwait
fs
add
add
mov
and
cmp
fsubp
stos
lods
jne
push
dec
xor
adc
stc
add
add
nop
nop
nop
nop
nop
push
call
adc
icebp
pop
imul
add
add
addr16
sarb
in
adc
mov
insl
les
push
adc
out
adc
aam
cmc
mov
sti
in
aas
mov
out
fwait
clc
adc
nop
nop
nop
nop
or
cli
dec
in
popf
jl
add
add
je
lods
fnstenv
mov
in
inc
sbb
add
pop
add
add
shlb
adc
cltd
call
movlps
ret
xchg
dec
int
aad
jb
xor
xchg
outsb
pop
and
scas
and
cmc
or
sub
pop
push
enter
jp
or
mov
icebp
call
daa
sub
add
add
sbb
ds
pop
jmp
out
ror
outsb
adc
dec
popf
sub
lds
add
add
fisubrl
negl
mov
cld
add
movsb
stos
dec
mov
sbb
cmp
mov
cmp
or
add
add
inc
mov
loope
inc
aaa
or
iret
popf
dec
jmp
out
mov
inc
jnp
xchg
inc
out
fisttpl
enter
and
adc
testb
scas
push
sbb
mov
push
add
add
or
add
add
inc
pop
xchg
inc
sub
xor
add
mov
push
insl
fmull
add
pop
nop
nop
nop
nop
nop
inc
mov
mov
inc
inc
sbb
std
aaa
jae
xor
dec
pop
sub
sub
xchg
mov
mov
add
add
add
or
add
add
adc
stc
push
and
sarb
rcll
pop
mov
xchg
cmp
js
add
outsl
mov
sub
pusha
pop
cmp
sub
add
add
adc
sahf
aaa
and
sub
loope
outsl
scas
mov
add
sub
fisttps
sbb
movsb
sbb
test
ret
mov
pop
cltd
mov
inc
cwtl
sahf
mov
add
add
scas
mov
add
add
add
xchg
adc
jmp
mov
shl
and
add
add
stos
popa
jmp
xchg
aas
push
and
jmp
inc
sub
cltd
lods
bound
add
add
jno
sbb
outsb
adc
sbb
movsl
in
mul
cmp
loopne
icebp
ljmp
shrl
int3
int3
int3
mov
add
add
cmp
in
xchg
jl
out
pop
test
mov
or
xor
add
movsb
dec
mov
mov
pop
add
add
inc
gs
imul
add
loope
push
leave
xor
add
add
mov
stos
mov
aam
data16
out
test
sub
fs
int3
int3
int3
int3
imul
pop
xchg
xchg
repz
out
jl
sbbb
add
addr16
test
add
add
rorb
outsl
icebp
jne
into
and
in
rorl
add
add
cmpsb
lret
cmpsb
stc
xor
pop
je
inc
out
jge
adc
add
add
sahf
adc
enter
aas
out
pusha
lret
pushf
pop
sbb
jl
jns
jae,pt
add
add
sbb
fidivs
mov
mov
jmp
cwtl
or
data16
pop
or
add
add
lret
mov
fdiv
ds
mov
add
stos
aad
push
add
add
add
sub
stos
adc
ffreep
mov
xchg
int3
int3
int3
push
cmp
push
push
push
pop
dec
movsl
or
add
add
add
add
jns
push
fs
push
mov
dec
movsl
inc
bound
subl
cld
rcr
dec
les
insb
or
sbb
gs
test
and
shll
js
lahf
pop
push
sbb
add
add
outsb
xchg
out
fidivs
fwait
loope
pop
xchg
jge
stos
adc
enter
pushf
mov
ret
inc
cmpsl
fs
mov
test
add
add
ret
std
push
sbb
cmpsl
push
xchg
jecxz
mov
in
dec
imulb
testl
popa
mov
int3
mull
cmp
js
push
sahf
jbe
lret
pop
pop
mov
ret
mov
sub
add
in
ds
je
je
add
add
cmp
cld
test
out
xchg
jbe
pop
mov
or
into
jb
ror
int3
int3
int3
int3
mov
add
add
dec
aam
sbb
mov
inc
rorb
push
dec
clc
jle
div
mov
pusha
jg
add
add
add
mov
jbe
mov
jg
insb
stos
fwait
and
jle
je
xchg
mov
cmp
adc
sbb
sbb
push
mov
adc
adc
or
add
add
adc
outsb
lahf
ret
inc
pop
cmp
not
and
movsb
sbb
xchg
stc
les
pop
shrl
aam
je
mov
addl
ljmp
nop
nop
ficoml
lods
loope
mov
or
dec
clc
movb
repz
add
ljmp
add
mov
rorb
add
add
int
out
add
add
add
ret
mov
adc
cmpsl
jle
je
add
add
lret
arpl
out
movsb
jno
ljmp
add
int3
add
loop
sub
enter
jbe
lods
in
sub
pop
push
lods
js
sub
sub
dec
xlat
fwait
mov
inc
mov
test
imul
dec
sbb
jnp
and
int3
int3
int3
int3
int3
xor
and
mov
mul
leave
in
es
mov
adc
sub
and
rorl
add
add
pop
aad
mov
add
add
cmp
push
test
jmp
addr16
loope
das
neg
arpl
test
imul
jmp
ds
fldl
add
add
adc
jmp
cmp
pop
sub
add
cmp
loope
add
add
add
loopne
xor
add
mov
add
add
adc
mov
in
ss
loopne
mov
sub
jb
in
push
push
add
add
rcrb
xchg
or
stc
mov
sub
xchg
in
or
add
add
ffreep
mov
mov
leave
adc
mov
and
js
xor
dec
push
inc
push
add
add
add
add
add
dec
adc
add
add
fs
push
loopne
mov
sbb
lret
push
loopne
fsubrl
sahf
jmp
scas
repz
xlat
sub
or
add
add
add
add
mov
inc
jb
rcrb
add
add
push
addb
test
add
add
dec
lret
pushf
xor
in
xor
sub
add
mov
dec
mov
xchg
mov
in
sti
repz
int3
int3
inc
int3
int3
int3
int3
int3
iret
add
add
stc
push
addl
cmp
xchg
jle
hlt
push
add
add
dec
std
and
out
imul
test
and
cmpsl
dec
add
add
insb
dec
enter
in
push
mov
add
in
out
adc
or
add
add
fs
mov
movsl
xchg
dec
pop
lods
out
pop
faddl
cmpsb
loope
or
add
add
shr
cmp
add
add
push
mov
lret
push
xlat
dec
jo
movsl
pushf
out
dec
fcom
add
add
add
add
test
mov
lahf
pop
inc
cs
push
cmc
or
add
add
add
push
das
dec
stos
push
mov
call
mov
mov
cwtl
push
inc
out
je
or
add
add
mov
jmp
mov
imul
call
inc
xchg
xor
sbb
xchg
pop
dec
cli
mov
sbb
xchg
pushf
sti
cmpsl
and
inc
fwait
ss
and
push
mov
lock
stos
pop
jg
aam
pop
fstp
std
push
inc
fstps
push
sbb
in
mov
add
add
add
jo
pop
xchg
lahf
sbb
jmp
and
add
add
add
fcoms
add
sub
add
xchg
add
add
add
jnp
pop
mov
js
mov
repnz
das
loopne
mov
sbb
faddl
aad
mov
repnz
dec
in
jnp
stos
movsl
orps
nop
nop
nop
nop
nop
outsl
pop
inc
cmpl
fistps
fwait
pmullw
xorl
mov
push
int3
int3
out
fcoms
jo
mov
clc
fstpl
loope
add
add
add
lea
adc
jl
inc
mov
xchg
aaa
cltd
in
arpl
cmpsb
mov
dec
pop
cmp
jcxz
push
das
stos
test
nop
nop
int
inc
inc
lods
add
add
add
add
jno
pop
hlt
and
add
add
daa
jle
stc
fwait
inc
sub
mov
imul
lret
fldenv
pop
xorb
lret
stos
les
adc
int3
inc
pop
in
jp
jmp
sub
in
mov
mov
add
add
add
add
add
pop
and
int3
mov
add
add
add
push
jmp
push
mov
ficomps
test
roll
add
add
out
es
enter
aad
push
adc
lods
lret
stc
test
repnz
and
jb
pop
fcomip
sbb
add
add
movsl
mov
dec
xor
rcl
rcrb
insl
adc
mov
shll
mov
sub
add
add
jnp
lods
pop
jmp
cmpb
or
add
add
or
add
add
ljmp
test
mov
filds
add
add
rorb
psllq
mov
sbb
outsb
pop
shlb
mov
sub
jno
pop
call
outsl
push
xchg
cwtl
ret
add
xor
add
add
add
mov
push
push
add
add
jo
cli
dec
jp
arpl
add
sbb
add
add
add
sub
add
scas
sub
xlat
lods
adc
jp
add
add
cltd
xchg
fisttpll
ret
lock
shll
lret
jae
dec
stc
shlb
add
add
xchg
imul
rcrb
js
cs
sti
mov
or
add
add
mov
add
clc
xor
int3
int3
int3
int3
xchg
dec
inc
inc
push
fldenv
add
add
add
add
add
add
out
xor
jnp
xchg
cmp
cmp
fisubrs
add
add
leave
mov
fisttpll
add
add
sti
add
add
add
stos
imul
loop
imul
xchg
or
add
add
add
cmp
mov
gs
push
cmpsl
and
dec
dec
sbb
ljmp
add
add
iret
push
leave
jbe
jb
add
add
add
pop
cwtl
cmpsb
or
add
add
leave
sub
bound
add
add
or
add
add
testb
or
test
add
add
test
push
cmp
add
xchg
outsb
fs
pop
xor
dec
sbb
movlps
xchg
std
mov
bound
add
add
in
dec
jecxz
sbb
add
add
sub
inc
ss
inc
insb
cmp
out
mov
idivb
test
aam
bound
pop
or
add
add
mov
xor
stos
lods
jle
push
adc
add
add
cmc
jae
jg
sbb
push
or
dec
mov
jp
adc
dec
fisttps
je
jg
mov
mov
lds
lret
nop
nop
nop
nop
nop
inc
hlt
rorb
add
add
push
cmp
lock
int3
int3
int3
int3
int3
push
sbb
add
add
mov
ljmp
in
push
jmp
xor
cmp
lods
shr
add
add
test
int
iret
arpl
mov
mov
add
cld
rorb
fbstp
pop
push
in
test
jecxz
add
in
pop
aas
adc
in
cmc
imul
pushf
mov
xor
mov
add
push
loopne
push
outsb
filds
lcall
ret
cwtl
sub
lods
mov
call
js
gs
sbb
jno
loopne
mov
dec
dec
cmp
add
popf
xchg
mov
jns
or
add
or
add
inc
out
ja
lcall
xor
add
add
add
or
push
mov
add
aad
cmp
xchg
mov
mov
xor
sahf
jae
and
aad
lock
ja
scas
inc
outsl
fsubrs
filds
jae
dec
inc
or
add
add
sahf
jmp
and
add
push
fld
ss
cmp
pop
add
add
stos
or
add
add
cwtl
sbb
and
loopne
mov
andb
add
add
jmp
sub
cmp
into
mov
shlb
xchg
or
add
add
push
cmp
add
add
sbb
dec
aam
add
add
loopne
roll
xor
add
add
add
out
stos
loop
test
ljmp
dec
pop
mov
mov
mov
hlt
pusha
xor
jp
add
add
add
add
add
xchg
ret
push
push
add
add
add
pop
jbe
mov
in
test
add
movsb
mov
outsl
jns
movsb
cs
mov
add
inc
add
notl
mov
loopne
and
fisttpl
mov
mov
out
test
sbb
add
mov
cmp
add
add
push
scas
movsb
stc
mov
add
pusha
sbb
sbb
in
jmp
lock
imul
sub
add
add
add
fdivs
xchg
mov
dec
add
add
add
jno
hlt
mov
les
clc
aas
pop
mov
pop
add
add
add
push
pop
add
add
in
cli
pop
pop
pop
adc
or
add
add
dec
scas
mov
jns
mov
cmpsb
jl
mov
rcrl
sbb
mov
imull
push
cwtl
int
pop
loop
jle
repnz
xchg
leave
sub
cmp
out
jle
out
adc
add
imul
imul
pusha
jne
rol
push
add
add
add
push
ja
add
add
popa
pop
setge
dec
movsb
test
xchg
pop
add
add
in
aas
mov
out
push
mov
inc
cmp
adc
push
inc
inc
cmp
rorl
movb
push
add
add
fstps
sbbl
and
cwtl
notl
add
xchg
jbe
inc
add
add
fnsave
dec
scas
loop
lret
sub
jl
add
add
adc
pusha
rcll
out
dec
xor
add
add
stos
mov
sar
stos
out
inc
push
xor
jns
and
add
loop
push
dec
and
mov
add
push
add
add
enter
push
enter
dec
nop
nop
nop
nop
nop
xor
pop
jae
scas
scas
add
inc
jl
hlt
sbb
jmp
fwait
into
cmc
sbb
jb
add
add
add
add
add
add
jp
xchg
pusha
dec
pop
pop
vrndscaleps
add
xor
add
add
inc
jae
movsl
add
add
add
aam
xor
rolb
add
inc
jle
nop
nop
nop
nop
scas
in
dec
cld
movzbl
clc
lahf
vsubps
add
add
in
rorl
rep
cld
mov
ja
ds
lahf
mov
mov
cld
popa
mov
xchg
bound
sahf
inc
repnz
jecxz
jmp
out
cwtl
sbb
xchg
cmp
mov
push
add
fnstcw
inc
sub
mov
test
add
add
mov
or
add
add
xor
cltd
push
fs
out
push
mov
sub
in
cld
sti
repz
adc
leave
insl
sub
add
add
cmp
add
add
addr16
push
cli
repnz
xchg
insb
cwtl
mov
in
and
jns
sbb
ljmp
add
add
mov
jae
popf
pop
loopne
dec
xchg
mov
cmp
jb
lods
mov
mov
or
addr16
stos
clc
mov
mov
add
daa
mov
xchg
xor
lock
inc
in
sbb
xor
icebp
mov
adc
add
add
dec
arpl
jae
mov
pop
sbb
sub
xor
add
sub
popf
out
adc
inc
neg
loopne
dec
ds
sbb
sbb
loop
add
add
repnz
add
add
popa
add
add
add
stos
dec
sti
jecxz
xor
shrl
xchg
and
sub
add
add
add
cmp
mov
mov
les
pop
movb
add
add
add
add
sbb
sbb
lock
xor
and
xchg
rcrb
popl
add
add
sub
andl
push
jp
in
mov
push
add
add
mov
repnz
add
add
sub
jns
in
hlt
cmp
inc
repnz
scas
popf
scas
rorb
sbb
call
jge
fisttps
xor
cmp
add
fbstp
xor
sbb
mov
mov
aaa
roll
jp
ret
xchg
adc
lret
adc
in
mov
push
add
add
xor
lcall
shlb
aaa
andl
int3
int3
int3
int3
rcll
out
add
imul
mov
in
mov
add
add
stc
mov
ja
lcall
pushf
and
outsl
and
jecxz
mov
add
add
push
mov
fdivs
roll
adc
add
add
pushf
and
in
adc
mov
cld
xor
pop
add
add
jg
inc
or
add
jnp
cmp
inc
push
and
lock
jae
cs
inc
shll
push
sub
or
add
add
cmp
pusha
inc
sarb
cmpsb
lds
iret
push
in
fistps
sub
in
dec
pop
popa
adc
jmp
sbb
leave
sbb
jnp
push
mov
inc
pusha
or
repnz
add
add
shlb
cmp
pop
push
jne
jmp
mov
xor
sbb
cwtl
mov
cmp
sbbl
mov
mov
push
dec
inc
movsl
loopne
add
add
add
add
fidivl
dec
out
test
mov
fnsave
mov
mov
jbe
add
inc
or
add
add
mov
jcxz
lahf
push
add
rorl
jecxz
aas
fwait
and
inc
sahf
xchg
mov
inc
add
add
add
xor
add
add
pop
scas
ret
mov
sarl
bound
outsb
mov
mov
insl
inc
mov
add
add
add
bound
add
add
pushf
dec
bound
je
out
xor
or
add
add
add
add
sbb
adc
imul
mov
mov
imul
dec
fwait
pop
mov
sbb
add
movl
imul
add
add
lods
cmp
adc
leave
aad
inc
cmpsw
mov
sbb
decb
inc
pop
daa
fs
subl
mov
test
test
push
jb
cmp
cld
mov
loope
adc
mov
jle
mov
and
jb
xor
inc
sbb
sahf
stos
adc
pop
lock
outsl
ret
xor
loopne
add
add
in
shr
fwait
sbb
push
mov
shrl
sti
ss
add
add
add
pop
imul
inc
pop
add
add
jp
jecxz
add
out
shlb
jne
leave
dec
jecxz
mov
fiaddl
popf
shlb
push
lods
or
add
add
xchg
les
push
leave
fnstsw
out
js
inc
jle
dec
mov
std
xchg
mov
dec
mov
rolb
sub
dec
sub
aam
sarb
repnz
add
add
test
cli
add
add
pop
lahf
mov
ret
daa
push
mov
out
add
jg
out
xchg
iret
shrb
test
dec
sbb
push
lods
cmp
ds
lret
add
add
mov
cmp
pop
inc
mov
out
sub
add
add
jne
and
xor
xchg
add
lcall
xor
jmp
fsub
xchg
push
mov
add
add
mov
pop
pop
inc
cmovae
jp
loopne
dec
aaa
ret
fidivrl
loop
cmp
shrl
fnstenv
nop
nop
nop
nop
lds
mov
imulb
add
add
sti
lods
mov
add
add
test
xchg
jns
jmp
sbb
xchg
mov
add
cmp
in
call
ljmp
stos
outsb
push
stos
scas
shrl
int
imul
je
popf
mov
sbb
dec
and
icebp
pop
in
inc
out
adc
movsl
cmp
ret
insb
xchg
mov
add
add
add
nop
nop
nop
nop
nop
inc
ljmp
mov
fildll
fsubl
mov
subl
add
add
dec
cmp
pop
movsl
fstps
cmp
pop
aad
add
add
xchg
xchg
mov
xor
or
sahf
popa
push
and
dec
jp
or
add
add
mov
adc
sub
add
add
add
insl
jae
jbe
cmp
mov
sahf
and
addr16
arpl
add
lcall
rolb
add
add
rcrl
and
add
add
push
in
mov
lock
hlt
aaa
mov
mov
pop
punpckhdq
sub
es
jecxz
cmp
cmp
add
jecxz
mov
or
add
add
test
ffree
clc
add
clc
sbb
xor
mov
jge
gs
ret
push
add
add
pop
pop
insb
scas
sub
or
add
add
add
add
data16
fnstcw
add
add
add
jno
loopne
dec
jb
add
push
mov
div
loopne
test
add
add
mov
lds
add
add
lea
popf
mov
xor
inc
mov
jae
mov
imul
sti
div
push
pop
xchg
jns
adc
add
scas
fidivs
cmp
pop
add
add
and
xor
sbb
gs
in
pcmpgtd
insl
push
add
add
add
mov
and
mov
loopne
lods
sahf
cld
insl
dec
fwait
je
mov
push
add
xchg
lret
test
push
outsb
push
add
add
int3
int3
int3
int3
int3
imul
cld
test
ds
sub
aam
ret
push
mov
aaa
sbb
fcom
cwtl
fiaddl
mov
inc
bound
sub
int
repz
inc
ljmp
test
push
xor
out
pop
sub
idivb
lds
mov
pop
fisttpll
sbb
mov
xchg
mov
cs
ja
xchg
mov
sub
stc
xchg
aas
xor
movsb
out
int3
int3
int3
int3
stos
push
mov
scas
icebp
cmpb
adc
add
add
sbb
mov
pop
mov
inc
lret
jle
jge
aam
movsb
js
jecxz
and
cltd
add
rcrl
xchg
dec
pop
orl
enter
cmp
jae
or
xor
xchg
dec
dec
aam
shlb
add
in
aas
in
or
add
add
sbb
scas
cmpsl
mov
add
add
add
stos
sbb
dec
inc
mov
inc
xchg
mov
add
mov
jmp
mov
mov
cld
imul
or
add
add
scas
ss
sbb
add
add
inc
push
add
add
add
or
sbb
jns
add
repz
aad
add
add
je
in
dec
jnp
or
add
add
loopne
ja
ficoms
leave
int3
int3
int3
int3
int3
xchg
xor
ret
add
add
add
rolb
test
push
push
dec
int3
int3
int3
int3
int3
and
orb
push
xor
push
loop
xchg
test
adcb
je
mov
cmp
add
add
arpl
add
add
mov
mov
insb
and
xorl
add
fsubs
adc
and
ret
fimuls
jge
addr16
aad
fildl
cld
fs
mov
xor
cltd
arpl
sti
in
dec
pusha
adc
add
add
sbb
fildll
sbb
gs
loopne
jle
cltd
xchg
shll
push
dec
mov
hlt
jb
ljmp
add
repnz
cmp
push
add
add
adc
adc
sbb
pop
add
add
and
jecxz
jne
xor
sbb
jno
je
inc
shr
push
inc
lahf
icebp
fstpt
cld
mov
sub
pusha
inc
fs
xor
add
add
jle
bound
int3
int3
int3
int3
int3
cli
lds
int
out
cmc
mov
pusha
mov
shl
stc
add
add
das
and
sbb
lahf
push
pop
cmc
mov
sbb
add
add
jb
xor
sub
adc
jecxz
add
sub
out
sahf
or
nop
nop
nop
nop
and
xchg
mov
mov
add
imul
js
hlt
popa
sbb
icebp
sbb
add
mov
js
call
jo
and
add
add
flds
cmp
outsl
and
nop
nop
nop
nop
nop
xchg
lret
lcall
add
into
mov
add
add
movl
lds
mov
adc
test
cld
xchg
lcall
fnstenv
add
add
dec
push
add
add
icebp
enter
xor
xor
add
mov
lret
xchg
movsb
adc
leave
mov
mov
daa
mov
int3
int3
int3
int3
int3
mov
in
in
jns
or
add
add
iret
daa
rcll
mov
pop
pusha
or
mov
jae
outsl
in
sahf
sahf
push
lds
sub
xor
add
xchg
dec
ds
and
das
movsl
jle
in
lock
fs
dec
pop
lret
out
mov
and
add
add
cmp
add
int
jge
xor
cmp
notb
dec
mov
push
add
add
jns
aad
daa
movsl
adc
xor
cld
cmp
xor
cwtl
add
add
mov
or
add
add
mov
jl
add
add
add
cmp
call
or
add
add
enter
mov
loope
mov
adc
dec
inc
adc
jae
jnp
pop
test
out
mov
ss
mov
add
add
icebp
lock
add
add
adc
pop
sbb
out
fadds
cmc
cmp
dec
sbb
dec
stos
add
stos
clc
shrl
test
add
add
add
xor
test
mov
add
add
rol
hlt
add
xchg
and
int3
int3
int3
int3
pop
ja
cld
mov
add
add
test
push
xchg
int
and
add
adc
add
inc
mov
test
xor
jecxz
idivb
add
add
add
add
mov
add
add
mov
dec
cmpsl
add
xchg
mov
push
or
add
add
add
add
cmp
ljmp
add
dec
sbb
push
lock
inc
cld
push
int3
int3
int3
int3
int3
inc
adc
cmpsl
fwait
mov
ret
sti
mov
int
sub
mov
les
add
mov
mov
fcoml
movl
pop
or
add
mov
jle
mov
ja
push
and
add
add
fcomps
cmp
push
inc
cmp
test
mov
jle
fiaddl
add
add
xor
add
mov
push
dec
loope
int3
int3
int3
int3
sti
mov
mov
shlb
jge
popf
addb
arpl
mov
repnz
add
add
js
mov
sub
adc
popa
lods
cmp
add
add
ror
adc
notb
add
add
and
ds
push
dec
xchg
inc
or
add
add
jno
adc
add
add
pop
jb
pop
fwait
into
mov
insb
mov
xor
test
jmp
cmp
inc
add
add
add
xchg
fdiv
flds
add
add
xor
mov
je
into
jle
add
add
imul
sbb
adc
push
lcall
push
in
adc
test
scas
mov
dec
fs
pop
or
add
add
cmp
push
mov
lahf
arpl
repz
ret
jno
test
add
ljmp
enter
add
add
add
mov
hlt
push
push
add
add
mov
mov
or
add
add
stc
xchg
xchg
mov
xor
add
add
hlt
nop
nop
nop
nop
nop
sbb
out
test
repnz
popf
sbb
adc
xor
jl
lea
adc
push
add
add
data16
add
mov
add
add
into
sahf
dec
pop
pop
cmp
loopne
frstor
fucomi
xor
fistps
add
mov
add
jns
xor
sub
jae
cmpsl
mov
add
add
add
push
jge
xchg
xchg
ss
lret
dec
dec
dec
stos
push
pushf
sub
insb
test
jmp
dec
aas
mov
xor
add
mov
and
push
jmp
lcall
add
add
aam
adc
fidivs
je
cmp
adc
or
add
add
int3
int3
int3
lcall
add
add
sbb
push
cpuid
shlb
add
scas
imul
push
sbb
mov
mov
das
add
inc
xor
cli
pusha
fisttps
add
add
push
xor
xchg
jp
out
shll
clc
fbstp
add
add
add
add
cmp
mov
xor
add
cmpsb
dec
les
xchg
adc
lea
insl
jl
xor
hlt
scas
test
add
add
or
add
add
imul
cmp
and
jb
add
sbb
and
adc
add
add
sbb
loope
mov
js
andb
adc
repz
lods
inc
in
lahf
lods
es
scas
out
outsb
jns
add
add
add
pop
xor
mov
add
add
fisubrl
mov
mov
ss
push
fisubs
nop
nop
nop
nop
mov
icebp
jne
jae
add
xchg
shlb
push
cmp
cmpsb
js
jle
xor
movsl
popf
scas
adc
ret
push
call
loop
add
add
add
sub
inc
mov
add
int3
int3
int3
int3
adc
adc
bound
add
nop
nop
nop
nop
nop
fprem1
popa
push
lods
jl
jne
lea
jge
outsl
icebp
and
nop
nop
nop
nop
nop
lahf
pop
loopne
sub
jb
mov
push
add
add
ljmp
inc
ss
sbb
adc
and
lock
loope
fs
lahf
leave
out
cs
jnp
push
push
dec
out
shlb
push
mov
addb
sbb
cmp
in
pusha
outsb
mov
cmc
sub
pop
lret
out
mov
mov
xchg
loopne
nop
add
shlb
shl
ficoms
cwtl
cltd
add
push
or
add
add
dec
xor
add
add
aaa
int3
int3
int3
int3
int3
shl
push
add
add
pop
push
js
loopne
add
add
and
xchg
scas
push
incb
stos
adc
mov
xor
mov
mov
add
cmpsb
adc
cli
fimull
das
cwtl
gs
pop
push
add
fadd
enter
push
mov
add
dec
xchg
pop
xchg
fdivrl
sub
bound
add
add
push
pushf
cwtl
mov
popa
xor
and
mov
mov
inc
lahf
mov
add
add
mov
sbb
fistpll
sub
sbb
test
add
ljmp
xlat
cli
push
add
in
mov
fldt
inc
cmpsb
lock
lret
add
add
add
sbb
enter
aam
add
add
mov
in
jp
shl
repz
sbb
int3
int3
push
xchg
int
push
add
xchg
mov
cmc
push
push
cmp
mov
adc
mov
cmp
adc
and
jmp
xor
adc
mov
push
fstpt
hlt
dec
inc
ss
repz
cmc
push
ficoml
nop
nop
nop
nop
nop
addb
in
cmp
push
jno
mov
in
mov
add
jb
imul
push
fnstcw
xorb
data16
mov
add
add
add
aas
pop
jl
in
push
movsb
add
add
dec
xchg
into
and
lock
add
pushf
sbbl
add
orb
add
add
push
xor
mov
xor
mov
test
pop
push
orl
add
mov
loop
std
cmc
rorl
jecxz
cmp
xchg
pop
xchg
jnp
xchg
fidivrs
scas
out
jns
add
loopne
pop
cli
imul
add
cwtl
add
ljmp
pusha
inc
inc
inc
push
movl
int3
int3
int3
int3
rorb
mov
add
add
add
fdiv
pop
add
add
jg
fwait
dec
mov
add
add
gs
jle
mov
cmpsw
sti
out
mov
cmp
add
ja
adc
sbb
mov
mov
fs
icebp
int3
int3
int3
int3
int3
pushf
psubb
sbb
rcr
rcr
popf
inc
lods
mov
inc
jle
jno
jnp
vcvtpd2udqx
ds
icebp
jg
jne
and
and
lds
dec
in
loop
out
sub
xchg
sub
jns
out
imul
add
add
push
add
add
stos
int
pmovmskb
sub
aas
js
data16
aaa
popf
icebp
mov
bound
dec
add
add
add
add
aam
cmp
ljmp
inc
push
xor
rol
add
add
add
hlt
aad
and
jno
in
cmp
add
add
sub
test
sbb
cltd
xor
iret
fwait
mov
ret
push
inc
dec
inc
iret
jno
movsl
xchg
imul
mov
popa
sub
arpl
popf
decb
add
add
mov
add
add
stc
sbb
jbe
rolb
aaa
jle
and
and
lods
sub
add
add
pop
sub
pop
add
add
add
push
dec
pop
pusha
fwait
cmc
icebp
cltd
sbb
out
cmc
movsb
inc
test
ljmp
add
aas
cmpb
imul
inc
mov
pop
rcrb
cmp
fwait
adc
add
add
mov
add
enter
add
add
stos
loopne
sahf
enter
add
add
lret
enter
and
push
jecxz
add
add
mov
mov
fildll
add
add
movb
repz
pop
mov
clc
cmp
add
add
add
sub
inc
xor
mov
sbb
xor
push
in
jmp
and
scas
lea
add
cmp
mov
xor
data16
stc
imul
mov
add
add
in
cltd
mov
mov
popf
stos
cld
mov
je
add
aam
mov
mov
push
enter
inc
test
xchg
lock
adc
ljmp
add
dec
cmc
or
add
add
push
daa
data16
ret
sbb
cmp
add
dec
pop
jnp
ds
mov
inc
bnd
pop
cmp
stos
mov
js
test
decb
add
add
icebp
cmpsb
add
add
add
icebp
mov
jns
movsb
mov
in
jge
in
int
pop
imul
add
es
push
jmp
push
add
add
dec
aam
call
ror
inc
aas
sbb
test
and
sub
and
fstpt
and
mov
mov
add
add
aad
adc
inc
scas
pop
add
add
ror
call
insb
clc
loopne
and
sub
pop
mov
outsb
fsubl
and
xchg
xchg
movsl
cld
fstpl
out
ss
add
and
loope
lock
test
fdivrl
imul
mov
popa
xor
pusha
adc
popf
adc
mov
lods
xor
imul
xor
xchg
ffree
sahf
mov
push
mov
sub
push
inc
inc
mov
mov
mov
in
dec
cmp
ds
cmpsb
testb
add
add
push
daa
sub
movsb
mov
push
add
add
out
jne
mov
mov
mov
mov
xchg
fsts
mov
outsb
xor
inc
mov
popa
rclb
lods
jmp
fs
add
mov
cmp
mov
loop
add
add
mov
gs
mov
add
add
leave
mov
shlb
pop
shlb
inc
sbb
jno
lret
cld
xor
sbb
add
sahf
pop
mov
or
add
add
stos
test
add
add
repz
jmp
mov
or
add
add
arpl
mov
data16
inc
fsubrs
jae
aad
int
cwtl
inc
gs
loope
popf
repz
pop
sti
das
in
xchg
mov
add
add
into
cltd
loop
cmp
push
sbb
cmp
add
or
add
add
xor
add
out
rclb
sub
stos
jmp
xchg
mov
nop
nop
nop
nop
nop
mov
popa
sub
fidivs
sbb
push
pop
sub
lods
dec
sbb
outsl
mov
push
add
inc
adc
cmp
pop
or
add
add
aas
loopne
mov
add
add
add
add
loopne
aaa
stc
mov
mov
add
add
add
enter
mov
xor
iret
mov
mov
lret
sbb
jae
adc
pop
dec
cmp
repnz
pop
lods
mov
mov
insb
add
sub
fwait
and
add
in
scas
lea
add
call
jne,pn
mov
ret
cli
int3
int3
int3
int3
int3
or
add
add
lods
pushf
cmpl
add
fs
xor
lea
or
cmp
or
add
sbb
pop
stos
out
add
add
jo
cmp
push
fildl
add
add
mov
sbb
das
aam
clc
jo
jecxz
mov
jmp
aaa
mov
add
add
add
cmp
inc
fldenv
mov
popf
sbb
test
add
mov
pop
dec
fstl
loope
jno
lock
sarl
inc
loop
jb
aam
nop
nop
nop
nop
mov
mov
dec
lea
add
add
loopne
push
push
lahf
lea
mov
mov
daa
fnstcw
mov
push
and
add
add
add
cmp
cmpsb
stos
in
or
add
add
jmp
fdivl
cltd
fiadds
or
add
add
add
add
scas
push
test
xor
loope
pop
leave
dec
lret
dec
mov
aaa
xchg
js
bt
add
out
adc
pop
mov
shll
jnp
inc
or
add
mov
dec
xor
stos
mov
add
in
lods
jg
sbb
or
add
add
aad
in
mov
pinsrw
jns
scas
mov
out
hlt
add
mov
xor
rorb
stos
insl
mov
pop
mov
addr16
lds
pop
rcr
sub
sub
pop
dec
add
add
add
mov
fdivl
fsubs
aad
and
fscale
xchg
dec
jecxz
jle
and
mov
leave
inc
ja
sarb
incb
stos
push
pop
mov
imul
mov
xchg
dec
icebp
push
dec
adc
push
das
xchg
jecxz
add
add
aam
pop
dec
je
clc
add
cmp
add
jp
sbb
je
and
sbb
dec
js
adc
scas
xor
pop
inc
jge
add
add
xor
sti
inc
cwtl
mov
and
and
mov
aad
xchg
fists
aaa
add
outsl
int3
int3
int3
int3
int3
sbbl
adc
scas
lahf
mov
out
add
add
cwtl
pop
cmp
cmp
in
mov
fistpll
jae
add
add
or
add
add
or
lahf
xchg
sbb
dec
clc
add
add
add
and
repnz
fisttpll
push
add
add
sbb
pop
add
add
jbe
shll
pushf
push
adc
adc
adc
push
inc
sbbb
jae
jne
mov
pop
mov
les
mov
mov
sub
in
fstpt
in
test
hlt
add
add
add
add
outsb
add
add
add
add
mov
or
add
add
enter
xchg
out
mov
push
adcl
fnstcw
mov
mov
mov
mov
rcrb
mov
out
push
pop
cmpsb
dec
or
add
add
iret
lret
inc
les
add
add
imul
add
add
inc
inc
ret
jmp
xchg
dec
jo
jnp
int3
int3
int3
int3
or
add
add
sbb
add
mov
outsb
das
aaa
push
jae
push
jecxz
je
aam
push
push
mov
movsl
jb
jmp
sbb
push
dec
xor
pop
gs
test
mov
mov
push
andb
and
rorl
add
add
repz
mov
lock
outsl
nop
nop
nop
nop
nop
dec
pop
add
add
mov
into
sub
rorl
mov
lahf
imul
iret
sub
mov
adc
and
push
add
add
push
dec
mov
jecxz
jns
or
add
push
xchg
add
jne
icebp
mov
mov
dec
cmp
inc
mov
stc
mov
inc
jle
mov
add
sbb
es
jnp
and
lcall
leave
xor
xchg
rcrb
mov
jle
xor
add
les
add
add
add
sub
add
add
ja
out
insl
xchg
lods
xchg
or
xor
inc
outsb
inc
popf
loopne
add
aam
jmp
into
add
add
add
sbbl
inc
jecxz
stc
fbld
sub
aas
in
add
add
add
inc
inc
or
add
add
mov
hlt
mov
adc
xchg
and
add
add
jp
pop
aad
add
add
inc
rolb
data16
and
cld
add
aam
int3
int3
int3
int3
pop
add
add
push
loop
xor
add
pop
loopne
mov
sarb
hlt
imul
addb
add
add
add
xchg
or
add
add
xchg
add
shlb
cmp
add
inc
cmp
cwtl
lods
mov
push
in
jg
adc
enter
into
mov
movb
int3
int3
int3
int3
int3
lahf
inc
or
add
add
fldcw
test
add
add
add
add
mov
and
loopne
fsubp
fldenv
ss
jl
int
in
or
sbb
daa
test
add
add
add
fdivr
adc
or
int3
int3
int3
int3
int3
push
sbbl
loope
rclb
bound
mov
ret
out
jg
sbb
dec
nop
nop
nop
nop
nop
sbb
int3
jbe
add
add
lcall
rcrl
int3
int3
add
add
add
movsl
test
repz
xor
loopne
xchg
shlb
mov
xor
repnz
xor
loopne
fcmovbe
pop
xor
pop
int
cmp
idivb
lret
data16
nop
nop
nop
nop
nop
je
in
insb
or
add
adc
pushf
and
jmp
xor
dec
pop
xchg
cmp
jnp
in
mov
sbb
cwtl
sarb
xor
cs
add
add
add
std
sahf
and
packuswb
add
mov
es
outsb
lods
cld
fs
cmp
mov
enter
cltd
xor
sub
add
xchg
rclb
leave
pop
inc
divb
xchg
repnz
sub
mov
clc
jb
pop
or
add
cmp
fs
fcoml
mov
add
add
sti
mov
aam
cmp
test
test
add
hlt
pop
stc
jns
out
popl
add
add
insl
inc
ja
sub
add
add
outsl
rclb
push
mov
nop
nop
nop
scas
jg
mov
or
xchg
into
push
xlat
mov
jo
into
sbb
add
add
mov
lea
sbb
xchg
xchg
mov
add
add
add
dec
sub
aaa
daa
and
add
add
or
add
add
jae
mov
lea
bound
xchg
bound
jne
push
pop
adcl
iret
lds
or
cld
cmpsb
and
sub
gs
jp
sbb
adc
rep
ret
call
push
mov
add
add
push
add
add
test
add
add
aaa
or
add
add
lea
adc
out
cs
movsb
leave
inc
pusha
fisubl
negb
jl
fisttpl
jmp
ret
sti
add
add
add
add
add
add
and
stos
sbb
ret
sbb
aas
cmp
adc
fdiv
sarl
repnz
add
add
add
add
bound
call
es
sti
adc
iret
cwtl
xchg
mov
inc
xchg
stos
jmp
out
mov
enter
add
in
cmpsl
lea
jge
mov
pop
add
add
sbb
add
xor
add
jl
sti
fdivrs
push
add
add
lods
cmp
xor
inc
lahf
ret
xor
mov
adc
xchg
mov
pop
jbe
in
sub
cmp
inc
cmp
inc
test
addl
add
xchg
sti
pop
outsb
fildl
aam
je
jnp
sbb
add
adc
rcrb
lock
int3
int3
int3
int3
mov
push
xchg
icebp
jmp
daa
mov
das
cmc
test
xor
andl
cltd
add
scas
fnsave
fs
sub
mov
clc
pop
stos
push
adc
int3
int3
int3
int3
nop
nop
nop
nop
nop
sbbb
xchg
sbb
xor
add
add
add
mov
cwtl
sub
ret
pop
jg
dec
hlt
wbinvd
add
add
in
lret
mov
add
add
outsb
lahf
add
dec
addr16
add
or
add
add
insb
mov
fbld
jp
add
add
flds
dec
adc
mov
int
pop
add
add
outsb
scas
je
push
cltd
sbb
pop
xor
daa
mov
jg,pn
jnp
sub
call
adc
mov
cmp
adc
popf
cmp
sub
aas
jb
pop
sub
or
add
add
xor
add
add
dec
mov
scas
sbb
pop
add
add
js
pop
fsubrs
mov
scas
dec
arpl
rcr
stc
sbb
or
add
add
push
sub
ja
mov
xor
push
popa
dec
imul
adc
loopne
sbb
dec
adc
xchg
imul
inc
push
adcb
add
add
cwtl
lret
inc
ret
pop
call
test
mov
cmovle
pushf
data16
push
xor
ret
and
sahf
lods
nop
nop
nop
nop
nop
pushf
push
leave
icebp
imul
out
dec
int
mov
test
add
add
loopne
mov
inc
add
add
add
aad
add
push
mov
mov
int3
mov
inc
pop
mov
or
add
add
nop
nop
nop
jge
xor
or
add
add
add
dec
bound
add
add
add
xchg
lret
cmp
xor
cmp
dec
xchg
and
inc
out
cmp
punpckhdq
roll
add
add
xchg
push
mov
dec
mov
arpl
fwait
dec
addl
or
add
add
dec
mov
ss
jno
sbb
ljmp
add
lock
inc
mov
adcb
mov
and
testb
fldcw
push
outsl
in
call
je
rcl
xor
cmp
mov
push
iret
icebp
fisubrs
rolb
imul
icebp
cmc
arpl
call
pop
out
xor
imul
rcrl
setp
inc
mov
nop
nop
nop
nop
nop
jmp
call
push
xchg
daa
push
notb
xchg
or
add
add
sbb
cltd
hlt
rolb
pop
or
mov
push
leave
movsb
xor
cmpsl
stos
sti
int
test
sti
jecxz
push
xor
int3
int3
int3
int3
sub
mov
adc
mov
push
lea
imul
enter
outsl
call
popa
lcall
test
sbb
jbe
fxch
loopne
jge
cmp
rorb
cmpsl
dec
push
add
add
cmp
fsubrs
sbb
fnstsw
add
add
add
dec
daa
in
stos
or
add
add
sahf
xchg
add
jns
cs
add
add
sti
cld
cs
push
insl
gs
sub
imul
rcr
jb
mov
inc
mov
pop
shlb
pop
add
add
add
cld
cli
loopne
loopne
ljmp
adcl
pop
xorb
lahf
and
mov
jecxz
or
std
andb
scas
adcl
mov
rcrl
aad
xchg
add
add
add
add
add
test
add
mov
pop
not
push
mov
test
xor
bound
and
test
add
add
xchg
and
clc
outsl
xchg
fadd
lods
add
add
add
add
or
add
add
xor
add
inc
stos
sbb
add
add
mov
xor
mov
mov
sbb
dec
ljmp
pushf
jae
mov
data16
xchg
movsl
call
das
add
add
add
dec
cmpsl
test
inc
add
sti
stos
xor
xchg
push
pop
add
add
fistpl
mov
int3
int3
int3
and
jno
enter
orl
add
add
add
add
add
mov
xchg
mov
add
add
mov
movsb
stos
movsl
jnp
test
jne
nop
nop
nop
nop
mov
out
scas
das
add
and
loope
test
iret
dec
in
mov
cmc
mov
rcll
das
hlt
jnp
sbb
hlt
ss
loope
inc
outsl
inc
and
xlat
cmc
rcll
jmp
icebp
jl
repz
pcmpeqw
push
inc
mov
add
add
add
push
ret
mov
stos
cltd
jp
cmp
adc
stos
jnp
sbb
sti
rclb
xchg
sahf
sbb
les
sahf
jge
out
mov
mov
add
sbb
add
add
insb
jl
adc
int3
int3
int3
adc
xor
mov
js
mov
push
push
or
test
adc
mov
call
test
cmp
fs
cmp
mov
jb
mov
cmpsb
aam
sahf
fs
xor
ret
ret
mov
sub
add
xchg
adc
cld
rcll
add
add
mov
out
loop
rep
ficoml
daa
sahf
xor
sbb
in
pop
inc
hlt
inc
bound
jecxz
mov
in
rclb
xor
jl
stos
in
sbb
outsb
imul
adc
add
lea
popa
fildl
add
add
rorb
add
add
mov
xchg
mov
iret
insb
mov
mov
mov
inc
add
add
add
cmpl
and
mov
add
push
lret
mov
add
add
sub
cmp
add
xlat
add
add
add
add
add
add
in
test
cmp
add
ret
cmp
add
add
lret
add
add
stc
shufps
bound
add
add
xor
cmp
mov
dec
sbb
add
jno
int3
int3
int3
int3
int3
sub
jo
cmp
jp
xor
scas
push
pushf
in
inc
adc
jp
in
add
add
add
jl
and
inc
hlt
xchg
xorl
pop
push
in
arpl
into
sub
lret
add
movsb
into
dec
xchg
mov
or
cmpsl
cmp
adc
jmp
adc
mov
dec
pop
jns
pop
or
add
add
add
mov
call
and
dec
stos
fidivl
outsl
lods
xor
cmove
iret
fdivrs
sbb
add
cmpsb
xchg
xchg
xchg
add
add
movsb
push
inc
jne
enter
fisubl
pop
xchg
iret
mov
setns
add
add
insb
adc
pop
dec
inc
pop
decb
jae
aas
or
add
add
mull
inc
jg
mov
stos
in
andl
orl
add
add
lods
rcr
dec
mov
pop
aaa
mov
mov
xchg
xchg
out
xchg
mov
mov
rolb
cwtl
cli
pop
shl
daa
adcl
leave
loopne
mov
lods
loopne
add
add
aad
add
add
cmc
mov
add
add
repnz
into
lock
push
jecxz
pop
push
inc
cwtl
mov
lret
xchg
add
add
es
adc
lods
subl
inc
cmp
add
out
jb
shll
das
dec
mov
jecxz
add
add
add
and
aas
add
add
add
imul
add
cmpsl
mov
inc
push
sub
add
add
lock
add
add
push
push
adc
and
imul
pop
aaa
adc
add
add
hlt
scas
cld
xchg
pop
int
add
ret
sbb
add
add
mov
sub
jle
cmp
xchg
daa
and
sub
add
add
add
add
mov
mov
test
fsubs
movsl
add
add
add
dec
int
fnstenv
add
add
add
mov
pop
xor
lods
xchg
add
add
and
fsubrs
into
inc
cltd
in
xchg
add
add
add
mov
jecxz
adc
add
add
subb
pop
test
idiv
dec
jo
int
add
aas
imul
add
add
repz
cmp
mov
test
ret
xor
fsubr
mov
and
mov
bnd
push
add
add
std
push
add
pop
out
into
sub
mov
lods
pop
inc
lods
loop
lahf
cmpsb
imul
xor
outsb
movsl
pop
outsb
jo
loope
movsl
out
sub
std
mov
adc
outsb
fisttps
dec
jle
adc
cmp
mov
add
add
add
addl
add
mov
adc
sub
ret
inc
mov
jae
push
rcll
xchg
inc
call
adc
scas
in
push
inc
or
add
add
xor
shrl
and
sub
add
add
bound
xchg
cmp
sub
pop
add
add
add
mov
add
out
shl
add
je
fdivrs
lock
adc
out
faddl
xlat
mov
push
dec
xchg
add
add
or
add
add
mov
lods
jae
or
add
fsubrl
mov
test
stos
xor
icebp
out
sarl
add
aaa
adcb
cmp
mov
jl
mov
and
add
mov
jecxz
rcrl
add
and
aad
bound
mov
out
cmp
ds
push
add
add
cld
sbb
inc
gs
daa
bound
lea
jmp
pushf
xchg
sbb
test
push
pop
add
add
push
add
add
xchg
mov
adc
or
add
add
cmc
mov
leave
mov
stos
mov
add
lods
mov
fiadds
add
add
or
add
add
scas
cmpsl
or
add
add
add
call
inc
cmp
sbb
add
push
imul
mov
xor
adcl
std
test
and
pop
out
je
aaa
jg
test
js
dec
adc
push
add
xor
mov
add
add
cmp
push
and
fwait
xchg
daa
movsb
addr16
cmpsl
call
shll
inc
push
icebp
icebp
pop
xor
add
inc
xchg
fldt
jg
int3
int3
int3
int3
mov
and
cltd
cmp
rorb
lea
mov
mov
nop
nop
nop
nop
lods
loope
add
add
add
fsubl
stos
jle
sub
xchg
test
repnz
inc
sbb
sar
imul
jno
inc
sbb
add
data16
lods
add
add
add
dec
stos
mov
int3
int3
int3
int3
int3
or
add
add
or
or
adc
dec
pushf
lea
sbb
adc
sbb
shr
iret
cmpsb
mov
mov
lock
jnp
add
add
cmpsl
adc
test
xorb
pop
cmovno
in
mov
lcall
add
add
mov
decb
add
cli
cmp
fisttpll
add
add
sbbb
fs
fnsave
fiaddl
popa
cwtl
or
add
add
sbb
rcrb
hlt
call
mov
sahf
mov
add
add
add
add
push
mov
in
add
mov
scas
clc
gs
add
add
add
repz
add
add
mov
das
enter
into
test
mov
push
add
add
imulb
mov
sub
xor
xlat
leave
lret
and
insl
and
mov
jl
mov
ret
or
add
add
stos
jbe
push
bound
or
add
add
mov
in
add
add
movsl
add
add
add
dec
clc
mov
pusha
sbb
repnz
cmp
das
pop
mov
add
add
add
jmp
sar
cld
sub
sub
add
add
out
aam
int3
int3
int3
int3
int3
fistpl
mov
adc
dec
movsl
or
daa
ds
or
add
add
pop
js
dec
mov
adc
fildll
in
jg
mov
jmp
push
or
add
popf
push
call
dec
pop
jecxz
mov
mov
aam
cmpb
cmp
jge
mov
arpl
nop
nop
nop
nop
pop
cmc
xchg
das
add
add
add
inc
dec
add
add
add
adc
fstpt
and
jmp
fs
add
add
sub
dec
lds
cmp
add
xchg
jge
iret
jno
pop
popf
sub
int3
int3
int3
int3
mov
mov
push
add
jnp
add
add
add
jmp
out
scas
xor
add
nop
nop
nop
nop
push
repz
lea
mov
mov
lret
jbe
lods
pop
lock
or
add
add
rol
les
inc
cmp
add
inc
test
adc
lock
arpl
sbb
pop
aas
bnd
jecxz
push
pop
into
mov
inc
cmp
fimuls
jne
das
adc
add
pop
push
add
add
cmp
jge
add
add
add
mov
and
repnz
add
bnd
sti
mov
add
add
mov
mov
pop
adc
add
add
and
lahf
loop
jl
xor
cmp
test
push
rcr
imulb
mov
add
jmp
ds
popa
loope
hlt
pop
push
jae
lock
or
add
add
jno
or
pusha
leave
imul
rcr
inc
and
add
sbb
xchg
or
jns
loop
cmpsl
aaa
xchg
or
add
add
add
add
bound
mov
jecxz
aad
ljmp
cmpl
jns
jnp
fldl
push
add
add
dec
outsb
inc
pop
adc
xor
aam
sbb
sti
cmp
add
add
lea
jno
add
and
xchg
mov
aaa
fs
into
cmp
sbb
xchg
mov
ret
sbb
mov
pop
xchg
mov
ss
ja
push
test
jmp
ficoml
stos
pop
dec
je
lret
lahf
sub
sub
add
add
add
das
push
and
pop
jbe
lcall
mov
add
dec
addr16
push
add
aas
loop
push
in
int3
int3
int3
int3
push
cmp
jo
sbbl
test
sub
add
aam
pop
add
add
or
add
xchg
sbb
add
add
ret
or
add
add
pushf
add
pushf
dec
sub
leave
xor
add
inc
xchg
inc
adcb
pop
dec
xchg
dec
out
sub
add
add
add
add
add
in
test
sbb
cmp
mov
pop
sbb
mov
pop
add
add
daa
adc
push
scas
xor
mov
jmp
insb
cmp
pop
xlat
cs
add
add
add
xor
xor
add
add
add
ja
jmp
les
add
add
push
cmp
cmc
mov
imul
add
add
add
mov
call
lds
add
add
xor
pop
xor
divb
cmpsl
pop
sti
fdivr
repnz
adc
add
add
add
add
or
add
add
add
add
add
jmp
jmp
mov
test
add
add
add
pusha
out
ja
pop
cld
mov
push
icebp
repnz
ja
cmp
xchg
adc
add
adcb
jne
sub
mov
nop
nop
sti
and
ret
sub
add
and
cmp
lret
inc
push
rclb
add
fcoml
xchg
xor
into
fmuls
xchg
mov
xchg
dec
inc
and
aad
dec
dec
out
or
add
add
popf
push
imul
or
add
add
add
add
add
fmull
out
movsl
inc
dec
hlt
in
arpl
xchg
in
stc
jecxz
sbb
xchg
loop
push
mov
cmp
imul
jno
or
add
add
nop
nop
nop
nop
cs
or
add
mov
popa
xlat
in
or
adc
push
mov
movsb
cltd
repz
add
add
jp
cmpsb
lret
mov
inc
xchg
rcrl
movsb
test
fstps
shrl
or
pop
pop
stos
ret
test
int3
int3
int3
cs
add
add
movsl
cmp
test
sbb
push
loopne
xchg
pop
out
or
add
add
pusha
pop
mov
cli
enter
add
add
paddsb
mov
movl
stos
sub
mov
ss
flds
aam
or
or
add
add
dec
subb
repnz
gs
xchg
out
push
arpl
add
mov
jne
push
push
sub
sarb
xchg
mov
pushf
cmp
mov
jg
fstp
mov
clc
scas
orl
mov
movsb
xchg
frstor
lods
inc
xchg
call
rorl
add
mov
inc
sub
add
add
cmpsl
xchg
or
add
add
cmp
inc
jae
mov
add
cli
mov
xchg
add
mov
divl
add
add
add
cltd
mov
pop
mov
or
pusha
sbb
cwtl
push
in
sbb
ja
xchg
sub
aas
lods
int3
int3
int3
int3
int3
sti
jnp
sbb
add
add
push
jns
stos
adc
icebp
scas
mov
add
jne
cmp
int3
int3
int3
hlt
add
add
add
push
mov
mov
xor
orb
cmc
out
jns
inc
jmp
es
mov
aad
arpl
pop
int3
int3
int3
int3
int3
data16
mov
repz
pop
cmp
scas
mov
add
add
cmp
add
add
sbb
or
add
add
add
neg
dec
jle
adc
fs
outsl
imul
push
fnstcw
cmp
add
add
ret
dec
popf
mov
xor
outsl
pusha
lcall
mov
mov
std
lods
sub
xor
add
lock
into
jns
movsb
sub
add
add
outsb
je
int3
int3
int3
int3
int3
repz
in
cmp
enter
mov
cmp
and
fwait
sarl
push
xor
rol
clc
add
cwtl
neg
bound
adc
add
add
add
lret
pop
sbb
dec
sub
stos
sbb
inc
adc
dec
pop
lds
pop
xchg
add
add
inc
aaa
xchg
movsl
rorb
mov
push
xor
push
cmp
add
ja
sub
loope
shrb
popf
sbb
cmp
xchg
sub
add
add
cmpb
xor
xchg
dec
push
add
out
pop
in
lods
mov
pop
or
add
add
fwait
test
cmp
xor
ret
add
add
add
cmpsb
ret
sub
imull
sub
js
jae
add
add
add
add
mov
js
push
mov
add
out
int3
int3
int3
int3
pop
sub
or
add
add
arpl
jb
cmpsl
xchg
mov
mov
pop
ret
sbbb
ja
pop
icebp
add
add
add
pop
cli
xchg
xor
add
add
es
test
mov
add
add
sbb
hlt
xchg
int
ds
icebp
cmp
add
int3
int3
int3
int3
int3
sbb
test
pop
int
mov
sbb
clc
mov
add
adc
add
add
add
add
add
add
add
add
mov
mov
adc
add
add
clc
fadds
add
add
sbb
cli
gs
lret
add
add
add
mov
xchg
pop
popa
test
enter
mov
cmpsb
and
pop
scas
push
add
add
xchg
cmpsl
loope
imul
and
aam
and
out
bound
mov
add
add
add
jb
insb
xor
sub
add
add
dec
lahf
xchg
movsb
pop
add
add
mov
jbe
push
pop
push
aam
rorl
mov
xor
jns
cli
mov
cwtl
cmp
jp
sub
cltd
dec
pop
and
add
add
call
mov
fs
fs
jo
mov
xchg
insb
in
add
add
add
push
inc
cld
adc
add
add
push
sub
mov
cmp
int3
int3
int3
int3
int3
and
add
add
stos
or
push
add
add
xchg
andb
loopne
test
xchg
pop
dec
and
mov
inc
int3
int3
int3
int3
int3
jno
daa
enter
push
add
add
mov
inc
popa
pushf
xchg
aam
add
jmp
dec
cmc
inc
xor
dec
ss
in
iret
into
xlat
roll
hlt
jae
iret
hlt
rolb
add
add
inc
fisubrs
test
add
dec
rcrl
shlb
add
add
and
or
lock
add
add
cmp
jmp
stc
call
lcall
xor
add
sbb
aad
mov
arpl
jg
sti
dec
pop
mov
pop
xchg
cmp
add
add
mov
add
add
enter
adc
outsl
int
fcomi
in
or
xchg
add
cmp
nop
nop
nop
nop
nop
or
mov
or
xchg
xchg
daa
mov
dec
sub
jo
pop
clc
fcomip
xchg
jge
push
sbb
cld
adc
add
lret
push
and
sti
mov
add
add
stc
jae
cmp
mov
xchg
mov
fstpt
xchg
call
ror
inc
and
and
popa
test
cmp
xchg
jb
lods
adc
or
mov
mull
push
add
add
mov
mov
jo
loope
mov
ljmp
ja
inc
out
add
add
pop
ds
push
pop
jae
pop
add
add
and
arpl
int3
int3
int3
int3
int3
mov
idivl
xchg
int3
int3
int3
int3
int3
push
jge
inc
xchg
dec
pop
movsl
or
add
add
insl
xor
dec
jle
int
jmp
or
add
add
inc
xchg
incb
lods
decb
lock
js
jae
in
insb
or
add
add
add
js
aad
pop
adc
inc
jns
jno
lods
outsl
jg
jl
stc
dec
add
add
add
sti
sbb
add
aaa
add
dec
jg
fcoml
sarb
cld
lods
jmp
out
scas
adc
jnp
loopne
andl
adc
dec
paddsb
cs
xchg
push
sub
push
aaa
push
clc
int3
int3
int3
int3
int3
xor
movb
add
add
add
rcrl
add
dec
inc
cli
mov
fisttpll
add
add
aad
xlat
mov
adc
add
add
add
mulb
cmp
adc
int
jae
push
into
imul
sub
add
repz
sub
add
shlb
cwtl
dec
xor
add
xchg
imull
cmp
int
add
add
jno
and
add
mov
xchg
mov
jecxz
imul
pop
and
imul
push
daa
pop
call
in
dec
xor
ljmp
push
das
enter
add
add
xor
fisttpll
mov
jp
push
jns
aam
xor
shl
movsl
push
add
add
lods
shl
test
add
add
pushf
mov
xchg
xor
cmp
add
lahf
cmpsb
mov
adc
out
cwtl
pop
add
out
add
add
add
mov
add
mov
movl
add
add
arpl
rcll
add
test
inc
adc
inc
add
xchg
cmp
add
add
adc
test
jg
mov
pop
inc
pop
ficompl
pop
jno
mov
pop
outsb
jp
cmp
add
add
add
lock
inc
test
add
add
mov
clc
mov
shl
cmp
das
pop
outsl
jns
mov
ja
pop
dec
and
inc
test
and
sbb
mov
dec
outsb
jbe
or
mov
jmp
es
lods
jnp
add
add
add
add
add
mov
inc
mov
out
insl
jg
xchg
xchg
cmp
add
lea
dec
mov
xor
add
push
dec
dec
add
inc
aam
pop
inc
lea
or
add
add
push
sbb
sbb
cvtps2pi
add
jg
xchg
mov
add
add
imul
inc
shll
jno
lcall
inc
jecxz
daa
outsb
mov
int3
int3
int3
int3
int3
cmp
add
add
stc
sti
mov
adc
test
mov
or
lods
add
add
add
mov
bound
ret
xchg
pop
sub
daa
sub
add
cmp
cmp
add
xchg
jbe
add
add
add
inc
inc
pop
aad
jnp
sbb
add
mov
cmp
into
out
shld
cli
scas
repnz
xchg
sbb
lea
xchg
arpl
int3
int3
int3
int3
int3
jo
pop
add
adc
hlt
jg
mov
add
pop
sti
sub
add
add
shlb
pop
xlat
mov
xchg
add
add
add
add
add
addr16
and
out
fsubrl
les
add
add
and
aas
mov
mov
rolb
xchg
mov
cltd
xor
lahf
cs
mov
adc
add
add
pop
int3
int3
int3
int3
int3
and
add
aas
stos
add
add
add
enter
enter
xorl
add
add
inc
cmp
xor
in
shrl
add
mov
dec
aas
xor
cmpsl
inc
pop
std
fldt
sbb
aas
xor
add
loopne
mov
dec
adc
dec
mov
pop
and
add
mov
add
add
dec
push
test
std
mul
insl
fdiv
xorb
iret
mov
xchg
aaa
or
add
add
lahf
aas
ja
les
mov
pop
sub
add
pop
fcoms
pop
mov
lcall
add
adc
daa
xor
add
add
sbb
sbb
add
add
pusha
aaa
mov
out
mov
add
lretw
lds
mov
add
add
add
add
mov
add
mov
adc
cmp
mov
in
and
frstor
inc
aas
and
dec
mov
cli
mov
add
add
xchg
xchg
adc
sti
arpl
mov
arpl
jne
test
add
add
fidivrl
jnp
loop
add
mov
or
add
add
add
add
jb,pt
nop
nop
nop
nop
and
mov
xor
mov
out
mov
add
add
add
int
scas
mov
pop
cltd
insl
out
add
add
jnp
push
jle
add
add
add
add
add
pop
imul
push
das
add
aaa
pop
cmp
add
add
sahf
push
aaa
scas
out
inc
xlat
test
popa
aad
xor
test
and
jle
adc
mov
fidivrl
cld
mov
dec
loop
gs
and
push
or
out
insb
loopne
inc
mov
or
add
push
sub
xchg
test
out
xor
jl
push
aaa
mov
pop
cwtl
add
add
add
lds
add
add
add
and
xchg
dec
push
xchg
jp
loopne
in
mull
push
and
jge
lock
xchg
sti
aas
insl
sbb
add
add
jo
fstps
cltd
push
inc
add
add
add
repnz
jns
dec
mov
or
out
push
outsb
es
add
add
rcl
adc
fdivs
add
sbb
scas
lret
out
test
pop
mov
mov
add
add
add
rcrb
dec
cmp
rclb
jle
add
add
cltd
or
add
add
int3
int3
int3
int3
or
add
add
loop
movsl
xchg
push
movsl
pop
push
test
fsubrl
into
cld
mov
std
lods
xor
les
jae
je
cld
fsts
adc
lret
adc
sub
pop
add
add
mov
out
sarb
add
add
add
add
add
or
mov
mov
fcomip
int
push
mov
stos
add
add
add
inc
in
lea
mov
testb
push
xchg
push
add
inc
fs
pop
add
add
insb
push
add
add
add
pop
add
add
pop
jae
xchg
or
add
add
mov
add
add
ja
loopne
sbb
push
fdivrl
adc
in
out
setp
push
mov
mov
int
cmp
cmp
loopne
add
pop
dec
sbbb
and
mov
add
mov
jb
sub
mov
lcall
inc
xchg
sub
sub
out
inc
mov
call
mov
cltd
sub
jmp
push
xor
lock
aad
arpl
add
add
add
add
add
ljmp
xchg
outsl
mov
lods
xor
dec
icebp
or
add
add
mov
ret
sti
sub
add
add
pushf
fimull
add
add
pop
add
add
loope
stc
cwtl
test
ss
fdivr
and
jecxz
pop
push
fstpl
sbbb
aam
jle
add
add
add
fildll
sub
xchg
mov
push
mov
and
ret
es
and
ret
xchg
mov
sub
nop
nop
nop
nop
nop
pop
pop
pop
pop
jmp
iret
xchg
mov
mov
cmp
add
add
xor
push
mov
add
xchg
stc
dec
push
add
add
xchg
std
xor
add
add
jae
and
add
add
mov
xor
mov
repz
mov
jae
sarl
mov
cmp
adc
ret
and
jmp
add
xchg
mov
daa
lret
push
enter
or
pop
sub
into
cwtl
inc
add
add
add
ret
and
add
add
sbb
mov
xchg
lock
es
arpl
cli
mov
jmp
mov
sub
pop
mov
add
add
add
imul
aas
call
test
out
adc
push
data16
jno
or
pushf
ljmp
add
mov
xor
stos
jns
fdivp
adc
iret
add
add
sti
cmp
lret
sbb
test
mov
mov
add
imul
add
xor
mov
mull
jle
dec
or
add
add
xchg
cmp
or
add
add
repz
adcl
jmp
icebp
push
inc
cmc
xchg
add
add
es
popf
jecxz
push
popf
insb
dec
pop
pop
shl
lcall
mov
adc
pop
iret
insb
pop
cltd
push
jo
xchg
jp
xchg
popa
call
adc
test
rep
xchg
cmpsb
add
push
insl
and
jmp
cmp
xchg
and
test
push
xor
or
add
dec
mov
stos
jg
adc
sub
jbe
or
add
add
sub
add
sub
inc
lods
dec
xchg
jbe
and
sbb
aaa
cmp
cld
jo
movsl
cmp
add
lds
in
sbb
dec
fldl
add
add
inc
sahf
mov
push
sub
mov
xchg
sub
fidivl
jb
jle
mov
dec
imul
out
lea
lods
lahf
icebp
sbb
int3
int3
int3
int3
mov
fsubrl
cmp
roll
xchg
add
add
add
push
xchg
insl
rolb
add
add
jae
sarb
ret
adc
cmpsb
in
adc
add
in
mov
or
add
add
ljmp
jno
jl
int3
add
icebp
jp
push
or
add
add
fldt
add
add
add
dec
aas
lds
add
aam
dec
in
nop
nop
nop
nop
nop
xchg
and
js
pushf
sub
add
push
add
lds
add
stos
jecxz
sahf
sbb
add
cld
xchg
iret
push
add
add
data16
mov
sbb
add
add
mov
mov
ds
enter
repnz
pop
mov
xrelease
mov
insl
aas
or
add
add
loope
icebp
xchg
xor
aad
imul
push
loopne
pop
lds
cltd
out
ja
sbb
sbb
int3
int3
int3
int3
int3
iret
xchg
push
jmp
gs
hlt
scas
jnp
fildl
xor
sbb
repz
mov
ret
mov
mov
aad
popf
bound
data16
popf
icebp
outsl
loopne
sbb
add
mov
xchg
in
fstl
pop
add
add
sti
add
add
add
sti
push
cmpsb
jmp
fnstcw
or
add
add
int
fidivl
outsl
int3
int3
int3
int3
int3
mov
mov
js
push
jb
das
jns
popa
mov
das
insb
and
or
add
add
adc
xor
push
clc
add
add
add
mov
xchg
sbb
stos
mov
mov
fsts
jae
movsb
aas
add
cmpsb
jecxz
cwtl
mov
jle
std
rolb
inc
pop
rolb
lret
xor
add
int3
int3
int3
int3
fadd
call
pop
sti
jo
jno
mov
mov
adc
in
rcrl
shrl
cmp
add
addl
dec
repz
mov
mov
add
push
cmova
sub
cld
add
sbb
jle
add
xchg
dec
jg
jno
mov
nop
nop
nop
nop
nop
dec
cmp
add
add
add
mov
push
pusha
adc
rcll
leave
fimull
add
cwtl
daa
or
aad
movsl
insl
loope
and
das
push
stc
rol
popf
inc
hlt
sbb
or
add
add
and
fcom
ds
jmp
std
jl
inc
loope
mov
mov
add
std
je
xor
jbe
push
push
jle
aad
ret
mov
decb
mov
jp
out
out
xchg
add
add
add
cmp
add
mov
add
add
call
sahf
stos
sti
dec
sub
push
add
add
daa
sub
cwtl
in
jno
add
add
fsubp
and
add
add
inc
sub
add
add
sbb
or
add
add
iret
adc
pop
orl
fs
pop
add
add
int
out
add
add
repnz
das
pop
pop
fildll
aas
neg
mov
into
dec
push
out
movsl
add
add
add
sbb
cmp
repz
add
add
add
add
ret
lret
push
fnstcw
push
mov
xchg
out
xor
nop
nop
nop
test
or
add
add
inc
push
dec
cmp
lret
enter
dec
daa
addr16
mov
fs
cmp
shrb
add
add
mov
roll
add
add
mov
outsb
sbbl
das
jmp
push
add
add
push
pop
mov
dec
push
or
add
add
add
popa
nop
nop
nop
nop
nop
adcb
pop
mov
aad
mov
cmp
cmc
jp
and
mov
mov
lret
clc
mov
add
add
add
add
test
cmp
inc
in
popf
jnp
addr16
popf
push
insb
test
bound
push
ja
test
jbe
daa
add
add
daa
dec
mov
iret
es
push
mov
inc
ret
adc
pop
push
adc
addb
add
sbb
or
add
add
jg
or
add
add
mov
dec
divl
clc
xor
cmpl
add
mov
flds
add
fisubs
push
loop
gs
add
andl
dec
lcall
add
add
jbe
fbld
out
lret
cmp
cwtl
cmp
inc
mov
jnp
ret
sti
xchg
lds
movsb
aaa
pop
outsl
inc
jno
pushf
or
add
add
rcrb
stos
mov
popf
xchg
xor
out
or
shll
rcll
xrelease
jb
jge
push
add
add
adc
sarb
add
add
jae
pop
adcl
xlat
aam
ss
sbb
mov
andb
sbb
add
dec
movsb
mov
inc
mov
inc
jne
dec
push
add
add
add
rorl
lods
data16
pop
mov
push
cld
jle
pop
jle
add
pop
fcmovne
int3
int3
int3
int3
jp
arpl
les
xchg
mov
and
inc
icebp
aaa
add
add
call
mov
cmp
scas
loopne
and
clc
add
add
add
add
in
enter
fildl
add
add
cmp
inc
mov
jb
mov
sub
cltd
leave
lds
sub
aam
cmp
or
repnz
sbb
add
add
adc
adc
jge
sbb
cmp
test
mov
add
adc
ror
cmp
pop
mov
xchg
lods
movlps
pop
inc
lahf
lret
sub
and
xor
sub
shl
ficoml
popf
les
mov
xchg
inc
andb
add
add
cmp
mov
arpl
mov
sbb
mov
inc
add
add
add
xchg
out
mov
jg
pop
add
add
add
test
add
add
xor
nop
nop
nop
nop
mov
add
add
mov
loop
mov
push
sbb
mov
sbb
rcrl
add
in
mov
test
add
fists
arpl
dec
jecxz
insb
cmp
cltd
inc
dec
call
mov
push
mov
ja
cmpsl
imul
push
cmp
push
cmp
lods
scas
fs
add
add
add
shlb
insl
filds
sbb
jo
in
test
and
hlt
or
add
add
lods
pop
mov
out
dec
js
inc
stos
test
jge
inc
sub
add
add
add
or
add
add
test
add
add
add
icebp
add
add
push
pushf
daa
cs
mov
add
add
add
out
outsl
aas
push
sub
push
xor
push
mov
add
add
xchg
xchg
lock
mov
ret
sbb
out
mov
xchg
add
add
in
push
add
add
and
xchg
lcall
lcall
cmpsl
into
ja
pop
cmp
pusha
add
add
add
xchg
or
mov
pop
ffreep
hlt
add
dec
sahf
sub
xchg
out
dec
sbb
add
jge
mov
push
and
add
xlat
cmp
mov
fs
cmp
cmp
sbb
add
add
nop
nop
nop
nop
nop
xor
push
pop
std
xor
addr16
adc
inc
mov
inc
stc
clc
mov
jb
sbb
cli
inc
cmpsl
push
rorl
mov
scas
fcoml
add
loopne
mov
sar
xchg
clc
cmp
xchg
xchg
sahf
xchg
dec
out
fsubl
add
add
add
pusha
dec
leave
xchg
das
xchg
hlt
flds
int3
int3
int3
int3
insl
sbb
xchg
and
mov
aas
mov
mov
push
cmp
int3
int3
int3
int3
int3
jo
xchg
add
add
add
cltd
mov
and
push
sbb
test
pop
clc
aad
mov
add
add
pop
aaa
negb
inc
jno
adc
inc
rcl
xor
shrl
cmp
xchg
sbb
mov
ja
sti
aad
mov
add
in
shlb
stc
jp
cli
into
fsubrl
add
or
arpl
add
add
add
mov
inc
pop
fists
leave
jg
divps
nop
nop
nop
nop
nop
lods
cmp
in
dec
inc
stos
jo
mov
nop
nop
nop
nop
nop
outsb
mov
add
sub
xchg
int
mov
insb
dec
loop
pop
sbb
ret
jnp
or
add
add
mov
loop
inc
stos
mov
mov
decb
add
add
jne
sarl
insb
xchg
cmpsl
dec
in
ljmp
add
dec
insl
lock
into
arpl
push
pop
sub
and
jno
pop
add
add
add
inc
les
mov
shlb
mov
add
add
add
aaa
test
bound
int3
int3
int3
int3
imul
add
add
inc
data16
jge
mov
test
push
repnz
pop
rolb
stos
test
sub
fwait
incb
sub
mov
popa
pop
ss
sbb
icebp
lret
inc
or
add
add
lret
add
add
scas
ss
outsl
pop
add
add
cmp
popa
imul
shr
mov
fisubrs
cltd
xor
inc
cmp
addb
add
add
test
sbb
add
les
data16
int
push
fsubl
xchg
inc
outsb
push
outsb
inc
cli
or
sbbl
add
mov
frstor
add
add
loop
out
addr16
and
add
add
lods
sbb
mov
les
es
sub
stos
mov
lds
rcrl
adc
fstl
jne
aad
dec
mov
push
call
add
add
add
call
xor
test
pop
and
hlt
outsl
push
xchg
inc
add
add
add
add
add
add
push
cmp
nop
nop
stos
mov
add
add
pop
xor
adc
add
icebp
fildll
add
add
pop
xchg
arpl
int
std
addr16
lret
add
add
push
or
add
xchg
aaa
loope
mov
xor
add
add
add
pop
shl
and
int3
int3
int3
int3
and
bound
mov
xchg
xor
in
adc
inc
sarl
out
mov
sahf
and
xor
data16
int3
int3
int3
int3
sti
cmp
enter
sub
add
cwtl
push
push
mov
ret
out
dec
xchg
adc
into
dec
xchg
jmp
ds
pop
inc
xorb
je
std
jno
mov
pop
pop
test
jno
and
lock
dec
dec
mov
lock
dec
stc
mov
inc
das
push
sub
sbb
add
add
add
xchg
and
mov
pop
int
jmp
test
push
sub
adc
aas
jns
dec
int
movhps
dec
addl
pop
add
add
in
adcb
test
jo
and
jne
sar
or
add
add
test
imul
cltd
push
jno
add
add
add
adc
dec
jo
mov
or
add
add
sbb
add
add
push
xchg
dec
adc
add
rorl
cmp
out
fnstenv
fs
dec
sbb
mov
xor
add
add
sahf
in
popa
push
mov
push
or
sbb
jge
mull
dec
pop
pusha
xchg
inc
inc
push
lret
xchg
jnp
inc
popa
movsl
clc
xor
xor
add
jg
xchg
adc
js
xchg
sub
add
push
ss
adc
inc
sbb
add
add
mov
add
ficompl
iret
sbb
add
pop
sbb
jmp
andb
cmpsb
lea
sub
sub
sarb
ja
stos
daa
add
nop
nop
nop
nop
nop
test
adc
push
add
add
add
sbb
add
add
add
add
roll
cmp
out
add
add
mov
ret
popa
stos
pop
shlb
aas
cs
int3
int3
int3
int3
and
lret
adc
aas
pop
sub
out
fidivrs
hlt
nop
sub
in
hlt
out
or
add
add
ja
fmull
cwtl
mov
scas
movsb
scas
xlat
sbb
mov
sbb
imul
mov
add
and
add
add
mov
inc
stos
fmulp
int3
int3
int3
int3
inc
sbb
mov
rolb
pop
xor
xor
dec
and
or
add
add
xor
xchg
dec
arpl
and
test
push
pop
mov
xchg
xor
lret
cmp
jp
sbb
sar
xchg
imul
mov
int
xchg
lret
rolb
push
xchg
adc
js
mov
add
cmp
jbe
cmpsb
add
add
sub
add
add
imul
add
add
pop
scas
adc
xor
mov
or
adc
add
roll
add
add
jmp
adc
push
add
add
push
or
mov
insb
mov
xchg
clc
fisttpl
add
sub
push
fwait
mov
or
add
add
adc
mov
add
add
add
add
sbb
xchg
stos
inc
xor
add
add
add
dec
cld
mov
dec
rolb
test
mov
rolb
xchg
bnd
cli
lds
xchg
in
inc
or
add
add
int3
int3
int3
int3
fbstp
lcall
fsubs
imul
xor
lret
cmpb
or
add
add
or
movb
add
add
pop
add
add
repnz
in
inc
fists
push
aas
inc
inc
mov
mov
cmp
stos
into
loopne
and
push
pop
loop
lock
ret
fs
iret
fldl
add
stos
addr16
iret
mov
mov
pop
rorb
add
cmp
add
add
push
imul
add
add
add
add
add
pusha
movsb
arpl
push
add
add
add
ret
inc
mov
je
fistpl
pop
fmul
hlt
in
mov
inc
cmpsl
push
add
add
add
in
sub
icebp
push
inc
push
add
loop
add
add
add
js
or
add
add
rcll
pop
cmp
ja
insl
add
add
add
movsl
imul
and
ljmp
add
pushf
adc
or
int3
int3
int3
cltd
pop
mov
xchg
enterw
mov
clc
xchg
daa
pusha
mov
pusha
lcall
add
push
pop
push
jno
mov
xor
cmp
fwait
incb
add
add
and
sbb
and
fildll
push
inc
jmp
mov
aaa
add
add
mov
in
mov
in
xor
mov
loop
add
add
fistps
xchg
shll
adc
jae
add
shll
call
popf
cmpsl
nop
nop
nop
nop
nop
dec
pop
mov
sub
add
add
add
adc
add
add
add
sub
mov
mov
and
insl
or
add
add
call
adc
jecxz
insb
add
adc
sbb
or
add
scas
scas
in
mov
or
add
add
mov
sbb
add
add
cmp
clc
push
shlb
add
add
push
sti
xor
add
add
mov
add
add
imul
mov
inc
jecxz
dec
and
ds
jg
pushf
cmp
loop
add
fnstcw
pop
in
push
popa
cli
adc
xadd
sub
sbb
add
add
and
sub
cmp
pop
inc
sbb
add
and
lahf
repz
xchg
bound
inc
out
adc
mov
rcrb
jmp
inc
arpl
mov
leave
push
or
add
add
idivl
xchg
add
scas
dec
lcall
add
add
outsb
or
add
add
adc
add
cmp
daa
cmc
cmp
je
shlb
push
mov
data16
imul
cmpl
cs
les
add
cmp
jl
or
add
add
aad
add
add
data16
adc
xor
add
add
outsb
mov
ret
bound
inc
pop
mov
out
jle
add
add
lret
jo
out
and
adc
fdivr
and
jp
andl
sub
or
mov
cmpsl
adc
and
add
mov
or
add
add
or
add
add
xor
mov
add
and
daa
add
add
add
mov
add
add
add
popa
movsl
stc
mov
sub
jae
add
xor
cmpsb
mov
jo
xchg
jmp
or
add
add
sbb
shll
icebp
push
sub
or
add
add
add
add
sub
xchg
sbb
test
add
add
xchg
pop
jp
push
sub
pop
dec
aam
mov
outsl
and
add
add
dec
aam
xchg
add
add
jae
pusha
adc
mov
mov
ret
loopne
call
pushf
push
jae
add
add
jmp
mov
xchg
push
mov
addb
mov
pop
jl
cmp
add
addr16
test
out
outsl
pusha
sti
clc
sti
pop
pop
jg
cmpsl
adc
push
add
add
push
inc
and
addr16
pop
add
add
adc
out
fs
daa
loopne
lods
xchg
std
push
sub
sub
push
jmp
push
scas
insb
call
sub
cmp
int3
test
add
add
popl
xlat
out
or
add
add
sbb
add
add
add
in
leave
jo
addr16
fcompl
add
in
sbb
aad
aam
jbe
lret
int3
int3
int3
int3
int3
push
jae
push
and
rcll
add
mov
xlat
imul
xor
sti
aad
mov
xor
aad
popa
or
add
sbb
mov
repz
insb
cmpsb
mov
jb
pop
or
add
add
cmp
inc
inc
jp
repz
and
cmp
out
mov
jecxz
mov
ljmp
cmp
ljmp
add
add
adc
std
sbbl
xor
add
jbe
es
cli
mov
lahf
aas
add
inc
dec
pop
jmp
in
adcb
inc
cmp
in
in
test
loopne
jmp
adc
push
clc
push
pop
sub
mov
add
add
add
adc
xchg
ficompl
icebp
arpl
or
add
add
loope
xor
cli
imul
cmp
ja
sahf
pop
ret
push
dec
jecxz
mov
movsb
divb
loope
inc
test
add
pop
jne
jnp
test
or
add
add
add
add
add
mov
and
call
out
cs
mov
mov
add
add
sbb
insl
mov
cmp
dec
fisubs
add
add
add
add
push
add
add
mov
subl
cwtl
jmp
dec
movsb
loop
inc
jp
sbb
sbb
imul
mov
daa
sbb
imul
pop
jmp
cmp
pop
xor
sub
and
add
mov
add
add
add
outsl
scas
xchg
ficoms
dec
gs
jae
and
std
cmp
nop
nop
jmp
out
ficoms
sbb
int3
int3
mov
inc
mov
fcmovne
int
imul
ss
add
add
add
and
sbb
popf
jno
xchg
lahf
es
push
cmp
cwtl
out
lods
push
roll
xchg
arpl
mov
mov
pop
pop
out
sar
sub
inc
test
sarb
stos
xor
xor
test
les
jne
add
add
xchg
xchg
cmp
cmp
pop
sub
add
and
add
add
add
sbb
jp
jbe
mov
cs
sbb
xchg
repnz
aaa
mov
xchg
mov
xlat
push
jl
mov
lahf
insb
or
cmp
pop
fadd
or
add
add
adc
add
add
push
jno
mov
jo
arpl
aad
shll
sbb
inc
pop
mov
mov
or
add
add
pop
ljmp
adcl
fsubl
xchg
or
add
add
add
mov
clc
mov
jp
movsb
stos
icebp
dec
push
ret
mov
icebp
mov
aad
jnp
jno
int
add
add
cs
push
jae
cli
mov
lods
sbb
or
add
add
jp
movb
add
add
sbb
push
xor
popf
mov
add
jmp
xor
xchg
std
mov
dec
faddl
cmpsb
inc
cmp
add
add
cmc
push
sub
add
loopne
lds
aaa
add
fnstsw
stc
sbb
jns
rcll
xor
int
lcall
int3
int3
int3
int3
mov
pusha
fildl
add
add
dec
inc
pop
push
out
push
add
add
push
xchg
fcoms
mov
addr16
lds
add
add
lret
std
nop
nop
nop
nop
nop
scas
pop
cwtl
add
add
add
iret
cmp
imul
or
add
add
ret
mov
xor
rorl
jno
sbb
add
add
inc
pusha
scas
js
jbe
add
sub
push
orb
addr16
xorl
add
add
add
add
add
mov
mov
nop
nop
nop
nop
nop
lret
ret
mov
in
ret
xchg
int
adc
xor
mov
jg
xchg
out
jmp
add
add
jl
inc
pushf
out
call
and
lret
xor
add
add
negb
sbb
add
add
and
xor
jle
dec
ljmp
and
add
add
add
sbb
es
mov
aas
add
add
add
add
add
pop
push
outsl
add
add
add
int
iret
data16
dec
sarl
xorl
add
push
pop
xlat
xor
ret
add
add
add
cmc
fcmovbe
mov
xchg
sub
push
push
pop
add
add
add
push
divb
xor
add
pop
pop
add
add
test
add
dec
mov
pop
xchg
adc
test
js
inc
adc
sub
cmp
sti
test
mov
rol
xor
loope
ret
daa
jp
mov
das
push
cmp
mov
xor
sbbl
add
add
sbb
or
mov
dec
xor
sbb
cmc
outsl
inc
pop
aaa
pop
les
add
fs
popa
push
popf
xor
adc
sahf
scas
sub
adc
es
shll
mov
testb
je
pop
mov
sub
into
lahf
aaa
dec
ja
jb
sub
aaa
outsl
jno
test
sub
add
add
add
add
adc
pop
mov
mov
popa
or
add
add
lea
sbb
or
sarb
cmpsb
mov
jo
sbb
jecxz
das
lcall
scas
sub
push
jp
jae
aad
out
push
cmpsl
mov
les
sbb
inc
adc
decb
mov
mov
addb
stos
fucomip
rolb
add
add
add
cmp
es
orb
imul
adc
add
add
add
in
repnz
sahf
push
sbb
fwait
mov
ljmp
adc
add
lret
nop
nop
nop
nop
nop
les
arpl
push
mov
jg
gs
sahf
pop
fwait
cmp
jb
fs
mov
dec
loop
imul
jg
and
add
add
add
push
mov
or
add
add
fisubs
sub
popa
add
add
add
bound
and
add
ja
mov
jb
jg
test
int3
int3
int3
int3
int3
sahf
inc
int
mov
ret
aaa
pop
bound
stc
popa
test
js
mov
out
add
add
add
pop
test
cld
push
in
and
add
je
dec
fisttpll
stos
adc
ljmp
push
das
xchg
mov
add
add
fstps
pop
cmp
dec
icebp
and
jnp
cmpsb
cmpsb
cld
add
add
add
pop
add
out
lret
add
add
xlat
push
cmp
add
add
aaa
sub
jbe
int3
int3
int3
int3
xchg
in
dec
xor
and
xchg
jo
outsl
je
jge
imul
fadds
add
add
vmwrite
je
dec
clc
jne
es
pop
xchg
mov
pop
sub
push
int
les
xchg
hlt
jnp
add
add
imul
sub
add
add
das
mov
sub
clc
loopne
or
add
add
add
lock
jo
or
and
fldl
add
fs
scas
adc
fisubrs
sub
mov
push
fdivs
mov
shr
loope
mov
pop
pop
sbb
add
add
add
xchg
dec
rorl
jbe
add
not
int3
int3
int3
int3
int3
jne
push
jno
rcr
inc
jecxz
mov
leave
ja
dec
mov
fwait
jg
sbb
mov
filds
push
adc
xor
and
imul
add
mov
sub
aad
sbb
jmp
aas
and
jne
push
jle
cmp
add
add
vpsubb
jle
test
lret
sub
fstpt
fwait
push
inc
fbstp
inc
xchg
bound
popa
push
inc
bound
pushf
add
pushf
addb
mov
lock
dec
and
mov
cmp
add
add
outsb
inc
xlat
cmp
icebp
rclb
or
add
add
rcrl
inc
loopne
sub
jnp
into
and
negb
mov
lahf
mov
fmuls
arpl
or
add
add
xor
jge
scas
and
cwtl
ja
icebp
jno
push
dec
pusha
call
bound
shlb
jg
add
add
and
or
imulb
push
jp
pop
clc
movsl
push
ljmp
xor
mov
mov
hlt
pushf
inc
lods
cmp
push
push
dec
notb
rclb
add
add
subl
or
add
add
lret
xor
add
mov
fldcw
rclb
out
and
cmp
add
in
jmp
push
cvtdq2ps
filds
daa
loopne
fbstp
push
sub
xor
movsb
outsl
cmc
je
pop
sti
fldt
sub
or
add
add
call
or
fwait
stos
ds
and
push
and
pop
ror
or
add
add
lahf
xchg
push
das
inc
rorb
add
add
leave
and
mov
pop
xor
jb
xor
daa
mov
mov
fsubl
lcall
push
fucomp
aam
fcoms
dec
push
mov
sti
mov
in
in
in
xchg
sub
out
fcomip
jp
jae
cmp
add
dec
jge
gs
jecxz
pop
mov
fwait
add
add
add
add
add
jne
xor
dec
push
ret
loopne
shll
add
push
inc
sbb
mov
dec
xor
js
fwait
in
inc
into
repz
add
add
add
xchg
icebp
or
add
add
add
mov
ret
push
mov
add
add
jo
mov
stos
and
mov
lcall
and
add
push
inc
sub
aam
sbb
pop
orb
scas
fisttpll
lods
into
mov
stos
repz
add
add
pop
ret
push
or
add
add
shrb
and
pop
mov
in
add
add
xchg
hlt
out
imul
sub
pop
add
add
sub
je
add
add
out
mov
out
lds
adc
inc
hlt
mov
jne
pop
xlat
and
push
std
inc
adc
arpl
inc
push
lods
cmc
sbb
mov
and
bound
das
js
mov
movsl
imull
and
cmc
or
leave
aas
xor
pop
js
out
call
adc
add
add
xchg
outsb
dec
enter
imul
add
add
cmc
out
xchg
mov
add
add
add
mov
and
insl
ret
inc
sub
inc
xchg
sti
cmc
lds
push
sub
add
add
jb
mov
add
mov
es
nop
nop
nop
nop
pop
adc
push
out
divb
mov
sub
cmc
inc
jnp
rcr
movsb
add
add
add
and
dec
out
mov
dec
sbb
xor
add
pop
jne
cmpsl
cmp
push
sbb
push
push
fstps
xchg
scas
mov
aad
adc
lret
jmp
out
push
xchg
popa
dec
popf
sub
xchg
cmp
add
mov
pop
loope
mov
mov
nop
nop
nop
nop
nop
sub
jp
and
rolb
xor
cs
mov
mov
xorl
mov
and
push
add
add
lahf
call
mov
jno
add
add
adc
mov
adc
nop
nop
nop
nop
jno
push
movsb
sub
add
cli
dec
imul
sub
repnz
fimull
xor
fstpl
arpl
nop
nop
xchg
leave
fwait
jo
fwait
rorb
mov
mov
movsb
jnp
jo
fists
fcomps
add
add
repz
repnz
nop
nop
nop
nop
out
lds
sarb
cmp
inc
and
xchg
loopne
test
jp
jecxz
je
clc
ss
int3
int3
int3
int3
dec
xchg
aam
rclb
pop
loopne
or
add
add
mov
lods
mov
add
add
add
int3
int3
int3
int3
adc
adc
jb
adc
scas
in
mov
cs
imul
add
add
jecxz
fisubs
and
add
lods
jg
jecxz
pop
add
add
add
add
rep
xchg
fwait
sub
add
add
mov
cltd
movsb
push
xor
inc
dec
inc
je
int
add
add
add
repz
pop
sbb
jnp
sbb
add
push
andl
mov
add
inc
scas
push
mov
sub
add
fsubs
stos
rorl
push
add
add
hlt
push
xor
out
jmp
outsb
inc
cltd
or
add
add
cltd
stos
xchg
jno
das
aaa
or
jg
nop
nop
nop
nop
jmp
fdivs
mov
add
scas
stos
jb
sub
xchg
arpl
cmp
movsl
cmp
jge
mov
cmc
lcall
sbb
sub
aam
cltd
stos
push
jne
jae
add
mov
lcall
jbe
fcomps
xchg
adc
add
test
shrb
add
jne
add
add
xchg
test
sub
jmp
leave
or
add
add
insl
inc
and
inc
cltd
jge
mov
divl
add
xchg
cwtl
scas
aas
in
sbb
inc
mov
movl
adc
add
push
add
jp
gs
aaa
popf
arpl
imul
sar
test
mov
aam
inc
lods
aas
jns
lds
test
lcall
adc
sub
movsb
loop
xor
push
pop
add
add
xor
push
add
sub
jmp
adc
stos
cmp
shlb
jmp
ret
je
add
add
aam
and
fnstsw
jne
sbbb
add
xor
das
fists
call
sbb
sub
pop
and
ficoms
sub
sub
mov
sbb
and
int3
int3
int3
int3
lock
add
add
and
sbb
add
cwtl
xchg
and
pop
add
add
imull
add
add
and
rcrl
lcall
stos
mov
sub
xor
add
lock
shl
xor
jl
imul
scas
mov
aaa
lods
xor
add
mov
sar
mov
iret
xlat
cmp
adc
mov
ret
sarl
cmp
add
rcrb
xchg
shll
nop
nop
rolb
test
xor
pop
adc
enter
add
add
add
push
add
cmpb
pop
aad
lock
mov
push
xchg
inc
mov
push
mov
add
add
mov
popa
andb
loope
jge
xchg
fbld
jecxz
imul
mov
fbstp
adc
adc
js
cwtl
imul
xor
int3
int3
int3
int3
int3
xchg
dec
xchg
push
xor
add
add
add
mov
or
add
add
cmpsb
push
add
add
lahf
dec
pop
jne
loopne
and
mov
push
jo
fnstcw
or
add
add
mov
int3
int3
int3
int3
int3
dec
cmp
adc
sahf
cmp
nop
nop
nop
nop
nop
add
add
add
rclb
dec
mov
ret
hlt
sbb
add
add
push
dec
and
push
add
sbb
or
add
add
pop
mov
sub
add
add
addr16
movsl
mov
add
add
sbb
sar
cld
push
lcall
shlb
dec
xchg
cmpsb
dec
fsubs
mov
adc
pushf
mov
insb
rorb
add
xor
out
stos
xchg
cmpsl
xchg
jle
cmp
add
jp
pop
xor
add
insl
add
add
add
add
add
jge
stos
stos
cmc
dec
insb
sub
mov
add
add
add
pop
or
add
add
in
les
movsl
shll
push
or
add
add
sbb
pop
movsl
sbb
das
add
add
pop
rep
xchg
int
add
add
outsl
mov
jecxz
mov
xor
adc
mov
mov
jnp
xchg
cmpsl
std
or
add
add
pop
xor
pusha
push
pop
orb
ja
aam
mov
or
jb
adc
or
add
add
add
add
jmp
arpl
and
mov
push
pop
inc
stos
mov
push
lahf
adc
add
std
xchg
mov
dec
add
add
add
neg
mov
add
clc
loopne
mov
clc
sub
cmp
mov
pop
pushf
adcl
and
add
int3
int3
int3
int3
int3
fsubr
push
mov
pop
add
add
adc
mov
mov
inc
add
add
add
push
stos
inc
jle
push
or
add
add
mov
add
add
out
das
call
stos
dec
inc
fisttpll
fildl
pop
add
add
lret
mov
or
add
add
mov
jmp
xor
xchg
dec
aam
pop
imul
add
add
add
fs
and
push
stos
mov
mov
daa
add
xchg
insl
movsl
sbb
mov
outsl
mov
jp
add
add
add
mov
pop
add
add
or
add
add
ja
call
sbb
out
add
add
or
lahf
shl
add
add
test
addr16
pop
cmpsl
rcrb
push
xlat
inc
adc
enter
hlt
lods
rcll
cmpsl
sarl
or
push
int3
xor
add
add
leave
add
add
add
dec
lcall
das
inc
pop
scas
mov
jl
cltd
and
xchg
jnp
test
add
sbb
pop
add
add
fldt
sbb
add
lock
outsl
cmpsl
push
sub
adc
and
mov
adc
test
ficoms
add
add
add
add
jns
jo
lret
ficoms
push
push
sbb
sbb
add
ret
jo
cwtl
sub
add
add
inc
jne
ret
add
add
add
sbb
fnstenv
sbb
add
add
lds
imul
outsb
push
or
add
das
cmp
cmpsl
scas
cli
imul
sahf
inc
xor
add
cmp
divb
fnstsw
fmulp
int3
int3
int3
int3
std
cmpsb
pop
lods
icebp
ja
and
fisubs
repz
arpl
pop
pop
add
add
test
rolb
add
add
stos
fmuls
add
addb
add
add
int3
int3
int3
int3
int3
in
add
pop
push
fwait
adc
es
push
ljmp
pop
es
jno
and
cs
sbb
lcall
adc
add
add
mov
add
add
push
test
int
orl
add
add
out
jne
mov
add
mov
ja
and
lret
cmpsb
or
add
add
dec
stos
add
xor
add
es
xor
aas
mov
push
push
xor
scas
pop
add
add
xor
jmp
sbb
mov
sub
lods
cmpl
sbb
add
loopne
pop
add
add
or
add
add
add
add
add
lock
clc
sahf
test
add
fsubs
insl
xor
sub
iret
mov
add
add
movsb
or
add
add
push
repz
ret
lock
xchg
insl
add
add
add
add
add
add
aas
add
add
add
fucom
ficompl
ss
ret
mov
add
add
out
mov
pop
add
inc
inc
test
lods
popf
lahf
enter
add
add
jns
repnz
add
or
add
nop
nop
nop
scas
push
call
sbb
loopne
and
pop
movsl
pop
cwtl
ds
into
pop
dec
loopne
in
outsb
add
add
add
add
cmp
jo
scas
jle
and
mov
push
aam
mov
xchg
addr16
jb
dec
pop
out
mov
add
add
add
or
or
popl
add
add
inc
imul
inc
xchg
clc
inc
int3
int3
int3
int3
int3
jl
lret
cs
lret
imul
test
stos
repz
mov
int
cmc
cs
push
gs
jp
or
add
add
pop
cmp
add
xchg
mov
mov
scas
js
inc
mov
and
test
lahf
in
sub
aas
sub
pop
push
add
add
int3
int3
int3
int3
int3
fwait
shll
or
pop
inc
jge
pop
sbb
pop
mov
add
add
add
adc
and
add
cmp
jl
in
es
out
outsl
out
inc
scas
adc
mov
push
aas
sbb
add
mov
ljmp
imul
fists
inc
xchg
mov
jecxz
in
in
push
inc
push
mov
xchg
jo
shlb
or
movsl
mov
in
mov
pusha
call
pop
add
add
jge
fcompl
xor
mov
add
add
fmuls
sub
xor
and
shl
or
es
imul
sbbl
add
daa
or
nop
nop
nop
nop
nop
push
jge
fdivrp
xchg
push
push
mov
das
and
adc
mov
push
dec
or
add
add
xlat
xchg
dec
pop
push
jne
add
add
add
add
add
push
mov
pusha
push
add
pop
test
pop
int
jle
test
jecxz
call
or
cmp
pop
fildl
add
movsl
fcmovnbe
or
mov
jmp
es
add
add
fstl
adc
add
pop
fwait
add
add
add
or
mov
sub
add
add
mov
or
add
add
icebp
sbb
imul
pusha
add
add
add
outsl
adc
add
add
sub
adc
cltd
shrb
add
add
fldcw
jl
jl
sbb
add
jl
or
add
add
cmp
add
sub
add
add
pop
mov
mov
test
mov
into
cmp
add
ds
shr
cmp
adc
dec
xchg
and
and
push
mov
add
add
pop
or
add
add
shrb
add
rcrl
mov
ds
sbb
add
cmp
add
add
dec
pop
aas
js
xchg
push
aam
dec
sub
push
add
add
and
jae
dec
and
add
add
push
lods
aaa
sbb
cld
or
pop
fs
rcl
sbb
add
and
adc
add
add
add
add
sti
jle
push
orl
add
neg
test
xchg
jbe
shlb
cmpsl
into
inc
sbb
and
push
cmp
pop
mov
jae
idivb
clc
jbe
test
xor
flds
xor
loopne
scas
xor
sbb
dec
roll
add
add
outsb
in
nop
nop
nop
nop
nop
scas
xchg
lods
jnp
add
add
sbb
add
add
or
in
inc
test
fsubl
out
xchg
pushf
fwait
mov
pop
ss
add
stos
pusha
adc
aas
mov
add
testl
pop
add
add
add
add
add
cmp
mov
arpl
fwait
adc
nop
nop
nop
nop
fstps
sbb
scas
addr16
ja
mov
add
popa
adc
bound
int3
int3
repz
xlat
xor
shlb
nop
nop
nop
nop
nop
push
shl
inc
xchg
and
jg
push
cmpsb
add
add
add
inc
sbb
sub
subb
int3
hlt
int3
int3
int3
int3
int3
imul
mov
xor
add
clc
or
add
add
pop
xor
add
mov
in
outsb
scas
js
mov
fbstp
outsb
sub
aaa
push
add
add
xor
lret
pop
loopne
cltd
fcompl
addr16
sub
sbb
push
inc
push
mov
add
add
out
test
mov
clc
xchg
movsb
push
stc
cmpsb
enter
out
adc
imull
fbld
add
add
xorb
and
adc
jno
add
add
sbb
sbb
add
add
add
inc
mov
je
xchg
jae
fisubs
mov
pop
xchg
xor
orl
add
add
add
add
add
mov
add
lods
imul
aad
mov
scas
stos
daa
gs
dec
push
mov
call
pop
fistpll
cmp
out
je
xchg
push
lods
mov
lret
rol
lock
add
add
jns
xchg
test
pop
pushf
mov
add
add
push
adc
loope
pop
mov
call
pop
push
mov
push
inc
pop
add
add
mov
in
test
lds
inc
insl
iret
fabs
ljmp
daa
add
push
and
gs
ja
lods
lea
rcl
inc
out
aam
sub
into
jo
sub
mov
add
add
add
fnsave
clc
sub
add
cmc
addr16
inc
jmp
push
pop
xchg
add
mov
sbb
in
int3
int3
int3
int3
cli
loopne
div
aam
adc
add
jbe
dec
sahf
mov
inc
push
inc
or
add
add
sahf
adc
sub
ficoms
add
add
xchg
call
ds
inc
push
sbb
add
add
sbb
dec
in
pop
add
add
insb
jbe
pop
cltd
jl
ja
fdivrs
sub
add
sarl
add
xorl
int
aad
test
add
add
xchg
js
inc
mov
jecxz
mov
filds
add
add
jge
push
cwtl
sub
dec
jns
call
xor
cmp
mov
jg
mov
jge
and
push
or
add
add
clc
add
dec
cmp
add
add
add
add
add
jmp
aaa
int
sbb
push
inc
and
pop
or
add
add
loop
cli
outsl
mov
scas
stc
sub
insb
xchg
inc
call
cmp
dec
mov
scas
push
cmp
ljmp
jmp
or
add
add
movsl
xchg
aaa
pop
in
pushf
add
add
add
add
add
fiadds
jg
push
and
lcall
add
mov
orl
lods
add
add
add
mov
push
mov
das
jno
insb
arpl
push
ja
imul
jmp
and
add
hlt
lret
and
mov
or
add
add
and
pop
addb
add
add
dec
ffree
adc
xchg
jno
adc
call
sbbl
jnp
cmp
cmp
add
rolb
hlt
jae
data16
cmp
or
jg
sti
pop
xchg
add
add
cmpsb
inc
aad
insl
adcl
rcrb
rcrb
jg
rcrb
movsl
mov
cmp
mov
in
sub
push
inc
ret
das
jb
lret
add
add
js
jle
in
in
jp
jae
add
xor
es
rcll
mov
mov
push
rcl
lock
hlt
add
add
add
js
add
insb
std
sbb
xchg
lahf
cmovae
stc
mov
xchg
cmp
xchg
xor
pop
adc
int3
sub
mov
add
add
outsb
and
fs
mov
xchg
jbe
and
outsb
push
in
pop
cmp
ss
xchg
jnp
push
mov
pop
and
ret
mov
shl
cltd
mov
add
dec
cwtl
inc
sbb
sbb
xor
stos
push
adc
jmp
pop
push
xchg
shr
out
cmp
outsl
xchg
push
mov
lret
aad
inc
idiv
and
xor
loope
add
add
pop
dec
enter
inc
cmp
push
das
popa
in
mov
add
add
add
add
outsb
xchg
sbb
fwait
cltd
add
add
add
test
xlat
cmc
fmuls
add
add
mov
xor
add
add
add
push
sahf
add
xor
xorl
jmp
adc
mov
push
xchg
and
cmp
repz
mov
rorb
add
mov
xor
nop
nop
nop
nop
nop
movsb
xor
add
add
sub
xor
add
add
add
dec
xchg
arpl
mov
sbb
add
jle
pop
scas
mov
clc
cmp
gs
cwtl
test
or
aas
push
push
sbb
call
inc
sbb
jbe
xchg
out
sbb
add
add
fldl
pusha
mov
or
mov
pushf
push
jg
mov
or
js
idivb
jo
or
add
add
iret
inc
ret
jo
add
add
pop
add
add
jae
jae
and
scas
imul
add
aas
adc
cs
or
add
add
jl
sbb
add
repnz
call
mov
and
adc
aas
mov
cmp
gs
rcr
scas
popf
stc
or
cmovl
inc
or
div
aas
sbb
in
cmp
mov
icebp
adcl
fcmovnb
add
add
add
testl
jg
clc
adc
xchg
jbe
add
add
icebp
or
test
adc
nop
nop
nop
nop
nop
jns
nop
nop
nop
nop
nop
clc
push
add
or
add
add
add
add
out
repz
add
mov
push
int3
int3
int3
int3
int3
push
mov
fistpl
testl
add
add
add
add
add
insb
mov
mov
adc
cmpsl
ds
push
pop
sti
or
add
add
adc
push
mov
nop
nop
inc
ret
and
in
inc
sbb
add
add
repz
and
les
mov
in
or
add
add
loope
or
movsl
or
add
add
mov
cmpsl
mov
incb
fisubrl
push
add
sbb
pop
dec
or
add
sub
lea
add
sub
jmp
sub
adc
in
add
add
aam
out
add
jl
xchg
jecxz
or
add
add
cmp
and
and
hlt
mov
loopne
add
add
jg
daa
fbstp
cli
das
xchg
cmp
test
out
jmp
mov
adcb
in
shll
add
add
add
cmp
ja
fs
inc
cmpsb
or
add
add
pop
xor
cmp
stos
jbe
int
push
add
add
xor
mov
mov
and
push
add
fldl2t
mov
dec
adc
popf
inc
scas
pop
inc
sbb
add
add
lds
or
add
add
hlt
adc
push
add
add
lock
into
into
rcll
cltd
mov
icebp
cli
test
pusha
repz
movsb
bound
rcll
cwtl
push
sbb
fcmovnb
xchg
divb
add
add
add
inc
jge
pop
dec
xchg
mov
mov
gs
dec
push
dec
addr16
scas
add
add
add
add
add
add
add
jb
cs
insl
aaa
mov
scas
dec
lret
mov
add
add
out
jl
pusha
aaa
add
rol
pop
inc
aad
inc
and
add
mov
ficoml
movsl
negl
xchg
rolb
jns
dec
pusha
push
clc
sti
lahf
dec
sub
pop
adc
mov
lea
xchg
jmp
mov
mov
push
mov
push
out
xchg
cmp
cmp
insb
out
ret
scas
push
cmc
push
int
flds
fcmovbe
xor
adc
mov
xor
or
add
add
mull
add
add
add
jge
fwait
gs
shrb
or
add
add
push
xchg
test
addr16
test
xor
fs
stc
jge
js
ss
mov
pop
divl
adc
mov
ficoml
sarb
add
add
mov
lcall
cmp
stc
jnp
mov
jmp
mov
add
add
add
push
push
push
or
or
add
add
adc
and
add
ret
add
add
add
push
clc
mov
jb
xor
fildl
add
dec
adc
sbbb
add
or
add
add
mov
pop
sbb
mov
xchg
adc
aam
jecxz
bound
int
sti
aad
sahf
adc
jno
dec
cmpsb
rcr
cli
cmpsb
mov
add
add
mov
movl
adc
or
add
add
inc
mov
mov
inc
add
add
add
cmp
inc
inc
test
mov
inc
xor
cltd
xchg
adc
pop
mov
shrl
je
add
sub
add
add
push
sbb
test
popf
mov
je
repz
xchg
or
add
add
ss
xchg
imul
jecxz
add
add
add
add
add
data16
cmp
add
add
adc
clc
and
iret
cwtl
lret
add
add
add
test
stos
addl
aam
xchg
sub
add
xchg
and
jb
loop
bound
aas
insl
jbe
push
std
mov
pop
mov
ss
inc
xlat
mov
or
add
add
orl
pop
add
add
sbb
sbb
popf
mov
push
outsl
push
mov
ljmp
dec
mov
sbbb
or
inc
pop
push
out
adc
movl
stc
into
xchg
adc
das
xchg
add
add
add
negb
int
popf
arpl
add
add
add
mov
jge
push
pop
ljmp
fwait
pusha
aaa
adc
outsl
push
cmp
testb
add
add
out
jns
pop
jecxz
popf
int3
int3
int3
int3
int3
mov
ret
test
aas
cmp
adc
dec
inc
mov
mov
int
mov
add
inc
dec
call
xchg
fldcw
loop
mov
add
imul
nop
nop
nop
nop
jns
mov
jnp
jno
add
add
ljmp
cli
movsl
in
push
or
add
or
lods
push
pop
mov
mov
cld
mov
add
add
add
push
sbb
inc
dec
js
mov
inc
push
popf
mov
xor
push
mov
std
inc
dec
sub
mov
add
dec
int3
int3
int3
int3
int3
aam
stc
inc
js
dec
call
ja
pop
divb
cltd
inc
and
enter
add
add
pop
add
add
add
add
add
imul
mov
nop
nop
nop
nop
nop
mov
xchg
xor
fisttpll
add
add
out
fistpl
nop
nop
mov
subb
adc
loopne
and
imul
sbb
add
lea
add
add
dec
dec
es
stc
xor
jne
cmpsb
jge
sbb
aas
aam
pusha
mov
dec
xor
add
add
mov
push
sub
sbb
movsl
cmpsb
sub
inc
jl
enter
sbb
out
xchg
lods
or
add
add
add
sbb
push
add
add
and
xchg
or
add
add
lods
or
iret
lret
daa
cmp
stos
adc
sldt
insb
push
xchg
sbb
mov
add
pop
add
clc
mov
push
push
xchg
enter
add
or
add
add
mov
xor
mov
jge
add
jb
in
rcll
push
decb
jmp
add
cs
hlt
add
add
add
cltd
dec
push
xor
add
add
add
add
je
mov
push
pop
int
aaa
jmp
pop
movsb
pop
pop
and
mov
into
fstpl
mov
sbb
arpl
fcmove
adc
add
add
jno
push
add
add
cli
xchg
in
mov
nop
inc
fcmovnb
popf
pop
or
add
add
cwtl
sub
add
leave
adc
out
push
pop
xor
cli
xchg
xor
aas
push
fldcw
lret
mov
xchg
or
scas
adc
hlt
test
add
add
add
xor
and
into
xor
add
jl
and
enter
notb
jg
adc
out
imul
add
fnstsw
mov
add
mov
mov
jg
pop
add
add
int
pop
fsubrs
mov
fstpl
addr16
mov
int3
int3
int3
int3
int3
jne
bound
add
add
fs
aas
cmpsl
jnp
or
add
add
cmpsb
lret
push
sub
push
int
mov
movsl
adc
pop
cmpsl
das
or
add
add
hlt
push
and
sub
add
add
add
orb
and
sub
add
add
add
dec
xchg
adc
dec
leave
inc
add
add
add
arpl
fsubs
xchg
and
sbb
iret
xor
subb
cld
stos
mov
xor
arpl
push
and
xchg
mov
push
insb
cmc
xchg
adc
ret
or
add
nop
nop
nop
nop
push
movsl
sbb
sub
cmp
push
popa
mov
je
std
cmp
sbb
cmp
mov
movsb
pop
add
add
pop
fiadds
pop
out
ja
div
lcall
sub
iret
mov
outsl
inc
or
and
inc
outsb
sbb
xchg
les
xor
add
add
add
add
add
add
cmp
inc
push
icebp
xchg
xchg
test
mov
pop
icebp
xchg
dec
sbb
cld
lods
mov
and
wrmsr
int3
int3
int3
int3
int3
pop
cmpsb
and
notl
sbbl
dec
into
inc
xchg
les
add
add
sub
adc
jnp
push
mov
push
sbb
sti
je
and
add
add
add
xor
pop
mov
sub
inc
fistpll
and
xchg
add
add
inc
cmp
addr16
notb
cmpl
nop
nop
nop
nop
nop
add
add
add
out
add
xchg
imul
xor
mov
and
sub
sub
cmpsb
decb
xchg
mov
int3
int3
int3
int3
lods
add
add
add
nop
nop
nop
nop
nop
dec
jp
add
add
sbbb
shll
bswap
shrl
add
add
ret
mov
aaa
lock
test
push
hlt
out
cmp
lcall
add
add
mov
int
add
mov
ja
out
push
data16
mov
add
add
add
lods
mov
out
jge
mov
sahf
push
cmp
add
sub
add
add
push
cld
cmp
stos
xchg
mov
ror
in
add
add
fstpl
push
daa
in
loopne
repz
lahf
insl
jp
sbb
int
out
lods
test
lods
hlt
pop
push
mov
out
push
pmaxsw
adc
add
test
push
fdivs
cmp
add
add
cmp
sub
je
lods
mov
ret
andl
loope
push
test
jp
pusha
sahf
leave
lds
jmp
or
add
add
insb
pop
dec
dec
jmp
leave
pusha
and
add
and
add
add
cmp
and
sarl
cmp
mov
fs
fcompl
sub
dec
pop
shrb
jecxz
sbb
cmp
push
mov
cmp
popl
add
add
insb
movsl
cmc
insl
sbbl
mov
outsl
cmpsb
inc
mov
fnstcw
fbld
jmp
call
push
jge
ss
pop
adc
ljmp
sldt
jbe
mov
mov
add
add
mov
adc
xor
scas
orb
outsl
shrl
pop
ret
mov
mov
pop
movsl
das
imul
ja
pop
jp
aaa
push
sahf
mov
dec
adc
push
nop
nop
nop
nop
nop
add
add
add
pop
sbb
into
daa
jmp
out
insl
cmpsl
jmp
addb
popa
mov
sahf
test
lods
cmpsb
push
aam
or
add
add
cmc
and
add
add
cmp
xchg
out
adc
sbbl
push
icebp
movsb
pop
add
add
jo
mov
cmpsl
sarl
mov
cmp
hlt
pop
mov
lcall
adc
sbb
mulb
out
lea
stc
xor
jbe
pop
jnp
add
sub
outsb
pop
push
and
add
popa
sarb
xchg
sbb
add
sbb
add
adc
pop
in
fistpll
movsl
cmpsl
mov
or
fldl
aas
aas
or
add
add
dec
aas
mov
mov
iret
lahf
and
ret
es
mov
cmp
ret
sbb
int3
int3
int3
int3
xchg
sbb
sar
or
add
add
pop
add
add
mov
add
add
add
jnp
sub
mov
aad
add
add
dec
adc
in
add
fucom
mov
mov
adc
or
add
mov
dec
jb
mov
ljmp
test
inc
push
push
jns
int3
int3
int3
int3
enter
dec
add
add
add
inc
add
add
add
loopne
les
fmuls
add
add
mov
pop
pusha
nop
nop
nop
nop
nop
dec
push
pop
push
push
jecxz
pushf
xor
cltd
jmp
rclb
push
roll
jmp
adc
test
sbb
aaa
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jl
imul
js
push
pop
std
test
add
jecxz
les
xchg
and
cmp
dec
adc
das
test
xor
mov
in
inc
rorl
mov
xchg
adc
iret
fcmovnbe
push
push
inc
hlt
or
sub
ja
xchg
mov
mov
mov
jmp
jae
mov
sub
test
test
lods
jl
jecxz
outsb
jecxz
push
dec
faddl
push
mov
add
add
jmp
xor
pop
mov
dec
loop
dec
xchg
test
pop
push
push
xor
push
push
int3
int3
int3
int3
int3
clc
idiv
imul
and
scas
sahf
jp
jle
dec
aas
mov
enter
push
inc
fidivrs
mov
int3
int3
int3
int3
pop
lods
mov
dec
mov
add
xchg
fdivl
add
and
adc
sar
and
mov
inc
adc
inc
hlt
punpckldq
leave
xchg
cmpsl
xchg
aas
ret
sbb
lods
inc
xchg
data16
movsb
sub
in
add
movsl
xchg
inc
int3
int3
int3
int3
int3
and
add
add
add
xor
add
mov
inc
iret
cwtl
addr16
int
mov
add
add
sti
jbe
mov
jb
mov
mov
addl
les
or
add
add
pop
fcomps
lods
jmp
rclw
fisttpll
in
pusha
in
adc
add
add
rolb
rcl
inc
mov
fidivl
and
xchg
popa
push
popf
mov
dec
inc
nop
nop
nop
nop
nop
mov
add
add
add
and
int3
int3
int3
int3
out
mov
ljmp
add
cmp
add
dec
fimuls
jge
cmp
add
add
repz
jecxz
mov
inc
fwait
adc
loop
xor
not
bound
icebp
xor
mov
xor
inc
test
testb
or
nop
nop
nop
nop
cli
inc
and
fcoml
mov
sbb
jnp
shrl
out
xor
jecxz
fadds
add
testl
call
dec
ss
sbb
lahf
add
add
loopne
and
shlb
leave
inc
ljmp
jnp
mov
je
and
add
add
inc
lret
enter
notb
adc
or
add
add
mov
push
or
add
add
add
add
add
test
inc
fcompl
mov
movsl
stos
js
or
add
add
jb
mulb
mov
arpl
push
stos
int3
int3
int3
push
popf
pop
shlb
int
mov
jle
or
add
add
and
add
add
or
xor
add
mov
mov
pop
inc
push
sub
es
xlat
fwait
sbb
add
in
jmp
leave
dec
mov
aad
pop
sbb
fisttpl
add
cmc
mov
jno
and
add
cs
and
add
add
cmpl
add
add
or
xor
add
add
add
sub
mov
fisubrs
insl
pop
jo
or
outsb
and
out
adc
mov
or
add
add
ljmp
popf
stc
add
add
add
pop
leave
sbbb
xor
push
nop
nop
nop
nop
nop
pop
mov
fmuls
ljmp
and
push
add
mov
mov
loope
fwait
xchg
fcomp
sub
dec
out
mov
daa
cld
mov
js
pand
add
push
add
mov
add
add
add
add
fisttps
push
dec
testb
stos
sub
add
sub
sub
xchg
clc
lahf
jno
add
push
not
test
andb
outsl
jl
cmpl
adc
add
add
add
and
rorl
ret
xchg
imul
inc
sahf
cmpb
ja
add
fcmovu
xlat
aad
lcall
popf
cmp
mov
mov
add
ds
sbb
add
add
add
mov
sub
stc
mov
mov
xor
out
ds
inc
fwait
cmp
lods
mov
sbb
fsubs
adcb
xchg
adc
push
add
add
add
enter
cs
mov
or
icebp
or
sub
iret
daa
arpl
cmp
adc
mov
or
add
add
scas
test
add
add
repz
fistpl
nop
nop
pop
xchg
sbb
fsubrp
rolb
add
addl
adc
ret
testb
mov
out
cwtl
jae
add
add
add
rcrl
dec
cmp
add
test
push
loopne
call
je
test
cmp
pop
mov
fistps
xchg
shll
sbb
xchg
push
lods
lcall
add
jmp
outsb
pusha
sti
jno
in
enter
movsl
pop
inc
repnz
pop
add
add
cmp
js
inc
and
inc
adc
push
mov
mov
xchg
test
mov
rcl
adc
and
cs
and
data16
loope
adc
repnz
adc
pop
cmpsl
pop
dec
dec
jns
daa
iret
xchg
dec
mov
adc
call
adc
pop
and
add
adc
jle
add
out
mov
in
sub
pop
pop
and
movsb
sbb
rcrl
out
cmpsb
outsb
cmp
cmp
pop
dec
jb
fildll
test
popf
test
sbb
je
xchg
jno
test
push
fchs
mull
add
enter
add
add
add
push
push
sldt
cld
mov
mov
mov
mov
push
dec
dec
fistpl
imul
mov
iret
and
sahf
rcr
xor
add
sub
enter
in
cmp
jnp
lret
pop
mov
adc
pop
cld
jle
add
add
jae
addr16
sarl
in
clc
call
mov
and
mov
jge
sahf
mov
jmp
nop
nop
nop
nop
nop
cmp
mov
out
and
neg
loop
and
dec
jae
sbb
jl
int
push
jge
push
in
mov
sub
add
stos
data16
add
andb
xchg
dec
push
xchg
fs
int3
int3
int3
int3
cmpb
mov
add
add
add
and
add
add
xor
or
add
add
mov
rol
add
xor
add
add
add
mov
mov
pusha
adc
inc
aas
mov
and
cltd
fidivs
xchg
xchg
jae
and
jo
mov
stos
into
jl
cli
sbb
adc
mov
add
mov
addl
add
add
add
add
add
inc
pop
push
add
add
mov
clc
sub
mov
inc
push
sbb
mov
add
sub
add
notb
add
mov
adc
cmpsl
and
subb
push
cmc
call
pop
adc
lea
jle
and
jno
add
sbbb
test
jmp
sbb
shlb
mov
aas
arpl
xor
sub
sub
pop
jno
push
jb
cmp
js
xchg
stc
add
add
and
mov
nop
nop
nop
nop
nop
ret
xchg
loopne
add
add
add
mov
add
add
test
jns
dec
pop
adc
gs
and
das
push
sbb
call
cmp
es
sub
jmp
test
mov
cmp
pop
sbb
cmpsl
loope
jbe
push
or
add
add
cmp
jb
loopne
push
push
outsb
imul
xchg
inc
cmp
adc
pop
or
add
add
dec
enter
fcoml
jno
int
push
add
add
enter
adc
add
loop
add
add
sti
nop
nop
nop
nop
nop
shrb
es
rolb
iret
mov
lahf
jecxz
outsb
jp
mov
or
sbb
add
add
add
icebp
sbb
mov
imul
add
add
call
gs
or
add
add
sub
xor
arpl
push
ss
mov
xor
inc
jl
and
add
add
add
add
add
add
adc
sbb
out
inc
hlt
scas
mov
xor
xor
mov
push
add
cmpsb
call
icebp
js
jae
mov
dec
int3
int3
int3
int3
int3
xchg
scas
pop
sbb
inc
cmc
frstor
jmp
and
and
xor
push
add
test
dec
or
add
add
fsts
inc
orl
add
xchg
sahf
add
add
add
test
insb
dec
pop
push
add
add
add
loopne
sbbl
xor
gs
call
pop
jne
sbb
mov
lret
add
add
xchg
pop
hlt
shr
scas
cli
scas
xchg
mov
pop
mov
fnstcw
sbb
in
out
dec
jge
push
ljmp
outsl
cmp
add
addl
add
add
jl
int3
int3
int3
int3
int3
movsb
dec
xchg
loope
mov
mov
je
daa
xor
adc
inc
sub
popa
stos
dec
inc
mov
mov
jmp
popa
push
pop
dec
mov
add
push
mov
pop
je
std
push
adc
sbbb
mov
and
add
int3
int3
int3
int3
int3
add
add
add
movsl
lea
add
add
popa
jne
rcrl
cwtl
aam
popa
adc
movsl
xchg
dec
cs
add
add
clc
add
gs
adc
mov
jbe
insb
jp
out
cmpsb
push
sub
int3
int3
int3
int3
int3
in
fisttpll
and
add
add
add
cmp
cmp
mov
aaa
xlat
aad
repz
ret
andb
sbb
pushf
mov
jnp
jnp
xor
adc
xchg
in
test
jnp,pn
fistpl
stos
jbe
mov
add
cmp
xchg
adc
cmpsl
xor
movsl
notl
mov
push
int3
int3
int3
int3
int3
mov
add
jmp
xchg
jmp
repnz
rclb
sbb
and
int3
int3
int3
pusha
out
add
add
mov
add
add
cld
inc
add
add
dec
mov
mov
cwtl
imull
or
push
shrl
shll
mov
movl
pusha
jo
inc
call
adc
mov
sbb
inc
add
push
adc
das
inc
dec
adc
and
xor
mov
pop
add
add
cwtl
cmp
mov
cmp
ret
and
push
push
sub
movsl
notl
out
sub
jg
add
sbb
adc
mov
int
pop
xor
mov
fcomp
sti
xor
outsb
push
cli
repnz
aas
pop
add
daa
lahf
xchg
nop
nop
nop
nop
nop
mov
insl
inc
xor
mov
das
jne
fsubrl
cmpsb
adc
cmp
gs
scas
ret
lods
jp
adc
in
push
add
mov
lods
inc
sub
adc
add
add
mov
iret
cld
inc
mov
inc
xor
ffreep
fnstcw
gs
fdivrs
xor
inc
push
push
dec
push
jns
das
sub
aas
jnp
jp
cmp
mov
ds
pop
mov
daa
push
popa
out
out
int3
int3
int3
int3
int3
inc
cmp
cmpsl
cmp
out
ret
call
out
dec
sbb
jecxz
cmp
add
add
xor
mov
test
int3
int3
int3
int3
int3
xchg
lret
stos
fidivrs
add
gs
clc
fucomi
add
add
add
push
icebp
negb
add
fidivrs
loope
or
add
jns
inc
xchg
adc
scas
fstpl
mov
add
add
add
add
push
adc
mov
dec
adc
imul
sub
add
jmp
lock
xchg
add
add
add
fmulp
push
js
xor
mov
add
add
stos
outsb
sub
fnstenv
push
test
scas
lock
aas
imul
push
aas
fldenv
ljmp
fidivl
add
push
add
add
daa
movsl
repz
push
hlt
cmp
add
add
and
mov
ljmp
hlt
xchg
fs
stos
ret
cmp
add
sbb
add
and
jbe
ds
push
xchg
sub
gs
push
add
add
lahf
adcl
and
jbe
aad
loopne
fwait
mov
jae
sub
add
add
mov
adc
mov
dec
dec
movsb
xchg
sub
notl
push
in
and
fdivrl
loopne
mov
iret
enter
jmp
out
pop
adc
add
jb
cmp
add
fldl
add
add
stc
cli
cltd
lods
pop
sti
jmp
ret
in
sahf
jne
hlt
ja
lock
inc
std
sub
inc
cmp
lcall
adc
int
or
cmp
xchg
mov
cltd
in
cmp
jns
in
cmp
add
das
pop
sub
punpckhdq
sub
add
add
pop
fs
jns
lds
add
add
adc
add
add
shrl
bound
imul
lods
js
mov
and
cli
or
add
add
push
mov
add
or
add
add
push
fcmove
adc
stc
dec
pusha
lock
push
add
add
sbb
jne
insl
ljmp
movsl
lods
out
cmp
pop
adc
insl
je
sti
inc
adcb
add
add
inc
mov
add
add
aas
mov
les
add
add
push
lret
es
add
fisttpl
dec
sub
add
dec
pop
pop
xchg
ljmp
in
shrb
rcr
ss
push
fwait
enter
lods
jmp
and
add
add
add
dec
testl
add
dec
lret
add
in
movb
add
add
xor
scas
mov
arpl
mov
adc
ja
cmp
cmp
adc
dec
sbb
nop
nop
insl
sub
insl
xchg
xchg
stos
test
cltd
pop
or
add
add
add
add
pop
mov
add
add
sbb
add
mov
lods
std
faddl
icebp
stos
pop
inc
mov
sbb
int3
int3
int3
int3
out
or
add
add
mov
and
insb
sub
clc
mov
cmp
cmp
xchg
fcmovnb
xchg
lret
sbb
add
lahf
outsl
pusha
sbb
add
add
mov
push
nop
nop
nop
nop
nop
xor
unpckhps
jl
mov
and
jl
pop
push
testb
add
adc
and
in
cmp
push
adc
add
add
inc
jns
lea
mov
mov
das
mov
add
add
add
xchg
mov
daa
imul
sub
jb
pop
add
add
inc
sub
xor
sbb
adc
les
jb
jno
inc
cld
mov
add
add
add
je
test
mov
jbe
es
xor
or
add
add
jns
add
add
pop
dec
cs
push
fstpl
test
sti
loope
mov
xchg
mov
aam
stos
adc
mov
pop
mov
inc
mov
arpl
das
out
adc
push
add
popf
imul
add
lret
subb
nop
nop
push
xor
and
add
add
push
push
mov
lea
or
add
add
dec
push
iret
stos
push
dec
shrl
popf
es
and
pop
inc
notl
inc
xchg
cmpsb
mov
xchg
in
inc
in
mul
and
loop
mov
test
mov
mov
sub
lods
xor
add
add
adc
add
ficompl
addr16
std
pop
add
add
mov
jnp
cmp
pop
test
in
fadds
xor
xor
lods
inc
add
cmp
add
add
sarl
cmpsb
cmp
gs
xchg
xor
ret
add
cmp
pop
add
add
push
adc
in
rclb
mov
cmc
sub
push
add
fidivs
lcall
mov
aam
into
outsb
cmpsl
xchg
sbb
and
fildl
add
add
add
add
add
pop
out
pushf
std
add
add
add
movb
add
add
cmpb
lock
sub
or
add
add
outsl
ja,pn
in
dec
les
ss
clc
pusha
gs
cltd
push
ret
sbb
xor
scas
jbe
xor
xor
or
add
add
popf
movsb
inc
mov
loope
out
icebp
filds
std
hlt
xchg
mov
addb
imul
lock
xchg
add
mov
mov
dec
jge
mov
rorb
add
add
ss
add
add
add
add
add
mov
aaa
cmp
jg
lcall
rolb
dec
dec
mov
lods
push
pop
insb
cli
add
sub
jb
mov
mov
pop
adc
add
add
mov
sub
mov
jg
sub
add
adc
mov
je
and
adc
add
sbb
lods
add
add
add
cmp
adc
inc
frstor
or
add
add
push
ficompl
pop
aad
adcl
add
mov
mov
mov
add
add
aam
add
add
outsl
mov
shlb
cld
aas
lret
shll
scas
add
add
add
call
rep
mov
sub
push
cmp
sub
in
testl
test
add
add
pushf
push
and
add
add
shl
das
xor
fisubrs
aad
dec
out
inc
in
push
xor
and
hlt
mov
add
add
in
inc
aam
xchg
dec
out
sbb
adcl
add
add
add
filds
add
add
or
add
add
cmp
mov
xchg
clc
dec
sbbl
adc
xor
jns
js
int3
int3
int3
int3
int3
mov
push
and
sbbl
sub
add
lods
jns
iret
jno
ret
push
daa
leave
enter
add
xlat
insl
aam
mov
sub
bound
das
sub
pushf
loop
cmp
push
push
xchg
aaa
loope
arpl
add
dec
mov
jl
or
add
and
cli
fsubl
testl
sbb
loop
push
stos
push
push
in
add
mov
add
add
xor
frstor
add
pop
sub
cld
frstor
add
lret
cld
pop
cwtl
test
push
inc
and
mov
jp
add
add
lea
add
call
in
stos
cltd
mov
outsb
inc
xchg
jmp
aam
push
or
add
add
add
xor
add
add
dec
arpl
das
scas
jbe
push
mov
add
mov
sbb
add
cwtl
push
mov
iret
pop
test
pop
mov
clc
jnp
push
sbb
add
pop
call
ljmp
je
xor
add
add
xchg
pusha
lods
jp
adc
dec
repz
fdivrl
jg
mov
xchg
cmpsb
cmp
mov
test
cmp
mov
out
and
push
data16
add
add
mov
xchg
pop
xchg
in
iret
stos
cmp
mov
add
add
sub
add
cli
push
loopne
xchg
push
test
adc
add
add
add
add
in
test
fdivl
add
add
inc
add
add
add
and
sbb
pusha
fcoms
jno
mov
daa
insb
inc
sti
lds
fistps
xchg
dec
sti
sti
test
or
add
add
add
add
into
jmp
int3
int3
int3
int3
int3
push
dec
insl
leave
orb
or
add
add
pop
loop
bound
add
add
pop
pop
fiaddl
add
add
es
cmp
add
xlat
push
add
add
jmp
xchg
add
add
add
nop
nop
nop
nop
xor
popf
mov
lods
add
add
add
imul
int3
dec
add
add
add
sub
in
ret
sbb
in
fwait
test
cmp
add
add
lret
loope
dec
xchg
ret
sub
stc
rorb
mov
into
sbb
sub
pop
add
add
xchg
add
add
add
popa
push
test
sbb
movsb
arpl
xchg
jmp
pop
adcl
add
es
aaa
or
int3
int3
int3
and
add
add
pop
ret
mov
jns
mov
call
dec
push
dec
repnz
les
dec
jle
pop
push
inc
push
dec
mov
and
jg
push
dec
sbb
mov
call
test
mov
mov
push
add
lods
mov
into
cmp
addl
or
add
add
sbb
hlt
aas
addb
add
add
xorl
cltd
cmp
or
add
xor
movsl
scas
xor
dec
cmp
jg
pop
fs
mov
scas
rcl
lods
push
sbb
out
inc
out
mov
insb
mov
je
adc
mov
mov
cs
sbb
add
add
add
add
add
inc
test
hlt
xchg
shrl
xor
mov
pop
mov
pop
in
pusha
xor
jb
add
add
divb
add
add
cmpsb
add
add
add
rol
dec
mov
add
push
mov
sahf
arpl
sahf
sub
por
rcrl
add
ret
xor
mov
xchg
inc
pop
daa
or
inc
dec
dec
xchg
es
xchg
cltd
jp
insb
and
add
add
popa
or
add
add
scas
sub
cmp
xor
int3
int3
int3
int3
sub
jecxz
add
cmp
test
add
or
push
inc
cmp
pusha
add
scas
mov
out
push
dec
je
rcrb
add
add
je
cmpsb
dec
subb
push
sub
cwtl
sub
jl
sbb
andb
ret
mov
subb
add
add
add
add
add
les
sbb
push
xchg
mov
adc
es
in
sbb
icebp
push
popf
sbb
or
cmp
add
jae
xor
ja
call
fistpl
ja
cld
pop
aam
jp
loop
xor
cmc
add
out
jo
roll
add
add
jno
xchg
cwtl
and
adc
push
sbbl
xchg
out
cmpsb
imul
add
add
sahf
jmp
movsb
cli
and
mov
pop
dec
popf
xor
add
imul
add
add
and
xchg
and
nop
nop
inc
cmpsl
aad
adc
adc
scas
outsl
mov
test
test
adc
loope
fisubs
out
pusha
jl
ds
ficoms
and
test
mov
cvttps2pi
outsl
and
adc
push
add
mov
pop
add
add
add
add
add
ret
xchg
stc
inc
xor
leave
mov
iret
fwait
js
mov
sbb
ud0
testb
add
add
add
or
mov
add
xchg
jp
mov
iret
clc
dec
jne
cltd
lret
adc
push
dec
adc
jle
or
add
mov
loopne
lea
push
lds
jmp
mov
dec
lock
pop
push
shlb
ljmp
add
add
add
add
add
adc
xchg
loopne
movsb
sbb
add
cmp
int3
int3
int3
int3
sahf
push
sub
bound
dec
add
add
add
push
cs
mov
das
cmp
popa
adc
xorb
movsl
mov
and
aam
jle
add
and
push
movsb
test
lods
jl
pop
mov
add
add
call
adc
add
add
xchg
sbb
mov
mov
add
mov
pop
out
add
add
test
fstpt
push
mov
push
out
sarl
pop
jnp
adc
and
or
add
add
add
add
js
xchg
dec
add
mov
xor
mov
aaa
mov
jo
out
sbb
mov
jne
and
pop
push
push
or
add
add
jge
add
add
scas
jns
mov
and
test
pop
mov
xor
add
add
xlat
jne
int3
int3
int3
int3
int3
sbb
and
add
add
jle
dec
ja
mov
jecxz
inc
sub
add
add
add
xlat
or
add
add
insl
mov
mov
add
xlat
and
popa
jg
cmp
cmp
adcl
ss
mov
pop
arpl
lret
cli
mov
scas
lcall
add
add
add
dec
js
std
xor
or
jp
ja
stos
mov
adc
xchg
mov
loopne
xchg
icebp
or
add
add
jmp
inc
mov
out
dec
ljmp
nop
nop
ds
mov
add
roll
add
add
add
jecxz
scas
mov
push
or
pop
repnz
sti
lock
addr16
fildl
and
push
add
push
lods
repz
es
enter
add
ja
push
sub
add
inc
xchg
pop
insb
dec
int3
int3
int3
int3
int3
in
repz
xor
pop
lods
sarl
xlat
push
jle
ljmp
cmp
add
add
loop
add
add
out
outsl
dec
xchg
nop
nop
nop
nop
nop
push
cli
lcall
fdivrp
mov
call
fisubrl
jns
or
add
add
or
adc
push
cltd
sbb
movsl
adc
pop
add
add
andl
fistl
outsb
or
add
add
or
add
add
cli
je
test
mov
mov
add
add
add
add
imulb
adc
scas
mov
leave
jp
daa
jl
jb
xor
in
pop
and
daa
mov
inc
insl
cmp
mov
leave
leave
aad
lods
xor
add
add
aam
imul
push
ret
in
out
shl
shr
pusha
add
add
shl
cmp
add
add
push
jecxz
ss
mov
and
ficoms
repnz
pop
or
add
add
mov
icebp
shll
mov
mov
sti
adc
fists
lods
pusha
rcrb
add
iret
fwait
cmpsl
pop
adc
xor
jmp
jo
add
add
comiss
push
pop
xor
in
add
add
cmp
add
rorb
push
in
jnp
movsb
fdivs
cmp
ljmp
jo
push
push
jns
and
xchg
mov
push
add
add
fsts
xchg
sub
pop
fdivl
popf
adc
mov
call
mov
inc
lea
xchg
xor
add
cmp
sub
movsb
movsl
and
sarb
dec
xor
mov
push
adc
add
jecxz
push
xor
in
inc
push
add
add
xchg
add
add
add
add
imul
enter
arpl
pop
inc
add
add
add
mov
out
add
add
scas
gs
add
add
add
out
ret
push
loop
mov
jle
xchg
in
mov
clc
jg
xor
mov
or
add
add
push
adc
ljmp
add
add
jbe
push
lcall
add
shrl
push
dec
xorb
mov
imul
mov
popf
pop
pop
ret
mov
cltd
xlat
sti
and
or
add
add
pop
mov
cmpsl
pop
jmp
in
or
add
add
add
enter
dec
mov
aam
scas
ljmp
xor
pop
inc
add
add
add
in
imul
jge
add
xor
xor
imul
jp
xor
mov
jmp
in
or
mov
push
cmp
dec
pop
cltd
push
fildl
add
add
lfs
stc
pop
into
xor
je
add
add
test
idivl
daa
cmp
dec
je
mov
rcrb
adc
add
add
scas
movsb
and
or
add
add
add
add
orb
push
and
icebp
cli
lds
adc
mov
test
dec
in
rcrb
fidivs
pop
sub
add
pop
push
mov
push
mov
inc
sbb
mov
add
add
mov
je
cmpsl
das
cmp
sub
add
ret
shll
je
insl
jo
sbb
clc
pop
push
aad
add
pop
add
add
add
add
add
lret
insb
fwait
xor
lods
mov
push
add
add
xchg
pop
or
add
add
sbb
leave
test
jo
fisttps
std
push
and
push
add
add
adc
sahf
test
cwtl
repnz
fistpl
scas
xchg
loope
out
sar
out
add
xor
add
dec
out
loopne
jmp
stos
es
repnz
add
add
fcoml
jbe
mov
orl
out
dec
push
mov
push
out
ja
insl
and
addr16
or
add
add
aaa
mov
cmp
out
fnstcw
mov
mov
out
fdivrs
mov
add
test
and
xchg
push
clc
lret
nop
nop
nop
nop
ret
lds
clc
mov
adc
jmp
dec
mov
xor
mov
add
add
sub
jae
push
cltd
mov
mov
insb
std
repnz
pop
pop
sbb
mov
nop
nop
pop
pop
xor
add
dec
pusha
outsl
add
add
add
add
add
lods
or
rorl
add
add
cmpsb
adc
mov
mov
xor
dec
mov
xorl
add
add
add
pop
push
js
lahf
mov
mov
ljmp
bound
iret
fidivl
add
imul
out
fcompl
idivb
dec
fsubl
mov
das
enterw
out
rorl
add
add
loope
sub
add
repnz
lret
xchg
sbb
cmp
inc
dec
sub
fmuls
add
data16
and
sti
cmp
int3
int3
xchg
cmp
dec
xor
cmp
int3
int3
int3
int3
mov
in
xor
dec
insl
adc
mov
add
jg
jp
lret
add
add
dec
aam
dec
lcall
push
mov
call
cli
pop
add
add
jle
xor
sub
cmp
sub
jmp
loop
imul
lcall
int3
xor
sbb
xor
inc
dec
aad
ret
loopne
js
xchg
pop
mov
loop
xchg
aad
xchg
push
add
push
or
popa
adc
faddl
xchg
les
or
add
add
aam
xchg
add
add
jb
rcrb
lea
rcll
mov
mov
add
add
add
jno
fcomps
out
mov
xchg
add
add
sbb
clc
dec
dec
insl
call
adc
jmp
adc
test
add
add
add
add
popf
ficompl
mov
jno
inc
ret
pop
cmp
divl
stos
adc
add
aam
mov
ficompl
cmpb
xlat
and
sbb
or
add
add
or
add
add
sahf
dec
mov
pop
mov
lds
into
jmp
add
add
das
aaa
xchg
lret
fists
add
mov
add
add
pop
add
add
call
fldenv
fs
je
call
lock
xor
mov
cmpsb
mov
pop
mov
insb
and
add
xor
add
add
add
add
in
insb
daa
xchg
sbb
jle
arpl
push
pop
add
add
push
jmp
push
mov
sub
add
add
jle
add
add
shll
add
cld
sub
pop
js
adcb
mov
adc
mov
and
and
rolb
add
add
or
add
add
scas
push
int3
int3
int3
int3
int3
jb
jns
mov
jmp
idivb
cmpsb
bound
dec
rorl
add
add
stc
mov
sub
cmp
push
popa
xchg
out
dec
arpl
in
ljmp
add
sub
cwtl
xor
inc
fimull
loope
mov
das
mov
mov
lcall
add
add
add
dec
xchg
cs
lahf
sub
add
add
pop
add
add
add
leave
dec
inc
and
cld
bound
icebp
popfw
mov
aas
loop
sbbl
roll
movsl
jae
imul
addr16
mov
icebp
or
add
add
lods
push
add
add
add
int
add
add
mov
nop
nop
nop
nop
nop
shrl
sbb
ret
cmp
xlat
adc
dec
dec
adc
cmc
lret
push
ror
fnstenv
std
and
sahf
jo
xor
das
dec
aad
push
loopne
mov
rorb
int3
aaa
inc
mov
add
add
cmp
imul
add
lcall
inc
clc
fisttps
sub
add
iret
pop
mov
cmp
lret
jle
testb
add
add
aaa
clc
hlt
sub
jne
cmp
das
inc
mov
or
add
add
add
jmp
pop
lods
jle
add
add
add
add
add
iret
cmp
jb
dec
or
mov
enter
add
pusha
xchg
ret
cmp
and
xor
and
clc
jae
fwait
or
add
add
repnz
jl
lcall
imul
dec
add
mov
xchg
sbb
add
add
add
das
push
add
add
lods
lret
add
add
add
mov
mov
ds
add
leave
ficompl
pop
xchg
iret
shll
and
lahf
loopne
mov
add
add
add
cmc
xchg
neg
lahf
xchg
addb
inc
jmp
and
stos
je
adc
stos
not
shl
adc
sbb
xchg
jl
cli
dec
int3
int3
int3
int3
int3
dec
mov
push
sub
add
jl
sub
jns
mov
hlt
add
add
add
dec
xchg
sbbl
add
add
fnstenv
add
add
add
add
add
xchg
nop
nop
nop
inc
pop
sub
add
add
fwait
cmc
dec
cmp
or
je
pushf
jp
dec
jmp
inc
mov
bound
add
add
in
imul
shlb
or
pop
add
add
mov
out
mov
add
add
sti
fyl2xp1
cmp
nop
nop
nop
nop
mov
adc
add
add
add
add
cwtl
or
add
add
push
ret
scas
adc
lret
mov
shll
mov
jbe
sbb
push
aam
sub
xchg
add
daa
pop
sbb
stos
dec
and
repnz
sti
dec
mov
fildll
add
add
dec
xor
add
adc
in
cmp
testb
sub
test
push
js
in
aaa
mov
cmp
loop
push
fildll
sub
xor
nop
nop
nop
sub
ficomps
cmpb
daa
or
add
add
jecxz
xor
add
in
fdivl
add
add
add
add
add
sbb
add
add
icebp
dec
repnz
testl
fisubs
dec
lods
mov
mulb
add
add
sbb
mov
add
and
jo
mov
add
add
shll
movsb
aam
add
add
jne
in
push
xchg
sub
mov
gs
stos
insl
xchg
std
mov
add
add
add
or
or
add
add
fs
fisttpl
inc
or
add
add
mov
sub
andb
add
add
cmc
roll
scas
adcb
add
add
mov
call
mov
add
xor
pop
push
cld
xchg
mov
icebp
inc
push
insb
cmp
xor
cli
cmpl
enter
repnz
add
sbb
mov
jb
dec
mov
int3
int3
int3
int3
int3
jb
fsts
inc
adc
or
add
add
push
mov
movsl
sbb
push
pushf
rorb
add
add
outsl
movsl
mov
add
add
rcl
ja
sti
ds
or
add
add
sbb
sldt
mov
add
sub
mov
add
add
mov
xchg
enter
repnz
and
adc
addr16
arpl
add
mov
out
clc
ss
push
inc
in
insb
sti
das
adc
inc
shl
int
jno
lret
iret
clc
icebp
mov
cmp
xor
gs
lret
or
cwtl
pop
lret
sub
mov
mov
add
and
in
xchg
lods
xchg
aam
addl
stos
aas
add
add
add
sbb
imul
mov
dec
xor
mov
add
mov
lods
push
xchg
jno
mov
stos
pop
movsl
xchg
dec
inc
mov
incb
pop
push
mov
pop
repz
lds
mov
and
add
sub
adc
sbb
add
add
or
out
test
aas
mov
mov
scas
lea
cmp
pop
push
jae
sbb
test
int3
int3
int3
int3
es
cmp
and
mov
jb
mov
add
add
rol
push
pop
je
mov
out
add
add
add
shlb
testb
add
lods
nop
nop
nop
nop
nop
xor
arpl
and
add
add
mov
ret
and
xor
test
aam
test
xor
stos
sbb
add
jae
xchg
scas
jno
push
dec
jnp
test
xchg
push
dec
fisubs
mov
add
add
arpl
add
add
add
fs
xchg
lretw
fsub
stc
shlb
nop
nop
add
add
add
nop
nop
nop
nop
nop
das
aas
push
and
push
pop
clc
psubusb
hlt
push
cmpsl
sub
aad
stos
jmp
dec
push
imul
add
add
add
add
aad
mov
sub
out
es
fisubrl
add
add
xor
daa
call
arpl
insb
add
ss
fldl
push
xor
outsb
lea
jp
loop
ss
popf
mov
jns
push
mov
fwait
pop
mov
repz
loop
in
popf
lods
inc
movsl
outsb
jb
cli
test
add
add
add
dec
push
dec
cmc
pop
xor
mov
adc
add
add
add
add
out
sbb
pop
jecxz
icebp
adc
add
leave
mov
ja
mov
inc
sub
dec
push
fstp
cmp
mov
jb
lds
dec
movsb
or
add
add
cmp
std
add
add
xchg
jb
aaa
pop
outsl
aaa
pavgb
je
cmpsb
not
mov
pop
cmpsl
and
fdivp
mov
adc
cltd
idivb
ret
xor
cmc
lods
popf
insb
jp
addr16
js
and
pop
cmp
insb
push
sbbl
dec
je
mov
mov
mov
mov
xorl
cmp
add
popf
fnstcw
jg
push
lahf
pop
push
std
shl
dec
cmpsb
lds
hlt
test
mov
inc
inc
test
xchg
out
enter
or
dec
sub
add
dec
cmp
add
jmp
or
add
add
and
lock
push
add
add
sahf
fsubp
dec
push
ds
cmpsl
or
add
add
fldcw
stc
sti
decb
fdivrs
ret
test
xor
mov
add
in
aam
mov
cmp
mov
jp
or
add
add
cmp
add
add
addb
add
insb
std
cs
push
aaa
jnp
or
add
add
pop
ja
daa
fdivs
mov
cmc
push
insl
out
dec
cmp
mov
xor
xor
push
or
add
pop
xlat
cld
jp
jns
nop
nop
nop
nop
fdivrs
ja
or
add
add
cs
call
sub
nop
nop
nop
nop
push
sbb
add
add
add
adc
lret
loope
adc
idivb
aas
sahf
jle
cli
int3
int3
int3
int3
int3
add
xchg
sbb
add
pop
xchg
add
add
add
push
mov
movsb
jmp
out
jp
inc
leave
sbb
add
add
cmp
imul
loop
jle
je
in
and
test
add
add
dec
shrl
mov
inc
inc
dec
dec
leave
in
inc
loop
push
push
inc
leave
push
and
add
add
add
roll
add
add
xchg
nop
nop
nop
nop
nop
cli
rolb
add
add
out
bswap
hlt
mov
stos
xor
and
xlat
mull
pop
mov
mov
mov
push
int3
int3
int3
int3
int3
jb
cmp
shr
cld
lret
cmc
pop
in
fidivrs
push
pop
into
insl
xchg
sbb
add
dec
rolb
add
add
push
xor
stos
sub
adc
stc
repnz
sub
fsub
sahf
mov
inc
and
call
movsb
mov
sbb
add
xchg
push
add
add
and
rcrl
or
add
add
add
push
xchg
es
int3
int3
int3
int3
sbb
xor
sbb
add
add
lea
dec
rcrb
and
add
pop
and
jecxz
mov
pop
mov
cmpl
mov
pop
ss
mov
cmpsb
insl
dec
inc
xor
scas
aaa
fistpll
movsb
pop
dec
add
add
add
into
dec
mov
shll
or
add
add
nop
nop
nop
nop
nop
or
ds
sub
sbb
dec
dec
jecxz
adc
mov
push
add
add
out
lea
mov
push
or
or
add
js
aas
aaa
enter
and
pop
cs
faddl
pusha
jmp
ja
add
add
sbb
js
test
add
mov
aas
xor
call
jmp
jae
cltd
lea
movsl
sub
cmpb
lds
test
sahf
jmp
inc
mov
mov
inc
inc
pop
cltd
push
or
add
add
dec
rcrl
add
dec
push
or
add
fsubl
push
ds
popa
dec
inc
mov
aad
fisttpl
ret
add
pop
and
mov
jecxz
pop
test
cmp
add
add
enter
xchg
cmp
fadds
add
popa
pop
xor
fists
mov
sub
ficoms
sub
lods
out
lods
mov
add
add
or
add
add
mov
pop
les
add
add
add
mov
jmp
into
pop
add
push
sub
imul
or
add
add
inc
inc
dec
sub
stos
mov
fmuls
clc
pop
and
fwait
xchg
outsb
fists
or
add
out
in
sbb
add
add
inc
mov
add
inc
pop
loop
pushf
imul
dec
daa
sub
in
leave
dec
mov
dec
addl
push
inc
push
fstps
xchg
lret
mov
mov
fwait
inc
aaa
pop
int3
int3
int3
int3
int3
push
popf
adc
out
sub
add
add
icebp
mov
imul
cmpsl
pop
add
add
jnp
adc
repnz
outsb
cmp
xor
pop
ret
pop
das
push
cmp
mov
mov
roll
add
add
mov
add
add
jmp
jae
push
push
lds
xchg
add
add
add
imul
fistl
sub
xchg
xor
or
add
add
jno
out
addr16
and
popl
add
add
idivb
lods
scas
js
ftst
test
inc
ds
dec
lahf
js
pop
add
add
int3
int3
int3
int3
int3
or
add
add
pop
and
das
adcl
mov
add
fcmove
cmp
and
push
jge
xor
jl
mov
or
add
add
shlb
enter
movsl
mov
test
add
loopne
aam
shrb
push
mov
or
add
add
mov
imul
push
in
xor
rorl
add
add
xchg
roll
add
add
daa
std
stc
pop
test
rcrl
mov
cmc
out
cmpsb
cmp
loopne
sbb
imul
push
fiaddl
add
add
xchg
pop
dec
jg
mov
int3
int3
int3
int3
int3
in
aas
jmp
add
jle
sbb
cmp
or
add
add
bound
ja
into
fsub
jp
pushf
mov
gs
jg
inc
movsl
das
roll
push
lock
jp,pt
inc
adc
es
sahf
movsl
xchg
cmp
push
push
xchg
pop
movsl
xor
cwtl
mov
cwtl
daa
adc
dec
or
add
add
add
add
fldz
jge
push
jnp
add
mov
outsb
xchg
sti
mov
pop
shrl
mov
scas
jmp
add
add
add
lock
mov
jle
mov
aas
cli
xor
addb
add
add
jmp
push
add
add
mov
or
add
add
mov
xor
push
add
add
xor
push
push
insl
aad
cmp
shlb
rcrb
push
sub
cmpsb
inc
lret
cmpsb
jge
cmp
gs
rolb
add
push
les
mov
out
or
insb
mov
ret
sub
fidivrs
inc
in
call
cmpsl
dec
dec
aad
cmpsb
inc
push
push
jno
xor
or
add
add
add
add
xlat
xor
and
add
add
add
pop
gs
pop
in
mov
add
add
insl
pop
add
add
outsl
push
add
add
add
ja
shrl
out
push
rcll
add
fcmovb
jnp
ret
cmc
mov
mov
sub
push
int
add
add
pushf
jg
mov
in
movsl
pop
add
add
pop
jmp
icebp
enter
fisttpl
add
add
daa
test
xadd
push
add
xchg
scas
lock
add
add
add
js
mov
je
fcomi
ja
imul
sub
add
add
and
push
xor
jne,pn
cmpl
push
fcoms
movsl
cs
insl
jnp
mov
jmp
nop
nop
nop
nop
nop
xchg
enter
pop
xlat
cmp
test
jno
xor
cli
dec
fs
ret
iret
hlt
adc
cltd
mov
sub
lcall
in
or
add
add
inc
js
add
add
rclb
add
add
andb
sbb
sarb
jp
stos
enter
sbb
dec
add
add
add
fimuls
add
add
movsl
mov
pop
cmp
addl
add
test
loope
mov
mov
xor
stc
jnp
push
imul
push
sub
in
stc
mov
lods
push
ds
cmp
add
add
out
jmp
sti
bound
jbe
cmp
mov
add
fmuls
dec
lcall
add
add
nop
nop
nop
nop
nop
push
popl
add
add
cmc
mov
add
add
in
push
ss
mov
and
add
add
movsl
cmp
popa
rorb
add
or
sub
and
flds
fidivrs
addr16
int3
int3
int3
int3
add
add
add
add
add
add
push
fisttpll
aam
inc
adc
repnz
pop
pop
cwtl
xor
shrb
mov
add
inc
mov
mov
pop
sbb
sub
pusha
xor
mov
mov
cltd
push
inc
into
in
lret
in
adc
cs
inc
mov
test
ss
outsl
pop
and
push
mov
lret
push
loop
mov
add
inc
dec
add
add
add
adc
or
int3
int3
int3
int3
insl
mov
mov
xchg
mov
xor
mov
test
fisubrl
lcall
add
pushf
mov
mov
add
test
lea
sbb
inc
sbb
mov
add
add
out
adc
out
cmp
hlt
pop
inc
leave
es
mov
enter
add
add
fcomps
inc
adcb
iret
cmp
nop
nop
nop
das
stos
xor
jge
or
add
add
jmp
jmp
xchg
cwtl
xor
nop
nop
nop
nop
nop
mov
fcoms
add
add
mov
push
inc
rorl
adc
mov
sub
add
add
jg
pop
arpl
adc
add
add
add
add
add
add
sbb
add
xchg
push
loopne
inc
jg
icebp
lcall
sbb
add
add
pop
xor
call
lods
aaa
gs
aam
mov
rcrl
and
xor
add
add
lds
in
or
add
add
les
xchg
aas
mov
cmpsl
push
push
and
add
add
sbb
adc
fs
fcoms
add
loop
add
add
add
out
daa
jecxz
xor
dec
repz
ja
orb
sbb
lods
push
push
dec
scas
nop
nop
nop
nop
nop
mov
sub
add
or
add
add
mov
cli
inc
jb
cmp
jne
xchg
lahf
mov
mov
es
pcmpgtb
rol
cmpsb
test
loope
add
add
scas
cmpsl
add
add
add
ja
movl
loop
sub
ss
test
lods
subb
add
xchg
das
xor
mov
add
add
lock
iret
jae
sub
inc
inc
adc
add
add
cmpb
add
add
add
add
pop
test
repz
cltd
adc
xchg
mov
arpl
sbb
leave
mov
xor
cltd
movsl
leave
std
stc
call
sbb
sbb
pushf
jnp
jbe
jb
xchg
adc
lret
jb
mov
stc
cmc
icebp
jecxz
push
fwait
mov
and
inc
out
xor
int
fadds
add
add
sbbl
jg
push
test
sub
and
pop
sahf
sub
jp
mov
enter
sub
test
add
add
add
add
repz
xchg
fimuls
jecxz
cld
mov
mov
add
add
popf
pop
sbb
mov
orb
add
add
dec
es
mov
outsl
aaa
and
xchg
fsub
cltd
mov
lea
dec
mul
mov
inc
out
jmp
jge
sbb
jae
jmp
popf
fs
and
mov
xchg
leave
mov
xchg
cmp
dec
cld
out
and
add
add
das
scas
push
add
add
sub
ret
clc
bnd
push
int
in
mov
add
add
add
add
pop
imul
inc
mov
dec
xchg
and
pusha
jge
pop
xchg
sub
add
call
lahf
add
add
add
out
lea
nop
nop
nop
nop
or
add
add
loopne
loop
ja
xchg
cmc
mov
pop
jo
test
sub
add
xchg
mov
or
jle
push
inc
jg
roll
fcomps
mov
fbstp
cmp
push
cmp
sahf
xorl
xor
sub
add
add
push
stc
mov
sub
int
mov
xor
rclb
adc
loop
cmp
inc
outsb
push
xor
mov
mov
inc
fisubl
mov
int
shl
imul
and
stos
dec
movsb
cmp
imul
and
jae
cmpsl
jp
add
add
add
add
add
add
dec
or
adc
cli
bound
sbb
add
jno
fsubl
add
add
lea
nop
nop
nop
nop
nop
insl
inc
mov
daa
bound
fidivrs
add
mov
or
loopne
lret
aad
mov
ljmp
lahf
inc
jno
in
xchg
push
pushf
cmp
xor
jge
ds
insb
fldt
add
xlat
mov
nop
nop
nop
nop
nop
out
push
push
add
add
lcall
out
sar
cmpsb
sbb
add
popf
inc
and
pop
add
dec
mov
add
add
call
cmpsb
push
ss
hlt
call
stos
aad
jp
mov
pop
push
cmp
add
add
daa
xchg
mov
inc
fcomps
outsl
adc
add
add
adc
icebp
adc
add
add
add
int3
int3
int3
cmp
aam
jno
push
xor
in
addl
push
push
adc
inc
imulb
movsl
jg
mov
aaa
sbb
or
inc
das
or
mov
cmp
inc
out
jmp
xchg
mov
and
inc
add
push
xor
roll
add
in
cmpsl
sbb
fcoms
aad
add
add
mov
les
stos
mov
mov
xor
xor
ljmp
inc
dec
jo
sti
inc
jle
imul
xlat
stos
mov
lods
inc
mov
xchg
imul
aam
push
loope
int3
int3
int3
int3
int3
sub
add
rcll
add
add
add
mov
xor
lret
das
loope
add
add
jbe
les
xchg
lcall
push
and
dec
add
add
add
add
add
jnp
fcmovbe
repnz
add
jmp
mov
sti
pop
cltd
rorb
ds
int3
int3
int3
int3
inc
mov
lods
ret
cwtl
adc
mov
xor
inc
cs
cmpsl
cwtl
xor
push
dec
adc
pop
sub
mov
jno
movsb
inc
xchg
ficomps
add
add
add
ret
popa
jecxz
push
pop
dec
pop
mov
xchg
std
fldl
add
add
and
in
fwait
sarb
jp
stos
lret
mov
sarl
into
jg
in
add
sub
arpl
add
pop
mov
nop
nop
nop
nop
nop
xlat
fstpt
jl
test
inc
mov
insl
fiadds
add
add
add
mov
shr
sbb
add
in
loope
mov
add
add
dec
sti
lea
cltd
mov
inc
sbb
mov
in
xchg
clc
pop
fsubl
push
sbb
lea
add
push
outsl
pop
jae
test
add
stos
sbb
push
add
add
clc
adc
popa
xchg
sbb
xor
pop
fucomi
mov
mov
sarl
add
addr16
adcb
add
mov
cmp
sub
loopne
add
add
jbe
mov
stos
aad
dec
in
dec
andb
dec
xlat
sbb
xchg
or
sub
scas
cmp
add
xchg
fisttps
rorl
sbb
xor
jmp
pop
add
add
add
icebp
sub
fimull
add
add
lcall
mov
xor
add
fcompl
add
add
pop
repz
inc
fs
jl
push
fsts
out
inc
jg
xchg
mov
xchg
in
sbbl
gs
int3
int3
int3
int3
shll
inc
cmp
pop
fs
mov
ljmp
clc
ficoml
add
add
add
jl
add
add
cld
adc
add
add
add
and
iret
xchg
xchg
push
in
clc
push
bound
sub
pop
in
jmp
jo
add
add
and
xchg
in
cmp
mov
mov
dec
xchg
test
adc
popf
sbb
add
notb
js
dec
pop
mov
in
push
jbe
loope
fstpt
mov
cwtl
jp
push
xchg
add
dec
das
add
pop
xchg
outsl
inc
push
add
add
mov
ss
add
mov
nop
nop
nop
nop
loop
add
add
add
aad
int3
int3
int3
int3
mov
add
test
mul
adcb
jl
aad
dec
sub
push
cmp
add
add
add
cmp
ljmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
imul
jle
fwait
add
aad
jp
adc
ja
in
xor
rcrl
xchg
pop
jg
pop
pop
mov
and
mov
jo
icebp
lods
mov
sbb
jnp
lds
inc
scas
pusha
repz
fst
loopne
flds
add
add
test
cli
in
lcall
push
xchg
sbb
lcall
aaa
inc
push
cltd
ret
lods
sbb
sarl
adc
pop
push
xor
mov
adcl
scas
mov
subb
mov
add
sub
add
mov
out
mov
shrl
mov
push
push
aas
push
adc
xchg
sbb
add
add
add
int3
int3
int3
int3
call
fldenv
and
jns
cmp
sub
add
xchg
call
dec
mov
cmp
adc
dec
dec
jae
push
add
add
jns
push
pop
movsb
xchg
mov
add
fcompl
int3
mov
inc
xor
jle
add
sub
nop
nop
nop
xor
hlt
adc
adc
je
sbb
add
add
jno
jmp
movsl
sub
push
mov
push
lock
add
add
not
ja
mov
sbb
add
add
std
mov
aaa
adc
int3
cs
or
mov
les
outsl
stos
stos
push
sub
add
add
add
add
bound
add
and
aas
cmp
xor
adc
ret
jne
xchg
add
add
pop
insl
add
add
add
mov
movsb
xchg
divb
jecxz
push
adc
popf
pop
stos
sub
movsl
inc
loope
mov
push
fldcw
jb
into
or
xchg
adc
cmp
mov
shll
les
out
lds
nop
nop
adc
notl
out
add
add
add
je
dec
sub
add
add
mov
xor
stos
cmp
jmp
fwait
popf
lcall
int3
int3
int3
inc
xchg
fcomps
mov
inc
add
add
add
cmc
add
add
add
xchg
add
add
data16
pop
rclb
loop
mov
add
call
into
inc
addr16
jg
and
xchg
or
add
add
pop
add
add
pop
push
jbe
loop
add
xchg
lcall
xorb
mov
add
add
push
mov
add
add
es
out
test
ds
mov
lcall
cmc
shl
fcoms
sub
add
adc
inc
and
loop
icebp
xchg
stos
call
jle
add
add
addr16
mov
xchg
pop
add
add
cmp
add
add
add
add
add
xor
push
jecxz
push
add
add
aas
sbb
je
add
add
xchg
mov
pusha
popf
push
add
add
sbb
add
add
add
shlb
sbb
add
mov
mov
nop
nop
nop
nop
nop
dec
jne
mov
inc
add
add
add
nop
nop
adc
clc
or
xor
pusha
lock
mov
push
divl
add
fcomps
aas
and
pop
pop
idiv
dec
sub
cmpsl
or
add
add
add
push
mov
lea
add
add
dec
scas
xchg
add
add
add
sub
push
frstor
mov
insb
and
int3
int3
int3
cltd
pop
adc
and
mov
mov
adc
mov
xchg
pop
add
add
add
lret
mov
mull
mov
mov
push
js
clc
pushf
int
cli
mov
addr16
push
lcall
dec
inc
jmp
sarl
xor
cmc
rolb
test
add
add
ja
icebp
jnp
jo
xor
add
add
mov
flds
add
add
adc
inc
jmp
mov
std
inc
pop
inc
add
add
add
pop
pop
adc
adcl
push
jnp
or
add
add
jbe
lea
lock
cmp
adc
lahf
in
jae
ja
push
or
add
add
mov
cmp
mov
insb
cmp
or
add
add
mov
add
stc
inc
aaa
sahf
mov
fnstenv
xor
add
add
add
cmpsl
in
stos
push
fcomps
mov
fs
aas
cmp
repz
cmpsb
sahf
push
insl
xchg
ja
jns
out
add
add
imul
adc
add
ror
mov
pop
add
add
add
add
add
add
sub
cmp
gs
mov
jmp
adc
push
in
out
inc
cwtl
xor
in
cmp
ljmp
cmp
arpl
aam
adc
jmp
xchg
leave
shrl
imul
mov
xor
jo
sub
add
dec
cmp
into
sbb
call
aaa
mov
mov
xchg
hlt
add
add
add
imul
rcll
leave
sbb
cmp
enter
and
idivl
scas
ficoml
scas
xor
iret
and
add
add
add
xor
add
add
test
test
add
mov
movsl
sarl
in
into
push
adc
add
sub
add
insl
cli
stc
in
repnz
es
pop
std
sahf
cmp
subl
cmp
inc
xchg
push
adc
int3
xor
pop
les
pusha
into
cmpsl
data16
jmp
leave
mov
sarl
or
and
call
stos
je
push
imul
das
add
lret
mov
xchg
jecxz
cmp
add
add
inc
mov
dec
repnz
orl
mov
sbb
or
xor
add
add
add
mov
or
add
add
add
add
lods
mov
je
pushf
fcoms
inc
mov
push
cli
push
add
add
push
fistpl
lret
cmpsl
cmp
jns
dec
js
test
add
push
mov
lds
add
pusha
scas
movsl
add
add
add
daa
sbb
add
add
mul
cmpsl
pop
sub
add
add
add
call
xor
add
add
jns
lcall
inc
xchg
nop
nop
nop
nop
nop
pop
cwtl
aas
sbb
movsb
push
add
call
and
adc
add
xorb
push
outsl
imul
in
adc
mov
fs
lcall
and
shl
mov
daa
mov
insb
jae
add
add
mov
shll
sbb
xor
add
add
ds
int3
int3
int3
int3
int3
pop
add
add
push
andb
jbe
cltd
add
add
inc
or
add
jne
fidivl
jmp
or
inc
std
or
add
add
add
into
dec
addr16
stos
iret
sub
repz
call
pop
mov
popa
test
jne
ss
mov
cmp
add
add
adc
mov
xlat
xchg
add
add
add
andb
stos
or
aas
aaa
add
and
add
add
pushf
jnp
cld
cmp
popa
fldt
pop
or
add
add
aad
or
jge
pop
or
fwait
pop
imul
add
add
add
pop
sub
add
add
int3
int3
int3
mov
jo
imul
cmp
jmp
cmp
shll
js
inc
lret
fcmovnbe
inc
notb
jno
rorb
add
add
jmp
xchg
call
into
lods
loopne
pop
sbb
lock
lods
outsl
sbb
int3
int3
int3
int3
aaa
pop
xor
adc
jnp
int3
int3
int3
int3
aam
xor
dec
stos
ljmp
add
mov
add
add
sbb
sbb
add
and
fists
ss
loope
cmc
fdivrl
sahf
cmp
cmc
lods
fsts
ret
push
movsb
out
lret
and
mov
mov
int
push
test
add
addb
and
sub
mov
push
fwait
pop
pop
mov
add
xorb
sldt
add
add
adc
call
aaa
xor
push
cmp
add
aad
daa
xchg
adc
sbb
and
sub
pop
mov
add
add
xchg
add
add
add
add
add
loope
ss
mov
and
push
repnz
lds
add
ljmp
add
mov
push
jle
stc
jb
mov
inc
push
lahf
cld
mov
lahf
jbe
dec
fcmovu
xchg
lahf
cltd
addr16
xorb
sub
add
jbe
sub
cs
mov
jmp
loopne
scas
adcl
test
ret
adc
sub
xchg
std
cmp
pop
lds
and
lock
add
sbb
add
add
push
mov
movsl
push
nop
nop
nop
nop
nop
fiadds
sahf
add
add
add
xor
popf
xchg
rol
movsl
in
lock
and
add
add
lods
js
mov
push
add
add
add
shll
push
inc
push
bound
inc
ljmp
in
push
in
mov
ret
mov
jecxz
imul
aam
lcall
sbb
add
gs
int
add
or
add
add
add
add
mov
jne
sbb
in
sbb
push
lret
pop
add
in
lds
daa
cwtl
je
cmp
cs
ficomps
xchg
mov
shl
add
add
xchg
insb
jbe
shll
add
add
add
mov
xlat
scas
pop
jg
xor
add
add
shufps
add
ja
mov
jmp
mov
fimull
add
add
mov
jle
push
hlt
rcrb
add
repnz
add
add
add
mov
add
aas
push
lret
and
js
xor
loop
jge
inc
push
pop
sbb
shlb
je
dec
or
dec
scas
jnp
mull
xlat
cmp
ja
xlat
loop
mov
add
std
outsb
jnp
cwtl
push
insl
xor
arpl
xchg
lods
cltd
sub
push
add
inc
dec
xchg
jno
cmpsb
pop
loop
add
add
sub
add
insb
dec
shr
adc
and
jo
mov
and
lahf
jge
hlt
fs
jns
add
pusha
mov
nop
nop
loopne
popf
adc
add
test
dec
int3
int3
int3
int3
int3
or
add
inc
cmc
xchg
pop
jg
push
jae
cmp
lods
jbe
das
aaa
outsb
stos
aas
xor
or
add
add
sbb
jns
mov
xor
arpl
mov
mov
add
add
add
int
icebp
xchg
sbb
dec
loope
dec
sldt
sbb
add
sti
out
add
data16
in
and
add
popa
lods
inc
add
add
add
mov
add
add
add
fwait
or
add
add
add
add
add
pop
add
add
arpl
add
add
shl
lds
add
add
int3
int3
insb
or
add
add
mov
int3
int3
int3
int3
int3
cmp
imul
sbb
outsl
fwait
mov
push
cltd
loopne
adc
stos
pop
arpl
cwtl
or
sub
add
mov
mov
int
addr16
inc
push
pop
mov
sbb
add
add
xchg
xchg
cltd
ds
push
add
add
mov
push
add
add
and
rorb
inc
sub
cmp
push
pop
cli
lods
pop
mov
jmp
sub
pop
or
add
add
cmp
xchg
dec
aad
adc
jp
inc
lea
loop
in
in
pop
add
add
add
add
add
pop
add
add
mov
fisubrl
cmp
add
add
fisubs
xor
shlb
sub
add
add
add
idiv
sub
push
pop
push
adcl
adc
add
adc
jne
and
insl
ss
insl
lahf
iret
mov
sbb
sbb
push
add
pushf
jl
add
add
add
xor
sub
pop
mov
adc
repz
jo
pop
out
pop
mov
je
xchg
mov
inc
xchg
js
add
add
add
out
lds
pushf
ljmp
inc
jb
data16
add
add
jb
std
out
shll
testl
add
add
jo
inc
inc
xor
mov
cwtl
mov
pop
pushw
fs
xchg
xchg
mov
jmp
pop
xchg
loope
xorb
push
out
xor
pop
pusha
ja
pop
push
jge
les
jmp
fsubr
mov
adc
popf
fldln2
daa
icebp
sahf
adc
mov
jecxz
or
cs
mov
mov
jmp
mov
cltd
cmp
bound
add
scas
or
add
add
ret
mov
xor
das
js
add
add
xchg
jp
sbb
mov
and
fwait
outsb
mov
das
callw
add
aaa
popa
adc
enter
sub
movsl
and
adc
aas
mov
push
add
add
xchg
cmpl
sub
add
fcoml
test
bound
lods
les
cmp
rclb
xor
insb
push
daa
adcl
cmp
mov
pop
addl
sub
inc
scas
and
add
add
add
pusha
lret
xchg
pop
sub
pop
rolb
and
and
ficompl
push
add
cmp
lret
jp
jg
popf
or
or
add
add
xlat
inc
mov
jecxz
inc
cmpsl
repnz
pop
inc
jne
sub
add
add
add
out
and
adc
outsl
xchg
pop
inc
xchg
push
repz
sahf
push
sti
addr16
xor
movsl
je
out
addr16
add
add
fadds
add
popf
mov
or
add
add
pushf
scas
push
add
jmp
dec
fimull
scas
adc
adc
and
aas
push
int3
int3
int3
int3
sbb
popa
js
pop
fsubl
mov
cmp
pop
push
lcall
mov
inc
js
cmc
inc
sbb
dec
mov
jo
add
add
cmp
lret
cmp
iret
sub
add
outsl
inc
mov
inc
je
inc
cmpsb
or
add
add
mov
jl
orl
and
int
dec
add
add
add
test
jno
add
add
and
cmc
dec
cli
sub
int
dec
jnp
lock
add
push
mov
fwait
iret
and
imul
jnp
sbbl
pop
add
add
pop
mov
push
fsub
mov
add
ljmp
mov
call
loop
adc
pusha
jo
cmc
sbb
add
inc
bound
inc
xchg
push
aaa
sarb
cwtl
cld
cli
mov
sub
mov
add
add
sbb
add
add
dec
out
lods
dec
pop
add
pop
nop
nop
nop
nop
nop
ss
sub
add
lret
add
jl
gs
push
add
add
cmpb
mov
add
lret
add
mull
mov
test
out
add
add
add
cmp
stos
xchg
pushf
dec
orb
jbe
popf
shll
pop
push
mov
pushf
push
testl
scas
dec
out
adc
pop
sbb
add
jmp
roll
pop
mov
js
sbbl
test
leave
cmp
add
add
movsb
jecxz
outsb
in
lret
inc
lods
cmp
pop
push
mov
stc
in
xchg
mov
sub
pop
and
int3
cmp
repz
popa
jns
add
add
mov
mov
ret
push
jno
add
add
aad
pop
imul
icebp
or
add
add
xchg
mov
in
sub
addr16
sbb
add
add
adc
add
out
pop
ss
xlat
movsb
ss
sbb
add
dec
test
fxch
pop
aaa
stos
shlb
out
xchg
cmp
and
cli
sbb
xor
xchg
mov
or
dec
fidivrs
cld
stos
xlat
dec
add
add
add
lret
pop
add
add
icebp
mov
xchg
pusha
iret
jecxz
or
add
add
push
pop
icebp
icebp
dec
rol
daa
cli
jnp
enter
or
add
add
add
add
shr
xchg
xor
clc
sarl
mov
xor
pop
mov
xchg
dec
loope
mov
jae
add
dec
jae
popf
adc
and
negb
fnsave
rorb
aas
or
add
or
add
xchg
sbb
les
push
fstps
mov
add
add
test
aad
out
sti
hlt
js
scas
xor
mov
loope
mov
jo
or
add
add
les
popf
lret
in
inc
and
js
js
mov
ret
mov
dec
aaa
jmp
cmp
cld
sti
jge
fsubrs
cmp
add
add
add
inc
mov
xchg
dec
pop
int
fstpt
pop
cmpsb
std
and
mov
in
ljmp
mov
or
add
add
add
add
add
inc
cmc
sub
repnz
sbb
push
add
add
xchg
add
add
add
scas
incb
and
mov
cmp
mov
sbb
insb
adc
add
cltd
cld
sarl
push
test
lret
cltd
jg
mov
or
and
push
push
fcomip
cltd
jecxz
stos
xor
add
and
and
jo
ficomps
arpl
add
add
cli
gs
lea
xchg
aam
add
incb
lds
stos
add
add
test
ret
in
or
add
stos
scas
movsb
push
dec
cmp
jg
xchg
add
add
inc
xor
pop
add
add
in
xor
mov
xchg
jmp
fucomi
add
add
sarb
mov
out
mov
jl
jge
stos
mov
adc
nop
nop
nop
pop
les
imul
subl
add
subb
mov
in
pop
ret
enter
add
xchg
push
std
sbb
push
and
add
pop
cld
ljmp
add
add
inc
cmc
imul
add
sub
or
add
nop
nop
nop
nop
nop
sub
cmp
xchg
daa
js
clc
cld
add
pop
gs
test
fwait
jle
inc
imul
add
add
xor
jb
or
add
add
sbb
pop
cmpsb
mov
in
loope
repnz
push
clc
fld
decb
push
insb
pop
add
add
lock
mov
inc
mov
test
leave
es
xchg
push
cmpsl
cmp
idivb
pop
jg,pn
repnz
push
mov
or
add
add
iret
inc
orb
xor
xlat
cmc
jmp
rcll
mov
in
push
adc
mov
bnd
pop
push
adc
sbb
out
addb
inc
dec
fs
dec
sbb
pop
test
inc
mov
sbb
adc
inc
pop
cld
in
pop
out
push
xchg
dec
pop
scas
mov
sub
sbb
xchg
add
add
jbe
mov
fcomps
mov
lds
cmp
add
add
add
jl
addb
add
add
add
fsubl
outsl
mov
cli
popa
adc
push
sub
into
test
cmpsb
adcl
add
add
rolb
int3
int3
int3
int3
int3
sub
add
hlt
or
add
add
fmulp
ljmp
dec
adc
in
stos
push
mov
sarl
cmpsl
add
add
insb
add
add
cld
push
cmp
shll
push
and
add
pusha
loopne
sub
fs
nop
nop
nop
nop
aaa
lahf
adc
mov
and
add
dec
mov
adc
mov
and
mov
mov
cmp
dec
loop
mov
add
mov
add
add
mov
add
cmp
add
rcr
or
push
add
aad
sbb
add
add
pop
rolb
lock
testl
data16
jmp
xlat
test
mov
or
add
add
and
int3
int3
int3
int3
int3
jle
sbb
add
jge
hlt
add
add
add
add
int3
int3
int3
int3
int3
call
cmp
lahf
push
adc
xor
or
push
icebp
aas
stos
or
add
add
out
cmp
add
add
popa
subb
aas
jl
add
add
add
add
add
or
add
add
sub
add
add
xor
hlt
mov
js
adc
ja
and
mov
xor
repz
js
adc
fnstcw
jns
push
add
add
add
and
sbb
scas
mov
dec
xor
or
add
add
add
add
les
aas
pop
scas
adc
pop
add
add
dec
ret
cli
xlat
fs
shll
add
frndint
xor
add
add
mov
add
add
popf
push
fisubrs
mov
add
subl
xor
jno
gs
shll
xchg
aad
mov
sbb
mov
lret
aas
aas
test
aam
push
movsl
or
add
cld
push
xor
cmp
add
and
and
add
inc
sahf
mov
push
les
test
out
inc
and
jns
stc
pop
sti
cld
pop
pop
fadd
mov
loope
lods
dec
lahf
fldenv
clc
push
pop
mov
pop
rcl
enter
mov
negb
push
add
push
shlb
add
add
dec
cld
mov
aad
int3
int3
int3
int3
int3
mov
mov
add
add
add
repz
jp
or
push
lock
adc
insl
mov
cmc
xchg
pop
mov
cs
mov
jg
add
add
add
enter
jl
out
push
add
sbb
call
mov
jnp
iret
sub
daa
add
add
add
mov
add
mov
inc
movsl
dec
or
mov
insl
std
adc
negl
xor
add
int3
int3
int3
int3
pop
hlt
push
add
add
push
insb
inc
loopne
push
mov
push
sub
icebp
ja
mov
jp
in
movhlps
pop
add
add
adcl
jb
movsl
add
add
push
add
jp
data16
int3
int3
int3
int3
fcmovnu
mov
loopne
push
imul
cltd
insl
inc
mov
push
daa
adc
add
add
push
ljmp
fidivl
push
mov
adc
pusha
call
sti
mov
push
sahf
mov
ror
test
add
test
icebp
ljmp
sbb
mov
xchg
lods
dec
js
xchg
add
xor
dec
add
mov
xchg
pop
cli
dec
or
add
add
out
addr16
add
add
aaa
xchg
lret
xchg
add
add
add
add
insl
adc
pop
lret
sbb
jns
rol
ljmp
pop
add
inc
push
fsubrs
push
add
outsl
mov
lret
loope
pushf
pop
jmp
add
add
add
cs
jmp
push
add
add
mov
add
pop
add
add
add
add
inc
sti
addb
insl
sti
xchg
loopne
mov
jmp
xchg
xchg
test
jmp
nop
nop
nop
nop
nop
adc
cs
mov
pushf
lock
push
add
add
clc
out
xchg
mov
lea
jmp
and
dec
adcb
xchg
or
add
add
aam
push
push
stos
insb
out
pop
jmp
clc
test
aaa
xor
enter
add
xchg
xlat
mov
addr16
rorb
stos
outsb
sbb
mov
repnz
mov
jbe
call
cmpsl
pop
jno
xor
movsb
mov
push
dec
jae
fisttps
add
add
hlt
xchg
jmp
mov
sbb
add
cmp
add
mov
aad
fxrstor
ret
hlt
xor
add
add
add
add
add
pusha
fdivl
js
xor
add
push
mov
adc
add
repz
enter
add
inc
mov
mov
cli
leave
je
arpl
call
clc
cmp
push
cmp
daa
and
pushf
mov
fcompl
mov
mov
test
arpl
cmc
stc
mov
out
insl
nop
nop
nop
nop
nop
testb
add
push
pop
mulb
popa
mov
lcall
cmp
push
aaa
ds
jns
insb
es
neg
mov
pushf
push
je
pop
popa
hlt
sub
inc
sbb
adc
add
les
add
add
add
add
add
sub
fildll
rcrl
call
cmp
imul
popf
test
adc
add
add
add
add
add
jo
jecxz
insb
mov
scas
mov
adc
push
sbb
add
jnp
lds
and
scas
add
add
add
add
das
dec
and
jmp
push
mov
mov
or
inc
sbb
ja
push
mov
jge
dec
roll
add
add
push
push
cmp
add
add
mov
dec
add
add
add
sbb
adc
iret
jle
cmp
mov
mov
jns
add
add
add
hlt
mov
add
add
ret
jbe,pn
pop
aaa
sti
adc
add
mov
add
outsl
and
rcll
pop
add
add
mov
rorl
add
push
add
add
pop
cwtl
or
adc
push
push
jmp
fwait
icebp
jb
add
add
add
add
add
add
jbe
incb
add
add
add
cld
add
aad
jns
pop
add
add
jb
div
outsl
int3
int3
int3
int3
int3
jge
pop
push
mov
mov
jmp
pop
lods
sub
sub
jmp
lock
fsubrp
jp
fildl
rcr
mov
add
add
adc
loopne
xor
add
out
cmp
xor
add
add
mov
scas
pcmpgtd
add
add
sbb
clc
jbe
fwait
add
add
add
or
add
add
aad
jno
leave
pop
scas
sbb
cwtl
rcrb
dec
int3
int3
int3
int3
int3
mov
pop
leave
repnz
sbb
xchg
es
pop
add
add
pop
call
test
outsb
sub
add
out
adc
pop
jge
and
mov
pop
pop
inc
aad
sarl
mov
jecxz
imul
add
push
add
add
gs
pop
cs
out
movsb
scas
ljmp
adc
add
mov
pop
dec
jg
pop
jmp
cs
cmpsl
sahf
bt
add
add
or
nop
nop
nop
nop
xchg
pop
out
inc
inc
xor
cmp
add
dec
mov
loope
pop
push
lahf
pop
fnsave
adc
out
sub
rcrl
enter
pop
add
icebp
ds
xlat
mov
lods
loopne
xor
push
popa
sti
popf
xor
int3
int3
int3
int3
lods
xor
outsb
jae
or
movsb
pop
add
add
dec
sub
imull
push
les
popa
stc
loope
cmp
roll
add
inc
lods
pop
insl
enter
jno
dec
xchg
sbb
add
es
cmp
jbe
and
add
stos
pop
repnz
in
pop
add
add
add
add
jmp
jmp
mov
lret
scas
imull
xor
pmulhw
cmp
push
xor
jne
in
out
pop
pop
add
add
add
int3
int3
int3
int3
int3
enter
loope
add
sub
aad
sarb
repnz
lret
filds
add
add
sbb
pop
add
add
popa
push
dec
pop
mov
aas
stc
sub
outsl
add
add
jge
pop
adc
jbe
out
inc
xchg
xchg
sti
les
adcb
mov
adc
sbb
addb
shrd
add
add
mov
add
test
adc
inc
pop
xor
mov
dec
mov
lret
scas
lock
pusha
mov
adc
addr16
sub
pushf
adc
add
push
fistps
in
push
mov
adc
scas
mov
inc
dec
sbb
ffree
xor
adc
add
inc
dec
push
xor
loope
call
adc
xchg
test
add
add
mul
imulb
add
add
xor
jno
subb
repnz
jle
jo
push
inc
ja
rclb
sbbb
fwait
xchg
out
pop
add
add
adc
nop
pop
out
cs
jnp
inc
or
pop
cmpxchg
scas
jo
jo
push
les
add
cwtl
sti
out
or
add
add
ss
lods
movl
imul
mov
add
cmc
daa
sbb
fsubrl
loope
add
fdivr
daa
int3
int3
int3
int3
int3
or
add
add
inc
xchg
pop
stc
out
xchg
aam
pop
jle,pn
test
mov
inc
push
adc
std
adc
int3
int3
insb
stc
or
add
add
push
fs
mov
stc
rorb
xor
fcomi
into
out
xchg
repz
xor
inc
cmp
add
add
add
loop
sbb
out
test
adc
push
call
iret
shlb
or
jmp
stos
xorl
rclb
add
add
test
jl
sbb
or
add
add
stos
push
and
xchg
jmp
push
adcb
add
add
sbb
mov
pop
add
add
add
xchg
into
filds
add
add
xlat
pop
sbb
add
mov
push
das
movsb
aam
out
xor
and
lea
mov
push
imul
mov
shrl
mov
mov
mov
icebp
mov
add
mov
pop
mov
xor
ds
adc
mov
mul
insl
dec
push
and
jb
add
add
add
jae
xchg
adc
out
faddl
out
push
dec
cmc
out
inc
jno
pop
bound
test
jns
add
add
add
mov
add
add
add
loop
xor
and
sub
iret
sbb
hlt
mov
mov
push
das
adc
add
int3
int3
int3
int3
data16
in
test
pushf
dec
les
add
add
jle
neg
and
xor
add
test
add
add
adc
add
lcall
cmp
add
iret
arpl
int3
int3
hlt
push
les
inc
fistps
pop
fimuls
add
add
push
mov
fldenv
mov
sub
add
add
aad
sub
add
cltd
jp
fs
pop
adc
lds
sti
mov
pusha
xchg
data16
push
orl
test
fwait
or
daa
rcrl
dec
sub
add
add
dec
and
xchg
push
mov
xor
dec
or
mov
cmp
cmp
sbb
test
outsl
mov
andl
add
fs
jmp
dec
mov
add
add
cmp
and
ljmp
cld
imul
add
add
and
imul
jge
repnz
jns
adc
add
aas
in
arpl
pop
sbb
add
add
add
testl
testb
add
add
dec
vcvtsd2si
outsb
enter
ds
pop
shlb
movsl
int3
int3
int3
int3
int3
outsl
sarb
int3
int3
int3
int3
int3
das
push
sbb
add
add
aad
jecxz
stos
sub
add
jmp
jg
push
das
jge
cmp
xor
mov
je
pusha
stos
cmp
add
add
xor
sarl
jp
sub
loope
and
sbb
add
add
ljmp
sbb
lods
dec
cmp
ds
in
mov
pop
pop
xchg
outsl
cli
add
lea
or
add
add
add
add
add
add
sbb
lret
fwait
repnz
mov
inc
fwait
mov
sub
scas
sbb
mov
aad
data16
int3
int3
int3
int3
dec
rorb
outsb
negb
cmp
outsl
dec
mov
decb
cwtl
push
lock
orb
mov
and
and
movsl
jbe
fsubl
int3
out
add
add
mov
sub
dec
push
pop
ljmp
add
add
add
pop
push
mov
add
add
orb
lds
popa
ds
mov
jae
xchg
mov
rcll
dec
lock
mov
repnz
inc
mov
inc
push
leave
sbb
jl
loope
sbb
mov
xchg
adc
add
inc
and
cltd
mov
xchg
int3
int3
int3
int3
int3
sbb
add
add
add
mov
iret
ja
int3
int3
int3
int3
int3
popa
jg
jno
jl
roll
lret
mov
mov
roll
mov
pop
cmp
fxch
cmp
add
add
mov
cmp
add
popa
cmpl
and
mov
fwait
pushf
jl
sti
add
sub
out
or
add
add
add
add
sub
jp
rcr
xor
popf
sub
mov
jmp
cmp
std
movsb
jmp
das
and
stc
add
add
add
mov
xchg
pop
sbb
or
jne
fisubrs
enter
push
cmp
pop
sub
mov
xchg
or
add
add
add
add
sbb
popf
inc
lods
adc
fstpt
sub
sub
aam
mov
mov
pop
push
mov
adc
loope
lds
sbb
add
push
add
add
dec
movsb
sub
outsl
aas
inc
pop
cmpsl
dec
adc
jne
and
add
add
mov
int
mov
pushf
into
es
push
pop
daa
insb
and
and
inc
repnz
add
add
inc
les
and
pushf
dec
mov
add
add
icebp
xchg
mov
pop
and
fs
cmc
cmp
je
shr
add
add
add
add
dec
int
jg
cs
xchg
ljmp
movsl
imul
add
adc
test
sub
add
add
out
jge
out
sbb
lahf
lcall
add
add
xor
sbb
sti
subl
xor
popa
cmpsb
mov
test
insl
in
xor
xchg
sub
xchg
dec
sub
xchg
int3
int3
int3
int3
int3
xor
test
cmpb
das
cltd
mov
aad
mov
es
outsb
insl
gs
scas
fidivrs
mov
add
add
sti
sub
jnp
push
notl
fcom
cmp
push
add
xchg
push
mov
in
dec
in
dec
mov
in
fnstenv
fs
in
imul
and
add
mov
pop
inc
out
fadd
or
add
add
jne
push
mov
add
pushf
xchg
sahf
in
imul
repz
adc
nop
nop
jecxz
popa
pushf
jae
repnz
mov
lods
enter
ret
cmp
mov
push
stos
push
jmp
sub
xor
adc
insl
pushf
sbb
icebp
idivb
outsb
sub
lock
addb
add
add
ljmp
add
inc
mov
add
add
sbb
ljmp
push
add
mov
fcmovnb
pop
pop
adc
jmp
movsl
and
mov
push
imul
jmp
add
add
adc
js
sbb
out
scas
add
lret
inc
loopne
lahf
add
add
add
mov
mov
mov
pop
test
cmp
add
add
jmp
shl
negl
inc
pop
add
add
int3
int3
int3
int3
int3
mov
sahf
and
in
adc
lret
inc
int3
int3
int3
int3
int3
cltd
inc
popa
dec
in
push
lret
mov
cli
test
lds
shr
xchg
add
add
jmp
cs
mov
dec
pop
bound
add
add
xor
dec
inc
sbb
xor
mov
mov
sbb
pop
stos
lods
inc
mov
push
pop
cld
xchg
lret
or
add
add
test
adc
add
add
add
add
add
clc
inc
test
dec
addl
insl
dec
xor
dec
push
das
mov
ds
data16
lds
imulb
add
add
jns
les
fwait
inc
outsl
cmp
hlt
xchg
inc
adcl
leave
cmp
out
mov
ja
sbb
and
pop
mov
pop
sbb
add
lahf
add
add
add
add
push
lea
add
add
sbb
enter
xor
add
int3
int3
int3
int3
int3
adc
or
add
add
sub
add
lret
arpl
bound
add
add
add
add
add
xchg
popa
out
push
iret
les
push
ret
insb
leave
add
add
add
in
dec
pop
sbb
pop
sarl
rcll
add
jl
pop
sbb
cmp
sbb
mov
mov
sahf
cld
sbb
aaa
mov
lock
pop
fidivrl
pusha
or
add
add
xor
add
add
push
sub
add
jbe
test
mov
inc
pop
lahf
push
call
mov
jmp
adc
xchg
mov
sub
out
add
add
add
add
jle
cwtl
cs
sbb
repz
lods
pop
pop
jle
xor
and
sub
jmp
fimuls
mov
add
out
mov
sub
rclb
int3
pop
jbe
daa
xor
and
xor
add
lods
pop
xor
add
add
cmp
rcl
sbb
jmp
es
xlat
test
stc
std
ret
mov
mov
imul
out
inc
push
mov
mov
loop
pop
loopne
int
cmp
ds
add
add
add
add
add
inc
aam
dec
adc
fisubs
pop
and
lcall
add
mov
add
xchg
mov
jecxz
das
sahf
daa
lahf
push
mov
jo
movsb
dec
cmp
sbb
add
xchg
decb
add
add
jecxz
xchg
push
add
add
das
imul
mov
outsl
loope
jne
pop
addr16
cli
scas
cmp
fdiv
rclb
ret
mov
cmp
add
add
pop
rolb
xchg
sti
xlat
jecxz
and
add
add
push
sub
sarl
or
add
add
repnz
add
add
add
add
out
nop
nop
nop
nop
nop
add
das
jno
iret
jno
push
jbe
mov
add
add
mov
or
add
add
adc
lods
jg
jmp
adc
inc
hlt
xchg
add
add
pop
adc
es
cmp
not
mov
and
aaa
inc
fwait
jl
in
sbb
push
xchg
inc
xor
add
add
jo
jecxz
cmpsb
pop
add
dec
sub
jae
push
mov
mov
in
jle
mov
mov
add
add
add
xchg
in
in
push
add
push
fs
mov
pop
insl
cltd
loopne
daa
push
pop
lea
addr16
inc
imul
push
mov
pushf
cmpsb
mov
stos
dec
sti
lods
lds
jecxz
inc
in
scas
es
arpl
dec
or
xor
cmp
testb
adc
add
add
add
and
lahf
aas
pop
pop
dec
push
in
inc
imul
xchg
fists
scas
pusha
or
add
add
call
mov
inc
cmp
test
ss
js
jne
add
push
int3
int3
cwtl
sahf
sbb
add
add
add
int
scas
rclb
and
add
pop
scas
or
add
add
sbb
mov
push
inc
mov
aas
and
cmp
out
push
mov
fsubs
xchg
sbb
fildl
add
add
aaa
inc
add
jmp
mov
xlat
rcrl
xlat
dec
jb
push
int3
int3
int3
int3
int3
shlb
fwait
xor
push
or
add
add
add
add
jg
cli
jae
iret
mov
jl
or
add
add
add
add
mov
fadds
add
lea
dec
mov
jno
insb
daa
aam
pop
sbb
add
fs
xor
add
add
mov
out
push
adc
es
add
add
and
popa
iret
adcb
lock
nop
nop
cmc
sarb
sbb
add
push
xor
push
ljmp
add
iret
mov
cmpsb
jmp
pop
xlat
jle
mov
add
popf
lret
inc
loope
xchg
bound
imul
lds
add
inc
shrb
xlat
popf
dec
push
or
add
add
sbb
add
add
sarl
stos
rclb
adc
dec
jmp
imul
add
pop
pop
xor
icebp
test
add
add
add
push
dec
fildll
sub
add
pop
aad
loope
xor
in
ljmp
add
mov
outsb
leave
movntq
add
add
dec
insl
mov
aas
sahf
mov
clc
jbe
inc
sbb
add
xlat
push
ficoms
jl
jmp
fnstsw
jle
push
xchg
jmp
popf
int
fildll
bound
add
add
mov
fdivr
mov
cltd
cmp
push
mul
jb
rcll
add
lret
nop
nop
nop
nop
nop
sti
and
pop
loop
test
dec
or
cld
xlat
mov
cwtl
scas
fists
mov
rcrb
lock
add
add
das
mov
adc
roll
add
ret
in
dec
push
lock
sub
add
inc
sbb
or
add
add
cmp
adc
shrl
leave
roll
cs
nop
nop
nop
nop
jnp
mov
inc
xchg
xor
imul
and
movsb
aas
jg
hlt
jle
xchg
ljmp
add
add
frstor
sub
add
add
push
fidivl
nop
nop
adc
xchg
aam
sub
out
cmpsb
call
adc
ds
sahf
imul
pop
add
add
test
jle
cld
sbbl
add
jp
mov
push
and
pop
xchg
add
add
cmp
mov
add
cmp
push
sbb
add
xor
add
add
in
stos
je
mov
pop
mov
mov
or
add
add
add
push
test
cwtl
push
jp
jecxz
imul
addl
les
add
add
add
es
push
mov
add
add
add
ljmp
cmpl
adc
dec
adc
scas
mov
cmpsb
jecxz
xor
das
aaa
mov
ljmp
scas
jo
into
daa
add
sub
xchg
or
add
add
xor
sub
cmp
add
add
pop
outsl
inc
push
sbb
mov
testl
lahf
sub
gs
ss
shll
cmp
negb
lret
mov
adc
call
addr16
add
shrl
insb
rep
mov
pusha
pop
cld
fstpt
add
add
add
xchg
rolb
add
add
add
add
dec
jp
xchg
aad
out
mov
rcrb
dec
and
sbb
xchg
mov
lcall
sub
cmc
mov
add
arpl
outsl
add
add
add
add
loop
xor
mov
push
jmp
dec
pop
insb
mov
push
add
mov
add
add
add
ret
or
add
add
xchg
jo
mov
or
add
add
lcall
add
add
xchg
ds
hlt
fwait
cli
cltd
xor
mov
adc
out
add
out
pop
movsl
push
add
add
add
test
or
add
add
push
loopne
in
adc
add
add
adc
arpl
inc
pop
in
les
fmull
nop
scas
movsb
jle
and
pop
ss
cltd
add
add
add
inc
mov
xor
dec
ja
inc
imul
and
add
add
mov
add
jg
mov
dec
or
add
add
mulb
add
sub
add
add
gs
xchg
data16
fdivl
sub
std
add
add
add
fwait
movsb
inc
repz
add
add
addr16
fidivrl
add
add
mov
icebp
imul
adc
shll
int3
int3
int3
int3
int3
stos
add
add
add
in
xchg
mov
add
add
mov
add
add
call
push
ja
js
pop
sub
cmp
add
mov
mov
mov
ret
lcall
sbb
pop
pop
pop
sarb
orb
ret
inc
cmp
jns,pn
mov
jg
dec
jmp
xchg
daa
imulb
mov
ljmp
pop
ss
arpl
fidivrl
movsl
xchg
into
dec
push
jno
mov
sub
jp
xorl
dec
fldcw
lds
sbb
int3
int3
int3
int3
insb
stc
and
add
add
cld
cmp
pop
add
add
fs
imul
jnp
and
call
call
ds
jbe
jnp
out
hlt
push
mov
loop
mov
add
popa
iret
addb
in
in
in
and
push
sbb
add
in
mov
imul
sub
add
add
mov
lret
and
add
add
add
repz
sub
icebp
jb
pop
aad
xsave
and
cmpsb
cmpsl
inc
mov
arpl
adcl
xor
adc
stos
xor
stc
jmp
pop
movsl
out
out
mov
jge
rcll
mov
dec
push
aas
shr
add
add
add
add
adc
dec
xchg
mov
xchg
test
pop
xchg
xor
mov
fistps
jp
pop
pop
xchg
sub
add
add
lods
stos
call
xchg
pop
scas
out
arpl
push
mov
fsubrl
pop
push
sub
pop
adc
out
flds
add
pop
popa
push
mov
xchg
movsb
mov
cmp
mov
xor
add
add
movsl
rcrb
jle
add
add
add
add
add
push
iret
mov
imul
jns
clc
fldenv
test
cmp
cmpsb
into
dec
popa
shl
fdivl
jb
pop
in
repnz
xchg
add
cs
popf
outsb
xorl
adc
out
sti
dec
inc
bound
sub
or
add
add
push
inc
cmp
add
add
lret
loope
pop
or
add
add
idiv
rolb
add
add
add
icebp
fs
hlt
xor
xlat
outsl
jbe
enter
push
add
add
mov
cld
push
sub
add
fiaddl
mov
cs
jbe
sub
sbb
bound
mov
ss
gs
and
xor
fdiv
movsb
mov
jmp
xor
push
test
stos
xor
mov
add
add
test
int3
int3
jnp
add
add
mov
mov
mov
pop
add
add
mov
int3
int3
int3
int3
int3
testl
inc
cmp
xchg
mov
popa
mov
nop
nop
nop
nop
fstl
aaa
or
add
add
push
push
nop
nop
nop
nop
nop
adc
lds
aam
cli
cmp
aaa
adc
push
mov
test
inc
pop
add
add
hlt
movsl
dec
mov
ja
add
add
mov
add
adc
fildl
cs
add
pop
out
jns
push
add
add
jge
xor
adc
sti
or
add
add
add
add
in
adc
addr16
and
add
test
lea
ret
jns
push
fucom
mov
jl
adc
lock
mov
add
add
and
or
add
add
addr16
pushf
movsl
or
add
add
out
nop
nop
nop
nop
add
add
add
in
rclb
add
pop
mov
lcall
mov
dec
mov
cmpsl
enter
add
inc
xor
mov
mov
add
dec
and
push
iret
jle
add
add
push
insb
out
jo
fnclex
sub
insl
inc
hlt
mov
push
push
adc
add
add
test
icebp
mov
adc
inc
add
add
add
js
cmp
xchg
mov
loopne
dec
add
add
fldz
pop
jle
mov
test
sbb
fcomps
sarb
inc
sarb
mov
mov
lcall
iret
popa
push
pop
jns
inc
mov
icebp
imul
call
repnz
push
push
mov
fwait
aam
and
add
add
push
pop
popa
lret
test
sbb
in
mov
dec
cmp
adc
cmc
sub
cmp
mov
hlt
mov
cmc
punpckhdq
ja
cmp
scas
xor
jne
fstps
add
add
xlat
cmpb
negl
lahf
mov
mov
adc
mov
rolb
push
and
pusha
pop
add
add
cld
sahf
lock
lea
add
add
inc
xchg
clc
cmp
loope
push
popa
mov
push
sti
inc
adc
lods
adc
xor
add
add
and
or
add
add
stc
mov
push
add
add
movsb
pop
iret
out
pusha
pop
fidivrl
pop
mov
add
cmp
test
add
add
insl
ds
jae
lret
adc
add
add
add
add
aas
mov
push
jmp
gs
jno
mov
sbb
popa
adc
sbb
add
rorl
add
add
sub
mov
jecxz
push
and
jmp
mov
fprem1
inc
adc
inc
xchg
and
mulb
fildl
add
mov
or
add
add
pushf
mov
int
or
add
add
xor
add
lret
aam
adc
push
add
add
inc
and
lret
sub
pushf
lds
pop
jbe
sbb
xchg
xor
lods
push
add
pop
add
add
add
pop
jmp
jb
lods
test
and
adc
dec
ret
mov
add
and
push
mov
sti
adc
add
or
add
add
or
push
adc
jle
fiadds
or
add
add
mov
inc
push
jle
sub
enter
ret
lret
push
inc
loop
ljmp
inc
dec
dec
cmp
je
insb
push
test
add
add
outsb
jae
cmp
jns
nop
nop
nop
nop
adc
push
xchg
dec
xchg
xchg
pop
cld
in
jno
mov
fsts
or
add
add
add
add
cmp
or
add
add
ds
mov
add
add
stos
xor
fs
frstor
outsb
pop
outsb
inc
cmpsb
loope
insb
jmp
faddl
ljmp
insl
loop
inc
shl
cmpl
add
nop
nop
nop
nop
nop
jmp
xor
nop
nop
nop
nop
nop
fcompl
jnp
shlb
das
adc
xor
aas
cmp
add
add
aam
mov
scas
je
mov
mov
mov
adc
xor
or
add
add
add
outsl
popa
sub
add
add
roll
lret
cli
dec
pop
xchg
icebp
mov
sub
mov
add
in
test
movsb
adc
mov
js
cmc
push
daa
lea
inc
pop
push
and
hlt
jle
jp
push
sub
inc
fs
cmp
mov
aaa
mov
rorb
add
add
xor
and
mov
stos
movzwl
dec
pop
mov
inc
push
add
add
add
lret
scas
push
mov
xchg
push
lret
imul
add
add
add
add
add
sub
jns
mov
push
pop
push
adc
inc
xor
dec
cmp
inc
pop
inc
cld
mov
icebp
enter
add
add
mov
daa
das
add
pop
addl
divl
pushf
lods
les
mov
mov
mov
shll
add
add
daa
stc
or
add
mov
jecxz
add
add
lea
imul
add
add
push
jp
je
idivl
add
or
add
add
jae
int3
int3
int3
int3
int3
lahf
push
mov
fistl
jp
push
add
add
int
add
add
add
push
sbb
cmp
inc
and
test
add
sarl
and
cmpsb
mov
loopne
test
in
sub
shll
jecxz
and
aad
icebp
pushf
lods
adc
cwtl
or
nop
nop
nop
nop
nop
xchg
and
test
xor
jne
xlat
aas
jne
cmp
and
leave
aam
addr16
mov
dec
or
add
add
xor
in
push
stos
arpl
test
sbb
adc
inc
out
outsb
les
jg
add
add
add
xchg
jmp
test
iret
lods
dec
mov
shlb
xchg
or
add
add
jge
add
add
add
nop
nop
nop
nop
nop
jecxz
fidivrs
jbe
push
outsl
ret
ret
push
dec
sub
mov
inc
cmp
aad
dec
mov
sbb
das
lock
dec
mov
ljmp
adc
repnz
call
test
pop
cli
cmp
das
clc
mov
pop
add
add
or
test
pop
mov
push
adc
mov
mov
mov
add
push
and
add
add
outsl
mov
stos
lock
sbb
push
adc
add
add
mov
out
fcmovu
ret
test
cmp
sub
bnd
adc
add
mov
adc
jg
sub
add
fiaddl
movd
in
loope
mov
push
ror
stc
xchg
pusha
cmp
mov
mov
lea
pusha
popa
in
jle,pt
dec
pop
lea
add
add
add
out
mov
fs
fsubrl
push
mov
mov
je
sub
enter
or
int3
int3
int3
int3
mov
testl
add
add
mov
lret
lods
mov
push
mov
adc
adc
sbb
cmp
add
add
ss
dec
xor
mov
sub
fiadds
and
xchg
cmp
mov
sub
scas
insl
cmp
cmp
add
add
xchg
lcall
add
outsb
dec
sbb
add
add
lahf
sub
repnz
lock
add
add
stos
outsb
push
in
inc
fstl
mov
mov
add
add
mov
pop
shll
insb
push
add
add
jle
mov
out
std
sar
test
mov
add
inc
in
clc
in
adc
nop
nop
nop
nop
nop
and
cli
fidivs
shl
xchg
jb
fwait
idivl
xorb
push
pop
add
dec
inc
inc
inc
jbe
out
pop
cmp
sub
add
add
imul
xor
rcrl
add
add
fwait
cmp
and
adc
dec
sub
add
add
aam
pop
add
add
add
loopne
jge
xor
test
push
pop
dec
shrl
and
leave
sub
cmp
push
jb
jle
push
sub
cmp
loop
lahf
fisubs
xor
iret
xor
or
add
add
cli
mov
movsl
add
add
add
xor
mov
iret
sub
leave
push
or
xchg
xor
iret
std
frstor
dec
call
ficoml
js
and
mov
xor
arpl
cmp
add
add
add
int3
int3
int3
ss
inc
xchg
push
pop
dec
fists
sahf
push
xor
sub
in
stc
dec
lods
leave
xchg
daa
out
or
and
dec
xor
inc
data16
dec
ficomps
test
dec
es
sti
mov
pusha
jo
ret
imul
pushf
mov
lcall
fldenv
cmp
add
add
add
sahf
subb
inc
xchg
out
mulb
sar
nop
pop
add
fmull
dec
or
add
sbb
add
add
inc
push
imulb
inc
mov
add
cmp
sbb
add
push
jbe
pop
sub
imul
out
pop
add
add
add
inc
and
mov
add
mov
sbb
repnz
or
add
add
pop
stos
insb
sbb
outsl
iret
popl
xlat
fldenv
mov
add
add
push
sti
inc
subb
pop
in
movsl
mov
dec
negb
into
mov
pop
arpl
ds
or
add
add
loopne
scas
ja
das
mov
pusha
cmp
gs
sbb
add
jle
push
pop
stc
cmp
pop
sub
pop
or
lret
dec
popf
and
add
add
mov
add
add
add
xor
cmp
add
add
rcrb
movsl
and
add
add
lea
add
add
fwait
cmp
mov
xor
adc
lods
shlb
outsb
gs
add
add
add
cmp
aas
jmp
fwait
scas
cltd
jbe
into
scas
inc
lock
add
add
and
mov
iret
nop
nop
nop
nop
nop
cwtl
jg
mul
pop
ljmp
je
add
add
lcall
es
jno
test
mov
mov
inc
pop
jne
add
add
popl
dec
cltd
in
jae
imul
pop
xchg
insb
add
xor
add
add
cmpsb
dec
inc
sarb
shrl
xor
or
ret
popf
mov
fstps
lahf
mov
xchg
mov
aad
add
pop
pop
add
add
add
and
add
cli
xor
mov
or
add
stc
mov
dec
cmp
add
fisttps
add
add
fimuls
add
add
dec
push
lcall
das
mov
sbb
jle
and
and
adc
add
push
scas
movsb
pop
test
add
into
leave
sahf
data16
gs
add
aaa
dec
adc
add
out
pop
mov
jp
stc
xor
add
add
insb
sbb
cmpsb
mov
sub
divb
add
add
add
jno
mov
arpl
add
ljmp
mov
loopne
xchg
pop
and
add
add
aaa
or
add
add
add
ror
int3
int3
int3
int3
mov
or
aad
loop
pop
inc
xor
aaa
and
sub
sbb
add
add
jno
std
jae
repz
add
add
add
or
add
add
sub
call
stc
in
inc
ds
gs
mov
push
pop
lea
jge
pop
sub
add
ss
loope
call
adc
add
sti
clc
cs
cmp
popf
insb
adc
fldpi
cmp
inc
fcomi
stos
add
add
add
push
das
dec
sbbb
mov
mov
cmpsb
lds
add
pop
mov
popa
adc
cmpsb
push
jmp
enter
lcall
int
sub
divl
inc
repz
loope
ret
add
add
cmp
pop
mov
inc
nop
nop
nop
nop
nop
jl
dec
pop
sti
in
jnp
inc
xchg
mov
sti
dec
cmp
mov
push
lock
gs
fsubrs
sub
and
xor
jl
imul
iret
pop
mull
ja
xor
test
and
mov
inc
mov
out
push
daa
pop
mov
in
int3
int3
int3
int3
int3
lret
pop
push
aad
insb
cli
sahf
insl
je
lahf
mov
pop
mov
sbb
lods
sahf
into
jbe
pop
ja
aas
mov
inc
mov
add
add
add
add
test
inc
out
cltd
repz
cltd
xchg
ljmp
loopne
leave
sub
jnp
repnz
pop
sbbl
mov
stc
pop
add
add
cmpb
test
mov
ror
cmpsb
xor
nop
nop
nop
nop
nop
add
add
add
mov
outsb
push
or
add
add
adc
mov
xchg
das
mov
sub
int
icebp
push
add
mov
pop
add
add
sbb
ljmp
sbb
mov
fstpt
movsl
and
rolb
scas
sub
xor
pop
push
mov
sub
test
mov
pop
int
filds
je,pt
scas
mov
lods
add
mov
nop
nop
nop
nop
nop
inc
mov
sbb
xchg
cmp
add
and
jno
mov
lock
mov
sahf
loopne
pop
cmp
add
std
sub
mov
and
add
add
jne
jmp
xor
cmp
inc
ja
loop
insl
adcb
add
sub
and
add
mov
movsl
subb
outsb
incb
add
add
cmp
mov
popf
enter
push
je
sub
add
push
add
add
xchg
and
ss
mov
es
add
dec
lea
rorl
sarb
daa
jmp
inc
add
add
add
xchg
mov
in
imul
pop
icebp
pop
das
pop
inc
jnp
sarb
jle
loope
add
add
loop
adc
adc
adc
stos
fdiv
lds
outsl
mov
fwait
mov
jno
add
mov
dec
rclb
add
cltd
hlt
mov
test
add
add
adc
add
add
lds
add
add
inc
xchg
clc
mov
jo
jg
add
add
push
sub
iret
mov
mov
adc
stos
and
sbb
push
call
dec
lahf
subb
test
jns
inc
cltd
shrb
sbb
loopne
scas
or
add
add
in
jae
mov
and
add
imul
add
add
dec
jl
repnz
pop
shll
test
popf
aad
pop
and
or
add
add
sahf
icebp
into
jmp
imul
add
add
lcall
adc
int
fstpt
xor
iret
inc
mov
jecxz
adc
imul
aad
pop
je
pop
jne
loope
ficoms
mov
pop
nop
nop
nop
nop
nop
pop
mov
arpl
cmp
add
adc
jns
sbb
adc
les
jae
add
inc
imul
add
add
dec
rcl
mov
xor
and
push
sbb
repz
int3
int3
int3
int3
int3
xrelease
pop
pop
pop
pop
ficomps
mov
and
add
subl
add
mov
xchg
add
add
adc
push
test
pop
shlb
in
mov
lret
sbb
or
add
add
inc
nop
nop
nop
nop
nop
dec
iret
gs
nop
nop
nop
nop
lahf
adc
and
mov
loopne
or
add
add
nop
nop
nop
movsl
aam
fistpll
pop
in
pop
mov
pop
add
add
fwait
xchg
sar
adc
mov
sub
push
mov
and
int3
sahf
adc
imul
fmuls
add
add
add
add
add
test
add
add
jp
popf
aad
shrb
outsl
popa
call
jae
xchg
lock
cmpsl
add
add
add
std
testl
dec
push
mov
jbe
and
cmpsb
out
mov
cmpsb
lods
faddl
int3
int3
int3
int3
int3
pop
xlat
sbb
jp
shrb
test
les
pop
into
pop
sbb
add
add
adc
adc
lods
sahf
js
jecxz
inc
jns
addb
add
xchg
into
sbb
dec
push
xchg
push
orb
sub
sub
gs
imulb
in
xchg
push
add
add
add
add
mov
add
mov
add
pop
and
push
add
sbb
mov
mov
mov
push
push
mov
fisubs
add
add
add
jae
xor
out
loope
adc
pop
push
sbb
dec
bound
add
add
cmpsb
jae
js
les
dec
popa
insb
push
ds
mov
inc
test
mov
leave
stos
jecxz
out
adc
insl
ja
dec
xchg
mov
test
js
cld
adc
sub
outsl
sbb
add
xor
push
jns
pop
sub
add
sbb
add
xchg
add
add
add
dec
xchg
je
outsl
pop
outsb
repnz
or
add
add
mov
imul
add
add
xchg
jbe
mov
dec
push
mov
std
sbb
sbb
add
add
out
lock
mov
cmp
push
stos
test
sub
stos
sti
mov
add
add
aam
jb
mov
mov
ss
dec
push
jne
mov
in
or
add
add
fnsave
into
lods
in
jmp
cli
cmp
mov
push
mov
xor
and
in
jle
xchg
mov
cmp
aas
xor
dec
jmp
and
mov
cld
sbb
adc
push
sub
lret
cmp
mov
pop
inc
lock
fs
mov
mov
jae
cmp
mov
add
add
add
sub
test
xor
add
add
nop
nop
nop
nop
nop
xchg
aaa
sti
imul
mov
vmovaps
xor
push
mov
je
pushf
cmp
fidivrl
popf
cmpsb
lock
fistpl
sbb
idivl
ret
sbb
push
sbb
inc
out
aam
add
add
sti
rorl
add
add
push
std
adc
push
add
leave
lods
inc
mov
ret
mov
outsb
fistl
inc
shlb
add
push
push
dec
mov
inc
rcll
das
xor
and
add
shl
rorb
fnsave
add
add
add
pushf
jg
pop
mov
or
add
add
movl
pop
cltd
scas
mov
imul
add
add
sub
pop
inc
sbb
add
or
add
add
dec
or
add
add
dec
repz
inc
inc
dec
dec
xchg
popf
pusha
xchg
add
lahf
loope
sub
add
add
das
das
pushf
push
pop
cmc
pop
add
add
or
add
add
gs
pushf
adc
inc
add
add
add
stos
call
rorb
iret
inc
pop
pop
push
cmp
lea
add
add
add
ja
push
mov
add
add
scas
mov
ljmp
xorl
and
add
sbb
add
add
in
dec
popa
cmp
dec
loop
cmp
outsb
push
loope
loopne
sbbb
cmp
loope
idivl
inc
repz
push
cmpsb
push
stos
les
dec
mov
lret
std
test
add
add
adc
mov
sub
es
into
mov
sahf
push
lds
es
and
popa
lret
push
sbb
sub
xor
shlb
mov
sbb
add
add
fwait
mov
add
test
add
add
add
jecxz
mov
push
cmp
int3
int3
int3
int3
int3
push
nop
nop
nop
nop
nop
outsb
dec
into
push
jmp
fldcw
xlat
push
aam
add
add
sub
inc
cmp
cmp
pop
fcompl
adc
dec
or
add
add
mov
decb
adc
mov
sbb
nop
nop
pop
in
loopne
sbb
adc
hlt
adc
pop
cld
push
test
out
mov
add
sub
xchg
mov
stos
add
add
add
cltd
dec
ljmp
lock
insb
sub
jg
pushf
out
int3
int3
int3
int3
adc
insl
testw
fmuls
add
jge
in
push
or
pop
jmp
dec
add
mov
nop
nop
nop
nop
nop
pop
in
xchg
pop
add
shrl
test
add
pushf
or
add
add
sbb
test
inc
andb
jbe
xor
pop
dec
add
add
add
mov
inc
outsl
sbb
ffreep
mov
add
call
push
loopne
xchg
adc
add
add
add
call
xor
add
add
jae
mov
xchg
dec
jp
cmpsb
adc
dec
ds
addr16
inc
jg
mov
repz
jno
add
add
push
dec
cltd
call
cmp
add
fimull
cld
or
add
add
shll
popa
test
mov
ds
lahf
addr16
test
sbb
xchg
or
movsb
lds
inc
push
bound
movsb
xor
or
add
add
test
mov
shll
add
add
add
jae
add
add
add
dec
shl
test
xchg
es
stos
mov
icebp
jbe
jo
push
lret
jo
cwtl
call
imul
jno
and
mov
jp
pop
xchg
shl
mov
jbe
add
add
push
ret
fidivl
stos
lcall
xor
jns
sbb
push
pop
mov
lds
nop
nop
nop
nop
nop
pop
mov
mov
ljmp
sbb
pop
movsb
inc
or
daa
or
add
mov
mov
ucomiss
or
xchg
pop
push
cltd
dec
push
in
add
add
inc
jae
mov
dec
ds
fistl
rolb
add
mov
loop
in
xchg
outsl
dec
arpl
lahf
sub
push
cli
test
jb
mov
aaa
and
mov
movsb
imul
add
add
in
in
push
popa
jl
es
or
add
add
pop
mov
add
add
add
add
pusha
push
scas
or
add
add
add
add
push
or
add
add
sub
lds
add
add
add
add
add
int3
int3
int3
int3
sti
mov
cmp
push
xchg
repz
lret
rcrl
pop
sbb
push
cmp
pop
add
cmp
in
xchg
dec
imulb
add
add
in
imull
add
and
inc
jae
lea
add
add
cmc
sub
add
add
mov
leave
xor
mov
cs
nop
nop
nop
nop
lods
xor
sub
adc
add
add
push
jbe
out
add
add
inc
int3
int3
int3
int3
int3
pop
xor
data16
movsb
js
and
inc
pop
pop
sbbb
int3
int3
int3
int3
int3
ds
in
imul
add
loopne
push
arpl
mov
add
add
sbb
cmpsb
outsb
add
mov
mov
test
scas
and
mov
pop
cld
in
hlt
or
test
stc
inc
fisubrs
add
ljmp
or
jge
mov
mov
nop
nop
nop
nop
add
and
mov
jmp
mov
pop
add
add
push
or
or
add
add
jo
nop
nop
nop
nop
nop
lcall
add
add
add
add
aad
fimuls
add
mov
add
adc
push
cwtl
ljmp
add
ret
mov
dec
int
jge
shrb
add
mov
jecxz
jmp
and
add
add
add
mov
add
arpl
int
mov
jmp
icebp
pop
fs
xor
fucomip
ss
iret
push
mov
int3
int3
int3
int3
int3
add
mov
test
or
pop
mov
fdivrs
ja
aad
push
xchg
mov
or
add
add
add
push
push
adc
add
add
add
mov
dec
push
push
mov
sbb
stos
cmp
add
pop
add
add
inc
js
rorb
xchg
or
add
add
mov
dec
mov
cltd
js
rcrl
lahf
addr16
movsl
sarb
test
mov
sbb
adcl
add
push
xor
xor
add
add
add
testl
add
add
je
dec
or
add
add
mov
nop
nop
nop
nop
nop
lds
fcoms
mov
inc
add
add
add
jno
ds
and
xor
push
test
mov
adc
add
add
add
insb
fistl
fsubs
fistl
push
jae
outsl
jnp
clc
movb
ds
dec
or
add
add
enter
mov
sub
and
mov
outsl
inc
gs
lock
dec
flds
dec
xchg
pop
dec
jmp
mov
add
rcll
xchg
arpl
out
mov
or
add
add
ds
cld
fcomps
shll
rcrb
mov
mov
cmp
cmp
les
push
cmp
add
add
mov
lret
imulb
add
add
add
add
add
add
add
dec
call
xchg
xor
jp
xor
xchg
add
ficomps
add
mov
mov
add
call
lcall
xchg
add
add
add
pop
push
fisttpl
insl
sub
sbb
cmp
jmp
cmp
jae
dec
xchg
insl
jnp
rorl
in
jne
dec
xor
add
add
out
mov
and
or
mov
mov
stos
xchg
xor
test
mov
gs
test
add
xchg
or
add
add
add
add
add
call
mov
push
push
add
add
add
add
xor
sbb
xchg
test
pop
outsb
jg
mov
add
add
je
cmp
add
jmp
inc
test
push
hlt
daa
lea
aaa
mov
inc
in
mov
and
stos
sub
sub
ljmp
mov
pop
outsl
je
add
add
or
pop
lcall
dec
call
fidivrl
iret
cmp
stos
push
mov
add
ror
int3
int3
int3
fsubl
mov
add
add
movsl
cmp
int
sti
mov
pop
push
xorb
js
sub
addl
add
add
or
jne
out
movl
pop
add
mov
addl
xor
sti
xchg
push
adc
sub
jmp
cmp
imul
adc
push
add
mulb
pop
xor
add
add
pop
and
xchg
or
add
add
das
clc
pushf
sub
add
add
add
add
pop
add
add
shll
cs
lahf
inc
int
jmp
xor
add
rcll
xchg
mov
mov
sub
sbb
push
js
xor
push
test
inc
pop
es
mov
mov
mov
jno
add
add
imul
cmp
mov
jge
in
cwtl
aas
stos
nop
nop
nop
nop
nop
sbb
add
add
out
add
add
push
repnz
jg
cmpsb
push
das
pop
rclb
add
aam
shl
or
add
add
sub
shlb
add
add
clc
scas
sub
add
jg
inc
mov
mov
mov
xchg
sub
xor
jl
sbb
scas
or
add
add
scas
add
add
push
and
out
pop
out
push
add
add
pop
out
fisubrs
ljmp
add
add
push
mov
xor
dec
es
push
pop
sbb
dec
repnz
or
popf
xchg
into
cmp
enter
pop
mov
add
xchg
sub
pop
sub
stos
dec
es
inc
fldenv
sarl
add
mov
cmp
add
add
push
inc
fisttpll
inc
es
xchg
std
shll
pop
inc
pop
mov
jle
add
add
mov
add
add
or
xchg
rolb
add
add
xchg
pusha
lock
cmp
fdivr
insb
shll
mov
scas
mov
arpl
add
add
enter
add
pop
or
inc
sbb
cmp
and
add
xchg
call
push
add
add
push
fs
dec
test
and
jg
jno
into
enter
sub
mov
and
adc
shl
cmp
jns
hlt
mov
add
mov
movl
push
push
mov
jbe
sub
aas
pop
jp
add
add
imul
jae
shr
dec
xor
cli
pop
add
add
jmp
cmc
test
stos
int3
int3
int3
int3
int3
and
arpl
mov
add
shll
das
jns,pn
jge
add
imul
mov
xor
jo
mov
xchg
mov
push
jnp
aam
popa
xchg
pop
sub
jnp
stos
pop
push
lret
lahf
and
add
add
add
inc
cmc
or
and
testb
add
add
add
imul
lret
aas
loop
pop
fistpll
lods
jl
rcll
add
add
add
ficomps
jg
sar
xchg
lods
call
dec
arpl
cmc
mov
stos
les
das
loop
mov
dec
jbe
cmp
mov
gs
rorb
dec
stos
gs
mov
add
mov
icebp
push
pop
push
aam
pop
add
add
fsubs
xchg
push
or
add
add
imul
xchg
add
add
add
dec
inc
mov
pop
add
add
jmp
stos
or
add
add
cltd
cmp
add
add
xchg
aam
cwtl
xlat
sarb
or
add
add
fcmovbe
leave
movsl
xchg
lock
mov
movsl
and
int3
int3
int3
int3
sub
add
jne
in
pop
sub
inc
xchg
pop
call
ss
loopne
jp
jnp
or
add
add
jmp
xchg
fadd
pop
cmp
dec
js
jne
testl
mov
xlat
adc
or
add
cs
je
xchg
jnp
repnz
jne
stos
push
mov
sbb
add
or
mov
jmp
subb
push
mov
mov
add
add
js
addr16
out
adcl
add
add
iret
pushf
jnp
hlt
mov
dec
aas
jl
jne
add
and
add
add
add
adc
adcl
imul
push
out
pop
add
add
imul
imul
cmp
sub
add
adc
add
mov
add
pop
inc
sbb
mov
pop
adc
add
add
pop
mov
sbb
pop
push
je
mov
loope
mov
cltd
mov
fwait
cli
xchg
shlb
xchg
out
int
and
add
add
lea
xor
add
add
add
xchg
mov
aam
and
add
mov
or
adc
mov
loop
in
ficomps
or
add
add
pusha
repz
push
add
add
dec
loop
push
push
jne
lret
repnz
aas
add
ss
cltd
outsb
add
add
add
cltd
mov
inc
lret
bound
add
add
stc
cwtl
seto
mov
add
mov
sarl
jbe
dec
sbb
inc
inc
push
add
add
out
mov
test
movsl
mov
addr16
xchg
popf
xor
sbb
add
add
jns
pop
pop
stc
inc
lods
sahf
jo
nop
nop
nop
nop
pushf
int3
int3
int3
int3
int3
jae
or
or
add
add
xor
push
xorb
mov
add
add
fimuls
jmp
push
jmp
aas
xchg
mov
jne
repz
jl
sub
add
add
add
mov
adc
add
dec
pop
jne
adc
cmp
adc
in
mov
scas
push
sbb
loopne
mov
jecxz
xchg
push
inc
cmc
pop
popa
std
mov
and
mov
add
es
loope
xor
cli
lea
pop
mov
cmpsl
repz
cmpsl
xchg
psubsw
add
add
cld
sub
add
add
inc
sti
xchg
lahf
or
test
xor
add
add
add
push
cld
push
add
popa
cmc
ljmp
add
add
jp
jns
push
cmp
mov
jmp
push
aam
into
jnp
jno
cmc
lds
jge
jnp
lahf
sahf
mov
mov
cmp
xlat
js
mov
add
add
xchg
jno
pop
pushf
sub
dec
test
out
add
fsubs
pop
test
push
sti
shll
push
cmpsb
test
add
add
pop
pusha
sub
add
add
pop
scas
fdivp
in
scas
cmp
addr16
sti
push
in
arpl
add
add
lcall
or
add
add
sub
xchg
mov
adc
push
adc
lock
fidivrl
pop
imul
adc
cs
cmp
mov
es
scas
jp
sbb
ja
and
ss
or
add
in
ret
into
ss
cmpsb
or
add
add
push
add
out
xor
and
or
add
add
pusha
or
add
add
xchg
dec
sbb
pop
mov
ret
push
add
add
add
int3
int3
jbe
cmc
aas
jmp
adc
add
add
pmullw
pop
icebp
jge
cmc
fwait
push
icebp
sbb
add
add
scas
dec
push
ljmp
cmp
add
scas
pop
adc
out
add
add
cli
fiadds
add
add
lods
outsb
cmp
subb
loopne
sahf
xchg
xor
inc
or
fnsave
mov
test
subb
mov
mov
jge
lods
stc
push
rorb
add
add
test
push
std
lahf
ljmp
out
inc
cmp
add
inc
mov
jmp
inc
int3
int3
int3
int3
int3
pop
push
xor
push
add
add
mov
lcall
or
add
add
cmp
mov
mov
mov
in
hlt
mov
xchg
adc
xchg
sbb
xor
push
cli
push
mov
push
loop
and
pusha
xchg
lret
sbb
add
add
add
les
pop
add
add
mov
out
jmp
stc
xor
out
sub
push
push
xor
repz
cli
mov
xor
add
add
add
xchg
xor
mov
or
add
add
dec
loope
fmulp
adc
adc
add
mov
jmp
int
add
add
test
and
test
adc
cltd
jbe
push
out
test
dec
clc
fnsave
inc
adc
add
add
add
add
add
sub
mov
sub
inc
sub
inc
mov
push
int
sbb
insl
shl
test
add
add
push
ret
and
mov
ja
scas
pop
jne
push
aaa
dec
mov
lcall
dec
adc
cltd
out
pusha
xor
add
add
stos
adc
jne
push
mov
into
xor
aaa
jge
lods
mov
sbb
add
mov
add
add
add
push
pop
push
xchg
mov
pop
inc
and
add
add
popf
mov
aaa
xchg
push
mov
mov
mov
cmp
jg
call
rcrl
sub
clc
test
cmpsb
test
mov
out
in
cmpsb
xor
adc
ljmp
xchg
sub
hlt
cwtl
fcoms
xor
push
clc
inc
or
or
add
add
js
add
add
inc
rolb
nop
nop
nop
nop
mov
and
fnstenv
fldt
mov
xchg
cmp
pusha
and
stc
jle
add
add
out
testl
cmpsl
xchg
push
pop
ret
mov
pop
rcrl
xor
and
hlt
ret
push
jnp
mov
lock
jnp
mov
pop
pop
hlt
roll
test
mov
int3
int3
int3
int3
int3
outsb
xchg
push
mov
add
mov
sti
inc
outsl
cmp
push
lods
test
or
add
add
shl
movsb
je
pop
in
sbb
add
jl
loopne
xlat
popa
xchg
xor
inc
scas
mov
and
xor
jo
xor
add
add
or
add
add
inc
push
adc
mov
addb
add
add
call
cmp
iret
mov
add
add
or
shlb
xchg
mov
sbb
dec
inc
into
add
add
add
ljmp
xlat
sub
aad
adc
lahf
rcrl
and
add
add
add
stc
and
pop
ja
xorl
mov
pop
sub
add
add
add
inc
aaa
sti
sbb
and
add
add
add
iret
xchg
jne
add
add
fcoms
jno
pop
mov
pop
test
cmp
bound
add
pop
or
add
add
ds
mov
add
or
add
add
xor
xchg
nop
nop
nop
nop
nop
and
fstps
push
mov
fiaddl
add
aaa
addr16
pop
repnz
jb
adc
adc
jp
dec
add
add
add
add
add
inc
pop
outsb
roll
dec
push
add
add
push
scas
jns
xchg
mov
add
loope
lods
mull
fmul
popf
xchg
cmp
xor
andl
add
sahf
mov
into
sub
xor
add
lret
lret
sbb
out
popf
jmp
imul
arpl
adc
adc
or
das
loop
adcb
jne
push
add
fucomip
out
subb
add
mov
inc
cmp
xchg
clc
or
dec
mov
inc
adc
popa
jecxz
jnp
lahf
inc
cld
and
and
in
add
add
add
push
push
outsl
fbstp
push
std
xor
repz
out
fldcw
aad
nop
nop
nop
nop
nop
les
pop
clc
and
xor
stos
or
add
add
jno
out
mov
rclb
mov
mov
ja
addb
add
sti
fcomps
push
mov
add
add
add
xchg
mov
lcall
adc
push
mov
test
add
add
addr16
lds
jmp
icebp
test
pop
pop
test
jmp
ret
mov
add
or
add
add
repnz
xor
in
lods
jbe
cmp
add
add
cli
mov
add
add
repnz
add
add
mov
pop
mov
scas
pop
push
pop
add
add
pop
movsl
out
out
add
add
test
cs
test
cltd
pushf
fs
xor
sub
scas
leave
sub
xlat
sbb
in
cmp
xchg
sbb
mov
call
and
insl
test
pop
add
add
insb
cmovb
int3
int3
pop
popf
pop
push
mov
pop
sbb
xchg
add
add
jmp
repz
negb
loope
je
cmp
or
add
add
inc
fs
lds
and
add
add
dec
rclb
add
add
mov
enter
add
jl
pop
leave
sbb
jmp
lock
sub
add
add
add
dec
fs
leave
rep
inc
mov
cs
jb
jmp
lds
mov
sub
inc
mov
mov
mov
add
cmp
shlb
mov
nop
nop
nop
nop
nop
dec
or
roll
add
add
add
add
add
mov
add
add
pop
das
add
std
pop
addb
adc
daa
add
movsl
xchg
pop
sub
cs
jmp
xor
or
outsl
xchg
call
push
stos
jp
stc
add
and
jmp
mov
lret
mov
pop
add
add
sbb
mov
movsl
add
add
in
fistpl
xchg
scas
dec
aaa
rorl
mov
add
add
add
je
std
in
das
mov
mov
push
mov
fldl
add
inc
push
es
int3
int3
int3
int3
hlt
gs
popf
inc
lahf
loopne
mov
aas
stos
add
add
add
shr
jg
ficomps
mov
hlt
fbld
xlat
int
dec
lods
in
lock
push
adc
add
repnz
sbb
add
add
fdivl
pushf
mov
stos
cmp
add
addb
cmp
push
std
cmp
cld
push
add
add
sti
mov
inc
fistps
push
and
sub
leave
cmp
sahf
mov
shlb
scas
push
add
add
pusha
aam
jl
nop
nop
nop
nop
out
jo
dec
cltd
mov
mov
mov
pop
nop
nop
nop
nop
nop
scas
jg
cmp
add
add
inc
sar
aad
ret
mov
in
sbb
clc
arpl
stos
mov
js
scas
rcrl
inc
xor
ret
enter
jne
daa
iret
or
sub
sbb
add
mov
stos
shll
fdivrp
clc
iret
mov
push
sub
add
add
jbe
push
popf
mov
inc
and
add
cwtl
sbb
test
mov
ljmp
lret
je
dec
mov
dec
or
add
add
popl
cmp
jne
xor
add
fs
pusha
inc
or
imul
and
jg
test
and
dec
sub
cmc
ss
fstpt
pop
mov
clc
adc
fisttpll
dec
push
inc
adcb
add
jmp
test
mov
jmp
cli
jae
push
lret
sub
add
add
add
lcall
faddl
and
jl
andnps
mov
add
sub
add
add
faddp
loope
stc
pop
xchg
imul
mov
sbb
add
mov
scas
fmuls
sub
xor
fdivr
xchg
push
pop
or
add
add
push
aaa
sbb
sbb
sbb
pop
addr16
daa
push
jnp,pt
dec
aam
mov
adc
mov
std
lock
adc
call
sub
iret
push
cmp
cmp
inc
and
mov
mov
xor
push
jns
in
adc
icebp
cmp
insl
and
adc
sub
sub
cmpl
add
xchg
push
in
cs
insb
adcb
test
sbb
add
out
in
sub
pop
lods
pop
add
cmp
mov
test
add
pop
add
add
xchg
in
cwtl
xor
add
aad
pop
mov
aaa
add
add
add
cs
pop
add
add
leave
mov
pop
test
int3
int3
add
add
add
rclb
add
add
mov
add
add
mov
int3
int3
int3
int3
int3
pushf
dec
ljmp
test
cmpsb
aaa
aad
cmpb
mov
xchg
lret
jne
out
inc
push
repnz
enter
add
subb
int
into
sub
in
inc
push
insl
mov
imul
or
add
add
call
aaa
mov
daa
push
sbb
mov
jl
popf
es
push
cmpsl
jp
fidivrl
shlb
aas
inc
imul
mov
dec
movsl
pop
push
insb
sub
cltd
popa
sbb
xchg
insl
and
int3
int3
int3
int3
popf
lods
loop
mov
add
sysret
add
add
testl
add
add
mov
out
jae
jae
lret
js
stc
in
xchg
add
add
add
add
add
pop
repz
or
add
add
add
add
fcmovne
xchg
add
add
cld
push
xchg
cmp
add
add
in
sub
jbe
sub
lock
pop
add
add
xor
mov
mov
add
pop
idivl
insb
cmp
add
add
add
mov
scas
cmpl
aaa
lret
in
inc
adc
rorb
and
sbb
sub
adc
add
cmc
lock
addl
xchg
pop
inc
fstpt
pop
and
sub
insl
mov
mov
inc
je
mov
mov
in
mov
mov
and
pop
rorl
inc
sub
shl
xchg
je
scas
adc
xchg
lods
leave
push
add
add
xchg
adc
adc
add
add
xlat
cmp
cmp
cmp
pop
fwait
and
mov
jne
xorl
jns
test
or
add
add
aas
xchg
push
lahf
sbb
pop
es
jnp
jns
dec
leave
cmp
mov
xchg
cmp
cmp
or
add
add
add
add
xor
and
add
mov
ja
popf
jne
cmp
add
add
add
pop
or
add
add
movsb
out
jb
shll
add
add
mov
adc
scas
mul
or
add
add
pushf
mov
mov
sti
dec
or
add
add
arpl
movsl
xchg
pop
mov
jl
and
add
add
addr16
mov
es
mov
movsbl
add
lods
in
add
add
add
outsb
mov
lds
movsl
das
loop
shlb
test
inc
roll
add
add
cmp
repnz
mov
test
aaa
pop
push
fnsave
sub
xchg
fmuls
add
add
test
fisubs
cltd
add
add
add
data16
pop
jbe
dec
call
and
add
add
orl
mov
push
inc
sub
aaa
icebp
mov
push
add
add
stc
add
add
add
add
pop
ja
out
push
add
add
pushf
mov
loop
mov
fidivl
add
add
jbe
cmp
shlb
nop
nop
nop
nop
nop
push
mov
pop
jecxz
les
ffree
inc
popf
fcomps
repnz
shrl
ficoms
or
add
mov
sub
in
jns
outsl
add
add
add
mov
pop
add
add
pop
jl
and
add
add
inc
test
add
add
add
test
das
arpl
mov
shl
repz
add
add
dec
ljmp
add
add
jns
add
add
dec
mull
scas
je
jle
jl
pusha
movsl
stos
popl
leave
dec
pop
push
jle
adc
stos
lods
pop
hlt
or
add
add
mov
popa
xor
pop
ret
psllw
sub
jge
lds
mov
repnz
add
add
add
xor
in
jo
mov
push
in
mov
fsubrp
push
cmp
add
add
add
adc
pop
add
add
add
add
add
pop
orl
pop
in
loope
scas
sldt
add
add
call
call
adc
cmp
add
add
add
mov
test
loopne
loop
cmp
notrack
arpl
add
add
adc
lret
in
xchg
mov
dec
fidivl
add
add
ret
push
scas
test
nop
nop
nop
nop
in
insb
ret
cmp
add
add
add
sti
sub
add
add
pop
inc
xchg
out
and
repz
lcall
lret
cmp
dec
add
add
add
add
fwait
int3
int3
int3
int3
int3
imull
in
and
int3
int3
int3
int3
js
cltd
and
add
add
aam
jge
ret
add
add
stos
popa
js
pop
imul
add
add
add
cmp
or
add
add
mov
sti
mov
cs
lahf
aas
xchg
repnz
outsl
ret
lea
and
in
in
xchg
and
inc
sahf
jle
ret
ret
stc
dec
dec
mov
scas
data16
add
add
push
mov
icebp
mov
ret
add
push
fdivs
add
add
repnz
adc
sbb
data16
aas
dec
or
outsb
pop
icebp
dec
adc
dec
fidivs
mov
and
jb
add
mov
jb
inc
dec
or
add
add
cs
lret
in
jo
imul
mov
add
xchg
clc
pop
add
add
fdivp
shlb
xor
jecxz
push
xor
add
add
xchg
push
sub
xchg
push
add
add
push
jg
jnp
add
add
jnp
mov
add
add
popf
cltd
pop
xchg
lret
adc
jmp
cli
push
mov
xchg
jecxz
xchg
inc
add
add
add
mov
cwtl
inc
inc
in
mov
ret
pop
adc
hlt
and
mov
aas
ret
mov
sbb
add
add
test
pop
int
dec
mov
pop
adc
and
mov
add
add
push
mov
and
or
add
add
ficoms
stc
inc
xor
sub
sbb
sbb
pop
adc
sbb
inc
xor
rol
enter
sub
pop
pop
dec
adc
sub
pop
or
add
add
sahf
std
mov
or
clc
pop
les
sub
xchg
add
add
mov
loopne
xchg
repz
dec
jno
lods
add
add
add
scas
jmp
push
and
add
ret
pushf
dec
add
add
add
push
pushf
aad
xchg
sub
sarb
scas
push
inc
mov
and
add
adc
add
add
lcall
add
rcll
imul
or
add
add
rolb
add
add
outsl
mov
js
jne
lcall
add
add
dec
outsl
adc
int3
int3
int3
sub
js
pop
add
add
cs
pop
add
add
cli
pusha
fwait
sti
es
mov
or
add
add
or
xchg
insb
cmpb
std
test
enter
lret
cmp
lret
pop
data16
lahf
das
mov
stos
push
je
sub
pop
add
add
pop
ljmp
mov
add
sub
shr
adc
nop
nop
nop
nop
or
add
add
cmp
inc
pusha
or
add
add
jmp
sbb
mov
xchg
xor
xor
call
movsb
mov
add
add
adc
adc
les
sbb
std
cmp
das
movsl
jbe
addr16
hlt
xorb
test
fadd
stos
adc
fldcw
or
add
add
add
adc
int3
int3
int3
or
add
add
cmp
int3
int3
int3
int3
int3
rol
mov
iret
dec
push
mov
cwtl
cs
addb
adc
or
xor
data16
add
add
pop
cli
push
add
add
push
and
add
add
lret
mov
cli
cmp
inc
xchg
and
dec
subb
add
add
add
cmp
inc
mov
add
add
mov
ja
push
sub
imul
loop
mov
pushf
mov
inc
push
mov
sub
mov
add
inc
inc
adc
jl
sbb
lret
dec
test
icebp
and
rcrb
jl
cs
and
leave
cltd
lods
xchg
sub
and
mov
subl
lahf
cmpsl
add
add
add
add
add
add
pop
cmp
or
add
add
enter
insb
out
add
add
add
jmp
pushf
sub
xor
add
add
mov
mov
add
rolb
add
xchg
pop
ss
imul
sbb
add
fdivs
inc
adc
rcr
call
and
stos
mov
mov
inc
scas
xor
add
add
jno
test
add
push
ret
xchg
shl
int3
int3
int3
int3
int3
push
push
cmp
stos
mov
add
add
xchg
lret
aad
call
cmpsl
mov
dec
imul
mov
arpl
sbbb
add
add
jnp
dec
dec
pop
add
add
or
pop
call
add
add
add
pop
jp
add
add
sub
mov
mov
cmp
jne
data16
mov
ret
or
add
add
es
out
repz
or
add
add
lds
test
es
inc
adc
aad
inc
outsb
jecxz
bound
lcall
push
add
add
mov
out
and
fdiv
addl
adc
lcall
pop
dec
cmp
add
add
sti
or
add
add
cmp
adc
int3
int3
int3
int3
outsb
ret
jmp
stos
xor
lcall
or
add
add
pop
or
add
add
xor
cld
ret
pop
sbb
jno
mov
mov
aad
jmp
int
cld
int3
int3
int3
int3
int3
lea
stos
and
add
mov
cmpsl
insb
das
iret
les
loopne
add
add
add
jns
add
add
imul
push
lock
lea
add
cmpsl
fwait
in
pusha
imul
add
add
add
notl
idivl
or
add
add
cmp
add
sti
pop
flds
add
add
out
xchg
stos
rcrl
xchg
inc
sbb
push
lret
cs
ja
mov
push
and
ss
in
gs
pop
call
adc
dec
dec
es
mov
movsl
cmp
and
pop
push
add
add
xchg
pushf
sti
xchg
xchg
jae
adc
fnstcw
mov
rcrb
add
and
add
stc
sbb
add
add
jb
dec
adcl
int3
int3
int3
int3
int3
js
add
add
js
cmpsl
insb
into
pop
add
add
push
mov
push
aas
test
in
add
add
mov
dec
sbb
add
add
fnsave
fsubrs
ret
outsl
imul
push
pop
pusha
mov
cmp
jne
dec
jae
std
mov
pop
js
addb
add
add
or
add
add
jmp
test
fcoml
call
mov
push
or
add
add
push
ret
xor
jbe
jle
pusha
xchg
fiaddl
fidivrs
add
add
mov
test
daa
add
add
add
mov
and
or
add
add
out
fildl
add
add
mov
and
mov
aaa
and
dec
add
add
int3
int3
int3
int3
jne
int3
int3
int3
int3
int3
pop
pop
xchg
mov
jge
mov
xchg
cmpb
cld
cmpsl
inc
jns
adc
jp
add
add
add
mov
jbe
das
cmc
rcl
mov
mov
mov
mov
mov
aad
ret
pop
sbb
xchg
add
add
popf
test
add
add
dec
mov
sub
pop
xchg
add
add
add
cmpsb
cmpsb
sub
pop
sbb
xor
dec
shll
add
add
mov
adc
aad
and
and
jle
inc
xor
or
add
add
mov
jmp
or
add
add
add
add
add
add
add
add
fcomps
add
lcall
fstpl
push
hlt
push
repnz
lea
dec
sbb
outsb
xchg
pop
or
pusha
push
jo
and
data16
pop
aad
fs
add
add
out
xchg
xor
jo
push
fldl
test
dec
outsb
call
stos
aam
dec
fistpll
push
add
xchg
call
mov
adc
mov
ficompl
sbb
xchg
addr16
fcmovb
inc
cmp
gs
add
add
js
test
pop
xchg
scas
fmuls
jo
lds
push
add
bnd
leave
adc
add
add
add
xchg
jbe
jp
dec
movsb
in
jl
lods
pop
movsl
gs
xchg
divl
or
add
add
mov
arpl
clc
pop
or
add
add
lock
or
add
add
imul
mov
inc
jl
fidivrs
add
add
add
add
add
test
push
stos
mov
pop
inc
mov
and
mov
xchg
lret
call
add
add
add
jns
dec
enter
imul
sub
xchg
test
and
mov
mov
ds
repnz
mov
mov
int3
int3
int3
int3
int3
mov
pop
adc
add
ret
add
das
adc
sub
jl
mov
gs
sbb
insl
mov
jge
mov
scas
and
inc
leave
cs
mov
xchg
movsl
xchg
nop
nop
nop
nop
nop
daa
adc
or
add
add
add
add
add
frstor
imul
mov
test
out
outsl
cmc
dec
push
adc
push
in
flds
in
or
add
add
mov
popa
add
add
add
stos
and
add
add
xor
mov
inc
sub
out
addr16
pop
jb
incb
dec
inc
mov
je
sub
test
sub
add
add
sub
call
add
add
add
mov
test
jbe
jns
add
add
mov
pusha
mov
mov
fidivrs
mov
add
test
je
xchg
push
adc
jmp
add
sbb
repz
and
hlt
hlt
xchg
xchg
shrl
sbb
mov
mov
arpl
cli
hlt
xchg
xor
repz
inc
fimull
ds
aad
add
mov
ds
add
add
and
push
cmp
in
and
mov
cmp
push
lret
cmp
fbstp
sti
add
add
sub
mov
add
add
sub
or
pop
jns
add
add
clc
pop
das
aas
xchg
xor
pop
int3
int3
int3
int3
int3
sarb
add
add
addl
subb
mov
dec
cwtl
dec
movsb
fwait
sbb
fs
arpl
fdivp
pop
add
add
push
push
adc
add
add
add
adc
add
add
xor
in
cmp
mov
fs
jnp
inc
adc
imul
fidivs
pop
xchg
adc
cmp
addr16
popa
loopne
sub
add
add
pop
push
popa
loop
xor
sub
es
cmpsl
subb
add
add
notl
or
add
xchg
sti
push
out
and
mov
pop
cwtl
cwtl
insb
out
inc
js
and
cmc
adc
add
rcll
cmp
add
mov
je
push
lds
cmp
lods
mov
stc
xchg
mov
lods
mov
xlat
stos
jno
pop
xchg
nop
nop
nop
nop
nop
insl
dec
stc
in
jae
add
add
add
push
sbbb
xor
out
xor
jg
jmp
in
outsb
or
insb
add
add
add
sbb
movsb
lar
add
add
add
add
add
mov
stos
sub
push
loopne
mov
loop
aas
pop
push
or
add
add
outsl
pop
adc
aaa
jge
rolb
add
add
imul
mov
adc
insl
pop
push
arpl
int3
int3
int3
int3
or
add
add
movsb
jmp
daa
cltd
xchg
jg
jmp
int3
int3
int3
int3
int3
adc
jns
lea
cs
subb
loopne
daa
or
mov
push
push
mov
pop
add
add
test
pop
imul
cmp
adc
notb
add
jg
xlat
aas
or
add
add
add
ficomps
fisubrl
add
add
add
bound
mov
push
add
add
imul
pusha
dec
push
cmp
mov
fs
nop
add
add
dec
push
mov
int3
int3
int3
int3
int3
lds
gs
in
ret
fs
idivl
shll
sub
add
or
add
add
and
cmove
add
add
lahf
sbb
inc
push
clc
xor
add
mov
mov
jge,pt
mov
cmc
inc
inc
mov
pop
test
mov
xor
cltd
jbe
cmp
cld
mov
rcrl
mov
clc
lret
pop
adc
cmc
xor
add
add
or
add
add
cmp
fsubrl
push
les
mov
stos
aas
mov
and
push
pusha
cmp
je
mov
jmp
testb
add
add
sbb
cmpsl
push
sbb
mov
cmp
mov
adc
imul
sub
out
jbe
lods
loop
fdivl
lods
adc
jmp
imul
xchg
pop
idivl
cwtl
xlat
xchg
movsl
add
add
add
mov
inc
sub
int3
int3
int3
int3
int3
mov
out
aad
mov
gs
fnsave
int3
int3
int3
int3
jle
loope
movsl
and
mov
add
add
mov
mov
loop
fcoms
movsb
jnp
out
push
adc
xchg
mov
adc
add
push
in
imul
sbb
add
add
mov
test
push
fldcw
push
andl
sbb
jae
inc
adc
sub
out
div
sub
in
ss
dec
mov
sub
sti
xor
dec
cmp
negb
lahf
mov
movsb
inc
pop
data16
pop
add
add
add
add
add
iret
lea
rcrb
add
add
push
js
sub
adc
add
lea
mov
xchg
pop
imul
or
push
dec
or
add
jg
test
in
repnz
in
dec
mull
data16
add
add
inc
mov
je
mov
sbb
cmpl
mov
sub
cli
xchg
dec
mov
jne
add
add
pop
xchg
mov
rorb
iret
cmp
jbe
adc
data16
repz
sbb
out
xorb
mov
rcrb
adc
ljmp
add
add
mov
or
add
add
adc
cmp
insl
push
add
add
push
sarl
cltd
out
lds
adc
pushf
stos
add
add
add
dec
adc
scas
lods
or
add
add
pop
jmp
mov
push
lahf
sbbb
add
add
add
je
xchg
test
loop
lds
pop
mov
test
or
add
add
aad
and
add
add
add
add
add
add
lret
push
fwait
push
mov
add
cmc
push
sbb
clc
lret
mov
and
fadds
add
add
shlb
cwtl
das
daa
jp
pushf
or
add
add
mov
mov
jbe
sbb
test
dec
jae
push
dec
jb
push
inc
daa
pop
rcrl
add
add
fisubl
mov
add
imul
loop
add
add
add
mov
sub
sbb
rorl
or
add
add
inc
jl
push
arpl
sbb
add
add
fsubs
in
inc
rorb
add
add
adcb
lahf
in
loope
loope
add
add
add
add
add
add
xchg
call
adcl
imul
add
mov
ficomps
nop
nop
nop
nop
nop
jmp
push
add
add
popf
das
push
and
adc
xchg
xchg
mov
push
add
add
add
outsb
push
adc
add
add
pop
scas
lret
jnp
and
cmp
arpl
sbb
add
add
sub
sub
add
lods
inc
push
adc
fiaddl
add
add
das
or
or
add
nop
nop
nop
nop
nop
push
sahf
sbb
add
enter
fstpl
jo
add
add
jo
fisubs
cmp
repz
sub
add
add
add
mov
adcl
dec
jne
or
add
add
dec
mov
pop
es
push
add
add
leave
cs
sub
test
out
mov
call
jmp
and
inc
lret
sahf
mov
fisubrl
push
loop
arpl
push
sub
pop
add
add
add
clc
repz
ds
jl
and
aaa
xor
dec
xchg
roll
add
add
test
call
push
sbb
test
and
jge
in
adc
je
mov
add
dec
lods
fistpll
out
add
lcall
add
cvtps2pi
xchg
jne
sbb
int3
int3
int3
int3
int3
cmp
add
add
push
add
clc
out
in
out
jbe
inc
push
fimuls
sbb
mov
inc
lret
nop
nop
nop
nop
nop
repnz
dec
adc
dec
sbb
scas
outsb
sub
dec
arpl
rorl
or
add
add
mov
jae
jb
jno
jo
sub
mulb
cmpb
jp
cmp
inc
aam
leave
pop
in
cmp
sbb
arpl
mov
jecxz
or
add
add
dec
sub
add
xor
add
add
arpl
ret
fisttpl
add
add
mov
jge
cmpb
or
lret
outsl
daa
in
sub
sub
jge
and
add
add
into
jne
sbb
add
add
inc
repz
push
and
pop
add
add
add
sahf
fwait
xchg
repz
fs
sub
add
add
frstor
fisubs
jae
rorb
sbb
nop
nop
nop
nop
or
add
add
test
insl
sbb
mov
and
roll
cmp
pop
ffree
cltd
sub
insl
ret
je
cwtl
xchg
jg
addb
jge
mov
lea
sub
inc
mov
sbb
gs
add
adc
jnp,pn
nop
nop
nop
nop
nop
cmpb
add
add
add
cld
xor
jbe
or
add
add
push
inc
mov
jno
mov
fnstenv
imul
add
and
add
add
out
movl
daa
cmpsb
xchg
inc
dec
add
cmpsb
jle
dec
sarl
push
dec
out
mov
test
push
push
ss
add
add
stos
fsts
loopne
add
adc
mov
or
or
add
add
aam
ja
daa
cmp
xor
arpl
add
add
add
pushf
adc
sbb
scas
negl
daa
pop
pop
ljmp
jmp
mov
and
add
add
in
mov
test
leave
test
add
add
shl
loope
addr16
sahf
aas
mov
dec
dec
xlat
mov
leave
add
add
add
push
imul
jp
cmp
int3
int3
int3
jge
aam
mov
and
int3
int3
inc
sub
xor
out
mov
lods
lock
bound
push
jle
cmp
push
jae
mov
mov
sbb
and
add
pop
outsl
or
nop
nop
nop
nop
jb
sbb
mov
cmp
lods
sub
mov
out
sbb
jg
xchg
jg
dec
pop
dec
std
sub
add
add
lods
popa
sub
xchg
xchg
push
data16
mov
adc
mov
cmpsb
sarl
je
inc
pop
jb
adc
or
add
add
add
shll
inc
mov
cwtl
shll
sub
add
or
add
add
mov
add
test
pop
cmp
add
add
or
add
add
fnsave
xchg
lret
mov
xor
aaa
pop
mov
pusha
sbb
or
add
add
xorb
mov
jl
and
in
cmp
andl
sbb
xor
xor
hlt
aas
xchg
clc
or
add
add
mov
sbb
add
add
mov
outsb
in
mov
cmpl
add
stc
scas
movsb
fistpl
cltd
mov
mov
pushf
iret
sub
fimull
add
add
sarb
sti
xor
test
mov
cmp
cmp
jg
jmp
out
int3
int3
int3
int3
out
aam
sbb
push
add
mov
icebp
dec
enter
loopne
and
add
xor
int3
int3
int3
int3
fmul
int3
int3
int3
int3
lods
dec
stos
outsl
sub
jp
fsubrl
mov
dec
jo
mov
mov
das
jg
outsl
mov
add
add
pop
add
add
pop
in
dec
call
xlat
xor
add
add
pop
pop
add
add
add
push
xchg
lret
in
jle
fnstsw
dec
add
add
add
adc
wbinvd
add
add
rcrl
jp
mov
mov
jno
lret
hlt
ffreep
lods
mov
xlat
adc
mov
sahf
orb
add
addr16
mov
inc
imul
filds
scas
jp
mov
lea
shll
jmp
int
pop
cmp
jge
add
pop
cmp
fadds
fbld
sahf
repz
das
icebp
xor
jbe
and
sub
lock
jp
lods
std
sbb
and
gs
add
push
jl
dec
jmp
in
loop
inc
sbb
enter
mov
je
je
jns
adc
and
xchg
hlt
dec
lahf
in
sbb
clc
add
cli
ret
pop
pcmpgtw
push
mov
adc
push
xorb
sahf
sub
ds
xor
add
in
add
xor
out
out
add
add
add
jae
pop
add
add
add
add
add
add
add
fst
ret
rcrb
mov
ds
pop
or
arpl
adc
jmp
mov
sbb
mov
lods
cmpsl
xchg
int
int3
int3
int3
int3
int3
pop
out
out
jnp
das
out
test
cltd
dec
sub
stos
enter
and
adc
pushf
mov
fldl
mov
scas
cmc
push
aad
fstl
mov
andl
sub
mov
test
push
sub
or
add
add
mov
dec
or
cmp
stc
add
add
frndint
push
ds
hlt
inc
int
dec
xchg
jl
pop
les
cmp
cmp
adc
mov
adc
add
add
jbe
andl
adc
add
add
mov
adc
sbb
fimuls
test
imulb
xor
mov
add
sub
fidivl
push
jb
lock
dec
add
add
add
xlat
add
daa
addr16
mov
pop
out
mov
scas
adc
jns
mov
testl
fidivs
mov
add
add
mov
fdivrl
mov
jle
int3
int3
int3
int3
int3
into
pop
je
push
sub
leave
data16
add
add
inc
dec
leave
in
push
jp
jmp
mov
add
add
mov
repz
cmp
add
adc
add
add
xor
xchg
add
add
add
jnp
jl
shll
or
add
add
push
repnz
scas
outsl
xor
push
cwtl
jl
es
test
push
les
or
add
add
cmpsl
add
add
loope
ja
lods
cmp
int3
fcomps
and
int
fimuls
push
push
add
test
add
add
dec
mov
out
call
fimull
shlb
inc
in
rcrl
in
xor
add
aad
sbb
add
add
fiaddl
sbb
cltd
test
add
lea
jl
push
int3
int3
int3
int3
int3
mov
into
pop
imul
shrl
and
lcall
int3
int3
pop
or
add
add
sarb
fwait
sbb
int
insb
mov
mov
ret
lret
push
add
add
mov
leave
jnp
outsb
lods
sbb
stos
inc
movsb
imul
xchg
ljmp
add
add
add
dec
sarb
cmpsb
dec
repnz
mov
xchg
jne
dec
test
and
add
add
add
add
mov
ret
sub
xchg
lods
stos
push
fstpl
or
add
and
mov
and
add
add
add
int3
mov
mov
sahf
and
div
insl
push
enter
or
add
add
fidivs
jae
adc
fst
jl
jecxz
les
in
cmp
ret
xorl
les
jecxz
inc
cs
popa
push
push
cmp
hlt
xchg
add
add
xchg
nop
nop
nop
nop
inc
xor
inc
and
add
or
add
add
xlat
scas
dec
fdivrs
fs
xchg
out
and
aaa
sahf
out
mov
xchg
sub
adc
jle
jae
mov
in
test
sbb
sbb
loopne
test
mov
scas
addr16
xchg
xor
sbb
cs
add
add
add
sub
sarb
cmp
in
add
add
add
sub
add
psubsb
add
add
fs
pusha
bound
icebp
sub
add
and
pop
imul
sub
add
rcr
cltd
cmp
aaa
jp
add
add
insb
repz
ret
mov
push
pop
xor
iret
jge
dec
dec
lret
stc
mov
je
test
test
pop
filds
clc
mov
sbbb
add
das
xchg
out
sub
jns
test
xor
fwait
mov
push
add
add
test
fildl
add
add
xchg
fadds
popa
idivb
mov
ret
outsl
lcall
add
ss
add
add
pop
mov
sbb
push
or
leave
icebp
shrb
bsr
add
dec
push
mov
pop
adc
loopne
mov
xchg
int
shlb
popf
pop
add
add
add
add
add
jnp
shl
push
and
pop
jp
xchg
in
scas
sbb
mov
daa
dec
mov
add
add
repz
add
dec
mov
lds
mov
movsl
loopne
inc
jb
neg
rolb
and
and
mov
add
add
cmp
jbe
les
gs
xchg
jp
adc
sub
and
cmp
popl
add
xlat
pop
add
add
mov
icebp
xor
popa
arpl
cli
fdivrs
add
add
add
inc
mov
in
xchg
push
icebp
adc
adc
pop
push
ret
xor
lods
or
add
dec
adc
pop
push
push
cmpsb
cmp
dec
test
add
add
ret
sbb
out
adc
stc
mov
lods
lds
add
add
add
add
add
stc
or
es
insl
insb
aaa
cltd
movsb
xor
into
jge
inc
hlt
push
negb
sahf
or
pop
imul
int3
int3
mov
add
add
jbe
cmp
jns
out
add
stc
dec
xor
data16
cmp
mov
loop
sub
sbb
mov
inc
mov
jo
ss
dec
ljmp
add
int
mov
inc
inc
in
fistps
mov
sbb
shrl
call
into
cmp
jge
inc
dec
lods
insb
jmp
or
add
add
add
cmp
pop
loope
in
mov
cs
inc
imul
aaa
xor
inc
add
and
cwtl
xchg
aas
add
add
add
pop
jmp
sbb
test
call
push
pushf
mov
inc
xchg
scas
jmp
mov
push
std
aaa
test
pop
fs
sub
das
fimull
adc
adc
add
lret
std
cld
das
insb
test
in
mov
lds
ret
push
xchg
mul
sahf
cmpsl
outsb
xor
xchg
inc
add
add
add
stc
dec
and
mov
mov
adc
add
add
cmp
add
add
fxch
pop
sub
insl
shll
sbbl
or
add
add
data16
mov
inc
je
mov
stos
mov
scas
sbb
jg
jns
fistps
push
add
add
cld
jnp
adc
add
das
fldl
add
add
mov
movb
add
add
mov
fs
negl
cmc
push
incb
stos
xchg
xor
jge
std
roll
frstor
and
xchg
xchg
aaa
push
xor
test
movsb
dec
mov
mov
xor
add
inc
xchg
bound
add
add
es
dec
and
jo
daa
mov
and
lock
orl
setge
shlb
lds
add
sti
xchg
inc
es
in
xchg
insb
push
lret
mov
sbb
xor
loopne
add
add
push
dec
sub
nop
nop
nop
nop
nop
loopne
pop
inc
dec
ljmp
nop
lret
add
adc
sub
xchg
xor
iret
dec
iret
scas
repz
mov
bswap
int3
int3
int3
int3
jmp
dec
rcrb
push
sahf
dec
add
add
add
jo
pop
scas
popf
scas
icebp
mov
loope
or
add
add
mov
mov
dec
clc
pop
scas
pop
xchg
nop
nop
nop
nop
nop
dec
popa
int
dec
jecxz
jmp
lea
add
add
sti
pop
xchg
cli
fs
xchg
scas
push
mov
adc
push
or
add
add
or
add
add
cmp
cmp
add
cmp
xor
push
inc
mov
sbb
or
add
add
insl
out
and
add
add
xor
xchg
popa
pop
and
call
in
enter
add
mov
jecxz
add
inc
inc
xor
paddsb
aad
stc
arpl
pop
or
add
add
adc
lds
mov
push
inc
daa
xor
in
aam
cltd
push
dec
mov
pop
mov
mov
mov
or
add
add
pop
and
cmp
xor
dec
call
adc
cbtw
sbb
ss
out
adc
push
add
add
pushf
push
and
out
sbb
jo
adc
std
outsl
jle
jae
cmpsl
mov
xlat
fwait
into
sub
rorb
insb
push
jb
dec
dec
les
push
dec
lods
pop
sahf
into
lret
xchg
mov
cmp
add
add
pop
jg
pop
lods
in
faddl
rcll
test
add
inc
adc
add
add
add
add
xchg
js
dec
aas
inc
add
add
add
dec
pop
mov
lcall
rcrl
xor
add
insl
jmp
shll
add
adc
add
enter
je
insl
fistl
cltd
sub
testl
xor
dec
jle
hlt
jae
daa
sbb
adc
push
cmp
jg
xchg
mov
or
xchg
ja
cwtl
pop
mov
jmp
mov
mov
and
ljmp
lods
xor
sbb
jo
or
add
add
add
add
add
add
cld
in
bound
hlt
in
push
add
add
aam
ja
xor
mov
pop
sbb
add
or
add
add
mov
mov
sub
idivb
out
xlat
mov
add
add
addr16
mov
cmpsl
icebp
idivl
mov
xor
pop
call
sti
fisubl
add
add
xor
adc
bound
add
and
stc
inc
and
data16
push
inc
inc
inc
cmp
jl
add
inc
xor
sbb
add
add
shrl
stos
dec
cmpsl
pop
outsb
fistl
add
sahf
fnsave
push
insl
das
dec
stc
movsb
int
bound
sbb
repz
lods
dec
lods
repnz
mov
sbb
iret
or
add
add
add
add
faddl
add
add
xchg
or
add
add
mov
fs
push
and
lret
sti
shlb
jne
imul
add
inc
aad
dec
es
cmp
out
fnsave
adc
shr
rolb
add
das
sbb
pop
int3
int3
int3
int3
int3
sbb
push
icebp
clc
add
add
add
jns
stos
jns
jns
inc
xor
ss
dec
aam
push
adc
jnp
popa
mov
sbb
call
sub
add
add
cs
add
jnp
push
add
add
add
divb
and
cmpsl
pop
mov
mov
jo
cld
shl
mov
and
flds
clc
mov
or
add
add
stc
xchg
je
xchg
js
pop
add
add
add
add
in
cs
sub
lret
or
mov
arpl
add
mov
sbb
add
dec
shll
xchg
lret
and
dec
lret
xchg
sbbb
pop
push
lret
push
dec
and
mov
mov
sbb
add
add
fsubl
add
add
add
add
add
add
cli
test
mov
xor
add
add
adc
jg
dec
adc
push
and
int3
repz
pop
or
push
add
jno
add
add
pop
outsb
mov
outsl
mov
add
add
loope
mov
xchg
inc
pop
roll
andl
add
add
add
xlat
push
and
mov
xchg
das
pop
jns
inc
mov
sahf
xor
imul
xchg
or
add
add
or
xor
int3
int3
int3
int3
imul
cmp
int3
int3
int3
int3
int3
sarl
mov
push
aaa
jb
fistpll
add
add
fsubl
stos
arpl
rorl
add
add
dec
push
call
xor
nop
nop
nop
nop
nop
xchg
cmp
or
or
add
add
pushf
lret
xchg
std
jle
lret
pop
inc
nop
nop
nop
nop
nop
mov
popf
scas
negl
sar
les
movsl
test
jbe
lock
inc
shlb
mov
lcall
stos
sbb
add
add
jnp
imul
fcompl
mov
les
add
add
or
sahf
push
dec
mov
fucom
out
lret
cltd
and
mov
loope
inc
das
mov
ret
les
mov
sbb
add
add
xchg
fidivs
push
int
push
xchg
cmc
insb
pop
jp
popa
dec
xchg
or
jno
nop
nop
nop
nop
jp
dec
and
inc
call
jns
push
shl
pop
add
add
hlt
push
pop
add
add
hlt
mov
or
add
add
imul
in
add
add
xchg
fwait
sbb
int3
int3
int3
int3
int3
xchg
inc
call
mov
mov
ljmp
cs
mov
push
jmp
jge
cmp
add
insb
mov
lods
adc
loopne
pusha
lds
or
cmp
cmp
add
add
les
mov
add
adc
int3
xchg
ja
and
push
fnstsw
xor
push
fistpl
or
add
add
mov
xchg
pop
sbb
cmp
add
add
dec
jg
clc
mov
adc
xchg
dec
into
jmp
shlb
clc
jne
cmp
or
add
add
xor
mull
mov
nop
nop
nop
nop
nop
cmp
dec
cmp
push
ljmp
mov
outsb
xchg
push
into
mov
push
in
lds
add
add
add
inc
xor
int
push
dec
outsb
dec
and
mov
and
add
sub
xchg
adc
fdivr
and
xor
in
ret
pop
jno
and
add
inc
add
add
xor
add
add
int
jns
pop
add
add
adc
and
je
add
add
arpl
cmp
cmp
add
add
adc
popa
xchg
cmp
mov
in
or
rcrb
test
add
add
jl
sbb
enter
cmpsl
sti
clc
pop
cmpsl
aad
fucomp
aam
sbbl
jle
nop
nop
nop
nop
es
pop
add
add
cli
push
pop
or
add
add
pop
jno
fwait
xlat
arpl
lods
stc
inc
xor
imul
sub
sbb
add
inc
jns
fsubrs
push
sbb
jmp
mov
in
imul
add
add
int3
int3
int3
int3
fcoms
add
shl
and
or
add
inc
or
add
add
div
jmp
or
xor
std
mov
push
add
add
cmp
mov
lods
push
push
add
adc
push
add
add
js
out
xchg
loop
mov
adc
and
rclb
xor
add
add
arpl
adc
out
jbe
jp
pop
rorb
jle
inc
lock
stos
iret
mov
fcomp
inc
mov
xor
int3
int3
int3
int3
ss
mov
cmp
idivl
stos
fimull
mov
add
or
add
add
dec
xor
add
addr16
push
ds
clc
iret
or
add
add
push
aam
and
mov
rcll
aad
inc
push
sub
leave
fld1
push
add
add
out
leave
sbb
arpl
inc
mov
arpl
sbb
add
add
subb
lcall
movsb
xor
jo
add
add
lahf
pop
add
add
add
iret
and
add
sub
mov
sub
add
jno
sbb
inc
scas
aaa
mov
adc
sbb
divl
adc
add
mov
inc
into
adc
sbb
dec
cmc
push
icebp
ficomps
fmull
add
add
lcall
in
xchg
test
call
inc
outsb
pop
cmp
das
mov
jp
xchg
push
fidivl
pusha
mov
nop
nop
nop
sbb
sub
add
push
push
jl
es
movsl
jp
or
add
add
cmpsb
lret
or
and
mull
fs
add
add
and
add
add
inc
call
rclb
nop
nop
nop
mov
scas
mov
mov
xchg
lods
jne
fucom
sti
es
std
xchg
jno
cli
or
add
add
xor
jecxz
loope
add
mov
aas
jle
dec
std
scas
loope
sub
adc
sub
or
add
fwait
and
and
scas
mov
xchg
jl
add
add
cld
lods
mov
in
das
jbe
mov
add
lret
mov
sahf
outsl
mov
insl
and
add
add
rcrl
int
sbb
add
add
push
add
add
add
aaa
jp
andb
pop
and
ffree
movsl
jo
pop
xor
mov
add
pushf
test
sarl
xchg
jg
std
sbb
add
enter
pop
cmp
add
nop
nop
nop
nop
nop
mov
outsb
xchg
push
add
pop
dec
push
popf
jno
aad
nop
nop
nop
nop
cmp
adcl
adc
jb
shll
aas
adc
std
sbb
add
add
push
scas
cwtl
jecxz
mov
mov
stos
inc
sahf
mov
lock
fisttpl
aam
xchg
leave
stos
imul
bound
add
out
sub
inc
arpl
sbb
outsb
daa
jp
popf
ret
call
cmpsl
stos
fisubrs
sahf
inc
jo
push
aas
pop
pop
pop
mov
add
add
add
jo
int3
int3
int3
int3
int3
mov
cmp
shlb
cmc
fdivr
loope
movsb
test
add
add
mov
and
int3
int3
int3
int3
int3
icebp
xchg
hlt
test
push
add
jge
hlt
sub
add
add
daa
cmp
pop
add
mov
js
and
clc
les
push
imul
add
add
stos
dec
rorb
sahf
movsl
call
testl
add
jae
xor
cmpsb
mov
aaa
xor
add
add
mov
add
mov
nop
nop
nop
nop
nop
cmp
mov
mov
daa
lods
pop
pop
es
mov
xchg
les
vmovaps
jg
cmp
add
mov
add
add
dec
rcrl
add
add
cmp
bound
add
add
push
lods
popa
inc
jb
test
xchg
clc
test
daa
mov
mov
xchg
or
add
add
add
add
cmp
stos
outsl
add
add
add
lock
int3
int3
int3
int3
or
add
add
fs
push
add
add
daa
lcall
imul
daa
aam
leave
push
push
out
out
mov
dec
xlat
jb
xor
shr
or
add
add
mov
pop
jne
jmp
fisubs
inc
mov
dec
je
cmp
jno
push
pop
das
leave
jb
dec
int3
int3
int3
int3
int3
sub
pop
imul
loope
roll
add
add
clc
push
add
add
stos
test
mov
mov
cmp
inc
ljmp
push
lret
daa
adc
jno
test
sbb
and
inc
loope
jmp
cmpsb
jmp
rcll
mov
cmp
mov
test
cli
sbbb
stc
push
xor
add
add
clc
inc
rorl
add
add
cmp
add
sub
int3
int3
int3
int3
lds
add
add
push
sub
inc
scas
fwait
out
inc
push
cmp
roll
aas
lcall
xchg
mov
add
add
add
add
add
test
int3
int3
int3
int3
int3
inc
dec
shlb
sub
call
leave
les
es
mov
shlb
mov
jmp
sub
fbld
jne
xor
jge
pop
int3
int3
int3
int3
int3
inc
fisttpl
sbb
add
inc
bound
cmp
popf
inc
aad
xor
add
add
inc
xchg
adc
mov
jecxz
fs
in
imul
ss
mov
in
data16
in
dec
jge
aas
int3
int3
int3
int3
int3
mov
int
sbb
jp
sub
inc
pop
loopne
sarl
fstpt
pop
cmp
popa
sahf
or
add
add
adc
movsl
movsb
in
fisubrl
pop
push
mov
ret
or
fsubl
in
add
add
icebp
dec
sub
cs
lahf
xchg
cmpsl
dec
dec
hlt
jmp
stos
push
popa
cmp
add
in
xchg
jle
mov
mov
cmp
add
push
lret
sub
cltd
lock
mov
xlat
push
and
lods
xor
mov
lds
add
dec
incb
add
add
lods
mov
add
pop
xchg
mov
fiadds
add
add
mov
scas
mov
loope
jmp
sub
add
inc
dec
lahf
cmpsb
rcll
sti
rcrb
mov
jno
sti
xor
cmp
imul
pop
and
jbe
mov
cs
mov
add
adc
mov
adc
inc
movsb
jle
sbb
xlat
out
cmpsl
aam
mov
inc
pop
push
mov
sbb
and
jno
mov
out
arpl
daa
sbb
add
add
cltd
insl
jae
cmp
add
and
sbb
add
add
outsl
mov
and
pop
lret
lahf
xchg
add
test
es
or
add
add
inc
add
add
or
add
jbe
icebp
lret
fstpl
aad
jle
inc
add
fldl
add
les
lret
mov
push
int3
int3
int3
int3
testb
add
add
xor
push
test
call
push
sahf
das
lcall
movsb
aaa
add
lahf
jo
out
fbstp
mov
add
add
jecxz
enter
jnp
lret
lahf
cli
rorb
das
add
testb
nop
nop
nop
nop
mulb
add
leave
out
xor
bound
mov
mov
add
add
mov
jg
es
adc
cli
cmp
add
add
ss
jne
mov
cli
sub
daa
dec
jecxz
jmp
test
rcll
test
mov
add
add
add
out
push
lods
and
push
jns
mov
mov
fstpt
lret
inc
inc
std
cs
dec
mov
and
xor
stos
fwait
push
adc
hlt
adc
ret
jp
and
cmpsb
gs
jge
loop
pop
lods
xchg
lret
cmp
test
dec
mov
scas
inc
movsl
fcompl
fmuls
js
sbb
and
xchg
fsubrs
dec
clc
lods
out
test
int3
jp
out
sub
add
add
mov
scas
iret
inc
cmp
sub
roll
add
add
xchg
shl
popa
mov
add
xchg
sbb
mov
or
add
add
std
sub
cmp
dec
sbb
cltd
fimull
add
add
repnz
sub
aad
ficomps
imul
add
add
repnz
nop
nop
nop
nop
nop
movb
add
add
notb
jns
add
test
jns
aad
push
jbe
lods
andb
fchs
dec
and
jl
das
xchg
dec
inc
dec
mov
add
add
add
popa
cmp
sahf
fildll
int3
int3
int3
int3
int3
not
xor
dec
mov
ret
pop
adc
xor
add
jp
fdivs
popl
fiadds
mov
sarb
fsubl
aam
add
add
popa
pop
aad
inc
out
mov
sti
jl
jb
dec
push
add
stc
loope
lods
mov
add
add
mov
xor
fdivrs
fcompl
add
add
jmp
or
add
add
in
in
and
lock
mov
sbb
ljmp
or
add
add
cmp
cli
cwtl
sbb
xchg
xchg
pushf
ret
insl
or
add
add
jmp
fwait
loop
xor
add
add
icebp
lret
inc
and
xor
test
test
into
rol
addl
add
add
jl
and
scas
adc
add
adc
aaa
fidivrl
arpl
xchg
add
mov
add
add
jnp
aam
lods
xlat
adc
mov
stc
notl
or
mov
add
add
add
and
sbb
sbb
mull
scas
clc
mov
lcall
mov
aad
push
push
inc
sub
jmp
jmp
sub
rcll
insl
ds
rorl
add
add
or
pop
add
add
add
and
cmp
sbb
xor
jge
bnd
cmp
insb
mov
roll
movsb
sbb
jae
add
add
add
test
mov
ret
mov
call
sbb
sub
stos
stc
mov
and
mov
and
sub
add
fs
mov
cmp
sbb
add
add
stos
or
add
add
add
add
dec
mov
xchg
movsl
mov
sub
xor
adc
test
data16
lods
jmp
cmp
mov
rcl
ficoms
add
add
movsb
mov
xchg
hlt
sub
cmp
and
xchg
cltd
ja
loop
jl
test
add
xor
jno
test
push
aad
out
call
add
cmpsl
mov
and
add
jle
aaa
pop
scas
out
push
cmpsb
clc
loopne
add
add
insb
enter
jb
mov
cli
sbb
stos
cmp
fdivr
fs
das
xchg
icebp
insl
in
cmpsb
shl
popf
arpl
add
add
add
mov
cmc
fdivr
xor
lea
sbb
add
add
add
cmp
inc
mov
add
add
add
pop
cmp
add
loopne
mov
aam
mov
and
add
jne
cld
lret
jle
repnz
addl
add
add
lods
xor
and
cmp
loop
ret
scas
push
stos
pop
loop
jmp
push
es
xchg
add
add
sub
add
add
les
mov
and
xchg
add
add
add
adcb
or
add
add
inc
xchg
xor
push
add
add
daa
xor
into
dec
insl
xor
lods
in
out
or
sbb
add
add
and
clc
mov
shlb
add
inc
adc
iret
ljmp
add
add
lock
add
cmp
mov
cmpb
and
cli
and
push
mov
lods
mov
hlt
filds
add
out
rorb
adc
add
add
add
test
call
dec
cmpsb
call
or
outsl
sbb
add
fidivrl
xchg
out
push
mov
scas
lret
add
add
cmpsb
test
fdivrl
movsb
push
push
sub
jle
jp
fisttpll
add
iret
or
add
add
aas
inc
stos
jne
addr16
mov
adc
out
mov
ja
cli
call
jmp
xor
jp
cmp
add
subb
pop
jb
xor
lods
push
add
add
ret
pop
add
add
sbb
mov
or
dec
and
movaps
and
mov
or
add
add
inc
daa
iret
pop
xchg
mov
loop
sbb
mov
int3
int3
int3
int3
lds
into
jle
add
add
mov
xor
or
add
add
xchg
push
cmp
test
lds
in
es
cs
movsl
jb
mov
pop
imul
ja
out
push
add
add
add
adc
loope
int3
int3
int3
int3
int3
rcrb
mov
es
adc
push
mov
add
mov
sarb
dec
cmp
test
lcall
adc
mov
xor
sbb
aaa
mov
xor
add
add
add
shrb
fst
gs
mov
xlat
cmpb
jl
scas
jge
add
mov
mov
inc
mov
test
clc
cwtl
sbb
aam
push
add
mov
add
or
add
add
mov
push
cmpsl
push
cltd
inc
lods
sbb
add
add
ret
sti
pop
xchg
lds
das
cmpsl
jmp
push
ljmp
add
xor
sbb
mov
add
push
xor
cwtl
and
add
add
in
push
push
daa
xchg
adc
insb
movsl
mov
cmp
mov
mulb
mov
or
mov
jns
add
add
add
adc
pusha
inc
or
add
add
and
pop
pop
jnp
into
jg
push
testb
scas
xchg
add
add
add
mov
add
add
add
ljmp
fists
add
imul
mov
insl
mov
push
sarb
xchg
or
add
lea
enter
adc
fnstcw
lods
xlat
or
aaa
ret
cmpsb
leavew
out
xchg
xchg
adc
sbb
leave
add
add
or
add
add
cli
push
insb
sbb
add
add
in
stos
stc
mov
add
add
iret
pop
stos
cmp
test
clc
std
sbb
sub
mov
enter
add
jge
cwtl
daa
jl
sub
jo
mov
jle
xchg
and
add
sbb
add
add
inc
frstor
mov
aad
repnz
shlb
int3
int3
int3
int3
int3
fisubrs
imul
add
add
fsts
cmp
ffree
aas
add
add
add
dec
mov
sbb
jmp
sub
dec
sub
add
mov
ljmp
aad
xchg
stc
in
pop
mov
add
xor
mov
push
mov
jns
int
cmpl
xchg
jl
movsb
or
add
add
rcrb
dec
mov
mov
loope
lods
push
outsb
push
jo
out
stos
push
out
mov
lds
add
add
repz
dec
div
cmc
pop
xchg
sbbb
add
add
mov
fdivr
mov
mov
mov
jl
add
inc
aam
sbb
add
add
add
in
out
and
int3
int3
int3
int3
test
push
xor
xor
addr16
or
shrb
loope
mov
and
or
add
add
in
jge
scas
jns
cwtl
aad
mov
add
adc
test
fs
loop
sub
jecxz
fwait
in
and
push
rcr
pop
sbb
xor
stc
scas
rclb
mov
mov
mov
mov
cmpsb
dec
xchg
and
adc
mov
aad
cmp
daa
sub
dec
mov
ljmp
mov
jns
sbb
and
inc
add
add
add
add
stos
das
lret
clc
or
jo
push
fxch
rcrl
adc
stos
gs
shll
add
push
ret
jp
mov
loopne
jg
mov
adcb
and
popa
pushf
mov
rcr
rolb
add
xor
xchg
add
add
dec
lret
push
xchg
add
add
add
lods
cmp
daa
adc
cmp
xchg
and
mov
lcall
pop
sarb
xor
add
add
lods
add
add
imul
jmp
push
push
cmc
or
add
add
dec
js
pop
mov
push
int
nop
nop
nop
nop
and
pop
pop
jne
sti
imul
cmp
and
pusha
ds
push
adc
fiaddl
or
add
add
movsb
inc
dec
lds
pop
jp
sbb
jl
ret
mov
test
cwtl
jp
pop
jmp
xlat
push
add
add
jle
and
jg
das
push
int
idivb
add
dec
sbb
popa
mov
rorl
stos
mov
pop
cmp
mov
jmp
stc
sub
call
push
ljmp
xchg
imul
add
add
aam
jae
xchg
sub
push
pop
sbb
out
nop
nop
nop
nop
movsb
data16
push
push
jp
pop
imul
int3
int3
int3
jae
lahf
mov
jne
loopne
std
aad
aam
out
mov
lcall
fldt
dec
sbb
rcll
iret
insb
xlat
out
test
mov
add
add
cmp
xor
add
jmp
sub
mov
xor
jb
mov
cmpsb
xchg
sbb
jge
or
add
add
in
add
add
add
mov
cltd
mov
add
add
jnp
jo
shll
pop
inc
mulb
jno
aas
movsl
popa
push
sub
ds
add
add
test
adc
sbb
xor
sbb
fdivrl
add
push
ret
sub
js
add
add
das
and
clc
les
add
add
add
cs
mov
add
add
ds
push
or
add
add
loopne
ret
cmp
jae
xchg
dec
xchg
fmull
jae
xor
call
out
push
add
add
pop
pop
add
add
fisttps
rcrb
jne
stos
subb
xor
add
push
pusha
mov
inc
aad
test
add
push
pop
add
add
jne
sub
cmp
fyl2xp1
int
aam
es
loopne
add
add
push
stos
sbb
add
add
cs
xchg
add
cmp
xlat
push
add
add
add
aas
arpl
insb
adc
dec
repnz
or
testb
jle
dec
inc
xchg
stos
fisubrl
cmp
add
add
add
subl
in
icebp
add
add
add
inc
mov
call
xor
sbb
fsts
loopne
sti
cwtl
xchg
pop
dec
mov
mov
in
mov
ljmp
mov
xchg
add
add
add
mov
adc
cmp
xchg
arpl
sbb
sbb
out
xchg
xchg
jbe
sbbl
pusha
ret
lea
or
add
add
pushf
cmc
mov
popl
sbb
pop
xchg
pop
ss
lea
jne
push
mov
jg
cmp
xchg
out
mov
xor
lcall
dec
cmp
add
add
add
add
adc
inc
lahf
nop
nop
nop
nop
nop
cmpsl
into
adc
add
add
or
add
add
movsb
or
add
add
lret
add
add
push
scas
mov
jbe
add
mov
std
data16
stos
xor
xor
fimuls
cmp
add
xlat
mov
rol
nop
nop
nop
nop
pop
xor
sbb
sub
jae
mov
testb
sbb
shrl
xchg
imul
dec
and
add
and
loopne
cmovs
mov
pop
out
out
pushf
lretw
jg
pmaddwd
loope
xor
mov
mov
int3
int3
int3
int3
int3
dec
cld
sbb
out
cli
test
pop
sahf
movsb
cmpsb
outsb
inc
mov
xchg
mov
add
push
sbb
movl
jb
push
sub
xlat
bound
out
jl
add
add
stos
loopne
enter
out
jne
sub
aaa
mov
inc
add
fcoms
xchg
ret
mov
add
add
add
push
and
outsl
adc
call
push
inc
push
mov
call
xchg
or
pop
adc
in
pop
add
add
nop
nop
nop
nop
nop
sub
clc
aaa
mov
add
add
sahf
xor
popa
sahf
push
push
xor
shlb
mov
insb
pop
add
add
rcr
mov
add
ret
inc
mov
xor
jno,pt
jp
or
add
add
add
add
add
add
add
xchg
cmc
cmp
add
push
aam
shl
fs
fisubl
add
add
and
rolb
or
add
add
pop
int
xchg
mov
jg
mov
aad
add
add
in
add
add
add
es
aas
aad
add
add
cli
popa
push
lret
dec
popf
test
insb
push
add
add
pop
cld
xchg
push
sbb
add
mov
mov
add
js
mov
cmpsl
lea
and
push
xor
xchg
jge
add
add
push
jns
es
hlt
pop
int3
int3
int3
int3
int3
dec
add
add
add
push
add
add
push
add
add
add
sub
mov
add
daa
test
jmp
out
jp
jae
arpl
leave
adc
mov
fwait
xorb
enter
add
add
loopne
add
add
pop
add
add
jecxz
pop
js
xor
jbe
cmp
mov
test
mov
mov
movsl
mov
add
add
ljmp
call
imul
fstpl
mov
icebp
lods
call
pop
call
xlat
jecxz
xor
xor
and
bound
lock
data16
xchg
mov
push
push
sbb
imul
jnp
mov
jb
add
add
xor
add
mov
add
add
add
or
add
add
in
sub
add
add
push
sbb
add
add
ret
xor
sbb
mov
int
sub
add
add
test
inc
js
out
mov
stos
out
cmp
push
lcall
imul
cmp
fwait
mov
pop
in
adc
and
or
ss
shll
shr
les
pop
sub
add
or
add
add
stos
push
imul
add
sub
nop
nop
nop
nop
nop
mov
testb
cmp
fildll
and
ficompl
shrl
add
sbb
ljmp
aad
cld
scas
mov
add
sti
push
push
into
shlb
pushf
xor
add
add
sarl
add
add
add
pushf
pop
fs
or
add
add
incb
add
cli
mov
rcrl
pop
inc
in
ret
dec
or
add
add
pop
aad
nop
nop
nop
nop
pop
imul
mov
xor
add
mov
js
leave
nop
nop
nop
nop
nop
add
add
add
movsl
inc
lret
mov
add
add
add
je
sti
sbb
xchg
test
data16
mov
pop
sbb
add
ss
sbb
mov
lds
aam
aad
aas
sarb
mov
lret
cmpsb
add
add
add
into
lds
loopne
sbb
pushf
push
add
add
add
fcomps
cs
and
or
add
add
add
add
pop
imul
xchg
shll
cmpl
mov
xor
bound
es
cld
mov
add
add
loop
orl
add
add
add
sub
adcb
sub
xchg
push
imul
bound
add
fisttpl
add
add
xchg
fsubrl
lret
fs
fnstcw
into
jle
push
xchg
cs
js
popf
dec
pop
pop
popa
or
add
add
mov
xchg
pop
daa
add
dec
aas
stos
cmp
add
add
xor
add
mov
adc
nop
nop
nop
nop
mov
xchg
pop
jb
sub
in
jle
and
in
fidivrs
jmp
mov
inc
sbb
es
sbb
add
add
punpcklwd
pop
push
add
add
jnp
mov
imul
sub
sub
push
std
xchg
inc
jecxz
xorl
mov
inc
lods
gs
div
mov
mov
mov
add
add
jp
mov
add
ret
test
jnp
jg
inc
je
fldl
add
add
dec
mov
dec
rcr
mov
push
mov
stos
mov
mov
adc
add
sbb
pop
inc
mov
ljmp
int3
inc
pop
inc
push
jge
mov
sldt
arpl
imul
cmp
jmp
jne
jbe
jns
in
or
add
add
adc
jbe
inc
cwtl
inc
aas
popf
mov
add
add
clc
call
nop
nop
nop
nop
nop
shl
jge
add
add
add
scas
or
add
add
add
add
jmp
sahf
mov
pop
frstor
sarb
add
sti
xchg
push
and
lcall
adc
imul
popa
dec
sbb
hlt
xor
sbbl
add
add
add
add
or
sbb
and
dec
and
fdivl
addl
jb
add
mov
pop
pop
sti
or
add
add
cmp
cmp
mov
mov
mov
in
ja
adc
fmuls
sub
ret
out
adc
or
add
add
pop
add
mov
and
add
cwtl
adc
clc
xchg
add
add
jge
shrl
loop
aaa
mov
rcr
dec
push
lds
xchg
fcom
in
in
add
add
aad
push
mov
arpl
xchg
push
cmpsl
js
push
or
add
add
push
or
add
add
addb
and
add
add
add
pop
jle
rorb
add
add
movsl
fcoml
movsb
push
clc
cmp
add
add
call
dec
dec
adc
mov
mov
add
xchg
cmp
and
sbb
fsubl
js
mov
jge
lahf
scas
cmp
push
pop
stos
outsl
pop
movsl
cmp
fs
adc
mov
mov
add
add
mov
arpl
daa
les
in
mov
rorl
add
add
xchg
sti
inc
mov
das
scas
mov
faddl
dec
sub
sub
jmp
adc
mov
jl
xchg
out
push
mov
rolb
add
add
popf
xchg
orb
push
scas
cmpsb
pop
test
cmp
add
jg
add
jl
xchg
into
xor
leave
test
push
daa
jp
mov
fldcw
adc
jecxz
pop
insb
pop
and
dec
lea
loop
jecxz
pushf
rcrb
push
adc
mov
aam
inc
xchg
jo
xor
push
test
ficoms
pushf
ficoml
nop
nop
outsb
les
jle
or
testb
mov
bound
fcmovnbe
mov
and
andl
xor
add
aas
xor
or
add
add
push
fdivrs
out
inc
aam
sub
mov
icebp
push
jecxz
sbb
mov
out
add
add
mov
xchg
icebp
bound
lods
jae
sbb
mov
mov
push
ret
inc
xchg
xchg
sbb
arpl
xor
imul
and
cmpsb
std
lret
xchg
les
lods
add
add
add
pushf
sub
add
add
mov
add
cmp
or
or
add
add
ja
add
add
mov
clc
sahf
outsb
mov
insl
or
add
add
int
xchg
or
add
or
add
add
mov
add
add
inc
insl
call
jae
shl
push
cmpsl
or
das
mov
add
add
cmp
bound
mov
ret
dec
lret
mov
jo
imul
shll
xor
lahf
data16
add
add
add
adc
add
lret
add
add
add
or
add
add
pop
mov
pop
fst
shlb
adc
mov
add
add
out
popf
inc
xchg
stos
mov
flds
mov
icebp
es
test
mov
add
add
push
sti
cmpsl
mov
xchg
pop
stos
push
repnz
mov
imul
sub
add
inc
mov
repnz
stos
rorb
stos
adc
xor
add
add
add
imul
sub
jg
sub
pop
cmp
pop
jbe
in
fimuls
cmp
mov
sbb
imul
aam
push
mov
mov
add
add
add
add
dec
fwait
jmp
sbb
popa
cmp
jecxz
test
mov
mov
add
add
popf
out
cltd
ret
jp
mov
cmp
das
out
addl
add
add
dec
imul
add
ljmp
add
add
int3
int3
int3
int3
int3
inc
mov
add
add
mov
mov
test
pop
and
sub
movb
loopne
out
ror
pop
test
mov
add
add
add
movsb
mov
popf
pop
inc
cmp
sar
mov
mov
pusha
adc
into
jle
push
mov
je
cld
lds
test
push
mov
scas
into
arpl
and
sbb
mov
add
push
addr16
pop
mov
jb
or
jecxz
shr
mov
sbb
std
fistl
adc
addb
add
jge
fcmovnb
in
lds
nop
nop
nop
nop
nop
dec
dec
mov
js
cmp
mov
xchg
jno
stos
jmp
or
add
add
ja
sub
out
test
ja
in
sti
mov
add
add
adc
xor
lfs
dec
mov
clc
mov
jmp
lock
stc
push
xlat
xchg
pop
mov
push
add
add
fiadds
push
repz
in
data16
xchg
xor
inc
cmpsb
jmp
push
test
add
add
cmp
push
stos
add
add
add
movsl
lock
pop
mov
fs
insb
jmp
mov
lea
push
xor
ljmp
cmp
cwtl
xor
pop
add
add
jmp
mov
arpl
sub
into
pop
jo
lods
xor
shll
mov
pushl
add
cmp
add
mov
add
out
mov
jns
jae
cmp
pop
fcoml
push
add
add
sti
imul
add
add
add
cs
jle
cmpsl
pop
mov
std
fwait
pop
movsb
sub
pop
scas
lret
add
add
add
idivl
adc
mov
mov
andl
push
stos
ret
jb
enter
js
add
cmp
out
xchg
hlt
dec
jmp
test
cmc
jo
divb
pop
inc
mov
out
frstor
add
jle
cmp
push
out
movsl
jl
xchg
stos
cmp
lahf
mov
mov
push
add
add
movsl
fnstsw
mov
jmp
jp
jp
xlat
mov
mov
inc
xor
add
out
cmp
adc
insb
popf
int3
int3
int3
int3
int3
mov
cmp
addl
add
cmc
scas
dec
sbb
js
pusha
jnp
inc
or
add
insl
jmp
cld
or
add
add
sub
popa
push
or
shrb
push
pop
lret
xchg
adc
cmpl
add
and
loop
cmc
add
add
mov
add
add
add
push
out
rcr
push
dec
push
lods
lock
mov
adc
add
fs
test
mov
xchg
repnz
decb
dec
imul
pop
cmp
dec
shrb
push
cmc
mov
add
add
clc
adc
es
adc
dec
push
sub
lahf
gs
testl
inc
mov
add
add
add
xchg
loopne
loop
pusha
mov
adc
adc
in
leave
push
add
fnstenv
stos
mov
loopne
and
int3
mov
xchg
push
pushf
cmp
adc
inc
lods
mov
pusha
push
add
add
add
arpl
in
rcrl
fldenv
add
cld
lods
xor
add
add
pop
ffree
add
movb
cltd
idivl
mov
shll
sbb
add
outsl
mov
inc
loopne
and
or
add
add
adc
add
cmc
es
fdivrl
xchg
pusha
fldl
add
add
mov
imul
xlat
pop
std
pop
add
add
in
adc
lock
pusha
fstpl
test
sub
add
push
fldcw
ds
int3
int3
int3
int3
insb
pop
roll
jb
dec
repz
sub
xor
cmc
add
add
add
push
bsf
xor
add
ret
push
std
sub
add
dec
lret
or
add
add
je
movsb
pop
arpl
ja
les
jmp
inc
jl
int
lahf
outsb
mov
aaa
sbb
sbb
add
testb
cmpsb
cmp
add
add
push
lods
cmp
mov
sub
hlt
mov
mov
add
daa
jge
shrb
add
ficoms
cmp
xor
pop
pop
leave
inc
lea
insl
dec
or
imul
and
add
add
dec
pop
jns
out
adc
movsl
or
add
add
mov
mov
xchg
xor
jb
jno
idivb
sbb
std
push
pop
push
and
int3
int3
int3
int3
int3
lds
mov
mov
loop
fbld
add
add
es
shll
call
fildl
add
add
test
add
add
inc
and
add
add
mov
xchg
mov
icebp
stos
adc
and
xchg
inc
negl
xor
in
data16
cs
add
add
add
jecxz
add
add
fldt
xchg
jge
test
popa
bound
adc
dec
test
int3
int3
int3
int3
mov
sub
add
add
add
adc
sbbl
add
add
push
sub
xor
sbb
call
fidivs
fisubl
stos
repz
idiv
jl
test
add
bound
add
add
add
xchg
mov
cmp
mov
add
xor
movl
sti
mov
nop
nop
nop
nop
mov
pop
and
imul
repz
insl
subl
xchg
movsl
gs
pop
jb
mov
mov
int3
cltd
outsb
ret
insb
dec
pop
lahf
xchg
adc
idiv
lahf
cmp
pop
add
add
cld
dec
add
add
add
sub
xchg
hlt
shrb
dec
sahf
out
scas
leave
dec
push
mov
mov
add
mov
mov
call
inc
in
or
add
add
add
add
ja
imul
ljmp
add
movsb
mov
dec
pushf
and
icebp
js
jmp
jne
jp
lock
sub
orl
mov
xchg
insb
dec
jo
cmp
mov
add
dec
inc
popf
out
or
add
add
pop
arpl
add
cmp
or
add
add
add
add
pop
adc
push
fdivr
xor
daa
inc
xchg
mov
fs
ljmp
int3
int3
int3
int3
int3
ljmp
mov
push
cwtl
mov
adc
mov
add
pop
or
pop
insl
lods
cmpsl
popf
jns
divb
pusha
arpl
ret
cmp
push
jmp
dec
jno
pop
sub
mov
incb
push
out
jmp
adc
sub
add
and
roll
add
add
es
mov
mov
xchg
fcomps
fwait
sbb
pop
add
add
inc
iret
mov
push
lods
sbb
jp
add
add
jnp
and
sahf
pop
ja
push
mov
hlt
inc
aas
pop
je
pop
jae
arpl
pop
add
add
sbb
pop
cwtl
lock
push
xor
dec
iret
mov
add
js
sbb
inc
mov
mov
xchg
fdiv
fadds
or
mov
mov
cmc
lock
fisubrl
add
add
stc
loope
mov
clc
xchg
cmp
add
aaa
mov
lds
add
add
xor
nop
nop
nop
nop
nop
gs
add
add
xchg
add
add
add
jb
fs
iret
xlat
bound
arpl
mov
out
lds
iret
in
mov
add
add
add
mov
jmp
adc
jnp
or
add
add
cmp
jne
pop
sahf
pop
inc
xor
push
mul
mov
push
dec
push
hlt
rorb
sbb
inc
cwtl
sbbb
add
stos
inc
inc
sbb
sbbb
imul
xor
int3
int3
int3
int3
test
sbbb
idiv
test
add
add
ret
fbld
inc
aaa
adc
pop
sub
xor
ljmp
repnz
inc
loop
add
add
add
cmc
sbb
test
add
add
lea
cwtl
xchg
ljmp
and
add
call
add
add
add
push
push
enter
lock
test
outsl
mov
rcl
fwait
jmp
sbb
insl
jmp
mov
in
bswap
dec
ret
icebp
je
fnsave
ret
add
add
add
adc
mov
mov
in
repz
jne
push
push
xlat
test
lods
xor
sbb
shlb
fcmovnb
adc
data16
addr16
jne
adc
or
add
add
jecxz
movsb
adc
xlat
push
and
add
jns
sub
adc
fwait
sub
out
sbb
loope
aad
add
add
ret
nop
nop
nop
nop
nop
fistpl
cltd
outsl
stc
insl
dec
ror
test
push
or
add
sbb
add
jns
mov
fldl
fstp
orb
add
add
inc
mov
add
add
testl
out
je
fsubr
mov
lret
and
cwtl
rcrb
add
add
add
and
add
arpl
popa
insl
push
add
add
stos
jb
std
add
add
add
mov
add
add
je
jns
and
add
add
add
mov
cld
inc
je
cmp
fisubrl
push
into
mov
sbb
cmp
neg
xchg
mov
push
pop
ret
imul
add
xchg
dec
sub
or
into
and
and
jns
cmp
jae
les
push
add
add
rcl
clc
lcall
hlt
out
shl
add
add
dec
mov
add
out
in
and
add
leave
add
add
add
cmpsb
es
add
add
add
nop
nop
nop
add
add
add
stc
cld
les
cmpb
pop
or
add
add
add
add
sti
and
jnp
add
int
ret
jo
and
cmp
xor
sbb
mov
add
add
mov
sbb
cmpsl
xlat
test
push
pop
fbld
add
add
shlb
movsb
push
xor
add
add
cltd
scas
xchg
sbb
cmp
es
jecxz
push
cmp
add
add
inc
sbb
adc
jge
jge
cmp
ror
inc
ja
lock
add
call
js
insb
aad
add
add
pop
lcall
add
xchg
pop
repz
add
add
add
add
add
outsl
push
cmp
add
add
dec
into
add
add
xchg
aad
add
stos
jns
dec
push
jns
jae
pop
xchg
sub
adc
xchg
xor
adc
cmp
push
aam
mov
or
add
add
jle
inc
xor
and
stos
or
add
add
add
lea
or
add
add
loopne
or
add
add
and
int
inc
mov
dec
xchg
cld
enter
add
int
sub
mov
adc
ret
push
sbb
testl
int3
int3
int3
int3
int3
sbb
add
add
ret
cmpl
aam
push
and
and
cmp
imul
mov
sbb
add
sbb
aam
movsl
addr16
jp
add
add
push
insb
aaa
xor
fdivl
insl
fs
pop
and
xchg
notl
mov
mov
nop
nop
nop
nop
nop
pop
repz
in
hlt
les
shlb
popl
les
fwait
mov
aaa
aam
mov
mov
xor
add
mov
adc
or
add
add
sub
test
add
add
insb
test
add
add
add
dec
mov
mov
popa
dec
add
add
add
mov
cltd
mov
lret
and
jmp
cs
or
add
add
es
aas
mov
mov
aaa
loope
test
inc
mov
int3
int3
int3
int3
iret
inc
jg
sbb
lea
popa
jns
add
add
aaa
pop
sub
test
pusha
mov
repz
cs
negb
outsl
jg
sbb
adc
cmp
lret
mov
xor
aas
push
out
push
cmpsl
fld
jns
xchg
add
add
fnstcw
xchg
dec
push
stc
or
bound
jecxz
test
scas
jbe
cltd
into
add
add
add
nop
nop
nop
nop
nop
xlat
cmpsb
add
add
add
mov
add
jle
cmc
lret
in
sbb
addr16
clc
fdivl
xor
add
jnp
mov
adc
mov
push
add
cmc
cltd
daa
loopne
clc
fldt
fwait
ret
or
add
add
add
add
dec
shll
lahf
lahf
pushf
lds
add
add
add
xchg
lds
sti
dec
loopne
add
add
sti
idivb
add
add
shll
pushf
not
dec
mov
xchg
mov
mov
sub
mov
cmpl
inc
pop
fbld
repz
sbb
add
add
add
jge
sbb
pop
add
add
cmp
popa
mov
mov
fisubl
stos
orb
add
add
loope
adc
mov
lods
out
pusha
sbb
loope
push
and
add
add
add
sti
dec
cmpsl
push
fstpt
add
add
in
adc
dec
sbb
paddb
jno
adc
test
add
cs
pop
xchg
aaa
imul
push
pop
inc
sub
shrb
add
sahf
lret
nop
nop
nop
nop
nop
add
add
add
add
fisttps
mov
pop
pusha
xchg
jbe
insl
repnz
jb
mov
mov
cmp
add
jns
jecxz
adc
add
add
xor
stc
test
mov
into
aad
shlb
cmp
int3
int3
int3
int3
int3
daa
pop
xor
mov
mov
js
movsb
xchg
pop
test
push
lahf
fwait
fmuls
fisttps
out
loope
addl
cs
movsb
test
sbb
add
add
test
push
mov
add
add
aas
jbe
add
add
rol
test
mov
mov
enter
jbe
mov
add
mov
cld
xchg
add
add
add
cs
jmp
push
in
add
pusha
inc
push
inc
adc
cmp
repnz
sbb
enter
and
add
adc
mov
xchg
add
xchg
add
jo
push
hlt
pop
arpl
stos
push
mov
insb
cmpsb
jge
sarl
cwtl
push
std
loopne
mov
mov
je
mov
add
add
adc
aam
jl
add
add
add
xchg
xor
out
and
pusha
and
add
add
pop
das
xor
cmpb
lods
cld
test
and
add
add
test
or
cmpsl
frstor
mov
jmp
sti
dec
cs
popa
outsb
lock
cmpsb
out
loop
and
lds
in
cmp
jb
jns
and
add
jne
movsb
push
lahf
inc
cmp
cmp
mov
adc
mov
add
rol
rorb
mov
pop
jo
imul
fildl
cmpsb
cmp
pop
or
sbb
lret
movlps
add
dec
rorl
fwait
cld
loope
jge
les
add
add
andb
add
add
push
ficomps
mov
jbe
mov
jl
jae
pop
frstor
ja
push
push
push
add
add
lods
outsb
add
add
add
cmp
mov
int
das
add
add
adc
scas
jbe
mov
and
inc
sub
mov
popf
sbb
add
fdivl
std
mov
das
outsb
pop
pop
add
add
add
mov
add
mov
sti
push
add
add
rdpmc
stc
push
cmpsl
cmp
sahf
pop
xchg
shll
add
add
add
popf
and
mov
sub
inc
aad
imul
mov
mov
jmp
fstps
and
inc
lds
add
add
add
pop
orb
or
add
pop
imul
dec
push
add
dec
mov
inc
mov
jmp
adc
call
xchg
lret
pop
int
jno
add
push
push
jecxz
push
push
lahf
popa
sub
iret
mov
popf
aas
jb
enter
shl
js
add
inc
aas
rorb
add
add
add
add
add
add
add
lret
add
push
movsb
sub
mov
xchg
test
inc
and
insb
movsb
pop
sub
or
lret
mov
mov
xchg
addl
cmp
scas
ret
sub
sldt
xor
push
xlat
ds
movsb
ret
adc
adc
add
add
mov
cmpsb
xor
notb
xchg
or
add
add
cltd
loop
xchg
or
add
add
inc
jge
scas
rclb
jmp
fucomp
stos
jo
std
pop
lds
add
add
jno
outsl
bound
std
cld
sub
jnp
cwtl
test
int
add
add
add
xchg
ret
leave
sbb
inc
dec
push
in
adc
popf
imull
inc
jle
aaa
jl
sub
enter
mov
out
mov
in
popf
in
sbb
sub
mov
xlat
test
int3
int3
int3
sbb
sahf
mov
fisttps
add
jbe
push
mov
addb
add
jl
jne
pop
scas
gs
mov
loope
dec
mov
adc
add
and
sti
and
pop
jnp
fchs
jecxz
add
add
sbb
xor
push
mov
sahf
add
add
add
add
fs
mov
or
add
and
scas
cmp
push
mov
test
and
push
testl
adc
add
add
hlt
or
add
add
scas
sbb
push
fimull
subl
inc
or
add
add
lds
adc
aaa
pop
mov
push
sbb
add
add
cwtl
mov
xchg
add
add
add
int3
int3
int3
int3
int3
test
sub
movsl
mov
inc
cmpb
and
inc
push
lahf
mov
hlt
mov
lods
jl
push
mov
pop
add
add
addl
add
add
xchg
mov
cs
inc
sub
pop
repz
aaa
mov
cld
imul
dec
adc
orl
xchg
sub
push
push
add
push
sub
fwait
cwtl
push
xor
mov
les
mov
mov
add
add
add
xlat
pop
add
add
mov
xchg
cs
sbb
pop
add
add
mov
xor
adc
fstps
push
daa
pop
and
inc
fnstenv
push
bnd
pop
addr16
cmp
adc
loopne
lahf
test
fisubrs
jne
cli
loopne
jmp
jo
daa
mov
mov
inc
dec
dec
jne
test
fs
pop
ljmp
ds
test
outsb
push
into
xchg
mov
add
add
sbb
sbb
scas
rcll
add
add
mov
fldt
je
pusha
dec
add
add
add
jmp
sbb
jmp
add
movsb
sbb
sbb
inc
lcall
movsl
in
push
push
mov
sbb
or
mov
nop
nop
nop
nop
nop
fstpt
jl
test
clc
cli
subb
clc
sbb
mov
push
lahf
std
cmpsl
jae
dec
into
dec
inc
jae
push
and
lock
mov
xchg
mov
xchg
and
and
dec
mov
inc
mov
add
add
pop
nop
nop
nop
nop
nop
insb
push
cmpsl
sub
inc
repnz
add
add
or
add
add
repz
mov
sbb
add
add
add
das
bound
add
add
pop
add
push
cmpsl
sub
int
movsb
sbb
add
add
mov
lret
xchg
push
pop
cwtl
dec
cs
ljmp
mov
pop
xlat
and
stos
xor
mov
js
xor
add
add
add
mov
sub
lret
xor
ja
dec
pop
nop
nop
nop
nop
nop
xchg
cmp
fisubrs
pushf
shrl
pop
adc
mov
test
sbb
sbb
and
addr16
stc
cmp
add
xchg
inc
xchg
jg
insl
mov
cltd
pop
xchg
ffreep
xchg
mov
jae
add
mov
ret
mov
pop
mov
bound
jp
lea
lea
fsubrl
das
pop
mov
fisttpl
nop
nop
nop
nop
adc
mov
push
icebp
xorb
data16
inc
aaa
cmpsl
mov
and
cli
outsb
sub
dec
cmp
add
add
add
add
add
roll
test
sub
gs
out
aad
push
mov
and
mov
adc
sub
mov
dec
call
dec
inc
lods
mov
add
test
or
add
add
inc
adc
xor
mov
arpl
sub
into
mul
xchg
push
rcrb
add
xchg
fimuls
loop
mov
jnp
xor
add
jp
jb
pop
mov
aad
xor
dec
sub
add
std
in
and
lcall
movsb
jbe
test
fs
inc
dec
inc
loopne
cmp
add
add
jmp
fidivl
dec
dec
xchg
mov
mov
int3
cmp
add
jl
flds
aam
icebp
scas
je
aaa
xorl
mov
jecxz
add
add
inc
mov
sbb
adc
add
ljmp
add
add
mov
add
xchg
mov
mov
xchg
dec
imul
add
jp
out
or
or
add
add
adc
rcll
mov
ljmp
inc
leave
aam
inc
mov
cs
andb
add
add
or
add
add
pop
dec
andl
sub
pop
jle
jns
adc
pop
mov
mov
push
aaa
nop
nop
nop
nop
nop
jmp
leave
sbb
fildll
out
xor
push
inc
mov
out
push
or
add
add
js
inc
sub
das
xor
mov
mov
cmp
test
lahf
dec
das
xor
or
add
add
inc
jecxz
adc
sti
popa
sub
jge
fxam
ret
je
lahf
or
pop
test
sti
inc
lcall
mov
cwtl
push
or
add
add
in
inc
bound
pusha
imul
add
sbb
push
aad
and
mov
push
repnz
adc
test
pop
add
add
add
adc
mov
dec
lods
pop
or
dec
lods
call
xchg
push
pop
push
faddl
jecxz
adc
call
lods
xchg
nop
nop
nop
nop
nop
add
add
add
in
sub
sub
mov
push
mov
shlb
sub
add
add
push
repz
add
add
popa
xlat
xorb
add
jo
loop
inc
or
loopne
jp
roll
add
add
clc
pushf
shll
add
add
add
add
js
ficoms
je
outsb
cmc
pop
add
add
fcmovnb
cmpsl
cmp
cmp
mov
mov
inc
popa
mov
mov
lods
mov
pop
add
add
add
add
add
add
sbbl
xchg
and
scas
mov
adc
add
push
not
push
test
inc
push
add
cld
mov
cmp
fisubrl
dec
jg
add
add
cmp
loop
push
mov
call
jb
sub
add
add
inc
inc
stos
mov
cs
fldenv
add
xchg
dec
sti
daa
popf
loope
loop
cmp
js
lcall
xchg
push
push
rorl
sbb
xor
cltd
lock
mov
dec
pop
add
sbb
add
ret
aas
cld
mov
and
adc
jne
fsubs
addr16
or
cmp
rcll
add
inc
jmp
mov
fdivrl
jge
xchg
enter
lods
es
adc
add
add
add
pushf
rcrl
sbb
add
rorb
mov
test
add
bndstx
test
cltd
cmp
adc
sub
mov
test
xor
out
sub
cmp
add
add
inc
cli
in
push
or
lea
add
add
dec
dec
mov
mov
sbb
pop
arpl
inc
xor
mov
pop
xchg
pop
jmp
arpl
push
addr16
rcrb
or
add
add
push
test
jae
mov
and
pop
sarl
sahf
std
divl
stc
movl
and
mov
jbe
hlt
sahf
lock
cmp
sbb
lea
push
fwait
ret
inc
imul
sbb
les
pop
lahf
inc
xor
mov
push
add
xorl
pusha
pusha
jg
push
add
add
pop
jno
dec
jno
js
stos
or
add
add
sbb
add
add
mov
mov
xchg
pusha
mov
outsl
cmp
dec
jp
xor
xchg
cmc
mov
hlt
fcompl
scas
cmp
mov
out
add
add
add
jp
pop
add
add
add
int3
int3
int3
int3
int3
lea
xor
mov
pop
cmp
cli
mov
sub
or
add
add
mov
add
add
add
xchg
int3
int3
int3
int3
int3
jge
jbe
dec
lret
add
add
out
mov
call
hlt
mov
xchg
in
icebp
pop
sub
xor
or
add
add
add
add
add
bound
test
jns
gs
mov
jb
jmp
hlt
xor
mov
in
out
dec
adc
rcl
sbb
inc
popa
and
pop
sub
pop
xorb
lods
in
cmp
jmp
loopne
test
iret
mov
outsl
jae
aam
add
add
inc
mov
and
sbb
jo
jbe
into
test
xchg
adc
jae
xchg
mov
aaa
cmc
imul
pushf
inc
insl
pop
add
add
add
add
add
data16
lret
mov
add
mov
cmp
sbb
mov
cwtl
jl
xor
pcmpgtb
nop
nop
nop
nop
nop
out
fisubrl
mov
addb
and
es
pusha
and
add
cmpsl
test
add
add
jl
mov
adc
stc
xlat
push
push
les
add
add
es
inc
sub
add
mov
pop
jge
pushf
xchg
pop
adc
cmp
add
xor
lret
pop
mov
inc
and
push
gs
stc
shl
add
sub
mov
xchg
leave
push
in
outsb
repz
lock
mov
test
add
pop
cltd
xor
cmp
add
add
popl
mov
dec
and
xor
sti
and
mov
fst
jo
cli
rcl
data16
and
shrl
xorb
mov
add
and
les
jmp
xor
sti
fsts
test
adc
inc
stos
xor
adc
scas
ja
mov
jmp
pop
cli
xchg
xchg
lods
sub
out
add
add
mov
ret
out
pop
jb
inc
pop
pop
into
sub
data16
xchg
mov
cmp
xchg
ret
fisubl
orb
es
and
xor
in
dec
jbe
mov
add
add
dec
into
cld
inc
push
push
call
dec
movsl
inc
mov
loopne
or
jb
pop
sub
ss
rolb
add
add
stc
mov
incb
push
pop
popf
xlat
cwtl
inc
test
daa
ja
sbb
dec
clc
mov
jo
dec
and
imul
rcll
add
rolb
add
add
aam
cld
je
sahf
jbe
call
or
add
add
jle
adc
pop
mov
repnz
pop
mov
jne
out
cmp
data16
imul
test
add
add
int
sbb
jb
in
enter
stos
dec
loop
in
pusha
add
hlt
bound
pusha
fiaddl
jno
ficomps
fidivrs
adc
fs
dec
mov
pop
int3
int3
int3
int3
int3
insl
xor
pop
jae
sti
or
add
add
flds
jb
or
add
add
jne
add
add
or
sub
adc
mov
pop
iret
lahf
sub
pop
xor
roll
add
add
sub
adcb
leave
mov
out
mov
ljmp
add
xchg
les
lods
aad
sbb
jl
mov
pushf
aaa
mov
jo
fdivs
add
add
add
add
add
adc
addr16
mov
std
xchg
mov
pop
sahf
in
test
mov
add
add
jnp
std
inc
cmp
test
js
push
push
test
add
add
add
add
add
iret
or
xchg
es
jbe
out
pop
and
test
and
adc
add
and
or
add
add
add
add
add
add
push
in
ds
inc
pop
out
js
and
scas
sbb
jecxz
loopne
into
jmp
mov
and
pop
add
add
popa
jns
mov
imul
mov
inc
fists
lods
cmp
add
jb
lahf
imul
aam
nop
nop
nop
nop
pop
fsubr
push
arpl
icebp
addr16
sub
jle
pop
sbb
shrb
or
mov
sarl
and
xor
cli
into
lcall
add
leave
mov
testb
push
and
sbb
pop
rclb
mov
jns
shrb
jo
jge
lahf
sbb
lock
pop
jo
inc
cmc
ss
jbe
int3
add
add
jo
add
add
add
add
mov
add
add
mov
add
add
les
push
jge
adc
mov
jns
lock
cltd
popa
and
movsb
test
inc
movsl
or
das
add
adc
pop
inc
sbb
xor
xchg
jne
pop
cmp
add
mov
mov
movsb
notl
int
fistpl
sbb
adc
xor
jmp
loopne
sub
hlt
xchg
sub
add
out
gs
les
push
add
add
pop
sbb
cwtl
pop
in
out
fwait
adc
scas
aad
add
xchg
mov
pop
lods
cmp
mov
cld
cltd
fwait
les
int3
int3
int3
int3
int3
in
add
add
add
lret
test
add
jg
dec
lcall
enter
push
add
add
popa
aam
mov
add
add
add
add
add
add
lret
push
push
add
inc
cmp
sub
add
add
inc
ja
mov
gs
or
add
add
mov
add
inc
adc
add
add
in
in
or
xchg
inc
mov
add
add
mulb
pop
pop
jl
gs
sub
cmpsl
xlat
mov
add
add
push
mov
sub
inc
cmp
add
add
cmpsb
fldcw
jnp
mov
add
mov
adc
push
sahf
sub
and
pop
addb
push
adc
add
pop
add
add
dec
mov
int3
int3
int3
int3
int3
jp
ss
out
add
add
in
hlt
iret
in
ja
mov
rcll
ror
add
add
add
add
add
mov
add
mov
jl
sbb
test
sub
jno
xor
push
stos
lret
mov
andl
mov
sub
and
movsb
add
add
add
push
push
add
mov
lret
test
inc
sbb
add
in
sub
faddl
arpl
ret
xor
out
lahf
jg
sbb
mov
outsl
repnz
cmp
cmp
mov
stc
insb
mov
add
add
add
mov
xor
icebp
fs
xchg
out
aad
add
out
ret
push
sbb
icebp
jo
cmp
add
add
int3
int3
int3
int3
int3
pusha
mov
jge
jp
out
add
jo
mov
add
add
cmp
imul
out
add
lods
out
test
popf
xorb
add
mov
xor
ret
pop
rorl
mov
jl
repnz
in
jle
push
scas
pop
insb
jbe
and
adc
adc
dec
pop
je
or
mov
fcmovu
sti
shl
iret
fdivl
inc
inc
push
test
and
add
lock
inc
std
xchg
ret
sub
in
lods
xchg
sbb
cmpsl
add
add
add
jno
mov
xor
sbb
adc
push
pop
adc
filds
add
push
xchg
jle
std
sub
add
stos
scas
test
test
pop
out
mov
mov
iret
rorl
ret
pop
sub
int
in
add
add
cmp
pop
dec
jns
pusha
xor
and
sub
pop
cld
rclb
std
add
add
dec
mov
in
xlat
adc
mov
jne
dec
loop
mov
popa
sbb
mov
shll
add
jmp
jmp
add
add
add
dec
aam
add
add
lcall
jmp
sub
push
mov
jl
dec
jbe
in
lock
add
add
mov
jbe
add
repz
dec
push
xchg
add
add
int
inc
es
dec
jo
lock
sbb
nop
nop
nop
nop
cli
negl
div
cs
lds
int3
push
out
add
add
rcr
lahf
pop
push
rcrb
cli
leave
div
lds
cmp
add
dec
jle
ret
andl
call
loope
xor
mov
je
push
in
pop
test
bound
idivl
mov
sub
pop
stc
aad
dec
add
add
add
inc
sub
dec
jno
in
xor
add
add
push
pop
lods
inc
fidivl
mov
mov
sarb
add
add
sti
popa
loope
or
add
add
inc
shr
mov
arpl
pop
mov
dec
sub
add
add
jbe
imul
add
add
push
sbb
fistl
dec
pop
add
add
fdiv
and
pop
test
push
sbb
int3
int3
int3
int3
int3
jbe
mov
test
cmp
bnd
add
add
add
xor
xor
pop
lcall
loop
repz
jo
repz
adc
std
in
jae
inc
in
or
add
add
rolb
add
add
sbb
mov
and
mov
mov
jb
inc
stos
ljmp
cmp
inc
clc
pop
outsl
dec
mov
arpl
shll
add
add
push
mov
shrl
loop
pop
das
mov
cmpsb
inc
popa
mov
inc
fiaddl
dec
test
or
add
add
jne
jmp
mov
adc
push
add
add
mov
inc
pop
dec
mov
adc
mov
add
add
je
cmp
pop
cmp
push
push
sub
cmp
add
cmp
adc
add
lds
push
lret
lret
ljmp
inc
pop
sar
push
fisttpll
out
add
add
jo
xchg
mov
add
add
jp
cli
and
cmpsl
icebp
int
jo
mov
ljmp
mov
out
adc
stc
sbb
and
enter
in
sub
jge
stos
ljmp
adc
les
pop
out
jb
cli
sub
mov
fs
dec
or
add
add
mov
add
or
add
add
sub
mov
or
scas
jg
jbe
add
iret
xor
add
add
add
mov
mov
ljmp
add
aam
xchg
cmp
or
add
add
dec
pop
add
add
enter
repnz
dec
add
add
xor
add
insb
add
mov
jo
loop
sti
fsubrs
jnp
mov
jo
adc
add
add
cwtl
jb
fwait
outsl
adc
lock
and
push
push
stc
rorl
add
add
mov
add
add
add
loopne
and
sbb
movsl
paddusb
jb
gs
add
mov
fldenv
pushf
pop
ss
or
add
add
add
add
add
add
aad
xor
sbb
xor
cwtl
dec
xchg
shrb
shrl
aam
enter
aas
fsubr
inc
add
add
xor
pop
add
add
cmp
add
add
xlat
or
add
add
pop
cmp
adc
or
or
add
add
les
adc
sub
add
add
das
faddl
sub
and
dec
pop
add
add
movsb
xor
xchg
movsl
sbb
lea
mov
leave
loopne
ss
dec
test
cmp
dec
sti
and
int3
int3
int3
int3
int3
aad
inc
and
add
ljmp
add
pop
pop
add
add
test
add
add
add
pop
xchg
and
wbinvd
add
add
and
pop
jo
test
add
add
lods
jns
adc
jne
cmp
xchg
jg
xchg
call
push
lock
ja
dec
inc
pop
jb
ss
jne
sbb
lods
daa
xor
fildll
icebp
rolb
add
shll
arpl
aad
insb
bound
add
add
iret
int3
int3
int3
int3
int3
subb
mov
push
add
add
add
inc
or
add
add
adc
sub
push
jns
add
add
inc
and
and
arpl
gs
xchg
scas
jp
mov
push
cmp
movb
add
add
add
aam
icebp
dec
pop
loopne
aas
adc
add
jno
pop
add
add
lahf
pop
mov
shrb
mov
add
add
out
and
pop
mov
jmp
repz
les
cmp
mov
add
add
add
adc
add
add
jbe
mov
cmp
add
add
aas
mov
inc
testl
push
dec
xchg
rclb
pop
add
add
in
aas
adc
add
add
add
scas
xchg
dec
leave
jecxz
clc
insl
jo
jecxz
sbb
test
imul
add
add
fdivs
jo
xchg
or
add
add
jo
ficoml
add
mov
adc
cmp
jecxz
lods
insb
adc
jno
aas
jge
mov
add
mov
mov
fadds
dec
inc
in
adc
push
je
add
add
add
xchg
push
fisubrl
in
add
mov
push
ret
sbb
data16
sbb
or
add
add
add
sbb
bound
mov
frstor
add
dec
or
add
add
int
add
add
add
xor
xor
and
add
add
popf
fdivrs
mov
cltd
xor
push
push
jl
cli
filds
call
call
pop
or
enter
shrb
add
add
hlt
add
add
add
test
add
aad
out
or
add
add
add
add
out
xor
mov
mov
dec
cwtl
loop
scas
sub
loope
and
and
pop
popa
fnsetpm(287
dec
stos
jbe
enter
push
mov
sbb
cmpsb
stos
stos
sbb
add
add
mov
test
pop
loopne
ljmp
leave
adc
add
inc
fdivr
test
cmp
outsb
pop
push
xor
subb
add
xchg
out
add
in
negb
add
sub
iret
cmp
daa
adc
je
pop
insl
mulb
add
loope
loop
stc
xchg
shll
mov
imul
shll
inc
nop
nop
nop
nop
nop
xchg
fistl
xor
lods
jo
ret
push
and
pop
imul
xor
cs
mov
push
adc
int3
add
repnz
add
pop
xor
push
test
and
xchg
inc
jbe
test
fimull
or
arpl
jbe
inc
aaa
and
mov
daa
or
adc
push
push
xchg
call
mov
inc
xor
test
adc
adc
fs
add
add
add
fstpl
push
iret
es
out
std
neg
xchg
int
aam
dec
adc
pop
roll
bnd
xchg
js
scas
mov
mov
ret
cltd
iret
mov
rcrl
pop
pusha
test
cli
clc
fisubrs
das
jle
movsl
and
mov
out
ret
ja
inc
sbb
test
jle
mov
cltd
add
add
jo
mov
add
stos
cs
adc
xor
dec
sbb
cld
jo
dec
pop
add
add
out
and
mov
mov
jb
add
es
fsubrs
jno
dec
stos
dec
movsb
push
adc
dec
out
je
inc
fs
mov
call
cmp
pop
adc
mov
dec
fwait
in
xor
rcl
fdivrl
add
add
addr16
add
add
adc
sbb
jl
std
push
mov
test
fimuls
add
jge
inc
rorl
pusha
push
inc
cmp
add
or
in
dec
ret
jp
mov
hlt
orb
jg
orb
shll
add
push
cmp
push
repz
aaa
shl
hlt
cmp
and
rcrl
mov
shll
add
mov
push
in
flds
cwtl
push
lahf
or
add
add
jns
push
jb
adc
rclb
int3
int3
int3
int3
int3
xor
repnz
mov
jp
xchg
adc
outsl
shlb
add
add
jb
xlat
cmc
cld
or
add
add
lea
in
add
add
mov
push
inc
xorl
add
add
mov
lods
je
imul
add
repnz
nop
nop
nop
nop
xor
mov
cmp
add
add
add
lea
icebp
test
popf
jns
fucomp
repz
jo
xchg
dec
jb
dec
sub
imul
add
add
mov
scas
outsl
sti
int
ficoml
and
loop
fistps
cmp
push
fsubrs
jl
out
mov
xor
insb
push
rcr
jl
test
popf
cld
jle
fnstsw
cmp
xchg
add
add
dec
push
int3
int3
int3
int3
int3
cmp
rcll
inc
in
in
push
bound
insl
fists
and
cmp
add
add
pop
push
movsl
pop
sub
xchg
ds
lods
mov
pop
add
add
xchg
add
add
add
add
sarb
push
add
add
add
sub
js
jnp
mov
cmp
xchg
nop
nop
nop
nop
daa
pop
clc
js
arpl
xrelease
add
add
cltd
cmpsb
lds
add
add
call
out
lcall
pop
xacquire
sub
add
dec
xchg
add
add
add
in
int
imul
or
add
add
dec
sbb
sbb
mov
pop
xor
ja
fnstcw
sub
sub
out
sbb
add
add
add
outsb
fisubrl
or
add
add
scas
jnp
aam
loope
sbb
addr16
add
add
pusha
lods
repz
add
add
add
add
add
mov
rcr
push
and
and
aam
add
push
sub
add
pop
fisubl
add
add
pop
dec
push
cltd
ja
std
jo
loope
fcompl
pop
xor
clc
pusha
outsb
pop
xor
pop
outsb
popf
xchg
sbb
pushf
mov
sub
imul
add
add
mov
mov
outsl
xchg
xlat
inc
lods
cmp
mov
xchg
out
sub
cmp
je
cmpsb
movsl
mov
jmp
movsb
out
decb
add
add
add
push
in
fimull
cmp
add
pop
in
cwtl
scas
lahf
mov
mov
imul
xor
mov
sahf
cltd
and
loop
std
aaa
sub
fsubl
add
cmpsb
mov
out
leave
in
jbe
add
add
in
jecxz
add
add
xor
nopl
mov
popf
imul
pop
add
add
add
xor
add
mov
jmp
lods
and
xchg
push
adc
cmp
add
add
icebp
int3
int3
int3
int3
int3
pop
pop
in
faddp
nop
nop
nop
nop
nop
sub
xor
add
cmp
sbb
jecxz
add
add
add
add
add
fwait
inc
mov
test
outsl
mov
negl
jg
push
jne
push
sbb
test
jg
fstpt
fstpl
cmp
jle
add
add
rcr
dec
fnstenv
gs
xchg
pop
add
add
inc
pop
mov
add
rorb
add
add
pop
push
xchg
mov
hlt
sahf
cmpsb
orl
mov
lock
dec
dec
xchg
add
sbb
faddl
add
mov
pop
mov
mov
dec
jb
cld
je
addb
jmp
hlt
jbe
xorl
add
ret
in
test
roll
add
add
add
repz
mov
pop
add
add
cld
add
add
add
arpl
movl
mov
pop
fisubrs
add
popf
dec
pop
pusha
adc
and
inc
jge
adc
lret
inc
inc
xor
aam
or
and
add
add
jnp
cmp
int
inc
and
notb
mov
pushf
xchg
mov
pop
cmpsl
xor
dec
lock
and
fdivrp
pop
dec
test
pop
ss
loop,pn
fiaddl
add
add
sub
outsb
lds
mov
add
add
add
add
add
add
lock
add
add
jmp
inc
mov
lahf
ss
nop
nop
nop
nop
testb
sbb
outsl
sub
aam
add
add
jge
pushf
add
add
add
cmp
add
add
jp
cwtl
jno
push
dec
inc
inc
pop
or
add
add
icebp
jge
imul
je
fs
cmp
cmp
inc
sbb
xor
test
int3
adc
add
rsqrtps
in
pop
out
sbb
nop
nop
nop
nop
nop
fdivs
ljmp
add
xlat
mov
shrl
cltd
pusha
bound
xchg
pop
add
add
cmpl
inc
rcr
pop
xchg
pop
add
add
std
in
dec
arpl
push
ds
out
int3
int3
int3
int3
js
loopne
aaa
clc
mov
mov
add
test
imul
int
push
insb
sti
pop
sbb
xlat
iret
add
add
add
add
add
stc
mov
add
cmp
mov
pushf
hlt
loopne
aas
sub
enter
or
add
add
add
add
xchg
lret
pop
inc
data16
popf
xchg
pop
push
xor
add
add
xor
sbb
add
mov
mov
inc
and
iret
sbb
add
insl
pop
mov
mov
adc
push
mov
rorl
inc
fcmovu
inc
das
mov
out
xor
cmp
fwait
popa
sbb
sbb
in
add
add
pop
add
add
inc
fldcw
mov
sub
add
add
add
and
call
push
fimull
add
add
je
sub
and
into
lahf
inc
loop
dec
jo
aam
xchg
push
dec
and
add
jae
mov
xor
add
cmp
iret
cwtl
addl
xchg
and
addl
sub
lea
xchg
adc
sub
out
add
add
pop
inc
int3
int3
int3
int3
int3
xchg
mov
xor
adc
add
leave
jae
js
mov
imul
xor
add
add
and
test
dec
jg
add
add
mov
cmp
popf
ss
fldcw
and
jnp
testl
movsl
pop
jmp
cmp
mov
in
outsl
xchg
lcall
sbb
jecxz
lret
call
stc
dec
xor
aaa
add
cmp
das
mov
add
add
add
add
add
mov
push
mov
mov
pop
insl
test
movsb
lahf
pop
lcall
mov
pop
xchg
xor
jge
xchg
lret
shrb
nop
nop
nop
nop
cmp
mov
out
add
add
mov
loopne
mov
xchg
adcl
mov
add
cmc
add
add
add
push
rcrl
icebp
xchg
add
add
add
mov
add
add
cmp
and
add
jbe
call
lret
xor
pop
mov
mov
xchg
and
leave
add
add
sbb
arpl
add
add
jae
lds
mov
add
add
inc
mov
cltd
add
add
add
shl
pop
pop
nop
nop
nop
nop
nop
cli
xor
add
add
stos
mov
inc
adc
lret
test
mov
mov
fwait
sbb
add
add
dec
sbb
add
lret
addr16
adc
add
add
cli
lahf
mov
loop
scas
sub
add
add
push
mov
cwtl
rcrl
push
leave
add
add
add
sub
and
jmp
xor
in
popf
push
cli
movsl
push
aaa
call
lret
int
jmp
pop
sub
mov
loopne
mov
test
pop
cmp
add
add
add
add
int3
int3
int3
int3
int3
aam
cmp
inc
sub
pusha
add
add
add
add
jl
mov
and
add
add
jecxz
add
add
push
shlb
movb
add
fisubrs
inc
pop
add
add
jge
add
add
inc
test
inc
add
add
add
and
sub
pop
sub
add
add
ja
dec
jbe
or
jmp
test
xor
repnz
mov
aas
mov
call
int3
int3
int3
int3
int3
sbb
cltd
pop
push
adc
or
pop
mov
mov
in
divl
add
add
sub
xor
ret
clc
fcmovbe
sub
adc
aas
inc
loopne
shll
or
pushf
movsb
push
shrb
jp
loop
stos
xchg
subb
pop
mov
ss
xchg
dec
inc
sbb
mov
dec
mov
push
mov
xor
sbb
lret
cmp
xchg
inc
sbb
add
add
ja
or
add
add
aam
mov
add
add
sub
cltd
insb
mov
jne
adc
scas
cmp
inc
inc
scas
cmp
mov
lds
and
pop
enter
pop
or
add
add
adcl
cld
pusha
mov
xchg
add
mov
sbb
xchg
jecxz
jne
shrl
stos
add
add
add
sarl
sub
mov
xchg
jl
pop
jg
or
pop
push
sub
je
sbb
add
mov
ret
push
or
add
add
jl
repz
in
add
add
mov
sub
movsb
add
jns
add
add
fsubs
nopl
mov
sub
add
add
std
mov
xor
jb
push
xor
jne
xorb
add
pop
add
add
jne
mov
mov
sbb
mov
add
jecxz
add
add
aam
loop
dec
jb
xor
mov
js
add
add
ret
lahf
shrb
xor
add
add
and
cld
ficoml
lods
or
add
add
jo
insl
jnp
gs
adc
sub
pop
data16
or
add
rorb
shrb
iret
sahf
sbb
mov
push
ds
push
pop
and
std
sbb
add
dec
pop
add
inc
pop
add
add
push
sub
mov
or
add
add
sub
cmp
call
movsb
orb
adc
or
add
add
cld
mov
cmp
and
mov
movsl
mov
idivl
pop
adc
xlat
ljmp
cmc
mov
cwtl
sarb
push
jae
sbb
fcoms
int
imull
into
lods
jg
add
add
add
notl
aaa
pop
and
jmp
ja
nop
nop
nop
nop
nop
inc
cmpsl
out
push
cmp
or
add
scas
test
mov
gs
add
add
jp
jp
cmp
mov
add
fimull
js
sub
call
adc
outsl
xor
mov
add
add
add
add
pop
stos
call
popa
mov
pop
aaa
add
pop
lret
test
dec
dec
jae
and
add
adcb
sahf
inc
mov
jp
call
scas
jmp
fbld
xchg
mov
insl
cmp
inc
dec
cmp
loope
popfw
aaa
insl
jns
jns
addl
fwait
push
add
shlb
cmc
ret
jbe
push
loope
les
testl
xchg
adcb
cwtl
lods
in
inc
push
add
add
stos
ljmp
mov
dec
ja
add
push
das
jne
je
addr16
xor
pop
scas
les
aas
in
cli
pop
notb
sub
fs
lcall
inc
daa
in
out
nop
nop
nop
nop
nop
ficompl
xchg
sbb
mov
bound
pushf
scas
inc
cmpsl
outsl
sbb
push
add
add
push
pop
or
inc
shl
inc
sbb
inc
inc
lods
push
push
in
fsubl
pop
mov
inc
mov
pop
jo
ficompl
sub
out
call
push
aas
les
add
jne
inc
sub
add
inc
mov
std
push
mov
push
aas
add
icebp
cs
pop
add
add
stos
push
pop
dec
in
fs
lds
xlat
pop
in
in
stc
stos
fbstp
add
lahf
sti
mov
test
add
in
cmp
sub
jo
cmp
mov
jae
dec
arpl
pushf
sub
into
push
add
add
jo
negl
jp
into
ficoml
nop
nop
nop
nop
nop
bound
mov
nop
nop
and
push
pop
add
add
add
aad
scas
adc
adc
add
inc
in
fldl
data16
jl
mov
test
int3
int3
int3
int3
mov
aad
jo
out
xor
push
adc
rcll
cmp
out
mov
xchg
negl
lds
cs
mov
mov
stos
icebp
sbb
cmpsl
adc
push
pop
movsb
ror
sbb
mov
outsl
sub
les
cmpsl
jne
subl
int3
int3
int3
cmp
jl
movsl
push
inc
push
mov
add
inc
gs
in
mov
mov
add
dec
int3
int3
int3
int3
int3
in
mov
pop
fcomps
outsl
stos
dec
mov
nop
nop
nop
nop
nop
aam
cmpsl
cmp
les
pop
nop
nop
nop
nop
nop
push
xor
jmp
pop
outsl
push
popf
jae
mov
inc
lock
sub
add
mov
push
in
lea
add
sbb
add
pop
push
add
add
out
sahf
xor
aaa
ss
sahf
lret
pop
sbb
mov
cmp
jnp
stc
dec
in
repz
xchg
pop
sti
push
sub
add
add
mov
mov
inc
lret
rcrl
fidivrl
jecxz
inc
mov
lret
cmp
add
mov
sarb
mov
imul
mov
and
dec
push
sbb
nop
and
cmc
movsb
aam
inc
mov
imul
fcoml
push
jno
pushf
fisttps
add
add
mov
pop
mov
mov
pop
stc
loopne
add
add
add
sbb
fs
xor
fbstp
mov
mov
pop
gs
cltd
jp
mov
dec
xor
sar
mov
ds
mov
test
addl
adc
xchg
xchg
mov
sub
aad
pop
pop
jo
sbb
incb
mov
call
notb
adc
ret
aas
cmp
xor
push
lret
hlt
pushf
mov
daa
stos
cmpsb
inc
push
xchg
leave
mov
mov
shll
add
sbb
fcmove
fnstcw
mov
pop
pop
cltd
cmp
add
add
insb
std
adc
out
sbb
fsts
push
cmp
adc
int3
int3
gs
sbb
cmp
insb
cli
push
sti
loopne
int3
int3
int3
int3
outsb
inc
cmp
ficompl
add
add
mov
add
add
mov
cmpsl
cmp
add
add
xchg
jmp
arpl
inc
addr16
test
ja
mov
movsb
pop
or
add
add
sub
inc
xlat
mov
push
cmpsl
cs
inc
in
fs
test
adc
sti
xchg
pushf
mov
jmp
popa
daa
or
add
add
mov
and
gs
add
add
add
mov
rcll
add
mov
int3
int3
int3
int3
xlat
mov
pop
add
add
adc
add
add
pop
divl
jg
mov
or
add
add
shlb
mov
loope
lcall
or
add
add
lcall
es
mov
mov
xchg
div
in
sbb
add
add
or
add
add
add
add
pop
dec
jmp
insb
push
or
jp
add
add
fwait
pop
scas
fmuls
or
push
es
or
stc
out
cmp
add
sbb
fidivl
jno
inc
mov
add
add
add
roll
ljmp
inc
pop
andb
stos
pop
enter
popf
rolb
add
add
mov
sti
mov
and
les
and
je
xor
pop
inc
sub
movsb
push
hlt
mov
js
subb
pop
out
push
add
add
pop
sbb
xor
pop
rolb
or
add
add
loopne
imul
adc
ds
jb
loope
add
add
add
std
ret
mov
fistpl
aaa
push
add
add
repnz
push
stos
mov
add
add
add
mulb
xchg
pushf
int3
int3
int3
int3
int3
cwtl
pushf
fs
xor
add
add
push
fisttps
add
add
lods
mov
repz
mov
fsubrs
icebp
data16
mov
loopne
and
out
aad
dec
lods
cmp
xor
pusha
call
mov
lea
jns
scas
jb
aam
lock
pop
sti
mov
and
adc
daa
lods
mov
push
int3
int3
int3
int3
int3
fldl
jmp
ds
or
mov
sbb
int3
int3
int3
int3
int3
and
pop
pushf
fs
loopne
jmp
jmp
and
sbb
mov
xchg
stc
lock
icebp
or
add
mov
and
cmpsl
add
add
cs
imul
das
add
dec
push
and
popf
pusha
mov
jge
xor
int
loop
bound
add
add
sbb
add
stos
push
xchg
add
mov
mov
fbstp
xlat
mov
jbe
clc
in
js
push
scas
mov
cli
push
add
fnstenv
inc
fists
pop
add
add
ficompl
sbbl
hlt
lods
loopne
cli
xor
adc
add
dec
in
int
mov
sahf
add
add
add
mov
rol
mov
sub
gs
daa
das
loop
push
pop
fisttpl
pop
leave
in
lahf
add
add
push
lea
add
fstpt
xor
mov
daa
or
add
add
jl
pop
xchg
clc
int3
int3
int3
int3
int3
add
add
add
xor
add
add
add
add
rolb
add
inc
test
out
andb
add
add
sub
adc
mov
test
in
mov
push
xor
jmp
jecxz
pop
pop
jmp
and
add
es
popa
cltd
cs
cmc
std
ds
add
add
push
lods
jmp
add
add
add
add
add
icebp
jmp
fdivrl
into
cmp
leave
fistpl
and
add
fdivl
ss
xchg
int3
int3
int3
int3
cmp
jno
jge
sbb
or
add
imul
subl
icebp
jb
add
std
sbb
lods
inc
fsubrs
loopne
dec
cltd
push
mov
add
add
push
cmpsl
xor
and
std
mov
scas
sbb
int3
int3
int3
jo
mov
mov
stc
mov
pand
insb
xchg
sub
push
xor
sub
fsubr
sbb
jb
repnz
out
loop
cmp
dec
push
jae
out
and
dec
or
add
add
push
mov
add
add
add
stos
dec
or
add
add
pop
insb
addr16
jo
insl
mov
cmp
dec
adc
add
cmp
xor
ret
dec
xor
cmp
add
add
add
or
jp
loope
imul
add
add
pusha
mov
jae
into
add
subl
in
cmp
in
xchg
pop
int
jl
xchg
mov
sbb
sbb
add
add
mov
das
jnp
fcompl
mov
lods
lret
cmp
repz
add
add
pop
fdivrl
jmp
push
add
add
add
add
add
inc
mov
cmc
icebp
ret
test
adc
dec
sbb
or
add
add
add
mov
aaa
hlt
loop
in
pop
add
add
das
xor
xor
in
inc
movsl
cld
test
call
sbb
xor
add
add
pop
mov
inc
add
add
add
add
add
add
lret
adc
cmp
repz
dec
in
xchg
inc
pop
mov
sti
sub
add
mov
lret
test
push
hlt
es
iret
sti
cmpsb
lods
mov
scas
xchg
mov
dec
stos
xor
inc
mov
cld
scas
sahf
mov
shlb
add
push
popa
mov
push
nop
nop
nop
nop
nop
or
add
add
enter
sbb
add
cmpsl
lock
out
push
aam
add
add
arpl
es
or
cwtl
jb
jle
stos
arpl
mov
mov
sti
jbe
push
push
ret
rorl
add
add
push
push
aad
jle
add
add
sahf
mov
imul
pop
repz
daa
movsl
push
add
add
fstpl
mov
out
cmp
int3
int3
int3
int3
mov
loopne
dec
dec
pop
add
add
sbb
add
add
add
int3
int3
int3
int3
push
ret
xchg
push
sub
add
xor
add
mov
bound
pop
out
lods
sbb
add
mov
clc
je
gs
and
sbbb
mov
pop
jge
xor
sub
add
add
jl
mov
mov
int3
int3
int3
int3
int3
xchg
and
inc
lods
mov
pop
mov
nop
nop
nop
nop
nop
gs
dec
pop
stos
sahf
pop
lock
mov
ret
es
clc
insb
inc
adc
mov
and
mov
add
and
push
push
std
and
movsb
imul
add
sbb
mov
mov
mov
add
mov
and
add
add
push
in
xor
add
add
push
xchg
mov
in
xor
or
add
add
pop
call
xor
sub
cli
jge
stos
sbb
add
add
add
add
clc
cmp
fstpt
dec
aad
sub
add
add
mov
push
add
add
add
mov
xor
insl
push
xchg
xchg
sbb
mov
dec
imul
add
add
jne
test
add
add
pop
out
push
out
xchg
insb
and
add
add
cmpsb
cmp
nop
and
xchg
cmp
cmpsl
mov
dec
out
std
add
add
add
add
add
or
add
add
mov
loope
sbb
and
sbb
dec
xchg
hlt
mov
lds
insb
and
ljmp
add
cmc
xchg
jae
fsubr
imul
movsl
push
imul
jl
cmc
jbe
jp
mov
cwtl
sbbl
or
add
add
jecxz
fwait
add
add
add
and
add
add
add
ljmp
and
ret
les
dec
adc
add
add
adc
pushf
and
and
ljmp
and
add
jg
mov
loop
into
test
sub
adc
jns
dec
popa
sub
add
add
add
add
add
xor
popa
cmpsb
mov
fisttps
jns
addr16
arpl
scas
or
add
add
add
add
add
mov
xchg
and
cmp
nop
nop
nop
nop
pop
add
add
stos
arpl
aaa
sub
mov
fbld
pusha
push
add
ljmp
adc
mov
popa
cmc
popa
das
dec
cmpsl
xchg
cs
push
xchg
lea
or
add
add
mov
add
add
add
outsl
in
cmp
stos
jbe
jecxz
imul
push
add
add
cmp
add
add
clc
or
add
mov
push
hlt
or
xlat
dec
xor
scas
dec
and
add
jno
or
add
add
imul
or
add
cmp
faddl
add
pusha
and
xor
fwait
push
icebp
pop
and
jmp
fs
lods
pop
xor
xor
push
and
scas
lock
add
add
adc
add
add
or
add
add
sub
inc
jo
mov
call
sahf
loopne
pop
shlb
out
loope
popa
shlb
nop
insl
std
test
mov
ljmp
lods
cmp
mov
or
mov
inc
inc
aaa
mov
popa
or
add
add
cmp
pusha
lock
rcrb
add
in
dec
and
mov
mov
jg
lahf
xchg
movsb
sbb
add
mov
std
or
add
add
or
add
add
dec
addr16
push
add
sbb
mov
out
push
cmp
cmp
mov
insl
lahf
mov
data16
lea
add
addb
add
add
add
add
add
int3
int3
int3
int3
bound
aas
rcrl
sahf
es
call
xor
nop
nop
xor
mov
cmp
add
add
and
add
add
rorb
out
xor
stc
daa
scas
stos
jo
pop
inc
subl
add
push
mov
jge
andb
add
add
aad
add
add
test
shll
adc
inc
jge
xor
mov
les
mov
add
add
add
bound
mov
xchg
fdivrl
inc
mov
inc
shrl
outsb
adc
rorl
jbe
sti
inc
inc
dec
mov
xchg
dec
sbb
sub
xchg
dec
ljmp
stos
cmp
add
add
stc
inc
das
push
mov
cli
xchg
sahf
sti
enter
add
jno
icebp
in
lcall
std
shlb
jns
lcall
add
add
dec
sbb
in
pop
sub
movsb
push
popa
jmp
jnp
sbb
call
js
xchg
loop
ret
je
lds
enter
add
add
dec
in
in
jno
cli
xchg
outsl
sbb
aas
iret
loopne
push
out
aad
lret
add
add
and
add
push
inc
loop
xlat
pusha
lret
inc
int
gs
pop
shll
in
gs
pop
mov
loop
add
call
stc
push
jle
imul
loopne
add
decb
add
add
mov
add
add
add
pop
mov
mov
aam
inc
add
add
add
mov
loope
sub
lcall
add
add
add
add
rorl
dec
imul
adc
or
add
add
fmuls
add
add
popa
adc
add
sub
mov
fs
jl
out
add
add
into
add
add
jmp
test
add
add
jg
mov
aaa
ja
movsb
mov
sbb
add
pop
pop
in
jns
add
add
add
ret
sti
mov
aad
xchg
dec
xchg
add
add
add
add
shlb
scas
add
mov
adc
pop
insb
ja
jl
sub
inc
flds
sbb
imul
jae
push
add
add
movsb
and
pusha
out
fbld
inc
or
cmc
repz
adc
add
inc
and
push
pop
pop
pop
xchg
jp
int3
int3
int3
int3
int3
inc
leave
push
pushf
pop
mov
xor
mov
add
add
add
rcll
hlt
mov
add
add
add
push
bound
add
add
add
jb
sbb
cmp
mov
xor
mov
cmp
cld
xchg
imull
decb
adc
popa
dec
test
mov
add
add
cmpsb
push
sbb
idiv
xchg
leave
xchg
test
fs
xchg
pushf
cli
dec
imul
xchg
lds
dec
mov
xchg
mov
dec
ja
jbe
loop
add
pop
aam
test
loop
or
jle
add
add
inc
xchg
push
ds
add
add
add
add
leave
leave
sbb
int3
int3
int3
int3
imul
hlt
jbe
ja
pop
sahf
bound
imul
xor
adc
lods
test
add
lea
add
movups
in
adc
les
add
addr16
fcomps
movsl
fldt
ficoms
add
inc
loope
jmp
mov
cli
push
add
add
jne
xor
test
push
add
add
dec
or
add
add
popa
lret
xor
add
jmp
or
add
add
call
ret
shll
test
sub
add
gs
lret
add
add
pop
add
add
add
lahf
lcall
out
add
add
add
pop
pusha
cvttps2pi
in
cli
push
outsb
adc
jnp
and
loop
stos
test
add
add
lahf
fcoms
sbb
adc
push
idiv
sti
fsubl
cs
pop
shrl
shlb
cmp
lahf
xchg
mov
sub
mov
or
fdivrl
adc
rcll
add
jne
cmpsl
pop
xchg
sbb
add
add
mov
dec
xchg
cmp
mov
insl
inc
lea
xor
adc
insl
cmp
add
sti
repz
adc
add
add
mov
sbb
jg
dec
add
add
add
push
movsl
jl
sbb
repnz
push
inc
ja
sbb
add
add
int3
int3
int3
int3
int3
pop
add
add
fwait
pop
or
popa
sahf
sbb
add
iret
pop
cmpsb
and
add
add
mov
pop
inc
xchg
fstpl
cld
mov
clc
xchg
dec
arpl
je
inc
imul
push
sub
dec
jmp
add
add
add
sbb
add
add
jne
ja,pt
inc
test
in
xchg
adc
movsb
mov
fs
cmpl
add
andb
shrl
add
and
and
repz
jg
inc
mov
push
add
add
pop
xchg
push
inc
iret
setp
or
cmpsl
test
lods
inc
inc
repnz
in
fs
lock
and
cli
xchg
imul
les
mov
add
add
imul
popa
inc
das
cmc
mov
int3
int3
xor
shl
repnz
sbb
call
mov
inc
repz
test
add
add
xchg
scas
jl
enter
dec
sbb
inc
out
test
or
add
add
lods
std
cmc
lcall
lods
mov
lock
int3
int3
int3
int3
call
push
jae
add
fisubl
les
add
lea
push
cmp
xchg
popf
out
in
mov
addb
add
sbb
xor
xor
add
add
jae
fstpt
nop
nop
nop
nop
nop
dec
jecxz
xchg
xchg
push
xor
in
fstps
out
out
test
add
add
add
jae
push
xor
cmp
mov
nop
nop
nop
nop
nop
imul
jg
xchg
jns
pop
popa
test
ja
fildll
mov
or
add
add
loop
fwait
mov
mov
ret
push
inc
jmp
or
add
or
add
add
pop
mov
push
and
outsl
pop
stos
push
pop
xor
xor
jle
mov
cltd
ljmp
sqrtps
outsb
pop
or
add
add
les
ret
sbb
rorl
das
adc
mov
push
add
add
xchg
xchg
xlat
cmp
sub
add
push
inc
xor
fisubs
jae
xchg
mov
aam
xchg
in
mov
add
add
jge
jle
pop
push
stc
movsb
rcll
in
lahf
ljmp
mov
insl
mov
mov
and
fprem1
pop
inc
ss
sbb
inc
sbb
or
add
add
rorl
pop
loope
fisubrs
sarl
add
add
push
xchg
std
mov
sbb
add
add
cmp
sub
test
ret
jle
dec
inc
mov
test
xchg
add
add
jae
cmpsl
imul
inc
dec
mov
icebp
mov
mov
sbb
out
sbb
cmp
addb
xchg
mov
cmpsb
jp
mov
add
mul
and
into
dec
out
jno
pop
or
add
add
add
sbb
aad
add
add
jbe
sbb
das
xchg
shrl
mov
add
add
add
mov
xor
fistps
add
add
fs
mov
sbb
add
push
mov
cwtl
push
fstpt
aad
xchg
test
and
mov
outsb
into
lods
fisttpll
mov
jo
loop
sbb
add
add
pusha
xor
ds
inc
jge
add
add
sahf
in
adc
push
add
add
xlat
jg
iret
cwtl
stc
sub
add
add
xor
add
jle
xchg
add
add
add
add
add
push
inc
scas
movsb
sbb
xchg
sub
inc
inc
int3
int3
int3
int3
int3
jnp
adc
push
cwtl
add
add
mov
mov
mov
loope
adcb
add
call
fildll
shrw
mov
loope
jmp
jnp
andl
js
adc
jnp
fidivl
cltd
imul
mov
jno
add
add
add
cmp
cmc
leave
cld
mov
mov
imulb
addr16
jmp
pop
loope
test
test
stc
mov
js
lahf
mov
sbb
mov
pop
fcompl
jg
leave
and
aaa
add
mov
jge
sub
int
das
pop
jo
and
lcall
add
aas
adcb
rcr
ror
lfs
mov
call
jecxz
sub
xchg
aad
or
add
add
and
mov
xorl
fadds
push
inc
out
xchg
out
jl
mov
stos
out
fisubl
xor
jge
pop
cmpsb
jnp
mov
sub
mov
add
add
mov
movsb
fsubl
cwtl
test
add
int
cmpsl
adcl
arpl
add
add
pop
clc
or
add
add
add
add
inc
std
rcrl
test
pop
gs
jp
lea
add
add
sub
mov
xchg
repz
add
add
fcompl
add
insl
jne
add
jl
and
or
add
add
sbb
cs
xchg
into
sti
dec
mov
xlat
lea
daa
sbb
add
add
add
sbb
lds
xchg
inc
enter
mov
add
lret
lock
cmc
jge
sub
push
sarb
es
jle
mov
adc
add
xchg
inc
dec
xchg
adc
mov
add
add
add
cltd
xor
pop
mov
scas
cmp
mov
mov
mov
cmpl
ja
pushf
sbb
add
add
call
notb
add
xchg
mulb
add
add
or
add
aas
aaa
push
dec
cmpsb
nop
nop
nop
nop
nop
push
add
add
add
mov
pop
add
add
jg
call
cmp
adc
cwtl
inc
lret
add
add
add
xchg
jecxz
mov
add
add
add
outsl
data16
cli
stos
xchg
subb
aaa
pop
add
add
out
stos
sub
mov
cltd
fstpt
mov
adc
loope
add
in
test
mov
push
add
add
lock
add
add
pop
les
cltd
adc
jle
into
mov
push
push
and
and
add
add
cmp
fucomip
jle
loopne
push
add
add
test
mul
xor
add
add
lahf
stc
pushf
xor
add
add
call
cmpl
gs
mov
aad
mov
das
add
sub
add
add
dec
push
jmp
bound
mov
dec
sub
jb
lock
or
add
add
stc
ret
xchg
pop
pop
add
pop
xlat
fadds
inc
out
repz
add
add
mov
and
stc
shl
inc
or
add
add
call
bound
les
and
add
leave
fnstsw
aad
lret
nop
nop
nop
nop
sub
out
xor
or
add
add
xchg
add
add
add
pop
inc
fmull
jo
lcall
fimull
std
sub
add
add
xchg
sbb
inc
adc
jg
fdiv
pop
idivl
mov
imulb
add
mov
add
pop
and
lahf
pop
aad
popa
and
xchg
pop
loop
adc
mov
pop
mov
or
add
add
andl
sbb
add
jb
jb
add
add
add
and
pop
add
shl
xor
push
pusha
icebp
js
sub
test
add
adc
arpl
sbb
mov
mov
out
or
sbb
ret
inc
add
add
add
cmc
lds
add
or
add
add
pushf
push
cwtl
xor
add
add
add
shl
push
add
cmp
add
add
inc
jecxz
push
jg
cli
insb
xor
adc
adc
aam
pop
fcmovu
cmpsb
je
sahf
fistpl
hlt
rclb
xchg
pop
adc
in
push
pop
adcb
or
ret
xchg
xchg
fdivs
mov
in
add
add
xchg
and
iret
cmp
add
out
mulb
mov
fisubrs
add
push
inc
push
xchg
insl
or
dec
jge
lret
cmp
xchg
add
add
imul
lods
or
add
add
mov
cmp
add
add
and
jp,pt
xchg
xchg
sub
arpl
mov
dec
repnz
fidivs
cld
aas
in
push
push
add
add
add
add
add
nop
nop
nop
nop
nop
fsubr
inc
or
add
add
jns
xchg
lcall
loopne
add
aaa
test
sbb
leave
lds
mov
sbb
add
add
add
sub
push
xchg
add
add
pop
mov
pop
call
and
add
add
imul
pusha
stc
and
shrb
and
push
cmpsb
pop
aas
outsl
lcall
inc
inc
or
add
add
mov
subl
movsl
divb
mov
imul
sub
data16
ret
pop
jo
call
inc
sbb
movsl
push
add
add
xor
popf
add
add
add
stos
loope
lahf
fnstenv
and
push
les
fmull
pop
push
add
sub
add
add
stos
or
add
add
and
mov
push
jns
or
add
add
loope
aam
add
add
sub
and
test
out
inc
cmpsb
dec
mov
orb
nop
nop
nop
nop
nop
and
inc
mov
test
out
xchg
cs
mov
mov
stos
xor
incb
add
mov
adc
nop
nop
nop
nop
nop
dec
out
add
add
add
repz
add
add
mov
pusha
ret
aas
and
or
add
add
xchg
add
push
pop
sbb
in
lahf
mov
add
add
or
add
add
pop
jno
push
add
add
add
imul
add
inc
add
arpl
lahf
pop
aaa
lcall
gs
in
pop
add
add
leave
dec
addr16
out
cld
scas
sbb
into
push
or
add
add
push
fidivrl
dec
or
inc
in
add
add
call
or
xor
lcall
bound
mov
std
ja
sahf
popa
orl
je
cmpl
int3
cmp
xor
xlat
mov
sbb
aad
add
add
add
cmpsb
dec
loope
out
or
add
add
add
dec
lcall
repz
add
mov
xor
xchg
call
mov
add
lret
xor
dec
pop
fs
jge
push
mov
btr
fildll
cmp
lods
jg
adc
cltd
fs
addr16
daa
pop
out
dec
lret
gs
dec
mov
push
add
add
push
je
gs
mov
pop
in
call
bound
add
add
xlat
insl
or
add
add
shr
or
add
add
stos
push
stos
in
out
out
mov
adc
aam
aad
jmp
add
loop
sbb
lahf
lds
js
adc
inc
cmp
adc
add
aas
dec
cmp
xor
adc
jmp
mov
out
pop
ss
sub
hlt
xor
add
int3
int3
int3
int3
int3
test
xor
das
add
pop
dec
mov
aad
popa
mov
add
aam
inc
sub
and
repnz
nop
nop
nop
nop
test
push
xchg
addl
shlb
sar
inc
arpl
jne
add
add
rcrb
xorb
inc
loopne
sbb
xor
pushf
mov
in
mov
inc
push
jmp
mov
cmp
das
ja
mov
popa
and
add
add
and
and
stc
out
push
bound
add
daa
mov
lock
push
sbb
das
outsl
mov
sbb
in
sbb
jle
fdivr
ja,pt
adc
sahf
mov
pop
dec
inc
sbb
mov
outsb
and
int
ja
rolb
int3
int3
int3
int3
int3
lods
mov
lret
pop
inc
add
add
fldt
mov
sub
in
addr16
xor
cli
xchg
jle
add
add
mov
stc
lret
xor
cmp
mov
xchg
outsb
or
add
add
add
add
fwait
cwtl
lcall
mov
out
sub
and
add
add
jp
repz
add
add
test
push
arpl
in
fwait
ds
jmp
jecxz
add
add
into
pusha
mov
sarb
mov
mov
int3
and
add
popf
scas
jb
or
add
inc
subl
aad
add
add
add
add
pushf
ja
pop
jmp
arpl
popa
in
fs
int3
int3
int3
int3
int3
or
add
add
mov
out
rolb
or
add
add
sub
push
pop
inc
xchg
jmp
ss
push
add
add
add
add
add
add
add
add
jmp
jae
mov
jge
rorl
je
nop
nop
nop
nop
nop
push
sbb
add
pop
xorb
jecxz
cs
pop
movsl
xchg
data16
cs
loop
out
jae
cmpsb
jmp
rorl
out
in
loop
lods
push
sub
add
add
ror
call
sbb
jnp
loope
insb
les
add
add
add
cmpsb
test
add
add
add
sub
call
sub
mov
divb
dec
rol
xor
add
add
pushf
dec
lock
add
add
cmp
inc
mov
imul
mov
aaa
cmp
sbb
or
push
adc
fcmovnbe
mov
pop
adc
or
add
add
int3
int3
int3
int3
int3
std
xorb
cmpsl
push
push
test
movsb
int
inc
push
in
cwtl
je
stos
jg
xor
inc
jno
pop
pop
push
lcall
or
xor
ljmp
push
insb
mov
cltd
cltd
xor
repz
arpl
popf
and
sbb
mov
jne
fldenv
jne
insl
mov
add
add
jge
xchg
and
push
loopne
inc
add
addr16
arpl
dec
pop
testb
pop
ja
mov
add
add
add
add
stc
inc
pop
mov
mov
mov
lds
out
and
arpl
sbb
data16
test
rcrl
enter
or
or
add
add
push
mov
out
ret
jbe
outsl
cmp
jae
jp
aam
mov
test
cmp
xor
pusha
jge
movsl
mov
mov
add
add
xchg
orb
add
outsb
xchg
dec
inc
mov
add
jp
mov
nop
mov
xchg
scas
sub
adc
mov
and
insb
mov
push
add
add
add
jmp
dec
sarl
daa
adc
stos
arpl
add
cli
cmc
std
int
dec
notl
jno
leave
xor
jle
add
jb
adc
sahf
into
ljmp
add
pop
nop
nop
nop
nop
nop
lahf
adc
aam
or
sahf
sub
call
es
xchg
aad
or
xor
dec
scas
outsb
outsl
and
xor
sub
inc
jge
in
or
int
add
add
ljmp
inc
stos
cs
mov
add
sbbb
daa
xor
addr16
mov
and
out
adc
mov
in
loop
add
rcl
dec
dec
sbb
inc
jp
stos
test
aaa
cmp
ja
call
inc
dec
lahf
adc
dec
xor
mov
add
lcall
pop
sbb
xor
ret
jae
js
negb
or
add
add
xchg
add
xor
imul
push
xchg
sbb
popf
je
add
add
pop
data16
mov
movsbl
aad
mov
loopne
mov
pushf
insb
push
lahf
adc
das
or
add
add
sub
inc
inc
xchg
out
jne
pop
cltd
loopne
or
add
add
repz
or
add
add
aam
add
add
in
pop
xor
and
shrl
enter
add
shrb
pop
rolb
add
add
fwait
pushf
pushf
scas
sub
push
or
add
add
shll
js
jbe
fsts
and
repz
xchg
mov
ss
les
mov
or
add
add
dec
sbb
adc
and
push
push
fdivrs
test
add
add
imul
add
add
add
push
hlt
xor
dec
push
dec
sub
inc
movsl
sbb
jg
cmp
int3
int3
int3
int3
dec
pop
mov
or
add
add
sbb
rolb
cli
push
nop
nop
nop
nop
nop
jge
int
sub
in
shlb
ret
test
loope
ljmp
mov
lret
xor
repz
mov
loope
lcall
add
add
rorl
daa
adcl
popf
lret
not
mov
sbbb
add
add
cmp
cld
adc
cmpsl
leave
jge
add
add
dec
push
rorb
sub
mov
sbb
popf
mov
fistpl
ret
mov
ret
sub
cmpsb
sub
add
add
not
add
add
add
add
add
sub
std
lahf
and
add
add
add
add
add
add
xor
cmp
ss
out
add
add
aad
out
or
or
add
add
add
add
xchg
cmp
sbb
xchg
outsb
inc
jne
pop
cld
push
jnp
js
add
xlat
sbb
add
add
les
pop
divb
xchg
inc
push
out
shrl
jno
jl
mov
das
cmp
push
pop
leave
paddb
add
add
push
in
fldenv
sbb
add
pop
add
add
jg
test
testl
pop
inc
stos
lds
add
add
inc
arpl
bound
add
sbb
out
aas
mov
insl
jae
add
add
pop
dec
jbe
mov
dec
aaa
jb
stc
sub
push
sbb
xchg
mov
jae
fstpt
or
add
add
dec
pop
imul
fnsave
add
lea
pop
or
add
add
push
inc
icebp
adc
nop
nop
nop
jecxz
nop
nop
nop
nop
pop
jne
sub
add
add
mov
add
pop
gs
xchg
out
popf
test
dec
adc
or
add
add
inc
fnstsw
mov
daa
jecxz
mov
nop
nop
nop
nop
pop
sti
lods
jmp
sar
rclb
enter
or
fadds
rcr
push
out
mov
lahf
fxch
int3
int3
int3
int3
pop
xchg
mul
adc
add
mov
data16
popa
gs
es
add
lret
or
add
add
add
add
add
add
fxch
or
add
add
add
add
mov
push
sub
les
ret
add
push
out
xor
or
add
add
push
mov
add
add
stos
inc
inc
jno
xchg
sub
add
test
jns
mov
add
push
out
push
shlb
stc
push
test
sub
add
add
dec
gs
cmpsl
inc
out
mov
mov
xchg
lret
outsl
cmpsl
or
add
add
or
add
add
or
add
add
push
jle
jle
bt
jle
enter
xor
loopne
cmp
int3
int3
int3
int3
int3
test
rorb
js
sbb
sub
test
and
js
sub
adc
je
decb
add
dec
sbb
cmpsb
xor
add
add
in
subb
dec
int
lds
push
fnsave
pop
mov
nop
nop
nop
nop
push
xchg
mov
aad
jnp
add
mull
test
sar
jecxz
movsl
std
pop
cmp
or
ds
or
add
add
addr16
xor
mov
mov
and
push
adc
add
add
add
pop
add
add
dec
scas
jo
mov
cmp
add
add
mov
fsubs
mov
add
add
and
mov
gs
nop
nop
nop
nop
dec
nop
nop
nop
nop
nop
xchg
cld
inc
lods
jp
sahf
aas
push
mov
add
add
push
add
add
aas
jle
cmpsl
int
pop
or
add
add
nop
subb
lahf
dec
dec
cmpsl
imul
lea
jmp
fbstp
inc
xor
inc
add
add
add
arpl
imul
or
in
mov
cmp
fcomps
mov
jl
add
add
arpl
cmp
mov
jecxz
add
rcr
je
jle
fadds
add
sub
fadds
add
add
movsb
pop
cmp
aas
mov
pop
aad
fwait
shll
add
add
es
stos
push
icebp
xor
enter
and
inc
and
lahf
or
push
add
add
int
aad
sarb
xchg
adc
arpl
fnstenv
or
add
add
and
mov
outsb
outsl
push
inc
cs
cli
sub
ret
xchg
cmp
add
push
rclb
push
inc
sub
pop
jl
mov
dec
xchg
or
sbb
test
add
add
xchg
ljmp
xchg
mov
mov
cmp
stos
sub
jge
int
xor
das
jno
inc
imul
fimuls
add
std
sbb
sub
loope
add
add
and
insl
xchg
in
and
pop
adc
mov
cmpl
mov
rorb
push
addr16
nop
nop
nop
nop
in
pop
les
add
add
or
add
mov
out
sbb
add
add
add
jl,pn
data16
xchg
movsb
adc
add
imul
sub
push
add
add
add
add
add
jbe
test
in
pop
jo
in
mov
push
scas
push
cmp
add
add
add
movl
aaa
and
filds
lods
icebp
out
and
mov
xor
xor
add
add
aam
jp
lret
dec
adc
add
ds
std
sub
rcl
mov
adc
mov
cld
hlt
test
inc
scas
sub
and
test
repnz
adc
add
jbe
pusha
loopne
push
leave
cmp
inc
test
lea
xchg
push
pop
add
add
add
repz
mov
xchg
sbb
out
fstps
cs
out
and
xor
in
mov
aas
push
mov
sahf
mov
mov
mov
add
add
or
ljmp
add
add
push
and
ss
add
add
xor
ffreep
iret
shlb
pop
push
aas
adc
leave
dec
in
or
add
add
fwait
xchg
sub
add
into
cmp
add
add
add
add
add
cmp
xchg
push
or
add
add
add
push
fistpl
movsb
xor
rcrb
lahf
outsl
cmp
mov
dec
test
add
add
push
in
jae
add
add
dec
fnstcw
and
push
test
mov
sbb
push
xchg
call
push
add
add
mov
lds
push
mov
sbb
int
popa
divb
add
add
add
jae
mov
add
inc
mov
dec
xchg
dec
mov
ds
inc
inc
in
repnz
mov
or
add
add
add
add
fldz
imulb
test
fcoms
repz
sbb
pop
lods
fsubrl
aam
mov
or
add
add
data16
add
add
add
add
aam
cmpsb
adc
push
sbb
into
movl
push
push
inc
aas
outsb
or
add
add
movl
out
les
add
lods
out
ror
push
mov
fiadds
add
add
inc
test
int3
int3
int3
iret
or
add
add
add
add
or
add
add
adc
rcll
add
xchg
loopne
and
insb
adc
add
add
dec
je
fisubl
push
mov
xchg
adc
fs
or
add
add
out
je
inc
add
std
or
add
add
insb
xor
add
add
cmp
addr16
jl
notb
ja
inc
jae
mov
jnp
pop
lods
jle,pn
in
mov
xor
cli
mov
int
push
add
add
lcall
push
xor
add
inc
loope
int3
int3
int3
int3
aas
inc
push
gs
add
sbb
jl
pop
lea
cmp
clc
fmuls
add
xor
fyl2x
stos
test
roll
mov
call
jle
test
mov
add
add
xchg
hlt
xor
mov
test
add
add
add
fsave
jmp
sti
inc
das
push
lock
jnp
add
jg
xchg
jmp
sarb
xchg
out
mov
mov
xchg
sbb
add
add
add
add
std
daa
inc
pop
lods
inc
mov
in
xchg
repnz
scas
xchg
cmpsl
and
shlb
add
add
jns
fcmove
and
jo
test
stc
jecxz
or
add
add
adc
add
add
mov
into
or
add
add
into
outsb
adc
add
add
sbb
add
add
add
add
add
mov
mov
inc
lret
or
add
add
lret
cli
shl
xchg
mov
push
in
add
add
add
pop
jo
sub
loope
nop
nop
nop
nop
mov
test
sbb
ljmp
shlb
cmp
add
add
add
lods
mov
mov
push
cmp
mov
push
add
add
xorb
push
shll
push
lods
js
int3
int3
int3
int3
int3
xchg
cmc
call
lahf
cltd
mov
jcxz
loop
sti
xchg
dec
fdivl
mov
dec
mov
push
add
add
mov
int
or
cs
inc
xor
inc
push
add
add
add
jbe
mov
sbbl
mov
inc
mov
clc
mov
mov
bound
add
add
in
jmp
mov
in
jg
incb
jnp
cmp
add
add
jge
lea
mov
sbb
add
add
adc
inc
lret
dec
adc
adc
pop
stos
and
in
dec
or
add
ror
in
mov
leave
aam
add
add
testb
add
add
daa
push
aaa
sub
test
popa
mov
mov
jb
fwait
call
dec
jbe
dec
push
cli
sub
mul
call
mov
add
push
add
add
lea
cltd
test
xchg
push
cmp
fldcw
xchg
and
clc
cmp
mov
inc
add
add
add
inc
cmp
adc
add
dec
loopne
rcll
xchg
dec
je
es
jno
cmp
xchg
and
imul
lahf
push
add
and
jp
add
add
add
jle
stos
push
pop
shl
std
popf
hlt
dec
sbb
out
xlat
xchg
mov
clc
js
mov
loop
add
popl
add
add
add
mov
cmp
pop
xchg
jno
xchg
mov
add
cltd
std
push
add
add
push
and
lods
pop
pop
sti
leave
push
into
sti
insl
scas
sbb
nop
nop
nop
nop
nop
mov
out
and
push
xlat
sub
out
add
add
sub
ljmp
out
mov
aam
movsl
mov
jge
adc
add
lea
jne
ja
add
add
push
add
add
ds
xchg
pop
fdivl
stos
sub
add
inc
mov
iret
imul
xchg
out
fisubs
add
pop
dec
jno
fstpt
add
ja
mov
sub
and
movsb
in
lods
cltd
loope
and
add
add
inc
xchg
scas
xchg
fimull
pavgw
jp
inc
gs
cltd
negl
cld
mov
jns
xchg
xchg
js
dec
int3
int3
int3
int3
int3
outsb
imul
int3
int3
int
lods
sahf
push
imul
cmp
or
add
add
pop
dec
add
add
add
add
add
cwtl
mov
imul
mov
sbb
add
aad
fwait
lods
jl
push
idiv
stos
inc
addb
add
add
add
pop
xchg
adc
mov
add
pop
lahf
inc
cmp
jl
stos
inc
or
add
add
leave
popf
add
add
add
sub
add
insl
push
es
xor
out
cmp
add
popa
stos
xchg
ret
mov
add
mov
repz
push
ljmp
int
xor
xor
xchg
cli
sarb
in
notl
out
cmp
cld
cmpsl
test
add
add
push
fnsave
dec
pop
sti
std
jge
and
movsl
adc
jle
pop
or
add
add
sub
xor
add
xor
ja
mov
xchg
or
arpl
sub
test
stc
jo
cld
push
out
adc
cmpb
or
add
add
push
out
dec
adc
xchg
in
or
pop
stos
aad
scas
subl
mov
je
adc
push
add
add
dec
stos
cmp
data16
imul
sbb
pop
xchg
js
adc
add
add
cli
rcll
shrb
aam
arpl
jle
mov
dec
or
dec
imul
mov
nop
nop
nop
nop
imul
mov
cmpsb
inc
cld
popa
mov
mov
insl
dec
ficomps
xchg
push
jp
add
add
add
add
add
xchg
leave
jp
add
stos
push
ss
add
add
or
add
add
pusha
aas
add
push
mov
dec
cmc
popf
cmp
add
add
add
dec
mov
mov
cmpsl
adc
push
xchg
cmpl
sub
mov
icebp
sbb
sub
leave
fcoml
in
sbb
jmp
fimuls
add
mov
jo
dec
cmpsb
adc
vpmacswd
pop
sbb
add
add
and
mov
pusha
sbb
push
cmpsb
sub
ja
incb
add
add
in
mov
xchg
fwait
pushf
mov
dec
dec
sbb
mov
pop
cmovl
cld
inc
cmpsb
cmpsl
stos
dec
pop
push
adc
adc
xor
aaa
sbb
je
outsb
cmp
in
aas
pop
add
add
fsubrl
dec
jb
add
je
in
xchg
pop
popf
sbb
sub
add
add
pop
stos
and
dec
pop
adc
popa
lds
add
add
and
imul
sbb
dec
or
add
add
cmpsb
xlat
jae
sti
mov
push
add
add
sarl
aaa
lock
mov
mov
lods
sub
add
dec
cwtl
jmp
popf
sub
in
mov
mov
mov
inc
icebp
mov
movsl
daa
sarb
mov
pop
add
add
stc
jnp,pt
insb
ret
aam
scas
aaa
add
dec
dec
xchg
xor
adc
dec
mov
aaa
xchg
cwtl
xchg
test
fisubrs
and
sub
push
add
add
inc
cwtl
mov
movsl
jmp
xor
or
add
add
add
add
sbb
mov
push
sarl
add
shll
shll
mov
je
cltd
loope
cmp
add
add
inc
add
add
add
stc
ret
fmuls
negb
add
add
inc
shlb
add
add
add
cmp
or
add
pop
lods
lret
pop
ljmp
sar
jmp
aam
mov
daa
cmp
arpl
lods
dec
jp
iret
stc
jns
popf
mov
repz
jp
push
cmp
in
or
add
add
jb
xor
jbe
xchg
mov
add
push
add
add
ret
ljmp
aas
aaa
cmpl
imul
xlat
imul
mov
lds
int3
int3
int3
leave
and
add
add
lcall
push
or
int3
int3
int3
jbe
push
mov
ja
cmpb
cmp
scas
and
jmp
pop
add
add
int
sbb
lock
into
push
add
add
mov
int
add
add
dec
dec
cmp
dec
shlb
iret
sub
add
add
push
push
pop
add
add
xchg
inc
sub
inc
jle
mov
mov
sub
mov
ds
mov
adc
loop
inc
adc
iret
jae
jmp
jne
cmc
jb
push
xor
pop
test
loopne
mov
cmp
add
pop
jmp
pusha
fstp
jmp
cltd
bound
rol
or
add
add
add
add
add
add
pop
dec
inc
out
sahf
hlt
push
add
add
in
jmp
mov
or
xor
xor
add
add
adc
add
sbb
stos
push
sub
aas
js
and
rolb
mov
push
sub
jbe
and
add
mov
aad
add
add
add
dec
je
cmpsb
cmc
xchg
xor
call
xchg
cmpsb
scas
loope
add
add
adc
jnp
jae
test
or
add
add
into
cli
xchg
inc
test
repz
lret
xchg
mov
add
test
mov
add
mov
push
add
add
fdivrs
sub
or
add
add
push
inc
or
add
add
lcall
cmpsb
loop
aam
mov
jae
xor
lds
add
add
add
add
add
int3
int3
int3
ds
xchg
imul
inc
out
popf
sbb
pop
movsb
pop
aas
or
pop
imul
lock
lea
out
add
call
mov
lds
add
add
fmull
jecxz
out
or
add
add
xor
cmp
mov
mov
faddl
add
add
shrl
adc
lea
mov
outsb
xor
add
add
je
std
push
out
xor
cs
lds
adc
add
sub
ss
fistpll
int3
int3
int3
int3
int3
sub
add
shlb
xor
xor
add
add
jne
add
add
pop
outsl
outsl
jle
pop
mov
int
sbb
test
add
out
mov
add
add
add
xchg
int3
int3
int3
int3
pusha
mov
leave
cmpsb
inc
push
call
call
or
add
add
int3
int3
int3
int3
cld
inc
jb
pop
mov
fildll
add
add
dec
rorl
aaa
add
scas
mov
add
loop
cmc
ljmp
mov
sbb
mov
fwait
repz
add
add
add
mov
jns
popa
std
xchg
lret
adc
xor
sub
stos
sub
fwait
mov
xor
dec
add
add
add
cmp
add
or
add
add
nop
nop
nop
nop
nop
or
imulb
mov
pop
add
add
or
add
add
add
mov
lret
rorb
cmp
add
add
add
into
xchg
cmp
sbb
and
add
add
add
pop
add
add
adc
scas
outsl
mov
dec
hlt
js
inc
pop
add
add
add
sbb
fucomi
daa
add
add
jns
pop
mov
jne
inc
subb
xchg
xchg
xchg
xor
add
leave
popf
rcll
add
add
jae
pop
das
sahf
xchg
mov
push
add
add
in
dec
pop
add
in
or
add
pop
rcll
pop
xchg
add
add
mov
or
add
add
add
add
xchg
jge
cmp
xchg
testl
mov
filds
xchg
xchg
add
add
add
push
jae
rorl
push
pop
add
add
sbb
cmp
add
cs
add
xchg
rcr
stc
add
add
add
scas
daa
cs
and
loopne
add
add
jmp
fisubrs
push
dec
push
fmuls
jmp
sbb
push
mov
adc
add
cld
cmp
faddl
add
add
adc
cmp
add
add
add
add
add
lahf
xor
dec
orl
lods
dec
int3
int3
int3
int3
int3
sub
adcb
loope
or
add
add
shrl
ret
sub
mov
push
hlt
sahf
dec
ficoml
cmp
dec
add
add
add
rep
adc
call
add
add
add
pop
test
add
add
push
ret
out
push
inc
dec
cmpsb
sarb
lods
pop
add
add
jb
add
add
add
adc
popa
push
add
jno
pop
ja
xchg
mov
xor
daa
repz
int
into
dec
in
pop
nop/reserved
add
push
pop
jnp
ss
inc
sbb
add
add
out
xchg
dec
xor
sub
add
add
dec
in
mov
pop
pop
jb
call
dec
jle
int3
int3
int3
int3
int3
insl
or
cmp
cmp
add
in
out
sub
jecxz
dec
sub
xchg
adc
aad
cmp
push
pop
inc
clc
mov
inc
insl
xor
push
loopne
jmp
shlb
test
add
adc
add
add
shll
add
inc
pop
pop
jb
scas
sub
add
add
add
pushf
imul
cmp
mov
sbb
dec
jno
jo
add
add
add
jo
push
imul
mov
sbb
add
sar
int3
int3
int3
int3
int3
jns
pop
dec
in
decb
nop
nop
nop
nop
stos
fistps
mov
cmp
ja
mov
and
js
inc
in
stos
loopne
scas
jp
mov
iret
mov
outsl
out
addb
mov
jb,pn
sub
ja
jnp
sbb
test
add
xor
faddp
push
sti
pop
dec
or
ljmp
mov
out
lcall
xchg
xor
aas
stc
inc
call
push
fiadds
lock
add
dec
push
sub
fidivl
fsts
sbb
int3
int3
mov
push
loop
outsl
adc
movsb
subps
les
pop
sahf
addr16
pop
clc
lods
and
cmp
adc
mov
adc
sub
fwait
leave
and
je
fnstsw
add
add
insb
or
add
add
hlt
push
dec
dec
xor
or
add
add
mov
call
sti
mov
popa
stc
sbbl
popa
mov
add
subl
sbb
add
test
xchg
push
jge
xor
outsl
mov
mov
lds
stos
arpl
addr16
gs
rcll
leave
jmp
mov
insl
cmp
daa
movsb
aaa
xchg
stos
movsl
out
push
loop
mov
shl
adc
or
add
add
add
add
xor
xor
xchg
inc
movsl
std
les
aas
shrl
add
popa
push
fnstcw
mov
mov
cwtl
fsubl
jle
mov
inc
push
jns
es
cmp
fidivl
mov
int3
int3
int3
int3
int3
push
add
add
movsl
hlt
push
into
rcl
clc
test
out
and
sub
pop
add
stos
xchg
mov
into
and
clc
sub
add
add
push
sbb
int3
int3
int3
int3
mov
rorl
subl
pushf
ret
addr16
add
add
add
jbe
call
mov
mov
sbb
and
cwtl
stc
fidivrl
or
add
add
add
add
add
or
add
add
push
iret
sub
sbb
add
add
test
add
ret
aam
in
add
stos
sbb
lods
es
scas
xchg
out
fidivrl
push
mov
cltd
or
in
add
or
cli
stos
arpl
hlt
jne
pop
sub
stos
jge
pop
jns
push
fsubp
sub
sub
call
je
add
add
pop
xchg
fisttpl
mov
add
das
ljmp
les
add
lahf
inc
pop
rcrb
push
hlt
dec
xchg
and
lods
ds
xor
add
add
mov
cmp
mov
dec
pop
insl
or
add
add
int3
int3
int3
int3
int3
cmp
nop
nop
nop
nop
nop
lock
test
divps
cli
mov
cmp
jne
lea
xchg
dec
cmp
pop
lcall
mov
add
add
jge
add
add
idivl
call
test
add
add
insb
pop
xchg
push
fsubr
jo
decb
movsb
mov
adc
adcb
dec
jmp
pop
sbb
outsb
aaa
pop
mov
repnz
loope
push
lds
add
rorb
add
mov
testl
xlat
push
pop
xchg
jns
neg
out
sbb
aam
sub
cs
add
in
fwait
arpl
fsub
std
lret
int3
int3
int3
int3
dec
xchg
insl
jbe
mov
test
mov
out
xor
add
test
shlb
cmp
imul
fcmovnbe
mov
dec
jmp
jo
mov
and
pop
add
add
or
add
add
lcall
pop
or
add
add
iretw
add
add
testb
mov
jmp
jo
call
fbstp
push
sub
add
or
add
add
add
add
mov
add
add
mov
xchg
mov
ja
mov
xorb
out
and
shrl
lahf
cmp
xor
inc
xor
mov
and
mov
jle
lods
sbb
das
in
insb
or
add
add
cmp
inc
pop
xlat
xor
xchg
inc
inc
out
jle
cltd
popf
inc
xchg
sub
inc
filds
jmp
push
jnp
jnp
dec
nop
nop
nop
nop
nop
lcall
jp
mov
mov
push
cwtl
cmpb
xchg
sbb
xor
add
add
jnp
lcall
orl
clc
inc
push
repnz
int
sub
aam
popf
in
in
fcmovu
inc
push
popa
dec
dec
mov
lret
inc
jecxz
sbb
cmp
aas
inc
jno
insl
lret
bswap
xchg
shl
sbb
jmp
fcompp
push
ds
int
ds
xor
stos
dec
clc
mov
and
add
sub
jnp
add
add
mov
xchg
sbb
push
or
add
add
mov
rcl
jle
scas
andb
int3
int3
int3
int3
and
sub
daa
out
pop
xchg
cli
int3
int3
int3
int3
int3
lret
add
add
mov
jp
sbb
xchg
imul
add
xchg
sub
jns
je
outsl
push
cli
std
or
add
dec
inc
adc
sub
add
add
add
icebp
xchg
aad
dec
xor
add
lods
cmp
inc
iret
das
sbb
movl
add
add
add
cmp
out
xor
lcall
enter
add
mov
xchg
xor
imul
add
add
or
add
add
pop
cmp
cli
adc
add
adc
cld
movsl
iret
div
push
jae
clc
pop
or
add
add
mov
fldenv
add
jae
jl
xor
add
out
mov
mov
stos
push
mov
test
shl
dec
or
add
add
xor
jbe
sub
mov
add
mov
scas
mov
add
add
aam
mov
adc
pop
movsb
setge
insl
aaa
out
inc
mov
pusha
dec
xlat
std
std
cmp
sub
repz
xor
add
popa
cmp
aad
mov
ret
aad
jp
push
or
add
adc
add
add
xor
add
add
jmp
pushf
push
fdivs
and
aam
or
and
loope
je
or
mov
mov
push
lret
add
add
pop
cmp
cmp
ret
xor
add
add
mov
ficomps
add
repnz
jle
mov
jecxz
inc
xlat
xchg
jbe
mov
movsb
pop
pop
stc
jle
fnstsw
cwtl
xchg
mov
in
das
push
out
or
add
add
inc
pop
cltd
repz
out
addb
add
add
test
add
dec
adc
add
sbb
xor
add
mov
sbb
mov
cld
add
add
int3
int3
int3
int3
add
add
add
xchg
push
push
jge
mov
jg
std
clc
pop
or
add
add
outsb
sgdtl
add
add
pushf
cltd
sbb
sbb
lret
cs
add
add
jg
rcrb
inc
shll
aam
inc
aad
inc
mov
dec
je
push
sahf
pop
jmp
push
sbb
push
add
add
dec
cmp
add
add
add
ljmp
jno
push
add
add
adc
int
les
add
push
jbe
xchg
jecxz
outsl
gs
push
aas
xchg
add
add
xor
in
xchg
add
add
push
stos
jo
hlt
mov
dec
inc
xor
mov
mov
mov
fmuls
lods
mov
mov
adc
xchg
int3
int3
int3
int3
int3
inc
sbb
xchg
and
add
outsl
pop
neg
not
movsb
mov
mov
fwait
testl
add
add
add
das
fsts
add
xchg
fidivs
mov
fs
aam
push
fldl
cmp
add
add
sub
sbb
add
add
add
cmc
dec
push
add
push
sbb
xor
and
push
ret
mov
push
daa
lods
or
add
add
sahf
mov
movsb
and
xchg
mov
and
adc
test
add
add
dec
lcall
add
test
adc
xor
push
pop
paddd
and
xchg
pop
cmpsb
mov
adc
jle
clc
clc
push
repz
mov
arpl
or
data16
cld
adc
add
add
xor
lret
sub
outsb
shl
rolb
add
add
push
jge
sub
xor
cmp
push
lret
add
add
add
add
add
mov
cs
inc
sbb
loope
add
cmp
mov
fisubrl
popa
cmp
fdivs
arpl
push
inc
push
xchg
adc
mov
mov
dec
sahf
sub
push
stos
jns
cmp
mov
inc
insl
pop
loope
insb
loope
push
mov
dec
cwtl
sub
add
add
mov
add
sbbl
jge
in
std
pop
jbe
jne
test
and
mov
sbb
jp
sti
repnz
cwtl
cmp
imul
add
add
add
in
lcall
add
add
out
cwtl
int
cmp
je
sub
push
sub
add
adc
int
stos
lock
xchg
inc
ja
testb
xor
cmp
push
in
pop
add
add
or
add
add
insb
or
add
add
pop
das
mov
cmp
add
daa
inc
inc
mov
or
loop
mov
movsl
adc
mov
jg
add
push
add
add
stc
mov
pop
push
pop
push
mov
daa
push
jb
out
and
mov
adc
in
imul
add
lahf
adc
push
testb
add
add
xchg
and
add
add
inc
dec
daa
adc
push
jnp
arpl
and
add
add
mov
and
std
pop
cmpsl
movsb
les
and
jp
push
lea
mov
mov
add
in
fcmovu
mov
adc
sub
add
outsb
pop
dec
adc
sbb
add
fstpt
ret
dec
shl
rcrb
cmp
push
cmp
add
add
inc
jmp
cld
mov
int
pop
dec
sub
jne
into
hlt
sbb
add
jmp
inc
ds
in
pop
adc
xchg
pop
xor
popa
xor
add
rolb
add
out
or
add
add
mov
sbb
stc
sub
inc
add
add
add
fdivl
addl
add
add
ret
scas
popa
mov
xor
mov
add
scas
mov
xchg
inc
mov
pop
mov
adc
xorb
ja
add
add
add
add
add
daa
cmp
add
add
add
add
add
add
add
ds
in
fildll
out
ja
sub
mov
mov
mov
xchg
add
add
add
push
jne
or
add
add
add
add
jle
outsl
lahf
xchg
outsl
or
add
add
cmpsl
xchg
arpl
add
mov
inc
push
adc
add
add
mov
adc
mov
test
add
add
add
push
loope
nop
nop
nop
nop
nop
adc
adc
add
pop
test
jle
cmp
mov
ret
add
add
ds
push
add
add
or
add
add
out
movaps
sbb
push
data16
out
icebp
add
add
sbb
jno
add
add
lahf
aas
call
fisubs
add
add
fcomi
orb
add
dec
sub
lds
add
add
clc
adc
ss
lcall
add
add
add
push
or
add
subb
xor
outsb
or
add
add
fidivl
ljmp
stos
jne
mov
pop
sub
or
add
add
jg
stos
js
adc
sbb
xchg
scas
lods
jge
dec
inc
fnstsw
cmp
adc
add
add
add
jmp
dec
cmp
mov
lcall
push
mov
xchg
fidivrs
mov
cltd
in
push
lahf
adc
add
add
pop
mov
outsb
add
add
add
xlat
js,pt
add
xor
add
add
ss
fs
cmp
cmpb
add
sbb
sahf
fwait
lock
jb
lret
xchg
pushf
ret
sbb
cmpsl
dec
inc
mov
or
add
add
xorl
imul
cli
jecxz
add
add
add
or
add
add
add
sub
sar
jmp
inc
jno,pn
mov
add
icebp
xor
jge
mov
cmc
ret
dec
das
lods
xchg
jecxz
dec
jns
aas
mov
imul
scas
cmp
add
add
dec
into
sub
push
add
mov
push
xchg
jb
xchg
pop
dec
jmp
shrl
mov
outsl
jns
sub
add
add
or
add
add
shr
es
xor
jmp
shrb
push
add
add
lcall
add
xchg
inc
xchg
loop
adc
fadds
push
add
add
xchg
jno
leave
test
cmp
add
cmp
mov
sbb
sub
les
fndisi(8087
loopne
jae
movswl
or
add
jmp
or
cmp
js
dec
cmc
dec
leave
in
sbb
add
add
jne,pn
dec
std
sub
sbb
jb
daa
or
add
add
sahf
ds
add
add
dec
test
cmp
and
push
dec
mov
dec
std
lcall
subl
adc
int3
or
add
jnp
cmpsl
stos
bound
sbb
dec
push
imul
rclb
add
rcr
popa
arpl
inc
sub
andl
add
inc
push
out
push
test
add
add
out
lea
js
adc
stc
or
add
add
push
cwtl
xchg
pusha
lret
pop
xchg
insl
xor
jnp
mov
jge
mov
mov
sbb
test
rcr
mov
bnd
inc
mov
push
inc
imul
push
jb
xchg
fcoml
sub
out
dec
xor
add
add
jl
cld
add
sbb
inc
mov
aam
push
out
ret
test
sub
push
mov
into
jl
adc
push
cli
inc
cld
shl
pop
cmp
xor
xchg
adc
cmp
xchg
cld
ds
inc
xchg
xchg
scas
or
adc
xor
mov
xorl
add
add
add
push
and
aam
pop
pop
int3
int3
int3
int3
int3
dec
lock
cmc
ret
insb
mov
jne
outsb
hlt
add
add
add
repnz
cmp
or
add
add
jno
push
push
jns
test
cmp
add
add
cli
and
int3
int3
int3
int3
int3
xlat
fs
jmp
pop
int
xchg
imul
lret
xchg
pavgw
int3
int3
int3
int3
adc
lock
outsb
pop
mov
dec
fwait
out
xor
sub
addr16
jge
add
test
add
mov
pop
sub
xchg
in
lds
push
adc
mov
dec
sub
arpl
out
jbe
aaa
cli
push
lret
pop
or
push
movsb
add
add
add
shrb
adc
mov
sub
mov
cmpsl
push
add
add
shlb
xor
sti
lahf
aas
ret
inc
mov
stos
jo
popf
lods
dec
sub
mov
jmp
cmpsl
js
arpl
pop
push
and
loope
cli
cmp
inc
out
gs
mov
mov
add
cmp
add
add
push
mov
adc
sub
outsb
ljmp
sub
add
add
leave
cmc
pop
mov
xor
xorb
repz
test
pop
mov
jge
add
add
xchg
jbe
stos
daa
jp
leave
jo
mov
sbb
shlb
jl
add
iret
xor
adc
xchg
cmp
add
add
add
pushf
sub
add
add
add
out
or
int3
int3
int3
xchg
push
and
mov
fldenv
mov
mov
or
pop
out
mov
shr
xchg
cmp
cmp
and
pop
add
add
jno
bndstx
test
lea
pop
stos
xchg
cwtl
xor
repnz
or
add
add
sti
out
clc
sarb
nop
nop
nop
push
std
fwait
jmp
aam
fstps
mov
lea
shrl
add
xor
fs
cli
mov
bound
daa
testb
add
add
mov
push
sub
add
aaa
adc
call
inc
sbb
add
add
push
jo
push
or
pop
pop
es
loopne
cmp
xor
pop
insb
sbb
xor
xorb
add
add
repz
push
add
add
add
xchg
or
add
add
int
add
add
add
mov
jp
mov
mov
pop
add
add
icebp
mov
jg
imul
add
and
add
inc
sbb
lock
inc
adc
mov
sub
adc
cmpsl
mov
push
lods
aaa
aam
imul
mov
add
add
aas
rorl
add
add
xchg
arpl
and
popf
cmpsb
and
add
popf
add
add
rclb
out
int3
int3
int3
int3
xchg
incb
add
add
or
add
add
add
orl
add
add
cmp
sub
push
inc
popf
popf
data16
jp
sub
xchg
test
jb
inc
into
pop
sub
into
xchg
data16
mov
fistpll
iret
cmp
sub
lods
ror
aaa
pushf
jl
pop
mov
and
sldt
test
movsl
or
lcall
add
add
add
cmp
je
lods
sbb
or
add
add
cs
or
add
add
pop
int
jg
xchg
lods
lcall
add
xchg
cmpsl
xor
mov
lret
push
inc
xor
dec
jne
sbb
jmp
mov
pushf
je
cmp
adc
or
outsl
inc
icebp
out
scas
fcompl
xor
int
test
add
add
pop
add
add
sbb
aaa
je
and
outsb
je
fs
ja
sub
test
and
add
repnz
sar
mov
cld
mov
int
xchg
aam
pop
or
add
add
xchg
dec
inc
sub
mov
repz
popa
jbe
lods
in
mov
jb
mov
add
fs
or
outsb
fnstsw
mov
lgs
pop
or
rorl
or
mulb
mov
fists
dec
movb
add
add
jbe
add
add
xorl
add
add
sbb
sbb
adc
pop
dec
xchg
lods
cmp
push
mov
xchg
nop
nop
nop
nop
nop
xorl
add
fistps
add
out
negb
and
ret
mov
push
mov
cmpsl
test
cmp
mov
dec
push
shrb
sti
frstor
adc
cmp
add
add
add
aas
daa
sahf
pop
addr16
jns
jnp
add
add
mov
pusha
fisttpll
add
sti
jne
into
in
jne
add
add
sbb
add
add
add
and
cmc
jb
aas
push
in
aas
adc
and
push
jo
imulb
iret
cmc
mov
and
aas
arpl
sti
scas
das
testl
ja
mov
adc
push
mov
pop
mov
mov
loope
push
repnz
push
inc
xor
add
add
mov
add
add
add
cmp
aad
and
pop
arpl
jae
subb
mov
sub
fwait
mov
add
or
add
add
add
add
xor
mov
test
dec
jge
cli
les
add
add
shlb
shl
xor
lcall
in
mov
jecxz
aad
test
mov
insl
das
dec
stos
lea
xchg
test
mov
stos
clc
pop
rolb
aam
lock
push
jle
arpl
add
add
bound
add
int3
int3
int3
int3
mov
mov
loope
jne
aas
inc
dec
jbe
iret
ja
add
scas
fisubs
xchg
pop
adc
adc
inc
dec
push
ljmp
sbbb
inc
popf
test
pop
and
add
lds
hlt
lret
dec
mov
mov
add
add
xor
add
add
push
sti
or
add
add
lock
in
cmp
inc
fwait
pop
dec
push
enter
jecxz
add
add
add
out
loop
fdiv
adc
cmc
push
inc
dec
lret
arpl
inc
sub
add
faddp
idiv
jns
add
add
add
dec
push
add
add
addr16
add
add
push
xor
and
lds
and
pop
add
dec
icebp
repnz
test
in
in
jo
pusha
jb
and
ja
lods
add
add
push
add
add
mov
jae
hlt
enter
int3
int3
int3
notb
fidivs
push
stos
dec
sbb
mov
arpl
add
outsl
dec
cmp
sarb
lods
add
add
add
dec
adc
add
add
dec
popf
push
add
add
add
mov
add
movsl
ss
aad
add
popf
inc
dec
nop
nop
nop
nop
nop
dec
pop
jmp
xchg
lods
pop
lock
add
add
hlt
xor
ja
push
mov
add
add
add
lds
movsl
xchg
rcl
xchg
fstpl
sbb
and
sbb
add
sldt
insl
je
xchg
icebp
push
add
add
and
add
add
jae
add
add
add
test
cmpsb
push
inc
inc
sub
pop
cmpsb
fidivl
rcrb
xchg
sbb
inc
add
add
add
cmp
mov
or
add
mov
sbb
add
add
add
xor
jl
aam
add
ret
pop
add
add
cmpb
adc
out
mov
sbb
jge
cmpsb
lahf
lret
mov
push
xchg
bound
insl
mov
jmp
pop
jne
push
push
add
add
cmp
add
ret
mov
and
sbb
imul
loopw
leave
sub
add
mov
xchg
sub
mov
adc
add
add
add
add
add
jno
inc
sub
das
add
pop
pop
scas
jle
mov
out
cmpsb
ret
movsl
dec
and
adc
add
xlat
cmpb
sbb
mov
inc
push
enter
add
mov
add
add
in
lret
add
inc
enter
fstpt
jnp
add
add
jae
scas
lahf
adc
and
cld
inc
in
push
cmp
bound
cmp
add
add
add
ret
test
lret
test
cmp
clc
xor
inc
je
add
add
icebp
cld
mov
test
or
add
jmp
cmp
pop
xor
mov
add
add
nop
nop
nop
nop
nop
xor
cmpl
scas
sbb
xor
clc
xor
add
inc
fwait
adcl
push
cmp
push
shlb
in
xchg
mov
addr16
pop
mov
mov
aas
loop
scas
sarl
lret
inc
sbb
mov
add
add
add
js
cmp
cmp
add
xorb
jp
fcomp
mov
or
add
add
push
aam
stos
push
jge
test
sub
and
cs
daa
fs
es
mov
iret
jp
fisttpll
mov
cmpsl
mov
jg
imul
mov
lahf
sbb
or
add
add
jmp
mov
push
fsubl
ljmp
jl
push
in
add
add
add
int3
int3
int3
int3
sub
or
add
add
add
add
sbb
add
mov
adc
scas
aad
enter
push
loope
dec
fs
sbb
sti
jp
fisttpl
adc
add
add
add
outsb
mov
out
hlt
cmp
in
test
xchg
fdivl
scas
cmp
push
fistpl
and
dec
fwait
iret
xchg
repnz
add
add
and
add
int3
int3
int3
int3
int3
lods
sbb
pop
pusha
lret
add
add
add
add
roll
scas
mov
jo
int3
int3
int3
int3
mov
enter
nop
nop
shl
xor
jb
lds
push
shl
movsb
and
add
add
mov
jl
notb
jo
cwtl
pop
mov
sbb
loopne
hlt
fistps
or
add
add
fldl
add
add
rorl
aam
pop
into
enter
add
add
add
mov
xchg
jbe
imul
add
mov
addr16
das
pop
mov
lock
in
push
add
mov
repnz
dec
sbb
int3
int3
dec
cmp
rcr
lcall
and
mov
push
sbb
sbb
loopne
jmp
dec
sub
hlt
pop
pop
add
add
push
cmp
cmp
pop
add
add
leave
loopne
sub
ret
test
iret
pop
sbb
mov
and
dec
and
cmpsb
cmpsl
cld
jmp
mov
rcr
enter
add
lahf
dec
cmc
xlat
add
add
add
sub
sub
nop
nop
nop
lcall
add
xor
cld
mov
adc
fisttpll
mov
push
lods
jmp
fs
cmc
gs
jne
lcall
scas
out
flds
add
icebp
pop
dec
mov
add
add
add
push
lods
adc
xlat
pop
push
es
in
add
sahf
pop
clc
push
mov
sub
pop
or
add
add
mov
in
test
xchg
sbb
xchg
xchg
ja
scas
bound
test
sub
add
int3
int3
int3
int3
in
aaa
mov
add
inc
lods
test
xchg
cmp
push
and
inc
xchg
orb
fldcw
push
sub
sbb
movsb
cli
rorb
mov
repnz
inc
lock
add
add
push
fdivl
shll
jecxz,pt
mov
mov
add
add
jb
jmp
out
xor
add
add
sub
dec
test
out
inc
mov
cmp
pop
jo
sub
stc
dec
jp
inc
pop
outsb
inc
sub
mov
sub
fnstenv
divl
lds
rorb
mov
xor
add
mov
lods
xor
loope
xor
push
fucom
loop
or
add
add
dec
jle
mov
mov
sbb
and
add
add
inc
jp
dec
sbb
cmpl
adc
pop
sbb
add
insb
and
ja
jle
mov
jno
sbb
add
stc
fsubrl
cmp
add
roll
mov
jl
lea
add
sbb
and
pop
data16
mov
xchg
testb
dec
xorl
inc
mov
clc
sbb
outsl
jmp
cmp
add
add
fldenv
add
add
gs
fdiv
outsb
ss
pusha
pop
fmuls
adc
jne
imul
outsb
cld
cmpsl
repz
add
add
leave
pop
loope
pop
add
add
es
mov
loopne
pop
scas
mov
jp
loopne
inc
jmp
sbb
pop
sbb
add
add
jle
mov
ljmp
push
fs
and
or
add
add
push
cmp
scas
cltd
add
aam
sbb
loopne
loopne
mov
test
clc
sbb
lea
add
dec
pop
add
add
mov
xchg
cmp
mov
pop
bound
mov
pop
sarb
jnp
dec
icebp
test
mov
add
push
add
add
sbb
mov
cmp
mov
dec
rcrl
lret
sbb
add
loopne
mov
xchg
loope
pop
scas
inc
dec
mov
and
push
aas
mov
sti
mov
and
sbb
and
push
xchg
enter
cmc
mov
iret
in
dec
mov
shll
sbb
pop
add
add
mov
xchg
idivl
adc
iret
ds
ret
sbb
sar
jno
inc
jae
pop
push
test
add
add
mov
xchg
lea
int3
int3
int3
int3
int3
xor
cwtl
loope
arpl
add
out
pop
mov
add
add
fbld
roll
mov
cld
xor
sub
xchg
pop
and
loop
sti
insb
fwait
aam
push
push
aas
add
jecxz
lahf
cmp
sti
mov
inc
repnz
add
add
add
or
add
add
xor
xor
fwait
sahf
jmp
xchg
and
adc
pop
add
add
loopne
scas
push
cmp
push
sub
push
shlb
aaa
sub
add
jbe
mov
in
lret
cmp
loopne
cld
xchg
inc
cmp
test
in
jb
ljmp
outsl
sub
scas
sub
arpl
or
mov
add
cltd
add
add
add
lods
or
sti
xor
sub
xchg
sti
sub
inc
leave
ret
xor
add
xor
or
add
add
add
add
rcl
sbb
jne
pusha
add
add
add
or
add
add
lods
xor
imul
cltd
aas
pop
icebp
sbb
andb
out
sti
sbb
mov
and
insb
fsts
cld
int
rcrb
addr16
sub
nop
nop
popa
bound
add
add
adc
inc
mov
std
fsubl
push
xorl
ja
nop
nop
nop
nop
ret
cmc
test
out
and
inc
xor
add
add
add
shlb
add
add
mov
lahf
int
xlat
and
lods
add
xchg
loope
or
add
add
mov
dec
inc
xchg
jl
arpl
add
add
mov
adc
fwait
jb
xor
inc
cwtl
push
pop
aas
es
push
add
add
add
cmp
sbb
lock
push
add
add
pusha
mov
test
fisubs
mov
add
add
ror
mov
out
pop
iret
pop
out
jl
or
add
add
or
lret
dec
cli
pop
push
add
nop
nop
nop
nop
nop
mov
add
add
aad
roll
add
add
int
mov
imul
add
cs
idivl
loop
cmpsl
pop
add
add
mov
mov
shrd
test
aas
iret
xor
add
add
pushf
add
add
subl
sbb
add
add
mov
je
outsl
add
add
add
adc
dec
aas
shr
sbb
inc
dec
in
out
mov
add
add
sub
cld
and
add
sub
cltd
cmpl
js
daa
pusha
and
pop
test
jle
mov
mov
mov
cltd
add
add
add
bound
int3
int3
int3
int3
int3
add
add
add
lods
cld
add
add
add
xor
dec
jmp
out
or
add
add
mov
add
nop
nop
nop
nop
nop
add
add
add
dec
mov
inc
mov
cld
cmpsl
js
add
add
add
add
add
dec
fimull
int3
int3
inc
sub
aaa
ljmp
or
add
add
add
add
sbb
cmp
jne
insb
and
js
xor
push
xchg
add
add
add
rcr
xchg
xor
add
xorl
xchg
test
pop
jg
dec
cld
adc
push
lcall
push
out
xor
add
in
inc
fwait
mov
xchg
jl
mov
imull
test
add
add
nop
nop
nop
nop
nop
add
add
add
inc
and
add
add
out
xchg
ja
sbb
sbb
inc
and
mov
jbe
decb
mov
adc
outsl
xor
pop
lock
data16
cmp
dec
inc
and
int3
int3
int3
int3
int3
mov
fldenv
sub
push
stos
and
add
add
add
add
add
inc
mov
loopne
fstpl
or
add
add
mov
hlt
add
testl
lahf
fadds
cmpsb
call
xchg
repz
jecxz
fwait
cwtl
cmpsb
or
add
add
add
add
add
inc
jb
ds
dec
dec
jg
mov
scas
inc
xchg
pop
add
add
lret
or
mov
out
lret
scas
js
fstl
repz
add
add
add
add
add
add
add
push
add
add
add
push
rorb
fistps
inc
dec
test
mov
inc
jg
cmp
xchg
jecxz
inc
in
outsl
mov
pop
pop
test
stos
jno
pop
mov
lret
cmp
das
jecxz
hlt
add
add
add
push
sbb
add
add
jne
adc
add
mov
lods
pop
add
add
add
in
add
add
adc
xchg
fisubrl
push
sti
adc
mov
pop
orl
pop
mov
jo
loopne
jmp
add
add
repnz
and
adc
adc
es
push
add
add
dec
jecxz
sbb
add
add
add
sti
popf
stos
fildll
lcall
jne
pushf
push
sbb
pop
dec
in
call
stos
pop
daa
xchg
in
push
mov
add
add
dec
adc
pop
mov
int3
int3
push
imul
sahf
in
fidivl
inc
adc
dec
hlt
pop
ja
callw
adc
add
add
mov
sbb
out
es
xor
sub
sahf
aad
loopne
sub
lods
mov
dec
and
cmp
aad
mov
add
add
push
mov
cmc
mov
inc
scas
in
lods
js
mov
add
add
add
inc
popf
in
add
add
nop
nop
nop
xchg
sahf
leave
js
xchg
cmpl
add
add
add
out
lock
add
add
xlat
inc
dec
jnp
jo
scas
aaa
inc
and
nop
popa
mov
jecxz
push
jno
mov
cli
cmp
iret
mov
rorl
add
add
fstpl
leave
lea
cmp
pop
popf
retw
push
shl
dec
shll
cmpsl
or
add
add
pop
imul
add
int3
int3
cli
inc
or
jmp
sarb
xor
fcompl
std
popa
insb
adc
push
fisttpll
mov
cmc
jb
fdivp
add
cld
dec
inc
or
add
add
inc
aaa
stc
or
add
add
mov
jp
add
add
add
add
jp
xor
mov
sub
fs
leave
mov
clc
out
mulps
popa
scas
mov
mov
xchg
loopne
or
jns
dec
andl
repnz
add
and
xlat
insb
pop
sub
add
add
add
or
add
add
inc
test
fdivp
sbb
test
mov
out
hlt
aam
pop
int
loope
mov
and
xchg
xlat
mov
sbb
inc
and
add
cmpl
push
jae
pop
jne
stos
add
add
add
inc
push
insl
and
inc
xchg
ror
mov
stos
dec
movsb
sub
pop
pop
test
gs
add
add
outsl
push
les
orb
loopne
mov
mov
dec
mov
scas
je
inc
jbe
scas
and
add
add
in
pop
mov
movsl
into
jne
sub
add
add
mov
fld
or
add
add
pusha
mov
dec
xchg
jb
fmull
hlt
test
push
test
imul
add
add
add
testb
add
aaa
xchg
leave
pop
loop
imul
add
lds
in
cs
rcll
push
inc
shlb
pop
mov
xchg
add
or
add
add
push
add
add
jnp
std
jmp
cmp
ljmp
in
stos
in
add
add
add
pop
lods
dec
xchg
jne
movb
add
add
add
add
and
dec
enter
mov
xor
add
dec
nop
nop
nop
nop
nop
call
xchg
test
fwait
jno
sbb
jbe
mov
add
push
xchg
popa
dec
xchg
out
sti
mov
ss
test
inc
cmp
lahf
push
mov
inc
xor
add
fistpl
cmpsb
and
dec
lahf
push
mov
nop
nop
nop
nop
nop
aam
ja
add
cmpsl
xlat
add
add
add
xor
jl
cmpsb
loop
ds
pop
or
add
add
and
and
or
add
add
leave
cld
xchg
and
inc
rcrb
and
pusha
fistl
lahf
cld
popf
sbb
fwait
in
aad
loopne
or
add
add
add
add
daa
jns
xor
test
lods
in
xor
push
movsb
push
lret
mov
adcb
mov
aaa
xorl
out
jb
ret
cmp
or
add
add
les
add
add
push
hlt
fstps
stc
pusha
mov
and
movsl
fwait
cmp
subl
icebp
stos
sbb
add
add
fstpl
add
add
and
add
or
add
add
pusha
shl
mov
xchg
ljmp
fists
sahf
cmp
add
add
cwtl
cli
pop
ss
mov
cmp
sti
inc
sub
add
daa
jo
add
add
add
xchg
push
xchg
pusha
negl
sbb
mov
ljmp
inc
or
add
add
mov
adc
xlat
jmp
test
add
out
cmp
mov
add
out
push
clc
int3
int3
int3
int3
int3
jecxz
fwait
mov
xchg
xlat
xlat
ljmp
add
add
insb
fisttps
add
push
cmp
repz
add
cmpsl
aad
mov
sarb
xor
mov
add
add
sbb
add
add
movsb
push
fs
ss
movsb
pop
jbe
cmp
cmp
fisubs
or
add
add
add
add
mov
mul
pushf
mov
or
push
lods
xor
xchg
adc
add
push
jp
out
pop
pop
mov
jno
mov
jp
mov
out
and
mov
jne
lods
pop
clc
into
iret
mov
xchg
cli
repnz
jmp
fcmovnbe
add
add
add
test
push
sub
add
add
pop
cmp
test
inc
add
inc
lods
aas
dec
dec
cmp
imul
adc
sbb
lcall
loope
insb
add
add
add
mov
add
outsb
and
jnp
add
add
test
iret
mov
lret
dec
test
and
sbb
test
add
add
rorl
or
add
add
in
call
sbb
imul
insb
jmp
add
add
add
movsb
xor
lret
add
add
shrb
das
outsl
adc
dec
hlt
sti
or
add
add
inc
jp
mov
add
add
test
sbb
jecxz
inc
adc
add
add
shlb
rcl
rcrl
add
and
add
mov
add
add
es
add
add
add
add
inc
sub
add
add
mov
xchg
test
pop
adc
mov
push
js
add
add
add
icebp
xchg
clc
adc
adc
je
das
pusha
xor
jno
ja
push
push
xchg
mov
aam
rolb
jae
data16
add
add
pop
icebp
lea
sbb
jge
dec
cmp
add
add
xor
or
add
add
add
add
mov
mov
mov
dec
adc
add
add
pop
xchg
mov
mov
add
add
std
add
add
xchg
add
add
add
inc
popa
jb
jns
ljmp
mov
inc
cmp
add
add
jl
es
xchg
icebp
and
xor
add
add
jns
cmpsl
std
and
imul
inc
push
add
add
jge
jle
mull
mov
dec
mov
sbb
xchg
inc
out
mov
lret
push
add
fisttpl
icebp
shll
inc
inc
cmpsl
cmp
add
add
push
test
out
jae
xchg
mov
mov
test
and
mov
inc
add
add
add
add
sbb
mov
pushf
ror
adc
cmp
adcl
mov
cld
popf
into
or
add
add
int
dec
jecxz
jb
sub
pop
lock
mov
sub
rorb
add
add
aaa
addr16
fildl
mull
xor
add
add
fdivr
repz
xchg
xor
aam
inc
add
add
xchg
add
add
mov
pop
push
lods
mov
add
add
push
outsb
add
add
add
sub
test
cld
cmp
add
std
and
adc
mov
mov
sub
jb
and
jg
mov
test
adc
in
jmp
popa
push
jae
rcr
je
lods
pop
mov
jmp
or
add
sub
pop
add
add
add
dec
icebp
xor
in
js
lahf
dec
sahf
ds
fidivs
pop
fsubs
jmp
scas
mov
rcr
aas
outsl
adc
nop
nop
nop
nop
dec
movsb
xor
add
outsl
rcl
lea
push
pop
add
add
loopne
mov
jb
arpl
cld
jg
lods
mov
dec
lods
cmpsb
out
repz
cmp
jle
imul
add
add
ss
sbb
xchg
cltd
mov
adc
cmpb
in
cld
pusha
pop
mov
add
push
lret
cwtl
adc
punpckhbw
add
add
push
sahf
test
cmp
xchg
fsubrs
sub
add
add
enter
inc
push
add
cs
cltd
sub
jmp
sbb
jb
fdivrs
cmp
call
xchg
xchg
mov
xorl
cmp
std
add
add
add
enter
add
push
shr
testb
add
mov
es
imul
add
pop
sti
jecxz
aam
imul
sbb
xlat
push
movsl
notl
sbb
mov
rcll
dec
rcl
cmp
add
bound
lret
inc
sub
cmp
js
dec
nop
nop
nop
nop
nop
mov
push
jns
pop
mov
xor
adc
sub
int3
xor
lea
xchg
push
pop
jle
movsl
and
rcrl
or
add
add
movsb
das
repnz
pop
es
or
add
add
add
add
pop
pop
push
fwait
or
add
add
mov
or
add
add
cmp
sahf
repnz
js
mov
and
adc
fbld
loopne
imul
add
filds
dec
xchg
pop
cmp
add
add
jne
pusha
ret
push
push
neg
jecxz
adcb
dec
inc
outsl
jmp
imul
add
add
mov
add
add
mov
rep
imul
adc
mov
fnstsw
pop
add
add
imul
add
add
xor
iret
inc
in
jl
xor
aad
clc
es
pushw
mov
mov
jae
rcl
in
mov
outsl
xor
add
add
add
add
int
popa
cmp
addr16
xchg
mov
insl
fwait
mov
mov
mov
icebp
xchg
cli
pop
cmpsl
push
push
or
adc
push
adc
inc
bound
pushf
sub
aas
sti
mov
rclb
sub
add
xor
pusha
xchg
aas
pop
gs
push
inc
mulb
ret
or
add
add
arpl
add
add
jge
pusha
mov
add
add
sub
iret
mov
sbb
scas
sbbl
mov
push
add
add
xor
sarl
imul
or
add
add
pop
add
add
add
movsl
cmp
push
mov
into
cmp
mov
adc
inc
add
add
add
adc
ret
sbb
jge
js
inc
dec
add
add
add
ret
clc
imul
pop
iret
cli
pop
nop
nop
nop
nop
nop
cmp
sti
in
and
add
add
mov
mov
push
cmp
add
shr
test
add
add
pop
mov
mov
or
add
add
jo
fdivl
add
xor
hlt
lods
dec
adc
add
add
subl
add
pop
test
pop
clc
adc
add
add
popa
outsl
addb
and
mov
ret
sbb
lret
js
add
add
inc
xchg
clc
pop
and
jne
outsb
addl
push
push
cmpsl
push
lahf
stos
ss
dec
sti
lds
push
mov
push
nop
nop
nop
nop
nop
movl
faddl
rcl
sbb
add
add
adc
es
lock
add
push
add
push
mov
sub
xor
lret
xlat
movsb
inc
in
outsb
adc
mov
xchg
jmp
inc
fcmove
add
add
add
scas
mov
push
int3
int3
int3
int3
push
add
inc
mov
lret
insl
sti
lock
add
add
add
and
sub
add
add
inc
clc
into
push
inc
das
clc
popa
hlt
jno
and
cmpsb
add
cs
pop
xchg
jl
sbb
std
std
sti
inc
out
sub
int3
int3
int3
int3
sbb
in
adc
cmp
add
add
in
sub
jge
push
sbb
sahf
ret
and
add
add
std
into
lret
sarl
pop
mov
in
hlt
jmp
aam
jo
inc
into
xchg
pop
push
inc
mov
loop
fidivs
sbb
ds
arpl
cmovle
add
add
and
inc
leave
mov
stc
pushf
insl
outsl
xlat
mov
cwtl
and
cmp
jbe
mov
xchg
scas
test
cld
xchg
fs
nop
nop
nop
nop
nop
fs
shr
mov
and
xor
add
add
add
int3
int3
int3
int3
xor
sub
mov
in
cmp
in
fs
enter
add
xchg
std
aam
test
loopne
cmp
add
add
add
mull
add
hlt
mov
or
add
add
and
cmp
xchg
lahf
adc
hlt
out
add
add
and
adc
add
add
add
push
pop
stos
mov
cld
xchg
popf
mov
insb
xor
test
pushf
inc
pop
jno
sbbb
insb
hlt
push
add
add
inc
sbb
dec
les
xor
sub
or
add
add
test
fnstenv
inc
inc
xor
add
add
xor
mov
cmpsl
mov
pop
sub
int
push
jmp
dec
jns
mov
and
sbb
push
lret
xor
sub
cwtl
out
mov
mov
cmp
add
lret
xor
clc
mov
repz
jae
add
add
rcrb
jmp
cmp
fmulp
add
add
add
in
add
push
xchg
adc
pop
mov
xchg
and
mov
add
add
lods
push
dec
pop
mov
inc
adc
cli
es
adc
inc
daa
ja
xchg
push
sub
add
inc
cmp
shrl
fidivrl
adc
jo
and
adc
cmpsb
or
add
add
or
add
add
pop
cmpsb
rolb
icebp
jge
in
push
scas
push
add
pop
call
call
mov
push
clc
push
dec
or
pop
stos
and
xor
add
add
add
and
push
cmpb
in
test
icebp
or
add
add
xchg
imulb
add
roll
mov
dec
mov
mov
push
cpuid
mov
insb
push
add
add
add
and
and
add
add
add
xchg
push
gs
jo
adc
loopne
cwtl
push
add
dec
loopne
enter
add
and
mov
add
add
in
mov
sbb
pop
add
add
push
mov
scas
or
add
add
add
add
ljmp
add
repz
outsl
hlt
fs
dec
testl
add
add
xor
add
add
xchg
loope
sahf
stc
ror
ss
imul
push
add
add
pop
mov
mov
outsl
sbb
push
into
add
add
add
cmpl
mov
jmp
mov
test
inc
enter
xchg
mov
push
cs
dec
mov
xchg
negb
inc
jns
out
imul
mov
cmp
clc
enter
add
repnz
scas
es
daa
popa
out
add
add
sbb
cmp
xchg
jno
adc
int
add
push
in
push
cmp
inc
or
add
add
loopne
iret
enter
in
mov
inc
xor
add
cmp
jle
sbb
add
cs
lods
clc
std
stc
jne
mov
pop
cmp
dec
push
xchg
pop
mov
lret
icebp
ds
insl
in
jo
popa
push
add
fbld
scas
leave
xchg
ret
in
addr16
jnp
shlb
ja
ficompl
jl
lcall
jge
cld
and
dec
out
repnz
lock
sub
repz
dec
scas
or
mov
adc
repnz
add
stos
mov
lds
lahf
cltd
or
add
add
ds
cmc
xchg
inc
out
dec
clc
int3
int3
int3
int3
int3
mov
pop
imul
add
or
add
add
push
and
aaa
mov
xchg
dec
aaa
int3
int3
int3
int3
int3
shl
inc
and
fwait
mov
xchg
clc
fsubrs
mov
shr
fstl
loop
mov
adc
mov
cmc
jmp
mov
mov
in
xor
xorl
add
scas
pop
imulb
idivb
or
or
add
add
jg
mov
xor
shrl
ja
gs
les
sub
adc
add
adc
add
add
pop
arpl
add
add
push
xchg
pushf
fsub
cmp
mov
jg
ficompl
inc
jmp
fistl
pop
inc
pushf
popf
add
add
add
dec
in
iret
lret
jne
popa
ret
add
add
add
inc
sarb
lret
or
add
add
or
scas
cmp
mov
pushf
sub
add
test
pop
jg
repnz
lds
popa
test
mov
je
inc
cmp
scas
cmpsl
pop
fwait
push
add
add
mov
fwait
iret
inc
push
cli
jbe
and
fsubl
push
sub
add
add
and
add
add
das
sbb
inc
movsb
fcmovu
mov
scas
push
js
jle
adc
les
bound
int3
int3
int3
int3
int3
mov
add
add
shrl
testb
push
stos
pop
enter
push
push
sarb
insl
xchg
test
out
add
add
jno
dec
test
outsl
insl
or
add
add
mov
nop
nop
nop
nop
nop
ret
cmp
xchg
dec
add
add
add
mov
sarl
add
add
subb
push
cmpsl
fisubs
fidivl
mov
das
add
mov
rcll
hlt
or
out
push
xor
loop
inc
stos
add
add
add
call
cmpsl
call
adc
add
mov
add
add
add
add
add
add
lret
jnp,pn
insl
movsl
xor
jl
in
int3
int3
int3
int3
int3
push
int
add
add
mov
jecxz
mov
adc
data16
mov
jmp
xor
xchg
and
or
add
add
int3
or
add
movsb
stos
test
xchg
and
pop
je
adc
pusha
xchg
les
pushf
movsl
push
andl
sti
mov
add
inc
push
add
add
subl
push
in
mov
pop
outsb
dec
xchg
dec
movsl
leave
loopne
scas
mov
inc
jae
pop
rol
xlat
aad
sti
stos
add
add
add
lahf
mov
aaa
sbb
iret
movsb
mov
imul
add
add
cmpl
pop
cmp
int3
int3
int3
int3
adc
iret
in
mov
xchg
hlt
repz
pop
aad
adc
mov
mov
pop
pop
aam
jno
call
loop
dec
movsl
mov
dec
jns
pop
sub
mov
cmp
add
add
dec
das
mov
mov
in
adc
push
movsl
sub
pop
pop
jg
push
adc
dec
cmp
fisubrl
add
add
jnp
popa
ja
mov
xor
pop
lods
adc
enter
mov
dec
jle
add
add
popaw
mov
stos
das
adc
add
mov
push
mov
fnstenv
cltd
pop
pop
gs
add
add
mov
xor
add
add
xchg
pop
adc
sbb
sbb
pop
xor
add
add
test
jae
cld
sbb
add
add
and
loopne
popa
mov
push
call
sub
jnp
xchg
sahf
pusha
jge
and
test
add
fistl
adc
inc
adc
add
shrl
mov
cmp
mov
imul
out
add
shll
xchg
data16
dec
mov
das
xchg
and
loop
popf
xor
sub
inc
inc
and
push
popf
sub
lahf
insb
pop
aaa
test
icebp
lret
ror
fcompl
inc
mov
adc
cmpsb
jns
cmp
into
cli
adc
jp
push
xor
mov
add
add
push
hlt
dec
mov
sub
add
mov
mov
add
add
jge
mov
jne
add
add
cmpsb
and
mov
popa
xchg
mov
pop
outsb
inc
ljmp
cli
ja
out
pop
add
add
inc
outsl
lcall
sahf
jnp
xor
add
rclb
addb
ss
or
outsl
sub
cltd
add
add
mov
add
add
pop
sahf
inc
test
mov
bound
or
add
add
int3
int3
int3
int3
int3
cmp
push
xchg
lock
jne
imull
insb
sub
pop
mull
dec
mov
dec
dec
fisttpl
jns
add
add
add
mov
add
add
add
lods
sbb
adc
icebp
cmp
sbb
lock
add
add
add
and
push
sarb
push
std
cmc
fldt
lds
add
test
add
sub
add
add
stos
out
mov
aas
aaa
cmp
jbe
add
xchg
aam
sahf
cltd
dec
aaa
lahf
mov
mov
test
adc
add
add
add
data16
loopne
sub
je
fidivrl
mov
subl
imul
push
orb
mov
sbb
insb
push
pop
gs
cmp
push
sbb
push
flds
add
add
and
int3
mov
add
add
lods
movsl
sbb
xor
add
fs
adc
add
add
push
ja
pop
ret
jb
in
std
sti
inc
add
add
add
in
popf
cwtl
sub
add
pop
iret
cmp
push
lahf
pop
or
add
add
lds
sub
inc
and
add
jae
loope
rorl
mov
or
add
add
mov
clc
sbb
jo
in
xor
add
add
adc
jp
int
jmp
cmpsb
mov
fsubl
inc
rcl
or
cmpsb
pop
xchg
jnp
bound
shrl
add
adc
push
stc
add
add
add
inc
pop
cli
cmp
or
mov
icebp
nop
nop
nop
nop
nop
inc
or
add
add
stos
mov
sub
add
add
mov
in
ror
fsub
movsb
int3
int3
int3
int3
int3
sti
ss
adc
bound
xchg
mov
in
push
les
stos
cmp
sub
cmp
cmp
iret
push
outsb
mov
jge
aas
leave
jae
test
push
dec
insl
xchg
in
sahf
push
push
add
add
jl
icebp
enter
add
add
clc
inc
cltd
pop
shrb
scas
das
add
push
dec
inc
pop
lcall
add
add
in
xlat
push
and
inc
push
jno
in
mov
add
add
add
in
and
add
add
cli
fcoml
xor
push
aaa
dec
fcompl
cld
orl
in
xorb
push
pop
imul
out
mov
enter
loopne
popa
hlt
cld
mov
fsubp
call
iret
mull
add
ja
add
add
add
xor
int3
int3
cmp
sub
or
add
add
dec
sub
dec
test
dec
xor
mov
jae
sbb
loopne
and
ret
mov
xchg
jp
mov
cltd
jno
dec
repnz
add
add
mov
sub
mov
xchg
rcr
xchg
and
es
inc
test
add
add
call
rolb
int3
adc
add
add
add
add
aad
cmp
in
add
push
lods
jge
insl
xchg
xchg
sub
add
daa
cmpb
xor
inc
and
ja
rcrb
fisubrl
rol
fcompl
sbb
fdivr
and
jne
imul
mov
cli
xchg
not
mov
fidivs
fmuls
ret
cmp
xor
add
add
repnz
cmc
dec
or
add
add
imul
jecxz
aam
jnp
out
jge
mov
or
add
add
cltd
mov
inc
test
push
loope
jp
lock
add
imul
test
mov
add
mov
insl
push
popf
xor
stos
or
add
add
xchg
add
add
add
xor
add
add
add
add
lret
dec
sti
or
push
iret
and
lret
and
mov
push
xor
add
add
cli
stos
call
decb
pop
jo
out
ds
push
nop
nop
nop
nop
and
inc
mov
dec
mov
jb
sub
lret
sub
add
add
jmp
lock
sbb
ret
sbb
add
add
add
adc
loop
adc
jmp
aaa
mov
aam
dec
pop
mov
ljmp
in
inc
pop
in
xchg
lret
jp
push
mov
jl
xor
adc
out
xchg
test
outsb
jecxz
jne
ja
ja
xchg
mov
int3
movsl
push
push
add
add
add
les
es
lods
aaa
lcall
ja
jae
stos
dec
mov
enter
int3
int3
int3
int3
int3
inc
mov
out
pop
jno
ret
orl
lret
add
add
cmpsl
push
mov
ja
cli
ret
sub
scas
and
add
add
add
cltd
push
add
add
push
inc
and
popf
repz
push
insb
xchg
iret
stos
or
add
add
fs
out
and
dec
add
add
out
and
push
or
add
add
or
cmp
cmpsb
sbb
mov
sti
orb
add
add
add
rcrb
daa
ss
insl
push
jmp
loopne
jmp
mov
rolb
add
add
mov
add
add
pusha
loopne
cli
mov
lods
mov
and
add
add
add
add
add
mov
pop
scas
dec
inc
mov
and
dec
xor
mov
icebp
and
add
add
out
add
add
push
add
add
insb
xchg
addr16
add
add
add
shrl
jge
sbb
push
add
add
cmpsb
arpl
cli
inc
fstps
lock
sub
addr16
pop
ret
test
test
fimull
add
add
dec
add
add
add
xor
cli
lahf
or
add
add
mov
xor
int3
int3
int3
int3
int3
ret
pop
daa
xor
jle
clc
add
clc
mov
test
mov
add
add
rcrl
xchg
inc
mov
add
add
ds
add
add
and
mov
lds
scas
aas
mov
hlt
int
negb
inc
stos
or
cmp
popa
cs
pop
add
add
fldenv
popf
mov
ja
or
add
mov
adc
inc
dec
xorl
fs
adc
out
push
jnp
and
mov
orl
testb
add
add
push
int3
int3
int3
int3
int3
push
movsl
mov
in
inc
push
add
sub
cmp
add
iret
in
inc
add
or
add
add
add
add
test
jecxz
add
add
jbe,pn
cmp
setnp
xchg
adcl
jns
cmp
jecxz
jne
add
sbb
push
mov
inc
sbb
add
cmp
nop
nop
nop
nop
nop
fbld
xor
jecxz
shll
nop
nop
nop
nop
nop
sub
and
add
popf
rcll
add
fs
pop
int
cmp
out
loopne
ret
push
pop
push
add
add
pop
pushf
addr16
xchg
outsl
aad
add
add
add
mov
cmc
je
dec
xchg
pop
dec
dec
out
sub
mov
shll
add
add
add
push
fcmovne
mov
mov
add
add
cmpsb
pop
hlt
and
xchg
shll
adc
in
orb
add
mov
gs
inc
xor
adc
sbb
push
hlt
pop
xchg
add
add
add
xchg
sbb
aas
jg
cmp
pop
pop
add
lcall
add
jmp
daa
hlt
or
add
add
inc
inc
and
add
add
daa
adc
les
mov
pusha
das
in
push
cmp
jne
add
xchg
shl
sbb
mov
xorb
int3
int3
int3
int3
int3
sti
mov
jnp
push
shr
ret
add
add
add
sub
orl
popf
sbb
popf
lret
and
add
add
cmpb
pop
clc
mov
adc
jnp
add
add
and
add
add
mov
add
add
or
add
add
test
cwtl
mov
push
call
pop
ret
shrl
adc
in
icebp
xchg
or
add
add
inc
pop
iret
in
out
add
lretw
add
add
stc
adcb
pop
repnz
mov
popf
pushf
mov
xchg
nop
push
jecxz
add
add
dec
cmp
sbb
add
push
enter
add
stc
fadd
jno
leave
dec
push
pop
add
add
lea
repnz
mov
pop
pop
and
mov
lods
inc
push
popa
jno
add
add
cmp
fisubl
jbe
xchg
jl
pusha
or
add
add
movsl
inc
pusha
repz
shlb
sbbl
aas
mov
outsl
cmp
jecxz
pop
add
add
sub
cmpl
adc
add
lock
add
xchg
scas
push
dec
mov
jmp
mov
xchg
mov
sbb
cmp
cmp
shll
add
inc
adcl
std
int3
int3
int3
int3
int3
enter
jp
loopew
mov
add
add
pop
add
add
in
enter
mov
or
add
add
mov
sub
add
add
out
add
add
add
rorl
xchg
mov
clc
xor
dec
inc
les
add
cwtl
mov
lock
xlat
mov
loopne
add
and
or
add
add
lea
add
add
jae
sbb
rcrb
jae
jb
add
cmc
test
adc
cmp
call
pop
daa
leave
cs
mov
test
dec
out
shl
xchg
repnz
cmpsb
in
out
jl
add
add
jg
mov
outsb
xor
xor
adc
ds
or
add
add
fwait
ret
mov
les
add
add
add
add
in
mov
cld
popa
int3
int3
int3
int3
int3
or
add
add
add
ret
insb
mov
stos
cmp
add
add
add
enter
add
int
xor
sbb
and
add
dec
mov
push
lods
add
aad
stos
call
and
add
movd
push
jb
inc
pop
inc
adc
add
jb
sbb
cld
mov
xchg
stc
dec
imul
xchg
ds
loope
jp
add
add
inc
mov
pop
shlb
add
cs
add
test
sar
adc
sbb
and
cmp
test
add
pop
add
add
gs
test
add
lea
cs
xlat
inc
fildl
jns
dec
gs
movsb
loop
pop
pop
jno
dec
fimull
inc
inc
enter
add
push
repz
add
add
mov
std
loope
mov
push
or
add
add
adc
push
adc
add
lock
dec
idivl
mov
inc
shl
lock
jns
add
add
rorl
pop
mov
rcrb
mov
das
inc
imul
out
inc
lcall
andl
add
add
shll
add
add
push
mov
fisubrl
add
mov
xchg
xchg
int3
int3
int3
int3
int3
mov
or
add
add
cli
mov
out
fbstp
bound
jmp
add
add
and
cltd
xchg
mov
push
icebp
stos
inc
jg
xchg
out
aas
xchg
lods
lcall
jbe
jo
or
add
add
add
add
xor
mov
add
sbb
sbb
ret
aam
stos
in
xor
add
add
mov
inc
gs
sub
cmc
outsb
loopne
bound
add
nop
nop
nop
nop
nop
enter
add
add
cli
sub
mov
xchg
jns
es
jae
lahf
mov
fldt
add
xchg
dec
pop
add
add
inc
inc
sbb
add
mov
popf
add
add
add
xor
add
cmp
add
mov
push
and
sbb
add
jmp
les
cmpsb
mov
xchg
stc
sbb
pop
pop
sti
sarb
sub
mov
jl
cld
jae
jne
add
add
add
jmp
cmp
scas
mov
imul
iret
and
rolb
in
adc
int3
int3
int3
test
add
mov
push
je
or
adc
push
sub
es
in
dec
adc
add
add
mov
inc
inc
inc
push
add
add
add
add
add
mov
stos
rcll
push
inc
pop
lret
dec
and
shl
adc
fldcw
lds
adc
fmulp
shl
cltd
loopne
js
adc
int3
int3
int3
int3
mov
add
add
ds
add
or
add
add
loop
xor
int
add
add
add
add
addr16
das
inc
dec
xchg
or
add
add
xchg
sahf
and
dec
add
jmp
out
fcoms
add
loopne
push
in
js
add
add
add
jno
rcrb
jo
flds
int3
int3
and
sarb
das
movsl
mov
lds
jmp
mov
xchg
sbb
add
push
stos
test
sarl
add
jmp
inc
push
add
add
arpl
fldl
stc
pop
sbb
rorb
push
outsl
mov
and
insl
mov
push
pop
lods
fdivl
ret
dec
mov
fs
pop
fcmovnb
or
lcall
pop
mov
cltd
sbb
repz
xchg
or
add
add
inc
push
mov
lret
xlat
daa
and
imul
stos
call
test
xor
add
push
mov
nop
nop
nop
nop
nop
xchg
ss
add
add
dec
out
hlt
hlt
call
jnp
mov
xor
outsl
push
daa
fprem1
imul
add
xor
loop
cmpsl
aam
jle
cwtl
sar
adc
bound
div
mov
pop
xchg
push
add
shlb
movsl
shr
lock
mov
dec
test
mov
pushf
sahf
add
add
add
nop
nop
nop
nop
nop
cmpsl
int
xor
cmpsl
enter
add
add
das
call
insb
or
add
add
movsl
stos
xchg
xchg
jmp
call
sbb
sbb
sbb
xlat
inc
xchg
jmp
add
add
add
stos
ds
inc
repnz
pop
and
sti
rcll
dec
xor
mov
cltd
push
add
in
sbb
shrb
ja
pop
add
add
les
std
call
sbb
fimull
or
pusha
jmp
lret
jae
inc
mov
add
add
add
call
clc
rcll
std
cmc
sbb
out
and
dec
faddl
cmp
add
inc
cmp
or
add
add
xor
cmp
add
fs
dec
loop
gs
fmull
add
add
xlat
fwait
insb
push
in
fnsave
rolb
add
add
mov
sbb
adc
dec
add
popf
mov
add
add
cmp
lods
sti
imul
fistpll
sbb
cmpsl
aad
xchg
add
add
add
out
movsb
hlt
mov
jo
mov
loope
add
add
mov
in
cmp
cmc
sti
out
push
jl
inc
adc
leave
stos
cmp
add
ror
aad
dec
sub
jae
test
das
fs
pop
add
add
push
sub
dec
loope
inc
insl
sub
add
add
jl
add
add
pop
push
push
jne
push
dec
adc
add
add
inc
in
loopne
adc
inc
cmpsb
xchg
add
add
add
test
gs
enter
enter
pop
outsl
fimull
add
add
and
dec
sub
sub
fnsave
jecxz
sti
pop
arpl
add
add
loope
cmpsb
push
add
add
or
add
add
sub
cmp
jmp
aad
inc
iret
mov
lret
int
shll
or
add
imul
fwait
mov
cld
jb
mov
xor
in
sub
inc
das
popf
orl
dec
pop
test
add
add
in
mov
jp
fnstsw
cwtl
lock
fwait
and
xor
adc
cmp
sbb
inc
dec
fmul
int3
int3
int3
int3
and
jns
es
scas
push
mov
sub
lahf
popa
ret
mov
loope
inc
fsubp
imul
adc
inc
js
sub
push
in
add
add
adc
add
add
test
dec
mov
popf
in
lds
nop
nop
nop
nop
sbb
int3
int3
int3
int3
push
push
add
add
push
sub
cmp
xor
imul
or
add
add
sbb
arpl
add
je
jge
aad
sbb
out
mov
sub
mov
dec
inc
sub
test
xchg
dec
push
pop
xchg
jb
mov
fadd
jnp
test
shll
movsl
xchg
ror
or
adcl
add
add
pop
scas
pop
mov
add
add
pop
jns
adc
mov
add
add
add
enter
lret
add
add
add
aad
insb
mov
dec
pop
xchg
adc
cwtl
xor
add
pushf
scas
pop
dec
call
dec
add
add
add
push
flds
add
add
add
mov
out
stos
add
add
add
and
jne
push
fs
and
lret
pop
mov
dec
pop
addr16
cmpsb
mov
xchg
mov
inc
sbb
add
add
add
xchg
dec
inc
enter
push
add
dec
test
xchg
sbb
and
inc
mov
jne
mov
add
add
in
imulb
ja
loopne
xchg
addb
xlat
pusha
test
sbb
roll
add
add
into
mov
sbb
arpl
out
or
add
add
or
add
add
add
cmc
or
add
add
add
add
add
cld
rcrb
and
fldl
add
add
add
xchg
add
add
xor
cld
push
aaa
cmpsb
or
arpl
xor
stc
mov
dec
push
int
repz
xor
aas
pop
add
add
lea
jmp
into
mov
bound
sbb
fcompl
add
and
lods
daa
mov
mov
jbe
add
mov
cmpsb
mov
testb
cmp
sub
sbb
out
loopne
or
add
add
lock
sub
imul
ret
call
push
fists
xchg
lret
add
add
dec
scas
test
add
mov
gs
pop
xor
jp
push
hlt
push
sbb
in
mov
xchg
ficompl
dec
int
in
inc
sbb
scas
fs
out
push
bound
add
add
push
add
add
jg
mov
add
aam
scas
sub
jg
push
cmp
add
or
add
add
pop
or
add
add
stos
outsb
cmp
stos
dec
and
shl
arpl
push
add
add
movb
sub
and
and
add
add
lods
sub
add
add
add
out
test
add
scas
pop
push
and
popa
aaa
in
lahf
ror
xchg
lea
add
add
jecxz
mov
loop
mov
int3
add
sub
xor
cmp
fbld
xor
orl
fidivs
lds
or
nop
nop
nop
test
jne
add
add
xchg
movsl
leave
lret
fbld
push
or
jg
cld
sbb
sub
cmp
sbb
dec
push
pop
adc
mov
inc
js
outsl
adc
add
add
add
loopne
xchg
or
add
add
mov
lods
jmp
stos
loop
and
add
add
add
unpcklps
jle
jne
adc
inc
push
jo
rorl
xorb
inc
or
add
add
cmp
add
sub
pop
cmp
add
dec
sub
test
mov
add
or
add
inc
push
andb
or
add
add
ja
add
fimuls
dec
cmp
mov
orb
and
add
add
and
stc
xchg
stc
push
jecxz
rclb
add
test
add
add
fsubrl
hlt
mov
aas
mov
lods
fisubrl
jns
pusha
subl
inc
aad
pop
shrl
cmc
stos
es
arpl
xchg
lods
jno
xor
push
cmp
jns
cs
adc
jbe
jmp
inc
sbb
icebp
add
add
lods
data16
add
add
push
gs
imul
mov
add
add
add
or
add
add
add
add
add
add
loope
push
mov
stos
xor
push
xor
adc
icebp
cli
loop
shrb
shll
add
add
jo
and
inc
rclb
cltd
shlb
dec
pushf
icebp
mov
xchg
mov
das
adc
sub
aad
repz
pop
mov
mov
sbb
mov
ss
xlat
mov
imul
int3
int3
int3
int3
int3
mov
mov
xchg
movsl
lds
hlt
or
fwait
stos
leave
push
in
jl
int3
int3
int3
int3
and
loop
or
add
add
add
add
add
repnz
nop
nop
nop
nop
loopne
sbbb
mov
movsl
mov
outsb
add
jmp
sub
andb
dec
jae
fstl
ljmp
test
sub
addl
add
or
fabs
shlb
add
add
and
add
push
in
daa
enter
ljmp
cmpsl
outsb
cmp
mov
add
add
repz
cwtl
cli
pop
in
cmp
sub
inc
and
sbb
imull
out
xchg
jo
dec
les
xchg
cmp
imul
inc
pop
dec
and
add
add
add
add
in
mov
inc
mov
addr16
pusha
push
adc
mov
or
inc
out
cmp
sub
add
mov
and
pushf
cmp
add
add
add
add
pusha
pusha
add
add
add
shlb
dec
mov
add
add
add
jle,pn
jl
xchg
out
and
test
rorb
add
add
xchg
add
add
add
xor
push
add
add
jno
add
add
jae
jp
mov
jecxz
and
loop
and
sbb
out
std
xchg
dec
ljmp
enter
rolb
add
add
add
add
andb
lret
lret
ficoml
mov
xor
test
cmp
imul
mov
add
jge
sbbl
adc
add
add
sbb
cld
mov
cmp
add
add
pop
push
xor
sarl
pop
add
add
xchg
jmp
sub
mov
int3
int3
out
ja
js
sub
add
add
iret
fwait
xchg
inc
xchg
xchg
sbb
jg
cmpsb
sti
jne
mov
xor
add
add
ljmp
sub
add
push
mov
cmp
lea
mov
in
arpl
dec
xor
icebp
jnp
test
or
xor
ret
rcr
cli
adc
filds
add
add
pop
out
sti
adc
add
add
aas
aad
inc
pop
adc
jl
add
add
std
adc
add
add
pop
mov
add
add
es
mov
mov
add
enter
jle
outsl
subb
cmp
add
pop
ja
cmpb
rorl
sbb
ficoms
cltd
cli
cmp
jmp
jae
jmp
nop
nop
nop
nop
nop
and
add
es
pop
fisttpl
add
add
adc
jne
add
add
stc
mulb
add
add
add
pop
loope
push
and
adc
cmp
xor
imul
xchg
mov
mov
nop
nop
nop
nop
nop
aaa
and
jle
pop
add
add
push
push
loopne
lret
gs
mov
cmp
imul
xor
repnz
sbb
in
icebp
sbb
pop
add
add
jo
ds
aaa
fldenv
fldt
mov
cmp
cmp
adc
shrb
in
inc
sub
pop
cmp
add
out
adc
movsb
cmp
mov
int3
int3
int3
int3
int3
sahf
negb
inc
mov
add
jg
rcll
lods
xor
lahf
add
add
notl
cmp
jbe
in
imul
add
add
add
insl
outsl
cmpsl
std
add
add
add
movsb
repz
xor
adc
insb
mov
sbb
fisubl
cwtl
mov
jns
mov
add
fisubrl
sbb
outsl
in
push
inc
mov
mov
inc
add
xchg
mov
add
stos
fdiv
inc
jecxz
adc
sub
push
ljmp
cmp
lret
dec
jo
pop
pop
cld
sbb
add
iret
adc
or
mov
add
add
pop
fdivrs
push
xor
lcall
cltd
push
add
add
mov
ljmp
add
add
sbb
add
cmpb
adc
add
add
push
add
add
cmpl
ljmp
jl
loopne
loop
mov
add
add
add
sub
or
add
add
cs
ror
xchg
lods
pop
lock
insl
dec
cmp
push
add
add
adc
addr16
add
add
sub
sub
adc
mov
sahf
jl
adc
in
mov
test
jne
mov
add
add
fidivs
clc
push
jb
adc
or
inc
sub
mov
add
dec
je
mov
add
jb
scas
ds
les
js
adc
add
add
outsb
xor
xchg
cmp
jns
adc
int3
int3
int3
int3
int3
hlt
aam
lods
shl
pop
add
add
dec
mov
aad
xchg
ret
xchg
fwait
adc
pop
add
add
xor
jb
dec
mov
jb
cmpb
or
add
add
cmpsl
in
stc
cmpsb
mov
mov
in
mov
imull
lret
popf
stc
out
xchg
aam
scas
xchg
sub
xchg
je
xlat
mov
xchg
les
mov
sbbb
repnz
jne
stc
sti
or
mov
mov
sub
dec
lret
out
sub
test
test
inc
jge
mov
push
jle
sub
dec
das
dec
dec
dec
push
push
ss
xor
add
jmp
add
cs
mov
pop
sbb
push
mov
jp
add
mov
mov
xor
out
mov
xchg
cmp
cld
out
stc
xor
stc
cwtl
clc
insb
cmp
dec
das
lock
out
mov
push
xor
xor
mov
call
jbe
xchg
outsb
push
jmp
cmp
int
cmp
push
lock
add
add
jnp
mov
ds
scas
jl
sti
xchg
mov
test
add
add
mov
js
push
pop
or
cmp
sub
pop
ja
stc
lock
add
add
aas
push
xor
pop
aaa
inc
bound
cs
push
dec
daa
in
addl
outsb
popf
imul
mov
pop
jecxz
pushf
push
cli
push
inc
sti
jbe
add
add
add
add
xchg
jmp
push
add
nop
nop
nop
fiadds
add
add
or
add
add
daa
jae
add
add
mov
iret
gs
mov
and
ja
test
fisttpll
jae
cli
es
sahf
jp
jecxz
adc
test
bound
or
add
add
popa
sbb
add
add
add
add
add
stc
lahf
loop
imul
mov
add
add
psubsw
add
add
cmp
jg
add
loop
cmpl
ss
pop
lahf
aaa
cmp
sarb
adc
mov
mov
add
add
pop
lods
mov
mov
inc
stc
jb
dec
xor
add
add
or
add
add
push
sub
mov
push
leave
mov
inc
pop
out
xchg
imul
add
add
test
jb
pop
in
cmp
inc
and
push
sbb
add
nop
nop
nop
nop
nop
lds
and
pop
incb
add
add
lods
sub
lock
sbb
in
icebp
pop
fiadds
arpl
add
add
add
fdiv
les
push
sbb
add
add
or
add
cmpsb
rclb
or
add
dec
dec
mov
popl
add
add
push
or
add
add
movsl
in
mov
gs
pop
int3
int3
int3
int3
int3
and
imul
or
std
cmp
pop
mov
inc
test
loope
inc
sub
inc
jbe
js,pn
ret
repnz
add
sbb
out
call
aam
dec
push
cltd
pop
jb
sub
xlat
add
add
int
or
push
cld
adc
out
push
mov
add
scas
loopne
adc
dec
call
sbb
adc
mov
add
add
add
scas
int
add
add
roll
addl
add
add
nop
nop
nop
nop
nop
sti
mov
icebp
adc
push
cmp
enter
add
add
test
outsb
mov
lret
jmp
and
in
add
add
add
add
inc
lods
xor
test
sti
movsb
mov
mov
loopne
int
dec
push
cmc
notl
and
sbb
xor
adc
loopne
mov
mov
pop
xlat
dec
ret
movsl
in
dec
popf
subl
xlat
jmp
sub
sub
stc
shl
mov
inc
shll
inc
dec
xchg
loope
bound
and
getsec
mov
ret
insl
in
jle
andl
and
adc
iret
shll
mov
imul
lret
lahf
pushf
pop
mov
out
xlat
dec
jmp
dec
les
mov
fcmove
test
lahf
mov
clc
pusha
test
add
loopne
int3
int3
int3
int3
int3
xchg
mov
mov
movsl
int3
int3
int3
int3
int3
test
add
add
ret
jns
vpmacsswd
hlt
xor
fldt
mov
and
xor
ds
add
inc
dec
andl
add
mov
jmp
push
js
sbb
es
sti
sti
mov
xor
or
out
pop
xchg
pop
xlat
decb
xchg
add
add
mov
pushf
test
xchg
push
mov
and
sub
fucomp
dec
shl
cmp
ret
out
dec
dec
negb
adc
xor
inc
jnp
pop
add
add
mov
xchg
inc
xchg
add
add
add
les
add
add
iret
fcompl
or
add
add
push
ffreep
mov
mov
iret
pop
push
xchg
lahf
and
mov
add
add
mov
add
add
add
add
loope
outsb
push
add
add
pop
mov
ss
mov
cwtl
daa
shrb
add
add
in
xor
cmp
ret
jge
inc
in
cmpb
and
add
cwtl
ljmp
add
sub
jmp
in
je
mov
mov
xchg
push
push
add
add
rcrl
add
add
lret
ret
push
enter
icebp
jle
inc
sbb
pop
jp
fnstcw
pop
or
add
add
mov
movsb
cld
and
and
into
lret
fisttpl
nop
nop
nop
nop
nop
outsb
and
push
cwtl
cmpsl
sarl
cld
lret
pop
push
pop
js
loop
lock
jnp
sub
ret
aas
rcll
push
sbb
add
add
and
add
jbe
mov
dec
dec
movsb
push
call
daa
dec
mov
orl
out
testb
adc
out
jbe
cltd
repz
and
xor
imul
push
add
add
loope
aas
out
push
add
add
jns
int3
int3
int3
int3
and
mov
es
add
add
sti
and
add
add
add
popa
scas
aaa
hlt
out
ljmp
test
add
pop
push
sbbb
stos
clc
push
and
pop
mov
aaa
mov
mov
int3
int3
int3
int3
int3
pop
sarb
imul
add
add
mov
add
add
gs
sbb
minps
or
add
add
aad
imul
add
adc
jg
xor
cs
inc
idiv
test
enter
xchg
iret
jo
fistpll
pop
imul
call
inc
fldl
add
add
lea
add
add
fstpl
sub
rcrb
loopne
xchg
xor
push
and
add
add
stos
jg
pop
xchg
stos
jo
xchg
mov
lret
sub
jge
mov
or
add
add
lock
mov
insb
lahf
xchg
pop
dec
mov
xchg
lds
stos
sub
add
test
add
mov
int3
int3
int3
int3
int3
ficomps
dec
jecxz
in
scas
aam
jge
pop
mov
subb
lret
in
out
pop
adc
lahf
cmpl
jle
add
add
add
idivb
fldt
add
add
fs
push
jge
jne
stc
dec
xlat
add
add
add
add
add
jbe
xchg
add
add
fistpl
daa
cmp
jmp
es
jae
jbe
push
cs
sbb
and
int3
int3
int3
int3
int3
loopne
xlat
sub
add
cmp
add
daa
xchg
gs
ljmp
xor
add
add
cmp
pop
cmpsb
test
cmp
les
pop
add
add
adc
hlt
mov
movsb
add
add
add
xor
add
add
or
es
mov
mov
push
sarl
outsb
daa
mov
add
add
add
mov
test
mov
push
testl
cltd
jns
add
add
repnz
and
test
mov
add
jnp
mov
sbb
add
add
push
push
shrb
rolb
pop
add
add
add
cmp
push
add
add
add
xlat
dec
cli
in
mov
ja
neg
cmp
add
add
adc
and
js
stos
fistps
jg
or
call
mov
hlt
push
mov
mov
scas
xchg
mov
sti
mov
add
add
cmpsl
adc
enter
pop
add
add
mov
jbe
xchg
std
mov
out
arpl
add
add
sahf
in
xchg
loopne
int3
int3
int3
int3
int3
cmp
add
lcall
add
popf
jmp
mov
fildl
push
or
or
adcl
pop
lahf
adc
shlb
xchg
mov
mov
mov
mov
xor
mov
cmp
lahf
sbb
push
pop
cmc
ret
jae
add
add
test
and
pop
adc
and
dec
push
sbb
loope
pusha
sub
test
data16
scas
dec
jnp
jle
outsl
aam
mov
add
push
imul
add
add
addl
mov
pop
mov
pushf
push
std
push
and
cmp
mov
and
mov
in
and
dec
pusha
in
ss
in
xchg
sub
pop
push
adc
in
stos
fcompl
and
mov
jbe
fucomp
incb
add
add
add
xor
lods
adc
xchg
inc
xchg
push
dec
imul
int3
int3
cmpsb
cmp
xchg
sbb
sub
and
in
jnp
push
mov
aaa
pop
mov
aas
shrb
jge
or
add
add
jb
loop
mov
mov
cld
jne
gs
out
inc
push
or
add
add
mov
mov
adc
mov
out
xchg
fsubr
testl
bound
ror
mov
stos
add
add
jne
lods
jl
or
add
add
lcall
add
mov
stos
mov
push
add
add
xor
add
add
xlat
movsb
daa
icebp
jmp
add
add
add
and
add
add
xchg
fs
add
add
cmc
pop
jmp
xor
add
add
inc
xor
add
add
fwait
sbb
add
add
push
stos
sbb
jl
hlt
adc
add
add
add
add
add
pop
jge
add
add
add
fiadds
xor
xchg
inc
pop
cmp
push
cld
add
add
aad
scas
insb
lret
xchg
ja
into
xchg
std
cmp
stos
daa
lods
sub
iret
sbb
add
cmovae
push
sbb
xchg
mov
xchg
cmp
sub
jmp
sbb
les
add
add
pop
jo
sub
add
push
ficomps
movsb
push
mov
fimull
mov
jns
adc
sbb
fnstenv
testl
mov
adc
aad
imull
jle
add
dec
and
scas
cmpsb
sub
cmp
xchg
shll
jns
cmp
arpl
les
inc
sti
fistps
in
xor
int3
int3
int3
int3
pop
add
add
mov
xor
ret
cmpsl
and
ret
rclb
xchg
ja
jg
or
add
add
dec
sahf
out
push
pop
dec
shll
ljmp
mov
cmc
jl
fcmovb
or
sbb
outsb
and
es
add
add
add
sbb
shll
sub
xrelease
add
add
mov
push
xor
leave
lods
dec
lods
sub
jne
shl
mov
cli
cli
or
add
add
adc
push
and
mov
fwait
cmc
mov
or
add
add
inc
pop
out
loop
roll
nop
nop
nop
nop
cmp
mov
add
add
add
add
add
add
push
mov
ja
push
adc
xor
movl
add
adc
in
inc
mov
idivb
testb
cmpsb
or
or
add
add
jne
xor
dec
out
pop
imul
mov
jge
gs
adc
pop
or
add
add
lods
ss
or
add
add
add
add
cmp
add
add
cmp
popa
into
jl
mov
fxch
int3
int3
int3
int3
xchg
cmpb
leave
scas
in
xlat
out
and
inc
fs
test
dec
sub
mov
loop
ss
add
lcall
lods
imul
test
stc
fildll
push
add
add
in
xchg
xchg
call
movsb
jle
out
inc
jl
int
sub
jae
lds
add
adc
add
mov
xchg
popa
fidivl
ret
adc
mov
sbb
add
jb
mov
movsb
cmpsb
mov
dec
rcll
add
andb
mov
add
aam
ss
lahf
rcll
stos
aad
loopne
inc
pop
fwait
mov
and
call
shll
pushf
and
enter
cmp
add
add
inc
xor
popa
xchg
sbb
nop
nop
nop
nop
nop
fdivrs
mov
add
add
dec
aad
mov
mov
sub
add
add
xchg
paddsb
xchg
fidivs
add
push
and
inc
imul
fstl
mov
jle
pop
jae
dec
jge
iret
rorb
rcrb
inc
xchg
fiaddl
popf
xor
add
add
add
iret
jns
jno
xchg
mov
add
add
aam
sbb
std
mov
pop
sbb
sbb
adc
add
xor
je
movsb
sub
testb
add
add
mov
mov
push
dec
xchg
sti
add
testb
add
mov
in
mov
cmpsl
movq
or
add
add
push
imul
test
add
xchg
inc
cmc
pusha
add
add
add
cltd
stos
popf
inc
fistl
push
fs
fsubp
fs
in
pop
outsl
enter
add
add
add
add
aam
pop
es
mov
push
add
mov
or
add
add
add
add
sahf
mov
mov
cwtl
inc
pushf
cld
icebp
lret
aad
xor
add
add
add
adc
sub
pop
sbb
add
add
add
fcomps
inc
lods
mov
add
add
add
sub
test
std
in
add
add
sbb
push
cmp
in
adc
aad
movl
adcl
add
add
add
push
clc
add
add
add
add
add
add
std
cmp
cli
lds
inc
lock
jo
adc
mov
stos
mov
mov
outsb
in
jg
lods
pop
js
jecxz
pushf
jp
in
adc
ja
sbb
inc
in
roll
add
lcall
pop
add
shlb
into
dec
stos
xchg
movsl
adc
cmp
cmp
test
xchg
in
cs
fldcw
loope
adc
mov
loop
repnz
add
out
gs
add
leave
add
add
add
lock
mov
mov
shl
out
outsb
loope
mov
cld
mov
add
add
cmp
jb
pusha
aas
pop
push
or
add
add
mulb
sahf
or
inc
add
add
add
pop
lret
cmp
mov
daa
xchg
jle
aas
scas
sub
add
pop
mov
cli
xor
ja
cmp
lahf
sub
iret
std
mov
rcll
ret
cmp
add
mov
or
add
add
fs
push
aam
add
add
add
cmp
in
sub
cmp
cld
dec
mov
in
int
shl
ja
or
add
add
ja
int3
int3
int3
int3
repz
neg
stos
add
add
add
shlb
sbb
cmp
add
add
lock
mov
scas
cmpsl
aas
mov
movb
lret
xor
icebp
aam
in
mov
push
outsb
scas
push
xchg
inc
mov
add
add
adc
mov
cmc
mov
cmp
add
sub
jae
outsl
add
add
add
lret
rcl
cmc
repnz
mov
or
jnp
pop
test
mov
mov
or
add
add
add
adc
add
add
fcmovne
sub
jmp
cmp
insb
jecxz
fnstsw
les
add
sti
aas
pop
add
add
js
call
data16
dec
and
push
popa
jb
fidivs
dec
loop
or
add
add
cmpsb
addb
adc
outsl
int3
int3
int3
int3
int3
pop
fldcw
pop
jb
loope
inc
js
out
xor
hlt
stos
xchg
and
dec
ret
pop
lods
mov
jecxz
sahf
inc
adc
mov
or
add
add
push
add
add
cmp
call
and
inc
dec
lret
nop
nop
nop
fsubrs
add
mov
push
in
out
fiaddl
nop
nop
nop
xchg
mov
js
shll
add
clc
fucomp
push
fsubrs
scas
scas
xchg
and
int
pop
std
lret
fdivrs
add
add
je
aad
pop
xchg
lods
mov
jmp
fbstp
xor
cltd
ds
mov
xor
add
add
jecxz
inc
cwtl
mov
pop
add
add
popf
iret
aad
and
add
adc
and
fcompl
pop
push
scas
jl
mov
add
add
mov
nop
nop
nop
nop
xchg
mov
out
std
in
mov
sub
fldenv
repz
push
cmc
scas
push
add
pop
jb
push
sbb
xchg
xchg
or
insl
les
cs
clc
cmpsl
adc
add
mov
cmc
mov
add
add
imulb
int
pop
add
add
aad
pusha
int
adc
enter
jecxz
and
int3
int3
int3
int3
out
sub
add
fs
xor
shlb
xor
bound
loop
jbe
loope
cmp
mov
in
fwait
lock
repz
jo
sbb
int3
int3
int3
int3
int3
hlt
sbb
dec
lds
dec
push
add
cwtl
push
push
inc
pop
stos
push
xchg
pop
mulb
push
push
adc
mov
jo
out
pop
lret
cmp
jo
mov
daa
inc
sbb
adc
rorl
add
add
cmpsb
jmp
int3
int3
int3
int3
sub
inc
jg
add
add
add
dec
pop
out
fisubrs
jmp
call
lds
mov
add
aad
pop
dec
jp
push
sbb
movsb
pop
dec
mov
pop
add
add
add
enter
sar
or
add
add
les
mov
stos
aam
iret
loope
jmp
mov
ja
or
add
add
add
outsl
lods
fidivl
mov
add
add
sbb
push
xchg
stc
popf
push
adc
cmp
addr16
xchg
gs
cmp
lods
xor
cmpsb
dec
into
xor
add
add
test
std
fists
aaa
popf
and
push
mov
int3
int3
int3
int3
int3
cwtl
sbb
test
aas
mov
mov
mov
xor
add
clc
add
add
add
push
jmp
fstl
dec
or
add
xchg
aam
inc
sbb
popa
cli
mov
sbb
negb
es
cmp
into
sahf
sahf
ficompl
jmp
shlb
xor
mov
xor
xchg
cmp
add
pop
out
push
test
ds
adc
pusha
push
insl
nop
nop
nop
nop
nop
jnp
sahf
adc
add
dec
inc
jae
imull
mov
int3
int3
int3
int3
int3
ret
or
add
add
add
add
dec
ret
shrl
cltd
imul
xchg
imul
mov
into
sbbl
lock
stos
mov
cmpsl
ficoms
mov
xchg
cli
xlat
aas
mov
test
test
sbb
fs
test
sub
inc
sahf
sti
adc
xchg
push
std
and
jns
movsl
jmp
xorl
add
add
add
jbe
cmp
jg
dec
jmp
dec
std
pop
mov
and
lret
shl
loope
add
enter
mov
add
add
add
and
mov
sbbb
fistps
fwait
imul
ja
sti
shrb
add
sub
mov
mov
mov
xor
ret
shl
int3
int3
int3
int3
int3
clc
pop
add
add
add
pushf
mov
cmp
lcall
cmpsl
je
scas
insl
or
dec
adc
mov
aas
je
lret
jae
stc
pop
mov
add
add
jo
push
xchg
dec
pop
shll
loopne
sub
leave
cli
icebp
mov
pop
enter
inc
xchg
and
mov
add
cmc
shlb
add
add
mov
xorb
in
add
add
add
add
repz
cmpsb
es
cmp
push
jp
mov
sbb
push
lea
mov
add
add
add
in
mov
rorb
add
cmpsl
adc
lret
movsl
jp
pop
stos
mov
lds
xchg
add
add
add
inc
pop
dec
xor
lods
sub
daa
jp
add
add
jae
jecxz
or
add
add
int3
int3
int3
int3
int3
js
adc
sub
les
jae
sbb
mov
pop
movsb
negl
jg
and
push
add
add
xchg
test
shl
cli
xchg
fistpll
pop
fsubrl
pop
and
add
repnz
aad
ja
and
pop
cmp
add
add
add
add
sbb
test
sub
mov
loop
outsl
xchg
adc
jo
add
add
and
int3
int3
xor
add
add
add
add
add
imul
lcall
hlt
roll
add
add
mov
out
lock
dec
adc
add
add
inc
and
xor
jl
dec
pop
iret
mov
cwtl
jne
cmp
add
fistpll
add
dec
sub
add
add
sub
fmull
in
or
add
add
push
add
in
xchg
mov
lcall
insl
push
pop
xchg
mov
and
push
xlat
mov
mov
add
add
add
add
add
jge
repz
lret
cld
nop
nop
nop
nop
nop
adc
or
add
add
fsub
cmpsl
addb
sub
call
xor
xor
mov
into
add
add
add
out
pop
lahf
ret
mul
mov
xor
add
mov
cmpb
add
add
fists
or
xchg
out
loope
mov
int3
int3
int3
int3
int3
push
add
add
in
ljmp
jno
pusha
insb
dec
push
stc
add
or
add
add
add
mov
push
in
push
add
add
fwait
pop
insl
or
add
add
mov
adc
loop
rcll
scas
into
mov
cltd
das
addb
add
mov
jl
lock
data16
sbb
fcmovnbe
gs
out
add
add
push
xor
pusha
shlb
jns
mov
hlt
icebp
or
add
add
iret
xor
adc
jl
add
add
add
push
xchg
xor
outsb
mov
icebp
push
sbb
jp
in
xchg
xor
sbb
cmp
stos
push
fstpt
mov
lods
test
add
or
add
add
ss
shlb
jne
push
movsb
test
into
movsl
cmp
inc
push
lahf
andb
xorb
xchg
les
pop
icebp
xchg
jl
cmp
add
add
out
mov
xlat
sti
cld
jbe
filds
add
fmuls
cmp
add
jl
add
sbb
adc
add
ss
add
xor
lea
sbb
adc
test
imul
adc
mov
pop
and
jno
hlt
cld
mov
fwait
add
add
mov
cmpsb
sbb
add
add
xchg
mov
movsb
xchg
mov
mov
cmp
stos
loope
and
adc
in
xor
mov
loope
mov
mov
push
jnp
sahf
sub
cmp
add
add
jmp
repz
repz
or
add
add
lret
or
add
or
add
add
jbe
add
jmp
mov
or
add
add
add
add
mov
iret
nop
nop
nop
nop
nop
loope
ret
mov
pop
arpl
fs
mov
xor
dec
or
sbb
leave
js
repz
scas
pusha
jge
call
xor
mov
sub
dec
aas
jecxz
notb
sarl
or
add
add
push
xor
int
add
add
add
add
add
add
add
int
adc
je
or
add
int3
int3
int3
int3
int3
mov
inc
dec
ljmp
cmp
incb
stos
adc
dec
imul
std
pop
lds
add
jno
xor
in
push
mov
sbb
add
add
sbb
fistpl
xorl
sub
add
inc
aas
lahf
imul
add
add
add
add
add
insb
movsl
ljmp
sbb
ljmp
add
add
add
and
lret
cli
cmp
add
mov
mov
adc
js
xor
add
xor
jge
pop
test
das
neg
push
mov
sub
add
jl
add
add
fdivr
lods
inc
sbb
sbbl
or
push
std
inc
test
add
adc
ret
dec
jns
insl
mov
mov
in
pop
adc
fs
loopne
add
add
scas
ret
nop
nop
nop
nop
nop
int3
int3
int3
int3
int3
jmp
push
or
imul
cmp
xchg
and
jle
sub
rolb
scas
pop
cld
pop
jp
jge
cmp
int
or
pop
in
xchg
pushf
xor
insl
loop
inc
xchg
les
sub
ss
scas
pop
das
js
pushf
cmp
add
add
add
popa
ret
pop
das
out
dec
jno
call
stos
in
jge
jmp
xor
sbb
jmp
test
mov
fiaddl
add
repnz
xchg
and
out
je
hlt
out
add
add
add
lret
mov
add
add
sbb
inc
add
add
add
fmul
test
mov
int3
int3
int3
int3
fldcw
vmwrite
pop
mov
add
add
add
notl
daa
cmc
cltd
or
add
add
ror
dec
cmp
and
xor
lret
push
mov
add
add
add
pop
sub
sbb
ja
add
add
icebp
jecxz
sahf
push
mov
xor
movsl
cs
mov
sarb
sub
add
add
add
fnstenv
les
repz
int3
int3
int3
int3
out
dec
sub
iret
mov
mov
data16
pop
and
mov
in
adc
add
add
mov
loope
lea
mov
out
jmp
into
ret
xor
jge
xor
rcr
cmpb
rcrl
or
add
add
add
add
add
cmp
rcrb
xchg
push
sbb
nop
nop
nop
nop
nop
cmp
mov
add
add
add
enter
not
inc
add
add
add
int3
int3
int3
int3
mov
jno
popa
xor
sahf
and
add
add
add
mov
fstpt
pop
and
dec
lds
iret
xchg
adc
fisubrl
dec
cmp
add
jns
add
in
fcmovnu
mov
arpl
std
das
sahf
mov
jae
test
xchg
push
aas
pop
cmp
movb
add
in
inc
mov
je
adc
push
int3
int3
int3
int3
int3
pop
add
add
mov
out
push
clc
jne
mov
dec
pop
push
popf
sbb
xor
pop
push
movl
add
dec
in
iret
testb
sub
adc
mov
sub
sti
fisubrl
nop
and
in
dec
push
aad
dec
ficoml
std
lea
cmp
mov
cmpsl
xchg
mov
clc
cmp
xchg
sbbl
add
hlt
add
push
and
add
add
or
add
add
add
pop
jmp
dec
ss
ret
or
popa
pop
pop
xchg
lcall
add
add
add
xlat
fbstp
pop
out
xlat
push
rcl
or
pop
aaa
daa
shll
scas
das
addl
mov
push
pop
add
add
imul
imul
mov
int3
int3
int3
int3
and
add
add
mov
pushf
mov
push
sub
xor
add
pop
lds
add
insl
inc
mov
push
in
dec
dec
sub
cmp
adc
sti
sub
push
hlt
fsubrs
aad
cli
je,pn
cmp
push
mov
inc
push
pop
pop
test
push
fwait
movsl
add
loop
add
filds
jnp
jecxz
aad
add
add
inc
lret
out
lret
inc
and
add
add
je
lds
sub
sub
cld
push
add
add
ja
mov
adc
xor
cs
mov
and
add
xchg
gs
dec
negb
nop
nop
nop
je
cmovge
add
pop
sbbb
scas
lock
add
fndisi(8087
dec
loope
loop
movsl
leave
fldln2
xor
iret
lret
mov
mov
add
nop
nop
nop
nop
nop
fwait
inc
mov
push
jnp
jle
lods
mov
adc
sub
push
or
scas
cmp
add
jmp
cmp
push
xor
pop
xor
add
call
mov
jmp
out
arpl
add
add
insl
sti
out
std
call
out
imul
out
add
add
add
dec
or
xor
add
add
jg
mov
mov
cmc
mov
add
add
and
mov
mov
outsl
push
inc
popa
int
pusha
inc
xchg
lods
xlat
push
push
or
add
dec
pushf
adc
sbb
or
add
add
push
mov
xchg
subl
dec
mov
es
add
add
add
push
inc
inc
repz
jnp
shll
xchg
jne
cmc
dec
sub
add
ds
add
add
add
add
stos
loopne
mov
sbb
out
adc
rcll
insl
rcll
xchg
aam
xchg
push
mov
dec
jp
mov
daa
cli
mov
pop
or
add
add
mov
sbb
pop
pop
aas
xor
add
jmp
addr16
dec
mov
jnp
jae
mov
fcom
mov
stos
or
add
add
add
add
in
stos
dec
add
add
add
xor
cmp
bound
mov
dec
sahf
mov
add
inc
push
sbb
rorb
add
add
fldenv
xor
data16
sbb
fistps
add
add
add
cltd
xchg
cs
add
add
add
lods
mov
push
add
fnstcw
and
fdivs
or
add
add
jl
mov
inc
adc
xchg
icebp
push
sbb
and
in
movsb
repnz
stos
insb
enter
cmp
mov
xor
cmp
xchg
sbb
imul
add
add
add
add
add
scas
add
add
add
add
push
ficomps
jnp
sbb
in
adc
test
inc
les
add
add
outsb
or
scas
or
shll
pop
fwait
cmp
test
stos
ret
jae
imul
lret
lods
inc
jl
cmp
or
xor
iret
lods
scas
std
aaa
pop
add
add
outsl
sub
add
add
test
lcall
ss
js
aad
add
insl
stc
dec
scas
jecxz
lock
mov
cmp
and
or
add
add
xor
gs
out
mov
negl
aaa
pop
nop
nop
nop
nop
nop
ja
push
inc
pushf
adc
jnp
dec
stos
pusha
jmp
or
pop
inc
adc
jl
leave
add
add
add
fs
xchg
pop
pusha
in
repz
dec
xchg
ja
clc
bound
cmp
adc
add
shr
popa
xor
add
cmp
out
jae
bound
push
jecxz
or
add
add
out
fstpl
pop
xor
inc
push
out
jae
inc
dec
ja
add
add
ret
call
xchg
cmp
add
add
in
mov
inc
push
nop
nop
nop
nop
nop
push
cwtl
sub
mov
mov
shl
jb
jne
pop
mov
sub
add
cmp
add
add
add
sub
ljmp
or
add
add
leave
cli
cmp
in
outsb
cld
mov
push
cli
ret
mov
mov
add
add
add
jae
ljmp
add
pop
test
push
repz
subb
fldt
cli
adc
out
out
mov
jne
insl
add
add
add
movsl
pop
mov
inc
mov
aas
lcall
jns
push
or
add
add
cmp
add
push
ret
sub
cmpb
push
add
add
cmp
cmp
push
sbb
js
shlb
in
subb
arpl
inc
shll
mov
add
add
mov
and
add
add
add
push
cmp
cmp
loopne
or
add
add
add
add
add
xor
ss
sub
ret
adc
xor
shrb
ret
push
mov
and
adc
adc
scas
loopne
loopne
xorb
fimuls
add
add
aaa
jg
xchg
cmp
dec
xchg
mov
rolb
jmp
adc
mov
jg
xchg
aaa
out
add
add
pop
stc
int
lcall
fldt
ljmp
dec
rclb
imul
shrb
mov
pushf
inc
outsb
fstps
cmpsb
and
add
add
movsb
jb
xor
dec
and
outsb
dec
jae
aam
mov
pushf
loope
jno
inc
sbb
add
add
add
mov
sbb
out
fwait
xlat
jbe
ja
out
cmpsb
stos
mov
sar
lret
xchg
adc
add
add
add
mov
inc
loop
divl
cmp
flds
add
mov
iret
call
or
add
add
scas
pop
cmc
mov
add
add
add
mov
jecxz
cwtl
cmp
add
mov
pop
mov
and
xchg
std
xor
cmc
push
je
cmp
xlat
insl
xor
rolb
mov
adc
dec
movsl
cmp
nop
nop
cmpsl
jmp
push
pop
or
add
add
add
cmp
fiaddl
add
cltd
mov
divl
cli
add
add
add
fs
stos
xlat
in
loope
push
fsubs
pop
fdiv
call
shrb
loope
add
jge
cld
add
add
add
in
cld
je
jmp
xor
cld
fadd
or
inc
iret
bound
pop
jne
dec
loope
mov
cwtl
push
sub
stos
add
add
push
xchg
add
xor
xor
roll
add
add
push
add
add
mov
lcall
cli
adc
dec
pop
pop
add
add
cltd
in
cld
jno
xchg
imul
cltd
xor
nop
xlat
ret
mov
sti
fistl
movsl
jmp
cmp
insb
lods
cltd
out
je
cli
sbb
pop
divb
cmp
mov
bound
add
ret
imul
add
add
mov
push
mov
dec
testl
sti
cltd
repz
add
add
add
arpl
addb
jb
repnz
int
scas
and
scas
jno
scas
or
add
in
test
add
out
push
pop
dec
in
adc
push
cmpsb
shll
jne
xchg
lods
dec
inc
test
sbb
addr16
insb
call
pop
inc
shrb
pusha
xchg
int3
int3
int3
int3
int3
cld
push
add
add
pop
inc
pop
cmpsl
int3
int3
int3
int3
int3
mov
add
cmp
sub
push
add
add
mov
push
sub
adc
cmpsb
clc
cmp
fcompl
cs
jle
mov
add
add
jle
lds
sbb
push
jl
mov
xchg
cmp
push
testb
add
test
std
mov
or
xchg
dec
inc
test
fstpl
dec
ret
enter
rcrb
mov
lret
ror
cmp
js
ljmp
testl
add
add
add
mov
add
add
test
add
inc
pop
int
lock
jns
and
popl
call
lret
adc
icebp
pop
ja
aam
add
add
lahf
repz
rorl
popl
add
add
xor
lret
push
lahf
xor
push
cmp
in
call
xchg
lret
push
jb
or
add
add
mov
std
loop
mov
add
dec
mov
jp
xor
mov
hlt
test
jp
sbb
dec
jne
jge
push
sub
push
jl
leave
in
pop
mov
add
add
xchg
add
add
add
loop
int3
int3
int3
int3
and
sbb
add
ljmp
add
ds
jo
dec
xor
mov
sbb
xchg
jbe
mov
jl
stc
or
add
add
ficomps
insb
add
add
add
ss
add
add
add
adc
mov
dec
cmp
mov
in
add
add
inc
aam
add
add
add
add
add
sub
mul
cmp
mov
add
add
xor
jp
add
add
push
outsb
out
jp
add
add
iret
cmp
enter
popa
es
es
push
pop
dec
xchg
sub
or
add
add
pop
scas
test
dec
lcall
add
movsl
xor
lods
inc
ds
push
add
add
add
leave
out
daa
loop
data16
add
add
add
add
add
pop
or
add
add
popf
xchg
popa
scas
in
sbb
xchg
xchg
loop
imulb
adc
fcoml
movsl
add
add
add
dec
sub
jg
jmp
cmp
pop
imul
adc
mov
add
add
xor
lods
or
add
add
jp
pop
test
enter
stos
lahf
xchg
adc
add
add
xor
sub
mov
and
mov
pop
pop
add
outsb
das
insb
mov
enter
movsl
pusha
stos
iret
dec
jne
cvtpi2ps
add
add
add
jbe
add
add
pop
add
add
add
lret
mov
add
mov
ret
nop
nop
nop
nop
nop
push
out
and
icebp
and
add
sbb
push
sahf
fnsave
xchg
addr16
sbb
sbb
jp
subl
add
add
mov
mov
cmp
repnz
je
jecxz
add
jo
imul
fldcw
push
xchg
ss
mov
dec
popa
in
inc
sbb
inc
add
add
test
int
pop
pushf
popf
out
inc
cmpsb
mov
jbe
or
add
add
inc
out
hlt
subl
add
jle
add
add
adc
sbb
cmp
add
iret
es
mov
sahf
sub
xor
add
add
sbb
cmpsb
lods
aas
cs
push
inc
pop
pushf
scas
pop
mov
add
add
xor
mov
add
add
fs
ret
sahf
pop
dec
jmp
das
leave
mov
mov
mov
jns
in
sbb
sub
pop
outsb
jnp
and
int3
int3
int3
int3
cmp
add
data16
or
add
add
jge
ja
jl
ret
adc
adc
cmp
sbb
movb
xlat
xchg
mov
add
add
add
add
hlt
insl
push
in
and
sub
cmp
roll
add
add
gs
insl
push
rep
jmp
pop
add
add
sub
je
lds
mov
mov
dec
sub
add
mov
adc
push
arpl
xor
dec
das
mov
pop
add
add
xor
sub
mov
jnp
in
ror
mov
jecxz
pop
sti
and
mov
dec
aaa
scas
insl
insl
sbb
jl
xor
adc
add
add
jmp
data16
push
scas
pop
lcall
das
sahf
inc
imul
push
add
add
leave
inc
cmpsb
into
cli
subb
gs
mov
mov
out
xchg
xchg
test
fwait
out
mov
cwtl
lahf
bound
paddsw
xchg
in
xor
inc
sub
cli
rol
test
mov
or
add
add
mov
dec
and
dec
mov
test
movsl
xchg
in
js
rcr
add
fcoml
mov
repnz
jae
or
mov
add
rcl
xchg
mov
mov
adc
push
sub
lahf
sub
fnsave
shl
repnz
movsl
loop
jnp
aam
js
xor
push
and
cli
mov
add
inc
adc
or
out
jmp
adc
stos
fsubp
popa
fsubrl
mov
xor
jmp
inc
call
and
int3
int3
mov
jnp
and
leave
test
repz
add
add
rolb
add
add
pop
jnp
jg
jb
shlb
add
pop
popa
bound
lds
xor
cwtl
add
imul
sbb
cmc
add
add
add
add
nop
nop
nop
nop
nop
inc
shlb
add
adc
mov
mov
mov
pop
cmp
or
ja
cmp
add
xlat
push
xor
jmp
into
sbb
mov
sti
sbb
flds
movsb
fldcw
repnz
add
add
jae
add
push
add
add
add
in
dec
push
shlb
fnsave
sarb
out
out
push
inc
dec
in
int3
int3
int3
int3
int3
dec
imul
jmp
cs
dec
xlat
popa
or
lahf
out
sub
add
iret
sbbl
outsb
dec
lcall
add
xor
xor
add
out
mov
add
jecxz
xchg
adc
les
dec
ljmp
and
test
add
xchg
or
add
je
jno
mov
xor
cmp
mov
jge
cmp
add
add
scas
or
mov
add
fistpl
dec
cmp
adc
int3
int3
int3
int3
xchg
mov
nop
nop
nop
mov
inc
mov
or
add
add
jae
push
idivl
xchg
aad
sub
loop
mov
lea
adc
cmp
add
add
add
add
add
add
add
dec
pop
adc
add
add
fidivl
mov
push
mov
and
fildll
ficoms
aad
add
movsl
ljmp
mov
adcb
pop
lock
add
add
fcomi
gs
jecxz
roll
add
bound
pop
jb
fs
dec
xchg
or
add
add
add
add
addr16
js
jp
add
or
cmp
add
pop
or
add
add
mov
test
push
add
add
jp
repnz
mov
mov
mov
mov
clc
outsl
rorb
add
rcl
dec
movl
into
dec
in
mov
add
rolb
add
add
xchg
es
pop
lret
insb
outsl
cmp
add
add
cmpsb
inc
push
xor
nop
nop
nop
nop
and
idivb
hlt
and
ret
out
mov
pop
mov
outsl
mov
add
add
sarb
pop
movsb
sbb
dec
or
add
cmpsb
aas
mov
sbb
es
sub
add
add
cmpsl
jp
or
add
add
cmp
add
add
testb
add
add
xor
imull
mov
mov
cmp
sub
or
add
add
int3
orb
add
add
fsubs
cmp
fiadds
add
add
pop
cmpsl
push
inc
xchg
sbb
dec
inc
mov
xchg
outsb
jmp
fnstcw
fcoml
add
add
add
xor
mov
or
add
xor
mov
sahf
xchg
movlps
pop
leave
stos
roll
adc
add
lea
je
int3
int3
int3
int3
int3
cmp
push
pop
xlat
mov
sbb
imul
add
add
leave
fstpt
je
test
and
nop
nop
nop
nop
nop
adc
jmp
bound
lcall
add
add
pusha
xchg
push
xchg
mov
sbb
cmp
add
add
lods
ljmp
sbb
add
ja
pop
add
add
movsb
pop
imull
dec
test
cmp
andb
jae
and
add
add
es
orl
js
and
add
jle
sbb
xor
and
and
add
add
sarl
adc
inc
xor
call
mov
lahf
xlat
movsl
lcall
add
pushf
mov
sub
sbb
ret
ucomiss
hlt
cmp
add
add
add
add
add
jne
inc
stos
shr
sub
push
mov
scas
ljmp
mov
jo,pt
iret
sbb
cwtl
add
das
fsubl
add
mov
sbb
add
cmp
int
mov
push
stos
dec
cmp
mov
add
add
add
aas
in
jbe
icebp
add
add
push
xor
int3
int3
int3
int3
int3
sahf
add
add
add
dec
pmuludq
xchg
incb
add
add
aam
mov
jne
add
add
dec
pop
int3
int3
int3
int3
int3
stos
cmp
and
dec
add
add
add
mov
test
cmp
add
mov
cli
jne
dec
pop
sub
jae
xor
leave
dec
sbb
push
das
sbb
in
mov
xor
sub
add
add
add
insl
nop
nop
nop
nop
nop
add
inc
dec
fisttps
add
add
push
hlt
xor
aaa
outsl
mov
sarb
xchg
xor
inc
sub
inc
jo
push
add
add
popf
outsb
jae
mov
mov
jb
mov
add
add
add
add
imul
add
stos
pop
dec
and
jle
repnz
inc
mov
scas
push
cmpsl
in
cli
test
jmp
out
out
call
lret
cmpsb
jmp
sub
push
xor
pushf
mov
pop
rcr
icebp
imul
xchg
mov
aam
rolb
mov
inc
je
je
stos
bound
loop
xor
add
add
xor
test
int3
int3
int3
int3
int3
add
add
add
sub
fwait
repz
add
add
mov
jmp
sbb
int3
int3
int3
int3
int3
paddusb
loopne
rcrb
add
xor
cli
mov
pop
lods
scas
outsl
lods
jo
je
add
stos
test
lods
and
mov
movsb
push
aaa
sbb
sub
sub
pusha
arpl
mov
lea
push
add
add
cli
fsubrp
loopne
es
call
aaa
stos
inc
adc
jne
xor
add
jno
pop
int
mov
add
xor
ss
and
adcb
int
add
xchg
mov
add
stos
jp
int3
int3
int3
int3
cli
push
add
add
in
mov
add
lahf
push
jmp
mov
dec
insl
xor
dec
push
push
xchg
inc
xchg
int
inc
in
jnp
daa
lcall
xor
add
add
imul
idiv
or
add
add
xor
adc
lock
add
add
in
xchg
jo
mov
xchg
pusha
push
cmp
jecxz
fisubrs
add
add
add
cmp
nop
nop
nop
nop
mov
pop
inc
int3
int3
int3
int3
int3
cmc
mov
repz
and
int3
int3
int3
int3
lret
ljmp
push
add
add
add
add
add
fcmovnu
icebp
sahf
jb
dec
pop
add
adc
or
add
add
jmp
mov
ds
cli
testb
jmp
ja
fsts
add
add
and
rolb
add
add
aad
negl
add
add
xchg
out
and
lahf
pop
sub
add
add
push
repz
add
add
add
jnp
inc
dec
subl
orl
daa
notb
xchg
and
jne
cmp
pushf
cmpsl
dec
inc
rorb
add
add
jb
hlt
mull
aas
scas
and
sahf
sahf
push
jg
jb
push
xor
jno
ret
or
add
add
adc
das
sub
add
add
push
in
jmp
lds
in
sub
xchg
push
hlt
leave
cli
icebp
cmpl
addl
lods
xchg
xchg
sbb
in
repnz
add
repz
xlat
mov
ficoms
sub
jecxz
cld
mov
pop
inc
je
jmp
pop
icebp
mov
ljmp
fiaddl
add
rorb
xor
add
add
add
popa
jecxz
adcl
add
add
add
add
jbe
mov
push
loop
pop
jmp
sbb
add
add
add
add
cmp
add
add
jne
imul
fucomip
jb
std
sbb
lcall
xor
cmpb
aas
dec
cvtdq2ps
sbb
pop
ljmp
xchg
push
mov
cmp
aas
pop
sbb
mov
dec
int
push
mov
xlat
in
mov
add
add
add
jb
loop
xchg
scas
test
push
mov
mov
nop
nop
nop
nop
nop
mov
push
fdivrs
test
dec
push
add
add
sti
jae
popa
repz
add
add
add
aaa
jle
mov
mov
je
dec
rcrl
add
pop
out
scas
xor
add
shrl
int3
int3
int3
data16
das
and
jb
jg
add
add
icebp
in
xchg
sub
sarb
add
fsubrl
add
cmp
divb
mov
popf
insl
cmpl
xor
inc
pusha
sub
lahf
or
leave
mov
mov
sbbl
jns
cmp
test
enter
dec
pop
jle
xchg
pop
cmp
lods
sbbb
inc
data16
lcall
notb
and
add
add
sub
add
add
repnz
movsl
mov
jnp
cmp
aaa
mov
cmp
insl
ja
cmpsb
fcmovnbe
rclb
jbe
add
jnp
inc
adc
pop
add
add
jne
or
mov
add
add
add
rcrl
push
and
add
add
cli
push
pop
jmp
lods
mov
xor
add
add
add
aaa
and
add
add
fdivl
in
das
mov
lret
pushf
and
test
sahf
je
xor
add
add
movsl
lcall
int3
int3
int3
int3
int3
roll
add
add
clc
push
scas
adc
inc
xor
movsb
or
add
add
cmp
sahf
mov
or
add
add
add
add
cli
data16
movaps
add
hlt
adc
int
dec
movsl
adc
push
aaa
les
xchg
add
add
xor
fcmovbe
xchg
ror
daa
adc
cltd
add
js
mov
fsincos
pop
jns
movsb
fwait
dec
push
pop
add
add
jno
les
add
aas
cmp
aaa
push
xchg
mov
add
add
add
push
mov
pop
add
add
je
jmp
lretw
aam
add
add
or
add
add
push
leave
stos
or
add
add
mov
add
dec
fadds
cmp
mov
add
jge
sahf
in
inc
jl
inc
dec
mov
and
xchg
cmp
and
inc
ds
shr
call
cmpsl
lret
push
dec
dec
add
add
add
and
mov
adc
lock
nop
nop
nop
nop
jle
push
loopne
mov
sti
call
outsb
cld
dec
iret
push
sub
aas
mov
inc
xor
fsubrl
stc
pop
andl
in
inc
or
add
add
cmp
in
cld
les
mov
das
add
ds
insb
xchg
sub
xor
test
or
add
add
enter
push
lods
mov
mov
xchg
push
cmpb
daa
push
mov
lods
or
add
add
movsb
xchg
ljmp
add
add
add
lods
ja
cmp
ljmp
add
inc
shr
or
add
pop
repnz
fisubrl
fstpl
sbb
xchg
xchg
popa
int
lret
mov
push
es
inc
mov
rorb
sbb
rorl
add
mov
jbe
insl
mov
xchg
jno
mov
add
add
add
inc
sldt
leave
repz
int3
int3
int3
int3
stos
addr16
cmc
dec
mov
push
sbb
inc
jecxz
push
add
add
push
and
ss
push
dec
mov
out
js
mov
gs
push
jecxz
xchg
jo
cmpsl
add
add
add
add
add
add
add
add
adc
insb
mov
and
lret
add
add
ds
add
jmp
sub
movsl
dec
movsl
ficoml
add
add
es
add
add
xchg
int
cmc
subl
add
add
add
mov
insl
out
test
jge
push
cmp
mov
pop
inc
push
or
push
mov
xchg
xchg
add
add
out
lock
fimuls
or
adc
xchg
es
cmp
add
add
in
cmpsb
aas
or
add
add
loope
or
scas
lcall
sbb
or
add
add
cmp
divb
mov
clc
xchg
test
addr16
fimuls
popa
int3
int3
int3
int3
int3
mov
mov
jg
lret
jle
add
xor
call
pop
aaa
aad
push
add
add
int
jo
mov
stos
inc
cmpsl
movsb
sub
sbb
add
jmp
sbb
add
divb
cmp
jmp
popf
cld
add
add
add
cltd
int
push
add
add
xchg
inc
subb
fcoml
push
push
dec
and
lock
test
ja
imul
push
das
lcall
jae
fists
add
add
arpl
test
lea
adc
sbb
mov
add
add
add
add
add
xchg
iret
sub
sbb
push
int
out
fcoms
mov
cmpsl
mov
xor
popa
js
rcll
jne
mov
add
pop
les
dec
pusha
xor
mov
sahf
jge
lods
fimuls
sbbl
out
add
add
mov
sbb
cld
jne
dec
std
sahf
mov
imul
mov
add
add
pop
push
and
lock
lret
or
add
add
test
add
pop
sub
add
add
dec
mov
mov
js
inc
mov
jns
pop
pop
pop
add
add
add
jle
mov
mov
cmp
rcrl
and
jno
xchg
add
movsb
hlt
adc
add
add
addr16
mov
sbb
sarl
xchg
int
add
add
mov
xor
adc
in
call
xchg
jae
test
push
fs
or
add
add
or
ds
out
mov
sysexit
inc
xor
std
pop
mov
mov
mov
mov
add
add
add
lahf
fmull
pop
ds
adc
jae
loope
and
add
lret
lahf
xor
adc
lcall
sbb
mov
mov
sti
adc
je
fwait
and
loope
add
add
add
jne
je
add
add
add
dec
ljmp
add
sahf
xchg
int3
int3
int3
int3
int3
test
sub
inc
popf
fdivr
add
add
add
lds
dec
add
add
add
add
xbegin
push
push
je
in
out
daa
rcl
les
fiadds
mov
xchg
loopne
daa
test
sbb
add
xchg
clc
sbb
push
push
iret
push
cmp
adc
push
in
stos
or
add
add
loopne
ret
lock
xor
jge
adc
add
mov
xchg
jmp
cmpsb
mov
int3
int3
int3
int3
fwait
xor
lds
or
add
add
into
cmp
xor
add
inc
js
add
add
add
inc
outsb
adc
mov
add
add
jne
dec
add
add
add
dec
loope
lea
add
add
jmp
xor
push
sar
aam
jns
inc
pop
add
add
lods
mov
dec
pop
test
inc
add
add
add
int3
int3
int3
int3
test
dec
popl
add
add
pop
sub
fldl
add
add
push
adc
repnz
add
push
sub
in
add
inc
cmpb
add
add
add
add
push
add
add
mov
repz
add
add
daa
push
inc
adc
push
pusha
pop
addr16
cmp
repnz
shlb
imul
aaa
add
popf
fcoms
dec
sbb
sbb
int3
int3
xor
adc
dec
cmp
or
add
add
pop
loope
mov
rorl
ljmp
cmp
add
add
add
add
cmpb
add
add
add
mov
inc
push
add
add
gs
jge
fst
jno
dec
add
add
shlb
inc
je
add
add
stos
cmpsl
insl
mov
and
add
add
dec
popf
jg
inc
or
add
add
insb
test
push
push
popl
add
push
int3
int3
int3
int3
int3
sbb
adc
xchg
add
add
ds
pop
mov
jne
je
jae
add
add
sti
loope
cli
fxch
fbstp
aas
push
fdivl
clc
stos
push
pop
data16
sbb
movsb
arpl
and
push
pop
iret
jnp
and
mov
adc
and
inc
jo
or
add
mov
call
or
add
add
xchg
add
add
add
add
add
pop
cld
adcb
data16
clc
mov
mov
jae
inc
mov
ss
lds
div
lahf
shll
mov
add
roll
int3
int3
int3
int3
ja
push
nop
nop
nop
nop
nop
sub
add
repz
stos
ja
and
cmp
mov
inc
or
add
add
data16
inc
test
das
gs
popf
stos
lock
int3
int3
int3
int3
adc
imul
pushf
int
or
loopne
mov
idivb
fcompl
add
nop
nop
nop
nop
nop
enter
add
xor
mov
add
add
add
add
add
data16
add
add
rcrl
loop
jmp
clc
bound
mov
and
adc
pop
filds
add
add
outsb
adc
push
pop
das
jge
loope
mov
test
add
pop
in
adc
add
xchg
inc
orl
mov
mov
movl
daa
shl
mov
and
sub
sub
add
sub
xchg
shll
add
hlt
add
add
add
imul
jp
icebp
push
loop
mov
rcll
xchg
mov
mov
lret
push
fucom
dec
mov
add
add
jp
mov
xchg
es
adc
or
add
add
mov
mov
add
add
loopne
pop
or
add
add
sub
fwait
mov
int3
int3
int3
int3
ss
add
add
xchg
movsb
stos
mov
and
int3
int3
int3
int3
int3
pop
test
adc
or
add
add
dec
leave
test
add
add
adc
lods
mov
sub
in
jbe
leave
mov
fucomi
pusha
mov
in
sub
and
movsl
iret
inc
cmpsl
mov
insl
sbb
push
push
mov
repnz
add
add
in
neg
pop
inc
cmp
cmc
lahf
pop
add
add
ds
add
add
mov
icebp
ljmp
add
cmp
test
add
add
mov
jmp
adc
add
add
or
add
add
cmpsl
pushf
push
flds
mov
dec
pop
sbb
add
add
mov
add
add
add
add
add
jge
shll
or
add
add
add
add
pop
popa
mov
xlat
cmp
movsb
out
sub
xchg
jp
xchg
ficoml
stos
into
sbb
inc
pop
sti
sbb
adcb
popl
clc
or
add
add
add
sub
pop
pop
add
add
ds
daa
sti
or
shl
jno
or
add
add
sarb
push
add
add
lods
push
addr16
add
sbb
inc
dec
push
add
add
lock
add
rorb
or
add
add
push
cmp
push
jmp
lods
fistpll
add
add
lahf
into
xchg
std
popa
mov
aam
sbb
or
add
add
cmp
add
add
sbb
mov
outsb
cmpsb
dec
sub
std
imulb
leave
lods
sub
rorb
add
cmp
int3
int3
fsubs
push
adc
int
jbe
push
add
add
add
test
add
add
add
add
add
xchg
int3
int3
int3
int3
int3
test
xor
push
mov
int3
int3
int3
int3
int3
aaa
rolb
add
add
stos
icebp
adc
lret
mov
loop
lcall
cmp
orl
mov
push
or
xorl
xchg
ret
xor
push
dec
mov
add
add
add
or
add
add
add
add
mov
std
sbb
add
add
dec
lcall
push
sahf
es
data16
jge
fcomps
xor
adc
lcall
jns
int3
int3
int3
int3
int3
and
rorb
inc
sub
js
ret
dec
sub
mov
add
in
xor
add
add
add
add
add
add
int3
int3
int3
int3
int3
loop
sti
dec
mov
jg
les
cltd
xchg
adc
fidivl
and
add
jb
and
cmc
mov
lret
add
add
push
xor
add
mov
roll
cmp
out
mov
in
dec
aad
xchg
xchg
xor
mov
add
jg
aam
mov
insb
movsb
cwtl
jp
inc
popa
xor
sbb
push
adc
dec
add
add
dec
push
pop
pop
out
xor
inc
fldenv
jge
stc
push
cld
jbe
loop,pt
or
add
add
add
jp
imul
sub
add
sbb
xor
cmp
add
jae
mov
lea
mov
call
popf
sub
pop
shrb
fisubrs
mov
add
add
push
mov
out
orl
add
add
clc
add
add
es
xorb
shlb
mov
shrb
imul
cmp
sub
cmp
sub
add
add
ja
mov
and
arpl
fs
ljmp
rcll
add
add
test
nop
nop
bound
fcompl
loope
push
sub
add
add
sub
sub
cs
aam
ja
ds
jo
add
add
mov
add
add
add
imull
hlt
lret
xchg
adc
imul
fs
cld
cmp
ret
sub
stc
jno
addl
fisttpll
inc
lds
and
mov
call
cltd
adc
fwait
cli
dec
outsb
ret
or
add
add
in
lret
popa
fst
inc
mov
and
inc
call
mov
aas
sub
xor
cli
and
add
add
sbb
xchg
jbe
cmp
pop
stos
mov
jge
hlt
out
icebp
mov
repz
xor
add
scas
int
xchg
inc
rcrb
adc
mov
cltd
std
adc
add
add
add
out
jb
ljmp
add
lea
int
sti
shl
dec
je
add
add
ss
aas
shl
add
add
pop
add
add
shrl
mov
fnstenv
add
pop
shlb
push
push
aam
add
add
test
inc
dec
sub
movsb
imul
or
add
add
cmpl
xchg
fstps
loop
add
add
add
and
aas
adc
add
add
add
loope
add
add
add
mov
add
lock
jmp
cmp
in
dec
xchg
push
mov
adc
or
add
add
cmp
mov
jp
jp
xchg
dec
cmpb
and
nop
nop
nop
nop
nop
outsl
mov
jle
insb
and
in
test
sub
add
add
add
xchg
lods
mov
sub
lea
fisttpll
add
add
inc
xchg
push
sub
ds
push
add
aas
cld
lea
add
pop
shlb
cmp
or
mov
or
add
add
test
in
loop
je
or
fisubrs
jg
pop
push
pop
ficoms
cld
pusha
add
add
add
andb
add
add
add
add
dec
dec
das
scas
and
add
mov
sub
movsl
ret
sti
lods
pop
mov
stos
test
scas
push
push
scas
cmpl
js
xor
xchg
icebp
repnz
add
add
push
pop
dec
addl
and
outsb
loopne
ja
loop
mov
add
add
add
dec
movsl
int
dec
xor
add
pop
inc
push
test
sbb
stos
cmp
pop
mov
fsubl
jg
data16
add
add
xchg
inc
sub
add
or
xor
int3
int3
int3
int3
int3
cmp
sub
shll
mov
inc
push
add
mov
rcrb
lds
push
mov
xchg
adc
mov
hlt
sbb
add
mov
add
add
dec
mov
mov
mov
mov
mov
mov
pop
aad
icebp
xor
notb
sub
add
daa
andb
cmc
or
ds
adc
cs
sub
addl
add
add
stc
xor
out
mov
loop
data16
add
stos
shll
pop
sbb
jnp
das
and
add
add
add
jno
sub
cmc
and
xorl
aam
adc
add
add
inc
ja
fs
fnstcw
or
mov
movsl
add
add
movsl
movsl
outsb
and
aas
mov
pusha
sbb
and
ds
into
pop
xchg
add
add
cmp
lahf
jg
xchg
negl
push
addb
add
add
xchg
xorl
out
or
add
add
or
add
add
add
shlb
inc
mov
testl
orl
nop
nop
nop
nop
test
push
or
les
cmpsl
xlat
lods
arpl
add
and
add
add
inc
mov
pop
cmp
mov
fists
pop
sub
pop
add
add
add
pop
or
add
add
aaa
insb
push
in
orl
pushf
jmp
inc
sub
xchg
out
inc
pop
add
add
dec
or
add
add
sti
in
bound
xchg
and
shll
mov
mov
and
cs
les
dec
push
xchg
stos
mov
add
inc
bnd
lret
xchg
cmc
jmp
mov
jae
icebp
and
lods
jae
rolb
add
add
insb
bound
add
add
in
test
adc
jne
cmp
jg
add
fildll
push
std
sbb
adc
mov
lret
ud1
add
inc
mov
sti
popa
xor
lahf
xchg
movsl
cmpsl
subl
add
add
xchg
push
outsb
xor
push
add
add
cmc
cli
fsubr
jecxz
sub
add
add
cld
or
mov
jo
push
add
add
fidivrl
enter
pop
pop
mov
dec
popf
mov
ss
ja
push
mov
hlt
and
mov
and
add
add
loopne
mov
push
scas
mov
shrb
add
add
add
add
dec
jl
stos
int3
int3
int3
int3
int3
cmp
addr16
insl
lock
xchg
and
and
add
imul
int
ljmp
lds
stos
fimuls
shlb
dec
ss
inc
push
mov
outsb
mov
or
call
ds
adc
repz
add
add
or
add
add
jg
das
repz
xor
jb
add
scas
lret
and
cmp
mov
jo
scas
add
add
mov
add
add
add
leave
xchg
add
add
test
jl
arpl
into
cli
stos
push
movsl
rorl
int3
int3
int3
int3
int3
inc
jp
adc
push
lock
mov
mulb
jg
repnz
fnstcw
mov
movsb
movsb
and
ret
sub
add
add
add
test
jnp
add
add
and
add
add
xlat
jl
mov
xor
outsb
inc
push
mov
addl
add
or
scas
xchg
dec
pop
rcrl
add
add
imul
mov
mov
add
std
inc
scas
je
jne
xor
fisttps
add
add
mov
add
add
shll
add
or
filds
add
add
push
adc
pushf
repz
and
adc
sub
test
add
sbb
hlt
pushf
cmp
int3
int3
int3
cmp
cmc
push
add
add
gs
test
pop
loopne
sub
push
in
cmp
dec
fbld
lahf
movsl
jb
push
outsb
cli
jo
push
insb
push
adc
add
add
mov
inc
mov
add
add
xchg
sldt
js
add
add
in
mov
mov
xor
idivb
and
add
add
add
dec
xchg
cwtl
pop
cli
movsl
inc
imul
pop
sub
loopne
cld
scas
shll
add
add
inc
pop
repz
pop
push
clc
sbb
add
sub
sbb
fdivs
adc
and
cmp
push
imul
sarb
mov
jmp
and
add
add
sahf
test
dec
sub
pop
lret
adc
ja
mov
add
add
cmp
pushf
sbbb
push
add
or
add
add
in
sub
adc
das
stc
dec
pop
lret
data16
inc
dec
pop
icebp
adc
xor
rep
push
add
insl
stos
lods
mov
dec
out
fisubrl
pop
movsl
jb
mov
add
add
fstl
jo
adc
sbb
mov
add
jae
into
std
nop
nop
nop
nop
nop
std
cld
aam
popf
add
dec
es
jo
stos
jecxz
xor
imul
xorl
in
jmp
arpl
stos
ja
xor
xor
out
mov
pop
add
add
add
js
cwtl
xchg
mov
cmpsl
fisttpll
add
add
add
nop
nop
nop
nop
nop
pop
add
add
and
add
add
xor
dec
adc
scas
and
lret
test
sahf
sub
sub
adc
js
push
add
add
add
pop
loopne
scas
sar
jmp
fcomps
push
pop
add
sar
mov
add
push
pop
jle
lds
and
inc
inc
dec
lahf
in
inc
pop
xchg
cmp
xchg
fldt
iret
int
jns
mov
mov
test
repnz
adc
add
dec
lcall
push
mov
lea
shll
cltd
or
add
add
add
add
mov
sbb
add
loope
cmp
repnz
push
or
add
add
mov
shlb
loope
cltd
pop
lcall
add
or
add
add
add
add
loopne
dec
repnz
jno
push
push
nop
nop
nop
nop
nop
jle
loopne
dec
in
mov
mov
and
fistl
es
mov
dec
xchg
das
sub
lret
jecxz
out
jmp
repz
int3
int3
int3
int3
test
mov
out
adc
mov
add
add
pop
lcall
lock
icebp
and
or
scas
iret
scas
jg
or
add
add
jp
mov
jo
push
fisttpll
add
add
jmp
cmp
cltd
lret
add
xlat
popw
fstl
shl
mov
loop
testl
das
stc
sarb
insl
mov
in
inc
sub
add
add
aad
xlat
mov
xchg
lret
jecxz
add
sbb
loop
std
mov
adc
fldl
subb
lcall
fildll
or
add
add
loop
dec
xor
add
shrb
and
aas
in
dec
mov
xchg
xchg
and
xchg
fcoml
data16
out
mov
popl
andb
ja
mov
add
adc
pushf
in
lcall
int
scas
cwtl
dec
shrb
add
add
and
shl
inc
sub
call
dec
fwait
jnp
push
pop
es
or
add
add
shl
sbb
add
xchg
out
add
mov
ret
loop
aam
mov
add
add
jae
cli
xchg
stos
mov
and
stc
mov
xor
in
scas
outsb
add
add
add
ss
push
cmpsb
adc
cmp
cmp
and
add
imul
adc
xor
adc
test
daa
cmpsb
std
nop
nop
nop
nop
nop
repnz
sub
push
sub
icebp
xor
mov
pop
adc
jecxz
pushf
addr16
sbb
sbb
and
mov
out
mov
iret
mov
sub
aad
not
cltd
jp
cmpsb
and
add
sub
shl
mov
mov
mov
in
inc
jo
or
add
add
loope
in
adcl
or
add
add
sbb
pop
push
add
add
int3
add
dec
hlt
inc
xchg
add
add
add
test
cltd
aam
mov
mov
push
lds
repnz
imul
or
add
add
add
leave
mov
je
test
jecxz
mov
add
add
shll
daa
or
cwtl
repz
sub
push
insb
cld
push
cs
xchg
leave
scas
out
xor
iret
adc
pusha
loop
mov
jg
cmpsb
outsb
in
cltd
pop
pop
jmp
outsl
pop
mov
mov
aaa
aas
outsb
repnz
add
add
bound
xchg
in
adc
push
rcrb
sbb
mov
test
pop
or
add
add
test
push
insl
out
movsl
push
sbb
pop
sbb
add
sub
rcr
sbb
add
add
push
inc
push
or
add
add
inc
pop
jecxz
lret
add
add
xchg
jle
mov
aas
fs
jl
push
lret
add
or
add
add
and
dec
dec
fstpl
movsb
movsb
lret
jg
iret
fsubl
inc
mov
jmp
in
jns
lods
push
imul
add
add
xor
scas
out
inc
mov
jbe
sbb
jg
add
add
lret
mov
jae
movsl
add
add
add
add
shrb
push
stos
mov
add
add
add
mov
sub
lods
sub
fisubl
mov
cwtl
into
add
add
add
pusha
jno
cmp
xchg
add
add
loopne
stc
inc
push
sub
and
dec
js
es
push
imul
add
cli
jecxz
xchg
mov
inc
movsb
sbb
dec
leave
fcomps
popf
mov
inc
mov
add
add
add
push
shrb
mov
add
add
subb
add
add
es
ja
mov
xlat
xor
jo
lahf
enter
add
add
dec
addr16
push
aas
inc
and
add
mov
faddl
mov
pop
lahf
mov
pop
add
add
pop
movsl
fs
stos
sbb
xor
pop
sub
add
add
sub
add
mov
add
add
xchg
pop
clc
sub
int
add
add
rorl
or
add
add
ss
ss
and
out
jge
mov
fdiv
aaa
in
jno
cmp
mov
pop
fdivl
and
das
add
pop
push
push
push
mov
xlat
pop
aaa
push
inc
xor
lods
fwait
cmpsb
jmp
push
addr16
adc
xorb
mov
adc
in
add
add
add
pusha
jnp
cs
mov
lret
add
test
popa
mov
or
add
add
xor
adc
popfw
loopne,pn
add
add
repz
push
dec
fwait
ja
addb
aas
sbb
add
das
imul
add
add
xor
inc
inc
out
ret
and
cmc
call
xchg
xchg
scas
push
push
xor
lds
add
add
mov
notb
pop
mov
sbb
ljmp
fcompl
lock
xor
and
nop
das
stos
mov
sbb
mov
mov
xor
add
add
ss
push
add
dec
pop
fisubs
insl
mov
push
add
add
add
mov
pusha
adc
add
add
sbb
inc
je
pushf
insl
loopne
push
push
mov
add
add
scas
pusha
cmp
rolb
xor
add
add
cmc
lahf
jle
ret
data16
mov
out
rcrl
pushf
nop
nop
nop
nop
nop
mov
jbe
ror
add
mov
push
sbb
add
add
add
inc
rol
mov
xchg
push
mov
mov
sbb
std
rol
push
jecxz
lods
pop
xchg
ret
loopne
jbe
add
add
mov
xchg
jo
cmp
js
inc
sbb
xchg
xchg
sub
insb
pop
push
sbb
popf
adc
popa
test
add
add
sub
fwait
mov
icebp
test
add
rorl
jbe
idivl
pop
add
add
dec
push
ja
add
inc
cmp
adc
sbb
movsb
sbb
xchg
mov
cmp
jbe
roll
imul
inc
sbb
inc
movsb
adc
jmp
mov
mov
add
add
fistl
pop
xchg
mov
shl
mov
jecxz
neg
shrb
pop
xlat
mov
pop
xor
cs
stc
dec
sub
mov
inc
pop
mov
push
fisubs
dec
xor
jb
sbb
cltd
out
add
add
fistps
sub
jbe
xchg
jmp
cwtl
push
fisubl
and
not
fwait
cli
scas
testl
mov
test
pop
adc
add
add
add
leave
sarl
lret
dec
pop
jmp
es
add
bound
mulb
pushf
fyl2x
insl
push
pop
popf
sbb
pop
div
add
add
add
add
add
stos
jl
dec
sbbb
mov
add
add
xor
outsb
xor
jne
adc
test
ss
xchg
out
adc
add
je
add
add
cld
repz
push
mov
adc
jge
inc
jmp
jbe
cmp
add
pusha
or
add
add
inc
ds
ja
ja
sahf
jb
dec
adc
nop
nop
gs
cmp
cmp
fsts
pop
stc
into
popf
xchg
in
clc
add
add
add
mov
gs
mov
rolb
sub
add
add
ds
fdivl
add
add
mov
lret
and
push
or
add
mov
imul
add
add
push
cmp
aaa
jns
mov
inc
fstpl
nop
nop
nop
nop
nop
pop
sbb
lcall
nop
movsl
mov
mov
cmp
popf
fld
call
push
fsubrs
int3
int3
int3
sub
cmp
mov
clc
clc
jbe
inc
lret
add
add
sub
add
xchg
push
inc
dec
lea
fwait
bound
add
pop
add
add
add
push
dec
imul
sub
add
aam
or
int3
int3
int3
int3
xchg
xchg
sub
mov
add
loop
cld
cmpl
int3
int3
int3
int3
cmp
pop
jmp
xor
dec
out
cmc
sub
add
inc
dec
pop
movsb
testl
push
sub
in
cmp
inc
fisubs
sbbl
add
add
mov
into
call
xchg
cmp
cmp
add
je
dec
xchg
push
out
lcall
sbb
into
dec
call
inc
sbb
inc
mov
mov
lods
cwtl
addr16
pop
negb
lret
mov
add
add
and
mov
push
push
or
add
add
cmpsl
aam
jl
xor
pushf
je
xor
jne
add
add
pop
test
aaa
and
add
add
loope
add
add
lret
icebp
jo
shlb
lcall
add
and
cwtl
dec
and
jb
or
add
add
adc
mov
sub
inc
shll
mov
add
and
notb
adc
mov
push
ret
dec
cmpsb
dec
mov
pop
jge
test
sti
movsb
mov
add
xor
mov
dec
mov
push
inc
xchg
aas
outsb
xchg
cmp
jae
sbb
cmp
jecxz
in
xchg
leave
in
push
mov
daa
in
or
add
add
push
xchg
sbb
mov
fisubrl
pop
jg
sub
incb
add
add
lret
mov
push
xor
mov
js
bound
dec
sbb
jg
mov
xlat
add
add
add
sti
call
addl
add
aad
sahf
out
push
mov
es
pop
and
cmp
popf
xor
push
cmc
or
sahf
std
daa
outsb
ds
out
cwtl
sbb
test
mov
mov
mov
xchg
mov
insb
push
jb
mov
xchg
xlat
adc
in
andb
test
data16
jns
mov
icebp
xchg
fnsave
ret
lods
sahf
xor
adc
mov
jg
outsb
repz
inc
mov
jnp
test
add
add
mov
rclb
jp
stos
mov
in
add
add
add
sub
push
add
add
mov
js
cli
jno
mov
add
add
mov
stc
rcrb
fs
jb
and
add
cmp
shll
into
scas
mov
xor
add
add
lods
clc
and
add
add
jp
inc
pop
push
add
add
push
inc
insl
mov
das
sub
cli
mov
mov
xchg
xor
das
mov
cmp
inc
mov
sbb
cltd
enter
sbb
lods
add
add
fs
jb
xchg
mov
sahf
sti
jb
sub
add
add
popa
aaa
pop
dec
mov
cmp
add
add
xchg
sub
mov
sbb
lods
into
rorl
jno
ds
jne
sub
push
pop
add
add
fisubl
and
jle
das
adc
add
mov
add
add
stos
jge
jmp
les
mov
and
lock
and
dec
repnz
jnp
shlb
lock
push
add
xor
mov
not
lret
aas
mov
mov
sbb
or
add
add
inc
mov
jmp
lret
dec
pop
xor
sub
add
add
inc
pop
lret
aas
or
cs
insb
loope
insb
or
add
add
fistl
nop
nop
nop
and
push
js
fdivr
push
xor
xchg
mov
leave
loopne
repnz
cltd
jmp
inc
mov
adc
add
add
test
add
imul
add
add
mov
xchg
dec
add
add
pop
sub
add
add
xchg
pop
movsb
inc
sub
push
test
lret
loopne
mov
push
jo
push
les
stos
cwtl
shlb
fndisi(8087
push
add
add
push
aad
sub
push
jmp
mov
mov
and
mov
adc
movsb
inc
bound
pop
das
imul
mov
bound
test
mov
push
lret
aaa
dec
pusha
call
dec
mov
iret
jg
dec
rclb
dec
lods
fisubs
add
add
push
mov
xlat
push
testb
fildl
scas
call
cld
add
add
add
mov
xchg
in
mov
stos
xor
pop
int3
int3
int3
int3
int3
repz
fmulp
int3
int3
int3
int3
int3
in
pop
ja
lcall
add
add
mov
add
add
repz
int3
int3
int3
int3
int3
enter
lods
mov
or
add
add
loope
add
jmp
adc
sub
jb
je
sub
push
stos
sti
push
add
add
mov
int3
add
es
jbe
sub
aaa
dec
repnz
and
jae
add
add
jmp
mov
xchg
in
pushf
sub
xchg
mov
int3
int3
int3
int3
test
add
add
shr
in
adc
and
or
add
add
xchg
adc
add
push
add
add
mov
push
paddw
fsubrs
cli
bound
add
add
call
mov
syscall
add
add
xchg
fmuls
add
add
pop
jns
icebp
repnz
add
dec
and
jns
and
xchg
jmp
push
jae
sub
add
mov
xor
and
aaa
add
add
add
sub
test
push
rcr
int
adc
add
add
sub
bound
adc
in
adc
xchg
add
add
and
adc
shll
add
mov
int3
int3
int3
int3
lcall
add
lds
imul
adc
gs
cmp
add
imul
push
mov
push
sahf
jae
out
mov
stos
lock
add
xor
stos
jmp
rsqrtps
mov
mov
add
add
cmc
adc
or
add
add
add
movsb
mov
pop
lock
xchg
dec
cwtl
and
dec
cwtl
fwait
leave
ss
addb
add
add
cmp
loopne
cmp
imul
ret
sub
mov
xlat
stos
push
je
inc
pop
mov
jp
pslld
cmpl
xchg
mov
cmp
sbbl
add
std
jb
jo
ror
pop
pop
jmp
pop
sti
loop
sbb
add
add
xor
jmp
out
jae
add
add
out
push
leave
je
cli
mov
dec
cmc
and
jge
movsb
stc
push
mov
inc
arpl
add
add
and
jbe
cltd
mov
dec
sub
add
cmp
mov
mov
inc
sbb
push
ret
mov
sbb
add
add
popf
testb
add
add
inc
push
lahf
mov
adc
xor
loope
jge
fstpl
mov
repnz
sarb
add
add
add
pushf
lock
data16
add
add
push
add
add
int3
int3
int3
int3
int3
sub
add
add
add
ljmp
push
jecxz
jae
inc
xchg
in
in
lock
sub
mulb
int
sahf
rolb
mov
inc
jo
ss
fcmovu
rcl
xchg
stos
andb
xchg
test
pop
lock
add
add
hlt
jne
rolw
xchg
adc
sbb
aad
add
add
and
ds
fidivrl
repnz
adc
add
add
add
test
pop
popf
mov
in
dec
pop
imul
mov
nop
nop
nop
nop
nop
cmp
pushf
adc
add
int3
int3
int3
int3
int3
inc
in
inc
sahf
push
xor
inc
scas
int
scas
sub
adcl
shl
jl
pop
rclb
or
add
outsl
ret
xchg
mov
repz
ret
sbb
das
nop
nop
nop
nop
nop
and
andb
stos
jbe
xchg
ficompl
adc
jg
mov
cli
fiadds
int3
int3
int3
jnp
lcall
fildl
add
xor
aad
jo
sahf
enter
std
xor
pop
add
add
inc
add
add
add
add
sbb
clc
mov
mov
nop
nop
nop
nop
nop
hlt
lahf
mov
jl
loop
nop
nop
nop
nop
xchg
add
add
add
xchg
add
add
fdivrl
cmc
sub
mov
xchg
es
or
in
scas
xchg
fnstenv
mov
idivl
or
add
add
test
add
nop
nop
nop
nop
nop
scas
inc
xor
call
mov
hlt
or
repnz
cmp
stc
sub
add
mov
bound
adc
sbb
add
add
add
les
xor
fimuls
push
pop
add
add
xor
mov
or
add
add
lea
mov
add
add
add
aaa
adc
mov
add
ljmp
sbb
out
mov
mulb
int3
int3
int3
out
or
add
add
add
add
push
aad
aad
insb
and
mov
sub
push
lea
mov
add
add
addl
add
add
inc
push
add
add
sahf
std
ret
ret
ja
mov
jno,pn
daa
fistpll
push
push
frstor
rcrb
add
inc
lods
jmp
dec
fdiv
clc
push
int3
int3
int3
xor
fs
into
out
push
sbb
repz
jnp
cmp
add
add
xor
out
nop
nop
nop
nop
nop
dec
dec
xchg
loopne
sbb
and
add
add
stc
rcl
daa
aaa
add
dec
xchg
and
aam
adc
mov
sbb
or
add
adc
cmc
cmp
mov
add
and
inc
ret
lock
lock
not
push
add
add
add
ljmp
movsl
push
in
or
add
add
jl
lret
sbb
bound
andl
imul
pop
mov
add
mov
pop
sub
xorl
stos
pusha
loop
push
ret
out
pushf
adc
adc
push
not
and
dec
mov
ja
jp
in
cwtl
sbb
xorb
enter
adc
cmp
or
imul
hlt
das
ret
pushf
sbb
adc
add
add
daa
cmpsb
jecxz
je
or
mov
cmp
mov
js
test
popa
xor
scas
push
in
pop
xchg
int3
int3
int3
int3
int3
in
push
lock
add
add
add
cmpsb
sub
fs
cmpsb
iret
mov
shll
outsb
cltd
pop
stos
jo
lret
add
add
and
cmp
sbb
push
sub
movsb
xor
xor
jg
cld
mov
hlt
sahf
test
sldt
add
add
jmp
lds
pop
bound
sbbl
and
push
adc
dec
add
add
mov
insl
lcall
test
or
add
add
outsb
sub
add
add
inc
cmpsl
add
add
add
add
add
sbb
push
ret
stos
adc
cmp
fcoms
mov
jp
mov
add
dec
imul
adc
insb
push
add
mov
xchg
repnz
add
add
add
mov
and
fimuls
ret
cwtl
test
fsub
pop
mov
add
jmp
pop
out
add
add
mov
mov
int3
int3
int3
int3
int3
aas
insl
aaa
imulb
xor
inc
stos
test
add
add
mov
xchg
arpl
add
add
enter
mov
nop
nop
nop
nop
nop
out
enter
fstps
add
and
lcall
jne
addr16
mov
insl
pop
xor
mov
int3
int3
int3
int3
int3
pop
add
add
out
shll
mov
rolb
add
add
leave
out
pop
test
xlat
cmpsl
mov
inc
mov
loopne
shrb
lods
fs
mov
das
inc
push
arpl
negl
xor
repnz
add
add
movsb
iret
jno
shl
jb
or
add
add
sbb
add
add
test
jno
add
add
cli
dec
ds
scas
push
sub
int
stos
lods
and
dec
sub
shr
addl
add
add
add
add
aas
cli
popa
or
inc
ss
fnstcw
iret
pop
mov
sti
push
and
sti
mov
fsubl
push
add
shll
or
or
add
add
test
add
insl
xor
jns
das
fsubrl
insl
xor
or
add
add
jnp
hlt
push
push
cld
scas
aam
xchg
pop
adcb
iret
bound
lret
adc
scas
adc
add
and
jge
sbb
ja
xlat
mov
xchg
sub
add
add
add
repz
push
rsqrtps
xor
outsl
icebp
dec
and
sbb
mov
add
mov
mov
xor
ret
push
jle
outsl
and
test
xchg
fildll
pushf
addl
sub
or
add
add
add
add
push
pop
fs
adc
inc
cwtl
ljmp
xor
mov
jmp
adc
data16
mov
stc
add
add
push
push
xlat
insb
pop
inc
arpl
sub
and
sbb
push
enter
add
cld
pop
outsl
adc
sub
add
push
xor
pop
xchg
clc
jl
sub
repnz
hlt
fsubs
aaa
aam
and
fwait
xchg
aas
push
sbb
nop
nop
sahf
sbb
lock
xlat
xchg
jecxz
aaa
xchg
mov
test
add
cmpsb
inc
add
add
add
jmp
adc
bound
add
in
cmp
in
js
add
add
add
fiadds
add
add
and
into
dec
and
add
int3
int3
int3
int3
int3
add
add
add
jae
jnp
mov
rdpmc
lahf
imul
scas
mov
push
jbe
dec
fwait
out
std
aam
in
loope
pop
lret
into
mov
push
mov
and
stos
or
add
add
jecxz
mov
arpl
js
fists
clc
fs
dec
cmp
add
add
cmp
dec
xor
xchg
dec
in
push
fildll
or
lret
jns
jno
cld
or
add
add
or
add
add
adc
into
and
lcall
mov
cmc
test
jl
mov
add
mov
pop
add
in
mov
dec
jge
xchg
mov
cld
in
cltd
adc
push
adc
lcall
mov
inc
ss
pop
add
add
dec
push
fisttpl
add
add
mov
or
add
add
add
fstpl
movsb
push
into
test
xchg
sbb
mov
add
add
xchg
cmpsb
dec
inc
fucomip
push
add
add
mov
cmc
mov
sarb
aam
stos
sub
jmp
pop
aad
lret
and
mov
inc
mov
das
dec
test
add
add
cmp
adc
fwait
push
mov
es
loop
cltd
movsl
mov
add
add
add
xor
add
inc
outsb
pop
inc
pop
add
add
jmp
cmpb
push
mov
scas
add
add
jle
jecxz
pop
adc
pop
lods
in
mov
or
add
add
in
rolb
sbb
test
aam
jo
dec
sbb
add
add
add
mov
test
fwait
and
fs
mov
jns
shl
popa
pushf
mov
pop
addl
push
pop
and
pop
ror
sarb
add
add
loopne
daa
dec
xor
inc
mov
dec
popa
cmp
nop
nop
nop
add
add
add
pop
icebp
xchg
ret
data16
adc
nop
nop
nop
nop
nop
inc
push
insl
sti
pop
and
sti
movsb
cmp
jae
addr16
or
add
add
pop
out
xor
imul
hlt
dec
repnz
lcall
stc
jnp
add
add
add
add
add
mov
jns
lahf
add
add
cld
jns
xchg
push
test
int3
int3
int3
int3
int3
sub
gs
cmp
sbb
push
cmp
sbb
call
pop
push
jle
xor
popa
pop
ja
sub
xchg
inc
je
mov
imul
or
add
add
sbb
or
add
add
nop
nop
push
mov
lret
stos
enter
add
add
add
js
icebp
fiaddl
add
add
mov
ja
mov
fchs
sbb
add
add
fdivs
jecxz
incb
add
add
cmp
xor
stos
sarl
pop
xacquire
mov
pushf
sub
jp
lods
add
add
push
jno
out
push
enter
add
add
add
add
ret
or
add
add
test
sub
add
dec
cmp
add
hlt
cld
or
add
add
cmp
sbb
mov
adcl
nop
nop
test
lods
hlt
ja
or
add
add
roll
add
add
mov
call
loopne
dec
add
add
sub
adc
rcrb
loopne
pop
subb
add
add
mov
add
pop
mov
sarb
mov
rorl
pop
or
add
add
sahf
pop
add
add
add
shll
push
sbb
imul
add
add
xchg
mov
jno
jne
xorb
iret
notl
mov
dec
jae
mov
sub
call
add
add
add
sbb
add
add
mov
ficoms
push
inc
push
and
rorl
sub
xchg
sbb
adcl
arpl
xor
xchg
jno
enter
mov
and
cmp
in
ja
and
add
dec
enter
mov
loop
cli
push
dec
dec
inc
clc
mov
nop
nop
nop
nop
nop
fldcw
add
jno
dec
pushf
adc
pop
cmp
inc
jmp
insl
cmp
sub
push
jle
push
inc
mov
cmp
sbb
add
add
add
add
add
xchg
xchg
push
lahf
loop
lds
mov
sub
icebp
loopne
or
add
add
add
add
outsb
dec
inc
fbstp
and
add
pop
mov
sbb
mov
pusha
sbb
mov
div
dec
in
xchg
out
or
add
add
sbb
jge
dec
outsb
out
or
add
add
imul
in
add
add
xlat
in
dec
and
dec
scas
jb
add
add
or
movsb
jle
mulb
add
orl
push
mov
jne
mov
add
push
add
add
push
pop
pop
adc
int3
int3
int3
int3
int3
pop
add
add
add
jecxz
arpl
inc
negl
mov
add
add
add
inc
push
add
add
add
push
repnz
nop
nop
nop
nop
cld
in
fnstsw
insl
clc
jo
push
je
dec
xchg
inc
and
xor
aas
mov
cmp
xor
push
inc
mov
add
fbld
cmp
dec
lahf
cmpsl
cmp
insb
repnz
adcb
jecxz
push
pop
mov
cmp
rcl
xor
sti
arpl
mov
add
add
out
and
outsl
insb
dec
sbb
mov
insb
out
lds
rcrb
mov
mov
add
xor
add
add
cmp
inc
cltd
aas
out
pop
push
mov
shl
lods
lods
jg
add
add
int3
int3
int3
int3
int3
mov
and
cmpl
loope
movsl
adc
dec
inc
pusha
push
mov
cwtl
add
add
add
dec
sbbl
and
add
inc
push
mov
push
add
add
mov
and
inc
and
imul
filds
add
add
fisttpl
add
add
inc
and
mov
pop
call
filds
add
add
xchg
inc
inc
sub
add
dec
mov
cwtl
sub
xchg
pop
imul
add
add
pop
nop
nop
nop
nop
nop
int3
int3
int3
int3
int3
and
dec
fists
add
sub
mov
add
push
mov
jg
bound
popf
nop
nop
nop
nop
nop
leave
out
bound
aad
stc
aad
sub
add
add
fisttpll
add
add
add
inc
mov
add
std
adc
shrl
test
outsb
in
in
int3
int3
int3
int3
int3
and
das
insb
adc
push
add
add
push
pshufw
xor
in
jno
mov
ficoml
sbb
xchg
addb
outsl
movl
daa
mov
movsb
add
add
add
pop
loop
jmp
in
mov
pop
adc
sub
aaa
add
add
add
aas
jg
mov
test
movsb
out
stos
loop
jns
jnp
dec
ret
js
push
jo
xchg
sbb
sbb
mov
add
enter
daa
mov
addr16
xchg
pop
add
add
xchg
popa
and
add
add
out
mov
inc
xchg
add
add
add
lea
add
add
aaa
mov
xchg
add
add
add
add
push
jae
pushf
cltd
mov
and
push
adc
add
jl
stos
mov
mov
cmc
cld
push
lods
jge
mov
add
into
imulb
sti
cli
xchg
mov
inc
mov
inc
jo
les
es
js
pop
test
xor
adcb
nop
nop
nop
nop
test
inc
cmp
jg
ja
push
cld
jno
jecxz
into
cmp
pop
jno
or
add
add
into
test
add
add
add
jo
call
pop
lods
or
add
add
pop
push
movsl
adc
push
mov
test
stos
xchg
sub
rcrb
pusha
arpl
mov
xor
mov
push
sub
push
jge
je
sub
add
pop
xor
and
dec
push
or
aad
mov
xchg
lock
lock
scas
pop
subl
inc
mov
addr16
adc
mov
add
push
inc
push
lock
popl
mov
mov
sbb
add
ss
movsb
xor
sub
test
out
ss
lds
testb
and
add
mov
mov
add
add
push
das
fldt
sbb
add
scas
sub
int3
int3
int3
int3
int3
mov
adc
add
add
xor
sub
cmpl
add
add
add
jmp
ffreep
mov
add
add
add
cmc
fistpll
mov
sahf
push
scas
mov
inc
aad
ljmp
add
add
inc
pop
shll
add
add
xchg
divl
mov
inc
cmpsl
jl
adc
loope
add
outsl
push
xchg
push
mov
in
jecxz
cmp
mov
stos
out
add
add
jne
bound
add
add
add
add
add
sub
fwait
stos
mov
xchg
push
mov
loopne
or
add
add
add
add
add
andb
jecxz
xchg
mov
add
daa
and
sbb
insb
push
rcll
pop
fimull
add
add
add
add
add
add
add
add
push
xor
std
enter
loop
shl
loope
add
aam
mov
adc
out
inc
arpl
jecxz
lret
or
add
add
xchg
xchg
push
push
and
cs
xor
cmp
add
test
gs
jnp
push
xchg
dec
dec
sbb
xchg
lea
xchg
movsl
arpl
xchg
or
add
add
ljmp
inc
add
add
add
sbb
add
fisttpl
add
add
add
xchg
mov
sbb
cli
stc
call
mov
imul
add
out
stos
mov
imul
add
cmp
add
add
xchg
add
add
cwtl
inc
lods
fmull
enter
lret
out
pop
stos
push
in
rcrl
es
adc
add
pop
addr16
ds
nop
nop
nop
nop
ucomiss
jnp
cltd
pop
lock
add
mov
scas
cmp
add
xchg
fcompl
cwtl
inc
popa
cmp
inc
sbb
add
ficompl
mov
add
add
add
xchg
adc
out
add
call
les
in
or
cmp
cld
xor
push
stos
lret
inc
xchg
rcl
shl
inc
lret
sbb
les
jns
jno
mov
xchg
add
add
test
jmp
mov
das
fildl
add
add
or
cmp
mov
idivb
ss
add
add
call
xor
int3
int3
int3
int3
int3
dec
aas
imul
negl
pusha
push
cmp
cmp
orl
add
nop
nop
nop
nop
out
add
add
adc
add
add
pop
lods
mov
daa
cmpsb
shl
dec
cs
push
inc
shl
mov
add
jle
stos
jbe
ds
sbb
add
add
add
add
add
add
add
gs
movsb
jb
into
inc
inc
mov
aaa
icebp
cld
leave
jae
clc
sbb
loope
jnp
push
push
mov
push
ret
ret
stc
xor
das
cmp
add
add
jae
add
add
sahf
frstor
ja
outsl
test
andb
jo
movsl
dec
ljmp
dec
in
mov
icebp
adc
sbb
adc
add
add
test
jmp
pop
push
rolb
jne
add
add
movb
add
add
sahf
push
adc
push
imul
add
add
loope
aaa
adc
inc
jmp
push
mov
dec
cmp
aaa
add
add
adc
sarl
pop
pop
mov
mov
mov
dec
iret
sbb
mov
mov
cld
je
mov
ds
fimull
ret
out
mov
loop
inc
loope
add
add
sbb
cmpsb
mov
ret
mov
paddd
sub
fsubp
cmp
dec
xchg
dec
sti
fwait
xor
into
push
pop
push
add
add
add
add
add
sbb
mov
add
add
xchg
call
int3
int3
int3
int3
int3
push
adc
add
add
out
pop
cmp
aad
les
pop
xchg
mov
adc
ds
fsubp
dec
nop
nop
nop
nop
nop
jge,pt
pop
and
lret
push
xchg
lods
loopne
or
add
add
sarl
xchg
add
add
add
xchg
jo
xor
push
rcrl
adc
hlt
mov
out
fisubs
mov
sub
jl
pop
inc
mov
mov
add
push
xor
sbb
add
fwait
xchg
jg
aam
and
je
inc
add
leave
popa
mov
fnstenv
int3
int3
int3
int3
lods
sub
add
add
fstps
sub
add
add
add
push
xchg
stos
fadds
xchg
and
add
add
add
add
add
add
add
jnp
add
add
and
call
aad
sti
lods
xlat
stc
das
iret
iret
inc
fcompl
sti
fildll
aam
or
add
add
pop
aaa
gs
sbb
inc
mov
leave
pop
loop
or
cwtl
pop
mov
cmp
out
sldt
cmp
cmp
mov
addr16
ds
add
add
je
jge
int3
int3
int3
int3
ret
inc
or
add
add
loope
pop
jo
js
jp
mov
loope
cmp
add
outsb
aas
loope
aad
insl
cmc
and
jns
jl
je
or
and
add
jmp
push
lret
add
add
jmp
jbe
jge
add
rcr
mov
insl
dec
scas
jecxz
mov
addr16
cmpsl
shll
add
and
adc
add
cmpsl
shrl
jb
mov
jne
pushf
jbe
scas
loop
cld
and
loope
add
adc
fdivl
fisttps
add
cmp
inc
ja
int
imul
mov
and
adc
nop
add
xchg
dec
lret
dec
inc
jg
sub
add
add
sub
std
mov
add
add
arpl
scas
pushf
int
call
dec
or
pop
add
add
dec
pop
add
add
add
fmulp
inc
mov
dec
or
add
add
shrl
add
add
add
push
hlt
sub
insb
cli
loop
or
add
add
add
fcomps
lods
cmovl
mov
insb
cmp
pop
sbb
int3
int3
int3
int3
int3
aam
push
and
add
add
add
test
jp
nop
nop
nop
nop
xchg
rclb
or
add
push
add
add
add
sbb
test
nop
nop
fnsetpm(287
cwtl
int
subb
adc
push
testb
cmc
mov
add
add
add
adc
jne
nop
nop
nop
nop
nop
mov
xor
iret
stos
les
inc
repz
ficoml
add
cmp
add
sahf
xchg
clc
pop
xchg
adc
xor
into
xchg
call
data16
add
add
pop
in
mov
rdpmc
inc
aam
sub
and
lahf
xor
cmp
xor
mov
loop
das
loopne
xchg
mov
decl
add
subb
inc
mov
xchg
and
insl
mov
scas
push
loope
sbb
outsl
ja
cmc
push
rorb
add
add
dec
faddl
add
add
popf
pop
add
add
lock
sub
sbb
test
adc
inc
or
add
add
add
add
push
pushf
mov
pop
add
add
cld
adc
ds
pop
xor
sub
and
push
adc
add
add
fildl
add
add
cmpsl
daa
adc
dec
xor
sub
arpl
subl
or
add
add
sub
es
scas
clc
sar
int
cmpb
add
add
lahf
xor
add
push
psrlw
mov
xchg
xor
in
pop
add
add
add
fwait
sub
push
add
add
add
add
add
rorl
aaa
rcll
int
aaa
orl
xchg
sarl
sbb
shll
add
mov
mov
loopnew
push
leave
daa
popa
cmpsl
cmp
add
xchg
test
adc
add
add
pop
push
test
add
add
add
scas
push
addr16
mov
shl
addl
or
add
add
inc
in
pop
or
add
sbb
lret
push
out
jp
repnz
add
sbb
add
popa
mov
cmc
aaa
adc
jb
xlat
cld
xchg
xchg
dec
add
add
add
push
insl
push
push
or
add
add
add
add
sub
cmp
mov
push
in
shl
arpl
xlat
and
test
arpl
aad
arpl
in
cmp
ss
add
add
imul
push
pop
xor
out
inc
xchg
shll
or
add
add
push
cmp
add
fwait
pop
into
ss
add
add
add
add
mulb
popl
inc
jne
iret
loope
mov
jl
cli
jno
cmpsl
mov
js
fsub
mov
add
in
arpl
cmp
fwait
mov
repnz
xchg
cmp
adc
cmp
clc
aas
shll
dec
scas
stos
fs
push
mov
add
add
jae
in
mov
sub
addr16
hlt
out
pop
repz
jne
mov
insl
loope
cltd
add
add
push
fistpl
inc
add
add
fwait
pop
pop
add
add
filds
add
add
add
add
add
cmpb
out
aad
add
js
mov
test
arpl
or
add
add
insb
pop
add
add
je
mov
out
ja
add
adc
cmp
and
leave
and
add
add
cmp
and
and
mov
mov
push
and
dec
insb
push
aam
xor
lahf
mov
das
insl
adc
and
add
push
mov
int3
int3
int3
int3
pusha
sub
int
out
mov
dec
imul
add
push
dec
push
loope
add
add
push
cmpsb
lods
fs
mov
loopne
push
mov
pusha
xchg
jns
dec
ljmp
push
or
jnp
jmp
loop
and
out
neg
rolb
add
add
add
lret
int3
int3
int3
int3
int3
mov
out
shlb
inc
ret
mov
jecxz
jg
cmpsb
inc
dec
sbb
mov
cli
sbb
or
add
in
mov
scas
pop
add
call
lret
jl
mov
mov
aam
add
lds
push
xchg
lcall
add
add
add
lret
das
dec
push
cld
mov
push
sbb
test
lods
dec
fs
imul
dec
add
push
push
insb
cmp
popf
sbb
jle
xchg
fimull
push
pop
enter
xor
xchg
loope
out
jmp
out
mov
mov
xor
jp
sbb
lock
mov
sub
std
aas
in
loopne
pushf
and
bound
cs
fldz
push
dec
movsl
sarb
shrb
daa
or
add
add
loopne
push
cwtl
test
jl
sub
setg
push
scas
mov
xor
sbb
pop
cmpsl
add
add
add
pop
mov
adc
xlat
cmp
sub
xchg
push
add
add
mov
pusha
out
mov
dec
sbb
mov
pop
imul
add
add
mov
xchg
add
cs
push
add
add
jmp
int
sub
addr16
dec
hlt
adc
jns
enter
sub
test
cmc
outsl
and
and
insl
and
adc
ljmp
push
add
add
xchg
mov
out
add
add
add
lret
into
sldt
xchg
js
rcll
pop
add
add
push
xchg
ds
add
or
add
add
add
add
shlb
jne
pop
adc
or
xchg
cmp
rol
cmpsl
sub
popa
lods
adc
shlb
cltd
and
arpl
inc
or
add
add
negl
add
add
push
ret
push
jo
and
ljmp
jno
xchg
push
sbb
mov
dec
loope
xchg
sbb
add
add
cmp
nopl
add
mov
lds
sbb
dec
mov
int3
int3
int3
int3
daa
movsl
xor
shlb
or
xchg
and
sti
arpl
fs
add
iret
cwtl
mov
sbb
add
xchg
xchg
jbe
jle
jge
testb
dec
cs
push
ljmp
pop
or
add
add
or
lds
outsb
jo
sub
adc
jp
jp
sti
std
or
add
add
repnz
or
add
add
js
rcr
add
add
leave
sub
or
addr16
add
add
lcall
cmp
add
fwait
jg
lcall
mov
out
into
pop
mov
mov
jmp
adc
lret
adc
mov
inc
das
pop
or
add
add
mov
cmp
add
add
mov
pop
xorb
mov
in
jle
or
add
add
lods
jae
inc
les
mov
jge
xchg
fildll
sbb
pop
add
add
add
mull
inc
cmp
jg
ss
push
bound
push
jne
adc
jo
cmp
jb
mov
inc
sbbl
or
add
add
jmp
rorl
xchg
add
mulb
repz
add
add
add
mov
mov
mov
fwait
cmp
notb
das
rcll
ret
ret
lret
loopne
or
add
add
imul
add
add
jmp
and
xlat
dec
xchg
adc
pop
xchg
outsb
mov
sbb
push
inc
xor
add
dec
dec
in
push
clc
jne
jns
add
add
add
idivb
xchg
jecxz
mov
dec
mov
test
test
sub
add
call
pop
lahf
adc
mov
or
add
add
into
sbb
in
cmpsl
lds
add
mov
xorb
pop
lods
pop
cld
popa
mov
mov
push
popa
adc
add
cli
adc
lds
push
add
add
add
sub
imul
out
add
movsl
inc
xorl
add
push
sbb
jo
dec
push
sub
push
push
mov
es
pop
jl
ds
or
add
add
imul
add
add
dec
xor
arpl
sbb
ffree
aam
shrl
or
add
add
adc
add
pop
ret
js
mov
repz
or
add
add
push
in
imul
add
out
lods
jecxz
mov
or
add
add
test
mov
add
add
add
add
add
and
fisubl
loop
adc
or
lods
push
cmc
cli
mov
mov
jge,pt
xchg
stos
repnz
add
add
fs
mov
add
add
add
add
add
cld
jae
ret
mov
pop
add
add
add
add
add
outsl
jb
mov
jmp
cmp
add
repnz
daa
jns
sbb
iret
ss
xchg
imul
inc
mov
xchg
inc
lahf
sbb
add
les
outsl
inc
cwtl
cwtl
cltd
lea
out
std
sbb
add
rolb
jg
pop
sarb
pop
mov
add
xchg
sbb
add
add
add
jl
push
or
add
add
mov
in
repz
xchg
inc
pushf
add
add
add
xchg
jo
add
add
gs
dec
jmp
adc
and
outsb
pop
out
es
and
lea
movsl
repz
cmpsl
repz
xor
inc
push
movsb
frstor
int
add
add
add
dec
iret
mov
bound
xchg
xor
jne
in
shl
and
sub
adc
je
lods
int3
int3
int3
int3
int3
pop
add
add
outsb
mov
pop
add
add
out
inc
xchg
mov
inc
jno
xchg
lcall
add
fcmovbe
and
imul
push
add
push
lods
fwait
cs
fwait
mov
sbb
icebp
leave
jge
mov
insl
xor
call
aad
inc
cmovbe
add
fldcw
into
mov
mov
inc
xchg
adc
add
add
mov
aad
neg
shl
ja
or
add
add
leave
and
add
add
add
mov
add
nop
nop
nop
nop
xor
lret
pop
js
jle
lahf
cli
rolb
add
add
flds
popa
adc
add
sbb
add
jnp
and
xor
std
jle
fists
and
add
add
xchg
cmp
sbb
add
add
leave
or
add
add
inc
std
sub
pop
add
add
in
ficoml
sahf
movsl
dec
and
add
add
nop
nop
nop
nop
nop
repnz
add
add
stos
push
adc
pop
add
add
test
add
add
add
add
add
stos
les
jg
jnp
jae
mov
and
add
add
xchg
test
dec
add
add
add
and
mov
in
mov
add
test
add
add
add
add
add
lods
mov
add
add
add
push
pop
add
push
add
add
bound
xchg
mov
sub
aad
imul
add
pop
inc
clc
or
add
add
pop
adc
push
cmp
daa
mov
adc
test
mov
add
add
xchg
mov
js
xchg
and
in
cmp
xor
popa
enter
das
cwtl
adc
movmskps
ljmp
inc
xor
add
add
jp
popf
add
add
add
inc
lods
cld
or
add
add
push
fdivrs
incb
xor
cmpsb
ljmp
sti
xchg
jl
loopne
mov
and
push
lret
fmul
loopne
rcrl
push
inc
loope
cwtl
or
into
pop
push
add
add
inc
cmp
inc
insb
fcomps
jmp
scas
lods
and
pop
add
add
add
ret
dec
pop
xor
push
sbb
cli
repz
sarb
sbb
mov
or
imul
mov
jno
sar
sub
pop
call
test
push
test
cmp
add
add
pusha
call
lds
mov
mov
into
jne
mov
fwait
pop
mov
imul
add
add
xor
call
inc
arpl
arpl
lret
es
jbe
inc
dec
test
xor
xchg
xchg
shll
testb
add
add
or
add
add
sahf
and
pop
jb
inc
push
out
cmp
out
adc
jge
mov
mov
add
add
cmpsl
arpl
sub
repz
addr16
inc
inc
in
xchg
lret
add
add
push
aas
xchg
push
jb
add
add
imul
shlb
nop
dec
xor
or
xchg
cmpsl
sub
xchg
in
in
add
scas
jno
adc
add
add
add
pop
mov
rcll
daa
jne
xchg
into
add
add
add
bound
inc
xor
sbb
lds
dec
les
dec
add
add
add
mov
pop
test
call
dec
ret
push
outsb
ficoms
je
add
add
add
add
dec
pop
lret
jg
pop
inc
adc
or
fsubl
add
add
adc
divb
fistl
adc
push
mov
ja
iret
mov
lret
adc
repz
inc
in
ja
jb
icebp
cmp
js
test
int3
int3
int3
int3
mov
pushf
or
add
add
loop
outsb
sbb
add
cli
adc
add
cld
add
cmp
test
cwtl
cmp
sub
add
add
add
ljmp
xchg
pushf
and
ret
addl
js
mov
push
add
add
mov
push
push
stos
cmp
push
sbb
ja
movsl
imul
add
add
int3
int3
int3
int3
mov
add
add
dec
ds
popl
roll
mov
call
xor
xchg
pop
cmp
push
jge
gs
arpl
jns
xchg
sldt
les
add
add
add
ss
popf
push
push
add
add
std
pop
dec
clc
loope
cmp
add
add
dec
loop
xchg
add
add
push
add
add
in
dec
pop
ja
gs
push
add
cmp
call
ret
xchg
cmp
add
mov
xchg
ret
in
dec
mov
enter
add
add
pushf
jl
pop
lret
test
andb
popa
mov
sub
mov
cmp
cltd
cmpsb
xor
pop
add
add
xchg
sub
in
and
sub
sbb
aas
lahf
es
jecxz
test
out
pop
adc
add
add
hlt
fnsave
mov
aas
xchg
add
add
fiaddl
add
add
bound
movsb
mov
add
add
inc
inc
loop
push
push
add
add
jecxz
add
add
or
add
add
jle
push
cmp
xor
xor
test
add
sub
push
cmp
fbld
jns
add
add
mov
lds
xor
add
mov
dec
into
rep
push
push
jmp
cmp
out
out
imul
int3
int3
int3
es
mov
dec
mov
scas
mov
movsw
ljmp
add
add
cmpsl
ror
push
sub
pop
mov
cwtl
mov
mov
sbb
sbb
jne
daa
lret
leave
add
add
add
pop
adc
and
add
jp
mov
and
xor
xor
leave
mov
pusha
std
dec
sub
aam
push
push
jg
add
add
add
jmp
sbb
add
add
cmp
roll
push
int3
int3
int3
int3
int3
add
add
add
jno
xor
jmp
rcrb
add
pushf
in
jmp
add
add
dec
add
add
add
lea
loopne
imul
add
adc
dec
mov
idivb
aam
shlb
dec
test
call
sbb
sbb
pop
je
imul
stos
mov
add
lahf
lret
dec
inc
dec
xor
and
add
add
rol
or
add
add
jge
imul
or
add
add
ljmp
add
add
jle
in
mov
je
hlt
add
add
add
dec
es
lods
push
imul
and
mov
dec
xchg
push
fistps
push
jecxz
mov
add
add
add
cltd
movsb
push
cli
pop
and
add
add
aas
pop
aas
mov
add
inc
int3
int3
int3
int3
int3
test
mov
push
mov
or
add
add
mov
in
inc
mov
adc
outsl
dec
mov
xchg
lods
loop
add
add
mov
pop
scas
or
mov
mov
ret
push
cld
adc
int
adc
sub
add
add
rolb
or
add
add
popf
mov
push
and
or
add
add
cmp
sti
or
lret
leave
pop
shlb
add
add
add
popf
outsb
sbb
cwtl
xchg
inc
and
ljmp
enter
mov
add
inc
jmp
push
cmp
mov
aam
ficompl
sti
imul
clc
pop
inc
mov
add
add
inc
xor
popf
pop
lock
gs
shll
jb
jg
push
popa
lcall
bound
inc
test
pusha
push
andl
insl
xchg
roll
out
mov
repz
insb
call
lea
add
dec
sub
mov
add
ficompl
out
cmp
cld
bnd
cld
sub
add
add
arpl
push
or
add
add
add
add
adc
push
push
loopne
and
xchg
sbb
lods
adc
sub
push
call
cmp
add
insl
adc
add
add
ret
fmulp
add
add
add
sahf
mov
cli
aad
ds
xchg
and
add
add
loop
add
add
add
add
add
mov
dec
psraw
push
push
lahf
out
xor
adc
stos
mov
icebp
mov
add
add
push
mov
xor
cmp
add
pop
add
add
mov
inc
add
add
fstpl
daa
shrb
in
sbbb
ljmp
pusha
repz
roll
jp
lds
add
add
ret
xor
pop
sbb
int3
int3
int3
int3
mov
adc
mov
cmp
add
or
add
add
sbb
les
xor
xchg
jp
sti
movsb
sub
sub
call
or
fistps
sub
rcl
cwtl
fcoml
jmp
mov
mov
pushf
fimuls
xchg
into
pop
xchg
jbe
stc
imul
add
add
xchg
icebp
mov
cmpsl
jmp
cwtl
pop
sbb
add
add
xor
into
or
pop
dec
cmp
daa
add
xchg
xchg
testb
add
add
stos
push
add
add
in
or
add
add
adc
aaa
push
jno
test
dec
cmp
in
and
addb
sbb
dec
jae
test
or
pop
or
cld
jo
mov
add
or
add
add
sub
xor
add
add
add
faddl
add
add
cs
stos
push
lods
cmp
das
xchg
push
std
lds
push
fcom
imul
leave
push
imul
jb
arpl
rsm
out
fwait
xor
sub
xchg
xchg
pusha
fidivrs
push
lret
lea
mov
movb
add
add
pop
rcrb
mov
movsb
cli
cld
jp
popf
imul
rclb
mov
imul
data16
lock
add
add
add
mov
cmp
and
movsb
xor
add
pop
call
lods
mov
jns
enter
pop
nop
nop
nop
nop
nop
test
ljmp
add
mov
xlat
cmp
sahf
add
add
add
dec
xchg
cmp
add
add
std
mov
pop
mov
and
andl
cmp
add
add
add
xchg
jo
nop
nop
nop
nop
mov
cmp
loop
pop
lods
into
xor
leave
xor
jnp
filds
mov
call
pop
add
add
pop
cli
xchg
jle
xchg
fwait
int
repz
cmp
dec
push
inc
mov
mov
lret
jbe
dec
mov
and
roll
add
add
clc
test
mov
addb
add
add
or
add
add
xchg
jg
test
sbb
pop
cmp
imul
fucomi
push
add
cmp
add
fcoml
dec
mov
scas
mov
inc
je
adc
test
add
add
pop
clc
pop
push
test
cmpsb
push
xchg
sarl
movsb
ret
mov
push
mov
sub
xchg
js
push
out
lods
dec
fs
insl
popa
cmp
scas
mov
lods
invd
add
add
or
add
add
jbe
xchg
xor
add
sub
add
test
dec
jle
add
add
jae
add
add
mov
jb
mov
fcoml
shlb
cmp
inc
and
dec
sbb
or
add
add
int3
int3
int3
int3
int3
ror
inc
xchg
leave
lahf
cmpsb
xchg
out
mov
lahf
add
add
add
pop
mov
mov
mov
or
add
add
popf
fs
inc
test
and
or
add
add
add
add
add
nop
nop
nop
nop
mov
inc
mov
popa
cmp
rclb
out
mov
inc
xchg
add
add
add
pusha
mov
push
clc
or
add
add
adc
dec
xchg
add
add
add
pusha
dec
pusha
test
jne
push
mov
cli
or
add
add
xor
inc
fistpll
jg
jbe
out
cld
ret
adc
sbb
add
add
arpl
repnz
push
dec
imul
add
mov
data16
data16
pop
xor
sub
pop
add
push
jmp
adc
push
cmp
dec
in
sub
dec
xor
hlt
popa
mov
push
out
push
add
add
pop
add
add
xchg
xor
test
fadds
add
add
out
mov
pop
sbb
push
and
mov
add
add
sub
fnstenv
in
out
adc
xchg
dec
push
outsb
xor
add
add
ss
sub
aad
daa
or
add
add
jbe
sbb
add
dec
dec
pop
ss
mull
sbb
fucom
and
add
test
fistl
add
in
cli
adc
jle
push
dec
nop
nop
nop
nop
nop
mov
xchg
stc
xchg
in
push
cmp
les
add
push
pop
inc
push
dec
in
sub
mov
xchg
sub
sbb
sahf
jbe
xchg
shlb
fwait
add
add
add
cltd
arpl
loop
pcmpgtw
cli
inc
push
and
add
fs
scas
mov
rolb
push
or
add
add
into
cwtl
dec
xchg
js
pop
add
add
aaa
jecxz
and
pop
hlt
mov
push
mov
test
pop
push
add
out
add
or
add
add
add
mov
lds
sbb
add
stos
enter
ds
mov
out
xor
iret
mov
ret
mov
testl
xchg
lcall
mov
mov
movsl
in
sub
nop
nop
nop
nop
nop
rcl
imul
add
dec
cwtl
sub
add
add
sub
dec
adc
lock
ljmp
mov
cmpsb
cwtl
data16
jmp
dec
bnd
data16
out
das
int
mov
lahf
xor
add
add
test
sti
cmpl
xor
add
add
add
stos
enter
add
inc
sub
jge
fidivrs
ret
adc
add
add
add
adc
xor
xchg
inc
and
add
add
add
add
add
scas
pop
push
add
add
add
cmovl
das
sahf
fiadds
add
add
cmc
setbe
lods
pop
push
push
in
ljmp
or
add
add
insb
nop
nop
nop
nop
nop
lahf
popf
adc
add
add
mov
insl
pop
pusha
sub
pop
je
xchg
aas
cmp
push
add
add
stc
or
add
add
enter
jge
int3
int3
int3
int3
inc
loopne
rolb
add
push
pop
or
inc
ljmp
jmp
out
cltd
and
test
add
add
mov
test
add
sub
imul
ja
pop
sub
add
add
and
call
fcoms
nop
nop
nop
nop
es
loop
xchg
mov
lea
add
pop
pop
fdivrl
add
add
or
mov
adc
xchg
lock
loopne
sbb
movsb
xor
bound
add
add
adc
pop
bound
and
add
adc
pusha
scas
mov
add
add
cmp
and
fcmovnu
push
pop
add
add
add
fildll
cld
hlt
mov
int
gs
je
in
std
push
add
add
add
add
add
add
sbb
std
in
sub
into
xor
ja
mov
add
add
loopne
sub
nop
nop
nop
nop
mov
insl
inc
mov
add
add
mov
popa
hlt
ja
cld
mov
add
add
add
out
lods
popa
jge
dec
mov
loope
xor
popa
repnz
pop
cld
pusha
mov
sbb
pop
or
movsl
or
adc
repz
aad
fimuls
xchg
sub
pushf
insb
shll
and
and
xor
xchg
or
add
add
mov
dec
in
and
xor
jle
mov
xchg
jmp
leave
mov
movsb
test
aas
cld
mov
mov
ljmp
call
arpl
push
bound
add
add
pusha
outsl
cmp
rclb
lods
push
pop
xor
mov
out
add
add
cmp
add
add
add
xlat
psrad
loop
divb
push
push
fs
push
mov
movsl
fbld
push
push
or
add
add
push
xor
xor
sub
rcrw
jo
mov
adc
ljmp
add
add
dec
xchg
leave
inc
test
iret
stc
cmpsb
inc
aas
and
or
add
add
rcrl
std
shl
xchg
add
sti
push
add
add
pop
add
add
lods
pop
out
ljmp
dec
xor
aas
negb
int3
int3
int3
int3
rorb
mov
cmp
xor
fisttps
add
add
out
inc
arpl
add
nop
nop
nop
nop
nop
push
dec
lahf
ljmp
