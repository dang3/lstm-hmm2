sbb
add
mov
xchg
movsl
inc
call
sub
push
jmp
fsubs
mov
repz
add
fimuls
lods
sahf
add
rorb
add
add
xor
dec
push
repz
pop
or
pop
movb
push
jge
inc
shrb
insb
pop
aad
call
je
pop
lret
mov
mov
imul
mov
stos
mov
mov
ret
cltd
xor
jmp
aam
lock
repz
mov
inc
cmpsb
cs
inc
adc
dec
jmp
dec
and
xor
std
sbb
push
fs
sbb
loope
mov
jp
roll
aaa
pushf
das
es
aas
dec
fwait
sub
lds
xchg
insb
dec
push
popa
pop
xchg
or
add
adc
xor
adcl
dec
push
cmpsb
fisttps
sbb
fisubl
leave
push
bound
shll
xchg
pop
push
adc
mov
mov
xchg
nop
call
scas
mov
cmpsl
cmc
stos
mov
push
cmp
dec
icebp
ficoms
ret
repz
mov
mov
es
pop
inc
or
mov
std
mov
ljmp
out
cmp
lahf
pop
fistps
mov
into
cli
in
mov
add
stc
xor
icebp
push
es
pushf
jp
pop
adc
aas
jp
clc
je
jno
mov
idivb
rcll
cli
sahf
cmpsb
inc
xchg
imul
insb
adc
test
adc
or
jmp
icebp
mov
and
scas
aaa
cmp
aaa
pop
into
mov
push
inc
xchg
pusha
add
adc
pop
mov
mov
pushf
std
lods
ret
iret
divb
add
dec
adc
hlt
fstps
jns
mov
xor
call
push
cs
loope
or
mov
sahf
pushf
sub
idivl
sbb
fisubs
xor
dec
dec
xor
and
lods
mov
je
xor
test
mov
lds
mov
mov
adc
cmpsl
adc
jns
mov
mov
pop
cmpsl
leave
in
mov
and
bound
sub
and
loope
jp
out
nop
cmpsb
adc
inc
xchg
mov
xchg
pop
sub
in
add
out
xor
inc
pop
in
push
insb
cli
daa
cmp
mov
iret
cmp
push
xor
jne
stos
nop
sub
mov
loopne
sub
imul
test
fmull
out
mov
fnstenv
xchg
aad
js
rorl
arpl
cld
mov
inc
mov
pop
xor
sarl
outsb
sbb
xor
hlt
test
adc
js
int3
push
mov
ss
xchg
sub
iret
in
jbe
dec
add
dec
cmp
outsl
dec
mov
and
cmpsl
andl
pop
ds
pop
cli
mov
pop
repnz
sti
cmpsl
lods
xor
fisttpll
inc
jp
sub
dec
jno
sub
lret
jp
out
nop
xor
mov
sub
cmp
mov
hlt
ret
or
movsl
arpl
jmp
add
int3
and
negb
sbbb
cmp
jge
inc
adc
popf
push
lds
outsl
or
xor
sub
ljmp
xchg
add
push
xor
pop
rolb
fsubrl
in
jbe
sti
sarb
pop
push
les
and
sub
add
stos
js
push
mov
or
outsl
dec
inc
sti
push
jbe
cmp
test
orb
mov
aaa
mov
jmp
test
add
cs
jle
jo
xchg
xor
jmp
inc
xchg
mov
sbb
bound
in
cld
imul
daa
jle
mov
sbb
mov
dec
inc
iret
jno
fiadds
call
ljmp
in
adc
in
add
sti
subl
lock
aad
mov
fnstcw
cmp
popf
in
jl
sbb
xchg
sbb
mov
lods
xchg
into
pop
nop
ss
fildll
js
nop
xor
test
scas
negb
xchg
push
jl
mov
fadds
push
insb
shl
cmpsb
dec
inc
stc
pop
add
add
fiaddl
or
lds
jg
aam
leave
in
ljmp
jl
xchg
push
or
xchg
lret
xor
divl
push
cmpsb
out
stc
adc
inc
lahf
mov
and
loope
pop
inc
mov
mov
insl
xchg
cmp
repnz
test
mov
mov
orl
cmp
mov
mov
sub
fsts
in
insl
mov
xor
leave
jnp
sarb
xor
rcll
int3
cmp
lds
int
mov
sub
jge
mov
addr16
push
arpl
stos
fdivs
dec
cmp
mov
mov
sbb
xor
cwtl
data16
arpl
out
or
mov
out
mov
add
mov
data16
mov
mov
repnz
push
js
adcl
ljmp
ds
inc
adc
adc
dec
inc
js
rcl
pop
scas
mov
pop
jl
push
icebp
inc
xchg
push
xorl
test
xorl
les
pop
cs
lock
pop
ja
int
repnz
cmpsb
mov
mov
mov
jle
push
cltd
je
jno
aam
es
rcll
dec
loope
sub
mov
mov
repz
and
push
adcb
hlt
sub
andb
in
dec
add
ret
imul
rcll
negl
and
fstpt
or
testl
cmp
xchg
push
jbe
shr
repz
in
aam
push
mov
cmp
lahf
mov
les
ret
mov
lret
call
push
add
sub
ja
fs
icebp
adcb
jl
lock
sub
xor
mov
jb
pop
jnp
cmp
or
flds
pop
pop
iret
mov
test
mov
push
cmp
add
and
ret
lret
fs
push
sub
test
out
mov
mov
imul
adc
addr16
sarl
mov
stc
test
shlb
jmp
cmp
jge
out
ficomps
pop
scas
test
xor
fwait
daa
dec
call
mov
sbb
xchg
test
pop
mov
shlb
decl
pop
and
adc
or
shll
push
loope
cmp
jb
xor
pop
int
xor
inc
aad
sarl
pop
xchg
jnp
push
pop
sbb
cmp
and
adc
cmp
inc
pop
stos
loopne
dec
or
repz
dec
sub
mov
bound
daa
orl
lahf
out
xchg
mov
dec
mov
fcomi
imulb
pop
mov
sarb
ret
into
sarb
fsubs
dec
sbb
jns
cmp
push
mov
add
fsubp
sub
lcall
xlat
ret
xchg
iret
jmp
mov
sbb
add
out
sbb
dec
inc
in
je
adc
jnp
inc
push
inc
push
inc
jno
mov
mov
inc
out
stc
or
pushf
aam
into
cltd
sub
rcrb
sub
push
adc
adc
in
test
jp
negb
adc
xchg
and
mov
xor
sub
inc
or
add
fcmovb
fucomi
add
mov
je
nop
or
add
cmp
mov
mov
xchg
mov
lahf
pop
dec
pushl
in
pop
and
inc
xchg
data16
prefetch
cmp
sub
push
lods
roll
outsl
shr
movsl
xor
dec
mov
push
push
add
mov
loope
sub
cmp
std
lods
mov
insl
inc
addr16
jns
jle
mov
loopne
dec
icebp
mov
cmpsl
push
mov
icebp
push
xchg
or
call
dec
test
push
sub
imul
iret
add
xchg
and
sbb
ss
cli
popf
inc
cs
sahf
inc
pop
shrb
popa
nop
mov
scas
rcr
std
sub
add
push
xchg
lock
push
leave
jl
insl
add
adc
push
and
in
jbe
sub
push
outsb
xor
and
nop
faddl
pushf
lock
outsl
pop
jmp
xchg
fsub
cmp
gs
dec
adc
cltd
pop
dec
inc
sbb
lcall
loope
mov
rcl
jae
popa
mov
sub
lea
notb
stos
jo
and
lret
jle,pn
shl
mov
xchg
xchg
mov
movsb
daa
xchg
cmp
dec
in
ja
in
mov
cli
std
dec
pop
push
test
add
inc
or
mov
hlt
popf
sub
gs
aas
sbb
and
push
mov
lds
sub
sub
aad
cmp
jae,pt
cli
pop
bound
push
fcoml
out
mov
adc
mov
lods
push
sti
mov
lock
pop
push
lods
mov
adc
pop
dec
push
dec
jecxz
int3
or
xchg
xlat
push
add
mov
loope
pop
dec
adc
push
pusha
aad
push
and
xor
int
std
pop
dec
mov
xchg
jo
jmp
cmpsb
and
adc
cmp
jle
cmp
in
lods
scas
pop
jmp
inc
in
hlt
inc
cld
imul
iret
xchg
movb
jns
and
movsl
or
mov
jle
and
shll
lock
lcall
mov
loope
and
les
sub
jae
push
in
xor
das
mov
add
xchg
lahf
test
xor
xchg
in
call
jae
xchg
xchg
sub
jmp
cmp
repz
dec
xchg
rclb
mov
mov
push
movsl
jb
push
pop
jns
movsl
pop
icebp
shlb
dec
clc
adc
lret
mov
inc
inc
xchg
dec
jno
out
xor
sbb
aam
out
inc
ljmp
scas
mov
cmpsl
jp
fdivrl
lds
lods
dec
mov
fbstp
sub
call
sbb
push
js
xor
ss
cmp
jmp
std
mov
xchg
sub
ss
push
imul
mov
aaa
pop
jb
inc
cmp
loope
popf
scas
iret
outsb
add
loopne
in
or
xchg
sub
jns
xchg
mov
or
scas
cmc
mov
dec
pop
jne
xor
hlt
mov
cmp
leave
in
rcrb
push
mov
jle
mov
jmp
aas
daa
mov
dec
push
or
cmpsb
iret
test
sbb
xchg
dec
cmpsb
lods
enter
mov
jle,pn
aam
aaa
jmp
or
jmp
push
mov
add
scas
movups
mov
or
pop
fmul
es
cmpl
int3
imul
test
enter
inc
movsl
bound
jno
add
xchg
lret
pop
popf
and
rol
mov
loopne
test
aas
mov
test
arpl
imul
dec
pop
leave
and
mov
mov
popf
inc
lds
test
out
lods
les
in
sub
std
scas
cmpsl
int
add
scas
dec
xchg
xchg
sub
lods
jecxz
scas
and
insl
and
xchg
gs
cli
insl
scas
mov
mov
and
stos
sbb
sarl
xchg
enter
rolb
les
inc
repnz
push
add
movsb
or
sbb
sub
jne
call
dec
mov
sbb
ja
mov
or
mov
in
imul
das
pusha
mov
bound
adc
jmp
add
and
sbb
cwtl
sahf
xchg
push
xchg
cld
fadds
jne
fldt
ljmp
sbb
mov
jnp
mov
push
test
add
lret
mov
rolb
mov
mov
loopne,pt
pop
popa
push
loopne
movsl
or
adc
and
or
outsb
loopne
movsl
repnz
dec
outsb
movsb
mov
mov
xchg
push
jl
dec
and
mov
dec
mov
jb
mov
sub
test
inc
movb
ja
rorb
je
adc
mov
test
into
loopne
lret
clc
negb
lret
and
sub
out
xor
cmpsb
loopne
sbb
out
or
sub
lcall
shl
enter
sti
push
or
call
mov
subps
mov
sub
ds
inc
cmpb
pop
cmpsb
sarl
test
adc
es
shlb
adc
pop
sbb
out
cs
adc
xchg
pop
in
dec
xchg
mov
arpl
out
popa
dec
sti
pushfw
mov
and
push
inc
daa
xor
adc
cmp
aas
outsl
mov
into
and
xchg
jo
pop
into
pop
mov
push
sbb
and
xchg
jb
jl
lcall
out
inc
imul
data16
cmp
loop
scas
push
cmp
mov
mov
inc
scas
mov
in
and
dec
sub
popf
xchg
lcall
add
and
mov
and
into
sbb
aas
inc
adc
cmp
mov
xlat
les
pop
mov
xchg
hlt
or
inc
hlt
in
sub
cmpl
add
and
fldcw
roll
in
jno
scas
shr
mov
test
pop
lret
aam
call
inc
lcall
es
test
out
push
dec
push
test
xchg
scas
and
push
pop
jno
cmp
xorb
jae,pn
jo
pop
scas
adc
mov
jl
daa
or
mov
sub
leave
mov
dec
sbb
sub
xor
out
pop
push
daa
lret
jns
push
xchg
mov
mov
or
sbb
inc
aad
dec
mov
or
leave
inc
pop
pop
dec
call
inc
and
push
mov
call
pop
pop
sti
bound
and
jge
sub
inc
adc
fcoms
push
lcall
mov
cmp
mov
lcall
and
xor
in
xor
xchg
movsb
repz
repnz
push
sub
lods
lret
and
aam
repnz
icebp
rdmsr
xor
sub
cs
lods
inc
shlb
movsl
mov
imul
dec
inc
or
add
xchg
jns
pusha
ficompl
and
jg
outsl
out
shrb
ja
enter
add
push
xor
shrl
mov
or
pop
lds
or
aaa
cmp
mov
mov
lea
push
push
bt
out
adc
mov
lret
test
sbb
dec
xchg
insl
cwtl
mov
das
xor
mov
insb
nop
xchg
xchg
jb
test
push
mov
roll
push
ljmp
mov
clc
push
jne
mov
mov
jo
mov
das
mov
cmc
stos
mov
lea
add
mov
lea
inc
pop
jns
lods
or
es
lods
add
in
add
cmp
sbb
add
mov
or
mov
mov
adc
or
fwait
sub
push
cwtl
jp
sahf
inc
cmp
insb
scas
jmp
cli
add
push
scas
inc
mov
addr16
rcr
mov
pop
mov
js
xchg
jae
mov
jno
add
jnp
mov
jmp
cmpsl
or
mov
outsb
scas
pop
mov
inc
insl
xchg
mov
int
orb
xchg
aas
mov
int3
sbb
add
mov
mov
std
jl
dec
nop
cwtl
shrd
test
enter
push
mov
pop
ja
stc
movsb
dec
lock
mov
sarl
mov
pop
nop
push
mov
sahf
jne
in
ss
xor
mov
or
lods
mov
in
pop
imul
add
shll
fistl
push
pop
int3
test
cmp
inc
xor
mov
push
repnz
out
push
mov
jge
jnp
add
in
xlat
add
mov
dec
jae
pop
mov
lret
cmp
jns
adc
pop
jno
imul
jne
fdivr
jg
gs
in
pop
out
mov
dec
out
lock
or
jbe
mov
out
in
lea
cmp
and
inc
imul
dec
and
pop
test
fsts
mov
fisttpl
mov
add
insb
cs
inc
xor
cltd
jge
pop
in
and
cltd
das
sub
mov
mov
add
mov
lods
sbb
pop
inc
push
jg
mov
es
adc
movsb
pop
sbb
dec
int
les
lods
xor
mov
mov
icebp
inc
dec
rclb
jecxz
sti
mov
jge
addr16
outsl
mov
mov
sahf
xor
movsb
push
add
dec
push
push
add
int3
jg
mov
adc
fstpl
and
adc
rcll
or
icebp
mov
mov
add
cmp
test
or
adc
and
pop
pop
hlt
cltd
insl
clc
adc
xor
jg
and
sub
cmp
call
mov
xchg
mov
push
fstp
xchg
enter
mov
adc
ret
andb
hlt
push
xor
mov
dec
sub
leave
and
cmp
xor
loope
push
test
jp
cltd
sbb
nop
push
or
or
pop
cmp
jb
ret
xor
sub
xchg
dec
mov
stos
inc
idivb
jo
pop
jmp
test
mov
add
out
cmp
imul
enter
jne
ror
fldenv
xor
push
jecxz
les
jo
mov
int
xor
dec
inc
je
xchg
daa
dec
out
xchg
fcompl
pop
aas
mov
out
cmp
mov
shl
add
lret
ja
push
stc
cmp
lock
fwait
push
or
sub
stos
pop
das
in
mov
add
cmpsb
fndisi(8087
sti
unpckhps
mov
test
pop
ficomps
clc
in
clc
pop
lock
fidivl
stos
aas
add
or
gs
fucomip
sub
lods
sahf
test
in
in
popf
xchg
mov
mov
xorl
mov
lret
scas
and
movsl
mov
jg
lret
nop
scas
jge
sub
lret
test
pop
stc
mov
xchg
notb
fnstsw
sub
scas
push
lcall
cmp
das
push
mov
orb
or
into
call
mov
adc
sbb
aas
bound
and
inc
rcrl
xchg
fsubrs
mov
gs
push
rorl
xorl
jmp
xorl
cmp
mov
and
daa
jae
lcall
in
iret
sub
pop
out
inc
gs
test
jb
and
leave
mov
bound
je
dec
dec
add
dec
push
outsl
push
dec
int3
push
rorb
mov
scas
and
mov
and
jle
mov
mov
mov
shlb
movsb
mov
push
test
jecxz
enter
pop
call
adcb
int3
cmp
insb
mov
cwtl
ss
cli
push
outsl
jb
test
cld
sar
stos
cmp
pop
and
or
push
repz
mov
mov
icebp
xchg
ret
mov
scas
test
mov
aas
aam
adc
adc
inc
stos
adc
adc
fisubl
xor
shll
pop
and
fisubrl
addr16
jns
test
stos
loope
test
adc
xor
cmp
ja
mov
push
imul
cmp
loopne
lods
push
lret
insb
mov
repnz
pop
shll
movsl
vprotq
mov
cwtl
ljmp
mov
mov
and
mull
jl
inc
xor
mov
mov
mov
xchg
lret
or
rolb
popa
xchg
push
push
rclb
push
aas
imul
insb
mov
ljmp
lods
imul
movsl
push
in
fstl
fnsave
js
push
cld
rcll
adc
cmpsl
or
subl
das
add
mov
cmpsl
inc
mov
push
sbb
mov
jle
stos
pop
mov
stos
adc
pop
xchg
int3
xor
mov
cmp
cs
scas
add
sub
mov
xchg
js
es
jo
lret
or
pop
sbb
fcoms
adc
xchg
push
les
pusha
inc
ficompl
stc
fsts
shr
pop
mov
cmc
xor
mov
dec
add
popf
mov
insb
lods
mov
fsubr
out
jae
pop
pop
push
cmp
and
mov
sub
or
mov
pandn
inc
cmp
cmp
ja
cld
scas
jne
jbe
jo
lahf
push
outsl
out
xchg
or
adcb
leave
daa
nop
out
mov
pop
repz
stos
mov
stos
dec
add
loope
stos
call
inc
inc
mov
not
arpl
scas
lret
mov
jbe
movsb
movsb
subb
bnd
fsub
imul
aas
int3
cmpsl
mov
ss
and
stc
cmp
and
je
jmp
jnp
add
mov
ja
add
test
sbb
rol
popf
xchg
dec
pop
xchg
pop
pop
xchg
loop
pop
std
push
sbb
orl
enter
pushf
out
jns
inc
add
fsubl
fwait
push
dec
sbb
out
popf
lock
push
fmul
lea
aas
in
sub
mov
add
repnz
gs
and
mov
loopne
adc
mov
pop
test
sub
pop
mov
bnd
out
push
fs
mov
aaa
insl
bound
xchg
enter
shll
xchg
cmp
mov
adc
adc
sub
sub
cmp
loopne
inc
repnz
stos
push
bound
jno
xchg
insl
js
lds
cmp
push
les
xchg
lret
push
jns
sahf
jb
test
int3
xor
inc
jo
jae
sub
outsb
xor
test
scas
mov
dec
sub
cmp
push
lea
xchg
push
sbb
lret
mov
imul
gs
outsb
pop
push
mov
add
pop
icebp
pop
pop
push
cmc
jp
push
mov
cmp
or
imul
inc
not
dec
add
daa
mov
xorl
jge
mov
dec
ficoms
test
jnp
outsb
sahf
cmp
mov
addb
testb
test
punpckhdq
lret
addr16
inc
stc
push
cmp
into
mov
cmpsb
xchg
add
add
mov
mov
sbb
jo
insl
icebp
in
mulb
cmp
int
xor
jge
mov
xchg
mov
scas
mov
cmpsl
mov
pop
mov
inc
inc
mov
mov
and
jne
addr16
jp
cmp
lods
and
mull
dec
mov
outsl
outsl
pusha
arpl
repnz
fnstsw
mov
sahf
jg
das
rclb
jnp
jg
popa
loopne
les
add
cmp
dec
mulb
test
jecxz
stc
enter
sbb
sbb
test
scas
jp
test
adc
jbe
mov
sub
adc
js
outsb
push
inc
idivl
adc
mov
movsl
push
pop
mov
lds
cmpsb
lods
fnstenv
and
mov
mov
aad
mov
dec
xor
lods
addr16
rcrl
popa
lcall
mov
mov
mov
leave
fwait
rcrl
xchg
incl
out
cli
push
mov
and
mov
xchg
gs
mov
sbb
mov
or
repnz
xlat
dec
pop
in
cmc
fadds
adc
jne
test
mov
fld
xor
dec
mov
shl
sbb
sub
out
cmp
and
int
lret
and
jmp
movsb
fmuls
jno
lods
add
imul
es
dec
add
aas
jge
xchg
jge
rcrl
rcrb
push
leave
ficoml
mov
ja
xchg
adc
mov
shrl
add
add
bound
popa
lahf
shlb
mov
ret
out
jl
mov
push
cmp
hlt
rorb
mov
sbb
adc
outsb
cmp
addr16
les
add
hlt
xchg
jnp
sub
cmp
clc
cli
popf
or
das
push
lods
mov
xchg
sti
add
and
test
subl
pop
js
insb
push
push
pop
sbb
adc
bound
cs
jl
mov
mov
xor
out
mov
jg
lods
mov
and
xchg
push
pop
sub
negb
xchg
ja
shrl
jmp
sbb
fimuls
push
or
push
loop
cmp
and
sti
jnp
xchg
or
mov
data16
pop
int
sti
cmp
mov
jbe
adc
and
int
push
in
jmp
int3
aaa
cli
subb
pop
lret
or
cmp
shlb
lods
pop
dec
sbb
sti
or
push
lahf
sbb
dec
inc
movsb
stc
push
jmp
xor
push
enter
mov
or
push
loop
subb
lret
sbb
push
mov
enter
jmp
mov
add
aaa
in
outsb
mov
lcall
lock
adc
inc
pop
adc
jb
lods
idiv
mov
testb
test
cld
daa
pop
dec
arpl
xchg
mov
enter
aaa
mov
sub
fdivl
sbb
and
lods
pop
add
pand
pop
inc
ss
cmp
sub
stos
in
out
shrl
dec
cmp
test
test
pop
cmpsl
in
adc
mov
insb
or
cltd
aas
sbb
xor
cmp
cli
stos
add
mov
add
or
je
clc
push
ss
insl
xchg
mov
icebp
lods
xlat
mov
loopne
cmpsl
mov
sub
imul
imul
pop
call
loope
mov
xchg
gs
jmp
xor
pop
cmp
sahf
cli
sub
cmpsb
stos
and
sub
popf
nop
sub
je
loop
sbb
and
mov
adc
outsb
add
fcmovu
cmp
ret
mov
push
int3
into
cld
shl
loopne
lret
dec
bound
inc
jnp
shrl
data16
or
and
mov
mov
mov
lods
mov
inc
xor
int
jmp
adc
push
xor
outsl
xchg
add
test
xchg
add
sbb
test
icebp
rol
mov
sub
dec
out
pop
xlat
pop
divb
cltd
pop
push
or
js
popf
scas
lds
int
test
and
mov
add
fdivs
push
arpl
movsb
rorb
fistps
mov
xor
or
dec
test
lock
dec
movsb
pushf
cmp
pushl
push
fstpt
sub
jp
sbb
push
mov
in
in
mov
nop
jmp
cltd
fbstp
sti
fildll
out
mov
xchg
out
push
test
xor
jecxz
outsb
test
inc
sub
xor
sub
repnz
pop
orl
lods
cwtl
push
imul
pop
enter
sub
add
insl
js
std
xchg
cmp
push
push
push
ja
pushf
push
xchg
enter
cmpsl
push
xor
sbb
mov
mov
dec
xchg
pop
rcrl
xchg
icebp
movsb
jle
cmp
sti
outsb
mov
fadds
loop
xor
fnsave
bound
xor
sti
outsb
ret
mov
and
imul
mov
sbb
ret
repz
dec
cmpsb
ret
je
push
nop
mov
cmpsl
rcl
insl
stc
mov
fs
xchg
idiv
inc
or
mov
sub
sbb
aam
adc
mov
sbb
jmp
inc
lahf
js
adc
push
rclb
ds
sub
stc
insl
fnstcw
sub
test
and
dec
cmp
outsl
mov
sbb
outsl
ret
es
lods
stos
js
adc
xor
shll
pop
pop
inc
icebp
push
xchg
add
or
leave
add
xchg
sbb
test
cwtl
dec
jne
lret
cmp
sub
dec
cmovs
dec
enter
adc
mov
xor
mov
sbb
dec
mov
sbb
sub
push
sbbb
push
in
push
and
jo
cmp
stos
inc
push
int3
pop
hlt
lahf
shrl
add
sub
mov
or
jnp
xchg
jg
iret
inc
inc
ss
aad
nop
rcrb
test
and
js
sbb
push
into
movsb
mov
and
mov
je,pt
int
loop
sub
ret
or
push
je
push
jo
push
push
rcll
push
lcall
bound
lock
lods
sbb
jle
test
fsubr
in
in
daa
loope
stos
loop
ret
xchg
out
out
aaa
fisttps
xor
sub
inc
sbb
out
fiaddl
movsb
xchg
lret
add
jmp
dec
sub
aam
aaa
add
fcompl
lcall
fdivr
adc
xchg
outsb
mov
cs
arpl
lods
fcoms
popa
shrl
or
cmpb
cmp
mov
push
inc
dec
inc
ljmp
jbe
ja
sub
xchg
sub
push
fcompl
gs
pop
inc
push
push
aaa
cmp
test
outsb
mov
pop
ret
test
add
loopne
out
add
sarl
xchg
imul
and
mov
icebp
push
sbbl
sti
pop
cmp
sbb
ret
insb
cmp
xlat
scas
dec
lods
jl
in
das
cli
push
inc
movsl
test
cmp
inc
cmpsl
pop
adc
inc
or
das
dec
jns
mov
mov
jp
mov
push
jl
xorb
mov
sub
out
cmp
in
xchg
inc
mov
hlt
and
push
sbb
daa
cmc
pop
stos
shl
cld
enter
push
mov
test
clc
jecxz
jbe
movsl
dec
cmc
pop
push
shll
pop
int
cli
inc
sbb
mov
movsb
enter
mov
outsl
and
cwtl
and
fisttpl
xchg
lea
fistl
jnp
mov
inc
outsl
lahf
inc
push
jecxz
imul
pop
dec
aaa
pop
and
es
mov
fisttpll
xor
into
fimuls
cmp
outsb
mov
dec
xor
in
dec
ficomps
enter
pop
sub
sti
dec
mov
push
push
arpl
mov
dec
gs
sub
aam
repnz
lret
push
dec
int3
xor
sbb
rcll
pop
out
lahf
cmc
xlat
xchg
xchg
repnz
lods
xchg
in
ficomps
fwait
mov
xor
xchg
das
push
push
xchg
les
mov
jle
out
in
mov
adc
mov
jg
lahf
mov
movups
sahf
fdivl
clc
cltd
or
sub
fwait
pop
ret
aam
push
out
loop
test
add
sub
sbb
lods
cs
ret
cmp
jae
fstp
pushf
hlt
xchg
cmp
into
vpmuludq
sub
into
cmp
pop
lret
add
pop
cmp
in
and
fidivl
mov
int
sbb
and
add
xor
insl
jge
adc
inc
push
lock
nop
dec
loopne
xor
pop
mov
xor
dec
das
repz
jns
pop
rcrb
test
jl
lods
arpl
add
in
jbe
rclb
xchg
mov
jecxz,pt
jbe
push
adc
shlb
sbb
lods
movsl
jne
adc
inc
int
sarb
xchg
mov
cltd
lock
sub
xorb
in
int3
ret
cmp
mov
js
insb
or
addr16
mov
rcrb
mov
jge
push
scas
lea
cmp
lock
sti
fcompl
mov
loop
cmp
sub
dec
es
testl
push
cmp
cli
aas
jg
call
aaa
movsb
test
mov
syscall
ss
clc
notb
aad
popf
jno
shrl
mov
sysenter
mov
sub
or
lahf
les
add
adc
push
jno
sub
lods
fcmovnu
mov
fs
sbb
push
iret
xor
jp
icebp
cs
mov
pusha
shrl
xchg
inc
out
cmp
mov
hlt
jecxz
ljmp
push
pop
pop
outsb
test
xor
push
cmp
fcomps
cmpb
std
aaa
push
in
push
sbb
sub
add
dec
test
loop
inc
mov
inc
mov
ret
sub
shlb
push
and
pop
sarl
in
aad
jle
push
scas
das
xchg
push
daa
mov
dec
ss
ss
in
inc
ftst
sub
jne
jge
mov
dec
inc
pop
ret
pop
in
rclb
cmp
mov
xchg
xlat
stos
xchg
or
pop
jle
pop
adc
call
jo
cmp
mov
aam
loop
jle
inc
daa
push
pop
js
fadd
add
loope
push
mov
pop
jns
icebp
sbb
xchg
sub
loop
in
test
and
push
mov
xor
sub
cmpsl
sbb
pop
mov
xchg
in
fwait
lods
sub
xchg
fsts
pop
lods
sub
out
lahf
fdivrs
mov
mull
out
mov
cmp
adc
pop
out
mov
xor
std
bound
test
call
insl
fsubrs
lahf
sbb
fldt
fmull
or
dec
cmp
das
test
shll
push
leave
xchg
pop
push
sti
jge
mov
xor
addr16
inc
shll
shrb
xor
in
and
jle
jecxz
in
shll
jo
sbb
jns
xchg
mov
sbb
shrd
js
lods
and
xor
in
fdivrl
out
in
aas
or
cmp
adc
cs
leave
fwait
pop
jp
cmp
js
or
sub
ds
frstor
jg
add
int3
mov
mov
and
es
or
dec
fildll
ss
imul
adc
out
sbb
or
icebp
js
jb
push
jmp
outsl
inc
xchg
mov
pop
jl
mov
jnp
push
std
and
push
lds
inc
adc
aad
loope
push
loopne
mov
adcb
cmp
add
sbb
lods
not
push
jb
pop
sbb
jmp
sub
test
push
push
xor
jns
or
inc
lahf
dec
ret
loope
sub
pop
sarl
rcll
sub
mov
mov
mov
xchg
es
jo
or
imul
mov
cmp
cmc
loop
std
fdivr
shr
loopne
mov
and
add
call
ja
lret
mov
pop
outsb
addb
pop
sbb
movsb
xchg
cmpsl
sbb
xchg
insb
push
loop
mov
notb
xchg
testb
cmp
sbb
mov
mov
push
rcl
and
sub
mov
jp
lahf
push
out
inc
test
pushf
ss
int
out
or
xchg
pop
and
or
stos
aad
std
loopne
loope
loop
dec
push
push
cmp
stos
adc
cmp
outsb
or
xor
mov
pop
fucomp
jne
or
hlt
int
mov
lods
xchg
fldt
addr16
call
xor
aad
loopne
jmp
mov
scas
jle
fldenv
pop
lret
jo
dec
and
pop
mov
pop
push
lret
xor
or
rcrb
xor
sbb
lds
sbb
sbb
mov
pop
dec
cmp
les
sti
or
fs
inc
mov
scas
mov
push
loope
es
fwait
cmp
jge
jl
mov
and
in
imul
add
inc
popf
shlb
inc
mov
call
imul
insb
push
push
outsb
xor
inc
aas
mov
sbb
sub
stos
jg
repz
mov
lcall
dec
loope
pop
fildll
fwait
dec
fwait
test
int
insb
gs
push
cli
mov
push
or
dec
sbb
dec
in
xchg
sub
xchg
rorb
sub
sub
mov
movsl
adc
cmpsl
imul
test
mov
and
lea
sahf
vpmaxub
sahf
sbbl
and
add
std
mov
and
cmpsb
cmp
rorb
bound
jp
push
xchg
xchg
ja
dec
je
int
insb
pop
dec
push
adc
and
les
test
sub
dec
popf
in
sub
mov
fistps
xor
out
clc
movsl
push
ss
lods
xor
nop
mov
mov
rcrl
mov
enter
fsubrl
pushf
inc
pop
lods
pop
mov
xor
pop
pop
mov
aaa
and
dec
push
movsl
inc
int
int3
push
lret
pop
dec
mov
sbb
lods
mov
in
xchg
sbb
mov
jb
and
mov
xchg
xor
sbb
stos
or
xchg
insb
sub
jne
test
in
pusha
dec
xchg
and
jns
add
or
mov
sbb
out
or
fistl
dec
cwtl
test
stc
xchg
ret
bound
stc
jne
scas
add
cmp
repnz
sub
and
inc
jecxz
bnd
test
imul
push
sahf
mov
fwait
fwait
lods
dec
pslld
std
mov
dec
in
jecxz
xchg
sti
aam
push
cmp
pop
adc
jge
xchg
nop
rol
and
push
sub
mov
incl
je
jmp
in
xor
dec
fldcw
inc
push
in
sub
clc
mov
pop
int3
xor
pusha
inc
xchg
outsl
movsw
gs
dec
popf
movsb
fmull
add
xchg
arpl
outsb
pop
cmc
repz
adc
sbb
jae
loope
or
rorb
mov
xchg
repz
mov
hlt
and
xchg
fildll
lds
ds
mov
testb
imulb
mov
popa
add
jno
arpl
test
add
into
mov
stc
dec
stos
loope
adc
popa
sub
push
imul
mov
loop,pt
add
jmp
pusha
inc
mov
inc
test
iret
sub
in
lea
mov
cmp
mov
push
or
lods
dec
dec
scas
jl
cli
push
push
frstor
sbb
scas
test
loope
fdivl
mov
rcrb
aam
push
jo
ret
mov
mov
dec
mov
add
out
fimuls
sbb
and
mov
sahf
sbb
adc
xor
mov
adcb
dec
mov
adc
or
mov
fcoml
xor
mov
loop
js
popf
xlat
pop
dec
sbb
outsl
sub
mov
sti
movsb
push
mov
cmpsb
and
mov
and
sub
arpl
mov
cmpsb
jno
cli
jno
movl
mov
sbb
xchg
test
repz
popf
scas
es
pop
cltd
mov
lds
pusha
xor
sti
aas
popa
in
nop
shrl
ljmp
js
push
push
pop
ret
adcb
sarl
cmp
cmp
mov
xlat
ret
and
in
pop
push
fists
mov
sbb
mov
stos
adc
in
mov
jl
fldt
fistpll
movsl
pop
sub
pop
dec
xchg
mov
repz
jg
jnp
pop
pop
add
adc
push
push
sub
mov
mov
fcomp
mov
es
in
cmpsl
cmc
test
insb
dec
hlt
jae
pop
lret
sti
mov
jb
pop
or
sbb
dec
dec
popf
mov
lret
daa
mov
ficoml
mov
test
lret
jl
pop
pop
cmp
call
xor
push
scas
test
stc
rclb
adc
out
popa
fbld
adc
loop
cwtl
mov
lcall
mov
mov
aaa
dec
mov
xchg
std
test
ljmp
mov
add
aas
adc
inc
popa
fwait
scas
fwait
test
mov
dec
mov
fmuls
pop
lea
xor
push
sub
iret
daa
adc
aad
or
dec
in
inc
int
push
push
out
or
lods
sub
dec
adc
inc
pop
pop
mov
pop
push
mov
jmp
dec
lahf
das
aad
pop
int
jbe
adc
out
bound
test
xchg
lcall
cmp
out
lods
mov
clc
mov
sub
push
pop
dec
xor
jne
inc
or
test
inc
add
icebp
out
popa
push
sbb
jne
rolb
outsl
jae
in
cmpb
or
outsl
mov
pop
clc
ret
pop
sub
mov
nop
pop
aad
jge
jp
cli
out
inc
mov
inc
push
lds
xor
fcmovnbe
leave
cmp
imul
and
push
inc
aad
jg
orl
sbb
fcmovnb
xchg
std
mov
jge
push
xor
das
push
push
cmpb
in
rclb
xor
mov
incl
bound
ljmp
cmpsl
test
inc
fwait
jle
aam
ret
pop
mov
mov
mov
dec
add
cmpsl
jns
xchg
push
popa
jmp
xor
ss
leave
mov
push
ret
repnz
cmp
jp
fbstp
mov
or
pop
pop
sub
jmp
scas
add
jecxz
nop
xlat
movsl
mov
dec
push
aaa
and
xor
int
cs
push
pop
adc
fucomip
divl
stc
aaa
ret
adc
push
outsl
mov
xorl
or
push
stc
sub
jne
or
jge
pop
xchg
inc
dec
nop
stc
sub
lock
xchg
xchg
pop
xchg
fisttps
out
inc
push
mov
jmp
mov
cmpsb
mov
mov
sub
scas
fsubrs
rcrb
inc
or
or
insb
jp
cwtl
pushf
pushf
sbbb
or
push
ss
jg
push
add
fbld
push
lock
dec
out
clc
adc
int
bound
inc
mov
cmp
sbb
cmp
pop
push
xchg
mov
push
and
push
daa
cmpsl
out
aas
das
rorb
arpl
sbb
push
jno
in
lock
into
push
arpl
xchg
push
mov
in
fsubrl
or
and
and
mov
insl
push
xchg
push
pop
jg
rorb
adc
call
scas
out
or
packsswb
cmp
xchg
sbb
add
das
mov
dec
loope
cmp
add
xchg
in
mov
xor
es
inc
xor
in
dec
xchg
jo
hlt
mov
icebp
pusha
jge
pop
mov
or
xorl
cwtl
cmc
std
xchg
cmpsl
pop
in
std
jo
mov
adc
mov
dec
pusha
push
sub
insl
jb
fwait
arpl
push
aad
int3
je
mov
pop
std
or
or
jno
jbe
in
adc
int3
dec
sbb
repnz
leave
hlt
or
iret
push
scas
mov
jecxz
movsb
pusha
enter
and
movsl
movsl
icebp
cmpsl
aaa
mov
cmpsb
shlb
mov
gs
jmp
mov
sub
dec
cwtl
push
ret
rolb
mov
jbe
sahf
jg
ds
jns
mov
dec
mov
iret
mov
pop
int3
jne
xchg
sbb
je
subb
pop
and
mov
push
inc
cmp
pop
and
andl
add
xchg
int3
and
inc
add
int3
les
adc
pop
mov
mov
sbb
jp
icebp
mov
or
push
xchg
mov
loope
loop
jl
test
daa
mov
inc
in
sahf
nop
mov
pop
mov
cmpsl
jbe
lret
icebp
leave
and
pop
push
push
add
cmp
add
mov
ja
xchg
fbstp
xor
in
or
jl
lds
inc
scas
mov
out
call
pop
pop
push
or
mov
subl
lds
mov
mov
push
cmp
cltd
inc
scas
in
stos
xor
jne
or
scas
pop
mov
jb
push
iret
int3
sub
fistpll
sub
in
inc
mov
or
jnp
lods
aaa
dec
jg
bnd
imul
testb
adc
xchg
cltd
dec
jmp
das
dec
fdiv
cwtl
adc
in
mov
iret
das
ja
mov
or
adc
mov
jno
adc
das
sub
cmpsl
lahf
mov
add
fstl
sbb
out
adc
scas
in
sbb
mov
ja
sub
jecxz
sub
sub
es
mov
rorb
mov
sbb
xor
ffreep
xchg
cmp
ja
int
cmpb
mov
addr16
stos
or
test
jge
xchg
mov
mov
inc
stos
adc
mov
lret
ret
std
aad
fwait
rcrl
mov
shll
push
lcall
push
mov
lods
cltd
cmpsl
scas
mov
in
push
mov
jge
shlb
or
pop
jecxz
aam
inc
pop
mov
jmp
repnz
stc
sbb
decb
adc
lahf
fidivs
dec
subb
movsb
mov
sbbl
or
mov
in
das
lods
push
xchg
in
sub
sbb
inc
sbb
movsb
enter
mov
fcmovu
sub
imul
rclb
aad
addr16
pusha
xlat
inc
xchg
fcomp
add
popa
das
dec
xchg
mov
inc
mov
mov
and
shrb
and
cmpsl
gs
adc
xor
testb
pop
ret
movsb
mov
xlat
adc
xchg
xor
mov
push
inc
mov
adc
sbb
xor
aad
and
cmpsb
cmpsb
inc
cs
xor
jecxz
push
aaa
sbb
push
mov
cli
aas
jmp
add
into
popa
nop
inc
pop
das
frstors
data16
js
pushf
outsl
fcmovne
enter
cmp
loop
imul
and
mulb
repz
shll
jo
xor
icebp
test
jg
pop
dec
addl
xchg
push
xor
daa
fistpl
popa
rcrl
jae
jns
xchg
dec
and
sub
cmp
rcrb
test
lret
push
rcrb
push
inc
out
in
push
xchg
shrl
pop
sti
call
cs
stc
sub
lret
adc
cmc
mov
ret
mov
or
and
mov
test
int
jbe
jg
inc
out
sbb
sub
push
lea
cmpsl
add
mov
fisubrl
mov
xchg
sub
and
lret
dec
add
xchg
iret
enter
and
push
test
fimull
xor
in
dec
xor
int3
lods
ja
pcmpeqw
cmp
push
xor
cld
lahf
ret
ss
sbb
int
scas
arpl
test
pop
cmp
or
nop
fsubs
js
imul
mov
push
sbb
xor
enter
mov
pushf
pop
add
adc
push
xor
jle
xchg
and
add
rcrl
inc
mov
sub
cmp
call
push
jl
cwtl
scas
xchg
cmpsl
pusha
stos
and
leave
mov
sarl
dec
xchg
or
std
rcll
daa
sub
mov
sub
insb
cmp
cmp
hlt
test
rorl
cmp
std
inc
inc
jb
mov
xorl
popa
mov
lods
ret
mov
or
sub
daa
or
pop
add
les
sub
fildll
jns
bound
out
std
lock
jo
and
push
scas
jnp
pusha
stos
xchg
pushf
add
das
test
adc
pop
jp
xchg
mov
fstl
lcall
movsl
sbbl
sti
mov
mov
or
ljmp
das
adc
jl
sub
xlat
out
lea
das
lret
test
fmull
dec
inc
push
xchg
subl
sbb
loop
sub
push
pop
mov
xchg
shl
pop
jae
nop
mov
shl
fstp
cmpsb
add
cli
lahf
mov
add
add
jns
mov
or
push
sub
cmp
nop
fwait
sbb
shl
mov
mov
pop
xchg
test
or
push
and
arpl
inc
pop
cmp
mov
cmp
dec
ret
or
aaa
stos
loopne
ret
inc
inc
mov
loopne
outsl
pop
mov
mov
push
mov
call
adc
in
clc
mov
subl
mov
notb
mov
mov
call
das
jne
dec
mov
cmpsl
ss
pushl
sbb
scas
out
adc
dec
scas
cltd
test
ljmp
sub
rolb
ficomps
mov
xor
mov
sbb
mov
xor
loope
add
inc
lcall
stos
cmpsb
jbe
shrl
out
sbb
repz
sahf
cli
jg
rcll
insl
or
scas
dec
pop
call
and
inc
call
dec
xchg
movsl
mov
inc
jp
cmpsl
mov
push
in
pop
dec
daa
test
cld
pmuludq
inc
cmp
xchg
xchg
inc
cs
movsb
push
xlat
cmp
test
sahf
movsb
cwtl
jge
dec
test
mov
loopne
cli
mov
jbe
cmpl
xor
mov
push
mov
sub
mov
ret
stc
stc
mov
andl
dec
or
aam
mov
fcmovnu
daa
cmp
mov
mov
pop
popa
fisttpl
cmp
out
jo
cmp
fbld
jns
add
js
mov
inc
addr16
sahf
push
mov
sti
popa
xor
ljmp
xchg
mov
inc
xor
sub
dec
mov
mov
or
jg
pusha
lcall
or
pop
loop
insl
adc
outsb
adcl
jmp
fnstcw
lds
lcall
adc
add
jg
mov
rcrl
mov
pop
insl
mov
lret
aaa
xchg
movsl
adc
xchg
push
or
mov
dec
mov
mov
jbe
popa
jg,pn
sub
lds
shr
movsl
insl
or
pushf
jns
sub
bound
pop
jg
xchg
aad
sbb
xlat
cmpsl
cltd
daa
sub
lret
loopne
xor
jle
arpl
scas
mov
lods
cmp
inc
out
mov
xchg
jg
pop
push
fldl
popf
fwait
dec
aaa
sbb
mov
rcll
push
lahf
in
sub
jmp
arpl
inc
clc
mov
mov
xor
sbb
test
mov
rol
add
xorl
hlt
ja
xchg
std
mov
rcr
bound
push
jp
movsl
fcoml
std
outsl
cmp
push
mov
rcll
orw
shl
pusha
rorb
sahf
cmpsb
and
popa
jl
std
stos
inc
xchg
dec
xchg
mull
jns
decl
push
pop
mov
sub
jecxz
clc
or
scas
pop
fstpt
cmp
popa
jns
es
shll
test
in
fs
subb
pop
daa
xor
mov
shll
sub
add
mov
into
shrl
in
sbb
dec
xchg
mov
cwtl
out
test
push
jbe
les
pop
cmc
adc
xlat
std
repz
push
mov
sub
pop
or
lock
fisubrl
ret
or
cli
and
loopne
out
rorl
gs
mov
and
xchg
or
dec
jae
push
adc
jno
imul
lock
rorb
dec
loope
push
dec
sub
cmp
ds
ss
aaa
lcall
sub
dec
cld
sub
bound
adc
notb
mov
xor
mov
dec
rorb
out
push
imul
mov
subl
xchg
testb
cmp
push
push
cmpsb
test
xchg
loope
inc
xor
jne
mov
rol
in
mov
aas
shlb
add
pop
lahf
movsl
sub
push
adc
fnstcw
push
insb
jns
iret
inc
sub
ret
cmpsl
clc
dec
int3
jmp
in
adc
aaa
sub
int3
xchg
fbld
clc
xor
mov
pop
sarb
ja
cmp
insl
sahf
fcomps
mov
or
xchg
mov
inc
mov
push
mov
and
and
jmp
xor
push
mov
inc
pop
add
xor
stc
mov
jecxz
pop
mov
cmpb
pop
mov
mov
sub
lods
mov
pop
pop
and
mov
jg
jecxz
stos
test
test
ja
lahf
enter
mov
es
lods
dec
push
xlat
ror
cmc
lock
js
jae
inc
adc
mov
std
orl
loopne
adc
sbb
scas
in
out
and
fmul
inc
loope
outsl
je
cwtl
pop
add
mov
clc
les
movsl
dec
pushf
imul
add
cmp
test
xchg
aad
lahf
mov
popa
test
xchg
push
fiaddl
add
push
outsb
call
dec
pop
sar
xchg
subb
push
add
mov
add
dec
mov
mov
jmp
or
jb
fucom
rclb
push
fcmovbe
out
push
jne
mov
lret
push
sub
dec
out
cli
sub
adc
test
movsl
negb
das
sbb
lods
sbb
cmp
movsl
les
ror
enter
inc
sub
jns
gs
in
decl
movsb
scas
inc
dec
mov
mov
sbb
xor
lret
push
xor
inc
shll
out
gs
mov
push
push
and
sub
dec
cmp
test
mov
out
fisubrl
push
xor
idivb
movsb
jae
push
out
lea
dec
aad
push
jge
test
movsb
lret
test
aad
dec
push
loopne
sbb
inc
insl
add
xlat
sahf
movsl
out
aam
clc
sahf
aas
adc
imulb
jne
pop
fldcw
jge
out
ret
sub
out
mov
dec
or
or
addb
out
cmp
or
scas
pop
imul
mov
mov
jbe
mov
inc
lods
loop
mov
sub
jb
add
push
xchg
shrb
jg
fimull
xchg
shl
call
push
jbe
mov
pushf
push
jb
iret
cli
inc
vunpcklps
mov
subb
arpl
fstps
inc
out
jno
dec
lcall
test
add
sub
int3
andb
mov
stos
je
push
orb
push
push
mov
xor
mov
test
and
loope
lods
cmp
out
cli
or
enter
insl
mov
xlat
leave
xchg
mov
loopne
mov
xlat
add
insb
xor
icebp
out
add
push
inc
dec
in
sahf
push
mov
ror
pushl
repnz
add
ljmp
cmp
js
ds
out
pop
ret
push
sub
mov
stos
inc
neg
inc
fcomps
push
pop
imul
jbe
xor
movsb
in
pop
pop
mov
insl
pop
lods
ds
cld
gs
in
push
repnz
clc
and
les
decl
mov
push
pop
pop
ret
idivl
rcr
mov
aad
pop
insl
lcall
mov
out
cli
lcall
pop
inc
xchg
and
in
jmp
push
aad
int3
mov
or
insb
add
xorl
or
cmp
insl
add
mov
out
or
jle
inc
out
add
mov
xor
xchg
stc
popf
mov
sub
aas
sub
loope
xchg
inc
push
mov
das
cmp
xchg
add
push
sub
dec
jg
popa
add
push
into
rcrl
mov
pop
arpl
ja
and
lahf
sub
adc
add
adc
in
push
xor
imul
out
movl
xchg
aad
shlb
icebp
cmp
nop
pop
sub
loop
enter
popa
loopne
fwait
cmp
popl
in
sbb
ja
sub
lods
inc
shlb
cmp
sbb
push
adc
daa
cwtl
fld
pushf
adc
jo
notb
and
in
lahf
mov
inc
adc
sub
xor
cmp
and
leave
inc
mov
add
jo
xor
pop
fidivrs
aam
mov
cmp
sub
and
in
insl
rcrb
nop
adc
jge
into
scas
aaa
mov
xorl
shr
testb
cmovg
push
lock
and
lret
loop
aaa
dec
pop
lock
or
jge
sahf
inc
movsl
outsb
push
and
out
out
fisubl
adc
mov
hlt
aas
int3
lret
push
or
dec
cmp
iret
xchg
dec
gs
fdivp
ret
xchg
addr16
jns
sti
pop
in
mov
das
mov
xor
insl
push
int
incl
inc
fcmovne
testl
ljmp
mov
roll
inc
pop
or
push
push
push
mov
call
sub
out
push
sti
pop
pop
pop
bound
test
std
push
pop
sbb
cmp
sub
pusha
out
dec
jmp
xor
stos
xchg
not
sbb
ss
mov
cmpb
stc
mul
lea
out
xchg
mov
push
mov
loop
sub
xchg
sub
movsb
add
std
sub
push
xor
push
iret
lock
daa
jns
arpl
adc
dec
and
sub
sub
test
mov
sbb
mov
in
fimull
xlat
inc
cmp
mov
cmp
push
cmp
or
push
and
stos
cs
sub
test
fmuls
in
or
push
dec
mov
pop
and
adc
push
bound
mov
jmp
adc
inc
jbe
mov
pop
cmp
int3
test
push
out
enter
ds
dec
popf
mov
ljmp
bound
push
xchg
sub
dec
xorb
xchg
test
sub
loope
dec
push
pop
sahf
cltd
jno
out
lods
inc
test
and
clc
mov
in
xchg
xchg
mov
xor
cmp
jle
mov
and
cmpsb
cmp
jno
add
push
lods
lods
add
push
dec
test
sub
jbe
xchg
out
pop
rcrb
lret
cld
imul
push
shl
into
repz
stos
mov
push
fbld
jecxz
mov
or
adc
mov
das
pop
and
adc
or
insb
add
pop
mov
cmp
lea
fdivl
fiaddl
fiadds
inc
and
movups
pushf
pop
jg
xchg
xor
adc
das
sub
jp
bound
fisubrs
xor
pop
outsb
repz
xor
test
adc
cmp
or
push
popf
jbe
ror
in
jnp
test
xor
xchg
add
jb
insb
jmp
adc
insl
mov
negl
out
mov
loope
hlt
lret
mov
addr16
jle
xor
daa
cmp
test
stos
mov
fcomi
mov
cmpsl
mov
pop
jb
roll
or
push
leave
push
insl
ljmp
push
or
sbb
cmc
repnz
sbb
pop
mov
lcall
dec
or
in
or
mov
test
lock
insl
daa
sbb
mov
repz
xor
int3
cmpsl
xor
shlb
xor
iret
pop
jl
or
pushf
sbb
cmp
or
hlt
xchg
add
push
or
xchg
fcompl
stos
adc
xchg
repz
dec
cmp
in
sbb
cltd
xchg
mov
dec
pop
mov
fdiv
xlat
popa
and
ja
jg
sbb
push
ficomps
hlt
std
xorb
into
cmpsl
scas
out
loope
insl
repnz
push
jnp
or
iret
inc
mov
sbb
push
call
cmpsb
push
mov
add
sbb
mov
stos
idivl
pop
incl
ss
popl
in
in
sarb
clc
in
add
js
jbe
scas
xchg
popf
cmp
pop
pushf
pushf
lcall
mov
test
pop
mov
push
jo
lea
addr16
sbb
lods
fidivs
sarb
out
ljmp
loopne
je
adc
mov
fists
dec
add
lret
sub
mov
je
fldcw
or
sub
add
inc
fwait
jbe
adc
and
mov
dec
scas
add
xchg
xchg
aad
test
test
cmp
clc
imul
push
mov
orb
inc
xorl
je
jo
ds
pop
ds
rcpps
cmp
js
sub
mov
push
movsl
xchg
xor
movsb
imul
lea
imul
sbb
cwtl
mov
lds
sbb
xchg
inc
sahf
nop
push
test
push
fcoml
sbb
adc
das
out
sbbl
sahf
aas
es
in
sbb
insl
sub
fisttps
movsl
xor
cmp
cmp
sbb
into
test
je
fildll
adc
mov
dec
and
jbe
leave
sbb
lcall
je
mov
in
insl
test
pusha
rcl
and
xor
in
mov
addr16
gs
push
or
mov
or
jl
push
lock
jl
sub
std
mov
int3
jmp
sub
insb
sub
movsl
sub
stc
inc
sbb
mov
pop
sahf
mov
push
mov
inc
jp
lds
cmp
stc
cwtl
cmc
cmp
test
fwait
aam
mov
dec
sbb
and
andb
rcrl
test
cmpsb
add
popf
sbb
sar
popl
sub
ja
aam
dec
xor
mov
adc
xchg
mov
pushf
hlt
push
pop
jle
push
inc
or
and
cli
aad
mov
jo
mov
mov
je
out
jb
dec
sub
sub
mov
pop
scas
jl
imul
jl
nop
insb
mov
repnz
inc
pop
clts
sub
ret
pop
cli
and
and
lea
cmp
sti
mov
aaa
js
pop
stos
cmpsb
add
adc
ja
sahf
jno
data16
shl
mov
out
movsb
or
mov
sahf
mov
adc
ret
aad
mov
dec
lock
mov
mov
mov
loope
inc
dec
add
and
insl
mov
insb
rcll
loope
jp
out
xor
sub
je
dec
loopne
in
movsl
xchg
cmp
mov
inc
adc
in
loopne
negl
daa
lods
nop
or
test
scas
cs
repz
sub
outsl
cmp
outsl
xor
cmpsb
cmp
cli
sub
loopne
aam
fsubp
aaa
imul
dec
shl
rorl
adc
push
sti
enter
dec
xchg
mov
sbb
aam
ret
jmp
jl
fldenv
ror
pop
xchg
inc
cld
movsb
adc
xchg
cwtl
sub
fcomi
in
mov
jne
mov
sbb
imul
lods
add
scas
shrl
and
inc
inc
shl
add
adc
sbb
adc
mov
ds
mov
xchg
dec
aad
xor
sbb
cmpsb
push
jge
sub
lods
cmpsb
or
xchg
in
cmp
or
ljmp
mov
pop
cmc
jnp
inc
pop
cmpsb
jno
xchg
lahf
lods
cwtl
add
shl
sbb
lahf
xchg
sbb
sub
test
iret
lods
clc
outsb
cld
mov
push
or
bound
popf
push
pop
mov
add
push
sub
lods
sbb
js
add
sbb
movsl
xchg
pop
icebp
jns
and
xchg
push
shl
inc
out
das
push
dec
ss
xchg
sub
movsl
sub
and
iret
push
and
js
outsb
push
pop
lret
in
xor
pop
push
stos
outsb
jo
xchg
lock
movsl
push
je
test
cmp
loop
push
xchg
ljmp
rcr
in
push
sti
dec
mov
aaa
or
dec
mov
iret
aam
inc
maskmovq
mull
adc
call
loopne
rorb
dec
insb
ret
es
daa
mov
pop
push
orl
xor
in
daa
test
xor
adc
push
pop
inc
fbld
fwait
test
out
jno
inc
inc
push
gs
mov
cmp
pop
ret
adc
add
inc
mov
mov
gs
cmpsb
repz
call
jp
testl
jnp
in
jle
insb
psrad
add
mov
movsl
int3
xorl
ror
mov
xchg
icebp
fadds
aad
leave
mov
adc
loop
aaa
mov
xchg
movsl
scas
jnp
dec
adc
stos
in
pop
int
sbbb
fnstcw
cli
xor
stos
lds
inc
cltd
xchg
dec
mov
mov
popa
fs
cli
xchg
mov
and
mov
aaa
or
inc
inc
xchg
push
cmp
ss
out
jmp
dec
mov
mov
outsb
std
mov
jg
call
pop
pop
je
push
mov
inc
push
pop
push
dec
neg
xor
xchg
jg
and
push
cltd
cmpsb
scas
sti
cmp
aad
arpl
je
adc
cmp
ljmp
sub
gs
dec
push
xchg
insl
sahf
loop
sub
cmc
inc
cltd
adc
lea
xchg
inc
mov
sub
pop
int
and
mov
jnp
sbb
dec
orl
fisttps
xchg
inc
cmp
in
pop
aam
push
xchg
and
inc
adc
xor
stos
mov
push
cmp
mov
dec
mov
imul
cli
fldl
rcll
xchg
mov
mov
pop
mov
mov
fistps
sub
xchg
gs
xchg
jne
es
insl
fdivs
and
repnz
and
sbb
dec
mov
imul
nop
int3
mov
adc
push
jae
add
fiadds
stos
stos
pusha
xchg
cs
pop
push
es
lea
shrb
push
int
and
insl
dec
aad
fldt
push
js
ret
lea
cmp
mov
fmull
push
mov
add
scas
cs
xchg
cmc
aas
jae
jns
adc
int
jbe
dec
stos
mov
adc
jo
add
xlat
mov
cmp
cs
out
insl
leave
not
inc
ljmp
cld
push
into
pop
push
sti
adc
sub
xor
sti
in
bound
jmp
jl
cmp
xchg
push
daa
pop
pop
mov
das
test
fs
fwait
cmp
dec
xrelease
xlat
adc
sbbb
leave
adc
sub
push
rorb
call
lcall
sub
call
inc
mov
dec
xlat
jnp
add
sub
in
inc
cli
jae,pt
inc
divl
mov
mov
mov
rolb
sbb
add
in
movl
sub
cmpsb
dec
std
fs
shll
xor
hlt
sbb
cli
push
data16
mov
loopne
push
adc
ja
mov
xchg
xor
cmp
cmpsb
dec
loopne
mov
out
jle
scas
ret
sti
xchg
dec
sbbb
mov
mov
dec
push
scas
out
imul
fisttps
lret
loopne
fwait
inc
lcall
xor
movsb
lahf
mov
mov
fisubrs
xor
or
es
pusha
xchg
and
ljmp
aaa
pop
push
cmp
sbb
sbb
iret
insb
and
fsubs
ss
cmp
stos
xor
sbb
fwait
xchg
xchg
cltd
inc
je
sbb
fdivrl
fstl
popa
test
sub
sbb
js
sub
push
mov
pop
fisubs
fwait
repz
ss
clc
add
dec
sbbl
mov
adc
pushf
pusha
xchg
fcompl
icebp
cmp
into
xchg
and
jo
js
pop
push
inc
cmp
dec
sbbb
dec
inc
dec
push
ljmp
lcall
in
mov
push
inc
daa
mov
inc
insb
cmp
pop
push
mov
or
lock
adc
dec
lret
pop
pusha
jb
mov
rcll
and
inc
xor
jnp
outsb
in
fisttpl
jecxz
push
mov
outsb
or
xchg
cmp
push
aad
fildl
int
and
lods
or
mov
sbb
test
faddl
aas
loope
jns
iret
sub
jmp
aaa
mov
add
fcoms
sub
aas
in
jnp
xor
sbb
inc
fiaddl
out
mov
push
xchg
pop
iret
add
xor
scas
stos
aad
lods
dec
mov
pop
push
mov
jbe
mov
pop
inc
bound
mov
andl
sub
imul
adc
and
icebp
push
movsb
push
xchg
adc
fdivl
call
subl
mov
push
ret
lret
popl
dec
lcall
and
and
jge
popl
sub
dec
repnz
shlb
cmpsb
add
idivl
pop
in
loop
lahf
popa
ret
into
js
jg
fs
pop
pop
stos
ds
jmp
mov
movsl
hlt
inc
pop
mov
cmp
and
cmp
pop
sbb
mov
iret
scas
cmp
push
inc
dec
adc
cli
fisttps
std
xlat
xor
mov
in
dec
pop
arpl
xchg
icebp
push
pop
jl
xor
pushf
xor
or
shll
repz
cmpsb
inc
cmpsl
sbb
mov
pop
sbb
imul
and
xor
xchg
cmp
int3
int
or
fldenv
outsb
scas
pop
xor
xchg
push
add
pop
daa
icebp
adc
outsb
in
mov
push
sub
imulb
push
aad
sbb
movsl
rorl
lret
pushf
lock
jo
dec
xorb
pop
cmpb
adc
push
mov
xlat
iret
push
cmp
push
adc
adc
insw
rclb
aas
mov
in
adc
pop
adc
mov
or
addr16
xor
cli
push
mov
test
imul
and
cmp
jmp
scas
push
loopne
shlb
mov
sbb
xchg
mov
jecxz
out
xchg
call
jno
shlb
dec
repz
sub
add
sbb
xchg
popa
jg
pop
into
jmp
pop
sub
scas
pop
add
dec
fiaddl
mov
inc
jmp
sbb
in
mov
aaa
ss
adc
and
lea
sub
push
mov
fidivrs
mov
lcall
bound
push
jp
aas
lock
jmp
rcrb
xchg
xchg
pop
mov
repz
mov
hlt
xor
jns
popf
pop
add
lcall
xor
lret
jo
xor
pushf
insb
cmc
push
cmp
fistl
in
popf
xchg
mov
add
stc
add
les
repnz
dec
push
and
popl
dec
xor
mov
cmc
rorb
or
jb
testb
inc
ret
cwtl
cld
push
popf
daa
ret
stc
mov
jbe
vmptrst
jae
jmp
outsb
mov
and
in
test
or
mov
or
lds
pop
mov
sti
mov
cltd
fs
mov
pop
stos
ret
mov
jle
popa
adc
iret
xchg
mov
iret
fstp
xchg
in
fbstp
rcrl
cmpsb
or
into
xchg
pop
lcall
cmp
mov
popf
mov
daa
push
sbb
mov
jl
hlt
movsl
lcall
testb
sub
sbb
pushf
pop
or
add
push
std
jecxz
and
inc
sub
dec
sti
pushl
jge
xchg
mov
and
aas
jns
sbb
jns
test
mov
lcall
into
lret
enter
push
add
or
jno
pop
mov
incl
and
cmpsl
adc
push
aad
mov
pop
or
aaa
shrb
loope
cwtl
sub
jp
insb
shll
ljmp
xchg
xchg
dec
sti
jno
fisttpll
leave
sar
or
out
xchg
jo
and
dec
ret
add
jmp
pop
dec
xor
popa
dec
icebp
inc
xchg
scas
mov
shl
fs
les
dec
fldcw
loop
sbb
pop
pop
xchg
gs
fdivs
hlt
ss
int3
fistpll
and
sbb
jg
ja
add
inc
xor
dec
jg
rorb
fsub
jge
mov
jbe
push
in
sbb
sbb
inc
jnp
mov
pop
adc
jl
stc
fistpl
add
xor
cmp
add
decb
push
call
push
dec
lea
bound
adc
cmp
and
fisttpll
jmp
dec
icebp
push
pop
and
jno
icebp
jmp
sbb
inc
push
into
movsb
cmp
getsec
sub
fs
insl
rol
jge
leave
cli
mov
cwtl
mov
push
mov
xlat
stos
jp
lds
sbb
repnz
cmp
and
std
dec
lret
inc
imul
dec
xchg
repnz
stos
pop
and
xor
lret
cltd
sbb
scas
ret
daa
ficoms
jae
mov
mov
lea
xchg
dec
movsb
aaa
add
js
and
cmpsb
mov
mov
cmpsb
movsb
pop
arpl
mov
mov
or
loope
xchg
ljmp
jnp
sahf
dec
daa
sub
test
mov
lahf
iret
sub
mov
outsb
mov
xor
nop
daa
xor
jae
fbld
int
ja
shrb
adc
fldl
bnd
pop
lret
add
cmp
outsl
add
pop
loop
icebp
sbb
pop
pop
shrb
or
and
jmp
jp
push
mov
mov
cmp
fdivrl
das
sarb
std
shll
ror
push
push
or
sahf
gs
inc
loopne
mov
cmp
psubd
pop
insb
dec
cli
dec
adc
mov
mov
lods
mov
xchg
stos
jns
loopne
sbbl
sub
or
mov
push
xchg
call
pop
dec
cmp
enter
dec
jns
mov
push
xchg
cmpsl
stc
xchg
push
loop
push
push
sahf
dec
inc
mov
enter
stos
lret
push
cmp
adc
sbb
and
and
and
adcb
rorb
xor
jecxz
cli
inc
popf
enter
ret
fdiv
xchg
inc
xor
loope
inc
mov
cli
andb
int
addb
aas
add
leave
or
sti
mov
aas
aaa
or
mov
movb
dec
aaa
cmp
push
mov
loop
lods
adc
fwait
cli
repnz
rorb
loop
lret
rolb
mov
adc
aam
xchg
sub
mov
xchg
outsl
ljmp
lock
arpl
mov
imul
ljmp
mov
sysexit
je
mov
aaa
jmp
inc
sbbb
dec
dec
sti
mov
jg
out
das
mov
mov
lock
xchg
mov
shrl
mov
jnp
es
jnp
push
fimull
mov
je
popa
ret
mov
or
push
push
les
shl
mov
sub
mov
das
mov
je
push
sbb
xchg
jecxz
push
lock
xor
dec
mov
add
mov
add
mov
adcl
jo
mov
mov
call
jl
ret
jp
push
jns
xorb
scas
daa
pop
mov
cmp
add
loope
jnp
mov
jno
and
xor
cmp
ss
mov
arpl
inc
jbe
icebp
mov
and
or
pop
cmp
mov
ss
in
dec
dec
or
mov
dec
imul
mov
xor
loope
icebp
inc
shrl
fwait
jl
sub
inc
ljmp
dec
in
dec
testl
aam
sbb
aaa
pop
mov
jge
fsubr
clc
jmp
adc
jp
mov
mov
or
mov
aad
imul
sbb
enter
lods
cmpsb
and
mov
dec
arpl
mov
cmp
add
cwtl
mov
mov
out
and
imul
in
inc
pop
add
dec
mov
dec
jmp
fdivrs
iret
dec
mov
sbb
test
sbb
or
xchg
repz
adc
in
roll
xor
sub
sbb
inc
roll
imul
stos
in
dec
imul
push
rorb
lods
xchg
xchg
iret
push
dec
adc
hlt
pop
rorl
mov
lods
mov
sub
push
dec
lds
add
outsl
xchg
data16
sbb
nop
mov
icebp
fs
insb
dec
xchg
sbb
sub
scas
gs
adc
inc
hlt
int
addl
push
scas
test
inc
adc
mov
mov
mov
mov
dec
fincstp
sub
adc
loop
popa
mov
inc
mov
inc
adc
push
ret
cmpsb
fcomps
popf
dec
cmp
test
mov
loop
xorl
movsl
mov
xchg
mov
mov
stos
rclb
adc
fsts
lahf
mov
adc
les
mov
sub
xor
mov
mov
movsb
in
stos
pushf
outsl
pop
or
fidivl
jb
test
mov
mov
dec
cmp
stos
jg
testb
inc
popa
rcrb
sar
mov
mov
mov
iret
jp
test
test
jl
lahf
jmp
ss
jno
push
jle
popa
push
push
jns
out
andl
jne
xchg
nop
or
push
jae
cltd
in
cltd
jmp
es
cli
in
cmp
jg
test
adc
lds
imul
pop
loop
dec
dec
push
popa
dec
and
jne
out
in
fimull
mov
es
xor
je
mov
imul
mov
aas
adc
and
into
mov
sbb
dec
xor
ret
cmc
xor
mov
cmp
in
ret
and
js
push
jp
out
stos
mov
push
rcrb
mov
mov
mov
loopne
imul
push
test
jg
sbb
mov
xchg
sbb
out
cli
adc
cli
inc
dec
stc
sub
pop
fildll
push
icebp
aas
mov
push
cs
mov
cmp
xchg
pop
sti
mov
fst
loop
test
add
inc
loopne
and
mov
or
and
cmp
mov
mov
imul
cmc
xchg
aad
xchg
sub
icebp
fwait
das
jle
in
jle
add
stos
adc
icebp
sbb
pushl
pop
xchg
jne
pop
push
test
lret
add
xor
adc
cmp
mov
mov
outsb
addb
mov
js
sbb
inc
adc
push
ljmp
add
insl
test
xchg
sbb
and
cmp
cs
shlb
sbb
ret
xchg
dec
cmp
enter
jno
cmp
filds
push
mov
in
icebp
insl
daa
mov
pop
pop
lret
jae
pushf
data16
les
mov
pop
mov
mov
push
xchg
xchg
fwait
aas
mov
repnz
mov
xchg
insb
dec
jno
std
sbb
dec
jo
out
add
enter
sub
rep
adc
cmp
mov
pop
inc
imul
push
jmp
mov
rclb
or
dec
test
adc
push
adc
clc
mov
xchg
dec
jecxz
xchg
fcomip
in
popa
stc
daa
fs
lods
mov
add
lock
iret
movsb
adc
out
dec
inc
mov
sub
and
lcall
pop
jl
clc
and
jne
loopne
jnp
pop
pushf
decl
negb
jmp
xor
mov
std
outsl
and
inc
add
mov
scas
in
test
add
adc
arpl
cltd
rcrl
gs
push
pop
xchg
sub
std
xchg
cmp
pop
imul
das
mov
cld
cmp
xchg
aas
inc
push
dec
push
jge
xor
sub
jecxz
pop
jge
dec
pusha
fs
scas
push
mov
adc
ja
repnz
mov
popf
lock
sahf
loope
push
pop
jl
into
cmp
push
jle
sbb
incb
jnp
fcomps
or
mov
push
xchg
ja
pusha
orb
inc
sti
in
enter
mov
add
pop
mov
mov
stos
jg
ret
mov
outsb
push
add
xchg
orb
and
xor
leave
popa
jo
fisttpl
xor
cs
test
jmp
test
mov
jno
cmp
sub
imul
xchg
pop
movsb
mov
sbb
mov
or
aas
in
in
arpl
imul
jle
add
mov
fnstenv
out
xchg
hlt
xchg
mov
mov
push
imul
and
lea
sbbl
arpl
add
bound
push
rolb
test
pop
xchg
push
insb
xor
mov
xor
push
jne
jecxz
dec
addr16
aam
xor
mov
dec
or
xchg
repnz
std
stos
dec
inc
cltd
mov
stos
inc
inc
jns
mov
rcll
rcrl
inc
scas
shll
cltd
xchg
sub
push
dec
ljmp
fistpl
xchg
and
loopne
xor
ja
dec
inc
sahf
insl
out
pusha
ficomps
iret
ffreep
cmp
or
mov
and
xor
adc
aam
adc
cmp
iret
in
dec
into
adc
pop
xchg
push
in
ret
mov
xor
outsl
leave
sub
lret
out
cmp
je
dec
fidivrl
iret
push
sbb
push
cltd
addr16
test
inc
gs
add
xor
pushf
enter
insb
cwtl
sarb
pop
cmc
push
dec
mov
push
mov
fnstcw
add
insb
pop
sub
xchg
frstor
outsb
shlb
aaa
mov
int3
add
nop
mov
dec
adc
mov
push
imul
lahf
push
adc
mov
iret
orb
jo
lahf
rorb
and
jae
or
push
sbb
ss
mov
in
dec
cmp
mov
out
push
out
fldenv
dec
jp
outsl
popf
cmp
mov
jmp
ja
movsb
mov
adc
call
test
repnz
push
and
inc
pusha
mov
addb
dec
or
rcrl
adc
jbe
out
push
pop
out
pop
nop
jge
mov
adc
or
fnstcw
sub
sahf
cmpsl
xor
les
sub
fnstcw
mov
jnp
sbb
inc
xor
filds
jne
jae
jne
in
push
adc
repnz
insb
cltd
adc
test
mov
xchg
jno
jp
inc
rcll
add
loop
lret
pop
sbb
daa
cli
mov
cmp
lea
adc
aaa
sahf
inc
int3
mov
sti
add
lods
inc
cmp
fcmovb
cmp
shll
test
mov
xchg
aas
mov
cmp
jns
mov
or
int3
cmp
andl
out
mov
pop
jnp
lock
movsb
cmpb
and
push
xchg
dec
cmp
test
jbe
movsb
pop
in
inc
js
xchg
sti
cmp
push
cmpsl
xor
dec
jns
cld
stos
mov
inc
push
out
push
aas
or
pop
orl
test
jle
cmp
out
scas
mov
cmp
sub
mov
cmc
push
stos
pop
adc
cs
add
sarb
or
lcall
sbb
dec
sub
popa
orl
cmp
pop
ljmp
push
scas
ss
and
std
xchg
dec
repnz
cmp
push
mov
hlt
add
lcall
icebp
mov
push
cltd
dec
sbb
in
and
lods
and
dec
and
add
sahf
stc
cmovl
pop
push
cltd
stos
sbb
out
mov
negl
sub
sub
out
jmp
mov
push
pop
jp
lret
sarb
adc
or
mov
inc
sbb
scas
dec
inc
in
jg
jle
repz
inc
push
and
cmpsl
out
outsl
cmc
test
shl
mov
jmp
mov
push
cmp
add
inc
pop
sub
sbb
pop
dec
decl
inc
adc
add
ss
push
adc
ret
lds
mov
outsl
sti
lahf
cwtl
and
xor
mov
jecxz
imul
rcr
adc
push
inc
test
mov
mov
or
cmpb
jno
jo
leave
mov
pushf
mov
lahf
jl
or
loop
inc
jo
mov
inc
fisttpl
mov
and
sbb
dec
arpl
cmp
popl
or
popa
add
mov
clc
fwait
shrb
mov
ret
pop
mov
fwait
mov
mov
cmc
hlt
pop
add
movsb
dec
and
pop
sub
dec
or
sbb
add
stos
xchg
leave
mov
jns
fcoms
or
mov
mov
daa
arpl
jle
sub
jmp
cmp
lods
mov
sub
xchg
adc
clc
lea
fstl
jge
xchg
add
fstl
lods
dec
jmp
adcl
mov
cmp
mov
jne
lea
or
andl
bound
ja
sbb
fistps
dec
xor
mov
lock
cmc
cmp
dec
adc
notb
push
into
out
or
xchg
sbb
fadds
imul
sti
mov
cld
repnz
push
jb
mov
popa
jno
xor
decb
lock
push
test
arpl
mov
jle
adc
jae
orl
mov
push
test
in
jge
dec
sub
mov
dec
mov
add
and
inc
sub
stos
or
push
inc
scas
sbb
test
pop
sub
jb
xchg
cmp
out
cmpsl
xchg
and
js
sub
adc
out
and
data16
pop
and
or
popa
in
clc
mov
jno
stos
push
sub
shrl
daa
cmp
cltd
add
out
lret
cli
pop
imul
fs
frndint
mov
mov
std
dec
pusha
sbb
das
mov
hlt
mov
les
aas
pop
pop
rclb
cli
xchg
pop
rcrb
jnp
xchg
daa
sahf
iret
add
push
xor
daa
ret
sub
mov
push
movsl
daa
out
mov
pop
push
mov
pop
out
ret
xchg
pusha
mov
or
xor
xchg
sub
xor
imul
push
add
lret
xor
stos
aaa
lahf
les
dec
test
fdiv
or
mov
loopne
scas
push
fistpll
and
aad
je
test
std
push
lods
rcrl
add
outsb
add
push
daa
rolb
mov
push
add
and
add
push
pop
lret
push
ret
lods
hlt
aad
jg
xor
and
data16
sub
mov
ss
jl
mov
pop
fildll
xor
arpl
mov
cmc
push
dec
push
fwait
movsb
xchg
enter
fimull
stos
lock
and
or
faddp
cmp
aas
jbe
push
out
rcrb
mov
lods
pop
or
jmp
adc
sbb
lods
int3
jnp
leave
cmp
xor
adc
orl
dec
xchg
add
ret
jmp
decb
stos
pop
dec
rcrb
sbb
mov
xchg
es
lret
sbb
sub
leave
out
add
inc
add
xorb
mov
cmp
test
add
mov
and
cwtl
cmp
outsb
fldcw
cmc
adc
das
arpl
and
xor
jmp
push
pop
cs
repz
mov
cmpsl
gs
add
jo
leave
jb
mov
sbb
lock
sbb
imulb
jl
orb
aaa
add
std
lahf
cmpsl
and
cmp
push
adc
movsl
popf
or
sbb
faddl
or
je
ret
aad
xchg
icebp
test
bound
ja
sarl
test
sbb
adc
movsl
test
ficompl
cmp
sarb
data16
in
pop
lahf
leave
xor
mov
pusha
sbb
out
mov
enter
aas
dec
cwtl
sbb
add
xchg
pop
add
push
jl
push
add
xor
sub
aaa
push
mov
mov
dec
inc
mov
xchg
mov
and
popf
sbb
jo
dec
inc
bound
adc
mov
mov
xchg
loope
mov
hlt
adc
inc
loopne
adc
cmp
mov
ficompl
ret
jns
test
sbb
inc
cmp
rcll
xor
sti
fnstsw
and
mov
mov
inc
arpl
sbb
int
sub
movsl
xchg
movsl
faddp
cwtl
add
xchg
in
inc
test
das
and
inc
roll
scas
push
movsl
cvtps2pd
repnz
or
jg
dec
pop
jnp
iret
add
inc
push
cmpsb
xchg
movsl
je
fwait
sahf
inc
mov
mov
roll
outsl
test
in
bnd
jp
insl
aad
mov
sahf
mov
clc
adc
inc
sar
push
mov
jle
xchg
fdivrl
outsb
mov
jbe
and
push
cmp
outsl
test
xlat
repz
lret
idivb
xor
mov
jg
push
enter
dec
stos
xchg
gs
fimull
sub
add
sub
fildl
dec
mov
mov
sbb
push
idivb
ficomps
pop
push
and
inc
add
lea
aas
outsl
sbb
orb
pop
and
push
inc
lahf
ffreep
jne
out
xor
jg
test
xchg
push
xchg
add
jl
dec
push
inc
add
inc
sub
addr16
and
inc
rolb
hlt
ljmp
or
mov
pop
and
insl
mov
das
push
inc
scas
and
sub
mov
js
popa
stos
cmp
mov
xor
dec
jmp
enter
push
xor
pusha
sub
jnp
imul
dec
rcll
data16
mov
pushf
pushf
jmp
pop
in
mov
bound
out
xchg
nop
mov
in
lds
testb
mov
insl
xor
xchg
push
or
cmpb
push
or
inc
mov
xor
mov
push
push
ret
jae
pop
out
aam
or
dec
jmp
mov
xchg
rorl
pop
and
xor
daa
pop
bound
test
or
aam
mov
or
pop
sub
jno
dec
punpckldq
or
push
into
mov
mov
into
adc
int3
lods
lret
jae
das
mov
mov
inc
xchg
lock
and
aas
push
jmp
js
pushf
sar
inc
aaa
outsb
mov
dec
fiaddl
in
sbb
notb
clc
add
test
int
xorl
sbb
and
movsb
sbb
or
lea
inc
loop
mov
dec
ja
jbe
adc
fnstcw
stos
loope
in
mov
jle
data16
into
jp
or
ljmp
js
push
jmp
dec
sbbl
imul
jnp
mov
int3
stc
and
sbb
ss
out
sahf
sbb
sbb
jecxz
push
xchg
pop
sub
fmul
jo
pop
or
mov
aas
mov
push
js
sub
stos
sbb
or
fistps
rcrb
jae
and
sbb
fcmovu
mov
and
and
lock
mov
push
imul
jl
sbb
lret
lods
xchg
daa
imul
adc
adc
push
adc
inc
jnp
dec
jns
cltd
xor
xchg
outsb
mov
out
ds
lret
mov
xchg
pop
xlat
or
cld
mov
aam
ja
cmp
rclb
mov
push
cli
repz
mov
lcall
lds
mov
add
cltd
aas
jbe
jo
lds
rcll
mov
jnp
mov
mov
or
pop
mov
mov
push
stos
add
mov
popa
mov
mov
add
xchg
decl
cmc
mov
dec
shl
jb
orl
jp
adc
xchg
pop
pop
mov
loop
loope
cmp
shrb
scas
sahf
outsl
dec
pop
aad
inc
test
mov
lcall
iret
ret
repnz
pop
pop
pop
lea
nop
mov
xchg
mov
and
and
pop
roll
cmpsl
pop
aam
xchg
dec
and
pop
insl
pusha
insb
fldenv
mov
mov
push
or
sbb
jl
mov
loope
icebp
mov
repnz
sub
inc
daa
out
pop
cltd
addr16
shlb
lock
or
xchg
sbb
sbb
jmp
cmp
lcall
push
popa
push
scas
nop
subl
add
add
sbb
xchg
jle
add
push
loop
lret
mov
mov
xor
adc
pop
idivl
testb
xchg
jnp
pop
sbb
sub
sbb
adc
ds
jg
int3
insb
mov
dec
repnz
std
xchg
jnp
loope
mov
xchg
adc
out
push
test
add
ficompl
mov
ja
int3
insl
sbb
addb
sbb
mov
aad
int3
imull
push
lret
mov
or
loope
fs
xchg
push
jg
lret
jl
mov
fsubl
ror
jmp
fbld
jns
mov
repz
lahf
add
pop
push
mov
out
xor
xchg
sbb
pop
aaa
ret
dec
pop
insb
les
dec
jns
lea
popa
pushf
dec
ret
or
mov
test
push
fwait
jae
lock
jnp
xor
push
mov
in
push
stos
nop
data16
outsb
int
ret
mov
jno
xchg
in
stos
es
fldcw
push
dec
test
aaa
js
xchg
dec
int
sbb
mov
icebp
mov
subb
fiaddl
insl
outsl
shlb
scas
xchg
pop
fs
pop
aad
dec
sbb
lahf
test
mov
xchg
add
xchg
mov
pusha
cmpsb
mov
inc
sub
sub
sar
pop
dec
mov
dec
dec
xor
sarb
aaa
push
scas
dec
adc
rolb
in
mov
pop
push
addr16
push
xlat
jbe
xor
iret
insb
pusha
sahf
mov
leave
les
push
add
mov
push
push
mov
cmp
xchg
cmp
sbb
pop
mov
mov
cli
and
inc
outsb
xchg
inc
jo
scas
aaa
push
aas
push
pop
and
fcoml
mov
shll
shl
stos
push
rcl
rclb
sub
xchg
jno
fsub
xchg
add
jmp
mul
mov
jmp
add
mov
outsl
xchg
or
ss
clc
ret
fisubrl
mov
pop
pushf
test
cmpsb
push
in
fisttpll
andb
jns
and
mov
adc
jp
imul
jo
and
dec
or
xchg
pop
sub
xor
aas
pusha
fcomps
adc
jo
aas
mov
push
je
mov
jb
sub
sahf
shlb
push
cld
mov
jmp
inc
mov
cmp
lgs
jp
sbb
jno
fldt
imull
imulb
mov
ja
xchg
add
xchg
subl
ret
bt
xor
jg
and
xchg
mov
push
stos
into
int
pop
jg
add
lret
sub
jb
cmp
and
aas
pop
movsb
jle
or
insl
add
fldt
cmp
jb
shl
in
outsb
and
sbb
aaa
fs
bound
jne
fwait
or
jg
les
sub
xor
gs
popa
ljmp
cmp
jne
xchg
mov
aad
mov
mov
jecxz
jecxz
adc
in
xchg
push
hlt
push
adcb
cmp
push
loop
dec
push
enter
shl
std
xchg
xor
out
push
or
ss
mov
fprem1
xor
js
pop
pop
stc
inc
fwait
or
sub
inc
xor
sub
push
pop
lds
lahf
sarb
mov
es
jo
ds
mov
lock
dec
lock
dec
cmp
imul
popf
outsb
inc
imul
ss
rcr
int
xor
inc
cltd
mov
cltd
outsb
lahf
or
sti
mov
lcall
mov
cs
in
rcll
add
inc
icebp
dec
fsubr
or
shrl
mov
fnstsw
mov
jb
shr
rcl
rolb
aas
je
aaa
sbb
mov
fdivr
dec
add
xchg
pop
orb
divb
mov
sbbb
jns,pn
add
fcoms
sub
decb
out
pop
lahf
mov
je
push
push
jg
aad
mov
xor
mull
push
sahf
cmc
or
rclb
popa
and
jbe
pop
push
imul
outsb
fldenv
faddl
fnsave
fnstsw
sub
cmp
mov
aaa
adc
hlt
sbb
xlat
pop
clc
cmpsb
sbb
jp
jo
hlt
sbb
mov
push
lock
out
mov
mov
iret
mov
insb
mov
adc
cmp
cmpb
je
in
adc
jae
outsb
push
xchg
in
and
cli
mov
repz
or
cmp
js
fs
mov
and
les
and
lret
pop
xlat
mov
adc
add
jbe
pushf
and
xlat
dec
dec
jecxz
sbb
jge
mov
stc
xor
sbb
enter
fs
in
or
nop
jg
leave
add
loop
cmp
loope
cli
popa
lock
cs
pop
lds
dec
and
imul
lock
outsb
dec
xchg
pop
cld
lods
add
mov
fwait
xor
lods
pop
or
pop
sub
je
out
call
cmp
xor
push
pusha
shrl
dec
repnz
scas
pop
jg
in
sbb
scas
pop
hlt
or
xor
orb
in
and
jns
push
inc
pop
outsb
les
xchg
mov
lods
ljmp
lret
mov
or
rcr
lods
nop
jne
or
mov
push
mov
push
adc
sub
pop
lcall
js
cmp
arpl
addr16
mov
stos
mov
into
and
mov
pop
dec
inc
loop
adc
cmp
sub
in
shrl
push
dec
add
pop
or
stos
sbb
movsb
xor
cwtl
jmp
lcall
pop
es
shlb
inc
ret
les
xlat
movsb
xor
jg
push
pop
or
pop
push
nop
stc
popl
sbb
js
arpl
leave
rclb
add
aaa
dec
daa
lret
fxch
das
push
or
mov
pop
mov
ljmp
or
out
andb
pop
fwait
mov
jmp
adc
mov
or
leave
pop
lea
inc
shll
add
jge
out
pop
sbb
out
xor
fiaddl
lods
aad
and
and
mov
dec
imul
in
std
jg
inc
xchg
xchg
mov
ss
lods
or
in
outsl
mov
push
cmp
dec
mov
mov
dec
call
insb
pop
rdpmc
add
push
je
sbb
mov
arpl
jb
fistl
mov
icebp
sbb
cmp
push
push
jne
pushf
int3
cmc
and
mov
push
dec
cmp
inc
mov
scas
xlat
or
sub
mov
aam
imul
out
ja
mov
mov
mov
call
iret
cld
pop
notl
mov
and
loop
mov
pop
jl
ret
out
mov
jecxz
push
jnp
jnp
outsb
cmp
jmp
ds
mov
bound
sarb
mov
test
push
adc
pop
jge
pop
rcr
sub
popf
mov
or
jns
mov
or
add
fdiv
xchg
pop
fnsave
or
loope
xor
xchg
pop
xor
inc
jge
rorl
leave
pop
lods
nop
mov
mov
sub
jbe
out
dec
into
daa
test
ss
dec
sbb
test
movsb
push
cld
loop
or
idivl
fstpt
lret
leave
sub
imul
fistl
aad
mov
jle
enter
icebp
and
bnd
pop
sub
sub
cmp
push
les
xchg
pop
mov
sbb
adc
sub
dec
or
imul
imulb
pop
inc
xor
mov
dec
sbb
imul
inc
popa
xchg
pop
mov
in
pop
leave
lret
daa
dec
pop
push
shl
lock
cmp
add
inc
or
xor
mov
es
sub
or
insl
popf
lret
add
cmp
xchg
add
cmp
pop
jb
ja
cmp
xchg
test
repnz
inc
and
in
cmp
outsl
flds
mov
mov
jp
mov
imul
or
xor
ret
imul
push
sbb
sbb
push
test
imulb
jp
cmp
dec
repz
pusha
jge
inc
jnp
jbe
daa
ret
jge
ficoml
jo
push
jge
pop
mov
mov
dec
adc
pushf
or
test
outsb
sbb
mov
push
pop
loope
adc
neg
stos
fdivs
inc
xor
pop
mov
popf
xchg
adc
cmpsb
fstp
xchg
pop
push
add
in
repnz
jmp
pop
fistpll
pushf
mov
leave
movsw
and
jge
out
into
pop
repnz
fiaddl
pop
loop
rcll
pop
dec
scas
fstps
imul
xchg
mov
sahf
addps
xchg
cld
scas
adc
scas
add
je
jo
sbb
jb
jge
bound
imul
roll
dec
cmp
or
jmp
add
test
sahf
test
xor
mov
push
daa
mov
enter
and
stc
mov
fiaddl
add
movsl
fmuls
shlb
or
and
sub
lret
rep
aas
jp
pop
das
add
xor
testb
sahf
adc
push
ja
stc
mov
xchg
mov
sahf
xchg
adc
add
std
loop
sbb
pop
lcall
mov
pop
pop
dec
mov
pop
or
fmull
mov
daa
insl
out
inc
les
jecxz
icebp
inc
dec
sub
lret
xor
sub
pop
out
pop
xor
nop
or
stos
mov
and
in
enter
inc
sub
imul
and
es
mov
test
pop
jne
xchg
xor
int
pop
sti
dec
lock
in
mov
add
dec
int3
cmc
es
xchg
mov
and
jle
jnp
sahf
in
mov
leave
fs
arpl
jbe
in
enter
add
jo
data16
cmp
loop
xor
fimuls
imul
mov
xorb
or
push
and
stos
xchg
inc
mov
out
mov
inc
dec
pop
ljmp
js
xor
aam
icebp
push
mov
cmpsl
in
sbb
cmp
push
push
dec
push
in
icebp
and
jmp
and
mov
loope
sbb
sbb
movb
enter
dec
out
jo
imul
jbe
cmpsb
pop
std
push
pushf
ljmp
mov
and
add
xor
fldl
nop
movsb
sub
int
pop
adc
mov
pop
mov
or
outsb
insb
sbb
pop
mov
rorl
stos
mov
pop
push
sub
pop
stc
shlb
out
xchg
jne
pop
cmp
jnp
pmulhw
bnd
out
add
rcll
pop
adc
ret
adc
stc
mov
adcl
subl
xchg
fstl
es
mov
clc
sub
dec
dec
jecxz
shlb
pop
repz
cmp
xor
pop
sbb
ds
movb
ret
popf
jp
inc
push
adc
into
shl
out
mov
dec
mov
inc
arpl
lcall
jb
and
out
jmp
mov
daa
mov
push
aad
jbe
xor
mov
enter
mov
jno
pusha
nop
and
xchg
daa
sub
lcall
xchg
fnstsw
addr16
les
daa
arpl
cmpsb
addr16
mov
mov
jle
jbe
mov
pop
inc
jg
xchg
cwtl
out
xchg
xor
push
inc
sbb
test
inc
pop
pushf
mov
outsb
dec
pop
sub
adc
push
out
mov
dec
mov
sub
mov
mov
movsb
rcrl
sbb
daa
fadds
add
scas
fadds
or
mov
out
daa
or
sbb
pop
adc
push
jmp
dec
nop
mov
lds
outsb
inc
imul
xorl
ss
xchg
test
pop
addr16
in
fs
pushl
imul
sub
push
popa
jnp
out
dec
sub
insb
sub
addr16
dec
sub
fidivs
leave
test
hlt
test
push
push
int
dec
out
cmp
push
sti
sti
daa
lea
sub
lahf
jne
mov
cmp
push
gs
cmp
lock
push
mov
jl
xchg
int3
fldl
sbb
cltd
cmpsb
or
mov
jbe
push
xchg
jge
mov
sub
sti
fwait
pop
stos
mov
loopne
cwtl
addl
mov
mov
mov
sysret
push
aas
cmp
lahf
ficoml
mov
mov
out
sub
pop
mov
sub
adc
bswap
std
sar
gs
sbb
das
jns
mov
pop
push
ret
rcl
hlt
int
fucomp
aaa
adc
pop
int
adc
pop
stos
sbb
jp
xlat
bound
in
xchg
cwtl
and
rcrb
out
mov
cld
in
xor
insl
in
mov
std
shlb
cltd
out
or
pop
add
or
fwait
aaa
mov
addr16
add
pop
sbb
jae
xchg
or
inc
popf
and
hlt
add
arpl
and
sub
lcall
sti
sbb
mov
fmull
jecxz
inc
sahf
mov
mov
shr
fbstp
cmc
or
aaa
jbe
nop
sbb
mov
das
ret
cmp
test
bound
sub
jo
cld
mov
cli
dec
jno
sti
inc
fnstenv
fcmovne
and
aas
mov
jg
jecxz
adc
repz
sub
mov
arpl
in
inc
jne
push
pop
xlat
sbb
jno
sub
mov
cwtl
pushf
out
pop
cmp
pop
pop
js
jmp
sarl
mov
orl
out
push
add
stos
loopne
push
lods
out
popa
push
or
fidivs
or
mov
xchg
daa
mov
repz
movsb
mov
aas
mov
enter
pop
mov
mov
cmp
jbe
cs
out
ljmp
push
adc
pop
ret
mov
inc
mov
jns
jl
aas
inc
mov
sbb
push
adc
orb
mov
sbb
pop
fisttps
push
mov
pop
add
inc
imul
pop
mov
outsl
out
shrb
xor
xlat
mov
mov
jmp
jg
xor
adcl
clc
mov
outsb
lea
les
pop
scas
cmp
cmp
dec
cmp
xchg
xor
xchg
and
in
jae
xor
stc
xor
mov
in
dec
push
cmp
cs
mov
mov
ret
jle
lock
xchg
sub
cmp
ja
inc
jne
xor
popf
push
push
pop
lret
jmp
jle
je
mov
sarb
cmp
sub
adc
dec
mov
rorl
xor
test
mov
jno
ret
outsb
xlat
stos
xchg
jae
insb
pop
call
nop
pop
mov
lds
jo
inc
pop
cli
mov
sbb
sahf
xchg
in
add
loope
dec
nop
lock
pop
sahf
call
add
ja
fwait
sub
mov
mov
mov
lds
pusha
in
insl
jne
xor
sbb
inc
add
inc
sbb
jae
xchg
stos
testb
out
leave
sub
or
es
ds
int
fisubl
mov
int3
test
sbb
mov
ret
mov
dec
add
nop
push
mov
popa
je
rcrb
mov
andb
dec
sbbl
adc
xor
mov
mov
ret
scas
ret
mov
sub
xor
push
and
ret
jmp
mov
cmp
ljmp
cmpsl
andb
int
jne
pop
lods
fs
adc
xor
xor
das
clc
in
shrl
pop
mov
lret
pop
xchg
xor
pop
push
sbb
push
xchg
sbb
pop
pop
hlt
cld
popa
xchg
gs
inc
ds
aad
cmc
add
ss
mov
and
shll
sbb
pop
push
jno
cmp
sarl
cmp
jecxz
jg
clc
pop
pop
jmp
cmp
nop
inc
jmp
sub
mov
mov
jne
and
inc
fmuls
sbb
jne
mov
daa
cltd
sub
xor
jg
push
inc
out
mov
jns
mov
cltd
jge
shrl
dec
enter
fnsave
inc
and
adc
mov
sub
xchg
pop
jge
out
add
rcrl
aaa
sarl
cmpsb
int3
xchg
cmp
fimuls
sub
xchg
push
or
std
sbb
dec
in
jno
clc
mov
outsb
dec
std
sub
aaa
lods
mull
push
es
std
mov
pop
dec
jmp
jg
loopne
sbb
leave
mov
inc
inc
add
loop
outsl
pop
jno
jnp
in
jle
sub
int
mull
in
mulb
fisttpll
aaa
or
pushf
push
fwait
sub
xor
std
faddl
xchg
rcrl
fsubl
es
inc
andb
mov
mov
aaa
aaa
je
inc
orb
dec
lock
ljmp
aad
rol
inc
sub
test
sbb
sub
ficomps
repnz
jp
cmpl
push
or
test
dec
mov
cmp
iret
jl
push
mov
add
out
pop
and
add
cmpsb
popa
xlat
lea
ja
xchg
ja
push
push
ja
ljmp
fmuls
mov
jg
ret
lcall
imul
in
inc
mov
xor
xchg
mov
push
mov
jg
xor
insl
jge
and
out
dec
into
mov
push
insl
xchg
repz
and
xor
movsl
cmp
inc
lretw
cmpsl
adc
mov
and
inc
movsb
nop
cmp
icebp
out
fiadds
test
or
clc
subb
addr16
pushf
nop
popf
add
adc
xchg
cwtl
adcb
jbe
in
mov
ja
test
sbb
add
and
dec
inc
or
inc
cmp
jns
outsl
mov
or
inc
xor
bound
dec
sbb
mov
pop
test
cwtl
add
movsl
jmp
ret
cmp
leave
mov
rclb
rcll
sarl
outsl
push
cmc
test
dec
lds
fdivl
sbb
adc
aad
push
testb
sbb
popa
and
xorl
mov
pop
or
cmpl
lea
push
test
clc
cmp
pop
inc
mov
or
mov
mov
jb
rcrb
add
inc
test
jl
xor
daa
stos
xor
jne
out
mov
loope
rcrb
jns,pt
fistps
enter
mov
dec
aas
cmpsb
add
sbb
jge
xchg
stc
bound
adc
adc
lret
movsb
xchg
jne
jne
jg
ds
pop
lock
sub
pop
stos
icebp
lods
inc
aaa
test
loop
sub
les
fsubrs
pushf
out
mov
xchg
add
jne
in
add
lds
mov
dec
pop
sbb
and
pop
adc
jle
adc
xor
popa
add
out
jb
cmp
decb
push
xor
stos
pop
ja
stos
es
enter
fildl
sub
and
movsb
stc
mov
stc
adc
insb
mov
outsl
inc
xor
jne
lea
lret
insb
outsb
cmc
cmp
leave
mov
mov
jno
push
sub
out
adc
dec
pusha
push
push
lcall
sub
lods
ss
mulb
dec
iret
push
inc
leave
mov
test
and
fbstp
test
movsl
lods
xchg
push
in
jge
cmp
cmpb
mov
xlat
pop
push
push
sbb
adc
insl
inc
dec
bound
movsl
fcmovnb
sub
add
pop
dec
out
jmp
ret
dec
cmp
mov
fucomp
mov
add
lods
jle
scas
ja
pop
outsl
ret
sbb
dec
fsubr
xor
cld
mov
xchg
loop
mov
loop
outsl
xor
sbb
cmp
sti
idivl
cmp
jns
push
cmp
or
out
out
sub
push
out
aad
jbe
mov
clc
pop
popa
outsb
lds
repnz
addr16
inc
ja
movsl
mov
arpl
les
mov
xor
test
cmp
sbb
xchg
sbb
popa
pop
xchg
stos
sbb
fistl
xchg
into
jne
sahf
inc
cmpsl
jne
inc
cmc
lret
cwtl
loopne
fdivl
push
cltd
nop
cltd
scas
dec
push
or
mov
xchg
lds
stc
inc
mov
cmpsl
sbb
push
pop
test
into
inc
jne
pop
repnz
lock
inc
mov
jecxz
mov
sarl
mov
push
stos
pop
not
shlb
pop
test
or
add
push
jno
mov
cmpsb
jbe
and
int3
inc
and
mov
jmp
jbe
stc
pop
xor
in
sub
fsts
out
repnz
shl
mov
push
std
cmpsl
loop
loope
inc
cltd
jns
push
dec
push
nop
mov
cmp
xchg
les
jge
ret
mov
mov
std
rclb
ja
xchg
or
pop
repz
int3
jae
pop
adc
and
ja
push
in
test
xor
jmp
jo
cmp
test
mov
and
sbb
sub
call
xor
jns
std
sbb
xor
mov
cmpsb
mov
jge
push
sub
fdecstp
or
mov
in
jne,pn
adc
xchg
cmp
cld
imul
jecxz
adc
sbbb
lcall
or
xor
dec
aas
pop
mov
mov
xchg
lcall
inc
push
cmp
adc
cwtl
leave
insl
lods
ja
sar
pop
pop
mov
mov
nop
jb
cltd
sub
testl
pop
imul
out
test
ret
int3
pop
ret
icebp
pop
imul
aad
mov
jo
repz
inc
xchg
xchg
mov
dec
adc
adcl
in
fbstp
or
jecxz
out
add
add
popa
lea
bound
clc
mov
mov
cwtl
scas
ds
out
repnz
push
ret
decl
mov
in
cli
mov
fmul
mov
dec
ficoml
data16
mov
mov
daa
into
sbb
xchg
imul
int
dec
stc
out
in
shll
repnz
fdivr
inc
mov
push
adc
ret
gs
mov
push
pop
jo
int3
out
add
dec
repnz
cmp
cmc
repnz
and
gs
or
insb
and
inc
movsb
inc
lock
push
push
push
fistps
mov
and
mov
test
or
aas
xor
dec
cmp
fimull
out
or
stos
fisttpl
mov
cmc
push
bsr
aas
xchg
rclb
addr16
psubb
jns
les
pushf
push
sbb
mov
mov
arpl
and
aad
pop
cld
jno
test
into
adc
dec
xor
scas
jbe
std
test
es
mov
cmp
insb
mov
hlt
lock
add
cli
cmp
ljmp
movsl
add
sahf
popa
loopne
xchg
fisubs
insb
loopne
cmp
jns
aam
push
dec
lods
cltd
dec
stc
test
int3
test
das
push
fwait
mov
lcall
mov
outsl
pop
ror
outsb
push
push
popa
mov
dec
pop
movsl
push
xlat
xor
out
sub
cmc
cmp
inc
adc
dec
fisubrl
popa
push
adc
mov
sti
sbb
sbb
and
jns
shl
out
sbb
adc
adc
mov
div
fsubs
and
dec
fmulp
cmp
cmpsb
add
mov
mov
jb
adc
push
data16
cs
sahf
int3
sbb
mov
imul
ljmp
mov
jno
cld
mov
lods
mov
or
nop
sbb
int3
push
sbb
pop
mov
gs
push
pop
adc
sbb
dec
add
mov
addr16
loopne
add
stos
jne
fcompl
scas
push
hlt
pop
cmpsb
mov
xor
fbstp
xor
sbb
add
dec
sub
lret
pop
outsl
jp
in
or
jae
addb
jmp
call
lea
mov
cs
pop
mov
loope
fwait
jecxz
mov
xchg
call
test
shlb
sbb
xlat
xchg
push
adc
je
iret
ret
cmp
inc
jp
sbb
jle
dec
out
leave
mov
sub
nop
xor
dec
aam
mov
scas
and
xor
les
pop
or
aaa
lods
mov
dec
or
mov
mov
jnp
and
push
cwtl
cmp
fsubrs
mov
push
cmpsl
fcmove
push
test
inc
imul
jg
lock
push
jmp
xchg
movsb
push
test
mov
xchg
dec
iret
pusha
jle
call
icebp
pusha
out
mov
jmp
mov
sub
inc
jo
lods
jnp
mov
mov
test
les
test
jecxz
push
lret
shll
js
mov
les
cltd
filds
rorb
cmc
mov
dec
gs
test
jo
int
adc
cmpsb
das
icebp
mov
andl
pop
notl
cmpsb
mulb
pop
mov
cmpb
scas
mov
mov
arpl
movsb
xchg
je
out
cmp
and
ds
scas
inc
jp
mov
jns
popa
xor
or
pushf
or
out
push
call
test
fs
adc
push
jecxz
mov
js
mov
xlat
test
jg
jp
push
cmp
jno
test
pop
popa
in
or
stos
push
jmp
sub
push
or
cmp
in
sbb
lahf
aas
loope
jnp
pmaxsw
xor
xor
stc
mov
push
mov
sub
cmp
lds
pop
xor
outsl
pop
icebp
xchg
sub
adc
ret
fstl
sbb
sahf
xlat
insb
mov
jno
jns
sbb
popa
popl
inc
pop
int3
jge
jmp
jp
pop
fs
out
push
in
jmp
xorl
sti
lret
mov
sbb
test
xor
in
sarl
xor
and
outsb
push
loope
add
add
in
cmp
inc
mov
scas
push
lea
push
jg
icebp
jg
jne
jb
cmp
xor
mov
pop
push
call
punpckldq
mov
jmp
and
icebp
adc
rep
jmp
jo
cli
in
cwtl
rep
jb
cltd
fsubr
leave
scas
adc
xor
sahf
cmpb
dec
scas
cmp
pop
inc
sti
outsb
adc
sub
dec
repz
mov
sarl
dec
lret
mov
adc
xchg
xor
adc
dec
std
daa
cld
pop
pop
mov
pop
sub
or
xchg
pop
sbb
imul
add
pusha
call
aam
scas
xor
mov
int3
loop
dec
push
cmpsb
mov
pop
mov
loop
faddp
div
xchg
push
movsl
aaa
orl
das
lock
and
and
mov
push
gs
icebp
jae
mov
test
and
ds
lret
add
addr16
pop
clc
push
cwtl
pop
pop
mov
fsubr
dec
jbe
rcll
cmp
mov
imul
jae
mov
mov
jg
out
nop
cmp
aaa
mov
fisubs
sbb
mov
mov
xor
fwait
ljmp
lea
fisttps
inc
sub
insl
mov
aam
jb
push
shl
cmp
push
scas
pop
xchg
mov
addr16
cmp
daa
out
loopne
inc
scas
xchg
mov
les
mov
cmp
in
out
push
ret
stos
clc
ljmp
or
repz
cmc
mov
loop
incb
add
add
in
mov
or
ds
mov
int
xchg
jge
sub
std
std
clc
jg
xchg
gs
adc
imul
push
jecxz
scas
es
jmp
insb
pop
sbb
inc
aam
adc
xchg
inc
cmp
sbb
or
insb
jne
jp
mov
es
push
shufps
add
dec
out
or
mov
pop
fwait
add
cmpsl
out
fldlg2
test
test
sub
inc
lret
cmp
jmp
xlat
add
add
test
outsl
rol
mov
dec
leave
or
dec
push
lahf
push
test
popf
ret
mov
fsin
inc
push
pop
aad
aam
shlb
inc
fsubrs
add
push
xchg
ljmp
gs
sbbl
arpl
jb
add
mov
jg
mull
and
movsb
inc
mov
addr16
ljmp
add
jle
rcr
cmp
mov
aas
xchg
stc
or
mov
test
xlat
and
insl
cmp
aad
mov
dec
out
mov
dec
jmp
add
jo
lcall
ss
add
mov
dec
inc
sti
lea
sub
or
fdivrs
loop
add
mov
aas
aas
iret
inc
mov
mov
jb
jl
cld
sub
mov
fsubrp
loopne
cmp
pop
into
and
pop
mov
sbb
adcb
pop
ror
repz
jg
and
lock
bnd
repnz
add
orl
sqrtps
je
dec
jmp
pop
adc
adc
shlb
adc
js
and
orl
jbe
es
sar
mov
popf
aas
sbb
mov
xchg
mov
mov
add
cmp
sahf
sbb
xchg
es
mov
outsb
pop
and
rolb
cmp
je
fstpt
add
rolb
sbb
adc
xor
repnz
push
sbb
push
lea
adc
adc
mov
dec
sbbl
sbb
pusha
and
jo
jo
in
leave
push
add
jle
aad
sbb
mov
ja
cmp
cmp
ds
dec
call
das
mov
mov
fucomi
or
ret
add
int
lcall
andl
fs
mov
jmp
and
xchg
sub
add
loop
loope
sbb
ficoms
popa
push
aaa
and
mov
or
mov
adc
pop
xor
xchg
test
fdivrp
lret
add
or
ret
inc
add
push
lods
mov
repz
fcomps
lods
lcall
clc
xchg
mov
rorb
imul
xchg
mov
insl
pushf
ficoml
ficompl
subl
and
sbb
fisttpl
mov
cmc
pop
cmp
mov
frstor
jbe
xor
cmpl
sub
aaa
or
out
addb
cmpsl
adc
mov
push
pusha
nop
xchg
sub
push
inc
test
js
mov
pop
inc
insl
mov
in
lret
inc
xor
sub
sarb
add
jnp
fsubr
dec
add
and
iret
shll
repz
add
pushf
ja
add
pop
xchg
push
lcall
mov
out
or
scas
dec
mov
push
mov
out
mov
mov
inc
push
inc
insb
and
jo
call
mov
dec
insl
pop
xchg
pop
enter
dec
push
jmp
pop
push
sub
cmp
pop
xchg
mov
stc
hlt
stc
icebp
test
or
aam
rcll
flds
orl
cmpsl
outsl
loop
mov
cmp
xor
pop
jb
add
or
cmpsl
daa
js
adc
push
jg
cmp
xor
push
pop
popa
inc
fcmovnbe
int3
lahf
cmp
mov
pop
sub
and
movsl
push
push
mov
adc
movsb
cmc
sbb
push
addl
jno
add
xchg
sbb
loop
loopne
push
fisubl
iret
sbb
arpl
scas
mov
push
jle
mov
jmp
push
or
push
add
and
jns
sbb
and
cmpsb
dec
lret
mov
xor
lods
out
dec
rclb
adc
pusha
xchg
in
pop
bound
sbb
mov
pop
jle
dec
inc
jns
sub
pop
push
pop
mov
push
out
pop
inc
mov
inc
popf
fwait
test
clc
xchg
into
jl
outsb
dec
nop
push
scas
xor
adc
dec
test
jecxz
sarb
out
mov
mov
call
push
and
push
in
jg
lcall
das
icebp
mov
es
dec
dec
cwtl
shrb
sbb
pop
clc
ret
push
dec
aad
sub
dec
mov
jno
push
in
push
les
push
cmpsl
jge
dec
insb
adc
dec
and
shr
into
push
add
add
or
mov
es
mov
xor
xchg
jl
ret
push
cwtl
and
push
cmp
push
mov
dec
push
stos
mov
mov
sub
repz
and
fwait
xchg
add
mov
or
push
orb
sbb
mov
xor
mov
pushf
addr16
xor
jle
int3
inc
mov
shll
sbb
mov
pop
xlat
in
imul
bound
test
xchg
ret
les
repnz
jbe
jecxz
jg
xchg
xchg
push
and
test
lcall
out
test
sahf
rcrl
xchg
lcall
xchg
outsb
mov
sub
mov
xlat
in
roll
pop
ljmp
iret
cmp
sub
insb
sbb
leave
cmp
outsb
inc
or
lods
xchg
push
fisubs
lret
ljmp
testb
sbb
fcompl
je,pn
xchg
mov
call
rcr
and
dec
in
mov
imul
pusha
sbb
sub
into
es
jg
pop
icebp
or
icebp
and
out
es
xchg
std
sbb
jmpw
int3
jmp
cmp
popf
divb
xor
dec
adc
adc
es
cmp
cmp
mov
xor
ljmp
out
xchg
insl
pop
push
jae
lods
dec
and
test
or
jg
aad
inc
into
test
pop
ss
mov
pop
loopne
pusha
sbb
adc
dec
out
dec
lret
push
stos
std
aaa
xchg
repz
test
das
jecxz
js
mov
shll
adc
iret
add
nop
jmp
test
lods
lds
mov
adc
ror
in
test
ljmp
outsl
arpl
push
jge
jecxz
test
and
mov
std
sarb
dec
aad
rcll
sbb
les
sbb
xor
and
sub
das
push
or
fnstcw
lock
jne
mov
popa
mov
jb
push
inc
movsl
test
add
adc
mov
test
lods
fsubs
cld
xor
fldenv
repnz
sahf
pop
pop
xor
mov
xor
push
imul
dec
xor
jno
inc
pop
or
nop
dec
icebp
and
jge
arpl
mov
jnp
popf
out
mov
cld
dec
fimuls
cs
push
jne
testb
xor
loop
in
xchg
xchg
inc
jge
les
mov
loop
int3
pushf
pop
jg
jno
xchg
outsb
push
or
mov
xchg
dec
int3
sbb
jmp
inc
add
mov
mov
fyl2x
leave
pop
aam
inc
and
stc
xor
in
loopne
adc
push
xor
mov
and
mov
lret
divb
rcrl
in
xchg
jb
mov
outsl
mov
mov
shll
xchg
xchg
jb
xchg
mov
and
pop
cli
loop
movsb
jg
push
and
int
rorb
nop
dec
popa
sahf
ds
arpl
push
xchg
jbe
pop
jg
mov
or
movsl
pop
popf
out
push
pop
and
iret
aam
sarl
xchg
mov
das
imul
push
leave
dec
cmp
inc
pop
addr16
jbe
jmp
in
negb
sub
in
aam
mov
or
mov
jne
mov
mov
sbb
sub
add
lds
mov
mov
mov
push
jg
fistpll
cld
imul
pop
movsb
jae
mov
inc
push
xchg
mov
mov
dec
pushf
add
fldenv
enter
adc
mov
roll
mov
or
cmp
push
fsubs
scas
xor
add
hlt
filds
or
loopne
pop
mov
jae
adc
sbb
xchg
sbb
push
pop
mov
inc
dec
and
aas
pop
inc
je
dec
dec
in
inc
xor
repz
mov
loope
insl
mov
pusha
pop
pop
pushf
iret
inc
imul
movsl
lods
cmp
xchg
jg
in
daa
and
inc
test
cwtl
add
clc
insb
mov
cmp
mov
mov
dec
sbb
fcoml
cmp
lods
ret
push
xchg
sarl
push
lcall
out
mov
mov
lret
add
cltd
mov
cmpl
adc
sbb
aam
or
jp
imul
popa
xchg
inc
dec
decb
ficompl
sub
sbb
pop
aaa
shlb
scas
aam
sub
ffree
test
outsl
aas
std
movsl
push
xor
and
inc
jg
sub
mov
data16
sub
insl
cmp
sti
test
test
jb
imulb
movsb
shl
dec
mov
insl
iret
outsb
mov
mov
outsl
push
or
sub
mov
add
das
pushf
mov
or
mov
xchg
call
xchg
shrb
xchg
dec
mov
xor
pop
pop
xor
ret
xlat
daa
cmpsl
in
xchg
inc
cmpsl
imul
rorl
xchg
or
pop
push
push
call
movsb
add
ds
cmp
pop
dec
jp
xor
lcall
stc
std
adc
lret
imul
hlt
push
lods
sub
inc
adc
lcall
push
cld
mov
pop
in
jecxz
out
add
fnstenv
mov
inc
loope,pn
mov
lea
cs
xchg
mov
adc
cltd
cmp
pop
or
mov
pop
inc
jl
decb
subb
jecxz
sbb
cld
mov
cmpsb
mov
mov
pushf
in
sub
cltd
xor
fcmovbe
inc
scas
fs
movsb
movsl
cmp
and
or
std
mov
pop
jg
sti
and
or
cmp
adc
cmp
rclb
scas
mov
pop
mov
jb
je
mov
hlt
dec
jno
fidivl
mov
popa
sti
pop
cmp
out
syscall
jge
popa
out
push
sbb
push
out
add
mov
cmp
daa
ret
fidivrl
cmp
sbb
movsb
out
sets
jmp
pop
fildll
mov
rcll
push
in
int
xlat
bound
add
push
pop
adc
sub
sub
bound
lea
jo
scas
sub
ljmp
data16
jmp
pop
aam
shlb
add
lods
cmp
mov
xchg
test
dec
push
adc
stos
and
adc
xor
and
pop
xchg
mov
dec
sub
pop
jno
xlat
aas
test
imul
jge
or
dec
xchg
sti
lcall
int3
aaa
cld
ja
push
adc
mov
outsb
je
lahf
add
or
subl
mov
mov
loop
or
adc
movsb
sub
inc
div
lods
push
fsubrs
das
cmpsb
push
xchg
push
and
jl
cmpsl
or
sub
xchg
cld
xchg
ja
xchg
mov
sbb
sbb
mov
ljmp
cmp
das
scas
mov
xchg
mov
push
xchg
and
xor
aas
xor
shlb
jb
jle
inc
mov
mov
inc
and
lcall
ret
jnp
cmp
sub
jmp
xor
rcr
addl
or
popa
lock
stos
ljmp
or
mov
pop
xchg
jmp
bnd
dec
dec
js
adc
cli
pusha
inc
in
mov
add
fsubrs
mov
push
out
int
ret
mov
sbb
aam
andb
push
mov
mov
sub
push
mov
mov
or
mov
mov
sub
inc
ss
inc
into
inc
daa
and
mov
xchg
pop
out
outsb
int3
das
mov
scas
das
andl
xchg
test
adc
sub
add
mov
fistpl
imul
jne
pop
xlat
mov
test
cmpsl
xchg
pop
cmp
sub
adc
mov
mov
test
dec
sub
adcb
lret
divl
mov
sbbb
test
jb
jnp
jb
sub
add
mul
loop
outsb
insl
pop
pop
fldl2e
insl
imul
imul
sbb
push
fwait
sub
fdivrp
jo
mov
decl
sbb
sbbb
xor
int
pop
inc
xlat
lret
popa
mov
add
cmp
in
dec
out
push
aaa
mov
ror
mov
movsb
adcl
sub
into
dec
out
aaa
xor
and
push
xor
mov
flds
push
sub
cmp
and
push
push
into
movsl
mov
repz
popl
mov
pop
xchg
insb
ja
pop
pop
or
pop
movsb
push
pop
fidivrs
pop
mov
movsb
addr16
lds
push
cld
jmp
dec
xorb
lea
nop
imul
jecxz
xchg
sbb
fisubl
or
pop
xchg
mov
in
push
lock
and
mov
inc
mov
sbb
in
mov
xorb
das
ss
mov
aad
cmp
inc
call
lods
sub
iret
arpl
repnz
int
lods
dec
jno
loop
aas
inc
lea
or
sbb
jbe
aas
jns
add
pushf
pop
cmp
call
cmc
pop
jle
push
pop
mov
adcl
mov
jp
dec
push
and
cmp
test
out
cli
jae
mov
aam
xor
inc
lea
imul
mov
outsl
leave
mov
stos
xor
or
leave
push
mov
xchg
stc
jb
fs
testl
dec
cld
pop
adcb
push
inc
dec
inc
mov
aad
scas
popf
mov
ljmp
aas
int3
mov
out
mov
movsb
jbe
jns
mov
aas
adc
in
xchg
and
jmp
jae
add
fildl
sarl
enter
aaa
sahf
pop
lret
out
sti
and
test
inc
and
rorb
shll
mov
cwtl
pop
es
mov
std
jno
jnp
addr16
cld
fisttps
popf
movsb
rolb
popf
insb
aad
movsl
inc
sti
inc
mov
popa
jno
pop
xchg
add
scas
data16
lret
jle
orb
mov
cmp
inc
xlat
dec
push
inc
mov
sbb
dec
lcall
cmp
int
lret
ret
pop
fisttps
aad
cmp
js
lods
cmp
es
std
dec
ror
xchg
test
xor
cltd
mov
addr16
sub
hlt
inc
ss
cmc
loopne,pn
dec
cmp
jne
jecxz
leave
sbb
mov
mov
fistps
push
lret
test
orl
xchg
ficomps
pop
sti
pop
push
cmc
pop
jl
add
loope
bound
push
inc
arpl
adc
out
ds
roll
movsb
sbb
xor
xchg
mov
mov
and
les
idivb
jae
mov
lock
outsb
mov
sahf
ja
push
mov
xlat
mov
dec
out
adc
cmc
push
mov
stos
aad
pop
aaa
sar
daa
dec
lods
lahf
scas
fistps
inc
scas
or
rorl
inc
dec
popf
int
cmp
test
jne
fsubrs
cwtl
push
je
pop
jnp
testl
pusha
fisubs
arpl
push
pop
out
pop
add
cmpsl
add
pop
leave
jbe
add
std
mov
daa
pop
xor
cmp
push
mov
adc
lret
lds
and
adc
or
loope
cmp
popa
sbb
mov
orl
pop
insl
movsb
jl
loopne
popa
and
stc
testl
pop
fisubrl
xchg
cmp
sbb
call
xchg
push
into
aam
test
dec
sbb
dec
mov
cmp
lock
sbb
sub
stos
push
iret
ffree
dec
aas
or
mov
in
faddl
fsubl
shrb
dec
inc
mov
lock
mov
shll
repz
mov
test
out
dec
fdivr
lds
inc
lret
inc
pop
xor
mov
mov
jge
jo
mov
insb
rcr
sub
mov
sbb
pop
jne
dec
xchg
addr16
adc
loop
dec
xchg
xchg
pusha
subb
lea
pop
push
or
repz
leave
sub
xor
push
popa
push
jmp
mov
xchg
add
cmpb
imul
xchg
jmp
je
lods
loop
popa
mov
shrb
pop
push
pop
and
test
repnz
cli
test
cmp
jge
adc
add
fildl
pop
xchg
mov
adc
jle
sbb
inc
out
stos
cmpsl
push
wrmsr
mov
mov
push
inc
add
daa
cmp
ficoml
rcrl
xchg
cld
mov
arpl
loop
js
jns
mov
mov
mov
cmpsb
xchg
out
dec
xor
xchg
imulb
mov
cwtl
ljmp
in
xorb
adc
xor
in
mov
inc
cmp
fs
rcr
cmpsl
pop
jp
jne
jns
es
scas
cmpb
fsubl
xor
mov
jns
mov
add
fwait
pop
jg
dec
popa
push
daa
decl
hlt
std
adc
jno
pop
icebp
sbb
pop
xchg
popa
or
push
aad
xor
jp
mov
inc
mov
xchg
mov
push
pop
inc
inc
dec
inc
lret
pop
test
fwait
add
jge
arpl
jmp
lea
out
scas
jno
push
int
insl
push
pop
fs
imul
notl
xchg
push
cmc
xchg
add
cmp
popf
les
fldt
and
bnd
jmp
iret
pusha
pop
mov
sbb
ficoml
xchg
sar
insl
xchg
in
test
jmp
mov
cmp
pop
adc
sub
fistps
arpl
loop
pop
push
xor
lds
push
or
outsl
mov
jg
push
andb
sarl
inc
stos
fsubrp
and
jns
daa
jmp
out
add
call
xlat
loop
insl
bound
pop
arpl
cmp
outsb
loopne
adc
sbb
cmp
mov
repz
push
add
int3
into
out
lods
sti
fisubrs
notb
mul
out
xor
pop
xor
dec
push
sub
cmp
mov
call
inc
aaa
cmpsb
jmp
mov
rcl
into
inc
mov
pop
cmpsl
insb
mov
les
enter
sub
pop
mov
mov
jne
dec
fsts
test
xor
dec
mov
test
jns
bswap
sbb
adc
or
arpl
xorl
xchg
inc
loop
inc
in
mov
push
scas
pop
add
inc
inc
cmp
push
push
or
fisttps
stc
dec
xchg
popa
jecxz
movsb
dec
ss
in
mov
fiaddl
loopne
mov
sarl
test
lds
jl
adc
mov
inc
jns
inc
push
js
lahf
sti
into
insl
js
pop
cmp
pop
pop
insl
dec
in
nop
push
ret
lock
addr16
inc
ds
test
dec
mov
pop
outsb
loopne
divb
out
xor
dec
jge
pop
push
leave
and
ss
sti
ljmp
mov
lods
test
sub
dec
jmp
sbb
arpl
mov
mov
mov
pop
outsl
add
loop
sub
push
mov
loop
mov
sahf
call
loopne
xor
das
test
int3
mov
out
aaa
loopne
das
mov
mov
xchg
movsl
mov
in
sub
cmp
lds
call
push
test
xchg
or
sbb
cli
pop
int
pop
push
add
rcpps
lea
lods
negl
cmp
insb
sbb
outsb
pop
pusha
push
inc
add
ljmp
in
pop
adc
icebp
pop
jecxz
es
insl
jmp
cs
mov
stos
pusha
inc
ljmp
outsl
push
push
xchg
xor
adc
add
inc
cwtl
push
mov
push
pop
scas
lret
xor
xchg
pop
push
mov
dec
in
dec
fisubs
pop
xor
xor
sti
enter
les
pop
imul
push
aas
mov
aaa
pop
aam
fstp
mov
push
loopne
inc
mov
xor
sbbl
pop
or
xorl
mov
push
dec
leave
stos
add
outsb
jmp
stc
out
mov
pusha
insb
jno
mov
fwait
outsb
ss
push
xor
xchg
adc
subb
ja
mov
pop
sub
notb
dec
mov
mov
lahf
clc
outsl
cld
sub
pop
sbb
stos
fdivp
icebp
mov
das
jmp
mov
lea
pop
lea
mov
mov
dec
sahf
addr16
fcmovb
ja
pop
clc
pop
repnz
cmc
pusha
xchg
xchg
sti
mov
cs
mov
add
jns
push
repz
jp
mov
fstps
pop
mov
or
ss
inc
pop
and
dec
adc
sub
jge
popa
les
out
ljmp
shlb
cmc
sti
push
jp
in
rcll
sbb
call
les
pop
daa
cld
mov
out
mov
xchg
cmp
ret
sbb
add
ljmp
push
fstpt
or
cmpsb
jb
jp
out
sti
xchg
orb
pop
pop
fsubp
push
sub
adc
out
push
mov
xchg
push
pop
jns
jmp
sub
cmc
adc
imul
xchg
aam
mov
adc
icebp
rcll
lock
pusha
mov
jp
cmp
out
leave
pop
aam
popa
ja
stc
xlat
cli
dec
outsl
cmp
dec
xor
xchg
lret
pop
pop
xchg
sub
je
cmpsl
gs
mov
or
call
adc
cmp
push
push
les
popf
xchg
sub
mov
inc
aas
sub
adc
mov
mov
in
mov
cmp
ss
pop
fidivl
add
mov
push
xchg
and
je
cmp
sub
cmp
fld
sbb
call
in
push
lret
cmc
jl
in
pop
lds
add
test
jl
enter
or
add
popf
mov
xor
outsl
mull
outsb
hlt
cmc
add
mov
addr16
pop
mov
xchg
sub
mov
fidivs
insl
movsl
dec
jle
roll
push
xchg
xor
imul
idivl
cld
popl
loop
xor
mov
scas
aas
xchg
mov
aaa
push
orl
iret
out
mov
jmp
mov
inc
out
loope
fwait
sahf
and
xchg
repnz
inc
jo
jge
mov
xorl
push
jb
inc
xor
push
push
mov
jne
jle
adc
fs
mov
xor
sbb
sbb
js
js
out
push
decb
jle
mov
adc
lahf
cmpsb
mov
xchg
inc
dec
push
mov
mov
inc
dec
jg
mov
cli
fwait
ret
fnsave
loop
mov
pop
inc
inc
pusha
in
add
mov
aam
arpl
mov
xchg
je
xchg
fucom
and
movsl
xchg
rcl
mov
fwait
inc
or
mov
push
cli
rol
xchg
mov
enter
pop
push
push
mov
addb
sarb
loop
gs
enter
pop
dec
xor
ljmp
mov
push
adc
imul
pop
outsb
out
lock
repz
lret
or
dec
fadds
filds
cli
and
ret
jl
sti
adcl
push
push
cmp
adc
in
jne
or
in
fistps
adc
gs
mov
mov
sub
stos
xchg
xchg
and
mov
cmpsl
rcrb
mov
jb
int3
es
xchg
mov
fstps
int3
pop
mov
pop
add
push
and
cmp
in
test
ljmp
fwait
popa
mov
jo
ss
outsl
repnz
inc
xchg
or
or
push
sub
rorl
fwait
cld
mov
mov
aaa
daa
mov
mov
mov
push
jbe
adcb
testb
inc
sub
mov
push
ja
pop
jo
or
cmp
dec
mov
pop
mov
test
jle
mov
out
movsb
mov
loopne
dec
hlt
popf
arpl
into
ret
sub
xchg
cmp
xchg
minps
in
cmp
les
shll
add
push
ficoml
mov
xor
sbb
dec
ret
sbb
icebp
pop
std
sbb
adc
xor
mov
xchg
movsb
push
leave
xchg
das
jne
inc
into
test
sbb
xchg
in
out
dec
in
jo
icebp
test
rclb
xchg
push
jae
jns
das
sub
or
lds
xchg
xor
adc
mov
add
cli
push
mov
pop
test
in
pop
mov
test
xchg
xor
cwtl
fimull
xchg
xchg
insb
lret
js
pop
loop
dec
push
outsl
inc
inc
xchg
or
cmp
jae
insl
out
xor
mov
je
nop
adc
pop
push
mov
jle
push
ljmp
js
jmp
sbb
outsl
cmp
pop
negb
cmp
pop
in
jecxz
mov
push
js
push
cwtl
jge
mov
adc
cltd
call
xchg
push
cmp
in
add
fsts
lea
add
dec
ret
fisubs
xor
mov
icebp
add
lret
scas
in
fcoms
hlt
push
inc
popa
and
push
or
fwait
pop
addb
pop
das
insl
sub
xor
inc
xlat
test
xchg
add
lret
push
psrld
test
lret
jnp
imull
inc
fs
imul
cwtl
js
data16
jbe
add
mov
sbb
and
lods
jge
mov
xor
not
push
cs
inc
sub
dec
add
or
or
jg
push
int
loope
pop
jno
cmp
call
orb
cli
lods
out
add
xor
jl
push
jnp,pt
xchg
pop
mov
sub
in
insb
sti
hlt
sub
ds
push
or
lock
cmc
xchg
sahf
mov
cld
xlat
test
fwait
mov
cwtl
adcb
mov
xchg
cli
and
test
fnstsw
dec
insb
xor
adc
pop
or
sub
mov
xor
dec
stos
mov
mov
sahf
test
test
mov
cmpsb
rolb
pop
mov
imul
mov
daa
inc
cmp
jne
cmp
movsb
loop
in
xor
sub
rcrb
fnsave
stos
es
cltd
mov
imul
in
filds
inc
adc
call
xchg
dec
add
xor
lcall
sbb
push
xchg
pop
cmp
xor
aad
mov
sub
dec
ja
iret
jp
cs
adc
cld
add
and
dec
push
insl
ljmp
mov
ss
adc
sub
jle
cmp
les
mov
adc
int3
sbbb
inc
push
lds
push
addl
mov
shlb
jg
mov
mov
lcall
push
in
sub
cwtl
shr
pop
jne
and
test
push
in
dec
mov
inc
fnstsw
pop
mov
orb
pop
mov
jbe
jnp
les
mov
leave
push
lea
push
adc
mov
xchg
pushf
fcom
jne
sti
xor
xchg
jbe
ret
fdivl
and
cmc
into
cwtl
outsl
mov
adc
push
fcoms
cmp
pop
aas
je
rcll
mov
push
xlat
scas
stos
dec
aad
sahf
inc
out
cli
pusha
aas
std
andl
cmp
enter
fistl
mov
xor
sahf
inc
out
aas
xchg
adc
leave
mov
sbbb
jnp
push
test
test
jecxz
and
add
stos
dec
push
mov
jnp
inc
out
pop
clc
pop
xor
data16
scas
fnstsw
mov
xchg
lret
xchg
cld
push
aad
addr16
addr16
sbb
pop
mov
stc
in
test
mov
lds
add
and
inc
lods
scas
shrb
pop
pushf
sbbl
test
mov
nop
inc
je
sub
mov
imul
rcrb
mov
pusha
fdivp
push
outsl
pop
mov
cmc
adc
jle
test
fisttps
jb
push
mov
jnp
rorb
pop
pop
mov
push
lock
or
jno
pop
popa
lods
in
xor
shr
xor
je
push
sbb
std
xchg
shlb
aas
jae
mov
fs
xor
jp
movsl
stc
mov
repnz
xchg
mov
pushl
sub
cwtl
pop
arpl
cli
sbb
inc
arpl
inc
outsl
rol
xorl
andl
mov
mov
sti
mov
adc
sub
sbb
push
and
test
xchg
loopne
push
xchg
jg
and
add
arpl
xchg
pop
xor
fs
mov
shr
movsb
mov
icebp
and
test
frstor
nop
repnz
fs
icebp
jo
shrl
mov
outsl
loopne
pusha
mov
add
xorb
sbb
add
xchg
orl
dec
cmp
popa
push
icebp
pusha
daa
aaa
sbb
jno
mov
adc
gs
or
push
push
stc
cmpsl
lret
dec
fmuls
push
cmp
test
neg
adc
leave
dec
dec
push
push
push
push
or
push
sub
push
lret
lret
ror
lcall
dec
adc
jne
mov
pop
test
mov
mov
pop
mov
jp
mov
push
lods
out
mov
lods
mov
xor
std
add
test
add
in
add
negl
data16
dec
adc
or
sub
pop
jg
rorb
cld
test
popa
scas
push
mov
mov
jo
lods
or
cmpsb
rolb
test
int3
cs
sbb
adc
sbb
dec
aas
cld
mov
push
lahf
or
je
adc
adc
sbb
addr16
inc
aas
aam
or
push
adc
inc
jge
xchg
in
repnz
shlb
fisubrl
jo
loop
jne
xor
push
mov
xlat
clc
sahf
and
lds
cs
add
adc
out
adc
jg
mov
inc
adcl
xchg
jmp
es
loop
pop
xor
test
ds
scas
cmp
inc
pop
xchg
int3
test
cmp
push
xchg
lret
jle
movsl
push
push
mov
mov
dec
in
js
mov
shlb
xchg
pop
xor
cmpsl
rolb
xchg
ss
cli
inc
xlat
int3
lock
popa
adc
test
adc
sbb
es
frstor
dec
ss
outsb
and
call
dec
addr16
decl
jmp
add
inc
lods
xchg
inc
popa
push
lods
inc
loop
push
xchg
xchg
cmp
stc
je
xchg
and
adc
push
lret
loop
das
test
adc
shll
ret
popf
ret
stc
in
ret
cmp
add
test
mov
or
push
jno
xor
pop
adc
add
xchg
xchg
mov
push
inc
inc
ljmp
loopne
cmc
fst
push
addb
xchg
loopne
mov
arpl
fadd
adc
jg
loopne
push
dec
push
arpl
movsb
divl
sbb
mov
xchg
xchg
xchg
iret
xor
jnp
sub
imul
ret
leave
mov
ret
xchg
mov
add
pusha
data16
add
sub
cmp
push
sub
push
or
cmp
mov
insb
mov
mulb
mov
cwtl
js
aad
dec
mov
pusha
lods
fdivrl
sbb
ss
sbb
xor
out
test
js
icebp
imul
mov
andl
inc
inc
dec
pop
mov
push
pop
inc
in
pop
lahf
and
jp
popf
test
xchg
fldcw
rcrb
jl
jae
push
jecxz
xor
mov
jno
xor
xor
mov
or
mov
negb
xchg
inc
mov
rclb
cli
pop
or
sbb
push
dec
lcall
or
popa
cmc
inc
aam
aas
sub
mov
xchg
inc
add
into
cmpsb
and
add
addr16
hlt
sbb
add
imul
es
cmp
mov
popf
ja
push
jo
jecxz
in
sbb
pop
cmp
adc
roll
mov
pop
mov
mov
fwait
push
movsb
insl
rcrl
test
test
cmpsl
xchg
add
sahf
sub
jg
jecxz
out
adc
dec
outsb
push
mov
loopne
rclb
mov
push
cmp
mov
mov
push
adc
sub
aas
ljmp
sub
xchg
xor
fwait
push
pop
xchg
mov
sbb
orb
enter
pop
addr16
add
jecxz
adc
push
ss
testb
push
rep
push
sahf
into
idivl
stos
pop
xor
add
popf
xor
and
cmpsb
imul
les
push
andb
cmpsl
and
jmp
sub
xchg
fldenv
pop
enter
adc
mov
lods
sbb
test
stos
icebp
or
xchg
or
test
jl
mov
lods
mov
xchg
nop
fwait
cmp
lcall
sahf
sbb
lret
cmp
push
sub
sbb
mov
stc
fs
cmpsl
cmp
mov
push
inc
mov
xchg
push
dec
mov
test
push
dec
out
gs
hlt
or
xchg
and
xchg
sub
dec
mov
push
imul
rcrl
addb
mov
popf
adc
xor
test
xchg
ss
xchg
shrl
inc
imul
sti
pop
cs
shlb
gs
jle
inc
add
aaa
pop
mov
out
jle
aam
lock
push
test
jle
jno
icebp
cmp
sbb
arpl
int
jmp
fwait
mov
cli
mov
mov
xchg
push
lret
jae
fucomi
roll
push
inc
test
mov
iret
shrl
jmp
push
repnz
cltd
scas
mov
sub
mov
cmc
cmp
push
inc
dec
fcoml
fistpl
dec
sahf
inc
pop
sti
mov
test
loope
clc
pop
movl
fisubl
push
dec
jns
sbb
addr16
fildll
cltd
loope
adc
fcoml
pop
pop
dec
shr
in
mov
pop
jnp
and
rcr
sbb
jle
push
lret
add
mov
cmp
rorl
jge
int3
adc
mov
fs
fs
sbb
aad
lret
fwait
out
pusha
imul
ja
push
inc
cltd
jae
aaa
add
in
fs
pop
xlat
fldenv
clc
mov
das
repz
jbe
jo
cmpsb
jp
pop
mov
loopne
pop
adc
scas
pop
test
hlt
xor
sahf
jp
rorl
andl
or
xchg
cmpsl
lcall
add
jmp
std
fadds
sub
jge
mov
jo
imul
ds
sub
lret
roll
mov
dec
mov
stc
dec
out
cmc
pop
dec
sub
inc
iret
aaa
mov
mov
enter
cmp
ficoml
mov
imul
dec
push
push
sub
push
sahf
out
inc
mov
dec
repnz
inc
add
xchg
jg
enter
jnp
dec
int
std
in
lahf
nop
sbb
imul
insb
lock
js
xor
clc
loop
pop
stos
daa
outsb
lds
push
push
xor
mov
push
cmpsb
cmp
cli
mov
mov
out
dec
push
dec
idivb
fidivs
shlb
faddl
pop
xchg
inc
std
dec
sbb
stc
cmp
xchg
out
pop
gs
movsl
dec
lea
mov
movsl
jmp
ret
sub
mov
mov
cmp
add
lock
cltd
cmp
sub
nop
sbb
pop
dec
cmpsb
jnp
mov
pop
filds
loopne
cmpsl
ret
mov
movsl
jmp
aas
bound
pop
lahf
mov
jbe
dec
push
and
cwtl
push
lods
push
or
sbb
jb
cs
push
inc
popa
outsb
clc
mull
stc
jbe
cmp
xor
cs
dec
push
and
sti
outsb
inc
xchg
sbb
pop
bound
cmp
fistpl
inc
pop
lcall
aad
shl
bound
lods
xchg
add
ds
jl
int3
mov
sbb
fucom
popf
shll
fisubl
test
ret
jl
mov
mov
jnp
cmpb
jne
loop
mov
pop
rcl
mov
mov
pop
jecxz
cmp
cmp
and
lods
aad
cmp
push
mov
imul
xchg
push
sti
xor
inc
pop
clc
cmc
sub
fucom
or
sbb
insl
adc
adc
sub
scas
or
adc
sbb
xchg
out
fadds
rolb
scas
inc
shlb
jg
cmpsb
fcomps
and
add
add
test
xor
xchg
and
or
mov
in
mov
push
or
pop
lret
jecxz
aad
mov
sub
mov
loop
mov
testl
jo
into
inc
add
jecxz
cld
adc
enter
loopne
jo
lret
addr16
dec
sbb
shlb
pop
mov
in
push
fwait
and
cli
adc
divb
pop
stc
mov
dec
cmpsl
fsubrl
pop
leave
cmc
push
mov
or
jbe
jne
ds
sbb
xor
mov
jmp
xor
jns
sub
sbb
dec
insb
dec
dec
sbb
xchg
cmc
mov
xlat
or
cmp
cmpsl
test
push
scas
jg
and
clc
ja
adc
xchg
fbstp
push
or
imul
fisubs
xor
xchg
aam
shrb
xchg
ret
data16
icebp
mov
cmp
sub
push
mov
push
dec
adc
sti
je
addb
int3
cmpsb
insl
mov
andl
pop
add
imul
cmp
cmp
pushl
jne
jecxz
mov
ds
add
or
adc
test
lods
sub
jno
jge
cmp
and
addb
pushf
mov
leave
sub
mov
sub
add
cwtl
add
and
mov
movsb
push
push
push
pushf
daa
popa
xchg
push
adc
sahf
cli
pop
xchg
pop
mov
cli
jg
inc
fs
lock
scas
lods
cli
in
rorb
rcr
andb
shr
or
into
xor
daa
cmc
pusha
fs
xchg
movsl
mov
dec
mov
sbb
out
inc
xchg
in
dec
sbb
xor
pand
push
cmpsl
xchg
pop
rolb
jae
push
dec
fldcw
out
mov
call
pop
push
mov
or
mov
dec
jge
adc
cwtl
mov
shll
out
sti
sub
ret
cmp
add
xchg
jns
adc
loope
adc
mov
jae
push
stos
inc
push
fwait
fs
xor
cli
sub
mov
cmp
insb
rorb
jmp
xor
das
in
sub
cs
mov
jae
push
and
and
add
add
das
into
jnp
push
loopne
and
xchg
pop
cli
cwtl
pop
sbb
ds
insl
shlb
icebp
sbb
adc
sti
rcl
repnz
pushf
sbb
fnstenv
lahf
push
popa
pop
stc
ret
push
jo
push
push
fcoml
xchg
pop
xchg
sub
in
jns,pt
test
pop
mov
mov
lods
jbe
lods
adc
and
fsub
mov
cmp
loop
jb
repz
repnz
ret
lret
cmpsb
jl
and
adc
lret
or
adc
jnp
push
ljmp
adc
jbe
pop
xor
pmulhuw
aas
pop
fistl
xor
xchg
jns
dec
and
inc
lahf
loop
je
mov
fstl
sub
add
mov
lods
fstps
popa
dec
xchg
jb
roll
cli
xchg
inc
dec
add
insb
dec
ljmp
inc
mov
scas
lret
xchg
pop
mov
inc
jae
stos
stos
lea
sub
leave
cmp
cmpsb
cmp
push
lock
in
mov
adc
pop
outsl
dec
addb
inc
mov
xor
cmp
push
test
add
adc
fidivrs
in
dec
loope
fwait
icebp
jo
cmpsb
imul
mov
cmp
jno
repnz
fdivl
inc
xchg
sti
mov
dec
jbe
rorb
in
jp
push
cmp
push
mov
cs
ret
outsb
out
popf
push
ret
je
add
cwtl
cmp
push
lahf
aam
xor
shlb
ja
or
rcr
adc
movsb
pop
cmpsl
movsl
mov
dec
cmc
pop
loope
clc
shlb
cmp
sub
pop
stos
pop
insl
pop
ret
shlb
mov
sub
repnz
flds
jne
outsb
in
cmp
iret
mulb
and
aaa
and
sub
mov
jae
aas
and
pop
mov
repz
pop
dec
jge
cwtl
test
leave
sub
je
dec
and
fcmovbe
imul
gs
xor
cmp
add
pop
push
mov
dec
cmpsl
rclb
inc
jle
test
imul
gs
inc
push
inc
repz
sub
mov
mov
jno
adc
cmpl
and
sub
ret
jmp
scas
into
and
push
xchg
xchg
push
mov
lret
in
xor
sub
pusha
mov
sti
jp
dec
push
pop
daa
or
dec
jg
icebp
push
inc
mov
test
stc
jle
and
ja
fidivs
sub
sarb
iret
lret
xchg
mov
out
cmp
testb
int3
test
repnz
jbe
pop
xchg
and
add
sub
xlat
cld
inc
int3
or
adc
test
call
mov
mov
inc
outsl
call
int3
fmul
incl
mov
or
jl
test
fidivrl
inc
and
pop
mov
sbb
jae
icebp
sub
mov
lea
mov
xorb
push
push
xor
add
scas
in
sti
ss
mov
push
jmp
mov
xchg
cmp
mov
lods
mov
pop
or
jb
add
lods
and
xor
shlb
cmp
sbb
lcall
sbb
push
dec
xor
icebp
sbb
jo
js
inc
or
test
push
popa
adc
xor
push
cmc
cmp
pop
out
pop
pop
jle
ret
or
push
data16
jns
xchg
sahf
sub
xchg
shlb
imul
cmp
jae
and
nop
mov
cli
inc
stos
outsl
sub
cmp
pop
clc
add
dec
xor
xchg
cmp
sbb
std
imul
das
push
pop
clc
mov
outsb
int3
xchg
push
jge
call
cs
jp
ljmp
fadd
nop
loopne
or
fisttpll
out
sub
sub
sar
nop
lcall
sti
arpl
das
aas
mov
xor
cmpsb
pop
es
add
mov
addr16
and
repnz
jmp
and
in
inc
jnp
outsl
sarl
frstor
mov
pop
xor
repnz
sbb
fnstsw
xor
add
xchg
outsb
hlt
and
jns
mov
sub
cmpsl
aam
mov
xchg
inc
sbbl
adc
pop
pop
mov
bound
icebp
push
scas
xchg
jns
out
mov
push
mov
sub
in
jbe
fiaddl
push
lods
cmp
jb
out
loopne
push
insl
fs
popf
cmpxchg
add
cmp
repnz
nop
xorb
je
mov
jecxz
mov
xlat
add
roll
in
cmpsl
xor
or
cmpsb
pop
mov
loopne
loopne
std
and
scas
lcall
xor
pusha
jl
mov
scas
push
out
or
icebp
push
scas
icebp
dec
inc
dec
arpl
fstpl
sarl
sub
into
sbbb
pop
and
lods
dec
int3
leave
xchg
push
aam
test
fistps
and
cld
jno
loop
jg
out
sbb
sbb
push
mov
push
mov
jmp
addr16
or
jno
fmuls
xchg
jae
std
mov
out
sub
stc
test
jno
pushf
push
pop
outsl
insl
mov
sub
jb
fpatan
mov
cmpsb
enter
dec
and
test
cmpsl
xchg
jo
jle
mov
pop
out
fwait
cld
lcall
mov
hlt
aaa
mov
movsl
inc
fwait
outsl
cs
fistpl
cmp
sbbl
cmp
push
xchg
aaa
sti
gs
je
addr16
iret
lahf
imul
mov
and
xchg
roll
lahf
and
das
loopne
pop
xor
mov
mulb
negb
int
data16
clc
sub
pop
xchg
push
hlt
cmc
xchg
mov
iret
movsb
ficoml
aam
test
and
push
jne
stos
fcoml
das
mull
inc
mov
mov
add
gs
xorb
jae
sbb
hlt
scas
inc
scas
or
push
push
mov
shl
xor
dec
pop
xchg
xchg
ret
in
imul
dec
pop
shrb
out
test
jae
inc
jmp
scas
ljmp
mov
add
xchg
cmpsl
jg
cmp
pop
shr
xor
push
addr16
aam
mov
sub
repz
mov
pop
ss
pop
loopne
inc
jl
push
dec
outsl
loop
ss
lcall
lcall
dec
ljmp
cs
loopne
mov
addl
or
pop
imul
imul
fnstsw
dec
jecxz
fs
movsb
or
fsubrs
or
sub
xor
lds
fwait
mov
xchg
mov
push
adc
sti
xor
repz
push
mov
adc
or
mulb
or
lock
pop
sub
xchg
adc
test
cli
xchg
cmp
mov
pusha
jl
cmpsb
outsb
inc
dec
sbb
adc
mov
xchg
cmp
ss
imul
sti
je
pop
aaa
leave
repnz
repz
ret
pusha
ficompl
lret
sbb
jae
das
aaa
int
xchg
dec
dec
stos
sarl
je
pop
outsb
fnstcw
and
xchg
sbb
mov
insl
mov
xor
xor
test
insb
insb
push
xchg
insl
icebp
out
cmc
dec
in
insl
fst
xlat
arpl
les
mov
or
scas
sub
push
cli
cs
mov
xor
xchg
fnstsw
inc
outsb
sub
or
ljmp
mov
filds
xor
call
add
push
sbb
andl
push
out
mov
scas
inc
add
xchg
pop
stos
pop
mov
mov
nop
into
xchg
mov
jg
or
cmp
cmpsb
gs
mov
ret
mov
imul
adc
ja
push
cmpsl
lret
push
aam
popf
cmp
cmc
inc
inc
jge
or
int
dec
dec
shrb
jne
pushf
mov
lods
shrl
add
sub
lods
xor
out
mov
loopne
adc
dec
sbb
mov
push
jle
mov
mov
or
xchg
xchg
mov
inc
mov
mov
add
inc
ss
cltd
mov
jg
jmp
dec
push
movsb
insb
lods
mov
cs
jecxz
jae
or
scas
adc
in
testb
pop
mov
mov
add
dec
inc
insl
xchg
aaa
xor
cmpsb
pop
std
push
adc
aaa
fwait
add
cmp
sub
fdivs
into
inc
les
js
mov
test
dec
add
addb
orb
pushf
mov
mov
cmp
jo
inc
push
xchg
mov
cmpsl
insl
ljmp
pop
aaa
aas
outsb
inc
imul
sbb
daa
aas
cltd
aad
repz
cwtl
jle
data16
dec
inc
cs
das
jnp
pusha
dec
mov
inc
sahf
shlb
bound
int3
mov
popa
jp
outsl
push
movsb
mov
gs
iret
pop
lods
filds
aam
mov
push
ret
jmp
imul
loopne
mov
pinsrw
sub
fsubrl
mov
jg
xchg
lahf
add
int
movsb
aaa
push
incl
dec
and
mov
pop
lods
lods
test
jmp
jnp
jne
ret
xchg
jno
in
dec
insl
sub
test
cwtl
or
mov
jb
pop
or
mov
xlat
mov
rcrl
mov
inc
je
fcmovnb
aas
scas
inc
shll
cmc
xchg
mov
imull
test
push
xor
pusha
sbbl
mov
adc
lahf
inc
out
pop
sbb
aad
negb
sti
cwtl
mov
push
test
sub
shrl
ja
nop
push
push
loop
inc
mull
sbb
adc
pop
adc
and
fsubrs
mov
inc
call
out
cld
adc
mov
fucom
cmpsl
sarb
sub
jae
mov
lret
hlt
roll
ret
stos
rcrl
inc
push
cli
subl
rcrb
lret
adc
adc
mov
dec
sti
scas
jbe
inc
jnp
nop
ret
sub
adc
in
les
add
cmp
adc
ss
scas
js
in
imul
sbb
rol
xchg
xor
and
jb
or
xchg
in
and
inc
push
mov
fs
inc
movsl
cmpsb
lahf
add
jge
adc
jg
orb
les
call
sbb
imul
ljmp
adc
enter
in
pop
fs
xchg
jb
dec
les
adc
iret
inc
dec
ss
cs
dec
vmread
cmp
adc
or
enter
mov
adc
push
mov
insl
adc
inc
xor
push
sbb
pusha
push
push
bound
call
idiv
xor
xor
mov
decl
lods
cmp
dec
sbb
cmpsl
lcall
pop
loope
push
mov
push
cltd
mov
pop
inc
or
flds
cmp
jle
xor
xchg
sbb
mov
cmpb
cmp
sarl
in
test
enter
ja
std
push
in
repnz
or
dec
cmpsl
push
imul
stos
test
enter
push
les
xlat
xacquire
in
xchg
dec
jo
sub
xchg
mov
jp
idiv
lock
inc
sbb
sub
sub
pop
sub
xor
sbb
mov
xlat
push
push
imul
add
int
add
fucomip
dec
in
xor
pop
lahf
loop
arpl
dec
addr16
fnstenv
mov
leave
scas
push
xchg
sub
ret
stos
lock
nop
ret
in
in
es
shr
rorb
pop
inc
inc
push
je
shll
pop
pop
nop
jae
negl
lret
mov
imul
xor
in
adc
outsl
push
lods
in
test
adc
inc
mov
test
pop
loopne
fiadds
pop
leave
mov
xor
and
push
dec
icebp
pop
cmp
mov
cmpsb
pop
neg
sarb
imul
in
fwait
jno
popa
push
stc
cs
xlat
add
push
adc
jg
and
int3
lds
jmp
inc
sbb
mov
push
pushw
push
test
cwtl
fsubl
loope
jne
push
lcall
dec
adc
scas
xchg
test
sub
mov
mov
adc
das
pop
je
xchg
stos
push
inc
rcr
daa
mov
jmp
jbe
addl
fcoml
push
dec
sbb
fcmove
mov
inc
sbb
sub
dec
in
inc
bound
adc
adc
mov
bound
subb
cld
daa
in
fs
stos
outsb
sti
in
sub
sbb
mov
lods
adc
cmc
xor
pop
cld
mov
out
cmp
sub
jg
mov
xchg
xchg
mov
sbb
inc
repnz
pop
repnz
fisubs
pop
imul
xchg
inc
mov
push
jno
ret
jmp
fcoml
xchg
testl
rorl
jo
cmc
mov
sarb
cmp
enter
push
cltd
push
xchg
repnz
jns
pushl
fsubr
sub
out
enter
and
push
call
lahf
mov
fdivs
dec
cmpb
or
cmp
addr16
cmc
scas
mov
mov
mov
int
test
pop
popf
cmp
nop
ja
and
or
xor
leave
stos
stos
xchg
jns
pushf
std
sbb
cltd
and
aas
sub
in
cmp
aad
test
jp
cmpsl
mov
loopne
mov
lods
cli
in
xchg
pop
pop
insl
inc
jecxz
push
shll
fcoms
add
pop
mov
shlb
cld
cmpsb
xor
or
inc
jbe
les
lds
gs
dec
leave
fs
or
and
rcll
cli
mov
inc
scas
mov
cmpsb
fimull
stos
fwait
dec
sub
incw
pushf
push
and
jns
cli
in
jns
mov
xor
mov
dec
jb
fsub
addr16
lods
jmp
sbb
dec
mov
loopne
mov
sbb
insb
xchg
stos
or
xor
lods
and
sti
pop
adc
jmp
lcall
xlat
cmpl
mov
fisttpl
repz
test
ss
add
or
and
add
push
xchg
inc
ja
ret
adc
aaa
clc
les
mov
jnp
orl
and
pop
sbb
insl
gs
fs
or
mov
push
and
dec
push
out
jl
mov
popl
mov
inc
mov
push
xchg
std
sbb
mov
test
and
out
cmp
popf
mov
hlt
mov
jo
lea
sbb
sbb
mov
xor
fldcw
push
popa
or
sbb
pop
mov
test
mov
cmp
xor
lods
addr16
scas
dec
xor
cli
adc
loopne
pop
push
cmp
pop
mov
fucom
fucomi
push
movsb
inc
int
popa
and
jbe
jge
out
push
push
dec
pop
lock
pop
popf
xor
mov
fildll
jno
jnp
out
scas
dec
xchg
push
loope
and
repnz
sub
cmp
adc
ljmp
mov
sub
mov
mov
and
scas
insl
xchg
jo
pop
out
push
leave
aas
lcall
add
popf
fistpl
or
or
ja
rcr
icebp
cli
xlat
roll
pop
lods
dec
jecxz
push
mov
or
push
xor
enter
test
push
mov
mov
xchg
lea
jnp
pop
pushf
inc
ljmp
add
inc
or
call
rcrb
xor
fnsave
mov
cmc
xchg
dec
add
into
push
mov
inc
fucomp
pop
dec
lcall
xchg
cmp
pop
or
int
repnz
les
jmp
push
and
dec
adc
and
mov
fimuls
xchg
rcll
cmc
xor
pushl
lret
std
call
jge
cmp
push
add
popf
mov
lcall
and
in
jle
dec
addl
jae
inc
mov
jp
adc
push
inc
sub
jmp
in
dec
je
cmp
mov
mov
aad
loop
dec
adc
mov
add
push
push
cltd
pop
jae
mov
push
js
push
std
mov
xchg
stos
add
xchg
adc
sbb
stos
inc
in
or
push
jg
ret
or
mov
test
cmpl
aad
add
mov
mov
cmp
les
inc
repz
scas
mov
jmp
test
in
mov
push
loope
lds
cs
and
out
sarb
or
push
int3
pop
icebp
sub
enter
pop
test
sub
xchg
xlat
and
push
jmp
dec
push
jne
aas
or
xchg
xchg
ja
icebp
dec
jo
pop
adc
inc
aam
jmp
push
push
and
cmp
jo
jecxz
dec
or
and
and
xchg
mov
lods
mov
sub
sbb
aam
int3
sahf
sbb
xchg
dec
dec
cmp
and
repz
push
jl
push
jnp,pt
push
fwait
adcb
and
sarl
push
mov
stos
clc
sub
outsl
shlb
xor
into
dec
xchg
add
mov
xor
jns
adc
std
outsl
cmp
add
add
aam
pop
pusha
and
aaa
fwait
dec
iret
push
adc
jbe
or
dec
jns
and
or
add
leave
cmpsl
sbb
jge
icebp
push
jg
aad
mov
xlat
pop
pop
dec
and
call
adc
pop
cld
rolb
test
mov
jbe
mov
bound
push
js
cmp
lret
test
insl
jb
jmp
mov
jecxz
stos
outsl
aas
loope
inc
jnp
mov
sarl
flds
mov
and
sub
insl
pop
fisttpl
xchg
ret
xchg
aas
dec
fldl
clc
mov
fdivs
dec
cmpsb
dec
dec
int3
jmp
push
cli
xor
pusha
cli
inc
cmpsl
loop
mov
inc
cmp
or
fildl
mov
xorl
push
cmc
xor
lock
jg
scas
lock
clc
std
int3
push
jno
jns
mov
push
lods
add
or
mov
scas
stos
push
int3
inc
sti
or
sbb
push
js
mov
pop
stos
push
icebp
cld
or
in
mov
gs
xchg
sti
les
sub
push
inc
ds
mov
loope
lahf
rcl
add
popf
cmpsl
icebp
and
sbb
or
jno
push
push
xchg
xor
out
push
jg
cmp
mov
test
rclb
mov
cs
cwtl
xchg
mov
sub
push
sub
cmp
push
dec
mov
loopne
test
fsubrl
xchg
lock
sub
mov
int3
cmp
mov
inc
lea
popf
xor
adc
xchg
xlat
imul
cmpsb
test
out
div
add
bnd
push
inc
ljmp
lds
add
fcmove
dec
cmpsl
or
mov
push
jl
ja
or
fldcw
or
xchg
mov
mov
xchg
push
xor
lcall
icebp
sub
xor
pop
jns
lret
add
inc
flds
adc
add
fwait
inc
push
lock
lret
and
cmc
lahf
xor
icebp
stc
lods
in
jecxz
sub
scas
mov
push
les
adc
pop
mov
popa
loopne
sub
jl
push
adc
jbe
dec
xchg
pop
push
push
ljmp
sub
mov
dec
add
sbb
push
push
in
xchg
xchg
pop
and
pushf
out
add
xchg
es
scas
inc
hlt
pop
jecxz
inc
adc
jmp
push
inc
outsb
sbb
int
cmp
inc
les
cwtl
insb
rorb
fcompl
sub
push
call
adc
pop
dec
dec
iret
leave
jl
mov
aas
fmul
jp
sbb
inc
out
shlb
std
or
loopne
mov
aad
xchg
mov
leave
cmp
jns
jno
xor
push
dec
shrb
gs
adc
sbb
out
add
dec
jbe
imul
fsts
call
mov
outsb
rol
dec
into
inc
icebp
mov
sbb
loope
xchg
add
in
dec
pushf
or
or
cmp
adc
std
popa
sub
push
sbb
int3
inc
inc
lock
clc
ja
xchg
push
xchg
in
cli
ljmp
pop
vpmullw
or
jl
mov
mov
repnz
ficoms
adc
sub
insb
push
jae
or
inc
jmp
add
mov
dec
inc
fldcw
mov
test
or
mov
sub
ljmp
loop
push
xchg
scas
push
in
in
das
insb
pop
clc
je
popa
or
stos
loop
lock
or
jge
in
fsts
fbld
lret
xor
lock
scas
jl
push
lret
ljmp
out
cmp
cli
mov
loopne
pop
mov
daa
xorb
jo
fnstcw
sub
loopne
sbb
push
xor
mov
cmp
mov
adc
test
inc
adc
mov
repnz
mov
ror
mov
and
jl
loop
lds
shl
hlt
insl
popa
jo
into
xchg
ljmp
jno
push
clc
movb
push
or
fxch
aam
jns
lods
pop
and
lods
int
xchg
stc
add
adc
loop
cwtl
addr16
scas
enter
data16
mov
dec
and
sahf
push
adc
push
aam
cmpsb
mov
orb
mov
xchg
inc
adcb
xlat
and
test
shll
or
or
aad
cli
ss
dec
int3
or
lret
imul
cli
ret
pop
or
pushl
add
inc
xor
xor
lret
xchg
loop
lret
mov
xchg
cltd
cmp
mov
cmp
pop
pushf
xor
mov
xchg
pop
xor
add
jmp
imul
add
pop
sub
js
cmpsb
push
aaa
stc
fsts
push
and
dec
repnz
cmp
cld
leave
in
mov
in
jb
pop
xchg
jmp
sub
shrl
mov
xchg
imul
inc
push
add
xor
ror
in
jge
ss
push
adc
aas
insl
stc
sbbb
shll
ret
lret
cmp
inc
adc
xor
dec
cmp
adc
outsl
repz
stos
fld
or
dec
sbb
cmp
xchg
cltd
pop
mov
jns
adc
dec
or
jno
sub
repnz
inc
cmpsl
subl
push
xchg
mov
jp
xchg
bound
adc
jl
jl
push
lods
pop
mov
mov
mov
adc
cli
sub
jp
inc
ret
cmp
addr16
adcb
test
lahf
popa
mov
mov
dec
daa
jnp
push
cli
je
sarb
ret
dec
in
sub
push
fsubrl
dec
fnsave
dec
je
and
shlb
cmpsb
xor
loop
mov
or
bound
mov
sbb
std
sbb
out
mov
pop
jns
xchg
xor
add
add
jg
lods
repnz
jno
dec
hlt
insl
cmp
mov
push
add
test
in
jno
lret
mov
insl
push
test
xor
pop
pushf
insl
nop
ret
cli
das
mov
pop
mov
int
dec
mov
outsb
inc
daa
inc
and
sub
ds
push
aam
jl
mov
add
mov
sti
cwtl
bound
jp
stos
stos
add
mov
pop
sarb
and
stc
or
hlt
xchg
sub
dec
cmp
sbb
subl
adc
std
cmp
bound
test
loope
daa
push
jle
push
cmp
stc
jl
adc
mov
sti
sbb
mov
pop
cmp
adc
mov
mov
push
mov
jecxz
xchg
push
dec
adc
xor
dec
sti
xchg
xor
lods
or
cmpsl
xchg
dec
xchg
lods
into
xor
jne
xchg
cmpb
and
mov
fwait
sahf
push
inc
mov
pop
into
shlb
sub
lret
ret
in
push
cmp
push
lahf
add
das
call
lods
mov
push
xchg
in
in
insl
subb
push
mov
test
pop
iret
test
or
das
int3
mov
mov
imul
push
fistl
xor
pop
jmp
je
jecxz
arpl
mov
mov
mov
stc
jecxz
mov
clc
pop
mov
test
js
sbb
xor
push
scas
mov
scas
fisubs
xor
adc
mov
add
push
cltd
xor
xchg
inc
mov
push
push
mov
aas
outsl
shrl
mov
mov
ja
and
outsl
mov
cmp
test
mov
cmp
push
mov
aaa
stos
sbb
dec
das
cmp
push
dec
xchg
test
andb
xor
jl
movsl
test
js
popa
mov
jae
pop
mov
loopne
xor
xor
add
loopne
test
mov
mov
or
movzbl
inc
bound
js
fstps
movsl
inc
pop
fildll
aam
sbb
sub
test
xchg
ret
lods
mov
jno
xchg
mov
popa
pop
cltd
outsb
mov
inc
dec
and
sti
repz
repz
cs
data16
push
pop
cmpsw
mov
int3
lds
popa
enter
mov
inc
and
pop
dec
add
nop
inc
pushf
stc
lds
sub
movsb
stos
or
pop
shr
jnp
insl
dec
rcl
adc
xorb
aaa
mov
adc
ljmp
sbb
popa
enter
jbe
and
sub
dec
cmp
xorl
sahf
push
rorb
pop
inc
jmp
mov
jle
mov
mov
ret
nop
es
pushf
xor
sub
clc
lock
imulb
nop
inc
mov
sti
push
scas
jns
adc
xchg
pop
or
popf
jg
and
stc
pop
lods
xor
mov
incl
pop
cwtl
xchg
call
lcall
ret
jg
xor
loopne
dec
out
push
icebp
pop
xchg
pop
das
push
ds
sti
hlt
loop
imul
mov
adc
dec
mov
lds
mov
cli
dec
push
add
mov
data16
cltd
movsl
xor
shll
fisttpll
test
js
and
popf
dec
aad
inc
dec
ljmp
imul
push
clc
mov
into
push
sub
fs
mov
cmp
sub
cld
mov
dec
pop
sbb
fisubrl
cltd
jge
sbb
in
inc
adc
jecxz
or
jnp
jb
xchg
hlt
xchg
add
pop
jae
fsubp
out
nop
fidivl
mov
lcall
cmp
xor
aaa
lret
xchg
leave
mov
or
loope
aam
nop
sub
or
movsb
sahf
test
xor
mov
imul
adc
insb
iret
insl
adc
in
stc
inc
stos
inc
fsub
addr16
xor
pop
pushf
jle
test
stos
xchg
movsl
ljmp
adc
pop
imul
fldenv
mov
lods
inc
pop
loopne
mov
fwait
xor
jl
jl
gs
xchg
ds
mov
sti
insl
ljmp
mov
jmp
mov
out
movsl
and
bound
nop
dec
push
ljmp
adc
push
xlat
mov
cmp
xor
shrl
repnz
xor
mov
cmp
rolb
out
sub
out
shl
or
adc
cmp
sub
test
loop
es
bound
xor
add
jns
popf
xchg
ret
adc
mov
or
pop
jp
mov
dec
fs
sbb
fimull
add
xlat
cwtl
push
mov
movsb
js
nop
pusha
mov
jecxz
sbb
sbb
arpl
adcl
cli
js
popa
sbb
lock
dec
jmp
lcall
rcl
mov
push
pop
push
dec
mov
rcr
and
push
ds
movsb
xchg
in
xchg
adcb
daa
mov
or
test
fninit
cmpsl
add
push
dec
stc
or
and
mov
fnstcw
lock
mov
notb
and
pop
pop
les
addl
mov
push
push
lret
adc
mov
cmp
jle
inc
lret
pop
addl
jle
add
mov
xchg
xor
pop
cmp
ud2
dec
cmpl
dec
cmp
pop
lock
push
out
cmp
add
push
mov
pop
jmp
jbe
test
mov
subb
fsubl
xchg
adc
jnp
test
xchg
push
stc
pushfw
adc
cltd
cmpsl
inc
pop
sub
std
adc
or
add
jecxz
inc
inc
xor
push
adcb
cwtl
imul
or
fdivs
je
jge
mov
imul
in
xchg
bound
ja
xor
inc
aam
cmpsb
pop
stos
icebp
fnstsw
stos
mov
imull
mov
sbb
cmp
gs
rcl
arpl
dec
push
pop
and
addb
mov
push
daa
cmp
inc
mov
fwait
or
sbb
iret
aam
xchg
mov
mov
jmp
andl
lcall
sub
addr16
cmp
sub
popf
and
insb
dec
mov
fnstsw
aam
xlat
test
mov
mov
test
mov
dec
stos
inc
icebp
iret
jne
and
adc
fldt
xchg
sub
loopne
daa
insl
pop
fdivr
sbb
sbb
inc
mov
aad
fadd
imul
inc
cltd
ljmp
add
nop
push
stc
push
dec
sbb
jno
daa
dec
mov
pop
mov
lock
xlat
clc
scas
cmovo
mov
jb
mov
cmp
cmp
loope
aad
aad
mov
aad
cwtl
mov
push
es
pop
mov
sbb
movsl
insb
push
addr16
enter
mov
xor
mov
add
shlb
test
aad
fs
roll
lcall
out
mov
mov
fs
dec
jecxz
pop
dec
mov
jo
scas
fsub
mov
stc
xchg
pop
push
pop
in
ss
adc
aad
rorl
mov
ret
xchg
insl
cs
and
mov
mov
inc
cmp
testb
sub
in
lret
or
into
adc
jp
packssdw
inc
stc
leave
or
jge
mov
orb
out
jl
jg
push
sti
lods
mov
xchg
loop
push
mov
addl
nop
ds
dec
cmpsl
mov
std
out
mov
sub
in
test
mov
cmpsl
mov
sti
ds
push
mov
loop
stos
push
sub
xchg
inc
ret
xor
cli
cmp
sub
sbb
or
xchg
into
das
mov
int
pop
pushf
mov
ret
pop
push
fsub
scas
ja
or
add
ja
fldcw
adc
mov
int
loop
lea
and
dec
xor
mov
rcrl
or
aam
jmp
fimull
inc
aam
or
push
jns
and
xchg
dec
loop
dec
dec
enter
movsb
adc
add
popf
and
int
icebp
push
pop
aas
divl
lret
jo
popa
xor
push
mov
mov
mov
adc
sbb
push
arpl
std
dec
jb
pop
add
aam
repnz
hlt
lea
mov
aam
push
sub
push
xchg
mov
cmp
cmp
mov
ja
push
enter
ficompl
xchg
dec
dec
xor
leave
add
jg
divl
imul
jb
xor
xchg
out
stos
fisttpll
loope
stos
cmp
sbb
jmp
ja
jbe
jg
mov
sahf
cmp
mov
aam
outsl
mov
test
or
sbb
xchg
les
pop
stos
movsl
xor
or
cmpb
adc
inc
mov
fwait
mov
repz
mov
or
sub
xchg
sbb
lods
sbb
and
out
and
ret
out
fbstp
insb
and
cmp
out
xchg
lock
scas
adc
insl
dec
inc
push
pop
jne
lahf
pop
sub
sbb
pushf
les
popf
frstor
adc
ficompl
out
inc
std
fdivl
xlat
push
push
adc
pushf
cld
test
lcall
ret
fsubrl
loopne
mov
mov
push
jecxz
pop
mov
inc
sub
sbb
jno
pop
dec
out
mov
push
sbb
pushf
mov
and
test
inc
or
xchg
dec
nop
jl
fdiv
xchg
hlt
imul
xor
add
cwtl
stos
or
lods
int
lock
xor
cltd
mov
daa
lcall
dec
add
push
sbb
jecxz
cmp
outsb
dec
mov
jle
jl
jp
xor
cli
addb
sbb
test
daa
xchg
jmp
and
das
mov
clc
out
out
movsl
jp
jne
lods
stos
repnz
dec
clc
insl
push
pop
jns
xlat
cmp
sbb
mov
fadds
int3
ja
hlt
lret
adc
cmp
test
popa
mov
jecxz
lahf
push
ret
pop
in
push
add
inc
pusha
xor
cmp
test
mov
push
cmp
xchg
jo
lahf
mov
xlat
push
cmc
fistl
add
hlt
cmpb
mov
jge
outsb
sbb
jl
add
and
dec
add
pop
shll
fs
sub
dec
push
mov
sub
xchg
es
sub
pop
fiaddl
mov
mov
fnstsw
jl
mov
test
xchg
nop
in
mov
or
clc
add
repz
push
xlat
mov
mov
pop
ret
lret
mov
es
sahf
call
sbb
in
pusha
dec
or
ja
mov
jbe
xchg
add
or
lahf
dec
insb
push
xchg
dec
inc
xlat
mov
and
loop
repz
pusha
add
stos
add
loop
das
jb
mov
mov
add
sub
insb
push
and
data16
gs
insb
in
enter
in
test
xchg
out
dec
fs
jp
push
lcall
lods
mov
aad
mov
mov
mov
rcl
lds
fnstcw
in
pop
and
pop
aad
dec
or
mov
mov
pop
push
orl
xor
call
dec
jnp
in
in
pop
sub
push
dec
enter
loopne
jg
cwtl
sbb
mov
sub
loopne
cmpsb
jp
sub
mov
sub
pop
xchg
cmpb
aam
mov
mov
push
shlb
inc
inc
xor
ret
add
jg
push
sarl
cmp
insb
lods
cltd
int3
shl
xchg
mov
push
fwait
sub
adc
ror
sbbb
or
lods
jne
cli
mov
push
pop
das
cld
sbb
sub
push
enter
out
sbb
adc
in
popf
fimuls
icebp
int3
addr16
iret
les
push
pusha
sbb
repnz
rcll
in
imul
mov
inc
mov
mov
inc
insb
xor
mov
push
xlat
mov
or
outsl
mov
jo
or
pop
inc
sub
out
jne
outsl
push
leave
test
pop
pusha
test
xchg
sub
jge
jnp
cmp
xor
out
add
bound
jae
rorl
mov
loop
ret
mov
jnp
mov
and
cs
jmp
and
in
xchg
xchg
aaa
aam
icebp
dec
add
inc
add
loop
in
jmp
iret
push
scas
test
xchg
jbe
sub
out
cmp
mov
insb
and
mov
sahf
enter
aas
xlat
fwait
add
inc
popf
sub
shlb
jae
adc
and
fsts
jge
sub
add
js
inc
jae
push
push
inc
mov
push
add
das
add
mov
arpl
dec
inc
jae
aaa
mov
cmp
insl
out
shll
sbb
imul
inc
sbb
das
sbb
cmp
lock
lods
sahf
adc
mov
push
jmp
dec
repnz
addl
test
filds
pop
push
iret
scas
dec
inc
fwait
pop
sbb
and
out
cmpsl
adc
xor
das
addb
popf
mov
clc
cmpsl
insb
mov
push
sbb
mov
mov
xor
sub
xor
addl
hlt
add
ljmp
in
aam
jno
fwait
fs
or
cmp
sbb
jle
shll
add
mov
jge
jno
mov
dec
xchg
arpl
pop
stos
pop
arpl
xor
push
scas
add
arpl
aad
fwait
and
mov
xorb
ljmp
pop
pop
rol
iret
sti
test
jmp
pusha
adc
in
push
jns
or
xchg
loopne
lods
outsb
dec
lea
adc
cmp
popa
daa
je
add
je
sbb
inc
add
push
or
gs
jge
int
lods
dec
cmpsl
or
cld
adc
scas
int
mov
jle
sbb
mov
enter
in
scas
cmp
lahf
xor
or
rolb
sbb
popf
adc
mov
adc
xchg
test
xorb
and
adc
cmp
cli
jmp
add
aaa
add
push
push
sub
daa
inc
imul
or
insl
jns
push
repz
pop
xor
in
add
and
imul
inc
xor
loope
jmp
rol
hlt
in
xchg
push
movsl
lret
pop
jl
mov
addl
adc
out
sahf
fcoms
sbb
pop
hlt
idivb
js
aad
stc
insl
sbb
cmp
and
or
lea
das
jle
jmp
xor
nop
cltd
dec
outsb
insl
xor
addr16
mov
test
mov
fidivs
xacquire
rolb
jge
ror
sbb
lahf
insl
in
xlat
mov
mov
pop
pop
xchg
fldt
clc
sbb
aas
into
imul
rol
dec
jmp
jno
mov
pop
push
lds
or
mov
adc
in
xchg
push
inc
jo
jnp
stos
sbb
repz
mov
push
cmp
sbb
xor
repnz
or
imul
jp
cmpsb
test
cmp
test
je
cmp
hlt
jp
and
push
aad
ja
jp
sub
sub
jne
idivl
fsubrl
icebp
jp
out
shrl
inc
sub
jg
xor
scas
sub
pop
hlt
out
mov
repnz
call
mov
sbb
inc
lea
mov
hlt
mov
xlat
push
xor
pop
lret
add
dec
mov
jl
sbb
jecxz
ljmp
in
mov
outsl
je
mov
sahf
mov
insl
outsl
movsb
mov
lods
cmpsb
fcoms
inc
insl
push
decb
push
cwtl
out
bound
cmp
in
ret
out
imull
ljmp
rcr
sbb
insl
cli
shl
xlat
arpl
lret
mov
inc
mov
push
stos
call
xchg
adc
arpl
in
xchg
sub
jne
xchg
pusha
popa
je
scas
shll
cltd
mov
push
dec
aas
lret
adc
sbb
cli
xlat
notb
pop
mov
fwait
stos
shlb
xchg
call
ffree
sub
mov
xchg
lock
in
or
movsl
jo
push
repnz
push
movsl
cmp
out
xchg
arpl
fbstp
jp
aad
data16
shr
stos
mov
dec
and
out
clc
clc
test
lcall
cld
cmpsl
movsl
xor
fmuls
imul
sbb
xchg
cmp
lret
out
mov
out
stc
fadds
scas
add
jmp
pop
lods
push
cmc
test
repnz
cli
or
sbb
roll
lock
cmp
shlb
repz
mov
sub
pop
mov
dec
push
cltd
jmp
loopne
in
xchg
shrb
xchg
jno
add
cld
inc
iret
out
lea
mov
test
add
mov
aas
push
add
push
sbb
sbb
mov
iret
xor
arpl
inc
dec
adc
xor
in
xlat
movsb
dec
push
mov
xor
nop
add
ss
sarl
clc
nop
and
movsl
adc
enter
push
out
add
and
call
mov
jecxz
mov
adc
ret
js
sahf
pop
cmp
sarb
mov
mov
mov
inc
or
inc
mov
ret
aaa
cs
mov
jle
and
xlat
fldl
add
aam
and
cs
lcall
cli
scas
imul
add
stos
pusha
gs
outsb
add
jge
lods
or
sub
testb
xlat
fimull
dec
movaps
movl
mov
mov
cs
xor
rcrb
in
fsubr
dec
jecxz
mov
mov
and
inc
cmp
ljmp
je
movsb
xor
push
xchg
das
arpl
pop
popf
xor
loope
ret
paddusb
es
stc
dec
mov
outsb
je
xchg
push
cmp
xchg
mov
shlb
xor
sbb
sbb
mov
mov
pop
sbb
hlt
bound
jbe
in
enter
stc
ss
popa
jno
pop
pop
test
or
stos
ret
int3
jno
mov
test
inc
ljmp
mov
mov
push
sub
aas
sub
push
adc
cmp
int
dec
test
test
jae
push
fldenv
popa
mov
popa
mov
popa
test
sbb
pop
jae
adc
cmc
loopne
imul
inc
sub
das
mov
xchg
adcl
fisubrs
aas
popf
sti
dec
mov
popf
in
jo
and
mov
jnp
add
cmp
insb
xchg
cmp
inc
mov
in
insl
ds
lret
inc
rol
mov
mov
adc
mov
cmp
mov
aaa
xlat
jmp
inc
jb
call
jb
leave
sub
sub
xchg
add
adc
and
adc
adc
inc
sub
pop
cmp
and
or
cmpsl
sbb
psubusb
rcll
adc
scas
shl
imul
flds
stos
jp
mov
imul
pop
sub
cli
adcl
mov
sub
icebp
inc
loope
xchg
repz
out
cmp
ret
sbb
mov
jb
rclb
divl
mov
inc
sti
cmp
leave
fs
aad
or
popf
mov
sub
stos
mov
aas
hlt
xchg
cmc
std
push
push
sub
jne
out
xor
add
jmp
lret
fadds
pop
add
cmp
xchg
in
mov
cli
push
sub
loop
aad
mov
pop
out
cmc
cli
lock
ss
push
std
pop
fisubrl
int3
xorl
inc
sbb
xchg
mov
rorl
fcomp
xchg
cs
jns
lret
jg
xor
rclb
inc
test
jno
insb
sbb
jle
ficoml
aas
jmp
cmpsl
xlat
add
cld
les
and
fistps
cli
je
dec
push
lcall
dec
test
cltd
aam
insl
outsb
push
popa
sub
orl
mov
dec
cmp
in
ja
mov
jb
jg
xor
push
adc
or
negb
test
pop
and
mov
sub
mov
adc
xchg
repz
outsb
pop
lret
mov
sub
or
out
mov
std
lods
add
and
aad
mull
jne
mov
daa
ljmp
dec
push
nop
repz
fmul
imul
cmc
adc
adc
inc
pusha
xor
dec
pop
jle
dec
dec
ret
movsl
xchg
sub
jge
js
inc
inc
cld
movl
inc
loop
pushf
push
ret
lret
imul
bound
jb
ja
inc
push
cmp
mov
mov
adc
negb
out
add
scas
aad
inc
add
mov
pop
aas
pop
xlat
or
and
xchg
ret
mov
enter
dec
insb
mov
or
sbb
sahf
jbe
mov
fcompl
jbe
dec
pop
push
push
fists
adc
mov
xor
test
cmpl
ds
mov
mov
sbb
add
aas
test
mov
imul
or
dec
push
lods
adc
mov
adc
and
adc
mov
adc
xor
and
sub
mov
lret
and
ljmp
and
cmp
push
fnstcw
mov
aam
push
or
imul
mov
cli
sbbb
mov
je
movsl
and
stos
in
pop
imul
lret
sti
bound
and
adc
mov
sti
pop
adc
clc
xor
pop
insb
fnstsw
shll
adc
mov
pop
pop
mov
xor
sti
xor
movsbl
dec
and
inc
pop
fistpll
mov
push
nop
nop
lret
call
jecxz
mov
xor
insl
dec
dec
loop
or
add
das
daa
test
rcr
cmp
jmp
jae
into
fwait
fs
inc
outsb
sub
jnp
cwtl
push
pop
pushf
mov
movsb
fwait
in
mov
hlt
mov
ljmp
inc
mov
stos
sbb
sub
jae
adcb
ss
xchg
shl
arpl
dec
icebp
and
in
cmpsl
or
xor
push
or
mov
in
push
subl
shl
jnp
add
les
mov
dec
adc
repz
pop
adc
add
sbbb
dec
ffreep
je
movsl
or
pop
mov
std
popf
gs
and
push
loop
pop
aad
lock
dec
test
test
cld
inc
jmp
ja
mull
movsl
sbb
xchg
mov
sbb
push
jge
std
mov
jns
mov
insl
push
lock
pop
adc
and
xchg
outsb
xlat
push
sahf
and
test
leave
js
pop
xchg
sbb
push
stos
sbb
push
pop
dec
mov
xlat
imul
in
pop
lret
inc
mov
mov
ljmp
jmp
jp
iret
inc
sarb
sbb
iret
or
mov
and
or
mov
ficoml
outsb
icebp
int3
push
cs
dec
xlat
sbb
inc
in
lcall
filds
mov
cmc
aam
loop
and
cmp
dec
cmp
pop
inc
jae
lcall
and
int3
rcll
outsb
pop
in
jmp
mov
or
push
mov
lods
int3
sbb
clc
ja
add
test
dec
je
jl
sbb
add
xchg
xchg
add
inc
lahf
mov
inc
dec
push
mov
stos
insl
movsb
jle
xor
adc
sub
ja
dec
ret
loop
inc
cwtl
xchg
in
cmp
jnp
arpl
inc
cmp
mov
jp
mov
int3
insl
ret
decl
lcall
push
arpl
divl
sbb
push
mov
mov
xor
in
pop
inc
sbb
sbb
cs
sahf
sbb
ficoml
sti
and
in
dec
or
jo
lea
mov
fcmovbe
xchg
adc
push
mov
jne
mov
mov
test
mov
rol
bound
push
mov
repz
shrl
fsubp
fwait
ret
jae
addl
cmp
sbb
mov
inc
repnz
daa
sub
outsb
and
jp
or
ret
fwait
xor
in
pop
lret
jmp
mov
lea
dec
fidivrs
test
ss
push
cmp
dec
lock
inc
in
mov
adcl
mov
out
fwait
and
fstps
sbb
jne
xor
rorl
lcall
loopne
cmp
test
cmp
or
mov
arpl
jecxz
dec
mov
lock
and
lcall
push
data16
jg
fucomi
pop
cld
fistpll
mov
push
mov
insb
mov
mov
movl
xchg
mov
sbb
cmp
imul
jl
cltd
add
sbb
pop
es
xchg
loop
dec
int3
scas
stos
movsl
int3
call
daa
pop
dec
adc
out
dec
jbe
dec
sbb
aad
mov
xchg
push
out
mov
xor
mov
clc
xor
rcrb
sarb
imul
ljmp
out
mov
aam
mov
imul
cmp
clc
jp
mov
add
insb
cwtl
mov
mov
sub
orb
into
jae
lret
xor
loopne
pushf
push
sbb
inc
sbb
cwtl
sub
sbb
jp
nop
xchg
out
fdivrp
cli
enter
mov
popa
loopne
dec
sbb
adc
mov
ja
sbb
pop
dec
sbb
or
aam
nop
push
cmp
fldt
and
jmp
lret
jle
adcl
stos
pushf
xor
aad
cmp
inc
mov
mov
xchg
fidivl
enter
xor
sbb
mov
dec
jp
cmp
jns
and
pusha
sbb
pop
and
out
into
lods
inc
iret
cmp
dec
pop
xchg
mov
adc
out
pop
movsb
sub
popf
lds
xor
pop
push
inc
fcmovb
test
add
ljmp
lcall
rcr
test
dec
cli
jmp
push
ljmp
sub
mov
jge
jno
pop
movsl
mov
ficoml
das
out
shl
jnp
mov
sub
sub
push
mov
rcrb
loopne
xor
lret
mov
jecxz
push
mov
and
xchg
push
pop
push
scas
or
in
shll
adc
jecxz
push
mov
cli
push
in
cmp
xchg
sbb
cmc
add
rcl
pop
dec
cmpsl
cmp
xchg
lods
movl
scas
sub
mov
hlt
pop
lock
xor
leave
ja
stc
out
ljmp
adc
aas
mov
test
mov
rorl
cltd
lcall
fnstcw
mov
jbe
add
aam
lods
cmpsb
inc
mov
push
or
jo
cmp
jmp
inc
das
push
notl
mov
dec
adc
dec
push
sbb
cwtl
int
dec
push
xchg
sub
fidivs
inc
mov
cmp
xchg
xor
adc
cmp
push
sub
push
cmc
int
mov
push
or
pop
cmp
ret
insb
cltd
out
mov
fisttpl
in
jecxz
movl
dec
xchg
cli
dec
adcl
sbb
sub
push
pushf
xor
insb
dec
inc
xchg
icebp
dec
pop
sub
popf
popa
pop
push
aaa
push
mov
nop
out
sub
mov
roll
ret
lock
push
call
and
cmp
dec
test
jne
das
sarb
adc
pop
into
adc
lods
jge
fdivrl
jno
pusha
jg
into
fidivrl
fidivrl
sbb
aaa
xor
popl
and
and
mov
cmp
std
adc
push
shl
push
adc
pop
movsl
adc
jbe
addr16
adc
leave
je
ss
sub
jge
adc
es
pop
or
dec
push
cmp
clc
je
insl
stos
fimull
ret
stos
and
arpl
push
fistpl
movsl
inc
stc
push
pop
popf
nop
dec
data16
xor
xchg
loope
into
pop
xorl
xor
pop
inc
xchg
sti
jmp
cmc
xchg
lods
mov
jle
add
xchg
das
fcomps
inc
xchg
inc
ljmp
cs
outsl
jle
push
cmp
sub
shlb
jbe
sbb
lahf
add
dec
pusha
mov
add
dec
or
xchg
push
pop
cmp
arpl
addr16
fiadds
aas
sahf
inc
das
jb
pop
loopne
pop
in
mov
inc
daa
sub
jg
aad
jle
cmpsb
cmp
mov
jbe
cmp
daa
repnz
rcll
clc
inc
lea
fdivs
shl
andb
cmp
pop
out
xchg
adc
je
daa
jg
inc
xchg
lds
mov
data16
mov
mov
rcrl
pop
inc
sub
daa
xor
push
test
inc
enter
inc
outsl
jl
movsl
nop
lods
aas
fwait
je
data16
stos
xchg
addr16
sbb
jp
push
dec
sarl
popf
dec
mov
add
jge
lods
sbb
pop
adc
xor
movsl
adc
mov
push
xchg
daa
bnd
sbb
popa
dec
pushf
fwait
es
push
sbb
rorb
mov
aam
adc
mov
add
loop
sub
mov
sbb
in
push
and
xor
jae
jecxz
negb
repnz
mov
cli
xor
fs
xchg
mov
mulb
dec
ja
xchg
sub
fdivrp
int3
jbe
test
repnz
aam
mov
push
xor
and
rcl
mov
int3
add
or
es
loop
icebp
jp
sub
xchg
fwait
sbb
pop
mov
ret
mov
jnp
movsl
push
dec
push
pop
jo
cmp
push
out
pop
lods
rorl
add
enter
fistps
popa
pop
test
push
xlat
lcall
pop
adc
in
fiadds
nop
xor
out
enter
mov
xor
adc
enter
test
andb
in
stos
sbb
hlt
xchg
sahf
mov
out
or
sbb
xor
push
jo
mov
lcall
mov
cmpb
sub
jns
mov
add
cwtl
fnstenv
ficompl
dec
dec
pop
std
in
mov
in
repnz
jmp
lret
jmp
dec
scas
mov
push
repz
pop
out
fidivl
xchg
push
sahf
stos
cmp
fildl
popf
test
out
fwait
xchg
loope
ss
sbb
inc
mov
insl
adc
mov
aas
mov
mov
xor
and
push
insl
pop
out
push
jle
push
inc
adc
js
fsubl
inc
nop
cmpsl
add
mov
cmp
jecxz
fdivl
mov
icebp
dec
in
repnz
mov
pop
out
push
fbld
out
xchg
cmc
cmpsb
sub
aas
sub
stos
in
cmp
mov
xchg
in
mov
lcall
mov
aaa
call
add
pop
jb
or
fisttpl
xchg
jg
push
ljmp
and
fsubp
fldt
mov
sbb
push
pop
loop
ds
test
inc
daa
push
movsl
mov
icebp
sub
cmc
adc
dec
mov
sub
pop
stos
and
int3
cmpsl
rclb
sub
mov
or
xchg
mov
scas
mov
mov
data16
mov
adc
fs
fwait
jnp
enter
ret
test
and
push
xchg
cmpl
jbe
fisttps
mov
jmp
lahf
push
pop
push
imul
mov
mov
mov
cmp
dec
add
insl
mov
pop
stc
movsb
and
fisttpll
add
ds
pop
and
imul
mov
push
jmp
shlb
ss
cld
dec
dec
lret
jb
iret
xor
gs
mov
mov
pop
adc
mov
or
mov
push
aam
fs
inc
movsl
ds
mov
mov
call
repz
adc
enter
xchg
into
cmp
leave
int3
movsb
rcl
sbb
daa
out
mov
leave
popf
mov
mov
stos
inc
repnz
xchg
cs
dec
dec
loope
sahf
mov
ljmp
xor
subl
push
test
and
fists
filds
add
fildll
and
mov
pop
xchg
cltd
push
push
mov
xchg
and
out
adc
adc
jg
scas
pop
mov
mov
pop
loopne
sub
dec
xchg
out
out
xor
dec
ret
xchg
or
mov
std
jmp
out
xchg
xchg
add
xchg
push
ja
adc
call
push
scas
cmp
add
jnp
sbb
mov
dec
sbb
jae
lahf
insb
and
mov
cli
cmp
jae
mov
jecxz
cwtl
xchg
inc
repz
stos
pop
imul
std
mov
imul
fmulp
cmp
aad
or
adc
fidivrl
sub
mov
mov
adcb
mov
and
in
fistpl
adcl
mov
daa
outsl
xchg
or
cld
pop
adc
push
fstl
add
inc
or
test
inc
dec
push
jecxz
mov
sbb
gs
sub
mov
jo
cmp
fcomip
repz
add
loop
jge
imul
sub
pop
add
outsl
push
addb
inc
fidivs
repnz
icebp
loope
adc
aaa
pushf
jl
and
mov
xor
shll
frstor
imul
push
ds
fwait
sub
push
ljmp
loope
je
iret
fnstenv
jnp
and
or
loopne
pop
popf
stos
idiv
and
test
pop
imul
push
aam
push
push
incb
adc
pop
wrmsr
jns
push
nop
xor
cli
les
into
fstpl
test
test
repnz
sub
stos
push
dec
adc
cmpsb
filds
rorl
pop
cmp
pop
mov
mov
inc
addr16
adc
paddsb
int3
test
or
mov
fisubl
inc
add
dec
fwait
cmpsb
gs
xlat
mov
jns
mov
and
jmp
add
test
aam
in
push
xchg
push
repnz
xor
push
imul
std
cmc
inc
test
call
mov
adc
mov
bound
cmpsb
sbb
push
movsb
mov
xor
nop
inc
add
cmp
lahf
cmp
mov
into
push
cwtl
pop
and
push
jne
pop
rcll
adc
test
pop
pop
rcrb
mov
daa
cs
mov
ficomps
pop
bound
dec
lahf
int
xor
add
ss
rcrb
push
daa
mov
mov
pop
sarb
xor
int3
jb
sbb
cli
sbb
dec
fcoml
mov
mov
pop
mov
mov
loopne
jnp
jmp
add
mov
in
das
push
out
or
pop
sbb
fstl
add
adc
outsb
outsl
add
xor
push
pop
jg
daa
dec
fsubs
or
es
fwait
stos
lods
clc
xor
or
test
push
stos
les
sbb
fsubrs
lea
imul
out
pop
xor
mov
setle
dec
lods
int3
fcomps
enter
sbb
adc
dec
adc
inc
ja
jnp
pop
mov
inc
inc
jecxz
xchg
jg
icebp
stos
scas
popa
into
adc
cmp
stos
out
or
dec
into
and
fs
mov
adc
add
or
push
negl
test
and
cmpsb
popf
outsb
lds
add
or
lods
pop
adc
lret
cmpsb
shlb
out
xchg
xchg
pusha
mov
pop
xlat
push
pop
cmp
test
mov
dec
dec
add
or
sub
rolb
rcl
jae
dec
xor
jg
gs
ficomps
ljmp
jb
xchg
hlt
in
cmc
mov
mov
sbb
int
mulb
jmp
aas
lods
rcrl
sbb
lahf
iret
test
push
push
ret
add
arpl
js
addr16
adc
mov
sti
jb
cltd
fistpll
stc
dec
enter
out
das
mov
add
cmp
xor
pop
mov
data16
fistpl
notb
insb
out
mov
loopne
mov
idivl
fwait
sbb
xchg
or
xchg
mov
jb
aad
ljmp
mov
jb
mov
jbe
ficompl
inc
mov
jb
repnz
ljmp
decl
lds
inc
loopne
das
fcompl
popa
mov
mov
push
xchg
out
mov
test
lahf
push
sub
add
jle,pn
dec
out
sbb
mov
out
hlt
push
or
jl
mov
iret
jle
jmp
mov
mov
push
addr16
cmp
dec
scas
inc
lret
jmp
dec
cmpsl
jo
adc
lret
add
rolb
pop
sub
mov
dec
jge
icebp
cmc
shlb
adc
out
cli
movsl
mov
dec
das
push
ret
sti
pop
out
push
adc
pop
and
push
aas
movsl
das
inc
outsb
mov
jg
xchg
push
cs
adc
mov
cmp
insl
aaa
pop
fsubl
iret
lods
and
dec
shll
shl
in
in
pop
push
jl
inc
add
inc
mov
ficompl
mov
push
ljmpw
xlat
add
push
mov
jmp
imul
out
sarb
cli
push
cwtl
or
int
push
imul
movsb
daa
addr16
xchg
sub
cmpsl
loopne
pop
push
scas
mov
nop
mov
je
cmpsl
test
lcall
adc
or
test
clc
enter
mov
cltd
inc
or
xor
std
mov
pop
pusha
lret
test
lods
iret
fs
pop
lods
adc
leave
in
call
cmp
call
mov
popf
movsl
daa
ret
popf
popf
xchg
lds
mov
jp
ret
cmp
iret
cmp
das
sbb
push
sub
mov
push
xchg
in
and
testb
inc
cmc
xchg
cmp
in
pop
cli
push
pop
fdiv
xor
int
rcr
sbb
adc
inc
mov
into
out
data16
mov
or
in
inc
jl
dec
xchg
movsb
pop
in
or
mov
cwtl
in
inc
sub
add
shll
cmpsl
rclb
jnp
rclb
mov
jmp
call
mov
xor
fs
outsb
lcall
test
cmp
jge
pop
add
mov
mov
lds
out
movups
xchg
aad
cmp
lea
sub
xor
hlt
cmp
aad
push
loopne
data16
rorl
mov
mov
inc
out
daa
and
mov
clc
sti
bound
push
sbb
fdiv
sbb
sbb
pop
mov
fistpl
icebp
orl
orl
in
cmp
add
scas
xor
rcr
add
sub
rcrl
dec
sbb
adc
dec
fs
sbb
inc
jg
mov
jge
clc
out
movsl
mov
sahf
pop
add
sbb
pop
or
xor
pushf
repnz
sbb
loopne
push
dec
pushf
int3
sub
fistpll
es
mov
dec
or
sbb
xchg
insl
int
gs
inc
push
jne
xchg
shlb
fisubrs
idivl
nop
or
les
test
jl
sahf
xor
ljmp
test
adc
mov
fiadds
push
fistpll
outsb
dec
xor
pop
mov
fucom
sub
xor
mov
and
in
xchg
push
rorb
shlb
into
fldl
mov
shrl
cmp
inc
out
es
push
pop
or
xchg
in
xchg
jmp
shlb
dec
fbstp
hlt
inc
mov
rcr
sbb
xchg
mov
mov
or
mov
push
outsl
fists
mov
mov
rcrl
icebp
ds
rorl
mov
jmp
dec
push
aad
rorb
sbbl
popa
pop
aad
jl
hlt
mov
add
dec
pop
cltd
xor
sbb
ja
and
and
mov
adc
lds
clc
add
xor
dec
stc
mov
lcall
mov
push
pop
inc
jecxz
or
sbb
loopne
pop
sbbb
ret
mov
push
dec
and
push
xchg
inc
mov
ret
psraw
pushf
out
push
pop
jmp
insb
adc
divl
dec
or
loop
ret
push
mov
test
cmp
inc
cmpsb
fimuls
xor
or
inc
rcrb
sar
ret
mov
out
or
mov
iret
inc
es
adc
sbb
lock
cwtl
push
xlat
xlat
movsb
jle
ljmp
pop
xlat
sub
jp
xor
adc
jl
mov
mov
mov
ljmp
jge
call
ror
sub
popa
jmp
daa
dec
push
xchg
adc
jp
sub
cmp
mov
orb
xlat
jae
stos
mov
mulb
pop
and
imul
outsb
jnp
inc
nop
lea
clc
pop
adc
cmpsb
out
push
inc
dec
ficomps
stos
fldcw
xchg
int3
xor
iret
stos
fmull
dec
mov
adc
pop
mov
cmp
jne
add
jae
adc
pop
rorb
ret
push
jae
pushf
gs
sbb
jp
jmp
repz
jle
out
out
std
cmpsb
sbb
jecxz
repz
fmull
inc
push
cmp
call
call
loope
mov
ljmp
cld
xchg
sbb
shrl
data16
fidivl
sti
lea
leave
cmpsl
or
xchg
mov
mov
mov
or
xchg
mov
aas
jmp
add
pushf
adc
and
pop
test
mov
add
leave
mov
adc
xchg
ficompl
das
jmp
insb
adc
mov
sub
push
xchg
dec
push
dec
xor
leave
loopne
fstpl
push
jo
mov
mov
clc
dec
sub
mov
insb
into
cmpsl
push
sbb
adc
sub
dec
or
cmpsl
out
or
xchg
insb
mov
inc
out
add
into
andb
push
dec
rorb
clc
and
push
inc
das
dec
ds
mov
test
orl
lret
leave
mov
and
mov
rorl
xorl
je
sbb
pop
xchg
push
stc
mov
push
repz
mov
aam
dec
inc
mov
jg
shlb
jge
sub
adc
mov
fs
add
lret
xchg
pusha
xchg
jg
fists
dec
shrb
repnz
or
div
adc
sub
cmp
mov
pop
pop
mov
in
or
dec
mul
push
movsl
xchg
jl
push
or
push
sbb
div
pop
cmp
mov
xorb
xor
outsl
xor
pop
mov
loope
inc
xchg
dec
mov
cmp
jae
fnstenv
nop
lahf
push
pusha
fistpl
xor
xor
mov
pop
xchg
mov
push
testb
sbb
mov
in
daa
jmp
lea
cmpsl
push
xor
and
daa
testl
push
mov
pop
inc
add
lcall
and
or
testl
cmp
pushl
mull
jecxz
sbb
cmp
out
aaa
loope
sub
add
test
int
jno
dec
lods
lds
adc
cmc
in
mov
mov
adc
sti
xor
lock
add
dec
lock
sahf
push
pop
adc
xchg
adc
inc
sbb
in
or
xor
dec
sbb
dec
cli
inc
int
cwtl
dec
movsb
push
or
xchg
ljmp
mov
divl
ss
xlat
das
mov
lret
pop
mov
fnstsw
and
push
hlt
add
jp
xor
out
pop
jae
xor
es
mov
xor
test
xchg
ss
xor
jno
stos
add
mov
scas
faddp
aad
sub
lock
push
sahf
pop
ljmp
mov
push
insb
es
js
rclb
adc
xchg
jo
jo
stc
mov
pop
adc
adcb
jl
in
mov
jp
outsl
sub
scas
insb
stos
pushf
jge
mov
js
push
lahf
xorl
pop
je
lahf
xchg
sbb
pop
lahf
fisttpl
adc
xor
xor
mov
adc
das
out
rol
frstor
jno
arpl
test
jg
inc
ljmp
cmp
pop
xor
negl
dec
jno
iret
mov
cmp
adc
dec
in
push
mov
ret
inc
dec
push
in
cmp
sbb
sti
and
push
lret
out
test
xor
mov
lcall
mov
daa
push
or
outsb
push
xchg
jno
rclb
pop
xor
sti
fildll
mov
mov
out
push
inc
in
enter
sub
test
nop
sbb
lods
ljmp
scas
mov
lock
stos
sub
mov
inc
push
sbb
mov
shlb
ja
adcb
repz
cmpsb
add
xchg
xor
test
pop
aam
int3
adc
in
ljmp
inc
push
jg
nop
les
imul
inc
pop
adc
scas
mov
rcl
jno
lods
dec
xchg
mov
jp
outsl
cld
adc
aaa
xor
xor
movsl
je
mov
dec
sub
dec
pushf
inc
test
xor
sub
stc
mov
cmc
int3
in
dec
scas
add
iret
call
aad
fs
sbb
shrb
gs
mov
add
jp
and
mov
jg
jo
movsb
popf
mov
push
int
xor
adc
mov
inc
sbb
sub
ror
rorl
xchg
cs
int3
push
bound
lret
rolb
dec
push
push
dec
inc
fwait
add
sbb
push
les
fs
xor
enter
sub
sbb
repz
adc
jecxz
add
inc
and
mov
negl
subl
cmpsl
push
idiv
mov
aad
lahf
push
and
sbb
lea
stc
lahf
lods
ret
mov
enter
fildll
dec
push
test
mov
sub
jno
push
cmp
cli
popf
lret
or
pop
dec
push
lods
mov
fiaddl
adc
test
lods
and
xchg
dec
push
scas
mov
or
aam
mov
popa
sbb
roll
xor
lret
jg
mov
adc
daa
test
stos
gs
loope
or
xlat
pop
rol
pop
cmpsb
mov
pop
ja
loope
roll
sbb
dec
add
and
mov
mov
shl
push
mov
dec
sub
leave
mov
jne
and
xor
pop
mov
das
mov
pushf
clc
bound
ss
ljmp
or
shlb
fs
and
mov
jne
cmc
lods
mov
fiadds
aad
stos
int3
aas
pushl
xorb
mov
sub
mov
sbb
sub
inc
mov
enter
push
aas
aad
aas
mov
rcrb
mov
jns
repnz
sub
in
sbb
jnp
std
scas
in
repnz
fisttpll
shrb
lock
push
aas
loop,pn
icebp
lret
add
add
push
adc
mov
jmp
mov
rorb
out
ss
fidivs
std
int3
sbb
stc
adcl
fwait
int3
sub
stc
and
xor
cwtl
xor
and
dec
cwtl
jne
cmp
popf
cmp
jg
and
and
mov
dec
repnz
push
stos
xor
sbb
lods
in
subb
mov
stos
ret
lods
mov
adc
fildll
mov
xor
jns
imul
add
cmc
inc
mov
push
cli
imul
lret
rolb
sub
cltd
xchg
lret
pop
popf
iret
lret
clc
shlb
push
loopne
lock
mov
xchg
in
addl
add
ret
xor
rcl
in
cmp
push
sub
xchg
jb
sub
xchg
mov
jge
cmpsb
mov
dec
mov
or
iret
add
sub
arpl
lcall
mov
cli
mov
iret
out
sbb
push
aas
sub
sub
or
adc
dec
pop
ljmp
ds
leave
into
mov
stc
xor
mov
mulb
sti
xchg
xorb
sarb
xchg
xor
cmpsb
iret
xchg
sub
jno
repz
push
aaa
and
mov
jg
cmp
mov
ss
mov
std
mov
dec
lds
xchg
sub
insb
shlb
je
jge
stc
dec
aam
mull
sbb
xchg
adc
popf
movb
sbb
pop
inc
mov
out
inc
popa
jne
jge
sbb
fnstsw
xor
jns
out
xor
leave
push
test
imul
xor
xchg
jo
leave
jne
push
ss
inc
sbb
fstps
cmp
jmp
popf
ljmp
add
push
gs
and
and
in
jl
scas
fwait
pop
out
push
cli
outsb
inc
cmp
int3
js
je
or
cmp
sbb
dec
scas
addr16
sbb
notb
adcb
sub
dec
ss
dec
mov
pushf
push
mov
mov
or
xor
sbb
xchg
idivb
dec
lds
mov
pushf
je
mov
cmp
fcom
push
clc
ss
jo
mov
inc
mov
pop
pop
jnp
lock
jbe
cmp
pop
roll
lret
testl
adc
mov
add
mov
push
aad
pop
lea
lret
sbb
pop
adc
lock
pusha
jmp
cmpsl
pop
aam
or
bound
add
mov
jecxz
repnz
lahf
inc
jbe,pt
xchg
es
imul
xchg
fadds
jge
jns
jp
fdivl
mov
mov
sti
lret
add
in
jnp
push
je
icebp
dec
popa
in
add
addr16
jbe
push
int3
pop
lea
mov
mov
jo
pop
inc
mov
es
fdiv
add
pop
sub
std
sbb
arpl
mov
aaa
out
fstpl
sahf
pop
add
arpl
pop
mov
mov
mov
jp
rolb
or
lock
mov
xor
fcoms
fwait
cmc
xchg
insb
adc
sub
addr16
mov
in
push
mov
sbb
pop
cli
js
xor
mov
jl
fwait
cwtl
orl
jg
cmp
loop
notb
pop
cmp
fidivs
fidivl
mov
jno
mov
lds
or
mov
sar
mov
inc
jbe
mov
sbb
dec
das
sbb
int
and
je
out
loopne
mov
int3
inc
add
rcll
mov
mov
jle
push
dec
js
in
scas
imulb
sbb
pop
fmull
mov
mov
adc
arpl
xlat
arpl
mov
mov
mov
out
xor
push
bound
add
pop
and
ljmp
arpl
bound
pop
dec
sbb
lods
lcall
fld1
enter
dec
aad
xchg
sahf
and
pop
add
xchg
aam
shrl
xor
add
les
out
mov
lds
mov
fdiv
mov
pop
cld
mov
mov
outsl
out
shl
cmpsb
xor
or
pop
ja
mov
push
pop
mov
pop
mov
mov
sbb
and
int3
push
mov
sahf
sub
or
imul
dec
mov
fisttpl
xor
push
iret
xchg
xor
icebp
popa
push
cltd
in
pop
test
es
ret
cltd
xor
nop
inc
leave
in
xchg
add
repz
movsl
sbbl
mov
xchg
mov
jno
lock
loopne
loopne
popf
xchg
sbb
outsl
nop
aaa
scas
aaa
cmp
adc
xor
or
scas
iret
push
dec
mov
xor
mov
inc
cld
pop
dec
sbb
orb
mov
loope
shrl
lret
loopne
mov
dec
pop
in
cli
cmp
push
gs
mov
cmp
rcll
addl
decl
in
loop
pop
or
cmp
sub
aas
xor
lret
les
lret
stos
cmpsl
cmpsb
repz
lahf
shl
sbbb
adc
jle
mov
mov
add
nop
cltd
push
sbb
xchg
push
sbb
jb
add
gs
lods
call
push
loop
dec
pop
sbb
fistpl
clc
inc
cwtl
dec
mov
sub
scas
test
movsb
daa
xlat
je
jnp
add
testb
sub
mov
add
push
xchg
sbb
lea
aaa
add
inc
xorps
mov
rcrl
jle
mov
xchg
and
rcrb
cltd
std
sub
les
mov
lock
shlb
and
mov
jge
dec
push
fnstsw
in
cld
pop
mov
fsub
pop
jle
sub
xor
add
idivl
iret
lret
test
jge
das
test
sbb
popa
iret
xor
add
lahf
cli
pop
sbb
das
push
jne
adc
xchg
dec
sbb
cmp
loope
inc
popf
iret
fcmovnu
lods
shlb
dec
jge
add
das
push
sub
pushf
adc
push
rcrl
xor
xchg
jg
aad
outsl
cs
subb
mov
adc
iret
into
and
xchg
pop
mov
dec
or
out
test
inc
xor
jmp
lret
sbb
in
lods
or
jno
xor
cmp
fsubrs
push
inc
into
push
sarl
mov
cmp
cli
cmp
repnz
movhps
or
pushf
sub
push
jmp
jno
dec
xchg
and
sub
mov
fucomip
adc
xor
cmp
aam
add
sub
xor
aad
push
loopne
inc
add
dec
xor
inc
mov
dec
popa
fmull
call
mov
addr16
cmpsb
sarb
sub
mov
addb
in
mov
pop
aas
aas
scas
dec
push
aaa
xchg
xchg
repnz
pop
mov
cltd
mov
add
jns
and
loopne
inc
inc
push
jp
mov
and
push
dec
sahf
cmp
es
ret
inc
int3
xchg
mov
lahf
add
mov
fldl
movl
repz
sbb
xor
shr
cmpsb
sbb
xorl
mov
outsb
decb
xor
lret
lock
lock
leave
xchg
mov
je
sbbb
or
addr16
sub
stc
pop
add
je
hlt
imul
adc
xchg
xchg
cmp
xchg
jns
fisttpll
sub
addl
cmc
adc
in
mov
and
mov
pop
test
popf
icebp
nop
jmp
mov
insl
add
cltd
inc
in
das
push
dec
xchg
sar
sahf
push
cwtl
in
jg
scas
inc
pop
cwtl
mov
popf
jnp
push
sub
nop
mov
lods
push
bound
into
arpl
stos
ja
lea
nop
pop
push
fmull
js
jno
jle
mov
cld
outsl
inc
out
sub
in
hlt
das
cwtl
lock
pop
add
jge
inc
xchg
xchg
inc
inc
xor
jnp
push
xor
sub
scas
xor
push
je
xlat
or
ds
dec
pop
push
sbb
mov
adc
adc
mov
jmp
mov
pushf
lcall
or
pop
jno
push
out
xor
pop
scas
dec
push
les
xor
fs
movsl
idivb
or
stos
push
sub
push
xchg
push
or
test
adc
pop
sbb
and
push
or
xorb
sbb
popf
fstpl
ret
cmpsb
push
sar
sub
addb
pop
push
jge
sbb
test
mov
mov
pop
pop
sub
mov
dec
pop
je
cmpsl
jg
jns
jbe
xlat
mov
mov
movzbl
jp
ficompl
sub
scas
std
aaa
sbb
cmp
psubsb
mov
sub
mov
int
mov
orl
lods
call
fdivl
rorb
jmp
cmp
cmp
outsl
push
out
sub
push
or
repz
lahf
mov
stos
icebp
cmc
mov
jle
in
ljmp
mov
test
mov
sbb
mov
test
mov
jae
or
frstor
into
and
jo
pop
dec
add
xor
lock
adc
mov
and
mov
mov
into
setg
and
out
cwtl
xor
pop
adcb
dec
loope
fadds
lods
les
pusha
and
out
add
in
out
mov
xchg
ljmp
dec
xor
mov
std
xor
rclb
inc
push
fmul
clc
cltd
cmp
add
ret
in
pusha
lret
mov
jp
mov
sub
adc
push
addr16
repz
rolb
push
pop
test
or
cli
arpl
inc
ret
add
jo
mov
sub
cld
push
insl
es
test
push
lock
cwtl
js
scas
lods
popf
pushf
sbb
pusha
mov
mov
scas
loopne
fwait
jno
xor
pop
mov
push
lods
sub
es
dec
cmc
and
hlt
cltd
xchg
cld
rolb
lds
sub
add
push
inc
push
icebp
push
mov
lea
jo
aaa
mov
mov
cmp
mov
lods
cmp
cmpsl
sbb
lods
or
fcoms
xor
ret
fwait
call
fs
popf
mov
push
shrl
leave
cmp
es
xchg
inc
pop
out
out
mov
mov
scas
enter
repz
adc
sbb
add
into
rorb
push
outsl
pop
lcall
mov
push
daa
jecxz
sbb
icebp
scas
mov
sbb
inc
cmp
or
fistpl
inc
cwtl
mov
lcall
add
mov
jns
imull
xor
into
push
into
add
mov
xchg
int
fidivl
push
xchg
inc
and
push
jbe
movsl
hlt
mov
leave
or
lea
nop
xchg
pop
cltd
sbb
or
mov
jns
push
mov
sub
adc
adc
xchg
jne
adc
or
shl
ret
test
in
arpl
mov
movsb
xor
xorb
push
lods
les
iret
pop
sub
out
lea
cmp
jmp
sbb
ret
sub
pop
andl
mov
adc
aas
lds
outsb
mov
rclb
push
jns
cli
sbbl
fwait
inc
add
cmpsl
add
mov
or
loop
push
mov
sbb
sbb
xor
sar
jns
ds
cmpsl
addb
scas
jnp
push
test
jns
cld
lds
cmpsb
mov
jle
pop
roll
unpcklps
jp
mov
xor
cmc
and
sbb
inc
out
mov
pmaxub
out
xor
sar
cld
and
cmp
aad
sbb
jle
dec
imul
arpl
mov
mov
sbb
pop
mov
loop
dec
mov
jmp
pop
mov
cmp
inc
fcompl
sarb
dec
pushf
inc
hlt
test
jmp
mov
inc
ljmp
imul
sub
scas
test
stc
jnp
aad
cld
test
lahf
add
mov
jle
mov
mov
jmp
out
sub
mov
pop
es
mov
dec
hlt
sbb
scas
lds
inc
cmp
mov
inc
rorb
inc
pop
aam
push
insl
cmp
sub
hlt
xchg
mov
pop
cld
sarb
adc
pushf
in
in
mov
sbb
popf
dec
pop
xor
sbb
outsb
js
xchg
mov
call
push
sarl
lret
mov
stos
nop
inc
dec
sub
mov
mov
pop
or
lds
aaa
aas
jecxz
fcomip
add
xchg
sahf
aad
sub
into
loope
mov
xchg
mov
test
sub
xchg
mov
pop
cmc
and
add
insb
ds
sti
pop
fdivrs
sbb
lods
pop
stos
std
cmp
mov
sarb
mov
sbb
push
stos
pop
dec
adc
cmp
jl
pop
ja
jbe
xchg
mov
mov
addr16
pop
cs
lret
xor
insb
mov
loopne
adc
jmp
sub
xchg
push
cltd
push
inc
sbb
push
ljmp
sub
and
add
adc
lds
pop
push
into
pop
jo
jns
in
loope
gs
cli
xchg
mov
pop
ja
out
sbb
es
roll
push
sahf
out
push
cmpsb
out
pop
mull
and
mov
xor
out
fisubrl
mov
sub
push
jg
aad
jbe
jge
xchg
test
cmp
mov
xchg
cmovbe
sarb
adc
xlat
mov
pusha
sub
nop
ret
inc
fs
fsubs
ss
or
mov
shr
ljmp
sbb
cs
sbbl
or
es
mov
int
xor
std
std
or
shlb
sbb
out
xorl
sbb
sub
iret
pop
out
push
or
loope
shlb
fstps
add
adc
pop
add
sub
shlb
push
sbb
push
jnp
mov
jp
cld
cmpsb
ljmp
test
jns
std
mov
lods
scas
lods
clc
push
cmc
pop
orl
in
mov
mov
adc
cmp
xchg
lods
out
push
and
xor
sbb
jmp
sub
lret
test
jl
fwait
mov
mov
lret
hlt
es
cmp
icebp
sbbb
xchg
sbb
lods
mov
push
push
push
mov
mov
cmp
inc
adc
andb
dec
pop
imul
popa
pop
and
add
lock
push
mov
in
or
ret
rorb
jp
and
int3
in
mov
outsb
adc
es
jecxz
dec
jae
test
inc
stos
pop
add
sbb
stos
lahf
pop
inc
mov
popf
or
out
adc
add
mov
das
jb
lret
xchg
lcall
mov
in
rcrl
mov
cmpsl
test
mov
xor
sbb
pop
stos
outsb
adc
gs
jp,pt
aaa
mov
fists
mov
pop
adc
cld
dec
pop
dec
and
ljmp
sbb
rcll
adc
lcall
test
fnstsw
xchg
mov
mov
jnp
loope
add
jne
stos
pop
add
pop
cltd
mov
stos
push
fstpt
push
pop
fnstsw
arpl
mov
lea
mov
fsubrs
mov
inc
pushf
fiaddl
cmp
xor
lret
cld
inc
mov
push
mov
js
sub
and
mov
test
hlt
rcrl
cmp
ret
rcrb
jge
cmp
dec
pop
int
pop
fisubrs
xor
imul
jecxz
adc
pop
xor
data16
add
adc
scas
mov
lods
lods
in
dec
lret
inc
inc
pop
out
xchg
sub
jg
jbe
push
mov
mov
aas
call
xor
rolb
add
insb
andb
pop
cs
and
jmp
outsl
or
mov
adc
insl
xchg
jno
pop
inc
out
mov
jnp
sub
fs
test
fildl
ss
inc
dec
lock
ret
cmc
fs
cmpsl
xor
and
repnz
ja
jmp
xor
pushf
sbb
and
jecxz
add
push
dec
push
mov
sub
push
pop
sbb
inc
jl
push
xlat
fdivr
enter
cmp
out
xchg
lods
xchg
popa
icebp
test
xchg
aad
inc
fwait
popa
push
out
cmpsl
movsb
rcrb
or
cld
xor
outsl
and
iret
or
mov
inc
cmp
mov
mov
push
xor
ljmp
sbbl
mov
mov
sub
dec
pop
or
sbb
adc
or
and
sbb
cmc
mov
out
nop
adc
mov
mov
inc
aad
fs
repz
lods
mulb
bound
dec
imul
jmp
fildll
mov
sub
sbb
xchg
ja
imul
inc
loop
aas
and
in
les
mov
cmp
dec
lds
sbb
lret
sbb
jmp
push
push
mov
insb
scas
int3
xchg
aaa
add
lcall
xor
push
data16
pop
outsb
lret
pop
push
cmp
xchg
jbe
xor
push
pop
inc
fmull
push
mov
sti
jns
or
inc
mov
cmpsl
xor
jl
jmp
ret
mov
adc
mov
mov
push
cmc
addr16
pop
ss
mov
cmp
outsl
mov
sub
rcl
sub
jns
xchg
jae
lock
lcall
inc
pop
inc
movsl
or
mov
pop
roll
popf
insl
idiv
xor
sahf
xor
and
popf
xchg
jno
in
test
mov
jmp
and
push
sbb
popf
shld
lret
push
mulb
andl
movsb
jg
enter
pop
das
pop
xchg
inc
push
sub
pop
dec
or
test
push
xor
or
fdivl
fcomps
xchg
les
shll
mov
inc
mov
mov
xchg
cwtl
test
mov
sbb
into
pop
push
in
or
scas
out
mov
or
stos
in
mov
inc
test
add
push
loope
into
or
orl
popf
pop
xchg
cmpsb
xchg
xor
sbb
mov
mov
cmp
pop
pop
mov
imul
clc
fsubr
jl
js
out
shlb
stos
sbb
sahf
add
les
idivl
xor
sarb
add
mov
fadds
and
stc
rcrb
add
jmp
jl
inc
in
cltd
arpl
or
das
fisubrl
fistpl
fs
or
arpl
out
fdivr
incl
push
xor
pop
sbb
xor
insb
or
lock
movsl
push
hlt
int
mov
add
aad
mov
cwtl
jns
xchg
jge
mov
mov
sbb
inc
lods
aam
out
push
lea
aad
dec
pop
int
repnz
mov
mov
pop
out
fwait
jmp
adc
iret
xor
push
push
cmp
jae
add
scas
mov
pusha
test
fldl2e
test
cmp
xchg
pop
xchg
movsb
jnp
outsl
jge
sbb
lcall
and
fcomps
sbb
xchg
sbb
xchg
adcb
mov
js
cmp
or
mov
fstpt
push
ret
leave
mov
cmp
std
xor
sbb
dec
inc
test
lea
cmp
mov
pusha
mov
mov
sbb
frstor
fcom
jl
mov
outsb
inc
xchg
test
loopne
push
lock
cmpsb
and
jg
mov
push
push
test
push
inc
out
jecxz
insl
mov
shlb
xor
xchg
pop
fs
notb
mov
inc
shr
pusha
dec
push
lock
mov
fistl
mov
mov
popa
and
movsb
xchg
sbb
popf
inc
aam
dec
scas
lock
xchg
pusha
mov
cmpsb
clc
gs
pop
xchg
sbb
repnz
pushf
jne
xchg
dec
cld
in
dec
sub
rep
push
pusha
pop
leave
int
xchg
xchg
mov
hlt
dec
scas
mov
rorl
or
xlat
xchg
pop
or
mov
adcl
imul
xchg
cmpsb
js
mov
jmp
xor
xchg
push
ss
lcall
lods
mov
add
pop
xchg
mov
jl
nop
out
pusha
xchg
dec
mov
lcall
jo
sbb
fstl
ret
pop
nop
mov
sarl
inc
es
jecxz
push
js
inc
scas
inc
shlb
jno
js
jmp
add
xchg
in
cmpsl
sbb
and
xchg
icebp
mov
jbe
adc
addr16
in
ljmp
pop
enter
loope
xchg
jo
cs
add
sub
xor
clc
push
aad
cmp
jns
fwait
jne
push
enter
aam
shr
dec
pop
jne
sbb
mov
sbb
add
mov
sti
leave
imul
movsb
fs
xchg
bound
xlat
fcomip
fstps
lcall
scas
mov
xlat
pop
push
mov
push
xchg
aad
mov
inc
push
dec
mov
dec
mov
fisubl
pop
or
movsb
test
and
rolb
push
addb
pop
insb
push
xor
adc
sbb
iret
or
in
cmp
add
dec
add
pop
fdiv
xchg
sub
out
pop
mov
stc
sub
cmp
bound
leave
lods
ret
and
or
sbb
and
adc
pop
call
out
ljmp
push
adc
sbb
xchg
test
imul
xchg
ja
fcompl
push
cs
pop
stc
jno
xor
mov
push
push
mov
push
and
xchg
outsl
cmpsb
xor
adc
push
aad
cmpsl
push
cltd
sbb
jo
out
jae
andl
std
out
andl
cmp
push
ret
insl
lahf
jle
xchg
push
add
bound
pop
mov
push
mov
and
test
shl
sub
nop
xor
inc
sti
mov
or
test
inc
out
cmp
and
sub
hlt
xchg
popf
mov
xchg
lret
sbb
in
inc
in
or
es
pop
push
cltd
out
pop
jns
ret
push
jge
add
pop
pop
stos
mov
out
popa
fildl
lahf
xor
cmp
pop
arpl
shll
loope
and
mov
iret
mov
pop
jne
test
repz
or
xchg
sub
inc
cld
lret
mov
repz
push
in
jmp
sahf
int3
xlat
in
or
mov
dec
and
insb
inc
dec
pop
imul
add
sub
inc
jno
out
sbb
mov
adc
int
cwtl
mov
out
push
aaa
out
mov
das
ljmp
bound
mov
mov
lahf
test
pop
jl
pop
push
pusha
mov
pop
lret
pop
sbb
jne
push
popa
out
or
je
xchg
push
cmp
dec
mov
insb
and
daa
and
sbb
dec
xor
push
xor
dec
push
lea
fldenv
pop
fs
imul
into
inc
xchg
and
mov
xchg
outsb
inc
repnz
std
push
mov
out
je
mov
cltd
fiadds
pop
xor
mov
and
and
or
cmp
cltd
xchg
or
xchg
and
inc
dec
clc
pavgb
and
lods
test
es
cmp
dec
ds
jns
pop
scas
and
add
cwtl
incb
lret
sub
adc
pop
inc
int3
ret
out
adc
push
ficompl
mov
test
cmp
fadd
or
fmulp
dec
imul
xor
inc
stc
call
iret
push
out
xchg
push
push
outsb
imul
xor
inc
fsubl
pop
dec
int3
push
jbe
cmc
cli
sbb
mov
lods
xlat
shlb
ss
iret
pop
fmul
mov
test
xchg
fs
loopne
ret
sub
popa
cmp
cs
push
shll
sbb
cmp
inc
aam
out
fistpl
or
int
cwtl
lret
ret
fisttps
cmp
xor
adc
hlt
fistps
andl
in
repz
icebp
dec
dec
fsub
scas
and
imul
les
lret
adc
dec
mov
add
mov
push
aaa
fdivs
addb
pop
inc
clc
out
jge
push
lea
in
popa
xchg
lods
add
data16
addl
mov
clc
fs
movsl
xchg
jge
gs
jg
mov
and
xor
dec
fidivrl
scas
call
xorl
fcompl
jnp
jp
and
push
xor
sar
inc
arpl
jl
pop
cli
and
shlb
in
adc
mov
cld
mov
je
add
sbb
jl
add
mov
pop
scas
jp
push
shll
sub
test
jle
shlb
and
icebp
gs
mov
pop
mov
fists
or
jnp
pop
fadd
inc
inc
pop
orl
aam
adc
fsubs
insl
jae
mov
or
adcl
jo
test
out
imul
cmp
inc
out
cmp
fwait
jno
out
mov
fucomip
fcompl
jo
xchg
bound
jl
mov
ja
fidivrl
mov
repz
fcomps
aas
es
and
aaa
push
enter
imul
cmpsb
xlat
mov
cmp
sub
inc
add
pop
inc
bound
fmul
push
mov
or
fildl
jnp
sarb
scas
pop
movsb
loopne
cmpsl
nop
or
lods
add
cmp
loopne
cmp
shl
push
sub
jge
outsb
icebp
pop
jecxz
or
xor
push
movsb
pusha
call
push
imul
fcompl
xchg
lcall
cwtl
and
inc
push
lea
xchg
gs
or
outsl
std
repz
xor
movsb
idivb
test
cmp
loop
xchg
adc
xor
and
lret
insl
data16
mov
jecxz
outsb
xchg
mov
pop
jbe
add
add
clc
rclb
lret
shrb
std
mov
pop
cs
xor
icebp
fisubl
pop
dec
cmc
jecxz
mov
adc
push
mov
xlat
pusha
out
jo
imul
cli
in
rclb
jne
enter
or
jp
shlb
pop
jne
sti
add
das
leave
add
mov
out
jmp
mov
cmp
pusha
mov
mov
and
adc
push
ret
or
jae
rolb
or
pushf
lret
xor
imul
test
sbb
jl
shlb
sbb
pop
lock
xor
inc
dec
das
mov
sub
cwtl
ret
out
mov
mov
and
movsl
adc
lods
movb
jo
out
xchg
daa
cmp
mov
inc
lret
int
jecxz
sub
sbb
add
mov
leave
and
int3
xchg
xchg
jns
std
cmc
fcoms
jo
xchg
dec
addr16
std
aad
mov
mov
jbe
cwtl
int3
jns
mov
push
cmp
cmp
scas
mov
and
andps
xor
jmp
loope
mov
pop
lret
stos
jle
hlt
popl
xor
cmp
cwtl
stos
inc
fidivs
adc
andl
ss
clc
cmc
pop
jmp
xor
fsubl
daa
rolb
adc
mov
sub
cmp
jb
icebp
pop
pop
pop
faddl
inc
adc
out
add
rorb
loop
test
inc
xchg
jo
mov
mov
movsb
inc
fdivs
rorb
shll
pop
sub
pop
mov
fcmovnbe
ss
cwtl
mov
mov
fildll
cmp
fiaddl
repnz
xor
jb
mov
imul
or
leave
mov
mov
mov
cli
fwait
sub
jae
xorl
sahf
sub
fisttps
xlat
dec
mov
mov
fsts
adc
in
loop
sbb
adc
lods
lock
orb
push
push
pop
fidivrs
aaa
ret
jp
leave
jge
prefetch
or
out
rsm
lods
outsl
xor
xchg
adc
and
in
insb
dec
bound
xor
ficomps
or
outsb
ret
mov
xchg
or
in
mov
xor
mov
in
jns
les
cmp
adc
icebp
push
enter
pushf
decl
xchg
pop
pop
cmp
and
decl
or
test
jns
repnz
mov
ret
and
popa
adc
and
mov
imulb
test
mov
lds
divl
cwtl
ja
pop
push
cmp
imul
pop
push
xor
fidivl
mov
sbb
inc
sbb
inc
inc
push
adc
jl
or
lret
loope
jae
pop
cltd
orl
and
adc
jmp
repnz
fildl
aad
outsb
sub
mov
insb
inc
dec
outsb
pop
and
test
xlat
outsl
pop
pop
or
fwait
lret
ljmp
mov
pop
dec
xor
jmp
push
xchg
arpl
int3
jp
push
xchg
cmp
push
mov
xchg
aam
imul
push
fsubrl
lock
sbb
nop
rcl
movsl
sbb
clc
mov
cmpsl
sbb
mov
cmp
push
jl
xor
getsec
adc
rcr
adc
push
mov
loopne
insb
ss
sbb
ret
push
xchg
pop
aaa
out
adc
iret
lods
pop
mov
add
jle
jmp
sbb
cmp
subl
pop
pop
mov
cmpl
sti
test
xchg
leave
or
xchg
sub
push
aad
lods
fs
js
lods
nop
jmp
shr
cmp
mov
or
jg
nop
sub
lods
aas
cmp
inc
ret
cs
or
les
dec
xchg
scas
stos
faddl
dec
test
and
movsl
xchg
and
mov
inc
sub
mov
hlt
xor
stos
movsb
dec
enter
or
cmc
lcall
xlat
mov
daa
daa
not
cs
or
jbe
dec
xchg
fwait
movl
adc
jge
insb
pusha
push
js
sbb
add
push
and
rcr
push
cmpsb
into
cmpsl
push
mov
aas
fcomip
jns
cmp
and
mov
jae
and
adcl
rorb
jg
idiv
cmp
into
out
fisubrs
mov
cld
cmp
mov
dec
sbb
jmp
lret
push
fmull
pop
xchg
xchg
movsl
pop
xor
lret
hlt
xor
ror
ret
pop
mov
xchg
cmp
xor
cmc
pop
filds
mov
pop
mov
stc
movsl
fnsave
lret
jmp
lret
aas
aas
into
sub
rol
mov
pop
jb
movsb
xchg
stos
lods
stc
xchg
push
jl
into
mov
sub
lcall
repnz
int
addr16
sbb
xor
mov
xchg
test
fidivrl
inc
insl
jo
mov
and
ja
sbb
int3
ret
pop
jno
mov
int
rcr
mov
negb
shrb
adcl
sub
mov
popa
enter
outsb
mov
push
jmp
popa
inc
lods
sub
lret
xchg
and
mov
mov
mov
add
into
hlt
or
inc
xor
pop
arpl
add
loope
lods
and
aaa
ret
mov
push
lds
pop
jne
cmc
adc
mov
mov
popl
into
enter
ret
xchg
sub
mov
sbb
cmp
inc
jp
rolb
or
push
mov
pop
adc
xorb
dec
pop
or
jmp
inc
dec
and
cmc
sarb
roll
inc
and
mov
mov
aas
repz
fidivrl
or
push
jbe
jb
mov
aas
ret
xchg
and
fisttpl
sbb
cmp
jmp
fildll
aaa
insb
insl
scas
andps
cs
pop
push
testb
cmc
clc
aam
jp
inc
cld
rep
sbb
mov
mov
outsl
sbb
pop
pushf
cwtl
add
stc
sbb
mov
inc
lods
adc
sbb
adc
cld
ljmp
fwait
inc
ficoms
stos
test
les
pop
ret
aam
cs
pop
push
pop
mov
mov
jo
or
mov
loope
xchg
push
inc
add
lock
lcall
loope
addr16
mov
ret
push
mov
out
or
fldenv
jo
fnstsw
aaa
clc
stos
push
push
mov
enter
test
fwait
or
div
xchg
sbb
and
and
xchg
inc
cmpsl
inc
shlb
shrb
jnp
popf
jge
xchg
mov
jno
pop
popa
fildl
pop
sti
ficoms
inc
fdivrl
mov
pop
mov
push
ret
sti
lods
hlt
je
ds
adc
and
es
push
fdivrs
push
xchg
sub
add
test
dec
mov
movsb
ret
mov
push
ss
pop
dec
dec
int3
mov
xchg
mov
mull
xchg
and
cmpsb
pop
pop
pop
dec
push
adc
and
das
imul
test
mov
out
dec
sbb
aad
fwait
aaa
xchg
rcrb
or
dec
imul
or
das
ret
loope
xchg
xchg
add
bound
xchg
and
mov
add
pusha
ret
push
and
cmpsl
rorl
std
pop
ficoms
iret
ficompl
mov
shrb
dec
lods
stos
xor
add
jle
push
into
mov
sub
adc
icebp
mov
enter
mov
jbe
insl
pop
xor
subb
stos
xchg
mov
xor
dec
iret
out
cld
mov
cmp
leave
sbb
push
adc
scas
xor
or
loope
jl
dec
xchg
and
xchg
xlat
and
jnp
sub
vpsubb
jecxz
test
and
xchg
cltd
jb
scas
in
pop
cs
fs
jecxz
rorb
adc
rcrl
es
mov
pop
mov
rorb
cmpl
sub
adc
jne
je
xchg
jmp
add
js
aaa
xor
loopne
call
cmpsb
mov
push
repz
repz
cmp
mov
ucomiss
movsl
xor
inc
bound
lock
lods
cmpsb
adc
aaa
lock
jae
adc
jno
sbb
mov
xor
dec
aam
inc
cmpsl
int3
mov
jecxz
addr16
fnstsw
cmp
mov
mov
pusha
cltd
xor
mov
inc
jb
sbb
push
mov
addb
cmp
rolb
insl
outsl
out
adc
lds
add
pop
mov
stos
xchg
jmp
push
cwtl
inc
mov
pop
mov
scas
pusha
mov
fcomps
bound
jne
mov
jae
xchg
push
sbb
mov
imul
pop
dec
loopne
mov
push
pop
sbb
or
pop
inc
mov
idivl
popa
bound
xor
test
push
fisubs
lcall
inc
mov
and
arpl
mov
xor
dec
xchg
push
dec
cmpsl
mov
pop
std
orl
xor
dec
mov
imul
inc
test
pop
mov
fsubs
call
imul
lret
dec
adc
outsb
xchg
ss
loope
in
adc
cmpsl
in
lock
jne
into
dec
jnp
mov
popa
aad
shlb
jo
pop
dec
cmpsb
sub
push
cmpb
xor
inc
adc
popa
je
cli
adc
add
adc
or
mov
orl
lret
jmp
jg
fistpl
mov
xor
lret
sbb
adc
mov
xlat
cmc
out
jl
push
cmp
push
clc
jle
lahf
jno
aam
mov
jle
cmc
xlat
mov
mov
cltd
mov
push
aad
cltd
outsb
loope
clc
mov
mov
std
sub
xchg
sbb
pop
ret
dec
lds
inc
sub
jae
sub
icebp
das
js
adc
cli
pavgw
fwait
push
in
cmpsb
movsl
movsl
fistpll
adc
pop
add
cmp
push
test
lcall
test
jne
repz
outsl
xchg
mov
cltd
loope
movsb
mov
cmp
jnp
xchg
mov
inc
ss
jo
jge
pop
sub
jbe
mov
popa
sub
loop
outsl
rorl
cltd
jmp
add
inc
mov
adc
in
add
mov
inc
sbb
cmp
stc
mov
shlb
and
push
xor
mov
xor
mov
bound
add
jnp
sahf
push
inc
cmp
into
int
cmc
jo
sub
iret
movsb
enter
sub
lret
sbb
ftst
sub
xchg
and
add
inc
push
int
pop
cmp
cld
mov
loop
adc
jecxz
cmpsb
loope
adc
and
mov
push
out
in
mov
and
sti
clc
out
aas
sub
and
js
cmp
andb
ror
ja
pushf
pop
ficoms
nop
lock
dec
call
pop
dec
jge
pop
insl
and
insl
mov
mov
pop
loope
xor
out
jle
mov
dec
outsb
pop
pop
ror
push
jmp
adc
xchg
test
push
push
int3
adc
push
and
adcb
pop
pusha
leave
mov
sbb
std
fdivrs
dec
imul
jmp
xchg
gs
into
cld
idivl
jbe
lret
dec
xchg
or
xorb
pop
mov
and
lods
ljmp
out
pop
xorb
mov
mov
xor
icebp
mov
xor
lods
mov
mov
pop
sub
aas
push
jb
add
adc
pop
xchg
push
jae
push
push
ret
rcll
movsb
mov
mov
jmp
mov
fsubl
xor
push
cmp
jb
test
and
adc
out
pop
test
push
loope
cmc
mov
lret
xorb
mov
and
mov
sbb
xor
ja
mov
lret
int3
xchg
push
sbb
scas
sub
xchg
push
shl
bound
cmp
xor
sub
adc
int
cltd
les
mov
clc
mov
das
jne
mov
cmpsb
pop
dec
xchg
xor
jno
sbb
sarl
mov
rcrl
sbb
or
and
xchg
push
xchg
xchg
xlat
pop
das
in
cwtl
lds
xor
sbb
ss
scas
dec
mov
sub
jb
fnstcw
xchg
outsl
fiadds
adc
pushf
push
fs
test
outsb
push
xlat
rdtsc
fs
cs
mov
mov
push
lret
mov
inc
and
and
mov
mov
ret
test
push
cmp
pop
aad
jbe
dec
xor
push
mov
jg
in
loope
xor
std
in
mov
negb
mov
dec
fildll
cwtl
adc
test
add
add
cs
rcll
jecxz
lods
mov
cmp
sbb
in
xlat
xchg
lret
jg
cmp
xor
jmp
icebp
sub
aad
ljmp
pop
sahf
and
decl
cmpsl
out
pop
jg
icebp
pop
push
or
sub
sti
insb
mov
test
adc
mov
fsubl
xor
mov
out
cs
adcl
repz
lock
gs
lds
rcrl
pop
and
shl
popf
jns
sbbb
jne
ret
and
sbb
mov
sub
adc
es
push
daa
data16
adc
pop
push
enter
cmp
push
loopne
xor
fnstsw
adc
rolb
adc
jne
xchg
jecxz
sub
negb
and
ret
sub
gs
ss
daa
mov
and
adc
outsb
fisubrs
ja
jl
push
push
scas
sub
rclb
in
inc
add
jne
lods
sar
outsl
xor
pusha
lods
jp
loopne
stos
and
xchg
mov
ret
xchg
mov
xchg
sub
add
push
pop
adc
jo
js
mov
jne
jg
test
sub
mov
cltd
add
xchg
fcmovu
bound
or
bound
mov
xor
mov
mov
adc
outsl
inc
jae
pop
stc
or
lretw
out
add
aad
addr16
xchg
jno
fistpl
scas
sahf
shld
and
stos
cmpsb
lock
mov
adc
stos
xor
jbe
add
leave
pop
hlt
cld
ja
pop
dec
sbb
addr16
loopne
mov
cmpsb
cwtl
sahf
add
xorb
push
imul
mov
divl
cmp
sbb
or
mov
rolb
push
push
inc
outsb
rorl
mov
cmc
dec
fnstcw
sti
sbb
pop
filds
addr16
rcll
cltd
mov
sbb
xor
fwait
sbb
bound
aaa
sahf
jle
cmc
inc
addl
sbbl
push
lds
scas
sub
pop
adc
push
sub
subb
jle
mov
pushf
pop
push
aad
cmp
inc
mov
movb
cmp
sub
inc
push
mov
adc
inc
into
out
cmpsl
es
data16
movsl
stc
push
adcb
xchg
mov
pop
add
cmpl
xor
fdivr
cmpsb
ja
add
push
cmc
adc
ljmp
or
mov
xchg
sahf
mov
idivb
insl
les
cmpsl
lahf
mov
sbb
pop
adc
rep
out
addl
mov
mov
xor
ljmp
mov
lods
mov
aam
cmp
pop
jecxz
ret
pop
mov
jne
nop
inc
ja
adc
aas
es
outsl
xchg
and
das
popf
push
xor
or
aas
roll
int
dec
mov
mov
push
pop
pop
or
out
lock
mov
mov
movsl
lret
xchg
mov
dec
int
pop
pop
and
mov
inc
into
out
pushf
insl
or
xchg
xor
adc
cwtl
cli
cmp
inc
sub
xchg
push
ret
pusha
movsl
mov
cmpsl
inc
int3
lods
xorl
repz
enter
pop
add
pop
cmc
ret
xor
in
add
sbb
inc
add
gs
push
and
sub
mov
test
ja
cmpsl
jle
loopne,pn
movsb
cmp
outsl
mov
hlt
sbb
sub
xchg
jnp
fcoml
bound
jns
cs
shlb
mov
fcoml
pop
mov
fcmovne
aam
or
inc
or
push
xor
out
jae
int3
sub
mov
test
mov
xlat
imul
movsl
or
mov
mull
mov
gs
xchg
loope
fldenv
ss
enter
mov
popa
add
push
popf
and
mov
jns
inc
adc
xorb
xor
push
push
stos
fistps
mov
or
dec
sbb
inc
arpl
test
mov
push
jp
jmp
mov
pop
sbb
mov
lret
pop
pop
mov
jne
sbb
idivl
movsb
mov
xchg
int
insb
pop
dec
shll
push
pushf
jbe
nop
sti
sahf
test
jge
pop
cmp
ss
or
sbb
add
mov
stos
jp
mov
pop
in
in
push
mov
lret
mov
dec
cmp
loope
in
or
pusha
inc
das
push
mov
ret
xor
add
out
jmp
fmulp
mov
fsubs
sbb
mov
xor
scas
inc
pop
pop
mov
mov
and
das
jne
pop
test
push
jb
and
mov
sub
jns
pop
stc
and
divb
dec
or
mov
aaa
nop
inc
jmp
sbb
popf
lret
xlat
hlt
call
pop
les
xor
cwtl
leave
push
cmp
jnp
mov
mov
cmpsl
and
and
cmpsl
cs
test
cld
ret
cli
shlb
movsb
xchg
pushf
ret
pop
outsl
dec
mov
es
je
daa
lcall
aad
fwait
mov
stos
push
popf
mov
insb
int
jb
dec
sub
arpl
mov
in
or
mov
sahf
data16
rorl
inc
mov
in
xchg
lret
sub
movsl
push
data16
cltd
ret
push
mov
daa
les
push
mov
sbb
pop
das
xor
das
adc
and
daa
jp
in
movsl
out
dec
jo
inc
cmp
sbb
push
pop
inc
dec
dec
jae
movsb
test
push
jb
pop
sarb
mov
and
xchg
aas
lret
leave
pusha
cli
jp
ja
ja
aaa
cmp
sbb
pop
sub
mov
addr16
iret
sti
sbb
push
jno
clc
loop
mov
fistpl
rclb
dec
pop
mov
insb
pop
push
cmpsl
mov
sub
xchg
rclb
testb
cmp
nop
in
push
gs
adc
inc
push
mov
pop
xor
inc
jo
push
lea
int
mov
icebp
aas
ret
negl
push
bound
shlb
sub
insb
lcall
xchg
add
jae
test
inc
in
pop
mov
ret
dec
je
pop
add
cmp
or
push
adc
ljmp
outsl
cs
scas
pop
mov
in
and
stc
cwtl
dec
incb
jns
and
es
les
adc
push
push
leave
nop
jno
add
xchg
inc
div
adc
pop
std
mov
or
shr
lret
inc
das
cmp
test
pusha
lds
cli
or
cld
xor
es
and
or
sub
fiadds
test
dec
mull
ss
lods
lds
and
xchg
mov
bnd
out
pop
xor
xchg
mov
mov
jmp
push
mov
test
xor
js
sbb
xor
in
sti
inc
mov
arpl
jle
jg
push
mov
pop
dec
cmp
lds
cmp
sbb
aam
aaa
push
jecxz
movsb
loopne
cmpsb
xor
out
mov
je
mulb
pop
add
mov
sub
and
mov
arpl
adc
adc
popf
dec
enter
loopne
lcall
fadds
ss
dec
scas
jno
mov
sbb
push
xchg
pop
jbe
sub
mov
movntdq
mov
push
or
add
pop
inc
decb
or
xor
sbb
mov
push
lret
mov
sbb
fstps
data16
insb
inc
jno
stc
mov
stc
jge
mov
mov
cmp
bound
int3
pop
or
ret
pop
dec
lahf
push
les
das
sbb
sbb
cmp
push
mov
shl
repz
ret
push
lods
cmc
outsb
jp
andl
jno
aam
out
or
mov
mov
lods
or
pop
cwtl
shll
int
mov
xchg
call
fdivrl
xchg
outsl
add
rol
mov
mov
ds
adc
nop
mov
das
jle
push
mov
rcll
sti
es
push
popa
adc
in
xor
cmp
sub
testl
sahf
pop
xor
addr16
test
orb
fstps
ljmp
jl
cmc
xchg
xchg
ljmp
cmpsl
lods
shrb
mov
push
iret
add
mov
mov
xor
data16
jp
test
push
sbb
add
shlb
jl
loop
stos
rorl
xchg
imul
int3
pusha
and
adc
or
mov
cli
pushf
adc
mov
inc
lock
xchg
jmp
dec
out
push
test
xor
mov
cltd
aad
ret
xor
push
dec
repz
xor
adc
lds
cltd
in
mov
sub
add
mov
sub
lods
dec
mov
fimuls
aas
call
jle
loope
jnp
xchg
loope
adc
inc
dec
push
dec
clc
jno
jmp
test
or
jp
jne
ret
jns
cmc
pop
lods
mov
arpl
mov
cltd
jne
mov
inc
sub
sbb
cli
or
aas
in
sarl
mov
mov
sbb
lods
bound
cmc
jae
or
push
or
mov
xor
add
fadds
jb
jecxz
orb
sub
inc
sub
sahf
dec
jne
mov
xchg
xchg
push
inc
push
adc
cwtl
aad
das
pop
and
insb
jp,pn
dec
nop
sarl
dec
loope
fcmove
mov
mov
jmp
clc
cmp
jg
sub
in
or
and
push
push
cltd
lds
lret
adcb
in
jne
pushf
ret
rcrl
add
and
dec
xchg
iret
pop
push
popa
mov
lret
and
mov
inc
aaa
mov
mov
push
stc
scas
icebp
and
out
leave
add
arpl
mov
stos
pop
jg
sti
fcomps
nop
int
inc
adc
inc
mov
mov
loope
fs
sbb
nop
push
imull
aas
jle
imul
pop
mov
adc
jne
xchg
pop
xor
xor
push
ja
mov
mov
dec
push
addb
je
test
ds
adc
adc
popf
aad
lret
loope
pop
out
fdiv
cmp
mov
pop
fcomi
xchg
xor
xchg
mov
ljmp
ljmp
or
cmc
mov
xor
inc
iret
jb
xchg
ficoms
pop
sti
cmpb
aaa
jge
lods
idivl
sbb
addr16
add
dec
and
adc
xor
xchg
mov
rorl
test
cmpsl
cltd
outsl
mov
add
out
ret
clc
fadd
pop
not
fmull
add
int
addr16
sub
in
xor
xor
mov
roll
pusha
and
inc
fsubs
inc
cmp
xchg
or
pushf
xlat
or
sbb
test
les
into
sbb
dec
inc
pop
ss
andl
inc
xor
les
adc
enter
pop
sub
pop
xchg
mov
mov
test
icebp
xor
mov
rcr
in
push
jmp
and
add
mov
sahf
and
test
xor
inc
popa
mov
lock
and
dec
mov
andl
aam
jae
xchg
push
dec
fcomp
int
cmc
ja
jbe
lret
jg
adc
sub
xchg
mov
push
cwtl
push
popa
push
dec
es
mov
cli
and
fwait
push
push
les
icebp
out
xchg
bound
sub
cs
lret
xor
mov
xchg
xchg
pop
sub
fld
mov
push
lock
xlat
mov
test
ficompl
pop
push
outsb
inc
lds
lods
mov
repz
adc
fs
movsb
fldt
pop
cltd
enter
call
lods
in
mov
sti
mov
pusha
pop
fiaddl
cld
arpl
rolb
lock
jb
stc
cmpsb
xchg
dec
jle
mov
int
mov
inc
das
jl
shlb
mov
js
jmp
xchg
dec
xchg
pop
ss
flds
sbb
adc
add
sbb
xor
sub
mov
enter
cmp
and
dec
fdivs
adc
add
shl
leave
aam
fs
cmp
lret
les
mov
aad
arpl
and
push
pop
scas
es
inc
jle
fldenv
clc
arpl
std
scas
movsl
mov
add
jae
pop
jmp
ds
sbb
std
outsl
push
stos
in
mov
adc
idivb
scas
fidivl
and
ret
dec
or
xor
fnstenv
push
sti
pop
push
jb
fdivrs
sbb
cmc
adc
clc
test
fnstsw
xor
sbb
aam
or
std
dec
es
dec
adc
leave
mov
mov
cmpsl
pop
add
inc
and
inc
mov
xor
xchg
dec
pop
mov
xchg
aam
cmpsb
cmp
rolb
cmp
jle
ss
roll
rclb
movsb
sbb
and
neg
sbb
sbb
in
fmul
lret
repnz
imul
popa
das
lock
pop
sarb
jl
mov
xor
icebp
in
jns
or
int3
add
mov
mov
lods
sub
xor
mov
mov
test
add
mov
daa
pushf
dec
movsl
add
rcl
mov
dec
ds
cmp
xchg
adc
xlat
idiv
into
shll
cmp
xchg
adc
mov
ljmp
push
es
xor
pop
mov
in
add
aaa
arpl
add
cmp
in
cmp
imul
nop
adc
dec
outsb
popf
fdivrs
or
jg
add
or
ret
stos
pop
sub
aas
in
dec
ds
xchg
in
lds
shl
inc
xchg
test
lahf
int3
jg
rcl
sbb
jne
push
pop
icebp
ret
jle
mov
pop
inc
cmpsb
lcall
in
cmp
xchg
push
adc
push
call
stos
sbb
jb
pop
inc
jne
mov
push
loopne
test
sub
mov
inc
sbb
out
jecxz
cwtl
rorb
xchg
out
add
dec
out
jno
dec
xchg
or
faddl
sbb
nop
add
divb
out
pop
subb
out
cmp
mov
mov
push
js
adc
sahf
adc
dec
pop
and
dec
mov
cmc
int
jno
or
enter
das
mov
push
test
and
mov
ds
movsb
dec
js
popa
scas
mov
xchg
ljmp
inc
inc
divb
fstpl
mov
fidivrl
stc
xor
repnz
adc
mov
mov
in
sbb
fiadds
inc
hlt
loopne
sbb
jbe
ret
pop
ret
cltd
mov
cwtl
dec
aas
inc
sbb
jo
ss
stos
jecxz
pop
imul
jmp
xor
fildl
out
in
mov
or
in
xchg
clc
cmpl
mov
push
and
fnstsw
js
mov
push
cmc
inc
push
mov
and
leave
iret
iret
dec
call
and
and
jno
shrb
mov
orb
push
divb
insl
jp
aas
fmul
and
push
loope
sub
bound
cmp
jp
push
mov
inc
add
mov
fst
in
push
add
roll
in
sahf
mov
push
dec
add
push
adc
cli
aad
xor
xchg
adc
rclb
mov
int3
jecxz
repz
mov
loope
xchg
out
sub
outsl
leave
xchg
int3
inc
dec
loop
lcall
loope
and
pop
movd
mov
jns
in
xchg
push
jg
insb
or
xchg
sub
inc
jb
adc
vmovdqa
ret
mov
movsl
mov
es
fnsave
push
push
mov
xchg
xorb
aas
jb
leave
pusha
loop
or
and
sbb
mov
or
add
sub
sbb
fistpl
int
imul
pop
loope
mov
sub
sbb
jno
and
icebp
clc
jne
xor
shl
dec
mov
movsb
mov
jns
outsb
xor
xor
out
adc
add
jl
scas
xchg
and
xlat
std
jne
mov
dec
lds
in
sub
test
pop
push
jmp
and
dec
test
int3
jno
movsb
cmp
cmpsb
mov
cmp
ja
in
mov
push
and
pop
shlb
fiadds
push
das
ret
add
dec
mov
or
into
js
push
jmp
hlt
das
ja
mov
test
add
sub
out
adc
popa
movsl
rolb
add
add
mov
cmp
mov
jl
add
or
push
cld
out
sub
addr16
dec
fsubs
xlat
push
mov
lret
inc
and
inc
mov
adc
daa
fdivrl
out
sbb
movl
xchg
out
aaa
sahf
cli
jne
enter
cs
cmp
sbb
lds
add
jbe
cmpsl
mov
xchg
cmp
and
xchg
lods
cli
inc
push
sub
or
jbe
jl
jb
pop
mov
mov
bound
adc
mov
test
stos
add
insb
outsl
stc
lea
cltd
mov
dec
or
jne
lcall
imul
dec
cmpsb
adc
sbb
xchg
jmp
jae
subb
insl
add
add
rcr
pop
inc
repnz
cmp
jg
push
dec
fisttps
and
ret
add
sub
enter
xchg
and
mov
add
imul
fcoms
xlat
fucomi
mov
sahf
out
sbb
pop
ret
lahf
dec
jge
std
push
lahf
cld
mov
cli
and
dec
in
or
xor
sbb
add
dec
aad
xor
cmpsl
cmp
inc
jbe
pop
mov
notl
sub
cmp
vcvtsd2si
in
and
out
cmp
push
ljmp
adc
das
sbb
mov
lods
sbb
cmpsl
call
mov
movsb
xor
sub
mov
inc
cli
frstor
dec
push
scas
test
mov
mov
pop
in
rclb
call
inc
add
jmp
insb
jno
jp
pushf
mov
adc
stos
stos
pop
lock
dec
imul
lods
and
push
adc
das
mov
xchg
clc
adc
sub
ja
js
pop
mov
cltd
mov
inc
or
sti
jmp
es
or
test
pop
je
ja
lock
push
in
cmpsb
mov
pop
stos
mov
fnstsw
add
gs
mov
and
lods
addr16
out
ds
mov
loopne
push
fucomp
xchg
jmp
xchg
add
outsb
imul
push
sub
xor
fnstsw
sti
insb
movl
cmpb
mov
cltd
mov
bnd
fisubrs
adc
lock
ds
dec
incl
jo
int
pusha
stc
pop
add
subps
loope
mov
and
mov
out
push
pop
imul
cmp
or
add
jmp
nop
pop
or
mov
adc
lcall
mov
pavgb
jle
dec
movsl
xchg
mov
cwtl
scas
adc
addps
std
inc
pop
ja
adc
adc
push
mov
push
enter
divl
push
jae
cmpsb
out
insl
mov
imul
inc
call
lods
popa
push
lcall
arpl
push
jne
dec
xlat
sbb
xor
jge
int3
pop
mov
pop
cmp
int
xor
mov
ret
and
and
jae
scas
es
xchg
repz
scas
aad
clc
add
fstpt
sbb
cmp
xchg
out
jmp
inc
sub
sub
sub
or
shrl
fbld
adcl
das
xor
lods
aaa
dec
fdivrl
in
cmp
fiadds
das
pop
xor
pushl
lock
mov
pop
pop
imul
movsl
push
outsb
inc
insl
mov
or
adc
aaa
lret
out
cmp
xor
cmp
rorb
scas
adc
push
cmpsw
daa
mov
add
mov
pop
cmpsb
popf
popa
mov
add
xor
fwait
jne
pop
lret
xorl
mov
inc
or
and
arpl
or
ja
dec
jl
or
xor
std
jl
mov
test
ficomps
sbb
scas
mov
or
adc
repz
popf
cmc
sub
test
imul
jnp
mov
sub
push
mov
xchg
fimull
out
fldl
nop
movsl
pop
jne
aaa
leave
sbb
adc
pop
mull
sbb
insb
and
push
jmp
aad
popf
xor
fildll
pop
pop
aas
sub
aad
cmpb
imul
xor
clc
imul
sbb
ljmp
sahf
jmp
ret
shlb
fmul
sbb
icebp
stos
mov
pop
enter
lods
flds
jg
xor
or
adc
addr16
push
mov
pop
loop
mov
loop
adc
and
sbb
into
or
subb
cmp
clc
rcrl
mov
movsb
iret
loopne
inc
fs
rorb
mov
sub
test
or
and
out
dec
fisttpl
nop
ret
aad
fisttpl
push
popl
pop
cltd
arpl
stos
shrl
pop
xchg
sub
adc
push
jge
fwait
jecxz
cmp
push
ffree
int
sahf
and
test
or
jnp
insb
outsb
push
pop
mov
imul
fcomps
jg
idivl
sbb
sub
mov
cli
lods
and
xor
stos
mov
adc
ret
pusha
dec
lahf
or
fiadds
xchg
loop
sub
mov
pop
cmp
fnstsw
sub
fdivrs
jmp
sub
movsl
cmp
jmp
sbb
dec
movb
in
les
mov
adc
pop
pop
ret
mov
mov
lods
push
push
popf
cltd
fst
inc
mov
aam
jbe
cmpsl
mov
add
jp,pt
subb
sarl
and
rcll
sub
das
dec
lret
inc
out
and
imul
rcrl
ss
inc
sbb
fdivp
mov
data16
jne
dec
jecxz
cmp
mov
popa
bound
mov
push
aad
mov
sti
sub
dec
mov
push
imul
dec
push
jae
jle
xchg
mov
clc
stos
or
or
and
rdtsc
fimull
push
inc
shr
fwait
sti
push
cmp
fadd
stc
ret
test
js
pop
lds
shr
addl
fnsave
popf
sahf
idivb
dec
movhps
mov
in
fistl
mov
mov
xlat
cltd
and
add
fnstsw
aam
loop
lea
fnstcw
in
imul
lods
pop
add
fwait
inc
jae
jp
mov
inc
mov
movsl
lods
xchg
enter
add
ss
cmpsl
inc
mov
sahf
dec
or
inc
xchg
adc
clc
das
mov
cmp
adc
aam
call
cmp
aaa
dec
mov
cwtl
adc
in
lods
mov
lea
aaa
pop
arpl
xor
je
sahf
ret
and
or
sub
mov
scas
pop
jno
gs
leave
sti
fldt
adcb
loope
fcoml
out
xor
jo
sar
xor
add
xchg
adc
adc
and
lods
jo
roll
lret
aad
dec
outsl
or
cmp
int
stos
mov
xchg
or
punpckhwd
adcb
sbb
xchg
push
push
lcall
mov
fistpll
and
xchg
add
inc
inc
cmp
lock
lahf
push
out
mov
push
imul
in
xor
stos
cmp
shlw
adc
cltd
and
repz
mov
mov
jle
mov
cmp
ja
out
dec
loop
jae
mov
lods
test
rcrb
nop
sub
and
testb
mov
or
lret
aam
pusha
mov
clc
mov
scas
jb
cltd
outsb
fstp
push
sbb
adc
or
pop
jns
adc
cli
add
pushf
mov
xchg
inc
andl
sub
arpl
ds
int3
aam
iret
cld
sarb
les
mov
sbb
cli
xlat
inc
cmpsb
gs
lret
adc
out
sbb
push
cmp
pop
in
mov
fcomps
test
inc
sarl
inc
loope
jbe
dec
pop
sub
mov
cmc
jge
mov
dec
ds
and
testl
leave
sub
les
inc
in
pop
push
ds
mov
pop
xchg
outsb
lds
andl
pop
into
mov
repnz
pusha
ljmp
sbb
scas
in
js
jno
jecxz
mov
loop
inc
push
imulb
xchg
inc
lods
mov
hlt
fst
lahf
ficompl
daa
adc
and
adc
push
jnp
jns
mov
ds
sti
rcrl
fcompl
dec
pop
sbb
jns
jae
cmc
and
add
adc
push
idiv
jne
sbb
imul
insl
push
mov
movsl
into
sbb
divb
shl
in
dec
popf
pop
mov
sub
test
lds
sbb
lock
sbb
mov
loope
sub
and
sbb
negl
pushf
inc
jge
sbb
xor
dec
mov
and
lcall
in
mov
cmc
imul
addr16
das
push
xchg
xor
xchg
ret
sbb
xor
sub
ljmp
fistl
add
xchg
push
cltd
push
data16
xor
pop
shlb
scas
pushf
push
mov
pusha
mov
lods
mov
in
xor
xchg
xchg
push
out
je
xchg
dec
pop
scas
fwait
jno
xchg
loopne
test
sbb
into
out
mov
in
xor
or
mov
jmp
imul
rorb
mov
xor
into
push
in
sub
fs
pop
cmp
xchg
dec
add
add
push
inc
cwtl
push
dec
inc
sub
xchg
shrb
jmp
or
jmp
test
pop
daa
cli
mov
pop
movsl
add
mov
xchg
jb
nop
adc
adc
jl
lret
dec
cmp
or
jge
aam
leave
or
shrl
or
cmc
sbb
mov
xor
ljmp
mov
add
pop
jnp
mov
inc
addr16
or
mov
mov
movsb
push
inc
nop
mov
repnz
iret
sahf
cmp
mov
leave
xor
jge
or
push
js
pop
sahf
das
rcl
inc
cli
cmc
push
ja
or
dec
add
js
out
lock
in
dec
lds
or
mov
mov
outsb
dec
pop
sub
mov
inc
push
cmp
mov
sub
sub
cmp
or
cmp
subl
mov
sar
cmc
xor
out
mov
or
pop
jb
stos
mov
or
xchg
aas
scas
mov
fwait
jg
push
jbe
dec
fdivrl
jno
ljmp
fldl
loop
push
loop
mov
out
ror
rorb
imul
rcl
outsl
inc
dec
or
jmp
dec
pop
push
mov
adc
add
pop
push
push
out
into
and
sbb
stos
mov
nop
adc
lods
cmp
loopne
ss
repnz
mov
loope
push
jp
xor
and
mov
sub
xchg
lret
into
mov
subl
out
cltd
pop
andl
push
ret
ret
lods
jno
data16
mov
xchg
test
mov
je
mov
adc
cmpsb
sub
lock
pop
pop
push
loop
notl
xor
rcrb
sub
daa
int
int3
cmp
adc
scas
mov
pop
and
pushf
ret
and
xchg
jmp
jb
inc
daa
push
das
imul
dec
sbb
loop
out
adc
aas
inc
fiadds
mov
clc
add
xchg
insl
push
cli
dec
fstps
pop
clc
fdivrs
repnz
mov
mov
inc
cli
movsl
out
mov
mov
dec
dec
movb
adc
mov
add
shlb
les
push
loopne
repnz
sub
and
and
pop
cli
sbb
add
xor
cwtl
outsb
insb
lods
fwait
xchg
dec
add
rcll
addr16
add
add
lahf
adc
nop
mov
fimuls
iret
insl
lret
daa
shlb
sub
fptan
xchg
jb
roll
push
inc
push
xor
or
mov
repnz
adc
cli
call
ret
insb
xor
mov
dec
in
mov
xor
sub
ficoml
fmull
xor
jecxz
cmp
outsl
mov
cmc
pop
leave
cmc
fs
push
xor
imul
iret
sahf
or
mov
loope
cmp
sahf
mov
sbb
mov
loopne
loop
lods
dec
mov
ret
push
jbe
addr16
enter
lods
pop
jne
sti
and
sub
mov
pop
in
xor
sbb
xor
or
aaa
lods
mov
or
dec
inc
inc
aad
and
mov
mov
xor
and
and
fcmovnu
cmovs
mov
mov
dec
mov
jae
orb
call
xchg
mov
mov
sub
or
lret
dec
in
shll
pop
dec
aas
ljmp
iret
pop
gs
flds
and
pushf
sub
repnz
subl
call
adc
pop
cltd
stc
test
sbb
test
and
push
mov
arpl
in
cs
aam
negl
jg
cmp
cld
pop
stos
push
push
pop
or
inc
pop
cli
aam
js
ljmp
pop
addr16
pop
aad
mov
mov
push
or
mov
xor
enter
mov
mov
popa
xor
add
ret
inc
and
mov
jb
mov
and
dec
shrl
cmp
or
das
hlt
iret
xchg
imul
jle
mov
lret
and
mov
sub
es
mov
add
lds
or
push
pop
rep
sbb
sbb
cmp
mov
mov
inc
push
xchg
dec
fstps
pop
mov
rcl
mov
fcomp
rclb
jo
popa
sub
add
mov
ror
cld
sbb
add
push
paddusw
dec
xchg
repnz
ljmp
fwait
mov
jl
pushf
scas
push
dec
pop
aad
push
test
out
sub
in
or
mov
mov
adc
mov
or
sti
xor
cmp
fs
jne
inc
pop
popl
dec
dec
call
mov
ljmp
popa
int
xor
lods
lcall
sbb
fistpl
addr16
decb
add
inc
xor
lcall
je
mov
lods
lret
ljmp
out
imul
pop
xor
jmp
jl
mov
cmp
enter
nop
out
out
jp
test
sbb
shrl
cmpsl
in
enter
add
test
fcmovnbe
mov
scas
xchg
pop
outsb
sahf
mov
incb
or
push
loope
jg
lods
cmpsl
lods
ljmp
cltd
outsl
rol
cli
aam
movsb
push
jae
bound
pop
rcll
sub
dec
jb
mov
scas
int
add
push
jnp
shlb
lahf
pop
adc
sub
pushf
xchg
xor
and
std
pop
leave
dec
xchg
fisttps
pop
pop
mov
daa
push
mov
mov
xchg
jae
adc
sbb
ficompl
jl
sbb
psrld
jge
lods
imul
jle
mov
adc
fistl
idiv
inc
or
push
or
lret
aam
dec
lcall
fiaddl
mov
push
iret
aas
test
mov
mov
pop
xchg
outsb
lds
fldl
int
les
add
add
in
push
cmpsb
lods
push
xor
inc
mov
mov
mov
xchg
es
lret
mov
lods
xlat
lret
jge
iret
dec
sub
je
sahf
cmp
push
sbb
inc
hlt
fcoms
or
mov
xlat
add
mov
rclb
leave
push
out
jae
mov
inc
stc
inc
clc
lret
testl
jne
mov
movsl
out
lret
xor
sbb
sub
or
cwtl
pop
sub
xchg
pop
dec
sarb
ds
scas
dec
xor
xchg
cmp
mov
sub
jbe
dec
stos
cmpsl
sub
mov
loope
xchg
arpl
mov
push
roll
movsb
leave
push
in
pop
pop
and
ljmp
add
push
inc
pusha
or
jg
adcl
aas
out
push
popf
aad
jb
cmpsb
mov
in
cmp
loop
hlt
enter
pop
dec
sub
shr
fst
mov
dec
adc
inc
sub
dec
mov
add
sbb
repnz
jae
cltd
cmp
mov
hlt
int
xchg
and
aas
mov
inc
push
mov
ja
jno
xchg
movsb
mov
mov
aam
adc
sbb
leave
sti
fwait
icebp
ret
mov
call
mov
addr16
nop
test
mov
decl
jmp
pop
xchg
mov
sub
xacquire
sbb
jo
xchg
add
aad
jb
pop
hlt
repz
mov
push
or
push
xchg
cltd
loopne
fsubrs
pop
mov
sbb
cmp
aaa
inc
or
sbb
in
dec
sbb
fcoml
or
jbe
aas
bound
mov
mov
cmpsl
stc
lcall
or
inc
push
or
xor
add
pop
cmc
pop
jbe
ds
out
repz
xlat
jmp
cmpb
jae
add
push
push
ljmp
mov
scas
test
in
cmp
mov
push
icebp
or
sub
sbb
xor
lret
aad
lods
in
pop
xor
mov
popa
adc
popf
xchg
mov
scas
fisubs
pusha
jns
jo
mov
cmpsb
sub
and
jo
sub
xchg
xchg
pop
jp
dec
ret
xor
xchg
jne
jmp
in
add
mov
push
repnz
ret
das
les
add
mov
pop
jmp
add
pop
mov
pop
popf
insl
sub
mov
mov
fs
jo
sbb
pop
repnz
jge
cli
mov
fs
jae
rorb
and
add
cltd
test
repnz
iret
fucomp
mov
out
das
repnz
lahf
cmp
xchg
popa
or
sub
loope
add
dec
xchg
stos
sub
imul
shll
cmp
ja
dec
adc
fucomi
sbb
mov
pushf
push
adc
cmp
repnz
sbb
testl
rclb
jbe
lods
ss
push
out
push
sbbl
jg
lock
stos
pop
mov
or
mov
insb
inc
push
pop
xchg
ljmp
mov
outsl
dec
jle
lea
or
dec
test
add
mov
addr16
add
sbb
mov
pop
push
push
loopne
or
imul
inc
stos
loopne
or
xor
pop
mov
mov
push
das
xor
add
clc
cwtl
push
inc
es
jo
jecxz
je
ljmp
in
dec
arpl
xchg
clc
dec
mov
pop
insb
xchg
sbb
aad
push
xchg
mov
cltd
in
sbb
mov
ret
mov
xor
cli
decb
cmovns
testb
int
fimull
lock
add
inc
cltd
add
sub
fistps
push
jno
jbe
pop
repz
pop
jne
xchg
xor
inc
ss
rcl
sub
int
roll
lret
das
nop
cmp
cmpsb
pop
fisttpll
xchg
enter
dec
int3
in
jne
cmp
or
jno
sahf
cli
xchg
stos
scas
insb
ljmp
imul
and
sbb
xor
ret
std
loop
pusha
jnp
mov
push
pushf
sub
je
rolb
sbb
adc
repz
bound
aas
outsl
sub
aaa
repz
sub
das
fildll
das
inc
cmp
scas
aad
ret
adc
jbe
pop
pop
or
xor
data16
je
in
fnstcw
pop
mov
cmp
jp
xchg
lret
pop
in
xor
jle
fisubrl
mov
jg
out
xchg
mov
xor
jecxz
xchg
mov
add
xor
push
int
mov
and
sub
inc
lcall
mov
inc
mov
les
lahf
mov
loop
into
lods
sbb
xchg
jg
lods
stos
add
xchg
and
adcb
stos
and
xchg
lock
mov
fs
imul
mov
lock
push
faddl
xor
lret
shr
lods
mov
and
mov
lahf
mov
fnstsw
pop
inc
and
sbb
jbe
in
leave
inc
adc
inc
sub
cmpsb
add
pushf
add
int3
iret
jp
push
cltd
mov
jp
pop
lds
andl
roll
sub
ss
mov
and
jle
push
outsb
jge
sbb
inc
iret
dec
incb
xor
es
repnz
sahf
sbb
sar
rolb
cmp
jae
inc
adc
test
mov
out
push
push
mov
ficoml
adc
clc
jmp
mov
push
dec
addb
test
adc
and
fdivrl
dec
mov
adc
sub
add
aaa
cld
adc
popf
aaa
xchg
push
pop
cmpsb
sub
xor
mov
stos
pop
test
mov
push
mov
xchg
inc
mov
add
mov
icebp
mov
jb
adc
cs
adc
cmc
mov
xchg
and
sarb
sahf
jecxz
jo
mov
inc
std
dec
dec
cltd
mov
pop
xchg
insl
push
fxtract
cs
dec
data16
insl
xchg
sbb
inc
sbbl
leave
fidivl
stc
pop
or
add
adc
ret
in
dec
xor
push
xchg
sbb
arpl
test
jecxz
xor
xor
add
test
fcomp
jb
in
cmp
enter
out
mov
jb
and
test
jb
loop
loope
out
aas
jg
mov
mov
or
adc
nop
jle
js
enter
sbbb
xor
pop
mov
out
fmull
outsb
out
outsl
fs
fisubs
fidivl
daa
push
ljmp
cmp
dec
pop
loope
jp
cwtl
xlat
test
popa
insl
test
sbb
mov
daa
mov
adc
in
inc
push
dec
std
scas
dec
mov
xor
dec
fistl
in
jns
xchg
popa
addl
xchg
lcall
stc
les
insl
jnp
popf
inc
shll
jmp
ljmp
sbb
fisubrs
and
popf
lea
jmp
jne
mov
shrl
sbb
mov
pusha
mov
cmpsl
or
jmp
je
mov
jp
fdiv
outsl
pusha
push
rcll
mov
aam
dec
dec
xor
scas
dec
fwait
push
dec
js
pop
adc
push
push
xchg
lods
cmp
mov
je
xchg
pop
data16
mov
out
jnp
dec
jnp
rcrb
xchg
test
ja
push
movsl
push
sub
jae
jl
mov
mov
enter
lods
imul
ja
push
sbb
gs
int
rcrb
in
xchg
jmp
stos
push
jb
int3
sub
pusha
data16
xchg
imul
push
inc
cwtd
mov
sti
into
repz
cli
int3
out
das
popa
mov
dec
dec
leave
je
and
in
inc
fnstsw
xor
push
inc
sbb
sbb
sub
leave
jne
and
in
out
xchg
mov
je
sub
addr16
imul
sbb
or
push
iret
rclb
fwait
test
adc
pop
shrl
cmp
pop
pop
xor
mov
lcall
int3
loop
mov
sub
push
mov
movsb
cli
je
jno
dec
xor
mov
clc
or
push
call
pop
ficoms
stos
add
js
imul
mov
push
test
mov
lods
push
clc
shlb
fists
mov
mov
xchg
cmpsb
xor
popf
mov
sbb
ror
inc
out
test
lock
js
jle
int
out
shrl
cmp
adc
dec
fisubl
mov
push
mov
pop
xchg
ret
aas
cwtl
ret
jae
int
push
dec
pop
ja
rcl
out
mov
mov
in
mov
loop
test
cmp
fisubl
pop
mov
sbb
popa
jecxz
mov
sahf
xor
cwtl
ret
in
xchg
cmp
push
fidivl
in
push
and
jnp
roll
andl
into
adc
mov
scas
sbb
or
pushf
dec
in
jne
lods
jns
ja
andl
push
repnz
leave
clc
pop
jecxz
sbb
movsl
add
xor
xchg
insb
xchg
mov
adc
fisttpll
cwtl
ret
aaa
pop
push
add
lods
xchg
mov
push
mov
dec
xor
jg
fimull
addl
xor
ret
xchg
adc
and
pop
ret
xchg
insb
mov
push
loopne
in
insl
mov
out
roll
imul
xor
jo
pop
inc
xor
mov
pop
mov
dec
fstpl
shlb
xchg
inc
mov
fsts
mov
mov
jae
ljmp
sub
mov
arpl
xor
mov
mov
pop
rcl
jns
mov
das
add
mov
imul
loope
xor
mov
hlt
ret
cmp
mov
mov
mov
push
xchg
jb
xor
popa
push
mov
jle
dec
jo
mov
int3
dec
mov
lea
mov
xchg
sub
push
imul
jo
and
in
jp
push
frstor
mov
aam
cmpsl
sub
add
sbb
rcr
and
or
or
sbb
add
inc
shll
jecxz
popa
cmp
push
adc
pop
movsb
mov
jnp
add
xor
test
adc
cs
cmp
cmp
fdivrs
push
pusha
iret
dec
jmp
sub
jae
cmp
jne
les
in
sub
es
mov
sub
mov
rcrb
push
push
out
xor
jbe
and
cmp
jb
push
and
sub
aam
fistl
push
into
inc
pop
int
sub
mov
jmp
mov
adcb
or
mov
sbb
jecxz
mov
jmp
cmp
mov
mov
fildll
enter
and
adc
jno
sete
mov
add
ljmp
cli
dec
test
jnp
lahf
push
rorl
push
or
mov
sub
into
adcb
xor
sub
pop
mov
arpl
dec
xorb
pop
test
imul
add
in
ljmp
aaa
cmp
add
jo
cmpsb
imul
and
adc
jae
daa
xchg
lahf
fs
adc
mov
dec
cli
out
lods
js
popf
and
lods
adc
xchg
dec
adc
rclb
lea
cmovs
filds
pop
negl
fwait
dec
les
push
jae
subb
out
sbb
lds
xchg
add
push
add
mov
lds
cmpsb
cmp
in
data16
ljmp
int
cmp
rorl
pop
imul
das
subl
fnstsw
ss
sub
and
filds
ffree
adc
scas
icebp
sub
xor
sbb
test
xchg
and
sub
pop
pushf
pop
sub
mov
or
push
inc
sbb
arpl
mov
mov
lods
adc
xchg
xlat
sbb
je
out
mov
aad
adc
cmp
inc
imul
fnstcw
pop
mov
and
or
cmp
into
pushf
adc
gs
adc
mov
and
rcrl
icebp
or
push
push
js
leave
out
aad
rcll
pushf
or
push
or
icebp
jle
cmpsl
pop
pop
ja
jmp
nop
repz
pop
lds
rorl
divb
jbe
movb
dec
inc
ljmp
pusha
aam
pushf
imul
adc
popf
int3
push
mov
jmp
add
das
pop
in
insl
mov
or
adc
fmull
ror
jge
into
xor
pop
or
adc
cwtl
cld
fwait
pop
push
jno
mov
mov
ret
or
loopne
in
rcrl
test
std
dec
mov
mov
adc
xchg
sbb
add
inc
mov
xchg
xlat
cmp
or
leave
test
push
aad
mov
lods
and
aam
data16
fdivrs
ljmp
movsb
jae
std
es
loope
daa
add
jo
dec
push
fildll
ret
lcall
jns
cmp
lcall
out
pop
gs
sbb
das
push
push
rorl
pop
stos
insl
inc
sub
xor
pop
push
jp
inc
repnz
mov
push
daa
inc
jne
push
pushf
push
push
scas
dec
inc
pop
ds
in
mov
sbb
jmp
loopne
stos
sub
xchg
inc
mov
inc
inc
mov
ret
mov
xchg
fildll
fnstenv
js
shll
push
xor
xor
pop
add
mov
repz
pop
sbb
dec
mov
popa
jbe
cwtl
inc
add
add
gs
sub
sbb
test
test
add
push
out
aas
inc
orl
or
cli
arpl
mov
pop
data16
fbstp
fsts
out
cmp
adc
mov
call
stos
repnz
mov
ja
cmp
add
pop
dec
out
add
lods
xor
sub
push
sbbb
stos
pop
pushf
ror
xchg
stos
cmc
lods
outsl
jle
xor
call
insl
push
cmc
push
mov
push
xor
and
sarl
xlat
lods
xchg
rcl
or
mov
in
pop
cmp
jmp
dec
mov
in
stc
inc
xlat
dec
pop
mov
inc
pop
jecxz
mov
aaa
sbb
cwtl
stos
stos
fsubrl
cwtl
out
jg
rcrl
mov
sub
repz
or
inc
push
mov
stos
jle
insl
outsb
addl
loop
in
xor
aam
mov
jp
jo
dec
enter
out
jb
lahf
enter
xchg
lcall
mov
or
cltd
cmp
push
mov
xchg
jl
push
int
pusha
add
jmp
je
test
cmpsb
sbb
in
imul
cltd
movsl
mov
xor
out
mov
outsb
sbb
pop
insl
setb
sbb
xchg
or
mov
mulb
sub
mov
stc
ja
mov
movsb
push
icebp
test
out
int3
pop
mov
ljmp
lcall
cmp
sti
dec
xor
inc
gs
es
jecxz
adc
xor
adcb
mov
mov
push
xorb
and
bound
push
popa
mov
outsb
inc
fistps
cwtl
addr16
gs
fnstenv
and
mov
mov
or
xchg
add
dec
scas
pop
aaa
clc
xor
jmp
outsb
aam
stc
cmpsl
add
addb
repnz
push
add
out
xchg
inc
sub
jg
rcrb
push
adc
push
out
mov
push
xlat
cmp
mulb
test
xchg
mul
loop
inc
dec
adc
mov
mov
push
adc
lret
jle
js
fsubp
lret
push
mov
sub
jb
lahf
aaa
jno
add
paddb
dec
xor
pop
jecxz
mov
imul
fisttpl
outsb
adc
xchg
cli
aaa
mov
dec
xchg
mov
adc
popa
ficomps
into
xchg
dec
xlat
jno
nop
lret
imul
pushf
outsb
inc
xchg
stc
loopne
xor
fldcw
dec
lret
loop
les
ljmp
mov
xchg
xlat
jmp
cs
shr
adcb
adc
out
jne
mov
in
jl
inc
jno
push
jae
push
xchg
cmp
xchg
mov
sbb
scas
gs
ljmp
aad
cmp
sbb
mov
data16
cmpsl
pop
xchg
dec
mov
ret
scas
add
push
inc
pop
test
cmpl
call
repnz
add
stos
inc
popf
xor
lea
sbb
cwtl
dec
dec
mov
shl
xor
movsb
cwtl
inc
dec
int
lods
mov
mov
add
and
shrl
cmpl
xor
xchg
fdiv
adc
fwait
push
cmp
mov
lods
lods
mov
rclb
clc
xlat
mov
jns
cmpb
dec
js
imul
push
pushf
ds
in
jnp
out
data16
push
dec
add
mov
mov
sarb
xchg
add
jno
push
and
jge
fdivrl
idiv
in
scas
xor
outsb
cs
and
mov
push
mov
or
jl,pt
lds
inc
das
jl
mov
pop
repnz
mov
insb
clc
inc
jo
lahf
subb
jo
push
cwtl
mov
add
mov
imul
pop
xlat
hlt
cmp
xorl
xor
pop
jmp
outsl
cmpsb
add
imul
lea
popf
jg
nop
pushf
jne
jp
mov
pop
rorb
inc
lea
sub
sub
mov
add
mov
push
clc
popf
pop
xchg
push
or
cwtl
jb
xchg
sbb
fs
adc
or
or
mov
fbld
test
xchg
mov
daa
push
push
dec
test
or
pop
xor
cld
popa
sbb
in
xchg
mov
sub
sub
sub
gs
push
push
jns
stos
inc
dec
adc
xchg
cltd
stc
inc
sti
lods
fmuls
push
nop
and
sti
sub
add
mov
in
sub
cmp
movsl
xchg
call
xchg
inc
testl
fld
inc
add
add
roll
insl
dec
sub
mov
jg
into
xchg
aam
or
and
mov
rcr
pop
jl
mov
mov
push
adc
xchg
loop
cmpsl
jecxz
daa
daa
dec
mov
mov
jmp
pusha
push
daa
js
jle
push
iret
fdiv
push
outsl
ds
push
sub
loopne
sub
inc
int
popf
je
xchg
aam
push
das
inc
push
fldt
or
pop
clc
jle
mov
ds
xor
add
ret
out
xchg
pop
push
xor
inc
mov
pop
repz
orb
hlt
ja
jbe
mov
gs
into
filds
pop
sub
lret
inc
sbb
xor
ret
cwtl
es
daa
call
xchg
jcxz
repz
push
add
mov
sub
or
and
outsl
mov
xchg
popa
jnp
jnp
cmpsl
jp
in
subl
out
sbb
std
aaa
sbb
daa
xchg
jo
sub
mov
pushf
outsl
lret
dec
jo
lahf
cmpsl
mov
daa
out
jo
movsb
sub
lock
cmp
int3
cmp
add
rol
ret
and
rcl
inc
inc
pop
mov
push
sub
push
test
mov
loop
iret
add
mov
lods
and
xchg
clc
fidivrs
dec
and
sbb
hlt
xor
hlt
inc
out
movsb
bound
inc
cmp
pop
daa
ds
ret
aas
add
notb
pop
push
lds
pop
test
lock
push
psubusb
icebp
data16
push
dec
push
jmp
imul
adc
xlat
cltd
cld
aad
jnp,pt
xchg
inc
adc
or
scas
mov
xchg
out
bound
mov
insb
retw
push
or
mov
sub
and
es
aaa
dec
fistpl
adc
dec
fs
xchg
jg
stc
or
mov
mov
lret
xlat
fdivrs
out
cmp
dec
ret
sub
ljmp
sub
mov
mov
cmpsl
stos
pop
bound
xor
mov
addr16
sub
stos
sbb
pusha
push
ret
pop
inc
mov
mov
jb
imul
sub
jns
jae
jnp
add
push
gs
jle
and
cmc
pop
sbb
addl
stos
rol
add
add
std
cmc
adc
cli
push
std
fs
test
sbb
pop
leave
popa
xchg
loope
jp
fldcw
enter
sarl
mov
arpl
in
popa
add
push
inc
push
xchg
adc
sbb
mov
in
enter
and
pop
outsl
dec
add
mov
jge
pop
stos
insb
pop
cmp
loop
pop
xchg
adc
jmp
imul
fsubs
push
lods
mov
adc
add
insl
and
mov
cmp
lea
ret
pop
adc
dec
jp
cmp
stos
xchg
or
jecxz
or
pop
in
mov
aam
cmp
mov
cld
sbb
pushf
push
cltd
cmp
icebp
scas
add
mov
pop
xchg
sbb
push
dec
xchg
je
fnstenv
mov
sahf
add
fdivs
and
in
xor
cmp
xor
cmp
push
in
or
popf
dec
leave
call
sub
shlb
shll
jge
cmovg
mov
add
jp
or
pop
mov
fimuls
cs
ret
pop
movsl
cwtl
xchg
jmp
gs
or
mov
mov
pop
ljmp
cmp
sahf
popf
loopne
aaa
sbb
adc
ss
adc
test
sub
subl
clc
sub
xchg
fld1
stc
sbb
push
jle
push
cmc
sbbl
scas
and
fdivrp
lret
enter
stos
ret
mov
push
shlb
cmp
ds
mov
mov
es
sbb
mov
sub
pop
dec
dec
cmp
pop
push
jecxz
add
repz
rep
mov
inc
ja,pt
popa
scas
cmp
pop
mov
mov
mov
xchg
mov
leave
dec
jmp
sbb
into
test
pop
inc
repz
inc
sub
sahf
xchg
jl
and
mov
xor
xor
jns
inc
mov
rorb
jnp
out
mov
ja
enter
push
xchg
std
popa
cmpsb
xchg
mov
icebp
cmp
dec
inc
pop
or
jmp
mov
xchg
pop
jg
and
pop
sub
push
je
sahf
insb
lock
jge
popa
cli
xchg
xlat
fldl
das
sub
or
jb
inc
in
push
dec
scas
ret
ret
sub
jno
adc
dec
pop
mov
in
and
pop
sbb
sti
jge
inc
orb
mull
lods
iret
negb
lcall
jb
push
iret
popf
pop
pop
inc
mov
adc
adc
ds
mov
cmp
es
sbb
pop
mov
scas
loop
nop
lea
imul
adc
xchg
sbb
cmp
add
mov
test
inc
jg
mov
xlat
es
fstpt
gs
data16
or
sub
lret
xchg
add
fcompl
mov
orl
insl
pusha
push
push
in
stc
call
sbb
cmp
lds
adc
loop
pop
mov
jno
jg
dec
cmp
sbb
sub
mov
scas
and
iret
xchg
leave
dec
push
rcr
cwtl
aaa
inc
mov
cmp
inc
add
dec
mov
std
push
fnsave
and
test
sbb
repz
movsb
push
cwtl
pop
inc
sub
notl
jbe
sbb
inc
sti
cmp
pop
dec
movsl
sbbl
jb
and
ret
lret
or
data16
or
add
or
push
mov
mov
icebp
cltd
dec
mov
push
xchg
je
shlb
jg
adc
push
add
iret
hlt
xchg
aaa
jp
xor
mov
cmc
cmc
popa
test
dec
pop
scas
dec
dec
addr16
hlt
data16
mov
enter
sbb
inc
xor
clc
pop
jmp
subl
jbe
jl
inc
inc
sub
testb
xor
mov
rol
mov
std
popf
dec
mov
mov
xchg
xchg
mov
stc
test
xlat
inc
pop
test
cmp
sub
daa
adc
mov
push
shr
jae
leave
fidivrl
mov
jl
lds
push
daa
out
cmp
sub
fidivrl
add
dec
lods
push
and
xchg
loope
fstpt
in
js
pop
inc
push
leave
movsl
mov
jae
mov
popa
jno
dec
jmp
fistps
fimull
lock
in
dec
adc
and
jmp
jnp
pusha
mov
jg
inc
mov
and
or
cmp
dec
cs
loopne
and
cmp
jnp
pushf
mov
cmc
mov
sub
cmc
and
dec
add
sahf
sub
push
movsb
popa
in
data16
sub
mull
adc
mov
inc
aas
pop
mov
clc
hlt
mov
mov
and
insl
xchg
adc
add
stc
iret
push
mov
jge
mov
into
mov
mov
adc
push
xor
dec
mov
dec
xor
cs
and
sub
int
add
push
mov
mov
stc
and
xchg
inc
push
push
push
dec
int3
sbb
cs
adc
xlat
pop
push
call
xchg
or
cmc
pop
fmulp
cmpsb
call
push
aas
aas
lock
mov
and
ds
repnz
sahf
push
sub
das
jg
daa
outsb
mov
xor
leave
ret
out
repnz
insl
xchg
dec
mov
xlat
add
cmp
sub
mov
inc
pushf
fcoml
adc
adc
mov
xchg
pop
push
cmp
rorb
lods
fchs
inc
int3
gs
mov
jb
lcall
jbe
inc
scas
aad
adc
push
je
jmp
sbb
dec
and
adc
xchg
ficoml
xchg
dec
in
xor
xchg
cld
pop
mov
sti
clc
jo
das
imul
sbb
pop
fbstp
add
fmuls
sti
push
cmp
out
add
jmp
test
add
cmc
mov
lcall
int
pop
jmp
insb
sbb
ficomps
push
nop
xchg
jns
lods
dec
std
jmp
cmp
in
out
and
cmp
mov
shlb
ja
dec
or
je
test
pop
lahf
outsl
push
sub
mov
add
pop
sbb
sbb
xlat
jno
inc
mov
or
jno
lahf
push
xbegin
cmp
sub
xchg
cld
negl
gs
mov
jge
stos
push
adc
adc
push
jb
sub
push
sub
cmp
push
mov
jo
cli
pop
jo
das
inc
dec
push
mov
sbb
lea
jbe
or
cltd
sarb
xor
ret
lods
lahf
cmp
std
mov
jmp
cmp
test
call
lahf
mov
out
push
push
imul
adc
sub
lret
pop
fiadds
mov
mulb
pop
mov
adc
sahf
lods
sbb
jbe
pop
add
dec
scas
sbb
in
test
ja
jne
xchg
add
xlat
xor
stc
mov
out
push
cvtpi2ps
dec
sti
fs
jl
mov
cmc
test
add
insb
subl
pop
or
xlat
push
pop
aas
jns
mov
jg
xor
out
jo
mov
ljmp
pop
out
incl
je
push
dec
stc
push
sub
jbe
stc
shlb
icebp
cltd
movsl
mov
cmp
aad
pop
cmpl
mov
sarl
jge
repz
jb
mov
fwait
or
popf
mov
inc
push
les
mov
mov
push
dec
loope
fistl
aam
add
xchg
in
cmc
sarb
or
dec
push
xchg
outsb
popa
push
adc
rcr
pop
mov
sarb
mov
out
jns
xor
push
imul
into
cli
sub
xchg
notb
mov
jne
or
mov
pushf
mov
xchg
jp
sbb
bound
int
xchg
les
loope
xchg
mov
add
mov
cmpsl
sti
and
jbe
jb
xor
test
shrb
and
cmp
jo
lods
loope,pn
sbb
call
jb
jns
or
mov
add
push
inc
and
insb
or
dec
add
fdivs
inc
mov
push
enter
lea
xchg
push
jecxz
sub
pop
lcall
push
test
shll
dec
xor
xchg
icebp
bound
int3
jge
popf
dec
sbb
scas
test
outsl
outsl
stos
jo
jl
ret
lods
adc
sbb
insb
adc
sub
outsl
xchg
pop
xchg
jb
mov
loope
cmpb
dec
imul
hlt
cmp
jmp
leave
pop
cmpsb
push
adc
lret
jecxz
call
aad
sub
outsl
push
mov
aam
push
jne
mov
cmp
fdiv
stos
push
sbb
mov
popf
mov
pop
test
int
mov
mov
aas
mov
xchg
fnstenv
push
daa
sbb
xor
pusha
xor
mov
push
fisubrs
xor
jne
adc
mov
in
push
fisttpll
sbb
inc
cmpsl
cmp
dec
add
or
stc
add
adc
pop
jl
xor
popf
les
into
mov
sub
cmpsl
xor
adc
imulb
inc
inc
add
mov
leave
cld
and
pop
in
jae
push
add
xchg
test
fcoml
pop
sbb
mov
push
push
mov
ret
xchg
pop
shll
js
and
das
imul
cli
mov
cli
and
jecxz
rclb
sbbb
inc
inc
in
rcrb
lods
and
shl
movsb
jns
repnz
push
stos
xchg
cwtl
lret
or
adc
xchg
sbb
ss
mov
jae
orl
scas
inc
inc
sahf
ret
mov
jmp
add
or
xor
fdivs
test
loopne
icebp
dec
repnz
in
or
push
mov
loope
sub
cmc
xor
dec
jo
outsl
xchg
xchg
cli
inc
cld
rcrb
je
adcl
cmp
into
sbb
sub
dec
sbb
mov
adc
fnstcw
lods
fwait
pop
into
mov
inc
jns
into
out
roll
pop
ja
and
setno
outsl
popa
sbb
jmp
xchg
cld
aas
into
add
sub
cwtl
dec
imul
cvtps2pd
cli
lret
fdivs
fnstsw
cld
in
sti
sahf
test
nop
rep
push
sarb
pop
sub
inc
inc
int3
mov
xchg
popf
xor
mov
dec
add
popf
sti
pusha
in
or
rcl
cli
xchg
into
pop
cwtl
jecxz
push
testl
jmp
stos
ret
inc
mov
pusha
sub
out
xchg
jle
sub
outsl
cmp
lods
enter
xchg
fwait
lock
outsl
test
mov
gs
lock
movsb
xor
in
xchg
test
mov
lds
cld
jecxz
ljmp
loopne
lods
inc
cli
lea
jg
push
call
push
outsb
push
loope
pusha
push
inc
mov
mov
xor
arpl
int3
fistpl
adc
subb
sub
sub
mov
dec
setp
xchg
fcmove
adc
and
scas
and
jmp
sbb
cmc
mov
hlt
sbb
and
inc
sahf
sbbb
mov
ljmp
mov
mov
stc
sbb
and
ficoms
iret
xor
adc
mov
and
mov
or
aam
testl
bound
mov
xor
xlat
loope
dec
xor
mov
ss
dec
inc
push
imul
fstps
insb
push
jl
iret
sbb
dec
dec
push
cmp
int
mov
dec
sarl
out
mov
mov
lea
xor
sub
and
mov
cmp
imul
lods
pop
xchg
xchg
jo
xor
shl
faddl
lea
xchg
jo
mov
shrb
daa
xor
aam
inc
in
mov
gs
popf
and
xchg
cmp
mov
mov
lret
aas
dec
dec
scas
inc
std
pop
dec
repnz
sbb
sub
cwtl
cli
test
and
sbb
repz
xor
in
out
insl
rcrl
cmpsb
mov
ds
inc
sub
int3
lock
imulb
les
cmpl
dec
iret
sbb
addr16
push
gs
stos
mov
cmp
dec
pop
idivl
int
dec
call
test
lock
fdivp
sbb
mov
loope
and
shlb
adc
cmpsl
jnp
es
into
roll
int
add
sti
imul
mov
push
xchg
iret
or
jo
pop
mov
jp
cltd
ret
pop
repz
mov
add
xor
mov
push
xor
pop
adc
out
push
data16
imul
nop
fwait
lcall
js
dec
aas
js
or
mov
jmp
and
add
jg
xchg
fidivrl
push
jne
mov
outsl
enter
fdiv
cmp
fildl
test
jge
or
insl
inc
add
arpl
xor
pop
sub
inc
jnp
jnp
xorl
push
sub
rcll
test
dec
mov
pop
and
enter
movsb
movsl
sub
push
inc
xchg
jnp
xlat
mov
jno
js
cli
cmp
sbb
dec
pop
inc
sbb
dec
mov
cwtl
sbb
das
ret
sub
btc
ret
push
outsl
add
dec
lahf
or
int
jne
jno
dec
xchg
adc
or
out
jbe
das
push
js
or
sub
mov
sub
test
xor
stos
pop
je
lds
leave
mov
call
icebp
cltd
pop
dec
sbb
jmp
mov
sbb
das
mov
imul
scas
xchg
cs
ds
inc
xor
fcompl
insb
repz
addb
sub
jmp
push
imul
shrl
sub
sub
cmpsb
jmp
sbb
cmc
filds
xchg
stos
pop
cwtl
jne
repnz
push
je
jae
lods
xchg
in
jb
xlat
loop
dec
rcrb
js
sbb
sbb
adc
sbb
ljmp
bound
aaa
jge
fisubrs
mov
cmp
sahf
out
add
xchg
cmp
js
fsubl
out
cmc
ret
mov
mulb
cmpsl
outsl
cmp
outsl
xor
or
call
jg
sub
outsb
sub
inc
push
stos
cmp
outsb
movsb
popf
lret
stos
lcall
fsubrs
stos
sub
movsb
into
out
adc
movsl
mov
cli
sub
shrb
ds
movsl
cmc
iret
loope
and
cmpsl
mov
jmp
sahf
sub
and
inc
pop
shr
arpl
jecxz
sub
cmp
and
lcall
adc
xchg
scas
adc
bound
or
test
jnp
xchg
ror
scas
mov
xchg
lods
fsubrl
jmp
sub
les
mov
cs
and
jno
lret
clc
das
inc
nop
xlat
mov
dec
mov
cli
out
xor
outsl
mov
mov
mov
mov
cli
cmp
jo
js
fwait
push
cmc
fidivrl
pop
dec
subb
push
daa
in
lods
cld
sarb
inc
aad
xor
mov
or
shlb
enter
nop
sar
fldcw
fs
stc
les
adc
jmp
lds
mov
jle
jno
pop
out
xor
mov
sub
sti
mov
inc
gs
mov
mov
xchg
sbb
dec
pop
jle
sbb
mov
pop
jmp
sbb
jecxz
pop
rorl
nop
xchg
or
fsubs
scas
jno
push
jae
xchg
mov
jp
sbb
push
test
addr16
imul
jae
dec
movsl
inc
enter
icebp
and
mov
xor
dec
pop
jbe
sti
sbb
fsts
repz
push
pop
fnsave
in
mov
and
mov
sub
adc
jle
push
xchg
jo
pusha
add
addr16
mov
and
clc
fistpl
dec
mov
jae
xor
xor
or
jmp
in
xor
outsl
insb
sbb
iret
rolb
in
outsl
xor
imul
adc
mov
cmp
mov
bound
xchg
xchg
jmp
sbb
jae
test
or
scas
ret
test
test
mov
pop
mov
into
ljmp
ret
and
xchg
ret
mov
mov
sbbl
push
bound
cli
sbb
clc
mov
ss
xchg
pusha
jl
inc
dec
pop
xorl
cmp
cld
xor
adc
stc
pop
pop
testb
push
add
mov
and
push
inc
movsb
lock
or
cli
and
cmp
xchg
outsl
xchg
scas
mov
arpl
dec
iret
sbb
call
xchg
mov
sbb
test
push
popa
bound
pushf
shlb
lahf
push
adc
test
scas
mov
ss
dec
aaa
jns
fwait
mov
mov
xor
addr16
inc
add
stos
and
sarb
jb
rcr
push
cs
cmpsl
data16
sub
xor
test
mov
jg
hlt
aad
insl
and
mov
aam
jmp
xchg
pop
aaa
pop
dec
pushf
data16
fcmovbe
jp
mov
cwtl
pop
out
mov
insl
xchg
push
xor
jbe
dec
std
js
or
mov
add
ljmp
xlat
push
jae
jl
or
aaa
and
jb
sbb
jge
out
mov
and
dec
pop
hlt
dec
mov
cmpsl
adc
cmp
repz
mov
mov
fdivrp
cmpsb
or
dec
adc
fildll
je
test
lret
in
mov
sbb
cltd
xor
clc
addr16
shr
mov
mov
enter
lret
xchg
and
xor
push
jnp
mov
push
or
jae
push
sbbb
cmpsb
ret
sub
or
xorl
fdivr
mov
or
pop
mul
cli
int
mov
jg
in
inc
inc
mov
test
push
push
rclb
or
rclb
mov
dec
es
sub
in
loop
ret
jge
cmp
jl
jle
xchg
enter
lods
lret
xchg
mov
fbstp
mov
lds
cmpsb
in
incl
fs
not
add
and
test
mov
pop
and
cmp
xchg
mov
int3
adc
mov
orb
push
or
das
dec
pop
imul
xchg
in
inc
or
inc
mov
xor
push
pop
aas
cmpsl
andl
mov
add
stc
mov
push
cmp
push
mov
popa
shll
add
cmp
insl
xchg
mov
jnp
fucomip
gs
loopne
jns
jo
inc
lock
in
cmpsl
popa
les
push
inc
pop
rolb
shlb
mov
adc
ja
xor
pop
mov
push
or
push
in
sbb
adc
inc
nop
xor
add
lcall
inc
pop
test
cmp
adc
mov
gs
xor
cmp
jmp
pcmpgtb
loopne
jmp
ja
out
imul
mov
jno
out
or
movsl
jns
test
lahf
icebp
roll
aad
mov
inc
lcall
push
hlt
in
xor
or
flds
out
sbb
addr16
lahf
lods
mov
mov
test
push
cmp
ret
scas
adc
push
jo
movsl
jge
stos
push
movsb
jl
clc
adc
imul
xchg
call
xchg
xchg
insb
mov
scas
xor
inc
arpl
pop
test
sub
xor
aad
loop
jo
sbb
xor
mov
rcr
adc
add
scas
inc
imul
cmpsb
cmp
in
lcall
rclb
mov
mov
adc
insb
enter
ljmp
decb
loopne
mov
mov
aas
push
cmp
outsl
inc
or
sbb
mov
cmp
push
sahf
dec
lcall
mov
dec
mov
sbb
inc
xchg
lahf
cld
test
out
out
jno
insb
test
pop
fsubrs
fisttpll
jno
inc
fs
xor
xor
jae
push
mov
dec
lods
rolb
xchg
add
jle
gs
jo
addr16
jmp
fs
mov
sub
int
adc
cmp
popa
push
xchg
xchg
jle
or
fldt
clc
sbb
pop
mov
jb
fildl
xchg
inc
ss
pop
insb
addr16
pusha
je
rcll
push
push
pop
sub
bound
sbb
jecxz
pop
xor
add
out
les
dec
lods
pop
xor
xor
lods
leave
mov
leave
sbb
fwait
pushf
ret
loope
inc
or
arpl
std
gs
movsb
aam
pop
pop
mov
inc
sarb
popa
cld
jmp
adc
dec
jns
push
and
movsl
add
add
sub
das
xor
dec
aas
jo
mov
scas
imul
mov
dec
pop
aaa
mov
mov
lahf
sarl
outsl
fcoms
or
icebp
push
cmpsb
notl
aas
push
jg
lea
cmp
sub
mov
pop
mov
push
pop
mov
cmp
jecxz
xor
xor
pop
cltd
fadds
fstp
mov
sub
out
adc
sahf
pusha
and
sbb
jb
stos
out
add
fisttpl
mov
and
dec
mov
shlb
out
imul
das
shl
sub
mov
sub
and
jnp
test
lahf
jle
xchg
das
out
loop
cmp
scas
movsl
sbb
xchg
jne
mov
fisubl
xor
dec
lock
jge
repz
xor
push
mov
xchg
test
and
mov
testl
loop
cltd
subl
into
lahf
add
iret
or
jo
pop
cli
aaa
add
pop
push
jl
stos
pop
mov
or
fiadds
ja
sbb
jg
xchg
cmp
adc
popa
bound
mov
movsl
aam
inc
mov
xchg
pushf
or
fwait
fs
xchg
out
pusha
out
mov
inc
ja
cmpsl
push
notb
ja
mov
ds
sbb
adc
aas
ret
push
push
or
pop
dec
pop
mov
gs
rol
and
jnp
insb
push
cmp
bound
jns
dec
jno
dec
dec
mov
ret
jmp
pop
movsb
lahf
push
aaa
jnp
xchg
inc
stos
jns
dec
cwtl
fcmovb
enter
xlat
xor
ss
shrl
negb
ret
jmp
or
push
fildll
je
clc
mov
subb
xlat
lock
add
mov
add
into
jmp
popf
sbb
fldenv
std
movsl
imul
jnp
mov
fs
or
xor
iret
test
adc
mov
pop
sbbb
shlb
inc
movsb
mov
mov
sti
ret
push
les
xchg
lock
adc
arpl
mov
mov
pop
fwait
in
push
mov
int
addr16
inc
jnp
cmc
cmp
dec
push
fistpl
jle
dec
pushf
ss
push
rcrb
inc
xchg
jb
ja
out
add
inc
cmp
rcl
arpl
loopne
cmpsb
sbb
mov
and
dec
cld
xchg
or
dec
push
mov
loopne
and
out
imul
popa
test
mov
test
push
lret
nop
lcall
movsl
in
and
sbb
mov
fs
fnstsw
shrl
dec
fwait
lret
test
jb
sbb
popf
push
pop
xlat
ljmp
xchg
xchg
fcomip
stos
add
jns
jmp
mov
mov
into
or
fcompl
mov
xchg
jle
icebp
cmp
add
xchg
inc
sbb
push
add
add
adc
jb
jbe
xchg
stos
and
aad
outsl
xlat
fsubrs
cs
test
push
mov
cmp
lea
addr16
bswap
push
lahf
mov
sub
mov
movsl
mov
dec
fisubrs
mov
es
jno
mov
push
pop
mov
clc
cld
idivb
inc
xchg
xchg
pusha
ret
punpcklbw
sbb
aas
mov
popa
sub
sbb
jbe
fiadds
add
adc
lcall
xchg
aaa
test
jge
popa
neg
int
jo
xchg
pusha
ja
mov
fs
repz
aaa
in
in
movsb
mov
xor
cwtl
out
sbb
nop
popf
pop
in
pusha
fbstp
cmpsl
cmc
loop
popa
mov
ljmp
pop
sbb
cld
popa
pop
and
inc
es
out
insb
pop
cmp
mov
icebp
inc
pop
mov
mov
scas
and
dec
cmpsl
or
sbb
out
pop
addb
rorl
pop
mov
add
inc
cmpsl
mov
xchg
dec
rclb
push
pusha
xchg
and
stc
jecxz
cmc
cmp
out
and
out
adc
pushf
in
push
lea
fprem1
popa
mov
adc
jg
out
jno
data16
xchg
in
mov
dec
lods
or
fs
mov
add
and
xchg
fwait
xchg
adc
inc
stos
pop
fldcw
aam
outsl
dec
clc
lds
je
arpl
call
or
push
lret
pushf
stos
test
pop
outsb
cmp
pop
push
loop
inc
inc
jns
outsl
lods
orl
incb
sub
out
pop
icebp
sbb
push
sbb
enter
sub
jle
fiadds
inc
adcb
xchg
sahf
pop
pop
shll
das
shll
enter
add
cltd
adc
in
mov
mov
and
add
adc
fucom
aaa
cmp
jmp
in
sub
jbe
and
mov
xor
and
outsb
add
sub
cs
and
adc
ljmp
not
ljmp
sbb
imul
mov
into
insb
test
jp
cmc
sub
inc
test
and
mov
gs
sbb
add
inc
loop
push
lret
ja
scas
mov
sbb
hlt
ss
aam
cmpsl
pop
stos
sti
jo
dec
mov
pop
cld
and
aaa
les
popf
jmp
out
jne
rolb
jle
pop
mov
or
or
sub
int3
jne
fwait
add
xchg
sbb
inc
cli
pop
aad
adc
xchg
lock
test
push
pushf
mov
jbe
fsubl
add
pop
or
pop
int
in
push
dec
fidivrl
adc
int3
xor
inc
inc
lock
repz
into
std
gs
lock
pop
bound
int
dec
mov
popa
cmp
insl
push
loope
test
lock
sbb
xchg
ffree
inc
scas
idivb
sub
push
out
dec
shrb
mov
pop
adc
mov
inc
jle
xchg
sbb
or
sbb
mov
mov
subb
fisttps
xor
test
xorb
cmp
push
aaa
mov
sub
addr16
jno
adc
xchg
mov
imulb
inc
cltd
lcall
or
cmpsb
scas
inc
pop
movsb
ret
aas
push
adc
adc
pop
jbe
xchg
mov
movsb
ss
xchg
add
push
imul
movb
notl
lcall
enter
adc
loop
addl
pop
fwait
ss
mov
or
mov
mov
dec
test
mov
xchg
sub
rcll
repnz
sbb
inc
sbb
cmpb
adc
dec
mov
inc
repz
dec
jmp
sbb
fcmovnb
mov
cmp
scas
stos
add
les
pop
dec
push
push
sbb
sub
fstps
mov
sbb
jnp
push
dec
add
jbe
dec
mov
fs
test
jecxz
sbb
in
or
jo
inc
in
push
push
gs
int
dec
sub
mov
dec
daa
mov
std
out
popa
inc
imul
daa
arpl
mov
pop
mov
call
jns
xor
cltd
iret
loope
jl
xchg
push
prefetch
xor
jmp
int
pusha
lret
push
sbb
jge
stos
mov
xchg
xchg
stc
lahf
adc
nop
fwait
inc
iret
notl
adc
repnz
and
sbb
sti
xchg
jae
mov
sub
mov
lea
popf
or
in
cmp
sub
and
dec
inc
push
leave
flds
dec
aam
dec
sbb
and
lock
aad
push
pop
dec
dec
inc
cwtl
lods
inc
cmc
popa
cmc
xchg
imul
notl
loop
push
mov
or
push
arpl
stc
mov
out
mov
notb
or
add
insb
sahf
lds
movb
pop
daa
or
imul
and
and
hlt
sahf
lds
inc
fbstp
and
rcll
jns
movb
imul
fsubrp
mov
mov
into
dec
cmp
ss
es
int
mov
faddl
and
sub
clc
addl
jge
xchg
mov
mov
mov
and
inc
mov
fildll
dec
sub
fmull
mov
ss
frstor
outsb
cmp
xchg
mov
pop
mov
pop
out
ficomps
insl
cli
je
sub
cmpsl
repz
adc
push
mov
jge
xor
pop
inc
add
ss
enter
cli
rcrl
bound
movsl
add
xor
lret
popf
mull
inc
mov
pop
inc
shlb
jge
jg
inc
inc
cmp
jns
xchg
add
push
add
xchg
sub
mov
adc
or
mov
test
mov
lods
arpl
cmp
in
dec
push
mov
and
adc
or
das
mov
data16
or
fbstp
push
xchg
push
insb
sub
loopne
enter
sti
popa
arpl
rcrl
jo
push
adc
loopne
lcall
gs
insb
ds
xchg
push
iret
lods
jb
cs
fiaddl
hlt
jl
inc
rclb
adc
or
fpatan
inc
adc
mov
lock
sub
mov
push
cmp
pushf
mov
push
dec
std
mov
mov
sbbb
pop
jo
jmp
mov
sub
rorl
sbb
xchg
mov
mov
cmpsb
sbb
push
or
test
inc
jg
mov
lret
fiaddl
adc
movsb
jne
cmp
decb
cmp
jmp
fdivs
xlat
loope
xor
sti
mov
fimuls
xor
jle
cmc
into
fs
push
add
cmp
push
dec
aas
fiaddl
insb
rcrb
lcall
adc
adc
repnz
jo
mov
aad
sub
repz
setae
adc
xor
cmp
sahf
js
je
scas
daa
gs
out
fcmovne
push
jmp
pop
xorb
xchg
ljmp
jg
in
std
repnz
lds
inc
cmp
mov
xor
pop
ss
xor
and
add
and
movsl
cmp
fisubs
cwtl
xor
jp
jle
cmp
jbe
scas
inc
or
das
out
xor
push
mov
cs
inc
sub
rolb
les
cli
adc
rcrl
ss
sbb
inc
loope
mov
jmp
test
xchg
imul
sub
fnstenv
in
jg
cmp
data16
jns
jge
jae
stos
sbb
inc
bnd
mov
fisubl
sti
or
push
and
cmp
rcrb
mov
jge
mov
je
pop
adc
test
imul
lcall
aaa
test
push
sbb
int
mov
test
cmp
stos
sbb
data16
mov
data16
scas
mov
cmp
sub
loop
inc
icebp
add
scas
xchg
push
dec
pop
or
dec
dec
and
cli
test
lea
xorl
jae
inc
lcall
sarb
test
push
xchg
nop
ret
outsl
mov
loope
je
testb
jle
pop
movsb
or
dec
cmp
and
enter
ret
mov
lds
aas
push
lods
fwait
popf
into
mov
push
mov
sbb
inc
lock
add
add
pop
pop
shr
scas
mov
pop
push
test
pop
inc
xor
sbb
sti
shl
pop
pop
stc
mov
repnz
icebp
jbe
and
jmp
js
sahf
stos
dec
loopne
mov
subb
xor
xor
icebp
loope
push
loopne
fcomps
aam
dec
adc
incl
push
add
jmp
int3
push
inc
adc
and
mov
mov
fmuls
jbe
sbb
jp,pt
popf
mov
rdpmc
test
call
push
pusha
arpl
aam
dec
fdivl
mov
dec
fcoms
xor
and
es
pusha
outsl
mov
scas
aas
cmpsb
nop
mov
fs
push
cld
test
addr16
sub
add
xchg
pop
sbb
dec
data16
and
inc
gs
imul
lret
aam
or
and
in
jbe
outsb
lcall
dec
mov
mov
sub
shrl
cs
mov
fldenv
negb
sbb
divl
enter
cli
rcrb
movsl
fisubrs
into
push
push
adc
leave
ds
sahf
out
addr16
sti
mov
lods
insb
xor
fsub
cmp
jmp
push
mov
sti
fwait
xor
mov
cwtl
out
push
das
mov
push
stos
test
bound
imul
cmp
mov
outsl
rclb
decb
jmp
mov
bound
rcrl
xor
xor
jg
mov
pop
jle
push
inc
int
sbbb
or
jns
xorb
jns
in
int
add
push
inc
decl
aas
sub
or
adc
ficomps
or
adc
jne
add
ljmp
ljmp
mov
pop
and
xor
rcll
xor
dec
adc
jl
or
push
ss
inc
add
jp
dec
push
push
push
xchg
and
repz
cmp
mov
cmp
sbb
pop
ror
mov
mov
jge
mov
into
pop
mov
or
nop
fsubrl
into
test
add
and
cs
sbb
dec
add
mov
repz
cli
shlb
test
push
xchg
or
stos
loopne
xchg
shll
push
jbe
add
popa
and
scas
lret
and
jno
rcr
mov
push
cmp
pop
imul
jge
rolb
push
sar
cmp
mov
out
push
lods
mov
dec
mov
mov
movsl
cmc
mov
xchg
pusha
sbb
mov
int
cmp
ret
hlt
insl
xchg
push
inc
cltd
and
pop
xor
decb
sbb
scas
lds
pop
repz
mov
jb
sbb
movl
dec
dec
xor
ja
add
add
shlb
pop
bound
ljmp
das
xchg
mov
sub
insl
nop
pushf
sbb
in
fxrstor
in
adc
jl
loopne
outsb
pusha
jge
push
cs
into
push
add
int
ss
mov
dec
xchg
mov
mov
enter
in
outsl
xor
or
add
cltd
or
xadd
add
dec
es
xor
adc
addr16
jne
je
or
gs
imul
mov
fwait
adc
movsb
jmp
test
mov
jb
js
and
pop
dec
add
rolb
inc
xchg
or
sti
loopne
xchg
pop
pop
mov
mov
jns
cld
dec
das
adc
lret
adc
outsl
add
cmp
push
lahf
xchg
aas
pop
lock
adc
imul
inc
push
mov
in
xorb
movsb
in
ja
or
test
or
push
inc
sub
dec
mov
or
xchg
arpl
andb
inc
jns
ret
inc
xchg
in
pop
inc
adc
or
jp
stos
test
sbb
pop
sahf
add
and
rorl
out
xor
fidivl
dec
sub
imul
add
mov
js
or
sub
dec
xor
repz
insb
cmp
dec
cmp
add
jecxz
imul
dec
pop
arpl
lock
and
std
adc
mov
out
sti
push
mov
jmp
cmp
jnp
and
dec
frstor
sub
cld
ds
mov
lea
pop
mov
cmp
ljmp
push
sub
cli
xchg
and
sub
cltd
sub
xchg
mov
and
adcl
aad
shr
push
ja
add
iret
aad
mov
mov
in
imul
inc
xchg
mov
aad
jp
inc
outsb
out
adc
cmp
add
jmp
push
fcoml
je
sbbb
and
mov
push
cs
repnz
clc
cmp
stc
xorl
ret
shr
pop
fldcw
leave
or
push
hlt
and
adc
push
out
popf
enter
ss
sti
xchg
add
or
ret
pop
lods
jnp
mov
sub
inc
jge
sbb
cli
idiv
hlt
cld
stc
cwtl
leave
mov
mov
int
adc
pop
push
adc
ret
incb
xor
mov
sbb
pop
inc
nop
mov
cltd
aaa
cmp
lods
dec
mov
notl
leave
movups
ss
sti
lret
lcall
pop
rcrl
push
es
inc
cmp
pop
mov
xor
fmull
pop
mov
icebp
out
fwait
inc
es
cmp
fsub
je
mov
adc
sbbb
out
and
ljmp
icebp
lret
pop
cmp
jns
mov
mov
call
jp
and
sub
out
xor
pop
fwait
mov
int3
cltd
pop
cli
jo
ss
es
sbb
pop
jg
out
jne
bound
cwtl
add
cmp
cs
adcl
and
sbb
test
call
xor
inc
sahf
daa
and
mov
clc
inc
lds
lods
popw
jecxz
imul
xchg
or
mov
int
es
mov
aam
lcall
push
inc
les
es
push
xchg
sub
stc
jns
or
add
inc
dec
loope
adc
out
sbb
aas
dec
sub
adc
loop
dec
dec
sbb
adc
mov
push
jle
nop
aad
movsl
enter
mov
and
and
pop
push
andl
pop
adc
mov
lcall
and
inc
inc
ljmp
or
inc
push
mov
inc
pop
push
popf
les
jecxz
ja
js
or
mov
cmpsl
test
in
dec
gs
inc
scas
mov
mov
fcmovnu
mov
lea
bound
pcmpgtb
pop
push
and
adc
xor
jne
xor
lods
cli
fstps
hlt
sub
imulb
js
add
stos
mov
jge
scas
mov
sti
mov
out
inc
out
cld
xor
daa
mov
fsubs
mul
les
lea
ljmp
xchg
div
pop
sbb
orl
add
jb
int3
jg
pop
sub
cmpl
les
mov
xchg
sub
cltd
sbb
cmp
movsl
outsb
push
adc
dec
mov
shll
or
add
cmpb
cmp
lods
int3
ljmp
test
jl
pop
fdivrl
ficomps
adc
mov
scas
out
xchg
push
sbb
xchg
or
pop
add
jmp
lock
jg
lock
xchg
and
mov
push
add
das
sarb
fs
movsl
push
jmp
xchg
ret
insb
mov
movsl
out
lods
or
xor
or
faddl
sbb
push
inc
movq
outsl
insl
xchg
xor
sti
dec
xchg
adc
in
lea
pop
add
jns
mov
mov
insl
push
mov
sbb
mov
js
popf
push
pop
jns
lcall
rol
pop
push
ljmp
dec
cmc
dec
sarb
pusha
or
lea
mov
int3
out
and
cltd
adc
mov
aad
ss
sbb
rcrb
aam
mov
fsts
loope
fdivrl
pop
mov
dec
mov
and
outsb
sub
add
mov
cmp
ja
mov
clc
fidivs
iret
jecxz
sub
daa
ja
inc
lods
dec
pusha
pop
cmpb
into
or
outsb
sahf
repz
call
dec
loopne
push
jge
cmp
jb
loop
or
shlb
insb
cmp
imul
xor
push
adc
jmp
mov
mov
in
flds
dec
sbb
mov
lock
jnp
popa
ret
subl
cltd
imul
sub
jmp
ds
xor
dec
xchg
jns
mov
outsb
das
xchg
pop
ds
rcrb
sbb
jge
mov
or
pop
fdivrl
ret
pop
in
es
xchg
inc
and
xchg
loop
pop
jb
and
jns
jmp
call
test
push
sbb
nop
movsl
jo
add
aad
xchg
push
sti
data16
aas
xorl
jb
loop
and
xchg
test
lea
add
ret
fistpl
xor
inc
scas
or
cmp
dec
sahf
xor
mov
stos
shl
arpl
xor
dec
sub
fisttpl
stos
add
dec
insb
roll
sub
cmp
mov
add
pop
xor
ss
pop
add
fidivrl
jmp
mov
sbbb
inc
mov
sbbb
dec
pusha
and
mov
or
pusha
push
arpl
shlb
push
xchg
mov
xor
inc
pushf
shrb
aas
popf
push
daa
aaa
add
cs
das
jb
mov
pop
xchg
shlb
jb
xchg
pop
push
mov
loope
fwait
out
in
hlt
push
cmpb
ret
xor
jo
shlb
ss
insb
jmp
mov
stc
scas
add
lds
fwait
dec
push
aad
xor
cli
jle
inc
sub
dec
and
dec
cmp
fidivs
lods
dec
mov
gs
xor
mov
movb
cli
insb
cltd
or
pop
clc
scas
jle
and
cmp
negl
popaw
mov
nop
movsl
pop
inc
outsl
cwtl
xchg
movsl
jmp
fsubl
mov
test
mov
inc
pop
mov
mov
push
push
popf
fcoms
test
sarb
filds
xor
data16
nop
lods
mov
mov
decl
cs
mov
shrb
dec
mov
inc
imul
pop
aad
add
mov
imul
pop
cmp
xor
outsl
gs
repz
dec
enter
mov
lds
inc
dec
push
arpl
dec
jecxz
into
mov
adc
test
call
adc
lods
jp
cltd
int
sub
stos
icebp
mov
daa
push
ds
push
jnp
popa
push
jecxz
dec
mov
fcmovnu
fwait
cmp
mov
pop
cld
sbb
pop
xchg
cltd
push
inc
dec
pop
nop
imul
test
dec
imul
fiaddl
addr16
or
sti
scas
xor
push
xchg
adc
fcomps
popl
xchg
daa
ljmp
test
cmp
xchg
loop
and
in
scas
andl
shll
stos
mov
sbb
enter
rol
into
jnp
flds
mov
xor
inc
fwait
push
test
mov
jno
iret
or
lods
cmp
push
je
dec
jg
test
fmul
xorb
adc
pop
xor
or
xlat
aas
shlb
push
pop
push
xchg
fimull
push
insl
jb
xor
push
xor
sbb
and
cmpsl
mov
push
repz
jae
mov
in
movsb
loopne
cld
pop
insl
push
popa
into
test
sahf
movsb
fcom
add
out
sub
test
mov
xchg
in
jnp
sub
dec
or
xchg
popf
int
daa
inc
sbb
xor
and
hlt
notl
sbb
fnstsw
in
jp
cmp
notb
sub
push
fwait
test
je
xlat
pop
insl
cmp
fisttpl
ljmp
cmp
and
jp
es
push
incb
lcall
loop
push
outsb
mov
xchg
adc
mov
lds
pop
cmp
les
push
in
xlat
scas
inc
imul
mov
mov
sti
shrb
sahf
xor
mov
add
outsl
into
push
and
inc
insb
add
test
sub
mov
out
mov
or
dec
insl
jle
and
call
bound
fsubrs
fistps
das
mov
mov
rcr
sbb
movsb
xchg
dec
in
shrl
subl
inc
cmpl
cmpsb
addr16
cmp
dec
test
adc
lods
cltd
fsts
out
cmp
ja
outsl
xlat
shlb
leave
jo
inc
loop
or
cmp
push
fildll
lods
inc
ds
cmp
sub
int
insb
out
pop
aas
movsb
push
mov
sarl
sbb
jb
adc
fdiv
pop
insl
pusha
jo
inc
pop
insb
or
inc
sti
cmpsl
mov
xor
daa
cmc
popa
test
mov
movsb
cs
imul
std
scas
cli
iret
mov
arpl
outsb
mov
jge
arpl
rcrb
sbb
or
add
mov
aaa
add
repz
xchg
add
into
dec
clc
push
sub
insl
lds
aaa
in
push
mov
jbe
xchg
out
pop
or
gs
push
int
push
test
popf
adcl
lcall
ljmp
mov
adc
mov
inc
push
fs
bswap
lock
movsb
pop
nop
ret
rep
jge
getsec
negb
roll
ret
xor
test
lret
movb
lds
mov
aaa
fldenv
rorl
loopne
je
lahf
mov
push
sti
fdivr
and
and
or
sub
and
sub
or
ss
cs
mov
sbbl
jle
inc
adcb
enter
mov
mov
add
int3
push
xchg
sub
add
push
enter
adc
and
shll
add
aad
iret
stos
enter
in
mov
inc
mov
mov
icebp
pop
sbb
push
pop
sbb
aaa
hlt
add
dec
xchg
cmc
mov
dec
lea
xchg
call
jne
push
and
add
loope
push
and
pop
test
mov
stos
sbb
or
jg
push
test
ljmp
xor
adc
out
mov
sub
jle
fdivs
push
inc
imul
or
sub
in
push
cmc
cmp
cmpsb
divb
les
insl
mov
pusha
push
xor
xor
ja
loope
insb
mov
sbb
sub
fwait
clc
out
mov
ficompl
mov
insl
push
xor
cmp
incl
leave
ss
insl
pop
pusha
lds
outsb
sub
xor
mov
add
jns
mov
mov
nop
ds
inc
xor
push
mov
test
in
adc
rcll
shl
loope
adc
inc
inc
dec
ret
mov
dec
fprem1
dec
mov
jne
push
ror
test
inc
or
aad
lods
imul
stos
ror
popf
push
add
cli
pop
or
mov
subb
aas
js
lret
mov
sub
xorb
jb
push
sbb
in
jns
decb
subb
jns
and
push
scas
jp
bound
mov
mov
xor
sbb
les
add
jb
loopne
inc
cmpsb
and
inc
nop
popa
es
mov
mov
lahf
addl
jmp
xchg
mov
mov
pop
ds
sbb
xor
movl
pop
mov
xor
sbb
scas
adc
out
dec
jne,pt
nop
iret
ljmp
sub
imul
hlt
mov
insb
int3
gs
jne
pop
std
xchg
lret
mov
je
or
lea
push
xchg
sub
stc
sbb
jl
scas
cmc
test
push
aam
cmp
mov
fnstsw
xor
dec
xor
mov
dec
pop
ja
and
cld
ret
jbe
mov
dec
adc
or
and
in
gs
daa
xchg
cld
int3
cmp
lret
inc
pop
xchg
cmp
xor
fdivr
fstps
mov
movsb
mov
sbb
lret
mov
jge
jbe
or
jmp
push
xor
pop
or
pop
ja
add
out
cmp
icebp
stc
mov
adc
mov
popa
repz
push
jle
sti
sbb
out
stos
in
add
in
xchg
in
inc
mov
aam
lods
into
arpl
das
int3
inc
jge
lock
int
fwait
push
loop
in
clc
pop
decl
insl
push
pop
mov
aam
je
mov
xchg
out
int3
mov
dec
cmpsl
adc
iret
sub
pop
xor
cld
push
xchg
aam
shlb
dec
jge
fidivl
rorl
test
test
push
sbb
outsl
mov
jg
int3
mov
and
jl
ficompl
mov
fstpl
repnz
sub
ds
inc
mov
das
mov
filds
data16
jo
push
leave
stc
mov
jge
lret
jo
fwait
push
es
xorb
push
addr16
dec
ja
imul
mov
es
cmp
mov
mov
or
mov
jl
mov
loop
ja
add
mov
dec
add
es
adc
cmc
fs
fcomip
ret
jbe
outsl
or
loop
dec
xchg
and
sbb
add
movsb
imul
mov
mov
cs
pop
test
ds
cmp
pop
sbb
dec
mov
pop
pop
fs
jne
iret
or
pop
pop
inc
adc
mov
mov
sub
jecxz
jle
pop
mov
lahf
psrad
jno
push
ds
das
push
into
sub
xchg
cmp
dec
mov
ss
dec
xchg
iret
inc
aas
out
xchg
inc
in
hlt
int
imul
cwtl
sar
out
fwait
pusha
shlb
movsl
sti
and
or
rcrb
lea
jno
push
cmp
repnz
andl
jl
pop
jo
add
push
jne
out
nop
mov
stos
hlt
insl
jle
and
test
aaa
adc
imul
lock
pusha
or
lods
imul
loope
testb
push
sbbl
push
cmp
lcall
popl
sahf
mov
inc
mov
dec
cmp
outsl
push
icebp
mov
xchg
movsl
mov
int3
mov
lea
or
mov
mov
cltd
xor
imul
mov
lret
mov
pop
adc
movsl
test
add
lahf
icebp
or
sub
scas
push
xchg
stc
lods
mov
mov
xchg
js
sbb
repnz
jbe
pop
mov
fcmovnu
mov
cli
rorb
shll
mov
xor
in
out
mov
mov
cmpb
aaa
jo
fs
push
cmp
xchg
test
inc
and
ja
faddl
icebp
push
out
ret
inc
bound
out
sahf
or
repnz
sti
mov
cmp
sbb
xchg
or
sub
stos
inc
xor
or
mov
in
in
pop
stc
dec
mov
cs
in
push
and
push
testb
pop
sub
repnz
cmp
xchg
fidivl
sar
pop
dec
insl
test
push
ds
in
or
scas
and
insl
jecxz
clc
icebp
cmp
jb
shll
mov
mov
ret
push
outsb
add
mov
add
out
adc
insb
push
xchg
aad
inc
in
add
cmp
call
mov
mov
sub
pop
push
jno
jns
loop
pop
ja
cmp
aam
bound
adc
data16
lret
mov
fadds
jge
bswap
push
mov
stos
cli
fimull
xchg
adc
imul
pop
mov
dec
pop
lods
call
in
into
lea
fwait
mov
lcall
mov
add
leave
pop
push
and
cmp
ficoms
add
fdivs
js
shll
pop
lahf
hlt
xor
ljmp
add
pop
push
aam
jne
jae
xor
inc
mov
mov
outsb
xor
iret
test
lahf
push
xor
inc
sbb
pop
adc
aas
mov
lods
sbb
btr
inc
rcl
imul
enter
js
lcall
mov
dec
cwtl
pop
push
mov
inc
and
push
mov
jo
jmp
or
cmp
lahf
jb
jmp
pop
aas
loop
cwtl
sahf
cmp
stos
insb
inc
popa
nop
lret
jl
pop
ror
rorb
dec
pop
addr16
scas
fdivr
cmc
movsl
mov
sbb
stos
lret
cmc
pusha
in
insl
dec
or
nop
xor
icebp
cltd
aam
lods
or
and
mov
movsl
out
push
insb
and
or
mov
push
and
dec
sub
addr16
mov
mov
mov
pop
sbb
push
cld
dec
orl
cmp
jmp
jl
dec
cmpsb
xchg
aaa
ja
das
mov
adc
sbb
jae
cmp
lds
fdivrp
test
mov
xor
sahf
lahf
into
push
jbe
mov
cmp
nop
mov
imull
test
lock
insl
mov
lods
adc
in
or
sbb
sbb
aas
rcrl
jle
rorl
inc
stos
dec
int
insb
sbb
xor
hlt
out
push
jb
push
jmp
pop
pushl
push
jmp
jecxz,pn
dec
fdivr
dec
shll
lock
lds
cmp
or
push
jb
dec
push
pop
sbbl
shl
and
cli
cld
xorb
in
cmp
gs
ret
repz
stc
lret
pop
out
cwtl
out
push
scas
rorb
out
test
subl
sbb
cmpsl
jmp
popf
sub
int
pop
cmpsl
daa
inc
sbb
jne
cmpsb
xchg
jns
mov
pop
adc
mov
mov
push
push
pushf
lock
and
push
mov
mov
or
in
sub
push
nop
scas
cmpb
mov
inc
or
cmp
mov
jle
or
mov
adc
adc
loopne
adc
fmuls
mov
mov
scas
sub
insl
inc
les
push
jle
and
dec
cltd
push
push
and
xlat
dec
enter
jg
cld
lcall
cltd
fmull
or
xchg
dec
add
lods
adc
jge
lods
sub
pusha
jle
je
or
rcrl
fs
mov
add
cmp
cmpb
gs
loop
inc
jne
daa
aam
ret
aas
scas
inc
dec
cmp
stc
xlat
and
fucomi
xor
xor
lock
push
lock
das
lds
push
call
loope
cmp
mov
push
jnp
insb
cmp
jmp
outsb
pop
out
cmpsb
inc
insl
sub
sub
adc
cmp
sub
les
loop
fs
push
inc
icebp
aad
mov
ja
cmp
das
cli
xor
adc
lds
icebp
cmp
and
daa
inc
std
dec
push
dec
shlb
xchg
fbld
sub
in
adc
mov
jae
dec
leave
ljmp
xchg
xor
mov
fisttpll
in
jle
outsl
lahf
mov
mov
inc
rcll
and
sbb
mov
aad
sub
pop
mov
into
add
rol
repnz
cmc
mov
xchg
cmpb
push
imul
push
popa
sub
scas
and
cmp
mov
jl
fisubrs
push
ret
sarw
jmp
add
cmp
pop
fildll
inc
shrb
fs
jge
jbe
fists
rcl
into
sub
pop
jo
lea
fists
jo
mov
sbb
jne
xlat
mov
scas
vcvtps2pd
inc
lea
cmp
xor
mov
repz
cmp
sbbb
xchg
or
and
xor
arpl
adc
sub
test
jg
int3
lods
daa
out
xchg
iret
xor
or
push
jne
out
dec
and
inc
insl
je
inc
mov
sti
jbe
mov
sub
test
add
jnp
xchg
addr16
push
stc
rcl
push
lods
and
fisttpl
sahf
cmpsb
es
aaa
adc
pop
sub
jnp
into
xor
leave
push
cltd
repnz
push
sbb
shrl
push
dec
push
cmpsb
or
std
sbb
in
jns
sbb
sub
push
int
cltd
cwtl
or
mov
add
dec
mov
or
sbb
imulb
mov
xchg
pop
nop
call
push
stos
addl
jge
and
gs
lea
mov
cli
dec
pop
testl
jle
sbb
pop
sub
popf
cmp
inc
lcall
sbb
sbb
and
cmc
cli
mov
sbb
jl
add
or
inc
dec
add
scas
cmp
cmp
outsb
iret
inc
xchg
jl
fdivl
fs
or
aas
leave
aas
push
mov
fs
cltd
loop
xchg
fidivrl
sub
pop
jg
clc
into
movsl
xor
and
pop
sbb
mov
mov
out
les
mov
mov
push
mov
lds
in
sub
mov
scas
inc
fwait
andl
push
xchg
imul
pushw
fistpll
sub
dec
xchg
push
push
rcrb
aad
callw
pop
aad
mov
out
sbb
sub
ret
inc
fcompl
test
cli
dec
movsb
xchg
or
loopne
or
lret
sub
data16
js
pop
js
xchg
adc
and
cmp
std
pop
push
push
xchg
add
jno
sub
lds
sbb
rcrb
jge
lods
mov
mov
sub
or
push
push
fisubl
sbb
shll
fcomp
or
inc
jo
sarb
add
sub
out
sbb
scas
xchg
add
shll
cmp
or
pop
sarl
and
dec
std
ss
adc
mov
jb
xor
daa
fwait
sbb
mov
stos
mov
adc
mov
jmp
ljmp
mov
add
mov
push
xchg
loop
in
clc
jns
mov
nop
out
das
das
xchg
add
xor
push
push
imulb
filds
or
mov
add
scas
das
cmp
and
mov
sbb
insl
in
adc
or
inc
rorl
pusha
out
sbb
mov
mov
dec
hlt
imul
pop
rcrb
cmpsl
xchg
nop
cmp
inc
popf
jg
test
push
add
dec
pop
jo
pusha
cwtd
mov
addr16
sub
adc
or
push
mov
mov
sub
popf
or
test
or
jbe
jnp
or
mov
xor
push
push
rorl
dec
imul
in
sub
mov
popa
ja
xor
sub
adc
repz
add
stos
sarb
mov
outsb
and
scas
adc
jle
incl
push
in
cmpsb
out
adc
mov
adc
inc
push
or
jecxz
js
push
xchg
das
xchg
ds
in
stos
mov
or
push
sub
testb
push
jmp
and
and
mov
fldt
fdiv
and
dec
in
scas
jmp
dec
fsts
push
adc
insl
flds
outsl
jo
repz
and
and
jmp
call
adc
mov
cltd
and
xor
in
cmpsb
push
cmc
push
adc
cld
or
pop
xor
cmc
icebp
fwait
mov
dec
and
mov
add
add
jae
add
ja
mov
rcr
test
loope
dec
leave
dec
add
sbb
cmp
loopne
add
sahf
dec
mov
ja
cmp
cmc
out
xchg
popf
fucomip
sub
stc
push
sti
or
add
cld
movb
adc
jmp
jp
xchg
dec
jne
aam
das
add
out
cmpl
sub
sub
cmpsb
rcr
addr16
push
sub
fdivrs
dec
xchg
xor
and
mov
cwtl
in
loope
sbb
mov
sub
ja
mov
data16
mov
stc
xchg
cmp
mov
add
std
sbb
sbb
cmpsl
adc
lods
pop
inc
inc
call
divl
inc
inc
jg
into
sbb
xor
mov
push
cwtl
adc
sub
fiaddl
hlt
shr
jbe
mov
mov
mov
sahf
sti
subb
filds
adc
xchg
or
xchg
mov
xor
sub
pop
into
lock
lcall
out
xor
mov
mov
aam
push
call
sub
fbld
push
add
dec
pop
out
dec
in
das
push
divl
fsubp
xor
pop
jb
mov
sbb
push
scas
test
into
cmpsl
mov
dec
sub
push
ds
adcl
shll
pop
fwait
stos
adc
roll
cmpsb
push
in
nop
cli
cmc
jne
sub
sbb
and
lret
push
mov
out
cli
push
test
mov
pop
and
push
mov
fdivp
xor
push
iret
adc
xchg
mov
enter
cli
fnstenv
stc
enter
aam
push
aam
inc
cmp
data16
mov
fstl
or
jg
pushf
les
fisubrl
pusha
or
movsl
cvttps2pi
inc
adc
inc
jecxz
rclb
cmpsl
ret
mov
or
je
cmp
loop
push
xchg
adc
jecxz
mov
mov
push
pop
sub
or
cli
data16
jbe
aaa
nop
mov
int
inc
mov
inc
addr16
scas
mov
out
xchg
sbb
lods
arpl
adc
push
cld
lret
xchg
sbb
sub
int
adc
or
sub
mov
lcall
push
ljmp
add
mov
test
mov
xor
ret
pusha
inc
stos
mov
sbb
inc
jbe
sub
jmp
xchg
xor
mov
subb
cmp
jb
hlt
or
jmp
xor
xchg
or
lret
push
or
xlat
out
dec
mov
aad
sbb
jge
mov
xorl
cli
rcrb
mov
loopne
mov
jl
mov
cmpsl
pop
call
and
cmp
aas
xor
jmp
xor
lea
mov
jecxz
lods
ja
mov
movsl
cmpsb
lcall
aaa
rcrb
shl
cmp
lret
push
je
repnz
fadds
es
jmp
pushf
das
test
cmp
cli
iret
jp
outsb
arpl
daa
popa
movsl
inc
pop
repz
mov
stos
fdivr
push
lahf
jp
add
and
mov
fs
addr16
add
shl
push
push
or
inc
add
sbb
xor
push
mov
out
and
jns
mov
pop
pop
aaa
daa
xchg
lods
fs
fmuls
loope
mov
imul
mov
xchg
testb
xchg
mov
mov
xor
mov
outsb
push
ret
or
push
pusha
sbb
addl
hlt
jp
sarb
idivl
mov
push
inc
mov
push
cmovo
cmpsl
sub
sbb
mov
imul
inc
and
dec
and
push
push
inc
out
push
sub
int3
pop
pushf
int3
stos
jb
xor
rcrb
outsl
push
neg
icebp
jle
mov
stos
add
inc
mov
jne
push
dec
cmpl
push
lock
fbld
dec
cmp
mov
jecxz
mov
repnz
mov
adc
inc
cmp
fimull
pop
sti
out
add
imul
pop
ret
ljmp
pop
or
idivb
mov
xchg
jge
ljmp
out
mov
scas
punpckhdq
les
push
pop
loopne
repz
roll
xor
mov
xlat
sub
inc
and
mov
ret
lret
jp
stos
pop
add
jl
addr16
xchg
adc
push
jb
into
dec
subb
mov
out
testl
inc
int
push
fnstenv
les
sahf
add
std
and
aad
fsqrt
mov
lods
cmp
dec
dec
clc
les
xchg
mov
adc
mov
mov
jnp
xor
push
sti
int3
push
mov
inc
cmp
data16
jb
movsl
daa
cmp
mov
mov
dec
xchg
lods
mov
adc
adc
push
test
add
icebp
sbb
push
sub
ret
sub
negl
pusha
aam
scas
daa
xchg
sub
fwait
dec
ja
mov
or
out
and
mov
sbb
xchg
cmpsb
push
sti
xor
mov
testb
add
addl
aad
cld
add
sbb
sbb
loop
mov
mov
fdivs
in
sbb
cmpsl
test
add
mov
jmp
mov
xor
and
jno
pop
xor
push
imul
cs
fistpll
divl
push
sbb
mov
jp
into
insl
add
lahf
adcb
shlb
jg
push
out
adc
inc
test
das
push
mov
jb
jmp
call
sbb
jmp
sbb
and
das
dec
xor
inc
lret
scas
lods
xor
pop
push
mov
mov
adc
addb
or
xchg
loop
fcoml
inc
shll
cmp
push
mov
mov
pop
es
adc
aam
rcr
nop
stc
jl
jmp
lea
pop
or
into
shrl
push
push
faddl
out
jge
lock
pop
or
xor
mov
mov
sbb
push
imul
out
sarb
jb
push
sub
out
jb
jmp
loop
loope
pushf
pop
aaa
push
jmp
and
cmp
lahf
gs
inc
cmc
sub
xlat
in
decb
mov
inc
push
insl
lds
js
popa
outsl
or
lahf
or
scas
repz
add
jne
xlat
aaa
das
das
cmpsl
incb
ss
mov
fs
int
mov
imulb
push
and
mov
repz
pop
sbb
aas
cmp
mov
pop
push
lock
pusha
cmpb
dec
or
push
mov
inc
leave
and
lods
out
pop
in
std
cld
movsb
stc
inc
in
jmp
mov
jg
in
push
inc
cld
pop
xor
cmc
push
fs
in
loopne
lcall
ficoms
mov
out
sti
xchg
xrelease
xorb
dec
dec
mov
into
adc
mov
push
lock
sub
fstp
dec
push
pushf
pop
xor
mov
scas
cmp
add
push
sub
pop
fdivrl
cmp
roll
loop
sub
and
fucomip
sbb
stc
adc
dec
mov
shll
add
xor
incb
mov
das
adc
fidivrl
cli
xchg
mov
push
dec
lcall
int
mov
mov
pop
and
hlt
jg
or
fimull
or
dec
and
jne
xchg
push
or
adc
test
cwtl
cmp
cmp
ljmp
and
sbb
lea
ficoml
ret
xor
fbstp
or
jp
cmp
mov
stos
js
cmp
xchg
inc
mov
inc
sub
jmp
addl
stos
mov
add
mov
pop
fldcw
push
fcmovnu
fstpt
xorb
mov
popa
push
adc
in
pop
jg
xchg
dec
inc
les
out
mov
sbbb
mov
dec
in
mov
inc
sbb
sbb
aaa
fidivs
stos
push
inc
cmp
jbe
inc
lcall
daa
mov
dec
xchg
cmp
fwait
pop
es
mov
adc
sbb
adc
jmp
mov
adc
xor
sbb
inc
testb
jb
rorb
xlat
dec
pop
jle
popa
push
jecxz
jbe
std
mov
call
rcl
jb
dec
std
inc
int
gs
xor
out
mov
jbe
jge
add
mov
inc
mov
pop
add
xlat
mov
add
bound
mov
inc
jbe
mov
sarl
inc
sbb
or
pusha
repz
pop
pop
leave
mov
pusha
adc
leave
pop
adc
dec
push
scas
std
sub
popl
dec
mov
cld
es
loop
lea
pop
ljmp
sahf
push
pop
bound
arpl
fistps
lret
shll
adc
data16
mov
in
stc
pop
dec
shlb
subl
inc
loope
mov
fsubrl
stos
out
lods
mov
stos
daa
sti
and
xchg
adc
jb
xchg
test
int
sbb
push
ret
mov
in
dec
aaa
sete
jp
add
pop
pop
pop
cwtl
scas
dec
addr16
rcrb
and
fdivr
ret
xchg
sub
out
das
xor
insl
addr16
mov
in
out
test
sub
xchg
lds
and
imul
or
sbb
cltd
jle
call
add
cmp
iret
lock
mov
mov
out
mov
pop
sub
pop
jno
pop
mov
xchg
sbb
xchg
fisubrs
shl
jbe
mov
shll
pop
adc
dec
push
test
aaa
fldl
cmpsb
xchg
mov
call
xchg
andb
push
fstpl
jbe
fwait
iret
lcall
mov
mov
xor
push
jnp
and
pcmpeqw
jo
inc
mov
sbb
cmp
jb
sbb
cmp
sub
ja
mov
shl
mov
daa
fcmovnu
jl
or
and
add
mov
std
xor
hlt
or
mov
mov
mov
sbb
hlt
mov
sbb
xor
mov
scas
or
daa
mov
jmp
fstps
ss
cmp
sbb
jae
sub
xor
mov
push
jl
hlt
sahf
enter
inc
out
das
sbbl
out
push
pop
inc
popa
orl
ret
fcmovu
loopne
lds
loop
loopne
jg
adc
ret
mov
call
add
repz
adc
add
jo
cli
inc
adc
je
mov
mov
loope
cmp
in
xchg
out
or
cmc
in
lods
hlt
loope
dec
imul
jnp
jle
stos
out
and
pop
out
xchg
cmpsl
in
kxorw
fiaddl
sti
cwtl
stc
cmpsl
sahf
cwtl
inc
push
hlt
sub
mov
cmpsl
mov
inc
je
xor
movsb
xchg
movsl
out
enter
es
mov
sub
push
clc
mov
leave
mov
insb
rcll
popa
jmp
and
sub
mov
mov
jns
jne
xor
ja
sbb
cld
xor
push
pop
sbb
test
hlt
inc
insl
shrl
adc
data16
push
test
ja
push
jb
jb
add
jnp
das
lahf
stc
cwtl
add
adc
pop
ror
sbb
imul
pop
jno
or
xor
sbb
into
mov
or
pop
cmpsl
aas
pop
cs
loope
inc
xchg
outsb
dec
push
cltd
push
add
mov
push
pop
and
xor
shrl
orb
lahf
fbld
out
xchg
add
stc
lcall
aad
mov
loopne
rorb
test
inc
adc
xadd
pop
mov
push
lods
mov
mov
dec
mov
mov
cmp
testb
jg
out
cmp
into
pushf
push
mov
test
sbb
adc
dec
in
in
stc
xchg
pop
imull
je
pop
pop
fwait
int
push
mov
outsl
and
push
repnz
pop
cmp
and
inc
push
sub
cmp
lods
xor
push
cmp
repnz
iret
xor
push
pop
sub
mov
dec
sub
lahf
lds
sbb
insl
sbb
adc
sub
fdivl
data16
addr16
xor
mov
dec
orl
pop
xor
mov
test
clc
push
xor
jno
nop
sub
mov
xchg
push
sub
mov
pop
lds
xor
sub
or
mov
sbb
pusha
jmp
leave
xor
sub
pop
pop
arpl
adc
inc
or
push
scas
je
push
cmp
scas
mov
mov
push
rep
mov
xchg
rclb
out
and
fdivr
or
sti
xchg
test
xchg
and
xchg
mov
aaa
sub
in
repnz
aas
daa
outsb
fdivl
lock
shlb
xor
and
imul
push
and
jne
cli
test
hlt
mov
mov
push
ja
pop
mov
pop
imul
inc
test
jnp
mov
sbb
scas
call
xchg
jb
dec
jge
cmp
cmpsl
je
dec
jne
jns
mov
out
ret
xchg
lods
sbb
cltd
out
jmp
scas
aas
fdivrl
inc
mov
jmp
dec
sbb
dec
jno
sbb
fstpl
sarl
mov
lds
pop
stc
jb
leave
xor
vpmovqw
repnz
fdivs
cld
jne
test
or
inc
pop
lock
dec
inc
mov
daa
pop
jae
mov
or
xor
testb
inc
insb
call
cwtl
rcr
mov
daa
aad
xchg
leave
xchg
cmpsb
mov
cwtl
xchg
pop
mov
inc
add
cmp
movsb
lret
int
lods
mov
xor
inc
cmp
shlb
inc
add
icebp
inc
loope
cmp
push
mov
movsb
add
pusha
xor
bound
jae
adc
mov
stc
ret
mov
aaa
in
ljmp
insl
jecxz
outsl
ret
std
js
push
push
adc
int3
lods
mov
jnp
stos
orb
push
ja
xor
lea
out
mov
or
stc
xchg
imul
fistl
mov
inc
push
in
clc
inc
pop
jl
and
sbb
xor
pusha
outsl
popa
xchg
lahf
into
outsl
cs
sbb
hlt
dec
lahf
jp
arpl
pushf
movsl
gs
sub
mov
imul
jne
int3
xchg
inc
gs
lcall
fs
pop
shll
inc
mov
cmp
or
lods
int3
lret
loope
cwtl
xorb
fcomi
enter
test
mov
pop
xor
mov
mov
fcoml
mov
dec
orb
or
movsl
cmp
sar
mov
call
jge
repnz
mov
push
mov
push
xchg
inc
fistpl
mov
xor
adc
and
aas
pop
and
mov
sub
fnstenv
outsl
andb
inc
fists
rorb
dec
adc
mov
fs
sbb
lods
mov
nop
add
ss
fisttps
and
inc
sahf
rcll
cmp
xchg
sti
bnd
pop
enter
ds
sub
lock
mov
inc
mov
sbb
data16
dec
mov
fadds
xchg
jno
jnp
cmpsl
lods
lret
add
or
jmp
std
movsl
icebp
lahf
mov
xchg
mov
jae
das
popf
mov
outsb
push
inc
xchg
or
lods
and
sbb
test
pop
adc
jmp
add
mov
ss
popa
push
loopne
imul
popf
xchg
xor
lock
inc
cmp
push
sbb
mov
mov
imul
mov
test
cmp
loop
insb
xchg
xchg
outsl
inc
xchg
inc
rolb
leave
ret
movsl
mov
int3
inc
xchg
cmp
xor
mov
xor
shl
test
into
push
cld
jae
adc
int3
xlat
in
cmp
shlb
inc
adc
fistps
andb
pop
jno
jge
ljmp
xorb
xor
push
jle
stc
fnstcw
xlat
andb
mov
jecxz
pop
or
loope
loope
insl
xchg
adc
cmc
nop
push
adc
nop
ds
xchg
lods
mov
shlb
mov
xorb
mov
sub
mov
inc
movsl
dec
xchg
or
or
iret
jb
test
pop
dec
pop
mov
sbb
push
push
cmp
xchg
mov
mov
loope
jnp
scas
adc
aaa
add
cmpsb
or
xor
push
call
mov
cmc
pop
and
pop
add
pop
sub
in
addr16
jne
add
call
sub
mov
fwait
sub
nop
imul
mov
cmpsb
mov
xor
mov
test
jle
lods
xchg
shll
sbb
or
lods
mov
bound
mov
shrl
fcoms
out
lods
movsl
xor
mov
or
out
adc
sti
imul
jecxz
jp
repz
dec
adc
push
pop
xchg
sub
sti
test
ret
movsl
pusha
dec
popf
push
mov
repnz
jno
shll
inc
push
mov
ficomps
insl
idiv
pusha
sarl
sbb
loope
push
mov
or
pop
jne
mov
jne
lret
clc
mov
test
bound
mov
stc
push
add
cmpb
in
leave
in
sbb
jb
or
cmp
dec
rcrb
pop
jmp
jnp
movsl
aaa
loope
aaa
pop
xor
gs
adc
xor
mov
sub
fwait
aas
mov
mov
stc
decb
idiv
add
fwait
xchg
cmc
pop
in
xchg
outsl
inc
je
mov
mov
rclb
xchg
icebp
mov
push
mov
lods
in
adc
push
push
pop
xchg
fwait
scas
xor
ljmp
mov
stos
lds
loopne
mov
and
lea
cltd
cmpsl
popa
xchg
pushf
in
es
jg
fcmove
mov
movsl
dec
xor
cmpb
loop
sbb
xor
clc
or
pop
imul
pop
jno
icebp
mov
cmpsl
icebp
rcr
cli
mov
fldt
jnp
adc
loopne
in
push
fstl
cmpsl
pop
adc
jl
daa
xchg
cmp
push
clc
sti
mov
pop
fiadds
shrb
enter
pop
xorb
test
inc
mov
pop
adc
sub
cwtl
loopne
mov
out
cmp
mov
popa
aaa
push
pop
jno
pop
adc
inc
jno
sahf
pop
jmp
dec
mov
fcompl
mov
cmp
push
jl
inc
loopne
adc
xchg
mov
add
xchg
jbe
add
mov
test
testl
jecxz
popf
jne
sbb
adc
add
or
sub
das
rcrb
sub
je
imul
xor
and
sub
adc
jp
loop
imul
and
imul
pop
add
push
push
daa
andb
lds
lods
inc
mov
sbb
push
jmp
and
and
rcll
add
adc
arpl
push
pusha
dec
roll
dec
jb
xor
cwtl
in
or
and
cmpsb
imull
ret
cmpsb
and
popf
pusha
push
mov
inc
flds
out
jns
inc
lds
and
push
sub
mov
mov
jp
cwtl
cld
or
aam
add
sub
or
mov
cltd
cli
mov
lock
int
mov
dec
je
sub
pop
scas
push
or
sub
inc
lds
shrl
mov
xor
addl
imul
pop
imul
aad
xchg
xor
je
mov
push
clc
rcr
sub
mov
mov
jmp
and
stos
mov
enter
nop
iret
incb
lret
adc
mov
add
cmp
loope
pop
lahf
mov
and
cwtl
sub
dec
cmp
or
nop
jne
pop
mov
mov
or
inc
mov
jbe
xchg
rcrb
incb
add
push
push
sbb
fadds
lea
dec
xor
sbb
fidivl
jmp
inc
pop
or
and
pop
add
cmp
sub
arpl
flds
add
sub
enter
cmp
in
pop
ret
aaa
sub
mov
push
or
pop
push
add
mov
fildll
dec
adc
pop
ret
cmc
sbb
add
pushf
inc
lods
jns
push
stc
out
add
xchg
cwtl
test
xlat
ret
nop
das
xchg
adc
push
and
sbbb
pop
adc
jae
pop
cmpb
fisubl
addr16
sub
fldt
mov
lret
jns
insb
mov
int3
dec
scas
scas
mov
mov
movsl
fs
jnp
xlat
lods
xchg
cmpsl
jb
and
mov
mov
and
mov
push
dec
xchg
mov
and
lahf
jbe,pn
les
jge
cmp
add
mov
scas
add
mov
xchg
inc
lret
sub
repz
xor
cld
outsb
movsl
dec
jo
inc
cmpsl
gs
inc
push
mov
lea
addl
cwtl
js
push
hlt
lcall
ss
fimuls
sbb
inc
jg
adc
pop
xchg
pop
sti
das
inc
mov
pop
loopne
sbb
aas
sahf
add
jo
iret
shll
cltd
and
adc
add
or
int
xchg
movsb
push
jnp
out
das
aad
inc
into
dec
jp
test
xchg
or
stos
adc
add
sub
and
sbb
lret
jmp
cli
mov
sub
ficoms
fcoms
fs
mov
inc
faddl
daa
sbb
scas
and
mov
xchg
pushf
add
mov
arpl
fstl
jle
jno
test
jl
and
sti
fadds
mov
cmp
adc
mov
and
adc
mov
ss
push
xor
push
inc
xchg
mov
rcll
ljmp
xor
stos
inc
push
lds
and
mov
jnp
cwtl
mov
add
sub
mov
pop
sub
jge
aam
sti
in
jns
sub
repnz
mov
pop
or
xchg
mov
popf
or
bound
divl
inc
sti
js
fsubrl
push
adc
rcll
btl
ret
cmp
and
dec
inc
adc
loopne
cli
test
mov
mov
js
pop
pop
inc
mov
add
iret
in
dec
loop
int3
cmpl
icebp
das
lea
aad
cli
stos
mov
ljmp
aam
push
scas
sbb
pop
mov
jo
inc
cmc
pusha
or
pop
push
pop
jmp
jo
arpl
or
pop
pop
add
adc
dec
std
loop
roll
mov
mov
stc
ljmp
fmul
lods
mov
xchg
mov
ja
jns
movsb
pop
ja
pop
mov
mov
or
enter
cmpsb
mov
sbb
fnstenv
mov
test
popa
je
xchg
mov
clc
add
fwait
dec
add
xchg
pop
pop
adc
sti
dec
mov
nop
adc
int3
cld
mov
xor
stos
xchg
les
inc
ret
js
sub
xor
rclb
inc
je
int3
xor
in
inc
insb
ret
scas
out
dec
loop
xchg
mov
scas
add
pop
push
pop
cmpsl
push
inc
inc
mov
mov
fs
loope
and
cmp
scas
adc
mov
adc
pop
ja
rorb
inc
or
loopne
pusha
or
jge
in
ret
push
outsb
mov
std
sti
cmp
cmp
and
inc
push
mov
and
mov
dec
sbb
xor
out
mov
in
flds
mov
js
or
mov
and
imul
lret
cs
jns
pop
xchg
faddl
add
cwtl
pop
daa
rol
xchg
cmp
cmpsl
fcompl
mov
dec
xchg
faddl
cs
mov
sbb
add
push
xchg
pop
stos
scas
push
out
sbb
aaa
or
mov
add
cmp
arpl
hlt
out
outsl
cli
mov
xchg
cmc
and
push
xchg
pop
test
xchg
dec
int3
mov
push
out
push
ret
xchg
and
dec
lcall
pop
sub
fisttpl
int3
sub
jp
pop
fmuls
dec
sbb
xchg
sti
and
sbb
into
arpl
sbb
jne
mov
fisttps
lods
and
pop
adc
test
rol
clc
daa
inc
loope
imul
pop
dec
cltd
loop
inc
add
push
push
adc
stc
cmp
and
xor
cwtl
ljmp
sbb
xchg
push
adc
sbb
mov
inc
iret
jg
outsb
out
push
xor
fwait
jo
fwait
loopne
and
loop
xchg
add
mov
insl
and
fistps
mov
mov
add
mov
test
push
fbld
movsl
lea
subl
test
cmpsl
cmp
js
lods
movb
mov
call
mov
or
aas
lret
cmpsb
in
ret
lret
dec
xchg
cltd
dec
call
in
adc
add
aam
repz
add
icebp
inc
sbb
xor
adcl
int
sahf
dec
ljmp
clc
pop
andb
push
cmp
fnstenv
jp
test
in
or
stc
and
int3
aam
mov
pop
in
loop
cli
push
mov
push
into
adc
inc
call
xor
adc
cwtl
cld
test
xchg
lods
cmp
fadds
dec
loope
ret
sbb
xchg
and
outsb
aas
pop
pop
pop
mov
sahf
jo
popf
test
lret
stos
mov
xchg
in
and
pop
xchg
fdivl
arpl
sub
sub
sub
aam
int3
xchg
adc
sub
dec
lahf
mov
inc
in
movsl
lcall
enter
aam
and
movsl
cltd
rcl
cmp
mov
leave
xchg
push
jg
or
cmp
mov
repz
and
rcll
push
cmp
test
aas
rcll
push
or
jmp
cli
data16
xor
sbb
lret
ds
sbb
out
mov
cmpsl
sbb
sbb
jno
pop
sbbl
test
ds
enter
out
ds
aad
dec
sti
aas
jbe
je
test
cltd
dec
mov
mov
mov
ret
or
stc
mov
in
mov
xchg
insb
mov
xor
fsubrs
push
push
xor
and
push
test
inc
imul
dec
fbld
fbld
and
outsb
push
mov
fisttps
lcall
mov
mov
pop
testl
rcrb
shll
add
mov
loope
andl
loope
mov
mov
das
test
je
lret
sbb
in
cmp
jmp
ds
ljmp
and
mov
adc
adcb
das
and
je
shll
mov
loopne
sub
pop
jnp
push
aas
pushf
fisubrs
ror
aad
imul
inc
testl
cmpsb
or
inc
add
iret
sti
orl
in
sbb
ds
jne
test
mov
dec
sti
adc
in
adcl
xchg
push
cmp
xchg
dec
xor
xchg
outsb
jmp
push
add
rorb
cli
push
popa
ss
mov
call
ss
and
icebp
jp
sbb
bound
and
dec
inc
imul
add
mov
sbb
adc
pusha
addb
nop
xchg
enter
lea
hlt
push
lret
mov
mov
out
xor
push
sbb
inc
mov
jo
rcrl
push
subb
into
movsl
or
icebp
pop
lret
cmp
cmp
mov
adc
cmp
popa
ret
pushf
sub
push
mov
mov
rorb
ss
mov
leave
movsb
or
enter
sbb
inc
ja
jmp
sub
cmpsb
xchg
lret
cmpsb
cmp
data16
mov
aaa
divb
fwait
mov
cli
sarb
inc
mov
dec
pop
lods
lods
jmp
iret
pop
xchg
jmp
sbb
mov
lock
lods
ret
js
jl
scas
les
sub
out
imul
daa
aaa
jo
mov
roll
fnstsw
dec
push
jmp
or
pop
fstpl
sbb
inc
mov
push
sbb
pop
add
jne
add
and
flds
popf
in
mov
cmpb
les
sub
movsl
test
pop
nop
sub
dec
adc
lahf
scas
or
fwait
push
out
std
jno
pop
fcomps
faddp
test
shrl
push
test
rorl
in
pop
xchg
xor
pop
inc
pop
inc
mov
daa
jo
enter
sahf
and
movsl
loopne
pop
outsl
push
in
lcall
or
jp
and
cmpsb
add
dec
mov
push
push
jp
test
xchg
push
cs
mov
cmp
push
bound
push
jp
aam
jp
decb
xor
xor
mov
or
mov
cmp
faddl
sbbl
inc
lahf
inc
adc
add
pop
in
ljmp
and
add
cli
clc
das
in
sbb
mov
add
dec
lea
mov
dec
add
std
mov
xchg
lds
push
or
shrb
or
rol
stos
ja
faddl
cwtl
mov
repnz
dec
dec
sti
sub
outsl
push
mov
cmpsb
sbbl
lret
and
scas
xchg
shrb
fisubs
in
adc
push
shll
dec
scas
mov
and
sub
xlat
adc
mov
ja
and
outsl
dec
sub
jle
sarb
push
mov
std
dec
lcall
and
gs
stos
cmp
clc
inc
push
cs
sarl
int3
push
rcll
cli
int3
je
jge
test
xor
call
mov
repnz
les
nop
adc
out
or
push
pop
das
push
sahf
testb
xchg
xchg
andb
pop
imul
dec
dec
and
add
add
das
test
jnp
pop
je
clc
or
xor
test
fisttpll
in
jae
cwtl
fstpt
and
push
fwait
int3
es
add
jns
icebp
xor
adc
out
xor
xor
orb
sarl
and
mov
fdivl
jp
rcrl
jo
cmpsl
mov
lds
pop
push
or
jmpw
insl
inc
mov
and
lret
inc
rcl
sarb
mov
mov
aad
sarb
inc
pushf
pushl
mov
inc
push
out
sahf
mov
mov
pop
aad
outsl
pop
int3
lcall
pop
testb
mov
push
dec
shrl
add
lock
mov
fnsave
sbb
inc
dec
aam
paddusb
mov
in
adc
adc
jge,pt
aad
sub
mov
or
lahf
insb
popa
in
xchg
ret
xor
xchg
cmp
push
mov
bound
sub
notb
lods
push
ss
fucomip
sti
int3
cmpsb
std
sub
test
scas
int
cltd
popf
sbb
lret
mov
mov
sub
addr16
lods
lods
cwtl
or
fldcw
orl
pop
sbbb
jae
jmp
push
loop
mov
xor
cmp
xchg
dec
xor
jmp
lods
cmp
pop
dec
pop
ja
jno
fstpl
add
out
and
push
shrb
sub
inc
test
fcmovnbe
and
xor
adc
lea
xchg
or
add
es
jo
xchg
ror
add
rorb
jge
in
mov
jge
xchg
fstp
xlat
loopne
jbe
out
xor
sbb
push
sbbb
popl
cmp
xchg
repnz
js
ret
mov
stos
stc
das
hlt
stos
roll
sub
pop
cmp
sub
adcl
mov
das
out
mov
mul
xchg
rorb
fisubrs
sbb
and
adc
fildll
int3
les
scas
repz
enter
fwait
ror
mov
movsb
loope
sub
adc
pop
sub
mov
push
enter
mov
imul
jmp
sub
sub
pop
pop
loop
push
mov
testl
jne
call
movsl
movsl
mov
mov
int
ret
out
repnz
sub
push
in
mov
or
or
pop
pop
cltd
cmp
cmp
mov
xchg
ja
lods
fwait
mov
xor
data16
rolw
fwait
cmp
adc
pop
push
push
push
lret
cmp
cmpsb
mov
lahf
iret
cmpsb
pop
ja
insb
shlb
jl
sahf
in
xchg
imul
mov
daa
pop
sub
jecxz
rol
pusha
mov
test
xor
jge
mov
or
jp
iret
push
pop
or
pop
sub
pop
jae
popa
fstpt
int3
jbe
int3
pop
mov
mov
lcall
cmc
mov
out
pop
dec
jno
into
cmp
cmpsb
sub
setno
pop
sub
mov
test
pop
jmp
adc
push
pushf
addr16
lea
fsubl
fs
sti
adc
sub
xor
or
and
stos
daa
dec
inc
divb
ret
mov
aaa
lds
and
test
int3
into
stc
frstor
bound
test
add
jle
into
and
xchg
out
sbb
insb
call
movsl
mov
das
add
jp
dec
push
or
mov
add
pop
push
xchg
into
sbb
orl
in
and
lret
stc
xchg
in
dec
pop
jnp
sbb
testl
mov
adc
jae
mov
xor
xchg
pop
inc
fisubl
test
popf
mov
xlat
addr16
popf
pushf
adcb
sub
push
jge
cs
adc
inc
movsl
sahf
and
and
sbbl
lret
shll
pop
stos
fstpt
fistl
fcmovb
pop
shrb
and
xor
lahf
jae
les
pop
ret
sarb
jns
rol
pop
pop
mov
iret
jo
xor
arpl
into
mov
jo
js
icebp
int
scas
cmp
out
imul
imul
push
jmp
iret
mov
push
dec
mov
add
in
mov
xchg
xorl
push
popf
and
xchg
aad
mov
mov
ret
dec
pop
add
je
push
mov
mov
dec
arpl
xor
pop
cmc
lcall
push
insl
movsb
xchg
fists
fidivrs
push
out
and
and
test
xchg
js
daa
rol
adc
mov
push
push
out
adc
jecxz
mov
sub
jmp
sub
pop
dec
adc
cmp
dec
adc
jbe
outsb
push
sbb
out
xor
in
pop
mov
mov
fisubrl
inc
xchg
or
bnd
xor
iret
pushf
out
insb
mov
pop
xor
jae
jb
cld
xor
icebp
mov
push
orb
outsl
pop
fnstcw
add
stos
repnz
sahf
mov
mov
sbb
or
lods
and
mov
dec
pop
adc
fimuls
not
fisttpll
movsb
mov
sub
repz
lods
mov
lock
dec
test
movsb
hlt
cmp
out
dec
das
push
sbb
iret
inc
mov
hlt
les
pop
shlb
mov
insl
xchg
jle
push
fwait
jno
inc
call
hlt
sbb
jbe
mov
out
mov
push
xlat
jne
je
jmp
and
cwtl
inc
sbb
jne
sti
fwait
xlat
nop
mov
mov
push
js
mov
adc
ficoms
out
push
mov
push
mov
cmpsb
hlt
leave
cmp
adc
cmp
and
test
stos
fxch
sbb
jnp
repz
push
lods
jne
mov
pop
or
pop
mov
jns
pop
shld
and
xor
cmp
cwtl
jle
rcrl
sbb
cmc
jns
int3
bound
adc
data16
lret
jmp
ret
mov
and
xor
mov
mov
xorl
cmpsb
mov
inc
jg
out
addr16
inc
roll
in
or
outsb
jecxz
or
inc
mov
cmc
push
cld
fwait
shrb
addr16
int
cmpl
in
inc
in
out
pusha
test
call
sub
mov
pop
cmp
push
add
scas
cmp
iret
xchg
xor
or
jo
clc
cmc
push
inc
and
mov
leave
mov
mov
movsb
mov
int
cmp
pop
adc
clc
sbb
ljmp
dec
mov
adc
mov
fstps
filds
testb
rorb
stos
sbb
popf
add
aad
cmpsl
mov
xchg
inc
mov
test
jno
cmp
insl
daa
aas
jg
and
add
out
mov
ror
adc
adc
shl
or
jge
and
insb
xor
inc
sbb
sahf
les
push
aad
push
jg
mov
dec
push
xor
pop
sub
mov
sub
cmp
xchg
shl
fisubs
sbb
insl
jne
clc
jne
adc
loopne
jmp
mov
loope
ret
or
dec
push
mov
pop
adcl
stos
mov
lods
dec
push
push
je
stos
sahf
jmp
pusha
pop
in
hlt
imul
mov
fwait
lret
mov
out
stos
xor
dec
mov
adc
sbb
jo
xor
or
xchg
into
arpl
jno
cmp
inc
pop
mov
sbb
call
das
xor
and
orl
ljmp
cmp
call
push
adc
decl
in
mov
cmc
sub
bswap
mov
mov
dec
inc
or
pushf
loopne
jge
dec
lock
or
adc
xchg
sarl
inc
stos
push
cli
xchg
ficoms
data16
sub
shr
dec
data16
and
adc
or
ss
fs
or
adc
or
xchg
xor
jae
stc
or
dec
xor
ss
mov
xchg
and
push
stos
xchg
cmc
add
shrb
mov
xchg
data16
outsl
mov
jbe
aad
cli
imul
out
cmp
lcall
adc
mov
fidivs
push
sub
ds
mov
push
xor
mov
and
clc
mov
mov
xchg
aaa
and
ret
ficoms
stos
pop
jge
cmp
ror
addr16
adc
jns
test
jle
fwait
inc
add
aas
inc
in
mov
sub
outsb
ret
jne
xor
and
enter
mov
adc
cmpb
into
cld
mov
mov
into
scas
movsl
pushf
pop
in
and
mov
xor
cmp
icebp
sbb
rcll
fbld
pusha
xor
dec
pop
clc
cwtl
push
sub
js
mov
inc
mov
xchg
mov
ds
xchg
cwtl
addr16
sti
iret
and
or
outsl
mov
add
pop
dec
repnz
push
push
out
xor
pusha
shlb
and
sahf
fildl
fists
fiaddl
jne
mov
mov
call
lods
cmp
push
out
sbb
adc
loope
or
testl
pop
mov
test
orb
pop
je
in
aam
mov
push
and
xor
movsb
in
mov
mov
xchg
pushf
clc
or
pop
jle
jae
fstl
aas
stos
xor
xor
int
rclb
rcr
add
out
mov
mov
add
psubd
ret
xchg
push
outsl
imul
movsb
adc
fstps
out
mov
adc
sub
inc
jb
push
fisttps
pop
inc
cmp
pop
push
push
bound
mov
popa
sbb
stos
ret
es
test
mov
fnstenv
fldenv
sub
shr
test
add
xchg
pushf
arpl
adc
jb
cmpsl
xor
movsb
dec
mov
fstpl
push
pop
pop
pop
gs
lahf
sti
mov
or
out
cmpsl
mov
cltd
or
push
pushf
fisttps
sahf
icebp
mov
ficoml
dec
adc
lods
fsubrs
loop
and
cmp
jo
dec
cmp
mov
repz
xor
pushf
fwait
dec
sbb
inc
jmp
or
testl
dec
push
cld
lock
xor
ret
notl
mov
push
lret
dec
mov
xor
add
fbld
cmp
pop
xchg
scas
mov
pop
movsl
inc
cmp
mov
mov
mov
xchg
sub
cmp
je
mov
jecxz
add
jg
mov
jg
int
aaa
adc
sub
movsl
cmp
pop
add
push
dec
test
test
in
cmpsb
fcmove
and
pushf
inc
iret
push
mov
sub
aaa
xor
cmp
or
ja
jmp
or
les
jp
xchg
mov
pushf
pop
out
jno
cltd
les
and
loope
mov
sbb
fsubrs
mov
lret
add
adc
movsl
ret
or
popl
mov
mov
testb
adc
xchg
mov
repnz
inc
mov
fiadds
iret
and
push
repz
out
addr16
push
sbbl
dec
cmc
movsb
jns
inc
cmpsb
repz
test
das
add
adc
push
adc
sbb
mov
sbb
loopne
xchg
xor
dec
call
xor
cmp
sub
sar
or
sub
ret
add
mov
sbb
dec
pushf
or
push
xor
xor
mov
shrl
fstpt
jg
int3
aad
xor
mov
mov
pop
jp
mov
push
das
dec
in
jmp
push
lret
dec
loope
xchg
mov
adc
fldt
sub
xchg
ss
adc
imull
xchg
add
sbb
movsl
jae
out
inc
adc
mov
test
mov
sub
cmp
andl
xchg
sub
sub
leave
js
jo
std
push
negb
jmp
jl
mov
cli
push
mov
inc
fsubs
ljmp
xchg
jg
pop
xchg
push
sbb
fwait
mov
or
loope
jle
xor
mov
lret
scas
pop
pop
dec
ret
mov
xchg
and
sahf
cmp
mov
fucomi
and
lret
xchg
mov
cltd
rorb
in
std
pop
or
sbb
lcall
push
add
mov
repz
push
mov
loop
cmp
iret
out
repnz
mov
xor
jo
sar
cmp
stos
rorb
xor
das
fwait
cltd
je
add
call
jno
dec
inc
sub
ljmp
dec
push
scas
cli
push
mov
aam
int3
sub
popa
ds
mov
sbb
adc
pop
inc
pop
pop
cltd
inc
inc
adc
mov
stos
push
mov
bound
outsl
adc
pop
jecxz
jecxz
and
jmp
cmp
subb
pushf
out
mov
xchg
pop
cli
inc
mov
inc
cmp
repnz
and
add
inc
inc
lods
dec
pushf
push
adc
addb
add
push
daa
jno
inc
sti
dec
ja
js
xlat
loope
push
xchg
fwait
xchg
add
int3
daa
push
aas
cmc
fs
mov
insb
icebp
int
jns
push
inc
arpl
dec
pop
pop
and
or
or
jns
xchg
push
push
add
imul
xlat
test
dec
jns
mov
cmpsl
mov
pop
mov
scas
insl
cmp
jle
cwtl
mov
aam
mov
fwait
push
mov
test
mov
test
sub
cmp
mov
cmpsb
movsb
aad
dec
mov
pop
mov
mov
xor
sbb
sbb
inc
ret
adc
or
cld
add
imul
sub
fwait
cltd
imul
nop
mov
sbb
hlt
adc
xchg
outsb
pop
icebp
shrb
lods
inc
jecxz
jmp
xchg
inc
mov
xor
frstor
or
cmp
sub
ja
jbe
xchg
fldenv
movsl
inc
pop
sub
or
sub
jne
loopne
dec
mov
rorb
in
pop
icebp
data16
xchg
adc
cltd
popf
bnd
repz
sbb
sub
jmp
pop
inc
outsb
mov
push
mov
jmp
loopne
inc
out
mov
stos
xchg
and
out
mov
sub
pop
mov
adc
or
pop
lds
aam
mov
das
dec
pop
hlt
dec
jp
into
push
orb
ljmp
lods
outsl
mov
shlb
pop
das
test
pop
outsl
pop
out
sub
std
pop
mov
lret
stos
sahf
iret
mov
adc
ljmp
sub
aam
rcr
mov
pop
and
rorl
jnp
push
cli
scas
dec
push
jge
ret
push
xor
inc
insl
push
fdivs
push
inc
cs
pop
mov
lea
rclb
lock
scas
data16
loopne
je
push
aas
mov
sbb
xchg
cld
outsb
pop
cmp
pop
rcrb
push
fbstp
mov
xor
sarb
xchg
into
in
loopne
cmp
mov
dec
movsl
mov
sbb
xchg
enter
or
adc
jle
test
mov
jmp
lcall
adc
sbb
test
shlb
enter
push
dec
test
jnp
inc
aad
xchg
enter
add
out
into
dec
out
fdivl
repz
xchg
xor
rolb
ret
lahf
rorb
jne
popaw
hlt
inc
mov
pop
mov
inc
inc
ficompl
pop
and
int
in
repnz
ret
sub
pop
ljmp
sbb
adc
aam
pop
aaa
dec
ds
inc
ret
enter
mov
daa
sub
jae
outsb
cmp
xor
push
std
xchg
shlb
outsb
fdivl
jle
fisubs
pop
pop
lret
sbb
leavew
add
mov
xor
lret
repz
fdivrs
aad
sub
and
push
xchg
adc
cmp
jg
pop
cmp
xchg
xor
dec
cmpsw
je
push
mov
lods
or
mov
dec
lds
cmc
fcmovb
pop
aad
sbb
jge
arpl
adc
mov
arpl
int
pop
pop
into
mov
lahf
scas
filds
push
addr16
stos
nop
mov
outsl
stos
aaa
pop
adc
mov
bound
sbb
xor
sub
outsl
int
jmp
push
clc
pop
sbbl
cmp
ljmp
push
ja
shll
adc
movsb
mov
hlt
fsubrs
mov
cld
nop
add
cltd
xchg
jne
cmpsl
lods
stc
inc
and
popf
cltd
sbb
jae
aad
mov
clc
fistps
mov
jo,pt
enter
xchg
mov
add
out
push
pop
adc
fisubrl
adc
nop
loop
test
add
mov
mov
push
sbb
insl
std
pop
lock
add
xor
test
pop
push
out
xchg
int
shrb
add
sub
jg
sahf
iret
xchg
xor
sub
push
sbb
push
mov
hlt
cmp
pop
xchg
call
inc
mov
test
jnp
cmpb
xor
cmp
and
mov
xor
in
mov
in
faddp
cwtl
pusha
loope
rol
scas
dec
jb
xchg
jl
lods
jb
xor
xlat
dec
push
rorl
lcall
sahf
dec
leave
inc
iret
add
xchg
mov
or
push
ja
mov
insb
mov
add
data16
xchg
shl
mov
sbb
dec
add
aam
pop
stos
stos
push
sbb
xchg
sbb
pusha
cs
bound
cmp
movb
loopne
bound
les
add
mov
jp
inc
sub
sub
pop
jp
out
add
aad
jo
or
cmp
add
pop
push
mov
jecxz
clc
push
or
es
out
jge
inc
jg
xchg
test
and
nop
test
or
mov
sbb
jmp
and
movsb
sub
addr16
mov
jecxz
fisttpl
or
and
mov
sete
mov
push
mov
mov
and
or
in
pop
iret
mov
xor
xor
add
int3
movsb
cmp
loopne
mov
gs
les
gs
insl
out
and
inc
jb
xchg
jns
test
and
aam
or
xor
mov
pop
lea
lock
push
cmp
lret
xor
cmp
scas
fsubrs
es
hlt
jns
mov
ljmpw
lcall
jge
cmp
mov
ja
int3
pusha
sbb
push
mov
jle
adc
test
inc
and
bound
jne
xchg
xor
lock
pusha
and
iret
and
and
in
sbb
or
fnstsw
mov
push
out
mov
and
leave
adc
lock
xchg
cmc
iret
dec
orl
add
inc
push
iret
xchg
cld
push
cli
sti
mov
faddl
sbb
and
sti
out
ss
imul
mov
mov
xor
fstl
movb
outsl
jge
mov
and
dec
in
js
mov
dec
mov
lock
jno
jbe
hlt
scas
mov
rol
addr16
mov
imul
leave
push
imul
jnp
cmp
es
sbb
mov
adc
int3
pop
adc
das
lods
mov
mov
pop
sub
inc
push
xor
fdivrs
push
outsl
insb
in
daa
aaa
iret
fistps
mov
inc
or
inc
cmpsl
sbb
add
or
shl
out
add
xchg
adc
jle
cli
mov
mov
lea
rep
pop
daa
jae
and
inc
add
test
mov
in
jmp
aas
xor
pop
and
dec
dec
push
jmp
sbb
mov
or
jge
and
mov
mov
addb
push
andb
xchg
xor
or
xor
ss
sub
out
sub
and
and
test
popa
mov
neg
lock
pushf
cmp
inc
sbb
push
stos
test
addr16
sbb
jl
decb
pop
cld
mov
jne
lods
jns
sub
mov
push
bound
addl
movsl
sbb
cs
fnstsw
xchg
push
lea
stos
out
or
fsubs
cs
orl
or
cld
dec
pushl
and
pop
lock
mov
fs
fs
mov
loope
orl
sub
out
rorl
insb
mov
out
pop
rcll
imul
adc
addr16
popa
test
stos
arpl
outsl
ficomps
dec
xor
shlb
icebp
fiaddl
scas
cwtl
or
push
jmp
cmp
mov
rcr
push
es
mov
mov
mov
or
add
xor
dec
cmpsl
jbe
pop
mov
push
aad
xchg
outsl
sub
test
nopl
cmp
xor
cmpsb
mov
and
jmp
cmp
loop
icebp
pop
scas
dec
pmullw
cmp
addr16
and
dec
pop
jp
js
or
mov
push
dec
icebp
test
scas
daa
inc
fsub
push
xor
loop
add
cmpsb
gs
loop
jecxz
shrl
xchg
and
add
insl
dec
lcall
adc
scas
jl
lock
push
or
aad
add
mov
stos
fnsave
repz
mov
insb
aas
and
sbb
pop
push
add
or
call
sbb
cmp
mov
sti
xor
rclb
loopne
jne
jne
rorb
inc
push
push
jp
or
cmp
or
and
or
mov
xor
fsubrl
mov
ja
outsl
add
adc
jmp
repz
popf
xor
dec
mov
addr16
ret
push
sub
and
cli
les
mov
sub
push
cmpsl
sub
ja
mov
mov
aam
xlat
jo
pop
jno
lcall
lcall
shlb
jg
les
pop
cmp
test
stc
mov
cmp
je
mov
xchg
in
adc
or
inc
push
add
dec
ds
rcrb
pop
or
imul
mov
jnp
mov
aam
clc
push
fwait
pusha
xor
mulb
pop
inc
or
in
pop
pop
sub
sbb
fsubrs
stc
out
or
xor
sbb
test
xlat
mov
pop
jnp
jno
les
iret
fsub
pop
lods
outsb
insb
fmuls
cld
mov
xlat
xor
jb
decb
fwait
aas
fadds
lods
ds
ficomps
or
mov
ja
inc
pop
xor
mov
in
fildl
push
xchg
jae
push
inc
mov
dec
adc
mov
jp
insb
test
shlb
clc
and
outsb
jg
sub
lods
xchg
lcall
cli
xor
repnz
jae
inc
xor
xor
cmpl
or
shll
mov
inc
mov
mov
sbb
adc
insb
loopne
add
adc
in
std
mov
pop
mov
gs
sub
sub
adc
push
stos
test
out
sub
mov
xchg
mov
cmpsb
lcall
inc
mov
insl
pop
jns
cmp
jmp
mov
xor
sub
pop
inc
push
and
jmp
xor
mov
lahf
add
mov
jge
ljmp
mov
jns
mov
dec
scas
xorb
cmpsl
push
cmp
or
push
mov
in
adc
stc
and
hlt
mov
mov
dec
test
xchg
fxch
xlat
mov
and
pop
addl
xchg
push
push
inc
fstl
adc
mov
icebp
pop
mov
jp
cmc
pop
lods
lret
jmp
jns
mov
push
ja
xor
and
arpl
dec
stc
mov
test
cwtl
adc
or
mov
jb
xchg
push
std
imull
rcrb
inc
popl
jae
and
dec
gs
mov
adc
mov
xor
pop
daa
jne
mov
pusha
sbb
scas
mov
xchg
or
jg
lcall
jb
lds
jge
mov
xchg
mov
insl
mov
outsb
xor
ret
add
push
aad
das
fmuls
mov
mov
pusha
pop
ss
cltd
dec
dec
pushf
popa
push
sub
out
call
push
cmc
xchg
pop
pop
fcmovb
pop
adc
loope
xchg
rolb
lods
insl
invd
xlat
mov
jo
icebp
jae
std
imul
sub
arpl
pop
inc
and
adc
arpl
xor
cmpsb
mov
dec
add
inc
or
outsb
adc
sub
loopne
out
or
push
popa
adc
dec
pop
xchg
pop
cmpsb
and
sahf
pop
aas
cltd
jno
js
pop
outsb
daa
rolb
lret
mov
cltd
aaa
in
stos
shrb
mov
jns
gs
mov
mov
jae
test
in
jp
or
filds
or
sbb
sahf
add
hlt
out
loop
rcll
adc
fwait
push
mov
xchg
jge
push
mov
pop
pop
add
test
testl
shrb
pop
imul
das
and
cmpsb
loope
out
cmp
sbb
xchg
test
sbb
pop
repz
mov
mov
inc
inc
xchg
inc
je
lds
lods
ljmp
and
loop
xlat
xchg
sarl
push
insb
cmc
rorl
mov
xchg
popf
xchg
add
stos
add
outsb
test
dec
xchg
push
xor
sub
js
sbb
iret
jnp
pop
push
roll
inc
xchg
shr
add
ja
imul
popf
pop
sbb
add
insl
jae
mov
xchg
stc
dec
mov
es
daa
imul
xor
add
dec
mov
shll
adc
pop
cmp
iret
and
pop
fnsave
and
adc
pop
jne
jbe
pop
call
jo
push
imul
lods
gs
sub
in
push
testb
into
push
sahf
fimull
inc
cmpl
daa
sub
call
push
xlat
mov
popa
or
les
push
xlat
dec
cmp
jo
xchg
mov
and
xchg
pop
pop
insl
loopne
fstps
mov
aad
call
hlt
les
sub
push
push
sbb
adc
adc
ds
imul
sub
pop
adc
cld
mov
cs
scas
mov
lret
mov
cmpb
js
push
jl
jo
ss
lahf
pop
cmpsl
int3
fidivl
inc
ljmp
push
lock
cmp
or
repnz
sbb
cmp
fldcw
data16
popa
int3
mov
ja
push
jge
add
sub
dec
loop
mov
mov
xor
mov
out
jmp
push
mov
push
pushf
push
mov
mov
shlb
and
mov
jns
sub
mov
pop
sub
xchg
push
dec
lods
fs
sbb
roll
dec
ja
jb
les
call
xor
xor
pop
leave
and
aam
cmpl
adcb
mov
add
mov
divb
adc
xchg
jb
lods
xchg
and
xor
fidivl
sub
rol
enter
xor
add
pop
sub
fs
icebp
shrl
sub
dec
mov
xor
stc
test
sti
rclb
adc
jne
daa
aas
fisttpll
ljmp
fcomps
dec
cmp
fcmovnb
adc
push
out
and
add
sub
rcl
mov
je
test
sub
xlat
hlt
movsb
adc
arpl
and
adc
mov
int
cmp
aaa
pop
jge
inc
mov
jl
add
leave
cmp
lret
cltd
push
xor
xlat
cld
out
mov
aad
push
addr16
xchg
bound
cmp
aas
filds
jo
jo
sub
stos
sbb
jecxz
dec
stos
lcall
pushf
sub
imul
popl
add
repz
push
sub
push
pusha
stc
jbe
out
adc
inc
lcall
fidivl
cmp
push
adc
clc
movsl
push
mov
xchg
in
out
and
sbb
xlat
stos
inc
fcmovbe
fwait
xchg
sbb
and
mov
aaa
fmuls
lcall
aad
pop
xchg
imul
add
fisttpll
test
rcrl
cltd
mov
xchg
in
bound
lea
mov
adcb
loop
xchg
sahf
mov
repz
aas
sub
ljmp
cmpsl
xchg
insl
lds
test
inc
xchg
dec
mov
je
mov
addl
outsl
insl
test
add
pop
mov
mov
cwtl
xor
sub
fs
push
push
pop
sti
inc
scas
xor
loopne
mov
dec
push
push
scas
add
cmp
xor
pop
scas
adc
mov
inc
cmp
jg
sub
cmp
pop
int
fisubl
xor
clc
std
mov
jo
dec
jge
inc
dec
loope
pop
add
xor
decb
ror
mov
movsl
je
jecxz
insb
inc
ret
adc
sub
pushf
adc
pop
data16
xchg
jae
cmp
mov
inc
ja
insl
repz
insb
aam
cmc
jne
out
jns
inc
pusha
xchg
xorb
shlb
and
push
sub
mov
pop
dec
push
lea
push
mov
sbb
push
ds
jle
jle
inc
arpl
sub
mov
pop
jae
and
fldenv
pop
pop
sub
push
mov
cld
shlb
sub
ds
pop
sub
or
ret
and
cmp
addr16
cmp
in
push
mov
stos
scas
jecxz
cmp
into
mov
add
push
mov
inc
fiadds
int
data16
aad
cmp
mov
xor
scas
sbb
shll
test
in
pop
mov
cmpsl
es
sub
pushf
add
xor
sbb
adc
stc
jnp
das
shl
pop
lahf
push
cmp
daa
dec
mov
aam
sub
out
leave
sub
rol
mov
into
jmp
lret
cmp
aam
mov
insb
xlat
fidivrs
movsl
sub
cli
mov
insl
mov
subl
ljmp
pop
iret
pop
fistpll
scas
cwtl
roll
or
xchg
xchg
jecxz
aas
pushf
xchg
mov
add
xor
mov
sbb
and
rcrb
xor
out
out
decb
or
fisttpl
ja
inc
or
jb
inc
addr16
pushf
jge
mov
les
inc
sbb
or
and
sub
cmc
sub
lcall
stos
scas
lahf
jle
mov
and
and
dec
xor
xor
mov
lahf
bound
nop
add
jge
adc
or
jo
adc
es
jbe
cmp
cmp
outsb
fildl
lock
inc
mov
dec
jnp
ficoms
test
gs
fbstp
lahf
jmp
dec
mov
mov
push
xor
ficomps
push
into
sbb
out
sub
jne
mov
pop
rcr
jmp
push
fwait
add
cli
xor
dec
xchg
pop
rcl
jne
push
bound
es
ss
xchg
inc
std
mov
dec
enter
arpl
push
out
push
and
inc
fwait
call
jno
adcb
or
popf
out
push
ret
inc
outsl
pop
lea
sbb
stos
push
mov
in
popl
mov
popf
ret
imul
aas
adc
pusha
mov
pushf
imul
sbb
dec
xchg
sbb
imul
xchg
mov
fisttpll
jne
fwait
ret
ljmp
adc
clc
int
dec
jle
inc
shll
cmc
movsb
mov
insb
adc
into
mov
std
cmp
lret
mov
xchg
daa
pop
repnz
push
cs
arpl
sbb
ret
xchg
std
mov
jp
inc
aaa
mov
jno
andb
not
adc
xor
lds
lret
dec
push
dec
pushf
int3
jg
push
mov
dec
dec
inc
inc
sahf
lcall
ficoms
mov
bound
cwtl
rcrb
cmc
lcall
dec
mov
movsl
or
je
lods
pop
sub
push
sbb
outsl
testb
inc
adc
inc
lods
push
adcl
out
adc
imul
repnz
jmp
aas
sahf
and
popa
cltd
out
fs
push
sub
stos
loop
pop
cmp
sub
cltd
int3
dec
scas
addb
jl
add
mov
fnstsw
int3
and
negb
xor
movl
das
fmuls
adc
adc
ja
roll
inc
and
or
fnstcw
mov
lds
sub
outsb
mov
jmp
js
push
insb
sti
or
fdivs
dec
stc
bound
sbb
add
rorb
xchg
push
add
movsb
cmp
jp
mov
mov
xchg
out
test
daa
mov
mov
pop
jmp
sub
xchg
push
push
or
out
mov
gs
sbb
in
das
sub
and
lock
jo
ja
loope
sti
xor
jmp
shl
xorl
inc
imul
mov
outsb
or
mov
pop
mov
sub
cmp
adc
cmc
adc
cwtl
dec
repnz
cmp
mov
test
pop
pop
add
lock
or
mov
or
mov
push
das
lcall
add
or
xor
dec
imulb
xor
std
dec
xor
mov
mov
or
aaa
or
adcb
andl
add
add
testl
push
inc
fisubs
jo
add
mov
jnp
aaa
in
cmp
dec
cmp
adc
dec
and
cmp
add
fdivl
sbb
adc
or
enter
mov
fs
xorb
push
xchg
pop
rcl
sub
data16
push
push
popa
orl
leave
jle
popf
outsl
shl
lret
pop
jmp
insb
jbe
test
inc
ljmp
test
stc
push
jecxz
xchg
in
cwtl
fidivs
lods
sbb
cmp
pop
popa
cmp
aas
popf
fs
pop
ja
sub
cwtl
jl
dec
faddl
cld
jns
sar
inc
jns
add
sub
out
xchg
add
pop
pop
iret
daa
fninit
cltd
enter
movsb
addr16
push
sbb
inc
inc
mov
int3
inc
stos
loop
or
add
and
lds
pop
imull
sbb
repz
inc
in
jp
mov
movsb
push
mov
push
ret
notb
in
inc
sbb
out
aam
hlt
mov
insb
aad
movsb
test
pop
or
mov
sub
test
das
and
mov
jp
aaa
lds
mov
daa
outsb
rcll
adc
inc
ficompl
imul
int
in
stos
or
cmpsl
jecxz
aam
adc
insl
movnti
cld
pop
movl
outsl
in
bound
jb
add
adc
rcrl
dec
je
sub
aaa
stos
cs
loope
mov
push
pop
jmp
add
mov
cmpsb
and
mov
psubb
mov
sbbl
mov
cmc
and
jmp
add
imul
addr16
cs
mov
mov
lret
adc
inc
and
pusha
mov
pop
sub
int3
cmp
xchg
sahf
push
clc
fs
negl
in
insb
ret
mov
inc
sub
jle
imul
push
loop
inc
or
andb
and
scas
push
out
xor
or
loopne
hlt
jnp
mov
fcom
sub
cwtl
push
xlat
arpl
dec
push
xchg
ds
push
push
test
inc
scas
lret
dec
fwait
cmp
scas
in
xchg
add
mov
ror
mov
adc
xor
iret
out
dec
pop
sub
jo
or
xchg
push
rol
lock
pop
scas
addb
jp
cmpsl
rolb
std
jle
xchg
lcall
push
and
inc
stos
cmp
imul
and
xor
push
cwtl
jl
add
xchg
sti
add
lods
shlb
sbb
insl
data16
jl
cs
cmc
shll
xor
sbb
cli
xchg
dec
sub
cmp
or
fst
pop
test
stc
loopne
mov
mov
into
hlt
cmp
stc
aaa
fldt
outsl
push
pushl
mov
xlat
add
int
push
mov
fyl2xp1
test
mov
or
mov
aad
rcll
or
mov
pop
aas
dec
inc
inc
xchg
imul
adc
repnz
push
loope
aas
push
scas
ljmp
jge
add
leave
sarl
pminub
out
mov
shrb
mov
inc
pop
mov
test
jl
out
cmc
or
test
sub
mov
les
mov
pop
jns
out
mov
aas
faddl
or
jo
sbb
popa
jge
lahf
outsl
and
sub
insb
inc
cwtl
jo
icebp
cmc
cmpsl
xor
xchg
mov
sbb
out
js
imul
push
aaa
mov
flds
inc
lret
call
jge
cmp
and
dec
add
ret
push
sub
fimuls
and
aam
inc
pusha
jle
pop
lcall
je
jne
aam
fimuls
gs
cli
jno
mov
das
leave
pop
jmp
data16
push
inc
scas
mov
push
xor
xchg
repnz
arpl
adc
fisubl
xor
lock
sti
mov
aad
addl
cltd
xor
and
mov
push
loopne
aas
shll
in
lea
cmp
jecxz
fidivl
shl
jmp
addr16
lods
div
sbb
sbb
add
das
subl
test
mov
mov
jb
xchg
pushf
push
ljmp
out
sub
xor
sbb
lea
ljmp
cmp
js
cmp
insb
icebp
xchg
sub
arpl
xchg
pop
mov
dec
sub
xor
dec
push
lea
fdivl
int3
and
or
pop
lds
adc
mov
or
cmp
pop
cmp
lret
stc
stc
push
std
test
adc
mov
mov
lds
std
add
mov
or
sbb
mov
pop
cmp
out
inc
and
push
test
mov
shl
mov
xchg
pop
fs
loop
and
jo
inc
ret
adc
shld
cmp
inc
je
adc
adc
push
outsb
andb
push
aaa
mov
outsb
jl
lea
adc
add
xchg
movsb
es
cld
std
pop
inc
sub
mov
leave
mov
lods
les
inc
cmp
adc
dec
es
add
fmuls
popf
mov
adc
inc
pop
lods
xchg
pushf
das
cmp
imul
sbb
adc
mov
js
fistps
push
mov
ljmp
cmp
popa
clc
stc
pop
push
mov
clc
ja
inc
mov
out
test
int3
ds
mov
push
cmp
inc
dec
out
aas
repz
mov
movsl
stc
cmp
bound
adc
cmp
test
jno
shl
scas
xor
sahf
dec
cmc
rcrw
pop
adc
jge
or
jne
or
jg
mov
aam
jo
imull
sub
inc
push
xchg
mov
xor
data16
adc
sub
addr16
inc
jge
adc
mov
sahf
cmpsb
imul
adc
pop
fdivs
aas
jmp
out
mov
loope
adc
xor
js
fildl
inc
scas
cmp
stos
sbb
jae
jnp
inc
cmp
mov
pop
jge
les
out
fldt
mov
fimull
int
call
lcall
aam
add
push
test
cmpsl
mov
cmp
xor
mov
mov
andb
ret
push
cltd
mov
scas
xchg
fildll
adc
inc
cmp
jp
test
ret
pop
jle
pushf
ja
imul
mov
add
mov
addr16
gs
or
cmp
mov
cmp
mov
xlat
add
faddl
pop
cwtl
xchg
fwait
or
mov
loope
shll
or
lock
shlb
les
mov
and
in
mov
movsl
add
jnp
mov
inc
inc
sub
push
jg
int
test
xor
sbb
jnp
hlt
jmp
sub
mov
nop
shrb
fwait
rolb
dec
fnstsw
xchg
push
pop
push
icebp
out
pop
in
sub
sub
jbe
push
imul
pop
imul
icebp
rdtsc
movsb
cltd
rcll
and
sub
das
nop
pop
inc
pop
lods
scas
lock
js
and
into
int3
scas
jb
xchg
data16
xchg
call
hlt
pop
xchg
shl
sub
push
fwait
push
mov
dec
fisubrl
and
decb
psubd
xchg
arpl
push
dec
inc
cmp
mov
cmp
ret
inc
repnz
sbb
lret
and
cmp
push
pop
push
insl
adc
jl
addr16
mov
les
or
mov
add
add
or
dec
jle
rorb
fldt
inc
pop
jbe
cld
jae
pop
xlat
mov
cwtl
in
test
and
rorb
mov
pop
sbb
jmp
mov
sbb
xor
add
lds
andl
stos
fwait
mov
xchg
aad
cmp
in
aaa
leave
xlat
aas
cwtl
mov
pop
and
mov
insb
push
add
inc
lods
inc
sbb
mov
lret
pop
inc
sbb
inc
loop
cmp
sbb
fisttpll
out
neg
mov
pop
push
test
call
out
cmpsl
movsl
mov
stos
aam
loope
repnz
sub
iret
out
aaa
pop
add
adc
jle
add
les
jne
scas
pusha
adc
dec
loope
movsb
testl
gs
fsub
out
fidivrs
movsl
jg
xchg
subb
aam
and
or
fstp
xchg
sub
jb
xor
pop
sar
leave
jnp
enter
fmuls
imul
or
leave
xchg
dec
and
xchg
sub
daa
aam
push
repz
icebp
xchg
mov
dec
jecxz
cmp
fstpl
ja
inc
into
imul
jmp
test
xor
lea
bound
int
aad
and
sbb
xchg
inc
loope
or
and
mov
or
stos
mov
jecxz
imul
movsb
jns
mov
fldenv
dec
call
fcmovnbe
jns
add
dec
in
xorb
xchg
jns
arpl
pop
nop
adc
lds
and
and
std
dec
mov
mov
cwtl
jbe
adc
std
iret
xchg
and
loop
icebp
leave
mov
sbb
dec
stos
aaa
sbb
jmp
aam
adc
sbb
xchg
or
mov
shlb
incb
jne
pop
xchg
aam
lret
pop
mov
mov
lcall
inc
fs
test
divb
sbb
xor
adc
nop
mov
outsl
test
push
inc
mov
and
push
adc
addl
cmpsb
in
leave
aas
pop
push
push
rcrl
mov
pusha
fildll
adc
mov
mov
mov
push
mov
lcall
cld
mov
icebp
enter
ja
mov
adc
xchg
test
pop
add
mov
insl
bound
mov
ljmp
dec
test
gs
rol
mov
js
enter
jne
cmp
inc
ljmp
push
jnp
pop
and
mov
hlt
in
jae
out
mov
dec
jp
adc
mov
lea
cltd
and
sti
sbb
popf
xchg
inc
mov
repnz
cld
movsb
sub
add
xchg
fsts
add
sbb
insl
inc
das
arpl
aaa
je
sub
pop
cltd
pop
aaa
mov
cmp
loope
mov
das
cmp
sahf
dec
mov
mov
sbb
sbb
mov
adc
sbb
outsb
cmp
dec
cmp
or
xchg
dec
adc
add
adc
dec
inc
jne
insl
cmp
sbbb
jno
sub
in
mov
mov
cmp
cwtl
jae
pop
into
push
mov
hlt
pop
arpl
insl
sub
and
or
mov
and
mov
cld
mov
pushf
pop
lock
rorb
sub
stc
mov
loope
adc
insb
xchg
xchg
xor
cmp
popf
hlt
std
aaa
or
cmp
jp
je
cmp
ret
hlt
mov
xchg
jl
lcall
dec
sbb
hlt
xor
fisttpll
faddl
push
in
dec
pop
int3
mov
mov
insb
leave
aas
xor
xchg
jl
out
mov
dec
cwtl
adc
push
out
or
cld
int3
mov
std
cmp
cmp
adc
mov
stc
test
dec
dec
jae
add
loope
jge
lret
cmp
in
lods
lods
rcl
fmuls
jb
sub
loope
pop
sbb
ret
sub
ret
or
push
hlt
mov
lret
xor
dec
xchg
xchg
or
sbbb
stos
xor
lahf
fdivrl
test
xchg
in
repnz
mov
cmpsl
mov
xchg
daa
das
js
aam
data16
dec
xchg
xchg
xlat
lahf
push
pop
add
adc
add
lock
push
xchg
xor
jp
shll
jg
and
test
mov
fsubr
call
aam
ficoms
lods
shrl
cld
movsl
fstpt
jmp
mov
jmp
sbb
fcmovb
inc
cmpsb
pushf
ror
movsl
jo
push
aaa
sbb
aad
into
mov
adc
ja
push
pop
mov
inc
out
pop
aas
push
and
popa
add
iret
push
aaa
std
push
into
xor
cmp
in
cmp
fcompp
jp
xchg
nop
adc
dec
fstp
cmp
mov
jae
cmp
pusha
pop
insb
inc
divl
mov
rcrl
pushf
addr16
aaa
dec
repnz
ljmp
std
jae
filds
pop
dec
mov
dec
in
sub
sub
test
dec
stos
dec
int3
or
jmp
push
jne
movsl
sub
sti
clc
mov
sub
push
xchg
sbb
popf
sub
inc
fsubrl
flds
les
test
imul
stos
aas
loop
dec
dec
mov
adcl
xchg
lock
mov
inc
fidivl
mov
and
push
pop
mov
sub
push
ljmp
mov
pop
mov
out
add
xor
mov
sbb
xor
push
and
adc
ja
pop
mov
mov
push
xchg
sub
jnp
inc
pop
lds
lods
inc
pop
push
push
sahf
xor
jo
jne
mov
mov
inc
test
mov
in
jns
adc
pusha
outsl
test
mulb
into
sbb
rcrl
xor
or
inc
jbe
pop
jp
and
mov
xchg
push
jp
pop
xor
aam
insb
sti
bound
jne
mov
stos
gs
outsl
mov
lcall
mov
inc
int
xchg
inc
sbb
mov
jp
lock
repz
mov
mov
into
adc
jb
inc
add
sbb
or
clc
in
dec
jp
pop
add
pop
dec
add
call
push
fisubrl
cli
dec
sub
hlt
loope
dec
xor
mov
mov
aam
lds
lods
test
jns
xchg
bound
lahf
rcr
add
scas
sahf
in
icebp
and
imul
loop
cmp
mov
xorb
cwtl
ss
lahf
and
xchg
or
sbb
mov
imull
pop
adcl
clc
xchg
sbb
fbstp
testb
movsl
xchg
cmc
pop
add
push
cmpsb
xor
mov
lret
js
mov
inc
mov
addr16
jl
loope
jg
fprem1
loopne
sub
js
mov
in
xchg
fcomip
cmpsl
bound
cli
loopne
in
cs
push
sbb
mov
dec
pop
ss
mov
pop
movsb
xchg
scas
push
out
call
adcl
roll
in
push
xorl
mov
or
lret
pushf
test
mov
in
shll
cwtl
sarl
cmp
sbb
add
inc
pop
sbb
dec
push
jl
cmp
sarl
or
jmp
and
push
stos
aaa
in
repz
fcmovnb
sub
test
mov
gs
and
out
outsl
sub
xchg
jg
sbb
sub
xchg
pop
loopne
faddl
daa
cmp
outsb
popa
aam
xchg
pop
and
sub
xor
pop
push
out
inc
cmp
ss
push
out
inc
push
sub
gs
in
pop
pop
int3
js
mov
add
ja
out
jae
js
or
out
ret
sahf
add
mov
in
scas
pushl
sbb
repnz
mov
cmpsl
dec
pop
inc
mov
push
jmp
test
jmp
adc
outsl
in
stc
cmc
push
negl
pop
inc
imul
mov
jmp
movsl
inc
repnz
jl
xchg
push
xor
mov
outsl
mov
inc
and
xlat
pusha
loop
add
adc
push
sar
dec
aaa
xchg
scas
in
lret
push
xor
aaa
movsl
inc
cmp
cmp
daa
aad
sub
dec
fcmovnb
xor
stos
add
rol
push
sbb
cmp
loope
fimuls
jae
shlb
rcrl
lods
xor
rcr
xchg
jle
dec
mov
push
into
xchg
lock
xchg
mov
mov
sub
inc
xchg
outsb
inc
cmp
loop
aad
inc
addr16
test
daa
push
cmp
je
pop
std
sbb
jle
jp
sahf
notb
push
xor
lds
pop
lcall
loope
or
pop
add
insb
jbe
xchg
loope
nop
jo
daa
call
sub
mov
daa
sbb
call
fdivs
aam
inc
adc
pop
pop
mov
jns
lock
lock
sbb
fs
cld
aad
cmpsl
inc
adc
xor
es
pusha
mov
arpl
jl
xchg
push
jecxz
test
push
fwait
into
inc
jns
xchg
inc
and
aaa
jg
jae
add
inc
loopne
sbb
aas
ljmp
and
mov
mov
insl
lret
stc
sar
pop
into
push
movsb
int3
lahf
dec
mov
mov
mov
adc
ljmp
js
insl
xchg
push
and
aaa
roll
fistps
and
cwtl
push
pushf
or
scas
mov
mov
imul
ss
shll
lea
scas
push
jmp
add
pop
stos
sub
fildll
scas
mov
andb
cmp
aam
pop
dec
dec
nopl
and
pop
sarl
cmp
fdivs
ljmp
insb
call
jo
push
xor
cmpsl
test
mov
mov
repnz
mov
sbb
sub
push
lcall
and
xchg
or
cli
int3
jle
mov
sbb
lahf
jg
test
shlb
mov
inc
mov
fmull
subl
jnp
jmp
push
sub
enter
sub
cli
lret
aaa
pusha
inc
pop
xchg
adc
lret
xor
imul
fists
scas
push
scas
dec
and
pusha
in
mov
fidivl
push
lcall
xchg
insb
push
dec
add
jle
mov
adc
daa
gs
roll
push
push
std
imul
div
popf
call
hlt
mov
xchg
sbb
lds
mov
shrb
movsl
or
sbb
test
movsl
pop
leave
out
mov
rolb
incb
icebp
imul
ljmp
push
dec
inc
push
sub
add
fcompl
sti
mov
int
divl
sbb
xor
roll
sub
js
inc
sbb
add
jbe
mov
iret
addr16
and
int
loope
call
adc
mov
jbe
sbb
sbb
hlt
push
inc
adc
test
sti
icebp
pop
mov
imul
and
popa
outsl
iret
dec
cltd
jge
pop
mov
sub
adc
fwait
xorb
cmp
out
stos
daa
or
xor
xchg
js
sub
cwtl
mov
sbb
cmp
idivb
add
sub
test
enter
mov
loope
pop
jmp
fcomp
push
loope
shll
sbbb
fdiv
arpl
aam
aam
insb
pusha
pop
mov
cltd
inc
mov
mov
call
std
lock
dec
sub
sarl
fmull
sub
xchg
mov
mov
icebp
mov
pop
pop
xchg
xor
gs
movb
pop
jae
fistps
push
mov
imul
les
push
xchg
mov
jmp
and
or
ret
movsl
es
xor
pop
lea
test
lahf
jge
stc
sub
cmpsl
les
mov
xchg
sub
cli
lahf
lahf
lods
iret
mov
jbe
fisubs
in
inc
cmp
int3
pop
outsb
mov
add
cmp
fwait
movsl
add
and
leave
lcall
mov
in
mov
cmp
lahf
scas
mov
icebp
adc
incb
cmp
stc
xchg
ret
adc
ret
loop
push
or
insl
push
dec
in
lods
enter
out
mov
jp
cltd
mov
imul
data16
xor
jmp
lahf
into
add
cmp
cltd
nop
notl
jecxz
xchg
cs
mov
iret
jp
add
pop
int3
nop
push
mov
or
cmp
lds
js
aam
sbb
pusha
ja
jmp
sti
mov
rcrl
add
fsubrp
repnz
push
xchg
adc
pop
je
jns
xor
dec
adc
stos
jle
xchg
mov
movsb
dec
xabort
jg
cmp
sti
mov
push
mov
and
negb
mov
in
daa
mov
gs
iret
mov
imul
arpl
lahf
pushf
ja
pop
jno
sub
cmpb
aam
and
aas
jbe
arpl
add
sub
fcomi
jp
xchg
mov
and
mov
mov
into
adc
lock
lret
mov
test
stc
push
into
or
inc
shll
fildl
arpl
jge
shl
clc
imul
mov
das
push
repnz
jae
js
jg
lea
or
lcall
gs
sub
movsb
mov
and
jns
cwtl
stc
in
popa
mov
sbb
pushw
jno
jnp
lock
lock
scas
ficomps
push
shrb
das
add
test
adc
add
imul
in
out
push
inc
scas
push
mov
sbb
enter
or
outsl
ljmp
shll
shrl
lret
out
int3
pop
or
je
mov
adc
jnp
out
inc
jne
in
int3
jnp
jecxz
subb
mov
or
cli
mov
enter
pop
jne,pt
xlat
test
das
outsb
xchg
xor
bound
inc
push
cmc
mov
lock
or
insb
lods
ljmp
in
sahf
or
aam
mov
cs
xor
cmpsb
popl
mov
jl
dec
andb
sub
and
or
sbb
daa
push
jge
js
stos
jnp
push
add
jno
addr16
pop
ja
nop
mov
repz
dec
push
out
subb
adcl
bound
test
mov
pop
sbb
ret
mov
mov
mov
jle
stos
sahf
jg
iret
push
adc
pop
std
iret
aas
or
repz
daa
push
andb
or
ss
inc
lahf
jno
inc
sarl
out
xchg
std
cld
dec
fnsave
push
xor
push
mov
movsl
xchg
lret
jb
xor
aaa
pusha
mov
rclb
and
pop
loopne
cmp
jbe
shll
xchg
sbb
fs
sti
push
movsl
xchg
dec
aas
mov
imul
imul
push
sbb
addr16
into
gs
and
adc
jbe
mov
cltd
mov
bound
inc
mov
dec
ret
arpl
or
adc
dec
mov
or
inc
dec
cmp
pcmpeqb
mov
jnp
test
dec
stos
ficompl
sti
jmp
fwait
xchg
ret
leave
xchg
xor
ret
pop
and
mov
fidivs
xchg
mov
xor
ret
push
popf
pop
cmpsb
mov
push
scas
insb
xor
pop
dec
jb
cmp
push
xor
jmp
and
pop
filds
stos
enter
jle
lcall
inc
mov
outsl
add
jnp
outsl
mov
mov
sahf
adc
push
cltd
addr16
adc
out
jge
in
shrl
or
rcll
aad
loope
loope
push
popa
jne
lea
outsl
xchg
movsb
aam
aas
jle
push
mov
and
rcl
ds
lret
hlt
mov
pop
mov
push
or
mov
or
shlb
loope
icebp
jl
push
mov
in
inc
dec
cmp
jle
and
adc
push
nop
pop
loop
adc
pop
rcrb
dec
sahf
scas
das
fldt
test
xchg
mov
lret
add
pop
pop
call
clc
bound
mov
cmp
xchg
cmp
into
rclb
jo
cmpsb
test
add
mov
shrb
inc
mov
push
outsb
inc
data16
hlt
hlt
xchg
xor
dec
xor
imul
and
dec
ds
jecxz
arpl
scas
je
sub
ficoms
pop
jg
popa
mov
mov
mov
fwait
subb
add
cmp
fs
add
sbb
loopne
clc
push
mov
pop
dec
xchg
ds
imul
ja
jae
jo
cld
loope
fisubrl
je
add
adc
sbb
stos
mov
dec
movsb
pop
dec
sbb
cltd
scas
cmp
inc
push
loopne
mov
loopne
pop
lret
bound
sbb
dec
fisubrs
rcrb
in
std
cmc
sbb
sbb
mov
mov
dec
pop
outsl
test
mov
pop
jmp
or
dec
frstor
scas
cld
xchg
pop
pushf
data16
or
push
sbb
xor
add
dec
js
cmpb
ljmp
cmpsb
cmpsb
pop
adc
jmp
or
gs
push
or
ret
cld
imul
xor
dec
scas
push
dec
jbe
clc
add
mov
push
xchg
dec
jmp
mov
sub
push
gs
fisubrs
rolb
jg
inc
jmp
xchg
lods
xor
mov
pop
sub
push
rclb
fs
in
sub
fdiv
fisubl
int3
inc
pop
addb
cld
xchg
fidivs
aaa
les
push
add
jecxz
mov
xchg
sbb
jno
push
cs
push
ss
mov
push
std
push
xchg
and
jnp
cmp
push
adc
pushf
adc
dec
cmp
loope
lea
inc
jmp
sbb
out
push
jbe
fdivrs
pop
push
je
leave
mov
fmul
cli
push
test
int
imul
cmp
inc
dec
push
test
sbb
or
jo,pt
ret
sbb
fwait
mov
inc
insl
xor
jns
outsb
or
adc
ret
cmp
jb
and
fldl
xor
test
pop
inc
or
aas
xor
jnp
sub
insb
mov
mov
lea
lods
in
jl
mov
inc
mov
dec
jmp
add
sbb
stos
mov
jbe
add
loope
mov
mov
pop
ljmp
adc
cmpsb
loop
arpl
cmpsb
cmc
fildl
xchg
movsb
sub
adc
hlt
clc
test
pop
inc
xor
lods
or
mov
cld
ljmp
ret
xor
jge
js
sub
cmpsb
cmp
xchg
xchg
sbb
mov
sbb
or
lods
xor
leave
jo
insl
loop
stc
ljmp
add
mov
fsts
xor
mov
mul
jge
aas
sbb
pop
jo
xor
aam
cmp
mov
and
mov
jb
fisubs
cmp
les
aaa
sub
push
lods
add
gs
fidivrs
inc
adc
sub
shl
xor
push
xchg
mov
clc
push
mov
repnz
test
cmpsl
inc
popa
mov
jl
pop
push
scas
jb
add
pusha
push
jo
aad
fcomip
fs
add
shll
nop
adc
ss
psraw
jecxz
int3
lea
mov
aaa
insl
imul
outsb
daa
ss
sub
cmp
movsb
sti
inc
ret
xor
dec
test
mov
add
inc
andb
test
dec
or
leave
or
subl
jmp
data16
addr16
cmc
xor
adc
inc
out
imul
fisttps
es
lcall
in
cmp
call
push
inc
adc
cmpsl
ret
mov
bound
in
popf
test
jae
aam
lret
sbb
fistps
subl
call
ss
sbb
lahf
mov
push
and
xor
jo
sbb
lret
popa
movd
xchg
into
jg
pop
dec
lds
mov
out
xor
xchg
push
ja
fst
hlt
inc
jg
ret
jb
xchg
fdiv
inc
cwtl
sbb
push
pop
sbb
lretw
flds
idivb
hlt
add
pushl
shll
scas
mov
cmp
and
sbb
push
mov
outsl
xor
push
mov
bswap
xchg
fwait
adc
cmp
pop
popf
test
movsl
test
jno
dec
jl
cmpsl
movsb
add
out
aam
shrl
ljmp
and
sahf
shll
daa
push
cli
xchg
leave
ds
hlt
add
xor
idiv
jmp
popa
rcrb
mov
pushf
dec
cmp
cmp
lret
dec
xchg
daa
cmpsl
and
jg
mov
lret
push
sub
jg
inc
xchg
fsubrs
mov
cmc
mov
sarl
aad
sub
mov
mov
mov
dec
fisubrs
test
cmpsb
iret
fistps
fldl
movl
push
jl
int3
sbb
dec
xchg
adc
int3
es
mov
jge
mov
mov
data16
fmuls
push
iret
mov
adc
cltd
xor
mov
imul
data16
and
gs
and
cmpsb
or
jmp
mov
jge
push
sbb
loopne
cmpsb
fstpt
xor
xchg
and
loope
jnp
fcmovu
cltd
add
mov
xchg
ja
aaa
add
add
mov
iret
shlb
ficomps
fnstenv
rorb
orl
das
imul
popa
push
xor
or
rcll
adc
mov
repz
lcall
xlat
xchg
in
adc
mov
inc
or
xlat
pop
fistps
cmpsl
add
push
jns
sub
push
cld
cltd
movsb
bound
lcall
and
push
imulb
adc
mov
subps
xchg
ja
mov
pop
cmpsb
adc
out
cli
cmp
sarb
xor
adc
fimuls
das
pop
and
pop
rcrb
or
fstps
push
es
outsl
mov
add
fldenv
and
aam
cmpsb
inc
faddl
jno
lcall
out
shl
cmpsl
js
pop
xchg
fwait
jno
test
jle
add
and
jae
cmp
add
lcall
icebp
cmpsl
inc
lds
in
cmp
in
xlat
hlt
shlb
pop
popf
dec
cmp
ficoms
mov
lret
loopne
push
mov
mov
hlt
add
lds
lock
lock
add
stos
lods
mov
adcl
insb
test
mov
mov
mov
cmp
jge
cmp
lods
hlt
mov
test
mov
adc
std
sti
mov
out
or
test
enter
std
outsl
xchg
lods
aam
pusha
repnz
sbb
jb
sub
rcrb
insb
test
pop
add
insl
nop
adc
in
ret
pop
data16
daa
shrl
out
or
mov
sub
inc
xor
jecxz
icebp
je
test
push
fsubs
and
cld
popa
loop
adc
mov
mov
mov
mov
sbbl
push
cmc
mov
xor
out
lds
in
outsb
movsl
mov
dec
fnstenv
in
push
push
cmovl
mov
adc
sbb
add
jp
loopne
xor
cmpsb
pusha
cwtl
sbb
sahf
cs
jne
imul
scas
jne
jnp
jbe
push
clc
xchg
add
jg
push
and
or
mov
int3
jmp
mov
jg
insb
testb
out
iret
dec
loopne
stc
xor
fidivl
pop
in
in
mov
shlb
push
loopne
lret
pusha
push
aad
leave
push
sbb
mov
pop
cmp
fstps
add
mulb
push
jge
imull
cld
push
pop
and
push
pop
shll
dec
leave
jmp
push
out
jns
icebp
popa
shlb
ja
in
mov
add
mov
test
sbb
add
inc
adc
in
loopne
xchg
pop
hlt
mov
fstpt
adc
stos
xchg
call
push
mov
test
aas
dec
sarb
daa
cli
aam
pop
test
out
cmpsl
stc
adcl
loop
pushf
neg
push
pop
mov
or
ds
sub
daa
xchg
stc
sahf
popf
mov
lret
cmpxchg
mov
ja
out
sbb
or
imul
stos
pop
cmpsl
or
inc
xchg
imul
std
rolb
mov
mov
fisubs
outsb
sbb
or
pushl
dec
int
insb
out
fs
loope
daa
and
js
lea
mov
dec
dec
dec
jnp
loop
imul
mov
ss
jl
dec
add
sub
fists
and
jle
pop
jmp
mov
enter
lretw
imul
lret
push
gs
sbb
mov
stos
mov
xchg
loop
stos
stos
mov
andl
imul
mov
xchg
das
repz
dec
cli
pop
adc
mov
xchg
jecxz
lcall
mov
sub
adc
inc
stos
test
shl
adc
sbb
push
cmp
pop
in
loop
inc
fiaddl
mov
cmpsb
lds
inc
fcomi
jmp
xor
mull
add
ret
add
insb
test
inc
inc
xchg
mov
add
mov
cmc
cmp
int3
mov
fisttps
adc
adc
cltd
ljmp
push
lahf
mov
inc
lret
mov
and
lds
xor
mov
dec
out
push
inc
adc
jle
pop
jl
push
fwait
xor
dec
inc
adc
test
shrb
in
mov
ret
dec
movsb
jmp
adc
mov
adc
adc
push
or
mov
xor
sub
subl
rdmsr
xor
pop
xchg
pop
xchg
es
mov
push
jl
mov
xor
cld
xchg
imul
es
jl
ret
push
mov
inc
inc
mov
lods
outsl
lods
mov
test
cmp
mov
insl
push
pop
lods
in
xchg
add
je
xchg
movsb
pop
push
call
in
sahf
dec
rcl
stos
jmp
jmp
stos
pop
cmp
inc
icebp
push
mov
je
lods
sbb
mov
jbe
adc
dec
mov
xor
test
shll
push
lret
cmp
movsb
orb
test
stc
movsl
and
leave
inc
push
lahf
mov
inc
jp
imul
mov
dec
xor
inc
push
adc
push
cmc
cltd
negb
dec
xor
pop
das
ss
clc
mov
or
dec
fwait
and
mov
lods
lahf
xacquire
call
dec
gs
mov
xchg
insb
jl
in
pop
push
fmuls
arpl
xchg
adc
mov
dec
imul
std
mov
repnz
xlat
cltd
int3
pop
jmp
pop
loopne
xor
pop
inc
mov
inc
push
cmp
add
pop
xlat
ret
sarb
leave
push
int3
jp
call
push
in
pop
fidivrl
cli
push
in
lock
or
lock
adc
jmp
outsb
mov
clc
or
icebp
test
addr16
cmc
test
sbb
cmpsb
es
jne
ficoml
ss
or
shl
sub
push
inc
int3
adc
out
in
push
cmp
sub
rcll
ss
xchg
repz
or
push
movsb
stos
jno
jo
popf
repz
push
inc
sar
and
popa
fdecstp
jmp
inc
sbbb
jno
fnstsw
sub
adc
mov
xchg
pusha
movsl
lahf
or
popa
stos
xor
shll
add
testb
aas
std
int3
jg
das
adc
xchg
jle
leave
cmp
std
je
push
cmp
xchg
loop
jno
mov
into
jne
dec
pop
mov
das
mov
jge
cmp
and
adc
rolb
negb
int
cmp
push
loope
data16
adc
add
mov
pop
mov
inc
icebp
or
add
xchg
jle
lock
xchg
into
jnp
mov
mov
lods
or
jb
jp
pop
es
push
fists
imul
data16
test
aam
sub
xor
jb
xchg
insb
cmp
adc
inc
xchg
dec
xor
fnstsw
fistl
scas
push
into
mov
jecxz
pop
lret
rcll
mov
pop
jbe
sub
mov
aas
sbb
movsl
mov
sbb
imul
sbb
cmc
jb
out
xor
icebp
movsl
add
mov
push
popa
mov
adc
fld
imul
fistl
pusha
cmp
aaa
dec
loop
sbb
outsb
popf
mov
in
shrl
out
inc
das
faddl
ret
adc
mov
jg
scas
es
jl
xchg
jb
mov
and
mov
icebp
mov
loope
mov
into
cld
xorl
jno
cmp
mov
rorl
pop
jns
sbb
pop
daa
in
mov
adc
and
daa
inc
dec
mov
push
mov
je
popf
pop
jp
xchg
push
pop
dec
sbb
ret
lods
dec
jns
ljmp
push
hlt
out
mov
mov
mov
shlb
inc
rcll
pop
xlat
mov
dec
add
pop
es
adcb
fwait
insb
aam
jecxz
inc
popl
out
xchg
mov
ljmp
in
sub
inc
cs
sbb
mov
mov
and
fdiv
xchg
data16
fmul
cmc
pusha
stos
test
and
insb
rcll
cli
xor
pushf
and
je
or
loopne
fidivl
loopne
testb
ljmp
pop
jmp
insl
mov
cld
mov
mov
and
mov
mov
push
push
xchg
xor
cmpsl
jne
jo
push
loopne
fistps
mov
repz
popl
mov
and
pop
inc
out
and
bound
cmc
mov
fcmovbe
arpl
fcomip
or
outsb
and
fwait
pushw
outsb
cmpl
sti
mov
sbb
pop
scas
add
jno
inc
es
inc
xor
fistps
pop
daa
shl
rclb
fwait
lret
cmp
mov
icebp
addr16
adc
lods
jo
fisttpll
sbb
mov
jg
lea
xchg
or
es
push
mov
xchg
ds
fs
in
pop
jae
rcll
aam
jecxz
insb
inc
out
sbb
fs
inc
jecxz
imul
popa
sub
insl
aad
pop
mov
push
or
cmpsb
jnp
cld
cwtl
or
sub
lcall
fs
in
out
inc
or
xchg
call
icebp
jl
xor
shl
das
loopne
int3
mov
inc
mov
repnz
rcl
sti
jmp
lcall
or
add
push
inc
sbb
das
push
cmpb
add
lahf
out
fmull
adc
fst
dec
lcall
xchg
mov
inc
cmp
fbld
jnp
jmp
rcl
sarb
in
es
fildl
repz
mov
je
xchg
jb
insb
ss
adc
xchg
mov
mov
sbb
mov
jb
aas
cmp
pop
push
or
sub
cmp
dec
out
inc
sbb
das
xor
mov
push
add
dec
mov
dec
and
popf
cmp
sbb
je
mov
arpl
pop
mulb
mov
scas
into
popf
xor
popa
es
bound
dec
scas
push
add
sti
nop
mov
dec
outsl
mov
out
push
xor
or
pop
cmp
xchg
inc
aas
shlb
push
testl
ja
push
aaa
test
cmp
movsw
xchg
loopne
test
nop
jecxz
or
aam
js
or
js
in
dec
mov
aam
stc
ret
xor
jne
or
cmp
jo
shll
push
inc
sbb
mov
mov
or
js
out
fs
xchg
in
adc
cwtl
je
icebp
push
leave
mov
sahf
xchg
lcall
iret
stos
pop
xor
jae
addr16
sbb
inc
dec
add
aas
pop
in
shr
xchg
or
mov
je
je
xlat
ss
fsubl
lahf
lret
fimuls
push
mov
mov
scas
mov
hlt
repz
outsl
int3
insl
stc
and
fimuls
jno
xchg
push
xchg
mov
call
jo
repnz
jmp
in
bnd
dec
das
xchg
mov
and
inc
adc
fdiv
inc
jge
sub
aaa
mov
dec
ret
fcompl
ss
mov
dec
mov
inc
adc
imul
jge
xor
jb
ja
test
movsb
or
and
push
clc
loop
div
add
out
lret
xchg
or
pop
mov
mov
popa
test
jns
mov
dec
or
stos
pop
and
lods
inc
or
fcmovu
jne
popa
aam
es
inc
lods
sub
mov
div
jnp
push
rol
int
and
pop
fmuls
popf
mov
cmp
pop
std
lret
je
mov
adc
mov
imul
jo
sti
xchg
pop
into
dec
in
or
or
sbb
cli
dec
jl
mov
mov
sahf
xchg
aas
jno
sbb
inc
ss
nop
mov
out
push
sbb
mov
pop
out
mov
insl
add
xchg
movl
jb
imul
mov
mov
lods
outsb
cmp
xor
mov
pop
outsb
jle
inc
scas
add
add
dec
sbb
roll
sbb
push
pop
imul
mov
jl
or
mov
jne
cli
fisubs
in
lcall
dec
je
movsl
and
lahf
les
or
jle
pop
push
packuswb
popa
mov
jmp
mov
cmp
add
sarl
and
iret
mov
jmp
xor
aas
fistpll
push
pop
das
jp
rcr
iret
and
outsb
dec
lods
add
sbb
and
mov
dec
sbb
jg
jl
iret
icebp
sub
push
mov
outsb
fdivs
xchg
nop
inc
xlat
pop
in
mov
mov
mov
pop
bound
dec
clc
mov
jp
push
in
mov
mov
nop
fdivl
jns
mov
and
push
les
or
dec
jg
inc
pop
stc
push
mov
dec
dec
enter
out
add
popa
jne
fwait
je
jae
jno
repnz
jne
mov
out
dec
push
mov
jno
fistpl
jnp
mov
aam
dec
and
pushf
or
jno
fs
inc
inc
mov
mov
mov
call
jle
movsl
sarb
push
nop
fildll
mov
xor
or
pop
outsl
and
into
iret
sub
rol
and
shlb
push
mov
adc
adc
insl
inc
dec
jns
dec
push
and
pop
or
jbe
sub
aam
jp
mov
add
test
xor
out
bound
pop
lret
mov
es
push
mov
inc
lds
gs
xchg
lcall
scas
cmpsb
pop
push
rolb
rol
sub
aam
push
jmp
sbb
xor
fs
sbb
cmpsl
rolb
add
cmpsb
and
cmp
sbb
mov
mov
rorl
into
nop
ja
fsubr
bound
ret
js
adc
fsubr
mov
shrl
popa
outsb
outsb
xchg
jmp
cmpsl
add
or
push
pop
repz
sbb
test
mov
cmpl
and
adc
xchg
ret
mov
inc
leave
test
jae
mov
cmc
inc
pop
inc
pop
pop
daa
outsb
iret
leave
clc
inc
mov
pop
shll
adc
ficompl
xor
into
push
shll
mov
xor
lds
push
jecxz
js
dec
jno
xor
lock
sbb
int3
fidivrs
popf
imul
in
jne
repnz
mov
adc
sub
stc
daa
out
push
xor
pop
dec
fsubs
int
cmovl
adc
dec
jbe
into
clc
push
jo
mov
inc
fmull
mov
inc
dec
jo
add
sbb
nop
sbb
jae
mov
mov
add
adc
outsl
xchg
mov
xchg
in
pop
insl
shr
mov
cmpsb
adc
pusha
sbb
rcrl
sbb
xchg
loop
adc
sbb
pop
out
inc
adc
inc
clc
lahf
les
pop
push
call
jno
push
mov
pop
jge
dec
shl
xor
inc
inc
sbb
negb
ljmp
xor
pop
fsubp
push
adc
xchg
xchg
sbb
jne
test
cmpsl
and
lea
cmp
jo
ret
ljmp
es
inc
xor
data16
aas
add
icebp
mov
cs
mov
jg
in
mov
scas
pop
test
in
fcomp
dec
cmp
inc
adcl
and
rcl
aad
outsb
dec
inc
aad
mov
jmp
sbb
call
lcall
push
outsb
jle
xchg
cmp
xchg
std
gs
dec
nop
pop
inc
adc
adc
js
scas
pop
mov
adc
pop
cltd
pop
imul
out
xor
repz
push
shrb
mov
sti
shlb
pop
jbe
or
sbb
subl
in
cmp
lahf
leave
xchg
jbe
sbb
cltd
xor
jmp
movsb
mov
xchg
pop
js
mov
fidivl
inc
das
cmp
xor
std
push
mov
ljmp
xor
xchg
aaa
jnp
xchg
jne
push
mov
inc
lods
fiaddl
dec
int3
ret
call
mov
inc
mov
push
addl
cli
xchg
gs
rolb
out
jg
push
push
ds
inc
ror
dec
cmp
push
pop
jbe
dec
les
sub
jno
std
in
ss
insb
pop
int
push
popa
fsubl
call
stc
fisubs
imul
xlat
mov
sub
das
xchg
mov
addr16
xchg
pop
arpl
pop
sahf
push
lahf
and
fcoml
imul
sub
insb
mov
sub
ficoml
and
les
cmc
inc
cmp
cmpsb
dec
sub
mov
popf
xor
popf
xchg
in
addr16
or
lret
test
xor
push
jl
sbb
les
xchg
sbb
das
xchg
fstpt
push
orb
outsl
into
and
test
cs
adc
xor
or
lock
and
mov
addr16
roll
arpl
jg
cs
push
ret
xor
or
jo
mov
xor
ret
cmp
push
jno
mov
mov
sub
pop
fs
pop
clc
push
jmp
mov
sub
adcb
dec
cltd
or
mov
rcr
fwait
movsl
cmpsl
fistpll
mov
or
jbe
mov
inc
jge
insb
mov
in
xor
in
loop
add
imul
xor
mov
dec
push
cmpsl
push
test
jbe
test
xor
imul
shlb
jnp
addr16
mov
pop
pop
xor
clc
xchg
outsb
jo
inc
ret
jne
dec
sub
pop
sub
sar
scas
mov
mov
push
out
inc
ljmp
sub
lahf
sbb
mov
ret
push
lods
sbb
xchg
mov
inc
test
mov
fs
fldt
and
incl
rorl
repnz
adc
fs
cmp
adc
ss
cmc
jg
stos
adc
stos
mov
mov
sbb
sbb
outsb
sub
ret
xchg
jle
int
jle
jo
adc
jecxz
movsl
imulb
ja
cld
lods
pop
add
lods
mov
push
xchg
clc
jle
in
adcl
push
insb
rorl
out
loopne
sub
sbb
dec
jnp
jge
addb
xchg
rdtsc
cmp
mov
sahf
add
int
cltd
les
pushf
sbb
inc
ljmp
inc
repnz
push
rcll
lahf
fwait
pop
sbb
mov
inc
pop
ss
out
mov
xlat
repnz
out
cmp
sub
mov
pop
xchg
into
dec
clc
nop
fbld
dec
aam
cmp
mov
jbe
cwtl
pop
popa
pop
sub
pop
jl
les
imul
pop
mov
roll
scas
sub
and
out
add
jle
pop
mov
imul
rorl
test
mov
aaa
sbb
xor
dec
mov
loopne
orb
lods
aaa
pop
jp
fcomip
xor
xor
mov
enter
mov
repnz
les
rorb
outsl
aaa
jae
nop
mov
and
dec
into
pop
test
push
test
popl
test
leave
fistpl
je
cmp
lret
pop
insb
cmp
pop
mov
inc
and
mov
inc
mul
and
mov
addl
cmp
push
inc
sbb
adc
popf
and
mov
xchg
dec
sub
stos
in
jle
add
lret
movsl
hlt
cmp
aas
mul
mov
repz
add
mov
sub
cmpsb
stos
cwtl
and
scas
pop
cmpsb
cmpsl
rorl
dec
lahf
push
call
and
or
lea
rolb
jno
out
xor
adc
mov
xchg
jl
lret
aaa
mov
fbld
insb
jbe
push
mov
mov
test
int3
leave
es
aaa
mov
call
stc
adc
and
adc
repnz
insb
test
xor
arpl
mov
cld
adc
dec
mov
out
fldenv
push
inc
or
jbe
fistpl
into
sbb
in
push
ss
add
sti
mov
loop
mov
out
mov
xor
push
mov
jecxz
sbb
inc
mov
xchg
xchg
aaa
out
sbb
loop
dec
addr16
jg
xchg
sub
fldl
test
mov
mov
cmp
stos
mov
mov
xchg
push
lods
dec
jnp
jb
mov
cmp
clc
dec
mov
and
lds
and
pop
sbb
pop
mov
xchg
xor
vpinsrw
jecxz
test
das
shll
and
add
sub
lock
jecxz
into
adc
sbb
cld
push
pop
add
inc
jae
push
iret
xor
xor
push
add
pop
push
sbbb
xchg
jg
inc
fstpl
insb
lcall
adc
sahf
jne
push
mov
int
stos
inc
popf
mov
pop
test
xor
jge
mov
movsb
mov
scas
jne
dec
cmp
jmp
rorl
cmp
aad
fisttpll
sub
js
stos
dec
push
push
lock
popa
dec
out
sub
pop
popf
xorb
jecxz
xchg
and
jecxz
or
das
lock
add
in
mov
mov
push
pop
xchg
stos
movsb
js
xor
xchg
out
jbe
sub
lods
lahf
loopne
jl
popa
push
iret
xor
add
mov
mov
test
mov
or
xchg
sbb
xcrypt-cbc
cmpsl
rcl
cmpsb
shrl
mov
xchg
dec
jo
xchg
decb
mov
mov
nop
adcb
adc
rcll
inc
cmp
jl
pop
jle
call
mov
fnstcw
mov
stc
and
shll
jo
inc
aam
test
mov
mov
and
push
ss
xchg
inc
cmpsb
sub
pop
sub
xlat
jg
or
leave
pop
mov
cltd
jg
call
lea
aad
sbb
or
testl
mov
adc
in
mov
mov
pop
jecxz
mov
repnz
add
add
lret
aaa
pop
mov
inc
outsb
add
dec
mov
movsl
pop
mov
push
fists
or
push
and
sbb
hlt
nop
fsub
mov
in
pop
rol
ljmp
aad
push
inc
jg
std
sbb
jbe
mov
jbe
pop
cld
out
enter
mov
subb
mov
aaa
roll
pop
aaa
pop
push
test
pop
fwait
lret
cmc
mov
add
pushf
popf
xor
imul
lret
aas
out
and
iret
jmp
loope
mov
push
adc
mov
inc
inc
into
es
stos
push
and
pop
aas
sbb
test
sahf
or
test
inc
popf
mov
or
lea
and
push
cld
push
mov
jecxz
sbbb
int
xchg
dec
dec
sahf
xor
cld
data16
outsl
gs
ljmp
mov
div
je
push
nop
sbb
mov
test
sarl
scas
xchg
jmp
xchg
or
cltd
jne
xchg
je
in
jb
nop
divl
int3
dec
aam
push
xor
or
mov
xor
xchg
iret
outsb
pop
mov
sub
xchg
add
shrb
sbb
inc
inc
insl
lock
dec
push
jo
fnstenv
cmc
xchg
dec
movsb
and
mov
add
sarl
aaa
int
xlat
in
popf
popa
adc
loopne
loop
inc
xlat
sub
push
adcb
adc
pop
pop
adc
popa
jnp
scas
cmp
testb
mov
sbb
lret
outsb
jecxz
out
cwtl
iret
mov
aad
push
and
mov
addb
int3
int3
mov
pop
addr16
or
ss
insl
aas
icebp
xor
mov
or
mov
movsl
test
aaa
movsb
inc
mov
lods
shrb
nop
and
mov
ret
mov
or
fisubrs
lcall
iret
xor
pop
mov
stos
sub
mov
and
cmp
mov
shll
inc
mov
sub
or
std
repnz
cmp
mov
add
stos
xchg
stc
and
and
jle
sbb
mov
pop
movsl
rclb
scas
das
aad
push
repnz
pop
movsl
sbb
xlat
cmp
in
in
hlt
pusha
cmp
jg
push
cmp
jg
and
mov
dec
in
pop
dec
jns
xchg
jo
jge
stos
mov
pop
jg
inc
jl
push
dec
mov
mov
jns
pop
negb
popa
notl
cmovs
ds
iret
and
push
in
push
cmp
lahf
stos
dec
or
jno
mov
jge
jmp
pop
lahf
faddl
iret
mov
pushf
xchg
clc
jg
fldenv
rcrl
and
inc
jg
pop
or
lods
dec
push
sbb
mov
mov
movsb
stc
sbb
aam
cmp
ds
aas
rcll
shl
adc
and
add
ds
mov
out
in
and
shr
sub
cmp
push
jo
popa
cld
cli
insl
mull
cmp
cmp
loop
sbb
aaa
in
add
fistpll
mov
cwtl
pop
imul
mov
icebp
out
jp
push
iret
jnp
xlat
and
outsb
mov
loop
adcb
lods
aaa
bound
aad
xchg
mov
inc
roll
popf
jnp
into
add
gs
jge
out
adc
cmp
js
pop
int
inc
mov
xchg
test
stc
mov
and
sti
pop
push
pop
in
push
dec
insb
lcall
int
andb
cmc
and
xor
dec
out
ret
aam
cltd
or
pop
xchg
fsubl
xor
fdivs
fcmovnu
add
xchg
cli
jmp
cld
mov
outsb
jl
sub
scas
jo
je
sub
pop
fwait
xor
icebp
fcmovb
xchg
in
sub
mov
ja
out
fcmovbe
lcall
mov
mov
sbbl
gs
fistpl
addr16
pop
sub
jl
cmp
push
xchg
xlat
test
ret
out
xor
sub
cwtl
mov
xor
loopne
aas
aad
mov
inc
sub
mov
push
or
fcmovbe
data16
stos
repnz
jp
xor
out
pop
add
push
les
mov
lds
outsl
call
pop
pop
loop
mov
pop
inc
mov
pushf
insl
iret
repnz
jnp
jno
pop
dec
mov
or
lret
xchg
cmp
xchg
cmp
sub
test
and
xchg
xchg
and
push
popa
roll
push
cli
inc
and
icebp
sbb
mov
push
push
pop
mov
insb
mov
pop
jno
sbb
dec
lret
adc
xor
fwait
push
cwtl
shll
stos
popf
xchg
shll
cli
mov
sahf
push
sahf
lock
shll
out
or
cmpl
das
or
pop
cli
mov
inc
sub
and
outsb
mov
push
fiaddl
dec
xor
push
clc
in
mov
data16
mov
int3
add
cltd
or
push
jle
insb
addr16
ret
ficoml
pushf
and
popa
jno
adc
shr
jbe
or
mov
and
xlat
in
rcrl
fisubrs
push
jl
inc
dec
inc
aaa
ja
fimull
mov
and
loopne
xchg
lret
pushf
cmp
inc
push
push
mov
movsb
cmp
inc
push
mov
jecxz
je
mov
push
bound
dec
jge
mov
xchg
aad
subl
and
mov
aaa
scas
fstp
cmpsl
lahf
dec
cmpsb
pop
in
cmp
inc
fistpll
cmp
scas
popf
push
jmp
mov
xchg
pop
shl
aas
pop
pushf
mov
lret
or
fsts
xchg
sti
pop
aas
pop
xor
push
sub
xchg
daa
add
sbb
loop
jmp
cmpl
js
mov
mov
cmp
ss
loop
jp
add
or
daa
int
aaa
leave
mov
lret
enter
add
mov
repz
inc
loope
push
and
push
lcall
ja
popa
inc
test
dec
adc
mov
sti
adc
lea
lods
mov
cmp
xchg
cld
negb
out
add
sub
cmpb
fcmovne
sbb
shrl
mov
jmp
test
sbb
dec
stc
and
cs
xor
clc
and
cmpsb
sbb
pop
mov
cmpsb
pusha
fwait
jmp
sbbl
fcmovu
in
enter
mov
addl
inc
jge
push
lahf
icebp
or
fwait
and
lret
stc
lock
fs
loope
jge
sahf
outsb
mov
lahf
repz
mov
mov
sub
dec
cmpsl
xchg
add
add
out
push
xor
sub
ds
out
and
out
movsb
xchg
imul
iret
sub
add
dec
mov
mov
xor
fdivs
dec
jno
loop
dec
cmp
clc
mov
icebp
imul
sbb
popa
mov
mov
push
mov
andl
popf
in
dec
pushf
adc
stc
cwtl
aaa
dec
or
enter
jns
sub
repnz
pop
insb
push
mov
outsb
sbb
dec
mov
cmp
cmc
cmc
sarl
ds
sahf
adc
dec
shll
ret
dec
aam
mov
mov
cmpsl
jp
mov
inc
roll
notb
sahf
sbb
and
push
and
dec
xor
and
or
shlb
test
push
test
xchg
mov
jbe
stos
jecxz
out
mov
out
mov
cmpb
jge
rcll
stos
sub
sub
arpl
dec
fisttps
cmp
stos
out
mov
sub
ss
aad
ret
add
sbb
jns
jp
pop
insb
cmpsb
jno
and
push
aas
push
dec
pushf
mov
repnz
adc
int
fsubrl
arpl
cs
jge
loop
call
pushf
out
cwtl
mov
xor
sarb
adc
cmp
xchg
pop
dec
jnp
dec
and
orb
cmp
pusha
dec
aad
inc
test
jmp
mov
lock
xchg
or
mov
sahf
push
cmpsb
push
add
jb
mov
fs
mov
or
pushf
mov
popf
adc
add
dec
xchg
jno
xchg
sub
mov
jo
fldt
cwtl
push
add
mov
pop
and
xchg
divl
movsb
popa
lock
inc
fnstenv
jae
xchg
cmp
fcomps
mov
addr16
es
mov
dec
xchg
xor
jo
rcr
icebp
inc
ret
pushf
jmp
rorb
pop
cmp
jnp
mov
test
adc
fs
push
repnz
nop
je
add
inc
out
push
sub
cmp
icebp
push
pop
xor
jp
das
in
aas
mov
pop
mov
sub
mov
push
je
dec
pop
js
daa
pop
dec
aam
inc
inc
int
sti
lods
mov
loop
stos
or
or
mov
cmp
bound
jecxz
mov
gs
pop
aam
or
mov
repnz
push
push
dec
xchg
xor
fistpl
stos
call
pop
jle
ret
adc
cmp
sbb
mov
mov
imul
push
aaa
push
xchg
arpl
ret
sub
and
ss
addr16
cmp
xchg
dec
xchg
movsl
push
mov
add
lods
push
inc
jl
sbb
aaa
jecxz
into
ret
data16
inc
repz
roll
jo
inc
fidivs
jne
inc
pop
out
sbb
mov
push
xor
imul
push
inc
fisubs
outsl
xor
xor
orl
pushf
out
stc
mov
lret
and
sarl
in
cmp
sbb
in
insl
pop
sub
xor
fnstsw
and
mov
getsec
in
sbbl
xchg
push
aas
cmpsl
or
dec
push
dec
xor
push
outsl
fsub
mov
aas
je
or
and
cli
pop
or
movsb
lods
frstor
popa
out
mov
fdivr
jecxz
shr
insb
push
adc
in
or
jmp
push
mov
mov
xor
xor
sub
jge
popa
sarl
cld
out
add
push
mov
outsb
int3
lcall
call
sbb
mov
out
jmp
mov
movsl
in
inc
cli
dec
add
fmuls
lea
push
pop
mov
shr
in
ficompl
xchg
stos
ret
fldl
gs
bound
dec
pusha
sub
jno
sub
and
mov
cmp
out
mov
clc
sbbl
pop
push
cwtl
iret
inc
int3
arpl
xor
es
lock
and
fsubrl
test
xchg
mov
mov
mov
mov
add
aad
loopne
sbb
inc
push
out
popf
ja
jmp
cmpsl
and
ss
iret
xor
push
push
iret
dec
loop
lahf
xchg
pop
icebp
jnp
push
jecxz
mov
pop
lds
out
jae
jl
in
sbb
xorl
cmp
sub
pushf
inc
cmpsb
js
and
movsl
shl
add
popf
push
imul
mov
xchg
loope
sub
test
jl
fsubl
xcrypt-cbc
cmpsl
xchg
in
inc
addl
sbb
pop
addr16
xorl
movsl
xchg
cltd
jg
aaa
cwtl
sbb
push
data16
into
xor
pop
aam
imul
loope
in
mov
or
mov
fldcw
xor
inc
cmp
loopne
xchg
repz
pusha
mov
push
test
icebp
gs
mov
mov
push
lods
push
orl
popa
add
sbb
sub
jp
mov
mov
cmp
dec
outsl
dec
insl
sub
cmpsb
jg
push
mov
and
mov
ficomps
or
fidivrs
pop
pop
addl
pushf
aam
cmp
stc
pop
aaa
dec
stc
add
dec
xor
cmp
in
pop
inc
and
xchg
mov
fsubs
lahf
or
or
int
mov
cltd
out
in
lret
fcom
sub
cmp
aam
add
or
sub
or
jno
mov
lahf
pop
ret
int
xchg
adc
push
or
aam
sbb
psubusb
mov
push
xchg
add
jp
rolb
lret
jae
nop
jne
add
inc
movsl
fildll
sub
mov
mov
frstor
inc
jg
mov
ja
or
das
xchg
inc
xor
pop
mov
rcll
jge
sbb
cmp
mov
lret
es
pop
dec
es
fucomp
dec
subb
sbbb
sub
adc
adc
push
xchg
insl
sbb
mov
sub
sub
and
xchg
data16
xchg
leave
sub
ja
xchg
fisubrs
dec
lds
fldl
push
test
sbbl
adc
loope
rcrl
in
ja
cmpsb
mov
add
pop
ds
ja
add
ja
or
icebp
jnp
loop
aad
inc
mov
or
imul
sahf
test
rorl
mov
imul
call
popa
imul
pop
lret
sub
movsl
push
pop
jp
xchg
dec
sub
push
or
sti
lret
adc
test
or
xor
adc
push
jmp
negb
pop
or
gs
shll
pop
fldl
mov
pop
mov
fcomip
mov
mov
into
jg
xchg
push
test
movsl
cs
fs
dec
and
pop
jmp
rorb
mov
scas
sbb
call
out
pop
rcrl
mov
jmp
faddp
inc
outsl
xchg
sbb
xchg
xchg
das
out
add
fwait
push
dec
jg
mov
pop
jb
cli
lahf
incl
add
jae
adc
push
mov
sbb
outsb
fildl
push
xor
test
mov
out
cs
sbb
push
mov
mov
inc
sbb
cmpsb
cmp
pop
jb
adc
push
jp
mov
lds
popa
dec
xchg
test
xor
filds
out
lods
jno
aad
faddp
insl
outsl
lcall
repz
cmp
fisubl
mov
fbld
or
xchg
scas
jl
stos
and
rcl
negl
icebp
inc
mov
cwtl
adc
sbb
bound
xor
ror
in
mov
ret
orb
leave
push
popa
push
aad
test
sub
jno
mov
imul
cwtl
jp
daa
loop
xchg
mov
mov
add
or
out
in
andl
call
test
aam
lea
clc
jl
lcall
push
das
or
jg
int
pusha
pop
xlat
or
add
mov
inc
mov
loopne
popa
xchg
test
test
scas
jmp
sbb
sarb
lea
sahf
testl
lret
push
imul
fwait
jns
arpl
adc
jnp
sbb
pop
pop
sbb
outsl
movsb
adc
scas
nop
pop
fcomp
inc
psrlq
adc
gs
stc
aad
mov
push
nop
inc
pop
xor
fsubs
push
add
sbb
mov
pop
push
test
insb
sub
imul
adc
ljmp
fld
les
inc
es
mov
ret
and
mov
xor
xchg
cld
scas
push
adc
lods
pusha
jl
js
jno
popf
mov
mov
xchg
jb
pop
lods
leave
jmp
cmp
fadds
jae
xor
mov
mov
cmp
jo
dec
daa
adc
hlt
movsb
cmp
and
adc
push
sub
xor
cwtl
fwait
xchg
sub
pop
arpl
adc
outsl
das
jns
jmp
stc
les
shll
stc
sub
cmpsl
push
shlb
leave
or
dec
insl
jo
or
fwait
xor
out
adc
xor
xor
out
xchg
cmc
sub
push
jp
mov
push
and
rclb
or
or
jns
call
xlat
lret
in
mov
aas
pop
into
sub
xchg
int3
nop
add
cmp
mov
cltd
int
dec
outsl
cli
mov
jp
mov
cmp
mov
sbb
sbb
repnz
pop
mov
in
pop
test
js
xor
das
data16
cmp
or
mov
inc
lret
test
cmpsl
sub
aaa
cli
inc
loope
push
mov
or
xlat
imul
cmpsl
cmp
addr16
or
iret
jae,pn
jle
fstpt
daa
and
sbbb
jecxz
cmp
mov
or
inc
fwait
repz
dec
push
push
push
push
ljmp
sbb
sub
push
dec
dec
leave
test
in
roll
in
xchg
sub
cmp
mov
mov
insl
mov
incl
sbb
mov
jo
mov
cld
cs
adc
cwtl
repz
xchg
add
sub
push
dec
pop
loopne
clc
call
jge
jno
divl
mov
dec
adc
xchg
inc
insb
dec
je
into
iret
orb
fists
sbb
data16
lret
fdivl
lcall
in
mov
or
aam
mov
in
push
push
push
test
pushf
xchg
mov
and
cld
sub
xor
sub
jecxz
out
dec
aad
popa
mov
mov
out
mov
sbb
mov
inc
gs
rcr
pop
cmpl
or
pop
inc
push
mov
push
je
ss
or
js
addr16
in
mov
popa
xor
and
push
cli
jbe
mov
inc
xchg
push
lcall
enter
out
aas
fildll
mov
cmp
sub
mov
xlat
xor
movsb
subl
les
sub
mov
dec
jp
mov
and
push
ljmp
ljmp
inc
inc
lods
aad
jb
in
addl
and
adc
mull
dec
mov
xchg
pop
jmp
out
shll
xchg
sbb
stc
cs
mov
in
xchg
jp
mov
subl
jecxz
sbb
xor
fidivrs
jbe
cmpsb
lahf
cmpsb
daa
int3
sbb
rorl
and
mov
leave
shrl
push
and
dec
push
mov
movb
xchg
mov
iret
jbe
scas
filds
push
lret
xchg
jl
xchg
lods
mov
das
mov
add
xchg
gs
jg
mov
cmp
dec
sarl
hlt
dec
icebp
cmc
lock
mov
adc
xor
iret
cli
xor
push
pushf
pusha
cli
daa
cmp
xor
popa
sbb
mov
gs
sub
cwtl
push
push
inc
jmp
dec
rorb
dec
add
sbb
or
decl
mov
jae
movsl
inc
push
ror
popa
rorl
or
testb
sub
lods
popa
out
insl
adc
js
outsb
ja
ljmp
cltd
add
inc
popa
sahf
fistpl
les
push
in
stos
or
lret
mov
stos
mov
fsubrp
and
into
pop
outsb
push
rcrb
xchg
dec
mov
inc
add
cmp
dec
ds
push
imul
push
cmpsl
leave
icebp
popf
icebp
mov
xchg
je
push
fdivl
fs
out
jb
outsl
adc
mov
jg
xor
cmp
xchg
lcall
adc
bound
jl
outsl
mov
mov
faddl
push
xor
dec
inc
or
repnz
dec
inc
push
mov
jmp
cmp
lea
inc
xchg
xchg
adc
add
cmp
sbb
sub
xchg
inc
les
xchg
cltd
xorl
pushf
les
stos
lods
cltd
push
subl
sub
fcmove
loopne
insb
cmp
lods
std
adc
mov
hlt
jl
adc
insl
out
mov
jae
push
jbe
and
or
lea
and
leave
xor
call
mov
scas
fcomps
scas
dec
test
arpl
lods
push
js
and
lret
call
fcompl
adc
std
leave
fdivs
push
int3
xchg
mov
je
lea
push
sbb
xchg
or
imulb
cwtl
add
push
sti
dec
xchg
mov
cs
xorl
sub
ret
icebp
or
cltd
dec
jecxz
push
out
dec
sub
lahf
xor
jno
pop
cmp
mov
xchg
and
cmpsl
adc
pop
and
jae
int3
push
xchg
push
js
sbb
daa
dec
or
andl
rcll
call
xchg
jne
loop
rcll
ss
and
mov
sti
mov
or
popl
mov
jb
out
add
push
push
pusha
gs
push
cmp
jbe
jmp
mov
outsl
test
pop
and
sbb
test
stos
xor
dec
pop
jg
inc
xchg
push
pop
insb
ror
fcmove
jbe
dec
movsb
ds
pop
ret
mov
xor
lret
push
imul
push
jbe
push
jge
jb
ja
adc
jo
jge
adc
out
cmp
rcrl
aam
jb
pusha
shrb
lods
fiadds
or
lods
add
lock
xchg
lods
mov
scas
pop
movsb
sbb
xorb
fcompl
cmp
jl
xor
push
xor
pop
sub
dec
xor
pop
xor
dec
mov
inc
sbb
nop
ss
ret
jle
lock
ljmp
and
mov
js
insl
addr16
std
adc
xorb
jo
stos
pop
mov
xchg
int3
inc
lods
iret
add
xor
jecxz
adc
xor
cmp
cbtw
mov
sbb
imul
push
sbb
pop
and
addl
inc
insl
out
mov
out
in
loope
outsl
lret
aad
test
adc
push
lods
add
or
add
jp
cmpsl
xor
fbstp
push
ss
dec
sub
inc
std
cwtl
loope
push
daa
adc
mov
jne
inc
test
mov
and
push
fidivl
jbe
cmp
lcall
imul
mov
jle
out
mov
imul
aad
push
mov
jbe
sbb
les
lods
fstl
mov
xchg
outsl
mov
push
stos
ja
pop
add
dec
call
mov
aad
mov
sarl
sbb
fstpt
outsb
stos
cmp
cmc
ficomps
sub
and
scas
sbb
out
mov
sub
insl
sub
xor
pop
fwait
cmp
imul
mov
fsubr
test
push
mov
adc
ror
sbb
clc
shl
jg
js
xlat
fcmove
cs
int3
loop
fbstp
lahf
cs
xor
mov
shrl
in
sub
and
xor
call
and
and
sahf
cld
xchg
sbbl
cs
sub
jno
inc
lds
and
stos
loopne
lds
ret
sub
data16
je
inc
fcom
jae
cs
jnp
xchg
lods
jb
mov
lcall
stc
cmp
imul
jmp
mov
pop
mov
into
mov
stos
int3
addr16
cmp
add
pop
loop
imul
inc
xchg
jno
int3
sbb
add
push
loope
sub
add
jae
cwtl
aad
in
mov
xor
les
leave
lds
shrb
mov
cmp
cmp
stc
push
push
mov
jl
pop
out
aam
scas
rorb
lret
enter
enter
mov
mov
add
dec
mov
pusha
or
aaa
mov
jo
divl
dec
aas
mov
push
clc
lock
aad
dec
sub
or
sub
sbb
or
leave
int3
loop
mov
mov
push
cmp
loopne
dec
push
xchg
arpl
mov
adc
xchg
pusha
jnp
jecxz
je
bound
cmpsb
fsubrs
inc
lods
out
data16
mov
in
scas
pop
sti
mov
sub
cmp
outsl
bound
sbb
mov
ja
mov
test
loope
mov
mov
addr16
popl
xor
push
ds
xor
pop
ret
mov
mov
js
loop
insb
adc
cmp
mov
sub
decb
mov
outsb
xor
cmp
jp
mov
sbb
psrld
fstps
cmpsl
ds
xor
cmp
add
clc
cwtl
icebp
sbb
push
sub
pop
cmpsb
jmp
pop
push
dec
stc
in
fstl
sti
adc
cmpsb
leave
or
outsl
ret
sub
ret
and
inc
add
iret
shl
loopne
test
aas
pop
mov
jo
lahf
xchg
movsl
pop
push
inc
mov
lods
pushf
scas
cmpsb
prefetch
cwtl
sbb
mov
aam
fisubl
shll
or
pop
ss
ja
cld
adc
xchg
int3
aaa
stos
iret
ja
sbb
lret
jle
cmp
ss
cmpsb
push
or
adc
adc
xchg
jns
and
cmp
pop
addb
test
sub
xchg
iret
movsl
inc
lahf
dec
addr16
mov
sti
mov
js
js
jmp
testb
addr16
adc
add
jmp
adcb
loope
and
adc
mov
test
xor
dec
inc
mov
lret
xor
stos
ret
jno
jnp
xor
pop
push
lea
lcall
mov
inc
incl
dec
add
roll
js
add
fdivp
add
js
push
insb
xor
es
or
outsl
test
stc
pop
xlat
xchg
out
lods
dec
mov
mov
pop
xchg
sub
dec
scas
sbb
ret
xorl
inc
inc
shl
enter
in
clc
sahf
popfw
addl
lods
sub
adc
add
ret
xchg
lds
stc
pop
mov
sbb
push
ret
push
vmovaps
xor
add
test
mov
sub
into
es
pop
and
leave
xor
push
fldenv
jmp
rcrb
stos
repnz
mov
dec
loope
ret
stos
popf
pop
aam
clc
mov
push
mov
jo
pop
xchg
push
lret
mov
outsl
adc
jmp
lret
into
inc
cmpsl
and
cwtl
inc
in
mov
enter
ret
shrb
mov
mov
mov
ljmp
sbb
pushf
out
add
fisttpl
lock
popa
mov
sbb
imul
mov
add
lcall
cmp
pop
and
push
jns
inc
lret
mov
iret
cmp
frstor
cli
adc
push
aaa
pop
cs
cmp
xchg
mov
scas
fisubs
push
out
pop
add
jg
bt
xchg
movsb
xor
jecxz
test
mov
jnp
add
lret
fidivs
add
sbbb
repz
clc
popf
lcall
fdivr
mov
jne
cwtl
inc
push
mov
loop
push
in
add
jb
movsl
lock
or
mov
or
outsb
aaa
sub
jl
inc
das
add
ret
pop
pusha
stos
es
mov
mov
xchg
add
sub
call
xor
mov
jmp
int3
scas
daa
push
xlat
dec
nop
pusha
mov
mov
mov
mov
outsb
mov
fs
out
and
mov
idiv
hlt
xchg
adc
and
popa
sub
add
push
mov
je
repz
mov
jmp
push
iret
sub
xor
inc
mov
fstps
jnp
shl
fwait
test
nop
sti
adc
cmpsl
mov
ja
repz
ja
popf
adc
jmp
inc
dec
in
mov
jns
repz
pop
leave
jb
in
icebp
pop
jg
jno
push
cmp
test
loop
cmp
out
xchg
pop
imul
pop
mov
test
xlat
aam
js
dec
xchg
ljmp
rcrb
push
lret
ss
sub
and
xor
sti
nop
test
adc
add
xchg
scas
iret
mov
pop
in
aas
fldz
call
imul
inc
push
fisttpl
sub
dec
inc
lret
lret
loope
inc
mov
push
sbb
xchg
sbb
mov
popf
and
xor
idivl
shr
cli
jmp
add
add
clc
test
xchg
fists
lret
loopne
mov
fstps
ret
cmpsb
xlat
inc
in
cmp
push
pop
jb
bound
js
cmp
cld
sub
dec
addr16
push
daa
and
ja
rolb
rcr
data16
ss
xchg
ret
into
xchg
sbb
push
and
and
jo
test
mov
xchg
mov
movsb
enter
jp
push
cmp
dec
lds
aam
roll
xchg
stos
popf
inc
nop
ja
lods
dec
mov
mov
cmp
loope
mov
fiadds
ret
loopne
bound
sub
jp
mov
mulb
mov
cltd
pusha
dec
jae
loopne
sbb
lret
xor
test
cli
shrl
mov
das
cltd
mov
out
jbe
repnz
lock
xor
sahf
mov
xchg
into
cmp
jmp
enter
xchg
testb
mov
xor
loope
mov
notl
or
dec
or
push
xchg
leave
fsts
pusha
out
mov
psubusb
stc
faddl
add
mov
cld
test
call
xor
imull
int
popf
xchg
cmc
mov
aaa
mov
cmc
xor
sarb
jo
ret
cmp
fistl
push
cltd
maskmovq
idivl
loop
jecxz
xlat
cltd
push
xchg
jae
pop
popf
enter
movsb
dec
scas
sbb
jbe
stc
push
fwait
or
sub
dec
sbb
pusha
fprem
addb
hlt
xchg
push
pop
inc
call
in
out
std
call
fcomip
sti
xchg
pop
in
test
cltd
cmp
pop
and
mov
sub
mov
call
fs
and
jecxz
gs
adc
mov
pop
adc
mov
aas
pop
sbb
xlat
xor
out
xchg
push
pop
cmc
enter
push
shlb
gs
pushf
subb
jo
and
shll
cmpsb
fisttps
xor
and
mov
inc
popa
roll
mov
sbb
stos
pop
icebp
flds
cmp
dec
xchg
push
out
mov
pop
mov
testb
in
cwtl
adc
adc
or
jle
int3
lods
and
in
add
push
mov
ljmp
ja
shll
add
lahf
rorb
mov
icebp
adc
dec
mov
adc
mov
sbb
nop
stos
sti
divb
repnz
addb
orb
xor
cmpsb
mov
fcmovnb
xor
fisubl
mov
arpl
dec
mov
sbb
adc
loopne
cmp
inc
pop
jge
sbb
or
fistpl
out
mov
out
push
xchg
sub
sub
jbe
in
popf
sbb
mov
push
jnp
loop
jnp
addb
adc
push
mov
iret
aas
dec
cmc
sbb
mov
imul
sahf
fs
sahf
fsubr
inc
lods
push
cmpsl
sub
addr16
mov
mov
mov
xchg
inc
or
push
test
data16
dec
dec
stos
movsl
shrl
sub
xchg
mov
push
mov
lret
nop
sub
hlt
pop
cmp
shrl
adc
pop
cli
lretw
orb
call
les
adc
sub
or
das
mov
repz
mov
jnp
int3
stc
andl
les
andl
mov
push
sbb
pop
fstpl
sahf
mov
jns
xor
les
lods
jl
fldt
insb
jb
mov
pop
adc
es
or
fwait
jecxz
pop
push
fnstsw
pop
fldt
mov
push
aam
mov
sbb
in
xor
jg
ljmp
cmp
or
adc
ja
arpl
aas
addr16
gs
popf
mov
adc
mov
jo
ret
dec
mov
lcall
fdivrl
mov
inc
xchg
lods
jmp
fstps
jne
xchg
mov
fnstsw
mov
pop
lahf
dec
bound
inc
movsl
test
pop
inc
icebp
and
ret
fnsave
into
xchg
decl
cmp
sbb
cmc
fs
and
out
mov
gs
outsl
pusha
test
mov
fistps
adc
jecxz
dec
dec
mov
fdivp
icebp
dec
add
mov
cmc
adc
sbbb
clc
pushf
dec
popa
add
lods
dec
push
mov
roll
push
or
movsb
xchg
or
ret
scas
popf
jo
lods
lea
mov
mov
fidivl
lret
sbb
jp
xor
je
dec
xchg
test
adc
inc
int3
jnp
adc
cld
es
ja
and
shl
into
lea
clc
rorb
dec
cltd
lods
mov
jno
push
jle
sbb
inc
stos
orl
mov
sub
push
popf
or
sti
jno
jle
fisttpl
jp
aas
and
fwait
pop
mov
enter
cld
jb
ret
hlt
movsl
fs
cmp
icebp
adc
pop
lcall
iret
and
push
jp
jge
mov
movsl
mov
and
cmp
adc
push
mov
sub
mov
in
add
loop
and
push
mov
mov
mov
outsb
xchg
adc
mov
cmp
cld
or
push
outsl
xchg
xchg
lods
arpl
stc
fs
mov
inc
push
das
ja
jecxz
add
cltd
fildl
sub
cs
rcr
aas
pop
and
insl
stos
xlat
xor
xor
xor
outsb
add
lcall
jno
int3
aam
mov
mov
mov
xchg
stc
jb
add
psubb
mov
arpl
sub
cmp
pop
add
push
das
jmp
imul
repnz
loope
popf
mov
sub
and
shll
sub
insl
cmc
add
and
push
pop
pop
adc
add
dec
insb
push
jecxz
fsubs
packsswb
rclb
sbb
or
pop
aam
mov
xchg
in
inc
jbe
mov
push
or
mov
cwtl
cld
lock
jg
jmp
movsl
cmpsl
pusha
sub
pop
mov
gs
mov
in
mov
cld
sub
insb
mov
leave
xchg
jbe
insb
lcall
sbb
int
call
sub
stos
inc
jg
xchg
inc
iret
and
xchg
lock
xlat
ret
pop
loopne
in
fucomi
inc
push
adc
aas
inc
aam
jnp
inc
or
xchg
outsl
ss
idivl
push
dec
mov
sbb
cmp
xchg
xchg
fcoms
ds
push
add
out
or
adc
jno
add
fmul
jbe
ljmp
cmp
cmp
lods
xor
sbb
rcrl
adc
add
sub
out
bound
xchg
movsl
sub
loop
in
out
mov
fidivs
in
subl
test
lods
mov
dec
dec
adc
sar
cwtl
adc
adc
mov
or
test
cmc
ja
out
add
stos
addr16
and
lcall
pushf
outsb
add
mov
push
in
inc
je
fwait
or
fstpt
mov
inc
nop
inc
repnz
pusha
fidivrs
shrb
xorl
rorb
dec
or
hlt
cmp
fstpl
inc
push
sub
loope
cmc
iret
cmp
in
and
in
xchg
std
dec
inc
out
daa
ds
jl
pop
scas
cwtl
inc
ljmp
shll
cmp
mov
xor
jmp
lods
test
lods
fs
sbb
sbb
icebp
int3
lret
scas
jbe
shlb
cmp
xorl
cmp
sbb
pusha
cli
inc
mov
adcl
pop
push
rorl
icebp
and
xor
pop
sub
push
addr16
adc
add
insb
xchg
xchg
int
lret
testb
mov
aam
sbb
pusha
xchg
in
mov
rcll
cmpsl
sahf
add
add
inc
and
inc
icebp
sbb
arpl
mov
in
mov
or
and
fdivrl
xchg
loopne
ja
cmp
mov
fistps
and
mov
adc
and
xlat
jecxz
cmp
das
xor
pxor
in
pop
push
div
loope
jecxz
xchg
into
ret
push
dec
stos
in
rcrl
lea
mov
ljmp
pop
adc
shlb
push
mov
add
frstor
adcb
mov
mov
fwait
mov
addl
js
mov
mov
sahf
push
jno
lods
xor
adcl
mov
dec
sub
xor
jns
and
cmpsl
cwtl
and
js
bound
mov
std
pop
pop
jge
adc
outsb
push
mov
in
push
dec
and
aad
popa
inc
jge
outsl
mov
jge
and
filds
insl
andl
sbb
dec
xchg
mov
cli
jecxz
int3
stos
jg
xchg
adc
or
adc
mov
sbbb
sbb
cmpsl
test
in
push
cmp
lahf
call
divl
into
jmp
inc
pop
xor
add
ds
jbe
shr
or
movsl
or
das
insb
enter
outsb
mov
enter
clc
iret
jns
movsl
ffreep
insb
je
mov
loopne
lea
fdivl
mov
in
pop
mov
or
cld
fwait
dec
mov
mov
orb
out
mov
inc
sbb
je
call
movsb
jl
lahf
das
lcall
or
orl
add
iret
int3
inc
aas
test
orb
add
jg
jg
xor
nop
ds
es
mov
inc
mov
push
jge
cmp
pop
lods
cli
ret
pop
cwtl
testb
xchg
cwtl
mov
push
sub
aad
mov
jge
sub
shll
fwait
sub
fidivl
push
cmpsl
inc
xchg
fcomps
mov
idiv
add
dec
add
push
sahf
mov
jle
ss
jl
gs
dec
lret
push
std
mov
loopne
out
xor
xor
js
lcall
test
cmc
test
mov
iret
jmp
dec
push
pop
jl
push
xchg
mov
mov
jle
int3
dec
push
lret
push
jmp
adc
sbb
mov
out
mov
dec
jbe
xchg
dec
add
and
lods
cld
cltd
or
and
sub
fidivrs
dec
aaa
add
notl
clc
outsb
inc
fstpt
les
mov
pop
cld
push
adc
push
fcomip
push
imul
mov
fcomps
xchg
mov
or
dec
fistl
cmpsb
mov
pop
push
sub
xchg
xchg
cmp
lods
adc
stos
mov
mov
xorb
dec
mov
je
imul
add
sub
fstpt
mov
insl
clc
lret
xchg
addr16
mov
mov
push
cmp
pop
jno
adc
jp
inc
lds
dec
loop
out
or
sahf
push
mov
xchg
das
test
out
pop
adc
and
aaa
xchg
test
out
cmp
or
xchg
andl
int
add
ds
shl
arpl
and
out
nop
mov
scas
addb
outsl
test
loop
int
test
adc
jns
mov
cmp
push
jle
inc
sub
rcl
mov
pop
mov
call
and
push
out
xor
adc
icebp
stc
jns
sahf
inc
pop
cld
xor
or
mov
xchg
jle
fcoml
xchg
data16
popf
fbld
dec
pop
lea
ljmp
ret
clc
loopne
outsb
sub
aam
jo
dec
pusha
loope
inc
and
or
in
jle
xchg
jo
pop
cltd
outsl
pushf
jp
xchg
insl
ds
fucom
out
push
cmp
xchg
imul
mov
xor
rcr
pop
repnz
push
and
inc
test
jecxz
ficoml
jmp
xchg
xor
push
mov
testl
lret
out
jns
inc
xchg
cwtl
sub
lret
mov
popl
bound
aas
adc
loope
mov
imul
pushf
lret
inc
jmp
dec
add
int3
outsl
jge
cmp
divl
andb
xchg
xchg
or
pop
fistl
or
sbb
je
cs
dec
out
ret
icebp
jae
push
sub
and
mov
repnz
mov
fildl
jns
pop
push
or
dec
rcrl
jnp
jp
add
mov
inc
mov
or
pop
or
pushf
rcrl
mov
and
jnp
rcrb
add
pop
lods
ljmp
pushf
adc
sbb
and
add
inc
jbe
cmc
inc
mov
adc
mov
jge
rcrb
lret
and
in
fidivrs
mov
xchg
dec
call
outsl
pop
jle
dec
dec
xchg
mov
sub
cmc
inc
and
push
cmp
adc
loopne
push
outsb
fmuls
incl
push
xchg
cmp
mov
xor
sub
shrb
cmp
adc
add
lret
mov
pop
add
nop
fimull
aam
fisubs
stos
or
or
xchg
loopne
lods
mov
stc
rorl
lods
nop
jg
fmul
and
cmp
cwtl
mov
xor
jb
repz
outsl
test
mov
mov
jl
lock
jl
sarl
pusha
xor
sbb
push
aas
pop
mov
cmp
adc
imul
aam
push
jle
jg
cmp
jp
xchg
std
jne
cs
lahf
enter
dec
cmc
dec
popa
cmpsl
fimuls
je
push
ja
shrl
inc
vmaxsd
in
sub
inc
fimull
punpckldq
shl
pop
inc
or
aam
shlb
jnp
xchg
addb
fs
fistpll
aam
inc
out
adc
ja
cmpsb
pushw
outsl
fcmovb
mov
jns
jns
inc
adc
loope
scas
xor
mov
arpl
sub
test
ss
adc
lret
outsb
cmp
jns
out
and
xchg
data16
les
inc
sub
fnsave
jp
push
adc
hlt
mov
dec
hlt
mov
pushf
pop
pop
jg
fstps
js
add
jg
dec
inc
push
dec
into
sahf
adc
push
outsb
bound
test
jl
cmc
dec
inc
es
pop
aam
xor
add
out
ret
and
xorb
pusha
jmp
cli
negb
lcall
in
pop
shl
and
cmpsl
sbb
stos
hlt
push
movsl
push
int3
add
std
xor
out
mov
fwait
cltd
in
pushf
inc
jge
jo
jb
iret
push
pop
inc
push
xchg
cmp
cmp
xchg
jnp
test
mov
and
loope
add
cld
cmp
out
lock
inc
mov
lret
sub
sbb
shlb
testb
data16
fists
or
pop
or
mov
pushf
inc
out
in
dec
mov
mov
cmp
mov
mov
daa
mov
pop
nop
jae
jo
rcl
and
int
xor
jge
xlat
cmp
sbbb
cltd
xorl
xchg
jle
orl
push
dec
rcrb
jecxz
mulb
aaa
jo
sub
outsb
push
pop
add
push
out
add
mov
lret
clc
or
jmp
dec
adc
or
int3
lock
cltd
push
and
xor
push
fwait
dec
push
mov
mov
xor
cmpsb
clc
lock
cwtl
mov
inc
dec
lods
mov
cmp
test
aad
je
ss
jnp
lcall
mov
enter
xchg
or
push
dec
xchg
inc
loope
scas
xchg
imul
out
add
sub
int
cwtl
fnsave
inc
pushf
loope
inc
xchg
cmp
dec
jmp
call
mov
adc
push
jnp
jnp
cwtl
push
cld
ljmp
push
adcb
icebp
jnp
adc
movl
sbb
mov
enter
xchg
loopne
xor
jbe
or
movsl
add
je
movsb
arpl
scas
jae
outsb
js
nop
xor
xor
pop
xor
or
mov
jle
imul
cmovns
sbb
and
sbb
ja
push
lods
mov
js
xor
loop
mov
dec
leave
mov
lods
sti
adc
out
mov
mov
cmp
push
inc
mov
pop
sbb
sub
loopne
pop
xor
jle
sahf
dec
aas
jae
loopne
stos
pusha
hlt
rcl
int
mov
adc
adc
push
sbb
daa
lahf
ja
shlb
data16
xchg
mov
dec
ljmp
into
inc
xlat
or
inc
fdivs
inc
ja
push
pop
pop
pop
std
ljmp
mov
fwait
cmp
shl
sub
mov
add
insb
negl
and
mov
adc
mov
and
xchg
jb
mov
sbbl
xor
mov
cmp
or
xor
cmpsb
and
in
movsb
sbb
pop
pop
addb
sbb
cmp
mov
inc
leave
cli
jmp
jp
shlb
dec
popf
std
insl
and
pushf
mov
sbb
scas
ret
inc
arpl
and
push
inc
xlat
lea
fsubrs
push
and
js
adc
enter
inc
shrb
cmp
arpl
insl
push
and
out
rcrb
out
fwait
mov
adc
mov
mov
adc
loop
call
push
lds
push
sahf
xor
mov
add
pop
jnp
in
rclb
sarb
sbb
arpl
pop
xchg
in
and
adc
loopne
ficoms
xchg
stos
sti
mov
pop
mov
les
mov
sbb
mov
repnz
repz
lret
ds
xchg
es
push
xlat
jo
cltd
repnz
lea
adc
bound
adc
jge
push
dec
push
push
in
shrb
call
xor
adc
inc
cmp
jnp
es
sarb
and
add
int3
insl
call
cmp
and
and
inc
popa
inc
jecxz
mov
pop
dec
scas
lret
dec
push
xor
clc
cmc
mov
xchg
lahf
clc
aad
shrb
jmp
les
dec
popf
popf
mov
jmp
inc
out
cmpsb
jp
cmpb
movsb
imul
pop
xchg
or
fsts
mov
cs
mov
addr16
push
mov
test
js
gs
adc
fmul
jb
das
push
insl
add
call
xchg
std
xor
sub
cmp
ljmp
and
out
mov
mov
jp
or
sar
pop
inc
lahf
rclb
aas
sbb
mov
sub
sub
and
aad
out
add
scas
rorl
scas
jle
mov
push
jg
xchg
iret
xor
in
cmp
loope
xchg
outsb
push
lds
mov
and
jmp
lods
xor
jp
xchg
adc
stc
push
pushw
test
sti
or
inc
popa
and
lods
aas
imul
or
mov
test
jp
push
and
subb
lahf
test
mov
fldenv
jo
adc
loopne
movsb
inc
pop
xor
mov
mov
pop
pop
pop
imul
iret
cmpsb
sbb
test
push
push
in
fadds
inc
in
add
xchg
mov
pusha
data16
arpl
dec
lcall
or
movl
lret
push
xchg
mov
mov
sub
leave
mov
sbb
std
gs
pushf
dec
sub
xchg
sub
cmp
sbb
add
mov
cmp
pushf
test
sub
and
pop
ret
inc
int3
push
notb
inc
pop
shrb
fimull
and
fs
xchg
test
pop
jle
cmp
sahf
fmuls
sbb
ljmp
mov
nop
add
xchg
push
ficompl
adc
aad
push
adc
call
loopne
sbb
cmp
lcall
stc
mov
movsl
and
in
ret
out
lds
cmp
mov
sbb
dec
pop
das
scas
adc
daa
icebp
pop
add
stc
iret
mov
xor
scas
or
cmp
xchg
pop
dec
mov
push
and
pop
push
mov
mov
mov
xor
push
outsl
shlb
pushf
sub
test
push
cmp
es
bound
push
insl
out
xor
add
sbb
jp
push
push
dec
popa
fsubrs
insl
sbb
cli
xchg
dec
and
push
loop
sarl
popf
mov
loopne
sti
insl
jl
movsl
dec
lods
loop
mov
in
out
nop
adc
or
fiadds
xor
adc
xchg
int3
and
dec
mov
mov
xchg
rcrl
cwtl
imul
js
and
jmp
xchg
je
outsl
ds
push
mov
and
mov
les
out
xor
lahf
lret
andb
test
in
sub
loop
repnz
cmpsl
pop
lock
xsha1
cmpsb
dec
das
fcmovnb
loopne
cmpsl
icebp
and
leave
in
ds
push
mov
inc
pop
mov
xor
dec
mov
sub
addb
jb
lahf
pusha
inc
xor
jmp
mov
mov
pusha
adc
into
fists
dec
jbe
inc
in
add
fdivs
fwait
xor
popa
lret
ffreep
fidivs
mov
pop
gs
mov
sbbb
add
insl
into
xchg
xchg
mov
in
push
xlat
cmpsl
mov
or
les
popf
and
mov
mov
inc
pop
jbe
ja
out
cmp
movsb
or
push
jne
inc
fs
decl
ds
ljmp
inc
pusha
scas
shrl
cmp
xor
subl
stos
pop
sub
in
inc
sti
add
int
sub
stc
xchg
add
insl
sub
out
pop
add
movsl
inc
test
movsl
jne
push
mov
or
lret
sub
inc
sub
repnz
push
lods
xchg
loopne
out
inc
dec
jp
hlt
cmc
mov
push
pusha
push
mov
cmc
shr
jbe
pushf
mov
repnz
xchg
out
mov
mov
cmpsl
pop
mov
cwtl
dec
cwtl
sub
sbb
or
mov
fcoml
lods
mov
sbb
stos
jne
std
fbstp
inc
xorl
imulb
cmpsb
bound
pushf
mov
or
ficoms
mov
ljmp
cld
ja
or
out
aaa
mov
insl
es
pop
loopne
ret
shld
jg
or
stc
adc
lods
jns
add
pop
dec
mov
mov
neg
iret
int3
sub
add
jg
hlt
adcl
mov
adc
fnstsw
mov
xor
outsb
stc
fwait
sbb
jecxz
jo
daa
or
lret
or
push
call
scas
pop
mov
std
in
je
push
mov
dec
out
popa
clc
je
stc
xchg
lods
enter
push
push
adc
dec
sbb
xlat
fdivrs
jl
xchg
xor
add
jo
faddl
subb
push
popf
pop
fwait
jg
clc
ljmp
std
mov
cld
rcr
jl
cmpsl
iret
test
out
jecxz
lret
hlt
jp
sub
fildl
xchg
fcoml
jge
sub
fwait
or
xchg
mov
in
push
lods
dec
or
jnp
lahf
andb
loopne
jne
xlat
stos
jbe
cmp
push
aam
fstpl
mov
mov
dec
fsts
mov
sbb
mov
das
xchg
mov
dec
jo
push
mov
int
repz
xor
xorb
js
js
mov
mov
jb
sub
dec
mov
stos
xor
pop
jns
cmc
lcall
push
lret
out
out
jno
or
outsl
insl
movb
mov
orb
loope
int3
rcll
test
dec
mov
cs
and
fisttpl
cmp
hlt
jo
adc
xchg
mov
cmp
out
cmp
leave
push
inc
out
mov
jecxz
xor
xchg
push
mov
mov
jb
sti
inc
dec
pop
cmp
xor
ja
insb
xlat
and
icebp
mov
xor
int3
insl
imul
stos
js
mov
jo
fstl
xchg
cmc
push
lods
mov
cli
mov
jmp
sbb
jo
and
or
addb
ret
adc
repnz
orl
inc
shl
add
mov
or
sbb
sub
daa
mov
cmpl
insb
insb
addr16
dec
fiadds
stos
call
or
repnz
inc
or
mov
aad
cmp
xlat
cmp
das
stos
aam
inc
stos
test
aaa
mov
and
icebp
jl
push
test
or
pop
int
lds
cmpl
push
js
movsb
xor
in
xor
pop
out
pop
les
cmp
fadds
data16
shr
mov
scas
mov
lea
mov
cmpsb
int
push
push
jl
arpl
and
scas
sbb
adc
push
jmp
in
xbegin
movsl
mov
in
movsl
aad
rep
pop
or
mov
cwtl
or
into
dec
popf
mov
sbb
add
test
push
out
mov
cwtl
outsl
icebp
sbb
jbe
lods
fmull
fwait
pop
pop
bound
loop
mov
mov
xor
or
fisubl
cmp
imul
or
jno
xlat
ret
lcall
mov
pop
mov
pop
test
lahf
int3
sub
mov
and
or
loope
insl
cs
movsb
outsb
adc
pop
rcpps
popf
or
sub
enter
testl
test
or
or
mov
testb
test
xchg
dec
or
jbe
mov
ror
mov
inc
mov
fmul
shrl
xor
add
xor
icebp
mov
or
test
out
cmpsb
sahf
xchg
or
sti
nop
imul
int
jae
filds
push
loope
cmp
mov
sti
mov
cwtl
pop
sarl
mov
push
add
inc
bound
pushf
int3
call
dec
mov
xor
movsb
mov
jl
mov
push
lret
and
aam
ret
add
outsb
sbb
das
inc
xor
aam
neg
aad
bound
push
clc
cmpsl
pop
lods
sbb
or
sub
jecxz
cwtl
pop
xor
or
sbb
push
inc
xchg
add
jno
jle
popa
in
cmp
xor
cs
test
or
jg
or
sub
mov
jne
hlt
adcl
pop
adcl
jge
cmp
push
jmp
lods
insl
in
ss
mov
xchg
xchg
add
inc
dec
cmp
jae
jmp
and
pop
adc
mov
and
cltd
cmove
fiaddl
push
push
xchg
imul
mov
pusha
add
push
ja
mov
fstl
paddw
mov
int3
mov
addb
nop
test
pop
push
cmp
inc
jbe
test
mov
sbb
in
jle
and
out
lds
pop
inc
push
neg
inc
inc
jnp
adc
cld
arpl
imul
jno
clc
jno
movsb
sbb
and
outsb
mov
ret
mov
mov
aaa
cmp
loop
xchg
dec
jbe
jmp
adc
rcr
inc
adcl
jg
xor
gs
ror
inc
int3
scas
ror
daa
xor
dec
cmc
cmp
add
clc
movsl
and
fwait
cmp
push
lahf
fbld
push
sbb
mov
xlat
das
pushf
scas
lahf
and
mov
mov
leave
add
out
push
or
fs
dec
fisttpll
push
outsb
and
dec
pop
adc
in
fst
add
jns
out
clc
xchg
adc
mov
movl
adc
cmp
pop
mov
mov
popf
jle
aad
xchg
lret
dec
lcall
mov
push
jne
out
xchg
sub
xor
mov
pushf
loop
cmp
push
jle
adc
cld
inc
ror
pop
ljmp
add
cmp
popa
inc
mov
test
cwtl
fnstsw
popf
inc
cwtl
repnz
cmp
ja
mov
inc
lret
cmp
mov
lea
int
sub
mov
push
inc
add
sbb
jnp
jnp
push
pop
enter
inc
add
jo
push
push
into
cmp
mov
int
cmp
jns
jg
aad
pop
mov
mov
pop
shlb
std
leave
cmpsb
xor
pushf
pop
pop
stos
inc
mov
and
push
jno
stos
or
jmp
sub
lahf
jl
outsb
dec
stc
in
xchg
pop
mulb
mov
sub
out
jns
jg
lods
jmp
xor
daa
repnz
xor
inc
xor
jge
fidivrs
sbb
mov
and
pop
out
iret
cmp
sub
lahf
adc
push
xorl
xor
pop
loope
ror
push
lock
and
js
out
push
cmpl
add
dec
mov
push
repnz
int3
nop
call
adc
mov
les
sti
push
sub
xor
sub
add
and
adc
loop
jbe
sub
mov
dec
xchg
imul
std
lahf
fwait
test
add
jno
push
shll
inc
mov
leave
arpl
sti
pop
rep
shll
test
mov
stos
test
lcall
cmp
inc
ss
push
push
xchg
out
dec
jns
jb
dec
mov
xlat
int
adc
pushf
cmp
jg
sub
imul
imul
or
jge
sub
mov
mov
cmp
ss
mov
icebp
pusha
jb
fdiv
jnp
mov
mov
mov
lahf
xchg
je
std
roll
or
sub
cmp
data16
repnz
lcall
cmova
push
add
sub
ds
jge
decb
xor
movsl
mov
xchg
mov
imul
insl
xor
mov
mov
je
fwait
cmp
clc
in
nop
pop
push
mov
repz
insb
mov
loope
test
cli
std
dec
sub
out
fistpl
xor
xor
mov
xchg
cmc
cmpsb
negb
dec
loope
imul
popf
fldt
dec
adc
xchg
es
cmp
fs
and
mov
rolb
sbb
rcl
sub
enter
outsl
aas
dec
and
dec
aam
sbb
divl
push
repnz
lods
xchg
cmpsl
add
stos
dec
adc
nop
jne
leave
stos
push
cmc
icebp
push
rorl
jp
cmp
cld
pushf
lds
dec
adcb
popa
test
lods
or
adc
mov
adcl
pop
stos
or
lods
jne
push
push
add
into
and
xorl
andl
push
aas
lahf
mov
mov
scas
cmp
lods
outsb
push
mov
or
imul
scas
test
sbb
cmpsb
dec
jmp
and
jmp
xor
or
push
cld
mov
addb
sbb
xor
jno
jnp
cld
cmpsb
iret
addr16
mov
pushf
mov
push
les
pop
pop
push
mov
xchg
ja
insb
jmp
fs
aaa
loope
loopne
pop
stos
xor
movsl
sub
cmp
dec
sub
mov
add
lret
ret
fstl
es
rclb
mov
push
imul
ljmp
mov
xchg
add
or
push
in
cltd
les
stc
dec
idivb
aas
idivl
movsb
rorl
mov
in
push
je
cmp
mov
data16
and
add
test
dec
dec
in
mov
dec
jmp
stc
pop
inc
test
aad
cmpsb
adc
pop
xor
fwait
test
jne
cmp
jecxz
jecxz
cli
imul
mov
insb
clc
movsb
loop
and
cmp
daa
xor
sbb
or
push
push
repz
in
jo
into
jecxz
sub
push
inc
sbb
xchg
push
faddl
imul
cmp
addb
ficoms
pop
or
jns
or
mov
fs
dec
out
loope
stos
mov
add
psrld
inc
cmp
fmul
insb
mov
test
aad
or
dec
cmp
and
imul
fs
cmp
mov
jp
das
dec
cmp
sbb
push
pusha
out
add
call
or
mov
call
lahf
xchg
clc
jmp
adc
xchg
sbb
push
xor
cmp
jge
imull
and
sub
je
lret
les
and
imul
out
je
adc
inc
sti
movsl
aad
inc
jg
addr16
pop
and
jne
loope
push
sbb
sti
push
insl
imul
les
dec
icebp
out
notb
lcall
mov
pop
push
or
and
ss
xchg
push
sahf
xor
cwtl
inc
sti
cmp
cli
imul
mov
inc
sub
jge
idivb
sbb
and
mov
mov
mov
out
ret
xchg
push
in
xor
mov
pop
ficoms
sbbb
cmc
sahf
dec
cmovo
pop
fisttps
mov
pop
leave
xchg
outsb
xchg
dec
stos
fdivrp
iret
push
inc
ss
inc
daa
pop
out
cld
imul
movsb
pop
mov
enter
sbb
gs
bound
cmpb
mov
daa
mov
cmp
xlat
roll
xlat
push
push
nop
sub
and
std
dec
lret
roll
leave
jne
rcl
or
out
mov
stos
adc
aas
popf
test
add
je
jle
lods
fisttps
aad
inc
mov
and
int3
shll
jmp
mov
repnz
sbb
imul
xlat
out
fcomps
or
mov
adc
cmp
dec
mov
inc
arpl
mov
fisubrs
out
mov
push
and
adc
ja
leave
es
mov
pop
fbstp
sti
mov
repnz
ret
jo
rol
mov
ja
push
or
cmp
popa
xchg
or
rcrb
ret
cmp
in
and
inc
pop
sahf
sub
pop
push
jmp
mov
pop
rcrl
dec
pop
movsl
jno
add
pop
xchg
pushf
push
ja
jbe
insl
loope
addl
movsb
mov
mov
cld
clc
mov
repz
mov
cmpsb
xchg
xor
mov
push
mov
push
and
cmp
mov
pop
repnz
stos
lret
out
xchg
mov
adcb
cld
cmp
push
aas
or
push
pop
imul
loope
rclb
inc
mov
cmp
test
rolb
std
mov
fldcw
push
or
hlt
inc
pop
insl
in
mov
mov
stc
lret
xchg
mov
scas
jno
jae
scas
pop
int3
xchg
outsb
andl
jno
jg
sar
xchg
pop
clc
mov
jbe
imul
negl
pusha
test
pop
jmp
shrl
mov
in
sub
or
cmp
push
movsl
xchg
xor
data16
sbb
push
jp
lods
orb
adc
subb
jecxz
cmp
mov
adc
mov
ds
pop
mov
fldenv
push
sbb
sti
into
pop
lock
dec
shll
add
xlat
in
adc
push
cli
and
insb
xor
pop
popa
or
and
dec
lds
mov
push
test
or
push
daa
andps
je
xchg
mov
out
push
in
sub
mov
daa
das
mov
push
mov
arpl
das
mov
sbb
push
inc
cmp
mov
mov
cli
aam
dec
std
sub
in
fs
fldenv
repz
das
aam
push
push
in
iret
imul
daa
out
pusha
dec
test
or
in
lahf
cmp
mov
loop
imul
loope
jl
mov
xchg
cmp
push
call
js
ds
pop
jne
in
add
inc
add
cmp
aaa
pop
pop
dec
sbb
mov
lcall
xor
cltd
ss
adc
lret
cs
test
xor
inc
add
pop
cmp
sbb
ss
jbe
fsubs
out
add
outsl
mov
std
stos
lret
add
ss
icebp
out
in
sbb
call
jno
aam
mov
mov
mov
and
test
out
xlat
pop
inc
pushf
cmpsb
xor
cmc
jg
xor
or
ret
pop
xor
inc
jb
aas
push
jne
push
push
adc
adc
insl
negl
jbe
inc
jnp
fcomps
xlat
call
fnstsw
xlat
sub
sbb
and
or
sarb
push
or
leave
cwtl
insl
ss
sbb
leave
adc
aas
xchg
sbb
cmp
dec
enter
or
adc
pop
xchg
iret
jne
jge
sbb
and
sub
test
test
stos
ffree
sbb
sti
fbld
sub
hlt
cld
add
xor
test
lret
jecxz
lahf
xchg
pushf
pop
cmc
jae
stos
ret
mov
test
mov
pop
adc
and
sub
out
adc
inc
and
xchg
inc
orb
cmp
push
inc
fsubrs
aaa
lds
xchg
mov
dec
popf
aaa
adc
out
test
jnp
inc
pusha
test
mov
xchg
fadds
mov
or
pushf
sub
je
cmpsb
mov
cmp
adc
push
movsl
loop
sbb
mov
inc
mov
mov
repnz
and
hlt
frstor
faddl
inc
aam
rorl
xor
pop
xchg
scas
fisubs
mov
icebp
jnp
sub
and
jbe
das
fnstenv
xchg
divl
test
lock
xlat
dec
inc
cmc
mov
mov
mov
rep
pop
mov
jo
loopne
and
dec
inc
pop
push
xlat
xor
inc
aam
push
push
stos
adc
cli
or
pop
fdivr
test
adc
jbe
movb
jl
lods
mov
and
mov
mov
std
enter
xor
cmp
add
push
xchg
xchg
das
pop
jnp
lds
dec
les
adc
and
inc
out
popf
mov
xchg
pop
mov
mov
adc
ljmp
pushf
test
pop
and
pusha
push
in
adc
mov
bound
idivb
stos
xchg
sub
test
popa
fcompl
xlat
pop
out
mov
sub
addl
lods
testb
mov
int3
cmpb
cld
dec
push
outsb
cs
push
push
test
jmp
add
ja
sub
sbb
ljmp
fsubs
nop
addl
out
hlt
dec
mov
stos
rol
aam
dec
aam
icebp
ss
popa
mov
sub
jge
test
lahf
jae
mov
sbb
mov
inc
mov
insb
pop
xchg
jle
sub
mov
pop
dec
ljmp
int
loope
leave
fnstenv
orl
mov
adcl
sbb
mov
jmp
subl
xchg
and
and
xor
xchg
xchg
and
add
std
dec
push
push
inc
test
xor
int
popf
push
shrb
stc
clc
ss
cmpsb
adc
jg
adc
insb
add
push
test
lds
lods
call
and
test
in
dec
andl
ret
add
push
mov
push
mov
ret
mov
push
addr16
mov
mov
inc
out
rclb
jp
pop
iret
clc
nopl
cmc
leave
aaa
dec
mov
mov
jl
xchg
ja
jp
mov
data16
jne
inc
fldenv
jb
jae
or
bound
std
jo
outsl
test
add
mov
inc
mov
daa
dec
xlat
adc
stos
inc
pop
dec
scas
sub
mov
addr16
mov
testb
clc
mov
loope
ja,pn
shrb
mov
out
into
cmp
in
jo
and
int
stos
cld
push
mov
jmp
out
pop
stos
into
pop
sub
cmpsl
xor
fmull
stc
or
repnz
push
adc
pop
push
ficoml
dec
in
push
pop
inc
repnz
sbb
jecxz
inc
mov
add
dec
cmp
sub
and
ljmp
stos
push
jecxz
dec
or
lods
out
and
mov
pop
mov
mov
fs
lcall
in
mov
mov
jecxz
lods
xorb
cmp
and
pushf
dec
or
cmp
jbe
pop
or
insl
fistl
push
sbb
bound
call
nop
mov
push
loope
pop
pushf
decb
jae
ja
into
movsb
sub
into
and
xor
bound
mov
aas
scas
insl
jmp
fidivs
js
popf
sarb
iret
mov
ret
adc
andl
mov
dec
mov
pusha
test
mov
or
and
movsl
insb
xor
icebp
sarb
test
js
loope
or
fiadds
add
xchg
or
adcb
shrl
inc
cmp
jg
xor
sub
jb
xor
dec
inc
rorl
subl
dec
add
mov
cwtl
push
xchg
and
or
xchg
std
sub
hlt
stos
pop
js
or
divb
pop
shrl
test
mov
test
shll
jecxz
inc
jno
neg
iret
sbb
lret
test
xor
hlt
cmp
xor
retw
push
insb
fsts
test
pushf
test
les
and
loop
nop
cmpl
hlt
and
xchg
leave
mov
push
mov
xchg
sbb
add
or
or
push
popa
dec
stos
stc
inc
mov
icebp
sub
cmc
push
add
push
ja
xchg
sub
iret
addr16
mov
pop
gs
push
nop
movsb
out
push
push
dec
sbb
shll
hlt
xor
and
jg
sti
push
mull
test
mov
inc
add
xor
cmpb
addl
lods
lods
push
push
out
xor
sbb
mov
jecxz
clc
add
add
in
inc
mov
sbb
add
rorb
or
sub
xor
jecxz
shl
cli
xor
test
mov
std
in
stos
cmp
mov
pop
sub
cmp
or
das
xor
sbb
loopne
dec
ret
xor
cmp
stos
in
mov
jl
cmpsb
push
cmovne
jmp
dec
push
mov
mov
push
jp
in
dec
pop
ss
lods
cmp
loopne
push
jnp
add
iret
inc
push
pop
cld
in
dec
mov
subb
adc
rcrb
cmp
loope
stos
mov
repz
push
imul
sbb
sub
mov
push
imul
jecxz
and
inc
mov
flds
in
and
inc
xor
lods
jns
mov
imul
xchg
ret
dec
xor
add
enter
fdivr
call
popf
out
cltd
mov
jp
popf
sub
stc
test
int3
sbb
adc
fistl
mov
outsb
in
aas
ret
dec
rcl
sbb
js
sahf
push
xor
push
jl
insl
xchg
lds
mov
xchg
cmp
xor
clc
pop
rcll
aad
adc
fwait
out
cmpsl
subl
lods
icebp
aad
xchg
repnz
gs
pop
inc
sbb
lret
sbb
out
aam
scas
out
jmp
adc
sti
inc
or
addr16
pop
push
cmpsb
call
xor
shl
push
and
out
movsb
sbbb
add
sbb
pop
or
stos
sub
cmc
xor
mov
xchg
mov
int3
dec
push
cli
mov
fildl
aaa
inc
dec
test
pop
repz
mov
xchg
testb
test
outsb
xchg
das
aad
dec
cmp
mov
sub
out
sub
push
mov
cmp
shlb
call
dec
mov
ds
cmovno
loope
xorb
leave
mov
insb
pop
cli
and
cltd
add
in
pop
es
add
jle
mov
pop
aad
add
inc
xor
stos
xor
mov
sub
xchg
fldt
pop
dec
mov
mov
sub
jl
popl
adc
cmp
adc
cld
dec
xor
mov
out
push
out
mov
hlt
dec
mov
mov
pop
jbe
je
dec
inc
mov
pop
popa
and
xlat
scas
mov
sbb
jl
adc
scas
fmul
jbe
stos
dec
jmp
adc
inc
dec
cmp
mov
sahf
rolb
push
je
call
push
sub
mov
inc
cmp
jge
pop
decl
and
shrl
jge
xchg
mov
movsl
mov
aam
cmp
mov
aad
jmp
jbe
loope
fstpl
pop
adc
or
stos
mov
sbb
sbb
pop
xchg
mov
lcall
xchg
mov
mov
jge
xchg
xchg
loop
jmp
insb
in
mov
shrb
icebp
cmp
jo
out
pop
and
dec
fnsave
inc
cmp
push
inc
paddb
jb
mov
jg
addr16
mov
adc
pop
ficoms
in
lcall
sbb
or
mov
sub
add
push
pushl
arpl
rcpps
dec
inc
in
pusha
adc
sahf
test
sbb
test
mov
mov
pop
repz
mov
sub
mov
les
fsubr
test
jne
in
mov
es
cltd
in
lds
cltd
mov
pop
push
inc
lock
or
push
in
aaa
sbb
jg
jecxz
out
and
xchg
and
outsl
push
aaa
mov
addr16
pop
movsl
push
and
adc
add
pop
daa
mov
adc
inc
scas
rcl
popa
jmp
movsl
fists
or
lahf
lret
addr16
inc
ss
cmp
sbb
fidivrs
sbb
in
es
xchg
jl
js
jge
mov
cmp
lcall
lret
add
lods
cmp
pop
adc
out
jbe
aas
push
dec
outsl
stos
xor
xor
pusha
xchg
push
jb
repnz
mov
in
adc
xchg
inc
popf
push
xor
cmpsb
cmp
mov
andb
xchg
clc
mov
hlt
addl
fs
es
add
data16
cmp
inc
dec
mov
je
jno
jb
inc
aam
inc
jge
jnp
sbb
cltd
enter
adc
daa
and
lret
xor
sbb
adc
sbb
mov
ss
repz
hlt
and
push
adc
repz
sahf
int
mov
or
clc
enter
jbe
mov
xlat
cld
int3
pop
mov
lods
icebp
adc
rolb
jle
das
sub
test
sbb
inc
xchg
jl
fs
daa
sbb
adc
out
pop
test
sub
jno
xchg
insl
pop
pop
sub
mov
inc
aaa
movb
xchg
mov
fldenv
sub
je
jp
push
jnp
negb
pop
jbe
inc
sarb
nop
ret
or
xchg
decb
test
ret
fucomi
dec
dec
bound
push
push
cli
loop
insb
push
icebp
lret
lret
cmp
sbb
in
sbb
pop
dec
pop
imul
shl
add
jno
jae
inc
popf
and
jmp
cmpsb
aaa
jno
xchg
mov
cmp
mov
repz
inc
xor
mov
popf
repz
test
add
adc
sbb
sub
mov
sub
scas
mov
imul
scas
enter
stc
mov
mov
sub
jne
in
xchg
push
nop
xchg
xor
dec
lcall
xor
mov
sub
pop
das
cmp
xlat
out
push
ret
inc
xor
sub
in
pop
sub
inc
push
mov
xchg
mov
dec
jae
push
por
fdivrp
imul
jecxz
adc
test
scas
call
adc
push
mov
cmp
es
sub
cmp
xlat
jmp
mov
sbb
xor
out
and
je
rcrb
or
add
addr16
out
xor
pop
or
cmp
xchg
scas
mov
inc
add
mov
fmull
sub
lods
nop
inc
repnz
lds
test
stos
fcoms
stc
add
cli
or
mov
sub
sbbl
scas
cmp
sub
xor
std
pop
jmp
sbb
loopne
stc
scas
pusha
ficompl
fisubrl
pop
add
mov
dec
hlt
in
movsl
sarb
mov
rcrb
pushf
test
adc
dec
or
mov
shrb
push
leave
outsb
or
popf
pop
aaa
add
dec
pop
dec
sub
pop
inc
hlt
pushf
mov
inc
push
cli
cmp
ljmp
loope
in
bound
in
clc
lcall
and
pop
in
inc
sbb
dec
fwait
cmp
xchg
dec
nop
push
jne
ljmp
loopne
fwait
mov
mov
rcr
sbb
fistps
sbb
sarb
lds
int3
int3
inc
pop
arpl
push
imul
int3
int
es
aad
mov
jle
rcr
mov
jo
out
jb
test
call
dec
divb
ficompl
cmpl
pop
jno
into
mov
addr16
xor
jecxz
aaa
daa
mov
mov
push
mov
addb
stc
les
ficoml
inc
mov
add
xlat
mov
mov
fcomi
loopne
test
mov
je
mov
test
stos
fisubrs
call
sub
lahf
pushl
and
mov
ret
enter
cmp
nopl
mov
sbb
mov
mov
mov
inc
repnz
fsts
inc
fisubrl
scas
test
xor
sbb
test
push
push
popa
pop
mov
xor
xchg
das
or
xchg
mov
mov
shlb
mov
hlt
and
mov
jp
lret
mov
les
or
sbb
rolb
daa
mov
fsts
jnp
into
icebp
sti
mov
xor
mov
out
inc
jp
insl
inc
sbb
mov
imul
test
movsb
pop
in
push
insb
ficompl
or
mov
jp
add
test
jnp
mov
sub
rcrl
jbe
jg
xor
addr16
and
pop
sahf
fst
fisttps
cwtl
jge
inc
div
xor
mov
cmp
orb
pop
out
loope
shll
dec
add
dec
iret
int3
jo
push
loope
cmp
out
call
xchg
push
push
jne
or
loop
jmp
bound
xchg
mov
outsl
pusha
mov
insl
loope
retw
xor
pusha
xchg
stc
lcall
xlat
adc
cmp
xor
push
in
icebp
xor
sub
push
push
stos
insb
pop
je
add
adc
movsb
push
xor
and
pop
and
test
mov
add
jmp
or
das
pop
test
pop
and
sbb
inc
dec
jnp
repnz
sub
push
or
or
repz
cltd
cld
sbb
pop
stos
pop
ret
inc
fistpl
pop
jno
dec
mov
inc
outsl
jno
shl
cmp
out
mov
loopne
mov
push
data16
out
ret
fs
xchg
jecxz
add
aaa
repz
sub
mov
mov
loopne
jno
in
cmpsl
arpl
cmp
clc
fs
cld
fidivrs
scas
out
xchg
push
mov
sub
mov
mov
push
ljmp
fcmovne
sbb
xchg
sub
fs
add
jle
js
rclb
sub
rcl
out
push
adc
ljmp
loop
add
dec
jge
mov
lret
rsm
cwtl
adc
mov
xchg
add
movsb
movsl
pop
andl
bound
mov
dec
int3
pop
ja
icebp
sbb
mov
inc
cmp
popa
data16
adc
stos
cli
add
add
nop
outsl
mov
fiaddl
rcl
cld
popf
push
cmp
push
fwait
shlb
scas
push
or
or
xchg
sub
push
xchg
adcb
popf
rorl
insb
xor
cli
mov
push
sub
addr16
push
and
xchg
imul
xor
sub
add
mov
add
pop
je
lds
cmp
jecxz
xchg
xlat
push
movsl
mov
and
sarl
enter
xchg
or
mov
sbb
xchg
mov
fsubrp
dec
in
out
sbb
dec
dec
push
add
lds
dec
add
hlt
mov
imul
jb
mov
mov
jmp
push
in
fs
mov
scas
mov
xchg
pop
pop
or
test
pop
sub
adc
mov
adc
and
mov
sub
je
xor
and
in
jle
sbb
xchg
fsubs
test
adc
jp
cltd
movups
mov
mov
push
inc
mov
ret
lock
loopne
and
lret
xor
inc
sub
push
mov
popa
mov
adc
lret
cmpl
sub
adc
mulb
pop
sti
xchg
push
cmc
out
add
insl
notl
cltd
lock
test
mov
aas
add
jno
loope
loop
sub
mulb
jnp
aas
in
add
sbb
movzwl
dec
out
push
leave
add
or
outsb
test
cli
xor
je
lahf
jg
insb
xchg
sbb
or
loop
in
lods
xchg
mov
xor
xchg
movsb
mov
into
adc
pushf
rorl
into
insb
rcl
call
aas
mov
out
lds
adc
icebp
cmp
xor
add
je
aas
cmp
sahf
js
xor
lahf
shll
popl
xchg
cmpl
mov
xor
loope
shrb
jmp
push
pop
inc
fadds
inc
sbb
ficoml
fwait
sub
les
pop
mov
adc
xchg
mov
shll
into
push
adc
inc
jg
xchg
mov
popa
lock
and
test
scas
cmp
mov
stos
loopne
sub
push
dec
rolb
movsb
adc
lock
popa
insb
dec
or
test
dec
adc
cmc
pop
sub
test
lods
add
inc
sarl
fmul
int3
pop
je
jae
loop
mov
push
jmp
leave
xlat
shll
mov
ss
dec
in
into
dec
fbstp
fstpt
xchg
fsubl
loopne
jmp
ss
sbb
ret
negl
xor
mov
xor
and
push
iret
and
insb
lods
outsl
dec
mov
lods
orl
inc
fistl
fs
pushf
orb
mov
jl
lods
call
clc
test
nop
cli
push
sub
jecxz
inc
add
mov
pop
add
sbb
jbe
lret
lods
cmp
or
sbb
fcomp
fidivl
scas
data16
pop
pop
out
mov
arpl
sbb
push
jecxz
out
cmp
mov
push
mov
pop
leave
sti
jp
stc
pop
in
lods
lock
movsl
fisttps
rorl
and
xchg
adc
pushf
sub
sbb
add
fcmovnb
inc
fmul
push
or
or
sub
push
adc
es
mov
cmp
stos
int3
mov
inc
push
xor
cmc
or
sbbb
cmp
mov
mov
push
mov
in
vmovntdq
push
push
sti
pop
aam
rclb
add
mov
sub
out
dec
dec
push
and
push
imul
pop
push
xor
das
imul
mov
lea
movsb
mov
xor
sbb
fstps
ret
xor
cmp
and
cmp
ja
jg
dec
fmull
cmp
inc
xor
mov
sbb
push
inc
sti
xchg
add
in
loopne
cld
sbb
and
inc
push
cmpsb
cmpsl
jno
push
sub
jmp
imul
mov
mov
push
mov
inc
aas
sbb
pop
adc
sahf
out
or
sarl
xchg
cmp
push
cwtl
pushf
shr
jg
ljmp
out
out
movsb
fsqrt
mov
loopne
xlat
xchg
xchg
test
add
inc
xlat
pop
mov
inc
mov
mov
sti
mov
out
dec
cmp
dec
sbb
mov
clc
mov
ret
dec
mov
add
fwait
out
sbb
cwtl
aaa
daa
xchg
push
fsubl
decb
out
pop
and
aad
in
sbb
sbb
imul
sub
ret
imul
dec
mov
push
jns
fldenv
nop
mov
insl
xchg
loope
cmpsl
test
insb
sti
push
test
aad
jb
jg
push
and
cmpb
xor
sub
popa
and
ret
leave
cmp
mov
xchg
sub
test
icebp
out
push
adc
in
inc
mov
cmp
sub
xor
sbb
and
mov
sahf
pop
popa
and
xchg
push
mov
fwait
add
sbb
aad
les
pop
lock
aad
decl
sbb
test
sbb
and
xchg
movsb
enter
cmp
xor
or
addl
and
mov
mov
push
inc
es
sub
jo
dec
mov
and
rolb
das
out
fnstsw
mov
pop
es
aam
js
aad
mov
dec
hlt
push
dec
gs
adc
scas
fiaddl
mov
insb
fcmovb
rolb
shr
sarl
jnp
lcall
es
add
jecxz
dec
xchg
clc
dec
and
push
xor
pop
mov
outsl
xchg
ret
loopne
scas
and
cmpsl
repnz
adc
adc
outsl
xor
das
xor
mov
lcall
leave
in
popf
out
aam
cli
sub
or
lock
repnz
xchg
icebp
lcall
cltd
ret
dec
rorl
jno
sbb
pop
inc
mov
sarl
mov
sti
jecxz
add
jno
in
nop
fldl
lods
fcomip
jg
cltd
sub
mov
hlt
mov
push
mov
cs
mov
mov
jmp
add
scas
fcmovnb
mov
sbb
xor
pop
push
add
roll
sbb
repz
xor
inc
gs
mov
adc
cld
mov
faddp
jecxz
repnz
add
cmp
mov
out
sbb
lds
lds
adc
je
popf
mov
xor
mov
ss
cmp
xchg
jae
imul
mov
fcomps
xor
and
jl
lcall
sahf
cmpb
mov
test
in
incb
adc
insl
and
loopne
mov
dec
sbb
push
push
mov
pop
call
std
repz
mov
mov
hlt
data16
stos
fsubl
mov
and
cwtl
inc
negb
xor
adc
popa
lret
repz
pop
shll
inc
sub
gs
add
scas
imul
sub
subl
adc
push
mov
cmp
hlt
cmc
jl
xor
shlb
cmpsl
insb
ja
iret
sbb
fstps
xchg
cmp
or
fs
jne
sti
dec
nop
idivb
mov
xchg
xchg
or
out
xchg
lea
aas
mov
ja
fadds
bound
jp
push
aaa
insb
sar
cmc
sbb
xor
jbe
jns
and
adc
les
dec
leave
push
sahf
loope
lret
jle
test
sti
clc
xchg
and
bound
in
sbb
pop
xchg
ja
test
in
shr
test
push
out
inc
add
ds
jae
lods
mull
jle
iret
xchg
lods
sub
orb
cmp
pop
add
lret
add
shll
enter
test
xchg
sbb
gs
fdivrs
lods
loopne
mov
mov
xchg
daa
outsl
pop
sti
mov
aam
cmp
push
loop
xor
push
arpl
mov
scas
mov
lock
jb
inc
repz
push
sbb
push
aam
cli
insb
out
ret
jne
dec
mov
or
sti
add
pop
jbe
mov
fiadds
loope
xor
clc
jl
mov
mov
xchg
jnp
jae
dec
xor
pop
xchg
lahf
inc
sbb
cld
cmp
roll
xor
std
mov
and
or
mov
mov
cmp
jge
das
fcomp
repnz
jae
sbb
sub
fisubrs
shlb
inc
or
mov
sbb
and
je
neg
xlat
sub
test
push
cwtl
adc
mov
jns
adc
fistpl
mov
and
dec
cmp
adc
iret
ja
imul
fnsave
add
dec
test
pop
mov
out
imulb
pop
sub
inc
jg
movsb
scas
adc
cli
push
cmp
int3
dec
fimuls
inc
mov
adc
xor
or
mov
jecxz
pop
pop
icebp
jle
push
cmp
outsl
xchg
dec
xor
cs
xchg
ss
repz
inc
inc
jb
mov
test
jbe
adc
cli
incl
movsb
shlb
adc
shrl
adc
push
push
pop
lods
cmpsl
sbb
movsl
xor
push
add
fsubs
cmc
jne
push
jnp
dec
mov
mov
cmp
hlt
dec
xchg
and
pop
std
push
add
add
rol
bnd
jbe
loope
popa
ror
or
mov
sbb
int
icebp
nop
push
pop
in
cmp
push
leave
cld
fiaddl
fmuls
jns
imul
cmpl
lea
insb
mov
pop
out
bnd
arpl
push
dec
rclb
movsb
aaa
leave
push
jmp
ljmp
mov
enter
movsb
xchg
add
clc
addb
sbb
xchg
arpl
sub
fldt
ret
cwtl
ficoml
popf
ret
add
in
fnstcw
dec
lods
lret
jmp
jl,pt
stos
stos
jno
xchg
inc
push
add
pop
and
push
cltd
lock
lahf
movzwl
pop
rcrl
sbb
mov
fists
xor
xor
sub
lds
push
filds
adc
ficoml
daa
rolb
sbb
add
js
out
push
and
nop
mov
jne
inc
xchg
fistl
cs
inc
sbb
or
jo
out
mov
xchg
push
arpl
mov
xlat
mov
cmp
movsl
dec
jl
sbb
out
in
xchg
adc
mov
or
dec
cmp
hlt
enter
pop
inc
pop
mov
std
dec
orl
lahf
inc
pop
add
mov
into
cli
stc
mov
xchg
sbb
dec
inc
sar
fistpll
jne
and
loope
nop
push
js
pop
fcmovne
lods
cs
cmp
sbb
mov
dec
lods
cld
xchg
mov
pushf
xor
fs
push
jg
js
sbb
pop
xor
lea
xor
outsl
mov
scas
add
jge
mov
and
push
stos
ljmp
mov
nop
lret
enter
sbb
sub
or
or
mov
pop
mov
cmp
adc
cmc
repnz
sbb
sub
sub
mov
cltd
call
mov
mov
outsl
ja
sbb
shlb
scas
inc
int
jne
adc
xchg
and
sbb
or
mov
xor
jb
mov
or
mov
mov
adc
pushf
es
pop
push
in
lret
sub
fwait
push
adc
out
pop
into
jbe
jns
dec
fs
push
gs
or
test
xor
fucomi
daa
jo
xchg
and
rorl
xchg
jle
loope
enter
pushf
sub
into
dec
lods
insl
mov
inc
fwait
shl
jo
into
jno
push
mov
scas
aam
mov
mov
sbb
jp
xor
jae
dec
test
icebp
inc
push
ret
daa
xor
inc
jb
fld
jge
popa
cmpb
js
push
icebp
ljmp
iret
imul
adc
inc
dec
cmpb
add
cs
or
sahf
cmp
mov
orl
cmp
cli
pushf
jle
mov
jge
and
add
jp
add
loopne
negl
cli
enter
icebp
mov
jnp
shr
in
fisubrl
mov
inc
stos
sbbb
flds
fcoms
cs
xlat
and
dec
sbb
jg
dec
pop
das
pop
ret
test
inc
dec
ret
pop
fwait
es
add
loope
xor
mov
and
mov
add
fcompl
push
inc
jne
adc
mov
jg
call
jne
jg
sbb
popf
out
mov
dec
xchg
dec
sbb
adc
mov
mov
push
es
and
add
shll
icebp
lods
es
subb
xor
cwtl
xchg
cmp
dec
push
rcl
jae
sbb
mov
mov
jp
cld
clc
imul
inc
mov
loop
jmp
in
int3
push
mov
inc
ret
dec
dec
mov
shll
ret
ljmp
sub
jns
mov
jp
jns
lods
das
pop
pop
push
ja
xchg
sub
in
adc
or
add
into
ljmp
ffree
jg
xchg
push
insb
add
sub
aas
mov
ret
nop
adc
mov
push
loop
and
loope
aaa
xor
adc
mov
sub
lods
mov
or
adc
xchg
lret
push
addr16
or
inc
cld
and
jns
aas
out
sbb
add
xchg
pop
dec
mov
or
fwait
andl
flds
jnp
cmp
and
fsubr
jle
sbb
dec
out
or
jl
sbb
adc
aas
xor
jmp
lret
xchg
lahf
lods
mov
mov
inc
int3
add
shrb
mov
hlt
mov
add
sub
mov
or
icebp
sub
movsb
repz
jecxz,pt
in
popa
pop
sub
cmp
jmp
dec
gs
inc
iret
push
notl
in
push
das
ljmp
repnz
jmp
mov
mov
and
fnstenv
add
mov
dec
or
mov
ss
andl
dec
add
stos
fistpll
inc
pop
mov
insl
jbe
sub
xchg
adc
dec
in
jge
mov
psllw
hlt
sti
lahf
mov
mov
iret
fisubl
sub
addb
movsb
out
daa
ss
aad
pop
jne
mov
fsubp
cli
cli
rolb
dec
dec
aas
mov
cmpsb
lds
dec
push
jo
mov
lock
cltd
js
movsl
pop
fs
and
xchg
or
push
pop
lret
mov
add
aam
sbb
or
push
lock
adc
jl
stc
ds
out
aam
cwtl
int
xor
addl
jmp
stos
cli
jecxz
xchg
arpl
negb
into
call
xchg
scas
dec
stc
sub
inc
jb
mov
sub
push
jecxz
sub
fmuls
push
nop
mov
mov
sbb
or
or
mov
push
mov
cmp
outsb
ret
and
js
gs
lcall
add
repz
leave
inc
movsl
bound
rcrb
xor
mov
and
inc
cmp
pop
mov
lds
in
addr16
loopnew
lea
sbb
cmp
dec
xchg
and
icebp
cmpsl
xchg
jl
jo
xor
sti
int
orb
shlb
xor
cmp
jg
test
xor
pop
out
loope
clc
jbe
or
pop
outsb
sahf
fldcw
sub
outsb
lods
or
pop
sti
insb
addr16
jge
mov
pop
lea
fists
mov
movsb
testl
push
sub
push
cmp
mov
std
lret
inc
mov
test
das
cmp
xor
jp
loopne
mov
mov
push
pop
lock
ret
and
fcmove
or
pushf
nop
pop
sbb
cmp
mov
popf
push
push
xchg
in
push
es
sbb
cmp
cltd
mov
push
inc
test
in
xchg
gs
jno
mov
sub
dec
sub
and
pop
xor
pop
jmp
ja
cli
jg
test
dec
cmpb
add
jecxz
cmp
fsubr
bound
pop
pusha
loopne
dec
mov
jae
fldcw
inc
jae
jp
lock
dec
pop
in
mov
dec
or
mov
stos
jg
inc
pusha
in
mov
jle
dec
xchg
jo
das
pop
pop
setbe
pushf
xor
cmpsl
xchg
testb
out
add
into
aad
mov
mov
aas
fdivrs
xchg
in
pop
test
mov
push
lds
rorl
jns
outsb
lahf
leave
movsb
clc
dec
pop
lods
or
pusha
mov
mov
pushf
or
icebp
add
and
and
cmp
mov
xchg
mov
add
bnd
adc
nop
xor
sub
enter
inc
rcll
mov
leave
dec
in
imul
ja
dec
add
fsubrp
leave
mov
sti
es
mov
or
mov
mov
xchg
xchg
xchg
cmp
cmp
xchg
hlt
jno
fstps
fwait
adc
shll
or
cmp
jae
aaa
mov
lds
pop
and
lcall
mov
adc
pop
jp
mulb
dec
fsubs
sbb
mov
cmc
jae
sti
rorb
pop
sahf
xchg
dec
jle
xor
cmp
jmp
hlt
lahf
sti
aaa
sbb
jg
sbb
cmpsl
ljmp
imull
sub
mov
mov
xlat
cmp
movsl
cmp
xchg
sbb
cmc
dec
mov
push
inc
test
ret
jle
fnsave
lea
jae
outsl
cltd
lahf
call
jnp
push
and
lret
int3
pop
jl
adc
into
xorb
std
mov
insb
lods
push
mov
inc
popa
mov
pop
pop
mov
mov
fidivl
fsub
sbb
mov
sub
or
enter
lods
mov
inc
dec
lock
popa
shrl
and
fs
test
test
sbb
fdivrs
or
dec
mov
sub
aas
push
sbb
dec
nop
loop
cmp
mov
and
movsb
sbb
ret
xlat
in
xchg
and
xchg
mov
mov
imul
divb
test
je
data16
xor
lock
movsb
inc
or
mov
pop
add
push
orb
jmp
movsb
in
cmp
ret
adc
add
and
xchg
daa
xor
jno
mov
pop
popa
lahf
imul
test
call
mov
andl
sbb
lahf
pop
es
cmp
rorl
add
adc
adc
test
cmp
lods
cmp
loopne
repnz
mov
cs
mov
shll
jg
js
hlt
fistl
jbe
aam
mov
sub
and
daa
mov
sub
adc
pop
cmc
test
inc
repnz
in
movq
mov
or
inc
xchg
pop
data16
sub
lret
je
jp
sbb
in
push
fnstcw
movsl
repnz
pop
xor
fbld
mov
mov
jp
mov
push
sbb
or
enter
out
lods
xchg
fsts
icebp
adc
push
push
popf
mov
pop
pop
imul
dec
aam
aad
jnp
inc
xchg
loopne
adc
mov
mov
xor
inc
xor
dec
call
jecxz
movsb
xor
pop
movsb
sbb
mov
inc
mov
mov
or
mov
shr
insl
inc
push
cmp
or
xor
popf
bound
add
mov
in
out
add
jo
decb
mov
lds
mov
and
out
add
stos
add
and
loop
pop
adc
mov
lods
push
push
ljmp
pop
dec
and
cmp
outsl
insb
imul
pmaddwd
mov
lods
cmp
fdivr
push
scas
or
lahf
or
xchg
stos
and
pushf
jmp
xor
xchg
mov
mov
xor
fistpll
ret
inc
dec
push
pop
int3
addr16
xchg
gs
shlb
adc
mov
pop
cmpsl
lret
nop
push
leave
jo
int
pop
or
jo
cmp
add
in
scas
sub
lret
add
fs
lahf
lock
dec
ret
leave
cmp
mov
cld
pusha
push
jae
mov
push
push
shll
lds
and
pop
jge
rcrb
fisttpl
arpl
sbb
push
push
jg
sbb
les
mov
mov
insb
bound
jb
in
inc
popa
scas
inc
xor
rcll
test
jae
mov
sub
mov
fisubrl
xor
pusha
rclb
mov
movsb
and
adc
aas
xchg
jbe
dec
cmp
jmp
fnsave
xlat
cmp
inc
idivl
aad
test
jns
cmp
dec
mov
and
pop
dec
movsl
or
lahf
sub
pop
xlat
xchg
leave
dec
in
bound
mov
adc
ret
mov
mov
popa
cmp
gs
adc
dec
xchg
je
inc
cmp
je
lock
out
jl
fmuls
sti
cld
scas
cmpsl
pop
nop
jae
jo
lods
and
fisubrs
shrl
mov
in
int3
sub
xor
push
jg
inc
fsubrs
lcall
incl
mov
mov
out
enter
scas
test
fstps
dec
cmp
mov
test
and
dec
mov
xor
bnd
add
mov
xchg
push
add
addr16
push
pop
stos
xchg
pushf
shrl
rcr
push
mov
jns
inc
add
pop
cmp
jmp
into
std
inc
xor
xchg
shrb
xchg
aas
fcmovnbe
lods
xchg
cmp
popl
insb
xor
jecxz
addb
test
push
gs
xchg
es
xor
mov
ds
shrl
lret
xlat
ficomps
sub
mov
mov
cmpsb
sbb
mov
sbbb
mov
dec
add
push
mov
call
movsl
mov
push
insb
sub
sbbb
xor
xor
dec
jbe
adc
adc
fxch
jle
insl
push
xor
mov
xor
rcrl
lahf
xorb
in
roll
push
loop
jne
mov
sub
sub
and
int3
mov
loope
ds
imul
out
push
jmp
ja
and
push
pop
and
fcoms
ret
add
icebp
popf
lods
mov
dec
icebp
sti
stos
and
out
or
mov
shl
loope
and
lods
jg
fwait
pop
and
stc
aas
and
inc
notb
mov
leave
hlt
jp
push
sti
and
out
jp
stc
pop
mov
insl
ficoms
mov
xor
lcall
jp
outsl
out
incl
mov
das
mov
pop
add
aas
daa
mov
fwait
xchg
mov
cltd
hlt
mov
hlt
lods
rsqrtps
or
stos
jns
sub
mov
or
mov
idivl
push
pop
inc
mov
sbb
mov
fwait
lock
xchg
nop
push
push
push
push
dec
sahf
int3
mov
jg
dec
fistpll
mov
or
push
or
push
dec
dec
sub
sub
cmp
xor
mov
xchg
dec
shlb
clc
rcrl
dec
sar
push
in
test
popf
xchg
jb
inc
ds
rclb
enter
fmul
rorb
or
adcl
or
add
mov
shrl
rcl
bound
aas
sub
aaa
mov
ret
test
or
lock
xor
test
fcoms
faddl
into
cmpsl
fstl
jb
push
in
iret
clc
cmc
stos
sub
pop
mov
rcll
add
sbb
lret
pop
ret
mov
sti
enter
in
xchg
or
in
test
mov
shr
jge
hlt
mov
inc
ss
add
mov
and
punpckhwd
inc
sub
cmp
cmp
sub
and
mov
adc
push
mov
jecxz
out
mov
aas
ret
dec
adc
mov
jnp
sub
add
lock
int3
push
sbb
and
lahf
and
in
mov
push
in
daa
jl
xor
jno
push
ret
jp
dec
fadd
pop
pop
cwtl
divb
shr
or
fimuls
leave
fstps
rcrb
cmpsb
dec
mov
mov
in
mov
sahf
fdiv
sub
and
mov
ljmp
pop
sbb
dec
loop
out
jecxz
jbe
outsl
ret
xchg
rolb
shll
loope
mov
fsub
mov
fmull
dec
sbb
fldenv
xor
cwtl
jl
dec
lea
cmp
nop
div
push
inc
sahf
rcl
add
ret
cmp
mov
cli
sbb
js
lea
and
insl
or
inc
roll
loopne
loope
push
push
je
dec
ret
xlat
mov
lret
and
outsl
idivl
les
js
lahf
in
xor
sub
push
dec
sbb
int3
lret
pop
xchg
clc
push
cld
xchg
sbb
mov
mov
sbb
dec
lods
jno
fsts
shrb
movb
shll
scas
mov
pop
lds
inc
sbb
jle
pop
js
xor
shlb
mov
add
ss
bound
scas
push
fists
aam
loope
fcoml
xchg
xor
cmp
and
sub
mov
movsl
pop
fdivrp
cmp
movsb
dec
and
and
lret
adc
lcall
jb
in
les
sub
inc
int
xchg
adc
adc
rcll
pop
push
sbb
je
test
mov
test
xchg
push
repnz
mov
leave
fs
cltd
sbb
mov
and
dec
cld
push
insl
mov
ja
push
js
imul
jno
inc
clc
xchg
lods
mov
stos
inc
mov
pushl
mov
xor
loop
punpckldq
mov
arpl
adc
cmp
jg
cmp
and
lds
cltd
pop
es
and
in
adc
add
pop
mov
xor
sub
pop
divb
xchg
ret
jbe
popa
inc
lret
mov
mov
jne
pop
loopne
sub
nop
test
xor
or
mov
adc
xor
mov
inc
cmp
and
imull
aaa
add
mov
inc
aas
mov
std
xchg
xor
or
pop
push
aas
mov
lds
out
inc
xor
mov
cltd
aaa
ljmp
fs
clc
mov
shll
pop
and
push
mov
scas
fnsave
jne
iret
add
push
or
mov
jge
pop
mov
movsl
xor
js
imul
xchg
inc
sbb
or
stos
ds
cltd
sbb
adc
xor
xor
cmp
call
jl
xlat
or
fwait
sbb
mov
inc
mov
in
js
dec
and
repnz
shr
aas
xchg
mov
pop
aas
mov
adc
lock
adc
add
fnstenv
mov
pop
ret
fbld
nop
ds
mov
mov
mov
push
aad
add
ret
aas
adc
cmpsb
xor
sar
fisubrl
rorb
lahf
mov
cmp
shrl
mov
adc
call
lods
negl
xor
daa
lret
xchg
pop
popa
pop
mov
add
js
in
ret
cmp
mov
loopne
inc
loope
stos
xorb
ret
mov
test
les
push
inc
sub
adc
and
mov
fldenv
inc
or
jae
xor
inc
movsb
icebp
data16
cmp
gs
int
mov
sar
dec
inc
cmp
data16
xchg
fstpt
xchg
dec
xchg
mov
xor
out
ficompl
fisubs
pop
sbb
outsb
xor
jecxz
jg
add
or
movsl
in
mov
jp
test
xor
lods
sub
adc
jecxz
inc
mov
jne
cmp
movsb
sbb
dec
or
lds
repz
pop
inc
mov
lods
sahf
pusha
data16
inc
js
in
mov
mov
push
insb
std
push
dec
inc
cmc
jecxz
mov
mov
ficoms
shr
incl
mov
iret
push
jae
outsl
imul
mov
and
dec
pop
pop
sarl
sbb
dec
clc
bound
int3
das
and
sbb
mov
mov
mov
bound
push
sbbb
lds
jbe
mov
jns
inc
clc
cwtl
sub
std
push
jo
mov
jmp
adc
pop
shrb
inc
push
mov
jecxz
ret
lret
loop
xor
add
inc
xchg
sbb
sub
outsl
push
jnp
pop
fwait
mov
push
push
push
sub
inc
cmpsl
mov
or
sub
imul
ljmp
inc
loope
scas
pop
push
mov
and
pop
push
fildll
mov
std
rol
xchg
jp
push
push
outsl
lahf
push
or
decb
imul
shrb
jno
in
fstps
arpl
cmp
xchg
mov
dec
cmpsb
call
jg
cs
cwtl
xchg
mov
or
sub
sub
bound
int
mov
lods
and
and
push
pop
repnz
les
into
ds
sub
test
lea
push
push
std
fimuls
cmp
sub
ret
loop
mov
roll
and
mov
stc
cmp
idivb
adc
je
pop
or
ret
fimuls
fsubrl
aam
cmpsb
gs
push
andl
mov
lock
imul
cmc
lret
lods
xor
outsb
push
ljmp
fadds
divl
vhsubpd
ss
push
push
data16
outsl
insl
sti
pop
outsb
sub
cmp
sbb
nop
outsl
insb
xor
xor
cmpsl
mov
in
or
jae
test
stos
xor
das
push
sub
stc
mov
outsl
ret
jge
enter
lahf
lods
jb
subb
test
fildll
dec
push
add
pop
jmp
out
roll
push
into
pop
out
fsubrs
inc
flds
mov
inc
xchg
mov
and
jp
cmc
cmp
cmp
bound
mov
push
pop
leave
into
pop
mov
jns
cmp
mov
sahf
std
jmp
rclb
xor
dec
mov
mov
ficomps
mov
idivl
mov
pop
fdivrl
add
mov
jbe
or
xor
sub
pop
std
jge
fadds
mov
in
sbb
add
and
scas
cwtl
jecxz
rolb
xor
lret
loope
sub
rol
inc
ds
or
ja
loop
or
mov
mov
push
mov
stc
xor
das
call
mov
fsts
push
sbb
mov
roll
mov
dec
xchg
ret
push
dec
shlb
insl
mov
andb
ljmp
lea
push
jae
add
pop
loope
push
js
or
in
outsb
bswap
sbb
dec
ljmp
cwtl
lea
adc
test
mov
mov
sbb
jmp
es
pushf
pop
mov
and
mov
sub
pop
push
roll
and
dec
cld
loop
lret
push
lods
in
ds
push
test
ljmp
xchg
push
imul
cmpsb
jns
xor
mov
in
test
mov
push
out
std
cmp
push
mov
shll
negb
mov
ret
cmp
adcb
fldl
xchg
sub
push
pop
int
dec
jmp
mov
leave
pop
cmp
cmc
pop
lahf
jnp
bound
push
sbb
icebp
xchg
or
js
imul
xchg
push
shll
test
inc
mov
std
popf
imul
mov
jne
dec
movsb
dec
lods
pop
pop
sti
jns
idivl
sbb
pop
leave
push
inc
sbb
outsl
aaa
adc
inc
mov
clc
jb
test
mov
mov
icebp
lods
mov
dec
fistps
jl
xchg
sbb
hlt
pusha
insl
js
pop
mulb
ret
add
dec
stos
mov
jbe
xchg
xor
les
xor
xchg
or
sbb
lock
shrl
jae
in
ja
mov
cmpsb
adc
or
and
mov
and
sub
jge
cmp
imul
scas
sti
iretw
movsl
cmp
xor
outsl
imul
aam
ficoms
rclb
mov
jl
int
es
les
push
or
sbbl
adc
push
cmp
pop
xor
xor
xchg
mov
hlt
xchg
or
loope
add
das
inc
pop
int
mov
push
xchg
out
iret
pop
ss
movlhps
jle
hlt
ficoml
mov
xchg
mov
mov
sub
jns
loopne
inc
pop
stc
xchg
mov
adc
cmc
outsl
lea
test
arpl
out
jns
add
sarb
ja
sbb
mov
insb
cmp
icebp
cmc
ret
ja
xchg
push
inc
mov
or
pop
test
ljmp
leave
packssdw
mov
mov
gs
mov
push
orl
lret
dec
jl
push
enter
mov
inc
aas
adc
insl
orb
lea
push
pop
scas
scas
mov
dec
dec
aas
xchg
scas
lcall
or
add
push
pusha
or
in
lret
mov
jecxz
pop
dec
inc
add
pop
enter
lods
inc
xor
mov
call
push
outsl
aam
out
test
daa
dec
xor
insb
sbb
push
pop
sub
or
ficoml
jp
push
sub
xor
das
xlat
or
orb
lahf
idivl
mov
imul
add
xlat
sub
mov
mov
sub
jbe
dec
ja
psrlw
ja
mov
scas
aas
pop
push
repz
loope
adc
inc
cmp
mov
rcr
xchg
mov
xchg
mov
daa
ret
call
sbb
lret
fldt
sub
outsb
cvttps2pi
adc
daa
dec
mov
fistpll
adcl
imulb
cmpsl
pushf
aad
lods
subl
lea
or
in
adc
lds
scas
and
out
cmp
test
repz
in
fstps
mov
inc
mov
jnp
je
push
xchg
dec
mov
push
cmp
fists
jb
retw
jmp
movsb
lods
sbb
popf
test
aas
xchg
jle
xchg
outsb
inc
push
jge
rorl
push
inc
lock
cmpsl
mov
adc
dec
lods
lcall
dec
and
cli
stos
push
adc
pop
cs
test
mov
scas
popf
jp
push
ret
movsb
add
pop
out
lock
orb
aam
xor
rclb
out
movsb
mov
cmp
fidivl
fistpl
xlat
and
div
mov
jmp
repnz
add
fsub
or
add
pusha
pop
xchg
add
and
gs
add
hlt
jnp
sbb
vmovapd
int
lock
mov
inc
push
test
lcall
pop
dec
add
jnp
jb
xchg
and
clc
inc
xor
cmpsb
rcrb
xchg
jae
pop
frstor
lock
testb
mov
mov
push
test
inc
ret
xchg
xchg
cmp
fldcw
xlat
fwait
cmpsl
test
adc
pop
pusha
jnp
bound
daa
in
lock
jbe
aaa
sahf
inc
sbb
xchg
std
jne
or
xchg
movsl
mov
adc
push
ja
pop
jb
iret
inc
leave
dec
pop
add
lods
rolb
bound
or
jp
pop
loop
jae
xchg
and
in
les
mov
sbb
add
mov
push
call
arpl
sub
pop
mov
xchg
ret
cmp
repz
pop
je
aam
test
xchg
sub
lret
loopne
call
xchg
jecxz
inc
mov
jo
in
gs
lea
mov
or
sbb
adc
call
outsl
iret
pusha
dec
dec
and
mov
lahf
sarl
jmp
and
mov
divl
sar
out
mov
xchg
mov
sub
mov
jbe
aam
add
sub
pop
sbb
test
mov
sub
cmpsl
cmpsb
sub
dec
cmp
dec
push
mov
cmpsl
out
sbb
sub
pop
aas
int3
shl
popa
decb
loopne
rcrb
aas
daa
pop
jbe
cltd
inc
add
mov
mov
stc
xchg
scas
aas
push
dec
mov
icebp
pop
scas
ss
or
popa
jmp
sbb
jb
mov
or
scas
sub
xchg
xchg
popf
xchg
das
push
jae
pop
cmpsb
ss
ret
jb
rcl
ror
lods
lds
or
cmc
movsl
pop
or
lods
movsb
cld
fs
pop
sti
cmp
out
jecxz
call
dec
sbb
ret
pop
aam
in
loopne
popf
outsb
lods
mov
dec
jp
out
push
xchg
jg
inc
push
adc
jg
sbb
push
dec
es
lret
push
stos
mov
and
outsb
sub
sub
out
stos
mov
push
sub
fs
mov
jne
testl
jne
jmp
aad
push
or
jg
mov
xor
xor
xchg
and
pop
add
icebp
xor
xacquire
mov
sti
cli
test
jbe
rclb
mov
sub
sub
sub
pop
jl
mov
or
xchg
pushf
add
jne
gs
test
xchg
mov
orl
cmc
sub
xor
push
push
loopne
inc
inc
mov
vpunpckhqdq
push
arpl
pop
jl
add
lret
or
or
cld
or
outsb
shrb
pusha
mov
repz
sub
jp
aaa
sub
popf
adc
inc
out
mov
lret
idivl
out
dec
mov
cmpsl
or
addr16
rcl
repz
icebp
icebp
push
mov
push
xor
stos
jns
push
dec
iret
rorb
cwtl
fcoms
lcall
adcb
mov
js
outsl
xor
inc
retw
dec
and
push
xchg
jbe
cs
mov
into
xor
xchg
inc
inc
mov
jns
lret
mov
call
fwait
scas
insb
jp
push
stos
or
out
mov
cmp
sub
inc
scas
mov
mov
sub
mov
add
mov
push
xchg
cmp
xor
mov
orl
or
jp
mov
ret
jbe
mov
fidivrl
repnz
mov
lods
dec
lahf
jle
inc
add
cli
sbb
arpl
into
shrb
loope
lds
mov
mov
sub
ja
ss
imul
sbb
mov
pop
bound
mov
sub
push
js
add
cld
xchg
aaa
sub
sub
bound
and
data16
xor
rclb
lret
and
clc
dec
xchg
sbb
ljmp
inc
sarl
xchg
cli
in
push
and
insb
shr
mov
sub
sbb
ds
pop
movsl
xor
das
fimull
repnz
stc
sbb
pop
pop
fst
adc
sub
data16
or
dec
sub
out
pop
fadd
pop
adc
jle
inc
ret
cli
sti
popf
xchg
je
add
push
mov
int
inc
call
and
je
out
xor
mov
cmc
and
insb
push
push
or
cmp
xor
mov
push
push
fsubl
sub
loope
popa
insl
inc
xchg
xor
mov
mov
xor
pop
stos
mov
lret
mov
fcompl
adc
or
inc
in
cwtl
xchg
jns
add
jae
add
lret
data16
xor
jo
mov
je
jae
jb
push
jle
inc
cmc
in
int3
push
add
inc
fistl
inc
push
cmpsb
ret
in
mov
pop
adc
test
out
cmpsl
or
shlb
cmc
push
test
in
inc
popa
and
popf
lods
mov
pop
mov
xchg
add
jne
or
mov
fmull
dec
test
je
xor
mov
xchg
pushf
es
mov
repz
pushl
test
xchg
xchg
xor
sbb
clc
and
test
jo
and
add
fwait
aaa
iret
rol
fwait
test
scas
jmp
aaa
jmp
test
add
es
imul
and
aam
push
shr
cmp
mov
pop
mov
fcom
xlat
cmp
jno
popa
out
pop
pop
out
ljmp
xchg
jne
mov
mov
test
icebp
or
daa
movsl
fwait
add
andb
scas
adc
neg
sbbl
inc
not
fisubrl
push
ret
adc
and
xchg
testl
xor
data16
push
add
or
add
add
mov
stc
mov
mov
push
cbtw
enter
mov
sub
stos
mov
sub
loop
or
test
movsl
lcall
sbb
and
and
xchg
fldenv
add
fucomip
pop
and
cmpsb
dec
adc
sub
and
loope
aad
stos
gs
pminub
out
fiadds
mov
dec
mov
rorb
adc
or
fiadds
jbe
lret
outsb
mov
add
enter
dec
dec
pop
cmp
push
lret
push
test
daa
ljmp
sbb
and
adc
pop
fsubr
pop
xor
cltd
mov
aam
mov
and
mov
pop
mov
add
add
add
push
cmc
mov
dec
data16
push
push
popf
and
adc
mov
fmuls
pushf
test
or
xchg
sbb
adc
cmp
inc
les
adc
or
push
adc
ds
xchg
and
js
xchg
sbb
mov
or
xchg
icebp
cmpsl
mov
sbb
scas
or
sbb
decl
mov
jp
int3
aaa
adc
mov
js
xor
das
cmc
cld
and
push
shr
lock
cmp
xchg
xchg
out
jge
sub
mov
pop
sub
push
inc
dec
jo
cmp
add
es
ds
xrelease
and
ljmp
pop
lcall
cld
outsb
test
push
cmpsl
mov
imul
or
adc
push
lret
mov
rorb
in
push
jmp
xor
lret
inc
adc
xor
pop
daa
repnz
pop
addr16
movsb
out
ja
pop
cmc
mov
mov
mov
jg
jmp
sub
jmp
out
hlt
add
add
in
push
mov
xchg
adc
mov
andb
or
xchg
rcr
pushf
sbb
stc
push
out
dec
inc
stos
fistps
bound
ret
subl
jno
mov
addb
fs
mov
cmp
jmp
or
xorb
sub
jecxz
mov
stc
cli
mov
jge
add
mov
push
xchg
stc
aam
dec
arpl
sbb
int3
les
pusha
mov
es
xchg
gs
in
push
cld
jo
pop
lods
mov
sbb
sbb
pop
xor
outsl
adc
mov
or
aaa
mov
dec
js
lods
data16
dec
jecxz
inc
lds
add
xchg
jae
xor
dec
stc
fsubrl
fldt
xrelease
dec
jg
stos
popf
push
lcall
icebp
cmp
push
adc
pop
jp
push
sti
ljmp
mov
pop
repnz
sub
das
fldt
ret
sub
scas
mov
push
adc
loopne
jo
pop
idiv
cld
cmc
into
int3
xchg
cmpsl
inc
pusha
xor
pop
dec
cmp
inc
repz
imul
push
sub
outsb
pusha
pusha
pop
das
jle
sub
mov
decb
arpl
lods
addb
or
add
inc
and
call
mov
scas
fst
or
dec
out
lods
sub
fadds
xor
sbb
out
dec
shlb
paddsb
repnz
push
push
arpl
test
mov
dec
dec
adc
scas
aas
fwait
push
push
mov
dec
movsl
sbb
add
sbb
mov
and
mov
adc
pop
add
jge
repz
insl
stos
inc
cmpsl
or
jmp
sahf
aaa
sarb
sub
cmp
push
shlb
fs
sub
jo
pop
dec
push
push
adc
iret
mov
adc
sub
loope
out
xchg
xorb
jae
push
jp
push
add
mov
je
push
jno
ds
push
aad
xchg
rcll
adc
jg
fwait
outsb
cmp
dec
aam
icebp
mov
sbb
add
test
lahf
scas
loopne
or
xor
testl
subb
cmp
xor
ds
lret
andb
mov
into
add
stc
push
in
ds
push
in
das
adc
sub
fimuls
movsl
mov
sub
jns
data16
lock
in
dec
and
sbb
push
xor
push
pop
sbb
dec
xchg
ret
jg
xor
shl
loopne
pop
pusha
jne
movsl
sbb
lcall
push
das
adc
into
pop
andb
ja
mov
lret
ret
je
adcl
cmp
lret
popa
add
ret
mov
xchg
movsl
add
stos
cmpsb
inc
inc
dec
icebp
lret
packssdw
shrl
sub
and
sbb
inc
in
into
fsts
push
xor
fimuls
jg
inc
xor
in
add
je
test
push
sub
xrelease
xor
push
or
xchg
jo
or
rorl
js
pusha
pop
sub
incl
daa
dec
idiv
fstl
pop
xchg
ljmp
shrl
mov
loop
sbb
std
xor
cmp
pushf
mov
sti
movsb
repnz
ror
inc
aam
push
xor
ja
dec
dec
test
in
sbb
int3
or
std
out
jno
push
jno
cmpb
mov
or
mov
sub
and
sti
popf
test
repnz
movsb
cmpsb
dec
cltd
fs
and
xor
lods
pop
aas
scas
pop
rorl
cli
dec
mov
std
mov
cmp
shlb
push
mov
jns
rcll
mov
test
sbb
popf
jo
jp
dec
flds
nop
or
js
push
stos
push
mov
cmpsw
jbe
mov
filds
cwtl
divb
jl
mov
xor
mov
jl
ret
push
repz
cmpsl
push
cltd
das
out
xchg
out
fsubs
cmpsl
ljmp
ds
imul
clc
cmp
leave
fs
fmul
jle
or
cmp
fstpt
jbe
add
mov
cmp
inc
inc
popf
int3
loope
loop
ss
lahf
sbb
xor
arpl
sbb
mov
pop
cwtl
sbb
jae
iret
and
jp
xorl
test
lcall
movsb
jge
mov
mov
mov
add
push
jb
push
cld
clc
sub
xchg
lret
sbb
sbb
or
push
jp
pop
addr16
sbb
stc
rclb
inc
xor
nop
push
xchg
fdivs
push
aaa
jl
dec
in
sbb
in
mov
mov
mov
cltd
push
test
xchg
or
inc
adc
mov
dec
in
mov
dec
in
push
data16
shlb
dec
push
fucomi
push
or
add
mov
sub
mov
scas
into
js
cmp
pop
dec
or
sbbb
aaa
insl
inc
cmpsl
dec
es
xor
fisttpl
or
mov
xchg
test
sub
adc
push
rcr
push
dec
in
sub
mov
or
scas
stc
sarl
cmp
adc
ja
mov
jno
xchg
arpl
xchg
mov
xchg
mov
inc
mov
adc
test
lret
pop
xchg
mov
cmovg
push
xchg
pop
adc
scas
nop
pop
cmpl
adc
movsb
rcrb
iret
repz
adc
cmp
pop
scas
pop
jmp
adc
mov
push
mov
bound
inc
insl
dec
push
out
cli
ja
das
fwait
xor
jecxz
or
aas
dec
pop
or
mov
and
pop
mov
dec
std
cmp
out
daa
xchg
sbb
xor
lods
sbbl
adc
push
sub
or
and
jge
fstpt
cmpsl
stos
subl
cld
enter
cwtl
in
jns
sub
jecxz
inc
inc
add
mov
out
mov
push
lea
adc
adc
jle
pop
adc
mov
xchg
xchg
aaa
ret
or
stos
mov
inc
jae
mov
bnd
jl
push
push
mov
mov
loop
imul
and
or
leave
es
pop
cld
lcall
in
pop
push
clc
pause
cmp
cmpsb
cmpb
xchg
sub
ret
cmpsl
ret
scas
imul
repz
aas
push
fidivrl
cmc
cmpsb
sbb
xchg
mov
mov
repz
cmpsl
mov
and
mov
in
sbbl
cmpsb
inc
cmp
lahf
sub
pop
xor
jbe
push
test
out
mov
mov
divb
mov
ljmp
mov
xor
add
jg
inc
movsl
movsl
mov
arpl
cwtl
inc
lea
dec
push
pushf
mov
pop
mov
jbe
dec
stos
repz
roll
bound
or
ret
out
inc
out
pop
sbb
into
cwtl
jmp
push
pusha
xor
fnclex
pop
sbbl
jb
push
xor
das
fiaddl
jp
pop
mov
out
loopne
or
cli
mov
mov
cmpsb
aam
lahf
add
mov
out
sahf
hlt
mov
adc
jae
pop
int
mov
jl
add
mov
out
mov
ss
push
push
mov
outsl
dec
popf
fisubrs
mov
sqrtps
adc
mov
std
push
jecxz
lods
lahf
rcrb
xchg
int3
mov
jg
cmpsl
inc
pushf
fldl
xlat
in
and
stos
and
out
stc
pop
fwait
aam
adc
dec
popa
inc
pushf
fxch
sub
inc
dec
mov
cmp
scas
sbb
sub
jle
aam
mov
mov
test
adc
ds
sub
addr16
dec
push
movsl
mov
jbe
insl
jge
xchg
xchg
lret
or
notl
iret
mov
jae
lods
rorl
outsl
popa
mov
jb
iret
inc
or
inc
jnp
jmp
int3
pop
sub
xchg
add
pop
jns
add
cmp
cli
fbstp
addl
sbb
cmpsl
dec
subl
lret
in
lret
cmp
pushf
hlt
and
aaa
shlb
pushf
jb
push
addr16
clc
pop
or
lcall
xchg
jp
mov
inc
adc
and
pop
pushf
aas
test
xchg
mov
dec
pop
push
sub
stos
jecxz
ja
mov
push
push
fsts
sub
test
xchg
mov
ja
fnstenv
dec
adc
in
loope
loope
es
xor
mov
or
jg
mov
std
or
xor
dec
stos
lock
or
shrb
push
icebp
std
push
pop
jp
loopne
and
jecxz
jo
pop
mov
inc
xor
ljmp
mov
mov
push
or
in
jbe
xlat
aas
hlt
push
xor
fsubr
mov
or
popf
pop
xchg
xor
outsl
icebp
push
js
cmpsl
and
adc
mov
mov
lea
pop
push
cmp
data16
inc
cli
into
pop
fmull
into
sub
mov
pop
fs
ds
xor
sub
push
pop
mov
out
push
idivl
sbb
xor
xchg
pop
cmpsl
xor
outsl
jo
add
mov
sbb
in
dec
int3
lds
jg
lret
ret
xchg
adc
sbb
jnp
sahf
xchg
mov
push
cmc
xor
jmp
data16
repz
lahf
jne
sahf
lods
sbb
in
push
les
add
pop
mov
popf
fcoms
push
mov
jnp
shrl
adc
push
jle
adc
mov
cmpl
stos
mov
xor
fisttpll
ljmp
xchg
jecxz
jno
ds
imul
sub
or
ss
repnz
movsb
cmp
addr16
adc
cmpsl
int3
pop
mov
dec
aam
and
inc
cmp
test
add
loop
mov
cmp
aad
push
test
outsl
popf
xor
daa
mov
or
hlt
pop
sub
mov
cmp
xor
lods
insl
repnz
mov
jmp
and
aaa
pop
sub
mov
jno
shll
fiadds
sub
jo
mov
push
mov
sbb
mov
mov
cmpsl
fsubrl
cltd
mov
add
push
stos
mov
pusha
jnp
ret
ja
mov
xor
jo
and
cwtl
test
loope
or
pop
xor
mov
test
addr16
and
push
addr16
or
subb
jae
inc
stos
mov
addr16
xor
ja
ja
mov
xchg
pop
mov
sbb
adc
inc
test
aad
xor
push
scas
sarl
call
mov
sub
push
xlat
add
add
push
pop
idivl
or
sub
mov
jno
loop
enter
arpl
pushl
and
or
jg
or
add
fmull
xchg
scas
int
jns
bound
sti
in
test
sub
stos
pop
dec
fwait
out
add
inc
imul
push
gs
sub
mov
mull
mov
push
xchg
adc
cmpsl
inc
pushf
call
mov
mov
sbb
lea
xchg
sub
dec
nop
repnz
hlt
jae
ljmp
sub
sbb
mov
cmpb
jb
pop
mov
cmpsl
cmpsl
lock
dec
xchg
add
xchg
dec
js
or
sbb
je
lcall
cli
mov
inc
add
fldl
lret
pop
sarb
in
push
mov
adc
rorb
sub
or
lods
fwait
cmp
mov
add
into
jmp
repnz
mov
sbb
adc
mov
in
adc
jl
xchg
adc
ds
out
inc
xchg
sub
sub
call
test
fadd
in
in
insb
repnz
repz
and
in
hlt
xor
test
jae
jb
push
testb
push
sbb
andb
mov
pushf
stc
pop
pop
stos
je
in
sub
adc
sti
dec
adc
inc
cld
jg
shrl
scas
push
pop
xchg
and
ret
adc
mov
mov
mov
xchg
adc
mov
mov
jne
cmpsb
scas
add
jp
in
xor
repz
bound
mov
add
add
js
cld
pusha
xchg
push
rol
cmc
rcrl
rorl
test
or
pop
pop
cmp
xchg
pop
adc
sbb
mov
add
xchg
call
push
add
popa
mov
repnz
lock
lcall
std
sti
dec
jns
lods
daa
clc
ret
in
call
pushf
inc
cmp
mov
lret
pop
in
mov
arpl
aaa
pop
stos
push
push
xor
rcrl
dec
int
fwait
loope
in
shll
add
xchg
sub
push
or
cltd
push
scas
push
or
jae
pop
sbb
rcrb
fbstp
adc
repz
mov
pop
push
addr16
or
clc
clc
addb
addr16
xchg
clc
sbb
adc
loopne
test
inc
lea
jbe
pop
bound
les
cmp
lods
adc
outsb
icebp
xor
imul
jo
ljmp
sarl
pop
xor
stos
mov
aaa
aad
movzbl
add
jmp
repz
imul
mov
cltd
inc
faddp
mov
rcrl
pop
ret
cwtl
xchg
popa
xlat
fprem1
sbbb
hlt
sarl
aas
xor
inc
cmp
ret
repnz
in
xchg
aam
sbb
push
inc
sub
xor
push
xlat
negb
adc
lds
pop
mov
push
and
aaa
movsl
call
sub
mov
adcb
push
pop
xchg
das
dec
out
add
xchg
jmp
enter
lds
iret
sbb
mov
into
push
pop
popf
hlt
in
and
push
jns
or
cld
ret
sti
push
popa
mov
xor
fisubrs
in
fsubs
orb
ljmp
and
sub
dec
rorb
popf
stos
incb
je
xchg
dec
sar
fsubs
outsb
test
in
inc
cmp
mov
adc
vpunpckhdq
jmp
adc
cwtl
imul
or
movsl
push
repz
sbb
lods
lds
int
test
cli
test
jle
jecxz
or
xor
pop
xor
lahf
cmp
sub
push
mov
lret
std
gs
xor
stos
imul
mov
xchg
mov
cmpsb
les
aaa
push
xor
lea
xchg
test
sub
inc
inc
imul
xchg
xchg
and
in
out
lahf
or
and
jg
push
inc
scas
out
xchg
mov
aaa
ret
jmp
adc
les
mul
push
lock
push
xor
shr
pop
sub
xor
mov
push
xchg
xor
daa
in
cmp
mov
cmp
adc
movsb
and
xchg
addl
or
cmp
test
mov
fcoml
mov
sbb
xorb
movsl
cmp
repnz
xchg
movsb
fsubl
inc
add
insl
dec
pop
std
adc
adc
mov
dec
jmp
mov
into
aaa
cmp
arpl
enter
mov
xchg
mov
adc
cmpsb
cmc
xchg
adc
gs
sbb
movsb
mov
mov
mov
lcall
mov
lcall
mov
insb
cmp
movsl
mov
enter
mov
cmpb
ret
icebp
lds
es
cld
sbb
sub
and
sbb
add
pop
idiv
les
fcmovu
dec
adc
test
xor
test
lods
in
lahf
data16
xor
mov
mov
lcall
pop
adc
call
and
dec
mov
fstpt
mov
test
sub
je
ds
stos
cmp
dec
fdivr
fldl
sbb
xchg
push
cld
or
cmp
in
idivl
movsb
adcl
mov
push
jge
mov
inc
shll
xchg
loopne
sbb
cmp
adc
and
mov
les
or
daa
mov
cmp
ret
adc
cli
mov
rcrb
ret
mov
lea
jle
sti
adc
pop
pop
xor
lcall
xchg
and
push
or
sbb
or
sti
push
inc
inc
rolb
movsb
push
inc
test
or
mov
or
lods
mov
fisttpl
rclb
jnp
repnz
sbb
xchg
push
lds
cmpl
insb
mov
or
sub
cmp
cld
testb
xchg
mov
mov
push
dec
or
orb
mov
and
fisubs
adc
clc
stc
sub
push
push
movsl
adc
lea
lock
cmpsb
push
xor
cmc
push
xor
test
lahf
inc
cmp
arpl
in
icebp
adc
fwait
mov
dec
fmulp
sub
daa
icebp
imul
es
and
rolb
aad
repnz
stos
out
mov
cmpl
mov
sbb
repnz
sub
lods
notb
jmp
xor
xchg
mov
insb
shll
shrl
pop
aaa
mov
lcall
and
inc
lds
dec
movsb
pop
push
sub
mov
push
loopne
mov
mov
aad
inc
fs
popf
insb
jae
dec
or
shrb
mov
movsb
jle
xorl
mov
pop
fstpl
mov
cld
sbb
aad
imul
adc
imul
xchg
inc
aad
jbe
test
push
addr16
xchg
jge
sahf
jecxz
out
int3
loope
repz
lcall
mov
push
or
fdivrl
vmovapd
cmp
gs
pop
aaa
das
lods
pop
fwait
xchg
pop
adc
insl
repz
push
pop
inc
xor
xchg
sbb
out
jns
pop
movsb
adc
imul
arpl
stos
popa
add
adc
mov
or
mov
fimull
xor
jecxz
mov
mov
lahf
mov
cmp
into
xchg
pop
imul
hlt
movsl
movsl
push
loope
jge
mov
cmp
pop
cmp
jo
hlt
outsl
divb
xor
outsl
outsb
mov
push
xchg
ret
shlb
jp
push
fyl2x
cli
push
jbe
dec
or
jge
xchg
and
stos
inc
cmp
jb
insl
or
popa
ja
fwait
jbe
clc
pop
ficomps
imul
out
aas
xchg
adc
movsb
out
xchg
inc
sbb
dec
cmp
test
cmpsb
dec
add
ret
xor
ret
inc
adc
cmp
mov
and
lods
jns
js
cmp
jbe
lock
adc
dec
jp
insl
mov
ds
xor
lock
sub
out
or
push
and
xchg
fstl
cmp
pop
out
pop
movsb
shll
outsl
jns
movsl
push
mov
addr16
dec
pop
scas
out
mov
mov
pop
sbb
jb
fimull
stos
fwait
popf
sub
scas
sbb
notb
call
xor
mov
or
push
and
data16
fcomps
lods
ret
xchg
inc
jecxz
dec
leave
mov
ljmp
push
push
sub
outsb
jmp
pop
shrl
mov
sub
cmp
push
enter
mov
sbb
jnp
pop
sub
outsb
mov
adc
out
fs
mov
cmpsl
sbb
mov
cltd
mov
xlat
enter
sbb
xor
arpl
jno
inc
dec
int3
lcall
cmp
fildll
xchg
int3
xchg
in
sbb
xchg
adcb
adc
mov
jle
xchg
shll
pop
subb
test
fimuls
mov
adc
push
ret
fwait
xchg
into
xor
clc
mov
repz
or
mov
or
and
xchg
ss
repnz
pop
inc
popa
sub
adc
test
inc
test
pop
imul
mov
add
mov
mov
int3
mov
sbb
hlt
sub
push
loope
jle
jbe
in
push
imul
and
sbb
push
sub
sbb
sub
rclb
pop
dec
sub
imul
test
mov
stos
leave
icebp
mov
and
out
dec
sahf
out
mov
mov
add
bound
fs
mov
mov
mov
testb
test
aam
in
ja
in
inc
jns
icebp
mov
cmp
inc
add
int
into
adc
push
mov
add
nop
dec
arpl
cmp
arpl
sub
xor
repz
fstp
lret
xlat
gs
aam
cmp
jecxz
aad
rcrb
out
mov
xor
jno
inc
je
gs
aam
scas
stos
lock
aas
pop
fisubrl
lea
mulb
sarl
out
popa
mov
mov
leave
push
addr16
sub
scas
push
loopne
pop
xor
push
inc
hlt
shrb
cld
lret
push
cltd
pop
into
in
push
pop
mov
pushf
std
cmp
int
mov
mov
xchg
outsl
pop
mulb
popl
xchg
sub
sub
and
cmpsl
push
cmp
sbb
mov
add
mov
movsl
popa
adc
pop
jb
and
jmp
repz
rcrb
daa
add
and
pop
sbb
pop
sbb
cmpsl
ljmp
aad
inc
outsl
fstps
xor
and
testb
xchg
mov
xor
mov
aam
mov
inc
shr
xchg
push
push
popf
popf
push
sub
xchg
fadd
out
dec
repz
or
ror
test
add
mov
xchg
or
or
mov
mov
mov
lds
not
mov
pop
or
xor
lahf
mov
mov
dec
pop
jmp
inc
scas
dec
enter
sbb
fcmovne
jb
xor
ret
inc
pushf
mov
repnz
and
jns
pop
iret
xor
xchg
push
int3
or
mov
xchg
andl
rcrb
jg
jle
sti
subl
push
fistps
dec
cmp
push
inc
mov
xor
adc
imull
add
movsb
fisttpl
jo
sbb
lcall
and
lahf
dec
in
cmp
or
loop
push
dec
xchg
lahf
push
pop
cltd
stos
clc
inc
jg
imul
loopne
adc
out
aaa
push
mov
das
lcall
jmp
lret
in
les
add
push
push
addb
inc
stos
sbb
call
xchg
pop
sbb
adc
or
arpl
lret
iret
cmpsl
mov
add
mov
lahf
push
jne
loopne
mov
aam
dec
jae
orb
jg
pop
pop
inc
rcrb
xchg
jns
xor
add
dec
imulb
push
jb
das
int
popl
mov
mov
rcrl
mov
push
cmp
inc
dec
pop
mov
mov
daa
jl,pt
jo
cmpsb
in
mov
add
add
shrl
lock
jb
cmpsb
and
sahf
xor
jecxz
xor
adc
xchg
and
stc
daa
gs
mov
and
sbb
jge
aad
and
mov
mov
fs
aad
rcll
fwait
lret
insl
mov
bound
arpl
pop
jnp
out
stc
insl
popa
in
cmpb
add
stos
jo
leave
rep
loope
xchg
sub
push
adc
mov
dec
orb
dec
loop
push
push
cmp
add
ja
mov
xchg
insl
ret
mov
cmp
into
ss
or
and
fidivl
out
mov
js
sti
dec
negb
add
dec
insb
sarl
push
ret
inc
and
mov
adc
mov
and
lcall
dec
jle
arpl
push
lcall
xchg
inc
sub
mov
rcl
sarb
pop
cld
and
fs
mov
cmp
jmp
jge
mov
in
jl
sub
lods
stc
pop
xor
mov
loopne
cmp
inc
mov
lea
ss
pop
out
jle
popw
or
add
int
aam
pop
cmp
add
cli
adc
or
fildl
dec
in
xchg
jae
add
rcl
loop
std
and
inc
fimuls
scas
mov
or
movsl
cmc
xchg
mov
lods
or
cs
lahf
inc
mov
adc
or
aas
mov
inc
es
mov
and
and
dec
rolb
std
sub
cmpsb
sub
pop
xchg
dec
imul
lods
rcll
jbe
mov
or
loope
fistpl
cs
jle
cmpsb
sub
nop
jns
scas
hlt
int3
push
inc
test
sbb
push
or
or
adc
dec
repz
xchg
xor
shlb
add
aaa
inc
lret
inc
add
and
pop
fwait
ret
arpl
push
or
fscale
push
rorl
pop
mov
pop
es
in
jb
insb
and
sbb
adc
inc
adcb
jno
push
movsl
sahf
sbb
scas
push
insb
stos
xorl
sub
push
enter
push
push
repz
xchg
negb
loop
testb
enter
add
push
leave
pop
push
jge
int3
jmp
pop
xor
pop
outsb
int
out
loop
cmpsb
and
cwtl
mov
jbe,pt
enter
push
and
sbbl
in
inc
or
testl
rcrl
mov
mov
jo
aam
push
lock
jbe
mov
loop
push
cwtl
pop
pop
testl
or
lahf
and
mov
cmp
clc
add
inc
lahf
andb
loope
push
testb
mov
out
add
std
setne
jnp
call
cmc
sbb
fwait
xor
jnp
filds
cmp
inc
push
jge
inc
int3
pop
xor
cmp
dec
push
mov
push
pop
pop
dec
jb
addb
mov
aaa
push
mov
inc
orb
push
sub
cmc
pusha
sbb
add
or
bnd
sub
lods
loop
sbb
shrw
push
cmpsl
or
mov
sbb
push
jl
jge
inc
cmp
pop
pop
aas
jge
ss
pop
add
jg
jmp
dec
nop
mov
in
mov
xchg
xorb
sub
mov
and
or
xor
jecxz
xor
jmp
xchg
push
hlt
cmp
and
arpl
push
pop
add
or
jnp
in
and
cmp
jecxz
pop
xchg
push
mov
sbb
jnp
push
je
ficomps
pusha
pop
ficompl
mov
daa
outsb
enter
bound
or
xchg
cmp
add
push
jp
in
push
test
xor
sub
push
adc
enter
inc
mov
or
mov
dec
lcall
push
cltd
or
cmp
data16
sti
mov
xchg
inc
imul
les
ret
and
shr
or
push
fsubrs
cwtl
fisubrs
fmull
sahf
cwtl
push
sub
cmc
loop
sbb
mov
mov
pop
xchg
push
cmpsb
jb
mov
addr16
push
mov
cmp
add
outsl
aad
ret
scas
and
sarb
xor
cld
or
dec
enter
test
sti
jbe
cmp
movsb
pop
dec
inc
jns
lret
lcall
out
cs
gs
or
jmp
jb
or
push
xor
cmp
cmc
into
aaa
xor
and
cld
into
in
xchg
ffreep
cmc
xchg
push
jae
or
mov
pop
in
mov
sbb
cmpsb
inc
cmpsl
push
ds
jmp
mov
stos
insb
push
into
or
insl
and
subb
lds
test
jl
les
mov
cmpsl
push
pop
or
lock
xor
pushf
mov
xchg
xor
out
jbe
sbb
adc
push
mov
jb
fwait
stos
adc
mov
lds
mov
push
pushf
xchg
cmp
pop
shlb
aas
daa
ret
xchg
jb
cld
ljmp
data16
lcall
stos
jbe
sbb
in
popf
leave
inc
xor
cmp
call
push
inc
roll
pop
add
xor
inc
push
insb
and
repnz
add
bound
loop
pop
xor
call
mov
cmp
dec
incb
xor
jmp
cmovge
mov
mov
inc
icebp
int
lcall
cmp
mov
sbb
mov
lret
aas
mov
cltd
in
xchg
add
repnz
adc
push
xor
adc
inc
repz
pop
mov
adc
adc
fs
int3
add
cmp
lods
lcall
xchg
icebp
jno
addr16
shr
adc
movsb
shr
xor
jno
push
jle
and
mov
ret
mov
dec
leave
movsl
popa
jecxz
lret
ret
outsl
jbe
test
dec
clc
mov
stos
xchg
sub
cmc
imul
das
sbb
cmp
loope
fwait
pushf
outsl
movsb
cmpsw
mov
fidivrs
movsb
ret
cmc
inc
fstpt
mov
cmpsb
jge
xorl
mov
cmp
push
cmp
frstor
enter
fst
and
repnz
push
jl
mov
aaa
fidivrl
pop
add
in
sub
push
scas
xor
or
cs
sub
xchg
lods
add
mov
jge
icebp
dec
xor
and
inc
clc
add
add
xchg
insl
fdivs
inc
sbb
jecxz
insl
orl
sbb
in
cld
push
or
inc
pop
cld
jo
mov
in
scas
popf
scas
sub
mov
mov
bound
or
mov
out
dec
and
push
in
aas
stos
mov
adc
cli
push
and
and
pop
stos
movsl
jnp
mov
aam
xchg
push
jl
push
add
pop
mov
daa
xchg
mov
cmp
sub
adcl
jle
cmpsl
fstps
out
ja
mov
pop
push
adc
sbb
pushf
fsubrl
sahf
arpl
shlb
inc
mov
mov
jns
clc
jbe
lret
call
shr
add
xor
stos
dec
sahf
mov
cli
loopne
ss
in
cli
pop
imulb
mov
in
das
lahf
push
xchg
loope
repnz
sub
hlt
dec
sbbl
add
jae
sbb
jg
xchg
loopne
cltd
sub
sub
leave
and
lock
cltd
pushf
jle
pop
incb
xchg
jns
rcrl
aad
adc
ss
test
push
jns
outsb
jo
mov
xchg
xlat
sbb
gs
fisttps
hlt
push
ret
lahf
nop
sbb
out
dec
mov
mov
inc
pop
jle
inc
add
xchg
inc
xchg
xchg
or
add
inc
push
arpl
adc
jecxz
mov
jno
dec
js
cwtl
jo
and
jbe
movsb
dec
insl
push
adc
sbb
cmp
jbe
lea
fs
push
mov
xchg
leave
push
gs
push
dec
push
movsb
xlat
out
repz
cwtl
in
lods
xchg
jge
outsl
lret
loopne
fwait
repz
lds
mov
pop
test
insl
jle
inc
adc
pop
jno
jle
and
inc
and
scas
jge
lahf
cmp
mov
shlb
inc
xor
or
movsl
add
setns
dec
pop
aaa
sub
lret
mov
cmp
mov
fsubrs
xor
add
cmp
pop
out
scas
fwait
dec
stc
dec
out
mov
rorb
fwait
xor
and
add
rorl
or
adc
test
add
adc
or
sbb
jge
push
int3
clc
jo
in
add
adc
jne
adc
out
push
mov
cmpsb
xchg
cmpsl
fidivrs
scas
sbb
push
in
hlt
jbe
or
jns
mov
das
cli
pop
or
lcall
push
loopne
pop
rorl
jno
dec
push
lock
gs
mov
inc
lods
sub
in
insb
cli
ret
or
out
inc
jnp
and
push
mov
push
push
ljmp
pop
mov
dec
and
adc
add
nop
add
movsb
cwtl
cmp
insl
cmpsb
adc
lds
xor
pop
mov
imul
inc
and
push
fisubrl
jp
mov
idivl
xchg
stos
test
mov
rcrl
sub
jl
mov
cli
inc
inc
mov
jbe
daa
in
lods
xchg
testl
lods
lea
lahf
mov
enter
xchg
shll
add
push
movb
sysexit
mov
cmp
mov
inc
popf
adc
fiaddl
xchg
lods
pop
in
andl
ret
in
xor
push
mov
ljmp
shlb
lea
adc
jbe
fiadds
mov
push
mov
cs
call
nop
lods
push
imul
rorb
sarb
jle
mov
mov
popf
movsb
call
jbe
ds
fiadds
jg
shlb
jbe
mov
pop
ja
mov
cmc
or
mov
mov
iret
aaa
lock
out
fnstcw
arpl
mov
inc
in
cmp
xor
pop
scas
xlat
jmp
movsb
mov
std
and
or
jge
add
mov
rolb
inc
inc
xchg
or
sbbb
lahf
and
adc
sub
mov
pop
mov
xchg
mov
shrb
jmp
push
lods
iret
jmp
lds
into
or
dec
stc
std
sub
push
sbb
scas
dec
dec
popa
lcall
out
std
push
int
in
xor
push
xor
subb
outsl
gs
jp
push
sbb
ja
jae
ds
test
jecxz
nop
sub
xor
movsl
orb
and
cmp
daa
cmpsl
push
out
jbe
or
bound
and
and
sti
dec
xchg
mov
mov
cld
rcrb
in
and
xchg
pop
aam
jge
adcl
mov
lcall
jns
pop
cmp
scas
and
dec
lahf
adc
push
xchg
sub
cli
in
push
imul
cmp
and
push
mov
push
fstps
sahf
repz
in
adc
ret
in
mov
push
dec
xchg
adc
mov
sub
fcmovne
cli
imul
dec
cmpsl
push
jo
cli
arpl
in
jne
mov
hlt
inc
lods
fsts
cmp
out
shlb
das
loop
repnz
pop
popf
insl
popf
inc
pop
in
in
cmp
loope
jle
loopne
adc
xchg
mov
adc
rcrb
andl
mov
jl
cmpsl
mov
jp
add
in
adc
out
cmc
jg
ret
ja
js
mov
out
sbb
sub
ljmp
leave
dec
imul
faddl
sarb
aas
js
enter
xor
cwtl
jmp
fwait
or
in
fstpt
sbb
xor
inc
ret
je
pop
ss
fisttpll
push
mov
dec
fucomi
sub
arpl
sti
mov
cmp
loopne
mov
sub
popf
out
xor
cmp
sahf
or
int3
pop
mov
outsb
jnp
or
arpl
mov
data16
arpl
sti
mov
enter
jns
enter
cmp
or
add
pop
shlb
adc
clc
inc
cmpsl
leave
inc
movsl
es
jo
or
jns
mov
fcmovnu
or
dec
inc
idivl
cmp
or
dec
pop
or
fwait
cmp
fwait
add
int3
pushf
jmp
push
cli
mov
ss
push
mov
out
mov
mov
sub
push
popf
inc
out
iret
mov
add
cmc
xchg
mov
add
dec
adc
dec
or
pop
ja
test
rcll
mov
movsl
jno
mov
sub
fcomp
dec
and
inc
sbb
jnp
aad
clc
cmp
inc
mov
shll
cmpb
mov
pop
stc
mov
aas
cmp
or
sub
in
dec
sub
cmpsb
iret
int
mov
xchg
int3
jmp
xor
pslld
cmpsb
and
aaa
cmp
jp
movsb
fsubrs
int
inc
or
movsb
pop
xchg
div
ds
pop
arpl
dec
movsl
in
push
lods
out
xabort
adc
stc
jnp
inc
popf
mov
mov
sub
jb
es
shufps
in
push
fwait
mov
mov
std
shlb
and
ret
mov
xchg
repnz
jns
enter
incb
xchg
into
lahf
sub
xchg
lahf
sti
sahf
and
add
nop
inc
ss
jp
das
into
xor
cmpsl
add
and
jl
mov
scas
xlat
dec
cmp
push
or
mov
subl
add
mov
push
mov
pop
jae
cmp
jnp
repnz
cli
das
rol
cmp
repz
adc
jmp
aam
test
pop
aaa
mov
xchg
fcmovnb
dec
mov
popf
rclb
fdivrl
mov
daa
xor
leave
hlt
and
imul
cmpsl
sub
fwait
or
jge
inc
enter
divl
ds
push
stc
stc
gs
lock
cmp
iret
cld
loopne
cmp
pop
mov
stc
fs
mov
push
lret
popf
xchg
arpl
ds
div
jl
rcrb
inc
push
mov
mov
add
fucomip
mov
xor
inc
push
rcl
hlt
cmpb
mov
sub
mov
pop
fldcw
stc
imul
xchg
add
punpcklwd
call
or
sbbl
push
das
pop
pop
pop
mov
fimuls
mov
in
data16
inc
xchg
daa
jl
int3
aad
xor
movsb
push
push
push
popf
cmc
fstpt
rol
setb
cmp
fmuls
sub
lret
leave
and
and
lahf
cltd
and
test
push
pushl
xor
nop
pop
dec
push
shll
jo
mov
insl
sahf
call
mov
stc
pop
mov
fldenv
outsb
add
sbb
ljmp
lods
mov
sahf
pop
outsl
stc
mov
add
pop
xchg
leave
adc
ret
jns
jmp
pushf
cld
je
push
adc
jmp
cmp
aad
fnstcw
loop
es
daa
cmp
adc
mov
leave
aaa
adcl
push
dec
pop
testl
mov
clc
jge
inc
imul
push
sbb
scas
fisubs
iret
nop
icebp
mov
sahf
cli
sub
imul
inc
dec
por
sbb
xorl
push
fdivrs
cmpsb
mov
in
jge
sub
addr16
ret
jle
rolb
mov
loop
jmp
mov
add
loop
push
xchg
shlb
xchg
loop
mov
sub
push
mov
sbb
or
push
lahf
divl
pop
xor
pop
push
aaa
cmp
filds
cmpb
test
adc
out
inc
nop
jb
xchg
insl
mov
pop
pop
xorb
nop
mov
js
cmpsb
in
frstor
pop
out
xchg
mov
ja
scas
or
sub
leave
jge
inc
or
push
xchg
out
inc
movsb
imul
mov
push
test
dec
jo
mov
fiaddl
sub
xchg
and
or
mov
ljmp
test
and
xor
pop
sbb
inc
sbb
out
cmp
and
and
movsb
sub
mov
fwait
jp
leave
stc
hlt
mov
ret
xor
test
pop
pop
add
push
mov
jno
and
jecxz
repz
xchg
mov
and
lret
jae
aad
sub
arpl
je
pop
dec
inc
mov
dec
jo
mov
mov
push
sub
sti
pop
inc
gs
lahf
ss
xchg
mov
lahf
imul
add
pop
cli
push
icebp
mov
in
xor
cmc
pop
xchg
rcll
int3
xchg
jns
scas
mov
lcall
push
mov
js
rcll
push
mov
pop
xor
pop
rolb
mov
push
fwait
pop
fucomip
push
mov
and
xchg
cmp
add
sub
add
fnstenv
inc
mov
aam
pop
rcr
cmp
mov
jg
sub
pop
and
xor
outsb
or
pop
sbb
movsl
add
inc
pushf
popf
pop
add
cmp
cld
add
outsl
xlat
in
ja
sub
in
shl
pop
pusha
ds
add
call
cs
js
adc
inc
testl
lcall
mov
sub
test
adc
stos
test
mov
cltd
mov
cmp
or
shrb
imul
les
xchg
daa
jns
pop
das
pop
je
add
hlt
dec
mov
pop
xchg
sbb
mov
add
or
pusha
push
mov
lret
cwtl
and
in
mov
dec
push
mov
dec
inc
jmp
or
lods
xor
sar
pop
adc
dec
cmp
sbb
outsb
add
fsubl
push
fnstcw
pop
mov
sub
mov
xor
and
pop
jae
aad
leave
fldenv
jo
sbb
cmp
fwait
out
adc
pop
mov
mov
out
jmp
andl
sub
dec
vpmacsdql
repz
add
adc
jmp
aas
iret
sahf
testl
xchg
icebp
cmpsb
inc
cmpsl
pop
mov
mov
movsl
and
and
jae
sub
xchg
mov
pop
jb
dec
pushf
fistl
jg
or
jp
dec
or
jp
mov
push
gs
fcomps
movsb
js
sbb
lret
scas
and
dec
and
imul
or
xchg
sti
xchg
push
xchg
pop
je
fldenv
rcll
and
mov
cmp
out
pop
jmp
out
xchg
xchg
rcrl
cmp
or
testl
mov
xchg
and
pop
pop
mov
aad
ljmp
sub
in
mov
pop
pop
icebp
sub
in
out
cmpsl
js
mov
bound
leave
lods
ret
jb
mov
gs
sbb
mov
popf
pop
lcall
inc
nop
mov
add
push
mov
cltd
xchg
xor
in
loopne
pop
gs
push
adc
cld
jns
rcrl
adc
push
push
lcall
and
cmpsb
cmpl
test
pop
sar
or
cmpsl
pop
cs
jae
cli
rorb
clc
jg
dec
jbe
jbe
jns
cmp
emms
adc
add
scas
dec
mov
lret
mov
imul
lock
ret
lods
mov
movsl
push
or
mov
cmp
enter
sub
loop
fbld
rcrl
out
stc
xor
gs
xor
outsb
int3
xlat
pop
sbb
filds
add
push
mov
cmp
xor
ja
cmpl
or
pop
add
add
pop
jmp
sbb
fmull
aam
mov
test
pop
fnstsw
and
imul
outsl
adc
inc
pop
arpl
inc
jo
lcall
hlt
push
ret
jp
test
xchg
bound
pusha
inc
mov
cltd
sbb
and
sbb
jns
lods
cmovge
mov
pushf
out
inc
lods
push
jbe
inc
and
cs
fisttpll
pop
adc
and
lds
out
cmp
dec
test
mov
lods
push
cmp
cmp
inc
lcall
ds
mov
out
cmp
sub
ja
xchg
pop
cltd
xchg
es
dec
push
loopne
or
ret
dec
mov
mov
repz
sbb
call
mov
mov
loop
test
add
ret
cmp
test
imul
cmpsb
push
rcrb
hlt
mov
mov
jne
sub
call
dec
or
sbb
mov
push
lahf
movsb
rorl
adc
icebp
sbb
mov
sub
lret
aaa
adc
and
lods
adc
push
das
sbb
into
sub
cmp
imul
push
shll
ret
jle
xor
das
mov
nop
dec
adc
rorl
cmp
out
and
out
cli
or
pop
mov
test
mov
mov
sub
mov
jo
scas
fsts
cltd
jb
sub
fs
cmc
fsts
xor
mov
cmpsl
shl
iret
rcr
lcall
dec
sub
lret
ss
sub
and
push
ss
sub
mov
fnstenv
adc
cmp
hlt
mov
mov
push
idivb
aas
bound
cmpsb
imul
xor
mov
shrb
push
sahf
or
outsb
adc
jns
adc
sub
roll
push
hlt
fadds
inc
dec
or
imul
icebp
shrb
cmpsl
push
cmpsb
iret
lock
inc
dec
xorb
fnsave
pop
cmpsb
pop
jbe,pn
inc
inc
sarl
sbb
in
mov
out
or
adc
iret
xchg
dec
xor
clc
in
int
lds
xchg
lods
lahf
or
aad
inc
cld
push
lcall
lret
loop
orps
pop
lret
pop
mov
push
in
insl
and
cs
clc
sbb
leave
jp
lods
dec
filds
inc
data16
nop
dec
int3
leave
xchg
cmp
lods
sub
or
xchg
jb
or
subb
orb
mov
shl
stos
mov
aas
mov
imul
fs
mov
push
xchg
repnz
aaa
xor
cld
or
lret
push
sub
iret
loopne
add
cmpsb
inc
or
jae
push
add
cli
xchg
scas
stc
enter
mov
or
mov
pop
mov
movsl
outsb
sti
cmp
insb
mov
jp
inc
in
fucomi
add
stos
inc
fbld
in
dec
mov
jle
mov
out
ret
mov
insl
sub
clc
cwtl
ja
test
lcall
mov
lds
pop
and
insb
call
fldenv
shlb
cmpl
sub
xor
and
in
mov
inc
rep
js
outsl
out
push
dec
mov
jp
scas
loope
inc
dec
and
sbb
nop
js
int
mov
loop
mov
rcl
lret
adc
nop
aad
pop
lea
inc
loope
fnsave
xchg
sub
inc
push
scas
mov
push
jg
adc
cmpsb
fs
add
mov
data16
test
xor
xlat
nop
insb
scas
xor
jne
pop
das
sahf
mov
adc
mov
cmpl
in
push
leave
ljmp
mov
jbe
mov
mov
xchg
mov
in
arpl
pop
out
fst
ss
xor
mov
adc
cld
push
xor
add
cmp
sub
inc
sbb
jmp
insl
pop
mov
addr16
fsubrs
mov
outsl
inc
xor
jecxz
in
ret
dec
mov
stc
or
pop
jecxz
push
pop
je
mov
pop
cs
jmp
inc
cmp
add
mov
or
test
jae
mov
aaa
fcomps
ficoms
inc
cmp
and
repnz
push
sub
xchg
insl
call
lea
xlat
push
in
test
push
push
xchg
mov
ljmp
dec
pop
testb
or
xchg
mov
sub
and
into
xor
fisubrl
jne
jecxz
dec
dec
arpl
cli
lret
in
insl
mov
and
dec
cltd
fwait
jle
mov
and
shlb
nop
mov
push
mov
mov
shl
jecxz
fmul
adc
fisttpll
xor
push
dec
jg
or
scas
pop
fcmovne
idivl
dec
or
xchg
fists
scas
loopne
cmp
mov
cmpsb
push
test
sub
popa
mov
loope
sbb
jbe
xchg
ja
push
and
int3
jg
xchg
dec
adcb
and
int3
cwtl
ficomps
mov
cmp
fidivl
call
es
leave
les
daa
negb
mov
add
mov
leave
scas
push
lock
decl
outsl
pop
mov
jp
in
movsb
dec
js
mull
icebp
lret
inc
dec
dec
adc
cmp
xchg
mov
xor
jae
and
mov
incl
mov
lret
gs
cli
cwtl
add
cmp
ret
imul
and
shlb
insb
ret
mov
and
or
xchg
pop
in
ja
aad
addl
repz
and
notl
stc
or
push
jecxz
cmpsl
jae
test
fidivl
mov
imul
je
and
sub
in
imul
inc
sti
xchg
sub
mov
out
bound
sti
mov
jbe
out
or
in
xor
adc
xor
dec
push
sbb
adc
enter
mov
test
dec
cmp
das
mov
aas
jne
out
add
cld
cmpsl
lcall
jle
jmp
push
dec
mov
xchg
sub
out
iret
mov
pushf
out
js
xchg
add
sti
fistl
adc
stos
les
lock
inc
or
mov
ljmp
cmp
mov
sarb
adcl
mov
test
adc
cmp
mov
fidivl
and
add
movsl
adc
sub
lahf
mov
and
mov
cmpsl
mov
es
jno
dec
add
jg
jno
shll
xchg
xchg
jns
mov
sub
jp
push
out
adc
mov
dec
cld
out
inc
repnz
ss
insb
stc
mov
push
jg
loopne
insb
inc
mov
dec
pop
adc
mov
lahf
cmpsb
inc
sub
repz
mov
inc
add
dec
outsb
and
call
popl
iret
sub
sbb
jbe
loop
hlt
xchg
popa
cmp
sarb
add
jae
sub
divl
sbb
push
cmpsb
sub
test
pop
test
jge
sbb
inc
arpl
ja
or
out
dec
lret
cmpsb
lods
adc
push
rcll
loop
sti
ds
shlb
jl
jbe
out
std
scas
dec
imul
mov
mov
adc
push
popf
mov
test
add
jns
or
or
add
jmp
xchg
jae
or
adc
xchg
or
jbe
pushl
cmp
and
dec
sub
pop
out
rorb
dec
idiv
jp
sahf
mov
cs
jnp
add
jl
ds
sti
outsb
sub
mov
mov
je
pop
in
mov
cmp
fs
insb
icebp
test
rorb
xchg
adc
popf
pop
and
fmul
fists
cpuid
insl
cld
repz
and
mov
jmp
push
ljmp
fistpll
mov
jne
addl
insl
fimuls
add
xchg
xor
sub
push
daa
jle
mov
cmp
jns
sbb
decl
inc
arpl
push
popf
aad
jp
adc
ss
dec
mov
enter
mov
mov
cmp
adc
inc
mov
inc
call
xor
mov
leave
add
cmpsl
inc
xchg
jo
ljmp
and
and
xor
cmp
push
ret
popa
jmp
in
sub
add
mov
fsts
and
lret
push
dec
mov
add
push
pop
cmovle
mov
js
lods
cmp
ret
aam
xor
jg
cmpsb
xchg
jnp
imul
mov
jmp
test
popf
mov
push
fwait
jbe
in
mov
into
hlt
xchg
es
enter
add
inc
insb
sbb
outsl
mov
sahf
mov
rcrb
pop
dec
jge
add
into
mov
adc
std
dec
les
gs
cmp
popf
cltd
mov
inc
stc
and
ja
cmp
sbb
jb
movsl
push
loopne
add
js
popa
sbb
loopne
push
cmp
jo
sahf
sti
in
xchg
sbb
call
ret
addr16
lods
sub
hlt
xor
xor
jle
test
mov
xor
stc
xchg
sbb
fsubl
cmp
dec
sbb
fdivrl
addr16
mov
mov
imul
in
dec
jle
xchg
jb
cmp
lock
jp
sbb
pushf
jge
xchg
in
popa
pop
int
bound
xchg
scas
pop
cmpl
pop
push
scas
stos
stc
repz
outsl
cmpsb
or
cmp
insb
test
cmp
xchg
mov
sbb
jns
mov
cmp
mov
in
push
fldl
adc
mov
sub
pop
mov
and
outsb
adc
sbb
stc
mov
mov
cld
xor
ret
pop
ss
jl
stc
subb
pop
or
data16
jns
gs
pop
testl
sub
es
pop
jo
sbb
fadds
cs
inc
popf
push
call
pop
cwtl
sbb
fwait
in
imul
pop
jecxz
in
pop
dec
ds
out
repnz
adc
inc
pop
mov
add
cld
ds
jmp
pop
push
xchg
fwait
arpl
popa
or
sub
arpl
xor
jl
pop
lret
into
leave
sti
cwtd
jne
imul
fdivr
mov
js
push
es
in
xchg
sub
fistps
jb
and
pop
fildl
in
fisubrs
xchg
mov
shrl
ficoml
clc
jns
movsb
sbb
jle
inc
push
push
pushf
sbb
jmp
push
cmp
mov
push
sti
inc
sub
dec
add
fs
aaa
mov
or
rclb
xor
bound
push
popf
jb
push
xchg
mov
fildll
mov
inc
out
int3
in
cmp
notb
cs
cmp
addr16
pop
rclb
je
iret
pop
pop
roll
lock
jp
push
enter
cmc
jl
xorl
dec
xor
mov
ret
and
movq
mov
pop
jnp
out
inc
jnp
inc
push
pushf
or
fsub
push
add
xor
or
jns
jmp
jecxz
dec
les
hlt
scas
ljmp
int
ss
in
jmp
int3
rcll
inc
out
std
data16
add
pop
hlt
mov
jecxz
rcl
cmp
arpl
jnp,pt
cmc
xlat
inc
lcall
popa
sub
cli
popf
pop
insb
dec
mov
xchg
gs
sahf
jle
sbb
or
nop
or
xchg
pop
push
adc
ret
xor
ljmp
lret
add
in
add
outsb
fcomp
jmp
rorb
movsb
std
mov
mov
mov
jecxz
xchg
push
hlt
cmc
jns
std
dec
add
sbb
dec
push
inc
out
pminub
add
jno
mov
pop
push
in
add
int3
icebp
lods
cmc
dec
out
xchg
jae
cli
push
aam
ds
inc
cmp
xlat
pop
fs
test
lods
push
insb
dec
sti
pop
or
xor
fcmovnu
hlt
push
cmp
sub
cmc
cmp
add
mov
push
inc
dec
lods
hlt
pop
and
ret
mov
mov
cli
lods
push
ja
jnp
stos
cmp
std
in
scas
jmp
inc
sub
xchg
mov
push
pop
jg
push
xor
call
lcall
popf
xor
out
nop
and
jmp
inc
jp
jno
lahf
add
cld
aas
ds
xchg
int3
mov
std
fstpl
xor
mov
sub
cmp
adc
pop
stos
jns
pop
mov
jg
outsb
jmp
mov
xchg
pop
enter
pop
fwait
jb
pop
dec
pop
repnz
roll
test
enter
imul
xor
mov
jp
push
lahf
jmp
mov
push
inc
fsts
sbb
enter
jl
push
cli
lret
sub
sub
push
inc
stc
sbb
jo
xor
jb
xchg
imul
imul
adc
push
mov
jno
sub
divl
aas
test
call
stos
add
xchg
ja
adc
popa
call
call
idivl
cmp
dec
cwtl
or
or
push
lret
loopne
xor
or
das
cmpsl
xchg
add
loop
xchg
jecxz
adc
es
mov
jle
bnd
sbb
xchg
and
out
dec
push
push
add
in
ret
leave
icebp
mov
pop
adc
inc
dec
sub
popf
sub
adc
push
rclb
push
add
xorl
add
inc
fwait
inc
enter
pushl
or
pop
mov
push
sbb
sub
jl
cmpsb
mov
and
mov
mov
fstps
mov
jb,pt
out
out
std
xchg
insb
les
pop
fcoms
aam
rcrl
jns
jecxz
sti
lret
fnsave
mov
pop
lahf
mov
jo
xor
adc
or
xlat
mov
in
dec
and
in
test
outsl
push
icebp
aas
das
fcomip
jne
imul
dec
xor
fdivr
add
add
cmp
inc
adc
sub
es
xchg
leave
lahf
pop
inc
add
inc
sbb
mov
or
scas
repnz
repnz
push
fistps
cmpsb
push
jecxz
bound
aad
rcrb
jnp
xchg
mov
jmp
push
and
adc
mov
rcrl
hlt
push
jbe
pop
push
cmp
mov
popa
and
and
shl
iret
test
test
push
mov
lea
add
or
popf
fsubr
in
add
adc
xor
ss
ret
push
testb
pop
fwait
cmp
jg
ja
cmpsl
stos
fcoml
cli
jecxz
mov
fwait
and
jae
cmpl
aad
xor
icebp
loopne
mov
leave
mov
and
inc
and
cltd
cltd
xchg
daa
mov
jnp
mov
jecxz
pop
stos
fmul
rcll
adc
or
into
mov
push
movsl
push
jnp
pop
push
bound
fbstp
fucomip
loopne
enter
mov
and
int3
sti
aam
jp
out
jne
push
in
fwait
xchg
push
das
pusha
sbb
stc
scas
aas
insl
xor
push
add
dec
jle
frstor
test
sub
xlat
xchg
push
in
lret
push
and
fwait
pushl
test
inc
xchg
outsl
or
or
pop
inc
mov
jbe
jecxz
icebp
and
test
scas
movsb
and
fcompl
fs
sbb
xchg
push
lods
xchg
cmp
fcmovne
inc
hlt
call
imul
mov
in
mov
push
sbb
into
out
les
pop
dec
push
push
push
sbb
adc
xor
cmc
out
inc
ljmp
into
repnz
inc
in
in
pop
inc
pushf
adc
sub
aaa
xchg
mov
mov
xchg
xchg
jb
add
jecxz
insl
cmp
fwait
int3
jg
jmp
jns
nop
adc
and
aas
or
or
jb
mov
and
ret
mov
decb
sub
push
out
loope
aam
jnp
sub
add
fcmovu
mov
pop
mov
js
dec
and
lods
stos
push
push
mov
pop
fmull
pop
out
inc
mov
ds
and
int3
jge
insl
add
int3
cmp
xchg
cmpsb
push
test
scas
cmc
scas
sbbl
in
add
loope
scas
jle
rorb
xchg
xor
out
ljmp
mov
hlt
insb
out
mov
jae
in
rol
add
lahf
into
cmpb
iret
mov
cld
ret
and
xlat
push
fstps
xlat
sahf
ljmp
lret
xchg
ret
push
push
out
or
sarl
les
ficompl
xchg
scas
mov
lahf
and
dec
sbb
add
push
mov
sahf
mov
mov
pop
mov
pop
mov
js
outsl
je
xchg
sub
add
mov
inc
and
inc
sub
mov
xor
enter
pop
cmpsl
incl
popf
test
test
push
bound
jecxz
adc
adc
xor
cli
inc
jb
jge
rcr
add
stos
cmp
jae
jg
int
sahf
pop
adcl
repnz
mov
or
and
lcall
pop
xor
imul
out
filds
fists
xchg
ret
arpl
dec
lds
push
enter
mov
inc
in
jle
xor
sbb
icebp
add
mov
or
mov
test
out
mov
rcll
dec
xor
cmc
loope
hlt
add
idivb
dec
mov
nop
dec
popf
les
dec
add
lret
inc
repnz
xor
pop
lods
dec
xor
arpl
mov
mov
mov
and
cwtl
daa
popf
push
nop
push
sub
or
aaa
dec
sbb
and
fs
pop
ret
push
xlat
rorb
out
jnp
jns
int3
jb
sbb
sub
pop
dec
xor
notl
pop
movsb
outsl
lcall
pop
mov
adc
stos
xchg
jmp
cmp
pop
inc
jl
mov
mov
and
popa
shrl
repnz
in
sbb
fwait
push
jle
push
scas
or
sub
or
es
dec
push
jge
adc
fstpt
mov
mov
jb
jp
dec
dec
lods
mov
jp
mov
in
adc
add
shlb
cld
clc
jo
pushf
pop
mov
iret
and
out
xchg
adc
xor
into
xchg
or
pop
push
bnd
shrb
fsts
imul
les
fdivs
xlat
js
in
lcall
jp
push
xchg
mov
jmp
fnstenv
pop
push
rolb
je
roll
mov
aam
mov
nop
xchg
int3
mov
negb
scas
mov
dec
push
loop
es
fstl
or
popf
dec
call
or
icebp
pop
pop
mov
sbbb
loopne
cmpsl
movsb
pusha
push
sub
test
inc
stos
inc
mov
ds
cmp
lods
mov
mov
enter
sahf
push
leave
pop
or
lea
push
cwtl
adc
outsl
pop
or
andb
outsb
test
jmp
mov
sbb
mov
add
movsl
decb
rorb
xchg
jmp
mov
pop
in
outsl
and
lods
insl
add
cmp
repz
imul
addl
sti
push
push
sub
dec
sbb
sub
cmp
and
mov
mov
aam
popa
ret
les
repz
xchg
inc
xor
stos
sahf
aad
sub
inc
cmp
es
sbb
sub
jbe
out
or
pop
jge
mov
xchg
mov
jns
mov
mov
mov
stos
jo
lds
dec
shll
movsb
or
pop
fwait
sub
xchg
cmp
and
inc
into
fldcw
dec
loope
jg
dec
xchg
popa
mov
jecxz
pop
jns
ss
xchg
loop
xor
movsl
lea
and
dec
int
add
mov
popf
mov
rcrl
mov
in
sub
sbbb
stos
push
xor
push
adc
push
dec
inc
addl
repnz
ror
inc
fildl
push
ds
mov
dec
stos
call
sti
fstpl
adc
mov
pop
push
mov
add
nop
ljmp
orl
cmp
stos
in
fmul
mov
xor
lahf
mov
clc
je
sub
sub
xchg
bound
enter
rcrl
fld
bswap
jnp
imul
jmp
mov
scas
jnp
cli
outsb
test
mov
push
sub
popa
sub
xchg
cli
xor
mov
and
add
adc
or
iret
mov
movsb
or
jge
inc
push
jnp
imulb
adc
test
push
mov
mov
clc
lret
insl
rcrb
sub
mov
xchg
fsubs
into
and
mov
js
pushf
mov
shrb
stc
je
jp
mov
xchg
adc
and
mov
or
inc
mov
mov
mov
xchg
dec
jnp
lret
mov
popf
mov
cmp
sub
sub
sbb
push
pop
push
mov
jmp
pop
dec
jns
and
jge
bound
sbb
jb
in
xchg
gs
xchg
rcl
test
cwtl
stos
cli
test
inc
inc
adc
repz
cmp
mov
or
push
add
cli
cmpsl
add
cltd
and
xchg
jns
pop
fdivl
mov
pop
ficompl
mov
mulb
sbb
jmp
push
push
push
inc
aaa
add
jge
jmp
push
hlt
add
mov
sub
push
xor
or
popa
fwait
lahf
dec
lea
push
enter
js
and
les
sbb
leave
jne
adc
add
or
add
leave
mov
popa
push
jmp
lods
icebp
mov
shlb
xchg
nop
cmp
roll
out
mov
in
pop
icebp
jecxz
pop
pushf
jle
outsl
mov
pop
es
lret
jle
andl
into
aad
test
enter
pop
sub
daa
pop
shl
clc
pushf
jl
fistpl
pop
dec
adc
jl
aad
stc
push
dec
imul
push
mov
mov
push
int
aam
repnz
subb
stos
fsubrl
jne
xchg
and
add
sbb
mov
or
icebp
mov
xchg
leave
cmp
mov
ja
test
sti
sub
adc
in
repnz
add
es
pop
jl
nop
shr
xor
cld
gs
jmp
decl
out
mov
dec
jno
mov
in
std
mov
mov
fldl
pop
imul
mov
cmp
or
mov
test
mov
ficomps
out
rcll
fs
jno
or
or
mov
sub
loope
pop
cli
mov
faddp
fildll
lods
shl
jle
xor
mov
mov
outsl
jge
xor
mov
inc
xor
ds
insb
cmovne
orb
test
dec
dec
or
lret
push
add
push
movsb
mov
icebp
test
push
pusha
jecxz
outsl
clts
mov
inc
xchg
shrl
pop
jb
push
xchg
les
xchg
aam
jns
cltd
and
setnp
jo
or
pop
jge
mov
jno
in
in
lahf
xchg
mov
roll
pop
inc
xchg
movsb
cs
and
cmc
push
sti
outsb
sarb
or
in
xor
scas
xor
leave
push
push
xor
shlb
gs
push
inc
mov
leave
sbb
imul
push
orb
or
mov
jge
pop
jne
push
pop
cmp
jbe
adc
in
xchg
and
push
jp
rorl
setno
clc
mov
or
inc
sub
and
sbb
rolb
fbstp
or
filds
sti
ljmp
out
lods
movsl
push
in
int3
out
nop
clc
movsl
xor
mov
ja
cmp
or
sub
mov
insl
sbb
ds
imul
mov
jns
mov
lcall
add
sbbl
or
jecxz
lods
fcoms
imul
maskmovq
testl
inc
mov
cmp
sub
push
push
sti
sub
push
xor
xor
mov
imull
cld
jp
call
popa
in
ja
ret
xchg
sbb
movsl
pop
xchg
cmc
inc
pop
jae
xchg
int3
cmpsl
sbb
push
ja
leave
jbe
fdivl
push
or
mov
rolb
mulb
xchg
fnsave
lret
inc
and
cli
std
lcall
movsb
loope
push
mov
into
mov
mov
xchg
aad
xor
inc
rcll
pop
cmp
inc
jo
das
dec
lea
lahf
mov
pop
fsts
leave
jb
inc
cmpsl
dec
jae
or
or
and
inc
jbe
sbb
mov
fsubrl
xchg
mov
in
sub
testb
aad
adc
mov
add
xor
shl
call
jecxz
add
outsl
imul
ss
repz
lcall
lods
mov
sahf
call
or
loop
sbb
leave
cmp
setg
insl
gs
out
shrb
fisubrl
mov
pushf
cwtl
stos
mov
loopne
lret
xchg
sub
loop
lahf
test
push
or
sbb
fildll
loop
out
mov
cmp
dec
jecxz
aas
mov
adc
jge
push
or
fisubrs
ljmp
insb
mov
xchg
mov
lea
adc
adc
bound
imul
sub
negb
cwtl
sub
mov
js
add
adc
clc
mov
sti
xor
test
aam
fdivs
push
popa
sub
cmp
sub
aaa
pop
dec
outsl
adc
imul
clc
mov
pop
bound
add
sub
pop
out
mov
fdivs
imul
cmp
cmpsb
dec
dec
jo
xlat
bndstx
movl
std
pop
mov
stos
sub
cmp
popf
aam
inc
push
adc
and
scas
mov
fldl
or
xor
xchg
adc
lods
jnp
sti
leave
cmpb
insb
add
xchg
mov
inc
sbb
mov
or
inc
dec
int
es
outsb
sahf
adc
aas
inc
mov
cmc
je
outsl
jmp
sti
pop
pushf
jg
cmp
shr
arpl
push
push
aas
movsb
call
cmpsb
in
into
cmpsb
push
fisubs
ret
push
push
subl
ds
push
mov
imul
and
sar
pop
pop
rcll
sbb
testb
xchg
jbe
rorb
and
lret
push
movsb
out
stos
fisttpll
inc
xchg
cmc
ds
cltd
jne
pop
mov
out
lret
bound
scas
hlt
pop
ss
dec
lcall
sub
sub
sti
add
xor
dec
inc
aam
movsl
iret
lret
cmp
dec
jns
pop
cmpsb
in
aas
mov
adc
adc
sbb
jo
inc
xor
xchg
out
pop
scas
in
cld
push
das
add
jl
lcall
push
iret
ret
es
and
push
jbe
xor
jecxz
aad
pop
leave
fcomps
mov
cmc
push
xorb
and
arpl
pop
sub
and
lahf
std
cmpsl
pop
lods
and
push
out
aam
pop
xchg
pop
aad
stos
clc
xlat
adc
scas
cltd
adc
std
adc
mov
pushf
stc
test
adc
in
dec
call
insb
dec
aaa
sub
das
loop
and
imul
fdivl
imul
pusha
icebp
in
push
or
jge
mov
cmp
jo
xchg
cs
or
sbb
dec
jg
push
jg
and
xchg
jl
cli
dec
mov
mov
cwtl
jg
lea
dec
add
pop
jmp
je
adc
jno
pop
pop
sub
icebp
pop
xchg
inc
stc
cmp
and
pop
daa
add
test
or
adc
dec
or
aaa
mov
insl
jb,pt
jp
jmp
adc
dec
add
arpl
adc
out
mov
and
bound
loopne
mov
and
int3
ret
insb
ret
sub
push
das
mov
aas
and
xlat
lods
push
mul
xor
lret
rcrl
mov
arpl
add
out
or
cld
mov
je
std
sub
lcall
sub
pop
rcrl
pop
inc
sub
call
adc
dec
sub
addr16
pop
or
push
repz
mov
mov
and
mov
xchg
push
or
sbb
sub
mov
mov
pop
movsb
bound
out
dec
loope
mov
test
mov
cs
push
mov
rclb
mov
shrb
or
mov
add
mov
inc
or
sub
dec
lcall
add
mov
stos
out
pop
mov
scas
hlt
sbb
dec
sti
jo
aaa
and
in
test
add
leave
cmp
xchg
xor
inc
fisttpl
fdivs
adc
pop
adc
stos
repz
sub
lea
xchg
repz
sub
out
cmp
xchg
addb
jecxz
xchg
jb
adcb
cmc
pop
jbe
xchg
in
sbb
xchg
in
ret
add
pop
fnstenv
jno
add
inc
xchg
mov
and
test
ret
inc
pop
or
cwtl
les
into
rolb
div
jbe
inc
mov
xchg
jp
cwtl
ret
xchg
data16
sub
inc
mov
icebp
lock
pop
mov
push
jge
sub
mov
int3
add
adc
or
insl
xchg
sub
sub
inc
cmp
test
sbb
pop
push
sub
cmpsb
adc
jae
ja
push
jb
movsb
cwtl
mov
shl
arpl
ljmp
dec
xchg
arpl
mov
scas
mov
mov
into
js
adc
ja
add
push
mov
pop
cld
jo
movl
aad
sub
xor
mov
idivb
shll
ret
in
in
mov
cmpsb
dec
divl
jns
jns
lret
movsl
and
xor
mov
jns
lods
mov
xchg
fdivrs
inc
ret
jge
iret
outsl
mov
jb
sbb
jno
mov
jb
pop
mov
lods
xchg
ss
adc
and
push
or
movsl
and
dec
mov
xor
sub
in
add
mov
inc
in
popf
push
xlat
into
push
cwtl
mov
pushf
mov
add
push
xor
iret
cmp
push
mov
btc
cmp
add
pop
xchg
ret
inc
cmp
leave
xchg
roll
push
lods
negl
mov
sbb
rorl
jg
or
ljmp
or
ja
loopne
pop
mov
mov
lret
push
test
lret
or
lock
pop
mov
cmp
out
into
and
dec
pop
iret
jno
mov
addl
mov
test
lods
pop
or
or
cmp
dec
sub
mov
das
adc
repnz
cmpl
jge
mov
inc
pushf
imulb
mov
xlat
stos
repz
aam
mov
sti
adc
adcb
dec
cmpsl
stc
repz
jge
cmp
cwtl
mov
pop
jns
arpl
cmc
fldt
adc
inc
sbbl
xchg
arpl
incb
pop
ja
adc
mov
push
rcl
mov
fnsave
lods
jbe
adc
xchg
jle
sub
xor
ds
outsb
sbb
xor
aam
xchg
sbb
xor
mov
sbb
or
sub
lock
dec
or
inc
cmc
cwtl
xchg
mov
push
jl
or
sbb
enter
xchg
test
push
aaa
sahf
dec
ret
jbe
cmp
scas
scas
and
rcl
shl
mov
sahf
arpl
mov
lcall
jmp
push
xor
sub
sbb
dec
pop
iret
fisubs
out
inc
shl
and
insb
xchg
bound
adc
sub
mov
ss
push
mov
jmp
and
add
jg
xor
inc
cmp
jnp
inc
jp
stos
pop
int
sarb
shl
pushf
shlb
mov
dec
test
and
cmc
push
pusha
xchg
lock
pusha
mov
jae
mov
add
test
sbb
push
jae
std
inc
bound
inc
enter
jle
cmp
xchg
std
clc
cmp
std
jmp
jnp
mov
enter
bound
loop
mov
mov
mov
jb
push
sbb
clc
repnz
xchg
jg
push
in
push
std
hlt
mov
sbb
lahf
lahf
cmp
dec
jg
mov
mov
lods
sbb
push
sub
jle
hlt
jl
mov
js
push
mov
pop
adc
add
xor
inc
push
movsl
or
mov
rorl
dec
cmp
mov
push
dec
and
lret
mov
and
cli
std
push
xchg
sti
jae
dec
fisubl
dec
lahf
and
xchg
jb
add
sub
jne
push
cmp
pop
fstpt
pop
push
inc
adc
ret
sub
sub
lods
mov
cmpsb
cltd
push
ja
inc
repz
cmp
loope
js
in
inc
xchg
cwtl
ror
xchg
jno
jnp
sarl
fbld
js
mov
lea
das
insl
add
and
push
out
clc
mov
sarb
mov
xchg
mov
es
ror
or
jle
pop
gs
jbe
mov
or
dec
dec
ret
aad
cwtl
mov
add
add
lret
arpl
mov
outsl
pop
fsubrl
mov
inc
sbb
lock
or
sbb
inc
adc
cmp
jbe
mov
and
sbb
ret
into
lahf
mov
sub
loopne
in
dec
xor
loopne
xchg
jnp
xor
and
into
not
stc
mov
in
cs
jmp
loop
movsl
sub
adcl
mov
shll
inc
mov
xor
cltd
out
xchg
push
pop
rolb
pop
add
cmp
push
lret
mov
jae
mov
push
insl
sub
sbb
in
testb
jmp
sbb
dec
pop
hlt
in
sarl
rcl
aas
es
dec
sub
sbb
xchg
fimull
mov
int3
imul
cmc
fisubl
addr16
sbb
add
in
mov
or
push
fsts
pop
dec
jnp
out
dec
movsl
les
sub
stc
out
lcall
sbb
icebp
push
sbb
adc
or
mov
gs
add
push
stos
aad
add
push
cmp
lret
add
aad
adc
scas
outsb
xchg
clc
jns
push
sbb
fs
inc
loop
pop
call
repz
into
pop
push
test
mov
gs
outsb
and
test
shl
push
enter
mov
add
push
pop
and
lea
andl
nop
pop
pop
xchg
cmp
fisubrs
lret
movsb
push
mov
sub
scas
lods
mull
std
rcll
push
sub
ret
lods
mov
jae
push
lods
mov
pop
hlt
nop
xchg
cs
in
jno
scas
test
or
jmp
cmc
lret
lcall
int3
and
jmp
xor
and
or
sbb
arpl
add
in
xchg
mov
and
cmpsb
repz
adc
mov
pop
sbb
push
cmpsb
inc
dec
rep
pop
call
push
xchg
fiaddl
hlt
imulw
dec
pushf
inc
fadd
xlat
adc
lahf
mov
cmp
insb
loopnew
sahf
inc
arpl
dec
xchg
push
lds
pop
inc
push
fsubl
sub
test
clc
dec
sbb
movsb
push
int3
cmp
call
movsl
mov
inc
call
ds
arpl
xlat
xor
mov
lcall
mov
cmp
xchg
mov
add
les
sbb
sbb
pop
and
xor
push
mov
arpl
iret
aaa
add
mov
mov
movsl
pop
push
cmc
sub
and
add
push
cmpsl
cmpsl
jae
xlat
arpl
pop
sahf
push
fmull
cmc
movsb
adc
aad
mov
out
mov
mov
hlt
push
cwtl
movsb
push
test
stc
dec
sbb
data16
xchg
dec
iret
loope
xchg
xchg
dec
jl
adc
push
and
xlat
lahf
insb
in
push
scas
add
adc
leave
sub
adc
insb
dec
jne
jo
and
add
lahf
mov
pop
or
sarb
push
dec
pop
call
cmpsl
adc
fidivs
mull
adc
and
mov
xchg
push
lock
mov
fisubs
mov
inc
push
inc
cmp
imul
sbb
jae
fisubrs
out
and
sbb
in
repnz
cli
rorb
jmp
cwtl
call
sar
sbb
xchg
sub
jecxz
inc
stc
shrl
push
push
inc
push
sub
cmp
pop
push
stos
shrl
pop
jl
dec
mov
jle
lahf
or
je
pop
add
popa
mov
leave
lock
fwait
lds
lock
nop
mov
bound
jmp
mov
mov
mov
pop
fidivrl
in
icebp
insl
xchg
test
gs
negb
mov
sti
adc
mov
adc
hlt
add
mov
mov
icebp
les
shll
pop
cs
pop
aas
and
fimuls
mov
ja
stos
outsb
mov
adc
lds
sarb
roll
add
aad
data16
xor
mov
push
push
adc
adc
cmp
or
sbb
test
xchg
loopne
arpl
jl
iret
mov
sbb
and
dec
inc
and
xchg
fstpt
dec
daa
push
xor
dec
mov
in
imul
adc
pop
push
add
and
sti
jp
push
sub
add
sub
lea
inc
mov
mov
add
mov
shrl
lea
cmpsl
jo
movsl
xchg
in
mov
inc
xor
loope
bound
fisttpl
gs
fs
ljmp
dec
mulb
or
ljmp
pop
cli
sub
sbb
hlt
fs
js
xlat
sbb
push
outsl
and
add
lods
mov
xchg
test
push
sbb
daa
fwait
inc
push
mov
mov
adc
pop
dec
lods
push
enter
jle
fists
movsl
or
push
lcall
arpl
aam
stc
les
stos
cwtl
fnstsw
dec
mov
xor
stos
mov
mov
add
dec
fidivrs
leave
mov
sti
movsl
xlat
repz
aas
adc
mov
stos
xor
sbb
lea
add
mov
test
or
add
sbb
repz
mov
ficomps
mov
dec
clc
sbb
nop
pushf
fcomp
notl
pop
lret
push
inc
pop
add
cmp
push
int3
dec
pop
push
in
pushl
cmp
jmp
js
imull
mov
cmp
stc
roll
pop
cwtl
and
adc
cmp
push
push
aaa
ljmp
repz
roll
fucompp
or
inc
fs
mov
es
loop
xchg
aam
scas
jns
pushf
push
jg
clc
out
out
test
sti
mov
add
in
inc
and
mov
in
push
scas
mov
daa
loop
inc
test
aaa
or
frstor
mov
out
icebp
inc
or
mov
dec
cmpsl
movl
mov
jns
push
cmc
push
pusha
ja
mov
test
ret
xor
fs
push
mov
mov
inc
xor
popf
sbb
xchg
sbb
jecxz
mov
pop
xchg
xchg
mov
sti
mov
adc
out
stos
out
es
pop
jge
stos
cli
shll
loopne
addb
jns
es
add
and
xchg
push
sahf
push
xchg
call
aaa
jmp
cli
in
mov
hlt
nop
mov
daa
mul
sbb
and
aas
aam
jmp
push
jge
mov
fidivl
ret
pop
jo
scas
mov
repz
push
xchg
ljmp
ljmp
clc
xchg
or
rcr
fmuls
cmpsb
adc
movsb
mov
out
or
pop
cmp
lds
stc
adc
inc
adc
fcomps
popa
out
hlt
shlb
inc
lods
push
and
ret
cmp
xor
fcmovbe
fdivs
ja
filds
or
xor
push
xchg
and
pop
adc
jbe
pop
mov
push
int
and
sbb
xchg
mov
xor
lea
dec
xchg
jnp
jnp
adc
mov
dec
nop
pop
shr
call
sahf
mov
inc
and
fsts
pusha
lea
xchg
mov
js
push
insb
sti
jle
fwait
popf
mov
dec
fidivl
mov
pop
add
imul
loope
aas
loope
jp
loop
dec
addr16
vmovupd
or
sub
mov
cmp
sbbl
adc
cmp
imul
mov
or
mov
mov
jb
add
push
dec
and
mov
test
xchg
scas
and
ss
out
jp
mov
stc
mov
dec
mov
daa
test
imul
sbb
cmp
pop
mov
cmpl
ja
les
data16
push
dec
mov
adc
xchg
mov
aad
bound
sub
mov
push
cmp
je
sub
outsl
inc
add
jmp
insl
ret
jl
pushf
jmp
jns
hlt
imul
out
cld
pushf
push
repz
sti
sbb
mov
aaa
rclb
popa
and
and
mov
and
rclb
fs
push
dec
mov
adc
scas
je
mov
dec
sti
xor
cwtl
in
dec
icebp
out
aad
pop
das
mov
loopne
loope
data16
push
xchg
and
xchg
push
cld
iret
test
push
mov
pushf
dec
jl
pop
pop
test
addr16
lods
pop
out
aaa
jmp
cmp
sbb
and
add
fldt
arpl
pop
lret
test
int
popf
fwait
imul
pop
lea
dec
js
inc
ss
inc
pop
cmpsl
inc
sub
loop
stos
mov
push
icebp
or
dec
out
sub
pop
push
and
popf
mov
mov
mov
lock
imul
and
push
test
shlb
mov
pop
in
mov
loope
ret
rcrl
sub
adc
rorl
xchg
dec
pop
sbb
mov
jo
jae
push
je
popa
hlt
in
aad
sbb
xor
mov
in
std
lds
mov
daa
shr
pop
dec
shrb
jae
dec
jne
add
adc
out
shr
out
xor
in
sti
fistpll
pop
push
imul
add
ss
movsb
mov
xchg
jp
aaa
ljmp
adc
iret
lcall
gs
mov
fisubs
or
inc
sarb
lcall
decl
ljmp
cmp
pop
push
pop
scas
jle
bound
xchg
cmc
inc
test
mov
sbb
adc
int3
repnz
fcoms
repnz
xchg
push
imul
sbb
test
decl
cltd
inc
in
unpcklps
pusha
jle
xor
inc
fsubrp
lods
push
in
dec
data16
and
mov
mov
xchg
adc
sbb
outsb
lods
int3
not
jmp
inc
push
cmc
pop
out
add
inc
pop
push
adc
jnp
js
add
sbb
int3
lret
sbb
stos
mov
sbb
cwtl
xchg
lea
lods
dec
mov
cli
jp
cmp
xchg
std
scas
pop
jno
push
mov
mov
push
add
in
lock
fstpt
cwtl
xor
pushw
mov
pop
xchg
stos
aam
cli
lret
cld
fists
push
and
pop
inc
stos
sub
fwait
inc
mov
jl
fwait
jne
rorl
pop
out
jbe
in
mov
and
and
int3
mov
gs
cmp
lods
or
mov
sbb
xor
lds
jne
xor
in
cmc
stos
aaa
mov
pop
adc
shll
imul
xor
add
and
add
icebp
push
daa
pop
and
hlt
push
and
adc
shr
and
jns
imul
outsb
lahf
sar
sbb
mov
imul
fbstp
andb
xchg
lds
add
andl
and
mov
cwtl
sti
sbb
cmp
fldt
jecxz
into
dec
orb
cmpsb
sti
sbb
sbb
fs
add
jle
push
mov
cmpb
add
mov
lods
jae
stos
push
sub
movsl
sahf
bound
sub
pop
pop
idiv
stos
rol
sbb
push
pop
les
mov
pop
jecxz
repnz
add
popf
pusha
push
orl
add
fs
pushf
adcb
data16
lds
movsl
ret
jle
aas
jbe
jle
or
jg
cmp
mov
adc
adc
cmp
ret
dec
or
sbbb
cmp
jl
sub
and
loope
and
fs
test
negb
mov
xor
push
pop
divb
pop
adc
sub
frstor
stos
xor
hlt
mov
bound
cmp
push
push
scas
popa
cmp
and
fucomp
dec
add
popf
xchg
jne
dec
or
ss
inc
test
int
mov
or
sub
jle
imul
pop
loop
sysexit
or
inc
push
aad
int
or
xchg
xchg
decb
in
movsl
xor
mov
push
outsl
pop
or
xchg
popa
and
sub
out
lret
cmpl
xchg
mov
lock
es
inc
jmp
cltd
pop
adc
and
add
xor
pop
push
repz
dec
cmp
nop
dec
fiadds
dec
sbb
data16
addr16
icebp
sub
test
sti
movsl
jb
jg
adc
jl
enter
fcoml
lea
mov
cmp
mov
stc
xchg
test
std
ljmp
push
stos
mov
cwtl
xlat
into
ja
jp
ffree
stos
cmp
pop
fldenv
leave
sahf
dec
shl
jmp
sub
xchg
pop
add
out
mov
dec
insb
mov
flds
mov
jle
std
das
add
pop
pop
aaa
les
pop
jge
imul
pop
jle
mov
pop
xor
lret
repz
push
addb
add
adc
fistpll
push
pop
aam
aas
enter
out
in
mov
fidivl
push
test
sahf
divl
add
stos
cmpsb
andb
insl
in
mov
add
cmp
call
adc
xchg
mov
add
push
xor
or
push
mov
outsb
ljmp
mov
pop
xor
iret
sarl
mov
add
or
mov
fidivrs
push
in
fsubs
fbstp
fcoml
sbb
imul
stos
push
outsl
cmc
popf
scas
mov
add
dec
mov
je
mov
xchg
cmp
push
xchg
add
or
bound
xor
adc
jo
mov
cmp
mov
incb
pop
pop
sub
int3
gs
jb
stos
addr16
jne
jp
xor
arpl
cmpsb
lds
aas
jmp
movl
mull
loop
xlat
out
lods
or
inc
sbb
inc
call
sbb
sarb
pushf
subb
add
mov
cmc
jno
ds
jg
das
jb
pop
dec
xchg
shll
mov
xor
xor
xchg
jne
sahf
sub
and
call
xchg
aam
dec
outsb
push
aam
ss
or
dec
cwtl
mov
pop
and
pop
jo
xlat
or
js
cwtl
pop
mov
adc
xor
mov
outsl
in
xchg
pop
xor
mov
inc
insb
lret
adc
sub
mov
push
lcall
inc
dec
movsb
loope
daa
fdivrl
mov
fisubrs
sub
test
or
inc
scas
cld
sbb
fdivrs
pop
or
bound
cmp
add
push
int3
loop
sbb
jle
jmp
mov
or
mov
xchg
hlt
push
scas
scas
mov
add
insl
daa
push
loope
add
inc
inc
pushf
loop
mov
loope
pop
les
bound
inc
jbe
lea
movsl
pop
mov
scas
pop
int
and
ret
lds
or
and
lret
fcmovnb
pushf
or
test
sbb
lods
aaa
lods
arpl
idivb
out
jmp
inc
fbld
sbb
mov
cmp
pop
or
in
aas
and
loop
seto
out
outsb
pop
inc
mov
pop
xor
fldl2t
cmp
lds
and
fld
sbb
xchg
out
insb
push
cltd
xor
cs
jb
movsl
ret
mov
pop
push
sti
push
mov
mov
mov
mov
and
and
bound
rcrl
mov
cmc
jb
pop
mov
lods
lds
or
nop
imul
sub
out
jne
jne
jge
int3
scas
mov
arpl
ds
jb
xor
ret
mov
adc
cmc
lcall
adc
out
cmp
lret
scas
mov
mov
mov
data16
repnz
jnp
addr16
test
xor
or
mov
adc
ljmp
push
daa
fdivrs
mov
movsb
insb
inc
rcll
lock
pop
sbb
adc
jns
push
addb
xlat
int3
jnp
aad
mov
iret
push
or
out
test
outsl
and
repnz
or
shll
xchg
cmpsb
inc
cltd
xchg
lcall
dec
mov
mov
in
ljmp
loope
ret
mov
mov
push
pop
inc
dec
mov
imul
lods
or
iret
shll
mov
cmp
pop
out
push
lcall
or
jp
jmp
fbld
out
mov
mov
js
adc
and
inc
dec
xchg
lret
inc
and
fbld
cmp
or
flds
cmp
lock
lret
push
bound
fmuls
imul
pop
or
push
xor
and
xchg
out
adcb
inc
bsr
cmp
insl
test
gs
or
pushf
frstor
mov
xchg
mov
repnz
push
sets
ds
pop
shl
add
aaa
jo
test
ficoml
mov
hlt
outsb
cmpsl
cwtl
sahf
xchg
inc
and
push
cli
mov
cmpsl
movsl
xorps
fsubs
aam
pop
ret
jp
add
adc
outsb
mov
add
outsl
cmp
push
dec
rcll
dec
cmp
popa
bound
insb
insb
mov
scas
and
push
fbstp
inc
and
out
arpl
es
nop
loopne
test
push
push
fstpt
adc
in
xorb
cmp
jb
xor
jne
repz
dec
xchg
in
ret
test
ret
stos
lods
xor
shl
xchg
dec
outsb
and
repnz
push
mov
je
mov
mov
out
push
cmp
in
jbe
mov
add
pusha
aad
mov
fadd
fnstcw
outsl
fcmovne
movsl
cs
push
test
inc
loop
out
and
add
das
jl
arpl
mov
push
sahf
lock
mov
adc
pop
cmp
sbb
xor
fists
ljmp
jbe
adcl
lahf
xor
sarb
inc
sbb
movsb
dec
inc
js
idivl
dec
inc
mov
push
in
add
mov
adc
and
jl
lds
push
xchg
push
loope
sbb
addr16
in
xor
mulb
pop
or
test
xchg
cmp
test
mov
ds
inc
fimuls
lock
movsl
or
mov
mov
xchg
lea
sbb
faddl
xchg
jl
popf
outsl
mov
ljmp
ljmp
loope
mov
ja
rsm
fmuls
xor
testb
aaa
into
pop
cmp
xchg
shrl
roll
and
adc
jno
xor
imul
jmp
out
push
jge
push
or
mov
loop
inc
test
fnsave
test
pop
lahf
sbb
hlt
sub
loope
in
mov
sub
int3
out
or
loopne
lret
aaa
push
mov
lock
sub
cwtl
push
inc
push
pop
mov
mov
jo
inc
shl
dec
jae
inc
pop
ljmp
cmp
mov
iret
das
mov
out
push
inc
mov
jp
sbb
xchg
out
es
jl
rcrb
dec
jo
ret
jmp
pop
mov
scas
jns
cli
movsb
repz
sti
add
lock
sub
leave
sub
addr16
or
and
movsl
cmp
jb
fsubrl
nop
test
sbb
dec
inc
dec
sbb
dec
sub
out
push
roll
mov
in
jb
fnstcw
sub
movsb
daa
mov
add
xorl
adc
mov
stos
aaa
movsb
sti
js
jno
daa
push
repz
in
mov
fimull
rol
and
mov
adc
sbb
enter
push
es
add
je
aaa
fiadds
adcb
xlat
mov
int
and
pop
test
das
add
adc
xor
jae
jmp
mov
jmp
jmp
mov
mov
fistpl
or
mov
cs
xor
push
in
mov
ljmp
lods
cld
nop
cmp
cmp
std
pop
mov
adc
mov
fstpl
inc
inc
sti
mov
adc
je
imul
insl
mov
sbb
xchg
fidivrl
mov
rclb
loop
out
jl
mov
jno
push
or
mov
out
sbb
jno
cmp
je
rorb
xorl
loop
adcl
mov
or
pusha
add
insl
mov
rorl
mov
jne
ljmp
adc
cld
fbstp
jp
out
loop
or
cmp
addr16
mov
cltd
inc
out
gs
cmp
aaa
or
outsb
pop
jge
call
fildl
jns
daa
push
sub
adc
xor
add
sbb
mov
lahf
andl
aad
pop
dec
mov
repz
jae
lock
mov
les
hlt
pop
cld
xchg
or
sbb
inc
loop
hlt
pop
outsb
std
cmpsl
dec
dec
add
or
daa
outsb
xchg
jbe
outsl
mov
pop
fs
clc
in
bnd
repnz
cmc
cmp
lret
xchg
les
sbb
rorl
dec
addl
sub
or
dec
out
lcall
sub
mov
scas
data16
xchg
mov
les
push
mov
rol
or
adc
mov
leave
pop
jg
mov
mov
push
cli
push
pop
mov
sbb
sub
adc
js
xchg
pop
dec
out
lods
add
mov
and
fdivrl
bt
push
push
mov
or
test
pop
test
lret
sbb
mov
pop
stc
push
sub
rcrb
cli
pop
mov
lahf
mov
iret
outsb
sub
mov
add
sub
cwtl
inc
sbb
mov
xor
dec
test
or
jno
lods
test
andl
xor
cli
and
xchg
aam
adc
add
add
fwait
test
and
aas
pop
cwtl
cltd
mov
cmpsb
mov
ret
sbb
fldl
inc
mov
mov
cmp
push
sbb
jg
cmc
inc
cld
out
movsb
fisubl
xor
cmc
adc
stc
mov
out
jbe
pushf
notb
cmpsb
into
inc
add
adc
addr16
adc
rcrl
and
mov
clc
jb
mov
clc
dec
cmp
add
lods
jae
out
jne
add
leave
das
sbb
xor
lock
push
sahf
fsubl
jnp
movsb
cmc
mov
sti
scas
sbb
enter
aad
mov
lea
adc
mov
mov
lret
cmpl
mov
jnp
jno
adc
pop
add
or
and
mov
mov
fsubrl
xor
pop
dec
test
ss
imul
dec
insb
and
jbe
shl
inc
jge
jp
ret
jb
cwtl
xchg
fmull
mov
sub
jmp
outsl
shl
xchg
lods
mov
and
outsl
xchg
push
enter
and
pop
ljmp
jno
push
cmp
fdivrs
dec
mov
ret
dec
shlb
add
inc
push
mov
push
pop
xchg
dec
jae
lods
pop
inc
rcrb
sbb
mov
pop
insb
adc
int
pusha
pushf
aad
mov
bound
enter
rcrb
cwtl
jns
subb
hlt
not
mov
or
xor
lahf
xchg
into
int3
and
or
popa
pusha
adc
mov
aad
mov
xor
inc
shll
jae
mov
cmp
jmp
cmp
xchg
cmp
iret
aaa
lahf
pushf
add
stos
cmpsb
mov
repz
sbb
mov
into
fcomip
cs
mov
xor
jnp
orb
fwait
dec
mov
sbb
jno
fsts
jno
xchg
fimuls
ret
lods
dec
idivl
lcall
lds
imul
aas
test
dec
and
sub
jl
lods
jns
cmp
jle
push
push
jmp
daa
jp
dec
or
xor
and
pop
je
mov
sub
inc
or
fldt
iret
fisubrs
xorb
andps
fistpl
or
push
jnp
jns
inc
lret
mov
xchg
dec
jg
or
movsb
mov
and
sbb
xchg
icebp
dec
adc
add
insl
mov
pusha
jp
cmp
loopne
lods
mov
mov
mov
push
jne
lea
int
insb
xchg
xchg
mov
sbb
fmulp
xor
std
test
aam
cli
or
mov
ret
jo
rcrl
xor
pop
sbb
inc
adc
clc
insl
mov
cmp
notl
sub
stc
scas
sbbl
and
xor
fcoms
std
xchg
add
and
sbb
or
je
xchg
arpl
mov
inc
lret
dec
fiadds
fildl
xchg
sbb
repz
jne
jp
mov
mov
pop
pop
jle
ja
and
cmp
push
out
imull
push
adc
in
inc
xor
nop
pop
jns
pushf
adc
mov
xor
inc
das
iret
repz
icebp
or
push
aaa
xlat
lock
lods
lret
xchg
inc
adc
arpl
cmp
jmp
insl
pop
sti
sbb
add
mov
mov
int3
sahf
mov
jb
xchg
sbb
cmpsb
dec
rep
xchg
pop
into
xchg
lods
mov
mov
sub
ds
and
pop
inc
push
or
xor
dec
mov
lret
or
lods
nop
pop
bound
cli
mov
inc
fdivrl
pop
imul
pand
sbb
and
push
je
add
aaa
movsb
pop
cmpsb
cwtl
lock
test
pop
sahf
xlat
imul
rcl
repnz
sbb
sbb
fsts
pop
sub
lret
pusha
jae
push
xor
imul
xor
sbb
ss
jle
xchg
mov
fdivs
jg
mov
pop
xor
and
jb
sbb
inc
repnz
cld
jns
xchg
call
cmp
or
divb
imull
and
mov
jno
fldl
pop
dec
pop
decb
xor
mov
cs
inc
mov
aam
fstpt
adc
push
mov
pop
sbb
sub
ret
mov
mov
dec
fstl
and
cld
test
mov
imul
dec
push
in
push
rorl
loop
shlb
inc
je
mov
inc
inc
add
pop
int3
repz
push
cs
andb
pop
add
scas
movsb
add
dec
test
pop
nop
cmp
xor
stos
scas
dec
dec
dec
cltd
cmp
xor
xchg
in
cmc
mov
pop
cwtl
adc
sbb
js
cmpsl
pop
xchg
xchg
ja
push
sub
imul
lret
orl
lea
cs
and
cwtl
push
sbb
pop
jge
cltd
aas
mov
aam
imul
out
lcall
aaa
scas
add
mov
push
pop
pop
cmpl
outsb
push
xchg
sbb
jns
and
lds
or
jg
aad
enter
xor
movsb
rolb
jmp
dec
cmp
bound
xor
stos
mov
add
rclb
xchg
mov
sbb
rcr
xchg
ret
int3
stc
sbb
lcall
dec
inc
leave
cmp
out
sub
mov
cmp
dec
xchg
cwtl
test
pop
arpl
xchg
pop
pop
cmp
pusha
es
shrl
dec
mov
cmp
cmp
in
out
or
repz
lahf
jb
jg
push
fcomp
out
jne
push
test
xchg
mov
inc
sbb
mov
adc
dec
jle
mov
les
lea
add
lret
ret
lcall
xor
xchg
out
enter
add
loope,pt
pop
mov
jno
jno
push
sub
imul
or
cld
test
mov
and
pop
xchg
jno
and
push
or
insl
fwait
stc
mov
insb
out
sarl
mov
ficompl
xchg
sub
dec
outsl
insl
xchg
imul
out
cli
adc
pop
pop
imul
fwait
xor
lock
lcall
repnz
cmpsl
sub
shlb
call
ss
sahf
in
pop
inc
insl
push
cmp
lcall
pushf
fidivrl
xor
mov
mov
into
repz
push
push
sub
mov
int
popa
sub
rcl
je
sbb
dec
out
or
jp
lock
sub
dec
inc
in
sub
mov
outsb
cmp
or
sahf
dec
xor
sbb
jecxz
sbb
lods
pop
add
roll
adc
add
mov
cmp
aaa
mov
jbe
aam
dec
adc
jge
xor
inc
push
pop
and
and
repnz
sbb
lods
dec
enter
loopne
cmp
sbb
jno
mov
cmp
mov
xchg
int
imul
into
out
jno
sub
xor
mov
cmpsl
jmp
rcl
pop
aaa
or
add
dec
sub
enter
pop
mov
out
pop
xor
jmp
pop
ja
sbb
lods
mov
cmp
and
dec
rcrl
lods
lahf
jnp
jge
mov
shrl
arpl
shlb
add
mov
ja
mov
lods
out
lahf
arpl
mov
xchg
or
scas
idivb
test
out
jmp
stc
push
lock
xchg
movsb
clc
mov
xchg
xor
sbb
mov
daa
lcall
inc
stos
cmp
cld
out
shll
add
mov
and
ret
shll
xchg
mov
popl
lret
add
int3
in
cmp
pop
push
pop
or
sti
mov
dec
push
cmp
test
insb
shlb
push
out
mov
inc
bound
cmp
scas
sub
pushf
mov
dec
insb
push
cmc
fs
and
mov
xchg
jo
int3
mov
push
dec
sti
sahf
bound
fcmovbe
test
je
xor
xlat
mov
sbb
cmpsl
sub
inc
dec
mov
rorb
sub
fldt
mov
daa
mov
outsb
arpl
jbe
sar
das
mov
lahf
mov
ja
fwait
xor
push
scas
test
sbb
push
fwait
pop
loop
test
cwtl
xor
inc
fmull
pop
test
mov
out
rorl
adc
in
jl
pop
fwait
add
sbb
daa
pop
lds
dec
inc
ja
call
push
ja
aad
dec
xchg
pop
fdivs
adc
cmp
loopne
push
jns
fs
push
mov
or
sarb
aad
mov
lea
mov
dec
js
add
orl
add
pop
xor
movsb
lods
mov
pop
and
pop
mov
inc
mov
es
test
sbb
inc
mov
pusha
ja
jmp
xor
xor
sti
and
xor
mov
ljmp
add
xor
fidivrl
xchg
fwait
repz
push
jns
sbb
shrb
xchg
lock
pusha
arpl
int3
jmp
lahf
in
stos
std
mov
mov
mov
inc
loopne
adc
xchg
dec
stos
mov
and
popa
test
mov
lcall
test
sbb
cmp
add
sub
rorb
cmp
scas
repz
movsl
sbb
int
cwtl
mov
push
mov
sub
xchg
xor
add
int
les
sbb
inc
sarb
test
int3
push
xor
std
fdiv
push
fsubrs
mov
push
lret
ljmp
arpl
add
mov
loop
jae
lahf
js
rcll
inc
mov
aaa
popf
repnz
pop
bound
xchg
add
mov
loope
gs
fcoml
test
push
sub
cmp
subb
daa
sub
mov
add
aas
cmpsl
sbb
mov
xchg
fwait
adc
hlt
dec
clc
enter
push
adc
cmp
movsb
cli
pop
mov
data16
pop
rcll
lret
call
rcrb
cwtl
lods
or
movsl
repnz
xor
mov
sbb
lods
xchg
ficompl
stos
xor
sahf
aam
in
js
mov
mov
adc
fs
jae
mulb
aaa
xchg
mov
repnz
mov
outsb
pop
addr16
lret
out
mov
sub
dec
sbbl
imul
or
stc
push
cmpsl
stc
jle
mov
mov
lods
ja
test
clc
imul
fstl
mov
push
push
mov
or
addr16
enter
xchg
push
mov
sub
add
sbb
xchg
ret
scas
sti
rolb
push
testb
xor
scas
jg
pusha
sbb
in
inc
or
sub
scas
mov
dec
xchg
push
idivb
scas
mov
mov
sub
outsb
outsb
leave
scas
aam
add
pushf
pop
jmp
push
stos
jle
cmp
xchg
fwait
xor
or
xchg
mov
fmuls
shll
clc
push
mov
sub
in
repz
add
inc
mov
outsb
push
pop
mov
repnz
int3
cmpsl
cmp
dec
inc
out
bound
xchg
fdivrl
testl
aad
mov
jbe
mov
dec
int3
inc
mov
clc
inc
jo
imul
out
cmovl
jl
add
push
add
inc
sub
xchg
add
cs
popf
pop
jge
in
fidivs
and
sub
or
cmove
lcall
add
inc
testl
bound
ja
adc
push
pop
insl
xchg
aam
xchg
xchg
inc
std
into
adc
mov
fs
imul
mov
repz
or
cmp
sarl
mov
pushf
inc
jmp
cmp
mov
lock
ds
mov
lea
jns
lds
push
movsb
mov
and
and
sbb
lods
fidivl
jno
insl
push
mov
cmp
leave
les
fdiv
jle
movsb
lea
fstpl
push
cmpsl
mov
mov
or
jno
popa
insl
or
or
jns
adc
cwtl
in
pop
dec
add
imul
or
pop
dec
jl
inc
or
inc
ret
xchg
mov
outsl
mov
ret
testb
and
push
jl
inc
loopne
iret
xchg
roll
push
out
xor
cmp
lret
adc
movsb
cs
inc
mov
xor
inc
xchg
sbb
dec
xchg
or
cmpsl
mov
or
ret
xlat
sbb
fldenv
inc
outsb
leave
arpl
lods
int
stc
mov
jno
pushf
xchg
stc
or
push
rcr
mov
inc
xchg
testb
push
sbb
out
push
jne
or
adc
jge
adcb
cmp
vcmpps
push
mov
adc
jp
jge
sbb
aas
cmpsl
out
addr16
mov
in
jecxz
cmpsl
mov
inc
cmp
lds
xor
adc
test
adc
addb
add
rclb
mov
rclb
fmulp
push
jge
out
jb
sti
repnz
in
fbstp
mov
aas
sbb
or
cli
adc
adc
rcrl
adc
fdivs
gs
mov
jo
lds
rolb
push
push
pop
les
mov
jns
in
jge
outsb
jp
jns
mov
sub
or
mov
std
ja
xor
xor
out
repnz
sub
jecxz
or
add
pushf
cmp
or
jecxz
setb
sbb
and
jns
sub
cmp
sub
out
push
icebp
push
adc
sub
adc
mov
call
push
inc
dec
jb
or
and
dec
lret
rol
aad
push
sti
paddsb
popa
xchg
sub
add
cltd
insb
cld
mov
vfnmsub213ps
and
jb
or
or
addr16
mov
adc
repnz
sub
dec
and
in
push
push
mov
in
outsb
cmp
pop
push
push
in
xor
ret
out
inc
leave
out
aas
inc
int3
xchg
call
dec
lds
mov
fidivs
cmp
xor
mov
cmpb
data16
cli
dec
jmp
insl
divb
arpl
je
or
sbb
and
add
rcrl
sahf
and
sbb
cmp
inc
jnp
add
mov
mov
movsb
cli
and
mov
mov
mov
cld
popf
hlt
or
inc
repz
sti
xor
in
add
sahf
xor
popa
cli
les
pop
mov
lret
cmp
test
or
cltd
pop
cmpsl
sbb
cmp
adc
mov
pusha
lea
sub
inc
sbb
in
cmp
dec
and
fildl
movsl
icebp
ret
std
pusha
and
push
aas
and
push
or
test
mov
push
les
stos
es
xor
mov
fstpt
or
rcl
pop
out
les
or
mov
int
lock
pop
lea
jno
lcall
jnp
in
jb
mov
addr16
cmpl
mov
dec
iret
dec
arpl
xchg
orb
out
test
fildl
inc
arpl
jge
inc
insb
outsl
adc
lcall
clc
xor
sub
aas
and
jp
out
sub
hlt
js
mov
movl
jle
das
repnz
cmc
inc
xchg
cmpsb
cmpsl
cmp
iret
push
aad
xor
lds
inc
ss
pop
xchg
pop
cmp
pop
or
add
and
or
mov
pop
sbb
divb
xchg
mov
std
xchg
jae
ret
cmpsb
outsl
add
cmpsb
fildl
and
outsb
lahf
mov
in
adc
pop
cs
es
dec
pop
test
inc
imul
add
cmp
mov
xor
inc
sti
lods
imul
cwtl
mov
adc
cmpsl
sbb
hlt
and
inc
out
out
js
scas
scas
add
sbb
repnz
jecxz
mov
xchg
lret
in
je
push
jl
and
xchg
fstpt
ffree
or
cmpsl
adc
pop
aaa
or
jbe
rol
mov
mov
pop
pop
out
add
aam
xor
pop
dec
mov
mov
mov
movsl
test
pop
popa
xchg
push
scas
pop
mov
push
mov
sbb
movsb
pop
bound
push
test
push
mov
pop
push
sbb
sarb
jb,pt
fisubl
fwait
mov
scas
xchg
mov
lahf
data16
pushf
cmp
sub
sbb
ret
or
lret
push
adc
jg
push
fidivs
outsl
fisubrl
push
adc
mov
adc
jb
pop
les
out
fdivrl
jb
push
ja
iret
outsl
mov
push
pop
fadds
daa
outsb
jno
and
mov
inc
and
aad
hlt
cltd
xor
ds
mov
xor
cmp
mov
in
out
sbb
icebp
cltd
into
aam
testl
pop
pusha
addr16
or
lock
daa
mov
cmp
rcll
jmp
push
ds
jo
aam
add
push
mov
sahf
cltd
mov
iret
inc
push
sti
dec
cmp
sbbl
xchg
mov
in
jo
je
stos
into
mov
push
push
fldl
mov
pushf
psubsw
test
sbbb
pop
inc
push
cltd
xor
sbb
into
or
inc
jg
jecxz
mov
arpl
aaa
pop
jge
sub
loope
sbb
xchg
push
cmpl
inc
or
iret
lds
stos
push
inc
and
leave
push
test
mov
mov
popa
mov
xor
cmp
xchg
cmp
movsl
ret
push
mov
mov
ljmp
mov
call
aas
or
jne
pop
lods
mov
and
stos
fwait
push
and
adc
sbb
test
shrb
push
neg
addr16
imul
sbb
ss
movsb
add
cmp
loop
ds
jmp
xor
fucomp
cli
pop
jmp
testl
sub
idivl
adc
leave
cmpsl
in
out
fwait
add
outsl
mov
dec
pop
les
push
addr16
mov
mov
in
dec
mov
ret
cli
push
mov
imul
arpl
pop
arpl
jle
jl
movsl
mov
flds
xchg
jbe
inc
push
lea
mov
push
repz
lret
mov
dec
lret
sub
hlt
int3
and
test
or
push
clc
cmc
in
cltd
mov
das
push
mov
xchg
xchg
sub
inc
dec
jne
xchg
mov
jle
adcb
repz
ret
loopne
and
xchg
mov
adc
and
sbb
mov
fnstenv
jmp
and
rcll
dec
imul
iret
das
rorb
lret
fimull
out
fsubrl
add
push
lods
mov
shrb
movsl
icebp
mov
ss
fnstenv
fstps
dec
sub
ret
inc
out
xorl
aam
scas
sub
sub
cmp
jl
sub
imul
xor
leave
jge
sub
and
repnz
and
idivl
or
xor
repz
cmp
sub
cld
stos
addl
mov
xor
and
mov
rclb
inc
dec
ficoms
adcb
lea
aaa
push
cmp
mov
test
adc
mov
outsl
cmp
in
dec
adc
enter
xchg
jg
jg
inc
pop
ror
pop
mov
cmp
imul
jl
push
lcall
and
pusha
sbb
std
mov
jmp
mov
xor
jmp
loopne
push
fmuls
sahf
ret
stos
notb
mov
sub
xchg
dec
xchg
mov
add
and
aad
outsb
leave
mov
outsb
in
loope
adc
mov
addb
add
je
push
sub
push
out
lahf
movsb
shlb
ss
rcll
enter
in
pop
cld
push
xor
xlat
inc
or
xor
out
adc
cmp
out
mov
lret
dec
loop
popf
lret
xor
or
jae
fwait
push
in
adcl
and
jne
arpl
stc
push
lahf
test
lret
xlat
mov
jb
jp
mov
ja
cmc
inc
mov
cmp
and
mov
jbe
divb
es
and
lahf
dec
inc
pop
aaa
pop
push
repnz
jne
push
stc
pushf
mov
xchg
mov
gs
dec
dec
xor
add
push
gs
les
loope
js
sbb
out
leave
and
int3
out
mov
jecxz
lods
fmulp
xor
movsb
dec
mov
loope
push
rolb
insl
repnz
cmp
mov
mov
stc
movsb
sub
pusha
mov
jno
mov
jge
dec
lret
sbb
inc
push
daa
sub
xchg
bound
call
mov
inc
or
jp
xchg
jle
ss
jns
lea
mov
dec
lret
jb
test
mov
popa
sub
cwtl
cmp
cmp
lcall
mov
test
test
xchg
and
add
or
in
xor
rcrb
int3
aam
fwait
add
xor
bound
add
pop
ds
push
movsl
lock
outsb
jbe
mov
adc
cld
roll
fs
in
adc
out
jo
mov
pop
xor
pop
dec
cmp
lock
repz
add
xchg
int3
pop
es
in
pop
dec
jmp
aas
mov
inc
push
sub
xchg
inc
dec
aas
dec
addr16
jbe
xchg
pop
mov
add
sbbl
xchg
loopne
hlt
mov
inc
jecxz
enter
jecxz
pop
jno
icebp
xor
incb
inc
xor
mov
sub
test
adc
in
mov
lock
in
mov
mov
js
sti
fdivl
xor
xchg
push
fcoml
push
lahf
stc
push
shrl
pop
es
inc
push
sti
xchg
loopne
pop
popf
adc
xchg
stc
push
dec
lods
sti
fstl
or
pop
jl
dec
and
jnp
loop
in
push
sub
subb
loopne
sub
cmp
fdivs
in
and
pop
ljmp
orl
aam
mov
out
dec
stos
jmp
xor
push
movsl
enter
cmpsb
test
insl
inc
fs
mov
xor
loope
fidivs
mov
shll
es
es
push
pop
jg
sbb
int3
test
loop
ret
pop
add
and
push
sub
or
ljmp
push
movsb
clc
rolb
ss
cmp
xlat
lods
sub
rol
sub
cmp
and
sub
push
adc
flds
aad
out
add
sbb
scas
xor
mov
jns
ljmp
fiadds
dec
jnp
mov
rol
pop
sub
subb
pop
sbb
stc
lods
cmp
ss
sbb
sub
sbb
xlat
lods
or
jnp
or
and
dec
xlat
jbe
test
lock
and
pop
jle
jp
cli
sar
test
dec
inc
inc
inc
leave
lret
pop
jno
xchg
loopne
adc
inc
pop
lahf
das
fdiv
incb
data16
test
daa
mov
fisttps
test
jmp
jl
mov
xor
ds
pop
push
popf
jmp
xor
mov
test
orb
lret
inc
into
sti
std
bound
cwtl
rorl
daa
int
add
pop
and
cmp
add
mov
cltd
inc
fistpl
add
xor
test
int3
push
fstpt
mov
cmp
leave
add
sub
mov
mov
push
inc
lcall
inc
out
pop
jmp
rolb
push
push
inc
divl
nop
lods
pop
mov
cmp
mov
cmp
push
adc
aad
int
cwtl
loope
xor
scas
scas
lret
add
into
pop
ja
out
mov
xchg
sub
jge
sbb
jnp
jne
xor
adc
or
inc
mov
imul
cmp
dec
dec
gs
scas
mov
cmp
fcomip
lahf
mov
bound
fstpl
cmp
jle
popa
pop
mov
or
mov
and
mul
cmp
mov
hlt
xchg
pusha
int
xor
sbb
cs
or
mov
xor
dec
scas
stos
pop
jmp
es
or
addb
lcall
gs
sbb
insb
lds
insb
lahf
lods
sub
js
jae
adc
inc
popa
clc
cld
test
push
cmp
and
sub
repnz
inc
sub
dec
stos
int
xchg
jl
rep
out
out
dec
shll
aam
mov
cmpsb
aam
pusha
add
pop
aas
dec
cli
ficomps
push
sbb
aad
aad
push
push
mov
inc
jnp
ret
ret
repnz
aad
cli
stc
subb
mov
jbe
jmp
ljmp
fs
push
shrb
insl
cld
xor
cs
and
sbb
ja
mov
scas
test
adc
ret
or
cwtl
jbe
bound
pushf
adc
xchg
add
xchg
mov
jno
shlb
out
cltd
xor
sub
cld
lods
pop
in
int
sahf
push
fbstp
and
and
test
sub
or
xchg
or
insb
mov
lcall
push
xor
push
ret
pop
fmuls
xchg
sbb
mov
jae
fstpt
stos
add
ss
push
scas
and
adc
sbbl
push
lret
rcrb
scas
imul
push
ret
stos
cmc
mov
xchg
mov
pop
adc
xor
pop
push
fsubl
pop
les
or
cwtl
rcr
hlt
in
mov
iret
mov
xor
scas
push
push
iret
inc
dec
mov
mov
sbb
jg
imul
sbb
andl
mov
sub
jmp
xor
icebp
jb
xchg
fisttpl
popf
mov
jno
dec
mov
xchg
loope
jg
push
popa
and
repz
xor
ret
shll
xchg
pop
and
mov
jno
add
loop
xchg
push
sbb
xchg
mov
xor
gs
rcrb
popa
dec
orl
jno
test
jle
pushf
add
int3
push
scas
jl
in
cs
xchg
les
das
xchg
gs
in
cld
push
adc
shrl
mov
add
xor
int3
mov
xchg
cli
xchg
jno
push
lock
pop
mov
repz
xor
test
mov
mov
repnz
mov
mov
pop
dec
adc
mov
arpl
push
push
xor
mov
stos
or
jp
in
fnstenv
mov
outsb
mov
pop
or
repz
cld
outsb
out
inc
jmp
xchg
sahf
iret
mov
xor
inc
pop
iret
shrl
mov
mov
adc
add
ljmp
sub
ret
jp
mov
jl
pusha
mov
xor
aaa
aad
pop
aam
mov
sbb
insb
fnstsw
outsb
pop
xchg
rclb
and
fcoms
shll
jp
xchg
mov
and
pop
mov
sub
faddl
mov
in
mov
cmp
xchg
rcrl
and
xchg
mov
adc
inc
pop
iret
inc
push
fdivs
jge
sub
sub
mov
rol
cmp
test
push
arpl
nop
add
stos
pop
mov
mov
sub
xor
jecxz
int
aad
mov
inc
cmc
dec
je
sbb
bound
push
lods
sahf
and
pop
movsl
iret
xchg
or
add
sub
dec
inc
pushf
mov
loopne
xchg
bound
stos
aaa
ljmp
inc
or
fwait
mov
push
xchg
pushf
addr16
jns
xor
xchg
mov
cmpsl
and
jle
fsubrs
movsb
inc
dec
sub
cmpsb
cmpsb
jne
dec
dec
mov
lret
test
enter
ret
mov
call
pop
jge
ror
adc
loope
in
insb
movsb
adc
jbe
ficoml
pop
lods
pop
lods
jbe
pop
and
and
jns
test
mov
icebp
sub
outsb
dec
dec
dec
xor
xchg
adc
mov
fsubrp
pop
decb
xor
add
shrb
mov
xchg
inc
addr16
mov
fs
test
in
inc
xchg
sub
ja
sbb
addl
xor
jge
mov
test
cmp
push
mov
xorb
and
push
xor
and
ret
push
or
js
dec
adcb
stos
xor
mov
fsubl
inc
insl
mov
sbb
jge
jno
and
sub
jno
rorl
loope
add
pop
int
repnz
ss
lods
lret
sti
jno
jmp
dec
test
push
pop
cmp
dec
or
and
sarl
and
adc
outsl
cs
popa
sbb
mov
das
fisubl
cmpsb
call
mov
nop
inc
ds
mulb
pop
inc
mov
jle
clc
sbb
lret
daa
lcall
push
gs
cltd
xor
jb
fs
push
cmp
icebp
cld
es
mov
ds
sub
out
or
and
adc
inc
cmp
fwait
lds
idivb
fimuls
jg
mov
and
adc
sbb
divl
imul
aaa
xchg
mov
rorl
fists
jmp
ljmp
mov
aad
lret
xchg
mov
sbb
inc
sbb
aas
cltd
cmp
cmc
aaa
loopne
mov
cltd
clc
mov
fistpll
sbb
mov
mov
fldt
lret
ds
or
sub
dec
std
pop
in
push
fdivs
insb
cmp
and
rorb
jp
pop
adc
cmc
call
push
cmp
les
sbb
in
js
pushf
test
scas
inc
sub
scas
gs
lock
push
testb
adc
inc
arpl
call
and
lahf
xchg
inc
jnp
jb
add
mov
dec
ljmp
std
push
mov
outsl
and
cmp
jb
xchg
xchg
divps
xor
shrb
push
sahf
jle
aad
push
std
out
push
leave
rcr
cld
stos
popf
leave
jno
sub
leave
xor
xchg
and
jbe
fidivs
push
pop
xor
inc
aaa
push
sbb
jp
fsubrs
fisubs
push
stc
stc
or
push
sub
loopne
stc
je
xchg
inc
data16
aaa
mov
scas
mov
mov
mov
push
movsb
outsb
and
sti
dec
dec
outsl
push
int
mov
addr16
je
loopne
roll
xor
out
lds
rorb
pop
xchg
sbb
adc
pop
xchg
jb
icebp
jno
test
call
daa
inc
nop
out
out
mov
inc
psadbw
sub
movsl
out
out
std
push
pop
mov
movsb
xor
std
mov
jl
sbb
call
std
jbe
xchg
jmp
bound
arpl
jno
ret
gs
lock
xchg
cltd
repnz
iret
mov
out
xor
int3
pushf
test
add
loopne
and
jp
add
pop
andl
fwait
stos
push
mov
mov
fwait
mov
adc
daa
mov
mov
fnstenv
js
enter
mov
jbe
iret
sub
push
cwtl
stos
cld
cwtl
push
int3
pop
in
pop
in
pop
in
ret
mov
or
je
jns
sbb
out
sbb
sahf
xchg
aas
icebp
pop
dec
or
lods
xchg
push
xor
daa
push
fbld
rcll
jge
gs
arpl
inc
fs
fdivp
xor
jecxz
mov
xchg
sti
mov
insb
sub
cmpsl
pushf
pop
adc
daa
aam
pushf
jle
cwtl
test
scas
xor
jno
mov
xchg
movsl
pop
in
push
mov
xlat
xchg
insb
loopne
push
sub
dec
fsubp
std
push
popa
in
test
fsubs
in
or
popa
xlat
jmp
cmpsb
pavgw
and
add
jbe
stos
jae
mov
xchg
cmp
ss
jp
jb
ljmp
add
or
mov
xchg
aaa
lret
lcall
mov
fdivl
pop
sub
push
xor
push
push
nop
or
lock
imul
outsl
sbb
pop
mov
inc
mov
in
cwtl
mov
adcb
mov
cmc
jle
jmp
cli
dec
or
stos
daa
popf
test
push
mov
cltd
mov
sahf
test
add
sub
adc
mov
ljmp
xchg
sbb
ret
shrb
add
ss
jmp
pop
je
jae
sar
add
aas
aam
mov
mov
inc
in
mov
insl
jnp
push
pop
sbb
jp
xchg
sbb
mov
call
jecxz
mov
rcll
fstpl
in
mov
pop
mov
gs
fsubrs
arpl
jmp
arpl
aas
xchg
lcall
sbb
xchg
pop
ja
jb
xchg
je
push
fcompl
ret
pop
pushf
dec
std
jmp
or
or
and
andb
jg
xorl
aaa
sti
sahf
adc
fsubl
pop
popa
inc
and
in
sbb
dec
orl
js
sub
and
stos
xchg
bound
inc
sbb
cmp
sahf
dec
pushf
popf
nop
push
popf
sti
movsb
jp
and
gs
adc
xchg
fiaddl
push
dec
aas
jg
pop
nop
loop
jnp
ds
rcrl
add
enter
sarb
xor
inc
inc
push
dec
mov
pop
loope
cwtl
cwtl
push
add
pop
and
stc
cwtl
and
push
lods
cmp
mov
dec
sbb
cld
subl
gs
jmp
lret
sub
mov
add
jbe
insl
lret
inc
out
add
into
enter
lods
iret
adcl
add
lock
pop
push
or
xchg
mov
pop
or
in
adc
xchg
shll
mov
pop
int3
adc
stos
scas
pop
mov
sub
mov
in
mov
jne
add
push
push
dec
jo
xchg
repnz
andl
mov
xchg
repnz
test
stos
mov
dec
outsb
add
je
cmp
mov
dec
clc
in
fwait
stos
out
xchg
pop
or
dec
add
xor
aaa
inc
incl
ljmp
mov
test
adc
aas
pop
ret
icebp
adc
jecxz
scas
aas
cmpsl
xchg
cmp
adc
mov
lcall
stc
dec
ljmp
sbb
daa
and
pushf
or
xchg
mov
outsl
add
je
stos
arpl
and
sarb
test
outsl
push
xchg
xchg
cmp
insl
cmpsl
stc
add
ror
lret
dec
and
insb
test
inc
lods
dec
shll
and
inc
rcll
movsb
mov
adc
lcall
hlt
and
les
mov
aas
jae
mov
mov
call
pushf
sub
dec
test
jle
jmp
or
enter
cmp
cld
xor
push
jb
in
enter
outsl
das
loope
jbe
push
jbe
xor
popa
sbb
lret
dec
ja
movsl
mov
das
jl
rcrl
test
gs
outsl
adc
mov
sti
arpl
sub
stos
dec
lods
and
push
ss
stc
add
pop
inc
xlat
add
jb
ss
test
subb
and
popf
fsubrl
cli
cmp
fdivrs
jp
and
xchg
pop
lahf
inc
adcl
pushw
lea
xchg
sarl
scas
insb
mov
mov
cltd
xchg
aas
mov
lock
cwtl
xorb
mov
xchg
adc
sbb
add
lret
aas
mov
sbb
pop
enter
scas
outsb
sub
in
mov
pop
cmpw
test
rorb
jecxz
pusha
xchg
enter
popf
stos
jecxz
out
jns
dec
add
sub
test
movsb
movsl
push
sbb
inc
lea
jge
sub
mov
dec
or
xor
fsincos
pop
sbb
lret
fcoms
je
pushf
lods
add
pushf
sub
or
pop
inc
mov
inc
sbb
sarl
mov
sub
enter
or
pop
and
movsl
mov
rol
cmp
stos
icebp
fstps
mov
cwtl
mov
aas
mov
imul
rcl
fwait
out
lock
lods
mov
xchg
fisubl
jae
jb
jno
xor
jbe
cmp
mov
adc
inc
sub
aas
stos
std
cmpsb
vucomisd
aaa
sub
aas
clc
fsts
data16
sarl
ds
sub
lret
xchg
pop
add
xchg
adc
push
cmp
out
xor
xor
push
jp
nop
mov
push
hlt
and
ret
mov
pop
dec
mov
adc
ja
loop
sbb
rclb
mov
mov
or
or
pop
inc
enter
jne
call
sub
add
xchg
mov
mov
mov
inc
cld
jbe
dec
shl
and
mov
push
sbb
dec
mov
inc
adc
js
sub
sahf
out
fsts
adc
lcall
pop
in
mov
pushf
shrb
lock
rcr
pop
xchg
sub
sbb
out
inc
ljmp
mov
push
sbb
adc
aas
xor
popa
pop
ss
or
int3
xchg
adc
sub
jmp
mov
or
mov
xchg
aam
int
rolb
xchg
sub
in
mov
stos
lea
push
nop
stc
testl
sbb
insl
lods
ds
mov
popa
daa
in
mov
orl
and
cmp
rcl
xor
ret
jl
sbb
aad
jb
cmpsb
dec
pop
and
ljmp
fs
fldcw
add
push
sti
adc
int3
negl
mov
aad
mov
loop
jae
or
inc
shlb
cmp
idivl
sbb
jnp
stos
pop
xor
xchg
pop
cmc
cli
nop
scas
popl
adc
xchg
lahf
in
aam
adc
cmp
cld
js
fbld
mov
stos
cmp
xchg
adc
jo
cld
leave
push
movsl
popa
out
mov
call
mov
inc
movsl
test
les
mov
in
or
out
mov
lea
bound
xor
call
loopne
lods
pop
push
int
lods
dec
dec
cltd
hlt
dec
push
push
jle
in
stos
imul
fdivl
lea
in
dec
adc
or
into
jne
or
ljmp
jo
jae
mov
ja
xor
pop
sub
cmp
or
and
jo
movsl
shll
fs
insb
cmpb
and
pop
cld
cmp
aas
pop
cli
cmpsb
mov
mov
sbb
fisttpl
sbb
dec
into
and
ror
dec
pop
push
sbb
pop
xchg
shrl
push
sbb
and
inc
lahf
jmp
jmp
ret
arpl
stos
push
js
cld
jge
nop
pop
sbb
mov
pop
int
dec
in
dec
outsl
iret
cmpsb
jo
jo
mov
xchg
in
inc
fildl
mov
add
push
mov
xor
fs
xor
fdivrl
lock
sub
pop
mov
lock
inc
and
xlat
adc
jnp
adc
inc
rol
xor
ficoml
movsl
mov
or
fwait
pop
in
xchg
adc
insl
add
dec
or
dec
fs
lds
xor
push
lods
test
mov
mov
inc
fmulp
adc
fcoms
sub
fwait
mov
and
jno
loope
vmovapd
shld
dec
mov
add
es
pop
filds
repnz
xor
enter
xchg
add
fwait
push
cli
daa
ret
fldenv
popf
adc
sahf
in
clc
dec
scas
popa
jge
lods
jno
xchg
mov
pop
cmpsb
int3
jg
ss
mov
psadbw
out
mov
mov
pop
mov
repz
loopne
sar
dec
mov
add
popf
push
pop
mov
and
in
rcrl
adc
lock
pop
mov
jmp
pop
xchg
sbb
push
movsl
pop
dec
dec
mov
sub
pop
fists
adc
mov
out
clc
sti
aad
das
lods
xchg
inc
and
fmull
mov
ficomps
cmpb
push
dec
loop
mov
aad
push
cld
into
lods
jg
faddl
inc
dec
push
sahf
pusha
xchg
lods
and
push
rclb
or
je
cmovge
mov
int
mov
xchg
mov
lock
call
jb
mov
lds
mov
sti
lret
adc
push
mov
push
or
fs
jno
xchg
sbb
and
adc
mov
dec
add
add
push
xor
xchg
fdivs
mov
push
cmpsl
jmp
jle
repnz
lahf
xor
cmp
mov
pmaddwd
jae
mov
xchg
and
out
fistps
mov
leave
cmpsl
iret
scas
hlt
xchg
ret
jns
dec
imul
gs
push
cmc
aad
stc
cmp
mov
lods
sbb
lret
adc
gs
pop
sub
push
stos
mov
mov
pop
mov
add
aad
jle
daa
imul
cs
pop
inc
add
jne
les
cld
push
jo
mov
aaa
imul
sub
aad
cld
or
add
add
stos
inc
ljmp
aad
aad
pop
lcall
jo
pop
mov
cmp
or
mov
mov
sbb
mov
cmp
clc
repz
sub
lea
add
jle
or
dec
pop
adc
xchg
pushf
and
fcomps
adc
mov
and
int
xchg
pop
lcall
sub
jno
add
jmp
mov
add
out
pushf
jecxz
lahf
test
pop
and
aas
lret
sbb
adc
or
scas
scas
das
out
clc
inc
mov
inc
push
jne
iret
cli
cmc
jae
pushf
lcall
ja
push
bound
movsb
dec
xchg
push
enter
jle
or
push
imul
jnp
jg
xor
pop
out
test
mov
pop
jge
mov
cltd
cli
aad
or
mov
ficoml
mov
adc
or
jle
insb
cld
out
sub
dec
imul
vshufps
dec
js
inc
call
dec
fdiv
inc
stos
testb
loope
fs
lret
cmc
in
jne
mov
in
xchg
sbb
sarb
xchg
jg
je
mov
and
and
push
add
outsb
inc
pop
mov
xchg
movb
lods
sahf
test
cmp
pop
push
sti
cmpb
popa
std
lahf
out
lods
lcall
xor
lods
inc
pop
or
stc
lds
loop
jno
xchg
mov
jg
int3
inc
push
inc
insl
insb
pop
push
pop
jecxz
jle
roll
cmp
test
push
sub
and
insb
out
sbb
or
rclb
jge
push
and
mov
pop
xor
aam
push
mov
jno
stc
sbb
subb
xor
fwait
in
push
clc
je
sbb
out
mov
repz
in
dec
add
lahf
mov
jge,pn
test
fs
xor
jns
mov
xor
out
mov
fwait
sub
mov
ret
mov
xor
ljmp
mov
and
adc
and
shlb
ljmp
mov
adc
mov
jno
je
xchg
or
fxch
aam
aad
push
inc
xchg
fstpl
xor
pcmpgtd
cmpsb
ficomps
pushf
fists
pop
mov
das
neg
pushl
add
iret
fidivrl
nop
outsb
fadds
iret
popa
cmpsb
xchg
sbb
fdivs
push
ss
cli
add
xchg
pop
lea
into
or
mov
push
adc
in
out
aad
or
test
inc
mov
decb
adc
sbb
adc
pop
pop
fidivrs
lods
pop
cwtl
test
fwait
ds
xor
xchg
xchg
jb
lret
test
pushf
shl
xorl
sbb
dec
xchg
pop
mov
addb
subb
push
rorb
pop
cmp
insb
rcrb
ja
addr16
data16
pop
call
dec
xchg
ret
scas
push
push
cld
xchg
jle
pusha
sbb
or
jp
lret
cld
dec
mov
mov
imul
and
adc
scas
les
imul
xor
cli
test
sbb
es
dec
adc
bnd
jns
jnp
add
or
push
aaa
jg
push
jae
pop
ret
and
dec
int3
mov
adc
in
lds
xlat
ja
jl
dec
or
nop
cmp
fbstp
shrl
or
dec
jnp
jae
and
adc
push
push
mov
mov
mov
add
xchg
dec
rcll
inc
mov
lods
insb
xchg
push
dec
cmc
jle
and
and
js
test
xchg
mov
add
ss
sub
pop
mov
dec
sbb
in
inc
adc
lret
mov
pop
mov
pop
pop
mulb
nop
into
or
js
enter
xlat
or
je
gs
cmp
ja
lcall
lcall
sub
pushf
int
cmpsl
xorb
mov
ja
xorb
push
mov
iret
sbb
movups
pusha
movsl
push
push
adc
gs
sbb
xchg
mov
pop
mov
fisubs
dec
test
sti
cmp
push
andl
sbbb
jmp
scas
divl
pop
lcall
cwtl
int3
push
fadd
jno
sbb
adc
mov
jne
dec
add
in
sub
mov
mov
test
and
test
in
jno
xor
call
fs
sbb
pop
enter
test
out
pop
adc
movsb
imul
mov
sub
into
inc
rol
xchg
mov
or
imul
mov
pop
mov
dec
bound
int3
in
sbb
sub
scas
aad
call
sub
jbe
rcrb
push
cmp
sbb
inc
bound
aam
mov
lds
aad
imul
add
xorl
out
out
mov
dec
inc
dec
lods
lcall
leave
inc
inc
setle
and
sbb
stos
jg
out
adc
sub
or
sbb
pop
int
shrb
cs
popa
dec
std
out
xchg
insb
pushf
mov
cmpsl
scas
mov
push
dec
and
pop
add
aad
hlt
stos
push
sbb
cmp
pop
leave
in
xchg
mov
xlat
jo
dec
pop
frstor
out
add
mov
mov
pop
insb
sub
lods
enter
jne
test
inc
rcl
mov
cltd
push
fwait
arpl
popa
sarb
adc
out
cmp
mov
cmp
pop
lods
sbb
sbb
xchg
dec
fucom
outsl
mov
cmpsb
push
loope
jecxz
rorl
imul
out
popf
inc
jge
int
pusha
push
into
and
ds
adc
adc
lods
movsb
mov
jle
imul
les
ret
xor
orl
out
mov
jns
fiadds
xchg
push
xchg
mov
mov
sahf
aam
xchg
test
jl
popf
bound
insl
cwtl
loope
jmp
cmc
aaa
inc
jmp
adc
in
ljmp
jbe
loop
outsl
shr
mov
xlat
push
icebp
jle
scas
xchg
in
loope
dec
ds
loop
pusha
mov
mov
pusha
test
int3
int
xchg
sahf
pop
mov
in
xor
stos
mov
cmp
fiaddl
xor
jg
inc
mov
lods
push
adc
inc
jmp
jge
test
inc
call
lahf
sbb
sub
xchg
mov
sub
or
addr16
sti
cmc
push
aam
pop
pop
push
push
scas
sub
mov
lret
xchg
nop
addl
pop
jmp
sbb
in
and
or
adc
and
mov
dec
hlt
cmp
pop
cmp
jg
out
js
xchg
xchg
jmp
movsb
iret
lock
popf
mov
dec
dec
insl
insl
idiv
fldenv
test
xor
pop
xchg
lds
aaa
fstpt
dec
jno
and
repnz
imul
rorb
mov
setae
rorl
push
js
mov
cmpsb
inc
add
outsl
fdivl
ss
push
jg
loopne
mov
popf
xor
leave
jmp
test
sub
addr16
sbb
shll
das
inc
fldenv
fisttps
mov
mov
movsb
or
sbb
cmp
jnp
daa
leave
push
xchg
or
rclb
call
xchg
hlt
fs
inc
dec
push
dec
mov
pusha
mov
js
pushf
push
dec
xchg
loopne
sbb
cmp
out
in
dec
add
jg
pushf
pop
mov
sub
cmpl
ficoml
insb
pusha
mov
pop
stos
loop
or
mov
jl
add
add
push
test
inc
xor
inc
sbb
and
test
fimull
cli
je
in
pop
inc
or
sar
gs
inc
sub
push
push
stc
adc
daa
dec
cwtl
ret
or
mov
cs
jp
add
js
cmpsb
mov
or
into
aad
das
cmc
fiadds
inc
jmp
inc
inc
push
inc
or
dec
ja
frstor
movsb
mov
xchg
sub
push
mov
loop
jno
jnp
pop
mov
push
pop
jne
inc
mov
sbb
mov
lret
push
inc
dec
jge
jae
pop
xchg
cmp
dec
lock
add
stos
pop
cltd
adc
xchg
jge
js
das
sahf
inc
loop
mov
add
mov
fchs
xchg
lahf
sbb
cmc
mov
je
loopne
xchg
mov
daa
test
orb
rorb
xchg
dec
inc
es
pop
js
clc
sahf
or
mov
pop
data16
ficoml
addr16
fldl
xor
and
mov
imul
std
dec
sub
fs
sbb
pusha
adc
test
push
scas
fidivl
pop
and
icebp
test
mov
rcl
mov
mov
cltd
pop
cmp
std
sbb
movsl
pop
mov
push
inc
pop
movsb
jge
xor
fnsetpm(287
cmp
and
jno
imul
pop
ret
cmp
js
pusha
push
mov
lret
sbb
shrb
jne
nop
les
fiaddl
dec
out
movsb
outsb
cmp
dec
cmp
dec
fcompl
mov
dec
and
sbbb
icebp
out
leave
idivl
adc
jno
mov
lcall
in
aaa
aas
or
sbbl
push
sbb
clc
jne
rol
and
lds
push
movsl
iret
add
pop
lods
sub
rorb
ret
iret
adc
cmp
xchg
outsl
sub
dec
out
jne
fisubs
in
dec
aas
ret
push
mov
and
nop
in
ja
pop
andl
cld
adc
sti
mov
loope
insl
jno
or
lods
jne
jno
inc
rcrl
int3
sahf
sbb
xchg
adc
cmpsl
xchg
inc
test
inc
xor
xchg
out
mov
add
cmpsl
arpl
rol
stos
je
mov
sahf
xchg
jnp
les
adc
lret
clc
and
outsl
push
pop
fimuls
jae
lods
fld
ljmp
arpl
shlb
push
mov
std
lock
imul
sub
push
sbb
inc
mov
les
test
je
mov
outsb
and
shrl
pop
idiv
push
stos
movsb
in
repz
ja
and
add
lds
inc
jns
clc
mov
popa
lods
int3
loopne
or
mov
sub
inc
sbb
cltd
mov
jbe
mov
jecxz
mov
in
mov
mov
inc
xlat
out
jg
pop
loope
xchg
out
fwait
xchg
ljmp
insb
gs
pop
push
rcll
push
sbb
adc
loope
jecxz
xchg
push
rcll
fists
test
std
push
dec
xchg
out
mov
inc
mov
mov
jecxz
sahf
and
repnz
loopne
fsubrl
cmp
rol
cwtl
mov
lds
fcomi
inc
xchg
and
mov
xor
insl
mov
insl
sarb
lods
in
bound
ja
movsb
lret
mov
adc
insb
ljmp
leave
xchg
in
aaa
adc
ss
mov
adc
pop
cmp
adc
xor
rorb
lea
int
jle
dec
xor
outsl
sarl
inc
mov
push
rol
pop
push
stos
or
jo
in
sahf
sub
popf
pop
jmp
sbb
sub
mov
xor
push
ljmp
adc
xor
out
inc
out
inc
sbb
xor
cmp
adc
jp
sub
fwait
inc
jge
cmp
das
aad
push
and
lock
leave
xchg
mov
cmp
cwtl
and
lea
cmp
ror
mov
pop
jae
xorl
fldz
idiv
cmpl
cmp
jmp
sub
jne
push
pop
imul
sbb
lret
ljmp
dec
cmp
imul
bound
mov
inc
or
test
inc
test
push
scas
cmc
xor
mov
mov
xor
push
mov
lds
movsl
dec
mov
jmp
not
or
rcrb
cmpsl
pop
xchg
in
mov
sahf
es
insb
sub
es
add
iret
setae
fsubs
mov
adc
and
je
mov
repnz
dec
mov
loop
jg
nop
lock
cltd
jge
nop
loop
dec
add
mov
mov
cld
pop
jmp
jmp
sub
in
adc
and
push
scas
sbb
dec
ret
cmp
mov
rclb
rcr
movsl
push
or
xor
pop
call
fadds
dec
inc
sub
xor
sti
inc
xchg
pop
add
mov
ds
out
shll
jecxz
cmpsl
pop
ja
popf
pop
sbb
and
addr16
js
sub
test
inc
pop
lea
clc
xlat
mov
imul
imul
push
inc
les
ret
mov
jno
outsb
dec
and
push
mov
pop
xor
outsb
jo
xor
xor
scas
inc
daa
inc
fsubl
test
xchg
push
test
push
xchg
test
xchg
mov
shl
xchg
sub
call
jne
xor
repz
out
cmp
rcrb
in
inc
rcrb
and
popa
add
inc
fwait
scas
mov
or
or
fs
dec
push
pop
insl
gs
fiaddl
rcll
fs
call
out
arpl
pushf
mov
in
push
out
mov
dec
shl
das
pop
cwtl
xor
in
cmp
bound
scas
notb
jmp
in
xchg
icebp
push
sti
xchg
fmuls
or
pop
sbb
fldlg2
scas
and
inc
and
mov
adc
sbb
adc
mov
cmc
inc
andl
rcr
cmp
add
negb
xor
insl
push
in
push
mov
fcmovu
mov
icebp
or
das
push
sbb
cli
in
push
mov
imul
test
jb
loopne
test
movsb
enter
aas
jmp
or
in
push
jns
jno
xorl
orb
add
jb
outsb
cmp
repnz
rcr
mov
cmc
add
xlat
shrl
inc
les
mov
sbb
daa
nop
mov
pop
mov
inc
mov
ret
mov
iret
stos
jp
sub
subl
in
push
dec
mov
xor
out
jl
sbb
fildll
jecxz
enter
and
xchg
push
call
int3
lods
xor
jo
inc
loop
mov
and
int
jmp
gs
fucom
frstor
mov
pushf
sti
jecxz
nop
lret
or
inc
sti
xchg
in
test
dec
aad
shrl
mov
shrl
repnz
fs
insb
jecxz
lret
scas
pop
cmp
lahf
pop
mov
and
imul
add
push
sub
add
lahf
cld
mov
rcll
stc
cmp
cmp
and
or
sbb
adc
mov
pop
ja
adc
cs
mov
dec
js
cmc
cmc
mov
xor
call
jp
mov
les
dec
push
lret
xor
xchg
adc
mov
pushf
mov
xor
lcall
lret
xor
adc
jle
push
xor
dec
mov
sbb
mov
mov
adc
imul
push
fbld
call
in
pushf
mov
sbb
pop
jae
xchg
jb
int3
push
leave
push
xchg
mov
mov
add
mov
jns
or
cli
xchg
orps
push
xchg
lret
sbb
fcompl
jns
repz
sub
push
mov
mov
cmpsl
clc
mov
cli
xchg
push
xchg
nop
rcll
lret
xor
xchg
cmpsl
add
fsubrl
cmp
push
ds
add
lock
fdiv
adc
sbb
mov
stc
aam
and
pop
mov
cmc
sbb
mov
fs
into
mov
fsubrs
leave
das
lea
jmp
xor
mov
hlt
ds
pop
sbbb
out
mov
sti
cwtl
add
out
mov
pushf
iret
adc
mov
jns
mov
lock
cltd
sub
add
test
xor
xor
test
jecxz
pushf
loope
call
les
mov
mov
jl
stos
jne
xor
mov
ss
pop
das
cltd
dec
movsb
pop
ret
arpl
xor
sub
xlat
loope
ret
data16
add
out
pop
mov
dec
or
cmp
sti
insl
push
add
lds
in
stos
adc
push
ret
pop
std
jnp
dec
call
int
add
lcall
lcall
or
mov
fistps
loope
data16
lret
pop
outsb
stc
mov
xor
repz
roll
mov
add
std
fcoml
js
dec
mov
scas
jle
stc
dec
push
stos
lcall
and
jne
dec
xor
jl
xor
mov
add
jno
outsb
inc
pusha
mov
mov
mov
add
fwait
add
pop
pop
cmpsl
lods
mov
jmp
cmpsb
push
adc
es
and
rcr
add
mov
cli
pushf
std
fcoms
bound
push
dec
jno
ljmp
hlt
adc
sbb
and
int3
inc
inc
test
sbbl
lret
outsl
imul
ret
std
fisttps
test
out
add
cmp
xor
daa
mov
push
and
push
shrb
pushl
mov
inc
lahf
mov
xrelease
push
mov
int
or
imul
mov
adc
int
pop
mov
mov
and
stos
rol
cmpsl
fcom
cmc
adc
enter
cmp
out
out
xchg
cmp
push
push
scas
movsb
lea
cmpsl
lcall
ljmp
das
jp
mov
mov
push
imulb
or
cld
aad
xchg
mov
cmp
jmp
out
stc
test
ja
bound
mulb
dec
iret
icebp
cmp
or
iret
mov
mov
in
cmpsb
add
and
pushf
sbb
in
push
mov
gs
clc
fidivl
stos
dec
lds
mov
pop
xor
mov
lret
in
aaa
xchg
popa
jnp
xchg
pop
cmpsb
not
xchg
in
push
xchg
pop
and
dec
add
in
cmp
push
stos
in
fwait
mov
movsb
push
je
dec
dec
int
pop
loop
cmp
in
sub
add
pop
jne
das
pushf
pshufw
fadd
insl
int
andl
imul
outsl
jae
ret
xchg
iret
or
out
add
loop
sahf
push
xchg
lods
mov
mov
pop
mov
out
xor
jge
jl
pushf
adc
adc
pop
sub
bound
push
add
pushf
rcrb
pusha
or
mov
xchg
cmp
jle
cld
cmpsl
lret
cmpb
mov
sbb
or
scas
xchg
or
mov
mov
aaa
cmpsb
cmp
and
in
pop
sbb
fwait
fwait
in
stos
push
sbb
dec
push
and
jmp
cmpsb
inc
lret
or
pop
mov
mov
ds
fwait
pop
hlt
subl
mov
or
xchg
gs
enter
push
les
lcall
pusha
data16
aad
pusha
xchg
mov
pop
test
jmp
scas
mov
adc
les
cmpsl
add
adcl
jbe
out
test
addr16
scas
jg
scas
popf
mov
jg
xorl
jmp
inc
mov
or
fsubl
jnp
fnstsw
cmp
test
jg
push
fucom
stc
xor
int
jmp
mov
push
aas
push
jg
jbe
push
push
inc
mov
pop
mov
jecxz
cmp
jb
js
push
stos
cli
xlat
mov
mov
sub
add
mov
sbb
das
push
pop
ds
inc
cld
mov
enter
add
rcll
xchg
xchg
outsb
dec
scas
mov
in
lods
aam
negl
jg
jae
div
mov
inc
push
es
pop
inc
cwtl
jnp
and
es
not
outsl
ror
xor
fistpll
dec
rcrl
insl
cmp
out
iret
push
adc
je
in
sbbb
outsb
jl
call
mov
mov
testl
adc
jmp
out
jbe
xor
lock
fistpl
faddl
push
dec
mov
stos
loopne
iret
add
cmpsb
test
xlat
cmp
lods
mov
sub
jmp
fucomp
xchg
stos
inc
cld
add
sbb
subl
fisttpll
das
cmp
cltd
sub
xor
mov
inc
xchg
sub
pop
mov
icebp
sub
movsb
pushf
dec
dec
in
fdivrs
stc
xchg
push
popf
dec
es
jae
jl
aas
mov
or
fisttps
adcb
mov
imul
rorl
sub
pop
mov
cmp
adc
push
jecxz
in
jge
cmc
cmp
leave
sub
scas
mov
xchg
std
pop
dec
outsb
jle
xchg
daa
dec
mov
sub
sbb
cmpsb
sbb
jmp
xlat
sbb
mov
mov
outsb
mov
das
fxtract
lcall
mov
adcl
fistl
cmp
jge
rcr
sub
pop
cmp
xor
sti
xchg
sbb
lds
pop
or
push
and
dec
stos
or
xchg
pop
gs
aam
or
lret
xchg
ret
pusha
and
test
push
shlb
pop
fildl
stc
adc
cmp
fstpl
sub
test
mov
xchg
out
into
in
call
out
inc
outsl
jno
push
add
xor
popa
sbb
xor
and
jg
xor
sub
jae
in
lds
ljmp
cmp
cmc
lahf
dec
or
jns
imul
pop
xor
icebp
out
mov
dec
cmp
mov
fucomip
loope
loope
xchg
jmp
imul
mov
pop
pop
lcall
dec
inc
sub
das
arpl
cld
jns
nop
xor
cmpsb
dec
out
xor
stos
push
mov
icebp
xchg
fsubp
jecxz
out
lds
jle
sub
icebp
xor
pushf
sub
mov
inc
test
and
dec
pushf
and
pop
das
xor
cmp
repnz
mov
movl
mov
dec
aad
imul
fs
xchg
and
push
cmp
xor
sub
inc
popf
roll
or
pop
pop
mov
cli
popa
jmp
or
mov
xchg
scas
mov
ret
int
jns
mov
lock
push
mov
mov
das
add
cmp
mov
dec
add
dec
inc
sti
cmp
inc
adc
dec
popa
jge
dec
loope
out
and
adc
cwtl
je
pop
or
fistl
popf
das
jnp
jg
jbe
aas
or
sub
aaa
les
pop
out
xor
fidivrl
mov
pop
jae
push
inc
out
arpl
cli
cld
pop
xchg
adc
and
or
pop
aas
mov
std
inc
xchg
jle
iret
mov
dec
push
int3
jg
mov
lods
sbb
xchg
sub
je
dec
xchg
pop
or
mov
jp
xchg
jg
dec
addr16
in
stc
xor
or
sub
fs
inc
pushf
data16
cmp
loope,pn
cmc
icebp
jb
enter
notb
jg
adcl
cs
dec
xchg
dec
adc
std
mov
clc
pop
scas
test
and
inc
push
dec
ret
mov
ljmp
inc
sub
cltd
xchg
and
push
adc
rcll
scas
int3
pop
int3
in
mov
sbb
rorl
mov
xor
pmulhw
cmp
pop
cmp
xor
out
rcl
into
pop
mov
push
xchg
mov
daa
mov
cs
jge
lret
fisttps
movsb
hlt
insl
sub
jg
frstor
or
hlt
push
mov
inc
sti
xor
mov
jmp
iret
push
jecxz
addl
sbb
push
in
or
movsb
xchg
lea
pushf
adc
shr
dec
out
mov
dec
jp
arpl
pop
pop
je
xchg
out
call
or
cli
xor
pop
das
je
push
jp
repnz
popl
jmp
xchg
cld
lcall
xchg
or
sbb
rcr
lahf
data16
arpl
and
negl
iret
dec
sub
sub
pushf
xchg
or
cmp
mov
dec
add
push
out
and
jbe
mov
clc
mov
sbb
sub
sti
les
punpckhbw
add
int3
push
jmp
sub
push
inc
sarb
leave
xchg
pusha
imul
pushf
jo
inc
mov
jle
jne
sbbb
ficompl
fisubs
mov
aas
pop
ss
mov
pop
faddl
jbe
jle
enter
fisttpl
stc
adc
jecxz
fsub
add
loop
xor
and
jne
push
sub
sub
fwait
pop
mov
es
and
stos
dec
inc
cmp
clc
xchg
sub
push
aad
test
test
in
lret
in
outsb
movsb
or
cli
scas
imull
xchg
pushfw
jmp
addr16
test
cmc
mov
mov
aam
ret
mov
jo
lods
xchg
and
jno
xchg
inc
repz
push
repz
ds
and
mov
cmpl
or
loopne
mov
cmp
inc
das
pop
sub
enter
dec
les
sub
jp
js
loope
adc
mov
out
jns
mov
inc
inc
sub
sti
pop
cmpsb
dec
ja
mov
daa
data16
data16
jle
add
mov
jb
and
fwait
mov
stos
push
cmp
outsb
nop
push
mov
jo
bsf
std
add
pop
lods
in
jae
mov
xchg
ficoms
and
popf
adc
and
mov
sahf
fistl
push
sahf
pop
add
imull
mov
fwait
jecxz
adc
xchg
je
test
inc
mov
adc
int3
dec
mov
mov
add
aas
subl
test
int
dec
push
insl
dec
ret
adc
mov
aaa
jo
popa
popa
sbb
sub
add
adc
outsb
cmp
xor
pop
pop
fucomip
jecxz
ret
mov
in
xor
jo
in
cli
pop
xor
sub
mov
popa
insl
stc
dec
iret
cli
sbb
add
jp
mov
bound
aaa
push
in
outsl
mov
push
pop
add
xor
addr16
xor
sti
dec
dec
jns
xchg
les
mov
xchg
mov
cmpsl
aad
jno
mov
sub
aas
adc
lods
mov
xor
mov
or
fidivrs
aad
add
adc
mov
or
cwtl
xor
dec
adc
je
adc
imul
lret
and
dec
mov
push
push
arpl
test
add
push
push
cltd
clc
jecxz
adc
in
aaa
pop
jle
ljmp
pop
add
lahf
add
or
dec
int3
sub
adc
sbb
aaa
mov
and
insl
les
cmpb
pop
sub
fwait
jno
push
cld
jg
push
shrb
cmc
out
mov
je
xor
andb
mov
or
sbb
mov
cs
sbb
dec
cmp
outsl
pop
xor
shl
lret
int
sbb
int3
xchg
dec
loopne
xor
aam
call
cmpsb
negl
leave
daa
push
or
shlb
arpl
lret
inc
xor
aad
in
jle
pop
add
xor
adc
sbb
jbe
cmpsb
addl
gs
xor
jg
fisttps
push
jnp
and
mov
mov
popa
sub
sub
xor
outsb
xchg
sahf
push
add
add
outsl
cmp
sti
cmp
sub
negb
mov
or
pop
sbb
sub
push
lret
add
pop
test
and
xchg
fsubs
gs
mov
mov
jmp
movl
mov
inc
adc
jae
push
push
add
pop
out
int
mov
and
mov
mov
cli
or
pusha
scas
adc
xchg
mul
std
ret
clc
in
and
imul
push
xlat
in
imul
cmc
ds
outsb
repz
dec
mov
jle
andb
xor
popa
les
clc
fs
mov
pop
lret
and
or
aam
subb
daa
and
jle
mov
cmp
pop
decb
inc
cwtl
inc
push
rcrb
pop
cmpsl
repnz
add
out
out
or
test
sub
push
mov
sbb
mov
sbb
loope
ret
push
fdivrp
xor
sbb
sub
and
imul
mov
push
notl
mov
fstps
xchg
mov
mov
stos
dec
enter
dec
push
mov
or
dec
aad
divl
fcoml
mov
pushf
cwtl
les
xor
xor
cmp
dec
lds
lods
inc
into
jne
mov
xchg
call
adcb
jl
ret
lods
dec
xchg
imul
xor
mov
or
sub
cmc
sahf
testl
fs
dec
add
call
push
out
iret
sbb
xchg
jb
pop
sbb
and
cmpsl
aaa
mov
out
or
ljmp
mov
push
push
insl
imul
repnz
adc
adc
jl
stos
xchg
mov
push
test
int
mov
lods
cmpsl
idivb
jle
pop
and
outsl
push
popa
sbbl
xchg
arpl
mov
cli
cli
lock
mov
cmp
dec
inc
fisubrs
ljmp
dec
scas
xor
push
adc
push
and
arpl
nop
pop
pushf
or
mulb
mov
scas
roll
mov
daa
addr16
xchg
add
ror
cltd
xor
bound
scas
and
inc
cwtl
pushf
jg
leave
mov
and
lods
fiadds
enter
dec
dec
inc
or
std
mov
adc
cmpsl
nop
int
jge
shlb
xor
cmpl
or
dec
mov
fidivs
orb
lret
mov
mov
lret
mov
or
sub
mov
scas
pop
decb
adc
mov
pop
jo
xchg
pop
pop
mov
jbe
testb
xlat
mov
add
xchg
ret
fwait
add
negl
popf
mov
or
rclb
test
mov
or
dec
jmp
jg
fidivrs
test
mov
mov
dec
shll
push
ja
adc
mov
dec
fdivr
fldenv
loopne
les
xor
shrl
loopne
sub
cld
pop
xlat
jge
fwait
hlt
ss
inc
jg
ret
dec
out
jb
data16
mov
mov
mov
shr
add
mov
push
repz
sub
jl
jae
push
clc
in
xor
and
lods
mov
fwait
fs
jae
icebp
nop
mov
push
test
dec
inc
sbb
int3
loope
jmp
int
andl
cli
push
sub
dec
xor
mov
add
dec
dec
and
or
sbb
mov
mov
fdivrl
int3
int3
jae
arpl
push
ja
fucomi
dec
in
aad
out
and
mov
and
jb
sbb
push
sahf
jmp
mov
lahf
decl
mov
fdivr
jmp
sub
jb
not
jns
xor
mov
pusha
jg
or
pop
movsb
sbb
push
lds
mov
cmpsb
xchg
push
sbb
jb
cmc
and
std
inc
inc
cmp
jb
mov
mov
jb
push
into
or
orl
ret
dec
adc
mov
jecxz
imul
lret
stc
pop
pushf
sbb
cmpsb
lock
fwait
adcb
jne
jmp
add
out
push
add
popa
pop
sbb
jnp
loop
movsb
sahf
mov
lea
movb
inc
data16
push
js
aam
mov
outsl
insl
inc
xlat
inc
xor
mov
test
scas
sbb
jmp
and
push
cmp
out
xchg
icebp
ljmp
xchg
shlb
lcall
jmp
inc
jl
cs
add
adc
sbb
xchg
xor
push
mov
dec
fdivrs
cmp
add
jns
pop
or
fcoml
dec
and
int3
pop
mov
in
jns
test
jnp
imul
inc
or
adc
mov
cltd
adc
or
loop
jecxz
cmp
imul
xchg
cltd
lods
fcmovne
gs
adc
cmp
inc
into
movsb
fwait
pop
call
out
loopne
mov
jecxz
mov
cmpl
add
cmp
dec
out
in
sbb
push
scas
fldcw
arpl
int
add
xlat
jmp
andl
lcall
push
sahf
xor
push
icebp
loop
jae
pop
into
jb
mov
outsb
clc
jmp
jns
inc
or
add
adc
ds
xchg
outsb
push
push
into
mov
inc
test
dec
dec
int3
movsb
sti
scas
sub
stc
mov
push
icebp
fucomip
inc
int3
cwtl
jge
or
pop
xchg
adc
in
pop
out
push
or
or
cmpsl
pusha
movl
repnz
lret
mov
dec
call
scas
jmp
xchg
xor
aaa
ljmp
jo
mov
ljmp
mov
les
in
xchg
mov
dec
pop
inc
outsl
popa
mov
jns
loopne
xor
pop
cwtl
inc
loop
push
lods
rep
icebp
mov
fmull
fs
leave
adc
add
fiaddl
into
sti
sbb
jg
pop
mov
ds
fbstp
lret
dec
jle
popf
mov
stc
mov
repz
leave
stc
inc
cmpxchg
nop
jb
testl
sub
xchg
xchg
mov
adc
ficoms
ja
cld
lahf
cs
pop
pop
pop
xchg
mov
mov
mov
pop
es
sub
sub
fdivl
lret
es
or
outsb
mov
mov
mov
xchg
mov
outsb
test
mov
add
xor
inc
add
dec
jne
icebp
icebp
push
hlt
test
push
push
sub
cmpsb
xchg
sub
stos
add
or
int3
push
and
mov
leave
mov
jl
into
pop
mov
sbb
sti
mov
repz
outsl
fildll
pop
ds
call
pop
add
cli
sahf
loop
inc
and
sbb
jns
inc
inc
lcall
xchg
jo
subb
push
push
jae
cmp
inc
cmp
repnz
les
sub
out
and
cmp
or
les
out
imul
xor
imul
mov
neg
mov
sbb
or
and
cmpsl
jge
test
add
xor
movsb
ja
mov
call
inc
test
jp
lock
ds
mov
cmp
jg
es
jp
cld
mov
push
fucomp
clc
inc
mov
leave
fmull
jno
and
jb
dec
push
pushf
mov
dec
mov
xor
sbb
or
sbb
mov
xchg
addr16
enter
and
aad
push
or
or
stos
adc
jns
stos
add
jne
add
jge
add
dec
out
xor
pop
testb
mov
mov
sbb
scas
mov
xchg
rsqrtps
inc
mov
pop
clc
pop
outsb
push
lcall
popa
bound
aam
ja
das
fstpt
aam
push
stc
or
pusha
shl
cmp
ds
inc
or
js
jae
jns
and
mov
jp
ds
cmc
mov
xchg
fs
out
and
push
add
arpl
pop
callw
lock
xor
pop
sbb
cmc
fs
test
mov
stos
xchg
mov
ret
xchg
fiaddl
add
fisttps
imul
add
test
rorl
xchg
imul
repnz
rorb
sbb
pop
test
rorb
movd
add
or
inc
int3
pushf
adc
push
cmpsl
fnsave
sub
jns
xor
add
xchg
data16
jp
testb
pusha
add
cmp
inc
push
test
les
in
mov
mov
inc
mov
ret
loope
push
dec
jne
mov
sub
sbb
lods
movsb
loop
fadd
adc
aaa
adc
adc
leave
mov
mov
fsts
inc
cld
push
or
pop
cld
mov
add
sub
bswap
test
add
adc
add
xor
adc
jnp
orl
cmp
clc
push
lahf
movsl
sub
xor
insb
mov
enter
add
cmpsl
movsb
add
mov
push
inc
mov
loopne
jno
pop
push
call
mov
sti
dec
jl
int3
cmp
pop
fldenv
in
dec
cs
jns
cld
movsb
mov
mov
rorb
push
iret
mov
outsl
mov
ret
call
orb
mov
xor
in
mov
mov
adc
in
xchg
orl
or
xor
test
arpl
movsl
icebp
pop
popa
mov
enter
inc
lret
hlt
ds
mull
inc
jae
pop
enter
mov
or
jg
push
lcall
cli
pop
and
inc
mov
sub
cmpsb
rcrb
or
fstpt
xchg
les
aas
aaa
mov
sbb
xchg
out
or
mov
adc
lds
xchg
dec
data16
in
test
push
movsl
or
cmp
push
inc
aaa
out
mov
sti
aad
std
push
loope
fadd
into
and
inc
cmp
clc
fucom
xchg
sti
cmpsl
jae
fldt
lret
cmp
and
push
mov
leave
and
sub
sub
cltd
xchg
jg
lcall
sub
data16
stos
jmp
cmpsl
jae
xor
dec
push
or
popf
cmp
loopne
jmp
sbb
mov
and
xchg
or
seto
inc
rol
mov
mov
add
or
xor
mov
inc
popa
pop
lock
cmc
les
add
ja
push
sti
lea
sub
pop
pop
inc
adcb
push
or
push
jge
adc
nop
nop
pop
xchg
adc
adc
out
imul
cmp
pop
jecxz
jge
jne
mov
rolb
dec
jg
jo
pop
outsb
repz
hlt
aad
cmpsl
insb
push
adc
xor
sbb
lods
adc
test
iret
ja
sti
inc
shll
out
cmp
sarb
movsl
call
clc
loopne
aam
insl
mov
es
cmpsb
les
cltd
jno
subl
cli
cmp
xlat
leave
ljmp
push
insb
xchg
xchg
aam
push
into
sbbb
insl
sbb
xlat
xor
mov
in
mov
sub
std
or
rol
jp
daa
andb
jbe
xchg
push
xchg
in
lcall
inc
outsb
xchg
mov
inc
add
div
sbb
cmp
pop
cs
xchg
es
lods
stos
fs
xor
dec
pop
xchg
in
push
nop
in
test
xor
cmp
fcompl
shlb
sub
sarl
jmp
push
clc
inc
dec
push
mull
test
push
cmp
cmpsb
outsl
jecxz
mov
or
iret
pop
rolb
imulb
mov
xchg
adc
clc
ds
int3
cmp
jb
add
rcll
mov
xchg
mul
cld
mov
arpl
cmpsl
pop
mov
out
fisttps
fimuls
or
push
or
or
ret
lcall
jl
cld
pushf
cmp
rorb
xchg
mov
push
xchg
sbb
mov
stos
or
inc
xlat
mov
jecxz
lods
aas
inc
sub
ja
sbb
sub
inc
pop
mov
iret
std
ss
push
sbb
insl
inc
fldl
fsubs
shlb
decl
push
or
xchg
sub
out
push
push
test
mov
push
and
mov
sahf
ljmp
adc
pushf
cmp
fcompl
jne
stos
int
pusha
adc
arpl
call
xor
lock
cmc
mov
outsb
mov
and
ds
xchg
fdivp
and
sbbl
cmp
dec
push
sahf
mov
xor
add
lock
stos
ret
pop
scas
pop
inc
lret
rorl
imul
lea
jp
pop
insb
cmpsl
mov
mov
das
mov
mov
imul
mov
dec
and
adc
lcall
int
xor
or
jne
iret
mov
pop
adc
inc
inc
adc
je
mov
sbb
icebp
pusha
add
dec
mov
je
fmulp
sub
sbb
jbe
leave
inc
repz
icebp
or
ljmp
aaa
add
sbb
ds
test
scas
daa
mov
popa
data16
loope
push
mov
scas
aas
loopne
fcomip
out
leave
xchg
inc
fiaddl
vmovntps
aas
loop
pop
jne
mov
dec
stc
bound
xchg
sub
int
mov
mov
lar
fwait
mov
clc
jge
push
jp
inc
mov
rclb
mov
cltd
stos
imul
xchg
jge
xchg
pop
mov
and
jno
and
mov
jo
loop
ss
sub
cli
rorb
mov
loop
mov
and
pop
inc
mov
arpl
inc
outsl
mov
lcall
imul
or
dec
mov
cmp
shlb
subb
sbbl
cmp
push
hlt
out
in
adc
or
insb
inc
arpl
mov
call
push
push
das
sbb
mov
jl
ror
dec
cmpb
adc
loop
js
out
push
dec
xor
and
shrl
sti
out
jp
add
mov
or
inc
imul
sbb
ljmp
cli
pushf
cmpsl
push
outsl
daa
hlt
out
add
or
mov
scas
jle
pop
adc
pushf
shll
into
jmp
test
sbb
sub
cwtl
adc
repz
mov
inc
aam
xchg
push
cmp
adc
cmpsb
fstpl
icebp
xor
mov
mov
xchg
sbb
arpl
cmp
sti
mov
push
shl
test
pop
loopne
pop
mov
imul
fcmovbe
xchg
es
xchg
inc
pop
pop
or
mov
test
sub
xchg
xchg
clc
xor
ds
add
outsl
jmp
push
mov
cmc
jg
in
cmp
test
scas
push
and
lret
or
adc
push
push
lret
mov
cld
sti
gs
outsb
sarb
bound
adc
xchg
out
lea
pop
mov
dec
jmp
rorl
pop
loopne
int3
adc
sarl
out
cld
test
pushfw
fildl
mov
sarl
cmp
push
xchg
fwait
aaa
push
or
sti
push
add
cmc
scas
je
sahf
jmp
mov
add
sbb
insl
call
mov
loope
mov
hlt
in
rcrl
andl
mov
inc
xchg
xor
mov
mov
push
sub
test
pop
pop
sub
and
and
out
fsubrl
sarb
ds
icebp
in
xor
xor
pusha
notl
in
xchg
jle
xchg
dec
pop
call
mov
jno
mov
push
ds
cmpsl
pop
add
pop
sub
xlat
das
sub
or
sub
mov
push
lcall
add
xor
mov
mov
mov
add
decb
mov
inc
mov
out
inc
scas
insb
aas
lock
xchg
dec
daa
nop
ret
adc
outsl
mov
mov
insl
xadd
xor
jno
insl
faddl
mov
pusha
out
mov
push
mov
adc
mov
pop
jno
push
jle
dec
or
xor
mov
jns
clc
xor
mov
sbb
mov
nop
cmp
in
add
inc
sub
mov
int
outsb
push
adc
mov
mov
xor
pop
test
add
lahf
pop
push
lds
lea
cmpsb
and
popf
iret
leave
jge
shl
and
out
jae,pt
in
lret
aaa
rcl
xor
popf
test
or
xchg
in
jb
xor
sub
jns
pop
push
add
adc
repnz
ja
movsb
les
shlb
rorb
inc
push
pop
lock
cmp
push
cmpsl
ret
ret
addr16
and
pop
stos
in
cmpl
cmp
loopne
movsl
aad
xchg
mov
leave
pusha
in
pop
pop
jb
pushf
adc
xor
mov
mov
mov
stos
js
xchg
dec
cmp
mov
adc
int3
sbbb
ret
in
push
js
daa
mov
outsl
je
inc
push
adc
leave
mov
lods
sbb
mov
ja
jl
xor
or
lock
sub
mov
rol
in
rorl
push
mov
mov
push
mov
repnz
mov
add
insb
push
sahf
lret
add
jp
pop
shlb
sbb
addr16
sbb
enter
or
scas
adc
adc
cmc
ss
inc
cmp
lret
and
jbe
jns
or
ret
sar
push
mov
movsb
aam
out
stc
mov
outsb
xchg
and
and
scas
pop
fistpl
sbbl
pop
xchg
movsl
daa
fnsave
jbe
jle
jl
jmp
mov
or
xor
movsl
vpunpcklwd
popf
ja
in
repnz
sbb
test
cmp
fs
or
adc
enter
out
dec
hlt
mov
daa
in
and
mov
leave
xchg
xchg
in
xor
adc
lea
pop
outsb
pop
std
adc
fcoms
lods
mov
mov
xchg
call
and
push
jnp
push
pop
pop
sbb
adc
mov
scas
xchg
lahf
ljmp
cli
jecxz
push
push
movsb
pop
xchg
mov
int3
push
pusha
popf
lahf
add
jb
pop
pusha
cltd
mov
jbe
add
push
and
jnp
popa
stos
jg
sbb
pop
jae
xor
jle
lock
cmp
inc
retw
lea
test
cmp
popa
pop
shll
repz
cmpsb
mov
fld
inc
ret
dec
push
inc
sbb
rclb
mov
mov
push
outsb
and
dec
inc
xchg
rorl
mov
inc
sub
lock
mov
mov
inc
shlb
lret
cmp
cs
sub
add
insb
daa
rcl
xor
sbb
mov
insl
dec
xor
push
and
jmp
out
test
mov
add
es
repz
jne
insl
cwtl
jae
cmp
iret
sahf
mov
test
mov
push
or
mov
cmp
imul
push
sbb
inc
test
jmp
scas
pop
sbb
dec
mov
mov
xchg
cmp
data16
aaa
jo
inc
pop
notl
dec
jle
dec
or
cltd
jecxz
movsb
insl
bound
xchg
jb
xchg
mov
cmpsl
notb
push
aaa
lret
xor
mov
lcall
outsb
data16
pop
jno
add
xor
movsb
shrl
jnp
sub
cmp
mov
inc
mov
hlt
jne
and
stc
mov
sbb
std
outsl
fisttpll
std
ret
gs
cmp
push
pop
pop
outsl
xor
daa
inc
cli
lcall
rcrl
cmpsb
test
jnp
lret
dec
pop
int
negl
mov
pand
icebp
imul
push
int3
aaa
add
sbb
or
mov
test
adc
out
outsb
dec
xlat
add
ss
testl
lcall
add
and
out
mov
sub
imul
dec
inc
xor
stos
mov
test
adc
pop
int
or
lahf
pushf
mov
or
ret
jb
inc
jns
mov
pop
fwait
ljmp
mov
push
xchg
aad
icebp
idiv
popa
scas
sub
rolb
add
imul
push
pop
inc
rcl
mov
data16
mov
adc
adc
add
dec
mov
or
js
mov
push
aam
jae
insb
sub
mov
jge
or
push
daa
or
test
sub
pop
js
mov
mov
pop
adc
xor
xor
sub
mov
ds
inc
xor
mov
fcomps
push
dec
inc
out
mov
or
push
das
sub
dec
loopne
scas
imul
aas
mov
adc
movlps
jmp
std
xchg
cmp
adc
jno
pcmpgtw
cwtl
jo
mov
mov
sbb
jns
aam
sti
incb
test
mov
inc
jno
stos
xchg
cmp
add
outsb
push
push
mov
pop
rolb
pusha
mov
jecxz
dec
or
loopne
jg
sti
sarl
sbb
jb
mov
mov
lret
xorl
nop
push
stc
inc
push
fcomp
js
cmp
popa
add
es
fmul
push
ficomps
test
inc
xchg
push
and
dec
adc
push
lds
xchg
arpl
dec
adc
fimuls
orl
dec
add
cmp
adc
cmp
enter
jp
push
pop
mov
inc
test
dec
jmp
mov
out
ret
push
sbb
or
in
ret
lock
cmp
cmp
fwait
push
test
fdivr
adc
adc
daa
loope
in
jl
lea
xor
pop
xlat
shl
inc
xchg
cwtl
test
les
stos
jl
into
mov
pop
fstpt
sub
nop
daa
out
mov
dec
cmp
test
addb
inc
sub
pushl
sbb
pop
iret
ficoml
inc
int3
pop
nop
adc
sub
jae
mov
pop
mov
mov
push
jmp
pop
and
pushf
fidivrl
sti
jnp
mov
push
xchg
fidivrl
aaa
in
shr
or
in
inc
xchg
dec
das
sarb
imul
mov
arpl
test
in
in
mov
jmp
xor
push
mov
test
or
mov
add
xorb
cmpb
pop
cmp
or
xchg
les
sub
test
or
adc
ret
in
shlb
test
stos
fimuls
xchg
fdivrs
and
out
mov
mov
dec
popf
adc
xor
add
inc
out
dec
and
cltd
cmpsb
and
nop
aad
cmp
adc
jmp
sahf
mov
add
lcall
roll
adc
jno
ss
sbb
cmpsb
nop
mov
ret
incb
in
aam
sahf
ret
xor
jge
xor
mov
setp
aaa
imul
inc
sub
add
sbb
rcrb
and
sub
push
inc
test
shll
subb
fistpl
pop
pop
aam
mov
xor
push
jbe
sub
aas
jle
sub
loopne
imul
fidivs
lea
fwait
pop
mov
es
sub
cmpsl
push
dec
adcb
imul
fisubs
lods
imul
loopne
icebp
cmc
xchg
sub
les
xchg
jge
or
cmp
adc
or
ret
bound
lcall
movsl
push
aam
pop
inc
fidivrl
add
mov
mov
sti
clc
sub
mov
scas
imul
add
cmpsl
push
mov
mul
popa
or
jmp
inc
inc
mov
xor
mov
bound
mull
std
call
loop
pop
xor
rcll
ret
and
cmp
xor
rcll
mov
jg
sub
int
test
mov
gs
mov
mov
test
cmp
rcrb
add
lock
mov
mov
cmp
inc
out
mov
and
jmp
mov
in
or
insb
sbb
mov
lea
dec
xchg
leave
out
inc
xor
pop
mov
aam
cltd
adc
outsl
xchg
nop
xchg
es
stc
cmpb
fcompl
sub
sub
mov
movsl
out
out
or
shlb
stc
xchg
ja
dec
mov
xchg
stos
fisttps
out
xchg
fcomps
lds
push
dec
mov
std
bnd
push
pop
xor
fidivrl
divb
jge
inc
ja
imul
sarl
lds
xor
xchg
mov
rclb
cmp
das
lcall
mov
mov
aam
jns
popa
shll
xchg
xchg
ss
mov
xorb
notb
lods
icebp
mov
fcompl
into
mov
jno
pushf
mov
cmp
mov
or
push
repnz
lock
repz
and
xchg
cmp
or
scas
aaa
inc
dec
rol
or
fs
mov
dec
mov
ret
sub
aam
jbe
idivb
xor
popa
dec
xlat
ret
pop
aaa
push
dec
jns
shl
mov
push
out
orb
and
ja
jne
mov
int3
push
xchg
push
adc
ljmp
cmp
shrb
sub
push
dec
cmp
pop
sub
adc
sahf
aad
push
lcall
outsl
adc
lods
and
mov
cmp
pop
bound
and
pop
imul
pop
inc
push
xor
adcl
mov
cmp
xchg
lret
pop
xor
sbb
inc
push
add
cltd
iret
movb
xchg
shl
icebp
pop
mov
dec
mov
lret
pusha
cld
mov
fsubr
scas
mov
cmp
insb
xor
int
arpl
and
cmp
aas
sub
pop
add
sti
out
decl
push
push
lods
faddl
push
notl
insl
inc
mov
dec
inc
pop
sbb
xchg
pop
int3
les
in
not
and
test
push
add
pop
add
xchg
lret
dec
adc
test
jbe
sahf
push
xor
cwtl
fnstcw
mov
sbb
lea
mov
sbb
lock
or
dec
xchg
ljmp
je
pop
push
outsl
cmp
sbb
jle
and
and
and
aas
in
rep
out
subb
subb
pop
push
sbb
pop
leave
xor
sub
add
and
jbe
rcr
push
out
int3
fwait
popf
dec
out
inc
pusha
out
sbb
sbbl
ret
push
mov
out
into
icebp
aad
aaa
fistl
fcoml
push
jnp
mov
inc
dec
outsb
inc
je
pavgb
jle
test
pop
sbb
fimull
aaa
pushf
xchg
mov
stc
hlt
mov
xchg
sub
imul
push
add
insl
into
sub
pop
test
in
subl
dec
stc
cmp
push
lods
aas
xchg
into
std
mov
pushf
push
std
fucom
test
xchg
pop
sbb
mov
stos
xchg
mov
cs
in
lods
shlb
push
or
ret
pop
xor
in
aad
mov
dec
jnp
stos
icebp
movsl
sbb
mov
add
xlat
inc
or
lock
psubd
push
ret
xchg
xor
jmp
ds
cmp
iret
bound
mov
adc
and
or
xchg
dec
aaa
in
pop
outsb
mov
das
lods
repz
test
sub
aad
test
cmp
fldl
lret
mov
call
scas
in
orb
lods
ss
aad
jg
xchg
or
or
fsubp
pop
sub
dec
cs
adc
xchg
jmp
pop
mov
sbb
pop
sbb
data16
jg
pushf
jb
popa
adc
cmp
or
push
je
sub
mov
daa
cmp
adc
xchg
cmp
add
loope
or
ret
mov
mov
imul
adc
and
cwtl
arpl
push
test
cmp
jge
xor
test
loop
mov
push
fwait
mov
sub
jp
std
clc
pop
mov
fisubrl
fadds
into
fwait
cmpsl
xor
jecxz
jns
and
ss
mov
mov
inc
jns
mov
sbb
mov
push
pop
lds
cmp
mov
fs
lds
mov
les
xchg
lods
in
daa
ljmp
daa
pop
jne
mov
cmpsl
cmp
sbb
pop
int
cmp
daa
add
mov
test
xor
fldt
repnz
and
leave
je
jne
int3
mov
scas
pop
fcomps
sbb
pop
mov
jb
push
and
or
lret
pop
pop
or
cmpsl
jae
sub
test
movswl
arpl
shr
roll
inc
sbb
out
push
out
dec
mov
test
add
scas
fildl
cli
xor
sbbl
pop
xorl
scas
loop
push
mov
test
push
call
stc
dec
ljmp
xchg
movsl
movsl
idivb
pop
and
pushf
mov
loop
mov
jo
stos
pop
add
pop
jne
inc
sbb
and
lock
fstpl
sti
mov
unpcklps
cli
mov
rcrb
jmp
in
add
lcall
loope
jmp
add
flds
xchg
inc
es
adc
gs
stos
jnp
into
mov
lret
jl
or
sbb
xchg
or
ret
rorl
imul
mov
cmpsl
and
fs
push
cwtl
fldenv
cmp
pop
lahf
bound
ja
dec
xchg
cwtl
mov
imul
loope
lcall
push
gs
out
lock
enter
or
cwtl
dec
pop
push
outsl
mov
leave
popf
in
ja
or
cmp
outsl
aam
xor
addl
setg
mov
adc
mov
push
or
jns
fnstcw
sub
mov
pop
and
mov
push
cmpl
jo
ja
ljmp
jno
mov
fcom
xor
xor
mov
xlat
add
lret
jmp
cli
dec
mov
aam
loopne
jg
inc
xchg
xor
stos
cmpsl
int
test
lods
idiv
xchg
std
pop
jmp
ljmp
mov
pop
cld
push
sub
ja
mov
into
xchg
mov
repnz
shlb
inc
mov
xchg
lahf
test
and
loope
push
pop
dec
rorl
sahf
push
jmp
daa
fiadds
cli
cmp
jmp
and
inc
ljmp
ret
jmp
setae
daa
jg
or
fs
adc
push
lahf
lods
push
addl
test
push
xchg
push
dec
sahf
add
mov
push
adc
fstpl
cmp
lods
iret
sub
sar
jo
push
xor
jns
mov
mov
mov
pop
into
mov
movsl
or
sbbb
push
xlat
or
inc
test
dec
or
adc
mov
push
ljmp
pop
mov
sarb
jns
and
das
adc
xor
cwtl
imul
stos
push
dec
jg
dec
mov
or
stos
iret
ret
and
roll
jae
aam
inc
sub
test
cmp
pusha
adc
jmp
stos
pop
loop
jge
lret
add
and
jg
inc
addr16
jmp
jmp
mov
or
mov
or
bound
out
cmpsb
push
xor
and
lods
ljmp
insl
sub
mov
xchg
jae
scas
mov
push
fucomp
xor
in
cmp
mov
pushf
pop
jno
test
or
sbb
or
jge
sub
sub
mov
outsb
gs
popa
and
and
or
mov
mov
sub
xor
nop
mov
hlt
pushf
shll
repz
aad
cmp
ret
or
pop
push
push
mov
inc
scas
movsl
dec
insl
cmc
sub
adcl
out
mov
popf
fcomp
lods
mov
ret
inc
push
addr16
mov
movsb
inc
mov
push
sub
negb
mov
sub
es
cmp
mov
and
arpl
scas
pop
ret
mov
and
nop
add
cmp
ret
push
nop
iret
ret
arpl
sbb
iret
push
rolb
mov
shrl
xor
repz
push
jbe
lret
mov
push
add
ja
fwait
aaa
mov
int
mov
add
scas
int3
pop
ja
icebp
in
inc
push
loope
mov
sbb
jne
pop
mov
and
lods
in
mov
or
cmpl
scas
xchg
stos
enter
mov
loopew
xchg
xor
cmpsl
leave
push
aaa
out
aaa
jnp
jne
imul
dec
clc
cmp
cmp
adc
lds
cmpsb
and
pop
xchg
jl
jno
les
sub
mov
jp
or
lods
orb
das
std
sbbl
cmp
test
sub
aaa
add
mov
inc
daa
dec
clc
adc
add
stc
dec
mov
aam
test
lods
aam
push
push
aam
gs
push
test
dec
pushf
les
sarl
or
adc
dec
xchg
cwtl
leave
arpl
roll
or
xor
inc
xor
mov
movsb
lods
inc
das
add
mov
dec
hlt
cmpsl
mov
push
and
ficompl
nop
ds
cmp
loop
cmp
push
cmp
sti
test
and
push
aam
pop
dec
mov
orl
jb
pushf
lods
cmp
mov
ret
jo
and
and
or
lret
cmpsl
lods
std
aam
sbb
cmc
pop
cli
pop
add
int3
add
pusha
cmp
lods
sub
pop
push
jns
mulb
andb
sbb
push
out
mov
imul
popa
shlb
inc
subb
xchg
adc
dec
lahf
add
pusha
jle
push
shlb
and
das
repnz
xlat
sbb
movsl
and
fs
push
lods
out
sbb
ljmp
or
insl
and
mov
int
sbb
cld
in
loope
jne
repnz
and
jne
xor
mov
movsl
adc
out
cli
cmpsl
out
and
sbb
js
mul
dec
jle
mov
jecxz
xchg
lea
push
adc
pop
insl
jg
mov
loopne
dec
roll
dec
jo
repnz
push
xchg
mov
pop
inc
adc
lret
pop
cmp
shrl
inc
sub
xor
pop
jae
mov
add
mov
mov
sub
mov
mov
jo
mov
or
jl
cmpsb
mov
mov
adc
sbbl
inc
jo
cmpsl
add
mov
lret
jno
adc
lahf
xchg
cli
and
js
das
xchg
cmc
mov
jne
mov
das
sub
or
test
cmp
ret
aam
mov
subl
push
mov
mov
repnz
jle
xchg
inc
rol
xlat
ret
test
int3
ljmp
lds
test
in
outsb
scas
andb
mov
mov
sahf
push
or
pop
pop
add
xlat
xchg
aam
addl
jge
call
andb
sub
js
mov
sub
rolb
aam
mov
push
sub
flds
punpcklwd
push
les
fisubrs
test
outsl
out
mov
sub
lock
mov
mov
cmc
test
js
xor
test
jbe
test
or
adc
xor
ret
ret
insl
sub
lock
fistpl
stc
out
cmc
into
add
lods
imul
mov
fldcw
push
push
inc
pop
and
mov
adc
inc
xchg
ja
dec
fs
xor
pushf
push
test
movsl
cmp
fcomip
mov
xchg
stos
into
lahf
out
lahf
lret
sbb
fs
imul
jl
loop
jne
or
dec
je
sub
xor
push
jecxz
mov
movsb
cmp
dec
int
lret
loop
dec
xor
shrb
jmp
sbb
adc
sbb
aas
mull
hlt
xchg
stos
mov
call
test
mov
call
ret
xor
mov
push
testb
jae
sub
pop
sar
lods
icebp
std
aaa
pop
lods
mov
mov
xor
fistps
mov
jb
xchg
out
lods
sub
faddp
test
lcall
mov
push
inc
pop
enter
and
mov
jecxz
lahf
imul
pop
cli
lea
cltd
mov
inc
push
sbb
sbb
daa
xchg
hlt
loope
aas
fwait
das
sub
cmp
xor
and
inc
je
lds
orl
lret
xor
aad
ret
sub
pop
out
mov
test
push
fdivr
mov
push
cmp
push
add
mov
cmc
mov
sub
popa
sub
mov
sbb
ffreep
ja
data16
sbb
mov
push
scas
loopne
popf
mov
cs
mov
sub
mov
jns
xor
and
add
adc
lock
mov
add
scas
mov
iret
mov
xchg
pop
fwait
sahf
mov
pcmpeqb
adc
add
pop
sbb
lahf
jmp
or
aam
jecxz
mov
xchg
cltd
pop
lock
scas
ror
cmp
dec
pop
jae
fsubrs
push
es
outsb
mov
add
xor
inc
loopne
pop
call
out
or
out
in
and
pop
test
pop
lds
dec
cmp
or
aad
cltd
adc
data16
outsl
and
xor
xor
pop
add
push
fcomp
push
xchg
icebp
jecxz
mov
mov
pusha
mov
lahf
cltd
mov
add
sub
cs
mov
or
xlat
adc
sub
out
mov
loope
stc
or
inc
adc
xlat
mov
mov
lahf
pop
sahf
and
push
outsl
mov
loopne
xchg
loop
cltd
sarb
fs
sub
xor
cmpsl
fmull
fiadds
ds
imull
int
insb
sub
ljmp
sbb
in
sub
adc
imul
pop
nop
lods
mov
pop
pop
cmp
lock
fucomp
inc
in
xchg
decb
sub
mov
inc
push
pop
add
scas
faddl
insb
faddl
stc
sbb
xchg
push
jp
inc
fwait
int3
mov
rclb
fcoml
loop
call
mov
pop
loop
cmpsb
add
xor
or
adc
fdivr
cltd
mov
jl
xor
push
cmp
sub
sub
sbb
xchg
pop
rclb
js
mov
jbe
jbe
xor
pop
or
xchg
int3
jae
sub
fiaddl
ficoms
fildll
xor
fists
fldt
int3
rcrb
xchg
pop
adc
lods
std
xor
pop
xchg
lret
jl
adc
push
or
es
cmp
fistps
idivb
xchg
icebp
cmp
ja
hlt
push
lahf
pop
cmpl
mov
fdivrs
aas
mov
mov
push
out
sbb
mov
stos
repz
rorl
clc
shrl
jge
mov
out
sub
sti
cmp
xlat
and
xchg
mov
inc
inc
cmp
test
mov
add
xchg
cmp
push
cwtl
pop
mov
out
inc
xor
cmp
xchg
das
push
sub
loop
adc
data16
push
lret
in
dec
movsb
pusha
dec
aad
push
mov
mov
push
cltd
les
fisttps
adc
sbb
sub
mov
lret
stos
fimull
jp
cmc
aam
jnp
sbb
daa
xor
push
pop
xchg
sbb
ret
ret
loope
shl
lods
orb
cmpsl
xor
lock
or
in
mov
push
ljmp
js
and
jge
jns
data16
movsl
call
ret
cltd
pop
push
push
jmp
mov
and
inc
and
pop
push
movzbl
and
aaa
bnd
push
jp
add
movsl
cmp
add
inc
cmp
push
rorb
into
xchg
xchg
in
loop
xchg
out
sub
ret
push
or
insb
adc
pop
fcmovu
pop
mov
leave
shrb
shrl
leave
add
push
add
xchg
test
and
incl
arpl
xor
xchg
fwait
outsl
hlt
imul
sar
dec
mov
mov
ja
daa
loop
out
cmp
addb
and
xor
js
movsb
aad
push
mov
xchg
push
arpl
jge
es
pusha
dec
test
lret
aas
mov
dec
imul
call
xchg
mov
push
push
inc
fimuls
xor
cmpsb
xchg
pop
mov
rcll
mov
pop
jnp
andl
cmp
int3
cmovnp
jae
push
bound
push
pushf
cmp
push
mov
pop
sar
das
xor
in
mov
scas
clc
push
and
jb
cmpsb
loopne
jp
cmp
xorb
mov
nop
mov
sub
adc
int3
adc
test
inc
pushf
xchg
aas
test
ljmp
bound
push
in
push
sub
jnp
and
sub
or
aas
dec
ret
fidivrs
fstpl
mov
mov
stos
mov
cmp
xorl
pop
orl
and
bnd
iret
inc
addb
ljmp
sbb
pop
andl
add
stos
pop
pushf
xchg
sub
mov
and
sahf
sti
pop
adc
mov
and
dec
repz
add
xor
fstl
enter
cmp
jmp
rcl
ret
add
or
dec
cmp
sub
inc
jnp
and
xchg
aam
pop
jbe
push
add
testl
add
add
les
mov
arpl
push
dec
aam
cmovne
mov
jge
pop
adc
or
je
insb
fisttpl
jg,pt
cmpl
xorl
adc
aam
je
movsb
fsubl
daa
cmp
scas
int3
push
add
and
scas
mov
add
int3
shrb
inc
push
pusha
or
or
das
fmuls
in
inc
or
sub
fs
sbb
cli
call
jmp
fisubrl
push
push
in
sbb
fsqrt
jle
add
push
ret
movsb
adc
fisubrs
stos
or
cld
cli
aas
mov
mov
jmp
cmc
adc
push
test
mov
and
std
in
pusha
ds
xchg
add
loope
or
shl
inc
mov
ja
pop
je
pop
or
repz
cs
cmp
sub
sti
add
cmp
sbb
shll
lock
push
mov
test
test
jbe
mov
xlat
adc
xor
adc
add
inc
jecxz
iret
mov
fstl
negl
ret
scas
push
enter
cmp
cld
popa
xchg
adc
shl
insb
sahf
xor
add
pop
imul
popl
cmp
mov
imul
and
addr16
movsb
loop
sbb
cmp
sbb
les
loope
add
fmuls
inc
xor
cs
imul
lds
jo
xchg
movsb
dec
jmp
sbb
fwait
dec
inc
sahf
shrl
mov
fistpl
pop
cmp
or
inc
push
cmp
cmpsb
dec
in
jnp
mov
popf
dec
inc
fsts
inc
xchg
inc
icebp
dec
add
je
mov
mov
pop
shl
dec
pop
outsb
shl
add
loope
aad
cmp
sub
mov
fcoml
es
nop
add
sbb
push
sahf
xlat
push
into
scas
or
pop
insb
mov
dec
adc
fwait
xchg
cmc
fwait
xchg
in
repnz
cli
pop
sahf
push
push
jl
cltd
out
sti
mov
dec
pop
mov
nop
and
add
add
fadds
fldl
adc
cmp
mov
dec
inc
jecxz
or
sbb
add
dec
sar
mov
mov
xor
aad
add
das
adc
insb
inc
leave
cmp
cmpsl
mov
rcll
sbb
sub
lods
xchg
cli
enter
imul
popf
lret
add
test
sbb
inc
pop
in
push
mov
xlat
sbb
and
mov
pop
xchg
push
mov
mov
jecxz
xchg
pushf
cmc
sbb
incl
shll
push
push
lret
sub
jnp
mov
andb
jbe
xchg
popf
pushf
mov
or
xchg
cltd
or
daa
lock
push
dec
add
scas
int
push
sahf
dec
call
popf
lds
and
jns
mov
sub
scas
mov
jle
cs
rclb
clc
jecxz
cwtl
mov
ss
clc
ret
inc
cld
cli
push
cmpsl
bound
pop
loop
lea
ret
push
imul
xchg
jle
movsb
adc
cmp
jne
xor
loop
push
mov
adc
out
push
inc
stos
and
loop
cmp
or
cmp
dec
dec
movsb
sbb
fdiv
filds
xor
fadd
ds
pop
sbb
fbld
jne
adc
fucom
into
jg
jmp
imul
dec
cs
repnz
mov
bound
movsl
cmc
or
and
and
shll
jbe
sbb
lods
dec
push
adc
adc
xor
andb
fwait
sti
shl
stc
mov
loopne
push
mov
jp
xor
arpl
lahf
inc
into
jmp
imul
xor
adc
insb
lds
mov
sarb
ja
lret
lods
pop
mov
and
push
loopne
imul
lock
sahf
mov
push
cmp
add
outsl
imul
push
adc
xchg
pop
jo
les
int3
inc
cmp
pop
clc
das
jns
out
push
cmpsl
imul
bound
mov
and
mov
insb
push
xlat
les
or
adc
aad
cmp
mov
inc
and
and
adc
cli
test
cltd
and
pusha
push
push
imul
loopne
jae
in
push
cmc
sarb
cmp
cmp
sub
test
mov
mov
jb
xchg
add
test
dec
ret
ljmp
lds
sbb
imul
xor
lds
jae
pop
movsl
adc
cld
into
mov
add
sub
adc
ret
int3
add
fcoms
in
aaa
cmp
cmpsb
xor
xchg
cltd
inc
ljmp
enter
mov
cli
and
pop
punpcklbw
xor
cmp
mov
xor
jge
sub
inc
imul
ds
jmp
push
dec
xor
stos
popa
cmp
push
push
sub
fwait
dec
in
sub
pop
cmp
dec
xor
fmuls
pop
ja
mov
or
jae
push
addr16
sbb
pop
in
inc
inc
dec
mov
leave
jns
dec
fdivrp
in
or
mov
in
test
int
xchg
and
inc
adc
in
adc
xchg
and
cmp
cltd
push
lock
mov
rcll
sti
movsb
cwtl
pop
call
call
jle
nop
mov
arpl
fnstcw
out
shll
inc
pushl
lds
cmp
lahf
imul
jg
xlat
insl
mov
aam
out
add
rorl
sbb
xchg
dec
sub
add
push
dec
xor
imul
dec
xchg
js
adc
cmpsl
mov
push
sub
dec
imul
es
nop
je
sub
mov
pop
das
jecxz
mov
xchg
cwtl
pushf
es
neg
push
dec
fstpl
jne
js
insb
mov
pop
add
aas
mov
mov
loop
subl
adc
adc
mov
jp
nop
push
mov
out
lds
push
cwtl
or
cmp
dec
push
mov
xor
popf
test
lock
jp
sbb
ret
adc
and
pop
mov
or
movsb
loopne
fsubrl
xchg
sbb
test
sub
inc
sbb
adc
rcl
mov
add
test
out
jl
jnp
pop
cmp
leave
dec
jmp
test
sub
cwtl
addr16
mov
jb
rolb
and
out
lock
jg
outsb
es
inc
pop
popf
gs
xor
mov
dec
addr16
xchg
xor
sahf
mov
pop
pop
or
shl
rorb
ljmp
push
or
jp
incb
shll
arpl
jo
loopne
lock
or
xor
mov
mov
clc
dec
fstl
cmp
and
inc
daa
cltd
sahf
cmp
or
testb
leave
push
cld
xor
testb
fdivrp
shrl
rclb
pop
jb
dec
dec
jg
inc
mov
addr16
cs
divb
or
daa
addl
insb
daa
jbe
push
and
cwtl
lock
cwtl
insl
jae
loope
or
dec
fdivl
xor
xor
rolb
enter
mov
mov
xor
push
lcall
inc
sbbl
mov
and
mov
sub
cmpsl
fisttpl
push
ret
lock
and
adc
in
sbbb
sahf
iret
popf
test
ja
das
lahf
cmp
js
call
repz
push
cmp
jb
adc
dec
mov
xchg
hlt
out
dec
pop
dec
ret
jmp
mov
push
xor
jbe
or
jecxz
imul
fwait
mov
outsl
sub
xchg
imul
test
push
aas
out
fcomps
stos
loopne
gs
jmp
iret
push
repnz
jo
mov
dec
add
loopne
and
ss
dec
fldcw
pop
jo
sbb
and
lret
hlt
stos
jb
cmc
xlat
adc
imul
add
sbb
push
shrl
das
adc
icebp
fcmovu
out
pop
dec
sub
sti
test
push
adcb
lret
rorl
and
mov
sub
and
shll
repnz
js
imull
mov
mov
fwait
push
mov
adc
mov
and
orl
lds
mov
in
repz
out
cmp
cmp
cs
push
sub
jge
fcomip
in
setb
fdivrl
ljmp
jno
stc
lock
xchg
data16
aad
pop
aam
aad
nop
pop
imul
sub
mov
ss
call
jecxz
gs
dec
and
cmc
insb
adc
mov
mov
push
cmp
sti
pop
mov
les
pop
xor
sbb
sarb
outsl
ja
bound
and
sbb
pop
cmpb
pop
push
pop
std
mov
xchg
jmp
inc
or
insl
test
pop
cmp
sub
sbb
push
push
add
clc
jmp
sahf
mov
mov
das
add
mov
cmp
xchg
adc
cmp
sahf
jg
loop
push
std
int3
loopne
sbb
stc
dec
fwait
lret
mov
popa
push
xor
adc
pop
dec
shll
dec
xor
xlat
and
push
push
fs
xchg
jle
incl
jge
mov
and
add
mov
cmpsl
pop
dec
out
daa
call
and
xor
fisubs
aad
ss
pop
pop
ds
out
mov
out
and
ja
cmc
call
in
push
mov
jo
inc
ret
sbb
jmp
fwait
iret
outsb
jno
sar
xor
int3
pop
in
jnp
outsl
sbb
rolb
xor
xchg
add
rclb
das
inc
add
push
test
jp
or
lea
data16
rol
mov
adc
sahf
ret
xor
int
mov
push
pop
nop
pop
pop
push
push
xchg
inc
and
mov
xchg
in
fs
enter
sub
fs
iret
fmuls
movsb
mov
jle
sahf
push
cld
mov
pop
add
ds
inc
stos
mov
mov
jmp
xchg
xor
jecxz
adcl
lds
cli
mov
jle
mov
cmp
in
pop
fwait
inc
decb
mov
and
sbb
fnstcw
idivl
test
insb
and
shl
xor
das
out
pop
add
or
lods
in
std
jns
mov
cmc
test
push
jl
sahf
dec
sahf
xchg
mov
or
popa
xchg
bound
dec
mov
sub
mov
mov
rcrb
add
mov
xchg
mov
rcll
push
inc
iret
dec
mov
or
aam
xor
arpl
decb
xchg
pushf
inc
jl
cs
xor
cmpsl
xchg
jne
jp
movsb
fstpt
jg
aaa
cmp
aas
fst
dec
mov
ljmp
add
rcl
mov
addr16
int3
adc
in
cmp
adc
das
or
out
enter
dec
pop
inc
adc
decb
aaa
cmpsl
call
jmp
push
dec
clc
fldl
pop
mov
or
pop
and
rol
or
aam
push
nop
movsl
push
cmp
scas
mov
out
sbb
and
fmull
inc
sbb
inc
repnz
mov
cmp
and
das
pop
push
iret
das
sbb
fs
jb
jb
pushf
test
and
jo
add
in
cmp
loopne
jmp
xchg
and
and
loopne
push
test
mov
dec
jnp
adcb
or
ds
outsb
scas
int
ss
inc
je
arpl
dec
in
mov
sbb
rorl
push
jl
push
inc
dec
lock
lods
dec
leave
or
enter
sbb
add
or
jb
dec
data16
xchg
or
jmp
xor
lcall
cs
jl
xchg
lret
lds
inc
and
shrl
pop
and
shrl
mov
or
adc
mov
or
add
cld
sbb
mov
dec
mov
aaa
mov
cmpsb
push
inc
cmp
mov
add
jne
jecxz
stc
fildll
cld
lcall
jl
mov
dec
mov
lahf
xlat
sti
in
mov
mov
adc
sbb
mov
les
dec
mov
pop
test
mov
inc
sub
sub
cltd
xchg
add
rorl
mov
jle
adc
dec
mov
sbb
out
mov
fstps
dec
clc
movsl
xor
fldenv
iret
mov
jb
clc
cmp
sbb
adc
repz
icebp
sub
in
das
sub
dec
lret
es
or
xchg
idivb
jns
adc
jmp
jg
sahf
and
adc
outsl
mov
subl
push
or
push
xor
out
dec
cmp
popa
scas
or
cmp
push
pop
bound
mov
decb
jbe
sbb
cmp
rcl
lock
or
loopne
fdivl
pop
sub
push
mov
sbb
lods
aas
invd
imul
jmp
je
fnsave
test
pushl
dec
dec
clc
jecxz
add
mov
ds
fistps
dec
negl
ffree
inc
jbe
inc
iret
adc
xor
aad
and
or
pop
jl
das
adc
mov
dec
xchg
fisttpll
cs
ja
and
cld
mov
cwtl
push
scas
pop
je
jge
je
pop
pop
in
dec
dec
cmp
xchg
int3
inc
shll
into
stos
jmp
adc
mov
push
and
ss
pop
xchg
pop
dec
adc
adc
cmp
arpl
mov
cmp
int3
xorl
xor
xchg
and
popf
inc
stc
pop
and
dec
std
push
inc
sahf
shrb
xor
outsl
mov
jp
jecxz
movsb
pop
push
or
lcall
add
filds
push
xor
cmc
xchg
lret
arpl
mov
jno
push
inc
add
push
ljmp
out
fcoml
pusha
sbb
jmp
fmull
cmp
adc
sti
jno
imul
arpl
repnz
andl
fimull
cmp
movsb
inc
movsl
lahf
out
add
push
outsl
pusha
in
jne
jecxz
movl
jecxz
shll
imul
mov
outsb
and
lea
adcb
jb
adc
mov
mov
mov
inc
mov
popf
out
js
popa
or
push
mov
add
xchg
mov
cmp
pop
sarl
test
inc
arpl
jno
lcall
cmp
dec
xchg
pusha
xchg
or
or
enter
mov
nop
loop
roll
push
pushf
outsl
xor
or
xor
sahf
loop
and
sbb
les
aam
fwait
and
das
inc
sub
stos
out
data16
fidivrl
loopne
mov
stc
enter
out
outsb
in
mov
and
or
enter
inc
loop
ror
xchg
and
push
mov
sub
rorl
and
and
das
push
stc
ret
fwait
insl
or
lods
neg
sub
or
cmp
sub
ficomps
dec
ret
or
test
pusha
jo
push
scas
xchg
mov
push
cmc
mov
push
cmovl
push
and
add
ljmp
jb
adc
jb
cltd
scas
sti
mov
aad
popf
rcrb
fdivs
add
outsb
stos
shrl
jns
addr16
add
lahf
stos
loope
pop
xchg
test
in
testl
imul
in
por
popf
xchg
xchg
xor
popf
icebp
bound
mov
daa
inc
in
sarl
andl
xor
xchg
jnp
sub
lock
xor
push
dec
xchg
sbbl
pop
xchg
mov
scas
mov
sahf
cmpsb
mov
mov
cmp
rclb
jns
insb
sub
push
jecxz
dec
mov
xorb
sub
mov
aas
and
cmc
pop
repz
mov
loop
stos
subb
mov
cmp
mov
inc
sahf
loopne
add
xchg
nop
rcr
cmp
and
fcoms
push
push
loope
mov
ja
loopne
pop
addb
lea
dec
jno
mov
pop
mov
sbb
das
mov
mov
sbb
pusha
orb
push
in
cmpsb
mov
inc
mov
jno
daa
pop
jne
adc
mov
sbb
mov
ret
dec
inc
dec
insl
inc
xchg
fs
adc
add
sub
jbe
sahf
xchg
adc
sbb
aam
cmc
scas
pop
mov
cmc
inc
dec
mov
cld
push
sub
push
shrb
ret
cmp
hlt
incb
rolb
test
mov
andl
scas
mov
cli
sti
subl
lock
or
mov
in
daa
xor
es
fdivrl
pop
push
or
sti
addr16
rorb
shll
push
xor
cltd
pushf
cli
push
xor
bound
mov
jns
sub
bound
fiadds
jnp
xor
and
imul
rorb
loop
mov
xchg
mov
adc
jne
lods
scas
xchg
das
aad
mov
push
pop
pop
mov
adc
sub
and
add
jmp
xor
and
pop
mov
fdivs
push
mov
lea
sbb
inc
push
popf
arpl
mov
and
pop
imul
pop
xchg
pop
mov
in
fisubs
pusha
in
cmp
xchg
mov
ljmp
out
ret
sub
leave
repz
adc
sbb
das
push
shll
shlb
int
enter
and
jns
icebp
cmp
jle
cmc
inc
jp
fucomip
pop
jo
or
pushf
push
icebp
ret
shl
insb
rcrb
cmp
jl
push
dec
push
or
popf
adc
repnz
push
adc
pop
cmp
inc
adc
testl
xor
into
sbb
mov
pop
or
xchg
jp
inc
jp
add
dec
add
pop
xlat
int3
push
adc
xlat
or
dec
addr16
mov
shrl
pop
adc
jno
rolb
and
rcrl
ja
dec
jecxz
out
xor
es
testl
pusha
imul
and
daa
out
in
lods
dec
std
mov
cmp
dec
aaa
or
aas
jle
outsl
int3
mov
mov
pop
lds
jp
sub
sbb
xchg
cwtl
negb
sahf
adc
fdiv
cli
and
mov
aad
dec
dec
mov
test
mov
add
lods
testl
fst
in
mov
subb
sbb
lret
or
cld
test
pop
add
cmpsl
dec
and
sbb
incl
mov
push
enter
add
sub
arpl
mov
xor
sbb
or
mov
shlb
jo
orb
jno
mov
or
mov
xor
movsb
out
dec
and
jecxz
sbb
into
push
fwait
xchg
jg
stos
cmp
or
int
xchg
loop
sub
inc
gs
lcall
loopne
xor
je
pop
mov
sti
cmp
pop
mov
or
out
dec
push
xlat
and
and
sub
jle
stos
out
pop
xchg
xchg
subb
inc
push
push
iret
inc
sbb
pusha
push
imul
push
shll
or
xchg
mov
cltd
mov
adcb
dec
mov
sahf
es
jae
test
loopne
out
loope
aad
sbb
jmp
mov
xlat
cwtl
mov
xor
insl
sbb
enter
mov
insb
das
jge
orb
lcall
jle
pop
mov
loope
and
mov
and
idivl
popf
xchg
or
jecxz
ret
cmp
inc
add
test
push
dec
in
or
xor
adc
fneni(8087
jbe
daa
mov
stos
push
daa
loopne
jl
inc
add
ffreep
popa
dec
sbb
inc
inc
loope
aaa
pop
sub
sbb
movsl
pop
sub
shrb
test
mov
mov
add
test
xchg
inc
aaa
inc
adcb
xor
ss
and
aaa
lods
into
push
movb
fnstsw
xor
popa
jge
shl
das
sti
adc
ds
lds
sbb
leave
mov
in
loopne
xor
sub
cmp
xchg
shr
faddl
test
dec
dec
cmp
push
xchg
aad
leave
aam
push
adc
fcompl
movl
in
cmpsl
adc
xor
xchg
push
inc
cli
xchg
push
popa
stos
sbb
fs
mov
pop
pop
jge
fmuls
jno
push
test
adc
ss
fisubrl
std
add
and
cmp
pop
js
push
lods
test
lret
vphadddq
pop
push
pop
xor
mov
aaa
jo
daa
or
iret
pop
in
adc
jge
ds
mov
add
scas
or
jge
fnsave
out
jno
adc
sar
cmp
movsl
rorl
fwait
imul
or
push
mov
lcall
jle
fwait
cmpsb
adc
es
and
push
cs
adc
pop
jecxz
xchg
je
or
mov
aas
jae
xchg
dec
mov
jbe
scas
dec
cld
andb
pusha
gs
xchg
jo
dec
pop
mov
fdivr
cmp
fbstp
sub
mov
enter
inc
enter
fs
insb
cs
push
sub
aas
cs
push
sub
in
or
fcmovnu
fidivrl
fdivs
xchg
fldl
mov
imul
cmp
insb
leave
int
cmpb
push
ret
jne
mull
sbb
add
daa
cmp
dec
sbbl
fistpl
imul
loope
out
sahf
sub
ret
fldenv
lods
pop
scas
sub
push
add
pop
out
pop
xacquire
or
mov
leave
je
mov
aad
inc
call
notb
push
inc
adc
int
inc
adc
sub
jae
add
les
xchg
divb
test
mov
test
bound
dec
push
lea
cmpsl
pusha
les
jno
dec
ret
loop
faddp
jns
push
sarb
pop
sbb
movsb
or
cmpsb
cltd
jg
and
add
imul
cmpsl
add
out
into
pop
in
fildl
mov
or
movsb
repz
mov
push
mov
add
mov
dec
outsb
mov
loope
in
rorb
inc
test
push
xorb
mov
imul
sub
cld
cmp
hlt
ret
in
in
sbb
push
add
and
out
aas
jmp
dec
pop
xor
xor
fwait
subb
mov
sub
mov
cmp
cmp
cli
mov
adc
push
cwtl
jmp
push
fsubs
aas
iret
xor
xchg
pusha
lods
test
xchg
stos
outsl
pusha
js
xlat
pop
jge
add
roll
insb
out
mov
lods
cmp
in
mov
in
mov
jmp
pop
mov
add
inc
sbb
std
cld
pushf
jl
jg
xchg
mov
push
push
mov
ds
ja
add
aas
lea
mov
jg
sbb
jmp
mov
movsb
imul
push
sub
cmpsl
insb
adc
scas
repz
jl
adc
imul
mov
cmpsl
rcr
add
shlb
rclb
add
pop
repnz
push
hlt
imul
addl
cli
jge
out
test
mov
lret
movsb
ja
mov
sub
xorb
pop
lret
jae
das
in
nop
lods
mov
ja
sbb
ss
inc
adc
loopne
cwtl
sarl
clc
leave
and
lods
bnd
inc
pop
mov
cmp
jge
mov
dec
jge
clc
cmp
sbb
push
and
nop
xchg
dec
mov
and
popa
sti
xor
fidivs
mov
pushl
lcall
pop
pop
mov
test
pop
lret
mov
mov
repz
iret
ret
shl
lods
repnz
xchg
inc
mov
xor
js
cmp
cmova
sub
pop
sub
and
dec
out
mov
lcall
in
jne
aam
pushf
lret
xchg
jne
mov
lods
das
or
pusha
sub
mov
ds
jge
mull
mov
stos
sti
or
aam
stos
adc
sub
lods
dec
mov
mov
dec
rolb
js
test
repnz
mov
or
sbb
scas
std
clc
out
je
scas
stc
ja
sub
inc
pop
sahf
dec
bnd
cmp
and
cwtl
or
insb
sub
cli
pop
pusha
mov
gs
insl
daa
push
jecxz
loopne,pn
popf
push
mov
and
leave
push
mov
idiv
push
fsubrl
pop
push
lcall
cmp
in
fidivrl
inc
int
fwait
mov
mov
jle
out
push
or
cli
arpl
outsb
mov
aaa
sti
adcb
jnp
push
jp
adc
jp
jne
and
inc
xor
pop
lea
in
xor
ja
mov
gs
and
mov
mov
ds
add
arpl
inc
lods
out
mov
and
dec
cs
out
and
adc
out
mov
repz
adc
loopne
push
int3
and
or
data16
aas
sbb
dec
imul
pop
mov
mov
in
stos
testl
outsb
jne
inc
jp
inc
adc
loopne
call
scas
inc
cmp
pop
cmp
and
adc
bt
jne
shlb
jp
rcrl
or
pop
outsb
sub
ret
incb
mov
xchg
inc
xlat
jg
mov
pushf
add
push
xor
push
mov
pop
cmp
xchg
dec
dec
scas
or
xor
dec
inc
push
popaw
shlb
bound
cmp
cli
pop
and
inc
lret
mov
nopl
imul
cmp
pop
enter
je
xchg
inc
pushf
aaa
mov
sahf
mov
data16
pusha
cmpsb
and
mov
cmp
sbbl
nop
out
add
aaa
fimull
xchg
mov
jb
rcrl
bound
cmpsl
mov
in
invd
rclb
leave
dec
sub
and
arpl
add
jp
mov
inc
test
inc
lds
adc
je
dec
push
scas
sbb
add
test
mov
test
lds
pop
data16
into
out
rcr
in
push
jb
mov
push
mov
push
push
sbb
push
or
mov
xchg
in
mov
mov
adc
das
dec
fsts
call
lcall
pop
in
pop
ret
push
ss
sbb
mov
movsb
idivb
mov
dec
jp
jg
mov
jg
mov
xor
cmp
fdivrl
mov
inc
aam
jns
stos
pop
cmp
pop
sbb
push
outsl
dec
aad
fs
data16
lods
or
or
jnp
sub
out
jo
negb
addr16
scas
xor
ja
fidivrl
sbb
inc
dec
stos
jb
data16
adc
mov
imul
or
lcall
data16
or
in
in
scas
sbb
jnp
icebp
mov
test
hlt
mov
lahf
inc
jb
xchg
or
xchg
add
test
sbb
inc
or
push
mov
div
outsb
cmp
inc
in
xchg
xchg
dec
mov
fistl
pop
ret
lea
imul
xor
or
movl
sbb
jp
mov
pop
nop
imul
ret
mov
mov
push
dec
ficoms
popa
ss
sub
rol
dec
lahf
or
mov
arpl
outsl
sub
scas
out
je
add
shl
ds
bound
xchg
out
sub
or
xorl
dec
push
stos
std
jp
mov
jae
call
or
sbb
cwtl
imul
pop
pop
push
mov
or
addr16
arpl
mov
imul
test
cmpl
pop
bound
sbb
sub
xchg
add
aas
in
movl
sub
movl
mov
push
jbe
mov
lret
cmpsb
nop
pop
clc
jnp
mov
movsb
mov
mov
pop
add
xchg
dec
cmp
mov
mov
ret
stos
pop
out
jae
jne
add
push
sbb
notb
popa
std
mov
mov
cmpl
icebp
lcall
pushf
enter
jl
sub
ret
dec
pop
inc
scas
jns
in
and
bound
jbe
cli
movsl
xchg
into
fnstcw
ja
popa
mov
xchg
pop
jb
ljmp
inc
mov
iret
aam
mov
rcl
inc
push
stc
jo
or
jns
xchg
mov
or
mov
cld
mov
xor
lcall
pop
shrb
pop
dec
rcl
mov
fistpl
xor
movsb
add
shlb
push
outsl
jae
or
add
or
inc
icebp
inc
pop
or
jo
push
dec
sbb
adc
cmp
aas
mov
hlt
pop
push
shrb
mov
sub
dec
ffree
rcrb
arpl
or
pop
inc
push
test
mov
ljmp
mov
imul
ja
rorb
inc
jnp
pusha
out
popf
loop
aaa
cwtl
xor
xor
push
push
mov
cmpsl
mov
cli
lds
jnp
add
xchg
inc
dec
fstps
and
cmpsl
loope
jle
inc
cmp
out
rorl
movsb
btr
mov
rclb
test
jge
filds
orb
dec
jne
mov
add
sbb
out
xor
sbb
push
enter
fsubl
xlat
and
mov
cli
icebp
cmp
ss
les
jne
xchg
adc
jge
mov
icebp
in
stos
addr16
repnz
in
adcl
jle
cmpl
and
jl
es
fsubrp
rep
aaa
push
mov
dec
cs
xchg
cmp
in
mov
in
mov
pop
cmpb
pop
pop
mov
adc
nop
sub
rcr
test
iret
mov
mov
jae
js
shlb
fdivrl
ds
cmp
jb
js
xchg
jae
adc
fcoms
lret
xchg
jmp
xchg
fmuls
inc
outsl
sub
jns
jns
repz
sub
aam
inc
mov
lahf
xor
insb
stc
ret
jb
pop
pop
aad
and
inc
jp
push
arpl
test
xor
adc
sub
pop
sti
out
pushf
or
sub
inc
mov
inc
sbb
cmpsb
push
fsub
in
pop
xor
mov
jne
lea
inc
and
inc
xchg
ret
pop
dec
dec
mov
les
ret
call
or
fcoml
dec
fimuls
inc
data16
sbb
dec
cmpsl
test
mov
mov
enter
data16
jmp
and
inc
or
rorl
inc
mov
mov
mov
push
std
and
iret
sub
cs
or
lods
or
outsb
xor
ljmp
test
jecxz
test
dec
push
mov
sbb
push
aaa
test
fcomps
sub
jp
cmpsb
fwait
xchg
enter
sub
and
sub
scas
lods
jp
fs
xchg
add
jmp
movsb
mov
jns
out
cmp
getsec
xor
inc
jbe
fsubs
mov
sbb
xchg
jbe
fistpl
push
nop
ret
dec
sahf
ds
int
dec
push
popa
adc
nop
scas
mov
fidivrs
imul
inc
pop
or
jbe
add
xchg
out
sarb
cmp
icebp
dec
inc
jmp
in
xchg
in
icebp
stc
fisubrl
push
push
in
loope
andb
add
test
cltd
lcall
lcall
sub
jne
push
idivl
es
pop
cmp
sub
sbb
dec
pop
sub
sti
push
dec
cwtl
adc
popa
or
and
xchg
and
int
xor
test
cld
ret
sub
pop
divl
mov
jp
mov
mov
jb
sahf
xchg
xlat
sbb
dec
dec
xchg
xor
lret
in
jmp
xchg
insb
cmpsb
loop
push
mov
dec
mov
xchg
int3
push
cli
or
add
js
mov
jg
insl
std
out
jno
pop
imul
insl
push
dec
scas
adc
xchg
lea
or
pop
dec
loope
ret
mov
es
cwtl
mov
lock
mov
and
push
mov
fsubl
pop
imul
xchg
cmpsl
dec
push
pop
adcb
outsl
fsubrs
adc
xor
add
mov
ret
dec
fcomi
mull
je
ja
push
sti
xchg
rorb
pushf
push
push
pop
jl
push
cli
pop
test
push
test
and
jg
add
addb
pop
imul
cltd
jmp
lds
jmp
ret
dec
std
movsl
mov
test
aad
jo
mov
out
xor
scas
aaa
out
fld
repnz
cwtl
and
lock
mov
fnstsw
mov
xchg
movsl
cmpsl
bound
into
cmp
gs
jb
fdivl
ret
jg
mov
sub
jge
jl
imul
lcall
pop
fmuls
xor
andl
ror
mov
adc
ret
jl
test
ss
xor
cltd
out
sbb
mov
nop
xor
imul
jnp
enter
shrl
fisttpll
rcrb
movsb
xchg
jge
mov
jo
hlt
inc
in
mov
mov
xor
jbe
xchg
add
sti
inc
mov
test
pop
lds
lahf
dec
daa
fnsave
nop
test
imul
fs
lret
push
jne
sub
mov
stos
inc
sbb
iret
data16
scas
xchg
lcall
decb
sub
cmp
cld
dec
xchg
mov
inc
push
push
lcall
fisubrl
and
jo
ss
pushf
add
jne
out
ficoms
call
push
incb
or
mov
xchg
call
pop
pop
dec
xlat
sub
sub
sti
jno
in
jecxz
mov
or
push
imul
jge
addr16
xor
mov
jecxz
cli
pop
nop
xor
pop
rcr
xor
ret
cmp
or
test
dec
xchg
jp
mov
add
mov
je
aad
push
pop
sbb
add
cmp
xchg
mov
push
dec
pop
xchg
cmpb
rorb
inc
dec
and
inc
mov
into
and
mov
cmp
lods
push
je
daa
loope
xlat
cmp
fsts
loope
or
cmp
cwtl
je
pop
and
lods
sbb
inc
mov
cmp
movsb
xchg
dec
addl
or
popa
cmc
pop
or
inc
jbe
bound
fimull
pop
adc
cs
xchg
cmovb
popf
mov
mov
cmc
sti
and
dec
dec
cmp
inc
xchg
insb
ss
ret
xchg
addr16
mov
and
scas
pushf
lahf
xor
mov
or
and
dec
gs
mov
loop
addr16
lcall
aam
xchg
push
mov
div
xchg
pop
mov
in
icebp
pop
lea
or
pop
xor
jns
in
dec
xor
mov
fmulp
cmp
dec
mov
ss
sub
rcrb
pop
sti
nop
mov
inc
fnstenv
fucomp
fsubl
xchg
inc
imul
push
mov
xorb
imul
xor
pop
repz
push
test
lea
mov
in
cmpsl
leave
nop
pushf
or
shlb
loopne
lret
cli
sbb
shr
iret
int3
pop
div
in
push
xor
sbb
mov
int
imull
daa
jg
cli
shl
jecxz
out
ret
or
dec
push
inc
data16
js
push
data16
cmpsb
rcrl
pop
repnz
cmp
mov
sahf
es
pop
jnp
or
jl
xlat
pop
loop
js
push
mov
push
fwait
sbb
hlt
in
jl
nop/reserved
cmp
xchg
sahf
push
es
cmpsb
adc
out
cmp
sbb
inc
and
sub
enter
lret
sub
push
add
cmc
lret
jae
mov
mov
jae
popa
jmp
mov
dec
nop
or
or
arpl
aaa
xor
scas
fisubl
jo
cmpsb
pop
jmp
call
add
mov
cld
cmc
mov
imul
dec
lret
mov
imull
idivl
ret
pop
dec
test
imulb
adc
arpl
mov
mov
lret
out
or
add
mov
xor
cmpb
mov
les
in
xor
aas
lret
iret
clc
test
fnstcw
flds
mov
mov
test
and
flds
mov
jecxz
mov
jecxz
mov
loope
xchg
lret
lea
subl
fistl
xchg
push
pop
mov
test
daa
lret
push
and
sbb
sub
addr16
cmp
icebp
mov
gs
test
add
stos
loope
xor
xchg
mov
dec
into
in
adc
jbe
movsb
and
xor
adc
andl
aam
or
push
mov
mov
add
imul
xor
out
aad
and
sti
push
pop
pop
jo
imull
repnz
or
inc
pop
movlps
pop
add
mov
fistpll
adc
mov
mov
jae
mov
xchg
pop
fimuls
clc
and
movsl
iret
out
push
mov
xor
ret
testb
cmp
mov
loopne
pop
jne
cmp
stos
test
inc
sahf
shlb
sahf
das
xchg
test
sub
lcall
lret
pop
pop
add
adc
jbe
loope
data16
sbb
arpl
push
pop
xor
dec
add
jecxz
dec
lods
les
sbb
addr16
cli
push
dec
jo
test
hlt
int3
stc
mov
fwait
jnp
or
fcmovbe
loop
sbb
adc
lods
pop
cltd
jb
fildl
cmp
jmp
insl
fnstcw
loopne
ss
sub
repz
and
insl
orl
test
scas
sahf
pop
inc
es
test
pushl
movsl
movsb
push
mov
nop
or
jle
int
cmp
test
pop
adc
out
aas
out
or
xchg
ret
mov
sbb
add
jle
mov
add
mov
lret
push
cmp
bnd
adc
mov
mov
adcb
es
mov
inc
xchg
add
loop
test
inc
bswap
insl
push
xchg
ret
scas
pop
dec
out
clc
and
popf
jge
in
leave
adc
ds
push
lea
lahf
loopne
mov
aaa
lea
pop
xor
cmp
daa
bound
xchg
clc
xor
mov
leave
sbb
jecxz
ss
xchg
and
and
or
fidivl
in
or
xchg
subb
pop
vmovntps
add
sar
divb
sbb
mov
jecxz
inc
movsb
adc
js
mov
mov
mov
sub
fwait
stc
aaa
addl
cli
inc
pushl
xchg
add
jle
mov
ds
aas
cltd
outsb
sub
or
in
out
xchg
mov
enter
adc
mov
ljmp
repnz
mov
mov
mov
mov
dec
push
daa
mov
arpl
and
dec
sbb
clc
cmp
cmpsl
imul
lods
popa
outsl
pop
mov
sub
pusha
xor
into
outsl
insb
jp
mov
insl
aas
or
sub
lret
cwtl
jne
xor
cmc
jle
adc
mov
ss
mov
js
cld
out
dec
dec
inc
add
das
repnz
or
jns
and
push
mov
sarb
adc
xchg
and
add
and
mov
lret
jg
pushl
sbb
outsl
xchg
fwait
ss
outsb
pushf
inc
and
push
jns
shlb
jg
push
pop
pop
push
dec
sub
popa
push
mov
jnp
and
aad
insl
cli
out
imul
pop
pop
adc
test
call
in
push
jge
pushf
stos
pop
add
cmp
pop
dec
shll
inc
mov
jp
jmp
ljmp
cmp
push
lds
jbe
add
push
aaa
xchg
out
mov
ds
sub
test
adc
pop
clc
jbe
imul
cmpb
mov
lea
enter
bswap
push
inc
xor
cmp
sahf
imul
push
mov
lcall
repnz
and
push
loopne
inc
cs
xor
lock
mov
add
repnz
mov
repz
add
stos
das
dec
lock
jno
inc
xchg
lds
repnz
mov
popa
mov
dec
pop
movsb
lock
pop
out
xchg
in
ds
sbb
jge
mov
fcompl
xchg
rorl
xor
mov
out
mov
sub
lahf
outsl
jno
cld
inc
add
movsb
clc
mov
or
nop
adc
xchg
pop
je
add
in
cmp
addb
lds
jl
dec
aam
aam
or
movsl
das
pop
push
lcall
lock
push
inc
dec
lahf
stos
jecxz
adcl
xchg
mov
loopne
and
xorb
pop
negl
and
push
or
rcll
sti
dec
movsb
lock
mov
xchg
pop
lret
sbb
push
pushf
loop
and
mov
inc
lods
ljmp
out
mov
push
sbb
jle
in
sbb
test
adc
pushf
dec
sbb
push
mov
pop
mov
rorl
lret
decb
or
pop
je
jp
mov
xor
jecxz
fwait
jmp
mov
cmp
cs
mov
mov
xchg
jmp
sbb
cmp
inc
and
or
sahf
push
mov
and
jmp
push
mov
ljmp
sub
pop
mov
out
jbe
imul
dec
xlat
imul
sbb
xlat
ret
call
nop
sbbb
add
mov
cwtl
mov
add
or
int
lret
outsl
lds
cmpsb
arpl
mov
push
lods
aam
mov
dec
mov
out
outsb
cwtl
cmp
xchg
cld
lods
pop
aaa
out
sbbb
idivl
rorl
hlt
add
imul
shl
mov
pop
aad
ret
and
pop
in
mov
int
cmp
ret
enter
mov
mov
das
cmpsb
outsl
add
or
jle
or
pop
or
dec
mov
mov
cmp
int
outsb
out
push
add
rep
push
jno
orb
inc
icebp
pop
xchg
sbb
and
sub
add
push
out
pop
mov
sahf
push
adc
sbb
andb
mov
xchg
cmp
jns
dec
sbb
or
fcomps
pop
loope
in
cli
sbb
add
sti
pop
or
jmp
repnz
call
fistl
lret
sub
xchg
or
xchg
mov
xchg
data16
in
pusha
add
mov
gs
imul
xchg
cltd
mov
pop
dec
aas
scas
mov
dec
stos
mov
adc
dec
cmp
dec
scas
xor
xchg
movsl
push
mov
inc
pop
or
sti
aas
xchg
xor
pop
jmp
or
mov
mov
sub
lahf
mov
add
push
iret
gs
out
mov
jle
incb
call
push
cmp
in
sahf
and
ljmp
stos
mov
jge
jno
out
pop
psllq
call
adc
adc
in
mov
and
pusha
adc
mov
in
mov
call
pop
std
add
in
pop
rcll
jnp
sub
out
in
shll
cmc
in
dec
lret
leave
aam
mov
xchg
loope
sbb
xchg
cld
or
mov
pop
and
inc
lods
addb
es
adc
scas
popa
out
mov
repnz
ljmp
jae
sti
jp
adcl
movsb
xchg
inc
dec
mov
mov
push
cmp
jno
jmp
ja
push
inc
cmp
andb
add
sbb
sub
mov
adc
rcll
pop
fdivrs
fisubrs
dec
repz
push
mov
dec
push
mov
sbb
aad
cmp
mov
repz
ss
sti
fstl
inc
in
mov
fimuls
call
in
add
lods
cli
and
pop
shrb
mov
in
push
add
sub
cld
jl
adc
cmp
enter
or
fcmovnu
cmp
js
push
sbb
stos
jae
adc
or
mov
ret
dec
push
adc
xchg
sbb
rorl
lcall
out
adc
hlt
insb
push
adc
outsl
shl
dec
cli
mov
in
mov
cli
mov
pusha
rorl
inc
stc
jo
sbbl
and
mov
movsl
test
xor
jecxz
jg
mov
lret
xchg
subl
adc
clc
jae
fbstp
mov
loop
cmp
adc
mov
pop
mov
jp
pop
adc
cwtl
rcrb
sbb
or
push
out
push
xor
mov
jne
dec
lods
adc
inc
cmpsl
push
mov
mov
add
dec
aaa
pop
add
shll
inc
in
lret
je
xchg
push
sbb
int
int
dec
sahf
sbb
and
cmp
js
insl
xchg
aad
adc
mov
fmull
sbb
pop
test
icebp
test
pop
and
cmp
or
scas
xchg
lcall
int
enter
pop
adc
arpl
sbb
pop
push
inc
pop
mov
mov
in
loopne
shll
fldl
jbe
cwtl
xlat
mov
adc
sbb
movsl
aad
jo
shlb
call
in
mov
or
mov
inc
leave
lock
xor
icebp
cmp
xchg
push
inc
mov
cmp
jb
rclb
inc
js
lret
adc
loop
in
mov
xchg
pop
divb
sbb
fnstcw
les
fldenv
cmovo
enter
xchg
hlt
aas
adc
ret
push
mov
outsb
aad
pop
and
mov
sbb
dec
dec
test
mov
mov
and
shrb
inc
or
xorb
popa
sbb
cld
in
add
ficomps
loope
ret
lahf
fadd
inc
fists
aad
cmp
and
call
into
in
imulb
mov
or
hlt
dec
cmp
nop
mov
add
enter
sub
inc
cmpsl
xchg
test
aad
adc
jb
xchg
adc
loop
and
cmpsb
inc
cmp
mov
pop
pop
and
clc
rclb
dec
enter
stos
xor
pop
lret
mov
in
mov
push
push
adc
xchg
mov
push
cld
pop
jno
add
xchg
hlt
cwtl
sub
iret
xchg
in
inc
pop
lret
dec
pop
xorb
xchg
mov
adc
orb
dec
lods
mov
mov
adc
stos
les
adc
int3
xlat
ret
popa
adc
out
iret
inc
aad
pop
adc
mov
adc
jbe
test
fldt
repz
jl
xchg
and
xchg
nop
xor
pop
stc
stc
cmp
jae
scas
flds
int3
testb
dec
mov
push
pop
loope
fwait
push
test
shlb
rorl
dec
scas
mov
xor
lret
and
test
xchg
cli
orb
pop
sbb
lods
sbb
and
flds
xor
mov
jg
and
arpl
adc
sub
addl
ds
xchg
push
test
adc
xlat
in
dec
xchg
or
mov
lds
xorl
prefetch
cltd
pop
push
pop
xor
rclb
lods
pusha
hlt
mov
or
repnz
je
int3
push
sti
stc
inc
sbb
call
mov
pop
shl
lea
pop
mov
xchg
mov
xor
std
inc
jmp
mov
sbb
xor
shlb
mov
jl
aas
into
out
dec
fmul
ljmp
pop
clc
aam
sbb
loope
or
pusha
les
and
lret
mov
jns
fmull
jbe
sub
arpl
push
syscall
scas
fstpl
mov
clc
sbb
mov
jae
int
cmpsl
add
outsb
pop
jns
cmc
sub
inc
push
test
inc
and
test
iret
hlt
sub
rcll
add
stos
xchg
sub
stc
cmpsl
imull
xchg
rcrb
jg
je
dec
add
roll
nop
scas
mov
mov
mov
or
mov
jecxz
lcall
and
lock
jae
cmp
sbb
jbe
and
cwtl
adcb
cmpsl
pop
scas
fdivr
enter
dec
xor
xchg
testb
jae
and
mov
sbb
or
push
xor
in
out
jg
scas
adc
inc
mov
xchg
fdivr
repnz
jnp
mov
dec
je
dec
push
loope
xchg
aad
jns
mov
cli
cmp
leave
je
lock
enter
mov
int3
xlat
movsb
out
xor
popa
cmpsl
push
pop
jmp
cmp
scas
mov
mov
mov
push
outsb
mov
movsl
js
cmp
leave
sbb
fstpl
mov
sub
inc
inc
hlt
sub
sbb
popa
hlt
fiaddl
xor
fdivl
mov
cld
scas
imul
stc
jecxz
push
sbb
inc
mov
dec
cld
in
std
pop
dec
lods
ds
jnp
sub
cmp
mov
lahf
popf
jl
or
outsl
arpl
lods
add
sbb
ss
popf
test
and
fildl
lret
cmp
fnsetpm(287
scas
ror
fsubrs
sbb
push
xchg
lods
shll
cmp
push
pop
shrb
dec
and
repnz
ret
cmp
outsb
sti
rclb
jae
mov
pop
dec
xchg
lahf
daa
rol
rclb
pop
jae
loop
xor
xchg
xlat
mov
outsb
push
aas
sub
cmp
in
test
shrb
out
nop
roll
mov
add
mov
mov
mov
test
testb
pushf
xlat
subb
fidivrs
ficoms
mov
inc
inc
lcall
repz
push
cs
icebp
dec
out
in
pushf
sub
imul
xlat
addl
clc
xchg
add
cmp
cmc
lahf
insb
imul
imul
or
dec
xchg
cmp
incl
leave
sbb
and
pop
inc
xchg
pop
jmp
mov
inc
adc
push
mov
sub
pushf
add
push
push
xchg
in
pop
mov
xor
popa
sahf
jo
in
iret
pop
add
cmp
inc
dec
lock
divb
nop
rorb
hlt
inc
pop
cmp
xor
mov
es
jmp
and
and
movsb
test
imul
cmc
jecxz
arpl
sbbl
mov
aaa
jnp
push
fdivs
addr16
in
enter
inc
xor
mov
incl
in
inc
xchg
adc
ret
xchg
pop
push
pop
inc
lahf
push
pop
mov
or
imul
push
mov
jb
popf
mov
pop
popa
pop
pop
jecxz
mov
imul
inc
sahf
pop
enter
add
push
emms
lock
mov
push
mov
es
rorb
push
xor
mov
lea
mov
ja
adc
sbb
xchg
stos
dec
push
add
sahf
fwait
jge
mov
mov
imull
pop
fcomps
mov
lret
sub
cmpsl
jo
xchg
lock
fs
and
fsubs
xchg
lcall
mov
pop
hlt
ja
test
je
test
filds
mov
inc
xor
scas
ret
xor
jle
lea
shrb
ds
lds
jnp
aam
push
dec
out
mov
ljmp
jle
inc
jbe
les
jns
das
jmp
adc
out
inc
jmp
mov
lods
jae
cld
movsb
rolb
push
out
shrl
and
cli
in
xchg
add
add
repz
push
cmp
mov
push
mov
mov
and
add
xchg
sbb
cli
ja
cmp
test
pusha
mov
shll
or
shl
sub
adcb
cmc
imul
mov
xor
repz
xchg
addr16
test
loopne
lods
mov
inc
and
cmp
adcb
addr16
ret
out
out
cmp
and
aam
jae
orl
xchg
mov
adc
pop
mov
xor
or
mov
fs
add
hlt
jl
and
push
fucomi
mov
ss
adc
aaa
stc
test
repnz
inc
sbb
sbb
sbb
movsb
cmp
ror
stos
sbb
pop
and
and
dec
js
push
xchg
lcall
pop
dec
mov
xor
add
sub
stos
hlt
dec
inc
ljmp
sub
inc
enter
into
adc
push
mov
ljmp
movsl
stos
shl
xchg
xchg
jb
call
mov
jge
mov
psllq
xlat
mov
xchg
mov
jmp
hlt
dec
mov
dec
sbb
push
xchg
add
mov
mov
inc
pusha
or
jmp
test
sbb
popa
jp
fs
mov
pop
adc
fnstsw
repnz
cmp
sub
push
scas
cmc
popf
jnp
cmp
sar
push
fidivrs
dec
inc
mov
sub
filds
and
cs
and
sbb
push
jg
cltd
mov
aad
aaa
scas
andl
jl
xchg
fdiv
xchg
test
loope
adc
cmpsl
pop
push
dec
dec
bound
fcomp
scas
mov
movsb
xchg
lea
test
jmp
sbb
pusha
hlt
fs
movsl
inc
push
je
pop
adc
jo
in
test
aaa
rcrb
and
lea
sbb
popf
or
hlt
xchg
int3
sbb
adc
fdivs
adc
inc
fcmovne
test
cmp
adc
inc
repnz
fsubs
hlt
je
dec
push
mov
test
in
and
add
fdivrs
andb
inc
add
xor
jp
stos
mov
nop
in
cmp
add
jbe
or
cs
dec
in
call
lcall
pop
rcrl
inc
movsb
mov
sub
cld
fcoms
dec
lds
or
pop
jae
push
sub
shrd
imul
out
inc
push
xchg
in
dec
clc
xorb
lcall
sbbl
dec
and
pop
icebp
sahf
xor
out
leave
test
push
out
pop
xchg
or
adc
sbb
icebp
lock
or
inc
mov
jbe
push
mov
lds
push
dec
pop
jae
in
inc
cmp
push
dec
jg
jecxz
lock
push
jb
cmp
fyl2x
lea
mov
les
add
jmp
and
sarb
jo
sbb
push
sbb
jno
mov
mov
pop
pop
dec
jns
push
loopne
jo
jg
or
jo
mov
ja
xor
mov
or
movsl
jl
fidivrs
data16
fs
mov
outsb
pop
cmpsl
add
sub
into
pop
jp
test
ljmp
jecxz
lods
js
or
or
xchg
popf
dec
mov
xchg
or
ret
clc
xlat
stos
xor
jp
push
adc
es
jne
repz
mov
dec
inc
repz
ljmp
inc
pusha
ljmp
icebp
sarb
jnp
int
add
sub
mov
mov
insb
cmp
das
pop
mov
out
out
mov
jecxz
mov
xchg
inc
cmp
pushf
mov
jno
sub
cmpsl
and
pop
cmp
add
mov
dec
repz
mov
je
flds
scas
push
arpl
into
jns
add
push
jecxz
scas
mov
out
int
loope
lret
int
out
or
fldt
sbb
mov
mov
sub
xchg
ss
dec
mov
jmp
lahf
mov
loop
loop
xchg
add
xchg
jl
out
jae
mov
xor
pop
xchg
addr16
pop
or
mov
add
inc
inc
xlat
pop
repz
jnp
jge
jns
les
in
sbb
sub
loopne
mov
mov
mov
dec
sbb
mov
pop
fldl
jo
and
orl
mov
and
and
or
test
sub
lock
aam
mov
ret
inc
or
xor
push
outsb
leave
sar
jbe
mov
pop
mov
and
in
xchg
mov
mov
call
icebp
xchg
jecxz
mov
push
daa
jle
pop
out
bound
push
cli
loop
int3
mov
lock
out
inc
arpl
dec
jae
sbb
mov
aam
insl
mov
ljmp
mov
jnp
mov
adc
xchg
pushf
imull
xchg
xchg
aad
cmp
insl
sbb
mov
cmp
mov
jb
icebp
je
push
into
addr16
adc
xor
add
add
dec
sub
aam
add
mov
sub
xchg
movb
and
ficompl
jmp
es
ret
insb
sarb
in
imul
sti
popa
stos
dec
inc
daa
enter
mov
fists
mov
inc
add
loop
lea
fisubs
jb
scas
xchg
js
sub
addr16
outsl
std
mov
push
mov
inc
pop
xchg
push
pop
addb
fldt
fisubrl
sub
mov
mov
mov
insl
rolb
popa
mov
or
icebp
pop
mov
fwait
ja
ds
mov
pop
sbb
xchg
insb
adc
les
mov
push
or
pop
pop
mov
nop
daa
das
mov
fdivr
sbb
fstpt
pop
cmp
in
stos
mov
les
pop
jge
and
jecxz
idivb
jns
sub
jmp
in
and
mov
ss
scas
xor
and
pop
inc
ret
test
enter
gs
cmc
mov
or
mov
jmp
psrlw
add
sbbl
xor
nop
mov
cmp
imul
negb
inc
outsb
mov
fwait
int3
inc
inc
mov
pusha
cmpsb
lea
inc
inc
or
add
push
jae
jp
xor
push
ds
inc
xor
pushf
mov
lea
lret
in
mov
cmp
xor
push
data16
lds
jecxz
icebp
inc
ljmp
mov
mov
addr16
fistpll
push
cmc
xchg
out
cvtps2pd
test
dec
pop
adc
pop
or
mov
popf
pop
popa
lods
insl
lock
push
pop
cmp
jg
and
lods
xchg
dec
dec
out
sub
cmp
lret
adc
movsl
sbb
lcall
xchg
es
sub
in
mul
mov
inc
and
repnz
fnstenv
aam
pop
cltd
lcall
push
mov
pop
mov
out
sbb
arpl
cmp
xor
adc
stc
rolb
or
leave
hlt
jne
push
lds
cltd
les
hlt
jg
xlat
push
add
or
jnp
ret
cli
sbb
jle
xchg
xchg
cli
cltd
mov
outsl
adc
rorb
roll
in
xchg
popa
ret
mov
mov
mov
pop
xor
rolb
loop
push
mov
sbb
rcr
shrb
jno
pop
sbb
adc
ficoms
ret
dec
lods
jno
jnp
push
push
add
out
clc
push
shlb
repz
leave
loope
andl
sbb
stc
scas
xor
cmc
add
adc
push
inc
mov
pop
insl
push
or
jge
daa
lahf
test
pop
daa
jmp
mov
push
mov
push
daa
cs
sub
xor
pop
ret
repz
addb
js
inc
pop
test
xchg
jle
or
jge
movsl
pop
rcll
jbe
mov
rcrb
cltd
mov
sbb
dec
push
jle
out
mov
xor
sahf
mov
fdivr
jle
test
push
in
cs
inc
add
mov
rorl
xchg
cmc
rcrl
les
les
divl
nop
jmp
stc
push
xchg
and
and
mov
push
icebp
adcl
dec
out
sub
sub
push
lods
sub
je
and
adc
sbb
jbe
and
dec
test
clc
cmp
or
out
aaa
xchg
pop
fs
and
xchg
jmp
jnp
add
adc
jle
fstpt
mov
mov
mov
inc
movsl
ljmp
ret
js
xchg
jge
nop
jle
je
push
lock
jecxz
cmpl
xchg
in
dec
pop
jns
into
gs
test
push
cmp
fs
xchg
lods
mov
fcompl
jo
scas
scas
inc
ljmp
into
mov
xor
leave
imul
pusha
adc
mov
popf
insb
sub
push
mov
cmpl
cmc
mov
xor
jle
bound
adcb
add
ljmp
jmp
inc
push
loope
cmp
push
dec
xchg
mov
push
je
inc
lahf
push
adc
cmpsb
mov
inc
jge
ljmp
add
ficoms
adc
imul
xchg
mov
xor
xor
arpl
dec
mov
cmp
or
push
dec
fsubrs
mov
in
adc
pop
test
cld
xor
xor
jle
fwait
ret
add
or
cmp
pop
into
aas
push
incl
xor
mov
adc
je
stc
scas
sbb
push
add
cmp
mov
and
mov
inc
addl
fdivrl
aaa
clc
xor
iret
jmp
sahf
test
and
sbb
fisttpl
sbb
jno
cmp
dec
dec
and
negb
cli
xor
jge
push
xor
imull
push
pop
xchg
sub
or
add
xchg
lret
lret
sbb
pop
pmullw
das
inc
mov
adc
icebp
xchg
jge
lock
jecxz
jno
je
popa
sub
int
cmp
mov
mov
mov
xchg
stos
pushf
pop
aaa
daa
pop
jg
jmp
cwtl
inc
dec
fsubs
jecxz
cmpsb
fldlg2
into
fsubrp
lahf
sbb
xor
push
je
fldcw
iret
shrl
adc
stc
pop
push
jbe
jge
inc
js
add
jo
data16
mov
jmp
idivb
inc
rcr
sub
mov
lcall
pop
and
rcrb
mov
inc
stos
push
add
fs
out
enter
jns
cmpb
mov
sbb
aam
test
rcll
cmp
sub
pop
mov
cs
test
cmp
in
mov
pop
ret
jbe
adc
xchg
mov
dec
out
jno
and
sub
mov
sahf
repnz
aam
in
data16
cmp
std
stos
ss
pop
xor
pusha
aam
mov
enter
shlb
xchg
sbb
add
sub
mov
adc
stos
popf
mov
cwtl
cmp
mov
aaa
jo
jmp
dec
hlt
paddd
stos
daa
mov
popa
sbb
sub
sub
pop
push
jne
xchg
xchg
lods
jmp
add
push
sbb
popa
js
pop
mov
xchg
mov
mov
mov
lret
ret
stc
push
push
loop
add
shrl
ret
jo
int3
pop
inc
xchg
cmpsb
lahf
arpl
hlt
mov
push
push
data16
mov
pop
xor
fbld
sub
xchg
cwtl
mov
cwtl
ret
test
xor
push
insb
call
xchg
clc
jp
adc
push
repz
out
lret
jbe
arpl
pop
xchg
dec
dec
mov
pusha
jb
enter
jo
aam
roll
std
sbb
fwait
outsb
xchg
test
jbe
and
fsub
push
aam
rclb
xor
mov
inc
insb
cmp
or
out
bound
ja
hlt
sub
fcmovnu
jo
mov
add
imull
sub
jbe
add
jmp
add
mov
sub
jl
cmc
test
dec
nop
jbe
cs
cmc
into
jecxz
inc
push
xchg
pop
and
mov
mov
or
test
adc
push
into
pop
pop
nop
std
mov
into
xlat
fistpll
movb
mov
xor
xor
pop
stc
in
xor
into
jp
add
nop
fidivl
and
jecxz
xor
pop
sub
repz
xchg
inc
stos
fwait
xchg
mov
add
lock
inc
dec
jno
popf
sbb
push
push
mov
repz
inc
imul
push
fisubrs
mov
popf
out
gs
clc
les
cmp
aad
movsb
popf
cmpsb
push
pop
sbb
enter
mov
popa
in
cmc
inc
fwait
das
rolb
out
push
jnp
xchg
repnz
push
bound
mov
mov
jno
pop
jg
cmp
dec
mov
jns
mov
pop
pslld
adc
pop
test
hlt
ret
jb
sbb
mov
loopne
ret
mov
adcb
inc
mov
adcb
sbb
fldenv
add
dec
mov
pop
and
adc
jl
jge
pop
test
xchg
and
aam
mov
out
ror
lahf
xchg
icebp
mov
repz
fwait
or
call
ja
lds
scas
fidivs
stc
dec
icebp
jnp
dec
ljmp
data16
push
xchg
mov
stc
add
pop
cmp
mov
nop
mov
fsubl
xor
xchg
and
dec
mov
mov
into
enter
or
xchg
cmpsb
mov
or
mov
repz
insb
outsb
ret
xor
mov
jecxz
and
fs
out
jno
in
cmpsb
je
test
sub
jge
insl
cmpl
outsb
push
xchg
xchg
cs
xchg
sbb
lock
into
mov
aaa
fadds
push
dec
insb
push
js
mov
dec
push
cmc
jle
cmp
add
sbbb
sub
stos
adc
jnp
les
rep
inc
xor
cmp
movsl
call
push
mov
and
aad
lock
popa
dec
and
inc
xchg
or
jns
sar
leave
xchg
sbb
rclb
mov
sub
xchg
cltd
lock
cli
mov
dec
repnz
in
movsl
sahf
cmp
xor
subb
inc
mov
adc
aam
inc
sub
loop
outsl
mov
xor
pop
ss
iret
daa
xor
hlt
lea
lahf
mov
mov
leave
int
cmc
and
xchg
sti
or
sub
enter
sbb
iret
fcmovbe
jp
xor
popa
gs
daa
frstor
push
inc
mov
iret
adc
cmp
jns
shlb
adc
outsl
ja
mov
pop
mov
hlt
lret
out
out
jecxz
xchg
cltd
jb
ljmp
dec
scas
int
fwait
push
or
mov
stc
insb
or
or
xchg
xchg
inc
lret
mov
inc
jns
mov
push
cmp
pop
std
xor
out
stc
push
cmpsl
sub
sbb
loop
mov
out
xchg
flds
repz
movsb
test
pop
adc
add
jb
jmp
xchg
mov
js
incl
clc
jle
sub
sarl
xchg
enter
ss
sbb
inc
pop
enter
push
adc
outsl
sub
out
test
mov
jb
iret
cltd
xchg
push
lods
mov
cld
scas
rol
or
mov
daa
js
fcomps
lret
push
in
dec
js
je
push
int
lret
xor
pusha
lods
arpl
mov
or
data16
test
loopne
adc
cmpb
inc
mov
sub
push
jle
xorps
jmp
mov
push
cmc
ja
ljmp
sahf
pop
jge
mov
inc
add
lods
fidivrs
dec
pop
mov
icebp
xlat
arpl
or
int3
inc
adc
fldln2
push
fwait
push
sbb
cmp
lock
push
das
adc
scas
adc
jmp
mov
stc
popa
add
add
stos
fsubrp
dec
ficomps
loop
push
jno
mov
mov
lods
mov
into
inc
in
or
and
push
mov
xchg
stos
pop
cld
pop
loopne
and
lahf
dec
inc
cmp
xchg
push
jo
aad
pushf
jo
sbb
cmp
mov
jge
sbb
lahf
int
mov
call
push
sub
sub
xor
aad
testl
mov
inc
repz
cmc
mov
inc
pop
push
add
sahf
xor
cmpsb
sub
cmpsb
ret
ja
xor
pusha
jge
cwtl
push
mov
xor
xchg
test
cmpsb
leave
popa
add
push
jae
cmp
cmpsb
adc
ljmp
pop
and
jp
scas
mov
sbb
arpl
in
mov
cli
ds
jl
popa
jno
jp
xchg
subb
push
push
out
or
orl
lret
cltd
in
mov
in
addr16
cli
ljmp
movsl
add
dec
sbb
sub
orb
sub
xchg
test
xchg
pusha
adc
popa
mov
pop
adc
lds
lea
cli
or
jg
adc
add
cmpsl
sbb
sahf
and
jno
mov
sub
int3
add
pop
ja
cmp
mov
cmpsl
mov
adc
imul
pushl
pop
push
jecxz
mov
or
sbb
lods
into
jae
pop
jns
dec
dec
mov
ds
inc
call
pop
loopne
mov
out
cmp
cmc
fwait
push
or
inc
call
outsb
fidivs
push
std
jecxz
xlat
rcll
imul
sbb
push
jge
data16
popf
js
andb
nop
xlat
cmpsb
pop
sbb
in
jae
cltd
shlb
xor
push
add
push
bound
dec
sbb
mov
lahf
or
and
fcoml
repnz
bnd
dec
hlt
fs
das
sbb
push
rorb
adc
aaa
sahf
cltd
iret
cmp
mov
out
push
inc
mov
imul
or
dec
aam
test
into
fiadds
ret
addr16
push
shl
xor
mov
mov
or
shll
ljmp
mov
aad
ss
addl
filds
int
int
fcmovne
dec
fbld
mov
out
inc
int3
adc
in
fsub
dec
in
rcll
jecxz
jp
mov
mov
pop
cmpsl
popa
mov
mov
bound
fcmovbe
ds
pminsw
int
fwait
clc
cwtl
fstpl
xchg
push
cmpsb
outsl
sub
test
iret
mov
add
xor
imul
push
loopne
loop
adcl
ss
or
cs
pop
sbb
rcr
inc
adc
xor
out
repz
push
pusha
je
addr16
add
sti
insl
push
xor
jg
push
inc
sahf
out
sbb
mov
stos
sahf
lock
popf
lock
push
shrb
bound
xchg
sbb
test
stos
ja
mov
push
sub
inc
iret
jmp
popf
push
adcl
sbb
test
add
aad
sbb
and
subl
sbb
mov
or
inc
cmp
les
adc
xchg
notb
add
sahf
pop
sbb
gs
nop
arpl
adc
lods
cmp
arpl
adc
pushf
sub
push
mov
clc
xor
ljmp
push
int3
cmp
push
mov
inc
and
cmp
dec
add
mov
add
mov
mov
outsb
incb
mov
or
pop
xchg
test
ljmp
scas
add
xchg
fbld
cmpsl
and
scas
push
fsubrs
daa
divb
movsl
inc
fcoms
and
jo
addb
ljmp
scas
ret
mov
out
push
dec
and
xchg
loop
push
cmp
pushl
sub
jmp
insb
js
movsb
mov
cwtl
push
mov
test
das
cmp
fnstenv
enter
dec
mov
sub
jg
add
xor
pop
inc
mov
jl
fucomip
and
movsl
push
push
sti
movsl
rolb
jge
and
sahf
jle
inc
fsubp
jns
test
ret
shll
out
mov
adc
fcmovnu
adc
adc
add
cld
shrl
int
cli
mov
std
inc
add
mov
and
jno
jne
xor
add
push
cltd
lret
mov
outsb
add
mov
out
outsl
inc
test
rcrl
jbe
aas
push
clc
xchg
dec
mov
fmuls
lds
sbb
int3
mov
cmp
loopne
scas
pusha
dec
jg
stos
add
sbb
xchg
imul
xchg
push
dec
mov
or
psadbw
cli
insb
test
sti
ljmp
mov
inc
test
imul
pop
cli
or
cmp
ljmp
cwtl
stc
mov
xchg
xchg
pop
mov
scas
enter
call
sahf
stos
rcll
pushf
dec
loopne
std
jmp
mov
jae
push
jne
es
leave
mov
fs
adc
adc
add
cli
imul
loop
repnz
mov
mov
dec
xor
and
in
out
jnp
arpl
adc
dec
pop
test
clc
shlb
cmpsb
pop
imul
in
data16
loopne
cmp
inc
push
sbb
fwait
mov
outsl
push
mov
and
sbb
pop
lcall
jle
movsb
jne
aas
fsubrs
pop
dec
xor
dec
je
pop
xlat
mov
mov
jnp
jbe
test
xchg
movsl
adc
sub
sbb
push
ja
jle
clc
and
iret
into
push
std
push
aaa
insl
test
cmp
orl
push
xor
aaa
xor
sbb
lret
jge
xor
das
insb
xchg
mov
in
cmp
mov
lret
into
xor
inc
mov
cld
jge
arpl
mov
and
scas
out
push
push
pop
pop
ret
lock
dec
cmpsb
sub
subl
cmpsl
dec
lds
push
imul
std
mov
fucomi
xor
mov
fcoml
push
adc
mov
mov
ljmp
lock
jge
popaw
movsb
sbb
popf
or
jecxz
mov
inc
fistl
movsl
movsl
out
jmp
in
rol
mov
fstl
pop
aas
sbb
or
fstp
push
orl
xor
pushf
imul
mov
mov
adc
fimuls
arpl
or
or
cmpsb
sahf
out
pavgw
sub
mov
mov
push
stos
andl
adc
dec
mov
push
and
push
xchg
xchg
xchg
out
sbb
fildl
pop
and
pop
fstl
push
data16
das
cmp
lods
sahf
sub
les
mov
dec
movsb
subl
in
xchg
pusha
sub
stos
sbb
xchg
jge
sbb
icebp
int3
idivb
dec
lret
mov
ds
mov
es
inc
pusha
outsb
fistl
shlb
push
mov
bound
push
subb
mov
sub
fsubrl
or
repz
lret
sbb
out
mov
mov
or
push
inc
cli
aam
lret
push
shrl
xor
leave
fldcw
push
sbb
ja
pop
jbe
nop
cmp
cmp
mov
cmp
ljmp
cmp
ja
push
iret
daa
addr16
call
daa
rol
loope
cld
cmp
stos
xchg
lods
loop
dec
fbstp
je
add
dec
sub
jg
in
cmp
push
inc
shll
cmp
out
movsl
push
ret
jg
adc
rcll
xor
cs
dec
fistpl
or
dec
cld
pop
pop
or
mov
sbb
cmp
mov
repnz
sbb
mov
cli
test
xor
xlat
and
dec
add
hlt
mov
movsb
fcoml
test
fldcw
xlat
sub
inc
mov
gs
iret
nop
pop
jne
cmp
xor
mov
push
mov
or
fsub
fsubl
mov
es
loopne
sbb
xchg
stc
insb
jl
cld
inc
pushf
sub
xorl
dec
rolb
or
jl
dec
outsl
test
push
inc
dec
xor
les
lret
ljmp
mov
push
push
push
shl
adc
ret
xchg
lret
nop
test
les
adc
xlat
insb
dec
pop
fwait
popf
xor
adc
cltd
popa
nop
cmp
xor
mov
pusha
out
addb
mov
scas
iret
cld
xchg
scas
pop
and
out
aam
mov
pop
sbb
imul
imull
and
mov
inc
pop
jecxz
out
fwait
lods
imul
push
jno
pop
adc
sarb
outsb
sbb
sbbl
xchg
jp
lret
out
shll
in
sub
lds
dec
loope
mov
dec
mov
outsl
mov
repnz
sbb
cmp
jo
outsb
and
and
add
add
ret
and
or
push
add
mov
mov
int3
movsl
sub
mov
jmp
mov
mov
cltd
cmp
cwtl
push
popa
loope
sub
cmp
push
mov
loop
lcall
subl
pop
mov
push
cltd
in
shll
adc
push
and
or
adc
bound
test
pop
jg
mov
out
sub
pop
roll
sbb
or
mov
or
cmpl
std
lcall
call
jnp
mov
push
lods
add
or
push
mov
mov
scas
xlat
lock
incb
inc
out
push
jno
bound
pop
push
mov
cwtl
jns
pop
add
sbb
daa
xor
dec
xchg
or
aas
dec
jl
vmovmskps
les
lods
cmp
loopne
call
inc
adc
or
out
dec
mov
push
push
mov
in
jl
lahf
movsb
nop
xchg
or
fdivrs
fldcw
sbb
pop
and
in
push
out
fiadds
in
inc
fsubrl
adc
add
js
dec
loopne
scas
pop
cmpsl
pusha
fwait
test
data16
hlt
or
inc
pop
mov
dec
lret
mov
sti
mov
inc
cmp
stc
mov
js
xchg
adc
push
fcomps
lock
cmp
jno
push
dec
pop
pop
and
je
lods
dec
imul
and
lock
int3
push
xchg
lret
sarb
or
lods
rolb
enter
cmp
sub
out
pop
out
adc
inc
aaa
lods
cmp
mov
jl
inc
ret
jmp
fimuls
xor
cld
and
stos
and
fwait
pop
jne
jl
std
aas
out
add
push
mov
pop
jno
in
hlt
lods
sarb
sti
jns
rolb
movsb
sahf
cmpsl
rcrl
iret
sub
cwtl
pop
cmc
ljmp
sbb
add
cld
movsl
mov
pop
cwtl
lret
movsl
or
and
decb
stos
jae
test
dec
mov
xor
jmp
call
mov
ds
rorb
jp
xchg
loop
pop
adc
xor
mov
cld
mov
loopne
cmp
inc
push
fs
xor
stos
adc
hlt
jb
fwait
leave
sub
jg
lret
xchg
cli
jno
sub
mov
fcoml
dec
xor
inc
lea
arpl
insb
lcall
cmp
or
mov
cmc
repnz
fnstcw
xchg
xorb
pop
dec
xor
mov
push
mov
pop
pop
enter
adc
xchg
adc
cmc
pop
lds
insl
sub
or
lcall
or
rorb
adc
pop
or
or
mov
cmc
add
out
dec
xchg
int
stc
add
pop
or
adc
popf
pop
hlt
popl
fisttps
scas
cmpsb
int3
inc
xor
inc
lock
notl
lock
add
jbe
lret
insb
and
sbb
mov
cld
dec
loop
lock
daa
inc
and
mov
addb
ds
mov
roll
ljmp
push
pop
mov
fnstcw
add
mov
xor
les
add
cs
xchg
push
test
jmp
out
daa
jl
xchg
in
insb
adc
jbe
lret
xor
stos
mov
push
xor
popa
mov
adc
mov
add
cmc
lds
mov
popf
sub
rcrl
mov
add
outsl
pop
mov
lock
cwtl
pop
jnp
sbb
or
subb
cmp
xchg
outsb
roll
and
cmpsl
add
cmp
sahf
pop
mov
dec
push
cmp
and
test
into
xchg
out
aad
or
adc
inc
int
popa
mov
push
aaa
ljmp
and
mov
push
nop
clc
in
imul
into
test
repnz
mov
add
mov
dec
dec
mov
addr16
aas
sbb
jb
push
in
rcl
repz
popf
push
pop
test
ss
inc
stc
push
sbb
fcoms
enter
out
mov
insb
dec
adc
xchg
sahf
cmpsl
iret
mov
jnp
shrl
sub
ss
mov
dec
orb
lret
xor
inc
sub
xor
or
jo
es
ret
and
push
lret
cmp
or
inc
xchg
mov
daa
adc
rorl
mov
push
dec
gs
in
push
xor
jnp
stos
mov
or
mov
cmp
cmp
bound
inc
lret
outsl
dec
jmp
mov
lahf
mov
pop
cmpsl
adc
push
pop
loop
int
scas
sbb
aam
cltd
scas
outsl
loopne
xchg
xchg
pop
clc
inc
in
mov
cmpsb
inc
inc
pop
pop
xor
xor
stos
insl
push
int3
pop
test
lds
int3
xchg
lock
cmp
dec
push
mov
adc
bnd
lcall
fdivp
repnz
outsl
jbe
mov
addb
aaa
rcrl
cmpsb
jge
mov
pop
pop
mov
inc
mov
inc
fldcw
ljmp
fildll
fwait
pushf
adc
push
lcall
mov
push
stos
xor
add
shll
cmp
mov
pushf
xor
pop
ljmp
xchg
leave
xchg
aad
jle
pusha
sub
pop
lds
cmpsb
fwait
adc
addr16
loop
test
test
sub
subb
mov
fbstp
mov
sahf
cld
jp
out
nop
addr16
xor
inc
push
je
jne
mov
cmp
push
iret
or
jbe
jo
les
ret
jge
cwtl
test
ljmp
fildll
sub
push
mov
adc
and
jnp
and
stos
jg
out
ret
mov
xchg
test
sub
test
cld
or
sub
fstpl
jae
sarl
push
sbb
mov
mov
cmc
andl
cltd
pop
jbe
bound
test
jge
int
push
cmp
and
rorl
popa
or
ficoms
sbb
ficompl
add
das
mov
int3
loop
mov
sub
enter
es
mov
jle
outsb
call
fisttpl
adc
out
inc
cli
enter
pop
lea
lock
insb
sub
lcall
push
adc
jg
and
inc
add
sub
loopne
adc
out
test
in
jecxz
test
testb
push
jae
addr16
pop
adc
imul
std
lret
jge
sbbb
or
dec
xchg
sbb
mov
inc
inc
int3
fnstsw
or
lcall
xchg
notb
mov
push
cwtl
shrb
outsb
pop
hlt
add
lods
insl
and
popa
add
out
jnp
add
mov
fwait
test
jo
aas
call
les
fs
movsl
repnz
sahf
or
fsubr
jb
xor
push
aam
addr16
sub
cmp
aad
pop
push
cld
or
repz
fdivrl
adc
je
or
mov
jbe
push
inc
mov
push
ljmp
into
pop
fiaddl
mov
dec
xor
jae
adc
cwtl
pop
outsl
aaa
iret
mov
push
dec
push
sub
jge
lods
cmp
ficoml
imul
addr16
inc
ficompl
movsl
and
out
mov
mov
jle
in
stos
cmpsl
pop
dec
fnstcw
mov
fnsave
ret
scas
call
adc
dec
sti
ret
imulb
je
xor
mov
in
xchg
pop
adc
mov
jl
sbb
mov
popa
jmp
push
mov
out
in
adc
pop
push
dec
xchg
int
xchg
mov
push
jbe
clc
ret
or
stc
adc
xchg
rorl
lret
add
neg
rcrb
cmp
sahf
outsb
nop
dec
in
loopne
mov
je
aam
push
test
ds
dec
inc
mov
call
sti
aas
arpl
sbb
push
push
add
lahf
fsubl
jle
insb
inc
push
sbb
call
das
mov
popw
or
dec
sbb
mov
xlat
daa
sbb
repz
icebp
adc
insb
mov
loop
inc
mov
pop
mov
movsl
loop
dec
push
pop
jecxz
fldcw
pop
es
outsl
jmp
gs
jbe
add
pop
add
mov
push
pop
sub
and
dec
movsl
sub
lret
pop
xlat
mov
sahf
inc
out
mov
mov
mov
cmp
repnz
or
daa
pop
fidivs
pop
cmp
mov
das
movsl
aam
out
sahf
push
mov
adc
cmpsl
or
sti
xchg
cmc
dec
or
in
push
incb
jne
insl
insl
pop
mov
cmpsb
paddusb
mov
and
mov
movsb
int3
sbb
aaa
sbb
xor
push
jnp
add
push
or
ss
sbbl
nop
out
fs
stc
push
shlb
shl
lds
std
inc
xor
repz
repnz
icebp
xchg
daa
xchg
jecxz
push
mov
out
mov
add
ficoms
pop
add
out
inc
stos
sarb
jge
shrb
dec
sub
adc
sti
test
std
insl
movsl
scas
add
imul
push
push
ret
mov
jecxz
adc
into
sbb
xchg
inc
sahf
insl
sub
fmuls
adc
sbb
mov
mov
dec
sbb
sbb
mov
and
push
stos
fwait
jg
cmp
push
push
or
cmp
aad
outsl
fisttps
scas
movsb
jo
push
lcall
pusha
cmpsb
add
mov
dec
nop
jb
stc
lret
pop
icebp
idiv
fidivrl
and
popf
sahf
orb
adcl
mov
jns,pn
inc
popa
push
mov
sub
aaa
sub
std
cmpsl
jbe
pop
jecxz
lock
popa
aam
addr16
sbb
xchg
movsb
cli
int3
adc
cmp
cltd
jae
dec
icebp
sub
push
mov
push
imul
inc
roll
dec
jg
repz
movsl
aam
cmp
inc
out
lret
xchg
xor
xchg
lahf
cmp
shlb
push
cld
dec
mov
xchg
push
sub
push
push
in
push
push
sub
cmp
lcall
jg
jae
or
sub
sbb
scas
jg
xchg
adc
fwait
adc
push
xor
out
sub
or
sti
mov
ficomps
xchg
sbb
inc
push
sub
imul
pushf
arpl
out
fisubrl
sbbl
test
imul
jmp
inc
mov
aam
sub
test
insl
pop
jl
mov
pop
cmp
sbb
push
adc
xlat
shll
daa
inc
jecxz
and
test
push
lret
dec
fidivs
leave
jecxz
pop
movsl
cli
and
push
int
add
cmp
xchg
mov
and
cltd
test
fildl
xchg
test
push
clc
daa
lods
adc
adc
in
nop
in
lds
pop
dec
repnz
mov
addr16
aad
std
mov
imul
shr
sbbb
mov
inc
jne
xchg
xchg
pop
lahf
clc
xchg
lods
xchg
hlt
addr16
jmp
scas
mov
mov
or
out
sbb
scas
stos
iret
call
mov
jmp
push
nop
insl
inc
ljmp
ret
shlb
lret
icebp
dec
je
out
in
loop
roll
mov
mov
int3
cmpl
rorl
mov
test
lock
imul
mov
cmc
add
clc
test
pop
ljmp
push
push
push
sub
push
jne
pop
int
inc
or
sahf
pop
pop
pop
push
add
adc
jle
fildll
cmp
xchg
add
jmp
inc
mov
mov
jae
daa
sbb
enter
iret
push
fsubrs
adc
movsl
rcrl
xor
std
inc
jno
and
lea
add
sbb
cs
idiv
inc
in
mov
test
sbb
cmpsb
and
cli
or
xor
aad
fs
pop
call
xor
xchg
inc
lock
outsb
das
jns
test
call
loop
sub
shrl
xor
imul
dec
aas
repnz
ret
mov
push
sbb
inc
push
inc
lret
popa
or
adc
push
xchg
imul
int3
enter
gs
push
mov
imul
lock
mov
or
mov
xchg
dec
jns
sub
jp
mov
jecxz
push
loopne
sbb
xor
shl
jnp
loop
cmp
imul
pusha
std
mov
push
jb
iret
shr
fwait
mov
and
sarl
push
pop
sbb
cltd
ret
jo
jle
aaa
mov
clc
sahf
dec
ror
rcrl
or
push
icebp
loopne
mov
lods
fisttpl
inc
xchg
daa
in
outsb
pop
iret
xlat
jmp
out
jo
aaa
adcb
xchg
push
mov
and
arpl
cmp
mov
iret
and
and
enter
mov
aad
xchg
sbb
inc
xor
xchg
or
sub
sti
push
pop
in
dec
push
stos
jmp
mull
stos
adc
inc
outsl
test
aad
out
test
jmp
jmp
or
js
stc
cmp
inc
fisttps
sub
idivb
and
out
les
and
outsb
adc
push
jbe
lods
push
adc
mov
insb
mov
mov
push
sub
xor
xor
xchg
in
mov
cwtl
lret
and
imul
adc
xlat
sub
or
std
mov
jge
mov
imul
fldl
pop
iret
xchg
dec
test
push
cld
jne
imul
push
xchg
in
insb
jbe
xor
or
pop
icebp
cs
and
mov
inc
push
aad
pop
outsb
aas
test
aam
and
lret
paddsb
repz
mov
add
movsl
jno
test
mov
pop
lahf
xchg
loope
and
push
sub
jecxz
mov
je
push
sub
je
cmpb
testb
mov
outsl
pop
jl
mov
jb
xor
push
cld
push
adc
push
push
aaa
push
pop
int
pop
pop
loopne
xlat
cmp
repz
mov
push
imul
cmp
fisubl
notl
inc
insl
insb
mov
aas
test
lds
mov
loopne
fsubl
scas
sub
call
loop
mov
mov
xchg
scas
mov
imul
outsl
push
or
rclb
jg
mov
cs
out
shlb
iret
jecxz
mov
in
cli
push
mov
xchg
pop
or
pop
dec
in
mov
cmp
dec
shlb
aas
stos
imul
popf
mov
test
push
xchg
inc
loop
mov
pop
rol
dec
jle
shrb
pop
outsl
xor
pop
icebp
jo
outsb
je
pop
xlat
xchg
popf
das
mov
cltd
jle
mov
js
push
and
pushf
aaa
adc
lods
mov
dec
push
fidivrs
sub
mov
and
mov
mov
mov
push
les
xor
clc
mov
and
pop
mov
sti
mov
enter
mov
test
mov
loop
pop
insb
aaa
dec
fwait
mov
jge,pt
pushf
popf
adc
test
jnp
imul
dec
or
or
xlat
test
xorb
jmp
xor
mov
movsl
gs
jmp
jmp
repz
jb
sti
test
cmp
in
sbb
pop
std
fsubl
or
movsl
push
insl
pop
out
adc
xchg
call
pusha
pop
pop
dec
int3
fxch
mov
movsb
push
inc
push
dec
ja
pop
pushf
test
out
imul
xlat
mov
inc
sbb
xchg
loop
dec
rcrb
xor
lea
mov
sbb
push
loop
sti
cmp
add
jle
pusha
ret
iret
cli
imull
add
cmp
test
xor
popf
inc
cld
lcall
or
add
and
aas
inc
xor
pop
push
xchg
mov
pop
jno
push
inc
jp
add
sub
jns
jmp
adc
imul
mov
pop
and
lods
pushf
sbb
loop
push
add
cmp
push
daa
inc
aas
sbb
pop
rcrb
mov
pop
aaa
lock
push
cltd
push
imul
jg
punpckhwd
popa
or
mov
dec
addr16
loopne
int3
sahf
movl
addr16
arpl
inc
cmp
aas
cmp
sub
dec
cmpsl
cmc
ret
and
push
cmp
out
add
xchg
dec
jnp
lods
je
pop
pop
jb
push
test
mov
insb
sbb
jecxz
push
iret
mov
xchg
cmpsb
subl
lods
rcrb
mov
movsb
shrl
xor
fwait
outsl
xor
and
popf
xchg
leave
bound
push
inc
je
mov
clc
sub
lea
xchg
xchg
mov
test
jno
dec
and
inc
jg
jle
push
lods
insb
add
movsl
sub
cwtl
sub
outsb
mov
outsl
cmc
out
sahf
lahf
jbe
cmp
mov
inc
push
xorl
pop
sub
in
out
ret
pop
inc
cwtl
mov
cld
jmp
xchg
mov
add
cmp
sbb
aas
xchg
into
addr16
and
mov
clc
fistpll
sti
dec
push
mov
mov
fidivrl
std
fbstp
mov
fiaddl
sub
xor
nop
jne
jo
adc
xorb
push
and
call
subl
and
cmpsl
jge
scas
fs
dec
cmpsl
jno
jbe
adc
fwait
mov
xor
js
cmpsl
dec
rcll
fsub
icebp
into
gs
sub
add
or
incb
inc
pop
daa
dec
pushf
repz
cld
lahf
push
push
inc
in
inc
sub
add
nop
adc
add
xor
add
or
lods
adc
div
shll
xchg
mov
cwtl
cli
je
daa
stos
mov
stc
dec
repnz
pop
pop
stc
push
jno
stos
ja
pop
xchg
pop
rorb
sub
lods
pop
mov
lock
sahf
int
fldl
mov
xlat
fidivrs
jl
movsb
addb
adc
arpl
out
cmp
sahf
leave
dec
cld
push
fcompl
adc
jmp
push
ficoms
inc
jae
hlt
sbb
inc
sub
cltd
push
sbb
mov
addr16
stos
cmp
mov
jnp
mov
cmp
inc
addr16
push
xor
testb
and
dec
push
sbb
andl
ja
push
dec
jle
inc
push
sub
movsb
adc
or
addr16
les
mov
hlt
add
mov
pop
push
dec
xchg
fstl
insb
ret
mov
and
ds
lods
add
mov
mov
aad
movsl
scas
fwait
subb
cli
push
mov
add
adc
js
xchg
lods
jle
jnp
push
test
mov
popf
adc
daa
xchg
cmp
stos
mov
inc
imulb
push
pop
sahf
xor
pop
out
and
xor
cmp
pop
int
xor
cmp
or
adc
xor
es
lods
pop
push
or
fs
lcall
sti
push
mov
cmpsl
lcall
out
pop
sub
cwtl
ret
mov
out
arpl
aas
push
ljmp
sbb
lret
mov
pusha
xchg
inc
pop
pop
andb
mov
rcrl
mov
cmpsl
push
cmpsl
das
repz
or
aam
bound
in
mov
jecxz
sbb
mov
fistl
stos
daa
int
popf
xchg
test
xor
rcll
push
mov
rcll
outsl
cmp
add
icebp
mov
add
fists
lahf
jo
push
mov
dec
pop
ret
inc
cmc
out
jae
mov
mul
insb
test
add
test
mov
pop
sbb
mov
ja
hlt
frstor
jbe
rorb
fidivl
adc
pop
lcall
sub
adc
mov
imul
and
in
and
cld
pop
rclb
bound
sahf
lret
imul
push
jge
lcall
stos
rcll
mov
jo
test
or
int
add
cmpsl
sub
sbb
in
repnz
mov
inc
mov
xlat
cli
loope
pop
nop
dec
jmp
jecxz
pop
inc
mov
add
mov
cmp
xchg
xor
jg
repz
mov
test
mov
test
adc
subl
mov
pop
cmp
push
push
pusha
hlt
outsb
fildl
shll
addb
xor
mov
das
les
sub
inc
es
or
dec
test
sbb
mov
dec
cmpsb
ret
aam
push
fsubrl
add
mov
in
dec
pop
leave
push
sbb
sub
lahf
mov
pop
push
pop
pop
je
ss
cmp
or
xchg
pop
test
cli
sbb
bound
jns
ss
imul
inc
push
xchg
jnp
pop
jnp
add
xchg
mov
sbb
mov
or
shr
mov
jnp
lods
shr
sbb
xor
adc
mov
dec
popa
pop
aas
ss
push
shll
push
or
jo
int3
in
loop
or
out
adc
lock
int3
xchg
add
push
add
lahf
cmp
das
push
inc
ret
pop
les
repz
repnz
cmp
cmp
adc
stc
fidivrs
bound
xchg
ret
ja
decl
scas
enter
xchg
pop
push
xchg
mov
enter
mov
call
mov
or
fmuls
sbb
jge
push
push
pop
pop
pop
addr16
sub
insb
inc
mov
fisubrl
xchg
cs
movsl
add
das
pop
inc
dec
enter
xchg
inc
in
xor
loop
loop
aam
sti
mov
push
out
bound
or
addb
ja
jb
jne
xor
in
and
jl
xchg
testb
adc
dec
stos
rcr
cmc
dec
sub
aas
cs
aam
test
mov
mov
loopne
jnp
aas
shll
insl
xor
adc
sbb
adc
aas
mov
push
push
mov
mov
push
fmull
cmpsb
pop
and
sub
sbb
pop
aad
jp
or
aaa
ja
fiadds
cwtl
test
dec
push
loope
das
sbb
fidivrl
sub
sbb
aas
lret
aad
push
lods
push
and
mov
in
jg
mov
stos
and
loopne
movsb
adc
stos
adc
xchg
in
adc
xor
je
aas
int3
push
push
jbe
rcrb
jnp
add
aam
insb
cmp
cmp
adc
mulb
outsl
test
fldz
sahf
jo
in
push
nopl
mov
mov
add
ds
movsl
or
xchg
and
rcrb
fisubrs
fwait
negb
test
mov
and
pusha
sbb
nop
add
mov
inc
test
or
pop
enter
aam
shlb
scas
faddl
fwait
repnz
and
cmp
push
lods
fnstsw
dec
popa
mov
push
inc
inc
aad
mov
sub
adc
shlb
ret
xor
inc
adc
push
adc
jnp
xor
fcomip
jge
das
sbb
rcrl
pop
ljmp
insl
or
pop
sbb
sub
adc
and
sahf
icebp
mov
shlb
test
sbb
test
iret
jmp
mov
or
mov
mov
adc
movsl
or
pop
fwait
cmpsl
xor
push
mov
out
sub
xchg
cmp
xchg
mov
sahf
jge
or
dec
pop
pop
jnp
popa
hlt
push
fnstcw
jbe
xchg
jecxz
sbb
cs
push
movsl
ret
out
jnp
sub
pop
ror
fmul
push
jae
mov
adc
inc
cmp
and
imul
data16
adc
mov
sub
mov
xor
adc
dec
push
sti
mov
shll
push
pop
into
je
jmp
jmp
mov
sbb
push
xor
adc
testl
pop
cwtl
test
in
addr16
out
loope
loope
imull
xchg
popa
fbstp
and
pushf
adc
jmp
jl
nop
mov
arpl
nop
iret
push
and
shlb
inc
les
inc
xor
sahf
mov
lods
add
jmp
xor
orl
jns
dec
jge
mov
jmp
dec
or
cli
cmpsb
popf
jno
imul
push
sbb
jge
movsb
in
jno
xchg
inc
jmp
into
sahf
out
sub
popa
ret
sub
jns
repz
test
push
bound
push
setg
mov
movl
fldenv
jae
push
or
push
in
push
mov
mov
dec
jg
adc
out
out
jmp
pop
add
movsl
mov
lods
or
inc
test
cmp
mov
inc
xor
shl
notb
add
jmp
jno
mov
dec
out
sahf
or
mov
aaa
adcb
push
pusha
adcb
xchg
xchg
lods
jne
scas
mov
es
inc
ret
and
jmp
scas
jno
nop
leave
jb
sub
sbb
cwtl
movsl
dec
ds
into
cmp
insl
dec
loope
ret
decl
jle
js
xchg
pop
in
les
leave
xlat
inc
popa
popa
fisttps
negb
movl
mov
addr16
inc
aas
dec
std
push
add
flds
push
inc
add
loopne
daa
sti
sbb
insl
and
out
jecxz
insl
cmpb
repnz
sbb
les
jno
addb
sub
lods
pop
shl
enter
dec
mov
mov
fbstp
cmpsb
add
xchg
mov
dec
clc
dec
xchg
lret
ss
ljmp
and
cmp
cmp
sbb
pop
das
lock
fwait
ja
in
cli
add
xchg
push
popa
jmp
xchg
mov
outsb
insl
ss
jno
jecxz
mov
loop
xorl
adc
int
mov
test
inc
sub
jnp
dec
mov
sbb
xchg
lret
rol
sub
cmpsb
dec
jp
jecxz
mov
fmull
lret
lret
hlt
push
in
lods
sbb
mov
in
jg
jno
outsl
pusha
inc
push
addr16
mov
mov
pop
test
mov
imul
sbb
sbb
cmpb
out
lods
xchg
nop
cld
mov
jb
addr16
out
push
lods
inc
pop
js
bound
mov
or
dec
xchg
imul
cmc
sbb
subl
jbe
xor
add
ffreep
inc
push
repnz
aas
push
push
int
and
pop
movsb
movsb
or
mov
mov
jbe
in
sub
ret
fidivrs
js
aad
popa
cltd
pop
mov
and
adc
mov
enter
mov
mov
xor
mov
arpl
repz
cmpsb
gs
mov
mov
gs
mov
aas
xchg
out
pop
out
mov
bound
sub
sub
and
hlt
hlt
push
inc
iret
pop
mov
dec
xor
mov
lock
sub
mov
shlb
enter
ret
into
in
push
adc
sbb
dec
mov
sub
sbb
dec
sbb
test
call
inc
mov
pop
stc
repnz
dec
lods
jmp
outsl
in
xor
sbb
rcl
dec
add
popl
push
lret
cld
cltd
popa
outsb
add
adc
or
test
push
add
xchg
xor
je
hlt
cmp
cltd
dec
loop
push
pop
adc
stc
and
inc
mov
cld
ljmp
aam
dec
aam
test
nop
int3
sarb
sahf
jmp
jnp
lcall
mov
add
lea
enter
loop
jo
std
loopne
mov
lret
jmp
mov
mov
lods
arpl
jbe
sub
sbb
adc
cmpsb
cmp
or
out
push
stc
int3
mov
sarl
jo
adc
cmp
popf
out
cmpsb
mov
pop
mov
in
add
adc
adc
test
out
fsubl
loope
push
fidivrl
gs
adc
xchg
adc
sbb
sti
mov
adc
sbb
mov
push
outsl
or
shlb
lcall
popf
mov
jb
fsub
mov
popf
call
arpl
call
insl
cld
xchg
mov
pusha
mov
xchg
inc
clc
into
add
mov
push
scas
push
addl
push
in
adc
xchg
jecxz
ret
inc
lds
outsl
hlt
and
mov
jne
fsubs
test
or
push
xor
sub
xchg
ret
push
fimuls
adc
sahf
dec
cmpsl
jmp
js
jae
xchg
cmpsb
sbb
push
jmp
mov
jmp
push
rcrl
pop
insl
ds
fs
push
ffree
xlat
jge
es
add
xor
or
cmp
push
fdivrs
mov
sbb
mov
movsb
sbb
xchg
add
outsb
xchg
and
adc
sahf
push
jnp
sub
or
aas
adc
bound
push
pop
push
lea
jg
sahf
in
pop
or
jo
cmp
mov
xor
xor
xorl
mov
call
fadds
das
mov
cmp
push
push
push
dec
jb
aam
or
mov
sub
mov
pusha
shrl
adc
es
sbb
xlat
add
and
imul
mov
adc
repz
lods
mov
mov
je
leave
fpatan
outsl
test
inc
rol
aaa
insl
repz
pop
jo
mov
in
cmpsl
mov
xor
pop
cmpsl
xlat
pop
xor
sbb
test
xchg
jns
push
push
mov
lcall
mov
ficomps
push
jnp
or
add
sbb
cs
ljmp
iret
scas
sub
mov
push
rcll
dec
mov
and
dec
fmull
and
cmpsl
arpl
xchg
sarb
jmp
ss
sti
jae
lods
mov
rolb
fs
call
inc
daa
cmpsl
mov
jl
daa
xchg
mov
mov
mov
push
inc
jmp
mov
adc
popf
cmpsb
out
jge
roll
mov
leave
das
add
xor
and
add
imul
nop
mov
gs
jae
data16
iret
divl
adc
dec
movsl
cmpsl
xchg
dec
dec
insl
xchg
icebp
out
push
into
nop
jne
add
nop
in
pop
add
push
out
icebp
adc
call
ret
adc
lret
inc
or
test
jg
and
and
sbb
inc
mov
jmp
stos
xchg
mov
movsl
pop
fildll
mov
push
cmp
sbb
shll
shll
stos
fcomps
push
daa
add
sahf
dec
adc
mov
test
cmp
sub
in
sub
leave
inc
jns
xor
outsl
adc
add
sahf
mov
negb
cwtl
iret
fsubr
inc
push
std
dec
in
inc
xor
popf
sub
mov
in
push
or
mov
shrl
push
pop
jae
add
sbb
xor
fcmovnb
cmp
mov
sarl
dec
gs
enter
mov
mov
sbb
mov
push
pop
lea
dec
stc
inc
jnp
mov
push
ucomiss
xchg
sbb
pop
ret
out
mov
xchg
test
or
fiadds
ljmp
inc
fiaddl
sbb
pusha
mov
mov
jl
or
adc
repnz
mov
jne
and
mov
jl
and
mov
cmp
inc
out
mov
adc
xchg
fadd
mov
mov
out
lahf
aad
sub
xor
das
push
lods
icebp
sbb
xchg
fmulp
fdivp
inc
jl
add
cld
clc
dec
mov
cmc
aad
imul
stc
hlt
cld
jbe
and
xor
scas
or
xchg
into
xchg
rolb
add
popf
scas
insl
inc
leave
fwait
pop
andl
push
data16
lods
test
jb
lea
pop
sub
xchg
push
fmull
dec
rcrb
inc
dec
xchg
add
push
fstl
and
push
rol
imul
pop
test
pop
nop
pop
iret
enter
jae
popf
ret
or
imul
les
pop
pop
dec
mov
sub
std
jecxz
lods
and
ret
arpl
imul
inc
shll
cmp
popa
lods
pop
mov
jecxz
shrb
outsb
jg
ficomps
mov
mov
xor
popf
mov
lcall
mov
stos
lds
inc
add
dec
leave
sbbb
mov
cmpsl
rcll
mov
pop
in
mov
call
sbb
pop
aam
cltd
pop
add
push
out
pop
dec
in
inc
jae
daa
jge
or
mulb
or
and
mov
add
dec
in
jnp
test
stc
mov
inc
sti
mov
popa
xor
imul
ret
push
cwtl
xor
fldl
out
gs
and
and
ja
jge
xor
pop
push
icebp
xchg
ljmp
mov
in
mov
cmpsb
scas
inc
mov
jg
shlb
push
dec
add
or
mov
cmpsl
enter
dec
ja
push
jne
sub
stos
jle
add
dec
or
dec
cmp
xchg
mov
and
mov
push
loop
jno
lea
pop
mov
cmpsb
mov
push
orl
imul
xchg
mov
out
mov
cmp
insb
add
pop
sub
sbb
repz
dec
cld
sbb
and
insl
push
sahf
in
movsl
out
and
bound
jl
loop
sub
sbbb
popf
popf
mov
adc
or
push
icebp
and
xchg
push
push
movb
lcall
sub
add
addr16
lock
or
mov
jnp
ret
xor
pop
int
nop
pop
imul
cmp
test
pop
pusha
push
imul
inc
pop
push
sub
jg
mov
je
jg
mov
leave
sbb
fldt
lea
data16
inc
mov
add
and
push
or
push
mov
xchg
xor
sahf
popf
in
lods
pop
or
mov
push
mov
jb
mov
sbb
sti
in
insl
adc
sbb
add
cmpsl
pop
icebp
jo
cmc
rorb
negb
stos
jg
movsl
push
and
es
jo
push
imul
pushf
or
push
adc
lds
pop
call
xor
xor
or
cli
outsb
es
cmpsb
xchg
mov
mov
sub
mov
fsubrl
dec
xor
sbb
jl
div
sahf
imul
pop
mov
lahf
inc
hlt
pop
enter
in
not
iret
inc
xchg
sbb
lds
pusha
sub
sub
mov
mov
cli
jg
push
mov
jae
sub
lcall
in
adc
xchg
test
jbe
fs
mov
jne
lods
push
or
pop
xchg
jns
aam
mov
orb
rol
mov
mov
jl
fs
adc
in
movlhps
pop
inc
dec
add
push
lcall
lods
leave
shlb
fldl
insl
pop
es
cmc
xchg
aas
les
mov
dec
movsl
cmp
ds
jae
mov
push
out
movb
sbb
js
into
pop
ljmp
cld
mov
cmp
xor
xor
outsl
inc
mov
cs
xlat
lock
repnz
imul
xchg
push
mov
out
out
sub
dec
or
sub
es
push
xor
jae
ljmp
out
jb
dec
divl
insl
rorl
cli
int
pusha
mov
lret
cmp
lock
sub
test
out
mov
xor
mov
cmc
push
inc
and
sub
stos
call
out
ja
xor
in
push
xchg
or
and
push
sti
jp
xor
cmp
sbb
sub
adc
jmp
insb
adcl
lods
mov
sub
imul
push
mov
xchg
and
xchg
in
data16
push
mov
mov
daa
lret
loop
stc
push
scas
xorb
and
push
pop
pop
pop
cmp
in
mov
ret
cmpl
aaa
popa
lock
add
inc
ret
pop
lret
cld
pop
mov
dec
xlat
rcrb
loope
popf
inc
data16
add
adc
mov
ret
fildll
sbb
pushf
in
adc
dec
inc
js
mov
movsb
cmp
xchg
in
jl
loopne
sbb
movsb
jp
test
rcr
lea
fdivr
jae
aad
out
adc
scas
jae
cld
adc
or
adc
lahf
stos
and
lcall
push
sahf
clc
shll
loope
stc
mov
nop
xor
ss
jae
clc
ret
cli
sbb
movsl
dec
fcompl
mov
scas
das
mov
xchg
and
cmp
mov
das
xchg
cmp
dec
push
xor
sti
and
loope
mov
xchg
cwtl
cli
scas
mov
xchg
in
push
imul
add
into
jno
jns
popl
jmp
cld
and
or
push
mov
inc
jp
aam
js
out
cltd
pop
sbb
leave
xor
push
negl
mov
push
cmp
fldl
fistl
rcrb
fsubs
enter
dec
sbb
mov
jb
dec
add
ja
nop
sub
jae
insl
xor
mov
aas
mov
lds
push
fstps
pop
sub
imul
sarl
je
mov
and
push
addr16
pop
dec
outsl
rcrb
xchg
mov
pop
mov
icebp
mov
cmp
nop
and
cmp
xchg
pop
mov
adc
add
stos
out
xchg
add
data16
pop
fidivl
pop
out
cmp
push
xor
gs
push
fadds
call
out
mov
mov
or
cvtdq2ps
je
mov
mov
icebp
inc
in
cmp
xchg
sti
xchg
add
cmp
aam
fdiv
imul
jg
and
mov
dec
sub
aas
mov
iret
adc
and
gs
leave
scas
gs
jo
mov
mov
mov
out
xor
or
arpl
jo
add
cwtl
iret
testl
push
lahf
lds
sbb
jl
inc
fidivrl
dec
or
inc
sbb
sub
imul
fwait
xor
sbb
shrb
imulb
xor
sbb
js
das
test
xlat
lods
mov
jle
inc
sub
mov
mov
jns
in
leave
fistps
cmc
ss
and
jl
hlt
into
dec
fwait
jl
pop
mov
inc
xor
dec
stos
fisubrs
mov
ret
jp
adcb
rol
cs
lea
mov
movsl
add
push
cmp
js
fisubrs
scas
ja
xor
rorb
and
and
gs
push
sbb
call
sub
mov
xchg
mov
test
inc
cmp
sub
or
adc
roll
jp
jle
cmp
test
jnp
push
or
loopne
lock
cli
scas
pop
xchg
sbb
dec
inc
adc
cmp
std
adc
in
pop
rcrb
jbe
and
popa
mov
adc
adc
aaa
shrb
rcrb
jmp
loop
test
popf
sbbl
pop
jne
insb
enter
pop
inc
aam
in
pop
rcr
in
and
out
std
jp
test
mov
inc
adc
cli
and
sbb
sbb
int
and
add
imul
xchg
jnp
into
xchg
in
inc
mov
bound
add
test
rclb
aas
xchg
pop
fs
jo
clc
cs
xor
stos
add
loopne
mov
add
and
xor
insl
xlat
jl
add
cwtl
imul
inc
xor
mov
dec
mov
test
in
add
or
mov
cmp
cmpsb
mov
mov
push
or
shlb
sbb
fs
jp
xchg
sbb
add
dec
pop
clc
iret
dec
ljmp
push
xchg
gs
shrl
in
repnz
xchg
mov
adc
cmp
pop
lock
fnstenv
ret
in
ret
jp
xchg
sbb
jns
pop
mov
sbb
push
mov
dec
jp
mov
sbb
push
addr16
add
sbb
and
in
incl
lea
fldcw
imul
sbb
dec
xor
stos
xchg
out
xchg
mov
or
test
cli
popa
jno
or
xor
fdivs
shlb
jb
adc
lea
sbb
aas
xchg
stc
lods
dec
mov
inc
in
jge
ret
jle
mov
aas
push
sub
adc
outsb
popf
arpl
xor
xor
outsb
push
aad
pop
mov
rclb
cltd
or
fmul
outsl
std
xchg
mov
test
loop
repz
subl
pop
loopne
mov
rcll
mov
inc
mov
in
enter
ret
and
push
and
push
and
aaa
ljmp
adc
xor
adc
mov
mov
jle
pop
fs
jecxz
inc
inc
lcall
mov
mov
and
push
inc
in
orl
negb
pusha
incb
pop
xchg
sub
fcomip
call
dec
sub
rcrl
sub
clc
cwtl
repz
jnp
mov
push
mov
jecxz
mov
pop
mov
hlt
jns
sbb
insb
lret
pop
repnz
mov
fldl2t
je
call
leave
lock
or
adc
out
sarl
mov
idiv
xor
imul
jne
lcall
cmp
sub
or
jnp
mov
xor
fadds
push
dec
int3
stc
aad
or
inc
push
mov
mov
cmc
popf
xor
push
insl
cmp
or
jle
cmc
fcoms
ficompl
popa
xchg
mov
dec
fimull
mov
fstps
mov
sub
mov
daa
cmpsl
aas
fidivs
outsl
adc
int
xchg
or
xchg
xor
and
insl
dec
pop
dec
fistpll
adc
fs
add
mov
mov
add
mov
jmp
add
and
mov
lock
fbstp
imul
dec
mov
or
hlt
ret
adc
dec
mov
dec
push
fnstsw
cmp
mov
cmp
out
in
jl
jg
sbb
push
out
pushf
outsb
xchg
cmp
xchg
mov
sbb
cmp
adc
mov
sbb
push
in
arpl
mov
dec
push
pop
dec
inc
test
fnstcw
add
cmpsb
sub
fstl
arpl
shl
and
in
adcl
push
sti
xchg
pop
aaa
mov
loopne
call
stos
dec
fst
repnz
fcompl
mov
and
test
call
gs
pop
lret
lods
into
xlat
loopne
das
push
mov
lsl
icebp
dec
mov
pop
jmp
or
sti
loope
add
neg
jg
fwait
push
aaa
pop
jb
aas
mov
inc
cmpsl
idivl
negl
ja
shl
cmp
daa
sbb
jmp
jle
mov
pop
or
mov
inc
xchg
repnz
repnz
mov
mov
sahf
inc
mov
sbb
xchg
lods
jne
out
ret
sub
lea
push
icebp
lret
push
bswap
pop
in
or
push
lea
out
negb
adc
js
and
aas
inc
pop
jb
sahf
dec
adc
andl
shll
repz
sahf
sub
sub
je
es
cmp
jbe
incb
icebp
sbb
lcall
test
cmp
js
call
xor
loope
ret
push
add
inc
push
call
xchg
and
cmp
sub
sbb
jmp
pop
lods
lret
dec
jmp
mov
data16
sub
jl
jb
jmp
aaa
mov
imul
mov
push
sbb
insl
pusha
in
cld
fnsave
mov
hlt
in
call
sub
testb
ror
in
xchg
lret
mov
loop
loope
push
mov
je
bound
xchg
popa
dec
dec
arpl
adcb
jl
aad
adc
pop
into
and
mov
jmp
mov
ja
xchg
in
cs
cli
mov
decl
out
mov
sbb
mov
std
insl
xchg
fwait
pushf
out
and
test
mov
cld
das
and
jo
jne
cltd
in
pop
pusha
stos
add
mov
repz
dec
int3
lret
mov
icebp
cld
in
cmp
movsb
outsb
inc
mov
mov
adc
dec
nop
push
test
sbb
adc
test
mov
jno
lods
into
xchg
into
add
and
and
sti
sbbl
pop
or
lods
scas
sub
stc
or
adc
rorl
sbb
xchg
xor
test
sbb
test
hlt
les
stos
stc
mov
jge
jmp
jge
scas
mov
inc
and
ret
mov
call
stos
or
jns
add
jl
xchg
stos
xchg
add
or
jle
loopne
xchg
mov
jecxz
std
icebp
dec
sbb
adc
test
pop
lahf
fnsave
mov
mov
jp,pt
cwtl
xchg
mov
mov
aas
and
sti
jge
cmpsb
xchg
popa
dec
mov
xchg
sbb
mov
jmp
pop
mov
push
jnp
adc
bound
movsl
cmp
out
je
adc
pop
push
lret
adc
icebp
jae
frstor
lds
repnz
push
inc
data16
test
xchg
mov
fcmovnbe
jle
leave
mov
mov
dec
notl
cld
ficoms
test
add
lret
push
fldcw
addl
mov
xor
inc
xchg
sahf
scas
xchg
jb,pt
add
xchg
sbb
adc
call
adc
dec
xor
test
mov
je
mov
cs
xchg
push
ss
ret
xor
push
lock
add
hlt
lret
popf
mov
js
inc
cltd
fmul
jbe
mov
out
lods
mov
xchg
aam
mov
jno
mov
jl
ds
out
into
xlat
mov
cwtl
out
fadds
mov
jno
repz
xor
dec
mov
cmp
mov
lods
push
popf
dec
fwait
sbb
daa
loopne
insb
je
outsb
push
in
int3
jns
gs
imulb
je
jne
adcb
xchg
setno
in
jecxz
xchg
pmaxsw
push
fsts
sbb
adcl
loope
or
pop
jns
inc
or
sbb
pop
push
inc
stos
mov
clc
ljmp
ja
jb
jb
add
cli
inc
or
fld
and
ret
cmp
sbb
dec
jb
mov
inc
loope,pt
icebp
stc
sahf
cmpsl
jno
mov
lcall
js
and
stc
jmp
shl
jo
pop
inc
xchg
mov
iret
cld
js
popf
adc
hlt
aad
jp
inc
leave
pusha
add
and
dec
std
pop
in
xchg
mov
lods
pop
clc
xchg
cmp
cltd
pop
cwtl
pop
movsl
icebp
pop
cmp
pop
movsb
adc
mov
jno
cld
ja
jno
jb
aam
daa
cld
add
aad
xchg
insl
pop
cmp
xor
inc
test
add
aam
xchg
mov
inc
cmpsl
add
sbb
imul
add
push
insl
jle
out
jo
out
lds
xor
ss
and
or
out
mov
push
loop
add
xor
sub
inc
or
xchg
inc
mov
dec
mov
cmpsl
test
out
inc
push
dec
clc
and
jb
mov
adc
repnz
imul
dec
clc
fucomip
mov
ljmp
pop
lahf
out
mov
add
mov
adc
in
adc
mov
ljmp
fsts
sub
xchg
cs
jb
and
inc
std
gs
xchg
cmp
push
in
push
addr16
fistpll
mov
addl
xor
dec
push
xchg
mov
lods
hlt
mov
mov
loop
loopne
jmp
imul
loopne
std
inc
or
jp
jb
pop
cmp
ja
jns
popf
popf
mov
data16
pop
push
dec
mov
mov
dec
ror
add
pop
jmpw
pop
mov
in
jns
or
pop
aaa
loopne
pop
mov
xchg
movsl
xchg
and
dec
imul
int3
add
out
shl
mov
pop
lock
adc
out
inc
push
cli
mov
stos
dec
iret
data16
sbb
jae
xlat
xchg
dec
sub
imul
push
push
xchg
rcll
lods
mov
mov
jbe
push
mov
inc
stc
inc
lcall
mov
insb
ds
xchg
enter
in
pop
dec
adc
and
inc
sbb
and
xor
add
add
movsb
in
push
and
jg
cmpl
test
imul
adc
cmp
inc
push
sti
movsb
push
outsb
fisubl
push
cmp
mov
arpl
clc
arpl
ljmp
inc
mov
cmp
popa
ret
out
xchg
mov
inc
and
jmp
dec
repz
mov
rcr
sub
sbb
daa
sub
out
aam
pop
dec
mov
xchg
shrb
aad
andl
mov
sahf
into
aad
outsl
push
filds
sbb
push
jbe
dec
roll
xchg
mov
and
test
cs
bound
shl
cmp
push
repz
insl
inc
mov
leave
xor
cmp
and
cltd
js
and
push
or
add
mov
rolb
sub
out
xchg
subl
in
iret
cmp
xchg
shr
xchg
jbe
xor
mov
push
aad
cmp
xchg
pop
insb
arpl
xor
cli
inc
and
in
pusha
xlat
out
sarb
leave
fimuls
cwtl
dec
dec
push
push
jne
shll
mov
xchg
adc
outsl
les
jmp
enter
in
xchg
lret
xorb
mov
xor
cltd
pop
rol
mov
push
adc
dec
sub
lods
sbb
repnz
sub
xchg
int3
in
ljmp
add
ja
pop
mov
js
enter
and
push
push
ret
pushf
jp
inc
inc
add
mov
jle
push
mov
sbb
or
sub
aaa
add
cmpsb
mov
mov
sub
in
js
enter
jmp
fnstenv
push
adc
sahf
mov
data16
adc
test
push
jmp
and
or
in
jne
lgs
in
cltd
data16
or
fwait
push
xchg
rorl
ret
cmp
fisttps
inc
push
mov
dec
xchg
fildl
inc
in
int
imul
ds
add
dec
jl
movsl
dec
js
add
lds
leave
push
push
ds
ret
mov
loope
bound
fcomip
test
dec
icebp
xlat
jo
xlat
int
and
scas
insb
out
mov
test
sbb
ret
shl
mov
push
xchg
mov
movsb
cmpsb
mov
jns
cmpsl
psubd
js
into
in
int
push
cmp
xorb
dec
xchg
and
xchg
dec
jl
adc
xchg
je
fidivs
push
fwait
jns
jge
push
cwtl
push
stc
loopne
insl
lods
mov
pushf
xor
mov
inc
pop
add
xor
xchg
hlt
movsb
pop
sbb
imul
adc
pusha
sbb
push
dec
xchg
adc
mov
iret
or
jae
idivb
cli
shrb
mov
mov
aaa
repnz
fcomip
or
fcoms
fidivl
xchg
jae
shll
inc
cwtl
push
jl
sub
clc
fildl
out
inc
data16
dec
jns
xchg
push
leave
out
cmp
add
or
xchg
js
xchg
inc
bound
fdivrp
lea
cmpsl
jnp
mov
cltd
imul
mov
push
popa
sti
and
stos
or
jp,pn
aam
enter
ja
sahf
enter
nop
lds
popf
rcll
jecxz
mov
sbb
pop
pop
dec
add
xchg
pop
imul
dec
repnz
jge
mov
xchg
pop
imul
nop
aam
cwtl
pop
adc
stos
sbb
sbb
adc
in
cmpsb
adc
inc
jge
push
fdivrs
out
gs
rcrl
push
insb
in
pop
fstpt
mov
dec
xchg
mov
sub
sub
loope
inc
xchg
sbb
mov
pop
mov
inc
mov
mov
pusha
outsb
and
mov
imul
in
outsb
fwait
cmpsb
cs
jg
pop
inc
dec
insb
mull
in
mov
cmc
adcl
incl
repz
adc
jbe
pmullw
aam
and
sahf
jae
or
test
in
cmp
cltd
sti
add
std
jne
out
imul
push
inc
test
arpl
call
dec
fadds
insb
clc
sub
sub
pop
mov
jae
push
out
sub
scas
pop
mov
and
fisubl
push
xchg
iret
mov
sub
movsl
hlt
aad
icebp
and
icebp
imul
incb
sahf
mov
xchg
mov
jl
bound
jl
adc
repz
jmp
je
jnp
cltd
add
xchg
test
int3
daa
mov
jae
lods
loope
xchg
test
xchg
sub
loopne
cs
aad
and
lods
sbb
push
jb
lcall
sub
xor
cs
das
pop
fsubs
mov
cmp
sub
shlb
lods
sahf
mov
xchg
xchg
inc
jnp
shll
insl
adc
xchg
aaa
pusha
lret
outsb
add
rcrl
insb
movsl
add
pop
cmpxchg
dec
hlt
push
and
add
add
in
bound
pop
rep
add
inc
inc
pop
jge
and
sub
testl
out
int3
inc
jle
xchg
xor
out
mov
xor
xchg
dec
ja
mov
jmp
sbb
test
mov
daa
and
in
in
mov
nop
jns
aas
ds
dec
mov
mov
pop
push
or
mov
push
sti
mov
mov
xlat
jnp
jnp
gs
int
or
dec
es
or
mov
xchg
mov
jno
xor
cmovbe
hlt
cmp
add
movsb
fmul
and
cltd
jbe
inc
sbb
cmp
mov
xchg
dec
imul
mov
xchg
in
mov
shll
push
mov
ret
jno
xor
ja
out
or
or
add
xchg
popa
add
cmpsl
out
icebp
loopne
cmpb
pop
mov
repnz
sti
stos
pushf
js
fcomip
push
pop
dec
add
push
mov
js
leave
push
ret
ja
out
pop
icebp
mull
jp
mov
pop
fwait
and
cmpl
xchg
add
into
and
push
insb
enter
aam
cmp
jbe
ja
negb
and
fsubr
jp
cmpsl
or
cmp
movsb
lahf
sbb
mov
sub
mov
mov
lahf
inc
in
sti
cmp
js
movb
lcall
mov
dec
dec
das
lcall
adc
lret
cmp
and
mov
jmp
pop
and
xor
xor
push
test
cwtl
lock
in
scas
ljmp
data16
push
call
shl
sbb
cli
xor
loopne
movsb
sbb
ja
fisubrs
pop
and
and
mov
ret
add
ret
adc
fs
pop
aad
lods
loop
jnp
pop
rsqrtps
enter
div
lahf
mov
jle
lds
in
clc
ret
addl
sbb
push
in
fucomp
jl
pushf
aam
push
fistl
jl
mov
sbb
out
scas
push
das
add
mov
fistps
rclb
aaa
xchg
jo
in
int3
dec
push
jecxz
movsl
push
xchg
dec
add
in
lods
arpl
cmpsb
cmp
out
mov
jmp
test
fsubs
pop
lret
loope
mov
into
xchg
and
scas
outsb
lret
fdivrl
push
jno
fnstsw
loop
lds
jno
dec
cmpsb
push
rcr
es
mov
inc
int
data16
rcl
clc
adc
cltd
movsl
lahf
inc
ret
lods
mov
push
out
jle
mov
lret
mov
test
scas
repnz
inc
jle
testb
mov
mov
dec
jg
pop
mov
inc
ss
fcomip
das
mov
pop
mov
inc
adc
ljmp
dec
mov
out
mov
xor
cmp
jno
outsl
and
or
lods
cmpsl
aad
shrb
imul
adc
insb
out
xchg
std
fistps
jbe
into
add
icebp
std
and
inc
iret
fisttps
pop
pop
jne
aam
mov
mov
jae
enter
jp
add
popa
pop
in
insb
shrb
pushf
push
dec
cmp
cmc
cmpsl
or
sti
push
dec
nop
repz
fisubrs
out
shll
cld
data16
and
mov
jb
and
and
fwait
adc
js
add
push
mov
addr16
xchg
jb
sbb
inc
dec
xor
call
cmpsl
pop
mov
jo
call
es
frstor
int
in
cs
cmpsb
push
xchg
ljmp
inc
and
push
inc
les
insl
sbb
push
test
jns
jmp
jno
xorl
mov
lahf
into
jl
movsl
mov
pop
mov
rcrl
in
insb
iret
leave
cwtl
in
inc
out
xchg
pushf
dec
sbb
sub
int
data16
sub
bound
mov
out
jmp
sti
and
add
mov
jecxz
pusha
pop
and
dec
in
or
test
lret
or
push
mov
mov
add
and
inc
lods
xor
dec
sbb
lcall
cwtl
loop
mov
cmp
pop
jl
movq
dec
mov
repnz
xchg
inc
jmp
leave
popa
push
invd
addr16
sbb
cmp
push
inc
mov
adc
adc
mov
sub
out
jnp
icebp
rorl
hlt
ret
adc
subb
ret
push
in
mov
icebp
cmp
addb
mov
sar
stos
mov
mov
dec
jo
or
xor
push
xor
cmc
pop
stos
xor
test
addr16
pop
dec
or
aam
cmp
mov
aad
jnp
out
xchg
mov
adc
cmp
fs
adc
add
mov
dec
shrb
sahf
imul
xchg
sub
xor
jle
fsubrp
aam
fistl
jle
scas
mov
addl
inc
mov
sub
xchg
sub
inc
loopne
mov
push
les
ret
xchg
pushf
sub
test
fsubr
jo
cmpsb
test
ss
mov
das
rep
out
pop
mov
xchg
and
addb
or
fcmovbe
sbb
and
cmp
xchg
cmp
ss
dec
aam
xchg
inc
xchg
cs
xchg
in
popf
pop
lahf
loope
dec
out
addr16
or
in
cmc
jne
pop
push
dec
ds
flds
fisttpll
outsl
dec
repz
adc
push
mov
cltd
xchg
jmp
sbb
ret
andb
add
cmp
int
insb
mov
faddl
and
lahf
test
lahf
inc
popa
fst
pop
ret
popa
jmp
push
cmp
or
decb
pop
je
mov
in
mov
cmp
xor
inc
mov
loop
sahf
lods
mov
or
loope
fldt
hlt
xor
pop
push
jmp
mov
add
mov
xchg
lret
mov
xor
scas
aas
add
xorl
bound
lret
xchg
sub
repz
add
add
lea
mov
inc
pop
fldl
iret
fimuls
cmp
jns
mov
jne
pusha
pop
mov
push
roll
push
xor
xor
clc
lcall
mov
dec
stos
sub
addb
fidivrs
scas
div
lcall
and
xor
in
dec
jb
mov
cmpsb
or
rcr
xor
push
and
pop
dec
push
loop
movsl
fwait
cmp
cwtl
sti
dec
shll
jl
dec
fistps
gs
addr16
pushf
mov
xchg
cli
inc
dec
in
cmpsb
sbb
xchg
add
adc
inc
adc
ljmp
aam
sub
test
enter
stos
xor
inc
jmp
lods
movsl
mov
pop
mov
outsl
out
add
jo
jb
xchg
fcompl
jmp
or
pop
aaa
dec
mov
pop
gs
rcrb
mov
loope
adc
sbb
or
push
mov
daa
lret
dec
mov
nop
mov
nop
data16
inc
jge
jo
out
sbb
cmp
clc
fucomip
or
and
adc
inc
ljmp
mov
pop
mov
mov
xor
push
popf
pushf
addr16
fmuls
push
jnp
add
cmc
sub
stos
test
movsl
xchg
add
cs
adc
xchg
or
ljmp
aam
mov
ret
or
jmp
xchg
mov
int3
pop
push
leave
iret
add
jge
data16
andb
jnp
es
sar
fldl
in
push
jb
test
movsl
mov
stos
out
mov
sub
add
pop
xchg
adcb
in
push
lret
dec
sbb
xchg
xor
sub
cs
mov
aas
popa
inc
adc
outsl
jo
inc
adc
rorl
sub
pop
mov
sub
fidivl
enter
dec
mov
sub
addr16
push
popa
cld
jmp
scas
jmp
loop
inc
mov
insb
and
inc
popf
dec
push
cmp
sub
stos
mov
lahf
mov
out
ret
and
fisttpll
subl
jecxz
shrl
add
icebp
push
stos
dec
iret
lea
scas
jmp
dec
xor
in
insl
in
xchg
push
jg
fadds
add
adc
mov
jecxz
push
or
inc
repz
xchg
loopne
jle
aam
mov
inc
lret
cli
or
jp
inc
fisttpll
dec
or
sbb
test
dec
dec
jb
cmpsb
pop
push
push
sbb
sub
sub
mov
adc
les
enter
lock
sub
cli
test
in
sbb
push
test
adc
lret
jns
mov
sub
sub
lret
push
or
iret
es
fldt
push
movsl
cwtl
std
sub
icebp
inc
sub
mov
int3
popa
js
imul
add
ja
cmp
lret
cltd
xchg
adc
xchg
movsl
repnz
aad
inc
out
lea
inc
jecxz
and
sub
pop
lds
das
ljmp
jmp
pop
sub
ficoml
dec
andl
jmp
pusha
jb
xchg
xchg
sbb
test
jns
jno
jno
add
pop
inc
inc
rorl
or
or
jg
aaa
test
add
adc
inc
pop
jg
add
bound
cmp
adc
loopne
fwait
dec
push
cltd
pop
dec
adc
divb
rcrl
loopne
ss
mov
jb
or
mov
pop
repnz
idivl
outsl
xchg
mov
mov
pop
insl
or
adc
mov
jae
dec
mov
lahf
mov
mov
jg,pn
pop
jl
jbe
mov
add
sar
mull
lods
insb
jg
addr16
jg
mov
int3
mov
int
sti
inc
jecxz
outsl
push
adc
dec
jns
cmp
shrb
loope
dec
dec
xlat
dec
sti
add
or
or
sub
xor
insb
jne
mov
ja
push
cmp
in
in
lcall
loop
lds
dec
cmpsl
pop
push
loop
bound
jle
out
jno
movsb
jne
mov
imul
sub
lcall
out
adcl
push
test
rcl
es
repz
lods
fiaddl
pusha
pusha
iret
cld
push
ret
xchg
add
and
cmp
data16
in
xor
sub
insb
xor
cs
mov
xor
jne
inc
aaa
or
mov
subb
xchg
inc
xchg
mov
mov
scas
xchg
aam
sbb
pop
xchg
pop
inc
inc
cmpsl
aam
xlat
xlat
pop
adc
repz
fisubrl
ljmp
push
in
adc
xchg
lahf
test
add
xor
addr16
lock
inc
jg
outsb
fidivl
or
clc
popa
lcall
pop
bound
xor
dec
jno
ret
push
dec
push
fisubl
dec
mov
in
jae
lods
add
pop
fwait
out
and
pop
mov
push
ja
in
push
ret
mov
ficoms
movsb
dec
ljmp
enter
xor
psubusb
ds
icebp
push
repz
mov
cmp
fwait
enter
xchg
jb
sbb
dec
lods
cs
and
xchg
sbb
xchg
mov
sub
adc
arpl
icebp
js
sbb
mov
and
sbb
in
lods
cmp
xchg
out
rolb
fld
inc
iret
adc
dec
xchg
mov
pop
pushl
adc
jecxz
dec
mov
mov
mov
cmp
cmp
mov
mov
rcrb
xor
mov
mov
xchg
ja
dec
xlat
jmp
and
mov
xchg
jbe
int3
adc
xor
test
loop
cmpsl
fmull
lret
fisubs
pop
cmp
inc
and
repnz
sbb
xchg
test
add
movsb
mov
push
jmp
adc
xchg
xchg
adc
jbe
out
inc
cmc
test
and
roll
notl
sub
mov
bound
jg
test
pop
fidivrs
push
lret
xchg
outsl
xchg
xor
fs
mov
ret
insl
in
lock
enter
popf
pop
dec
fistl
jbe
aam
dec
imul
dec
mov
dec
stos
iret
in
push
out
mov
int3
pop
dec
xchg
fidivrl
std
add
mov
or
and
scas
lret
addr16
fwait
dec
inc
inc
and
push
add
or
je
loope
outsl
xor
int3
push
push
packssdw
dec
call
mov
xchg
mov
push
mov
mov
popf
nop
lret
push
jmp
lcall
ljmp
jge
jle
jb
push
popa
arpl
sbbb
dec
xor
jns
lret
and
rorl
push
cltd
lcall
in
pop
aam
fs
xlat
ret
cwtl
mov
ss
into
sub
jmp
lret
fsubrs
or
jo
fs
cmp
xchg
xchg
shrl
in
outsl
std
sbb
out
dec
stc
dec
popf
mulb
sbb
pop
aad
sub
fcmovbe
push
pop
stc
xchg
jnp
mov
sub
nop
sub
sbb
cmp
dec
stc
and
mull
mov
cltd
js
pop
push
jmp
lods
std
mov
push
add
lcall
inc
xlat
addr16
iret
mov
pushf
sub
lods
sbb
imul
loop
and
xchg
repnz
xor
and
popf
fcoml
push
mov
pushf
aaa
pop
xchg
xchg
and
sbb
arpl
push
pushl
adc
inc
mov
inc
jge
insb
lods
gs
jg
or
dec
jp
and
dec
cmc
insb
inc
nop
loopne
sbb
ret
into
mov
pop
or
push
popf
int3
mov
fucomip
mov
or
inc
push
pop
push
adc
push
xor
rclb
push
cmp
dec
push
nop
ret
xor
jne
stc
add
sbb
and
xor
jns
jae
mov
es
jnp
fldcw
cmc
pop
push
vmread
xchg
cmp
ficompl
ljmp
pusha
test
mov
pop
pop
movsl
jae
int3
mov
xchg
pop
ret
sarl
sbbl
ja
xlat
test
cli
stos
wrmsr
xchg
mov
in
dec
into
sub
ja
rcll
pop
jecxz
or
divl
xor
jo
scas
push
add
inc
cmc
pop
xor
cmp
ret
pushf
push
test
mov
or
xor
mov
sar
jns
sbb
shl
in
repnz
mov
inc
or
in
fpatan
jg
ja
repz
cli
loop
sti
sarb
popf
int3
sub
xchg
or
repnz
int3
in
ret
fmull
cmpsl
nop
cmpsl
cmp
jns
mov
js
mov
dec
ja
in
stos
push
imul
pop
orb
pop
pop
cmpb
pop
lods
sti
cmp
xchg
sub
stc
sbb
xchg
mov
jp
mov
push
inc
xchg
cwtl
and
rcrl
push
adc
fwait
test
mov
and
stos
add
dec
cmc
jl
cwtl
cwtl
pushf
or
loopne
add
loope
stos
push
mov
jae
test
data16
xchg
inc
cltd
pop
inc
mov
shl
shr
mov
adc
hlt
das
mov
aad
lea
inc
pushf
mov
push
mov
cli
mov
cmp
repz
lods
jae
cmp
dec
lods
aas
add
xchg
mov
pop
shl
xlat
push
out
push
call
mov
out
cmc
xchg
and
mov
mov
mov
aam
test
add
call
imul
ljmp
stos
dec
push
inc
sbb
cmp
push
shrb
xor
xchg
rcl
into
mov
fadds
subb
in
fs
mov
xchg
mov
inc
sarl
jae
pop
jp,pn
test
jno
xchg
or
rcr
xchg
popf
gs
into
mov
lret
jp
cmpsl
dec
test
incl
dec
mov
enter
cwtl
jge
adc
jo
lahf
setae
scas
jne
inc
dec
dec
adc
sub
test
fcmovnb
xchg
out
or
inc
and
inc
test
inc
push
inc
sub
sub
sbb
fcmovnu
lea
nop
inc
cmp
adc
in
adc
pushf
iret
pop
xor
inc
mov
scas
ret
clc
fistl
adcb
std
or
fs
adc
jmp
cmpsl
mov
imul
sbbb
mov
and
out
cltd
scas
jo
cltd
sub
add
imul
push
dec
imul
pop
fucomp
pop
in
dec
xchg
cmp
pop
mov
mov
pop
outsl
cmp
inc
mov
jle
fs
mov
fxrstor
or
push
in
imul
int3
xchg
mov
jb
pushf
bound
mov
aad
popf
fldcw
insl
aaa
mov
mov
int3
test
dec
jbe
cltd
xor
cmp
push
or
pop
js
jnp
les
hlt
fs
jnp
mov
adc
jnp
sbb
or
imul
xchg
scas
xchg
cmp
lods
or
xchg
or
shl
data16
jmp
inc
cmpsl
in
lret
das
or
and
push
jne
test
in
movsl
and
stos
mov
mov
jno
xchg
mov
data16
jecxz
std
jp
jmp
pop
sbbl
mov
push
je,pt
scas
insb
popa
inc
jo
and
push
inc
ret
cmc
push
inc
aam
mov
call
xchg
mov
pop
cmpsb
aas
dec
out
pusha
addr16
add
mov
icebp
xor
ja
pusha
test
hlt
rorb
lods
add
or
test
adc
jg
repz
xchg
popa
xor
xchg
sub
mov
xor
lahf
dec
and
or
orl
lock
mov
inc
fdivrl
aam
addb
sub
inc
sbb
int
fwait
lahf
cltd
outsl
loop
icebp
andb
in
cmp
xor
xor
pop
cmp
popa
push
xchg
dec
movsl
sbbb
in
enter
outsl
xchg
lahf
cltd
push
xor
xchg
aam
in
push
daa
cmp
in
cwtl
jns
test
fidivs
jb
fmull
dec
xchg
addb
pop
addr16
int3
and
fsubrl
and
das
mov
jecxz
dec
in
data16
push
cld
hlt
or
dec
pop
mov
out
dec
popa
or
mov
lock
jmp
cld
adc
jmp
lahf
outsl
iret
inc
inc
pop
jns
lods
jb
mov
add
enter
inc
movb
xlat
xchg
adc
sahf
les
push
push
addr16
adc
inc
sub
cmpsb
jle
fidivrs
stos
sub
xor
fimull
test
imul
loope
mov
or
inc
in
xchg
popf
fbstp
lods
daa
pop
rorl
xchg
or
add
cmp
mov
jp,pn
popf
fcomp
int3
dec
sbb
jmp
jno
mov
subb
mov
cld
mov
dec
pop
lock
ljmp
scas
into
rcll
repnz
cmp
jb
adc
iret
jne
cmpsb
mov
mov
jno
addr16
cld
xchg
insb
test
mov
inc
fwait
or
in
cwtl
xchg
fs
mov
dec
pop
ret
sub
jecxz
aam
add
pop
imull
ret
iret
je
icebp
xor
and
es
mov
fstps
push
gs
mov
lret
dec
cs
fs
lods
rorb
sahf
sub
push
xchg
mov
mov
cwtl
sbb
add
add
loop
or
mov
push
jp
xorb
fadds
mov
dec
mov
push
stc
and
cltd
cmpsb
mov
xchg
orl
test
and
xchg
fwait
outsb
inc
ja
push
cld
jae
add
mov
enter
cmp
xchg
hlt
mov
mov
xor
mov
jmp
mov
cld
jnp
test
pop
adc
sub
cld
mov
xchg
push
repnz
daa
add
mov
push
push
push
lcall
add
pop
ds
dec
pop
and
in
add
push
ss
lret
fldln2
jecxz
cltd
dec
push
dec
pop
enter
dec
push
insl
xchg
pop
repnz
mov
cmp
mov
mov
sti
lds
sti
xor
push
adc
in
outsb
dec
pushf
int3
fdivs
out
test
lock
leave
xor
sahf
push
icebp
lods
shlb
out
bound
or
mov
in
fcmovnbe
inc
jbe,pn
cmp
fldenv
mov
sub
insl
je
ljmp
es
sbb
in
cmc
leave
or
pop
jno
iret
movb
xchg
int
adc
sti
imul
push
adc
cmpsb
xchg
mov
rsm
inc
fsubrl
push
pop
push
test
mov
lcall
add
int3
lcall
data16
loopne
stc
shrl
xor
mov
cmc
aad
dec
ja
push
or
mov
mov
sub
stos
jge
and
pop
pop
dec
push
jl
jnp
or
popf
mov
std
pusha
pop
data16
fnclex
pop
popa
in
xchg
aam
sbb
rcrl
and
adc
jno
sbb
fadds
fidivrs
xchg
in
inc
pop
nop
mov
jp
sub
add
fsubrl
sub
pop
mov
mov
push
ja
mov
push
push
int3
and
aad
aam
movsb
mov
sbb
mov
cmp
ficoml
push
mov
jle
sub
scas
mov
call
sar
push
repnz
mov
push
in
int3
lret
repnz
sbb
sbb
jbe
adc
out
fdivrl
popa
leave
imull
stos
pop
xchg
jno
and
push
outsb
sbb
or
mov
pop
mov
outsl
xchg
and
mov
leave
mov
and
and
int3
sub
insb
cmp
push
add
fwait
lcall
mov
jnp
ljmp
aad
rcrl
movsb
pusha
outsl
fistl
mov
hlt
mov
and
movsl
dec
in
pop
insb
jns
or
sbb
sbb
mov
dec
cld
es
mov
dec
iret
mov
loopew
dec
cmp
sbb
push
hlt
jns
test
insl
stos
lock
loop
mov
mov
ret
es
xchg
aaa
daa
add
repz
sbb
sub
incl
mov
adc
aas
and
ljmp
sbb
xor
mov
mov
mov
jno
call
push
cld
push
rclb
in
in
mov
mov
sbb
xor
int
jge
pop
daa
es
mov
sub
imul
pop
cmpsb
mov
ds
imull
xor
add
push
sarb
cmc
daa
out
in
jmp
into
sbb
and
adc
pop
cmc
bound
jmp
xchg
arpl
insb
mov
lret
adc
mov
shlb
ja
adc
jns
jmp
adc
scas
sbb
push
dec
test
sub
sub
xor
pop
lock
adc
mov
xor
imul
mov
negl
cmpsl
push
xchg
aad
sbb
cmp
test
dec
insl
mov
pop
pushf
jnp
inc
insb
insl
bound
aaa
xor
add
sub
sbb
sbb
mul
mov
in
adc
pop
out
rcll
je
dec
dec
clc
pop
ds
fisubl
outsb
jns
jmp
int
inc
fdivs
cmpsl
mov
cli
fmull
xor
mov
xchg
cld
inc
adc
or
mov
or
cld
mov
inc
js
cs
loop
jb
ja
push
out
pop
cmpsb
ret
sub
aad
pop
mov
or
xor
or
jo
mov
inc
call
pop
lret
mov
pushf
cltd
adc
push
adc
ldmxcsr
pop
dec
push
and
ds
xor
js
push
fbld
and
xor
cmp
and
mov
leave
push
wrmsr
sub
rcll
sbb
push
pop
std
xchg
dec
call
stos
mov
sub
testb
shl
and
daa
cmp
add
hlt
lock
xlat
sbb
xorl
test
clc
jecxz
mov
into
sbb
and
aad
out
pop
ret
and
pop
cmp
jns
jg
in
push
push
adc
pop
inc
movsl
pop
fs
addr16
cmovg
filds
fwait
push
pusha
dec
stos
out
cli
in
insl
out
aam
cmc
ds
std
xchg
sub
scas
aaa
lcall
pusha
sbb
sbb
mov
js
test
xor
xchg
out
xor
cmp
jne
push
and
loopne
stos
es
fnstcw
mov
negl
cmpsb
scas
mov
outsl
arpl
cmp
cltd
mov
add
xchg
sub
jne
stos
xor
stos
xchg
or
stc
xchg
mov
adc
andl
push
je
imul
int
mov
adc
popf
fldcw
cmp
adc
scas
int3
push
mov
jns
leave
push
or
mov
andl
pop
stos
pop
jg
lock
stc
push
push
mov
mov
jg
lcall
push
xlat
iret
jg
out
ds
pop
dec
pop
push
xor
xor
in
scas
leave
repnz
imul
movl
ret
mov
cmp
add
inc
test
cmp
popa
cmp
pop
mov
cli
lcall
imul
ja
push
mov
hlt
jb
jle
scas
push
jmp
cmpsb
xchg
cmp
out
cmp
and
bound
fisubl
movsb
std
out
stc
pusha
mov
icebp
sbb
sbb
idivl
out
cmc
dec
shrd
sbb
inc
je
pushl
pushf
mov
nop
dec
pop
movsl
or
sub
pop
fdivs
mov
sbb
push
in
fstp
jns
gs
addb
adc
cwtl
sub
cli
cmp
and
or
in
andb
fmul
or
and
in
ss
test
aas
adc
or
cmpsl
test
dec
leave
or
sub
imul
sub
xor
jle
inc
lea
stc
repz
inc
xchg
sti
lods
jns
aaa
pushf
out
adc
shrl
cli
cmp
cld
mov
mov
push
lea
mov
jle
es
mov
mov
movsb
fsubr
lea
std
hlt
scas
or
xchg
cli
lock
mov
xor
dec
cmpsl
gs
pop
cmpsl
in
jle
jns
cmp
in
test
push
int3
out
cmpsl
scas
add
sub
jle
popf
jnp
sbbl
jae
ret
cmp
mov
je,pt
pop
loope
ficoml
test
cs
jecxz
dec
jae
adc
xor
clc
popf
out
ret
scas
lcall
test
push
test
jge
lods
loope
jge
test
clc
xchg
xor
cmp
mov
jno
cmp
ds
mov
push
inc
imul
pop
mov
cmc
inc
fnstcw
sti
in
scas
xchg
stc
mov
iret
push
icebp
movsb
jno
mov
pop
xchg
mov
aaa
rcl
xlat
jb
xorl
cld
jb
enter
insl
dec
xchg
and
je
gs
push
ret
shlb
pop
rcll
cmp
in
repnz
lahf
cmp
jbe
and
out
inc
mov
negb
std
sub
repnz
adc
push
mov
mov
inc
adc
lret
pop
in
outsb
mov
jp
faddp
dec
push
sub
mov
cmc
or
xlat
pop
imul
inc
jb
or
scas
sbb
jnp
pop
jne
jb
or
jo
jmp
jmp
mov
add
inc
inc
ss
jno
test
and
jl
xchg
mov
pop
stos
cmp
mov
inc
inc
clc
outsl
pop
je
or
lret
dec
mov
fstpt
mov
xor
mov
imul
adc
repz
add
subl
sbb
data16
sti
test
dec
jle
xlat
imul
in
mov
lock
jmp
lods
xchg
scas
movsl
lods
add
pop
or
or
pop
fstl
addl
cmp
and
pop
ss
xor
rorb
sbb
jl
cmp
ljmp
mov
hlt
scas
add
lods
push
mov
cmc
pop
dec
jmp
dec
xchg
or
ret
adc
cltd
push
fwait
sub
lret
mov
jne
pusha
in
mov
pop
movsl
std
fnstcw
sub
ffreep
and
pop
loop
jmp
lcall
bound
push
sbb
ljmp
jns
xstore-rng
cmpsl
stos
or
inc
mov
call
push
ja
notb
xor
addr16
lea
adc
xchg
add
popf
out
dec
mov
lret
lods
adc
out
adc
and
xor
les
leave
shll
outsb
xchg
pop
in
bound
mov
call
pop
dec
movsb
adc
push
dec
mov
clc
cltd
stc
mov
lret
movsb
cltd
cld
lds
lock
fisttpll
js
push
push
sub
add
mov
cmp
lods
cmp
add
lods
loopne
mov
aas
mov
jns
daa
clc
dec
jae
sub
cltd
add
sub
aaa
add
orb
jmp
jmp
fimull
loopne,pt
adc
add
push
or
push
mov
pop
xlat
in
mov
scas
jne
bound
jl
jecxz
loopne
aam
fldl
adc
or
mov
or
xchg
loopne
jnp
roll
scas
xchg
push
mov
inc
cmp
imul
add
iret
and
fs
hlt
sbb
add
push
orb
testl
push
cmp
test
repnz
std
orb
cwtl
ret
inc
pop
ds
bound
lods
filds
in
xchg
dec
lock
and
add
lea
cmp
das
adcb
mov
movups
fadds
mov
int3
mov
clc
mov
fildll
sbb
gs
mov
jp
push
xor
sbb
mov
pop
stos
inc
jnp
mov
xor
cmp
test
mov
iret
sub
or
push
sbb
cwtl
push
inc
sbb
loop
clc
loope
es
out
pushf
add
push
shlb
sarb
mov
xor
xlat
pop
adc
andb
fimuls
pop
sbb
ljmp
jge
in
hlt
or
sbb
xchg
add
movsl
mov
lods
sbb
or
push
jle
in
in
mov
push
sbb
fisttpll
hlt
jae
hlt
jns
outsb
imul
lds
mov
push
sub
mov
xor
scas
push
pop
sbb
add
pop
pop
sbb
imul
cld
lcall
int3
xor
imul
push
int3
std
lret
dec
xchg
out
mov
push
push
jmp
fcoms
jnp
cld
push
dec
jl
aad
adc
insb
jp
pop
inc
lock
sub
xchg
fcmove
xor
jp
xor
push
mov
test
test
stos
mov
sub
xor
nop
imulb
mov
test
or
sub
iret
pushf
cli
shr
or
cmp
xor
shl
loop
addr16
jns
add
cld
xchg
pop
push
rclb
stos
xchg
xlat
or
enter
cwtl
xchg
mov
not
cmp
mov
cs
loopne
and
enter
inc
cmp
and
cld
pusha
in
push
cltd
inc
ret
aam
push
mov
sbb
int3
out
aaa
popa
icebp
xor
mov
daa
lods
sbb
out
mov
push
cmp
cs
jbe
scas
or
mov
push
cld
mov
dec
fists
outsb
int3
or
xorb
mov
or
aam
inc
cltd
stc
cmpsb
popf
and
jo
stos
sub
adc
pushf
imul
iret
das
pop
mov
imul
jae
int3
stos
icebp
in
fildl
mov
je
gs
out
sub
mov
mov
ret
xor
daa
mov
or
cs
pushf
js
lret
sahf
cmpsb
dec
mov
xor
jns
ret
popa
or
movb
adc
gs
add
xchg
test
push
es
mov
rcll
xor
mov
mov
loope
mov
adc
xchg
inc
push
out
mov
gs
adc
lret
subl
jecxz
push
sti
adc
xchg
sub
pop
mov
fwait
jl
push
movsl
sub
stos
mov
and
dec
or
lcall
jnp
outsl
aas
push
loopne
jne
mov
mov
push
dec
xor
sbb
sti
sub
xchg
xchg
pop
jbe
mov
sub
out
mov
addb
cmp
lret
stos
cs
pushf
push
mov
push
outsb
pop
scas
loop
pushf
mov
hlt
cld
lret
xlat
stc
adc
daa
popf
push
loop
cmpl
or
jnp
or
pushf
arpl
pop
mov
push
dec
add
xor
mov
dec
push
add
movsb
cltd
push
jg
inc
and
cs
inc
jbe
mov
dec
mov
inc
sarl
push
pushf
dec
push
and
js
mov
mov
or
sbb
pop
mov
and
test
outsb
jb
les
imul
adc
call
xchg
test
ret
and
pop
xor
xchg
mov
xor
popf
stc
sti
push
mov
or
call
pusha
pop
push
cmc
or
rcrb
and
scas
fwait
pop
clc
inc
adc
xchg
adc
add
pop
push
ljmp
pop
mov
mov
jno
sub
inc
outsb
add
int
or
out
mov
in
dec
or
call
adc
mov
testl
jl
mov
test
mov
sti
ljmp
mov
daa
int3
push
push
mov
and
sbb
pusha
jns
cmp
fistps
mov
sbbl
sub
or
add
fcmovu
inc
add
sub
lods
xor
mov
mov
loope
and
mov
xor
cwtl
lods
mov
push
fsubs
push
pop
xor
test
test
dec
js
ret
sub
adc
int
xchg
adc
imul
outsl
out
and
rcrl
jae
push
js
mov
mov
loopne
cmp
rcrl
push
rcrl
aad
arpl
dec
cmp
and
aas
xor
adc
or
into
loopne
decl
dec
shrb
inc
mov
stc
icebp
iret
repz
inc
out
cmp
mov
fbld
pop
bnd
out
pushf
mov
jbe
push
lods
lahf
stc
pop
xchg
cmc
clc
cmp
cwtl
test
add
icebp
cmp
xor
sti
cmpsl
push
sar
cmp
mov
fisubl
dec
jecxz
add
movsl
mov
mov
cmp
stos
or
stos
jmp
faddl
popa
mov
movsb
in
pop
mov
push
and
xchg
fldcw
jns
add
push
arpl
notb
cs
stc
xchg
stos
sbb
cld
mov
xchg
test
dec
test
lds
push
xor
mov
shll
sti
cmp
push
jno
add
and
and
dec
cmp
enter
or
rcrb
mov
bound
add
mov
sub
adc
mov
imulb
loope
rep
lahf
dec
mov
fs
cmp
mov
or
mov
inc
hlt
jae
pushf
and
sub
push
fwait
mov
pop
push
pop
or
repnz
sbb
jp
in
cmp
mov
push
mov
scas
push
in
rcll
cli
xor
pop
push
inc
push
pushf
daa
not
scas
jp
dec
add
pop
fisubrl
mov
mov
mov
pop
xchg
xor
sub
jmp
dec
and
pop
ss
pop
out
arpl
xor
jne
jp
pop
popf
and
in
jl
test
mov
xor
test
cwtl
cmp
sti
call
push
mov
scas
mov
adc
and
data16
daa
imul
sub
lods
popf
test
pop
std
shrl
push
mov
outsl
ret
mov
stos
and
add
adc
out
sarb
or
movsb
lea
leave
addr16
add
push
call
jno
jae
loopne
sbb
out
push
add
jne
push
sub
imull
jae
add
mov
fisubrs
adc
inc
rcrl
sbb
ja
mov
sub
or
mov
sub
push
lcall
mov
add
or
sbb
push
mov
pop
repnz
push
sarb
and
lret
dec
mov
sbb
mov
out
mov
xchg
cmpsb
inc
dec
adc
push
mov
sar
pop
incl
scas
jno
xor
icebp
in
ja,pt
int
pop
and
call
or
xor
xlat
cmp
cmp
sbb
cld
cld
sbb
xor
cwtl
daa
movsl
fldt
pushf
into
sti
mov
je
jne
test
cmp
and
enter
cld
jge
sarb
movsl
adc
or
add
xor
loope
loopne
or
mov
push
ds
sbb
add
bound
imul
and
rorl
xchg
stos
xlat
dec
sbb
cmp
fwait
scas
lods
cmp
cmp
orl
popf
pop
mov
idivl
sbb
cmp
dec
inc
pop
inc
mov
ljmp
mov
sub
hlt
in
cltd
jle
je
mov
or
cltd
stos
pop
sub
xorb
push
loop
stos
jae
shll
push
jecxz
jns
xor
xchg
add
aad
data16
sbb
sub
jno
mov
icebp
mov
sbb
sub
fisttps
fs
mov
shr
gs
fs
insl
inc
sahf
lea
imul
sub
cmpsl
and
repz
into
add
xchg
push
ds
lods
mov
aam
and
rcl
add
mov
adc
stos
adc
daa
and
movb
dec
push
sarb
out
mov
dec
sar
addl
push
ljmp
ss
xchg
inc
lahf
or
sbb
lcall
testb
popa
xor
je
jnp
or
insb
lock
push
jnp
adc
das
lcall
movsl
lock
mov
push
and
pop
daa
jnp
scas
out
repnz
push
arpl
cmp
xor
int3
push
pop
mov
mov
insb
pop
xchg
mov
addr16
repnz
and
gs
arpl
push
lds
mov
test
and
loop
jge
movsl
loopne
inc
jmp
fistl
inc
mov
fstp
xor
dec
sbb
cs
movsl
loop
out
or
das
jecxz
jg
outsb
scas
fwait
mov
pushf
fsubl
or
int
ja
es
nop
adc
cli
and
jle
jae
ja
mov
js
mov
mov
mov
push
lods
xchg
dec
scas
daa
jge
add
hlt
jae
mov
adc
push
jnp
lods
mov
lret
aas
cmp
jg
xchg
ret
add
loope
test
ljmp
push
addr16
arpl
out
xor
movsl
xchg
pop
mov
ficomps
lods
xchg
mov
and
and
repnz
mov
jl
iret
push
jb
and
cli
mov
sbb
jne
xchg
dec
jne
or
mov
jmp
inc
add
in
adc
shll
inc
cmpsb
jb
lret
jg
xchg
mov
pop
or
stos
push
into
mov
push
adc
jp
dec
xchg
and
mov
xchg
sub
mov
jle
push
mov
jns
lcall
sahf
loopne
lds
push
cld
lds
inc
sub
push
lods
stos
shlb
das
into
pop
adc
movsl
xchg
pop
add
adc
fsubrl
inc
mov
cmpsl
sbb
mov
push
push
xor
sub
aad
fs
push
push
add
push
or
test
scas
je
pop
ds
roll
fidivs
out
xchg
push
cmpsb
dec
adc
cmp
add
jp
pop
jae
xchg
jg
mov
imull
inc
test
mov
jbe
out
aas
lret
xlat
cltd
cmpsb
or
add
into
out
ss
sbb
addb
dec
leave
cmp
aaa
punpcklwd
movsl
insb
gs
xchg
mov
inc
xor
and
sub
jne
or
inc
pushf
lret
test
push
sti
mov
in
dec
shr
loope
and
and
lret
lahf
ljmp
and
cmpsl
xchg
cmp
xor
push
les
je
mov
add
mov
addr16
add
test
fwait
add
xchg
mov
shl
sbb
test
jne
shl
push
loope
sbb
cmp
popa
roll
xchg
jmp
mov
mov
mov
das
stos
stc
sahf
das
push
seta
mov
test
jne
or
mulb
dec
jmp
rorl
movsl
pop
cmp
addl
pop
popa
cmp
inc
push
push
in
xchg
sbb
inc
out
inc
push
xlat
cmp
xlat
cld
es
in
jl
pushf
xor
fldenv
gs
int
push
push
cli
jle
sub
sbb
hlt
push
or
dec
dec
mov
cmp
aam
shll
out
add
je
mov
in
in
popw
sub
insl
and
repz
aas
jno
ret
rcll
sbb
aas
mov
in
xor
mov
mov
push
cmpb
and
push
dec
xlat
mov
shl
out
inc
mov
xchg
inc
loopne
sbb
mov
lcall
jae
out
push
arpl
lods
mov
sub
fwait
lea
sub
jle
fists
cmpsl
leave
in
dec
xor
push
xor
push
int3
mov
jbe
mov
cmpsb
roll
gs
daa
mov
scas
cmpsb
cmp
lods
jge
mov
sub
push
rcll
fdivrs
jns
mov
imul
xchg
popl
movsl
ljmp
push
imulb
aad
inc
fisttps
xor
jae
in
loope
fsubr
les
xlat
cmp
inc
ror
iret
sub
mov
pop
pop
fs
and
sbb
xor
pop
pop
and
adc
cld
mov
popf
dec
sbb
push
add
cwtl
pop
or
jmp
mov
adc
sub
arpl
int
and
mov
pop
test
xchg
mov
imul
in
outsb
mov
lods
ficoms
push
pusha
into
gs
inc
cltd
test
sub
lea
out
inc
rcl
and
movsb
imul
add
dec
xlat
push
jmp
jo
in
sub
xchg
xchg
icebp
in
sbb
ffree
daa
cld
das
fldt
jns
out
jmp
dec
inc
mov
cmpsl
sub
xchg
dec
jae
lea
push
adc
insl
into
adc
adc
scas
inc
dec
mov
cmpl
int
cld
mov
nop
mov
mov
sbb
or
pop
out
popa
or
outsb
mov
add
mov
daa
inc
repnz
xor
sahf
push
rolb
sbb
fsubl
xchg
pushf
xchg
mulps
loopne
daa
insb
inc
test
fstpt
sub
cmpb
push
ds
pusha
sbb
xor
lahf
dec
es
mov
pop
gs
cmpsl
sbb
sbb
pushf
and
aad
lods
outsb
dec
mov
pop
jmp
inc
fwait
mov
loope
aam
imull
xor
pop
or
stos
pop
sbb
movsl
pop
xor
mov
pop
dec
repz
xor
mov
mov
fdivrs
adc
shlb
add
mov
ret
mov
out
cmpsb
add
out
in
insb
push
stos
lds
xchg
test
mov
xor
hlt
cmc
jnp
and
dec
ret
sbb
sbb
lods
fildl
sub
push
mov
enter
es
lret
loop
leave
add
pop
loope
xor
stc
add
pusha
mov
inc
hlt
inc
cs
mov
sbb
das
xor
je
jle
out
xchg
stc
and
or
lret
fstpt
sub
cmpsl
xor
pop
push
mov
int
inc
inc
adc
insb
mov
ljmp
adc
inc
or
clc
ficompl
shr
enter
frstor
js
loopew
dec
xchg
addr16
sub
test
outsb
leave
outsb
lods
push
fs
ret
pop
faddl
test
clc
cmp
push
je
sbb
adc
push
hlt
loop
aad
imul
insl
xchg
divb
cmpsl
jmp
mov
scas
pop
pop
orb
das
fildll
imul
gs
cmpsl
arpl
pusha
dec
out
or
mov
jns
xchg
aas
inc
add
in
push
mov
ficompl
push
enter
mov
xor
sub
pop
xor
pop
push
xor
pushf
inc
stos
jnp
cltd
mov
xor
inc
add
adc
insl
pop
in
jno
inc
sub
jae
sahf
cmc
dec
aad
pusha
adc
in
jg
or
aam
imul
out
xchg
lods
push
rcr
mov
add
push
jp
mov
push
xchg
xor
adc
out
push
daa
sbb
shufps
repz
sub
dec
fs
es
mov
xchg
cwtl
sarb
cmp
jbe
js
xchg
push
icebp
fwait
pop
lds
sarl
adc
add
pop
sbb
cmpsl
pop
cmp
fs
dec
ucomiss
pop
xor
sbb
xchg
scas
mov
dec
leave
test
adc
hlt
mov
sarb
inc
lcallw
ja
sbb
push
xchg
negl
jp
popa
popa
out
sti
cmpb
adc
cmp
int3
addb
sbb
adc
xlat
pop
dec
mov
jle
mov
sub
data16
aaa
jge
es
sti
sbb
lock
lock
test
lods
sub
xchg
add
test
push
push
outsl
stos
push
mov
or
fwait
out
arpl
jb
mov
jno
dec
daa
mov
mov
push
icebp
std
imul
add
adc
in
cmp
cmp
dec
or
push
cltd
pop
test
cwtl
sub
lret
mov
cmpsl
adc
es
lea
popa
push
mov
loope
cmp
popa
or
mov
sbb
add
mov
dec
jns
jo
or
xor
mov
in
jp
push
movb
cs
inc
mov
mov
mov
dec
rolb
leave
dec
out
out
cltd
push
imul
and
and
inc
or
jae
mov
cmp
jp
incb
dec
sbb
cmp
bound
mov
scas
or
add
fildl
cmp
mov
and
pop
movsb
popa
cmp
cmpsb
xlat
xchg
dec
jne
loopne
bound
xchg
sbb
scas
test
out
es
push
xchg
push
clc
mov
push
stos
repnz
notl
test
pop
dec
call
mov
sub
jg
or
mov
xchg
or
xchg
ret
popf
and
movsl
lods
gs
push
add
scas
jg
jbe
lock
adc
add
push
xchg
shr
stos
pop
and
hlt
xchg
adc
enter
pop
hlt
mov
popl
push
lret
xchg
xchg
fildl
mov
push
filds
add
cltd
xor
mov
or
add
sbb
ja
ja
inc
fcoms
gs
shrl
cmp
and
push
or
xchg
es
inc
push
or
pop
dec
stc
dec
rorl
xchg
lret
mov
xchg
xchg
cmpl
movsb
sub
cli
les
femms
xchg
pop
fidivl
lahf
sub
scas
push
mov
jmp
sbb
pop
aas
or
lea
xlat
jbe
xchg
lcall
fnstenv
out
xchg
adc
mov
jge
lcall
in
add
out
and
pop
jns
loope
sbb
jg
add
mov
jnp
mov
xor
arpl
pushf
cmp
push
dec
scas
add
jge
fisubrs
arpl
sub
ss
inc
cmpsl
lcall
out
cmp
jecxz
xchg
lea
or
and
and
mov
int3
insb
cmp
mov
roll
out
xor
fildll
cmp
pop
test
insb
jb
jle
push
cmp
pop
dec
inc
mov
mov
inc
shll
mov
js
fiadds
lds
sub
sub
in
add
mov
xchg
roll
pop
add
jecxz
xor
pop
retw
scas
daa
scas
nop
push
hlt
stc
pop
mov
cmc
pop
aaa
xchg
inc
pop
in
mov
imul
shl
adc
and
es
cmc
mov
push
jno
popf
lret
test
adc
std
mov
test
jae
and
push
test
out
cs
repz
cmpsb
inc
cmc
fcompl
xor
jo
jb
xor
sub
iret
stos
rclb
add
mov
lret
testl
bound
cmp
and
add
push
leave
les
sub
jo
test
mov
inc
cld
int
or
or
ret
dec
fidivs
cltd
into
and
and
cmc
cmp
sarb
cmpsl
insl
scas
jl
jl
mov
cmp
xchg
cmp
sub
inc
stc
push
jno
dec
and
mov
push
ret
cmp
ffreep
in
mov
mov
and
jl
mov
jo
out
bnd
pop
hlt
dec
icebp
xor
in
ja
xor
fildl
dec
xlat
and
scas
pop
movsl
jp
ss
lret
clc
add
rorl
movaps
sbb
lea
test
mov
mov
out
lods
and
sub
push
mov
push
lcall
in
dec
hlt
pop
mov
mov
inc
and
mov
mov
mov
mov
or
out
fsubl
mov
popa
sbb
push
inc
xor
data16
sbb
adcl
in
cmp
lock
pop
push
sbb
psubsb
es
push
push
push
test
jbe
jo
cmpsl
test
popf
adcb
mov
adc
enter
out
repz
sbb
pop
or
pop
iret
or
cs
sahf
and
sbb
mov
ljmp
insb
rclb
mov
das
adcb
popf
and
mov
pop
ja
ret
sbb
cmp
aaa
nop
or
inc
push
mov
rorl
or
jg
cmp
add
fiaddl
xor
aam
pushf
mov
and
call
adc
xor
scas
jg
cmpsl
and
popa
jl
push
stos
movsb
xchg
mov
or
scas
incb
push
ljmp
push
insl
cmp
out
xchg
inc
or
test
cs
test
push
ret
imul
mov
xor
cmp
dec
jl
add
add
xchg
lods
mov
xchg
pop
ja
rclb
jle
jecxz
int
setle
das
jb
add
xchg
dec
sbbb
enter
xchg
xor
mov
push
js
push
mov
fimull
ljmp
push
iret
adc
popa
pop
int3
mov
xchg
push
sub
push
adc
mov
push
pop
aam
xor
daa
das
jp
mov
jb,pn
sub
leave
jle
pop
bound
sub
xor
pop
jno
push
pusha
insb
out
cmpsb
mov
inc
loopne
jno
into
mov
icebp
pop
ret
test
lcall
cmpsl
xor
dec
movsl
add
out
leave
loop
adc
test
fsubr
sbb
enter
xchg
ljmp
push
imulb
jae
sbb
mov
mov
repz
add
xor
dec
scas
add
push
hlt
aad
dec
lret
inc
sbb
pop
jecxz
jae
leave
dec
pushl
hlt
movsl
andb
adc
dec
pushf
push
fcoml
icebp
sbb
mov
xlat
cltd
xor
adc
gs
mov
cltd
fldl
iret
lret
into
shll
out
loope
dec
jmp
test
insb
cli
jae
insb
fdivrl
mov
or
mov
adc
xchg
xor
and
or
or
shl
in
sbb
inc
xor
mov
xchg
pop
repnz
add
mov
xchg
lods
push
mov
lahf
sub
stc
inc
stc
mov
loope
repnz
or
push
add
data16
mov
out
push
je
es
mov
adc
int
fcom
fisttpll
int
cli
xchg
js
fmulp
mov
daa
ds
cmp
mov
repnz
sub
std
stos
xor
test
mov
adc
xchg
popf
cmpl
adc
shr
out
xchg
cmp
add
adc
sub
subb
push
dec
jecxz
pop
inc
pop
add
cmpsb
mov
cmpb
pusha
sti
pop
or
cmpsb
aas
push
orb
sub
mov
adc
mov
mov
repnz
jge,pt
popf
cmp
lods
pop
add
push
cld
xchg
icebp
aam
rcll
push
outsb
pop
pop
dec
add
adc
mov
fs
mov
ficomps
pop
and
mov
xchg
daa
ds
cwtl
dec
pop
shl
pop
dec
push
pop
lret
sub
mov
mov
jl
fstpt
adc
orl
je
nop
xchg
xor
andl
jg
mov
pop
mov
push
mov
jmp
mov
aad
mov
or
div
xor
push
fadd
out
mov
je
jns
xor
pop
in
push
data16
fnstcw
cmp
sahf
insb
xlat
aaa
push
xchg
jne
sbb
xchg
stc
jmp
je
push
mulb
sub
les
push
pop
aad
loopne
fmul
aas
fisubs
lds
cmp
inc
mov
cmp
outsb
scas
loope
inc
jecxz
jb
or
sbb
loopne
mov
rorb
mov
andl
leave
mov
movsb
lods
jae
pop
xor
push
testl
sub
sbbb
setbe
outsb
and
inc
jbe
fisttps
cmp
mov
sub
out
shll
ficoms
jb
push
xchg
enter
iret
dec
divb
push
cmp
sbb
loopne
shlb
out
lods
imul
push
mov
lahf
addr16
xor
or
or
xlat
out
loopne
adc
add
fadds
cwtl
sbb
xlat
xor
xchg
pop
adc
mov
xor
jns
adc
test
xchg
or
sub
inc
xlat
dec
stos
fdivrl
ret
fcomip
dec
and
je
add
add
stos
xor
mov
push
jno
or
rcl
fucomip
jg
adc
imul
cli
xchg
cmp
add
mov
rcr
aas
adc
xchg
xchg
cmp
outsl
sub
xchg
stos
icebp
cltd
push
orl
das
push
mov
adc
mov
lret
sbb
pop
jb
mov
popf
mov
cld
shrl
jecxz
fwait
cmc
mov
fsubl
decl
push
outsb
push
out
pop
mov
sti
jecxz
loope
ljmp
add
mov
jo
inc
orl
push
or
cmp
ja
sub
pop
push
xchg
mov
cmc
or
rcrb
cmp
negl
in
adc
xchg
cmp
fcomi
pop
nop
std
clc
int
in
mov
jp
int3
repnz
mov
jns
jns
xor
fidivrs
sub
sub
adc
or
icebp
arpl
sbb
xchg
mov
scas
mov
into
dec
data16
ja
nop
fwait
decb
sbbb
call
cmp
push
mov
int3
movsl
mov
push
sub
xchg
mov
inc
loop
or
js
jne
push
xor
dec
in
push
popa
push
push
lcall
mov
lret
popf
test
stc
jl
dec
mov
push
sub
adc
dec
or
lret
push
jge
inc
notb
lret
es
mov
mov
add
mull
mov
add
mov
cmpsb
imul
push
in
mov
fwait
std
lahf
xchg
cmc
test
xor
test
xchg
das
pop
jns
xchg
shl
add
fmuls
arpl
popl
lahf
inc
aam
mov
js
insl
inc
es
lret
rorl
inc
ret
jg
jnp
outsb
stos
std
arpl
std
movsl
jo
je
push
jmp
out
mov
mov
jns
jmp
mov
xchg
fbstp
call
test
mov
sarl
sahf
sbb
inc
int3
sbb
in
mov
pop
outsb
jbe
mov
lret
adc
sub
mov
roll
cmp
lahf
jo
cld
je
push
lahf
in
jge
aaa
xchg
in
cs
imull
sub
rolb
mov
xchg
lods
cmpsl
rolb
and
push
xor
fldl
arpl
shlb
pop
rol
xor
sub
push
xchg
add
lret
testl
add
sub
adc
xorl
stos
aas
out
mov
push
cmp
movsl
mov
cld
ja
cli
inc
stc
sbb
in
mov
arpl
pusha
loopne
lds
jmp
xchg
push
cmp
push
faddp
jg
sub
mov
hlt
arpl
xor
rorb
push
outsb
movsbl
lahf
xchg
gs
sub
cli
sub
or
xor
out
mov
call
aad
loope
push
pop
nop
es
sbb
cmp
cmp
and
daa
mov
cltd
addr16
rcll
ret
xchg
bound
shl
or
insl
in
lahf
jmp
bound
ds
idivl
insb
xchg
inc
add
jne
insl
cli
dec
data16
mull
mov
or
in
pusha
ss
cltd
gs
adc
test
int3
pop
jae
xor
ljmp
out
mov
push
sti
mov
pop
mov
xor
in
dec
cmc
cmp
cpuid
fadds
jb
inc
loopne
jle
push
loop
stos
das
insl
pop
or
mov
adc
xor
jns
jae
data16
or
cld
fadd
push
je
push
inc
cmp
inc
or
fs
lods
sbb
js
cmovb
mov
imul
mov
xchg
jbe
mov
ljmp
cmp
inc
shld
pop
jmp
xchg
aam
push
repz
xor
push
imul
cmp
test
daa
outsb
fs
lods
pop
pushf
out
jl
mov
popf
call
nop
loope
push
test
jnp
pusha
mov
sub
mov
mov
sbb
lea
fbstp
aam
mov
jae
jecxz
sar
push
call
repnz
repz
push
xor
inc
xchg
cmp
jo
cmp
test
test
stc
push
aas
inc
ss
pop
jne
push
imul
mov
pop
fwait
lods
mov
cmp
push
pop
fisttpl
fwait
orl
mov
sub
jl
aad
or
mov
pop
loopne
fdivrs
imul
and
movsb
sub
aaa
jae
into
xchg
cmp
and
jnp
mov
pop
mov
sbb
ret
scas
pop
push
lcall
enter
jo
loope
mull
and
fs
and
stos
xorl
mov
mov
std
out
data16
xorb
gs
and
sbb
mov
andb
push
push
mov
jg
mov
xchg
lock
cmpsl
cmp
pop
mov
lret
mov
in
daa
xor
xlat
add
fsts
mov
sub
aad
nop
mov
jp
rcrb
adc
std
imul
or
xchg
cmp
xor
cmp
les
outsl
dec
aaa
mov
cmpsb
cmp
aam
mov
dec
cmp
daa
outsl
and
aad
int
es
sbb
rolb
lret
es
ss
or
sahf
and
sti
ret
rorl
mov
xchg
sbb
xor
aas
int
faddl
repnz
orb
lock
dec
and
add
adc
dec
pop
add
fdivl
and
inc
mov
dec
xchg
xor
pop
mov
jle
cltd
mov
lret
fidivrs
aam
cwtl
ss
push
sti
push
push
test
nop
dec
mov
test
add
mov
and
add
mov
jnp
rcll
xchg
pop
enter
xor
adc
hlt
pop
loope,pt
inc
pop
and
subb
pop
push
mov
mov
sahf
cld
data16
mov
jb
arpl
adc
add
pop
incl
fwait
adc
test
cmp
je
test
jae
aas
and
sbb
sub
jmp
bound
or
xor
leave
nop
in
and
stos
mov
stos
arpl
push
hlt
nop
or
add
push
sbb
aaa
addr16
and
and
inc
mov
mov
jge
and
ret
pop
pop
sti
mov
sahf
dec
movsl
in
cmpsl
add
mov
stc
cmpsl
str
ljmp
add
lock
adc
adc
jg
arpl
jmp
inc
aaa
pushf
sti
lods
aad
shrl
fimuls
js
sub
add
repnz
and
mov
loope
dec
fstps
cmp
nop
repnz
into
fstl
adc
and
push
or
stos
cmp
ja
fwait
movsb
push
call
xchg
xlat
int
mov
pop
bound
aam
pop
mov
inc
movsb
rcrl
pop
fbld
stc
mov
mov
in
push
loopne
repnz
inc
nop
int3
pop
lds
dec
jb
pop
jb
mov
jp
in
or
xchg
and
push
mov
fsubl
out
dec
lods
mov
shr
jle
pop
xchg
inc
xor
sbb
cmp
loop
outsl
mov
test
aam
pop
cmp
rol
fsubrl
in
cmp
pop
push
jbe
cmpsb
xorl
in
clc
or
stc
xchg
sub
jb
add
mov
jnp
ret
jno
into
cmp
sbb
lret
mov
mov
movsl
movsl
or
xlat
add
push
dec
jbe
lods
dec
adc
push
in
mov
cmp
orb
mov
sar
fiaddl
test
add
pop
imul
sbb
lcall
iret
aad
hlt
mov
mov
aaa
push
sbb
popf
mov
outsl
xlat
clc
jns
inc
rcrl
fisttpll
xchg
cmpsb
es
cld
mov
pmullw
incl
inc
cld
xchg
jg
mov
lahf
inc
stc
outsl
xchg
mov
pop
mov
cmp
mov
xchg
dec
fidivrs
decl
pop
pop
jp
scas
and
adc
mov
loope
fisubs
jle
imul
lods
popa
cmp
leave
xlat
mov
dec
mov
dec
and
lcall
pop
push
dec
sub
jmp
aad
pop
mov
xlat
out
out
scas
mov
xchg
and
sub
loope
aam
sub
movd
lock
mov
cltd
push
aaa
sti
dec
sti
repz
jl
cltd
dec
aam
cmpl
xlat
sbb
mov
fisubrs
loop
xchg
mov
lcall
cmp
es
dec
pop
lcall
sub
mov
mov
out
and
mov
incl
loop
flds
xor
cli
outsl
loop
mov
dec
and
mov
into
movsl
push
js
fbld
ret
mov
mov
lcall
pusha
jge
call
sti
shrl
lret
insl
out
icebp
pop
in
jge
pusha
sbb
dec
mov
sbb
pop
outsb
xchg
lods
loop
and
add
sarl
add
cmc
sub
sub
stos
adc
xor
pusha
gs
mov
jg
mov
mov
int3
jno
sbb
lods
insb
jns
imul
and
mov
pop
cmp
fldt
mov
lds
shrb
cmpsl
cmc
or
mov
ret
adc
inc
mov
jae
xorl
out
data16
pusha
fs
dec
arpl
into
repz
or
xchg
add
imul
adcb
xchg
loope
sub
movsb
cmp
cmp
mov
pop
jmp
xor
and
lods
sbb
cltd
in
mov
pop
xchg
fbld
outsb
cmp
ja
or
sarl
test
cmp
fs
sbb
pop
and
fwait
lret
inc
je
repz
push
dec
dec
inc
jae
pop
lahf
adc
lea
cmp
mov
cs
add
sbb
ret
test
cmpsl
imul
fdivrl
cltd
cmp
subb
into
inc
mov
das
je
pop
and
in
xor
in
lods
sub
call
xor
dec
call
in
lcall
add
mov
cmp
pop
int3
out
adc
mov
xchg
aam
pop
fucomp
pusha
push
icebp
or
and
fldenv
jno
leave
sub
fwait
mov
or
adc
lods
push
pop
xchg
push
jge
jb
lahf
sbb
lahf
xchg
lea
adc
lock
das
repnz
pop
ss
fwait
movsl
aad
dec
dec
test
push
pop
sarb
mov
add
inc
dec
adc
jbe
das
aad
popf
lods
inc
inc
outsl
lea
jae
jl
les
rorb
add
mov
cli
imul
and
jmp
adc
mov
adc
dec
fxch
incl
push
out
iret
pop
flds
enter
and
mulb
lock
out
mov
inc
mov
enter
mov
or
mov
ret
and
les
cmp
fidivl
sbb
adc
stos
push
adc
fmuls
mov
or
stos
pop
mov
push
xor
fimuls
push
outsb
out
dec
adc
cld
adcb
test
jo
mov
movsb
fldenv
inc
fdivs
loop
push
int
call
push
test
stos
dec
jl
xlat
fwait
xor
icebp
les
lea
sub
push
pop
shrl
outsb
or
jmp
aas
sbb
into
mov
push
outsb
sbb
cmc
jmp
ss
push
push
fs
xchg
ljmp
cmpsl
fimuls
fwait
sbb
rcr
lahf
sub
cmpb
loope
decl
decl
jnp
imul
bound
ss
outsl
in
stos
jne
insl
lock
and
and
insb
ret
int3
sub
into
repnz
sahf
jecxz
cld
icebp
mov
mov
test
mov
mov
aaa
lcall
dec
aad
clc
push
xor
xchg
in
rcrb
or
sbb
insl
adc
inc
dec
xchg
in
adc
aam
icebp
lcall
dec
inc
mov
mov
push
jle
xor
fs
test
adc
fisubrl
pop
mov
pop
jbe
add
jmp
fsubrp
jo
sub
jnp
out
xchg
data16
xchg
jge
iret
scas
adc
shlb
shlb
sbb
mov
or
rcl
cli
sbb
push
decl
imul
lds
movb
mov
and
xor
dec
and
lock
dec
aad
add
iret
mov
jp
lcall
mov
mov
lret
test
xchg
cmp
and
push
sti
shl
xchg
scas
stos
and
lods
mov
xlat
idiv
js
je
aas
pop
jb
jp
loope
mov
mov
and
sbb
push
add
jl
pop
sarb
jae
xor
into
add
fdivs
out
dec
xor
mov
jle
fs
adc
add
adc
push
cmp
test
jbe
adc
adc
sbb
lods
stc
out
jmp
mov
int3
and
cli
add
jge
jle
in
pusha
xor
push
adc
inc
mov
aaa
cmp
xor
ret
adc
fldcw
sub
fdivrs
sub
es
jl
test
mov
push
iret
add
int
sub
ret
dec
movsb
int
fstps
mov
adc
mov
adc
les
cmpsb
jg
into
and
stos
ret
mov
sbb
sbb
push
adc
and
push
adc
popf
dec
sbb
lods
jbe
popf
shrl
pop
add
inc
dec
stos
xchg
inc
call
pop
dec
shlb
outsl
test
popa
pop
insb
adc
jmp
xor
push
xor
sbb
ret
call
rcl
scas
fidivrs
push
push
sbbb
cmpsl
stos
jno
add
mov
jno
leave
mov
fsubr
mov
pop
jecxz
mov
push
test
mov
lea
std
icebp
imul
cmp
inc
jp
das
cmpsb
ds
adc
inc
mov
cmc
mov
cmp
sbb
mov
cmpsb
add
pop
es
std
or
lahf
clc
mov
mov
push
scas
sarb
fsts
mov
sbb
xor
and
xor
ficompl
push
mov
daa
data16
shlb
xchg
mov
mov
inc
insb
and
and
push
aam
mov
jb
mov
jb
lock
mov
and
push
cli
stc
int
enter
je
jle
sbb
xor
cltd
xor
add
and
mov
negb
lods
mov
shll
xor
rep
inc
and
xor
pushl
cld
out
xor
jp
cmc
inc
outsl
jg
and
push
add
xchg
jo
sbb
fisubrl
mov
cmc
es
js
jb
mov
inc
xchg
mov
decl
sub
ljmp
pop
mov
aaa
inc
out
adc
mov
add
aas
and
mov
cli
jmp
inc
cmpsb
arpl
in
loopne
cli
xor
aam
inc
add
fwait
test
data16
xor
loopne
enter
mov
mov
imulb
or
rol
lds
sbb
pop
sahf
call
lret
cmp
aad
int
sub
nop
sub
outsb
jnp
pop
cmp
xchg
out
push
inc
jmp
scas
cmp
into
stc
leave
mov
or
ja
mov
shrl
jne
add
adc
inc
xchg
mov
insb
jno
mov
lahf
addr16
sub
jg
xchg
es
xchg
and
xchg
xor
add
mov
push
dec
pop
cmp
test
outsb
leave
loope
inc
and
out
outsl
mov
addr16
test
scas
jo
mov
push
shll
fidivl
es
add
mov
into
int
mov
int3
stos
pop
out
outsb
dec
mov
stc
pushf
xlat
stos
jg
mov
shll
sbb
test
insl
and
dec
fldt
jl
sbb
incb
cmpsb
cld
ja
sub
mov
dec
lret
xor
lods
mov
es
js
push
mov
mov
enter
je
xchg
jmp
push
dec
mov
xchg
sbb
nop
cli
stc
in
divl
imul
push
cwtl
pop
addr16
add
xchg
rclb
stos
cltd
loopne
xor
mov
jae
xchg
fcmovnbe
pop
push
inc
cld
fs
popf
push
sar
mov
int3
int
pop
hlt
push
lock
lock
test
mov
xor
roll
sbb
xchg
lahf
push
pushf
jle
adc
rcrl
enter
dec
mov
out
out
jle
fisttps
xor
call
pop
pop
push
sub
sahf
std
hlt
cmp
lods
dec
sub
mov
testl
cmp
jb
sti
cli
jge
pop
cli
pop
aas
ja
dec
cs
xlat
in
jo
pop
cmpsl
sbb
movsb
dec
imul
push
xchg
dec
lcall
mov
mov
push
adc
ret
or
negb
aaa
stos
mov
mov
adc
xor
xchg
repnz
outsb
out
mov
rclb
movsb
mov
pop
rorl
and
hlt
mov
and
dec
sub
mov
jae
lods
mov
or
pushf
sbb
test
mov
and
cld
sub
movsl
mov
jecxz
push
jns
xor
mov
jge
mov
ret
dec
mov
mov
fs
aam
or
loop
add
iret
jecxz
sbb
and
loope
mov
mov
test
arpl
mov
aas
insb
pop
dec
xor
negl
mov
out
inc
mov
mov
mov
lahf
sbb
push
push
repz
sbb
pop
mov
cmpl
repnz
scas
inc
mov
mulb
cmpsb
jbe
test
aad
fstl
mov
or
out
subb
jne
stc
stos
mov
cmp
imul
pop
cmpb
pop
jp
xchg
mov
ds
cmp
jmp
leave
xchg
or
and
mov
in
dec
aad
xchg
and
mov
sbb
xchg
mov
sahf
bound
int
pop
dec
jmp
ds
cmp
jg
mov
jns
mov
sub
and
js
nop
scas
xchg
mov
popf
imul
arpl
sub
mov
xorb
mov
iret
lods
mov
hlt
aaa
rcr
xchg
out
inc
pop
or
lahf
xchg
daa
call
dec
dec
addr16
add
push
xchg
adc
imul
lock
xchg
addr16
jnp
or
fs
aam
cmp
je
aaa
ja
lret
mov
lock
xchg
adcl
fiaddl
fldt
mov
mov
sarb
cltd
xor
xor
les
and
cwtl
into
mov
stc
xor
dec
leave
sbb
arpl
xchg
cmp
and
insl
nop
insb
add
ret
sti
leave
cwtl
in
and
es
add
and
ss
inc
in
push
cmpsl
scas
sti
sub
ficoms
std
fidivl
lods
inc
xchg
leave
add
mov
inc
cs
insl
in
bound
mov
inc
out
or
out
sahf
mov
stos
ret
mov
dec
loopne
and
sub
lds
add
test
dec
pop
fdivrp
fninit
test
popf
pop
in
jae
cwtl
adc
xchg
add
jg
push
arpl
lcall
call
sbb
sti
xorb
push
xchg
mov
movsl
sbb
outsl
jo
sbb
mov
sbb
push
andb
fdivrs
mov
divl
xchg
dec
mov
mov
stc
inc
jecxz
and
inc
popf
or
addr16
subl
popf
sub
pop
pop
mov
sahf
xchg
dec
loope
fucomi
xchg
fwait
imul
mov
pushf
ds
in
scas
das
jbe
aaa
fidivs
scas
add
push
add
neg
rcrb
and
fildl
hlt
leave
lods
mov
aam
int
lock
fidivs
ds
push
xchg
scas
popf
xchg
loopne
inc
cltd
mov
cmp
jp
jbe
xor
shlb
addr16
and
xchg
fs
xchg
imul
stos
or
cmpl
sbb
pop
dec
mov
ja
cmp
cmpb
imul
push
pusha
inc
rorl
adc
sarl
sub
stos
int3
add
sahf
pop
pushf
fsubrs
lods
mov
into
aam
dec
or
cmp
sub
insb
sub
push
cmp
scas
mov
lret
adc
in
pusha
enter
cmp
stos
fptan
jg
sti
es
aaa
mov
jle
inc
ret
cwtl
pop
jecxz
stos
xchg
push
test
arpl
and
xor
shll
std
mov
jp
pop
push
cmp
popf
fldl
mov
xor
and
inc
testb
lods
sbb
stos
imul
xor
mov
cmp
rorb
mov
icebp
stc
scas
push
mov
mov
aaa
push
int
dec
addr16
ds
xlat
pusha
test
mov
repnz
mov
gs
inc
loope
dec
push
xchg
inc
loop
popf
stos
xor
xchg
adc
xor
pop
cmp
and
lret
sub
cmp
or
xor
push
das
fnstsw
popa
outsb
loope
out
push
pop
xor
mov
fldenv
fld
jl
push
js
cmpsl
xchg
cld
xchg
or
lods
and
add
mov
and
cmpsb
pop
cmp
xor
nop
iret
push
mov
popa
int3
jb
pusha
mull
push
and
roll
add
add
sub
outsb
add
data16
adc
mov
cmpsl
popa
daa
mov
jne,pt
mov
push
idivb
fsub
loopne
xor
aad
mov
sub
imul
negb
xchg
add
lret
add
js
xchg
mov
jbe
or
clc
pushf
fwait
xor
into
push
les
lods
cmpsl
popf
les
mov
sarb
lea
xchg
imul
fnsave
lods
or
data16
ja
and
loope
loope
lahf
icebp
out
shll
push
cmpsl
gs
sbbb
inc
mov
mov
adc
sub
mov
cwtl
test
nop
loope
xchg
loop
xchg
or
movsl
cltd
cmpsl
cs
inc
lret
movsl
outsl
mov
sub
jb
test
mov
dec
mov
dec
daa
es
pop
dec
icebp
push
or
stos
out
push
push
jb
shll
or
push
sarb
test
loop
jno
int3
lds
andb
jg
mov
dec
sbb
stos
fnstsw
mov
push
mov
cmp
pusha
inc
pop
insb
adc
inc
cmpsl
pop
insb
dec
push
or
adc
cmp
lods
jle
rcll
add
dec
mov
and
into
push
loopne
leave
addr16
sti
pop
fsub
push
mov
icebp
repz
xor
sbb
xchg
xor
rolb
fnsave
pusha
lea
aas
mov
mov
test
ljmp
fists
jns
int
or
xor
mov
push
mov
call
shlb
repnz
jns
cmpsl
jl
fnstenv
dec
loopne
mov
xchg
xor
les
mov
mov
cmp
push
jbe
fsub
movb
out
inc
jo
in
jge
dec
sti
test
out
pop
lahf
inc
jge
dec
or
or
push
push
add
or
fidivrs
lods
ficoml
add
mov
mov
stc
pop
jp
mov
rcrl
call
or
and
dec
out
inc
icebp
mov
daa
movsb
call
cmp
fldt
repnz
xor
mov
mov
mov
fwait
test
mov
leave
pop
enter
test
repz
ss
sahf
jne
pop
xlat
aad
imul
leave
dec
adc
mov
push
inc
sbb
xor
mov
testb
or
fnstcw
dec
jbe
push
outsl
mov
ja
test
dec
xchg
xchg
stc
fisttpl
cmp
mov
adc
pop
add
dec
jp
mov
push
ss
xchg
sub
mov
and
repz
and
inc
adc
in
testl
arpl
cmpsb
leave
rorl
jmp
dec
add
jl
or
pop
mov
mov
ret
add
add
jmp
mov
movsb
inc
cwtl
pushf
mov
hlt
xchg
inc
aaa
push
or
mov
inc
imul
lahf
mov
std
sbb
paddusw
inc
lock
xchg
pusha
jmp
cmp
push
out
dec
and
xlat
pop
adc
inc
test
cmpsb
adc
cmp
xor
sub
and
in
xchg
test
lret
cmp
fnsave
lcall
sti
dec
xchg
xor
sub
ret
and
mov
fimull
out
mov
into
ss
jbe
cwtl
dec
sub
push
add
fldenv
push
out
add
int
sbb
daa
pop
cli
mov
mov
pop
pop
jnp
adc
xchg
cld
sbb
cmp
mov
repz
nop
add
or
mov
fs
pop
inc
nop
es
andl
jmp
jecxz
call
fdivl
int
xor
in
jno
daa
jge
cli
and
paddusb
scas
push
jle
add
mov
insl
xor
xor
sbb
sbb
or
sub
cmp
js
pmaxsw
mov
in
movsbl
mov
sbb
jbe
add
push
imul
mov
stc
cld
mov
xchg
push
cmpsl
xorl
pop
loopne
popf
test
mov
popf
jge
rorl
and
int3
mov
insl
leave
out
sub
in
mov
insl
cmpsb
aam
pop
testl
sbb
sub
and
leave
mov
fstl
loope
test
mov
lcall
lods
mov
push
std
stos
iret
mov
sbb
jmp
fcompl
mov
or
flds
jmp
cld
popf
stc
cli
outsb
adcb
pushw
push
dec
sahf
jbe
or
push
in
inc
mov
ljmp
sub
or
dec
pop
mov
jo
dec
adc
pusha
pop
pushf
inc
mov
rcl
dec
sub
sbb
icebp
sbb
or
ja
dec
jle
jmp
inc
insl
iret
xor
out
aam
cwtl
adc
mov
pop
or
add
je
cmpsb
or
jl
jmp
mov
or
jae
lcall
rorb
popf
daa
insb
mov
dec
pop
lods
ja
inc
xor
jmp
mov
xor
jae
mov
out
mov
push
cmp
adc
adc
jo
movsb
ret
clc
inc
cld
adc
in
outsl
sub
lahf
jnp
push
xor
mov
ljmp
push
cwtl
fbstp
or
cmp
xlat
inc
inc
les
enter
fwait
push
jle
repnz
fcmovne
jg
mov
cmpsb
dec
aaa
push
fs
cltd
jns
cmp
aad
mov
nop
ds
lret
mov
and
xchg
in
rclb
inc
icebp
fs
mov
jmp
lds
adc
jp
repnz
scas
sub
hlt
fsubr
push
pop
cmc
dec
sti
xor
xor
xor
lret
mov
mul
adc
or
sbb
xlat
jnp
data16
lret
xchg
inc
jp
call
lret
in
stos
cmpsl
out
sbb
xchg
jl
cmp
xor
rep
and
xchg
call
out
andl
pop
cwtl
mov
push
dec
mov
repnz
repnz
sbb
fistpl
jl
ss
mov
xchg
jne
inc
mov
fildl
xchg
mov
loop
idivb
xchg
pop
add
sahf
aas
in
xor
dec
sti
clc
fcoms
inc
outsb
xor
jnp
or
push
inc
aam
adc
jp
movsl
sbbb
xchg
test
rorl
sbb
mov
push
ret
nop
loope
pop
add
fsubrs
aaa
mov
sete
cmp
push
sub
sub
add
mov
inc
and
inc
sub
pop
lea
jp
dec
jne
sbb
xchg
inc
jl
dec
mov
jmp
es
icebp
shll
out
xlat
dec
jo,pt
shrb
sbb
es
cmpsb
fbstp
out
and
leave
dec
or
jne
fists
jp
cmpsb
nop
pushw
xor
xchg
add
fimuls
mov
lcall
push
mov
lods
pop
loopne
ret
nopl
dec
pop
fsubrs
add
cmpsb
orl
movsb
lret
loopne
inc
mov
dec
orb
push
cwtl
xor
les
xchg
ljmp
add
dec
pop
push
in
rcr
fsubrs
add
fwait
xchg
inc
in
pusha
and
mov
xor
insl
fldcw
scas
or
test
adc
int3
mov
xchg
mov
filds
imul
jge
ja
push
push
xchg
dec
inc
inc
pop
push
sbb
mov
loop
mov
xorl
pusha
loop,pt
lcall
adc
arpl
icebp
jge
push
dec
shr
outsb
sub
lret
xchg
aas
jno
add
lret
push
popf
jle
xor
aaa
sbb
arpl
lcall
adc
xchg
shl
mov
jecxz
dec
rorb
sub
clc
cmp
outsl
addr16
dec
xchg
fstp
je
cmp
push
imul
or
fisttpll
mov
adc
roll
adc
or
xchg
mov
out
sbb
jae
aaa
fimull
pop
dec
fistpl
pop
lea
mov
sbb
mov
out
outsl
imul
cmc
cwtl
scas
add
jae
fmuls
jnp
cli
dec
jmp
adc
in
xchg
mov
loop
push
sbb
cmpsl
lock
movsl
cmp
out
idivb
sub
sub
or
aad
sahf
or
jmp
adc
je
dec
xor
mov
ret
jns
lods
xor
adc
sarb
xchg
sub
jne
xorb
cld
sub
mov
or
push
addr16
in
sbb
inc
add
neg
dec
cmc
mov
lcall
push
add
daa
or
or
push
push
lods
fcmovnu
in
lret
mov
mov
xchg
fbstp
mov
mov
mov
and
push
push
push
xchg
mov
in
cmp
jae
and
inc
cmp
lock
cmp
out
in
pushl
adc
imul
ror
cltd
stos
popa
mov
xor
iret
in
into
mov
sub
cld
addr16
pop
in
mov
mov
add
inc
dec
mov
lcall
push
mov
dec
pop
rcrb
mov
sub
pop
pushl
outsl
or
or
in
adc
fisubl
mov
pop
ljmp
mov
cli
pushf
inc
dec
addl
scas
gs
das
dec
dec
lods
fcmovnbe
mov
add
jae
push
dec
inc
int
pop
mov
mov
add
rcrb
jo
fsubr
cmpsl
jae
add
dec
cmpsb
xor
adc
inc
out
fcmovbe
add
jne
shrl
xchg
fsubp
cmpsl
orb
cltd
test
mov
inc
jmp
sbb
push
call
lret
sbb
fnstsw
ljmp
mov
inc
enter
pop
jno
push
std
xchg
xchg
cmp
nop
cltd
cmp
nop
jmp
pop
ret
inc
mov
pop
in
movsb
call
mov
add
out
fwait
cmc
in
add
mov
inc
pop
es
mov
ret
dec
jnp
sub
push
jb
dec
fistps
jae
jne
and
mov
add
out
daa
inc
shl
enter
push
mov
sbb
add
xor
enter
sbb
pushf
int
cmp
stos
nop
dec
push
jge
xchg
shll
es
xor
pushf
dec
sub
lds
sahf
jmp
in
les
scas
lret
arpl
fs
enter
testl
loopne
in
xchg
xchg
popa
inc
nop
mov
ds
jbe
syscall
test
out
out
xlat
lock
fsub
adc
add
addr16
jnp
adc
insb
add
pushl
jb
add
mov
xchg
jg
mov
into
test
inc
enter
jmp
pop
mov
dec
mov
aas
loope
pop
call
imul
adc
rolb
lret
mov
pop
add
xchg
adc
lret
mov
sub
cld
jp
jmp
test
mov
test
ret
adc
aam
xor
xor
lock
lock
sbb
sbb
and
push
fistps
cmp
cmp
test
cmp
cmc
push
aas
dec
ds
in
jge
xor
and
sbb
xchg
pop
push
fisubrl
push
mov
clc
sahf
xor
dec
mov
not
mov
push
scas
sub
rorb
add
mov
and
pop
xor
jo
push
in
sub
sbb
bound
mov
rorb
mov
xchg
xor
xor
add
scas
pop
repz
shll
inc
xchg
cwtl
cmp
jmp
push
mov
dec
sub
lea
mov
and
adc
lea
add
fidivl
jnp
jbe
mov
pop
adc
mov
in
out
xor
aad
and
bswap
sub
aad
cli
orb
mov
shll
and
xlat
movsb
jl
inc
addl
clc
add
xchg
out
js
addb
fildll
mov
add
call
and
mov
adc
pop
mov
xor
cmp
fwait
sbb
or
sahf
xor
lahf
cmp
outsl
mov
xchg
dec
adc
or
xchg
mov
sub
xorl
xor
push
pop
push
sbb
neg
shl
arpl
fldt
sub
bound
popf
add
sbb
movb
fisubs
das
lahf
pushf
fildl
iret
mov
pusha
lods
dec
ret
enter
jns
inc
enter
or
adc
into
mov
fcoml
and
xor
push
ljmp
aad
enter
pop
xor
test
andl
pop
pop
scas
mov
jb
out
xor
call
dec
das
enter
in
hlt
sub
and
jmp
cmp
scas
cmp
sbb
or
sub
gs
or
jne
inc
popl
movsl
data16
stos
in
cmp
xchg
testb
les
data16
inc
dec
je
test
std
push
pop
jb
push
mov
fsubs
divb
pop
das
pop
mov
inc
inc
cwtl
pop
mov
jp
mov
jne
jnp
aad
cmp
push
mov
xchg
lods
hlt
test
into
ret
jl
inc
inc
jp
xchg
push
pop
jno
mov
les
jge
sub
xchg
ljmp
in
mov
add
sbb
popf
cmp
in
lret
mov
or
test
test
fstl
sbb
inc
addl
mov
dec
int
les
xchg
push
mov
jmp
scas
jae
and
cs
inc
xor
dec
xchg
jne
nop
push
cli
out
test
xchg
mov
in
stos
add
adc
mov
ret
jmp
cmp
insl
lods
stos
lods
xor
mov
ret
ror
adc
mov
scas
or
cli
dec
fstpt
jnp
jl
cs
mov
and
dec
dec
mov
or
sbb
fldcw
int3
mov
scas
xchg
rcrb
jne
adc
mov
mov
mov
mov
fimuls
outsl
lahf
mov
or
call
pusha
mov
hlt
movsb
int
repnz
mov
pop
insb
jecxz
ljmp
xlat
mov
xor
fidivs
shlb
fnstenv
call
cwtl
dec
jbe
popa
fcoms
xchg
sbb
inc
mov
xchg
or
inc
fmul
shrl
int3
xor
repnz
inc
andl
popa
cwtl
pop
enter
push
lret
mov
les
cmp
stos
pop
daa
pop
movsb
sub
sbb
shlb
pop
push
inc
rorb
push
addr16
std
pop
cwtl
enter
fisubrl
outsl
inc
scas
dec
ds
fs
pop
fidivrl
or
hlt
insb
repnz
or
or
xchg
scas
push
sub
push
popf
mov
fnstenv
jns
rcrl
xor
xchg
mov
bound
ret
imull
fwait
jno
or
sti
jmp
pop
nop
push
or
mov
iret
xor
dec
fdivs
rol
nop
ljmp
fistps
or
test
sbb
cmpsb
jno
mov
and
jp
push
sub
xlat
imul
inc
ljmp
data16
and
mov
add
ja
data16
and
or
lods
lods
pop
iret
inc
popa
mov
or
cmp
icebp
fnstcw
jp
loopew
cmpsb
inc
adc
jnp
inc
cmp
pop
xchg
sbb
movl
adc
dec
adc
std
mov
sbb
mov
inc
daa
cmp
mov
jecxz
mov
rorl
sub
gs
push
orb
jno
pop
mov
out
jle
test
pusha
inc
out
xchg
xchg
xchg
jo
push
pushf
lea
or
lods
or
test
enter
xor
pop
sbbb
jo
push
or
or
lahf
and
adc
aaa
and
xchg
pop
mov
data16
test
test
and
and
enter
fdivl
adc
pop
add
push
notl
loopne
sbb
sub
jne
jne
ficoml
mov
sub
neg
cmpsb
dec
sub
push
movsl
arpl
or
lock
mov
mov
mov
mov
je
push
adc
in
dec
adc
mov
push
je
pushf
divl
scas
fidivrl
mov
sub
das
push
cltd
or
gs
mov
sbb
in
mov
cmp
scas
xor
aaa
or
orl
xchg
in
sbb
hlt
call
xchg
dec
pop
shr
setbe
jnp
stc
cmp
push
call
xor
int3
mov
jecxz
jg
mov
and
jo
mov
fnstcw
jge
jno
loope
jnp
aaa
add
out
push
mov
xchg
pop
mov
or
push
stc
sub
addr16
scas
jp
mov
daa
mov
mov
cld
adc
cmpsb
enter
int3
pushf
daa
ret
sbb
cli
push
mov
popf
inc
ficomps
negl
xlat
divb
mov
mov
arpl
xchg
out
xor
sub
inc
mov
test
add
outsb
roll
outsl
adcl
sbb
push
xor
cmp
aas
jmp
inc
call
xorl
xor
xchg
jne
sbb
jae
pop
fs
and
mov
mov
and
xchg
call
mov
and
mov
dec
mov
mov
outsl
xchg
push
mov
shll
fmuls
fstpl
inc
in
comiss
adc
xor
jmp
iret
or
stos
pop
rcrb
mov
push
sbb
xor
cmp
mov
pop
jae
aaa
rcrl
pop
fwait
clc
inc
daa
pop
lahf
mov
out
jg
fidivl
sub
fildl
icebp
ja
outsb
stos
aas
imul
arpl
movsb
clc
and
xchg
lcall
or
push
inc
mov
push
push
inc
shlb
mov
pop
xorl
pop
pushl
hlt
cmpsl
cmp
sahf
inc
stos
incb
push
leave
cmc
imul
cs
cmc
pop
pusha
lret
lods
jmp
aam
or
fs
jle
cmp
mov
lret
and
cmc
push
movsl
imul
mov
enter
rcll
jl
fidivrl
jnp
or
jmp
out
cmp
cmpsb
mov
lds
ljmp
mov
xchg
test
jmp
xor
push
mov
neg
cli
insb
mov
sub
call
adc
xor
in
push
dec
orb
mov
loope
in
stc
ds
outsb
xchg
aaa
fisubrs
xor
hlt
stos
mov
ja
rol
jbe
pop
frndint
fnstcw
or
jg
add
push
sub
bound
sbbb
mov
add
nop
adc
jbe
ljmp
jne
dec
addr16
add
jmp
pop
sub
inc
stos
shr
in
or
scas
adc
add
sub
mov
jecxz
arpl
and
jecxz
movsl
jns
sbb
lds
or
push
jne
testl
les
es
mov
sbb
jns
inc
lods
inc
add
xchg
and
pop
inc
pop
lods
jno
mov
mov
es
ss
mov
lahf
sbb
inc
and
mov
cmp
xor
sbb
adc
das
repz
dec
loopne
xlat
xchg
rorl
aas
das
shlb
push
xchg
icebp
lods
xor
add
bnd
jbe
mov
pop
insb
pop
lret
xchg
rolb
lea
xor
sti
orb
add
push
cmc
sbb
cmpl
jb
xor
loop
cli
cli
push
loopne
out
and
mov
test
addr16
fbld
jg
hlt
pop
sub
pop
xor
lcall
stos
rorb
cmpsl
adc
sub
lods
xchg
lret
clc
add
inc
fmull
and
mov
lods
jbe
cmp
or
sub
ljmp
fwait
pop
loopne
in
aaa
mov
sub
push
aas
pop
cltd
or
in
subl
in
adc
lahf
and
bound
hlt
inc
adc
sti
icebp
pop
arpl
add
add
pop
mov
cld
icebp
inc
adc
xor
jle
movsb
dec
dec
movaps
int
mov
sbb
mov
popa
data16
and
xor
ret
aas
sarb
les
stc
push
mov
pop
test
pushl
call
rcrl
mov
std
mov
jecxz
xchg
jecxz
shl
gs
not
cltd
popf
out
addb
call
mov
mov
jne
mov
mov
or
jo
mov
or
pop
sbb
les
adc
xchg
pusha
xchg
and
jnp
add
int3
sub
popf
inc
push
outsl
pop
jnp
movq
insl
xchg
or
bound
xchg
xor
inc
in
pusha
lahf
ljmp
fwait
cmpsb
lret
push
ret
fdivrp
sbb
iret
lret
aad
pop
xchg
sbb
pop
xchg
out
sub
ljmp
js
mov
pop
sub
add
leave
aad
lods
out
pop
rcl
cld
stos
pop
mov
and
lret
out
sbb
or
addr16
sbb
sbb
xchg
insl
lret
sarl
mov
pop
ja
subb
mov
dec
xchg
cmc
mov
sbb
push
imul
ds
aad
movsl
imul
fcmovne
or
jns
xor
push
cmp
push
and
jl
outsl
insb
iret
out
dec
loop
xchg
pushf
mov
rorl
scas
out
jno
xor
fcomps
imul
and
xor
repnz
cltd
push
jg
psubq
jle
leave
lret
repnz
sbb
adcl
movsb
scas
mov
sbb
jp
xchg
jl
inc
sbb
stc
insl
stc
movsl
and
push
fstpt
movsl
cli
rcr
add
fwait
mov
and
sbb
shll
imul
adc
xchg
xchg
iret
gs
iret
popa
sub
loop
xchg
push
or
out
stc
popa
jno
notl
shl
xlat
lods
outsl
imul
mov
cmpb
jb
add
push
jbe
cmp
lret
mov
aad
pop
fdivl
push
aas
xchg
sub
add
or
jp
dec
cmpb
cmp
int3
push
jb
pop
pop
pcmpeqw
cmovg
enter
lret
test
mov
xchg
jnp
lock
cmp
fxch
ficoml
sub
mov
sbbb
inc
fsts
out
or
loopne
addr16
mov
ffreep
and
jae
call
adc
into
in
iret
mov
repnz
jo
test
sub
dec
mov
fdiv
pop
or
addb
pop
test
je
adc
cs
cmp
les
inc
pop
repnz
and
outsl
stc
xchg
pusha
cmpsl
pusha
addb
jae
fcmovnb
mov
imulb
jmp
xchg
dec
push
xchg
or
adc
jge
cli
pop
sub
in
rcr
mov
lods
dec
rcrl
mov
stos
sub
mov
inc
inc
pop
mov
imul
stos
fs
testb
andl
sbb
jns
nop
lret
ljmp
pop
xor
pop
cmp
sub
or
aas
cmc
mov
cmp
int
pop
aam
test
ljmp
stc
push
lock
sub
shr
out
and
sub
pop
iret
dec
pop
pop
inc
sti
outsb
push
notl
pop
in
addb
les
repz
popf
call
in
adc
insl
stos
and
cmp
bound
mov
mov
inc
lret
xchg
popa
sbb
mov
into
mov
ljmp
or
sbb
popa
lea
cmp
js
fildll
xor
scas
xchg
dec
les
jmp
ljmp
or
std
jns
or
test
push
inc
mov
lret
jle
js
pushl
js
arpl
repz
dec
pop
loopne
jg
sub
mov
fidivl
popa
sub
add
xor
xchg
mov
sahf
pushf
pop
out
fmuls
cmp
sub
lods
sub
inc
cwtl
jecxz
ja
dec
pusha
cmc
add
bound
mov
hlt
dec
dec
mov
jno
sahf
sbb
add
xchg
sbb
popf
hlt
dec
shrl
xchg
lods
cmp
jl
xor
mov
push
sub
dec
mov
rolb
lcall
repz
jg
in
inc
inc
xchg
test
popa
xor
adc
xor
lods
add
adc
xchg
sub
xor
rcl
push
push
cmp
push
les
push
mov
cltd
and
add
jno
adc
lahf
jge
loop
cmp
jae
pop
sbb
and
push
movsl
xchg
data16
icebp
inc
dec
mov
jmp
pop
xchg
les
in
xlat
arpl
mov
fstp
xorl
push
mov
mov
jbe
adc
insb
xor
pop
cli
push
cmpb
sbb
pop
mov
shlb
out
push
shl
test
jae
push
sbb
push
jae
cmpsl
mov
dec
mov
bound
cltd
pop
pop
in
lock
mov
mov
ljmp
dec
popa
subb
out
dec
aaa
pop
les
insl
data16
and
pop
cmp
pusha
xchg
cmp
inc
hlt
xchg
icebp
imull
loope
data16
or
aam
and
popa
push
aaa
xchg
mov
mov
insl
rol
and
pop
gs
and
add
int3
dec
cld
aas
ret
lods
jo
cmpl
pusha
fwait
mov
mov
add
popa
xchg
xor
cwtl
ss
cmp
out
xchg
dec
push
mov
fwait
push
mov
rclb
xor
jnp
mov
xchg
pop
movsl
stc
rorl
hlt
pop
dec
or
in
inc
addr16
ljmp
outsl
fbld
push
or
xorl
adc
pop
add
push
test
xor
popf
mov
dec
sub
push
pop
dec
and
jo
mov
xor
pusha
aas
in
add
xchg
xor
mov
out
outsb
sbb
mov
addr16
mov
test
or
pop
adcb
inc
jl
cld
in
xor
add
add
bound
call
out
xchg
mov
shlb
into
mov
cmc
call
outsl
mov
xor
xchg
inc
pop
repz
push
pop
mov
push
std
cs
add
ljmp
sti
jmp
aad
mov
jp
test
sbb
or
add
sahf
or
push
fildl
or
or
or
flds
fsubl
fstpt
into
pop
pop
mov
mov
and
dec
mul
jmp
xor
push
pop
lcall
jo
or
mov
xchg
fldcw
xchg
mov
mov
cmpl
add
xchg
adc
pop
adc
mov
mov
jne
pop
xchg
xchg
fldcw
sbb
dec
loope
mov
lods
int
fists
enter
sub
sbbl
inc
push
pushf
push
cwtl
lods
sbb
mov
je
in
in
mov
cli
push
aas
enter
inc
arpl
loope
stos
out
adc
cmpsb
sarb
mov
insb
mov
push
out
out
xchg
or
loop
ljmp
fucomip
adc
cwtl
clc
add
fucomp
sub
pop
fs
fisubs
mov
jo
push
jmp
mov
shrb
push
or
cmpsl
sub
in
mov
testb
cld
shl
in
aas
shl
mov
fimuls
mov
pop
sti
xor
scas
sbb
dec
std
or
nop
inc
add
loopne
pop
push
sub
enter
jp
rol
dec
push
mov
jae
push
jne
or
cld
cmp
or
scas
fcmovnu
push
clc
push
popf
dec
sbb
mov
std
aas
outsb
sbb
incb
lret
cmc
leave
cld
mov
clc
sub
pop
test
push
xlat
push
add
mov
aas
cmp
sub
std
mov
ret
push
arpl
push
lahf
cmp
sbb
push
jo
jnp
aas
mov
dec
jmp
insb
xchg
decl
mov
int
outsb
add
xor
mov
xchg
ja
repnz
ss
cmp
pop
in
or
and
enter
fldcw
jae
rolb
lahf
push
or
or
flds
fistpl
sub
ret
rol
fldcw
lcall
inc
and
cltd
dec
pop
hlt
push
cmp
sbb
push
inc
cltd
cmp
loopne
inc
cli
ds
loopne
add
xchg
push
stc
cmovo
gs
sarb
push
push
pushf
or
jb
mov
and
call
aaa
cmp
cmp
pop
pop
adc
icebp
aas
mov
xchg
lahf
iret
out
xchg
xor
and
inc
in
out
shlb
add
jb
in
in
movsb
sbb
dec
jp
fidivl
adc
mov
in
lds
or
and
js
pop
dec
mov
cwtl
dec
std
push
xor
add
sti
stos
jo
stc
and
popf
fs
outsb
jbe
gs
ljmp
mov
and
mov
xor
adc
pop
mov
std
and
jg
and
sbbb
mov
fsubr
push
jno
dec
arpl
sbb
and
xlat
dec
ret
stos
cwtl
outsb
sbb
sub
add
bound
sub
sbbl
xor
push
insl
ret
inc
adc
dec
jae
jbe
pushl
jmp
sub
push
fs
xor
sahf
ja
push
jp
sub
push
mov
jmp
sub
lahf
hlt
inc
add
stos
xor
mov
ljmp
push
jnp
sub
sti
jne
inc
aaa
mov
cmpl
or
xor
js
lods
outsb
mov
hlt
mov
push
jp
movsl
dec
jae
push
mov
jl
test
aaa
sub
movnti
fdivrs
fcmove
mov
pop
inc
mov
sahf
fadd
imul
cs
sub
ret
das
cmp
mov
inc
mov
leave
repz
inc
fsubrl
xchg
jbe
test
push
mov
xchg
and
outsb
inc
jo
sbb
xor
pop
sub
dec
or
or
cwtl
mov
scas
test
in
jns
aaa
pop
jo
inc
jno
outsl
mov
in
lret
inc
out
pop
push
js
scas
out
sahf
in
pop
dec
mov
cli
and
mull
gs
mov
jb
push
dec
shrb
inc
xor
sti
xor
jne
mov
dec
push
dec
push
mov
add
dec
cmp
lods
movsb
sbb
jbe
pusha
or
add
jno
scas
js
xor
push
xchg
mov
rorl
sbb
popf
lahf
add
test
repnz
aad
data16
mov
xor
aaa
popa
mov
or
xchg
jmp
xchg
sub
mov
out
cmpsb
add
lret
faddl
pop
mov
cmpsb
addr16
ss
xchg
push
sbb
icebp
enter
xor
dec
rcll
xchg
add
pushf
repnz
out
jecxz
les
cmp
mov
or
cmpb
adc
lret
lds
outsl
xlat
lods
out
gs
add
icebp
test
pop
fsubl
inc
pop
jl
xlat
cmp
loop
inc
dec
xor
fstps
sub
sub
mov
add
push
lret
xor
xchg
mov
loopne
or
adc
fwait
arpl
mov
repz
jns
adc
xchg
push
jnp
into
orl
jecxz
stc
dec
dec
mov
sub
jl
mov
pushf
andb
outsb
pop
adc
ja
outsl
mov
ss
je
dec
test
dec
shll
icebp
and
jae
pusha
int3
mov
das
jnp
mov
leave
fmuls
shl
xchg
sub
arpl
pop
xor
lods
sub
imul
xchg
or
push
loop
icebp
inc
aas
dec
subl
dec
jecxz
xor
mov
mov
cmpsl
rorl
ret
arpl
mov
xor
sub
xor
jecxz
pop
mov
push
adc
lock
push
loope
lret
int3
mov
mov
mov
pop
or
mov
xchg
xor
daa
cmc
mov
ljmp
and
test
and
mov
jge
out
inc
loop
pop
test
sub
fistpll
or
fcomi
sub
idivb
adc
lods
sub
repz
inc
lcall
out
sarl
int
sbb
dec
pop
xor
shlb
movsl
mov
mov
out
sbb
js
loope
enter
fistpl
dec
adc
rcrl
or
push
into
imull
test
mov
stos
mov
repnz
push
ds
loop
lea
call
or
cld
cs
icebp
adc
mov
fmuls
inc
je
adc
jl
and
aam
mov
xchg
push
std
or
js
inc
xchg
xchg
ret
ja
es
push
jo
adc
ret
outsb
jne
icebp
mov
sbb
mov
mov
inc
xor
mov
cmpsl
push
std
mov
mov
out
std
stos
out
in
lods
mov
imul
fcomps
xor
mov
cwtl
or
add
out
mov
sbbl
ss
push
call
dec
je
dec
and
or
cld
cmp
in
aas
jnp
pop
cmpl
push
push
sbb
xor
pop
or
cld
jno
stos
push
filds
scas
in
push
les
or
mov
mov
jo
jo
pusha
adc
inc
jmp
xchg
mov
inc
xor
pop
rcl
pop
frstor
xlat
pop
mov
scas
and
jge
mov
lock
pop
mov
sub
pop
fcomps
sub
or
inc
outsb
bound
jmp
sbb
xchg
inc
test
dec
lcall
roll
int
jp
in
inc
je
or
movsb
aam
mov
pop
push
dec
jmp
fcoms
mov
nop
popa
mov
ror
and
and
inc
mov
cmp
jp
repnz
jmp
jne
xchg
jo
mov
dec
ljmp
push
pop
mov
test
inc
adc
ret
mov
inc
sbb
in
inc
pop
int
pop
arpl
xor
cli
lcall
stc
push
movsl
shll
test
push
adc
mov
and
xor
cmpsb
icebp
mov
ja
fistpl
les
sbb
lds
add
aas
in
movsb
lods
add
data16
and
ja
repz
xchg
cmpsl
cmpsl
out
add
ss
sbb
popf
mov
mov
pop
inc
arpl
mov
cmp
sub
sbb
clc
cmp
in
mov
cwtl
in
dec
mov
lods
scas
pushf
inc
xor
sbb
cld
faddp
cltd
in
jp
ret
movsl
cmp
xor
cwtl
and
add
mov
inc
mov
sbb
test
fs
push
rcrl
mov
and
xchg
sub
aad
xchg
cmp
xchg
aad
test
pop
sub
js
lret
inc
addr16
jg
add
pushf
jo
orb
outsb
push
pop
popa
shl
dec
sbb
push
inc
cmp
pop
ss
jg
out
or
jae
xlat
inc
push
inc
xor
or
imul
sbb
pop
adcb
push
sbb
sbb
fimuls
fmuls
dec
mov
cli
sti
shll
ficoml
pop
out
jp
pop
ljmp
int3
ds
test
xchg
fwait
cmc
pop
mov
xor
mov
and
add
hlt
mov
dec
cmp
sub
mov
push
out
pop
aam
push
or
ret
or
dec
das
jg
xchg
xchg
outsl
das
imul
push
sarl
cltd
add
je
sbb
mov
jo
iret
out
shlb
mov
dec
pop
adc
or
jno
outsb
and
fmuls
popa
out
cmp
and
jbe
outsb
cmp
imul
mov
sbb
and
hlt
push
fcmove
push
cmp
push
dec
lahf
test
imul
adc
insb
testb
push
mov
icebp
xchg
xchg
scas
add
lahf
jae
or
mov
sub
add
and
fwait
test
int3
outsl
mov
xchg
aad
fwait
xchg
jbe
pop
jp
dec
mov
push
mov
lds
and
mov
out
lods
adc
xchg
shlb
cwtl
mov
sbb
add
insl
cmp
dec
stos
xor
daa
mov
sbb
loop
repz
dec
adcl
pop
add
lock
data16
aaa
inc
int
sbb
sbb
sbb
adc
xchg
test
xor
fildl
or
test
rcl
add
pop
aam
jp
or
jle
jae
adc
mov
aam
or
sbb
pop
fcomps
aas
ja
push
xor
ja
cmc
jle
mov
mov
mov
jle
xchg
cmp
dec
mov
pop
and
inc
scas
xchg
ljmp
repnz
shr
inc
inc
cmp
nop
mov
add
jecxz
test
and
push
mov
outsl
cs
push
inc
ds
imul
fldcw
sahf
std
push
or
scas
cmp
scas
icebp
inc
cwtl
sub
ss
mov
push
addr16
addb
div
ja
push
mov
add
or
push
push
testl
fmuls
push
inc
push
hlt
mov
adcb
or
xchg
shl
neg
lret
dec
cmc
jg
mov
mov
push
mov
int
mov
idiv
lret
gs
mov
xor
and
mov
in
in
push
inc
mov
pop
jo
add
lret
sub
push
and
pop
adc
test
test
inc
das
sub
ror
jmp
push
ljmp
test
popf
aaa
popa
cli
or
in
fwait
pop
xlat
dec
test
and
dec
mov
sub
jl
sbb
mov
inc
and
call
xorb
dec
imul
and
jecxz
or
popf
adc
pop
bound
enter
out
mov
jo
rcrb
push
sub
into
cwtl
aaa
adc
hlt
sahf
jnp
add
lea
sti
or
pop
rcrl
xor
inc
push
fnclex
mov
test
and
inc
dec
mov
inc
mov
lahf
repz
popa
jmp
gs
inc
mov
cmp
cmp
fdiv
outsb
icebp
pop
js
sahf
lea
push
pop
subb
loope
sub
cmp
push
aad
push
xorl
pop
adc
es
jae
lahf
jne
pop
popf
add
mov
mov
xchg
sub
mov
lods
mov
int
stos
dec
test
cmp
jl
push
and
fiadds
test
iret
out
sbbb
xor
enter
imul
push
pusha
dec
push
rolb
or
inc
dec
fdivs
arpl
jne
mov
lods
aas
clc
sub
clc
fsubs
mov
adc
repz
in
jecxz
push
pushf
shr
fneni(8087
adc
notl
add
dec
xorl
sub
mov
neg
push
je
ljmp
test
mov
movb
jbe
iret
inc
mov
lahf
inc
adc
dec
inc
add
icebp
jns
stos
jmp
xlat
mov
ret
js
in
sbb
loope
mov
rcll
popf
push
mov
cld
cli
out
cmp
outsb
fs
mov
not
adc
movsl
pop
add
jecxz
cmpsl
lea
mov
xor
mov
sbb
imul
xor
enter
loope
movsl
inc
cmp
repnz
push
js
and
test
sub
dec
jmp
mov
push
jmp
mov
dec
clc
mov
sbb
loop
mov
ror
adc
imul
inc
lcall
mov
push
push
mov
inc
adc
mov
jecxz
mov
xor
adc
adc
cli
repz
fstps
adc
gs
pop
mov
jmp
dec
mov
inc
aas
fwait
cmp
sahf
or
push
ss
ret
xchg
xchg
jbe
pop
pop
sbb
filds
jle
push
pop
std
mov
ljmp
andb
cs
push
movsb
mov
mov
sti
cli
and
dec
mov
std
cs
insl
xchg
fwait
xor
lahf
rclb
and
inc
popf
sub
in
mov
int3
push
daa
pop
push
stc
add
mov
in
jno
push
je
push
sub
mull
inc
shlb
loopne
add
jne
pop
mov
xchg
out
cmp
push
mov
insl
pop
cmp
mov
in
pushf
aaa
mov
mov
and
out
sbb
movsl
aam
mov
nop
mov
out
pop
or
push
fs
or
lods
fistl
lds
stc
ja
dec
push
push
cld
inc
sbb
dec
adc
addl
mov
fcmovu
add
aaa
sub
js
es
cmp
push
dec
pop
xchg
jnp
hlt
push
or
xor
into
lahf
xchg
fwait
sub
jo
cmp
call
shrl
test
fmull
jmp
sub
ret
ficompl
pop
push
sti
add
cltd
mulb
mov
xor
stos
sti
mov
dec
fistl
jmp
les
data16
or
push
inc
mov
in
enter
sahf
xchg
gs
fs
enter
mov
fdivrl
jnp
dec
inc
inc
outsl
mov
sub
pop
test
mov
jo
roll
lahf
into
mov
adc
aas
pop
xchg
jp
add
adc
jno
cmp
push
daa
xchg
cld
jl
in
adc
cmc
and
pop
or
test
cmp
ror
or
jmp
dec
pop
pop
jne
daa
push
add
mov
dec
xchg
cs
hlt
cmp
cltd
outsb
push
and
xor
fdivr
fimuls
lock
sbb
cmp
scas
mov
mov
aas
cmp
mov
fimull
xchg
scas
mov
std
mov
sbb
flds
les
mov
dec
push
xor
push
cmc
aam
rcr
loop
add
and
mov
jge
popf
sarl
mov
lcall
adc
dec
cmp
pop
inc
rorl
lds
mov
adc
jl
mov
pop
cmp
jle
push
adc
cwtl
sub
cltd
cmp
dec
add
aaa
xchg
xor
mov
frstor
jmp
sub
adc
adc
scas
add
mov
push
and
jne
lret
pop
or
xchg
add
lret
or
cmp
xor
inc
jnp
jo
sbb
xor
sub
hlt
daa
pop
das
cmpsb
stos
jmp
xchg
mov
jnp
and
shlb
inc
insb
mov
fnstcw
stos
dec
cmp
adc
scas
enter
adc
jmp
ret
loop
out
rcrb
imul
jns
push
cmpsl
popa
fsubs
jb
rcll
ror
push
bound
mov
pop
mov
dec
ljmp
mov
inc
mov
movsl
mov
xorl
shl
in
cmc
push
ret
cmpb
dec
push
dec
insb
mov
inc
addl
clc
and
insb
popa
addr16
loopne
pop
stc
je
icebp
mov
add
pop
push
nop
out
loop
out
aas
mov
adc
inc
push
mov
movsl
popa
jp
fistpll
push
popa
adc
push
leave
les
mov
inc
mov
or
jne
xchg
scas
hlt
data16
test
or
xor
push
mov
nop
inc
jae
cmp
inc
arpl
in
mov
mulb
clc
in
xchg
lods
cmc
out
add
das
push
jg
pop
call
stc
repnz
ja
icebp
fnstsw
ss
fdivp
inc
pop
in
cld
cltd
sbb
or
in
das
sbb
shll
lods
fildl
inc
mov
xchg
sbb
dec
fsubrp
inc
loop
adc
lock
sbb
push
sbbb
loopne
lret
pop
cli
mov
iret
push
rcr
xchg
mov
aam
push
sti
mov
gs
add
sbb
xchg
xchg
dec
jp
sti
pop
adc
xchg
dec
mov
push
cld
add
test
push
imul
xor
lret
test
jl
cmp
fwait
push
cmp
sbb
jmp
dec
xlat
push
push
sbb
adc
dec
fists
sbb
sbb
push
lahf
xchg
cs
add
ja
lds
cwtl
push
xor
mov
das
add
xchg
fimull
sti
ss
dec
push
jl
cmove
js
imul
les
mov
mov
sub
stc
push
out
pop
jp
rcll
push
lcall
mov
addr16
data16
jno
xchg
push
loope
scas
std
sub
jecxz,pn
add
xor
lods
mov
inc
repz
rcr
sti
push
jns
movsl
mov
test
loopne
leave
into
sbb
mov
cmp
push
mov
lahf
adc
popf
lret
faddl
in
cmp
sti
fnstcw
lods
pop
icebp
cltd
jmp
das
jne
jge
les
dec
mulb
cltd
mov
add
push
cs
enter
sub
shlb
pop
jl
xor
push
mov
pusha
cltd
push
stos
pop
inc
push
xor
adc
push
adc
jnp
pusha
mov
testb
pop
fiadds
mov
jnp
scas
das
push
push
or
pop
add
dec
mov
sahf
sub
push
aam
push
aam
and
les
dec
daa
daa
pop
mov
les
fwait
push
pop
jnp
loop
xchg
fldt
pop
aaa
mov
dec
cmp
test
fwait
test
add
or
insl
and
int
decb
and
imul
and
inc
mov
cmp
dec
je
insb
leave
pop
inc
ljmp
xchg
repnz
loopne
or
imul
or
mov
inc
jnp
sub
insb
sub
add
ljmp
popa
loop
mov
out
xor
jmp
rolb
mov
repz
cld
and
cltd
mov
push
fisubrs
xchg
xlat
arpl
adc
not
cmp
sub
push
sub
repz
aam
jl
inc
pop
adc
lods
out
and
xchg
sahf
cmp
cmp
jnp
xor
in
push
jns
test
ret
xchg
std
adc
dec
jg
mov
je
or
add
jb
inc
pop
mov
jbe
mov
add
mov
mov
jle
pop
mov
pop
dec
or
push
adc
add
add
xor
mov
or
ret
push
cmc
pop
sub
insb
ja
fs
mov
mov
cwtl
cmp
sarb
fs
adc
roll
push
or
in
addr16
pop
add
inc
and
xlat
cmp
cltd
in
mov
dec
repnz
fxrstor
cmp
shll
or
mov
shll
mov
mov
cmp
inc
jnp
pop
pop
out
mov
insl
dec
dec
push
roll
das
mov
jno
or
test
imul
out
mov
inc
out
jbe
les
bound
pop
or
push
xchg
flds
ljmp
clc
movsl
push
cmc
out
test
cmpsl
pop
dec
lds
sub
inc
add
mov
push
sub
ss
mov
dec
xchg
push
add
mov
xor
xchg
adc
clc
mov
out
add
pop
or
mov
sub
ja
fwait
std
cmpl
sti
inc
sar
inc
jne
push
dec
inc
cltd
adc
lret
push
cmp
sub
pop
xor
pop
pop
and
pusha
inc
in
pop
mov
js
ds
mov
jb
xchg
push
inc
lods
push
rolb
add
mov
push
adc
testb
scas
test
mov
arpl
or
xchg
lret
pop
jo
push
loop
mov
sbb
not
and
mov
mov
dec
adc
mov
xor
test
lahf
jecxz
cmp
adc
jmp
push
daa
fisubrl
aaa
out
dec
ds
leave
insb
div
xor
cwtl
and
add
out
testb
pop
lea
out
cld
jb
push
push
push
loope
sti
je
enter
push
fldenv
mov
hlt
bound
jge
adc
lret
mov
rorb
mov
pusha
pop
pushf
xor
daa
mov
lahf
into
mov
incl
or
mov
add
test
mov
arpl
bound
adc
int3
inc
xchg
shl
sarl
cmp
dec
jns
jmp
aad
pop
or
jmp
mov
sahf
sub
rclb
inc
shl
dec
adc
sti
or
loope
add
jb
dec
adc
es
clc
mull
sbb
lahf
or
add
inc
or
pop
dec
clc
andl
lods
sbb
rol
push
or
movsb
jnp
cmc
and
out
mov
aas
movsb
pop
fstl
sti
test
push
pop
jg
and
test
dec
jmp
push
and
shr
in
mov
jge
push
cs
cli
pop
inc
in
daa
sarb
ja
inc
das
outsl
nop
cmp
das
mov
and
push
push
movsl
and
mov
jecxz
ljmp
in
testl
sub
ds
lret
orb
outsl
push
dec
mov
shlb
sbb
fwait
pop
or
cmp
cltd
add
jle
roll
and
or
jno
lahf
cmp
arpl
unpckhps
test
push
aam
sub
test
mov
bound
or
ljmp
sahf
xchg
aas
sbb
hlt
push
movl
movhps
imul
movl
fpatan
ficomps
and
lret
mov
dec
int
inc
inc
xor
repz
fcomi
cltd
or
mov
jge
fwait
jle
testl
add
ret
and
int
inc
jns
sub
lcall
cmp
test
rorb
jbe
mov
insb
stos
pop
call
mov
je
in
dec
mov
int3
iret
aam
pop
lcall
gs
test
xor
xchg
test
gs
adc
sub
push
repz
push
jecxz
mov
inc
negb
pop
sbb
test
xchg
sub
int
daa
cltd
in
jge
js
pusha
leave
lds
jge
xchg
xor
pop
add
dec
mov
cmc
dec
orb
aaa
aas
into
add
xor
stos
adc
xchg
inc
and
cmp
lods
xchg
push
jne
call
jmp
icebp
xor
xchg
or
mov
add
and
xor
es
push
pop
pop
inc
out
arpl
orl
pop
cmc
xchg
cltd
lods
cli
sahf
xchg
mov
adc
scas
jne
or
cmp
iret
xor
in
pop
mov
dec
shlb
cwtl
pop
nop
push
adc
mov
cmpsb
mov
xor
add
lods
mov
rcrb
cmp
mov
inc
icebp
out
cli
push
and
or
fildl
rolb
test
push
or
mov
stc
lock
mov
dec
clc
mov
daa
pop
pop
add
mov
jae
dec
sub
adc
inc
sbb
int
xchg
mov
sbb
fisttps
mov
dec
sub
push
inc
add
lcall
mov
cld
aaa
imul
push
aad
inc
dec
xor
xchg
cmpsb
mov
pop
loop
mov
jp
fldl2e
mov
and
add
lahf
sahf
xor
sub
sbb
inc
mov
in
push
cwtl
out
or
push
pop
jl
test
inc
addr16
inc
cmp
hlt
inc
cmp
push
stos
cmp
lds
ret
cwtl
sbb
dec
bswap
sar
xchg
lea
aad
sub
out
sub
xchg
xor
adc
test
mov
sahf
inc
pop
xchg
jp
divl
dec
nop
fcom
rclb
push
push
ljmp
pop
in
inc
add
inc
hlt
mov
xlat
jne
xchg
push
pop
adc
popa
adc
cwtl
jl
and
pop
lods
push
les
cmp
clc
hlt
stc
ds
into
popa
xchg
fistpl
filds
imul
xor
sbb
lods
inc
repz
ljmp
hlt
daa
ds
dec
jne
fucom
xor
adc
xlat
scas
pop
fwait
mov
inc
in
lds
popf
inc
mov
xchg
es
daa
adc
out
cld
mov
cmp
fwait
add
xor
add
icebp
mov
orb
add
or
decb
jae
push
xlat
rolb
ficoml
xor
pop
xchg
lds
or
jmp
ljmp
push
lods
dec
jmp
fsubrl
ret
aas
outsb
jbe
jp
pop
sbbb
loop
out
leave
lahf
negl
cld
pop
mov
push
jns
mov
mov
mov
add
lds
and
adc
cs
cs
test
sbb
repz
cmc
not
in
push
jp
sbb
arpl
add
ss
lret
stos
xchg
sarb
nop
xchg
mov
and
nop
and
outsb
push
jge
xchg
in
sahf
fwait
ss
orl
fnstsw
scas
jmp
jp,pt
insb
iret
cmp
push
mov
cmpsb
pop
nop
div
fsubrs
mov
and
inc
xchg
rol
test
lahf
sahf
add
adc
addr16
sbb
push
add
test
push
gs
jbe
pop
inc
fidivs
test
dec
aam
add
mov
jb
adc
bound
loopne
mov
ret
sbb
sbb
push
test
cmp
xor
adc
jno
xor
cltd
pop
loope
imul
push
and
es
lods
pop
sbb
dec
pusha
mov
in
jmp
out
sbb
mov
and
and
rcr
or
cmpsb
int
pop
lahf
xor
je
idiv
jo
mov
sbbl
fdivs
xchg
xchg
inc
cli
out
mov
clc
push
push
ficoms
push
fstps
icebp
cltd
pop
push
pusha
mov
dec
jecxz
in
xor
loope
out
aad
pop
pop
inc
inc
dec
push
sub
mov
gs
xchg
and
in
xchg
xor
mov
adcl
pop
and
inc
pop
jecxz
sbb
js
fsts
sbb
dec
repz
test
popa
xchg
out
or
iret
lods
adc
nop
jno
jnp
fs
nop
add
out
fwait
xchg
pop
popf
cld
aaa
and
jl
adc
push
or
push
imul
sbb
pop
in
cmpsb
out
cltd
cltd
jns
push
push
gs
insb
stc
jp
jnp
adc
arpl
dec
ljmp
addr16
roll
pop
cmp
or
jno
inc
mov
clc
inc
fnstsw
mov
icebp
mov
mov
jbe
loope
xor
mov
dec
das
mov
add
icebp
out
push
pop
mov
sub
call
insb
lea
inc
pop
add
xchg
xchg
lods
imul
dec
lods
je
imul
fisubrl
pop
cltd
stos
fcmovu
jns
imul
xchg
fcompl
mov
pop
cli
cmp
pop
jnp
loope
das
and
jb,pt
add
arpl
xor
sbb
movsb
icebp
push
lds
xchg
and
je
shl
leave
hlt
mov
les
mov
pusha
popa
aas
mov
stos
push
insb
adc
loopne,pn
daa
push
cmp
cli
js
mov
push
inc
lret
jb
iret
mov
and
pop
sbb
shl
lods
lret
dec
jmp
and
or
nop
int
lea
popa
cmp
jecxz
sub
dec
imull
sub
cmovs
cmp
loop
add
lods
out
cld
cmp
aaa
jl
call
rcr
adc
pop
insb
sbb
hlt
mov
adc
jb
xor
rcl
sbb
dec
ss
inc
in
inc
push
mov
adc
sarl
xchg
push
xor
dec
xchg
xchg
scas
and
lea
dec
or
mov
inc
stc
popf
out
xlat
mov
mov
inc
lods
movsb
xchg
icebp
rcl
dec
mov
mov
or
adc
icebp
jecxz
lea
dec
jno
mov
mov
test
ficomps
mov
insl
push
lods
dec
mov
popa
mov
sbb
cmp
mov
sar
push
and
jp
xor
jo
into
and
movsl
mov
push
pop
or
mov
shr
iret
mov
mov
pop
fisttps
push
xor
add
subb
cmp
inc
fwait
jnp
pop
stos
push
out
fmull
test
mov
or
cmp
jne
insb
adcl
iret
mov
inc
pop
sub
xchg
lods
scas
lcall
rolb
push
sti
jl
ret
jle
and
pop
adc
cmp
sbb
xchg
sub
ljmp
incb
xor
fsubrl
mov
mov
daa
movl
shl
push
fwait
lods
sub
test
mov
jnp
push
rcrl
filds
cmpsb
sbb
push
stos
sub
lods
xchg
inc
iret
push
add
loop
mov
cltd
dec
mov
pop
ret
popw
xor
sub
xchg
mov
push
ret
jl
dec
insb
in
sbb
xchg
push
inc
outsb
cmp
notb
cld
shll
fs
repnz
push
jno
inc
sti
pop
pop
movsb
push
sub
pop
push
jl
dec
dec
add
cltd
jno
jbe
adc
sbb
subl
rclb
mov
dec
aas
loope
dec
push
orb
dec
adc
cmpb
sub
jge
out
adc
out
inc
aad
xor
mov
cmpsl
aad
mov
mov
push
insl
xchg
stos
out
fsubl
movsb
add
insl
jecxz
insl
jg
cmp
fidivs
mov
sete
pop
jne
push
jmp
les
mov
pop
dec
or
aam
cmpsl
sbb
mull
cmpsb
add
mov
fsin
mov
aas
ljmp
cmp
add
pop
idiv
or
cmpl
jecxz
lods
xor
and
sbb
or
add
inc
cld
pop
pop
bswap
pop
sub
jmp
lahf
imul
inc
or
or
sub
addb
mov
rcrb
and
in
cmpsb
repnz
mov
push
insl
xchg
pop
jmp
aaa
mov
push
icebp
dec
xchg
sub
out
xchg
xlat
xchg
stc
push
bound
mov
push
es
gs
mov
push
mov
mov
lret
or
outsb
test
adc
daa
push
or
dec
test
mov
jno
clc
jmp
cwtl
jg
pop
iret
int3
cmp
sbb
push
mov
or
hlt
popa
outsb
divl
sbb
in
inc
ficoml
jo
fstpl
ja,pt
mov
aaa
add
out
mov
in
pop
in
ds
shrb
pop
cwtl
fs
rcrb
xchg
adc
in
shlb
mov
inc
push
jns
mov
mov
mov
cmp
dec
ds
dec
xlat
or
aaa
fdivrs
cmpsl
sti
nop
mov
and
xor
adc
sub
fsts
adc
pop
fwait
sub
fcompl
shll
icebp
inc
cmpsb
pop
shlb
inc
xchg
js
fbld
rorb
les
lods
dec
in
sub
jmp
std
xchg
adc
test
mov
jl
les
mov
xchg
loope
ljmp
jns
aaa
mov
mov
jp
repnz
pop
addr16
test
mov
mov
jnp
mov
mov
mov
shr
pusha
pop
out
mov
popa
scas
in
hlt
dec
mov
dec
push
jp
fisubs
sub
and
xchg
in
mov
stos
push
insb
mov
and
in
cmc
insb
inc
sub
es
mov
add
xorl
mov
fldcw
xor
or
add
roll
sub
aas
fdiv
les
sahf
rcll
dec
jae
movsb
gs
lahf
loop
fs
cwtl
cltd
dec
sbb
and
mov
imul
cmp
mov
jns
das
sbb
mov
push
inc
jmp
out
jle
loop
dec
popf
pop
sub
xchg
and
xchg
dec
mov
test
in
adc
or
jno
jne
dec
lea
loope
data16
pushf
test
out
push
outsb
scas
js
loopne
xor
sbb
xchg
adc
es
mov
mov
xchg
pusha
jmp
lock
xchg
ret
movsb
decl
int
cmp
xor
jl
jp
insb
inc
popa
clc
imul
cmp
mov
mov
or
mov
movsl
add
fists
aam
mov
pop
and
cmp
push
jp
fwait
nop
lret
sbb
jae
jp
sub
shll
scas
mov
sbb
cmp
jns
xchg
addr16
iret
adc
aad
or
out
js
dec
lret
or
inc
fistl
dec
out
xor
ja
sbb
add
xchg
mov
arpl
push
and
pop
rcll
xchg
mul
insb
in
adc
into
std
lcall
xlat
loopne
jns
hlt
sub
ja
xor
inc
cltd
add
xor
mov
push
jns
addr16
imul
xchg
addr16
pop
outsb
xchg
stos
mov
nop
fwait
cmp
and
add
icebp
sub
and
inc
xchg
fldt
mov
push
and
push
cmp
test
jl
nop
daa
negl
lock
cli
xchg
mov
sbb
push
mov
rcrl
ljmp
xchg
sub
pusha
mov
adc
sub
test
lcall
mov
ja
jno
lea
lds
or
fwait
xor
sahf
out
sub
cmpsb
sub
fs
ja
jo
jmp
push
cmc
fwait
lods
mov
loopne
mov
nop
sub
add
dec
sub
ret
inc
idivb
xchg
add
lret
jg
xchg
std
and
cmp
sub
push
pop
cmp
push
js
sub
mov
lea
add
ret
sahf
arpl
xchg
mov
imul
jle
dec
in
and
xor
and
shrl
push
xchg
mov
push
in
cltd
jo
or
jge
idiv
mov
std
rolb
aaa
das
sbb
ljmp
push
je
push
bound
test
adc
test
cltd
sub
and
or
or
fs
mov
mov
mov
ficomps
popa
inc
jae
cmp
loop
inc
adc
sbb
mov
adc
jae
ljmp
fisttpl
scas
mov
pushf
mov
fidivrl
mov
or
insl
aaa
mov
imul
push
mov
xor
aad
in
fstps
lods
int
nop
mov
or
jae
enter
mov
jne
and
lcall
sbbb
push
popa
mov
xchg
sti
mov
add
fcoms
inc
cld
scas
add
jne
pop
lods
mov
adc
inc
xchg
ficoml
mov
loopne
push
pop
push
xchg
mov
sbb
cmpsl
mov
into
sbb
loope
ss
bound
sbb
mov
dec
sub
push
cld
sub
roll
pop
outsb
sahf
psadbw
rol
imul
subl
lods
push
ss
je
mov
sbb
std
and
mov
pop
mov
dec
mov
jge
mov
test
push
sahf
dec
inc
inc
jp
xor
test
jae
jmp
adc
add
pop
or
mov
sub
flds
adc
out
sbb
repz
les
ret
jae
mov
ja
inc
cmp
mov
pop
je
xchg
fcomps
std
jnp
fnstenv
aad
jbe
add
stos
sbb
call
sub
lret
xor
lea
aas
cmp
icebp
push
inc
inc
insl
pusha
push
ljmp
pop
cli
xchg
outsl
out
hlt
lcall
xor
andb
stc
rcrb
movsl
aaa
int3
outsb
mov
adc
shrb
test
ret
mov
fdivs
ret
sbb
or
shlb
pop
jne
movsl
data16
jae
add
addb
stc
xor
das
and
push
inc
push
xor
sbb
xchg
push
in
push
push
jbe
add
andl
sbb
mov
xor
xor
call
in
ja
das
pop
mov
dec
cltd
test
mov
add
ret
js
sub
jg
inc
loope
mov
popf
push
call
jno
sbb
scas
mov
xacquire
pushf
dec
pop
cmc
push
jp
in
aaa
dec
push
dec
insl
rcr
lods
xchg
test
rol
mov
add
adc
sub
jno
mov
pushf
fsubr
insl
inc
pop
andl
mov
xchg
scas
mov
jo
pop
xchg
std
inc
xchg
ret
or
cld
mov
rolb
cmpsl
inc
mov
inc
mov
lea
pop
mov
scas
enter
iret
lret
sbb
mov
cmc
jmp
daa
cmpsl
out
cmp
push
cmp
pop
out
xchg
outsb
xor
and
jne
iret
pop
rcll
dec
sub
push
scas
inc
shrb
xchg
fmull
imul
ja
in
loopne
add
lret
in
sub
loopne
loopne
xchg
mov
or
inc
or
pop
mov
out
sbb
pop
adc
shlb
xchg
rcll
dec
mov
sbb
scas
sti
stos
fimull
or
lcall
ljmp
inc
sub
push
sbb
push
aaa
test
and
fadds
push
lds
inc
dec
addl
int3
or
sbb
nop
push
faddl
jle
dec
mov
out
add
stc
sbb
mov
lret
paddd
mov
lock
pop
adc
das
xor
cmpb
add
xchg
mov
jmp
repz
push
dec
ds
mov
adc
dec
fimull
out
jp
test
mov
and
aam
mov
dec
sub
mov
imul
xchg
das
cmp
dec
xchg
cmp
xor
adc
mov
add
movl
sub
push
sti
mov
sbb
xor
aaa
or
pop
push
shlb
pop
jmp
in
pop
and
pop
fisttpl
sti
adcl
xor
mov
mov
addr16
add
sarl
fs
out
cmpsb
push
pop
xchg
aam
xor
push
into
test
rcrb
int3
xchg
jle
jg
sub
out
mov
cli
sub
inc
gs
movsb
pusha
jnp
mov
cmp
sbb
and
and
sub
mov
adc
cmp
sbb
fidivs
incl
fstpt
push
inc
pushf
jmp
les
shrl
shrl
enter
add
scas
pop
nop
call
into
test
pop
in
inc
int
aas
mov
xorl
add
negb
fidivl
cmp
or
mov
lret
sub
dec
es
mov
cmp
and
cmp
test
cmp
movb
xor
shl
cli
pop
sbb
xor
mov
push
fisubrl
jno
popf
mov
push
icebp
mov
mov
lods
loop
push
js
xorb
sbb
lahf
mov
gs
pop
push
in
popa
cld
call
cmc
daa
idiv
addb
sub
push
bound
xchg
js
push
pusha
stos
fisubl
cmp
add
pop
xchg
pop
adcl
cmpsb
iret
fidivl
cld
sbb
jp
mov
jno
or
inc
cs
in
scas
movsl
sbb
in
lods
bsr
inc
add
enter
jg
pop
cltd
and
or
sbb
pop
sbb
sub
jge
xchg
jg
push
add
cmp
adcl
insl
shr
jp
ljmp
jle
xchg
add
fcoml
imul
jno
stc
mov
add
xchg
pusha
movsl
hlt
sahf
dec
inc
pop
mov
dec
mov
pushf
lods
aam
sbb
dec
pop
dec
paddw
push
mov
neg
jne
xchg
popf
idiv
lods
insl
insb
pop
push
dec
xlat
movsb
jmp
ja
fs
imul
adc
mov
in
fisubrl
in
mov
mov
pop
into
cmp
inc
dec
cs
rcr
jl
adc
lods
in
sub
stc
scas
cld
adc
xchg
fsubrl
mov
push
ret
cmp
in
sti
outsl
add
movsb
dec
in
dec
xlat
or
aam
adc
add
rep
push
stos
cld
in
mov
mov
stos
push
add
out
aaa
out
mov
sahf
jge
mov
push
mov
push
lcall
fistps
daa
xchg
pop
lcall
cmp
dec
shrb
xchg
negl
aaa
jo
jnp
ja
loope
imul
mov
mov
sbb
jno
and
inc
rcr
adc
pop
out
or
lahf
mov
adc
mov
dec
fiaddl
aaa
shlb
repnz
adc
push
enter
and
mov
push
mov
call
cmp
lret
sub
out
pusha
imul
mov
adc
sbb
movsb
pop
push
cmp
aas
repz
xchg
jne
ljmp
pushf
repz
jo
sbb
mov
clc
push
mov
xchg
fwait
xchg
cmp
mov
orl
in
push
add
fnstsw
loope
sub
cld
and
mov
xor
mov
cld
aam
xchg
in
shrl
pop
dec
sahf
cmp
enter
cli
and
cmp
leave
ret
divl
repz
cli
inc
cld
ds
pop
pop
push
orl
test
scas
mov
xchg
das
shrb
xchg
pop
jl
xchg
jl
pop
inc
fsubl
test
cmp
mov
xchg
cmp
cmp
rcrb
lea
enter
hlt
cmpsl
mov
lds
cli
pcmpeqd
imul
jp
jns
movsb
inc
sahf
inc
lods
mov
lods
mov
adc
cs
jecxz
cmp
and
stc
test
or
jo
gs
popa
in
and
xchg
mov
sbb
andb
sub
fcomi
xor
shll
pop
js
mov
jae
mov
sbb
jp
cmp
ja
stos
push
lock
std
shlb
mov
xchg
jae
sub
adc
loope
shll
testb
jle
fcoms
push
or
inc
dec
aas
xor
fisubs
inc
cmp
sbb
dec
dec
andb
fs
ret
out
loope
cwtl
jmp
push
loop
movsl
push
xchg
pop
jp
cwtl
jecxz
repnz
in
int
sub
xchg
movsl
in
mov
addb
sahf
cmpb
loope
mov
int3
jo
clc
pop
mov
pop
and
ss
xchg
lods
add
inc
jnp
ds
and
sub
scas
xor
shrb
or
push
nop
cltd
jnp
dec
push
ret
inc
loopne
mov
dec
lahf
mov
and
or
jns
lock
out
ret
xlat
push
xchg
stos
sub
lret
pusha
scas
fs
jmp
or
pop
sarb
mov
sbb
mov
pop
in
fldt
xchg
xor
adc
mov
dec
jb
imul
mov
push
cmp
xor
cmp
push
push
mov
push
fdivl
jno
push
cmp
xor
push
xchg
aam
or
shll
ja
push
imul
cmp
cmpsb
mov
lock
loope
movsb
xor
mov
negl
mov
stc
mov
mov
int
lret
push
mov
pop
sbb
cmc
push
lods
fwait
in
dec
mov
cwtl
mov
mov
jmp
jmp
mov
mov
enter
push
jg
out
mov
mov
jg
fadd
sbb
sub
push
imulb
push
jl
insb
adc
pop
inc
dec
enter
aad
icebp
mov
inc
test
movsb
push
pop
jmp
jnp
pop
insb
cmp
or
cmp
lcall
adc
mov
ds
inc
jecxz
out
xlat
ret
push
testl
sarb
sub
dec
loop
roll
mov
insb
ja
fisubrl
cltd
push
dec
jo
xchg
ss
or
loope
jg
mov
negb
cmc
nop
repz
mov
pop
dec
int3
push
sub
outsb
jbe
xorl
fbstp
test
dec
lods
xor
cmpsb
mov
inc
bound
int3
mov
or
sbb
push
push
testb
cld
outsl
stos
dec
sbb
dec
cld
inc
push
stos
mov
leave
adc
jae
aam
daa
mov
incb
sub
xchg
insb
in
jmp
cmp
jecxz
leave
mov
in
push
push
and
fwait
or
sti
push
sub
sbb
cmp
dec
lea
xorb
sbb
aam
xchg
imul
mov
icebp
lods
dec
pop
mov
faddl
in
sbb
lea
das
ljmp
add
mov
add
and
xchg
xor
or
sbb
das
imul
outsl
les
scas
in
fcmovnb
xor
mov
std
scas
xor
test
dec
jmp
jae
and
repnz
enter
cmc
mov
pusha
movsl
dec
adc
fs
jae
lds
sti
xchg
push
jns
pop
orb
stc
jle
mov
adc
or
dec
and
cmpb
adc
dec
scas
pop
push
sub
sti
jb
cmp
fbstp
enter
pop
lahf
enter
xchg
mov
test
xor
rcr
sub
jo
stos
xchg
pop
lods
sub
das
or
bound
shr
add
sub
je
dec
xchg
fcomps
mov
adc
xchg
ror
imul
lea
nop
and
adc
clc
adc
mov
and
bound
sbb
adc
popa
lret
lcall
sbb
arpl
pop
cmp
and
dec
cld
int
mov
clc
bswap
xor
sub
add
sbb
cmc
xor
add
jae
sub
or
aad
into
lret
pusha
lret
inc
inc
mov
jg
mov
mov
insl
test
addr16
xchg
cmpb
pushf
loop
cld
mov
mov
xchg
sub
outsl
or
stc
popa
and
lock
xchg
pushf
xchg
jmp
adc
or
pop
ffree
orb
xchg
mov
sub
out
test
xchg
andb
loope
mov
mulb
mov
aas
roll
mov
dec
push
sarl
pop
fidivs
aaa
xchg
sub
xchg
jbe
xor
cmpsb
cmp
outsb
mov
push
test
sahf
xor
jae
mov
in
fcompl
mov
adc
sbb
into
inc
xor
or
and
repz
fstp
sbb
rcrl
das
test
sahf
ja
shr
push
adc
icebp
xchg
dec
mov
aad
cld
pusha
lret
inc
popa
repnz
push
addb
mov
repnz
jno
jbe
mov
rcll
jg
jo
test
out
push
nop
dec
decl
adc
ljmp
mov
les
mov
shrl
push
pop
pop
xchg
push
je
jl
int3
insl
xchg
mov
nop
xchg
xchg
lret
movsb
xchg
mov
mov
xchg
cs
sbb
lds
xor
dec
xchg
test
je
mov
push
and
outsb
mov
or
pop
mov
mov
mov
cmp
arpl
cmpsb
test
dec
mov
dec
daa
lahf
mov
aas
aam
cmpsb
jl
jle
cmp
mov
push
scas
dec
je
movsl
jle
or
jb
shll
push
ret
int
or
jecxz
loope
mov
addb
js
lds
xchg
cmp
std
lcall
jae
cmpsb
dec
xchg
fistpll
mov
bound
cltd
cmp
stos
xorb
add
dec
or
xchg
dec
cltd
frstor
adc
cmp
jp
xchg
icebp
mov
dec
inc
push
scas
sti
clc
jge
and
ffreep
daa
call
xor
js
ss
jp
mov
xor
xchg
loop
or
out
pop
sub
imul
stos
inc
sbb
mov
sti
ret
push
adc
mov
inc
fldl
xor
ljmp
inc
mov
lret
frstor
ret
push
mov
lock
or
jne
or
ficoms
or
mov
add
mov
and
test
dec
mov
repz
enter
adc
mov
or
rcll
and
pop
dec
ja
pop
lock
and
rorb
and
dec
int
jle
mov
cs
outsb
lods
push
sub
jo
push
mov
stos
insl
aad
sbb
or
out
mov
roll
sbb
int
cld
xchg
paddusb
mov
mov
jge
dec
std
xchg
pop
mov
cmp
xor
ds
stos
rcrl
dec
ret
mov
in
movsl
inc
add
jae
sahf
mov
ret
dec
arpl
add
dec
xchg
lods
mov
jecxz
loop
xchg
pop
cs
out
mov
in
push
add
cltd
jb
ss
xchg
jp
outsl
jmp
nop
leave
dec
clc
mov
lods
mov
bnd
cmp
jge
mov
and
insl
aad
mov
cmp
mov
fdivp
rcll
sub
pop
nop
sbb
stos
mov
movsl
scas
loopne
mov
vsqrtps
inc
call
popf
fwait
scas
test
sti
and
mov
inc
jmp
mov
in
cwtl
fwait
insb
xchg
mov
cmp
adc
or
ffree
testb
mov
add
fidivrs
lods
sahf
adc
leave
push
dec
hlt
sub
dec
pop
aaa
mov
stos
rcr
inc
testl
mov
cmpsb
jo
icebp
cli
sub
xor
inc
fbld
ret
inc
push
pop
out
ds
sub
xor
mov
jae
push
loop
and
cmc
jg
or
cli
pusha
leave
dec
sbb
adc
outsb
dec
das
lods
int3
xor
test
ret
jo
cs
lcall
fdivr
dec
xchg
ret
pop
adc
sarb
or
cli
and
fcmovnb
sub
sbb
dec
jnp
or
xchg
pop
inc
dec
cmp
push
ljmp
insb
int
jle
cmp
mov
outsl
sub
mov
and
mov
cmp
aaa
dec
dec
push
fs
mov
call
hlt
push
inc
push
mul
lds
pop
dec
push
add
movsl
add
repnz
jo
mov
xor
out
xchg
add
int
sub
or
xchg
lcall
les
cmp
jg
and
mov
pusha
mull
cmp
sbbb
aam
jb
sbb
mov
cmp
and
jp
inc
in
mov
xor
aas
fs
stc
pop
out
xchg
push
stos
xchg
pop
test
add
adcl
xchg
and
rorl
jnp
in
or
adc
sub
movsb
cmpsl
or
adc
icebp
mov
data16
jo
insl
push
lock
jge
out
pop
insl
in
inc
js
andps
push
jns
jecxz
popf
aam
xchg
mov
sbb
mov
bound
fucomip
sbb
aas
push
inc
xor
pop
sbb
les
or
jae
and
int3
inc
xchg
test
mov
rclb
inc
pushf
rcrl
movsb
adc
jecxz
fbstp
xchg
add
pop
add
out
push
mov
jg
mov
adc
out
jae
dec
popa
xor
inc
sbb
mov
popa
sbb
ficoms
sbb
ds
dec
into
fsubr
push
pusha
jge
test
dec
loop
mul
in
repz
das
mov
push
cld
popa
xchg
shrl
xchg
add
push
pop
pop
push
xchg
pop
cld
test
add
cmpsl
add
inc
rcrb
add
adc
dec
jle
in
rcrl
cs
inc
les
stos
test
pop
lcall
fucomip
loope
fs
rcrl
sbb
clts
inc
das
pop
sub
call
jmp
dec
negl
std
scas
mov
roll
and
xor
stc
rorl
stos
out
mov
rep
mov
icebp
es
into
pop
fisubs
pop
adc
testb
arpl
iret
not
je
sub
cmp
mov
cmp
daa
cmc
mov
loope
xchg
xchg
mov
shl
call
lea
dec
and
jne
fcompl
cld
mov
push
xchg
inc
jl
out
xor
push
add
fstpl
add
jne
dec
xchg
xor
dec
or
iret
cmp
mov
leave
mov
lcall
enter
jle
jns
jno
cltd
jbe
inc
or
in
and
jne
bound
lret
test
sub
jge
arpl
jl
inc
in
adcl
jp
sbb
pop
lret
jl
fsts
test
sbb
cli
cld
insb
das
adcl
mov
outsb
xor
push
rcl
aad
xchg
adc
loopne
fsts
xchg
into
jmp
push
lock
lods
shll
ds
fsubl
push
sub
addr16
mov
rcr
mov
adc
cmp
lahf
das
push
jae
adc
jmp
cmp
mov
mov
sbb
and
jo
mov
jo
cmp
jg
xchg
js
mov
pusha
inc
test
dec
xchg
cmp
fidivrl
out
mov
cs
mov
xorb
testb
cmp
or
mov
call
insb
add
test
xchg
xchg
xchg
inc
sub
jae
shlb
inc
dec
fiadds
popf
pop
inc
push
int3
rcrl
sahf
mov
xchg
mov
les
mov
cwtl
test
cmp
mov
push
adc
pop
xlat
xchg
xor
and
inc
and
jle
jns
mov
xor
or
sbb
mov
fwait
adc
mov
push
ljmp
out
jle
mov
xchg
leave
pop
das
aaa
sbb
pop
roll
mov
push
jne
movaps
jb
add
or
mov
jl
loope
aam
dec
cmc
xor
stos
sub
xchg
lods
fldenv
call
leave
idiv
lock
ljmp
inc
inc
cltd
mov
aas
fidivrl
mov
fwait
cmp
pop
mov
jmp
mov
xor
outsb
and
sub
push
adc
mov
mov
pop
pop
or
in
das
or
mov
xchg
neg
jbe
leave
rclb
add
shl
dec
cmp
movsb
aam
mov
in
stos
fnsave
add
lods
out
push
sub
xchg
push
shll
lret
arpl
repnz
mov
xchg
push
in
sub
jle
movl
xchg
aam
iret
fsts
fcmovnbe
xchg
xchg
sbb
test
cmp
loopne
lea
fisttpll
pop
mov
pusha
outsb
sahf
aaa
daa
sbb
loopne
gs
sub
pop
rorb
ss
aaa
out
lods
mov
pop
xor
sbb
loope
dec
mov
mov
pop
sbb
or
loope
mov
mov
mov
push
pushf
jle
mov
mov
imul
shll
jmp
pop
add
jnp
push
push
int3
sbb
jnp
es
in
jo
incb
arpl
hlt
and
push
lret
jo
in
push
int
data16
mov
inc
jne
sub
les
mov
dec
mov
in
roll
jb
cwtl
sar
int
fcoms
inc
inc
or
add
ret
loopne
outsb
jbe
fsubrl
jle
into
lcall
out
sbb
and
xlat
add
cmp
push
xchg
xor
mov
in
xchg
les
pushf
jo
data16
shll
pop
popf
adc
sbb
pop
movsb
or
jbe
mov
dec
or
insb
push
int3
and
xchg
movsb
jmp
pop
push
push
and
pop
push
dec
adcl
jns
mov
push
icebp
sub
sbb
sahf
jp
mov
test
dec
pop
movswl
aam
mov
ret
std
xchg
in
xchg
scas
mov
daa
in
enter
cmpsl
daa
fsincos
ljmp
std
mov
repz
mov
cmpsl
lret
movsl
mov
jne
aad
fildll
jg
mov
pop
push
call
rorb
iret
mov
mov
push
mov
int3
adc
inc
imul
cmpb
vpaddb
add
push
dec
adc
and
fisttpl
pslld
pop
pop
bound
imul
mov
adc
mov
xchg
add
scas
ss
add
in
push
mov
dec
negl
xchg
mov
mov
or
add
pop
sbb
jmp
and
in
mov
sbb
xor
repz
fs
das
adc
mov
sub
iret
imul
push
mov
mov
aas
add
incl
cmp
sbb
mov
push
orl
mov
or
sar
pop
in
mov
xchg
insb
lcall
mov
fiadds
testb
push
mov
add
pop
mov
das
mov
sbb
inc
jg
imul
ds
insb
cmovp
out
test
repnz
gs
cmpsb
test
rorl
xchg
push
xorb
stc
xor
addr16
xor
mov
cmpsb
pop
jb
adc
cmp
lds
pmullw
and
xchg
in
insl
adc
push
xchg
mov
insl
dec
out
cmpsl
cltd
stos
push
shlb
push
mov
pop
and
fisttpl
jle
add
out
je
sarb
sbb
pusha
sub
dec
movsl
repz
leave
shll
popf
cld
jecxz
jl
sub
sub
mov
or
xor
xor
repnz
or
mov
inc
hlt
and
imul
inc
sbb
jmp
jl
lods
cmpsl
js
cmp
je
cwtl
fidivrl
xchg
je
mov
mov
arpl
std
popf
xor
sbb
repz
stos
jmp
or
aad
mov
mov
push
mov
mov
sahf
xchg
add
es
nop
cli
adc
mov
xchg
fdivrs
dec
rcr
sub
gs
add
cmp
in
xlat
xor
sahf
popf
cmc
and
push
das
push
mov
repnz
jnp
adc
push
fiadds
addl
dec
shrl
loope
push
es
push
stos
push
in
mov
test
sub
aas
iret
sbb
inc
jo
lds
cmp
and
arpl
dec
loopne
dec
test
lea
loop
inc
lods
sbb
notl
notb
mov
pop
mov
mov
xchg
fisubl
or
js
sub
jmp
and
mov
pop
mov
and
jmp
cmp
add
loop
push
push
repz
sbb
xor
std
test
lods
lret
push
mov
adc
fidivrs
mov
xorl
stos
or
or
in
cmpsb
in
cmpsl
pop
jge
fbstp
fdivrl
jmp
mov
out
das
mov
pop
xor
mov
xchg
or
fs
mov
loope
enter
stos
fists
pop
sbb
sbb
mov
xchg
xor
mov
lds
and
jns
ljmpw
push
popa
and
in
inc
push
or
lret
jae
add
push
sarb
push
jl
mov
aas
add
test
inc
dec
mov
idiv
ret
inc
int3
loope
fs
xor
mov
pop
pop
rcl
pop
or
int
adc
push
add
movsb
adc
adc
je
scas
fnstcw
out
xorl
in
fmull
or
std
sub
pop
cs
icebp
into
or
jp
stc
pushf
pop
sub
cld
adc
cmc
push
or
mov
push
das
mov
mov
mov
cmpsl
xchg
push
shll
mov
and
das
flds
cmpsl
cld
sbb
outsl
lock
scas
cmp
pop
dec
iret
ficoml
pop
dec
push
lods
imul
mov
dec
pop
sti
add
mov
sub
rcll
xchg
clc
mov
inc
pop
or
jns
ret
and
mov
iret
das
test
pop
add
jge
mov
faddp
xlat
repnz
std
scas
or
ja
stc
stc
or
mov
mov
sahf
bound
js
jmp
cmp
push
xor
sarb
pop
mov
mov
lea
ss
sti
pop
jnp
pop
sub
int3
int3
jnp
jnp
stc
cmc
rcrl
xchg
scas
xchg
movsb
repz
inc
insb
jle
loopne
xchg
xchg
or
dec
inc
ror
mov
cltd
xchg
dec
mov
push
stos
mov
les
int3
mov
cmp
gs
mov
stos
call
xlat
inc
mov
lods
push
imul
loop
cltd
ja
addr16
cltd
cmp
add
pop
cmpsb
cmp
or
sti
jno
cltd
jns
pop
or
daa
sbbl
sub
es
mov
xlat
cwtl
mov
mov
mov
mov
or
cmp
cmp
ljmp
popf
mov
clc
cmp
insl
pushf
daa
mov
test
adc
inc
daa
fldcw
arpl
pop
aad
adc
jp
enter
out
and
add
pop
pop
cs
mov
push
out
add
pusha
sahf
rol
sub
inc
jns
cwtl
cmp
je
jmp
xor
or
scas
mov
fsubl
js
insl
cmp
jbe
negb
test
xor
in
cmp
xchg
xchg
xlat
jecxz
mov
xchg
pop
int3
jb
iret
dec
addl
push
sub
enter
dec
clc
in
jbe
push
idivb
pop
mov
loopne
and
arpl
sub
mov
pop
inc
xor
out
push
inc
jae
dec
out
cmp
xchg
ret
ret
ljmp
iret
jns
sbb
cmp
or
in
ja
hlt
lret
lds
sarb
sbb
dec
in
cmpb
cmp
repz
out
push
in
in
int
out
ja
xchg
fwait
sub
mov
imul
fdivrs
int
insl
insl
mov
mov
or
sarl
jp
js
in
jp
or
test
or
sub
mov
daa
or
jl
mov
leave
outsb
jbe
push
stos
aas
fcmovu
popa
mov
cmp
mov
dec
push
push
mov
pop
pop
jbe
push
cltd
push
pop
pop
movl
loopne
insl
mov
dec
mov
jmp
dec
adc
add
aaa
notb
sbb
dec
lds
in
cltd
xchg
adc
or
js,pt
test
jg
push
pop
xorps
je
pop
lahf
cmpsl
and
push
inc
adc
pop
xchg
inc
loopne
dec
mov
hlt
fdivrs
lock
repnz
leave
cmp
mov
in
push
inc
fs
xchg
shrb
push
cmp
lock
into
orb
jmp
add
xchg
pop
pop
push
arpl
inc
mov
jp
xor
jmp
sub
push
lcall
push
popa
loop
sti
outsb
sahf
inc
push
loopne
xchg
xchg
repz
mov
imul
dec
inc
push
xor
xor
jmp
xchg
push
test
repz
dec
pop
imul
pop
in
inc
cmp
mov
dec
daa
lock
mov
sub
jp
daa
stc
cmp
push
dec
xor
sbb
adc
xor
ja
ja
xchg
leave
cmpsl
and
xchg
push
inc
lods
pop
imul
fdivl
fstps
int
cmp
test
push
sbb
inc
call
aas
stos
mov
or
in
push
lods
shl
mov
xorb
cmc
adc
aad
sbb
xor
in
filds
rcll
adc
inc
jns
call
shlb
cmpsl
lods
rcrb
mov
int
lods
mov
dec
cmp
mov
sub
mov
in
fcompl
lds
inc
cmp
es
sahf
sub
arpl
adc
out
movsl
mov
repz
aad
add
loope
xchg
pop
stc
in
outsl
test
in
lods
lods
xor
mov
punpckhwd
xchg
mov
cmp
jle
cs
sub
repnz
imul
sub
xorb
fdivrp
and
and
or
rcr
lahf
lret
stos
lods
pop
enter
ret
fcoms
add
pop
pop
enter
sub
cmc
push
sahf
and
loopne
pop
mov
xor
andl
mov
xchg
pop
add
mov
icebp
fildll
clc
out
jmp
aaa
pushl
addr16
adc
push
mov
leave
dec
and
aam
pop
repz
imul
repnz
pop
pushf
mov
push
push
sub
aaa
sbb
mov
pushf
ret
jge
jo
loop
adc
pop
mov
jg
cmpb
mov
cmpsb
pop
shll
movsl
dec
pop
push
jo
repz
ljmp
adc
dec
sub
lock
scas
out
rcl
popa
les
add
ret
jno
mov
mov
movl
scas
movsl
jecxz
sbb
imul
in
xchg
aaa
mov
ss
das
dec
push
fsubrl
add
adc
pop
cmp
or
lock
mov
loopne
sbb
xchg
inc
add
sti
in
unpcklps
in
adc
push
and
cmp
ss
sti
cld
cmpsl
adc
jge
call
cltd
fadds
jne
add
loopne
fs
pop
sub
cmp
lds
cmp
mov
lahf
adc
dec
jbe
mov
xor
and
sub
push
push
xlat
add
flds
fstl
mov
shlb
xchg
xchg
in
enter
push
fiaddl
and
rcr
sbb
sub
pop
cmp
mov
rolb
mov
in
fidivrs
dec
and
jp
push
scas
jnp
jecxz
cmpl
mov
sbbl
pop
inc
dec
das
fwait
lds
addl
jo
mov
sbb
fldenv
xlat
fimuls
aaa
push
pop
imul
sub
aam
sub
mov
hlt
or
testl
mov
lods
mov
inc
sub
loope
cmp
sub
pop
adc
xchg
jmp
mov
hlt
data16
push
frstor
add
popf
ret
filds
std
mov
adc
addr16
aad
pop
mov
fstpl
ds
jae
jp
pusha
in
in
xchg
pop
bound
jne
push
test
pop
inc
adc
lds
add
gs
stos
jns
movsl
cmpsl
icebp
jae
and
mov
jno
ss
xor
mov
frstor
xchg
dec
jae
sub
rcrb
mov
enter
inc
jb
sub
sarb
jns
xchg
xchg
pop
adc
repz
push
jge
andb
daa
mov
enter
push
ljmp
adc
push
nop
add
mov
or
icebp
mov
cmp
xchg
add
out
cmpsl
pop
mov
clc
xchg
arpl
dec
test
roll
add
sub
adc
clc
inc
into
ja
testb
mov
daa
and
gs
stc
fs
jle
fcomip
xchg
xor
in
cs
sbb
cmp
sbb
cmpsl
orl
jno
scas
sbb
fwait
mov
jb
pop
das
fistl
sbb
pusha
xchg
adc
mov
iret
jne
pop
pop
clc
pushf
xchg
dec
lret
test
jmp
cmp
aam
mov
sbb
push
add
cmpsb
incl
mov
adc
in
cmp
mov
cmpsl
enter
pusha
roll
lods
test
sbb
adc
pop
push
std
mov
dec
test
ds
mov
lret
mov
in
jge
aam
cs
inc
sub
pop
pop
and
and
xchg
sbb
mov
enter
xor
cmp
ljmp
xor
jmp
xchg
movsb
push
jae
out
mov
xor
das
or
xchg
sub
das
fwait
mov
adc
fbstp
inc
in
or
push
sub
stos
inc
mov
pop
mov
mov
sahf
jecxz
sub
fnstenv
or
aaa
or
mov
mov
decb
aas
xchg
jecxz
mov
adcb
xor
rcll
xor
in
cpuid
outsl
dec
dec
ds
ret
fs
and
pusha
xor
je
push
movb
int3
mull
dec
repnz
lods
add
pop
jge
mov
in
mov
decl
pop
xchg
inc
lahf
dec
pop
or
call
shl
push
scas
ret
outsl
cltd
dec
imul
dec
cmpsl
les
lods
mov
lods
das
adc
sahf
pusha
fidivs
imul
and
xor
popa
sbbl
mov
sbb
xlat
or
cld
xchg
clc
fnsave
mov
sub
shrl
sbb
push
or
pop
sbb
mov
push
fdivl
dec
jmp
aad
pop
fcmovu
aad
add
outsl
lea
das
hlt
mov
xor
lret
mov
cmpsb
movsb
call
jb
hlt
inc
jno
scas
push
mov
ss
push
ret
jecxz
inc
leave
xor
xchg
enter
sbb
cli
jp
jecxz
mov
sub
pop
mov
inc
cmpsl
jo
inc
push
and
nop
xchg
dec
dec
mov
lahf
test
mul
lods
jg
push
rcrb
pop
ret
lock
mov
adc
repz
outsb
int3
xchg
addr16
xchg
jbe
xor
int3
jmp
dec
aas
movsl
push
push
popa
test
xor
dec
out
dec
fistps
pop
sub
xchg
adc
loope
mov
lods
decl
in
aad
mov
fstps
jmp
cltd
xchg
dec
cmc
add
pop
xchg
lret
lcall
orl
ljmp
ficompl
insb
stos
test
jns
or
dec
mov
outsl
pop
mov
adc
mov
jb
aad
push
mov
clc
jo
push
pop
pop
xchg
adc
jl
jge
fwait
lahf
jge
lds
inc
or
pusha
lds
test
mov
pop
push
mov
pop
jl,pt
es
push
loopne
cmovns
push
sbb
add
cmpsl
mov
pop
mov
outsb
jno
mov
jmp
pop
out
pop
pop
dec
dec
data16
les
leave
mov
or
push
jo
xchg
outsl
xor
fsubrl
inc
adc
push
insb
test
jg
dec
pop
xor
enter
mov
add
add
mov
push
sub
popf
repz
jmp
adc
mov
imull
mov
cmpsb
or
push
cs
arpl
xchg
pop
out
cmpsl
adc
fs
and
cltd
add
jg
mov
inc
cmp
test
mul
xchg
pop
data16
mov
movsl
loop
jno
jmp
add
inc
out
int
mov
mov
sbb
in
lods
cs
and
jnp
cld
add
xchg
int
imul
xchg
orl
inc
mov
rcrb
in
iret
xchg
push
sub
xorl
ss
and
sub
daa
fidivs
pop
enter
gs
sub
push
shll
dec
shr
and
dec
add
int
mov
jecxz
nop
jge
out
xor
cwtl
test
shl
loop
loope
sti
mov
sahf
mov
fists
adc
leave
xor
mov
popf
dec
sub
adc
jns
testb
inc
adcb
dec
fmull
insb
mov
cmpsb
outsl
and
aam
mov
imul
fisubl
inc
sub
jb
dec
push
xchg
loop
push
cmp
pop
insl
xor
fidivrl
shl
jns
roll
aaa
pop
inc
cld
mov
mov
and
push
jle
adc
shrl
dec
dec
adc
decl
les
mov
into
cmp
out
bound
cmp
call
fistpll
test
mov
test
icebp
vmread
cltd
ljmp
mov
xchg
cmpsb
sbb
add
mov
xor
and
divl
mov
mov
xlat
cltd
aam
push
popf
push
push
lret
mov
cmp
inc
stos
lret
inc
loopne
frstor
sti
inc
les
stos
fisubs
loope
dec
mov
aam
mull
lock
lods
rorl
cmp
xor
xor
jns
mov
fsts
imul
jp
jle
cmpsb
call
push
div
cli
getsec
mov
daa
push
fwait
push
pop
pop
cmp
pop
or
daa
ret
lock
imull
fcmovu
pop
lcall
ljmp
dec
cwtl
mov
neg
xchg
push
rolb
pop
movsl
jnp
lcall
aaa
inc
jb
ret
fisubrl
addl
pushf
push
mov
leave
outsl
xchg
and
push
pop
pop
dec
pop
xor
ja
pushf
ja
jle
arpl
loopne
stc
dec
les
iret
rolb
lret
cmp
repnz
in
xor
fmull
xlat
cli
push
stos
or
add
hlt
mov
les
or
cmp
push
daa
addl
pushf
dec
lods
mov
mov
add
push
ret
ficoms
mov
xchg
push
ja
xor
cld
jae
pusha
je
into
push
repnz
iret
xchg
push
pop
push
repnz
mov
fmul
fadd
insl
ret
mov
xorl
movsb
mov
nop
pop
js
dec
cli
loope
jnp
mov
mov
icebp
xor
mov
mov
pop
inc
add
jo
pop
lahf
sub
xchg
dec
negb
push
sub
pop
mov
rcr
jno
shl
int3
inc
jp
xlat
lret
icebp
mov
frstor
add
add
and
and
and
fs
dec
dec
jmp
pop
out
or
sahf
sbb
and
out
xchg
repnz
jo
mov
add
test
lea
call
cltd
mov
popf
ret
sti
xchg
test
mov
mov
jnp
xabort
clc
push
int3
sub
mov
pop
daa
push
lock
test
pop
xorl
rorb
pop
aad
fiaddl
jle
nop
pop
lds
icebp
xlat
fimuls
push
out
add
icebp
cmpsl
or
push
fidivrl
dec
inc
inc
cmc
ret
test
aaa
dec
adc
push
adc
xor
sub
ss
shr
cmpsb
mov
out
push
scas
mov
sub
fcoml
fstps
lahf
push
sarl
cmp
mov
loop
jmp
int
dec
xor
lods
pop
popf
enter
inc
inc
clc
or
iret
addr16
fimull
cmpsb
ret
adc
shr
nop
nop
xor
pop
sti
ljmp
xchg
add
sbb
loopne
mov
cltd
jle
sub
dec
xchg
test
bound
xchg
push
jle
dec
or
jno
xor
mov
scas
add
test
aam
xchg
push
sub
out
adc
lds
stc
jmp
fcompl
mov
in
dec
dec
rcll
mov
cmp
mov
mov
insl
sbb
jl
stos
mov
lods
mov
ljmp
pusha
pushf
clc
add
pop
jge
loopne
xor
add
dec
repz
ficomps
push
cmp
fimull
inc
pop
pop
sbb
ficomps
jge
push
add
jp
movsl
jmp
sub
outsl
inc
test
dec
cmc
pop
loope
ficomps
repnz
ss
adc
scas
hlt
test
pop
xchg
pop
adc
sub
and
xchg
out
shll
add
insl
scas
sub
xlat
cmp
cmp
pusha
pop
push
xor
jle
jne
fdivrl
push
aas
jno
adc
push
xchg
shrl
adc
scas
data16
jp
sub
stc
pop
and
sbb
add
arpl
imul
sbb
daa
push
cli
and
dec
enter
shrb
and
jnp
dec
shl
jne
imul
jge
bound
jo
rcll
jo
les
lret
cmp
xchg
and
jmp
ljmp
jns
mov
sub
cmp
jne
and
loope
and
dec
mov
push
pop
stos
pusha
cld
mov
xchg
and
imul
push
pop
ret
jg
push
test
nop
and
out
jmp
fdivrp
mov
dec
stos
shlb
xchg
lahf
or
call
dec
rcl
imul
loopne
jne
mov
imul
xor
sbbl
pop
pop
aad
cmp
cmc
ret
push
in
popa
nop
lahf
lock
out
les
insl
stos
popf
in
pop
clc
cld
shll
xor
mov
lcall
movsb
aaa
xor
daa
dec
sbb
sub
dec
xchg
aam
xchg
xchg
sbb
and
jnp
sbb
mov
cmp
xlat
jae
aad
int3
imul
xchg
pop
mov
or
inc
jne
scas
xchg
stc
je
in
mov
in
mov
leave
sub
std
out
cltd
xchg
sarl
mov
enter
fldcw
cwtl
mov
and
hlt
jecxz
mov
cli
mov
jno
mov
dec
aad
lret
mov
movsb
sub
mov
pop
mov
jmp
out
jge
sub
sbb
cld
or
mov
lea
std
enter
test
xor
pop
inc
mov
sti
adc
mov
cs
mov
mov
inc
push
movsb
imul
dec
out
scas
fwait
mov
inc
rcrb
adc
fst
sahf
into
xchg
cmp
dec
es
subl
adc
movq
or
push
std
cmp
inc
and
popa
decl
add
xchg
pop
and
ror
es
xchg
imul
pop
data16
repnz
test
int
pop
or
inc
decl
mov
cmc
xor
in
pop
test
aam
lods
sub
xor
lahf
cmp
mov
negb
repnz
dec
addr16
das
ss
out
and
inc
jae
cmp
movsb
ljmp
push
adcl
mov
mov
repz
std
xor
lods
add
gs
inc
cvtps2pi
xlat
mov
and
xor
fidivs
cmpsb
sbb
push
push
scas
loope
jbe
out
cs
and
sub
xchg
mov
dec
cmp
inc
or
cwtl
sub
add
nop
in
stos
mov
out
cmp
out
push
in
add
pop
fs
mov
icebp
ds
popf
fldt
sarl
shrb
jb
dec
out
imul
aas
inc
cld
inc
mov
idivl
sbb
inc
xor
push
call
dec
aad
xor
inc
mov
pop
daa
sub
jmp
hlt
dec
jns
iret
mov
and
xchg
mov
dec
repnz
and
scas
int
movsb
or
push
fmulp
test
pop
sub
pushf
in
mov
pop
push
or
pusha
adc
sti
test
rclb
add
sub
jno
jne
pop
xchg
pop
jbe
iret
or
cmp
into
cs
lret
mov
xor
sbb
sbb
sti
int3
inc
pop
ss
mov
adc
xor
pushf
bound
mov
xchg
xlat
sbb
lahf
ret
and
xchg
sbb
add
xchg
mov
fs
adc
es
dec
outsb
ds
sbb
or
aam
test
es
fnstsw
dec
aad
shr
xchg
aas
or
ds
inc
out
popa
lahf
sbb
lret
cmp
rcll
in
sub
pop
jl
sahf
jbe
jb
mov
test
push
xchg
mov
pop
enter
mov
push
inc
and
nop
or
or
sbb
jb
push
outsl
js
mov
push
leave
gs
jge
outsl
negb
and
cmc
in
scas
pop
ret
and
mov
out
imul
or
add
push
push
pushf
pop
or
jge
jns
test
cltd
test
pop
jge
fcoms
pmulhuw
popf
pusha
subl
inc
out
or
das
cmp
inc
stc
jg
scas
cmpsb
dec
lret
pop
cmp
mov
fcmovbe
sbb
repnz
adc
rclb
rolb
or
int
scas
scas
adc
lret
mov
hlt
or
mov
and
pop
or
adc
jl
sub
push
in
mov
sbb
add
mov
push
pop
jge
jns
mov
mov
add
pop
mov
sbb
pop
mov
mov
stos
mov
repnz
mov
rol
scas
or
idivl
leave
push
and
mov
mov
mov
mov
push
pusha
adc
cmp
sub
add
test
into
push
jb
add
inc
jmp
lods
pop
dec
les
inc
xor
inc
es
jp
xor
cltd
cmp
mov
cltd
sbb
pop
popa
sbb
outsb
popl
adc
jg
scas
aad
and
inc
cltd
popa
negl
dec
jo
insb
mov
cs
mov
fwait
and
stc
lea
xchg
lds
test
xchg
jmp
out
ss
sub
cs
stos
mov
cmp
insb
lret
les
in
inc
push
dec
fimuls
push
je
xchg
add
mov
test
roll
in
mov
jbe
xor
jecxz
sar
cmc
sbb
data16
movsl
sahf
jnp
mov
cmpsb
sti
jmp
addr16
notb
xor
rcll
outsb
pop
loopne
mov
mov
stos
add
in
cvttps2pi
adc
mov
ret
daa
test
loop
in
mov
shll
jle
cmp
mov
cmc
or
lret
es
jb
mov
mov
pop
adc
mov
jo
jmp
mov
hlt
ss
adc
repz
sar
stos
cmp
mov
adc
test
xorl
imul
sub
stos
jge
jmp
popa
in
stc
pop
cmp
dec
lcall
data16
cs
mov
es
pop
xchg
outsb
push
cwtl
js
stos
push
fs
mov
fsubrs
movsl
push
out
fstpt
lahf
iret
pop
test
push
add
add
jae
lods
in
sbb
sbb
jbe
xor
imul
inc
cmp
xor
out
ret
xlat
fmuls
ret
arpl
shrl
dec
push
jecxz
movsw
jle
outsl
in
enter
sti
add
push
push
pop
adcl
dec
cmp
cld
push
pusha
in
les
repz
insl
inc
jb
data16
sbbb
pop
pop
je
xchg
scas
insl
push
outsb
mov
flds
out
jge
rolb
sbb
lret
mov
mov
xor
ja
and
test
xchg
std
rorb
setb
in
adc
mov
xchg
push
push
pop
pop
fsub
push
sub
push
ljmp
in
lret
shl
mov
sub
outsb
hlt
es
adc
pop
inc
sub
lds
lods
inc
or
movsl
lods
jae
pop
out
xchg
fldl
inc
xor
lock
arpl
sti
or
lods
aad
hlt
into
or
pop
clc
int3
add
int3
je
out
jno
xchg
jb
pop
scas
idiv
movsl
testl
mov
jle
loope
nop
inc
jne
daa
jle
mov
adc
inc
and
sbb
in
mov
xorb
mov
mov
adc
push
lods
dec
imul
shrb
and
jp
popl
lods
ss
stc
or
mov
pop
mov
mov
cwtl
sub
dec
les
fs
loopne
mov
jg
ja
cmp
jno
icebp
mov
and
mov
inc
mov
pop
add
jle
push
xchg
movsl
pop
jmp
pop
jns
icebp
lea
pop
scas
notb
xchg
sbb
call
push
lahf
mov
dec
lock
imul
mov
repz
outsb
mov
pop
sub
das
sub
xchg
dec
mov
enter
add
addr16
cmpb
or
mov
cli
or
mov
or
bound
adc
xor
stos
jne
enter
jecxz
jns
xlat
inc
add
fcmove
loope
daa
cmp
mov
mov
pop
shr
cmpsl
inc
cmp
in
lods
loopne
jo
adc
cmpsb
sti
cltd
iret
xor
or
or
push
jp
mull
bound
stos
sti
imul
or
xchg
lea
push
in
fwait
pop
jl
mov
fldcw
mov
pusha
and
or
jecxz
stos
test
mov
fstp
jb
cs
mov
inc
pop
mov
adc
and
xchg
mov
rorl
xchg
sarl
jne
mov
xor
sub
testb
rdpmc
pop
incl
out
test
xor
ds
shrl
sub
mov
sbbl
pop
adc
rol
xor
sub
cmpsb
adc
xchg
push
sarb
arpl
imul
jl
outsl
movzbl
pop
inc
enter
inc
jne
enter
mov
je
std
out
cmp
and
sub
mov
fcomps
fmull
cwtl
mov
out
pop
movsl
dec
movsb
inc
and
mov
sub
mulb
sub
addb
adc
pop
adc
stc
mov
add
add
lods
or
adc
pushf
push
inc
out
push
add
and
dec
dec
std
mov
subb
push
jmp
push
les
out
bound
es
xchg
xchg
mov
pop
or
repz
popa
stos
adc
push
jb
push
scas
adc
xor
add
sub
xor
xchg
adc
out
adc
testb
xor
into
andl
ja
xchg
jo
movsl
std
es
and
in
sub
bound
pop
mov
xchg
bound
inc
sbb
ljmp
push
jb
pusha
test
nop
lcall
cmp
cmp
jl
mov
ss
xchg
lods
xor
fisubrl
mov
push
gs
mov
add
xchg
xor
sub
sbb
xchg
mov
mov
and
clc
jbe
shlb
mov
xor
push
in
stc
pop
lds
nop
dec
and
mov
xchg
jp
shll
cli
fstpl
xor
add
sbb
gs
pop
push
roll
bound
stos
cmp
xor
jno,pt
imul
mov
and
inc
inc
pop
mov
stc
in
adc
xchg
dec
xchg
inc
lock
in
jmp
push
mov
mov
fmull
and
or
leave
mov
fimull
repz
jns
stos
lahf
mov
lods
dec
cmp
jns
add
in
xlat
int3
xchg
iret
add
fnstcw
flds
loop
xchg
and
adc
xchg
fisttpl
cmc
stos
mov
mov
scas
stc
pop
rorb
dec
rcrb
aas
fstpl
adc
cmp
mov
filds
xchg
shr
fdiv
sub
outsb
aad
push
push
mov
xlat
push
out
ret
push
std
stos
fs
mov
ret
push
clc
inc
jecxz
cmp
enter
mov
in
test
sub
cwtl
jmp
je
mov
xchg
mov
and
in
call
out
lods
adc
imull
in
js
mov
push
or
mov
jecxz
mul
jmp
idivb
scas
aam
test
push
cmp
jp
pop
mov
and
pushf
jge
iret
push
xor
dec
in
arpl
cmp
ficoml
add
mov
mov
push
mov
ljmp
jbe
ret
mov
arpl
sbb
mov
icebp
inc
push
add
fbld
fsub
push
and
lcall
shl
or
lods
push
push
leave
pop
or
pop
push
xchg
jbe
push
aas
inc
jnp
mov
ljmp
dec
cltd
and
and
push
in
loope
fdivrs
out
mul
sub
call
imul
roll
sahf
popa
jmp
cmp
xor
adc
xor
xchg
test
iret
test
data16
sub
jg
enter
pop
setne
in
adc
xor
cmc
test
sub
adc
jb
movntq
xor
mov
inc
sbb
call
sbb
cli
cmp
cltd
pop
das
int3
inc
and
imul
movsb
ds
in
xchg
rcrl
jp
test
and
cmp
sub
not
jbe
mov
xchg
stos
stos
inc
popa
dec
loop
imull
sbb
xor
dec
movsl
pop
scas
pop
aas
std
orl
in
aam
movsb
addr16
repnz
lret
sub
sbb
gs
outsb
sahf
rorl
pop
cmp
jl
fucomi
adc
pop
int3
scas
jbe
inc
mov
lcall
and
leave
loope,pt
and
cmp
into
add
dec
repnz
adc
dec
iret
push
fsubs
cmc
and
in
xor
cmpsl
pop
mov
addr16
lea
push
xchg
add
mov
scas
and
jmp
add
movsl
es
xchg
rcrb
cmp
data16
lcall
xchg
push
je
arpl
sbb
mov
loopne
add
jne
jne
fbld
stos
inc
out
sarb
push
test
add
in
mov
or
clc
repz
sub
nop
push
sub
inc
mov
push
xorl
pop
sub
loop
fcom
xchg
testl
xchg
out
mov
sbb
rcl
hlt
addb
aas
push
aam
jmp
push
add
in
bound
xchg
pop
lock
xchg
test
xor
int3
arpl
jecxz
push
xchg
pop
mov
pop
jmp
mov
xlat
jp
push
add
cld
push
ds
lds
inc
daa
fidivs
dec
out
movsl
push
lods
add
push
das
and
push
and
sbb
test
aad
insb
cmp
and
and
ret
cltd
jnp
jge
adc
pop
imul
in
jne
lret
ret
les
pop
cmp
jl
fisubs
xor
mov
popa
inc
lock
or
jecxz
xor
or
aas
in
aaa
scas
mov
xor
enter
xor
int
mov
inc
xor
mov
mov
es
mov
fs
sub
pop
mov
inc
ret
mov
adc
adc
inc
pop
dec
push
in
rolb
jecxz
hlt
lcall
mov
jg
dec
insb
mov
jno
out
roll
enter
stc
push
clc
int3
shlb
and
stos
lret
aaa
loop
jmp
dec
jp
inc
mov
iret
nop
or
mov
push
fdiv
jbe
aaa
daa
nop
int3
imul
test
sub
ljmp
xor
rolb
in
lahf
and
hlt
cwtl
sbb
out
jecxz
sbb
or
cmc
test
push
sbb
fsubr
ret
cli
sbb
das
and
adc
or
add
push
movsl
xchg
in
jmp
popf
dec
pop
into
sub
push
xchg
imul
mov
std
sbb
mov
in
or
lcall
fidivl
pop
and
pop
cmp
pusha
xchg
in
sub
icebp
pusha
mov
jmp
aas
cmpsb
push
test
mov
push
mov
jge
cmp
dec
mov
lret
loopne
sbb
cmp
push
js
insb
lcall
out
inc
stc
out
mov
dec
outsl
mov
jmp
fwait
sub
bnd
and
stos
scas
or
dec
cmpsl
lock
adcl
mov
clc
shr
dec
and
cmp
lcall
inc
xlat
mov
push
or
inc
ss
icebp
daa
mov
int
xor
xor
xchg
push
and
mov
aam
cmp
sbb
mov
pop
lahf
pop
iret
adc
scas
adc
int3
hlt
push
cmp
or
sti
or
mov
cmpsl
xor
imul
subl
sti
movsl
add
fstpl
mov
jmp
jbe
or
jp
aas
adc
xor
sarl
mov
push
es
dec
out
xchg
fcom
dec
adc
test
cmp
movsb
test
cmpsb
sti
gs
aad
jl
cmp
lds
xchg
test
stos
aaa
imull
xchg
sbb
push
cmp
insl
stc
jg
mov
pop
aaa
mov
and
in
cmp
fwait
ret
add
mov
lods
or
jb
jecxz
adcl
clc
dec
test
or
lahf
pop
ds
inc
xor
jo
shl
lret
sbb
xor
push
cltd
and
stos
stc
jae
mov
loop
call
push
aaa
inc
ljmp
push
cmp
jno
push
outsb
mov
inc
mov
lods
or
mov
pop
jnp
loop
mov
jbe
jp
push
jns
push
int
pop
ja
mov
lea
pusha
lcall
push
stc
xchg
fsub
dec
push
jecxz
jns
cmpsb
ret
inc
repz
jecxz
gs
cmpsl
lock
nop
repnz
push
in
notl
into
rorl
sahf
sub
mov
cltd
pop
xchg
test
sbb
and
stos
leave
icebp
pushf
dec
adc
cmp
popa
pop
cmpl
mov
lret
inc
push
jno
mov
pop
sbb
jl
sub
mov
jl
jbe
out
shlb
xchg
inc
popa
sub
andl
xor
fcomi
fiaddl
cmpl
mov
pop
lods
sahf
jne,pt
push
push
lret
or
sbb
push
das
leave
inc
mov
pushl
dec
loop
insb
rcl
push
sbb
push
xchg
adc
pop
movsb
imul
cmp
pushf
mov
add
xchg
mov
and
popa
rorb
pop
mov
repnz
sbb
int
js
and
pop
add
sub
sub
jae
scas
add
fldt
mov
dec
in
jns
jno
dec
and
xor
cmp
repnz
mov
or
xchg
mov
fbld
push
xor
adc
xchg
testl
mov
insb
in
cmpsb
or
ficoml
out
int3
repnz
add
push
jb
mov
call
fisubs
mov
xchg
cmp
icebp
jecxz
imul
aad
inc
jno
jns
cmp
xchg
decb
add
cmpsl
rcrl
jno
cld
mov
dec
es
cmp
push
mov
inc
je
shll
mov
popf
mov
mov
or
out
dec
sbb
stos
mov
xchg
mov
popf
cmp
lret
mov
lret
je
jnp
xchg
xchg
and
jl
orl
mov
mov
mov
stos
mov
sub
addr16
adc
mov
insl
mov
or
mov
sbb
mov
push
mov
nop
bswap
loope
cmp
xchg
dec
pop
popa
leave
cwtl
gs
scas
ror
xlat
in
daa
mov
or
jmp
shrb
movhps
dec
and
push
add
out
cwtl
dec
cwtl
or
out
mov
stc
sbb
cmpsl
mov
iret
xor
and
inc
dec
xor
xchg
xchg
ficompl
sbb
mov
jbe
jge
xchg
pop
lods
sub
sbb
mov
pop
gs
idivl
imul
sahf
shll
push
rorb
or
lahf
xor
lret
popf
push
push
lds
je
in
mov
lret
shll
stc
insl
mov
and
adc
sub
xchg
sub
call
int3
ret
xor
jge
xchg
stos
jno
xorb
ds
and
mov
je
je
cmpsl
mov
mov
cmpsl
adc
in
and
xor
ret
mov
dec
sbb
cltd
test
xor
jl
lret
adc
mov
std
aam
lret
mov
nop
inc
jg
and
in
out
sub
insb
xor
faddl
xor
repnz
icebp
xor
test
sti
xor
outsl
adc
notb
pop
mov
mov
sub
mov
in
out
ds
pop
xchg
sub
dec
ss
iret
filds
rcrl
mov
shlb
adc
or
dec
xor
adc
push
iret
imul
icebp
xor
int
lock
jmp
lcall
fdivrs
pop
out
push
add
mov
out
std
loopne
jnp
inc
mov
lahf
hlt
lds
sub
jmp
dec
mulb
push
dec
in
add
push
jecxz
or
shll
add
icebp
pop
xchg
imul
cmp
add
jb
fs
mov
je
movsl
cmp
inc
mov
mov
popa
dec
pop
int3
cltd
push
jno
rorb
lret
cmp
popf
insl
xchg
js
mov
aad
pop
shll
mov
ljmp
inc
push
fimull
sub
mov
testl
test
xlat
aad
xchg
mov
repz
into
hlt
icebp
inc
pusha
in
sti
cltd
lahf
xchg
adc
les
cli
movsb
loopne
sub
call
mov
out
cmp
sub
das
xor
dec
lea
adc
sti
loop
mov
mov
data16
push
push
and
stos
sub
outsl
dec
int3
dec
popa
mov
stos
push
and
mov
subl
jb
insl
addr16
movl
xor
repnz
lret
push
pop
addl
mov
mov
mov
inc
sub
out
fnstcw
add
or
adc
addb
or
subb
mov
popa
push
inc
cmp
dec
inc
inc
cltd
mov
arpl
jae
push
into
mov
pop
sub
insl
jecxz
and
pop
scas
iret
out
test
fsubs
mov
mov
rcll
cmpsl
mov
add
sbb
push
stc
dec
aaa
sub
pop
and
pop
xchg
cmp
cli
mov
daa
sarl
std
in
add
dec
cmp
inc
xlat
push
inc
notb
push
ljmp
into
xor
xchg
mov
and
push
xor
xor
daa
cmpsl
xor
stos
mov
iret
jns
mov
outsl
mov
push
sbb
mov
repz
and
xchg
gs
push
pop
lcall
push
sub
jnp
pop
sub
gs
mov
push
jae
dec
jne
movsb
pusha
push
sub
or
sbb
mov
fists
test
bound
insl
pmulhuw
push
hlt
sbb
stos
push
pop
sub
fldz
fbstp
xchg
adc
sub
nop
mov
mov
in
les
jns
inc
mov
inc
inc
cmpsl
xchg
hlt
fcomi
ss
rcl
nop
mov
inc
mov
fwait
inc
mov
test
fistl
push
pop
cmp
push
stc
ret
gs
mov
pop
lret
xor
cs
and
jno
lea
push
ss
jl
jmp
mov
dec
fimull
xchg
and
mov
mov
xchg
mov
jns
lret
mov
pop
push
stos
insb
insb
int3
mov
mov
shlb
mov
sti
sbb
cld
mov
arpl
ds
push
mov
pop
pusha
dec
cmp
int3
popf
mov
aam
inc
cmpsl
je
jne
ror
imul
test
push
imul
rcrb
loope
inc
sahf
jle
repnz
in
mov
and
or
pusha
cmp
fists
xor
mov
leave
jge
movsb
dec
aas
pop
add
out
mov
stos
in
stos
sub
cli
cmc
cmpsl
jbe
pop
inc
jle
dec
les
test
push
mov
std
fst
mov
mov
mov
out
mov
in
jo
int3
jmp
dec
sbb
inc
mov
pop
and
adc
pop
loope
fisttps
and
jae
inc
and
xchg
rol
mov
les
mov
push
fisubs
movsb
push
lods
mov
xor
in
aam
ret
cmc
shrb
lret
sbb
push
or
pop
mov
test
fimuls
neg
jne
fildl
bnd
jno
iret
scas
sbb
decl
xchg
rolb
in
pop
aam
jge
mov
enter
xchg
scas
or
dec
adc
pop
lret
rcl
dec
pop
mov
mov
int3
in
lret
pop
xchg
or
loopne
mov
xor
jnp
mov
push
dec
cli
cmc
or
dec
nop
stos
sarl
ljmp
leave
gs
mov
cmpsl
loopne
jmp
rolb
lahf
sub
aam
loop
shll
cmp
imul
pop
jno
cld
pop
mov
dec
ret
ret
int3
popf
dec
ljmp
jne
pusha
jp
jmp
sub
int3
mov
cmp
ds
add
fbstp
lret
cli
in
cmp
or
insb
fsubs
stos
lret
jns
mov
mov
push
in
aam
cmp
in
sub
fcoml
pop
or
cmp
mov
sub
xchg
inc
je
loope
repz
in
mov
mov
sub
shl
imull
test
mov
data16
loopne
jge
push
cld
addl
sub
aad
rorl
aam
cs
inc
pxor
dec
fcomp
add
shll
xchg
sti
pop
aam
imul
adc
pop
add
daa
out
adcl
or
jne
pop
push
push
incb
cmp
ja
insb
mov
sbb
push
movsl
pop
pop
out
cmp
inc
test
out
fcomps
xchg
movsb
test
dec
cmp
outsl
jle
dec
inc
xchg
xlat
add
pop
push
mov
fdivrp
pop
and
loopne
pop
jmp
inc
add
pusha
push
inc
test
out
enter
mov
xchg
in
dec
jnp
mov
sub
ucomiss
mov
rclb
mov
dec
mov
out
xorb
cmp
mov
mov
jnp
pop
xchg
mov
push
inc
fwait
pop
iret
cli
ficompl
sbb
stc
xchg
cmp
daa
push
or
add
ret
testl
push
fwait
daa
dec
push
adc
and
pop
cltd
std
xchg
inc
xor
movsl
push
mov
test
xchg
pop
scas
mov
dec
fdivrs
mov
shl
xlat
jnp
mov
add
and
popa
and
xor
movsl
lcall
loop
repnz
fimull
dec
ja
adc
outsl
dec
lcall
jnp
mov
cmpsb
pop
int3
es
in
aas
add
mov
scas
cmp
outsb
adc
test
jo
mov
testb
add
dec
imul
sbb
mov
jp
sub
or
sbb
or
std
jo
int
cwtl
push
cs
jecxz
add
jle
je
loope
mov
icebp
mov
rorb
inc
aaa
pusha
sbb
mov
push
repnz
jo
mov
jno
sub
sqrtps
cmpsb
mov
movsl
and
ja
mov
out
dec
test
ljmp
ss
sahf
xlat
pusha
movsb
aas
or
repnz
and
daa
ja
xchg
xchg
imul
stc
test
iret
add
jbe
cmp
cmp
push
outsb
sbb
adc
cmpsb
dec
adc
cmpl
pop
jecxz
mov
femms
adc
push
xchg
insb
cmp
pop
push
xor
pop
notl
mov
push
fists
test
fistpl
int
stos
sti
dec
sbb
jle
dec
lock
fwait
push
mov
mov
clc
ja
bound
subl
mov
inc
jg
fisttpll
fistl
rolb
mov
ja
fildll
mov
rcrb
dec
arpl
mov
clc
jne
xchg
mov
push
iret
rolb
stos
mov
dec
pop
mov
add
sub
into
dec
lret
int3
imul
aas
cltd
js
mov
xchg
mov
fdivp
mov
pop
pop
in
mov
push
pop
mov
rorb
xchg
and
adc
int
js
fwait
dec
insl
loop
push
lahf
sbb
loop
push
push
push
enter
pop
and
push
jne
dec
mov
and
sub
xor
ret
jg
mov
int3
or
add
xor
sahf
jecxz
cmp
cmpsl
scas
and
ss
lahf
and
mov
movsb
fidivl
in
stos
loopne
fsts
sub
mov
add
outsl
cmp
push
gs
shrb
lea
cmp
in
daa
inc
lcall
out
dec
ds
cwtl
bound
rcll
xchg
mov
cld
jge
mov
add
pushf
out
and
mov
enter
test
out
cmp
sbb
repnz
nop
dec
jp
imul
mov
ja
mov
pop
xorl
out
jae
sbb
fs
call
dec
mov
sbb
les
pop
push
cmc
mov
ds
jmp
roll
push
sarb
out
orb
and
jmp
aas
cmpsb
out
add
push
test
loope
pop
jmp
push
sub
popf
cli
pop
mov
inc
mul
push
fdivrl
jl
addr16
add
cmpsl
ret
push
jl
std
xor
fistpll
sub
scas
outsb
mulb
sbb
xchg
popa
fbstp
and
cmpsl
mov
repnz
sub
in
xor
faddl
xor
dec
mov
push
movsl
pop
dec
cld
pop
ljmp
ret
incb
xor
xorb
std
lea
mov
js
fstpl
ljmp
pop
in
insb
pop
sbb
inc
test
test
out
jecxz
out
pop
daa
loopne
cmp
push
cmpsl
jge
mov
in
xor
nop
loop
or
in
sbb
in
shr
mov
sti
test
mov
dec
ja
je
cmp
jns
jmp
fwait
es
mov
push
ret
rorb
call
cmp
or
mov
or
push
or
or
rclb
adc
inc
adc
repnz
mov
adc
dec
dec
shlb
xor
pushf
jp
scas
fsubl
or
inc
jo
add
push
jge
out
cmpsb
xor
xor
in
mov
stc
pop
mov
cwtl
imul
insl
data16
bound
jbe
ja
in
je
pop
inc
sbb
arpl
or
or
out
inc
pop
je
rcll
xchg
mov
in
dec
hlt
inc
or
fwait
out
hlt
arpl
sbb
mov
data16
out
subb
fnstsw
insl
stos
addl
ret
xor
scas
aad
jo
sbbb
xlat
mov
xchg
jo
jge
mov
mov
ret
mov
lea
xor
scas
pop
and
lods
fisttpl
frndint
dec
add
sbb
push
pop
sub
adc
mov
mov
push
insl
mov
jne
icebp
and
xor
mov
cs
push
jg
or
fcoms
enter
mov
popa
sbb
gs
sbb
aas
or
cmpsl
imul
push
arpl
arpl
mov
sbb
push
dec
test
pop
arpl
xor
test
jg
add
add
ret
pop
sub
and
out
push
jle
adcl
adc
sub
sub
xchg
aas
or
jmp
xchg
push
sarb
dec
jns
sub
push
dec
xchg
inc
jb
jne
ja
xchg
xor
adc
sub
out
insl
icebp
std
repnz
out
mov
xorl
test
and
cmp
pop
mov
dec
mov
mov
xor
xor
ds
dec
xor
sbb
and
sub
in
push
push
mov
aad
and
xor
and
rcll
lock
repnz
push
adc
mov
add
js
and
xchg
lret
shlb
xor
ljmp
lahf
lcall
fmull
push
int3
es
daa
es
mov
mov
cmp
cmc
loop
adc
dec
jne
jg
xchg
imul
cwtl
outsb
lahf
loopne
pop
mov
mov
stc
aas
xchg
mov
sbb
add
sub
push
mov
cmp
pop
lea
inc
jbe
push
enter
pop
icebp
fistpll
add
lret
push
mov
sub
cmp
sbb
inc
daa
inc
mov
imul
in
std
addr16
dec
push
mov
adc
arpl
mov
aas
mov
ret
pop
lods
or
sahf
mov
pushf
rolb
outsb
pop
dec
testb
sbb
cmp
xchg
dec
lods
insb
inc
mov
lret
sahf
insb
mov
push
fistpl
push
cltd
das
outsl
lret
pusha
mov
pop
push
pop
push
sub
scas
push
pop
rolb
mov
pop
or
aas
nop
cwtl
adc
fldcw
cmp
je
fsubrp
push
pop
jmp
subl
push
cltd
js
push
lods
jbe
loopne
flds
adc
std
lock
aad
outsb
mov
mov
jecxz
addr16
pop
push
pop
mov
icebp
xor
fwait
in
int3
xchg
add
pusha
xor
push
mov
mov
add
in
int3
mov
xor
xor
out
xor
jne
test
fs
js
jns
and
stos
movl
sti
push
js
scas
adc
out
or
mov
mov
dec
sub
fisubrl
fwait
and
or
jb
sbb
les
lock
pop
and
ja
mov
out
subl
mov
rcl
xchg
lahf
pop
sarl
adc
inc
les
cwtl
lcall
mov
jo
sbb
dec
ss
add
rol
dec
jmp
rolb
xchg
in
fistl
aas
insb
rcrl
mov
push
cmp
rcrl
sub
xchg
mov
xchg
mov
cmp
cmp
out
sbb
imul
test
fsubl
jecxz
jae
mov
push
add
mov
cmp
and
or
push
jno
sbb
xlat
dec
roll
out
sbb
andl
fldlg2
mov
pop
and
sbbl
mov
xchg
aam
push
arpl
xor
mov
mov
jl
jge
jp
add
in
cmp
pop
ret
xor
mov
je
xor
mov
imul
nop
or
fs
stos
test
in
negl
jle
mov
aam
jo
sub
dec
int
into
mov
inc
ja
fisubl
mov
aaa
mov
lahf
lahf
imul
jecxz
pop
js
xlat
je
test
xor
adc
or
loope
aad
aaa
mov
shll
sahf
scas
sub
insl
pop
aam
sub
dec
bswap
xor
iret
shrb
add
mov
jmp
in
jo
loopne
sub
push
add
mov
insb
js
push
sbb
inc
cs
idivl
lds
mov
jae
cmp
test
or
adc
xlat
mov
imul
xchg
sbb
jns
xchg
xchg
arpl
std
xlat
nop
jae
inc
out
fs
ret
push
and
jnp
fsubl
stos
cmp
arpl
jbe
scas
outsb
adc
push
mov
jo
inc
out
pushf
jmp
jno
out
mov
aaa
ljmp
inc
dec
mov
sub
out
shll
ret
sub
push
mov
or
add
rorb
sub
ss
mov
xor
xchg
cmp
and
sbb
jge
mov
divb
fnstenv
jne
mov
aam
and
pusha
pop
ss
shr
adc
xchg
mov
and
inc
bound
push
in
push
sti
imull
and
sub
inc
pushf
add
xchg
mov
jb
adc
lods
rcl
rcll
fisubrl
adc
loop
movsl
mov
call
inc
jnp
xchg
cmp
imul
fidivs
cmpl
dec
jns
mov
cmp
inc
mov
adc
jo
xchg
loope
push
inc
loope
and
inc
mov
mov
mov
mov
lcall
test
test
cmpsl
addb
shlb
test
test
fistpll
flds
or
jecxz
adc
push
jne
repnz
lcall
inc
cmp
add
add
and
adc
lret
movsb
aaa
xchg
mov
ret
jecxz
dec
push
sarb
jg
pop
mov
cmp
cmp
mov
add
sti
jns
mov
aas
add
jp
lods
xor
cs
or
cld
lcall
rcll
push
fmuls
pop
lahf
leave
jl
mov
in
jbe
add
fistpl
sub
pop
loop
and
push
cmpsl
test
adc
loope
lret
in
into
mov
mov
lods
xchg
or
pop
leave
mov
jmp
fwait
cmpsb
stos
lcall
dec
lods
mov
sbb
or
fidivs
push
sbb
out
pop
pop
mov
loopne
pop
fistpll
sbb
cli
mov
lods
cmp
test
into
out
sahf
or
movsl
daa
stos
mov
xlat
inc
and
mov
xorl
scas
xchg
cwtl
jae
fimull
xor
imull
xor
pop
hlt
xlat
cmpsl
fninit
xchg
test
jns
mov
jle
int3
dec
sbb
cmpsl
mov
xchg
dec
loope
xchg
iret
icebp
or
sbb
jo
adc
push
adc
ret
add
jge
jle
cmp
sbb
sub
movsl
push
rol
nop
and
les
scas
pop
xor
push
dec
lock
popf
jecxz
jg
dec
imul
cmp
jae
fsub
leave
sub
or
push
push
aad
insl
sbb
gs
cld
cmp
jl
jns
mov
xchg
pusha
and
mov
and
jns
add
push
dec
adcl
dec
inc
sub
pusha
ss
scas
hlt
repz
xchg
jo
imul
jo
xorb
repnz
stc
popf
sub
lock
pushl
call
mov
stos
lods
gs
add
fs
out
xor
loopne
pushf
cmc
cmp
xchg
or
cmc
mov
fs
pop
inc
fdivrs
lret
popf
mov
shll
cld
insb
fildl
mov
cmc
cmp
pop
loope
stos
aam
sbbb
lahf
es
inc
es
pop
xor
mov
icebp
sub
in
icebp
scas
fwait
mov
lret
jmp
sbb
cld
xor
fldcw
sbb
xor
mov
ret
ret
fs
sbb
add
and
push
jmp
sbb
dec
sub
mov
xchg
mov
stc
pop
jae
std
in
cmp
fisttps
cmp
cmp
mov
fwait
mov
sbb
aad
push
call
cmpsl
lock
fmull
mov
dec
jge
mov
popa
sub
mov
out
inc
and
rcl
jl
sbb
inc
push
add
sub
or
out
adc
aad
clc
and
add
fwait
mov
insl
mov
mov
dec
lock
pop
andl
lcall
push
jae
mov
mov
dec
out
dec
push
cwtl
mov
cmpsl
mov
dec
inc
jne
arpl
fldt
stc
dec
pmaxub
jne
mov
shr
lret
cmp
jmp
jns
or
movsb
jb
cmp
dec
sub
out
push
cmpsl
adc
inc
int3
pop
cwtl
out
ljmp
jno
rorl
ds
push
add
arpl
jp
mov
cmp
lret
xor
jns
and
push
sub
or
mov
ds
fstp
sahf
ljmp
fcmovne
pop
pop
add
or
xchg
js
aad
in
fwait
shrl
fdivl
data16
repnz
aad
cmp
mov
lods
pop
xchg
push
jecxz
push
int3
pextrw
mov
cli
xor
hlt
mov
in
dec
xchg
pusha
pop
sarl
push
or
adc
push
test
sub
mul
lret
xchg
test
pop
movsl
or
add
pop
xchg
ret
xchg
and
xchg
xchg
rcr
jb
inc
mov
push
dec
lcall
mov
and
inc
in
mov
xor
divl
out
add
int
or
sbb
ret
aas
imul
mov
stc
pop
adc
test
movb
sbb
imul
jmp
test
loope
lods
jae
jmp
movsl
cmp
xchg
cs
mov
jl
dec
push
inc
leave
xchg
mov
mov
sub
arpl
insb
adc
repnz
or
jg
shll
repnz
jo
or
jne
adc
loopne
inc
in
dec
or
stos
dec
cwtl
jo
push
daa
mov
ret
fdivr
or
push
cli
sub
jp
in
sti
mov
jg
push
out
test
ja
inc
cltd
fwait
xorl
cmp
pop
xchg
arpl
clc
lods
das
cs
cmp
aam
mov
jbe
stc
xchg
lds
mov
sti
shr
out
jns
fistpl
loope
imull
std
dec
lret
cmp
pop
dec
adc
add
lods
jecxz
insl
pop
fimull
pop
scas
xchg
mov
sahf
outsl
adc
xchg
pop
pop
jmp
lret
adc
and
cmp
push
repnz
bound
shr
lods
jb
add
mov
push
cwtl
das
pop
call
icebp
jnp
lods
pop
ret
sbb
mov
jmp
loop
insl
sbb
mov
jb
jmp
push
ret
mov
mov
xchg
cld
sbb
cmp
jno
lea
xor
cli
xchg
cld
and
test
xor
sub
jae
mov
sbb
sub
push
push
mov
insl
mov
fmuls
and
stc
and
or
jle
icebp
xor
outsl
jg
add
lds
inc
pop
filds
sahf
incb
and
insl
jne
or
inc
sarl
inc
xchg
gs
xchg
sbb
cmp
push
ret
out
xchg
lahf
push
hlt
mov
sub
mov
gs
arpl
jne
sbb
orl
xchg
cwtl
std
mov
jmp
cltd
jae
pop
cmp
sub
cli
outsl
int
aaa
adc
jnp
fldcw
ret
xor
dec
fistpl
mov
out
pop
mov
push
icebp
lods
mov
ds
shl
out
stos
cltd
mov
push
adc
loope
js
lods
jl
sbb
mov
mov
add
bound
cmp
lods
or
pop
xor
xor
adc
add
add
xchg
sbb
fists
push
push
mov
neg
repz
iret
aam
fs
sub
pushf
add
lret
adc
mov
sbb
sub
nop
and
loopne
dec
jecxz
fwait
sub
shrb
cs
jmp
mov
stos
iret
mov
pop
and
dec
jb
fcmovu
add
stc
cmp
fs
jno
jp
clc
lret
in
int
inc
push
ret
bound
push
fwait
or
outsb
xchg
push
inc
jae
mov
and
lea
mov
or
in
jnp
xchg
pusha
lods
mov
push
dec
lcall
scas
ljmp
rorl
loope
xor
fcom
dec
pop
mov
cmp
gs
ds
push
xchg
out
dec
add
sbb
sub
jno
mov
inc
sub
push
jmp
ret
pushf
in
add
lret
and
das
iret
jp
push
cmpsl
jl
rcrl
push
js
call
ljmp
shlb
fistpll
aaa
in
jl
ja,pt
ljmp
push
mov
xor
or
clc
repz
sub
xchg
mov
les
pusha
mull
jmp
out
pop
insb
mov
inc
repnz
les
pop
push
cs
icebp
and
jmp
clc
and
or
push
fidivl
adc
mov
sub
sbb
fimuls
dec
add
xor
and
aad
jns
inc
mov
and
xor
pop
repz
leave
inc
dec
xor
in
dec
outsb
xchg
ljmp
push
mov
jbe
mov
les
popf
mov
sbb
je
fmul
lahf
add
or
les
push
pop
jge
adc
cmp
lcall
fisubrs
jo
jle
icebp
jge
sbb
sub
sbb
adc
mov
mov
mov
mov
int
push
sbb
sub
popa
cli
cmp
dec
push
mov
inc
mov
pop
andb
lret
call
or
push
aaa
lcall
std
ss
dec
mov
xchg
lock
mov
les
into
dec
cmp
in
clc
movsl
in
shlb
sbb
adc
repz
jne
add
mov
dec
lods
out
mov
or
sub
cwtl
test
fisttps
cmc
out
mov
mov
or
test
out
lret
cmp
dec
adc
gs
and
test
in
je
mov
dec
fs
insl
or
sub
hlt
push
jp
pop
sti
test
jge
sub
andb
mov
xor
jmp
xor
das
jl
jecxz
cmp
jns
fs
mov
dec
sahf
mov
cmp
mov
fwait
movl
rcrb
pop
cmp
fdivrl
push
mov
test
ss
mov
leave
rcll
sub
sbb
cmp
test
call
inc
insb
push
sti
add
mov
cmp
sub
sbb
pop
insl
inc
xchg
pop
fwait
dec
jbe
inc
sbb
sbb
pop
arpl
mov
xor
xchg
movsb
les
clc
cmp
dec
cwtl
rorb
ffree
jmp
inc
pop
cmp
sbb
pop
sbb
aas
shll
sbb
jle
jle
stos
cli
pop
lock
push
leave
sbb
mov
add
xchg
adc
in
jnp
jbe
push
insb
push
outsl
cmpsl
sbb
lods
mov
mov
shlb
mov
xchg
test
adc
lods
push
bound
dec
mov
xor
sbb
out
mov
jb
popf
xor
sbb
mov
adc
test
aaa
cmpsb
lret
les
jb
out
inc
mov
lock
shlb
mov
out
jne
out
push
mov
cmp
jecxz
mov
adc
mov
lea
sbb
clc
pop
popfw
sbb
or
cli
xchg
sahf
pop
or
pop
imul
adc
mov
pop
iret
outsb
out
pop
adcb
and
sti
testb
stc
loopne
cmp
xchg
inc
mov
inc
sub
jecxz
and
inc
out
push
and
sahf
ss
mov
jb
js
ss
fcompl
lcall
push
cmp
xchg
lret
mov
clc
lock
insb
dec
xchg
cmp
jp
aam
xlat
pop
lods
add
sti
cmp
mov
cmp
inc
add
dec
push
cld
mov
add
mov
ret
add
fisubrl
push
or
out
mov
and
jnp
pop
push
scas
lods
jo
jae
jne
pop
setae
lcall
push
and
dec
loopne
and
xlat
mov
xchg
and
push
pop
lds
sahf
pop
and
pop
adc
gs
cmp
pop
pop
mov
scas
sub
ficompl
pop
cmpsl
push
xchg
xchg
push
and
js
add
jbe
imul
scas
push
mov
lea
int3
sub
jmp
fnsave
dec
pop
in
xchg
inc
push
jns
xor
sbbb
add
cmpsb
jl
mov
pop
es
lds
sub
outsb
sti
rcrb
pop
and
cmpsb
pop
lret
sbb
repz
dec
in
clc
sub
add
jne
sub
lret
sub
sahf
std
cs
ds
subb
jmp
lret
add
fdivrl
rclb
cmp
iretw
cli
orb
xchg
jae,pt
dec
push
dec
sub
bound
sub
icebp
jbe
push
and
dec
xor
adc
ret
loope
lods
add
xchg
sbb
mov
in
or
mov
dec
jne
std
cli
push
cmp
xchg
inc
into
fs
outsb
out
cs
mov
mov
cmpsl
dec
cwtl
lahf
and
xchg
push
insb
sahf
scas
test
gs
jl
pop
mov
add
into
das
push
fimuls
push
in
xchg
sbb
and
xchg
outsb
jl
cwtl
pop
and
mov
mov
loop
pop
rcrb
les
fnsave
rclb
jns
and
in
outsl
push
int3
dec
test
icebp
pusha
ljmp
clc
inc
push
repz
fcomps
dec
ja
ret
mov
test
jns
es
add
adc
int
fdivrl
mov
lock
cld
lods
push
paddb
imulb
sub
sbb
cld
sbb
jns
leave
add
cwtl
and
pusha
or
test
in
stos
ss
gs
push
in
cmp
cmc
subl
lds
ljmp
dec
cltd
shrb
mov
mull
and
ja
pop
or
in
decb
rcrl
xor
inc
ds
out
pop
int3
loopne
ror
movb
in
in
icebp
jmp
mov
imul
insb
inc
mov
add
or
sub
pop
insb
imul
rorb
fildl
cmc
int
call
xlat
out
ss
and
jmp
pop
int
mov
mulb
iret
testl
push
movsb
xchg
fsubrs
ja
cmp
gs
orl
into
mov
int
arpl
sub
sbb
xchg
jne
outsb
arpl
dec
in
inc
cli
jno
sbb
lea
cs
sub
hlt
jmp
fcomip
adc
shrl
add
xchg
in
cmpsb
rcl
mov
inc
shll
pop
je
add
pushf
out
in
jge
fmul
mov
in
mov
scas
xchg
push
pushf
lret
sub
jmp
test
xchg
fdivr
in
jecxz
cmp
icebp
lahf
ret
movsl
repnz
adc
outsl
sbb
cltd
xor
mov
mov
push
shl
in
inc
ret
sbb
lar
fdiv
ficoml
mov
or
ret
cmpsb
bound
aas
push
mov
sub
bnd
and
add
in
xor
or
bound
pop
std
cmp
mov
jns
pop
hlt
into
aas
mov
fimuls
rcrl
and
in
lahf
push
or
insl
mov
mov
pop
push
dec
cmp
leave
dec
adc
addb
testl
aaa
jnp
push
movsl
mov
fidivrl
mov
mov
std
jns
out
mov
dec
cmp
jae
xchg
xchg
mov
xchg
add
int3
popf
or
std
pushf
and
pop
mov
xchg
call
mov
aas
es
inc
jae
movsl
push
in
or
push
push
sub
push
xchg
cli
cmpsl
or
pop
jge
les
shlb
push
and
push
dec
xchg
jb
mov
daa
add
enter
out
xchg
int3
mov
cs
inc
cmp
roll
bt
fwait
cmp
inc
xor
mov
push
xchg
sbb
out
out
push
shlb
push
sub
aad
data16
jle
leave
or
xor
loopne
aam
pop
add
pop
push
add
jge
or
hlt
testl
xchg
sahf
addr16
push
cs
inc
and
pushf
mov
mov
jp
lock
scas
pop
mov
stc
sbb
es
inc
pop
lret
lcall
mov
cltd
and
lds
lcall
movsl
add
loope
sbb
mov
jno
dec
fisttps
pop
mov
inc
add
fwait
cmc
mov
fnsave
pop
testl
sub
loope
inc
inc
cmpsl
dec
xlat
mov
in
cltd
dec
dec
mov
js
in
adc
gs
lret
mov
sbb
lret
cld
aam
into
jns
fcmovnu
int
lret
sbb
sahf
jae
mov
mov
xlat
xchg
xor
dec
jo
fisttps
fdivr
sub
setno
mov
dec
jmp
xor
das
movb
add
out
in
aas
mov
bound
fsubs
loop
or
fucomip
inc
xchg
repnz
test
jbe
loop
daa
add
shlb
push
cltd
sar
loop
js
cmc
or
rcr
popf
bound
or
or
iret
gs
adc
mulb
mov
mov
in
mov
lahf
into
push
push
int
fstpl
dec
gs
mov
int3
sub
jmp
fcomps
frstor
fldenv
and
aas
jmp
loop
faddl
xor
rcrl
ljmp
iret
fldcw
sbb
sub
pop
pop
inc
mov
andb
gs
add
sbb
xchg
pop
jbe
jg
fidivl
mov
lock
add
push
loope
pop
pop
sub
xor
shrb
pop
add
inc
fsubl
xchg
jne
xchg
lock
mov
call
mov
jo
inc
mov
pop
out
jae
les
mov
pop
repz
ret
mov
or
pushf
mov
int
mov
jae
and
sub
scas
mov
jg
fisubl
cmpsl
insb
mov
stc
inc
sti
adc
mul
bound
lahf
into
es
into
inc
lahf
in
mov
mov
repnz
std
loopne
pop
push
loopne
jmp
add
cmp
sahf
xchg
sbb
fwait
add
movsb
int3
or
pop
or
jno
jmp
arpl
or
leave
daa
fs
lret
das
push
cmpsb
jne
and
je
insb
pop
and
inc
adc
mov
outsl
out
mov
inc
mov
lea
mov
ret
out
jl
inc
jno
or
push
jl
mov
add
sbb
popa
xchg
shrl
mov
mov
in
pop
out
xor
or
out
in
cltd
jecxz
inc
test
or
dec
xchg
sar
mov
or
add
stos
push
out
sbb
arpl
mov
mov
pushf
xchg
pop
inc
bound
inc
enter
loop
push
subb
jge
inc
shrl
mov
pop
inc
add
enter
dec
pop
pusha
divb
je
lods
sbb
xor
hlt
inc
lods
mov
rclb
lcall
ljmp
rolb
loope
push
push
in
loop
xchg
or
mov
or
sbb
pusha
sub
sub
xor
fcompl
lods
scas
pop
cmpsb
push
adc
ret
or
jp
fildll
xor
and
cmp
mov
mov
mov
aaa
cmp
adc
cmc
lock
popf
lods
or
inc
imul
dec
push
pusha
sbb
mov
vmwrite
push
imul
and
xorb
fs
dec
add
push
inc
add
fnstcw
es
rorw
inc
sti
fimull
inc
mov
pop
push
aad
push
data16
call
test
jle
xchg
sub
adc
mov
lahf
cs
imul
adc
sbb
and
mov
inc
xchg
push
pop
pop
xorl
lret
pop
ja
jb
add
aas
sbb
dec
scas
dec
hlt
in
inc
add
and
add
pop
push
sub
inc
adc
adc
or
iret
or
jno
int3
aaa
imul
jne
ja
push
sbb
push
xchg
jp
test
mov
add
and
jl
cs
pusha
push
lock
mov
jb
mov
in
fbld
jnp
sub
js
mov
xchg
mov
pop
xor
cld
fidivrs
xchg
xor
push
cmp
cmp
dec
xchg
lods
neg
insl
ljmp
xchg
or
cmpsl
js
sbb
jecxz
loope
xchg
jge
and
cmp
jno
repz
divb
mov
insb
ja
mov
pop
mov
jb
outsb
std
xor
fidivl
mov
inc
sub
enter
and
mov
and
push
jbe
stos
mov
mov
and
jnp
testl
and
adc
cmpsb
icebp
push
stos
lods
outsb
cli
fwait
or
mov
rcrl
jbe
outsb
sbb
leave
xor
daa
jno
adc
cmp
xchg
adc
mov
mov
sub
jno
adc
enter
sbb
dec
jno
jg
jne
dec
cmpsl
sti
cmp
push
push
xor
subb
loopne
pop
in
jge
pop
add
lods
mov
mov
lods
push
dec
scas
push
ret
jmp
out
jmp
adc
inc
ds
aas
cmp
mov
push
or
addb
dec
daa
sti
aas
mov
dec
adc
push
sbb
shl
ret
cmp
cmp
mov
lahf
sub
sbb
ret
push
cmp
mov
mov
arpl
repnz
push
bnd
dec
loop
lcall
inc
mov
inc
pop
clc
addr16
xor
gs
pushf
add
pop
out
movsl
out
int
leave
orb
repnz
jne
adc
push
xlat
dec
fld
and
aad
xchg
mov
sbb
push
fstpl
and
or
cltd
icebp
lahf
sbb
ljmp
add
cmp
pop
insl
dec
lret
cmp
fimull
out
mov
push
orb
ret
fidivl
push
pop
cmp
fdivrs
lcall
push
pushf
imul
imul
jmp
mov
jb
pop
jmp
cmp
cld
mov
hlt
pusha
inc
aam
inc
jne
pop
arpl
test
inc
es
ja
shr
or
jae
and
bound
sbb
inc
popa
movsb
fistl
fiadds
jno
xor
inc
jl
jle
cmpsl
inc
lcall
dec
in
neg
mov
inc
sahf
icebp
jb
movsb
sub
xor
or
mov
mov
stc
out
popf
inc
push
mov
mov
mov
ficoms
jge
or
scas
call
mov
dec
in
movsb
cld
push
aas
jb
cmp
mov
and
cmpsb
js
jb
xchg
enter
lds
repz
out
add
test
in
adc
jbe
xchg
xor
push
sub
push
pop
icebp
scas
pushf
and
xor
out
cmp
xchg
jmp
adc
cli
jae
test
cmp
pushf
inc
shll
lds
mov
sub
push
mov
dec
andl
je
jmp
push
enter
cld
loopne
lret
mov
push
loopne
and
in
mov
pop
lods
fldenv
je
push
or
xchg
aaa
and
jg
pushf
mov
inc
add
popa
fisttpll
lds
int3
hlt
mov
inc
repz
rcr
xor
aaa
fisubrs
lret
inc
mov
push
movsl
ret
popf
mov
sub
cmp
adc
je
xor
movsb
jo
cs
push
pushf
in
pushl
fildll
add
rolb
movsl
sub
enter
outsb
psraw
out
xor
push
dec
shrb
pop
jmp
stos
mov
dec
inc
jmp
or
movsl
jl
mov
hlt
jbe
xchg
fldcw
into
or
pop
xor
push
pop
mov
fmulp
loope
test
jle
sbb
xchg
cmp
xchg
jl
sub
xor
cwtl
lret
push
call
fld
mov
shr
mov
inc
lods
or
jae
ja
sbb
push
clc
mov
fdivs
adc
lods
pop
sbb
cmp
pop
cltd
imul
movsl
dec
xor
pusha
sub
scas
jl
inc
inc
mov
loop
jmp
jae
ret
pop
rcr
hlt
hlt
mov
in
push
subl
pop
lea
pop
test
test
jbe
or
inc
mov
xorb
stc
cli
dec
xchg
es
pop
jnp
pop
cmp
sti
mov
mov
repnz
and
lock
in
push
xor
inc
xchg
or
daa
xchg
repz
inc
out
mov
fsub
mov
jno
leave
icebp
or
in
sbb
adc
xor
sbb
xchg
outsb
jp
mov
pop
push
mov
jmp
adc
add
loop
xorl
test
cmp
xchg
std
stos
loope
xchg
loop
cmp
mov
call
jbe
or
cli
xchg
push
aaa
xchg
jle
and
popa
add
jle
mov
or
xchg
xor
jbe
lock
push
jno
dec
sub
loop
stos
div
out
jne
lret
cwtl
xor
mov
add
test
or
xchg
rorl
jne
mov
add
insl
mov
test
and
lock
pushf
mov
xor
mov
xchg
jbe
jl
std
pop
xor
andl
in
xor
repnz
test
and
lea
repz
rorb
or
test
test
xchg
sub
loopne
xchg
bnd
lods
cmp
leave
shl
out
add
inc
mov
lods
mov
add
and
mov
jp
xor
std
vmwrite
add
mov
add
cld
push
pop
dec
add
rclb
xchg
jge
sbb
testl
and
push
inc
lcall
mov
or
test
and
cmp
hlt
and
push
sbb
movsb
dec
in
jecxz
mov
xchg
dec
xlat
cmp
pop
cld
das
std
inc
popf
incb
out
push
mov
and
adc
jle
cli
pop
pop
fwait
insb
icebp
jb
pop
sahf
pop
loop
roll
add
jbe
adc
jl
test
mov
mov
push
insl
mov
xor
cmp
xchg
cmp
mov
das
fmull
rcr
fcompl
push
add
ljmp
mov
sub
stos
xchg
std
adc
jmp
sub
out
test
sbbb
dec
ja
add
movntq
dec
sub
dec
loope
add
mov
std
add
mov
add
cmp
xor
lods
fistpll
fsubrs
cmpl
rolb
xchg
mov
xchg
pusha
scas
movsb
jg
push
mov
dec
stos
xchg
cmc
int3
bswap
repz
dec
jnp
imul
dec
adc
cmp
bound
inc
mov
sub
and
cmp
jl
mov
ja
out
jg
ret
xor
movsl
cli
rcrl
and
arpl
pop
aam
into
mov
call
or
data16
mov
push
lcall
and
cmpsb
mov
in
in
inc
fcoms
mov
je
mov
insl
nop
loope
jp
imul
sti
loopne
or
rclb
pop
mov
add
xchg
mov
in
fnstenv
and
mov
mov
add
jle
cmp
hlt
pop
clc
jnp
cmp
mov
out
xchg
int3
sbb
repnz
add
int
add
xchg
lahf
ficoms
out
and
dec
pusha
movsb
int
or
ror
outsl
outsb
xor
cmpsl
add
jae
inc
pop
push
add
mov
insb
xchg
jge
arpl
ja
hlt
mov
mov
mov
rcll
lods
xchg
or
int3
mov
push
icebp
ljmp
leave
mov
add
mov
shll
mov
pop
lods
or
ljmp
jo
sub
roll
push
in
jge
push
cmp
rolb
inc
ljmp
js
out
lods
enter
dec
pop
or
insl
ss
mov
cmp
sub
fdivr
outsl
dec
paddsw
jnp
add
push
jae
cmc
push
sbb
popf
dec
add
pop
pusha
push
adc
cmp
cmp
stc
xor
inc
xchg
das
call
add
pop
add
sub
and
xchg
cld
or
cmp
test
push
sete
pop
push
or
sub
push
dec
stos
jg
hlt
pop
mov
mov
hlt
xor
cmp
pop
add
dec
xchg
inc
pop
xchg
xlat
fisttpll
roll
jmp
js
mov
jnp
dec
push
sub
add
add
mov
adc
push
add
daa
nop
cmp
add
inc
das
sti
outsb
xchg
cmp
aam
inc
out
fcoms
xlat
sbb
mov
mov
jge
popa
push
mov
les
add
out
add
cli
add
mov
mov
jle
push
push
std
ja
xchg
push
lret
fsubs
mov
push
rcll
or
mov
xchg
add
arpl
lret
test
icebp
xchg
cmp
cli
jo
mov
sub
mov
ljmp
xchg
gs
push
out
das
mov
push
ljmp
les
jae
cmc
or
push
add
mov
jmp
and
mov
or
cs
loope
mov
mov
aas
insb
shr
imul
adc
aas
or
movsl
inc
nop
imul
testl
xor
negb
mov
xchg
fadd
and
popa
xor
pop
xchg
or
adc
adc
lods
clc
add
out
mov
js
lods
lret
daa
sbb
testb
out
inc
clc
das
cli
stos
adc
mov
sbb
test
pop
es
and
lahf
sub
pop
sbb
add
or
mov
ja
stos
adc
mov
movsb
testb
cmp
lds
loop
dec
mov
dec
in
ds
jp
cmp
mov
pop
and
sbb
cmp
addr16
sbb
je
lods
movb
imul
and
xor
xchg
repnz
pop
xchg
jecxz
cmpb
mov
outsl
addl
stos
insl
cmp
xor
mov
sahf
adc
mov
data16
loope
lret
cwtl
sub
push
sbb
jmp
rolb
mov
sub
cmp
dec
sub
call
rorl
ror
xor
movb
jmp
cld
xor
pop
popa
jae
loopne
jmp
or
lods
testl
or
or
or
repnz
out
mov
xlat
les
int3
adc
cli
shl
cli
cwtl
add
leave
rorl
dec
fdivs
test
roll
out
lahf
fcoml
pop
mov
into
push
cld
sahf
faddp
shlb
loope
push
sbb
push
repnz
addb
cmp
lret
xchg
ret
fsubl
and
mov
js
mov
fwait
jp
and
mov
clc
pop
nop
xchg
dec
dec
mov
shl
fisubl
xchg
dec
test
insl
mov
out
and
push
mov
xor
adc
mov
addr16
push
cmp
adc
cmp
or
ja
sub
daa
inc
add
cmpsl
cltd
mov
stos
ret
sahf
push
aad
cmc
sahf
sbb
or
pop
add
xor
dec
pusha
adc
dec
pop
push
sub
loop
int3
stos
jne
dec
dec
adc
insl
ret
xor
dec
test
inc
xchg
or
in
ds
jg
xchg
dec
out
xor
inc
sbb
adc
bound
jmp
sar
ja
popa
xchg
xchg
inc
jns
cmp
xchg
add
or
sub
mov
inc
pop
sub
jge
and
add
aas
aaa
pop
imul
js
daa
movsb
sub
cld
in
jle
stc
pop
or
mov
lahf
jne
mov
or
pop
sub
notb
add
addl
insb
jmp
testl
push
iret
push
jmp
jge
and
push
mov
push
jmp
loop
cltd
fisttps
sbb
mov
dec
ja
adcl
pop
sbb
pop
stos
popa
gs
xor
ja
sbb
fbstp
and
enter
int
and
push
stos
in
xor
add
ds
inc
adc
adc
rcrl
sub
movsl
xorl
lahf
out
clc
aam
add
loope
push
and
mov
cmp
adc
ss
fld
adc
lea
cmpsl
mov
jmp
int
cmp
fstpt
test
mov
mov
mov
xchg
and
mov
or
mov
jns
repnz
cmp
and
sub
out
lret
pop
mov
mov
lcall
insl
cmp
dec
stc
dec
xchg
fcompl
scas
insb
lcall
add
jecxz
jp
insb
dec
xchg
xlat
inc
repnz
fidivrs
stos
es
mov
add
sbb
int3
iret
sub
xchg
call
ret
fsub
sahf
lahf
jno
sbbb
mov
sub
fisttpl
dec
idivb
popl
es
pop
sbb
xchg
fimuls
inc
sbb
mov
dec
add
mov
fstpl
xchg
mov
loopne
lret
insl
daa
js
sahf
daa
imul
dec
xchg
icebp
int
jae
shrl
or
push
and
test
ja
cmp
xchg
cltd
aam
std
cli
rolb
sahf
and
lods
pusha
in
xor
lods
sbbb
cld
cmp
cmp
lret
push
loope
stc
mov
fsub
jbe
jle
xchg
fldenv
xor
and
inc
mov
dec
outsb
test
cmp
lods
fcompl
je
xchg
mov
mov
imull
ret
jnp
add
cmp
sti
cltd
or
pop
loopne
test
jle
mov
fsubs
movsl
rclb
cmpsb
cltd
jns
test
push
dec
push
aas
push
mov
xor
ja
and
fisubrl
sbb
shrb
inc
aas
lret
flds
mov
jl
mov
pop
jo
outsb
int3
pop
bound
and
mov
and
cs
popa
repz
sbb
sub
lods
jno
mov
inc
das
sbb
add
ljmp
dec
or
fucomp
dec
fwait
pop
mov
loopne
fbstp
mov
fisubl
mov
outsl
shl
cmpsl
jae
movsl
inc
xor
shll
loopne
fsubl
fdivr
xor
repnz
push
xchg
dec
daa
cmpsl
pusha
mov
lret
shr
push
lret
int
ja
outsb
rcll
dec
cmp
fdiv
test
int3
imul
jnp
mov
add
cmpsb
test
fdivs
mov
and
jg
jge
xor
dec
xor
adc
enter
cmp
and
cs
cmpsb
fwait
es
jo
rcll
mov
roll
add
push
dec
inc
add
rcrb
adc
mov
mov
mov
mov
sbb
aam
inc
inc
mov
mov
sbb
iret
fwait
insl
mov
scas
push
add
inc
cmp
cmpsl
test
xchg
push
lea
inc
cwtl
dec
and
lods
push
bnd
xchg
cmp
lret
mov
cli
pop
mov
lods
inc
sbb
mov
jmp
mov
pushl
push
mov
mov
dec
cmp
lock
pop
out
aam
cld
ss
sbb
add
pusha
jmp
or
or
and
push
pop
daa
aad
in
xor
mov
dec
adc
push
inc
xor
push
add
nop
adc
insl
subl
inc
call
mov
and
add
inc
addr16
or
mov
data16
push
pop
imul
sub
mov
sbbb
cli
sbb
shl
lahf
jp
outsb
mov
je
mov
fists
test
and
push
scas
cltd
iret
repnz
clc
cmc
push
orb
push
sub
loope
pop
inc
xchg
in
das
sbb
mov
fimull
xchg
jp
jmp
arpl
rclb
pop
dec
in
lods
je
mov
mov
mul
inc
jle
popa
jecxz
test
mov
mov
cmpl
incl
xchg
loope
pushf
and
xchg
stc
push
xchg
jnp
push
xor
stos
loopne
jle
inc
or
cmp
fistpll
les
pop
sbb
mov
dec
inc
dec
mov
jle
xchg
xchg
cltd
push
std
scas
mov
loop
pop
test
das
sbb
sti
xor
gs
jp
sti
call
les
adc
cmp
rol
das
out
dec
into
fbld
inc
xchg
xchg
push
xlat
add
sti
xchg
shl
lahf
adc
imul
ret
jg
sbb
lret
inc
sub
not
cmp
add
outsl
mov
rorb
push
push
push
shlb
xchg
gs
enter
inc
mov
rcl
xchg
push
dec
and
mov
loopne
lret
ds
xchg
mov
repnz
rcr
into
and
ljmp
enter
rorl
or
in
lds
popa
mov
scas
adc
and
adcl
fadd
mov
ret
mov
cli
je
mov
cmp
or
mov
pop
lods
fisubs
in
aam
xchg
mov
les
xchg
aaa
inc
jne
lds
adc
pop
leave
mov
lea
flds
test
mov
sub
sbb
scas
call
idiv
ret
and
sub
push
xor
pop
daa
into
and
adc
adc
push
in
sbb
dec
outsb
or
lods
or
mov
nop
jno
out
fwait
lods
sub
xchg
outsb
cs
mov
jo
pop
adc
out
loope
jmp
scas
push
mov
int
push
and
push
insb
push
sub
sub
cli
add
dec
add
pop
in
insb
lods
popf
inc
jecxz
add
outsb
sub
ja
int
mov
outsl
mov
shl
sahf
ljmp
cmp
mov
and
dec
lahf
mov
mov
fbld
or
xor
push
xor
xchg
insb
add
mov
or
test
dec
jl
jl
mov
jmp
push
mov
xlat
xchg
iret
cwtl
cltd
pushf
inc
cmp
cmp
mov
loopne
and
xchg
mov
jge
xchg
data16
inc
mov
xchg
scas
or
aas
sbb
out
and
inc
in
push
jle
jnp
stos
pop
mov
sub
mov
out
jae
ljmp
bound
mov
cwtl
cmp
push
mov
dec
cmpsb
cmpsb
xor
push
std
addr16
and
inc
shlb
push
clc
into
ja
stos
sbb
add
xor
cmpsb
pop
mov
push
adc
fisttpll
jmp
cmp
push
addl
lods
cmp
sti
jae
ljmp
rcll
nop
and
cltd
jns
jmp
adc
or
pop
inc
icebp
addr16
fldcw
mov
xor
pusha
call
ret
xchg
push
sti
push
push
mov
mov
test
jae
in
jl
add
sub
mov
fiaddl
lods
int
mov
inc
jbe
bndstx
aad
stos
fbstp
dec
sbb
dec
icebp
mov
adc
sbb
mov
push
xchg
repz
cmc
jmp
and
mov
adc
xorb
mov
pop
fnclex
push
mov
sub
shl
subl
loope
push
lret
cmp
push
sub
sahf
adc
xchg
jecxz
jl
cmpsl
xchg
pop
and
das
inc
jns
jecxz
rcrb
jl
inc
or
inc
push
adc
pusha
mov
nop
jl
out
jmp
push
sbb
adc
inc
test
cwtl
pop
mov
enter
ret
jg
cmpsb
mov
jae
xor
push
fwait
sbb
inc
xchg
lea
in
stos
and
add
mov
sbb
dec
je
add
mov
push
sub
push
add
inc
les
mov
sub
fisttpll
hlt
mov
test
aas
orb
mov
inc
cli
fstp
pop
fdivrp
pop
mov
or
push
adc
aad
clc
shr
test
pop
movsl
cmp
pop
arpl
scas
mov
and
addr16
addr16
jmp
les
mov
ret
stc
call
addl
mov
jmp
stc
xchg
mov
arpl
out
popa
push
pop
cmc
rcll
test
lock
std
ljmp
es
dec
fists
push
pop
cwtl
mov
add
pop
inc
adc
xlat
out
pop
jnp
jo
pop
pop
pop
stos
xchg
push
aaa
lret
or
imul
mov
push
ret
add
lea
or
mov
adc
sbb
adc
pop
andb
lahf
daa
add
clc
inc
das
push
mov
cmp
int
jno
out
and
cmc
cmc
js
movsb
sub
shrl
ss
das
and
clc
mov
jno
imul
aas
xchg
sbb
adc
int3
xor
test
mov
loopne
sub
mov
bound
xchg
jle
push
xor
push
mov
adc
dec
or
daa
out
xchg
sub
leave
fcompl
call
leave
sti
rdseed
lods
clc
mov
lret
mov
int3
lods
lret
add
adc
mov
cmp
enter
test
xchg
lahf
cli
loopne
mov
icebp
inc
addl
hlt
decl
push
lret
repz
ss
sbb
or
mov
mov
jmp
cld
sar
ret
ljmp
imul
adc
mov
rolb
jmp
pop
sub
ss
mov
ret
cld
jge
lahf
aas
pop
dec
mov
add
je
pop
sbbb
cs
sub
in
testb
cmp
aam
in
enter
adc
pusha
cmp
sub
cwtl
xchg
insl
icebp
inc
shlb
fnstsw
push
outsl
movups
scas
fcomps
adc
adc
out
popa
movsl
sbb
leave
dec
and
repnz
jge
ljmp
in
xchg
xor
cltd
stc
push
add
clc
adc
push
jmp
ds
dec
stos
xchg
push
jmp
mov
push
inc
das
push
sub
ficomps
or
mov
repz
jp
stc
out
fdivrl
clc
push
xor
rcrl
shlb
add
fsubr
stc
sbb
in
loop
mov
pop
pop
mov
cmp
sub
xor
mov
mov
jns
mov
jns
in
sbb
xor
addr16
inc
xor
dec
or
aas
push
mov
adc
fs
cmpsl
rcrl
sbb
ret
sbb
pop
dec
inc
sahf
dec
xchg
iret
mov
mov
mov
sahf
out
dec
shlb
loop
pushf
imul
pushf
test
jns
ret
daa
loop
adc
js
ds
push
xlat
mov
jae
mov
xorl
dec
push
cmc
or
nop
cmp
jmp
mov
sub
sbb
push
push
neg
mov
not
xchg
mov
sbb
pusha
sarb
ret
cmpsl
jno
insb
out
cmpsl
sbb
mov
add
or
sub
icebp
lea
in
test
push
cmpsl
and
push
push
jl
push
pop
out
les
fincstp
mov
and
push
inc
xchg
loope
pusha
dec
sahf
cmp
mov
inc
scas
mov
and
aam
cld
scas
add
push
xor
sub
pop
adc
mov
jmp
mov
mov
pop
sub
add
popa
ja
filds
popa
mov
xchg
inc
ja
xchg
adc
ja
ret
add
lods
mov
mov
lock
lret
fcmovu
xchg
not
int3
imul
lea
fsubrl
fdivrs
xlat
or
push
ds
minps
movsl
push
sbb
notb
jmp
fcoml
mov
xor
adc
inc
out
into
lods
sub
data16
orb
pop
inc
and
divl
mov
or
dec
push
into
lahf
inc
loopne
mov
sbb
fstpl
in
xor
xor
shll
inc
inc
cmp
pop
inc
data16
out
adc
js
arpl
mov
xor
js
pop
js
popa
rorl
into
and
into
stos
shll
jns
popf
int3
dec
push
inc
scas
or
adc
push
ljmp
sar
jmp
adc
mov
mov
pop
or
mov
jp
int
repnz
xchg
mov
cld
jnp
inc
imul
xorb
pusha
sbb
inc
divb
mov
aas
lods
mov
mov
cli
adc
loopne
popf
loope
or
pop
mov
rorl
js
insb
insb
test
mov
xorl
sub
sbb
lahf
push
daa
pop
push
mov
dec
mov
xchg
sub
in
enter
jl
pop
sub
fcoms
cli
add
jbe
cmp
cmp
popf
daa
shlb
adc
ds
xor
repnz
jne
stos
sahf
xlat
ds
xchg
cmp
fwait
imul
adc
int
movsb
fisttpll
sbb
push
xlat
fnsave
rcrb
dec
pop
rcrb
dec
push
and
cmp
jae
repz
push
stos
push
cmp
imul
ds
pop
std
outsb
lods
sub
popa
sbb
call
fmuls
pop
ret
cmp
lcallw
test
das
adc
int
jns
es
and
jno
sbb
test
adc
jno
sti
adc
arpl
jl
cmpsl
iret
fsubrl
or
add
out
and
mov
cld
sub
add
rolb
les
lahf
jb
ja
mov
fucom
cmp
cmpb
lea
inc
mov
adc
xchg
pop
pop
xchg
loope
xor
mov
inc
xor
jnp
jp
shrb
imull
mov
sbb
pop
or
sub
aas
iret
sbb
iret
mov
mov
mov
call
cltd
push
and
shll
out
xorl
into
add
cld
mov
test
lods
pop
movsl
ret
pusha
mov
fadds
push
jmp
stos
fstl
inc
push
loop
lret
inc
add
mov
sub
sub
mov
pusha
sarb
mov
and
lea
aaa
fistl
lock
sub
sti
lcall
icebp
daa
aam
or
mov
mov
subb
pushf
lret
xor
fisubrl
incl
ret
sub
adc
jecxz
loopne
int3
pop
xor
push
ds
ret
push
push
lahf
rorl
roll
xor
lds
xor
add
stos
sub
jns
jno
pop
fiaddl
int
jmp
stos
sub
push
add
jmp
idivl
adc
adc
cmp
icebp
mov
popf
cs
adc
ja
adc
ds
adc
push
adc
imul
mov
adc
jo
stos
ret
jmp
or
repz
push
xor
push
add
xor
push
jne
xchg
flds
jne
pusha
pop
sahf
pop
or
cmpb
mov
cli
sti
mov
js
inc
cmpl
pop
repnz
in
sub
or
mov
hlt
push
rolb
mov
sub
in
insb
sti
add
jg
arpl
sub
shrb
jle
loop
rcr
shll
loop
cli
adc
out
sahf
cmpsb
cld
stos
jns
sbb
mov
inc
aam
pop
out
ja
popa
push
js
cmp
inc
inc
popa
mov
cmp
push
xchg
push
mov
dec
adc
call
jo
pop
mov
sbb
adc
xchg
adc
adc
fwait
mov
dec
adc
jns
ds
xchg
jmp
xor
arpl
mov
adc
sub
aam
cwtl
adc
add
out
ret
mov
pop
dec
pop
mov
sbb
push
or
enter
jnp
xor
ja
cmpb
imul
sub
lock
sti
outsb
mov
cvtps2pi
les
add
jg
dec
repz
repz
cmp
movsb
bound
lahf
pusha
aas
jb
ljmp
mov
fcompl
hlt
mov
sbb
cmp
or
mov
test
sub
push
push
bswap
push
dec
rep
fnstsw
fdivrs
lods
addl
shlb
outsl
pop
jo
pop
faddl
jl
sbb
mov
xchg
mov
shrl
call
xchg
int3
pop
dec
lret
imul
cltd
ss
shr
aad
aad
xor
dec
sti
arpl
xor
lahf
jg
cmp
mov
xchg
sbb
sahf
push
lock
mov
int3
sti
adc
int
xlat
orl
cmp
mov
push
adc
push
inc
fsubl
dec
sub
pop
jle
jl
push
push
mov
rorb
frstor
movb
outsl
les
andb
andl
pop
in
into
in
dec
jge
loope
add
imul
mov
dec
inc
dec
pop
pop
hlt
or
mov
add
fwait
sahf
jne
cs
adc
imul
mov
jp
outsl
call
ja
adcb
call
jecxz
pop
into
push
fldl
scas
sbb
fnstenv
sbb
outsl
dec
xor
inc
sbb
adc
insl
std
adc
push
ja
hlt
sbb
repnz
test
or
fdivl
ret
inc
or
xor
mov
sbb
lcall
dec
aam
pop
aas
scas
xchg
jl
push
lret
xchg
dec
pop
imul
mov
xor
rcrb
cli
and
shl
out
dec
loopne
or
sbb
sarb
mov
cli
sub
in
xchg
int3
add
cwtl
mov
jnp
movsb
inc
mov
jecxz
cmc
and
xchg
ds
inc
in
push
lock
cmpl
xor
pop
jl
popf
or
inc
test
data16
mov
sub
pop
mov
loope
jmp
push
jmp
adc
bound
mov
or
dec
data16
popf
aad
mov
out
in
movsl
or
pop
das
mov
outsl
sbb
addb
sar
push
mov
pop
dec
and
dec
mov
sbb
aaa
sub
iret
sti
xor
jg
movsl
sbb
mov
bound
cmp
scas
insb
add
jmp
int3
gs
push
mov
mov
pop
mov
ljmp
mov
jle
inc
mov
cmpsl
out
inc
cmc
xchg
jo
push
and
aas
xchg
mov
rcrb
das
int
pop
test
push
inc
jno
nop
mov
aaa
outsl
fisubl
add
sub
xchg
or
and
loop
xchg
and
dec
lods
mov
pusha
stos
sbb
push
mov
mov
jp
das
test
iret
cld
sub
sbbl
xor
pop
xor
add
or
dec
mov
mov
push
jecxz
nop
dec
xchg
mov
jbe
dec
imul
lea
lcall
cmc
mov
dec
mov
ljmp
or
cld
pop
or
mov
mov
scas
fidivl
xor
inc
or
in
test
cmpsl
std
loop
aam
in
imul
das
inc
je
mov
ret
fnstsw
push
jl
leave
xlat
gs
adc
mov
sub
sbb
repnz
test
xchg
test
xchg
push
cs
mov
inc
push
subb
adc
lret
xchg
js
in
jle
add
push
out
jno
sbb
test
lock
icebp
in
popa
fs
pop
jb
pop
sarl
xchg
sub
sbb
sbbb
xchg
sub
push
cmp
mov
inc
jae
stos
and
out
pop
push
cli
xor
and
sub
rcrl
repz
xchg
popf
xchg
jle
aaa
ret
inc
stos
jnp
arpl
fucompp
inc
stc
mulb
pop
xchg
jnp
fwait
int3
imul
lea
arpl
test
f2xm1
std
sub
mov
mov
test
pop
inc
cmp
sbb
xor
ljmp
ljmp
imul
pop
sub
jae
ss
mov
adc
outsb
push
push
in
shlb
adc
inc
out
mov
inc
push
pop
cltd
pop
cmpsb
sbb
push
fbstp
shll
mov
pop
and
dec
bsf
mov
aam
jge
dec
add
test
cmp
adc
cmpsl
push
add
push
pand
js
adc
inc
jp
inc
cmp
movsl
scas
lea
or
pop
clc
and
stc
xchg
push
insl
icebp
cmp
inc
xor
or
cmp
sbb
aad
mov
dec
nop
push
sbb
xchg
adc
mov
sub
cmp
imul
sbb
ret
repz
push
jb
mov
pusha
lret
push
fldt
add
das
mov
pop
sarl
mov
cmp
clc
cld
es
inc
cmp
scas
xchg
stos
cmpsb
stos
dec
scas
mov
sub
add
add
sub
push
jo
push
inc
push
inc
imul
stos
xchg
xchg
ljmp
pop
add
xchg
jae
pop
mov
lods
xchg
loop
sub
in
mov
lea
ja
rorl
fwait
inc
outsb
daa
push
loop
dec
inc
inc
shll
pop
mov
push
jne
fninit
mov
faddp
xor
xchg
out
pusha
shrl
jmpw
jne
xchg
lret
dec
mov
popl
and
jb
sarb
xor
inc
inc
insb
pop
imul
sbb
and
mov
xchg
movsl
xor
loopne
cli
fidivs
sub
sub
ret
push
add
add
xchg
fimull
sti
pop
movsl
mov
xor
sbb
aam
xor
stos
xor
cs
mov
mov
cmpb
enter
outsl
adc
mov
insl
xchg
lock
lret
addb
es
jmp
fnstsw
gs
iret
loop
ljmp
repz
mov
dec
xchg
stos
icebp
jge
lcall
inc
mov
push
adc
ss
mov
popa
inc
negb
lret
std
xlat
add
push
push
mov
out
dec
dec
lods
lods
ret
lsl
cld
outsl
mov
shr
roll
and
cmp
sahf
or
jne
sub
jl
adc
lods
in
lods
inc
imul
xor
cmpsl
mov
leave
sbb
mov
adc
test
xchg
push
aam
mov
mov
cmp
lock
mov
xor
fcompl
adc
in
pop
cmpsb
mov
out
mov
cmc
rclb
pushf
pop
data16
cmp
sbbl
push
push
js
clc
inc
ljmp
and
and
pusha
aam
mov
loope
xor
out
add
cmp
aaa
shl
mov
adc
int
loop
js
in
cmp
xchg
pop
mov
jg
or
pop
xlat
scas
sbb
xorl
xchg
xchg
sbb
dec
adc
xchg
or
out
out
xchg
jmp
sbbl
test
jp
cmp
cmpl
or
pop
mov
sbb
sub
jbe
in
out
pop
xchg
sbb
jl
cs
add
leave
push
daa
inc
or
cmp
push
popf
and
pop
cwtl
sub
dec
mov
fistl
fidivl
push
ss
in
call
adc
jg
int
clc
imul
xor
mov
in
pop
sbb
sbb
dec
mov
xor
repz
sahf
sub
push
insb
push
jp
mov
cmp
repnz
push
xor
mov
jle
push
jmp
insl
cmp
scas
jecxz
das
ljmp
out
adc
rol
dec
gs
fists
sbb
push
pop
adc
imul
and
xor
inc
outsb
out
div
pop
pop
inc
adc
movsl
fcoml
mov
cmpsl
xor
bound
insl
in
test
dec
aam
out
xor
mov
xchg
jo
lods
pop
aad
data16
push
bnd
mov
sub
and
pop
jae
ja
cs
jbe
clc
cmp
fs
adc
rcrl
jg
insb
or
test
dec
or
mov
aad
psubsw
movsb
pop
jb
inc
aas
in
cmp
mov
add
sbb
lcall
cmp
arpl
insb
jmp
fbld
in
cwtl
popa
mov
xchg
or
and
adc
daa
cmp
aad
fistl
cmc
jnp
je
sti
repnz
inc
sub
pop
and
pop
sbb
push
cmp
in
dec
je
cmp
push
cmp
add
cmp
dec
enter
arpl
adc
sbb
loope
lret
cmpsl
and
xor
subb
mov
js
jbe
dec
bound
push
cs
xorl
cmp
jle
or
fdecstp
lock
jecxz
popf
mov
push
mov
insb
dec
jbe
push
shl
das
cmp
icebp
lea
mov
dec
mov
out
dec
add
push
adc
out
pop
jmp
arpl
bound
jg
iret
lret
icebp
movl
xchg
hlt
inc
scas
into
lret
jp
mov
stos
jb
push
adc
lds
fstl
in
stc
push
sahf
pop
out
sbb
loopne
rorl
int
lret
xor
into
mov
add
mov
xlat
lahf
cwtl
sbb
ja
jecxz
jmp
outsb
out
lock
xchg
and
cmp
push
fdivrl
lea
outsb
or
or
nop
shrb
dec
nop
mov
mov
jnp
enter
jle
sub
push
out
rol
dec
and
add
rol
ljmp
sub
ja
clc
fwait
or
icebp
in
or
insl
imul
sbb
sbb
icebp
inc
mov
xchg
dec
inc
stc
jle
out
mov
movsb
in
scas
add
je
outsb
enter
out
pushf
and
dec
cli
shll
add
and
adc
jmp
int
sbb
jnp
out
in
int
fistpll
and
repz
imul
add
mov
daa
adc
imul
mov
cmp
pop
inc
cli
mov
or
or
cmp
notb
int3
into
and
insb
ja
je
in
int
enter
mov
xchg
in
ljmp
push
orl
push
cmp
ljmp
cmpsl
mov
test
push
into
or
jl
arpl
adc
inc
or
jl
fldcw
sbb
pusha
mov
jne
shll
sbb
xlat
add
sbb
cwtl
out
cli
iret
cmpsl
rcll
outsl
sahf
cmp
xor
mov
sub
xor
mov
xchg
cs
jo
mov
movsb
test
dec
popa
cld
mov
xorb
adc
adc
aaa
inc
test
jge
cmpsl
lds
int3
jl
sbbl
sbb
sbb
daa
testl
xchg
out
push
xlat
xor
jno
xor
and
cmp
add
enter
mov
dec
pop
or
popa
pop
dec
pop
jle
adc
in
push
loope
out
push
insl
mov
push
add
dec
call
and
inc
test
mov
sbb
inc
xor
mov
jecxz
cmp
jmp
fisubrs
cltd
sub
jg
lret
in
fwait
push
insl
bound
test
lods
cmp
xchg
stc
push
imul
mov
and
cld
mov
loopne,pn
out
in
or
lods
add
roll
ss
dec
loopne
mov
data16
jns
fldcw
sbb
and
push
aaa
gs
inc
pop
add
xor
mov
mov
mov
test
jmp
cmp
jge
fs
mov
dec
adc
sub
jno
test
mov
mov
cli
inc
xchg
cmpsb
add
sbb
xor
data16
push
movsb
sbb
mov
push
les
add
push
cmp
pop
test
sub
xchg
mov
enter
push
cmpsb
inc
jbe
mov
cmc
out
into
in
mov
pop
cmp
cli
int3
jmp
ret
push
fisubrs
xchg
ret
push
test
cmp
xchg
scas
inc
mov
popf
mov
inc
int
push
add
shll
push
leave
jg
mov
pop
imul
pop
pop
cmp
mov
ja
rolb
fmull
stos
and
pop
xor
add
jno
test
xchg
add
push
aaa
aad
test
xor
daa
or
pop
daa
xchg
xchg
sarb
adc
out
push
sub
les
or
mov
jge
sub
rcrb
cmpl
sub
cmc
les
sub
negb
cmpl
mov
push
or
mov
orb
ror
stc
sahf
mov
adc
mov
jmp
cmc
idivl
out
popa
test
xor
ror
push
adc
lds
lock
int3
daa
mov
mov
xchg
mov
xchg
insl
popa
loope
sbb
or
xchg
xchg
loop
imul
jecxz
or
repnz
adc
add
out
or
push
mov
pop
and
pushf
cmp
ret
push
daa
dec
cmovge
imul
inc
jne
insl
adc
cmp
cmp
add
ds
or
js
cld
mov
jo
pushf
mov
test
scas
not
imul
addl
adc
sbb
test
xchg
push
clc
loope
test
mov
std
cmp
sub
jecxz
and
clc
push
and
inc
sahf
jb
cmp
push
rcl
push
nop
sub
adc
rcll
cmpsl
aam
pop
or
xor
sub
int
aaa
inc
daa
scas
negl
adc
imul
ret
arpl
lods
add
scas
mov
aad
adc
mov
jnp
ss
pop
shl
pop
pop
mov
adc
sti
pop
fiadds
mov
add
pop
dec
int3
xor
adc
in
mov
push
loop
sub
add
repz
test
adc
arpl
pop
pop
dec
stc
cmpsl
inc
push
mov
imul
ret
jp
in
cs
movsb
inc
sub
jmp
bound
aam
lret
mov
and
loope
pop
or
adc
out
mov
sbb
es
sub
inc
popf
xchg
xchg
inc
push
iret
ja
scas
popa
push
mov
popf
and
push
push
xchg
mov
outsb
int3
cmp
add
int
icebp
stc
xchg
cmpsl
int
fdivl
cwtl
aaa
std
cmp
mov
or
mov
jne
inc
xor
or
and
in
ret
add
out
sub
rorl
push
xchg
dec
nop
jno
push
mov
sti
sbb
test
shrl
sbb
dec
stos
pop
mov
cmp
repnz
mov
add
mov
fldenv
jns
lcall
sub
enter
xor
dec
mov
xchg
gs
test
scas
cmp
test
mov
cmp
lock
das
xchg
pop
test
or
pop
test
jb
pop
dec
cmp
ret
jg
mov
sub
add
add
jmp
pop
cmpsb
cmp
pop
push
das
mov
xchg
mov
std
dec
int
nop
jl
xchg
xor
sbb
aaa
aaa
ja
loopne
movsb
mov
jmp
call
mov
addr16
popf
inc
sub
push
clc
fs
xchg
rolb
dec
ds
dec
mov
insl
fcoms
jae
iret
xor
dec
push
scas
cmp
sahf
ds
cmp
push
insb
pop
jg
sahf
xlat
add
gs
je
or
mov
lret
xchg
mov
sbb
cmp
out
movsb
int3
add
push
scas
movaps
push
repnz
dec
sub
xchg
pushf
dec
mov
mov
jae
xchg
out
mov
adc
push
mov
in
inc
push
jae
shrb
push
mov
or
aaa
fsts
mov
fmuls
stc
or
out
rol
mov
xchg
xchg
das
jnp
popf
jb
int3
out
sub
mov
push
loope
addr16
les
fdivrp
dec
jae
jmp
cmp
pop
adc
in
lret
sub
push
mov
push
notb
psrld
inc
test
push
inc
lods
fnstcw
repz
dec
sbb
push
push
inc
or
out
mov
jnp
stos
fwait
int
mov
clc
push
in
cmp
xor
dec
fbld
jg
sub
nopl
cmpsb
jae
xor
xor
add
and
test
nop
mov
xor
mov
lret
mov
popa
hlt
add
aad
jo
jmp
adc
and
dec
jmp
xchg
xchg
mov
lret
js
ja
cs
es
and
add
or
dec
sbb
outsb
fstpl
add
ljmp
pop
mov
shlb
ds
test
push
aam
mov
popa
pop
jg
imul
lods
out
xor
adc
pop
sti
pop
jns
xlat
jg
in
or
test
add
xor
addr16
rorb
insb
in
xchg
stos
dec
mov
testb
mov
repnz
scas
push
fwait
dec
push
in
aad
add
mov
and
add
add
jmp
out
subb
cmp
mov
rcr
or
push
fistps
mov
ds
xchg
jl
movsb
lods
imul
push
das
xchg
xlat
add
fwait
ret
std
jecxz
mov
je
inc
adc
ret
pop
xor
iret
ja
xor
pop
push
mov
clc
loopne
cmp
push
shrl
cmpl
pusha
mov
sbb
cmp
pop
xchg
mov
ret
xchg
mov
lret
icebp
inc
push
fdivs
loope
jecxz
mov
and
mov
pop
xchg
xchg
in
pop
fnstenv
mov
adc
data16
jo
das
test
xchg
out
jbe
mov
cli
lea
adc
test
sbb
pop
lret
les
inc
jno
test
sbb
push
dec
or
out
mov
cmp
pop
mov
xlat
push
cmpsb
inc
pushf
or
push
push
fbstp
imul
sbb
lods
rcl
dec
pusha
add
test
outsl
jo
imul
mov
in
decb
enter
mov
sarl
lods
int
ja
into
iret
sbb
pusha
adc
flds
nop
cmp
daa
jl
pop
jmp
aaa
xor
clc
pop
into
lahf
es
xchg
cmp
jmp
dec
clc
jge
int
add
sti
mov
movsl
jae
scas
mov
notb
pop
aad
jmp
in
stos
out
push
inc
sub
pushf
jns
push
pop
sahf
out
or
pop
je
and
push
add
outsl
inc
into
cwtl
daa
mov
xor
and
fcom
mov
sbb
pop
push
mov
pop
negl
sbb
mov
filds
cwtl
shl
loop
mov
cmpsb
inc
cs
imul
jecxz
xor
cmp
mov
mov
dec
dec
xor
mov
shrb
loop
push
dec
pop
pop
fucomip
mov
mov
cld
cld
arpl
lods
into
dec
mov
push
and
pop
xchg
loopne
inc
xchg
lods
and
mov
pop
leave
loopne
fsub
jno
mov
sub
jecxz
xchg
addr16
out
nop
jl
jmp
clc
lcall
jmp
pop
push
test
xchg
movsb
inc
fiadds
jge
fistl
imul
lock
rsqrtps
pop
sbb
add
jne
dec
or
mov
pop
or
out
mov
cltd
push
adc
cltd
jmp
out
sbb
sbb
jecxz
mov
sbb
cmp
movsl
mov
stc
xor
push
jno
pop
cmc
out
mov
stos
mov
push
or
inc
and
push
jle
cli
jg
push
mov
push
sar
dec
es
mov
data16
xlat
nop
sarb
xchg
cld
cli
or
adcl
lds
xchg
cmp
call
fnstcw
mov
sub
and
xchg
out
stc
add
mov
into
inc
stc
arpl
repnz
mov
rorl
sub
out
add
fst
xlat
lock
movsl
sub
jbe
add
jmp
hlt
and
fsubrs
or
ss
jmp
jle
dec
dec
ljmp
repnz
inc
stc
mov
inc
or
mov
xchg
sbb
shlb
fisubs
adc
loopne
lods
xor
arpl
leave
pusha
dec
lock
add
rolb
pushf
imul
adc
in
test
cmpsl
sbb
outsb
push
jg
aam
sbbl
mov
out
and
inc
xor
ret
insb
leave
mov
icebp
or
and
test
xor
int
xor
adc
pop
dec
ret
add
push
push
in
jp
push
push
pop
imul
orl
lea
push
pop
xchg
xchg
mov
roll
dec
jl
pop
dec
outsb
repz
sub
loopne
cltd
pop
mov
das
xor
jl
jg
movsb
xor
jbe
cmp
test
mov
fildll
outsl
dec
mov
add
je
push
and
adc
cli
cmc
dec
sub
sub
pop
cltd
add
mov
cmp
jle
popa
negl
stc
cmp
jmp
icebp
cwtl
imul
or
iret
je
loopne
push
fwait
int3
xchg
test
cmp
insl
sub
mov
test
xchg
and
mov
xchg
sahf
jge
fdivl
rol
enter
ret
fisttpll
fwait
int3
and
fldl
sub
xchg
push
pop
scas
fs
pushf
rcl
rcll
cli
xchg
sbb
mov
ret
push
fs
pop
das
bound
mov
cli
cwtl
scas
xchg
sbb
loope
pop
mov
out
cmpsb
push
hlt
inc
out
out
pop
es
popf
pop
pop
fdivl
clc
xchg
gs
add
into
bound
pop
sub
xlat
mov
adc
push
cwtl
pop
idivl
faddl
and
mov
cmp
pop
fistpll
inc
es
sarb
inc
neg
dec
mov
cmpsb
and
data16
rorl
and
lret
pushf
jge
inc
dec
xor
leave
addr16
imul
mov
cmc
scas
popa
jl
cs
sbb
aas
loop
outsl
div
push
daa
xor
cmp
lret
cmp
sbb
outsl
iret
mov
jmp
cwtl
test
xorl
mov
fistl
jp
add
shrl
cmp
out
jle
insb
cmp
lock
jae
push
mov
in
aaa
mov
mov
adc
jo
inc
loope
lods
std
xchg
ret
addr16
aaa
mull
cmp
cmp
mov
lods
out
mov
in
xchg
aas
shll
imul
jae
subb
fbstp
mov
lods
fisttps
dec
nop
push
mov
std
outsl
je
add
mov
pop
mov
inc
xchg
fistps
ret
dec
jns
loope
push
in
mov
leave
mov
mov
pop
push
push
rolb
ss
movsb
or
lods
sub
fmull
repnz
pop
aam
mov
cmp
sbb
pop
cltd
sbb
pushf
dec
xchg
cmp
rcl
pop
pusha
push
xor
sbb
jbe
mov
add
cmp
aam
das
adc
jbe
insl
xchg
daa
in
lcall
pop
pop
mov
test
xchg
aam
mov
pop
dec
std
stos
mov
lods
inc
inc
lods
lret
movsb
add
popa
popa
cmp
dec
int
push
mov
mov
sbb
inc
mov
sub
aaa
adc
scas
jg
pop
out
or
jo
jmp
test
sub
sbb
jp
jecxz
lret
jl
mov
out
pop
dec
xchg
dec
sti
sbb
mov
xor
cmc
out
push
movsl
imul
repz
and
ljmp
and
xor
sub
cmovs
std
sti
mov
cli
dec
fcomps
push
test
mov
inc
jmp
into
jle
cmpsl
sub
mov
fmulp
out
mov
and
imul
sub
sub
adc
ret
mov
into
fbld
daa
ds
fisttpl
stos
clc
lahf
mov
stc
pop
arpl
inc
mov
inc
in
pop
clc
fdivrl
xchg
mov
jb
sbb
lods
sbbb
mov
test
test
xor
lret
ret
push
jnp
sbb
loope
rep
xor
cmpsb
cmc
inc
imul
push
mov
inc
mov
lods
sub
mov
fadds
push
rcr
cmp
and
mov
rcrl
pop
sbb
leave
cltd
sub
cmp
arpl
sbb
es
adc
fsubp
sbb
mov
jle
shrb
add
mov
in
lahf
cmp
scas
shrl
jmp
inc
push
xor
mov
adc
and
mov
stos
orb
or
out
iret
insb
or
push
inc
inc
cmp
fsubs
mov
adcl
xchg
mov
adc
enter
inc
mov
pop
jbe
pop
push
adc
cmc
ss
dec
stos
or
sbb
mov
pop
movb
es
jnp
repz
mov
lret
sub
or
scas
mov
sbb
mov
jmp
fcom
stc
mov
fldcw
jl
lods
inc
mov
lock
push
dec
mov
sti
mov
sbb
jecxz
or
iret
popf
popf
insb
into
in
lods
and
pop
jg
out
sub
test
push
in
das
aam
jmp
xor
fldt
dec
repnz
mov
inc
inc
dec
scas
nop
icebp
cmp
gs
lahf
test
pushf
sbb
or
push
or
push
add
out
xor
cmpsl
shrl
in
mov
in
or
push
jns
and
inc
jmp
inc
arpl
jae
pop
xor
dec
lds
std
mov
loop
adcb
cli
fcoml
lods
push
mov
jmp
imulb
sub
sbb
mov
cmp
pop
dec
dec
insb
push
aaa
xlat
aas
jno
int
sahf
aad
add
cmpsb
ret
inc
xchg
dec
scas
ds
cmp
aam
mov
je
in
subl
sub
push
movsl
and
cmp
push
leave
sub
mov
sub
test
call
jne
js
into
fiadds
sti
in
out
and
repz
jl
or
jnp
push
adc
mov
dec
enter
jns
inc
cltd
push
pop
popf
sti
or
xor
in
mov
lods
add
xchg
shlb
roll
fidivs
loopne
fs
sahf
sub
mov
pop
sbb
int3
icebp
sti
out
in
push
movsb
sbb
pop
icebp
lods
sbb
int
aas
mov
rcl
sbb
cwtl
outsl
les
sarb
and
fstpl
out
int3
and
add
andl
xchg
scas
int3
and
sti
sti
icebp
or
call
aas
mov
mov
dec
repz
addb
fsts
cmp
jge
mov
rcrl
shlb
sbb
xorb
jns
scas
or
xchg
or
fisubl
sbb
out
nop
push
out
or
arpl
push
fnstsw
je
inc
xlat
arpl
adc
dec
jno
outsb
loop
shl
pushf
fldcw
pop
aam
pop
jle
scas
jbe
mov
xorl
popf
fwait
push
mov
dec
scas
push
imul
shlb
pop
movsb
fimuls
enter
dec
jmp
xor
ss
decb
inc
mov
sbbb
push
inc
push
jnp
cltd
adc
loop
inc
xor
setno
sbb
leave
cmp
lcall
xchg
xor
scas
inc
xor
cmp
sub
int3
into
sub
int
mov
testl
les
cmp
mov
adcb
mov
hlt
lods
cmp
xlat
out
std
rol
pushf
mov
xor
xchg
mov
test
iret
movsl
add
xor
inc
push
out
mov
je
popa
sbb
repnz
loope
cmp
lock
jnp
ja
fldl
mov
mov
shlb
push
dec
pusha
inc
add
addr16
mov
movsl
insb
sub
leave
repz
cmp
addr16
mov
lods
lret
loope
adc
fistpll
jge
pop
sarl
cmp
sbb
pushf
mov
popf
repz
hlt
dec
xor
cmp
or
sbb
out
mov
in
dec
jnp
mov
mov
movsl
mov
dec
cmp
movsl
repnz
addr16
sub
dec
add
ret
sbb
ficoml
movsl
and
jo
popf
rcrb
adc
pop
ficoms
and
leave
icebp
push
sti
mov
mov
xor
adc
mov
push
pop
sbb
pop
ret
neg
xor
inc
ljmp
fstl
xchg
movsb
sbb
iret
sbb
or
mov
push
pop
mov
ja
lods
push
sub
cmp
xor
xchg
cmp
jl
mov
xor
mov
jg
and
push
test
and
fdivl
mov
ljmp
jle
test
outsb
dec
push
mov
int3
sbb
cmc
mov
ja
fdivrl
push
adc
test
sub
pushf
sti
push
jp
or
sub
sbb
addr16
into
push
popa
jp
mov
psubb
mov
push
fildll
das
push
cmpsb
fdivs
mov
hlt
outsb
and
int
jns
xor
jae
push
mov
popf
repnz
lea
jle
lock
add
adc
lods
adc
pop
nop
dec
out
xchg
in
and
iret
lahf
cmp
push
push
mov
jb
xchg
jg
and
stos
ljmp
xchg
push
inc
mov
pop
test
int3
jb
repnz
xchg
push
mov
scas
push
call
pop
cmp
xor
movsb
test
stos
and
adc
in
hlt
out
add
and
stos
mov
movsl
mov
lcall
adc
xor
les
and
jecxz
je
outsb
stos
and
mov
or
rorb
push
lcall
fldcw
mov
cmp
adc
jno
pop
ficomps
cmp
gs
pop
das
fwait
cli
mov
push
inc
leave
fisubl
dec
js
push
push
pop
xor
out
es
popa
pop
cmpsb
ds
and
movsb
push
xchg
mov
loop
int
jbe
pop
mov
xchg
add
jmp
adc
dec
out
mov
or
ret
dec
xlat
fs
aas
repz
mov
out
mov
out
push
data16
xor
pop
push
loop
mov
sbb
cmpsb
sub
lods
dec
and
mov
mov
mov
inc
inc
xchg
je
ja
sbb
mov
push
popf
test
sub
mov
nop
dec
pop
or
xlat
pop
inc
jge
dec
fcoml
jo
jns
out
dec
or
mov
cmpsl
push
push
mov
fcompl
push
stos
push
mov
add
test
test
dec
adc
jg
js
test
sbb
bound
mov
hlt
lret
call
or
xchg
ljmp
xor
into
inc
mov
add
in
in
sbb
iret
nop
xchg
lcall
dec
out
mov
adc
mov
and
decl
inc
sarl
mov
test
mov
xor
movsl
or
or
idivb
sti
xchg
and
xchg
pop
faddl
fldcw
cltd
or
xchg
ret
sub
mov
out
call
dec
rcrb
loope
dec
sub
test
and
dec
in
fs
mov
mov
imul
sub
push
daa
dec
loop
jmp
cmp
or
sti
sbb
vhaddpd
fwait
xor
mov
add
push
divb
lds
sarb
repz
xor
sti
cli
and
mov
lcall
jmp
jp
adc
pushf
or
adc
lds
imul
xor
outsb
jne
mov
add
imull
shl
mov
in
arpl
addr16
or
outsb
sub
les
inc
pop
inc
ss
sbbl
adc
push
xor
cli
inc
mov
aam
lcall
scas
push
std
and
nop
xchg
ror
out
inc
lock
jmp
fisubl
mov
xor
stos
xchg
push
mov
out
in
inc
sub
lds
push
xchg
and
shlb
aad
dec
fiadds
dec
lods
inc
mov
push
jo
xor
jecxz
jl
repz
cwtl
ret
cld
cmp
mov
and
cmp
loop
xchg
sbb
jns
cmpsl
cmp
mov
fsubs
fnstcw
es
pop
clc
and
dec
sbb
sbbl
sbbl
dec
scas
pusha
enter
xor
pop
xchg
mov
lods
push
dec
xchg
xlat
shr
fdivl
gs
lahf
jae
hlt
sub
jnp
lcall
nop
mov
and
and
mov
call
aaa
mov
or
cmp
xchg
in
movsl
pop
repz
add
scas
adc
jno
popf
mov
rcll
dec
xchg
stc
xor
scas
xor
xchg
ret
test
daa
in
cli
jbe
test
cli
lds
scas
mov
sub
sbb
jle
mov
mov
inc
sub
in
adc
int
mov
cmp
xor
xchg
push
adc
inc
nop
jmp
jnp
lods
fildll
enter
push
adc
ret
cmpsl
rorl
dec
out
and
aam
push
insb
js
mov
repnz
lahf
jecxz
aad
mov
sarb
xchg
dec
and
add
dec
adc
adc
dec
push
mov
xchg
icebp
mov
rclb
sub
cwtl
and
movsb
dec
ret
xchg
push
stc
xchg
aas
mov
pop
xor
outsl
pop
loope
dec
push
cmp
mov
popa
outsl
call
fstl
gs
jns
rorl
mov
push
sub
xor
or
mov
ljmp
fwait
push
cmc
jl
leave
xor
xor
in
sbb
push
arpl
adc
push
imul
popf
cs
mov
test
cmp
dec
test
dec
cmpsb
incl
pop
insl
push
mov
iret
lods
repz
insl
movsb
fsubrp
test
pop
int
dec
data16
lcall
add
lret
inc
sub
mov
cmp
lea
sub
outsb
movsl
and
mov
push
push
mov
sub
pusha
shl
scas
jp
inc
xchg
mov
cmp
jne
jns
push
rcrb
adcb
jl
stos
mov
cmc
xchg
xlat
xlat
punpckhwd
mov
mov
add
incb
mov
cmpb
or
inc
pop
outsb
push
outsl
cmp
pop
jge
cmp
insl
pop
inc
push
lods
pop
jecxz
push
and
iret
in
push
pop
inc
pop
int
xor
das
icebp
loope
aad
jl
nop
push
es
jg
sub
fucomi
jmp
repnz
xor
pop
dec
je
insb
loope
jmp
fsubl
dec
xor
popa
popa
pop
sbb
bound
xchg
insb
cmp
lret
sbb
xchg
pop
cmpb
movsl
adcb
movsl
outsb
push
cmpsl
jmp
dec
pop
fcom
outsl
cmp
xchg
xor
cmpb
jne
divl
pop
jmp
cmp
inc
mov
test
mov
push
sbb
roll
fs
jb
inc
push
mov
js
push
mov
push
mov
sahf
and
std
xchg
addr16
cmc
out
mov
push
arpl
data16
fsubl
int3
movsb
mov
jns
add
add
cmp
sub
mov
adc
sbb
iret
push
inc
jecxz
inc
leave
inc
cli
xor
lahf
in
mov
insb
testb
add
fcomi
jecxz
into
iret
xchg
repnz
mov
jae
cmpsb
rclb
lcall
and
mov
stos
das
sub
add
fildl
jns
and
fnstcw
push
add
test
xchg
push
dec
and
mov
cmpsl
adc
arpl
rorl
out
test
add
rcrl
in
aas
and
sub
rcrb
jmp
mov
sub
inc
dec
test
lods
shll
sub
insb
xchg
lods
ret
and
pop
lds
scas
je
movsb
sub
mov
lea
ficomps
shrb
addr16
in
sbb
lret
push
and
mov
dec
stos
or
and
fidivl
xor
test
cwtl
cmp
test
aam
mov
out
enter
sub
leave
ds
addl
xchg
clc
jle
jno
sbb
mov
xchg
xor
cli
ret
mov
and
shll
xchg
jg
fcmovb
fistpll
sub
push
pop
lfence
lret
push
insb
push
ret
xchg
inc
lea
dec
push
and
mov
adcl
add
sbb
add
lock
int3
mov
jge
cmp
mov
cltd
and
out
mov
xchg
mov
orl
pop
pop
nop
pop
add
cmp
pop
xor
repz
test
repz
xlat
fimuls
rcl
lock
jl
mov
mov
and
popl
or
push
clc
jge
lea
sub
jmp
mov
mov
in
adc
fwait
inc
sahf
xchg
pushf
xor
enter
inc
aas
andb
lods
or
dec
rol
xchg
dec
test
std
adc
fcmovnb
lahf
icebp
in
add
clc
stos
sbb
aas
xor
adc
and
addr16
adcl
movl
subl
push
and
insl
push
xchg
sar
imul
test
or
xor
fnstenv
ret
or
inc
ja
je
cli
sub
or
push
xchg
mov
adc
jg
adc
or
out
mov
mov
cli
push
push
hlt
test
loope
pop
inc
lods
xchg
xor
lock
fldt
mov
add
and
push
or
push
mov
dec
adc
in
mov
mov
or
popl
shr
mov
lret
push
insl
pop
sbb
iret
xor
cld
outsl
or
popf
xchg
stos
addr16
cwtl
inc
lret
dec
adc
outsl
dec
rorl
jno
mov
mov
pop
mov
pop
mov
inc
inc
jo
movsb
ds
ds
and
sbb
in
push
dec
adc
sbb
repz
sbbb
xor
pop
shrl
mov
cmpb
int3
rcrb
pusha
and
pop
mov
xchg
push
cmp
mov
pop
xor
insl
test
pop
pop
xchg
fsubrs
or
sbb
jge
adc
xchg
xor
xchg
push
jle
add
adc
adc
imul
cmc
sbb
xchg
xchg
js
out
push
mov
lcall
fcomp
xor
adc
fidivl
sub
test
push
mov
xchg
inc
adcl
enter
jns
cltd
xchg
xchg
call
cmc
mov
or
in
repz
sbb
and
dec
pop
loop
pop
sub
xor
xor
test
xor
adc
add
hlt
lahf
rclb
mov
xchg
and
jno
push
or
push
addr16
leave
sub
and
mov
enter
mov
stos
movsb
fwait
shrl
out
xchg
pushf
loop
lods
ja
sbb
fldl
pop
lret
leave
jae
fistpll
stos
test
mov
inc
mov
sbb
sti
push
outsl
inc
push
adc
fdivl
lods
adc
jmp
lea
testb
mov
adc
pop
imul
dec
data16
in
mov
pop
movsl
mov
dec
xchg
int3
sbb
inc
fsubrl
ret
xor
pusha
push
inc
lret
and
clc
or
scas
sub
pop
jne
into
aaa
outsl
leave
push
in
adc
imul
int
xor
out
cmp
stc
dec
jg
jne
imul
sbb
daa
xchg
xor
aam
jp
lret
sub
loop
shlb
lahf
imul
movsb
xchg
lcall
push
jg
mov
imul
sbb
mov
mov
stc
outsb
mov
aad
imul
ljmp
lret
mov
push
xchg
add
addr16
dec
out
push
call
jmp
cmp
mov
aam
and
je
popf
jge
add
dec
add
push
sbb
lock
test
push
jp
in
push
stos
jne
stc
in
sbb
pop
inc
jg
jmp
jge
sub
shr
leave
out
ljmp
jmp
or
das
scas
lahf
xor
pop
test
mov
in
lods
mov
or
lds
sbb
lods
loope
sbb
ss
lret
cmp
sub
dec
push
sub
ret
mov
movsb
popa
mov
push
inc
add
in
stos
add
pop
mov
fdivl
cli
mov
pinsrw
jp
iret
mov
sbb
inc
xchg
testb
inc
cltd
push
mov
push
hlt
flds
sub
sbb
ret
popa
cmpsl
push
cmpsb
imul
adcb
sbb
push
test
cmpb
mov
fdivrl
push
testl
stos
mov
imul
xchg
jg
jb
pop
push
outsb
jecxz
movsb
loopne
movsb
jae
aad
ret
jbe
das
sbbb
aas
out
jle
cmp
shlb
cmp
ss
pop
fisubrl
pusha
jo
mov
jl
pop
pop
and
fistpll
fcomip
mov
sbb
in
or
jecxz
subb
xor
sub
in
frstor
xchg
je
mov
dec
into
test
fstps
and
xor
dec
stc
and
test
adc
cmp
andb
je
adc
lahf
divl
mov
insl
xchg
push
jl
mov
cmp
push
loopne
add
cs
dec
xchg
movsl
test
sub
mov
addl
popf
sub
testl
mov
push
daa
scas
sub
jae
and
in
or
and
mov
mov
cmp
mov
in
clc
ret
gs
fcoms
adc
js
cmp
mov
dec
lods
into
lret
jecxz
push
push
test
mov
lar
or
inc
jae
sbb
int3
xor
xor
or
mov
mov
push
jmp
add
imull
push
mov
add
push
loopne
outsb
pop
ficompl
scas
mov
mov
mov
fwait
into
insl
adc
dec
inc
js
insb
clc
jnp
in
lahf
push
cltd
pop
out
xor
sbb
or
push
jle
xorl
stc
xchg
cmp
mov
arpl
repnz
xchg
fcomip
les
and
rcrb
and
lret
sub
sub
adc
insl
pop
dec
and
mov
or
mov
push
mov
xor
insb
repz
mov
movsb
xorb
aam
xor
fs
leave
into
add
sub
add
mov
cmp
push
xor
jl
inc
or
ret
and
in
dec
pusha
es
clc
push
loop
adc
lret
or
dec
aad
lret
cmp
sbb
je
adc
xchg
pop
inc
ret
ja
stc
ljmp
into
clc
jle
inc
mov
sub
cmp
and
lock
stos
xchg
push
imul
pop
fisttps
pop
mov
es
or
xorb
mov
movsl
xorl
cmp
lods
pop
xor
add
mov
mov
ja
lahf
in
dec
xchg
js
arpl
xchg
dec
xor
mov
ljmp
popa
push
push
pop
or
xchg
lret
hlt
je
and
xchg
out
out
adc
stos
push
and
out
push
sbb
or
ficomps
xchg
lcall
scas
inc
add
or
push
cmp
outsb
mov
testb
inc
push
int3
pop
nop
sbb
jge
jo
jno
aad
shll
iret
rcrb
in
sti
xor
insl
lahf
fnstcw
mov
inc
add
fs
cli
sbb
das
push
xchg
cmp
xor
xchg
jns
nop
mov
xchg
in
test
cmp
das
test
jbe
fwait
mov
jbe
sarl
fwait
xor
push
dec
stc
fdivs
add
frstor
cmp
mov
aam
lods
jp
lods
gs
jg
lds
sbb
cmp
jo
sbb
mov
ficomps
push
addb
xchg
shrb
movsb
cli
pop
insl
jbe
jo
scas
bound
in
inc
std
jp
xchg
push
jg
sub
sub
outsb
mov
adc
je
pushf
repnz
inc
sbb
or
je
push
aad
js
ret
ret
add
test
sbb
fcoml
jg
xchg
repnz
daa
mov
adc
mov
stos
stos
mov
add
loope
push
xor
adc
jno
inc
jmp
xchg
aas
arpl
push
shr
sub
jg
pop
rep
lret
add
inc
pop
mov
push
mov
out
iret
jns
in
sub
xorl
scas
fistpl
jns
mov
hlt
xor
fnsave
negb
lods
lea
sbb
and
popf
pop
lret
inc
nop
adc
inc
dec
add
push
add
push
mov
sub
jne
fwait
jbe
mov
push
fsubrs
jmp
sub
dec
pop
lods
pop
mov
push
push
jns
int
push
and
adc
push
mov
inc
inc
dec
push
into
jl
and
add
push
iret
add
in
shrl
mov
sub
xlat
sti
mov
inc
pop
aaa
or
pop
push
stos
in
outsb
ja
mov
pop
mov
jno
lcall
loope
sub
xchg
xchg
mov
xor
and
xor
or
push
sub
inc
rclb
mov
jmp
lods
sbb
mov
inc
cmovns
push
pushf
jns
inc
jae
inc
shlb
das
fmull
adc
mov
adc
mov
in
and
imul
pop
mov
sbb
inc
ret
lock
mov
and
pushf
fs
dec
push
jae
mov
mov
pop
insl
add
jge
insl
push
mov
rclb
lret
sub
sub
and
adc
dec
shll
loope
out
mov
mov
push
ljmp
lcall
adc
test
daa
lock
sub
lret
lock
and
mov
test
imul
inc
fidivs
sbb
enter
adc
icebp
sahf
or
scas
sbb
popf
fnstsw
into
dec
sub
movsb
imul
fs
cmpsl
mov
test
addl
pop
inc
imul
xchg
mulb
sarl
add
xchg
nop
mov
out
sub
add
push
addr16
aas
mov
shrl
loop
out
imull
and
jae
lcall
pusha
lret
jns
or
pop
test
rorb
xchg
add
jno
imull
push
pop
cmc
cmp
fs
push
dec
mov
outsl
test
xor
and
dec
in
movsl
add
outsb
sbb
lret
jb
adcl
xor
jo
sub
mov
fdiv
out
xchg
pop
jno
hlt
and
jmp
outsb
pop
aaa
dec
add
out
adc
jp
lods
fwait
jnp
xchg
clc
jnp
mov
mov
stos
cld
je
pushf
sub
jp
inc
loopne
jmp
sbb
iret
xchg
inc
sbb
xor
ret
ret
mov
push
add
outsl
pop
jmp
inc
push
inc
cwtl
inc
popf
or
push
mov
mov
inc
mov
inc
cli
xor
pop
ss
dec
dec
sbb
push
adc
fdivrl
mov
dec
filds
aam
jecxz
mov
pop
imul
fnstenv
xor
pop
jmp
test
icebp
out
sahf
out
pop
inc
out
sbb
std
jle
and
sbb
dec
repz
js
mov
lods
dec
mov
cmpsb
adc
xor
stos
int
or
insl
mov
mov
xor
xchg
mov
out
push
movsb
pop
dec
in
xchg
addr16
mov
addr16
jmp
or
pop
leave
rorl
fistps
stos
stc
mov
mov
test
stos
ds
stos
jno
jg
call
cld
mov
dec
push
cwtl
xchg
and
testl
out
and
into
lock
push
mov
or
sub
pop
fisubrl
xor
ja
rol
cmp
xchg
test
outsb
insl
xchg
jo
mov
sub
in
pop
xchg
adc
inc
mov
sbbb
inc
ja
lods
mull
jo
addr16
xor
into
out
adcb
andb
cmpsb
xchg
test
aaa
mov
lret
pmaxsw
enter
test
xor
int
xchg
shrb
ret
jae
mov
shl
jae
enter
jbe
aad
add
out
lahf
mov
pop
adc
sbb
pop
das
and
mov
adc
loope
mov
pop
xchg
xchg
push
jge
ljmp
ja
or
jne
pop
or
les
jmp
int
repnz
das
pop
fcmovne
pop
or
test
sub
in
imul
mov
in
stc
jge
jns
punpckhbw
and
cmp
int3
push
psrlq
mov
jle
test
dec
pop
iret
out
aaa
inc
int
lret
add
cmp
ds
stc
out
mov
push
out
xchg
leave
adc
dec
mov
je
cmpsl
int3
lahf
sub
mov
stos
jp
xchg
cmp
ss
and
rcrl
mov
mov
xchg
jb
xor
or
stos
jp
test
fcoml
int
orl
in
rcr
hlt
pop
mov
stos
pandn
ja
xchg
les
sub
xor
dec
shl
cmp
pop
in
leave
es
xlat
dec
mov
test
mov
cmp
bswap
add
mov
negl
fadds
adc
les
xchg
mov
int
filds
std
inc
cmp
andl
daa
push
sbb
popa
sarl
dec
stc
dec
cwtl
push
pop
pop
and
push
push
loopne
or
xor
or
lods
pop
mov
adc
mov
iret
icebp
jbe
lcall
in
or
stos
ljmp
lcall
push
push
mov
cmp
pop
aad
cmp
arpl
aas
and
movsb
loop
arpl
fs
mov
dec
stc
xchg
outsl
jmp
dec
lods
mov
inc
sub
test
enter
cmpsb
xor
lcall
leave
adc
in
lods
push
add
mov
popa
sub
pop
dec
xchg
std
fcomp
mov
or
lret
cmp
fcomi
pop
daa
into
loopne
sub
pushf
ficompl
das
mov
or
inc
pop
pcmpgtw
aaa
cmp
enter
xlat
mov
outsb
int3
outsl
inc
je
std
outsl
mov
and
jge
and
cmp
ret
lock
sbb
sbb
inc
adc
jl
xlat
mov
and
inc
mov
xchg
outsl
adc
test
xchg
cli
xchg
popf
mov
cltd
jbe
and
into
mov
iret
cmp
mov
lea
pop
adc
outsb
xchg
mov
insb
mov
xchg
pusha
lret
mov
push
jmp
xor
or
scas
mov
imul
and
testb
lret
inc
xchg
mov
add
mov
push
stos
pop
mov
cli
inc
mov
or
out
jns
xor
jmp
test
mov
or
pop
push
xchg
sbb
push
inc
jb
popf
xchg
outsb
testl
cltd
les
push
roll
lea
push
fidivl
mov
pushf
and
push
stos
jb
cmp
add
in
test
lret
mov
jnp
cmp
inc
fldenv
mov
mov
pushl
or
or
and
jecxz
adc
inc
loope
dec
mov
cmp
sub
xor
inc
jge
in
cmp
sub
inc
cmpsl
push
pop
and
mov
scas
insb
sub
pushf
dec
add
aaa
cs
sub
mov
mov
jl
xor
in
roll
iret
js
scas
xchg
outsb
jge
jb
or
and
mov
and
sar
mov
lea
adc
push
jbe
dec
jecxz
cmp
pusha
cwtl
adc
or
cmpb
data16
pushf
dec
inc
sub
mov
cs
xchg
mov
pop
adc
out
cltd
xchg
mov
ret
add
repnz
test
xchg
out
xchg
call
sbb
adc
ss
push
aas
dec
aaa
ret
and
lods
test
in
addr16
js
jo
cs
mov
popa
push
bound
mov
inc
out
pop
add
loopne
mov
int
jle
cwtl
aas
fnstenv
push
lret
dec
and
sbb
mov
clc
pop
int
dec
sub
sub
inc
cs
ja
cwtl
jb
into
loopne
or
aas
sbb
pop
push
les
je
xchg
out
and
push
cmp
push
fnstcw
adc
jmp
ss
mov
or
int
es
insl
mov
cli
test
mov
or
out
jb
call
lahf
popa
cmp
lods
xor
mov
jmp
ret
mov
mov
lds
jno
cmp
mov
mov
xchg
adc
inc
aaa
sub
into
stc
mov
insb
cld
daa
xchg
ljmp
cmpsl
jmp
test
and
mov
aam
aam
bnd
rolb
sti
iret
sub
xchg
mov
out
out
xor
jl
dec
pop
mov
jmp
daa
sbb
fmull
jns
js
jg
in
fsts
push
jns
pop
push
lcall
add
mov
adc
push
xchg
jg
outsl
das
adc
rcrb
dec
dec
xor
iret
sar
inc
jg
stc
add
repnz
pop
cmp
in
arpl
mov
in
les
mov
mov
imull
test
xlat
push
addr16
xchg
adc
mov
inc
cmp
outsl
jnp
pop
in
stc
pop
scas
lahf
das
add
add
pop
lods
iret
xchg
shlb
inc
outsl
iret
into
push
mov
andb
cmp
inc
movsb
push
cs
dec
xor
insb
out
ret
ffree
popf
or
shlb
in
xchg
jecxz
adc
fldenv
daa
fcomip
adc
push
mov
adc
jp
dec
add
adc
out
rcll
adc
xor
gs
ret
xor
cwtl
in
push
pop
jmp
sti
sub
mov
cmp
xor
push
xor
pop
cmpsb
lret
pop
and
xchg
ja
shll
loopne
dec
mov
add
lret
andb
bound
push
fwait
cmp
dec
aam
pop
fists
and
push
jb
arpl
cltd
loop
dec
jnp
test
aaa
inc
cmpsl
adc
std
adc
aaa
inc
popf
in
jl
stos
cmp
test
mov
imul
aaa
jle
pop
mov
add
mov
push
loop
leave
rcrl
das
push
pop
push
cli
push
or
popf
les
arpl
and
enter
or
cmp
cmp
push
adc
pop
leave
hlt
push
ljmp
or
add
fiaddl
add
mov
insl
xchg
mov
sbb
test
in
aaa
mov
jns
test
dec
pinsrw
pop
xchg
push
leave
cmc
push
push
pop
fistpll
jno
repz
jae
int3
sub
mov
scas
insb
ljmp
sti
mov
mov
xchg
and
cmpsb
cwtl
das
outsb
int3
or
sub
mov
xchg
push
jmp
nop
test
lret
jo
mov
nop
dec
lods
pop
fwait
xchg
mov
in
xchg
faddl
insb
push
pop
pop
adc
movsb
inc
jle
dec
add
xor
lea
lds
aad
xor
repz
xchg
ds
mov
jbe
xor
pop
adc
arpl
and
or
outsl
jmp
lahf
push
dec
lret
push
insl
mov
add
in
test
shr
sbb
lret
pushf
je
jno
mov
jle
sub
lret
cmc
mov
stc
sub
cmp
test
out
aad
mov
dec
xchg
stc
jns
add
hlt
adc
icebp
mov
icebp
mov
inc
cmp
sti
fisubrs
or
inc
ljmp
shl
push
ljmp
or
gs
or
add
ss
sbb
sbb
push
push
xchg
lret
xor
xor
and
loope
ss
enter
jg
push
adc
jmp
rol
fstpt
divb
mov
or
jmp
xchg
fnstcw
js
test
fadds
iret
adc
inc
mov
insb
repz
nop
mov
int3
js
dec
sti
lret
add
sahf
enter
mov
inc
int
dec
cmpsl
pop
fcomps
test
xchg
out
add
cmpsl
movsb
mov
fwait
cmp
dec
lods
incl
loope
cwtl
adc
mov
xchg
scas
xor
in
aam
sbb
and
xor
adc
pop
xchg
push
mov
adc
jbe
das
mov
or
popf
scas
loope
lret
dec
cli
testl
in
roll
push
xor
in
pop
loope
xor
xchg
filds
lock
std
clc
push
mov
jns
aam
lock
test
daa
push
test
adc
lret
cmc
fstps
mov
popf
pop
imull
inc
sahf
jmp
sahf
iret
xchg
or
fidivs
out
outsb
xor
xchg
jae
daa
jg
stos
cmp
test
fwait
sti
pop
sarb
mov
add
test
ss
mov
ret
jo
out
stos
xchg
roll
insb
fwait
add
or
loopne
cmp
nop
scas
mov
lock
inc
mov
push
enter
dec
mov
push
mov
int3
dec
pusha
mov
mov
add
mov
dec
mov
adcb
dec
scas
mov
xor
pop
jmp
daa
sub
cmpb
aas
sbb
push
sahf
imul
push
mov
into
fwait
xchg
sbb
into
sub
dec
jb
xchg
into
ljmp
sbb
inc
je
pop
add
mov
jo
xor
imul
pop
cmp
lea
or
pop
mov
dec
ss
ljmp
jnp
mov
dec
mov
repz
decb
ret
xchg
cmp
adc
movsb
mov
inc
sbb
mov
test
mov
and
adc
je
dec
sub
add
push
sub
icebp
mov
loop
pushf
cli
imul
dec
fmulp
lock
dec
lea
jecxz
sahf
adc
out
mov
push
movsl
out
xchg
adc
push
mov
cmp
inc
sub
test
add
sub
cmpsb
xor
dec
push
xchg
add
in
hlt
add
lahf
xchg
arpl
jg
xor
scas
jnp
pop
jns
roll
xchg
ror
sub
icebp
inc
jp
or
or
ss
pop
xchg
xlat
dec
sub
orl
sub
lods
loope
mul
sbb
cld
xchg
pop
inc
jne
or
and
ficoms
outsb
xchg
adc
ret
cmpsb
pop
sbb
adc
xor
xor
inc
xchg
xchg
mov
je
sysexit
sub
dec
mov
loope
jle
push
mov
out
sub
scas
dec
xchg
sbb
jl
decl
movsl
xorb
or
jns
clc
test
aam
aam
inc
or
and
push
adc
dec
inc
mov
jmp
out
shlb
adc
push
mov
mov
xchg
cmp
pop
out
push
call
mov
ljmp
push
aad
test
add
inc
jnp
gs
jne
ds
xchg
popf
mov
mov
ljmp
and
jl
adc
push
mov
push
xchg
pop
mov
jnp
and
jmp
sub
push
push
adc
fsts
xor
cvttps2pi
scas
stos
sahf
and
aaa
into
pop
mov
loopne
out
pop
mov
xchg
xor
pop
not
xchg
or
ficompl
xor
idivl
jl
add
mov
pusha
mov
mov
lret
cmc
mov
pop
int
dec
ret
loopne
stos
pop
pop
adc
mov
dec
adc
pop
ds
and
sub
or
insl
int
adc
xor
stc
stos
mov
das
mov
ficoms
mov
stos
int
movsl
sub
push
negb
lcall
dec
and
mov
into
gs
in
sub
jmp
mov
fdivrl
cmpb
push
mov
stc
or
popa
push
dec
rcl
lcall
test
pop
insb
and
add
fstps
cmp
xor
cmpsb
dec
sahf
pop
je
in
sub
adc
mov
aam
andl
repz
loop
aas
xchg
push
roll
adc
dec
xor
add
addb
xor
pop
push
into
push
push
ret
push
cmpsb
cli
outsb
jge
dec
mov
lods
icebp
leave
fidivrl
fstl
sbb
pop
int3
pop
fisubrs
xchg
sbb
lods
mov
loopne
out
add
or
xchg
jl
cmc
icebp
mov
xchg
gs
cmp
mov
jmp
mov
inc
mov
dec
inc
add
out
mov
bound
xor
and
test
js
push
aad
lea
xchg
add
jo
mov
and
lods
into
xor
loopne
xchg
adc
sub
cmc
ljmp
mov
lods
je
jge
jmp
sub
mov
dec
loopne
mov
jecxz
mov
std
nop
adc
add
cmc
fs
add
adc
jge
and
mov
jne
je
inc
or
mov
pop
inc
and
cli
mov
dec
mov
ss
sub
dec
or
test
pop
dec
jb
sub
xchg
mov
popa
insl
or
cmp
mov
pop
divl
outsl
lret
cmpsb
and
mov
adc
sbb
mov
xlat
adc
jns
arpl
sti
jb
jae
pusha
sub
in
sub
adc
mov
jnp
leave
sar
cmpsl
sti
jo
aad
and
in
aaa
jno
mov
sbb
xor
cmpb
dec
fsubrl
popf
cmpl
sub
outsb
push
or
adc
testl
xor
hlt
ljmp
jg
sbb
into
pop
mov
out
sbb
loop
mov
fldt
sub
xor
mov
adc
push
stc
push
or
std
xor
cltd
mulb
xchg
mov
outsb
daa
aas
and
adc
ja
fmulp
push
daa
xlat
faddl
inc
mov
xor
adc
scas
addr16
shlb
imul
mov
or
pop
adc
orb
dec
shl
pushf
popa
sbb
mov
dec
insl
mov
xor
xor
aam
cli
fidivs
sbb
jo
mov
xchg
scas
ss
pushf
data16
inc
faddp
push
mov
cmp
cwtl
data16
shll
and
ljmp
mov
adc
mov
mov
mov
jne
in
test
rclb
out
jmp
popa
sbb
jle
testl
mov
jecxz
jne
data16
fidivrs
in
shl
xor
xchg
xor
loop
push
mov
push
or
rorl
fdiv
cmpsb
fwait
pushf
push
cvtps2pd
add
lret
mov
mov
imul
xchg
int
test
loope
loope
xchg
sbb
mov
clc
xchg
push
sahf
test
ds
push
outsl
out
arpl
aaa
mov
xor
imul
pushf
push
mov
es
das
lock
test
leave
pop
jmp
test
popf
mov
cmc
ss
jge
dec
mov
mov
lock
mov
dec
movsl
movsb
jl,pn
shl
and
mov
mov
imul
cwtl
add
mov
mov
cmp
or
inc
cltd
add
dec
mov
dec
xchg
cmp
mov
stc
xor
hlt
test
insb
orl
adc
in
cwtl
call
jb
pop
repz
es
daa
movsb
lods
imul
and
mov
out
sbb
jg
in
pop
enter
pop
inc
jae
stos
movsl
xor
push
pop
lds
pop
mov
imul
rclb
push
pusha
jne
es
das
fldenv
pop
std
idiv
out
jle
sarb
icebp
xchg
enter
adc
hlt
sbb
mov
lds
sahf
inc
sub
push
shl
fs
or
rcll
push
lea
fisttps
stos
leave
setne
test
dec
push
add
sbb
mov
mov
jmp
mov
pop
fidivrl
adc
gs
xchg
xlat
pop
dec
inc
sub
lret
das
sub
push
sbb
stos
jge
push
mov
push
adc
sbb
push
pop
lahf
push
dec
adc
ljmp
ret
arpl
data16
stos
les
mov
daa
arpl
fidivrl
call
aam
imul
lds
pop
lret
ljmp
mov
lret
sbb
in
mov
cmc
inc
test
pop
fwait
xor
in
jg
push
jp
cld
arpl
or
mov
out
stos
xchg
lods
cmpl
aad
xchg
push
stos
scas
pop
or
xor
movsl
fwait
push
sbb
fbld
js
adc
call
in
and
data16
jo
fwait
out
inc
mov
mov
lea
cld
dec
insb
or
cmp
mov
sub
das
hlt
ds
les
sbb
cmp
lret
gs
mov
leave
push
fdivrl
ss
das
cmpsb
fs
int
fs
gs
xchg
or
adc
push
and
call
sbb
sub
sub
pop
add
jbe
cmc
xlat
fidivs
mov
daa
sbb
hlt
nop
sub
lret
add
xor
xor
dec
sub
mov
cs
sbb
clc
fsubr
jne
stc
mov
xchg
insb
aam
mov
xchg
jle
lret
pop
clc
inc
outsb
enter
addl
mov
cs
int3
jmp
cmpsb
adc
in
jne
imul
das
xchg
mov
add
out
mov
imul
lahf
add
arpl
in
xchg
mov
sub
dec
lret
les
sbb
inc
mov
test
sub
add
mov
and
mov
cmpsl
fisttps
hlt
jbe
pop
hlt
xchg
out
xchg
push
or
pushf
pop
test
aas
call
xchg
cld
mov
cmc
fcompl
push
int
fmuls
jbe
sbb
test
pop
pop
popl
mov
sbb
jp
add
flds
sbb
mov
push
jno
jge
movsl
cli
outsb
sub
outsl
adc
and
push
cs
in
xchg
test
arpl
jg
fwait
jge
js
pop
in
cmc
mov
mov
cmp
jecxz
imul
lock
sub
cs
jo
test
mov
push
sub
dec
add
fucom
mov
or
cmp
and
and
pop
ret
adc
cmp
dec
lret
ds
lea
xor
nop
sbb
test
mov
subb
js
sub
dec
leave
and
dec
lds
fdivrs
iret
stos
mov
ret
push
xor
sbb
push
loopne
push
cmp
out
andb
dec
stos
std
test
inc
xchg
push
daa
shlb
or
inc
ja
sbb
and
and
aad
push
outsb
xchg
mov
arpl
std
xchg
or
push
rol
adc
rcr
test
mov
aas
add
push
loope
call
push
mov
daa
sbb
xchg
icebp
movsl
xchg
or
push
out
dec
pop
sub
scas
xor
sbb
out
mov
insb
and
add
mov
add
aas
add
inc
and
sbb
xlat
jecxz
mov
mov
sbb
xchg
enter
mov
adc
daa
cmp
lods
movsl
jnp
fidivl
sbb
mov
mov
daa
dec
clc
xchg
dec
sub
cmp
inc
pop
push
outsb
fdivl
test
nop
scas
loope
jle
or
adc
mov
jmp
mov
cmp
xchg
push
dec
repz
sahf
jle
mov
xchg
dec
in
inc
rorl
scas
xchg
push
imul
xchg
jecxz
pop
or
fistpl
sub
mov
cmp
xchg
lods
dec
test
sub
jecxz
inc
insl
scas
or
icebp
or
sub
xchg
in
mov
xchg
pushf
aaa
popf
xchg
pop
dec
jo
push
and
filds
sahf
stc
sub
fsubs
and
or
sub
outsb
inc
sub
and
push
mov
dec
lret
mov
cmp
push
lds
out
inc
lods
int
pop
and
test
out
push
mov
jno
jno
loopne
shr
icebp
mov
scas
incb
jno
je
mov
inc
add
cli
mov
push
aam
sbb
and
loope
leave
mov
sarb
sbb
js
push
loop
stc
loop
and
loop
daa
mov
xchg
or
pop
cmc
bound
popf
scas
ds
mov
adc
sub
popf
cmpsb
loopne
into
xchg
pop
mov
xchg
or
out
imul
cmp
in
push
jle
xor
or
cmp
enter
fdivrs
mov
roll
shr
inc
and
or
mov
lods
notb
cltd
inc
mov
cwtl
jne
fists
jb
mov
xor
jnp
jmp
ljmp
xorb
in
loop
imul
dec
dec
inc
in
cld
add
mov
insb
int3
test
mov
or
sub
pop
push
aad
ret
or
xor
xor
xchg
outsl
out
or
popf
xor
imul
jb
fidivrs
loop
sar
jl
fadds
cld
jns
not
adcl
mov
das
cld
push
lcall
push
rorl
stos
and
inc
cltd
jae
nop
movsb
mov
mov
iret
icebp
es
pop
mov
js
xchg
jecxz
je
mov
repnz
stc
xor
enter
insl
sbbl
pop
inc
push
imul
fldt
push
int
mov
xchg
mov
ljmp
icebp
dec
insb
mov
leave
icebp
movsb
fldcw
push
jp
fstps
pop
adc
sub
out
push
mov
push
or
jl
js
test
push
add
rorl
push
fstps
nop
repnz
xchg
dec
xchg
outsb
cmp
gs
adc
sbb
mov
decl
cmp
adc
subb
xor
and
inc
mov
cld
into
mov
xchg
sahf
xchg
sbb
out
pop
mov
imul
or
sbb
loopne
out
inc
dec
testb
inc
pop
imull
jmp
sub
jg
inc
int3
and
arpl
shrl
mov
mov
jae
icebp
cmpsb
xor
leave
add
cmc
inc
or
sbb
out
adc
adc
dec
rolb
ss
pusha
sub
or
push
insb
pop
xchg
add
mov
xor
pop
sub
fsubrl
xchg
sbb
and
jne
pop
int3
cltd
cld
jmp
fists
xchg
push
subb
jne
daa
cmc
xor
xchg
std
cltd
jmp
adcl
cli
fistl
pop
push
gs
out
and
test
cmp
jge
bound
scas
icebp
jg
fiaddl
je
sahf
jge
pop
les
and
mov
leave
mov
mov
mov
add
mov
clc
out
add
cmp
stos
and
inc
inc
or
cmp
cwtl
mov
jg
jmp
pushf
xor
jge
pop
loopne
es
ret
outsl
lods
lock
add
pushf
mov
push
into
xor
in
jnp
xor
sub
nop
cmp
popa
add
out
add
or
jl
push
or
push
shll
mov
push
cld
stos
sub
mov
in
test
xchg
mov
pop
and
sbb
cmpsl
fisttpl
xchg
bound
shl
fidivl
xchg
adc
cmp
dec
repnz
cmp
sub
and
adc
mov
sbb
xchg
sub
jp
fisttpll
inc
push
add
aaa
cmp
ljmp
leave
ss
cld
stos
hlt
out
rorl
jb
in
not
push
out
sbb
push
push
mov
fiadds
mov
mov
xchg
lock
push
gs
enter
jnp
xchg
in
pop
movsb
je
jae
fldt
call
shrl
inc
jb
shll
adc
inc
mov
pushf
stos
int
gs
xor
lcall
sarl
mov
insl
adc
bnd
shrl
xchg
lea
mov
int
outsb
bound
fcmovb
and
cmp
jl
mov
aaa
cld
js
sub
xor
pop
inc
or
fs
fmuls
ret
mov
mov
out
mov
cmp
cmc
mov
mov
insl
pop
lahf
push
popa
and
add
inc
cld
rorl
jne
int3
pop
xor
stos
mov
add
mov
mov
adc
mov
andl
lds
insl
loope
test
push
nop
lock
mov
cmp
add
sti
inc
cmpl
ljmp
lock
pop
gs
outsb
lds
pop
push
cmp
lret
adc
loopne
lcall
sub
movsb
adc
int
pop
data16
inc
mov
outsb
daa
jno
in
test
orb
xchg
add
insl
push
jmp
into
inc
xor
sbbl
mov
dec
push
pop
fnsave
ss
mov
lahf
mov
jne
add
shrl
into
add
imul
mov
lods
dec
and
das
jle
jl
stos
cmc
mov
xor
sbb
stos
jp
nop
xchg
add
sbb
mov
adc
sbb
imul
push
pop
cli
call
mov
inc
rcrl
mov
orl
xchg
fidivrl
insl
fs
jge
and
fs
inc
dec
nop
jmp
adc
and
mov
je
cli
jge
ret
cltd
repz
push
jecxz
iret
cli
in
xorb
adc
das
fildll
mov
inc
repnz
leave
aas
pop
je
nop
add
sti
jmp
std
int3
leave
jg
mov
sub
cmp
inc
and
and
xor
shll
adc
xchg
test
push
cli
out
cld
mov
lahf
push
rolb
daa
repnz
jo
popf
fadd
clc
inc
mov
xor
enter
ret
sub
popl
add
rolb
das
int
cltd
add
inc
adc
cmpsb
jae
pushf
add
loop
and
add
pusha
cmpsb
iret
out
aaa
jo
imul
lods
jns
pop
pop
fs
cmc
mov
lahf
lcall
int
sahf
pop
daa
mov
jmp
sbb
jecxz
or
ret
mov
xchg
scas
jbe
cmp
pushf
pop
xor
cli
add
and
bound
ud1
es
mov
out
lahf
add
mov
push
out
pushf
cwtl
add
jnp
xchg
add
or
inc
cmp
xor
shrl
iret
or
cli
rcrb
fadd
and
mov
push
fnsave
cmp
dec
xchg
stos
adc
popf
adcl
adc
adc
xchg
push
add
mov
and
call
mov
add
xor
ljmp
jl
std
clc
jbe
lahf
jg
dec
pop
imul
movsb
jns
fidivrs
stos
test
jp
xor
dec
aaa
lret
and
aaa
or
cmp
push
aas
sub
pop
mov
repz
aas
sub
xor
iret
xchg
push
dec
addps
mov
ret
out
scas
mov
or
adc
xor
scas
sbb
xchg
xor
mov
lds
lea
push
aas
and
lcall
dec
mov
sbb
sbb
sub
adc
jns
or
xlat
loope
push
mov
sub
cwtl
in
sub
ret
cmp
rcrl
lock
dec
jae
and
jnp
out
out
imul
movsb
push
repnz
cltd
add
and
js
ret
lcall
jecxz
pop
dec
mov
mov
add
xchg
insb
push
cmc
lahf
jbe
arpl
repz
pusha
push
sar
lods
data16
mov
loope
lds
jo
adc
push
jg
and
dec
or
and
lret
xchg
and
pop
icebp
loop
stos
sub
repnz
inc
in
inc
mov
in
jnp
js
divl
jne
inc
iret
cltd
mov
outsl
rcrb
sbb
stc
out
inc
dec
adc
push
xchg
ss
jg
out
push
mov
sbb
jns
mov
in
cmp
sub
cmp
sub
push
cwtl
dec
or
pop
push
jo
dec
mov
dec
sbb
push
gs
push
stc
mov
dec
adc
sub
ljmp
push
dec
js
dec
movsl
push
lds
sbb
out
add
jecxz
pop
mov
sarb
int
decl
pop
pop
aaa
stos
inc
aam
stos
mov
mov
jo
push
xchg
lahf
outsb
rorb
inc
cwtl
ss
adc
adc
in
dec
movsl
sbbb
xor
mov
leave
aas
jne
push
inc
inc
in
inc
and
cli
cmp
outsb
lea
jbe
cmp
into
sub
or
push
in
push
push
lods
mov
dec
push
popa
pop
inc
push
test
mov
iret
cmp
sahf
jns
pop
aaa
xchg
in
cmp
pop
sub
add
push
dec
push
mov
fcmovne
ja
mov
jb
xchg
je
push
ja
xchg
lret
inc
lea
xorb
data16
shlb
das
xor
sbb
push
mov
scas
cmc
jbe
inc
imul
sub
notl
inc
add
jmp
push
fisubl
cwtl
fucomi
rorl
mov
sti
movsl
cmpsb
jp
or
fcompl
add
shl
push
inc
roll
lock
mov
lcall
pop
and
jbe
jo
dec
and
div
stos
cmc
mov
popf
inc
push
in
mov
imul
xor
push
test
sub
pushl
sti
cmp
mov
sbb
movsl
js
xchg
dec
fwait
or
clc
jecxz
sub
lods
int3
outsl
pop
sbb
mov
daa
push
gs
cli
jbe
iret
sbb
push
xor
mov
daa
divl
out
fiadds
dec
add
xor
mov
adc
or
dec
push
test
mov
dec
xchg
test
xor
jnp
imul
mov
aaa
pop
imul
insl
and
fs
daa
daa
xchg
je
fildl
xchg
mov
pusha
outsl
aaa
push
jne
push
sahf
fwait
or
test
fmul
pop
pop
aad
mov
out
out
out
les
call
mov
aaa
pushf
push
imul
cmp
das
mov
enter
push
stos
adc
out
fmulp
inc
in
and
je,pn
aam
stos
pop
mov
sbb
jnp
fildll
addr16
dec
inc
xor
inc
nop
ljmp
add
lds
dec
cwtl
inc
lods
cmp
stos
cmp
mov
leave
jmp
lcall
or
movsl
pop
imul
cltd
pop
mov
loop
ds
lcall
sbb
mov
sub
pop
outsb
xor
addr16
test
push
pop
popa
xchg
std
push
dec
xchg
stos
jg
sarb
jmp
leave
fbstp
push
inc
aaa
or
sbb
jg
aad
jge
jecxz
dec
mov
push
jle
and
mov
sub
pop
insb
cwtl
jge
insl
push
sub
cs
inc
mov
mov
xchg
popa
xchg
dec
jge
hlt
jge
pushf
or
icebp
xor
jecxz
loopne
adc
shr
mov
popa
mul
xchg
outsl
add
mov
cwtl
cli
ljmp
push
cmp
lahf
push
push
movsl
adc
in
jecxz
or
sbb
cmc
mov
mov
rclb
sbb
inc
mov
mov
mov
mov
das
mov
mov
pusha
aam
mov
hlt
mov
loopne
pop
ss
into
or
jbe
or
loop
fimuls
shlb
inc
lods
into
xchg
out
xlat
lods
and
xchg
mov
jmp
incl
scas
out
add
mov
shlb
fsubl
cmp
push
ds
sahf
stos
ds
adc
mov
rcrb
push
mov
xchg
cltd
xchg
inc
pop
xchg
and
mul
sub
cli
or
or
or
xlat
jp
mov
rolb
shrb
out
cmp
push
adc
or
sub
mov
add
cmp
fisubl
pushf
movsl
dec
in
fisttpll
push
add
dec
imulb
jecxz
stos
jl
add
ljmp
mov
cli
inc
insl
mov
jno
pop
in
out
cmpsb
xor
jl
stos
xchg
cmp
loopne
filds
cmp
out
jb
jecxz
das
inc
mov
into
push
xchg
lods
popf
xchg
outsb
add
jns
mov
loop
mov
mov
or
and
mov
mov
push
xor
aaa
outsb
add
jne
sarl
jg
add
xchg
aam
xchg
xchg
inc
das
dec
cmp
daa
mov
mov
mov
xchg
lock
xor
add
pop
mov
shll
stc
jno
ja
push
idivb
addr16
and
aaa
cmp
int3
jno
adc
xlat
mov
adc
cmc
daa
or
dec
in
push
in
clc
sbb
cmp
ja
negl
adc
in
adc
ss
mov
movl
lahf
icebp
sbbl
jmp
mov
jbe
push
xlat
bound
mov
xchg
adc
les
and
icebp
lahf
push
add
aad
popa
fcmovbe
xchg
fchs
scas
or
shlb
icebp
iret
mov
loop
sub
jg
bound
and
dec
xchg
mov
mov
push
inc
je
or
daa
test
cmc
popf
dec
das
mov
sti
jno
daa
jle
int3
xchg
push
jnp
dec
iret
push
in
fs
ficoml
insl
or
jmp
mov
or
in
inc
test
popf
add
push
sub
push
das
aad
divb
pushf
in
push
xchg
int3
arpl
daa
pop
fistpll
pushf
cld
or
lret
out
clc
or
mov
lret
cmc
movsl
mov
inc
mov
pusha
add
jo
in
and
lahf
mov
loopne
out
add
or
and
push
push
and
cli
xor
push
aad
xchg
push
xchg
aad
shlb
xor
test
ret
imul
rcl
sbb
imul
pop
and
sarl
push
fld
movsl
mov
in
int3
jge
xchg
lret
cmp
push
fmul
sti
mov
adc
loopne
int3
adc
xor
popa
pop
fwait
shlb
call
hlt
mov
or
les
test
test
or
cmp
loopne
inc
add
cmp
dec
sub
pusha
xchg
push
scas
ja
sub
adc
enter
push
in
into
jmp
xchg
loope
inc
ljmp
imul
je
pop
cmpl
bnd
mov
std
out
stos
data16
push
popf
cmp
iret
movsb
ljmp
pop
xchg
sbb
test
fidivl
or
dec
and
jae
loope
add
jecxz
jno
fistpll
dec
test
inc
mov
cmc
clc
orb
pop
aaa
cwtl
imul
std
push
jge
add
add
mov
mov
push
dec
or
cmp
lret
repnz
dec
inc
push
mov
hlt
ret
or
jne
pop
push
lock
pop
sub
sbb
inc
xchg
cmc
lret
cli
js
gs
lahf
and
and
pop
lret
push
into
je
test
and
imul
mov
aaa
jb
mov
test
mov
inc
lea
and
mov
inc
js
imul
dec
lock
jmp
je
xorb
js
loope
in
in
mov
adc
repnz
sub
ja
cmp
sbb
sahf
mov
lea
pop
aam
rolb
cmp
fiadds
xor
sbb
mov
cmp
xchg
fdivr
adc
cmc
cmp
push
push
in
mov
inc
mov
or
sub
mov
aas
sti
lea
or
stc
jne
addl
je
push
jo
mov
mov
out
lret
adc
jmp
jecxz
xchg
pusha
xlat
xchg
das
push
stc
scas
movsl
jnp
lods
dec
hlt
pushf
mov
jle
scas
popa
imul
rclb
aam
aad
push
lret
es
test
jle
in
mov
sub
shr
addb
inc
push
push
aam
jbe
scas
pop
push
icebp
pop
in
jle
and
push
out
jb
cmpsl
mov
xor
xor
mov
imul
jo
sub
scas
test
xor
cmp
add
lahf
ret
in
fisubrl
inc
push
mov
xchg
aad
xor
leave
or
xor
inc
add
inc
or
aam
cmpsb
jbe
popl
cmp
shrb
mov
shl
insl
mov
inc
int
adc
in
mov
cpuid
fadds
nop
pop
jae
push
es
stos
pop
xor
scas
jo
inc
sub
mov
loopne
push
pop
xchg
je
les
push
push
stc
lods
adc
hlt
dec
sbb
ja
xor
mov
in
lods
mov
jp
das
xor
ret
les
cld
jnp
push
pop
ror
xor
roll
lret
in
dec
jge
test
insb
mov
insl
movsb
dec
sbb
int
cld
mov
lods
adc
jae
lods
loopne
dec
dec
divl
mov
stos
jmp
call
imul
dec
hlt
jle
test
dec
rol
rcll
inc
jbe
sti
lods
sti
xchg
pop
pop
or
aas
add
shlb
dec
cwtl
sbb
out
sub
push
loopne
xor
inc
mov
outsb
xor
push
jmp
movsl
and
cmpsb
mov
adc
ret
sbb
fsubl
lea
mov
jnp
orb
out
sbb
jle
and
fdivrl
cmp
pop
mov
xchg
or
lcall
enter
nop
call
pop
lea
imul
test
or
sub
faddl
roll
in
dec
out
push
mov
outsl
stc
popf
lock
jno
and
mov
imul
into
mov
sub
push
sub
jmp
mov
in
xchg
movsl
int3
in
lock
outsl
jno
mov
sub
sub
addr16
xchg
sub
xchg
shlb
imul
xor
xorl
xor
cmp
sbbb
les
push
iret
push
jmp
mov
cltd
lcall
inc
dec
xor
pop
sub
xor
loopne
popf
xchg
jno
in
fwait
movsl
data16
jmp
shlb
sbb
adc
ja
je
dec
sahf
dec
les
ffree
push
inc
int3
js
xlat
iret
cld
insb
push
insl
popa
adc
jp
lock
push
cmpsb
arpl
jge
xorl
dec
cmp
out
roll
pop
and
add
xchg
and
jmp
mov
mov
mov
pop
xor
lahf
shrb
mov
xchg
mov
leave
inc
sbb
out
mov
and
fmul
mov
push
sub
add
lods
adc
xor
push
pop
pop
jae
xor
hlt
mov
cmp
pop
into
xor
pop
push
repz
xor
rcrb
adc
fsubrs
subb
fwait
add
enter
into
out
ficompl
mov
jp
or
and
push
cmp
jae
mov
mov
addr16
testl
imulb
sbb
hlt
daa
or
jo
sbb
inc
leave
mov
insl
testb
scas
out
subb
mov
aas
fwait
mov
pop
pop
jno
arpl
xor
inc
stc
stc
ds
push
call
and
pop
jg
sets
cltd
ljmp
xor
and
int
dec
sub
jmp
sarb
xor
cli
popa
push
bswap
insb
outsl
loope
loopne
pusha
lea
mov
jp
in
fcmove
shl
dec
mov
or
cmp
out
lret
push
xor
out
jns
bndstx
sbb
call
frstor
pop
xor
mov
jae
repnz
stos
test
push
push
popa
mov
push
int
das
jge
add
fstpl
sahf
daa
mov
lock
ret
sub
dec
hlt
icebp
pop
push
and
clc
lea
and
icebp
lds
jno
pop
iret
cld
popf
gs
bound
int3
cltd
incl
je
adc
add
lods
test
das
xchg
insl
adc
xor
fidivs
inc
ss
gs
lahf
test
pop
lret
popa
sti
xor
pushf
leave
movsb
enter
push
movsb
cmp
inc
sbb
fimull
mov
push
rcl
cld
xor
cmp
jmp
xchg
inc
in
cmp
ss
pushl
push
push
push
loopne
dec
fisubrs
shr
adc
dec
aam
repnz
enter
mov
cmp
pop
push
pop
or
sbb
dec
int
sub
add
out
jno
into
inc
pop
xchg
lret
test
sub
pop
inc
add
inc
dec
sub
pusha
cmp
out
jp
sbb
push
sarl
adcb
fadds
cmp
subb
jno
fcoml
mov
daa
rcl
lea
scas
js
xlat
push
lods
adc
rolb
pop
sub
test
push
outsl
fbstp
sbb
cmpsb
pop
lcall
es
pop
cmp
notb
cmp
mov
jne
stos
test
push
int3
les
dec
jns
imul
out
lods
xchg
in
push
adc
shr
fimull
and
cmp
punpckhwd
dec
sub
out
sub
popa
imul
bound
mov
test
xor
pop
cmp
je
std
lds
mov
and
cli
and
sbb
sbb
cltd
mov
mov
push
jns
mov
call
push
add
cmp
stc
xchg
cmp
insb
inc
addl
aaa
in
and
jp
add
mov
and
and
xor
pop
sbb
or
pushf
jmp
dec
adcl
push
sbb
or
pop
in
inc
add
outsl
movsb
into
pop
test
cmpb
or
push
cld
mov
out
push
mov
into
into
es
shlb
repnz
xchg
cmpsb
push
ja
sub
dec
lret
xchg
mov
push
push
notb
inc
ret
xchg
sub
push
hlt
adc
sbb
sbb
jl
dec
inc
mov
dec
sub
imul
push
add
jg
stos
lods
xorb
pop
sub
into
mov
ljmp
cmp
js
mov
and
addr16
enter
fdivrl
xchg
adc
inc
jo
dec
addl
faddp
orl
lret
xchg
xchg
add
sbb
sahf
movlps
pop
in
jmp
jb
je
mov
movl
mov
inc
lds
push
cld
or
sbbl
loop
push
shl
pop
xor
push
sbb
ss
pop
das
push
mov
or
shlb
call
aaa
stc
dec
dec
xchg
fnstenv
repnz
movsl
add
imul
dec
push
jo
aam
push
sbb
mov
add
jmp
jo
mov
jp
pop
iret
repz
cli
pop
push
push
jne
mov
das
xor
mov
int3
jne
lock
aam
dec
lcall
repz
add
push
mov
vpmaxub
inc
add
outsl
adc
lcall
mov
add
imul
cmpsl
xchg
inc
cmp
sub
and
dec
repz
jne
dec
pop
mov
bound
arpl
in
vmovq
out
clc
loopne
icebp
repnz
xchg
mov
jmp
mov
test
jo
fsubl
adc
push
xorb
dec
idivl
fcompl
jb
fisubl
fucomp
jae
insb
add
sbbb
out
mov
bound
fistpl
mov
xor
jne
test
sbb
inc
cmpsb
jl
divb
inc
adc
movsl
cmp
into
and
stos
je
aaa
inc
mov
iret
cmp
test
aam
mov
push
pop
cmovle
mov
incl
add
fisubs
shll
cmp
cmp
je
mov
cmp
cmpsl
add
add
mov
scas
ret
imul
adc
cs
dec
jle
pop
inc
lock
cmp
ljmp
adc
divb
aas
mov
pop
aaa
mov
xor
xchg
stos
pop
movsb
pop
push
mov
sub
iret
pushf
sub
inc
push
adc
mov
cmp
aas
cli
fwait
icebp
or
push
arpl
in
lock
adc
in
mov
mov
lret
popf
inc
repz
scas
shll
add
inc
cld
pop
shlb
xchg
shl
lock
es
fs
in
xchg
sbb
xchg
js
aad
pop
add
incl
insl
into
icebp
and
daa
inc
mov
mov
lcall
inc
mov
sbb
push
sub
test
hlt
mov
lret
out
mov
aas
lret
in
or
push
sbb
arpl
popa
mov
cmp
xchg
dec
add
dec
iret
test
cmpsb
inc
push
cmp
inc
outsl
sub
data16
imul
shlb
iret
jle
dec
jmp
mov
mov
and
movsl
jnp
lea
js
cmpsl
jp
jg
scas
movsl
or
insb
xchg
adc
lods
or
imul
aas
fdivrs
xchg
mov
adc
xchg
insl
or
mov
inc
sarb
sbb
rolb
inc
pop
test
int3
xchg
inc
mov
mulb
sub
clc
mov
ja
enter
mov
stos
addr16
sbb
ds
xchg
xchg
dec
cmpsl
xor
xchg
in
stos
dec
add
xchg
mov
movsb
scas
xchg
inc
pusha
mov
js
nop
scas
sub
adc
pop
aad
icebp
mov
insb
sbb
stos
sub
repnz
mov
in
je
push
hlt
dec
mov
add
jo
test
dec
stc
sub
xchg
add
push
jae
cmpl
je
fnstcw
aas
sbb
inc
mov
sahf
pusha
jo
mov
test
hlt
imul
xor
mov
lcall
xchg
xchg
push
pop
inc
pop
inc
fidivl
sub
jl
inc
dec
push
xchg
fmulp
xchg
clc
cmp
fsts
loop
lea
lahf
rorb
aam
adc
and
mov
icebp
mov
pushf
shlb
popa
fdivrl
inc
repz
lret
inc
sahf
mov
outsl
loopne
cmp
shlb
lahf
mov
inc
xchg
mov
adc
cmp
test
dec
scas
fsubrs
loope
ja
sbb
ret
stos
jb
or
or
or
inc
adc
lret
inc
daa
jnp
hlt
out
test
sub
cmp
push
in
jae
sbb
push
int3
mov
add
xor
es
cmpsb
or
shrb
add
sbb
das
adc
fstpl
xchg
ljmp
mov
pop
subb
dec
shl
mov
cwtl
lods
push
fs
in
inc
jmp
cmp
lea
out
shl
pusha
cltd
in
ret
sbb
mov
out
sahf
push
xor
sar
cltd
in
repnz
pop
pcmpgtb
test
dec
add
cli
sub
sub
pushaw
push
ret
ja
xchg
out
lret
jl
adc
ret
mov
out
nop
addr16
cltd
inc
cs
jge
push
into
out
cmp
pop
push
dec
das
mov
cld
rorl
inc
sbb
je
xchg
pushf
mov
and
push
sarb
jmp
ret
popf
mov
clc
mov
sbb
sahf
xchg
int
sub
jae
cmpb
cmp
in
jno
neg
jo
nop
add
inc
in
xchg
insl
mov
imulb
stos
jg
push
sub
dec
mov
sub
subb
stos
data16
addb
in
in
ds
dec
adcb
mov
jo
in
push
sub
stos
cmp
popf
sbb
jl
js
dec
xchg
popf
incl
mov
outsl
popl
adc
xchg
clc
imul
in
shrb
call
cld
out
or
lahf
pop
mov
andb
stc
mov
imul
stos
sbb
in
cmpsb
cmpsl
inc
xor
jmp
cwtl
xchg
roll
xor
mov
xchg
in
mov
in
cltd
adc
pop
sbb
xor
in
add
mov
out
dec
mov
fildl
imulb
mov
dec
sub
fildll
addl
and
or
dec
inc
scas
mov
clc
cmp
xchg
jb
dec
insl
rorl
mov
ds
test
ja
rcrl
xor
es
aas
cmp
add
jno
mov
dec
cld
repnz
push
adc
test
scas
sbb
jne
adc
dec
ret
fcmovbe
pop
es
fnstcw
add
dec
xchg
fs
pop
mov
xchg
test
mov
jno
mov
xchg
das
mov
shll
push
aas
int
jb
out
data16
dec
sub
xchg
cmp
push
lock
mov
addr16
xchg
and
inc
push
jae
movsl
lret
jge
ret
or
in
aad
sbb
add
lret
rcrb
lds
cmp
sub
push
imul
cmc
bound
jns
cmpsb
and
test
scas
out
push
cmp
arpl
loope
in
orb
sub
in
fnstcw
lock
cmc
dec
lahf
mov
pop
and
and
dec
dec
pop
add
xchg
jp
fistpl
mov
sub
mov
cwtl
loop
clc
ret
jnp
test
inc
stc
mov
cli
lret
mov
push
push
or
out
in
sti
int
stc
daa
dec
or
mov
xlat
cld
jno
das
jns
and
mov
push
jle
subb
cmp
xchg
add
lock
into
mov
or
cmp
pop
movsb
dec
scas
shlb
or
shlb
dec
stos
dec
pop
aas
push
sti
mov
pop
arpl
cmp
push
inc
loop
shll
out
sahf
jbe
enter
push
movsb
mov
jo
lcall
not
jmp
sub
fnsave
add
ret
and
mov
sti
pop
sub
inc
hlt
je
ret
lock
sub
mov
xor
stc
mov
repnz
loope
arpl
into
sub
xor
cltd
inc
std
insl
stos
popa
cmp
dec
lds
outsl
fwait
jae
push
cmpsl
shlb
movsb
repnz
jo
cmp
push
add
jns
adc
insl
mov
push
pop
rcl
and
xorb
jecxz
inc
and
and
stos
out
add
mov
mov
rorl
mov
fidivs
pop
add
js
push
ss
add
out
sbb
lcall
mov
imul
dec
out
or
push
add
add
int3
nop
cltd
and
xor
dec
xor
movsb
sub
jns
data16
mov
icebp
incl
imul
adc
idivl
test
adc
rolb
incb
cwtl
out
or
add
mov
or
xor
fiaddl
sub
leave
mov
aad
daa
rcr
xor
jp
jae
ljmp
ljmp
ret
cmp
repz
stos
and
dec
mov
scas
test
loop
dec
inc
and
mov
mov
test
repnz
adc
in
sbb
test
mov
ljmp
inc
fcmovnbe
mov
sbb
xchg
sahf
mov
gs
scas
jg
push
xchg
jmp
insl
mov
mov
bound
sbb
push
add
popf
jp
adc
loop
loope
in
xor
shlb
push
inc
idivl
loop
jne
cld
cltd
mov
test
mov
inc
xchg
push
push
cmc
jnp
divb
jb
xor
sub
scas
lds
mov
xor
imul
rsm
lds
call
xchg
lea
ret
cltd
xchg
inc
pusha
inc
fdivr
pop
enter
cmp
jnp
lods
fst
nop
andl
inc
pop
inc
xchg
int3
shr
push
mov
push
fdivrs
mov
xchg
rorl
scas
fnclex
mov
sti
jb
repnz
mov
aas
stc
dec
cmp
pop
sub
pop
jne
mov
test
mov
bound
pop
mov
mov
xor
mov
fcoms
sbb
les
dec
push
xchg
xor
sbb
orb
inc
inc
xor
leave
dec
jp
std
xor
loop
add
je
jns
repnz
add
sub
sbb
je
xchg
sub
hlt
stc
sub
into
mov
das
dec
out
pop
popa
xor
sub
or
lds
pop
mov
das
int3
add
out
pop
sub
sub
jge
stos
mov
dec
mov
clc
mov
movsb
outsb
lahf
lret
sub
adc
js
fcmovne
dec
test
loopne
sbb
pop
xchg
jle
pop
mov
aas
sub
jb
fstcw
mov
stc
insb
inc
cld
or
xchg
or
mov
inc
cmp
rorl
js
popa
movsl
and
pop
shll
rcrl
addr16
and
fnsave
lock
sub
scas
psadbw
or
dec
add
pop
add
sahf
adc
ss
loop
cs
mov
das
or
repnz
fdivs
jmp
xor
mov
pop
mov
or
clc
insl
stos
adc
ret
sbb
and
mov
push
sysret
int3
inc
dec
sbb
jg
aad
js
popf
and
ficoms
arpl
cmp
push
nop
in
pushf
outsb
loop
dec
lcall
fadd
pop
test
cwtl
jmp
inc
stos
push
adc
lds
inc
int3
xor
lahf
jg
outsb
mov
iret
sahf
mov
aas
mov
dec
mov
mov
jle
cs
mov
xchg
dec
cmp
popf
in
mov
xor
shll
clc
or
and
rol
push
stc
mov
stos
cmp
scas
push
cs
dec
test
adc
jmp
mov
xlat
xchg
mov
int3
ret
in
xor
xor
loop
add
imulb
inc
or
adc
ss
ljmp
nop
scas
xchg
mov
mov
push
in
mov
stos
fiaddl
rcrb
adc
rcrb
inc
jno
sub
ljmp
and
and
push
aas
sbb
mov
inc
dec
fists
es
shr
lods
adc
add
scas
dec
or
sbb
mov
mov
popa
cmpsl
ret
hlt
jp
mov
movsb
add
lock
out
cmp
cli
jle
inc
push
sbb
imull
ficoml
xor
out
sub
ss
jae
dec
mov
nop
pop
fcmovb
xchg
aas
inc
xlat
or
fs
xchg
inc
arpl
enter
idivb
into
outsb
sbb
rolb
sub
movsb
mov
add
xor
pop
scas
arpl
into
jne
pop
sahf
xchg
jge
and
sarb
mov
sbb
jl
rcr
leave
int3
imul
push
cltd
hlt
cmp
aas
or
imul
dec
cmp
cwtl
push
add
dec
cmp
lods
xchg
lds
imul
loope
jmp
or
aam
aaa
addb
mov
mov
out
push
add
jb
iret
or
daa
cmpsl
jnp
adc
mov
clc
push
lret
shl
cmpsl
imul
rclb
sub
lahf
adc
push
divl
shll
push
loope
in
cmp
mov
mov
bnd
pop
arpl
in
std
outsl
fisttpll
fnstsw
ret
add
inc
mov
outsb
mov
xor
inc
test
jg
cwtl
pop
in
pop
mov
dec
pushf
loop
and
movsb
bound
cld
adc
into
dec
out
cmp
jp
xor
inc
ffreep
mov
xchg
push
mov
std
movsl
mov
and
inc
cmp
insl
iret
jno
jne
sub
icebp
das
cmp
in
mov
sahf
or
xor
cwtl
pop
fcoml
push
or
jne
jp
pop
sub
adc
dec
xor
and
rcrb
dec
cmp
addr16
cmp
add
add
ret
dec
jmp
pop
sub
loop
fs
lods
dec
lcall
dec
dec
stos
out
shl
scas
jge
add
or
mov
scas
mov
test
lods
xchg
stos
enter
testb
icebp
sub
mov
adc
bound
mov
mov
loop
out
leave
mov
add
xchg
mov
push
mov
pop
in
test
xor
push
cmc
push
ja
xor
rol
inc
and
xchg
adc
das
icebp
sub
sbb
mov
jg
push
daa
enter
movsb
cs
sbb
dec
in
idivb
mov
xor
or
xchg
ja
cmpsb
cmpl
mov
jl
push
ror
and
and
push
cmp
mov
outsl
add
sti
stc
popa
shlb
cmpl
push
push
mov
pushf
xchg
and
mov
pop
int
mov
mov
in
fstpl
fdivrs
dec
mov
mov
ss
into
aas
jp
pop
sahf
out
or
push
adc
push
jb
cltd
sbb
movsb
push
and
sbb
insl
xchg
nop
sub
push
inc
push
xor
mov
fbstp
lock
lods
jno
outsl
mov
dec
incb
dec
xchg
push
pop
pop
xor
cmp
out
shll
pop
mov
sarb
sbb
pop
jge
inc
popa
xor
mov
jnp
loop
push
push
push
call
and
fnstenv
mull
xor
rclb
das
inc
xchg
rolb
mov
adc
cmpsl
fstl
push
and
in
jl
add
adc
jg
pop
push
clc
scas
sbb
jmp
mov
sti
pop
inc
jge
push
fwait
call
pusha
inc
stos
jbe
shll
xor
xchg
pop
mov
dec
push
push
sbb
jp
sub
sub
push
cmc
int3
xchg
jbe
out
xchg
mov
xchg
gs
hlt
adc
inc
and
adc
cmp
lret
xchg
in
adc
inc
adc
scas
cmp
and
adc
pop
cld
stc
cltd
repz
xor
and
sub
scas
sub
and
xor
jecxz
out
hlt
cli
call
ljmp
add
movsl
or
xchg
add
call
pop
inc
cmpb
fsubrp
xchg
mov
jne
jle
add
mov
lods
or
outsb
lods
icebp
mov
in
stos
mov
cmp
and
shll
popa
jae
mov
imul
loope
aad
arpl
cmc
or
mov
arpl
sub
out
jbe
pushf
psllw
aam
pusha
stos
and
jns
push
xchg
bound
lods
fists
pop
mov
pushf
push
jg
enter
mov
ljmp
inc
xchg
dec
out
sub
out
scas
fdivs
movhps
popa
bound
aad
push
dec
inc
or
hlt
lcall
loop
lahf
iret
out
mov
push
push
add
stc
popa
stc
push
adc
xor
popa
sti
cld
outsb
int3
cmpsl
shrb
push
adc
xor
ljmp
mov
xor
shrb
dec
lods
jl
xor
das
subb
shlb
add
cmpl
mov
jb
xor
les
sahf
ljmp
into
push
ja
imul
mov
sbb
out
lds
inc
add
je
cmpsb
jp
cmpsl
inc
dec
daa
je
pop
inc
nop
jae
hlt
ss
push
mov
lahf
cmp
addr16
mov
imulb
xchg
ret
mov
sub
mov
cmpsl
test
ds
popl
push
in
popa
xchg
xor
inc
pop
pushf
pop
jne
adcl
add
mov
push
fwait
call
cwtl
out
test
fsubrs
jmp
cmp
out
add
les
jbe
icebp
insl
cmpsl
push
out
sub
xchg
test
lea
add
cli
movsb
push
mov
fimull
push
pop
test
aas
mov
loopne
jmp
repz
lret
fsubs
movsl
or
add
imul
addl
cmc
rcrl
movsl
scas
mov
xor
mov
testl
dec
fs
jne
je
js
into
test
stos
sti
insl
xchg
xchg
dec
movsb
push
pop
xor
cwtl
sbb
sub
push
lds
and
cmc
idivl
pop
lea
xchg
les
mull
nop
ss
mov
sbb
add
loope
movsl
and
push
ljmp
scas
push
push
in
inc
add
adc
adc
sbb
mov
mov
out
sti
out
cli
inc
inc
cmp
test
sbb
test
xor
jnp
push
stc
sub
mov
call
fimuls
stc
sub
dec
into
add
pop
repnz
pushf
sub
mov
and
mov
enter
xchg
pop
mov
outsb
popf
sbb
lahf
adc
mov
idivb
xor
or
jno
dec
mov
mov
mov
xor
push
xor
sbb
stos
imul
int3
bound
stos
lcall
xor
leave
push
mov
in
bt
dec
jo
xchg
out
cmc
push
pop
popf
xor
out
xchg
jae
sub
xor
add
sbb
or
mov
stos
and
sub
ss
lret
push
jg
pushf
jl
ja
cmpb
push
movsl
sbbb
cltd
xchg
pop
add
outsb
out
test
in
cmp
pop
aad
mov
rcr
push
dec
jecxz
push
push
stos
sahf
sub
pop
repnz
and
adcb
mov
sub
push
push
test
adc
out
rolb
stos
adc
mov
adc
xchg
jbe,pt
add
lock
xchg
fnstcw
and
xchg
pop
dec
aas
out
ficomps
xor
addl
jg
shlb
cmp
in
mov
sub
jg
pop
mov
orl
rclb
lahf
cmp
xor
das
out
jg
sbb
cmc
push
mov
or
cmp
lret
mov
arpl
adc
mov
jb
out
pop
mov
sbbl
in
and
adc
xchg
sub
jecxz
int
js
jae
mov
or
sub
lret
insb
test
gs
jns
add
insb
sub
pop
cmovo
xchg
adc
test
lahf
cld
and
cltd
lods
out
sti
stos
bound
fcmovu
mov
adc
lds
cmp
das
into
aaa
repnz
and
lods
push
and
and
push
pop
or
pop
inc
mov
mov
jp
pop
pop
int3
sub
outsl
or
cld
mov
fwait
js
jne
mov
pop
jp
jb
arpl
xlat
sub
pop
lret
lds
in
pop
out
stos
mov
dec
aaa
add
leave
rcrb
shrl
fs
or
addl
daa
fistpll
out
mov
pop
adc
lock
mov
cwtl
pop
pop
jo
cmp
pop
push
shrl
orl
pop
stc
sbb
fs
cltd
jb
ret
jno
arpl
xor
adc
add
or
sbbl
sub
mov
mov
pop
je
enter
or
fsubrl
lret
test
jmp
fstl
inc
xor
shr
rcl
data16
cmp
rcll
adc
xchg
aaa
mulb
int
dec
rorl
ret
leave
lods
push
or
sbb
inc
inc
cmp
cld
pop
sbb
outsb
push
inc
pop
push
and
or
xchg
sbb
insb
mov
leave
jl
sti
jecxz
dec
sub
push
dec
into
out
dec
or
pop
push
lcall
adc
or
lret
cli
cmp
push
sub
jl
jb
insb
push
jns
andb
movsb
cwtl
jge
aaa
lcall
test
mov
xchg
lret
jl
bound
mov
popa
xchg
mov
mov
sti
mov
aam
iret
mov
fdivrl
lret
outsb
outsl
sahf
fnstcw
xor
outsl
mov
data16
ret
pop
addr16
mov
pushf
fs
pushf
das
loop
push
fsubrs
inc
lret
xor
loop
mov
pop
lods
pusha
shll
pop
aad
enter
ja
and
pop
xchg
sub
cltd
jle
dec
arpl
fisubrs
adcl
fistl
jge
stc
pop
stos
inc
push
leave
pop
mov
js
outsl
add
add
lcall
xor
cld
test
data16
mov
divl
lret
inc
mov
clc
fcompp
inc
lods
adc
insb
mov
scas
jle
rcl
jae
push
inc
and
pop
loope
dec
push
xor
inc
ss
bound
xchg
cmp
and
mov
push
cwtl
fsts
repz
and
dec
fbld
bound
je
and
inc
xchg
rcll
dec
ljmp
mov
es
mov
in
data16
lret
ret
out
jbe
mov
cmc
mov
es
or
clc
jbe
pop
fcoml
adc
ja
or
aam
inc
mov
and
mov
inc
push
subb
push
cmp
fcmovu
pop
jecxz
adc
icebp
inc
in
push
pop
xchg
xor
mov
xchg
jg
shr
aaa
pop
mov
mov
jo
push
inc
mov
and
divb
cltd
or
sbb
mov
jge
pop
je
adc
in
leave
and
push
popf
lahf
ret
call
push
and
push
roll
pop
test
sub
adc
mov
mov
dec
mov
lahf
fsubrs
test
sbb
cltd
mov
mov
lods
sbb
rorl
mov
jl
cmpsl
adc
jge
leave
adc
dec
and
int3
push
adc
rcrb
sbb
aam
fcomip
lret
mov
mov
mov
jns
ja
adc
dec
mov
subl
dec
mov
pop
mov
aaa
bound
lahf
pop
mov
bound
aad
fcomp
mov
fwait
rorb
sub
pop
mov
mov
out
shl
fimuls
dec
xchg
sub
lret
fldl
add
add
jg
rcrl
mov
push
or
aas
push
sub
test
ljmp
push
mov
push
cmpsb
cmp
and
and
int
mov
sarl
jp
mov
and
fs
pop
pop
leave
mov
mov
adc
ret
jne
leave
pop
inc
xchg
ss
jp
clc
insb
add
loop
cmp
sub
xor
mov
int3
jmp
mov
enter
stos
cmp
push
lahf
icebp
or
mov
stos
inc
iret
aam
repz
sbb
fists
stc
loopne
jns
pop
sub
sub
jecxz
cltd
mov
cmp
pop
sub
int
repz
ficoms
add
sbb
mov
mov
jl
push
loope
scas
and
repz
stos
jmp
fsubr
jb
xchg
sbbb
mov
insb
push
xlat
mov
imul
aad
mov
pop
add
out
push
nop
jmp
into
iret
mov
pop
push
jno
ss
push
xchg
push
push
sbb
mov
xor
enter
xchg
or
inc
insl
loope
es
adc
cmp
lods
mov
stc
xor
mov
lock
outsl
loopne
sbb
aam
imull
xchg
inc
leave
xchg
inc
xor
mov
mov
stc
cmpsl
sub
push
repz
scas
daa
sub
loopne
jl
pop
cli
add
mov
jecxz
or
lret
jns
dec
sti
inc
stos
int3
adc
decl
mov
jno
in
shll
icebp
push
scas
std
test
jle
xchg
fcmovnu
add
pop
mov
cmc
mov
out
test
mov
mov
mov
and
jo
js
cmp
sbb
xchg
repz
pop
bound
cmpsl
test
repz
and
push
insl
and
jmp
and
ss
icebp
jecxz
xorl
pop
cmp
xchg
fldl
mov
andl
and
inc
xchg
mov
andb
mov
jmp
out
jecxz
cmp
out
add
dec
loop
fidivs
xchg
or
ja
into
lods
sub
cwtl
in
or
sbb
adc
dec
repz
xchg
pop
and
gs
fsubrs
ja
stos
sub
lea
fs
shr
dec
loopne
cmpsl
aas
push
cmp
pushf
push
and
dec
xchg
mov
out
mov
mov
lret
and
aad
xlat
imul
in
test
sahf
pop
add
lret
push
jo
cltd
xor
loopne
fidivl
mov
loope
pop
dec
movsl
leave
sub
mov
sub
jge
mov
cmp
jmp
dec
adcb
andl
or
addl
xlat
inc
xchg
cmp
fs
stos
mov
cmp
add
xchg
stos
cld
ja
adc
mov
popa
shrl
into
push
sub
xchg
add
inc
pop
push
push
cwtl
in
mov
imul
mov
mov
cwtl
add
xor
adc
xor
cmp
enter
scas
and
adc
std
loope
lret
xor
jno
fldcw
lea
or
pop
popf
or
bound
in
rclb
dec
xor
or
stos
xchg
xchg
jmp
outsb
andl
int
push
imul
scas
mov
stos
rolb
and
mov
mov
xchg
stos
incb
xchg
out
outsl
pushf
arpl
lods
js
movsl
popf
xchg
rcll
frstor
mov
in
push
clc
call
xlat
mov
mov
mov
iret
gs
sub
js
xchg
ficompl
push
cmp
mov
push
add
push
leave
out
push
push
lahf
and
aam
and
rorl
hlt
scas
mov
xchg
int3
push
out
sbb
movsl
xor
jmp
jle
xchg
ja
seta
inc
cld
xchg
adc
daa
ljmp
inc
adc
mov
mov
adc
mov
das
cmp
sbb
cmc
enter
jg
mov
jg
out
add
sbb
adc
push
inc
or
inc
fdivrl
rorb
mov
lock
sub
push
movsl
lahf
pop
or
das
inc
aaa
mov
rcll
daa
mov
lea
inc
bound
jl
push
add
push
outsl
sbb
jecxz
in
gs
or
ja
mov
dec
stos
jge
cli
bound
pop
xor
aaa
or
rcrl
in
nop
iret
pop
cli
sub
fisubrl
or
mov
jne
gs
aad
lea
and
jg
mov
cwtl
rcrb
cmpsb
je
jo
jg
jbe
test
negb
shl
pop
push
mov
add
testl
into
adc
cmc
aam
cmp
push
lock
inc
add
test
jbe
mov
cwtl
inc
lea
lds
jl
ds
jb
jmp
xor
sub
cmp
mov
jg
lcall
dec
aaa
lret
cmp
movb
and
add
inc
jne
test
lds
add
scas
mov
xchg
sbbb
jp
lds
aaa
lret
cs
pop
inc
aam
push
out
xor
xchg
stos
mov
das
xchg
lods
lret
mov
adc
std
mov
jmp
cmp
pop
sub
addr16
loope
mov
jmp
inc
mov
xor
out
data16
sahf
cmc
les
popf
cmp
dec
hlt
fdivs
mov
fstl
jb
ret
and
cwtl
call
xchg
jne
pop
sub
fisubrl
insl
in
jnp
inc
inc
xor
and
lock
sub
icebp
xor
in
pop
push
pop
fcomps
dec
inc
push
xor
mov
xchg
and
out
lods
mov
push
mov
imul
jb
aas
ret
popa
jecxz
cmp
pop
shl
mov
imul
dec
and
loop
enter
loope
xlat
sub
sarl
imul
cmp
lahf
sti
outsl
iret
or
pop
pop
aaa
lcall
enter
xlat
xor
in
insl
hlt
enter
mov
xor
add
mov
xor
testb
mov
mov
push
fidivrs
ljmp
in
xor
mov
lret
xorl
pop
in
jg
mov
sti
push
cs
sbb
sbb
shr
jg
lods
imulb
rolb
cmp
xor
mov
mov
mov
insl
enter
enter
xchg
bound
pop
icebp
bound
sub
sbb
test
hlt
lret
in
arpl
add
push
test
and
fwait
je
adc
jbe
cmp
jl
xchg
dec
push
mov
out
and
pop
dec
cltd
adc
lret
repz
std
cmp
mov
mov
out
cmp
dec
cld
add
push
ror
sbb
int
js
adc
xchg
jge
mov
mov
les
add
enter
into
xchg
cmp
cmp
inc
push
xor
cwtl
lcall
in
or
lcall
lahf
popf
add
sub
cli
fcompl
cmpl
pop
add
pop
mov
mov
aam
cmp
mov
shll
push
shl
or
cwtl
dec
jns
add
aam
and
push
xor
mov
cmp
inc
pusha
jb
push
lret
cmp
xchg
je
call
cwtl
pop
mov
mov
and
cmp
js
mov
or
pop
shlb
jae
imul
mov
test
call
mov
in
mov
lods
mov
mov
mov
arpl
and
shlb
inc
push
push
push
push
cmp
jl
clc
add
cmp
insl
ror
gs
test
mov
cmp
xchg
jnp
inc
dec
shll
push
lahf
popa
mov
insl
insb
add
jbe
mov
sub
shll
cli
aaa
sub
mov
adc
in
adc
adc
ljmp
enter
bound
push
jge
pop
mov
loop
shll
dec
ret
ret
clc
fimull
sti
call
lcall
dec
jb
mov
fmull
or
inc
lds
xlat
inc
inc
xlat
enter
popa
mov
je
or
add
int
or
mov
jecxz
lret
comiss
mov
test
inc
sub
dec
fnstcw
add
test
jae
adc
lret
into
je
in
cmp
int3
popf
pop
jno
imul
push
push
rcl
int
call
cmp
mov
ror
in
imul
push
hlt
aas
pusha
negl
mov
mov
bound
aas
pop
call
data16
push
jne
dec
hlt
aaa
pop
xor
das
lds
scas
sub
pop
dec
lds
cmp
ljmp
xlat
cld
call
lds
lahf
movsb
mov
inc
or
pop
testl
sub
inc
decl
inc
xor
fcmovu
mov
cmp
inc
fwait
jno
mov
push
daa
add
decb
xlat
repz
or
lea
or
dec
repz
movsl
xchg
sbb
jne
repz
jbe
es
lds
pop
xor
mov
and
lret
or
sub
jge
pop
repnz
ja
add
nop
or
xor
inc
int
repz
push
fisttps
mov
push
in
loope
scas
imull
loope
rcr
out
insb
hlt
pop
jb
lret
int
enter
pop
mov
xchg
push
push
xlat
fiadds
cwtl
adc
lret
bnd
insb
or
std
xchg
dec
ljmp
jnp
cmp
jnp
pop
ret
dec
mov
push
mov
mov
dec
adc
ret
rorl
cmp
fcomps
add
pop
jne
adc
mov
xchg
mov
mov
xorl
sub
shl
fadds
dec
xchg
or
fstpl
in
push
out
jg
push
lock
cmp
ja
std
mov
popf
enter
es
pop
adc
repz
in
fcomps
bound
aaa
cmp
out
stc
addr16
adc
das
scas
lods
xor
pop
frstor
jl
push
sbb
addr16
dec
mov
ja
into
cwtl
ficompl
sub
sbb
adc
jecxz
outsb
lods
fsubrl
lods
out
aad
in
mov
fcmovne
cmp
movsb
sub
stos
cmp
daa
xchg
mov
pusha
sub
sub
loope
jb
std
adc
mov
movsb
mov
xchg
jae
je
les
or
rcll
mov
inc
dec
inc
je
cld
fnstsw
or
sbb
fisubs
xor
icebp
imul
push
mov
pusha
out
mov
cli
lea
ss
outsl
out
pop
popa
cmp
pop
adc
pop
movsb
dec
mov
pop
mov
loope
dec
lods
mov
mov
push
rcrl
loopne
pop
loope
movhps
inc
inc
negl
test
and
mov
sbb
pop
fisttpll
rolb
das
jae
scas
stos
insb
xchg
lods
cmp
hlt
jmp
push
sbb
sbb
xchg
mov
jl
add
and
sub
sub
shrl
data16
push
andl
dec
mov
cmp
pop
or
lret
pop
int3
mov
fdivrs
ds
sbb
sbb
icebp
jno
jmp
push
flds
cli
pop
jmp
mov
arpl
iret
sbb
aam
int3
mov
iret
lahf
pop
int
addr16
imul
xor
jge
leave
push
movsl
add
inc
es
pop
add
cltd
sbb
cmp
mov
inc
imul
cld
rcll
push
bnd
in
scas
sahf
sbb
scas
lods
int
sub
repz
xor
pushf
icebp
cld
js
outsl
mov
cmp
fst
cmpsb
popf
mov
inc
fstsw
and
ror
mov
dec
mov
test
inc
mov
fisubrs
aam
push
mov
insb
test
sarb
lcall
xchg
mov
shr
cmp
imul
bound
mov
test
pop
pop
pop
lds
mov
xlat
jecxz
dec
adc
rcrl
sbb
pop
mov
xor
sub
insl
cli
push
xchg
pop
mov
push
dec
je
lret
shll
xchg
mov
push
sahf
push
pop
pop
je
mov
ret
ljmp
or
xchg
mov
dec
pop
addr16
adc
mov
pop
testb
lea
jmp
mov
outsl
sbbl
sarb
pop
in
jp
out
pop
adcl
add
jns
pop
or
jle
mov
out
fucomi
insb
sbb
cmp
pop
aas
lds
jmp
dec
fst
or
lcall
pop
popa
movsl
ds
mov
mov
inc
mov
imul
pop
jo
into
inc
fs
cmpb
dec
subl
or
test
sub
scas
inc
dec
inc
xchg
adcl
fisttpll
cmp
movsl
push
sub
mov
lea
push
push
test
jmp
push
aas
adc
jecxz
das
mov
sbbl
cmp
notb
xchg
dec
out
inc
mov
ja
bound
mov
stc
or
les
sarl
pop
mov
popa
popa
pop
les
adc
mov
cwtl
pop
add
xchg
cmp
jle
mov
pusha
sub
imul
in
sbb
stos
aas
popa
cmp
fs
or
addb
inc
inc
push
fwait
add
pop
loopne
cwtl
stos
test
out
cmp
push
ret
outsl
ljmp
movsb
out
inc
inc
inc
ljmp
adc
cmp
push
sub
pop
fdivp
popa
cld
popf
pop
rcrl
mov
adc
sbb
mov
or
sti
adc
es
outsb
mov
mov
sti
loopne
and
xor
mov
sarl
inc
orl
push
xor
push
adc
daa
push
hlt
cmpb
mov
aam
popa
add
cmp
dec
sbb
fucom
data16
arpl
arpl
leave
mov
mov
cwtl
mov
fildl
inc
mov
cmpsl
iret
lods
cmp
jle
fwait
dec
pusha
js
lret
lcall
test
push
clc
sbb
add
or
cmp
or
sub
hlt
cld
sub
fmuls
fisttps
cli
mov
popf
js
add
hlt
gs
or
arpl
fistpl
loope
cmp
lock
repz
in
stos
inc
sbb
adc
xlat
push
mov
shlb
sahf
xchg
mov
fisubs
scas
cmp
add
jle
xchg
leave
cltd
stos
cs
repz
mov
pop
mov
xlat
push
jns
or
insl
dec
mov
es
pushf
nop
ja
sub
push
mov
popa
in
lret
mov
adc
mov
jmp
inc
inc
shrl
pusha
mov
movsl
decl
std
push
mov
lea
lods
cmp
pop
mov
xlat
xor
pop
mov
cmp
rcr
pop
mov
mov
push
add
add
roll
xchg
jo
clc
add
xchg
ja
push
sbb
fstl
aad
enter
loopne
call
jbe
push
pop
test
enter
inc
lods
ljmp
jl
cmpsb
shll
push
pop
sar
push
fsubl
in
dec
jno
add
xlat
jp
adc
je
aad
pop
out
hlt
mov
cmpsl
push
jg
mov
cld
pusha
test
out
adc
mov
jb
and
and
xorb
or
sahf
pop
lods
and
xchg
jne
xchg
sbb
fs
pop
pop
sub
lea
mov
pushf
lods
jmp
mov
jns
pop
pop
ror
jge
push
das
testb
inc
or
roll
std
out
out
mov
sub
mov
data16
jbe
and
inc
mov
jns
es
adc
insb
mov
dec
adc
push
jmp
adc
popf
je
adc
fdiv
cli
jae
rorl
and
lcall
mov
sahf
cmp
js
hlt
sub
dec
out
or
pop
fcomip
outsl
inc
jg
lods
mov
sub
mov
xor
popf
add
push
inc
adc
pop
xor
shrl
and
lods
inc
adc
or
mov
push
clc
pop
es
call
leave
repz
pop
dec
cmc
pushf
and
lods
fiadds
mov
pop
mov
push
pop
mov
push
dec
pop
xchg
add
scas
cmp
fldt
call
sub
mov
stos
orl
insl
incl
aaa
pushf
insl
and
pop
add
cmpsl
insl
out
pop
mov
test
fcmovb
xorb
sbb
mov
lods
adc
jmp
jb
add
enter
pop
xchg
pushf
mov
pop
movsl
dec
cltd
std
aam
outsl
mov
xor
rolb
jge
sub
jmp
sub
jp
nop
mov
xor
pop
popa
inc
popa
and
jge
sarb
insl
std
cmc
cltd
mov
add
les
cmp
test
jns
mov
cmc
and
repz
mov
std
cmp
and
mov
popfw
popf
test
daa
pop
test
mov
push
sub
shrb
loopne
pop
in
sub
jb
add
mull
mov
or
xchg
mov
rol
xchg
into
push
jbe
adc
and
xchg
xor
ret
stos
push
add
push
mov
addb
sbbb
repz
icebp
jge
lcall
movsb
sub
lret
repz
cmp
or
pop
add
lods
iret
xchg
cmp
in
jo
int3
icebp
in
test
dec
pushl
fs
mov
lds
movsb
xchg
lods
sub
push
and
loop
repnz
pop
lds
sbb
jns
dec
mov
jp
inc
add
adc
push
fists
mov
jne
icebp
les
or
std
xor
fiaddl
test
and
jne
aaa
out
les
rcr
imull
pushf
ljmp
or
sahf
cmc
cmpsl
push
cmpl
jl
push
mov
sahf
imul
mov
arpl
loopne
pop
call
jl
call
cmp
sarl
test
jecxz
xchg
ljmp
ficompl
mov
cmp
dec
mov
aam
sub
das
ficompl
or
adc
nop
xor
push
cmp
dec
fwait
es
pop
notb
sub
out
jg
mov
or
fnstenv
test
aam
nop
xlat
in
outsl
cmp
in
add
fists
cmpb
rorb
cli
std
stos
psubusw
rcrl
scas
mov
leave
pop
or
xchg
cmpsl
in
nop
pop
xor
in
in
xchg
stc
ja
pop
scas
and
sub
rorl
in
xchg
push
call
gs
mov
push
and
xchg
xchg
mov
pop
dec
scas
add
or
jno
push
sbb
push
rcl
dec
xlat
mov
movsb
dec
cmpsl
lcall
sbb
add
pop
es
add
sub
out
cmpsb
xchg
pop
ret
xor
js
divl
mov
ror
scas
xchg
mov
inc
inc
je
push
enter
in
cltd
movsb
mov
pop
xor
and
sub
lods
or
cld
outsb
imul
lcall
push
add
mov
mov
push
ds
aad
imul
sbb
out
nop
xlat
out
sar
dec
push
daa
jg
cmp
mov
fwait
push
sub
mov
add
push
jle
pop
jle
cwtl
mov
mov
repz
mov
out
adc
aam
inc
push
mov
stos
movsb
jle
add
sub
cmp
or
adc
test
xchg
sti
insl
loope
or
dec
in
call
sbb
imul
stos
push
imul
push
lahf
push
inc
sub
lods
xchg
mov
jb
ja
pop
fbld
xor
int3
and
jge
stos
pusha
dec
xor
pop
mov
cmpsb
bound
es
xor
or
sbb
jmp
mov
inc
pop
lods
andb
pop
inc
push
das
sub
ror
xor
shl
lods
mov
xchg
dec
in
mov
out
mov
sti
sbb
cmp
pop
fcompl
add
repz
and
dec
aam
inc
jg
loop
cld
testl
out
xadd
sub
ss
gs
fisubs
cmp
dec
incl
les
mov
je
and
fcoms
ret
inc
inc
stc
push
or
lcallw
sub
mov
jge
mov
xchg
ljmp
cmp
inc
iret
mov
inc
add
lods
mov
lods
test
jns
mov
xchg
jo
mov
shrl
sbb
mov
pop
test
inc
mov
insb
mov
sub
add
mov
ret
scas
push
cmpsb
std
mov
movsb
in
sub
cmp
adc
mov
and
xchg
xchg
jbe
xchg
or
shll
and
cmp
std
inc
xor
andl
dec
cmp
mov
or
xor
popf
and
adc
and
mov
adc
sti
lds
mov
jg
adc
push
push
loop
leave
subb
jge
mov
or
jge
subb
jl
scas
or
push
js
sbb
dec
lret
out
cmp
ret
imul
les
and
mov
idivw
mov
mov
lret
add
int3
insb
bound
xlat
lcall
mov
ja
bound
mov
outsb
adc
les
ja
mov
sbb
fwait
xor
cmp
repz
sub
cmp
sub
jle
sub
xcrypt-ofb
cmpsl
sub
xor
test
jno
divb
loop
pop
aaa
js
les
pop
pop
xchg
inc
stos
call
jb
movups
sbb
and
lcall
lods
push
vpsubq
popa
stc
dec
mov
mov
adc
inc
loop
adc
out
dec
push
mov
cmp
jecxz
mov
ret
add
push
faddl
fwait
mov
cmp
sbb
jecxz
cli
cli
subl
jns
push
or
mov
movsl
in
mov
cmpsl
add
inc
das
or
mov
inc
push
fists
xor
call
and
push
stc
or
jae
rcr
xor
in
dec
mov
in
into
das
repz
xchg
cli
lea
cmpsl
inc
lret
fmull
jle
sahf
imul
es
dec
int
repz
push
or
mov
mov
adc
lret
jns
orl
inc
mov
test
mov
push
sbb
or
loop
repnz
es
inc
cmp
addr16
or
jmp
sub
mov
fstl
adc
cwtl
mov
repnz
adc
out
jmp
mov
push
push
mov
cmp
push
aam
push
sub
lret
add
pop
repz
shr
scas
out
xorl
cmp
sbb
pop
xor
cld
jno
std
add
inc
mov
push
shr
dec
daa
sbb
mov
test
fnsave
mov
movsb
aaa
and
xor
jmp
aaa
fstps
pushf
mov
icebp
sbb
xorb
popa
dec
push
sbb
fs
daa
enter
pop
cld
mov
fcomip
push
mov
push
pop
jno
push
iret
mov
adc
pop
mov
cld
push
xabort
inc
mov
loope
cmp
fimuls
mov
sar
and
xchg
stc
out
sbb
sbb
ljmp
sbb
out
js
stos
inc
mov
int3
fcmovbe
jb
loopne
outsl
dec
cli
xchg
inc
cltd
pop
icebp
lret
test
xorb
push
lds
mov
jo
add
lret
shl
mov
xchg
sbb
scas
faddl
lcall
jmp
xor
mov
mov
and
cld
fdivl
mov
lods
lahf
add
mov
out
xor
or
dec
xor
mov
scas
ret
push
in
test
sbb
add
cmp
jae
mov
pop
bound
lcall
jmp
mov
pop
jo
gs
inc
daa
mov
gs
xchg
jno
adc
push
int3
pushl
mov
test
xor
adc
dec
sbb
mov
lret
aad
push
in
loopne
outsb
mov
cmpsl
pop
push
cltd
fwait
test
shl
lea
mul
hlt
pop
outsb
xor
fisttps
das
xor
fimull
ret
leave
inc
pop
sbb
dec
xor
ja
push
mov
inc
jne
lahf
inc
test
lret
dec
and
int3
sbb
scas
iret
adc
mov
inc
lret
jae
push
jae
out
addr16
nop
cmpxchg
ret
dec
adc
sub
add
jl
addr16
into
inc
pushf
mov
or
push
out
add
adc
fstpt
icebp
shll
inc
adc
pop
adc
add
xor
and
das
outsl
test
hlt
out
jp
or
push
push
loope
jle
dec
or
push
shrb
or
in
add
xor
rclb
xor
sbb
cmpsb
push
mov
cmp
fstpt
mov
cld
incb
push
xchg
xchg
xchg
pop
mov
loope
sahf
jg
and
test
mov
mov
xchg
enter
dec
aas
testl
ret
cmp
subb
pop
push
jb
mov
stc
cld
pop
push
adc
nop
dec
cli
out
push
jb
cmp
and
divl
lcall
sbb
inc
mov
sbb
ret
loopne
push
das
lock
add
cmpl
loop
sbb
mov
sti
cmc
je
sub
iret
insb
fwait
mov
div
add
dec
stc
xor
cld
int3
inc
stc
mov
xchg
jmp
jbe
mov
lods
xor
mov
ret
add
scas
pop
js
cmp
aad
cmp
push
lods
sub
ss
ja
insb
cld
push
sbb
sub
mov
aas
jns
fstps
xorb
addr16
mov
in
mov
jmp
push
daa
or
mov
xchg
and
push
adc
lds
mov
mov
in
les
sbb
outsb
ret
cmp
lods
and
testl
mov
cmp
jmp
dec
jnp
ret
cs
je
cld
cmp
lea
add
or
push
jp
jg
in
mov
das
dec
cmp
fs
repnz
pop
jbe
sub
jbe
iret
js
cmp
stos
mov
loope
mov
je
and
xchg
inc
daa
stos
ja
xlat
add
add
lock
aad
sub
ds
sbb
test
pop
fsubrl
data16
pop
add
mov
mov
and
imul
xchg
cltd
shrb
xlat
hlt
fiaddl
mov
cmp
mov
add
bnd
pop
inc
movsb
loop
mov
pushf
mov
mov
lret
xchg
loope
lahf
arpl
mov
pop
js
cmp
sahf
inc
arpl
xor
test
mov
pop
pop
addr16
mov
test
dec
and
shlb
lcall
push
mov
rolb
mov
jmp
jnp,pn
mov
inc
stos
push
outsl
and
fsubr
add
ds
and
push
mov
xor
and
mov
jne
mov
cwtl
loop
mov
leave
mov
pop
add
dec
push
jmp
pop
imul
push
xchg
aas
in
dec
aas
dec
jmp
cltd
fwait
outsl
repnz
xchg
es
pop
hlt
push
in
mov
mov
pusha
sbb
sub
stos
in
adc
inc
frstor
cmp
dec
pop
mov
jne
pop
mov
jae
xlat
mov
lock
dec
decb
push
aas
mov
jb
scas
push
jb
test
sti
rcrl
fstpt
dec
and
movsb
mov
adc
push
idivl
fnsave
out
movl
sbb
xor
lahf
mov
fimuls
pop
sbb
loope
fidivl
rcrb
insl
add
mov
sub
mov
push
aam
lcall
pop
jae
sub
mov
fldt
insl
not
inc
sub
xor
xchg
and
ret
sahf
pop
jbe
adc
outsb
iret
push
mov
addr16
mov
repnz
push
jae
mov
lahf
cmc
rorl
cmpsb
into
nop
int3
pop
push
and
add
cs
fadd
repnz
cmp
xchg
adc
pop
test
or
xchg
lcall
mov
mov
stos
cltd
add
or
stos
xchg
xchg
aas
aas
stc
stos
icebp
and
jne
push
das
hlt
cmc
test
add
inc
cmp
lret
out
in
das
xor
negl
push
sbb
sbb
jo
repz
mov
lret
insb
adc
mov
test
xlat
inc
inc
rcrb
or
push
pop
pop
jne
sbb
out
pop
cli
out
mov
push
daa
cmc
push
add
outsb
loopne
pop
pop
fwait
fwait
cmp
mov
cmp
mov
fwait
pusha
push
jne
xlat
xor
andl
shrb
mov
sbb
bound
das
je
pop
jg
or
outsb
fidivrs
inc
push
ds
mov
xor
push
out
mov
pop
inc
pop
jns
imul
xor
out
mov
in
jne
aam
add
inc
mov
sub
xor
adc
lahf
out
inc
clc
int
jbe
rorl
imul
out
outsl
jl
jns
xor
inc
inc
adc
mov
mov
pusha
and
call
cwtl
in
push
subb
int3
lods
or
xchg
mov
jp
push
mov
mov
lock
cmp
mov
cmc
out
or
inc
xor
inc
push
jecxz
pop
js
push
pop
gs
pushf
pop
push
clc
shr
xchg
sahf
cmpsb
lret
mov
rolb
sub
repz
ror
push
ficoms
adc
mov
mov
jnp
push
jp
mov
cmp
popa
stc
mov
mov
xor
mov
push
icebp
inc
adc
js
addr16
imul
and
pop
faddl
jge
lods
addl
adc
sbb
addr16
or
or
sbb
jmp
int
xor
dec
rcl
shlb
mov
mov
and
insb
repnz
mov
pop
cmc
push
mov
dec
jae
xor
xchg
enter
addr16
sbbl
adc
mov
sub
and
stos
das
cltd
fwait
sub
adc
mov
jnp
int
stos
testl
mov
ret
pusha
xchg
out
insb
js
stos
inc
pop
jl
push
in
mov
inc
jno
ja
ffree
mov
orl
mov
pop
add
mov
jno
xor
inc
sbb
fimuls
outsb
mov
sar
mov
mov
adc
pushf
addl
insb
adc
add
or
outsl
mov
jnp
sbb
cltd
jmp
mov
pop
popa
or
cmp
push
addr16
test
dec
mov
xchg
pushf
dec
xchg
fsubl
leave
rcrl
pop
and
inc
push
xchg
and
push
das
sti
repz
repnz
in
mov
xor
add
adc
call
cwtl
jae
repnz
leave
pop
xor
shrl
add
movsb
pop
dec
lods
adc
loope
cli
mov
lods
jle
xchg
outsl
ljmp
cltd
mov
stos
xor
mov
or
dec
popa
je
dec
inc
adc
test
inc
jg
fwait
cs
cs
mov
ljmp
xchg
dec
call
jecxz
in
sub
pop
mov
loop
sbb
inc
pushf
aam
cmp
cmpsb
test
or
xchg
sarl
icebp
loop
xchg
and
add
lret
cli
loop
push
into
cmp
mov
inc
pop
scas
int3
mov
cmp
inc
pusha
sub
lds
mov
mov
popf
gs
ja
adc
or
dec
adc
inc
mov
mov
push
loop
ret
push
lods
stc
bound
mov
mov
rolb
push
mov
and
pop
or
adc
and
shl
mov
xchg
aaa
leave
pop
sbb
dec
fucomi
add
and
xchg
popa
pop
xor
mov
out
dec
xchg
ljmp
xchg
add
or
scas
movsl
test
repnz
cli
es
mov
sub
gs
sbb
cmp
movsl
pop
loope
lret
mov
ret
sub
orl
lahf
mov
xor
aad
lret
mov
dec
sar
outsl
in
or
daa
insl
push
lret
or
pop
fsubl
xchg
and
fs
fisubrl
push
xorb
pop
mov
xchg
mov
popf
mov
mov
jae
mov
stos
mov
sarb
mov
mov
js
lea
inc
add
lcall
and
gs
inc
fisttpl
out
push
pop
mov
jle
sub
mov
and
orl
mov
or
loope
mov
in
cmp
shlb
sbb
fstpt
lock
add
hlt
scas
mov
mov
push
jecxz
out
pop
jae
sub
xor
jecxz
pop
jg
lret
xor
xchg
dec
inc
push
inc
pop
add
lcall
lcall
fstl
xchg
movsb
fnsetpm(287
nop
lcall
scas
jb
jge
xchg
xchg
in
mov
adc
adc
dec
fidivrs
repnz
imul
xor
leave
rcr
and
fsubr
mov
enter
sub
std
mov
adc
xor
jle
sub
add
mov
cli
in
cmp
test
je
mov
aaa
call
ret
jnp
cmpl
adc
push
adc
stos
xor
repz
es
inc
sub
jne
in
or
lcall
aam
sub
or
mov
dec
inc
fsubs
and
cmp
sub
jno
aas
xor
dec
sub
push
mov
lret
xorb
adc
pop
cltd
push
pushf
popw
stos
bound
scas
aad
cmp
fcom
adc
pop
fucomi
inc
das
xor
shll
and
jmp
and
lcall
out
leave
int
jno
mov
out
and
inc
dec
pop
and
push
outsl
das
sahf
aas
fcoml
aas
xor
int
call
inc
sbb
jnp
in
dec
enter
xchg
xor
pop
scas
scas
inc
mov
sub
push
mov
adc
insl
cmpsl
pop
ljmp
in
cmp
push
scas
mov
push
or
xchg
jmp
imul
movsb
dec
xor
and
imul
push
mov
cwtl
sub
xchg
in
ret
add
sarl
pop
pop
inc
imull
cmpsb
iret
push
mov
std
std
xor
add
jecxz
into
xchg
add
adc
aas
mov
cli
into
dec
xor
leave
notb
adc
jnp
arpl
cvtps2pd
xor
inc
push
inc
je
icebp
pusha
jbe
call
andl
sbb
or
mov
loopne
test
arpl
pop
adcb
dec
scas
jb
jns
jns
hlt
pushf
lds
or
mov
mov
sub
les
enter
mov
vsqrtpd
arpl
pop
xchg
insb
inc
jp
mov
jle
mov
aam
aas
push
mov
jg
addb
dec
cmp
jne
inc
pop
lcall
addr16
mov
loop
movsb
inc
inc
out
add
cmp
pop
xor
push
popa
in
pusha
insb
xchg
dec
gs
pop
pushf
mov
mov
pusha
shl
pop
push
add
cltd
call
mov
movsl
enter
mov
jl
xorl
shlb
fnstcw
shr
push
rolb
std
shll
pop
stc
scas
dec
and
and
mov
xlat
nop
adc
or
fwait
je
test
out
inc
sbb
push
cs
aaa
dec
adcl
xlat
xchg
lret
jno
call
call
stos
js
mov
movsl
pop
mov
out
sub
xlat
jno
push
jo
pop
jo
test
sbb
sub
pop
sti
or
cmp
mov
sub
push
sub
aad
iret
nop
repz
jns
imul
mov
sahf
negb
nop
and
sbbb
xorl
pop
in
lahf
mov
pop
push
pop
xchg
push
stc
lods
mov
test
outsb
pop
xchg
mov
mov
jmp
push
mov
push
rcll
bound
xchg
and
enter
std
ljmp
sub
rcl
test
and
pop
mov
test
fs
xchg
push
cmp
outsl
roll
lret
insl
cltd
sub
and
bnd
sbb
aad
jno
ret
add
pop
or
lods
mov
fbld
sbb
insb
cmp
mov
out
add
or
push
and
sub
xor
pop
cmc
fwait
xor
aad
adc
aad
jp
sbb
fmull
lods
in
test
jmp
sub
mov
stos
insl
pop
cld
mov
mov
fadd
xchg
jo
or
cmp
inc
fimull
or
add
mov
imul
and
mov
pusha
repnz
mov
sahf
push
scas
push
pop
loope
mov
lcall
or
aam
pop
and
xchg
lret
adc
stos
mov
fiadds
imul
lret
sbb
ja
sub
sbb
push
ljmp
mov
jbe
xor
push
and
cmp
xor
dec
mov
mov
dec
lret
popa
xchg
and
and
push
mov
xchg
pop
hlt
sbb
leave
and
jno
out
sub
cmp
add
pop
xchg
mov
xor
mov
jno
sarl
rorb
pop
std
mov
ljmp
mov
jnp
int
mov
adc
sub
popa
add
dec
pop
aam
pop
fs
shrl
dec
or
mov
test
fidivrs
fldt
push
imul
je
fsubrl
jno
in
inc
push
bound
je
call
sbb
aam
testb
push
enter
add
cld
dec
adc
stos
fs
mov
or
cmp
jge
out
sub
xor
inc
out
sti
ret
cs
out
pop
and
mov
or
jb
sbb
pop
fcoml
and
mov
jb
jns
mov
repz
lods
movsb
mov
sub
or
aaa
or
xor
push
add
mov
or
cwtl
mov
aas
or
mov
dec
xchg
xor
insb
out
adc
cmp
dec
mov
xlat
fidivs
inc
repz
pop
and
aam
push
arpl
fimuls
and
lock
push
imul
test
pop
shll
xchg
jns
and
push
leave
movsl
pop
lret
add
push
jp
test
imul
leave
dec
jg
push
or
cmpsb
add
loopne
ficoml
add
orl
lea
and
dec
sbb
mov
adc
das
sub
aaa
sti
add
pop
sub
push
lcall
das
cltd
mov
sbb
sub
jo
out
mov
loope
adc
xchg
mov
stc
xchg
bnd
pop
adc
cltd
jp
incl
and
js
or
cld
mov
jecxz
jbe
or
popa
scas
inc
push
fs
lret
insl
mov
dec
int3
mulb
stc
and
in
into
pop
jae
cs
loop
pop
aam
insl
inc
push
adc
aad
cmpsb
js
inc
cmp
mov
ret
stos
xchg
cwtl
das
mov
inc
cmp
cmpsl
xor
outsb
icebp
jecxz
mov
pushf
addr16
adc
cmpsl
inc
push
cmp
enter
push
xchg
pop
cwtl
cli
call
jmp
repnz
in
rorl
outsl
push
jle
sbb
inc
xchg
cwtl
add
aad
inc
pop
rorl
ljmp
fwait
mov
push
adc
sarb
sbb
std
sub
inc
popf
rcll
addps
cltd
mov
fs
adc
ret
dec
inc
add
negl
popa
fwait
push
xor
idivl
jbe
les
dec
xchg
mov
loope
lret
movsl
dec
popf
sub
lock
mov
mov
in
xor
mov
or
ret
jge
xor
push
sbb
jbe
or
int3
adc
ret
push
pusha
out
cmp
mov
pop
shll
daa
add
call
xchg
test
mov
int
lds
mov
pop
push
fdivrs
adc
cmp
fcmovnu
scas
cmp
dec
mov
rcr
fildl
aas
stc
addr16
icebp
jmp
dec
adc
mov
aam
test
mov
int
and
xorl
lret
call
add
push
aam
lea
pop
mov
les
mov
cwtl
loopew
fdivrs
add
push
into
xchg
push
push
sbb
in
lods
test
mov
fs
repz
pop
mov
daa
ret
xchg
cmp
cmp
add
push
pop
cmp
sahf
mov
xor
cmp
mov
xor
jecxz
cmc
mov
xchg
pop
in
or
test
aas
es
nop
cltd
sbb
movsb
xchg
andl
jno
lcall
cwtl
out
push
lret
leave
pop
andb
shrl
jp
and
daa
idivb
sbb
adc
pop
js
adc
mov
mov
pushf
sti
stos
in
mov
addr16
mov
push
jne
push
orb
push
mov
daa
push
inc
dec
bound
sbb
jp
and
push
int
fdivrl
mov
inc
sbb
and
fmulp
nop
dec
jl
mov
jbe
push
xlat
clc
push
inc
int
movsb
fstpl
repnz
clc
scas
mov
push
cmp
xor
cmpsl
in
das
sbb
cmovae
mov
adc
mov
xor
sub
je
aaa
xchg
lea
pop
cwtl
popa
cmp
adc
cmp
notb
outsb
sub
js
xor
dec
dec
pushf
test
dec
cltd
into
adc
call
xor
popa
push
sbb
lods
pop
jbe
push
mov
jle
dec
mov
mov
ret
mov
fidivs
lret
add
inc
fstpl
jns
sub
test
push
out
addr16
push
pop
rcrb
mulb
mov
loopne
ret
mov
xchg
xchg
sbb
pop
ret
dec
mov
mov
inc
jb
pop
pop
enter
loop
lock
inc
dec
mov
insl
stos
insl
in
pop
or
int
pop
cltd
inc
loopne
rorl
cmc
arpl
gs
inc
jge
cvttps2pi
in
push
mov
add
lock
test
sti
shl
mov
inc
cmp
fistpl
rolb
out
cld
lods
shrl
repz
das
cmc
push
jo
imul
out
or
shl
mov
add
inc
fstl
cmp
aas
inc
pop
cmp
test
jns
mov
sbb
pop
jle
dec
push
out
push
std
cwtl
adc
add
scas
cmp
jno
xor
shlb
test
test
sub
stos
pusha
or
lods
mov
lcall
adc
sbb
adc
loope
or
repz
push
shrl
int3
lret
pusha
test
leave
ljmp
stos
cmc
in
mov
xor
dec
cs
xchg
pop
sub
mov
inc
pop
add
test
fsubl
ret
cwtl
ss
cmpsb
jae
test
popf
mov
jmp
fidivrs
enter
mov
mov
rorl
mov
cwtl
mov
iret
rolb
dec
fwait
adcb
lcall
sub
dec
push
xchg
movsl
sbb
sbb
cmpsb
fwait
jecxz
sbb
inc
lea
jb
cmp
sbb
push
jmpw
jnp
mov
inc
inc
shrl
add
push
fimull
loopne
pop
push
xor
scas
jbe
cmp
pop
push
push
fwait
inc
adc
mov
repnz
inc
pop
pushf
les
loope
loope
xor
add
pop
adc
sub
sub
xlat
pop
dec
cs
xchg
sub
mov
mov
xchg
cmp
stos
xchg
push
roll
dec
roll
mov
jae
js
and
out
dec
push
and
mov
pop
mov
mov
mov
add
inc
add
push
jmp
or
out
addb
cmp
ds
int3
aad
nop
filds
divb
xor
popa
sub
ret
xchg
cmp
imul
push
mov
test
push
pop
xor
or
mov
cmc
jecxz
xchg
bound
adc
pop
mov
aas
push
sarl
std
jecxz
adc
jb
mov
fwait
adc
jae
aam
cld
sbb
pop
int3
sbb
inc
icebp
or
insb
mov
dec
js
mov
lds
ss
imul
leave
inc
mov
push
mov
cmp
outsl
loop
cmp
add
mov
in
fdiv
je
inc
pop
imul
pop
test
int3
jmp
mov
adc
pop
pop
jp
inc
and
inc
pop
pop
mov
inc
jmp
test
mov
jle
in
xor
pop
mov
xor
jne
dec
xorl
loopne
fdivrl
mov
jne
and
data16
push
js
ret
daa
xchg
jo
test
stc
add
mov
subb
xchg
int
dec
xor
subl
sub
sbb
es
add
adc
pop
sbb
fisttpl
or
jbe
adc
dec
fidivrs
out
xor
pop
adc
cmp
adc
cmpsl
call
lcall
fs
adc
imul
ljmp
inc
cmp
fisttps
jecxz
xor
sbb
outsl
movsb
std
lret
push
aas
inc
push
sbb
jl
xor
es
and
inc
outsl
jnp
mov
add
push
pusha
add
mov
pushf
xor
imul
add
sar
add
cmpl
into
add
int3
jnp
sbb
pop
adcl
pop
pushf
or
repnz
pop
icebp
clc
cmpsb
pop
mov
lahf
out
lods
push
gs
sbb
cmp
fmul
xor
mov
aas
jns
xlat
add
sub
mov
outsl
popf
xchg
lock
cwtl
into
js
xchg
dec
fwait
hlt
movb
pop
jb
jl
movsb
in
xchg
and
cmp
fdivrl
add
mov
inc
pushf
pop
cmp
push
orl
xchg
cli
push
int3
ficoms
jle
scas
clc
sbb
adc
dec
outsl
jmp
je
out
ljmp
and
loope
push
mov
aas
ja
push
es
in
push
mov
cmp
inc
sbb
jnp
pop
sbb
jge
cltd
sbb
mull
inc
mov
bound
mov
ret
xchg
test
mov
jb
xlat
inc
mov
sub
mov
ret
mov
push
ss
fildl
aad
loopne
pop
stc
pop
push
mov
push
mov
orb
fmul
xchg
mov
repnz
aam
insb
movsl
xor
or
push
mov
or
lea
add
jno
mov
mov
jle
mov
xchg
cmp
cs
pop
aas
loop
test
cmpsb
enter
cmp
jge
sti
lret
daa
leave
out
rcrl
es
sub
iret
std
bound
adc
pop
add
fidivrs
fcmovnu
pop
mov
das
jae
mov
push
repnz
or
or
cmc
push
ds
pop
scas
dec
repz
inc
dec
test
lods
or
mov
mov
mov
out
leave
and
sub
ljmp
gs
and
shll
test
js
outsb
mov
push
pushl
push
mov
sbb
fs
mul
gs
xorl
push
out
sub
push
xchg
adc
xchg
shlb
ficoml
mov
imull
adc
sahf
popa
not
xchg
pusha
aas
leave
movsb
xchg
dec
mov
adc
push
sbb
int3
lret
pop
mov
or
and
fidivrl
sbb
loopne
scas
mov
in
int
scas
dec
xlat
dec
push
loopne
jae
in
cmp
xor
lds
outsb
mov
addr16
repz
dec
lea
lret
mov
fwait
hlt
xlat
int3
adc
insb
out
mov
cmc
jecxz
dec
sbb
sahf
jg
jmp
jle
imul
out
jecxz
xchg
lcall
scas
iret
pop
xchg
aam
jne
pop
adc
dec
fildll
in
xor
shll
stos
dec
jle
into
aas
imul
mov
test
dec
cmp
jbe
jns
mov
test
jo
shlb
ret
push
mov
dec
add
mov
scas
clc
cmpsb
sub
push
cmp
xchg
mov
xchg
sbb
movsl
push
cld
std
aaa
mov
out
adc
add
xchg
push
imul
ret
xchg
sbb
dec
lock
out
or
pushf
sbb
add
imul
lods
mov
mov
pop
enter
jo
and
pop
xlat
xchg
fldenv
inc
xor
adc
movsb
fimull
and
out
sbb
jmp
adc
das
xchg
mov
sbbb
and
push
pop
jae
out
insl
shll
xor
xor
sbb
ja
mov
push
int3
clc
mov
js
push
jmp
lods
fnstcw
or
jg
icebp
xor
jo
cmp
es
repnz
pusha
inc
mov
mov
test
in
push
test
outsb
into
or
call
xor
mov
mov
lret
cvtps2pi
push
push
loopne
xor
loop
sahf
rorl
rcr
ret
lods
sub
mov
xchg
sbb
outsb
ss
pushf
pop
jb
dec
add
or
outsb
sub
pop
sbb
dec
jb
popl
lods
jge
in
das
mov
xchg
rcl
ja
fnop
xchg
ljmp
jne
push
xchg
and
mov
adc
lret
xlat
push
xchg
inc
pop
mov
sbb
movsb
rclb
cmp
push
and
shl
lahf
punpcklbw
adc
adc
xor
cli
cld
cmpsb
dec
out
adc
pop
repz
sub
pop
movsb
xchg
jnp,pn
lret
inc
sbb
fsubrl
jge
push
repnz
mov
out
and
pop
inc
dec
imull
bnd
xchg
jg
sbb
add
pushf
cli
inc
insb
push
mov
orl
dec
sbb
loop
push
pusha
and
out
fwait
lock
ss
ljmp
adc
sub
lret
cmp
jle
sbbl
push
aaa
push
jo
and
iret
or
sbb
and
je
dec
popf
cmp
aas
fstps
xlat
inc
orl
inc
inc
nop
outsl
repz
cmc
inc
fs
andb
push
es
jbe
pop
in
cmp
cpuid
in
xor
stc
fcoml
pop
dec
push
jmp
inc
hlt
icebp
aaa
jnp
dec
add
and
push
int
jp
inc
xchg
fldt
in
xchg
mov
and
outsl
mov
or
jge
fldenv
pop
out
inc
mov
icebp
fnstcw
adc
ja
jge
ret
imul
cs
nop
enter
repz
shrl
aam
sub
inc
lods
cmp
fcmovnu
push
testb
sub
fcoms
fidivl
adc
push
cli
xchg
pop
addb
dec
dec
aad
push
nop
test
push
sarl
lods
mov
mov
push
inc
jle
fildl
sbb
jb
lcall
xor
andw
inc
jne
push
cs
mov
xchg
jg
push
mov
pop
loop
or
or
and
jne
lods
jg
cmp
fwait
push
aad
sbb
push
push
imul
dec
sbb
loopne
cmpsl
in
jp
pusha
jp
jno
loope
mov
movsb
and
adc
ljmp
pop
in
mov
and
adc
scas
xor
pop
divb
cmp
repnz
stos
push
lahf
cwtl
and
notb
popf
aaa
add
jl
dec
fimull
cmp
hlt
icebp
dec
rorb
fs
in
sub
adc
or
js
shl
adc
call
jmp
mov
push
popa
mov
pushf
sub
outsl
mov
sbb
inc
adc
cltd
ss
mov
xorl
aas
jno
int
fwait
mov
les
pop
leave
mov
mov
mov
icebp
pop
push
stc
lock
cltd
daa
push
or
xchg
int3
pop
dec
jge
and
leave
xor
sub
add
ror
pop
fs
stos
mov
xchg
outsb
movsl
xchg
pop
xor
or
sbb
xchg
pop
mov
movsl
movsl
sarl
dec
data16
cmp
push
inc
sbb
mov
inc
mov
dec
lds
xor
out
cmp
sti
iret
mov
popf
faddl
cmpsl
cmp
sbb
in
jb
adc
sub
jmp
xor
xchg
lods
sahf
pop
jo
mov
stc
mov
iret
fs
sbb
ret
add
loope
repz
cmp
popf
pop
out
push
mull
inc
call
mov
test
lea
stos
mov
mov
jl
repnz
mov
dec
fbstp
jo
cmp
gs
movsb
dec
mov
push
mov
pop
fldt
adc
mov
add
adc
sub
and
mov
std
sbb
test
rol
sbb
mov
fistpll
add
lods
sti
ljmp
cmpsl
adc
insl
insl
inc
add
dec
xchg
inc
hlt
insl
push
mov
push
jns
sahf
insb
cmpsb
adc
jl
inc
insb
rorl
test
mov
pop
inc
inc
rcr
jns
out
stc
es
inc
adc
ds
pop
dec
and
pop
mov
shr
mov
rorl
xchg
sbb
inc
sub
push
ss
arpl
ljmp
lea
loopne
jns
lds
cmp
sbb
insb
cld
pop
push
fidivrs
cmp
xchg
sbb
enter
lock
dec
out
pop
and
pop
lcall
push
lret
nop
sub
cmpsl
cmpsl
dec
cld
fwait
iret
movsb
xor
loope
cltd
mov
pusha
jl
xlat
les
pop
xor
mov
out
lahf
enter
sub
adc
push
xorb
dec
adc
pop
stos
push
sub
cmp
adc
dec
mov
cmp
jno
add
mov
adc
inc
in
fisubrl
mov
adc
sbb
pop
jmp
xorb
cli
xchg
cmc
stos
nop
into
fadds
lahf
iret
pmaxub
mov
scas
sbb
fcoml
xor
es
cmp
int
popf
jmp
push
add
in
add
into
inc
xlat
mov
in
in
xor
xor
rol
leave
sahf
cs
pop
mov
es
lock
pop
hlt
fildll
sbb
and
notb
outsl
addb
test
pushf
xor
push
rol
ret
pop
push
ljmp
add
aam
fs
or
pop
sub
adc
jl
add
gs
rcr
and
aaa
mov
adc
dec
pop
jl
testb
mov
loop
fadd
mov
cmc
nop
cmp
xchg
xchg
dec
fs
sub
dec
in
popf
mov
adc
pop
xor
add
fs
pusha
xor
andl
cltd
mov
mov
xchg
lahf
fbld
outsb
lret
je
rclb
mov
jno
xor
jb
xchg
adc
sbb
xchg
push
and
gs
jg
das
push
add
fs
roll
push
ds
dec
cs
sub
xchg
push
hlt
mov
xchg
sbb
jae
mov
lods
orl
imul
or
cmp
jge
pop
jecxz
sbb
xor
and
cld
outsb
xor
sbb
jb
cmc
mov
mov
mov
aaa
insl
je
and
jl
xor
add
loop
aad
xor
insb
bound
pop
cmpb
je
test
dec
push
mov
cli
insb
dec
lds
fisubs
daa
test
shll
stc
mov
pavgb
and
cmc
repnz
out
aad
lods
ljmp
incb
sub
pop
ds
and
and
aam
sahf
adc
xor
or
mov
lret
fstpt
shl
mov
cmp
mov
outsb
ror
jne
dec
mov
iret
int
mov
stos
loop
sbb
jns
fstp
popf
fwait
into
ret
cmp
sub
mov
fucomip
and
inc
out
pop
int3
jbe
add
test
mov
repz
cmp
roll
in
or
out
bound
lock
mov
pushf
les
repnz
push
push
aam
mov
sub
cmpsb
push
or
xchg
and
pop
sti
push
xor
pop
sarb
cmp
shlb
pop
add
adc
or
push
mov
pop
mov
pusha
xchg
sbb
dec
mov
add
push
stos
lea
jge
xor
lahf
ficoml
xor
xchg
inc
cmp
xchg
sub
ficompl
out
mov
orl
in
ljmp
insb
popf
mov
inc
cwtl
rolb
dec
scas
xchg
xlat
js
mov
in
pop
mov
add
punpckhdq
xchg
sub
pop
enter
jno
jg
jno
add
ret
adc
and
mov
les
add
adcb
mov
das
out
iret
sbb
jno
in
popa
lock
push
gs
outsb
xchg
popf
outsl
int
fimuls
or
dec
mov
jno
ret
push
add
insb
lcall
pop
dec
rclb
adc
add
fsubrs
insl
out
pandn
mov
jmp
add
add
ffree
mov
pop
add
pop
rorb
rorl
sub
cli
inc
xchg
repz
iret
sub
jae
fsin
ss
mov
sub
aad
js
mov
jo
hlt
mov
push
mov
bound
stc
push
into
ljmp
loopne
inc
or
int3
jns
mov
xor
or
fcompl
mov
call
push
mov
or
cmp
adc
repnz
out
push
xchg
stos
pop
sbbb
inc
testb
add
sbb
int3
rorb
aam
push
or
mov
mov
xlat
inc
lock
icebp
or
loop
pop
add
imul
mov
inc
adc
inc
pop
stc
or
in
cmp
mov
fmuls
sub
pop
sbb
sbb
lods
or
and
xchg
jae
movsl
xchg
out
test
jne
mov
xor
mov
aas
mov
dec
and
xor
mov
pop
hlt
rcrb
test
jae,pt
idivb
and
push
lcall
fucomp
jl
and
inc
stc
or
mov
inc
cmp
dec
sbb
mov
sbb
mov
mov
pushf
fisttps
lods
mov
and
jne
pop
lcall
out
call
lods
adc
jge
dec
lods
jecxz
das
test
push
mov
loop
sarb
push
adc
inc
sti
in
mov
dec
adcb
add
pop
inc
mov
daa
jns
sbb
ret
lds
xchg
and
hlt
and
test
mov
test
pusha
ja
aam
fsubrl
clc
outsb
fdivl
fcoms
addb
dec
mov
jle
push
orl
arpl
push
dec
mov
nop
aad
lahf
dec
mov
int
pusha
pop
sbb
add
pusha
inc
fwait
sbbb
stos
and
lds
dec
scas
push
movsl
inc
stc
jecxz
jno
push
mov
push
in
fdivrp
movsb
sbb
notb
jg
and
adcb
push
or
mov
shlb
mov
jp
and
stos
xor
mov
sbb
pushf
mov
out
and
or
cli
fisubrl
sub
xor
jno
aas
dec
xchg
ja
clc
cmp
insl
clc
xlat
xor
inc
and
jle
bound
sbb
outsl
insl
ret
xor
daa
outsl
dec
std
mov
and
xchg
adc
adc
fcomps
popf
frstor
int
dec
in
ja
ss
idiv
jl
adc
sbb
fs
int3
adc
or
js
inc
movsl
jecxz
xchg
xchg
jb
mov
fimuls
xor
fisubs
pop
daa
jae
cmp
or
and
fstpt
shrb
sti
sbb
sbb
pop
or
repnz
orl
and
shll
mulb
stos
mov
dec
fnstsw
outsl
mov
test
cmp
scas
push
mov
sub
lret
push
jecxz
aad
mov
ja
inc
inc
inc
mov
sahf
jnp
mov
xchg
dec
mov
push
sub
mov
push
or
jo
loope
icebp
lcall
push
imul
inc
cmp
sub
roll
in
push
stc
test
pop
adc
aas
mov
test
push
xchg
ss
je
mov
cmpsl
insb
pop
cmc
cmp
push
or
dec
xor
push
cmp
rcr
fisttps
dec
sub
xor
daa
ja
mov
mov
inc
mov
or
sbb
out
ficompl
push
push
lods
shlb
mov
inc
aaa
and
xchg
push
or
cmp
stos
cmp
fnsave
and
sub
lcall
movsl
fwait
lret
add
adc
and
cmpsb
sbb
push
ror
pushf
stc
mov
int
jle
push
loopne
out
inc
jno
subl
sti
fistpl
mov
cmp
repnz
xor
aaa
inc
or
ret
addr16
call
inc
insl
cwtl
data16
sbb
dec
pop
les
pop
cli
test
cltd
mov
fs
pop
and
addb
stc
lahf
push
test
shrl
rcrl
ja
pushf
cmp
xor
sbb
mov
sbb
xchg
and
mov
push
imul
repz
je
adc
mov
in
add
add
rorb
inc
pop
rcr
adc
in
stc
lcall
mov
das
enter
push
push
lahf
test
icebp
cmp
pop
and
pop
inc
mov
adc
insl
lds
mov
outsb
or
lret
cs
cs
test
inc
movsl
pop
movsl
inc
cmpl
dec
dec
cmc
and
in
stc
adc
xchg
or
push
jmp
mov
pop
mov
dec
stc
pop
or
mov
sar
pop
adc
gs
pusha
mov
dec
shrb
out
mov
jnp
les
xor
out
orl
adc
fildl
xlat
pop
cmp
mov
xlat
ljmp
rcl
gs
or
in
sub
lcall
mov
cmc
mov
ljmp
push
pop
lea
leave
call
aas
stos
sbb
push
mov
adc
xor
mov
nop
sub
dec
inc
mov
sbb
dec
insl
pop
or
fisubrs
jb
loope
sarl
pop
jo
stc
rcrl
cmp
je
lock
and
in
xor
push
pop
nop
dec
aaa
cmp
fcomps
push
imul
orl
sbb
adc
mov
push
dec
mov
fcoms
icebp
adc
sar
mov
loopne
cmp
and
adc
sbb
cmpsb
push
cld
push
cmpsl
ret
mov
mov
lods
idivb
lcall
pop
in
sub
mov
stos
push
sbbl
jmp
pop
sbb
fidivrl
cli
mov
mov
xor
xor
sub
in
add
inc
adc
aas
add
and
sub
add
push
add
insb
cli
std
mov
cmp
mov
xor
push
repz
loopne
aam
hlt
mov
cmpsl
fldenv
out
out
icebp
or
lods
push
cmp
mov
int3
dec
stc
mov
xlat
rclb
adc
mov
sarb
inc
dec
xchg
popaw
js
loop
cmp
and
repz
pop
or
imul
sbb
out
pop
movsl
jno
pop
cs
cmc
fnstcw
dec
xor
dec
outsl
mov
cmpsl
es
stc
loopne
std
es
cmp
cmpxchg
movl
sub
repz
dec
jne
jg
repz
push
mov
or
cwtl
divl
ficoms
cld
dec
or
inc
arpl
sahf
leave
or
xchg
xor
jmp
je
ja
jno
in
sti
add
je
je
jg
hlt
movsl
pop
or
jecxz
push
ret
jae
jne
stos
mov
negb
dec
mov
leave
and
or
in
ss
das
cmpl
fnstenv
mov
repnz
repnz
stc
add
jb
cwtl
mov
mov
ja
xor
call
dec
sbb
dec
push
push
test
xchg
dec
jae
lcall
ret
mov
xchg
xchg
repz
dec
sahf
xor
sub
xchg
jl
cpuid
sbb
cmp
lahf
sub
inc
sub
xor
cmp
push
jb
xlat
in
hlt
inc
dec
int3
cmpsl
into
mov
cli
mov
scas
lret
insb
and
dec
fisttps
mov
outsl
pop
xchg
lea
vpsubw
push
jl
inc
mov
pop
mov
mov
xor
jmp
mov
inc
jecxz
jno
nop
ss
gs
int3
or
test
mov
mov
mov
enter
and
fisttps
sub
push
cld
xchg
movsb
daa
pop
mov
mov
sarb
push
jge
jns
aam
filds
fstp
lods
mov
sbb
cmc
push
popa
add
sub
sbb
xchg
popf
mov
dec
ds
fcmove
push
xor
mov
enter
pop
in
inc
mov
xchg
add
jno
sbb
lret
push
cmp
jl
dec
loopne
mov
jecxz
jmp
mov
pop
mov
lret
out
ss
sub
lods
fidivrl
xchg
mov
cmpsl
sbb
mov
icebp
adc
shll
mov
imul
lods
xor
insb
aam
sub
daa
inc
adc
push
movsb
adc
mov
sub
shr
lcall
pop
or
popa
fsubrs
push
push
inc
sbb
xchg
add
and
arpl
in
outsl
or
jg
sub
idivl
and
loope
fs
mov
xor
adcb
cmpsb
xlat
pop
out
mov
cld
adcl
popa
shrb
add
pushf
repz
cltd
dec
daa
xchg
dec
sbb
mov
or
sarb
pop
or
pop
movsl
lret
xorb
aaa
das
in
mov
push
lock
add
rcrl
fnsave
paddb
test
dec
aas
mov
stc
jle
add
jne
push
dec
push
push
or
sbb
pop
push
adc
cmp
push
sbb
push
scas
ret
out
ljmp
cltd
xchg
pop
out
je
xchg
in
sub
inc
lods
xlat
es
dec
jno
or
mov
incl
pop
xor
lret
gs
push
mov
sub
push
je
pop
scas
cmp
jle
ret
mov
call
negb
inc
sub
ljmp
lcall
call
stc
aaa
add
imul
jbe
dec
sub
imul
mov
dec
js
mov
test
mov
fildl
in
jae
ja
decb
insb
out
add
rcll
sub
sahf
mov
sbb
pop
sti
pop
scas
stos
imul
in
lahf
icebp
je
out
mov
jno
js
push
jmp
cmp
xchg
push
clc
add
dec
sub
pop
push
cmp
loopne
fwait
adc
and
inc
or
cmp
sti
aas
mov
jnp
adc
inc
push
mov
sbb
outsb
mov
les
notb
ja
mov
std
aam
or
dec
mov
push
or
fcompl
clc
in
int3
cmp
aam
sub
outsb
jbe
push
pop
cmpsl
testb
fs
fwait
dec
pop
lods
outsb
jae
in
pop
cmp
dec
xorl
into
xchg
mov
cmp
sub
enter
mov
clc
sahf
sub
es
inc
mov
xchg
push
fldenv
sbb
mov
mov
inc
sub
mov
out
addl
lret
push
aad
lcall
xor
dec
jb
fsubrp
mov
cmp
aas
shll
xorb
push
sub
icebp
cltd
adc
push
jmp
inc
leave
mov
pop
mov
sbb
sub
pop
shll
mov
lcall
sub
push
mov
add
mov
pop
aas
and
jns
clc
shrb
ljmp
hlt
pop
mov
push
lods
decb
shlb
add
lods
jle
xor
mov
inc
clc
leave
cwtl
or
push
inc
add
or
jp
inc
shl
cmp
fidivl
out
adc
pusha
mov
sbb
and
ret
cmp
lods
ficoms
mov
cmp
insb
lahf
ds
mov
mov
aas
push
add
xor
leave
fmull
inc
or
iret
mov
sbb
sub
add
and
in
sbb
test
jae
or
mov
sbb
and
add
cli
cs
es
daa
icebp
sub
out
jmp
or
cmp
inc
inc
sbb
pop
push
xchg
jnp
loopne
cwtl
jg
push
imul
out
ror
aad
mov
leave
test
imul
dec
sti
daa
dec
inc
dec
arpl
jge
sti
int3
mov
add
mov
lock
pop
pop
popa
addr16
fwait
pop
xchg
xchg
mov
jl
cmp
add
mov
fisubl
xor
pop
in
xor
repnz
add
call
lahf
sbb
inc
test
shlb
mov
cmpsl
js
pop
xchg
sbb
add
dec
fnstsw
jmp
mov
fs
cmp
subb
add
adcl
push
mov
mov
outsl
sarb
pop
std
mov
xchg
push
out
xlat
test
lea
jb
jno
loop
lds
mov
fxch
xlat
imul
ret
sub
sbb
addr16
add
jecxz
pop
xor
sbb
aad
stos
sub
xor
mov
loop
cs
les
add
mov
inc
mov
shl
xchg
and
add
sub
mov
pop
jecxz
cmc
dec
ror
adc
sub
data16
adcb
pop
fnsave
cmp
xlat
repnz
addl
pop
push
and
js
xor
pop
xchg
leave
nop
aas
stc
adc
jl
inc
ret
rcll
enter
pop
popl
push
sbb
and
jmp
movsl
cmp
pusha
shl
call
cmp
sbb
mov
dec
cmpsb
or
push
popa
shrl
cmp
pop
xchg
xor
inc
hlt
pop
pushf
pop
and
push
imul
sbb
insb
and
xor
mov
inc
dec
loop
lret
fisttpll
rcrb
test
mov
insb
dec
sbb
mov
mov
adc
push
das
call
mov
add
pop
bswap
inc
xchg
out
mov
in
mov
pop
xchg
or
xchg
subb
test
mov
xor
mov
shl
xor
inc
lcall
leave
pop
cmpsl
or
mov
out
mov
insb
dec
fsubrs
inc
adc
jb
xchg
or
sub
in
jb
inc
aam
and
pop
mov
aas
roll
in
dec
iret
hlt
mov
mov
jle
clc
arpl
dec
mov
jge
aad
cmpsl
push
int
xor
mov
xor
out
aaa
shll
mov
jnp
jecxz
dec
das
and
sbb
out
clc
cmp
cmp
out
daa
std
push
adc
cmp
mov
outsl
aas
jmp
push
adc
sub
stos
add
insb
icebp
lcall
mov
ret
mov
in
jl
push
insb
aas
lds
fidivrs
outsb
mov
pop
xor
xchg
sub
mov
sahf
out
sbb
out
inc
lret
test
mov
inc
je
mov
sub
xchg
mov
cmc
xor
aas
outsb
out
clc
shr
mov
or
inc
and
enter
xor
es
xchg
lods
inc
rclb
es
leave
fs
jp
xor
push
pushf
and
xchg
add
fstpl
inc
movsb
sbb
lds
ss
and
ficomps
mov
imul
sbb
enter
push
adc
outsl
out
test
lds
fwait
dec
adc
xor
xchg
rol
cmp
pop
add
cmc
outsb
cmpsl
inc
add
cmp
scas
xchg
mov
mov
jb
les
data16
in
insl
imul
out
fs
pop
arpl
mov
cwtl
bound
testb
dec
test
add
cs
push
repnz
sub
arpl
sbb
mov
mov
push
fwait
jbe
inc
pop
mov
cmp
dec
xor
push
inc
in
pusha
shl
adc
mov
xor
test
push
jae
xchg
sarl
movsb
mov
mov
xlat
xor
and
and
rolb
cmp
loope
lock
test
mov
lret
stos
add
push
pop
or
popf
les
xchg
es
dec
lods
inc
mov
xor
push
jge
cmp
out
imul
xor
pop
or
adc
dec
mov
jmp
jle
adc
jge
insb
ds
push
jnp
into
pop
aas
ret
jg
sbb
or
sahf
les
xlat
rorb
ja
rorb
and
iret
test
test
jg
jnp
sahf
push
jp
cmp
adc
roll
pop
ret
jg
pop
cwtl
enter
mov
das
pop
sbb
mov
sahf
daa
xlat
leave
rcrl
aaa
push
mov
lret
mov
dec
mov
sbb
aas
scas
mov
mov
jae
lret
dec
cli
ret
pop
in
and
jo
lock
scas
sub
cmp
cmovs
insl
test
notb
add
add
mov
stos
push
ret
mov
out
mov
push
and
rolb
jb
add
add
pop
adc
data16
add
addr16
hlt
ret
aas
loopne
jg
sbb
mov
fsubp
stos
push
fxch
xchg
ljmp
cmpsl
movntq
dec
in
mov
or
jb
into
idivb
inc
add
enter
pop
int3
adc
mov
es
mov
xchg
xor
mov
mov
inc
addl
mov
fists
xchg
or
add
sub
out
sbb
add
roll
addb
mov
out
mov
sub
jns
ja
push
sti
arpl
mov
xor
jnp
jmp
rcll
jne
dec
pop
fidivrs
test
cld
push
lea
fcompl
jmp
xor
cmc
jmp
inc
cs
mov
aad
lds
adc
and
dec
push
cmc
inc
js
adc
adc
mov
cmp
xor
dec
cld
add
cwtl
inc
inc
xchg
add
nop
sbb
addr16
mov
in
les
and
in
inc
leave
sbb
inc
cmp
js
mov
inc
pop
inc
mov
and
push
scas
xchg
ss
into
inc
dec
lea
mov
movsl
mov
xchg
test
mov
mov
ds
test
jne
sbb
jmp
decl
push
in
pusha
xor
push
xor
dec
dec
andl
cli
fcomps
lahf
jl
xor
xchg
shrl
jns
mov
hlt
mov
sbb
test
scas
cli
cs
push
int3
fcompl
call
daa
and
insb
jl
lds
cwtl
jb
adc
pand
dec
lea
mov
orb
int3
add
call
ss
movsl
icebp
incb
xchg
out
dec
dec
leave
fistpll
in
cwtl
lea
in
sbb
or
lods
fs
outsb
out
int3
fmull
pop
and
sbb
shll
es
xor
fs
fisttps
dec
into
mov
lret
scas
inc
cli
mov
movsb
xchg
mov
adc
jmp
lods
lcall
inc
xlat
mov
push
xor
outsl
insl
push
inc
or
testl
lods
ss
jmp
push
mov
mov
dec
or
popl
adc
iret
sbb
repz
dec
dec
inc
fs
mov
and
cmp
in
mov
divl
out
cmp
dec
aas
sbb
and
pop
jns
pop
fsubl
imul
cmp
shlb
and
dec
ss
jmp
cmp
fisubl
fisttpl
cs
roll
les
or
inc
mov
mov
pushf
xor
pop
fsubrl
xchg
adc
aas
and
jecxz
adc
and
mov
cmp
xchg
call
cmp
shlb
gs
xor
lcall
jns
shll
lret
jmp
pop
xchg
cmpsb
or
pushf
rclb
dec
aad
jge
shrl
jbe
or
cwtl
sub
xchg
fwait
lret
push
ljmp
inc
jp
jo
push
or
cmova
xchg
in
not
popa
gs
push
cld
inc
out
scas
dec
and
push
adc
adc
rcr
inc
dec
imul
sar
or
xor
inc
dec
lds
fmul
aas
popf
ret
into
int
sbb
icebp
leave
pop
iret
cmpsl
cmc
sub
dec
mov
adc
and
outsl
sub
jl
xchg
or
es
push
pushf
jbe
popa
cli
jle
xor
jne
add
push
jo
mov
jbe
pop
pop
jle
inc
stos
repnz
sub
xor
inc
mov
ljmp
repnz
pop
outsl
pop
mov
pop
addr16
mov
push
mov
insb
aas
pop
iret
xor
jp
in
and
pop
mov
lret
outsb
fldcw
hlt
mov
add
mov
mov
movsb
adc
call
xchg
xlat
lahf
mov
enter
jbe
daa
sbbb
fbld
or
or
in
int
std
lcall
int3
test
sbb
jae
dec
sub
cmpsb
outsb
dec
mov
sub
test
mov
ljmp
jns
jp
jge
mov
pushf
add
mov
sub
movsl
sbb
inc
jg
gs
mov
pop
and
add
sub
xor
rolb
pop
push
sbb
xchg
jne
mov
jmp
jo
outsb
inc
sbb
rcll
inc
jne
in
or
imul
mov
data16
xor
push
bswap
xchg
arpl
sti
outsb
sub
adc
jmp
jb
sub
sbb
sbb
mov
dec
cltd
bound
cltd
xchg
sbb
lahf
lds
dec
out
adc
mov
pop
insb
xchg
fnstsw
mov
sbb
shrb
out
pusha
jl
js
push
sub
loope
inc
cmp
cmp
shll
fnsave
sbb
mov
jne
pop
std
data16
cmpsl
rcr
cld
repz
jmp
inc
xor
xchg
cld
sbb
repnz
sub
ret
cld
and
sub
sbb
and
jecxz
jmp
pop
fnstenv
add
jbe
in
cmp
js
popf
cld
jmp
xchg
xchg
fildl
cmp
pop
pop
cmp
sub
icebp
movsl
repnz
jg
sbb
cmp
inc
in
inc
ss
sub
dec
mov
rorb
cmp
sti
fidivs
xchg
cmc
xor
and
xchg
add
add
data16
and
mov
push
loope
lds
std
mov
arpl
sbb
adc
rclb
mov
out
xchg
cmpsl
mov
and
xchg
gs
cmpsb
aad
adc
xchg
clc
lods
xlat
mov
stos
push
clc
sub
jp
les
repz
and
dec
inc
insl
mov
pop
mov
sub
test
sbb
pop
out
in
out
xlat
sub
rorb
cmpsb
or
idiv
aam
insb
adc
mov
scas
lret
jge
test
adc
or
das
dec
test
mov
gs
cmpsb
in
pop
xchg
and
or
movsl
push
lock
xchg
sub
leave
inc
mov
xchg
inc
outsl
mov
pop
and
lds
es
jmp
shll
mov
and
sub
loop
push
addl
mov
sahf
push
ret
pusha
mov
mov
loope
leave
das
loope
scas
insl
pop
repnz
enter
xchg
iret
shrb
fdivrs
jl
push
cmp
xchg
xchg
in
js
inc
mov
cwtl
test
cli
xlat
cltd
pop
adc
bound
mov
dec
test
mov
xchg
cmpsl
repz
cmc
leave
cli
pop
xor
lds
push
add
jae
mov
sub
xor
jns
jmp
or
xchg
faddl
in
rcll
mov
scas
mov
or
test
xchg
mov
xchg
add
stos
fistl
frstor
cmp
pop
inc
pop
and
sub
ret
sub
cwtl
inc
ja
push
outsl
xchg
or
dec
stos
jl
sbb
mov
pop
testb
push
stos
dec
es
xor
fisttpl
sahf
popf
push
sbb
aaa
mov
or
dec
jle
mov
movsl
loope
sahf
cltd
pop
cmp
cmc
xchg
aam
fisttpll
movsl
fwait
push
pop
xchg
nop
rcl
inc
in
sbb
push
inc
aad
dec
and
mov
rcrl
stos
xchg
jbe
dec
ja
xchg
addr16
cmc
adc
or
call
pop
mov
mov
inc
mov
push
jb
jo
lock
lds
data16
stos
hlt
insb
inc
jb
std
push
imul
and
lods
push
push
and
fisubs
cmp
sbb
mov
rorb
mov
adc
cltd
push
jo
sub
sbb
rcrl
decl
sub
int3
or
lea
or
jae
pop
and
push
push
jno
pop
cld
add
cmp
jns
xchg
xor
dec
aaa
add
je
lods
and
stc
fimull
cmp
pop
out
jbe
xor
inc
pushf
jb
xchg
mov
int
inc
into
mov
pop
shl
sbbl
push
mov
or
mov
fcomip
cmp
sahf
add
inc
jp
inc
ja
mov
fldl
mov
ret
andb
ss
or
movsb
lret
pop
js
mov
fidivrl
pop
int
imulb
dec
cmpsl
sub
sbb
in
gs
jbe
xor
rcrl
imul
mov
adc
out
cmpsl
gs
out
xchg
jecxz
daa
push
inc
fcmovnbe
in
rclb
sub
dec
fildl
mov
cmp
cld
cmp
mov
popa
add
cmp
jb
pop
mov
imul
inc
mov
or
ljmp
push
jecxz
jae
in
sub
mov
pop
cltd
jle
adc
int3
and
aas
shll
mov
push
iret
jne
cmpsb
aaa
push
ss
ret
lret
cmp
cltd
xchg
jo
push
sub
mov
mov
dec
adc
xorl
mov
add
sbb
or
pop
sahf
and
push
fidivs
call
out
cwtl
jg
pop
loopne
xchg
mov
pop
pslld
gs
adc
dec
inc
in
cmp
clc
jno
mov
mov
inc
fidivl
in
push
jnp
lret
rolb
mov
cmc
fdivs
cmp
popa
adc
cwtl
fldenv
sbb
dec
scas
sbb
lcall
push
roll
cmp
jne
cmp
mov
jecxz
ss
aad
jbe
stos
dec
mov
lods
pop
mov
cmc
les
mov
and
dec
and
cmp
adc
fs
adc
inc
jno
fidivl
push
cmc
mov
push
stos
dec
pop
icebp
mov
mov
mov
pop
into
ja
pop
inc
push
mov
push
xchg
inc
xor
pop
xchg
lods
jne
adc
adc
je
daa
test
cli
test
jmp
outsb
xor
scas
arpl
dec
push
xor
int3
pusha
in
jno
lcall
in
lcall
sbb
insl
cmp
fdivl
push
fadds
mov
sub
movb
rcll
pop
into
std
popf
adcb
pusha
test
pop
daa
enter
repz
mov
loope
and
or
add
mov
mov
push
andl
stos
test
ja
js
jne
or
int3
sub
cmp
jge
and
out
popf
and
aad
rorb
push
xor
xchg
or
aam
push
call
mov
aaa
aaa
into
fsubs
sbb
sub
jno
push
nop
cmp
shll
and
mov
es
fstpt
dec
xchg
movsl
xchg
dec
xor
adc
inc
into
movsb
mov
bound
clc
jb
inc
roll
xchg
cmp
mov
or
adc
jae
pop
stos
sub
mov
arpl
sbb
inc
push
pop
cmpsw
mov
flds
int3
test
int
in
lahf
aam
push
adc
pop
mov
dec
push
sbb
std
sbb
pop
insb
clc
jns
int3
fidivrl
dec
xor
psubd
mov
outsl
push
fnstsw
xchg
jge
int
data16
rcrl
test
jle
sbb
inc
pop
ds
adc
in
sub
ds
shlb
or
xor
or
mov
or
bound
jecxz
cmp
les
fcomp
cwtl
dec
out
mov
xor
ja
or
push
push
movsb
xchg
push
dec
pusha
or
cmpl
loope
scas
lods
imul
push
mov
or
mov
hlt
imul
cli
xor
jg
inc
in
cmp
xor
out
jl
add
cmc
mov
jno
imul
pop
mov
xchg
sarl
lcall
adcb
sub
repnz
mov
scas
lea
add
sbb
int3
xchg
andl
xor
jb
jno
clc
add
jl
cmp
daa
xchg
pop
sahf
jmp
mov
xorb
xchg
mov
cmp
push
ret
cwtl
lea
push
adc
gs
test
leave
pusha
out
add
and
inc
mov
cmp
dec
sti
push
or
mov
cmp
shlb
xor
aam
bound
push
fldenv
jmp
ss
gs
data16
loopne
jne
bound
sub
pop
call
sub
cmp
mov
negl
lret
xchg
fwait
es
imul
in
nop
out
mov
xlat
mov
aad
mov
sub
movsb
xlat
jge
mov
jmp
int3
lds
jne
in
fimuls
jns
jns
pop
loopne
add
data16
mov
daa
dec
add
cmp
cmpsb
fwait
ljmp
sbb
add
lods
iret
xor
add
mov
lahf
lods
lods
lea
pop
testb
dec
mov
or
push
cmp
xor
loope
or
sti
lahf
add
mov
mov
push
sbb
mov
jp
dec
push
lahf
xchg
loopne
mov
jo
in
xor
mov
dec
mov
and
and
pop
aas
ret
dec
les
ret
lcall
loopne
nop
and
sub
pop
dec
mov
aad
lcall
js
fsubr
mov
sahf
ljmp
repnz
pop
lea
sub
fldt
loopne
pop
call
aaa
sbb
pop
iret
xor
fs
sar
inc
mov
fwait
xor
in
in
lret
call
scas
pop
adc
push
mov
mov
jnp
loope
mov
nop
mov
and
addr16
pop
into
cmp
fisubrl
and
lock
dec
enter
mov
jg
cmp
inc
inc
imulb
xchg
mov
testb
repz
je
imul
mov
imul
jne
cmp
xor
aam
mov
push
sarl
idivb
or
scas
or
sub
mov
push
lret
outsl
pop
mov
out
cwtl
int
sub
jno
std
or
jno
mov
mov
cwtl
inc
mov
nop
imul
pop
dec
pop
jns
imul
outsl
push
movsl
imul
fisttpll
xor
imul
xchg
lock
ret
jnp
dec
mov
mov
jne
cld
inc
jne
pop
push
mov
stc
jno
fs
xchg
jo
or
sahf
xchg
out
xchg
and
repnz
or
mov
jb
push
sahf
inc
cs
add
dec
shrb
insl
ss
jge
push
dec
lock
stos
paddusb
mov
inc
and
add
sub
bound
shll
fcmovnbe
sub
les
pop
sub
or
lock
mov
mov
jae
mov
shlb
pop
aaa
mov
call
add
xor
ret
sub
jecxz
hlt
stos
cmc
sub
jb
and
pop
sbb
ja
addr16
dec
pop
fcoml
mov
pop
xor
sub
adc
and
pop
add
mov
cmp
je
mov
jo
add
stos
xorl
xor
sbbb
sub
dec
pop
sbb
xchg
add
add
inc
push
test
test
jns
test
sbb
mov
sub
lahf
lahf
adc
mov
loop
adc
fidivl
inc
cmp
je
sar
and
mov
aaa
and
call
mov
sbb
push
mov
and
jecxz
rcrb
hlt
shr
adc
jns
ds
mov
pop
fidivl
xor
xchg
das
pop
arpl
push
jg
and
mull
mov
jle
mov
dec
xor
mov
adc
std
enter
aas
ds
and
xchg
xlat
lods
jp
xchg
stos
in
push
loope
out
scas
or
add
faddl
xchg
add
test
inc
mov
xor
mov
enter
dec
cli
cli
es
sbb
in
mov
dec
mov
push
push
sub
pop
mov
clc
hlt
and
mov
out
stc
fmull
arpl
push
or
mov
dec
in
xchg
xchg
mov
rcl
lcall
ja
in
cmp
stos
inc
sub
mov
mov
daa
add
mov
and
pop
jbe
mov
imul
inc
out
movl
cli
mov
xor
mov
scas
push
enter
cli
sbb
orb
xor
pavgw
lcall
sbb
lea
loopne
cltd
mov
mov
aam
and
nop
jecxz
cmp
mov
outsl
rorb
dec
pop
xchg
adc
out
shrl
push
sbb
inc
aam
shrb
stos
sarl
call
lea
push
nop
cmp
adc
dec
xchg
lahf
stos
pop
and
and
push
int3
imul
imul
ja
mov
sub
add
frstor
out
and
pusha
xchg
xor
jp
ret
xchg
test
pusha
pop
dec
ds
push
dec
std
filds
push
rcl
jecxz
mov
jnp
dec
push
inc
pusha
adc
imul
xchg
fwait
in
xor
mov
popl
loope,pn
xor
fistpll
xlat
mov
mov
outsb
mov
das
xchg
jne
xor
popf
idivb
aaa
sbb
inc
sbb
adc
push
sub
fs
mov
arpl
sti
sbb
mov
add
aaa
lret
mov
je
dec
andb
out
stos
sub
lock
stos
sbb
xchg
dec
push
mov
pop
dec
leave
cmpsl
outsb
push
add
jp
gs
inc
xchg
cld
push
adc
dec
or
repz
or
lcall
rcl
loope
jl
mov
jno
je
cmpsl
rcrb
test
std
jns
push
imul
xlat
lods
pop
aaa
jno
jmp
inc
xor
mov
and
push
push
cwtl
pop
insl
or
dec
xchg
sbb
push
sbb
cmp
jno
jge
subb
xor
jns
mov
lods
cltd
mov
sub
outsb
push
xlat
inc
jp
pusha
mov
mov
jae
out
data16
adc
mov
or
lods
and
mov
ss
and
pop
lea
jle
xchg
mov
jne
negb
add
jge
daa
je
pop
in
pop
push
cmp
add
inc
scas
xor
dec
dec
adc
out
ja
mov
push
fldl
lret
xchg
ret
cltd
inc
mov
mov
jnp
lock
test
cmp
out
dec
int
cmp
int3
rolb
xorl
ds
loop
shll
push
addl
xcrypt-ctr
cmpsl
sbb
push
mov
sbb
fstpt
pop
aas
daa
int
out
push
js,pn
xchg
or
scas
repnz
or
adc
call
cmp
xchg
xchg
subb
jnp
pushf
jne
sub
adcl
gs
mov
ret
xchg
jle
inc
adc
mov
aas
jmp
je
push
out
xchg
sbb
repz
jne
pop
rclb
adc
jl
jecxz
rcr
insl
pop
jns
push
scas
push
add
cmp
and
mulb
lods
pop
lret
push
roll
movsb
pop
mov
mov
cli
stos
aaa
mov
cmpsb
push
jge
enter
lahf
cmp
ret
pop
test
inc
cmpsl
fidivrs
movsl
int
ficoml
leave
adc
shlb
mov
std
mov
push
sbb
addr16
cmpsb
xor
adc
and
inc
jmp
adc
rorl
popf
repnz
push
push
loopne
addl
icebp
sub
insb
mov
icebp
pushf
in
mov
cmc
xor
das
mov
insb
cs
inc
in
stos
enter
cmp
xor
push
inc
or
shl
and
cmp
sbb
push
push
sbb
test
into
xor
jo
ret
jb
pop
adc
inc
lods
enter
mov
insl
imul
push
mov
cs
cmp
fcompl
or
push
pusha
mov
add
icebp
jae
push
or
aam
shl
imul
and
or
and
outsb
dec
or
fstps
lahf
stos
mov
inc
push
jecxz
sti
jmp
outsb
fxch
push
fadd
jp
add
push
inc
inc
xor
and
popf
mov
push
and
xchg
dec
mov
std
or
outsb
scas
popa
dec
jecxz
push
test
xor
je
pop
push
clc
mov
lcall
fidivs
or
insb
push
mov
int
or
push
sti
jne
es
call
fnsave
popa
cmp
jo
ja
sbb
add
mov
int3
adc
int3
xor
xchg
rcrb
imul
sub
mov
add
fsubl
pop
push
nop
push
mov
loop
or
inc
mov
mov
push
mov
loop
add
sub
jo
pop
mov
xor
test
jle
test
add
mov
mov
in
mov
push
jle
or
mov
nop
mov
jmp
mov
jbe
loopne
sahf
xchg
pusha
pop
pop
push
mov
mov
adc
lods
or
lods
shr
push
cmp
inc
fisttps
cmp
and
inc
pop
sarl
loopne
outsb
adc
add
pop
les
and
sub
mulb
push
mov
sti
and
adc
je
inc
scas
lock
adc
push
mov
xchg
xchg
jl
ljmp
add
dec
dec
ret
xor
ret
dec
lret
jo
dec
and
or
fstps
xchg
popa
inc
loop
ror
je,pn
lods
add
xchg
dec
mov
jg
popl
adc
cmp
dec
add
mov
jmp
pop
mov
and
aad
fcmovne
outsl
mov
pusha
xor
jmp
push
mov
repz
test
fpatan
xchg
daa
arpl
sbb
decl
lods
sub
sbb
adc
dec
sub
jne
and
push
jnp
out
test
inc
pop
xchg
arpl
push
std
mov
push
pop
pop
pop
lea
fidivrs
clc
pop
icebp
and
sub
and
das
mov
insb
add
push
pop
shlb
ret
xor
adc
fwait
cmp
divl
loop
in
pop
jecxz
pop
push
dec
loopne
adc
add
sti
test
test
add
pop
jecxz
xchg
mov
push
fisttps
repnz
test
add
dec
cmpsl
mov
test
dec
stos
cmp
pop
ret
stc
aad
lock
and
push
mov
xchg
ret
push
stos
push
mov
in
fnstcw
int3
aaa
aas
lds
inc
push
xchg
or
push
insl
jno
jo
push
lods
out
jmp
push
jecxz
and
mov
out
jo
push
sub
inc
inc
insb
out
mov
shll
fs
sahf
pushf
insb
iret
xor
xchg
xchg
fucom
dec
call
mov
mov
sub
jp
ja
repz
xor
mov
sbb
ljmp
ja
scas
rcrb
xor
ja
andl
repz
movl
shlb
xor
fidivl
fs
aam
pop
sub
outsl
mull
loopne
add
lock
pop
daa
and
test
lret
stos
ds
sbb
pop
shll
cmp
and
dec
movsl
pop
xor
jns
pop
xchg
in
nop
int3
cmp
mov
push
or
add
fs
inc
movsb
in
xchg
hlt
mov
push
leave
inc
mov
into
in
add
aas
imul
inc
sbb
push
pop
push
cld
loope
cmp
test
in
push
add
sub
dec
test
or
fst
add
ret
xchg
cs
jae
lret
sbb
imul
stos
push
mov
mov
adc
inc
dec
pusha
cltd
and
sti
fnstenv
mov
push
xor
xchg
in
inc
fsubr
mov
ja
out
out
mov
daa
push
loop
pop
lea
lods
jae
mov
add
inc
cmp
loop
outsb
mov
or
cmp
cltd
xchg
push
mov
ficompl
inc
lret
fs
xlat
lods
mov
jmp
insl
popa
pop
pushf
cmc
hlt
fistl
stos
test
mov
clc
bound
in
or
sub
dec
add
xchg
ror
mov
or
popa
cmp
pop
pop
sub
inc
dec
mov
jmp
insb
lcall
mov
lds
insb
lods
mov
into
cld
xchg
pop
pop
loop
movsb
and
inc
add
fmul
xor
call
adc
fmuls
les
push
mov
inc
or
inc
int3
xchg
nop
enter
push
scas
cwtl
and
arpl
or
hlt
mov
add
adc
push
mov
in
leave
sbb
dec
ds
dec
xor
pop
xor
outsb
mov
mov
sbb
add
mov
and
fstpl
stc
in
push
or
cmc
test
lods
test
pop
sub
add
out
inc
push
lahf
push
fimull
jno
gs
push
insb
dec
inc
add
mov
mov
jnp
mov
xchg
sub
popf
out
push
enter
enter
loopne
popf
pop
and
aam
jo
ds
loop
mov
fsubs
add
sbb
push
xor
sub
xchg
sbb
or
jns
mov
xchg
mov
pop
xchg
sub
mov
cmpsl
add
mov
xor
aaa
imul
jge
add
and
mov
repz
adcb
cmpsb
mov
sbb
sub
clc
in
repz
cld
cmp
and
rcll
mov
mov
lret
enter
aas
dec
hlt
and
stc
popf
loop
ficomps
xchg
sbb
cmp
jmp
jne
ljmp
pop
cmp
mov
jle
in
or
sub
sarl
data16
adc
neg
jge
sbb
mov
dec
ljmp
push
jae
imul
mov
in
mov
pop
xchg
cmp
hlt
es
divl
cmpsl
iret
fs
adc
mov
stos
push
push
inc
in
inc
dec
and
icebp
adc
jns
xlat
xlat
dec
test
nop
xchg
jns
xchg
lea
clc
mov
addr16
mov
mov
data16
leave
and
popf
ss
push
cmp
insb
mov
and
sub
test
cwtl
fcomps
or
std
xor
test
push
push
xor
or
inc
shrb
fadds
pop
jbe
pop
jecxz
shrb
in
push
roll
adc
pop
and
imul
pop
dec
jp
sahf
or
sub
xlat
sub
fidivs
rcrb
mov
mov
sti
in
pop
and
int
lods
fiadds
orb
mov
cmc
fwait
scas
xchg
pop
mov
mov
sahf
lret
push
adc
rcl
movsb
movsb
mov
mov
popa
mov
dec
or
shrl
das
dec
and
mov
add
repz
pop
adc
mov
out
hlt
cmp
call
push
jbe
adc
stos
vpsubsb
pop
adc
rol
jp
jecxz
test
cmc
sub
test
xchg
mov
pusha
xchg
push
out
adc
lcall
cmp
mov
mov
out
jge
sub
inc
hlt
cmp
jl
js
test
pop
data16
std
out
sbbl
xlat
hlt
push
mov
cmpsb
jmp
inc
add
lock
fidivrl
test
adc
inc
icebp
adcb
test
lcall
test
fisubl
mov
lret
xor
or
popfw
in
scas
xchg
negl
fucomi
cld
add
js
jbe
lea
shrb
xlat
insb
mov
sahf
mov
sub
pushf
loope
cmp
enter
sbb
out
add
stos
or
or
adc
out
je
push
in
or
xchg
fs
mov
ret
push
mov
mov
add
enter
mov
sub
mov
cmp
fcom
fidivrl
sbb
lcall
push
fnstsw
xchg
cwtl
cmc
sbb
push
pop
dec
repz
cmp
repz
mov
shll
lret
aam
push
or
jmp
ja
dec
pusha
sbb
ficomps
clc
or
js
pop
xchg
push
pushf
xorb
fldenv
xchg
call
push
dec
test
cmp
push
jns
idiv
stos
popa
adc
adc
dec
dec
and
cmpsb
je
xchg
mov
dec
rcll
sbb
dec
dec
rcl
outsl
mov
rcrb
adc
add
int
scas
cli
pop
rcr
mov
mov
out
and
jle
mov
dec
push
push
rcll
adc
and
nop
add
sbb
nop
xorb
dec
inc
loopw
mov
imul
add
xor
fimuls
fs
inc
cmp
loop
mov
js
and
fiadds
jp
dec
sahf
and
dec
xchg
ror
pop
movsl
adc
xchg
cli
sbb
pop
filds
iret
fs
inc
mov
iret
xchg
mull
pop
push
fidivrs
push
xchg
add
jmp
outsb
test
pusha
out
jbe
push
or
or
xchg
xchg
inc
mov
aam
add
mov
xchg
out
es
pop
adc
sbb
repnz
add
pusha
mov
push
ret
psrld
in
push
and
lcall
out
lods
repz
out
push
push
inc
pop
fcmovbe
addb
or
add
pop
cmp
out
test
in
jmp
inc
and
adc
pusha
mov
xchg
and
adc
push
or
enter
loop
movsl
cmp
add
movsb
ret
inc
and
adc
ret
popa
add
jo
inc
add
push
pusha
jle
loopne,pn
xchg
mov
push
push
in
xor
std
dec
xchg
stos
xchg
mov
shll
dec
imul
jo
inc
popf
adc
repz
rsm
jp
cmp
adc
test
cmpsb
mov
sbbl
xor
sub
movsb
sub
or
xchg
jmp
xchg
sbb
fbstp
loopne
aad
push
add
push
push
fisttpl
imul
aaa
aam
mov
mov
cld
ret
stos
imul
push
sub
jb
enter
rol
push
divb
inc
cmp
sbb
push
dec
xor
mov
dec
xor
test
fwait
inc
outsl
pusha
movsb
mov
pop
dec
pop
dec
sbb
stc
lahf
and
jecxz
stc
jle
jb
fwait
add
cltd
jbe
jo
dec
imul
jg
jo
test
xor
ret
insl
dec
mov
fsubr
push
xchg
xchg
ds
xor
int3
mov
movsl
stc
mov
mov
pop
jns
xor
xchg
lret
or
sub
dec
mov
incl
xchg
xor
push
cmp
mov
add
sbb
into
dec
hlt
dec
int3
pop
cmp
out
mov
or
pop
mov
mov
inc
xor
or
fdivrs
scas
inc
int
loopne
scas
gs
je
dec
and
lods
xor
test
je
mov
pop
pop
adc
in
popf
mov
outsl
out
mov
jne
movsl
adcb
in
adc
xor
fdivrs
outsl
mov
mov
jp
and
and
in
push
and
xchg
in
call
jle
push
dec
mov
sti
fbld
test
or
mov
ja
js
pop
sahf
test
adcb
lods
stos
or
inc
leave
push
or
cs
mov
sub
and
roll
lods
push
and
add
xchg
out
xor
les
cld
std
in
fucompp
adc
cmp
and
sub
jae
aas
mov
jmp
mov
and
fnstsw
or
inc
in
lea
sbb
sub
inc
popa
mov
pop
clc
xchg
cmp
jl
pushf
push
out
insb
push
loopne
lahf
es
and
das
shll
jns
xchg
mov
mov
jo
or
push
cmp
loope
xchg
pop
jmp
push
xor
push
jg
mov
cmp
mov
mov
jbe
push
jecxz
fcompl
mov
pop
and
adc
jnp
in
gs
loop
dec
aam
and
fucomp
adc
or
adc
aaa
push
shr
pop
loop
cmp
je
push
in
jl
in
es
imul
dec
xchg
data16
jmp
int3
pop
repnz
sbb
push
pop
jg
or
adc
inc
decl
push
pusha
add
inc
mov
mov
ja
cmc
push
and
imul
in
lods
roll
aad
mov
xchg
jg
sbb
push
jle
mov
leave
add
imulb
aaa
cwtl
or
sub
mov
sbb
mov
xlat
movsl
add
aam
jbe
les
pop
xor
and
mov
jecxz
mov
cltd
lcall
push
ret
pop
js
outsb
add
sbb
dec
fcoml
pop
xor
fwait
out
mov
lock
xchg
nop
push
cmp
popa
dec
scas
and
rcrl
push
push
jmp
hlt
or
pop
xlat
test
int3
frstor
lcall
push
mov
mov
jne
shl
js
daa
and
mov
sub
shll
mov
pop
les
pop
xor
les
mov
decb
mov
push
inc
add
icebp
scas
insl
movsb
jne
orl
outsl
test
es
sub
push
in
mov
ret
lds
loopne
ljmp
shrl
push
cmp
mov
adc
mov
mov
and
jno
xlat
sub
mov
test
xor
test
mov
lock
and
mov
mov
cld
das
fidivl
mov
enter
sub
or
bnd
lds
lcall
aad
les
and
xor
sub
imul
cld
and
rcll
fnstenv
fstpl
outsl
pop
sbb
or
testl
andl
cmp
xchg
sbb
cld
adc
inc
test
add
inc
xor
orb
pop
jg
shl
mov
mov
xchg
sub
add
imulb
jle
test
lods
mov
mov
xchg
mov
pop
jae
int3
dec
hlt
daa
mov
cld
addr16
push
adcb
scas
dec
outsb
data16
mov
cmp
push
push
cmpsb
rcll
pushf
lret
out
and
clc
cmp
ror
nop
out
push
push
fisubrs
xor
inc
lods
mov
sar
mov
rcrb
push
sub
add
movsb
and
jmp
pop
and
mov
lcall
bound
dec
leave
pusha
test
push
or
lret
shlb
aas
js
dec
iret
push
add
into
imul
and
repz
out
mov
mov
jnp
sahf
mov
add
xchg
cmp
and
ja
cmpsb
leave
cs
aam
inc
sub
inc
mov
dec
jne
adc
popa
xor
xchg
pop
fmull
das
loope
mov
mov
cmc
loop
jno
lret
flds
pop
push
dec
cmp
inc
int3
lods
sbbb
inc
pop
lahf
repz
xlat
jb
ja
in
push
sub
ss
xchg
jl
ss
mov
sub
push
xchg
pop
or
dec
add
in
test
adc
jp
sbb
je
mov
xor
cs
call
inc
push
into
addr16
sbb
fidivs
iret
insl
inc
cmc
or
ret
mov
rorb
xor
std
dec
mov
jne
sub
cltd
mov
fistpll
cltd
cmp
lods
push
repz
cmpsb
pop
ficoml
mov
out
adc
imul
mov
pop
stc
push
add
xchg
mov
je
adc
adc
into
mov
repnz
rcr
mov
push
adc
test
fxch
cmp
sub
sbb
xchg
sbb
or
sub
jp
pushf
mov
lds
aam
xor
add
inc
push
mov
xchg
clc
jp
ja
mov
movb
sub
adc
cmpsb
sbbb
jecxz
mov
and
setno
outsl
cmp
xchg
mov
test
jp
js
pushf
and
mov
xchg
scas
loop
lods
fsts
mov
cmp
add
arpl
aas
filds
aad
xchg
scas
jno
icebp
mov
cmp
xor
mov
or
stc
jle
aam
pop
push
fcompl
scas
adc
jno
lods
inc
lret
imulb
push
fisubs
psubq
or
xchg
pusha
add
lock
xor
sbb
gs
jne
dec
ss
iret
jle
fcos
in
push
std
and
imull
jnp
xor
push
inc
xor
inc
test
xor
outsb
xor
pop
fsubs
fs
sub
mov
nop
fldt
es
jnp
push
cld
leave
adc
push
and
ss
aad
pop
imul
loope
add
mov
and
nop
andl
pop
dec
loop
xor
loop
pop
adc
lahf
pop
fldt
aas
test
cs
dec
stc
movsl
lret
cwtl
fiaddl
and
xchg
and
xchg
dec
xchg
test
gs
fiadds
lock
dec
jp
das
mov
ret
pusha
sbb
js
ret
cmp
sub
out
bnd
push
cmc
mov
int3
push
cmp
arpl
iret
sbb
cmp
adc
ljmp
pop
xor
and
int
andb
xor
xor
mov
sub
pop
inc
add
push
or
pop
lods
outsb
add
mov
dec
pop
sti
fidivrl
insb
mov
movsl
in
filds
sub
pop
sub
cmp
cmp
in
aad
scas
popa
cmp
sub
aas
add
cmp
mov
cmp
std
push
mov
iret
or
xor
lahf
jne
lock
add
fdivrs
imul
push
shll
cmc
mov
sub
cmp
mov
push
in
cmp
clc
nop
ss
mov
or
sbb
cmp
js
push
xor
xlat
aam
fnsave
or
adc
mov
mov
jge
addr16
jg
xlat
mov
cmpsb
fcmovnb
sbb
pop
sbbl
push
mov
shrb
hlt
ds
add
or
popa
mov
ffree
js
subl
aas
loope
rcll
ds
dec
dec
fsubrp
in
xor
ss
sbb
xchg
js
xchg
cmp
stos
jo
call
inc
cli
das
push
in
xchg
in
scas
arpl
mov
xchg
mov
adc
sti
outsl
test
add
div
mov
aad
mov
out
pushf
jnp
ljmp
dec
sub
and
into
int
lret
xchg
push
dec
mov
bound
and
orl
adc
std
add
repz
sub
pop
cmpsb
fnstcw
or
adc
sbbl
mov
xchg
test
sar
fiadds
adc
lds
xor
cmc
mov
dec
out
jne
sbbl
les
fwait
or
loop
sbb
cmc
push
inc
daa
jnp
shl
push
or
pop
ja
sti
adc
imul
push
pop
in
jg
shl
sub
imul
xor
stc
loope
and
mov
xchg
push
add
les
push
inc
mov
pushf
or
in
popa
push
or
int3
cmpsb
sbb
mov
out
mov
dec
mov
imul
xchg
inc
rclb
fwait
std
clc
int
xor
jg
ret
sbb
xchg
xor
push
inc
loope
inc
dec
imul
or
push
push
aam
add
mov
fnstsw
outsb
lret
pusha
cld
inc
jo
add
push
mov
pinsrw
add
test
push
jo
xchg
ja
inc
fs
int
and
je
jp
bound
imul
inc
or
js
and
rol
lret
pop
mov
sub
xor
cmp
xor
scas
adc
scas
inc
and
mov
sbb
sahf
aaa
adc
fbstp
jle
loopne
push
cwtl
add
daa
jno
enter
push
xchg
dec
jno
test
aas
adc
pop
mov
icebp
pop
cmp
imul
fadds
xor
push
int3
xchg
shrb
dec
add
fwait
insl
fwait
pop
call
icebp
mov
jg
ljmp
push
and
push
mov
sbb
mov
mov
inc
mov
mov
sub
sahf
pop
int
mov
roll
cmc
mov
bound
jne
testl
jmp
mov
shl
cli
test
orb
adc
xchg
xor
pshufw
sbb
xchg
test
cs
mov
xchg
bound
jecxz
xor
dec
scas
std
jg
scas
pop
scas
push
gs
jmp
ja
sbb
pop
pop
das
mov
cld
jo
xchg
je
jne
dec
pop
mov
xor
jle
jge
pop
je
jbe
adc
repnz
mov
sti
or
insb
les
imul
lock
stc
mov
faddl
ljmp
ja
mov
sbb
fwait
dec
lret
push
loopne
sub
jp
or
pop
loope
lock
cmp
lea
icebp
xchg
pop
cmp
and
cli
pop
dec
hlt
rolb
jge
cmpsb
or
aas
and
cmc
cmp
ret
sbb
lcall
orl
mov
mov
add
in
sahf
inc
mov
adc
leave
xchg
jno
mov
fnstsw
lcall
jp
or
iret
addr16
cwtl
cli
jnp
xchg
cmpsl
cmp
lods
pop
pop
scas
lock
aad
push
pop
call
fisubrs
cwtl
outsb
mov
xchg
cwtl
cs
pop
mov
rclb
inc
lea
jne
pop
cmc
mov
cmpsb
lret
inc
in
pop
les
push
xchg
mov
shrl
mov
andl
sub
loopne
fbld
arpl
dec
mul
jl
popf
fdivr
clc
cmp
aaa
ret
in
xor
outsl
lret
je
dec
outsl
cmpb
and
jnp
aas
repnz
js
xchg
push
pusha
pop
and
loopne
mov
scas
stos
popf
lods
pop
arpl
add
sbb
dec
jecxz
hlt
cmpsb
push
cmp
cmp
out
add
inc
mov
lods
mov
sub
adc
ds
lods
jle
imul
aas
les
cmp
mov
jecxz
je
popa
cmp
mulb
sbb
icebp
pusha
mov
aam
mov
jmp
insl
adc
outsb
dec
xchg
jb
jb
cmp
push
int
push
jmp
daa
ljmp
fs
getsec
xor
lock
out
insb
movsb
cmp
mov
xchg
mov
mov
jb
xchg
dec
andb
or
outsb
sti
andb
jecxz
jmp
xor
daa
popf
sahf
cld
adcl
daa
fildl
out
cmp
add
rcll
pop
jbe
jmp
inc
jg
into
aam
push
jb
leave
cltd
popl
sub
mov
fsubrp
shlb
xchg
push
scas
lcall
addr16
fstps
clc
aam
jns
cwtl
xor
out
jecxz
mov
inc
jecxz
inc
jae
ret
cmp
or
jle
nop
xor
add
insb
inc
pushw
inc
add
int
mov
jle
add
mov
mov
jle
xchg
push
andl
outsb
jns
xchg
cmp
aam
jp
sarb
dec
pop
ret
rolb
pop
lcall
pop
push
xchg
jg
pop
cmpsb
test
cli
jnp
pushf
add
jp,pn
cmpsl
push
loop
mov
fiaddl
sub
jmp
xchg
and
xor
mov
repnz
fcomps
shrl
out
lock
bound
add
lods
hlt
xor
shlb
out
jb
pextrw
fs
adc
into
pop
or
push
push
add
lods
jp
adc
pop
inc
xchg
in
cmp
and
jns
iret
sbb
cltd
test
shll
fsubrl
sub
add
dec
mov
sbb
adc
mov
and
push
jmp
inc
mov
xchg
fdivl
jmp
cli
jp
loop
sti
in
lret
jno
pushf
cli
and
js
push
mov
push
subb
mov
lret
aad
sub
pop
dec
das
aad
pop
outsl
lret
cld
pop
push
jmp
in
iret
mov
jo
mov
and
fwait
imul
xor
mov
sti
push
shl
mov
add
dec
mov
daa
mov
adc
jb
add
cmp
add
repnz
adc
lcall
mov
pop
cwtl
fmuls
mov
or
je
notl
mov
add
pop
adc
lds
popa
testl
popa
insl
add
into
dec
and
mov
out
out
inc
jae
shll
xchg
andl
dec
fadd
popf
inc
fsubl
movb
movsb
and
mov
dec
iret
jnp
xor
aam
mov
sbb
aaa
sbb
int
xchg
jns
test
jbe
xchg
repz
stos
mov
mov
push
test
mov
lods
in
xchg
faddl
sti
fidivrs
and
pop
aas
mov
push
push
ljmp
mov
jge
and
xor
mov
in
add
jmp
adc
pop
jo
mov
xlat
int3
hlt
lods
cltd
ficomps
dec
mov
xor
daa
addr16
add
mov
notb
lock
dec
jl
xlat
lock
fsubs
xchg
push
push
and
jl
add
in
sbb
xlat
and
mov
in
or
jmp
pop
xchg
dec
jp
incb
adc
cli
mov
add
push
outsl
or
movsb
movsb
filds
dec
call
jge
push
shll
test
xor
test
fs
pop
push
inc
pusha
call
push
imul
insb
mov
daa
sub
cmp
adc
in
cs
jmp
dec
dec
xor
adc
fld
aas
push
imul
iret
and
addb
ficoms
leave
or
jnp
shlb
nop
add
ret
add
loop
test
add
add
xchg
mov
stc
cwtl
clc
pop
lret
xchg
enter
call
mov
movsl
jecxz,pn
mov
mov
enter
cmp
xchg
cmc
test
ss
popf
cwtl
lcall
aaa
xchg
call
jl
mov
rcrl
repz
int
test
jno
pop
daa
mov
lods
ds
mov
mov
mov
shll
adc
enter
adc
push
mov
fimuls
lock
jp
jl
pop
shl
mov
mov
ds
jmp
pop
mov
fstl
mov
clc
sub
mov
push
mov
jecxz
add
cli
cltd
mov
cmp
sbb
xchg
lea
or
push
mov
stos
jecxz
add
daa
nop
rcr
mov
fs
dec
mov
inc
pusha
push
sarl
sti
sarb
sbb
das
in
std
jb
sbb
int3
mov
pop
mov
mov
pop
leave
pop
cmp
fxch
lahf
repnz
ss
sub
mov
pop
ja
mov
nop
and
fs
xor
scas
add
push
jl
adc
ret
stc
jae
dec
xor
xchg
xor
jecxz
dec
daa
jle
cltd
jp
lea
pushf
nop
imul
int3
fstpt
lods
add
fwait
adc
jo
cwtl
in
mov
nop
jecxz
icebp
cmp
xchg
mov
add
adc
roll
aad
fs
push
cmp
out
sub
xchg
loopne
or
and
sbb
fs
mov
sahf
nop
xor
and
cmp
xor
mov
dec
jmp
shll
push
int3
outsl
xor
sbb
inc
inc
imul
inc
pop
addr16
xchg
in
dec
movsb
out
or
movsl
and
fcompl
insl
and
jns
sub
pop
cmp
popf
sbb
scas
gs
jmp
dec
mov
hlt
xchg
loop
and
fsubrl
or
fisubrs
scas
sbb
and
dec
cmpsl
mov
push
popf
sti
in
mov
fstp
rolb
pushl
in
mov
stc
xor
ja
xor
pop
shrl
push
xchg
test
loopne
movsb
das
pop
mov
mov
or
push
cmp
dec
lods
jb
test
dec
push
test
adc
cltd
scas
push
xor
sub
mov
lcall
inc
jl
pop
sub
inc
push
out
or
push
jp
bound
jle
mov
dec
sub
les
mov
add
push
mov
add
mov
xchg
or
push
mov
mov
jo
lahf
xchg
mov
jecxz
int
inc
sahf
inc
scas
dec
clc
sbb
mov
xchg
iret
dec
mov
fdivrl
add
imul
mov
fadd
cli
movsb
out
lods
push
in
fistps
js
dec
add
shlb
or
mov
jb
add
and
lock
aad
hlt
jle
in
aad
data16
pushf
pushw
not
mov
popl
adc
mov
fcmovu
mov
sbb
push
xchg
cmp
js
or
cmp
bound
dec
std
cmpsl
mov
xor
or
pushf
mov
addl
fsubr
dec
addr16
inc
inc
in
sub
subb
or
ss
pop
cli
cmc
dec
inc
cmpsb
mov
repnz
int3
sub
mov
xchg
add
dec
test
push
cmpl
das
lock
adcb
push
sub
push
lret
aam
pop
mov
pushf
std
cwtl
test
cwtl
push
jmp
rorl
and
sti
and
dec
fdiv
push
pop
ret
xor
or
and
xchg
pop
xchg
dec
mov
aam
cmpsb
fadds
es
adc
mov
out
push
xrelease
mov
dec
xor
jmp
dec
pop
aam
sbb
pop
push
aaa
outsl
mov
mov
or
sahf
mov
dec
sarl
test
fistpll
fnsave
test
into
or
subb
mov
js
lods
add
movsl
cld
adcb
xchg
jle
in
lds
inc
sarb
lds
movsl
cmp
int
in
push
and
lea
popf
cltd
ljmp
in
and
ds
aaa
inc
test
push
add
jg
cmp
sub
dec
xor
incb
mov
and
insb
xor
or
adc
mov
mov
pop
or
xor
or
push
gs
sbb
inc
mov
daa
mov
pusha
lea
cli
inc
sarb
lea
jmp
adc
ja
test
or
stos
dec
sub
test
inc
jo
out
xchg
jnp
or
cmpsb
lea
negl
fs
test
xchg
mov
push
jl
mov
dec
mov
add
mov
je
xchg
push
fldl
in
mov
or
call
in
out
nop
enter
mov
in
test
mov
mov
mov
les
mov
mov
pop
mov
or
pop
mov
mov
and
cs
arpl
call
cmp
sbb
mov
mov
mov
cmpl
sub
repnz
inc
aam
fcmovnb
inc
adc
dec
fprem
ficoms
andl
mov
cwtl
jmp
cmp
lret
mov
dec
imul
sti
sub
push
out
adc
sbb
insb
push
add
fildll
mov
push
push
jp
adc
add
mov
rol
xchg
ficoms
insb
and
out
leave
out
xchg
loopne
andl
aam
mov
jne
inc
jp
push
push
or
hlt
roll
into
adc
mov
sahf
out
pop
mov
cmp
push
sub
into
xchg
pusha
lods
addl
rolb
xchg
mov
lock
fsts
int
dec
mov
cmp
inc
popa
pushf
xor
repz
xor
mov
popf
pusha
ljmp
and
adc
sbb
xchg
push
scas
repnz
adc
push
pop
jbe
mov
inc
pop
lods
add
mov
nop
cwtl
add
ljmp
lea
dec
pop
sub
bound
pop
sbb
fstps
pop
push
imul
cmp
out
fistl
adc
mov
dec
daa
outsl
imul
sbb
pushf
add
xorb
adc
add
mov
or
adc
mov
sub
scas
aaa
adc
sbb
fbld
lock
jae
hlt
jnp
sti
xchg
or
cs
xor
enter
or
mov
or
jecxz
pop
icebp
jo
adc
decb
stc
and
sbb
pop
aad
jl
xorl
fcmovne
mov
mov
add
enter
pop
cmc
mov
sub
sbb
daa
push
pop
adc
cmp
lcall
adc
aas
lds
add
pop
loopne
mov
push
movsl
cmp
cmc
sbb
js
outsb
xor
and
fwait
mov
inc
sub
sub
shrb
notb
repnz
or
push
out
bound
jg
jp
ljmp
mov
movsl
mov
sub
hlt
rorl
movsb
mov
inc
cmp
mov
adc
sbb
or
lods
push
mov
sbb
and
or
push
ss
or
sub
cmp
dec
push
or
out
cmpsl
sub
adc
pop
rcr
es
cmpb
add
pop
mov
sahf
out
dec
xchg
loope
push
cmp
andb
xor
test
inc
insb
aam
fcomip
out
pop
scas
int
inc
adc
sub
inc
cmp
and
sbb
cwtl
rcll
xchg
scas
nop
cs
test
frndint
imul
je
cmp
sub
loopne
sbb
mov
add
push
sub
add
cmp
fiaddl
ja
sub
jge
push
aaa
inc
jne
repz
test
adc
lods
pop
ret
in
loop
pop
mov
xor
mov
pop
and
test
inc
fsubrl
cmpsl
ror
dec
ss
insb
mov
inc
mov
popf
cmp
mov
popa
adc
xor
mov
and
lret
cmpsb
mov
scas
mov
stos
and
pop
rorl
mov
mov
nop
leave
sbb
pop
mov
push
jno
insl
enter
push
jmp
aad
inc
mov
outsb
mov
aad
stc
inc
test
dec
mov
mov
pop
testb
dec
or
mov
outsl
pop
test
stc
test
push
popl
lahf
or
inc
add
out
mov
leave
jns
ss
imul
xor
arpl
bound
jge
dec
std
fsub
jb
dec
cmp
or
out
loop
dec
ret
dec
or
pusha
nop
or
sbb
sub
mov
orb
jae
vpcmpeqb
jl
inc
and
orb
stos
or
shl
addr16
mov
and
mov
or
cmpl
fiadds
aam
xchg
cmp
sti
jno
sbb
sbb
aam
in
sbb
cltd
jl
xchg
push
mov
lret
mov
add
inc
jle
pop
push
pushf
cwtl
nop
es
je
push
ret
mov
outsl
adc
dec
and
pop
popf
lret
add
push
sub
xchg
lds
aas
or
add
pop
mov
sbb
cmp
fisttpll
cltd
arpl
xor
test
sbb
and
mov
push
cmp
daa
pop
popa
repz
mov
or
int
mov
cmp
in
mov
or
pop
jae
and
inc
and
sarl
lret
or
pop
scas
adc
lret
ja
jle
xor
mov
vmovq
aad
cli
dec
orl
mov
pop
cmp
or
xchg
jge
mov
xor
out
ss
jo
rol
inc
sub
fldt
outsl
lods
mov
lods
ljmp
aaa
daa
int
adc
cld
add
jno
xor
pusha
xor
lahf
movsb
jnp
or
adc
mov
xchg
xor
fisttps
arpl
mov
add
xchg
test
push
repnz
lds
stos
nop
cmpsl
push
inc
enter
push
repnz
int
pop
and
dec
lods
jne
xchg
orb
xor
ficomps
mov
call
push
das
xor
mov
sar
inc
jmp
mov
xchg
push
arpl
loope
repz
test
ds
sub
push
cltd
adcl
cld
mov
movsl
mov
xchg
jge
sbb
insl
pop
adc
xchg
jae
pop
cmp
mov
jns
outsb
jns
inc
in
sbbl
lods
jg
and
mov
sbb
jmp
adc
ret
mov
push
pop
popf
cltd
sbb
add
or
or
test
pushf
pop
ret
xor
fiadds
pop
xor
inc
sub
imul
nop
in
cpuid
adc
pop
clc
pop
mov
push
es
mov
andl
adc
js
jmp
push
pop
aas
mov
dec
sub
inc
sbb
out
fisubrs
std
adc
sbb
sti
out
pop
imul
mov
jbe
cmc
push
xchg
pop
popf
loop
mov
dec
scas
push
cld
daa
stos
mov
loope
xor
and
out
push
jmp
mov
rep
mov
adc
lahf
ret
jmp
cmpsb
nop
insb
mov
fmuls
or
mov
stos
das
aaa
jge
movsb
jbe
fistps
cmpsl
and
cs
or
dec
pop
stos
sti
xchg
and
adc
movl
lods
add
dec
pusha
inc
push
ret
sub
icebp
lret
out
rcrl
xor
mov
pushf
xor
mov
dec
push
aaa
inc
ss
jno
inc
pusha
out
mov
das
mov
dec
mov
mov
cmp
pop
bound
add
es
pusha
ja
dec
xchg
addr16
jmp
rorb
mov
fwait
popf
xchg
push
sub
mov
test
out
insl
in
ljmp
icebp
test
gs
das
das
dec
xor
aam
adc
in
test
lcall
sti
cmc
fcoml
jmp
js
stc
sub
sbb
mov
call
test
jbe
in
and
or
mov
pop
ja
stos
in
inc
pop
adcb
lcall
lock
sub
inc
cli
fbstp
rcll
mov
cmpsb
push
fidivl
pop
sub
cmc
sbbb
ret
das
pop
mov
cmpb
push
nop
jne
mov
lcall
or
lret
xlat
dec
das
imul
gs
xor
or
into
loope
pop
mov
mov
mov
pop
or
jno
out
outsb
into
push
or
or
jle
repz
cmpsb
inc
lds
orl
fxch
iret
test
imul
mov
adc
pop
je
cmp
add
arpl
shl
rclb
pop
fisttpl
or
dec
sub
femms
or
incl
mov
dec
aas
dec
push
popf
mov
sub
pop
outsb
push
loopne,pt
mov
lock
xchg
test
movsb
daa
add
enter
mov
aam
ret
cld
mov
xchg
jns
pushf
data16
and
inc
jmp
sub
and
daa
and
xchg
jns
leave
or
rcrl
sti
mulb
xchg
sub
jmp
mov
jbe
fscale
push
inc
add
addl
push
mov
sbb
adc
inc
aaa
movsl
sar
int3
ss
jmp
and
jg
pop
pop
and
jnp
int3
out
shr
push
push
clc
xchg
push
ja
mov
sub
push
dec
add
idivb
cld
insl
lods
cmc
push
push
pop
sub
jbe,pt
and
jecxz
sub
lock
test
daa
sub
push
push
cmp
cld
fcoml
scas
push
xchg
dec
mov
or
leave
or
cmpsl
outsb
rorb
aam
hlt
dec
ss
sbb
das
sub
adc
xchg
xchg
mov
stos
ret
mov
adc
mov
rclb
stc
ljmp
sbb
sti
jbe
or
lock
xchg
in
push
lcall
xlat
dec
notl
imul
int
cmp
daa
pop
push
out
leave
rcr
jbe
repnz
mov
sub
xchg
ds
mov
fwait
xchg
jg
pop
ljmp
scas
xorb
mov
fstl
jp
clc
jbe
in
sbb
or
dec
cmpsl
scas
add
movsb
add
push
cmpsl
test
sbb
mov
pop
lock
mov
cs
outsl
or
mov
xlat
inc
addr16
or
xor
fsubrl
aas
jno
int
push
cmp
sbb
lret
and
xorb
mov
loopne
xchg
cmpsb
mov
mov
imul
dec
notl
call
cmp
or
xor
mov
dec
mov
xor
les
movsl
call
push
aad
sub
loopne
scas
inc
scas
mov
mov
pop
pop
ljmp
insb
movsl
xchg
and
mov
mov
cwtl
push
cli
int3
loop
inc
sbb
out
mov
jbe
ficompl
mov
push
sbb
adc
push
add
enter
and
aaa
sbb
loopne
xchg
add
pop
pop
loopne
into
mov
sub
or
xor
or
sub
int3
ret
in
out
in
jge
icebp
add
mov
popf
mov
jl
mov
int3
xchg
fwait
inc
xor
mov
sub
cmc
fisubrs
push
push
mov
negb
dec
mov
or
cmp
es
xchg
xor
das
stc
or
cmp
jns
test
cmp
dec
jbe
decl
repz
adcl
and
jo
or
dec
in
mov
xor
int3
dec
jg
ret
dec
idivb
mov
push
fisttpl
mov
in
lea
push
aam
pop
cltd
data16
stc
sbb
adc
push
arpl
pop
scas
test
dec
sub
inc
adc
imul
jge
rcl
push
sarl
movsl
adc
inc
ds
ret
or
jle
mov
cld
iret
mov
xchg
ret
dec
hlt
push
mov
cmc
cmp
and
mov
or
sar
lock
lret
fcmovnu
sub
out
pop
das
xchg
pop
pushf
aaa
gs
mov
cmpb
dec
jns
sbb
ret
addr16
inc
add
mov
xchg
retw
in
fwait
fwait
cmp
repz
push
cli
aaa
fpatan
adc
fisttpl
inc
dec
push
sbbl
jo
cs
add
jge
out
add
fisttpll
or
sbb
mov
in
pusha
lods
sbb
sbb
gs
sub
mov
loop
sub
push
into
scas
stos
je
cmp
sub
fwait
pop
sahf
or
push
test
rcrl
mov
lods
jne
fdiv
add
sub
lock
das
leave
push
dec
sub
jno
test
jge
inc
inc
lcall
xor
and
idivl
cmp
adc
or
or
xchg
pusha
xchg
rol
mov
and
adc
pop
mov
js
lock
pop
clc
dec
adc
push
stos
jne
popa
int
pop
ret
out
inc
andl
xor
inc
mov
dec
mov
lods
insb
push
or
push
adc
jnp
xchg
ret
add
push
jno
or
xchg
jl
mov
pop
pusha
xorl
sbb
std
out
cmp
inc
ja
xor
jo
out
pop
rcr
pop
fsubrl
push
lea
call
int3
xchg
add
adc
rcll
shlb
xor
adc
cld
clc
cld
and
fisttps
sbb
jge
push
mov
notb
stc
jg
or
push
loope
leave
test
xchg
pusha
push
sbb
imul
push
mov
add
shrl
fcoml
mov
cltd
cmpsl
push
sti
into
mov
popf
movsb
sub
pop
rcrb
pusha
ror
je
lods
sar
pop
push
dec
das
bound
jmp
cmp
dec
mov
cmp
lock
push
jp
bound
into
rcrb
out
lcall
inc
and
adc
sub
cld
mov
xor
push
adc
push
adc
sti
fs
testb
sbb
mov
sahf
mov
lahf
sar
lret
push
push
cmp
mov
adc
and
adc
jbe
pop
xor
jmp
add
mov
inc
cmp
test
sub
inc
sbb
mov
aad
pop
mov
lcall
ljmp
cwtl
enter
iret
add
daa
icebp
sbb
sub
clc
in
push
xor
xchg
mov
mov
push
jp
dec
sub
cmpb
push
cmc
ds
and
add
mov
jbe
add
popf
ja
add
loop
inc
je
jb
repz
aaa
mov
jmp
mov
dec
dec
inc
cltd
popf
jp
sbb
inc
jg
out
lds
pop
sub
loope
inc
and
sbb
rorl
ficompl
stc
cmpsl
test
out
je
xchg
push
sbb
fisttpll
aam
in
pop
aas
mov
rorb
push
repnz
in
cmp
aas
fs
xor
jo
leave
xor
aas
mov
push
shrl
out
mov
dec
movsb
ljmp
cmp
push
dec
sbb
xor
out
xchg
sahf
outsb
lods
push
iret
push
xchg
and
jmp
movsl
sbb
mov
xor
dec
js
sub
fmuls
enter
pop
xor
inc
stos
rclb
adc
adc
sbb
cmp
xchg
xlat
mov
pop
add
out
push
add
arpl
xchg
cmp
jb
mov
push
mov
mov
inc
lahf
adc
cmp
push
orl
out
outsb
testb
std
xchg
push
jno
or
mov
leave
push
fbld
adc
sub
cld
add
pop
push
sbb
sub
cmp
adc
stos
out
pop
fstl
ror
push
sub
mov
cmp
icebp
pop
repnz
sub
push
shl
es
outsb
das
in
sbb
ljmp
xor
fidivs
pop
cmpsl
sbb
fwait
sub
xchg
into
mov
das
mov
ret
aad
xor
jae
cmpsl
pop
pop
jbe
sub
xchg
in
inc
mov
jmp
ljmp
add
ror
rcrl
fldl
push
mov
mov
pop
push
jae
repz
stos
test
fs
aas
add
sbb
mov
fidivrs
cltd
iret
hlt
cs
or
cmp
negl
inc
push
push
lea
sub
sub
repnz
jnp
jmp
std
jo
fsubrp
and
push
addl
sbb
daa
test
dec
cmp
mov
push
or
sahf
or
and
fisubrl
call
mov
jp
test
mov
sub
push
stos
adc
dec
pusha
sbb
xlat
cli
pop
shl
mov
aam
push
inc
in
test
mov
dec
inc
in
jmp
add
jo
push
xchg
into
push
aas
adc
pop
adc
mov
jmp
les
add
int3
insb
frstor
mov
add
cli
pop
test
in
mov
xchg
imul
or
scas
imul
mov
loopne
movsl
int
push
js
repz
jg
lods
push
dec
pop
mov
cmc
je
sub
nop
and
cmpsl
movsb
and
dec
mov
mov
jbe
shr
cmpsl
pop
lods
xchg
xor
push
mov
dec
cmp
std
mov
add
jne
iret
push
jns
fmuls
ds
sub
mov
and
arpl
add
mov
mov
sbb
mov
cmpsl
ffreep
mov
push
or
movsl
dec
leave
pop
adc
push
cli
ds
rcrb
cltd
cmp
int
movsb
movsb
mov
sbbb
xchg
mov
jmp
mov
in
or
dec
mov
adc
xchg
and
pop
andb
cmp
lock
aas
pop
imul
mov
test
je
jmp
add
dec
icebp
repnz
cltd
filds
lahf
mov
imul
mov
scas
sbb
mov
mov
iret
pop
test
xor
hlt
loopne
hlt
pop
lcall
cmp
lret
jns
lods
fwait
pop
xchg
cmp
mov
dec
push
test
clc
cmpsb
imul
or
or
test
inc
dec
in
call
les
cmp
jg
dec
fsubrs
in
jl
cltd
and
cmp
in
pop
unpcklps
mov
mov
xchg
bound
mov
sbb
jmp
bound
dec
ljmp
insb
movsl
mov
inc
sbb
andl
and
push
cmpsb
pusha
inc
test
fstpt
push
in
or
pop
inc
jg
icebp
mov
xchg
aas
fisubrs
lea
sarb
clc
cmp
sbb
xchg
jbe
lea
inc
gs
add
inc
sbb
jo
adc
adc
loopne
mov
lds
xor
insl
xchg
movsl
outsb
xchg
enter
movsb
inc
add
jg
sahf
jge
sahf
jo
rcrl
lods
pop
push
sbb
repnz
and
inc
jns
push
adc
sarb
mov
cwtl
int3
pusha
mov
cmpsl
mov
xor
add
pop
fildl
cmc
rclb
dec
pop
and
jo
scas
and
push
lds
iret
shl
mov
cwtl
lcall
dec
or
dec
jno
jnp
jp
cmp
imul
mov
je
iret
xchg
nop
pop
ret
add
call
aam
mov
cmpsb
nop
push
cmc
fidivs
je
aam
jp
mov
push
mov
jge
dec
andb
xchg
push
loopne
xchg
jae
fwait
pop
ljmp
adc
imul
movsl
int3
pop
jb
sbb
or
xchg
jns
in
adc
mov
add
jle
mov
mov
gs
sub
hlt
imul
cmpsl
and
ds
repnz
arpl
mov
xchg
mov
dec
sub
hlt
pop
mov
add
mov
es
fs
inc
mov
das
mov
in
add
jb
push
jnp
xchg
push
cmp
out
jb
xchg
inc
sti
sbb
inc
popf
das
daa
xor
cli
mov
fldenv
jg
inc
mov
add
or
imul
ds
out
lret
sti
popa
out
shll
sbb
jecxz
jb
or
cmp
stc
jo
sbb
imul
into
push
cld
mov
jno
lret
bound
push
insl
dec
pop
das
pop
jmp
jne
test
insb
jecxz
test
movsl
jp
cmpsl
fldl
dec
sub
xchg
mov
mull
xchg
test
xchg
add
dec
dec
or
fnstenv
arpl
iret
and
jecxz
js
dec
xor
xchg
ljmp
fisubrs
mov
xlat
add
and
push
add
mov
idivl
lcall
fs
inc
in
and
mov
ds
and
test
xlat
mov
iret
lcall
inc
jne
pop
and
add
ror
sub
inc
xchg
push
mov
aas
xchg
jns
cmpsl
mov
sub
loop
js
js
in
adc
ljmp
out
xchg
xor
fwait
dec
fs
pmaxsw
or
push
mov
call
outsl
xor
shll
mov
xor
repnz
imul
std
sub
sub
sbb
mov
pop
sub
sbb
lods
fists
mov
sbb
scas
xchg
jo
xor
cmc
incb
repnz
push
in
lods
sbb
sbb
inc
cli
aas
mov
lretw
add
adc
sub
loopne
dec
jge
in
icebp
das
lods
mov
sbb
sub
xchg
stc
push
xor
xor
lds
in
ret
mov
fcoml
inc
jmp
das
dec
lcall
jg
outsb
push
jle
adc
mov
or
cmp
testl
mov
lods
pop
call
inc
jecxz
xchg
dec
push
xor
lods
mov
fsubrs
push
jg
cmp
lcall
push
or
inc
out
ret
sti
adc
lods
icebp
mov
out
mov
in
dec
push
sbb
iret
sub
fwait
pop
cs
add
repnz
movsl
aas
loopne
cwtl
inc
into
push
mov
and
loope
cmp
sbb
pushf
sahf
adc
fbld
cmp
inc
push
aam
das
ja
fnstsw
es
in
dec
mov
out
jge
fisttpl
inc
add
adc
imul
sbb
mov
mov
push
popf
rolb
sbb
add
lret
mov
cli
jg
ja
mov
idivl
and
cltd
lret
cmp
inc
lret
enter
add
lods
shrb
and
mov
fcmovnb
jbe
sbb
insl
push
xchg
adc
jns
aas
push
subl
jne
in
or
test
dec
fs
push
xor
inc
imul
mov
fildll
js
push
arpl
mov
out
fcmovnbe
add
movsl
and
out
jbe
data16
dec
xor
cwtl
sub
es
int
in
sbb
call
bound
lahf
movsb
call
sbb
loopne
lds
popf
or
test
popf
scas
dec
mov
imul
add
test
or
out
pop
push
sarl
pop
imul
decl
out
jbe
mov
sbb
jne
sbbl
ss
xlat
push
jno
pop
cmp
mov
mov
sbb
mov
out
lds
jg
adc
cwtl
inc
fisttpll
xor
jge
jnp
jae
fstpt
jmp
adc
scas
pop
enter
sbb
movsb
jecxz
add
dec
mov
add
mov
popa
mov
fwait
sbb
dec
fistpll
icebp
xchg
lea
xchg
inc
inc
sahf
bound
pop
std
into
repnz
sub
add
adc
cs
pop
cmp
insl
xchg
jae
dec
mov
out
or
pop
jae
mov
xor
inc
repnz
sub
ds
pushf
and
sub
cld
push
cld
in
sbb
lcall
sbb
mov
les
xchg
fnsave
push
rep
imul
inc
mov
lods
pusha
rcr
movsb
dec
loop
je
inc
cmpsl
jmp
pushf
js
mov
cmp
ljmp
sub
movl
add
dec
lcall
mov
and
lods
xor
test
xchg
mov
cmp
lret
add
lods
xor
sub
or
mov
mov
mov
push
mov
ljmp
rolb
dec
icebp
mov
fwait
shlb
push
ficompl
repz
inc
jb
scas
scas
divb
jmp
fisttps
std
call
add
mov
pop
std
test
cmp
jno
add
sarb
cmp
pop
or
jb
outsb
or
sub
lods
pop
adc
mov
add
jge
hlt
aam
test
shrl
jle
insl
sub
dec
insl
mov
and
jmp
test
xor
repnz
rcrb
int3
movsl
nop
ret
xchg
dec
xor
idiv
test
jo
mov
lcall
xchg
cmp
or
xor
cmp
daa
imul
je
cmp
std
dec
test
movsl
rclb
out
or
dec
arpl
cmpsb
imul
pop
push
inc
xor
negl
jno
dec
jecxz
add
lods
jge
test
mov
arpl
or
or
mov
inc
outsl
aad
mul
hlt
sti
push
push
mov
adc
enter
xor
add
jmp
js
arpl
inc
and
lock
xchg
mov
mov
pop
jecxz
test
mov
fldcw
leave
bsf
daa
fdivs
fidivrs
fwait
out
test
sub
push
push
mov
sub
daa
mov
jp
leave
sub
push
out
cmp
out
adc
lock
imull
stos
cld
sahf
shl
fs
add
cmpsb
and
inc
in
and
outsl
lds
jle
adc
icebp
dec
or
sbb
and
fstl
ret
cmpsb
inc
dec
pop
inc
test
es
sbb
push
lea
sti
mov
push
and
ja
pop
jmp
sbb
imul
add
mov
sbb
movsb
sub
sbb
nop
or
sbb
and
xchg
pop
arpl
int3
es
xchg
mov
lock
fbld
adc
xchg
shlb
sub
shrl
lcall
imul
mov
inc
lret
int
movsl
mov
xlat
aaa
jns
and
mov
pop
sbb
pop
push
cli
outsl
jge
scas
imul
cmc
cmpsl
push
push
repnz
sbb
pop
loope
je
push
or
lds
les
mov
xchg
sbb
xchg
and
inc
jge
fwait
ja
mov
in
inc
mov
mov
lcall
fs
dec
cmp
cmp
test
jmp
pop
icebp
loop
inc
jl
mov
add
sub
xchg
add
push
nop
insb
dec
imul
mov
sahf
pushf
int3
and
xor
mov
push
push
js
adc
push
repnz
adc
divb
push
ret
cmp
loop
xor
loop
cmp
mov
mov
out
mov
fstl
loopne
mov
daa
fists
lret
lock
aaa
mov
dec
hlt
mov
xor
stos
jns
jnp
add
mov
inc
push
dec
icebp
aas
movsb
push
dec
sub
divb
inc
xchg
fidivl
xchg
sbb
mov
cmp
jns
repz
notl
and
adc
push
xchg
stc
inc
jp
jecxz
fisttps
sbb
stos
cmp
sub
iret
push
pop
mov
fwait
sbb
xor
pop
lret
or
xchg
enter
aaa
aas
movsb
icebp
xor
inc
jae
shl
adc
cmp
loop
push
jg
add
add
xchg
pop
lret
std
push
or
and
xchg
xorl
movsb
cmp
add
dec
sub
fistps
lods
xlat
mov
nop
jecxz
sbb
imul
sarl
aad
jbe
in
mov
jl
cmp
nop
daa
push
xor
nop
ret
sub
jl
sbb
and
jg
jmp
adc
add
mov
adc
add
andl
popa
les
addb
jae
dec
icebp
mov
jge
add
mov
push
and
inc
vpsubsw
mov
dec
sub
add
and
test
data16
lods
add
in
mov
cmp
cmp
mov
dec
jbe
mov
roll
inc
sbb
inc
in
loopne
daa
push
adc
pop
insl
adc
sub
mov
add
fcomip
out
ds
jne
shrl
aad
mov
jecxz
mov
inc
aas
icebp
mov
and
call
in
insl
xor
xor
out
push
cltd
inc
xor
es
ret
inc
cmp
aam
repz
mov
bound
adc
inc
add
shr
or
adc
push
in
ja
mov
loop
out
pop
ret
sub
push
lret
dec
aad
aam
fnstsw
cmp
sub
scas
incl
test
mov
test
fwait
inc
cmp
imul
jbe
mov
imul
stos
fstl
pop
fwait
and
push
dec
enter
jns
ficoms
ret
jmp
sahf
jb
sbb
push
in
xchg
push
mov
in
fists
sbb
out
dec
xor
or
cltd
sbb
leave
lock
out
sbb
sub
subb
jecxz
jmp
fwait
mov
insb
or
test
outsb
setg
leave
inc
push
sub
pop
and
adc
sbb
jmp
fcoml
or
lahf
mov
add
jle
rcl
into
lods
dec
lret
xchg
jno
fnstcw
lods
int3
adc
jae
mov
lds
scas
dec
dec
xor
stos
cli
xor
mov
inc
mov
mov
repz
cs
ja
inc
sub
add
fimull
add
fwait
dec
push
ds
icebp
fwait
in
aas
xlat
jnp
into
pop
and
jge
ss
int
pop
dec
and
inc
rcrl
inc
pop
sub
xor
push
fsubs
add
out
nop
pop
sbb
xor
jb
rcll
xchg
sub
data16
stos
cwtl
inc
insl
jecxz
testb
rcr
pop
addr16
sahf
xchg
dec
jnp
fwait
ret
xor
outsb
push
pop
fstpt
jne
int
jecxz
divl
and
push
cs
lret
xchg
mov
push
adc
push
roll
fisubrl
mov
mov
mov
and
and
xchg
subl
sar
push
fsubr
flds
imul
jp
xchg
pop
rorl
or
adc
add
or
loopne
lods
adc
and
in
int3
push
out
mov
iret
add
scas
push
lret
pushl
loop
pusha
sarb
repz
adc
adc
sbbl
repz
jae
push
dec
outsl
pushf
xlat
push
push
sub
adc
jecxz
mov
sbbb
leave
mov
sub
mov
shll
movsl
pop
xchg
mov
andl
fwait
pop
mov
mov
out
ss
repnz
fidivl
sahf
insl
push
sub
pop
inc
fcom
sbb
aam
cwtl
movsl
clc
test
push
add
idivb
lock
lea
call
pop
cmpl
pop
dec
lods
les
xorb
ficompl
daa
cmp
daa
fstpl
testb
sbb
jg
mov
cmp
push
aad
lret
mov
js
pusha
pusha
cwtl
fwait
mov
cld
mov
inc
out
mov
push
mov
pushf
sub
iret
pop
sub
pop
mov
cmp
data16
inc
push
and
cmpsb
sub
movsb
ljmp
lcall
aaa
inc
mov
mov
xchg
jns
xchg
jae
ljmp
out
pop
imul
cmp
negl
xchg
mov
cs
int
outsl
xor
lods
mov
and
xchg
out
loope
scas
rolb
jmp
loop
addr16
mov
mov
test
push
cmp
sbb
imul
sub
push
dec
mov
and
sub
inc
fcoms
jb
es
sbb
imul
adcl
xor
jmp
pop
test
les
outsb
add
leave
loope
cld
mov
insb
fwait
xor
push
lcall
mov
inc
inc
insl
sub
lds
icebp
fimull
dec
sub
notl
inc
test
push
xchg
cwtl
add
inc
pop
int
adc
idivb
mov
test
adc
inc
jbe
outsl
stos
cmp
mov
int
xor
js
and
fidivl
imul
mov
out
jmp
jmp
add
les
inc
ror
jmp
pop
fwait
mov
xor
je
inc
mov
push
aaa
lahf
push
xchg
xchg
iret
aaa
arpl
out
imul
push
imul
jns
add
call
push
xchg
pop
dec
jne
in
test
mov
cltd
inc
jbe
aas
hlt
mov
cmp
xor
adc
jecxz
xchg
or
idiv
adc
mov
xlat
lea
movsl
es
dec
ds
lods
jb
or
xor
jle
jp
nop
sti
pop
out
adc
jne
nop
xor
mov
icebp
aad
or
mov
fisttpll
adcl
sbbl
jb
xor
xchg
pop
lods
clc
fbld
lcall
inc
jns
sub
cwtl
call
nop
push
out
xor
inc
xchg
shrl
scas
xchg
lret
test
xchg
sub
mov
jne
mov
dec
mov
stos
aam
sahf
push
xchg
popf
cmpsb
stos
pop
outsl
mov
das
inc
lea
loopne
and
mov
and
cmp
outsb
push
adc
sub
push
and
movsl
fcoms
stc
repz
mov
outsb
mov
out
cs
sbb
and
add
push
mulb
ds
sahf
xchg
adc
scas
xchg
sub
fcmovnu
mov
pusha
dec
lret
push
cltd
or
cmp
cli
rol
jge
sti
lcall
sbb
xchg
fiaddl
mov
or
loop
mov
subl
sbb
cmp
repz
or
mov
sub
enter
cmc
fmul
or
inc
loopne
sti
dec
icebp
jnp
aad
stos
mov
or
aam
lret
outsl
ret
sbb
cmp
xor
mov
jbe
sbb
repnz
lods
dec
cmp
sub
push
cli
out
cmp
cmp
mov
out
in
push
out
jno
fdivs
je
test
push
sbb
shrl
stos
jge
adc
xor
mov
incb
pop
mov
jmp
mov
hlt
repz
dec
ljmp
sbb
dec
and
ds
test
lock
clc
inc
push
mov
nop
test
in
jecxz
push
xor
or
stos
in
xor
stos
outsb
call
mov
lods
movsb
push
test
adc
add
mov
mov
dec
mov
movsb
pop
scas
add
sbb
decl
mov
adcb
mov
sub
ret
add
gs
jb
cld
mov
stos
inc
or
ja
sub
je
data16
jp
stos
xchg
repnz
add
imul
dec
jae
xor
fdivs
in
pop
cli
movzwl
mov
sub
push
imul
or
jecxz
neg
hlt
fildl
sub
movsl
test
daa
mov
iret
pop
adc
jnp
hlt
in
rolb
adc
inc
mov
jno
mov
outsb
ficoms
sahf
or
mov
adc
icebp
and
xchg
add
repnz
das
push
and
adc
push
insl
cld
mov
and
icebp
loopne
push
loop
mov
adc
mov
in
fs
mov
jbe
jle
jle
dec
mov
xchg
enter
int
mov
pop
xor
and
jge
scas
add
sbb
mov
sbb
rolb
iret
jmp
cld
je
inc
and
test
push
xlat
fs
mov
iret
leave
setg
in
adc
xor
outsl
repnz
cs
fbld
xchg
mov
cmp
xor
out
notl
sbb
xchg
lahf
insl
insl
and
in
xchg
and
mov
out
mov
mov
xlat
sub
cmp
nop
jns
sti
pusha
and
add
push
call
out
pop
mov
in
je,pn
mov
inc
or
xor
mov
xor
xchg
xchg
bound
xchg
jnp
test
add
push
aas
sbb
mov
shlb
sub
push
add
mov
push
into
test
aas
pop
xchg
pop
sub
mov
or
push
mov
xchg
cmp
pop
xchg
sub
pop
mov
jns,pn
fsubl
mov
xor
je
shll
push
ret
mov
jne
cmp
fsubl
xchg
test
mov
sub
roll
pop
ficompl
mov
ret
fmul
movsl
mov
fsubl
or
pop
cmp
lret
dec
mov
mov
mov
dec
adc
iret
movsl
sbb
repz
dec
ss
clc
leave
inc
push
or
nop
adc
xchg
repz
ror
xor
mov
jbe
arpl
add
into
inc
pop
xchg
ss
push
jno
mov
faddp
aam
dec
pop
icebp
mov
xor
rol
sub
jo
mov
mov
cltd
ja
cmp
shll
and
inc
enter
ficomps
adc
sbb
add
pop
xor
cmc
sbb
inc
lock
pushf
jbe
lods
cmovno
cmc
push
leave
fsts
or
sti
mov
push
push
inc
cmc
int3
popa
or
dec
xchg
pop
iret
test
rolb
and
lea
xchg
xor
pusha
mov
sub
push
in
sub
pop
test
dec
sub
mov
lds
jb
jno
push
or
test
loopne
repnz
ret
mov
jp
lods
fsubs
mov
pop
and
scas
push
sub
nop
int
dec
or
test
add
test
or
outsl
push
ss
lods
pop
jnp
mov
cmp
stc
jge
int
icebp
push
pusha
inc
push
or
jne
add
stos
cmp
jmp
insl
fs
dec
adc
adc
inc
int3
xchg
xchg
sub
jne
test
and
mov
add
ss
push
xor
mov
dec
fsubrl
jecxz
and
xchg
jne
nop
shrb
jmp
outsb
sbb
push
popf
rcll
aas
loopne
dec
pop
sahf
sub
xor
mov
mov
imul
clc
jecxz
ja
lock
xchg
push
push
in
xchg
aam
sbb
ret
inc
fistps
ficoms
jbe
std
andb
addr16
lret
sahf
repz
fs
loop
sub
in
dec
lret
lahf
addps
subb
mov
aas
pushf
arpl
inc
adc
xchg
and
push
adc
cwtl
add
in
loope
aam
push
push
cmc
mov
cmpsb
push
or
push
int3
dec
xor
pop
fs
pop
adc
dec
xchg
std
xorb
mov
xor
mov
mov
jg
bound
sub
es
out
fimull
dec
mov
sbb
cmp
jbe
mov
mov
pop
dec
xchg
jecxz
jne
fistl
pop
test
cmp
or
pop
mov
push
out
js
ret
mov
in
daa
pusha
imul
push
arpl
pusha
cmp
jo
xchg
jo
int3
jmp
mov
int
adc
dec
faddp
out
and
pop
leave
xor
adc
pop
cmpsl
mov
add
scas
dec
ds
jp
mov
sub
add
js
sub
or
aas
inc
xchg
pop
dec
pop
sbb
out
subl
mov
ret
loope
mov
test
rclb
std
and
xor
fmuls
movsb
sub
jbe
lcall
mov
aad
adc
xor
jbe
mov
test
in
inc
inc
mov
mov
loop
mov
std
xor
test
sbbl
pusha
fdiv
aaa
sbb
test
xor
cmpsb
jno
xchg
mov
adc
pop
jns
fucomp
fidivrl
addr16
or
test
cld
lahf
xor
idivb
inc
cmp
jecxz
outsb
in
insl
xor
rcrb
subb
dec
sti
scas
sbb
mov
shl
push
fldl
out
adc
lods
mov
and
lcall
sub
dec
enter
push
movsb
adc
sahf
stos
xchg
mov
and
repnz
dec
fsubrs
add
sbbl
gs
adc
inc
subb
push
fs
xor
stos
xchg
addr16
or
pop
movsl
jae
rcll
inc
shrb
dec
jp
inc
cmc
cmp
loopne
cmpsl
sbb
jp
aaa
mov
stc
aas
lock
daa
shr
incb
dec
dec
cli
xchg
fs
andb
pop
push
pop
popa
bound
pop
add
xor
adcl
repz
dec
adc
shl
jmp
int3
sub
movsb
test
adc
mov
pushf
mov
das
iret
fwait
mov
jmp
lea
and
inc
cmpsl
hlt
outsb
cmpsl
loop
cltd
xchg
lds
add
loope
ret
push
arpl
or
arpl
shlb
mov
mov
out
les
loopne
aad
sub
mov
cmp
loop
mov
adc
imul
pop
in
xchg
jmp
lods
lods
fildl
and
jl
out
imulb
daa
hlt
incl
adc
and
mov
pop
xchg
add
push
cmpsb
push
loop
cmpsb
or
push
scas
mov
rolb
mov
pop
lret
and
cwtl
push
sahf
sarb
ss
notb
das
aaa
xlat
in
lods
hlt
out
add
cwtl
icebp
in
ljmp
lds
mov
in
orl
dec
stos
test
mov
les
adc
popa
fwait
cltd
push
adc
adc
lods
rolb
stos
cmp
mov
or
xchg
jmp
jmp
test
xor
imul
cmp
fldenv
jno
lea
push
mov
jg
ret
pop
or
dec
push
mov
jnp
mov
pushf
mov
sbb
sbb
or
xchg
sub
push
mov
inc
out
inc
add
add
or
adc
and
inc
jle
out
xchg
jecxz
iret
es
mulb
addr16
js
inc
pop
and
jo
rcrl
gs
das
scas
sbb
dec
hlt
lea
mov
mov
in
and
xor
jmp
pop
push
addr16
popl
les
fistps
push
das
cmp
mov
lea
xor
in
roll
or
shr
bound
inc
lock
push
pop
cwtl
jbe
and
jbe
ret
into
mov
mov
out
lcall
imul
xor
or
les
fdivrs
jae
push
iret
xchg
mov
out
adc
mov
gs
cmpsb
push
cmp
out
add
nop
divl
in
add
loopne
jno
mov
scas
lods
xchg
daa
jb
jecxz
gs
outsl
pop
mov
lods
mov
fwait
sub
sub
sbb
lea
in
push
je
mov
gs
jne
pop
sti
andl
mov
out
cltd
adc
adc
aas
mov
popf
das
xchg
sbb
dec
push
dec
aam
pop
add
mov
scas
loop
outsb
dec
xor
pop
or
das
lahf
rorl
cmp
lock
out
push
mov
loop
sbb
dec
inc
pop
das
loopne
and
dec
aas
enter
dec
mov
call
cmp
jecxz
gs
push
adc
mov
xchg
mov
lock
fisttpl
sahf
repnz
and
mulb
push
cmp
rcr
dec
inc
fwait
xchg
and
lods
jno
jns
add
xchg
cmc
sbb
sub
inc
cmp
scas
inc
pop
cmp
xchg
les
in
adc
xor
add
and
pushf
test
insl
jmp
sub
push
xchg
iret
mov
fndisi(8087
fcoms
scas
xorb
test
dec
sahf
sub
mov
pop
dec
cmp
mul
mov
das
jp
add
push
adc
push
sti
arpl
dec
inc
and
push
loope
shlb
mov
repz
dec
cmp
push
fsubrs
shl
ret
ret
imul
add
or
out
out
shlb
or
das
int
shll
xchg
push
dec
das
inc
and
bound
xchg
pop
adc
ret
nop
xchg
sbb
shl
dec
hlt
xor
mov
sbb
sub
sub
jae
xchg
or
jb
cltd
aam
cmp
xchg
repz
sbb
xor
in
ret
pop
xchg
pop
leave
dec
ret
movsl
test
xor
sbb
pop
int3
int3
sbb
mov
enter
fiaddl
adc
cmp
gs
lods
mov
mov
mov
imul
adc
faddl
daa
insb
enter
popa
popa
cmp
and
je
imul
out
js
orb
mov
aad
lret
push
icebp
xor
pop
xchg
or
les
xchg
cwtl
xchg
daa
flds
fdivr
clc
push
icebp
dec
sbb
test
lcall
ljmp
mov
push
mov
cltd
mov
pop
pop
inc
sbb
sub
push
sarl
lret
pop
sti
icebp
pushf
sbb
sub
stos
cwtl
mov
or
sbb
lcall
sbb
xor
xor
into
add
pop
cmc
push
fdivrl
shll
cmp
and
xor
jmp
push
mov
sub
loopne
lea
das
mov
fs
mov
test
sbb
fmull
cmp
and
sbb
testb
sbb
push
call
ljmp
out
jmp
hlt
out
insl
pop
out
cltd
std
pusha
movsb
cmp
jnp
lahf
cmp
cmpl
out
add
jbe
popf
jae
shr
loope
push
inc
mov
add
movsb
inc
clc
les
aas
rcrl
or
js
fwait
inc
and
cmp
gs
push
loop
out
nop
mov
gs
pop
push
sbb
adc
jno
add
push
inc
fists
adc
cmp
fisttpll
mov
add
subl
pop
jle
ficompl
lcall
and
int3
imul
pop
dec
aaa
push
jo
dec
in
sub
call
sbb
push
movsl
ret
cmp
mov
in
stos
fwait
inc
addr16
push
mov
pushf
push
mov
mov
aad
mov
jae
sub
pop
inc
and
mov
in
inc
movl
cmc
std
mov
dec
test
jmp
mov
test
push
adc
jbe
into
or
mov
insb
xchg
mov
loopne
lret
xor
xchg
pop
rclb
fisttps
jmp
mov
mov
adc
adc
and
mov
jae
and
push
fstps
cmp
stc
outsl
add
pop
add
fcmovb
lds
xchg
mov
and
jp
fistl
in
scas
ljmp
dec
loope
mov
test
pop
sbb
mov
loope
cltd
lds
jnp
lahf
out
daa
add
xchg
mov
dec
pop
xchg
sahf
lret
inc
pop
shl
nopl
int3
movsb
sub
adcb
shr
dec
arpl
sbb
bts
lea
ljmp
fnstenv
mov
cmp
inc
cmp
mov
in
iret
inc
fwait
outsb
cmp
cmpsb
mov
dec
pop
pop
idiv
insb
fs
lods
ds
jnp
fdivs
xchg
and
lods
xor
rclb
push
sbb
nop
es
mov
sbb
lret
nop
mov
xchg
std
je
cmp
popf
imulb
adc
movsb
fxch
lcall
fisubrl
cmc
sbb
hlt
mov
fidivrs
push
insl
xor
fildll
hlt
mov
cmpl
mov
imul
push
mov
in
das
xor
into
sbb
mov
xor
mov
mov
cmp
jl
fildl
les
in
aas
cwtl
scas
rorb
outsb
xor
adc
fs
call
xor
adc
push
stos
ljmp
sbb
ret
cmp
enter
sbb
dec
insl
lcall
ret
or
sub
jmp
push
fcmovne
jb
and
dec
mov
mov
adc
ja
mov
mov
or
push
sub
xor
add
xor
cmpsb
dec
data16
hlt
clc
fndisi(8087
cmp
aaa
add
add
sbb
pusha
test
fcomps
ja
int
and
and
sbb
mov
mov
xchg
inc
repz
jbe
aaa
dec
cmp
imul
outsl
sub
dec
pop
shlb
adc
pop
push
push
std
xor
xor
sbb
mov
out
outsl
dec
enter
inc
push
and
adc
js
or
cmovbe
add
mov
jp
sbb
lahf
xor
dec
insb
das
out
add
out
rorl
and
test
call
scas
fdivrp
cmpsb
fs
popf
push
inc
inc
mov
push
xor
push
sub
sar
mov
in
sbb
mov
xchg
in
scas
pop
aaa
clc
pop
pushf
bound
pop
or
and
rclb
idiv
das
into
push
mov
xor
xchg
cmpl
fisubl
push
insl
mov
aad
insl
dec
fsts
mov
shl
test
jle
ss
lea
xchg
push
add
sub
mov
test
negl
cwtl
hlt
les
jno
dec
xchg
repnz
pop
test
loopne
addb
test
add
xor
lods
inc
leave
sub
ja
inc
lods
cs
pop
pop
mov
add
shl
mov
leave
out
in
mov
add
leave
in
pop
mov
pushl
lock
fsubrs
adcb
and
fsub
adc
pop
int
jae
fldenv
arpl
cli
pop
sub
ficoml
test
or
xor
fs
stos
mov
shrl
xchg
sub
bound
dec
cmp
scas
add
stc
mov
ljmp
push
cli
sub
push
push
push
jo
fiaddl
push
add
dec
and
enter
in
sbb
mov
mov
mov
inc
ss
insb
jno
leave
inc
push
cltd
pop
mov
jecxz
cwtl
repnz
test
in
add
cmp
fdivs
ss
pop
push
imul
mov
sbb
outsb
lcall
in
sub
enter
sub
sbb
push
push
adc
insl
test
dec
mov
imul
push
dec
adcl
hlt
add
xor
inc
jg
pusha
mov
jl
int
lret
adc
sub
lock
outsb
outsb
cmp
push
fstpt
adc
mov
je
jb
inc
push
fmul
daa
add
jecxz
mov
cmp
lods
xor
sub
and
cmp
inc
xor
inc
mov
rolb
jecxz
xor
pop
hlt
movsl
lods
fdivrl
inc
fcoms
pop
outsb
test
pop
xchg
pushf
addr16
fisttpll
inc
dec
idivl
dec
cmpsl
jecxz
pop
bnd
insl
push
or
jmp
in
test
sbb
add
inc
mov
and
sbb
inc
xor
int3
psubsb
stos
cli
jp
test
stc
cli
mov
div
fcomip
mov
out
in
fdivrl
rcrb
mov
xor
cmp
cmp
ret
sbb
lods
in
and
pusha
sbb
dec
xchg
pop
shr
inc
or
xor
clc
out
add
rorl
rolb
movl
lds
xchg
enter
cmpsb
cs
and
inc
sbb
popa
lret
or
lock
sbb
xor
pop
int3
cmp
push
pop
mov
mov
add
inc
rcll
ss
pop
shlb
pop
clc
or
cs
mov
jo
scas
cmp
xor
outsl
push
arpl
divps
jmp
sar
ss
addl
or
sbb
add
adc
push
nop
lahf
dec
mov
sub
sbb
mov
popf
push
inc
or
add
out
fs
je
arpl
fnsave
pop
xchg
pop
scas
dec
ret
push
adc
test
stc
or
test
jge
js
mov
push
xchg
mov
stc
aad
into
cltd
sbb
add
sbb
out
cmp
aas
jmp
or
sbb
sbb
stos
sar
jnp
jge
ret
or
fdivrs
inc
cmpsb
pop
add
adc
mov
cltd
pop
fidivrs
ds
enter
in
xchg
push
fsubl
leave
out
daa
insb
jp
sub
in
aas
in
jo
dec
or
sti
gs
adc
or
mov
fwait
out
xor
andb
pop
mov
sbb
sbb
jo
or
hlt
ja
out
call
pushl
jnp
xchg
lds
ljmp
call
je
movsl
xor
lods
mov
sub
enter
mov
or
pusha
or
ja
in
fpatan
je
xchg
imull
lea
push
sbb
shrb
imul
in
dec
sbb
data16
pop
arpl
js
cmp
icebp
loope
loop
mov
imul
test
pop
push
push
lock
sbb
adc
cmp
mov
or
ret
and
cmpsb
push
jo
cmpsl
add
rorb
mov
call
jecxz
enter
in
not
jne
test
push
jle
xchg
mov
fiadds
xchg
pavgb
and
dec
subl
fucomp
sub
iret
test
push
or
addr16
popf
idivl
outsl
ljmp
sub
add
mov
sbb
sbb
and
xor
fdiv
inc
xor
scas
sbb
xchg
adc
movsb
faddl
stos
test
mov
pop
imull
xor
push
mov
inc
pop
adc
out
sbb
lea
call
lock
pushl
dec
sbb
sub
push
mov
adc
jp
jns
add
aad
test
mov
dec
das
imul
push
es
int
aad
mov
mov
adc
push
scas
add
enter
test
pop
jl
scas
pusha
test
push
cmp
out
or
inc
inc
jge
jae
add
and
dec
lods
xchg
and
aas
loope
mov
int
leave
jb
imul
dec
ss
je
test
enter
shll
js
cmpsb
dec
mov
sbb
mov
jo
fwait
cmp
mov
adc
scas
jb
pusha
mov
push
mov
mov
sbb
jmp
sti
jbe
adcl
stos
dec
fbstp
mov
pop
add
or
push
mov
or
pop
ret
adc
mov
jp
sub
push
cwtl
push
pop
adc
cmp
in
xchg
pop
aaa
mov
clc
sbb
xchg
cmp
jo
sti
sub
and
mov
mov
push
dec
ret
bswap
pop
jl
adc
and
dec
jb
lods
je
xchg
aas
stc
in
loopne
cmpsl
mov
xchg
fsubp
dec
cmp
fwait
xor
push
in
test
mov
cwtl
add
sbb
inc
mov
mov
or
popa
movsl
jmp
int
test
sbb
fdivl
cs
mov
jno
rcll
mov
pop
out
add
mov
mov
addl
push
push
sbb
shrb
push
and
pop
mov
push
inc
movsb
and
jne
repnz
jge
sub
push
pop
ret
pop
mov
cmp
xor
jns
jo
jmp
jbe
xchg
enter
in
and
loope
pop
movsl
push
cmc
mov
divb
lods
xor
push
rcll
cmp
adc
cmp
pushl
scas
fnsave
mov
fwait
ret
push
movhps
lahf
cmpsb
xchg
mov
dec
clc
mov
stc
mov
dec
pop
inc
jns
lock
sti
popa
inc
pop
add
inc
or
insb
mov
sbb
pop
xchg
ja
roll
test
xchg
adc
pop
adc
loopne
or
mov
ja
jg
cmpsl
or
je
imul
fildll
sub
test
push
insb
add
movsl
dec
mov
das
xchg
add
in
and
mov
xor
sub
mov
lock
sahf
mov
dec
lods
inc
push
jbe
sub
pushw
inc
pop
and
lods
xor
enter
ja
std
adc
cmp
mov
mov
outsb
push
lods
icebp
jae
add
pop
push
cmp
lret
orb
ret
jnp
dec
pop
xchg
and
sbb
iret
in
cmc
ljmp
adc
jge
pop
lahf
mov
add
and
inc
inc
jno
arpl
div
orl
dec
sub
fists
and
fistpll
loopne
adc
fldt
pop
in
fnstsw
push
enter
test
les
inc
pop
rcrb
add
cmc
aas
mov
and
fcompl
pop
push
out
enter
xchg
or
andb
jp
mov
add
adc
inc
or
dec
fdiv
xchg
test
gs
dec
fldenv
cmp
xchg
xchg
mov
pop
roll
loopne
mov
add
jp
clc
out
outsb
and
cmp
mov
pop
in
out
stos
into
fisubl
and
dec
imul
adc
mov
stos
shll
inc
leave
xor
mov
sub
filds
aad
xchg
push
adc
cmpsb
movsl
dec
inc
into
mov
popf
jne
lock
mov
sub
int
ds
push
mov
mov
push
sub
push
xor
addl
sub
je
fs
or
mov
imul
nop
dec
sbb
add
xor
push
daa
test
pop
pop
sub
dec
addr16
addb
push
mov
xlat
dec
in
xlat
sub
dec
jmp
mov
mov
push
fwait
movsl
sbb
insl
jbe
insl
mov
push
dec
popl
je
icebp
dec
popf
jge
cltd
or
adc
or
dec
das
xlat
push
dec
cmp
std
pop
fldcw
sahf
adcl
add
aas
pop
dec
test
aaa
or
rcrb
test
cld
inc
jecxz
sub
push
xchg
frstor
or
les
jmp
es
sbb
jg
cs
cmpsl
movsb
into
cmc
sub
mov
inc
sbb
gs
cltd
rcll
sti
pushf
xor
stos
mov
lds
cmp
and
add
ret
pop
ret
dec
arpl
arpl
mov
add
lcall
data16
adc
fcompl
insl
fcmove
fbld
js
and
insb
adc
pop
ja
loop
push
imul
daa
add
je
pop
lahf
fs
push
outsl
rcrl
jl
sub
stc
iret
xlat
adc
in
mov
ja
dec
and
jle
aad
push
adc
insb
movsl
mov
mov
stos
loope
or
ljmp
jg
sub
mov
stos
aam
aad
sbb
or
lea
dec
xchg
mov
and
icebp
mov
jns
shl
lds
out
push
int3
psrld
bound
leave
xchg
or
pusha
mov
test
sub
out
xchg
jae
frstor
cltd
les
aaa
cmp
xor
jae
mov
dec
and
les
iret
imul
adc
mov
loope
popa
xchg
shl
inc
mov
cli
pop
hlt
das
arpl
lea
sarl
shl
rorl
stos
orl
and
into
xor
fcomp
add
adc
cmp
mov
xlat
jb
xchg
pop
mov
nop
inc
sub
cmp
lds
mov
test
cwtl
mov
pop
mov
pop
testl
sarb
mov
xchg
adc
pop
mov
sbb
mov
mov
aaa
cli
movsl
pop
out
xchg
pop
dec
fcom
mov
nop
pop
sbb
cmp
out
scas
mov
inc
adc
in
rorb
rcrb
addr16
sub
push
push
jle
cld
inc
and
shlb
push
push
stos
cli
fstps
mov
lods
lea
mov
jmp
ja
mov
aaa
pop
adc
xchg
pop
je
mov
das
sahf
mov
pusha
icebp
push
and
push
and
cmp
mov
sub
rcrb
sub
sub
leave
loope
push
rcr
mov
rep
pushf
cmpsl
dec
mov
mov
sub
and
lahf
cmp
ljmp
insb
mov
dec
cs
ret
jno
mov
addr16
and
inc
jns
and
mov
cltd
pop
aas
ja
cmp
add
call
sub
ss
loopne
sub
push
orb
or
and
sbb
movsl
cmp
pop
fstpl
int3
mov
cmp
dec
sbb
dec
repnz
ds
pop
cmp
or
icebp
push
addb
out
cmp
and
data16
pop
daa
mov
dec
mov
fs
subl
push
call
stc
jmp
shrb
ljmp
lahf
repnz
xchg
mov
mov
jle
xor
push
xchg
outsb
gs
adc
xchg
es
mov
jno
push
fstpt
xchg
movsb
imul
or
arpl
jnp
rcl
out
lret
lret
jg
dec
movsb
repz
adc
sub
insb
daa
stos
mov
std
mov
pop
pushf
lods
arpl
push
sbb
sbb
and
sti
dec
xor
cmpsb
das
test
fcmovnb
imul
jns
push
adc
jl
cmc
mov
push
or
adc
mov
or
out
bound
dec
iret
hlt
pop
push
fmul
jp
adc
cwtl
jmp
sbb
sub
or
pop
xchg
and
out
push
cmpsl
and
jge
aad
fwait
xor
loope
push
push
mov
inc
adc
push
popf
dec
mov
scas
hlt
addl
dec
push
test
rcrl
test
mov
mov
ljmp
sub
jbe
nop
push
mov
xor
pop
adc
xor
outsl
inc
out
lock
adcb
adc
les
das
or
mov
sbb
xchg
repz
sbb
cmpsl
xchg
jge
out
ja
int
push
les
shll
inc
mov
inc
imul
icebp
test
loope
outsl
jo
mov
cmp
dec
fadds
sub
outsl
ss
pinsrw
mov
mov
inc
movsl
or
fdivs
and
push
mov
pusha
cmp
fldcw
mov
loop
int
leave
inc
jb
mov
addr16
push
push
shlb
ret
xchg
sub
lods
imul
sahf
icebp
ds
popf
imul
mov
rcrl
into
adc
mov
daa
rorl
jl
mov
xchg
jno
stos
xchg
hlt
cltd
push
ret
push
popf
jmp
pop
aaa
sub
js
lcall
stos
orb
call
jle
cmpsb
addr16
pop
jns
sbb
jne
mov
and
xor
add
and
dec
out
pop
xor
mov
xor
sub
dec
lahf
xchg
fsubrs
lcall
fs
jne
mov
pop
push
lea
jae
jmp
dec
jle
mov
into
push
push
pusha
mov
ds
xchg
mov
jno
mov
xlat
insl
scas
mov
inc
sub
je
enter
ljmp
pushf
rcl
dec
push
mov
lcall
jo
test
negb
jns
mov
fstpt
test
add
add
fdivl
stos
mov
dec
lret
test
adc
sbb
pop
sub
jp
movsb
or
adc
mov
pop
push
pop
add
add
cld
mov
popa
pushf
lds
or
and
int
adc
pop
out
mov
call
sub
movsl
cmpsb
movsb
dec
mov
or
je
out
pop
roll
xor
fcomp
jnp
push
lock
lods
imul
lods
icebp
xchg
inc
push
and
imul
fs
inc
orl
stos
out
hlt
test
push
orb
pop
ljmp
pusha
ljmp
cltd
add
jle,pn
insb
mov
inc
sti
and
cmp
div
fbstp
imul
mov
sbb
and
dec
push
loope
mov
xchg
insb
aad
imul
sub
pop
push
xor
test
cmc
out
xlat
jns
sub
dec
mov
fdivrl
sub
das
sbb
or
fisttpll
test
addr16
mov
in
scas
loopew
inc
mov
mov
mov
cli
sub
andl
xchg
bound
scas
gs
das
push
es
cmpsl
cmp
mov
pop
not
dec
divl
adc
lods
lahf
jp
push
sti
push
pop
inc
jle
in
sub
test
mov
push
dec
inc
pop
lcall
and
xor
and
data16
dec
add
fisttpl
jno
fcmovu
sbb
fiaddl
cmpsl
pop
ss
stos
cmp
stc
mov
or
cld
addr16
push
or
out
test
jmp
in
lods
push
cmc
xlat
inc
cmp
outsl
mov
cwtl
xchg
xchg
and
adc
xchg
sarb
jo
and
mov
dec
out
js
enter
add
pop
adc
jle
xor
and
call
les
add
mov
cmpsb
lret
loope
adc
data16
push
mov
xchg
mov
shrl
push
mov
sbb
dec
cmpsl
xchg
or
pop
and
cmp
push
adc
lahf
or
pop
in
mov
fidivs
xor
sub
add
ret
lcall
sar
int
xchg
imul
add
sub
cli
cmp
stos
add
jle
lret
xchg
push
mov
pop
scas
dec
pop
or
dec
pop
sbb
cltd
or
jo
lret
ud2
push
pop
cmpsb
sub
and
imul
jbe
dec
stos
test
test
in
xchg
aaa
jae
iret
adcl
push
jo
sbb
adc
pop
push
dec
fcmovnbe
cmp
in
adc
ss
std
xlat
inc
enter
dec
leave
stc
int
mov
sbb
dec
aad
mov
cmp
adc
jbe
mov
cmpb
xlat
and
sbb
jl
xor
or
jno
pop
push
leave
jbe
pop
or
xor
clc
sbb
loopne
es
ret
dec
outsb
lret
hlt
lahf
cmpsb
jno
inc
inc
jmp
cs
paddd
out
lret
push
iret
or
sub
or
sub
inc
jmp
xchg
leave
mov
jns
popa
sbb
pop
dec
outsb
mulb
jbe
dec
shr
cli
cld
dec
jne
in
call
xor
ret
mov
jge
cmp
test
sbb
jne
inc
push
ret
popa
xchg
xor
pop
push
out
pop
ds
push
popa
jmp
inc
push
dec
inc
mulb
jle
mov
mov
xchg
sub
push
mov
stc
rorb
sbb
sbb
repnz
rcrl
and
pop
pop
push
mov
add
cwtl
push
in
in
push
sbb
repnz
mov
dec
sub
inc
sub
test
mov
popf
mov
mov
jns
pop
fs
enter
jae
xchg
mov
shll
push
stos
lahf
inc
pushf
shlb
push
push
fnstenv
mov
testl
xchg
dec
inc
daa
lea
sbb
int3
lods
xchg
mov
push
sub
mov
dec
cmpsl
fs
movsl
jmp
enter
mov
inc
or
add
sahf
inc
inc
fstpl
pop
dec
add
hlt
imul
xchg
jmp
cmpsb
enter
jo
outsb
in
pop
movsb
and
jmp
cmc
jae
inc
cmp
imul
add
xor
push
xchg
xchg
sbb
sub
mov
push
popf
mov
or
repnz
mov
shlb
pushf
inc
out
xchg
lahf
dec
test
xchg
mov
push
pusha
push
cmp
mov
popa
lea
jl
inc
icebp
fildl
sub
mov
aad
adc
lret
mov
adc
or
mov
cmp
test
mov
sar
sti
dec
push
dec
or
jo
pop
push
sbb
loope
or
sub
movsb
jg
xor
inc
stos
mov
mov
lods
insl
jp
push
js
in
cmp
mov
les
or
pop
imul
sbb
mov
scas
or
sti
aas
pop
rcl
loop
mov
xor
adc
sub
out
lret
sarb
sub
sub
test
bts
mov
mov
addl
fnstcw
cmp
sub
mov
sub
cmp
add
shlb
mov
push
jbe
mov
xor
mov
and
pushw
mov
sbb
ds
iret
leave
adc
fisttps
arpl
sbb
icebp
ja
xadd
adc
sbb
cmp
mov
sub
or
mov
mov
or
mov
vpmuludq
jle
xor
sbb
scas
popa
int3
popa
cmc
dec
lods
xchg
adc
ja
imulb
push
pop
out
and
add
jp
sub
shl
subb
in
cmpsb
ret
cli
jb
pop
mov
cmp
sbb
pop
mov
call
pop
pusha
push
je
sub
jb
ret
jp
ljmp
popa
out
push
push
andb
xor
inc
jbe
mov
sub
das
xchg
push
scas
in
cmpsl
clc
and
mov
pusha
mov
pop
cmp
add
out
adc
insl
sbb
push
pushf
and
adc
push
add
push
mov
pop
add
test
dec
push
or
ret
pop
cld
cmp
int
out
cmpsb
or
adc
mov
cmpsl
pop
fistl
sbbb
aam
adc
push
jae
imul
jp
popa
sub
mov
aas
adc
push
jno
mov
adc
dec
out
pop
scas
jmp
xor
or
cmp
stos
enter
shlb
adc
cwtl
push
loopne
lds
test
loop
testl
movsl
shrl
push
and
adc
shl
pop
inc
add
mov
lods
mov
icebp
dec
add
push
and
mov
addr16
seta
xor
pusha
mov
and
push
xorl
ret
or
sbb
ror
push
pop
dec
adc
mov
icebp
push
int3
cmc
insb
lahf
pop
mov
test
mov
cmp
or
sub
out
adc
inc
fimull
incb
xchg
sti
xchg
rcll
dec
ljmp
shlb
bnd
push
shlb
inc
loopne
mov
leave
push
fnsave
data16
or
or
outsb
xchg
andb
cld
out
int3
push
push
fwait
sbb
fwait
or
xor
mov
je
sbb
cltd
mov
lods
sbb
enter
imul
xor
lret
pushf
pushf
ret
mov
mov
aad
outsb
in
cmp
out
pop
fisubrl
or
fs
pop
fiaddl
adc
mov
jo
jo
movsl
sub
popa
arpl
lock
xor
sub
xlat
ret
or
xchg
rol
xor
lods
xorl
js
pop
jg
dec
lret
ljmp
rcrl
xor
insb
jl
push
dec
dec
jecxz
pop
or
pop
je
cmp
out
or
es
pop
mov
clc
repnz
add
int3
insl
test
lcall
cs
shrl
out
mov
addl
pop
movl
arpl
jg
cmp
mov
imul
xchg
pop
gs
into
dec
sbb
into
dec
cld
sarl
sbb
mov
icebp
cmp
push
test
xor
mov
lcall
jno
jp
js
ljmp
mov
shlb
pop
xor
imul
fistpll
cmp
stos
loopne
push
jge
mov
jmp
cltd
arpl
push
cmp
lcall
fwait
or
jecxz
jb
sub
xchg
fiadds
lock
jle
and
lcall
leave
cmp
dec
and
insb
call
xchg
aam
lods
add
mov
mov
fsts
enter
bound
iret
xchg
xor
iret
sbb
cwtl
into
jge
scas
pushf
aas
cwtl
push
cld
mov
pusha
pop
aad
stc
xor
test
add
push
cmpsl
pop
in
cmp
scas
add
or
pop
xorb
aas
mov
xchg
mov
sub
or
idiv
inc
and
scas
lcall
dec
adc
loop
sub
aad
stos
inc
ljmp
loopne
pop
jo
shlb
jp
je
mov
in
addr16
out
movsb
pop
inc
push
test
jns
les
lcall
cmp
push
cmp
aaa
out
push
sub
vmwrite
cwtl
jb
lock
cmp
push
cmc
es
mov
pushf
aad
int3
insb
inc
xor
xchg
cwtl
and
lret
jb
or
push
repz
xchg
dec
cmpsb
push
dec
and
pop
mov
and
test
cmp
test
or
fsubr
cmp
imulb
pusha
test
pusha
in
and
iret
xchg
inc
jle
mov
fs
stos
xchg
flds
bound
scas
pop
pop
lds
std
dec
adc
cmp
jecxz
push
arpl
sbb
mov
xorb
adc
sub
mov
fs
sahf
mov
adc
data16
push
jecxz
pop
push
int3
movsl
cmp
cmp
mov
loope
test
daa
pop
mov
xchg
js
sbb
jmp
cld
xchg
shrb
stos
in
fs
leave
arpl
arpl
push
mov
loope
int3
pop
cli
xchg
lret
adc
add
mov
and
mov
mov
inc
insb
int
sub
mov
and
sahf
dec
pop
add
jmp
aas
xchg
rclb
jge
lret
xchg
xor
dec
ficoms
add
push
cwtl
arpl
sub
lea
push
aas
filds
adc
xor
xchg
mov
test
jns
mov
outsl
lret
mov
push
test
sub
out
fisttpl
jnp
je
lahf
adc
mov
jbe
cmpl
sarb
cmpsb
jl
into
pop
icebp
or
inc
fs
divl
pop
dec
and
ret
ret
cmp
sub
ret
or
cmp
jge
push
les
sbb
std
into
jae
fs
insb
add
ret
jl
or
jnp
test
xlat
orb
push
add
xchg
shrl
cmpps
xlat
mov
loope
adc
incb
scas
and
inc
mov
rcrb
call
out
ret
scas
lcall
sahf
dec
test
xchg
jb
movsb
xchg
push
cltd
aam
mov
and
in
dec
arpl
jle
rep
cmpsl
daa
shrb
xchg
fstpl
mov
and
cmp
adc
subb
cmp
dec
add
aas
lock
rolb
xchg
gs
jo
mov
push
mov
adc
out
sub
bound
xchg
adc
rorb
out
aam
cmpsb
lods
adc
xchg
inc
ljmp
es
enter
sahf
test
mov
or
or
fsubrs
mov
pop
mov
or
and
or
in
mov
mov
lods
cmpsb
aaa
push
push
and
jns
out
dec
out
in
sub
push
push
xorl
xlat
and
enter
add
inc
mov
or
int
cmpl
sbb
sbb
push
gs
or
pop
sbb
mov
add
lcall
orl
or
mov
jb
mov
jnp
mov
ret
jp
shlb
adc
mov
or
std
mov
xor
out
adc
xchg
push
repz
or
sbb
jle
data16
pop
ja
outsb
lahf
mov
mov
pop
sub
adc
in
lcall
daa
add
popa
mov
enter
popa
leave
sub
enter
cmc
in
push
or
pop
ss
es
fildll
cmp
ss
test
dec
push
cmp
test
mul
jo
mov
jecxz
popa
shrb
mov
push
sarb
lret
aaa
xchg
outsl
push
ja
inc
testb
test
xor
imul
shlb
test
xor
jns
or
push
sub
or
lret
ss
adc
int3
scas
mov
loopne
or
adc
xor
cs
mov
roll
es
cmp
fsubrs
mov
movsl
das
and
andb
mov
fistpll
js
sti
sub
sub
cli
inc
sub
pushf
and
dec
jle
jle
sbb
clc
dec
cmp
mov
xor
push
out
dec
movsl
mov
daa
popa
adcb
add
mov
pop
out
mov
pop
out
mov
sub
lock
addr16
setns
cmpsb
pushf
cmp
das
jg
cwtl
addr16
mov
dec
dec
in
sub
adc
add
mov
or
jb
push
adc
push
popa
test
out
push
cmp
mov
mov
rolb
or
inc
mov
xchg
icebp
jne
stc
push
ja
mov
loope
lret
mov
dec
repz
jb
std
xchg
mov
inc
scas
add
outsl
int
cld
out
mov
sub
jmp
scas
call
sahf
lret
jg
cmp
enter
in
andl
es
adc
into
mov
das
in
ss
insl
add
mov
push
cmp
mov
fnstcw
push
jb
push
outsb
lock
call
mov
sbb
pop
movsb
or
dec
loopne
mov
jns
incb
lods
lock
sub
adc
or
sti
fldcw
in
mov
mov
dec
pop
out
in
popa
enter
fstps
sbb
in
push
sbb
pop
lahf
test
push
sbb
test
aad
or
ficoml
jb
xor
jb
jo
pop
push
xor
xchg
mov
rorl
push
je
ja
mov
pusha
test
xchg
fadds
fcompl
jbe
jo
mov
pop
ret
in
fisttps
data16
jecxz
inc
mov
repnz
jne
push
ja
fs
test
gs
into
insl
xor
pop
popa
jne
ja
add
cmp
sub
add
add
adc
xchg
add
add
popf
mov
data16
enter
and
cltd
push
dec
xorl
data16
mov
cmp
pop
roll
ret
hlt
pop
add
aad
test
inc
outsb
cwtl
cmpsl
icebp
add
ret
int3
dec
pop
cwtl
shlb
lahf
xchg
jo
sahf
jae
pop
sub
popl
mov
shlb
movsl
add
lret
pop
test
insb
jle
cmpl
lret
pop
stc
divb
push
loope
xor
movsl
frstor
jmp
dec
xchg
and
je
aam
mov
shrb
cmc
pop
pop
cmp
xor
mov
fsubr
sti
aam
nop
pop
sub
jecxz
scas
lret
and
fmuls
and
loope
pop
into
xchg
bound
sub
arpl
stc
inc
negb
mov
jae
or
push
aad
jle
mov
mov
push
pop
xchg
sbb
cmpsb
xchg
add
stc
mov
mov
inc
add
or
push
imul
xchg
push
sub
clc
push
jle
pop
xchg
in
adc
dec
adc
xchg
in
sub
mov
dec
jnp
test
ja
or
mov
inc
or
sbb
sbb
dec
cs
loop
inc
push
rclb
popf
mov
movsl
mov
inc
cltd
fsubs
cmpsb
jno
ss
pop
ljmp
adc
sbb
insl
lock
sub
fwait
sub
inc
xchg
out
dec
pop
stos
ljmp
adc
mov
jno
cmp
xchg
aaa
adc
out
lea
enter
ja
pop
xchg
fwait
xchg
and
adc
jnp
in
sti
and
pop
sahf
sub
xchg
ror
mov
mov
into
push
lods
cmp
or
dec
fnstenv
adc
fwait
sub
das
or
orb
xchg
mov
arpl
enter
out
adc
dec
jns
movsl
ja
nop
mov
dec
fwait
test
gs
dec
scas
dec
sbb
sub
inc
rclb
add
data16
push
xor
fwait
aad
out
mov
fistpl
mov
fs
aam
sbb
shr
inc
fcom
cmc
out
cmp
test
xor
insl
nop
mov
xchg
mov
shrb
scas
sbb
push
mov
mov
ljmp
out
dec
cmpsb
movsb
sbb
in
mov
fcompl
aaa
or
mov
adc
push
jae
arpl
mov
mov
orb
aas
xchg
ljmp
or
jo
sub
cmp
or
fstp
ja
push
xchg
mov
xchg
fcompl
rcrl
cs
and
xchg
mov
lcall
mov
fucom
mov
sbb
out
mov
mov
sbb
sbb
inc
sbb
call
mov
adc
xor
insl
push
push
mov
mov
cwtl
icebp
jno
pop
jecxz
insl
lahf
sub
mov
pop
outsb
mov
insb
pop
mov
outsb
mov
dec
dec
ds
lahf
sub
inc
mov
mov
fadd
xchg
inc
push
xchg
mov
popa
sti
enter
arpl
jne
hlt
xchg
cmp
jno
sub
jmp
or
xor
sub
mov
push
inc
mov
fwait
xchg
mov
gs
dec
stos
in
push
push
sbb
pop
mov
xchg
dec
mov
push
jle
aad
aam
mov
fstps
cltd
fldt
xor
clc
push
jl
rcrl
mov
sub
push
mov
aad
out
dec
or
sbb
repz
test
cs
inc
mov
or
or
in
pop
dec
pop
sbb
out
jno
fldenv
stos
cmp
pop
repnz
cmp
xor
inc
or
sub
cs
cmp
lret
enter
fisttpl
mov
inc
xchg
mov
mov
mov
out
scas
push
xlat
dec
adc
or
push
mov
into
int3
mov
sbb
pop
scas
aas
pushl
mov
repnz
ss
xchg
dec
push
dec
pushf
int3
jg
cmpsl
pop
ret
pop
jl
dec
xchg
iret
rcl
mov
hlt
or
push
adc
mov
divl
push
mov
cmp
jg
jbe
dec
xchg
frstor
lea
mov
and
sub
inc
int3
bound
jmp
jg
push
in
lret
popa
lods
push
xchg
xor
sub
cld
jnp
add
jnp
cwtl
mov
insl
cmp
pop
mov
jno
mov
lea
lcall
cs
shr
cmp
cmp
mov
stos
in
popa
decl
lret
aaa
pusha
ljmp
in
xchg
xchg
adc
aas
rcrl
push
movsl
add
rep
dec
daa
jae
cmp
in
add
push
push
les
or
data16
frstor
loopne
xor
mov
mov
jno
loopne
fdivp
mov
mov
in
jle
fdivl
ror
xor
mov
shrl
cli
mov
sub
movsl
mov
push
test
fsubr
mov
xchg
adc
daa
lds
mov
sbb
cmp
lret
mov
repnz
cmpsl
subl
leave
add
iret
sbb
mull
push
adc
jnp
jns
popf
pop
and
stos
jnp
cmp
adc
lock
clc
rclb
ret
sub
xchg
cmp
arpl
xor
inc
pop
scas
push
pop
test
pop
fwait
loop
pop
enter
data16
add
and
mov
fwait
inc
xor
mov
stc
test
or
xchg
popa
adc
rep
stos
pop
cmpsb
mov
fs
jne
mov
pusha
or
xorl
clc
pusha
jb
leave
and
mov
mov
adc
cmpsb
loop
int
mov
addr16
lahf
stos
in
into
lods
dec
adc
cmc
adc
cli
xchg
stc
adc
int
out
insb
xlat
movl
push
out
jne
pop
fadd
jecxz
sti
inc
jmp
push
mov
mov
sub
sti
xor
and
push
in
mov
push
jns
mulb
cld
pop
fisttpll
xchg
mov
xor
ret
scas
insl
ljmp
mov
cmp
xchg
shll
jno
out
push
xchg
ss
sti
xorl
shlb
adcb
test
mov
fisubl
shlb
mov
sbb
sarb
push
inc
pusha
iret
cli
adc
stos
pushf
adc
addr16
sub
negl
sti
arpl
adc
mov
cmp
aad
push
cmpsb
cmp
mov
scas
push
mov
mov
shl
rcl
sub
stos
push
loope
aas
xor
pop
add
mov
imul
jne
fsubp
imul
lahf
out
or
insb
std
fistps
mov
outsl
jmp
push
out
cltd
mov
jnp
xchg
xor
or
mov
mov
and
outsl
pop
and
scas
mov
mov
movsl
cmpsl
add
adc
test
call
inc
icebp
push
outsl
imul
sub
pop
lods
sbb
add
loop
push
and
ja
negb
xchg
add
cwtl
mov
das
or
fisttpl
or
xor
sbb
xchg
dec
dec
rorl
jg
sbb
mov
or
adc
inc
iret
repnz
in
loope
ja
rolb
sbb
notb
push
les
testl
inc
subl
xchg
test
xchg
je
xchg
adc
mov
dec
lahf
jl
or
xor
push
xor
push
jae
aas
js
adc
dec
enter
in
into
cld
mov
fcomp
ss
fidivrs
add
xor
and
repz
loopne
test
push
xchg
in
and
cli
add
sub
fldt
add
test
popa
xchg
jl
cmp
cld
jmp
inc
outsb
ja
dec
jbe
push
aas
in
mov
out
lds
out
daa
mov
sub
jo
mov
rolb
jge
lods
mov
sbb
xor
xlat
fildl
mov
pop
cli
jo
mov
dec
aad
jno
mov
push
in
pop
es
xchg
adc
cmc
fisubrs
pop
adc
mov
lds
ljmp
out
sub
je
pop
movsb
dec
stos
cmpsb
in
xor
pop
jnp
sarl
xchg
fucom
xchg
fdiv
or
les
xchg
sti
jl
dec
sbb
into
jne
add
lcall
sbb
cld
mov
lret
sub
leave
mov
int
xor
lret
sub
dec
or
jmp
push
and
ljmp
lds
test
int3
jbe
iret
cmp
popf
divl
or
in
dec
push
inc
jecxz
rorb
cmpsl
push
sub
iret
in
imul
sarb
aaa
pop
repz
fnstcw
out
aam
les
adc
mov
out
js
adc
rcl
fdivs
xchg
stc
loope
push
std
inc
lods
mov
add
test
das
popf
cltd
mov
pop
pop
test
push
jmp
inc
fwait
jo
cmp
push
leave
cli
adc
pop
popa
jl
pop
daa
popa
xor
addb
adcb
xor
test
jmp
cltd
enter
inc
pop
lret
xlat
push
out
bound
push
scas
incl
fsubrs
xchg
inc
in
out
add
mov
push
jb
cmc
lahf
and
jns
rol
cmp
les
mov
pop
mov
mulb
sbb
push
popa
cld
push
clc
or
rep
leave
out
fildl
ret
jnp
jno
cmp
popa
push
push
imul
sbb
jle
popf
jnp
or
sub
std
imul
cmc
mov
and
ret
loop
cmp
fwait
jecxz
leave
push
out
aad
cmp
push
lods
icebp
fisttpl
out
xchg
enter
lock
mov
add
ret
out
mov
xchg
decb
xchg
popa
or
jae
jle
ficompl
dec
xor
inc
daa
adc
pop
cli
mov
in
aaa
and
or
cmp
inc
xchg
lea
scas
inc
xchg
mov
cmp
test
pop
sbb
ja
mov
cmpb
mov
cwtl
inc
xchg
test
out
xchg
push
pop
adc
in
stos
pop
pop
mov
or
fbstp
xor
int
xor
xchg
aaa
mov
ja,pt
dec
mov
mov
mov
pop
ljmp
push
imul
les
cmp
xorb
sub
mov
clc
add
flds
or
movsb
pop
sub
mov
sahf
add
cmpsb
jnp
arpl
arpl
pop
jl
in
bound
fwait
movsb
and
fimuls
cmc
jnp
dec
jb
inc
daa
test
pop
data16
jno
xchg
adc
jmp
mov
pop
jne
mov
mov
insl
cwtl
add
mov
push
negl
and
push
aas
addl
rcll
xchg
lahf
les
add
lods
or
test
mov
jl
test
stc
lds
xor
mov
stc
ljmp
in
push
xor
stos
nop
bound
in
movsl
push
rcll
xchg
jle
addr16
lods
cmp
cmp
addr16
out
xchg
stc
ds
xor
jle
sub
sbb
inc
xchg
inc
imul
inc
xor
mov
xchg
sbbb
mov
inc
call
inc
sbb
push
into
xchg
test
jb
and
cmc
xor
in
pop
fistpl
xor
jnp
leave
lcall
mov
ljmp
mov
aaa
cmpsb
sbb
or
jmp
jge
dec
mov
push
push
jnp
sbb
pop
jo,pt
or
jge
shll
imul
mov
dec
mov
mov
out
loopne
enter
std
test
xor
fidivl
outsb
pushf
repz
jmp
movsb
test
psubsb
stc
cmpsb
dec
insb
mov
sub
popf
push
sbb
jle
mov
fidivrs
icebp
sub
pop
rol
mov
inc
cmp
mov
adcb
out
xlat
xor
sti
test
sub
and
jg
pushf
jae
cmc
sbb
ljmp
adc
dec
dec
pop
xor
into
or
adcl
insb
test
xchg
add
add
mov
fwait
pop
sub
jmp
inc
and
leave
test
test
cmp
test
inc
dec
push
mov
xor
sbb
rcrb
sbb
jmp
hlt
xchg
icebp
xor
mov
jmp
inc
xor
in
cld
dec
sub
inc
std
bound
lahf
jecxz
or
movsb
push
inc
sbb
push
sahf
nop
dec
mov
repnz
test
mov
ss
jns
cmc
cs
jns
pop
xchg
decl
cld
ljmp
xor
sbb
cltd
jbe
lock
mov
out
cmc
xchg
sub
mov
popf
xchg
out
pmaxsw
sbb
jge
out
mov
cmp
mov
aam
dec
jle
cmp
push
leave
mov
xchg
xchg
movsl
sahf
lods
push
das
rolb
cmp
mov
popf
loope
scas
stos
ret
cmc
inc
test
push
pushf
push
dec
inc
push
pop
push
adcb
dec
test
mov
xlat
movsb
in
dec
pop
mov
mov
movl
lahf
mov
cmp
fcomps
inc
cmc
add
repnz
sbb
inc
cltd
lret
iret
mov
sti
sub
test
mov
ss
lea
fcoms
loope
xchg
add
adc
es
jns
sub
fdivrp
add
ret
xchg
lret
iret
jb
fdivp
jmp
sar
pop
xorb
mov
mov
test
adc
mov
inc
arpl
cmp
or
xor
mov
push
push
xchg
lds
mov
faddl
push
mov
out
orb
push
fidivs
int3
jne
jp
push
cltd
movsl
inc
xchg
push
repz
push
addr16
sbb
inc
pop
xchg
adc
xor
or
jl
pop
lock
imul
mov
xor
mov
das
mov
mov
out
idivb
mov
pop
mov
insb
mov
sarb
dec
xor
push
mov
inc
push
in
sarl
imul
hlt
out
push
xchg
arpl
scas
pop
rorb
addr16
mov
ret
nop
lds
add
add
jb
subl
sub
ret
dec
xchg
test
push
rcrb
push
inc
jecxz
inc
and
jge
push
shlb
das
loop
mov
add
test
es
push
test
xchg
cmpl
lcall
push
push
fnstcw
gs
push
cwtl
fadds
xor
scas
push
inc
lcall
mov
inc
cmc
sbb
ja
call
cmp
jg
addl
ret
or
loop
ljmp
inc
xchg
mov
insl
movsb
sbbw
pop
sahf
xor
test
ja
cmp
push
adc
inc
stos
cmp
push
jne
sar
movsb
shlb
or
sbb
imul
je
jmp
xchg
enter
and
mov
icebp
ja
shrb
fistps
sbb
lds
lret
mov
jns
addr16
dec
mov
sub
lea
mov
push
in
out
mov
and
lods
fidivrs
fistpl
add
roll
push
sbb
xchg
and
mov
jecxz
jg
pushf
nop
js
dec
cli
fldt
adc
cmp
sbb
into
or
add
aaa
mov
movsb
mov
daa
cmpsl
jae
pop
jg
jle
and
nop
aam
cs
mov
in
jmp
xor
iret
or
loope,pt
xchg
mov
mov
orl
lcall
mov
sub
mov
pop
cmp
push
mov
add
test
out
stos
dec
xor
into
stos
lret
adc
push
jmp
jbe
call
push
add
xchg
imul
scas
popa
das
loope
push
or
xchg
adc
jns
pop
xchg
movsl
mov
sub
subb
jo
in
mov
pop
call
fcmove
insb
call
mov
cmp
popa
jecxz
int
cmp
xchg
cmp
adc
fdivrs
inc
mov
js
shlb
repnz
inc
pop
and
in
mov
outsl
std
ja
mov
sub
jno
sub
aas
jl
sub
cwtl
fcoms
inc
loope
mov
lcall
xchg
in
push
sub
pop
fld
scas
and
mov
rcrb
shlb
push
mov
es
add
dec
dec
pop
data16
inc
das
cli
add
lea
xor
in
push
shlb
hlt
push
sbb
and
pop
xchg
jge
icebp
xor
jg
aaa
push
jbe
into
push
or
sub
lds
daa
bound
jmp
sar
jb
cmp
mov
mov
pop
xchg
sahf
push
jo
jns
or
adc
shl
xchg
outsb
inc
add
jle
or
or
sbb
std
adc
cli
test
sbb
cvttps2pi
lods
jo
scas
outsl
test
sub
in
wrmsr
dec
nop
inc
mov
scas
ret
add
test
mov
in
pop
and
mov
dec
mov
xor
pushf
sahf
mov
xchg
adc
push
lret
mov
rcrb
cwtl
jae
shr
sbb
sarl
cltd
dec
push
sub
ret
or
push
dec
mov
dec
jae
pop
sti
mov
rcr
mov
mov
enter
add
or
das
bound
dec
add
xchg
pop
in
adc
mov
cmpsb
add
mov
in
jge
add
mov
jmp
mov
jns
xchg
xchg
push
ljmp
std
push
cmovle
mov
jle
int
imul
pop
ficoml
lret
mov
sbb
arpl
lret
fwait
mov
xchg
out
test
or
xlat
jae
mov
int3
pop
in
shl
push
test
xor
sub
jns
jo
add
in
inc
pusha
mov
sahf
roll
mov
dec
das
es
push
sub
les
ds
and
xor
enter
sub
sub
jno
pop
adc
mov
xor
jne
psrad
xlat
push
js
fsub
aad
jp
sar
add
or
mov
add
negl
jne
add
pop
sbb
mov
dec
xor
ret
data16
frstor
push
mov
je
push
and
stos
sub
stos
mov
or
mov
inc
arpl
push
push
adc
sub
xor
or
inc
mov
or
pusha
or
push
jmp
mov
mov
out
ds
sbb
mov
inc
sbb
in
cmp
lea
ds
or
clc
loopne
lds
and
add
xchg
repz
lods
dec
fisubs
mov
dec
aaa
inc
ja
dec
inc
sbb
and
shrb
adc
fmull
dec
cld
cld
das
dec
pop
gs
loop
je
in
inc
lcall
pop
xchg
jne
cmp
sbb
sub
jb
mov
mov
push
pop
ret
and
aam
mov
scas
js
and
or
mov
repz
fists
shrb
pop
stos
push
cmpsb
mov
cld
in
push
arpl
repnz
aaa
lahf
rsqrtps
test
mov
std
call
popf
aas
dec
xchg
mov
pop
dec
loope
cmp
pop
jmp
mov
paddb
and
les
shlb
scas
stc
int
fldenv
loopne
sbb
mov
aaa
push
lods
cmp
out
inc
outsl
xchg
into
jge
mov
sarw
dec
jle
stos
call
push
jecxz
mov
pop
push
or
lock
mov
inc
fnstcw
add
loopne
leave
sbbb
repnz
pop
mov
mov
mov
fstl
pop
in
cmpsl
pop
or
xor
aas
sbb
xor
insb
adc
je
sbb
add
or
inc
cld
inc
insb
mov
punpcklbw
ret
add
ror
das
loop
sbb
fstps
dec
xchg
and
and
sti
iret
ds
adc
jne
mov
mov
out
jne
xor
stos
fsubr
es
xchg
cmpsb
push
mov
int3
aas
sahf
add
xchg
aaa
ja,pn
push
pop
pop
lret
mov
push
data16
xor
pop
loop
je
jge
mov
and
jl
insb
mov
inc
aas
xor
imul
cmp
add
cmp
scas
fwait
clc
arpl
inc
add
adc
inc
cmp
jae
sub
ret
popa
dec
les
test
ret
xchg
fldl
xor
sar
jnp
dec
test
inc
loopne
gs
cltd
sub
xor
pop
inc
nop
std
dec
in
out
sti
int
movsl
pop
or
in
and
nop
nop
lods
test
imul
mov
sbb
aam
dec
in
mov
adc
cltd
enter
mov
jne
dec
mov
ss
ja
movsl
jg
xlat
and
jne
mov
repz
subl
jle
push
sub
add
adc
xlat
or
and
ljmp
jmp
pop
rol
mov
insb
or
ss
xchg
mov
push
sub
dec
pop
push
mov
icebp
mov
ror
int3
jecxz
clc
push
mov
cltd
cmp
mov
push
movsl
pop
ror
xchg
loope
inc
mov
cmp
jbe
fisttpll
jl
cli
loop
add
mov
pushf
add
test
pop
pop
cmp
adc
sbb
into
sub
xchg
add
sahf
adc
and
xchg
jnp
test
das
idiv
adc
loopne
cmp
mov
xor
or
test
nop
push
lret
call
sti
clc
mov
mov
jge
mov
mul
push
cmp
mov
mov
pop
mov
out
inc
inc
mov
sbb
rclb
scas
out
popf
jno
mov
xchg
xor
cmp
cwtl
and
psubq
or
stos
pop
jnp
fistpl
sbb
dec
das
in
mov
movsb
push
ret
pop
and
xchg
cld
sti
mov
mov
jecxz
ret
adc
dec
mov
push
xchg
inc
add
dec
dec
push
adc
dec
mov
jg
vcvtps2pd
sub
mov
pop
xchg
call
mov
inc
imul
out
fiadds
inc
cltd
and
adc
cmc
inc
jbe
mov
jg
or
adc
ja
shll
add
jb
push
jb
and
std
mov
mov
mov
push
adc
mov
cmpb
stos
in
ss
imulw
fists
sbb
aad
repz
dec
or
aas
adc
and
sbb
jb
sahf
cmpsb
cld
mov
daa
pop
jae
inc
or
push
xchg
xchg
call
jnp
dec
sbb
jge
mov
ljmp
fdivr
js
sub
insl
xor
es
outsb
jnp
jae
jae
cmp
adc
cld
mov
cld
addr16
push
dec
loopne
mov
movsl
ret
stc
fsts
mov
jle
adc
rcl
shlb
inc
inc
or
or
ret
bt
cltd
sub
rcll
fs
xor
movsb
les
jle
icebp
scas
mov
mov
sub
sbb
or
pop
or
and
jl,pn
inc
sub
xchg
rorb
in
cmp
mov
xlat
mov
cmp
leave
pop
gs
fs
fdivrs
xchg
pop
int3
ja
fcmovbe
xor
jnp
jo
xchg
jne
pop
jg
sbb
sub
xchg
cli
inc
adc
fstl
sub
lock
std
setb
out
mov
xlat
adc
loope
jl
mov
mov
insb
stos
xor
dec
inc
frstpm(287
xchg
mov
mov
repnz
pop
adc
rcr
subl
mov
negb
je
inc
cmpsb
xchg
mov
imul
push
sub
mov
outsl
jno
mov
cmp
popa
dec
fnsave
shl
stos
xchg
test
imul
xlat
arpl
or
and
enter
clc
jns
or
sbb
dec
imul
test
dec
repz
test
or
ret
cltd
lcall
outsl
mov
pop
cwtl
sahf
inc
fdiv
adc
jae
iret
pop
jne
push
enter
push
lcall
test
sti
mov
pop
mov
mov
cwtl
cmpsb
ja
xchg
mov
push
sarb
push
push
mov
call
lock
movsb
cs
and
loopne
test
add
xchg
inc
fs
jl
xor
std
ja
jp
adc
dec
cwtl
mov
xchg
sub
into
sbbl
jle
xchg
mov
mov
adc
arpl
jmp
add
inc
inc
test
dec
cwtl
cwtl
sbb
imul
ret
outsl
sahf
mov
pusha
add
cmpsl
lret
insl
test
ljmp
sti
inc
in
mov
inc
push
loop
rcrl
lds
xorb
shll
and
out
add
or
into
mov
ja
test
dec
push
add
and
mov
aam
push
je
and
mov
and
xchg
sub
inc
cmc
jne
cmpsb
or
cmp
jnp
add
lahf
jecxz
jnp
cmp
sahf
fnstcw
mov
out
jno
bound
sub
rcll
pop
cld
xchg
out
out
mov
cmp
in
xchg
insl
test
xchg
pop
xchg
gs
or
sub
adc
dec
and
cltd
cmpsl
and
pop
sub
adc
rorb
pop
lods
lock
icebp
es
jae
push
test
fwait
outsb
and
sub
dec
mov
mov
xor
push
iret
mov
push
cli
scas
or
out
mov
sbb
or
xchg
mov
lcall
sbb
add
push
and
pop
movsl
add
sbb
push
divl
lods
mov
jno
sbb
cli
jb
or
rorl
sbb
aad
or
into
xchg
jns
push
pop
nop
shll
fwait
mov
imul
xor
loopne
and
push
add
and
into
lea
std
movsb
push
pop
pop
adc
or
xor
mov
int3
mov
mov
mov
outsl
outsl
dec
add
xchg
dec
xchg
adc
or
insl
sbb
push
and
shr
adc
stos
int3
push
dec
rorb
mov
or
and
cmpsl
ret
inc
cld
fcmovne
xchg
lock
push
xchg
imul
ss
fldenv
mov
loope
add
outsl
inc
fistl
aam
cmp
mov
dec
outsl
cmpsl
inc
icebp
and
mov
mov
jmp
mov
in
aaa
mov
xor
outsb
mov
popa
and
popl
out
mov
xchg
cwtl
popf
ljmp
cmc
adc
sub
fisttpl
push
je
fbstp
lds
jle
out
in
pushf
imul
jecxz
jecxz
mov
cmc
repz
cs
jns
mov
bound
and
sub
sub
adc
sub
and
sbb
pop
insl
or
hlt
xchg
sub
add
sahf
and
cmpl
test
sbb
dec
imul
int3
inc
or
and
xlat
fmulp
and
fnstsw
cltd
dec
adc
lods
jno
xlat
cmp
iret
out
add
jp
jl
mov
ret
lcall
out
adc
mov
pop
add
les
dec
mov
mov
mov
std
lods
mov
adc
mov
in
push
inc
mov
rcl
ja
in
and
out
scas
int
adc
in
sbb
push
lods
xchg
ret
roll
addl
pop
push
mov
cmp
stos
mov
xchg
jmp
fsubs
negb
into
int
pop
or
loope
or
push
scas
leave
dec
jl
out
das
popf
xor
pusha
daa
ljmp
jg
dec
iret
fidivrs
add
inc
jbe
shrb
lret
cmpsl
jl
inc
call
mov
cs
cmp
push
pop
adc
out
push
loopne
lahf
and
ret
or
aas
mov
and
adc
sub
cmp
jae
inc
bound
inc
sub
add
jne
cli
xchg
pop
pushf
aas
sub
out
cli
sbb
xchg
addr16
fcmove
pop
push
add
gs
insb
jmp
mov
jle
in
mov
out
xlat
in
cmovg
mov
xor
imul
cli
jl
sbb
xchg
in
pop
bound
test
loope
jge
push
sbb
aam
jb
or
xlat
mov
xor
insb
dec
clc
lcall
cwtl
mov
mov
add
xchg
aam
stos
mov
sub
xchg
xchg
cli
mov
test
call
pushf
xchg
inc
pop
in
shll
outsl
and
scas
or
mov
pop
adc
pop
or
pop
stos
mov
mov
add
or
jge
cmp
cmp
cli
movsl
dec
outsl
xchg
in
jae
data16
pop
sbb
dec
bound
lret
inc
out
cs
cmc
ja
xchg
dec
outsl
sbb
data16
or
lret
pop
pop
aaa
xchg
cmc
jecxz
jl
in
das
jo
mov
jne
das
xlat
inc
jns
pop
jg
inc
les
adc
out
push
insb
ficoml
notl
push
xchg
push
adc
rol
dec
add
mov
cmp
sbbl
in
sub
dec
aad
or
xor
jb
fidivl
jo
dec
test
pop
and
mov
or
ds
mov
jne
iret
out
lret
fsubs
outsl
in
xchg
stos
aam
je
out
sahf
gs
or
lcall
mov
fadd
add
int
mov
in
mov
jo
dec
jne
xchg
push
jae
je
jg
adcb
dec
test
push
mov
cmp
mov
cmp
ljmp
and
xor
clc
fsubp
push
cmp
jl
fidivrs
mov
aaa
iret
scas
sbb
leave
lds
fstps
cs
cmp
lock
pop
mov
jae
push
mov
in
cli
jne
sbb
addl
or
or
sub
outsb
inc
loop
pop
movsl
sarb
pop
data16
add
mov
fdivr
call
int3
shlb
ljmp
lcall
imul
int3
mov
jl
das
es
jb
lcall
int3
fldenv
push
stos
adc
rcr
dec
push
test
mov
fidivs
xor
lock
clc
stos
push
out
cs
jge
insl
fidivs
inc
sub
xchg
rcrb
jg
xor
leave
sbb
push
sbb
sub
rcll
aad
mov
ljmp
sub
cld
clc
xchg
mov
adc
scas
add
js
in
popf
xor
nop
bound
add
jle
int3
inc
xchg
lock
enter
pusha
insb
fnsave
mov
inc
pop
adc
mov
cs
fists
mov
mov
call
and
push
xor
xchg
vsqrtps
pop
in
xor
dec
push
adc
std
fs
and
aas
cmp
pop
xchg
or
mov
cmpsb
mov
xchg
daa
mov
out
or
mov
pushf
push
dec
push
popf
mov
ljmp
iret
mov
ljmp
mov
pop
iret
movsl
leave
imul
ss
lods
addr16
mov
or
cmp
xchg
cmp
in
loopne
push
imulb
scas
xlat
dec
adc
dec
rcrl
std
jae
adc
in
add
and
jg
pusha
xchg
setge
push
cmp
movsb
push
leave
xor
imull
shrb
rclb
gs
addr16
xlat
mov
push
outsb
jecxz
inc
or
lea
or
adc
in
xor
mov
cmpsb
cmp
jle
aas
insl
or
imul
scas
cltd
xor
ljmp
jb
sub
add
cmc
fdivrl
mov
push
and
pop
inc
inc
icebp
lahf
negb
add
fs
pop
bound
lcall
ds
nop
data16
iret
ret
or
ficompl
loope
inc
cmp
fidivrs
aas
inc
lods
fcoml
cmp
inc
ret
jne
mov
lret
mov
or
movb
jl
orl
add
push
jae
sub
inc
clc
pop
in
movsl
push
outsb
cltd
mov
lds
push
push
ja
in
fwait
mov
or
xchg
xor
inc
jne
mov
ss
inc
fcomps
cmp
stos
and
or
push
add
xchg
push
repz
adc
dec
popf
icebp
mov
xchg
mov
mov
or
inc
ds
je
sub
mov
popf
mov
or
sub
jge
movsb
dec
mov
cmp
out
adcl
pop
cmp
or
stos
js
cmp
fsubr
push
xchg
sbb
xchg
shrb
je
shl
mov
mov
lahf
and
xor
loop
scas
mov
insl
pop
jne
adcb
iret
pop
cmp
outsl
mov
or
xchg
mov
lret
jmp
xchg
or
clc
outsb
rcrl
cli
mov
lds
shl
fwait
loope
pop
and
popl
or
push
lds
mov
mov
mov
xchg
adc
dec
xor
rolb
stc
mov
out
test
jp
mov
cmpsl
dec
jecxz
adc
out
repnz
stc
pop
test
ret
rol
stos
jp
sbb
or
and
mov
inc
push
add
pop
dec
enter
into
fimuls
stos
mov
loopne
testb
jg
daa
test
add
push
pop
int
xchg
or
or
cmpsb
mov
dec
dec
pop
jnp
xchg
fisubs
sbb
lret
aaa
rol
inc
inc
in
push
xor
fwait
std
add
sub
pushf
jo
xchg
std
sbb
scas
sub
in
dec
pop
daa
mov
repz
scas
jnp
cwtl
dec
xor
ret
ret
cmpsb
sub
mov
mov
test
cmp
adc
mov
popf
lret
jne
daa
xor
xchg
rclb
mov
inc
sub
mov
pop
pop
rcll
std
sub
fists
pop
in
ret
rcll
fdiv
out
ss
jmp
xchg
fsubp
negb
add
insb
pop
jecxz
fcmovnb
cmp
adc
mov
xchg
lret
loope
fidivrs
test
je
mov
rcl
push
cmp
in
imul
es
mov
sub
add
add
mov
ret
outsl
sub
or
pushf
inc
xchg
in
cs
pop
repz
cmc
pushf
pop
out
test
pop
push
in
push
or
push
fdivp
daa
inc
mov
mov
add
mov
push
jge
inc
into
rorb
adc
fimull
ret
fiadds
les
cmpsb
aaa
int3
in
lret
jb
adc
clc
cmp
pop
sub
jg
andb
xor
int3
sbb
mov
in
iret
andl
mov
cmc
dec
je
pop
and
out
jns
imul
std
and
inc
add
test
mov
enter
mov
insl
jl
test
and
dec
add
int3
pop
xlat
test
sub
add
adc
dec
inc
sti
aas
mov
out
testb
push
leave
and
idivb
push
add
cwtl
jl
lret
insb
mov
jl
fnstcw
jecxz
sbb
add
imul
mov
dec
jo
xchg
repz
repz
pushw
jnp
in
mov
imul
cmp
cs
std
adc
repz
ljmp
pusha
gs
daa
call
xchg
gs
repnz
dec
and
and
lock
sub
ret
out
xchg
add
adc
inc
inc
mov
push
je
lods
icebp
cs
jnp
add
xor
fldl
cmp
mov
fnstsw
xlat
lret
mov
addr16
dec
scas
add
add
cmp
inc
push
ljmp
jnp
out
imul
fsubl
sub
nop
cmpsb
aaa
sub
push
cmp
push
mov
les
jns
cli
jle
daa
xor
loop
sub
les
dec
dec
xchg
inc
xor
xor
push
xor
shr
xor
adc
pop
add
push
iret
mov
jp
arpl
lods
push
jbe
mov
das
push
test
push
cs
adc
cltd
jnp
sbb
adc
sub
pop
sbb
divb
scas
jne
lret
je
inc
mov
dec
mov
out
repnz
jnp
sub
pop
rolb
mov
stos
shll
add
push
lods
dec
and
cwtl
or
dec
andl
xchg
dec
nop
lret
int
jns
xchg
pop
xchg
sti
je
add
sbb
or
sti
cltd
int
add
mov
mov
jae
mov
rcrl
movsl
or
popf
jmp
mov
test
ret
fs
fcmove
out
aam
pop
push
mov
mov
das
aad
mov
xor
call
adc
push
repz
jbe
jne
jmp
xchg
inc
dec
rep
addr16
out
dec
jmp
ss
ret
sub
das
pop
xchg
idivl
jbe
icebp
push
int3
xor
adc
add
xchg
pop
out
sub
bound
mov
cld
cs
sub
adc
je
jge
xorl
das
mov
mov
pushf
jl
push
xchg
sbb
dec
call
daa
push
xchg
int3
xchg
mov
mov
repnz
int3
sti
mov
call
sbb
cltd
loop
aad
xchg
jg
sbb
push
in
test
lret
lcall
loop
jle
inc
mov
xchg
pop
lds
push
sbb
ds
mov
leave
mov
push
jno
fwait
into
subl
pop
lahf
aaa
push
js
das
push
sub
loopne
mov
cld
sub
push
cmp
pop
mov
dec
mov
jge
and
xor
push
mov
je
sub
repz
negl
adc
shl
test
repz
jecxz
pop
xchg
scas
push
push
dec
cmp
pop
ret
add
scas
lds
sbb
xchg
call
bound
loop
scas
mov
xlat
push
mov
jb
aad
test
loop
and
rcl
cmp
mov
mov
js
outsb
repz
loop
ljmp
leave
stos
into
sub
dec
adc
daa
ret
pop
outsb
push
dec
sub
pop
in
and
pop
hlt
lods
and
int
sub
outsb
jnp
rolb
sub
lock
leave
test
enter
inc
mov
sarl
fisttps
jae
shl
and
sub
fidivl
dec
cmpsl
repz
adc
pop
cltd
ret
xchg
xor
popa
std
push
ss
push
or
testb
jne
popa
in
cmc
jmp
push
bound
ret
aad
xor
add
adc
inc
mov
dec
loop
in
adc
mov
xchg
test
mov
lcall
jl
xchg
push
out
mov
outsl
clc
lahf
mov
jo
sarb
data16
mov
jmp
rorl
dec
or
fadds
adc
fdivl
hlt
adc
mov
mulb
fldt
dec
xchg
jle
faddl
push
repnz
lret
call
cld
or
inc
pop
mov
test
pop
lea
dec
rcrl
loope
lret
mov
jle
xchg
call
sti
dec
mov
mov
cld
out
xchg
lret
pop
rcrl
xlat
cmp
mov
mov
sub
cmp
mov
mov
lea
aas
idiv
lcall
xor
adc
cmc
jo
jmp
pop
sub
fimull
jge
add
lods
pop
in
sbb
lds
jmp
mov
and
push
cmp
dec
dec
mov
xchg
out
rcrl
pushl
or
mov
shl
mov
mov
or
cmpsb
cmp
arpl
scas
out
push
lret
lock
xchg
insb
stos
scas
scas
mov
inc
mov
pop
dec
insb
cmp
out
jmp
ss
out
ljmp
sar
popf
data16
xchg
add
inc
or
jbe
lahf
mov
push
mov
lods
insb
daa
add
mov
cs
jbe
inc
lea
scas
push
lods
loopne
and
pusha
insb
pop
movsl
movsl
pop
jne
dec
push
bound
mov
jl
inc
push
out
ds
or
dec
lret
fs
xor
or
jmp
sti
sahf
mov
push
aas
pop
mov
xchg
inc
fcoms
pop
ss
cmp
sbb
clc
push
inc
xchg
pop
sbb
jmp
or
cmpsb
popf
inc
bound
lcall
out
jnp
and
jne
jne
and
dec
lods
lret
mov
jnp
jmp
outsl
incb
loope
cmc
imul
adc
fcoms
dec
push
jl
daa
movsb
shlb
test
sbb
mov
hlt
andb
mov
jmp
clc
inc
dec
divl
and
dec
lret
xor
push
pusha
mov
sub
sub
movsb
mov
jge,pn
sub
sub
sarb
mov
mov
cld
mov
popf
xchg
jl
xchg
xchg
fistl
adc
lahf
jmp
jne
sub
fwait
cli
and
sub
inc
add
mov
jnp
fsub
pop
std
pop
test
ret
cltd
jbe
ret
sbb
pop
outsl
sahf
xchg
movsb
mov
jp
xchg
cmp
pusha
pop
xchg
jb,pt
jg
mov
scas
add
stos
xor
fwait
iret
cmp
idiv
fwait
pusha
int3
gs
xchg
movsb
xlat
out
jle
push
mov
fiaddl
stos
stos
mov
jae
adc
fdivrl
xor
dec
mov
pop
jmp
xor
xor
div
jns
daa
stos
aaa
stos
jl
mov
mov
fisubl
and
sub
push
pop
in
pcmpeqd
out
je
mul
std
add
sbb
lcall
xchg
push
fucom
xchg
mov
mov
int
jb
jmp
xchg
addl
xchg
dec
lds
mov
out
sahf
xor
scas
test
or
decb
ret
or
dec
sti
faddp
xchg
sbb
push
sbb
je
negb
inc
loopne
das
test
rsm
mov
dec
jg
lcall
fimull
and
push
sbb
adc
cltd
xchg
cli
add
pusha
aas
adc
fisttps
push
xchg
je
stos
pop
or
xor
xchg
in
jnp
inc
test
aaa
sbb
xor
mov
lea
mov
fbld
mov
out
inc
inc
ret
repnz
and
out
mov
jg
clc
inc
dec
decl
dec
pop
xchg
je
mov
or
inc
cmp
out
ret
fprem1
xorb
popf
sub
addr16
and
gs
scas
xchg
adc
pop
subl
pop
int3
adc
adc
test
mov
cmc
js
cs
es
jmp
jp
mov
insb
add
adc
popa
mov
inc
mov
cs
mov
xchg
mov
ret
fbstp
pop
cmp
xchg
rcrb
in
lahf
lahf
pushf
mov
cltd
leave
or
je
out
mulb
mov
sub
mov
enter
icebp
shl
cmc
xchg
inc
inc
scas
mov
fmuls
enter
int
gs
sbb
aad
movsb
ja
repz
or
sti
iret
shl
pop
movsb
inc
xchg
inc
jb
cmpsl
inc
pop
sarl
jecxz
jne
daa
jecxz
sbb
xor
xchg
mov
or
mov
pop
mov
inc
and
in
adc
les
clc
lods
pop
push
sahf
movsb
lahf
sbb
adc
lahf
push
lods
addr16
or
or
add
add
pusha
sbb
jne
subl
ss
push
orb
push
jp
mov
mov
pop
inc
daa
aad
pop
jnp
cmp
push
push
xchg
sub
adc
jnp
jecxz
les
push
or
mov
adc
pcmpeqb
jecxz
insl
pop
add
xlat
sahf
and
pop
movl
push
addl
fadd
in
sbb
add
outsb
and
in
movsb
add
mov
jle
adc
xchg
mov
add
test
stc
das
mov
popa
imul
pop
dec
repnz
cmp
adc
mov
adc
dec
inc
mov
movsb
es
pusha
in
pop
and
and
rsqrtps
push
push
xchg
pop
jo
stc
lods
fdivl
pop
sub
mov
sub
jnp
mov
add
cmp
adc
push
imul
bound
mov
jo
and
inc
mov
sbb
adc
pop
mov
notb
data16
push
inc
incb
pop
add
lods
or
out
pop
ss
arpl
into
sahf
mov
pushf
mov
push
nop
push
nop
mov
dec
cltd
sub
sahf
jge
xlat
lds
cmpsb
dec
cli
pop
jae
aam
sahf
in
adc
mov
call
repz
dec
sti
and
push
sahf
cmc
pop
and
cwtl
or
in
sub
or
jb
nop
mov
push
int3
das
es
mov
adc
mov
lahf
jmp
addb
fldcw
insb
mov
stc
and
aam
mov
out
or
push
xchg
xchg
adc
xchg
mov
int3
ss
adc
ss
mov
faddl
incb
mov
cmp
add
push
sbb
scas
out
insb
les
dec
cmp
ficoml
mov
xor
rcll
mov
outsb
or
jle
out
arpl
cmc
xchg
mov
aam
outsb
icebp
leave
cmp
scas
adc
pop
mov
repnz
push
js
add
bound
pushf
cli
xorb
popa
cmpsb
dec
xor
stos
cmp
dec
js
les
jo
xchg
lahf
pushf
dec
jno
loope
je
cmp
jnp
lods
leave
lock
aaa
enter
cmpsb
lods
sub
sbb
mov
dec
jecxz
xor
lcall
scas
nop
loop
shr
adc
xchg
movsb
frstor
mov
rcrl
insb
ss
lea
jge
mov
fwait
notb
add
roll
dec
addr16
arpl
jg
in
add
je
jmp
xchg
mov
and
jno
jmp
xor
scas
mov
mov
out
dec
stos
mov
dec
push
sub
xchg
pop
stc
fsubrl
repnz
lock
jg
xchg
into
mov
mov
and
ds
pop
push
fucomi
push
test
mov
imul
out
les
and
lcall
adc
jnp
hlt
outsb
outsb
adc
adc
ss
mov
imul
xchg
aad
cli
mov
dec
add
xchg
shll
xor
mov
inc
shr
sbb
sbb
movb
inc
dec
mov
xchg
subb
cltd
mov
add
inc
sub
sub
test
xchg
and
jp
pop
mov
orl
mov
dec
into
jecxz
insb
sbb
adcl
jecxz
or
repnz
pushf
mov
stc
pop
nop
add
or
into
inc
lcall
mov
adc
cwtl
lret
outsl
arpl
repnz
sbb
jno
mov
lods
lea
push
xchg
mov
sub
sbb
arpl
hlt
cmp
xor
mov
enter
mov
lahf
leave
mov
push
mov
or
push
mov
jno
xchg
fcomp
int3
call
mov
sub
push
xchg
adc
mov
mov
inc
fdivr
das
mov
jle
xchg
dec
cmpsl
test
xchg
jge
negl
jnp
adc
aaa
lock
lret
pushf
inc
adc
rclb
repnz
aaa
outsb
cmp
cli
mov
or
lret
adc
xchg
mov
xchg
xchg
int3
movsb
shl
jo
cmp
xor
shlb
arpl
cmp
sbb
int3
adc
clc
lods
jno
aaa
pavgw
scas
das
push
xchg
cmpsb
test
stc
sbb
add
mov
aad
xor
adc
js
sbb
xchg
loope
imul
mov
scas
sbb
pop
rcl
add
pop
mov
mov
inc
incl
lret
xor
bound
pop
cmp
gs
dec
mov
push
xchg
xchg
daa
aas
mov
xchg
adc
fsubs
sahf
xor
mov
mov
fiadds
pop
mov
les
pushf
cltd
inc
adc
mov
sahf
jp
cltd
pop
sbb
repnz
lods
or
jne
jb
cwtl
shlb
xchg
out
es
sub
int
mov
add
fidivrs
lds
jne
pop
adc
scas
movsb
in
cmp
cmp
push
outsb
popa
jle
inc
lock
mov
dec
add
sbb
in
mov
adc
push
sti
push
xchg
adc
add
or
daa
add
or
jbe
jns
std
push
mov
mov
mov
aas
mov
mov
sbbl
ds
cltd
lds
loope
rclb
push
jge
or
lcall
int3
inc
rcl
cmpsl
into
popa
push
push
add
push
fsubl
xchg
xor
int3
sub
popa
pop
or
jbe
mov
pop
ljmp
sub
loop
xchg
jae
xchg
je
je
jge
js
out
loope
cli
sbb
ss
in
mov
sarl
push
aaa
push
test
das
je
pop
repnz
ret
addl
addr16
and
add
ret
aas
sbb
xlat
dec
ficomps
scas
sub
xor
nop
test
cmp
mov
enter
sbb
daa
dec
adc
jno
or
sbb
mov
adcb
mov
jne
clc
inc
fisubs
mov
sti
pop
shll
push
jo
inc
in
movq
xchg
stos
int
pop
aam
jbe
popa
mov
xchg
or
add
mov
xlat
lds
xchg
sahf
xchg
push
jne
imul
or
cmp
clc
pop
aas
in
add
pushf
xlat
mov
or
in
testb
aad
bound
cmc
incl
shl
daa
or
xor
fs
pop
pusha
ret
iret
inc
ss
mov
push
in
xchg
out
and
adc
jmp
dec
roll
push
pcmpeqw
cmp
cld
xor
xchg
aaa
or
or
sub
in
push
sti
cmc
popa
aaa
movsb
push
imul
xor
mov
clc
stos
xchg
pop
or
enter
into
dec
shlb
sub
xor
cmpsl
loop
inc
jp
xor
mov
dec
pop
call
rorl
mov
lcall
mov
je
ljmp
les
pop
fdivrl
fmull
dec
pop
outsb
cmp
and
inc
inc
and
push
mov
cmp
push
gs
ror
scas
jo
push
aaa
xor
xchg
test
xor
lcall
mov
fucom
into
aad
inc
xor
and
jae
mov
or
insb
mov
cmp
int3
js
sub
mov
jl
pop
inc
hlt
pop
lods
lods
pop
ss
push
imull
pop
jle
aad
or
pop
dec
loopne
add
jge
add
xor
push
mov
out
nop
testb
sbb
ret
das
mov
pop
cmp
pop
ds
jl
mov
add
mov
or
xor
cmc
xchg
xchg
lods
pop
xor
cmp
xchg
jl
out
xor
movaps
xchg
add
popf
sbb
dec
js
loop
int
fistpll
adcl
daa
sbb
cmp
mov
dec
lds
adc
pop
inc
fcomi
adc
sbb
push
aam
insl
mov
incl
dec
pop
add
mov
ljmp
lods
ljmp
pusha
lock
xchg
push
mov
jns
icebp
mov
mov
dec
jp
dec
leave
jnp
push
aam
jns
pop
dec
push
push
dec
sbb
loope
push
in
inc
jle
imul
inc
enter
dec
or
lret
mov
pop
push
mov
jecxz
mov
dec
cmpb
insl
into
push
nop
and
xor
jg
cmp
jo
xchg
pop
out
fs
xchg
sub
int3
ja
in
outsl
xchg
fwait
mov
jo
cmc
add
xchg
and
adcb
push
lods
cmp
ret
and
and
jno
imul
in
xchg
nop
mov
cmpsb
loope
lahf
leave
pop
js
stc
mov
cmpsb
pop
movsl
andl
cmpb
mov
ds
jle
shld
rol
pop
pop
mov
inc
or
mov
ret
ret
aam
dec
xchg
mov
push
pusha
push
jne
call
xor
fisttps
mov
fs
sub
dec
inc
repz
scas
ret
test
clc
iret
pop
js
ficomps
andb
xchg
popa
stc
fidivrl
or
iret
inc
lea
xchg
cwtl
sbb
jns
fisubrs
add
jge
push
stos
jle
pop
subl
fs
lahf
vmovq
mov
jle
ret
cmp
out
xchg
inc
hlt
mov
ret
push
mov
adc
mov
push
ret
jne
jno
pop
sub
pushf
or
loope
sub
test
dec
cwtl
xor
cmpsb
jo
sub
outsb
push
dec
add
or
out
insl
subb
outsl
mov
sbb
xchg
jno
lods
jne
rol
popf
cmp
loopne
cmp
push
jno,pn
inc
mov
xchg
adc
hlt
pusha
sbb
push
je
nop
pop
mov
mov
inc
mov
outsl
in
dec
xchg
jle
aam
jne
insb
and
push
mov
pop
xchg
jo
mov
sub
imul
inc
daa
sbb
mov
idivl
mov
cmp
call
scas
nop
mov
or
adc
sub
pop
sbb
pop
or
sbb
pop
fwait
mov
rorb
sbb
ret
lods
mov
push
adc
dec
xor
xchg
mov
stos
data16
sub
andl
lret
fwait
xlat
in
rorb
outsb
mov
mov
or
xor
imul
mov
jecxz
enter
or
mov
jns
dec
mulb
mov
pop
push
pop
mov
out
cld
pusha
mov
fsubrs
mov
in
sbb
cmp
in
jecxz
push
xchg
and
xchg
mov
push
inc
mov
xchg
in
shrb
xor
add
or
mov
and
or
inc
pop
nop
loop
cli
push
and
cmpsb
xchg
ja
shll
mov
loop
hlt
pop
test
aam
dec
mov
or
add
shll
and
lret
fmull
push
cmpsb
xchg
inc
or
push
leave
add
scas
je
push
adc
jno
lcall
xor
movsb
and
add
dec
mov
inc
fnstenv
ret
dec
jbe
mov
xor
mov
std
sarb
sub
mov
push
or
xor
push
jmp
dec
out
push
fwait
mov
jmp
loope
xor
xchg
push
scas
jo
mov
xor
mov
adc
dec
out
cld
dec
xchg
scas
shll
xlat
pop
inc
insb
xchg
sub
imul
sbb
test
repnz
and
jae
test
xchg
mov
pop
pop
xchg
or
inc
icebp
enter
add
push
pop
jecxz
mov
mov
negl
int
negb
pop
sbb
hlt
jno
data16
jne
cmp
add
out
sub
sahf
frstpm(287
or
and
mov
arpl
addr16
outsl
sub
repz
js
pop
xchg
lahf
cwtl
les
sbb
fstpt
lahf
popf
test
add
repz
nop
mov
mov
insb
sbb
out
stc
cmp
mov
or
add
push
popa
ret
jo
lds
std
cmp
mov
pushf
fldt
sub
fcomip
and
js
push
mov
in
aas
repnz
mov
mov
aas
aam
mov
mov
sti
mov
sub
orb
into
cmp
js
xor
or
adc
data16
jp
js
push
xchg
rolb
decl
fiadds
or
test
ret
movsb
test
in
shl
cld
in
loope
fidivl
lahf
subb
dec
adc
push
dec
ret
and
jmp
cmp
jb
pop
sbb
adc
cltd
xchg
adc
loopne
movb
add
lret
jl
xchg
insl
or
fildll
iret
stos
mov
and
popf
hlt
xchg
ret
dec
pop
xor
ret
mov
into
jmp
scas
imull
out
hlt
pushf
out
and
test
mov
jl
and
imul
movsl
loop
push
mov
push
inc
cmp
jp
fmull
cmpsl
jp
sahf
push
sub
jb
ret
mov
outsl
hlt
ficomps
lea
sbb
xchg
imul
xchg
push
inc
sahf
or
pop
mov
addr16
stos
bound
add
push
inc
add
jmp
daa
sti
daa
icebp
pop
ss
aaa
lahf
sbb
mov
movsl
pushf
movl
dec
iret
andl
sub
inc
test
int
aaa
std
jl
cmpsl
jmp
adc
xchg
das
xor
inc
or
xchg
scas
xchg
and
cmc
push
sbb
test
stos
pop
sti
add
repz
iret
scas
dec
movsl
clc
arpl
inc
mov
cmp
sbb
int3
inc
in
add
pop
fwait
push
clc
test
std
lret
cmpsb
xor
xor
aad
inc
pusha
addb
mov
jnp
jbe
push
or
dec
imul
adc
sub
pop
or
sbb
stc
inc
pop
xchg
fs
jp
aas
mov
xor
hlt
popf
mov
push
sbb
test
lret
or
cs
ret
mov
pop
sahf
pop
xor
pop
dec
sub
jne
xchg
push
mov
add
arpl
jnp
push
and
in
xor
push
sti
mov
ja
jmp
ret
inc
adc
xchg
imulb
mov
int
xchg
mov
rolb
mov
mov
cmp
mov
pop
dec
test
ds
aaa
ss
fcoml
inc
mov
jmp
lea
and
sahf
pop
cli
xchg
test
movsl
dec
adc
adc
sbb
nop
inc
or
xchg
dec
scas
cltd
jnp
sub
in
inc
test
xchg
loopne
mov
loop
lcall
out
test
clc
pusha
jns
das
fldl
cmp
imul
cmp
adc
sub
lret
call
or
cltd
enter
jnp
push
sahf
fwait
and
movsl
sbb
sub
iret
add
bound
xchg
sbb
out
add
das
cmp
inc
outsb
aam
clc
leave
and
jge
mov
ficoml
cwtl
enter
sbb
and
pusha
jle
add
pusha
lock
sti
out
pop
imul
ds
sub
aaa
sub
pop
push
rcll
or
cli
push
sbb
dec
mov
in
pushf
push
scas
sub
out
inc
cmp
dec
out
xor
lods
inc
lock
jge
lret
cmc
or
outsb
in
adcb
movsl
cmp
je
cld
or
jg
addr16
sub
mov
mov
dec
fwait
in
jl
jbe
inc
lea
push
addl
and
loope
push
xor
lds
stos
push
popl
sbb
pop
fisubs
test
fildl
pop
jge
push
mov
mulb
jnp
jl
mov
xor
lds
ds
mov
push
inc
xor
ja
hlt
push
mov
add
pushf
jno
out
sub
or
sbb
lds
mov
push
insl
jl
mov
mov
in
mov
popa
sub
pop
cmp
aad
cmp
dec
adc
xor
mov
adc
ret
pushf
sahf
clc
decl
stos
cmovb
push
cmp
loop
push
xor
dec
sbb
sbb
stos
repnz
add
pop
sti
push
push
and
lods
sbb
cmp
push
mov
push
xor
cli
lret
lods
lahf
popa
daa
mov
enter
pop
mov
lahf
adc
ret
jp
test
stos
and
and
repnz
in
pushf
dec
lock
jmp
xchg
mov
pop
int3
pop
add
xor
lcall
push
fisubrl
shl
loope
mov
movsb
cmpsb
add
xor
aad
sti
push
fisubrl
clc
enter
jmp
aam
mov
rolb
popf
cmp
mov
xorl
clc
js,pn
ror
jbe
bound
xchg
and
arpl
cs
lahf
xchg
inc
daa
test
push
add
cmpsl
push
pusha
push
mov
sub
sbb
fstpt
jecxz
mov
fstps
fistl
add
dec
or
jp
jl
xor
lea
jge
sub
pop
arpl
jmp
and
add
outsb
sub
push
ret
and
or
lea
jne
adc
mov
mov
push
in
in
cld
pop
sahf
stos
sahf
outsb
mov
add
jl
es
fs
hlt
jp
xchg
xchg
push
inc
pop
shl
mov
insb
and
fiadds
shrl
add
mov
addr16
cmp
dec
aaa
in
adc
mov
call
xchg
sbbb
mov
lods
jbe
jg
cmp
aas
loope
mov
mov
or
sti
jge
aad
jmp
loope
sub
mov
mov
pop
sbb
xor
push
cs
mov
pextrw
xchg
sbb
cli
inc
cmp
push
pop
fidivrl
mov
xchg
mov
fs
mov
test
ljmp
pop
pop
lock
repnz
sbb
jb
dec
cmc
nop
sbb
testb
jmp
adc
mov
mov
cmpb
xchg
mov
sarl
mov
pop
mov
lods
out
jnp
cmp
adc
mov
mov
and
test
lahf
push
lahf
jo
and
jb
insb
xor
das
int3
xor
scas
addr16
jl
hlt
cwtl
dec
dec
ja
xchg
lock
pop
fmull
inc
sbb
jbe
or
aaa
icebp
cmp
mov
push
sbb
lcall
adc
lret
inc
in
fists
and
lret
sbb
lcall
sbb
out
xlat
xchg
cmpsl
dec
cmpsl
sub
ljmp
ret
ss
lret
fists
pop
movsl
mov
leave
ss
xchg
pop
shlb
sbb
ret
fwait
sbb
mov
mov
cmpsl
fildl
and
fiadds
shl
mov
adc
hlt
cmc
mov
clc
cmpb
add
jle
push
js
pop
pop
pop
xor
repnz
repz
jle
cmp
jecxz
push
cmpsb
inc
inc
push
outsl
data16
inc
das
insb
mov
and
pushf
mov
sub
add
push
pop
push
jg
cmc
addr16
int3
mov
aaa
xchg
add
cli
or
inc
push
jno
dec
cltd
fs
push
sub
add
pop
shl
sti
test
out
ret
cmp
decl
pop
and
jp
dec
into
inc
xor
push
js
dec
in
xchg
pop
xchg
sub
lahf
repz
mov
iret
enter
notb
xchg
inc
jle
mov
jmp
or
daa
setns
add
lcall
add
out
daa
inc
push
dec
loope
enter
jg
int3
xor
pop
mov
loopne
popa
push
jmp
push
ja
fnstsw
adc
pop
add
dec
loop
fwait
jg
mov
mov
pop
mov
push
bound
aam
adc
fldt
test
xchg
cs
jno
mov
push
leave
popf
in
outsl
jae
and
stos
add
pop
mov
enter
shr
dec
jbe
or
cmc
cmp
mov
std
pop
adc
arpl
adc
sub
mov
cmp
fwait
mov
pop
or
repz
inc
je
dec
pop
movaps
cmpsb
inc
inc
sbb
jle
inc
je
push
leave
out
xchg
cld
push
popf
movsb
cmp
mov
mulb
orl
inc
out
add
insl
sub
pop
push
lea
xchg
mov
pop
xor
jbe
addr16
ret
add
sub
iret
jge
fisttpll
inc
adc
cltd
aas
cmpsl
push
pop
xor
inc
es
dec
sarb
pop
mov
pop
jb
cmp
mov
push
cmpsl
into
cs
inc
aad
loop
test
mov
int3
sti
fisubs
or
jb
push
outsb
jns
stos
jp
inc
adc
cld
lret
mov
jl
mov
pushf
jno
mov
in
jno
pop
fdivrs
rol
push
inc
mov
mov
into
push
test
mov
repz
jbe
test
in
orl
loope
mov
out
and
inc
imul
daa
jns
xchg
mov
in
add
das
xchg
rclb
inc
adc
mov
and
into
xor
mov
add
adc
insb
jg
mov
mov
out
gs
outsb
sarl
icebp
js
add
movsl
mov
add
inc
fsubp
hlt
ds
test
push
sub
cli
out
out
jl
jmp
test
popa
std
push
sbb
mov
flds
les
shrb
mov
fnstsw
mov
cmc
loope
ret
push
hlt
out
bound
scas
push
push
fmuls
decl
lea
dec
hlt
xchg
jnp
cmp
adcb
out
cmp
in
xchg
mov
xor
adc
cs
hlt
scas
ja
xchg
test
push
lods
imul
cmp
jno
or
bound
rcl
js
mov
push
and
push
enter
ret
je
jo
mov
mov
int3
xchg
jg
es
mov
ficompl
push
xor
xchg
lea
adc
lods
imul
mov
xchg
push
or
pushf
insb
pop
mov
cmp
jge
cmp
popf
pop
ret
lret
cmc
iret
adc
loop
fstpt
es
pop
cmc
fdivrp
and
sub
leave
inc
pop
jge
in
mov
sbb
nop
jge
cmc
jo
push
cmp
jecxz
test
repnz
adc
xchg
mov
inc
std
out
mov
ja
sub
and
sbb
xchg
jae
push
mov
and
movsl
mov
js
push
xchg
add
xorb
cwtl
shr
pop
xchg
int3
push
mulb
pop
in
sar
dec
pop
in
out
mov
mov
mov
inc
jl
fisubrs
pop
repnz
adc
xor
cld
jecxz
fcoms
adc
push
xchg
lahf
lret
mov
cmp
mov
mov
rorb
and
push
int
pop
ss
mov
pop
aad
add
dec
adc
pop
sar
xor
scas
sub
rcrl
mov
cmp
jg
dec
fcoml
jle
xor
movsb
push
jo
mov
es
rcll
in
jne
mov
add
pop
push
push
mov
popf
ja
je
pop
leave
push
js
xor
fistl
ror
mov
loop
push
push
jbe
sbb
mov
pop
dec
in
sbb
jbe
cmp
shl
or
cmp
push
cmp
out
mov
daa
sbb
int3
dec
nop
push
mov
rcr
stos
jnp
in
adc
cld
add
fs
std
cmp
mov
jg
jl
jge
jl
gs
pop
je
or
xlat
mov
insb
ds
add
sbb
dec
cmp
shrl
mov
mov
xlat
mov
jmp
not
add
icebp
movsb
bound
mov
fmull
pop
stos
test
es
xchg
pop
es
cmpsb
notl
pop
add
clc
pop
sbb
data16
jnp
cli
xor
je
imul
jl
inc
movb
pop
mov
leave
fiaddl
call
jmp
or
test
mov
insb
jo
xchg
fbld
sub
iret
rcl
clc
adc
shl
xor
sahf
jnp
add
loopne
les
cmpsb
sub
loopne
inc
dec
sub
xor
leave
adc
cwtl
lret
push
in
lods
push
and
stos
jb
int
div
lret
scas
orb
subl
mov
mov
in
movsb
adc
add
rorl
call
or
dec
inc
js
incb
popa
repz
enter
pop
data16
clc
push
daa
inc
dec
xchg
in
cwtl
xchg
xor
push
insb
mov
fstps
jb
in
addr16
test
test
jae
xorb
mov
or
dec
je
repz
ret
in
sbb
scas
jne
in
call
jecxz
jg
push
xchg
mov
sti
sub
cmp
pop
mov
and
insb
or
addb
push
mov
add
xor
orl
push
test
mov
add
gs
cwtl
mov
push
cmpsl
push
mov
xor
testb
pushf
mov
fidivl
jmp
bound
outsl
jl
sbb
fidivrl
stos
or
mov
fwait
cwtl
xchg
sub
mov
ja
nop
xchg
cmpsb
lds
shrb
ret
mov
adc
sbb
in
jno
sbb
sub
shll
mov
jg
xor
lret
add
and
cmpsb
in
fistps
or
filds
loope
mov
popf
mul
dec
push
adc
and
add
push
hlt
in
sub
sti
ss
adc
das
mov
xchg
jns
in
out
add
xor
sbb
pusha
mov
inc
loope
or
add
dec
icebp
jp
add
sub
repz
lods
pop
lret
lret
add
pop
test
rol
push
push
or
insl
cmovae
cvtps2pi
in
leave
fdivrl
ficoms
add
cs
popf
bound
pop
cmc
lock
popf
mov
stos
div
push
in
mov
rorb
gs
imul
and
test
mov
rolb
or
ljmp
cmpsl
xor
mov
fs
pop
shlb
jnp
mov
xor
or
sahf
mov
leave
fbstp
inc
lcall
lcall
and
outsl
ret
xchg
push
jecxz
adc
mov
cmc
adc
xor
fs
hlt
and
push
repz
xchg
cmp
xchg
imul
mov
or
test
and
push
jno
aas
sbb
mov
fiadds
mov
pop
icebp
into
push
in
mov
gs
mov
push
add
leave
mov
mov
and
inc
push
idivb
das
mov
and
mov
jb
pusha
ss
xchg
push
repz
sarl
mov
gs
adc
dec
leave
and
jge
xchg
cmpsb
arpl
xchg
add
orl
loope
dec
adc
cmp
inc
shlb
and
out
pop
aam
cltd
lods
dec
stc
cmove
xchg
loopne
lahf
adc
mov
pop
ds
cmpsl
out
dec
pop
ds
aaa
fidivrl
mov
ds
fs
sbb
mov
xor
add
sarb
hlt
aas
rolb
push
fcmovu
packssdw
in
les
icebp
imul
outsb
mov
out
fwait
je
int3
fistps
hlt
lods
out
xchg
mov
popa
pop
ficompl
xor
addr16
fucom
loopne
cltd
mov
movsl
mov
dec
pop
push
push
pusha
cmpsb
fyl2xp1
sbb
fcomi
inc
mov
lock
mov
repz
push
pop
out
pop
dec
iret
out
xchg
jp
call
dec
loope
push
clc
out
inc
mov
insl
mov
xor
or
jl
sbb
shlb
jg
icebp
lods
push
fnstcw
mov
roll
mov
mov
jo
xor
insb
insb
repnz
icebp
test
fiaddl
fdivl
xchg
fs
nop
xchg
mov
mov
pop
mov
lock
shll
push
mov
xchg
testb
ret
enter
mov
jmp
mov
in
or
pop
xchg
jae
cmp
jp
mov
cli
xchg
mov
xchg
call
adc
std
pop
pop
xchg
mov
mov
scas
repz
lcall
jecxz
sub
shl
jl
add
stc
mov
fnsave
test
ja
fwait
inc
dec
arpl
outsl
test
test
and
js
jmp
jle
fsts
mov
mov
push
lock
repz
sbb
push
xchg
jmp
pop
shlb
mov
push
add
es
loope
mov
mov
push
mov
insb
cmp
or
icebp
adc
lods
es
lret
rcrb
hlt
or
mov
push
out
ja
je
jo
leave
cmpsb
sub
push
icebp
inc
les
data16
push
xchg
cltd
mov
lea
es
icebp
or
std
adc
push
ja
incl
xchg
mov
jnp
insl
push
nop
add
in
cmc
dec
scas
xchg
xor
jae
sbb
fucomip
daa
aad
fistpll
pushl
add
ljmp
or
shl
fisttpll
in
bound
daa
lcall
xchg
ds
lcall
push
pusha
imul
sbb
mov
and
cmpsl
loopne
dec
jae
mov
or
mov
mov
stos
jmp
mov
enter
mov
xchg
call
pcmpeqb
and
xchg
push
cmp
adc
xchg
inc
xor
mov
in
sahf
cmp
mov
pop
clc
push
inc
mov
enter
lahf
jb
shll
sub
pop
ljmp
std
mov
mov
dec
mov
popf
adc
cld
push
daa
pushf
imul
add
mov
inc
xor
cmc
fistpll
push
scas
fsubs
mov
ljmp
adc
gs
lods
popa
fiadds
push
fisubrl
aas
sbb
xchg
xchg
out
or
mov
loop
notl
fisttpl
push
pop
jmp
daa
out
mov
ret
cmp
sbb
or
andl
inc
dec
xor
or
lcall
xchg
shlb
or
sub
mov
push
pop
out
jne
mov
adc
sahf
daa
ja
push
mov
jo
std
dec
filds
cmp
and
int
add
mov
mov
lret
pop
xlat
call
loope
jno
jnp
fdivs
add
lods
adc
lods
pop
push
jae
mov
stos
jo
jbe
jns
pop
pop
jnp
pop
ja
test
and
into
lea
adc
pop
add
cmc
pop
ljmp
xlat
ret
aam
and
dec
ror
stos
dec
jbe
or
and
imul
scas
xor
adc
push
mov
cmp
mov
popl
nop
sbb
xchg
xchg
movsl
lods
push
mov
lret
mov
or
sub
scas
push
movsb
mov
fcmovnb
push
push
sub
pusha
arpl
cmp
out
and
in
add
repz
cld
dec
insb
push
cmp
cmpsl
dec
push
or
xchg
sbb
lahf
js
out
outsl
push
fsubrl
sub
lcall
cwtl
shll
in
dec
dec
loop
cmpsb
shl
xlat
cmpsb
mov
xor
sbb
xchg
loope
push
mov
int3
incl
xor
fnstenv
sub
push
es
fidivrs
dec
cmp
push
sub
sbb
out
dec
and
adc
mov
fldenv
sbb
sub
stc
adc
fldenv
rol
push
adc
cmp
lcall
outsb
pop
arpl
enter
jg
out
aad
mov
and
in
es
test
push
xor
arpl
daa
inc
clc
stc
out
add
pop
cmp
jp
mov
inc
or
mov
adc
pop
aam
cmp
stos
jmp
push
and
stos
cmp
sub
pop
test
pop
cmp
pop
outsb
mov
rolb
sarb
repnz
in
pop
or
mov
movsb
cmpsb
jbe
push
inc
call
push
lods
in
call
inc
adc
jmp
push
xchg
outsb
into
push
cmp
addr16
fsts
jb
cld
enter
jo
xor
add
lods
jle
in
nop
mov
sti
lret
in
pushf
aad
jo
std
insl
test
inc
dec
mov
jge
dec
loope
mov
mov
cs
xchg
inc
pop
ja
sbbb
faddl
mov
arpl
jge
xchg
inc
fistps
push
sbb
test
std
arpl
adc
not
mov
cmpsl
cmp
dec
ficoms
pop
mov
repz
jns
sbb
xlat
scas
add
nop
mov
jns
inc
cmc
xchg
pop
loop
imul
jl
or
call
clc
lret
cmp
mov
or
mov
shrl
mov
cmp
dec
mov
ds
movsl
aas
mov
lds
fadds
jge
arpl
pop
xorl
or
jo
rclb
popa
ficompl
lret
jg
in
lahf
mov
sbb
pop
mov
icebp
adc
mov
inc
cmp
imul
scas
testb
xlat
in
leave
test
mov
pop
sarl
and
iret
and
mov
xorl
sbb
test
add
insl
and
sarb
es
sbb
test
cs
cmpsb
inc
out
stos
push
pop
cmp
or
aam
jle
nop
call
dec
push
movsl
imul
mov
outsl
enter
fidivrs
in
push
mov
push
ret
dec
aaa
sar
fstpt
mov
cmpsb
repz
mov
pusha
loop
cmpsb
fdivr
sti
mov
ss
or
rol
enter
iret
cmc
inc
addr16
ret
pop
sbb
movzbl
call
icebp
lret
in
sub
push
jl
xor
xor
mov
out
idivl
shl
mov
sub
pop
mov
repz
cli
jbe
test
mov
cli
cmp
bound
mov
or
xchg
mov
aas
add
add
jmp
int
lea
mov
jmp
sub
movsb
js
lods
out
and
mov
or
es
loop
bound
cmpsl
test
inc
xchg
or
aaa
out
jbe
jae
ret
push
ljmp
and
xor
push
fimuls
jns
test
test
add
dec
in
mov
or
inc
imul
enter
dec
pop
fnstsw
cmp
shll
cmpl
cmp
mov
mov
negb
movsb
jle
xchg
clc
and
insl
push
cmp
or
rorl
and
call
xor
sub
out
out
jae
testl
in
popf
push
inc
jl
jmp
xchg
cmp
fcmovu
pusha
daa
cmp
addr16
push
jecxz
and
stc
or
cld
or
das
bound
pusha
and
shr
mov
test
lds
jb
sbb
mov
mov
or
ret
cmp
movsb
into
push
hlt
mov
sbb
pop
mov
test
aad
mov
iret
insl
cmpsb
lds
mov
xor
arpl
cld
imul
movsb
sub
rol
cmp
divl
add
push
adc
pushf
jp
insb
roll
lock
in
jle
fmuls
jle
scas
adc
add
mov
push
leave
push
adc
mov
es
movsb
jecxz
negb
es
dec
pop
or
jb
mov
push
ljmp
inc
dec
fldenv
int3
stc
dec
inc
adc
mov
inc
mov
xlat
or
push
mov
add
fdivrp
add
repnz
mov
and
fidivl
mov
cmp
in
pop
imul
and
imul
push
js
mov
cmp
push
fimull
add
bound
out
daa
lea
cmp
cmpsl
aad
xchg
imul
and
mov
adc
mov
jle
xchg
push
sub
push
lock
xor
ds
clc
inc
xlat
mov
mov
sub
decb
push
mov
fcoms
test
pop
dec
rorb
aaa
mov
adc
ret
ret
push
sbb
mov
jle
addr16
movsb
outsb
lds
stos
sti
jnp
lods
lods
movsb
loope
lret
fwait
xor
inc
fstps
cmc
loopne
and
mov
xchg
es
je
xchg
pop
mov
sahf
outsb
cmp
xlat
imul
inc
dec
and
cmp
pop
mov
mov
clc
int3
sarb
pop
mov
out
dec
lods
leave
adc
jle
mov
in
cmp
mov
es
ja
in
inc
stos
push
add
pushf
xor
xchg
dec
fadd
xchg
into
lret
orl
lea
mov
and
popa
jo
mov
imul
dec
and
cmpsb
mov
cmpsb
push
mov
adc
pop
stc
inc
jmp
lahf
popf
out
mov
dec
push
arpl
out
popa
cmpsb
mov
test
scas
cltd
test
xchg
xor
sub
dec
and
or
mov
leave
xlat
pop
add
sbb
xor
int
aad
adc
aad
mov
jp
dec
es
loopne
pop
mov
adc
hlt
imul
loopne
je
inc
mov
cmc
mov
pusha
outsl
or
arpl
inc
repnz
fisttpll
xor
xchg
int3
push
scas
inc
xor
ljmp
inc
arpl
nop
push
jge
inc
out
in
add
hlt
sbbb
mov
add
sbb
cmp
cs
aad
icebp
jb
adc
mov
mov
mov
mov
ja
jnp
pop
pop
jge
test
xchg
jne
pop
test
dec
xchg
push
jl
adc
scas
push
insb
mov
mov
aad
out
lock
out
je
sub
aam
xor
movsb
outsl
mov
shll
rcll
mov
sub
movsb
cmp
add
xor
movzbl
add
bound
jg
adc
mov
push
add
jb
cmp
inc
pop
fbstp
xchg
icebp
xchg
lods
push
jno
ljmp
data16
sub
pushl
xchg
xlat
leave
pop
test
xor
mov
test
repnz
dec
xchg
jb
insl
je
and
adc
xor
sets
int3
pusha
jg
push
pop
inc
call
push
inc
mov
in
mov
loope
les
xor
inc
pushl
fisttps
jnp
test
xchg
rcrb
je
push
jg
xchg
xchg
jge
outsb
mov
mov
xlat
mov
stc
fwait
add
xor
test
cmc
test
fistpl
add
push
les
xchg
scas
add
sbb
cmpsb
leave
fisttps
inc
adc
xchg
stos
mov
loop
nop
push
aaa
pop
mov
in
sarb
hlt
fnstenv
mov
cmpsl
pop
xlat
mov
mov
jg
adc
jno
shll
and
popf
adc
repnz
mov
sbb
cld
cld
push
xor
jbe
lods
cwtl
out
pop
lods
cmpsl
inc
add
and
xchg
xchg
pop
sub
clc
dec
divl
and
fistps
fcompl
jmp
jp
addr16
xchg
mov
fisubs
xchg
cmp
sbb
push
imul
jg
inc
dec
push
dec
add
mov
jecxz
push
mov
call
mov
mov
jbe
or
idivl
or
cwtl
inc
daa
push
lret
hlt
add
icebp
mov
leave
btc
lcall
or
iret
ficoms
xor
mov
popa
daa
adc
cmp
test
or
int
jle
daa
cmp
aam
add
jno
imul
jmp
lret
xor
js
sbb
pop
xchg
pop
and
aaa
add
std
xor
stc
sarl
or
cli
add
push
repz
jae
pushf
out
lahf
inc
fmull
scas
push
or
in
out
sub
in
shl
sbb
add
adc
in
les
dec
sbb
jbe
dec
mov
push
xchg
sahf
dec
test
jno
xor
aad
cmp
mov
lea
add
sub
add
gs
cld
dec
incl
sub
mov
imull
pop
or
pop
sti
xor
sub
mov
sbb
cmp
pushf
mov
push
mov
pop
jns
shll
stc
push
xchg
cmpsl
mov
mov
xor
popf
add
nop
repz
dec
pop
cmp
aas
fistpll
or
imul
mov
jb
mov
dec
sbb
sbb
jns
add
add
or
inc
lret
das
xchg
push
inc
call
jecxz
repz
testl
push
insl
mov
push
fsubrs
mov
jp
in
mov
mov
data16
insb
jo
insl
xor
jl
xor
popa
adc
jo
and
addr16
mov
push
jge
cmp
sahf
mov
jmp
jnp
and
test
cmc
jle
in
hlt
mov
sahf
pop
ja
lods
or
in
xchg
into
lret
fwait
hlt
sbb
jno
cmp
hlt
and
aad
add
lret
dec
mov
in
jmp
mov
clc
out
iret
shll
mov
ljmp
mov
rorb
fstpt
sub
repnz
arpl
xor
ret
push
dec
cmp
test
pushf
js
pop
mul
stos
call
je
and
push
jbe
sbb
idivb
jge,pt
inc
repz
jbe
hlt
rcrb
insb
xchg
cmpsb
jp
sub
incb
sub
int
test
or
dec
lahf
roll
and
xor
cmpsb
and
insl
arpl
popf
xchg
sbb
xlat
mov
jecxz
lock
in
in
shrb
sbbl
jmp
mov
adc
and
hlt
add
decb
push
int
push
test
test
mov
xor
adc
mov
jge
push
push
mov
or
mov
mov
ss
ret
scas
ljmp
insl
loope
adc
mov
jo
jp
xchg
out
cwtl
pop
loopne
mov
cmp
pop
in
mov
lret
lock
push
xchg
xor
jbe
lods
data16
jmp
lret
shlb
mov
insb
dec
mov
dec
push
test
xor
jmp
fabs
mov
pop
xchg
and
mov
fwait
xor
cmp
pushf
icebp
stos
mov
arpl
push
push
add
cvtpi2ps
daa
and
in
add
jnp
push
pop
dec
or
xchg
mov
sbb
and
movsb
or
or
imul
out
push
mov
and
iret
xor
loopne
out
repz
add
add
jae
imul
cmp
clc
scas
int
lret
jecxz
jne
ds
popf
gs
push
xor
jecxz
xor
inc
xchg
fcmovnbe
imul
js
sbb
sbb
rorb
jns
test
inc
cmp
cmp
inc
ficoms
mov
test
scas
jle
cmp
push
jno
dec
pop
sbb
jae
mov
stos
bound
mov
mov
cltd
out
sub
test
jmp
cli
shl
fs
outsl
add
mov
xor
fucomp
and
aas
adc
insl
xchg
mov
add
xchg
stos
add
std
add
ret
and
pop
call
shrl
mov
sbb
jae
sub
or
sub
jecxz
mov
lods
mov
mov
leave
hlt
lahf
in
fisttps
stos
inc
aam
shlb
adc
in
imul
xchg
or
sarl
lcall
cltd
hlt
mov
adc
call
add
stos
cwtl
gs
pushf
test
jp
fucomp
shlb
pop
call
iret
jecxz
or
adc
xor
leave
cmp
mov
fsubp
jo
into
outsb
pop
xchg
pusha
mov
into
xor
ja
test
cmp
mov
scas
pop
sub
or
jns
int3
xchg
stc
mov
and
sub
movsb
push
mov
jnp
out
jbe
xchg
fwait
mov
jae
ret
pusha
or
addr16
xlat
mov
xchg
push
adc
cs
sub
ss
and
enter
mov
or
lods
push
fs
imul
push
jbe
sbb
jbe
pop
jns
jae
xchg
dec
jecxz
in
jecxz
scas
pop
repnz
xchg
arpl
scas
call
xor
xchg
jnp
sbb
pop
mov
sub
cli
test
lods
iret
es
scas
icebp
inc
jp
add
rolb
lds
jns
jmp
add
pushl
je
jbe
ds
fsts
fsubs
aad
and
rcrb
movsb
inc
mov
std
mov
and
adc
stc
xchg
push
scas
mov
add
mov
iret
xchg
stos
lahf
xor
or
add
enter
fwait
and
aas
enter
cmp
push
shr
mov
ljmp
idivb
push
sbb
lea
mov
je
inc
fisttps
add
fiadds
pop
sbb
enter
test
out
push
daa
cmp
jge
pop
shlb
out
xlat
outsb
imul
sub
inc
jno
in
add
movaps
pop
in
rclb
mov
in
fcmove
data16
rclb
repz
cmp
movsb
sbb
inc
sub
jl
fadds
movsl
repz
scas
mov
lds
dec
add
test
sub
xor
inc
cld
mov
in
notl
call
outsb
push
jne
xor
fwait
iret
dec
mov
mov
cltd
dec
dec
mov
mov
enter
andb
push
idivb
mov
leave
push
lock
jl
add
leave
pop
mov
mov
jae
inc
or
mov
movsb
aas
sti
cltd
xchg
push
mov
mov
mov
stc
sbb
mov
mov
fldenvs
mov
leave
xchg
js
test
inc
lods
ret
pushf
inc
or
inc
movsbl
ss
cmpsl
mov
jmp
into
pop
mov
ja
inc
fbld
icebp
add
lods
sub
xlat
mov
and
pop
shl
mov
cmp
in
pop
mov
mov
rcrl
and
je
pusha
xchg
adc
dec
sbb
pop
push
ss
push
lahf
adc
adc
push
test
dec
xchg
imul
lods
xlat
test
lds
ja
jle
rcrb
push
dec
shll
lcall
aad
inc
test
mov
dec
pop
inc
cmp
mov
dec
mov
cmpsb
jo
sbb
loope
adc
mov
dec
bound
mull
lock
and
decb
dec
repnz
lcall
pop
addr16
or
icebp
loope
sbb
jo
lret
jg
ret
or
incl
mov
lahf
clc
cmp
adc
push
ljmp
add
sbb
lock
sub
inc
jb
xor
es
shll
mov
adc
and
in
daa
jbe
mov
dec
or
jp
cltd
mov
inc
stos
or
mov
test
dec
outsl
mov
outsb
jo
mov
cld
and
popa
stos
ficompl
sbb
inc
xor
mov
dec
lcall
rcrb
mov
daa
jecxz
mov
jb
add
aam
push
dec
addb
test
and
inc
lcall
insb
mov
sahf
decl
ds
and
fs
fs
pop
or
lahf
test
mov
sbb
push
outsl
push
mov
mov
icebp
xor
adc
cmp
pop
pusha
mov
ds
mov
push
dec
data16
fistps
jge
lds
stos
or
or
lcall
and
add
les
iret
pop
jecxz
jo
cmp
cs
mov
fwait
aas
out
adc
mov
nop
jg
int
jno
ret
adc
push
daa
inc
nop
aaa
add
and
aam
std
mov
test
mov
insl
xor
push
cmp
gs
mov
cmp
inc
lock
fcomi
cmc
mov
cmp
inc
jns
aad
xchg
rol
mov
push
xor
repz
inc
dec
fists
sub
inc
outsb
int
pop
js
aad
notl
nop
xchg
jbe
fldl
jle
adc
xcrypt-cfb
cmpsl
and
xchg
jb
sar
mov
fld
fimull
out
pop
mov
loopne
adcb
into
push
sub
push
sub
jp
push
add
push
nop
cs
sbb
call
outsb
sbb
dec
fdivrs
imul
cltd
out
dec
inc
jg
mov
xchg
sub
mov
cltd
lods
faddl
sahf
loope
pop
mov
push
cmp
and
sbb
jg
fists
xchg
int
pop
jae
lahf
hlt
xchg
imul
mov
jl
shl
and
ss
ja
inc
add
movsl
push
sub
mov
fxch
or
or
sbb
push
out
leave
cli
out
pop
jmp
inc
fiaddl
add
nop
clc
popa
adc
jne
fbld
fists
push
push
cmp
jnp
jecxz
dec
jp
cmp
mov
lret
add
testl
lea
leave
mov
sub
xchg
push
xor
sbb
mov
movsb
in
cmp
int
sub
add
or
mov
jnp
call
pop
mov
xchg
stos
cmp
dec
lret
mov
add
or
mov
sub
xchg
sbb
sub
cmpsl
sbb
add
es
orl
imul
stos
pop
orb
test
adc
outsb
or
add
xor
cs
inc
push
xor
fs
pop
rclb
stos
dec
jno
lds
sbb
jge
pop
mov
cld
rcll
mov
mov
xchg
aaa
xor
inc
or
xchg
es
movsl
ds
mov
and
push
adc
xchg
ja
mov
add
and
jmp
push
jge
push
lds
xchg
jecxz,pn
xchg
in
test
ss
mov
or
stos
mov
push
inc
outsb
leavew
ret
or
mov
jne
ret
sarl
push
rcll
sub
sbb
ret
adc
insb
popf
out
inc
jno
incb
ret
add
fcmovb
leave
sub
mov
test
push
sbbb
pop
mov
add
pop
mov
and
fmuls
pop
lea
inc
fs
js
mov
push
push
sti
scas
mov
or
daa
ds
enter
popa
mov
jbe
aas
mov
movsl
mov
add
sub
movsl
out
aaa
push
lret
pop
add
lods
cmp
adc
jns
mov
aas
ret
insl
or
mov
jg
jle
xor
aad
lahf
inc
xlat
xchg
shlb
enter
das
mov
test
out
cmp
not
sarb
rclb
imul
into
xor
out
push
sub
ja
inc
fxch
xchg
cmp
cmpsl
fdiv
mov
in
sbb
mov
push
dec
lods
mov
add
push
jne
sbb
mov
js
pop
out
fwait
rclb
sarl
loopne
aad
stc
mov
ja
nop
leave
mov
push
adc
test
lds
sbb
push
push
test
sbb
sbb
xchg
cld
in
scas
shrl
sub
mov
and
jmp
or
jne
cwtl
scas
sbb
xlat
fisubrl
cmp
cmpsl
imul
mov
lds
mov
aam
aad
dec
cld
push
mov
inc
or
lahf
sub
lret
shll
aam
push
aam
shlb
adc
mov
movsb
dec
stc
add
mov
int3
push
push
cli
popa
xchg
jmp
sub
out
aaa
sbb
in
hlt
xchg
popa
adc
inc
outsl
dec
inc
rorl
dec
pushf
cmp
out
xchg
inc
mov
aas
sbb
add
sbb
movsl
sahf
aam
pusha
icebp
adc
pop
mov
es
push
adc
dec
mov
pop
imul
out
stos
cld
jno
lret
inc
mov
into
cmp
add
pusha
mov
adc
sub
or
pop
and
add
fwait
jb
mov
sbb
lods
mov
mov
sub
jb
fists
fnstcw
inc
push
popf
push
cmp
loopne
and
mov
push
jp
pop
jp
or
rcll
pop
addb
fiaddl
out
cmpsb
sub
pushf
rorl
fwait
ss
add
pop
mov
adc
rcrb
xchg
ds
xchg
bound
xchg
dec
rcr
xlat
imul
xchg
cmpl
and
loope
je
les
mov
orl
sbb
jns
mov
fs
or
cmpsl
fiaddl
lds
sbb
push
iret
adcb
cmpb
xor
mov
sub
cli
xlat
dec
sbb
pop
scas
outsb
jo
shlb
sub
fstl
insl
mov
lret
gs
lret
jno
sbb
xor
aaa
lock
shr
clc
aaa
out
mov
rcrl
dec
dec
stos
mov
nop
jbe
sub
scas
test
or
or
pop
inc
popa
stc
icebp
xchg
or
enter
or
lret
outsb
mov
aad
fstl
adc
jg
mov
xor
sub
das
test
repz
or
jne
pop
int3
lret
movsl
mov
dec
movsb
cmp
mov
test
add
jge
or
insb
repnz
popf
adc
je
cmpsb
push
mov
mov
add
jecxz
cmp
inc
mov
addr16
stos
sub
mov
in
lea
loopne
call
xchg
gs
and
adc
push
push
inc
jno
or
lea
xor
cld
inc
mov
mov
sarb
cmpsl
test
cmp
sbb
in
repnz
jnp
je
pop
hlt
pop
push
mov
mov
test
loope
sbb
lret
mov
cli
jle
mull
pushf
mov
das
mov
adcb
xor
int3
jo
rcll
insb
test
xchg
in
dec
sti
dec
cmp
data16
in
pushf
aam
int3
push
mov
inc
sahf
loope
mov
cwtl
cmp
mov
bnd
fdivrl
jecxz
gs
jle
mov
dec
loop
fcomps
pop
cmp
fdivl
pop
hlt
push
fisubs
push
sbb
xlat
shl
aas
dec
dec
outsb
mov
add
fmuls
inc
pusha
outsl
js
push
mov
pushf
jl
xchg
push
xor
loope
lret
jo
addb
mov
xor
test
pop
pushf
in
mov
les
inc
es
push
outsl
lahf
inc
aaa
pop
test
xor
mov
dec
inc
pop
lret
cmc
xor
mov
ror
lods
call
loope
ss
adcl
mov
push
enter
and
incl
mov
lods
sbb
repz
aad
mov
dec
cwtl
call
pop
sti
xchg
jno
mov
xor
lret
ljmp
jecxz
xchg
pop
out
insl
sarb
mov
dec
or
adc
adc
mov
adc
push
cltd
loopne
cmp
into
xchg
sahf
sbbb
xchg
inc
adc
iret
mov
lods
cs
mov
dec
jnp
mov
leave
enter
xor
inc
mov
xchg
dec
or
xchg
fwait
adc
xor
sti
or
push
movsb
es
adc
sub
mov
pop
testb
cmp
data16
nop
push
sbb
adc
xchg
xchg
test
dec
push
lret
adc
std
pop
sub
sbb
jl
test
call
imul
in
in
push
cmp
mov
fcom
dec
vphsubdq
or
jno
das
xchg
add
or
cmpsl
mov
mov
hlt
stc
pusha
push
sub
xlat
jb
aaa
nop
int
sub
lcall
adc
add
sbb
adc
push
jbe
lock
dec
testl
adc
fiadds
mov
adc
cltd
data16
mul
movsb
push
inc
push
pop
mov
rcll
shrl
sahf
jns
gs
icebp
loopne
inc
cmp
or
sbb
sbbb
daa
loope
call
ljmp
mov
repnz
cmp
movsl
cmc
jg
xchg
xchg
push
shlb
inc
mov
lret
dec
mov
and
out
sbb
sbb
out
jmp
mov
call
xchg
add
test
push
push
divl
and
mov
or
rcll
testl
dec
mov
adc
and
lret
ss
cmp
inc
inc
sbb
fmuls
aas
add
mov
xchg
mov
out
aad
enter
dec
stos
je
jbe
movsl
daa
push
inc
sti
mov
js
jg
xor
xchg
dec
mov
push
xor
testl
dec
test
push
or
popl
push
sub
inc
pop
sbb
lods
mov
stos
mov
fstpt
add
dec
jne
ds
jg
jge
cli
out
push
pop
mov
jae
test
mov
pop
lods
out
sub
cltd
loope
adc
scas
pop
je
icebp
push
mov
lock
inc
icebp
jnp
inc
cmp
or
adc
dec
push
cmp
jecxz
flds
mov
scas
sar
sahf
jne
in
imul
fcom
aad
and
or
out
or
mov
mov
and
sbb
jle
pop
punpckhdq
ljmp
mov
dec
jecxz
sub
jae
in
incl
mov
dec
adc
clc
jmp
mov
pop
push
test
jo
std
sub
cmc
movsb
out
xlat
mov
inc
int3
pop
pop
mov
sbb
cmp
push
and
leave
ss
and
out
jbe
push
outsb
fldcw
shlb
mov
or
daa
enter
pusha
data16
fldl
fldt
cmpsb
push
cmovp
xchg
add
lahf
sahf
cmp
mov
ss
in
mov
lcall
push
popa
popf
sbb
xchg
pusha
call
xor
mov
mov
adc
cmp
fs
cmp
cltd
and
movsb
insb
cmpl
and
cmp
inc
jl
in
add
out
lds
lahf
movsl
cmp
pop
jbe
rcrb
push
rorb
jns
mov
jns
aam
and
int3
clc
andl
jo
cmp
inc
or
jno
jb
jae
adcb
pusha
scas
or
xor
adc
push
popf
lret
add
xor
or
adc
fstps
xlat
mov
xchg
push
cld
jecxz
andl
call
lea
mov
push
jecxz
fistl
fdivrl
pop
mov
mov
scas
mov
adc
lret
cmpsl
lock
pop
popa
cmc
mov
cld
insb
ror
ret
cmp
inc
lds
cwtl
movsl
jne
clc
js
adc
fs
int3
cmp
mov
push
test
jmp
inc
and
addb
xchg
xor
jmp
out
movsb
or
jecxz
lret
push
jp
mov
xor
gs
ljmp
out
dec
into
fstl
andl
into
notb
sti
outsb
sub
stos
nop
jnp
mov
cwtl
mov
jne
cmpsl
dec
cli
jg
cmp
sub
or
sbb
fcompl
jmp
leavew
xlat
pusha
jg
fisttpl
ret
fisttps
jmp
or
test
dec
mov
or
add
jo
cmp
xchg
cli
sar
inc
fnstenv
jecxz
xor
fidivrs
push
les
cmp
neg
stos
sbb
dec
dec
mov
xor
pop
mov
insl
aad
test
cmp
cmp
sbb
pop
mov
movsb
dec
jp
inc
mov
add
ret
ss
sbb
mov
es
pop
sahf
inc
aad
dec
push
test
aad
add
f2xm1
mov
out
cli
xchg
fdivrs
cs
dec
sbb
ss
stc
pop
stos
inc
inc
jle
inc
adc
mov
icebp
imul
je
mov
cmp
int3
xchg
gs
pop
ds
stc
in
roll
imul
lcall
cmpsb
fcoml
imul
push
out
hlt
inc
inc
sbb
xchg
and
adcb
mov
mov
pusha
ret
ljmp
test
sbb
sbb
ret
in
jb
add
popl
out
int
and
outsb
leave
mov
lods
cld
cmp
loope
pop
cmp
shrb
iret
xchg
gs
cmpsb
xor
jnp
mov
add
and
mov
stc
add
inc
push
jae
lods
repz
mov
dec
int3
mov
cmc
mov
outsl
sub
pop
movsb
inc
xor
pop
mov
mov
inc
cmc
aam
rcrl
jbe
jp
loop
lds
loope
mov
fbld
das
mulb
mov
xchg
or
mov
repnz
lods
jmp
test
mov
adc
ljmp
cltd
cmc
setle
aas
jmp
js
jg
mov
and
mov
lret
xor
shll
jae
pop
sbb
scas
or
sub
adc
cmp
mov
mov
dec
add
mov
int
cli
and
xlat
in
push
adc
adc
mov
sub
pop
fwait
jecxz
dec
push
mov
aaa
add
xor
gs
pushf
popa
jae
cmpsb
test
jb
cmc
mov
add
xor
jb
int
adc
mov
jnp
inc
or
int
test
fdivrs
pop
mov
call
add
jle
or
xchg
sbb
xor
test
mov
xorl
aaa
movsb
fdivs
dec
addr16
inc
mov
pusha
movl
popa
pushf
jmp
pop
push
push
es
pop
hlt
xor
mov
or
adc
cmpsl
push
or
mov
cmp
sbb
jo
cmp
mov
insl
idivb
imul
sub
ja
sbb
sbb
adcl
jecxz
ss
and
push
out
stos
repz
or
sbb
lret
push
sbb
test
mov
test
adc
lods
daa
sar
pop
leave
data16
mov
xor
orl
inc
leave
dec
push
sbb
mov
jmp
pop
push
mov
cmp
push
bound
ja
xchg
xor
in
pop
sbb
and
stos
fiadds
mov
cltd
add
pop
mov
push
xchg
pop
js
xlat
hlt
dec
jno
out
les
in
imul
pop
mov
pop
in
in
clc
cmc
cmc
repz
int
mov
out
lahf
cwtl
jle
dec
cmp
mov
and
cs
jp
mov
pop
cmpps
sbb
push
push
cmp
jbe
int
pop
sahf
sahf
pop
pop
push
push
add
ficoml
mov
xor
in
cmpsl
int
xor
jl
pusha
mov
sbb
push
add
in
cmp
inc
cmp
or
sbb
ret
xor
jne
add
push
dec
lret
fldenv
ret
in
cmp
lock
lcall
ss
mov
xchg
and
jbe
jnp
push
aad
add
mov
shlb
add
inc
insb
test
lahf
loopne
notb
jae
sbb
cmpsl
testb
and
fmull
adc
sub
add
aas
jns
mov
or
arpl
dec
cltd
neg
sti
lret
push
mov
test
dec
jnp
adc
popa
loop
adc
pusha
inc
clc
mov
imul
and
mov
pop
into
loopne
xor
cmpsb
xchg
out
pop
out
jno
push
push
xchg
pop
test
jbe
xchg
or
in
pop
stos
shrl
stc
and
push
xchg
mov
mov
ja
jle
xchg
pusha
push
imul
dec
xchg
decb
jp
inc
dec
dec
fdivl
dec
jbe
js
sti
insl
jae
push
stos
shr
test
into
fisubrs
aam
faddl
adcl
jb
movsl
cld
sar
mov
xchg
icebp
mov
in
jbe
adc
mov
sub
sahf
out
cmp
push
add
flds
scas
mov
dec
fldt
clc
jae
mov
add
cmp
mov
stc
daa
cmp
fimuls
push
dec
and
lods
test
loopne
movntq
dec
xchg
nop
addl
adc
sbb
fsubs
je
mov
mov
into
sti
mov
push
fcoml
call
or
sub
jmp
sti
jno
and
push
test
mov
jmp
sti
sub
push
pop
sbb
push
shll
inc
and
pop
sub
pop
xlat
mov
push
lret
xor
repz
xchg
mov
fldl
test
not
movsb
sub
mov
mov
jecxz
mov
aam
imul
pushf
lret
push
repnz
jne
les
stos
rdmsr
dec
fisubrs
sbb
pop
test
inc
ret
xchg
inc
mov
dec
lods
sub
fistpll
xchg
mov
mov
xchg
xchg
cmp
into
sub
rep
out
mov
xchg
out
insl
sbb
mov
jno
jb
xlat
mov
loopne
in
mov
xchg
popa
lret
sub
push
icebp
aad
in
mov
push
ret
mov
xor
mov
enter
xor
cmpsb
ret
sti
push
jp
popf
push
or
dec
or
aam
or
mov
jne
cmpsl
adc
pop
stc
lods
xor
push
into
rorb
subl
js
mul
sub
loopne
das
js
es
in
outsb
in
and
push
fldenv
rcrl
fisttpll
dec
push
pop
jne
xchg
mov
sub
jo
push
add
lahf
and
xchg
std
mul
mov
mov
loopne
push
push
aaa
ds
pushl
ljmp
xor
mov
fst
xor
mov
fildll
cmpsl
arpl
hlt
and
xchg
and
mov
mov
add
pop
sub
jb
add
or
inc
mov
cld
mov
pop
lret
add
xchg
cmp
add
mov
cltd
std
das
pop
push
imull
inc
mov
stos
pop
paddq
cmp
cwtl
es
xor
jno
insl
repnz
push
adc
iret
cmp
dec
iret
scas
les
stc
sbbl
jns
jge
inc
jnp
popa
mov
insl
xchg
jle
pop
popa
test
ret
in
les
out
pop
adc
out
adc
push
xchg
pop
xor
jo
pop
push
jp
add
xor
push
mov
cmp
cmpsb
stos
inc
mov
stos
mov
in
std
cmp
adc
push
push
or
lock
addr16
ret
repz
fsubrs
cmp
ret
jg
cltd
mov
dec
push
gs
inc
rcrb
jo
dec
add
add
and
jo
shlb
mov
pop
dec
mov
outsb
sbb
cs
loope
icebp
mov
lcall
or
aam
mov
cwtl
stos
gs
lcall
push
fnstcw
lret
push
rolb
pop
mov
jne
sbb
mov
icebp
xchg
mov
sbb
mov
pop
out
fildll
fs
mov
adc
ret
mov
shlb
mov
int
andl
leave
jmp
pop
pop
in
and
mov
mov
mov
je
scas
push
mov
ljmp
jo
push
push
mov
pusha
mov
sub
xchg
sbb
push
rol
rcrb
cmpsl
loope
addl
sbb
mov
sbb
imul
pop
sub
push
stos
ret
inc
sbb
add
xchg
sbb
int3
sbb
add
stos
fwait
ret
pop
mov
mov
jae
iret
pop
in
cmp
pop
call
jg
xchg
ljmp
in
cmp
insl
push
cmpsl
cltd
mov
dec
pop
jle
dec
mov
push
cmp
pop
xchg
mov
popa
mov
xchg
les
adc
add
cli
jno
push
pop
ret
push
and
mov
fdiv
mov
add
inc
test
repnz
sti
inc
dec
pop
lret
jo
and
out
dec
dec
push
adc
cmp
add
mov
fadds
cmp
enter
idivl
fsubs
inc
push
xor
jl
leave
xchg
mov
cmp
adc
mov
imul
lret
mov
sub
push
int3
pop
pop
fmull
sahf
push
and
cmpsb
adc
mov
pop
scas
lret
xchg
or
arpl
or
mov
sbb
sub
rorl
inc
xchg
sahf
sbb
orb
xchg
pop
and
je
mov
push
dec
xchg
push
les
rorl
mov
pop
fsubs
loop
movsl
jg
cld
stos
test
mov
jns
pop
jns
cmp
div
in
cmpsb
fnsave
fsubl
test
add
xchg
lahf
mov
insl
loop
rcll
insb
dec
inc
push
arpl
mov
dec
inc
jg
pop
push
and
mov
cltd
rep
nop
and
dec
push
xchg
push
pop
mov
insb
sub
mov
shlb
hlt
fsubrs
insl
dec
testl
popf
mov
pop
rcl
sbb
fucomi
outsl
in
lods
pop
fstps
push
scas
or
and
scas
jl
inc
adc
aad
xor
out
int
pop
xor
mov
adc
pop
outsl
sub
and
mov
mov
mov
mov
popf
ds
icebp
popa
lcall
lock
in
lods
or
jne
add
loopne
add
xchg
loopne
cltd
mov
mov
jo
repz
jno
dec
ret
dec
push
mov
and
xchg
int3
push
fisttps
lret
out
outsl
mov
pushf
fs
adc
xor
adc
push
lds
xchg
nopl
mov
pop
mov
mov
fldl
mov
adc
mov
sti
fiaddl
sar
notb
adc
scas
inc
xorl
dec
and
enter
cltd
xor
mov
xchg
jb
sti
push
or
fnstenv
pusha
mov
lods
pop
fimull
or
bound
dec
cmp
hlt
dec
loop
sbb
std
cmp
imul
adc
push
fadds
or
pop
push
sbb
aam
arpl
jl
mov
pushf
cltd
lret
in
je
mov
ret
out
aas
insl
sar
push
xchg
rcrl
rcll
orl
sbb
stos
sbb
test
scas
pushf
mov
sti
loopne
mov
out
inc
push
or
mov
jno
pop
dec
xor
mov
inc
and
mov
icebp
loope
adc
cmpsb
repz
repnz
push
sbb
test
fs
dec
iret
or
xor
das
ljmp
js
pop
xor
cmp
loop
xchg
mov
pause
add
shlb
inc
ss
test
push
addr16
fistpll
lds
insb
das
or
mov
add
xchg
pop
scas
lods
scas
add
xchg
mov
pushf
jae
out
sub
mov
adc
pop
xchg
mov
rcrb
sbb
jmp
push
adc
xchg
out
movsl
ja
sub
dec
cmp
push
dec
rorb
mov
mov
jp
or
dec
cmpsb
jbe
sahf
xor
jp
mov
jnp
sti
jmp
jbe
jne
push
ja
mov
mov
and
cmc
push
iret
ljmp
xchg
subb
sbb
ss
jb
adc
jl
pop
lock
or
adc
fidivl
adc
mov
pop
jge
jnp
into
mov
stos
mov
pusha
pop
clc
or
mov
loopne
sub
dec
add
xchg
xchg
or
icebp
inc
shrb
add
jmp
xchg
cmp
push
test
lds
jbe
push
sbb
sbb
pop
mov
pop
inc
loop
mov
out
dec
or
popf
jae
cmp
or
std
mov
mov
out
add
lret
push
sbb
jns
xor
in
in
jmp
xlat
je
ret
les
add
xor
dec
dec
mov
enter
pop
test
xor
sahf
pop
sub
lds
sbb
loope
xchg
lods
xor
sbb
or
cwtl
lods
shrl
mov
mov
push
mov
inc
push
jecxz
stos
pop
mov
inc
or
pop
or
rorl
clc
xchg
cmp
mov
adc
stos
adc
stc
or
inc
in
mov
lock
pop
push
jb
pop
stos
in
mov
movsb
popa
pop
sti
dec
in
and
inc
inc
sub
enter
loopne
adc
inc
lods
xchg
jnp
andl
or
out
nop
mov
pop
sub
dec
clc
push
mov
idivb
les
mov
push
roll
sbb
xlat
dec
add
es
inc
dec
les
popf
sti
enter
dec
sub
je
test
in
shl
jb
xor
inc
sbb
mov
loope
hlt
std
xchg
rorl
jmp
xorb
jmp
push
aad
mov
cmpsl
sbb
xchg
mov
inc
xor
jno
inc
cld
add
mov
lcall
or
adc
cs
adc
test
xchg
in
cmp
xchg
push
inc
dec
hlt
test
sub
mov
insb
fistpl
fistps
sbb
imul
add
pop
ss
fiaddl
mov
fnsave
pop
clc
out
dec
sub
dec
scas
outsl
int
icebp
cs
shlb
mov
out
and
mov
jg
and
lods
pop
into
das
inc
sbb
frstor
inc
jno
pop
icebp
xor
add
xchg
mov
cwtl
rorb
test
inc
xor
mov
push
mov
jns
inc
ret
xor
imul
ret
jecxz
mov
orl
mov
dec
mov
mov
sti
jno
repz
jae
mov
pop
add
lret
adc
pop
mov
jno
insb
sub
inc
in
mov
repnz
push
dec
and
arpl
pusha
incl
inc
mov
jl
es
sbb
aas
packsswb
loop
cmpl
or
mov
sub
pop
xchg
iret
fnsetpm(287
hlt
daa
inc
pop
mov
lret
ljmp
stc
xchg
mov
aad
movsl
fwait
inc
inc
xchg
arpl
bound
cmp
bswap
rorb
ficoms
notb
jne
cs
pop
mov
adc
in
mov
movsb
test
aad
inc
outsb
insb
fcmovnu
dec
mov
pop
push
mov
addr16
and
xchg
push
or
xchg
push
idivb
and
lret
testl
pop
or
aad
andl
xchg
les
movsl
in
mov
sbb
loopne
jbe
test
xor
jae
sbb
adc
push
inc
popf
fwait
xchg
pusha
jb
addr16
filds
xlat
or
inc
dec
push
int3
sahf
adc
testb
mov
or
mov
sbbb
pusha
rcrb
int
aaa
or
fdivr
pop
cld
fisubrl
jl
pop
adc
les
add
ds
ss
xor
mov
gs
jmp
lahf
sbb
cmpb
cli
inc
mov
shlb
sub
ret
adc
aas
pusha
mov
mov
add
mov
mov
imul
jp
mov
lods
jns
outsl
cwtl
aam
jle
sti
test
rcr
jb
xor
in
fidivs
pop
pop
add
fcompl
inc
dec
jnp
movsl
aam
adc
cli
lret
inc
pop
roll
xchg
mov
out
stc
cmp
sub
sahf
lea
flds
ffree
arpl
dec
in
push
xchg
adc
adc
push
cmp
push
dec
roll
das
mov
jno
lea
sbb
outsb
movsl
adc
and
mov
ficompl
xor
loope
or
loope
cs
cmp
hlt
or
rcll
imul
nop
pop
push
lcall
andl
dec
inc
je
add
std
add
mov
xchg
jle
jmp
into
mov
push
js
mov
inc
xchg
or
cmpsb
xchg
cltd
das
outsb
mov
aam
mov
mov
enter
push
sbb
lods
xor
mov
mov
fwait
movl
mov
and
loopne
in
add
jo
arpl
push
sbb
aas
or
lahf
iret
or
sahf
lds
lock
pushf
or
and
int
push
xor
or
cmp
and
inc
out
cmp
adc
cld
push
jb
nop
or
sbb
push
pop
jge
inc
ja
pop
clc
pop
sbb
sub
hlt
iret
sahf
stos
lret
loopne
lods
mov
jbe
xorl
int
mov
iret
mov
push
and
pushl
fiaddl
jl
popf
mov
les
add
add
push
or
and
loop
pop
test
mov
cmp
lods
shll
icebp
stc
aas
mov
sbb
imull
or
xor
popa
jno
iret
ret
lods
jne
xchg
mov
lea
je
push
lret
stos
in
mov
dec
sub
popa
or
cmp
movb
test
pop
call
ret
hlt
push
add
add
push
icebp
movsl
lahf
jb
xor
fmulp
out
sub
pop
cwtl
mov
mov
mov
inc
je
mov
mov
cld
psrld
lock
stc
mov
sbb
fdiv
lahf
xchg
push
pop
jne
lock
stc
out
mov
inc
xchg
cmp
lcall
push
xor
mov
push
cld
int3
scas
xlat
inc
scas
and
mov
ret
mov
mov
movsb
sub
jmp
leave
jbe
and
rcll
jl
test
or
lret
pop
pusha
call
fists
push
sbb
test
test
mov
repz
adc
cli
std
loop
xchg
loope
or
cmp
addr16
movsl
jmp
adcl
stos
cmp
inc
sbb
xor
mov
nop
push
sbb
and
push
dec
mov
push
pop
pop
in
mov
push
xor
push
jbe
adc
ret
clc
pop
std
stos
jp
andl
imul
dec
mov
sarb
sahf
outsb
or
jae
inc
je
mov
add
mov
in
js
or
sar
rorl
mov
lods
bound
rcll
fsubl
mov
add
cld
and
mov
mov
lcall
fimull
repnz
into
daa
jg
mov
push
xchg
bound
cmp
mov
or
adc
pop
lcall
xor
cmpsl
arpl
movsl
cmp
nop
mov
add
cli
mov
sub
mov
sbb
lahf
lcall
pop
lds
jecxz
and
cmpsb
imul
add
mov
sbb
dec
mov
cmp
or
mov
rorl
cwtl
and
data16
daa
bound
ficomps
arpl
sbb
sbb
movsl
sub
mov
lods
sbb
test
sbb
jl
xchg
pop
jbe
cmpsb
sahf
or
imul
adcb
test
imul
shl
lcall
push
insb
cmp
arpl
inc
jns
idiv
cmpsl
test
mov
push
fnstenv
mov
push
daa
or
xchg
scas
mov
call
sbb
cmp
lds
popa
jmpw
aaa
aaa
or
cld
mov
or
xchg
int3
stc
ss
inc
push
pushf
sbb
loopne
push
xchg
in
scas
mov
enter
cmp
inc
jbe
outsb
sbb
inc
sub
mov
movsb
aam
xchg
cmc
ror
cwtl
loopne
cmc
orl
or
aaa
ja
adc
rcl
cmc
mov
push
and
das
enter
out
add
and
frstor
adc
pop
iret
dec
mov
fcomip
add
imul
enter
arpl
popa
mov
clc
cmp
push
inc
insl
and
sub
jns
jae
lret
and
int
inc
fs
js
movsb
inc
dec
notb
outsb
inc
adc
jmp
add
dec
mov
int
push
jns
and
cmp
movsb
jo
lret
xchg
cltd
dec
or
leave
mov
jle
ret
mov
mov
mov
cmpsl
inc
mov
subl
xchg
sbb
cmp
jns
test
mov
stos
gs
jmp
mov
ret
pop
cmp
or
nop
imul
add
mov
or
mov
and
nop
outsb
loopne
add
outsl
scas
pop
test
leave
ficomps
xchg
in
mov
in
add
adc
rcrb
mov
push
aas
jb
mov
sbb
and
jp
mov
xchg
xchg
stc
push
loopne
arpl
add
push
pop
inc
inc
and
addl
or
dec
imul
test
cmp
push
xor
cld
mov
mov
and
sub
and
loope
rcll
jp
and
xrelease
in
push
test
mov
jb
mov
jle
and
push
punpckhwd
rcrb
mov
add
cmp
hlt
sub
cmc
fucom
lret
out
jae
xchg
test
push
data16
in
push
cs
daa
iret
or
jae
cmpsb
sbb
inc
pop
out
test
repz
inc
pop
xor
mov
mov
lods
adc
dec
push
xor
xchg
fidivl
aad
into
int3
out
push
hlt
xchg
icebp
or
xchg
ljmp
mov
sbb
mov
or
mov
call
test
dec
mov
mov
or
shll
pop
lret
data16
jae
daa
and
add
test
sub
pop
or
jns
dec
test
js
sub
movsb
adc
dec
fsubs
inc
repnz
push
and
mov
movsb
ret
mov
out
nop
js
roll
filds
dec
test
stc
sbbb
aas
sub
cmpsl
scas
add
inc
in
in
out
fsts
ja
adc
into
std
ret
cmpsb
mov
leave
popf
fs
mov
xor
xor
xlat
push
push
movsl
lea
cmp
adc
sbb
push
mov
pop
fcomp
fldl
dec
fisubrl
inc
mov
add
mov
ret
sti
ja
sub
clc
xchg
push
pop
adc
jbe
cmp
fdivs
pop
jp
add
add
sbb
sub
push
ret
lcall
xor
daa
leave
inc
std
in
mov
xchg
in
pop
imul
popa
mov
daa
push
repz
push
and
pop
adc
pusha
pop
enter
das
aas
ja
sbb
dec
adc
das
mov
push
nop
out
js
jbe
mov
call
scas
test
xor
xchg
sub
or
hlt
cmp
jecxz
cmp
and
adc
mov
ret
ret
push
sbb
rcrb
outsl
clc
rcrb
and
dec
mov
ss
jecxz
cmpsb
mov
faddl
dec
std
adc
sub
pop
icebp
clc
add
dec
out
jle
pop
adc
les
mov
cs
mov
inc
fsub
jb
aas
mov
sbb
repnz
mov
lcall
fistps
gs
arpl
xor
test
jp
insb
mov
cmp
inc
sbb
repnz
fs
iret
scas
dec
pop
lret
out
mov
cld
fstpl
lods
sbb
jge
adc
jbe
addr16
and
ficompl
mov
push
mov
aam
std
pusha
ss
mov
or
into
jl
movsl
addr16
jne
cli
leave
dec
movsl
push
test
pop
stos
dec
jnp
repnz
mov
push
jnp
leave
xchg
sbb
sbb
and
or
sbb
call
push
push
aad
lret
movsl
inc
jb
add
and
sbb
cmc
js
or
stos
xor
adc
add
jecxz
lea
fistpll
sbb
jb
pushf
push
dec
dec
int3
insb
jbe
lahf
ret
or
pop
add
dec
stos
in
faddl
pop
addr16
xchg
addr16
xor
out
mov
cmpsl
pushf
cmp
xchg
decb
xchg
push
lret
setns
int
scas
fisubrl
and
cwtl
jg
push
nop
sub
fwait
cmp
fucomp
lods
jns
xchg
mov
xor
or
xchg
cmp
fs
loop
xchg
ss
aad
fwait
jle
test
or
cltd
aad
mov
jnp
xchg
add
push
or
inc
cwtl
xchg
sbb
insb
or
push
push
dec
pop
je
mov
mov
bound
icebp
push
cmp
adc
arpl
outsb
movsb
lcall
xor
lret
sbb
outsb
and
sbb
out
fs
les
stc
xchg
shrb
pop
cmp
outsb
fimull
mov
lock
cmc
mov
fstp
aaa
mov
addl
xor
adc
or
mov
mov
adc
pop
push
mov
sahf
ret
sub
mov
mov
leave
xlat
ds
xchg
mov
adc
push
imul
inc
jg
imul
adc
adc
arpl
lret
sub
push
adc
inc
adc
aaa
xlat
test
out
xor
pop
pop
int
mov
cmp
mov
xchg
pop
cltd
add
jb
mov
or
jbe
jns
mov
sbb
xchg
mov
jb
pop
popa
xlat
sub
arpl
ss
int
in
jnp
add
pop
push
cwtl
xor
and
dec
push
ret
jne
add
in
jae
shll
int
and
inc
insb
mov
popf
cmp
or
push
out
adc
push
pop
xor
xor
mov
dec
scas
aaa
mov
stos
sbb
ret
sbb
adc
mov
out
and
clc
mov
jg
cmp
shr
and
or
jns
mov
pop
sbb
shll
push
stos
mov
or
add
mov
xor
in
test
add
pusha
mov
xor
push
xchg
xchg
int3
or
shlb
sarb
mov
test
sti
jno
sbb
fmull
lret
mov
jns
sti
dec
sub
stos
sub
sub
in
sbb
xchg
dec
test
cmp
out
mov
pop
dec
stc
arpl
adc
xor
shr
int3
cmpsl
popl
sti
dec
cmp
in
aam
pusha
ret
out
es
cltd
in
jmp
jne
cmpsl
add
aam
pop
cmp
xor
mov
adc
out
push
inc
adc
mov
adc
hlt
sbb
jp
adc
xchg
pop
repnz
mov
mov
sub
aas
stos
ss
jae
cmp
aaa
pop
movsl
rol
clc
mov
test
dec
dec
add
addr16
mov
stos
stos
adc
sub
andl
scas
cmp
xchg
icebp
or
dec
or
aam
inc
cmp
sbb
push
or
mov
or
insl
mov
pop
sub
stos
jnp
scas
bswap
xlat
addr16
mov
mov
xchg
insb
pop
in
cmp
push
lret
insl
mov
enter
call
add
addr16
test
push
pop
test
outsb
das
call
add
repz
adc
lret
dec
cmp
xchg
push
cmp
mov
arpl
andl
inc
inc
lahf
addr16
and
xor
and
dec
pop
iret
repz
push
push
lock
xor
xor
jmp
inc
inc
addb
mov
jecxz
cmp
pop
jne
jp
testl
pop
inc
and
out
inc
pop
cmp
pop
icebp
adc
jl
inc
enter
test
aas
adc
adc
push
mul
mov
mov
mov
push
out
xchg
jae
jae
sbbb
scas
imul
and
jo
mov
pop
or
in
inc
cmp
add
jg
shlb
inc
push
ds
fdivrs
mov
test
cs
shll
jp
jmp
sbb
push
inc
push
xchg
inc
cmp
xchg
cld
ret
mov
shrl
pushf
ja
xor
xchg
jmp
aaa
sub
mov
push
loop
xchg
push
sub
dec
cmc
adc
mov
es
scas
dec
jmp
popa
push
and
xor
cltd
cmpsl
fwait
in
push
inc
dec
int
aam
jmp
cmpsb
lahf
mov
stos
cmpsl
dec
movsb
pop
sub
sub
mov
mov
jne
mov
jg
jno
jne
aad
into
adc
lods
ds
mov
icebp
mov
lock
pop
push
pop
cs
jp
push
ret
dec
mov
add
sbb
dec
int
shl
pop
xor
in
add
and
out
je
or
inc
adcb
frstor
sub
test
std
mov
into
movsb
pop
in
push
sbb
push
inc
cmp
cmp
shll
fwait
stos
and
mov
sub
lret
add
jmp
movsb
popf
cwtl
xchg
ds
push
mov
dec
test
xchg
dec
loop
push
pavgb
cmp
cli
mov
cwtl
mov
popa
sub
dec
popf
sub
ret
jmp
mov
inc
cmp
shll
jmp
xchg
mov
inc
pusha
inc
mov
adc
gs
cmc
mov
pop
int3
cmp
mov
mov
mov
pop
into
leave
dec
addb
out
push
pop
mov
inc
ja
lahf
fldenv
push
movsb
in
jne
pop
push
outsb
adc
js
cs
xlat
lea
xor
lods
mov
pop
inc
mov
xchg
fildll
inc
popf
and
mov
out
fwait
jg
add
call
ljmp
shll
divl
push
fistl
ret
sbbl
sbb
fsubrs
mov
sbb
orb
cmc
push
mov
dec
adc
xor
jns
or
ficomps
fs
add
xlat
jae
push
push
pop
push
mov
adc
ds
mov
imul
mov
add
das
mov
jl
xchg
pop
jnp
inc
inc
add
in
jo
jmp
popf
sbb
jp
icebp
sbb
lods
mov
inc
xchg
sbb
clc
mov
mov
mov
xor
les
dec
sti
fimull
inc
out
push
inc
mov
or
test
fs
xor
leave
je
push
fbstp
mov
mov
scas
dec
xor
xchg
and
and
test
outsb
fisubl
mov
ret
add
repz
mov
xchg
jle
in
cmp
testb
pop
std
jmp
js,pn
jnp
pop
cld
dec
fnstcw
or
mov
push
movsb
sub
scas
idivb
mov
mov
jmp
rclb
mov
adc
inc
push
add
sub
lret
out
pushf
lcall
add
gs
xchg
testl
mov
in
adc
and
ror
ljmp
jns
pop
xor
orl
test
mov
ds
scas
push
and
mov
stos
sarb
xchg
int
push
aaa
inc
aas
sti
adc
imul
pushf
inc
es
lods
or
sub
int
adcb
xchg
ss
lahf
push
sbbb
pop
push
cmp
dec
sub
jge
das
jl
shlb
scas
js
mov
jb
jns
adc
shlb
cmp
ret
arpl
mov
xor
push
iret
xchg
push
xchg
jbe
push
jno
in
fcoms
outsb
imul
rolb
xchg
fcomps
inc
jecxz
out
loopne
lods
xchg
xchg
ja
flds
hlt
sub
or
xor
fwait
shlb
ja
sbb
imul
jp
je
loope
in
pusha
and
cmp
les
ja
scas
sahf
pop
dec
gs
adc
push
push
jp
cmpsb
pop
mov
jb
and
adc
stc
or
mov
js
sbb
mov
cmp
hlt
or
imul
repnz
xchg
or
lods
loopne
pop
jnp
pop
push
fstp
inc
psubsb
jae
mov
mov
push
clc
int
sti
adcb
cmp
inc
and
dec
and
mov
mov
out
inc
dec
adc
mov
xchg
xlat
cld
addr16
xor
daa
mov
xor
and
out
sarb
xchg
xchg
and
jne
cmc
dec
pop
insb
imul
jmp
in
scas
loop
jl
jg
cmp
and
mov
cmp
pop
sub
into
lods
dec
mov
rorb
push
push
fmul
mov
loop
cmp
sbb
mov
jp
xchg
testb
inc
push
rcrl
cmp
jbe
dec
xchg
mov
adc
sub
or
jecxz
xor
test
jmp
sbb
pop
cmp
add
jno
test
fadd
dec
mov
sub
jo
cmc
inc
sbb
fadd
pop
iret
aam
inc
hlt
in
add
lret
xchg
add
lea
movsb
pop
fwait
movsb
xor
cltd
jp
sbb
push
lcall
push
push
mov
ljmp
mov
sbb
sub
add
adc
push
xchg
gs
mov
pop
sarb
lock
adc
hlt
mov
cmc
add
jmp
loop
jmp
push
xchg
sbb
push
stos
pop
test
mov
movsl
arpl
hlt
xor
push
in
adc
out
xor
jns
pop
inc
xor
xchg
mov
jne
and
adcl
inc
inc
loopne
xor
mov
call
adc
adc
mov
adc
jl
cmpsb
int3
rcll
lret
jo
rorb
or
in
jne
imul
push
adc
fildl
pop
cs
sub
out
ret
je
adc
int3
add
cmp
out
jns
add
sub
xchg
lahf
lret
or
or
inc
les
xchg
xchg
aam
adcl
dec
push
in
leave
cli
out
gs
movsb
mov
mov
adc
sub
inc
dec
insl
or
sbb
in
adc
ss
dec
sbb
xor
insb
or
shlb
mov
loop
lods
nop
rcll
mov
adc
or
std
cmpsl
push
adc
inc
in
outsl
xchg
xchg
out
nop
lret
sub
mov
and
adc
fnstcw
jl
push
and
outsl
out
cmpsb
and
ds
or
xchg
and
cmp
xchg
mov
push
or
jg
or
addb
push
movsb
mov
ljmp
cld
ret
ss
int3
arpl
aaa
sub
lds
xchg
mov
mov
hlt
xchg
jl
adc
repnz
les
xor
cmp
es
pop
jo
call
aas
lahf
lock
dec
jle
int
jp
mov
pop
sbb
and
cmp
adc
call
pop
push
iret
insb
faddp
xor
test
int
jnp
sbb
push
cmpsl
push
daa
aad
mov
push
push
pop
xor
or
mov
pop
mov
addl
sbb
mov
mov
mov
enter
inc
sbb
adc
in
push
lret
shll
aam
inc
fidivrs
mov
rclb
sbb
dec
mov
push
mov
int
sub
mov
push
aam
aam
cmp
lahf
adc
inc
ja
inc
rol
inc
repz
scas
pop
loope
push
dec
cli
adc
sub
cmpsl
cmpsb
bound
jmp
rcr
or
scas
pop
lret
inc
aam
xorl
jmp
in
test
dec
fnstenv
jno
mov
or
add
mov
sahf
cwtl
adc
and
push
jae
lds
rorl
ljmp
mov
ds
divl
inc
mov
arpl
inc
fsts
cmpsb
fcomps
out
mov
xor
outsb
out
adc
xor
and
roll
repz
jge
jbe
jae
mov
jae
pusha
mov
or
sub
sarl
loope
outsl
xor
out
int3
push
int
testl
dec
add
imul
shl
scas
cli
pop
or
and
repz
arpl
sub
ret
adc
jg
in
pop
push
popa
xchg
xlat
inc
int
push
mov
add
xor
test
xor
jmp
mov
imul
dec
scas
je
pop
mov
cld
or
sti
inc
repnz
pop
addb
arpl
mov
mov
pop
xchg
pop
ja
clc
fst
ret
sbb
in
outsb
xor
xlat
es
push
call
add
insb
mov
fcomps
push
loop
lahf
sahf
mov
mov
adc
adc
ret
jne
lret
push
xchg
scas
sub
ljmp
int3
call
xor
dec
jnp
insb
dec
adc
icebp
pop
loopne
dec
out
adc
mov
roll
ret
jle
inc
sub
xorl
out
xor
push
std
cwtl
dec
mov
fs
dec
ss
cltd
jae
loope
in
in
lcall
push
into
cwtl
push
push
push
pop
js
inc
pop
sbbl
pop
test
bound
cli
cmc
sahf
popf
ss
nop
cmpb
mov
xchg
push
jge
and
mov
inc
or
dec
pop
pop
rep
mov
jno
pusha
sub
push
xor
sbb
adc
aas
leave
arpl
dec
dec
mov
gs
mov
xor
out
add
jp
cmp
sub
bound
mov
xor
sti
ficomps
data16
sbb
fildll
inc
mov
aam
rorl
rolb
loope
jae
hlt
mov
fwait
das
stc
mov
cmp
arpl
sarb
scas
lea
ss
pusha
xchg
pop
hlt
jmp
scas
lret
je
inc
xchg
inc
aad
add
outsb
out
push
or
jno
sub
mov
sbb
or
mov
pop
sub
data16
dec
fimull
jns
sbb
adc
jb
pop
xor
movhps
nop
lcall
cwtl
pusha
xor
cmp
testl
lods
sbb
adc
adcl
add
cmp
jmp
scas
mov
mov
jb
mov
inc
mov
push
std
sti
clc
repz
sub
mov
sbb
add
sub
cmp
insb
test
pop
jmp
push
in
sbbb
mov
sub
cli
add
dec
dec
stos
adc
leave
mov
dec
sub
mov
xor
add
mov
dec
test
insb
cmp
cmp
repz
inc
mov
push
pushf
loopne
scas
fscale
in
cmp
insl
out
xchg
rclb
mov
test
outsl
and
pop
aas
dec
jle
cs
lret
dec
outsb
push
jecxz
add
jp
aas
xor
sub
cli
sbb
cmpsb
ja
push
test
rcrl
pop
xor
push
cwtl
xor
mov
fcoms
dec
or
inc
pop
loopne
xchg
lcall
push
pushf
stos
movsb
cmp
fistpll
leave
inc
test
dec
rorl
pop
idiv
addr16
jl
mov
dec
aam
jl
mov
and
sbb
sub
jno
mov
and
ljmp
mov
mov
in
jbe
test
sti
stc
lds
sbb
icebp
xchg
adc
cmp
mov
mov
xchg
cmp
movsl
ja
push
mov
pop
sti
repz
dec
fcmovnbe
divl
cmp
adc
sub
mov
and
fisttpll
mov
fisubrs
mov
roll
xor
insb
repnz
pop
jmp
adc
xchg
adc
pop
bound
iret
das
loope
xchg
xor
ljmp
or
cmp
andl
xchg
push
inc
lret
aam
xlat
pop
scas
add
test
or
es
dec
rol
bnd
add
jg
and
fidivl
cltd
call
push
inc
jmp
adc
lea
frstor
inc
adc
cs
mov
xchg
dec
repz
push
test
mov
fsubrl
or
sub
mov
mov
faddl
loop
cli
or
jo
popf
push
inc
pop
mov
insb
push
sar
std
pop
add
out
lea
fnsave
jle
sub
and
ds
dec
cs
cltd
inc
and
ss
rcll
fsts
xor
ss
dec
push
xlat
cltd
in
sbb
pop
pop
shrl
sti
shr
lds
loop
mov
pop
push
jmp
push
xchg
add
cmp
xor
ds
bound
xorl
cmp
fs
sub
aas
and
in
inc
mov
lock
sti
cmc
je
xchg
or
sub
or
xchg
cmp
call
enter
push
roll
cmc
xchg
scas
notl
push
sbb
xchg
inc
mov
test
daa
cmp
add
jge
push
ficomps
inc
mov
inc
jb
test
xchg
mov
push
jp
adc
and
adc
xor
mov
push
mov
sbb
mov
aas
lock
push
scas
or
mov
adc
cmp
adc
xchg
call
push
sub
hlt
arpl
mov
push
cmpsb
cmpsb
ficomps
es
jmp
adc
repnz
push
popf
insb
mov
outsb
push
ljmp
jp
aaa
outsb
movups
mov
std
pop
daa
shll
les
loopne
mov
aaa
jns
cmpl
cli
mov
mov
xchg
ss
popa
cmc
sub
iret
sarl
push
xor
add
xchg
rcr
icebp
add
test
fidivrl
ja
cmp
aam
xor
repz
sbbl
stc
fimull
push
scas
cs
nop
mov
add
popf
lea
jne
pop
push
jmp
pop
or
jb
jge
push
sbb
xchg
out
aad
lcall
cmp
mov
lods
sbb
xor
inc
inc
popf
sarb
test
xchg
stc
inc
push
push
or
mov
or
or
dec
pop
fisttpl
fistps
sti
pop
mov
mov
fldenv
sarb
dec
jg
mov
xchg
fnstcw
rol
pop
in
pop
cmpsl
std
cli
rcr
xorl
add
xchg
add
lods
push
adc
iret
es
sahf
inc
dec
mov
pop
je
xchg
jge
fnstenv
mov
adc
xor
loop
xchg
adc
lds
push
mov
bound
leave
sbb
push
pusha
pop
in
neg
in
movsl
fwait
and
jle
incl
daa
outsl
xchg
je
mov
dec
mov
inc
or
imul
inc
rcrb
sbb
push
movntps
mov
dec
fimull
out
insb
inc
mov
icebp
movsl
jae
xor
add
mov
les
mov
and
lret
dec
and
aaa
lods
sub
jbe
xorl
out
lcall
fldt
mov
ss
sbb
sbbb
sub
mov
std
add
dec
inc
cmp
push
rsqrtps
jge
add
and
leave
enter
lods
dec
les
jae
icebp
fdiv
push
pop
aam
pop
xor
and
pushf
fadds
xor
pop
push
rcll
xchg
fldt
rorb
pop
dec
or
loopne
jg
pop
cmpsl
adc
loopne
ror
cmp
mov
filds
popf
movsl
fimull
cmc
lea
shlb
lods
pop
int3
fs
jmp
rsqrtps
xchg
and
daa
divb
adc
xor
std
flds
adc
push
fisttpll
jnp
push
xchg
xchg
fcomi
adc
loop
shr
call
mov
aad
jle
adc
std
sbb
jae
push
xchg
add
popa
adc
mov
lods
push
mov
std
or
cmpsl
xchg
cmp
push
push
aam
sub
cmp
mov
fnsave
out
hlt
mov
xchg
std
sahf
aad
adc
jns
sahf
outsl
jle
out
xchg
inc
or
push
in
pop
mov
and
stos
xchg
sub
sbb
addr16
sti
sbb
arpl
push
pop
pop
movsl
daa
bound
mov
sub
pop
jge
lret
pop
orl
pop
lds
outsb
push
lods
xor
sub
mov
orl
jne
pop
and
xor
mov
jmp
addb
test
adc
fisttpl
push
sbb
mov
mov
sbb
in
pop
fiaddl
pop
in
add
andb
jns
adc
aas
pop
lock
mov
cld
mov
inc
pop
dec
pop
xor
ret
dec
fwait
jns
adc
mov
xchg
call
mov
inc
sub
adc
popa
mov
lcall
or
add
movsl
sarb
mov
inc
pop
sahf
nop
push
cmp
jns
test
xor
gs
pop
arpl
fisttpl
dec
cmp
mov
icebp
leave
insl
leave
sub
int3
lea
mov
ret
aaa
fs
sub
xor
lret
in
lret
lods
jne
lds
xor
dec
repz
mov
pop
jno
dec
jo
das
cmp
xor
push
dec
loopne
gs
mov
adc
in
push
fsubs
jne
or
clc
movsl
push
inc
cmp
clc
mov
push
lods
int
sahf
loope
xor
test
mov
fsubr
mov
jl
dec
mov
xchg
adc
cmp
and
fimull
dec
jg
pop
mov
out
mov
xchg
sarl
mov
mov
dec
lods
jecxz
aas
push
insb
lock
xchg
sub
pop
cmpsl
sbb
data16
xchg
xchg
jg
cmp
jp
push
pop
divb
les
pop
cmp
add
sub
cwtl
xchg
cmpsl
cmp
sub
sti
test
rorl
cld
dec
ror
mov
xlat
jno
imul
inc
pop
aaa
andl
push
jecxz
fld
push
push
addb
paddsb
or
sub
call
mov
add
rcl
push
or
shlb
imul
pusha
loopne
test
mov
mov
stos
icebp
movl
leave
test
or
mov
inc
jle
lret
insb
sub
push
data16
inc
decb
fisubrs
mov
fdiv
xor
and
inc
xor
push
adc
push
cmpsl
mov
daa
or
adc
shll
jbe
jne
cmpsb
mov
inc
in
and
out
pop
cwtl
mov
add
dec
pop
or
push
inc
mov
add
inc
and
cmpsl
aas
fsubp
xchg
repz
or
dec
and
mov
mov
fistl
mov
data16
push
fildl
ss
cs
fadds
cltd
mov
push
xchg
stos
sahf
jle
xor
jmp
mov
cmpsb
call
add
or
xchg
les
dec
pop
lock
mov
pushl
mov
pop
dec
enter
mov
cwtl
xor
cld
je
cli
and
test
lods
popf
into
ret
mov
jl
rol
jbe
push
data16
jo
pop
das
cmp
inc
or
aam
jbe
pop
and
mov
dec
mov
mov
push
mov
pop
inc
lea
inc
jecxz
test
dec
sbb
imul
pop
add
xor
sbb
test
and
js
dec
sahf
xchg
shll
mul
ret
and
cmp
imul
leave
out
and
fbstp
sub
lock
cmp
mov
pop
outsl
testb
icebp
bound
jp
gs
push
sub
inc
icebp
jl
push
movsl
xchg
push
jmp
push
mov
adc
xor
sub
cld
cwtl
ss
fdivs
fsubl
dec
add
hlt
into
cmc
fcmovnb
pop
lret
push
mov
out
xor
add
in
das
sub
mov
inc
push
mov
jmp
or
mov
int
jne
fistpll
ds
aas
push
sbb
aas
xor
adc
xor
xchg
les
dec
outsb
adc
jmp
fmuls
ret
sub
lea
outsl
stos
or
cmp
in
je
ljmp
jno
ss
int3
sti
lret
lcall
cs
dec
scas
or
lret
or
js
xchg
movsl
cld
iret
filds
insl
lcall
push
scas
insl
shlb
add
dec
imul
scas
rorl
push
dec
imul
sub
inc
aas
sti
inc
scas
mov
xor
sbb
mov
addr16
les
je
push
cld
std
fdivrs
leave
push
cwtl
cli
pop
and
jmp
add
and
or
jb
jp
xchg
inc
icebp
cmp
mov
mov
add
lret
push
lods
sbb
mov
movsb
fptan
cmpsb
mov
push
popa
push
jno
jp
mov
int3
stos
xlat
pop
into
mov
xchg
pop
lock
aad
fstl
lock
out
ffreep
sub
xchg
cmp
pop
jne
addl
int
jb
dec
lods
dec
mov
add
mov
xor
dec
mov
ss
roll
xor
xor
or
addr16
sub
dec
or
sub
hlt
sbb
lret
mov
xor
mov
add
pop
mov
mov
jbe
loope
es
aam
fimull
aad
out
sbb
inc
and
jbe
cld
pop
popf
pop
adc
ss
inc
mov
rcr
movsl
shlb
lahf
int3
lds
mov
lret
mov
push
push
decb
fists
push
out
push
lret
popf
dec
mov
subb
daa
and
cmpsl
lea
movsl
xchg
outsb
mov
adc
adc
pop
sbb
outsb
aas
push
sub
jae
jb
mov
xchg
scas
inc
dec
or
jl
mov
and
outsb
cmpsl
jae
jp
xor
mov
lret
and
dec
xchg
adc
mov
adc
mov
mov
pop
pop
repnz
aas
pop
xchg
and
lahf
test
sub
add
sub
por
push
loope
imul
and
nop
jnp
dec
sbb
or
push
adc
pop
push
mov
idivl
sub
and
push
dec
jo
or
das
fcmovb
push
das
jne
cmp
sbb
in
jl
lods
xchg
inc
cltd
clc
pop
das
hlt
pop
enter
rorl
jg
xlat
sti
mov
cmc
imul
xchg
enter
and
dec
cmp
xchg
pop
mov
adc
shlb
jbe
dec
push
inc
sbb
jle
mov
jle
cltd
faddl
jecxz
inc
into
pop
sarb
lods
aas
mov
pop
mov
pushf
outsb
nop
mov
lea
mov
jmp
jno
mov
rclb
lret
test
shlb
aad
and
stos
adc
int3
rcr
cmpsl
cwtl
mov
fidivl
fsubp
xor
test
inc
mov
test
xlat
cmp
inc
iret
mov
std
and
daa
mov
scas
jns
rorb
add
mov
jo
pop
pop
das
ds
sbb
ret
out
hlt
mov
and
je
push
ja
shrl
lahf
adc
xchg
mov
inc
rcr
mov
add
shrb
jae
rolb
mov
pop
int
inc
stos
cwtl
or
dec
loop
jge
and
ror
adc
stc
mov
push
nop
cltd
push
divb
dec
cs
cmpsb
lcall
cmp
sbb
stos
fcoml
jns
and
xchg
fmuls
loope
cmpsb
push
sub
sub
aas
jecxz
es
inc
movsl
into
jmp
fcmovnb
xor
repnz
adc
mov
shld
sub
or
cmp
and
or
adc
push
inc
mov
aaa
or
xor
test
dec
sub
pop
sub
scas
aam
in
pop
mov
mov
jo
dec
loope
pop
mov
xor
or
stos
cmp
or
or
adc
in
rcrl
es
fidivl
adc
xor
pop
sbb
push
sub
xchg
jle
add
cmp
iret
call
and
mov
add
enter
jp
lods
scas
push
pop
adc
in
es
inc
add
cmp
js
mov
das
xchg
test
lret
xchg
inc
int3
nop
ficoms
mov
cmp
aas
mov
into
jae
jo
pop
out
rcll
adc
or
cwtl
sti
sbb
test
sub
fdivrs
pop
stos
dec
sub
divb
adc
mov
pop
je
jb
add
push
es
ret
shrl
mov
adcb
int3
adc
mov
xchg
sub
xchg
int
push
les
and
push
lock
ds
mov
lock
fdivrs
je
gs
xchg
dec
in
mov
idivl
dec
arpl
jg
out
out
out
inc
stos
movsb
addr16
sti
test
inc
jne
sbb
repz
rcll
repnz
js
pop
hlt
sti
repnz
jnp
push
ss
test
mov
jno
rcll
mov
sub
mov
fcmovb
cmp
xor
sub
orb
fld
pop
jge
inc
add
out
or
pop
popa
sbb
mov
out
hlt
mov
int
adc
sub
test
mov
add
shrb
cld
or
pop
sub
fldl
clc
lret
fstpt
sbb
clc
inc
sub
mov
jns
add
mov
xchg
push
adc
scas
data16
add
mov
inc
push
test
mov
ljmp
xchg
xlat
inc
or
cmp
cmp
push
pcmpgtb
aad
sti
icebp
inc
arpl
xchg
xchg
xchg
out
cmp
imul
pop
cli
aas
inc
push
sub
sub
pop
pop
lock
or
addr16
leave
lds
stos
xor
xchg
adc
loope
sbb
gs
cmp
xchg
movsb
mov
pop
dec
fucomp
jb
pop
pushl
incl
imul
cmc
adc
shll
pusha
xor
repnz
xor
mov
xchg
in
fsubl
out
loope
ss
and
stc
out
movsb
mov
mov
imul
inc
pop
mull
pop
sbb
popa
jp
mov
or
popf
jo
repnz
jne
mov
das
lret
pop
loopne
add
jmp
and
jnp
leave
or
adc
xor
inc
ljmp
out
lds
dec
xor
or
sbb
test
nop
stos
enter
int3
cmp
mov
and
or
or
js
inc
adc
sbb
adc
mov
es
adc
mov
shlb
lfs
cmp
pop
add
cwtl
sbb
mov
sbb
pop
push
xchg
stc
pop
add
aas
pop
add
rcrl
jecxz
loope
in
push
outsl
enter
xchg
xlat
jg
pop
push
in
push
scas
sub
cmc
dec
ss
push
add
mov
xchg
xor
xchg
push
iret
or
push
push
mov
popl
icebp
mov
sbb
es
mov
push
loop
test
clc
pushf
lods
adc
lods
sbb
in
or
mov
nop
pop
dec
mov
paddusb
ss
add
mov
jmp
sub
ret
sub
out
add
pop
negl
aad
xor
mul
jg
sti
into
pop
andl
lahf
jo
adc
popa
and
xchg
rorl
xor
gs
jnp
jmp
cwtl
mov
push
in
jp
mov
or
mov
add
fs
sahf
adc
arpl
in
std
fsub
push
xchg
rcll
push
cmp
mov
sbbb
mov
jne
and
add
shll
cmp
xlat
roll
hlt
mov
lds
lods
mov
sub
stos
shr
sbbl
enter
dec
inc
arpl
cs
lret
push
push
in
gs
leave
aam
and
xorb
cmpb
mov
jl
push
xchg
mov
lcall
mov
jno
fidivl
or
mov
adc
cmpsl
je
and
xchg
push
test
inc
sti
bound
jns
inc
inc
mov
xchg
push
lcall
xchg
pop
inc
sub
mov
sar
aad
fistps
ss
fs
lods
xor
mov
pop
push
add
cli
insl
jmp
mov
pop
and
mov
test
push
stos
or
int3
pop
cmovae
pop
cmpsl
fcos
jg
dec
push
inc
push
aaa
xor
dec
dec
mov
add
mov
or
std
cmc
cmp
mov
lds
mov
xchg
sarl
stos
or
push
sub
sub
jg
fcmovbe
pop
pop
aam
nop
pop
fsubr
adc
jg
sub
pop
jnp
sub
stos
movsl
es
xor
xchg
fiadds
loopne
mov
aam
xor
rcll
enter
hlt
inc
inc
cmp
mov
outsl
sbb
stc
sub
std
xorl
dec
jg
jg
stos
xor
adc
xor
or
xor
xor
movsb
stos
adc
or
sub
sbb
jg
mov
mov
and
jnp
nop
iret
cld
pusha
cmp
call
mov
fwait
mov
xor
stos
dec
xlat
inc
movsb
push
lret
push
insb
das
sbb
sahf
out
mov
lret
xlat
lahf
repnz
lods
ret
fdivs
cwtl
and
jnp
mov
enter
lcall
out
push
add
repz
dec
pop
or
les
xor
cmp
pop
in
inc
or
in
sub
fldenv
imul
mov
mov
loope
mov
fcoml
pop
arpl
cld
and
inc
xchg
jbe
cmp
scas
ss
shl
jb
xor
and
js
stos
shll
sbb
mov
divb
push
out
push
flds
push
mov
fstpt
push
mov
loope
mov
int
push
imul
sbb
rep
inc
cmp
stos
xchg
mov
push
mov
scas
inc
dec
add
cli
std
push
cmp
repz
add
inc
mov
mov
xchg
out
arpl
sahf
xor
xchg
lcall
sub
lds
mov
xlat
shrb
sti
fisubs
out
roll
cmp
jmp
jg
cld
and
mov
adc
xrelease
je
adc
mov
sbb
loopne
fildl
sarl
dec
fisttps
adc
lret
pop
adc
lahf
mov
or
fsubrl
out
mov
push
mov
cmp
shr
sbb
mov
mov
rorl
aam
shll
scas
ja
lods
cmp
xor
lock
in
sbbb
popa
mov
jmp
sbb
divl
imul
push
into
insl
test
xorb
push
sbb
fsts
mov
pop
jge
dec
xchg
addr16
dec
jno
sub
fisttps
int3
ja
mov
pop
dec
sbb
dec
cmp
jl
inc
adc
push
test
fdivl
jnp
mov
out
mov
pop
and
cltd
sub
outsl
jo
sub
sub
and
outsb
call
dec
lock
jne
cld
hlt
jns
inc
cmp
lahf
mov
ret
sbb
xor
pop
enter
cmp
mov
push
jns
or
mov
in
or
jno
loop
insb
out
dec
imul
icebp
dec
sarl
ss
inc
and
mov
mov
fnstsw
mov
cld
lods
sbb
rorb
int3
test
sti
mov
cmp
sti
cmp
loope
dec
in
sbb
nop
ret
ljmp
or
add
insb
fildll
in
movsb
and
jne
mov
into
outsb
jb
pop
ficomps
and
pop
test
pop
xchg
es
adc
jnp
mov
adc
inc
add
add
jmp
push
adc
jae
fistpl
stos
cmp
out
and
add
imulb
loopne
mov
mov
loop
rolb
mov
cwtl
push
mov
xor
sahf
mov
mov
lds
xor
inc
ja
sbb
mov
mov
inc
loopne
dec
cmc
in
xchg
mov
xchg
jp
loop
sti
jo
ret
or
pop
dec
push
mov
cmp
mov
sub
out
pushf
sar
jg
sub
lcall
int
add
jg
push
jl
and
add
add
bound
push
das
mulb
push
scas
lock
idiv
shl
sub
mov
pop
adc
push
mov
rorb
int3
call
pop
push
daa
fdiv
je
and
add
ja
adc
aad
arpl
not
mov
add
sbb
jp
decl
dec
das
add
or
sub
into
xlat
lea
and
adc
je
mull
pop
dec
popa
adc
and
aas
xchg
pop
pop
cvtps2pi
ret
jno
or
sbb
fsubs
mov
stc
insl
rcrb
dec
xchg
cmp
jns
push
mov
mov
lret
pushf
in
imul
sub
imul
mov
aaa
arpl
inc
mov
cltd
mov
repz
adc
pop
mov
mov
mov
int3
dec
aad
lods
pusha
ret
lds
sub
cmp
popf
inc
loop
xorb
inc
push
scas
insb
out
popa
mov
inc
les
fnstsw
mov
jp
inc
sub
repnz
std
popf
lcall
ret
addb
mov
adc
xchg
fidivl
js
add
test
insb
xlat
pop
mov
mov
cmp
dec
pop
sub
sbb
pop
xchg
pop
cltd
xor
jns
sbb
out
shrl
sbb
jne
daa
push
mov
cmpb
iret
aas
inc
lahf
jae
dec
pop
lcall
sbb
xchg
cmpsb
and
adc
mov
or
push
dec
lcall
pushf
jnp
sbb
and
inc
add
in
xor
loope
je
or
sbb
sbb
cmpsb
orb
xor
push
xor
xorl
and
cmp
into
loope
fcoms
cld
aas
cli
inc
jo
add
xchg
ja
inc
adc
and
lods
pop
xchg
mov
paddw
inc
ds
mov
cmp
iret
jmp
cmp
mov
lahf
fcmovnu
mov
movsl
shl
xchg
jecxz
icebp
jg
pop
jecxz
pusha
rol
bound
inc
jl
out
sbb
sub
dec
scas
mov
add
push
sar
pop
jns
movsb
xor
push
pushf
int3
pop
xchg
dec
adc
in
mov
ljmp
fnstenv
aaa
out
sbb
push
xchg
cmp
xor
or
sub
mov
sti
dec
mov
ljmp
divl
pop
shrl
std
or
jns
inc
das
popf
clc
mov
lods
fs
out
xorb
or
jns
pop
sub
jg
in
outsl
lock
xchg
mov
sbb
jb
and
imul
test
rcll
pop
enter
aas
pop
xchg
andb
daa
pop
adc
icebp
xchg
aam
xchg
pusha
sub
xchg
ds
jns
rcrl
shl
pusha
mov
int3
adc
pop
xor
pop
mov
mov
mov
das
shll
fnsave
sbb
sarl
xor
js
xchg
loopne
stos
push
out
cld
dec
and
repz
inc
arpl
inc
xchg
das
in
add
mov
pop
out
jp
aas
lds
or
cmp
shr
mov
aam
or
call
iret
psubd
pop
iret
mov
push
or
mov
push
sbb
add
adc
rol
or
daa
push
add
paddd
push
mov
repnz
inc
ss
imul
cld
inc
add
rcl
xchg
lcall
push
arpl
cltd
and
pop
cmp
fisttpll
pop
sahf
popf
rcrl
and
aam
stos
pop
fwait
push
or
inc
sub
insb
inc
ds
int3
cmp
ljmp
and
outsl
pop
and
pop
lret
adc
mov
test
insb
pop
in
mov
push
cmc
cmpsb
xor
mov
hlt
cltd
stos
incb
cmp
mov
orl
sbb
in
insl
add
and
nop
pushf
mov
mov
mov
stc
dec
adc
and
call
inc
rorl
mov
dec
cmpsb
shl
ret
mov
insl
rorb
cli
mov
ss
lret
mov
pop
clc
fldl
or
cmp
test
stos
mov
ss
xor
jle
stos
push
call
inc
stc
dec
jl
stc
gs
stos
inc
out
xor
or
sub
sub
xor
cwtl
xchg
iret
leave
sbb
dec
test
sub
pusha
cmc
sub
loop
xchg
add
sub
sbb
std
lods
into
jge
push
jp
bound
jmp
mov
and
shlb
xchg
pop
lcall
insl
addr16
sbb
jno
adc
repz
xchg
call
mov
mov
mov
jo
cmp
jnp
jne
gs
incl
cld
stos
bnd
mov
enter
cmc
out
pop
and
ficoml
jmp
inc
sub
adc
popf
push
or
lods
aad
fisubrs
call
pop
add
rolb
cmp
fisttpll
jg
iret
and
dec
fiadds
mov
daa
pusha
cmpsb
movsl
enter
pop
pop
jne
push
lods
in
push
jmp
test
and
cli
cmp
daa
imul
orb
xor
in
cmpsl
std
adc
xchg
lds
pop
sub
or
call
mov
adc
fs
pop
mov
jnp
aam
mov
ret
mov
add
dec
outsl
in
push
mov
sub
mov
aad
xor
mov
stc
in
scas
adc
mov
adc
repz
xchg
inc
jnp
mov
dec
sbb
scas
and
sub
pop
adc
xor
pushf
aas
lods
cmpsl
jb
push
int
jb
cld
inc
push
fcomi
pop
leave
pop
push
push
ds
jnp
jl
nop
mov
push
into
mov
aaa
scas
mov
mov
ds
xchg
loopne
push
loopne
rcll
and
es
mov
pop
int3
mov
jl
iret
adc
jne
outsl
loopne
cmp
adc
lahf
add
mov
out
decl
mov
sti
mov
cmp
iret
testl
mov
or
xchg
fs
and
add
sbb
jp
movsl
ret
sub
ret
insl
mov
xor
xor
mov
mov
rolb
sub
xor
int
cmc
test
outsb
sub
sbb
xlat
push
mov
push
repz
outsl
and
ret
xchg
repnz
jmp
scas
mov
jmp
jle
rorb
jbe
dec
scas
in
imul
int3
insl
and
in
adc
sub
push
dec
test
mov
int
adcl
cmp
sub
add
push
fdivl
mov
xchg
xor
jmp
decb
mov
push
cmp
stc
mov
mov
test
cwtl
mov
stos
mov
out
stc
int3
arpl
or
addl
iret
sbb
fsubrp
outsb
call
cwtl
movsb
push
imul
sbb
cli
dec
lret
sub
push
pushf
xchg
sbb
ljmp
jns
ljmp
shl
loop
and
lock
repnz
pop
cwtl
nop
notb
inc
lcall
push
jb
out
shrb
xor
xor
xchg
inc
pop
pop
push
mov
mov
shr
cmp
fstps
js
es
mov
cmp
daa
pop
cmpsb
sbb
int3
mov
xor
cmp
xor
test
mov
cmp
imul
xor
xchg
jno
dec
outsb
pop
mov
cmp
mov
scas
sub
fstl
push
pop
and
outsl
movsb
mov
sbb
icebp
mov
push
adc
fsubrs
mov
add
sbb
dec
mov
fstl
adc
out
lods
jo
jge
push
dec
sbb
and
addb
mov
jnp
sub
fidivs
jns
push
outsb
leave
movsl
lfs
or
fstl
out
bound
and
scas
dec
jo
mov
jno
imulb
in
jle
jecxz
cwtl
in
dec
push
inc
into
sbb
les
andl
xorl
push
inc
jno
push
in
imul
adc
xor
and
sub
imul
pop
lea
cld
loop
incl
testl
mov
sub
stos
mov
and
inc
iret
clc
sbb
lods
sub
sub
enter
push
push
or
jle
data16
cmp
push
pop
inc
push
mov
rcr
fldt
jae
call
dec
stc
fstl
loope
lock
call
mov
cmpsl
in
xor
mov
lods
pusha
or
xchg
xor
loopne
add
imul
cmc
inc
ret
xor
pop
xchg
stc
hlt
mov
pop
jg
sbb
cmp
mov
jp
dec
push
stos
in
cld
pop
adc
loopne
les
mov
addb
adc
into
ficomps
mov
pop
cmp
dec
mov
lods
loope
fadds
incl
xchg
leave
out
lret
rorl
pop
mov
push
add
fidivl
mov
cli
mov
mov
js
push
sbb
dec
sbb
adc
cs
sub
scas
pop
sbb
adc
movsb
push
lods
mov
jmp
sbb
iret
pop
adc
lea
icebp
les
sub
lahf
mov
fcompl
xor
cmp
sarb
mov
and
scas
repz
rol
push
mov
aas
lret
movsb
out
ret
mov
or
lcall
dec
xchg
mov
aam
cmpsb
adc
sahf
cmp
aas
cmp
mov
pop
add
cmpb
jge
in
sbb
pusha
ljmp
dec
sub
push
mov
movsl
mov
xchg
call
sub
xor
jg
mov
add
and
lret
flds
out
dec
and
dec
and
shl
mov
mov
sarb
insl
sub
xchg
hlt
inc
pop
movsl
xor
add
ret
cmc
mov
stos
push
roll
clc
inc
pop
ja
and
sbb
aad
xchg
addl
pop
enter
mov
cmp
dec
lods
lea
cmpsl
bnd
mov
jbe
sti
jl
jne
arpl
cli
ss
or
jl
mov
xlat
cs
add
pop
xor
jle
push
cmp
cwtl
mov
lret
push
out
jne
into
insl
jecxz
push
pop
clc
scas
outsb
inc
divb
push
mov
test
add
out
pop
jo
repnz
fisttpl
insb
cmp
int3
sbb
mov
and
cwtl
mov
mov
je
loope
lcall
out
shrb
mov
jbe
popf
call
lret
mulb
leave
or
icebp
data16
fsubp
mov
daa
cmpsl
xor
mov
ljmp
neg
xchg
push
ficoms
add
push
lock
inc
adc
sub
call
lcall
arpl
mov
adcl
fstp
cli
add
mov
or
es
in
and
pop
jo
cmpsl
imull
xchg
jl
lahf
adc
fwait
and
xchg
pusha
inc
sti
mov
jb
lahf
xchg
icebp
pop
rorb
sbb
mov
cmp
stc
mov
jge
repz
xchg
mov
xchg
dec
repnz
cmp
lods
pusha
push
out
sbb
dec
push
sub
mov
test
fcoml
pop
or
adc
jmp
mov
loop
shll
cmp
call
js
sbb
push
shll
sbb
mov
inc
inc
inc
repz
sti
inc
or
sti
insl
int
mov
insb
mov
adc
fsub
jb
rclb
mov
adc
dec
mov
leave
mov
lods
rorl
std
cs
sti
and
andb
mov
xchg
pop
arpl
imul
sbb
xor
sbb
push
fcmovb
filds
int
int3
cmpsb
jbe
xor
add
adc
xchg
xchg
maskmovq
testl
movb
data16
stos
inc
push
lahf
mov
ljmp
mov
adc
dec
aam
sbb
int
sub
inc
add
sub
daa
mov
pcmpeqd
lahf
fs
pop
pusha
mov
mov
dec
lds
dec
inc
push
mov
dec
xor
pop
mov
sub
mov
xor
inc
adc
mov
std
in
leave
ss
imull
mov
cmp
cmp
or
fwait
call
dec
push
lods
sub
push
lock
lods
cld
adc
mov
mov
scas
sti
xchg
mov
pop
jge
and
daa
push
and
pop
inc
js
mov
inc
imul
repnz
popf
addr16
adc
mov
stos
nop
mov
shrb
clc
and
mov
in
and
and
daa
jle
lods
aad
push
aam
xor
inc
idivl
push
add
inc
testl
xchg
jo
cmp
loope
hlt
push
stos
fmull
sub
push
aam
inc
sub
jle,pt
in
cli
xor
je
sahf
jno
in
mov
pop
outsl
xor
jl
mov
test
xchg
adc
ja
jo
pop
mov
leave
inc
das
dec
jo
sar
mov
push
aas
fdivl
mov
mov
flds
int3
push
les
sub
adc
mov
sbb
xchg
push
dec
jp
bound
mov
cmc
mov
push
sub
inc
and
xchg
xor
stos
fisttpll
xor
scas
mov
pop
or
sub
pop
mov
inc
jnp
mov
int
mov
fimull
mov
sbb
test
stos
mov
inc
das
mov
push
add
in
test
pop
js
dec
dec
outsb
lods
mov
jo
mov
lods
sbb
mov
outsb
cmp
cmpb
mov
stc
in
or
dec
test
sahf
or
jnp
push
adcb
call
push
outsl
lds
fsubrs
movsb
jmp
sbb
out
stos
pop
lods
inc
xchg
mov
jg
inc
xchg
stos
js
add
or
mov
gs
pop
cltd
insb
adc
adc
fcom
popa
push
mov
data16
cmp
sbbl
and
sbb
mov
adc
inc
outsl
scas
dec
and
pop
mov
lods
idivb
jmp
test
jne
mov
sbb
testb
inc
mov
ss
jns
ret
mov
adc
add
stos
loope
pop
mov
pop
push
cmp
jae
inc
inc
dec
push
imul
dec
rcrb
stos
jnp
je
pop
inc
cmp
push
aaa
sti
icebp
cwtl
scas
add
int3
xchg
shrb
mov
cltd
clc
xchg
push
push
mov
int
mov
shlb
jmp
add
and
aas
mov
aas
mov
hlt
xchg
add
mov
pop
add
testl
ds
shrb
jnp
data16
call
or
pop
jb
adc
imul
mov
loopne
int3
mov
aaa
inc
testl
test
jnp
sub
sbb
iret
mov
push
test
adc
iret
pop
mov
add
xchg
iret
jge
dec
out
push
test
aam
sub
push
lock
push
faddl
or
out
repz
jmp
push
mov
dec
pop
sub
lret
lret
int3
das
pop
adcb
cmpxchg
sti
cmpsb
mov
mov
dec
xchg
sahf
fwait
sub
lods
sub
push
adc
jo
cmp
dec
lret
rorl
jne
pop
fistl
cwtl
pop
in
orb
jmp
outsb
pop
sub
or
mov
xchg
rcrl
fmul
ret
lods
push
mov
xor
daa
dec
and
shl
std
dec
jno
movsl
cmpl
sarb
ss
and
or
aam
dec
popf
pop
int3
adc
xchg
mov
push
or
inc
sarl
mov
xlat
fildl
cmp
sub
push
xchg
ja
call
cmpl
ret
lret
cmp
mov
rcl
cmp
leave
sub
lret
clc
sub
or
adc
add
add
inc
ljmp
xor
mov
push
jae
push
push
pop
pop
data16
out
loope
xchg
repz
xlat
arpl
mov
fnstsw
fdivrs
imul
push
cmp
dec
lret
mulb
insb
mov
fdivrl
inc
jl
sarl
cmpsl
xchg
pusha
cmpsl
jns
inc
adc
or
jns
jp
push
ret
pop
jge
mov
lahf
call
mov
mov
mov
sub
stos
dec
gs
or
daa
hlt
sti
sbb
mov
insb
sbb
ffree
adc
bound
or
mov
out
dec
roll
add
insl
aam
or
sub
mov
iret
sbb
or
add
pop
scas
cmc
xchg
popa
or
roll
push
aad
mov
ret
filds
cs
in
dec
or
lret
mov
insb
les
ss
aad
pop
xchg
cmpb
in
and
inc
outsb
xlat
push
pop
ljmp
xchg
mov
dec
mov
pop
call
stos
jl
add
jns
arpl
or
pop
dec
insb
sar
push
adc
sub
cmc
testl
stos
ror
imul
imul
and
popf
mov
push
xor
dec
push
nop
rol
iret
stc
movsb
push
nop
jl
nop
xor
sbb
mov
cmp
xor
rol
and
out
js
mov
sbb
dec
aad
mov
add
sahf
dec
int3
mov
push
dec
and
mov
push
es
lret
adc
mov
sub
pop
shr
adc
push
xor
mov
sub
cwtl
das
pushf
pop
call
movl
sub
addb
inc
add
push
jl
out
mov
jecxz
out
int
aas
cmp
in
out
dec
pop
xchg
xchg
inc
daa
fisttpl
and
sub
xchg
cmp
int
dec
pop
mov
and
out
xor
dec
in
movsb
inc
and
je
jo
adc
popa
xor
pop
jl
mov
std
adcl
xchg
sub
addl
cmp
inc
testl
sbbl
lods
xchg
inc
aaa
inc
cwtl
inc
in
cmp
lods
enter
sub
add
mov
popa
mov
push
jo
fstpl
sbb
lods
in
call
mov
cmp
sub
jns
cmp
push
xchg
xor
imul
movsl
cmc
xchg
dec
ljmp
jl
out
inc
jns
insl
lock
cmp
ds
xchg
rolb
add
sbb
xchg
dec
dec
fdiv
and
stc
addl
cli
cmp
jmp
push
pop
aam
and
sbb
jno
dec
fdivs
dec
insl
push
fisttps
jns
repnz
fmul
and
loop
cs
in
test
scas
shrl
or
pop
sbb
lahf
push
mov
outsb
outsl
int3
das
xorb
outsl
push
inc
mov
add
add
movsl
iret
xor
stos
inc
adc
pop
push
shrl
lds
lock
adc
repz
ljmp
stc
pop
std
jmp
js
out
lods
mov
lcall
fnstenv
mov
adc
jae
cs
mov
into
sub
pushf
mov
sbb
xchg
stc
or
push
pop
lcall
movsb
and
lock
adc
outsl
add
scas
loopne
rclb
push
sub
std
shll
inc
pop
out
lcall
sub
cwtl
repnz
lods
xchg
cmpl
pop
aam
insl
jnp
add
mov
dec
orl
cld
mov
call
or
shrl
mov
pop
sub
int
shr
in
jp
push
js
push
adc
adc
inc
pop
std
jns
mov
clc
ficoms
jne
dec
pop
loope
les
sahf
cmp
rol
scas
xlat
and
or
aaa
jg
flds
rolb
adc
call
fwait
ja
mov
test
jo
push
xchg
jno
mov
in
fs
pop
negb
push
dec
xor
iret
lods
add
add
mov
data16
push
scas
sbb
mov
popf
js
xor
in
or
or
insb
adc
shl
sbb
aam
add
enter
inc
je
insb
ljmp
adc
test
imul
lods
fsubrs
bound
movsl
and
push
sbb
pusha
enter
fimull
stos
sbb
jl
xchg
sbb
mov
int
or
setno
jg
cld
push
pop
hlt
sub
jl
icebp
int3
nop
vcvtss2si
fisubrs
fisubrl
push
iret
clc
sbb
push
cld
popa
jmp
sbb
pop
mov
xchg
repz
lahf
add
inc
push
jne
lcall
scas
sbb
negl
sbb
fisttpll
into
push
in
inc
cmp
pop
jns
or
into
loope
aad
stos
loope
dec
mov
push
or
adc
ret
push
jbe
inc
jno
std
or
adc
push
les
test
pop
adc
outsb
jge
dec
mov
flds
adc
pop
mov
cmpsb
lock
imul
push
inc
cmp
shrb
repz
cld
pop
and
addr16
sti
mov
inc
sbb
dec
repnz
mov
jl
push
dec
stos
out
sub
adc
lods
mov
pop
xor
push
mov
mov
aaa
xor
data16
cld
sarl
movsl
test
mov
jmp
mov
pusha
jbe
ds
insl
pop
xchg
xor
xchg
cmp
jmp
hlt
add
mov
inc
jnp
sbb
mov
popa
push
pop
shlb
data16
xchg
clc
cld
daa
mov
cmp
shrl
lcall
rorb
xchg
incb
call
les
loop
adc
or
popa
push
clc
and
comiss
test
sbb
jl
adc
jae
and
cmp
cs
add
push
mov
sub
dec
or
ds
push
imull
cmp
sub
out
rorl
mov
jmp
inc
cmp
mov
and
fstps
imul
imul
in
mov
or
mov
jns
xchg
jae
sub
aas
cld
jns
nop
out
mov
or
or
and
jo
xchg
ret
push
call
push
push
test
jo
mov
mov
in
sahf
cwtl
loopne
mov
pop
cmp
pop
pop
and
jnp
ljmp
mov
imul
pop
ja
jl
lock
movsl
add
jge
add
nop
jecxz
cmp
loopne
adc
or
rcl
movsb
or
pop
fsts
leave
stc
iret
rcrl
jecxz
icebp
jge
sbb
call
repnz
inc
mov
rcr
xor
mov
test
mov
xchg
sub
sbb
and
pop
and
xchg
movsb
outsl
push
adc
pop
fcom
out
jge
fdivrs
jg
mov
or
push
lods
mov
inc
sub
lods
push
pushf
enter
test
add
sahf
mov
pop
lret
sti
xor
sub
test
inc
jl
mov
stos
cmpsl
cmc
shll
das
mov
mov
mov
arpl
mov
aad
rol
scas
jecxz
jbe
inc
jns,pn
jne
cmp
sub
repz
cwtl
dec
outsb
aad
jmp
stc
mov
je
xchg
mov
bound
rolb
cwtl
sbb
mov
and
xor
and
out
movsb
dec
insl
sub
jg
divb
lods
dec
jg
loopne
loopne
dec
xchg
ror
in
lret
xchg
push
xchg
imul
in
push
mov
shll
mov
insb
rolb
jae
mov
or
sbb
adc
xlat
ljmp
cwtl
and
xlat
push
sbb
scas
sub
mov
stos
or
add
imul
mov
iret
xchg
int
gs
pop
push
xchg
cmp
adc
sahf
loopne
mov
cmp
in
shll
cltd
xchg
push
jne
dec
or
bound
jg
ret
popa
dec
adc
xor
jg
test
lea
jbe
jl
push
lds
xchg
pop
pop
pusha
pop
push
pop
dec
or
sarl
xor
nop
dec
xor
and
inc
or
push
iret
fbstp
mov
outsl
out
shrl
adc
scas
mov
and
insl
push
fstpl
pushf
pop
ja
notb
dec
xor
arpl
icebp
cmpsb
int
ret
iret
add
pop
mov
icebp
add
jo
mov
sbb
rolb
pop
ret
and
inc
add
iret
mov
popa
push
mov
jmp
xor
xor
jge
in
jmp
mov
inc
mov
pop
int
sarb
add
dec
and
jge
push
push
and
imul
cmp
lock
add
dec
insl
outsl
mov
cs
stos
fucomp
pop
imul
mov
and
jbe
sbb
mov
or
inc
adc
jns
adc
sbb
cs
xchg
gs
sbbb
jecxz
jmp
add
mov
loopne
sub
xor
push
pop
icebp
mov
cmpsl
push
push
pop
fdivs
mov
inc
mov
cmp
into
jns
jp
orl
shrb
jbe
scas
popa
rorl
ss
mov
decl
dec
out
inc
pop
mov
or
pop
inc
add
shrb
or
pop
cmpsl
jo
sbb
scas
in
mov
adc
jp
sti
inc
adc
imul
inc
and
test
data16
repnz
adc
mulb
orl
push
sbb
gs
jp
rorl
pop
fsubl
ds
cli
add
mov
and
mov
push
fadds
outsl
inc
popa
pop
add
dec
xor
jecxz
or
sbbl
fcomp
pop
mov
scas
add
pop
and
and
mov
inc
lods
addr16
test
push
dec
rclb
outsl
popa
inc
pop
stos
outsb
adc
fsubs
mov
out
xchg
cli
sbb
stos
inc
nop
push
inc
sbb
xchg
mov
repnz
mov
xor
adc
mov
and
jecxz
cld
ret
pop
in
aad
in
outsb
mov
xchg
divb
sbb
loope
lock
cld
mov
daa
arpl
nop
add
imul
cmp
dec
imul
xchg
xchg
dec
dec
fstps
stc
mov
mov
jge
out
insl
icebp
xor
lods
dec
arpl
adc
lret
repnz
clc
jo
sub
in
xor
push
pusha
xchg
mov
mov
nop
add
adc
xor
das
add
xorb
sub
mov
insl
mov
mov
xchg
mov
xchg
mov
sbb
xor
jne
and
and
mov
or
jnp
arpl
mov
or
sar
inc
rcl
jbe
addr16
cltd
mov
fildll
out
pop
mov
addr16
cmc
dec
ret
hlt
push
inc
imul
inc
add
daa
mov
mov
imul
jle
imull
dec
jne
sbb
inc
bound
mov
test
add
add
loope
ret
out
push
jbe
or
not
add
std
subl
mov
ljmp
sbb
leave
jp
lea
xchg
js
je
sarl
cmp
xlat
mov
pop
cmc
adc
shrd
mov
xorb
js
daa
jb
add
outsl
nop
push
mov
ficomps
push
xchg
jp
test
jecxz
lret
dec
mov
inc
repz
mulb
xchg
test
jmp
test
cmp
jmp
cmp
xchg
scas
jmp
xor
into
jmp
cli
and
pop
xor
out
mov
jbe
outsl
xor
adc
loop
inc
and
iret
movsl
sub
push
push
xchg
fwait
in
cmp
sbb
sub
hlt
jbe
cmp
inc
scas
pop
sbb
imul
mov
or
xchg
sub
into
mov
nop
xchg
lds
pop
repnz
dec
scas
fstpt
fs
add
and
hlt
pop
mov
data16
bound
pop
inc
xor
xor
fdivl
jbe
ret
cmp
sub
add
popf
jg
je
sub
out
xchg
mov
adc
jns
mov
dec
mov
scas
into
sub
leave
ret
jae
idivb
add
cld
mov
xor
xchg
xchg
rcrb
sub
jmp
out
fnsave
inc
add
sub
jns
int3
rorl
ljmp
js
gs
adc
inc
rorl
lret
sbb
push
inc
inc
xchg
jg
pop
lods
dec
sar
mov
push
mov
sub
leave
or
aad
call
mov
daa
pop
adc
je
sbb
mov
leave
imul
jl
pushf
pop
shrl
pop
scas
int
and
out
mov
iret
pop
in
ficoms
pop
mov
push
je
ljmp
out
mov
pop
test
dec
push
pop
sahf
sub
push
popf
sbb
pop
outsb
cli
loop
adc
jmp
xchg
mov
pusha
mov
mov
mov
sub
sub
adc
mov
push
sbb
icebp
imul
jne
pusha
cmp
shr
add
push
ficompl
scas
push
addl
inc
ficoml
rolb
mov
in
sub
inc
pop
lret
xchg
ljmp
mov
lret
jp
xchg
push
or
ss
lds
ret
mov
hlt
fisttpll
enter
xorb
shll
xor
sarl
std
clc
sub
pushf
ret
xchg
jle
in
mov
pop
imul
and
andl
or
xchg
shl
and
xchg
push
ja
lods
pop
dec
cmpsb
mov
mov
data16
xchg
out
inc
or
adc
ds
gs
sbb
hlt
push
jl
sub
add
jns
mov
or
lods
sbb
rorl
data16
mov
mov
int3
push
call
imul
pop
sub
subl
sti
repz
dec
addr16
xchg
insb
inc
xchg
mov
cmp
dec
xor
call
pop
xchg
lock
jp
fdivl
ret
mov
mov
mov
cmp
lock
add
in
jno
mov
shrl
call
rcl
mov
loop
pushf
repz
adc
incl
jl
icebp
add
dec
les
addb
mov
add
lcall
roll
sub
mov
cli
cs
pop
cwtl
and
push
shrb
pop
das
cwtl
mov
out
and
cmp
sbb
xchg
mov
xchg
sahf
mov
les
inc
je
int3
mov
out
xchg
add
loop
loope
ror
xchg
aad
cmp
ss
shrl
cmpb
cs
xor
sub
mov
addr16
push
ss
loop
decb
sub
adc
mov
jl
lret
daa
repz
push
push
lret
mov
add
aad
std
ret
je
int3
mov
sub
xor
mov
pop
push
and
inc
rorb
jmp
in
xor
dec
xlat
jg
xor
sbb
fstpl
pop
mov
dec
xor
imull
hlt
jbe
inc
or
icebp
inc
dec
dec
mov
scas
cmp
enter
inc
and
cmp
scas
pop
jg
mov
xchg
repz
xor
mov
les
xor
ds
cmp
adc
sub
inc
cltd
sub
sub
push
in
add
cmp
dec
int3
xlat
push
jns
nop
es
sbb
ljmp
fxch
rolb
xchg
nop
jbe
sub
ja
mov
imul
or
push
mov
push
out
inc
inc
test
cli
xor
sbb
or
loop
pop
sbb
roll
pop
je
inc
mov
pusha
jo
arpl
sub
loopne
jns
mov
xchg
and
lock
xor
ficompl
mov
sub
sub
pop
jge
xchg
testl
pop
mov
lds
sub
pop
daa
andl
cmp
scas
dec
or
xor
push
add
pop
mov
xor
adc
nop
test
or
dec
loop
les
out
test
dec
jno
nop
push
and
mov
push
mov
adc
push
xchg
xchg
cmpsb
movsb
pushf
mov
mov
aaa
out
mov
jo
stc
sub
pop
or
jbe
pusha
call
or
dec
cli
lock
cs
xchg
pop
iret
cld
mov
add
mov
fwait
arpl
es
jp
aaa
and
adc
fimull
hlt
mov
aad
mov
out
dec
pop
sub
rol
ljmp
ret
in
cmp
call
std
push
pop
cmp
lahf
push
jb
bound
dec
inc
jmp
mov
mov
fsubl
dec
mov
adc
outsb
fidivrs
fs
mov
cmp
mov
inc
enter
decl
repz
lods
add
outsb
lock
sub
ret
test
out
jb
rcrl
dec
loop
add
dec
push
divb
xor
xchg
cmc
mov
ja
push
out
xchg
gs
es
xor
and
xchg
sbbl
sub
punpckhwd
ror
lods
sbb
test
std
pop
push
addb
sub
ss
inc
cltd
lret
dec
adc
mov
fdivs
jns
pop
mov
xchg
adc
lods
loopne
into
int
call
dec
hlt
ficompl
push
push
add
jb
jae
es
xchg
add
pop
nop
fsts
iret
fucomip
xchg
or
sub
cmp
xor
loop
scas
daa
or
add
fsubrp
add
pop
cli
xchg
xorl
pop
cmp
xor
jnp
xchg
fcomps
sti
imul
ret
fdivrs
inc
mov
pop
int
sbb
or
ljmp
cmp
jb
sbb
adc
in
mov
pop
std
and
push
xchg
mov
jmp
jp
xchg
fistps
dec
add
jge
icebp
sub
es
cmp
rolb
sub
adc
iret
xchg
mov
xor
aas
out
shlb
out
insb
mov
add
mov
clc
cmp
cwtl
ret
dec
jae
fwait
int
mov
scas
emms
sti
push
stos
push
pushf
jl
gs
mov
mov
sti
and
je
mov
stos
jl
fcoms
cmp
inc
lods
mov
inc
divb
aam
mov
mov
jns
shll
stos
mov
cmp
clc
nop
sub
or
add
add
adc
loop
daa
pop
jne
pop
out
std
add
mov
mov
ds
lea
jnp
pop
sub
push
enter
cmpl
lret
push
mov
inc
sbb
and
add
adc
jecxz
mov
sbb
in
mov
xor
iret
adc
or
mov
dec
jns
in
cli
lret
lahf
xor
fst
lcall
and
sbb
pusha
adc
and
cmp
outsb
add
test
fimuls
sbb
and
dec
stos
jmp
out
das
scas
mov
xchg
sbb
inc
bswap
out
scas
jb
mov
enter
jecxz
fwait
xchg
imul
loope
cmp
jae
fnstcw
xchg
jb
pop
inc
sub
negl
mov
jbe
cmp
mov
dec
imul
xchg
sbb
sti
mov
pop
rcll
xchg
mov
cld
ljmp
push
xor
sbb
enter
push
enter
add
arpl
mov
out
xor
or
sub
sbb
popf
push
stc
pop
jge
mov
push
out
insb
push
out
adc
sbb
jno
test
xor
or
movsb
fsub
xor
mov
clc
mov
mov
idiv
aas
fisttpl
pop
mov
xchg
dec
movsb
xlat
lea
stos
jne
or
cmp
adc
iret
int3
sbb
int3
pusha
arpl
mov
pop
stos
mov
cwtl
notl
sub
lea
xchg
test
xchg
jg
mov
cmpsl
lahf
daa
xchg
in
and
adc
enter
cltd
inc
icebp
loope
push
mov
aas
test
shrl
mov
adc
daa
push
gs
rol
lahf
mov
mov
icebp
notl
xor
mov
mov
jo
clc
cs
into
mov
jbe
in
adc
repz
xlat
icebp
push
cltd
stos
jg
sub
ljmp
fs
inc
cmpsl
gs
dec
dec
loop
push
js
dec
sub
outsl
test
dec
push
mov
lods
popa
out
stos
mov
cld
or
pop
scas
adc
shll
or
mov
or
sub
cmpps
in
dec
mul
xor
push
into
adc
pushf
sahf
jge
movsl
lock
mov
daa
nop
or
xchg
xchg
dec
fnstcw
push
insb
and
mov
inc
lods
adc
mov
and
jge
insl
out
loopne
pop
ficoml
jmp
mov
and
cmp
and
cmp
cmp
adc
ljmp
push
sbb
pop
in
mov
outsl
pop
mov
sub
cs
icebp
pop
mov
mov
dec
enter
popa
insl
push
jge
mov
out
in
mov
int3
fists
out
mov
xlat
popf
icebp
movsl
sub
sbb
and
pop
sti
cmp
aaa
pop
sub
ds
lret
cli
jmp
sbb
loope
adc
out
jbe
testl
sbb
xchg
jb,pt
inc
sbb
sbb
sub
orl
jge
pop
mov
sbb
and
into
add
hlt
mov
inc
dec
cmc
arpl
repnz
nop
loope
shl
jnp
pop
pop
jne
jmp
gs
fstpt
iret
sub
mov
xchg
ja
push
dec
in
scas
cli
mov
pop
adc
cld
imul
in
das
pop
sbb
shll
call
popf
jb
packssdw
push
pop
xor
xor
sbb
popf
fcoml
sbb
out
scas
pusha
sub
xlat
pop
mov
mov
stos
jge
lret
jge
push
jecxz
into
addr16
mov
in
icebp
test
push
pop
adcl
cli
cli
lret
push
mov
insb
dec
sar
cwtl
addr16
lods
inc
loopne
push
add
icebp
cmp
mov
xor
push
aaa
xchg
int
into
push
aaa
addr16
fbld
dec
add
sti
push
popf
daa
cmp
icebp
and
dec
adc
cli
jmp
rclb
fcomip
push
aam
jne
push
sahf
pop
pop
and
jl
jl
adc
test
adc
fiaddl
test
lds
inc
test
adc
data16
cmp
cwtl
cmp
cmp
xchg
test
rcl
add
je
in
test
lret
in
nop
mov
cmp
cmc
decb
push
pop
scas
cmp
adc
push
out
inc
fucomi
nop
insb
push
and
and
or
daa
loop
add
fs
bound
mov
push
fiadds
adc
adc
inc
or
fisubrl
dec
mov
mov
imul
sub
fildl
sub
sub
les
leave
add
pop
pusha
pop
vmwrite
xlat
mov
push
ss
adc
lahf
je
push
test
es
bound
adc
push
les
jnp
and
cltd
inc
ss
daa
enter
bnd
cmp
add
push
cmp
mov
adc
lahf
mov
jbe
mov
mov
out
in
adc
sub
or
jmp
popa
mov
xchg
cwtl
dec
add
pop
fs
pop
into
push
bound
movsb
pop
inc
rolb
adc
xchg
repz
cmp
sbb
mov
incl
or
mov
ss
sbb
movsb
cmp
pop
ret
xchg
push
pop
xor
ss
fcompl
addl
or
xor
stos
xchg
leave
lea
jno
push
cmp
shll
sbb
push
scas
leave
das
jno
jmp
and
jne
mov
xchg
inc
xor
or
jecxz
xchg
push
sub
repnz
push
jae
jmp
stos
stos
je
dec
test
in
and
popf
ss
push
es
mov
ret
mov
push
inc
sahf
inc
jle
xlat
sub
xor
cmp
pop
xor
sbb
and
mov
in
mov
pop
aas
sub
out
int3
jo
push
mov
icebp
mov
fcomps
jne
push
imul
mov
outsl
stos
mov
or
or
dec
cmp
add
inc
std
jae
mov
jecxz
inc
mov
in
push
cmc
imul
insb
adc
shr
pop
or
sub
stos
add
mov
add
jl
xlat
aad
xchg
mov
add
adc
dec
inc
rcl
scas
decb
mov
ljmp
icebp
sub
into
push
jmp
aaa
jb
aaa
scas
push
dec
mov
push
push
mov
scas
mov
mov
mov
dec
and
in
xchg
aad
aam
sbb
aad
addb
xlat
shl
adc
das
mov
in
out
inc
lds
mov
sbb
inc
or
cwtl
and
cld
rcr
sub
repz
xchg
or
push
cs
xor
or
push
scas
sarl
hlt
cli
scas
pop
and
aas
aas
fists
dec
jl
loopne
push
roll
inc
ljmp
cmc
mov
movsb
mov
scas
xchg
pop
pop
mov
mov
sbb
mov
sti
call
fadds
mov
insb
xor
and
pop
and
inc
adc
jae
js
in
stos
or
js
adc
inc
and
cmp
inc
push
push
aas
mov
mov
test
pop
negb
push
outsb
fdivs
sbb
jp
xor
cmp
fimull
or
ljmp
inc
imul
pop
out
xchg
dec
rcl
pop
test
jle
pop
push
call
rcrb
mov
xchg
stos
stc
inc
pop
mov
outsl
sbb
lock
rorl
out
repz
cmp
and
mov
mov
pop
cld
sub
lcall
gs
das
out
out
sbb
cwtl
out
sub
rolb
fisubrl
cwtl
fnsave
imul
cmp
adc
jl,pn
dec
es
int3
cmp
xlat
jne
sbb
nop
lods
push
and
fisubrs
out
push
add
mov
mov
mov
enter
cmpsl
fs
inc
mov
mov
mov
sub
bound
shrl
dec
pop
cmp
bound
mov
aaa
jb
decb
or
push
dec
jne
cmp
or
fiaddl
dec
fisttps
outsb
fcom
mov
mov
and
out
xor
stc
lret
bound
xlat
lods
push
lods
stos
sub
and
sbb
pop
jg
je
fwait
adc
fimull
fwait
ljmp
fstpl
lret
inc
imul
aaa
adcl
dec
sarl
shll
rcrb
mov
push
push
and
outsl
add
fwait
loopne
insl
dec
add
and
shll
or
add
xchg
mov
jno
xor
out
push
test
out
push
out
xor
cmp
stos
stos
hlt
pop
aaa
pop
into
and
add
mov
cld
push
push
out
jbe
pop
repnz
and
jmp
xor
sbb
push
add
sti
mov
push
jnp
sbb
ret
lcall
push
xchg
and
jnp
sbb
enter
mov
or
adc
test
xchg
out
mov
and
adc
or
scas
xlat
loopne
fimuls
cmp
mov
jmp
scas
pop
fs
scas
adc
xchg
repnz
dec
movnti
test
pushf
xchg
inc
jne
lea
dec
nop
and
push
jbe
xchg
stos
fwait
xor
inc
icebp
loope
mov
sub
pop
lahf
adc
mov
loopne
cmp
jle,pt
inc
xchg
orb
js
sti
rorl
mov
popa
shl
and
int3
sub
test
mov
stc
mov
jle
cld
daa
shlb
mov
js
xchg
dec
enter
dec
nop
loopne
xchg
pop
ret
cmp
mov
sahf
sub
sbb
push
jno
sbb
or
or
into
xchg
add
mov
sub
and
cld
or
pushl
fs
sbb
pop
jp
shr
movsl
push
test
mov
int
les
pop
xchg
add
xor
dec
test
rcll
adc
lret
pop
std
pop
movsl
jle
dec
cmp
add
or
push
nop
int
icebp
cmpsb
mov
dec
or
mov
je
pop
ret
repnz
mov
dec
jno
mov
addb
mov
lcall
lahf
jno
leave
mov
jns
inc
pop
shlb
dec
aas
xchg
popa
in
fisubs
mov
push
fsubrl
lret
addl
fsts
add
push
pop
dec
insb
mov
mov
cmp
dec
dec
sti
mov
fsubs
and
xchg
cmp
xchg
dec
pop
loopne
pop
pop
xor
mov
sub
sti
sub
jecxz
repnz
cltd
mov
les
shll
xor
imul
mov
mov
push
das
fnstenv
sbb
cmp
popf
xor
add
and
pop
adc
dec
jbe
je
ud2
xchg
inc
cmp
bound
mov
sbb
sti
jae
fwait
pop
jae
int3
shll
mov
or
mov
mov
repz
pusha
dec
or
loope
and
xorb
adc
jbe
jae
pop
pop
xchg
rolb
insb
sbbl
sbb
push
inc
mov
lock
pop
add
rcrl
js
cmc
cli
push
mov
or
dec
adc
inc
int
add
and
xor
test
std
sub
stos
lret
loope
inc
icebp
mov
xchg
jbe
cmp
xor
sub
stos
test
and
in
jle
and
pop
mov
inc
jl
lret
cmpsl
daa
mov
pop
jnp
adc
fists
sub
jle
cmp
xorb
jl
sti
cmpsb
cwtl
and
add
pop
ljmp
cmp
outsb
lret
sahf
pusha
sbb
negl
pop
fnstenv
jle
movsb
push
pop
and
sub
push
aaa
sbb
js
rcll
test
sarb
xchg
loope
stos
cli
leave
cmp
adc
pop
cld
fisttpll
out
cmp
out
add
mov
xor
fxch
enter
xchg
imul
repnz
or
inc
adc
aaa
cmpsb
es
sub
xchg
cmp
sub
push
xor
adc
mov
mov
ds
dec
cltd
push
and
stc
xor
push
pminub
dec
ror
and
movsb
cli
insl
fistpll
inc
stc
stos
subl
lahf
cmpsb
mov
mov
jo
imul
jno
test
mov
fisubs
je
jns
and
mov
push
cmpsb
pop
dec
out
aaa
dec
push
movsb
or
shlb
xchg
pop
mov
scas
xchg
les
mov
sbb
imull
out
sbb
aam
arpl
decb
cmp
sub
add
mov
xor
mov
and
pop
xor
or
adc
sub
stos
mov
pop
or
dec
cmpsl
inc
aad
add
mov
leave
je
sbb
aam
mov
pop
movl
pop
mov
push
xchg
std
data16
add
jnp
test
adc
shll
shll
mov
inc
arpl
xchg
lods
sahf
mov
pcmpgtw
mov
xor
inc
xchg
add
mov
test
push
int
xlat
imul
cwtl
or
add
movsl
jbe
mov
enter
sahf
sahf
cltd
lods
out
fcmovu
out
in
jge
lret
jecxz
mov
xchg
lods
clc
out
test
fwait
xlat
addl
pushf
hlt
mov
xor
mov
call
ds
stc
arpl
ljmp
jae
jg
clc
add
ds
fidivrl
and
pop
aam
push
cld
or
push
push
jl
sbb
hlt
lea
xchg
fidivs
mov
lods
int3
lret
dec
push
jecxz
mov
loopne
or
jo
jge
rcr
int3
mov
jge
inc
aaa
xlat
cmp
js
scas
jmp
push
in
rcll
add
imul
outsl
into
pop
shlb
jnp
in
arpl
cmp
js
mov
push
int
push
mov
addr16
jge
shlb
mov
icebp
and
ljmp
enter
cwtl
test
scas
icebp
push
xchg
jmp
pop
fldl
je
test
fimuls
inc
jno
into
add
pop
shrb
lahf
stos
dec
popa
pop
loope
push
and
adc
stc
imul
adc
push
push
pop
and
sub
or
push
popf
inc
push
cmp
ret
and
or
shl
dec
arpl
in
bound
loope
jl
jmp
xor
mov
push
clc
jl
mov
scas
das
cmp
inc
dec
xchg
dec
out
pop
stc
adc
push
into
mov
cs
sbb
and
bound
xorl
xor
movb
push
mov
mov
lods
lods
inc
cmp
js
add
rclb
repnz
pushf
les
sbb
ss
adc
or
inc
jns
pop
pop
test
add
and
jge
xchg
dec
sub
out
aad
inc
fs
sbb
mov
inc
jmp
xor
sbb
mov
pushf
or
push
sbb
cmpsl
iret
xchg
push
test
add
mov
aad
xchg
dec
fmul
push
pusha
nopl
inc
or
addr16
mov
das
cmp
xlat
cmp
and
popf
sub
mov
aam
dec
jnp
jnp
add
mov
fcmovne
xchg
cmp
sub
xchg
dec
addb
sahf
in
cmpsl
sahf
popa
xor
ret
xchg
push
pop
pusha
test
dec
rclb
imul
call
addb
sbb
pop
mov
xor
cltd
cli
insl
in
iret
push
push
enter
popa
fldenv
nop
in
cmpsb
dec
rcrl
sub
inc
scas
hlt
call
mov
sub
aam
fmul
cli
xor
sbb
mov
in
hlt
cs
or
and
fstp
fsubrp
dec
sub
fisubs
shl
push
adc
aas
fs
push
cmp
add
fnstcw
jg
aam
ret
adc
js
or
gs
jb
cmpsl
push
addr16
in
xlat
cmp
aad
push
dec
leave
mov
jle
stos
cs
dec
fcompl
cs
xchg
push
or
xchg
mull
les
mov
int
test
mov
fstpl
das
gs
xor
fs
push
xlat
data16
xchg
ljmp
sbb
jns
lods
test
cmpsl
filds
orl
xchg
push
push
push
add
mov
pop
and
ja
adc
das
jno
and
bound
out
arpl
not
inc
cmpsb
int3
inc
aam
dec
repnz
mov
jae
cmp
aad
pop
jno
mov
das
add
test
sti
popa
jl
mov
mov
out
icebp
popf
pop
mov
out
push
push
js
ficompl
and
test
adc
fs
aam
into
jb
pop
lock
pop
fiadds
rcrb
and
or
push
and
mov
add
and
xchg
sub
jo
cmpsb
cmp
lods
sti
shlb
movsl
es
imul
in
dec
cbtw
pushf
repz
mov
sti
inc
or
xor
xor
jno
cmp
jnp
sbb
enter
adc
jb
jg
movl
mov
call
fisubrs
cmp
stmxcsr
sub
add
popa
negl
pop
xchg
dec
test
cmp
add
jae
daa
xor
dec
xchg
imul
dec
loopne
repz
sarl
push
jg
xor
loope
xchg
loop
and
int3
jle
and
loope
xchg
or
or
std
rolb
ds
push
fs
insb
pusha
sbb
jle
adc
dec
pusha
cmp
or
add
sbb
adc
and
add
sar
jp
loopne
add
lahf
mov
call
adc
mov
scas
or
jp
mov
sbb
inc
adc
or
xor
lods
scas
outsl
adc
rcrb
jle
mov
and
roll
push
cmp
jo
sbb
cmp
mov
or
jecxz
stos
outsl
push
dec
mov
cmp
test
in
das
mov
scas
xchg
inc
jge
jp
out
fiaddl
or
lret
mov
inc
movsb
xchg
mov
pop
into
movb
out
lock
test
pop
das
rorl
test
fs
push
jo
xor
jbe
pop
xchg
mov
repz
ss
dec
lcall
out
gs
inc
mov
push
andl
outsb
repz
lods
push
popa
emms
mov
cwtl
loope
insb
mov
pop
add
jo
ror
jg
inc
mov
xchg
xor
decl
sbb
popa
mov
cmpsl
xor
shll
xchg
into
cmp
popf
fisubs
cmp
scas
loope
adc
cmp
mov
mov
dec
loop
pop
xchg
dec
inc
dec
pop
mov
and
adc
and
lds
ficoms
inc
cmpsb
xchg
push
es
mov
in
into
push
daa
rolb
testb
int
out
xchg
fs
add
dec
je
imul
movswl
jno
aad
dec
pop
adc
inc
fidivl
push
lea
mov
cmp
add
jmp
lods
adc
mov
pop
or
inc
aaa
hlt
outsl
ret
aas
imul
ss
jae
loop
movsl
jnp
fcomps
xchg
fdivrs
xchg
movsl
cmc
stos
movsl
jno
clc
testl
orl
xchg
or
jo
scas
jge
in
cld
xchg
push
and
std
out
aad
out
in
aaa
dec
add
xchg
in
adcl
xchg
jne
cs
int
xchg
and
hlt
xlat
push
clc
pop
mov
dec
push
stos
or
loopne
jns
divb
aam
into
sub
outsl
fidivl
cwtl
fldcw
dec
pop
mov
sbb
popa
xor
adc
mov
fildl
push
adc
xchg
push
cmp
cmp
call
stos
push
in
and
xchg
push
gs
cmp
test
out
jl
shrb
stos
loopne
or
mov
std
mov
jl
icebp
push
lahf
inc
sbb
adc
cmp
mov
outsb
jl
dec
sbb
or
xor
outsl
xor
mov
out
and
xchg
fidivrs
fnsave
adc
test
jecxz
jno
xor
mov
stos
inc
idiv
mov
xchg
xor
xchg
jle
add
cld
adc
cmp
es
mov
pop
push
aas
sub
data16
outsb
jne
inc
cld
cmc
xchg
subl
push
inc
push
cmpsl
fmull
aaa
xchg
notl
push
fldcw
cmp
mov
cmp
call
les
jno
fdivrs
cmp
out
xchg
mov
push
cld
push
addb
mov
aad
outsl
cmp
jl
jb
lcall
ret
jmp
or
jne
fucomip
scas
add
add
repz
nop
mov
pusha
int3
aad
fwait
xchg
push
mov
xchg
xor
int3
movsl
adc
in
dec
testb
out
sbb
xchg
mov
xor
sub
lcall
jp
sbb
nop
pop
repnz
inc
cmp
mov
ret
pop
jp
jl
mov
push
or
popf
xor
jae
ja
fs
adc
call
sbb
lcall
sahf
pop
ja
add
stc
nop
scas
lret
aas
mov
push
movsl
out
ret
push
jg
iret
int
call
iret
adc
jecxz
lock
mov
ss
outsl
mov
and
fcom
rorl
enter
push
lret
inc
xor
cmp
add
and
pop
les
push
fisubl
dec
mov
hlt
xor
les
test
pop
xor
jo
cwtl
and
into
leave
rcrl
imul
xor
inc
call
outsb
sbb
or
cmp
and
push
mov
dec
frstor
dec
imul
mov
ss
ficoms
or
icebp
sub
aam
mov
mov
pop
lds
pop
xchg
push
inc
xchg
jne
push
imul
call
xchg
or
xor
adc
test
testb
mov
mov
iret
ljmp
movsb
bound
shrl
jmp
insb
loopne
jnp
decb
mov
jbe
sbb
shlb
cmp
sub
sbb
and
xlat
stos
jge
push
mov
push
daa
adc
dec
out
or
test
scas
int3
xchg
sbb
mov
cmc
daa
stos
test
ficoml
sbb
dec
subl
mov
lods
jo
mov
orl
xor
cltd
push
loopne
repz
xchg
mov
ds
mulb
add
sarl
mov
mov
mov
sub
lea
push
push
incl
stos
push
imul
cli
jns
mov
movsl
into
xor
jecxz
in
stos
push
inc
data16
add
mov
adc
pop
sub
mov
add
lock
sti
push
shrl
jne
push
pop
sbb
and
sub
std
sub
fistpll
xchg
repz
xchg
cmp
loope
lea
pop
pop
outsl
xor
sub
test
mov
test
arpl
xor
inc
lods
dec
icebp
pop
xacquire
shr
in
xchg
pop
jle
pop
mov
jae
adc
movsl
ljmp
ss
mov
pop
inc
pop
and
adc
jle
jmp
push
loope
cmp
push
lds
push
xchg
inc
insb
fnstenv
lret
sub
dec
adc
aam
sbb
popa
jno
sub
mov
mov
add
add
cmovle
movsb
cmp
into
inc
stc
adc
or
jo
or
add
scas
pop
jnp
dec
scas
int3
inc
add
dec
sbb
jl
pop
xor
cmc
sbb
cmpsb
jno
int3
xchg
xchg
fidivl
add
movsb
rcrb
mov
mov
xchg
cmpsl
leave
mov
push
pop
arpl
test
lret
ljmp
jns
iret
les
xor
adc
mov
arpl
xchg
icebp
daa
and
rcrl
ret
xchg
mov
in
push
sbb
cmp
dec
stos
cmpb
xor
xor
aaa
sub
mov
sti
mov
ljmp
inc
dec
mov
call
xchg
mov
or
sub
or
adc
xchg
pop
xor
data16
sbb
cmp
xchg
mov
mov
mov
mov
popa
mov
out
adc
mov
jb
mov
xchg
mov
ljmp
jae
mov
fdivrp
xor
dec
mov
outsl
xchg
or
adc
mov
dec
pop
rolb
inc
jb
sub
adc
dec
clc
sub
sbb
jbe
bound
scas
mov
es
sub
mov
daa
push
inc
and
dec
xor
adc
iret
test
add
sbb
inc
sub
dec
add
jp
and
leave
ss
jge
push
in
test
out
pusha
mov
add
repnz
fdivrl
and
cld
jg
and
stos
cmp
data16
dec
mov
xchg
ret
ret
cwtl
adc
jno
mov
and
add
or
adc
pop
jge
push
push
or
mov
sub
and
fs
in
dec
sub
lods
xorl
inc
jle
add
sarb
and
xchg
clc
jecxz
addr16
js
je
imul
sbb
shl
shr
dec
sarb
shlb
loopne
add
jb
js
int
mov
lahf
pop
je
sub
push
adc
cltd
sub
push
sub
daa
jle
dec
repnz
mov
cmp
or
cmp
adc
loop
push
icebp
inc
popa
jne
cwtl
dec
imul
int
filds
hlt
mov
cmp
fnstsw
or
sbb
xchg
pop
jnp
mov
icebp
in
sub
cmp
out
lahf
sbb
out
movb
in
jle
add
push
bound
lahf
icebp
aam
add
push
push
pushf
arpl
fidivrs
and
push
push
pop
xchg
aam
adc
shr
not
jns
aas
clc
cmp
push
jmp
or
in
hlt
push
vmovdqa
icebp
cmpsl
imul
push
dec
stos
adc
out
je
xor
dec
andl
loopne
mov
mov
repz
cltd
mov
sarl
inc
mov
push
pop
ret
adc
sbbl
negb
rorl
mov
xor
ja
jno
and
xor
lret
sbb
dec
fmul
das
sub
cmc
push
mov
add
lcall
dec
jg
mov
and
rcrb
fistl
jne
call
stos
push
rolb
scas
stc
lcallw
dec
dec
mov
xchg
push
enter
stos
lcall
pushf
push
and
loope
jp
sarb
les
xlat
inc
sub
stc
cld
je
aas
subl
bound
out
inc
add
imul
test
out
and
out
mov
stc
pop
jne
outsb
sub
mov
icebp
cmp
jge
in
or
pop
cmp
aas
push
jns
cld
insb
pop
jl
mov
inc
xor
outsb
es
add
into
push
xor
lret
jne
adc
leave
pop
add
xor
movhlps
orb
in
test
inc
fldenv
test
sbb
add
cmp
iret
push
pop
jp
xor
mov
mov
jns
dec
mov
mov
xchg
inc
mov
or
or
xchg
inc
inc
dec
lock
inc
rclb
std
rcl
cs
outsl
pop
push
fnstenv
lret
aad
in
mov
or
jge
dec
jns
pop
xchg
mov
xor
popf
xlat
mov
or
mov
rolb
mov
push
ret
je
xchg
das
jle
lods
jo
sub
inc
aas
mov
pop
inc
loopne
or
sbb
call
sbb
int3
lcall
mov
mov
and
mov
nop
scas
jno
and
mov
xchg
or
lcall
sbb
mov
xchg
push
or
cmp
add
add
test
daa
or
mov
movsb
loopne
add
fstl
mov
ja
pop
pusha
test
add
xchg
aad
inc
into
sub
loopne
test
adc
dec
daa
sbb
je
mov
mov
cmp
into
shll
sbb
mov
pushf
fdivl
into
pop
cmp
mov
and
inc
js
popf
sbb
bound
aas
cmp
push
sqrtps
inc
pop
in
push
in
in
xchg
addr16
mov
jae
and
mov
and
sti
subb
jmp
sub
testl
mov
dec
or
xor
push
push
rol
ret
lock
hlt
inc
push
pop
movsb
jp
loope
int
inc
push
cmp
sbb
jae
xchg
aad
jbe
jmp
sbb
sbb
lds
mov
lret
pop
mov
xor
enter
cld
sub
pop
fstl
inc
int
hlt
aaa
stc
icebp
stos
or
test
mov
hlt
frstor
repnz
inc
dec
rcrb
cmc
imull
xchg
push
testb
sub
das
adc
dec
pcmpeqb
jl
in
cld
or
sbb
out
adc
mov
push
clc
mov
not
hlt
add
adc
jae
jmp
xchg
neg
mov
scas
or
notl
pop
out
ljmp
sub
sub
or
push
dec
dec
and
dec
movsl
jo
jo
outsl
punpcklbw
addr16
pusha
cmp
and
inc
dec
and
dec
insl
xor
ret
int3
sbb
mov
ficoml
mov
movsb
pop
xor
dec
repnz
inc
test
lahf
jns
fisubrs
out
push
andl
les
cmp
and
xor
add
or
cli
test
cmp
imull
pop
divl
inc
push
sbb
mov
mov
cmp
mov
inc
mov
in
and
iret
push
test
clc
aad
scas
mov
aas
cs
movsl
mov
std
outsb
push
imul
or
test
int
mov
mov
ljmp
lock
mov
sub
sub
scas
sbb
sbb
push
or
imul
iret
jb
push
xchg
mov
jo
push
fsubs
xor
loopne
mov
out
cmp
enter
cmp
sbb
push
ret
jl
leave
mov
push
xchg
rcl
sti
fdivs
xor
aaa
dec
call
cmpsl
nop
idiv
pop
sti
pop
ds
pop
into
and
mov
xor
pop
negl
movsb
leave
das
pop
pop
xor
mov
cld
lea
test
rorl
pop
fisubrl
jge
lea
clc
jl
dec
or
test
xchg
jns
rcr
aad
push
jmp
or
push
mov
jno
xchg
pusha
lret
xchg
pop
jg
sub
loopne
dec
scas
int
dec
pop
data16
leave
or
fists
xchg
aad
out
jnp
outsl
ret
insb
or
decl
ljmp
jle
push
cmpsb
add
sub
fdivrs
fadds
aaa
sbbl
push
imul
ja
mov
push
scas
cmpsl
imul
inc
mov
jne
push
in
sbb
js
mov
add
mov
xchg
xchg
lea
sarb
mov
pusha
gs
xchg
sahf
out
enter
sti
repz
mov
scas
or
push
xor
adc
insb
js
dec
decl
or
xchg
ja
dec
cltd
bound
rorb
fcomp
and
adc
jb
jmp
ss
clc
mov
lahf
stc
cmp
mov
xor
add
arpl
fidivrl
sbb
sub
xor
sbb
in
int3
dec
xlat
mov
sub
subl
xchg
cmp
and
mov
gs
mov
sub
mov
incb
fistps
mov
mov
ss
mov
jo
mov
movsl
mov
arpl
xchg
mov
jecxz
mov
cmpsl
int
pushl
adc
xchg
aad
lods
mov
out
stc
movsl
cmpsl
xor
xchg
mov
aas
sbb
mov
sub
push
cmpsl
dec
inc
xor
fdivl
sub
out
xor
jmp
jl
sub
sti
adc
fs
sbb
scas
push
mov
mov
xchg
pushf
fs
dec
mov
xchg
xchg
mov
sub
fprem1
negb
loope
mov
lock
adc
ret
add
inc
pop
dec
sub
cmp
stos
push
jmp
es
clc
lods
xor
mov
fcomp
call
adc
ljmp
sub
add
mov
mov
xchg
leave
mov
lret
xchg
mov
mov
repnz
or
lcall
xlat
arpl
shrb
sub
dec
addb
adc
mov
lcall
jge
call
cmc
push
xchg
dec
push
add
cld
mov
movsl
scas
jp
rcrl
push
insl
jecxz
addr16
xchg
bound
xor
xor
shlb
sub
push
fiadds
mov
daa
imul
ret
cmc
add
push
daa
add
fwait
pop
dec
stos
std
int
clc
xchg
inc
mov
aaa
arpl
mov
shrb
push
das
aam
mov
shll
xor
xchg
or
nop
or
dec
les
rorb
jl
inc
decl
icebp
shll
jle
sub
loopne
shlb
adc
sar
cmp
jbe
push
nop
jae
aam
mov
inc
sub
push
fwait
rorb
mov
push
leave
cmpsl
call
push
or
bswap
std
jecxz
cld
loope
stos
sub
xchg
mov
sbb
or
xchg
insb
pop
add
test
sti
mov
and
pop
pop
xlat
aad
mov
inc
push
lock
xchg
fdiv
jl
fcmovne
xchg
add
aaa
mov
imul
push
dec
push
add
mov
mov
push
adc
mov
push
outsl
lea
xor
sub
mov
and
out
pop
xor
rcll
inc
jp
and
es
std
daa
lea
mov
and
insl
movsb
jle
test
jecxz
sbb
mov
pop
or
repnz
push
test
lods
pushf
push
mov
cmp
xor
mov
mov
push
mov
jo
sbb
scas
jg
fsubs
fidivl
dec
mov
je
push
movsb
xchg
mov
sub
cmp
je
sbb
mov
daa
xchg
pop
testl
or
imul
sub
or
dec
cltd
cmp
xor
rcrl
push
cltd
stc
lds
test
js
xchg
mov
add
lahf
shlb
push
test
pop
adc
test
mov
aam
cs
mov
in
fwait
mov
cmpsl
sbb
jns
xchg
sbb
pusha
lods
js
mov
inc
shll
int
leave
cmc
lea
addb
outsb
add
mov
pushf
lahf
iret
and
add
xor
pop
inc
mov
das
call
ljmp
popf
add
dec
xorb
fwait
push
and
adc
shll
or
pop
dec
push
lcall
ret
jge
and
dec
push
mov
ss
ret
push
dec
mov
xor
sbb
movsl
adc
pop
dec
lods
adc
dec
pop
call
imul
cld
adc
push
jg
sub
jecxz
xlat
stos
mov
imul
sub
or
into
bound
dec
mov
fsts
lods
jmp
mov
out
jae
pop
xor
fidivl
jb
or
cmpsl
ja
or
xlat
mov
and
or
jae
add
test
ja
fidivs
out
push
js
adc
stc
sbb
daa
dec
pop
push
xor
cmpsb
lret
mov
out
or
and
bound
fldenv
les
push
pop
hlt
outsb
jbe
xorb
dec
arpl
xor
loope
subl
aam
into
movsb
pop
jo
inc
movsb
pop
mov
loopne
out
cwtl
cs
lcall
inc
push
sbb
push
or
repnz
out
inc
mov
movsb
cmp
icebp
jae
jle
stc
orb
mov
cli
cmp
outsb
cmpsb
jbe
push
cmp
dec
nop
rorl
repz
cmp
out
jp
lret
test
daa
dec
roll
push
lret
sbb
mov
into
hlt
adc
cmp
aam
sbb
sbb
cli
xor
pop
dec
fs
adc
and
cmp
addb
push
inc
fidivs
popa
pop
inc
sbb
mov
push
and
fcoms
loope
adc
or
sarl
cmp
and
lcall
gs
sub
jo
shrb
cmp
popa
dec
test
mov
fwait
inc
xlat
inc
sbb
loopne
enter
add
lret
dec
mov
ret
sahf
jbe
mov
pop
xchg
rcl
out
lods
roll
or
icebp
pushf
in
jnp
or
pusha
sub
and
add
movsl
mov
fsts
cmpsl
add
jge
xor
mov
inc
outsb
mov
frstor
and
or
xchg
pushf
mov
popf
xchg
jle
loop
std
xor
sub
test
jbe
sub
pop
mov
test
popf
mulb
xor
mov
call
adc
pop
test
cltd
loop
pop
aad
cltd
call
std
into
pop
mov
and
int
inc
or
fldcw
pop
orb
sub
mov
add
dec
push
xchg
xor
pop
jge
xlat
sbb
cmp
adc
lcall
push
pop
rolb
fidivrs
outsb
loope
sub
adc
adcb
repz
lods
mov
rclb
in
xchg
insb
mov
xor
cmc
in
mov
rorl
add
stc
cmc
sti
fcomps
adc
outsb
cltd
mov
cmpsl
dec
shlb
push
inc
aaa
iret
in
int3
test
adc
movsl
xlat
jmp
popf
and
mov
jp
popa
cs
pop
jnp
and
std
insl
out
rolb
repz
sub
or
xchg
add
sbb
pop
push
jns
or
push
mov
movsl
cmp
add
outsl
dec
and
lret
les
in
test
mov
mov
xchg
inc
pushf
fwait
imul
cs
pop
hlt
js
stos
jle
lret
leave
icebp
cmp
sub
fmuls
mov
adc
inc
loop
push
enter
pop
push
sar
xor
push
xorl
pushf
xchg
sbb
sbb
aad
aaa
ss
mov
jns
rcl
fwait
jmp
jecxz
cmp
addr16
mov
in
add
xchg
mov
mov
dec
imul
jnp
dec
fstpt
mov
push
daa
dec
mov
dec
and
lock
jnp
test
js
push
xchg
pop
shll
sahf
scas
out
pop
inc
movsl
int
in
sub
push
das
lods
xor
and
add
outsl
xchg
jmp
sahf
jge
jge
bound
and
pop
addb
xor
enter
sub
mov
sahf
cmc
cmp
push
repnz
stos
mov
xor
inc
jo
aad
add
dec
inc
movsb
ds
xor
mov
mov
sub
lods
xchg
dec
popa
sbb
push
test
inc
ja
dec
pop
push
lea
stos
mov
movsl
add
data16
push
xchg
push
xlat
notl
dec
enter
out
inc
inc
icebp
shll
adc
ljmp
push
imul
dec
xchg
and
dec
cltd
data16
push
js
clc
inc
inc
push
movsl
scas
cld
in
mov
ljmp
mov
mov
jge
dec
clc
dec
notl
shlb
lret
fdivrs
xor
std
bound
jne
mov
hlt
mov
xor
mov
shrb
pop
sub
les
cmp
mov
std
inc
add
pop
xor
dec
aam
jbe
jge
add
and
insl
mov
sub
out
jo
and
push
outsb
push
ficoml
jb
mov
lret
dec
aaa
push
rolb
mov
ja
mov
fdivrl
or
mov
cld
out
clc
orl
dec
shl
movsl
adcb
add
jl
sbb
scas
cmp
arpl
xor
cltd
xor
jl
stc
push
movsl
and
add
outsb
cmpl
jnp
ja
push
mov
stc
dec
inc
popa
or
fisttpll
xor
mov
test
and
in
inc
lods
enter
adc
inc
movsl
sbb
sbb
cwtl
ret
pop
dec
aaa
jg
xor
loop
xor
jo
scas
jg
jmp
push
imul
cmp
jecxz
adc
ss
movsl
inc
nop
dec
outsb
pop
imul
xor
fidivs
insb
pop
rclb
mov
or
es
dec
dec
mov
shl
add
or
jbe
shll
jb
popa
aas
dec
xorb
popa
cli
outsl
push
shrb
inc
fs
cmp
jmp
push
add
xchg
sbbb
in
mov
clc
jmp
pushf
insb
inc
mov
mov
icebp
mov
pop
ds
in
push
jl
cmc
cmp
and
stos
out
daa
lret
in
pop
pop
out
mov
xchg
popa
fdivl
xchg
int3
push
mov
add
mov
jle
lods
add
shll
pop
call
jne
dec
icebp
les
orl
arpl
adc
mov
pop
out
pop
xchg
jbe
les
in
lahf
adcl
test
subl
repnz
or
mov
adc
pop
mov
mov
imul
test
mov
cwtl
cmp
xchg
or
leave
dec
push
sub
add
mov
jno
sub
arpl
insl
imul
jo
cmp
sbb
push
inc
xchg
add
inc
mov
adc
sub
pop
cmpsl
inc
sbb
out
push
adc
inc
ficomps
xlat
mov
mov
add
push
mov
sub
or
stos
and
addr16
sahf
mov
add
xchg
mov
in
stos
mov
outsl
jecxz
lds
dec
shll
jle
sub
push
sbb
inc
jo
mov
fstpl
rorb
and
pop
flds
ret
push
insb
ja
or
shll
push
push
fcomps
lock
mov
push
mov
and
push
out
pop
jmp
out
mov
ret
push
jle
cmpsb
mov
data16
sub
pop
lods
add
lcall
mov
sbb
sub
xor
cltd
xor
sbb
leave
or
jns
mov
andl
and
push
sbb
sahf
scas
xchg
mov
cmp
cli
aas
xor
sub
adc
gs
and
je
push
test
fisubl
mov
mov
movb
dec
dec
cmp
ret
lret
xchg
es
popa
dec
inc
push
fistps
xor
add
inc
andb
pop
sarl
test
orb
and
sbb
test
xchg
sbb
cld
sub
or
das
je
jo
std
lret
ficoml
arpl
xor
cmpsb
mov
mov
or
jl
pop
push
cmpsl
jl
pushf
xor
cmp
jne
push
dec
ja
inc
push
cmc
out
inc
aam
aam
in
iret
sub
fsubl
pop
in
call
cmpsl
hlt
pop
shrb
sub
mov
jg,pn
and
or
push
repnz
xchg
test
inc
push
or
inc
mov
dec
xor
les
loop
lds
lret
hlt
sbb
bound
adc
lods
lods
ljmp
loope
sbb
xorl
and
xchg
push
hlt
mov
push
add
and
push
lahf
or
movsl
daa
in
push
or
xor
inc
outsl
imul
xchg
mov
xor
pop
sub
push
adc
or
push
push
inc
mov
adc
sbb
pop
scas
or
stos
bound
adc
pushf
incl
add
or
fstps
push
fsubl
das
test
out
idivl
sarl
in
mov
dec
or
xor
mov
jo
ss
test
out
jl
inc
mov
in
cs
in
in
pop
popa
iret
lea
adc
pop
push
dec
mov
and
data16
imul
sbb
repz
repz
mov
lea
shl
les
push
sbb
sbb
inc
out
add
push
enter
xchg
out
rorl
hlt
add
jbe
out
pop
sahf
popf
push
inc
adc
mov
mov
lea
rcrb
xchg
mov
aaa
sub
idiv
das
jae
xor
xchg
stos
xchg
push
dec
add
sahf
mov
inc
push
pop
mov
in
inc
push
in
ret
jno
test
mov
outsb
inc
xchg
outsl
test
push
test
xor
pop
test
es
jb
lret
sub
mov
insb
inc
inc
fistps
sbb
xor
imul
mov
xchg
xor
insl
push
jne
adc
std
les
scas
mov
ficoms
adc
sub
rcll
stos
aas
xor
xchg
pop
mov
in
adc
adc
imul
cmp
add
test
inc
lock
cmp
cld
iret
popa
xchg
aad
cltd
das
xchg
xchg
and
fstl
repz
add
gs
dec
out
jl,pn
aam
mov
data16
and
faddp
loop
mov
dec
xchg
dec
cli
scas
mov
out
and
xor
add
repnz
loope
imull
inc
jae
outsb
mov
mov
lahf
stos
sbbb
xchg
cmp
push
fistl
ds
loop
flds
add
mov
mov
std
xchg
aad
sahf
lea
xchg
outsb
pushf
push
lea
shlb
dec
rolb
fists
enter
or
inc
sti
outsl
sbb
je
mov
xor
in
xchg
loopne
lock
pop
pop
sub
scas
jmp
and
add
outsb
jae
fcmovbe
in
jno
jecxz
test
dec
repnz
mov
mov
add
pop
and
arpl
lcall
cmpsl
lcall
in
out
pusha
divb
test
je
test
jl
inc
and
aaa
repnz
pop
cmpsb
push
mov
mov
add
ret
mov
xchg
sbb
ret
out
and
push
fs
adc
inc
lds
fwait
pusha
dec
out
dec
sbb
adcb
mov
mov
inc
je
iret
adc
push
cmc
sub
fsub
lods
add
stos
in
in
fs
out
loop
icebp
adc
fidivrs
mov
sti
lret
mov
add
adcl
cmp
mov
test
stc
rorb
frstor
mov
sbb
lock
cmpsb
sbb
fsubp
lret
scas
mov
out
mov
mov
inc
movsb
rorb
mov
pop
pushf
or
addr16
mov
pop
jl
jnp
out
sub
cmp
push
js
clc
mov
adc
or
pop
hlt
clc
int
pushf
jge
movsl
shrl
popf
aas
dec
xchg
sub
adc
dec
cmp
cs
ret
out
mov
and
xor
sbb
xor
lret
dec
mov
hlt
mulps
pop
lcall
jae
cli
pop
decb
jmp
add
pop
lret
mov
ret
aad
sbb
leave
das
roll
outsb
fs
push
inc
fs
xor
mov
int3
aas
adc
or
cmpsb
inc
and
cmp
jns
rsqrtps
loopne
adc
test
mov
jp
sbb
cmp
adc
out
addb
push
xor
test
stos
mov
movsb
push
sar
xchg
cwtl
insl
stos
push
adc
sbbl
lret
and
shrb
loop
xchg
and
mov
pop
lcall
aad
enter
ja
scas
jns
repnz
cmp
sbb
mov
sub
xchg
add
pop
lret
mov
dec
ljmp
out
fnstsw
pushf
bound
in
cmpsb
rorb
dec
pop
jnp
or
lods
cltd
and
add
js
add
nop
push
pusha
or
cmp
test
xchg
das
inc
dec
mov
stc
sub
adc
add
xor
cld
out
dec
mov
push
mov
enter
shrl
jae
cmp
jmp
dec
xlat
stos
js
in
sub
sub
std
inc
iret
push
das
xchg
and
xlat
xchg
mov
xor
jmp
sbb
and
fisubrl
pop
out
sbb
inc
push
loopne
into
loopnew
in
add
out
out
mov
pop
jge
pop
out
sbb
inc
ficoml
and
dec
movsb
sbb
cmp
mov
int
xchg
dec
clc
inc
stc
inc
das
insb
bound
fs
sbb
fdivrl
mov
pop
sbb
daa
test
fisubrl
in
dec
lods
lods
pop
cwtl
add
cli
mov
dec
stos
test
push
das
or
push
enter
mov
dec
repz
mov
fstpl
pusha
stos
cmp
daa
cs
into
mov
push
or
ljmp
pop
lret
dec
mov
push
in
jg
out
mov
out
or
scas
aam
icebp
xchg
adc
adc
addl
xchg
mov
mov
js
pop
mov
mov
test
dec
dec
mov
rcr
mov
loop
imul
lret
dec
xchg
cmpsb
out
mov
xchg
or
push
sarb
pusha
inc
popf
adcb
inc
or
cmovbe
loop
mov
les
pusha
xchg
mov
dec
sub
mov
fwait
addr16
cmp
ret
dec
mov
push
setns
dec
xchg
cmp
mov
aas
sbb
test
popa
je
lahf
xor
pushf
stos
push
or
and
pop
std
icebp
pushf
push
add
sahf
add
fwait
sub
jmp
lahf
shll
dec
adc
and
add
and
or
xchg
mov
stc
add
inc
cmpsl
jle
mov
jle
or
dec
cmpsl
mov
lods
jmp
mov
xchg
lret
in
mov
push
push
xor
xor
leave
jns
inc
adc
outsb
pop
jl
mov
aad
xlat
mov
pusha
jae
outsl
rcll
data16
xchg
roll
mov
mov
pusha
inc
shrl
push
lcall
fldl
cltd
xchg
mov
aam
in
and
pop
popa
inc
jmp
ret
imul
gs
test
pushf
sub
lret
lea
inc
inc
loopne
out
dec
sub
cmp
push
push
mov
das
popf
pop
mov
push
and
dec
dec
push
mov
sbb
xor
mov
pop
iret
mov
out
out
sbb
xor
sbb
loope
test
repz
pop
adc
and
lret
mov
jae
mov
cs
lahf
das
movsl
fstpt
rorb
pushf
lret
inc
dec
adc
mov
mov
arpl
in
andb
mov
pop
out
fadds
out
lcall
xchg
in
dec
xchg
push
arpl
adc
out
pop
pop
daa
inc
pop
inc
pop
leave
in
in
jnp
outsl
inc
jge
pop
adc
movsl
mov
out
hlt
mov
gs
mov
mov
or
and
sub
xor
pop
jl
adc
loop
push
lds
stos
lods
out
test
pushf
mov
bound
mov
stos
test
cmp
pop
ss
leave
repz
pop
in
mov
leave
out
xchg
in
lret
in
adc
or
jae
cli
ja,pt
dec
int3
sub
insl
cli
pusha
jne
in
mov
cwtl
cmpsb
or
sbb
std
cmpsl
into
icebp
dec
inc
out
outsb
je
icebp
cmp
fsts
adc
pop
and
icebp
stos
mov
iret
xchg
inc
repnz
jbe
imul
fdivl
sub
add
sub
add
stos
out
xchg
xchg
xchg
idivl
bound
adc
push
sti
sti
sub
popa
sub
xor
pop
ljmp
or
dec
outsb
pop
dec
lock
mov
stos
dec
ret
and
icebp
rcrl
jle
bound
adc
je
mov
js
mov
xor
pop
mulb
pusha
hlt
push
lea
outsl
cld
nop
jmp
fs
jg
mov
mov
or
cmp
and
mov
xor
mov
xchg
push
cld
and
orb
les
ljmp
cmp
addr16
mov
into
xor
xor
cmp
cmp
ja
shll
push
mov
xchg
jp
repz
mov
fdivl
mov
sbb
cmp
fcmovnu
test
mov
jno
fistps
dec
fadd
mov
mov
mov
out
lods
ret
xchg
lock
fmuls
imul
das
add
xlat
xchg
or
clc
inc
fstp
sbb
data16
or
add
aad
test
out
inc
xor
shl
cmp
das
jl
sub
or
xor
scas
push
enter
sub
pop
inc
cmpb
inc
push
sarb
aas
repnz
loope
mov
call
mov
jns
push
push
test
jmp
inc
pop
ds
mov
pop
mov
pop
outsl
xchg
into
out
cld
aad
fisubrs
test
fdivs
lahf
add
jmp
or
and
enter
test
shlb
fists
jbe
es
insl
cs
mov
lods
jbe,pn
lcall
pop
or
hlt
mov
mov
cmp
std
nop
and
jle
stos
das
in
in
stos
push
or
loopne
fldenv
int3
mov
and
mov
rol
nop
mov
cmp
scas
xchg
lcall
lods
xchg
jp
fadd
outsl
and
pop
cmp
mov
lea
push
add
mov
clc
aas
jmp
lcall
loopne
popa
lret
xlat
mov
ret
pop
repz
arpl
inc
ja,pt
add
pushf
out
lock
mov
mov
and
push
cmc
mov
stos
xchg
lea
lds
add
shll
xchg
sbb
es
lcall
mov
cmovnp
mov
mov
inc
out
in
popa
or
push
mov
test
mov
lods
lods
cwtl
shlb
mov
and
popf
inc
push
push
popf
inc
and
cmp
fwait
insb
add
and
shl
inc
add
inc
or
or
lock
mov
iret
sbb
repz
jecxz
js
fwait
jge
aad
add
jge
mov
out
cmp
xchg
iret
ja
xor
fnstsw
pop
add
jecxz
jg
cmpsl
add
rorb
jae
and
nop
lret
and
xchg
lds
jae
sbb
roll
lds
std
ds
jno
lods
dec
cltd
jno
jbe
rep
movsb
pusha
mov
je
lock
sub
in
dec
nopl
jecxz
fsubl
sbbb
adc
mov
dec
sub
shlb
push
mov
mov
mov
sahf
lods
sub
les
pop
mov
out
pusha
or
inc
andb
sub
mov
and
mov
mov
outsl
stos
jnp
push
cmp
pop
and
adc
and
and
fcomps
mov
sbb
jnp
dec
push
jnp
dec
push
lcall
push
dec
in
dec
add
test
dec
add
lds
cmpsb
xchg
sarb
mov
push
or
jns
fidivrs
in
push
jae
les
cmc
xchg
ret
and
fsub
pusha
cmp
jecxz
arpl
and
mov
fdivrs
pop
stos
and
lret
and
pop
cld
or
faddl
push
pushf
std
cmpsl
cltd
fstpl
out
aad
and
leave
dec
leave
xchg
sub
rcrl
call
and
rorb
cs
das
pushf
cmp
insl
mov
lret
mov
add
call
jl
cmp
insl
hlt
sti
fnstsw
adc
shlb
dec
pmulhw
ret
dec
test
jle
dec
jecxz
std
fdivl
sarb
dec
push
mov
dec
pop
cmpsl
sbbb
outsl
sbb
sbb
mov
out
mov
je
jle
mov
push
fnsave
jmp
jg
dec
jb
mov
pop
mov
jne
mov
cmc
and
ja
xchg
dec
push
lret
dec
xchg
mov
xor
cmpsb
push
fiaddl
mov
stc
jge
mov
or
stos
mov
inc
or
push
push
push
mov
adc
shlb
aas
and
fwait
jb
cli
in
iret
or
mov
xchg
les
push
xor
sbb
sbb
inc
ret
and
and
cli
dec
scas
push
jbe
add
or
cmp
add
lret
mov
insb
mov
sbb
adc
daa
inc
call
loope
scas
mov
dec
cwtl
push
jmp
or
sbb
out
inc
js
mov
lahf
jmp
or
sbb
cltd
xchg
stos
mulb
pop
pop
sub
loope
xor
scas
mov
nop
cmp
cli
ret
jno
mov
ds
fdivrl
dec
andl
daa
popf
push
or
lods
adc
xchg
pushf
inc
ffree
sbb
mov
not
in
ds
lds
lret
push
and
iret
and
ja
insl
add
fs
push
mov
jno
fldl
pop
adc
cmpsb
in
mov
xor
arpl
es
leave
outsl
mov
mov
stos
mov
xchg
sub
lahf
and
std
mov
inc
xchg
std
add
nop
and
mov
dec
push
mov
scas
mov
xchg
sbb
mov
xchg
sbb
lea
or
or
ret
pop
aam
push
cmc
addr16
scas
cmpsl
xlat
das
je
sbbl
and
incb
in
push
or
repz
push
in
addr16
movb
xor
out
and
inc
dec
insb
out
pop
xchg
insl
mov
xor
mov
scas
xor
rcrb
push
add
gs
push
stc
rorl
pop
in
out
hlt
dec
nop
cmp
addr16
hlt
inc
lods
dec
inc
push
mov
mov
es
sbb
xor
dec
pushf
adc
out
scas
or
pushf
add
or
outsl
mov
es
fadd
dec
sbb
cmc
xchg
call
ret
les
mov
stos
fldcw
loopne
jb
outsl
ds
in
stos
outsl
jge
mov
mov
adc
mov
ret
and
adc
stc
and
pop
xor
dec
mov
inc
shrl
inc
fdivrl
jbe
adcl
add
xor
push
cmp
pushf
imul
mov
popa
mov
loopne
inc
sbb
mov
out
jecxz
jp
stos
adc
xor
sbb
shl
lds
lret
rcrb
push
stos
mov
sti
add
fadds
and
cld
dec
aaa
and
mov
orps
loopne
jge
push
test
icebp
fsubr
fstl
shll
aas
mov
outsl
pusha
es
test
lds
mov
sub
cmp
add
stos
popf
xor
jb
mov
pop
push
mov
xchg
mov
imulb
add
shrl
sahf
fwait
mov
jl
dec
mov
inc
or
adc
imul
pop
xchg
pop
mov
sub
mov
jecxz
xor
xchg
scas
push
stos
mov
fistps
dec
mov
outsl
ljmp
and
sub
jp
out
cli
mov
push
movsl
mov
mov
call
out
sbb
mov
mov
jb
stos
stos
mov
xchg
pop
mov
js
push
enter
aas
cmp
xor
xchg
xchg
mov
xchg
push
pop
jmp
cmc
add
fs
fidivs
push
es
fisttpll
and
stos
xlat
and
fiadds
jecxz
or
push
sbb
gs
out
pop
mov
inc
cmp
adc
and
fisubl
int
mov
imul
adc
ret
cmpsl
fistps
in
add
mov
pop
jae
dec
popa
and
je
sub
das
int
sti
mov
or
mov
mov
jnp
xchg
adc
mov
cld
inc
xor
es
jle
out
sub
add
jbe
aam
cmpsb
and
xchg
hlt
adc
mov
jmp
js
cmp
out
push
sarl
data16
mov
mov
cltd
mov
mov
loop
hlt
sub
inc
andl
mov
fnsave
mov
jecxz
mov
fdivr
das
push
cmp
sub
jae
and
xchg
fbld
outsl
les
cmp
xchg
add
inc
push
out
add
scas
and
popf
and
popa
jae
jge
test
add
or
stos
sub
inc
mov
cmp
or
inc
sbb
sub
int
cmc
mov
add
addr16
daa
or
mov
mov
sub
fidivrs
cmp
ret
mov
jne
nop
jecxz
adc
mov
into
cmp
out
or
aam
inc
lods
cmp
std
sbb
lods
jg
cli
mov
xlat
scas
cmp
jle
mov
dec
repz
pop
mov
sbb
out
decb
mov
dec
jns
push
in
push
cmp
fistps
idivl
je
inc
mov
stos
dec
dec
adc
popf
xchg
jle
add
sbb
lahf
pop
and
cmp
popf
fs
jnp
and
lds
inc
adc
out
sbb
dec
fsubrs
in
inc
mov
sub
mov
pop
or
in
xor
push
mov
xlat
lret
inc
cli
fnstcw
xchg
push
jp
mov
add
sbb
sar
push
inc
xor
cmp
push
aad
aaa
mov
or
mov
jnp
add
adc
outsb
lret
adc
mov
fidivl
imul
push
pop
cltd
mov
adc
orb
test
cmc
mov
add
xchg
cmp
shll
adcl
add
ljmp
sub
sub
push
mov
xchg
in
jl
add
mov
lods
jl
dec
popf
gs
jbe
dec
fwait
icebp
mov
dec
sub
push
mov
or
enter
and
lahf
xchg
mov
cmpsl
popf
mov
into
push
stos
fcomi
xchg
xor
pop
into
and
pop
fisubrs
xor
xor
lret
mov
sbb
int3
mov
pusha
xorb
nop
out
dec
testb
pushf
push
jmp
sub
inc
fdivs
shrl
jbe
add
dec
inc
data16
jmp
adc
jp
lret
cmp
inc
lcall
lea
dec
sbbl
xor
mov
rcll
jno
add
xor
fwait
or
mov
jno
inc
cmp
sub
rcrl
adc
out
push
loope
mov
xchg
mov
jo
xchg
imul
movsbl
insl
push
mov
icebp
cmp
ljmp
mov
push
xor
jg
and
outsb
testl
jns
insl
jno
cmp
daa
push
xchg
cmpb
jecxz
jbe
sub
mov
roll
cmp
in
imul
xchg
hlt
mov
pop
cmp
inc
scas
loop
pop
fnsave
dec
ficoms
je
js
add
mov
out
lret
stos
jae
pop
cmp
hlt
add
cmp
xchg
imul
in
mov
pop
xchg
dec
pusha
out
and
in
ss
cwtl
test
stc
sub
push
jo
in
and
in
divb
mov
xchg
cmpsb
xchg
mov
mov
cmp
sti
sbb
sub
sbb
test
xchg
cmp
lods
test
mov
sbb
insb
rorl
cs
std
fsubrl
in
scas
bound
push
hlt
pop
int
push
mov
aad
adc
mov
and
xchg
jp
dec
ljmp
jns
movsb
add
in
sbb
daa
inc
jns
pop
add
ja
sub
jle
scas
xor
test
xchg
loope
xor
cmp
mov
stos
sbb
cmovb
dec
inc
inc
mov
mov
xor
repz
dec
mov
add
fisttpll
push
pop
aam
push
stos
cmpsb
loopne
clc
cmp
mov
mov
dec
or
mov
js
inc
in
cmp
cmp
push
daa
mov
fdivl
push
outsb
ror
jecxz
scas
cwtl
jns
je
loope
orl
pop
idivl
add
or
ficomps
xor
int3
mov
inc
push
adc
scas
cmp
sbb
xor
cmc
in
cwtl
ss
ret
notl
sub
lret
cmc
pusha
enter
mov
insb
sub
ret
or
cmp
aad
lock
push
and
shrb
test
sub
jmp
dec
sub
aaa
cmp
push
scas
arpl
cmp
push
cmp
outsl
mov
rcll
or
add
mov
lahf
repz
jae
push
cmp
mov
lea
sbb
inc
mov
ja
into
mov
push
lea
out
outsl
lea
pop
xor
adc
dec
jge
mov
test
pop
xor
daa
lods
fstpt
test
inc
and
pop
add
sbb
dec
or
cmp
out
cmp
push
xorb
out
shrb
cmpsl
inc
call
mov
out
aam
iret
and
sub
stos
cmp
adc
test
jmp
aas
jb
imul
ret
fbstp
pop
sbb
or
lahf
in
cli
notl
xchg
shl
xorb
cmpsb
imul
push
negb
mov
xchg
mov
xchg
add
or
shll
lcall
pop
repz
mov
ds
test
mov
mov
pop
test
loope
out
inc
mov
inc
xor
je
mov
mov
imull
out
add
xchg
out
in
leave
adcb
push
or
pop
mov
pop
daa
jae
out
das
or
mov
pextrw
and
xor
dec
jo
sbb
test
sub
xor
mov
cld
sub
fcomi
cli
fsts
xor
mov
xchg
js
in
mov
mov
push
loopne
repnz
push
das
rcrl
sub
xchg
lcall
je,pn
jmp
ds
cmp
outsb
clc
mov
iret
into
sbb
push
sbb
and
add
fnstenv
jbe
hlt
or
or
push
add
cmpsb
mov
lahf
out
aas
xor
faddl
adcl
push
dec
xchg
sbb
xor
cmp
js
pop
shr
mov
xchg
shl
adc
loope
orb
xchg
ss
lret
addb
push
mov
mov
lds
testb
outsl
and
cld
pop
fcompl
adc
mov
in
imul
and
rclb
mov
jle
les
frstor
adc
out
cmp
cs
mov
lock
aaa
mov
push
add
stos
push
movsb
das
mov
dec
shll
push
outsl
xor
push
stc
dec
lods
add
ljmp
sbb
lret
lods
xchg
push
cld
jge
xchg
dec
jae
push
lea
mov
mov
inc
jb
adc
sub
outsb
jae
and
stos
xor
inc
out
ja
pushf
pop
out
test
loopne
xchg
jb
ret
dec
dec
mov
out
aam
lret
adc
push
pop
xlat
xchg
sub
in
push
inc
mov
jp
sub
ds
mov
pop
repz
push
add
or
mov
mov
xchg
push
push
dec
cmpsb
sub
xor
adc
stos
mov
dec
sub
shrb
push
and
dec
loopne
daa
and
pop
inc
pop
push
stos
mov
inc
dec
mov
inc
mov
insb
in
fistps
lods
sub
aad
stos
push
pop
int
push
sarl
clc
icebp
xchg
lods
pop
jne
stc
dec
pop
fs
rorb
insb
les
ret
clc
cmp
scas
mov
cmp
mov
js
dec
pop
loopne
cmp
sub
movsl
jle
les
cmpsl
subb
aad
scas
icebp
repnz
testl
cli
mov
js
jge
cmp
das
push
in
push
stos
xor
mov
les
push
sub
pop
test
or
mov
sbb
adc
sub
icebp
insl
xor
and
mov
jle
xlat
jno
mov
or
or
add
cwtl
mov
cmpsb
jb
sub
cltd
fisttps
out
inc
adc
cmp
pushf
cmp
lcall
mov
jbe
pop
std
hlt
lret
ret
icebp
mov
out
sub
out
in
xchg
call
xor
sbb
adc
enter
adc
lods
cltd
arpl
aam
shlb
lods
popf
pop
enter
sbb
inc
dec
cmp
stos
jmp
mov
stos
stos
icebp
xor
mov
int
es
xchg
insb
or
scas
data16
fbld
adc
pop
dec
add
and
test
push
shll
xlat
jb
movsl
push
push
add
sarl
jecxz
je
mov
fsubrs
jae
push
bound
scas
cmp
dec
hlt
adc
add
sub
or
push
notl
xor
fisttpll
mov
pop
cmp
bound
jnp
ret
cmp
mov
loopne
pop
aas
test
mov
jg
cltd
cmp
dec
jno
xlat
cmp
fidivrl
dec
pusha
cmpsb
mov
add
xchg
sub
addr16
andb
push
aam
stos
push
ret
push
iret
mov
aam
xchg
mov
and
inc
sbb
aam
xchg
dec
pusha
cltd
sbb
lahf
sbb
pop
dec
pop
jge
adc
loopne
test
inc
pop
and
stos
mov
push
jecxz
sbb
jecxz
jl
push
sub
push
into
mov
jp
into
stc
hlt
mov
mov
lret
sti
out
sbb
push
jg
dec
dec
mov
inc
lock
pop
dec
fsin
mov
pop
add
aam
push
std
aam
cltd
push
mov
push
in
out
rcl
mov
imul
push
popa
dec
xor
add
cmp
mov
in
xchg
push
stc
ret
testl
cmp
imul
shlb
les
and
xchg
mov
nop
pop
or
jp
pop
leave
xchg
inc
pop
scas
fstpt
cmp
inc
fwait
clc
movsl
push
rcr
fldenv
popf
rolb
cs
push
add
mov
push
sarb
cmp
inc
in
mov
loopne
push
jp
leave
mov
and
pop
and
adc
in
mov
or
add
mov
push
pop
jmp
imul
mov
sbb
popa
clc
adc
fs
lea
sbb
and
test
xchg
push
add
pusha
in
popa
pop
pop
jno
xor
push
push
pop
ret
jge
loope
inc
xor
outsl
adc
cmp
imul
add
cmc
lahf
sbb
in
in
jb
int3
inc
mov
gs
sbb
test
mov
xchg
or
je
add
cltd
or
movsb
test
inc
xchg
sub
and
xor
sbb
outsl
ja
and
lea
adc
pushf
dec
fcompl
fidivrs
xor
daa
rcrb
call
jecxz
or
add
aad
aas
sub
ja
jmp
ljmp
sub
add
push
nop
testl
pop
or
lods
add
loope
lods
movsl
mov
cltd
and
jg
into
adc
cmp
sahf
sub
push
cmpb
sub
int3
pop
std
xor
stos
jmp
jns
and
cmp
mov
xchg
mov
or
jns
xchg
inc
dec
je
mov
inc
repz
dec
push
xchg
jnp
jge
sbb
and
mov
push
iret
push
jmp
mov
dec
jp,pt
push
xchg
mov
xorb
xchg
addr16
lcall
nop
fdiv
add
mov
hlt
test
push
sbb
mov
fldenv
jg
jnp
mov
mov
jb
cwtl
outsb
jb
xor
push
push
and
mov
pop
sbb
leave
jle
or
dec
and
push
pop
mov
test
sbb
and
mov
nopl
mov
push
add
data16
inc
bound
xor
xor
sbb
insb
lods
nop
inc
popa
push
ljmp
xchg
repnz
sbb
xchg
push
jbe
rcrl
in
shrb
xor
lea
sbb
rcrb
jae
mov
jb
clc
add
hlt
sbb
imul
dec
pop
mov
movsb
mov
jno
adc
mov
das
or
jl
xor
in
out
xor
cwtl
stc
lret
jae
mov
xchg
or
iret
sbb
inc
add
in
mov
aad
decl
test
sub
sti
jp
pop
mov
shl
shrb
sub
inc
shlb
loopne
or
subb
mov
push
dec
dec
inc
sbb
jno
call
hlt
sub
fistps
daa
jl
pop
add
sbb
and
add
leave
mov
dec
push
shll
jecxz
sub
add
jl
sbb
decb
cmp
jns
lahf
les
dec
xchg
cmp
sarb
dec
xchg
lods
out
inc
inc
in
and
imul
cmp
stc
mull
cwtl
push
in
je
arpl
xchg
inc
jae
dec
xlat
mov
mov
in
adc
outsl
push
mov
adc
test
inc
mov
js
dec
aas
lock
jecxz
push
cmp
and
mov
imul
divl
jns
cmp
add
inc
inc
rorb
xchg
xchg
pushf
adc
fldenv
pop
push
imul
mov
daa
movsl
imul
mov
xor
xchg
inc
lret
cmpsl
adc
out
inc
cmp
mov
addb
inc
xchg
jb
loop
push
lds
add
adc
lea
push
test
pop
xchg
lret
inc
xchg
sbb
or
xor
inc
imul
rcll
imul
fsubr
pop
mov
mov
pop
dec
cwtl
or
bound
xor
and
or
into
pusha
int
inc
mov
fcmove
and
arpl
int3
aaa
mov
sarb
mov
mov
cmpl
ficompl
test
imul
lock
mov
mov
subb
fdivrs
inc
loopne
dec
fsts
push
int
xchg
repnz
call
test
fldenv
ja
and
mov
dec
pushf
test
inc
repnz
add
add
outsl
out
sbb
in
movsl
jns
mov
jge
fisttps
cmpsb
into
test
clc
leave
mov
push
mov
andb
mov
cmp
adc
fmulp
jnp
jmp
jbe
cmp
imul
push
fcomp
in
je
int
mov
and
orl
mov
pop
mov
xor
cmp
paddb
fistpl
xchg
push
jo
push
fildll
js
mov
ds
jno
fwait
fwait
nop
imul
popa
cmp
jbe
or
jmp
cwtl
ss
in
mov
lods
mov
in
pop
flds
mov
push
jmp
dec
outsl
shl
inc
and
xor
js
dec
push
nop
cli
sub
stos
and
jnp
loop
int3
fstpl
je
cmp
sub
sti
lods
sti
iret
insl
iret
aad
mov
adc
aad
xor
xchg
jae
push
int3
orb
cmc
mov
shr
sti
add
test
mov
and
pop
or
xchg
ds
mov
incb
add
aad
mov
into
adc
mov
clc
imul
stc
push
hlt
lea
cs
popf
dec
popf
sbb
cmp
mov
loop
or
and
mov
mov
popf
jg
repnz
pop
popf
cmp
mov
aam
fs
pushl
imul
bound
repz
adc
xor
shrl
sarb
pop
push
mov
bound
andl
ds
push
cmc
inc
mov
push
dec
mov
pop
jno
outsb
or
iret
ss
xor
ret
inc
xchg
js
mov
test
push
pop
mov
addl
divl
aaa
repnz
movsl
cltd
in
mov
mov
or
imul
mov
cmp
cmp
adc
movsl
fwait
xchg
stc
mov
cwtl
aad
jle
aam
push
sub
loopne
xchg
movsl
cmp
ljmp
es
inc
mov
mull
lods
jmp
rcl
sub
mov
sub
cmpsb
js
pop
icebp
xchg
mov
dec
push
sub
bnd
or
fmulp
aad
popa
add
or
adc
mov
adc
lds
cmp
mov
pop
loopne
add
daa
pushf
les
out
pop
cmp
gs
in
iret
mov
push
xchg
lods
roll
xchg
add
inc
push
loop
sbbb
jle
inc
loopne
loope
sub
mov
mov
int3
cmp
je
pop
lock
and
jle
aaa
orb
in
dec
adcl
pushf
push
lahf
mov
and
hlt
dec
add
mov
inc
jb
mov
add
gs
lock
in
dec
nop
inc
mov
xor
push
scas
xlat
pushf
jne
and
decb
xchg
inc
out
out
les
repnz
mov
insl
inc
xchg
aaa
addl
and
fsub
jle
ror
inc
hlt
add
mov
sub
aaa
pop
sbb
add
mov
push
and
rcll
sbb
pop
xor
stos
daa
js
scas
mov
ret
push
out
loop
or
xor
ljmp
icebp
sahf
push
xor
mov
xor
cmp
sbb
sbb
inc
je
stc
adc
sbb
jmp
sub
test
sub
cmc
je
stc
stos
out
jmp
movsl
dec
arpl
mov
sbb
or
push
add
fsts
pop
fnsave
xor
cmp
cli
ror
ss
mov
dec
and
loopne
pop
inc
sub
es
cli
stc
fwait
ret
jne
imul
fcmovb
outsb
movsl
enter
xor
and
popf
dec
fnsave
push
sbb
scas
push
lcall
mov
ja
jl
sub
mov
movsl
push
xor
sbb
or
xor
cmp
cmc
stc
test
sub
mov
sbb
push
cmpsl
push
lret
jg
les
sahf
jne
cld
mov
out
sbbl
add
int3
ds
dec
insl
inc
push
lods
sub
sub
sub
movsb
pop
les
mov
jns
pop
aaa
mov
sti
ss
lret
pushf
cmp
test
cmpsb
shl
mov
insb
out
enter
ret
sar
arpl
sarb
jae
jne
pop
mov
push
cmc
inc
adc
ds
inc
xchg
cs
pop
push
sbb
hlt
lcall
pop
lcall
hlt
pop
adc
xor
pop
imul
rcrl
jg
push
rorb
shll
cltd
jmp
push
les
pop
push
cwtl
fsubp
repnz
aaa
or
push
dec
jg
jge
fsts
adc
dec
push
outsl
inc
jae
cmp
fwait
push
sbb
sti
cmp
mov
je
ficoms
mov
mov
stos
pop
aam
lods
add
mov
movsl
push
enter
jp
mov
leave
pop
cmpsb
sub
mov
and
lods
jmp
jmp
add
mov
lea
or
mov
addr16
into
jae
dec
add
inc
push
mov
movsl
pop
je
mov
adc
xor
xchg
test
popa
pop
push
fistpll
push
mov
jae
mov
mov
push
jg
xor
push
mov
arpl
mov
loop
and
sbb
jmp
mov
icebp
and
xchg
dec
popf
and
pop
lds
repz
cmc
cmp
leave
pop
imul
push
mov
jne
push
loope
stos
inc
and
adc
sub
fisttpll
lret
cli
or
fsubl
aad
inc
mov
mov
fwait
je
mov
les
test
jno
jle
adc
push
scas
dec
test
setnp
sbb
fdivrl
cmp
shl
movsl
mov
inc
into
test
mov
fisubl
cwtl
pop
push
pop
push
jl
adc
push
je
push
ja
leave
lds
pop
das
sarb
pushf
popf
ret
fidivl
cmp
dec
cmpsl
aas
pushf
imul
ret
scas
int
rcrb
or
fnstcw
sbb
xchg
lds
jnp
push
mov
hlt
mov
filds
mov
shll
or
inc
in
outsl
int
fcompl
js
out
pop
in
jo
xor
mov
pop
inc
int3
out
cmp
cltd
into
loop
pop
scas
push
loop
scas
and
push
leave
inc
jns
add
hlt
sahf
fidivs
pop
add
orb
pop
mov
or
clc
inc
xor
bound
pop
sbb
out
les
in
ja
mov
sub
out
mov
imul
iret
sub
adc
jle
or
jle
jmp
popa
lret
sbb
cmpsb
sub
push
jmp
stos
xor
add
and
dec
push
sbb
ret
xlat
loop
mov
in
outsl
hlt
cmp
cltd
lds
sub
shl
lcall
or
dec
jb
ja
divl
sub
clc
fstpt
aam
stc
and
adc
xor
pop
jmp
fstps
rclb
in
inc
pusha
add
mov
xlat
aas
jae
mov
jno
fs
out
pushf
sub
mov
inc
aam
jb
aas
iret
cmp
aad
dec
mov
adc
lods
push
mov
aam
adc
stc
sti
lods
push
dec
adc
lds
lea
in
repnz
and
mov
add
mov
popf
les
inc
arpl
imul
or
notb
xchg
mov
leave
idivb
add
pop
sbb
sub
dec
mov
out
outsb
sbb
cmpsl
sti
jne
dec
sahf
imul
fmul
icebp
mov
call
int3
out
sub
mov
mov
cmpsl
notl
cmp
push
addr16
cwtl
xchg
in
enter
ljmp
sub
aas
movb
lret
js
leave
mov
test
cld
mov
popa
push
adc
mov
out
push
es
imul
fldl
lahf
je
daa
mov
mov
daa
jge
dec
lahf
aas
leave
cmp
push
imul
jle
xchg
pushf
add
fs
cs
dec
pop
sbb
bswap
adc
sub
insb
scas
test
cs
and
ficompl
sti
nop
jno
sbb
jle
and
and
push
jbe
lret
jle
cwtl
inc
scas
leave
movsl
push
dec
sbb
inc
xor
jns
shlb
nop
shlb
in
push
pop
fbstp
arpl
into
jae
in
mov
mov
add
xchg
jne
js
xor
loop
jo
shl
push
or
jmp
mov
fiaddl
dec
push
aam
subb
subl
sub
leave
ljmp
out
adc
xchg
xchg
mov
dec
adc
out
push
ret
mov
mov
data16
icebp
and
movsb
arpl
mov
shrl
xchg
xlat
pop
mov
outsb
fisubrs
notb
int3
arpl
imul
push
cmp
outsb
stc
repnz
sbb
idiv
sbb
mov
adc
insb
jne
test
jns
rcll
fwait
add
cltd
mov
jbe
jle
inc
sub
stc
add
cltd
test
popa
lock
cmpsl
std
jle
addb
inc
sub
xor
add
lock
mov
loop
sub
xor
sti
sub
sarb
andb
je
adc
cmp
adc
jle
sub
aas
pushf
and
clc
into
cwtl
fs
std
cmp
mov
divb
sub
rolb
jne
stos
rcrl
int3
jae
or
stc
rolb
mov
jp
lea
cmp
jae
out
add
sbb
mov
loop
mov
dec
data16
xchg
rcrl
mov
popl
scas
mov
cmpsb
mov
push
ret
push
jle
div
jo
inc
shlb
cmp
mov
lods
pop
mov
cmp
cmp
rcll
out
fistpl
push
ss
fs
iret
cmpsl
pop
out
out
or
pop
adc
leave
fwait
inc
mov
in
cmp
sbbl
enter
pop
cmc
lods
aaa
sbbl
je
shll
jmp
pop
mov
xchg
sbb
cmp
hlt
cmp
bound
xor
xchg
mov
xor
lds
adc
push
add
inc
pop
insb
cmpsl
ss
adc
mov
push
push
ja
sub
mov
cmc
mov
xor
aam
xor
addl
out
aaa
and
xor
jne
sahf
hlt
cmp
pop
mov
jg
push
cld
fisubrs
rcl
mov
dec
mov
mov
leave
lea
pusha
lahf
mov
mov
jmp
insb
cmp
loop
pop
mov
mov
cwtl
imul
in
and
mov
fs
jecxz
imul
mov
sbb
push
push
push
call
adc
xorl
clc
cmp
or
ror
inc
pop
mov
insb
adc
lcall
addr16
shlb
sub
popa
mov
daa
adc
and
aam
loop
mov
mov
pop
notb
sub
mov
pop
dec
je
jo
jno
insb
push
cmp
enter
pop
push
push
es
mov
xor
xor
xlat
sub
inc
aad
fmuls
repnz
movsl
pusha
js
cld
sbb
sarb
xchg
lret
call
sbb
inc
add
in
test
sbb
push
fdivr
xchg
pop
ss
adc
cli
adc
fdivrs
jecxz
xlat
loop
and
das
fidivrl
add
fiadds
cli
inc
push
push
mov
cs
fstp
in
enter
unpckhps
inc
mov
in
out
add
testl
add
clc
int3
push
cmp
ljmp
js
sub
inc
add
stos
add
mov
and
bnd
ja
imul
and
push
mov
xchg
movsl
flds
mov
sbb
aas
add
pop
and
das
add
push
pop
inc
outsl
insl
das
test
inc
je
push
xchg
dec
xorb
pushf
pusha
imul
jl
xchg
mov
pop
fldcw
jl
sbb
push
mov
add
inc
movsl
call
jg
mov
mov
adc
mov
idivb
imul
out
pop
lret
xchg
mov
imul
imul
dec
push
inc
icebp
jne
jno
mov
mov
mov
frstor
sub
cwtl
loop
rcl
or
movsb
cmpsl
dec
inc
sbb
in
push
pop
mov
pop
or
push
je
daa
pop
pop
icebp
cld
or
xorb
inc
cmp
pop
inc
stos
mulb
push
sbb
mov
mov
jnp
or
es
xchg
adc
rolb
sub
inc
out
imul
xor
mov
fistl
jg
add
add
call
imul
ret
cmp
lods
mov
cmp
mov
cmp
and
xor
addr16
xchg
sub
out
in
lock
sub
mov
dec
or
dec
sarb
or
aam
push
and
adc
ficoml
iret
mov
add
aam
dec
testl
stc
pushf
mov
int3
lret
sbb
cs
adc
xor
popf
cli
and
xchg
arpl
sub
out
imul
mov
pushf
aad
sbb
inc
jno
pushl
sarl
sub
dec
pop
dec
daa
xchg
add
cs
pusha
negw
sub
cmpsl
fs
mov
lret
xor
std
into
lock
jo
or
sub
xor
inc
test
icebp
pop
add
ret
mov
outsb
cmp
outsl
aam
daa
or
out
sahf
add
stos
lods
add
cmp
dec
gs
dec
adc
sbb
push
and
ret
and
and
shrl
and
ja
sbbb
mov
sub
cmp
push
jo
stos
fiadds
in
jns
lcall
clc
mov
jne
inc
sbb
inc
mov
inc
add
pusha
scas
pmulhuw
cmp
add
std
fcmove
mov
ret
fmull
les
out
gs
xor
cli
mov
loopne
cmp
test
push
inc
mov
dec
mov
xor
jns
cmp
jg
test
fsub
push
and
cwtl
cmpsb
sahf
pop
sbb
sub
jle,pt
pop
xchg
inc
lret
cmp
lods
and
lds
arpl
mov
jecxz
lcall
sbb
addr16
pushf
push
add
data16
or
out
xor
scas
loopne
jmp
cmp
mov
arpl
lret
sbb
out
mov
lahf
iret
lods
push
pop
icebp
mov
test
scas
xchg
ds
cwtl
lods
int3
in
push
fisttps
test
mov
xchg
inc
or
mov
call
adc
jo
pop
stos
lea
and
push
jg
xlat
data16
jmp
call
cld
movsl
cld
inc
cmp
into
iret
in
fnstcw
cmp
out
enter
pop
push
inc
adc
jo
pop
mov
push
sbb
sbb
push
mov
push
fidivrl
stc
stos
rcrb
daa
aam
div
and
or
stos
mov
loope
dec
sub
push
lock
xchg
xor
and
fidivs
dec
movb
pop
add
jmp
pop
clc
jmp
loopne,pt
pop
insb
adc
fdivr
mov
mov
ja
xor
mov
push
mov
pusha
mov
sub
push
ljmp
lea
outsl
out
xchg
mov
mov
mov
mov
imul
push
shll
insb
jo
loope
aaa
xchg
imul
filds
sbb
lret
cmp
mov
lods
outsl
gs
sbb
pop
scas
add
jmp
dec
mov
adc
in
lods
xchg
pop
mov
das
sub
cmpsb
movsl
ret
push
push
ret
mov
pop
push
jp
out
enter
dec
jge
out
mov
dec
adc
lea
pop
divb
or
or
imul
pop
push
ret
jo
sti
or
add
jp
or
ja
popf
stos
mov
mov
jb
inc
add
lahf
movsb
fildll
lcall
inc
mov
or
out
and
movsl
sarb
out
dec
mov
lahf
test
lcall
test
lcall
cmpsl
lcall
sub
cmc
aad
call
sbb
lcall
fdivl
loopne
inc
or
sbb
dec
lahf
sbb
dec
and
xor
inc
test
xor
aaa
insl
cmp
inc
out
push
inc
mov
call
mov
leave
pop
imull
inc
cmp
push
push
dec
cmp
test
mov
divl
pop
lret
push
lret
aam
and
fs
push
pop
push
sub
xchg
jge
lea
pop
adcl
mov
stos
in
hlt
lds
lock
dec
cld
mov
sub
movsb
dec
sahf
push
cli
push
adc
sarl
imul
dec
mov
in
lcall
push
adc
dec
mov
inc
inc
jne
and
cs
mov
mov
cltd
cmp
loope
mov
inc
std
push
out
jp
sbb
outsb
sub
adcl
aaa
aam
push
les
ds
into
jo
add
lods
shrb
mov
pusha
ljmp
inc
mov
jmp
sub
popf
push
sbb
es
rclb
lahf
xor
cmc
les
cmp
out
enter
add
sarl
sub
test
insb
add
mov
sub
cs
inc
xchg
int
scas
fmul
nop
addr16
jp,pn
dec
and
movsb
test
push
cltd
das
aas
jl
xchg
int3
aam
jae
popa
lock
add
mov
mov
sarb
xchg
add
int3
pop
iret
push
les
out
stos
jns
cmp
sbb
pop
dec
in
sti
iret
mov
push
dec
dec
push
push
sahf
xor
sub
mov
push
cmp
pushf
cld
push
pop
cs
lret
dec
hlt
imul
je
mov
out
jbe
dec
repnz
mov
sbbl
inc
sbb
out
mov
inc
sbbl
mov
std
int3
aam
fcmovbe
pop
inc
pop
popa
aaa
std
enter
sub
js
or
xor
xor
imul
imul
adc
test
mov
and
jl
xchg
movsl
push
mov
xorb
loope
xor
fnstenv
fnstenv
inc
jne
jne
jnp
mov
sub
cmpsb
iret
and
cmp
xor
push
mov
push
mov
sbbl
mov
mov
or
cmp
mov
out
rolb
adc
cmp
dec
add
test
sbb
lock
inc
ficompl
jae
aas
xor
test
mov
jnp
outsb
mov
xchg
sbbl
fsubs
pop
sbb
imul
mov
dec
fs
hlt
inc
jb
or
sbb
ds
dec
mov
pop
inc
mov
fs
mov
int
in
loope
lea
xor
sub
dec
and
lret
mov
dec
scas
movsl
push
ja
daa
bnd
hlt
sbb
pusha
icebp
or
bound
dec
outsl
pop
fst
mov
cs
add
jl
test
cltd
push
and
rcrb
mov
xchg
jle
cmp
sbb
lcall
mov
push
push
inc
stc
jp
int3
pop
nop
popa
ret
dec
mov
cli
lret
cmp
mov
xchg
cwtl
jne
xor
bound
sbb
imul
mov
cmp
lret
lds
pop
fs
and
gs
jnp
rcrl
mov
push
loopne
adc
jo
loopne
rcr
inc
pop
stc
cmp
ficompl
xor
xor
lds
clc
pop
inc
test
inc
jp
dec
test
mov
cmp
xchg
mov
xchg
icebp
jns
sub
adc
or
jnp
mov
mov
or
xor
mov
imul
out
add
popa
ss
xchg
das
pop
cmp
fbstp
xchg
pushf
cld
mov
push
dec
dec
and
xor
ds
leave
jmp
xchg
rclb
push
and
sub
jb
jbe
pop
push
pusha
xor
adc
pop
enter
insb
add
arpl
xchg
repz
pop
sbb
push
jns
cltd
xor
mov
ljmp
lret
idivl
dec
jp
jae
xchg
into
adc
insb
clc
mov
or
movsb
cli
fstps
mov
movsb
pop
rcrl
cmpsl
cltd
mov
push
bnd
clc
fdivr
jmp
int3
cli
ss
stos
mov
or
jbe
comiss
test
ds
repz
dec
pop
adc
cs
andl
push
lds
sub
or
push
jmp
add
stos
arpl
mov
xchg
cmpsb
or
push
dec
dec
sbb
push
repnz
xor
call
adc
xchg
addb
jp
jl
dec
inc
dec
jg
and
cmp
dec
js
dec
shrb
add
cmp
cmp
fisubs
mov
push
rolb
fidivrl
out
pusha
enter
and
call
jo
fisttps
sbb
ljmp
mov
dec
cmc
mov
data16
ficoml
xchg
xchg
jbe
pop
xchg
dec
push
out
push
adc
adc
add
dec
clc
pop
xor
add
push
test
adc
mov
push
popf
jecxz
and
mov
xor
lret
jo
sub
mov
es
cld
fnsave
adc
and
iret
inc
scas
dec
ficoml
scas
mov
inc
fs
fs
mov
push
mov
into
adc
mov
inc
imul
dec
in
or
pop
sbbl
and
insl
in
jl
nop
mov
imul
mov
iret
pop
pop
cmp
lret
mov
es
cwtl
xor
fld
mov
mov
sar
negl
jbe
imull
inc
jecxz
jbe
jnp
loopne
arpl
mov
scas
cmp
repnz
mov
or
jae
cmp
fimuls
cs
popl
mov
ss
or
daa
xchg
add
jb
xchg
cmp
and
aam
add
inc
and
hlt
jno
fwait
int3
mov
inc
jge
mov
and
iret
jg
lahf
lea
shlb
inc
gs
add
mov
cmp
movl
std
or
xor
mov
jle
pop
lds
and
mov
push
les
dec
or
or
add
and
mov
cmp
mov
mov
cmp
scas
in
movsl
out
jmp
mov
xchg
outsb
add
mov
push
in
insb
cmpsl
into
jmp
movsb
or
addr16
cmpl
fwait
mov
xlat
loop
add
call
pop
xor
lcall
inc
loopne
loope
lds
rcrb
jb
mov
mov
mov
fdivrp
ret
mov
lods
cmc
sbb
mov
inc
and
sbb
je
test
pop
icebp
ret
push
jae
push
lahf
bound
ffree
xchg
inc
cmpsb
pusha
loope
xor
mov
cmpsl
dec
cmc
push
xor
mov
lahf
xchg
in
pushf
stc
aaa
fidivl
sbb
je
out
jne
pop
mov
int
adc
fsubrl
xor
cmp
hlt
incl
mov
movsl
daa
inc
es
jns
fnstcw
notl
and
mov
inc
xchg
xor
mov
test
inc
cltd
push
or
push
pop
cmp
and
xor
in
fcompl
and
jl
mov
stos
in
outsl
clc
and
mov
mov
lds
loopne
lret
decb
test
test
xor
lcall
fsub
add
iret
jg
loop
xor
push
daa
and
fbstp
test
js
aaa
hlt
dec
leave
nop
cwtl
mov
adcl
cmp
or
dec
jl
xchg
pop
ja,pt
adc
insb
out
repz
inc
xchg
or
push
mov
jnp
aam
lds
es
mov
inc
enter
lods
push
leave
adc
sbb
test
sbb
out
ret
out
mov
mov
jl
ds
push
adc
mov
cld
orb
xor
pop
outsb
dec
fiaddl
pop
jmp
addl
shlb
mov
cmp
es
decl
pusha
cli
adc
push
push
ficomps
cmpsb
xchg
and
inc
sub
cmc
xchg
dec
and
mov
xchg
dec
jg
pop
cmc
jl
push
test
xchg
push
out
inc
add
fcmovnbe
cli
push
fsts
xchg
or
mov
cmp
mov
pushf
dec
sub
stc
or
insb
int
cli
lahf
pop
sub
cmpsb
test
aam
and
lds
aad
in
xchg
cmp
inc
cmp
add
fidivs
ret
imul
stos
mov
push
sbb
stos
xchg
jb
mov
mov
ds
aas
inc
out
sbb
sarl
js
leave
pop
into
sub
mov
jecxz
xchg
xchg
xor
dec
mov
subb
bound
jle
mov
pusha
int3
xor
ret
xor
fs
mov
inc
xor
mov
fucomi
mull
mov
xor
jo
lds
cmp
jno
jecxz
stc
or
xor
lcall
lahf
imul
sbb
fcmovb
pop
jecxz
in
popf
xchg
je
arpl
push
inc
repnz
mov
dec
xchg
mov
push
notl
cmp
movsl
mov
adc
mov
sub
xchg
xor
or
cs
nop
stc
aas
pop
add
addr16
nop
jo
push
mov
lahf
inc
out
push
push
cld
mov
iret
dec
nop
sbbl
sbb
outsl
sub
shlb
test
mov
cmp
or
jg
or
clc
pushf
mov
pop
into
movsb
lds
jne
aaa
cmp
cmp
loop
xchg
jns
filds
les
cmpsb
iret
mov
into
call
add
insb
and
int
icebp
xchg
movsl
mov
hlt
stc
int3
jnp
pop
or
leave
jne
push
mov
lea
mov
popa
jecxz
fdivl
popa
mov
push
fadds
push
ss
or
movsb
imul
cs
lods
cld
in
add
fstp
sbb
arpl
mul
lcall
in
enter
jle
cld
test
and
ret
and
or
lds
in
daa
mov
leave
insl
stc
enter
flds
rcl
or
daa
jae
sub
fimull
inc
mov
mov
add
and
mov
in
dec
adc
dec
mov
cmp
inc
movsl
adc
xor
lahf
xchg
adc
dec
imul
outsl
lret
push
push
mov
mov
mov
sbb
mov
pop
out
lcall
fldcw
fsubr
sti
iret
inc
out
insb
shll
or
lods
scas
popf
pushf
lret
or
xchg
dec
repz
mov
shrl
es
and
dec
cmpsl
into
fisttps
jge
push
testb
imul
fwait
mov
insb
mov
adc
add
stc
mov
decb
repnz
divb
add
cmpl
shrb
push
mov
or
lea
in
or
outsb
mov
jge
jg
in
mov
adc
daa
hlt
loope
cmp
xchg
in
ror
popf
xlat
fldl
lret
or
loope
xor
xchg
and
and
or
loope
mov
push
inc
loop
fucomip
testl
test
test
popl
dec
es
push
clc
or
mov
inc
gs
imul
dec
popf
pop
es
mov
lods
icebp
pop
jo
lea
mov
cmp
dec
stos
push
mov
dec
or
push
or
dec
sub
inc
imul
jmp
mov
iret
mov
loopne
or
inc
nop
stos
cwtl
je
inc
outsl
and
test
adc
aam
and
jno
inc
mov
or
cmp
mov
loop
outsb
cmp
or
adc
mov
pop
or
lcall
movsb
sbb
fisubrl
or
push
mov
add
xchg
sbb
test
rolb
testb
jb
xchg
xchg
test
int3
scas
sti
out
or
push
fisubrs
inc
inc
sbb
and
sbb
repz
adc
adc
jae
jp
cwtl
xor
add
or
sbb
mov
mov
jp
adcb
pop
jg
mov
sbb
test
cmp
xchg
xchg
cmc
shl
sahf
dec
mov
outsb
inc
sub
stc
fcomip
or
adc
lret
mov
pop
xor
mov
sub
mov
or
pop
mov
je
in
inc
sub
popa
jl
xor
cwtl
sahf
sub
inc
ret
push
pop
int
in
push
jbe
ss
dec
mov
jo
sbb
xchg
dec
pop
cld
rorb
mov
stos
xchg
cs
enter
cmp
ret
sti
cmpsw
cs
pop
adc
or
add
pop
setbe
nop
add
mov
mov
fcompl
fmul
fwait
int
mov
or
addr16
sub
adc
mov
cmp
adc
cltd
add
pop
leave
cmpsb
lret
sahf
into
jge
dec
mov
lret
decb
test
xor
or
xor
cwtl
movsl
or
adc
xor
and
std
sbb
pusha
dec
adc
and
stos
inc
xor
inc
orl
xor
stos
stos
dec
or
pop
sti
cli
xor
push
jle
xchg
mov
stos
fcmovnbe
iret
mov
cld
mov
jb
lods
sub
adc
jecxz
jle
mov
mov
xchg
iret
add
adc
cmp
mov
add
xchg
sahf
pop
call
jle
inc
xchg
fldl
aas
add
or
cmp
mov
fimuls
cwtl
test
and
aas
mov
sbb
cmpsb
out
cmp
mov
outsl
mov
or
std
mov
push
pop
adc
sti
shll
or
or
std
xchg
inc
sub
inc
sbb
imul
xor
add
shlb
lock
adc
hlt
xor
dec
pop
ret
ret
bound
bound
push
repnz
into
stos
push
and
inc
mov
xchg
adc
inc
mov
xor
addr16
repnz
aas
out
xchg
in
mov
rorb
shrl
jle
das
mov
push
loop
jae
dec
adc
push
ljmp
pop
ja
popa
outsb
enter
imul
stos
xchg
loop
aad
scas
and
jmp
out
shrb
cmc
xor
mov
mov
cli
jmp
xor
adc
inc
loop
fistl
mov
mov
jecxz
loope
jae
mov
jg
in
repnz
jno
dec
cwtl
in
xchg
xchg
cwtl
stos
subl
add
mov
jns
adc
imul
ficompl
jl
loopne
inc
imul
sub
push
and
or
pop
mov
es
add
and
push
mov
or
push
jns
in
std
mov
imul
stc
pop
dec
jnp
roll
xchg
sub
test
push
mov
out
repnz
icebp
jle
xlat
addr16
jb
inc
jnp
stos
shrb
lret
lahf
fsub
popf
lock
stc
or
xchg
xor
aam
cmp
sub
iret
xorb
xor
in
jge
pop
sar
jne
sbb
jo
pop
cmp
out
pop
shlb
jno
int
test
outsl
inc
inc
dec
sub
jl
scas
xchg
loope
and
scas
outsl
xchg
mull
clc
xor
rcrl
mov
xchg
test
xor
sarl
adcl
inc
jp
cltd
orl
inc
test
mov
add
inc
popa
jne
shrb
xchg
out
ja
xchg
les
push
mov
out
mov
mov
test
mov
pop
out
jbe
xchg
fmul
push
dec
cmp
xor
cmp
cwtl
andl
movsl
rorl
and
mov
inc
xchg
xor
ss
xchg
hlt
das
test
xchg
xor
push
sarb
push
jg
inc
sbb
outsb
int3
lcall
lcall
cmpsl
ror
aam
or
flds
into
dec
sub
out
test
lret
stos
xchg
push
lahf
leave
pop
mov
in
test
mov
mov
adc
std
jecxz
out
pop
das
insb
fstpl
sub
enter
ret
dec
mov
lahf
insb
arpl
or
jecxz
pmullw
push
xchg
cs
stc
mov
loope
sub
push
std
orl
jmp
into
in
lds
mov
std
fdivl
pop
sbb
out
mov
inc
pop
cmp
out
ss
cltd
mov
push
in
movsl
mov
push
cli
mov
dec
adc
or
and
roll
push
pushf
int
xchg
pop
and
out
popf
or
test
jmp
fwait
sarl
cli
inc
les
mov
rcl
hlt
mov
sti
fbld
jecxz
fs
and
jecxz
shrl
xor
or
jnp
jmp
mov
mov
dec
or
loope
sub
add
arpl
push
sbb
jmp
mov
or
pop
push
push
adc
add
mov
inc
push
cmp
arpl
mov
clc
add
pop
cmp
sub
rorl
mov
clc
in
aam
inc
mov
push
std
mov
mov
bound
test
jno
xchg
mov
orb
cli
xchg
push
maxps
clc
pop
jle
push
lods
and
mov
mov
cmp
das
cmpsb
int3
stc
sbb
in
add
std
shl
rcrb
outsb
bound
push
inc
mov
mov
insb
cwtl
or
mov
cmp
xchg
or
enter
mov
push
inc
xor
inc
xchg
jecxz
xchg
mov
sbb
dec
push
sahf
ja
sbb
mov
jg
repz
cltd
popa
xor
repnz
mov
sbb
mov
inc
ss
rcr
cmp
enter
dec
addr16
or
mov
and
outsl
seta
adc
addr16
pop
outsl
xorb
mov
mov
aad
nop
lods
stos
sub
jg
fmull
add
shlb
dec
insb
push
out
fimull
xchg
add
xchg
dec
xchg
or
adc
addl
clc
push
out
lock
mov
mov
cmpl
in
push
mov
adc
shrl
insb
loop
mov
xchg
lods
cmp
ror
dec
fdivl
jno
lds
mov
fistpll
mov
jae
xlat
popa
adc
cmp
filds
and
push
jge
jb
loop
xor
arpl
or
into
out
or
push
mov
fbstp
ds
test
cmp
lret
fstpt
push
xor
mov
mov
mov
jnp
loopne
shrb
jp
adc
sti
paddusb
mov
push
or
popa
imul
cmp
lahf
test
aas
outsb
lds
mov
mov
lahf
adc
rorl
mov
clc
mov
sti
jg
mov
dec
xchg
cltd
test
imul
xor
je
dec
dec
and
mov
mov
mov
test
cmp
subl
jmp
cmc
jae
push
js
xchg
fimull
mov
pop
sbb
and
jg
jne
call
fcmovne
adc
out
xorb
arpl
mov
sbb
cli
cwtl
dec
aas
test
enter
dec
mov
lret
xlat
jbe
inc
inc
and
loope
xchg
cmp
xchg
mov
mov
jnp
shll
sahf
ret
sub
out
lahf
es
sub
xchg
cmpsl
jecxz
or
jmp
cltd
pop
push
or
add
jg
mov
xchg
fisubrl
sub
pop
push
int3
push
aas
xchg
arpl
cmpsb
icebp
jg
rolb
xchg
adcl
fdivs
push
cltd
pop
mov
shl
inc
outsl
or
pop
ja
movsb
mov
mov
icebp
call
cmc
jecxz
mov
cmp
push
popa
add
je
xchg
iret
xchg
imul
cli
in
mov
pop
cwtl
push
mov
inc
mov
fistpl
sbb
xchg
and
xchg
popf
fcomps
push
mov
inc
outsb
mov
mov
mov
popf
mov
inc
mov
and
mov
pop
pushf
xchg
fdivr
test
push
jmp
or
jg
cwtl
jnp
test
dec
adc
in
shl
aad
aam
or
das
jmp
adc
push
jl
lods
mov
aaa
fisttpll
jns
add
mov
adc
lret
mov
xor
pop
data16
test
xchg
testb
mov
pusha
cmc
mov
cmp
sti
dec
mov
sub
test
pushf
cmp
mov
in
aaa
scas
adc
push
adc
push
xchg
rcl
jno
or
adc
add
out
sbb
fidivl
std
and
scas
cmp
dec
rorb
lock
push
in
ret
jmp
inc
cmc
repnz
jae
dec
fsubr
cwtl
adc
out
jne
aas
push
outsl
xchg
push
outsb
hlt
inc
aaa
inc
hlt
cli
push
test
sub
or
pop
dec
xchg
mov
and
popf
cld
insl
adc
adc
clc
xchg
xorb
aam
jecxz
push
test
mov
pop
cltd
ss
test
pop
loopne
jns
out
stos
aam
les
pop
push
push
roll
lcall
lds
sub
xor
pop
lock
loope
rcrl
ja
es
jge
xor
mov
lds
inc
lea
adc
push
scas
jp
mov
movsl
scas
mov
mov
je
out
push
lock
jnp
push
pop
js
cmp
out
mov
cmp
pop
mull
mov
mov
cmp
ficoml
sahf
mov
mov
scas
mov
and
add
xchg
jno
movsl
movsl
or
inc
int3
sbb
cltd
popa
movb
out
sbb
jg
or
sub
or
std
cld
jno
or
aaa
jl
insl
mov
jg
dec
jp
jne
hlt
xor
fadds
movsl
scas
nop
fucomp
loope
test
mov
mov
jmp
sub
mul
repz
or
or
xchg
daa
dec
and
mov
arpl
pop
xchg
scas
divb
jo
sbb
and
and
and
mov
stos
aad
pop
fcmovnu
js
lock
sbb
sub
xor
out
mov
dec
rolb
mov
repz
jg
pop
jnp
fdivrp
xor
insb
jl
addl
sbb
aad
jmp
push
into
out
jmp
xchg
insl
mov
insl
flds
dec
insb
xchg
dec
addr16
pop
pop
push
popa
lea
mov
adc
lret
dec
imul
sti
lods
sub
int3
sbbl
dec
cmp
rcrb
test
mov
inc
out
pusha
xchg
mov
stos
insb
jae
lahf
xchg
pop
xor
mov
mov
sahf
dec
out
insl
xor
add
xlat
mov
xchg
fadd
in
push
jl
movsl
ja
mov
out
inc
fdivs
popa
fdivs
cmpsb
dec
in
aad
in
add
ret
aad
movsb
in
add
das
ret
gs
cmc
push
jo
fs
mov
mov
jg
cmp
and
pop
ret
jns
stos
xchg
cmpsl
jge
or
fcompl
ljmp
adc
rcr
mov
cwtl
filds
fs
int3
sub
xchg
mov
xor
adc
sti
aad
jp
inc
std
push
mov
insb
aad
cmp
adc
dec
and
pop
sbb
mov
xor
adc
inc
jbe
inc
pinsrw
pushf
cmpsl
push
mov
mov
jbe
push
outsl
sub
in
jne
cmpsb
push
addr16
sub
jbe
fwait
lret
bound
call
or
les
std
mov
push
push
pushf
repz
int3
pop
mov
push
leave
sub
insb
xchg
popl
cmp
mov
push
add
add
or
xchg
icebp
into
sbb
inc
test
imul
popf
insb
pop
mov
call
test
inc
mov
mov
in
cmp
mov
mov
loopne
insb
xchg
jo
call
push
fsts
push
push
clc
aad
mov
stos
lahf
ja
sub
mov
and
adc
xor
outsl
xchg
xchg
aas
mov
add
or
or
pop
xchg
test
xor
or
push
negl
push
js
dec
loop
fldt
sbb
lds
or
inc
jl
fisubs
mov
xor
mov
sub
pop
adc
push
int
popa
test
pop
sbb
cmc
nop
sbb
mov
dec
aad
xor
jg
enter
stc
add
fidivrl
flds
sbb
jmp
aas
cmpl
scas
jns
scas
cmpsl
mov
push
mov
mov
sub
imul
and
inc
fiadds
or
pop
cmp
push
fistpl
jns
xor
or
jp
inc
mov
cmp
daa
cld
test
repz
es
test
test
mov
rclb
nop
popa
in
push
loopne
push
movsl
mov
js
repz
incl
aaa
xchg
mov
aam
sub
enter
arpl
xchg
pop
jnp
jmp
xor
push
clc
das
xchg
dec
aam
xchg
pop
inc
cmc
mov
and
dec
mov
mov
mov
jg
test
mov
ret
shll
daa
out
arpl
test
inc
jo
and
mov
iret
mov
and
les
xchg
cmp
fs
lret
andb
xchg
leave
inc
sahf
inc
lret
loope
cmp
dec
ss
jns
int
inc
mov
dec
pop
sub
imul
jp
push
inc
dec
and
cli
mov
in
mov
enter
cmc
ret
jae
pushl
icebp
std
xchg
shr
std
jl
data16
lock
popf
fwait
inc
pop
jp
ds
push
xchg
jo
ret
xor
flds
cld
aaa
lds
push
and
test
cmpsb
and
cmc
shll
test
adc
movsb
push
stc
jne
mov
mov
popf
pop
nop
lret
or
test
cmp
jge
into
xor
mov
jne
mov
push
pop
add
call
pusha
push
out
shlb
rclb
sti
pop
inc
fdivs
cmpsl
sbb
lods
xchg
dec
inc
mov
leave
jmp
hlt
jecxz
adcb
sbb
inc
js
dec
data16
mov
adc
insb
inc
int
loopne
imul
test
pop
mov
xchg
mov
xor
fs
jg
mov
popa
mov
nop
ret
sbb
sbb
lret
add
call
adc
and
cltd
aad
xchg
inc
xor
cmp
adc
mov
jae
outsl
lods
cld
ret
xchg
fidivl
mov
test
add
push
push
mov
in
mov
sbb
test
xchg
dec
inc
cmp
dec
and
stc
cmp
arpl
jno
sbb
lods
bound
loop
jle
dec
inc
sbb
cs
xchg
loop
lock
xlat
loope
out
aaa
xchg
call
enter
xchg
push
js
sub
dec
adc
scas
repnz
dec
aaa
inc
test
hlt
cli
xchg
adc
xchg
sahf
ja
in
or
lock
mov
ret
add
push
or
loop
cmp
rcr
loop
lahf
popa
pop
cmp
aaa
das
sahf
test
mov
jne
test
cld
icebp
enter
call
xchg
cmp
outsl
xor
cmp
xlat
test
xchg
push
and
aaa
sbbb
lcall
out
fisttps
jl
cmp
push
adc
in
mov
lahf
dec
jnp
scas
pushf
adc
call
jg
jae
jne
mov
or
imul
fsubl
push
aaa
lret
imul
in
jecxz
repnz
mov
shll
and
xchg
imulb
push
jno
mov
xchg
or
mov
repnz
and
fistpll
push
add
mulb
rcr
xchg
das
xchg
insb
add
scas
xchg
clc
in
jo
xor
inc
les
fcomps
andl
ds
cwtl
mov
pop
cltd
ja
cld
ret
cmp
dec
inc
aam
dec
scas
fs
fs
adc
inc
adcb
sub
inc
adc
sbb
incl
data16
push
push
xchg
or
ss
adc
or
adc
call
cmpsb
movb
dec
das
shll
xorb
rclb
arpl
test
xorb
mov
gs
dec
dec
ret
fstpt
adc
aaa
mov
xor
fimuls
sti
movsl
sbb
cmpsl
xor
push
xor
mov
mov
inc
aam
or
lock
sbb
push
pop
out
mov
pop
stc
cld
jb
xchg
and
nop
es
sub
notb
mov
movsl
sbb
pop
icebp
rolb
scas
imul
push
xor
ljmp
jg
mov
and
cmp
arpl
lods
fbld
icebp
shll
movsb
loop
push
and
inc
mov
mov
outsb
add
jecxz
repz
int3
inc
flds
mov
adc
outsb
je
jmp
dec
stos
in
xchg
enter
mov
das
test
fidivrs
jecxz
push
pop
and
das
cmp
cmpsb
iret
mov
xor
jg
add
repz
xchg
pop
pop
sub
and
add
sti
fidivs
or
mov
aad
jmp
movsb
iret
xchg
ds
cmp
insl
imul
loope
out
push
test
pop
imul
fwait
push
test
ret
jp
lahf
mov
pusha
insb
mov
test
insl
pop
ja
xor
push
icebp
xchg
xchg
add
lret
rol
scas
popa
jns
sub
jp
stos
idivl
sub
lahf
cmpl
fdiv
cmp
cmp
sub
lret
cli
clc
notl
loopne
rol
aad
mov
das
or
add
and
pop
test
mov
cmp
or
pop
xorl
stos
inc
pop
jno
mov
shlb
add
sbb
add
clc
shlb
pop
mov
or
push
xor
cli
fistpl
stos
push
in
jl
fs
push
cmp
push
jmp
lahf
lahf
cmp
ret
push
fdivrs
stos
lods
sub
fs
cmpsl
cs
cmc
pop
in
sub
cmpsl
ror
out
lcall
cmp
inc
data16
fiadds
push
inc
inc
sub
xor
jge
push
mov
aas
dec
aaa
pop
div
inc
hlt
test
int3
mov
xor
lods
pop
jp
dec
sti
imul
inc
fs
les
cmc
and
ljmp
push
adc
adc
and
sub
in
push
sub
pop
cli
test
push
push
cmp
addl
and
mov
fcoml
cmp
fnstenv
xchg
jo
add
loopne
jl
or
mov
call
iret
scas
pop
dec
xorb
fdecstp
push
fstpl
xor
adc
or
pushf
in
ficoms
divb
adc
mov
jo
pop
mov
mov
xor
dec
mov
sbb
ror
lods
xor
push
sti
cmp
jecxz
xchg
je
shr
mov
int
push
and
mov
add
popf
inc
dec
jmp
call
mov
cmp
push
add
push
scas
lret
mov
mov
mov
or
cmp
xchg
insb
lea
imul
cli
inc
in
inc
xor
cmp
je
test
out
iret
insb
cmp
imul
mov
dec
push
movsl
xor
jecxz
icebp
dec
dec
idiv
sbb
clc
dec
ds
sbb
int3
mov
add
push
ret
movsb
mov
ljmp
mov
xchg
add
push
pop
fistpl
daa
jmp
scas
push
int3
dec
adc
add
es
inc
cli
sti
and
adc
std
mov
push
ror
sub
and
gs
aad
push
scas
inc
inc
out
aas
mov
shlb
das
xchg
shrl
hlt
cmpsl
pop
insb
xor
jmp
rcrb
pop
in
and
dec
in
add
aam
or
cld
rcrl
aad
imul
push
or
xor
jle
add
xchg
push
adc
sbb
idivb
jb
and
je
dec
jns
mov
and
jl
mov
stc
test
icebp
lret
jmp
xchg
mov
outsl
push
lock
sbb
jbe
and
mov
sbb
ljmp
clc
cmp
add
jp
insb
je
mov
add
xchg
and
pop
lahf
stos
hlt
push
adc
pop
mov
ret
das
sarb
xor
mov
sahf
xchg
mov
mov
fdivl
les
ficomps
and
add
insl
inc
es
in
je
inc
gs
in
rcrb
rcr
mov
sahf
mov
les
cmp
std
aad
fwait
test
pusha
imulb
xchg
jge
dec
out
jg
or
dec
xchg
or
mov
jp
sub
adc
adc
mov
cli
or
dec
adc
xor
mov
sti
les
cmp
cmc
xor
lods
test
xchg
xchg
mov
nop
out
cmp
push
sbb
cwtl
xchg
std
out
fs
cli
addb
movsb
push
sbb
xor
pop
pop
jb
or
xor
subl
fsts
movsl
sbbl
push
popa
or
xchg
push
xchg
push
cmc
mulb
xor
bound
xchg
outsb
push
lods
call
mov
mov
xor
jp
shl
inc
cmp
pop
outsl
test
inc
int3
mov
jg
jmp
cmp
loopne
add
cld
cs
aaa
data16
and
adc
dec
cld
cmp
jp
fistps
in
sbb
mov
stos
mov
sbb
pop
and
mov
sbb
mov
push
shll
jb
push
and
inc
push
clc
rolb
movsb
xchg
jnp
cmc
in
push
mov
mov
iret
push
mov
lcall
xchg
inc
mov
jg
push
ljmp
dec
jecxz
fwait
sbb
dec
and
std
xor
mov
jmp
push
add
jge
lods
bound
test
sbb
enter
repnz
xchg
xchg
rorb
ret
pop
mov
roll
mov
xchg
imul
cmp
xchg
repz
dec
xchg
sub
ss
data16
mov
imulb
push
fs
and
adc
test
dec
in
in
mov
pop
shll
std
and
or
lahf
fistps
cmp
push
test
mov
mov
or
push
int3
lcall
mov
xor
push
mov
mov
sub
push
fwait
push
insl
dec
ret
xchg
cld
lods
test
dec
pop
and
xor
mov
inc
push
cmp
in
and
adc
inc
xor
rcrb
dec
mov
dec
shll
mov
xchg
inc
sub
data16
ss
mov
mov
push
lods
ud0
pop
lcall
in
jnp
lods
pop
in
ret
push
mov
xchg
mov
in
mov
imul
outsl
xchg
pop
jbe
stc
fnstsw
sbb
and
sbb
fcmovu
mov
cmp
nop
sbb
mov
cmpsl
mov
mov
dec
in
or
push
andl
fildll
in
sbb
movsb
sbb
fucomi
int
insl
sbb
cmp
bnd
dec
mov
movsb
or
push
sub
jge
rorb
jl
mov
cs
rorb
lea
push
pushf
xor
insl
repnz
cmp
imul
xchg
lds
aad
pop
int
scas
scas
mov
adc
scas
sbb
sub
je
add
outsb
mov
mov
fwait
das
and
jmp
xor
not
gs
and
aam
loop
aad
icebp
jg
mov
push
lea
sub
cmpsb
das
movsb
adc
sarl
insl
xor
mov
popa
xor
jb
xchg
xchg
or
sti
push
enter
inc
sbb
popa
dec
ret
mov
lcall
sbb
pop
jnp
daa
popl
leave
dec
lock
into
mov
dec
scas
inc
xchg
fcomp
dec
iret
sbb
inc
sub
mov
hlt
lret
fisubrs
lea
xchg
out
es
ret
add
lret
sti
jns
mul
adc
fsubrl
test
fnstenv
jl
out
cmpsb
jno
mov
bound
scas
pop
insb
add
and
stc
adc
movsl
test
loop
aas
pusha
data16
outsl
daa
std
inc
pusha
and
adc
fisubs
lret
repnz
mov
arpl
jle
arpl
mov
sbb
outsb
add
cmp
pusha
in
mov
push
mov
fucomip
addr16
insb
xor
and
xchg
mov
adc
enter
fwait
scas
scas
fdivrl
imul
mov
sti
mov
imul
enter
enter
adc
pusha
mov
shlb
repnz
or
test
sub
or
add
mov
xchg
fs
test
sbb
jae
add
mov
orb
xlat
sub
jno
sbb
add
and
in
shlb
rolb
inc
jne
sbb
xchg
arpl
pushf
or
push
sub
movsb
jbe
pop
xlat
cmp
test
sub
xor
gs
push
jmp
lods
mov
scas
mov
mov
fxch
adc
jmp
rcrl
dec
lahf
loope
xlat
stos
xchg
orb
xor
pop
cmp
cwtl
or
pusha
jp
les
test
inc
sti
add
jp
sbbl
mov
and
ljmp
pushf
fstl
push
cli
mov
mov
nop
out
mov
add
loopne
jb
movsl
add
add
shl
add
jecxz
sub
test
js
xor
push
lea
je
call
mov
and
lret
lods
inc
jnp
sub
dec
and
xchg
repz
mov
mov
sbb
cltd
xor
test
cs
xlat
aaa
out
call
add
ficoml
mov
iret
push
fisubl
sub
xchg
cmp
pop
cmpsb
jmp
insl
mov
in
push
jno,pn
dec
popa
cltd
ret
ja
inc
pop
std
in
add
or
and
inc
pusha
icebp
or
mov
pop
cmp
into
jp
in
mov
xlat
sbb
fldl
enter
sub
pop
aad
xor
cmp
aas
adc
dec
sbb
mov
test
neg
and
mov
add
enter
scas
add
mov
dec
cwtl
fisttpll
dec
or
js
rolb
xchg
add
xchg
jne
pusha
in
push
leave
orb
out
outsb
adc
aas
je
push
push
pop
push
sahf
leave
imul
aaa
nop
aas
mov
mov
lea
aas
movsl
and
dec
and
bound
in
sub
movsl
add
dec
jns
ret
mov
mov
adc
sbbl
ret
pop
sub
gs
adc
dec
xor
xchg
in
dec
cmc
cwtl
inc
sub
lar
mov
and
jmp
jmp
stc
lahf
or
and
jg
xor
pop
and
mov
scas
addr16
fadds
icebp
and
repz
inc
mov
incb
add
fldlg2
sbb
enter
outsb
inc
les
add
mov
sarl
sub
ret
dec
test
mov
sbbb
jl
mov
pop
xchg
or
inc
push
xchg
jecxz
movb
movsl
rcrl
fs
xchg
mov
mov
jle
inc
pop
mov
adc
sub
and
jg
jnp
jge
xchg
cmp
xlat
mov
jmp
scas
xchg
mov
adc
mov
mov
push
sub
leave
cmp
push
mov
out
xchg
fmull
push
sbb
xchg
iret
test
push
or
fwait
stc
push
dec
repz
pushf
fcomps
lods
xorb
add
mov
pop
lret
sbb
xor
jmp
outsl
stos
repnz
sub
push
xor
and
xor
cmp
in
jne
ss
adc
push
dec
or
xor
xor
sub
jmp
stos
rcll
dec
adc
xor
in
push
pop
popa
das
out
sub
shlb
lea
mov
lea
out
inc
cmp
push
add
mov
push
mov
arpl
cmpsl
dec
incb
jecxz
mov
cmp
loope
add
inc
int3
imul
clc
push
repnz
call
cmp
hlt
dec
jno
data16
insl
lahf
rcl
add
inc
push
mov
stos
js
xchg
and
lds
pop
aad
mov
std
enter
xchg
inc
mov
and
dec
inc
xor
daa
and
stos
push
mov
and
mov
xchg
push
sarb
xchg
inc
lret
push
jbe
xchg
mov
jbe
std
shll
lret
xor
push
loopne
cmpl
pop
std
push
in
iret
mov
out
shll
xor
outsl
mov
xlat
popf
jne
jns
push
pushf
adc
push
jb
cmpsb
cmpsb
repz
pusha
xor
out
and
movd
enter
pop
dec
and
fistl
or
push
movsl
clc
int
mov
dec
and
and
shr
icebp
loop
inc
loop
cwtl
adc
in
test
jbe
fucomp
xorl
bound
adc
sub
call
cmpsl
jb
and
outsl
mov
pop
outsb
dec
call
pop
jmp
divb
into
mov
xchg
mov
dec
popf
scas
pop
mov
shll
adc
shl
push
enter
inc
outsb
les
adc
dec
jge
aas
push
outsb
push
lods
jno
add
mov
cmp
mov
mov
ljmp
pop
sub
cmp
cs
gs
inc
lcall
lret
jnp
pop
test
and
dec
cltd
mov
cmp
fs
in
mov
test
idivw
ljmp
rorb
mov
mov
jb
mov
std
mov
cmp
pop
sahf
mov
pop
ja
fmul
out
cmp
jbe
cmc
mov
in
sub
or
jp
mov
outsl
jle
mov
fwait
imul
test
fldl
inc
lcall
jmp
lds
test
dec
and
xorl
cltd
in
fs
push
lret
das
rol
in
jg
xor
loop
inc
daa
fcoms
pusha
pop
cwtl
out
sbb
ja
xor
rcll
jns
push
icebp
sbb
jle
xor
jge
inc
nop
push
fisubrs
xor
ret
mov
cmc
mov
mov
add
push
popa
inc
dec
dec
sbbb
add
adc
dec
in
xchg
pusha
pop
dec
orb
push
add
popa
enter
insl
scas
cmp
push
pcmpeqw
and
mov
jns
xchg
mov
xor
mov
pop
add
call
pop
imul
mov
ret
jl
mov
xchg
cwtl
mov
in
jns
adc
or
dec
call
in
or
or
sarl
add
lods
stc
lret
and
pop
aaa
or
pop
pop
popw
adc
lock
xchg
mov
xchg
js
xor
or
cmp
in
test
repnz
in
das
icebp
out
pop
js
cs
insb
js
rclb
lods
into
push
dec
dec
mov
jg
rcr
fisubs
lods
clc
lret
movb
pop
dec
jge
lods
dec
mov
xchg
mov
push
sarb
xchg
push
lock
mov
fcomi
dec
es
push
pop
mov
jb
shl
mov
mov
jp
jmp
xor
or
cld
sarb
jmp
lret
add
mov
mov
xor
fiaddl
dec
mov
or
and
sti
mov
in
mov
sbb
push
js
mov
dec
push
mov
jle
and
shr
inc
xor
adc
lods
push
xor
arpl
hlt
pop
outsb
rcrb
jo
push
enter
fimuls
xor
xchg
xchg
inc
jg
xchg
mov
ss
add
in
cmp
cli
stos
pushl
pop
scas
push
fsts
xchg
ret
inc
lea
lods
xorl
pop
push
pop
iret
push
mulb
pop
loop
pop
xorb
fmul
stc
stos
xchg
sti
imul
ret
sub
ljmp
inc
push
sti
lahf
cmp
adc
lods
pop
insb
mov
add
xchg
lods
or
add
into
outsb
and
js
pop
xor
sub
lods
out
dec
jnp
rorb
pop
sti
mov
nop
imul
out
insb
mov
std
mov
call
mov
push
aas
in
jecxz
sbb
dec
push
jns
hlt
push
mov
push
xchg
add
sahf
cmp
lea
push
cmpsb
jge,pt
jle
push
dec
cmp
fidivrl
inc
and
ss
sbb
mov
cmpsb
rorl
nop
stos
sbb
das
es
push
inc
sete
imul
roll
and
push
ja
xchg
xchg
pop
sub
ret
jg
scas
xor
xor
stos
insl
and
jnp
outsb
jg
push
push
pop
cmpsl
and
sbb
int
xchg
xor
fwait
pop
pop
jo
test
test
push
pop
dec
popa
mov
adc
loope
mov
cmp
and
or
dec
jnp
jmp
xchg
lret
aas
neg
inc
mov
add
ds
add
imul
inc
jl
push
cwtl
jecxz
testb
push
cmp
or
aam
add
subl
mov
nop
lods
cmp
jne
or
cmp
test
not
mov
or
imul
je
jbe
cmc
into
shr
sbb
stc
scas
cmp
mov
ja
test
or
push
jo
jecxz
lret
adc
push
lret
mov
push
fisubs
inc
push
loop
push
rorb
pop
cmpl
inc
dec
enter
or
jae
xor
addr16
lret
xchg
shlb
daa
icebp
out
std
pop
push
sub
mov
lods
in
lret
adc
rol
sbb
sub
int3
enter
pop
imul
xlat
aaa
add
pop
repz
mov
or
aaa
aam
leave
xor
loopne
enter
pop
test
jo
ja
adc
dec
loop
push
xchg
inc
or
fsts
xchg
test
ja
ret
and
cmp
or
imul
aaa
aaa
and
popf
test
cmp
push
mov
pop
push
scas
test
inc
lods
xchg
inc
jnp
fmuls
rol
mov
scas
ds
lock
je
push
in
jle
pop
jecxz
in
into
or
push
mov
mov
fisubrl
fisttpl
gs
into
mov
loope
dec
movsl
pop
mov
es
aaa
push
lods
sbb
mov
cmpsb
pop
mov
inc
aaa
in
mov
outsb
dec
dec
adc
push
fldl
mov
sbb
movsb
push
fstps
mov
ja
mov
jne
std
cmpsb
out
mov
addr16
aas
test
icebp
imul
hlt
or
aam
or
ret
repz
inc
orb
stos
test
pop
push
stc
inc
scas
imul
dec
and
inc
push
pop
adc
cwtl
aad
addr16
or
push
mov
std
mov
add
push
adc
xchg
cmp
decl
cmp
push
xor
sti
xchg
jo
or
insl
add
xchg
mov
inc
imul
imul
rcrl
test
dec
mov
arpl
add
repnz
outsb
sbb
push
dec
pop
add
repz
sbb
mov
lret
stc
inc
mov
xor
adc
xor
adc
lods
sbb
mov
add
pop
mov
mov
lea
inc
push
ret
insl
stc
addr16
outsl
or
in
mov
cli
xchg
pop
xor
stos
je
mov
adc
das
adc
mov
outsb
loope
cld
cmc
jno
sbbl
icebp
sub
mov
les
dec
cmpsl
in
loopne
lds
lea
pop
push
icebp
mov
cmc
out
cmp
daa
fidivl
jg
pop
and
in
lods
mov
sub
ret
mov
add
sbb
jnp
mov
fdivrl
in
cmp
adc
push
push
pop
shlb
cmp
or
lahf
movsb
add
xlat
xor
rclb
cmp
lods
popf
mov
pop
and
mov
xchg
je
fs
jno
jmp
or
mov
in
shr
jle
lock
into
mov
lahf
movsb
add
popl
enter
aad
aas
cmpb
in
sbbl
mov
push
int
push
outsb
lret
out
ja
cli
fnstcw
nop
stc
inc
shlb
jecxz
das
and
push
jmp
lods
cld
nop
fxch
sbb
dec
inc
mov
and
les
int3
xor
sbb
cmp
test
ljmp
add
cmp
hlt
sub
sbb
pop
pop
jnp
lods
jnp
sub
popa
into
sar
push
stos
jb
and
xchg
in
jg
adcl
test
cmp
mov
pop
shll
add
addr16
sbbb
mov
in
mov
pop
push
outsb
dec
adc
je
test
lock
pop
mov
jb
jne
pop
fisttps
testl
cmp
inc
pop
hlt
dec
sahf
scas
test
dec
aaa
popa
rclb
mov
jo
jp
enter
cs
mov
mov
xchg
adc
arpl
xor
push
push
adc
and
sbb
leave
sbb
xchg
mov
rolb
inc
mov
fisubrl
xchg
mov
cmpsl
out
lea
xchg
pop
lods
cmpb
pop
jge,pt
dec
dec
or
mov
loopne
jo
pop
sbb
and
xchg
sahf
mov
mov
jl
sbb
repnz
lcall
into
fisubrs
add
bsr
call
pop
sub
sbb
mov
jecxz
push
fldl
in
in
or
popa
inc
or
push
les
push
dec
je
mov
adc
in
mov
stos
mov
mov
movsl
dec
into
pushf
and
sbb
xchg
jg
sub
mov
ss
test
push
or
dec
add
sbb
sbb
stos
fsubl
add
pop
add
jne
out
imul
xchg
pop
rcll
jae
push
fists
sub
mov
xchg
sbb
je
arpl
loope
addr16
lret
out
cmpsb
in
imul
xchg
sar
mov
dec
loop
out
or
sub
aaa
push
ja
and
mov
adc
ret
lea
rorl
mov
mov
stc
push
xchg
out
mov
clc
lret
popf
loope
aad
inc
fstp
dec
in
bswap
out
adcl
loopne
ljmp
test
into
cmp
sub
pop
xor
aas
call
and
push
pop
lods
dec
int
mov
lods
sbb
stc
push
jg
add
jl
cli
and
mov
jge
lcall
shlb
dec
imul
mov
ss
sbb
das
ds
js
cmp
getsec
push
adc
push
push
dec
add
mov
mov
shrb
scas
adc
in
jns
or
or
dec
lret
mov
lcall
subl
xchg
mov
push
push
jle
adc
in
sbb
jle
lods
daa
adc
repz
dec
loopne
xchg
cs
xchg
mov
fiadds
popf
jmp
lds
fdivrl
lods
aas
dec
ds
cmp
mov
cwtl
cmp
adc
bound
es
movsb
xor
mov
and
popf
mov
push
shlb
dec
sub
cwtl
fs
or
sub
repnz
sbb
xchg
decl
sub
sbbl
sub
fiadds
roll
mov
icebp
repnz
adc
fisubrl
mov
adc
pop
out
mov
cmp
rcl
out
mov
lock
movsl
ret
sub
das
pop
pop
push
jno
jnp
stos
mov
jle
xchg
xorps
in
fbld
mov
xchg
xchg
pop
sub
fistpl
push
loopne
jbe
mov
in
xchg
push
test
or
fwait
adc
out
mov
xorb
mov
pop
ret
sbb
mov
add
xchg
cwtl
into
pop
movsl
mov
dec
jle
es
mov
fmull
inc
iret
jo
cmpsl
inc
jns
stc
popa
add
xchg
scas
std
icebp
ja
adc
jge
hlt
mov
jbe
imul
jae
adc
adc
mov
ret
cli
and
idivl
adc
lea
pop
mov
ljmp
mov
sahf
dec
lcall
lods
mov
inc
imul
pop
imulb
jmp
mov
insb
xor
bndldx
sbb
push
fidivrl
aad
jo
cltd
ds
jmp
arpl
dec
xchg
lea
outsb
cmpsl
test
sub
cmp
xchg
inc
inc
cmpb
pop
adc
xchg
aaa
repnz
adc
bound
gs
cs
fucomp
out
and
stos
push
sbb
negl
cwtl
popa
push
pop
mov
lods
push
push
lea
rorb
push
dec
ljmp
fcompl
pusha
xchg
xchg
and
movd
pop
xorb
orl
fwait
push
mov
nop
in
ja
or
faddp
out
mov
xchg
add
out
mov
dec
xchg
xchg
pushf
ffreep
push
ljmp
cltd
je
scas
les
sub
hlt
cld
stos
sahf
pushf
mov
aad
fs
insl
lcall
inc
xlat
in
add
out
lret
pop
dec
and
push
loopne
cld
in
pusha
imul
push
js,pt
jl
push
pop
and
ja
fwait
cmp
cmpsb
cld
aad
xor
add
test
push
dec
add
je
pop
cld
in
sbb
lret
addr16
jne
sti
aas
pop
insb
dec
out
mov
cmpsl
int3
dec
adc
mov
lock
jp
pop
dec
cli
mov
shl
loop
inc
test
cli
out
lret
push
das
sti
jge
mov
ljmp
mov
inc
mov
dec
push
sti
js
pop
inc
add
jmp
dec
jbe
dec
xor
lahf
inc
sbb
add
adc
mov
dec
push
insl
cmpsb
and
jg
js
pop
rcrb
mov
ret
fildll
lods
lds
push
xchg
popf
ja
push
addb
outsb
out
cmp
loopne
xor
stos
jne
fdivs
aad
push
shlb
add
cmpsl
sub
lret
xchg
aam
adc
jae
xchg
jbe
cmp
adc
clc
dec
lock
adc
stc
pop
push
scas
adc
cltd
jle
leave
adc
cmp
pusha
imulb
scas
sbb
nop
call
mov
and
push
xchg
pusha
xchg
sub
push
and
mov
adc
add
addb
mov
ds
xor
xchg
int
xlat
aad
cli
mov
push
mov
push
aaa
push
push
or
test
mov
cmpsl
push
shl
add
push
in
test
xchg
aaa
das
xchg
pop
in
mov
sti
insb
clc
inc
into
pop
jns
push
jp
mov
ja
pop
dec
lea
call
sbb
jo
mov
js
stos
sahf
stc
mov
xlat
jne
testl
in
or
adcl
shrd
sub
ret
movsb
arpl
scas
test
mov
loope
icebp
dec
loop
lods
jp
gs
add
test
adc
lods
or
adc
rcl
scas
xchg
cli
xchg
push
negb
icebp
sbb
lea
out
jno
iret
adc
sbb
push
xchg
gs
mov
arpl
call
es
scas
lret
mov
push
xor
add
mov
enter
cmp
cld
insb
into
adc
mov
hlt
cmp
xor
ficomps
ljmp
xchg
adc
dec
cli
lcall
mov
xchg
xchg
and
or
out
push
sub
jnp
addr16
fisubs
lret
cld
mov
fwait
mov
sub
add
popf
mov
sub
int3
mov
adc
sub
mov
pand
xchg
popa
xor
xchg
cs
lds
add
add
int
or
mov
xor
sub
ss
movsb
sarb
and
stos
and
pop
jle
in
adc
xchg
pop
adc
scas
test
insl
add
lods
jg
cmp
cmpsl
movsb
jne
push
das
xor
mov
lret
hlt
fwait
imul
xchg
test
cmp
outsl
repnz
or
orb
pop
ljmp
push
rorb
daa
pop
adcb
mov
in
and
inc
outsl
rcll
insl
loope
insl
fsubrs
loopne
and
loope
add
or
xor
test
xor
gs
and
sbb
pushf
loopne
push
out
cltd
movsl
xor
xchg
sbb
cs
pop
mov
rcrb
out
mov
pop
push
jg
mov
scas
mov
fcomps
cmc
mov
sub
push
push
fnstenv
mov
or
and
jns
lret
or
mov
xchg
push
cmp
test
adc
push
inc
push
sbb
sbb
jo
testb
sahf
inc
push
fincstp
or
mov
test
jne
into
mov
dec
push
sbb
out
adc
add
jns
ficompl
jnp
jl
jl
addl
in
push
or
or
push
mov
movsb
xor
std
push
out
inc
fwait
jecxz
dec
pusha
inc
pop
ss
sub
and
vpaddusw
pop
or
sub
or
data16
call
mov
enter
sbb
mov
mov
cmp
lcall
xchg
test
fistps
push
jnp
gs
sbb
sub
lahf
ljmp
push
popf
push
shl
add
inc
dec
dec
in
xor
in
jno
lret
test
mov
dec
std
jl
bound
test
sbb
xchg
nop
scas
arpl
stos
mov
mov
je
sbb
fdivr
xor
sub
or
repz
xchg
add
mull
and
mov
and
pop
inc
stos
addr16
jnp
cmc
lods
movhps
push
mov
jmp
rorl
inc
out
xor
enter
pop
xor
in
inc
scas
cmp
mov
ss
push
int
sub
fwait
adc
mov
lds
mov
loopne
cmpsb
push
or
mov
add
push
dec
jmp
mov
aaa
adc
mov
loopne
mov
test
xchg
ss
jno
push
sbb
cmp
sbb
shrl
shr
test
das
inc
mov
cmp
xchg
mov
sub
push
mov
pop
imull
jne
movsb
outsl
into
ja
and
push
cmp
dec
mov
push
into
stc
out
mov
xchg
sbb
mov
jo
mov
inc
cmp
lods
cld
imul
pop
jae
fxsave
adc
ffree
sbb
pushf
sub
fcmove
mov
mov
mov
addr16
sbb
sub
jb
mov
nop
data16
mov
lret
stc
adc
mov
or
cmp
mov
out
push
and
int3
pop
imull
sub
xorl
aaa
or
adc
aad
mov
repz
stos
arpl
pop
pop
push
sub
adc
ss
or
mov
jae
pop
mov
jne
mov
xchg
push
cmp
cmc
in
stos
pusha
pop
cmpl
xor
int3
icebp
ret
movsl
pop
xchg
adc
jg
jns
xor
xchg
les
sbbl
xchg
jl
sub
adc
or
adc
xor
jmp
sbb
shll
sub
mov
jp
std
cmp
xor
dec
lea
lds
call
aad
mov
imul
mov
mov
mov
inc
rolb
xor
or
mov
gs
imul
push
jg
lods
push
add
jl
xorb
mov
jl
mov
or
shll
mov
sbb
lcall
sub
pop
fadds
ljmp
cmpsb
or
pop
xor
mov
cmp
orl
xchg
xor
mov
inc
test
scas
push
jno
xor
jnp
mov
sub
jb
ss
fdivrl
sub
pop
in
lds
int3
stos
movsl
jmp
das
sbb
test
dec
pop
mov
mov
jnp
mov
call
xchg
test
sbb
push
cmp
cmpsb
jb
xorb
xchg
add
xchg
addr16
adc
cmp
aam
mov
push
notb
mov
adc
insb
add
subb
aad
inc
jmp
cmpsb
dec
lcall
fistpll
jp
cmpsl
and
inc
les
enter
cwtl
lods
xchg
jne
arpl
call
push
push
sarl
mov
jb
jmp
out
outsb
inc
mov
sub
push
out
adc
fbld
xor
shrl
jbe
push
lock
jne
dec
js
and
fildl
loop
lods
adc
pop
dec
jl
push
cwtl
adc
and
and
add
adc
mov
pushf
add
lock
mov
sti
sub
jmp
and
jbe
cmp
roll
lret
push
and
scas
movsb
out
push
mov
inc
or
pop
sbb
jo
sbb
dec
pop
sub
sarl
push
mov
dec
adc
lret
sti
in
stos
test
or
pop
sub
dec
xchg
pusha
lods
cs
sbb
movsb
xchg
sahf
hlt
roll
mov
das
cmp
fnstsw
aam
mov
in
dec
mov
jo
call
push
mov
dec
movsl
aam
cmpb
or
int
movsl
in
push
scas
sub
rorl
xor
jmp
out
push
jo
push
lret
loopne
cmc
xchg
mov
mov
jp
inc
std
int
sbb
cmp
jge
cmpsb
mov
jp
xor
or
dec
popa
ret
push
aam
jne
dec
mov
or
jae
jno
and
sub
test
ret
lret
xor
xchg
pop
lret
cmp
fldenv
incl
or
push
jmp
adc
mov
adc
lods
dec
fcomi
loope
dec
mov
add
mov
jl
adcl
gs
ljmp
cmp
hlt
loopne
jmp
ds
jns
add
xor
outsl
or
xchg
dec
lods
sub
pop
pop
aam
pop
fidivrs
aaa
ror
xor
jge
fs
cmc
pop
fdivr
xchg
adc
andl
xchg
dec
ret
addl
pop
push
add
inc
or
sub
xchg
shr
mov
adc
lcall
xlat
fisubs
loop
fstpl
pop
stos
xchg
mov
nop
ret
xor
cli
xor
sahf
lret
flds
insb
mov
fidivl
orl
int3
inc
out
mov
mov
imull
loope
jne
jo
incl
les
cld
dec
test
ss
inc
jmp
cmp
dec
clc
jnp
xchg
cmp
cmp
ds
out
in
push
test
or
jmp
xchg
xchg
xchg
sbb
jb
jns
lret
push
adc
sub
daa
iret
adc
dec
xor
sarl
xor
popa
mov
inc
sbb
push
lahf
xor
aas
lock
add
pop
xchg
push
xorb
dec
aas
pushf
aad
cltd
loop
scas
lret
xchg
repz
mov
aaa
jecxz
fstl
stos
pop
inc
in
push
dec
pop
sahf
nop
xor
cmp
popf
clc
inc
dec
xchg
sbb
ss
cmp
inc
lcall
in
pushf
jne
dec
daa
pop
scas
sub
dec
jne
inc
push
cmpsb
int
push
out
mov
ljmp
xchg
mov
pop
adc
add
movsl
push
insl
stos
mov
mov
jg
sbb
ret
andl
repz
and
mov
push
ss
adc
jne
jle
aaa
sbb
fildll
adc
cmp
ret
jae
inc
fidivl
icebp
sub
sbb
cmp
jg
cmpsb
add
fldt
sub
jge
xor
xchg
xchg
xor
insb
inc
cmpsl
fsubs
pusha
xchg
jae
ret
fmulp
push
cwtl
mov
adc
ret
int
or
jge,pt
in
sub
std
movsb
push
cmp
add
incb
jne
jmp
mov
xchg
sub
out
jnp
outsb
adc
addr16
inc
in
sub
shll
or
arpl
push
js
test
inc
mov
dec
dec
aad
mov
data16
cmpsl
int
pop
cmp
jg
and
loop
mov
inc
jns
mov
pusha
fnstsw
mov
fcmovu
or
sub
test
sarb
adc
lret
pop
ja
push
mov
enter
inc
leave
fisubrl
lock
push
push
out
sbb
cmpl
pop
movsl
roll
outsb
xor
es
js
mov
push
insl
and
imul
xchg
lds
jne
and
xor
mov
lea
mov
mov
pop
clc
xchg
cmpsl
and
in
cmp
clc
sbb
fisttps
sub
mov
adc
cli
out
inc
adc
mov
cltd
adc
dec
xchg
and
pop
cmp
jp
mov
push
push
push
sub
repz
jae
loopne
inc
and
push
aas
or
xchg
ss
jo
sub
dec
xchg
nop
jg
pop
xor
repz
lea
movsl
loop
loop
arpl
adc
and
fidivrl
es
mov
pop
fisubrs
repnz
cmp
mov
mov
jp
adc
test
je
ds
jecxz
gs
fwait
in
push
imul
pop
in
scas
loope
add
stos
fs
in
mov
jne
push
mov
sub
pop
out
out
movq
pop
mov
or
xchg
cltd
xchg
mov
jge
sahf
pop
insb
sub
cwtl
lcall
inc
inc
bound
mov
sub
mov
push
loop
dec
pop
mov
mov
mov
test
notb
xchg
fsts
cli
adc
cmp
mov
lock
outsl
shrb
pushf
dec
and
sub
test
in
xchg
dec
push
ret
sti
jecxz
outsb
mov
sub
pop
mov
mov
inc
cli
cmp
jnp
das
pop
or
shrl
mov
add
stos
sbb
pop
sbb
xor
xchg
test
shll
cmp
daa
ficompl
mov
lea
insb
dec
lahf
testb
sub
jns
ficompl
popf
sub
std
cmpxchg
mov
and
andl
in
aam
push
int
mov
lret
fdivs
cmp
cmp
push
int
cmpsb
fcmovbe
xchg
add
in
add
stc
in
iret
nop
lods
out
shlb
loop
inc
xchg
pop
sbb
fs
push
jns
sbb
ret
cmp
cmp
or
int
push
mov
lds
xchg
insl
test
adc
push
mov
pop
cwtl
add
out
xchg
das
pop
leave
out
in
push
fwait
mov
or
or
test
pop
add
and
imul
decb
cmp
and
xchg
add
jno
stos
cs
ret
div
adc
mov
xchg
mov
lds
in
cltd
cmpsl
mov
jo
push
xlat
aam
push
aaa
call
adc
das
push
clc
movl
ret
lcall
das
cmp
cmp
pop
xchg
int
in
mov
mov
mov
leave
dec
ja
jecxz
mov
neg
out
cmp
xor
ss
mov
jno
add
cmpb
ss
imul
ja
jne
jb
in
xchg
mov
cli
jmp
mulb
out
in
movsb
mov
insb
and
sbb
ret
and
push
add
ret
inc
jmp
sahf
bound
loop
jmp
test
ret
add
add
sbb
fwait
inc
push
cmc
pop
lahf
xchg
or
jno
and
icebp
pusha
adcb
mov
add
ds
mov
add
icebp
sbb
mov
or
stos
push
or
jge
jbe
icebp
rcr
adc
sub
sbb
inc
sbb
in
xchg
cmp
push
xor
imul
ret
icebp
pusha
scas
cs
test
pop
inc
lahf
add
enter
inc
pop
dec
inc
sub
stc
outsb
dec
or
aaa
sub
mov
mov
pop
ss
loopne
fs
cmc
das
jne
aam
sbb
add
and
mov
aad
jp
lock
outsb
dec
out
add
mov
pop
add
test
rorb
xor
pop
decl
inc
push
mov
mov
jecxz
fildll
nop
lret
mov
addr16
popa
ja,pt
mov
insb
mov
test
sbb
mov
loopew
int
fwait
stos
insb
mov
xor
lods
lea
jmp
lods
ret
aas
int3
jo
in
mov
sahf
mov
mov
lock
jno
out
rcrl
fidivs
push
test
arpl
xchg
inc
adc
sbb
sbb
push
popa
mov
push
mulb
ret
inc
enter
mov
add
stc
imul
adc
test
lock
pop
inc
and
ficoms
out
sub
fnstsw
in
push
mov
jb
add
pop
jle
sbb
insb
movsb
add
inc
push
jl
fadd
dec
repnz
sub
pop
into
pop
mov
fs
mov
mov
test
mov
int
xor
jns
lcall
adc
push
js
pop
jbe
fcompl
mov
ljmp
inc
jns
add
xor
adc
mov
mov
mov
pushf
shrl
imul
push
test
inc
es
das
nop
js
mov
jb
xchg
and
sbb
icebp
aad
pop
xor
add
pop
mul
sub
adc
sub
fldcw
loopne
sub
pop
pop
xor
xlat
inc
add
sbb
and
lcall
scas
sub
pop
jno
fisubl
lahf
jae
mov
mov
adc
mov
scas
stc
dec
jb
adc
fs
int3
push
lods
pop
xchg
sbb
out
jnp
and
push
insl
mov
and
pop
push
mov
jae
mov
imul
lcall
xchg
jbe
inc
sbb
mov
inc
scas
shll
mov
dec
addr16
shlb
adc
pop
adc
jl
gs
repnz
or
jns
adc
pop
inc
shrb
mov
outsb
cmc
mov
fldt
pop
cmp
sbb
xchg
mov
jae
adc
push
test
pop
rclb
lcall
jne
mov
iret
inc
decb
xchg
loope
icebp
jg
adcb
int
fists
popa
out
dec
and
mov
ljmp
adc
and
fnsave
and
dec
mov
xor
push
repz
pop
imul
roll
sahf
and
cwtl
xlat
in
push
pop
jmp
int
out
or
bound
lock
mov
call
test
ss
inc
pop
divl
mov
jp
mov
sub
pop
test
pop
jl
sub
jg
adc
mov
test
pop
mov
aas
inc
and
data16
jb
adc
iret
jge
cmpsl
fs
inc
in
mov
adcb
imul
adc
repz
and
fdivrs
sub
flds
lds
cwtl
or
int3
inc
and
inc
popw
mov
jo
jns
or
xchg
cmp
xchg
or
sub
insb
push
sbb
push
test
adc
ffree
cmpl
push
xor
ja
cltd
jmp
and
or
dec
push
fbstp
outsb
xor
jns
jno
ljmp
js
repz
dec
outsb
jb
cmp
cmpsl
push
fidivs
cmp
cwtl
pop
loop
mov
mov
loopew
add
inc
push
sbb
fistpll
sarl
inc
in
xchg
cmovp
insb
loopne
stos
lods
xchg
jl,pn
mov
mov
imul
scas
iret
mov
in
pop
test
or
sbb
xor
stos
test
test
pop
movsb
shll
lahf
or
push
mov
jmp
add
or
mov
pop
fwait
mov
cmc
jno
jbe
or
xchg
aam
xchg
adc
test
pop
mov
subb
outsb
xchg
push
popl
xchg
xchg
jmp
test
sbb
lahf
cld
sub
mov
addr16
je
lcall
dec
out
std
mov
out
add
movsb
sbb
push
mov
pop
push
jbe
xor
dec
dec
into
mov
or
jmp
xchg
cltd
ret
or
or
nop
das
lds
clc
std
nop
imul
inc
icebp
fdivrs
fnsave
sub
es
cld
mov
xchg
imull
xchg
les
sub
lahf
fisttpll
pop
pop
mov
data16
mov
xchg
and
lods
je
xchg
inc
stc
cltd
pop
jecxz
mov
sub
lret
mov
pop
dec
adc
scas
sbb
xor
ret
adc
addr16
inc
pushf
xor
andl
int
jo
push
aaa
dec
in
xor
inc
pop
lds
sti
addr16
or
call
int
aaa
aas
fidivrl
pushl
aaa
and
mov
arpl
xchg
aas
ss
aad
pop
jae
in
pop
push
xchg
adc
dec
mov
mov
sti
xlat
outsb
popa
mov
sti
repz
xor
gs
cwtl
fnstenv
push
sti
sbb
pushf
or
sub
jg
pop
dec
mov
fcoml
arpl
mov
push
ds
fists
fs
push
flds
fildl
out
sbb
add
lock
jle
jl
xor
jns
mov
push
sub
in
cmp
mov
out
mov
clc
dec
push
icebp
adc
aam
inc
jb,pt
cmp
sbb
jecxz
out
inc
fadds
fbld
arpl
fiaddl
out
xlat
pop
cltd
mov
movsb
jns
and
and
cmc
add
and
fstl
lahf
jge
jae
insb
leave
rcrb
jle
xor
lret
dec
mov
jns
sub
jbe
in
daa
jge
or
jne
addr16
cltd
icebp
ja
pop
dec
and
mov
cmp
cmp
mov
push
mov
sub
sti
inc
push
aas
dec
jbe
sbb
addb
xor
push
xchg
int
outsl
into
add
adc
add
mov
ffree
mov
mov
pop
or
push
lret
test
lods
stos
xor
push
sbb
cli
stos
cmc
in
stc
push
cmp
das
in
insb
mov
xor
jecxz
add
cwtl
mov
sbb
dec
jl
fldenv
xchg
sbb
popa
mov
out
sti
out
fld
loop
xchg
push
adc
daa
xchg
lar
pop
fucom
test
mov
mov
mov
adc
pop
pusha
and
or
jge
sbb
jl
sbb
js
dec
add
dec
mov
inc
aaa
push
mov
fwait
aaa
pop
stc
popf
outsl
out
mov
jb
mov
pop
fcom
and
js
inc
add
mov
insb
data16
and
movl
xor
inc
loopne
lds
sub
scas
and
mov
imul
mov
cs
sarl
pusha
inc
lods
push
sbb
cmpb
add
xchg
inc
into
inc
pop
mov
out
pop
add
lcall
call
ss
mov
fwait
mov
lret
into
negb
inc
sbb
out
repz
lret
pop
push
add
push
aad
sub
sbb
jle
mov
enter
std
outsb
test
xor
mov
push
sahf
fisubrs
inc
movsl
or
jmp
xchg
pop
icebp
aad
data16
mov
mov
inc
jl
fwait
lds
cmp
imul
dec
pushl
xor
mov
movsb
adc
ficompl
inc
inc
add
lock
and
or
jecxz
lods
push
lods
xor
stos
xchg
sbb
sub
lods
jbe
dec
xchg
pop
jp
mov
adc
add
inc
out
pop
sti
mov
out
addr16
lea
jo
pushf
arpl
pop
orb
push
test
cli
pop
daa
inc
mov
movb
sub
push
icebp
dec
ror
cli
leave
adc
cmpsb
mov
mov
call
and
mov
adc
enter
orl
adc
mov
imul
push
out
pushf
ja
stos
or
test
xor
scas
dec
imul
mov
out
xchg
lret
sbbb
cmpsb
add
sti
std
fimull
and
cs
inc
sub
push
pop
jmp
ror
mov
mov
cmp
xlat
jns
lahf
out
test
loopne
movsl
js
fdivrp
push
dec
insb
das
faddp
call
xchg
fadds
and
test
fnsave
lea
xor
jns
adc
mov
sbb
mov
xchg
add
mov
mov
sub
bound
imul
jns
lret
inc
xchg
lods
mov
lds
cmp
notl
mov
mov
adc
xor
test
adc
mov
int
mov
pop
mov
inc
sub
push
xlat
lds
and
inc
imul
cwtl
push
lock
shlb
mov
popa
shrb
cmc
aas
pop
mov
xlat
sub
push
mov
call
inc
sbb
repnz
jge
mov
sub
rorl
push
push
lea
mov
sbb
int
xor
sarl
add
in
cli
addr16
jae
inc
ljmp
and
and
gs
sub
adc
mov
xor
lods
xor
mov
and
jge
pop
fdivr
in
and
divl
test
ljmp
inc
inc
ret
mov
int
mov
popa
xor
adc
js
dec
mov
in
xchg
pusha
mov
fsubl
xchg
or
insb
pushf
jle
dec
fucomi
sbb
inc
iret
mov
int
enter
jg
and
add
add
push
xor
push
inc
and
jle
push
cwtl
pop
loopne
and
sbb
jb
mov
cs
push
sti
mov
sbb
ljmp
cmp
loope
cmp
pushf
in
arpl
xchg
dec
aaa
xchg
jp
scas
mov
test
pusha
mov
lcall
cmp
jo
movl
xchg
mov
sbb
inc
lret
pop
add
fisubrs
mov
add
jb
mov
inc
xchg
adc
bound
cwtl
dec
lods
cmpsb
arpl
push
fwait
mov
mov
and
dec
repz
xor
xchg
shll
sub
pop
popl
sub
scas
pop
mov
pusha
pop
nop
js
rcr
out
mov
sahf
sahf
arpl
nop
sbb
pop
jb
jae
pop
arpl
push
jb
mov
gs
rolw
mov
cmp
nopl
jge
out
push
movsb
repz
push
dec
dec
imul
repnz
xchg
into
push
inc
or
dec
outsl
cmp
dec
fsub
cmp
cwtl
in
dec
repz
into
mov
cmp
or
lock
add
or
aam
xor
push
or
bound
cmpsl
push
and
shl
data16
pop
pop
mov
shrb
dec
sbb
loop
rol
cwtl
faddl
jl
cmc
outsb
mull
test
and
dec
pop
sahf
cmp
jmp
dec
jb
pop
or
fs
fldenv
cs
fdivrs
inc
add
mov
inc
test
int3
scas
xchg
ljmp
addr16
scas
leave
in
cmp
pop
jg
stos
je
and
mov
jmp
ljmp
mov
hlt
out
cmpb
pop
jne
imul
dec
les
je
hlt
cmc
data16
mov
aaa
enter
fcomps
movsb
or
call
and
sbb
push
xlat
pop
sbb
in
jge
xchg
pop
jo
push
mov
mov
mov
inc
or
xchg
pop
mov
sbb
mov
jp
pushf
or
add
cli
les
push
mov
mov
into
es
inc
xchg
sub
ss
mov
push
adc
xchg
and
test
xor
jnp
insb
add
aas
inc
mov
icebp
ljmp
in
stc
lret
mov
fmulp
dec
xor
adc
sbb
cmpl
mov
sub
push
cmpsl
dec
popa
adc
movsl
je
jb
rcrl
js
pop
mov
and
ss
mov
rcll
cmp
jne
dec
scas
inc
mov
add
ja
fistps
adc
out
xor
push
sahf
std
and
pop
jne
mov
addr16
mov
xor
stc
mov
imull
lahf
imull
test
leave
add
shl
popa
add
sbb
adc
mov
push
push
adc
insb
popa
fldt
call
adc
jle
das
addl
test
mov
jne
pop
pushf
and
mov
data16
and
mov
shr
call
fisttpll
or
pop
mov
bound
inc
add
push
cmc
dec
mov
jns
js
ss
jno
mov
aaa
mov
adc
xor
outsb
daa
ljmp
stos
inc
mov
push
nop
lahf
xchg
ret
mov
cltd
xchg
lret
sti
add
inc
fmull
outsb
xor
mov
xor
js
movsb
dec
xor
mov
into
fsub
adc
sahf
or
mov
push
mov
cmc
and
jb
repz
sub
xchg
test
cwtl
add
loop
out
repz
fmuls
mov
push
decb
leave
sahf
in
stc
dec
stc
fwait
bound
ret
divl
mov
subb
out
rolb
inc
jno
dec
push
xor
xchg
outsl
aaa
push
or
in
aas
inc
loop
or
cmp
push
jno
test
jg
mov
sbb
xlat
ja
fwait
cmp
push
sub
xchg
leave
and
xchg
inc
sub
outsb
ret
adc
xchg
loope
xor
add
and
dec
out
dec
sbb
add
xorb
arpl
iret
in
out
jae
push
jae
sub
mov
lods
push
mov
jp
lret
sbb
cwtl
outsl
push
out
jae
jl
lods
inc
pop
shl
add
iret
inc
pop
subl
inc
push
leave
out
xchg
cmc
test
add
inc
sbb
js
xchg
addr16
shlb
imul
adc
xchg
xchg
fadds
int
push
xchg
es
scas
aaa
xchg
jno
clc
push
repnz
cld
adc
or
cwtl
imul
mov
xor
mov
xchg
sahf
mov
add
lods
shrb
mov
sub
mov
add
clc
jnp
jae
test
enter
mov
adc
inc
mov
pop
movsb
mov
push
das
push
jecxz
scas
cmp
inc
mov
in
jl
cltd
sbb
jmp
lods
push
dec
into
jb
xchg
push
push
mov
je
ficoml
dec
jnp
jns
arpl
mov
pop
in
add
ret
or
sub
arpl
xlat
inc
push
or
mov
mov
dec
jne
sub
nop
and
mov
lret
mov
cwtl
movsb
inc
clc
pusha
jae
shr
out
push
dec
sub
jmpw
sbb
fs
stc
mov
xor
xor
mov
cwtl
lock
sbb
pop
mov
pop
add
arpl
mov
daa
pop
xchg
call
jno
mov
inc
push
jl
bound
dec
xor
ror
cmp
std
les
pop
gs
add
sub
mov
jne
push
sbb
aad
xchg
jg
ror
pusha
loope
test
pop
cmpsl
add
sbb
push
push
adc
js
cli
cmp
xlat
mov
mov
mov
jg
pop
stc
loop
or
popl
sub
jno
push
popa
pop
pushl
lock
lods
sub
inc
mov
pushf
pop
cld
push
and
fidivrs
loopne
aam
mov
icebp
sti
adc
imul
xor
sub
js
push
cmp
inc
clc
pop
cmp
mov
sbb
sbb
sub
outsb
dec
scas
push
xorb
test
jl
jae
into
pop
adc
cmp
inc
call
repnz
mov
ss
inc
push
mov
pop
xor
add
dec
push
jg,pn
imul
cmp
stos
cmpsl
in
test
sbb
dec
add
clc
mov
mov
lahf
rcl
jmp
xchg
cmc
cwtl
and
loope
stos
mov
out
daa
fwait
push
and
push
inc
inc
xor
cmc
roll
std
scas
pop
jl
push
stos
pop
hlt
subb
inc
mov
cmpsb
rclb
mov
jo
subb
sub
push
xlat
lcall
lods
push
mov
xchg
inc
bound
test
lahf
push
popa
inc
shrb
aad
mov
jle
mov
dec
xchg
xchg
xchg
pusha
push
repz
dec
pop
fsubrs
outsb
or
cltd
adc
push
cmp
mov
pop
adc
xor
lods
pop
inc
arpl
mov
xor
mov
push
out
shll
push
xchg
adc
nop
stc
push
jge
mov
data16
scas
mov
cmc
lea
fs
iret
push
jb
jo
or
xor
aas
pop
adc
bound
fs
jnp
dec
mov
mov
or
outsb
sbb
or
in
mov
mov
repnz
or
push
inc
ret
popa
push
int3
mov
jecxz
lret
pushf
dec
not
rcl
gs
cmp
das
imul
bts
lcall
in
pop
lret
orb
sbb
mov
sub
xchg
mov
int3
enter
imul
mov
aas
ret
jbe
fwait
push
add
fcmove
dec
loop
aam
cltd
mov
push
dec
imul
es
ret
pushf
ja
mov
cmp
xchg
cmp
mov
ret
mov
sub
mov
insb
outsb
jmp
mov
in
sub
mov
je
adc
movsl
std
push
test
mov
mov
movsb
rorb
fistpll
adc
js
adc
inc
push
int
jl
lcall
imul
mov
xchg
shlb
adc
xor
inc
mov
mov
repz
jae
push
adc
adc
lret
jmp
scas
test
rcrl
mov
jne
dec
inc
sbb
hlt
jmp
rcrb
dec
add
and
xchg
mov
mov
data16
aad
inc
icebp
ds
ret
int3
xor
aas
loop
out
cmp
rcrb
sbb
jne
cmp
cmp
gs
sbb
sub
adc
mov
dec
jae
pop
mov
aad
out
pushf
enter
lock
mov
mov
mov
ljmp
iret
orb
sbbb
push
std
push
xchg
mov
lea
int
xchg
xor
sbb
dec
shr
mov
push
sbb
xor
dec
jg
mov
mov
ja
nop
jne
outsb
outsb
hlt
out
imul
in
pop
xor
mov
call
mov
pushf
int
cmpsb
sarb
pop
shl
push
inc
inc
mov
test
iret
dec
pop
dec
out
clc
mov
dec
lret
mov
imul
enter
mov
jae
sbb
xor
rcl
xor
inc
pop
dec
in
jle
aaa
dec
jno
cld
jl
adc
arpl
lds
xor
mov
ss
jno
pop
into
int
rcll
add
mov
cmpb
pusha
inc
xor
cmp
sub
pop
movsl
mov
nop
shll
jmp
pop
cmp
xlat
mov
outsb
mov
arpl
cmpsb
pop
push
mov
int3
sbb
mov
fidivl
addb
push
fcmovne
jge
sbb
xor
xor
iret
ds
mov
ds
adc
jae
jnp
in
sbb
jmp
mov
enter
in
call
movaps
jle
push
push
fisttpll
sti
insb
jmp
jmp
cmpsb
pop
fisubl
lcall
or
jns
out
or
xchg
push
mov
fdivrl
sub
test
ja
pop
mov
leave
sbb
jnp
and
loop
test
in
inc
cmpsl
add
repz
mov
decl
popf
popf
mov
stc
movsb
mov
cmp
ret
or
adc
inc
dec
insb
add
les
dec
shl
add
jns
mov
jno
leave
add
mov
pop
and
cwtl
and
pusha
xchg
push
mov
push
gs
sbb
das
add
and
jne
jle
jp
xor
jo
cmpsl
push
and
cmpsl
and
pop
sub
pop
aaa
mov
xchg
in
or
adc
lods
xchg
ret
add
mov
and
into
sub
lea
add
leave
scas
mov
jb
ljmp
xchg
push
adc
mov
outsb
jne
ja
roll
aad
fcomip
sub
xor
and
fbstp
mov
mov
sub
leave
and
mov
and
xor
inc
cmpsb
dec
testb
filds
push
mov
scas
sbb
repnz
dec
xchg
sahf
lods
jg
adc
pop
cmp
nop
push
js
jne
jle
sbb
ror
sbbl
loopne
int3
insl
mov
mov
vmulps
sar
stc
shlb
in
jb
in
adc
pop
fcomps
inc
jg
outsb
sub
xor
sbb
fwait
rorb
add
inc
pop
pop
push
adc
pop
mov
dec
outsl
je
pusha
popf
fucomip
jae
loopne
mov
wrmsr
lret
add
imul
out
out
stos
pop
xlat
loope
adc
popa
sarl
pop
sarl
addr16
fldcw
popa
and
cltd
andb
popa
sub
aam
jo
jg
add
mov
insb
fprem
or
push
jae
stc
xor
das
cwtl
scas
iret
mov
jno
pop
in
pop
stos
aaa
mov
ja
mov
push
sti
xchg
out
outsl
cmpsb
adc
adc
xchg
je
push
pop
dec
xor
les
pop
jbe
add
sbb
lds
in
xorl
sub
jo
xor
data16
fsts
stc
enter
call
sarb
pop
mov
or
stc
call
and
popf
ja
mov
xchg
pop
sub
out
aam
xchg
pop
xchg
inc
fwait
das
jns
sub
into
dec
push
pop
or
sbb
xchg
mov
out
mov
jae
sub
cltd
xor
pop
and
cmp
fsubs
inc
and
and
mov
rcrb
in
pop
xchg
adc
stos
pop
xor
mov
addr16
dec
push
cwtl
adc
and
es
push
lret
stos
push
loope
in
sub
inc
movsl
data16
pop
in
cmp
xchg
cmp
ds
cmp
push
add
xor
sbb
xor
dec
stos
mov
cmp
sahf
dec
push
mov
xchg
es
mov
shrl
cmp
scas
out
or
inc
mov
data16
pop
aaa
and
ljmp
clc
push
sbb
add
add
pop
xchg
add
out
ljmp
or
dec
out
inc
mov
push
lock
ret
xor
push
xor
leave
and
adc
sub
shlb
js
sahf
sbb
mov
jecxz
pop
arpl
cmp
push
xor
xor
mov
insb
push
mov
jbe
or
clc
pop
aaa
jbe
aas
dec
leave
push
or
adc
dec
out
cmp
sbb
icebp
inc
add
or
ja
or
fldenv
xor
add
fcoml
jbe
pop
into
cmc
pop
iret
pop
push
xchg
mov
mov
sbb
mov
inc
jnp
sub
clc
sbb
add
dec
scas
test
pop
pop
inc
lods
lret
inc
push
test
mov
pop
xor
and
xchg
les
outsl
xchg
jno
and
mov
cltd
int3
sub
pop
orb
shrl
pushf
sbb
fcmovnu
adc
xor
pop
stc
fs
icebp
sbb
sub
dec
bound
pop
cmp
jge
jbe
shll
movsl
xor
inc
int3
jg
jnp
popa
or
jae
and
stos
loop
das
test
mov
lock
mov
xchg
mov
xor
sub
addr16
lods
imul
daa
pop
jbe
enter
outsl
popa
jns
test
fisttps
cmp
cs
mov
mov
aaa
test
push
mov
add
dec
pop
loopne
push
sbb
in
mov
imul
mov
loopne
mov
sbb
cs
dec
jge
cmp
add
dec
push
xlat
aam
fidivrs
inc
lods
push
jae
insl
push
xchg
push
je
push
mull
xchg
imul
shll
mov
test
push
inc
xchg
sbbl
call
jl
arpl
pop
insb
sub
stos
mov
comiss
shll
xor
ret
loopne
cmpsb
push
js
add
jmp
js
std
fldl
inc
pop
leave
ss
push
aam
pop
andb
sbb
movsb
hlt
pop
jne
sbb
push
add
and
cmp
icebp
rcll
subb
sti
xor
addb
push
and
pushf
adc
lea
lods
add
cmpsb
inc
xchg
loop
shr
dec
out
mov
shlb
sbb
clc
ja
sbb
mov
dec
inc
adc
adc
lahf
or
rcrb
jge
sub
loop
popa
xchg
fsubs
push
add
xor
rorb
mov
insb
loopne
push
into
xlat
inc
mov
loopne
inc
iret
je
adc
sti
scas
xor
dec
jp
jg
sub
mov
or
dec
and
inc
and
and
aas
mov
xchg
or
xchg
mov
sbb
pop
out
and
into
jge
fnstsw
mov
or
in
pop
scas
xlat
or
andb
mov
iret
pushf
das
push
aad
shll
test
jns
test
int3
rorb
aad
mov
xchg
nop
jno
mov
mov
and
or
jg
lock
pop
and
jno
and
mov
lea
ficompl
stos
lods
sub
jecxz
nop
repz
cmpl
test
dec
iret
rcrl
mov
mov
jno
jnp
fs
pop
jp
inc
pop
inc
scas
aas
mov
jecxz
call
cmpsb
xor
vhsubps
mov
insb
aaa
popa
push
int3
loopne
aam
sbb
sbb
adc
dec
in
mov
nop
fsubrl
imul
in
mov
jno
insl
mov
push
mov
mov
pop
in
js
cltd
test
fidivrs
add
push
xor
jb
test
addr16
mov
aad
insl
mov
or
lock
or
xor
out
inc
shl
icebp
jno
test
xchg
mov
inc
xor
push
dec
push
push
in
enter
stos
jno
push
xchg
cmpl
sbb
lods
dec
dec
lea
pushf
test
imul
jb
es
test
mov
ds
mov
add
or
setbe
dec
sub
fs
aam
jo
addr16
jo
in
enter
inc
rcrb
shrb
in
sub
orb
push
pop
adc
adc
sti
fcompl
je
fs
scas
sub
and
out
out
jl
mov
mov
js
addr16
push
xor
inc
jp
aad
pop
stc
xchg
in
cltd
sahf
sub
fstpt
sahf
or
jnp
mov
pop
add
pop
pop
setnp
mov
sbb
int3
bound
pop
sbb
lock
clc
xor
sbb
sub
xor
push
jne
inc
push
jmp
movd
int3
sub
aaa
sti
sbb
fwait
mov
call
sub
xor
pushf
xor
aad
mov
cli
rolb
mov
mov
std
dec
xchg
lret
cmp
push
adc
movsl
ljmp
out
lcall
mov
xchg
mov
mov
pop
cld
int3
ja
std
push
or
sub
mov
movsb
adc
fsubrp
and
pop
sbb
test
loopne
push
aam
clc
xor
jns
mov
data16
jle
and
mov
pop
fisubs
mov
decb
js
sub
lock
or
ljmp
test
or
xorb
rolb
cltd
pusha
icebp
sub
call
loop
pop
ret
jo
and
popf
pop
enter
stos
mov
adc
loopne
addb
inc
mov
xchg
pop
inc
in
pop
call
subb
cmp
jb
enter
dec
push
adc
pushl
adc
or
test
sub
lods
jno
jge
mov
push
mov
cmp
jl
bound
es
adc
test
mov
lret
lret
or
mov
mov
mov
mov
dec
sub
push
jne
ror
adc
lock
out
dec
daa
pop
and
mov
push
loop
scas
outsl
aad
cmp
sbb
sbb
addr16
out
and
push
outsl
cmc
sub
push
xor
inc
inc
leave
jo
jbe
dec
push
sbb
add
inc
xor
cli
es
sti
sbb
mov
sbb
arpl
cmpl
repnz
jns
dec
push
cld
mov
inc
sub
mov
icebp
sbb
mov
popf
scas
push
lahf
sbb
je
call
hlt
popf
pop
add
fdivrs
jo
and
mov
inc
and
incl
hlt
sar
sbb
add
jl
pop
aam
test
pop
inc
fsts
pop
or
aaa
dec
add
mov
pop
xchg
push
mov
lahf
ret
mov
lcall
xor
xor
lods
cli
adc
pop
pop
lods
in
sbb
mov
push
jecxz
imul
clc
or
cmpsl
mov
mov
lret
mov
outsb
adc
int3
mov
addb
lret
lea
push
and
iret
test
or
push
in
cmp
jbe
mov
cmp
push
cmp
leave
aad
dec
mov
test
or
push
das
movsb
pop
adc
mov
mov
fists
cmp
mov
jmp
imul
in
sbb
xor
push
cli
pop
in
call
sbb
popa
adc
sbb
ret
lret
sbb
jle
xchg
pop
cmp
shll
fwait
mov
cmc
sahf
psubw
sahf
inc
add
add
arpl
lret
mov
cld
lret
xchg
inc
cmp
and
or
iret
fwait
inc
xor
je
cmpsl
pop
inc
add
sub
jb
cmp
mov
clc
nop
orl
xchg
or
or
adc
incl
stos
cmp
stos
push
arpl
push
out
inc
imul
orb
cmpsl
mov
sbb
push
add
pop
sbb
adc
test
mov
sbb
cmp
fcomi
pop
scas
movsl
and
ds
sub
shlb
xor
pop
xchg
fisttpll
mov
mov
stc
xchg
stos
int3
cwtl
pop
daa
xor
sbb
pop
rolb
outsl
xchg
jbe
test
xor
mov
mov
insb
push
xchg
addr16
adc
jge
add
adc
cltd
in
sbb
xchg
dec
fbstp
push
cmp
mov
or
in
testl
sbb
fstps
dec
test
out
xchg
sbb
mov
stos
ljmp
xchg
rcll
mov
fisttps
or
sbb
repz
pop
mov
insl
mov
lods
mov
fwait
js
scas
dec
push
or
push
xchg
std
nop
loope
rclb
lahf
add
leave
push
ds
ds
aad
or
ficoml
icebp
jecxz
dec
and
clc
lret
stc
sbb
sub
cmp
dec
lcall
insb
orl
inc
les
inc
sub
out
ss
inc
mov
sbb
sbb
mov
xor
cmpsb
xlat
xor
xchg
sbb
push
gs
jns
sbb
data16
and
cltd
mov
push
popa
adc
stos
cs
pusha
and
jno
push
adc
fwait
lret
mov
fiaddl
sub
xchg
imul
add
cmp
out
push
decb
dec
sub
fisttpll
mov
jo
mov
mov
ret
insl
hlt
and
stc
sub
sub
mov
pushf
das
mov
out
jecxz
mul
mov
iret
lret
std
fcoml
pusha
mov
fdivs
cmpb
and
adc
push
pusha
and
mov
cmp
push
add
inc
jl
mov
dec
xchg
xchg
lods
arpl
movsb
adc
and
fst
push
mov
js
icebp
std
or
insl
mov
or
ja
pop
pop
xchg
in
add
mov
xchg
mov
push
and
cmp
sbb
push
mov
lds
fcoml
xor
sbbb
inc
repnz
or
lds
ret
add
mov
fmuls
and
sub
ljmp
push
mov
lcall
scas
fimull
rcrb
mov
jnp
mov
addr16
pop
mov
or
dec
xor
shlb
lock
xchg
pop
push
push
cmp
and
dec
mov
sub
aaa
ljmp
jns
mov
cmp
mov
jae
sub
adc
lods
jno
and
and
data16
cmp
mov
mov
push
inc
mov
mov
and
roll
in
testl
into
repz
sub
pushf
cmp
cwtl
and
jg
fidivs
inc
subl
cli
jl
aas
and
repnz
cmpl
test
xor
dec
or
icebp
lock
xor
add
xchg
jo
push
cmpsl
adc
loope
in
cmc
dec
stos
ret
lock
cwtl
fldlg2
bound
jno
loope
insl
out
mov
jle
icebp
fs
fisubs
push
imul
fiadds
dec
or
in
sbb
sarb
sbbb
inc
mov
dec
addr16
adc
test
dec
push
and
int3
push
ret
fstpt
cmpsl
xor
and
das
jmp
fistpl
cmp
ret
cmp
cmp
mov
mov
xchg
mov
mov
mov
and
clc
jge
mov
imul
xchg
icebp
je
lods
fisubs
lret
xor
xchg
fs
push
add
daa
jns
pop
inc
rcrl
inc
leave
fisubl
or
orb
pop
bound
stos
movsb
movsb
je
xchg
inc
jbe
sub
enter
orb
fs
dec
mov
xchg
cmp
les
mov
pusha
test
cmp
inc
int
mov
xor
pop
jbe
mov
inc
adcl
pop
mov
lds
test
addb
rcll
out
push
xchg
roll
outsl
add
push
stc
test
mov
dec
adc
push
mov
out
ficoml
xor
nop
mov
push
ret
mov
adc
push
and
es
movsb
jecxz
scas
push
push
and
pushf
xor
adcl
pop
cmp
jnp
cli
cmp
and
xchg
add
adc
leave
jmp
popf
cmp
ljmp
lds
outsl
and
jg
mov
repz
in
mov
dec
fwait
inc
pop
mov
push
dec
gs
push
out
pusha
mov
xlat
shlb
mov
out
bound
push
mov
bsr
xlat
xchg
arpl
nop
je
inc
mov
pop
mov
sub
cmp
inc
adcl
xor
push
add
mov
andl
xchg
xlat
cmpsl
test
mov
rorb
imul
jo
mov
inc
sub
adc
xor
aaa
loopne
fimuls
mov
pusha
push
test
cmp
add
mov
cmp
test
mov
scas
aaa
jb
push
jg
fwait
cmove
cld
or
sbb
adc
mov
push
shll
pushf
jnp
fcompl
and
je
xchg
xchg
and
fcomip
lret
clc
loop
jl
fistpll
shr
push
cmp
out
iret
shlb
fcoml
int3
sbb
dec
sbb
mov
adc
scas
sbb
imul
jne
push
pop
mov
and
leave
push
jns
pop
pop
jae
mov
in
push
cltd
xchg
mov
fdiv
movl
cmpsl
in
add
fnstsw
xchg
sub
lods
and
push
cmp
mov
test
mov
negl
push
shl
imul
fbstp
mov
pop
pop
sub
div
or
mov
mov
subl
jg
dec
in
in
pushf
cmp
pusha
mov
add
fcoms
sub
mov
aaa
sub
std
enter
loopne
sub
dec
test
mov
mov
pushf
adc
push
cmp
adc
add
aam
call
mov
out
test
xchg
in
pop
inc
adc
jmp
cwtl
jo
lahf
stc
sub
out
test
imul
xchg
adc
scas
inc
mov
cmpsl
into
aas
outsb
daa
sub
rcrl
stos
dec
jo
enter
or
pop
in
cli
adc
inc
out
popa
mov
push
pop
push
push
js
and
dec
repnz
ljmp
dec
cld
pop
pop
dec
repz
sub
mov
outsl
jmp
push
bound
inc
jae
and
push
popf
add
sub
std
push
sbb
xchg
stos
je
repnz
adc
add
out
xor
outsb
or
add
scas
lahf
push
cli
movsb
cmc
mov
sub
or
aaa
xor
xor
repz
movsl
sarb
fwait
cmpsl
shrl
cmp
cmpsl
pop
cmp
iret
pop
xchg
ljmp
dec
adc
pop
adc
push
mov
jecxz
pop
sub
mov
test
inc
loop
jp
xor
xchg
mov
iret
or
or
movl
cmpsb
push
in
inc
bound
in
inc
mov
fdivp
sub
xor
cli
sbbb
popa
cmp
add
adc
mov
cmp
shll
neg
lds
movsl
in
fdivrl
ficoml
mov
idivl
add
aaa
cmp
inc
and
jbe
mov
lds
inc
call
ret
xchg
mov
js
inc
ljmp
fidivrl
addb
adc
inc
xor
xchg
or
mov
mov
cwtl
out
repnz
sbb
out
or
push
mov
outsb
test
inc
das
sub
add
xor
in
stos
dec
fsts
inc
jge
add
pop
mov
data16
or
imul
enter
mov
mov
in
or
movsb
outsb
mov
stos
pop
cld
sti
dec
adc
xlat
lods
cmp
adc
cmp
xor
or
stc
ds
test
add
pushf
pushf
icebp
mov
sbb
xor
cmp
mov
xchg
in
inc
cld
or
dec
movsl
xchg
pop
xor
into
push
adc
jbe
fdiv
adc
dec
xchg
lds
adc
loope
jno
xor
jg
push
cld
xchg
cmp
stos
or
shl
and
adc
outsl
sub
xor
xchg
fptan
push
lretw
ucomiss
push
xor
test
into
jnp
pusha
mov
fs
sbb
or
shl
pop
mov
les
dec
mov
mov
dec
subl
jecxz
int
lret
ret
jbe
in
cmp
or
iret
push
cltd
insl
es
out
movsl
in
int
mov
mov
in
ja
mov
scas
inc
pusha
sub
in
das
push
dec
inc
lcall
insb
clc
or
loop
cld
and
push
fwait
mov
das
mov
sbb
out
test
sbb
insb
lret
leave
sti
insl
addb
add
in
faddl
cmp
repnz
add
sahf
push
movsb
lahf
rolb
cmp
push
dec
cmp
call
out
mov
lea
out
mov
pop
aas
ret
inc
sbb
aaa
out
jns
dec
scas
inc
out
jne
stos
cmp
fcom
fsts
pop
and
inc
push
pop
and
mov
aad
push
sarb
repnz
aam
in
mov
or
add
rol
xor
gs
ja
sbb
inc
push
xor
jbe
push
sti
cmp
cwtl
sub
fcmovbe
pop
mov
lcall
idivb
add
int3
js
stos
into
lods
jno
xor
or
sar
lcall
in
arpl
test
fstps
mov
es
xchg
jno
cmpsb
or
cmp
mov
iret
jmp
push
add
or
imul
pusha
dec
cmp
stc
pop
add
jg
fidivl
adcl
push
and
mulb
mov
lds
mov
jecxz
in
shl
adcb
push
imul
mov
subb
sub
mov
pop
hlt
nop
mov
into
sbb
mov
mov
cs
adc
mov
lret
lret
fdivrl
enter
push
sbb
lock
loopne
outsl
int3
inc
lahf
sti
fdivr
mov
cmp
push
lods
shrl
push
mov
in
stc
sub
js
mov
or
outsb
cli
sub
arpl
or
fstpt
loope
push
sub
lock
and
or
sahf
and
fidivs
andl
je
ss
dec
scas
adc
std
cmp
dec
dec
or
xor
pushf
setnp
pop
sub
xchg
xor
jp
out
stos
lods
in
jae
inc
cmp
loop
pop
push
dec
add
notl
lods
mov
inc
jl
sbb
jge
fdivrs
insl
nop
jno
add
sbb
lea
int
js
movsb
fildll
or
pop
dec
gs
push
arpl
cli
mov
mov
sbb
mov
or
aaa
push
xchg
jno
addb
jno
aaa
cli
mov
cmovs
mov
mov
inc
mov
insl
inc
pop
xchg
jb
cmp
xor
or
stos
adc
jmp
push
ret
sbb
stc
jnp
adc
sti
push
push
mov
rol
jge
repz
push
mov
xor
mov
cmp
xchg
mov
push
and
stos
mov
lret
adc
jo
je
mov
push
xchg
inc
icebp
fldt
sbb
xor
loope
xchg
and
push
push
adc
int
xchg
out
cmp
push
jno
push
les
std
clc
mov
push
inc
sbb
leave
inc
lods
leave
ficoms
in
mov
mov
sub
clc
add
int3
mov
jo
sbb
inc
mov
shrb
and
pop
into
or
pop
in
xor
sahf
hlt
fsubrl
scas
insl
idivl
mov
cli
fmuls
subl
pop
adc
mov
nop
mov
xchg
lods
mov
subl
or
sub
jbe
pop
xor
sub
sbb
cmp
jg
inc
out
xchg
cltd
out
push
out
stos
loope
ljmp
mov
lahf
or
dec
shrl
xor
bound
cmp
mov
dec
mov
sbb
aas
ret
pop
adc
movsb
aam
adc
sbb
dec
xchg
xorl
sub
mov
hlt
mov
push
sti
outsb
mov
mov
and
stos
in
add
imul
sbb
sahf
sub
iret
and
pop
inc
cs
dec
int3
mov
dec
ja
sbb
mov
loope
jle
pop
jle
fwait
cltd
loope
addr16
mov
pop
sti
or
adc
jo
xor
mov
cmp
and
cmpsl
cmpsl
mov
cltd
outsl
out
mov
inc
cld
mov
cmp
mov
jle
out
adc
lods
pop
mov
notl
test
sub
ss
xor
mov
in
push
lret
or
pop
lcall
inc
sti
clc
out
lcall
in
jge
ds
sbb
pop
and
je
mov
xlat
xchg
fs
sub
jecxz
int
in
xchg
dec
stc
pop
clc
and
icebp
jo
xchg
iret
fdivrp
lods
in
push
test
and
lds
js
push
out
jg
dec
jge
cmpsl
fs
cmp
pop
pusha
mov
mov
push
cmc
std
flds
xchg
push
popa
sub
outsb
sbb
adc
pop
xchg
cmp
mov
orb
mov
jns
push
mov
notb
xor
sub
fsubrs
fistl
or
push
mov
out
das
inc
sahf
mov
xor
insl
mov
cmp
fistl
jo
add
mov
daa
in
xchg
andb
shr
pop
dec
sub
inc
push
mov
lcall
xor
push
loope
pop
or
fnsave
hlt
mov
shl
jbe
cmpsl
stos
sahf
push
js
xchg
subl
push
fs
push
jg
xchg
std
xchg
pushf
pop
cld
fs
movsb
jmp
dec
jb
add
outsl
daa
sahf
cmp
mov
or
dec
mov
adc
pop
test
jl
pop
pusha
and
dec
fnstcw
fwait
icebp
lods
inc
insl
inc
or
lahf
xlat
fisubl
jbe
jg
mov
xchg
lods
lret
int
mov
xchg
gs
jl
cmpsl
in
inc
pop
cmpb
add
rclb
dec
lods
das
fnstenv
cli
cs
je
sub
fadds
jae
scas
lds
pop
dec
push
test
or
add
das
add
orb
cmpsb
data16
mov
mov
add
fmull
std
ja
aam
dec
add
dec
insb
pushf
jo
test
addr16
xor
cmp
or
and
shll
shlb
push
mov
jne
sub
xorb
push
loop
stc
arpl
shll
in
test
xlat
mov
pop
push
daa
outsl
popa
inc
push
lahf
sbb
mov
push
push
cmp
stc
pop
shl
cmpsb
push
jo
add
outsl
test
inc
cmpsl
dec
jle
scas
push
shll
mov
add
push
cmc
icebp
xchg
je
push
push
inc
rcll
clc
or
jmp
push
xor
push
sbb
mov
in
in
and
out
sub
jle
flds
stos
mov
mov
aas
mov
sub
lret
xchg
hlt
mov
iret
or
mov
push
ficompl
xchg
inc
inc
fsubrl
cmp
in
aas
dec
call
adc
or
pusha
push
or
rclw
cmp
cmc
and
scas
pop
inc
testb
cli
mov
les
or
into
mov
cs
subb
pop
push
fucom
xchg
add
das
rorb
adc
dec
bound
jp
pop
hlt
daa
xor
mov
or
jmp
cmp
daa
repnz
fisubrs
fnstcw
loope
mov
test
sub
mov
js
push
in
aas
sbb
xor
mov
xor
xchg
add
icebp
int3
cmp
orl
push
mov
mov
mov
inc
stos
cmp
shlb
push
sub
sbb
stos
xchg
stc
add
rclb
mov
test
jbe
jb
aas
mov
sub
inc
fadds
mov
lcall
arpl
stos
test
add
sub
stos
dec
leave
rorl
cmc
sub
pop
enter
in
jle
add
dec
cmpsb
and
push
and
mov
js
addr16
pop
mov
ret
add
bound
add
leave
xchg
sub
popa
inc
sub
in
ljmp
mov
pop
lds
inc
push
mov
lret
add
cmc
and
out
pop
pop
dec
andl
xor
push
jecxz
sbb
xchg
iret
pop
jne
inc
mov
ret
aaa
iret
outsl
xor
ljmp
mov
xchg
push
in
test
popa
xor
shll
inc
or
push
adc
inc
jno
xlat
enter
ljmp
std
xchg
ljmp
xchg
sbb
adc
xor
fsubl
lret
out
jno
gs
mov
cmp
adc
mov
fsubrp
mov
push
xor
pop
xor
mov
les
cmc
mov
pop
push
mov
loopne
sbb
ja
cmp
es
and
xor
dec
xor
jno
inc
sbb
pop
and
addl
loop
xor
inc
movl
xchg
fstl
out
pop
mov
mov
inc
xchg
out
mov
fisttpl
or
mov
mov
out
jmp
and
lret
mov
andl
mov
lret
into
scas
in
mov
leave
mov
iret
lcall
pop
out
push
pushf
lock
adc
cmp
imul
cmp
pop
jnp
dec
gs
lret
ljmp
cli
sub
add
mov
xchg
ds
cld
pusha
pop
pop
enter
dec
insb
lock
mov
outsl
aad
jmp
sub
pop
mov
scas
xchg
jp
pop
lcallw
mov
data16
add
lret
mov
fildll
pop
pushl
out
push
out
jl
je
notb
movsl
pop
pusha
popa
sub
hlt
mulb
sub
jmp
daa
cli
jecxz
sub
insb
sbbb
test
jbe
xor
sub
adc
mov
cmp
mov
and
out
xor
lods
adc
or
test
adc
xchg
jo
xchg
popa
cmp
cmp
jmp
xchg
lock
xlat
pop
mov
or
xor
push
inc
popa
mov
insl
aam
mov
leave
jge
mov
mov
scas
xchg
sbb
mov
sbb
adc
shll
int
push
jno
sti
jmp
pop
cmc
aas
add
adc
rcr
dec
js
dec
cmp
push
test
ffreep
mov
cmpsl
or
push
movzwl
ret
into
push
fmul
or
xlat
aad
mov
js
push
sti
fnstcw
je
xor
pushf
aam
test
subl
sub
jb
jl
cli
jbe
xchg
mov
dec
dec
movsl
pop
aas
iret
jae
jp
icebp
repnz
jp
inc
ja
je
cmp
jae
les
rolb
iretw
aam
ss
mov
mov
jne
arpl
loopne
jnp
popf
sub
jge
mov
aad
call
mov
dec
cmp
mov
mov
out
and
mov
rorb
or
jne
dec
aam
movl
cmp
push
pop
in
mov
fcomi
dec
aam
adc
jb
sub
or
cmc
jb
inc
dec
loop
xchg
ljmp
xchg
adc
sbb
inc
jnp
mov
sbb
xchg
addr16
repz
mov
cli
outsl
push
js
imulb
sub
arpl
adc
push
xchg
xlat
or
cmpsl
cmc
daa
leave
jle
pop
hlt
into
mov
in
jecxz
xor
jo
xor
cmp
andb
addl
or
mov
fwait
jmp
incl
imul
push
inc
cmp
dec
fsubl
mov
icebp
scas
jp
imul
sbb
rol
icebp
jo
xchg
insl
jb
adc
ss
mov
insl
fs
inc
nop
sahf
cmpsl
cwtl
ret
fistpll
jo
push
les
jbe
in
movsl
xchg
xchg
fisubrs
mov
lret
xor
and
jne
mov
or
aas
stos
test
pushf
js
cmp
pop
scas
mov
cmc
outsb
mov
cmp
bound
pusha
xor
testl
jae
inc
std
jle
mov
maxps
icebp
add
pop
stos
stc
sub
scas
xchg
inc
icebp
inc
notb
fmuls
xchg
jg
sar
std
and
or
pop
add
dec
jge
nop
in
pop
mov
loopne
sub
cmp
adc
repz
cli
in
and
sub
mov
mov
in
lods
fs
push
jo
add
pushf
xchg
call
xor
movsb
fists
adc
aad
push
mov
scas
mov
sub
add
ja
lds
push
mov
inc
roll
add
in
ljmp
addr16
out
jp
or
adc
jns,pn
lock
fildl
outsb
jae
inc
jnp
jle
je
shrl
addr16
pop
lods
enter
js
push
inc
inc
test
int3
or
add
pmullw
pop
sbb
push
inc
enter
sahf
jbe
repnz
orl
fistpl
push
jp
or
lcall
pop
and
xchg
sbb
dec
into
nop
dec
add
pop
lret
rol
shlb
jb
dec
push
out
shlb
add
xchg
imul
in
sahf
mov
stos
cmpsl
pop
pop
pusha
lock
mov
addr16
adc
sbb
scas
gs
pop
xor
xchg
rclb
repnz
push
sub
xor
or
mov
insl
lods
dec
test
out
les
and
ss
xor
stos
je
mov
lock
out
gs
inc
jp
jae
pop
sub
mov
add
dec
lock
stc
test
loop
or
mov
cmpsl
inc
ds
mov
mov
popf
inc
cmp
out
test
mov
mov
pop
pop
mulb
and
add
push
dec
js
enter
aas
pop
test
movsb
jle
push
ja
sub
cli
adc
sbb
mov
in
repnz
mov
out
out
or
js
orps
jg
cmpsl
inc
pop
out
fdivs
loopne
sbb
sti
pop
adc
mov
xchg
mov
xorb
pop
in
movsb
cmp
mov
adc
jmp
outsb
ja
mov
push
jg
jle
in
ret
jge
imulb
and
or
sub
les
leave
mov
sub
mov
or
repnz
sbb
mov
ret
mov
fnsave
dec
orl
sbb
imul
sub
sbb
dec
mov
lcall
cmp
cmp
inc
test
adc
shll
lds
jbe
mov
push
xchg
pop
insl
mov
inc
mov
jmp
inc
fisttps
and
push
cmp
mov
mov
push
push
fsubrs
jecxz
gs
stos
push
rcrb
sub
pop
jle
xor
in
fsts
fistl
cmpsl
ljmp
jae
sti
mov
or
sbb
mov
or
dec
inc
push
push
mov
xchg
dec
shlb
xor
lret
addr16
inc
sarb
imul
cmp
orl
jo
test
xor
inc
ud1
mov
aad
push
xor
cmp
push
mov
sbb
shll
iret
xlat
or
lods
daa
or
cmp
dec
add
or
cmp
xor
xchg
mov
js
inc
mov
in
leave
leave
call
fisubs
adc
out
cmc
enter
push
pop
dec
cmp
pop
mov
cmp
mov
mov
aas
stos
repz
mov
push
pusha
inc
cwtl
jb
outsb
sbb
mov
lds
pop
ficoml
rolb
aam
bound
in
arpl
lods
aad
xchg
sbb
lret
shlb
inc
iret
pop
xchg
cmp
mov
in
push
cmp
ljmp
pop
mov
mov
jge
and
pop
mov
loopne
jbe
xchg
sbb
loope
add
lods
adc
ljmp
push
add
push
and
mov
orl
fnstsw
and
mov
push
mov
pushf
std
lock
lock
nop
ljmp
jg
or
les
mov
popa
aam
stos
mov
adc
mov
repnz
or
jnp
push
push
fildl
xchg
sbb
inc
pusha
insl
mov
filds
lcall
scas
test
and
mov
jmp
adc
sarb
mov
mov
insb
jl
fsubrl
inc
mov
sbb
mov
push
cmp
jns
pushl
pop
xchg
int3
mov
popa
jb
add
aam
mov
mov
fiadds
jns
sbb
adc
loope
mov
adc
out
mov
cltd
inc
cmp
bound
rdmsr
loopne
cmp
sti
aaa
mov
or
add
leave
mov
icebp
push
testl
sbb
fcoms
test
pop
fstps
sar
sub
mov
loop
mov
ret
loop
sbb
xor
mov
lock
sub
ror
lods
pusha
out
das
stc
and
or
lods
adc
dec
ficompl
inc
mov
aaa
inc
lds
lods
test
sbb
inc
nop
hlt
mov
sbbl
call
loopne
fnstsw
jnp
inc
cwtl
cs
les
mov
cli
dec
mov
out
call
in
lcall
stos
cmpsl
xor
xchg
ljmp
dec
icebp
fs
in
xorl
and
outsb
sbb
push
into
mov
push
mov
mov
out
cmp
sub
pusha
ljmp
dec
fnstsw
adc
dec
aad
or
addr16
lds
shlb
jnp
pushaw
bound
leave
cmp
jb
insb
and
xor
andb
andb
popf
rolb
ds
pop
sar
popa
inc
popl
scas
test
and
xchg
out
push
mov
sub
out
sub
adcb
dec
call
je
test
stos
and
sbb
add
repz
dec
mov
mov
and
lods
cmp
std
add
dec
outsb
mov
sub
adc
ja
fs
adc
loop
or
fisubs
inc
call
loop
jle
roll
and
push
xchg
out
inc
lods
out
push
xchg
fldcw
dec
jbe
bound
cmp
addr16
pop
mov
adc
adc
out
fldcw
mov
xchg
push
jbe
cmp
push
cmp
pop
mov
xchg
roll
jo
inc
ret
xchg
and
cltd
and
pushf
mov
xchg
cltd
or
and
push
lret
js
hlt
jne
jmp
pop
and
xchg
pushf
push
mov
xchg
gs
test
jecxz
push
aas
movb
cltd
in
inc
cwtl
cmp
ret
pusha
pop
inc
test
pop
cmp
hlt
sub
or
stos
xlat
push
sub
scas
or
js
into
daa
inc
pop
in
xor
sbb
pop
mov
mov
das
fldt
mov
push
add
sbb
xchg
dec
sub
test
mov
jmp
call
sbb
adc
inc
inc
pop
sbb
adc
jb
cmp
lds
cmp
push
push
sub
daa
sbb
jmp
int3
data16
push
xchg
mov
inc
inc
ret
adc
pop
mov
scas
dec
inc
mov
push
ret
dec
sub
jb
push
mov
repz
sbb
xchg
lds
jb
enter
inc
clc
adc
ss
dec
lods
out
push
jmp
lahf
sbb
fisttps
jae
test
stos
xchg
xchg
push
mov
outsl
lods
jle
add
mov
mov
or
cmp
js
sbb
jle
lock
push
jl
mov
xchg
jmp
mov
mov
iret
shll
push
mov
fsubrp
add
add
test
loopne
mov
mov
inc
pop
stos
mov
dec
adc
pop
nop
add
adc
dec
sbb
ret
loop
sbb
mov
minps
or
jg
or
leave
xor
fimull
fimull
test
dec
out
or
push
shl
inc
insl
xor
push
xchg
sub
call
mov
push
adc
pop
pop
jb
cmpsb
mov
add
sbb
into
mov
clc
xchg
loop
and
push
and
bound
inc
add
jne
stos
out
mov
mov
das
rorl
fwait
or
stc
gs
pop
lcall
sbb
pop
adc
imul
in
and
int3
test
sub
sti
mov
ja
js
stos
lcall
xchg
push
nop
xchg
imul
mov
rorb
gs
lods
adc
sbb
iret
sbb
pop
pop
cmpsl
xchg
fmul
xchg
icebp
sbb
adc
mov
push
sub
int
jb
clc
dec
mov
or
dec
mov
ret
sbb
bound
cmp
loop
jl
push
ret
imul
push
arpl
mov
lea
inc
inc
mov
dec
jae
clc
sbb
fdivs
and
xlat
fwait
push
cwtl
sbb
jo
dec
or
jbe
pop
sarl
xchg
jbe
insl
cmp
pop
aaa
fdivr
mov
adc
icebp
cmp
jno
enter
jno
aad
sub
jae
fdivl
cmp
es
mov
out
int
test
dec
mov
push
repz
dec
shrl
add
negb
scas
dec
outsl
sbb
cmp
and
enter
cmp
mov
inc
cmp
jecxz
mov
jecxz
cmp
out
pop
cmp
pop
xor
cli
inc
push
fldl
jbe
shll
mov
inc
mov
leave
sahf
inc
xchg
mov
mov
or
test
outsb
inc
mov
enter
push
adc
pop
add
imul
xor
lea
ja
out
sahf
aaa
fidivl
fisubl
xlat
and
adc
faddl
dec
push
cmp
loop
adc
out
mov
xchg
orl
notl
out
push
movsl
add
loope
cmp
ret
xor
sarl
xchg
xor
mov
dec
js
jmp
xchg
incb
cli
adc
test
mov
xor
insl
cli
das
push
xchg
jne
mov
or
xor
inc
nop
adc
and
push
mov
insl
je
xchg
adc
sti
and
rolb
cmp
pop
pop
pop
pop
lea
mov
gs
fildll
mov
pop
push
bound
push
sub
or
insl
sbb
push
and
dec
cmp
clc
ds
mov
push
int
mov
add
pop
sbb
mov
pop
push
cmp
dec
enter
mov
mov
xor
vmulsd
jae
stos
xor
ret
stos
xor
or
imul
incb
ljmp
shl
cmpsl
fnstcw
mov
arpl
push
imul
ret
pop
jbe
push
mov
jmp
cmpsb
sub
mov
mov
aad
subb
adc
pop
mov
xor
aas
push
into
ds
cmpsb
fists
jbe
and
lods
enter
scas
mov
popa
push
inc
dec
pop
ret
sbb
or
xchg
in
cmp
imul
mov
add
ror
add
sbbb
dec
dec
jnp
popf
std
addr16
das
repnz
rorb
mov
add
in
lcall
dec
and
xor
add
cmpsl
sbb
dec
dec
cmp
sub
shrl
xor
cmp
mov
mov
xor
mov
mov
xchg
mov
fdivrl
insl
pop
shrl
in
xchg
or
lods
pop
cmp
dec
arpl
push
inc
pop
xchg
jg
pushf
hlt
jecxz
mov
push
testb
sub
pop
sbb
mov
and
inc
in
mov
cmp
dec
xchg
sar
mov
inc
jbe
ret
push
es
cmp
push
repnz
sti
push
xor
sbb
adc
add
lock
add
adc
dec
das
add
adc
adc
ds
cmp
aad
cmpb
stos
or
add
push
test
xchg
lret
sub
pusha
cltd
add
clc
mov
pop
lret
push
or
and
pop
std
inc
adc
push
cmp
fwait
stc
repz
pushf
sbb
hlt
in
xchg
int
inc
add
rorb
sub
add
stos
std
mov
fildl
stc
push
mov
mov
and
addr16
fucomp
jne
aad
and
push
test
jl
add
mov
scas
and
mov
cmpsb
negb
jle
sbb
mov
and
xchg
inc
loope
int
es
adc
vandnps
dec
ljmp
scas
push
mov
mov
mov
pop
push
leave
add
sub
addl
jns
cltd
sub
lock
pop
ds
outsl
jge
out
mov
cmp
lret
sbb
cmp
dec
ljmp
cwtl
dec
in
cmp
pop
pop
add
jge
push
xchg
cmpsl
adc
scas
cwtl
pusha
push
in
jbe
push
inc
push
jo
test
pop
jo
shl
int
daa
repz
or
push
lock
cmc
fisttpl
adc
out
in
sbb
repnz
icebp
fisubrs
jmp
stos
repnz
mov
loop
add
xchg
in
xor
test
mov
insl
es
xor
cli
dec
cmp
jne
hlt
sub
mov
pop
pop
pop
inc
outsl
clc
mov
or
dec
movsl
out
jg
fsubs
sbbl
push
dec
jl
mov
pop
mov
jns
sbb
ljmp
cmp
jmp
jl
sbb
lea
lahf
adc
and
aas
imul
ret
adc
aam
ror
fsubp
in
inc
push
into
inc
daa
lahf
add
lods
xchg
cmp
inc
dec
push
ds
mov
and
ljmp
cmpsl
push
daa
bound
iret
iret
cli
arpl
in
test
aam
shll
in
std
negl
xchg
xor
mov
inc
and
add
ficompl
nop
mov
cltd
add
mov
fs
push
pop
dec
ljmp
push
pop
aas
fisubl
xor
ss
mov
push
push
imul
imul
pop
pop
inc
mov
add
xchg
xchg
in
xchg
iret
rcll
pop
movl
movsb
dec
inc
or
pushf
inc
mov
adcb
daa
pop
and
inc
xchg
dec
dec
mov
insl
xor
and
call
or
push
push
mov
mov
pop
lahf
das
sti
lods
mov
repnz
or
jg
pusha
jne
lret
push
imul
scas
push
or
mov
inc
cmp
cmpsl
repz
adc
pop
cmp
inc
xor
pop
adc
push
cltd
add
insl
rep
in
pushl
hlt
jle
jl
adc
sti
in
fcmovb
pop
cmp
adc
fisubrs
cmp
rcrb
cld
punpckhdq
mov
hlt
jl
je
mov
jmp
imul
cltd
repnz
add
mov
outsl
flds
enter
aaa
xor
and
adc
rclb
push
imul
adc
js
popf
ja
jns
pop
repz
jmp
js
pop
jno
es
out
leave
xchg
cmp
lods
std
inc
adc
dec
outsl
mov
cmp
jg
sbb
lret
bndstx
loop
sub
mov
xor
movsb
lods
stos
mov
cli
and
insl
and
inc
xor
inc
and
stc
jecxz
adc
scas
inc
adc
icebp
xchg
out
push
test
mov
lret
push
addl
sub
xchg
int3
ljmp
push
mov
ljmp
test
stos
adc
mov
in
jo
divl
mov
sti
mov
push
pop
loopne
std
ret
scas
jns
push
aad
push
dec
mov
jbe
or
mov
lahf
push
fsubp
adc
jg
outsl
dec
addr16
xor
in
xor
adcl
in
loop
mov
push
insl
push
cmpsl
icebp
movsl
subl
pop
imul
jge
pop
fsqrt
xchg
adcl
add
push
xchg
mov
imul
jbe
sbb
inc
pop
xor
pop
enter
xchg
adc
enter
mov
mov
jecxz
sti
enter
sahf
rorb
popf
sub
lahf
or
push
inc
mov
inc
cmp
test
jne
sub
dec
mov
test
push
ret
ss
divb
cmp
aaa
xor
test
xor
int3
or
mov
inc
push
push
xor
inc
loopne
inc
pop
dec
arpl
fmull
insl
xor
dec
stc
in
movsl
lahf
xor
sub
in
xchg
fisubrl
and
adc
xchg
aaa
jb
cmpsb
mov
push
sarb
insl
add
jne
pop
xor
xchg
pusha
xlat
icebp
xchg
fwait
test
pusha
scas
sbb
scas
jl
push
xchg
jg
daa
mov
push
imul
sub
and
in
sbb
loopne
mov
sub
in
xchg
je
push
adc
mov
push
shl
clc
cld
pop
stos
imul
repnz
pop
mov
test
fsubs
add
cld
lcall
movb
and
jg
add
mov
lret
jmp
add
and
out
xchg
add
and
adc
adc
nop
movsb
mov
cmp
push
dec
dec
adc
xor
lret
imul
xchg
popa
dec
fcomps
les
lds
xchg
mov
fstpl
adc
aas
pop
jo
push
jb
idivl
mov
nop
scas
call
lds
stos
aas
in
xchg
adc
cld
in
mov
pop
xor
test
add
sbb
aaa
movsb
aad
paddsw
xchg
pop
jg
sahf
xchg
jbe
lcall
movsb
add
imul
dec
rcr
mov
fldl
mov
dec
icebp
sti
mov
sbb
test
xchg
jnp
imul
adc
pop
enter
jg
inc
sub
shll
dec
insb
inc
nop
repnz
je
pop
out
add
mov
cmpsl
mov
push
cmp
mov
xor
ret
aaa
rcrl
repz
jae
enter
inc
pop
inc
mov
pop
insb
push
sub
call
jmp
std
cwtl
lahf
dec
add
in
or
adc
jmp
mov
rolb
pop
jnp
inc
sbb
add
inc
xchg
test
dec
cmp
cwtl
jno
outsb
arpl
inc
mov
sar
mov
and
xor
js
sub
rolb
imul
jl
xor
clc
std
push
and
fcmovne
pusha
xor
mov
not
and
pop
stos
sbb
sub
aaa
and
xchg
adc
cld
jno
lahf
mov
xchg
or
pop
mov
xchg
cmp
mov
filds
stos
push
and
or
xchg
jl
lret
cmpsl
fcom
pop
insb
ljmp
arpl
pushl
lock
loope
adc
push
repz
push
sub
sbb
cmp
outsb
incb
push
data16
push
pop
jg
xchg
jnp
mov
bound
pop
inc
push
mov
inc
es
jns
mov
mov
sub
aaa
test
jbe
push
ja
mov
pop
mov
mov
sub
jae
fisttps
push
add
adc
xchg
xchg
cld
loop
pushf
fildl
imul
pop
leave
mov
aam
cmpsl
sbb
push
ja
cmp
insb
orl
in
fdivrs
jmp
loopne
xor
stos
mov
push
adc
mov
shrb
cmc
out
in
aas
daa
pop
insl
mull
cld
pop
jae
sahf
lods
pop
sar
insl
jp
xor
mov
test
sub
sbb
pop
das
or
push
xchg
jmp
inc
mov
insb
dec
fisubl
aas
xlat
aas
xlat
lds
sti
cld
mov
or
stos
sbb
aas
call
cwtl
adc
add
in
cmp
stos
imul
mov
xchg
ffree
push
fldenv
adc
andl
pop
data16
loopne
imul
arpl
aas
adc
jnp
and
cwtl
icebp
mov
insb
ret
shl
daa
jl
cmpsb
jbe
shlb
pushf
push
push
fildll
push
pop
es
xchg
or
mov
pop
pop
xor
xchg
ss
ljmp
push
push
xchg
push
popf
and
mov
or
leave
xor
stc
sub
jbe
out
addl
movl
xor
test
rclb
dec
mov
mov
mov
decb
mov
mov
sub
sub
pop
lods
es
lahf
call
not
or
and
pop
lcall
pushf
fistps
fwait
imul
adc
movb
adc
out
pop
scas
xor
pop
stc
pop
aad
xchg
in
test
mov
aad
daa
in
inc
mov
add
sarl
or
fdivs
adc
mov
and
mov
outsl
dec
or
test
adc
mov
ss
dec
repnz
std
add
pop
lcall
jle
into
adc
inc
js
push
repz
sub
addr16
ja
jecxz
jo
inc
data16
test
sbb
jns
test
xor
icebp
jo
mov
call
jle
push
inc
xchg
xchg
sbb
jns
imul
roll
fildll
in
ret
nop
add
fwait
inc
scas
mov
xchg
xchg
sub
movl
or
gs
xlat
fldl
shrl
mov
jecxz
shl
rol
push
cmp
lahf
sahf
in
movsl
jbe
int3
movsb
mov
jl
frstor
hlt
rorl
cltd
mov
mov
aam
and
ffree
xchg
stos
mov
stos
imul
sub
fcoml
stos
popf
jle
add
in
int
add
xor
in
jns
mov
fisttps
sub
jg
xor
push
iret
aas
and
dec
xchg
or
cmp
loopne
mov
mov
mov
lahf
add
loop
lods
pop
xor
sahf
adc
mov
inc
testb
mov
repz
sbb
dec
push
test
xchg
mov
jnp
mov
and
push
mov
jmp
movsb
xchg
ja
jbe
movsl
pop
shr
xor
pop
xchg
dec
clc
push
shlb
out
and
js
xlat
insl
out
mov
cli
xor
sbb
xor
xor
std
pushf
push
outsl
hlt
mov
daa
cmp
adc
je
xor
insl
ds
lods
lods
es
mov
mov
adc
out
pop
adc
mov
int
mov
ret
ss
push
cmp
and
lahf
test
pop
cmpsl
fwait
sub
and
push
inc
xor
add
adc
cmp
pop
cmpsl
add
dec
insl
cmp
dec
mov
mov
lods
lret
sbb
fists
sub
fcoms
fstps
fimuls
and
fptan
ljmp
fsin
pop
aas
mov
in
xor
cmpb
js
clc
mov
inc
cmp
data16
xor
or
or
fists
pavgb
mov
mov
in
loop
inc
lret
push
and
es
loopne
js
jno
jnp
adc
inc
or
subl
cmp
imulb
sub
xchg
push
jl
pushl
and
mov
shlb
dec
inc
xor
call
jg
cmp
adc
aam
outsl
out
pop
jo
mov
xor
or
std
push
ret
cmp
lcall
in
push
pop
dec
sbb
cmp
das
or
fisubrs
cwtl
jns
cmc
int
es
jns
sbb
cmp
push
js
mul
std
mov
aad
jb
inc
cltd
cmp
jns
xor
push
repz
and
fldl
iret
or
cltd
stos
repnz
mov
mov
mov
jmp
test
out
sub
push
dec
jmp
pop
out
jecxz
lcall
int3
out
lahf
mov
add
dec
adc
xor
and
push
repnz
shlb
scas
shl
xor
iret
dec
insb
sbb
inc
add
mov
enter
xor
and
mov
inc
data16
sbb
push
sub
test
and
cmp
jns
and
imul
fisubs
mov
mov
push
fimuls
sbb
jmp
mov
pushf
add
outsb
sbb
pop
and
push
and
test
ret
imul
pop
xchg
je
add
add
fdivl
xchg
pop
sbb
push
pusha
flds
jl
loopne
jae
pop
push
les
push
mov
ret
div
push
in
out
shr
inc
pop
and
xor
insl
ret
sub
aaa
daa
mov
xchg
mov
hlt
xchg
lods
pop
movl
adc
dec
loopne
sbb
add
call
pushf
xor
push
inc
outsl
es
aam
repnz
int3
lock
hlt
outsb
loopne
leave
fs
jp
pop
fs
push
mov
aam
dec
fldenv
push
scas
pusha
cmp
es
jecxz
cltd
fdivp
rep
in
out
std
movsb
lods
push
pop
inc
push
fdivs
cld
lret
arpl
in
adcl
mov
and
fmulp
addr16
addr16
push
xchg
and
rcr
std
adc
mov
lret
jns
es
cwtl
insl
push
push
out
gs
mov
adc
fistpl
jne
or
cmp
add
mov
decb
int3
adc
movsb
lods
clc
mov
cli
pop
mov
cmp
inc
pushfw
add
inc
push
push
dec
subl
lret
jo
jns
cmp
es
mov
jne
ljmp
and
xor
pop
fidivl
add
inc
xor
cmp
repnz
into
fldcw
icebp
popf
aad
cmp
inc
repnz
hlt
mov
fsubrs
in
es
or
repz
hlt
dec
inc
cmp
xchg
adc
test
mov
les
mov
push
inc
mov
test
inc
xchg
jl
push
dec
or
and
pop
cwtl
test
mov
into
ds
xor
neg
jns
test
out
jecxz
mov
hlt
push
clc
cltd
push
popa
push
push
push
xor
xorl
dec
mov
std
mov
mov
dec
mov
sub
mov
leave
inc
sbb
sub
inc
loope
movsb
and
test
and
adc
ss
pop
sub
test
lret
sbbl
outsl
sub
pushf
cmpsl
add
jmp
jmp
sarb
adc
mov
out
inc
jns
les
xchg
dec
stc
test
sub
pop
addl
mov
jmp
out
jle
fwait
testb
xor
dec
testb
sarl
mov
inc
jae
test
xor
fs
mul
mov
or
and
mov
enter
pushf
jg
cltd
lds
add
pop
andl
inc
das
sbb
add
inc
movb
jne
push
mov
test
mov
out
jo
shlb
roll
jle
in
in
orb
jmp
and
mov
or
push
mov
mov
roll
popa
mov
sahf
add
lret
iret
nop
or
sub
push
or
jp
sub
leave
pusha
jne
push
cmc
jne
fisubrs
int3
mov
fidivrl
sbbl
and
mov
out
mov
push
mov
outsl
mov
jns
dec
adc
add
or
xchg
js
cmp
mov
incb
inc
ficompl
jmp
inc
popf
rorb
ret
movsl
pushf
fisttpll
cmp
mov
gs
xchg
inc
lods
push
enter
push
gs
cld
testl
jp
inc
xchg
out
cmp
in
and
xor
test
or
inc
aas
inc
pusha
imul
xlat
xchg
popl
fcoms
mov
rolb
sbb
inc
repz
dec
outsl
in
or
dec
push
push
fiadds
add
xchg
cmpsb
lahf
in
sub
cli
pop
sbb
outsb
dec
ss
jmp
push
dec
imul
repz
pop
je
mov
movsl
int
mov
fwait
push
leave
rcll
pop
xchg
push
icebp
jg
enter
in
push
mov
fstps
rol
outsb
aad
loop
fwait
stos
pop
and
out
and
aaa
inc
les
adc
jge
scas
in
xchg
test
mov
xchg
dec
jns
fnstenv
jg
mov
sub
cmc
push
shll
xchg
sub
push
hlt
push
cmpsl
jp
pop
hlt
mov
enter
xlat
xchg
lods
mov
in
mov
cmp
inc
or
mov
pop
mov
outsb
xchg
jnp
sub
bound
int
pop
neg
sub
inc
adc
loop
mov
test
imulb
add
or
test
sbb
out
mov
add
jns
sub
pop
sbbb
gs
test
xchg
pop
fiadds
fistl
mov
sarl
ffreep
bound
and
xor
and
inc
xorl
xchg
xchg
push
pop
call
lods
stc
mov
add
mov
loopne
nop
push
sahf
pop
sbb
sub
insb
sbb
push
cmp
adc
mov
xchg
mov
inc
inc
andb
dec
cmp
orl
lcall
loop
scas
test
lea
arpl
das
jae
shll
mov
test
and
cltd
insb
enter
les
and
sub
xchg
pop
pop
or
jae
cmpsl
inc
jg
test
rorl
leave
repz
sbb
leave
and
aad
xchg
xchg
xor
mov
sub
xchg
xchg
icebp
or
cmp
iret
movsl
mov
mov
testb
push
ljmp
out
mov
sbb
iret
xchg
add
inc
mov
ret
or
xor
test
and
dec
cmp
cmp
sub
fsubl
pop
lret
fidivrl
adc
adc
nop
push
test
add
fildl
mov
cmpsl
mov
je
inc
jp
stos
int3
icebp
lods
cmp
mov
mov
jns
dec
mov
xchg
jo
push
mov
iret
out
sbb
call
mov
mov
loop
pminub
lods
inc
pop
mov
jle
dec
out
sti
in
inc
and
mov
mov
lahf
dec
xor
dec
sub
outsb
pop
inc
mov
rorb
adc
stos
jae
lods
test
out
lods
fcompl
push
ja
leave
xchg
sarb
sub
mov
xchg
hlt
pusha
jg
pushw
mov
xchg
lcall
inc
inc
shr
testb
sub
add
mov
push
and
push
add
sub
sub
mov
mov
ljmp
dec
aad
outsl
lock
lret
pop
jle
mov
fwait
daa
xchg
or
sub
cmp
add
movsl
dec
push
add
hlt
adc
push
xor
mov
lea
mov
sti
nop
push
pop
mov
outsl
or
mov
popa
loope
mov
decb
es
dec
pop
mov
jmp
cmp
lcall
inc
sbb
out
jnp
cmpsl
adc
inc
jne
cltd
push
push
adc
dec
movsl
mov
mov
insl
push
sbbl
lods
mov
xlat
xchg
pop
xorb
test
pop
cwtl
mov
pop
push
add
or
or
mov
and
fildl
pop
enter
in
mov
test
add
ja
jmp
ja
popa
lahf
dec
aam
add
out
xchg
cltd
pop
jb
fucomi
test
cwtl
and
gs
loop
ffree
negb
mov
add
ficomps
dec
mov
adc
out
std
add
adc
mov
shr
out
cmp
std
jge
push
mov
fnstenv
fisttpl
out
mov
mov
xor
push
stc
out
addl
sarb
mov
es
jl
adc
mov
loop
mov
rclb
fs
sar
xor
inc
cmp
mov
mov
test
pop
enter
fcmovbe
in
iret
xor
pusha
sahf
sub
mov
cmp
or
shlb
test
daa
xor
and
lods
push
cltd
jmp
pop
cwtl
cmpsb
outsb
in
push
push
jecxz
xchg
push
fistpl
inc
or
popa
in
mov
pushf
lcall
outsb
push
push
and
fsts
jae
aas
push
xor
test
pusha
into
adc
pop
or
mov
les
dec
cmovns
add
mov
insb
mov
jb
xor
jnp
cmpsb
adc
imul
mov
sub
push
cmp
sbb
fildll
int
mov
or
repz
fs
loop
xchg
adc
aam
lret
mov
mov
shrb
addl
and
shll
iret
pop
mov
cmp
mov
pop
sub
jmp
and
or
jle
or
mov
push
dec
mov
mov
fmull
pop
in
ja
push
jmp
aaa
cmpsl
mov
push
nop
jge
lret
loope
outsb
fadd
test
xchg
dec
cmp
stos
or
movsb
mov
jns
sub
add
stos
cld
mov
inc
loope
bound
std
aaa
inc
in
dec
xor
insb
test
aas
cltd
out
std
cmp
xchg
pop
dec
sub
pop
inc
aam
mov
mov
jmp
dec
sbb
cmpsb
test
popa
xor
pop
pop
jle
xchg
inc
inc
lahf
or
push
jne
into
mov
lret
mov
jmp
add
inc
pop
scas
orb
inc
in
and
inc
and
mov
or
mov
repz
insl
sarl
sarl
js
sub
rorl
inc
dec
push
adc
cld
xchg
mov
pushf
jl
lret
jne
fnstsw
xchg
cmp
or
and
in
lcall
lods
push
stos
movb
push
dec
and
out
outsl
sbb
frstor
adc
xchg
test
xchg
xchg
jge
ss
fcomps
mov
pop
sub
inc
inc
xlat
insl
stos
jl
insl
xchg
xor
sub
popf
into
cltd
mov
nop
and
out
pop
fbld
mov
mov
cmp
jae
test
negl
xchg
xor
pop
jae
mov
ljmp
dec
les
mov
adc
inc
mov
pop
push
pop
push
mov
into
sbb
stc
jb
xchg
stos
stos
xor
ficompl
lret
xor
pop
movsb
or
fisttpll
pop
xor
ds
dec
add
dec
sarb
adc
aas
inc
mov
loope
mov
jp
mov
mov
repnz
sti
fs
dec
sub
fstpt
icebp
jb
ret
adc
inc
adc
scas
sub
mov
out
add
adc
jnp
mov
jns
xor
or
xchg
pop
sbb
insb
push
lds
cmp
add
clc
sub
out
addr16
mov
cmpsb
daa
inc
mov
jno
cmc
pop
pop
mov
int3
and
aas
repz
xor
es
decb
sub
xchg
push
repnz
mov
ret
or
call
rcrl
scas
mov
lods
scas
addr16
mov
loopne
inc
out
in
jmp
rolb
mov
inc
mov
add
fcomps
nop
in
daa
in
ja
push
or
fstpt
adcb
std
xor
xchg
ficomps
cmpsl
insb
int3
and
ljmp
xor
push
xchg
pusha
sarb
in
jge
orb
inc
insl
sub
adc
call
outsl
sbb
jae
pop
add
sub
xor
jne
mov
cmp
sub
test
loop
into
inc
push
repz
xor
sbb
cmp
add
into
in
fwait
mov
sub
icebp
stos
mov
inc
jecxz
xor
pop
jp
and
mov
and
lods
pop
jecxz
push
scas
adc
cmp
test
int
push
nop
test
sub
fwait
sbb
mov
sub
push
shll
dec
popf
addr16
std
icebp
jg
pop
imul
push
mov
mov
or
xchg
mov
push
andb
xchg
jo
cmp
push
cmpsl
ljmp
push
sub
lret
sar
test
cli
jmp
cmp
push
and
stos
adc
pop
xchg
subb
xchg
add
push
inc
enter
cmp
test
pop
mov
xchg
mov
bnd
mov
gs
sub
and
push
loopne
xor
pop
or
out
pop
sub
sub
idivb
int3
mov
call
adc
or
inc
cli
push
pop
or
sbb
xchg
dec
inc
addl
xor
pop
or
inc
sahf
adc
push
repz
in
sbb
xor
adc
or
and
aas
mov
rclb
shll
jmp
mov
int3
lds
lret
data16
xor
mov
sti
faddp
sti
lcall
xchg
pop
push
in
and
bnd
mov
pop
sub
push
outsl
out
add
mov
les
test
insl
xor
test
add
push
jmp
sti
jb
in
pushf
lods
sub
ljmp
scas
mov
xor
mov
dec
push
and
into
add
fadds
push
mov
scas
jg
outsb
push
xchg
dec
xchg
xor
arpl
mov
lahf
mov
inc
or
pop
xchg
pop
jmp
cmp
add
scas
cmpsl
mov
jecxz
int3
cld
dec
subb
iret
lods
cmc
fwait
dec
jp
mov
mov
pop
mov
popf
pop
cmp
in
insl
insl
adc
adc
push
cmp
std
add
lds
mov
xor
out
add
mov
nop
addr16
and
bound
xor
sbb
cmp
lcall
sbb
mov
jae
in
inc
dec
cmp
jl
sti
pop
sub
mov
aas
imul
xor
fwait
pinsrw
ficoml
mov
cmp
test
sbb
pop
push
ja
iret
mov
pop
ss
mov
pusha
popa
dec
test
jge
ljmp
jns
and
adc
xor
mov
nop
aad
das
dec
jle
loope
mov
dec
frstor
imul
xor
insb
jns
fs
push
ds
cmpsl
or
loop
mov
ret
pushf
mov
push
push
out
or
jmp
and
jp
shll
addl
mov
sahf
insl
sbbb
fisttps
push
popa
add
push
or
push
adc
cmp
gs
push
adc
pushf
lods
js
and
cmp
dec
sub
insb
dec
rorl
or
in
jmp
stos
xor
cmp
sub
repz
or
sbb
fsubrs
stos
loope
ss
jnp
or
xor
iret
scas
insb
dec
pop
mov
xor
call
repnz
rcl
int3
dec
mov
cs
mov
pop
cld
shrl
or
gs
sbb
push
enter
xlat
ds
std
push
cltd
mov
sub
retw
loope
dec
out
lahf
syscall
in
xchg
popa
popf
loope
adc
jp
dec
ret
jb
sbb
push
jl
lock
ss
cmc
lret
inc
and
pop
aam
stos
scas
mov
xor
and
xchg
jle
inc
lret
sub
lret
mov
jecxz
jo
lods
xchg
pop
adc
mov
cmp
pop
jns
sub
lahf
add
lods
push
ret
cmpsl
pop
mov
addb
and
dec
xchg
icebp
les
outsl
jge
dec
jb
addb
push
cld
push
fadds
xor
movsl
cmpsb
sbb
aaa
mov
and
push
or
sub
ja
jmp
adc
adc
mov
xor
and
mov
movsb
jle
add
pop
sarl
mov
xor
ftst
test
sbb
rcrb
adc
pop
or
push
push
call
jmp
mov
aas
cmp
outsl
sti
loopne
pop
aam
fucom
sub
fsubrl
dec
notb
scas
cs
sub
or
push
lcall
pop
out
ficomps
lods
shll
push
jmp
leave
in
inc
adc
or
lret
sub
neg
jbe
sbb
pop
push
xchg
cwtl
aas
jo
mov
fiadds
sub
insl
push
sub
das
push
xchg
push
fwait
push
rcll
dec
sbb
inc
sbb
xchg
imul
mov
cli
mov
xchg
repz
sub
out
enter
mov
lds
ret
pushf
adc
mov
cmpsb
das
inc
int3
mov
and
sub
inc
dec
dec
push
bound
jge
xor
mov
leave
cmp
mov
test
jae
fisubrs
and
pop
mov
pop
jno
xchg
stos
ret
or
jg
mov
sub
xchg
pop
flds
loopne
out
inc
mov
hlt
mov
dec
mov
aam
jns
xchg
dec
ret
and
adc
movd
adc
add
jmp
mov
xchg
insl
inc
sub
cwtl
mov
and
ret
add
xchg
push
movsb
call
sub
sbb
mov
pop
mov
mov
jne
lcall
inc
mov
mov
pop
mov
add
into
ds
jb
je
or
mov
cltd
dec
sahf
cmc
stos
sbb
xor
loop
cmp
sub
inc
adc
test
xlat
fisttpll
aaa
in
sbb
mov
jns
nop
cltd
add
adc
jb
aaa
cltd
inc
repnz
dec
dec
test
and
or
enter
imul
iret
inc
mov
arpl
daa
and
dec
hlt
cli
lcall
inc
imul
cli
adc
stos
pushf
sti
sub
pop
nop
test
sub
push
add
pop
inc
xchg
add
loope
lret
xlat
jp
and
jmp
inc
jae
jno
test
cli
jmp
aas
movsb
cmp
std
adc
loopne
outsb
sbb
push
or
clc
xor
inc
test
stc
repz
lcall
push
xlat
push
jno
test
xchg
xchg
mov
rcr
and
jne
in
test
ss
push
pushf
xchg
xor
adc
push
xchg
and
mov
cwtl
or
mov
jg
and
lret
adc
pop
dec
lock
jno
test
add
fsubrl
scas
stos
scas
out
decb
cli
out
outsl
lock
into
nop
cmp
jne
or
dec
push
icebp
and
popa
push
sbb
pop
and
rorl
dec
xchg
sbb
testl
xor
add
out
es
inc
mov
inc
adc
shrl
clc
sub
and
pop
mov
mov
mov
push
xchg
aaa
lahf
xor
mov
add
xchg
push
xchg
add
mov
pop
ss
lock
inc
dec
push
ja
inc
popf
push
mov
mov
mov
stc
xchg
lahf
mov
inc
out
mov
cwtl
cmp
cmp
pop
jecxz
push
cmp
push
movsb
or
fs
iret
shr
dec
call
in
icebp
or
mov
xor
inc
or
inc
lea
outsl
push
and
xor
std
xchg
ja
pusha
scas
test
pop
xor
add
add
aas
jge
in
aaa
mov
pop
enter
jecxz
xchg
fldl
lods
aas
push
sahf
shll
leave
or
sub
inc
imul
fs
cltd
cmc
repz
add
xor
ss
js
add
dec
nop
jno
xor
adc
test
dec
leave
insb
bound
fisubl
mov
inc
push
gs
int3
cmp
mov
sub
cli
out
mov
shrl
mov
call
push
in
lret
int3
insl
adc
cltd
mov
adc
mov
cmp
ss
lods
xor
mov
cmpsb
subl
pop
xchg
and
scas
fs
loopne
sub
out
push
sub
stos
dec
adcl
or
into
fwait
add
fs
cmp
shrb
pusha
push
and
sarb
arpl
sub
mov
push
cs
movsb
sbb
mov
mov
dec
fistpll
decl
cmc
test
in
xchg
stos
ss
pop
xor
in
shr
in
jae
hlt
leave
cltd
inc
stos
xor
pop
dec
cld
mov
fists
aad
cwtl
loopne
cmc
lret
pop
sar
push
icebp
rep
clc
xchg
pop
sub
and
pop
ja
jmp
enter
mov
fmul
and
dec
fs
sub
aam
jge
adc
cli
ja
push
out
gs
add
mov
mov
stc
lods
xor
popf
repz
mov
aaa
mov
jb
push
mov
mov
out
cmp
out
std
add
out
or
push
rcr
or
in
jae
negb
cmp
fwait
push
insb
adc
dec
pop
cltd
pop
and
jmp
shll
mov
pop
push
inc
inc
jmp
pop
adc
outsl
xchg
fld
sahf
mov
scas
push
adc
mov
sub
xchg
sti
je
cmpsb
popa
and
arpl
fistps
jecxz
popl
imul
sub
movsl
and
stos
adc
pusha
mov
incb
lret
lods
dec
sbb
push
aas
jbe
scas
dec
mov
mov
jg
outsl
fiadds
sbb
fwait
cmp
jmp
pop
incl
sbb
popa
cmp
pop
sbb
xchg
rcll
mov
mov
push
loop
sahf
stos
and
fsubrs
fcmovnu
loopne
enter
lea
lods
mov
sub
sub
push
jmp
lahf
pop
xchg
in
shlb
repz
call
pop
cmp
jno
cmc
test
call
lahf
mov
clc
jmp
int
bound
sbb
push
es
dec
repz
mov
les
add
jbe
xor
cwtl
and
loope
lcall
inc
fistps
jg
mov
test
mov
adc
aas
and
adc
in
pop
mov
rclb
in
or
inc
mov
mov
xchg
push
sub
int3
mov
fisubrl
push
sbb
xchg
repnz
pause
shll
jbe
dec
adc
cmp
push
mov
rcrb
cltd
inc
das
xor
mov
pop
cmp
and
push
std
sub
sub
adc
inc
loop
sub
add
into
stos
ficomps
int3
mov
mov
ficomps
and
sahf
outsl
dec
and
daa
mov
mov
and
mov
jo
gs
sub
out
popf
repnz
or
mov
xorl
hlt
rorb
aad
rcr
cmp
sub
mov
test
add
lock
ljmp
adc
jp
fildll
xchg
ljmp
mov
and
dec
pop
sub
or
jne
dec
mov
incb
aam
jecxz
ljmp
in
push
inc
enter
jo
xchg
fsts
ds
adc
in
fsts
mov
insl
jp
add
jno
pop
cmp
and
sub
ret
bound
ss
out
mov
adc
or
aas
adc
cmp
push
sub
mov
test
loop
xchg
mov
dec
ss
or
mov
daa
sbb
xor
push
mov
cs
lret
ret
mov
xchg
into
mov
cmp
enter
pop
mov
lds
xchg
sub
enter
dec
and
mov
out
enter
xor
and
add
mov
enter
adcb
test
lret
repz
mov
push
mov
sarb
jl
dec
add
mov
dec
cmovg
ret
mov
ret
mov
insb
insb
add
adc
pop
pop
lret
ja
iret
push
cmpsb
in
aad
rorl
mov
mov
dec
and
cmp
inc
lret
popa
inc
daa
mov
gs
mov
pop
popl
sub
mov
mov
dec
movb
jae
movsl
decb
fldenv
inc
add
mov
jb
jle
inc
das
and
nop
cli
push
fidivrs
inc
or
aam
sarl
aaa
outsb
data16
ss
inc
fildll
push
sbb
dec
xchg
and
les
in
add
mov
add
xchg
hlt
repnz
jne
xchg
sahf
mov
sub
fmull
jne
push
divb
mov
pop
cmp
sbb
stc
pusha
pusha
mov
and
hlt
stos
sahf
cmp
dec
or
adc
push
imul
cmpb
enter
sarb
xchg
jne
adc
andl
insl
sbb
mov
mov
in
call
and
lods
xor
inc
movsb
jmp
add
je
sbb
rorl
sbbb
sub
or
in
int3
mov
push
sbb
push
sub
xor
cmp
adc
mov
dec
dec
fimuls
jb
out
mov
dec
jno
fmuls
cli
sahf
scas
jb
outsb
andb
inc
repz
test
adc
popf
mov
jg
enter
inc
stos
mov
xor
sub
mov
cli
das
pop
sbb
mov
add
sti
push
cs
roll
into
ljmp
into
sub
cmp
movb
repnz
clc
not
adc
nop
pop
mov
aaa
sub
xor
icebp
insb
and
mov
jno
sbb
add
cmp
imul
stos
jo
inc
cmpsw
dec
or
fnstsw
xor
insl
jge
xor
aas
or
add
or
jb
dec
mov
dec
push
loop
add
dec
lods
mov
test
std
lock
adc
or
jnp
and
leave
inc
adc
lds
adcl
inc
ljmp
aaa
pop
int3
xchg
or
ja
ret
int3
sbb
push
dec
test
xlat
push
mov
dec
ja
dec
pop
adc
mov
in
add
cwtl
sub
pushf
pop
aam
rcr
lea
insl
loopne
mov
sbb
inc
sbb
lock
out
fwait
and
adcb
xlat
add
or
cmpsb
into
push
pop
arpl
mov
mov
or
ljmp
into
jmp
cwtl
adc
cmpsb
cmp
and
mov
leave
jmp
jecxz
push
call
jae
jno
inc
mov
shl
lret
jg
fadds
insb
in
stc
test
pushf
test
cmp
pop
aas
push
mov
fcoms
push
xchg
xchg
adc
test
repnz
rolb
or
sbb
and
push
adc
pusha
xlat
bound
and
out
sub
rol
or
jne
lds
adc
jno
push
outsl
test
jbe
imul
les
add
leave
jecxz
adc
pop
dec
stos
add
push
in
jg
enter
push
xor
int3
or
leave
and
inc
jo
fdivrl
xchg
xchg
inc
movsl
mov
jmp
push
adc
pop
imul
testl
arpl
in
xchg
inc
adc
fisubs
or
pushf
cmp
pop
ret
aas
jbe
popa
push
sar
mov
lahf
pop
xchg
sbb
and
mov
xor
sahf
mov
mov
push
outsb
lods
push
mov
dec
pop
sub
lock
pusha
call
xchg
lock
mov
outsb
movsb
mov
add
scas
mov
mov
jno
out
pop
mov
push
adc
and
adc
dec
in
xchg
mov
outsl
sbb
add
fdivr
nop
xchg
xor
dec
sbb
lods
cmp
stc
out
cmpb
pop
mov
mov
sti
and
xor
sub
mov
in
std
push
test
or
int
in
push
dec
jno,pt
ljmp
lret
cmc
icebp
sub
cmp
xchg
inc
popa
adc
in
sbbb
insb
mov
add
fsubl
lds
cli
inc
jns
scas
jecxz
jp
iret
aad
stos
inc
cmp
sahf
xlat
ss
xor
scas
jg
js
pop
adc
xchg
lcall
into
mov
clc
jbe
mov
mov
lcall
repnz
mov
xor
adc
pop
fisubrs
jne
insl
sbb
jp
jecxz
movsl
adc
and
dec
lret
sub
jbe
inc
jge
dec
ret
cltd
fnsave
and
pop
out
lods
sbb
je
jmp
fprem1
nop
lcall
fwait
rcl
jl
addl
sbb
and
shll
pop
fs
jne
enter
lret
ljmp
dec
repnz
fimuls
lock
mov
mov
cmp
adc
cs
sub
adc
mov
movsb
enter
xchg
jge
inc
adc
aam
pop
jo
mov
js
dec
addr16
in
push
mov
fisttps
sub
xchg
out
negl
call
push
mov
sahf
outsb
push
lahf
outsl
aam
mov
jl
pop
xor
mov
xor
mov
sbb
fimuls
orl
mov
mov
insl
in
daa
inc
adc
xchg
mov
and
pushl
into
shr
mov
xorb
lret
daa
scas
dec
cltd
add
aad
push
mov
rcll
mov
pop
push
cmc
jg
icebp
icebp
sti
icebp
cwtl
xor
mov
or
jge
sbb
andb
bound
inc
fadd
sbb
inc
enter
jae
sub
xor
adc
pop
hlt
mov
out
stos
pushf
sub
xchg
lcall
ljmp
stc
addr16
fsubr
adc
andl
sbb
inc
sub
je
loope
ljmp
mov
test
jecxz
mov
inc
dec
out
pop
mov
fwait
xor
jp
or
adc
adcl
shl
jne
jne
ljmp
jo
pushf
push
dec
sbb
stos
loopne
mov
push
andl
repz
insl
or
loope
mov
push
fwait
jnp
clc
jmp
into
mov
test
xor
leave
jae
xor
mov
cmp
sahf
je
mov
xor
test
stos
adc
cmp
div
cmp
cmp
add
push
mov
inc
pusha
cmp
loopne
jnp
sbb
add
inc
jl
sub
mov
lock
pop
push
adc
mov
fcomi
mov
test
xchg
pushf
add
inc
insb
pop
xor
xchg
mov
pop
or
pusha
cld
jnp
icebp
scas
idiv
fdivrp
mov
inc
mov
scas
lret
inc
jmp
rorb
cmp
bound
faddl
push
mov
sbbl
adc
jp
loop
popl
das
fs
xor
aas
test
fwait
mov
cli
jecxz
imul
int3
dec
inc
rcrl
and
mov
inc
mov
mov
mov
rcrb
pop
das
rcr
xchg
mov
scas
and
jns
popa
cmp
mov
test
gs
mov
pop
jnp
test
mov
inc
loope
outsb
mov
cmp
mov
cwtl
add
jno
push
adc
jg
add
push
and
into
aam
in
pushf
lods
push
cmpsl
pusha
in
fbstp
push
fisubl
xchg
pop
mov
mov
fstps
test
xor
dec
frstor
xor
test
test
loope
stc
and
xorb
js
stos
mov
mov
pop
sbb
mov
jmp
scas
dec
test
cmp
add
loopne
xchg
jns
add
mov
nop
xchg
adc
push
sahf
add
dec
mov
testl
mov
bound
jae
add
mov
daa
xor
adc
pop
test
mov
sbb
pop
loope
bound
mov
fidivs
int3
mov
insb
cmp
pop
xlat
and
xrelease
or
or
sbb
clc
push
scas
loop
inc
xchg
push
pop
and
mov
ds
decb
outsl
outsl
out
rcrl
sub
sbb
adc
out
subl
add
inc
imul
lahf
test
outsl
enter
popf
icebp
adc
aas
push
shrb
inc
mov
out
sbb
in
addl
cli
sub
push
cmp
cmp
lea
sub
and
inc
mov
xor
and
xchg
loopne
pop
ds
sahf
sbbl
mov
mov
lods
and
jl
mov
sbb
scas
addr16
and
push
mov
pop
icebp
outsl
push
rcr
xchg
lahf
pop
or
test
push
adc
ss
pop
test
shll
xchg
lret
test
mov
or
or
aaa
and
push
jg
mov
insl
xor
jg
fdivrs
cmp
xchg
or
fistpll
fdivrs
pop
push
sbb
pop
xor
outsl
stos
fdivs
mov
out
insl
inc
xchg
ret
cmpl
mov
ljmp
mov
adc
and
hlt
sub
leave
enter
aad
add
arpl
mov
adc
mov
cmp
inc
add
adc
or
sub
test
mov
mov
add
push
add
call
adc
dec
push
stos
adc
mov
mov
mov
rcrl
xchg
mov
xchg
xchg
dec
dec
and
and
fldt
and
lahf
test
pop
xchg
fldcw
movsb
inc
and
daa
mov
mov
cwtl
push
ds
pop
outsb
mov
test
push
cmp
bound
fstpl
dec
shll
adc
inc
adc
cmp
addr16
mov
push
and
outsb
aad
sub
mov
mov
jg
les
xchg
inc
sbb
xchg
jne
sbb
dec
push
fistpll
or
and
pop
jmp
jl
loope
add
and
lods
mov
pop
test
push
test
sbb
mov
test
dec
js
pop
fstl
and
and
jmp
daa
dec
test
mov
into
test
out
cmc
repz
inc
pop
pop
jno
js
into
or
pop
fnsave
or
xchg
mov
inc
icebp
add
and
insl
dec
push
dec
mov
dec
fwait
lds
mov
mov
roll
push
ficompl
push
xchg
in
push
push
mov
fisubs
adc
sbb
ljmp
jb
push
mov
stos
add
and
lock
cmp
adc
gs
jg
clc
mov
fiadds
sub
js
and
loope
sub
fstl
sub
mov
es
pop
mov
sbb
repz
mov
jo
cld
inc
jmp
test
enter
fs
sub
pop
jno,pt
call
adc
aad
inc
adc
out
mov
mov
out
fnstenv
jge
or
pop
ljmp
sub
jo
arpl
pop
mov
push
stos
push
mov
aaa
push
cmp
test
pop
mov
xor
insb
outsb
je
push
jo
jne
dec
fsubrs
xor
movsl
insb
sbb
jo
enter
jne
or
sbb
or
sbb
dec
dec
xor
repnz
movsl
aam
inc
dec
and
fidivs
dec
fsub
xor
sub
xor
bound
jns
xchg
subb
mov
xchg
fucom
int
xadd
pop
xor
jecxz
or
push
pop
notb
xor
ds
bound
repnz
aas
ffree
lcall
mov
sti
pop
mov
imul
fsub
in
cwtl
fnsave
mov
mov
push
int
fcompl
sbb
xchg
mov
loop
iret
mov
idiv
adc
and
inc
xor
repz
or
nop
inc
cmpl
lods
ds
jle
cmp
or
mov
rcrb
mov
incb
adc
adc
hlt
ss
adc
aad
pop
jp
daa
jl
pop
or
scas
add
jmp
jmp
or
jns
outsl
pop
push
dec
and
mov
xchg
xchg
xchg
jbe
lcall
stos
cmp
jo
insl
adc
and
ja
in
movsb
or
int3
shll
pop
jns
lcall
repz
mov
jl
testb
xchg
or
clc
and
scas
mov
pop
pusha
cli
out
mov
outsl
fcompl
loop
mov
lock
in
mov
aas
iret
movsb
jle
mov
sub
loopne
and
cld
adc
pop
cld
sbb
sub
dec
lret
fcoml
xchg
lcall
ret
gs
fdiv
xor
cs
and
dec
dec
loop
ret
xor
sbb
jnp
cmp
mov
jb
xor
cli
ss
jl
out
mov
lret
idivb
shll
int3
shlb
xchg
jl
je
arpl
bound
ja
push
cmp
xchg
pop
dec
les
aam
xor
mov
or
insb
dec
mov
pusha
xchg
mov
das
int
xor
adc
leave
fldcw
and
out
jp
jecxz
add
js
popf
jle
mov
cltd
mov
add
sub
pushf
sub
lret
ds
imul
les
add
outsl
jno
into
cmp
add
stc
pop
loope
rclb
add
int
xchg
jo
pop
sbb
mov
rcrl
add
xchg
fimull
cwtl
movb
xor
add
adc
andb
addr16
sub
mov
push
push
repz
pop
push
lock
xlat
test
scas
clc
pop
push
bound
inc
pop
sahf
sbb
push
jle
xchg
sbbb
lods
int
inc
pop
jmp
sbb
mov
mov
mov
in
pop
jbe
aaa
or
lahf
inc
mov
lcall
aad
imul
push
jp
inc
jnp
nop
pop
mov
out
lods
inc
sti
inc
mov
mov
stos
or
sbb
sub
sub
ds
data16
dec
jg
xchg
outsb
jo
fidivrs
xchg
adc
xchg
and
and
inc
dec
xlat
scas
fucomp
xlat
jp
jg
mov
jae
mov
push
sub
inc
pop
mov
loopne
cmovs
negb
cld
lea
xchg
imul
out
hlt
out
jge
rcl
mov
xor
push
ror
ficomps
fdivrs
fmuls
arpl
imul
pop
sbb
in
cmp
add
sub
lret
out
popl
cmp
pop
cld
ljmp
cs
daa
mov
add
fdivl
push
xlat
loope
test
jmp
mov
cmpb
cmp
loop
fdivrp
xor
out
ficomps
outsl
push
xchg
adc
add
aas
loope
enter
popf
push
out
add
xor
sub
push
fwait
pop
pop
inc
mov
xchg
fildl
or
dec
wbinvd
iret
adc
jnp
mov
nop
push
adc
jnp
xchg
cmp
xor
push
or
xchg
sbb
cmp
test
leave
stos
jo
fiaddl
add
xchg
imul
jbe
mov
pop
push
cltd
xor
jmp
xchg
sbb
sbb
repnz
add
lods
sbb
fsin
jg
scas
insl
mov
mov
mov
dec
and
lcall
rep
loop
and
dec
pop
add
or
testl
mov
aad
push
cmp
push
mov
mov
and
cmp
mov
cld
sub
je
sbb
test
jg
repz
dec
mov
pop
pusha
and
or
aaa
push
jmp
fwait
jb
jnp
inc
addr16
in
dec
jae
pop
in
sub
add
or
cmp
inc
mov
into
loopne
cwtl
jns
cld
xor
sbb
test
imul
mov
inc
dec
shlb
push
lds
and
bound
enter
hlt
jle
sahf
das
js,pn
cmpsl
dec
ror
add
fmull
stc
je
popf
jle
aaa
push
add
pop
add
xchg
sbb
pop
sbb
clc
push
push
sub
sti
xor
mov
push
add
push
hlt
lods
popf
lods
mov
fstpl
mov
inc
dec
test
xor
cmpsl
lahf
sbb
stc
jbe
push
insl
sub
dec
mov
sar
shlb
mov
outsl
cld
push
xchg
dec
mov
cmp
jmp
mov
adc
dec
cmp
lcall
or
sbb
ror
movsl
xorl
or
mov
lea
cmp
scas
adc
out
inc
fdivrs
rclb
pop
push
push
cmp
sub
inc
jl
icebp
repnz
mov
add
jns
push
iret
push
pop
sbb
cmp
jge
jnp
fcmovbe
ja
pop
icebp
sub
cmpsl
int3
mov
sbb
add
jae
pop
push
xor
call
cmp
insb
adc
and
cmp
sbb
mov
cmp
repz
outsb
pop
aam
lahf
outsl
test
daa
inc
dec
adc
lahf
sub
sbb
adc
adcb
sti
mov
and
idiv
mov
pop
dec
jnp
test
faddp
cs
in
xchg
imul
xor
or
mov
std
cli
bound
sub
js
popf
sarb
fstpt
stos
cltd
leave
dec
popa
or
mov
inc
xchg
mov
add
sti
xor
push
mov
loopne
fcmovnu
icebp
push
test
pop
and
mov
or
or
adc
popf
add
outsl
add
add
int3
lods
outsb
or
lock
or
mov
inc
loop
dec
imul
or
mov
cwtl
arpl
inc
push
mov
adc
xor
pop
xchg
scas
lcall
das
in
sbb
xchg
shufps
jo
andb
cmpsl
out
addb
jne
add
xchg
cmp
in
pushf
fisubs
adc
mov
repnz
push
rorl
cmpb
xchg
fwait
imul
add
cmp
idiv
ja
xor
xchg
jo
xchg
dec
adc
xlat
jmp
popa
mov
or
data16
add
dec
sahf
push
adc
pop
sbb
mov
or
rorl
ds
adc
xchg
arpl
mov
add
lcall
push
jmp
sti
jecxz
jecxz
ficomps
sub
icebp
fnstcw
jp
loopne
dec
mov
lahf
aas
rcrl
cmp
push
cltd
fldenv
bound
xor
adc
lahf
cmc
mov
lcall
inc
mov
cmpsb
add
push
out
lret
xlat
push
inc
mov
ss
push
jno
adc
fwait
ds
sbb
and
pop
out
mov
cs
mov
pop
cmp
inc
adc
pusha
je
push
xchg
movsb
xlat
xchg
movsb
push
arpl
jmp
and
xchg
aam
mov
test
loopne
or
lret
fucom
sub
mov
insl
sti
sbb
add
aam
scas
std
push
push
mov
mov
bnd
ss
or
rorb
mov
rdpmc
or
push
jo
or
repz
sbb
test
dec
shrl
push
sub
in
xor
and
push
out
cmp
in
or
shlb
addr16
movsl
mov
pshufw
rorb
pop
pop
sub
jge
rorl
adc
pop
mov
fwait
jp
mov
push
push
xchg
pushf
push
pop
aas
lock
jge
pop
inc
jno
es
or
or
test
push
popa
fucomp
sti
push
fistpll
fldl
leave
lcall
dec
dec
jns
fisubrl
scas
jbe
adc
adc
out
fs
xor
and
xchg
dec
dec
jno
dec
sarb
add
addr16
push
push
shll
jg
daa
cs
push
xchg
lret
les
adc
jmp
daa
gs
cmp
icebp
push
xchg
and
sbb
imul
fs
jns
je
xlat
das
sub
aaa
jmp
scas
dec
bound
aas
add
stos
mov
pop
mov
roll
nop
cmp
in
push
sub
mov
jl
rcrb
ret
xor
hlt
mov
push
sub
jecxz
enter
arpl
mov
push
movsb
shll
ljmp
std
or
xor
std
pop
push
lock
leave
ljmp
popf
pop
mov
stos
dec
cmp
xchg
repz
aam
inc
in
movsb
pop
or
mov
mov
mov
jo
add
xchg
sbb
or
cwtl
mov
lahf
pop
mov
sbb
cmpsb
sbb
cs
sub
insl
ss
jbe
xchg
into
rcrb
lods
insb
lret
movsl
cmp
jne
mulb
aad
mov
push
cmp
int3
mov
sbb
jmp
gs
pushf
or
or
ficomps
stos
loope
mov
inc
repz
or
in
lds
adc
outsb
mov
jle
pop
fnsave
lds
xor
in
mov
sub
push
jg
add
in
arpl
add
mov
pop
ficompl
pop
lds
xor
adcb
xchg
add
mov
cmp
mov
aaa
mov
sbb
add
out
popf
in
jne
and
lcall
pop
sub
xchg
sub
dec
push
loope
dec
cmp
sbb
lea
inc
outsl
inc
lds
ljmp
dec
outsb
xchg
mov
xor
fnstcw
inc
mov
es
imul
into
pop
lds
cmp
cmp
repnz
push
pop
sub
in
insb
les
sahf
add
addr16
nop
and
pop
aaa
gs
mov
or
jae
mov
xchg
mov
xchg
aad
cmc
or
loope
stos
lret
fwait
sub
xchg
pop
cmp
jne
adc
pop
add
movsl
inc
inc
add
std
jp
jp
cmp
ja
scas
mov
cs
xchg
pop
lret
adc
setae
jb
mov
push
cs
pop
lods
out
mov
lds
mov
sbb
sarl
scas
xchg
dec
xorb
loop
ficompl
daa
add
cmc
inc
add
jno
dec
mov
sub
sbb
pop
jno
je
ficoml
sahf
stos
popa
test
pusha
icebp
dec
jns
jge
inc
pop
in
mov
pop
sarb
cmp
outsl
mov
shr
cltd
pop
xchg
sub
xchg
xchg
fwait
and
lret
jb
pop
jmp
and
mov
fldl
sbb
in
or
outsb
fwait
adc
pop
test
mov
imul
xlat
sbb
xor
add
cmpsb
cmp
stos
sub
jecxz
mov
add
push
lea
jae
repz
gs
loopne
out
push
xor
xor
mov
int
and
sbb
lods
xlat
outsl
jb
cs
or
shl
les
iret
in
inc
add
insl
pop
inc
inc
sub
repz
out
call
xchg
dec
std
sbb
push
bound
adc
cmp
gs
fstpt
add
cwtl
jo
addr16
movsl
movsl
xor
xor
inc
lret
fisttps
sub
pushf
aaa
stc
pusha
xor
movl
sti
inc
call
jmp
inc
jae
repnz
cmp
cmp
xor
ds
sbb
fisttps
imul
inc
inc
movsl
push
sub
jge
dec
popa
sbb
jb
dec
out
jne
sahf
cs
push
pop
dec
add
push
xor
inc
pop
mov
xor
je
cltd
stc
inc
and
pop
in
fsubrp
arpl
and
fstl
pushf
push
cld
in
push
cmpl
and
cmpsl
das
jmp
push
enter
xchg
outsl
subb
aad
xor
arpl
inc
into
sarl
outsb
cmp
and
mov
cmp
outsb
popf
or
sldt
imul
mov
jge
sub
push
imulb
test
ds
xchg
jnp
addr16
js
and
fistl
jle
fmull
pop
js
sbb
push
fidivl
xchg
orb
lods
pop
bound
in
loop
arpl
inc
aad
lret
adc
test
test
int3
in
jbe
loop
push
push
pop
popf
cmp
inc
dec
xorb
jbe
pushf
sarb
icebp
xor
gs
idivb
out
push
ret
jo
jnp
mov
add
mov
imul
int3
cmp
fists
mov
notb
mov
add
adc
cwtl
inc
jb
dec
sub
jo
mov
push
jp
adc
mov
xor
out
fadd
and
insl
dec
popa
adc
sub
and
push
aas
push
xor
xor
aaa
loop
sbb
fildl
cmp
xor
mov
or
es
in
push
xchg
sub
push
insb
xchg
ss
cmpsb
pop
inc
aam
mov
adc
popa
sti
xchg
andl
sub
lahf
orb
jge
pop
cmpsl
test
arpl
ds
pop
in
filds
jbe
and
pop
dec
loopne
outsb
sar
jle
sahf
adc
test
mov
and
mov
cmp
imul
mov
mov
adc
jmp
adc
pop
mov
cmpsb
or
cmp
mov
cmp
fidivrl
jmp
mov
mov
sbb
popf
cli
out
inc
shlb
jmp
pop
ja
jnp
jl
xor
xlat
dec
fdivrp
aaa
ret
aam
xlat
pop
xchg
xor
in
pop
push
jb
dec
stos
repnz
push
cmc
hlt
xchg
sub
lods
fnstsw
fwait
mov
mov
xlat
xchg
inc
into
cltd
in
and
dec
mov
cli
cltd
das
mov
push
js
adc
and
inc
icebp
and
lret
cpuid
jae
pop
pop
shll
sub
sarl
jge
xchg
gs
pop
scas
mov
fcompl
mov
or
push
movsl
addr16
pop
dec
xchg
or
mov
sbb
xorl
xrelease
sub
xor
mov
xor
adc
sub
frstpm(287
pop
mov
push
mov
mov
mov
push
dec
dec
loopne
inc
and
mov
sti
repnz
xlat
xchg
jo
sub
xchg
lcall
in
mov
dec
cmp
sub
js
mov
add
sbb
insl
pop
dec
jg
mov
and
sub
mov
mull
xor
stos
xchg
shll
jle
mov
pop
or
or
push
loopne
push
sbb
pop
sub
out
pop
nop
ret
shrb
js
arpl
test
mov
cmp
or
or
xor
add
sub
mov
and
xchg
jle
pop
mov
shll
fwait
out
popf
xchg
cmp
push
addr16
pop
aam
cltd
fwait
sbb
push
dec
stc
xchg
test
aam
sub
cmp
out
jg
xchg
mov
bnd
outsb
push
pop
inc
mov
mov
mov
or
cmc
sbb
pop
mov
je
adc
sbb
inc
mov
repz
and
aam
inc
push
pop
in
addb
mov
push
arpl
mov
mov
mov
mov
mov
mov
pop
lahf
adc
adc
test
or
dec
std
jae
pop
loope
cmp
out
mov
icebp
clc
or
pop
cmp
sub
roll
stc
push
xchg
cmpsb
in
cwtl
jns
loopne
cmp
shrl
out
les
lcall
inc
clc
arpl
jg
mov
mov
mov
add
sub
xchg
cmp
dec
ficompl
arpl
into
or
add
adc
cmc
sub
je
ds
lahf
lds
pop
dec
fwait
sbb
lock
sbb
pop
dec
gs
sahf
jecxz
loopne
jle
imul
mov
fwait
mov
lcall
rcpps
cmp
movsl
mov
ret
jb
or
push
je
inc
clc
outsb
sbb
notb
dec
out
adc
xor
pop
imul
pop
fildl
cmp
cmc
push
fistps
lds
fists
xchg
mov
jecxz
sub
jg
jne
pop
out
adc
jno
insl
bound
jo
incl
stos
sub
push
test
sbb
xlat
lds
adc
mov
scas
cmp
sbb
mov
sub
mov
sub
leave
mov
adc
leave
and
jecxz
adc
push
inc
das
shrl
mov
add
popl
lods
dec
test
std
ss
mov
notb
movsb
push
in
inc
xchg
fadd
adc
shrb
dec
mov
and
mov
pop
xchg
xchg
test
mov
jp
popl
pop
sbb
stos
sub
in
daa
push
daa
cmpsl
fucomip
fstpl
cmp
add
jmp
jge
repz
jle
push
rcl
pop
loope
sub
inc
cmc
push
xor
add
push
add
testb
add
push
jbe
sub
sbb
cmp
fcoms
mov
jbe
ja
mov
dec
in
mov
adc
test
xor
bound
jmp
fildll
inc
cs
inc
xchg
pop
sbb
test
sub
and
scas
stos
sub
inc
sub
lods
shlb
ss
dec
inc
addl
nop
ljmp
loope
arpl
xlat
ss
test
in
dec
fucomi
add
cmp
xchg
cmc
dec
add
ret
ja
das
adc
cmp
jmp
in
cmpsb
dec
and
sbb
mov
fsubrl
out
daa
int3
xlat
adc
ret
lods
outsl
stc
sub
push
test
icebp
add
sbb
adc
pop
mov
stos
pop
lret
fwait
mov
fildll
cmp
gs
sub
icebp
inc
sub
leave
cmp
pop
les
pop
jmp
mov
cmpsl
pop
xchg
xchg
lret
fdivrl
es
stos
movsl
aam
cmp
lods
xor
xor
pop
sarl
jbe
call
xchg
cmp
shrl
cmp
pop
and
sub
lds
ds
mov
mov
cmp
subl
cmp
rolb
lods
pop
fimull
adc
fsts
movsb
mov
add
adc
jg
std
notb
movsl
mov
popf
pop
pop
fdivrs
div
outsb
inc
ret
imul
xchg
divl
inc
cmp
or
cs
stos
add
icebp
sbb
add
push
je
mov
mov
push
movsb
sbb
loopne
mov
ja
push
pop
das
popf
push
dec
xor
adc
lock
cwtl
nop
enter
lods
cmp
push
add
pop
mov
adc
enter
cli
imul
dec
push
cmp
or
mov
xor
inc
xchg
jne
push
cs
shlb
mov
movsl
fiadds
arpl
insl
jle
lahf
ds
jne
rorl
inc
int3
xchg
xchg
insl
jl
mov
mov
xor
loope
fs
insl
mov
mov
fiadds
dec
ljmp
int
fidivs
pop
inc
xchg
push
scas
out
inc
popa
cmpsb
lret
pop
ljmp
jnp
or
loop
push
and
xor
pop
test
rcrb
pop
in
push
push
jne
pop
mov
xor
mov
inc
mov
ss
pop
jg
fcmovnbe
lret
push
dec
ret
rolb
pop
sti
imul
call
aam
dec
dec
adc
cmpb
ret
test
ficomps
aas
mov
sahf
enter
addr16
sub
mov
jmp
mov
ds
inc
pop
inc
xchg
cmp
lods
jb
inc
and
push
pop
sub
in
jmp
sti
pushf
dec
pop
mov
sti
mov
imul
and
jne
xor
mov
dec
bound
add
out
push
add
jnp
rcrb
cli
xorb
out
bound
sbb
dec
arpl
xor
sub
cwtl
and
mov
pop
inc
dec
pushf
movsl
xlat
aad
test
pop
pop
sbb
jp
jno
aad
dec
and
call
adc
jle
orl
es
inc
xor
jg
cmp
jae
sub
dec
xor
jg
dec
std
popf
sarb
mov
jne
add
out
xor
lods
adc
sub
shll
out
sti
inc
mov
lds
es
push
cmp
imulb
cmc
add
shll
call
dec
stos
adc
and
daa
mov
dec
cmp
sub
fldenv
mov
sub
inc
inc
cmpsb
icebp
gs
pop
jae
addr16
dec
xchg
push
lock
and
test
mov
aad
test
je
roll
cltd
mov
stos
pop
dec
fcompl
sti
out
cld
psubb
adc
imul
std
stc
cmp
pop
jb
sub
mov
sbb
sub
insl
xlat
int
cmpsb
outsb
push
sar
rol
add
push
aaa
add
imul
xor
cli
js,pt
stc
arpl
and
or
scas
sub
iret
dec
orb
pop
testl
std
or
insl
cwtl
add
ss
jbe
out
icebp
test
enter
into
or
xlat
xorb
out
or
xchg
lcall
rorb
insb
mull
aas
in
mov
pop
test
imul
movsl
adc
mov
push
dec
mov
cmpsl
jns
fistps
popf
pop
data16
xchg
push
fld
pop
cmpsl
dec
push
jb
pop
mov
fnstenv
jle
insl
mov
cmp
ljmp
push
xchg
or
in
sbb
push
mov
pop
ja
or
fnsave
adc
rep
push
roll
and
out
std
das
ljmp
leave
push
push
cli
cmp
stos
mov
fs
daa
lock
ja
sub
test
dec
icebp
jb
stos
push
cmc
cmp
mov
mov
fimuls
cs
fsubl
in
inc
insb
fisubrl
cmp
xor
ds
push
clc
nop
inc
inc
neg
push
cmp
rolb
jnp
std
int
pop
mov
fldenv
loop
mov
ret
rorl
scas
loopne
xor
aas
in
sub
testb
xchg
mov
mov
sbb
cmp
test
xchg
jge
jge
icebp
sbb
jns
push
mov
repz
rcrl
jb
repz
test
or
or
jl
mov
cmp
xor
push
jmp
insl
pop
lock
sbb
pop
add
adc
int
pop
and
adc
shlb
jne
xlat
sbb
sbb
jmp
push
stos
loopne
mov
cs
xchg
or
inc
nop
aam
jnp
cmp
les
in
shlb
dec
add
cwtl
dec
insl
outsl
cmc
pop
sti
aas
jne
mov
pop
fsubr
pop
and
inc
push
test
inc
loop
imull
loope
in
in
cmp
sbb
jle
inc
fsubl
aas
aas
lcall
or
xor
sbbb
nop
xchg
cmp
gs
adcb
cmp
lahf
sbb
in
mov
mov
sub
insb
sbb
dec
pop
push
out
arpl
iret
pop
and
dec
mov
xor
mov
out
jbe
je
pop
sub
adc
jp
adc
sbb
pop
push
xchg
call
test
dec
sub
lea
lahf
mov
xchg
pop
mov
sbb
push
jmp
in
jns
ficomps
sbbl
outsb
in
arpl
mov
out
xor
jl
hlt
mov
fcmovne
sbb
sti
xchg
lods
jp
xchg
mov
dec
ljmp
sub
ja
out
rol
mov
lret
shrb
inc
add
mov
adc
pop
xlat
ja
jo
cmp
out
push
jg
mov
gs
ror
cmp
sbb
mov
jnp
and
aam
sbb
pop
mov
fcomps
cmpsb
in
and
movsl
xor
lahf
leave
jl
mov
loopne
pop
add
mov
fcomi
and
or
aam
or
clc
or
cltd
xchg
push
xlat
add
in
ss
outsl
xchg
into
or
mov
adc
hlt
fstpl
lret
push
das
push
jae
push
scas
cmpsb
int
out
cmp
icebp
xlat
jno
subb
in
fcoms
push
cltd
jl
ss
cwtl
les
push
loopne
scas
xchg
les
insb
or
int
mov
mov
and
stos
enter
push
iret
imul
jp
adc
mov
popf
movsl
movl
idivb
jp
and
test
inc
add
in
push
insl
mov
sbb
or
shlb
aam
adc
lds
adcl
int
inc
inc
int
in
adc
insb
test
lods
sub
mov
bound
sbb
jae
cmp
xchg
inc
loope
call
pop
stos
fcoms
inc
cwtl
mov
push
dec
fnstcw
dec
lea
loope
xor
movsl
popa
mov
xchg
pushf
mov
imul
repnz
sub
push
es
mov
stos
xor
loopne
into
mov
mov
loope
enter
clc
mov
jmp
lea
cmp
jnp
and
in
popf
mov
sub
lahf
cmp
cld
jno
out
jle
jmp
sbb
sbb
xchg
aaa
xorl
lret
psubq
sub
push
inc
mov
push
mov
jb
xchg
mov
or
inc
mov
in
inc
cmpb
pop
es
sbb
xor
xchg
xchg
adc
out
push
pop
negl
jo
sub
or
sub
jg
mov
push
jb
mov
dec
push
negl
cmp
cwtl
mov
cmp
movsb
pop
mov
or
xor
mov
and
outsl
mov
mov
test
in
shr
xor
push
cwtl
fisubrl
add
rcl
iret
pop
arpl
pop
mov
sbb
mov
sub
cmp
or
cltd
popf
and
mov
sbb
sarl
jno
lods
into
int3
mov
sub
jne
xchg
fwait
mov
test
fwait
push
dec
or
bound
push
lds
mov
add
repnz
xor
shlb
loop
xlat
adc
or
test
loop
mov
inc
fistl
aad
inc
cwtl
cmp
inc
cwtl
sbb
iret
pop
ljmp
insb
cmpsl
add
enter
icebp
lods
insl
enter
or
push
es
adc
iret
xor
adc
add
call
in
push
or
nop
xor
jno
mov
filds
movsl
sub
ret
addl
rsqrtps
or
xchg
iret
es
shll
negb
bound
jmp
mov
inc
or
test
data16
mov
jb
daa
inc
jecxz
in
std
mov
mov
mov
sbb
dec
cmp
push
fistpl
push
cli
stos
dec
filds
dec
out
je
sbb
jecxz
xchg
push
add
cmpsb
lahf
xor
mov
test
repz
xchg
andb
lret
jle
stos
cmp
pop
addr16
repnz
sub
lcall
inc
pushl
xchg
jmp
jmp
movsb
int3
mov
mov
xor
dec
push
adc
jbe
jle
dec
adc
popa
sti
mov
pop
test
lea
in
adc
push
ret
pop
fnstenv
inc
add
add
popf
mov
xor
andb
test
jo
or
cli
jbe
enter
mov
push
sbb
stos
faddp
mov
ret
add
push
sbb
xor
pop
loopne
out
test
push
dec
jnp
xchg
gs
push
sahf
lock
push
jle
jecxz
adc
xchg
ret
out
cmpsb
lret
ret
nop
mov
dec
addr16
stc
std
xchg
lods
inc
lret
rcl
ret
pop
adcl
jne
push
hlt
mov
gs
jae
dec
out
hlt
in
xchg
lods
scas
arpl
sar
mov
pushf
les
lock
lods
fwait
lods
or
or
addr16
push
adc
or
shlb
jmp
xchg
je
js
and
iret
pop
ret
xchg
jo
stos
cmp
enter
and
sbb
add
lret
inc
outsl
xor
repnz
movsl
push
out
insl
lcall
xchg
xchg
dec
inc
into
addb
fcmovne
clc
in
in
out
pop
xchg
or
outsl
loop
in
loop
dec
or
add
into
sahf
idivl
test
mov
cmp
popf
cmpsl
in
pushf
ss
lahf
dec
push
dec
or
das
xor
pop
mov
testb
mov
cli
sub
dec
das
addr16
mov
pop
mov
dec
push
dec
push
fidivl
pushf
cmp
fwait
scas
cli
enter
clc
pop
dec
aaa
fisubs
les
out
das
scas
fnstsw
push
adc
ud2
ja
repnz
movsl
inc
test
inc
loopne
cmp
and
test
outsb
and
cmp
stos
insl
dec
mov
mull
mov
repnz
movsl
sub
and
data16
mov
sbb
xchg
xor
out
out
loop
into
shrl
pop
int
sti
push
sbb
pushf
mov
mov
mov
xor
fnstcw
fidivs
dec
mov
scas
stc
adc
daa
mov
xchg
test
jbe
cmpsb
lods
in
xchg
jbe
imul
pop
ds
sub
sarb
mov
stos
lock
lret
in
in
fidivrl
sbb
mov
xchg
cmp
cmp
cltd
push
jae
lods
inc
inc
mov
adc
out
or
insb
sti
je
lret
inc
adc
xor
mov
mov
sbb
xchg
or
repnz
sbb
xchg
in
shl
pushf
mov
sbb
js
mov
jl
sub
jmp
push
push
outsb
xchg
xor
inc
inc
enter
inc
scas
sub
pop
cld
push
jmp
addr16
jno
mov
adc
repnz
add
xchg
cmp
arpl
lods
mov
aaa
stc
cltd
jne
jl
xor
jg
xlat
mov
movsb
in
jno
inc
fcomip
mov
sbb
jl
push
and
mov
icebp
outsl
push
cvtps2pd
in
stos
jne
and
fsub
adc
mov
mov
dec
stc
adc
mov
push
xor
or
mov
or
xor
mov
xor
out
xchg
sbb
sub
cmp
and
in
aam
jmp
das
fdiv
js
or
sbb
pop
out
cvtdq2ps
insb
mov
pushf
jo
mov
sub
add
cmp
cmc
enter
rorb
jge
cmp
aad
adc
dec
mov
jmp
repz
sub
mov
imulb
cmp
imul
sbb
rorb
jns
psrlw
add
xor
pop
xchg
mov
inc
dec
sbb
mov
andl
icebp
movsl
fbstp
outsb
gs
push
mov
xor
mov
mov
mov
sub
stc
shl
xchg
mov
sahf
cmc
dec
xchg
cmp
shl
insb
cli
mov
add
mov
fldt
sti
imul
iret
xchg
sti
fdivp
or
inc
jge
sbb
bound
mov
mov
andl
or
dec
xchg
enter
pushf
xchg
xor
pop
jl
int
or
xor
aaa
pop
pop
jns
in
lds
jle
subb
jo
scas
adc
mov
aam
rcl
enter
mov
in
dec
dec
scas
ret
fldt
sub
icebp
and
xchg
stos
inc
add
and
test
test
cld
iret
les
loop
jge
xchg
xchg
enter
pop
mov
dec
add
xchg
lods
in
mov
xchg
in
fwait
mov
and
mov
or
scas
sub
hlt
mov
mov
adc
sbb
pop
push
fmull
pop
sub
nop
sbb
jb
clc
cmp
xchg
inc
fstpl
xor
mov
fstps
pop
cmpl
cs
stos
fbstp
das
sbb
xor
je
aaa
cltd
int
ljmp
ret
inc
adc
test
adc
pop
scas
pop
lcall
add
jno
cmp
jl
dec
jbe
cs
inc
fmuls
fiadds
inc
cld
leave
mov
stc
push
cltd
mov
int3
popf
addr16
orl
sub
inc
sub
stos
jne
cmc
shl
lret
in
out
out
sub
aaa
push
sbb
push
jge
decb
mov
jle
or
pop
pop
mov
ja
lcall
cmp
sarl
mov
je
test
xchg
insb
xor
xchg
ja
sbb
add
push
addr16
push
add
mov
nop
out
filds
ljmp
mov
add
addr16
cmc
fiadds
hlt
sahf
je
cld
xor
mov
mov
add
mov
mov
bound
lret
ljmp
sbb
xchg
std
cmpsl
or
into
and
cmp
call
push
jne
lret
stc
cltd
mov
mov
ja
jns
cmp
stc
mov
mov
and
and
ss
push
mov
pop
dec
ds
push
iret
aaa
jge
mov
pop
aaa
add
xlat
out
nop
pusha
aas
rcrl
xchg
lods
cmpsb
jle
xor
adcb
stos
pop
push
sahf
je
jle
sbb
mov
sub
sbb
call
add
in
call
or
xor
inc
inc
jne
inc
fimuls
push
mov
xchg
jl
lret
in
into
jns
xchg
std
pushf
dec
pop
dec
sahf
xchg
sbb
sbb
xor
int
out
out
mov
inc
or
mov
xchg
cmp
mov
aad
push
lret
aas
shl
les
jno
cmp
lods
movsb
ret
cmp
push
or
sbb
and
std
pop
push
mov
xlat
sbb
je
or
fmull
jg
add
rcl
mov
mov
subl
push
jge
int3
sbb
push
in
lahf
gs
pusha
test
push
mov
daa
pop
xor
xor
testb
arpl
stos
loop
inc
cmpsb
outsb
adc
pusha
dec
and
jmp
ljmp
and
lods
and
aaa
adc
xlat
cld
mov
adcl
ret
stc
popl
xor
test
int3
mov
mov
test
mov
aad
sti
xchg
repz
sub
pavgb
imul
mov
std
pop
das
jnp
adc
stos
xchg
xchg
fwait
and
ds
sahf
xlat
jp
lcall
rcll
lds
sub
pushf
call
lret
mov
jne
out
mov
sahf
iret
pop
arpl
icebp
and
cmp
rcrl
and
rcrb
ror
jae
scas
pop
push
rcrb
push
add
int3
or
push
add
rcl
inc
stc
fincstp
addb
mov
lock
test
pop
jp
mov
jnp
mov
out
mov
cmpsb
mov
jno
sub
arpl
jo
jecxz
pushf
add
xor
xlat
or
cmp
sbb
jns
xchg
mov
inc
sbb
enter
idivb
pop
lret
jle
sub
ret
dec
pop
and
movsl
xor
cmpl
data16
jle
imul
sbb
push
add
hlt
push
loopne
ljmp
pop
inc
pushf
inc
pop
xor
out
pushf
gs
dec
stos
jle
clc
hlt
fidivl
test
xor
insl
inc
jno
ja
scas
dec
push
push
icebp
cld
test
cmpsl
push
and
jb
sbb
imul
mov
js
mov
cs
adc
pop
out
ret
cmp
and
stos
xchg
cwtl
icebp
mov
push
enter
pop
cwtl
in
loope
jle
or
mov
xchg
mov
push
mov
mov
sbb
sbb
leave
inc
push
popa
aas
pop
push
xchg
test
xor
shl
jns
push
push
cmc
xchg
pusha
mov
inc
cmovle
out
dec
mov
in
leave
gs
xchg
adc
pop
scas
lds
mov
pop
and
jno
loop
inc
or
xchg
mov
pop
pop
testb
out
cmpsb
pop
leave
mov
add
or
je
out
call
pop
mov
out
sbb
mov
popf
pop
movsb
mov
outsl
fsubs
in
movsl
shlb
in
xchg
rolb
aaa
mov
inc
push
pop
mov
xchg
cmpsb
inc
daa
or
incb
xor
and
iret
cld
jecxz
cltd
or
adc
sub
adc
enter
sbb
std
inc
inc
clc
jge
div
mov
xor
jb
frstor
inc
jmp
fs
cld
mov
rcrl
mov
subl
lock
inc
mov
into
inc
cmp
mov
mov
loope
jns
pop
sub
jecxz
ljmp
sbb
lds
stos
and
pushf
dec
rcrl
aam
stos
dec
stos
inc
push
mov
sar
std
shlb
cmpsl
xor
in
sbb
and
lret
add
pop
lods
ja
aam
or
pop
mov
mov
popa
fstpl
push
add
mov
add
inc
mov
jg
ret
shll
xor
in
lods
scas
pop
ds
and
rol
sti
shll
movsl
sbb
inc
add
shrl
add
ds
add
jecxz
dec
fadd
pushf
xchg
pusha
inc
in
into
ror
push
scas
xlat
mov
in
es
ret
scas
push
cltd
mov
inc
push
cld
mov
jmp
jbe
cli
insl
jl
push
xor
dec
insb
push
ret
leave
or
and
inc
inc
out
and
shrb
bound
repnz
mov
pop
sbb
ret
mov
loopne
sbb
hlt
loopne
iret
insb
jp
scas
jge
ret
xor
jne
add
imul
mov
es
call
data16
popf
testb
ss
imul
and
and
pop
dec
stc
mov
je
lods
sub
leave
push
xor
cmp
ret
lahf
push
sbb
mov
shl
inc
ficomps
xor
inc
inc
fmuls
add
mov
fisttpl
out
std
sti
stc
mov
outsl
pop
imul
sub
mov
dec
xorl
dec
int3
stc
lret
mov
mov
int
mov
test
cmp
cmp
adc
xchg
pop
addr16
insb
xlat
out
insl
loop
loopne
ret
ljmp
add
mov
jns
shr
mov
inc
xlat
iret
testl
cmc
in
sbb
jmp
cmp
mov
xchg
adc
jp
cld
dec
faddl
pop
mov
mov
mov
cwtl
sbbb
mov
push
mov
xor
scas
fiadds
out
sub
fnstcw
movsb
inc
pop
sarl
lods
and
ljmp
subl
push
outsl
sahf
cmp
add
mov
repnz
test
call
arpl
insl
cmp
lds
lds
rdmsr
dec
int3
mov
cmp
cmp
cmc
mov
addb
fdivl
pushf
inc
pop
xorb
push
xchg
jp
lcall
adc
cmp
push
cld
inc
inc
xchg
dec
popf
loope
jne
ljmp
push
push
sub
push
cltd
fiadds
or
sahf
inc
in
jns
pop
add
aas
or
mov
or
and
fucomp
pop
sub
jns
add
mov
push
sarl
lock
outsl
filds
leave
add
dec
stos
inc
push
push
dec
cmpsb
and
pop
mov
mov
aad
insl
jnp
add
dec
stos
rorb
push
mov
orl
mov
mov
cmc
pushf
hlt
je
divl
xchg
sbb
adc
xchg
sbb
fisubl
adc
sbb
sub
test
dec
xchg
mov
loopne
cmp
xor
daa
gs
jns
cli
ret
das
inc
dec
insb
cmp
fisttpll
cmpsb
mov
dec
hlt
cwtl
loopne
ja
sub
and
fnsave
and
dec
movsb
ret
jecxz
xchg
adc
sub
leave
and
testl
cld
fwait
xor
sbb
xor
pop
orb
mov
push
cli
xor
mov
cmp
mov
movsl
jbe
cmpsb
roll
push
test
cli
js
sub
fs
daa
adc
cli
sub
xchg
pop
sub
loope
push
xchg
mov
mov
loop
jbe
sbb
mov
call
push
clc
dec
in
mov
push
mov
xchg
fsubs
mov
stc
lret
mov
into
pop
mov
xchg
mov
sbb
jl
push
faddl
xchg
shrl
testl
pushf
inc
sbbb
sub
clc
test
movsb
lds
stos
xchg
lea
cltd
sti
pop
dec
adc
rcl
lods
jge
dec
xchg
mov
mov
mov
cmp
fidivrs
imul
movl
data16
sub
mov
dec
fistpll
imul
stos
inc
xchg
sarl
int
faddl
or
mov
cmp
popa
outsl
jae
lds
bound
mov
movsb
push
insl
lods
das
ja
mov
fdivrs
sbb
insl
mov
andl
outsb
fldt
push
out
test
push
aaa
movsl
push
dec
shll
inc
xchg
int3
cmp
lahf
dec
jb
push
fnstsw
pop
mov
fidivrl
mov
das
repz
jecxz
pusha
mov
jle
loop
jle
mov
xor
setp
sbb
rolb
icebp
xchg
in
or
xchg
jp
and
data16
push
jle
sbb
xlat
mov
mov
outsl
mov
and
or
cld
iret
fsubr
loope
inc
outsl
loopne
pop
xchg
aaa
lds
mov
lsl
push
insl
sbb
mov
mov
pusha
scas
test
arpl
lret
xchg
pusha
inc
int3
frstor
mov
sbb
cld
jo
jne
and
inc
insb
outsb
stos
adc
and
outsl
xchg
aad
icebp
push
nop
mov
sub
pop
dec
scas
mov
das
shll
subb
nop
mov
mov
mov
mov
sub
fstps
or
or
into
sbb
mov
push
loope
std
adc
xchg
rsqrtps
mov
nop
fiadds
movsb
pop
inc
ret
insb
loope
ljmp
push
push
dec
repz
push
xor
jge
movnti
mov
mov
dec
xlat
mov
sbb
fsubrl
adc
mov
push
cmpsb
mov
and
fildl
sub
xchg
mov
scas
push
cmpsl
je
xor
inc
stos
jo
mov
cltd
jmp
outsb
adcl
pop
push
push
lods
pop
shl
lods
ss
dec
xchg
jo
cmp
dec
cmc
insl
jp
dec
test
aad
ret
or
lret
add
add
out
loop
pop
xchg
addr16
stc
scas
xchg
iret
adc
xor
dec
xor
in
imul
cmp
inc
adc
or
shll
or
pop
fwait
pop
pop
imul
rorb
pop
add
jecxz
ror
inc
lret
jp
mov
cmpsl
sub
jmp
lods
addr16
lahf
xor
and
shll
aad
adc
mov
mov
dec
mov
push
or
ja
out
dec
dec
dec
dec
push
rcrb
lahf
imul
shll
gs
xor
test
scas
jle
cmp
sub
repz
mov
test
and
mov
pop
ds
movsbl
ret
cwtl
jns
cmpb
dec
mov
push
das
ss
push
push
or
mov
mov
jnp
sub
mov
jb
jl
movd
and
sbb
je
add
adc
xor
cmpsb
cmpsb
das
mov
cmp
ja
outsb
pop
or
push
jbe
xchg
popf
in
pop
xlat
lods
xchg
mov
mov
sbb
jle
or
nop
xchg
lret
pop
lds
xor
jns
and
cmp
or
mov
mov
gs
sarl
and
lret
inc
push
ret
lahf
sarl
cmc
ja
push
lret
inc
mov
fisttpll
incb
test
arpl
mov
es
imul
data16
jnp
fwait
sbb
and
out
jmp
pop
xor
cld
xchg
shrl
arpl
mov
popf
cmpsb
add
lcall
pop
and
lds
leave
jb
pop
jle
inc
mov
cmc
fstl
loop
or
push
je
mov
std
stos
sub
or
es
repnz
imul
aaa
rolb
sbb
in
mov
out
repnz
xchg
mov
pop
mov
les
lods
ficomps
cmc
cmp
and
mov
int3
les
pop
mov
dec
mov
daa
dec
inc
mov
mov
movsb
cmp
jns
lret
sarl
pop
out
loopne
sti
cli
cmc
lods
stos
mov
or
add
xor
adc
imul
mov
stc
or
lds
ficomps
int
loop
adc
add
out
dec
iret
lret
pop
or
and
into
xchg
std
dec
add
sub
cmp
pop
xor
lds
sbb
sar
stc
add
push
lret
inc
mov
cmpsl
cwtl
lea
xchg
movsl
aas
stc
data16
mov
fucomi
xorb
push
add
add
rclb
jo
cld
mov
in
adc
int
mov
sub
cmp
mov
xor
sub
pop
xchg
push
clc
js
lahf
pop
ret
repz
cmc
jmp
sbb
cmp
lret
in
cmp
movsl
mov
push
iret
or
dec
popa
mov
lock
sub
scas
scas
dec
jnp
push
movsl
dec
push
repz
xor
ficomps
dec
xor
cwtl
stc
movsb
add
notl
sub
jo
xor
aaa
int
pushf
mov
iret
push
es
aam
xchg
mov
mov
sbbb
or
dec
xchg
add
cmpsb
aas
jns
push
jl
out
mov
dec
pop
lcall
sbb
lods
adc
ficomps
fwait
sti
pop
dec
push
aad
cmp
jl
bound
xchg
and
shlb
and
sub
aam
inc
mov
xor
sbb
xchg
pop
sub
mov
push
lcall
aad
orb
fwait
push
inc
add
lods
mov
cltd
scas
bound
das
in
jb
aas
nop
loop
test
push
mov
xor
jge
inc
test
jl
adc
addr16
cmc
pushw
lods
ret
or
in
sub
xchg
and
sub
dec
ror
add
in
xor
cmp
or
jmp
mov
test
fidivrl
adc
xor
cmp
or
insl
inc
or
and
add
imul
test
into
stos
jl
pop
add
ret
jns
xor
xor
test
inc
inc
fwait
insb
xchg
mov
in
loop
mov
sbb
xchg
in
mov
xchg
movsb
jg
aaa
jl
mov
stos
and
xor
push
repnz
mov
or
and
mov
cmpsl
xlat
pop
xchg
jo
cmp
rclb
push
sahf
mov
and
outsb
and
jge
rcrb
test
or
push
add
sahf
adc
mov
sub
cmc
fstpl
add
idivb
movsb
into
dec
push
cmpsl
jne,pn
push
loop
inc
leave
outsl
jl
cmpsb
aas
ret
jmp
ljmp
pop
sbb
add
mov
mov
dec
or
cmp
jno
shl
scas
enter
and
sub
imul
lcall
fstl
mov
xchg
into
push
adc
adc
lcall
mov
mov
arpl
out
hlt
mov
dec
stos
mov
push
pop
cld
lcall
cltd
sbb
push
outsb
xor
inc
xor
outsl
cmp
push
mov
push
or
adcb
cmc
cmp
add
cli
pop
dec
pop
inc
adc
adc
xchg
pusha
pop
std
push
imul
xchg
cmp
retw
jne
ficompl
fdivrs
call
adc
xor
or
das
adc
jnp
test
clc
popl
push
and
mov
sub
push
ret
adc
jmp
fidivrs
jg
pop
test
adc
sahf
pushf
jne
in
ds
imul
cmpsb
or
shr
ffree
iret
ret
mov
pop
sub
mov
adc
push
mov
fdivl
ret
mov
fs
enter
inc
aad
and
loopne
xchg
add
and
xor
outsl
or
push
repnz
inc
ret
pop
scas
push
scas
mov
into
push
jb
inc
fwait
sbb
lds
test
std
inc
popf
aaa
orl
cli
cli
mov
push
scas
mov
xchg
jne
fiadds
cwtl
jo
cli
out
inc
int
dec
pop
jp
adc
xorb
shr
and
lret
inc
mov
pop
sbb
and
mov
subb
cmpsb
clc
imul
cwtl
fdecstp
sarl
pop
mov
push
cmpb
cmc
aad
pop
testl
gs
stos
stc
addr16
lea
mov
jae
bswap
cmpb
icebp
sub
xchg
out
jns
sbb
stos
mov
or
mov
outsb
adc
addb
jo
and
inc
and
mov
mov
add
repz
mov
out
inc
and
xor
and
bound
dec
pusha
les
pop
push
sar
nop
dec
mov
mov
cwtl
outsb
jae
pop
push
sbb
cmp
push
push
mov
mov
push
sar
pop
pushf
in
enter
pop
orl
addr16
out
mov
aaa
ds
mov
cmc
or
roll
xchg
das
jmp
xor
repnz
dec
icebp
aam
dec
xchg
idivb
imul
adc
loopne
inc
sti
insb
mov
dec
push
out
pop
je
fidivs
icebp
mov
jae
aaa
call
cmp
aam
out
mov
push
xchg
and
xlat
xlat
pop
scas
daa
ss
xor
aaa
pushf
sbb
mov
test
add
xchg
std
sbb
movsb
mov
xchg
and
rcrl
lods
dec
in
xor
pop
sub
imul
rcrl
cmpsb
fcmovnbe
movsl
adc
sbb
cmp
pop
movsb
adc
fsubl
cmc
pusha
fists
mov
fdivs
or
push
inc
lea
jp
push
mov
shr
inc
jno
pop
pop
dec
rcll
pop
pop
sub
or
frstor
out
jae
lret
mov
loopne
out
mov
xchg
inc
dec
sbb
pop
jge
or
xchg
pop
cwtl
cmpsl
jnp
push
shll
sbb
cmpsb
mov
bound
imul
pop
aaa
in
xlat
aad
out
pop
rcl
nop
lods
gs
cmc
ljmp
pop
push
lods
add
lods
bound
jb
jno
clc
test
sbb
xor
ljmp
lds
pop
dec
imul
or
fadds
loopne
cmpb
jecxz
cmp
mov
add
inc
or
xchg
scas
bound
rol
xchg
les
pop
fnstsw
dec
inc
out
test
clc
in
cmp
into
mov
cli
xchg
dec
sahf
out
xor
cmp
dec
fs
insb
push
adc
inc
pushf
xchg
loopne
stos
jo
add
repz
in
aam
scas
icebp
ret
xchg
inc
icebp
mov
test
sbb
in
sub
xor
mov
inc
inc
sub
sbb
cld
mov
ret
mov
shlb
mov
adc
jmp
pop
lret
movsb
sti
xlat
inc
mov
adc
aaa
in
push
cmp
imul
fadds
mov
lret
or
sbb
adc
mov
or
sub
xchg
pop
imul
loope
sti
fisubs
nop
push
add
sub
je
adc
hlt
sbb
fcmovnu
push
cmp
shl
pushf
or
jle
cmp
xchg
cmpsb
jb
mov
mov
xlat
push
dec
fsub
push
xchg
xchg
pop
push
out
mov
leave
jge
mov
test
add
aaa
inc
push
mov
xchg
sub
mov
dec
push
vpaddq
lahf
mov
pop
lock
push
ret
jo
mov
int3
mov
mov
mov
test
addr16
sbb
rorl
mov
dec
dec
fldenv
push
leave
mov
call
gs
les
inc
xchg
in
idiv
xor
dec
lea
imul
jb
test
jne
cmpsl
ds
gs
out
loope
dec
ds
sbb
jg
cli
sahf
xor
and
ja
inc
mov
stos
jp
xchg
gs
cmp
into
mov
lret
xchg
and
mov
dec
lock
and
icebp
aam
fs
lcall
xchg
sbb
cmp
jne
sbb
xor
pop
xchg
sti
outsl
pop
and
fisttps
fwait
adc
pop
je
pushf
in
jnp
stos
pop
and
add
dec
add
xor
movaps
mov
loopne
xor
sbb
mov
sbb
jle
outsb
das
add
push
sarb
mov
mov
sbb
jno
pop
rorb
pop
popf
sbbb
push
pop
inc
movsl
push
insb
push
mov
dec
push
pop
mov
aam
mov
aaa
ret
int3
inc
cmpsl
mov
jp
push
sub
sub
popf
and
mov
mov
xchg
cli
xchg
loope
leave
inc
jbe
ret
pop
push
in
sbb
mov
adc
outsl
jp
data16
cmp
aad
ds
mov
inc
mov
xchg
push
scas
push
dec
outsl
mov
icebp
mov
inc
in
shl
clc
nop
mov
sub
in
sub
es
sahf
aam
and
repz
mov
loop
shrb
test
dec
movsl
shrb
int3
jb
in
mov
popf
jmp
or
sbb
pop
adc
cmp
jns
loope
inc
mov
adc
dec
pop
inc
jp
loopne
dec
frstor
int3
in
dec
mov
jp
mov
inc
fiadds
add
inc
dec
pop
sti
ret
dec
add
adc
inc
pushf
xor
jne
xchg
jae
in
sbb
and
dec
jge
push
mov
repnz
fidivrs
out
xor
lahf
mov
jg
lods
push
movsb
add
sbb
mov
dec
das
lock
shlb
dec
dec
outsb
adc
shrl
cmc
out
jg
mov
mov
les
ja
inc
jg
das
sbb
call
mov
jnp
cmp
add
nop
and
mov
xchg
mov
sub
mov
fs
hlt
mov
pop
shlb
fidivs
fdivs
xchg
out
out
or
cltd
gs
out
mov
cmp
mov
test
jge
dec
xchg
dec
popf
cmp
pushf
hlt
mov
cmc
inc
movsl
push
xor
adc
or
jns
movsb
push
mov
fwait
and
insl
pushf
into
adc
mov
ja
xor
mov
xchg
dec
aam
shrl
mov
mov
ret
ljmp
clc
ret
fisubrs
jmp
jae
mov
lods
repnz
lcall
loope
outsl
rclb
sub
fcmovnbe
push
loop
rorl
inc
xchg
test
dec
sub
dec
cmp
pop
xchg
or
ds
or
jne
lock
mov
cli
mov
pop
or
daa
push
popf
lret
and
cmp
sub
leave
adc
cwtl
aad
das
int3
and
es
dec
or
dec
cmc
adc
pop
pop
adc
pop
push
call
xchg
cmpb
xchg
and
push
pushf
or
add
sub
jae
jne
adc
pop
pop
ret
pop
pop
outsb
fwait
insl
enter
adcb
mov
adc
xor
shrb
xchg
movsb
xor
sbb
mov
jns
jmp
rcll
jl
in
adc
imul
loope
lods
in
pop
outsb
scas
movsl
pop
or
ljmp
ret
or
mul
ss
sbb
cmpl
and
aas
or
mov
stos
mov
cmp
or
stos
dec
pop
fidivs
push
or
sub
sbb
test
xchg
aam
test
jb
fdivrs
push
jno
int
sarl
push
rclb
sub
xchg
jg
pop
or
mov
incb
movsl
mov
inc
jl
mov
push
inc
dec
sub
pusha
push
add
gs
mull
jbe
fidivs
insl
inc
test
sarl
stos
cmpb
cmp
loope
loopne
int3
push
xchg
pop
jl
mov
fstpl
pop
or
sub
xchg
aad
insl
adc
js
cmp
sub
xor
les
mov
shll
jg
imul
loopne
cmp
xchg
imul
cmp
xor
stc
in
push
jge
test
xor
inc
das
addr16
fwait
aad
xor
into
jne
daa
push
push
sbb
mov
push
leave
cmp
sub
xchg
fwait
cmpsl
lcall
jns
xor
sti
lods
xchg
addr16
mov
cmp
sbb
mov
pop
push
mov
sbb
lock
popa
test
test
insl
xchg
pop
scas
add
pop
xchg
shl
orl
sbb
xchg
inc
mov
insb
sbb
pusha
mov
insl
test
mov
pop
or
fdiv
fisubrs
pop
bound
add
pop
pop
ret
jo
test
out
lahf
lcall
outsl
jbe
cmc
adc
cmp
mov
add
inc
pop
jecxz
push
popf
sbb
sbb
fisttps
sbb
sar
imul
and
jnp
sbb
sti
rorb
or
sbb
jne
jp
loope
jbe
std
fwait
mov
mov
jmp
sub
sub
imul
iret
push
mov
add
testb
das
dec
mov
out
fadds
nop
push
mov
or
ror
pop
jmp
repnz
mov
jb
pop
dec
int3
enter
out
repnz
cmc
xor
inc
out
daa
cmp
insl
xor
insl
dec
and
mov
jbe
add
popf
add
in
movsb
inc
xchg
xor
call
mov
cmp
dec
ret
xor
jb
mov
mov
stos
or
sub
adcl
aaa
add
inc
or
lds
subl
int
call
push
sub
mov
push
or
cmp
jns
add
push
mov
repnz
lock
sti
add
or
test
cld
or
sarb
and
mov
loop
mov
pop
loop
stos
or
push
data16
mov
ds
pop
subl
int
fstpl
fld
sub
xor
imul
mov
adc
sbb
mov
xor
in
mov
push
xor
and
fidivl
repz
mov
rcl
test
test
fcoms
sub
rolb
rorl
data16
and
sub
out
ds
pop
pop
push
mov
stos
fnstenv
pop
push
pop
jo
movsl
mov
movsb
insl
mov
gs
add
xchg
jmp
jae
incb
pop
test
jge
aam
sbb
pop
out
lahf
inc
sbb
jbe
int
scas
int
pop
mov
test
lcall
out
test
imul
mov
nop
lods
mov
mov
loope
in
int
lea
roll
fidivs
mov
cmp
shll
fcomps
call
imul
adc
in
pop
push
push
pop
outsl
jle
divl
xchg
inc
mov
aam
out
aam
les
shrb
xchg
adc
mull
popa
cli
fucomip
in
mov
push
cmpsb
mov
cmpl
add
imul
out
sub
xlat
popa
mov
test
cmp
pop
fists
lds
cmc
inc
fsubs
iret
push
lcall
cmc
dec
jbe
adc
sbb
mov
and
inc
cmpsb
add
inc
stc
scas
pop
dec
push
mov
aaa
sbb
cmp
mov
fcompl
add
sbb
fcoml
push
mov
xchg
out
cmp
in
sbb
push
stos
or
jmp
push
xchg
out
dec
cmc
cmp
mov
mov
ja
ja
data16
pop
cltd
jecxz
mov
nop
cmpsb
je
sub
xchg
in
jg
sub
outsb
das
mov
mov
add
fstpl
enter
or
xlat
fsts
scas
jo
call
enter
sbb
push
movsl
loope
xchg
call
lods
add
inc
and
sbb
test
sbbl
sarl
sbb
push
mov
int3
sbb
flds
mov
adcl
xchg
fistpl
xchg
push
cmpsl
cmp
push
leave
cmp
jecxz
nop
mov
arpl
cmp
icebp
fstps
dec
jae
test
xor
mov
push
dec
mov
idiv
xchg
andb
ret
cwtl
incl
pop
sbbl
scas
add
inc
movsl
lods
inc
cmc
pop
or
scas
cwtl
pop
adc
das
xchg
nop
stos
push
in
dec
sbb
pop
fwait
push
insb
negb
movsl
int
xchg
mov
dec
adc
imul
in
shr
inc
aad
mov
hlt
in
inc
cmp
divl
xchg
out
test
sbb
jmp
lahf
ficoms
mov
push
scas
idivl
jnp
and
push
mov
push
es
inc
lret
mov
test
out
out
fscale
adc
popf
cmp
xor
sbb
fsub
xor
pop
lods
rorl
push
addr16
into
cwtl
loope
imul
lea
or
mov
inc
sbb
sub
push
addl
out
push
jns
or
ficomps
aaa
in
jecxz
adc
add
popf
jmp
mov
jmp
lods
fs
aaa
or
or
jle
dec
pop
xchg
out
lods
xor
sbb
lret
imul
mov
mov
xchg
subl
push
mov
or
enter
aad
pop
jnp
add
mov
rcrl
cld
xor
mov
insb
repz
push
add
jnp
inc
stos
cwtl
mov
test
push
test
and
mov
sub
repz
fdiv
adc
sti
xor
cmpsl
and
out
mov
leave
ret
shll
cmp
movsb
and
aam
xchg
int3
cmpsb
sub
inc
mov
adc
mov
adc
add
mov
xchg
cmp
mov
cmc
fimuls
addr16
mov
outsl
lds
fbstp
inc
cmpsb
dec
cld
xchg
aas
nop
cs
sub
push
sbb
push
mulb
mov
mov
sub
mov
add
stos
cmp
dec
add
adc
xor
stos
push
jns
or
pop
out
push
cmc
xor
outsl
push
stc
pop
mov
and
sbb
rolb
jns
shrb
mov
ja
jecxz
jo
stos
in
xchg
lcall
sbb
scas
cmc
out
push
loopne
scas
mov
test
push
xor
sbb
imul
mov
inc
xor
xchg
cmp
xchg
inc
xchg
cwtl
lds
pop
add
xor
hlt
insl
fwait
lcall
adc
mov
data16
into
xchg
add
add
ss
dec
sub
fisubrl
mov
cltd
sbb
arpl
xorl
mov
insl
mov
in
xor
sahf
xorb
fcoms
cmp
test
fisubrl
mov
inc
adc
sub
lahf
daa
mov
xorb
mov
lea
icebp
mov
and
decl
cld
or
aaa
mov
mov
inc
int
jmp
subl
dec
mov
ja
cmp
stos
xchg
pop
lods
mov
xor
mov
shr
es
push
inc
or
test
mov
lods
xor
je
push
add
sar
leave
mov
dec
jae
add
insb
mov
out
imul
pop
pop
jl
pusha
xor
sub
or
and
jmp
ret
jge
pusha
mov
mov
mov
xor
adc
pop
push
ss
pushf
ficoml
adc
cmp
movsl
mov
xorl
cmp
cwtl
imul
inc
jl
push
movsb
cmp
pop
sub
or
xlat
loopne
add
fdivrl
push
jecxz
outsb
call
roll
lahf
push
stos
iret
frstor
sbb
cmp
lret
and
outsb
scas
xchg
inc
mov
sbb
and
testb
arpl
loope
mov
cmp
loope
add
inc
inc
mov
hlt
push
jns
add
xor
call
xchg
push
jp
sbb
fs
or
outsl
insb
pop
sti
add
adc
sbb
sub
adc
sbb
xchg
mov
lods
fs
push
sbb
dec
jmp
test
xor
outsl
daa
inc
cmp
inc
outsl
dec
cwtl
or
iret
nop
scas
out
xchg
iret
sar
cmp
mov
ds
insb
loopne
lret
dec
iret
mov
and
pusha
out
xchg
cmpsb
test
leave
jge
cmp
sbbl
xor
mov
rclb
push
pop
or
xchg
mov
dec
inc
mov
in
mov
insl
bound
jl
cmc
pushf
into
jo
adc
push
ss
lds
mul
mov
outsb
fsub
push
and
paddb
data16
adcl
aam
push
sarb
cmp
lahf
insl
bnd
sti
and
mov
push
outsb
iret
push
dec
and
insl
and
and
leave
mov
push
pop
insb
mov
fcoms
adc
jb
lods
mov
lcall
fstp
dec
fstl
mov
in
cmpsl
push
xchg
sub
popa
adc
lds
and
and
pop
inc
inc
leave
neg
pop
ficomps
into
mov
dec
call
sbb
jmp
jle
je
test
add
and
aas
in
lahf
dec
push
cmpb
jb
cmpsb
pop
mov
push
stc
nop
inc
sbb
movsb
pop
mov
mov
movsl
in
xor
insb
lds
mov
cmp
jecxz
ret
mov
push
movsl
jp
mov
shlb
inc
ds
fistps
test
mov
imull
imul
pop
bound
fs
out
jne
cltd
cmp
rolb
aaa
xchg
pusha
xor
jnp
loopne
ljmp
and
sahf
xchg
daa
test
popf
mov
jle
outsl
fsubl
mov
push
cs
push
mov
cmpsb
sbb
push
push
xor
jp
scas
jl
jno
ss
jno
mov
fsubs
inc
jp
sbb
shr
mov
xchg
mov
into
jl
mov
cmp
cli
push
repz
sti
adc
adc
mov
gs
loope
dec
lret
and
loopne
xchg
adc
loope
mov
rclb
icebp
mov
fistpl
out
cmpsb
movsl
xchg
insb
lods
loopne,pn
pusha
pop
inc
mov
fistpl
notl
and
cmp
pop
mov
adc
iret
mov
jns
test
orb
pushf
adc
out
mov
jl
xchg
fdivl
lret
fwait
pop
push
mov
jecxz
jle
mov
fdivrl
cmpsl
push
hlt
push
loopne
std
movsb
fcmovnu
mov
jno
in
pop
sbb
mov
das
or
cmc
adc
cmp
inc
mov
loopne
sbb
xor
outsb
jno
cmc
inc
xchg
out
add
mov
pop
cmpsb
mov
cmp
mov
cmp
xor
jb
negl
jmp
push
mov
push
aad
cwtl
call
xor
pop
jmp
mov
test
inc
inc
jbe
loopne
push
imul
xchg
sbb
movl
nop
mov
jnp
cmp
mov
or
pop
jecxz
mov
sub
xor
xlat
sub
and
jmp
stos
fldenv
cmpsl
sbb
adc
cmp
mov
sbb
mov
pop
jle
insb
insb
push
dec
lea
lock
shlb
inc
mov
fidivrs
inc
jo
xchg
sub
fwait
cmp
loope
add
in
mov
cmp
jne
leave
loope
iret
pop
jb
sbb
push
sub
aad
hlt
add
mov
xchg
mov
fwait
nop
and
inc
jge
inc
mov
jmp
stos
adc
mov
je
std
shlb
out
pop
sbb
cmp
sub
sub
div
pop
shll
fcomp
xchg
ja
dec
inc
xchg
xchg
xor
jo
xor
xchg
test
lea
les
daa
les
add
sbb
adc
inc
cmpsl
loop
std
inc
push
sub
lahf
jnp
iret
and
js
out
mov
ja
mov
movsb
sub
pushl
test
js
jae
mov
aad
sub
and
cmp
pop
lahf
inc
mov
pop
lock
lds
mov
lods
jmp
mov
cmc
adc
scas
popf
xchg
xchg
enter
sbb
push
sbb
or
push
jp
and
inc
clc
scas
pop
lods
sub
in
pop
out
pop
inc
mov
ja
popf
and
sbb
xchg
and
sbb
inc
cmc
ss
and
sbb
icebp
xor
inc
adc
cmp
sbb
mov
push
add
enter
into
add
mov
aaa
jnp
sbb
int3
in
pop
add
ja
nop
gs
add
inc
fs
mov
pusha
std
stos
mov
idivl
jle
mov
test
push
push
insl
les
and
push
mov
gs
pop
scas
xchg
and
jp
js
fwait
stos
insl
loopne
lcall
mov
dec
jne
lods
stos
sbb
sbb
stc
movl
and
je
test
xchg
outsl
cmp
pop
and
xchg
mov
or
xchg
loopne
cltd
notl
cmc
sbb
pop
sbb
xchg
jbe
cmp
outsl
test
lcall
jmp
cmp
and
mov
dec
xchg
inc
sbb
shlb
outsb
add
and
sbb
adc
lock
in
inc
scas
and
rclb
mov
or
ja
and
adc
sbb
rolb
sub
or
in
les
insb
add
cmp
sbb
mov
scas
jo
pop
or
jg
cmpsb
int3
pop
iret
sbb
cwtl
sbb
xor
adc
sub
mov
jns
aas
inc
mov
mov
cmp
repz
loop
cmp
cwtl
dec
in
sub
ficompl
push
jno
imul
add
push
nop
add
or
repnz
clc
hlt
xchg
jo
frstor
dec
push
or
mov
aad
cmpsb
addr16
sti
xchg
sti
clc
fs
jo
sub
xchg
fnstcw
mov
xor
ljmp
leave
stos
sub
mov
inc
cli
xor
sahf
or
sbb
cmp
cmc
jb
aad
pusha
jecxz
je
dec
sub
test
lret
sbb
xchg
dec
cmc
sti
fcomp
clc
mov
push
addr16
and
pop
lock
cmp
jb
test
add
pop
pop
sbbb
mov
aas
fstl
xchg
sti
scas
ss
shl
jns
out
mov
push
mov
push
dec
mov
stos
dec
popa
imul
fcomip
lods
jo
push
dec
lods
sbb
into
lods
out
push
fnstenv
xchg
jg
adc
mov
mov
out
hlt
repz
mov
jno
cwtl
movsb
fimuls
push
mov
shll
add
cmpsb
lods
test
lret
pop
les
xor
test
mov
mov
inc
push
xchg
inc
shlb
daa
jle
sub
xchg
dec
cmp
xor
ja
js
push
inc
out
adc
les
jp
fadds
xchg
rcr
bound
aad
cltd
add
movsl
sahf
movsb
cmp
mov
scas
or
and
test
stc
sub
mov
add
mov
xchg
pop
jnp
inc
xchg
gs
cs
aam
cld
jmp
jp
in
aam
cwtl
pop
je
cmpsb
movl
out
push
or
js
add
cmc
and
sbb
sub
loope
loop
cmpsb
cmp
adcb
xor
pop
push
loopne
ss
xorl
adc
xlat
xchg
negl
mov
sti
loope
and
inc
in
negb
lret
aas
add
push
cmp
mov
lret
sahf
mov
test
mov
shll
rclb
sub
out
out
int3
jp
rcrl
nop
insl
add
adc
fimull
jb
push
stc
pop
or
jbe
mov
sbb
hlt
scas
mov
scas
repnz
xchg
mov
pop
int
je
jb
jno
ljmp
imul
sub
icebp
pop
jp
ret
pop
mov
nop
jge
jecxz
mov
or
movsl
ret
cmp
push
cmpsb
mov
xchg
xchg
js
dec
ficoms
lds
fs
sbb
aaa
int3
out
dec
jecxz
adc
in
lahf
inc
cmp
lods
into
hlt
pop
cmp
or
xorb
mov
sub
cltd
cmp
shl
popa
and
mov
sti
clc
fimuls
outsl
push
xchg
pop
ret
push
xor
inc
xchg
add
js
stos
fwait
xlat
jnp,pn
mov
lds
addr16
push
dec
pop
mov
shl
mov
icebp
mov
ja
cld
xor
or
and
mov
stc
or
dec
mov
inc
pop
iret
ret
int
nop
cltd
xchg
xor
push
pop
or
int
fistps
aam
cwtl
xchg
fisttpl
xor
std
iret
in
xor
push
mov
popf
sbb
shrb
jne
sub
je
mov
mov
dec
in
lahf
icebp
fistps
jg
adc
mov
pop
lods
lcall
ja
jb
outsb
cwtl
mov
test
in
and
pop
push
lcall
popf
sub
or
xor
cmp
js
ficomps
jle
ret
ja
jbe
xor
addr16
clc
xor
and
jno
fisubs
xchg
cmp
xchg
mov
cld
or
xchg
push
stc
jecxz
dec
icebp
stos
ja
insb
icebp
add
loop
js
out
das
push
xchg
mov
pushf
cld
fwait
pop
mov
movsb
jne
push
pop
push
popa
cmp
push
test
lret
sti
add
sbb
dec
fiaddl
ret
nop
call
call
mov
jne
outsl
or
jno
xor
lods
sub
mov
fcomps
jle
dec
sbb
xor
adc
sbb
inc
mov
ret
pop
data16
nop
jo
std
mov
pop
in
ret
sub
jb
xchg
jg
xor
inc
cmc
lret
adc
das
sub
repnz
jg
jae
dec
imul
sub
add
mov
ficoms
inc
dec
aam
popa
arpl
jns
push
enter
xor
cmc
test
xlat
adcb
outsl
cmp
fwait
aaa
ror
ss
enter
xchg
repz
sbb
adc
or
into
add
sub
sarl
xchg
inc
sbb
std
add
push
pop
add
cmp
xchg
xchg
aas
ret
ds
je
mov
xor
mov
mov
repnz
jp
subb
imul
cmp
shll
mov
bnd
fwait
sbb
movsl
sub
sub
or
sub
mov
jl
jl
jns
dec
pop
mov
insb
sub
lretw
outsl
xor
mov
mov
push
mov
pop
mov
cmc
xor
lret
push
aad
dec
sub
mov
aad
int
push
filds
add
fs
cmp
fstpl
sub
mov
mov
push
out
ret
cmp
outsb
and
outsl
notb
xchg
mov
mov
sbb
mov
scas
xor
push
and
neg
mov
sbb
outsb
pop
and
test
cmp
std
xor
push
lcall
lea
dec
lock
pop
xchg
out
push
cmpb
pushf
jg
push
outsb
popa
test
adc
sbbb
mov
xchg
leave
add
test
sbb
dec
sub
sbb
cltd
inc
add
and
enter
mov
fdivrs
popf
mov
push
xchg
dec
xchg
xor
jp
adc
gs
push
nop
push
xchg
lea
fnsave
loop
sub
jmp
imul
push
testb
push
lds
std
jne
inc
cmpsb
fdivs
adc
push
ljmp
gs
es
sbb
icebp
fsubrs
in
mov
jne
loopne
sbb
sub
loopne
dec
imul
cmp
jbe
jg
movsb
jge
insl
ud0
xor
pop
pop
lods
ds
les
adc
sbbb
popf
and
fldcw
push
cmp
xchg
int
add
mov
outsl
les
pop
lods
jae
sbb
fxch
dec
inc
pop
sub
push
fsubl
lds
mov
push
push
pop
mov
fnstenv
push
movsl
out
test
xchg
adc
and
pop
jecxz
or
dec
jnp
sbb
ljmp
sarl
fnstenv
sub
adc
ss
xchg
xor
lret
ds
ficompl
or
mov
jbe
push
adc
fldt
dec
movsb
mov
cmp
pop
outsl
hlt
sahf
jle
inc
push
clc
out
cmove
es
into
adc
gs
fwait
sahf
rorl
pop
push
loop
pop
push
push
mov
pop
xchg
sub
mov
sbb
pop
jecxz
hlt
out
lods
mov
aam
js
add
into
mov
jp
ret
cli
stos
insl
mov
lcall
bound
pop
out
mov
mov
pop
lock
mov
mov
or
push
or
xchg
call
jo
daa
push
sub
and
sbb
roll
mov
mov
imul
jl
in
pop
dec
iret
xchg
mov
lahf
sub
sbb
sbb
fsubl
and
aas
mov
inc
test
pop
sbb
jbe,pt
out
adcl
outsb
outsl
js
rorb
mov
adc
pop
popf
lods
lea
in
and
xchg
xor
aad
or
push
pop
jno
lcall
in
jmp
aas
ljmp
inc
xor
jle
ret
js
fs
and
pop
mov
xchg
jge
inc
test
cmp
in
inc
push
stos
scas
inc
jns
movl
jg
repnz
in
xchg
mov
clc
and
cmp
push
fwait
int
sahf
out
les
dec
fwait
xchg
jb
mov
std
or
enter
mov
mov
sub
scas
mov
and
push
mov
aam
jle
test
js
ret
ret
push
in
jo
in
hlt
lods
sbb
sub
test
pop
daa
sarl
rcl
or
ljmp
cmc
dec
into
pusha
int3
cmp
int
shll
idivl
in
hlt
loope
sahf
cmp
adc
push
jnp
jnp
pop
mov
nop
sbb
ret
jns
or
push
lret
sbb
outsl
mov
rorb
xchg
loopne
imul
mov
mov
cmpsb
imul
jo
sub
mov
stos
divl
sbbb
imul
pop
and
repnz
pop
push
sub
rorb
mov
pop
ret
mov
jecxz
nop
int3
jmp
rolb
popa
ret
push
into
xorb
stos
add
jecxz
push
outsb
pop
fldenv
sbbl
outsb
adc
mov
movsb
mov
aad
and
lcall
insb
nop
sti
jecxz
add
jmp
mov
mov
mov
lahf
pop
jo
insl
pop
push
jp
mov
dec
pop
fcomps
cwtl
and
mov
lret
stos
or
in
loopne
push
enter
mov
and
add
pop
mov
faddl
mov
inc
sbb
outsb
fs
scas
mul
fwait
bound
mov
sub
loope
into
adc
sahf
push
sub
mov
mov
js
jnp
icebp
sbb
mov
xor
mov
mov
add
data16
incb
nop
stos
cli
jmp
xor
xchg
xlat
fsubp
pop
loopne
pop
aaa
sub
movsl
push
andl
lahf
arpl
sbb
sbb
mov
test
inc
or
cmp
push
lods
clc
mov
ret
mov
js
mov
xchg
or
in
jbe
mov
sub
icebp
fs
sbb
sbb
xchg
cld
int
fimuls
and
lcall
cld
mov
subl
sub
test
bound
imul
fcoml
dec
pop
add
xor
das
add
popf
icebp
push
movsl
sbb
out
push
outsb
push
ljmp
pop
imul
test
and
push
int
das
pop
inc
cld
jno
mov
movsb
pop
repz
dec
or
adc
out
push
push
pop
or
dec
rorl
xchg
je
mov
cmpsl
imul
jnp
and
or
and
inc
out
ret
inc
mov
in
out
decl
lcall
xchg
lret
lock
repz
pop
xchg
pop
dec
aad
std
adc
pop
jp
outsb
jbe
popf
push
insb
or
xor
lods
repz
mov
mov
loope
or
sbb
ja
mov
js
push
inc
ja
jb
out
bswap
out
jbe
jp
lock
sub
pop
sbb
mov
push
mov
pop
fsts
addr16
int
hlt
and
jmp
lods
sbb
sbb
lcall
mov
repnz
add
jo
gs
int3
ja
dec
mov
push
cmp
das
jecxz
pop
mov
shll
jo
and
inc
rdmsr
push
movsl
arpl
loop
jnp
mov
lcall
sahf
xor
sub
pop
mov
mov
sahf
jne
jns
out
dec
jp
jne
je
incb
enter
pushf
mulps
and
hlt
cmpsl
xchg
sbb
movsl
cmp
xlat
xchg
cmpl
pop
jg
jecxz
add
push
cmp
add
xlat
mov
jecxz
pusha
inc
and
ret
out
add
out
adc
sbb
sub
dec
movsb
filds
mov
rclb
out
lret
and
cmp
rolb
mov
lock
or
bound
xchg
ret
out
xchg
mov
mov
iret
lahf
hlt
jo
or
test
into
pop
enter
call
push
cmp
std
imul
xlat
popf
jp
aaa
lret
adc
pop
out
mov
pop
daa
pop
sbb
sbb
cli
scas
sahf
push
lahf
cmp
orl
mov
nop
xchg
daa
or
ss
and
in
dec
or
adc
push
push
nop
mov
jle
or
jg
fisubs
sub
add
scas
pop
dec
mov
jb
hlt
or
test
push
adc
jnp
fisubl
adc
out
sti
mov
jbe
dec
fstps
xchg
ss
loopne
cmp
push
loope
and
test
inc
jmp
filds
sub
daa
mov
lcall
insb
mov
fimull
cmp
pop
mov
xchg
divl
pusha
jmp
adc
fcmovnu
mov
add
fdivs
and
sub
out
lret
xor
inc
jp
and
xlat
and
sub
xchg
inc
or
inc
nop
push
jno
lock
mov
push
mov
or
dec
sub
sarb
adc
mov
roll
subb
jne
xor
repnz
add
pop
adc
xchg
ja
out
add
arpl
test
inc
inc
adc
clc
jmp
out
push
inc
leave
addr16
aad
push
stc
push
outsb
and
xchg
dec
adc
inc
sbb
dec
and
mov
call
push
repz
push
add
stos
ja
push
lods
stc
hlt
cmpsl
je
jl
inc
test
scas
not
push
sbb
test
lods
es
dec
jo
sahf
jmp
pusha
xor
mov
or
adc
call
int
mov
xor
out
or
jp
ficoml
jmp
or
adc
fsts
test
aaa
cmp
dec
mov
inc
mov
ds
lret
mov
adc
shlb
rorb
adc
lret
jns
repz
clc
sbb
inc
push
xor
or
pop
scas
mov
loop
pop
sarb
jo
xor
icebp
cli
dec
in
insl
jg
test
into
int
dec
mov
xchg
in
cmc
sar
mov
cmp
dec
jmp
add
scas
push
addb
sbb
out
imul
ret
ss
mov
jns
clc
cmc
out
jl
je
ds
pop
inc
xor
outsl
repnz
clc
or
scas
fwait
stos
pop
ret
push
ss
js
nopl
ffreep
int
dec
shll
lea
adc
dec
adc
mov
cmp
cmp
incl
ss
in
add
outsb
hlt
lea
mov
fisubrs
out
sub
es
enter
mov
pop
movsl
mov
sbb
adc
mov
insl
or
jno
shlb
sbb
inc
mov
sub
jo
jmp
xor
add
sub
add
mov
cltd
scas
adc
gs
pushf
inc
lods
idiv
movsl
pop
insl
mov
lods
data16
mov
pop
or
sub
and
out
nop
push
sbb
inc
dec
ss
adc
mov
jmp
in
mov
scas
xchg
mov
adc
pop
fisttps
movsl
push
int
aas
int
repz
mov
ss
jae
imul
mov
sbb
out
push
pop
pushf
pusha
inc
jl
mov
xor
gs
loop
xlat
cltd
mov
rcrl
add
add
jnp
sub
jnp
sbb
lock
mov
pop
xor
xorb
iret
pop
mov
in
aad
rcl
imul
sti
or
add
pop
sbb
xor
cwtl
adc
test
push
or
stc
scas
es
mov
insl
clc
sahf
scas
dec
xor
loopne
ficoml
cmp
jmp
in
mov
ret
sbb
xlat
insl
fadds
mov
aam
jno
mov
and
test
jmp
in
inc
test
enter
loope
out
je
popf
aam
es
mov
add
clc
push
pop
mov
xchg
shl
mov
push
lcall
push
insl
mov
mov
xchg
leave
jno
push
push
orl
jle
popf
jmp
sbb
jmp
mov
cmpsb
dec
sub
shr
cmp
dec
repz
cwtl
xchg
repz
out
scas
ret
ss
movsl
ja
jno
insl
mov
pushf
dec
sqrtps
fwait
cs
jge
lret
aas
or
mov
repz
push
popa
fisttps
loope
es
mov
dec
pop
outsl
stos
sub
fsub
pop
pop
dec
cwtl
outsb
xchg
pop
adc
dec
enter
or
add
sbb
inc
ret
xchg
push
pop
shl
xchg
jg
fcoml
mov
lret
bound
out
jp
out
sbb
test
or
xor
jecxz
dec
sti
stos
inc
in
mov
mov
and
aaa
cmp
mov
call
push
add
sbb
mov
pop
dec
ss
out
sub
mov
fildl
or
sub
mov
xchg
sbb
push
or
sbb
push
fs
xor
xchg
sbbb
jo
ss
pop
test
and
push
mov
pop
xchg
sti
cmc
jae
push
enter
fsubl
sbb
enter
pushl
mov
sub
fidivs
lods
mov
jbe
mov
imul
aaa
xchg
sub
push
xchg
jecxz
adc
mov
adcl
lea
fld
repnz
out
mov
fimull
lret
sti
imul
mov
or
cld
int
jno
adc
testb
mov
test
or
push
mov
call
add
jbe
aaa
push
add
jmp
fs
test
ret
lods
push
aas
mov
je
sbb
or
adc
ja
lcall
mov
cs
scas
or
push
add
shlb
mov
xchg
insb
out
popf
push
jmp
push
cmp
sbb
inc
addr16
popa
add
mov
sbb
push
cwtl
outsl
dec
test
shrl
add
outsl
loope
dec
inc
inc
cmpl
cmp
shld
outsl
repz
pop
int3
xor
mov
fwait
in
pop
mov
gs
inc
add
repnz
jno
popa
xchg
or
mov
test
or
lods
sbb
out
stos
test
mov
stos
mov
and
mov
shll
roll
dec
imul
pushf
dec
cmp
inc
lods
dec
jmp
iret
pop
pushf
int
lret
or
fdivrp
fst
int
sbb
pop
lods
mul
shlb
xor
push
xchg
xchg
enter
mov
cld
mov
jb
pusha
enter
jecxz
sub
or
iret
xchg
mov
mov
jmp
sahf
lret
testb
cmp
mov
sbb
pop
sbb
inc
xor
dec
cmc
movsb
or
gs
add
dec
xor
mov
das
push
mov
jg
adc
sbb
xchg
pop
clc
and
mov
les
xor
jns
repz
push
sbb
xchg
sbb
xor
test
fimuls
sahf
add
in
xchg
inc
nop
adc
mov
fsub
lret
loopne
gs
fimuls
dec
jns
push
mov
jg
push
dec
jl
mov
cld
repnz
push
cmp
in
outsb
insb
push
or
cltd
xchg
sbb
pop
clc
or
popa
pop
inc
pop
sarl
and
out
divb
idivb
add
adcb
cmp
fisubs
cltd
cmpsb
lods
push
sub
movsb
cmc
pop
lret
shlb
cmp
push
daa
loope
or
jp
sub
fistl
lahf
jp
mov
cs
xor
cmp
and
imull
dec
or
mov
nop
addr16
sub
nop
shrl
jge
negb
xor
mov
push
inc
std
sbb
xchg
ret
not
adc
jnp
in
jno
aad
ljmp
sbbb
xor
out
call
sarl
add
scas
ljmp
shrb
jns
loopne
push
repz
push
cmpsb
xor
adc
loope
sbb
out
imul
fisubl
sbb
inc
push
adc
stos
or
mov
enter
jecxz,pt
jmp
ret
add
jle
and
out
lret
and
xor
pop
sbb
cmp
loop
xchg
loop
shll
push
cld
hlt
jae
adc
icebp
xor
adc
mov
movsb
or
out
mov
add
fwait
xchg
scas
cmp
mov
xchg
mov
dec
rcrl
push
pop
cli
test
inc
mov
ret
adc
jbe
adc
adc
mov
ss
jecxz
shrl
sbb
fisttps
and
cmp
movsb
ret
inc
ret
mov
xchg
ret
mov
inc
inc
pop
xor
decl
pop
je
jg
std
cmp
fistpll
popf
push
dec
fdivrl
adc
xlat
fs
fmulp
cmp
pop
mov
outsl
and
nop
xor
std
sbb
adc
mov
gs
mov
add
or
shll
sub
dec
les
lock
sub
or
jg
or
enter
rolb
and
lret
mov
xor
gs
inc
push
adc
in
mov
fistps
pop
imul
test
pop
repz
cli
jno
xchg
push
jne
fstpl
cltd
movsb
out
inc
imulb
hlt
jbe
add
in
notl
and
aam
je
pop
xchg
nop
lret
dec
add
testl
xchg
icebp
jmp
dec
xlat
imul
push
btr
xor
scas
fmulp
jb
sub
jnp
pushf
outsb
xchg
cld
mov
andl
mov
xchg
cli
test
sbb
add
mov
mov
inc
cmc
sub
test
push
loop,pt
mov
imul
les
dec
xor
adc
fdivl
mov
push
stos
repnz
mov
jb
jge
or
jle
arpl
mov
xchg
mov
js
push
jbe
jae
cld
rorl
sub
and
aaa
xor
mov
hlt
mov
data16
sahf
sbb
pop
or
fiaddl
gs
fsubrs
in
popa
lods
and
adc
pop
in
fisubs
hlt
cmpsl
repnz
add
jle
shll
adc
stos
outsl
add
in
jp
cmp
notl
adc
je
pop
lcall
inc
cmp
fidivs
lcall
xchg
cmp
popf
push
stos
jl
iret
out
stos
sbb
jo
rol
jecxz
lcall
mov
dec
fwait
inc
das
orl
out
add
pushf
xchg
outsl
mov
adc
dec
ljmp
lods
call
cltd
xchg
hlt
mov
mov
pushf
xchg
jns
in
popf
mov
movsl
scas
xchg
movl
sub
mov
movzwl
jb
stos
repz
xchg
imul
sbb
xchg
fisttps
mov
sbb
mov
sub
in
loop
push
outsb
cmc
lahf
xchg
fsubrl
lret
xor
mov
ja
into
push
xlat
ja
jmp
sbb
test
sbbl
lret
incl
jo
outsb
adc
ds
fwait
jp
jae
int3
repz
mov
push
xchg
iret
repz
sub
xchg
pop
fsts
or
jecxz
pop
stos
fisubrs
lock
cmpl
add
pop
scas
mov
adc
mov
not
ret
dec
pusha
jg
mov
or
cmpsb
bound
pop
scas
mov
pop
xchg
in
adc
rcrl
lods
int
mov
xlat
pusha
xchg
jno
mov
cmpsb
repz
inc
and
out
pop
loope
mov
add
adc
dec
mov
shrb
outsl
adc
lods
out
sbb
fistpl
filds
add
xorb
movsb
in
ja
push
ss
pop
add
sub
rolb
scas
xchg
adc
shrl
inc
popa
js
xchg
loop
imul
rcll
sub
push
loope
loope
sub
fdivr
xor
les
jl
mov
xchg
xor
cmp
fs
call
pop
mov
xchg
aad
inc
neg
sarb
jo
pop
add
inc
mov
ljmp
sbb
xchg
pop
push
bound
into
data16
add
lret
push
mov
mov
imul
xor
mov
das
fsubrl
adc
or
add
dec
mov
sbb
pop
mov
outsb
xchg
sti
adc
out
mov
mov
ljmp
push
repnz
cmp
cmp
mov
adc
icebp
shl
sub
push
mov
sub
add
shrb
icebp
loopne
fsubrl
jnp
lea
loop
stos
inc
pop
mov
rclb
push
fs
mov
add
cltd
pop
andl
push
imul
cmp
mov
push
iret
mov
sbb
popf
enter
dec
lods
jmp
inc
lret
mov
cmp
icebp
inc
ds
adc
es
clc
mov
arpl
push
out
pmulhw
nop
ljmp
jne
and
mov
mov
dec
xchg
add
rcrb
int3
push
neg
pop
fs
jle
and
out
sub
popf
mov
fstpl
mov
cmc
xor
pop
jno
xchg
xchg
test
daa
adc
and
movsl
clc
test
les
push
inc
and
loopne
cmp
fsubs
incb
sub
shll
in
xor
into
pushw
cmpsl
adc
flds
or
mov
xchg
xchg
mov
outsb
or
dec
cmp
ret
push
cmp
loope
mov
sub
add
adc
mov
pop
jge
mov
mov
push
cltd
push
mov
add
aas
add
dec
push
loop
in
lds
jb
shll
inc
push
pop
dec
pop
imul
xor
sub
inc
scas
mov
mov
loopne
xchg
stos
std
xchg
xchg
in
and
inc
test
jo
cmc
loope
bound
mov
mov
out
or
inc
adc
push
leave
jg
adc
pusha
xor
scas
cmp
clc
test
lods
jnp
pop
sahf
stos
push
mov
lea
push
dec
shl
out
loop
imul
inc
outsb
icebp
jo
mov
pusha
test
test
movsb
hlt
sbb
add
add
mov
sbb
sub
sub
xor
cli
in
adc
xor
push
push
imul
jns
xchg
mov
movsl
out
and
insl
shl
inc
inc
cmp
clc
std
addr16
cmp
std
jecxz
mov
loope
insb
mov
rorb
addr16
sbb
pop
daa
xchg
pop
dec
jno
rcr
fstpl
push
push
adc
mov
and
xlat
lea
pop
mov
push
gs
rolb
popa
repz
gs
dec
mov
movsb
insb
pop
rorl
mov
mov
pop
pop
sbb
out
mov
shll
inc
sub
lcall
xchg
inc
cmc
js
xchg
lret
leave
inc
fsts
or
out
xchg
mov
mov
xchg
inc
imul
jbe
stos
jg
lret
outsl
inc
mov
popf
stos
fidivl
mov
test
cmp
dec
xorl
dec
mov
jp
ucomiss
out
and
lahf
sub
mov
out
mov
shll
jmp
sub
push
mull
xacquire
lahf
les
pop
push
cmp
lds
mov
xchg
loopne
lcall
sti
jbe
loopne
and
cmp
xchg
mov
pop
add
cmc
adc
ror
jns
lcall
icebp
push
stos
push
sbb
sub
jne
lods
sub
insl
test
jne
int
pop
cmpsl
jp
cmp
xchg
mov
mov
test
lret
call
stos
stos
fisubrl
jl
mov
or
popf
xchg
jp
mov
out
mov
in
cs
dec
jnp
mov
cmc
mov
cltd
jae
rorb
iret
cmpsb
test
pop
dec
daa
je
data16
cmp
inc
adc
sub
sbb
es
pop
mov
jo
iret
scas
fwait
aas
pop
cmp
cli
mov
or
je
mov
xchg
aad
dec
pop
push
fildll
dec
shlb
ljmp
enter
xor
mov
adc
lret
andl
lods
fstps
cld
pop
iret
add
lret
inc
push
xchg
cli
jle
stos
je
leave
jg
out
fwait
or
xchg
imul
fsincos
dec
cld
xchg
jmp
adcl
sbbl
movsb
push
notl
cmp
mov
out
scas
aad
xchg
push
neg
xor
mov
jl
lret
stos
push
mov
jnp
inc
lds
das
push
int3
pop
mov
xlat
mov
not
in
fs
cmpsb
inc
repz
fcomps
mov
or
or
mov
leave
sbb
pop
sbb
jo
in
gs
xor
stos
add
push
dec
out
cmp
ret
pop
jns
push
ret
xorl
mov
hlt
pop
in
xor
loop
fstpl
es
jno
or
mov
cmpsb
shl
dec
jecxz
rcrl
xchg
ljmp
adc
sub
sbb
out
out
jno
cmc
cltd
inc
ss
xor
sahf
outsb
sub
test
idivl
jbe
sub
out
rcrb
data16
add
add
sbb
mov
jge
xor
mov
xor
movl
add
ftst
negl
jno
pop
aaa
js
andb
jnp
sbb
mov
icebp
imul
lret
and
sbb
sub
pop
fsubl
mov
in
inc
adc
mov
rcll
sub
xchg
jecxz
xorl
mov
add
shrb
cli
pop
in
rcrl
lahf
outsl
sub
adcl
cmp
sub
fbld
jecxz
es
cmpsb
pop
daa
mov
xor
pop
adc
call
mov
xchg
imul
lcall
loope
cld
jnp
lahf
test
mov
into
test
or
pop
mov
iret
rep
xor
lock
sbb
fistpl
sub
das
shrb
std
int
ffree
inc
push
filds
push
xor
arpl
ret
sbb
inc
pop
out
pop
push
scas
aam
add
add
pop
inc
cmp
movsb
push
jno
ret
mov
jne
hlt
das
cltd
add
sbb
cmpsl
lret
xchg
push
jg
mov
mov
jmp
aaa
addb
push
cmc
gs
xor
pop
sub
pop
ret
mov
ret
xor
add
sub
adc
sub
sbb
or
mov
repnz
adc
pop
pushf
lods
stos
xchg
push
or
cs
xlat
mov
out
cmp
dec
mov
pop
out
loopne
in
out
arpl
and
xchg
cmp
mov
call
gs
adc
imul
inc
fs
or
jb
out
sub
xchg
bound
sub
mov
into
push
sti
dec
inc
push
int3
mov
test
call
aaa
sub
mov
mov
mov
add
sbb
stos
inc
push
add
adc
mov
sub
fcompl
xchg
add
push
dec
int
outsl
cmpsl
adc
adc
add
stos
in
mov
pop
aam
icebp
mov
outsb
lret
lret
arpl
sbb
jp
scas
push
test
mov
in
and
push
inc
pop
pop
xor
push
call
mov
cmpl
jp
and
ret
addr16
repz
mov
push
xchg
xor
mov
iret
and
dec
cmp
call
pop
std
and
xor
mov
iret
icebp
xor
icebp
shrb
pop
js
mov
pushf
xor
js
sub
xchg
sub
sbb
out
push
xchg
jo
xorb
xlat
jmp
sub
inc
out
sub
add
es
loope
imul
pop
adc
cmp
xor
push
repnz
xor
scas
cmp
sbb
lock
data16
js
sub
fisubs
lret
adc
or
push
std
addb
sahf
jo
cmpsl
sub
pop
roll
jnp
pop
mov
daa
sbb
scas
dec
mov
dec
adc
bound
sahf
mov
dec
jno
or
lock
iret
decb
les
jle
repz
add
pop
cmp
cmp
dec
nop
das
mov
fldt
decl
loope
mov
cmpsl
xor
sub
lods
test
push
out
xchg
add
push
jmp
out
jbe
icebp
call
pop
insb
jecxz
mov
iret
pop
mov
and
test
jns
jbe
std
jl
nop
out
sbb
dec
push
sbbb
xor
lock
xchg
addl
push
xor
lds
repz
cmp
dec
aaa
xor
insb
cmpsl
cli
jl
sub
ret
pop
mov
fisubl
pop
movsb
scas
icebp
or
or
fstpl
add
outsb
inc
into
cltd
movsb
fisubrl
movsl
push
test
testb
push
lds
push
mov
pop
push
lods
arpl
insl
stos
push
int3
cmp
repz
bound
lods
mov
mov
jae
xlat
inc
outsb
ret
mov
mov
lret
jecxz
mov
xor
lock
ja
rclb
dec
jb
sub
cmpsl
mov
stc
mov
mov
inc
pop
arpl
mov
sahf
adc
decl
ds
cld
fstpt
and
jg
daa
sub
dec
in
push
adc
sub
in
sub
inc
pop
mov
jge
jmp
sahf
or
mull
jl
mov
movsl
mov
sbb
nop
negb
mov
xor
hlt
mov
fs
cs
add
jp
inc
sbb
cmpsb
icebp
and
cmp
push
sbb
rcrl
sub
pop
inc
clc
mov
hlt
cmpsb
mov
jnp
hlt
sbb
frstor
mov
fbstp
scas
std
xchg
mov
in
push
xchg
mov
in
je
lds
sub
adc
jno
fwait
jl
std
or
jno
sahf
mov
jo
cmpsb
sub
jne
repnz
aaa
jmp
mov
std
lock
jle
cld
cmpl
call
daa
aam
pop
lea
sysenter
pushf
hlt
dec
sbb
adc
mov
aad
stos
negb
or
xlat
jge
int
scas
adc
sbb
pop
or
ljmp
mov
push
and
sbb
pushl
adc
jp
xchg
cmp
fucompp
cli
pushf
dec
loope
or
lock
stos
mov
mov
hlt
mov
or
outsl
out
pop
ret
add
push
pop
mov
int3
mov
mov
and
fcompl
std
cmc
call
cmc
push
sahf
add
mov
mov
mov
jnp
scas
push
push
fldt
push
jle
mov
inc
or
push
outsl
add
add
dec
xchg
cli
sbb
pop
mov
arpl
dec
inc
icebp
xchg
mov
sti
leave
jns
fwait
out
jge
jge
or
loop
pop
add
mov
add
scas
push
dec
mov
xchg
scas
pop
rorl
adcb
int3
inc
jne
or
push
sub
mov
xor
mov
int
pop
cli
fnstsw
fcomps
jbe
sub
movsb
or
dec
scas
aad
addr16
adc
sti
push
cld
in
imul
jo
aad
js
es
push
dec
push
js
pushf
outsl
loop
inc
lods
xor
cmp
imulb
sbb
adc
dec
lods
pop
push
movsb
fistps
dec
mov
pop
data16
cwtl
cmp
xor
popf
dec
push
fisubrs
clc
scas
mov
loopne
cmp
daa
inc
jns
lock
pop
lea
cmp
gs
inc
ficoml
mov
sbb
push
jns
scas
cmpsb
pop
mov
lret
pop
out
push
mov
jl
mov
mov
or
adc
lods
mov
aam
or
xor
mov
sub
jecxz
mov
mov
insl
cltd
cwtl
jg
js
fldt
into
outsl
jne
inc
repnz
jne
fisttpl
and
jns
fdivs
jmp
jne
aaa
int
adc
inc
mov
mov
xor
into
mov
mov
cld
adc
das
icebp
sub
cmpsb
mov
inc
push
lahf
pop
out
dec
clc
adcb
lods
jl
xchg
nop
push
cwtl
ljmp
pushf
xchg
or
shlb
mov
stos
add
cmp
lret
sar
sbb
add
xchg
sti
rcl
aas
xchg
pop
push
mov
dec
fisttps
inc
cmc
push
ja
inc
mov
adc
pop
out
and
repz
or
int
sbb
ljmp
gs
xchg
sub
popa
les
lcall
mov
call
scas
add
pop
repz
pop
ljmp
cs
loope
jp
fdivl
test
sub
dec
adc
loopne
push
loop
pop
adc
xchg
push
mov
add
idivl
and
sub
lret
mov
lods
out
xchg
in
jge
lods
push
push
inc
jns
movmskps
test
inc
jp
gs
scas
pop
push
aas
jle
jo
pop
lea
sti
int3
or
in
jg
jmp
andl
ljmp
mov
mov
lcall
fbld
popa
dec
jns
jo
pop
xchg
lods
xor
jp
mov
push
inc
mov
mov
mov
iret
sub
cs
adc
cld
pop
inc
in
mov
mov
inc
lods
cmp
clc
cmp
jge
cmp
jno
lret
lds
sarl
xchg
imul
lods
bound
cwtl
dec
aad
jne
inc
cmp
adc
test
call
ret
jno
xchg
orl
les
xchg
je
testl
sbbb
test
leave
add
mov
shll
or
movsb
xchg
mov
adc
fstpl
jo
mov
sub
out
and
inc
leave
test
ja
jns
dec
inc
mov
or
mov
call
stos
lds
cltd
es
jae
pushf
fcomi
or
or
mov
outsb
inc
int3
pop
push
xchg
mov
sbb
inc
inc
jo
pop
repnz
inc
ljmp
adc
fwait
in
push
add
in
xchg
in
mov
push
rcll
pop
outsl
mov
adc
loopne
mov
outsb
mov
xor
in
out
out
push
ds
ljmp
insl
mov
dec
push
call
xchg
rolb
test
lcall
cmpsl
aam
insl
pop
data16
jno
test
adc
popa
sbb
inc
push
mov
mov
shll
sbb
push
and
bound
sti
out
shlb
cmp
insl
jns
cmp
aam
mov
jo
faddl
lret
jae
pop
xchg
hlt
std
sar
sub
cld
mov
jo
inc
and
subb
ja
pop
mull
sub
int
pop
mov
cmp
mov
fisttpl
dec
push
xchg
out
cwtl
adc
rcl
scas
sub
cld
sbb
ret
dec
insl
cli
gs
test
loopne
xor
xor
daa
leave
sbb
int
roll
sub
ja
jb
jp
test
cli
jmp
in
dec
pop
iret
mov
or
pop
mov
fdivs
and
sar
sarb
pop
aaa
pop
js
subl
xor
cmp
f2xm1
jle
jbe
adc
inc
insb
mov
pop
mov
mov
sub
mov
sub
divl
pop
call
repz
sahf
shr
mov
mov
cmp
push
movsl
cmc
lsl
mov
sub
xor
and
inc
or
or
jb
jg
into
sub
cmpl
lea
and
xor
bound
inc
ror
xor
push
mov
pop
dec
stos
cs
fisttpl
inc
mov
adc
push
scas
add
jns
lods
and
mov
cld
or
pop
and
jmp
mov
gs
fld
add
jle
cmp
js
mov
cld
hlt
and
xor
add
hlt
sub
or
and
mov
std
ret
stc
enter
cmp
xchg
adc
pusha
test
movsl
out
or
stos
shrl
jo
scas
pop
dec
ret
fcmovne
aam
scas
add
aaa
jo
mov
sub
push
addr16
mov
test
fwait
cmp
cs
inc
insb
arpl
sbbb
fisubs
clc
sbb
loopw
sahf
mov
xor
pop
or
xchg
mov
inc
dec
out
jne
adc
dec
sbbb
aad
inc
scas
rol
lahf
nop
inc
fcoml
into
or
sbb
add
lcall
imul
sbb
mov
pusha
js
into
insl
call
lcall
psubq
ret
gs
inc
mov
idivb
popa
push
sbb
cltd
out
daa
into
mov
mov
imul
mov
xchg
sub
lods
scas
imul
fimull
mov
cs
ret
mov
xor
cmpsl
sbb
mulb
stos
inc
je
jle
mov
xchg
andb
das
and
repnz
in
scas
adc
push
clc
mov
cmp
outsl
mov
push
inc
mov
movsb
add
and
int3
loope
adc
push
or
jp
inc
sub
jns
push
jle
and
out
adc
mov
lcall
rolb
lods
les
enter
dec
pop
push
xchg
jmp
in
push
inc
imul
or
ljmp
xchg
adc
jb
rclb
int
adc
xor
movsb
mov
cmp
pop
push
addr16
xchg
push
test
in
adc
iret
cmp
inc
scas
movsb
push
call
jbe
cmp
xchg
orl
out
mov
lahf
lret
mov
xor
adc
loopne
pop
popf
push
xor
rclb
dec
ret
pop
dec
mov
and
dec
repz
icebp
dec
fidivrs
mov
gs
lock
icebp
pushf
jl
mov
aas
je
dec
rcrl
dec
xchg
in
xor
and
pop
cwtl
push
jecxz
in
fs
das
inc
inc
inc
cmc
sti
pop
into
mov
mov
test
pop
ror
jbe
dec
movsl
mov
xchg
fsubrl
xor
stos
pop
enter
cmp
inc
inc
rorb
sti
cmp
mov
xchg
or
iret
and
sbb
test
mov
popa
and
popf
cltd
add
shrl
clc
sub
pop
dec
fchs
mov
mov
xor
mov
icebp
adc
pop
adc
rclb
cmp
loopne
push
testl
ret
push
sbb
faddl
lods
jmp
mov
out
int
xor
and
jbe
cmp
mov
fs
jb
and
es
xlat
xchg
cmp
iret
sbb
movsl
xchg
in
mov
sub
inc
jle
mov
adc
scas
sbb
mov
sub
gs
mov
fiadds
pushf
pop
jge
out
mov
dec
mov
nop
setae
cs
or
push
leave
in
mov
movsb
cmove
add
leave
popa
or
mov
dec
adc
fdivl
fcomps
mov
lods
addr16
xchg
in
movsl
fsub
sub
sub
mov
enter
test
mov
mov
jge
push
fisubs
int
test
fistps
or
xchg
xlat
ja
pop
add
iret
enter
and
gs
push
and
pop
and
dec
pop
lret
mov
mov
fists
std
push
decl
jbe
pop
sbb
add
xor
mov
ja
adc
push
outsl
roll
sbb
add
mov
cwtl
xchg
push
cmp
pop
fwait
jnp
mov
push
out
lock
jno
roll
mov
adc
cmpsb
jb
adc
sub
out
jno
fwait
push
xchg
jg
push
mov
mov
mov
ret
pop
je
fwait
xor
js
daa
or
cmc
pop
push
pop
stos
sub
in
std
mov
repnz
jno
mov
lahf
bound
inc
fisttpl
inc
leave
fisubl
jne
rdpmc
bnd
add
inc
rorb
cltd
jns
jno
hlt
push
mov
and
scas
pop
scas
push
mov
pop
push
jno
clc
xor
imul
inc
jg
pop
pop
fs
inc
fsub
dec
inc
repnz
lods
outsb
fcmovb
repnz
negl
test
dec
mov
fidivl
inc
mov
inc
push
stc
jbe
cmpsl
lods
push
jno
sbb
je
push
dec
jg
adcl
add
out
inc
and
mov
and
xor
adc
lret
or
pop
jecxz
sbb
and
enter
imul
out
mov
mov
bound
mov
inc
lahf
cld
xchg
popa
mov
pop
add
add
xor
ffree
inc
cmc
pop
les
into
out
or
lock
leave
scas
icebp
lock
out
jl
push
cmp
mov
lret
in
loope
loopne
jns
jle
insb
adcl
push
ja
lds
dec
jmp
mov
cli
mov
into
push
out
and
dec
mov
xchg
loop
rorb
xrelease
ret
jp
ret
or
jp
int3
dec
lret
out
pop
jo
fidivl
sub
popa
adc
inc
mov
xlat
cwtl
add
lret
mov
sbb
sub
pop
dec
out
cmpsl
cmp
call
bound
dec
test
cmp
push
mov
cltd
and
or
sbb
aaa
or
pop
pusha
aam
mov
mov
mov
aam
in
aad
dec
vmptrst
cltd
jmp
and
hlt
outsl
and
xchg
lret
lds
mov
mov
sbb
mov
out
sub
and
cwtl
and
daa
jb
nop
cwtl
je
test
pop
fisubrl
repnz
cmp
addr16
daa
dec
pop
negb
cmp
cli
cli
ljmp
jp
and
push
cmp
and
jne
cmpl
shl
sbb
aad
test
jae
hlt
sub
ja
rcl
xchg
sahf
std
jne
mov
clc
lods
rclb
mov
sbb
mov
scas
fdivl
push
push
pop
mov
cli
jmp
pushf
xchg
es
data16
sub
inc
sub
dec
repz
pushf
push
push
lods
inc
shlb
pushf
mov
jnp
aam
sarb
dec
add
hlt
jecxz
or
hlt
sahf
cmp
mov
call
je
jg
mov
xlat
push
or
mov
or
mov
push
aam
loope
cmp
mov
mov
je
imul
push
push
into
mov
mov
xchg
cmp
push
xchg
push
inc
rorl
mov
out
insl
lret
subb
mov
popa
mov
xchg
cmpsb
jne
jb
lods
ud0
lds
rclb
faddl
push
mov
and
xchg
test
pop
add
imul
sti
lret
fmull
stc
inc
add
push
addb
inc
cmp
mov
cmpsl
add
cld
jae
add
mov
cmpb
xor
les
hlt
or
sub
inc
ret
std
jo
add
dec
idivb
nop
cmp
pop
cmp
or
dec
xchg
sbb
xor
xchg
jns
out
repnz
push
jecxz
and
insb
jg
lds
push
sbb
push
xchg
adc
nop
push
xor
push
lcall
mov
rolb
jg
sarl
push
daa
in
enter
insl
andb
stos
insb
pop
dec
mov
cmp
call
movsb
lods
and
sub
adc
push
inc
push
jmp
nop
sbb
inc
outsl
lods
lret
xchg
sti
add
jo
and
push
mov
js
cmp
sub
jl
push
stos
out
loop
das
rcll
and
sbb
push
mov
jmp
mov
js
rcll
stc
adcb
les
pop
lahf
fnstenv
pop
hlt
ss
cmc
mov
loop
ficoml
add
xorl
ret
ret
xor
push
mov
dec
lds
sub
das
fnstcw
pop
insl
xlat
mov
aam
andl
pop
fwait
sti
push
jle
jmp
mov
mov
leave
mov
dec
mov
outsb
cmp
test
xor
imul
cs
stos
cmp
cmp
cmp
push
idivb
xchg
inc
sbb
xchg
fwait
dec
mov
sub
testb
in
add
sbbl
mov
inc
lock
jmp
pop
scas
push
xor
rclb
mov
mov
mov
fists
cld
mov
pop
pop
out
outsb
mov
insb
dec
inc
pop
loop
sbb
jbe
fadds
ljmp
jns
mull
fbld
push
fidivl
ret
andl
syscall
and
aam
mov
push
sbb
xchg
aad
dec
push
into
push
push
sub
or
leave
cmpsb
inc
mov
arpl
stos
sub
daa
or
pusha
sbb
mov
ret
mov
jb
mov
into
and
test
loope
orb
jge
mov
xor
sbb
mov
lea
je
imul
dec
sbb
sub
cmc
mov
dec
ja
out
adc
mov
xchg
push
fstl
xor
lods
mov
xchg
mov
pop
scas
add
stos
and
sub
pop
mov
les
in
shrl
xchg
pop
jne
push
push
pop
jb
mov
mov
fidivrs
test
push
out
enter
seto
lods
dec
insb
add
lcall
or
and
test
jmp
icebp
inc
cwtl
les
dec
sahf
xchg
loopne
enter
push
outsb
push
xor
int
lds
jmp
loopne
or
in
gs
add
out
testl
lcall
into
loop
inc
xor
pop
call
icebp
xor
mov
sub
or
out
xchg
xchg
jb
push
enter
es
int
mov
rol
lods
out
and
stc
loopne
jno
jno
pop
mov
push
mov
sub
or
lods
imul
das
jmp
ljmp
rolb
les
movsl
mov
cmc
push
push
dec
iret
mov
jo
pop
push
add
stos
sahf
inc
int3
or
pop
xor
lds
inc
pop
mov
mov
pop
fs
add
pop
out
inc
push
inc
test
push
popf
mov
adc
orl
xor
imul
mov
and
xchg
pop
imul
sahf
rcrb
mov
out
ret
ret
das
and
jg
ret
std
push
insl
insb
js
outsl
cmp
xchg
dec
fwait
imulb
inc
popf
jb
pop
cmpsl
insl
cs
mov
loope
int
cmc
bound
xchg
push
push
or
cltd
cmpsl
mov
jp
cmp
mov
mov
adc
mov
or
mov
sahf
stos
dec
divb
subb
xor
sub
movsl
pop
sbb
mov
enter
js
and
add
cmp
jb
or
mov
mov
xchg
mov
and
push
call
pop
int
xor
repnz
adc
push
sub
and
lods
sub
mov
mov
imul
mov
outsb
aam
cli
mov
cwtl
test
adc
into
push
notb
sub
sub
arpl
movsb
out
xor
push
mov
std
xor
cmpsb
outsb
dec
loopne
icebp
jmp
outsl
sbb
inc
out
push
xchg
ja
ficoml
inc
or
jmp
fsqrt
add
je
and
scas
out
jae
lods
out
push
push
and
adc
xorl
das
and
mov
xchg
mov
aaa
mov
rorl
mov
daa
sub
aam
leave
or
test
sub
and
out
xchg
imul
sbb
pop
mov
pushf
mov
orl
mov
andb
es
mov
cmp
dec
fildl
loopne
mov
fstl
aam
inc
repz
sbb
add
add
add
and
rcrl
mov
cmp
or
gs
pop
and
add
lods
xchg
push
lock
and
xchg
daa
enter
test
rorb
int3
loopne
xor
jmp
xchg
dec
and
dec
inc
mov
iret
sub
sbb
adc
xchg
cmp
mov
out
jbe
insb
lret
pop
xchg
inc
sub
jmp
mov
sub
mov
icebp
and
cld
pop
pop
int
or
and
movsb
pushf
jl
mov
sub
xor
sets
xchg
negb
repz
pop
mov
dec
aad
stc
lea
push
and
call
xchg
shlb
push
push
xchg
xchg
push
imul
mov
aam
int3
scas
cmp
sub
fucomi
les
shrl
fisubs
dec
lods
enter
in
not
stc
or
push
cmp
ss
sbb
sahf
and
loop
add
jg
jbe
jae
sub
outsl
add
cmpsl
xchg
jge
sub
cmp
cmp
pop
sub
shrl
inc
pop
sub
mov
jne
loopne
pop
jmp
mov
dec
jbe
inc
test
cli
ljmp
and
xchg
inc
mov
adc
imul
jbe
pop
icebp
pop
cli
adc
xchg
andb
push
loopne
dec
pushf
repz
loopne
mov
daa
movsb
ret
inc
lea
adc
ja
subl
ljmp
rclb
mov
fbld
cmp
into
mulb
ret
inc
push
sbb
lods
jno
out
in
ljmp
sbb
rorl
cld
jmp
pop
pop
push
push
aam
pushf
fld
mov
movsb
cli
lret
push
data16
add
stc
arpl
int3
mov
aaa
orb
and
mov
sub
jge
push
pushf
sub
ficompl
jmp
notb
ret
mov
jle
popa
and
adc
hlt
inc
pop
std
mov
jp
mov
cmc
mov
adc
scas
jp
int
sub
or
shlb
add
scas
testl
sub
ss
xor
push
xor
out
sub
in
and
lret
cmc
sbb
outsl
nop
pop
push
sbb
jo
in
scas
jecxz
pop
push
xchg
fildll
adc
nop
jnp
or
xchg
mov
cli
pusha
adc
mov
addr16
cmp
or
aaa
les
mov
mov
sub
out
push
or
adc
lahf
pop
mov
shlb
cltd
mov
stos
mov
out
mov
sub
int3
push
xor
xchg
mov
jge
aas
ror
jbe
scas
cwtl
mov
mov
adc
stos
push
push
mov
mov
mov
adc
out
cli
lret
outsl
movsb
imul
adc
mov
btr
fucomip
aaa
les
mov
cld
inc
cmc
testb
iret
dec
outsb
mov
cmp
lods
out
push
int3
idivl
xchg
inc
cmpsb
xchg
add
jo
mov
cltd
adc
mov
insb
xchg
frstor
and
or
das
aas
stos
jle
pushf
lcall
ret
loopne
xchg
icebp
insb
xor
aam
outsl
inc
mov
ja
repnz
pop
cli
aas
pop
clc
mov
jp
add
jns
mov
push
sbb
and
jo
xchg
out
sub
dec
mov
push
out
dec
pop
fmuls
addr16
push
call
jnp
inc
add
jle
sub
out
inc
mov
gs
jns,pt
test
jmp
inc
dec
lds
in
mov
rol
pop
gs
push
fmul
sub
inc
mov
test
test
xchg
pop
xchg
cmp
je
cmp
inc
pop
pop
rcr
scas
popa
sti
cmc
out
out
jecxz
add
adc
out
jns
adc
sub
lret
cltd
lock
mov
adc
out
lods
pop
lahf
fsubs
inc
jmp
scas
xor
cmp
sub
and
sub
mov
sub
sub
inc
and
jne
stc
arpl
jne
jno
aam
hlt
push
push
pop
sub
andb
lea
mov
sar
leave
inc
xchg
or
mov
xor
mov
xor
or
push
push
imul
push
pop
mov
shrd
divl
push
mov
stos
sbbl
push
jne
cmpsb
lods
add
ret
sub
cwtl
shll
jns
lods
push
mov
pop
and
loope
ret
sbb
inc
test
lret
movsb
pop
notl
js
cs
lret
add
push
jle
push
lahf
pop
movsb
jbe
iret
pop
lods
daa
lock
dec
xchg
push
sub
leave
iret
inc
xchg
jne
push
and
in
sub
je
out
mov
ljmp
sub
mov
in
pop
je
push
push
iret
mov
add
xchg
and
in
pop
dec
scas
in
jp
test
push
inc
xchg
inc
mov
les
push
cmpsb
imul
jae
push
or
aad
xchg
adc
sbb
push
pop
pop
jbe
jne
cmp
mov
bound
sub
add
hlt
jbe
repnz
cmp
mov
jmp
pop
out
cltd
add
or
sub
pusha
fisttpll
lret
push
in
inc
mov
push
stos
mov
je
jmp
inc
xchg
movsl
daa
pop
lahf
jecxz
mov
test
mov
mov
push
mov
or
and
push
push
mov
in
cmc
scas
mov
gs
xchg
adcb
cmpsl
add
arpl
pop
dec
test
shrb
jmp
scas
mov
adc
and
push
cltd
cltd
mov
scas
push
push
decb
jbe
in
and
insb
inc
aas
cmp
pusha
in
inc
in
ja
clc
inc
mov
pop
adc
add
mov
and
push
sbb
jge
and
mov
and
aad
dec
insl
arpl
xlat
mov
sub
mov
dec
stc
or
pop
dec
xor
popf
pop
sub
aaa
cmp
dec
sbb
sahf
sub
push
les
mov
push
shr
cmp
arpl
rcrb
scas
sbb
stc
fildll
mov
mov
dec
clc
dec
bound
loopne
or
lcall
arpl
popa
les
jmp
sbb
fisttpl
dec
out
or
fisubrs
jns
sbb
out
sub
shr
inc
rcl
pusha
fisubrl
xor
ret
jle
int3
or
or
and
jge
or
out
xor
movsl
sbb
and
cs
xlat
jns
sti
mov
fistpll
cli
mov
sub
gs
cmpsl
mov
and
adc
pop
in
mov
mov
push
cmpsb
in
xor
movsb
stos
inc
pop
push
sub
loope
dec
in
out
mov
add
test
push
fiadds
xchg
mov
loop
sub
movsb
mov
and
shlb
push
push
mov
and
dec
je
imul
mov
data16
xor
movsl
cmp
mov
mov
push
je
std
xbegin
fnsave
adc
sti
xchg
cmp
pop
inc
or
and
pop
cmp
ja
xchg
imul
sub
pop
lahf
mov
fsubl
test
iret
enter
in
lret
insl
push
outsl
lea
cli
divl
dec
pop
out
idivb
push
jbe
rcl
scas
jmp
sahf
jno
mov
mov
jae
xchg
das
inc
cmp
push
or
adc
movsb
rcll
dec
lahf
lock
sub
sub
push
pop
mov
mov
test
repnz
pop
pop
mov
icebp
rorb
pushf
add
daa
xor
ja
inc
add
iret
push
outsb
movsb
or
popa
out
fldcw
stc
dec
adc
jge
jp
les
mov
mov
mov
lea
hlt
push
sbb
ds
stos
xorl
sub
jnp
fmuls
xchg
into
xchg
mull
jg
sbb
mov
pop
xchg
sbb
jb
dec
repnz
push
pcmpeqw
fnsave
xchg
pop
xchg
xor
testl
sbb
xchg
lret
mov
popf
gs
clc
movsl
ds
das
out
jno
es
fldcw
ffreep
dec
jmp
fadds
push
test
xor
das
pop
jecxz
ret
test
mov
and
fldenv
push
outsl
pushf
stos
push
add
add
mov
daa
xchg
jle
ret
lods
pusha
icebp
push
mov
lods
mov
sahf
jae
mov
mov
adc
loop
arpl
in
xchg
mov
cmp
iret
repnz
adc
sbb
adc
imul
push
mov
or
addr16
sbbb
xchg
pop
ds
or
popa
inc
lea
sbbl
fwait
nop
out
xorl
or
pushf
pop
push
mov
jbe
pop
and
xor
pop
mov
sti
sahf
aas
insb
jo
sbb
insl
clc
dec
and
push
xchg
repz
dec
pop
arpl
cmp
fwait
popf
push
adc
daa
sbb
js
pop
es
mov
xor
fstps
in
iret
movsb
mov
pop
jmp
mov
into
xchg
arpl
insl
push
xchg
pop
xchg
jnp
mov
adc
es
dec
mov
ja
in
outsb
dec
out
sub
sbb
ror
std
push
dec
mov
pop
adc
and
cmpsl
jmp
cmp
loopne
pop
movsb
dec
cli
fdivrs
ja
call
xchg
std
inc
add
shl
sub
aad
or
mov
arpl
lret
leave
idivb
cli
adc
div
xor
sub
out
fs
lods
scas
inc
hlt
inc
mov
pop
or
jbe
outsb
mov
fstpt
dec
pop
pop
pop
add
sbb
xchg
and
je
jge
into
aas
mov
cwtl
and
pushf
push
add
imul
icebp
notb
mov
mov
ds
xchg
ret
push
call
orl
mov
mov
shl
cmc
and
cmpsl
insb
sub
imul
inc
pop
or
loope
push
or
push
adc
xchg
outsb
pop
addr16
aaa
lea
sbb
js
lahf
mov
popf
addb
flds
incb
pop
imul
lret
test
gs
jg
dec
ret
andb
sti
dec
jmp
jle
jmp
icebp
gs
fisubrs
repnz
inc
pop
sbb
mov
cmp
arpl
ret
lret
jl
mov
rcrl
lods
aad
fs
xchg
cltd
add
ss
dec
fdivrl
iret
dec
mov
dec
dec
cmp
shrb
inc
xchg
clc
enter
mov
xchg
mov
mov
lcall
nop
cmp
jg
pop
ret
jle
movsl
jp
mov
jge
into
push
mov
pushf
inc
inc
pop
fsts
fneni(8087
test
jno
outsl
push
gs
xlat
lods
pusha
fidivrs
rclb
inc
mov
inc
mov
add
xor
adc
xor
sub
push
add
xchg
inc
mov
movsb
inc
flds
dec
sbb
cmp
loop
ja
sbb
imull
outsb
daa
or
mov
outsb
jecxz
adcb
ja
sbb
mov
popl
and
mov
shr
inc
mov
sahf
jae
xor
jbe
loope
jnp
mov
cmpsb
xchg
mov
movsl
shll
add
mov
xlat
cltd
clc
loopne
repnz
sub
xor
adc
dec
out
sub
push
ja
iret
std
mov
in
jnp
xchg
adc
shl
ss
enter
push
or
nop
pop
stos
push
lcall
jo
cwtl
push
mov
popa
jno
in
push
inc
lret
jno
aam
push
xchg
movsb
sarb
push
or
pop
mov
inc
mov
iret
or
loopne
nop
cmp
xlat
pop
jb
data16
or
rorb
loop
sub
ljmp
ret
push
pop
into
dec
dec
sub
push
push
std
fcompl
cmp
popa
and
test
inc
imul
sub
loopne
xor
pusha
loop
adc
iret
cs
insl
insb
cmp
cld
pop
insb
std
dec
in
fstenv
sbb
ljmp
out
out
mov
mov
sub
in
insb
xchg
mov
jo
push
cwtl
nop
bound
mov
fxch
imul
dec
lds
test
rolb
rolb
xor
popa
orb
pop
stos
xchg
jne
sub
jmp
mov
jle
or
jb
xchg
push
cmp
incl
notl
arpl
inc
inc
xor
scas
daa
hlt
imul
pusha
dec
pop
sub
sbb
dec
lea
out
jbe
shll
xchg
mov
xlat
rcr
jl
adc
adc
mov
sub
movsl
popa
jecxz
js
out
add
mov
inc
mov
cmpsl
dec
or
in
fmul
out
frstor
xchg
xchg
push
aam
add
addr16
push
aas
lods
mov
sbbb
xchg
out
popa
xchg
std
and
fnsave
orb
pop
jbe
pop
into
icebp
xchg
cmp
fdivp
xor
push
mov
daa
cmpsl
jp
pop
inc
leave
divl
xor
mov
out
push
loopne
ljmp
mov
fwait
das
mov
jb
add
fdivrs
pop
loopne
jns
out
sub
xchg
lds
pop
pop
push
loop
cs
sbb
xchg
or
gs
sub
sub
outsb
imul
pop
mov
or
aas
jl
xchg
sub
nop
jbe
dec
mov
jecxz
lods
stos
sub
out
push
pop
mov
jo
lret
jle
add
mov
mov
jp
je
xchg
jmp
pop
fisubrs
dec
test
or
in
int3
and
sub
pop
std
jnp
shlb
inc
sub
mov
arpl
inc
clc
xor
sbb
test
aaa
cld
jmp
out
push
xor
pop
sbb
in
jmp
repnz
mov
int
gs
xor
xchg
xchg
mov
jo
and
adc
sbb
xchg
clc
clc
imul
push
sbb
pop
mov
imul
mov
add
mov
and
lahf
lea
dec
pop
lret
in
xor
inc
int
dec
insb
xor
aam
sbbb
pop
into
pop
imul
sub
dec
je
aas
movsb
pop
add
mov
cmp
and
cmpsb
popa
mov
out
sbb
loope
adc
pop
or
clc
imul
add
enter
add
bound
jecxz
sbb
push
or
jp
je
jg
in
push
imul
jge
arpl
and
out
pop
jbe
imul
rcr
push
mov
and
daa
and
das
outsl
scas
fs
outsl
inc
std
pop
inc
xor
mov
cmp
push
subl
jns
andl
cmc
sbb
repz
dec
jmp
push
ljmp
pusha
stc
xor
leave
cmp
cwtl
sub
shl
mov
xchg
pop
repnz
mov
das
add
mov
push
popa
aas
pushf
vmovdqu
pop
push
outsb
cmp
shll
mov
fisttpll
dec
dec
je
dec
jle
or
movsb
cmpl
cwtl
lods
sti
xor
lods
in
jmp
fisttpl
shlb
aam
js
adc
push
dec
shll
push
sub
dec
sbb
sub
adc
mov
and
fcoms
addr16
lret
xor
mov
add
test
inc
push
ficoml
fstpl
mov
cmc
rcrb
movsb
popa
in
loopne
mov
sbb
cmp
mov
pop
jp
out
ret
lea
dec
push
push
scas
loope
jo,pn
jbe
aas
jle
cmp
leave
leave
out
or
cwtl
mov
or
icebp
jecxz
push
mov
mov
mov
das
jns
icebp
les
ds
test
cmp
fs
jle
dec
sbb
fwait
stos
mov
mov
scas
pop
xchg
jmp
mov
pop
mov
sbb
lods
scas
call
mov
push
xorl
mov
sub
mov
lods
fildll
fsts
cmpsb
pop
or
cmp
shl
push
inc
cmpsl
adc
popf
inc
mov
call
mov
loop
inc
push
cld
stos
cmp
xchg
popf
mov
int3
xchg
xchg
add
push
mov
pop
ret
jae
sbb
fidivs
cmp
pop
imul
add
mov
sbb
dec
jae
or
js
inc
push
and
add
scas
cmp
lret
mov
testl
icebp
insb
mov
jnp
mov
mov
lods
sub
add
ret
loope
fidivl
fisttps
push
jecxz
inc
pop
jbe
mov
in
in
scas
jmp
adc
test
add
mov
hlt
jecxz
mov
nop
mov
push
xchg
and
mov
orl
rorb
or
lods
fwait
into
mov
pop
les
aas
int3
inc
add
enter
sbb
jbe
add
or
push
test
subb
lea
push
jecxz
xchg
repnz
popf
or
iret
push
fimuls
inc
push
add
clc
mov
mov
fsts
stc
xchg
sbb
xchg
mov
pop
shl
out
pop
add
out
jnp
sbb
sti
and
cs
sbb
dec
mov
imul
movsb
cmp
subl
aad
dec
or
xchg
mov
ds
lahf
cld
cld
cmpsb
inc
lahf
cmp
js
jno
xchg
push
mov
pushf
aad
cmp
dec
test
popf
mov
dec
adc
cmpsl
mov
shrl
stos
outsb
or
cmp
or
aas
mov
mov
xchg
js
xor
dec
jge
sbb
loope
xor
andb
adc
xchg
push
mov
push
and
out
stos
mov
inc
dec
sti
call
dec
fnstenv
aad
xor
ss
jns
jno
dec
dec
jp
movsb
cltd
dec
repz
or
xchg
pop
add
in
and
je
mov
into
mov
testl
mov
movsl
jns
loope
mov
sub
pop
scas
push
stos
out
pop
xchg
out
cmp
ret
pop
push
pop
xchg
pop
subl
pop
data16
or
jns
xchg
scas
mov
mov
idiv
pop
test
cli
jp
aad
cmpsb
sub
jl
pop
loopne
xor
mov
fmulp
push
mov
shll
jmp
out
lahf
mov
test
bound
test
jno
or
dec
jne
ret
mov
arpl
mov
mov
mov
aas
iret
cmp
and
adc
mov
leave
jno
iret
cli
xor
fsubrs
push
jno
std
mov
dec
and
ret
cltd
outsl
jmp
nop
sbb
push
imul
jae
into
cmpsb
movsb
pop
xchg
int
mov
int
mov
jl
rcrb
sbb
push
imul
test
jmp
pop
xchg
popa
in
icebp
or
sub
push
sti
aaa
or
cmp
dec
xchg
sbb
sbb
dec
test
lret
add
xchg
daa
mov
je
and
aaa
or
fnstcw
push
jge
push
cmp
hlt
xchg
mov
imul
mov
or
add
cmp
jp
mov
out
mov
sti
xor
push
sbbb
sbb
outsb
dec
aaa
jbe
shl
jne
inc
jp
ljmp
mov
xor
pop
aas
push
cwtl
mov
sbb
in
xchg
pushf
or
cltd
scas
push
xchg
pop
call
sub
std
xchg
scas
pop
andl
ja
lea
dec
sar
mov
std
inc
inc
stos
push
ja
stos
insb
cmp
test
pop
add
push
xrelease
and
xchg
mov
aaa
or
pushf
rcll
iret
out
cwtl
movsb
xor
les
clc
sub
loop
xchg
sub
adc
dec
dec
adc
add
xor
inc
lock
pop
stos
pop
in
je
sbb
dec
call
sbb
add
jns
ja
push
leave
cmp
std
hlt
lahf
lahf
out
enter
sbb
pop
pop
outsl
hlt
sahf
out
push
xchg
inc
cmp
popa
sahf
push
dec
iret
xlat
push
or
mov
xor
sub
test
call
lret
mov
mov
pop
les
ret
mov
mov
mov
mov
inc
sub
cmpsl
mov
fisubrs
fcomi
add
xor
pushf
or
shll
or
daa
iret
inc
pop
mov
mov
enter
inc
out
mov
js
pop
leave
xor
or
and
fisttpll
cmp
push
jns
push
mov
mov
jnp
add
scas
mov
popa
adc
mov
dec
or
jl
pusha
jne
repnz
mov
jnp
imul
sbb
sub
jmp
enter
xchg
push
inc
fwait
mov
repnz
imul
scas
push
inc
fistpl
nop
ret
jp
pop
jge
gs
adc
adc
daa
or
pop
add
sbb
add
daa
sbb
ja
jmp
pop
fucomp
push
xchg
popf
jp
xchg
xchg
mov
stc
add
mov
aad
movsl
add
dec
iret
imul
das
imul
mov
ja
out
cmpsl
je
aam
jge
rolb
mov
outsb
or
imul
mov
mov
push
pushf
mov
cmp
subl
stc
mov
pop
or
cmp
pop
jg
ljmp
lret
in
je
test
adc
sbb
inc
xchg
sbb
push
and
mov
add
or
ficomps
and
ret
dec
loopne
sub
push
mov
out
data16
lret
cmp
fcompl
mov
cmp
sbb
jnp
aaa
std
imul
mov
adc
pop
dec
idiv
push
cmp
rcrl
inc
jae
or
addl
daa
mov
pusha
cmp
mov
jbe
mov
std
fsubr
outsb
mov
sar
xchg
add
jp
arpl
mov
dec
gs
jnp
sbbb
add
insl
sti
mov
add
inc
inc
add
inc
cmp
mov
adc
sub
cmp
jl
cltd
iret
xor
adc
mov
shrb
out
arpl
jle
cmp
sbb
mov
ud1
mov
inc
cltd
std
xor
test
jle
pop
and
outsb
daa
bound
push
call
data16
roll
or
rcl
sbb
xchg
cmpsb
neg
dec
jb
in
lret
cltd
and
pop
int3
aad
inc
pop
or
push
push
js
or
jb
pop
xlat
je
sbb
es
sub
fadd
aam
dec
dec
push
xor
addr16
lahf
xchg
pop
inc
mov
push
scas
push
loope
call
xchg
jp
dec
lea
mov
mov
fisubl
inc
sub
add
adc
sbb
adc
cmpsb
sbb
dec
cmp
lods
sub
push
gs
es
test
xor
fsubl
addr16
ret
push
inc
adc
stos
loopne
idiv
jae
cli
jmp
fadds
sub
cmp
inc
cmc
pop
jge
jbe
data16
mov
sub
mov
lods
pop
inc
loop
sbb
int
test
ret
inc
jle
mov
in
pop
mov
xchg
out
insb
jae
xor
dec
daa
fs
xlat
and
sub
lahf
mov
push
cmpsl
ds
jae
jnp
or
outsl
stos
inc
pusha
or
sub
jg
insb
jmp
repz
shll
mov
xor
jp
cmp
fisttpll
xchg
xchg
mov
mov
push
loopne
sbb
jg
idiv
jecxz
bound
loop
not
insb
push
xchg
rolb
inc
jns
jl
cwtl
addr16
cmpsb
xchg
lock
add
jge
sbb
scas
fwait
sbb
cwtl
cmp
adc
dec
mov
inc
leave
insb
in
sub
int
imul
test
test
mov
jmp
sub
jg
push
sbb
jge
jmp
gs
push
lret
xchg
in
fistps
xchg
cmpsl
int
pushf
imul
push
sub
cmpsb
pop
sub
xchg
push
scas
ja
aad
sub
jne
xor
int
ror
mov
les
dec
mov
mov
loop
add
add
jbe
dec
in
rcll
addl
add
scas
pop
lods
mov
out
clc
mov
jb
push
mov
sahf
push
scas
imul
pop
ret
in
stos
cmp
addr16
mov
sahf
out
dec
and
xchg
push
add
pop
and
test
xor
loope
ja
mov
mov
out
pop
and
cld
jecxz
pop
xor
andl
int3
aaa
pop
lahf
mov
sub
adc
cmpsb
cltd
add
repz
enter
or
add
jmp
push
jo,pn
dec
mov
lahf
arpl
call
jecxz
lea
xor
sarl
rclb
pop
xor
or
dec
sahf
out
mov
cmpsl
xchg
out
jns
sbb
add
ja
sbb
pop
jle
vcmpss
jecxz
mov
test
icebp
insb
push
insl
movsl
pop
je
jecxz
sub
aam
dec
loop
push
or
pusha
out
push
lahf
ljmp
imul
or
jp
mov
mov
or
lock
and
scas
jae
xchg
mov
add
inc
stc
lods
jg
and
pop
in
sbb
sub
scas
mov
or
sbb
std
add
adc
jmp
je
sbb
push
or
xor
push
or
inc
scas
inc
shl
cwtl
add
jmp
add
pushf
mov
pop
mov
cmpsl
cli
fsubl
fdivrs
sub
mov
pop
mov
repnz
insl
ret
rorb
jge
aam
adc
jge
mov
push
or
incl
push
inc
mov
popf
das
adc
sub
mov
adc
je
pop
ljmp
jp
cwtl
mov
mov
subl
call
mov
mov
push
push
mov
stc
xchg
dec
ret
pushf
div
repz
sbb
sbb
int3
fbld
test
mov
mov
rcrl
subb
mov
and
xchg
cmp
sahf
movsb
add
xchg
sub
test
mov
pusha
loope
inc
or
jnp
xchg
movsb
insl
inc
xor
mov
insl
les
shl
and
in
lret
popa
adc
cmpsb
jnp
lea
aaa
scas
jne
cltd
xchg
jmp
sbb
ljmp
fimuls
stos
inc
lret
insl
popa
xor
repnz
insb
dec
xchg
lret
pushf
xchg
dec
pop
add
imul
daa
cmpsb
mov
xor
add
adc
cmp
fwait
xchg
es
dec
add
mov
lret
xlat
cmpsb
xor
insl
push
stos
inc
cmp
xchg
imul
jle
dec
lahf
mov
test
rol
pusha
sub
lock
cmp
sahf
xchg
movsb
pusha
mov
ja
add
cmp
xchg
mov
xchg
jae
clc
push
iret
icebp
xchg
xchg
push
sbb
jns
push
imul
jae
add
pop
inc
inc
add
pop
std
cld
ja
movsb
xor
xchg
sbb
pop
jmp
scas
gs
pop
add
sub
xor
in
neg
cwtl
les
pop
movsl
sub
dec
dec
fs
stos
out
pop
xchg
lret
js
ss
loope
xchg
std
xor
adcb
aas
adc
mov
mov
push
sub
cmp
stos
cmp
outsb
int
pop
push
mov
imul
fidivrl
pop
dec
xchg
in
ss
test
sbb
sbb
test
les
repz
jge
sub
inc
ljmp
adc
mov
jnp
mov
sbb
jge
sub
jnp
push
subb
or
jle
xchg
imulb
dec
push
out
push
xor
mov
mov
inc
jb
scas
out
aam
clc
mov
xchg
cs
imul
iret
cli
push
hlt
inc
mov
inc
and
sub
imul
cli
mov
int
cmpsl
or
data16
pusha
dec
fistl
adc
mov
notl
out
inc
cmp
pop
js
dec
testb
xor
jge
pop
ljmp
xor
and
mov
inc
ds
pop
sbb
mov
fwait
jbe
add
inc
xchg
sbb
jne
adc
loope
in
jmp
shrb
cs
cmp
and
jmp
add
testb
je
dec
cmpsl
imul
cmpsl
push
out
xchg
ljmp
movsl
sbbl
ss
in
inc
dec
nop
sbbb
rclb
aaa
mov
push
jmp
loope
cmpsl
adc
rcl
mov
fildll
call
ja
popf
ljmp
mov
lret
or
fs
inc
mov
push
cli
iret
pop
xor
sar
dec
mov
xchg
loopne
jl
mov
int3
stc
mov
pop
inc
movsl
out
mov
into
shll
jae
lds
mov
lahf
movsl
sbb
repz
xchg
xor
and
sub
and
mov
ss
dec
or
js
push
repz
jg
push
decb
dec
imul
outsl
xchg
pop
mov
sub
cmp
push
pop
cmp
xchg
jle
push
inc
add
xchg
andl
jae
push
and
dec
js
inc
test
sub
jb
xor
int
in
inc
or
mov
in
cs
jge
daa
icebp
sub
sbb
test
sub
or
mov
popa
inc
fwait
in
cmpsl
sub
cmp
xlat
leave
addr16
mov
andb
aaa
dec
jmp
inc
lods
hlt
xchg
in
cltd
mov
lahf
movb
and
pusha
ret
adc
and
ret
inc
mov
push
mov
fldl2e
mov
addl
pop
dec
inc
dec
shlb
ds
ret
mov
mov
and
repnz
mov
cmp
int3
gs
pop
into
dec
mov
mov
lea
fidivs
add
dec
lahf
iret
adc
pushf
sbb
mov
stos
data16
cld
inc
lock
lds
cmp
mov
inc
mov
lds
insb
pop
cmp
push
jl
xchg
jmp
fdivp
and
xor
jp
jp
nop
hlt
xchg
or
ds
push
sbb
mov
pop
iret
jno
jl
cmp
dec
add
inc
rcl
mov
jae
sub
mov
es
bound
test
cmc
ret
cmc
ret
jnp
aam
mov
cmp
xchg
repz
mov
mov
xchg
rcrl
popf
sbb
dec
mov
xchg
mov
add
aam
mov
cmp
pop
jmp
loop
push
ja
lods
push
dec
add
lret
xchg
fcoms
push
mov
es
sbb
push
lcall
xlat
adc
xchg
movsl
flds
sbb
mov
xchg
push
sub
fists
or
adc
cmpsl
jno
out
imul
lcall
in
push
fiadds
clc
or
mov
int
jne
faddp
pop
js
rcrl
inc
or
sub
dec
out
imul
lea
bnd
loopne
fyl2x
popf
adc
rol
xor
lret
push
mov
fstpt
roll
xchg
gs
fcomps
ljmp
add
in
arpl
push
icebp
mov
shll
adc
dec
das
jno
cmpsl
cli
fadd
out
lret
mov
in
xchg
push
das
outsb
lock
push
mov
daa
out
mov
fs
rolb
cmpsl
pop
int3
pop
in
rcll
fcmove
scas
out
aam
int
mov
cmp
arpl
shll
test
xchg
pop
mov
sub
jo
loop
sub
or
add
jo
shrl
subl
cmp
sbb
clc
in
xor
cwtl
mov
inc
data16
pop
addb
je
ss
ljmp
jmp
sbb
mov
inc
out
mov
add
fcoms
pop
dec
xorb
pop
cmp
cmpsl
fdiv
xchg
stos
outsl
and
imul
pop
push
fldt
arpl
push
iret
scas
call
std
mov
add
xchg
xchg
mov
stos
xor
pop
shrb
xchg
sub
jge
mov
stos
jno
test
stos
sub
pop
scas
roll
push
cmpsb
pushf
add
scas
popf
les
push
mov
call
and
daa
sbb
and
fwait
dec
ja
pop
mov
into
jb
cmc
adc
xchg
test
repnz
add
gs
cld
cmp
add
cltd
push
adc
xor
stos
repnz
aad
dec
mov
sbb
lods
aad
xlat
sti
jle
xor
loop
aas
out
sub
idiv
ss
xlat
inc
xchg
adc
jl
adc
jne
dec
dec
add
ret
push
push
and
lea
movsb
lods
je
test
jnp
dec
pop
and
xchg
fcoms
int
dec
sbbl
sahf
add
rclb
repnz
sarl
push
xlat
push
out
insb
addr16
les
push
and
push
lahf
or
mov
add
add
xor
andb
or
andl
out
scas
mov
add
and
add
xchg
xchg
les
mov
jns
ror
lret
cmp
in
mov
mov
call
fcomps
and
pop
sti
cmp
mov
in
out
add
add
into
lahf
push
add
sahf
lcall
idivb
xchg
imul
lcall
jno
pop
mov
add
mov
into
enter
or
inc
pop
fmull
sub
fwait
or
ret
cmpsb
sti
mov
mov
out
mov
xlat
lods
sbb
sbb
mov
xor
mov
je
shll
lds
cmp
movsb
lods
mov
lea
push
clc
lahf
pop
push
int
xchg
pop
mov
xchg
xchg
mov
frstpm(287
and
pop
push
out
add
cwtl
lock
mov
xor
mov
subl
or
mov
push
shrl
test
adc
stos
cld
int3
mov
xchg
cmpsb
inc
pop
lods
dec
cmp
jbe
jg
sub
mov
mov
pop
fdivs
mov
mov
jecxz
pop
pop
imul
sbb
call
addb
add
rcl
data16
pop
xchg
sbb
cli
inc
add
cwtl
rol
or
inc
pushf
and
gs
inc
fcomps
cmp
push
mov
out
lods
push
pop
or
loopne
imul
inc
fwait
das
pop
push
test
cmp
ds
lahf
push
mov
aad
mov
mov
mov
leave
push
mov
xor
in
ljmp
pop
add
int
adc
or
aas
jno
xchg
jmp
sub
adc
out
lea
fbstp
adc
mov
shll
jns
xor
rclb
test
pop
movsl
std
std
and
shrl
jmp
or
fsubp
punpckldq
clc
sbb
mov
mov
or
inc
gs
aas
stos
xchg
fcmovbe
jge
jl
or
mov
pusha
in
xor
iret
cld
shlb
test
pop
imul
mov
push
pop
fs
scas
fnstenv
imul
dec
in
push
push
sub
pop
push
or
fiadds
rcrb
xor
or
leave
inc
dec
and
adc
xchg
sbb
jns
xchg
lret
nop
sub
inc
or
mov
hlt
push
or
cltd
inc
into
aas
and
fnstenv
sub
mov
cmp
hlt
aad
hlt
push
inc
js
aas
jp
push
or
and
mov
dec
shr
xchg
sahf
mov
mov
test
mov
pushf
xor
clc
inc
add
popa
pop
stc
cmc
push
pop
add
bound
cld
adc
mov
sub
mov
fmuls
adc
xor
movsb
mov
xor
jmp
rsqrtps
subb
shll
ljmp
mov
dec
ja
sarl
pop
repz
movsl
xchg
lret
jge
mov
popa
cwtl
in
out
dec
stos
adc
iret
pop
mov
sub
and
aad
jnp
cmp
sbb
xor
adc
inc
je
jae
in
pushf
dec
xor
es
mov
pushf
lcall
shlb
mov
xchg
outsb
shll
aad
pop
cmp
sarl
popf
sbb
pop
scas
mov
scas
bound
in
pop
pop
in
idivl
and
test
mov
rcrl
jecxz
loope
test
stc
inc
ficomps
xchg
sahf
popf
out
mov
fucomip
jg
arpl
add
jp
ds
xor
sbb
out
push
inc
sub
add
pop
sub
out
testl
fwait
sete
inc
or
mov
int3
rcrl
pop
mulb
xchg
imul
nop
and
and
mov
cmp
aaa
ss
nop
mov
push
nop
mov
js
push
mov
mov
xchg
insb
mov
das
mov
mov
insl
outsl
rcrb
lods
lods
in
jnp
sbb
dec
cmpsb
jb
inc
jp
int3
cwtl
shl
cmp
jp
int3
inc
mov
cmpsb
or
mov
pop
add
call
mov
cli
xchg
lods
sbb
popa
and
sbb
adc
das
push
xchg
dec
int
cmpsb
mov
popa
add
cmc
icebp
jge
sbb
movsl
sbb
inc
fisubs
iret
es
inc
out
lahf
lahf
out
scas
adc
int
mov
lods
incb
outsl
jmp
pop
cmp
jne
jl
jmp
dec
aad
insl
maxps
orb
enter
mov
inc
dec
mov
je
lock
cmp
aaa
and
clc
push
addr16
dec
imul
push
sub
daa
pop
mov
test
rcr
sbb
mov
scas
mov
mov
shl
ss
push
mov
or
jb
cmpb
ljmp
imul
scas
rcll
dec
repz
cmc
add
push
cmp
sbb
dec
push
popf
pop
aam
or
mov
lods
add
sub
or
in
jns
xchg
jb
push
lret
fdivl
orb
out
adc
in
add
das
mov
push
lock
and
push
dec
scas
call
mov
inc
loop
pushw
ja
cli
int3
mov
ret
test
pop
mov
cltd
aam
and
inc
int3
lods
out
dec
inc
cmp
rcrl
pop
cltd
testb
data16
out
sub
adc
aas
cmp
ljmp
mov
popa
pusha
sbb
push
cld
enter
cltd
cmp
testl
outsb
mov
mov
into
scas
xchg
jge
lock
adc
mov
mov
loop
pop
jmp
ja
add
sub
aaa
xor
out
or
push
add
mov
cltd
cmp
xchg
inc
cmpsl
imul
push
mul
sub
add
in
rorb
in
dec
mov
sub
gs
adc
inc
stos
sub
in
in
pusha
ds
sub
cli
roll
test
mov
clc
iret
loopne
mov
sbb
iret
shl
inc
add
jg
or
fcmovbe
push
push
mov
pop
popf
in
xor
clc
jecxz
and
cli
dec
push
push
imul
and
or
roll
or
iret
push
xchg
adc
mov
cs
sub
push
xchg
mov
xchg
add
xor
loope
mov
push
data16
push
cmp
sub
nop
leave
add
pop
pop
jbe
daa
pop
mov
xchg
stc
dec
cmc
dec
mov
stos
scas
xor
pop
inc
popf
mov
mov
pop
jo
arpl
push
jns
mov
pop
divb
and
xchg
in
xor
lcall
jno
out
jp
int
sarl
lock
pop
xchg
add
jno
pop
xor
sahf
cmpsl
jg
aam
repnz
call
xchg
jne
jecxz
sub
xlat
cmp
adc
or
pop
das
shrb
and
pop
fcompl
mov
in
mov
jae
int
add
mov
pop
mov
adc
jb
jo
xor
xor
adc
pop
imul
add
shrl
dec
dec
xchg
lret
dec
xor
inc
iret
mov
scas
cmpb
test
mov
shlb
mul
mov
inc
pop
or
ds
loopne
daa
movsb
cmpsb
stos
pusha
shlb
iret
cld
mov
and
cmc
or
add
and
fistpl
arpl
int
int3
sti
repz
adc
sbb
add
enter
jle
and
or
dec
jo
test
loop
in
mov
mov
xorb
test
pop
jae
push
ss
inc
fs
jp
imul
into
pop
ficoms
jnp
popa
das
ror
cmp
adc
fsubs
ret
xor
mov
pop
jmp
insl
mov
mov
or
pushf
ret
in
jle
insl
jns
std
or
adc
pop
stos
ret
insl
xchg
pop
fidivs
test
push
push
out
icebp
dec
fistps
pop
icebp
inc
sti
in
pop
movsb
shrb
rclb
scas
sti
cmp
cmc
dec
mov
adc
lods
pushf
mov
push
insb
mov
fwait
mov
sahf
push
cmp
leave
inc
xchg
push
daa
int
add
mov
mov
jnp
xor
push
sbb
rorb
call
pop
jecxz
dec
inc
int
cmp
cmp
scas
and
dec
inc
rcrb
cmp
pop
or
push
push
xlat
inc
int3
inc
inc
adc
pop
xchg
xor
pop
add
xchg
push
stc
sbb
xor
popa
lcall
in
lods
xor
sbb
mov
fs
inc
outsb
and
dec
xchg
lcall
loope
std
mov
cld
mov
cld
divl
mov
xor
and
popf
mov
sub
lret
cmp
adc
mov
or
lods
cs
mov
in
or
in
arpl
pop
sbb
mov
aas
mov
and
cmpsl
cmp
xchg
xor
add
jecxz
fcmovu
retw
int3
mov
test
adc
jae
loope
mov
in
mov
stc
outsl
xor
lahf
dec
movsw
psubsw
dec
icebp
push
mov
add
mov
push
test
ret
loope
enter
adc
jnp
push
jmp
sbb
lock
fnsave
and
and
jl
sub
sahf
int3
cli
test
rorl
jle
push
lret
shll
sbb
pop
inc
int3
dec
dec
xchg
pop
push
enter
std
ret
dec
adc
mov
xor
jo
lahf
adc
sub
or
pop
in
or
pop
loope
and
add
cli
mov
sub
les
xchg
xchg
mov
mov
enter
fcompl
mov
outsl
and
rcr
rorb
adc
inc
mov
daa
cmp
cmp
pop
mov
xchg
lea
out
insl
imul
insl
mulb
sbb
scas
lret
enter
xchg
cmp
insb
test
mov
cmp
popf
stos
movb
push
shlb
test
mov
aas
add
mov
sub
xor
or
gs
lea
ja
adcl
mov
loop
inc
decl
pop
call
fimull
outsl
push
mov
dec
cmpsl
sbb
mov
clc
xchg
and
mov
or
test
mov
cmc
popa
shlb
dec
ss
out
jo
inc
repnz
loop
dec
rorl
scas
fldt
jp
aas
std
mov
cwtl
adc
fcmovnu
dec
ja
pop
push
xchg
pop
in
pusha
cmpb
insl
inc
mov
cwtl
lods
insl
js
and
std
xor
loopne
pop
repz
cmp
daa
jg
bound
xchg
movsl
xor
cmpsb
int3
dec
lock
or
cmp
xor
in
mov
call
pop
jo
stos
cld
insb
pop
ficoms
jns
add
cmp
jg,pn
pop
dec
stos
ja
enter
pop
xor
jp
push
rcrb
in
aaa
mov
xchg
loop
pop
fldl
dec
popl
xor
sub
movsl
inc
lods
out
or
decl
add
mov
push
sbb
pop
sub
icebp
cltd
iret
xchg
outsl
stc
pop
push
out
dec
mov
roll
dec
add
mov
andb
adc
pop
repz
push
fcomps
mov
out
add
movl
mov
mov
adc
jg
testl
adcb
pop
add
sbb
addr16
push
imul
outsb
cmp
test
cmp
lods
popf
cltd
insl
mov
call
mov
call
jo
dec
stc
fsts
sbb
sbb
cmp
inc
or
or
shrl
dec
addl
pop
sub
aaa
mov
mov
xchg
cmpsb
mov
fstpt
jns
cmpl
mov
adc
add
xchg
dec
into
in
and
fisubrl
inc
adc
mov
xchg
mov
push
cmpsl
adc
xchg
pusha
std
xchg
test
mov
pop
les
xor
sbb
enter
insb
cld
loopne
add
in
fwait
pushf
dec
xchg
incl
scas
loop
orl
mov
cmpsb
jmp
jecxz
dec
xor
pop
and
push
cmp
clc
in
popa
inc
shll
cli
or
jno
dec
out
ja
mov
shrb
and
jmp
sub
sbb
xor
adc
fldcw
push
or
xor
ret
addr16
adc
andl
cmp
fsubl
xchg
push
xor
sbb
push
inc
mov
or
cmpsl
ja
pop
dec
xchg
addr16
repnz
lahf
test
sub
mov
cwtl
pop
cli
shl
sbbl
fisubs
vpmadcswd
js
xchg
out
inc
out
add
add
insl
cmp
in
mov
push
push
cmpsl
sbb
inc
sub
push
sbb
das
es
sub
push
je
push
jae
aam
rcrb
push
pop
test
int3
adc
call
mov
outsb
lret
popl
inc
enter
rcrb
push
adc
mov
mov
aad
sub
dec
pop
lcall
pop
dec
inc
aam
shrb
pop
dec
test
rorb
fldenv
movsl
lds
hlt
sbb
xchg
sti
inc
fisubl
push
rorl
jo
and
scas
ljmp
lret
push
neg
jmp
pop
xchg
dec
in
xchg
divl
fidivrs
leave
push
push
jae
sbb
add
test
sub
and
lds
and
mov
xadd
ss
jo
nop
add
fnsave
loop
mov
out
xchg
xchg
hlt
and
inc
mov
je
mov
ret
jmp
or
pusha
outsl
sbb
movb
sub
mov
insb
icebp
cmpsl
adc
mov
xor
and
jno
mov
ret
bound
divb
mov
aam
mov
add
pop
rcrl
mov
jp
lret
btr
jle
add
sti
sbb
sub
inc
add
jns
sbb
xchg
lret
lods
cmpsl
xchg
mov
loope
cmp
fldenv
rorl
ljmp
icebp
push
lret
insl
xor
xor
in
sbb
insl
sarb
cmp
jb
mov
or
pop
and
sub
push
cmp
in
mov
dec
inc
rcl
loop
enter
xchg
pop
clc
gs
out
test
push
or
loopne
jne
xchg
push
movsl
imul
pop
lods
cmp
cltd
fs
sti
pop
outsb
leave
fmull
lock
dec
push
out
jmp
jg
popl
add
cmp
outsb
and
clc
jb
cmp
pop
dec
aam
push
aas
push
frstor
push
inc
maxps
push
xor
cmpsl
sti
push
shll
xchg
xchg
fmull
mov
mov
mov
jecxz
cld
mov
arpl
icebp
or
xchg
cld
in
cwtl
enter
mov
shll
jg
icebp
sbb
add
jle
loop
icebp
test
adc
or
lods
in
add
pushf
pop
fcmovnb
push
stc
lods
outsb
pop
pushf
enterw
nop
and
pop
in
or
dec
in
daa
into
mov
jecxz
nop
push
add
in
scas
push
fwait
or
hlt
ret
stos
imulb
pop
mov
pushf
or
mov
jae
and
or
shlb
dec
xlat
mov
mov
jmp
push
cs
mov
sbb
decb
dec
sbb
stos
fdivr
mov
and
repnz
cmp
je
jle
ret
xchg
fcompl
mov
test
int
push
mov
mov
push
mov
xchg
out
test
jg
outsb
jmp
sbb
mov
or
ljmp
in
popl
sub
jb
sub
pusha
cld
push
movsl
pop
lods
xchg
int3
aaa
out
loop
outsb
xchg
icebp
cmpsb
mov
repnz
lcall
mov
dec
and
pop
jp
mov
pop
sbb
inc
icebp
mov
aam
outsb
add
cwtl
adc
xor
inc
xor
stc
push
push
adc
and
mov
lds
jo
inc
xchg
in
mov
dec
sbb
xor
mov
jne
into
addb
lds
sub
dec
int3
prefetch
jmp
push
dec
xchg
movsl
jle
pushf
repnz
lock
jae
dec
mov
pop
js
xor
push
ljmp
insl
ffreep
rorb
cmp
dec
rorl
mov
sbb
repz
mov
or
and
adcl
movsl
mov
mov
in
test
push
dec
aam
push
rorl
sub
sbb
shrb
movsl
jo
mov
mov
cmp
fmuls
hlt
scas
mov
push
lods
jmp
cmp
jb
aam
sub
dec
popf
add
fdivrl
inc
jl
enter
arpl
pop
insb
push
xchg
data16
xor
adcl
sbbb
icebp
sub
xchg
ret
jo
and
fstpt
pushf
sbb
push
ds
push
adc
test
in
imul
je
movb
stos
pop
fs
xchg
xchg
adc
or
dec
sub
xor
push
arpl
push
mov
fwait
sub
dec
leave
rolb
lods
icebp
test
cmp
ljmp
es
push
and
mov
push
in
push
jno
fcmovu
mov
stc
insl
test
adc
xchg
and
lahf
jnp
sub
daa
rclb
repz
xorb
or
jmp
inc
cli
fsubrs
cmc
push
pop
fwait
imul
jne
bswap
fisttpll
push
sub
sti
xor
pop
ja
fmuls
call
mov
hlt
es
jmp
push
test
stc
stos
fwait
insl
in
int
mov
das
xchg
jecxz
xchg
je
fstp
mov
mov
test
sete
dec
sbb
adc
cmc
pop
sbb
sbb
dec
mov
cmp
in
mov
ss
jo
mov
sbbb
push
xchg
dec
rcrl
push
iret
sarb
mov
dec
int3
or
cltd
fidivl
ljmp
addr16
sub
clc
les
jno
pushf
xor
insb
lret
test
rol
pop
int3
jno
movsb
push
or
push
xchg
jp
sarl
mov
inc
cltd
aam
mov
test
mov
adc
mov
lea
mov
and
adc
andnps
inc
movsb
pop
dec
cmp
inc
insl
arpl
cmp
repz
outsb
jge
push
cld
xchg
push
push
sbbb
cmp
repnz
mov
rclb
or
jmp
inc
mov
dec
jg
sbb
rolb
cmp
les
mov
jg
ja
lahf
mov
cmpsb
pushf
jo
loope
mov
adc
leave
pop
pop
lds
mov
movsb
movsl
out
rcr
rclb
xor
dec
jae
jo
stos
or
jae
into
cmp
cmp
mov
mov
mov
mov
add
xchg
jns
sbb
adc
xchg
pop
hlt
clc
adc
mov
popf
fistl
dec
lods
mov
push
cli
addr16
ficoml
jle
pop
push
orl
call
inc
cmc
test
mov
cmc
cmp
fldenv
mov
add
nop
pop
ljmp
cmp
inc
add
fs
sub
cmp
push
mov
addl
xor
xorb
push
into
jne
addl
fs
and
in
in
push
lods
movsl
mov
cmp
sub
ljmp
jle
nop
sahf
repnz
xor
lods
fstps
sbb
jle
xor
jmp
fildll
or
dec
dec
xchg
inc
lret
adc
dec
int
jno
loopne
cmp
jmp
jp
add
sbb
push
dec
or
scas
jle
loope
xlat
call
or
sub
inc
movsb
sbb
mov
and
gs
icebp
sub
movsb
repz
sub
mov
out
inc
scas
enter
pop
enter
dec
ljmp
pop
add
into
xlat
push
test
js
jp
jno
push
add
pop
divb
mov
xchg
jmp
cmp
xchg
and
pop
inc
pop
pop
cltd
repnz
loope
xor
inc
mov
mov
sarl
ja
mov
nop
sbb
jb
push
mov
incb
sub
push
mov
xchg
dec
fildll
test
push
or
xchg
dec
xor
hlt
lahf
pop
sbb
sub
cli
dec
iret
dec
loopne
rep
push
dec
pop
aas
mov
inc
add
clc
jno
xlat
ret
dec
pusha
and
jmp
inc
in
das
fdivl
test
imul
shl
jno
or
jl
loope
jecxz
lds
cmp
jnp
insl
jp
push
mov
mov
add
inc
addl
mov
xchg
fidivl
jge
mov
push
lcall
add
inc
gs
pop
loop
dec
movsl
nop
push
push
dec
mov
ret
insb
cmp
test
dec
xchg
fwait
mov
push
stc
mov
add
popa
clc
xchg
add
sub
xchg
in
jge
lret
stos
fs
mov
cmp
inc
sahf
shrl
movsb
aam
or
sbb
jnp
je
clc
arpl
cmp
mov
rol
pop
lods
mov
and
or
shlb
add
mov
cltd
adc
imul
repnz
std
gs
pusha
xchg
add
sub
or
ret
inc
inc
stc
xchg
mov
int3
pop
outsl
xor
cmpsl
push
fs
push
mov
fcoml
push
xchg
bound
popf
add
pop
cmc
loopne
repnz
rcrl
cmpl
test
jno
lock
xor
sub
lods
loop
repz
aas
les
mov
dec
inc
add
sub
mov
jl
insl
inc
loopne
mov
sub
inc
adc
jno
add
xor
and
outsl
pop
sub
adc
idivb
mov
fcomps
out
sbb
add
cmpsl
test
cmpsb
out
fldl
lret
idivl
xor
inc
cli
or
jp
push
sti
mov
or
in
jne
adc
mov
mov
mov
lods
and
cli
push
mov
lods
mov
mov
cmp
popa
ljmp
ret
addr16
sub
outsl
and
cmpsl
stos
lcall
jg
lods
mov
out
data16
cmp
enter
adc
aaa
in
imul
cltd
or
jecxz
call
fs
mov
inc
lods
mov
fdivrs
insl
cld
jbe
mov
cmp
jge
cmpsb
jbe
scas
inc
inc
mov
dec
in
data16
lret
ficompl
xchg
jmp
fwait
aad
jecxz
in
sbb
or
aas
je
mov
push
xor
fnstenv
jo
adc
hlt
and
sbb
decl
or
clc
sub
mov
sub
mov
movl
or
lcall
ds
dec
movsl
into
add
outsl
jno
mov
push
cs
mov
xchg
mov
or
movsl
in
test
insb
lcall
iret
das
push
sub
pusha
rcrb
add
fidivrl
popf
or
lcall
lcall
cmpsb
je
rorb
jle
xchg
outsl
ret
ret
ds
push
and
jp
adc
fs
sub
movsl
mov
shlb
in
mov
fistpl
dec
in
jg
stos
inc
mov
pop
adc
lds
or
repnz
fcomp
repz
icebp
mov
and
or
and
adc
ficompl
je
lock
cmp
mov
rcrl
and
cmc
adcl
test
pop
mov
bswap
jecxz
xlat
mov
lcall
xor
insl
push
and
sub
dec
jecxz
xchg
jbe
jmp
sbb
cmc
push
sarl
or
lock
and
sahf
sbb
sub
repz
scas
out
dec
inc
push
aad
cwtl
xchg
incb
les
jno
aam
mov
pop
pop
cmpsl
or
adc
dec
xchg
divb
xchg
gs
popf
aas
mov
sub
pusha
call
dec
in
out
enter
mov
add
xchg
sub
jecxz
fidivl
pop
filds
push
mov
imul
dec
sbb
mov
push
testl
add
add
cmp
mov
or
test
in
add
jno
out
fisubl
fistpl
xchg
adc
jo
xchg
jae
stos
cmp
inc
adc
mov
outsb
dec
adc
mov
xchg
decl
in
adc
or
in
sbb
jmp
les
outsb
mul
and
enter
push
movsl
stos
inc
ljmp
shlb
popf
in
fnstcw
je
data16
xor
icebp
shrb
or
clc
mov
fisttps
iret
sbb
cltd
dec
int
sbb
mov
shl
mov
pop
push
lahf
push
clc
pusha
jle
or
sub
daa
adc
pop
dec
sbbl
mov
adc
sbb
adc
hlt
dec
es
out
imul
movsl
dec
jb
fbld
add
add
pop
inc
cs
push
mov
mov
fwait
cmp
shl
push
push
adc
xchg
bound
scas
mov
mov
adc
in
sbb
push
int
aas
jb
jns
push
out
mov
sub
inc
jl
mov
andl
repz
out
jmp
sbb
cmpsl
cmpsl
push
add
aam
js
cltd
mov
jne
mov
or
sbb
test
sbb
daa
inc
jo
cwtl
aam
out
jne
ljmp
jp
ss
sbb
push
add
fldcw
mov
subl
sub
fiaddl
adcl
mov
mov
cmc
js
mov
dec
sub
or
mov
outsb
xor
ret
cmpsb
insb
shlb
mov
cmovl
outsb
jge
xchg
xchg
adc
sbb
sub
data16
xor
wbinvd
adc
push
imul
xor
jecxz
push
xchg
xor
outsl
mov
jno
out
xchg
jo
test
ret
mov
and
minps
mov
mov
push
and
sbb
mov
xchg
jg
mov
cmp
or
dec
into
jb
push
rorl
sbb
xchg
push
scas
sti
cltd
jbe
dec
mov
push
xchg
daa
enter
dec
sahf
fmuls
lock
sarb
add
cs
test
sub
jae
or
push
jnp
jecxz
stos
gs
push
rclb
jl
clc
repz
rorb
iret
mov
test
shrl
xchg
fcmove
sbb
jbe
jge
lock
jno
jp
test
mov
or
add
sbb
dec
sahf
sbb
adc
dec
adc
rorb
in
add
mov
xor
pushf
fwait
add
insl
push
divb
ljmp
sub
mov
lods
data16
mov
or
pop
or
into
and
test
ret
clc
push
sbb
add
sbb
or
mov
hlt
repnz
push
dec
push
adc
js
push
cltd
sarl
sti
mov
fldz
jg
fdivp
xor
adc
loope
mov
inc
pop
and
sub
imul
imul
fidivs
cld
jg
pusha
rclb
shl
into
push
int
and
pop
push
and
bound
fistpll
jnp
icebp
pop
hlt
jb
aas
jbe
daa
ds
jmp
dec
pop
xorl
add
add
dec
xchg
push
fstps
cmpsb
xchg
mov
inc
lock
mov
jp
je
push
or
mov
push
sbbl
stos
and
rcl
in
and
cmpsb
es
sub
inc
nop
mov
adc
add
jle
mov
outsl
cmpsb
lock
xchg
cmp
sub
sahf
jmp
sub
faddl
mov
es
adc
mov
fdivs
cltd
adc
push
sahf
mov
jg
stos
push
arpl
lock
inc
out
dec
inc
add
fisubrl
outsb
mov
cmpsb
mov
xchg
mov
dec
mov
lods
call
xchg
mov
es
test
inc
movsb
loope
repz
loop
mov
push
lahf
fwait
ljmp
aaa
push
enter
outsl
das
push
mov
int3
loop
aam
movsb
test
rorb
sub
fnstcw
xor
xchg
imul
in
roll
ljmp
andl
jmp
movsb
or
rcrl
push
push
lret
pop
popf
fmull
adc
inc
push
outsl
adc
inc
dec
jg
es
imul
cmp
xchg
sbbb
fdivrl
adc
xor
mov
pop
ss
jno
and
pop
movsb
mov
mov
dec
cmp
dec
lock
fsubrp
add
mov
xor
outsl
mov
add
int3
push
dec
scas
dec
cmp
mov
cmp
test
into
sbb
inc
inc
inc
push
inc
leave
mov
inc
inc
cmp
ror
jne
jl
into
insl
cltd
jmp
mov
jno
test
subb
ret
sbb
popf
in
add
leave
lret
sbb
out
xchg
xor
out
cwtl
and
repnz
xchg
or
mov
fsubrl
push
mov
cmp
push
sub
jecxz
mov
mov
cmp
mov
pop
divl
pop
xor
mov
imul
dec
fwait
sbb
add
cltd
inc
lcall
fbstp
nop
dec
mov
and
ljmp
lcallw
jbe
dec
aas
jmp
out
stos
insb
push
es
adc
fnstsw
jb
cmpsb
bound
mov
pop
sahf
inc
pop
inc
or
inc
xor
cmp
sti
jne
lcall
sub
or
inc
cmpsl
loop
adc
test
leave
pop
jmp
mov
cs
pushf
out
push
cmc
outsb
push
out
push
jmp
jecxz
call
or
add
add
mov
jno
sub
sti
cld
inc
sub
outsb
in
mov
or
je
xor
pop
push
stos
push
mov
or
mov
add
mov
push
movlps
cltd
jno
lock
sub
sub
insb
insl
mov
pop
push
aad
js
xchg
or
in
pop
and
jae
add
push
jnp
insl
lret
jb
push
lahf
clc
mov
mov
ss
int3
cmp
pop
int
pop
adcl
inc
xor
cmpsb
xchg
fldenv
in
fcmovnu
into
pop
test
pop
push
rorb
add
inc
and
mov
andl
mov
xor
push
cltd
or
or
mov
sbb
lods
test
pop
sbb
pop
pop
outsb
sbb
add
adcb
fdiv
dec
xor
lock
push
arpl
push
jbe
insl
dec
mov
sub
mov
daa
daa
cmp
lret
insb
fisubrs
pop
addr16
std
aas
popf
cmpsl
int
test
push
push
pop
outsb
gs
xchg
mov
or
scas
mov
aam
mov
aas
and
dec
adc
and
sbb
fists
cwtl
sbb
fwait
arpl
mov
jnp
dec
dec
mov
out
jp
mov
mov
fstps
sub
test
lea
push
test
jns
mov
adc
add
push
jmp
or
jne
mov
push
mov
or
dec
ret
sbb
adc
mov
test
nop
rcl
sahf
dec
jmp
lret
pop
push
cmp
mov
dec
pop
pop
lahf
jae
fs
sub
notl
shrb
dec
fcmovb
int3
dec
pop
jns
aas
scas
and
lret
pop
jns
mov
xchg
mov
sub
cmp
dec
jb
ss
daa
cltd
aaa
xchg
add
push
pop
in
or
stos
mov
mov
push
pop
and
mov
and
lea
fs
fldenv
loop
lcall
sub
movsl
decl
outsl
push
jno
in
xorb
outsl
push
insl
sahf
mov
and
insl
fsubrp
out
cmp
cmc
stc
call
pop
jbe
jbe
lret
sbb
outsb
aas
mov
or
icebp
addr16
dec
mov
cltd
pop
dec
add
xchg
sub
mov
dec
out
imul
push
es
stos
sbbb
std
pop
popa
test
cmp
cmp
daa
cwtl
jae
sahf
movsl
mov
or
stc
js
dec
mov
insl
inc
nop
shll
ficoms
sbb
cltd
jbe
test
icebp
mov
into
push
xchg
fnstcw
or
add
cltd
mov
outsl
mov
add
negb
stos
in
lahf
pop
mov
shl
jmp
ret
mov
popf
dec
pop
sub
adc
mov
pop
out
push
ficoms
push
popa
push
push
lods
mov
sub
dec
sub
xchg
adc
pushf
daa
add
add
mov
xchg
icebp
aam
fisubl
dec
int3
int3
mov
ja
or
popf
addr16
push
adc
sti
add
mov
mov
push
je
dec
flds
adc
xor
lret
out
sbb
repnz
sbb
pop
outsb
sub
and
inc
sub
add
jno
loop
jno
xor
mov
lret
in
stos
les
pop
out
cmp
sahf
std
bound
in
shl
mov
out
addr16
cwtl
les
dec
rcrb
lret
cmpl
mov
cli
xlat
cs
add
inc
dec
ss
cmpsb
cli
adc
sahf
xchg
std
sub
cld
in
sub
loop
mov
cmpsl
data16
repnz
ficoms
inc
call
or
push
pop
mov
add
xchg
add
out
jl
lods
inc
jl
add
inc
in
mov
mov
insl
sub
leave
ret
and
leave
aad
jno
test
or
rep
or
dec
xor
mov
cmp
push
jecxz
int
pmaddwd
sbb
call
notb
mov
xor
aas
and
adc
negl
xchg
aam
scas
cmp
arpl
sarl
ljmp
push
popa
int
cmp
mul
leave
ljmp
jmp
fimuls
push
or
cmp
sub
ljmp
enter
es
in
and
faddp
push
clc
inc
outsb
cli
add
stos
movsl
hlt
xchg
push
mov
gs
in
inc
and
pop
dec
daa
push
pusha
inc
arpl
stc
jge
insb
or
or
push
mov
arpl
or
jne
loop
lcall
cmpl
loope
mov
mov
jns
test
cmp
ret
sbb
xchg
mov
ljmp
ds
mov
xor
sub
mov
sbb
iret
ljmp
dec
rcrb
icebp
mov
inc
mov
mov
lock
mov
les
mov
mov
adc
in
pop
mov
mov
addr16
fsubrl
daa
mov
hlt
sbb
inc
lahf
add
dec
loopne
outsb
lret
sahf
subl
fsubl
inc
jp
clc
lret
popf
sahf
or
and
popf
mov
loop
inc
pop
and
test
ja
cs
xchg
push
loope
dec
or
jmp
pop
lds
jg
mov
test
aaa
jb
sub
std
or
popa
ret
cmp
test
loop
roll
fistl
jbe
pop
inc
stos
add
push
xchg
jg
aas
sbb
int3
jg
imul
lds
outsb
lret
call
adc
xor
lock
adc
mov
shll
cmp
or
mov
les
cmp
out
mov
imul
xor
lea
das
clc
xlat
jge
das
mulb
push
fs
cmp
cld
push
bnd
add
jl
iret
in
mov
repnz
jmp
mov
ret
xor
mov
adc
out
ljmp
sbb
jb
fs
enter
mov
jle
aaa
push
mov
push
add
mov
sbb
cmp
fsubl
addl
push
mov
shr
and
mov
imul
movsl
pushf
rol
add
test
add
xchg
pop
xchg
and
add
bound
fcompl
mov
pop
sub
lock
cmp
or
mov
push
shr
xchg
and
and
pop
shr
cld
sub
mov
push
aam
cmp
out
cltd
mov
mov
dec
pop
fidivl
fwait
les
dec
xor
push
out
push
test
jnp
sbb
push
pop
stos
pop
inc
sub
in
les
rorb
iret
xor
xor
push
inc
in
xrelease
jl
xchg
cmp
fwait
xchg
xor
pop
addl
arpl
pushf
fadd
out
cmp
push
or
fisubs
xchg
push
pop
repnz
cmc
jl
repz
lcall
sti
pop
xor
push
mov
mov
adcb
pusha
insl
lods
xor
mov
lods
and
add
or
cmc
push
arpl
cmpsl
ret
andl
and
and
hlt
and
inc
scas
mov
dec
mov
mov
mov
add
or
es
fwait
inc
jmp
xorb
cld
iret
pushf
or
or
inc
xor
mov
roll
push
inc
sti
insl
fwait
jl
in
push
out
pop
into
and
movsl
mulb
fs
imul
mov
jmp
loope
inc
push
into
scas
sub
iret
xor
cltd
mov
mov
pop
mov
add
pop
or
out
mov
cmpsl
dec
aaa
adcb
or
fidivrs
sub
mov
stos
pop
int
out
loopne
xorl
pop
loopne
xchg
adc
mov
sbbb
mov
and
inc
sub
outsl
std
ss
hlt
imul
aad
rorl
xorl
add
mov
and
ror
leave
xor
mov
popa
push
jmp
xchg
mov
hlt
out
lret
mov
scas
call
idivl
js
push
test
pop
inc
adc
and
push
mov
jne
std
imulb
adc
push
cmp
xor
das
xlat
stc
std
jbe
push
xlat
mov
adc
pop
cmpsl
and
mov
aas
in
daa
out
pop
add
mov
mov
arpl
popa
lods
aam
std
jo
inc
or
test
call
pop
pop
add
sub
movsl
and
push
andl
inc
lcall
inc
mov
jo
adc
mov
add
sbb
cmpsl
fildl
sbb
lret
es
add
bound
and
dec
xlat
js
popf
or
pop
enter
dec
out
and
or
aam
and
lcall
divb
xchg
sub
mov
sub
push
mov
lods
cmp
nop
pop
jecxz
cmova
ja
pop
or
mov
aas
push
mov
add
cmp
xlat
cmpsb
pop
and
ss
loope
repz
sahf
mov
jne
daa
out
push
cmp
dec
mov
and
roll
dec
repnz
shlb
push
in
int3
call
fnstcw
repnz
adc
mov
xor
lock
add
leave
imul
or
mov
inc
dec
rcrb
inc
aad
ds
movl
clc
jecxz
lret
into
dec
fildll
jp
movsl
movsb
movsb
outsb
jbe
mov
mov
rcr
mov
scas
and
mov
xchg
cld
mov
lds
jae
mov
xchg
lret
xchg
cs
inc
lret
sub
mov
mov
push
push
sar
fcomip
mov
jo
or
test
lock
inc
push
push
dec
mov
daa
movsl
xlat
data16
outsl
call
clc
jl
das
jge
bound
jg
out
addr16
xchg
jns
shll
jle
aas
xchg
xchg
int
and
sbb
xor
sub
and
inc
jne
imul
shll
shlb
or
dec
dec
adc
lret
ss
addr16
push
scas
add
adc
push
cmpsb
adc
in
mov
adc
mov
scas
mov
test
dec
sbb
sbb
rclb
fwait
pop
cmc
outsl
test
sbb
fxam
cltd
movsb
arpl
inc
fldl
icebp
sbb
pop
cwtl
es
mov
pause
push
int3
inc
sub
repnz
cmp
and
ss
inc
xor
mov
outsl
dec
mov
and
xor
jle
jge
popf
repnz
inc
pop
popf
lds
xchg
mov
sbb
popa
loop
mov
frstor
mov
xchg
sbb
into
jp
lods
les
in
push
mov
ss
xchg
outsl
insl
out
mov
call
es
lret
adc
pop
test
call
aas
stos
dec
sbb
int3
in
cmp
stos
je
arpl
aaa
mov
add
xchg
or
cwtl
out
stos
mov
jne
pop
mov
aad
lds
xor
ja
lahf
sbb
push
test
icebp
add
jb
cli
scas
je
in
and
cld
sub
imul
pushf
adc
mov
test
in
dec
outsb
into
lea
out
test
sub
dec
mov
std
sbb
std
jmp
push
push
mov
scas
sub
cld
call
sarl
mov
dec
xchg
mov
out
pop
repz
push
jmp
hlt
push
mov
inc
int
cmpsb
test
imul
gs
fnstsw
jne
daa
jns
cmp
popa
mov
sub
adcl
mov
fsubs
mov
pop
jmp
sbbl
lcall
cmp
stc
popf
pushf
mov
adc
loop
mov
ljmp
fstps
aam
jne
pop
dec
cmc
ret
lods
lods
test
add
ss
sbb
inc
sbb
inc
int3
std
cmp
int3
push
push
dec
hlt
enter
sbb
call
pop
mov
ss
inc
dec
fdivrl
mov
push
pop
arpl
shrb
fdiv
mov
xor
jae
andb
or
lods
xchg
push
sbb
shll
and
scas
nop
jle
inc
imul
cltd
ljmp
jno
cmp
xlat
mov
inc
mov
lods
mov
lock
pop
pusha
inc
mov
mov
fsubrp
jae
add
mov
es
arpl
cmpsb
mov
rcrb
cltd
dec
sbb
cltd
pop
mov
mov
outsb
sub
add
mov
test
push
jmp
xor
pop
sub
in
mov
jo
mov
sbb
jbe
add
add
adc
or
stos
pop
mov
push
cmp
xor
cwtl
lods
roll
pop
mov
dec
mov
adc
rcl
xor
push
es
int
xchg
mov
rcrl
cwtl
mov
dec
jg
or
loope
test
lret
or
imul
and
dec
or
jp
xor
mov
and
mov
roll
cmp
xchg
stos
push
xor
int
add
xchg
or
imul
test
jp
shlb
cmpsl
movsb
dec
dec
dec
aad
mov
push
insb
adc
hlt
stos
in
sbb
jno
push
xchg
lock
loope
enter
pop
and
push
sbb
in
pop
xor
xchg
fsubrs
lret
js
test
ds
mov
mov
aam
xchg
repnz
pop
aam
adc
cmp
nop
cwtl
rolb
popf
clc
jnp
jl
pop
lds
lahf
scas
dec
andb
mov
dec
iret
xchg
or
hlt
mov
pop
ror
popf
mov
jb
jp
sahf
dec
dec
inc
push
repnz
and
icebp
lea
cmp
inc
jae
rolb
mov
daa
in
popf
movsb
mov
fcomps
andl
adc
pop
sub
sbb
shrl
mov
jmp
es
jp
sub
ss
sub
adc
push
adc
push
rol
jnp
cmp
aaa
lret
push
repnz
outsl
aam
loopne
loopne
rolb
ret
enter
pop
rcrb
fnstcw
add
sbb
sahf
xchg
mulb
das
inc
push
movsb
in
sbb
add
hlt
decb
mov
or
push
mov
sub
add
jmp
inc
js
lods
push
or
add
ljmp
xchg
mov
bound
loopne
jge
fdivp
jb
mov
or
idivb
sar
leave
mov
fsubs
mov
mov
sbb
xchg
adc
jo
cmpsb
test
ss
sbb
rol
xor
stc
mov
ret
movsl
sub
mov
fcmovnbe
les
inc
and
aad
sbb
in
mov
hlt
and
dec
adc
xchg
inc
sub
sub
lret
ret
mov
icebp
mov
mov
xchg
and
lea
push
pop
xchg
adc
mov
xchg
sarb
outsl
mov
xor
imul
gs
jae
pop
mov
jg
das
mov
mov
pop
andb
push
test
and
pop
or
popa
mov
add
lret
inc
push
outsl
dec
daa
inc
out
fadd
jo
enter
sub
loop
mov
in
int
pop
fists
xchg
pop
pop
sub
outsb
push
or
data16
adc
dec
js
int
enter
mov
fldl
pop
add
sub
stos
push
fwait
cmp
loope
jno
xor
dec
mov
xchg
rcl
pop
fildll
gs
adc
sbb
xchg
sbb
fidivl
cmp
mov
les
xchg
xor
and
xchg
and
icebp
divb
andb
rcr
into
cwtl
in
xor
fdivrl
addr16
sub
push
sar
js
push
mov
lock
mov
fisttpll
xchg
cltd
fdivrs
jg
cmp
mov
das
xchg
lahf
jecxz
jge
std
pusha
sbb
dec
push
pop
cli
jg
js
push
out
ret
sbb
push
icebp
fs
lcall
or
jns
jmp
movsb
add
push
test
push
das
or
cmp
xor
lock
jp
fisubrl
std
xchg
nop
arpl
jo
pop
stc
es
popf
stos
mov
bound
mov
mov
outsl
test
enter
orl
leave
roll
pop
cs
push
mov
jge
sbb
leave
cltd
cmp
shrb
inc
jb
stos
imul
ss
lret
jae
mov
stos
xchg
rcrb
popa
stos
lods
sbb
sub
into
ljmp
mov
jb
fildll
scas
fwait
enter
xchg
push
mov
das
test
enter
mov
popf
mov
test
mov
mov
orl
stc
or
call
into
cld
lds
popf
stos
jb
or
dec
push
jbe
lcall
sahf
jb
pop
sbb
mov
jmp
les
into
xor
movsl
mov
cmc
aas
lds
inc
mov
notb
stc
jge
insl
and
push
pop
in
sbb
cs
fnsave
xor
mov
sub
imul
outsl
sbb
cmp
cmp
xchg
outsl
fs
xor
or
rcrl
sbb
lret
movsl
cmpsb
mov
or
or
iret
jae
clc
adc
xor
rcr
fdiv
push
cmc
cmpsb
mov
mov
arpl
ret
scas
or
dec
adc
hlt
mov
loopne
lock
mov
cmp
dec
loopne
jmp
dec
adc
mov
aaa
ds
sbb
push
cs
sub
cmpsl
jecxz
push
loopne
bt
das
mov
and
outsb
push
pop
aas
fwait
xchg
push
aam
sub
or
movsl
push
xor
fildll
pop
ja
int
mov
mov
aas
mov
in
sub
cmpb
push
pop
repz
popa
and
ficoms
in
scas
add
aaa
cmp
or
dec
and
orb
push
cmp
dec
xor
orl
cmp
xorb
sub
add
loopne
fildl
pop
adc
rcrb
test
mov
xor
xchg
mov
in
ret
push
mov
stc
or
jnp
lahf
push
push
adc
es
xchg
mov
xor
loopne
es
xor
cmp
out
fisubrs
sbb
cmp
aad
fistpll
movsb
sub
fld
incl
pop
mov
push
inc
inc
xchg
stos
inc
mov
int3
and
cmp
xchg
xchg
cmp
outsb
cmpsb
rorb
pop
or
ret
fbstp
pop
das
add
jg
adc
adc
inc
inc
outsl
inc
push
movsl
sbb
mov
fwait
xchg
inc
cmpb
jae
cwtl
xchg
loopne
push
xor
lcall
push
jmp
xchg
or
repz
xchg
out
dec
movsb
test
scas
repz
das
jecxz
lock
je
in
mov
add
in
mov
inc
xchg
push
nop
xchg
fbld
mov
fwait
jecxz
mov
ret
fwait
call
pusha
mov
push
mov
xor
ja
enter
aas
daa
mov
dec
mov
dec
sbb
enter
adc
sbb
cmp
or
push
es
and
inc
cmp
push
int
enter
das
xchg
pop
xor
mov
mov
and
hlt
jmp
dec
sub
scas
movsb
xchg
pop
xchg
sub
orl
shrl
fldt
jle
div
popa
adc
loopne,pn
fildl
scas
jo
scas
xchg
or
comiss
xor
scas
fwait
testl
mov
fs
aaa
stos
idiv
jb
adc
enter
pop
adc
stc
das
fimull
and
test
out
int
test
pop
loopne
xor
les
lds
ss
js
int
ljmp
xchg
adc
mov
inc
es
shr
sub
sbb
icebp
xor
les
pop
dec
xchg
pop
jmp
jb
mov
and
cmp
loop
scas
add
cmpsb
xor
es
jo
pop
aad
and
xchg
fimull
inc
mov
pusha
test
fldcw
scas
rcrl
jne
xor
in
mov
cmp
adc
repz
xor
xchg
cmc
repnz
testb
ficomps
and
in
add
dec
js
lea
adc
mov
jecxz
mov
sub
ret
dec
mov
cmp
mov
fldl
data16
sub
push
les
lock
ds
enter
call
jecxz
adc
ficompl
pusha
sub
lock
jmp
std
scas
mov
mov
jae
out
pop
call
negl
inc
mov
pop
cmp
test
daa
sti
adc
divb
test
sbb
fsubr
in
dec
cmp
jle
and
lods
mov
bound
sub
cmp
imul
xchg
xor
in
rcrl
jo
xchg
in
or
mov
aaa
fidivs
sbb
cwtl
sub
or
pop
push
mov
cmpsb
ljmp
pushf
cmp
xor
mov
dec
lods
js
jmp
adc
inc
das
ret
push
mov
xor
dec
insb
sub
mov
push
pop
xor
jnp
ds
pusha
xchg
add
add
ljmp
movhps
adc
xor
fs
hlt
rcll
jmp
ljmp
adc
test
movsl
dec
test
xlat
scas
pop
mov
icebp
sub
movsb
test
jbe
call
push
fstl
test
xchg
pushf
jp
in
adc
idivl
lock
out
gs
cltd
das
in
mov
or
lret
loope
push
nop
push
push
rorb
mov
aam
mov
outsl
sub
fistpl
loope
push
icebp
in
scas
cmp
fucomi
lea
lret
xor
mov
mov
mov
xor
leave
gs
clc
gs
pop
jb
dec
xlat
decb
or
filds
mov
xchg
xchg
pop
sub
adc
pop
or
xchg
xchg
xchg
in
aad
jne
imul
adc
cmpsl
xchg
xor
push
cmpsb
add
das
test
outsl
aam
repz
pop
inc
mov
lret
or
fsub
cmpsl
mov
add
pop
mov
cmp
mov
lods
pop
ljmp
outsb
mov
loop
or
inc
adc
push
lret
std
mov
jae
cmpsb
inc
mov
cmpsl
iret
nop
lea
ja
jle
sub
sbb
insl
in
pop
daa
mov
dec
mov
in
jo
xchg
loopne
stos
std
xchg
cs
xor
mov
dec
pop
imul
jae
xor
add
fsubrs
sti
je
or
sti
xor
or
mov
push
mov
sarl
inc
arpl
sub
in
xor
and
xor
pop
adc
sub
les
scas
js
mov
decb
clc
or
sub
icebp
mov
mov
mov
into
lcall
jp
mov
std
addr16
mov
push
stc
es
cmp
popa
adc
out
test
xor
sbbl
leave
or
fisttpl
add
xor
xchg
pop
test
mov
push
out
lea
mov
cwtl
mov
inc
imul
or
jmp
adc
out
push
mov
cmp
jb
dec
xchg
mov
das
out
add
stos
imul
rcrb
sti
cmp
and
add
outsb
push
push
aaa
mov
mov
pop
aas
mov
call
lea
inc
mov
test
or
jb
fistpl
push
xchg
sub
in
mov
repnz
push
addl
xchg
cmpsl
cmpsb
sub
int
daa
ret
stc
jl
lock
test
rolb
vshufps
or
das
push
dec
aam
inc
cmpsl
cmpsl
iret
mov
clc
loop
adc
fildll
push
or
into
in
push
out
add
xor
insb
or
mov
mov
pop
mov
jnp
leave
jp
or
sub
or
pop
je
pushf
popa
test
les
in
popf
xor
sahf
pusha
jmp
stos
mov
or
jb
mov
mov
mov
add
clc
sub
iret
fildl
idivl
inc
xor
or
daa
fucom
inc
push
dec
sti
fwait
push
add
mov
scas
push
add
adc
aas
stos
mov
or
hlt
mov
nop
sbbb
iret
ret
mov
push
adc
divl
loopne
lcall
pop
imul
pop
imul
mov
push
cmc
daa
dec
idivb
xchg
xlat
leave
mov
and
cli
mov
test
popf
adc
mov
xchg
or
shlb
js,pt
aas
movsb
add
int
cmp
clc
mov
dec
mov
js
sub
lahf
rcrl
aad
test
lcall
cmp
lret
adc
fisubs
xor
ret
test
rol
out
adc
lret
inc
aaa
xlat
movsl
jg
bound
pusha
and
lret
dec
dec
fisubl
cmovge
jg
push
mov
xor
movsl
gs
add
out
dec
cmp
inc
jno
inc
fs
fcmovnbe
rorl
lcall
jl
sbb
lahf
fcmove
mov
cmpsb
mov
add
jns
sbb
addr16
cmp
xor
pop
insb
cmp
cmc
xchg
inc
les
scas
out
out
mov
sahf
enter
hlt
and
xlat
lahf
pop
or
sbb
cmp
sub
sbb
ljmp
mov
insb
les
or
addr16
leave
int3
jo
fistl
call
add
stos
pop
in
aam
and
aas
or
in
mov
adc
sub
add
sub
repnz
push
push
jp
push
push
xchg
mov
std
or
fs
enter
push
add
push
ja
dec
ljmp
pop
push
xchg
dec
mov
sbb
ss
push
scas
sti
test
testb
roll
fs
inc
push
xor
push
mov
lret
add
xor
lret
mov
add
sub
or
mov
movsb
adc
out
aad
xchg
hlt
or
push
pop
mov
test
ffree
jecxz
fadds
inc
cmc
inc
movsl
loopne
pop
shlb
push
cmpsb
or
notb
jle
inc
jp
scas
mov
adc
dec
cmp
xor
popa
int
call
and
xchg
cwtl
pop
mov
out
push
inc
stos
in
xchg
xchg
inc
lods
mov
iret
dec
test
mov
fs
mov
testb
out
jecxz
adc
and
dec
cmpsl
addr16
call
test
mov
clc
aaa
and
btr
xor
cltd
test
mov
inc
cmp
vpaddsb
jb
sbb
in
scas
pinsrw
ljmp
testl
rorb
xchg
cwtl
imul
mov
jge
mov
or
lea
cmpsb
jno
push
adc
cmp
jle
xchg
mov
xchg
add
xor
mov
dec
sarl
mov
mov
scas
xor
sub
out
repz
das
rorb
aad
pushf
sahf
sbb
repz
mov
mov
push
cmpb
mov
insl
leave
lods
sbb
xchg
aad
in
pop
pop
adc
fiadds
pushf
sbb
jg
xor
fisubs
jae
sub
cmc
mov
push
mov
mov
dec
inc
xor
jns
ret
and
call
sbb
mov
pusha
rep
int3
adc
jbe
inc
xor
push
jnp
and
mov
mov
mov
lret
sbb
ror
fidivl
xor
js
divl
jnp
aam
and
cmp
out
loopne
outsb
ja
shl
push
std
push
int3
push
aaa
dec
or
lds
mov
lret
push
cmp
popfw
clc
adc
sbb
and
test
lds
sahf
mov
jmp
xlat
jbe
faddp
dec
scas
push
jmp
push
jle
notb
fs
dec
aad
mov
pusha
pop
into
jp
daa
sti
and
jge
xchg
add
lds
lahf
push
fstpl
jmp
inc
jg
aad
dec
aad
sbb
ret
in
andb
or
stos
loopne
hlt
push
jbe
and
aas
jge
mov
xchg
in
or
jne
sbb
in
pop
adc
pop
pop
dec
inc
jbe
dec
mov
stos
push
rorb
leave
sti
mov
xchg
dec
in
inc
das
ja
jno
push
fs
inc
xchg
into
mov
add
mov
cmp
out
in
jcxz
in
lock
loope
call
pop
jb
push
xor
scas
movsl
sbb
bound
cmp
inc
cmp
aaa
ss
sub
jnp
aam
push
fldcw
ljmp
cld
mov
xchg
and
sub
jmp
mov
out
les
mov
or
dec
xlat
loope
lret
sub
int3
mov
xchg
ja
mov
mov
inc
cli
sub
pop
jecxz
lcall
dec
leave
into
in
in
mov
and
cwtl
lods
into
cmp
jnp
sbb
pop
mov
jp
push
jmp
clc
lcall
xor
adcl
jne
shl
pop
iret
or
dec
repz
pop
cmp
movsl
les
loope
rcrb
out
mov
ljmp
dec
inc
jmp
xchg
lret
adc
loopne
push
les
cmp
sub
repnz
adc
das
inc
aad
lds
out
mov
loop
clc
cld
xacquire
sbb
aas
and
mov
xchg
loope
sub
addr16
shlb
add
add
fxch
pop
add
adc
adc
int3
cli
cmp
mov
jo
lret
jmp
adc
movb
jae
enter
mov
pop
lds
shl
out
icebp
mov
pusha
lahf
mov
insl
adc
je
mov
lret
mul
mov
loope
add
jno
adc
sbb
jae
out
add
dec
lret
stos
dec
jp
mov
aad
mov
mov
outsb
xchg
int
pop
pop
pop
out
add
mov
call
iret
lcall
xchg
adcl
pusha
push
pop
dec
pop
mov
mov
inc
xchg
dec
icebp
adc
mov
out
mov
push
lcall
sbb
inc
mov
test
shlb
pop
add
js
aad
rol
cmpsb
pop
mov
jp
pop
jne
and
sbb
incl
clc
orb
inc
and
add
imul
dec
push
outsb
nop
cmp
mov
xchg
add
dec
adc
jne
or
dec
inc
push
dec
adc
mov
fiaddl
int3
das
xchg
lds
scas
outsb
popf
daa
sub
xorl
push
xchg
or
nop
shr
add
mov
xor
outsb
pop
aam
rcrb
or
jno
cli
out
bound
loopne
xchg
mov
dec
jbe
lret
dec
popf
and
push
mov
mov
loop
jno
mov
jae
scas
insb
call
cmc
xchg
div
aad
adc
test
fnstenv
aaa
imul
xor
fwait
push
pushf
pop
xchg
rcrl
cltd
cwtl
int3
push
or
lds
dec
adcb
sub
mov
mov
pop
or
inc
sbb
loop
stos
sub
push
adc
pop
pop
cwtl
ljmp
sub
sub
sbb
loope
sbb
adc
mov
jp
pushf
pop
xor
pop
fldenv
push
xlat
cmp
cmpsl
stos
test
xchg
notb
sub
adc
lcall
and
xchg
mov
cmp
mov
loop
outsb
in
xchg
sbb
add
ja
or
add
out
pop
pop
flds
xchg
test
fstps
adc
daa
jnp
dec
pushf
mov
inc
sub
clc
mov
inc
es
insb
mov
jae
xchg
push
fdivrs
mov
sub
pushf
pushf
pushf
icebp
push
add
xor
adcb
frstor
push
push
and
sub
and
mov
int
jmp
out
jle
mov
pushf
xchg
sbb
test
daa
shrb
sbb
inc
popa
xchg
inc
sbb
in
test
push
xchg
or
daa
push
mov
inc
gs
lahf
and
sub
mov
aad
pop
xor
inc
movsb
mov
cs
mov
mov
mov
repnz
aas
or
daa
outsb
ret
inc
add
rclb
fildl
hlt
xor
xor
ja
dec
pop
je
cmp
xsha1
cmpsb
dec
nop
push
and
and
leave
dec
xor
jae
fistl
ds
mov
sbb
push
mov
aam
mov
hlt
mov
add
mov
mov
mov
out
int3
je
jmp
adc
ret
and
or
movsb
jecxz
fwait
pop
xor
call
icebp
mov
out
icebp
mov
movsb
jmp
int3
sub
and
lcallw
xchg
and
mov
jne
push
repz
cmp
sub
insb
stos
add
adc
xor
xlat
mov
mov
mov
lods
fadd
add
outsb
push
and
pushf
out
cld
stos
pop
loopne
test
out
sti
sub
mov
mov
sahf
xchg
icebp
cld
push
sti
int
adc
insl
add
clc
push
lahf
andl
leave
mov
dec
stos
push
gs
sub
jo
dec
outsb
mov
mov
cmpsl
mov
xor
insb
jecxz
popf
cmp
jecxz
or
xorl
cmpsb
es
int3
lret
lahf
mov
arpl
dec
cmp
bound
sbb
cmp
dec
mov
in
cwtl
sub
xchg
mov
xor
lret
adc
test
in
push
mov
popa
in
inc
adc
test
inc
aad
daa
mov
cwtl
mov
jge
add
add
inc
shrb
mov
cmc
pop
fstpl
insb
dec
and
movsl
add
adc
ret
test
mov
fmuls
inc
out
and
adc
inc
mov
pusha
dec
or
push
and
icebp
pop
sub
mov
mov
xor
cmp
cltd
out
rclb
lret
xchg
xchg
test
cmp
mov
cs
sbb
pop
repz
popf
lcall
or
fwait
out
dec
iret
pop
fldt
mov
inc
xlat
or
mov
push
ljmp
das
flds
cmp
jns
mov
sub
stos
xor
fcos
xchg
xchg
inc
in
add
fs
out
das
add
xchg
mov
roll
sbb
mov
imul
or
sahf
mov
stc
sbb
scas
cli
cmc
das
int
and
mov
out
icebp
loopne
aaa
xchg
pop
jae
fiaddl
jle
xchg
xor
fsubrl
movsl
sti
test
das
push
and
jo
hlt
sub
imul
mov
sub
aam
ficomps
jns
sub
cmc
and
leave
cmp
fdivrs
xchg
cmp
mov
add
leave
je
insl
sub
js
movsb
ljmp
mov
in
in
fnstcw
sub
or
push
mov
repz
test
push
cli
outsl
sub
xor
repnz
inc
nopl
mov
jb
push
ret
rcrb
mov
pop
stos
call
lret
adc
sbb
jmp
int3
mov
push
cmp
sub
jno
pop
cmp
arpl
scas
xor
or
iret
lret
jns
jle
pop
frstor
mov
mov
fistps
aaa
xchg
mov
aaa
jl
ds
gs
dec
xchg
cmpsb
jmp
lahf
push
nop
in
into
jb
pusha
int3
xlat
iret
je
xchg
es
push
or
aam
jmp
rcl
dec
sbb
xor
jp
notl
ljmp
and
fstl
sub
scas
das
xchg
mov
hlt
sti
sbb
xchg
and
push
jecxz
insl
pushf
adc
insb
ljmp
arpl
test
popf
loopne
testb
jo
jae
aas
mov
add
outsl
pop
jp
cmp
and
mov
mov
jne
xor
std
inc
pop
ret
rolb
aam
cmp
divl
scas
xchg
arpl
adcl
xchg
mov
xor
mov
loope
mov
lock
mov
dec
insl
bound
jns
sbb
idiv
inc
add
push
or
pop
mov
mov
add
lea
lods
mov
sub
or
adc
mov
out
mov
testl
jb
add
mov
push
test
aam
lds
push
pop
xchg
push
fstpt
rol
stos
sarb
fidivrs
rorb
sub
jae
icebp
add
mov
sbb
cmp
jb
ljmp
out
cli
mov
lcall
or
push
jns
jne
jle
loop
ficomps
sbb
add
inc
sub
stc
sbb
mov
stos
push
shrl
sub
jmp
cmp
xchg
into
cmp
cwtl
push
dec
jns
or
rolb
inc
out
pop
fs
cmp
pop
or
imul
clc
hlt
add
mov
add
rorl
and
sar
sub
mov
jb
and
jmp
in
aas
push
inc
xor
xchg
shlb
call
inc
cmp
fs
shl
test
lcall
out
xlat
or
or
mov
push
add
mov
pop
cmp
mov
jg
add
push
sub
call
jnp
fmul
adc
cmc
jl
insb
and
push
std
pop
inc
ljmp
cltd
or
fmull
lret
jo
cwtl
lcall
cmpsb
xor
ss
cld
inc
jns
add
iret
mov
lahf
cld
fldl
or
jmp
lret
lret
lock
fcomps
pop
adc
or
mov
xor
adcb
mov
push
adc
daa
ds
clc
or
sub
ss
pushf
jo
enter
adc
mov
cmpb
dec
fs
bound
push
xchg
mov
mov
fcomp
mov
es
xchg
lods
push
mov
jb
xchg
sub
int3
or
pop
mov
sub
add
gs
mov
lds
sub
leave
pop
aam
pop
imul
mov
pop
popa
subb
loope
ret
leave
or
movsb
jge
iret
sahf
popa
cmp
mov
adc
mov
mov
cld
lret
sbb
fcmovnu
adc
push
pop
aad
push
btr
shll
mov
pop
pop
and
mov
and
or
subl
stc
cmp
push
cmp
ljmp
nop
repz
inc
adc
push
test
cmpsl
xchg
xchg
clc
inc
cmp
je
sbb
js
addr16
adc
jmp
mov
cmp
imulb
add
loopne
pop
jne
dec
int
lcall
mov
xlat
insb
pop
push
push
jnp
jnp
ljmp
js
cmp
mov
lret
xchg
pop
add
stc
out
dec
imul
lcall
gs
cmpsl
insb
or
inc
pushf
mov
mov
scas
sti
jno
jle
or
je
and
test
pop
jmp
or
inc
mov
jp
mov
dec
arpl
dec
inc
jnp
loope
cmpsb
push
dec
icebp
mov
mov
add
sbb
out
pushf
divl
mov
cmp
and
dec
push
jmp
xor
mov
loopne
scas
jl
es
jnp
in
stos
or
arpl
inc
inc
push
mov
mov
push
mov
lahf
cmp
dec
xchg
adc
jge
mov
xchg
jg
roll
insl
and
mov
call
repz
xor
push
inc
adc
or
lds
mov
pop
or
cmp
lock
jle
in
jns
adc
popa
enter
jb
mov
lods
orb
sbb
clc
mov
pop
pop
decl
out
dec
rcll
repz
cmp
and
fistl
insb
in
jb
adc
push
js
jp
push
adc
lret
addl
adc
cwtl
cmp
fninit
dec
insb
sbb
lods
jle
addr16
dec
adc
pop
lahf
cmp
mov
pop
mov
adc
lods
jno
out
jbe
rcr
mov
adc
mov
xor
sbb
sub
imul
inc
adcb
addl
jecxz
call
push
mov
fsubrl
push
lea
divl
divl
call
nop
fstpl
imul
cmp
xor
call
divl
daa
ss
fmul
ss
test
push
sub
cmpsl
js
xor
or
repz
cmp
ja
dec
xchg
cmp
push
leave
fs
scas
add
int
sbb
pop
fs
xchg
pop
je
ret
sbb
push
aas
xor
jae
fistpl
popa
jno
out
das
test
push
or
test
and
push
stc
adc
xor
jo
sbb
shlb
or
inc
out
int3
mov
fsubrs
xchg
xchg
stos
pop
add
mov
push
pop
aad
out
test
lock
loope
xor
pop
mov
pop
jae
ret
mov
dec
sti
xchg
icebp
sub
sbb
rorb
lock
and
mov
fisttpl
mov
or
xor
adc
pop
adc
out
inc
out
mov
bound
xor
push
mov
add
pop
sbb
call
jmp
sbb
dec
repz
lods
bound
js
inc
dec
leave
loop
ret
pop
xchg
sbb
lret
aas
push
xchg
divb
mov
cmpl
jl
inc
xchg
inc
mov
adc
or
sub
popl
push
loop
mov
sbb
popa
inc
or
jne
out
sub
les
push
xchg
dec
pop
iret
cmp
and
cmpsb
das
push
js
scas
sbb
jnp
subl
push
sub
sub
mov
cltd
incb
mov
dec
popa
in
fidivs
int3
pushf
ret
add
insb
inc
lods
movsb
clc
out
jbe
stos
xor
cs
dec
dec
testb
pushf
loope
mov
or
orb
mov
xchg
cld
das
loopne
leave
pop
sub
dec
call
pop
cmp
rolb
adc
mov
fsubrs
push
mov
popf
aas
in
lcall
shrb
sti
sub
dec
or
aam
sbb
jae
sub
cmpsb
mov
inc
fnsave
lahf
pop
sbb
mov
cmpsl
inc
sub
pop
iret
fs
stos
mov
clc
test
ja
test
shld
icebp
das
mov
lahf
sub
out
ret
ror
int
pop
and
xor
cmp
jmp
push
loope
sbb
push
add
hlt
aad
stos
dec
loop
push
or
xchg
dec
push
dec
in
inc
push
adc
int
in
adc
and
jmp
adc
test
loopne
add
sbb
mov
mov
mov
mov
roll
iret
xchg
mov
mov
mov
adc
mov
out
cmpsl
fbld
stos
fdivrs
in
stc
gs
lods
jmp
sbb
ret
inc
xchg
ljmp
lret
ss
inc
mov
arpl
jp
xchg
and
cmpsl
and
insl
iret
cmp
mov
cltd
int3
out
mov
jl
mov
pop
mov
outsl
loop
mov
fucomp
into
jle
mov
xchg
xchg
addr16
fstps
xor
shl
pop
mov
test
mov
in
inc
enter
sbb
andl
addr16
push
faddl
aaa
fbld
je
pop
sbb
cmp
les
jbe
clc
aam
rcl
xor
add
xor
mov
pop
orb
mov
jle
enter
test
inc
pop
jmp
rol
pop
fcmovnb
hlt
popa
sub
inc
scas
add
push
push
aad
lods
std
imul
in
sub
pop
pop
and
jmp
push
push
add
mov
adc
jnp
jl
jae
pop
popa
mov
outsl
fstl
stos
mov
sub
adcl
mov
lds
cmp
in
mov
fidivs
jle
cwtl
lret
pushf
arpl
lret
js
cld
test
xor
pop
mov
xchg
incl
sar
cmp
jl
cmp
insb
sahf
ret
mov
jmp
add
sbb
or
jb
lret
xchg
jnp
push
popf
push
cmp
mov
lcall
xor
ror
jge
mov
pop
fisttps
imul
imul
ret
dec
xchg
dec
or
jne
jns
lods
or
pop
mov
int
inc
mov
rcrl
xchg
dec
aas
imul
mov
lahf
cli
pop
clc
mov
in
fdivs
mov
test
movsl
out
in
int3
cmp
and
jmpw
out
dec
push
std
jno
cld
fmul
daa
or
lcall
dec
das
mov
cltd
pushf
je
mov
shr
in
adc
repnz
stc
fxch
push
pop
inc
add
fmuls
cli
aad
scas
cmpsl
mov
or
shlb
js
add
std
add
popf
and
int
scas
jmp
cmp
jno
int3
call
outsb
xor
xchg
int3
and
pop
popf
stos
xchg
lock
dec
sar
and
push
hlt
dec
es
xchg
sbb
in
mov
jmp
aaa
into
xchg
repnz
cmp
lret
mov
cmp
notb
lds
outsl
cmp
in
dec
jbe
add
jno
aaa
pop
fdivl
inc
push
inc
scas
mov
cmpsl
adc
push
insb
imul
aas
inc
cmp
xchg
add
dec
jle
mov
rol
arpl
inc
movsb
inc
add
arpl
cmp
cs
pop
fwait
xchg
sbb
mov
or
mov
adc
mov
cmpb
xorl
int3
test
inc
mov
mov
inc
fildl
rolb
lcall
leave
shl
xchg
inc
data16
pushf
cmc
push
mov
mov
pop
jp
sub
inc
and
test
addr16
fistpll
int3
add
dec
adc
xchg
jle
jg
lcall
jo
cmp
sahf
addr16
adc
and
test
call
push
dec
popf
add
hlt
imul
adc
or
ret
fs
outsb
imul
arpl
adc
imul
test
lock
pop
xchg
in
pop
gs
mov
dec
pusha
ret
fdivs
mov
push
adc
push
push
loop
dec
mov
adc
inc
cmc
inc
xchg
lcall
dec
cmpl
dec
negl
sbb
mov
xchg
and
xchg
xor
push
icebp
mov
adc
pop
mov
pop
jmp
add
mov
out
xor
lahf
mov
push
jge
mov
sub
adc
cmc
jp
jae
mov
pop
push
push
dec
mov
or
testb
jnp
xchg
xor
stos
faddp
mov
and
inc
inc
adc
scas
add
pushf
sub
xor
out
jl
mov
xchg
sub
mov
cmpb
lret
adc
pop
add
pop
leave
lcall
pop
pop
int
test
das
gs
push
ret
les
jmp
arpl
jge
movsl
dec
and
in
or
mov
mov
out
pusha
jecxz
sub
insl
mov
sbb
mov
pushf
in
add
bnd
sub
lods
sbb
cltd
imul
ret
mov
repz
xadd
lock
int
loop
pop
xchg
mov
mov
inc
xchg
adc
push
cmpb
add
cmp
xchg
or
cmc
stc
popa
loopne
stos
jmp
outsb
int
outsb
xchg
rol
leave
lods
push
cwtl
add
jmp
into
xor
jb
aaa
sub
xor
mov
add
sub
jmp
icebp
add
mov
cmc
pop
sahf
jne
lea
fs
cwtl
loop,pt
cmp
jle
mov
stos
xlat
jmp
mov
xchg
xor
pop
ss
in
push
loopne
pusha
mov
lcall
pop
repz
adc
sub
std
mov
sbb
stc
lea
ja
jecxz
movsb
mov
fwait
pop
cmpb
mov
jne
push
hlt
sbb
inc
jns
sbb
mov
dec
or
inc
fimull
repz
fwait
pop
jns
aas
dec
shlw
cli
mov
movsl
sbb
sub
jns
test
lahf
xchg
xor
or
ds
in
out
test
popa
shrl
push
xorb
or
subb
add
daa
pop
rcrl
jg
sbb
aad
sub
xchg
cltd
addl
divl
add
int3
cmp
xor
mov
sub
jnp
lcall
aad
xchg
das
add
cmpsl
inc
mov
mov
addr16
insb
out
in
test
sub
jl
push
in
pop
mov
popf
aam
and
popa
dec
dec
or
and
les
sub
push
add
cmp
in
and
loope
pop
inc
inc
lods
jnp
in
shrb
push
fxch
vmovlpd
lods
cmpsb
jmp
sub
cmp
push
sbb
lods
lret
mov
cmp
xchg
jmp
cli
sub
divb
cmp
push
sbb
jp
les
stc
outsl
mov
dec
lret
clc
fmull
aaa
jo
loope
sub
or
fadds
add
pop
cmpsb
adc
jne
int
adcl
loopne
push
outsl
mov
bound
sbb
test
btc
xchg
xor
push
mov
hlt
in
xchg
cltd
jne
sub
mov
push
sbb
cmc
push
cs
movsl
and
and
rcll
subl
xor
inc
lahf
add
movsb
in
inc
jo
faddl
pop
sub
repz
and
pushf
gs
pop
je
mov
insl
sbb
lret
popa
scas
fdivrs
add
fists
jnp
or
xor
add
jne
adc
cld
inc
push
pushf
sbb
inc
in
mov
xor
stos
inc
cmp
pop
cmpsl
jge
jmp
push
test
daa
xchg
addr16
and
sbb
sub
in
pushf
jo
sbb
cmpsl
mov
add
ljmp
icebp
bound
inc
outsl
adc
sub
jg
popw
push
lods
ret
enter
lahf
sbb
mov
gs
cmp
clc
movsl
inc
xchg
inc
xchg
dec
mov
xchg
sbb
cld
or
std
cmpsl
enter
inc
sbb
inc
sbb
ret
or
movsb
mov
dec
ret
fmuls
dec
sub
xor
sub
data16
fsubs
add
adc
pop
xchg
and
loop
pop
push
pushf
sub
cs
jns
add
mov
fcmovnbe
mov
out
mov
inc
pop
cmpsl
leave
and
cwtl
jmp
rol
arpl
jecxz
outsb
mov
dec
stos
jbe
fdivrl
inc
sub
repz
lret
test
push
pushf
pop
mov
push
jne
movsb
je
sbb
sub
in
fiaddl
adc
or
out
lcall
out
jbe
xchg
aas
or
mov
leave
and
mov
and
mov
sahf
fnsave
repnz
xlat
enter
jl
jns
push
inc
mov
stos
or
arpl
push
xchg
lea
int3
mov
sahf
es
xchg
cmpsl
xor
mov
data16
ficoml
inc
mov
ja
pop
xchg
push
test
sub
rcrb
lock
mov
mov
stos
into
rcll
int
cld
fisubs
aaa
mov
pop
dec
fwait
dec
subl
jl
mov
mov
movl
pushf
add
adc
pop
fs
je
lcall
in
dec
push
out
cmpl
das
ljmp
scas
stos
dec
ja
adc
xchg
dec
inc
std
repnz
orps
insb
mov
inc
in
sub
fistl
mov
mov
adcl
add
push
mov
out
adc
mov
shr
pop
push
sub
mov
fnstsw
int
fmul
xchg
ljmp
loop
out
pop
sarl
dec
and
cmp
jecxz
insb
mov
sbb
scas
fmull
pop
inc
mov
or
push
and
or
aam
aas
sub
ret
cmp
jp
xor
add
into
nop
xchg
mov
lods
bound
xchg
addr16
std
mov
push
daa
sbb
inc
jmp
sarb
push
and
mov
into
loop
call
lods
mov
cmp
bound
pusha
enter
xor
mov
outsb
stos
insb
pop
aas
jne
cwtl
adc
data16
cmp
push
inc
ret
pop
pop
cld
scas
cmpsl
jge
and
insb
rep
pop
jecxz
or
addl
pop
out
insb
mov
fldt
ljmp
jmp
jb
dec
clc
sub
push
mov
adc
das
sti
mov
and
push
in
leave
fs
mov
test
mov
jne
daa
outsb
mov
mull
test
or
sub
sbb
dec
outsb
popf
les
xchg
lcall
lcall
push
mov
dec
popa
push
add
and
and
inc
cmc
je
xchg
aam
sti
mov
and
out
mov
lahf
int
pop
sahf
or
sbb
dec
mov
int3
lret
sub
push
add
jae
mov
es
pop
mov
aas
mov
mov
hlt
lret
cwtl
lret
sti
rclb
xchg
mov
mov
mov
pop
or
sbb
jge
xchg
pop
mov
shr
movsb
or
jbe
shlb
jo
out
and
cmp
stc
adc
inc
sbb
les
dec
adc
mov
adc
sbb
jg
ds
aad
outsb
ljmp
jnp
jae
adc
fsubl
or
mov
aad
pop
es
sub
in
xor
sahf
ja
or
ss
inc
cmc
dec
cmc
mov
sub
push
jl
push
ljmp
shl
dec
fidivs
ljmp
stc
lahf
stc
and
sub
dec
push
cmp
sbb
push
push
or
push
fcompl
xchg
movsl
bound
cmpl
out
mov
or
adc
mov
or
pop
xchg
dec
stc
lock
sbb
hlt
and
xor
out
mov
addr16
cmpxchg
xor
mov
in
addr16
push
and
dec
movsb
dec
enter
push
mov
push
mov
cmp
xor
jb
dec
mov
sub
js
popa
push
mov
pop
mov
mov
lret
xlat
pop
movsb
inc
ret
int3
pop
mov
or
adc
add
and
repz
sbb
and
pop
mov
ds
dec
fs
push
mov
nop
jb
outsb
mov
jp
into
jg
jnp
cld
xchg
sub
push
insb
loop
push
push
out
mov
xchg
or
push
lods
scas
cld
and
push
push
push
or
sub
or
add
popf
shlb
call
adc
push
lret
pop
add
xchg
cmp
lock
inc
fdivrl
xchg
sub
lds
inc
push
loope
sahf
adc
or
in
sub
popa
jge
lds
aad
aad
addr16
lods
je
mov
lret
jp
icebp
pushf
orl
mov
xchg
or
xlat
sar
xchg
sahf
cmp
adcl
cli
sbb
mov
sti
cmp
add
stos
dec
and
orb
add
add
imul
inc
lcall
dec
jl
in
cmpsl
scas
jo
sub
dec
enter
insb
out
mov
xchg
push
in
xchg
jno
in
test
pop
dec
and
push
cmp
sbb
mov
cmp
and
inc
mov
fistpl
sbb
jmp
imul
in
adcl
sarb
movsl
or
sub
mov
stc
mov
push
cli
and
sbb
mov
xor
leave
and
fldt
lea
add
orb
and
push
adc
pop
insb
pop
shll
out
ret
out
scas
lret
adc
inc
pop
sbb
daa
repz
outsl
fildl
pop
fisubs
xchg
xchg
mov
sbb
fimuls
lods
outsb
mov
inc
roll
jb
ds
dec
icebp
mull
sahf
subb
repnz
sbb
movsb
lcall
aad
inc
stos
add
mov
or
inc
adc
mov
icebp
bound
xchg
adcl
aas
mov
mov
iret
push
and
jl
push
inc
inc
jb
push
jl
xor
faddp
adc
jo
fwait
push
nop
mov
shl
jg
inc
out
insl
add
sti
cli
mov
fidivrl
sub
mov
and
sub
adc
dec
iret
adc
dec
xchg
adc
cmc
xchg
push
mov
mov
filds
mov
push
xor
xor
stc
mov
jbe
push
mov
fisubrl
repz
pop
inc
sub
arpl
fwait
aam
jns
mov
jmp
pop
add
pop
mov
push
seto
stc
or
push
mov
int3
sub
push
das
sub
add
shlb
mov
fidivrs
sub
outsb
dec
das
insl
jecxz
or
or
sub
adc
mov
dec
and
and
repz
les
and
test
nop
add
mov
mov
cwtl
lods
fistl
mov
loop
out
add
pop
aaa
mov
mov
aaa
les
fistl
jp
loopne
mov
ret
add
sbbb
mov
xlat
int
jle
or
xor
cmp
push
dec
dec
pop
cs
adc
push
xor
mov
subl
jg
push
mov
movsb
out
icebp
or
dec
inc
push
arpl
lahf
sbb
pop
sub
test
lock
gs
test
dec
mov
xchg
js
cmpsb
push
fidivl
push
cmp
out
inc
test
lock
fdivrs
dec
mov
loop
sbb
jo
sbb
inc
dec
rcrl
imul
or
xor
es
js
xchg
jb
add
lret
sbb
jg
or
jb
movsb
mov
jge
inc
and
cmp
or
inc
dec
add
and
imul
aas
dec
push
lret
or
mov
rcll
adc
inc
dec
arpl
sub
xchg
add
fimuls
popf
inc
lret
fidivrs
aad
roll
aad
and
jb
outsb
add
mov
cmp
ljmp
xchg
push
mov
idivb
xchg
sbb
insl
xor
or
add
iret
cmp
xchg
cli
xchg
lret
xchg
les
int3
clc
popf
cmp
add
insb
add
push
in
rorb
int
cmp
mov
jmp
pop
lock
sub
mull
repz
jns
or
in
push
cltd
pop
jg
fldt
jno
push
stc
popf
sub
arpl
test
xlat
pusha
test
dec
push
dec
aas
in
in
sub
mov
pop
mov
fnstcw
fsubp
daa
pop
jmp
imul
add
out
jno
shlb
adc
stc
add
hlt
inc
mov
idivl
inc
orb
inc
call
xor
add
into
mov
fisubs
jle
fidivl
xor
pop
inc
pop
sti
xchg
add
inc
fs
sbb
push
and
xchg
test
scas
push
lods
and
mov
in
ljmpw
fbstp
cld
jnp
sbb
cld
cmp
lock
repz
sbb
mov
adc
scas
and
xchg
fsubrs
push
mov
mov
bound
in
adc
clc
ljmp
aad
gs
int
fidivl
pop
jmp
sahf
repnz
aaa
mov
in
stc
dec
test
sbb
adc
hlt
lds
sub
dec
out
sbb
test
leave
cmp
sub
jne
mov
out
jp
mov
sub
dec
dec
stos
xor
int
add
enter
sub
sub
rcrb
ss
mov
cmpsl
xchg
push
iret
hlt
cmc
out
into
pop
push
insb
out
movsb
sub
in
lods
mov
push
imul
jge
je
test
or
xchg
aad
push
sbb
pop
hlt
jb
nop
pop
cmpsb
push
push
mov
xchg
mov
lcall
xchg
dec
fnstcw
and
inc
jp
int3
insl
ficomps
dec
in
data16
inc
or
cmpsl
ficompl
repz
or
push
incb
inc
or
add
add
mov
xchg
xor
jp
jp
sbb
add
pop
outsb
fdivrs
shlb
pop
loop
dec
jns
stos
out
jb
mov
mov
cmp
loopne
or
push
ds
mov
mov
test
jmp
scas
jae
movsb
mov
mov
fistpl
iret
push
nop
jmp
sbb
jg
sub
mov
icebp
rorl
int3
xor
daa
push
cli
add
push
adc
rorb
cmc
and
lcall
xchg
ja
mov
mov
ret
icebp
clc
ss
inc
mov
xor
pop
jg
sbb
pop
mov
dec
xor
cs
fldenv
out
gs
call
fcom
push
test
add
mov
push
cmp
sbb
fcoml
and
sbb
dec
mov
mov
scas
test
add
and
pop
inc
inc
popa
pop
cwtl
dec
test
jne
jl
rcrb
shrb
jle
stc
adc
stos
fwait
jb
inc
je
idivb
loope
jne
mov
cld
dec
fcoms
dec
jae
fisubrs
mov
inc
sbb
ds
lcall
fcompl
sahf
dec
adc
inc
lahf
mov
dec
mov
sbb
cltd
mov
mov
sub
dec
outsl
cmp
or
push
inc
sbb
or
test
xor
stc
movsl
movsl
lahf
or
leave
stos
mov
popa
popf
xor
pusha
loop
decl
divb
xor
adc
cmpsb
in
insb
jns
push
fsts
je
in
xchg
movsl
jecxz
adc
loope
jbe
in
out
inc
jge
add
cmp
test
lock
cwtl
std
jl
jecxz
inc
push
lcall
jp
mov
jno
pop
lods
lahf
xor
mov
mov
jbe
daa
test
cmpsl
push
sbb
xchg
push
sub
pop
gs
inc
gs
inc
and
and
loope
das
aad
push
sub
lret
mov
bound
iret
xor
stc
xchg
je
ljmp
or
xchg
out
aaa
dec
in
xor
and
in
jmp
lds
fldcw
jle
dec
push
and
movsb
test
xchg
and
mov
imul
loop
pop
loope
std
jne
xchg
fisubl
mov
jns
scas
test
call
addb
jg
add
loop
imul
iret
mov
std
inc
rorb
or
xchg
lahf
and
pop
aam
jno
dec
adc
sbb
fsubs
loope
push
addr16
pushf
shrl
xor
shr
mov
xor
test
pop
orl
and
adc
out
sbb
push
cmpsl
sbb
enter
pop
push
test
jae
lea
and
in
data16
jae
pop
pop
aam
loope
stc
pop
rorl
loopne
and
int3
insl
pop
popa
sbb
outsl
pop
jp
mov
pop
push
leave
repnz
cltd
stos
cs
cmp
idivb
out
inc
cmpsb
add
xor
cli
mov
cmp
ss
inc
push
jbe
mov
mov
xchg
sub
sub
fidivrl
aas
pop
pop
arpl
sub
pop
repz
fisttps
mov
cmc
dec
mov
aaa
aaa
outsl
jno
lret
rcll
mov
push
cltd
sub
xor
mov
pop
mov
cmp
pop
inc
nop
mov
push
xor
sbb
mov
jo
inc
sbb
imul
je
rcl
pop
scas
data16
mov
jmp
in
adc
adc
lock
push
jb
pop
xor
out
hlt
jns
jb
pop
pop
mov
and
in
fdivrl
inc
xchg
jge
dec
inc
fidivrl
jg
inc
lea
mulb
aas
jbe
or
ret
mov
or
add
repz
cli
add
mov
mov
xchg
pop
into
and
jns
out
jbe
testl
mov
por
movsb
lcall
popf
stc
cltd
rol
adc
pusha
push
inc
outsl
pop
nop
mov
push
inc
fcompl
popf
sbb
sahf
jle
cmp
or
adc
lret
pop
lock
int3
and
popl
nop
cmpsl
stos
ret
cltd
and
cmp
add
cwtl
movsb
mov
testl
xchg
inc
aad
sub
repnz
scas
or
dec
mov
sahf
adc
push
loope
int
shr
fadds
scas
je
inc
xchg
jl
lahf
dec
and
cwtl
scas
jno
dec
xorb
push
dec
fwait
insl
shlb
aaa
inc
mov
pushw
sbb
cmp
and
adc
popa
lods
lcall
bound
push
mov
xchg
xor
in
jno
mov
push
sbb
lret
mov
xor
fimull
jno
jecxz
out
movsl
push
cmp
xchg
xor
into
cs
sbb
push
out
mov
sbb
inc
cs
sbb
mov
sbb
xor
jbe
mov
jno
or
adc
popa
xchg
mov
pushf
clc
push
scas
pop
pusha
jne
adc
jge
ffreep
mov
ljmp
jne
lret
add
xchg
insb
dec
in
push
push
lds
ficomps
jb
inc
add
jmp
mov
jne
pop
fbstp
inc
enter
push
in
imul
and
mov
inc
xchg
mov
or
in
xor
or
sar
pop
fsubrs
sbb
adc
mov
sub
out
xchg
lret
mov
sub
sub
repnz
xor
stos
jg
or
mov
pop
jno
dec
add
out
arpl
or
jg
sahf
call
sub
sub
notl
repnz
pop
and
pop
inc
insl
inc
xchg
cli
jp
adc
test
or
pop
mov
jl
sbb
jecxz
and
xchg
gs
sbb
sub
mov
xor
xchg
jne
mov
push
pop
add
or
jns
in
ss
cld
sub
shll
mov
mov
sub
sbb
xor
inc
add
xchg
adc
jp
shll
and
sub
test
add
sbb
fstpt
sub
xchg
or
outsl
aaa
xor
mov
dec
xchg
jae
ja
icebp
mov
int3
int
dec
arpl
test
arpl
ljmp
sub
sti
int3
add
jns
inc
xchg
into
stos
imul
andl
push
cmp
mov
push
faddl
mov
fsts
cs
fildll
test
std
add
cmpsl
inc
add
jne
cld
xor
iret
sub
mov
sub
mov
xor
addb
test
loop
mov
dec
lock
cmpsl
inc
clc
lret
mov
fwait
testl
sbb
mov
xor
fdivl
or
ja
popa
and
xor
push
into
cltd
mov
inc
dec
into
inc
out
pop
daa
push
lcall
cmpsb
or
cmpsb
cmp
sub
push
jne
sbb
jecxz
dec
push
adc
loope
test
lea
cmpsl
dec
lret
push
sub
and
or
fxch
std
xorl
les
fsubl
gs
loopne
sub
mov
push
movsb
ljmp
sbb
mov
ss
adc
movsb
push
leave
imul
test
pop
clc
sbb
out
ds
and
movsl
and
cmp
or
das
push
aaa
or
test
scas
sahf
ret
mov
test
ljmp
imul
enter
jle,pt
test
cmp
cli
cwtl
sub
jl
inc
shlb
add
insb
nop
or
clc
int3
lret
test
movsb
push
jae
cltd
push
lods
out
out
cmp
popf
adc
out
movsb
push
xchg
add
and
sub
pushf
mov
and
leave
pop
jb
xchg
xchg
movsl
inc
int
mov
fists
pop
xchg
jno
movsb
outsb
cmp
mov
mov
repnz
gs
jmp
cmpsl
fs
sbb
push
cmp
push
push
push
or
lahf
mov
adc
xor
test
push
push
je
sbb
lcall
pop
fwait
aam
cmp
pop
push
insl
mov
or
test
push
ret
lods
cmc
jae
addr16
outsl
in
or
lock
mov
arpl
push
outsl
adc
push
sbb
and
push
clc
scas
inc
push
inc
xlat
fisubl
fwait
rep
xchg
mov
mov
dec
sahf
lds
hlt
mov
cmp
inc
pop
add
rorb
push
lea
push
jbe
add
or
lret
stos
cwtl
and
rcll
jo
in
xor
aad
xor
cmpsl
or
jge
push
in
and
mov
sbb
cmpsl
jecxz
fimull
scas
adc
lods
movsb
mov
dec
les
xchg
mov
roll
pop
imul
lods
inc
or
movb
sarl
dec
fldl
mov
outsl
sub
push
sahf
loope
sbb
add
imul
stos
inc
or
popf
cmp
stos
insl
lds
cmpb
enter
fsubrs
cmp
add
xchg
add
add
aaa
mov
xchg
repz
pop
xchg
mov
cli
sti
cli
jns
xlat
cmp
std
pop
fdivrp
inc
jb
sar
dec
pop
clc
daa
in
pusha
jo
or
jno
inc
call
sbb
out
testb
inc
cmp
mov
push
jne
push
mov
mov
xchg
out
ljmp
jg
adc
and
dec
cltd
insl
lcall
push
testl
and
repz
xor
shr
mov
jmp
stos
sbb
cmpsl
xor
mov
push
jl
jl
mov
subb
cltd
pop
sub
out
xchg
nop
outsb
or
cmp
loope
fs
inc
add
push
push
xor
add
fwait
test
fmuls
ret
mov
repz
mov
add
loope
out
sub
sti
mov
and
in
cli
mov
xorl
orb
push
repz
push
mov
mov
xor
insb
lret
test
fucomp
mov
std
or
or
pop
and
sbb
outsl
jne
scas
ja
mov
sub
addb
mov
mov
cmp
iret
cmp
call
pop
mov
push
mov
out
add
lods
insl
roll
es
pop
aas
add
mov
les
repz
loop
mov
xchg
jae
push
fwait
mov
push
push
rcrb
fldl
jg
inc
into
int
dec
test
dec
push
imul
push
lahf
adc
imul
lock
xorb
sbb
mov
push
and
mov
int
imul
push
inc
loop
pop
push
push
jecxz
pop
pop
stos
movsl
adc
incl
faddl
mov
cmpsl
pop
xchg
adc
cmpsl
lds
sub
push
xchg
imul
mov
das
das
push
dec
aad
std
xchg
sub
adcl
cwtl
xor
dec
lods
bnd
arpl
aas
jecxz
mov
stos
arpl
cmp
mov
xlat
mov
pop
int
xchg
loope
cli
das
leave
ss
out
pop
sbb
outsb
mov
popf
add
scas
aad
ja
call
xor
cltd
shrb
dec
ss
popa
sub
xchg
xor
mov
inc
jbe
xor
sbb
cmp
loope
cltd
fldt
and
jg
mov
xor
shll
js
jl
cmp
mov
cmp
mov
mov
fisttpll
xor
sarb
fiadds
sub
adc
or
and
nop
test
es
insb
jno
lock
push
xor
adc
mov
leave
and
xor
pop
jp
adc
jecxz
fcoml
gs
pop
inc
inc
jbe
ror
imul
or
adc
xor
stc
ret
das
dec
ds
test
loopne
lahf
inc
es
adc
inc
sbb
add
and
scas
sub
xlat
jae
cs
daa
mov
xchg
pop
sbb
testl
pop
sub
ljmp
movsb
dec
pushl
movsl
adc
mov
leave
insl
addr16
popf
jmp
cmp
fwait
enter
jns
lret
add
inc
icebp
test
hlt
test
movsb
ljmp
push
fcmovb
jne
sbbb
xor
mov
jae
jae
daa
cmp
stos
stos
and
add
xchg
loop
mov
mov
sub
push
sahf
xor
inc
outsl
xor
aam
fsubrs
arpl
sub
ja
popl
leave
pop
jo
outsb
xchg
les
or
cs
arpl
and
sarl
cmpl
sub
jns
aam
cmpsl
and
mov
jg
xor
sbb
dec
stos
jl
sub
popf
mov
out
dec
mov
arpl
addl
lret
dec
ror
lds
popf
lods
adc
test
mov
or
lret
int3
add
mov
fisttps
arpl
and
mov
and
sbbb
push
jae
xlat
mov
mov
add
in
add
sbbb
xchg
xor
xchg
mov
push
cli
dec
push
or
imul
fnstsw
sbb
push
movsb
push
cmp
xchg
es
stos
idiv
pop
mov
leave
and
shlb
cmp
sarl
mov
fs
xlat
int
out
test
imul
and
jns
pop
jmp
add
je
adc
es
mov
arpl
jl
test
lea
or
sbb
mov
xchg
pop
movsb
fstps
ljmp
aam
clc
test
cmp
mov
pop
arpl
clc
push
ljmp
xlat
pop
dec
jmp
pop
stos
or
cmp
rcll
lret
xor
push
mov
in
cs
adc
xor
pushf
mov
xchg
xor
imul
push
cwtl
xor
add
sbb
mov
push
ljmp
rcrl
divb
add
jbe
ret
in
mov
test
mov
cmpsl
adc
into
out
hlt
aam
push
jno
fdivrs
or
jmp
xchg
in
daa
roll
leave
rcr
and
or
pop
sub
jmp
jo
xchg
mov
popa
jle
aaa
pop
xchg
fidivl
notb
pop
es
cmp
pop
add
fwait
adc
sub
cmp
inc
test
lods
push
ljmp
jo
shl
bound
jae
pop
dec
mov
sbb
and
xor
test
or
inc
pop
dec
xor
xchg
cld
aas
jnp
push
add
iret
inc
js
shl
push
or
test
mov
pusha
aam
mov
inc
out
insb
stos
js
inc
jb
inc
movsl
cmp
ret
lcall
aad
les
sti
out
inc
inc
sar
test
cld
das
sub
mov
jb
gs
inc
shlb
mov
insb
rcll
stos
insl
cli
imul
outsb
mov
nop
int
cmpsl
cmp
gs
push
fiadds
adc
cmp
push
fisubs
dec
adc
xchg
mov
insl
sub
pop
movsb
lea
fs
ljmp
enter
cmp
sbb
stc
cmpsl
mov
push
adc
push
pop
mov
push
cmp
popa
lret
push
out
jl
sbbb
inc
xchg
inc
cmpsb
subb
cs
fmulp
jl
push
scas
fmull
inc
xor
not
jbe
fldcw
xchg
ret
enter
jae
fucom
js
jo
jae
sub
pop
push
inc
stos
mov
inc
add
insb
mov
and
and
loope
dec
mov
cld
lahf
loop
movsb
jne
jne
sub
insl
fimuls
sub
lods
pop
js
loop
mov
pop
mov
fstps
test
and
dec
mov
cwtl
imul
sub
add
xchg
outsl
ljmp
in
or
pop
inc
fimuls
mov
test
and
in
push
out
cmpsb
jp
adc
xchg
lcall
push
not
movsl
push
push
fwait
mov
mov
push
fs
jno
dec
cli
into
fnstenv
cmc
fwait
adc
test
dec
aas
addr16
cmp
add
pusha
jmp
jle
jg
mul
sahf
andl
insb
decb
insb
outsl
or
icebp
cmp
sub
popa
mov
or
sbb
inc
mov
add
or
fldl
insl
inc
xchg
and
and
lret
mov
dec
cmp
cmpsl
movsl
lea
fsubs
cmp
inc
adc
test
rolb
mov
je
lcall
mov
adc
jle
jp
icebp
mov
data16
pusha
out
mov
cmpl
mov
pop
jo
mov
imul
cwtl
subb
inc
clc
jge
pop
push
jb
jne
stos
sub
lret
sbb
dec
push
je
mov
xchg
rorb
push
inc
sbb
and
inc
inc
sbb
insl
loope
fimuls
stos
sbb
mov
inc
adc
xchg
sub
mov
std
mov
scas
add
jecxz
fistpl
adc
mov
outsb
subl
jnp
jmp
mov
ret
mov
xor
pop
dec
call
cli
icebp
lret
xor
jge
arpl
cmp
movsl
xchg
rol
lret
test
ret
repnz
mov
and
call
pop
sbbb
loopne
sahf
icebp
sbb
or
loopne
adc
daa
andl
fldln2
out
ret
mov
cld
into
jge
xchg
ret
lods
lret
and
aaa
leave
cmc
cmp
and
add
sub
ret
cmp
jbe
and
adc
popf
rolb
dec
frndint
in
push
push
cltd
and
movsb
outsb
aaa
mov
decb
leave
xchg
sub
cmpl
test
sub
stc
inc
mov
dec
mov
mov
call
sbb
jge
lahf
inc
mov
ret
loop
hlt
cmp
fld
rorl
adc
inc
sahf
jbe
xchg
mov
xor
ljmp
lods
int
aam
loopne
test
mov
gs
dec
lds
add
xchg
add
mov
fnsave
jno
pop
mov
iret
adc
push
js
cmpsl
pop
dec
adc
dec
fdivp
pop
xchg
sub
mov
mov
int3
movsl
push
add
imul
jge
insb
es
mov
cmpsb
dec
in
popf
ljmp
jp
adc
arpl
out
test
mov
and
pop
ja
pop
lock
and
sbb
jne
inc
inc
test
or
in
iret
adc
data16
cmp
ret
ficompl
pop
xchg
jmp
mov
sub
fnstcw
adc
ret
lcall
cmpsb
push
je
pop
sub
inc
sahf
fisubl
inc
out
push
hlt
sbb
cmp
sbbl
inc
mov
push
inc
and
leave
cmp
or
out
xor
mov
sahf
xchg
stos
or
leave
mov
cltd
mov
inc
mov
subb
mov
jbe
adc
aas
test
hlt
mov
inc
add
mov
cmp
dec
cwtl
xchg
jbe
popf
mov
insl
cwtl
jb
loop
push
mov
mov
mov
mov
adc
push
in
cvtps2pd
loopne
pop
sub
dec
push
and
mov
movsb
repnz
and
lret
xchg
push
repnz
rcrb
inc
add
or
mov
arpl
push
xorl
das
pop
sub
hlt
jecxz
pop
lret
sub
sub
or
out
mov
lcall
jg
cmp
jp
pop
jbe
pop
cwtl
xchg
push
es
mov
hlt
jg
xor
pop
and
out
xor
sbb
xchg
stos
push
pop
push
jecxz
stc
mov
add
xor
mov
ret
stc
pop
aad
pushf
aad
xchg
mov
xchg
xor
push
imul
xchg
sti
fwait
add
test
add
xorl
mov
cmp
lock
push
push
movsb
shlb
ret
mov
push
jge
mov
cmpsb
xchg
aas
cwtl
pop
adc
test
xchg
mov
das
pushf
add
pusha
test
insb
sbb
xor
popa
pop
std
mov
stc
addr16
dec
sub
mov
daa
dec
push
cmp
stc
clc
xor
mov
sub
stos
out
inc
and
cwtl
pop
pop
inc
neg
idiv
loope
sub
xor
adc
jge
inc
imul
mov
sub
imul
push
sarb
je
fidivl
mov
xor
xor
sbb
jnp
jo
add
stc
sbb
dec
into
daa
pop
je
mov
mov
sub
insb
sbb
pop
andl
into
xchg
sbb
inc
mov
dec
xchg
jmp
js
mov
pop
rol
pop
in
inc
subb
mov
lds
push
daa
fsubrs
jbe
int3
shll
pop
or
or
loop
jmp
push
jmp
negb
sti
nop
mov
push
add
adc
adc
sbb
movsl
xchg
sub
dec
rcll
test
lret
mov
fistps
mov
cltd
and
mov
imull
imul
and
push
cmpl
ds
add
ja
push
sbb
dec
or
mov
adc
fwait
cmp
outsl
mov
or
movsb
lea
mov
lods
inc
mov
nop
and
or
pop
in
scas
push
mov
xor
sbb
data16
mov
and
adc
bound
and
jmp
pop
jbe
outsl
pop
lds
push
add
aaa
rcrb
inc
and
dec
in
cmp
stos
add
cmc
shll
push
cmp
sbb
lret
push
inc
sbb
inc
mov
sbb
xlat
jp
mov
cmpb
sbb
mov
into
xor
loope
out
in
inc
adc
add
fnstsw
cli
xchg
jp
push
fisttpll
sub
adc
jo
sbb
add
popf
lock
xlat
mov
jge
add
sarb
jb
ret
lret
jno
and
sarl
repnz
mov
inc
daa
xchg
insl
rorl
adc
cmp
rcll
pop
mov
or
push
xchg
int3
fisubl
lahf
outsl
lock
push
mov
inc
xchg
lock
int
std
jne
or
sbb
adc
into
cmp
xchg
pop
pop
insb
sub
xor
aam
mov
sbb
cltd
and
and
push
pop
push
stc
rolb
cwtl
pop
dec
sbb
cmp
scas
lea
inc
adc
pop
pushf
cmp
in
mov
pop
orl
and
daa
in
cmpsb
pop
out
pop
inc
jmp
push
mov
mov
xlat
js
cmc
add
adc
mov
sbb
mov
jno
pushf
xor
enter
jo
leave
aam
sahf
sbb
add
jns
inc
pop
and
pusha
icebp
fnstenv
xorb
push
mov
mov
icebp
xor
push
aad
or
scas
inc
movsl
mov
shr
push
shrb
scas
stos
ret
ss
xor
or
cmp
add
jb
out
cmpb
lock
mov
and
in
pop
mov
ja
out
cld
push
push
sti
ja
push
fadds
pop
or
mov
lods
or
push
or
and
pop
jo
fs
sahf
xchg
pop
imul
pushf
scas
push
jnp
scas
dec
outsl
popa
dec
dec
repz
rolb
cmpsl
dec
sbb
jmp
jge
hlt
daa
loop
mov
jne
lods
cmpsb
lea
das
inc
nop
sub
mov
cld
cltd
fwait
shll
lret
sub
aad
mov
cmc
aam
pop
pop
js
cli
dec
sbb
outsb
cmc
les
roll
jp
addr16
and
sbb
xchg
cld
ret
mov
and
adc
shrl
lret
xchg
pop
lds
jecxz
fists
loop
loopne
adc
xchg
xchg
insl
jmp
jmp
dec
push
push
jnp
xchg
jmp
mov
push
mov
cmp
inc
cli
jmp
inc
pop
fimull
call
stos
jl
and
fs
fsubl
inc
fsubrs
insl
and
jg
inc
jns
dec
or
into
je
mov
adc
mov
div
out
sub
sub
push
ror
or
mov
mov
addl
inc
lea
mov
cmp
clc
test
shll
movl
test
add
subb
nop
push
mov
insl
rcrb
push
lock
popa
cwtl
sbb
inc
adc
sbb
das
mov
fnstsw
jl
pop
cmpsb
inc
cmp
and
pop
clc
mov
nop
adc
mov
in
mov
dec
outsl
inc
xor
mulb
lcall
adc
dec
adc
jae
dec
out
xor
sbb
jae
int3
cmp
dec
je
adc
mov
jae
pop
adc
jge
push
mov
mov
jbe
jb
stos
pusha
xorb
mov
jge
fcomps
fcomip
sub
sbb
arpl
les
imul
pusha
adc
ror
ja
loop
push
outsl
mov
hlt
ja
mov
js
adc
inc
sbb
ljmp
daa
xor
test
push
andl
lods
sbb
out
xchg
pop
test
dec
or
cld
mov
cmp
push
cmc
dec
addr16
leave
jg
mov
addr16
or
in
mov
inc
addr16
into
jecxz
sti
push
cld
pop
test
push
fisubrs
lock
inc
fadds
xchg
push
dec
xor
mov
sub
mov
out
and
lcall
add
sub
dec
mov
cltd
mov
and
mov
aaa
adc
xor
add
mov
in
out
mov
xor
push
pop
loopne
cmpl
fbstp
nop
dec
mov
stos
add
jp
lds
add
dec
or
mov
and
les
xlat
stos
cmpsb
xlat
mov
sarl
les
int
mov
stc
cmp
mov
mov
cmp
icebp
fdivl
ljmp
loopne
lcall
push
mov
in
push
outsb
rorb
and
pusha
mov
cmpsb
daa
popf
sub
pop
or
mov
xor
mov
fldenv
jne
ljmp
and
in
pushf
in
cmp
xchg
adc
xchg
pop
pop
push
test
jno
add
int
cmp
jle
jbe
repnz
mov
push
lods
scas
pop
rorb
lret
imul
pop
inc
cs
fldl
cwtl
pop
inc
subb
stos
sub
punpckhdq
into
mov
sbb
xchg
bound
dec
lret
push
push
rclb
fs
adc
push
or
jae
push
add
mov
shll
int3
pop
into
das
rcrl
pop
lahf
adc
fisubl
mov
sbbl
in
adcl
jo
sarb
stos
repnz
xchg
nop
mov
mull
into
mov
stos
xor
test
mull
mov
fsubr
mov
enter
dec
push
mov
mov
or
sbb
and
fs
stos
outsl
mov
orb
mov
jb
fcomps
dec
mov
xor
add
aam
mov
imul
std
cmpsb
cmp
xchg
add
dec
add
imul
ja
sbb
clc
call
out
xor
daa
test
dec
dec
push
mov
inc
pop
mov
jns
lea
jmp
dec
and
pop
push
or
sub
mov
sbb
int3
jno
inc
mov
mulb
call
pop
ror
add
and
enter
mov
xchg
mov
insb
sbb
idivb
addr16
out
gs
roll
das
adc
push
pslld
add
mov
and
in
inc
ja
out
mov
nop
or
jne
loopne
mov
pop
mov
xchg
mov
imul
sbb
jno
dec
inc
shlb
jl
cwtl
arpl
pop
xor
repz
stos
insb
jnp
and
dec
mov
int3
in
lds
aam
mov
insb
cmp
shlb
pop
outsb
jae
arpl
xchg
shrb
mov
push
xchg
cmp
and
pop
lods
out
adc
in
cmpsb
push
mov
in
mov
jl
fstpt
aad
dec
xor
sub
fimuls
cmp
les
mov
out
mov
inc
rcrl
adc
lea
jae
pop
add
loope
xor
mov
dec
das
leave
push
mov
or
test
shlb
dec
inc
push
cmp
inc
fists
and
cmp
lahf
mov
into
imull
mov
xchg
rcll
popf
imul
rclb
pop
mov
je
jmp
mov
dec
clc
popf
shl
dec
xchg
xchg
or
jmp
test
xor
je
fdivs
sahf
add
lahf
testl
push
es
mov
pop
outsb
in
hlt
out
push
sahf
adc
std
mov
sahf
lods
insl
data16
mov
ja
cmp
mov
dec
ret
push
mov
push
dec
adc
cli
mov
out
xchg
scas
bswap
repz
cmc
inc
subl
inc
inc
in
idiv
pop
xchg
jmp
sbb
fdivp
mov
pusha
les
addb
dec
lods
inc
lahf
es
or
arpl
xchg
lods
fdivl
xchg
pusha
sarb
pop
or
sarb
dec
pop
mov
cmp
and
inc
sbbb
in
mov
sbb
icebp
sbb
sarl
or
xchg
jp
push
mov
push
test
jns
jecxz
dec
xchg
incl
shll
cmp
dec
iret
loop
xchg
mov
xchg
ljmp
xor
clc
xchg
sbb
das
xlat
and
sbb
push
dec
lcall
mull
bound
mov
cmp
inc
test
inc
ss
jle
cmp
push
add
xor
xchg
add
or
or
inc
outsb
shl
mov
aas
out
or
cmpb
mov
bound
cmp
sti
pop
jae
lret
xchg
lahf
notb
adc
int
ret
inc
mov
mov
or
xchg
mov
adc
inc
test
fldcw
jnp
loop
cmpsl
mov
aas
fsubrs
fdiv
in
inc
pop
mov
push
popf
enter
fwait
jp
pop
mov
js
mov
push
cmpsb
scas
aad
std
push
sbb
jmp
mov
dec
sti
jl
adc
int
test
add
xor
mov
fucomip
shll
xchg
mov
pop
push
sub
push
jecxz
cmp
ret
or
repnz
add
dec
inc
cmpsl
mov
dec
xchg
hlt
push
add
xlat
ret
insl
sbb
stos
mov
nop
or
stos
dec
push
sbb
sub
pop
mov
and
jmp
lea
jl
sbb
add
gs
inc
xchg
sahf
dec
fimull
lds
into
mov
leave
imul
adc
ss
and
scas
mov
inc
aam
out
inc
jmp
loopne
pop
loop
test
jo
subl
xlat
sbb
inc
ret
mov
add
dec
push
ss
scas
aam
dec
in
mov
lods
dec
pop
jnp
orb
int3
sti
mov
or
out
sub
mov
in
push
cmp
jno
xchg
sahf
andl
xchg
sbb
sbb
rclb
xchg
shll
push
fwait
pop
jmp
cmp
lea
push
iret
dec
xchg
jg
mov
ljmp
jo
mov
cmpsl
adc
xor
jbe
scas
or
aad
je
mov
jnp
add
lea
je
mov
scas
jo
mov
int
adc
movb
add
fiaddl
decl
jle
hlt
inc
les
fldcw
cmc
cld
outsb
adc
sub
inc
aam
add
pop
arpl
fsubrl
cmc
movsl
mov
push
jae
repnz
pop
popf
adc
inc
aad
cli
jmp
outsb
or
cmpsl
stc
test
mov
and
adc
push
push
stos
xor
fwait
hlt
aaa
aaa
js
xchg
jae
mov
enter
adc
cmpsb
icebp
out
out
in
jmp
push
push
lcall
repz
xchg
lahf
aaa
mulb
out
addl
mov
xor
fists
jge
jmp
sub
cmpsl
stos
cmp
or
and
xor
int
adc
arpl
dec
add
mov
or
jae
mov
aas
xchg
test
push
dec
adc
fsubrp
cmpsl
insl
stos
add
jbe
pop
sbb
jmp
test
out
aam
shll
cmpsb
or
outsb
pop
daa
cli
cmp
mov
jo
or
test
fwait
lret
lock
push
push
pop
pop
xor
adc
jns
js
cmp
fsubrl
inc
xor
jae
scas
push
lahf
enter
loopne
xor
push
dec
out
rclb
cmpsl
cmpsl
mov
ficompl
fwait
mov
mov
xchg
pop
add
sbb
sbb
cmp
or
shr
sub
mov
or
jle
std
adcl
xor
jnp
ret
fwait
pop
js
jnp
cmpsb
mov
lds
push
rcrb
push
sbbl
cmpl
and
mov
jae
dec
imul
in
scas
push
push
push
adc
ret
stc
xchg
inc
fidivs
dec
jo
sbb
js
inc
test
ss
dec
mov
lods
psrlq
push
dec
pop
mov
adc
call
shrl
cmp
jbe
mov
pop
mov
inc
lcall
sub
loopne
inc
xor
insb
jbe
xchg
cmp
push
mov
nop
xor
or
dec
mov
jne
xchg
insl
sarl
mov
fptan
icebp
rcr
sbb
push
arpl
repnz
repnz
inc
mov
sub
stc
push
inc
je
stos
rorl
vcomiss
sub
mov
cli
cwtl
sbb
arpl
dec
popf
movsl
inc
out
and
inc
idivl
repz
push
jmp
int3
sbb
iret
and
push
lods
sub
fbstp
cmpsl
notl
xor
adc
lea
push
mov
sub
cmp
adc
and
aas
cmp
int
daa
aaa
adc
rolb
and
es
and
push
and
jmp
rcrb
int3
push
push
cltd
test
fildl
pop
push
add
push
cmpsl
jl
xchg
push
rcrl
sub
cmp
ja
jo
pop
popa
sbb
jne
xchg
dec
jle
test
notb
lea
sbb
push
imul
cmp
test
adc
dec
inc
daa
fcomps
pusha
imul
std
push
subl
cmp
xchg
icebp
data16
jmp
fwait
xor
pop
cmp
sbb
in
mov
and
push
xchg
loop
popa
jmp
mov
pop
cmp
cmp
movsb
lret
frstor
or
fstpt
outsb
out
in
dec
mov
add
and
dec
dec
xchg
js
dec
jl
cld
lods
jnp
xchg
mov
test
fs
imul
dec
inc
pop
push
dec
xor
dec
jbe
cmp
and
mov
pop
addr16
inc
add
dec
sub
mov
nop
loop
fcmove
ds
insl
jge
push
in
or
dec
push
mov
aam
outsl
in
movsb
dec
gs
sub
nop
iret
test
jge
out
or
sarb
add
cmpl
cmp
js
lods
adc
adc
pop
xor
xlat
xchg
mov
push
testb
nop
sbb
adc
cmp
fbstp
movsb
and
xchg
outsl
imul
cli
sbb
and
push
jle
lds
xchg
ljmp
pop
inc
mov
loopne
sbb
sti
or
popf
stc
cmp
stc
push
jl
and
pushf
lcall
insb
xor
xor
insl
inc
outsb
data16
mov
out
pop
call
mov
push
pop
sbb
mov
test
push
scas
sti
fdivs
mov
pop
out
testl
xor
test
mov
and
addr16
cli
sbb
adc
jp
insl
sbb
push
cmpsb
addr16
aaa
cmp
and
mov
sti
mov
inc
fcmovnbe
insl
mov
ljmp
lcall
test
pop
jbe
iret
push
aam
stos
jae
les
inc
hlt
lret
or
aad
repz
push
fldenv
sbb
jmp
cli
or
add
shlb
imul
cld
xorl
sahf
dec
lahf
pop
dec
ret
add
bound
pop
les
and
je
xor
bound
pop
rcrb
xor
enter
sahf
pop
jne
arpl
aad
sub
add
orl
fdiv
pop
mov
mov
mov
ret
lret
dec
rorl
out
jae
inc
scas
push
fimull
outsl
jno
or
jns
xor
shrb
add
js
inc
push
mov
movsb
negl
daa
mov
push
pop
push
cmc
sbb
pop
inc
jbe
or
out
sahf
das
cli
jae
xchg
sbb
loop
stos
test
or
cmp
mov
jo
and
jno
insl
pop
pop
lahf
pop
sub
pop
pop
add
pop
push
mov
add
jne
out
das
aad
cmp
xchg
call
test
jnp
out
mov
or
out
push
mov
aad
fdivr
or
adc
or
rolb
pusha
xchg
jae
xor
scas
mov
int3
mov
cwtl
aas
je
into
dec
cmp
sub
movsb
xchg
repnz
mull
pop
movsb
inc
clc
add
jb
test
incl
insb
in
sar
repnz
xor
mov
mov
notb
fsubrs
adc
imul
push
popf
mov
or
jo
dec
movsb
jae
adc
push
inc
stos
lds
test
fstl
std
sub
xchg
andb
and
add
cmp
xor
sbb
out
sub
call
movsl
test
or
cld
add
cmp
orl
mov
or
addl
sbb
fsubrs
das
pop
and
xorl
loope
call
imul
dec
out
mov
lds
rcrb
and
push
inc
mov
lods
cmp
sub
xlat
xchg
push
mov
xchg
and
and
jecxz
cmpsb
adc
dec
inc
pushf
lods
test
sbb
xorl
popf
icebp
cmp
or
jbe
xor
es
mov
cli
mov
inc
pop
push
pop
xor
cmpsl
push
pop
xchg
cmp
dec
dec
and
mov
pop
jecxz
mov
xchg
jmp
ret
mov
repz
fcompl
stos
push
mov
inc
inc
xlat
das
popa
cmp
mov
adc
adcb
cmp
loop
pop
std
fisttpll
das
sub
mov
mov
sub
aaa
xchg
mov
jge
test
aam
push
mov
pop
mov
pop
mov
iretw
cmp
scas
mov
mov
xor
jo
fwait
lahf
jo
push
mov
or
jecxz
fs
sti
cmp
sbb
xchg
jg
and
mov
xchg
dec
fcmovbe
jne
and
scas
repz
pop
jge
test
leave
js
fidivs
fcomps
lods
dec
add
sbb
fwait
mov
sbb
js
stos
sbb
mov
dec
call
jne
dec
pop
or
pushf
dec
jg
testb
out
rcrl
bound
mov
dec
xchg
jno
jle
sbb
div
jbe
enter
stos
fsub
lods
mov
sub
roll
cwtl
mov
ss
call
jmp
stc
test
xor
das
icebp
add
not
addr16
push
sbb
jg
es
inc
test
in
leave
insl
jecxz
lahf
icebp
pop
scas
in
cltd
test
mov
xchg
cmp
lahf
sbb
dec
jno
sti
cs
adc
cmpsl
and
push
cmp
aas
loope
dec
cvttps2pi
jb
sbb
into
cmp
mov
fidivrl
pop
cmp
pop
inc
andb
sub
hlt
gs
sub
pop
mov
xorb
jne
fldt
mov
or
cld
lret
jne
adc
pop
mov
insb
leave
lds
dec
lock
mov
nop
add
sub
notb
int3
mov
in
jbe
sub
pop
int
sub
pop
jo
mov
setbe
pop
cmc
ss
mov
pop
loope
test
add
sbb
fs
js
in
mulb
adc
mov
xchg
pop
lret
cmp
popa
inc
lss
mov
enter
push
jo
push
scas
sbb
dec
cmp
mov
cmp
xchg
icebp
dec
pop
popl
xchg
das
mov
pinsrw
jge
mov
jb
aad
dec
jae
pop
jno
xor
into
push
dec
rcrl
fcoml
movsl
shll
loopne
pop
mov
in
adc
ret
lret
adc
and
shlb
xor
mov
xlat
pop
dec
icebp
fscale
movsb
fucom
or
imul
and
jno
xor
cmp
fistpl
mov
lret
sub
lret
sub
mov
jo
inc
push
push
leave
test
add
incb
push
jnp
sarb
imul
nop
cmpb
daa
push
push
cmp
test
scas
or
or
movsb
cmp
dec
shll
xorb
movsb
mulb
ja
call
adc
loopne
mov
sarl
jno
add
push
andl
xchg
popa
fistpll
jp
jae
inc
cmpsl
push
pop
out
sbb
pop
mov
mov
push
jl
and
pop
std
out
add
aas
mov
sub
in
movsl
dec
lahf
and
sbb
mov
push
xchg
cld
mov
push
imul
les
and
lret
xor
insl
jg
ds
ret
and
mov
and
ret
add
xchg
je
test
inc
lock
adc
adc
xor
jg
std
in
shrb
outsb
pusha
faddp
enter
inc
mov
into
xor
inc
xchg
int3
int3
sub
xor
add
outsb
sub
jb
jno
mov
pop
inc
ljmp
jbe
ljmp
ljmp
mov
jge
sbb
mov
in
or
inc
sub
cli
and
nop
leave
push
adc
in
shl
cmp
dec
ss
out
pushf
xor
or
cmpsl
sbb
inc
or
in
xor
sub
outsb
adc
loope
lods
mov
out
addl
sub
jnp
or
dec
cmpsl
xchg
repnz
fidivs
cmp
test
fwait
mov
pop
lds
sub
xchg
push
and
arpl
mov
imull
and
shrb
scas
adc
inc
push
mov
rorb
sbb
xchg
into
jnp
cmp
mov
adcl
sub
push
push
or
cwtl
dec
add
call
jl
jns
clc
jne
fldenv
in
sbb
mov
adc
js
das
movsl
lret
lret
lcall
aaa
mov
sbb
cmp
les
cmpsb
jle
cmpsb
adc
scas
ret
or
pop
popf
jnp
cmp
mov
scas
jge
pop
xchg
filds
mov
aas
add
sbb
subb
scas
push
sub
mov
inc
cmp
cltd
dec
sub
sub
pop
pop
stos
insb
push
jmp
stc
rcrl
jg
popf
mov
or
cmp
les
dec
add
jno
iret
popf
mov
mov
inc
inc
xor
inc
insl
push
mov
mov
jmp
neg
dec
jl
sbb
adc
xchg
dec
ljmp
test
imulb
imull
cmpsb
add
add
mov
or
mov
inc
mov
sbbb
add
and
push
sub
ret
aam
mov
ret
sarb
xor
push
xchg
adc
push
das
cli
cwtd
jns
cld
stc
insl
out
push
daa
arpl
ret
jns
and
cmp
cli
leave
mov
lods
lahf
test
jnp
mov
dec
pushf
jae
jne
adc
mov
push
adc
and
cld
or
aad
sarl
add
sub
aaa
xor
xchg
pop
inc
mov
xorl
cmp
push
add
mov
and
xchg
sbb
inc
out
jnp
mov
int
mov
lock
test
sub
lret
das
jg
out
out
push
in
inc
pusha
pop
out
push
adc
xor
xor
inc
insb
je
bound
inc
cmp
lahf
setbe
xchg
adc
cmp
pusha
sub
cld
cli
int3
rcll
lret
and
and
lock
mov
out
mov
dec
jns
imul
cmp
mov
movl
sbb
pusha
aad
push
fidivl
popa
mov
push
adc
clc
rcrb
pop
sub
jmp
push
les
fbstp
outsb
aas
add
xor
add
adc
sub
xor
shlb
mov
add
lds
ret
mov
mov
sti
jge
iret
sub
jmp
sub
les
mov
iret
inc
ds
ja
scas
mov
or
or
outsl
push
test
fcmovnb
push
add
sahf
jns
push
ja
mov
lods
cs
out
and
int
das
shlb
psrld
aad
pop
push
or
mov
movsb
add
adc
and
rclb
adc
sub
decb
sbb
sub
shlb
into
mov
out
sbb
push
and
out
xchg
shl
lahf
hlt
outsl
aam
dec
fs
outsb
call
pop
inc
clc
or
or
push
xchg
pop
popf
mov
dec
sti
imul
ret
cli
xchg
scas
or
push
lds
fucomi
mov
add
mov
sbb
popf
dec
cmpsl
push
jnp
add
pop
jo
mov
aas
xor
std
mov
js
loop
in
fimuls
mov
lret
popf
mov
sub
je
mov
iret
jae
rclb
xchg
mov
aas
adc
dec
jnp
popa
dec
loope
mov
shrb
push
je
add
inc
add
aad
jg
lret
xchg
pop
cmpsb
mov
push
sub
xor
xor
stc
pop
jo
fwait
inc
cmp
sbb
test
sahf
push
and
or
int3
insl
or
and
ret
mov
sub
sub
scas
jp
cmpsl
pop
or
dec
insl
push
js
imul
xchg
imul
push
loop
cmc
and
mov
inc
add
dec
jo
push
sub
jecxz
aad
xlat
add
fsin
dec
dec
or
fsts
mov
push
test
loopne
jecxz
adc
clc
loop
loopne
frstor
pop
sub
jp
sbb
lcall
das
addl
xchg
mov
mov
or
lret
mov
jg
stos
test
push
xchg
xchg
clc
inc
int3
adc
mov
in
cs
mov
mov
mov
in
push
push
xchg
mov
sub
inc
inc
push
inc
and
push
cmp
adc
mov
ret
sarb
dec
xor
sbb
jo
mov
sar
fwait
icebp
repz
cmp
inc
jge
repz
nop
hlt
and
mov
mov
push
cld
adc
scas
cmp
fadd
and
mov
sub
sub
fcomi
repnz
mov
jle
jecxz
pop
dec
lods
ret
mov
dec
sub
mov
mov
push
dec
jbe
cmp
dec
stc
insb
or
outsl
lock
adc
fcmovb
sti
cmc
push
add
shrb
or
decl
shrl
je
rorb
lea
pusha
outsb
fidivs
jo
push
jnp
dec
xor
rcr
inc
lock
cmp
dec
rcll
pop
cli
test
and
jb
stc
sbb
or
sbb
xchg
mov
cltd
int
adcl
jle
das
lcall
mov
xchg
scas
mov
or
xchg
scas
scas
pop
mov
int3
dec
int3
cmp
cmpsb
mov
and
adc
adc
xchg
sub
inc
fcomps
jns
and
stos
mov
outsl
pop
bound
and
mov
repnz
ret
loopne
mov
xchg
mov
aas
aad
inc
shlb
leave
pop
dec
push
loope
inc
insb
bnd
mov
cmp
ss
mov
pop
jmp
aas
out
mov
xchg
adc
and
cmp
lahf
cld
in
and
js
ror
insb
rolb
cld
xor
addr16
fcoml
cli
sub
push
fcmove
mov
dec
mov
mov
mov
lock
adc
loopne
lahf
sub
popf
xchg
ds
les
mov
inc
cmpsb
bound
ss
mov
fnstcw
iret
rorl
aas
and
jl
das
inc
sti
shrb
push
out
and
icebp
sbb
fsubs
jl
inc
pop
inc
mov
cli
outsb
arpl
int3
xchg
mov
iret
insb
cmpsl
fdivs
imul
xchg
lcall
adc
sub
mov
or
mov
int3
out
mov
movsl
fsts
cmpxchg
sbb
jmp
fwait
mov
cmp
fnsave
test
sbb
jmp
dec
shll
mov
data16
mov
mov
push
fdivrp
mov
push
cli
fsubrl
mov
in
into
dec
popf
mov
aam
or
js
aam
dec
cmp
gs
adc
mov
mov
adc
or
xor
fucom
cmp
shll
jp
les
push
and
mov
mov
in
cmc
or
mov
mov
loope
ret
pushw
adc
mov
stos
xchg
mov
pop
jecxz
cmp
sub
out
andl
cs
popa
mov
dec
jbe
popf
inc
ja
dec
fstpl
xor
inc
push
inc
xor
fstl
xchg
clc
cld
mov
mov
inc
jecxz
test
cli
imulb
iret
insb
repnz
fiaddl
push
and
test
xchg
mov
mov
incl
mov
popa
xor
aas
push
push
jle
and
add
jmp
dec
cmp
hlt
and
lds
aad
dec
out
cmc
cwtl
jg
out
push
cmp
add
pop
push
shr
into
rclb
push
das
popa
iret
add
mov
mov
adc
mov
adc
push
mov
xor
pop
movb
lock
lret
sub
clc
movsl
ja
fs
jecxz
xchg
pusha
fisttpl
jno
xor
mov
cltd
xchg
pop
stc
pop
jbe
dec
sbb
and
popf
fxch
mov
loopne
enter
adc
shr
adc
inc
mov
adc
repnz
pop
dec
cmp
xlat
cmp
mov
loopne
lock
outsb
inc
dec
pop
pop
or
pop
loope
adc
or
paddw
xchg
mov
add
loope
cld
mov
and
mov
bound
imul
ret
pop
jbe
in
xlat
cmpsl
mov
mov
xlat
mov
testl
push
sbb
xchg
mov
cmp
in
cli
test
sub
test
fwait
loopne
add
mov
pusha
aam
addr16
fnstcw
jge
mov
cmp
push
sub
inc
dec
jmp
mov
xchg
clc
call
push
es
xor
lds
fmuls
sub
jmp
insl
es
sbb
jmp
mov
cmpsb
outsl
mov
sbb
mov
cmpsb
imul
sbb
and
push
dec
in
xchg
xchg
scas
add
iret
mov
sbb
push
dec
int3
push
cmpsl
mov
cmp
mov
jecxz
push
js
enter
xor
stos
shlb
xor
push
xor
jmp
jl
pop
pop
sbb
mov
outsl
les
mov
call
fwait
lret
lods
rorb
fistpll
dec
or
mov
jbe
je
xchg
push
mov
sahf
mov
out
add
rclb
outsb
push
ret
sub
jg
nop
cmpsl
mov
sub
jle
cmp
jb
dec
je
pop
jbe
xor
and
dec
xor
jb
xchg
push
or
push
xor
jg
scas
int
aad
xor
icebp
mov
pop
add
sti
repz
lods
in
xlat
gs
in
sahf
in
pop
push
ljmp
inc
dec
jo
push
jg
addr16
loop,pn
and
mov
xchg
mov
orb
lods
add
or
pop
mov
cmp
dec
lret
mov
cmp
ficoml
fists
fwait
movsl
imul
jle
inc
and
jns
lea
inc
xchg
aam
inc
icebp
dec
mov
mov
adc
into
or
lds
lahf
xor
lret
icebp
data16
out
cmp
mov
jle
ror
xchg
rorb
jne
mov
test
pop
sbb
scas
cmp
mov
popf
insb
inc
mov
adc
js
cmp
gs
xor
ja
loope
test
fwait
cmpsl
cld
or
push
push
sbb
fmull
jle
adc
pop
cmpsl
dec
ljmp
push
mov
and
fs
xor
mov
and
mov
add
js
popa
pusha
sbb
enter
sbb
scas
fistl
add
mov
sub
lahf
push
stos
inc
pcmpgtb
xor
stos
or
iret
pop
vpshlq
fwait
jmp
adc
or
cwtl
adc
xor
js
dec
aad
fsubp
aam
int
jns
faddl
mov
push
push
xchg
mov
dec
insl
fistps
insb
add
insl
lds
sub
dec
popf
ret
sub
sbb
sbb
repz
pop
sub
xor
dec
xor
ja
test
push
lea
data16
insl
daa
dec
test
add
fistpl
movsl
imulb
clc
rcll
in
addr16
jp
mov
lds
pushf
rclb
mov
outsl
add
mov
mov
jge
pop
mov
adc
push
xor
inc
inc
jecxz
lret
dec
fmuls
or
mov
xchg
leave
or
movsb
icebp
adc
mov
mov
mov
lods
mov
dec
les
sbb
push
aam
loop
or
pop
pushl
or
push
and
add
es
inc
lret
mov
add
imul
ja
push
shrb
out
xor
imul
mov
dec
pushf
in
mov
stos
inc
ret
jmp
and
dec
fisttpl
ja
push
pop
cmp
inc
push
icebp
in
xchg
xchg
add
inc
add
and
test
push
fadds
aas
inc
inc
lret
movb
xor
sbb
lea
xchg
cld
ffree
hlt
mov
mov
mov
loop
lods
xor
inc
push
mov
cwtl
outsl
cmp
out
mov
xchg
adc
dec
and
sub
inc
outsb
or
add
dec
pusha
cmp
or
call
divb
pusha
ljmp
jecxz
je
push
mov
lods
popf
sub
jmp
loopne
stc
scas
hlt
lahf
mov
mov
popf
mov
mov
xchg
and
test
out
les
test
pop
ja
sub
hlt
mov
jbe
xor
int3
insb
dec
popf
jns
pop
ljmp
push
nop
inc
das
insl
mov
push
lea
xlat
jecxz
pop
xchg
and
out
mov
das
test
daa
mov
push
jecxz
std
sub
xor
mov
ja
push
inc
movsb
lcall
pop
sbb
popf
mov
and
and
leave
mov
mov
mov
fists
cmpsl
or
roll
xor
cwtl
sbb
loope
push
stos
adc
and
cli
fldt
stos
shl
sub
mov
mov
das
in
ds
les
mov
pushf
lea
scas
cmpsb
and
xchg
push
loop
push
repz
dec
sbb
icebp
cwtl
and
ss
push
nop
sbb
pop
mov
mov
fwait
lds
mov
int3
int
std
jo
test
and
xor
mov
in
mov
lea
je
sarl
test
xchg
call
rcrl
aad
mov
ss
inc
enter
adc
fnstcw
jmp
mov
mov
lret
cltd
jae
popa
adc
lods
dec
leave
jns
xor
fildll
lret
sub
inc
cltd
pop
lret
sahf
iret
mov
cmpsb
in
fldl
movsb
fmulp
ss
aad
pop
in
sub
add
and
iret
jnp
pop
xor
jecxz
xor
push
sub
enter
adc
cmp
push
push
xchg
shrb
jbe
cmp
xchg
stos
lret
mov
push
int
sti
ja
in
xchg
push
loope,pn
sub
mov
fwait
loopne
mov
xchg
add
pmaddwd
loop
repz
dec
jmp
mov
cli
push
cmp
aaa
inc
repz
test
fistps
inc
sub
sbb
dec
ror
leave
insb
push
add
mov
sub
push
inc
xor
andb
lgs
jae
sub
adc
movsb
xor
push
pop
out
push
cmp
dec
inc
int3
jl
mov
pop
dec
hlt
mov
aad
cmp
cld
mov
push
dec
popf
arpl
aas
xor
scas
mov
outsb
cmp
add
ss
dec
xor
jns
ja
insl
std
sbb
pop
std
jns
cmp
inc
test
xchg
add
or
dec
fsub
adc
stos
mov
lods
mov
std
mov
sub
mov
aaa
add
ja
mov
push
lea
stos
mov
loope
gs
int3
mov
sbb
data16
adc
xor
fs
jne
rcr
lret
or
nop
in
push
jl
push
aas
push
mov
dec
adc
cs
js
add
mov
xor
divl
inc
ljmp
or
mov
pop
pop
xor
outsl
jge
aas
mov
lods
xchg
xor
sbb
and
sahf
pop
mov
test
xor
sub
xor
mov
imul
sub
bound
cmp
es
inc
mov
push
push
mov
repz
and
jp
add
fnsave
lds
cwtl
add
cld
mov
shl
mov
jp
inc
mov
cltd
push
movsl
adc
aaa
cmp
push
les
dec
add
cmp
mov
xor
add
xchg
sbb
ret
addr16
mov
pushf
inc
mov
repz
or
or
mov
push
test
add
in
nop
aas
cmpl
in
pop
or
mov
loope
adc
mov
jge
or
xor
cli
push
std
cs
scas
inc
adc
movsb
pop
seto
jae
jl
sub
push
jo
shl
and
lods
mov
xchg
add
fsubrs
rcll
inc
jmp
fwait
popa
jecxz
mov
jg
jne
popa
xorl
adc
push
repz
xor
stos
shrb
xchg
adcb
mov
loop
cmp
add
cmpsl
gs
movsl
lds
sbb
arpl
pop
xor
stc
sub
add
int3
outsl
pop
arpl
jne
lcall
sbb
xlat
adc
addr16
lock
inc
jne
fsubl
pop
cmp
enter
lock
mov
push
xchg
es
clc
inc
xchg
adc
lea
xor
sbb
pop
fs
mov
out
iret
xchg
push
data16
arpl
and
insb
push
stos
cld
lahf
lods
push
lds
sbb
dec
xchg
jp
pop
pop
shrl
bound
pop
cmp
dec
mov
dec
shll
sub
cmpsb
sub
lods
hlt
lea
js
es
fidivrl
and
jmp
mov
ds
stos
mov
jmp
lods
cmp
clc
je
jl
cmp
adc
daa
scas
mov
pop
lods
mov
jle
jnp
jae
or
sub
mov
jecxz
sbb
jnp
sbb
xor
push
jnp
xor
add
add
mov
lods
mov
or
pop
cmp
adc
nop
xchg
push
or
cwtl
pop
xor
icebp
jl
dec
out
and
push
daa
gs
xchg
in
xchg
push
mov
sahf
mov
sbb
jb
jecxz
add
jae
std
daa
repz
inc
inc
pushf
push
out
pop
pop
dec
lret
mov
pushf
ljmp
jnp
pusha
and
loope
jge
mov
sarl
xchg
sub
out
ds
mov
rcrb
scas
ret
lods
cmc
scas
inc
sub
imul
stos
pop
fcom
mov
mov
test
inc
insl
enter
bound
or
pusha
ds
xchg
adc
mov
mov
inc
mov
aad
call
stos
movsb
cld
cmp
imul
pop
faddl
dec
xchg
fisubrs
and
jbe
cli
or
ror
ret
inc
dec
and
lods
movsl
cltd
js
notb
and
ljmp
jle
es
pushf
push
cmp
fdivl
cmc
icebp
jae
mov
test
shrl
pminub
cmpl
or
out
sbb
mov
insb
lea
dec
call
gs
xor
mov
and
inc
sbb
push
mov
fdivrs
lods
test
xor
jle
aaa
push
mov
sbb
adc
cmp
pop
jnp
out
mov
sub
jecxz
push
aam
jb
jmp
jbe
stos
fcompl
pop
and
add
pop
in
sbb
mov
jle
aam
jl
mov
jecxz
cmpsl
loope
stos
bound
push
pop
inc
cmp
jne
or
cmp
leave
pop
js
push
add
in
cli
aam
mov
mov
and
inc
xor
sbb
sbb
stos
iret
test
cli
mov
push
aaa
cmp
jb
xchg
push
dec
pop
repz
loop
mov
dec
mov
jns
es
pop
mov
leave
out
insb
out
dec
orl
rolb
mov
inc
int
or
in
shll
xor
jae
std
faddl
inc
sbb
mov
test
inc
popf
add
mov
xchg
cmp
nop
orl
into
xor
mov
inc
adc
or
push
repnz
push
call
loope
adc
iret
rorl
jnp
or
rorb
cmp
rorl
in
dec
cmp
sub
dec
in
mov
es
cmp
jne
and
lahf
jecxz
xchg
mov
loope
scas
in
int
push
in
das
fldt
mov
mov
jl,pn
sbb
hlt
hlt
repnz
icebp
pushf
idiv
testb
shlb
lods
js
aas
jo
mov
sbb
jo
outsl
insb
xchg
dec
sbb
add
shrl
jp
iret
test
push
dec
lret
pop
inc
sbb
pop
cmp
cmp
dec
ljmp
xchg
lret
fs
mov
imul
in
xchg
sub
mov
dec
mov
mov
daa
xchg
movsb
rcl
pop
aam
push
xchg
cli
mov
pop
pop
loop,pn
fnstcw
lret
hlt
ljmp
mov
aaa
dec
mov
iret
fisubrl
xchg
dec
stc
test
or
dec
cmp
aaa
mov
push
dec
mov
cmc
stos
bound
mov
push
inc
outsb
or
rol
out
mov
jmp
lock
mov
mov
mov
fstp
outsb
pop
xchg
xor
mov
mov
push
add
cmp
data16
out
inc
pop
subb
push
add
je
hlt
mov
dec
mov
mov
fcmove
or
ss
adc
mov
jne
or
xor
aam
les
frstor
push
or
add
xchg
dec
inc
arpl
inc
inc
mov
fsts
notl
dec
adc
dec
enter
nop
xor
xor
inc
jl
cmpsl
fildll
daa
add
outsb
add
lea
dec
out
xchg
cmp
test
or
pop
inc
push
xchg
cmp
int3
ffree
xor
std
adc
aaa
jge
in
movsb
add
cmp
outsw
inc
repz
and
mov
insl
pop
cli
mov
aas
xchg
fisubrl
in
dec
push
jae
jge
push
adc
je
cmp
shll
push
rorl
pop
in
sub
push
mov
xor
lods
shll
jne
mov
dec
and
shr
jmp
lock
outsl
mov
out
out
shrb
mov
push
xchg
jge
cs
nop
out
cmpsb
test
insb
mov
pop
enter
sub
pop
jmp
pop
fs
jae
shll
xlat
addr16
xchg
fcoml
push
cmpsb
mov
aaa
fidivrs
cli
cli
xor
push
or
xor
popa
and
pusha
stos
dec
pop
insb
in
fdivl
shlb
je
xor
xchg
movsl
push
or
mov
and
xchg
loop
push
push
enter
int
mov
mov
cmp
jbe
or
call
add
lods
movl
mov
adc
add
fs
imul
mov
loopne
lret
xchg
imul
or
dec
push
or
cld
dec
add
sbb
mov
cmpsb
arpl
add
leave
cmp
sub
jp
out
cmp
and
mov
cmc
xchg
mov
add
sub
pop
jo
cmc
add
xchg
xchg
pop
aaa
leave
cmp
ja
xor
xchg
push
daa
xchg
lods
push
and
jmp
inc
xchg
jecxz
enter
mov
xor
xchg
mov
outsb
jge
int
js
dec
icebp
clc
mov
test
adc
test
imul
push
mov
addl
lods
std
xor
jnp
imul
push
shl
jmp
inc
mov
in
xlat
lods
dec
insb
adc
inc
and
bound
lret
cmp
sub
cmp
fdivl
fimuls
cli
popa
lods
adc
jg
mov
pop
mov
jbe
mov
lret
mov
sbb
shl
out
mov
mov
aad
dec
je
pop
call
adc
push
repz
insb
xchg
cltd
es
jb
or
adc
dec
mov
mov
out
dec
xchg
data16
mov
rorb
cmpsl
inc
test
pop
pop
mov
add
inc
iret
push
pop
repnz
stos
inc
push
imul
jl
mov
mov
sahf
or
cmc
push
icebp
popf
jb
lods
mov
push
inc
filds
jnp
jb
orl
and
jbe
pop
loop
daa
cwtl
cwtl
cld
jns
pop
pop
lock
xor
xor
pushf
mov
mov
in
clc
rcl
pop
push
push
lods
pusha
add
js
jo
sub
clc
add
das
daa
jp
xchg
dec
rorb
push
pop
mov
mov
xor
ja
mov
js
sbb
outsb
outsl
mov
jnp
out
xchg
cld
xor
pushf
inc
xor
dec
lds
inc
stc
push
mov
fstpl
lea
pop
sub
loopne
inc
outsl
push
sub
mov
cmpsb
sbb
bound
pop
fadd
mov
push
xor
sub
iret
mov
movsl
jge
mov
addr16
sub
sbb
fdivrs
in
pop
xchg
pushf
vpcmpeqd
cltd
push
inc
push
sbb
mov
inc
out
fldenv
add
cmp
out
inc
mov
or
popa
les
fwait
mov
push
aad
mov
pop
cs
mov
mov
popa
ret
outsb
push
int
jmp
nop
mov
repz
mov
push
imull
stos
popa
jns
notb
mov
dec
sub
inc
in
inc
repz
scas
rclb
add
jno
iret
push
xchg
dec
hlt
mov
movsl
xor
test
push
mov
cwtl
add
jl
lret
hlt
stc
jp
or
test
in
clc
iret
add
idivl
subl
pop
inc
mov
dec
mulb
push
sbb
sub
out
jne
aas
in
mov
mov
hlt
insl
lods
hlt
loop
repnz
ficompl
subb
xchg
stos
pushf
es
lret
jnp
or
ljmp
test
inc
loop
jmp
cmpsl
stos
daa
jbe
int
hlt
jge
stos
outsb
test
adc
and
fldcw
scas
push
das
push
mov
xchg
sbb
in
xor
cmp
mov
int3
out
push
into
shrb
adc
dec
push
xchg
mov
cltd
cmc
mov
insb
fimull
sub
cwtl
push
and
sub
pop
popf
ret
jns
jle
xchg
mov
add
pop
out
pop
mov
int
shlb
jno
outsb
in
inc
sub
int3
pop
ss
dec
sbb
andb
in
xchg
xor
xchg
xchg
xor
pop
fcmove
clc
imul
mov
mov
cmp
loopne
and
sub
js
xchg
push
xchg
mov
adcl
xor
adc
orb
ds
pop
mov
mov
jne
mov
xor
mov
dec
scas
jecxz
and
das
push
dec
push
dec
pop
insb
aam
mov
sub
inc
hlt
xchg
push
sahf
je
xor
pop
fdivp
mov
ud2
and
or
mov
inc
jge
insl
mov
test
pop
mov
lcall
jns
fldt
bound
repz
addr16
cmp
pop
leave
inc
int
push
mov
es
adc
in
rcrb
insb
inc
mov
in
push
mov
loopne
sahf
push
dec
jne
lcall
or
sbb
sbb
jmp
int
mov
sub
mov
add
mov
in
outsl
sub
jge
and
lret
adc
sbb
mov
pop
js
pushf
enter
clc
dec
jge
push
jge
pusha
dec
mov
xchg
pop
xor
sti
mov
xor
sub
iret
jb
mov
xchg
mov
inc
insl
outsb
dec
fwait
jp
adc
sub
push
cmp
int
jl
adc
mov
imul
inc
fwait
jae
std
sbb
lret
and
shlb
insl
gs
or
or
inc
fisttpll
xchg
lock
mov
inc
ja
sub
orb
and
popl
xchg
sub
xchg
shr
pop
push
jmp
or
scas
mov
cld
stc
into
icebp
mov
push
and
xchg
jecxz
mov
adc
mov
repz
dec
sbb
push
jbe
sub
pop
sbb
insl
jecxz
add
int
jne
out
xlat
shll
lahf
push
inc
sub
jle
sbb
movsb
js
fcoml
sub
dec
mov
scas
aam
xor
and
push
cli
sahf
and
mov
lds
rolb
loope
pop
push
xor
mov
test
lcall
mov
daa
mov
sub
cmc
push
stos
sbb
stos
jae
push
xchg
cmp
xchg
dec
or
push
imulb
mov
cld
push
cltd
pop
clc
repz
xor
insl
xor
ficoms
pop
cmpsb
ja
subb
fs
js
into
das
insb
jb
popa
dec
je
rcr
pop
std
cwtl
dec
pop
stos
adc
out
pushf
add
jns
xor
or
adc
xorl
pop
mov
lds
inc
sub
jg
outsb
xor
fstpl
movsb
push
fldl
dec
popa
lock
pusha
out
mov
insb
and
imul
cmp
scas
cmp
push
rolb
mov
xchg
outsb
xor
lret
fstp
imul
sub
orl
jl
mov
aam
push
xlat
enter
test
sahf
insb
in
int3
dec
xchg
push
jb
imul
adc
dec
xchg
imul
jae
mov
mov
fs
xchg
sti
jg
clc
add
insl
inc
jmp
daa
dec
jbe
cmpsl
mov
mov
and
mov
shll
and
jl
mov
xor
mov
imul
xchg
data16
arpl
testb
dec
add
test
clc
pop
and
inc
pop
punpckhwd
and
or
adcl
push
movsl
xchg
and
andl
push
cmp
mov
test
sti
aaa
mov
sub
add
lcall
aam
mov
mov
scas
push
outsl
jns
jmp
testb
rcll
jns
mov
pop
outsl
lret
jns
js
cmp
or
xchg
sbb
mov
in
cld
lcall
into
dec
push
gs
fistpll
push
out
push
lret
and
popf
xchg
mov
or
pop
dec
jo
addr16
mov
pop
pop
lds
cmp
add
cmp
sub
test
pop
in
push
testb
xchg
xlat
xchg
mov
cmp
fucomip
or
xchg
inc
xchg
pop
lret
sbb
enter
and
repnz
sub
in
sub
pop
lcall
test
xchg
out
daa
adc
std
mov
clc
jnp
loopne
jl
jg
xor
out
inc
and
mov
xchg
ljmp
or
or
and
imul
cmpsl
lods
xor
movsb
popf
push
push
adc
add
jne
test
test
mov
mov
into
ja
cmc
ljmp
xchg
popf
cmc
cmp
andb
xor
sbb
inc
add
dec
pop
pop
push
cmp
mov
out
cmp
out
data16
lds
cmp
in
repnz
adc
mov
cmc
add
ljmp
inc
movl
test
inc
out
dec
jle
inc
dec
loopne
add
cmp
xor
ficomps
test
or
decl
mov
jno
call
cld
ja
push
js
mul
pop
scas
ret
in
outsl
inc
cmpsb
mov
insl
mov
mov
lea
data16
pusha
gs
dec
loop
loop
inc
inc
sub
aam
inc
repnz
fldpi
sub
mov
and
push
jg
push
xchg
xor
push
and
jl
scas
lods
jl
jmp
cmp
gs
orb
mov
sbb
jmp
xchg
mov
fs
popf
lds
cmp
pushw
push
xchg
divl
in
sub
inc
outsb
sub
mov
repnz
popa
clc
test
imul
inc
sub
mov
xchg
je
and
daa
jecxz
jecxz
mov
call
inc
pop
ja
mov
sbb
cld
jo
fs
hlt
insb
jns
leave
inc
in
add
sub
imul
cmp
std
mov
adc
rorl
ficomps
push
ficoml
lock
mov
fisubrl
ds
lcall
sti
pop
ljmp
xor
lcall
mov
imul
ja
jmp
popa
add
popf
push
push
jge
test
pop
jns
jg
clc
mov
pop
jle
lods
add
popa
jno
lahf
rorb
mov
and
shl
orl
pop
lret
inc
fidivl
xor
jae
cs
sbb
je
xor
test
addr16
outsb
mov
pop
pop
pop
jmp
lods
cwtl
jecxz
jle
lds
jno
lods
out
xchg
sarl
sbb
mov
jmp
shrb
inc
sbb
xchg
fsubr
xor
and
lret
cmp
add
pop
dec
jne
jno
incb
sbb
xchg
mov
cmp
inc
jnp
lds
pop
mov
xor
jl
xchg
xchg
pop
arpl
loopne
fwait
add
jg
sub
rcrb
and
in
mov
mov
pop
lahf
or
scas
sbb
pop
adc
in
cld
into
jmp
popf
inc
gs
dec
flds
inc
cmp
push
pop
pop
movsl
adc
lahf
loope
inc
and
inc
in
xor
pop
add
xchg
je
cmp
push
lret
dec
gs
sbb
fucomi
mov
sbb
xor
xor
xorl
in
aas
add
push
inc
mov
stos
xchg
pushl
enter
add
sub
mov
mov
ja
repz
mov
lds
into
in
cmp
arpl
adc
pop
adc
fistpl
ds
mov
jne
mov
push
ljmp
popf
push
fwait
lahf
sbbl
xchg
mov
ficoms
adc
or
and
fcmovu
stos
and
fsubl
mov
outsl
fwait
and
cmp
pushf
fists
les
sbb
mov
dec
cmp
add
inc
lcall
call
cmpsb
insb
scas
sahf
lds
cmp
pop
rcll
cld
and
dec
scas
or
adc
xlat
xor
mov
pop
pop
xchg
in
mov
stc
sbb
mov
cmpsb
mov
in
test
jno
ret
mov
rclb
adc
inc
loopne
insb
jg
stos
call
and
lods
cmp
inc
aam
lods
sub
push
lret
adc
hlt
bnd
dec
push
jns
xchg
cmpsb
loope
arpl
aad
das
lahf
adc
insl
xchg
lret
adc
movlps
jnp
sbb
push
repnz
scas
lods
add
adc
fisubrs
into
xchg
test
rolb
pop
sbb
xchg
or
add
sub
into
ret
psllq
inc
das
insl
cmpsl
movsb
bound
cmp
sti
repz
xor
pop
xlat
in
dec
mov
cmp
xor
push
mov
or
ret
or
pop
and
scas
bnd
testb
sbb
mov
leave
or
aam
xlat
jecxz
pop
mov
std
dec
sbb
cli
insb
inc
mov
jo
imul
sbb
movsl
movsl
cmp
stos
into
rorb
es
les
daa
xchg
mov
sbb
xor
decl
jne
cmp
xlat
dec
jbe
or
stc
sub
add
in
mov
dec
out
or
xlat
out
outsl
inc
pop
test
ja
cli
das
add
orl
and
cs
imul
xchg
adc
insb
pop
cwtl
out
sub
pop
movsb
in
inc
ss
cmpsb
cmp
adc
add
pop
rorl
ljmp
fiadds
insb
nop
jbe
pop
xchg
dec
cmp
adc
or
push
dec
sub
add
lret
inc
mov
fmull
test
jmp
popa
imul
test
inc
insb
arpl
jae
movsb
popa
fs
push
push
enter
jb
or
ds
cmpsl
and
inc
jo
dec
ret
sarb
push
push
scas
xor
add
imul
xor
hlt
stos
push
aas
ja
inc
mov
xchg
inc
push
add
nop
cmpsl
or
and
data16
loopne
imul
or
outsb
xchg
mov
xor
rcll
mov
outsl
aad
test
lret
sbb
test
xchg
inc
int3
movsb
les
shlb
and
js
or
jp
sub
repz
mov
lods
mov
jae
sbb
es
sub
pop
incl
call
cld
xor
cmp
pop
push
or
xor
and
cs
jp
arpl
dec
jp
pop
subb
repnz
mov
push
pushf
mov
loope
idiv
mov
adc
add
or
iret
push
andl
mov
inc
push
pop
mov
mov
sarb
jno
mov
jb
or
aad
nop
add
fsin
shl
mov
loop
sbb
push
adc
mov
mov
in
dec
sub
push
and
jnp
fwait
outsl
lds
ret
jecxz
std
mov
outsl
add
testb
mov
fiaddl
xchg
in
cmp
data16
xchg
scas
and
pusha
les
mov
addb
cmp
sbb
ret
mov
pushl
sub
addr16
cmpsb
sub
jae
mov
mov
inc
sbb
stos
cmp
cmp
jne
insl
pop
das
icebp
aam
cmp
adc
cli
xor
movsb
daa
mov
xchg
imul
push
lahf
inc
movsb
mov
pop
fidivs
into
jl
in
dec
bound
shr
aad
cmp
push
mov
cwtl
jb
and
adc
mov
jge
and
cltd
jae
sbb
dec
outsl
xorl
mov
mov
and
leave
adcb
xchg
mov
sbb
xchg
fidivrs
jmp
daa
dec
aad
pop
divb
adcl
cmp
mov
cmp
sbb
xor
xchg
popl
adc
fnstsw
or
mov
cmpsl
xor
mov
dec
jl
add
xchg
jb
lds
fidivs
shrb
or
loopne
mov
test
push
adc
adc
pop
mov
aad
add
lods
mov
push
jge
loop
cmp
xchg
xor
or
cmp
adc
xchg
sahf
arpl
into
xchg
and
xchg
lock
push
aaa
int3
es
loop
lea
cmc
xchg
jge
sub
decb
dec
xchg
subl
popf
fildll
scas
mov
rcrl
fistpll
sbb
stos
dec
and
dec
pop
sub
adc
pop
ret
test
sbb
mov
jne
dec
sub
or
dec
xchg
inc
xor
pop
sub
dec
out
sub
loope
push
loopne
aad
push
cwtl
iret
nop
loopne
nop
or
pop
outsl
aaa
lods
push
mov
push
push
jl
mov
adc
lahf
pushf
add
je
das
dec
lea
dec
xchg
fcoml
notl
add
jg
popa
cmp
sub
out
jge
mov
hlt
daa
shll
addb
icebp
nop
sbb
sbb
scas
call
mov
xchg
pop
sarb
and
push
cmp
call
das
sub
add
jae
pusha
lret
enter
mov
or
or
mov
sub
pop
sub
inc
lock
xlat
dec
and
seta
ret
and
jl
push
xchg
fistps
int
sarb
dec
jg
pop
dec
test
push
mov
mov
sahf
cmp
sbb
iret
dec
dec
pop
iret
jle
cmp
sub
cmpsb
sbb
mov
movsl
rcrb
popa
xchg
or
ja
lods
xchg
sub
cs
shll
pop
rcrl
cmp
xor
cmp
test
cmp
mov
cmpl
fcomi
scas
mov
insb
mov
jecxz
ret
negb
in
in
jle
jmp
addb
imulb
into
push
pop
sbb
mov
cld
mov
xor
adc
sub
mov
sub
jno
shll
push
shl
sbb
das
inc
lea
xchg
mov
adc
mov
dec
sbb
stos
lret
sahf
in
cmpsl
adc
rep
pop
lock
jae
adc
lahf
lods
xor
lock
or
dec
mov
icebp
int3
ljmp
test
pop
mov
jecxz
fdivrp
bound
imul
add
jbe
jns
xchg
aad
adc
jne
orb
jbe
fdivs
loop
add
scas
cmpl
lcall
mov
and
push
movsl
lods
std
pop
mov
into
call
stos
shrl
cld
pop
jae
loope
pop
ficompl
imul
cld
inc
fcompl
xchg
sub
or
and
mov
imul
xorb
int
loope
addr16
adc
xchg
ret
cld
mov
bound
loope
push
cmc
aad
or
xchg
repnz
orb
in
int
pop
pop
sub
ljmp
test
add
mov
or
cmp
ficomps
sub
je
pop
add
out
add
ficomps
add
push
rorb
leave
cmpsb
lds
or
dec
or
test
dec
notl
pop
jbe
scas
test
shrl
sub
imul
xchg
lret
cwtl
jnp
stos
mov
loope
das
jge
fucomi
cmc
lods
jl
mov
push
sub
cmp
fiaddl
call
addr16
es
xor
sti
xchg
pop
xchg
fbstp
jns
dec
cld
pop
mov
lods
inc
movsb
add
adc
sub
cmpsl
or
insb
lret
mov
scas
fstpl
mov
loope
roll
outsb
and
shlb
sub
xchg
lods
pop
bnd
loop
jge
dec
movsl
mov
loop
cmp
enter
xchg
mov
and
mov
lea
or
sbb
loopne
in
xor
lcall
jbe
mov
adc
out
xor
inc
or
adc
lods
xor
pop
stos
lods
bt
mov
outsb
scas
hlt
lds
inc
popa
inc
dec
shll
jecxz
pusha
fdivl
add
pop
xchg
jmp
jb
and
outsb
mov
mov
xor
popf
es
inc
in
aad
test
repz
out
arpl
adc
enter
ss
push
cmp
pop
aaa
dec
push
movsl
cli
popa
fs
test
popf
data16
ja
mov
dec
out
add
movsl
enter
lcall
mov
in
sub
inc
movl
fisttpl
test
cs
sbb
ss
add
fdiv
pop
jb
mov
dec
scas
outsb
call
fsubs
cltd
das
shr
inc
push
arpl
mov
mov
daa
inc
idiv
shll
inc
stos
mov
call
call
sub
outsb
sbb
xchg
fisttpl
andb
int
inc
cs
sti
mov
loopne
outsb
mov
adc
sahf
sbb
mov
sahf
add
jne
mov
std
jecxz
int3
out
push
pop
push
test
loopne
sbb
mov
ret
cmc
xlat
mov
nop
call
cli
mov
sub
jno
inc
mov
lea
idivb
cmpsb
jl
int3
xor
mov
or
aas
imul
inc
popa
test
push
sahf
in
std
daa
stos
or
loop
ja
push
xor
lods
mov
mov
mov
insl
out
xor
mov
jl
dec
and
sahf
test
dec
repz
in
xor
lret
sbb
enter
jecxz
pushf
pop
enter
sbb
sahf
jge
cmpb
pmulhw
dec
xchg
mov
cmp
lds
adc
fs
cmp
daa
vpcomb
lods
mov
fcoms
sub
int
in
je
jmp
shr
inc
nop
and
ljmp
clc
pop
or
inc
dec
stos
xor
pop
repnz
jnp
js
xchg
fdivs
scas
data16
mov
mov
jns
call
arpl
mov
sbb
add
or
sbb
sbb
push
mov
add
idiv
pop
cmp
les
mov
jae
aas
push
sahf
jbe
mov
mov
ja
sub
out
aam
xchg
out
jl
or
push
das
es
xlat
daa
dec
aad
mov
push
xlat
jae
adc
push
fsts
ja
cltd
dec
fwait
int
loopne
movsb
mov
pop
xor
lods
jmp
popa
jge
lds
cmp
inc
push
pop
lods
xor
dec
add
pop
and
shrl
or
jmp
bound
jecxz
jl
mov
jno
cmp
push
stc
fisubrs
or
lock
push
cmp
push
test
xor
data16
inc
loop
arpl
rcl
mov
cs
movsl
divl
cmpsb
test
imul
cltd
sub
push
cld
cli
leave
call
outsb
aaa
jg
inc
and
movsl
pop
inc
sub
fnstenv
fisttpll
sti
and
push
movsb
inc
cmp
jae
cmp
lds
sarl
js
orl
mov
incb
pop
addr16
adc
mov
ljmp
xchg
ja
je
stos
out
aas
xchg
jno
lahf
dec
aaa
cmc
push
mov
ret
shrb
push
add
adc
mov
pop
pop
mov
mov
xchg
test
adc
sub
std
es
loop
or
lcall
add
or
cs
cmp
xchg
mov
daa
out
mov
or
pusha
cmp
pop
cld
decb
pop
cmp
jns
push
mov
in
sbb
push
aad
xchg
gs
sub
push
loope
dec
daa
fstps
js
inc
xor
push
or
cltd
enter
mov
lahf
push
or
int
hlt
inc
inc
into
push
push
pop
aad
xor
mov
popl
inc
xchg
scas
adc
fdivr
test
bound
ss
push
leave
dec
and
jp
jecxz
sub
push
out
pop
jb
jp
dec
xchg
fcomps
and
mov
mov
in
sub
notl
nop
jmp
mov
popa
pop
dec
or
lahf
stc
shr
das
sbb
sbb
cmpsl
jnp
or
cmp
fmul
movsb
test
add
cltd
fnstsw
stos
xor
add
jmp
inc
daa
fmull
js
xor
in
pop
mov
scas
lret
rorl
pusha
inc
push
out
pop
jae
dec
out
and
in
mov
push
add
cltd
fidivrl
inc
das
cmpsl
lock
push
xorb
xchg
mov
into
adc
adc
jle
xchg
jp
shrl
lret
push
mov
out
insb
cmp
xorl
sbb
cmp
dec
pop
test
inc
ljmp
add
jb
xchg
scas
push
sub
cli
push
fists
sbb
pop
or
mov
mov
in
out
scas
jne
add
push
rcrb
jmp
repnz
inc
mov
hlt
mov
dec
push
dec
insb
das
outsb
inc
repnz
incl
std
xchg
cltd
push
or
out
mov
aam
aad
xchg
adc
stos
hlt
in
mov
jo
notb
clc
jne
jnp
inc
test
int3
adc
jnp
jbe
push
sub
jecxz
ffree
loopne
mov
xchg
jmp
inc
cltd
jo
in
mov
sbb
jnp
adc
add
mov
lock
sti
mov
ljmp
cltd
ja
mov
pop
gs
mov
or
scas
cmpsl
repz
cli
or
ret
ss
movl
xor
mov
mov
dec
jg
fcoms
fisttps
xchg
cwtl
xchg
mov
dec
and
cld
xor
and
or
xor
xor
jle
sub
fdivrs
pop
dec
jo
rcll
test
js
jns
or
int3
lods
add
mov
xor
gs
sub
stos
mov
push
mov
mov
dec
push
lock
mov
stc
pop
loop
std
fidivl
loope
fidivs
adc
xchg
mov
mov
inc
rcll
mov
inc
loop
jge
lahf
movsb
mov
jecxz
xorb
insl
mov
out
mov
bound
orl
dec
sub
test
sti
test
xchg
stos
ja
rcr
mov
xchg
inc
xor
outsb
push
adc
push
out
sbb
mov
mov
cmpb
jg
add
cs
jmp
push
and
dec
sub
dec
inc
push
insb
dec
orl
das
sub
mov
pop
push
imul
gs
jle
cltd
outsl
add
lods
pop
icebp
out
test
or
loope
push
add
mov
cmpsl
mov
je
push
xchg
leave
dec
mov
movsl
and
mov
mov
sub
mov
bound
pop
lods
out
push
xor
jmp
xlat
cld
and
mov
and
mov
ret
mov
std
fwait
in
scas
inc
mov
mov
pop
mov
dec
mov
or
mov
push
push
jo
push
cwtl
push
add
push
ss
cld
xchg
fcoms
mov
clc
fs
sub
xchg
dec
pop
sbb
icebp
fmull
lret
int3
cmpsb
insl
in
dec
cwtl
sbb
movsb
js
inc
shrl
jle
adc
cmp
ljmp
lret
pop
hlt
inc
insl
js
test
pop
push
dec
cmp
mov
cmp
nop
outsb
sbb
pop
pop
andl
jg
movsb
test
push
push
push
cmpsb
not
fnstenv
jmp
ret
out
inc
jmp
lret
push
xor
shlb
icebp
sub
push
sbb
ja
and
lcall
mov
inc
ret
sahf
or
jb
test
leave
inc
or
out
bts
push
push
mov
std
shr
sub
stos
pop
xorl
or
stc
sbb
int
scas
fmuls
xorb
cmp
js
dec
insb
pusha
pushf
pop
rorb
decl
mov
jp
adc
xchg
and
xchg
ficomps
sbb
sub
xchg
icebp
repnz
mov
fcmovu
pop
pop
out
addb
cld
mov
imull
adc
outsb
or
fisubl
adc
lea
cmp
sub
fwait
sbb
cmpb
push
mov
cmp
jge
push
dec
jge
mov
adc
inc
xchg
jle
adc
lret
rcrl
mov
add
bound
xchg
push
adc
mov
xor
ljmp
in
pop
popa
aas
or
xchg
push
test
repnz
cmp
push
xor
negb
lret
sub
sbb
in
mov
pop
incb
sub
js
jae
mov
dec
mov
mov
mov
cli
cmp
or
and
loop
jg
push
movsb
cmp
and
lds
cmp
in
popa
js
and
mov
out
repz
push
lods
aas
cs
mov
mov
jns
or
adc
fcomps
xchg
and
fldl
out
xor
mov
mov
call
xor
sti
mov
cmpsb
loop
lods
frstor
ret
jae
and
dec
pcmpeqw
popa
mov
xor
mov
addr16
cld
nop
fbld
int3
mov
lock
outsl
xor
in
hlt
jne
call
ficoms
cld
or
dec
adc
loopne
mov
jmp
jnp
xchg
adc
xor
sbb
out
xchg
lods
mov
mov
ret
push
repz
loopne
cmpsl
dec
mov
mov
add
sub
xchg
daa
push
movsl
pop
sbb
jmp
mov
mov
scas
or
adcb
push
or
int
das
push
shr
cmc
in
aaa
sub
sbb
popa
sub
push
push
mov
and
mov
dec
jae
cmpsb
push
das
fs
cld
mov
pop
jb
or
enter
ret
loope
push
inc
in
loopne
hlt
in
xchg
mov
mov
test
jl
pushf
int
jns
sub
ja
sub
popa
test
inc
sbb
aam
inc
and
pop
mov
outsb
sbb
adc
jae
sbb
or
push
fldcw
pop
ljmp
lds
into
xlat
decb
or
dec
ljmp
cmp
push
adc
sbb
mov
testb
cmp
sub
sub
mov
shll
push
inc
xchg
rcrb
cltd
sub
xor
test
ss
lcall
inc
fwait
add
or
adc
je
adc
cmpb
pop
push
mov
and
mov
lea
pushf
sub
add
jg
jmp
mov
std
jne
test
mov
cmp
les
aam
aaa
sbb
push
inc
movsb
mov
add
mov
stc
cmc
xchg
sbb
imul
add
ss
xchg
adc
mov
sbb
imul
xchg
rolb
cmpsl
sbb
jl
and
stos
cmp
xor
push
pop
cmp
pusha
cmpl
outsl
clc
popf
test
insb
sub
inc
popf
mov
xchg
ret
push
arpl
pop
subb
cmp
popf
inc
clc
adc
ffreep
cmp
xchg
push
inc
add
imul
in
sbb
mov
and
or
jnp
pop
shlb
cmp
fistpl
cmpsb
jecxz
or
mov
imul
rorb
pusha
aaa
leave
dec
xchg
sti
test
push
out
lret
inc
xor
xchg
adc
outsb
sbb
push
test
adc
test
sbb
aad
mov
push
and
or
sbb
into
xor
loopne
cmpsb
jmp
ja
loop
arpl
iret
bound
cmp
mov
outsb
out
mov
adc
cmp
mov
aam
push
in
mov
out
push
add
popf
pop
push
sub
scas
jne
je
loop
addb
cmpsb
sbb
mov
mov
cmc
out
xor
and
push
fimull
test
push
mov
push
push
jle
repz
outsb
xor
fisttpl
mov
adc
icebp
pop
cmpsl
dec
in
lret
adc
mov
xchg
pop
mov
mov
dec
lods
leave
mov
pop
sti
ret
push
add
inc
pusha
xlat
popa
adc
jmp
pop
jns
cmc
rcrl
adc
sub
jae
push
jo
mov
mov
push
lcall
jle
adcl
pusha
xchg
clc
call
jg
out
inc
insb
mov
sti
mov
out
sbb
xor
imul
xchg
mov
adc
in
sbb
scas
xor
lcall
xchg
pop
xchg
pop
add
pop
sbb
out
xor
test
fadd
or
push
sar
orb
sbb
xor
jbe
or
adc
inc
mov
out
pop
and
sbb
fwait
add
ljmp
jl
repnz
inc
repnz
ljmp
sub
and
mov
xchg
push
enter
dec
xchg
dec
and
in
repz
test
mov
ret
mov
mov
je
nop
inc
mov
iret
scas
mov
xor
lods
adcb
mov
jo
adc
call
inc
xchg
pop
cmp
push
jge
out
jg
jle
cld
dec
jle
push
in
inc
jbe
mov
iret
loop
leave
fisttpl
mov
push
push
enter
inc
rorl
divl
inc
dec
ljmp
lock
or
mov
mov
ljmp
ret
rcrl
and
mov
je
sub
out
pushf
ds
pop
jmp
adc
mov
iret
mov
mov
orb
sub
push
sbb
les
out
popa
int3
jae
loope
jne
mov
stc
inc
jge
daa
mov
inc
dec
adc
scas
loope
test
push
mov
xchg
pop
std
aad
movsb
mov
jo
cltd
push
add
sub
adc
arpl
sahf
sbbl
mov
es
aaa
jle
fisubl
xor
ljmp
jne
aaa
loope
push
push
loope
cmp
cmp
ja
push
jno
std
mov
lea
mov
jmp
mov
cmp
mov
adc
loopne
in
push
das
into
fisttpll
mulb
enter
in
xor
outsb
jl
add
stos
addl
push
mov
ss
push
xchg
jmp
add
push
arpl
mov
sahf
add
mov
ficompl
or
push
jmp
int3
cmp
mov
sub
jg
jbe
lret
jle
in
out
repnz
lods
sbb
mov
push
pop
xchg
jb
jl
or
jge
cld
xchg
lock
cld
add
mov
inc
add
rorl
shrb
ds
pop
adcb
pop
stos
lods
adc
pusha
fadd
adc
mov
aaa
ret
movsb
in
mov
dec
rcr
in
or
leave
mov
movsl
sub
lret
xchg
fildll
lea
xor
scas
lods
xchg
jns
outsb
cmp
aaa
xchg
movsb
jg
dec
xor
aad
dec
fildll
in
repz
loop
dec
into
shrl
inc
or
adc
mov
rorb
add
pop
lcall
dec
sar
call
mov
push
sbb
dec
xchg
xchg
jmp
inc
sub
imul
cmp
adc
aaa
xor
mov
cmp
js
rorb
aad
xchg
fstpt
test
bound
pop
mov
loopne
add
push
cmp
pop
fstpl
loope
pop
push
push
dec
pop
mov
ret
mov
aam
jl
mov
jmp
mov
icebp
stc
xor
cmc
aaa
jge
jmp
cmp
rcrb
sub
and
js
sti
jns
loope
push
jg
xchg
cmp
inc
cmp
cwtl
mov
xor
pushf
aas
adc
and
es
push
leave
mov
dec
jo
loope
sub
pop
push
addl
fcoml
cmp
pop
push
ret
jp
negl
jne
mov
ja
add
lahf
jb
and
test
pop
mulb
push
insl
sbb
pop
dec
add
insb
mov
sub
mov
rorl
and
fdivl
outsl
inc
mov
cmp
pop
inc
dec
ljmp
hlt
in
xorb
pop
fcoml
in
lods
and
push
lcall
fs
add
pushf
bound
mov
adc
scas
push
gs
jg
fistpll
int
inc
sub
sub
cld
std
sbb
leave
xlat
mov
mov
mov
scas
add
push
push
or
jmp
jp
aam
hlt
aas
xor
lret
cmc
mov
mov
sbb
mov
hlt
std
push
out
cmp
or
aas
dec
fstpt
outsb
xchg
dec
add
aaa
les
inc
dec
fnsave
and
lret
sbb
data16
cmp
mov
push
add
shlb
and
in
aam
add
arpl
in
xor
push
jne
mov
xlat
hlt
roll
mov
fnstcw
ljmp
xor
repz
or
js
out
jg
xchg
inc
xor
xor
aam
dec
test
inc
xor
jge
into
mov
ds
stos
xchg
push
dec
lcall
xchg
push
jo
xchg
cs
pop
test
int
lcall
mov
mov
fisttps
into
add
lretw
add
lret
outsb
andb
jmp
daa
pop
std
xor
mov
sbb
mov
loop
test
adc
xchg
pop
aad
jb
jbe,pn
lcall
in
test
inc
dec
ret
jo
sub
xor
pop
cltd
repnz
mov
leave
and
mov
adc
roll
cli
or
adc
cmp
aam
out
lods
dec
out
mov
adc
xor
inc
jge
sub
out
push
std
xchg
jnp
imul
hlt
cwtl
push
ja
lds
xor
and
icebp
call
add
adc
mov
daa
cmp
and
cmpl
cmpsl
fstl
je
pop
in
inc
adc
js
and
data16
jae
test
jg
cmp
incl
inc
mov
mov
mov
xchg
mov
jecxz
sti
cmp
mov
xor
mov
testb
sbb
jp
push
pop
mov
jns
push
sbb
std
lods
add
lods
sbb
clc
lret
inc
test
dec
push
js
adc
jle
jno
adc
ret
mov
das
loop
adc
jb
xorl
movsb
ds
jnp
mov
mov
in
jne
add
pusha
push
inc
fstpt
or
leave
xor
push
mov
or
popa
inc
or
stos
cmp
pop
subl
icebp
inc
lret
cmc
or
out
jle
dec
movsl
fisubrs
stos
test
and
sub
in
push
dec
inc
cmp
mov
mov
test
in
and
lret
jae,pt
jle
les
imul
mov
daa
pop
or
xlat
cs
sbb
mov
pop
mull
test
push
push
cli
in
dec
rclb
xchg
push
inc
popa
or
dec
sbb
xchg
hlt
cli
add
frstor
sub
push
jle
xchg
mov
daa
sbb
sub
int3
sti
and
cmpsb
dec
cld
inc
and
jmp
pop
test
mov
popf
fcmovbe
test
jle
aaa
mov
outsl
inc
shrb
sbb
enter
and
setl
ret
int
popa
lahf
xchg
std
faddl
in
je
jl
data16
ret
movl
sbb
mov
push
cmp
and
bound
sub
dec
cmpsl
fwait
mov
enter
shrb
pop
or
cmp
cwtl
rolb
stos
aaa
cmpsb
movb
sbb
add
aas
mov
test
xchg
adc
aam
jno
test
jp
xor
inc
dec
mov
push
arpl
cli
mov
das
mov
daa
push
int3
lcall
inc
sub
dec
bound
xchg
les
jecxz
data16
sbb
pop
mov
xor
push
std
add
out
xchg
js
push
and
sub
push
xor
push
inc
and
and
jl
jno
jle
test
push
lea
fwait
cmp
mov
cmp
in
xor
push
imul
mov
cmp
shl
repz
testb
push
nop
movsb
xor
add
add
iret
inc
ljmp
test
frstor
mov
mov
inc
in
cltd
mov
pop
loop
popf
hlt
cwtl
mov
es
push
sub
adc
repz
in
add
or
sub
push
popf
jle
or
pop
repnz
repnz
inc
xor
ds
mov
xor
aas
adc
sub
mov
or
add
mov
and
sub
mov
in
out
out
sbb
inc
ljmp
dec
inc
jp
lods
sti
lret
pop
xor
cwtl
movsl
ret
insb
mov
or
dec
test
mov
jl
mov
push
je
xchg
jnp
scas
add
sub
jae
ljmp
adc
mov
out
pop
mov
sbb
jnp,pt
lret
sbb
adc
es
inc
mov
imul
mov
pop
add
enter
addr16
cmc
pop
pop
jns
jne
sbb
inc
imul
adc
jl
push
pop
dec
rolb
and
cltd
add
shl
loop
clc
and
lock
mov
testl
bound
fwait
mull
in
mov
mov
pusha
movsl
adc
xchg
cmc
das
fsubr
shl
or
mov
mov
adc
adc
popf
adc
xlat
xchg
pop
es
ficomps
pop
xchg
daa
sti
lret
dec
cmpb
mov
push
mov
sub
cmc
insl
add
sbb
or
adc
jmp
popa
push
inc
or
iret
and
fwait
push
std
mov
cli
outsb
xlat
call
data16
dec
repz
or
mov
fnsave
inc
andb
imul
mov
push
fadd
lcall
sbb
lret
fs
into
push
add
mov
repnz
stc
adc
pop
lods
pop
jo
xchg
mov
xor
ret
pop
mov
fisubrl
test
punpcklwd
dec
clc
sbb
gs
mov
fimuls
jns
fcoml
pop
add
repz
loopne
jno
pop
mov
sarb
dec
fisttps
ja
lea
aaa
in
adc
mov
je
dec
outsb
enter
inc
sbb
xor
ljmp
addr16
pop
enter
mov
jge
inc
mov
andb
push
scas
into
scas
jg
pop
sbb
ret
sbb
sbb
or
pop
cmc
sub
rcr
push
pusha
repz
or
aas
popa
mov
dec
idivb
mov
rcrl
jne
dec
insb
inc
arpl
loopne
mov
inc
xchg
sahf
js
push
dec
jle
test
test
es
mov
mov
flds
dec
outsb
mov
jp
outsb
pushf
stc
and
push
cmp
xchg
xor
cli
sbb
or
shl
cmpsb
int3
or
hlt
ret
cwtl
push
sbbb
enter
je
shrb
xchg
hlt
loope
push
push
xor
pop
test
mov
push
lcall
out
cmp
lahf
icebp
pop
push
pop
insl
aaa
xchg
adc
inc
sub
cltd
insl
add
sub
subl
fwait
mov
pop
ror
xchg
and
daa
add
mov
sbb
or
xchg
shll
ret
jo
xor
fcmovu
pop
scas
xchg
and
push
pop
lock
cmp
int3
mov
lcall
rclb
jecxz
push
sbb
lret
ret
mov
sbb
dec
outsb
fwait
mov
fwait
out
mov
xorps
aaa
dec
cmp
roll
xorl
mov
cmpsb
xchg
popa
and
int
fstpl
shl
push
imul
pop
pavgb
cmp
stc
adc
dec
adc
or
mov
fnstcw
push
sbb
lock
jg
dec
jns
mov
pop
lahf
roll
mov
mov
add
aam
rep
sub
adc
mov
jno
xchg
outsb
mov
std
push
ror
loop
gs
adc
int3
xor
mulb
out
rorb
jecxz
push
out
sbb
xchg
jmp
addr16
xor
jmp
mov
mov
xor
inc
mov
mov
mov
add
adc
and
in
pusha
xchg
scas
push
test
add
pop
xchg
pusha
mov
mov
push
mov
adc
in
iret
mov
jb
xor
bound
cmpsl
dec
pop
push
xor
pop
stos
aad
mov
test
test
inc
int3
pop
or
fwait
push
jo
daa
pusha
lcall
xorb
movsl
xor
mov
aas
lret
add
fisttpll
bswap
hlt
pop
xchg
je
or
sbb
sarl
dec
xor
xchg
adcb
dec
and
lret
or
sub
data16
pushf
sbb
mov
sub
xchg
sbb
push
ret
xchg
insb
mov
out
rep
mov
enter
push
dec
jmp
nop
pusha
es
push
push
ljmp
das
xchg
bound
push
sahf
das
int3
mov
adcb
les
xor
imul
test
hlt
aad
sbb
enter
add
test
fdivs
dec
fcoms
sti
rcll
jnp
je
out
inc
lds
shl
mov
xchg
imul
push
je
cmc
mov
dec
jo
pop
ficomps
shrb
fdiv
pop
jmp
jno
lahf
pusha
gs
iret
jb
cmpsb
rcrb
aaa
xchg
jo
dec
mov
inc
jl
jl
movsl
mov
mov
arpl
movsl
or
nop
mov
jae
cmp
jne
add
inc
pusha
xor
cld
jle
push
push
xor
xchg
fnsave
add
jg
das
push
mov
jmp
push
add
cmp
and
mov
imul
mov
loop
jmp
in
ja
mov
movsl
add
adc
pushf
leave
jmp
cmp
pop
jmp
cmp
xchg
pop
mov
jg
cwtl
clc
adcb
js
mov
out
cltd
popf
fistpll
les
or
inc
xchg
xorl
cmp
and
mov
and
pusha
or
mov
popf
jne
mov
xchg
mov
adc
pop
push
and
leave
das
jl
dec
mov
add
push
in
mov
lods
insl
adc
hlt
test
inc
and
jae
xor
mov
stc
test
and
mov
and
pop
inc
pop
xchg
cli
and
jp
fistpll
mov
jecxz
add
lahf
jbe
testl
leave
shr
iret
inc
jecxz
adc
pop
push
imul
mov
xchg
out
fisttpll
or
mov
cmpsl
sbb
mov
sbb
into
dec
in
jno
xor
cmp
imul
shl
movzwl
push
mov
inc
rcrb
jmp
xchg
add
dec
dec
mov
shr
in
hlt
sbb
fisubrs
inc
mov
inc
sbb
mov
xchg
xchg
cld
imul
inc
cmp
lcall
jns
daa
jnp
xchg
sub
ss
cld
movsb
test
pushl
dec
jne
sub
jmp
adc
dec
mov
cld
hlt
sub
aam
adc
test
mov
sbb
test
jno
add
int
push
dec
mov
dec
jmp
roll
cli
aad
shrl
cmp
in
push
xchg
and
in
push
jle
lahf
jno
shlb
and
in
xchg
mov
jg
push
fsub
push
add
mov
push
mov
inc
gs
nop
cmp
insl
inc
dec
mov
mov
inc
cmp
stos
push
add
lcall
jnp
pop
fwait
insl
push
push
xchg
mov
jb
lods
push
test
cmp
jno
add
adc
das
pusha
mov
nop
mov
mov
pusha
push
mov
imul
mov
pop
ss
sahf
push
push
adc
jbe
cli
lret
les
aad
mov
cmc
inc
std
sub
mov
test
stos
rorb
into
daa
repnz
repz
rorl
sbb
xor
cmp
mov
lock
sbb
pop
push
mov
adc
xchg
sbb
setp
insl
jno
into
clc
das
setns
xchg
adc
xchg
cwtl
pop
pop
roll
imul
sub
pop
or
int
add
ret
sub
cmp
arpl
jnp
cmpsb
xor
mov
test
jmp
push
sbb
jle
decb
push
andw
shl
xor
out
push
cmp
movsl
inc
jge
das
adc
bnd
or
dec
fs
popf
xor
adc
xlat
insl
stos
test
repnz
test
push
push
sahf
fsub
call
cmc
pop
adc
outsb
into
push
and
enter
and
repnz
jmp
xor
sti
lret
lcall
sbb
mov
cmp
xchg
lods
arpl
sub
xor
mov
sbb
pop
jnp
icebp
dec
test
push
inc
cld
dec
sub
jb
pop
and
aam
inc
jb
incb
sub
push
aaa
sbb
lcall
cmp
mov
loope
inc
jmp
dec
stc
cmpl
mov
cmp
dec
mov
push
stos
or
std
sti
stc
or
add
and
cmpsl
outsb
jae
push
xadd
lcall
daa
std
dec
cli
push
dec
dec
out
mov
or
xchg
mov
mov
and
push
stc
push
test
mov
jo
inc
adc
call
loope
subb
mov
lahf
js
test
test
lock
orl
pop
cmpl
std
xchg
ss
mov
rorb
cmp
xor
adc
or
fistl
fsub
and
and
sub
xor
repnz
jne
jle
jl
mov
jno
sbbl
push
fxch
inc
int3
push
mov
pop
xor
ds
mov
push
inc
inc
rorl
adc
xchg
push
cli
pop
sti
enter
inc
cmc
cmp
hlt
pop
fwait
aas
sub
pusha
rorb
xor
sti
cwtl
mov
or
sarl
mov
pop
cwtl
mov
inc
mov
jo
xor
push
push
addl
xor
cli
jecxz
sbb
add
lea
lret
push
aas
push
sub
arpl
cmpsl
fcompl
push
movsb
rorl
pushf
xchg
jl
insl
hlt
pop
adc
mov
xchg
jne
imul
inc
sbb
cld
dec
in
and
ja
cmpsb
jmp
mov
stc
pop
inc
push
xlat
jp
shlb
rorl
push
loopne
iret
pushf
cld
adc
sub
sbb
iret
dec
or
jp
xchg
bound
push
ret
stos
out
jno
aas
sbb
pusha
mov
dec
fcomps
sub
add
cld
cli
jnp
insb
mov
xchg
and
sbb
mov
pop
jno
jge
insb
and
sub
outsl
dec
jae
push
lock
pop
push
in
push
das
hlt
lds
or
mov
add
notb
dec
dec
insl
in
or
adc
dec
insl
xor
pop
icebp
mov
xor
pop
mov
push
sub
hlt
lahf
ret
push
xchg
icebp
sarl
gs
lods
shlb
push
mov
popf
ss
jle
rorl
xchg
movsl
cli
addb
scas
sub
cmc
adc
xor
jl
push
mov
pop
xor
inc
xor
ret
xchg
adc
mov
cmpsl
inc
notl
add
lcall
stos
xchg
rorl
mov
cmpsl
push
and
push
mov
or
lock
sub
mov
jp
cmpsb
jne
xor
push
sti
sbb
and
push
inc
leave
sub
mov
xchg
push
dec
lret
mov
dec
sahf
pop
mov
stos
dec
lahf
popa
loopw
pushf
xchg
cmpsb
inc
jg
adc
or
jnp
dec
mov
les
dec
dec
mov
mov
push
dec
xor
mov
shll
inc
push
je
mov
inc
pop
aad
insl
push
shrl
loop
jl
jns
ljmp
lcall
xchg
xor
sbb
outsl
pop
test
outsl
mov
sti
push
xchg
sbb
sbb
sti
mov
pop
cmp
mov
pushf
inc
adc
pop
push
ret
jae
dec
js
inc
leave
cmp
sbb
xor
bound
ror
cmp
aad
cmp
mov
aad
in
repnz
mov
mov
dec
dec
adcb
dec
lcall
mov
sub
mov
xchg
dec
cmp
cmp
add
loop
or
inc
test
jns
jle
cmp
push
sahf
sub
lods
aaa
das
add
aaa
pop
ror
gs
das
push
popf
jmp
xchg
bound
lds
shll
sarb
outsb
add
fstpl
pop
in
cmp
inc
mov
xchg
push
jnp
mov
imull
lods
leave
mov
mov
xchg
mov
inc
jns
xor
lds
and
stos
add
push
setnp
fstpt
mov
stos
rolb
push
push
cmp
jp
arpl
in
out
sti
xor
xor
inc
in
je
cs
jnp
adc
int
cltd
cld
outsl
pop
or
out
scas
js
mov
xor
loopne
in
sub
xchg
cltd
pop
xchg
cltd
inc
adcl
mov
mov
push
call
inc
inc
xor
push
push
jge
inc
outsl
or
jl
inc
mov
ret
push
push
push
pop
scas
jno
int
mov
cwtl
rorl
jb
mov
pop
ret
movsl
cs
lea
hlt
shll
sbb
movsb
inc
fisubrl
sub
lods
xor
cmpsb
jno
xchg
dec
jo
inc
fs
repnz
je
pop
js
repnz
sarl
xchg
push
adcl
adc
clc
test
shrl
or
push
push
clc
inc
fisubs
add
in
dec
aas
push
mov
jle
sbb
xchg
cmp
sub
push
outsb
idiv
rorb
and
nop
xor
out
fisubl
adc
out
push
adc
push
pushf
loope
stos
jae
dec
ljmp
pop
push
mov
add
jg
xchg
aas
icebp
pop
mov
pushf
jne
mov
pop
int
jnp
jns
sub
out
fstpl
jge
call
xor
inc
sub
les
pushf
jp
bound
cld
dec
mov
cmp
push
pop
fdivl
push
lds
lds
lods
and
or
ljmp
outsb
test
add
bswap
xchg
outsl
pop
movsl
je,pn
ficoms
adc
lods
or
adc
out
aaa
sahf
add
mov
ja
mov
cmpsl
jmp
int3
xchg
inc
cmp
push
push
imul
inc
jbe
sbb
dec
xor
scas
jecxz
fisttpl
std
mov
sub
mov
jne
adc
sub
or
dec
insb
jecxz
mov
sbb
xlat
ss
ret
fs
mov
das
mov
and
xchg
fstpl
sbb
hlt
pop
jbe
and
sbb
ljmp
sbb
imul
lock
shr
in
cld
dec
sub
sub
add
cltd
scas
push
shr
inc
xor
jge
imul
add
inc
inc
mov
fldcw
mov
mov
roll
pop
mov
mov
pop
daa
mul
xor
and
pop
and
adc
mov
fwait
fwait
mov
jmp
pop
inc
cmp
jmp
mov
jae
sbb
pop
push
subl
add
mov
lock
jle
fimull
fidivrl
bound
xchg
push
js
icebp
cmp
pcmpgtw
push
or
mov
out
mov
daa
fisttpll
inc
fwait
es
xchg
mov
pop
rorb
mov
bound
sahf
adc
xchg
xor
dec
sbb
sbb
inc
incl
mov
cmp
pop
mov
pop
gs
das
nop
or
lds
popa
sub
sbb
add
jp
pop
adc
mov
pop
xchg
inc
and
addb
sahf
outsb
xchg
pop
jo
fisttpl
adc
out
imul
fsub
dec
lahf
sub
jmp
stos
xchg
stos
lock
insl
push
add
lock
and
cmc
mov
orb
es
push
pop
or
xchg
mov
pushf
xchg
je
jno,pn
cmpsb
es
int3
mov
adc
jb
inc
das
notb
dec
push
cmpsb
das
add
or
add
mov
jecxz
xor
pop
sub
push
sub
ss
add
mov
test
cmp
movsl
xchg
inc
shr
lahf
testb
into
xchg
cmp
cwtl
aaa
outsl
push
mov
fcmovu
push
jecxz
adc
pop
push
sbb
push
add
add
andb
out
test
lods
pushl
cmpl
pop
out
outsb
ret
push
fs
sub
outsb
fnstsw
test
negb
test
mov
sarl
ss
lahf
shll
popa
lahf
dec
cmpb
push
mov
jle
repz
test
je
cmp
and
in
fidivl
pop
push
rorl
xchg
loop
jne
mov
inc
dec
mov
loop
fstp
xchg
ss
movsb
popf
jns
pop
in
adc
jno
jmp
mov
cmp
lods
pop
xchg
ret
pop
repnz
repz
scas
insb
clc
and
rclb
and
jl
cltd
fldt
xchg
loop
outsl
lods
pop
sub
inc
sub
sti
jmp
push
mov
out
add
int3
cmp
xchg
pop
inc
sub
add
push
popf
or
movb
or
jmp
mov
adc
lea
cmp
sub
push
ja
mov
sbb
lock
sarb
adc
scas
and
and
mov
pop
mov
jg
or
shlb
xchg
push
push
cmp
lret
push
test
xor
push
mov
stos
cmp
push
jl
les
cmp
or
adc
test
popf
push
mov
sub
sub
int
mov
mov
outsb
je
xlat
xchg
fiaddl
in
movsl
xor
cmp
dec
imul
jae
out
out
push
test
lods
lret
adcl
inc
js
adc
outsl
dec
js
shl
ja
addr16
hlt
push
inc
sbb
jmp
xor
pop
fisubrl
dec
pop
sbb
lds
lahf
and
cld
jb
add
adc
mov
jp
addl
xchg
add
push
inc
push
ret
out
mov
inc
and
jge
hlt
adc
pop
js
xor
mov
test
decb
push
and
mov
cld
jo
mov
jmp
mov
ret
sbb
rcll
popa
jb
lds
mov
subb
mov
mov
or
in
fucomi
ja
pop
enter
inc
gs
imul
fcompl
scas
xlat
out
test
out
dec
jne
inc
mov
in
mov
cli
lret
insb
lcall
push
adc
dec
insl
and
fnstenv
mov
mov
jno
pushf
hlt
add
shlb
in
jmp
fmuls
mov
pop
jb
aad
aam
dec
sarb
call
and
pop
add
out
or
cvtps2pd
das
addr16
jmp
loope
jge
add
pusha
lcall
cmp
enter
into
xchg
pop
pop
cltd
insl
push
aad
mov
mov
in
pop
sub
test
add
sub
sbb
lret
xor
and
pop
loopne
jb
fnstenv
inc
jne
sahf
pop
xor
popf
xchg
loopne
ret
fwait
icebp
add
jo
dec
cmpsl
or
aaa
lret
mov
imull
in
jmp
bound
test
mov
test
push
jp
popa
push
call
cld
lret
xchg
push
popf
mov
test
push
inc
inc
inc
icebp
xor
push
dec
pop
push
push
out
daa
rorl
jbe
adc
rcrl
and
mov
mov
jmp
xor
arpl
pop
out
xchg
lods
arpl
adc
or
pop
mov
pop
adc
adc
mov
push
dec
xor
daa
icebp
out
cmp
jnp
xchg
cmp
or
ja
pushf
jl
mov
add
jnp
bound
jg
popf
and
test
outsb
cmpb
and
inc
fildl
jp
sbb
bound
cmp
loopne
sbb
push
jb
je
cmp
or
sbbb
aam
xchg
and
xchg
adc
dec
jecxz
shl
xchg
aam
leave
xor
push
das
xchg
sub
xchg
in
sub
fisttpl
pop
ljmp
pop
fstpl
xorb
loopne
add
rorl
jmp
jp
and
call
je
and
sbb
mov
es
adc
inc
cmp
inc
fisttpl
inc
int3
shr
push
push
ss
popf
gs
push
mov
lock
inc
shlb
mov
fdivrs
cltd
sarl
js
in
inc
les
pop
jecxz
popf
aad
addw
xor
loope
add
fstps
inc
inc
adc
test
sahf
jge
push
cmp
stos
pop
sarl
rcr
std
jne
outsb
notb
gs
mov
test
in
jbe
lcall
sbb
addr16
out
cmc
jmp
mov
xlat
popf
cltd
pop
dec
aam
jo
lcall
sarl
xchg
pop
pop
push
cmc
dec
mov
xchg
popf
sbb
adc
loopne
cmp
scas
xor
mov
add
mov
add
aaa
bound
mov
loopne
push
adc
sbbb
sub
mov
xor
movsb
ss
mov
ja
sahf
mov
sbb
xchg
push
outsl
mov
fcomi
add
sbb
dec
jo
lea
inc
push
mov
cmp
sahf
fwait
pop
fcompl
mov
cli
cmp
and
mov
and
push
cltd
mov
add
cmp
gs
mov
add
add
int
dec
xor
imul
clc
sbb
mov
push
lea
pushf
mov
sub
sbb
repnz
xor
add
mov
mov
xchg
jbe
push
sub
imul
dec
xchg
pop
test
push
sbb
push
adc
imull
mov
je
push
shl
jle
lret
and
inc
push
cmpsb
stc
popf
sub
in
dec
scas
pop
andb
into
scas
mov
and
xor
rol
push
push
push
stos
push
jne
cmp
mov
ret
es
mov
sub
rolb
cmp
icebp
popf
fmulp
push
mov
inc
and
stos
addr16
xchg
push
imul
pop
imul
sub
push
leave
repnz
aas
insl
add
lods
idivb
sbb
sub
xor
mov
test
xchg
pop
pop
xor
mov
pushf
xor
sbb
bswap
xchg
out
pop
shrb
pop
mov
mov
sti
xchg
fbstp
inc
lods
lea
mov
dec
or
cltd
or
push
sub
stos
icebp
push
xor
cmpsl
mov
sub
lock
cld
jnp
ljmp
pop
pop
stos
out
dec
scas
inc
pop
cmp
loop
cs
loopne
xchg
mov
push
xchg
jbe
iret
mov
in
out
fildll
mov
xor
sbb
pushl
scas
in
mov
shll
dec
adc
inc
pop
inc
movsl
xchg
xorl
ds
mov
in
addr16
inc
inc
pop
lds
push
mov
jae
xor
jbe
aas
in
pop
add
data16
arpl
adc
test
jno
fdivr
mov
mov
adc
in
pop
dec
jmp
push
mov
ja
adc
mov
sbb
cmpsl
mov
mov
sti
pop
mov
dec
add
loop
and
mov
inc
jno
into
enter
push
cltd
jae
jg
adc
jnp
adc
inc
jg
ret
or
dec
lock
cs
cmpsl
mov
out
mov
test
and
xchg
out
sbb
movsl
xor
mov
cmp
sbb
pop
cmc
gs
outsb
mov
xchg
mov
sub
inc
jo
jge
inc
jne
ljmp
and
or
aad
outsl
arpl
idivb
nop
jecxz
push
xor
out
cs
test
add
inc
lahf
rorl
sub
cmpsb
xchg
or
xchg
add
mov
rcrb
enter
repnz
ja
sub
out
or
popf
fmull
xor
movsb
shrb
sbb
dec
enter
xchg
notb
xchg
mov
lock
jno
sahf
loope
icebp
out
mov
pop
dec
lock
xor
movsb
je
in
hlt
push
leave
fneni(8087
dec
fwait
mov
fldcw
cwtl
pop
arpl
clc
push
sub
iret
jle
push
not
loopne
and
mov
insl
js
movsl
adc
inc
dec
jmp
ret
inc
rorb
jb
jle
loope
popf
xchg
shl
and
aaa
xor
pop
or
popf
test
addl
pop
rclb
push
jae
sub
movsl
mov
jbe
rcl
sub
shr
mul
sub
outsb
lret
sti
sbb
inc
push
pop
fidivl
je
loopne
es
notb
lods
adc
sbb
pushf
inc
inc
pusha
dec
fiadds
popa
test
sub
pop
addb
push
mov
out
dec
aas
xor
mov
call
push
les
dec
pop
cld
pop
cmp
rclb
dec
pop
jl
mov
outsl
pop
xor
cwtl
adc
and
push
or
ljmp
xchg
sbb
insb
inc
arpl
mov
sbb
shr
pop
call
dec
out
fstl
popa
push
inc
dec
cmc
mov
pop
xor
inc
lods
pop
cmp
test
loope
bound
aaa
jl
inc
mov
scas
push
cmpsl
fs
pop
xchg
mov
stos
sbb
lret
fwait
pop
jno
jno
daa
leave
ret
out
aaa
sbb
imul
das
adc
jb
cmovne
std
fisubrl
sbbl
loopne
pop
inc
mov
idiv
imul
lcall
xchg
das
mov
xchg
jnp
mov
lcall
pushf
imul
mov
sub
cwtl
pop
sub
lods
pop
jne
das
mov
inc
dec
jg
out
cld
dec
popf
es
and
dec
inc
fsubp
test
sub
mov
pop
push
dec
dec
imul
xchg
leave
add
mov
mov
shlb
mov
jb
inc
xor
push
sbb
test
add
dec
sbb
es
adc
movsl
popa
inc
dec
sub
hlt
in
mov
add
jno
push
nop
mov
mov
lret
lock
or
ljmp
cmp
mov
add
pop
sbb
pop
lret
xchg
xchg
dec
xlat
stos
or
add
mov
popa
pusha
sbb
aaa
jecxz
cmp
sti
or
xchg
xchg
loope
out
test
fistl
xor
data16
mov
icebp
repz
outsb
mov
out
sub
sbb
push
leave
je
jnp
mov
and
lret
jecxz
dec
mov
mov
lea
xor
pop
push
outsl
mov
repz
lahf
pop
out
inc
mov
das
jnp
icebp
data16
mov
inc
popf
fucomip
xchg
dec
mov
cmovne
sti
inc
pop
sbb
xchg
icebp
pop
jmp
hlt
fwait
pusha
subl
out
push
mov
jl
shll
loope
mov
pushf
xchg
inc
andl
pushw
mov
jl
jl
add
rorl
mov
jmp
jmp
stc
shl
pop
pop
fdivs
adc
ss
or
sbb
mov
dec
and
mov
les
loope
imul
jb
shrl
rcrb
aas
mov
sbb
cmp
xor
dec
pop
dec
xchg
stc
mov
push
adc
mov
and
sbb
push
rcll
adc
and
stos
sub
fcoms
lahf
outsl
jns
in
push
ds
xchg
shll
dec
insl
or
mov
xor
mov
std
push
mov
push
adc
jp
es
js
xor
jae
popf
in
add
scas
dec
jo
xchg
sbb
xor
mov
shll
fisttpl
ret
sub
or
push
and
mov
out
xor
jge
sahf
pmulhw
roll
jnp
mov
lea
dec
adc
jno
or
add
pop
xlat
adcw
xor
pop
sub
mov
popa
adc
je
push
mov
push
repnz
mov
mov
cltd
das
pop
mov
jae
add
mov
dec
pop
push
clc
dec
adc
cmc
ds
dec
inc
mul
rcll
sbb
rcll
dec
sub
addr16
jmp
mov
mov
ret
jno
mov
sbb
pop
test
pushf
mov
and
xor
add
xchg
push
pop
push
int3
mov
pusha
sbb
jmp
sub
push
movsl
push
ds
ret
lds
cld
das
xchg
aaa
int3
lods
fildl
loop
push
jo
fwait
scas
aaa
loop
pop
xchg
stc
jae
add
mov
lods
test
pop
mov
or
dec
push
inc
cmp
subb
dec
not
or
xor
jo
mov
jg
sbb
or
mov
fisubrs
int3
cpuid
push
mov
fstl
add
mov
mov
icebp
lods
dec
push
popf
scas
movsl
nopl
mov
loope
or
or
pop
mov
sub
dec
mov
mov
mov
bound
sbb
jge
and
sahf
aaa
mov
fistl
mov
add
jg
lds
mov
sbb
sbb
push
mov
mov
dec
sbb
fiaddl
call
mov
mov
inc
push
xor
in
fcoml
out
ja
pop
in
sbb
push
test
mov
inc
or
dec
jnp
out
xchg
icebp
mov
jne
xor
lock
out
shlb
xor
lock
sbb
dec
pop
std
loop
mov
and
lods
jg
decb
mov
push
mov
cmp
jae
fstpl
pop
test
mov
xlat
scas
sbb
mov
push
mov
mov
daa
fsubrp
out
mov
push
rolb
xchg
sbb
mov
pop
inc
insb
jg
pop
push
sbb
inc
je
in
and
sbb
clc
popf
inc
mov
mov
adc
push
jns
sbb
repz
outsb
leave
cmpsl
fnstcw
pop
mov
or
or
pop
push
fmuls
jp
lods
bound
push
mov
popf
add
mov
mov
push
cmp
insl
loope
lcall
adc
mov
push
cmp
mov
xbegin
sub
xor
push
mov
mov
insb
out
cwtl
fidivrs
sti
in
inc
ljmp
stc
loop
add
outsl
leave
sbb
jge
ja
rorl
sub
or
mov
inc
addr16
mov
push
fs
dec
out
dec
nop
dec
sbb
add
mov
inc
push
and
mov
arpl
into
ret
jae
mov
je,pt
dec
mov
cmp
test
shl
pop
fistl
cmc
dec
out
xor
cltd
sahf
sti
shrb
scas
jb
xchg
addr16
fs
movsb
add
sub
scas
push
xor
out
pop
bound
pusha
scas
adc
jmp
push
imul
cs
jmp
push
cmp
adc
movsb
aas
jmp
imul
into
clc
js
cli
push
and
addr16
pushf
cs
lock
mov
cwtl
and
push
subb
cmp
dec
push
xchg
cs
iret
ret
mov
cmpsb
sub
adc
cli
loope
fs
test
sbb
jnp
clc
lock
mov
lods
mov
popf
fmull
imul
jo
das
mov
and
hlt
aam
or
lcall
jmp
repnz
sub
push
add
xchg
push
ds
mov
xor
xor
xor
ret
int3
nop
je
stos
sbb
sub
jl
add
mov
jns
imull
inc
mov
mov
inc
mov
fildll
sahf
lcall
sbb
test
or
dec
jns
jbe
jmp
lret
das
xor
in
and
inc
out
add
faddl
pop
cmp
xchg
adc
test
pop
add
jae
lods
into
jmp
xchg
testl
xlat
setb
inc
dec
mov
mov
lods
push
pop
and
addr16
cwtl
dec
sub
push
rcrl
or
or
mov
insl
sub
dec
out
ret
popa
xlat
pop
out
or
loop
imul
push
xlat
outsb
push
sti
add
iret
mov
xorb
nop
push
sbb
and
popf
aaa
jns
fsubl
cmc
add
hlt
loopne
aam
lcall
pop
mov
mov
js
push
lea
lret
jno
aas
sbb
or
enter
and
cmp
pop
fldcw
insb
pop
ljmp
cmpsl
mov
shll
stos
testl
sbb
inc
stos
jmp
fwait
hlt
adc
adc
mov
and
shll
in
sbb
add
addr16
cs
out
push
mov
lods
xchg
arpl
les
inc
lea
into
add
fdivrl
xchg
loopne
mov
repnz
push
mov
jns
ds
lds
or
cmp
lods
insl
scas
pop
out
dec
sub
cmpl
sub
nop
xor
push
pop
sub
mov
dec
cmp
push
and
mov
sbb
add
and
inc
and
decl
xchg
out
mov
cmp
push
push
cli
mov
cmpb
jge
add
js
cmp
lea
pop
pop
mov
in
popf
or
ret
add
mov
stc
add
imulb
outsb
mov
ret
jo
test
cmp
xchg
insb
mov
js
mov
cwtl
sbb
sbb
sbb
sbb
dec
ret
lods
mov
cld
andl
mov
xor
push
and
lea
mov
cmp
or
incb
xchg
add
xorl
sbb
int
sbb
lea
in
test
dec
push
mov
dec
out
push
jecxz
jns
mov
lds
and
jnp
enter
pop
xchg
and
mov
mov
adc
ret
add
lcall
ret
je
xor
lock
sbbw
cmp
scas
sbb
pop
in
mov
mov
mov
cli
pop
xor
out
out
in
movsb
sub
mov
imul
in
outsl
ficoml
lahf
clc
push
pop
push
jmp
cwtl
fcoms
and
in
inc
outsl
xchg
inc
jo
mov
jmp
jb
inc
jle
inc
aaa
push
add
xchg
xchg
push
ja
mov
dec
mov
or
loop
ret
inc
add
push
hlt
not
xchg
int3
testb
mov
xchg
inc
sbb
sbb
mov
stos
and
inc
push
lcall
pop
push
movsb
jmp
jae
es
push
aas
sub
nop
movsl
loopne
loope
pop
movsl
add
dec
xchg
mov
push
into
shl
mov
push
aad
adc
bound
outsl
decb
dec
xchg
sub
sbb
lret
xor
lahf
dec
leave
lds
xchg
aam
sub
push
xchg
cwtl
call
ds
xchg
shll
pop
in
adc
fwait
mov
movsl
std
push
inc
leave
or
decb
push
mov
enter
test
lods
pushf
push
fistps
mov
push
xchg
jbe
js
daa
dec
mov
jns
pop
in
mov
fucomi
dec
xor
xlat
out
inc
cltd
mov
clc
lea
and
add
lret
daa
testb
sbb
lock
mov
shrl
sbb
and
add
iret
sub
int3
leave
aam
dec
dec
fcoml
into
nop
sub
repz
or
loopne
jle
adc
addr16
scas
push
xchg
in
lock
shlb
dec
aad
mov
jmp
inc
pop
xor
inc
sub
push
mov
out
sahf
sahf
add
lods
add
push
push
icebp
jmp
ret
cmp
xor
jmp
fsts
lea
push
insl
clc
sub
mov
adc
inc
cmpsb
mov
adc
dec
cmp
push
test
nop
pop
push
xchg
add
sbb
cwtl
cmp
adc
or
mov
in
or
adc
outsb
xchg
cmp
xor
pop
in
fcmovnb
or
cli
adc
aam
or
or
repz
adc
in
insl
pusha
test
scas
sbb
mov
push
es
insl
push
push
add
shlb
jbe
inc
mov
add
js
or
add
repnz
mov
int
es
mov
xchg
and
jb
mov
movsl
dec
fldenv
pop
repnz
cmp
out
adc
pop
mov
fwait
adc
adc
xchg
mov
jne
jg
cltd
xchg
push
xlat
lret
inc
iret
jb
mov
dec
add
mov
xchg
pop
pop
xor
cmpsb
jmp
out
pop
ss
xchg
pop
pop
mov
popf
push
jnp
inc
fimuls
scas
cmp
adc
sub
mov
xchg
adc
adc
mov
scas
or
lods
hlt
and
cmp
scas
icebp
jmp
sub
xchg
jo
dec
sub
jo
stc
aaa
ljmp
into
enter
stos
mov
popa
inc
pop
push
std
mov
popa
cmpsl
pop
sbb
add
add
pop
stos
jge
push
dec
xchg
stos
loop
mov
jno
sub
jge
shll
pop
bound
aad
dec
stc
sbb
fists
push
push
int
add
adc
es
adc
lds
dec
adc
adc
sbb
inc
movsl
xor
jle
push
mov
cmp
pop
xor
dec
jnp
mov
aam
hlt
mov
je
outsl
aaa
sar
xchg
addr16
out
lods
and
and
stos
movsb
mov
repnz
xchg
adc
fwait
or
call
mov
pop
cltd
or
cmp
cltd
ss
jno
pop
cwtl
arpl
out
ljmp
jmp
in
fisubl
in
cltd
sub
call
and
sbbb
push
pushf
cmp
and
cmp
jno
shlb
bnd
sub
lods
lds
xor
cwtl
mov
mov
shlb
mov
adc
enter
sub
call
and
into
imul
pop
xchg
or
add
mov
clc
and
fsubrs
gs
pop
gs
and
pop
pop
out
cs
leave
xor
inc
or
adc
mov
lods
das
data16
jmp
push
cmp
mov
clc
mov
out
inc
sti
adc
push
xorl
popa
push
leave
les
std
aaa
or
sub
or
fcompl
mov
shl
popa
mov
subl
pop
and
sbb
das
sub
and
or
cmpsl
shll
inc
in
cmp
mov
adc
fbstp
push
enter
imul
orb
jae
adc
xchg
fidivrs
popa
add
dec
jg
jae
xchg
cmp
pop
sub
lcall
sarl
inc
cwtl
lods
push
in
out
mov
xchg
jp
stos
andl
data16
add
or
cmp
xchg
and
in
inc
loop
les
and
xchg
cmp
sub
outsl
pop
js
das
test
xchg
jp
push
or
lea
sarb
cmp
or
cmp
int
sbb
cltd
cwtl
adc
lcall
cmp
sub
out
pop
xor
jae
or
jo
pop
cld
dec
pop
adc
sub
jmp
aaa
addr16
int3
xor
inc
xchg
lds
mov
cltd
aaa
jp
jo
jle
mov
out
dec
shlb
aaa
les
repnz
insl
test
pop
lods
pop
push
insb
sub
sahf
push
orb
insl
in
mov
ficompl
pop
lock
fisubl
mov
mov
cmp
lret
cmc
push
clc
adc
pop
sbbb
dec
xlat
cmp
stos
divl
fwait
jo
jg
mov
mov
adc
fnstsw
inc
notb
movsl
xchg
or
lods
fldl
in
es
add
fsts
xor
sbb
movsl
sbb
sub
xor
and
inc
loope
push
jnp
sub
and
pop
pop
sbb
rclb
shr
pop
inc
mov
clc
fcomps
les
enter
sbb
insl
sbbl
insl
shrl
mov
sbb
out
fwait
int3
xchg
dec
inc
popf
lcall
sbb
inc
mov
orl
lret
movl
dec
ss
bound
add
mov
rcll
pop
fwait
imul
push
mov
repnz
add
mov
jae
sbb
push
jns
xor
cli
mov
dec
and
insl
xor
lea
rcrl
cwtl
fsubrs
out
mov
dec
sbb
sbb
lods
imul
fcmovne
ja
loop
sbb
jno
js
pop
mov
mov
or
push
mov
xchg
into
unpckhps
cli
js
cmpsb
outsb
inc
dec
sbb
jmp
iret
jle
out
jbe
mov
adc
ljmp
mov
dec
sbb
inc
and
or
cli
push
sub
pop
scas
inc
sub
ljmp
movb
cmp
jnp
mov
xor
or
mov
jmp
andb
fimull
iret
jb
sti
push
fucomip
outsl
aaa
mov
sbb
sbb
jb
lret
jo
lods
mov
push
mov
lret
test
cltd
int
lret
push
pop
sbb
xlat
sbb
lcall
adc
fprem
packssdw
mov
or
sti
sbb
mov
sarb
mov
or
inc
push
sbb
sti
lcall
jp
mov
xchg
ret
sub
inc
call
push
dec
xor
cs
shrb
and
mov
int3
push
test
mov
push
clc
pop
or
add
or
inc
xchg
mov
out
stos
fs
out
jmp
aam
add
popf
dec
pop
xchg
stos
xchg
mov
xor
sub
and
negl
in
test
cmpsl
sub
lea
jo
jp
mov
dec
cmpl
ret
mov
insl
in
fwait
xor
pushf
add
repz
stc
and
push
pop
dec
stos
idivl
frstor
fdivrl
int3
scas
push
int3
sub
jne
dec
dec
setne
mov
popw
cltd
lahf
shlb
push
in
lret
lret
xchg
inc
cmp
cwtl
xor
adc
loopne
outsl
and
xlat
cltd
imull
sbb
mov
cli
cmp
sub
push
test
jno
cmp
inc
cld
mov
mov
and
mov
pop
fsub
sub
les
das
cmp
mull
scas
add
jae
ja
mov
pop
push
cmp
jge
mull
sub
add
mov
xor
inc
out
or
data16
in
cmp
insb
jb
mov
mov
inc
and
repz
jecxz
dec
insb
xchg
add
imul
fisubrl
adc
lret
adc
fcoml
lahf
dec
lock
mov
les
sub
in
jecxz
adc
outsb
les
and
in
pop
jnp
mov
cmpsl
aam
popa
mov
out
cltd
test
adc
outsb
dec
mov
push
or
jge
dec
mov
sbb
pop
subl
pop
mov
and
movsl
aad
sub
sbb
jecxz
mov
mov
sbb
adc
sahf
sbb
pop
mov
icebp
sbb
or
sarl
es
pop
in
add
cmc
or
lods
mov
lahf
fstpt
lret
ja
rclb
leave
loope
xor
add
imul
gs
xchg
loop
ljmp
cltd
aam
mov
dec
jmp
rcl
adc
or
out
mov
fwait
mov
sbb
shr
jb
dec
mov
out
call
fwait
pop
adc
cmp
pop
iret
jns
adc
sar
fcmovb
rcrl
jnp
push
push
xor
dec
lea
xchg
pusha
push
popa
lods
cld
inc
jle
loopne
pop
repnz
aam
mov
or
mov
push
push
xor
pop
scas
aas
popf
dec
sbb
imul
mov
mov
es
ret
out
sub
cmpsl
pop
movsl
aas
jge
lea
pop
loope
or
les
pop
in
and
out
xchg
and
jmp
pop
lods
mov
mov
sbb
and
adc
call
rcrb
ljmp
mov
sbb
xchg
dec
les
mov
push
inc
out
mov
cmp
iret
out
inc
popa
cli
push
imul
shll
inc
sub
sub
std
push
aaa
adc
call
xchg
pop
cld
lds
imul
adc
mov
dec
mov
pop
cmpsl
jb
push
mov
dec
mov
pop
jg
test
movsl
call
sub
jno
sahf
xchg
dec
out
push
sub
jnp
fcmove
jae
inc
xchg
mov
loope
pop
xchg
cmp
out
sbb
adc
je
gs
out
xor
push
mov
sti
enter
push
or
imul
push
mov
cltd
sub
sub
dec
pop
daa
xchg
jecxz
add
and
xchg
mov
test
flds
mov
js
adc
jnp
lea
sub
jg
add
lcall
mov
pop
stc
mov
fldt
adc
jno
xor
mov
mov
imul
in
outsl
mov
or
pop
xchg
test
mov
cld
shrl
mov
js
fdivrp
cmc
addl
mov
test
cmp
or
cmc
xchg
mulb
pop
mov
pop
mov
outsl
mov
ljmp
mov
dec
movsl
in
jmp
hlt
pusha
nop
addl
xor
popa
and
inc
aam
mov
jle
clc
sarl
dec
jne
test
push
popf
jmp
in
jmp
out
outsb
das
sub
data16
out
and
pop
sub
movsb
test
sar
xchg
sbb
and
insl
stc
shrl
cmpsb
or
popa
push
cmc
or
out
out
sub
xchg
cmp
dec
adcb
adc
xchg
jb
fcoms
jo
or
xor
xchg
jbe
and
inc
bound
and
or
rolb
daa
daa
add
cli
sbb
cmp
inc
adc
cmpsl
push
repnz
jmp
bound
jge
fadd
add
xlat
popa
sbb
and
jb
sub
sub
ret
jbe
push
dec
lahf
dec
dec
dec
and
xor
or
adc
cmp
mov
rol
sub
cmpsb
movsb
flds
cmpsl
push
fisubl
dec
dec
orb
fnstsw
xlat
jmp
aaa
test
sub
mov
test
fidivrl
insb
in
or
pop
ljmp
pop
mov
adc
mov
add
pusha
jecxz
jmp
cli
es
adc
aaa
mov
ret
sub
icebp
or
jmp
push
push
fiaddl
cltd
add
ljmp
mov
mov
xor
add
ja
and
mov
or
xor
mov
mov
out
dec
test
and
mov
push
add
sub
pushf
in
push
clc
xchg
lret
add
rcr
call
rcl
lahf
cmpsl
xor
js
fs
ss
xchg
jle
push
cmp
test
inc
mov
addr16
mov
mov
xor
outsb
xchg
dec
and
push
sbb
cs
flds
xchg
clc
sbb
mov
aaa
outsl
cld
lods
test
mov
fdivs
lock
jns
xchg
jae
int3
outsb
xchg
lret
push
push
push
dec
aas
aam
add
dec
into
sub
lahf
push
les
cmp
nop
imul
test
add
push
cmpsl
pop
and
repnz
iret
data16
push
lret
mov
sbb
sbb
pop
cwtl
add
frstor
dec
loope
adcl
adc
and
and
jb
cwtl
sub
or
jno
inc
xchg
sub
push
xchg
pop
pop
sbb
das
cwtl
jae
fsts
add
push
add
aas
cmc
cltd
add
push
mov
jle
mov
xor
incl
bound
lock
cmpsb
mov
icebp
out
daa
dec
add
push
aas
in
mov
sub
push
xor
push
rcl
pop
cmp
fiadds
jo
lret
in
mov
jns
outsb
xchg
add
push
std
test
inc
push
fdivrs
xchg
dec
or
into
push
loope
clc
sti
aas
adc
add
mov
cmp
add
pop
ds
dec
es
xor
dec
cmpsb
gs
cwtl
push
ljmp
movsb
adc
xorl
out
jmp
dec
xor
fsubrl
lods
arpl
mov
test
pushf
push
outsb
push
pop
inc
fstps
xchg
and
push
jo
jge
out
mov
sub
outsb
mov
test
lods
inc
test
lea
xchg
in
sub
lret
or
aaa
jbe
push
hlt
rcr
imul
inc
add
and
pop
or
mov
pop
mov
aaa
sub
cwtl
dec
add
and
stos
mov
push
sahf
cmp
mov
sbb
push
inc
mov
fbld
iret
cmp
je
js
push
dec
dec
gs
vminps
std
imul
push
es
add
mov
lds
sbb
outsb
sbb
std
leave
aas
adc
stos
out
jmp
push
pop
mov
movsb
test
push
js
pop
cwtl
insl
int
std
sub
fs
test
add
push
rcll
dec
dec
adc
add
outsl
enter
cmp
inc
adc
ljmp
adc
inc
test
push
pushf
xor
xor
inc
xchg
or
popa
xchg
push
and
aaa
std
ss
pop
aas
test
addr16
mov
pop
shrl
sahf
mov
stos
arpl
jecxz
dec
jmp
fiadds
inc
dec
ja
jp
adc
sarb
sahf
and
sbb
mov
fwait
lea
mov
mov
cmp
iret
ss
mov
xchg
call
xor
pop
jns
sub
clts
test
cmpsb
sbb
mov
push
shlb
nop
pcmpeqw
subl
mov
or
movsl
ljmp
xor
inc
shll
cwtl
pop
adc
icebp
jl
dec
jnp
xchg
enter
pop
mov
imul
mov
sub
pushf
add
pop
je
outsl
dec
add
sbb
mov
mov
cli
lret
adc
pushf
sub
fcomp
loope
rorb
pop
lea
insb
push
scas
clc
nop
mov
lahf
mov
icebp
sbb
fwait
into
add
outsl
jbe
das
push
fld
mov
xor
mov
xchg
bndstx
pop
mov
icebp
popf
jns
pop
lds
outsl
insl
outsl
fdivrs
movsl
mov
cs
sbb
fildll
mov
dec
cmp
in
or
hlt
jmp
sub
add
cltd
sarb
push
dec
inc
lea
adc
inc
aam
mov
adc
lret
adc
xchg
jmp
es
cld
pushf
mov
ja
jle
jmp
push
mov
pop
sub
lods
pop
ss
mov
and
decl
or
outsl
sub
imul
mov
xchg
push
and
sub
stos
inc
lods
mov
sub
shr
subl
xor
xlat
jb
fnstsw
sub
rclb
add
xor
mov
arpl
rorl
ja
scas
xchg
dec
outsb
xchg
lahf
dec
mov
fidivrl
jecxz
cld
mov
jb
rol
sub
push
ljmp
jmp
enter
adc
sub
jnp
dec
xor
cltd
imulb
pop
pop
push
sahf
adc
sahf
and
push
lods
cltd
leave
aas
stos
orb
les
clc
mov
lahf
pop
out
or
mov
insl
les
fwait
mov
fidivrs
and
adc
sub
js
fldl
out
into
pusha
ret
shlb
outsb
inc
push
fdivr
push
mov
rcll
mov
cmp
mov
notl
sbb
nop
mov
push
rcrl
dec
jmp
ja
dec
sar
adc
out
and
lahf
jne
out
mov
inc
inc
fsubl
or
andl
leave
repz
scas
out
popa
lret
or
pop
andb
jno
loop
jge
pop
push
loope
sarb
bound
daa
xor
aaa
mov
cmp
idivb
in
rclb
or
movsb
and
cmp
nop
inc
loop
mov
xchg
mov
jmp
mov
pop
push
out
outsb
sub
sub
cmp
sub
aam
imul
adc
xor
mov
pop
cmpsl
lcall
dec
mov
mov
insb
cwtl
int
mov
cmp
clc
out
sbb
sub
outsl
xor
jns
adc
xor
rsqrtps
lahf
dec
pusha
push
rclb
mov
mov
shrl
imul
mov
jbe
pop
les
adc
or
ds
or
push
dec
or
push
inc
mov
je
loop
retw
sahf
sub
test
fwait
leave
loopne
push
cwtl
std
fistpll
inc
cmp
push
mov
add
nop
std
adc
xlat
sbb
mov
push
xchg
andl
cwtl
ljmp
pop
vcvtdq2pd
cmp
push
sarl
xchg
cs
ret
loopne
mov
jo
bound
outsl
sti
cli
es
adc
sbb
jb
daa
cs
xchg
cltd
cmp
jecxz
sub
mov
cltd
ljmp
xor
popa
mov
imul
out
sbb
xchg
sbb
adc
sbb
hlt
or
push
or
sub
cmp
xchg
sarl
les
adc
rorl
push
xchg
icebp
jo
mov
shlb
jge
gs
push
nop
xchg
loop
cmpsl
mov
das
or
jne
movlps
adc
pop
mov
lods
mov
scas
push
out
pop
mov
mov
sti
xorl
mov
xchg
xchg
jl
pop
jae
pop
int
movsb
add
daa
popa
mov
inc
xchg
and
jecxz
jns
shrl
pushl
sarb
adc
aas
cmp
aad
in
popf
repz
jbe
clc
fprem1
mov
inc
into
mov
daa
mov
popf
add
or
push
jo
into
mov
dec
div
mov
popa
addr16
fsubp
scas
into
hlt
das
or
add
ss
fwait
jns
xor
dec
cmpsb
and
ss
fmull
daa
push
mov
xchg
iret
push
cltd
jl
shl
pop
ja
cli
test
fcomps
mov
and
repnz
push
xchg
mov
mov
xchg
lret
xor
xchg
adcl
cld
mov
add
fs
push
orl
loope
cmp
mov
jns
icebp
movsl
aam
lret
stos
jge
pushf
sbb
pop
and
xchg
push
mov
cmp
pop
rcrb
xlat
xlat
sub
sar
cltd
shll
jnp
jb
dec
in
popa
filds
jp
push
push
push
pop
mov
push
pop
rcrb
pop
pop
or
aam
js
sbb
jbe
pop
fimuls
push
je
and
sub
add
fwait
mov
les
insl
push
cmpsl
xchg
cli
xor
fisubs
jg
cmpsb
pop
jo
jnp
hlt
das
les
rcr
push
sbb
cld
scas
loope
cmp
pusha
adc
test
jns
scas
fisttps
pop
mov
push
sbb
data16
aas
lea
lret
and
popf
ds
clc
sarl
bound
cli
ficoms
xchg
out
adc
cld
data16
sub
aam
pop
add
sub
and
testl
add
sbb
incl
jle
xor
mov
cs
adc
in
lds
lock
leave
popf
xlat
mov
jo
ss
loope
scas
mov
fsts
sbb
ret
cmp
cmp
mov
nop
jne
mov
sbb
cmp
stc
dec
sbb
bt
lcall
fisubrs
push
jns
repnz
cmpsb
jmp
je
in
std
xchg
enter
lods
int
test
icebp
fwait
popf
jl
shrl
push
cwtl
shrl
sbb
mov
scas
push
cltd
jns
cs
loopne
test
addr16
adc
dec
mov
and
push
lret
int
and
cmp
rorb
or
push
mov
dec
test
xchg
jge
dec
push
lret
popa
xrelease
cld
scas
mov
mov
cmp
lock
jbe
leave
insb
jmp
mov
outsb
nop
into
push
ds
add
mov
daa
bound
repnz
jp
mov
sbb
test
mov
repz
xlat
xchg
lods
push
sbb
inc
xor
insb
pop
test
jmp
xchg
test
jmp
xchg
mov
stc
pop
cli
shlb
jo
jns
cwtl
pop
jp
pop
sahf
lcall
pushf
push
aad
jp
jecxz
fdivrl
push
in
add
std
sbb
scas
adc
fbld
je
xorl
xchg
arpl
or
and
pop
ret
add
outsl
shll
movb
dec
add
repz
imul
bound
xlat
mov
push
aas
fsubrl
jbe
shl
ljmp
add
sub
test
mov
test
les
dec
and
ss
add
mov
mov
add
into
fsubl
mov
mov
bsr
jo
idiv
les
arpl
mov
into
imul
sub
dec
sub
scas
push
imulb
mov
cltd
cmp
int
out
mov
mov
and
push
pusha
mov
pop
jno
cltd
addr16
int
addb
ficoms
adc
inc
test
movb
jns
dec
aam
out
pop
into
insl
mov
jl
inc
lahf
jae
testl
fmul
loope
or
dec
leave
lea
pop
dec
adc
mov
loopne
adc
stc
frstor
sub
addr16
sbb
xor
adc
aam
hlt
push
into
sub
test
mov
repz
sbbl
dec
add
and
add
mov
rorb
jmp
loop
adc
xchg
in
insl
int3
mov
xor
mov
loop
adc
les
sub
into
rcll
inc
mov
mov
lahf
mov
mov
or
rcr
inc
lods
call
cmpsb
and
sbb
cwtl
push
cli
mov
pop
into
ds
jl
pop
les
sbb
jnp
or
adc
mov
mov
mov
popa
ds
lea
jb
jge
cmp
push
cmp
insb
add
fstpl
jg
xor
adc
jmp
rcll
xchg
ljmp
addr16
xchg
leave
mov
out
xchg
mov
xchg
dec
ss
dec
inc
jne
xorb
and
add
xorl
lds
movsl
jge
pop
in
addr16
dec
imul
movsl
sbb
pop
jmp
or
out
or
cmc
jb
movsb
and
dec
xchg
int
xchg
cmp
outsl
icebp
mov
pop
clc
mov
cltd
fsubr
mov
sbb
lock
adc
mov
fidivl
sbb
xlat
notl
test
pmullw
ljmp
or
iret
cmp
jmp
inc
fstpl
imul
stc
das
sub
pushf
cmp
jmp
mov
and
aas
clc
sqrtps
jns
outsb
cmpsl
add
ja
inc
out
in
fnstcw
iret
xchg
jnp
sbb
adc
adc
jns
outsl
mov
sub
mov
inc
ljmp
mov
nop
rcr
jno
bound
div
pop
or
test
fcoms
mov
insb
lcall
xchg
push
shll
push
repz
xor
or
shrl
jp
pop
out
rorb
test
dec
mov
imulb
in
cmp
adc
mov
or
sub
cmp
dec
sbb
adc
adc
or
cwtl
or
mov
push
mov
rorb
and
ja
dec
subl
mov
in
inc
cmc
inc
inc
adc
hlt
cmc
lea
insl
stos
fs
dec
rcr
and
shl
fisttpl
jecxz
in
inc
sbb
ss
movl
popf
mov
fmulp
out
pop
sbb
sbb
jle
pop
adc
mov
mov
dec
mov
negb
add
mov
xchg
and
mov
aad
pop
int
push
imul
lahf
push
out
cmp
push
cmpl
lods
mov
popa
repnz
ret
dec
popa
movsl
mov
sbb
imul
and
sub
in
test
ja
lods
aas
add
sub
mov
sbb
in
cmp
loopne
lret
stos
fxch
pop
push
lret
out
je
mov
and
inc
mov
push
push
xchg
je
and
cmp
test
sbb
push
mov
jg
cmp
into
pop
pop
shl
stos
xlat
int3
popf
mov
add
xchg
mov
add
and
out
inc
ja
rol
jns
popf
shrl
test
push
jl
pusha
dec
xchg
push
pusha
dec
fisubl
mov
inc
dec
inc
sahf
imul
testl
mov
pop
jae
jp
inc
shrb
push
repnz
jg
outsl
push
mov
sti
pop
cmpsl
adc
mov
jno
jmp
fcomi
loop
pop
mov
cmp
sbb
fbstp
scas
sbb
mov
mov
std
fmuls
jnp
movsb
arpl
mov
jbe
insb
inc
xor
in
cmp
cmp
movsb
dec
adc
mov
mov
cmp
jg
xor
mov
xchg
test
sub
jb
in
jge
add
imul
mov
cmp
push
outsb
pop
sahf
mov
ret
pop
sti
mov
call
mov
popf
lock
sti
lret
mov
nop
cs
aad
jmp
mov
xchg
fwait
add
cli
xor
sub
gs
popf
adc
movsb
mov
not
icebp
add
inc
aas
fiaddl
enter
push
or
repnz
das
cmp
sub
out
shlb
ficomps
cmp
pop
and
push
sbb
pop
test
aam
je
and
and
cmc
cmp
push
outsb
and
rcll
and
in
sbbb
cmp
dec
outsb
je
gs
mov
inc
clc
mov
mov
sbb
lods
les
pusha
add
loop
idivb
pop
xchg
lcall
sbb
icebp
jl
and
and
lea
dec
cld
jecxz
jl
cmpsb
cmpsl
iret
fisttps
out
lods
out
outsb
mov
out
sbb
xor
and
or
aad
sub
push
xchg
hlt
insl
dec
cmp
lods
pushf
sub
ljmp
movsl
lock
mov
lock
dec
push
add
cmp
adc
mov
aam
push
cmpsb
or
test
ret
xchg
cmp
mov
and
cmp
rorl
push
push
pop
xchg
mov
mov
dec
imul
jo
arpl
xor
pop
pushf
jns
inc
imul
inc
rcl
lret
movsb
nop/reserved
cmp
and
or
loopne
adc
jmp
ret
push
test
faddl
xchg
xor
ss
fisttpl
mov
push
scas
mov
mov
notl
clc
loop
aam
cli
frstor
dec
pop
or
loop
sbb
repnz
add
sar
js
jns
push
dec
push
aaa
cmpsb
xor
xchg
dec
js
andb
jg
mov
xchg
insl
sbb
or
subl
or
mov
popa
jecxz
mov
sbb
popl
clc
jl
and
sahf
rolb
shr
mov
mov
cmp
decb
call
add
outsl
clc
inc
aas
or
push
dec
comiss
push
inc
jo
fcomps
push
nop
jae
mov
or
stc
lea
dec
cs
mov
xchg
sahf
cwtl
test
xor
cltd
loopne
out
jae
adc
jmp
arpl
shll
jge
xchg
loopne
outsb
mov
aad
pop
in
sub
outsl
mov
imul
idivl
and
aaa
pop
xorl
mov
fisubrs
dec
ret
mov
loope
and
cmp
repz
int3
rcrl
mov
lcall
in
lock
lcall
subl
xor
sub
push
jo
or
jg
push
dec
mov
aad
add
xchg
and
sbb
xlat
jp
jle
sub
mov
lcall
insl
add
lea
add
jl
movsb
in
push
push
push
stc
ja
ret
xchg
aam
sbb
inc
and
pusha
jp
inc
mov
in
mov
sub
sbb
xchg
fmuls
pop
fistpll
imul
lret
nop
aaa
iretw
insb
mov
sub
les
inc
sbb
scas
sbb
xorb
and
ss
cmpsb
jnp
popf
xor
adc
jge
jmp
push
stc
push
xchg
cmp
sar
sti
das
xchg
das
cmp
cmpsl
cmp
bound
or
jo
xchg
cwtl
ret
pusha
mov
pushf
dec
rolb
loop
pushw
arpl
call
fcmovu
shlb
or
mov
into
ret
sbb
rcrb
mov
or
push
enter
sbb
cli
cltd
movsl
dec
fwait
add
or
ficoms
lock
push
push
es
sbb
adcl
jae
arpl
inc
addb
scas
push
cmp
popa
adc
sbb
lods
and
leave
test
jo
xor
push
xor
mov
outsl
jae
shrl
xorb
fcomip
mov
cmpsb
push
aaa
and
lock
test
das
inc
add
hlt
xchg
push
mov
scas
xor
cmpsl
fstpl
and
mov
in
lea
clc
or
xchg
aam
mov
pop
xchg
adc
sub
mov
rcpps
mov
out
imul
jmp
fs
orb
ss
mov
fisttpl
or
arpl
xor
sub
add
lock
dec
sbb
bound
fstl
lret
pop
ja
inc
test
adc
test
test
test
xchg
movsl
es
hlt
sbb
xor
jnp
out
fxch
pop
and
cmpsl
cmp
cmp
or
xor
adc
jg
mov
inc
out
dec
mov
lret
pop
rorl
add
mov
mov
xor
jge
pop
and
fildll
ret
add
sti
in
jge
mov
pop
dec
sub
fstps
xchg
xchg
mov
andb
jg
adcb
xchg
inc
das
mov
jne
popf
jae
cmp
cld
dec
mov
test
imul
call
scas
jge
or
bswap
jnp
in
pop
pop
fisubrl
dec
sbb
insb
loopne
rclb
sub
scas
into
adc
xlat
out
test
cld
or
das
adc
push
xor
or
and
push
into
leave
movsl
shr
cltd
in
andl
stos
xchg
add
repz
mov
rcrl
adc
mov
cmp
add
aam
xchg
iret
push
andps
add
insl
movsl
cmp
jne
push
movsb
ret
in
mov
dec
jp
push
and
jecxz
mov
cli
mov
pop
mov
int
xchg
dec
push
out
mov
xor
rcll
adcb
in
push
mov
stos
jmp
adc
loopne
mov
dec
mov
ds
hlt
imul
cs
pop
aas
out
xorb
out
fidivrl
inc
push
insb
cltd
dec
cmp
ret
and
mov
jne
xchg
mov
ljmp
ret
xchg
add
sub
arpl
shl
fisttpl
inc
push
loop
icebp
dec
cmp
push
scas
sub
call
xor
or
add
mov
mov
sub
fwait
ds
pop
aas
and
js
xor
sbb
or
or
subb
inc
loopew
int3
sub
xor
jmp
add
sti
mov
out
sahf
dec
push
add
sbb
xchg
stos
sub
sub
mov
and
sub
lret
cmpsl
or
jne
jp
sti
cli
jae
inc
push
lds
movsb
xchg
rorl
mov
mov
cmp
add
sbb
pop
mov
xchg
cmpb
mov
nop
scas
aad
leave
jge
sahf
jns
add
sbb
push
das
xor
cs
mov
andb
jl
out
sarb
insl
jo
jno
je
and
lcall
repnz
xchg
hlt
adc
scas
xor
sub
movl
pop
cmpsl
add
inc
pop
push
repz
je
sub
push
mov
jle
sbb
or
push
mov
mov
mov
dec
add
pop
mov
imul
jle
ds
xchg
orl
pop
mov
das
cs
or
out
lahf
hlt
inc
aam
outsb
subb
nop
pop
mov
outsl
mov
xchg
sub
or
hlt
sbb
and
mov
es
and
push
inc
cmp
jge
push
or
pushf
mov
out
push
push
xchg
dec
aaa
mov
dec
outsb
outsb
insl
out
addl
inc
dec
pop
xchg
jnp
lahf
xchg
ret
add
icebp
mov
or
pop
lret
mov
fwait
std
adc
aam
inc
mov
mov
mov
leave
sahf
daa
cli
popf
pushl
loopne
aam
rclb
mov
pop
mov
imul
or
cmpsb
mov
mov
rcrb
fistpll
sti
loope
jmp
arpl
in
sub
loop
jne
jp
sahf
gs
adc
xorb
mov
push
fstps
lret
sti
inc
jecxz
stos
in
imul
jecxz
inc
push
and
es
cmp
xchg
nop
lret
jns
adc
cld
xor
pop
lods
iret
shrl
gs
ss
and
mov
popa
pop
in
jo
adc
flds
imul
fcmovnu
movsb
xor
cmp
fnsave
ss
andl
adc
repnz
jns
nop
xor
test
sbbb
gs
or
and
sti
cli
lods
inc
cmp
fnstsw
divb
ficomps
iret
mov
icebp
test
jl
pop
push
lret
xchg
mov
roll
mov
push
sbb
adc
movsb
repnz
cmp
insb
xorps
push
scas
popa
popa
mov
loope
inc
cs
fs
out
mov
adcl
mov
and
or
xlat
or
fwait
mov
mov
mov
fsubs
inc
jae
jb
jmp
lds
dec
cld
test
popa
insl
bound
shrl
dec
sbb
mov
jns
popa
sbb
jle
out
loop
lahf
and
push
int
pop
pop
inc
xlat
sbb
mov
out
lds
clc
ficoms
rorb
stos
jo
and
jo
push
inc
test
and
test
bound
push
lret
sbb
sub
push
mov
roll
hlt
xor
adc
fidivrl
jb
mov
fwait
cmp
jo
ja
jmp
jg
je
and
mov
repnz
dec
push
pop
xchg
mov
mov
iret
pushf
mov
mov
lahf
fcomps
cmp
lret
fstpl
enter
and
dec
je
repz
or
mov
lds
xchg
pop
xchg
test
js
xor
fwait
push
ss
bound
imul
sub
leave
jmp
cwtl
push
xchg
out
inc
aam
jae
sarl
push
aas
std
xchg
subl
jne
arpl
cmpsl
push
jnp
mov
pop
mov
cmp
dec
in
adc
cmp
mov
lods
and
fsubp
mov
dec
scas
fnstcw
jbe
inc
add
notb
jl
out
shrl
ss
mov
movsb
cmp
lds
ret
mov
mov
imul
mov
mov
fistpl
jmp
cld
add
add
fdivr
fistpll
xlat
faddl
je
js,pt
call
xor
lahf
stos
push
mov
call
rcrl
xor
daa
ret
xchg
adc
or
mov
mov
add
pop
push
jl
mov
bnd
aaa
dec
arpl
test
add
insb
data16
int
shlb
aad
mov
sub
or
cmp
mov
mov
cmp
cmp
roll
sbb
or
cs
mov
and
stc
mov
aam
cmp
lea
andl
mov
adc
fcoml
or
lods
repnz
je
mov
add
inc
rol
inc
scas
outsb
in
das
jb
dec
pop
aad
bound
cmpsl
loopne
or
or
jnp
hlt
cwtl
and
push
insl
cmc
and
data16
cmp
jl
sbb
repnz
xor
mov
add
inc
xchg
int
lahf
shll
sub
pushf
inc
imul
test
inc
xor
in
cld
sub
xchg
mov
clc
adc
pop
fnsave
pop
jge
adc
sbb
mov
lahf
pop
push
test
loop
addr16
pop
cmp
scas
push
inc
push
loopw
into
into
sbb
test
push
xchg
addr16
pop
add
repnz
aad
dec
add
scas
les
out
mov
cmp
cwtl
in
sub
wbinvd
in
jp
lret
dec
and
cmpsl
pop
cmp
fs
sbb
icebp
jne
orl
pop
insl
cwtl
call
mov
lret
mov
imul
sbb
pop
sub
push
cmp
dec
loopne
data16
sub
in
dec
inc
mov
imull
test
dec
enter
imul
nop
shl
and
outsl
das
and
loopne
repz
mov
lret
rcr
cs
out
repnz
and
icebp
cmp
repnz
insb
dec
insl
imul
add
push
hlt
jp
out
insl
out
xchg
cmc
jnp,pt
xor
push
aam
ds
repnz
mov
cmp
mov
test
mov
pop
into
pop
xor
fbstp
stos
mov
clc
movl
cmp
repnz
dec
sub
fmul
fcmovb
les
xorl
cmp
adc
stos
inc
xchg
ret
and
fdivs
jmp
cmp
ja
jnp
mov
xchg
sbb
fnstcw
xchg
jmp
mov
repz
cwtl
ss
adc
jbe
bound
jp
pop
add
lds
aam
and
push
or
or
stos
add
fisubs
jo
xor
lock
xor
push
lods
xor
aaa
jae
ss
and
ficomps
sbb
add
les
call
mov
fisubl
jne
daa
mov
mov
out
subb
shr
fnstcw
push
push
pop
cltd
xchg
scas
adc
inc
addr16
mov
out
mov
pop
inc
imul
in
jbe
aad
jbe
jmp
cltd
shll
push
rcrb
adc
adc
punpckhwd
aaa
orl
dec
dec
jb
jl
cwtl
hlt
push
pop
call
sarl
mov
scas
mov
pusha
sub
mov
mov
int
pusha
into
sbb
punpckldq
dec
je
dec
stos
lods
push
mov
testb
add
lea
or
push
pop
jg
mov
jg
xchg
or
arpl
xor
cmp
fwait
xor
rorl
inc
cmpsl
daa
push
fsts
cltd
cltd
sbb
adc
lods
ja
inc
xchg
and
test
xor
aaa
xlat
aam
aad
lret
jecxz
and
shl
je
sbb
xor
divb
pushf
mov
mov
pop
addl
add
lret
pop
call
pop
dec
xchg
mov
sub
dec
add
or
cmpl
adc
popf
sub
ret
outsl
dec
mov
xchg
mov
jp
fsubrs
out
imul
mov
sbb
or
orb
sbb
std
aad
adc
iret
and
aad
mov
cmp
jmp
inc
cmp
ljmp
push
pusha
cltd
in
dec
push
mov
pop
daa
mov
push
pusha
xchg
cs
sbb
ds
pushl
sbb
cltd
movsl
into
mov
loopne
maxps
test
lock
dec
pushf
fdivrl
repnz
dec
call
cwtl
ja
mov
rorb
inc
or
pop
adc
mov
pop
in
lret
pop
inc
adc
cmpl
lods
mov
jecxz
sub
fmuls
ret
xorl
in
inc
pop
pop
mov
jns
aaa
sub
aad
add
mov
mov
daa
push
xchg
mov
sbb
repz
push
shll
mov
inc
insb
xorl
cmp
fs
imul
mov
cmc
inc
sbb
sub
cmpb
jns
out
or
push
cmpsb
cld
dec
fwait
insl
mov
movsl
in
and
pop
adc
gs
mov
cltd
or
and
pop
mov
xor
test
or
dec
leave
lahf
cmp
cmpsb
add
xchg
dec
lds
mov
outsl
cltd
or
fsubl
and
mov
imul
fstl
shlb
push
call
fwait
mov
xchg
and
sub
cwtl
pop
xchg
or
inc
clc
dec
fsubrs
or
divb
lahf
lret
inc
jl
aam
repnz
loope
xchg
nop
sub
testb
inc
pop
out
push
inc
lret
mov
pop
mov
out
xchg
js
pop
iret
pushf
push
add
psrld
sbb
dec
cmp
sbb
add
pcmpeqb
fcom
dec
or
jbe
mov
addr16
fdivrp
pop
and
mov
scas
in
add
addr16
add
bound
leave
test
repnz
or
pop
ficoml
stc
hlt
repz
sti
or
fldl
sbb
fistps
pop
lock
std
lahf
lea
xor
add
xchg
lods
sbb
xor
sarl
sbb
insb
sbb
cmc
pop
mov
insl
cmp
sub
dec
dec
pusha
adc
mov
pop
lods
in
dec
iret
cmp
popa
test
subb
cmp
pop
xchg
push
popf
jge
out
arpl
insb
lret
pop
in
sahf
add
inc
mov
or
mov
out
idivl
xchg
pushf
fwait
popa
jecxz
mov
in
mov
and
mov
jns
test
push
fldenv
lds
les
dec
filds
xchg
sub
dec
orl
lods
sub
lahf
lods
outsl
add
iret
fs
aas
inc
push
add
push
fstpl
out
jae
mov
lcall
mov
les
dec
sub
and
inc
sbb
dec
jnp
jb
lods
push
dec
fistl
ffreep
jno
inc
leave
mov
sbb
mov
dec
mov
icebp
cmp
mov
xchg
je
jecxz
stos
cltd
repnz
sbbl
mov
and
lahf
dec
pop
push
and
rol
lahf
sbb
push
pusha
sbbb
xchg
lock
imul
std
xchg
or
push
mov
xchg
mov
lret
pop
fnstsw
sbb
or
add
ljmp
pop
xchg
loop
stc
fistpl
sbb
xor
lahf
push
jl
lcall
xchg
pop
repz
fnstenv
mov
movsl
orl
jmp
or
es
inc
or
andb
ja
pop
xor
jmp
pop
or
mov
jno
nop
je
adc
enter
inc
mov
pusha
divb
sbb
sahf
mov
pop
push
xor
jno
imul
outsl
imul
outsb
fwait
bound
out
insl
hlt
jecxz
fsubr
pushf
loop
test
pop
inc
or
mov
mov
jg
mov
add
xor
neg
lds
xchg
in
in
sarl
iret
in
xchg
push
xor
or
scas
bound
stos
lcall
in
push
mov
fcmove
inc
xchg
push
in
lret
cld
inc
icebp
out
incl
popf
cwtl
ja
dec
pop
ss
aas
std
dec
scas
dec
mov
fs
adc
cmp
xor
outsb
add
ret
cltd
imul
test
daa
loop
js
lret
push
sbb
inc
jbe
or
xchg
ud2
insb
xchg
or
fwait
dec
sub
jno
jp
jl
or
test
push
lea
add
popf
lds
inc
jb
jp
mov
and
fistpll
inc
dec
push
xchg
rolw
imul
lahf
div
int3
lods
xor
adc
mov
lcall
pop
cmp
xor
in
xchg
shrb
sbb
xchg
in
adc
pop
pop
xor
add
sbb
xchg
push
mov
sarl
addr16
ss
adc
sbb
jle
adc
popf
mov
popf
xor
bound
sti
repz
and
cmp
sbb
pop
int
cmp
outsl
sbb
xchg
inc
test
mov
rcll
out
repnz
pop
hlt
add
ja
adc
mov
int
sub
aaa
test
cmpsl
cmpsl
jecxz
dec
cs
push
jne
or
shlb
pop
jl
aam
push
data16
or
daa
push
iret
js
stc
cmpsl
inc
nop
cld
bound
fsubs
push
jmp
mov
imul
mov
out
scas
lret
or
push
dec
pop
fs
fnsave
pop
shr
push
dec
mov
mov
adc
lcall
adc
scas
js
inc
jne
and
stos
cmp
cmp
ljmp
xor
or
pop
addr16
bound
mov
movsb
fstl
das
mov
cmp
stos
int3
pop
xchg
aas
pop
xor
pop
imul
mov
xchg
fnsave
adc
adc
loopne
aas
notl
gs
mov
daa
addr16
or
xchg
push
jnp
pop
add
daa
xor
cmp
cltd
mov
int
and
adc
mov
jle
mov
xor
std
aam
test
aaa
movl
xchg
daa
pop
dec
movsl
bnd
clc
mov
pop
cmpsb
sahf
push
adc
and
ret
popf
sub
mov
pop
jl
jae
add
rcrl
imul
sbb
popa
mov
push
cli
sub
addb
sarl
lock
loope
in
mov
or
ficoms
rcrl
insb
jle
ror
xchg
mov
stos
in
inc
and
xchg
add
loope
daa
imul
int
je
ficompl
movsl
push
daa
jle
ss
inc
jmp
test
pop
mov
jae
addr16
cld
fstpl
insb
out
fsubl
jle
or
pop
mov
fiaddl
scas
xchg
subl
arpl
dec
js
rolb
pop
push
inc
add
repnz
aam
xlat
sbb
rorb
cmpsl
xor
fistl
cltd
ror
int3
cmp
sub
ret
ja
insl
addr16
out
sub
jae
jle
lds
dec
jne
cltd
sahf
imul
mov
jg
cvtdq2ps
fsubl
inc
jo
loopne
ds
jge
cmp
imul
sti
jl
shrb
lea
fimull
daa
fiaddl
ljmp
leave
jnp
xchg
in
adc
aam
cmp
shl
sub
data16
mov
and
adc
mov
inc
lahf
jmp
std
pop
call
addr16
cmp
inc
sub
push
test
jge
sbb
pop
lret
mov
push
lods
dec
stos
cmp
shrb
icebp
push
cmpsb
pop
lds
test
pop
mov
movsl
mov
sub
sub
repz
cmpsl
cmp
cmp
fldenv
roll
shlb
push
ljmp
dec
pop
jl
pop
mov
aaa
jp
xor
int3
or
std
xor
xlat
pop
sub
test
rolb
out
fisubrl
subl
mov
outsb
imul
cmpsb
push
push
sbb
cld
jnp
ds
scas
ja
aaa
mov
mov
cmp
fldenv
nop
mov
cmp
xchg
xor
add
pusha
fcmovu
aad
push
dec
push
push
fcomp
xchg
icebp
in
aas
cltd
push
inc
cmp
pop
or
iret
pop
ds
std
outsb
jl
push
loop
rcrb
pop
sbb
mov
pop
fnsave
cmpsl
jmp
outsl
jl
adc
call
iret
push
xchg
push
cmp
les
cmp
or
out
mov
mov
stc
loopne
imul
orb
jae
push
out
insl
jecxz
lods
mov
std
pop
mov
dec
jmp
pop
push
cmpsb
ljmp
mov
mov
shrb
sub
enter
sub
popa
add
lcall
pop
add
repz
jae
inc
stos
popa
sbb
dec
popa
fs
push
pop
xchg
paddsb
push
xchg
jg
mov
out
dec
mov
xchg
fucomip
cmp
xor
pop
and
rorb
lods
insl
incl
sub
inc
jecxz
dec
jb,pt
outsb
jmp
add
push
movsl
pop
sahf
clc
inc
addr16
ficomps
cltd
xchg
xchg
jg
inc
shlb
sarl
stos
hlt
lds
ja
adc
movsb
dec
mull
push
mov
mov
fnstenv
xchg
mov
mov
push
push
jo
jmp
xchg
push
and
mov
test
push
sbb
out
outsl
dec
push
arpl
shrb
leave
in
stos
outsb
aaa
and
cmpsb
pop
xchg
xchg
ret
xchg
pushf
cs
out
jns
adc
in
pusha
call
int3
fcompl
jge
outsl
je
shl
jl
lock
adc
cld
add
loopne
sbb
mov
pop
mov
pop
rol
inc
adc
testb
mov
fwait
out
adc
jp
mov
jge
cmp
xor
push
imul
leave
mov
mov
insb
adc
xor
movsl
dec
xchg
ret
int
out
add
hlt
lods
adcb
xor
add
jbe
movsb
inc
push
popf
mov
mov
xor
data16
xchg
in
es
mov
adcl
mov
pushf
out
in
shlb
addr16
nop
add
in
sbb
popf
dec
mov
lea
pop
and
ss
pushf
pop
addl
mov
and
inc
cld
stos
mov
jne
stos
mov
xchg
mov
out
adc
push
loop
sbb
jnp
xor
lods
outsl
xor
loop
int
jnp
test
lret
mov
jecxz
mov
jg
jbe
mov
jmp
mov
daa
push
jmp
mov
aam
test
ss
in
and
lcall
scas
in
mov
inc
push
aam
xchg
out
jecxz
add
ret
and
or
xchg
cmpsb
mov
mov
pop
data16
dec
and
sub
imul
xchg
mov
push
mov
jg
cmpsl
testl
rclb
out
cltd
enter
add
test
mov
xchg
push
mov
xchg
add
xrelease
inc
or
inc
je
loop
inc
stc
repz
mov
in
or
cs
nop
and
xchg
lods
insl
cs
pop
loope
push
test
lds
cmp
decl
pushf
clc
or
push
aas
dec
movsb
mov
shlb
imulb
inc
jmp
in
movsb
lret
mov
push
lahf
rcll
scas
adc
adc
hlt
fisubrs
ret
leave
fimuls
mov
sub
daa
stos
mov
dec
pop
sti
addl
lods
lock
or
fwait
push
push
xor
in
int
ja
mov
dec
in
bnd
subb
cmpl
mov
mov
adc
or
lahf
jno
adc
mov
add
pushf
inc
sub
xor
icebp
outsl
dec
or
pop
xchg
mov
into
repnz
lods
out
lods
scas
mov
inc
iret
xchg
mov
inc
mov
dec
mov
test
or
and
cmp
sub
ror
dec
fwait
and
into
jge
in
rolb
mov
fcmovnbe
insb
xorl
push
adc
xchg
inc
jmp
mov
jnp
xor
mov
mov
xchg
cs
into
sbb
pop
inc
push
ss
cmpsb
jmp
shrb
mov
js
call
loopne
adc
mov
out
dec
jne
lods
nop
dec
adcl
lret
adc
iret
and
add
xchg
pusha
push
rcl
sbb
sub
std
js
add
pop
mov
mov
cli
daa
lods
outsl
xor
inc
sbb
push
cs
cmp
ret
xor
or
adc
push
lea
mov
mov
pusha
jns
mov
cwtl
push
and
insl
lret
cmp
or
loopne
xchg
addr16
or
push
or
push
in
clc
jbe
push
aam
enter
sbb
inc
ret
mov
fildl
dec
mov
inc
xorb
incl
jns
lods
pop
ss
xchg
sbb
stc
adc
jns
cmpb
jl
pop
xchg
xchg
loope
popf
gs
xchg
rclb
pop
pop
rorl
push
xlat
mov
aaa
scas
or
fadds
cmpb
jb
dec
hlt
sbb
out
mull
lcall
inc
popf
xchg
sbb
push
pusha
cmp
and
inc
xor
inc
test
jl
ss
lcall
adc
hlt
dec
inc
add
outsl
test
mov
outsl
int3
insb
push
jne
pop
leave
in
add
pop
jne
sub
mov
fs
pop
lods
outsl
cmpsl
stc
push
add
pop
or
push
mov
pop
fildl
outsb
cmpsb
push
rcll
fstps
es
insb
jl
jle
andb
mov
ret
repnz
repz
push
xor
and
sub
lret
imul
fadds
jg
cltd
xchg
ljmp
ret
jns
cmp
pop
push
xchg
cmp
push
inc
add
cmp
xor
jb
inc
push
mov
lcall
mov
cmp
add
mov
scas
mov
mov
das
data16
cmpsl
xor
and
sbb
lret
mov
push
cmp
pop
scas
sub
add
mov
icebp
and
jl
xchg
xchg
arpl
xor
lret
aas
jno
cwtl
or
mov
jne
movsl
push
cs
fisttpll
xchg
test
mov
cs
or
bnd
pop
jg
out
icebp
adc
jns
add
xlat
pop
int3
cltd
mov
cmp
popf
rolb
test
nop
add
jno
movsb
fistl
push
int
iret
sub
fidivrl
sub
xor
clc
add
dec
je
push
mov
xchg
pmulhuw
xchg
xor
mov
sub
add
je
sub
fwait
pushf
push
imul
repnz
mov
std
aas
sti
sahf
ds
fstpl
pop
adc
and
mov
push
lret
xor
lock
arpl
fdivr
cs
sub
insb
pop
pushf
das
lea
inc
cmp
rolb
pop
pop
mov
mov
test
fnstenv
inc
jg
sbb
test
enter
jae
push
nop
push
mov
or
adc
aaa
popf
aad
cmp
sbb
rcll
xor
mov
jae
addr16
add
in
sub
loope
push
sub
ja
xchg
pop
iret
and
fwait
dec
addr16
ret
pop
sub
jmp
lods
cltd
out
and
ljmp
pop
int3
les
pop
jnp
stc
pusha
out
jno
imul
gs
sbb
dec
lret
adcl
inc
mov
cmpsl
in
mov
sti
fistps
idivl
adc
movb
std
sbb
xor
icebp
add
rcll
popa
mov
adc
pusha
fistl
gs
mov
aas
lods
mov
xor
cs
inc
mov
cmp
loope
into
inc
dec
xor
xchg
in
stos
outsl
test
jl
inc
push
add
and
mov
and
out
fisttps
leave
into
push
mov
je
enter
xor
pop
in
and
adc
into
pushf
out
cmc
iret
mov
lea
cmp
cmp
ficompl
loope
loope
movsb
sub
cmp
mov
js
mov
cmp
popf
cmpsl
nop
hlt
jo
push
mov
jmp
xchg
mov
ret
xor
xor
lods
jge
fwait
andl
and
popa
or
cmpsb
ljmp
fnstenv
mov
incb
jle
push
jne
data16
sub
lds
jle
mov
loope
jle
jmp
inc
mov
mov
xor
ficomps
push
xor
or
sbb
shrl
negl
out
sub
js
arpl
and
xor
aaa
mov
repz
rol
in
shll
stos
repz
push
dec
dec
mov
lds
or
popa
cltd
lret
sub
out
cli
aaa
negl
mov
es
sbb
or
in
ss
aaa
or
out
sbb
movsl
inc
dec
inc
push
out
dec
shlb
scas
pop
pop
int3
jecxz
xor
fucom
push
cmp
and
adc
add
fimuls
repz
jns
cmp
jle
add
movsl
js
rcpps
push
das
jns
dec
pop
lahf
das
sub
push
es
xchg
add
dec
out
loope
cmc
adcl
cltd
jo
jmp
jmp
aaa
xchg
iret
lods
xchg
mov
imulb
int
outsb
jmp
sbb
add
xchg
popf
adc
mov
dec
into
fdivrp
pop
cli
mov
sahf
movsb
out
ljmp
add
cmp
xchg
test
jae
stos
inc
pop
dec
pop
mov
repnz
aaa
ret
stc
into
es
sub
cmp
inc
mov
jp
daa
ret
xchg
adc
dec
jg
adc
loop
lret
add
popf
cltd
mov
rcl
xchg
and
dec
sahf
icebp
mov
les
iret
jns
pop
xor
cmp
bound
arpl
out
sbb
daa
shll
cmpsl
adc
sbb
inc
ficomps
dec
push
sub
or
out
sti
lret
adc
mov
xor
and
inc
in
dec
out
test
dec
mov
mov
sbb
dec
pusha
inc
les
cmp
dec
cmp
stos
testl
testl
int3
es
or
scas
scas
sub
xor
mov
mov
sbb
in
in
adc
sub
inc
push
xchg
adcl
dec
pushf
fstl
xor
das
sarl
ret
in
cmp
dec
cwtl
push
sub
add
mov
xor
inc
jle
mov
fs
in
push
mov
dec
lea
test
xchg
cwtl
sbb
popf
mov
pop
sub
mov
jle
cli
jns
ror
push
mov
stos
popf
scas
cmovp
pop
fstpl
jno
in
or
out
mov
popf
scas
in
pop
inc
mov
jl
mull
add
pop
jb
popf
xor
add
add
psrad
cltd
repnz
push
cmp
int3
xchg
adc
jle
sahf
jmp
jne
addr16
xchg
movsl
xchg
outsl
data16
stos
xchg
sub
test
aad
sub
arpl
cwtl
push
cmpsb
sbb
push
ljmp
pop
add
cmc
in
push
cwtl
dec
in
pop
xlat
mov
push
xor
add
mov
sbb
sbb
fld
dec
outsb
jnp
fwait
int3
out
push
lods
stos
mov
xor
push
icebp
mov
mov
lock
adc
nop
outsl
in
jne
mov
sbb
les
in
aam
mov
mov
das
aad
pop
ret
adc
scas
or
and
sbb
decb
cmp
test
aad
dec
std
and
jnp
mov
popa
test
mov
fwait
movsl
jb
daa
inc
mov
in
sub
cltd
mov
test
jg
int3
sbbb
popf
outsl
mov
loop
and
stos
cltd
sub
notb
loope
mov
pop
lret
es
repnz
inc
jge
cmp
mov
push
xchg
xor
xchg
rcrl
xchg
aaa
xor
arpl
xchg
scas
fdivrs
js
imul
test
sbb
mov
add
sbb
xchg
popa
stos
jb
test
jb
out
leave
outsb
xchg
ret
inc
mov
pop
ficoms
inc
pop
mov
std
fidivl
mov
in
sub
sahf
xchg
imul
lods
adcl
aam
dec
pop
cmpsl
lret
dec
mov
mov
sub
push
dec
les
popa
pusha
ret
loope
and
cs
add
aam
sub
out
pop
cmc
sub
jge
inc
cmpsb
cwtl
mov
dec
dec
int3
ja
add
int
pop
and
or
inc
fs
add
shll
push
cmpsb
push
cmp
mov
jno
mov
aad
cmc
mov
lock
in
loope
cwtl
sub
stos
bound
adc
xorl
cmc
xchg
fwait
sbb
loop
aas
addr16
dec
fnstsw
adc
test
aas
inc
jg
aas
mov
xor
cmp
outsb
pop
outsb
mov
in
in
xchg
adcl
jl
int3
jle
adc
inc
push
je
jge
lea
addr16
insl
xchg
leave
scas
xchg
repnz
aad
loope
mull
push
ret
ds
mov
mov
shll
jle
fstps
sbb
xor
nop
push
in
mov
imul
pop
and
pop
int3
bound
jnp
cmp
dec
adc
data16
mov
dec
jnp
xor
adc
xchg
pop
inc
and
sbb
loope
les
xor
orl
mov
leave
cli
cmc
dec
out
pop
pop
mov
inc
or
ret
vmovaps
mov
test
jbe
dec
pop
test
push
xchg
cltd
inc
fmull
xlat
out
scas
andl
ss
pop
subb
xchg
subb
out
jle
mov
daa
imul
jge
jno
ss
push
xlat
push
arpl
adc
add
jb
daa
pushf
inc
mov
out
jns
mov
jo
mov
insb
fwait
push
pop
bound
int3
cmp
or
cmpsb
cmp
gs
xor
mov
shll
mov
mov
dec
adcl
in
test
aam
sub
jno
test
mov
shrl
cmp
jbe
stos
push
xor
dec
cmp
mov
addr16
fmuls
add
clc
sub
rcrl
push
xchg
cmp
into
lahf
aad
call
pop
mov
pmullw
rol
or
add
sahf
inc
xor
add
cmp
rcl
int
xchg
pushf
or
jle
xor
pop
fwait
push
cmp
push
shlb
mov
inc
jmp
pop
mov
popa
fmuls
xchg
cmp
aam
fldt
movsl
mov
adc
scas
sbb
inc
and
pop
and
inc
lret
push
es
sub
orb
jl
fwait
cwtl
loope
ja
js
pushf
insl
movl
adc
sahf
nop
cli
push
lods
push
push
push
sub
xor
in
or
pusha
xchg
clc
push
rcrl
fldl
inc
mov
fstps
and
or
cmp
sbb
pop
lods
mov
fstpl
in
sub
orb
xor
rorb
push
pop
imul
aaa
xchg
push
in
lcall
adcl
arpl
push
aam
test
push
mov
pushf
push
clc
mov
das
add
xchg
aas
sbb
adc
sbb
sbb
add
movsl
xchg
in
xchg
testb
mov
inc
or
dec
jl
test
jge
xor
loopne
gs
add
inc
and
adc
out
jb
pop
addr16
pop
test
xor
or
and
inc
jecxz
fstpt
call
es
fmull
flds
fxch
xchg
xor
cmp
adc
repnz
mov
or
or
push
ficoms
call
xor
loope
daa
pop
jg
xchg
ret
jns,pn
fwait
add
shrl
pop
sub
pop
imul
pop
loope
outsl
test
add
mov
repnz
popf
adc
ljmp
fsubl
push
and
gs
inc
stos
xor
adc
in
sub
out
push
jno
sbb
inc
dec
mov
push
lds
in
push
cmpsl
jno
cld
adcb
jmp
test
mov
cmp
or
fistl
mov
fwait
clc
iret
fildll
xorb
push
adc
pop
aam
cmc
arpl
xor
fnsave
in
push
sub
mov
inc
cmp
das
xchg
xchg
push
pusha
push
jne
xchg
cmp
rorb
imul
mov
inc
adc
pusha
orl
nop
ds
sub
outsl
cmp
sub
xchg
lcall
scas
cmp
loopne
jge
cmp
movsl
sub
pusha
jge
push
icebp
and
push
rorb
inc
cmp
lods
pusha
ljmp
mov
ljmp
sahf
xor
cmpsb
aad
inc
ja
bound
daa
psubq
push
xchg
or
rcl
inc
sbb
sub
sbb
jnp
xchg
adc
ret
insb
add
inc
mov
mov
add
movsl
push
cmp
jg
ljmp
call
mov
xchg
push
pop
fldt
mov
mov
xchg
dec
sar
adc
outsb
jnp
xchg
call
cltd
push
pop
inc
or
cmp
push
xlat
movsb
mov
fnsave
ljmp
jl
addr16
and
idiv
out
sbb
adc
mov
mov
dec
jmp
mov
ficomps
outsl
or
popf
pop
popf
adc
mov
fwait
and
cmp
adc
cmp
push
lock
fdivrp
aad
mov
jmp
loopne
jno
rcrl
dec
pop
dec
mov
fmuls
cmp
xor
ja
dec
dec
outsb
jbe
addr16
inc
out
mov
mov
push
inc
add
aas
fdiv
ret
inc
dec
out
or
sub
ret
movl
and
xchg
lret
mov
aad
sub
pop
pop
jb
ja
out
add
dec
jno
lock
add
adc
in
xchg
loopne
sbb
push
cs
ret
jp
call
ds
in
jne
out
ja
sub
pop
inc
cmpsl
loopne
adc
dec
inc
add
pop
cltd
push
outsb
repnz
cmpsl
push
cmc
addr16
stos
cmp
lods
cmc
mov
jg
mov
jo
sbb
cld
adc
in
je
flds
outsl
shll
xor
or
xchg
sub
jo
ds
cmp
leave
popa
loope
cmpsl
and
ret
xchg
icebp
cli
xor
movsl
xor
call
cli
repz
test
and
lret
out
aad
insl
or
or
call
sub
test
popl
cmp
ja
and
xor
fdivl
fsubs
inc
push
push
gs
popa
dec
pop
jbe
inc
xchg
cli
jl
dec
jae
sub
mov
mov
mov
out
xchg
cmp
addl
add
jmp
jbe
jae
dec
enter
imul
in
repnz
adc
lds
mov
stc
push
fstpt
lcall
and
jg
imul
enter
jnp
or
fisttps
push
testb
repz
mov
cmp
mov
mov
adc
out
loop
push
sti
push
xor
xor
mov
xchg
and
sub
in
sbb
mov
pop
hlt
xor
outsb
out
lock
inc
in
inc
or
xchg
test
rorl
ljmp
das
jnp
js
out
imul
je
outsb
or
adc
into
push
stos
and
arpl
shlb
pop
dec
mov
mov
cmp
lret
xchg
mov
ljmp
inc
dec
fucomp
mov
cmp
xchg
mov
xor
scas
loopne
xorb
mov
mov
cmp
dec
sbb
sub
xor
cmc
fwait
cld
xchg
imul
shlb
add
stc
in
cwtl
in
jmp
adc
lret
inc
push
mov
sbb
test
lahf
push
push
sbb
jo
mov
mov
lds
sub
pushf
pusha
xchg
int3
xor
shlb
push
push
jl
pop
xchg
add
cs
and
iret
repz
aas
and
mov
loop
adc
rorb
movb
leave
jb
dec
ds
pop
push
inc
sub
add
clc
lcall
setnp
out
mov
xchg
sbb
pop
mov
xor
test
xchg
sbbl
mov
cmp
mov
testl
ret
mov
jle
aad
loope
test
std
push
in
sahf
pop
inc
adc
jne
jp
pop
mov
inc
icebp
add
push
mov
ja
sbb
jl
repnz
es
sub
jo
ja
cmc
sub
sbb
push
jmp
in
add
fwait
push
stc
mov
loopne
out
in
mov
lds
adc
xchg
pop
enter
scas
sti
ja
jge
ss
js
pusha
dec
mov
add
imul
cli
xor
sub
inc
xchg
loopne
cmp
fucomip
dec
je
jns
subl
inc
cmp
sbb
mov
sbb
outsl
mov
insl
ret
mov
sti
inc
ja
sbb
pop
lcall
out
adcl
mov
sub
inc
clc
dec
jmp
sbb
aas
test
jmp
sbbb
push
inc
and
cmp
aaa
adc
test
and
sub
dec
cltd
push
xor
xor
xchg
dec
mov
xchg
or
push
mov
addb
jmp
lahf
push
iret
popa
or
jge
int3
adc
add
mov
inc
jno
push
jbe
pop
add
outsb
push
mov
mov
mov
sub
mov
inc
cltd
cmp
lcall
mov
inc
jmp
adc
movsb
add
jp
pop
xchg
data16
lahf
cmp
aaa
bound
fsubs
out
push
xchg
in
ljmp
lcall
cwtl
pop
mov
fdivl
push
loope
fs
sahf
int
jge
or
xchg
sti
dec
into
inc
mov
mov
clc
insb
scas
je
dec
or
jnp
push
scas
xchg
add
iret
mov
addl
pop
lret
cmc
mov
cld
out
fwait
mov
cmpsl
test
cmp
je
outsb
jp
jge,pn
sbb
or
sti
mov
mov
mov
push
adc
adc
aaa
insl
imull
xor
mov
popf
addr16
sbb
lret
cld
push
cmp
popa
xchg
push
cs
fdivl
jbe
push
jnp
outsl
mov
faddl
add
inc
adc
mov
mov
add
cmp
lahf
movb
sub
andl
push
sbb
in
adc
mov
add
jp
jmp
sbb
stos
push
aam
inc
sbbb
mov
mov
lods
icebp
shll
jle
xlat
push
lds
dec
test
inc
xor
rclb
mov
arpl
in
push
js
mov
push
mov
cwtl
enter
adc
dec
jns
lock
push
loope
insl
jno
pop
jl
popa
sub
sbb
imul
jb
or
mov
fwait
push
cli
shrl
mov
int
cmp
cmp
xchg
out
fwait
cmp
xor
insl
flds
fidivrl
jge
or
movsl
adc
jb
xchg
outsb
jle
xchg
xchg
lcall
push
dec
push
pushf
push
mov
jo
not
jmp
sbb
loop
and
mov
out
mov
nop
or
negb
pop
xor
cld
cmp
lcall
lea
push
jmp
fdivl
push
out
sub
cmp
sbb
xor
lret
pop
movl
aas
std
cwtl
mov
ds
mov
cs
push
scas
jne
jne
add
daa
mov
jecxz
cmp
inc
sbb
scas
mov
outsl
mov
je
es
sahf
cmovl
cs
cltd
bound
jns
fsubrs
and
or
xor
adc
cmp
mov
stos
imul
dec
xlat
pop
scas
push
push
ror
pop
push
cmp
mov
inc
imul
mov
mov
or
mov
insl
inc
push
pop
and
insb
cmp
xor
jne
cmp
testl
test
inc
testl
loope
xchg
divl
ds
mov
jns
dec
lret
mov
push
pusha
jmp
hlt
inc
dec
into
dec
mov
into
sub
and
gs
cli
out
push
jl
mov
jecxz
jnp
ljmp
outsl
inc
adc
and
pop
insb
ss
int3
insb
cmp
iret
rorl
repnz
dec
jno
sub
xorb
push
adc
cmc
dec
imul
je
mov
add
loopne
rcll
pusha
xchg
or
gs
xor
inc
push
xlat
mov
mov
or
in
push
cmp
pop
push
push
ljmp
imul
xchg
popa
push
inc
jo
xor
jns
lret
es
and
jno
cld
add
pop
hlt
iret
inc
sbb
pop
sbb
mov
shll
fistps
pusha
pop
and
jge
or
sub
ljmp
cvtps2pi
in
push
or
xchg
loopne
mov
lea
test
cltd
fs
insb
loope
and
push
fnstcw
xchg
xchg
and
int3
fildl
incl
sbb
call
movsb
std
pop
add
and
push
push
repz
outsl
pop
cmp
in
and
xor
fadd
xchg
inc
mov
lcall
rclb
ljmp
sahf
lods
inc
mov
arpl
sub
loop
daa
cmp
push
xor
dec
mov
mov
pusha
mov
fbstp
in
icebp
push
mov
pop
cli
sub
add
testl
lods
shl
mov
mov
cmp
lcall
pop
cmp
mov
mov
mov
sti
aaa
pop
xchg
dec
pop
out
xchg
dec
or
push
lret
sbb
sub
jno
jmp
or
dec
fists
jo
or
push
cmpsb
or
or
rcrl
adc
or
mov
pop
mov
ja
js
inc
out
pop
insl
mov
sbb
out
adc
nop
into
loop
shlb
addr16
adc
and
sarl
rorl
hlt
jg
dec
arpl
jg
push
loop
or
into
ret
mov
adc
xor
dec
or
cmp
jl
imul
jp
xor
adc
mov
push
sbb
mov
mov
dec
lods
jne
jbe
cld
push
xchg
pop
mov
fdivs
push
inc
lds
test
sbb
clc
rol
sub
xor
add
pop
add
in
fcom
cmp
dec
dec
mov
jl
sub
fs
push
sbb
in
in
fcoml
xor
and
pop
je
scas
popf
sbb
cltd
sub
data16
xchg
jns
adc
mov
jbe
jmp
jb
cltd
sbb
aas
jl
sub
test
adcl
ret
ficoms
xor
adc
push
jne
popf
push
or
mov
or
xchg
dec
gs
sub
popa
xchg
inc
lret
add
cli
dec
ret
push
pushf
sar
push
in
xchg
mov
out
sbb
sbb
hlt
dec
fucom
sahf
sahf
cwtl
jne
mov
pushf
in
push
icebp
and
rol
push
mov
ds
xchg
and
adc
in
push
add
insl
hlt
xorl
notl
sti
cltd
dec
fcoms
push
push
test
test
imul
push
mov
in
add
jno
lods
adc
xchg
dec
push
sbb
sub
fdiv
loopne
and
dec
ret
jb
mov
push
nop
push
imull
jo
addr16
jp
push
ds
xchg
stos
imul
mov
outsb
aam
stos
xchg
loopne
push
dec
pusha
adc
movsb
sti
mov
fcoms
iret
and
push
loopne
divb
inc
push
loope
pop
jo
outsl
mov
int
sub
add
scas
mov
jecxz
out
ss
add
dec
rclb
cmp
loop
mov
xor
bswap
and
and
xchg
imul
fs
inc
loopne
sbb
pop
insb
iret
push
or
add
test
pop
inc
test
xor
test
mov
add
lcall
in
mov
mov
fadds
popa
jns
out
or
mov
lahf
push
cmp
push
lds
jo
daa
inc
push
inc
xor
add
lds
push
xor
sbb
iret
outsb
je
push
mov
pop
and
push
push
mov
mov
nop
repz
adc
adcb
sbb
adc
movsb
jg
xchg
cmp
std
jle
popa
xchg
scas
sub
mov
insb
mov
test
xchg
movsb
xchg
test
pop
jne
jnp
cmpsb
or
jo
push
nop
les
adc
fidivrl
enter
inc
cmc
jge
jp
test
in
add
mov
sbb
or
ss
dec
add
test
lret
xor
add
jle
mov
mov
fs
jbe
mov
jo
repz
lea
pop
notl
push
lea
das
pop
stos
xchg
inc
movsl
pop
cmp
sbbb
jmp
pop
sub
orl
inc
cmp
and
push
and
adc
lea
or
cld
int3
pop
jno
pop
fdivl
test
xor
cli
aad
pusha
filds
add
jg
xchg
sbb
adc
dec
jns
loop
xchg
inc
push
inc
data16
scas
mov
shll
sbb
inc
push
daa
pop
sub
popa
xor
sbb
xchg
scas
add
xlat
aam
call
mov
pop
int3
outsl
insb
fs
sbb
sbb
lcall
mov
stos
imul
pop
jb
movsb
push
outsb
inc
das
insl
sar
lods
inc
movsl
fs
cmp
pop
loopne
stos
sub
imul
faddl
mov
add
push
mov
jmp
lret
or
fstpt
mov
pop
in
fnsave
jecxz
imul
mov
aaa
aaa
int
add
fdivs
or
ret
cmpl
pop
std
into
or
dec
pop
dec
xor
adc
and
cmp
mov
lock
or
aaa
pop
push
mov
mov
push
ror
sub
sub
cmp
shll
out
sahf
movsb
and
rclb
xchg
inc
adc
stos
and
loope
sti
pop
push
test
daa
ss
insb
jnp
adc
mov
stos
lock
sub
mov
and
dec
and
in
insl
push
scas
and
sub
jbe
fimuls
cmp
pop
cmp
inc
inc
out
xor
insl
xchg
hlt
scas
and
or
jbe
push
data16
and
test
dec
fistpl
jae
daa
addr16
les
jnp
add
sbb
ja
mov
mov
cltd
push
xchg
es
int3
dec
cmp
dec
or
mov
push
push
sub
lea
in
je
ror
sbb
sbb
pop
bound
nop
repnz
jl
adc
aas
add
mov
or
in
js
push
rcll
fsubrl
cmpsl
jmp
fucomi
sti
bound
leave
jns
sbb
push
les
rcrl
mov
pop
pusha
imul
sub
ss
movsb
cmp
dec
mov
sahf
mov
jl
in
inc
data16
scas
addr16
cmp
push
cld
xchg
mov
cmp
jmp
xorl
rcr
ja
adc
fistl
xor
xchg
dec
pop
fs
in
cmpsl
pushf
test
repz
mov
jbe
and
cld
cmp
dec
jne
je
mov
push
cmp
icebp
xchg
jne
aaa
movsl
mov
iret
insb
and
mov
fsubl
sbb
push
scas
cmp
push
nop
int3
rcll
sbb
push
mov
dec
arpl
sub
aas
jmp
sahf
sbb
sub
pop
jb
dec
mov
push
adc
add
lds
mov
bound
push
adc
push
and
sub
daa
xor
cmp
repz
outsl
dec
addr16
cmpsb
mov
cmp
mov
lea
inc
add
sub
pop
mull
fwait
mov
inc
mov
add
lcall
pop
ret
lcall
xlat
inc
scas
sub
and
adc
sarl
int3
jbe
adc
pop
mov
lds
cmp
jbe
cmpsb
inc
inc
jg
sti
stos
ret
fisttps
sub
jno
push
ljmp
xor
pop
out
cmc
jge
xchg
jb
in
popf
call
sub
fadds
js
lock
push
cmp
pushw
inc
orb
xor
mov
push
mov
fcomi
xor
hlt
sbb
rorl
daa
filds
cmp
popf
ficoml
clc
fidivrl
mov
int3
sub
mov
inc
in
xchg
fsubp
push
loop
xor
push
dec
ds
int
cmp
sbb
repnz
in
lcall
sarl
call
and
add
popl
xchg
dec
pop
sub
inc
xor
ja
insl
addl
mov
dec
scas
arpl
lock
dec
lret
nop
dec
jl
cmc
fwait
cmp
stos
cmpsl
mov
ss
xor
aaa
nopl
push
or
fidivs
insl
add
outsl
out
test
pop
pop
test
mov
adc
and
int
into
mov
sahf
and
jb
sub
rep
add
add
int
in
xchg
dec
adc
mov
push
ss
xchg
loopne
xchg
dec
jne
adc
sbb
mov
mov
mov
jne
or
and
test
enter
mov
sbb
inc
xor
ret
inc
ss
jmp
jae
movsl
insb
pop
fcompl
mov
add
in
fs
and
jno
enter
push
loopne
int
movsb
addr16
in
call
popl
push
jp
lds
cwtl
pop
push
cmp
jle
dec
cltd
add
sub
arpl
mov
mov
ds
fmuls
stos
test
jo
push
dec
inc
sbbb
inc
cs
add
cmpsb
in
addl
repnz
aad
mov
mov
dec
jne
and
sbb
int3
arpl
popf
ss
add
mov
sub
andl
pop
push
lret
movsb
mov
sbb
jbe
orl
xchg
mov
cmp
mov
jl
in
aam
pop
out
sub
cs
mov
in
lock
or
push
and
dec
jmp
loop
adc
dec
mull
and
or
pop
jbe
xchg
bound
loopne
xchg
daa
repz
mov
pop
mov
jbe
cmpsb
mov
stos
in
imul
adc
adc
aaa
rorb
or
call
jbe
fnstenv
jae
mov
cld
hlt
outsl
dec
jl
sbb
inc
xlat
in
and
or
test
ficoml
ret
push
jecxz
movsb
rorb
out
sahf
cmpsb
std
inc
or
loopne
sub
data16
fisttps
dec
fwait
xor
cmc
test
int
pop
mov
aam
mov
fdivrs
lds
and
lods
jg
cmp
xorl
in
out
loopne
xor
inc
inc
loopne
scas
icebp
pop
das
dec
push
sbb
xor
insl
xor
shll
rcr
ret
mov
push
pop
cmp
aaa
jmp
add
inc
clc
pusha
push
add
lods
icebp
add
shll
daa
incl
xchg
pop
cmp
sti
dec
daa
dec
divl
hlt
shl
sti
and
pop
or
and
push
mov
das
test
std
inc
mov
nop
xor
dec
xor
jo
out
mov
fcoms
and
mov
test
in
push
data16
xor
outsb
ja
lods
lea
subb
push
loop
nop
pop
mov
dec
jg
cltd
jp
xlat
mov
in
sar
dec
insl
into
ret
inc
out
out
insb
sarb
mov
scas
mov
test
mov
in
xchg
mov
or
popa
pop
pusha
incb
xchg
repz
pop
fstpl
insb
mov
dec
pop
cmp
xchg
imul
cld
mov
and
arpl
jo
in
ret
mov
cwtl
or
int
push
int
in
iret
cmp
filds
ret
mov
stos
outsl
subl
in
pop
out
incl
mov
cs
push
jo
pop
mov
pop
into
clc
mov
std
punpcklwd
js
adc
and
xor
cmp
pop
xchg
jno
popa
or
xchg
mov
and
pop
mov
xlat
mov
and
scas
in
push
arpl
jecxz
addr16
int
dec
push
push
sbb
rclb
in
pushf
test
push
nop
cmp
and
add
sbb
pop
stos
mov
jg
ret
xor
out
jmp
and
dec
in
dec
dec
sub
or
shll
ret
mov
add
std
mov
dec
insl
and
lock
lea
mov
iret
cs
or
mov
pop
cmp
lds
out
and
jp
pop
ljmp
mov
mov
pop
in
shll
in
int
dec
mov
pop
cli
sbb
rep
jmp
test
sub
nop
jne
sbb
jg
mov
cmpsb
mov
int3
ss
cmpsb
enter
adc
scas
dec
add
inc
jp
push
pop
pop
add
loopne
inc
icebp
mov
push
sbb
gs
mov
sbb
mov
shrb
inc
mov
and
daa
out
into
lret
rcll
jg
add
add
aas
test
cmp
push
lea
js
out
xor
clc
addr16
data16
iret
and
mov
lret
shr
jb
ret
fwait
adcl
lods
push
xor
orb
xchg
daa
or
push
mov
or
jl
cmp
and
sub
in
xchg
pop
fnstcw
cmc
sbb
jbe
xchg
adc
adc
jae
and
aaa
push
xchg
sbb
inc
das
jl
aam
negb
pushf
push
jl
scas
dec
lods
or
xchg
lock
shr
and
imul
jl
xor
js
mov
rcrl
call
clc
and
xchg
or
xchg
push
mov
and
mov
push
lahf
loopne
mov
aam
xchg
xlat
es
xchg
xchg
mov
mov
scas
cltd
cmp
cmp
leave
and
inc
adcl
mov
pop
lret
xor
sar
stos
xchg
cli
fsubs
add
adc
fs
mov
mov
js
int3
icebp
sub
pusha
cmp
inc
aam
mov
dec
imul
insb
lahf
pop
mov
sbb
movsb
into
jg
cltd
mov
mov
das
ja
cltd
into
push
xchg
jecxz
std
cltd
jg
icebp
pop
orb
push
push
xchg
stos
fmul
dec
call
hlt
xchg
ljmp
jbe
pop
adc
int
push
fidivrl
in
stc
sbb
dec
inc
adc
mov
jbe
sahf
test
fcmovnb
and
mov
adc
lret
mov
cmp
pop
testb
je
insl
inc
and
mov
out
ja
xor
cmpsb
push
repnz
insb
test
sub
cltd
cwtl
cmp
mov
out
cmp
mov
call
aam
pop
out
fisttpl
dec
or
push
add
imul
push
jmp
lcall
es
pop
daa
fdivrl
gs
movsl
jnp
or
sub
xchg
stos
jl
jg
sub
mov
stos
daa
sub
les
ja
lds
nop
movsl
out
inc
pop
pop
in
push
movsl
cli
in
rcll
xor
xchg
inc
jo
push
and
andb
test
push
mov
adc
sahf
outsb
xor
rcr
jmp
mov
pop
comiss
fildll
pop
sbb
xor
inc
cli
cltd
mov
std
sbb
int
sbb
xlat
mov
mov
push
rorl
insl
push
lea
inc
dec
lods
xchg
lret
lahf
cwtl
mov
out
int
and
cltd
push
push
xchg
stc
fdivrl
xor
insb
out
and
jno
sbb
ja
shrb
and
mov
xor
or
add
mov
fsubr
insl
sub
mov
or
mov
jge
das
mov
out
push
xorb
insl
or
xor
and
mov
hlt
fdivs
adc
push
ja
in
mov
mov
subb
xor
fstl
mov
mov
insl
mov
mov
test
push
cld
sbbb
pop
adc
dec
js
je
mov
je
rcl
bound
lock
jmp
cmp
and
loopne
or
pusha
cmp
inc
ret
add
addl
in
mov
xor
pop
dec
mov
mov
xchg
lods
or
mov
jb
add
rorl
xchg
mov
jle
insb
jg
jmp
call
loopne
mov
mov
jg
ret
ljmp
pop
pop
lods
pop
sub
mov
clc
mov
lahf
adc
fdivr
pop
mov
mov
dec
xchg
sub
sbb
xchg
lcall
imul
popa
jg
fdivrs
adc
cmp
fsubs
push
into
inc
test
mov
insl
testl
sbb
xchg
cmp
xchg
cmp
int
lcall
sub
popf
mov
jns
jb
sbb
pushf
adc
push
or
xchg
push
std
pop
dec
std
out
jp
jg
and
jnp,pn
es
jne
clc
xchg
xor
jmp
mov
lods
xor
and
jl
enter
push
push
popa
add
lahf
scas
dec
adc
insb
push
inc
xchg
cwtl
mov
pop
xor
rcr
cltd
aad
or
stos
arpl
loop
dec
das
or
add
dec
pop
sub
mov
cmp
xchg
pushf
insb
push
xor
aaa
int3
jb
cmp
fnstsw
and
mov
shlb
push
push
insl
sbb
mov
imul
jne
jnp
sysenter
movsl
scas
out
add
jb
sub
lods
jne
addr16
and
add
stc
add
add
fistpl
sub
fldt
dec
popa
sub
test
inc
jno
dec
std
add
imul
imul
push
lret
loopne
outsb
lods
pop
adc
sub
xor
jmp
ss
lahf
pop
in
sahf
dec
fucomip
ror
ds
add
clc
inc
cmpsl
sub
repnz
and
in
fcoms
popl
pop
sbb
add
mov
push
pop
inc
bound
push
mov
outsb
aas
jl
fsubl
pop
add
pusha
cld
dec
out
clc
jle
mov
in
nop
sarl
es
add
sbb
out
fsubrp
dec
xchg
stos
cmp
sub
insb
xor
cli
cmp
mov
mov
mov
fs
ljmp
int3
sub
sbb
xlat
xchg
sub
inc
outsb
and
inc
pop
repz
cmc
fnsave
xchg
sbb
ret
adc
mov
or
repz
lcall
sbb
and
ret
fxch
xchg
mov
sub
or
int3
push
daa
jg
lds
cltd
dec
xor
dec
test
mov
push
stos
test
stc
xchg
add
push
negb
ljmp
ds
test
mov
test
leave
fadd
lret
mov
sub
jne
push
adc
test
lret
pusha
push
inc
test
mov
pop
sarb
mov
cmp
sub
mov
es
mov
sub
jp
pop
sub
pop
popf
pop
push
enter
and
sarl
push
and
std
addl
sub
rclb
mov
mov
das
push
cmp
inc
js
xor
xor
cld
cmp
cmp
mov
push
leave
and
lock
in
mov
ret
les
in
shll
add
jb
pop
xor
inc
mov
jmp
sbb
mov
pop
push
stos
pop
nop
adcl
nop
adc
jb
imull
cmp
jne
ds
pop
test
and
lea
push
mov
push
cmp
jecxz
mov
unpcklps
clc
jo
in
or
xchg
add
ret
xchg
and
sbb
mov
cmp
inc
inc
pop
shll
cmp
cmpsb
std
mov
cmp
xchg
cmp
cmc
mov
lahf
mov
out
pop
fwait
pop
push
cmc
sti
cs
dec
movb
xchg
out
mov
js
fmuls
inc
loop,pt
xor
and
or
rcrl
pop
cli
into
fidivl
mov
mov
inc
scas
pop
mov
popa
int
dec
nop
loope
sbb
cmp
push
xchg
mov
push
shll
mov
test
push
xorl
sbbl
dec
add
repnz
jnp
ret
sbb
sub
arpl
jmp
push
into
aam
cs
jle
je
lods
movsb
out
sbb
xchg
sbb
in
and
adc
fidivl
stos
sub
cltd
dec
rcrl
andl
ljmp
mov
cmp
lahf
jecxz
test
js
stos
test
cmp
cmpb
iret
dec
bound
cmc
in
inc
jb
adc
mov
sbb
and
mov
addl
dec
jae
adcl
xor
dec
sbb
fidivl
adc
mov
cli
mov
imul
ret
lock
fs
lock
dec
int
pop
xor
mov
fisttps
cmpsb
insl
dec
mov
or
xor
enter
scas
push
push
or
scas
pop
cs
mov
mov
pop
dec
xor
out
decl
xchg
sub
mov
fs
mov
aas
mov
xor
js
push
xlat
mov
lahf
popf
cmp
jns
cltd
aas
pop
mov
and
sbb
lock
insb
idivl
lea
aad
pushf
push
in
test
mov
sbb
jecxz
inc
push
jae
inc
jge
test
jo
pop
sub
inc
popa
lds
inc
xlat
sti
push
fildl
fldenv
aam
and
pop
inc
movsb
div
mov
insl
jl
in
mov
movl
cmp
js
outsl
ja
daa
je
cmp
scas
fistpll
mov
in
jp
jge
fcmovb
iret
sub
xchg
int3
movsb
test
inc
jae
or
fsubl
or
or
jp
cmp
in
movsl
les
cmp
out
js,pn
je
mov
inc
arpl
mov
popf
dec
dec
push
js
test
std
int
test
jne
fwait
mov
nop
mov
inc
scas
push
loopne
add
sbb
in
out
in
jg
insb
sahf
dec
lcall
adc
adc
mov
mov
sub
lahf
shll
loopne
js
mov
push
out
pop
daa
ficoms
loope
sub
add
lock
in
xchg
mov
leave
shlb
mov
fidivrl
xchg
out
incl
fidivrl
inc
dec
js
sub
in
sahf
mov
sti
ljmp
mov
adc
andl
sub
pop
js
jns
add
dec
sub
out
lea
xchg
sbb
mov
ss
les
sahf
je
inc
lahf
cmp
sub
shll
inc
or
pop
inc
or
icebp
outsl
mov
sbb
repnz
nop
xchg
jmp
sub
cli
add
cmpsb
gs
loopne
dec
sarb
add
sbb
push
test
and
insl
jnp
mov
mov
testb
jle
lcall
jns
push
iret
std
jp
lods
mov
decb
push
lods
ret
mov
mov
dec
inc
cmp
adc
das
stos
daa
xchg
or
mov
cmp
push
clc
or
xor
leave
stos
xlat
enter
and
out
inc
fimull
mov
dec
adc
lods
mov
push
ret
and
mov
mov
dec
cmp
jo
cmp
cs
cmp
mov
addl
daa
into
add
ja
repnz
dec
into
cmpsl
pop
cmp
daa
test
and
pop
scas
incl
adc
call
fisubrl
inc
pop
ja
neg
icebp
add
xchg
imul
mov
in
xchg
loop
ret
push
lret
cmpsl
sbb
lret
add
decb
int3
fbld
fwait
test
pop
inc
fs
movsl
cmp
stos
pop
sbb
andb
mov
arpl
out
gs
cmp
sahf
aam
xlat
xor
xor
mov
imul
out
outsb
addr16
xor
mov
push
mov
mov
bound
sbb
hlt
sti
push
cmp
adc
dec
xor
jnp
adc
pop
xchg
pop
or
or
inc
and
stc
sbb
std
add
divb
shrb
leave
pop
dec
pop
mov
mov
jle
out
arpl
and
pop
add
mov
iret
cltd
popa
push
inc
loopne
int3
out
adc
jmp
mov
ror
imulb
inc
addl
incl
mov
inc
repnz
rorl
pop
jne
push
sarl
mov
sbb
mov
sbb
xor
mov
mov
pop
adc
jge
cltd
dec
xchg
sub
mov
sbb
mov
ljmp
mov
add
inc
dec
add
xchg
add
fidivl
int3
shll
and
inc
shl
rcrl
mov
cwtl
or
loopne
xchg
xchg
dec
das
daa
inc
out
xchg
orb
cld
fucomp
mov
addr16
outsl
mov
xor
enter
push
bts
loop
inc
std
sbb
arpl
jnp
dec
cmp
push
lret
mov
pop
and
repnz
mov
pop
adc
bound
movsl
jae
lea
into
jns
pop
pop
cmp
jge
ret
xchg
push
sub
lea
pop
mov
fucomi
sub
inc
out
push
pop
push
mov
xchg
aas
scas
adc
out
mov
mov
aad
push
cmp
lods
push
js
and
adc
and
mov
jge
sti
dec
shll
cmp
and
in
jl
mov
sahf
jno
fs
sub
gs
mov
pop
xor
int
dec
pop
dec
pop
test
xchg
rorl
xor
inc
adc
movsl
jns
mov
sub
inc
jae
cmp
fnstsw
mov
nop
inc
fs
pop
popf
cmc
jmp
jnp
or
adc
inc
sub
mov
movsl
shll
cmpsl
and
ss
jp
push
clc
add
movsl
pop
xchg
pop
cmpsl
aad
jecxz
jne
leave
jae
mov
mov
jno
push
les
fs
cld
pop
mov
cmp
pop
xor
jge
outsb
jecxz
jbe
pop
sahf
cwtl
push
inc
mov
ja
or
adc
test
sbb
ret
lahf
test
aas
adc
cld
ret
xlat
mov
push
inc
jo
mov
mov
sub
jecxz
shrb
push
insl
in
rcr
mov
out
jle
into
mov
aaa
xor
divl
lahf
mov
pop
inc
punpckhdq
mov
and
sub
add
sbb
mov
jg
aad
aam
mov
inc
pusha
leave
fistpll
rorl
jns
mov
mov
add
and
cli
inc
loopne
movsb
repnz
sub
push
cwtl
in
sub
mov
aaa
cmp
gs
jmp
test
int
rcr
mov
add
into
add
mov
xor
mov
adcl
dec
dec
sub
xchg
testl
mov
call
jns
mov
jge
std
rorb
test
loopne
mov
or
mov
sub
xchg
ret
nopl
pop
inc
mov
dec
cmp
sub
jmp
fldl
cmc
outsl
jbe
jb
lock
insb
leave
cmpl
cmp
inc
imulb
xchg
jmp
popa
movsb
sub
rcll
jle
mov
pop
mov
or
and
cmp
or
and
data16
cld
xor
iret
ret
shlb
das
fdivs
push
sbb
xor
mov
xor
stc
inc
jnp
popa
add
mov
inc
adc
das
jl
insl
jg
inc
push
dec
inc
xor
or
xchg
inc
fdivl
aad
lahf
sti
jmp
fst
xorb
movsb
pop
sub
cmp
dec
mov
inc
and
aam
jns
out
out
je
mov
mov
dec
xor
mov
sbb
lds
mov
cmpsb
xchg
negb
out
dec
cld
lock
clc
mov
xor
jo
idivl
daa
call
ljmp
push
push
mov
int
inc
ror
insl
dec
movsb
out
dec
rcr
pushl
pusha
adc
xchg
gs
icebp
data16
mov
cmpsb
mov
es
jl
adc
sub
outsl
inc
mov
add
inc
lahf
mov
imull
pop
inc
enter
cmpsb
dec
in
ret
out
mov
pop
mov
movsb
popa
and
stc
and
cmc
sar
call
insl
mov
dec
and
xor
aad
outsl
imul
lods
inc
mov
push
xchg
inc
stos
mov
out
mov
cmp
mov
xor
and
std
movsb
and
xchg
scas
aaa
lret
addr16
stc
dec
xchg
jb
sub
xchg
shll
xchg
jb
mov
push
into
imul
add
dec
sbb
in
and
xlat
mov
imul
dec
pushf
repnz
dec
je
sub
int3
aam
stc
shl
dec
xchg
mov
testb
xor
outsl
add
cmp
add
fs
mov
mov
inc
jnp
mov
test
xchg
xor
sub
js
shl
arpl
lock
mov
jmp
mov
rcrb
sahf
rclb
scas
mov
pop
negb
in
jl
push
xor
mov
push
push
scas
shr
rcrb
cmpsl
cltd
ret
mov
pop
push
lahf
push
in
sub
bound
and
ljmp
stos
mov
int3
rclb
dec
or
mov
sar
pop
mov
imul
add
sub
shlb
stos
popf
inc
ss
outsl
pop
cmpsb
sbb
notl
lock
xchg
adc
shll
jmp
sarb
jo
ret
cmpsl
mov
add
push
xchg
js
push
cmp
dec
nop
aas
adc
sti
adc
xchg
sbb
cmp
cli
aaa
outsb
xchg
jo
fxch
inc
das
push
jnp
inc
lret
mov
fcompl
out
and
cmp
shl
adc
push
mov
dec
ja
mov
pop
pop
fistl
and
mov
jle
sub
hlt
push
xchg
cmpsl
adc
add
push
dec
fists
cmp
icebp
adc
ret
and
aad
mov
out
dec
in
clc
mov
adc
incb
cmpb
cmp
ret
dec
hlt
and
dec
ret
icebp
shrb
push
mov
or
mov
or
push
lods
inc
call
leave
or
inc
cli
and
pop
inc
ja
dec
lea
ds
adcl
divb
subl
mov
mov
dec
lret
mov
jnp
fwait
mov
clc
je
mov
xor
clc
or
dec
test
pusha
push
iret
sub
sbb
cs
in
mov
cmp
add
mov
mov
add
add
mov
jge
pushf
or
scas
decl
mov
imul
lea
xor
and
scas
imul
pop
les
fadds
sub
jl
xchg
mov
popf
ljmp
imul
jo
inc
mov
lcall
jg
push
mov
pop
mov
cltd
loope
dec
xor
vpxor
iret
imul
mov
aaa
cwtl
pop
enter
les
popa
sub
cs
call
adc
fsts
and
xchg
popf
idiv
in
out
mov
rcrl
int3
lahf
repz
popa
pushf
in
std
outsb
inc
xor
jno
fidivs
leave
testb
dec
sub
test
adc
pop
jl
jns
dec
jge
inc
call
int3
lods
cmp
mov
lcall
pop
mov
imul
loopne
aas
jecxz
adc
jnp
and
sbb
loop
xchg
pushf
jnp
sub
inc
push
jl
or
lahf
push
inc
aad
pushf
addr16
or
cs
jae
stos
jnp
mov
outsb
jne
not
sbb
inc
xchg
cmpsl
lds
mov
outsb
push
push
fwait
rcrl
mov
jns
insl
dec
jno
and
push
cmp
outsb
imul
mov
out
stc
xchg
sub
fstpl
push
add
jae
mov
dec
push
dec
mov
jmp
in
or
fs
stc
pop
rolb
mov
sub
pop
fbstp
mov
fbstp
inc
sbb
cmp
cmpsl
addl
sti
pop
lahf
scas
out
sbb
repz
daa
xlat
inc
mov
cmpb
xor
ljmp
cmp
jmp
push
mov
or
imul
cs
adc
xlat
mov
pusha
mov
mov
lcall
out
pop
pop
adcl
outsl
jae
loopnew
jno
push
popa
mov
inc
cmovle
ficoms
xchg
fwait
sbb
popf
xchg
js
xor
lcall
lahf
cmp
cmp
stos
dec
mov
mov
fiadds
push
popa
dec
adc
stos
ds
aaa
or
je
insl
sub
add
sub
ljmp
aam
test
add
jnp
cmp
icebp
test
test
aam
xchg
xor
jne
pop
das
dec
cmpsb
ficompl
dec
in
nop
mov
in
cmp
push
pop
pop
call
pop
push
push
mov
mov
shrb
mov
xchg
add
std
mov
xor
cmp
xchg
pop
jp
xchg
or
mov
ret
add
push
lods
scas
or
pop
push
push
adc
cmp
sbb
pop
mov
jecxz
dec
jl
cwtl
mov
addr16
fs
mov
fstp
push
and
mov
sub
jge
jge
push
out
es
clc
xchg
xor
xchg
adc
pop
rcll
shlb
dec
and
sbb
jle
xlat
xor
mov
lods
inc
loop
outsl
mull
jbe
xbegin
imul
xor
aad
loope
or
inc
sbb
mov
sbb
and
addl
mov
mov
imul
popa
cmp
and
sbb
cmp
mov
fisubrl
sbb
cmp
sbb
cmpl
movsl
faddl
dec
out
mov
inc
mov
jo
or
and
je
mov
push
sub
adc
jp
mov
dec
ffreep
inc
mov
cld
mov
jbe
pushf
sbb
mov
add
pop
shll
push
loop
test
dec
jle
dec
ret
and
xchg
xlat
in
rcrb
arpl
pushf
inc
xchg
out
shlb
cmp
cld
mov
sbb
popa
xchg
negb
add
sub
mov
inc
xchg
lret
test
dec
mov
cmp
dec
inc
xorb
sbb
bound
push
xor
les
sti
and
inc
xchg
mov
es
data16
adc
test
add
mov
mov
stos
push
or
fldenv
and
cld
push
decl
mov
sbb
pop
xchg
jl
repz
mov
or
shrb
push
mov
jnp
xchg
test
and
mov
and
pop
out
xor
mov
aas
dec
push
pop
xchg
pop
cs
pop
lcall
call
fs
add
xor
loope
xor
hlt
adc
xlat
mov
xor
cmp
add
mov
jmp
into
push
dec
in
inc
xor
jmp
or
je
cmpsl
inc
sbb
add
lea
sub
dec
add
or
adc
jl
push
mov
mov
leave
jo
adc
sub
xchg
pop
popa
dec
mov
mov
jecxz
or
add
pop
mov
loopne
or
repz
sub
les
cmp
pop
fs
dec
orl
xchg
adc
add
mov
loope
ret
and
imul
dec
ret
mov
rcrb
mov
and
inc
jle
sbb
pop
pop
or
mov
icebp
adc
xchg
les
mov
mov
lds
cmp
push
inc
add
mov
lcall
ja
jno
add
call
xor
jge
pop
jp
jle
rolb
stos
ret
out
xchg
call
xor
sub
scas
or
xlat
ja
sub
cmp
sbbl
enter
test
cmp
sbb
cltd
pushf
jle
nopl
jp
out
aam
rcll
sarb
sub
push
clc
test
movsl
mov
and
aas
negl
xchg
and
push
adc
ss
adc
push
adc
and
sub
sub
xor
es
adc
scas
test
insb
nopl
push
test
cmpsb
jmp
rol
rclb
mov
les
movsb
mov
fbstp
js
xor
sbb
sbb
pop
dec
outsl
popa
test
dec
push
push
in
pop
pop
mov
sbb
lods
sub
adc
mov
pop
daa
dec
fsubl
test
test
movsb
mov
push
sub
mov
mov
inc
xchg
in
lret
fistpl
sbb
in
dec
jecxz
rcrb
dec
or
in
into
shl
dec
aaa
and
lds
pop
popa
dec
sbb
insl
das
adc
lea
push
mov
mov
sbb
and
add
inc
xchg
and
cmovs
sbb
mov
xchg
lahf
cmp
bound
negb
cmp
pop
sub
fcoml
push
hlt
mov
in
xchg
or
xor
outsl
iret
sarl
pop
and
cltd
in
neg
stos
icebp
push
xchg
imul
insl
xor
push
fnstsw
js
scas
mov
cmp
daa
in
add
icebp
scas
mov
in
ljmp
scas
mov
adc
adc
ret
mov
jg
popf
pop
imul
xor
mov
sbb
daa
push
fdivrl
mov
mov
movsb
repnz
sbb
frstor
daa
pushf
dec
sti
aad
pushf
out
scas
call
jp
or
xor
pop
bound
pusha
xor
ja
adc
or
cmpsl
xchg
insb
mov
mov
dec
push
jb
sbb
fwait
push
sbb
cmp
outsb
cmp
out
pop
test
sbb
lahf
out
outsb
es
js
inc
outsb
pushf
lahf
dec
jae
cmp
push
aam
sbb
mov
icebp
icebp
or
mulb
xor
ret
xor
push
pop
jmp
xchg
push
mov
in
gs
outsb
pusha
fists
jnp
stos
loop
ret
jl
push
mov
jge
adc
movsl
fs
jp
push
dec
movsl
cltd
es
or
cmpsl
pop
jge
or
jp
orb
shrl
sbb
loope
int3
mov
cmpsb
dec
xor
out
dec
andl
adc
in
adc
test
jl
mov
test
inc
mov
or
mov
scas
inc
popa
mov
and
stc
fildl
sbb
push
pop
push
das
jl
lcall
pop
jecxz
cld
cld
lods
fwait
lds
bound
cmp
pop
test
adc
int3
mov
arpl
das
jno
decb
js
out
sbb
dec
in
or
stos
sbb
xchg
xor
xlat
or
ja
shlb
or
movsl
adc
shlb
pop
clc
xchg
pop
adc
std
mov
jbe
sbb
push
jmp
mov
rolb
repz
sbb
stc
and
sub
inc
pop
fbld
popf
scas
jl
dec
ljmp
jge
xchg
mov
add
movsb
cmp
cmp
sub
icebp
pushl
test
sarb
add
mov
mov
orl
fmuls
stos
mov
xchg
orb
mov
orl
call
sbb
or
jmp
mov
pop
sti
out
mov
pushf
push
xchg
pusha
adc
mov
es
add
push
ret
test
fxch
popa
pop
push
dec
hlt
outsb
cwtl
gs
jle
push
push
sbb
sub
adc
jbe
out
jo
xor
cmpsl
or
scas
mov
mov
mov
sub
mov
dec
add
jle
addps
adc
addb
push
ss
iret
jns
icebp
sahf
in
sahf
or
rcrb
push
or
test
xchg
scas
jne
xor
jne
sbb
lahf
xor
adc
pop
cwtl
fsubl
das
outsb
andl
push
pop
and
or
jmp
fstp
fists
cmp
ds
mov
popa
lods
enter
xlat
xchg
lods
rcr
lods
fdivl
cmp
mov
shlb
and
pushl
inc
push
sub
push
xlat
xchg
stos
imul
or
rclb
adc
mov
into
jge
std
popf
mov
lcall
imul
repnz
xor
mov
insl
jecxz
xchg
std
mov
popf
nop
xchg
jle
lock
lea
mov
adc
cmp
div
es
pop
pop
stc
push
pop
lods
roll
ficoms
push
pushf
outsb
dec
es
cwtl
sbbl
adc
jb
call
push
adc
xchg
movsb
mov
shll
js
jp
mov
pushf
and
arpl
mov
mov
aas
add
adc
outsl
cwtl
xor
push
dec
dec
fiaddl
insb
call
sahf
mov
mov
int3
cltd
add
in
pop
mov
xlat
cmp
jne
pop
stc
loope
or
repz
jo
iret
pop
int
jle
sbb
or
push
aas
dec
add
shlb
dec
daa
xchg
push
dec
mov
inc
stc
daa
pop
shl
push
or
dec
cmp
xchg
cld
dec
push
adc
sub
xchg
xchg
out
insl
xlat
mov
lahf
mov
mov
mov
cs
mov
inc
push
in
negl
int
pop
repnz
cmpl
nop
push
mov
xor
es
pop
inc
xlat
mov
pusha
inc
inc
scas
xchg
shrl
push
ret
adc
jecxz
stos
push
sahf
test
imul
and
or
cmpsl
inc
xchg
mov
lds
cmc
adc
sti
jle
and
inc
add
iret
pop
and
cmp
cli
and
push
aam
movsl
jge
sbb
or
cmp
jle
int3
push
stc
out
pop
mov
movsl
pop
fcmovbe
hlt
in
add
pusha
mov
pop
hlt
inc
or
lea
enter
lahf
je
push
insl
lahf
jno
cmp
xchg
lret
mov
cmp
pop
lcall
mov
aam
lcall
jmp
jo
loope
sub
aad
xor
mov
inc
cs
pop
or
push
mov
mov
ror
jmp
cmpsl
push
push
icebp
mov
xchg
cwtl
loope
add
out
pushf
and
xchg
ljmp
or
xchg
dec
sub
aaa
dec
insl
jmp
mov
dec
mov
or
movsb
insb
shll
mov
dec
addr16
sbbl
fisubrl
mov
jge
addr16
pop
loope
mov
int
push
dec
sub
cmp
xlat
adc
std
cli
rclb
or
ljmp
out
pop
mov
sub
inc
mov
out
cmp
loopne
inc
mov
or
lods
sti
lods
inc
push
jae
mov
lea
push
or
popa
lret
test
aam
lret
lret
push
mov
mov
int
adc
sbb
cld
vunpckhpd
inc
or
push
pop
ja
stos
rep
adc
and
ja
cmpsb
sub
push
aas
or
mov
rcll
sub
inc
loopne
out
fmuls
jl
mov
pop
push
outsb
cmp
js
sub
scas
iret
push
cmpsl
sbb
xchg
mov
mov
aam
lahf
and
add
push
fcompl
ficomps
movsb
or
jle
inc
pop
mov
scas
bound
jnp
push
fstl
movsb
add
lcall
and
or
push
xchg
and
out
xor
repnz
out
adc
xor
rclb
inc
xchg
scas
cmp
inc
push
sbb
sbb
pop
cmp
xor
lock
aad
and
push
lock
ficoms
add
pop
or
inc
jns
scas
dec
subl
mov
sar
lods
push
lods
mov
xor
xor
pop
hlt
jb
movsb
push
cmp
andb
push
push
loop
test
jbe
pop
imul
dec
pop
pusha
sbb
dec
mov
jg
incl
lret
icebp
mov
bound
aaa
adcb
push
xor
mov
out
jmp
jmp
sbb
test
js
mov
fstpt
and
ljmp
cli
adc
xchg
sbb
inc
mov
arpl
push
and
and
mov
jno
cmp
ss
jg
or
jbe
pop
das
repnz
add
cmp
movsl
out
cwtl
jne
inc
aad
sub
dec
pushf
addr16
sub
pop
push
inc
and
xchg
fwait
xorl
push
popa
push
xor
adc
dec
hlt
push
std
push
and
dec
pop
das
mov
arpl
add
fucomi
adc
test
mov
popa
push
gs
fmull
push
xchg
stc
add
lods
dec
xor
aas
aas
cmpsl
mov
pusha
stos
mov
xchg
lea
sbbl
mov
mov
dec
or
shr
cmp
or
lds
lahf
jp
std
stos
mov
xor
loope
ljmp
or
mov
ja
adc
in
ljmp
adc
gs
jbe
pop
out
and
lods
jbe
jmp
mov
in
mov
outsl
or
mov
repz
lods
or
push
and
lea
cmc
jge
jg
jns
insl
mov
std
lods
xchg
pop
aam
mov
sbb
lret
je
adc
fldcw
add
lcall
or
popa
add
loop
mov
sbb
sarl
or
je
js
inc
dec
mov
sbbb
xchg
dec
movsl
lds
adc
xchg
rolb
pop
push
push
mov
lcall
sub
fmuls
aam
cmpsb
jns
cltd
mov
jns
cltd
pop
add
sub
push
test
in
jmp
sbbl
jns
in
jmp
hlt
jp
arpl
sub
mov
or
mov
push
xchg
roll
nop
repnz
cltd
out
mov
dec
jae
inc
sbb
add
xchg
mov
cmp
sub
sbb
sbb
dec
pop
pop
cs
sahf
insb
xchg
out
nop
add
in
xchg
test
inc
pop
add
xor
xor
test
sub
mov
sub
xchg
stc
stos
mov
fisttpl
sbb
movsb
mov
mov
outsb
shlb
lods
insl
les
add
fidivs
ret
inc
fcomip
movsl
jns
sbb
scas
jne
mov
lea
jne
mov
mov
aam
xchg
sub
movsb
lods
mov
jl
and
jecxz
movsl
icebp
jnp
adcl
xor
cmc
or
fwait
lcall
sub
test
stos
mov
push
jno
push
insl
testb
lds
sbb
xor
aam
pushf
lret
stos
outsb
adc
or
ret
mov
add
scas
xchg
scas
xchg
adc
pop
mov
popf
fcomps
fwait
dec
icebp
mov
in
push
xchg
mov
xchg
out
mov
add
sub
jb
enter
sbb
loopne
lahf
ficompl
fsubrl
rcl
fwait
push
add
adc
call
fadd
mov
fcomp
and
loope
xchg
in
mov
es
nop
pop
aas
cmp
mov
mov
inc
ret
adc
rcrb
mov
pop
movsl
xchg
fxam
addr16
adc
sar
xor
inc
cwtl
ret
sub
sahf
xor
xor
je
lret
cmovle
out
sbb
cmp
movsb
mov
inc
fldenv
inc
rorb
push
imul
xchg
pop
jp
xor
mov
dec
adc
loop
pop
inc
js
sbb
iret
sub
jno
xor
or
dec
pop
subl
pop
movsl
or
enter
pop
cmpsb
inc
mov
or
nop
imul
cltd
mov
cmp
or
gs
sahf
dec
je
cwtl
insl
cmpsl
xor
add
add
sbb
in
mov
dec
movsb
sub
fnsave
jg
mov
jb
and
adc
dec
mov
incb
fdivl
mov
scas
mov
mov
pop
stc
stos
dec
leave
jge
addr16
cwtl
cs
push
adc
xor
lret
icebp
aad
stos
push
icebp
lcall
xor
mov
cmp
push
mov
push
cltd
mov
push
out
cmpsb
add
xchg
enter
pusha
xchg
dec
aad
push
out
inc
jg
pop
imul
push
push
call
inc
inc
ljmp
xchg
int3
cmp
sub
hlt
loopne
iret
mov
mov
push
pop
movsb
or
icebp
imul
mov
xchg
xchg
mov
lahf
xlat
je
inc
mov
ret
jae
adc
fists
add
roll
fstl
dec
js
sbb
sti
not
adc
movsb
xchg
lea
in
dec
jl
xlat
add
lret
mov
pop
push
dec
shll
push
dec
arpl
hlt
push
ss
fs
nop
dec
sbb
pop
jecxz
outsl
xchg
aam
jne
or
mov
mov
jbe
in
add
adc
mov
or
cmc
xor
and
mov
arpl
dec
repz
add
sbb
sub
out
out
iret
mov
ss
mov
ja
test
mov
popa
dec
outsl
dec
shlb
mov
ret
in
movb
mov
mov
icebp
push
xor
mov
adcb
dec
add
mov
insb
insl
pop
fdivs
repz
fimull
ja
cld
mov
mov
call
push
out
fmulp
xchg
push
fmull
cli
loope
jl
mov
out
stos
jge
je
insl
clc
push
mov
mov
sub
jmp
lcall
shlb
adc
sub
ds
adc
add
addl
mov
insb
movsl
sub
jmp
sub
mulb
jns
inc
mov
pop
sub
fstpl
daa
push
das
popf
mov
push
xchg
fdivs
jno
shll
dec
inc
daa
push
adc
repnz
cmp
pop
dec
push
or
ds
bound
mov
imul
xchg
movsb
cmp
sbb
pop
aas
mov
dec
jno
adcl
movsl
push
insb
sub
test
ret
loopne
add
xor
jp
dec
mov
and
out
jg
test
pusha
andl
xor
push
ret
movsl
movsl
aad
mov
jnp
mov
hlt
sbb
rcrl
jecxz
daa
add
cltd
or
fbld
lods
lods
mov
lcall
mov
jl
jnp
xor
ret
mov
mov
mov
fwait
sub
shrl
pop
hlt
test
cltd
xchg
or
pop
dec
nop
aad
repnz
in
add
xor
pop
mov
andps
sub
inc
adc
adc
push
stos
and
mov
jle
and
and
outsb
pop
sbb
into
mov
out
inc
sbb
in
ret
jg
dec
jb
jle
or
adc
sahf
jne
jne
jl
fs
inc
adc
lods
fsubr
and
popa
aas
adc
mov
cmc
xchg
or
cmp
xor
push
inc
or
dec
and
add
dec
bound
inc
sub
inc
and
int3
in
mov
into
dec
pusha
mov
xchg
push
pop
cwtl
fdivrs
push
loop
das
notb
int
jne
bound
movsl
daa
lret
mov
cmp
arpl
addr16
rcl
adc
jmp
leave
out
dec
out
je
cs
jo
int
jnp
and
cmpl
imul
add
inc
fldcw
call
mov
aas
push
orb
inc
ss
mov
movsl
pop
mov
jmp
jmp
stos
adc
dec
push
loop
enter
cld
insl
and
mov
mov
iret
adc
add
dec
std
and
mov
sbb
dec
sub
jge
dec
loopne
icebp
pusha
lret
add
std
pop
in
popf
repz
out
jae
popa
loope
scas
jnp
xor
mov
movsb
shlb
sub
dec
aas
mov
bound
or
mov
cmp
stos
nop
mov
or
dec
mov
call
jl
cs
pop
fwait
or
stc
cmp
insb
stos
cltd
pop
std
xor
in
mov
lock
push
xchg
and
cmp
or
je,pt
pop
mov
and
stos
nop
loopne
mov
sub
in
and
ret
sbb
mov
mov
xchg
out
cmc
push
sti
int
jae
adc
aas
loope
aaa
pusha
loope
cld
test
inc
cmp
pop
jle
orl
mov
dec
cld
addr16
add
leave
fxch
stc
out
xchg
fbstp
dec
sub
pop
jae
jmp
jo
pop
sbb
mov
pop
mov
inc
xor
dec
inc
jb
lock
ficompl
roll
dec
int
lock
sarb
aad
out
into
das
sub
push
add
mov
sub
je
sub
sbbb
jle
mov
push
or
out
xchg
scas
mov
dec
sub
mov
sub
cmpsb
fmull
pop
sub
and
ds
pop
movsb
dec
iret
inc
js
pop
sub
inc
push
or
xchg
les
mov
out
fstps
xor
test
repz
mov
gs
rol
push
jbe
out
lret
jge
enter
incb
insl
pop
jno
lret
das
adc
add
shl
arpl
pop
or
mov
mov
pop
in
xor
out
xchg
sub
sub
mov
sbb
mov
sbb
sub
cmpsb
ljmp
cmp
fistpl
in
mov
or
lret
addl
push
cli
into
push
testl
in
int3
xor
adc
jmp
xor
test
lea
push
sbb
data16
adc
leave
into
aad
addb
ds
dec
jb
cmp
das
dec
inc
orb
hlt
jge
inc
mov
data16
dec
inc
pop
jno
adc
pop
call
insb
sbb
add
mov
push
int3
add
data16
jbe
cmp
sub
je
aas
jecxz
jae
es
pop
push
out
movsb
jecxz
call
cmp
loop
icebp
int
mov
divl
sbb
jno
mov
sbb
jmp
mov
fs
addb
and
dec
lods
inc
clc
mov
sub
decl
cmp
into
ret
ret
out
fcmovu
xor
inc
mov
mov
enter
gs
mov
dec
lock
lods
mov
aam
and
scas
cli
sub
rcrb
rorb
jae
sub
adcb
push
popa
ja
mov
dec
outsl
xchg
sbb
das
lock
imul
pop
mov
sub
and
mov
jecxz
rclb
adc
jne
jecxz
aad
lcall
sub
sub
adc
test
mov
out
js
xor
dec
sub
mov
cs
call
pop
stos
imul
nop
fdiv
mov
movsl
lcall
insb
ja
push
adc
mov
aas
testl
lods
mov
cmpsl
dec
mov
mov
add
leave
push
inc
sub
jp
int
mov
data16
in
in
cmp
mov
inc
mov
pusha
mov
not
je
movsl
lret
adc
neg
xchg
mov
pusha
jno
dec
xchg
pop
push
mov
cmpsb
xchg
dec
cwtl
adc
fldl
push
pop
sarl
pushl
or
test
pop
inc
push
add
ds
sti
mov
js
push
dec
out
out
out
ret
sub
mov
mov
xor
test
mov
in
or
jo
mov
adc
test
xchg
cli
sbb
test
sub
dec
sbbb
cwtl
and
mov
mov
mov
add
or
cmp
sub
cltd
xor
repz
out
pop
sub
mov
xchg
stc
shl
xchg
test
jb
decb
nop
jne
add
mov
jno
out
mov
mov
nop
push
addr16
inc
adc
mov
je
pushf
inc
pop
xor
stos
push
scas
sbb
mov
icebp
xor
shlb
push
rcrl
push
jecxz
inc
jne
jae
sbb
ljmp
enter
sub
js
cmp
dec
scas
rorb
dec
insl
sbb
rolb
jbe
xorb
jp,pt
stos
outsl
jns
cmpsl
add
push
nop
fistl
js
dec
inc
sub
popa
int
ret
pop
ja
lea
cld
arpl
push
leave
pcmpgtd
insb
mov
repnz
iret
pop
nop
or
sbb
push
arpl
fcmovbe
pop
fildll
jecxz
loop
test
mov
data16
fistpl
inc
mov
inc
ficomps
xor
sbb
dec
ljmp
mov
mov
ror
xor
mov
rcll
mov
pusha
pop
mov
adc
call
in
in
lret
call
xchg
cmp
mov
std
xorl
sub
add
pop
and
inc
jo
andl
mov
pop
pusha
cmpsl
xor
pop
sub
sti
mov
dec
sahf
loope
dec
pop
enter
repnz
pushf
fwait
enter
fisubrs
and
push
xor
sbb
scas
push
push
and
jne
sbb
add
sub
pop
xchg
popa
scas
mull
xchg
cs
mov
cli
je
add
data16
jbe
cmp
push
inc
loop
or
das
mov
inc
push
hlt
sbb
mov
mov
outsl
or
mov
popf
xchg
or
mov
ljmp
and
fsubrs
ret
jns
push
jge
sti
pop
mov
hlt
cmpsl
jno
test
jns
push
ljmp
in
fstpt
cmp
adcl
imul
adc
dec
sub
dec
xchg
lods
testb
mov
scas
fs
test
mov
imul
gs
mov
xchg
scas
arpl
rolb
mov
adc
inc
movsl
insb
push
push
and
subb
nop
sbb
stc
jge
mov
sbb
and
loope
out
pusha
fcompl
aam
or
subl
add
sti
movsb
cmp
mov
add
xchg
or
into
xor
lods
fwait
xchg
mov
jbe
sbb
cmpsl
stc
mov
cmp
fnstsw
add
aas
cmp
bound
dec
push
popf
mov
outsl
iret
enter
cli
push
push
add
add
pop
inc
dec
inc
push
lods
sub
jo
dec
xchg
push
popf
loopne
fistpll
add
stos
das
adc
and
xchg
push
mov
or
xor
xor
shl
int3
jl
ret
mov
pop
lea
and
jle
into
push
dec
xor
lock
mov
je
push
xlat
push
jbe
add
push
je
iret
mov
ss
icebp
cmp
lahf
pop
loope
inc
inc
lcall
sbb
add
inc
inc
mov
out
lds
orl
mov
jae
andb
in
filds
cmp
mov
inc
mov
ss
out
jne
popf
repz
rorl
mov
pop
aam
repnz
xchg
cmp
inc
loopne
jae
cmp
mov
inc
or
add
xchg
fdivr
jmp
jb
mov
push
popa
add
lret
dec
or
jno
sub
push
jo
mov
cmp
add
aam
xchg
ds
mov
mov
push
loop
fld
cmp
or
aad
imul
adc
das
ljmp
pop
out
mov
sub
xor
cmc
loop
dec
out
stos
inc
pop
faddl
add
cmp
push
and
xor
jp
pop
ss
in
mov
xor
in
xchg
and
jmp
test
xlat
idivl
mov
dec
ss
sub
lret
aas
gs
mov
dec
aaa
insl
jnp
sbb
lea
mov
dec
not
mov
outsb
stos
xchg
lret
lds
aad
cmp
add
lods
fbld
push
aad
fsubl
mov
inc
dec
mov
xchg
cmpsb
out
cld
outsb
adc
adc
rorb
fcmovb
adc
inc
cmpsl
or
lret
pop
decb
out
xor
test
jb
jae
aam
repnz
mov
adc
out
inc
push
mov
iret
adc
cltd
pop
fistps
adc
popa
call
jecxz
mov
push
dec
shlb
mov
or
dec
push
das
out
bound
rorb
add
clc
xor
inc
loope
cld
movsl
hlt
dec
xchg
repz
rcll
and
mov
push
jge
jmp
ret
push
inc
arpl
rorb
jo
imul
and
push
pop
repnz
xchg
movsb
in
fmull
inc
std
jmp
in
dec
in
fiadds
pop
push
push
into
push
push
add
push
in
jecxz
fwait
jne
jbe
and
inc
mov
scas
pop
dec
out
xor
sub
push
mov
loop
jb
dec
enter
mov
mov
shl
in
pop
and
add
fmul
or
mov
test
inc
xchg
fistps
bound
lret
jne
mov
clc
mov
jge
insl
pop
pop
sbbl
cmp
stc
jmp
addb
jmp
addl
adc
adc
out
movsb
loop
jmp
in
or
mov
into
out
ja
sbb
pop
mov
adc
fwait
shrb
push
in
call
loope
mov
xor
pop
pushf
dec
outsl
push
jl
fisubs
movsl
cmp
cmp
dec
cmp
loopne
jge
pop
mov
adc
mov
or
stc
gs
int3
ja
dec
sahf
loop
data16
into
movsb
pop
inc
pushf
stos
nop
push
mov
es
fcoms
push
adc
repz
mov
out
cld
or
mov
mov
push
imul
arpl
ret
sti
loop
test
add
ds
stos
xlat
fidivs
jbe
lods
les
cwtl
movsb
mov
icebp
mov
rcrl
jmp
arpl
mov
sahf
std
mov
lahf
sub
ficoml
adc
out
xchg
pop
pop
insl
movb
fwait
mov
mov
cmc
les
inc
add
out
popf
inc
out
lahf
xor
pop
fimull
mov
insb
mov
ja
pop
mov
lcall
es
dec
inc
jo
xchg
pop
hlt
sti
movsb
push
dec
cmp
inc
jb
insl
loopne
push
and
insl
dec
jno
inc
xchg
movsb
pop
jge
xor
xlat
fcoms
jg
int
fwait
and
mov
jg
movsb
lods
shlb
ds
lods
inc
inc
cwtl
mov
sbb
mov
ret
mov
add
js
xor
push
dec
movsl
daa
lods
mov
movl
cmp
cmp
cmpsb
mov
xor
mov
imul
jl
gs
test
or
jae
inc
inc
inc
mov
inc
xchg
sub
fbld
mov
fimuls
lret
mov
adc
insl
jb
cmc
or
es
movsl
cs
data16
push
in
mov
sub
add
or
in
push
clc
sbb
sub
push
sub
in
jns
jae
add
cmpsl
stos
aad
icebp
or
sbb
sub
pop
pusha
mov
rol
ds
push
loop
or
sbb
jge
pushl
ljmp
fcoml
cmp
cmpl
sub
repz
pop
xchg
dec
push
aaa
dec
dec
stc
push
jne
add
sbbl
cltd
push
arpl
xor
clc
cltd
xchg
jb
lahf
dec
xchg
pop
dec
loopne
and
xchg
je
jno
inc
fists
or
push
loop
pusha
movsb
iret
pop
jo
stc
adc
inc
cmp
jmp
rcr
or
int
sub
or
pop
repnz
xchg
das
lods
popl
andb
popf
sbbl
mov
adc
cli
ljmp
sbb
mov
and
or
je
stc
jp
dec
and
dec
les
lret
out
inc
mov
cmp
fildll
aam
out
push
inc
sub
mov
stos
aam
dec
in
outsb
stos
imul
popf
gs
jg
sbb
add
outsb
clc
mov
xchg
inc
pop
xchg
mov
sbb
mov
jge
nop
cltd
pushf
out
cmp
shll
es
pop
xlat
push
int3
pop
dec
inc
push
push
lds
arpl
in
out
push
sbb
mov
dec
mov
lcall
daa
pop
pop
adc
mov
fidivl
add
lret
pop
mov
outsb
insl
xor
jp
test
xchg
imul
ror
popa
lcall
jb
negb
dec
jecxz
sahf
adcb
je
sbb
pop
xchg
cmpb
scas
xor
addb
mov
push
pop
mov
mov
sub
cmpsl
imul
sahf
in
in
jp
and
inc
or
nop
loopne
xor
push
sub
xchg
rcl
xor
jp
cmp
sub
push
mov
adc
pop
add
lret
or
arpl
pop
mov
cmp
jno
fadd
js
aas
dec
sbbb
push
cmc
push
mov
mov
cmp
imul
lods
xchg
xchg
movsb
mov
mov
mov
cwtl
aam
cld
xor
ljmp
fcmovu
push
aad
pop
fidivs
mov
xchg
sub
xlat
movsb
popf
insb
and
int3
fidivrs
std
and
loop
sahf
ficoms
jno
loopne
adc
or
pop
pop
fisubs
fs
jns
xchg
jmp
jl
pop
sub
fmuls
daa
cli
shrl
jno
inc
scas
daa
xor
stos
lock
ror
nop
or
test
sub
inc
mov
test
adc
xor
mov
pop
fidivl
mov
or
pop
cmp
sbbb
in
mov
into
scas
fmull
sbb
sbb
mov
push
and
inc
rolb
and
je
add
lret
push
fsubl
daa
in
out
sbb
fs
lret
or
and
subl
push
cmp
in
cmp
push
cld
popa
sbb
and
bound
stos
cmp
into
clc
sub
jmp
divb
popf
adc
mov
mov
inc
fldt
insb
rolb
rcll
jae
ficomps
mov
pop
mov
inc
outsl
cmpsb
adc
mov
gs
push
rcrl
sub
into
ror
lret
insb
les
xchg
subl
out
xor
jle
sub
xchg
stos
stos
fisubl
mov
outsb
mov
ret
fidivrs
push
xor
in
in
aas
int3
dec
in
mov
jbe
mov
out
dec
pusha
dec
lcall
inc
xor
test
ret
into
sarl
push
dec
xchg
jmp
lcall
dec
dec
cmp
adc
or
xchg
gs
out
sahf
mov
outsl
arpl
inc
sbb
repnz
enter
fistps
xor
pop
sbb
mov
and
fwait
shll
dec
mov
cmpsl
cmp
cmc
incb
imul
inc
movsb
sahf
rorb
inc
jbe
sub
cmc
xchg
sbb
test
pop
scas
jecxz
sub
mov
jmp
cmp
mov
add
jno
jb
loop
jmp
xchg
push
repnz
int
xchg
fisubs
and
gs
mov
jecxz
adc
mov
push
ja
sbb
fmuls
xor
lret
push
jmp
pop
add
and
cmp
cmpsl
fbld
jne
pop
ds
lret
nop
incb
mov
and
and
adc
jl
add
ret
sahf
paddsb
inc
inc
gs
add
movsb
dec
adc
jmp
mov
adc
data16
lcall
inc
jnp
lahf
and
cmpsb
sbb
xchg
jp
xchg
adc
or
push
lret
and
adc
popa
sbb
lcall
outsl
push
mov
cmp
cmp
insl
xor
test
or
mov
outsl
pop
mov
enter
and
arpl
jg
mov
fbstp
xchg
or
call
lock
jb
pop
sarl
fsubr
or
aam
lods
popa
lret
mov
in
fdivl
out
stc
inc
and
mov
daa
mov
and
sub
or
in
stos
int
stc
adc
mov
xchg
pop
add
pop
push
adcb
pop
mov
mov
xor
pop
push
sub
xchg
sarb
dec
push
loope
jne
rcr
mov
outsb
push
movsb
xor
rcll
test
inc
popa
xchg
jne
pusha
mov
sub
mov
jg
movsl
das
add
jle
xlat
mov
xchg
mov
jmp
mov
rcll
jl
test
insl
push
adcl
push
cltd
inc
mov
xlat
jns
leave
push
add
call
sti
jnp
push
jae
lret
js
sub
mov
aad
lods
fs
sahf
mov
into
mov
int3
or
mov
in
push
lcall
inc
std
push
push
arpl
cmp
inc
sub
jae
fwait
pusha
add
lret
adc
xchg
xchg
mov
mov
pop
adc
std
inc
int3
mov
add
cwtl
inc
mov
shrb
cmpsb
push
bnd
repnz
fnstsw
sub
mov
inc
mov
add
xor
xchg
aaa
dec
sti
out
fs
outsl
or
mov
push
jmp
xchg
mov
hlt
sti
inc
xorb
out
cli
jne
decl
xchg
aad
out
dec
xchg
bound
or
xlat
data16
jb
inc
pop
dec
xor
jle
icebp
sub
mov
mov
cmc
dec
lea
xor
movsb
aas
rcrb
lods
loop
pop
xchg
push
repnz
jmp
ljmp
dec
ret
xchg
cmpsl
mov
lret
mov
xorl
mov
mov
movl
mov
and
arpl
jno
popf
jo
xchg
icebp
in
sbb
jbe
jno
arpl
in
rcl
shll
xchg
sahf
adc
inc
test
inc
mov
stos
cwtl
mov
pop
dec
and
jnp
into
xor
fisubl
adc
in
add
or
dec
aas
xor
ret
movsl
daa
sahf
inc
shrl
sahf
mov
mov
jl
xor
mov
jns
sbb
lods
addr16
xor
lret
jp
pop
stos
push
mov
cmp
push
adc
mov
or
stos
push
cwtl
inc
filds
pop
addr16
mov
inc
xchg
adc
push
mov
jl
pop
lcall
cmp
stc
cld
into
ss
pop
xor
mov
cmp
mov
mov
dec
add
jb
lahf
lahf
dec
sbb
jbe
adc
dec
adc
pop
push
xchg
jno
sarl
mov
add
rcrl
loopne
sub
enter
mov
loop
jo
jne
sub
movsl
out
stos
mov
enter
out
cmp
mov
xchg
mov
push
inc
xor
inc
push
arpl
test
icebp
lods
or
xor
dec
sarl
pop
arpl
jno
jmp
pop
inc
popf
xchg
or
mov
adc
aaa
stos
pop
jo
push
add
outsl
jp
out
pop
lods
inc
cli
and
add
xor
int
sti
js
test
cmp
rorl
sub
repnz
xchg
and
repz
aam
cld
ret
dec
stos
push
add
bnd
push
clc
sub
leave
popl
xorl
and
sarl
mov
rcll
dec
je
mov
je
in
cmpsl
sbb
pop
jmp
xchg
adc
adcb
mov
mov
sub
mov
lahf
insb
mov
cmp
pop
nop
push
ret
add
negl
jge
bound
sub
add
dec
popa
clc
out
repnz
imul
push
shrb
int
mov
notb
mov
mov
mov
repnz
test
dec
dec
xor
xchg
ja
sub
aaa
cmpb
mov
inc
dec
jge
popf
stos
xchg
mov
mov
push
fisubrl
ljmp
nop
cmp
and
mov
mov
test
add
xor
mov
hlt
es
ret
iret
adc
push
or
mov
mov
lcall
push
adc
andl
mov
mov
std
in
xchg
iret
jge
cwtl
popf
ss
inc
scas
mov
neg
ret
fsub
jno
fcomi
adc
xchg
fcoml
xchg
sbb
cwtl
pusha
xor
sub
mov
fwait
and
mov
bound
xchg
aam
inc
jne
imul
and
negb
jp
pop
jns
push
push
dec
lods
jp
sarb
clc
loopne
or
push
inc
or
and
aas
dec
ja
int
dec
or
bound
mov
into
imul
and
aas
pop
xchg
hlt
xor
ljmp
add
test
ljmp
sar
daa
out
jo
push
lods
xchg
repz
dec
lret
aas
xchg
cld
scas
pop
cltd
or
sub
add
stos
jnp
out
shrb
cmp
mov
cmp
fsub
daa
test
div
cld
imul
dec
popf
sbb
push
aam
call
loop
jg
stos
sbb
iret
jp
in
push
mov
mov
aaa
pop
sbb
push
push
test
xchg
popf
mov
test
aam
sbb
cltd
test
adc
push
push
mov
cmp
jno
pusha
movsb
popf
popf
adc
or
insb
pop
cmp
ljmp
and
out
or
xlat
jmp
mov
enter
fimuls
popa
lods
cwtl
add
jns
add
lock
dec
inc
dec
dec
push
and
adc
lods
cwtl
mov
and
adc
lcall
dec
mov
pop
enter
pop
cmp
push
xchg
mov
jns
cltd
in
cli
push
test
pop
cmc
lahf
or
adc
imul
repnz
sub
imul
out
xchg
push
inc
mov
jle
push
jmp
xor
out
cmp
addl
dec
inc
jp
adc
push
out
rcrl
mov
incb
leave
sahf
imul
or
jbe
loopne
mov
cmc
xchg
clc
pop
movsl
jns
and
add
out
es
push
cwtl
or
mov
sub
lea
inc
ret
push
lret
pop
pop
push
shlb
push
int3
insb
iret
jmp
fsubl
push
push
aam
and
shll
and
push
jnp
mov
leave
jo
incl
xchg
jns
push
and
cmp
inc
push
mov
or
xor
pop
mov
mov
add
ja
sbb
in
mov
mov
jle
xchg
xor
jecxz
adc
fadd
mov
pop
popf
sbb
jno
adc
inc
push
push
xchg
ja
cld
ja
jg
pushf
xchg
push
inc
stc
cmp
mov
inc
outsl
cwtl
inc
or
ja
add
push
mov
xor
push
lods
sarb
cmp
pusha
sub
xchg
pop
sbb
dec
in
in
pop
add
xor
outsl
pop
xchg
aas
loopne
popf
mov
and
out
adc
pusha
cmp
gs
mov
aam
jno
test
xorl
and
jne
dec
imul
mov
xchg
test
sbb
lods
sarb
sbb
xchg
popa
xchg
in
cltd
xor
pusha
mov
ja
cwtl
xor
jb,pn
jo,pt
pop
out
inc
xor
ficomps
scas
push
call
fcoml
cmp
lock
cltd
xor
sbb
mov
adc
test
cmp
lret
sbb
in
icebp
cmpsl
mov
adc
jmp
and
loope
add
outsb
inc
scas
sub
jb
movsl
divb
cwtl
or
inc
push
pop
push
popf
out
cmp
sub
lcall
aas
inc
pop
shlb
and
fwait
xor
dec
stos
out
aad
inc
mov
jns
ret
mov
sbb
mov
pop
or
mov
inc
loope
lcall
or
sub
lcall
sbb
jmp
cld
inc
rcrb
lods
fcmovnu
in
gs
sub
push
jo
add
or
pusha
idivb
addb
pop
loope
leave
andl
sbb
mov
imul
cmpsb
ja
dec
xchg
push
sub
lods
inc
cmp
dec
adc
xchg
push
dec
out
aam
pop
push
test
mov
sahf
inc
xlat
add
push
les
mov
xor
scas
or
add
das
xchg
daa
and
mov
fdivr
rorl
adc
jmp
sti
xor
test
add
pop
mov
jb
movsb
imul
push
mov
push
ljmp
movsb
sbb
sub
cmp
sub
cmp
into
fldcw
in
out
out
push
data16
mov
in
mov
add
fwait
xchg
aad
test
scas
pop
stos
lods
add
mov
dec
mov
jo
push
ja
dec
jb
cmp
dec
sub
nop
inc
push
and
loopne
popa
fisubrl
sub
jp
dec
outsl
jo
in
pusha
xor
push
mov
stos
es
fcompl
pop
scas
testb
test
push
repz
shl
sahf
push
adc
push
jmp
xchg
sarb
std
xor
sti
inc
fisubl
jns
sub
push
inc
xor
jmp
std
pop
out
jge
mov
xchg
and
stos
cld
xorb
sets
fsubr
adcb
or
leave
add
cmpsb
cmp
or
jmp
xchg
lds
add
jb
jle
mov
xchg
mov
mov
daa
add
mov
aam
shr
adc
fs
ljmp
dec
jae
push
cmp
sbb
sub
sti
mov
xchg
inc
pop
pop
jne
inc
xchg
sbb
test
jl
and
and
fcmovbe
cmc
inc
incb
jmp
lods
push
sub
lret
jecxz
aam
stc
leave
add
push
push
jle
dec
inc
out
cmp
imul
jl
or
ja
filds
pop
cmp
push
nop
dec
loope
xor
aas
orb
mov
ja
into
pop
lcall
jne
inc
test
addr16
jle
je
sbb
or
les
movb
mov
xor
int
sub
mov
mov
mov
adc
sbb
jne
lahf
std
push
js
mov
es
lods
rcr
shll
in
hlt
mov
outsb
xor
sbb
out
add
js
test
iret
sub
in
lret
mov
lods
rcr
cltd
sbb
lods
xchg
pop
add
aas
mov
cmp
cli
lret
popa
ds
movsb
iret
in
jne
bound
sbb
mov
in
cmp
icebp
ss
pop
add
jo
mov
push
push
sub
xchg
sbbb
inc
mov
push
cmovs
out
adc
xor
sub
cmp
addr16
cmpsb
lar
jle
push
pusha
stos
or
inc
or
jle
in
sbb
xchg
push
insb
inc
sub
add
les
sub
aas
stos
sub
outsb
jne
inc
adc
popa
or
lods
jne
dec
jbe
pop
out
mov
xlat
cmc
xchg
icebp
xor
ror
and
sub
movsb
mulb
inc
or
es
lahf
out
jg
adc
in
leave
repnz
or
cltd
cmp
test
lahf
mov
sub
scas
jno
daa
in
pop
test
loop
add
or
adc
in
jg
mov
repnz
jbe
jecxz
cmp
xor
mov
mov
mov
fcomps
aam
xor
jbe
psllw
fists
cmp
lret
jl
pushl
adc
mov
pushf
cs
and
int
mov
bound
andl
sub
les
pop
sbb
sahf
es
jns
jl
test
mov
pusha
xor
lods
mov
pop
int
std
mov
xor
mov
in
mov
incl
dec
ret
ja
lds
sub
scas
shlb
pop
ficomps
dec
fs
and
pusha
mov
shll
imull
es
add
xor
sbb
adc
es
or
mov
pop
fcomip
adc
cli
lock
pop
push
dec
into
mov
push
lret
mov
pop
aad
out
xchg
ds
or
dec
and
test
ret
dec
adc
xchg
or
cmpsl
movl
cmc
push
or
fwait
pop
adc
mov
lds
inc
in
adc
je
push
pop
sbb
mov
out
mov
sbb
mov
mov
iret
xchg
lods
adc
adc
in
icebp
je
mov
in
in
adc
add
inc
pushf
and
xor
lds
xlat
hlt
dec
loopne
jns
iret
pcmpeqd
xchg
adc
mov
imul
enter
es
add
aad
out
push
jbe
rcrl
js
inc
int3
int
jno
fistpl
leave
push
popf
pop
and
sbb
sarl
sub
ljmp
int
mov
adc
fwait
mov
in
leave
pop
cltd
fwait
add
repz
fmuls
and
or
movsb
int
mov
push
aas
and
sub
jns
in
dec
int
repnz
or
xchg
cwtl
xlat
icebp
movl
popa
adc
or
fcomi
out
into
andb
hlt
adc
daa
mov
sub
mov
push
xchg
push
in
inc
rcr
push
cltd
je
jno
out
imul
fldenv
dec
orl
sub
lret
adc
cmp
js
push
and
lret
mov
push
and
je
adc
mov
xor
and
mov
pusha
jbe
jmp
gs
mov
mov
ljmp
add
das
iret
fbld
outsb
stos
inc
inc
push
popf
pop
out
insl
ss
sbb
imul
jmp
push
jmp
mov
loop
shl
and
repz
out
data16
loope
pop
repnz
int3
les
sahf
sub
jg
stos
sti
movsl
enter
xor
add
repnz
pop
out
jmp
add
mov
loopne
cltd
std
cmp
cmp
xchg
into
mov
sbb
xor
adc
lret
pop
adc
lcall
or
push
sarl
or
and
xor
jge
fcoms
add
fdivl
dec
pushf
aas
push
ret
pop
addr16
test
push
mov
in
outsb
mov
les
sbb
dec
mov
lds
sbb
loopne
lcall
in
inc
xlat
mov
int3
fnstenv
rcrl
fldcw
int
xchg
fiadds
int
stos
movsl
pextrw
push
push
das
movsl
xchg
in
cwtl
mov
pop
imul
inc
out
lcall
clc
push
cmp
jle
mov
std
cwtl
push
data16
ljmp
fimull
fcomps
ss
pop
loopne
addl
xchg
xchg
jno
and
rcrl
sub
insl
sub
mov
and
lods
xchg
cmp
out
and
loop
mov
clc
out
xor
adc
xor
or
pop
rorb
or
insb
sbb
movsl
test
mov
jecxz
jg
jmp
inc
fadds
jp
add
mov
jnp
xlat
or
add
mov
dec
rclb
jl
add
icebp
cmp
jno
cmp
lods
cmp
dec
push
in
in
sahf
ja
inc
inc
xor
cmp
jg
mov
cmp
pop
test
sahf
stos
lcall
stos
gs
aaa
push
and
cmp
out
xchg
fldt
loop
pop
xlat
leave
not
sub
push
lods
jb
pop
and
xor
hlt
pop
imul
and
scas
fcmovb
sti
lea
jge
cli
fnstcw
nop
fildl
shr
cmp
ret
jne
mov
call
pop
fs
sbb
dec
xchg
cs
test
jmp
push
adc
pusha
int
lods
mov
test
adc
mov
xchg
out
and
rcrb
sbb
andl
cmp
cmp
imul
into
les
lret
stc
mov
xlat
outsl
pop
adcb
jo
fisttpll
jns
xor
push
adc
mov
push
inc
push
mov
je
push
in
jl
lods
mov
push
or
js
xchg
das
mov
test
insl
pop
popf
mov
inc
and
add
lock
push
jbe
clc
sti
mov
add
jb
out
out
filds
jge
scas
xlat
jne
in
dec
insb
mov
cmp
dec
mov
and
xor
push
pop
dec
lods
and
cmpsb
std
xlat
inc
dec
inc
sbb
into
sub
loop
into
fldt
xor
insl
adcb
add
sbb
out
jo
incl
mov
push
imull
or
arpl
cmpsl
addr16
fisubrs
cmc
call
xchg
xchg
pop
lcall
cs
mov
aad
adc
mov
pushl
jnp
outsb
push
pop
loop
jp
or
mov
jbe
push
loop
js
mov
pusha
icebp
or
adc
adc
inc
push
pop
xor
sub
sahf
into
mov
aad
ja
pusha
and
fimuls
int3
push
mov
xchg
or
xor
aad
mov
insb
xor
jne
fs
mov
push
cs
pusha
dec
mov
sbb
aas
push
das
xor
jecxz
dec
in
daa
sahf
bound
out
cmpsb
pmulhuw
xor
adc
es
aas
outsl
xchg
dec
inc
pop
jecxz
ja
cmp
out
lock
cs
lea
jb
lcall
int3
std
or
and
fsubrl
pop
clc
daa
cmp
stc
sahf
out
push
adc
mov
shll
cs
in
je
jbe
jge
hlt
cmp
les
test
cmp
xor
adc
movsl
mov
mov
in
data16
fsubp
mov
or
xchg
inc
push
adc
xchg
push
cmpsb
sbb
pop
xchg
movsl
nop
jne
dec
aam
inc
pop
out
mov
dec
or
rorl
test
cmp
mov
pop
ficoml
rcr
dec
repnz
sub
sub
in
add
enter
arpl
je
dec
jb
in
fucomi
sbb
loope
sub
enter
enter
fidivrl
and
sbb
dec
pusha
fld
imull
mov
mov
ficompl
loop
lea
sub
mov
fwait
lea
push
data16
cltd
movsl
or
cmpsb
mov
pop
in
sub
loopne
mov
mov
push
sub
mul
addl
call
aad
cmc
pusha
loopne
inc
pushl
jnp
sti
leave
xor
inc
add
ret
mov
and
shrb
loope
int
mov
pop
and
xorl
lock
jne
imul
xchg
outsb
jo
jecxz
sbb
js
push
adc
mov
xorb
mov
push
es
inc
push
sahf
and
rcrl
inc
mov
cmp
lret
rclb
dec
imul
mov
jmp
push
loopne
aaa
testl
sbb
or
fisttps
shl
dec
or
and
scas
loope
mov
or
popf
test
xchg
cmc
arpl
cmp
test
repnz
shrb
lret
mov
sbbl
push
push
jp
das
push
cld
inc
push
dec
arpl
int
push
jp
xor
fs
push
add
out
push
movsl
push
sbb
cmpsb
pop
jbe
popf
mov
clc
inc
es
aaa
pushf
push
dec
xchg
push
push
xor
fs
scas
daa
pop
rcrl
fwait
adc
inc
mov
inc
pop
dec
mov
dec
mov
lock
fwait
mov
outsl
sbb
mov
test
arpl
sbb
and
pop
ss
inc
sbb
test
push
neg
cwtl
in
sbb
push
sub
fmuls
jmp
jg
sbb
jae
or
in
mov
mov
or
test
pop
inc
dec
and
jns
lcall
mov
das
pop
clc
fildll
jmp
jmp
fadd
mulb
jmp
xchg
in
lods
cmp
aas
loopne
mov
xchg
mov
mov
or
mov
fcoml
mov
adc
lea
and
ljmp
leave
mov
bound
out
test
lret
aam
xor
xchg
in
jge
iret
jmp
testl
dec
xchg
mov
gs
jns
mov
mov
add
mov
sbb
push
mov
xor
fnstcw
inc
cwtl
xchg
push
dec
sub
push
cmpsl
out
cmpsb
cwtl
jmp
js
cmc
adc
fldt
pop
mov
mov
or
xchg
cmp
mov
xorl
ss
out
insl
das
or
mov
cli
cmp
scas
pushf
jmp
xchg
in
jb
mov
in
jnp
pop
sub
push
push
dec
mov
add
popf
loopne
jp
pop
enter
push
mov
add
shll
cli
gs
cmp
cmc
pop
cs
lret
lods
mov
call
xchg
mov
hlt
aas
xchg
mov
js
push
dec
test
jo
xor
cmpsb
inc
jae
faddp
stos
pop
jl
mov
mov
mov
leave
xchg
lret
mov
inc
fwait
int3
xchg
cmc
loope
aam
pusha
mov
add
push
mov
cmp
aad
adc
orl
pop
outsl
push
pop
xor
mov
sar
int3
das
aas
out
cmpsl
xchg
sub
mov
inc
rclb
pop
pop
fsubrl
ja
ret
xchg
sbb
push
fiadds
ret
shll
mov
xor
daa
mov
mov
jl
cltd
cld
insb
and
rolb
jnp
lahf
icebp
repnz
mov
ret
jl
aad
mov
rorb
jbe
cmp
inc
ljmp
mov
push
filds
or
mov
addr16
es
sbb
test
mov
cmp
adc
add
mov
cmp
adc
push
xor
fisubrl
adc
rcl
mov
xchg
mov
pop
cmp
addb
leave
cmp
cmp
das
es
xchg
icebp
xchg
mov
sub
pop
cs
and
out
mov
or
mov
pop
sbb
pushf
ja
outsb
leave
aam
enter
shlb
adc
xchg
adc
adc
imulb
clc
jg
and
pop
addr16
loop
into
jge
push
insl
xor
sbb
ret
insb
cmp
out
mov
dec
hlt
pop
stos
lods
add
and
mov
add
add
sbb
inc
or
fisubrl
outsl
andb
loopne
data16
push
pop
fwait
les
cli
add
mov
rcrl
popf
or
cmpb
fwait
adcl
jae
lods
mov
cmp
lahf
mov
add
test
in
sti
or
inc
add
adcb
test
xor
icebp
mov
ss
imul
out
jne
sahf
jbe
mov
mov
push
jbe
push
cmp
andl
add
jp
xor
repnz
jmp
inc
push
in
cmp
or
jo
jmp
cwtl
cmovl
mov
push
dec
xlat
jg
jmp
icebp
mulb
adc
outsb
mov
push
jecxz
ret
xchg
enter
push
nop
popa
mov
pop
lock
aas
cwtl
fucomip
or
aaa
shlb
xchg
es
and
push
mov
inc
arpl
je
lahf
les
adc
dec
mov
daa
je
addb
jns
leave
push
mov
dec
xorb
pop
jge
sub
ret
pushf
push
pop
push
enter
je
loope
xchg
outsb
imul
mov
dec
icebp
dec
sbb
pop
rcrl
pop
inc
mulb
xchg
and
mov
cs
xlat
rcl
sbb
adcl
sbb
cmp
out
inc
and
push
push
std
pop
jo
pop
and
inc
mov
mov
dec
outsb
adc
jb
mov
inc
sub
outsb
lods
test
arpl
movsl
jns
cs
ret
mov
mov
pop
loopne
add
aas
mov
fildll
je
enter
pop
inc
js
xchg
pop
and
jg
xor
add
inc
xchg
stos
xchg
mov
adc
sub
out
sub
ljmp
or
mov
cmp
xchg
sbb
dec
pop
jb
mov
aam
dec
jle
sub
or
adc
mov
test
push
ja
rcrb
out
rcll
pop
xorb
mov
mov
push
jo
imul
jns
jb
nop
mov
dec
xlat
fdiv
and
jl
jae
jo
scas
mov
ret
in
rol
cmp
jp
enter
mov
and
add
jne
mov
inc
roll
jmp
dec
imul
push
jle
js
cmp
pop
mov
cmp
cmp
shlb
jmp
cmp
repz
inc
iret
push
lods
sbb
pushf
bound
loopne
cmp
fmul
in
xchg
push
push
mov
rcll
push
lret
xchg
sub
jo
and
outsb
dec
jecxz
jl
sbb
call
imul
enter
jp
loopne
cmp
daa
iret
xchg
fisttpl
sub
scas
in
fisttps
gs
jb
std
subl
cmpsl
jl
stc
ret
jb
sub
pop
jnp
sbb
movsl
in
fistpll
ret
add
loopne
xchg
cmp
push
in
jne
sbbb
add
mov
adc
int
jp
test
imul
cmp
jg
addr16
cltd
push
es
dec
mov
fs
xor
repz
cmp
sbbb
jno
or
pop
hlt
es
aas
xchg
jnp
and
jo
repnz
inc
mov
push
aad
jb
lcall
xchg
pop
scas
jb
or
adc
jg
lret
push
clc
test
loope
pop
rcrb
in
mov
test
shrb
dec
fmul
or
sbb
sub
push
sahf
push
dec
hlt
ja
jmp
dec
subl
aad
adc
stc
repz
pusha
inc
fwait
call
aas
data16
or
out
mov
gs
popa
das
and
cmp
mov
xor
and
repnz
mov
inc
and
aam
xchg
or
jns
dec
push
aaa
loope
movl
inc
ja
mov
hlt
inc
mov
push
in
popf
cmp
cwtl
inc
inc
call
adc
xor
cli
push
jb
pushf
push
xchg
add
push
push
mov
mov
pusha
push
lods
in
notl
iret
int
loopne
cmp
jne
hlt
fs
int3
leave
mov
pop
iret
jp
inc
adc
mov
mov
push
fidivs
call
cmp
loope
lcall
sub
and
cmc
sub
rol
xchg
ja
call
pop
arpl
pop
pop
jnp
in
xchg
mov
mov
pop
mov
lods
push
mov
lret
rclb
and
jno
xchg
aad
push
call
cld
mov
push
fmull
out
adc
push
xchg
testb
lods
sub
cmpsb
sub
sub
lret
int3
sbb
mov
or
test
daa
and
scas
test
andl
sbb
cltd
add
add
mov
mov
jno
sar
sub
cmp
flds
or
xchg
in
adcl
ret
jecxz
jmp
int3
in
fwait
jle
in
fwait
pop
add
fbstp
dec
xchg
je
add
jb
das
pop
push
and
pop
xor
scas
out
sub
dec
aas
mov
jae
sti
dec
dec
mov
inc
cs
inc
faddl
xor
dec
out
adc
mov
iret
dec
cmp
lods
sub
loopne
mov
sbb
xchg
sbb
add
popa
fcomps
mov
jmp
xor
mov
cmp
fcmovnu
sub
and
cmpsb
stos
mov
xor
and
xchg
push
cmp
and
imul
ds
fwait
popf
ljmp
mov
push
jecxz
push
cmc
int
enter
hlt
mov
add
enter
adc
dec
clc
ficoml
xchg
lcall
cli
jp
dec
jbe
cmp
cs
inc
mov
imul
sub
pop
rolb
repz
hlt
inc
lret
adcb
add
push
aaa
push
and
js
call
or
gs
jge
cmpsb
dec
add
popa
inc
out
out
xchg
push
mov
pop
cmp
jle
xlat
mov
arpl
and
stos
outsl
jno
xchg
xor
and
outsl
xchg
dec
xor
stos
mov
pusha
push
mov
inc
jbe
jnp
mov
push
pop
xchg
cli
push
cs
lods
inc
xor
mov
icebp
or
dec
lods
pop
enter
lock
lock
xlat
sti
or
in
pushf
test
jl
xor
cmpsl
insb
je
ret
pop
mov
jo
sub
testl
jg
cmp
add
or
popa
mov
loopne
push
push
fsubrs
fs
push
jg
cmpsb
shlb
jns
pop
inc
xor
mov
xchg
adc
jo
jo
mov
mov
xchg
lods
dec
je
push
sub
test
jl
and
aas
mov
fcomps
lods
bound
imul
sbb
mov
out
mov
inc
stc
das
xchg
add
cmp
mov
les
negb
add
jl
inc
dec
mov
pop
fcom
mov
fcomps
mov
pop
xchg
dec
imull
in
and
in
mov
mov
stos
xchg
hlt
mov
pushf
xchg
out
rorb
stos
mov
add
mov
pop
xor
pop
into
das
add
test
lods
adc
loopne
sbb
mov
mov
cmp
and
jns
push
jns,pn
lods
rolb
addr16
lods
rcll
movsl
outsb
arpl
pop
popf
push
ds
stos
push
jbe
mov
pop
sahf
out
adc
xor
mov
js
clc
sbb
int
pop
adc
subb
sub
push
add
push
and
cltd
adc
je
lods
rorl
push
je
dec
cmpsb
mov
push
jno
bound
sub
popf
push
jmp
cmc
repz
mov
and
or
es
in
xchg
pop
sbb
push
cmpsb
js
jmp
push
add
cmp
jl
scas
push
cmc
hlt
imul
loopne
rorl
add
mov
inc
fcomps
push
dec
sarb
inc
or
or
shl
lahf
insb
rclb
pop
pop
iret
xchg
sbb
xchg
pop
inc
shll
push
xor
mov
add
lcall
repnz
lods
and
mov
out
pusha
sahf
test
shll
push
roll
jae
and
cmpsb
nop
push
mov
fadd
nop
mov
leave
inc
repz
and
mov
test
push
loopne
rep
test
ljmp
push
mov
mov
push
test
mov
pop
enter
sahf
push
dec
sub
daa
ja
mov
ss
dec
in
movsb
iret
xchg
jp
fcomip
sti
cmp
sahf
ret
ret
sarb
int
imul
in
cmp
aas
jbe
mov
push
xchg
fistpl
int
jae
rclb
sbbl
dec
pop
add
push
in
cs
adcb
and
sub
pop
insl
repz
xchg
cmp
in
outsb
cmp
aam
movsl
dec
repz
loope
cmpl
mov
arpl
mov
iret
cmp
loopne
mov
jl
aad
cmc
mov
sub
mov
test
inc
push
mov
das
mov
cmpsl
shll
icebp
dec
mov
cmp
dec
mov
jno
stos
fisttpll
mov
outsl
xor
stc
cs
add
fstps
cmp
bnd
cmp
lahf
or
ret
aad
pop
shrl
mov
lahf
testb
fbstp
mov
xchg
test
gs
std
mov
mov
je
sti
push
sbb
push
aas
test
sbb
push
add
ret
data16
divb
stc
popa
sbb
insl
fcoml
rcrb
inc
pop
pop
ds
cmp
xchg
pop
xor
pushf
aaa
or
sub
mov
ret
or
sub
add
mov
roll
pop
std
mov
data16
inc
jmp
stc
scas
loop
jnp
push
loope
icebp
rorb
add
push
popf
xchg
mov
cwtl
inc
inc
ret
scas
mov
es
jae
add
lods
daa
test
test
ret
adc
xchg
cltd
cmp
jmp
pop
push
dec
adc
inc
cld
jecxz
ss
addr16
mov
shl
lea
cmp
adcb
lcall
sbb
repnz
scas
stc
mov
stc
add
add
call
sub
adc
fiaddl
ss
sahf
shlb
mov
xchg
mov
pop
imul
cmpsb
pop
and
lcall
insb
popa
stc
xor
pop
lods
test
xor
mov
ja
faddp
jns
outsb
in
out
or
movsl
xchg
movsb
ljmp
std
adcl
movsl
ficoms
sbb
mov
xchg
mov
pop
je
loop
aas
xchg
and
push
leave
pop
in
das
jmp
shlb
dec
mov
mov
push
jp
and
push
popf
pop
sahf
and
out
mov
shll
dec
cmp
sbb
jae
out
das
mov
or
xchg
pop
jle
pop
roll
dec
and
lsl
adc
xor
xor
pop
mov
or
mov
leave
xor
push
lods
add
daa
cmpsl
push
jmp
push
inc
ljmp
imul
insl
push
and
cmpsb
scas
push
sti
rorb
or
imul
push
sub
jnp
push
pop
mov
pop
mov
insl
inc
ret
xchg
fisubrl
jmp
cmp
mov
movsl
call
movsb
sub
dec
jp
mov
or
add
pop
mov
inc
jg
mov
lock
sbb
rcll
insl
pop
in
lds
add
popa
xor
test
stos
jae
jp
sbb
adc
xchg
lods
xchg
xor
pop
std
out
mov
and
mov
test
cwtl
inc
xor
add
pushl
lret
inc
leave
outsb
loope
xchg
sbb
filds
insl
jb
fdivr
out
sarb
roll
xor
out
pop
in
push
mov
inc
inc
cmpsb
add
push
or
mov
add
push
cmp
jmp
movsl
push
inc
and
aam
pop
push
aas
adcl
or
sbb
mov
and
nop
jb
mov
fldenv
repz
pop
dec
cmp
out
std
sbb
fwait
dec
xchg
into
cld
jmp
cmp
stos
inc
inc
inc
cmp
in
mov
adc
ja
inc
pop
jge
xchg
push
mov
and
imul
pop
pop
mov
pop
repz
and
int3
lock
daa
inc
addr16
shlb
and
xchg
adc
cmpsb
ret
xchg
mov
jl
popf
xchg
adc
and
dec
mov
iret
jnp
into
dec
or
xor
inc
fildl
mov
lods
sbb
dec
inc
ret
xlat
and
xor
dec
mov
add
shrl
pop
jbe
and
push
inc
adc
xor
mov
adc
in
lea
arpl
cs
jecxz
lods
mov
sub
push
jg
pop
xor
popf
sbb
fsubr
inc
sbb
mov
hlt
xchg
cmp
push
cmpsl
mov
ror
xchg
ret
lahf
outsb
fucomip
leave
jnp
loope
fld1
imul
cwtl
inc
mov
inc
mov
movsl
in
idiv
lahf
mov
xor
popf
jne
es
scas
jbe
push
adc
dec
movsl
rorl
mov
mov
add
jnp
pushl
lret
cwtl
movsl
mov
insb
mov
div
outsl
imul
push
andl
xlat
mov
lods
and
mov
in
aas
adc
shlb
push
test
int3
dec
xchg
cmp
cmp
popa
jae
cmpsb
inc
iret
or
aas
loop
and
mov
je
ja
cmp
rol
mov
clc
aam
fisttps
out
mov
jbe
add
mov
cmp
lret
lcall
push
cmc
or
out
mov
xchg
xor
rcrl
jp
movsb
inc
rorl
sub
sarl
fisubs
ja
mov
pop
jnp
stos
cltd
mov
icebp
cmp
outsl
in
out
mov
mov
fcompl
aad
pop
movsl
movsl
mov
fbld
fwait
int
push
fwait
dec
sahf
or
out
mov
sahf
xor
cwtl
adc
ds
pop
adc
rcrl
xorb
gs
enter
sar
arpl
ret
mov
imul
mov
mov
outsb
cmp
stc
mov
or
ljmp
mov
cmpsl
ja
mov
std
fsts
test
or
add
outsl
push
mov
dec
into
enter
scas
push
je
fcoms
or
movsl
test
and
sub
and
std
mov
cmpsl
pop
outsl
sub
mov
sbb
sbb
add
mull
sarl
jbe
sbb
add
cmc
cltd
es
mov
xchg
pop
fxch
xor
mov
out
out
mov
or
mov
std
mov
cmpsb
out
mov
push
stos
dec
repnz
jno
mov
inc
cmp
xchg
mov
cmp
enter
mov
jp
jbe
sub
sub
bswap
hlt
ljmp
mov
mov
ds
jae
dec
das
mov
xor
xorb
add
push
sahf
icebp
sbb
daa
into
push
lds
out
call
fwait
dec
jbe
sbb
cli
lock
lea
in
neg
mov
hlt
push
xor
add
jb
mov
push
inc
push
jb
ja
cmpsl
cmp
cmc
jge
out
lcall
xor
or
loope
test
leave
pop
sub
pop
dec
insl
sub
lahf
or
pop
loopne
into
pop
dec
mov
out
and
jno
cmpsb
add
xchg
push
mov
inc
xchg
sbb
add
or
xor
push
std
add
dec
es
mov
mov
dec
gs
loop
rolb
mov
push
les
sarb
lret
fdivrl
pop
xchg
inc
mov
cmp
cmp
push
roll
js
pusha
rcr
rol
repz
mov
xchg
ds
pop
addr16
or
adc
xor
clc
xchg
add
and
jno,pt
and
xchg
adc
stos
xor
arpl
pop
scas
je
sbb
xor
or
sub
sbb
dec
lods
push
mov
and
popa
jnp
adc
pop
je
arpl
jmp
movsl
jne
bound
jno
xchg
cmp
xor
mov
xlat
jb
xor
fistpll
notl
outsb
xor
rolb
mov
xchg
hlt
daa
dec
sub
das
jg
subl
lds
sahf
pop
adc
cmp
incl
cmp
mov
cmp
adc
fsub
imul
xchg
movsl
jle
cmpsb
notb
pop
nop
and
dec
int3
jg
mov
call
leave
push
repnz
mov
in
push
mov
arpl
pop
loope
inc
jle
fisubrl
popa
lods
decl
cmp
lcall
jo
mov
add
in
mov
in
enter
in
pop
mov
shll
sbb
sti
inc
jecxz
and
hlt
mov
movsl
sub
lahf
int
cmpsb
mov
jg
mov
xor
add
test
lcall
xor
jg
cwtl
adc
pop
mov
insl
push
mov
cld
mov
lret
adc
fs
xor
jne
ficoml
rcll
jl
das
mov
enter
push
stc
cli
pop
cmp
mov
cmc
sbb
jo
arpl
int
or
test
shll
repnz
jge
and
xor
mov
fldz
addl
lcall
add
and
pop
in
insb
test
cmpsb
adc
in
rol
mov
sbb
les
fiaddl
adc
mov
dec
mov
fisubrl
sub
push
mov
into
pop
lcall
mov
loope
lret
incb
cmp
repz
sbb
push
xlat
fisubs
xchg
jle
push
sbbb
push
jno
adc
mov
and
bnd
xlat
test
adc
das
inc
out
cmp
xchg
in
aad
mov
stc
out
sbb
mov
aam
ljmp
or
stos
xchg
ja
or
xor
inc
push
out
outsl
test
into
mov
xchg
arpl
cmpl
mov
jnp
jmp
sub
mov
inc
das
inc
and
loop
sti
leave
dec
sahf
sbb
int
dec
je
dec
insl
pushf
shlb
mov
add
xchg
mov
xor
lock
dec
jnp
fs
xor
push
loop
daa
cmp
loop
idivl
pop
int
jmp
sbb
inc
jbe
add
popf
xchg
jecxz
xor
cmp
jp
adc
mov
imul
int3
xor
stc
inc
or
lods
jg
dec
ds
loope
push
sub
imul
fwait
ret
imul
and
add
gs
push
xchg
in
adc
mov
stos
inc
insl
roll
clc
lret
pushf
mov
inc
inc
test
push
inc
loopne
and
cmpl
fcoms
decl
les
imul
popf
cmp
xor
int3
mov
mov
mov
imul
jl
xor
dec
dec
out
into
popa
pop
ja
call
pushf
jbe
pop
ret
add
cmpsl
mov
xor
adc
stos
imul
add
adc
xlat
mov
or
cmc
xchg
insl
jle
push
rclb
loop
add
dec
nop
fadds
jmp
into
rclb
or
push
cmp
scas
adc
sbb
inc
mov
js
pop
jmp
sbb
ror
sub
push
in
out
test
bnd
dec
rorl
mov
mov
mov
xor
cmp
fdiv
jno
mov
imul
test
sbb
xchg
lret
or
mov
add
scas
ss
cld
rorb
pushf
adc
sti
push
aad
adc
sbb
mov
int
fs
mov
testb
lds
dec
ret
add
add
stos
cmp
ljmp
pop
jle
mov
adc
jae
shrl
mov
aaa
jecxz
xorl
xor
lods
pop
cmpsb
pushf
cltd
mov
daa
arpl
ret
repz
mov
imul
es
push
push
xchg
pushf
jg
and
repnz
push
mov
push
push
jae
cwtl
pop
shl
jns
jmp
lods
jae
inc
outsb
test
rcl
add
loopnew
hlt
roll
dec
sub
daa
mov
aad
pop
gs
xor
mov
pop
push
sub
fnstenv
pop
popf
push
jecxz
cld
aad
push
mov
jo
mov
mov
push
mov
cmp
out
cltd
cmpsl
add
test
cs
mov
push
je
push
in
push
jnp
mov
ret
into
jle
test
xor
es
in
cwtl
cmc
inc
cmpb
jo
movsl
fwait
jmp
sub
in
sahf
testb
xor
lds
das
mov
or
fstps
imul
icebp
addr16
sbb
mov
jge
mov
adc
dec
add
adc
adc
sub
mov
add
sbb
sbb
pop
push
and
aam
lcall
enter
and
mov
inc
shr
bound
jnp
gs
and
icebp
jg
fsubr
xchg
cmp
pop
xor
pop
push
push
insl
xor
repz
add
ret
jecxz
mov
jmp
loopne
fs
and
movsl
xor
rorl
dec
shrb
adc
pop
bound
mov
shlb
xor
sti
pop
jmp
insl
xchg
wrmsr
sub
xor
mov
push
xchg
push
testb
sbb
dec
mov
shl
adc
jl
repz
sahf
inc
aaa
mov
icebp
jno
cmp
jp
sub
ds
inc
adc
fldenv
clc
mov
adc
sbb
push
insl
scas
into
in
pop
fwait
inc
cmpsl
jecxz
add
mov
xchg
incl
dec
dec
pop
fdivl
mov
xor
push
ret
pop
xor
push
and
push
test
je
xor
jno
addr16
xchg
aad
fstps
stos
dec
push
push
fwait
fs
xor
sbb
dec
out
add
push
cltd
cltd
je,pn
adc
or
xchg
lahf
mov
xchg
aam
jp
fldt
and
cmp
ja
pusha
fildl
adc
push
xchg
adc
inc
stos
call
test
fucomip
mov
clc
lahf
adc
aad
daa
enter
fsubr
inc
pop
loopne
pop
add
push
faddl
cmp
ljmp
addr16
jle
dec
add
fildll
push
push
test
adc
inc
lods
xchg
sbb
pop
loop
rcrl
add
out
sub
adc
jmp
push
cmpsb
fwait
mov
addr16
push
test
mov
sarl
rcrl
jo
out
rcl
sahf
lahf
in
sub
jmp
push
loop
add
jae
sub
fsubrs
xchg
add
iret
out
popa
inc
arpl
into
jmp
idivb
bound
aas
sub
jmp
dec
xchg
sbb
xchg
std
add
xor
cmp
inc
mov
jns
das
das
push
lea
filds
ret
push
sub
mov
lea
stos
fninit
mov
adc
push
imul
mov
shl
mov
jg
sbb
out
push
stos
fnsave
shrl
cmp
test
pop
outsb
data16
mov
jecxz
and
inc
pop
repz
xor
aad
call
mov
lcall
or
cmp
xchg
addr16
adc
jno
mov
adc
pop
cmp
mov
in
ljmp
clc
cmpsl
xor
mov
cmp
inc
nop
xchg
jmp
push
stos
mov
xchg
cld
dec
sub
loopne
ror
or
aaa
sbb
xchg
fldl
mov
xlat
jne
xor
xchg
push
leave
push
adc
daa
mov
mov
in
inc
xorl
sbb
push
pop
pushf
or
dec
jns
pop
inc
sub
imul
dec
out
ss
popf
loope
inc
enter
cmc
add
test
iret
add
cwtl
insb
dec
es
sub
shrb
xchg
ljmp
pusha
jae
jo
mov
in
xlat
push
ds
push
pop
jno
fs
sbb
or
andb
daa
ss
mov
jle
dec
xlat
mov
pop
xchg
dec
or
shll
ret
pusha
pop
stos
stc
andl
call
cld
xor
jge
dec
inc
jae
pop
push
inc
sarb
out
xchg
inc
or
mov
fnop
pushf
repz
pop
mov
cld
xchg
popf
lahf
inc
xor
and
aad
jl
push
imul
inc
jo
pop
in
shll
adc
das
xchg
sub
not
and
ret
push
xchg
pop
sub
stos
push
movsb
neg
xchg
inc
push
movsl
add
xchg
xchg
mov
dec
mov
popf
test
imul
arpl
add
repz
popa
xor
loope
psubq
in
ret
sti
sub
inc
dec
xor
lret
sbb
sbb
sbb
add
jae
test
lock
test
jnp
dec
ds
outsb
movsb
not
mov
jp
into
adc
mov
pop
jb
jne
mov
or
rolb
shrl
ret
xchg
sbb
dec
mov
push
mov
dec
pop
push
mov
stos
mov
dec
and
mov
decl
rcr
and
mov
inc
push
js
stos
and
in
and
fwait
sbb
and
xchg
je
push
cmp
sbb
cmp
out
lock
mov
cmpsb
and
addr16
cmc
iret
imul
fnstsw
cmpsb
mov
loopne
outsb
enter
repnz
lret
xor
in
sbb
or
inc
xchg
daa
dec
mov
or
push
in
test
pop
jmp
sbb
pop
inc
ret
testb
cmc
mov
sub
inc
pop
stos
loopne
sub
scas
inc
pushf
or
lods
sbb
data16
addb
and
lcall
aaa
aas
rcl
jb
push
sub
into
lods
imul
insl
xor
ret
cmp
popa
inc
dec
gs
push
xchg
enter
pop
mov
nop
or
sbb
push
mov
loop
out
rcl
mov
in
push
fisttpl
aad
inc
sbb
inc
es
dec
out
mov
nop
mov
cmp
movsb
cltd
add
jns
dec
sbb
mov
mov
std
out
cltd
sub
addr16
push
sbb
cltd
fidivl
test
loop
pop
and
mov
les
inc
lock
sub
push
cmpsl
mov
js
nop
pusha
arpl
loopne
and
rcll
dec
insl
je
decb
add
sbb
popf
sbb
xchg
cli
sub
popf
scas
icebp
xchg
cmp
cmp
outsb
subl
mov
adc
inc
push
mov
dec
cltd
mov
jecxz
xchg
push
jo
mov
jg
xchg
dec
ret
test
xor
dec
es
push
inc
outsl
stc
bound
subl
mov
add
mov
jmp
jg
push
push
inc
fs
sub
clc
ror
cltd
hlt
jle
push
adc
push
fdivs
lcall
cld
rcrl
xor
testl
in
psubb
adc
xor
mov
push
movsl
lcall
dec
jb
xor
popf
je
dec
addr16
inc
sbb
inc
shl
jmp
mov
sub
aam
mov
mov
lcall
mov
jle
jnp
sbb
dec
push
push
sbb
sub
jle
into
sbb
or
scas
fists
jno
dec
cmp
std
mov
outsl
adc
mov
aad
std
shlb
inc
lds
in
or
aam
fcompl
adc
adc
mov
ret
xchg
adc
pop
xchg
adc
fmull
repz
xchg
stos
cmpsb
pop
mov
pusha
or
in
mov
jl
popf
loope
js
addl
decl
int
lds
rorl
fdivrs
mov
pop
sbb
mov
xchg
jmp
mov
je
aam
xlat
imul
das
dec
cmp
and
jns
pushf
out
push
fildl
roll
cmp
pop
loope
push
adc
inc
loopne
push
test
and
hlt
int
adcb
and
insl
add
cmc
xchg
push
xor
cld
lods
push
adc
icebp
adc
xor
cmp
mov
stc
xchg
cmc
ret
repz
out
add
jnp
adc
incl
xchg
push
pop
and
nop
sbb
sbb
out
dec
das
fdivl
inc
or
test
xlat
or
outsb
adc
aad
cmp
lahf
jno
daa
sub
jle
insb
bnd
orb
jp
lock
cmc
or
int3
mov
and
shlb
jno
addr16
pop
je
test
mov
fcomps
push
lock
push
add
dec
repz
xchg
iret
add
test
out
pop
adc
ficoms
and
arpl
fsubs
test
pop
nop
mov
mov
add
lahf
cs
int
std
xor
insb
divb
pop
negb
leave
sub
or
jmp
mov
fsub
dec
mov
xor
das
lds
jo
fidivs
sub
sbb
mov
shll
std
ret
xchg
push
adc
sub
mov
ffree
adcl
pop
ja
call
push
add
mov
shlb
push
push
pushf
push
mov
jle
loop
mov
inc
mov
push
sbb
jecxz
orb
ror
fimull
pushf
pop
ret
in
es
jecxz
out
mov
rcll
fs
mov
dec
mov
gs
cmp
lea
inc
ds
inc
dec
aam
pop
add
pop
xor
xchg
cmp
movsl
mov
lcall
mov
push
ret
mov
outsl
dec
clc
sbb
faddl
popf
insl
adc
fldt
mov
pushf
pop
sahf
jb
les
and
pop
mov
pop
cmpsb
cmpsl
sbb
cmp
movsl
dec
and
mov
mov
pop
nop
test
mov
in
arpl
or
outsl
jb
insb
shl
sub
jp
rclb
loopne
push
xor
add
int
in
inc
xchg
jle
test
adc
movsb
mov
movsl
sbb
roll
mov
insl
pushf
xchg
es
inc
mov
sarl
in
cs
add
cmp
sub
addr16
popw
sub
fsubs
std
xor
lds
lds
shrl
in
mov
addr16
add
out
mov
pusha
ljmp
xchg
fsin
push
scas
bnd
jg
cmp
jmp
insl
mov
mov
xor
xchg
iret
pop
and
rcll
nop
in
push
fisttpl
sub
fisttpl
sbb
out
xor
mov
sahf
popa
imul
xor
out
xor
sub
xchg
or
jp
dec
jge
in
jns
mov
scas
hlt
xchg
mov
dec
xor
push
mov
jne
cmp
jae
test
mov
mov
stos
xor
mov
fistpl
pop
out
mov
shl
out
ret
pusha
xchg
cmp
into
jns
repnz
movsl
pop
out
pop
insl
lahf
negb
call
push
pop
lret
mov
int
jmp
outsb
cli
inc
cltd
test
cmp
icebp
add
out
movsl
jns
pushf
in
xchg
mov
jne
mov
mov
xchg
stos
subb
mov
xchg
or
sbbb
add
in
push
inc
jge
ja
js
pop
fisubrl
cmpsl
sub
push
fdivs
loope
enter
add
std
xchg
fstpl
les
add
lods
mov
dec
rcrb
mov
jns
cli
mov
shl
mov
jns
loop
xor
aas
pop
test
xor
insb
jle
test
imul
les
push
shll
rcrb
out
or
mov
inc
out
popf
xlat
es
repnz
sbb
aam
fdivrl
rclb
inc
outsb
mov
cli
adc
sbb
cmp
push
cmpsl
enter
jbe
into
out
mov
jae
pop
xor
sbb
cmp
scas
ds
fstl
inc
or
cmpsl
inc
scas
xlat
roll
mov
fldl
add
in
movsb
xchg
ret
cmpsl
dec
and
test
mov
and
push
insb
stc
cmpw
fcmovnu
out
lahf
cmp
je
xchg
pop
mov
mov
jns
out
adc
scas
inc
jmp
push
lsl
xchg
call
fdiv
imul
stc
add
sub
sub
sbb
add
jle
push
mov
pop
test
and
fistps
mov
fwait
jle
sti
xchg
int
mov
adc
sub
mov
outsl
add
push
mov
call
jno
or
cmp
dec
xor
movsl
xchg
fdivrs
mov
fldl
mov
pop
cmpb
addr16
cmp
xor
fidivl
mov
adc
xchg
inc
fstl
out
xor
js
out
add
push
cmp
xor
add
lret
push
sti
push
out
mov
ss
pop
std
icebp
xchg
mov
adc
push
push
das
scas
xor
outsb
mov
clc
scas
lcall
aad
sub
inc
cltd
scas
lods
xchg
and
mov
mov
jle,pt
sarb
xor
or
insl
jns
dec
movsb
push
je
addr16
cld
jge
mov
shll
std
daa
xchg
cld
xchg
rcll
mov
jmp
mov
pop
mov
or
dec
xlat
xor
fsts
xchg
ja
out
bound
sbb
xchg
and
rcrl
dec
stos
adcb
call
push
pop
addl
mov
aam
cwtl
or
jl
jl
lods
pop
push
sbb
sub
imul
push
imul
imul
and
lock
lods
in
es
dec
lods
rcll
test
call
ds
xor
push
mov
mov
loopne
and
test
sarb
ret
data16
loop
ds
adc
punpcklwd
clc
nop
dec
push
xchg
cmp
test
stos
je
pop
or
and
iret
and
cmp
lods
xchg
addr16
stc
repnz
mov
pop
push
cmp
adc
hlt
fstl
or
fsubl
jb
xor
sub
sbb
push
add
fildl
inc
scas
adc
and
jb
testb
adc
xchg
sub
pop
clc
pop
xchg
sub
roll
sbb
pushf
or
mov
adc
push
xor
xchg
les
into
inc
mov
ficomps
lock
pop
fbld
mov
fdivr
in
add
out
xlat
mov
iret
xchg
pop
add
test
sti
mov
sub
ja
pop
imul
or
sub
mov
leave
mov
adc
xchg
rcrb
jmp
or
fdivs
inc
stos
jns
or
movsb
into
sbb
mov
movsl
jecxz
push
and
sbb
push
cmpb
xor
inc
call
xchg
mov
out
rorb
cmc
les
mov
mov
pop
mov
fldcw
or
scas
mov
xchg
xor
mov
and
add
scas
pusha
cmp
inc
push
sti
adc
out
iret
sbb
ret
pop
repnz
out
mov
mulb
xchg
mov
pop
and
pushf
xchg
cmc
dec
stc
stos
add
popa
pop
je
pushf
test
pop
clc
test
adc
sub
ret
fwait
sbb
cmpsb
shll
sti
test
pop
jb
sti
subb
mov
mov
daa
xchg
push
movsl
xchg
inc
cmp
cmc
int
push
mov
out
mov
add
test
addb
test
andl
xlat
aas
cmc
imulb
les
jle
arpl
in
scas
xor
fs
mov
xchg
stos
outsl
shr
and
icebp
sahf
sub
in
xchg
lahf
stos
push
and
jl
dec
pusha
pop
loopne
insb
cmc
insl
push
xchg
mov
lods
mov
loope
push
or
cmp
mov
in
je
add
jbe
sbb
lret
lods
or
inc
ret
or
dec
pop
cmp
mov
shl
add
mov
mov
in
jl
xlat
sbb
mov
push
xor
add
scas
pop
pop
jns
sub
cli
ljmp
sub
cltd
inc
sbbb
les
or
aad
imul
mov
cmp
cmc
lar
mov
rorl
inc
cltd
leave
push
aam
jmp
sbb
inc
jl
sti
or
cmp
ljmp
xchg
push
sti
cmc
loop
mov
mov
test
cmp
enter
movsb
aaa
xchg
bound
xchg
sub
out
adc
jae
push
inc
jno
xor
into
out
and
jb
test
mov
pop
cmp
mov
push
stos
jp
stos
sub
out
or
aaa
outsl
ds
pop
jle
inc
nop
das
inc
jb
xor
subb
movsl
pop
lods
sbb
mov
enter
jmp
mov
and
adc
enter
xchg
xor
sub
push
push
jo
int3
jae
ss
int3
mov
cld
stos
push
adc
jmp
adc
mov
add
aas
icebp
aam
movsb
rcr
cmpsl
sti
ret
int
dec
mov
xor
pushf
cltd
iret
adc
mov
sub
sbb
ljmp
mov
adc
scas
dec
insl
sbb
push
inc
mov
xor
pop
aaa
push
mov
inc
jb
inc
pusha
mov
xchg
jb
ja
ljmp
jne
mov
sub
xchg
dec
cmp
dec
fsub
cmpl
cmc
fdivl
ljmp
arpl
dec
pop
mov
jecxz
or
ret
gs
mov
fstpt
mov
mov
mov
scas
lcall
and
ss
mov
push
shlb
add
push
pop
push
lds
inc
shl
xchg
gs
inc
mov
pop
popa
push
sbb
pop
mov
loopne
icebp
adc
loope
mov
ret
out
xor
xlat
arpl
sahf
shrb
push
lahf
decl
jnp
scas
gs
dec
outsb
jle
ss
add
xor
fldl
pop
jno
cmp
inc
std
mov
fs
mov
imul
pop
aam
xor
push
test
sbb
addr16
ret
clc
mov
dec
insl
je
iret
and
xchg
js
and
sbb
and
rcr
imul
xlat
pushf
fs
sub
xchg
sub
xchg
int
shrl
jbe
pusha
shlb
scas
adc
push
pop
jns
xor
lret
fcomps
or
test
mov
aam
cmp
inc
dec
cmpsl
pop
cmp
inc
dec
sbb
notl
outsb
xchg
ret
lea
in
mov
adc
aas
add
push
jne
incb
xchg
dec
mov
mov
fdivrl
stos
movsl
ljmp
jne
in
insl
sbb
shl
les
fmuls
out
push
les
nop
das
or
dec
imul
negb
pop
and
loope
and
lea
sbb
dec
xchg
mov
add
int
gs
sub
jne
cmp
mov
testl
xor
sbb
fistps
imul
repz
lock
pop
push
jecxz
add
lock
cmpsl
test
adc
icebp
aad
cmp
lcall
lds
pop
mov
inc
push
in
shrb
nop
jmp
test
pushf
sbb
out
imul
stos
xchg
popf
push
xchg
inc
jp
push
orl
lock
je
pop
push
xor
sbb
push
pusha
ss
and
imul
add
cmpsb
int3
xchg
push
mov
jge
and
jle
fstpl
mov
dec
adc
sbb
dec
stc
mov
outsl
xorb
add
fsubrl
stos
push
fdivl
stos
mov
ret
xchg
push
fwait
xchg
push
jecxz
pushf
bound
pop
or
aam
jmp
dec
addr16
push
mov
pop
out
inc
mov
insb
fisubrs
pop
inc
sbb
mov
std
or
fstpt
push
cmp
notb
and
push
jae
out
mov
sbb
popf
jle
sub
imulb
addr16
fldcw
push
xor
push
jg
sbb
pop
dec
cmp
xor
ds
mov
mov
in
pushf
icebp
nop
shr
xor
in
push
sub
cwtl
es
movb
jle
pop
xchg
popf
xchg
fdivrl
jnp
inc
inc
adc
mov
clc
xchg
cmp
jno
aaa
shrb
shlb
mov
xchg
xor
inc
orb
fdivl
mov
adc
in
stc
pusha
negl
repz
jmp
ss
inc
movsb
add
or
sbb
call
xchg
sbb
jno
dec
inc
out
xor
inc
in
mov
jge
push
out
nop
mov
and
insb
dec
mov
lods
daa
xor
in
sub
mov
mov
cmp
pop
divb
insb
pop
adc
loop
inc
adc
lcall
jae
jnp
add
add
into
mov
repnz
mov
out
dec
sti
fstl
movsl
pop
mov
inc
dec
shrb
movsb
mov
dec
mov
dec
sub
outsb
mov
xor
mov
adc
cmp
xor
dec
mov
aaa
pand
inc
dec
in
out
sub
sub
and
add
inc
mov
jo
shl
cltd
mov
adc
inc
jbe
fwait
cmp
lret
xchg
idivb
xor
add
iret
cmpsb
jecxz
cmp
cmpsl
jae
hlt
clc
outsl
sub
jl
pop
jb
and
out
cmpsl
lods
pushl
andb
adc
dec
bound
clc
sti
call
insl
mov
pop
loope
xchg
jnp
outsl
sbb
or
cmpsb
pop
pop
cli
mov
ljmp
and
jg
sub
scas
ret
test
sub
xchg
icebp
imul
dec
push
sbb
pushw
or
push
dec
mov
jl
popa
cltd
sti
dec
xor
xor
xchg
jmp
mov
mov
hlt
mov
imul
xor
js
push
push
fdivrs
mov
xchg
sbb
push
xor
movsl
leave
mov
fs
fidivrs
cmp
jno
stos
outsl
lods
xchg
sub
inc
push
andl
imul
sbb
or
inc
push
sub
push
push
adcb
aas
sbb
insb
popa
inc
in
out
push
mov
sahf
or
fmul
pop
in
sub
inc
mov
sbb
and
jp
jmp
push
cmp
sbb
pop
dec
pop
dec
jmp
add
lds
pushf
or
mov
inc
or
dec
repz
loopne
pop
imul
jp
sahf
xchg
add
push
push
test
arpl
inc
mov
in
sub
arpl
call
scas
test
add
pop
cli
pop
or
mov
into
xor
pop
and
sbb
and
pop
nop
fwait
adc
push
in
dec
orl
mov
ss
data16
xchg
std
test
lods
dec
mov
dec
movsb
clc
iret
leave
jmp
ljmp
int3
scas
fidivrl
jmp
pop
inc
lea
call
cwtl
and
fs
and
test
subl
lods
inc
push
nop
repnz
jle
cmp
mov
loopne
mov
add
fwait
push
mov
inc
or
mov
adc
test
jge
stc
in
push
inc
push
sub
jge
cmpl
push
mov
mov
flds
hlt
call
push
push
xor
push
pop
inc
movsb
out
sbb
xorb
loope
loop
inc
mov
mov
push
sbb
push
adc
adc
popa
mov
mov
rolb
pop
out
mov
add
jae
out
rcrb
movsl
add
int3
xchg
mov
adc
mov
testl
and
jnp
lds
jo
hlt
ret
mov
andb
jle
push
cmpl
jo
push
popf
idivb
adc
sub
lret
sbb
mov
jae
cwtl
jecxz
mov
repnz
stos
mov
ret
cmp
sub
scas
out
cmc
mov
lock
mov
pusha
leave
in
fldcw
lods
push
scas
and
mov
jns
push
in
mov
js
xchg
in
aam
das
daa
jbe
cmpsb
out
cmp
cmp
push
cmpl
aas
sbb
jl
lret
into
inc
loope
lods
call
sub
pop
insb
les
push
ficompl
adc
sbb
lcall
ds
popf
lods
fwait
xor
or
jne
add
mov
xchg
pop
int
pop
mov
adcb
sub
xor
dec
pop
imul
in
xor
dec
xchg
test
push
jae
popa
mov
pop
mov
sbb
ret
repz
push
jo
jo
pop
out
cmp
cmp
pop
filds
push
dec
ret
jl
scas
test
adc
jo
push
add
out
imul
hlt
lods
cmp
jmp
rorb
mov
mov
repz
test
lea
inc
cmp
loope
dec
mov
inc
jae
inc
sub
jae
insl
movsb
js
or
andb
rcrb
and
add
outsl
shlb
stc
popf
rcl
mov
hlt
mov
cmc
gs
and
add
xor
icebp
push
mov
mov
movsb
outsl
xchg
fdiv
out
mov
es
loopne
fstl
pop
daa
add
push
xor
push
xor
cmp
or
loope
out
rclb
test
mov
or
push
adc
or
xor
popf
int
lods
ss
cmp
das
xchg
sbb
mov
xchg
repnz
cli
and
mov
or
insl
sub
jb
push
mull
cmp
loop
lret
shrb
sahf
mov
fwait
sahf
and
popf
cltd
aam
bound
lcall
shlb
ja
and
add
fsubr
or
mov
stos
sub
xor
cmc
sub
xlat
cmp
imul
mov
js
adc
movsb
call
out
inc
adcb
mov
or
jae
or
mov
rcrl
mov
sbbb
lods
roll
and
mov
hlt
adc
mov
pop
aas
adc
adc
aam
addl
jge
push
in
ret
scas
in
xlat
dec
mov
sub
xor
daa
bnd
mov
pop
add
sub
out
in
hlt
adc
out
mov
mov
or
push
rorb
jnp
or
pop
idivb
adc
pop
pop
cmp
push
insb
jne
test
dec
and
adc
jns
dec
or
lock
xchg
cmp
out
sub
int
insl
lret
aas
test
pop
xchg
cld
xchg
mov
ficoms
cmp
subb
xchg
cmp
scas
mov
scas
pop
loopne
lahf
xor
pop
fnstsw
mov
mov
adc
mov
mov
mov
pop
les
js
pop
lods
pop
andl
ds
sbb
aaa
xchg
les
pop
mov
push
xor
mov
jl
mov
xor
cmp
test
push
mov
xchg
mov
mov
push
jo
lret
and
xor
push
jge
sahf
lds
movsb
cmc
cmp
sbb
mov
push
inc
xor
xchg
cmpsl
icebp
xchg
test
ror
cwtl
ja
inc
pushl
jne
rcll
or
jg
mov
mov
lret
popf
mov
arpl
jo
loope
std
inc
cmp
mov
adc
cmpsb
insl
int
dec
add
leave
fwait
inc
xchg
dec
sarb
cltd
xor
popf
stos
sub
dec
or
pop
adc
add
ss
jge
ja
dec
sti
cmp
out
and
mov
sbbb
lret
ret
push
xlat
out
insb
jb
push
cs
add
dec
push
lret
mov
in
add
push
add
xchg
fmull
loopne
scas
fisttpll
sbb
sbb
fwait
pop
jb
xchg
roll
or
movb
arpl
mov
mov
add
sub
and
push
insb
inc
popa
mov
int
mov
pop
sub
outsl
xchg
fwait
push
dec
pop
mov
ja
xor
call
stos
push
mov
arpl
or
leave
adc
dec
cli
cmpl
xchg
xor
pop
inc
mov
add
mov
adc
shll
ss
dec
xchg
mov
sbb
pushf
jae
xchg
sub
cmp
dec
cmc
ss
mov
cmp
and
xchg
mov
dec
bound
pop
mov
xor
cmp
lds
sti
add
jb
aas
mov
jmp
push
add
cld
icebp
in
push
shlb
xor
cmp
pop
call
cltd
jle
fsubrp
mov
and
fistl
mov
decl
and
jmp
lahf
mov
in
dec
and
fistl
xchg
dec
and
and
pop
push
fstpt
out
xor
mov
jmp
sub
je
jmp
dec
jnp
mov
adcb
jae
fidivrs
gs
in
lahf
leave
outsl
mov
shlb
mov
sub
popl
mov
mov
mov
aad
pop
cmp
mov
or
idivl
outsb
rorl
cmp
dec
nop
imul
mov
cmp
rorl
mov
mov
inc
ds
aam
loop
mov
std
stos
sahf
scas
mov
inc
jle
or
lret
lds
dec
mov
es
ficoms
mov
in
adc
mov
push
adc
inc
insl
cmpsl
fldt
repnz
mov
es
inc
pusha
rol
movsl
bound
gs
jg
nop
inc
jo
add
mov
inc
pop
lret
scas
les
pop
ss
enter
scas
loop
mov
and
dec
nop
sub
sbb
test
into
ret
xor
jecxz
enter
or
daa
and
imul
sub
sbb
andb
or
loopne
testl
mov
fadds
jmp
mov
dec
mov
aam
hlt
fstpt
shrl
push
sti
sub
dec
aas
jo
jle
loopne
fidivrl
addb
addr16
lods
add
push
stos
aas
test
xlat
es
push
mov
test
ficoml
popa
xlat
xorb
and
aam
and
popa
jae
and
xor
push
fwait
pop
fmul
ss
mov
mov
data16
icebp
and
push
rorl
push
lods
sbb
fwait
imul
popa
orl
sahf
or
cmp
xchg
jne
pop
mov
inc
and
or
pusha
add
in
push
in
test
mov
fidivrs
inc
sub
stos
mov
leave
push
cmpsb
into
pop
xchg
int
or
jmp
shll
outsb
aad
adc
pop
into
cmp
stc
nop
cmc
and
push
lea
jg
xchg
add
rcl
aam
std
jno
and
mov
stos
std
jp
adc
fsubrs
or
inc
lret
adc
dec
ljmp
sahf
lret
sbb
mov
iret
xor
test
in
aam
jbe
notb
pusha
int3
mov
sub
inc
int
out
mov
daa
or
mov
fildll
pop
movl
pop
popa
xchg
jo
mov
mov
sti
pop
xchg
shlb
pop
and
sarb
inc
mov
inc
repnz
cli
lcall
mov
inc
cmpsl
jb
jge
jg
in
xor
fnstcw
aas
loopne
push
in
cld
push
gs
push
hlt
sti
mov
js
movsl
adc
arpl
or
fisttps
ljmp
lret
cmpsl
ret
rolb
xchg
test
enter
sbbl
fdiv
into
pusha
pusha
xchg
mov
pop
adc
repnz
sub
push
mov
test
leave
mov
arpl
sbb
mov
or
cli
mov
mov
sub
or
fwait
js
scas
push
popa
jns
mov
push
pop
jne
push
out
mov
xchg
lds
inc
jl
lcall
mov
xor
test
mov
jns
in
aas
dec
cmp
and
mov
lock
push
xchg
jbe
sbb
jge
pop
jae
push
iret
lods
std
adc
fsubrl
test
cwtl
in
pushf
neg
loope
adc
in
insl
andb
jecxz
in
lods
mov
arpl
add
nop
outsl
mov
fbstp
mov
shlb
add
mov
int
push
neg
and
ficoml
push
mov
vpunpckhbw
ds
cmp
lods
gs
fsubl
push
outsl
push
mov
fdivs
subb
adc
std
mov
mov
loopne
or
fwait
and
movsb
add
xchg
aaa
in
ret
mov
ja
adc
mov
push
test
sbbb
and
dec
sub
dec
mov
leave
dec
call
aaa
outsl
movsl
jge
and
dec
push
pop
aas
xchg
fisubrs
mov
fildll
adc
cmp
pushf
dec
std
inc
sub
mov
adc
add
mov
mov
lret
int3
fidivrs
call
in
xor
jge
dec
mov
imulb
pop
insb
loope
pop
xlat
mov
imul
repnz
mov
aam
ret
dec
ds
cs
out
mov
sbb
sbb
loope
add
clc
mov
jecxz
jp
sbb
cltd
inc
loopne
es
jge
or
xchg
xlat
adc
jg
mov
nop
ret
enter
sub
xor
xchg
lahf
and
xorb
int3
pop
adc
iret
stos
mov
mov
sub
sbb
or
mov
mov
jmp
ret
pop
enter
cmp
enter
dec
loopne
loop
jbe
xchg
imul
les
sub
push
dec
in
xchg
sbb
cwtl
xchg
cmc
push
lcall
shrl
pop
pushl
mov
pushf
push
scas
cltd
insl
lea
lock
sbb
push
cs
repnz
dec
mov
push
cmpsb
cwtl
mov
mov
adc
outsb
pop
jae
cmp
and
icebp
jmp
xchg
stc
cmovo
or
pop
pop
mov
jecxz
call
insb
push
xor
shrb
jle
mov
adcb
mov
and
push
mov
xchg
addr16
dec
push
xchg
adc
jb
notb
jmp
sub
mov
inc
inc
mov
mov
mov
cld
pop
mov
xchg
fists
dec
mov
in
xchg
sahf
adcb
sbb
dec
loopne
js
sub
aas
imulb
loop
push
dec
pop
rclb
mov
xchg
in
imul
cmp
pushf
pop
sbb
loope
movsl
or
pop
insl
push
lret
mov
out
inc
loopne
mov
jmp
pop
pusha
sub
aas
mov
fimuls
pop
jnp
cltd
jge
xchg
adc
out
adc
adc
xchg
cmp
or
test
add
jp
pop
loopne
loop
mov
in
das
and
clc
adc
aas
cmc
mov
jle
inc
loop
or
jge
test
fsqrt
ret
mov
rorb
nopl
xchg
lock
add
add
push
ficomps
scas
es
pusha
stos
enter
mov
xor
test
lret
push
adc
pushf
sub
xchg
call
aam
push
sbbl
add
mov
push
inc
or
mull
jne
int3
push
push
mov
js
pop
out
pop
popf
and
cmp
int3
xchg
adc
enter
fisubrl
fcmovb
xor
adcb
and
mov
jb
push
dec
in
aaa
rolb
inc
cmpsb
cmp
sub
mov
shrb
mov
and
negl
repz
mov
stos
lods
je
notl
idivb
adc
arpl
xchg
mov
add
or
inc
popf
pusha
test
test
lea
cmc
cmc
repnz
cmp
lret
mov
shr
dec
fiaddl
mov
push
adc
loopne
jg
arpl
dec
add
xchg
adc
sbb
sbb
test
int
lds
aam
sbb
dec
mov
in
or
jb
ljmp
lods
cmpsb
lds
cmpsb
inc
inc
xchg
add
cmpsb
or
iret
pop
nop
push
and
and
arpl
stc
jns
js
imul
sub
jl
jns
fst
jb
test
inc
insl
pop
and
mov
loope
cltd
js
sub
cmp
pop
fwait
int3
gs
mov
shr
push
sbb
out
sbb
add
dec
xorl
jnp
push
add
jae
sbb
aas
scas
mov
sarb
gs
daa
int
pop
aaa
xchg
es
cmpsb
adc
mov
sbb
call
ret
push
ljmp
hlt
out
movsb
movsb
rcrl
je
pop
mov
jg
jge
je
adc
xchg
fisttpll
jno
inc
push
jo
mov
mov
mov
adc
js
push
push
inc
sbb
pop
jmp
jo
fbstp
mov
xchg
rolb
cmp
push
mov
xor
sahf
lods
mov
dec
cmp
lret
fists
fwait
mov
pop
or
push
shrl
js
sub
and
insl
sbb
jp
popa
push
inc
scas
hlt
xchg
leave
sub
mov
or
cld
call
lods
icebp
adc
or
repz
push
aaa
add
outsb
add
fsubs
ja
mov
jae
ja
idivl
add
test
ljmp
or
mov
xlat
and
je
outsl
mov
loopnew
mov
inc
cmp
js
mov
mov
lret
or
repz
ds
xchg
orl
inc
mov
and
mov
cmp
jne
sbb
jmp
fwait
push
aaa
xor
push
mov
je
inc
cmpsl
and
mov
stos
dec
or
fidivrl
cwtl
cmp
jg
mov
mul
jbe
xchg
lahf
or
jp
mov
and
rorb
push
out
pop
out
mov
inc
rclb
adc
xchg
addr16
dec
popa
mov
ds
jp
add
scas
jne
outsb
mov
out
mov
add
pushf
xchg
inc
outsb
push
aam
jg
or
pop
clc
movl
mov
test
push
inc
stc
xchg
cmp
dec
orl
sub
mov
loope
adc
enter
jge
jns
ret
jns
inc
popl
das
add
cmpsl
inc
lods
mov
sub
xor
in
push
icebp
push
adc
pop
mov
push
test
pusha
jo
mov
enter
push
mov
ficompl
add
xchg
ficompl
call
cltd
xlat
int
stc
aam
fmuls
or
jge
icebp
xchg
pop
in
mov
loope
adc
and
js
aam
push
xlat
lods
scas
ljmp
xchg
rep
fbld
xchg
sahf
out
dec
push
or
xor
subl
hlt
outsl
mov
das
in
stc
sub
out
movsl
push
sbb
mov
push
aad
lds
sti
in
mov
push
leave
mov
pop
decb
sub
loope
push
xchg
jne
fidivrs
dec
out
inc
test
lds
inc
add
jnp
dec
jbe
sbb
sar
cwtl
enter
pop
or
int
mov
mov
in
in
or
or
push
lret
xor
inc
aaa
aas
xor
push
push
insb
subb
popw
ss
out
pushf
in
or
inc
int
xchg
mov
pop
sbb
mov
lret
jo
xchg
nop
xchg
out
push
lds
jnp
adc
push
movsb
sahf
jmp
pop
mov
push
xchg
xchg
repz
xor
in
add
pop
and
xchg
scas
lret
outsl
cmp
push
xchg
cmpsb
test
dec
mov
or
pop
xchg
andb
aas
fldl
mulb
pop
adc
aaa
insb
or
mov
and
inc
and
outsb
scas
mov
leave
sbb
mov
sub
mov
andl
adc
xchg
rcl
in
dec
mov
or
mov
cmp
scas
and
sub
fcoms
aad
dec
cli
dec
sub
les
inc
arpl
scas
ljmp
and
clc
mov
dec
jno
ds
hlt
iret
mov
jmp
xchg
sbb
in
clc
mov
mov
inc
inc
ds
call
notb
xor
mov
lcall
mov
movzbl
xchg
ds
mov
mov
pop
mov
data16
and
fucomip
and
mov
lcall
push
imul
loop
or
ljmp
pop
inc
and
jl
mov
loopne
lea
scas
stos
mov
mov
pop
sbb
hlt
and
or
aas
leave
xor
adc
lret
or
clc
rcll
ja
jnp
jge
dec
jns
ror
stos
jp
mov
mov
sbb
sub
imulb
sbb
leave
rorb
mov
lods
int
mov
fmull
cmp
insb
pop
mov
jg
xchg
gs
mov
xchg
dec
arpl
shl
sbb
sub
lods
mov
push
pop
push
jl
out
or
ret
addr16
or
icebp
sub
cmp
cmp
cli
test
stc
dec
aaa
imul
push
pushf
add
popf
movsb
pop
mov
subb
dec
lods
les
sub
rclb
popf
enter
out
or
xchg
jbe
imul
ret
adc
es
insb
or
int
movsb
mov
insl
in
sbb
les
mov
sbb
into
test
sbb
or
fsubs
test
inc
cmpsl
push
ja
les
and
sub
jmp
js
xchg
or
fwait
mov
adc
test
xchg
or
jne
xor
xor
rcll
mov
stc
pop
cmp
popf
hlt
push
cmp
shr
xchg
data16
or
jnp
fidivrl
dec
xor
sub
jo
sub
shll
rorl
or
clc
les
pushf
mov
pop
fbld
cli
mov
loop
xor
mov
std
insb
lods
leave
and
dec
pushf
je
out
pop
aas
lcall
mov
out
loop
outsb
dec
push
ja
int
sub
push
mov
inc
cmc
and
push
inc
int3
pushf
push
push
js
jne
jge
mov
out
jbe
andl
push
jge
jno
push
sbb
fisubs
shll
sbb
lret
xchg
dec
push
fmull
adc
loope
outsl
inc
imul
cmp
pop
mov
jmp
hlt
insl
int
xchg
cmp
jo
pop
pushf
mov
cltd
fldt
push
sub
mov
sub
xor
aad
sbb
sbb
insb
pop
std
ss
sbb
add
cmc
fcmovne
bound
lock
mov
test
pop
cmp
testb
inc
mov
xchg
lcall
mov
into
pop
leave
cmp
xor
pop
pop
int
adc
lods
cmp
lret
adc
stos
mov
jmp
mov
out
xchg
stos
xchg
jnp
test
cmp
in
jns
sbbb
mov
mov
add
les
push
adc
ja
shlb
lods
cmp
jg
bound
stc
adc
xlat
sar
pushf
push
out
add
testl
insl
sub
loopne
insb
and
call
shrl
xchg
push
push
movl
sti
out
cmp
loopne
xchg
int
push
mov
push
sbbl
inc
mov
adc
mov
sbb
sub
repz
into
jne
push
mov
popf
mov
inc
test
bnd
sbb
pop
iret
sbb
mov
mov
stos
out
les
mov
bound
push
add
cs
push
loopne,pn
sar
hlt
jne
add
cld
popf
mov
or
push
mov
xor
xchg
push
je
leave
aam
loop
popf
frstor
scas
adc
rcll
cmp
add
lcall
xchg
push
dec
testl
jne
adc
mov
repz
test
adc
and
stos
lods
cmp
cmpsb
inc
and
sar
pop
mov
int3
pop
dec
jmp
inc
nop
subb
jo
or
dec
push
xchg
push
jnp
add
dec
mov
and
mov
cld
and
push
iret
cli
pop
hlt
xor
xor
lret
xor
sahf
fisttps
sbb
cmpsl
pusha
test
out
bound
stos
jne
mov
pop
xor
fbld
sbb
scas
movsl
cmp
mov
adc
in
xor
xchg
lds
xchg
and
dec
lret
aas
leave
rolb
aad
negl
subb
cs
pop
xor
es
mov
add
mul
sub
aad
push
imul
sbbb
fnstsw
mov
cltd
lock
pusha
mov
js
mov
jne
sti
mov
mov
mov
sbb
push
sahf
pop
ficompl
xchg
cmpl
addr16
inc
xor
cmp
popa
aam
mov
sbb
icebp
adc
sbb
lcall
mov
sbb
mov
inc
jp
mov
inc
mov
leave
push
cmp
scas
pop
or
mulb
sub
out
jmp
pop
sar
adc
stos
out
and
jmp
push
jle
mov
mulb
and
int
sbb
jp
scas
mov
or
jp
xchg
jmp
xor
sub
shll
or
mov
mov
xchg
sahf
loopne
frstor
sbb
in
adc
add
lahf
mov
ror
pop
and
inc
push
cltd
pop
xchg
push
xlat
pop
shll
lcall
xor
and
pop
data16
rcll
lock
lods
add
inc
stc
push
stos
adc
xor
out
outsb
imul
gs
jo
dec
push
cltd
mov
adc
lods
cmp
or
jecxz
push
and
and
out
fldenv
mov
adc
mov
insl
jo
jns
popf
or
dec
aam
mov
mov
sub
data16
sub
xchg
add
jne
lcall
jg
aad
jns
inc
and
cmp
pop
sub
je
fdivrs
mov
out
or
mov
clc
jge
addr16
xlat
inc
jnp
fcomip
sbb
dec
jg
lret
adc
notl
pop
sbb
int3
scas
fildll
fidivl
imul
xchg
mov
fidivs
add
pop
sahf
push
xchg
cmc
fcoms
jno
dec
es
rcll
push
push
repnz
xor
hlt
mov
mov
inc
daa
int3
pop
mov
js
jle
lods
pop
shll
sbb
ret
test
jle
jmp
pop
push
xor
rorl
cmp
mov
pop
jecxz
repz
cmp
inc
dec
pop
mov
mov
idivl
cltd
xchg
fisubrl
addr16
xchg
sub
enter
cmp
in
or
jno
sbb
call
les
mov
dec
mov
pop
daa
jo
xor
popf
dec
js
dec
mov
sub
sbb
ss
das
jmp
mov
leave
cmp
or
xchg
fisubrs
jge
lahf
fcom
inc
bound
xor
xchg
cld
push
cld
fwait
inc
dec
jl
sbb
std
and
xor
cmp
hlt
mov
push
jmp
mov
pop
or
outsl
pop
jge
fistl
and
sub
mov
cld
push
xor
iret
nop
or
ret
lcall
icebp
push
adc
adc
mov
pop
pop
cmp
lcall
and
add
jo
push
xor
add
mov
or
ds
addl
adc
ret
loope
pop
out
test
cmp
push
sub
xor
test
rorl
shr
or
adc
andb
cltd
out
repnz
leave
cmp
mov
and
jge
jbe
adc
mov
mov
push
aam
mov
mov
adc
lahf
inc
adc
leave
and
add
or
inc
cmpsb
scas
insb
mov
leave
movsb
ret
sub
pop
jo
add
fwait
xor
or
leave
test
cmp
and
sbb
push
add
push
xchg
and
jb
push
repnz
test
push
jmp
lcall
jns
pop
push
jecxz
push
xchg
xor
jbe
mov
loop
cmpb
push
cmp
repz
xchg
add
pop
mov
xor
dec
popf
jl
adc
dec
fsubl
shll
jecxz
dec
ljmp
mov
mov
or
xchg
mov
mov
xchg
fstl
rcr
daa
push
cmpsb
jle
lock
in
int
enter
dec
out
lret
lock
in
jo
popa
jmp
pop
adc
fcmovb
das
insb
mov
imul
leave
ret
jle
inc
pop
outsb
into
adc
fucom
dec
out
das
mov
sbb
lahf
inc
add
aad
mov
inc
sub
mov
popa
jmp
jne
rep
std
orb
inc
rclb
mov
insb
icebp
sti
jle
jae
jnp
push
repz
inc
loope
sub
cli
lahf
js
pop
mov
repnz
loop
cmc
pop
dec
mov
inc
adc
dec
jns
imul
push
add
jne
adc
loopne
icebp
inc
ljmp
js
jbe
outsl
les
or
addr16
push
loopne
out
push
sub
out
rorl
in
fstpt
vrcpps
jge
and
pop
adc
or
stos
sub
pusha
cmp
push
push
fildll
add
adc
movsb
mov
jle
pop
fcoms
and
mov
ss
mov
std
push
lcall
and
jle
icebp
dec
jl
jp
xchg
lcall
shr
mov
dec
cmpb
sbb
pop
mov
push
push
in
mov
fidivrs
mov
ss
add
mov
imul
subb
inc
mov
sbb
addr16
mov
clc
movsb
push
sbb
pop
jmp
shlb
sbb
mov
rcrl
lea
jae
jnp
dec
mov
mov
mov
fucomip
push
pop
fwait
test
lahf
cmpb
jne
add
push
cmp
inc
mov
test
ror
mov
nop
in
ret
je
mov
jg
and
sqrtps
lock
adc
push
mov
inc
pop
mov
adc
add
xchg
in
mov
inc
pop
mov
lods
test
cld
sahf
aaa
jmp
jae
jmp
add
test
in
std
jp
stos
leave
or
mov
lret
pop
dec
call
pop
add
pop
jb
mov
push
push
add
scas
flds
xor
xchg
sub
mov
push
rcrb
inc
add
outsb
movsb
push
jle
dec
xchg
lret
fldln2
sbb
mov
arpl
out
xchg
push
or
and
test
pop
stc
mov
addr16
xchg
lcall
jecxz
pop
inc
and
in
pop
jno
adc
lret
and
xor
mov
outsb
ds
xor
sti
shlb
adc
out
mov
mov
cli
icebp
mov
out
es
out
jge
push
push
lcall
adc
inc
add
insb
mov
ror
pop
sahf
cli
jno
xchg
xchg
or
push
jnp
nop
mov
lret
das
pushf
mov
imul
scas
test
mov
mov
insl
gs
das
loop
je
inc
cmp
subb
sbb
mov
test
sbb
mov
cmp
sbb
ss
xchg
pop
or
test
aam
out
out
fwait
nop
dec
jmp
ja
scas
add
dec
cs
pop
add
push
xor
pop
call
nop
and
cs
mov
popa
repz
lds
mov
pushf
jle
xlat
hlt
mov
in
sbb
inc
sbbb
jbe
push
push
dec
fldt
pop
cld
adc
leave
cld
push
and
cltd
push
and
xor
jne
push
call
jbe
ja
sbbb
fcompl
iret
inc
cmp
js
lahf
fwait
jp
pop
rclb
sbbb
xchg
jecxz
rclb
lea
dec
nop
outsl
imul
arpl
loop
icebp
inc
cmpsb
ret
stos
inc
adc
in
jp
lods
cmpsb
and
js
int3
pop
sahf
mov
sbb
mov
inc
and
jg
scas
pop
xchg
add
out
xor
ljmp
add
jle
repnz
xchg
push
movsl
mov
pop
shlb
jge
in
inc
mov
cli
sti
out
fistpl
sbb
mov
jns
aad
xchg
push
or
and
rcr
cmp
imul
arpl
mov
arpl
cmp
fiadds
lock
rolb
pop
jno
test
dec
dec
pop
aas
cwtl
sub
lds
or
in
mov
aas
adc
int
ret
call
dec
xchg
iret
jecxz
xchg
mov
jno
sbb
pop
ja
ret
fcmovbe
push
xchg
xor
sub
outsb
sub
jecxz
push
pop
mov
dec
mov
sbb
inc
xor
inc
lods
fdivr
xchg
mov
out
mov
ret
ret
ljmp
pop
icebp
xor
adc
adc
xchg
cmp
xchg
movsb
mov
dec
xchg
inc
push
outsb
loope
leave
test
dec
lret
aaa
mov
xchg
arpl
loope
mov
imul
or
addr16
pop
popa
pop
js
and
pop
jns
pop
lret
push
mov
test
dec
fcomip
xor
pusha
jmp
jb
in
mov
jb
cmp
or
fidivl
sbb
cmp
or
push
xorb
mov
jp
or
jbe
push
push
movsl
sub
xchg
gs
pop
mov
sbb
pop
sub
movups
int3
cli
fcompl
pop
mov
inc
sbb
xchg
loopne
push
ljmp
xchg
mov
lcall
push
xchg
or
lock
and
lods
loope
pop
push
or
push
fwait
push
mov
out
dec
xchg
xchg
mov
out
or
push
ljmp
clc
push
mov
push
je
in
mov
inc
arpl
mov
ljmp
int
ds
jne
rcl
and
mov
mov
xor
sub
fimuls
xchg
inc
sahf
mov
and
lods
cmc
aas
mov
push
sbb
sub
test
xor
push
jge
pop
call
test
mov
push
fnstenv
sub
repnz
sub
dec
pop
mov
mov
push
dec
or
sbb
adc
mov
call
xorl
nop
mov
out
andb
xchg
push
dec
idivb
jae
jge
inc
cs
push
sub
add
sub
stos
orl
aam
outsl
lea
test
sbb
push
cmp
push
cmc
jmp
aad
stos
cmpsb
popl
in
repnz
sbb
scas
push
pop
es
xchg
movsb
std
fdivrs
into
pop
cli
mov
pop
jp
and
bound
lret
pop
push
aas
fsts
jmp
std
loop
loop
gs
sub
bound
xchg
jo
repnz
std
adc
and
mov
adc
fs
mov
arpl
mov
repnz
jmp
loopne
push
dec
adc
mov
arpl
inc
in
cmp
mov
push
clc
mov
das
gs
mov
mov
shl
test
fmuls
add
ret
std
fwait
cmc
push
jnp
jae
jp
cli
cmp
stos
stc
sub
nop
and
push
aas
subl
mov
mov
xchg
push
and
or
xchg
das
gs
xchg
or
xchg
in
insb
inc
mov
out
lcall
pop
pop
popf
push
xlat
jo
add
popf
out
xchg
cmpsl
jle
test
dec
lock
je
inc
ficoms
movsl
pop
fs
test
sub
push
jle
jmp
test
xchg
xchg
push
out
pusha
or
adc
or
aad
xor
out
scas
dec
int
and
nop
adc
sub
push
shl
jne
je
cpuid
push
inc
in
push
data16
jbe
popf
scas
sahf
mov
fwait
mov
and
mov
pusha
xchg
icebp
cmpb
push
sub
mov
sbbb
mov
mov
fdiv
xor
mov
lcall
and
enter
jl
and
loop
std
xorl
lea
xor
jge
lds
jg
mov
fmuls
mov
int
aad
sbb
lret
inc
mov
arpl
adc
pop
inc
push
and
stc
and
or
push
add
mov
pusha
mov
aam
aad
aad
addr16
shrb
imul
mov
cmp
mov
int
xor
rcrl
fiadds
mov
adc
fdivl
adc
xchg
sbb
stos
mov
ret
mov
cmp
cmp
pushf
mov
push
cmp
aaa
xor
andb
fbstp
xchg
sub
xor
or
stos
into
stos
rorb
lcall
push
leave
dec
xor
jns
ljmp
xor
sbb
rcr
jp
jle
and
in
shll
pop
and
clc
data16
movsl
mov
stos
jle
jo
movsb
adc
xor
not
adc
pop
paddq
dec
stc
enter
lods
cmp
lea
mov
vmulsd
push
sbb
lods
adc
sub
int
lods
int
pop
lahf
cmp
push
mov
outsb
mov
and
je
iret
ret
and
sub
out
mov
inc
daa
add
dec
cmp
frstor
pop
fnstenv
inc
fisubrs
adc
add
xor
aam
hlt
xchg
dec
adc
in
sub
mov
rcrb
add
test
and
in
rcrl
xor
lods
icebp
rorb
xor
mov
sbb
mov
outsb
sbb
push
std
in
mov
adc
loopne
into
out
dec
inc
mov
jmp
in
cmpl
aaa
mov
mov
sbb
movsl
dec
sub
mov
add
adc
rcl
sbb
into
testb
jnp
or
ror
gs
sub
cld
lods
mov
or
fstpt
mov
push
dec
in
loope
insl
xchg
mov
std
aam
mov
inc
addb
and
pop
shl
xlat
mov
mov
lds
inc
pop
ja
mov
add
test
add
push
inc
xchg
inc
std
add
fimull
fwait
or
pop
jp
push
xchg
jae
mov
xchg
dec
pop
sahf
sbb
mov
daa
lret
popf
stos
dec
jle
mov
dec
mov
dec
xchg
mov
lahf
pop
pop
mov
je
nop
lea
mov
cmp
lahf
repnz
mov
add
dec
jns
pop
dec
imul
dec
sti
mov
out
jl
cmp
adc
mov
sahf
sbb
rcrl
mov
test
pop
out
pop
jmp
inc
push
mov
leave
mov
scas
cmc
push
jle
or
imul
mov
add
into
lcall
or
push
mov
out
jecxz
sub
hlt
mov
mov
push
cltd
xchg
jp
leave
mov
xor
inc
repnz
mov
mov
lock
jns
rcll
scas
xor
mov
cs
and
js
test
scas
les
dec
fldenv
js
test
mov
pop
jne
xor
repz
sahf
xchg
imul
aad
mov
inc
xor
push
xchg
out
test
dec
sub
inc
in
sbb
push
mov
push
xlat
jle
ss
xchg
push
dec
pop
orb
cmpsl
adc
in
push
inc
sbb
jg
jge
jp
sub
test
xor
cmp
sahf
xor
jns
mov
icebp
imul
fwait
arpl
pop
jp
nop
icebp
jl
xor
dec
push
jp
dec
cmp
cld
push
sbb
jno
enter
lea
mov
leave
push
sbb
mov
jnp
inc
sbb
test
jge
fs
std
fldenv
pusha
jl
sbb
xchg
incb
add
and
mov
jb
popl
xchg
mov
inc
mov
push
rcll
nop
mov
push
cmc
pop
cmc
addl
lcall
add
dec
inc
outsb
pop
pop
and
inc
addr16
insb
add
mov
in
push
xchg
xchg
repz
in
in
dec
inc
ror
xchg
gs
fnstenv
ja
push
mov
aas
fcomps
push
test
push
lock
or
xchg
stos
mov
or
movsl
cs
and
cs
and
ret
in
pop
imul
and
sahf
daa
jl
mov
fsubrp
sbb
cmc
insl
mov
shr
nop
mov
and
push
stc
jbe
hlt
bound
mov
sti
lods
je
aaa
sarb
or
shrb
idivb
loope
push
nop
inc
jnp
inc
in
out
mov
sete
cld
es
mov
out
fnstenv
pop
dec
xchg
push
clc
lcall
inc
mov
fiadds
jl
push
dec
data16
lock
dec
popf
int
sbb
mov
in
stos
pop
test
xchg
xchg
push
cmp
xor
stos
sbb
adc
jnp
pop
shll
cmc
sbb
jbe
cmc
into
sbb
fcoml
add
in
movsl
push
lds
lahf
inc
sub
addb
sbb
pop
jg
dec
lds
sbb
and
aad
repnz
cwtl
test
jle
out
test
mov
mov
push
pop
push
das
cli
cmp
imul
or
push
fwait
gs
rcr
movsl
lods
inc
cmp
popa
mov
adc
vmwrite
insl
jbe
inc
rorl
jae
jo
sbb
xor
ds
std
adc
dec
xor
imul
xor
cs
inc
es
push
ret
sub
sbb
cs
xlat
aaa
or
ss
inc
call
mov
adc
sbb
in
mov
adc
test
jns
mov
ficoms
out
push
pop
mov
enter
push
fildll
fisubrs
jnp
out
jl
test
jecxz
jno
add
icebp
sti
std
sti
das
imull
cmpl
xchg
xor
ds
push
xor
push
inc
cmpsb
fbld
pop
out
rcrb
enter
pop
adc
sbb
xchg
push
test
mov
mov
sahf
mov
bswap
inc
sti
out
in
stc
shr
jmp
sub
mov
in
xchg
stos
lock
fisttpll
popf
xchg
jb
sub
jb
xor
mov
fwait
stos
and
push
jnp
jle
mov
xor
rcrb
pop
out
test
push
aad
aam
shlb
fnstcw
dec
leave
imul
add
enter
xor
int
jp
pop
in
xlat
pop
jle
aas
adc
imul
cmpsb
mov
jbe
repnz
shl
jne
scas
je
mov
clc
loop
int
xchg
jae
push
pop
mov
mov
cmc
cs
stc
dec
out
cmp
push
inc
jo
jg
dec
push
mov
int
in
loope
push
pop
notrack
or
sub
rcl
pop
push
xor
loope
adc
out
loopne
add
dec
push
pop
xorl
xor
imul
shrb
popa
mov
push
into
call
jb
push
jp
mov
jmp
inc
inc
scas
call
rolb
mov
sbb
cld
aad
push
int
sbb
das
mov
cmp
ss
je
ret
fstps
leave
adc
or
adc
lahf
add
shr
cmp
cwtl
test
sbb
fwait
sbb
inc
sbb
fisttpll
inc
aad
mov
xlat
push
movsl
lret
sbb
les
inc
sub
xor
iret
jae
popf
mov
lahf
ljmp
leave
ljmp
pop
aam
dec
and
adc
jmp
outsl
mov
or
dec
outsl
sti
ret
jp
adc
sub
arpl
ljmp
test
test
stos
nop
imul
loopne
mov
mov
inc
leave
gs
in
inc
jle
lods
call
lahf
mov
iret
mov
das
mov
ja
mov
popf
es
mov
sbbb
ror
or
data16
push
out
pop
test
insb
mov
jmp
push
sti
mov
mov
cmpsl
push
jo
out
popf
out
icebp
pop
loop
int
jmp
push
mov
fwait
rorl
gs
hlt
imul
rolb
js
imulb
outsl
and
mov
shl
sbb
sub
ljmp
sbb
xor
repnz
addr16
in
sub
push
inc
push
jecxz
int3
xor
and
sbbb
ds
xor
pop
mov
dec
xchg
sub
push
pushf
int
jg
rorl
out
frstor
test
insb
jge
mov
int
sub
int3
sub
sahf
push
aas
pushf
ljmp
xor
mov
test
ret
aaa
or
sbb
jb
je
stos
in
sub
loope
aas
stc
mov
jns
xor
addb
sbb
xlat
xchg
jl
rolb
and
inc
xchg
xlat
pushf
jno
jno
flds
fmulp
divl
fcoml
dec
lcall
or
jo
and
push
push
mov
subl
xor
frstor
or
in
push
push
mov
sbb
call
testb
xchg
jae
pop
outsb
xor
test
fisttpl
je
aam
mov
mov
lds
aaa
jge
int
cwtl
or
xor
and
neg
in
dec
aad
stc
mov
in
inc
cltd
cmp
lcall
pop
and
mov
sub
test
jle
mov
sub
jmp
sahf
out
add
jl
iret
pop
fwait
push
cli
in
ss
lret
adcl
mov
shlb
inc
xchg
adc
mov
fbld
mov
xor
push
adc
outsb
add
out
push
jp
add
mov
or
xor
xchg
and
mov
inc
lret
int
sbb
stos
mov
push
cwtl
fstpt
mov
into
test
xlat
push
sbb
insb
mov
xchg
push
loope
test
cmc
imul
push
cmp
adc
repnz
repnz
dec
repz
pop
xchg
or
add
push
inc
inc
or
insl
lods
lret
inc
xchg
sub
mov
mov
scas
xor
jno
sbb
cmp
adc
arpl
lods
outsb
inc
imul
and
lret
cld
and
mov
aad
pop
loope
xlat
push
sarb
scas
int3
in
inc
lods
adc
imul
push
das
test
ja
flds
cmp
gs
inc
adc
push
cltd
mov
adc
and
and
cmc
rcl
outsb
ja
jo
js
mov
push
or
inc
ljmp
into
push
adc
imul
fildll
js
xorl
inc
je
aas
cwtl
sbb
and
sbb
dec
stc
fidivl
sbb
stos
xchg
mov
push
out
icebp
scas
sahf
push
mov
aad
addl
and
divl
cmp
outsl
and
test
test
shl
or
or
les
and
inc
and
xlat
arpl
dec
mov
xor
hlt
pop
fsubp
mov
add
mov
rcll
mov
cmp
rcr
cmp
sbb
outsb
out
shlb
lahf
scas
sahf
out
inc
fisttpl
scas
jne
cmpsb
mov
cwtl
popaw
adc
and
loope
lods
mov
mov
fldcw
ja
rclb
sub
fistps
sbb
ficomps
add
ficompl
xor
lret
cmp
fistpl
push
adcl
jno
xor
ss
inc
mov
dec
ret
xchg
pop
mov
and
inc
in
pop
out
sbb
aad
ret
rorb
insb
inc
mov
mov
jae
push
xchg
js
sbb
dec
mov
push
adc
adc
aam
pop
and
inc
mov
shrb
pop
fs
mov
xor
push
sbb
adc
add
pushl
cltd
or
lret
xchg
ret
leave
inc
dec
pop
add
faddp
mov
pop
jae
dec
xor
ljmp
pop
es
sarl
fwait
pop
cli
jae
push
mov
adc
shrl
mov
cmc
arpl
push
push
lock
mov
push
or
push
cmpsb
jnp
push
xor
sbb
push
xlat
inc
aam
jae
decb
pop
jno
add
mov
popa
insb
rcrl
dec
pop
inc
lret
add
lock
leave
imull
sub
mov
mov
push
lret
sbb
enter
jge
lcall
out
cld
aam
shr
pusha
mov
mov
mov
fwait
mov
mov
outsb
hlt
pop
mov
scas
add
test
cmp
sbb
movsb
sbb
xor
fs
add
cmp
scas
int3
pop
jne
shrb
es
xor
adc
xchg
xchg
aad
push
push
mov
mov
sbb
pop
adc
movb
call
mov
xor
or
cltd
and
jo
inc
mov
mov
cmp
mov
jo
lds
loop
arpl
sbb
scas
xlat
sub
inc
jnp
popf
dec
jmp
and
jno
ret
rcll
fsubs
ret
cs
test
xchg
out
sub
jg
es
cli
loop
xchg
insl
mov
push
movsb
lea
dec
insl
in
push
lea
dec
repnz
mov
sbb
lahf
or
int3
mov
outsl
pop
jo
out
in
inc
push
jmp
and
stos
cmpsl
ja
dec
loop
stos
xorb
jecxz
mov
add
aad
mov
pop
mov
jnp
aad
popa
push
popf
xor
in
shrl
fstpt
fldcw
jg
mov
push
aad
add
cmpsl
adc
adc
cltd
sbb
popa
and
xchg
outsl
sbb
sbb
iret
test
sbb
lds
mov
push
nop
test
add
push
push
stos
lret
mov
xor
aas
mov
cmc
pop
jp
insb
dec
lahf
imul
dec
jg
popf
popa
pop
mov
xor
add
pop
fcomps
fistps
pop
cmp
mov
push
jno
xchg
mov
test
mov
sahf
dec
adc
cwtl
loopew
mov
add
add
cmp
into
push
inc
sub
mov
movsb
cmp
rcr
adc
add
xchg
and
popf
aas
cs
ss
dec
add
pop
loope
cmp
jbe
inc
sub
dec
sbb
sbb
in
test
jbe
pop
out
jb
push
das
fcomp
mov
cltd
fsts
inc
xor
imul
leave
or
mov
nop
fidivl
jae
cwtl
xchg
js
das
push
loope
enter
push
popf
inc
mov
xorl
aas
neg
pop
data16
add
xor
fsts
mov
pop
mov
ret
in
ja
and
jg
cmp
lods
or
subb
mov
or
add
dec
lods
fistpl
mov
mov
xchg
push
dec
repnz
inc
nop
mov
insb
cld
sub
sub
xor
xor
jae
scas
mov
pop
mov
push
adc
add
lods
lds
jnp
adc
push
ljmp
cmp
jl
in
mov
pop
mov
xchg
mov
mov
icebp
mov
mov
hlt
cmp
inc
das
push
leave
ds
fdivrp
mov
test
mov
je
shr
jecxz
outsb
out
movsb
cltd
rorb
out
or
popf
test
cmpb
lret
rcll
les
pop
addr16
sub
aaa
cwtl
pop
cs
inc
cmp
movsb
test
hlt
xchg
ss
aam
mov
dec
add
cmp
xor
cld
xchg
mov
adc
jmp
pop
mov
dec
dec
int3
loop
and
insl
insl
dec
jne
sbb
setne
test
dec
xchg
in
jle
addr16
mov
jns
out
mov
sub
xchg
jb
and
adc
jae
jns
dec
and
aaa
pop
fists
xchg
ja
cmp
repnz
jns
xor
stc
dec
lods
lea
ss
addl
adc
ret
iret
int3
aad
pop
xor
fstpt
cmpsl
jg
cmp
xlat
stos
pop
jae
mov
add
dec
mov
test
jo
iret
add
pop
dec
jmp
pusha
or
js
mov
xor
pop
popf
addb
dec
sbb
movsl
lcall
icebp
sub
in
lcall
push
adc
lods
push
or
mov
dec
push
inc
cmc
mov
inc
fwait
data16
or
push
add
cld
push
pusha
push
push
add
sbb
scas
and
xchg
scas
pop
nop
stc
imul
loop
divl
jmp
cmp
sub
stc
lret
stos
lock
mov
jae
mov
lods
xchg
loope
push
jl
adc
xor
mov
or
dec
push
imul
sub
mov
movsb
cld
cmpl
movsb
stos
adc
movsb
inc
mov
icebp
subl
inc
adc
rcrb
mov
xchg
ret
shlb
push
add
mov
push
pop
out
xor
xchg
mov
lea
xchg
add
addb
dec
daa
dec
insb
jne
je
pop
and
stc
fsts
mov
and
fs
dec
or
xor
xor
push
fidivs
cld
movsb
jo
mov
es
daa
jl
dec
mov
cltd
ret
mov
or
mov
jmp
push
inc
arpl
out
inc
add
cmp
cmp
xchg
push
push
ss
inc
das
call
pushf
outsl
push
insl
inc
js
jne
mov
xor
pusha
fsubs
cmp
jno
xchg
popa
mov
push
mov
test
cmp
ficomps
iret
cmp
mov
into
mov
mov
inc
cmp
push
inc
mov
outsl
jge
cmp
push
div
or
lret
pop
mov
push
inc
mov
inc
jns
mov
cld
push
icebp
lds
rorl
pop
and
repz
ss
rol
mov
sbb
jl
cmpb
lret
in
fs
ja
xor
mov
call
jmp
jecxz
jno,pn
push
jns
aaa
mov
movsl
sub
add
or
cmc
rclb
push
in
inc
test
or
mov
jmp
pop
addr16
das
out
push
jle
xor
xchg
or
data16
pop
bound
xor
push
cltd
hlt
jmp
xchg
out
je
xlat
mov
fadds
loopne
xchg
cs
or
lods
aam
push
mov
hlt
dec
mov
cld
cwtl
pop
xchg
fsts
jnp
mov
inc
stc
xchg
mov
jmp
repz
or
pop
shrb
mov
sub
cmpb
cmp
sub
fldl
sub
and
frstor
cmpsb
cmp
outsl
push
in
daa
insl
call
sbb
int
push
ror
jb
insl
jg
std
xor
pop
cmpsl
test
outsl
xchg
jle
inc
adc
mov
mov
popa
out
popf
cli
call
adc
adc
add
cmpb
adc
movsb
bound
lods
inc
push
test
xlat
out
mov
les
out
or
ljmp
test
adc
ret
shlb
jmp
daa
mov
and
pushf
sub
inc
fwait
push
lock
into
in
sti
push
cmp
push
mov
iret
fwait
rclb
sbb
cmp
orb
cli
xor
inc
int
icebp
enter
push
shrl
xchg
repz
scas
push
frstor
pop
or
pop
add
mov
cmp
rcr
dec
mov
in
daa
jmp
xchg
adc
xchg
in
lret
jo
test
repnz
test
mov
mov
scas
xchg
mov
xchg
std
data16
add
adc
movsl
loop
sub
punpckhbw
and
mov
mov
call
cld
repnz
cmp
out
mov
addb
ljmp
jbe
add
add
cs
mov
repnz
mov
cmpsb
lods
imul
jl
push
clc
test
popf
xor
push
ss
in
stos
mov
mov
ja
rcr
dec
jmp
mulb
iret
int
xlat
imul
xor
xchg
cltd
cmp
sub
js
mov
pop
jp
and
test
jmp
fwait
mov
cltd
jns
push
pop
jge
addb
nop
ja
add
mov
xchg
and
jle
inc
mov
outsb
jo
xlat
sbb
and
cmp
xor
imull
inc
ja
arpl
sbb
sbb
out
jbe
or
jg
sub
andb
mov
cmpsb
xlat
adc
lds
pop
push
xor
in
pop
hlt
mov
and
push
mov
into
adc
or
mov
xlat
and
out
decb
js
pushf
mov
sbb
dec
cwtl
or
rcrb
inc
mov
mov
shrb
sub
mov
outsb
xchg
or
mov
cmpsl
scas
cltd
push
mov
repnz
or
es
mov
ficompl
lret
bound
ds
push
mov
test
push
push
xor
xchg
ret
mov
movsb
xor
stos
iret
data16
cwtl
fidivrs
lahf
mov
test
and
inc
and
adc
push
sbb
ljmp
sahf
or
notb
imul
pop
les
aas
rcll
orb
push
mov
loopne
dec
je
insb
out
jns
sbb
pop
in
adc
lahf
push
dec
sub
mov
pop
mov
sub
fstpt
rolb
and
ficomps
push
and
mov
test
aaa
fisubrl
dec
lock
fsubrs
jns
arpl
xchg
scas
fldl
pop
out
xchg
push
mov
pop
ljmp
outsl
and
pushf
ret
imul
push
inc
mov
fsubp
aas
mov
test
scas
dec
sub
mov
test
sti
out
cli
jecxz
pushf
loop
xor
mov
mov
lret
rcll
mov
pop
imul
aaa
pop
mulb
call
push
clc
test
insl
sti
aas
mov
js
xchg
movsl
xchg
int
insl
mov
and
mov
std
js
xchg
insl
xchg
mov
push
adc
mov
jne
mov
in
inc
insb
pusha
fisttps
enter
lret
pop
outsl
mov
fnstcw
mov
adc
data16
pop
dec
out
sub
sbb
push
push
sbb
fistpll
sub
pop
shlb
into
cmp
cmp
mov
adc
inc
inc
stc
pusha
repz
dec
mov
cmp
nop
add
lock
sbb
cwtl
pop
sbb
mov
cmp
dec
and
orb
jle
mov
cld
pop
cmp
stos
loop
ret
and
je
sbb
leave
bound
add
xchg
into
movsl
pop
dec
inc
xchg
and
push
outsb
xchg
inc
mov
and
in
outsl
and
cwtl
lcall
sub
outsl
bound
pop
ret
mov
jg
jmp
sbb
pop
fcoms
mov
add
mov
or
rcrb
or
xchg
push
mov
int3
fwait
cmp
out
xchg
es
ss
aaa
push
aaa
cmp
pop
fnsave
hlt
push
cltd
int3
mov
cmp
int
push
movsb
xchg
pop
lea
in
inc
sub
xlat
xor
sub
rorb
outsb
je
mov
movb
pop
xchg
mov
mov
lods
out
or
aaa
call
scas
insl
mov
test
push
stos
lods
and
rolb
mov
inc
sbb
stos
sub
inc
filds
fsub
nop
in
out
pop
pushf
and
or
scas
mov
jecxz
das
in
test
cmp
inc
adc
inc
mov
js
mov
int3
repnz
call
ja
jbe
jg
push
jg
in
hlt
nop
clc
stos
jecxz
mov
push
rorb
push
dec
add
xchg
shlb
lods
adc
adc
pop
fmull
and
shrb
xor
ss
jl
stos
add
push
insl
sti
adc
sbb
and
push
sub
lods
mov
clc
repnz
jno
in
mov
sbb
scas
mov
outsb
test
pop
scas
push
mov
loop
inc
xchg
sbb
addl
xchg
pop
mov
mov
and
inc
mov
xor
jo
add
jle
sub
xor
out
loop
incb
jb
in
addr16
mov
adc
push
mov
into
push
adc
imul
lea
outsb
sbb
dec
rcl
lahf
enter
mov
add
in
pop
hlt
mov
jg
mov
cli
sbb
adc
mov
pop
lea
ljmp
xchg
sub
pop
lahf
cld
into
jg
dec
xor
sub
jge
rcl
int3
jecxz
idivl
mov
aad
inc
or
xchg
mov
or
xchg
pop
push
and
movsb
xor
bound
dec
fwait
lock
sar
ljmp
aaa
jnp
mov
mov
dec
xor
fidivrs
gs
push
add
stc
pop
es
or
aam
xchg
cmc
and
dec
sbb
ja
cmpsl
cmp
xchg
inc
aaa
jecxz
xor
stos
inc
sbb
and
shlb
int3
dec
sbb
jle
loop
add
ljmp
inc
cmp
or
and
jge
dec
inc
loopne
fiaddl
sahf
add
out
dec
setno
dec
mov
call
mov
mov
jecxz
cmpsb
shl
ficoms
push
je
fistpl
test
sarb
out
insb
jns
add
in
or
or
dec
out
xchg
pop
xlat
incl
gs
cmp
add
inc
ret
test
mov
or
sbb
shrb
push
mov
shlb
adc
jbe
pushf
sti
mov
add
push
mov
ljmp
xor
cmpsl
pop
cmpsb
push
in
mov
imul
push
xchg
pusha
push
pusha
rcll
popf
dec
xchg
mov
add
sub
pop
dec
in
jle
mul
fwait
mov
inc
mov
cwtl
mov
data16
shr
xor
jne
inc
mov
xchg
testl
es
jno
in
daa
mov
mov
mov
add
movsl
xchg
push
sti
adc
xor
adc
js
sbb
dec
out
mov
dec
sti
sbb
pop
jge
dec
cmc
mov
sbb
cs
lods
xchg
movsb
imul
rcll
jae
cmp
clc
adc
mov
or
dec
push
icebp
icebp
jl
inc
sbbb
pop
jns
lret
sub
cmp
mov
negb
sbb
pop
jmp
inc
rcr
mov
mov
jno
lcall
adc
cmpsl
sbb
jne
cmp
punpckhbw
mov
jmp
testl
mov
jg
inc
xchg
sarl
cltd
pop
pushf
or
xchg
adc
mov
shll
xchg
scas
int3
mov
cmp
gs
popf
pop
test
dec
mov
mov
or
lds
mov
sahf
stc
rcrb
test
ja
mov
in
mov
xchg
js
lret
jo
int3
sbb
imul
clc
cli
mov
xchg
dec
ret
pop
lock
sub
mov
out
pop
shll
fwait
sbb
fadds
push
sub
mov
fidivrl
fsts
and
mov
sub
mov
adc
insb
dec
inc
mov
outsl
and
jo
testb
or
xchg
mov
add
loope
sub
fs
sysret
test
int
sbb
insb
mov
or
enter
and
test
clc
add
xor
inc
ret
or
xor
pop
sarl
insb
fxch
dec
fldt
shll
or
push
in
push
push
mov
jnp
leave
pop
test
inc
imul
pop
mov
xchg
imul
fst
xor
push
mov
lea
or
xchg
int3
and
aam
rclb
xor
cmp
pop
lods
stos
repz
sub
ljmp
xchg
add
addb
xchg
cmp
lods
test
push
mov
adc
xor
mov
aam
lds
in
cmc
or
dec
mov
inc
loop
sub
pusha
imul
dec
cmpsl
outsb
push
iret
sub
lds
loope
loop
mov
loope
test
lds
and
out
and
rolb
int
shr
mov
jmp
ljmp
adc
lahf
inc
loop
dec
pop
mov
out
les
inc
mov
push
xorl
cli
mov
pop
push
lods
arpl
fistpll
cmp
pop
stos
stc
and
push
fdivrs
xchg
lret
mov
dec
push
fldenv
cmp
inc
mov
and
test
xchg
cltd
nop
pushf
mov
js
in
cmp
outsb
cmpsl
cs
imul
popf
inc
mov
cld
inc
dec
int
scas
mov
mov
xchg
rclb
lock
xor
pop
xchg
gs
xchg
dec
mov
ret
lods
dec
jnp
enter
cmpsb
fistl
xchg
dec
loopne
fisubrl
stos
pop
rcll
push
in
ror
mov
sub
xchg
adc
andb
popf
jae
orl
imull
pop
xchg
adc
xchg
das
or
jb
xor
sub
icebp
loop
lret
mov
dec
pop
je
adc
leave
sbb
and
and
aam
fildll
jno
data16
stc
mov
xchg
outsl
std
loope
xorb
fnstcw
mov
add
jge
lock
fld
jb
pop
bound
mov
into
mov
cmpsl
mov
jae
lods
roll
jl
ljmp
mov
hlt
or
outsw
fwait
pop
sbbl
add
bound
icebp
mov
out
add
mov
jno
data16
cmp
inc
inc
xor
xchg
sbb
or
arpl
xor
sub
add
sbb
or
fisttpl
sahf
pop
imul
xor
adc
adc
pop
data16
jo
push
ret
cmp
cmp
mov
add
je
add
mov
xor
into
iret
mov
adc
shrb
sahf
popa
xorb
cmp
xchg
jne
adc
pop
fisttpl
cmp
cmp
push
lock
lds
das
enter
xchg
adc
add
mov
adc
mov
dec
push
jg
add
adc
adc
cmp
mul
xchg
flds
adc
mov
sbb
sbb
add
add
jp
mov
jnp
xlat
pop
push
stos
mov
cmc
ficomps
mov
push
enter
pushf
shrl
add
cmpsl
pop
mov
movsb
mov
mov
stc
out
xchg
cmp
subl
fdivr
and
insl
mov
jl
jmp
cmp
stos
cmp
and
add
inc
pop
xchg
out
inc
sub
mov
movsl
jge
xchg
hlt
xchg
leave
mov
ja
andl
mov
shrl
iret
add
sbb
je
clc
add
pop
jle
jecxz
jp
movsl
cmp
inc
inc
dec
dec
insl
cwtl
cwtl
call
in
and
outsl
cli
mov
or
cmp
popf
cmpsl
push
pop
sbb
dec
pop
jno
mov
mov
xor
arpl
lfs
sub
pusha
bswap
inc
call
int
jmp
inc
or
in
lret
mov
inc
xchg
cwtl
lahf
or
cmpsb
in
jne
xchg
sub
sbbl
pop
fsubl
lcall
sbb
test
test
xchg
and
jp
mov
jns
cmc
mov
adc
sub
cmc
sub
out
cmp
mov
aam
std
fs
mov
xchg
loopne
movl
or
les
xor
xchg
les
sbb
push
pop
add
mov
aad
push
sbb
jge
xor
xchg
sub
fstps
imul
sbb
daa
and
jmp
stc
dec
pop
in
push
and
push
push
sti
fldl
push
mov
cwtl
pop
and
movsb
test
xchg
pop
adc
jmp
scas
in
lahf
icebp
test
or
aam
inc
leave
jae
rolb
and
enter
xor
pop
lods
sarb
pop
and
push
aam
shll
jno
jae
add
pusha
jno
lret
and
xor
push
pop
cmp
ret
mov
loop
orl
je
cmp
adc
jle
push
nop
decb
dec
mov
xor
in
outsb
inc
dec
xor
xor
mov
hlt
adc
adc
mov
daa
or
lcall
stos
sbb
dec
jl
xor
push
cs
loop
sbb
adc
test
cmp
daa
mov
push
mov
sahf
add
push
mov
or
push
pushf
outsl
loope
pusha
inc
xchg
inc
in
mov
loop
push
jno
std
bound
mov
imul
sub
clc
cmpsb
add
fildll
push
xor
and
adc
sbb
pop
or
cld
pop
pop
sarl
movsl
and
inc
les
imul
add
xchg
pop
cmpb
bound
push
xor
pop
in
adcb
pop
inc
jp
lock
mov
push
cmpsl
or
pop
in
dec
ja
add
insl
jb
push
dec
aad
mov
inc
idivl
or
inc
sub
cmpsl
clc
push
rorl
jmp
fdivrl
push
push
out
add
out
mov
and
fistpll
fidivrl
mov
jo
mov
fisubrs
and
iret
dec
jns
push
sti
mov
xchg
int3
add
shrd
out
pop
mov
sub
sub
push
sbb
sub
or
sbbl
imul
shr
and
clc
sub
mov
inc
loop
push
push
negl
cmpsl
loopne
loop
adc
xor
inc
mov
or
sub
adc
pop
xor
idivl
or
stos
cmp
sti
test
add
popf
mov
and
sub
jae
cmp
imul
xchg
ljmp
or
jns
push
lret
adc
int
dec
rcrb
pop
mov
js
xor
cmp
mov
js
jl
adc
inc
loopne
mov
push
or
int
loopne
mov
mov
mov
adc
clc
jno
nop
lcall
inc
and
fdivrp
mov
jl
xor
cmpb
dec
mov
roll
imul
mov
cmp
pop
pop
movsb
fimull
lods
mov
xchg
push
loop
orb
push
hlt
lcall
mov
jmp
sbb
scas
mov
out
xor
push
orb
sbb
arpl
jmp
jl
sub
lds
add
or
cwtl
cltd
jnp
inc
xor
jne
push
pop
flds
jne
xor
popf
pop
inc
xor
je
test
inc
lods
aam
or
cld
fisttps
push
cld
xchg
pop
jg
sbb
shrb
or
jg
cmp
repnz
das
scas
leave
push
repz
ja
mov
pop
jne
and
jp
int
rol
nop
mov
xor
loop
mov
pushf
lahf
mov
sahf
stc
pop
sbb
aas
pop
push
and
or
xor
stos
add
addr16
mov
popa
jmp
sub
repz
in
dec
xchg
in
icebp
shlb
add
mov
daa
jg
hlt
add
cmp
sarb
out
notb
rolb
xchg
rolb
inc
sbb
sbbb
dec
out
sbb
or
jge
sub
roll
pop
rcl
ret
mov
sbb
adc
jno
pop
jne
lds
clc
adcl
pop
testb
mov
mov
mov
ja
sub
dec
mov
addr16
xchg
insl
iret
and
dec
add
inc
orps
cmpsl
test
sbb
in
jmp
pop
pop
and
scas
loop
push
not
insb
push
popf
cmc
flds
lahf
stos
pop
mov
icebp
test
in
add
shll
scas
inc
das
sbb
sbb
jb
sub
adc
popa
dec
ficompl
cmp
int
jne
lret
mov
mov
mov
lcall
xchg
xchg
pop
xchg
cmp
xchg
loop
rcr
enter
mov
hlt
fwait
lods
pop
dec
xchg
sbb
mov
idivb
push
out
lret
push
test
mov
mov
jl
push
ss
repz
cmp
mov
pop
js
mov
pop
imul
dec
xchg
ds
jmp
sbb
mov
les
cmp
mov
mov
mov
push
cmp
lods
sub
shll
cltd
and
jns
mov
jbe
mull
pop
cmp
aam
loopew
ret
mov
dec
popa
xchg
repnz
xor
lahf
stc
in
jb
cmc
add
fimuls
jb
rorl
popa
pop
mov
or
ja
pop
sbb
inc
adc
push
jecxz
xor
push
xchg
out
ljmp
add
aam
jae
cmp
add
sub
mov
daa
push
inc
cltd
leave
xchg
push
daa
shrb
cwtl
xor
aaa
dec
in
jg
pusha
jnp
pop
adc
fs
into
fsts
stc
scas
sbb
sub
mov
out
test
adcb
or
int3
dec
cmpsb
ja
pop
cmp
popf
lods
lahf
add
stos
ficoml
out
jo
fists
dec
sbb
gs
or
repz
jle
lcall
and
jo
or
adcb
aas
dec
dec
cmp
scas
and
adc
sbb
loop
loop
insb
lret
jae
lahf
mov
out
pop
push
add
xor
add
mov
mov
and
jb
add
mov
aam
or
adc
xchg
xchg
jo
cwtl
sub
jg
enter
and
mov
sub
mov
xor
sub
xchg
movsl
inc
scas
jne
xor
jno
in
ret
adc
pop
mov
jp
fsubs
cwtl
push
out
cmp
inc
jbe
adcb
out
adc
inc
sub
scas
cwtl
jecxz
mov
xchg
inc
int
sub
dec
jle
test
jp
fstps
sbb
cmc
imul
add
adc
std
push
pop
sbb
lods
in
adc
jl
adc
dec
ret
dec
push
xchg
outsl
aas
add
lds
dec
lcall
mov
lret
aaa
push
rorl
int3
mov
add
lret
pop
testl
push
jne
mov
inc
scas
xchg
lcall
xor
cltd
pop
scas
pop
rcrl
jecxz
mov
xchg
xchg
stos
jecxz
sbbb
cmp
push
push
xchg
mov
sbbb
dec
mov
mov
or
shl
add
pop
divb
add
add
push
or
push
inc
and
or
rol
jecxz
xchg
mov
hlt
in
in
stc
cmp
fistpll
sahf
push
mov
jb
enter
insl
mov
sub
mov
movl
outsl
nop
xchg
jle
call
push
xlat
cwtl
mov
adc
outsb
nop
cmp
in
xchg
adc
fwait
sbb
movsl
and
mov
xchg
mov
jae
mov
idiv
scas
push
jnp
push
pop
push
hlt
rorb
push
lahf
xchg
jno
push
insb
int3
ja
push
cmp
rcll
mov
xor
shrl
xor
xor
es
cld
lret
cli
pushl
nop
int
shll
je
sahf
outsl
xchg
xor
std
aas
cwtl
pop
adc
stos
cmpsb
movsl
cltd
stc
inc
ljmp
icebp
cmp
idiv
push
mov
iret
or
ret
mov
xchg
sti
mov
xchg
mov
addr16
in
jecxz,pn
fiadds
inc
aaa
cmp
lods
aad
jne
js
adc
jnp
mov
rorl
xor
orl
in
jns
or
in
add
loop
cli
jg
push
clc
jns
in
jle
xchg
dec
jmp
adc
fmul
pop
dec
dec
incb
push
aad
stc
mov
data16
xchg
dec
pushl
sahf
adc
lods
pop
cmpsb
loopne
sbb
jecxz
ds
jae
jmp
movsl
mov
mov
or
fwait
xchg
and
inc
in
into
insb
popf
sbb
sti
sbb
pop
sbb
add
push
rcll
pop
lds
pop
lods
lock
pop
sub
stc
fisubs
dec
dec
ficompl
pushf
adc
pop
xchg
add
std
and
mov
mov
xlat
aas
in
lcall
jae
repnz
aam
dec
loope
xchg
jnp
lcall
inc
adc
jmp
mov
cli
sbbl
out
mov
mov
lret
fwait
roll
push
daa
in
nop
mov
mov
mov
jo
clc
mov
mov
mov
notl
cltd
adc
mov
in
xchg
cltd
mov
push
int
push
mov
sti
nop
cltd
jnp
mov
stos
stc
lcall
xor
loope
sysenter
int
jmp
adcl
imul
jno
push
stc
jns
and
imul
insb
jecxz
lea
add
fcmove
mov
xor
fcoms
flds
lods
cmp
lret
jb
mov
and
dec
jmp
lds
xlat
adc
aad
les
and
xchg
lods
pop
xor
push
pop
test
sub
enter
add
or
xrelease
xchg
mov
xchg
sbb
xchg
pop
or
ljmp
xchg
lods
rclb
and
add
mov
in
jne
dec
popa
rolb
nop
jle
ljmp
lcall
cmpsb
test
daa
adc
fwait
xchg
mov
mov
lea
cli
push
add
mov
xor
push
pop
adc
cwtl
jmp
jbe
cmpsb
insl
push
and
popf
rcrl
dec
imul
mov
cmp
andb
popf
cltd
es
lahf
test
rcrl
sub
mov
xor
jmp
je
sbb
dec
sbb
push
mov
popa
xchg
or
insb
sub
clc
inc
faddl
push
push
filds
cwtl
push
loope
cmp
jge
fucomip
out
ljmp
mov
scas
fbstp
sub
lret
scas
int
lret
popa
jecxz
clc
and
add
jmp
adc
out
pop
lods
mov
pop
repnz
mov
xor
fisubrs
sbb
adc
mov
cmp
mov
or
out
xchg
mov
ss
and
mov
push
repz
out
inc
jne
xchg
std
fsubl
fsubl
sahf
mov
out
out
cmpsl
lret
inc
inc
mov
shlb
add
test
insb
dec
popa
add
adc
or
mov
adc
jge
dec
dec
xor
pop
jp
jg
pop
adc
cmpl
pop
jmp
std
arpl
lods
mov
adc
push
or
jnp
or
mov
sbb
inc
mov
scas
sub
data16
adc
mov
mov
outsl
aas
in
push
jbe
or
xchg
jecxz
lods
inc
das
sar
cmp
jl
into
xchg
in
cmp
pop
lock
mov
out
cld
idivl
cltd
jb
movsl
xor
mov
mov
loopne
test
or
mov
push
mov
and
subb
cmpsl
les
mov
dec
jo
xchg
int3
push
sbb
jns
gs
and
in
sbb
data16
mov
add
sahf
sub
xchg
pop
mov
cmc
mov
jno
push
andb
daa
mov
pusha
mov
pop
rolb
mov
test
inc
pop
mov
xor
test
push
scas
bound
xor
xor
movsl
lret
test
pushf
push
testl
test
sbb
pop
iret
push
and
in
jecxz
mov
xchg
pop
pop
out
dec
and
jb
loop
dec
andl
imul
sahf
push
push
or
out
sbb
jae
inc
lds
loope
cmp
mov
add
sbb
movsb
sub
call
das
push
push
pop
sub
aad
add
add
jl
jl
fcoms
push
lcall
mov
or
outsl
xor
fxch
sub
mov
icebp
pop
lahf
push
or
xchg
or
sbb
outsw
cmp
lcall
and
push
or
or
movsl
ficompl
call
dec
int3
call
cltd
clc
test
repz
mov
es
pop
mov
sbb
jae
pop
pushf
and
aas
pop
or
es
movntps
lret
rclb
and
jne
dec
adc
outsl
lret
dec
pop
in
cmc
adc
aaa
adc
adcl
cmp
mov
jbe
pusha
dec
sbb
iret
loope
idiv
dec
lea
push
rol
jo
xorb
or
sub
dec
ret
sbb
push
in
cmp
fstl
adc
cmpsl
xor
iret
sti
int
out
mov
xchg
fstpl
icebp
mov
sarb
push
shll
pop
mov
fwait
movsb
sub
ljmp
adc
out
sub
outsl
test
mov
xchg
pop
cmp
xor
stos
push
jno
loope
cmp
push
jmp
jp
test
push
xchg
stos
cmc
inc
ja
xor
mov
shlb
push
xchg
inc
or
mov
repnz
sti
popf
sub
and
fistpl
mov
das
out
sub
cmpsl
gs
fsubl
jns
repz
jns
loope
jo
add
fisubrl
and
call
pop
and
add
call
sub
pop
dec
int3
dec
mov
ljmp
movsl
mov
mov
jb
popa
adc
push
cwtl
in
push
popa
cmp
fldcw
cmp
pop
jb
daa
xchg
pop
fwait
inc
fmull
into
loop
out
or
dec
xor
dec
sub
insb
jne
push
pop
shll
addr16
and
pop
sub
cmp
mov
ljmp
inc
lahf
adc
xlat
das
jmp
cmp
xlat
cltd
mov
scas
std
sbb
popa
jp
xchg
or
inc
lds
push
push
add
mov
popf
cmp
mov
out
aas
xor
add
stos
loop
cld
lods
inc
xorl
push
fld
jl
xchg
in
inc
stos
cmpsl
sti
test
sub
fdivrl
xor
fnstsw
push
aas
mov
adc
ds
stos
adc
adcl
jl
mov
jg
movsb
xchg
hlt
xor
xchg
out
mov
call
sbb
fs
jb
out
cmp
in
fisubrs
in
push
lcall
cltd
ret
lock
fwait
adc
mov
push
ror
jge
mov
es
pushf
xchg
xor
cwtl
rcrb
mov
or
push
ficompl
sbb
mov
mov
shlb
fistpll
inc
fmul
iret
mov
or
clc
dec
in
test
mov
push
pop
lods
inc
push
mov
xchg
shlb
dec
lods
mov
imul
xorl
sub
rorl
imul
xor
jg
mov
nop
int3
fisubrs
rorb
lret
jnp
push
add
stc
mov
adc
sbb
fistps
ja
dec
loope
cwtl
fnstenv
mov
es
lods
fsts
push
rclb
add
lock
mov
ret
mov
jo
leave
push
int
lahf
stos
icebp
and
jmp
stc
std
fmull
push
adc
push
push
jnp
pop
mov
ja
sets
popa
dec
inc
sub
repnz
mov
sbb
jno
mov
jb
mov
sarb
xor
push
xchg
scas
push
lods
sub
sbb
adc
stos
lock
clc
pushf
dec
sti
icebp
in
mov
xchg
or
js
cmc
xchg
js
fadds
xchg
mov
sbb
scas
fstpt
mov
xor
mov
sbb
add
sub
adc
xabort
or
fcomps
daa
or
repz
push
xor
xchg
clc
or
insb
fcmovnu
pop
fisubrs
je
mov
ret
dec
xlat
push
outsb
daa
ljmp
dec
mov
imul
ja
ficoml
mov
les
scas
jns
loop
mov
inc
leave
mov
lret
inc
in
or
fmuls
dec
xor
lods
aad
int
aam
ret
dec
sbb
cmp
xchg
push
out
fs
adc
sub
dec
mov
mov
cmpsl
cmc
adc
xchg
mov
icebp
shr
xchg
fsubrs
mov
fisttps
pop
les
xor
push
outsb
push
ja
mov
rcll
pop
lret
in
mov
outsb
xchg
fdivr
out
mov
movsb
pop
leave
stos
xor
mov
mov
daa
sub
push
fistpl
add
nop
pop
add
xchg
mov
loope
sub
leave
vhsubps
cmp
cmp
mov
sbb
and
jp
hlt
and
rclb
and
ss
sti
sarb
mov
mov
fdiv
add
inc
or
pop
dec
push
fidivrl
lcall
popf
xor
in
lods
mov
mov
mov
arpl
fidivl
jbe
stos
mov
daa
out
add
sub
scas
inc
fiadds
ja
outsl
inc
int
in
inc
push
pop
xor
repnz
pop
repz
adc
loope
test
push
xchg
cs
cmp
lock
mov
mov
jecxz
sub
jmp
insl
and
in
mov
pop
push
imul
loopne
adc
lods
ljmp
push
int
je
inc
mov
pushf
test
sub
fnstsw
cltd
sub
shll
xor
sbb
mov
movsl
mov
push
in
push
cld
jae
sarl
lea
cmp
sbb
mov
push
mov
mov
scas
negb
es
ret
xchg
sub
adc
outsl
scas
jns
push
mov
push
mov
aad
cmpsb
dec
sbb
cmp
in
data16
pop
outsl
sbb
call
mov
iret
mov
nop
pop
in
stc
test
cmp
jo
mov
dec
xor
jns
fdivrl
sahf
into
inc
imul
mov
pop
or
cmp
les
jae
mov
cmp
sub
mov
or
and
mov
dec
test
dec
mov
jg
xor
js
jp
cwtl
push
fwait
data16
das
scas
xor
jo
adc
cmpsb
add
fwait
jns
sbb
cltd
shll
loope
push
jle
rcll
add
adc
iret
jmp
xor
mov
inc
leave
mov
add
mov
mov
in
pop
test
dec
sbb
pop
jl
pop
jnp
popa
gs
int
xchg
imul
fdivrl
sbb
mov
jne
inc
xchg
std
mov
leave
jns
cmp
inc
pop
mov
sbbl
mov
mov
test
and
jl
adc
xchg
xor
daa
ss
js
pop
mov
add
push
pop
shrl
insb
rcrl
adc
jmp
pop
loop
cmp
outsb
push
fstl
ja
pop
xchg
push
sbb
cmpsb
insb
jle
adc
pop
lcall
test
enter
xchg
dec
stos
xchg
sub
xor
fisubrs
std
lahf
push
sbb
popa
sbb
fadd
jnp
sbbb
cmp
sub
loope
rcll
lcallw
xchg
ja
push
ret
and
push
jle
push
pop
xchg
or
and
jl
bound
cmpsb
push
out
dec
xchg
add
in
insb
or
push
cwtl
push
or
int
stos
cmp
rcrb
dec
lock
icebp
jb
sbb
enter
cmp
cmpsb
jb
sub
dec
sti
ret
dec
mov
jecxz
ret
mov
ds
sbb
dec
aad
pushw
mov
mov
ret
stos
mov
push
xchg
cmp
mov
ss
repnz
mov
inc
outsl
pop
pop
aaa
pop
pop
xor
pushf
mov
mov
jns
lea
sti
mov
aaa
and
imul
push
mov
push
xchg
sbb
xor
add
imul
ds
adc
push
pop
cmp
pop
cmp
pop
call
fidivs
mov
sbb
pop
xor
pop
mov
fs
add
pop
pusha
aas
xchg
mov
cld
cli
pushf
addb
fildll
sub
dec
push
mov
inc
insb
dec
clc
sahf
stos
or
adc
mov
inc
fwait
jae
test
jb
sub
test
aaa
xor
jnp
out
shl
adcb
xor
inc
sbb
or
push
and
stos
daa
mov
jns
pop
xchg
fldl2t
pop
adc
sbb
cmp
repnz
jne
jae
stos
jp
xor
popf
js
push
enter
mov
call
out
cmp
jp
jb
repz
imul
mov
fbstp
es
inc
int3
xchg
and
fidivrl
pop
int3
inc
out
arpl
imul
shrl
pop
cmc
dec
jbe
add
mov
xor
sbb
loopne
fld1
fimuls
xor
cmp
adc
cmp
sarl
jl
jae
jbe
fstpt
fsubs
ja
mov
jnp
fwait
es
xor
int3
out
mov
add
in
test
mov
icebp
or
sub
jno
jnp
into
arpl
mov
and
jnp
je
push
and
int3
xchg
xchg
lods
ss
push
pop
cmpsl
leave
push
stos
pmullw
adc
adc
mov
or
loop
call
push
inc
ret
inc
adc
aam
fadds
adc
sub
mov
adc
add
pop
dec
pop
dec
cmp
adc
ja
inc
in
mov
aad
dec
fstpl
in
in
inc
xchg
sbb
push
push
cli
icebp
dec
dec
pop
es
arpl
stos
jge
pop
mov
dec
dec
add
fdivr
lcall
fldt
adc
push
mov
mov
sbb
lds
sub
xchg
imul
fcmovu
mov
lock
mov
cwtl
in
orb
add
mov
imul
jmp
dec
repz
in
lock
xor
hlt
or
jb
sar
mov
test
xchg
mov
and
push
add
adc
hlt
inc
ss
push
pop
stc
inc
xorl
iret
mov
les
push
shl
inc
xchg
mov
dec
jb
test
ret
movl
jae
shl
lahf
mov
pushf
and
sub
vmulps
in
mov
jbe
add
stos
xchg
push
lahf
push
jg
daa
imul
jl
rcl
lock
or
jno
daa
rcrl
mov
dec
cs
cmp
inc
test
push
into
outsl
outsl
es
insl
sti
loope
mov
adc
scas
sub
sbb
fisubs
mov
cmp
xlat
pop
fstpl
enter
iret
xchg
pop
mov
js
pop
inc
cs
dec
xchg
js
nop
lea
movsb
fcomip
inc
mov
sbb
call
aaa
jae
xor
dec
sub
add
mulb
dec
xor
adc
xlat
leave
mov
imul
cli
jbe
lret
sub
cmovnp
sar
push
ss
out
push
lcall
sbb
add
pusha
xchg
jnp
mov
test
push
dec
stc
mov
xor
dec
jb
jl
daa
jnp
in
xor
mov
and
lods
dec
adc
stc
jae
adc
xchg
cmp
push
jnp
jns
mov
repz
xchg
xchg
daa
ja
dec
daa
sbbl
inc
and
fisttpll
or
adc
pop
add
loop
mov
mov
cmp
out
pop
aaa
and
mov
fstl
imul
cmpsb
in
adc
xlat
orl
adc
sbb
mov
popf
jp
cmp
adc
mov
push
std
mov
iret
xor
std
mov
jns
bnd
push
jle
sti
imul
in
push
pop
mov
pop
add
xor
sub
pop
stos
sahf
xchg
out
ds
xlat
xchg
imul
sbb
xadd
dec
int
ret
xchg
inc
loop
out
and
inc
ror
xor
bound
lock
stos
imul
xchg
jg
adc
inc
push
sahf
jecxz
daa
outsb
dec
je
bound
push
jae
xor
int3
mov
pop
cmp
nop
repz
add
xlat
mov
daa
add
lahf
and
add
shrb
xor
cmp
test
aam
pop
mov
dec
shrl
mov
add
clc
in
lock
jne
lahf
sbb
dec
lods
mov
pop
push
fs
fnstenv
enter
push
fisubrl
mov
repz
mov
inc
sbb
cmp
stc
leave
fs
dec
out
cmp
xchg
mov
repz
out
rclb
mov
das
push
imul
sub
inc
shll
sub
lods
add
int3
xchg
imul
push
push
jge
xor
and
fsubl
aaa
mov
daa
mov
mov
enter
mov
jecxz
or
iret
cwtl
lcall
stc
add
xchg
out
aaa
sti
pushf
in
lret
call
add
lock
mov
loop
imul
sub
mov
xor
pop
or
mov
fs
inc
shr
addb
nop
ja
out
mov
jle
adc
aas
jg
fdivrs
lods
mov
or
and
xchg
outsb
xor
js
sahf
out
ss
decl
rcll
inc
movl
imul
fldt
iret
mov
sub
sbb
cs
mov
cmp
jp
pop
and
test
in
incb
stos
cmp
fcmove
ja
fdivl
cmp
ds
dec
sbb
ror
add
jbe
iret
out
xor
cmp
jno
push
push
mov
dec
or
sbb
add
ficompl
aas
movsb
push
aaa
cmp
sbb
add
pop
rcll
lahf
xchg
scas
lods
or
int
mov
outsb
js
ja
aas
xor
repz
sbb
mov
mov
mov
js
js
cltd
add
adc
push
out
adc
sbb
or
clc
and
ljmp
cli
cmp
stos
and
xor
repnz
mov
in
ljmp
dec
dec
aam
shll
mov
xchg
push
movsl
mov
or
icebp
movsl
faddl
les
dec
cwtl
aad
add
or
sub
mov
adc
in
sub
pop
lock
or
mov
sub
hlt
ret
sub
xorb
inc
jae
jmp
xor
cmovp
fdivrl
mov
cmp
repz
dec
sar
lods
pop
jl
jae
orb
in
jecxz
rclb
push
dec
cmp
sub
push
imul
mov
shrb
adc
leave
sbb
scas
pop
ss
mov
rorb
pop
xchg
cmp
lea
sti
repz
xor
cmp
lcall
xchg
test
lcall
inc
bound
dec
imul
or
add
out
and
mov
sub
addr16
xor
cs
mov
stos
int3
and
push
cld
leave
sub
jge
mov
add
aad
inc
sub
dec
aas
cmpsl
fbstp
mov
mov
fnsave
jne
gs
cmp
int3
stos
inc
cld
lret
or
icebp
sti
ret
xchg
pop
cmp
xchg
xchg
mov
hlt
sti
movsb
sbb
and
pop
std
sbb
addl
or
rcr
adc
jns
or
hlt
imul
push
pop
pop
int
dec
loopne
xor
jae
mov
xor
and
sbb
pop
mov
mov
imul
inc
adc
fistl
insl
shrl
test
dec
and
jns
xchg
add
sbb
rcr
cmp
inc
aam
adc
imull
dec
cmp
mov
scas
lods
scas
adc
jl
jg
data16
xchg
scas
lods
sub
into
aad
lret
mov
lret
or
es
jae
rcrl
lock
stos
xor
fisubrs
clc
mov
jle
int
in
test
ret
insl
js
aaa
pop
mov
jbe
add
and
dec
mov
and
sbb
mov
mov
icebp
mov
sub
mov
into
adc
xor
gs
jnp
adc
iret
pop
sbb
dec
movsb
xchg
dec
cmp
das
lock
or
push
cmp
fisttpl
insl
popa
mov
cmc
and
adc
jg
mov
add
pop
jge
push
sbb
cmp
xchg
out
mov
mov
rcrb
movsl
or
and
dec
push
cmp
clc
stos
out
rep
dec
and
cmp
nop
imul
fs
arpl
cmp
inc
popa
pushl
not
xor
cmpsl
adc
dec
add
xchg
aad
cmp
mov
xor
ret
popa
dec
out
sbb
mov
and
inc
adc
cmp
adc
outsl
cli
scas
mov
and
mov
pushf
mov
mov
xchg
push
roll
aas
mov
dec
push
jae
lods
xchg
cs
pop
mov
or
sbb
inc
cs
andl
push
mov
pop
mov
cmp
inc
push
mov
sbb
stos
push
pop
push
mov
or
jcxz
test
xchg
lock
push
mov
mov
add
mov
dec
das
sbb
mov
and
cmp
cmp
imul
xchg
cmp
addr16
jo
ret
add
xchg
push
mov
mov
mov
je
pop
push
outsl
popf
or
test
int3
mov
mov
pusha
in
jle
cmp
jbe
jns
fcomip
pop
outsl
mov
xor
cmpsb
stos
jb
aaa
ljmp
shr
mov
xchg
push
mul
lcall
sbb
dec
sub
adc
xor
enter
sbb
xchg
mov
and
insl
add
inc
idivb
push
adc
xchg
sbb
in
mov
mov
pop
loope
xchg
xchg
push
mov
xchg
nopl
push
shlb
add
push
xor
add
lahf
dec
jle
mov
cli
fldt
loop
ja
mov
lea
dec
xchg
cmpsb
test
mov
add
and
jo
fs
shlb
and
cli
lret
dec
jb
adc
mov
lcall
js
mov
rclb
int3
fcmovne
sbb
adc
push
mov
cmp
pop
cmp
dec
push
imul
mov
rclb
jg
mov
enter
sub
insl
in
inc
mov
push
lret
mov
outsb
cmp
jnp
sahf
std
or
outsb
mov
xor
jp
int
pusha
mov
push
cwtl
lcall
add
sti
xchg
sub
mov
push
imul
xor
or
push
jns
and
dec
adc
cmpsl
add
lret
mov
out
into
pop
in
inc
fs
es
or
xchg
jp
les
cmp
jbe
and
pop
adc
xor
fdivrl
shl
out
lds
sub
roll
adc
xchg
push
or
jns
iret
xlat
loopne
js
mov
cmpsl
mov
sub
pop
mov
add
xor
aam
mov
push
pusha
cs
ds
lods
fwait
lret
sub
push
or
fidivrs
inc
test
cmp
scas
dec
in
cmp
cmpsl
add
enter
dec
in
cmp
sbb
mov
adc
sub
cld
push
sahf
mov
cmpsl
add
stc
in
add
stos
test
xor
call
clc
fmuls
lret
jg
cltd
test
jnp
inc
mov
test
or
lods
cmp
cmp
xor
add
int3
jne
adc
jne
dec
mov
xchg
xor
xchg
shl
rorl
adc
pop
jae
pop
dec
cmc
jae
lock
into
pop
dec
lock
pop
dec
mov
or
daa
inc
test
sub
and
into
push
cmp
sub
ret
lcall
lahf
je
add
out
inc
adc
xchg
or
xchg
lds
xor
push
movsl
out
jo
and
mov
into
pop
mov
mov
test
daa
xchg
pop
pop
add
xor
or
mov
daa
mov
add
xor
sbb
fiadds
jle,pt
mov
daa
andb
lea
orb
outsb
mov
push
xor
stos
std
or
shl
sbb
mov
ret
addb
sub
lds
xor
inc
dec
jo
in
sub
das
jnp
popf
scas
imul
pop
out
or
loopw
add
jle
inc
stc
add
nop
inc
xchg
push
jnp
imul
jne
popf
sbbb
aaa
in
outsl
rcrb
sbb
push
add
or
inc
xchg
or
or
mov
or
andb
hlt
mov
dec
mov
mov
cmc
lods
bound
inc
ja
or
sbb
xchg
adc
cmc
in
jg
repnz
mov
mov
add
arpl
sub
mov
mov
jp
or
mov
mov
xlat
sbb
jmp
push
sub
cmp
clc
or
add
stc
dec
scas
call
test
dec
xchg
pop
mov
addr16
jae
and
out
js
stos
out
addr16
mov
mov
fwait
xor
jnp
cmpsl
mov
hlt
or
or
mov
sub
push
push
mov
pop
push
fsubrl
fiadds
loop
xor
dec
mov
popf
cmp
and
cmpsl
jle
cltd
xchg
cltd
cwtl
jle
or
ja
hlt
stos
mov
sbb
adc
sub
mov
push
jnp
jp
sub
mov
jne
les
mov
pop
add
mov
movsb
icebp
pusha
push
mov
lahf
fcmovnu
or
sbb
fidivrl
xor
fistpll
fwait
xor
pop
fwait
mov
adc
pop
call
jge
cmpsb
mov
pop
push
xor
cmpsb
popf
mov
cwtl
sbb
push
pop
out
cmc
std
movsl
adc
out
out
inc
inc
xchg
fldenv
sahf
lret
repnz
jne
lret
pushf
inc
mov
clc
jle
insb
sub
mov
loope
jle
imul
xor
jns
xor
imul
fsts
enter
hlt
out
push
or
sti
push
test
lret
cmpsl
loop
mov
jno
lret
or
daa
and
dec
in
vmovaps
testb
xchg
fistps
mov
cltd
mov
leave
lds
xchg
rclb
imul
imul
sbb
push
xchg
cmp
nop
jb
mov
xchg
daa
fnsave
arpl
and
lcall
push
jge
mov
fimuls
cmpsb
cmc
ss
pop
dec
pop
andb
outsb
iret
fbstp
repnz
cltd
cwtl
lcall
mov
dec
jbe
push
inc
lret
pop
jnp
out
adc
ret
sub
orl
cmp
fs
sub
and
and
cmp
mov
push
xor
sar
pop
inc
xlat
push
jbe
xchg
jecxz
mov
mov
leave
sarb
sti
jno
insb
inc
sbb
popa
rcr
std
push
jno
jg
or
outsb
test
xchg
jmp
call
popa
and
in
add
sub
and
aas
repnz
filds
ja
or
and
lods
lret
das
ss
inc
popf
in
fsubrl
arpl
push
push
loope
dec
popa
mov
cmc
push
jle
jno
movsb
ret
xlat
pushf
mov
dec
flds
loopne
clc
mov
jae
adc
incl
inc
jbe
add
jnp
shrl
stc
add
in
xchg
push
mov
fstpt
mov
or
fsts
rcr
icebp
push
inc
cmpsb
add
xor
lock
jb
xor
xor
or
inc
xor
xchg
sbb
and
pop
push
and
lahf
pop
xlat
sbb
mov
out
decb
clc
stc
stos
inc
add
add
shll
xor
ret
inc
loope
movsb
ja
and
or
inc
mov
xchg
add
fcompl
mov
data16
cli
adc
mov
addr16
jmp
dec
mov
into
lock
jbe
or
sub
pusha
fscale
inc
or
mov
xchg
or
movb
leave
xchg
cmp
xchg
out
and
cmp
and
adc
loope
popa
mov
dec
sarb
sub
inc
dec
repnz
mov
repnz
cmpsl
clc
movsl
pop
mov
ret
push
sub
mov
test
mov
jp
cmpsb
xlat
push
test
sbb
cmp
sahf
and
jbe
scas
xor
scas
mov
cmpb
push
inc
aad
xlat
mov
into
es
push
mov
dec
jle
rorl
cld
in
cli
push
sub
mov
andl
xor
or
xlat
cmp
lret
mov
and
add
insb
cld
push
adc
ja
fs
cs
adc
pop
mov
mov
ffree
frndint
jl
dec
and
data16
es
xchg
bound
outsl
jns
jo
push
fldl
xor
cli
push
dec
cmp
cmp
daa
rcrl
cmpl
add
xchg
out
rcrl
push
sub
out
dec
into
dec
xchg
push
stos
push
out
inc
cmp
pusha
fsts
xlat
call
fldl
jb
cwtl
xchg
mov
in
or
es
iret
pop
mov
lcall
lcall
jae
sub
jae
inc
xlat
cmpsl
leave
mov
out
add
pop
ss
pop
inc
rcll
pop
leave
ret
js
push
in
les
mov
jle
cmp
in
xchg
insb
sub
test
xor
cmp
in
add
dec
sub
mov
push
dec
shr
mov
or
ret
adc
pusha
xchg
dec
xor
in
xchg
inc
inc
sbb
out
lcall
lds
jg
sub
leave
push
movsl
pushf
adc
shrb
in
insb
dec
inc
lret
popf
cmpsl
arpl
pop
aaa
adc
test
adc
js
daa
push
inc
and
and
daa
int3
cmp
incl
ror
cmp
out
movsl
lret
mov
inc
pop
xchg
mov
mov
adc
jb
inc
std
lcall
xchg
jge
mov
rolb
mov
adc
inc
aas
pushf
cli
loopne
push
xor
dec
and
outsb
cmpsl
aad
mov
cwtl
sbb
into
bound
inc
fimuls
mov
push
mov
das
mov
mov
fwait
outsb
mov
push
or
xor
jno
mov
jo
data16
cmp
and
aad
cmp
adc
or
imul
push
addr16
mov
das
sub
movsl
cmpsb
dec
ja
sarb
movsl
inc
popa
ljmp
mov
inc
push
sbb
push
mov
lods
fsubs
loope
nop
cltd
sbb
test
or
jnp
in
jae
pop
shrl
movsl
add
sub
stc
cmp
and
mov
incb
push
ret
sub
push
push
mov
je
mov
xor
das
cmpsl
push
jl
ss
jae
inc
lods
ds
jo
inc
fistl
sbb
lret
mov
pop
aad
push
dec
test
in
cli
inc
subb
pop
enter
or
pop
mov
add
shr
or
inc
or
jnp
xor
std
clc
inc
sarl
mov
lcall
xor
stc
aas
jp
ficomps
call
push
cmp
push
jns
cmc
aas
dec
hlt
movsb
lret
add
xor
pop
mov
out
in
stos
out
inc
add
pop
xor
fnstenv
sahf
lock
ds
dec
mov
int3
adc
xchg
popa
mov
mov
in
aas
adc
fimuls
sbb
cmp
mov
xor
test
push
push
sub
push
fists
sbb
aad
imul
rcl
inc
xchg
add
in
jmp
repz
jp
cmp
adc
jnp
mov
lods
sub
mov
or
sbb
std
outsb
enter
push
and
xchg
pop
pop
out
dec
or
mov
xchg
insb
rcrl
aam
lds
push
jl
aam
cmp
leave
push
popf
jl
mov
hlt
imul
inc
decb
in
mov
push
mov
push
mov
add
add
dec
sub
xchg
pop
inc
sbb
adc
sbb
and
push
clc
add
xchg
orl
mov
shrb
adc
cmp
jo
pavgw
mov
ds
and
sbb
add
ja,pt
jae
fistps
out
mov
mov
cli
sub
jo
pop
int
fadd
in
addr16
testl
dec
das
pop
xchg
sbb
dec
inc
leave
cli
xchg
mov
fwait
xor
cwtl
outsl
mov
jno
into
repnz
pop
cmp
pop
push
out
ret
jb
setb
sbb
mov
js
jae
inc
ja
add
mov
push
pusha
lea
jb
jp
push
xor
test
sub
in
inc
sahf
sahf
jo
scas
sarl
or
pop
push
cwtl
push
and
aam
repnz
xor
mov
test
daa
jb
icebp
out
mov
pop
xchg
jo
jmp
mov
mov
out
lea
jnp
int3
pop
mov
addr16
jge
sbb
lock
mov
imul
sbb
stos
mov
js
mov
or
jecxz,pt
scas
mov
fcmovnbe
pop
xorl
adc
in
fcoml
mov
sub
lds
sbb
xchg
dec
repnz
or
data16
sti
xchg
into
scas
mov
jg
stos
outsl
sbb
jp
int
xor
fsubs
pop
sbb
mov
jns
fidivrl
dec
stos
rclb
cmpsb
fdivrl
outsb
aam
add
clc
add
pop
in
insl
mov
test
sti
sbb
inc
push
clc
enter
jecxz
xor
push
push
add
sub
cld
mov
and
cmpsb
out
pop
push
mov
jg
inc
mov
mov
ja
les
aaa
or
andl
jmp
in
add
xor
pop
mov
popa
mov
push
into
adc
mov
roll
sbb
jecxz
mov
push
xor
mov
add
adc
dec
sbb
mov
mov
or
dec
push
repnz
je
int3
in
outsl
sahf
gs
mov
icebp
mov
imul
lea
pop
das
adc
in
sbb
mov
push
jmp
pop
aam
jmp
jle
nop
and
test
and
mov
rcrb
fisttpl
xchg
cmp
adc
push
ljmp
cmpsl
sarb
pop
ror
dec
int
xchg
lcall
inc
jae
and
cmp
inc
jb
xor
mov
adcb
inc
sahf
addr16
cmc
std
in
stos
cmpb
movsb
and
xor
jl
sbb
lods
jecxz
jge
mov
sbb
adc
bound
add
icebp
push
mov
jns
dec
xchg
in
cmp
data16
mov
and
mov
sub
mov
es
mov
mov
test
pop
push
lods
mov
jmp
pop
sub
dec
cmc
cmpl
mov
xchg
mov
cwtl
mov
pop
cmp
shll
and
add
test
movsb
push
sub
scas
jecxz
outsb
out
inc
leave
lcall
or
sub
sbb
lret
fstps
sbb
in
pop
into
mov
add
sbb
imul
rcrl
inc
push
rol
jne
ret
mov
jp
les
repz
ret
push
icebp
iret
xchg
sub
orb
cltd
dec
or
mov
shll
out
or
lret
cmpsl
pop
insl
jo
fadds
notb
dec
push
inc
test
in
fidivs
out
xor
pop
and
jae
popl
jo
mov
and
aaa
cmpsb
inc
jbe
pop
call
std
les
leave
iret
int3
out
xchg
mov
and
daa
test
mov
addb
xchg
push
or
jbe
mov
add
mov
push
pop
fildl
dec
jne
pop
and
in
xchg
aas
shll
inc
daa
popa
pop
xchg
adc
sbb
push
shrb
scas
mov
lock
loopne
nop
jno
leave
jl
cs
add
push
shll
mov
xchg
pop
add
xchg
mov
lock
xor
cmc
add
out
dec
ret
ret
leave
or
cwtl
or
mov
dec
out
cld
xorb
clc
inc
mov
sub
mov
sti
lods
dec
loop
out
mov
xchg
and
jp
rolb
pop
sub
vmwrite
jmp
xor
pop
out
dec
add
jns
dec
pop
mov
insl
es
call
clc
pop
sub
clc
movsl
and
pop
stos
gs
mov
int3
xor
lret
pop
fdivrs
mov
out
ret
mov
loope
jmp
mov
and
jmp
adc
in
rcl
push
fstps
sbb
mov
mov
xchg
dec
test
or
or
sub
xchg
pop
jno
int
adc
shlb
mov
sti
decb
clc
push
scas
mov
inc
imul
push
jbe
mov
dec
dec
pushl
aaa
popa
sub
ljmp
mov
rclb
sbb
xchg
mov
pop
and
mov
dec
fwait
pop
dec
cs
stos
call
xor
popl
lret
mov
jp
sub
decb
loop
fwait
inc
inc
ss
sti
pop
loop
push
int
lock
sarb
daa
pusha
cmp
addb
mov
and
dec
pusha
roll
adc
mov
adc
inc
xchg
mov
outsb
jnp
loope
sbb
sub
xor
and
mov
add
inc
mov
xor
xchg
adc
dec
xlat
data16
or
sbb
push
cld
maxps
je
mov
iret
stos
pop
add
mov
faddl
lahf
les
imul
pop
push
repz
cmc
lods
iret
add
dec
push
fimull
add
mov
mov
insl
fldenv
lods
xor
lods
aaa
lock
mov
shr
mov
adc
dec
pop
out
outsl
jbe
lds
outsl
add
xor
pop
daa
das
mov
addps
ss
in
pushw
flds
pop
leave
or
xor
int3
xchg
cmp
stc
ljmp
fidivrl
das
call
movsb
sbb
repnz
loop
push
lret
arpl
mov
pop
jbe
cli
and
mov
and
sbb
dec
or
mov
pusha
pop
mov
xchg
repnz
call
lods
mov
in
dec
leave
lret
mov
popf
and
push
lret
xor
test
aas
mov
jge
test
pop
mov
cs
pop
aad
psraw
push
movsl
movsl
push
xor
push
insb
out
insb
push
sub
mov
leave
out
imul
jecxz
sbb
or
ja
dec
xor
pop
push
jle
negl
lret
je
fisubrl
push
xor
negl
dec
lret
and
jmp
lret
dec
daa
cltd
mov
cmpsb
les
mov
imul
adc
inc
sub
in
fidivrl
imul
push
push
dec
test
bound
lahf
mov
je
lret
jne
in
sub
or
divb
and
mov
pop
add
outsl
jmp
imul
xor
mov
aad
rclb
mov
inc
mov
add
mov
mov
scas
adc
add
enter
addb
sti
lcall
rolb
jnp
jle
mov
push
data16
pop
movswl
cmp
pushf
test
add
mov
sub
loope
mov
out
subb
jmp
repz
cmp
cmpsl
negl
pushf
mov
lcall
add
xor
xchg
scas
in
add
jg
or
in
imul
xchg
test
xor
jo
adc
pusha
iret
outsl
xor
ret
arpl
vpaddw
rcrb
xchg
sbbb
fistpl
hlt
push
lods
sbb
bound
out
lds
mov
add
inc
mulps
les
pop
and
cwtl
xchg
adc
mov
test
mov
and
stc
int3
scas
lcallw
lcall
outsb
fnsetpm(287
scas
pop
dec
aaa
xor
mov
dec
scas
dec
shlb
push
stos
add
inc
movsb
mov
jno
dec
cltd
pop
iret
bound
push
pcmpeqd
pusha
xchg
out
jb
xor
sbbl
mov
jmp
adc
xchg
jae
scas
fsub
insl
je
sarb
pop
insb
mov
je
xchg
jl
arpl
mov
imul
sbb
pop
stos
cmp
mov
pusha
into
int
inc
jnp
lock
inc
mov
pop
test
out
cmp
adc
outsb
xchg
popa
fistl
xchg
or
push
cmpsl
jge
popf
dec
jns
mulb
mov
push
out
enter
jl
push
mov
fisttpll
cmp
dec
jo
sub
cmpsl
jmp
jmp
scas
and
sbb
pop
jge
sbb
notb
scas
mov
mov
je
pushf
call
adc
mov
push
inc
lods
mov
ret
xor
inc
add
cs
mov
pusha
lods
fcomps
std
inc
push
test
add
xchg
jle
push
test
sbb
cmp
es
jo
imul
and
or
das
mov
pop
ds
cmp
dec
and
jae
rcrl
popf
pop
cmp
mov
mov
lods
incl
data16
pop
xchg
cmp
dec
test
sub
sub
fwait
arpl
mov
leave
rclb
fisttps
jle
out
sahf
pusha
sbb
and
loopne
jo,pt
ret
xchg
test
sbb
jge
xor
cmp
mov
shlb
sbb
xor
and
jmp
pop
mov
or
je
sub
jp
mov
mov
add
cs
sti
xchg
nop
outsb
mov
pop
fildl
cwtl
out
mov
adc
loop
mov
out
mov
imul
lahf
mov
fwait
fwait
testl
cmp
nop
mov
xchg
xor
out
out
adc
mov
add
scas
push
nop
test
inc
pushl
push
sub
jp
pop
lea
movsb
lods
out
bound
jge
aam
fmuls
push
aam
fs
rorb
cmp
mov
dec
ds
daa
pusha
and
lods
mov
aam
jecxz
pop
addb
push
lea
movsb
aaa
int
adc
outsb
test
fsubrs
in
cmpsb
sub
js
test
inc
mov
push
mov
js
aad
and
jne
and
sahf
xor
mov
ljmp
addr16
push
cmp
pushf
adc
xchg
push
adc
inc
push
popa
pop
mov
jb
pop
popa
sbb
fwait
dec
pop
push
loopne
jp
mov
outsb
roll
cli
mov
xlat
push
add
xor
mov
fistl
shll
pop
rorb
dec
enter
loopne
sbb
jo
jb
cltd
add
mov
cmc
xchg
arpl
out
xlat
shr
push
es
int3
test
test
push
dec
inc
jmp
add
mov
repz
outsl
xchg
in
lahf
mov
in
ret
popa
mov
nop
mov
inc
push
inc
popa
std
sub
hlt
nop
lods
cmp
sub
lods
xor
ret
adc
and
cmpsl
fcomi
ret
notb
imull
imul
setns
sub
stos
inc
std
push
pushf
push
adc
mov
fnstcw
add
das
fsubrs
push
repnz
lea
and
xor
les
movsl
iret
shll
and
fnstsw
fisubrs
xchg
repz
jge
fisubl
sub
push
cli
adc
shrb
push
push
inc
or
insl
hlt
add
push
xor
xchg
inc
lret
out
test
movaps
add
xchg
test
into
mov
and
and
jno
call
test
loopne
and
cmp
in
cld
sub
sti
in
mov
push
sti
les
in
lods
dec
pop
jle
jp
fsts
dec
mov
mov
jg
dec
and
daa
xor
inc
shlb
and
mov
sarl
dec
cs
mov
ja
sbb
sti
jb
test
ds
dec
out
test
pop
aaa
xlat
mov
and
fs
mov
or
jo
mov
or
movsl
mov
push
jne
jecxz
shll
hlt
sti
test
ret
sub
aas
std
jbe
and
mov
bound
cmc
mov
mov
xchg
aam
mov
ss
mov
inc
xlat
lcall
mov
mov
pop
fcomp
pop
iret
push
in
movsl
xor
cli
xor
popf
fcmovu
pop
cwtl
dec
jnp
adc
imul
pop
out
fidivrl
rcr
test
andl
mov
popa
mov
int3
adc
dec
sub
fnstcw
mov
mov
inc
addr16
fisubrl
mov
xor
jb
aaa
movsl
cmp
sbb
xchg
popa
fldl
or
lahf
xchg
outsl
stos
pop
cmp
xchg
js
push
lea
dec
dec
call
push
cli
popf
jecxz
sar
ljmp
sbb
data16
cwtl
add
or
dec
stos
pop
jne
mov
sbb
push
je
cmp
inc
mov
pop
and
mov
loope
xor
jle
xlat
xor
cmp
add
fwait
ret
dec
mov
mov
sbb
mov
ja
int3
xchg
and
inc
pushf
xor
mov
pushf
loopne
pushf
xchg
adcb
int
inc
loope
shr
loop
cmp
cmp
push
add
or
lret
xchg
dec
xchg
and
jb
shr
aas
push
add
in
jl
or
std
xor
inc
mov
jecxz
icebp
mov
jno
test
das
iret
mov
out
sarb
jnp
mov
mov
inc
aaa
mov
pop
push
sbb
lods
test
stos
push
pop
xlat
add
lods
xor
mov
movsb
sarl
repz
and
sub
and
push
ret
jmp
lock
xchg
pop
adc
aas
pusha
or
push
popf
outsl
ret
xor
jle
adc
mov
inc
fdivs
pop
xchg
mov
sub
jno
das
aam
test
arpl
stc
xchg
jne
mov
lods
shl
push
loope
or
cmpsb
push
fs
stc
adcb
sbb
mov
sub
xchg
push
cmp
add
in
mov
push
daa
sub
xor
cmp
cmp
add
icebp
lret
mov
jmp
lret
shl
xchg
sbb
cmp
ficoms
andl
lcall
push
jmp
or
mov
mov
push
or
fs
inc
xor
cmpsl
out
mov
loope
jmp
mov
scas
add
in
xchg
aaa
shrb
xorb
mov
mov
inc
mov
movsb
in
call
ss
fistpll
nop
popa
mov
adc
test
mov
lret
adc
lret
add
ret
ret
inc
push
sarb
cmp
fs
add
mov
pop
loope
xor
lock
ljmp
insb
adc
imul
sti
cmp
push
aaa
aas
xchg
adc
dec
pop
cmp
mov
dec
movl
add
leave
int3
roll
shl
mov
xor
fsubrl
out
xchg
xchg
mov
dec
mov
andb
mov
and
mov
mov
jns
fdivr
mov
in
inc
sub
push
test
pop
outsb
jns
cli
mov
rcr
mov
xlat
push
icebp
je
or
popa
add
hlt
sub
xchg
lock
xchg
push
lods
adc
or
movsb
jno
dec
testb
loopne
std
fcompl
push
popl
pop
inc
add
faddp
test
repz
xor
or
lret
push
xchg
leave
imulb
lods
sbb
inc
jbe
pop
leave
popa
adc
inc
add
lahf
packuswb
ret
int3
mov
in
mov
jae
sti
imul
push
divb
imul
pop
iret
pop
sub
xchg
xchg
jns
or
dec
cmpsb
sub
sub
loope
push
test
add
out
xor
sti
mov
mov
and
cmc
mov
xchg
test
mov
and
mov
lcall
lret
aam
push
jnp
scas
mov
ja
lret
je
push
xchg
mov
cwtl
xor
push
and
insb
sahf
and
jae
ds
jo
sbb
test
push
pushf
add
pop
sahf
dec
loope
xchg
notl
add
jns
rorl
and
push
bound
stos
gs
gs
aad
jnp
pop
les
push
jmp
sub
es
icebp
pop
sub
imul
dec
jb
dec
mov
jecxz
cmp
mov
mov
js
out
mov
xor
bound
dec
push
jmp
inc
sbb
cltd
adc
mov
push
icebp
addl
and
sbb
xor
xor
jno
adc
mov
aam
andb
lret
sahf
mov
xchg
mov
gs
mov
push
je
jle
hlt
or
das
mov
sub
cmp
int3
sbb
jecxz
push
scas
fwait
into
neg
iret
popa
mov
ret
and
cmpsb
pop
outsl
ds
dec
cwtl
icebp
scas
dec
ret
test
mov
dec
mov
pushf
inc
loop
xor
sbb
jno
pop
or
leave
into
xor
daa
cmc
insl
jmp
test
pop
test
add
sbb
scas
xor
lcall
and
sub
dec
lods
push
sub
stos
in
xor
lods
xchg
shll
sbb
lret
mov
dec
and
jge
scas
es
and
in
sar
inc
sub
mov
cmpsl
inc
xchg
mov
jno
mov
cmp
and
adc
lds
and
and
cmp
pushf
dec
lods
dec
add
cwtl
jb
mov
add
dec
je
lods
push
fiadds
mul
xor
int3
inc
jo
test
push
fwait
pop
cmp
cmp
xlat
ret
hlt
push
jae
hlt
push
dec
shlb
idivl
jb
xor
addl
xor
sbb
daa
das
jo
fsubrl
outsb
mov
jne
icebp
ret
leave
jg
hlt
outsb
sarl
and
fiadds
fistpll
pusha
ret
add
dec
fisubs
sti
xor
push
lret
fnsave
pop
enter
and
inc
nop
adc
and
outsl
ljmp
dec
ret
mov
mov
or
push
cmp
add
jmp
mov
mov
inc
xchg
movsl
or
out
popf
pop
mov
outsb
cmpsl
and
mov
add
push
dec
inc
add
je
test
aas
or
xor
mov
add
js
lods
divb
out
pusha
fsubrl
rep
std
mov
cs
sub
add
and
jne
test
loopne
sahf
xchg
pop
fisubrs
lret
dec
stc
cmp
loope
arpl
cltd
stos
mov
xor
and
adc
push
loop
cmc
jl
push
push
xchg
or
ljmp
or
cli
add
adcl
dec
sbb
jp
push
scas
fs
daa
popa
mov
sahf
cmp
mov
ja
xchg
fldt
push
dec
pop
movntq
inc
sub
pop
mov
dec
inc
insl
xchg
arpl
xchg
xlat
inc
mov
loope
fucomp
nop
sbb
movsb
mov
popf
aad
out
adc
xorb
dec
adc
fidivs
lret
sbb
pop
out
jae
push
enter
loop
or
xor
mov
addr16
mov
xchg
sbb
jg
and
orb
pop
popf
enter
dec
int3
mov
xor
push
fcom
xchg
mov
test
jecxz
mov
sbb
push
mov
jne
mov
xchg
mov
clc
and
repz
dec
xchg
test
ds
pusha
cli
push
out
dec
jbe
cmpsl
dec
cmc
fwait
outsb
push
clc
mov
mov
jbe
inc
jle
out
xchg
int
jnp
xor
orb
sub
jnp
adc
mov
in
mulb
aaa
in
dec
les
dec
pop
testb
xor
xchg
fs
fldenv
mov
jge
insl
outsl
dec
jge
push
adc
lcall
lcall
jo
insb
ficompl
push
pop
lds
dec
jmp
push
rcrb
cmp
fdivrl
and
stos
and
sbb
cmpsl
daa
and
jecxz
jl
sbb
pop
outsl
imulb
jmp
in
lret
rcrb
fwait
mov
mov
push
clc
loop
cld
sub
in
mov
push
lea
sub
push
pop
test
jae
push
jmp
fs
mov
mov
add
gs
push
push
int3
adc
lret
int3
mov
push
sub
cs
jnp
mov
movsb
std
cmp
xor
stc
test
or
mov
sbb
or
lahf
add
pop
pop
pop
jnp
ds
inc
icebp
popa
fdivs
int3
mov
cs
jmpw
imul
arpl
dec
fld
mov
sub
mov
pushf
fs
push
inc
cmpsl
arpl
decb
scas
cmpb
jecxz
aad
pop
mov
mov
and
out
add
sub
mov
imul
sbb
test
das
cmp
icebp
test
xchg
jge
sti
popf
dec
push
inc
es
aas
xor
xor
cmpb
mov
jecxz
sbb
inc
aam
dec
xor
outsb
inc
xor
xchg
ja
fs
test
rcll
imul
jmp
stc
mov
fs
enter
inc
das
mov
cmp
cmp
add
pop
jns
push
cmp
insl
clc
mov
xchg
scas
out
test
mov
repnz
push
xchg
pop
roll
pop
les
into
or
cli
cmp
xchg
push
inc
div
loop
sbb
arpl
adc
push
mov
clc
xor
sbb
jae
jp
aas
rolb
push
gs
dec
or
xlat
push
int
cmpsb
lock
inc
jmp
mov
mov
pop
dec
jae
push
mov
pop
add
inc
add
pop
sbb
sub
stos
sub
nop
sub
or
adc
test
inc
mov
rcrl
shlb
ljmp
dec
dec
fs
imul
or
xchg
mov
mov
rcll
ret
out
inc
sub
imul
add
out
inc
sbb
call
add
push
cmc
in
ja
cmpsl
push
adc
or
xchg
arpl
testl
insb
loopne
cmpsb
addl
jp
mov
rcr
inc
mov
es
das
mov
pop
mov
jmp
icebp
jge
rcll
aad
add
stos
icebp
scas
cli
ret
push
sub
add
lcall
push
xor
outsl
out
and
cmp
xchg
stc
push
adc
out
pop
nop
add
and
sub
add
or
dec
add
push
mov
jg
fildl
sbb
fsts
jecxz
insb
inc
pop
jge
inc
ss
fidivs
inc
cwtl
insb
xor
fisttps
scas
int3
scas
jb
xchg
fisttps
lcall
mov
mov
sti
xor
repz
les
in
push
dec
addb
mov
adc
sub
add
out
popa
cmp
jle
int
mov
dec
adc
push
notb
in
fmul
or
jp
xor
dec
and
and
jb
or
mov
mov
push
mov
xchg
push
cmpsb
mov
inc
cwtl
ret
mov
outsl
ret
cmp
ret
cltd
and
aaa
mov
enter
movsb
push
push
fwait
xchg
hlt
or
lock
stos
lcall
out
pop
mov
les
jno
shl
repnz
sbb
dec
popa
test
push
imul
pop
mov
or
data16
mov
dec
and
icebp
mov
or
mov
sbb
loop
pusha
pop
inc
ret
lea
fstpt
das
jecxz
shlb
call
movsl
xor
and
push
or
paddq
or
hlt
xchg
testb
sub
fiadds
lods
dec
loope
dec
xchg
sbb
push
adcl
sbb
pushf
and
icebp
jl
mov
mov
sbb
pop
lea
std
in
jp
cmp
int3
or
pop
adc
pop
sbb
repz
inc
ljmp
fucomp
lret
popf
int
aaa
pop
xlat
mov
or
cld
pop
sub
cld
pop
loope
out
xchg
aad
jno
fsubrs
mov
scas
xchg
mov
out
mov
and
loopne
xchg
sub
push
shrl
lret
lods
incl
mul
mov
outsl
jle
dec
rcll
jns
ret
movb
push
pop
or
cmp
orb
xor
mov
jmp
cmpsl
iret
xchg
mov
xor
in
jae
cltd
pusha
cltd
jp
jmp
fistl
inc
mov
push
cmp
arpl
fsts
mov
lds
std
ss
add
aam
push
insl
mov
adc
test
or
iret
sub
outsb
mov
xchg
or
mov
sub
fidivrs
jmp
or
leave
stos
ret
or
jnp
inc
xorl
jnp
lock
push
mov
stos
call
cwtl
push
int
insl
cld
std
dec
and
out
inc
cs
rolb
ret
sub
daa
arpl
je
inc
std
fistpll
mov
test
fldt
pop
inc
out
fildll
add
cmc
std
data16
and
jo
push
inc
add
orb
movsb
nop
xchg
scas
and
jmp
jl
xor
sub
jge
fstpl
inc
mov
push
lock
mov
lahf
lods
mov
cmpsb
movsb
into
enter
push
int3
sub
ljmp
data16
add
rorl
dec
jno
scas
mov
sti
xlat
dec
inc
fcmovnu
xor
bound
fisubrs
movsl
test
or
mov
xorb
lret
sahf
inc
lea
cmp
mov
push
inc
mov
jle
inc
in
inc
imul
adc
cld
push
mov
mov
fcoml
xchg
xchg
mov
fcmovu
xor
mov
adc
jno
mov
adcl
stos
pop
add
adc
sbb
in
and
and
xorb
xor
or
mull
mov
test
push
pop
arpl
jno
nop/reserved
int3
test
sti
and
push
pop
mov
jo
jmp
dec
adc
call
or
es
xchg
push
and
pusha
insb
iret
in
jmp
gs
movl
or
test
cmpsl
inc
push
mov
out
pop
adc
cmp
mov
mov
jle
bnd
sbb
adc
xor
aas
inc
pop
addr16
jl
push
inc
sub
xchg
popf
dec
lods
cmp
addb
lahf
sbb
into
mov
pop
test
mov
clc
mov
xor
jno
lahf
movsl
push
push
ror
push
fsubrl
push
fcoms
pop
pop
shr
popa
daa
mov
icebp
shlb
inc
mov
je
mov
rcr
xchg
adc
minps
in
icebp
cld
mov
push
leave
imul
and
aaa
mov
es
or
test
aad
pop
cmp
shl
pop
gs
nop
daa
je
and
loope
or
rcrb
sti
mov
and
push
fldcw
jp
movsb
jae
cmpsl
jae
fldt
fwait
loope
mov
or
dec
pop
notl
mov
vdivpd
in
fidivrl
movsb
add
mov
dec
fs
iret
pop
mov
sbb
mov
cmp
push
xor
pop
dec
imul
jecxz
push
sahf
imul
rclb
aas
mov
adc
fnstcw
out
imul
clc
add
movsb
xchg
idivb
xchg
pop
fcoml
scas
jae
icebp
repz
das
sub
push
lds
out
les
popf
mov
and
sbb
inc
xchg
adc
sbb
loop
movsl
sarl
mov
sbb
fmuls
sbb
iret
xor
sahf
cs
pushf
jecxz
sbb
scas
xchg
cmpsb
adc
jb
inc
lods
int
mov
mov
mov
adc
push
pop
ret
and
xchg
imul
out
outsb
cmp
pop
sbbb
or
jns
insl
sub
inc
cmp
add
sub
call
cltd
outsl
jle
add
testb
insl
notb
scas
test
jge
cmp
daa
fmul
js
scas
jno
pop
bound
mov
dec
push
mov
in
stos
sub
push
enter
je
mov
sub
pushf
lcall
in
out
and
ljmp
jmp
cmpsb
mov
mov
or
lcall
mov
sub
jne
push
ret
and
add
sub
push
mov
cmc
gs
mov
xchg
je
mov
push
std
cmp
cltd
cmp
in
loop
jge
ret
mov
sbb
add
jecxz
sbb
popa
push
rcr
or
mov
inc
and
mov
push
pop
cmc
fisubrs
or
mov
jbe
xor
dec
mov
imul
rcrb
xor
sbb
push
stos
mov
pusha
pop
push
sbb
and
test
jmp
std
out
cmp
sbb
out
leave
mov
out
dec
mov
movsl
and
in
and
and
lods
jl
jmp
aam
jge
jle
push
arpl
cmp
xchg
sbb
fwait
movb
sbbl
jl
es
js
xchg
repnz
cmc
mov
adc
int3
adc
in
das
xlat
sub
xchg
sahf
lods
push
lret
int
scas
sti
ds
test
push
fisubrl
add
scas
inc
icebp
movsb
int
pop
jns
inc
xchg
ja
cmp
nop
pop
dec
pop
cs
sbb
mov
xchg
dec
lods
sbb
xor
arpl
or
cmp
js
xor
mov
outsb
enter
ret
jns
cmp
cmp
in
push
cmc
dec
popa
dec
sbb
jmp
sahf
sub
sub
sub
xchg
rcr
add
sub
cld
pop
xchg
dec
jae
mov
icebp
cmp
xor
popa
jb
lret
cmc
test
scas
xlat
lods
addb
outsb
out
call
loope
gs
movsb
sbb
out
mov
pop
pop
push
jbe
call
and
out
xor
scas
addr16
orl
mov
daa
adc
imul
icebp
popa
movb
or
bnd
cmc
in
iret
mov
push
ds
lds
into
aas
das
adc
xchg
jns
stos
cmpsb
testb
fsubs
jge
add
pop
xor
mov
or
dec
mov
xlat
inc
mov
lods
jno
movsl
add
cmp
inc
enter
cmp
in
mov
mov
in
mov
push
test
jp
daa
add
fwait
cmpsl
inc
xor
fsubl
fwait
push
inc
fwait
std
out
dec
sar
cmp
leave
daa
or
test
jnp
ljmp
mov
je
adc
sbb
arpl
cld
pop
jg
fcomps
out
test
xchg
cmp
jbe
lahf
jg
cld
or
mov
mov
addr16
mov
gs
adc
push
xchg
sbb
cltd
jb
push
xchg
call
shl
lds
mov
movsl
pop
cmp
aad
hlt
mov
cwtl
out
inc
fildll
push
addl
loopne
xchg
es
and
pop
mov
xchg
popa
push
cmp
stos
jle
push
ljmp
icebp
jmp
lret
xchg
adc
and
mov
jmp
push
jo
jns
sbb
mov
test
jg
mov
pop
jle
and
insb
mov
out
pop
fs
lock
or
sub
mov
ljmp
add
test
and
outsl
and
sbb
fstpl
clc
lds
out
stc
adc
fisttpl
and
je
adc
inc
data16
es
xchg
in
iret
test
repz
mov
repnz
into
das
lds
mov
fdivl
stos
xor
mov
xchg
xchg
ret
mov
decb
sub
sbb
xchg
push
xor
imul
out
add
sbb
jg
push
or
mov
sub
or
mov
adc
xchg
pop
push
leave
mov
pop
mov
lret
fwait
and
in
mov
mov
scas
rorb
xor
inc
mov
lods
lea
inc
int
loope
and
jl
fsin
jg
mov
and
movsb
inc
inc
push
mov
jnp
adc
pop
add
push
cmp
fcomps
bound
push
stos
out
jnp
in
mov
popa
in
dec
add
cmp
jle
sub
xor
mov
pop
int3
xor
sbb
loopne
jns
mov
jne
fsubs
add
mov
lcall
lds
jns
mov
push
push
add
cmpsb
call
mov
std
gs
inc
inc
pop
push
cmp
lds
sub
jmp
sub
sbb
jne
out
dec
adc
mov
dec
push
mov
out
mov
movb
xor
cmp
sub
es
fstps
xchg
mov
pop
ds
xor
imul
dec
cmp
push
pop
aaa
mov
dec
icebp
sub
pop
pop
jp,pn
lcall
and
ret
and
aam
out
dec
jg
xor
or
or
imul
testb
insl
cmpsl
sbb
xor
in
cwtl
xchg
lods
lods
jae
mov
mov
inc
test
fdivr
cmpxchg
or
es
or
nop
inc
sub
or
incl
inc
cmp
push
ds
push
xchg
cmp
jle
add
xchg
imul
add
jecxz
rorb
adc
push
fstps
shlb
je
jle
movsb
pop
aas
sub
sar
ljmp
sti
lods
iret
lods
in
aad
dec
pop
insl
je
and
cmp
pop
scas
push
stos
icebp
cmpsl
subl
shr
fld
and
fcomi
jno
adc
lods
sub
clc
scas
xor
pusha
cmp
cwtl
sahf
sbb
in
rolb
jmp
push
mov
mov
xorl
push
mov
notl
mov
mov
xchg
test
repz
not
fcoms
mov
leave
push
fisubrl
dec
cmpb
add
xchg
cltd
sub
jo
pop
insl
lret
daa
in
out
mov
andb
xchg
in
push
dec
and
or
sarl
js
loopne
aaa
stos
pop
popa
jae
pop
in
cld
jae
or
inc
rcrb
movsl
xchg
push
jp
pop
xchg
mov
pusha
jns
sbb
mov
and
sti
mov
jl
push
loopne
icebp
shl
mov
inc
or
inc
mov
icebp
mov
cmc
push
xchg
adc
outsb
sbb
scas
das
push
in
arpl
mov
into
xor
jno
add
jbe
mov
movsb
lret
lahf
outsb
test
adc
inc
mov
sti
jno
fucomp
aam
std
sub
cmpsl
pop
xor
mov
xor
loope
jl
pop
xchg
pusha
jnp
in
movsl
xlat
or
add
xor
jns
fidivl
andb
roll
fs
xchg
insb
pop
push
shll
mov
push
in
cld
dec
dec
sub
jno
and
in
mov
add
push
sub
jle
insl
test
adc
cmp
or
popl
pushf
cltd
sub
fdivr
ja
mov
lcall
sbb
or
add
pop
xchg
jns
lahf
sbb
or
das
and
adc
cld
out
incl
jl
mov
outsl
pop
jl
movsb
movsb
xor
out
les
ret
or
xchg
lock
sub
bound
fcmovnb
and
jne
and
test
push
bound
ret
sbb
loop
jmp
in
dec
imul
mov
rcrb
das
add
stos
pushw
cmpl
fstps
std
jno
jmp
js
inc
xchg
sbb
test
dec
jg
imul
or
out
lcall
cld
xchg
inc
cmc
add
mov
cmp
loop
adc
in
or
or
and
imul
or
pop
das
push
inc
jmp
test
xchg
loopne
push
arpl
jp
rcrb
test
out
jo
push
dec
push
into
lock
or
insl
adc
andl
mov
add
lds
jl
sbb
mov
in
dec
cwtl
push
mov
outsl
leave
bound
test
cs
sarb
push
sbb
jmp
int3
mov
mov
in
mov
repnz
lods
fisubs
xchg
int
sbb
push
sbb
cmp
repz
mov
and
pop
fisttps
xchg
lcall
jecxz
enter
lret
mov
cmp
mov
push
add
outsl
mov
push
ret
sbb
mov
cmpsl
outsl
sahf
xor
push
push
xor
jb
mov
mov
mov
xchg
mov
xchg
arpl
in
test
sub
dec
mov
mov
jle
push
push
xor
fcoms
push
pop
push
lcall
sub
es
xor
jle
sar
aam
xor
rorl
or
popa
or
dec
or
sti
in
adc
jl
push
or
xchg
cmp
jne
addr16
outsb
cmp
scas
sub
outsb
adc
scas
cmpsl
inc
int
or
and
xor
and
or
orb
outsl
pop
inc
inc
push
xchg
and
pusha
sbb
aas
adc
lea
adc
idivl
fldenv
jmp
mov
push
in
xor
test
inc
mov
jae
cmp
out
xchg
loopne
enter
inc
mov
jne
push
xlat
data16
sub
add
push
adc
lret
call
shll
sub
mov
fs
imul
movsb
and
je
loopne
cs
and
in
cs
incl
push
pop
adc
loopne
mov
mov
xor
add
aas
push
mov
mov
arpl
out
cmpsb
nop
and
cltd
fcmovb
sarl
sub
lret
data16
adc
add
inc
push
in
pop
dec
jnp
in
jnp
mov
aaa
inc
xor
push
subb
pop
add
je
lret
mov
adc
push
xchg
mov
popa
out
out
sub
rcrl
in
rol
mov
fidivl
sbbl
in
cmpb
jnp
jge
xor
shrl
test
inc
xchg
xchg
decb
pop
jecxz
push
aad
jnp
cmpsl
mov
imul
out
fbstp
or
cmp
leave
dec
jge
cmpsb
mov
rcl
lods
das
cli
push
inc
out
inc
test
ja
push
cs
nop
add
sbb
push
mov
daa
int
xchg
bound
stc
ret
jns
push
add
data16
popf
jge
shlb
js
rcll
aas
cmp
aaa
stos
xchg
cmc
push
sbb
icebp
pop
pop
xchg
pushf
push
push
dec
lahf
popa
dec
lret
fs
push
sbb
push
decl
pop
or
adc
stos
shlb
mov
fldenv
imul
jge
out
pop
cmpsl
out
push
ds
int3
sbb
iret
addr16
dec
add
aam
inc
sbbl
bnd
fidivrl
cli
mov
fcoms
cmp
dec
sbb
mov
ret
push
mov
sub
push
stc
ret
push
out
cmp
loopne
inc
jl
mov
jge
cmpsl
addr16
xchg
movsl
mov
rcrl
cli
pushf
ret
sub
idivb
aas
test
dec
sbb
jo
dec
jmp
mov
jns
jmp
bnd
cmp
mov
pop
or
push
adc
add
push
les
cmc
jbe
ror
xchg
mov
outsl
mov
idivl
sub
jne
xchg
repnz
mov
je
mov
dec
lahf
lds
add
pop
lret
cmp
aas
dec
aas
hlt
int
icebp
pop
frstor
and
popf
mov
sbb
mov
and
outsl
mov
leave
xchg
cld
enter
dec
pop
xchg
add
push
mov
pfsub
repnz
andl
shr
and
ret
sub
cs
adc
jg
loope
lds
push
dec
cltd
push
jmp
and
mov
mov
call
fcomps
out
mov
mov
inc
int3
sub
imul
in
pop
in
mov
mov
push
push
inc
out
int
mov
iret
jb
shlb
add
rorb
sub
das
xor
jns
mov
cmp
xor
cmp
xchg
cmc
les
stos
add
sub
hlt
xchg
xor
sub
adc
test
loope
std
dec
mov
adc
cmp
mov
xor
out
cmpsl
cli
pop
xchg
lret
cmc
jb
hlt
mov
jae
in
xchg
and
repz
mov
jge
add
rep
or
add
inc
cli
fildll
add
in
jge
xchg
bound
pop
cmp
push
push
js
jecxz
lds
adc
arpl
mov
mov
mov
loop
gs
jb
mov
pushf
inc
std
shlb
mov
ds
ret
ret
mov
mov
jno
jge
std
lret
dec
pop
repz
mov
nop
rcrb
mov
mov
ss
ret
dec
jl
and
jl
and
adcl
paddsw
out
rorl
pop
jmp
js
scas
pop
fwait
lret
outsb
pusha
sub
xchg
mov
cmp
arpl
push
push
popa
adc
int3
cmp
mov
sbb
xchg
adc
dec
shlb
in
in
mov
movsb
cwtl
push
addr16
stos
xor
das
jecxz
jp
lods
add
lds
bnd
js
pop
scas
push
jmp
jae
inc
iret
sbb
jmp
lock
cmp
push
cmp
cmc
mov
repnz
mov
mov
add
and
sbb
dec
pop
jne
stc
inc
jb
lea
pop
leave
cmpsl
mov
fnstcw
roll
dec
movl
mov
and
mov
das
in
lcall
jo
push
and
insl
bound
js
arpl
mov
fmuls
cli
mov
out
scas
xor
mov
mov
mov
inc
ljmp
mov
jle
testb
aam
dec
in
or
mov
cmp
mov
ljmp
xchg
std
jb
je
enter
lcall
mov
test
int
push
in
dec
imul
add
ljmp
cmp
and
scas
dec
adc
mov
inc
mov
mov
outsl
pusha
das
out
outsl
mov
or
mov
ret
lods
add
xchg
aas
out
inc
dec
push
push
js
jl
push
stc
xchg
mov
sbb
imul
cmp
jge
add
decb
jno
mov
inc
rcrl
pushf
dec
and
sbb
dec
add
mov
xor
pop
and
fsubl
das
cmp
mov
sub
popa
mov
fcmovnu
je
mov
sbbl
imul
cwtl
push
jnp
sbb
je
xor
insb
xor
inc
sbb
push
sahf
xchg
lods
gs
mov
ds
mov
adc
cmp
movsl
movsb
dec
shrb
and
add
add
mov
daa
sbb
stc
mov
and
lds
cmpsl
xor
push
cld
mov
je
mov
push
loope
dec
xchg
jecxz
xor
mov
jbe
mov
in
push
pop
test
inc
sbb
sub
bound
aad
inc
jno
add
jl
xor
mov
pop
push
fisubrs
sbb
sub
ljmp
inc
outsl
ss
jnp
inc
mov
movb
jno
das
sbb
push
or
xor
scas
or
lods
dec
ficomps
jnp
sti
ds
mov
add
pop
std
mov
and
out
lods
sti
or
out
jb
lock
dec
aad
addr16
ret
enter
mov
pop
adc
cmpsb
loope
faddl
shlb
xorb
out
jb
cmc
mov
push
add
ds
test
adc
pop
mov
shlb
movsl
aaa
xchg
mov
sbb
xor
sub
push
xchg
shll
arpl
sbb
fimull
sti
mov
pop
sub
mov
mov
pop
xor
std
jnp,pn
push
cmp
insb
xchg
movsl
enter
rol
push
sbb
out
cmc
ret
sub
sbb
subl
push
cmp
ret
andb
dec
xchg
mov
cwtl
popf
cld
stc
movsb
sahf
ds
mov
or
lds
and
sti
sub
push
and
lds
xlat
bound
jno
mulb
push
or
pop
out
sahf
jl
push
imul
xchg
test
add
aad
and
mov
jl
xchg
xor
mov
or
jle
xlat
leave
cs
jne
pop
push
es
lcall
cld
mov
cmp
and
jno
mov
xchg
xchg
mov
mov
pusha
xor
fiadds
jp
pop
mov
xor
lcall
adc
test
rcll
dec
push
imul
test
stc
mov
pop
mov
cmp
cmp
inc
mov
popf
push
subb
sbb
int
lea
in
insb
out
xor
movb
sbb
ljmp
stc
mov
push
jmp
fwait
dec
push
repz
xor
mov
lods
jae
lea
aam
icebp
xor
xchg
jnp
jns
fldl
mov
inc
ret
mov
stc
outsl
pushf
xorb
dec
dec
dec
pop
and
jge
xor
sbbl
fcoml
aas
pusha
pushf
loop
add
movsb
mov
mov
in
in
sbb
sbb
xchg
xchg
inc
dec
cli
mov
rsm
or
pop
jmp
inc
add
and
mov
cmp
xchg
ja
inc
ds
fwait
insb
movntps
imul
push
and
xchg
insl
insl
out
push
mov
xlat
fs
add
imul
fistpll
repnz
fwait
push
vdivpd
hlt
loope
mov
mov
mov
jb
inc
gs
push
aaa
loopne
pop
ss
kmovw
mov
jbe
mov
popa
push
jp
cltd
into
lahf
jnp
fcoml
filds
cmp
loop
push
add
or
xchg
or
std
sbb
dec
dec
inc
dec
mov
and
mov
mov
rcl
pushf
sub
xor
cld
adc
cltd
cmc
push
cmp
cmp
gs
shrl
xchg
in
jle
adc
pop
push
fs
shll
leave
and
xlat
fdivr
in
dec
ret
sbb
mov
inc
imulb
cmp
push
test
and
test
fcomps
cwtl
xchg
idivb
cmpb
and
test
mov
push
push
or
pop
mov
pop
stos
pop
cwtl
dec
movl
xor
stos
out
jns
adc
jp
fcompl
push
shr
ret
jmp
adc
pop
int
sub
sub
xchg
mov
add
faddp
or
inc
into
and
dec
movsb
outsl
stos
ss
jmp
inc
pop
pusha
sub
xor
dec
outsl
lcall
pop
inc
popa
int
in
jae
scas
pop
aad
rolb
sar
add
stos
scas
mov
inc
sbb
add
movsl
dec
push
rcl
jle
ffreep
repz
outsb
push
aas
xcrypt-cbc
cmpsl
push
mov
cmp
insb
or
outsl
daa
sub
daa
es
cmp
mov
cmp
pop
fistpll
ds
js
shl
pop
int
mov
push
or
xlat
jg
mov
sub
aas
loopne,pt
cltd
movsb
cmp
popf
push
pop
aad
std
dec
and
dec
in
jo
mov
lods
shll
lea
and
mov
iret
and
arpl
mov
xchg
shlb
out
fcoml
lock
adc
xchg
faddl
mov
rolb
in
dec
cmc
push
into
cmp
cmpsb
and
out
addr16
dec
jle
daa
pop
pop
mov
jno
push
arpl
daa
xchg
ds
sarl
cmp
ret
mov
push
cmp
mov
repnz
push
ficompl
lcall
jns
jp
cs
push
dec
mov
scas
movsl
mov
dec
mov
inc
mov
or
push
dec
xchg
insl
decl
test
push
leave
dec
xchg
sti
jg
push
mov
dec
into
dec
push
and
inc
popf
xchg
mov
fidivrs
and
sub
cmpb
xlat
dec
xchg
cltd
sbb
stos
mov
leave
stos
mov
inc
dec
out
jge
jecxz
cltd
dec
pop
mov
push
test
xor
enter
push
stc
stos
inc
xchg
xchg
in
jl
sbb
sbb
push
mov
inc
add
fisttpl
or
xor
jns
imul
sub
aam
jnp
rcl
bound
pop
push
jo
int
out
into
test
and
mov
sbb
pushf
xchg
imul
imul
test
data16
cmpsl
cld
sbb
int3
cltd
fadds
inc
xchg
cmp
push
push
cwtl
es
cmc
mov
or
subb
jbe
sbb
scas
cli
inc
flds
xchg
fs
dec
sbb
mov
xchg
out
or
lods
in
stc
insl
clc
mov
xor
stc
fmuls
xor
imul
dec
loop
mov
aaa
test
mov
pop
ljmp
mov
mov
add
scas
stos
scas
jbe
cmp
ds
or
js
into
sub
and
mov
lods
imul
sub
mov
xchg
dec
movsb
lcall
int3
mov
subl
or
fcmove
in
push
inc
xchg
and
pop
and
in
and
sbb
sahf
pop
into
inc
cmp
xor
add
and
loope
icebp
cmp
movsl
inc
into
cwtl
xchg
adc
adc
jge
push
dec
sub
cltd
dec
iret
icebp
icebp
xchg
andl
jecxz
mov
push
popa
mov
in
into
aam
repz
gs
outsl
popf
ror
inc
or
pop
out
pop
pushf
in
add
fisubrl
lea
daa
adc
and
and
aaa
xchg
jo
xchg
and
cli
add
push
pop
movsl
in
and
test
scas
mov
repz
pop
lods
cltd
adc
jne
push
and
mov
adc
sbb
jbe
mov
pop
aam
js
mov
sub
or
mov
xor
or
pop
fwait
cmp
add
and
jg
sub
mov
filds
addb
imul
dec
pop
jae
sar
fistpl
ret
lahf
sahf
add
lods
xor
dec
pop
into
jmp
inc
out
lea
les
pop
cmpsb
mov
cs
aad
jb
test
xlat
push
lret
ret
dec
xchg
push
mov
mov
in
dec
ret
lcall
mov
in
popf
cli
or
popf
push
js
cmp
js
mov
call
lret
cmp
mov
mov
sbb
push
inc
repnz
jp
repnz
mov
xchg
dec
xchg
sub
and
sbb
out
aam
out
jne
jge
jl
dec
pop
and
mov
jnp
jae
push
xor
sbb
stos
arpl
ljmp
cmp
mov
xchg
fsub
cmp
inc
xchg
xor
cmc
lret
je
adc
xor
jb
inc
aad
pop
push
sub
insb
cmp
mov
insl
cmc
or
inc
outsl
push
test
iret
out
mov
divb
jle
push
push
cmc
mov
mov
pop
cmpsb
xor
and
js
cmp
push
sub
add
inc
insb
es
jno
xchg
fdiv
popa
test
pop
imul
fwait
daa
adc
mov
js
iret
cmp
fs
mov
inc
pusha
lods
mov
insl
add
pop
scas
orl
pushf
aam
dec
ja
mov
insb
stos
mov
pop
int
shlb
mov
mov
push
xor
and
popa
pop
fdivrl
xchg
sub
jns
jmp
mov
data16
out
or
shrl
add
sbb
sar
shll
push
dec
push
and
mov
xor
call
mov
shll
subl
stos
nop
stos
and
clc
mov
loope
lret
out
or
cli
dec
hlt
sbb
cmp
out
cmp
mov
sub
icebp
outsb
or
ror
insb
mov
mov
inc
nop
lock
adc
movsb
mov
imul
sub
cld
sub
xorb
and
fistpll
mov
outsb
icebp
push
into
leave
test
xor
pushf
inc
add
xchg
jne
shl
out
sbb
push
scas
and
fbstp
xor
rol
lcall
ljmp
into
pop
aaa
xchg
sbb
xor
movsb
sbb
inc
adc
fbld
sub
pop
adc
aaa
mov
inc
fmull
stc
addr16
fdivrl
mov
push
cmp
sti
mov
pop
loop
xchg
leave
test
jb
test
ss
push
mov
das
mov
and
out
mulb
icebp
cmpsl
int
xlat
pusha
std
stos
cli
nop
add
sbb
fists
shll
rolb
in
xor
fisttps
mov
ss
push
add
ret
and
cwtl
stos
xlat
dec
int3
pop
sub
iret
xlat
test
pop
int
int3
adc
jne
pop
mov
fmull
shlb
pusha
push
pop
lahf
test
and
fimull
mov
mov
insb
inc
les
and
loope
mov
pusha
inc
negl
out
sbb
mov
loop
fnstenv
sahf
push
dec
ds
test
call
sub
dec
stc
aas
incl
mov
inc
dec
jp
and
repz
inc
jno
shll
jp
push
or
pop
js
jne
jmp
push
mov
jae
inc
loopew
js
mov
push
and
aam
mov
jl
rol
scas
testb
iret
stos
jle
xchg
cmp
pop
popl
scas
je
pop
add
xor
lret
dec
mov
cmp
jl
cmp
neg
pushf
xchg
push
push
sbbl
ljmp
ret
shrl
pushf
out
or
ss
push
in
pop
scas
sub
push
xchg
pushf
aas
gs
je
inc
hlt
mov
cmpsb
in
mov
je
push
adc
mov
jbe
ret
pushf
pop
and
ljmp
push
push
jl
rorl
pop
pop
adc
cmpsl
movsb
sti
js
jle
sahf
inc
fisubl
stos
icebp
test
adc
mov
pop
jmp
dec
cltd
xchg
mov
pop
jl
push
sti
dec
int3
hlt
push
adc
adc
lret
js
fdiv
pusha
ret
lea
repnz
cmp
xchg
out
mov
sbb
inc
push
js
add
stos
xchg
and
dec
push
orl
inc
pop
ljmp
popf
sbbb
xor
xor
roll
jnp
xchg
ds
push
mov
mov
mov
stos
pushf
lods
xchg
and
outsb
or
jmp
inc
sbb
out
jbe
inc
push
pop
aad
xor
cmp
dec
or
xchg
fsubr
add
cmp
cmp
call
or
pusha
iret
stos
pop
mov
clc
and
hlt
dec
rcr
push
scas
into
cmpsb
dec
insl
imul
xchg
idiv
loopne
inc
mov
add
roll
inc
dec
push
and
or
mov
sahf
adc
cmp
in
loope
inc
in
fsubs
push
fcoml
dec
aaa
adc
ficoml
xor
pop
cld
jecxz
pop
inc
insl
adc
fwait
lods
xchg
cmp
lock
xor
jmp
pushf
mov
pop
enter
nop
hlt
jo
add
cwtl
inc
mov
cs
lea
inc
loope
lcall
lahf
int3
and
dec
out
arpl
xbegin
shl
pop
inc
nop
pop
jmp
jge
repz
lods
push
jl
add
gs
xorps
aas
mull
sbb
xor
ds
push
and
int3
int
add
lcall
lods
push
sahf
popf
test
cs
sub
gs
inc
test
pop
mov
add
mov
cmp
xchg
insb
daa
sub
dec
mov
xor
xchg
loope
mov
or
bound
out
nop
lock
xor
jg
shll
xchg
cs
imul
and
jne
frstor
arpl
dec
push
or
push
filds
outsl
pop
jmp
xchg
fbld
fldlg2
mov
pop
mov
nop
dec
mov
dec
out
arpl
cmp
xor
pop
pop
mov
cmp
mov
mov
inc
pop
pop
in
cmpsb
aas
test
or
mov
popa
jns
inc
mov
paddusw
mov
mov
bound
cmc
fcmovnb
in
fucomp
pusha
dec
and
jns
inc
mov
mov
push
or
sub
ds
and
outsl
inc
scas
adc
mov
and
fwait
int3
fwait
mov
stos
jecxz
mov
lock
xor
xor
xor
daa
adc
mov
pop
dec
push
lcall
mov
fwait
je
dec
fstpl
mov
lds
bound
cli
test
mov
adc
pop
popf
data16
mov
mov
je
sbb
fcomps
dec
out
jmp
sahf
ret
cmp
push
and
adc
cltd
or
cmc
int3
dec
add
orl
fisubrl
sbbb
adc
adc
push
ficomps
sub
jbe
ds
jns
fwait
mov
xchg
inc
xchg
add
pop
loop
js
xchg
std
lret
adc
jp
xchg
movb
pop
dec
mov
mov
dec
adc
loopne
insl
adc
mov
mov
ret
add
test
xor
mov
adc
imul
push
sbb
jns
jg
faddp
pop
jb
inc
out
cwtl
xchg
ljmp
mov
and
ljmp
into
mov
sahf
fisubrs
frstor
inc
lahf
add
pop
and
dec
mov
add
in
cld
xchg
enter
mov
push
popl
hlt
ja
out
mov
and
inc
push
orb
inc
xchg
sub
ret
cmp
je
sub
dec
outsb
or
jno
cmpsb
lcall
cmp
ss
loop
push
jne
dec
mulb
adc
pusha
and
cmpsl
sarb
mov
aam
mov
push
lods
jne
xor
imul
scas
xor
divb
mov
sbb
jno
std
mov
xor
lods
fdivrl
insb
sub
or
cmp
data16
daa
jmp
js
lcall
add
xchg
loope
shrb
out
bound
sahf
out
inc
lods
xchg
call
arpl
or
dec
adc
mov
loop
jmp
std
les
push
pushf
pushf
into
mov
jbe
mov
js
adcl
mov
ljmp
cmp
fstpt
cmp
popa
out
jne
bndstx
dec
cmpsl
daa
lcall
cmp
iret
push
adcb
lret
hlt
rolb
or
nop
push
add
sbb
ret
adc
mov
jnp
ss
iret
inc
pop
test
shlb
mov
jmp
movsb
xor
arpl
xchg
cltd
lcall
stc
adc
xchg
mov
jne
daa
scas
cltd
inc
jne
cmpsl
push
pop
into
xchg
mov
addr16
mov
jo
lea
add
mov
mov
dec
cmpsl
mov
adc
pusha
mov
vmulpd
sub
mov
in
fistl
pop
inc
sub
push
repnz
insl
inc
or
push
lock
mov
push
or
loop
add
mov
inc
pushf
jnp
stos
and
cmp
mov
pusha
inc
clc
ret
xchg
cli
pop
push
inc
xlat
xor
in
inc
cs
movsl
xor
fiadds
enter
mov
pop
jmp
adc
xor
mov
push
or
int
ljmp
pop
add
stos
mov
xchg
jb
call
cmpsb
jmp
mov
in
xlat
add
in
popa
mov
push
and
push
and
popa
scas
vpbroadcastw
cmp
jg
mov
or
std
jbe
roll
lods
inc
ja
insb
rcrl
les
call
cmp
insl
inc
and
movsl
iret
sahf
lds
cmp
xor
cmp
push
jge
rorb
jecxz
lret
js
out
addl
cs
pop
inc
xor
inc
mov
cmp
jle
xchg
mov
je
mov
sub
mov
roll
jbe
rorl
js
bound
jle
movb
sbb
nop
stos
sbb
lret
test
addr16
cmp
ds
hlt
fildll
mov
es
push
rcll
adc
ds
ds
adc
pop
inc
pop
xchg
jle
jo
sub
cmp
xlat
repz
arpl
iret
cmpsb
mov
imul
jb
rorl
test
aaa
mov
cld
cmpsb
pop
test
pop
lea
scas
das
fiaddl
mov
into
ss
push
inc
daa
rcl
enter
out
inc
sarb
pop
movsl
pop
into
mov
cmpsb
push
sub
push
mov
leave
idivl
pop
xor
loope
jae
int3
dec
insl
dec
jmp
cltd
pop
out
js
jbe
mov
jle
jne
cmp
pop
dec
mov
lret
xchg
inc
inc
ja
pusha
out
repz
in
xchg
mov
cli
jge
pop
jg
pushf
push
xor
sahf
dec
add
icebp
push
push
mov
std
xchg
mov
arpl
xchg
mov
push
testl
pop
push
jg
mov
cmp
xor
fcompl
jo
and
test
rcll
jne
sub
add
add
push
in
fildll
pushf
add
adc
fcomps
adc
fisubrl
pop
add
inc
dec
push
aaa
mov
dec
rcrl
push
pop
hlt
xchg
dec
into
std
xor
pop
or
bswap
clc
and
test
stos
sub
insl
les
jmp
push
mov
adc
xor
mov
push
popa
xchg
aaa
sub
in
inc
cwtl
xor
push
jmp
pop
mov
xor
in
xor
mov
je
stos
add
sti
ret
jg
or
fbstp
lea
pop
mov
lret
push
push
dec
push
lods
aam
loopne
imul
or
push
imul
test
ja
repz
pop
imul
repnz
jnp
dec
adc
mov
rolb
inc
pop
pop
dec
in
andb
and
leave
xchg
ffree
add
mov
or
loopne
adc
dec
shl
and
jp
dec
lret
push
sahf
fs
fs
lret
fidivrs
bound
stos
inc
push
push
mov
call
dec
mov
push
je
sbb
xlat
sub
repz
xor
mov
push
sbb
jne
ret
xor
gs
xchg
popf
scas
in
sub
mov
shl
into
scas
xchg
sahf
inc
sbb
mov
jg
std
popf
and
adc
sub
adc
push
popa
inc
imul
les
jae
nop
ja
out
shr
addr16
and
push
ss
fstps
xchg
into
add
mov
pop
fldl
push
xlat
scas
hlt
mov
sbb
repz
xchg
xor
ret
inc
int
test
xorl
xchg
mov
sub
jp
inc
ret
or
push
xchg
adc
dec
cmc
js
movsb
leave
push
pop
movsb
out
ret
cmp
dec
dec
cmpsb
into
mov
popa
shr
mov
out
call
std
pushf
push
push
dec
push
fcmovne
shl
add
mov
in
jecxz
pusha
or
add
xchg
movsl
mov
inc
dec
lcall
xchg
jle
outsl
sbb
cmp
mov
dec
xchg
lahf
sarl
push
popl
pcmpeqb
and
insl
ja
push
push
mov
lds
arpl
loope
rclb
and
lret
mov
pop
scas
mov
lds
out
popf
rolb
paddb
sub
jle
loopne
cmp
pop
jg
divb
jmp
stos
sahf
movsb
or
pop
inc
lea
sbb
lods
lea
sub
out
push
fdivrs
lds
jg
jb
cmpsb
popf
bound
sbbb
push
fdivl
jge
scas
movsb
xchg
pop
jecxz
mov
jp
repnz
in
push
aas
adc
push
push
fs
xchg
inc
jge
or
push
jo
jge
push
sub
jecxz
lods
xor
leave
push
xchg
push
xor
dec
fidivrl
cmp
jno
sbb
or
test
insl
or
mov
nop
sbb
scas
inc
idivl
push
jo
dec
or
mov
cmp
mov
or
pop
outsb
outsl
loope
movsl
push
and
pop
push
stos
pop
jnp
cmpsb
lcall
inc
imul
pop
xchg
dec
data16
xor
test
jb
push
pop
mov
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
lret
cmp
jno
out
fldl
imul
xchg
and
cmp
imul
sti
shr
lds
jl
testb
sahf
ret
out
add
sbb
push
sub
lret
mov
jp
stos
xchg
jb
out
jl
pop
xchg
pusha
cld
add
mov
mov
sbb
pop
fisttps
jne
xor
cld
loope
das
add
push
inc
adc
jge
addb
loopne
loope
icebp
mov
dec
cmpsb
pop
in
pop
jb
int3
dec
jno
js
push
mov
popf
fisubl
adcb
inc
jae
and
mov
and
adc
jae
mov
ds
aaa
int3
testb
adc
das
mov
push
rorl
add
inc
mov
icebp
inc
cltd
inc
daa
xor
loopne
or
sbb
adc
ljmp
test
jmp
or
mov
je
xor
xchg
sub
inc
jg
push
lods
cmp
in
mov
pop
ja
daa
jne
mov
loopne
mov
jl
sbbl
enter
ds
pop
mov
cld
mov
sbb
mov
jne
test
leave
fnstcw
test
push
push
fs
xchg
sub
cmp
arpl
stos
repz
jge
cs
cli
inc
mov
aaa
out
xchg
icebp
pop
outsl
xor
lods
push
shrb
jmp
rcrb
sub
outsb
imul
push
inc
lea
and
imul
fisttpll
push
adc
cltd
and
adc
fsts
jo
inc
lcall
cmp
sbb
jae
ret
ljmp
push
leave
xchg
sbb
cwtl
push
inc
push
rep
inc
mov
lock
out
xchg
movl
fcompl
and
movsb
fsts
out
in
add
mov
dec
push
jno
cmp
dec
push
js
cmp
xor
jg
mov
cmp
xor
aam
mov
xor
cmpsb
loopne
or
stc
rcll
mov
in
add
fnsave
fdivs
inc
and
rcll
fstps
or
rcll
mov
pop
mov
fsubrs
xchg
add
inc
repz
dec
ret
jle
ret
mov
bound
jae
lock
push
and
out
mov
hlt
lds
dec
adc
push
in
or
imul
jbe
xchg
cltd
testl
push
xor
outsl
icebp
lea
rol
sbb
test
and
loopne
jae
arpl
mov
scas
and
mov
pop
xchg
xchg
and
or
sbb
aaa
cli
rcll
sub
ss
cwtl
sbb
push
fwait
add
jp
cwtl
cmp
cmp
fdivrs
jae
ss
les
dec
iret
inc
cmpsb
and
jmp
imul
add
xor
or
out
lea
xor
clc
lret
lods
lret
fimuls
in
mov
insb
add
mov
mov
jnp
ljmp
sti
jmp
repnz
pusha
out
fwait
lea
aas
pop
pop
mov
inc
push
insl
mov
xor
movsl
test
sub
jecxz
push
scas
loopne
xlat
and
les
push
out
ja
cmp
pop
icebp
sub
and
pop
cmc
pop
sub
ret
push
mov
bound
lods
mov
mov
test
insb
fwait
sbb
adc
gs
mov
mov
hlt
jno
jl
jae
jle
sub
add
ds
cmp
push
pop
jge
mov
mov
sub
push
pop
loop
imul
sbb
pushf
xlat
pop
or
loopne
add
imull
mov
cwtl
cs
mov
orb
aad
sub
mov
ret
loope
out
mov
in
repnz
lock
fldenv
sbb
or
fdivl
cmpsb
adc
sbb
mov
loopne
in
aad
sub
out
sub
sbb
imul
or
mov
mov
sbb
and
adc
pop
dec
ficoms
lods
das
imul
mov
inc
int
icebp
jl
push
rcl
inc
iret
jb
ret
cmpsb
pop
bound
adc
and
es
xchg
mov
mov
sbb
pop
xchg
ret
sbb
mov
cwtl
sbb
xor
xchg
cli
iret
add
aas
xor
lret
jg
imul
movsl
inc
lcall
gs
mov
fs
movaps
sbb
loop
sub
lods
sub
sub
rorl
test
pop
aas
in
mov
loopne
movsb
ds
push
or
push
gs
sub
fimull
or
add
dec
xchg
aad
in
jb
and
hlt
inc
jnp
xchg
hlt
sarb
movsb
les
pop
and
mov
and
xchg
dec
mov
push
shl
adc
out
test
inc
test
mov
shll
cld
lds
xor
in
cwtl
mov
dec
repz
test
push
shll
xchg
fcomps
loop
nop
int
in
cltd
inc
lods
cmp
pop
negb
fcoml
jmp
imul
jbe
sub
sbb
jge
add
popf
aad
gs
stc
ja
mov
dec
int3
ret
and
jp
test
jno
and
xchg
filds
std
xor
pop
add
sub
fists
cmp
inc
iret
mov
and
popaw
inc
push
shrl
and
loopne
out
jae
insl
jmp
inc
xorl
fdivrp
add
cmc
mov
jg
fnsave
add
divl
lds
clc
mov
sub
pop
mov
ljmp
loopne
arpl
mov
es
jmp
adc
in
mov
imul
mov
cmc
lahf
jp
outsl
jnp
insl
push
cmp
movsb
das
adc
xchg
and
jo
icebp
outsl
inc
gs
sbb
sti
ss
dec
fisubrl
push
add
dec
pop
xor
aad
mov
or
in
bound
pusha
sub
pusha
stc
and
inc
cmp
push
sub
jb
loope
pop
jno
pushf
push
pop
xchg
jl
mov
add
imul
inc
add
pop
shl
mov
sbb
push
and
pop
sbb
loop
negl
adc
mov
icebp
jl
xchg
push
je
outsl
lea
aad
and
and
jl
push
bound
mov
imul
popf
pop
rclb
orl
popa
pop
or
inc
imul
ret
das
sbb
outsb
adc
add
xchg
movl
xchg
gs
in
xchg
mov
cltd
mov
push
push
inc
xor
std
addr16
mov
movsl
repz
xchg
call
scas
and
or
sub
stc
iret
fidivrs
scas
pop
push
mov
jns
or
aaa
in
xchg
dec
add
notl
xchg
mov
xchg
cmp
xor
mov
adc
mov
dec
mov
xchg
xor
cltd
add
jb
push
inc
add
sbb
loop
jae
sti
mov
pop
stc
imul
mov
data16
in
stos
scas
xor
inc
stos
mov
imul
jns
pop
ds
movsl
scas
in
jbe
add
adc
jne
inc
out
filds
sub
arpl
sbb
popf
loope
popf
in
or
sbb
stos
into
xchg
das
dec
inc
dec
loopne
sub
idivb
ror
xchg
sbb
mov
sbb
sub
in
and
jecxz
adc
nop
cltd
mov
hlt
fdivl
les
mov
push
push
mov
out
std
and
ss
cli
sbb
mov
pop
jnp
inc
jmp
rcrb
jnp
sub
adc
daa
iret
mov
cs
push
das
jp
enter
push
inc
and
xlat
adc
and
int3
insb
and
btc
loope
dec
sahf
inc
cmpsl
and
iret
and
cmp
pop
mov
cmpsl
sbb
mov
jnp
fsubs
decb
addr16
cmp
and
xor
jno
or
jbe
test
insl
sbbb
pop
aas
xchg
ficompl
movsb
and
inc
mov
lcall
mov
lcall
outsl
push
in
jmp
add
xchg
outsb
cmp
push
cmc
fwait
inc
insb
lahf
mov
jg
jg
rclb
mov
ret
loope
test
mov
jmp
loopne
jmp
lods
cmpsb
pop
mov
jae
lds
push
nop
and
in
sub
enter
int3
fldcw
or
shlb
dec
orb
cli
jle
in
and
fs
dec
lock
shll
nop
out
sarb
dec
daa
jbe
daa
mov
add
mov
xchg
jmp
cmovae
int3
push
add
int
in
fistl
inc
pop
xchg
es
mov
push
test
outsb
movsb
scas
cs
in
mov
cmp
popa
sbb
adc
xor
pop
or
push
push
call
mov
mov
cmp
je
fldl
xchg
push
mov
push
dec
mov
add
lea
pusha
push
mov
pop
push
cmp
mov
stc
outsl
imul
add
push
push
mov
insb
adc
cmc
push
mov
mov
mov
cmp
aad
push
out
sub
mov
mov
jns
in
jbe
outsl
inc
test
lock
aam
and
push
lods
out
ljmp
and
scas
loopne
scas
andb
cmpsl
sub
or
cmp
xor
or
dec
jecxz
xchg
jae
push
add
out
xchg
or
mov
lea
mov
or
iret
inc
out
jne
ret
fidivl
dec
pushf
or
test
daa
adc
mov
or
fs
pop
or
sar
and
add
inc
mov
cmc
ret
push
dec
out
sbb
lods
adc
sub
mov
dec
push
lahf
push
lds
daa
mov
inc
push
cmpsb
jns
xor
fcoms
out
pop
fistpl
pop
or
fnsave
jne
repz
adc
sub
fidivs
xor
xchg
outsl
call
pop
movsb
test
cmc
and
sbb
add
or
sti
fmuls
pop
inc
add
into
daa
mov
push
aaa
mov
mov
pop
sbb
sub
in
pop
cmc
push
xor
adc
mov
in
push
daa
fsts
in
out
cli
icebp
aaa
xor
out
xchg
jmp
clc
std
and
mov
nop
cmc
fiadds
push
xor
in
inc
ret
sarb
mov
pop
imul
sbbl
out
and
inc
fsubs
hlt
sub
dec
push
push
es
mov
cli
mov
xchg
fmuls
scas
cmp
loop
dec
mov
cli
adc
mov
or
daa
or
int
pop
sub
cwtl
cmp
fisttpl
arpl
pop
addr16
outsb
test
insl
mov
xchg
data16
sub
xchg
fdivrl
xchg
pop
jle
mov
ret
rorl
repnz
xchg
jg
jne
push
ret
jnp
add
inc
fdivr
cmp
or
data16
sti
jae
push
xchg
test
dec
cmp
pop
jecxz
sti
cmpsl
repnz
sbb
inc
sbb
call
outsl
and
loop
xchg
xchg
xor
jmp
bound
inc
inc
in
push
into
aas
in
push
lock
mov
cmpsl
andb
and
insb
jnp
fucomi
mov
dec
dec
adc
std
int3
inc
sub
inc
ss
inc
call
push
repz
xlat
jle
xchg
jbe
jno
cmp
addl
repz
mov
es
jae
ss
mov
mov
jge
mov
cld
jecxz
or
clc
xchg
or
pop
xlat
rcll
xor
out
mov
lods
add
sahf
leave
push
jmp
ret
loope
lea
add
ret
add
cmpsl
dec
mov
sahf
mov
pop
stc
mov
dec
adc
int3
lret
adc
ljmp
out
lods
mov
ja
scas
aad
push
shl
sar
loop
call
shll
lods
je
mov
xchg
iret
pop
outsl
xorl
jnp
mov
push
je
sbb
mov
mov
mov
clc
popf
mov
jp
jle
pushf
lahf
out
jae
sahf
push
fisttpll
stos
and
adc
adc
les
pop
and
lahf
mov
sub
adc
jb
jge
pushl
sub
arpl
pop
scas
pop
in
inc
pusha
outsl
or
popf
jae
cmpsb
imul
or
pusha
or
and
stos
xor
dec
in
mov
fistpl
pop
mov
inc
cltd
sub
mov
push
idivb
in
fimull
leave
add
mov
in
in
stos
lret
sub
movsl
sarb
push
movsb
rcrb
sbb
or
loopne
mov
sub
loope
mov
stc
lcall
iret
test
jmp
mov
sahf
test
rcrb
pop
icebp
add
add
or
add
mov
push
pop
cmc
push
xchg
or
and
inc
mov
test
xchg
iret
lret
ljmp
jl
sbb
cli
push
xchg
mov
scas
inc
lock
inc
add
mov
inc
xor
bound
data16
sub
lods
notrack
je
and
jl
inc
mov
mov
loope
decl
or
stc
insl
aad
dec
inc
iret
cmp
add
jnp
loop
jg
ljmp
cmp
mov
xor
movsl
adc
divl
out
inc
xchg
mulb
outsl
cmp
bound
sbb
pop
jne
push
fidivl
insl
fmul
and
mov
loope
je
push
inc
lods
pop
pop
xor
xor
push
pop
push
cmp
xor
out
inc
cwtl
sbb
mov
xchg
loopne
fnstcw
dec
mov
std
cmp
mov
push
inc
xchg
xchg
push
fucomp
mov
insl
dec
mov
lods
scas
lods
ficoml
aam
lods
cld
pop
out
adc
mov
mov
ret
aad
mov
imul
mov
nop
or
aaa
inc
ret
push
iret
pop
cmp
pusha
pop
test
mov
mov
insb
xchg
pop
jne
cmp
and
cs
shlb
sbb
scas
sbb
xchg
cmp
mov
in
mov
testl
and
icebp
mov
bound
mov
ret
mov
push
push
lret
test
lret
stc
sahf
scas
sti
fcompl
sahf
lsl
adc
test
mov
xchg
jnp
add
adc
jbe
push
lret
add
fidivrs
repnz
iret
test
and
lods
mov
scas
pop
divl
xchg
mov
push
pop
inc
loopne
mov
mov
ficomps
sub
jg
cltd
negl
add
mov
xchg
cltd
dec
mov
inc
adc
xchg
movl
xchg
sbb
jle
out
adc
lcall
xlat
out
and
xchg
cmc
lock
jge
orb
xchg
pop
xor
roll
rdmsr
xor
inc
mov
stos
loopne
push
sbb
xchg
clc
pop
scas
cmp
inc
add
jl
jne
push
dec
jns
incl
xchg
add
sahf
insl
scas
push
addl
mov
aam
imul
cltd
xchg
adc
out
fiaddl
mov
push
test
punpcklbw
dec
sarl
mov
cmpsb
jp
adc
mov
cs
adc
cmp
fdivrs
sbb
rcr
sbb
or
pop
cmp
fsubrs
lcall
jmp
lret
jno
in
mov
cmp
cmp
mov
sbb
xchg
lods
repz
lret
jecxz
xchg
dec
cltd
ret
aas
jno
arpl
int3
aaa
leave
lret
mov
dec
mov
xor
jnp
dec
pop
stc
xor
sbb
jns
or
pop
fisubs
mov
das
ljmp
shlb
dec
clc
xor
rorb
adc
sbb
push
ror
inc
clc
andl
out
test
and
sarl
push
movsb
inc
sbb
fldcw
loopne
push
jecxz
push
inc
lret
mov
es
insl
add
fimuls
lcall
test
xchg
lahf
out
pop
xor
xchg
xchg
stc
or
inc
jne
sub
insl
jp
aas
out
out
cwtl
sbbb
daa
sbb
xchg
xchg
leave
xor
xchg
xchg
and
shl
add
movsb
cmc
in
js
adc
adc
das
scas
and
sbb
aam
hlt
lea
dec
fidivrl
inc
lock
dec
sti
and
ficoms
idivl
jae
dec
lret
xor
movsb
mov
inc
cmp
adc
xlat
out
mov
outsl
and
pop
js
ljmp
fsubl
jb
mov
inc
sahf
xchg
push
xor
xchg
aam
fwait
xchg
push
mov
mov
sbb
mov
xor
xchg
leave
popa
fwait
dec
and
pop
setle
mov
pop
cmp
sub
add
mov
fsts
or
jbe
pop
push
push
mov
fwait
mov
or
vpaddusb
scas
cmc
xchg
sub
movsb
jl
inc
jae
adc
adcl
mov
insb
mov
pop
out
in
repnz
mov
das
fistpll
dec
ja
nop
xchg
cmp
cmp
test
pop
outsb
jbe
push
pop
sti
inc
pushf
jae
js
ds
jge
shlb
call
mov
pop
outsb
jb
mov
push
ret
mov
cli
adc
hlt
xor
xor
mov
inc
pop
xor
out
scas
lods
lods
aaa
mov
das
push
clc
mov
jmp
loop
jns
les
les
or
push
inc
jne
sbb
pop
push
mov
movsl
cmc
loopne
divb
setg
push
in
ret
es
and
cmp
out
add
adc
sbb
cmp
pop
and
jecxz
xor
stos
hlt
xchg
lock
and
jecxz
jecxz
adc
hlt
movsl
int3
sub
or
ds
ret
inc
push
addr16
imul
xchg
mov
add
cs
push
gs
xchg
pop
mov
cli
rcrl
lahf
std
mov
mov
jae
inc
jle
rcrl
rcr
lahf
adc
mov
in
movsb
iret
arpl
icebp
mov
xor
lahf
imul
test
and
mov
pop
push
pop
inc
sub
mov
lahf
push
add
aad
or
lods
pop
add
cmp
stos
pop
push
pop
daa
stc
mov
in
cltd
pop
pop
pop
mov
pop
mov
and
mov
call
cmp
movsl
jnp
mov
push
repz
in
pop
mov
jg
and
xchg
xchg
xor
sbb
mov
mov
and
inc
cmp
xchg
shlb
jg
fs
pop
lret
push
mov
cmp
in
sub
mov
jns
out
push
jp
push
icebp
in
sub
shlb
mov
cld
mov
push
test
movsl
or
cld
xchg
shlb
jnp
lock
int
addr16
test
sbb
xor
lock
fwait
into
push
lret
stos
jecxz
pop
lret
dec
test
push
lret
dec
ret
lret
insl
pop
adc
jecxz
aad
subl
fstps
insl
ljmp
popa
add
scas
roll
xlat
fs
fsubrs
inc
cs
rol
cmp
cltd
repz
js
push
push
aad
push
enter
xchg
repz
push
sbb
sti
pop
in
pop
inc
xchg
sti
enter
hlt
or
fwait
sub
and
std
push
push
or
push
or
adc
mov
pusha
out
ret
jecxz
mov
mov
xchg
negb
pop
rcrb
xchg
daa
loope
jne
jmp
inc
fildl
push
xchg
lock
xor
ljmp
sub
inc
outsb
ja
jnp
xor
lcall
inc
fcomi
shl
sbbl
mov
mov
sub
js
pop
fisttpll
in
test
mov
pop
pop
and
jae
pop
out
pusha
add
add
pushf
js
movsl
sbb
fiadds
xchg
dec
cmp
adc
lods
xor
mov
xor
xchg
pop
push
mov
add
push
mov
xchg
push
int
push
cmpsb
xor
sti
pusha
iret
mov
jle
pop
shlb
and
cmp
shl
dec
data16
stos
inc
fildll
int3
in
ret
xor
ds
sub
data16
test
xchg
mov
daa
xor
rol
mov
and
imul
jo
daa
mov
xchg
xor
fcmove
movsl
push
mov
and
jmp
out
sbb
sbb
ret
dec
out
notb
loopne
ret
inc
loope
roll
cmpl
xor
lods
jmp
add
aam
daa
push
rcrl
popa
jecxz
xchg
shll
sbb
cs
fwait
dec
ss
loopne
sub
pop
push
out
sub
dec
roll
pop
fbld
cmp
fnsave
xchg
add
ret
popf
rol
fs
mov
sub
mov
gs
rclb
pop
daa
negb
mov
xlat
or
sub
lcall
fnsave
pop
xor
push
loop
aaa
inc
adc
lds
xchg
cwtl
inc
hlt
and
cmp
sbb
push
xor
lea
mov
lea
rol
ja
mov
rol
mov
rol
int3
aad
push
imul
lods
jae
mov
xchg
sarl
jb
or
ret
mov
mov
js
ret
mov
jnp
aad
sbb
mov
hlt
addr16
inc
xchg
insl
arpl
ffree
mov
sbb
xchg
jbe
xchg
jp
fsubl
inc
aad
mov
xchg
sbb
mov
outsb
fwait
cltd
fnstenv
repnz
cmc
jnp
sbb
mov
sub
xchg
insl
mov
adc
jae
cmp
pop
mov
inc
add
mov
test
pop
push
lret
std
std
into
cmpsl
add
insb
testb
adc
addr16
std
or
es
push
and
ds
rcl
mov
xor
mov
and
mov
push
fisubrs
pop
aad
sbb
xchg
test
sub
sti
ja
jl
jns
add
mov
lcall
adc
cltd
cmpsb
repnz
movsl
clc
sub
or
bound
js
movsb
dec
dec
push
inc
or
mov
xchg
and
nop
sbb
mov
cmp
repnz
dec
xchg
lret
mov
fistps
push
aam
mov
mov
divl
insb
mov
stos
xor
rorb
mov
cmp
repz
mov
xchg
cvtps2pd
xchg
sbb
enter
xor
cs
mov
jg
jmp
repz
push
addr16
aad
jge
xchg
mov
clc
push
pop
test
daa
push
and
add
outsl
sarb
das
pusha
lock
mov
xlat
inc
out
icebp
in
lds
test
ret
mov
or
shll
xchg
or
aad
mov
push
inc
out
and
push
mov
push
fists
xor
adc
cmpsb
jmp
and
sti
leave
jns
inc
xor
cwtl
mov
cmp
fwait
sbb
shll
add
idivb
pop
sbb
mov
pop
or
daa
pop
xor
add
insb
sub
ljmp
js
adc
aam
je
mov
mov
dec
sbb
pop
sub
sbb
ljmp
ret
dec
sub
orb
mov
lock
adc
add
inc
lods
lods
fcmovnb
in
sub
mov
sbb
mov
les
insl
inc
stos
mov
sbb
stc
test
stos
push
add
lahf
subb
outsb
cmp
pushf
out
sbb
ret
xchg
sub
ret
cmp
mov
dec
xlat
call
mov
outsl
xor
in
test
sub
test
sti
out
mov
adc
push
into
pusha
adc
outsb
xor
xor
push
lahf
adc
and
test
stos
push
pushf
movsb
or
mov
int3
imul
mov
push
push
lock
sub
push
popf
sti
stos
iret
cltd
mov
sub
sahf
into
add
sub
arpl
cmp
and
mov
or
pop
xchg
cmc
insl
push
iret
inc
fwait
push
xlat
xchg
popa
jmp
adc
xchg
insl
aad
cmpsl
ror
mov
mov
stc
std
jmp
xchg
lods
mov
test
ret
push
fcomps
jle
in
outsl
mov
insb
push
shll
cmp
sub
mov
popf
add
push
mov
ljmp
push
sbb
xchg
into
jno
jns
iret
jge
push
insb
stc
shll
repz
in
pop
fbstp
or
outsl
add
push
push
push
push
lods
dec
cli
daa
mov
sub
clc
lcall
dec
pop
sub
std
outsb
push
leave
dec
dec
xor
repz
push
pop
jno
aam
leave
cmp
cmpsl
rol
xor
or
pop
pusha
cmp
nop
jb
call
lea
add
mov
repnz
mov
push
stos
mov
jno
push
test
xchg
out
inc
dec
repnz
or
sbb
jecxz
and
fdivs
jno
cmp
in
in
jg
int
push
imul
mov
pop
stc
adc
loope
testb
mov
dec
into
sahf
xchg
inc
popa
jns
mul
ja
mov
int3
sarb
cltd
js
cmp
add
mov
fistl
and
and
stos
movsb
test
pop
test
mov
sti
mov
in
inc
adc
jle
stos
sahf
sahf
out
jp
mov
lock
and
test
inc
lret
and
aad
sahf
shlb
push
aaa
jle
mov
sbb
fiadds
sbb
cmpsl
arpl
and
or
in
sbb
and
pop
dec
fwait
outsb
or
mov
cld
pop
and
dec
imul
cvtdq2ps
sahf
sbb
pushw
dec
ljmp
sti
push
xchg
cmp
je
bound
lds
scas
inc
add
mov
inc
or
cld
aad
ss
out
out
into
lret
pop
mov
cmp
movsb
jno
fldl
lds
cwtl
lcall
jge
jnp
mov
xchg
or
cltd
insb
jp
addb
pop
inc
inc
jbe
jnp
fsubs
cmp
fisubrs
dec
popa
cld
lods
push
insl
je
jne
popf
push
in
dec
or
mov
push
call
inc
icebp
repz
sbb
jmp
add
mov
mov
mov
rcll
lret
mov
mov
adc
int
pop
jno
out
subb
jge
xor
lds
jno
xchg
push
out
xor
push
ss
into
cld
mov
sub
ror
popa
loopne
jle
push
imul
mov
sbbl
xchg
scas
ljmp
sahf
inc
shrl
popa
ds
xchg
enter
jmp
inc
xchg
out
gs
jno
xchg
jg
sub
sti
mov
mov
xchg
fs
push
xchg
cld
cmp
cli
out
sub
jb
push
jp
aaa
stc
push
and
lret
nop
and
das
push
sahf
lret
sbb
int3
mov
cmp
cmp
inc
xchg
aas
and
ret
inc
loope
jns
mov
xor
add
sbb
mov
aad
adc
fwait
lcall
in
push
mov
pop
icebp
outsl
cwtl
lods
loopne
mov
in
xor
mov
jmp
cmp
adc
push
test
push
mov
xchg
pusha
mov
xchg
and
and
adc
enter
xchg
pop
sbb
mov
shll
mov
and
xor
inc
imul
iret
out
imul
jo
in
cmpsb
sbb
ljmp
push
inc
add
mov
push
sub
sti
stc
movsb
jecxz
adc
mov
mov
xchg
or
cli
push
mov
or
out
jb
push
js
sbb
inc
mov
cmp
dec
out
ja
xchg
sbb
xlat
cmp
adc
hlt
xchg
xchg
fs
das
mov
popa
mov
das
jbe
jb
mov
popa
cmp
aaa
sub
adc
mov
clc
insb
fmulp
ret
mov
xchg
repnz
pop
test
rcrl
push
out
cld
cmp
jg
iret
mov
mov
rolb
ret
sub
sub
inc
cmp
and
repnz
call
enter
xchg
jb
les
xchg
shlb
loop
sbb
test
out
adc
cmc
enter
mov
lahf
push
mov
jecxz
or
push
out
mov
mov
cmp
es
jo
and
and
and
dec
sbb
cmpsb
pusha
aam
inc
sbb
sar
call
gs
xor
sbb
sub
mov
lds
mov
cmpb
mov
dec
push
dec
xchg
adc
push
dec
das
jns
popf
shr
sbb
out
sub
pop
inc
enter
fwait
mov
mov
pop
imul
pushl
dec
dec
sub
addr16
out
insl
sub
ret
add
jns
sub
loopne
xchg
sub
mov
jnp
sub
loop
leave
or
push
inc
faddl
inc
imulb
mov
jmp
sub
and
out
fsubrs
xchg
stc
insb
inc
repnz
adc
inc
stc
enter
js
loope
sub
lods
cmp
shll
jle
and
leave
sti
nop
fdivrl
push
in
push
repz
add
insl
push
ljmp
imul
aas
mov
mov
or
cmp
cmp
mov
dec
sarb
xchg
push
fs
mov
add
xchg
fidivs
mov
ficoml
xchg
jle
je
stos
rclb
xor
pop
and
mov
inc
add
inc
pop
add
insl
mov
sti
xor
mov
es
bound
call
movb
push
test
fistpl
push
add
pop
pop
sub
push
dec
insb
inc
pop
sbb
or
or
sti
ja
cmp
fnstsw
lods
inc
adcl
mov
lea
and
mov
enter
and
cwtl
in
repz
js
enter
mov
xchg
push
call
ljmp
push
mov
push
outsl
daa
int3
push
dec
xlat
sti
dec
outsl
pop
fstl
pop
popf
pop
sbb
rcl
xor
and
loop
pop
jae
mov
gs
scas
mov
inc
test
add
shll
dec
es
fstpt
xchg
iret
mov
fisttpl
and
movsl
sbb
mov
das
add
jns
push
lods
fwait
add
mov
imull
xor
inc
movb
adc
rorl
cmc
scas
repz
and
cmp
pop
mov
push
cmc
stos
fimull
xor
pshufw
cmp
pop
add
or
adc
das
dec
inc
into
pop
shrl
out
pop
sub
inc
stos
outsb
jle
call
insb
jb,pt
out
mov
frstor
dec
std
scas
jl
imul
jne
subl
aaa
and
shrl
jbe
sbb
insl
jecxz
lret
sub
cmp
mov
jmp
pop
lea
arpl
into
sub
in
or
sub
mov
lods
in
sar
outsl
lods
dec
mov
fstpl
cmpsl
das
xor
inc
outsl
lret
mov
push
int
fistl
fimull
add
adc
inc
cmp
xor
ret
movsb
fiaddl
js
and
and
mov
lahf
xchg
and
xchg
cltd
mov
lods
loop
cmp
dec
outsl
push
mov
jle
sub
sti
sub
daa
pop
mov
inc
nop
aam
outsb
jo
add
lret
inc
inc
push
test
adc
xor
push
jmp
xor
sbb
rclb
cmc
mov
out
dec
das
arpl
xor
call
xor
stc
shrl
leave
jmp
std
dec
out
mov
adc
push
or
mov
dec
movsb
push
push
mov
fs
jl
push
loop
js
mov
mov
clc
lcall
fmuls
and
push
stos
ret
ss
lea
push
mov
mov
repz
cmp
sub
or
dec
aaa
push
xor
push
pop
movsb
cli
mov
scas
bnd
pusha
and
arpl
cli
cmp
dec
dec
mov
test
repnz
repz
mov
scas
add
adc
or
aad
in
pop
das
addb
sub
imul
sub
shr
fisubrs
lea
adc
dec
mov
repz
or
mov
lock
dec
sbb
mov
arpl
add
cmpsl
xchg
push
xchg
les
xor
mov
in
and
bound
push
mov
scas
jo
add
fidivl
mov
inc
mov
fnstcw
pop
jge
push
nop
stos
lock
ret
mov
xor
cli
js
jl
sahf
in
mov
ja
icebp
aaa
dec
dec
push
es
aas
aam
jmp
push
test
insl
pop
repz
int
in
bound
inc
cmp
das
xor
mov
dec
jo
fstpl
scas
cli
fimuls
rcl
insb
and
xchg
jmp
rol
mov
push
and
leave
jns
ds
mov
aaa
aad
insb
xchg
scas
cwtl
or
ljmp
xchg
fildll
jae
rol
xchg
ficompl
shlb
adc
push
push
subb
cs
dec
cmp
fldt
mov
or
xchg
sbb
lret
xchg
mov
mov
pushf
jo
push
daa
xchg
inc
adc
shll
sub
mov
lea
mov
popa
loopne
ficomps
les
test
das
int
push
lock
cmpsb
imul
movsb
cmp
sub
push
sahf
mov
jg
outsl
adc
es
inc
les
and
aam
scas
in
push
inc
sub
mov
xchg
aam
sub
out
fistps
add
loop
jle
mov
test
jg
test
imul
fwait
cli
popf
cmpsl
and
data16
jmp
sbb
in
jae
dec
aam
mov
pushf
inc
hlt
adc
push
mov
jae
ja,pn
ret
iret
int3
adc
mov
stos
xchg
mov
push
sub
fs
sub
loopne
es
scas
cwtl
xor
scas
jmp
or
sahf
das
sub
sub
sbbb
xor
outsb
push
jns
lds
xor
fwait
mov
sbb
lods
cltd
jne
inc
outsl
lret
repnz
xchg
stos
insl
stos
push
sub
insl
loop
out
fisubrs
mov
ds
lcall
into
dec
mov
fs
insl
arpl
jae
stos
pop
xchg
push
pop
ja
loop
jbe
or
stos
pop
lock
sbb
add
jmp
xchg
cmpsl
lock
xchg
mov
add
jmp
sahf
dec
mov
xor
or
movsb
out
mov
fwait
sbbb
cmpb
ljmp
mov
mov
inc
xchg
leave
inc
jle
gs
loope
movsl
jb
add
sbb
pop
pusha
es
mov
leave
test
xchg
jno
sub
loopne
mov
pop
jle
mov
pop
test
inc
cltd
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
enter
mov
