into
in
cli
xchg
jmp
repz
push
mov
inc
mov
sahf
ss
xchg
or
sub
sbb
sub
mov
out
pop
cmp
inc
and
sbb
imul
cmp
pop
lret
lret
movsb
sub
push
pop
int
sbb
add
mov
mov
xchg
cmp
getsec
or
jae
xchg
in
sbb
movsb
sbb
jecxz
lods
dec
pop
insb
gs
pop
ljmp
and
mov
push
getsec
insl
and
and
sti
in
scas
mov
idiv
loope
gs
mov
stos
icebp
adc
andb
mov
inc
fwait
loopne
out
push
and
sbb
and
ss
push
mov
leave
pop
xchg
inc
add
mov
int3
ljmp
idivl
stos
mov
lcall
jae
adc
inc
out
or
icebp
jp
data16
adc
clc
ss
fs
fistl
fmull
mov
in
cmpsl
pushf
push
out
es
ret
mov
push
movsb
mov
and
outsl
popf
inc
cmp
jle
es
jl
jmp
push
in
xor
lock
rcrl
adc
dec
add
push
hlt
insb
movsb
mov
push
jo
jmp
sahf
es
test
cltd
cmpsb
gs
sub
adc
xor
imul
cli
stos
loope
pop
sarl
xor
adc
loope
sub
js
enter
xchg
repnz
mov
call
jns
push
hlt
mov
std
push
or
push
mov
or
xchg
xchg
pop
mov
jmp
push
adc
and
xor
jae
push
sub
mov
or
mov
lds
negb
repnz
shrl
sbb
mov
mov
cwtl
pop
jge
jns
push
pushf
mov
mov
ret
test
fiaddl
or
aad
mov
lahf
dec
add
adc
repz
sub
mov
or
xchg
das
xchg
mov
jbe
sbb
sbb
xor
pop
pusha
xchg
sbb
pop
pop
mov
adc
push
fs
pop
rol
ss
mov
rcll
sti
pop
lret
and
xchg
lea
push
insl
sbb
popf
mov
sub
in
push
jno
xchg
repnz
mov
or
push
xor
push
fsubrs
sub
adc
or
lret
int3
adcl
jmp
int3
inc
cmp
les
shrb
pop
cmp
adc
das
lret
popa
push
add
adc
inc
mov
mov
jns
jbe
and
pop
jp
sub
pop
loop
popa
push
mov
pop
add
scas
loop
cmpb
sub
out
push
pop
jne
stos
ljmp
jmp
add
outsb
or
pop
roll
call
xchg
mov
gs
cld
les
xor
jmp
mov
popf
add
sbb
and
pop
fwait
mov
sub
jmp
pop
adc
jnp
popf
mov
call
inc
and
dec
outsb
mov
jb
inc
cmp
pop
in
and
sub
daa
jno
out
push
mov
inc
sbb
ljmp
mov
outsb
or
jmp
fcomp
pop
mov
out
or
cmpsb
mov
into
insl
rcrb
arpl
scas
mov
mov
jae
test
sbb
xor
fmull
jecxz
jge
hlt
add
sbb
mov
push
jmp
or
insl
xchg
in
jmp
jl
movsl
adc
sbb
adc
xchg
lods
or
das
lock
inc
lahf
mov
dec
dec
rorb
adc
ficompl
das
push
lods
jle
in
sub
jmp
or
or
movsl
fcoms
fsts
stos
ficomps
pop
xchg
push
jbe
push
je
mov
loope
out
lret
pop
lods
fisubrl
ds
lods
je
stos
movsbl
out
dec
inc
std
fistps
fbld
adc
ret
xor
ljmp
int
inc
pop
xor
mov
enter
push
add
push
add
addb
jns
inc
aam
lds
jae
pop
adc
mov
arpl
add
sahf
movsb
out
mov
jmp
orb
loopne
scas
xor
iret
xor
cltd
sbb
pop
push
pop
sbb
xchg
xor
pusha
ljmp
pop
ljmp
es
scas
add
push
in
inc
mov
je
sbb
loopne
jge
dec
sbb
scas
xor
sub
gs
out
addl
rorl
inc
movsb
dec
js
or
or
jl
ljmp
dec
mov
mov
mov
loop
and
stos
cs
cs
cmp
jno
pmaxub
add
adc
cmp
xchg
cmpsl
repnz
bound
ljmp
adc
shll
test
js
xlat
sbb
gs
icebp
xchg
cli
inc
mov
mov
jbe
dec
in
sahf
dec
push
pop
xlat
scas
imul
dec
lahf
push
and
jle
mov
jle
std
push
es
lods
adc
popf
out
lret
sub
ret
test
mov
pop
testl
dec
push
dec
out
jne
stc
aad
int3
iret
xor
movsl
push
dec
adc
add
inc
movsb
or
in
and
xor
call
push
push
mov
rdpmc
lret
xor
push
lret
dec
dec
hlt
rcrb
sub
out
call
jle
mov
xor
sbbl
je
lret
cmp
call
int3
cmp
xchg
fwait
int3
pushf
icebp
sbb
sbb
cmp
mov
mov
frstor
outsb
add
mov
shlb
dec
cmp
inc
or
faddl
test
and
adc
lock
push
jne
lahf
push
lret
mov
dec
mov
ret
fisubl
popf
dec
adc
mov
arpl
or
sbb
mov
out
jmp
push
aam
sbb
sub
in
dec
cmp
iret
shll
push
xchg
mov
outsl
cltd
push
pushf
popf
bound
xchg
loope
pop
int3
insb
mov
scas
jb
aas
call
or
dec
mov
cltd
fists
pop
xor
mov
sbb
mov
loope
sarl
mov
in
push
ret
xor
sbb
pop
dec
xchg
dec
mov
dec
mov
xchg
or
cmp
in
in
inc
cmpsl
shlb
int3
sti
movsl
mov
adc
adc
aaa
xor
fimull
call
cmp
movsb
sbb
mov
or
arpl
add
adc
push
mov
jge
out
xor
sbb
sarl
push
lahf
cmpl
std
cli
shrl
cmp
scas
out
push
pop
mov
jb
inc
mov
add
sub
fsub
sarb
popa
lcall
fcos
sub
add
fimull
push
in
add
addb
inc
daa
mov
and
pop
int3
xor
add
push
xor
xchg
xor
push
ja
cmp
mov
pushf
cmpsl
xor
cltd
adc
ds
sub
xlat
push
pop
mov
arpl
popf
test
inc
sahf
jne
mov
mov
movsl
pusha
pop
xlat
xor
mov
ret
jb
push
pushf
xchg
cmp
lret
pop
pop
aam
sub
sub
add
push
in
rclb
sbb
scas
inc
mov
out
push
cmpsl
push
mov
add
push
mov
ret
push
roll
loopne,pn
imul
sti
mov
push
ljmp
clc
sahf
mov
call
fwait
out
dec
xchg
sahf
leave
mov
mov
aam
mov
std
xchg
jle
enter
stos
or
cmp
rorl
rcrl
jmp
sub
cld
jne
and
mov
into
inc
in
lods
mov
push
xchg
jb
loope
cmp
ret
inc
stc
bswap
dec
movsl
fwait
arpl
dec
adc
dec
popa
mov
adc
andl
mov
out
rorb
lahf
dec
sub
inc
lahf
lret
sbbl
rolb
imul
dec
repnz
inc
test
or
or
pop
fbld
lock
and
shrb
mov
aam
aam
aas
popf
mov
imul
imul
enter
loopne
sarl
sub
adc
out
popa
inc
mov
lret
fdivrs
xlat
iret
idivl
sub
pushf
lret
testb
fsubs
add
les
cmp
subl
rorl
daa
arpl
push
nop
dec
mov
cmp
lret
inc
out
pop
test
pusha
inc
sbb
mov
pop
xchg
bound
adc
cmp
mov
pop
outsb
in
cmp
add
fcmovnbe
pop
dec
dec
jmp
push
std
add
out
pop
jmp
pop
call
out
and
mov
inc
mov
dec
insl
dec
xor
icebp
fists
or
mov
das
dec
cmp
mov
jecxz
movsl
push
or
daa
sbb
push
cmp
sbb
add
dec
pop
pop
xchg
stos
push
call
bnd
jp
mov
test
push
and
mov
pop
data16
dec
fimull
xchg
in
dec
rorb
cmp
sahf
add
mov
mov
pop
jg
jo
xor
xchg
jmp
aad
dec
icebp
add
stos
movsb
push
pop
je
hlt
arpl
jo
cltd
jecxz
popf
push
or
xchg
gs
pop
mov
pop
rclb
insb
repz
test
pop
inc
mov
push
xlat
cmp
xchg
pop
mov
lea
push
jne
push
adc
mov
pop
cs
or
dec
popa
fstpt
jo
cmp
cmp
pop
xor
xor
inc
mov
pop
leave
loopne
rolb
xchg
fs
mov
aaa
popf
push
xchg
arpl
jg
mov
roll
mov
mov
lcall
xchg
pop
mov
out
push
mov
fwait
stos
sbb
jne
mov
inc
sbb
mov
and
push
lret
les
sbb
fildl
aam
xlat
fidivrl
shll
jmp
add
cmpsb
jnp
pop
mov
sbb
pusha
test
inc
jns
mov
mov
jo
and
push
mov
mov
mov
mov
jp
cltd
cwtl
js
xchg
sbb
les
cli
aad
xchg
popa
imul
repnz
call
mov
in
pop
pop
inc
aad
cmp
lret
lahf
mov
push
inc
in
adc
mov
and
leave
cmp
fsubrl
dec
and
sub
xor
lcall
inc
push
std
fidivrs
dec
jno
loop
xor
mov
dec
rcrl
dec
sbb
mov
movsb
mov
jg
hlt
cmp
lret
sub
mov
dec
jno
mov
or
outsl
popl
enter
loopne
in
mov
mov
and
jg
push
mov
aas
adc
ret
or
xor
pushf
ja
stc
xor
mov
push
es
cltd
mov
dec
adc
mov
mov
xchg
fisubrs
inc
cmp
fimull
aad
mov
aas
cmpsl
and
xor
pop
xlat
xchg
loopne
push
ret
push
loope
pop
cmp
int3
sub
mov
sbb
lcall
mov
and
pop
inc
jge
ds
jecxz
cmp
sub
xchg
ss
cmp
and
ja
mov
dec
out
push
lahf
cs
stos
push
pop
pop
mov
test
packssdw
sbbb
repnz
jmp
push
mov
xchg
loope
mov
repnz
pusha
test
sbb
filds
je
jle
mov
push
imul
mov
or
cmp
mov
in
and
pushf
cmp
aam
jl
adc
dec
in
mov
pop
mov
push
aas
jl
dec
xchg
ja
pop
dec
sub
test
outsb
xchg
xchg
fcoms
es
in
test
dec
mov
rcrl
lods
scas
or
popf
dec
cmp
out
cmp
and
stos
pop
repnz
inc
popf
mov
leave
adc
stc
pop
cmp
loop
lods
pushf
jne
jae
popa
cmp
push
jmp
hlt
outsl
pop
xorl
out
xchg
or
push
push
push
pop
into
xchg
push
jns
lods
jecxz
gs
lahf
dec
mov
xchg
imul
data16
loop
aad
mov
jle
pop
pop
sti
aas
or
cmp
adc
clc
pop
insb
add
cmp
push
dec
iret
std
and
leave
pop
pop
jno
pop
cld
sbb
adc
ds
cmp
xchg
loopne
pop
sbb
xchg
lret
sbb
sub
mov
cmp
movsb
mov
negb
in
adc
cmp
inc
xchg
sbb
and
xlat
in
leave
jo
dec
int3
jae
push
cmp
push
lock
call
pop
inc
mov
mov
push
cli
cltd
adc
jmp
mov
and
cmp
or
je
aam
fdivrp
cmp
cmp
xlat
loope
and
sbb
test
or
fnsave
pop
pop
and
popa
inc
shrl
aam
ret
fs
jle
pop
sbb
mov
jns
adc
pushf
xchg
stos
push
out
sarb
mov
shrl
jle
mov
fadds
imul
jae
cmpb
xor
test
loope
xchg
bound
fnstcw
sbb
out
push
xor
frstor
repz
push
pop
mov
dec
pop
and
aaa
scas
mov
out
mov
add
mov
scas
fs
adc
ffree
mov
not
fcoms
sub
enter
cld
xor
mov
mov
lock
cmc
jl
aad
in
fistl
and
popf
add
jmp
sub
fwait
int
fimull
xor
sbb
push
test
repz
clc
icebp
mov
xchg
es
mov
hlt
jb
sbb
cli
xchg
pop
outsl
cmp
out
mul
shrl
adcb
lret
push
das
loop
dec
mov
sbb
pushf
mov
mov
sub
les
cmp
cmp
int
jb
into
fs
loopne
cmp
adc
data16
jno
cmpsl
scas
mov
arpl
je
insb
clc
cs
cltd
es
mov
int3
mov
sbb
jmp
jno
push
inc
out
jmp
fisttps
add
inc
lods
jle
pop
insb
lods
mulb
or
insl
clts
add
pop
ja
stos
jae
cs
std
aam
xor
jecxz
or
xchg
loope
and
mov
movsb
cmpsl
jmp
test
adc
pop
or
scas
es
push
xchg
insb
imul
mov
push
xchg
push
inc
mov
mov
jae
mov
adc
xor
bound
enter
push
fisubl
pop
cmc
push
movsl
in
stos
mov
xchg
ficomps
push
arpl
jge
add
sub
dec
into
shl
fadds
test
les
pusha
xor
cmp
pushf
decl
and
repnz
in
out
mov
pop
subl
fmuls
adc
push
sti
sahf
adc
add
aad
in
xlat
mov
cli
push
mov
cmpb
push
jo
push
adcb
push
stos
mov
push
xor
cs
fcomip
and
outsb
scas
adc
enter
test
call
ds
imul
stos
loopne
roll
mov
jmp
jb
je
loope
stc
int
subl
jb
jno
mov
mov
inc
sub
push
rclb
pushf
mov
out
or
pop
cmp
push
lret
cmpsl
xchg
sbb
fldl
mov
add
xchg
fsubrl
addb
scas
roll
lea
push
es
cld
imul
xchg
or
mov
lods
fs
cltd
pop
pop
mov
adc
loopne
mov
xchg
mov
out
jb
fnsave
cli
ret
pop
sub
or
mov
jmp
mov
sbb
xlat
adc
pop
pop
fadds
popf
sbb
in
out
mov
mov
adc
aaa
push
pextrw
dec
xchg
aad
jbe
and
push
push
mov
mov
shll
ja
insb
es
imul
adc
stos
sub
pop
push
xor
cltd
lret
inc
mov
add
sbb
xor
adc
sti
pusha
imul
fnstsw
sub
movsl
out
popa
out
xchg
jnp
gs
sets
cmpsl
jl
sub
stos
mov
es
insb
mov
lock
in
fidivrl
or
pop
add
je
call
push
cmp
and
push
imul
cmp
adcb
cmp
sti
lret
call
and
testb
ss
fdivrs
xchg
outsb
sub
jp
mov
lahf
int
ja
jg
int
xor
ret
lea
int3
lods
scas
rclb
fbld
cmp
dec
insl
xchg
pop
inc
ljmp
add
jnp
jno
sbb
xchg
das
sbb
in
jno
mov
add
js
into
sbb
cmpsl
test
int3
and
mov
xchg
or
fnsave
lret
adc
jmp
movsl
pop
xchg
mov
mov
iret
lcall
xchg
and
and
popa
sub
movsl
mov
out
push
cmp
dec
inc
adc
movsb
push
rorb
movsl
int3
repnz
and
xor
mov
pop
sub
sahf
leave
cs
xchg
cld
jmp
loope
dec
cmpsl
dec
adc
mov
stos
bound
ret
fisubl
adc
ja
or
lret
mov
push
icebp
jne
cmc
pop
add
mov
inc
data16
out
insl
xchg
sub
mov
ds
cmp
test
rolb
xchg
sub
add
cmp
lods
add
scas
and
inc
inc
dec
mov
das
jmp
hlt
out
or
fimuls
push
fdivl
xchg
addr16
adc
push
xchg
add
cs
fidivs
pop
sub
mov
sbb
xchg
mov
js
adc
inc
stos
test
inc
jbe
std
fdivl
cmp
repz
pop
leave
xor
out
pop
mov
mov
pop
add
fstl
adc
aaa
imul
mov
ret
outsl
adc
in
in
adc
mov
xor
xor
insl
rolb
lret
mov
iret
xchg
adc
xchg
dec
addl
jmp
mov
in
pop
inc
loopne
ret
or
sub
or
icebp
fcompl
push
add
push
iret
pop
loope
imul
dec
xor
add
popa
cmpsb
mov
add
sbb
cmp
push
inc
cld
out
jg
mov
decl
and
sti
out
ret
rcr
lea
mov
fs
imul
std
mov
repz
loopne
and
add
jo
ret
rorl
sbb
mov
xchg
sarb
cmpsl
subb
push
iret
mov
jecxz
ja
cmpsl
push
outsb
jl
sbb
in
repnz
std
pushf
cs
pop
hlt
jb
sub
jns
sub
filds
pop
mov
sbb
ret
sub
jge
mov
mov
fnstcw
push
lret
mov
lret
xchg
mov
test
enter
and
ljmp
pop
jb
inc
add
std
xor
push
faddl
push
shll
pop
stos
int3
subb
sti
jp
inc
fldlg2
cs
int
jp
mov
mov
daa
sub
and
imul
xor
enter
mov
jg
push
pop
push
pop
inc
add
aad
imul
inc
es
add
testl
xchg
inc
xorl
mov
mov
mov
add
inc
cmp
mov
pop
and
aam
mov
shrl
mov
inc
fimull
xchg
out
aam
mov
push
mov
lret
pop
mov
movsb
add
icebp
push
xor
into
jl
and
push
fsubrs
mov
xchg
rol
mov
add
and
pand
mov
sub
in
xlat
mov
mov
sbb
jbe
xlat
push
pop
aad
pop
test
hlt
mov
jno
mov
nop
mov
cmp
jno
into
sub
mov
pop
jecxz
or
jle
test
xor
mov
lds
xor
lret
rorb
mov
pop
stos
inc
inc
push
mov
aaa
insl
or
cmc
or
cwtl
fwait
xlat
mov
mov
sub
push
fnstenv
jnp
inc
sbb
mov
mov
lea
jo
pop
cld
stos
or
push
pusha
or
inc
test
xchg
jb
jp
movsl
cmp
lea
mov
mov
mov
pop
out
dec
ficomps
es
test
stos
push
movsl
sub
cmp
and
bound
or
lret
jmp
dec
cwtl
pop
inc
pop
rcll
jp
lds
outsl
pop
or
test
sbb
jle
mov
add
jecxz
addl
int3
push
mov
add
outsb
xchg
sbb
movsb
loope
loop
fldcw
jns
insb
mov
imul
pop
or
or
adc
icebp
aaa
aad
xor
sub
and
xorl
pop
jg
push
fists
adc
push
push
mov
in
imul
xchg
push
mov
int3
mov
xor
inc
int
xchg
addl
outsl
jb
loop
in
cld
sub
mov
dec
iret
daa
dec
mov
mov
je
inc
mov
or
scas
test
hlt
xchg
imul
xchg
inc
adc
mulb
into
ja
shll
mov
inc
sub
xor
mov
sub
aaa
jns
mov
xchg
or
add
jg
push
aaa
adc
dec
add
fisttps
mov
test
push
mov
leave
jecxz
mov
inc
adc
aam
sub
insb
push
cmpsl
jge
cwtl
out
mov
pop
scas
loopne
popa
movsb
lcall
roll
jno
mov
or
lahf
stos
inc
leave
jo
sbb
dec
ljmp
cli
insl
and
mov
insl
daa
outsl
scas
dec
or
loope
adc
and
out
int3
push
enter
das
pushf
mov
adc
pop
cltd
add
lcall
push
gs
mov
and
push
sti
dec
outsl
add
cmp
xchg
les
loopne
jge
aas
push
sti
test
mov
test
imul
mov
scas
mov
mov
addr16
adc
mov
mov
movsl
mov
int3
insl
movsb
push
out
and
sbb
into
xchg
int3
cltd
adc
add
into
roll
adc
insl
test
fcomip
push
adc
jne
xor
roll
sahf
pop
fistps
dec
out
rorl
aam
test
pop
inc
notl
cmp
std
mov
mov
fdivp
bound
movsl
orb
mov
outsb
in
cld
jecxz
pushf
mov
sti
ret
mov
push
jb
ljmp
mov
inc
cmpsl
subl
call
jo
xchg
cmpsb
nop
push
push
mov
pop
mov
mov
cmp
in
ja
inc
fcomp
push
testb
loope
xor
daa
repz
or
out
outsl
sub
arpl
int
int3
jo
mov
mov
pop
push
enter
xchg
outsb
fwait
push
xchg
xchg
mov
push
out
test
xchg
mov
jno
notl
test
lcall
imul
orb
xchg
inc
aam
stos
pop
dec
or
push
les
cs
add
dec
or
cld
lea
push
mov
or
dec
sti
insb
or
icebp
hlt
xor
cli
xchg
rcr
adc
lods
repnz
lcall
gs
scas
jg
pop
shrb
jns
sub
sar
jo
mov
test
add
fdivr
dec
fcomps
xchg
xor
and
test
mov
outsl
divl
push
or
jp
or
adc
loope
aaa
test
add
mul
insb
jns
add
mov
xchg
hlt
int
dec
cmpsb
dec
mov
add
lock
rclb
out
fistpll
cmp
and
mov
leave
cmp
adc
jmp
loopne
push
xorb
pushf
xchg
add
pop
pop
dec
mov
jp
ja
mull
ljmp
pop
xchg
push
lea
mov
nop
inc
leave
jnp
ds
ret
sub
adc
hlt
mov
dec
push
adc
push
aaa
xchg
push
sub
xchg
scas
fdivr
and
nop
rcrl
fildll
push
fimuls
pop
sti
push
scas
jle
lahf
dec
push
jb
and
scas
lret
test
pop
sbb
fdivrl
jae
add
inc
sub
push
inc
pop
sahf
push
adc
imul
mov
xchg
push
in
icebp
rcrl
xchg
inc
push
cmpsb
data16
test
roll
jle
loope
add
sbb
mov
xor
incb
push
adc
lret
or
or
jmp
sub
cld
or
pushf
add
pop
pusha
xlat
inc
jecxz
sub
rolb
xchg
jb
sar
dec
jne
xchg
rcrl
cmp
sti
pop
inc
jae
loop
jl
hlt
popf
imul
fs
lcall
test
outsl
into
push
rclb
mov
push
pop
xlat
xchg
xlat
mov
adc
mov
lret
inc
out
popw
leave
cmpb
lock
xchg
stc
mov
mov
jl
fcomip
mov
add
jnp
xchg
pop
mov
aam
rcll
repnz
bound
and
jbe
fisttps
mov
dec
pop
pop
sbb
ss
lea
setp
push
ja
fwait
imul
movsb
sahf
jnp
sbb
cmc
shrl
repnz
mov
mov
ret
or
xchg
out
mov
stos
xchg
pop
ljmp
cmpsl
mov
or
std
rcrl
clc
mov
insb
pop
inc
xchg
xorb
lods
adc
arpl
jp
or
mov
popf
sbb
and
enter
pop
rolb
loop
push
or
push
scas
js
sbbb
fisubs
cli
cmp
mov
ret
bsr
inc
adc
inc
lret
mov
xchg
insb
xor
mov
cmp
sahf
or
or
sti
push
in
dec
dec
filds
ds
cs
inc
sub
cmp
push
iret
jo
shrl
jbe
arpl
dec
mov
or
das
and
sahf
push
xchg
popf
mov
jb
mov
sub
movsl
mov
inc
in
lret
and
dec
inc
pop
cmp
xchg
aad
fldcw
cmp
and
and
jg
aas
cld
call
xlat
sub
cmp
ds
cmp
loopne
jmp
pop
mov
add
push
sahf
fsubl
mov
hlt
pop
aad
add
lock
imul
negb
push
or
lds
fsubs
jnp
xor
inc
jg
dec
cltd
movsl
clc
xor
jmp
mov
pop
sub
pop
mov
add
js
hlt
ja
jnp
push
push
cmp
lods
cltd
bound
jae
stc
add
sub
es
ds
jne
pop
addr16
jp
inc
clc
scas
mov
pop
sti
xor
lods
push
leave
add
loope
stos
out
or
inc
dec
into
pop
movsb
or
int
loopne
push
dec
fmul
and
pop
cmpsl
loopne
sub
in
leave
lret
ja
sub
lahf
push
jg
xor
xor
xchg
add
push
insl
sub
js
arpl
call
std
loope
mov
push
jnp
jmp
je
scas
pusha
loop
iret
cltd
out
ret
dec
call
pusha
xor
insb
cmpsb
pop
shll
loopne
adc
mov
jl
mov
outsb
xchg
orb
imul
nop
aas
jo
decb
xchg
in
dec
cmp
mov
addb
rcll
dec
jmp
jns
repnz
xchg
enter
adc
popf
filds
xchg
cmp
dec
int3
loope
jge
pop
enter
pop
mov
add
test
lea
push
js
stc
push
inc
mov
xlat
mov
es
enter
inc
cmpsl
jnp
jo
push
add
pop
int3
jg
jo
pushf
cmpsl
jbe
repz
jmp
fsubrl
in
pop
adc
out
add
scas
mov
mov
subl
cwtl
mov
sub
mov
jae
in
fimuls
mov
sbb
jbe
pusha
push
popf
dec
push
dec
add
bound
test
enter
adc
ja
push
addl
js
daa
jmp
dec
cs
dec
xlat
fisubs
sub
sbb
mov
inc
pop
and
or
lahf
mov
aam
add
dec
cmp
shll
jmp
mov
add
push
iret
mov
lods
cltd
test
imul
or
aas
int
push
xlat
ljmp
mov
pop
mov
insl
sbb
adcl
mov
bound
lret
jge
addr16
sahf
shrl
movsb
jge
daa
xor
mov
lds
mov
push
mov
loopne
mov
xchg
mov
bound
cmp
lret
jle
cmp
sbb
aam
mov
mov
lods
sbb
mov
cmp
sbb
ljmp
jne
jl
inc
popf
mov
pop
data16
jae
sbb
xchg
ret
cmp
cmpsl
inc
mov
sbb
inc
rorl
je
mov
xor
fstpl
adc
pop
scas
arpl
dec
and
push
or
inc
mov
xor
out
push
daa
cwtl
orl
pop
xor
sti
cmpsl
or
ljmp
cmp
pop
test
sub
and
clc
xor
pcmpeqb
lret
popf
into
mov
dec
cmp
dec
addb
inc
mov
xchg
sbb
outsb
xchg
rorb
sub
inc
sti
cmp
xchg
rcr
fmul
sub
push
sbb
mov
push
sti
xor
push
or
jbe
push
movsl
popa
call
rorl
jno
or
adc
je
and
lret
daa
sti
jo
xchg
jae
aam
das
and
jnp
add
xchg
mov
sbb
je
push
mov
mov
jle
aas
lret
jo
lock
bound
stc
stos
mov
sbb
lret
jmp
jecxz
jbe
std
push
imul
addr16
outsb
test
loop
sbb
xchg
jmp
iret
xor
popw
and
out
jns
push
mov
ret
mov
inc
out
dec
adc
sub
outsb
or
push
xor
icebp
fs
gs
gs
cmc
stos
jne
ret
mov
icebp
jmp
mov
push
mov
in
jle
jo
mov
ds
xlat
insb
add
xchg
adcl
call
jns
daa
out
xchg
or
xor
fwait
add
iret
nop
out
push
loopne
jnp
fisubrl
loope
xchg
adc
mov
adcb
scas
pop
push
int3
xchg
test
push
dec
bound
arpl
repz
jne
mov
jmp
enter
movsb
mov
gs
dec
push
sbb
cmc
cli
jns
add
add
scas
jg
sbb
push
mov
ds
jmp
xor
sbb
xchg
sub
aad
cmpsl
jp
push
jle
movsl
jp
xchg
ja
scas
pop
and
in
lods
out
ret
jmp
repnz
dec
xchg
jge
fsubs
fsts
int
push
je
pop
and
cwtl
mov
push
or
fsubs
mov
int3
iret
out
xor
dec
mov
aad
cmp
sbb
xchg
rcrb
nop
lret
repz
cmc
xchg
in
enter
sbb
cmp
xor
jmp
call
rclb
addb
les
mov
testl
xchg
and
hlt
pop
insb
fidivrs
mov
mov
add
rorb
push
and
jg
sub
xchg
xchg
in
negl
js
push
and
dec
loop
cmpsl
jmp
cmc
jl
mov
lret
mov
mov
insb
mov
fists
shll
sbb
lea
in
jns
sub
pop
dec
dec
mov
fcomi
andb
cs
iret
and
test
add
imul
inc
fiaddl
pop
push
in
cmp
fwait
pop
insb
add
xchg
sbb
sbb
dec
iret
jmp
stos
mov
test
aam
add
int
xchg
xor
out
stc
or
das
sub
jns
jle
pop
cmp
sbb
push
in
mov
push
inc
int
pop
cltd
faddp
adc
pusha
in
scas
and
or
jns
lds
push
in
pop
loope
out
pop
fadd
cmp
jno
aas
sti
xor
lds
or
inc
pop
or
inc
popa
inc
mov
sbb
stc
int
repz
and
mov
cmp
test
aaa
mov
loope
xor
mov
mov
leave
int3
sbb
lds
mov
jg
mov
cltd
mov
insb
out
lods
arpl
push
mov
neg
cltd
repnz
adc
decb
pop
push
shl
in
cli
rol
sbb
jo
arpl
fs
pop
xchg
loop
decb
std
data16
out
mov
lods
mov
mov
mov
aam
test
stos
jmp
outsl
loop
pop
adc
sbb
mov
cmc
movsb
xor
shrl
jo
cmpsl
fisttps
mov
loopne
ljmp
jne
loopne
or
cmp
aas
pop
gs
jb
inc
imul
sbb
lret
ja
mov
sub
dec
subl
pop
mov
xchg
mov
push
inc
fldt
ficoml
or
inc
arpl
xor
ss
mov
orb
sbb
lock
fcmovne
jnp
push
xchg
jno
fs
xchg
and
push
dec
fs
sbb
icebp
ljmp
jne
mov
push
shlb
out
cmp
ja
cmp
adc
std
popa
hlt
cmc
inc
test
decb
dec
cmpsb
jne
dec
shll
dec
and
dec
sbb
orb
xchg
insl
movsb
mov
sub
ss
cmp
xchg
and
dec
stos
sbb
ds
insl
insl
cmp
mov
rcrl
xlat
add
or
mov
cli
movsb
dec
pop
popf
sub
outsb
pop
fnstenv
dec
arpl
fs
mov
sbb
or
outsl
and
in
aad
push
fsubs
iret
out
in
mov
js
adc
out
sbb
loop
cs
push
lods
and
add
inc
xchg
dec
out
xchg
dec
adc
push
fs
es
add
cli
inc
stc
mov
add
xchg
and
addl
rclb
rolb
rcll
push
frstor
xchg
push
hlt
out
add
lods
mov
int
test
and
adc
mov
mov
cmc
mov
push
push
orb
push
int
subl
cmp
divb
fimull
add
adc
loopne
pop
add
dec
jmp
call
int3
dec
dec
testl
cli
insb
insb
or
in
adc
mov
push
sub
jno
out
ret
sbb
leave
stos
fnstcw
mov
addr16
mov
shl
aaa
dec
enter
add
ja
out
std
xor
nop
addr16
ja
or
jg
xor
inc
add
out
leave
stos
mov
push
mov
pop
aaa
mov
mov
data16
add
pop
mov
in
add
rolb
inc
stos
xchg
repz
cmc
mov
push
pop
jg
jno
rolb
mov
lods
cmp
scas
es
addl
fimuls
outsl
cmpsb
jmp
mov
push
mov
sahf
mov
xchg
mov
jg
adc
jbe
push
cmpsl
inc
hlt
nop
sub
hlt
repz
mov
push
xchg
loope
shll
loopne
push
add
insb
cmp
std
ficompl
addr16
sbb
addr16
test
mov
inc
jno
adc
adcl
addr16
sbb
mov
dec
mov
repnz
mov
lea
mov
mov
inc
xchg
arpl
jno
xor
movsb
lret
jp
cmp
into
pusha
sbb
std
popa
icebp
movsb
or
mov
mov
addr16
push
lcall
popa
clc
xchg
sbb
repnz
mov
xor
mov
fst
pop
mov
sti
or
nop
ret
mov
ret
pop
fwait
out
test
jae
aaa
jae
push
pop
mov
push
cwtl
popf
xchg
mov
xchg
stos
lcall
test
cmp
pop
push
mov
inc
repnz
cmp
iret
xchg
movsb
call
xchg
jnp
sub
mov
imul
enter
mov
push
shlb
xchg
cmp
xchg
cmp
xor
aas
mov
mov
ja
addb
pop
xor
sahf
or
in
jo
push
in
mov
dec
mov
mov
dec
pop
es
add
xchg
push
sub
mov
aas
stc
inc
pop
adc
lcall
orl
push
test
xor
shrb
loope
mov
pop
cmp
cmp
loope
dec
mov
cmc
cmp
pop
rcll
lcall
jecxz
add
xchg
cmpsl
mov
iret
xor
lcall
cmp
fstps
aaa
mov
in
mov
mov
mov
sbb
sbb
insl
push
outsl
xchg
lret
and
xorl
adc
mov
fisubs
pop
push
push
xor
ljmp
inc
fistps
cltd
rolb
inc
fs
cmpsl
sbb
sbb
xchg
in
scas
test
sbb
add
jmp
aaa
repnz
push
inc
imul
push
sbb
fists
icebp
xchg
dec
in
dec
jl
mov
scas
push
xchg
lods
xchg
in
popa
mov
push
arpl
sar
push
pusha
outsl
fdivrl
jmp
pop
jp
pop
cmpsl
xor
push
sub
mov
xor
mov
lea
fdiv
dec
lods
addr16
lcall
cmp
xchg
icebp
inc
cmp
pushf
push
dec
mov
cmp
mov
orl
das
dec
jo
out
popf
jge,pn
mov
dec
jne
rolb
subl
data16
mov
mull
into
ret
adc
clc
pop
daa
daa
in
movsl
aas
dec
int
out
mov
adc
filds
cmp
xor
jo
mov
add
push
ja
xor
ljmp
ret
or
dec
and
lods
and
aad
stos
fimull
add
push
jae
add
ror
enter
movsb
sub
dec
xor
loop
out
and
fwait
test
xor
push
mov
jmp
fsubrp
inc
sub
aam
fstps
es
aaa
das
or
jae
sbb
int
and
mov
cmp
fsubr
mov
mov
jno
push
add
nop
shrl
jno
or
cmp
xchg
xchg
filds
fcom
sub
sub
xor
iret
aam
cld
push
mov
inc
mov
cmp
inc
lea
test
les
xchg
sarb
lock
pop
imul
push
mov
mov
mov
in
cmp
test
dec
fwait
insl
mov
xchg
and
outsl
stc
cltd
movups
enter
sub
sbb
pop
test
clc
dec
ret
push
movsl
jne
outsb
repnz
sysenter
adc
pushf
int3
xchg
xchg
pop
rorl
sbb
cltd
push
add
lahf
mov
mov
sbb
insl
lock
sub
adc
stos
lret
aas
push
mov
mov
outsb
icebp
inc
sbb
cs
and
xlat
mov
push
mov
pop
jecxz
or
daa
sbb
cmp
or
push
cmp
pop
add
dec
dec
jne
std
mov
push
rcrl
sub
call
mov
cld
lds
push
fisttpl
jmp
aas
icebp
push
cmp
add
movsl
pusha
gs
testb
enter
jg
out
or
pop
jmp
nop
adcb
and
mov
aam
pop
cvtpd2ps
dec
into
push
stc
mov
pop
inc
ss
stos
fwait
pusha
loopne
sub
push
inc
mov
mov
sbb
add
call
inc
sub
repz
xchg
shll
mov
inc
jmp
sub
add
in
jmp
cli
out
mov
pop
cld
mov
loopne
in
jge
xchg
das
insb
inc
inc
shl
dec
inc
sahf
add
clc
sub
getsec
jmp
xor
add
pop
imul
adc
pop
lcall
push
cwtl
mov
popa
sahf
mov
movsb
dec
js
mov
dec
leave
or
mov
mov
push
out
movsb
in
arpl
and
jno
dec
xlat
mov
rorb
movsl
mov
mov
outsb
push
inc
push
or
sbb
nop
fwait
jbe
rolb
xchg
cmp
mov
sbb
mov
imul
mov
jmp
dec
add
xor
outsb
ss
and
cwtl
imul
mov
aas
lea
jmp
out
test
enter
int3
mov
fimull
cmpl
dec
xchg
and
jne
mov
lcall
test
jl
dec
xchg
imul
inc
mov
lock
add
das
fmull
adc
cltd
fiaddl
cwtl
cmp
adc
mov
rorl
sbb
or
push
sbb
cltd
and
ja
ja
jle
xlat
mov
shll
sub
gs
sub
push
pop
mov
ret
dec
cld
stos
icebp
sbb
mov
loopne
push
test
mov
cmp
adc
add
adc
sbb
pop
je
lds
add
cmp
ljmp
mov
shlb
movsb
ret
mov
cmp
push
insl
in
fisttpll
call
test
lcall
dec
into
mov
ds
mov
or
or
mov
mov
xlat
bound
pop
lods
pop
inc
shrb
adc
sti
mov
cmpsl
sbb
add
lret
popf
jbe
movaps
or
pop
xchg
mov
cmp
adc
push
out
test
jp
cld
inc
sub
test
jbe
inc
rorb
subl
and
mov
push
fwait
imul
ret
mov
jl
fdivr
fcoml
sbb
das
pop
adc
nop
jo
mov
aaa
ljmp
aaa
aaa
sbb
mov
dec
ja
and
inc
pop
pop
xchg
leave
clc
jno
movsl
jb
fistl
mov
popf
lcall
and
rolb
push
nop
aaa
loopne
in
xor
dec
fsubrl
xchg
icebp
or
scas
dec
lret
stos
inc
xor
lahf
pusha
jg
adcb
push
adc
xor
and
es
pushl
ds
arpl
sar
outsl
loope
test
and
xchg
mov
out
movsb
in
mov
popf
movsl
test
cmp
xor
enter
jmp
or
clc
sbb
add
xchg
mov
repz
dec
jbe
pusha
sub
data16
les
pusha
popa
xor
lock
push
fdivrl
daa
add
dec
rcll
xchg
mov
sti
cmp
add
popf
lods
cld
cmc
or
cmp
bound
int
sar
es
scas
mov
shl
pop
cmpsb
lds
shll
sbb
pop
pop
out
mov
rorb
sub
add
add
sar
out
scas
inc
icebp
shrl
push
mov
std
adc
mov
cld
fldcw
dec
arpl
popl
sub
lahf
xchg
add
test
cmp
clc
jo
adc
or
aas
cmpsb
out
filds
popa
push
pop
fsubrl
call
repz
mov
sub
pop
push
xchg
adc
ss
out
loopne
mov
loope
mov
sub
adc
push
clc
jmp
jg
jne
adc
testb
lret
js
punpckldq
mov
mov
out
cmc
jnp
adc
jnp
sub
jge
and
xchg
test
sarb
push
popf
xchg
fdivrs
and
mov
test
pop
cmp
xchg
mov
movsl
lcall
loopne
testb
inc
test
pop
das
pop
daa
xor
sub
push
xor
push
fbstp
xor
fwait
mov
mov
mov
xor
xchg
popa
inc
cmp
in
cwtl
aad
insl
mov
mov
inc
cmp
jne
jge
push
or
lods
out
repz
and
or
adc
outsb
and
sahf
aaa
xor
fidivrl
fstl
and
loopne
stos
fcomp
push
into
xor
popf
test
add
mov
dec
aam
cmp
jns
cld
adc
mov
out
clc
mov
in
fisubs
xor
xchg
push
mov
mov
icebp
rorl
in
out
inc
test
popf
sub
xchg
aaa
daa
dec
jl
test
xchg
add
cmpsb
popa
xlat
jae
cmpsl
enter
subb
fnstenv
popf
xor
outsb
push
push
cltd
cmc
cmp
int
popf
inc
out
ss
pop
mov
pop
out
notb
fstps
cmpsb
sbb
fnstenv
pop
adc
mov
sub
sbb
or
jo
xchg
daa
xchg
adc
fwait
imul
inc
mov
movsb
or
test
dec
idiv
imul
or
jae
iret
push
and
inc
ja
xchg
or
mov
pop
jmp
jmp
sub
inc
push
dec
mov
sbb
xor
add
sahf
cltd
jnp
test
orb
mov
dec
inc
or
pop
lods
add
shrb
dec
mov
insb
scas
hlt
add
jbe
xor
sub
dec
cmp
out
jg
test
insl
sub
jecxz
std
cmpsb
test
stos
xchg
adc
xor
ret
ss
dec
shrb
loopne
sub
out
mov
push
notl
and
push
xchg
movsb
sbb
adc
pusha
enter
lock
mov
dec
jb
imul
pop
orb
dec
mov
fadds
ljmp
push
andl
mov
fistpl
outsb
iret
add
sbb
adc
sbbl
repnz
dec
xchg
movsb
pop
stos
scas
mov
addr16
sarb
xor
adc
push
loop
jmp
or
fstpl
sub
gs
loop
stos
lea
mov
lods
cmpsl
leave
mov
fwait
add
mov
adc
js
push
movsl
lret
incb
jnp
gs
int3
inc
mov
mov
and
or
push
jb
push
jp
or
ss
mov
push
adc
push
enter
dec
fwait
or
push
or
aas
sbb
loope
fiadds
pop
aas
gs
stos
test
mov
and
ja
outsl
and
xchg
shlb
popf
dec
test
pop
bound
repz
mov
in
sbb
stos
jg
std
leave
cld
sbb
mov
mov
mov
xor
push
je
nop
push
dec
jle
out
sbb
or
data16
sub
sti
aam
loope
fstl
add
jnp
dec
pop
ja
push
pop
cmp
push
es
je
mov
cmp
xchg
inc
sar
xchg
mov
clc
ss
imul
add
mov
xchg
adc
movsb
scas
push
mov
lods
aam
fs
stos
or
add
xor
xor
pop
add
fsub
mov
sbb
pop
and
pushf
pop
cmp
mov
in
mov
pop
or
enter
enter
add
addr16
lcall
jbe
lods
or
fs
mov
imul
fs
push
adc
dec
sbb
loop
dec
stc
mov
stos
mov
xor
push
push
int
xchg
stos
jbe
jl
add
dec
ret
dec
lcall
iret
bswap
push
or
push
jns
add
pop
adc
lock
ret
js
sub
sub
pop
out
test
enter
xchg
or
or
xor
les
leave
in
mov
inc
enter
fidivl
jb
aam
idivb
inc
lods
cmp
lds
push
lret
push
push
push
out
movl
adc
movsl
jb
mov
jmp
out
lahf
push
adc
sbb
das
das
lds
jb
mov
jno
shll
mov
sbb
jl
cmp
push
cmp
sbb
push
pop
fcomp
or
cmp
mov
lock
lret
stc
ljmp
add
inc
pop
andb
jge
and
fdivrp
mov
int3
aad
inc
push
xchg
pop
std
add
mov
arpl
divb
rcrb
xchg
das
sbb
dec
int3
sbb
mov
enter
addb
mov
push
popf
or
jno
cld
mov
sarl
inc
mov
mov
je
push
mov
pop
into
jl
xor
cmc
cmp
cmp
cmpsl
lahf
shlb
jmp
data16
sti
mov
cmpsb
dec
imul
lahf
in
mov
outsb
pop
adc
inc
cmp
aam
cmpsl
xor
insl
scas
lcall
mov
es
push
xlat
sub
mov
inc
bound
adc
and
and
mov
or
fwait
ret
xchg
lds
lret
mov
popf
fcomp
mov
iret
lret
shlb
punpckhwd
add
aam
inc
sbb
into
adc
dec
jbe
ret
lcall
stos
fdivr
negl
adc
data16
es
fdivl
out
jl
fdivl
cmpsl
int
or
cmp
pop
out
out
pop
in
xor
arpl
insl
add
xor
inc
je
arpl
pop
push
or
lahf
xchg
xchg
inc
mov
out
shll
mull
fstl
imul
aam
cmpsb
pop
or
adc
add
jbe
sub
cmp
xor
xchg
mov
fbld
scas
je
lahf
mov
mulb
lods
mov
int
sub
out
movsl
jecxz
xchg
mov
jae
mov
jg
and
outsb
jl
sub
inc
es
sahf
aaa
cld
or
lods
jg
dec
pop
pop
aas
xor
jo
xchg
inc
dec
pop
stc
or
jb
out
push
push
dec
mov
les
or
xchg
nop
dec
jno
leave
je
push
arpl
jp
in
repz
rcll
mov
and
or
sub
sub
sub
fwait
movsl
push
push
jl
test
dec
outsl
mov
test
adc
push
mov
es
add
outsb
outsb
mov
inc
sub
jbe
sbb
xor
outsl
mov
sbb
mov
dec
jns
jbe
jmp
sub
jo
pusha
out
adc
add
in
mov
pop
pop
mov
iret
out
jmp
pop
fmull
add
movsl
inc
in
adc
pxor
lods
jo
dec
hlt
daa
movsl
icebp
mov
push
push
sub
aam
bound
and
push
shlb
jecxz
jns
cltd
adc
add
movsl
aam
jns
jo
std
xor
pushf
and
in
jne
xor
rcl
push
jo
movlps
ja
pop
adc
fadds
in
iret
dec
shrb
orl
loop
dec
outsl
int3
and
fnstsw
je
clc
and
mov
pop
cltd
ret
push
test
es
cli
in
fbld
xor
test
insl
out
push
lock
inc
call
xchg
call
mov
or
arpl
jns
jb,pt
xchg
xchg
clc
pop
pushf
mov
stos
fs
cli
mov
mov
lret
ret
loopne
mov
dec
lret
cmp
pop
mov
xor
imul
ret
adc
rcr
cld
jl
sbb
mov
mov
cmc
xchg
xchg
sbb
cli
xor
movsl
sti
gs
dec
dec
clc
mov
xlat
loopne
cmp
or
aaa
dec
pushf
insl
je
fwait
ja
dec
lret
sbb
push
mov
pop
pop
adc
icebp
pop
adc
xor
xchg
jge
lods
dec
cli
adc
lret
lret
aad
mov
aas
ret
jecxz
jns
xchg
out
xchg
lea
cmpl
add
aaa
outsl
loope
mov
in
push
shrb
loop
push
push
dec
insb
pop
xchg
push
fsts
aas
mov
shl
cltd
mov
pop
je
aad
mov
lcall
ficompl
xor
pop
ret
cmc
in
mov
jo
jmp
add
sbb
xchg
sbb
pop
jecxz
jo
pop
sub
push
sbb
cmp
fmuls
hlt
ret
hlt
sbb
lret
mov
es
sti
lods
lret
jg
inc
fimull
push
pop
mov
xchg
insl
in
push
mov
mov
or
push
lods
leave
ds
or
lods
je
jbe
inc
lahf
xchg
pop
lock
out
push
movsb
or
fldl
sbb
adc
andl
mov
jo
xor
add
pop
imul
mov
jne
inc
or
and
inc
pop
mov
push
in
dec
movsb
mov
sbb
cmpsl
jo
cmp
xchg
pop
pop
sbb
xchg
xchg
push
adc
test
mov
jne
clc
mov
dec
or
cmp
mov
fs
push
aam
mov
jo
push
pop
ja
adc
mov
in
xor
ficompl
adc
sub
inc
jl
shrb
inc
sub
or
sbb
adc
mov
sub
pop
bound
cmp
repz
outsl
xchg
lods
fsubrs
ret
mov
add
adc
push
iret
mov
push
push
into
push
add
mov
dec
or
in
xchg
xlat
adc
xchg
es
sbb
push
sub
jle
adc
jecxz
scas
cmp
jg
jae
adc
jp
test
adc
stc
xor
lods
loop
mov
mov
push
fdivs
pop
icebp
stos
iret
jmp
push
xchg
repnz
or
push
and
out
xchg
popf
daa
in
inc
sub
dec
pop
or
scas
ficoml
dec
mov
xor
lahf
mov
fcomps
hlt
fs
jl
scas
sub
cmp
imul
add
leave
mov
jae
jbe
push
adc
sbb
into
call
xlat
lds
push
cwtl
hlt
movl
add
lods
sahf
pushf
ss
jne
divl
pusha
or
out
jecxz
bnd
inc
sbb
mov
inc
sub
cmp
push
icebp
stos
xchg
fldt
hlt
dec
adc
jmp
nop
incb
mov
sub
arpl
xchg
lods
jnp
cmpsl
xchg
and
test
scas
stc
rol
js
and
pop
lahf
mov
fbld
dec
nop
call
shll
jb
into
repz
jp
ret
in
fs
mov
inc
imul
sub
sbb
fsts
xchg
jnp
cltd
pushf
test
fisubrs
mov
data16
push
rol
leave
add
idiv
cwtl
cwtl
push
std
enter
xchg
les
jno
mov
ret
clc
test
pop
out
cmpsl
dec
lods
push
inc
xchg
mov
lret
orb
aad
test
dec
sub
cmpsl
push
cmp
lods
jno
push
mov
outsb
dec
mov
xlat
pusha
mov
mov
sti
jne
jl
dec
push
dec
insl
aaa
testb
mov
scas
aad
adc
cmp
lahf
mov
or
mov
push
ret
adc
and
repz
dec
push
sti
mov
push
cli
mov
jmp
arpl
mov
mov
inc
push
rorl
xchg
repz
pop
jae
pusha
or
jnp
mov
ja
sbb
adc
jnp
xor
cmp
in
test
rcll
iret
movsb
shr
lods
ljmp
jae
push
loopne
sub
jmp
inc
iret
lahf
bnd
icebp
xchg
mov
into
jge
sbb
dec
hlt
ja
pop
sub
pop
xor
ljmp
outsb
mov
fcoms
push
lods
jae
stc
test
pop
aam
adcb
lahf
mov
and
cmp
or
data16
cld
inc
jge
sub
cmc
iret
cmp
fadd
or
lahf
mov
cli
pop
out
int3
lahf
mov
test
out
daa
mov
cwtl
icebp
xchg
dec
repz
js
cmp
pop
repnz
pop
ja
dec
cmp
cs
pop
mov
out
in
ficompl
lret
jns
shld
in
scas
mov
stc
mov
pop
jns
dec
or
sub
and
ss
inc
xchg
xor
or
pop
bound
cmp
aaa
jo
ja
enter
adc
push
inc
clc
sub
push
and
pop
movsb
and
xchg
sbb
pusha
jns
push
pusha
lods
fimull
sub
mov
arpl
add
xchg
cmp
ljmp
pop
dec
add
ljmp
mov
push
and
mov
jbe
xor
push
inc
mov
fmulp
divps
cld
jns
arpl
scas
repnz
dec
or
push
mov
cmp
out
mov
shll
enter
adc
das
xchg
pop
jecxz
scas
add
pop
cmpsl
arpl
mov
mov
mov
sbb
stos
imul
sbb
xchg
push
pop
add
xor
popf
movsb
out
mov
xor
pop
test
or
dec
cwtl
mov
gs
sub
inc
js
jo
pushl
imull
repnz
or
push
std
das
sti
inc
adc
cli
push
aas
add
inc
mov
adc
movsb
jge
mov
lcall
sbb
add
repz
bound
mov
mov
xchg
rorb
test
dec
add
enter
add
sbb
xchg
xor
outsb
mov
push
mov
imul
clc
imul
push
in
push
adc
xchg
call
test
pusha
xchg
lods
mov
out
mov
mov
mov
filds
aam
iret
adc
out
aas
xor
fwait
mov
pop
add
leave
dec
adc
add
mov
mov
loop
or
test
popa
lret
sbb
xor
jmp
stos
add
pop
test
push
shlb
aad
imul
sti
dec
sbb
jne
push
push
adcl
pushf
mov
jno
inc
sbbl
nop
je
movsb
pop
pop
cmp
scas
adc
mov
ja
cmpsl
cmp
pop
mov
or
xchg
cmp
dec
xor
lds
dec
pop
cld
sahf
xor
push
shrl
and
mov
mov
addr16
sbb
pop
xchg
jmp
sbb
mov
rolb
int3
inc
addr16
test
cmp
outsl
inc
frstor
mov
cmpl
or
test
mov
into
sub
test
sarl
and
push
and
cmpsl
addr16
push
xchg
mov
jb
mull
test
inc
xchg
movsl
fdivl
lcall
cmc
imul
test
dec
fidivl
sbb
adc
out
lods
and
je
xchg
push
push
jle
scas
sbb
loope
jnp
mov
loope
sub
push
dec
imul
dec
mov
mov
inc
out
sti
jns
jecxz
mov
xchg
cmpsl
pop
mov
addr16
dec
xor
pop
jl
jns
mov
dec
mov
mov
cli
fs
or
clc
and
xor
xchg
push
pop
xchg
cmp
in
lods
jbe
sti
pop
push
lret
mov
bound
pop
jns
jae
mov
sbb
inc
icebp
mov
imul
xor
and
cmpsb
mov
popf
jns
pusha
jp
dec
into
add
mov
mov
lock
and
cld
lret
aad
repnz
xchg
stc
mov
lods
or
shrb
sub
dec
pushf
dec
in
ror
xor
jae
out
mov
test
push
pop
scas
aad
pop
subb
sbb
outsb
and
or
popa
test
js
xchg
shrl
ja
movsb
ss
cmp
je
loop
xlat
cmp
pushf
enter
ds
or
jg
adc
fistpl
pushf
and
rolb
cmp
mov
jl
jae
adc
mov
xchg
mov
mov
stos
sbb
mov
sbb
and
shr
in
arpl
jecxz
or
dec
and
mov
sti
jnp
jp
inc
stc
push
xlat
xor
lods
cli
dec
ja
idivb
pusha
jg
or
sub
repnz
push
dec
sbb
inc
jecxz
jne
lcall
jg
xchg
push
pop
repz
fdivl
and
pop
movsb
fisttps
sbb
add
push
loopne
mov
adc
fbstp
jnp
cmp
sbb
adc
xchg
push
addl
mov
inc
mov
loop
leave
jecxz
fiaddl
mov
fcomp
sub
repz
cmpsl
divl
jne
xchg
mov
ljmp
imul
pop
cwtl
fcoms
test
mov
icebp
and
pop
je
push
out
mov
out
push
dec
movsb
rol
fcomps
cld
daa
mov
test
jmp
adc
mov
sbb
dec
mov
sub
jo
sub
or
push
stos
leave
pop
inc
cmp
out
jmp
cmpsl
mov
subl
mov
jmp
loop
jo
out
scas
test
lea
jns
push
insb
jmp
xor
inc
fildll
rolb
dec
mov
bound
or
out
pop
das
insl
cs
or
fucom
jae
xchg
add
mov
cmp
jmp
jbe
or
inc
push
pop
test
loopne
movsb
fstpt
rcll
or
xchg
call
or
mov
and
lahf
out
lcall
mov
add
dec
add
xchg
inc
lea
ljmp
jb
cli
sarb
into
xchg
pop
cmpsb
jl
aad
and
xor
shlb
lcall
xchg
nop
cs
pop
mov
xchg
in
xchg
out
push
add
scas
inc
push
daa
dec
or
mov
push
and
jbe
push
push
sahf
stc
sub
fistpll
mov
pusha
sbb
inc
mov
dec
insb
std
add
loope
inc
push
mov
mov
sub
fdivr
cmp
jge
cmp
stc
mov
pop
xlat
or
mov
xchg
sub
dec
pop
fcmovne
mov
push
loop
cli
test
enter
mov
lcall
sahf
inc
push
push
sub
scas
sti
fcmovb
lahf
mov
sbb
les
gs
sbb
cmc
sbb
sti
dec
cs
push
dec
or
repz
mov
inc
scas
lret
sbb
pop
scas
out
push
in
ficomps
gs
int3
push
int
ljmp
iret
push
jle
movsl
negb
decb
fisubs
mov
cmp
sti
flds
fcomps
idivb
push
fcmovb
popa
xorl
jge
xchg
inc
lock
movsb
mov
stc
lcall
mov
mov
rcrl
cmp
cmp
das
mov
test
mov
stc
add
jmp
push
clc
inc
mov
xor
lret
je
dec
push
mov
lcall
push
push
lcall
jmp
mov
sub
in
or
jge
adc
sub
outsl
sbb
xor
test
pop
cmpsl
pop
imul
push
into
lcall
sbb
adc
ffree
in
or
mov
push
in
xlat
xchg
fldenv
jg
negb
icebp
outsl
pop
shlb
mov
in
insl
xor
sbb
je
pop
push
test
push
or
aad
lret
xchg
je
mov
sbb
pop
pop
and
mov
test
push
gs
and
and
enter
jbe
inc
mov
movsl
ret
jae
out
sti
jns
fsub
inc
mov
test
fisubrs
fwait
and
mov
out
std
bound
push
sub
xlat
mov
mov
lret
push
add
cmc
sbb
popf
setp
pop
popa
push
pop
xor
or
add
mov
inc
or
rcll
hlt
sbb
mov
xor
xor
mov
aad
adcb
in
cmpsl
jp
int
insl
mov
pop
aam
mov
insl
ret
test
pop
loope
cld
rol
cmp
arpl
shr
mov
add
arpl
fbstp
stos
lahf
push
outsl
jp
jmp
and
push
rclb
aas
jne
repz
enter
cmc
jo
adc
xor
xchg
jns
push
adc
ret
dec
shl
fdivs
loop
push
cld
icebp
outsb
arpl
lock
mov
push
pop
push
neg
cwtl
adc
scas
inc
lahf
addb
cmp
push
fstp
dec
sub
cmp
das
mov
repz
inc
jns
insb
mov
jecxz
inc
pop
xchg
gs
enter
inc
sbb
sub
rol
fcmovnu
dec
xor
xchg
jb
jmp
push
pop
mov
push
test
mov
insl
in
lret
mov
jg
in
roll
mov
mov
jl
mov
xchg
mov
or
xchg
seto
and
adc
mov
lock
adc
mov
aas
push
add
fisubs
adc
rcr
inc
xchg
not
std
push
xor
cmp
mov
movsb
push
jmp
sbb
outsl
xchg
mov
loope
fldt
ds
sub
fisttpll
loopne
cld
pop
add
jg
nop
cmc
mov
push
xor
pop
mov
adc
or
pop
or
jb
mov
outsb
imul
test
aaa
mov
mov
mov
pop
popf
and
das
or
adc
sarb
test
cmp
and
loop
xchg
sbb
inc
bndldx
stos
push
push
jo
sbb
loopne
test
ds
lcall
jmp
ja
daa
pop
psllq
rcrb
xchg
int
cltd
mov
add
or
and
fistps
scas
sub
in
xor
test
adc
clc
xchg
or
loopne
push
adcl
mov
lret
cmp
jecxz
aam
jl
lahf
sub
mov
push
ret
rcrl
cmpb
xchg
pop
rcrl
pop
xchg
mov
ret
mov
and
icebp
lret
or
or
fdivs
lret
test
cli
adcb
out
lods
aam
movsb
popa
mov
nop
stos
pusha
jne
mov
pusha
xchg
xchg
clc
test
mov
mov
pushf
xor
cmp
sub
mov
jne
jns
aad
cs
and
out
dec
mov
movsb
insb
lret
lcall
jle
in
sub
int3
ret
test
int
sbb
out
clc
insl
xchg
mov
and
xlat
or
in
gs
lea
mov
in
out
adc
fisttps
sub
test
js
mov
in
ret
pop
mov
adc
xchg
stos
jo
mov
cmpsb
rcrb
mov
out
js
jns
jl
xchg
adc
fisubs
lea
movsb
jne
lret
jnp
sub
mov
inc
sbb
and
add
cmc
and
sub
movsb
cmp
dec
js
or
xor
mov
mov
cwtl
in
mov
arpl
adc
out
jmp
arpl
jecxz
or
lds
rcll
gs
popa
dec
lds
imul
and
mov
pop
stos
cmp
mov
iret
fadd
lods
pop
push
rcll
dec
mov
inc
mov
sahf
mov
call
test
and
sub
popa
repnz
xor
gs
sbb
add
stc
add
cmp
push
sti
inc
cmc
push
pop
enter
or
pusha
mov
xchg
push
cmp
in
push
cmp
vaddpd
and
sbbl
fstpt
mov
outsl
nop
test
sbb
insl
lea
js
jmp
repnz
mov
out
scas
loop
xlat
stos
lret
xchg
mov
sbb
sub
imul
push
movsl
sbb
sub
call
imul
and
aas
or
stc
fidivs
push
mov
nop
pop
scas
pop
jne
scas
xchg
shll
mov
clc
pop
insl
push
cltd
aad
sahf
xchg
lea
dec
jmp
aas
mov
insl
pop
push
or
ljmp
add
pop
mov
push
inc
sub
pop
push
clc
frstor
or
aas
push
mov
das
leave
cmpsb
std
imul
xor
icebp
leave
or
mov
lock
mov
jp
mov
inc
lret
jo
add
cmp
gs
stos
mov
mov
adc
out
popa
add
ja
xchg
add
mov
push
or
xor
push
cmp
jecxz
pop
push
stos
call
or
xchg
xchg
or
das
imul
mov
sbb
xchg
or
or
cmpsb
icebp
and
cli
cmpsb
scas
pop
inc
or
negb
fstpl
xchg
popa
xchg
jo
jns
sub
add
jle
dec
inc
jo
and
push
mov
push
ret
add
jp
xchg
add
xchg
movsb
sub
shlb
mov
into
pop
fimull
or
pop
mov
out
mov
mov
enter
ret
inc
jo
sbb
sbb
les
call
fldt
dec
add
push
or
sub
ds
inc
push
loope
adc
xchg
or
jge
int3
pop
sbb
or
jbe
push
loop
xchg
iret
fadd
int3
loop
stos
pop
pop
dec
cmp
cmp
out
clc
or
xchg
jmp
ss
addr16
test
shr
iret
shrb
jnp
and
gs
mov
pop
sbb
loopne
pusha
rcr
pop
nop
cvtps2pd
mov
fcompl
movsl
stc
push
sbb
fnstsw
mov
cli
cmp
adc
orb
inc
and
lods
xchg
adc
aam
sahf
mov
inc
adc
iret
outsl
mov
loop
pop
stos
shll
orb
clc
mov
jno
test
and
sub
stos
and
jo
xchg
xchg
addl
and
sub
pop
xor
aas
stos
cmp
inc
push
mov
push
mov
mov
inc
jbe
aam
sub
js
xlat
es
jno
rorl
repnz
mov
mov
jno
mov
mov
sub
jmp
mov
pop
cmp
mov
inc
mov
jle
pop
push
gs
pop
inc
and
into
jl
adc
add
lea
lods
mov
pusha
cmp
push
adc
xchg
push
push
and
jl
xchg
mov
ret
mov
mov
mov
push
repz
cmp
daa
jae
or
xchg
test
cmp
call
jl
jmp
imul
popf
mov
iret
gs
inc
stc
inc
mov
cmp
stos
cmpsl
sbb
mov
inc
int
dec
test
pop
jb
ret
mov
ret
mov
xchg
pop
notl
iret
xor
push
adc
pop
pop
loop
popa
mov
jmp
add
std
cmp
rorb
jno
daa
rcll
add
xchg
sub
paddw
into
outsb
js
int3
sbb
dec
cmpsb
sub
jg
fists
popf
pop
cwtl
mov
scas
stos
push
mov
pop
push
pop
mov
cld
xorl
pop
mov
push
lahf
adc
pop
sbb
cs
and
popf
in
cmp
bnd
cmp
sarb
mov
push
sbb
aam
jae
insl
scas
pusha
mov
rcrl
pop
inc
stos
fistps
inc
or
pop
pop
inc
mov
inc
mov
outsl
xchg
mov
fiaddl
ret
mov
jle
mov
adc
mov
push
jmp
jmp
out
xor
shrb
inc
push
addr16
xchg
or
push
mov
and
jge
cltd
aaa
xchg
shrl
in
xor
les
setl
mov
je
scas
ds
out
cld
ret
mov
xlat
add
out
mov
cmp
jns
aaa
cmpsl
lock
es
js
mov
popf
lret
sub
cmc
hlt
fstpt
push
or
or
pop
hlt
lahf
cmp
adc
jns
imul
imul
jbe
insb
leave
or
out
insb
pop
into
ret
or
add
and
sub
jne
sbb
shll
add
movsl
in
mov
mov
clc
jmp
push
xchg
jg
jle
hlt
or
lock
hlt
cmp
fisubrs
popa
loop
and
negb
ret
lahf
mov
into
scas
lods
push
fxtract
or
loopne
push
outsb
and
push
or
pop
sub
push
xchg
stc
mov
ja
ret
mov
mov
ret
jns
leave
movb
pop
mov
out
divl
and
std
adc
sbb
adc
xor
or
in
xlat
aas
fldcw
pop
std
sti
mov
les
imul
out
jb
rcl
mov
pusha
add
out
ljmp
fisubrs
movsb
mulb
lret
nop
xlat
mov
out
ss
bound
stos
xchg
les
idivb
dec
test
clc
les
pop
dec
lcall
sbbb
mov
shl
jge
push
mov
adc
cmp
and
inc
xchg
pop
into
cmp
scas
fcmovu
cwtl
daa
aas
iret
mov
mov
inc
xor
mov
mov
mov
pop
mov
sub
lcall
icebp
xor
mov
std
nop
clts
in
cld
icebp
nop
mov
sbb
mov
cmpsb
test
outsb
testb
psubb
or
rcr
mov
add
or
xor
sar
imul
mov
pop
mov
or
cmp
jle
loope
jge
lret
fdivs
out
jp
lret
les
out
jo
push
es
lret
insl
xor
xchg
or
bound
loop
or
andb
pushf
or
call
setp
lret
push
sbbb
cmpsb
dec
sbb
or
into
insb
push
inc
mov
xchg
mov
cmovo
or
lret
andb
xchg
lret
lock
push
mov
inc
or
leave
sahf
arpl
hlt
jmp
and
sbb
jne
adc
sbb
add
and
adc
stos
jae
inc
in
lahf
enter
xor
xchg
and
xor
pop
pop
out
adc
and
xchg
test
cmpb
fdiv
push
push
lds
sbb
adc
test
or
pop
repz
clc
lahf
out
fnstcw
cmp
cmp
and
lods
pushf
imul
sarl
xlat
not
jns
aaa
cltd
clc
push
pop
sub
jecxz
je
mov
mov
jbe
cmp
mov
lcall
es
mov
sbb
sahf
add
popa
pop
cmp
out
loop
mov
jne
or
xor
pop
movsl
fs
push
mov
bound
cmpsl
xchg
add
gs
dec
jns
cmp
movsb
cltd
rorb
jle
icebp
call
jg
shll
mov
or
sub
xrelease
aad
xor
jbe
iret
movsb
mov
fdivrs
lea
sub
xchg
xchg
and
cmp
push
sbb
cmp
adc
xor
lret
ja
aad
push
fwait
int3
adc
mov
mov
xor
push
mov
test
mov
jecxz
sbb
or
xor
es
aas
lahf
push
shlb
and
add
xchg
lret
cmp
sahf
mov
dec
fmuls
insb
sbbb
or
jo
movsl
in
sbb
mov
imul
cmp
or
xchg
adc
mov
outsb
sub
xchg
mov
mov
sub
push
lret
pop
cmp
xor
xor
fs
out
into
xchg
popa
aad
in
xor
pop
jmp
lds
xlat
push
fwait
lcall
inc
je
inc
adc
mov
push
inc
mov
stos
and
leave
sub
lret
adc
push
mov
lret
faddl
cmpl
out
pop
dec
lret
ss
repnz
arpl
xor
mov
mov
sbb
mov
pop
daa
call
push
xor
rcrl
xchg
adc
adc
rcr
ret
inc
dec
popa
jl
inc
adc
jge
mov
scas
stos
fildl
mov
insl
enter
pop
in
xchg
adc
sub
out
stc
mov
fwait
push
fisttps
imul
or
data16
push
pop
fprem
push
in
mov
loopne
jae
sub
insb
mov
or
popf
add
cmp
ret
push
fs
pop
push
sub
fwait
in
cmpsl
pop
jl
and
sub
or
jmp
xor
mov
fistl
mov
adc
movsl
jge
in
push
hlt
mov
mov
sub
or
mov
sub
ds
sbb
insb
das
aaa
mov
sti
xor
push
adc
lret
jp
outsb
ljmp
hlt
gs
mov
insl
jbe
decl
jns
or
lds
mov
stos
jbe
sbb
stos
push
aad
cmpsl
mov
jecxz
pop
xor
test
pop
add
dec
stc
push
out
jmp
divl
into
pop
add
pop
out
jle
inc
inc
data16
dec
insb
insb
push
inc
lock
fldln2
in
in
adc
fcmovu
aaa
mov
inc
out
sahf
sbb
push
add
xchg
out
push
rcll
data16
shlb
xor
test
xor
jnp
xor
dec
aad
or
mul
fildl
aam
pop
xchg
cmp
stc
xor
cmp
outsb
addb
sub
adcb
push
or
sbb
out
xchg
addr16
clc
mov
sbb
js
loop
and
jnp
mov
gs
adc
lcall
jg
add
mov
pop
adc
pop
dec
sub
sbb
xchg
pop
pop
in
add
jb
mov
mov
xor
jle
mov
dec
cltd
or
addr16
aam
pop
jbe
cmp
sbb
mov
fsubrp
cld
test
sub
movsl
mov
sub
rclb
and
xchg
jp
enter
rol
push
push
orl
cwtl
sub
iret
sub
mov
mov
testl
cmp
jbe
rol
aaa
nop
fidivrl
mov
pop
test
and
push
mov
fs
test
rcll
sbb
adc
jl
or
mov
dec
dec
out
and
push
enter
dec
fcomp
mov
loope
cli
fiadds
fsts
jns
scas
push
arpl
pushw
inc
xchg
jge
mov
and
dec
ret
aaa
sub
aad
inc
mov
and
lea
inc
push
scas
pop
sbb
jge
cli
mov
jb
lds
xchg
pop
clc
adc
or
bound
dec
jne
jno
sub
and
add
jmp
ss
cmp
cwtl
inc
mov
inc
shlb
add
jmp
jns
mov
lret
lods
and
sti
mov
fwait
xlat
pop
js
orl
lock
das
sbb
repz
mov
jecxz
jge
xchg
and
xchg
jle
pop
fstpt
mov
mov
mov
iret
mov
hlt
stos
mov
sbb
test
push
push
lahf
push
aaa
jo
or
jp
fwait
sti
jp
push
push
fcoms
in
jp
sbb
xchg
mov
cmpsb
mov
cmp
mov
or
movsb
cmp
jl
pushf
jl
xlat
push
arpl
out
mov
and
xchg
pop
test
imulb
test
scas
rcrb
xor
dec
and
sub
add
dec
add
lods
cld
push
sbb
ret
add
cmp
add
push
xor
lcall
sahf
push
loopne
sbb
inc
pop
xor
cmp
lds
ret
mov
inc
sbb
push
xchg
push
mov
mov
inc
push
aas
adcl
loop
dec
lods
xchg
add
inc
jae
in
inc
ja
jecxz
leave
dec
pop
push
ss
inc
iret
jno
mov
jb
int3
rcrl
inc
inc
xchg
pop
int
out
push
ficomps
imul
repnz
test
inc
push
popl
jl
mov
or
imul
adcb
arpl
add
push
cli
shrl
jecxz
fdivs
mov
push
movsl
lea
add
stos
lods
mov
jo
sbb
push
adc
mov
enter
sub
mov
xchg
mov
dec
mov
das
inc
fldl
inc
xor
dec
lock
mov
or
andl
mov
stos
jnp
xor
add
and
inc
inc
cmp
insl
in
mov
in
ljmp
mov
inc
outsb
jb
fnsave
jge
int3
loop
mov
push
sbb
pop
cmp
sub
jae
push
cmpsl
movl
adc
mov
jmp
ret
sub
js
repz
lds
fdivl
ds
hlt
sbb
js
shrl
mov
gs
push
push
fwait
push
out
jle
fldenv
loopne
shrl
in
gs
mov
outsl
mov
dec
loop
mov
js
mov
test
mov
mov
pop
jae
or
ss
cmp
mov
outsl
mov
cmpsb
or
mov
xor
nop
lret
dec
dec
fld
and
cld
push
or
loopne
stc
xor
pop
and
mov
insb
or
lahf
data16
sarb
outsb
cmp
mov
inc
and
dec
add
cmpb
sub
sub
xor
adc
sbb
add
andl
hlt
pop
loop
cmp
push
mov
ja
cmp
jne
imul
adc
inc
out
cmpsl
ret
push
pop
test
xor
nop
movsl
inc
stc
aad
enter
xchg
cli
rolb
das
and
aam
packuswb
sti
cs
add
loop
mov
lock
jbe
push
dec
loop
lret
add
dec
dec
jo
lods
add
xchg
jge
pop
dec
pop
jmp
movsb
adc
adc
adc
rcrl
adc
mov
push
in
jo
loopne
iret
mov
xor
lret
cmp
xchg
mov
nop
cwtl
sbbb
add
ret
xor
jp
out
sbb
dec
sbb
fstl
fadds
js
insb
les
fistl
adc
dec
icebp
imull
and
rclb
std
fmul
push
or
jbe
xchg
jo
lods
pop
mov
jae
sbb
mov
icebp
es
xor
dec
fdivl
rclb
int3
mov
sbb
and
test
mov
mov
push
out
mov
jae
lcall
mov
add
icebp
mov
push
or
jecxz
sahf
fstpt
push
imul
xchg
mov
add
jne
sub
sub
repnz
mul
shlb
stc
xchg
cmp
sub
xor
ljmp
or
test
mov
jb
add
jns
sarl
mov
jbe
or
ret
inc
xchg
and
movsl
adc
into
mov
rclb
leave
scas
insl
cld
mov
shl
stos
xchg
aad
mov
cs
aam
in
push
sbbl
xchg
dec
rcrb
and
fs
xchg
add
pop
pop
addl
pop
leave
icebp
cmp
out
jg
xor
dec
setp
adc
bound
or
mov
jo
sbb
inc
mov
cs
mov
inc
push
fcomps
jne
and
faddl
shll
pop
sbb
adc
dec
jmp
imul
data16
inc
out
jnp
pushf
sbb
pop
test
in
repnz
cli
jmp
and
rcrl
movsl
and
mov
inc
fwait
adc
push
or
xlat
sub
rolb
mov
push
inc
adc
or
in
mov
js
insb
dec
xchg
sarb
frstor
jno
cmp
out
sbb
loope
or
nop
out
movsb
cmc
int3
sarl
xchg
mov
mov
mov
sbb
ret
imul
add
dec
push
data16
mov
test
jmp
push
xchg
push
mov
idivl
outsb
pop
icebp
out
in
fnstenv
cmc
mov
hlt
xchg
imul
mov
mov
insl
scas
daa
daa
dec
test
repnz
pop
test
es
jecxz
jb
fwait
out
mov
mov
jne
fbstp
scas
jg
cwtl
sub
fisttpll
aad
pop
xor
xor
dec
xchg
subb
call
pop
cmp
mov
movsl
push
cmp
and
or
mov
jne
popf
sbb
fmuls
and
adc
dec
fcmovnb
or
in
push
push
sbb
aam
jo
lahf
mov
out
enter
loope
je
xchg
sub
ror
lcall
fnstsw
pop
and
decb
lods
xchg
mov
insl
data16
ja
mov
mov
inc
xor
mov
cmpb
dec
jl
mov
add
test
dec
pop
sub
cwtl
dec
movsb
mov
mov
fcoms
cli
std
fimuls
jne
cld
mov
xchg
popf
sub
mov
fsubs
imulb
fldl
std
stc
jg
sbb
daa
adc
cmpsb
xor
mov
push
and
fldl
and
xchg
mov
sbb
rorl
and
out
sahf
mov
lods
jecxz
es
mov
mov
test
js
inc
pop
ljmp
cmpsl
subb
inc
jno
mov
ja
int3
mov
sub
lods
stc
mov
adc
and
filds
and
test
push
or
dec
xchg
mov
jp
cli
pop
in
adcl
ds
bound
mov
inc
sub
dec
push
ljmp
push
dec
int
xchg
dec
daa
or
lea
into
out
rorl
repz
sbb
stos
mov
or
pop
sgdtl
ja
stos
sbb
add
dec
mov
cmp
jae
push
ds
mov
jbe
int
lret
loop
push
or
dec
jl
push
sbb
mov
test
xor
enter
jns
inc
bnd
into
dec
inc
mov
cmp
add
scas
jbe
in
mov
and
cmc
lcall
inc
das
cmp
call
add
cmp
and
stos
cmpsl
pop
jmp
jb
jmp
lds
ds
jo
std
sbb
orb
addr16
pop
jbe
and
addr16
lock
adc
insl
fyl2x
xchg
sahf
out
sbb
psadbw
loopne
mov
insl
cmpsl
cmpsl
jp
pop
enter
push
xchg
mov
push
or
mov
loopne
dec
hlt
pop
mov
push
insb
mov
stos
xor
aad
les
push
and
cld
cmp
xchg
test
mov
nop
das
xchg
rcrl
cmp
andl
imul
into
or
inc
stos
jmp
test
push
mov
pop
loope
jne
push
mov
sub
pop
fwait
jp
test
stos
js
mov
aaa
fidivs
loop
mov
subl
inc
jb
xlat
cld
adc
inc
jno
adc
xchg
andl
insb
mov
or
out
stos
push
icebp
mov
ljmp
push
mov
fistl
cmpl
les
xchg
push
cmpsb
movsb
std
stc
dec
outsl
adc
aad
mov
push
leave
imul
jl
xor
jo
adc
push
adc
mov
loopne
sub
fadds
jnp
lods
add
push
add
out
jp
aas
sbb
test
inc
iret
fists
inc
mov
lea
hlt
sub
pop
sub
fldl
cmp
adc
adc
shlb
fimull
or
pop
cmc
mov
insb
jns
jle
add
mov
mov
scas
sub
ds
jb
fdivs
sub
call
pop
lds
pop
es
dec
add
lret
jg
lcall
test
mov
sub
cmp
mov
push
je
adc
inc
enter
enter
pop
cs
scas
flds
insl
ljmp
int
call
pop
push
pusha
clc
shl
lcall
rol
jl
sarb
mov
xchg
cmc
setae
lock
ja
pop
mov
test
lea
add
or
test
adc
leave
clc
jmp
cmpsl
out
inc
jns
sbb
loopne
sub
pop
xchg
ljmp
mov
repz
aaa
loope
fistpll
xchg
arpl
out
lds
lret
sub
into
addb
xlat
mov
stos
mov
das
or
xlat
jb
inc
and
mov
and
inc
dec
xchg
cmp
fisubrs
fwait
sti
push
sub
stc
jmp
dec
cmpsl
pop
pop
and
dec
es
dec
sub
mov
cltd
bound
sbb
or
xor
mov
jmp
fs
or
pop
test
mov
int3
mov
fisubs
cmp
sub
or
adc
enter
or
add
xchg
gs
insl
or
jne
mov
je
inc
add
inc
into
lret
stc
mov
pop
sub
jb
cmc
cmp
pop
sub
frstor
out
xchg
mov
and
mov
imul
xorb
sub
shrb
mov
ss
loop
repnz
loope
or
imulb
mov
push
aad
int
and
jl
aaa
jecxz
xchg
daa
pop
test
aaa
mov
mov
sub
addb
or
push
pusha
sti
push
clc
dec
mov
in
add
jb
rorl
int
mov
lods
nop
int3
xchg
xlat
orl
aam
cmp
or
mov
cmp
add
pop
dec
fcmovnb
dec
inc
iret
negl
jl
test
dec
push
hlt
cs
mov
test
inc
repnz
sub
push
and
inc
fbstp
loope
out
loope
sub
out
jbe
shr
testb
ds
ja
xchg
sub
push
mov
ret
hlt
jnp
cmpsl
xor
in
pop
or
pop
sbb
jle
lods
pop
repz
push
xor
shll
push
mov
test
outsl
js
out
push
push
mov
or
sbb
jno
cltd
movl
adc
dec
mov
pop
insb
fiadds
jmp
ror
xchg
hlt
inc
push
js
scas
out
pop
adc
push
adc
cmc
jb
pop
xchg
popa
lds
jbe
cmp
cmp
hlt
adc
aad
push
in
add
rorb
sti
pop
inc
cmp
dec
inc
lcall
cmpb
cmc
inc
jmp
push
fiadds
lock
mov
mov
repnz
mov
hlt
pop
xchg
sub
push
es
dec
inc
mov
or
ja
dec
pop
xchg
adc
mov
cmpb
dec
fchs
mov
fsubr
mov
fwait
add
pusha
loop
add
push
js
dec
push
outsb
paddusw
lods
lea
push
lahf
xlat
jmp
or
sub
cmpsl
push
mov
outsb
jmp
cmp
cmp
add
cmc
sbb
or
and
mov
mov
ret
out
mov
jmp
cmp
cmp
mov
pop
das
and
movb
xlat
inc
stc
das
sbbl
in
aaa
add
dec
lods
addr16
and
cwtl
xor
xchg
imull
outsl
loopne
xchg
sahf
aam
xchg
in
pop
imul
mov
cmp
cmp
ret
aaa
mov
call
rol
fmuls
fs
push
mov
fisubrl
rclb
or
mov
cmpl
test
popf
add
adc
shlb
jns
push
pop
jb
xchg
cmc
addr16
mov
dec
shl
data16
jnp
out
mov
jge
repz
bound
mov
clc
adc
in
outsb
insl
hlt
movsl
scas
fsubl
out
sub
repnz
push
jg
ja
sub
jge
jns
pop
dec
push
popa
popa
and
inc
mov
dec
psubusb
rorl
loope
aas
jg
pop
pop
xor
adc
aam
dec
test
cmp
movsl
fmull
lds
push
cmp
out
aam
clc
mov
je
add
push
mov
mov
in
mov
fmul
mov
fldl
and
or
mov
push
ja
popa
adc
sub
pop
pop
ss
dec
mov
aad
cli
or
insb
add
adc
adc
push
xor
cmpsb
and
xor
sub
pop
xor
loope
or
mov
fptan
fisttpl
sbb
push
cld
xor
dec
push
inc
daa
cmpsl
pop
mov
dec
inc
mov
or
and
pop
fwait
out
mov
jmp
stos
stos
pop
or
fprem
outsb
sarl
jp
sub
mov
aam
xor
add
mov
jae
jo
ljmp
mov
mov
lock
ret
les
pop
lret
mov
jbe
mov
push
xor
test
inc
cmc
mov
fistpl
pop
adc
loope
mov
push
dec
adc
out
aam
aas
mov
add
lahf
mull
outsl
and
xchg
dec
int
adcl
stos
mov
mov
mov
call
pusha
loopne
inc
inc
mov
das
leave
roll
sahf
fsubr
out
cwtl
jg
jge
popf
or
jae
mov
jmp
push
ret
adc
and
mov
into
mov
push
je
mov
clc
and
testl
stos
push
pop
sub
and
jnp
stos
push
sbb
rorl
dec
xchg
int
jecxz
jp
fwait
dec
pop
dec
lods
sbb
inc
cmp
pop
mov
divb
or
rorl
cmpb
xchg
mov
adc
rorb
daa
mov
jmp
push
cmpsl
or
push
pop
adc
add
jg
sar
push
in
inc
pop
int3
cmpsb
mov
add
daa
stc
imul
and
mov
dec
icebp
lcall
cmp
push
and
imul
lods
and
sbb
adc
shlb
inc
cmp
dec
mov
jae
cwtl
out
enter
jbe
inc
outsb
shrb
cmpsl
test
mov
and
in
pmullw
jp
stc
dec
stos
stc
shrb
xor
hlt
arpl
loopne
negb
jge
fnstsw
cmovb
fwait
lcall
push
clc
push
push
cmp
cmpsb
enter
das
loop
es
fcmovb
jle
sub
movsl
xor
inc
fs
cmpsb
pop
sbb
inc
inc
insb
int3
inc
cwtl
push
mov
int
inc
push
pop
xor
cmp
mov
pop
cs
xchg
xor
cmp
lahf
or
sbb
lods
add
dec
lods
dec
in
inc
data16
fwait
rcrb
or
adc
xchg
push
inc
mov
lea
cld
popa
mov
push
and
dec
sti
dec
fs
cltd
clc
push
addr16
xchg
aad
pushf
inc
xchg
add
xchg
xchg
xor
sti
push
scas
aam
jb
out
in
or
loope
inc
xor
push
jns
test
push
test
inc
xlat
lcall
pop
mov
cs
sub
call
movl
stos
movsb
outsl
add
dec
sub
dec
mov
sar
push
cmp
sbb
xchg
mov
mov
scas
cli
mov
repz
mov
adc
shrb
and
jno
cld
or
in
sbb
movsb
xor
fldt
sub
xor
dec
dec
mov
push
iret
in
pusha
pop
imul
add
inc
stos
xchg
clc
dec
nop
xchg
xor
sti
mov
ja
out
cltd
popf
popa
out
and
gs
mov
and
fstl
pop
fldenv
shll
int
push
testb
in
push
mov
mov
or
pop
push
fcmove
pop
sahf
xchg
add
jae
pop
ficoms
popa
dec
mov
xchg
insl
xchg
or
int3
push
cmp
loope
mov
cld
ljmp
bound
fsub
fs
sbb
mov
pop
inc
and
mov
sub
lret
cmpsb
push
js
gs
rorb
xchg
movsb
mov
pop
jecxz
mov
add
inc
lret
dec
push
out
jno
inc
mov
and
neg
pop
fwait
repnz
lahf
sbb
movsl
popf
adc
icebp
popf
mov
jge
pop
stos
add
cwtl
jecxz
xor
inc
push
fnstcw
mov
imul
xchg
ret
mov
xchg
shrl
cmpsb
cwtl
hlt
orb
pop
pop
fcoml
push
mov
movsl
cmc
jge
xor
mov
addb
sbb
xchg
dec
dec
xchg
mov
mov
xchg
mov
mov
sarl
mov
jo
fisubrl
and
loope
icebp
movsb
loopne
pop
icebp
cmpsb
ds
daa
ficoml
int
imul
mov
sub
sub
pop
pop
dec
popa
shrd
jge
je
pushf
cmp
sub
jo
sub
push
inc
aam
into
xchg
addl
subl
leave
push
addl
xor
and
pop
push
mov
pusha
jecxz
out
in
xchg
inc
cmpsb
xchg
push
inc
add
loop
mov
mov
repnz
push
jmp
pop
xchg
repz
stc
and
and
mov
aas
jecxz
push
push
lret
sbbb
adc
jnp
xchg
add
mov
sub
cmpsl
loopne
mov
bound
add
das
xor
imul
bound
pushf
insl
das
notl
pop
ret
cld
mov
sahf
sbb
mov
cltd
js
cmpsl
in
xchg
push
adc
cmpsb
nop
in
or
xor
rcr
and
mov
push
adc
xchg
enter
jns
lahf
jl
or
mov
les
out
and
pushf
les
sub
xor
cltd
adc
dec
add
mov
test
jg
mov
rolb
xchg
scas
jle
mov
sub
adc
sub
popa
adc
xor
mov
in
ficompl
pop
mov
int3
stc
pusha
loop
dec
arpl
push
sbbb
sub
rcrl
rcrl
fsubrs
insl
mov
sub
test
ret
data16
sub
mov
rcl
sub
lock
cmp
xchg
call
xchg
jns
bound
fistpl
loopne
lret
imul
pop
ss
pop
lahf
pop
pusha
lahf
and
fidivs
fisubl
xchg
fwait
test
lea
pop
mov
mov
lea
push
lret
xchg
lods
clc
fcoms
jmp
mov
enter
inc
fistpl
mov
cmc
pusha
dec
rclb
xchg
pushf
and
dec
ja
pop
adc
jo
lock
in
popa
dec
xor
sub
inc
xor
mov
lea
movzbl
movzbl
inc
inc
sub
sub
add
or
lea
add
mov
add
movzbl
dec
add
dec
and
lea
mov
inc
inc
inc
add
dec
mov
sub
lea
add
add
dec
cmp
jb
dec
xor
or
lea
mov
dec
mov
inc
inc
inc
dec
sub
lea
sub
inc
mov
inc
add
cmp
jb
xor
mov
lea
xor
dec
add
xor
inc
inc
pop
xor
lea
test
jbe
mov
dec
inc
dec
add
add
lea
inc
dec
inc
inc
add
lea
mov
dec
dec
inc
dec
inc
add
lea
imul
dec
and
add
dec
mov
inc
or
movzbl
lea
imul
add
dec
inc
and
dec
dec
mov
add
lea
mov
movzwl
dec
mov
add
inc
mov
dec
add
lea
imul
add
add
dec
jne
dec
mov
inc
sub
lea
mov
dec
add
inc
inc
add
lea
mov
mov
add
inc
dec
sub
sub
lea
mov
mov
inc
inc
test
jbe
add
add
and
lea
mov
add
dec
inc
add
add
lea
mov
add
dec
dec
inc
dec
and
lea
mov
add
sub
and
add
inc
mov
xor
lea
movzbl
mov
inc
add
dec
inc
and
inc
jmp
lea
mov
inc
add
pop
ret
push
sub
dec
add
lea
movzbl
inc
inc
dec
sub
dec
push
or
lea
mov
dec
push
dec
inc
push
inc
sub
push
lea
imul
push
dec
inc
dec
inc
add
lea
mov
sub
inc
dec
dec
or
lea
mov
add
call
inc
inc
dec
dec
imul
and
lea
mov
add
inc
add
sub
or
lea
mov
dec
dec
dec
dec
or
lea
mov
add
add
inc
dec
xor
lea
imul
dec
sub
dec
sub
or
lea
mov
sub
cmp
je
inc
inc
dec
and
lea
mov
inc
sub
dec
inc
add
lea
mov
inc
add
add
inc
or
lea
mov
dec
inc
dec
add
sub
lea
mov
inc
inc
sub
dec
sub
lea
mov
dec
dec
dec
inc
add
lea
mov
sub
inc
add
inc
add
lea
mov
dec
inc
inc
dec
add
lea
mov
ret
dec
sub
pop
inc
ret
push
add
mov
or
lea
push
mov
dec
add
inc
sub
push
dec
push
add
push
lea
jmp
add
mov
lea
mov
movzbl
inc
dec
mov
dec
sub
mov
sub
lea
movzbl
mov
dec
add
add
add
and
inc
or
movzbl
lea
mov
xor
dec
sub
inc
inc
dec
add
lea
mov
sub
dec
dec
add
sub
dec
jne
lea
mov
imul
dec
pop
inc
inc
pop
inc
and
pop
lea
movsbl
add
sub
dec
sub
add
lea
imul
add
inc
add
ret
push
inc
dec
and
lea
mov
dec
add
add
push
push
push
push
inc
and
lea
push
mov
sub
add
add
dec
xor
lea
mov
dec
mov
add
push
dec
dec
xor
or
lea
push
mov
sub
push
inc
dec
pushl
dec
call
xor
add
lea
mov
inc
inc
sub
inc
xor
pop
ret
mov
dec
sub
sub
call
add
xor
lea
push
mov
add
xor
dec
mov
sub
mov
sub
and
mov
lea
mov
test
je
inc
dec
dec
inc
xor
lea
mov
inc
dec
mov
inc
inc
mov
or
lea
movsbl
dec
repnz
inc
dec
add
dec
jmp
and
lea
mov
dec
inc
inc
inc
sub
lea
mov
pop
pop
ret
push
dec
add
dec
inc
and
lea
movzbl
dec
sub
dec
dec
or
lea
imul
add
add
dec
inc
xor
lea
mov
add
dec
sub
sub
add
lea
imul
pop
ret
sub
add
mov
dec
dec
mov
add
add
mov
lea
movsbl
mov
inc
inc
xor
dec
inc
mov
sub
lea
inc
movzbl
dec
dec
add
inc
and
cmp
jb
lea
push
mov
inc
push
dec
dec
push
dec
xor
mov
lea
mov
xor
inc
add
xor
dec
dec
xor
xor
lea
push
imul
dec
xor
dec
jmp
ds
add
adc
add
jne
add
adc
add
inc
add
sub
inc
add
adc
mov
add
mov
inc
add
incb
adc
add
push
mov
mov
pop
dec
dec
push
dec
dec
mov
xor
lea
imul
sub
dec
dec
inc
sub
lea
imul
add
call
dec
dec
add
add
lea
mov
inc
dec
sub
inc
sub
lea
imul
add
dec
inc
add
sub
lea
mov
sub
dec
add
sub
call
sub
lea
mov
sub
call
add
inc
inc
and
call
lea
push
mov
add
sub
dec
dec
call
sub
lea
mov
dec
inc
dec
call
inc
pop
sub
lea
mov
add
add
pop
dec
dec
pop
sub
sub
lea
mov
pop
dec
add
inc
dec
xor
lea
mov
sub
pop
inc
dec
pop
inc
add
mov
lea
mov
call
dec
inc
dec
dec
ret
sub
lea
push
movsbl
dec
push
inc
inc
push
dec
and
push
lea
movzwl
push
dec
inc
mov
inc
dec
push
xor
ret
push
lea
push
mov
add
push
inc
inc
push
inc
add
push
lea
movzbl
push
add
inc
dec
call
inc
or
lea
mov
add
dec
inc
dec
add
lea
movsbl
inc
inc
dec
dec
and
jmp
stos
push
test
pop
fldt
jmp
fwait
jg
inc
cmpsl
ljmp
out
mov
cmpsb
xor
adc
movb
andb
jne
xchg
push
jle
idiv
ret
mov
xchg
push
mov
push
inc
add
out
push
sub
jle
mov
and
enter
adc
cmp
sub
es
mov
jg
push
adc
add
mov
daa
in
lods
cli
cld
inc
mov
cmp
aas
pop
rolb
push
bnd
lods
push
xchg
lods
lods
sbb
roll
mov
pop
xchg
js
enter
mov
mov
dec
movsb
sub
out
rorb
push
add
in
xchg
lods
xor
jnp
insl
addr16
test
push
stc
test
push
pop
fptan
adc
pop
push
stos
inc
mov
outsb
rcrl
mov
ja
aaa
addr16
nop
adcl
cltd
pop
dec
clc
xchg
mov
loop
and
ffree
imul
test
inc
adc
cltd
xor
call
jne
bound
nop
inc
gs
lret
cmp
xchg
adc
mov
cmc
xchg
cmc
gs
sbb
sbb
mov
xchg
test
jbe
mov
cld
imul
push
sbb
pop
test
gs
int
and
cmp
lock
push
push
stos
out
aad
lahf
and
pop
dec
jp
fs
adc
scas
mov
mov
push
mov
lock
shrl
sbb
rcl
shll
ljmp
repz
ss
pop
jl
xchg
enter
mov
mov
sub
loope
enter
jb
add
pop
loopne
sub
fwait
jecxz
leave
sub
ja
push
movsb
cmp
fisubrs
and
pushf
sahf
xor
inc
std
mov
add
sub
pushf
in
mov
int3
mov
lock
inc
add
inc
shl
mov
push
test
lods
in
adc
fadds
iret
es
push
inc
or
or
jne
fidivs
dec
jmp
cwtl
sbb
xlat
and
mov
add
push
and
xlat
lret
shll
jge
mov
xchg
jle
push
loopne
test
fdivrs
mov
flds
dec
sbb
dec
std
lret
les
inc
xchg
fldl
jmp
nop
rcrb
lret
xrelease
mov
push
jae
daa
fldl
inc
or
pop
fidivs
fsts
clc
sbb
out
and
mov
sub
aad
cwtl
icebp
mov
inc
mov
int3
jge
or
dec
add
inc
adc
push
jecxz
repnz
sbb
push
outsl
dec
das
mov
mov
jae
xchg
mov
mov
push
cld
xchg
or
ja
and
jecxz
mov
mov
pop
pop
hlt
cmc
xchg
int3
nop
adcl
adc
scas
fcoml
fs
mov
adc
dec
push
pop
cltd
pushf
mov
jnp
and
lea
nop
mov
mov
dec
lea
and
push
or
mov
xor
sub
jo
pop
inc
hlt
mov
sub
into
cwtl
inc
mov
push
in
stos
cmp
push
mov
lret
mov
push
outsl
fwait
mov
jb
aam
jae
xor
cmp
mov
xlat
js
jno
xor
cmp
push
adc
jmp
arpl
push
and
cmp
loop
icebp
dec
cld
xchg
and
add
mov
in
jmp
sahf
jl
push
fs
pop
push
pop
scas
fnsave
mov
mov
sarl
mov
dec
les
mov
lcall
in
push
sti
push
test
sbb
push
outsb
pop
sahf
pop
jo
dec
mov
adc
movsl
mov
sarb
xor
inc
outsl
sbb
repz
cwtl
and
popa
inc
mov
clc
idivl
dec
dec
xor
imul
sub
idivb
xchg
or
inc
mov
sub
or
data16
mov
ljmp
xchg
add
aad
lcall
xchg
dec
sub
fldl
push
mov
fmull
cmpsb
mov
xor
stos
out
pop
adc
and
or
aaa
rcr
mov
fadds
sbb
fcoml
clc
in
mov
or
sub
or
sti
out
sarl
push
or
mov
mov
fsubp
and
and
sbb
test
les
scas
ljmp
lahf
mov
fcom
iret
mov
int3
cmp
inc
fistpll
stc
jmp
inc
push
push
or
addb
pop
sub
int
loope
lahf
sbb
pop
jo
decb
sub
cmp
pop
mov
pop
cmpsl
pop
enter
sbb
stc
and
and
mov
js
lods
fcoms
sbb
cmp
jmp
cmp
hlt
hlt
repz
das
and
add
lock
js
call
and
jo
xor
arpl
ficoml
sbb
mov
popf
dec
or
mov
pop
pop
into
ret
sbb
insb
or
add
pop
leave
std
sahf
mov
call
push
popf
xlat
mov
loop
les
lea
ja
bound
mov
ret
push
fldcw
lds
xchg
imull
push
mov
sub
and
lods
test
push
aam
test
js
clc
jne
mov
sahf
sub
inc
mov
and
ljmp
mov
xchg
sarb
imul
sbb
cmpsb
rcrb
mov
fidivrs
adc
jno
pop
repz
mov
dec
shr
adc
loopne
out
and
inc
or
std
sti
repz
mov
lcall
inc
sbb
mov
pushf
call
les
fsub
test
aas
or
test
push
pop
xchg
ljmp
stos
clc
out
jle
test
add
or
inc
ja
xchg
pop
cmp
sub
adc
mov
inc
clc
or
mov
jge
dec
cmp
push
xor
ss
fstps
cmc
pop
les
pop
ss
jo
xor
inc
sbbl
sub
or
in
dec
sbb
or
mov
jge
add
dec
xor
mov
or
cmp
int3
dec
jmp
lock
into
mov
stos
mov
mov
cmpsl
sub
push
ds
xchg
in
mov
push
lea
and
leave
insl
out
cmp
sbb
xor
fcoms
fwait
aad
es
push
cwtl
int
jae
push
test
mul
outsb
arpl
inc
xchg
and
xor
xor
in
and
pop
sub
cmp
fs
sbb
cmp
jo
cmpsl
inc
jae
pop
out
lcall
orl
into
mov
push
cld
and
repz
xor
cmp
lcall
mov
mov
inc
aam
or
mov
mov
roll
jo
inc
pandn
ss
sub
aaa
dec
movsl
es
xchg
cmp
stc
jg
sub
cmpsl
or
jo
xchg
fisubs
pushf
inc
rorl
loope
mov
stc
or
pop
les
ret
mov
pop
pop
and
jecxz
push
jp
xchg
lds
mov
movb
das
idivb
pop
daa
mov
push
pop
jp
scas
mov
dec
pop
mov
test
ds
daa
icebp
push
in
lcall
xchg
or
mov
or
shrl
push
dec
call
or
scas
dec
xor
fadd
pop
jno
mov
test
decb
mov
push
imul
sub
push
aaa
jo
jp
shlb
mov
cltd
mov
clc
int3
inc
rcrl
or
add
out
mov
ss
pushl
mov
test
mov
insb
in
inc
mov
test
out
call
mov
mov
mov
jae
mov
stc
sub
fisubrl
mov
push
cmp
cmc
hlt
std
nop
xlat
mov
jns
pop
sti
and
jae
add
xor
jle
pop
stos
cvtpi2ps
lea
jle
xchg
dec
jb
test
lds
adc
loopne
and
jne
repz
sbb
xchg
stos
mov
je
jmp
out
add
mov
cmp
xchg
pop
push
jo
pop
popa
mov
ret
xchg
pop
cmp
mov
xor
int
mov
test
push
cmp
daa
mov
cmp
lret
sbb
sbb
pop
push
mov
and
icebp
push
mov
xchg
mov
insb
xor
gs
inc
enter
lods
out
jp
adc
ljmp
cmc
scas
inc
add
jmp
or
outsb
inc
mov
negb
jnp
dec
mov
stos
mov
ret
dec
or
es
cmp
fs
cld
scas
divl
jmp
xchg
dec
rcrl
pop
into
in
lock
cmp
or
lea
stc
aas
std
insb
loope
out
addr16
and
cwtl
dec
rclb
lods
popa
jbe
cltd
push
add
xchg
stos
mov
add
dec
xchg
mov
jmp
imul
gs
dec
mov
sbb
loop
fdivrs
jnp
es
loope
out
xchg
push
andl
fsubr
mov
movsl
push
xor
test
andb
jecxz
icebp
sbbl
ljmp
mov
loope
inc
fdivs
mov
pop
mov
xchg
dec
shll
clc
mov
fistps
stos
cmp
int3
inc
push
mov
xchg
incl
in
dec
push
pop
xchg
sbb
inc
mov
push
or
or
movsb
loopne
jle
or
jl
insb
mov
ljmp
cld
loope
mov
jp
testl
les
iret
inc
subl
xchg
dec
xor
push
dec
aad
or
repz
jbe
mov
fsubs
mov
dec
loopne
out
jbe
lret
int
pop
movl
dec
out
loopne
pop
cmp
scas
jb
cmpsb
scas
push
daa
mov
lret
sbbb
mov
dec
ret
ss
leave
push
cmp
xchg
mov
push
xor
sbb
sbbb
test
dec
sbbb
das
sub
xchg
push
inc
xchg
mov
fcompl
dec
and
aaa
jns
in
aad
sarl
sbb
sbb
push
pop
inc
add
pop
jl
lret
mov
repz
cmp
out
cwtl
cmp
int3
in
pop
int
cmpsl
lret
sbb
xchg
jge
add
jmp
shlb
test
mov
leave
popa
sub
cmp
adc
pop
fnop
in
stos
lcall
clc
mov
dec
cmp
mov
aad
pushf
and
fdivrp
inc
and
mov
out
mov
push
movsb
mov
gs
dec
dec
mov
xorb
scas
jno
inc
push
mov
subl
stos
jp
lods
int
notb
mov
lret
lods
push
aaa
out
call
fstps
jg
sub
xor
pop
xchg
incb
sub
xor
out
movsl
mov
xchg
adc
insb
inc
or
jo
adc
jge
jb
jno
leave
or
das
fdivl
xchg
mov
and
gs
add
and
cmp
add
sbb
jecxz
push
aaa
rcrb
push
jnp
and
cli
xor
ret
repnz
push
pushf
cmpsb
jnp
inc
cmpsb
xlat
sbb
test
xchg
ja
lret
stos
arpl
sub
jae
adc
addr16
sbb
push
mov
xor
fnsave
pop
mov
mov
pop
xchg
sbb
fcoms
adc
push
push
repnz
ds
push
popa
icebp
pop
xchg
negl
repnz
ds
or
mov
in
repz
xchg
add
jne
je
and
cli
orb
jge
rcll
add
mov
sub
fwait
pop
cmp
cmc
bound
fs
sarb
dec
inc
cmp
repnz
dec
push
or
fstpl
stos
cmp
pop
mov
aas
push
sbb
pushf
dec
push
sub
decb
and
push
fisubs
or
adc
push
sub
jl
mov
lea
fisttps
mov
sub
cmpsb
pusha
fs
xor
mov
rcll
xlat
in
or
sub
cmpsb
inc
sti
movsb
mov
mov
aaa
sub
sbbb
jl
and
sbb
insb
xchg
pop
fcmovbe
out
jnp
and
push
mov
pop
es
cli
mov
mul
sub
sbb
mov
in
mov
roll
inc
test
sti
test
mov
cmpsw
inc
popa
xlat
or
sti
and
adc
out
aam
stc
sub
dec
or
sbbl
xchg
out
mov
repz
pop
or
add
imul
jo
std
arpl
mov
aad
mov
cmp
or
cmp
cmpsb
mov
dec
into
aas
cmp
cmp
sbbl
cmpsl
push
mov
test
xchg
aam
sbb
inc
cmp
cmp
ds
iret
and
push
loope
push
mov
sbb
cmpsl
je
jg
sbb
movsl
mov
in
mov
and
push
adc
in
daa
sbb
scas
push
iret
push
lock
je
add
mov
cmp
jnp
push
ret
pop
and
cmpsl
push
out
ret
adc
inc
cs
out
pop
sbb
pop
dec
enter
insb
push
xchg
jno
pop
pop
inc
movsl
xor
and
sbb
cmp
jb
lods
jp
imul
xor
jo
jge
push
pop
aas
scas
sub
pop
pushf
xor
fs
mov
mov
vandps
sbb
rcll
ret
aad
jg
js
adc
mov
sub
pusha
mov
repz
push
cmpsl
mov
mov
neg
scas
mov
or
arpl
dec
lock
pop
jns
fnstcw
xchg
cli
cmp
sub
mov
leave
mov
and
cmp
je
aad
mov
adc
and
pop
rorb
stc
lods
push
xchg
mov
jp
icebp
xlat
xorb
inc
lds
ret
push
mov
pop
cmp
adc
rclb
pop
dec
cltd
push
loope
adc
push
push
xchg
fisttps
int3
mov
jno
xor
inc
xchg
and
hlt
insb
repz
test
pop
jae
xchg
sub
inc
dec
pop
or
jle
fldcw
pop
addr16
push
insb
jo
jl
lea
inc
dec
lea
sbbb
enter
popf
sbb
dec
in
inc
iret
push
out
cli
jg
orps
pop
dec
fidivs
mov
jns
xor
mov
cmpsl
test
sub
cmpsb
sbb
cld
ret
xchg
jno
mov
pop
push
sahf
push
in
push
fs
mov
in
ret
fwait
in
jecxz
fcomps
sbb
dec
mov
lahf
sbb
mov
js
jnp
mov
int
mulb
xchg
mov
hlt
xchg
loop
jns
add
sub
stos
icebp
dec
sub
cmpsl
dec
sbb
sub
movhps
popf
stos
dec
xor
cwtl
mov
in
push
pop
mov
inc
xchg
imul
jns
jmp
mov
dec
sbb
cmp
push
sbb
jle
push
push
cmp
nop
mov
imul
out
jb
movsb
pusha
pop
mov
incb
hlt
push
rorb
mov
addb
aas
stc
mov
mov
xchg
inc
lret
test
in
xchg
int
jbe
rcl
add
push
ljmp
pop
scas
ja
addr16
fwait
pop
cmp
call
inc
push
and
int
inc
in
inc
test
ss
mov
inc
sarb
fs
xchg
xchg
shrb
add
shrl
fwait
xchg
sbb
push
mov
and
sub
inc
dec
xchg
mov
rorl
push
xor
nop
or
cltd
push
out
les
xor
sar
movsb
xchg
xchg
push
loopne
stos
pop
xchg
mov
sbb
sbb
sub
mov
sarb
sti
mov
pop
inc
std
outsb
dec
add
mov
push
out
js
push
ret
daa
scas
lret
add
push
push
int3
cwtl
loopne
mov
mov
sub
inc
sub
sbb
inc
mov
repz
xlat
fstl
outsb
jp
loop
jae
sar
int3
ret
insl
out
xor
insl
ja
insb
xor
test
xchg
cmp
cmc
jb
xchg
syscall
data16
dec
idivl
std
fwait
dec
pop
jmp
test
test
enter
or
popf
mov
sub
xchg
push
pop
fs
sahf
sbb
cmp
mov
arpl
mov
push
or
mov
sub
and
arpl
jp
mov
mov
outsb
mov
hlt
ret
out
fildl
sub
test
test
iret
ss
cmp
stos
lret
push
out
xchg
leave
push
mov
xor
aad
bound
push
jae
xor
sti
icebp
sbb
test
sub
sub
jns
jge
jb
pop
push
lret
mov
icebp
cmp
mov
jg
aam
mov
cltd
std
push
mov
and
inc
mov
mov
and
popa
leave
mov
sub
cmp
mov
popa
cmpsb
dec
push
push
stc
daa
in
cmpsb
out
add
xchg
cltd
fidivrs
aas
fidivl
or
mov
int3
adc
pop
mov
das
jne
push
jmp
mov
dec
sub
pop
mov
das
les
jg
imul
stos
jecxz
push
fiadds
or
jg
add
add
mov
sub
outsb
or
cmpsl
cmp
pop
add
push
and
pop
out
xchg
es
xchg
add
aaa
jl
mov
iret
add
push
or
mov
sbb
jae
push
fnstcw
inc
mov
ja
fdivr
stos
sub
pusha
add
xchg
loopne
xchg
cmp
dec
shll
notl
cs
pop
insb
test
xor
xor
add
jge
push
xchg
out
je
pop
in
lock
cmp
movsl
dec
cmpsb
sub
jle
aas
sub
add
leave
test
mov
add
add
inc
idivl
jae
aad
mov
fsubrp
push
lock
jae
mov
jo
pop
sub
add
dec
push
pop
mov
lods
jno
mov
and
daa
xor
addb
xchg
jmp
shr
inc
hlt
mov
gs
jns
xlat
add
xor
lret
out
xchg
out
out
mov
rol
ja
cmpsb
je
adc
sub
out
shrl
adc
dec
addr16
mov
lret
cmpsl
cwtl
mov
out
mov
or
loope
push
mov
dec
adc
cmpsl
mov
inc
push
xor
mov
mov
mov
icebp
fiadds
cmp
stc
fidivrs
sbb
sbb
push
pop
xchg
inc
subl
mov
stc
dec
mov
cmpsl
in
xchg
jge
xchg
xchg
cmp
xchg
push
dec
push
mov
push
fs
inc
pop
outsb
add
jae
sbb
rcrl
sbb
cmp
mov
inc
daa
sub
ss
dec
and
or
lock
xchg
mov
sub
xchg
jo
pushf
xor
lcall
xchg
adc
sub
ljmp
cmpsb
not
xorl
cmp
std
ret
in
mov
out
xor
adc
rcpps
mov
dec
mov
imul
dec
mov
mov
lahf
pop
mov
jp
aaa
imul
daa
test
push
dec
inc
and
dec
fisttpll
out
in
nop
fwait
sub
stc
fdivrl
std
cmp
mov
push
sbb
movsl
add
daa
add
xor
std
cs
nop
add
push
mov
pop
adc
aas
cli
dec
stos
xor
sbb
lret
inc
aaa
xchg
xchg
jno
lds
and
adc
jmp
in
xchg
scas
pushl
sub
shll
dec
xchg
sub
inc
arpl
mov
out
in
mov
out
enter
ret
push
cltd
dec
mov
mov
jmp
loop
mov
out
test
pop
sbb
shrl
dec
fdivl
sbb
jg
pusha
fdivl
xchg
and
movsl
stos
adc
cmp
lahf
aam
and
fucomp
inc
lds
fsubrs
das
stc
dec
push
lea
fwait
add
add
push
jp
ret
pop
adc
or
and
mov
ror
jnp
cmpb
hlt
mov
shll
insl
sbb
clc
js
stos
add
pop
xor
popf
lds
out
or
push
push
lods
fists
arpl
ret
xchg
xor
lcall
add
sbb
loop
and
cmp
dec
jl
push
les
sti
lret
test
cmp
xchg
lahf
sbb
rcr
xorl
xchg
cmpsl
adcl
mov
iret
cmp
mov
out
stos
inc
push
loopne
in
test
leave
mov
push
cwtl
push
shlb
jge
push
mov
cmp
inc
cmpsl
rcl
test
scas
lds
leave
mov
cmp
jecxz
ret
or
push
jle
fdivrs
lahf
push
inc
dec
xor
add
xor
outsb
lea
pop
pop
rolb
es
rorl
push
insl
adcb
or
mov
jge
lcall
dec
sbb
test
fadds
or
lcall
bound
sub
sub
xor
xchg
fimuls
dec
fistpll
lock
push
dec
subl
mov
fs
sub
rcll
and
sbb
inc
mov
imul
dec
aas
mov
cmpsb
loopne
rolb
dec
adc
rcll
popa
iret
aam
shll
fists
pop
lods
mov
mov
mov
sbb
xchg
mov
call
cmp
faddl
push
cmp
inc
sahf
inc
jp
arpl
loop
push
cmp
jecxz
sub
cmc
sub
pop
es
xor
adc
lcall
sahf
xchg
inc
cltd
sub
xchg
jecxz
sbbb
push
push
sub
sub
and
nop
std
cmp
jne
push
cltd
jbe
in
mov
std
push
inc
mov
mov
addr16
in
xchg
sub
in
cs
addl
xor
loopne
inc
daa
jmp
cli
sbb
or
dec
adc
dec
clc
outsl
shll
xchg
mov
and
shl
push
xor
in
push
cmpsb
fcomps
adc
push
mov
in
mov
sbb
pandn
add
ljmp
ss
jge
mov
mov
xor
ret
and
fidivrs
sub
and
push
dec
xchg
cwtl
adc
rcl
icebp
outsb
arpl
dec
bound
shrl
cmpsb
xor
rolb
std
mov
xor
sub
and
dec
sub
add
xchg
xchg
pop
das
inc
aad
xor
mov
movl
popf
outsb
lret
int3
leave
jle
add
xor
fldenv
lea
jns
add
and
ss
add
xchg
jnp
xchg
jne
repnz
iret
call
pop
lret
test
jp
adc
mov
xchg
push
jns
cld
pop
pop
test
inc
sbb
in
xor
pusha
mov
xchg
fistpl
je
mov
dec
mov
addr16
push
into
in
push
fcomps
adc
icebp
jb
add
xchg
xchg
scas
push
jnp
and
mov
jnp
mov
lds
inc
lahf
pop
add
mov
add
cmc
ds
sahf
sbb
fstpl
mov
fsubl
mov
movl
orl
test
add
ret
and
iret
lret
pusha
decl
ss
sbb
cmp
push
mov
inc
adc
fcoms
bound
outsb
fcmovnu
insl
jae
shlb
fsubrs
mov
pushl
iret
mov
test
sbb
cmp
mov
test
outsb
dec
sub
in
mov
inc
inc
adc
dec
pop
cmp
into
sub
addr16
xchg
addr16
jmp
cmpb
xchg
or
sub
ds
dec
in
xchg
xor
fildl
das
push
dec
movl
jns
pop
dec
sub
jo
cs
icebp
push
pop
mov
mov
push
xchg
mov
push
fwait
int3
scas
jecxz
incb
data16
and
insb
xchg
test
cmpsl
push
fnstenv
cmp
xor
movsb
push
xchg
xor
aas
fists
ds
das
adc
lds
push
movsl
mov
out
in
or
hlt
arpl
outsb
push
jge
xchg
pop
jne
jmp
cli
adc
outsb
es
sarb
ljmp
xchg
lds
gs
std
inc
test
pop
lret
je
fisttpl
pop
in
sti
mov
mov
xor
filds
inc
pop
jnp
or
ret
fistl
push
dec
out
aas
sub
ss
inc
popf
insb
jg
inc
and
aad
push
jne
push
inc
sub
mov
dec
sbb
inc
ret
sbb
xor
pop
mov
add
iret
mov
test
ja
xchg
popa
xchg
imul
mov
ljmp
arpl
pop
pusha
push
sbbl
pop
jl
xchg
jns
fwait
jae
jae
inc
aas
mov
jne
xor
ret
xlat
ds
cld
mov
pop
sbb
into
jl
xor
add
pop
and
jno
in
cld
push
out
data16
out
jne
mov
jge
mov
push
pushf
sbb
xlat
outsb
add
push
inc
gs
test
shlb
jle,pn
popf
jmp
stos
jno
insl
daa
pop
iret
in
loop
loope
rcl
mov
out
sbb
scas
xor
pop
daa
lea
adc
cmp
lods
lea
mov
out
mov
adc
icebp
cmc
cmp
ret
rorl
in
dec
jecxz
mov
les
and
add
xchg
shlb
or
jb
cltd
add
lods
gs
jg
sar
mov
outsb
int3
cwtl
bound
scas
mov
push
jno
pop
xor
cmc
or
push
jl
cld
pushf
fidivs
lods
mov
mov
xlat
or
sbb
lret
jnp
and
dec
fisubs
mov
sbb
je
es
cs
std
xchg
fsubrl
push
js
mov
xchg
fists
pop
gs
out
movsb
lods
mov
vmwrite
stos
cwtl
fmuls
lea
js
jle
int
push
in
sar
jmp
test
jo
xchg
iret
leave
cmp
clc
jg
int3
mov
inc
fwait
mov
rcrb
test
mov
mov
ret
icebp
adc
dec
ret
insl
inc
dec
sbb
invd
iret
data16
scas
xchg
xchg
lea
pop
aad
pop
push
xor
fwait
popa
in
inc
adc
cmp
xchg
les
or
push
insb
mov
push
cmp
out
jg
rorl
std
push
push
imul
adc
jmp
dec
pop
mov
and
inc
orb
mov
pop
mov
sbb
mov
test
outsb
mov
lgs
rcrl
outsl
movsl
or
hlt
mov
fldcw
rcrb
sahf
jns
mov
repz
into
aas
dec
rolb
cmp
mov
in
shlb
mov
xor
jmp
mov
leave
mov
in
mov
jb
mov
cmpl
arpl
addr16
dec
adc
stos
inc
pusha
stc
jp
out
out
data16
aaa
fildl
push
xchg
clc
loopne
jl
xor
pop
inc
roll
cmpsl
ljmp
mov
faddl
cwtl
lret
jge
xchg
xor
clc
pop
insl
xor
test
push
ret
and
sbb
jo
cmp
push
mov
xchg
int3
push
gs
pop
lret
fldl
jb
divl
lods
jg
or
fs
outsl
xlat
ljmp
aam
xchg
dec
add
dec
pcmpeqd
xchg
pop
int
adc
pop
shrl
sbb
ds
adc
pushf
mov
aam
addr16
mov
in
pop
je
push
push
in
dec
int
adc
enter
decl
push
dec
push
popa
mov
leave
push
jmp
push
insb
jp
push
lods
ljmp
popa
mov
or
bound
jb
xchg
test
mov
cmpl
or
mov
sub
or
sti
sub
sub
in
push
shll
sbb
jg
xor
inc
imul
sarb
stc
call
push
pop
rorb
pop
roll
inc
xchg
scas
inc
pop
fidivrl
popf
pop
jne
out
cltd
pushf
int
and
inc
or
mov
pop
movl
or
add
mov
callw
fcompl
xor
xor
xor
sbb
pop
ret
jns
jmp
mov
xor
or
push
cmp
test
sarl
sub
xor
mov
jl
rolb
xchg
jae
xchg
loope
mov
lret
cmp
mov
or
lds
shr
pop
or
in
test
pushl
sbb
dec
sti
int
add
xchg
jno
jne
shrb
jge
das
insl
mov
adc
inc
scas
cmp
dec
cwtl
cmp
adc
or
imul
subl
sti
push
xor
rorl
push
jns
mov
pop
cmp
insb
sbb
cmp
cmc
mov
stos
ret
xchg
aaa
jle
mov
cmp
inc
gs
mov
dec
nop
hlt
push
sbb
push
into
sarb
fstpl
jbe
bound
and
jmp
jmp
fisubrs
lret
addr16
aas
sub
mov
xchg
inc
stos
fists
jnp
mov
pop
pop
mov
and
jle
dec
and
test
popa
mov
testl
popf
mov
xchg
ljmp
pop
jmp
xorl
mov
mov
aaa
outsl
adc
aas
mov
addr16
fidivs
mov
sbb
sbb
pop
add
imul
add
call
fdivr
cld
test
clc
lret
sbb
stos
mov
jne
lahf
sbb
rcll
add
cwtl
add
insb
jl
popf
or
fcomip
xchg
jmp
pop
jecxz
nop
push
shll
or
test
outsb
push
lret
bound
ljmp
jmp
adc
cmp
sbb
sub
mov
pop
mov
shl
dec
adc
pushf
stos
adc
xchg
push
cmpsb
outsb
orb
je
dec
jmp
stc
xchg
popa
cli
ret
scas
pop
dec
pop
cmpsb
dec
aaa
loope
xor
cmp
sbb
adc
xchg
jecxz
mov
es
jns
negl
sbb
shl
pop
push
jge
aas
int
mov
mov
je
rorb
into
jle
jg
icebp
jne
xchg
fadd
js
lcall
jo
std
adc
and
pop
movsb
outsb
mov
rolb
outsl
syscall
pusha
lret
dec
nop
pop
fiadds
iret
pop
push
xor
aad
dec
dec
jge
int
or
ljmp
and
mov
ljmp
lret
fs
inc
sbb
xchg
or
fwait
mov
mov
mov
dec
push
cmp
mov
mov
mov
xchg
daa
fbstp
cmp
mov
into
ret
jmp
inc
cli
pop
clc
cs
adcb
add
loopne
test
push
ss
insl
push
dec
dec
andl
and
fwait
jns
int
orl
mov
mov
sti
dec
mov
mov
sub
and
xchg
pop
push
dec
aaa
les
cmp
xor
xorb
std
cli
inc
roll
adc
dec
jbe
push
lret
mov
pop
xor
fsubp
into
jno
mov
sbb
xchg
pop
xchg
nop
dec
aad
xchg
js
outsb
push
ljmpw
es
adcb
mov
dec
adc
adc
sub
jo
rorb
adcb
jg
adc
mov
inc
mov
test
push
add
bswap
sub
mov
dec
ror
int3
add
std
mov
push
ret
jae
insb
xchg
xor
jne
ret
pusha
std
or
pushf
adc
pushf
cs
arpl
xchg
in
mov
repz
lahf
in
xchg
pop
lds
fstpt
rol
xchg
sbb
fdivs
jg
out
shlb
sbb
js
scas
jnp
jle
dec
cmp
dec
xchg
jmp
out
jnp
ljmp
and
loop
xor
jae
ret
sub
push
sbb
pushf
lods
jg
xlat
dec
mov
imul
jecxz
lods
dec
fiaddl
adc
jno
sbb
test
iret
or
into
and
nop
sub
mov
test
bound
in
jae
roll
aad
inc
adc
xchg
sub
xchg
push
mov
mov
pop
andl
add
movsb
sarl
and
call
stc
sub
test
pop
lret
into
push
push
mov
stc
pop
xchg
mov
push
dec
dec
or
stos
sbb
popf
lock
sub
mov
jne
xchg
push
push
inc
inc
push
dec
xchg
push
xor
sbb
xor
roll
push
inc
cmc
mov
in
fnsetpm(287
add
addr16
rep
pusha
movsb
fsubrl
ja
popf
scas
sbb
xor
aaa
or
jg
mov
mov
out
sbb
fnsave
das
mov
jl
cmpl
xor
or
scas
dec
imul
mov
jg
enter
push
cmp
xchg
clc
scas
adc
mov
or
ret
mov
and
cmp
lret
dec
xor
xchg
aas
mov
sahf
imul
xor
adc
and
dec
mov
stos
or
mov
inc
jmp
cmc
pop
loope
in
sub
jge
shlb
sbb
loope
xor
imul
popf
insb
inc
stc
push
dec
mov
mulb
in
mov
xchg
ja
and
cltd
push
dec
xor
cmp
sarl
lret
fmulp
mov
repnz
jbe
std
mov
or
mov
inc
xor
mov
test
xchg
repz
popf
sbb
mov
mov
in
cmpsb
popa
movsl
lock
lahf
lods
or
sbb
cmpsl
pop
mov
sbb
inc
jmp
std
mov
push
pop
add
out
sbb
cmpsb
arpl
xchg
rorb
add
repz
cltd
xchg
mov
stos
inc
data16
callw
cmp
enter
cmp
xor
jmp
push
dec
cld
hlt
mov
rcll
inc
mov
imul
bts
enter
std
bound
add
jge
pop
sbb
popa
lock
mov
stc
inc
cld
push
mov
push
jge
lods
and
or
icebp
daa
push
mov
mov
mov
xor
cld
mov
in
gs
cmovae
adc
dec
mov
inc
xchg
cmp
movsb
cmp
and
or
roll
or
push
rorb
lock
stos
jns
add
sbbl
fildll
orb
mov
repz
adc
out
jae
ss
sub
orb
add
call
jbe
call
push
ljmp
dec
fidivrs
xchg
cmp
lahf
ljmp
repnz
xchg
outsb
adc
in
mov
and
ljmp
or
aad
outsb
add
jge
mov
mov
xor
loope
xor
xor
pop
call
jmp
xor
shlb
adc
and
xor
mov
push
mov
sub
and
or
jle
jnp
lret
shll
xor
pop
negb
sbb
mov
nop
lret
dec
cmpsl
outsb
ds
cmp
scas
icebp
sahf
test
or
data16
mov
in
repz
ds
out
mov
cltd
mov
sub
xchg
push
out
lock
jecxz
daa
or
push
mov
mov
lret
add
dec
or
in
or
pop
xchg
jl
lods
push
push
daa
call
mov
push
outsb
movsb
in
dec
out
mov
mov
adc
xlat
push
cmc
push
andl
jae
lock
adc
in
cmp
xor
stc
test
mov
push
sarl
bound
xchg
mov
cmp
xor
roll
shr
push
xchg
mov
ret
nop
les
rcrl
dec
lret
repz
pusha
cltd
push
inc
enter
mov
mov
popf
xchg
pop
xlat
negl
cmc
das
ljmp
mov
xchg
lds
data16
push
add
adc
orb
int3
ds
pusha
pop
scas
rcll
mov
xchg
divl
decb
mov
jecxz
push
push
cmpsl
push
gs
mov
mov
repz
xchg
test
call
faddl
xchg
in
out
or
sub
cs
and
jo
lahf
jnp
or
lock
hlt
inc
xor
pop
add
or
jns
mov
outsl
jg
decb
andl
push
mov
mov
jmp
push
repz
ss
or
inc
sub
push
les
add
in
test
dec
inc
jne
inc
mov
leave
xchg
jno
fidivl
xor
xor
pop
pop
cmp
xchg
icebp
jecxz
adc
push
dec
loope
mov
cmp
dec
outsl
lret
sub
and
repz
cs
add
inc
xchg
popf
mov
mov
mov
subl
push
stos
or
add
ja
mov
or
mov
bound
mov
aam
xorb
push
sbb
cmpsb
dec
push
push
into
fcmovnbe
inc
or
aas
push
mov
insb
dec
ljmp
sub
fsubl
repz
lock
in
jmp
arpl
jle
jne
add
cwtl
mov
daa
jo
or
and
rclb
pop
sbb
mov
pop
sahf
aas
dec
lds
xor
outsb
or
fidivs
nop
ret
mov
xchg
xchg
xchg
pop
push
xor
push
subl
cld
jbe
popl
aaa
aam
xchg
das
ss
testb
sub
nop
sbb
std
out
shlb
mov
fsubrs
push
imul
xor
stc
sub
lret
mov
stc
sub
sub
mov
jno
inc
and
adc
inc
mov
leave
in
push
adc
outsl
sub
mov
sbb
xor
push
lret
fcompl
push
ret
mov
decb
aad
adc
in
cmp
leave
dec
ss
cmp
dec
shlb
sbb
jbe
test
xchg
fwait
test
or
jne
mov
shr
or
xchg
arpl
jmp
pop
gs
mov
icebp
into
pop
sub
out
dec
xchg
xlat
inc
jb
lret
movhps
or
orb
clc
mov
call
mov
imul
xchg
popf
mov
pop
push
ret
jns
mov
or
push
cmpsb
jle
or
cmpsl
aas
inc
xchg
dec
adc
call
jae
in
pushf
cmp
cmp
movsl
mov
daa
and
imul
or
std
dec
mov
jecxz
bound
outsb
rcrl
