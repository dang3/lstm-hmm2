jo
test
push
mov
movsl
mov
push
mov
fimull
jnp
movl
jnp
jnp
jnp
sub
jnp
rolb
jnp
sbb
jnp
cmc
mov
add
add
add
add
push
icebp
jle
mov
jle
fucomip
jle
lret
out
jle
jle
gs
jle
icebp
out
adc
out
jle
lret
out
jle
cmp
jle
inc
jmp
xor
in
jle
imul
and
jle
ljmp
jo
out
fadds
jle
stc
out
jle
sti
out
jle
add
add
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
add
popa
insb
dec
popa
outsb
fs
add
add
jp
outsl
push
gs
jne
arpl
add
inc
gs
jb
arpl
jae
imul
inc
gs
js
je
outsl
fs
push
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
inc
gs
imul
je
add
inc
gs
outsl
outsb
jae
insb
gs
arpl
outsb
inc
jne
data16
outsb
outsw
add
add
inc
bound
addr16
jb
jae
outsb
je
add
inc
gs
jb
jbe
push
jns
gs
add
add
je
imul
gs
add
dec
gs
jo
popa
insb
imul
inc
gs
outsl
outsb
jae
insb
gs
outsl
fs
add
je
jns
je
insl
push
imul
imul
jns
add
add
je
popa
jo
push
popa
jb
insl
gs
jb
add
add
je
popa
jae
inc
jb
outsl
jb
add
push
popa
imul
insb
gs
bound
arpl
add
add
je
push
inc
gs
je
jo
add
push
gs
popa
jns
jb
fs
imul
je
imul
add
inc
push
js
inc
add
add
je
imul
js
inc
add
add
popa
insb
inc
gs
imul
popa
jae
add
add
jae
push
push
dec
gs
popa
addr16
add
add
je
insb
imul
inc
outsl
jb
popa
je
popa
insl
gs
add
add
push
imul
jae
bound
add
inc
outsb
jne
inc
imul
gs
imul
add
jo
imul
imul
push
outsl
inc
jae
imul
inc
insb
addr16
imul
je
outsl
insl
bound
outsl
js
js
add
add
insb
insb
push
imul
dec
data16
je
arpl
add
jo
imul
gs
add
add
jne
inc
push
imul
add
inc
outsb
fs
outsb
jne
add
push
gs
popa
jb
je
insb
imul
add
add
imul
gs
fs
gs
jo
add
inc
outsb
popa
bound
imul
add
push
imul
imul
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
add
jno
add
adcb
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
pusha
adc
add
add
mov
add
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
pop
adc
add
fadds
inc
add
lea
movzwl
inc
sub
inc
sub
sub
dec
jne
lea
mov
movswl
inc
pop
dec
inc
pop
inc
or
pop
lea
mov
dec
dec
dec
dec
xor
lea
mov
dec
inc
add
ret
push
add
add
or
lea
mov
dec
inc
dec
push
push
push
push
add
xor
lea
push
imul
inc
add
dec
dec
xor
lea
imul
inc
mov
sub
push
dec
add
xor
and
lea
push
mov
inc
push
inc
dec
pushl
dec
call
xor
add
lea
mov
dec
inc
inc
inc
or
pop
ret
mov
dec
dec
mov
dec
add
cmp
jb
xor
mov
lea
mov
xor
inc
add
xor
inc
inc
pop
sub
lea
test
jbe
mov
add
dec
dec
inc
or
lea
inc
dec
inc
sub
and
lea
movzbl
dec
add
inc
dec
sub
or
lea
mov
inc
and
inc
inc
mov
inc
and
movzbl
lea
movsbl
add
dec
dec
and
dec
sub
mov
or
lea
mov
imul
dec
mov
dec
dec
mov
dec
add
lea
movzbl
add
dec
dec
jne
dec
mov
dec
or
lea
dec
inc
dec
inc
add
lea
mov
movzwl
sub
add
inc
dec
or
lea
imul
mov
dec
dec
test
jbe
sub
add
or
lea
mov
dec
dec
inc
inc
or
lea
mov
inc
add
inc
inc
sub
and
lea
mov
dec
inc
and
dec
inc
mov
or
lea
movzbl
movsbl
inc
add
inc
inc
and
add
add
mov
lea
mov
movzbl
dec
inc
mov
inc
inc
mov
and
lea
movzbl
movzwl
dec
add
add
dec
and
add
sub
movzbl
lea
mov
xor
add
jmp
add
or
lea
mov
add
inc
pop
ret
push
dec
sub
sub
lea
movzwl
add
dec
dec
sub
inc
and
lea
mov
inc
inc
dec
dec
and
push
lea
call
mov
add
inc
dec
mov
sub
dec
push
add
call
lea
mov
imul
dec
add
inc
dec
xor
lea
mov
cmp
je
sub
push
inc
call
sub
iret
add
sub
lea
imul
dec
inc
pop
dec
ret
push
inc
add
lea
mov
dec
dec
inc
dec
xor
push
lea
imul
push
sub
push
sub
push
sub
call
inc
push
or
lea
imul
mov
add
mov
sub
sub
mov
dec
and
test
je
lea
mov
sub
add
dec
sub
or
lea
movsbl
mov
inc
dec
dec
inc
add
lea
mov
dec
repnz
dec
inc
add
dec
jmp
xor
lea
imul
inc
inc
inc
inc
and
lea
imul
sub
dec
jmp
pop
pop
ret
push
dec
push
dec
call
and
lea
movswl
inc
inc
add
dec
add
lea
imul
pop
ret
sub
dec
mov
dec
inc
mov
inc
or
mov
lea
imul
mov
dec
sub
xor
dec
sub
mov
sub
lea
inc
mov
add
inc
dec
inc
and
cmp
jb
lea
push
mov
inc
push
add
dec
push
dec
sub
mov
lea
mov
xor
sub
dec
xor
sub
inc
xor
and
lea
push
mov
sub
xor
inc
inc
mov
dec
and
mov
lea
movzbl
add
dec
inc
inc
add
and
lea
add
mov
dec
movzbl
inc
inc
inc
xor
lea
mov
add
inc
inc
dec
inc
mov
sub
lea
movsbl
add
dec
dec
cmp
jb
inc
xor
sub
lea
mov
inc
mov
dec
dec
inc
inc
xor
lea
jmp
push
mov
movzbl
sub
call
inc
inc
dec
and
lea
movzbl
call
call
call
call
dec
inc
add
dec
sub
lea
call
call
mov
push
inc
call
sub
inc
sub
and
lea
mov
sub
inc
call
add
inc
or
lea
imul
dec
inc
inc
add
pop
and
lea
mov
add
inc
pop
dec
dec
pop
dec
or
lea
movswl
pop
inc
sub
dec
inc
add
lea
movswl
inc
pop
inc
inc
pop
dec
add
mov
lea
mov
call
inc
inc
sub
dec
ret
and
lea
push
mov
add
push
add
add
push
dec
or
push
lea
mov
push
inc
dec
mov
dec
dec
push
sub
ret
push
lea
imul
dec
push
dec
call
sub
add
add
lea
movsbl
inc
dec
dec
dec
add
lea
imul
dec
inc
inc
dec
add
lea
mov
inc
inc
dec
jmp
xor
repz
cmp
jb
sbb
ret
mov
icebp
mov
and
dec
andb
xchg
lcall
adc
sub
add
push
push
xchg
pop
xchg
lock
cmp
or
dec
out
aas
stc
sub
lcall
inc
xchg
xchg
mov
mov
in
ret
gs
in
jo
or
sbb
pop
jge
jmp
cli
jbe
sbb
mov
repnz
lds
pop
mov
cmp
cltd
sti
and
add
mov
shlb
test
pop
daa
xor
mov
stc
cmp
mov
push
sahf
insl
xchg
dec
scas
inc
outsb
addr16
dec
fisttpl
std
sar
xor
mov
out
das
adc
in
mov
lea
mov
inc
test
aaa
setp
sub
mov
fwait
sub
push
ds
sbb
lahf
xchg
pop
mov
cmp
icebp
popa
and
xchg
incb
lds
icebp
fsubrp
repz
int
mov
icebp
cmp
lods
mov
sbb
mov
arpl
pop
and
mov
jmp
xchg
pop
sbb
adc
sub
aaa
leave
push
and
jle
xchg
push
push
mov
cmc
test
ret
sbb
pop
cld
gs
pop
sbb
or
stc
sub
imul
stos
cmp
mov
ja
xor
dec
mov
ret
push
pop
jnp
push
cmc
lock
add
fadd
pop
in
push
or
dec
or
jle
popa
scas
test
and
pop
lcall
ss
jge
jnp
mov
je
pop
pop
xchg
in
mov
xchg
out
xchg
mov
mov
mov
push
pop
dec
fsubrs
adc
cld
dec
push
popf
int
fisttpll
xor
jae
loopne
out
fsubl
xchg
ret
cmp
ljmp
push
int
insl
push
dec
adc
lods
ds
in
pop
and
test
leave
rsm
mov
mov
cltd
mov
mov
lods
out
mov
mov
dec
sbb
push
xor
idivl
sar
jle
in
inc
mov
jne
ss
stc
fs
mov
lcall
stos
push
cmp
es
inc
sbb
mov
push
es
fsubs
sahf
cld
sahf
jecxz
push
dec
es
cmp
lahf
outsl
or
int
cwtl
push
push
orl
pusha
pop
xchg
sbb
sbb
addr16
mov
jo
mov
mov
jecxz
xchg
and
sub
jno
or
lret
repnz
shll
repz
fdivs
movsl
fadds
lcall
popf
and
lret
les
pop
movsb
push
pop
mov
outsb
jl
movsb
js
cmp
sbb
xor
dec
nop
jle
mov
sbb
lds
ds
or
stc
je
add
and
popf
ret
cmp
pusha
jno
push
gs
testl
cwtl
daa
mov
shll
imul
jbe
push
inc
jmp
cmp
in
pop
mov
mov
push
xor
call
cmp
dec
mov
fadd
clc
jae
jne
xor
mov
or
push
call
sarl
fnsave
inc
pop
sbb
mov
mov
dec
mov
xor
mov
fldl
jbe
cmp
icebp
addr16
sbb
loop
dec
loop
pop
aaa
inc
lcall
lahf
sub
jno
pop
iret
lea
add
out
js
lods
pushf
push
push
enter
and
adc
inc
incl
lahf
in
xchg
ss
cwtl
pop
std
lahf
pop
jg
jl
sub
rcr
cmc
or
xchg
xchg
mov
jp
push
cwtl
add
jae
idivb
fldl2e
in
push
mov
call
mov
mov
rclb
mov
adc
inc
cld
rcrb
cmpsl
add
xchg
push
mov
int
sarl
xchg
xlat
and
mov
fsubrl
add
daa
adc
subl
mov
jnp
lahf
lods
jbe
in
sti
in
push
pop
jmp
dec
inc
add
or
mov
aam
fldt
and
dec
jb
aad
mov
xchg
insl
mov
pop
cmp
mov
sbb
pop
xchg
mov
loope
pusha
inc
data16
xchg
shlb
xlat
sahf
lock
mov
js
mov
jno
mov
cmp
fwait
jb
add
cmpsl
push
stos
sub
je
mov
mov
orl
or
push
cmp
lea
and
pop
orl
into
or
enter
sbb
es
shlb
add
add
das
dec
and
frstor
inc
xor
inc
addr16
mov
pop
cld
mov
pusha
andb
gs
mov
cmp
xchg
dec
jae
lret
push
mov
xor
xor
fldenv
xor
xlat
xor
cmp
push
outsl
stos
movsb
aad
das
jmp
inc
pshufw
cmp
jle
stc
jl
sbb
mov
cld
and
mov
jo
loope
arpl
daa
rcr
inc
xchg
mov
xor
mov
jp
call
imul
imul
mov
sub
mov
fildll
nop
mov
mov
jnp
jns
xor
jno
in
dec
push
fcomp
cmp
dec
mov
in
add
out
mov
nop
mov
in
fcoml
js
push
pushf
fstps
ja
and
lods
cmp
popf
lea
jle
fistpll
push
jb
add
push
lds
test
les
xor
lcall
ljmp
jno
xor
pop
push
test
mov
out
adc
sbb
shll
mov
add
testl
fwait
push
shrl
pushl
sahf
mov
ret
inc
mov
add
cmc
sbb
jnp
daa
orb
ds
inc
and
popf
movsl
je
jbe
sbb
and
aad
jecxz
sub
repnz
loop
loope
push
cltd
ret
sar
pop
sub
mov
test
mov
aaa
or
leave
out
push
lret
mov
push
ret
inc
imul
inc
xchg
cltd
xchg
pop
jl
jmp
dec
adc
and
das
inc
cmp
sbbb
and
inc
xor
fsubs
push
jo
es
test
dec
lock
scas
sub
loope
movsb
xor
ret
xchg
popf
ss
mov
sbb
rolb
sbb
mulb
pop
dec
push
lds
aaa
out
mov
xor
and
cmp
aad
cmc
movsb
xor
jb
scas
dec
aam
adcb
bound
fnstenv
xchg
and
or
jg
imul
xchg
sbb
fcomi
jae
cmpsl
loop
popa
mov
rcrl
inc
lock
xor
jno
adc
outsl
outsb
fs
daa
imul
push
sub
ret
xchg
test
lock
mov
enter
cmp
sahf
pop
in
xor
xchg
pusha
ror
aas
daa
jecxz
mov
and
and
subb
or
pop
and
out
js
cmpsl
jge
stos
inc
mov
pop
adc
rcrl
and
sbb
lahf
jle
add
and
dec
mov
adc
fmul
push
xchg
popa
fldt
push
loop
or
cwtl
cmp
out
inc
mov
jge
push
insb
jle
js
mov
aam
pop
int3
call
arpl
fisubs
fcoms
or
jmp
scas
sub
sti
push
and
fiaddl
cmp
insl
imul
clc
test
ficompl
data16
arpl
loope
test
cmpb
repz
mov
test
arpl
mov
stc
mov
pop
xlat
fiadds
out
scas
pop
ret
jbe
xor
ss
orb
pop
imull
mov
aam
mov
mov
testb
xor
add
lret
cmp
dec
mov
sbb
jmp
inc
aaa
adc
inc
test
mov
popa
mov
cwtl
popf
mov
aaa
cmp
into
adc
push
sti
xchg
xor
outsl
mov
lahf
fwait
cmpsl
enter
std
mull
data16
dec
or
cmp
push
aaa
sbb
lcall
mov
mov
xor
clc
lcall
call
and
xchg
idivl
add
scas
xchg
gs
out
sub
es
or
lods
fstpt
adcb
icebp
xor
call
sbb
jmp
xor
dec
cld
aaa
mov
sub
push
lret
xchg
mov
jbe
adc
push
add
cld
push
cli
add
pusha
les
dec
sbb
ret
xor
mov
pop
lret
inc
jle
icebp
dec
das
pop
cltd
fcompl
xchg
out
outsl
dec
xchg
sub
movsb
dec
mov
push
sub
subb
mov
sbb
cmc
pop
jmp
mov
leave
scas
cld
xor
daa
lret
dec
lods
loopne
mov
inc
dec
adc
je
cmpsl
popf
jp
and
ds
jge
sub
push
loope
sbb
push
mov
outsl
mov
fcomps
push
stos
orb
dec
jmp
fwait
xchg
jae
cld
in
jp
sub
mov
pop
xchg
fs
push
dec
loopne
out
fadd
loopne
inc
pop
shl
cmc
add
adc
inc
mov
push
adc
jmp
mov
mov
xchg
sbb
nop
shlb
sub
sub
pop
xor
hlt
jmp
mov
inc
lret
fsubrs
insb
in
jae
imul
push
mov
inc
jne
or
dec
imul
das
imul
mov
es
xlat
pop
ret
adc
pop
jb
aam
mov
push
lock
cmp
push
inc
or
sub
or
out
out
movsl
mov
cwtl
sub
ret
movntps
out
pop
fyl2xp1
jb
fwait
or
icebp
ficomps
lret
cmp
cmp
fiadds
daa
xor
or
popf
ljmp
int
sub
mov
inc
shlb
out
sbb
rcl
mov
clc
roll
roll
movsl
cltd
movsb
lds
prefetcht1
cmpsl
pop
mov
daa
scas
inc
mov
jmp
dec
pop
pusha
or
ret
mov
je
sbb
movsl
xchg
push
inc
and
sub
fs
inc
aas
mov
std
and
inc
loope
rolb
add
mov
xor
dec
and
mov
jle
es
outsl
dec
daa
mov
sti
imul
ret
xchg
mov
adc
jp
and
jns
sub
add
test
fistpl
jae
jecxz
add
jns
xchg
aad
add
pop
repz
inc
push
pop
and
mov
cmp
xor
movsl
jp
mov
and
sub
pop
lahf
dec
xchg
jbe
adc
add
cmp
int3
lods
mov
xor
push
sub
stc
push
sbb
rcr
mov
and
rorl
in
lods
inc
loop
cmc
sbb
arpl
inc
bound
rcrl
pop
sar
idiv
jo
mov
ds
lods
jns
jbe
or
imul
call
sahf
pop
loope
stc
mov
mov
jnp
jo
xor
dec
mov
icebp
insl
push
roll
bound
scas
add
and
sbb
add
nop
xor
pop
inc
testl
or
pop
push
push
fldl2e
icebp
dec
sbbb
mov
shlb
and
inc
aaa
mov
dec
jb
dec
jg
dec
lods
lock
jl
cmp
jns
xor
dec
inc
cmp
je
cli
mov
daa
into
les
std
jnp
aam
mov
dec
mov
mov
pop
jne
int
movsb
xchg
inc
popa
and
out
movsb
stos
lcall
icebp
pop
jnp
jb
mov
test
outsl
pop
pcmpeqw
aad
dec
nop
jb
divl
pushf
jno
cld
xor
in
and
mov
out
inc
sub
std
pop
movsb
lcall
int
adc
mov
xlat
mov
imulb
pop
lods
cwtl
ljmp
xchg
mov
je
pop
je
add
in
adc
lret
jns
xchg
mov
loop
dec
nop
pop
xchg
pop
fidivl
mov
mov
jb
sub
push
stc
xchg
lds
mov
js
pop
xor
cvtpi2ps
loopne
mov
push
and
test
jo
sbb
ret
shlb
mov
sub
cmpsl
fstps
gs
std
ret
xchg
shl
neg
das
push
mov
mov
pop
sahf
out
ja
leave
cmc
mov
ja
jae
push
mov
sub
jmp
shl
int
pushl
push
pop
mov
fldl
movsl
cmp
add
imul
mov
ret
dec
das
lret
push
aad
xchg
pusha
iret
cmp
loope
xchg
mov
cmp
push
mov
negl
out
test
lahf
sub
fisttpl
mov
dec
lods
add
shr
mov
enter
lahf
sub
notb
in
fld
pushf
lock
ficomps
in
and
fsubrl
push
imul
mov
add
mov
cmc
cmp
mov
xor
push
mov
mov
sub
pop
and
cmp
mov
mov
arpl
fdivl
repnz
lahf
push
lea
and
inc
dec
mov
sbb
cmpsl
dec
into
test
mov
shld
add
xchg
push
loopne
fdivrs
adc
inc
les
loope
cmp
or
push
or
sti
fs
sahf
push
popa
push
rorl
and
mov
or
push
xlat
lds
mov
jbe
cmc
xorl
push
inc
adc
jmp
and
outsl
xchg
incb
call
lock
cmpsb
in
add
mov
sub
mov
gs
inc
xchg
push
ljmp
out
rclb
mov
cli
rol
mov
ljmp
dec
sbb
mov
lock
and
popa
xchg
fwait
in
xor
lahf
shrb
in
cmpsl
std
es
push
popa
stc
out
mov
cmp
jo
cltd
jecxz
je
sbb
jne
data16
xchg
dec
cmp
mov
sbb
das
mov
dec
sbb
lods
mov
lods
pop
rcrb
mov
xchg
mov
setns
stos
mov
inc
xchg
lcall
dec
or
mov
mov
and
cmpsb
stos
inc
outsl
xor
inc
mov
in
xchg
jno
pushf
mov
scas
cmp
roll
and
cmp
mov
xchg
jno
jmp
push
add
repnz
jp
stos
orl
aas
into
jl
xchg
jne
insb
jbe
xor
jns
fimull
sub
aad
push
push
cmpsl
mov
stos
push
mov
push
ss
xor
push
and
cmc
xor
or
push
xor
cmpsl
ret
icebp
push
xor
or
shr
fstpl
js
in
bound
mov
mov
aam
and
and
push
push
pop
push
dec
xor
mov
lds
mov
mov
mov
cli
pushf
jnp
cmc
xchg
mov
fidivl
movsl
adc
jne
dec
jno
xor
mov
dec
orb
sub
inc
addb
test
scas
xor
pop
push
sub
xor
and
lods
into
jle
sbb
mov
xchg
aaa
mov
push
gs
sahf
xor
nop
mov
aaa
mov
push
out
push
adcb
lock
sbb
lea
inc
and
xchg
sub
xchg
xor
sub
rol
aaa
jmp
js,pn
adc
shrl
mov
fmul
cmc
ret
mov
push
fildl
push
loopne
lcall
sub
mov
jg
test
add
inc
cld
int
dec
jns
push
test
inc
pop
call
mov
clc
fnstcw
lahf
push
cmovs
mov
mov
cmp
nop
cmp
in
cs
push
pop
out
cld
in
std
cli
mov
bound
data16
mov
mov
lods
imul
xor
pop
push
imul
das
or
add
jg
outsl
push
shll
pusha
push
jb
lds
push
in
sti
xor
sbb
dec
inc
and
clc
cmpsl
xchg
fs
jl
xchg
lret
fsubl
and
inc
push
movsl
aaa
lock
inc
lahf
xchg
xchg
sub
sbb
and
jae
add
aam
rcll
add
or
pop
repnz
inc
or
cld
data16
add
and
sub
or
adc
mov
je
push
gs
out
pusha
and
rolb
jg
dec
or
pop
notb
push
inc
dec
sub
push
mov
sahf
test
push
push
pushf
mov
or
push
iret
sub
imul
aas
outsb
outsl
sbb
imul
mov
out
int3
ljmp
dec
out
or
mov
rcrb
mov
xchg
cltd
repz
inc
movsl
pop
lods
inc
arpl
and
cmp
clc
pop
je
pop
push
cmp
ret
inc
movsl
jmp
mov
mov
sub
mov
out
dec
jp
inc
mov
aad
cmp
outsb
lahf
adc
in
fcmovnb
push
mov
out
sahf
mov
and
cwtl
jns
sbb
and
cmpsl
test
shr
scas
mov
popf
cmp
xchg
lcall
sbb
xchg
cmp
enter
sub
push
lods
es
push
scas
push
sbb
and
jb
xchg
cld
mov
mov
fsubl
mov
push
lods
jecxz
outsl
jmp
adc
loop
gs
leave
cmpsb
in
adc
imul
push
xchg
inc
jo
or
cld
mov
mov
xor
inc
xchg
loope
mov
mov
mov
lds
and
jge
xchg
aam
imul
fisubl
clc
test
loopne
test
lods
pop
int
and
jecxz
or
clc
lret
sbb
test
push
test
jb
or
aaa
cmp
sub
imul
je
mov
and
pop
jecxz
xchg
fildll
mov
and
js
fst
dec
cmp
lret
dec
push
sub
sbb
ffree
push
arpl
sbb
xor
xlat
xchg
add
scas
pop
dec
popa
inc
aam
mov
test
int3
icebp
cmc
mov
sbb
outsb
cmc
cwtl
mov
push
pop
xchg
xor
es
ret
adc
int3
and
lods
movsl
cld
cmp
xchg
jg
sub
jnp
lcall
pusha
inc
xchg
subl
test
jp
pop
popa
pop
push
mov
cli
in
lret
xchg
adc
mov
ret
lcall
pusha
jb
push
js
xchg
cld
pop
les
fmul
in
enter
and
cmp
pop
ss
add
push
adc
sahf
mov
mov
mov
and
sub
jb
dec
dec
and
and
or
jnp
pop
decl
cs
fstpl
outsl
push
mov
and
push
push
ret
mov
stos
sub
xchg
sub
sub
scas
cmp
add
cs
add
xor
subl
xlat
cmp
js
test
imul
lds
mov
cltd
std
or
xchg
je
outsb
out
push
xchg
dec
cmpsl
jecxz
mov
push
inc
or
mov
fimull
push
inc
lods
cmp
and
into
jmp
add
xchg
xor
in
jno
inc
add
push
fwait
and
and
aad
cmpsl
pop
mov
xor
adc
popa
mov
ss
fbld
aaa
jno
shlb
mov
icebp
cmc
idivl
rcl
adc
test
nop
popf
xchg
inc
outsl
lcall
mov
mov
or
pusha
push
stc
dec
and
push
xchg
repz
rcrb
and
addr16
push
lock
push
popf
out
incb
jne
mov
in
sbb
sub
push
mov
add
stos
xchg
pusha
push
arpl
jl
data16
rolb
pop
lcall
jp
pop
pop
jle
adc
sub
pop
sbb
pop
lret
mov
out
test
mov
leave
pop
jae
dec
pusha
test
pusha
popf
pop
add
bound
pop
ds
mov
mov
aam
sub
sbb
pop
inc
je
out
mov
pop
ret
into
mov
repz
pop
lret
mov
or
mov
out
pusha
ja
push
cmp
fld1
pop
icebp
into
cmp
bound
inc
and
and
ret
xchg
sub
es
mov
out
daa
xor
lods
pop
scas
loopne
xchg
sub
ds
push
data16
jg
xchg
pop
ror
test
dec
dec
jge
in
lcall
cltd
cmpsb
and
xor
mov
or
mov
mov
mov
xchg
xor
into
icebp
xor
xchg
lock
sub
or
xchg
adc
pop
mov
aam
std
lahf
push
mov
sbb
test
arpl
inc
mov
aam
test
cmp
cmp
mov
ret
sbb
sbb
icebp
ds
outsl
mov
jg
ret
mov
repz
mov
stos
jne
inc
pushf
jo
mov
dec
aad
xchg
xor
mov
lods
sbb
scas
pushf
je
mov
jmp
cltd
mov
adc
cmp
mov
insl
cmp
and
pop
or
pushf
dec
aam
out
push
cmpb
leave
hlt
jecxz
jne
jmp
popf
dec
or
leave
call
jmp
in
push
das
out
push
test
movsb
lret
xlat
call
and
shlb
pop
and
inc
in
mov
je
or
arpl
lds
xchg
movsl
fsubrl
aad
and
out
fsubs
insb
mov
mov
mov
adc
mov
fbld
out
mov
or
or
out
pop
xor
xchg
enter
add
sbb
popf
xor
add
into
stos
dec
jmp
and
pop
lods
rcrl
imulb
dec
mov
jecxz
push
stc
and
test
mov
gs
es
mov
shrl
push
clc
pop
mov
loope
test
pop
inc
mov
sbb
lret
sbb
rcll
psubusb
repz
inc
lock
adc
ds
daa
fcmove
call
push
aas
pop
clc
mov
cmp
mov
and
cmc
mov
add
xchg
dec
and
repz
in
jb
test
shll
cmc
push
sub
roll
out
pop
pushf
cmpsb
mov
stc
pusha
stos
jo
mov
xor
push
pop
js
push
cli
test
cmpsb
push
push
ja
cmp
mov
gs
lcall
sbb
pop
cli
jae
add
jge
adc
lahf
int3
sub
push
sub
xor
mov
test
pop
popa
xchg
xor
dec
xchg
sbb
pop
pop
test
movsb
pop
fsubs
dec
xchg
xor
cmp
pop
xor
pop
add
mov
push
in
sub
xchg
xchg
pop
mov
xor
mov
insb
daa
clc
dec
ss
fwait
cs
jl
mov
jno
jne
aaa
or
jo
into
cld
in
dec
enter
lods
xor
ret
test
cwtl
test
xor
fsubrp
adc
lods
jmp
in
or
push
mov
jle
or
mov
push
inc
stos
pop
xchg
sub
push
and
jl
xor
jo
aaa
sbb
js
pop
testl
add
cmp
aam
je
ret
imul
testb
orl
mov
xor
mov
fwait
mov
ja
fsubp
mov
es
out
cs
xchg
lods
lahf
hlt
sub
mov
jl
mov
sub
mov
and
lahf
cmp
mov
push
xor
bound
fldl
mov
jne
pop
sub
push
fistps
dec
mov
mov
xlat
gs
mov
sbb
pop
test
adc
xchg
dec
js
push
xor
lahf
and
dec
pushf
aam
add
insl
push
adc
loop
out
mov
xor
jecxz
push
test
dec
stos
mov
sbb
xor
xorl
das
addr16
inc
rcl
cmpsl
idivb
add
xor
daa
clc
int3
loope
sub
jae
out
cwtl
in
fnstsw
mov
xchg
fistl
icebp
cmp
iret
popf
adc
movsl
jmp
inc
mov
pop
fists
jp
sbb
cmp
mov
inc
lock
dec
xchg
rcll
bound
push
aam
inc
push
push
js
leave
iret
jb
std
mov
and
mov
xor
inc
inc
ret
sbb
lods
loopne
stos
sti
in
ds
ficompl
adc
aaa
jno,pt
popf
mov
sbb
nop
cmp
mov
call
push
inc
jecxz
xlat
mov
inc
cmp
out
xor
mov
sbb
fisttps
adc
into
dec
es
sub
inc
int3
shlb
mov
mov
mov
jns
and
mov
inc
jle
cmc
xchg
stc
int
inc
lea
gs
in
addb
loop
sbb
adc
cmp
movb
xbegin
dec
and
and
adc
add
insl
pop
dec
out
add
dec
cmp
loope
repnz
and
movsl
mov
bound
add
lods
xchg
in
fstpl
dec
xor
shl
ror
add
sbb
sarb
adc
andb
pop
adc
mov
mov
fisubrs
add
jo
cmp
int3
jg
fiaddl
lods
data16
jns
mov
cltd
les
arpl
popf
fidivrl
into
mov
or
dec
aaa
pop
in
dec
mov
fdivs
fwait
sarb
sub
jne
negl
outsb
addb
fistl
push
lahf
lea
mov
cmpsb
inc
jb
pop
pop
pop
lcall
push
jne
cmp
mov
sti
xchg
into
lods
xchg
insb
pusha
test
mov
push
pushf
pop
xor
jo
mov
mov
push
imul
in
dec
add
mov
lea
sub
insl
xchg
lock
adc
js
inc
lret
and
cmp
popf
or
fs
sub
sbb
pop
pop
sbb
outsl
sub
outsl
or
add
dec
int
pushf
cmpsb
and
lcall
cmp
sbb
inc
popa
out
or
dec
sbb
aas
test
lgs
jbe
int
pop
int3
pop
mov
std
push
cmpsb
in
icebp
dec
stc
test
rcll
adc
scas
clc
movsb
sub
sbb
mov
adc
pop
orb
dec
dec
out
xchg
adc
add
addl
mov
fwait
jg
loop
sub
xchg
inc
adcb
enter
mov
popf
jbe
repnz
sbb
decl
lods
mov
test
or
dec
fisttpl
push
push
pop
jns
pusha
movsb
ljmp
mov
arpl
xor
into
add
sub
popa
inc
cwtl
xchg
mov
ljmp
ds
cmp
ss
aaa
adc
cmpsl
xchg
push
push
iret
int
xchg
and
push
subl
je
jp
and
mov
into
rclb
scas
dec
sahf
and
or
in
iret
icebp
adc
mov
popa
mov
sbb
mov
xchg
lds
xchg
xor
pop
fsubp
test
and
into
out
inc
das
inc
or
movsl
nop
adc
sbb
inc
lock
mov
fmull
or
test
jp
fsts
popf
lcall
ds
stos
in
cmp
sub
lret
lahf
aaa
xchg
inc
in
in
jne
push
movsl
mov
mov
push
lods
dec
mov
sbb
out
ret
mov
in
fwait
push
testl
int
xlat
cmp
addr16
roll
je
sub
divl
and
fcoml
gs
mov
imul
js
jnp
jb
jmp
int3
sub
mov
sahf
push
inc
push
push
aad
xchg
inc
cs
filds
dec
pop
ret
sub
lds
sub
mov
inc
add
lock
stc
add
loopne
aad
into
lcall
mov
out
fisttpll
jno
stc
les
cmpsb
daa
aaa
sub
adc
jbe
insb
enter
imul
xchg
call
or
mov
or
jp
sub
cld
sub
imul
fiadds
dec
mov
lcall
mov
mov
cli
push
sbb
and
test
pop
call
scas
mov
daa
cmc
push
ja
pop
sub
adc
cmp
pushf
or
lret
inc
sbb
ret
and
popf
xchg
int3
cmp
int3
popf
enter
adc
mov
in
jnp
adc
sub
clc
in
out
sbb
pop
rdmsr
sbb
scas
es
roll
adc
pop
fmull
cmpb
xor
cmp
shll
sub
shlb
xchg
sub
mov
xchg
xchg
pop
or
nop
in
sub
inc
adc
adc
xlat
rcr
mov
mov
in
in
aas
adc
lods
loopne
stos
inc
mov
lods
orb
inc
sbb
enter
dec
stc
push
jns
shr
adc
imul
loope
and
jns
jg
xchg
xchg
mov
or
cmpsl
push
dec
imul
mov
mov
data16
dec
cmpsl
mov
pop
or
mov
mov
mov
jmp
shrb
lea
orb
xchg
sub
pusha
stos
test
mov
cmc
cltd
jge
push
outsl
xorb
sub
rcrl
dec
in
xor
sbb
mov
outsl
mov
lahf
push
js
push
adc
or
jmp
pushf
dec
scas
or
jae
cltd
jmp
or
fmull
int
ret
mov
sbb
push
ljmp
add
and
frndint
jl
clc
xchg
xchg
mov
ret
pmaddwd
add
add
xchg
and
out
xor
pop
lret
push
mov
cli
lret
fidivrl
jecxz
call
xor
and
add
lds
leave
mov
adc
push
fnstcw
adc
cmp
add
mov
jmp
pop
xchg
int3
inc
loopne
jg
es
rorb
inc
sbb
nop
xor
mov
pop
out
xor
xor
add
lods
ljmp
jbe
js
pop
sbb
fidivrs
and
pop
pusha
push
jl
sarl
les
pushf
or
cmp
out
adc
mov
xor
hlt
xlat
bound
cmpb
inc
test
and
mov
roll
sub
outsb
pop
pop
and
jecxz
mov
xchg
mov
testl
jae
add
mov
test
and
aam
icebp
sub
add
aad
push
loope
xchg
in
aas
or
les
sub
arpl
inc
and
stc
std
fidivrl
das
aaa
xchg
js
out
push
sahf
cmp
adc
xlat
pop
xor
cmpsl
mov
mov
add
cmp
xor
movsb
stos
hlt
nop
addl
in
and
dec
lret
aaa
outsb
dec
inc
fiaddl
neg
xchg
push
jnp
sub
pop
fsts
jle
push
sub
ljmp
cmc
dec
cwtl
cwtl
jp
and
mov
xchg
pop
jbe
mov
xchg
push
pop
js
arpl
clc
xchg
xchg
das
mov
outsl
adc
push
cltd
add
or
inc
jo
sub
clc
leave
orb
idiv
cmc
dec
aaa
daa
and
int
jmp
jge
push
mov
inc
mov
xchg
jns
push
push
cltd
mov
dec
or
xor
cmp
pop
les
mov
mov
pushf
lea
shlb
sbb
inc
xor
mov
jbe
jne
inc
int
mov
mov
inc
loop
repz
add
mov
push
xchg
outsl
push
clc
mov
jmp
sub
sub
mov
addr16
xor
dec
mov
ss
sbb
test
popf
sahf
inc
mov
inc
pop
sub
pop
cmp
sbb
fisubs
imul
xor
fdivl
push
push
stc
mov
popf
add
popa
jl
outsl
jne
cs
push
shll
ss
sbb
xor
aad
dec
adc
push
repz
test
hlt
popf
int
pop
pop
mov
or
shlb
ljmp
scas
push
jge
int3
lods
cmp
xor
mov
popa
push
jo
shrl
mov
jp
mov
je
cmp
jl
fcmovbe
lahf
xchg
add
std
sbb
inc
in
xor
fs
cmp
sbb
jno
stc
addr16
cld
dec
aad
mov
pop
loopne
push
sub
jg
movsb
aas
ss
adc
dec
sbb
in
ret
push
fcoml
cmp
nop
jbe
push
dec
cmp
xchg
cmp
mov
and
into
cmp
add
scas
popl
aaa
les
fsubs
insl
movsl
mov
mull
pop
orw
aas
imul
and
in
jns
scas
repnz
sub
insb
push
push
adc
xor
out
xchg
sub
push
out
add
adc
and
shlb
cwtl
sahf
fwait
jnp
push
lods
mov
arpl
xchg
cmp
fimull
sub
add
sbb
xor
jo
je
cs
fs
stc
test
lods
cmp
test
jbe
es
hlt
pushf
movsl
and
call
fwait
or
fiaddl
xor
jno
mov
ret
xlat
insb
fmul
push
add
push
xchg
cmp
xor
lret
out
sahf
or
icebp
dec
jnp
mov
mov
clc
inc
fnsave
jl
pushf
clc
sub
flds
lock
addb
add
mov
or
negb
adc
mov
fs
test
pop
js
add
int3
cmpsb
lods
imul
loop
out
push
aaa
mov
xor
sub
xor
imul
jb
jnp
mov
stos
jns
dec
stos
push
or
inc
fidivs
ss
jae
push
mov
cwtl
or
inc
stos
and
sub
push
jb
cmp
fisubl
leave
xchg
imul
xchg
mov
sub
addr16
fcoms
roll
push
popf
cmpsb
push
sub
out
ds
cmpsl
mov
out
mov
scas
leave
lods
or
stos
cmp
popf
and
mov
arpl
fldt
aad
sub
insl
pop
les
adc
cld
jno
lret
int3
jnp
pop
dec
xchg
sbb
inc
mov
mov
mov
mov
xchg
loop
adc
scas
mov
insl
filds
idivl
mov
lcall
mov
mov
add
mov
inc
enter
in
daa
mulb
sbb
test
lahf
cmovp
jae
or
dec
jno
lds
hlt
push
push
imul
and
adc
dec
adc
aam
push
scas
inc
sbb
mov
loope
loop
les
fsubs
sub
mov
jae
int3
sub
cmp
lret
xchg
sub
xchg
aaa
push
sbb
pop
dec
imul
push
or
daa
or
mov
les
lea
jmp
cmp
jae
sbbl
fcmovne
inc
mov
xor
out
mov
repnz
pop
pop
mov
pop
daa
pop
mov
ja
mov
mov
and
in
enter
mov
pop
and
out
lods
lea
test
mov
mov
jo
cmp
dec
and
jmp
cwtl
adc
ret
inc
rclb
das
mov
xor
bound
in
cwtl
rorb
push
or
andl
add
stc
mov
aad
lahf
mov
es
adc
cli
mov
or
mov
in
mov
sarb
test
aas
popf
push
push
xor
push
rolb
out
pop
imul
rcrl
or
orb
repnz
push
sbb
jp
popa
push
fsub
mov
push
jle
xchg
les
cmp
hlt
jae
push
out
xchg
or
hlt
fcomip
test
and
outsb
sahf
mov
les
pop
divl
mov
fnstcw
into
pop
cmp
push
jl
ret
ja
aas
pop
int3
and
ds
lcall
in
lods
inc
pop
pop
dec
add
mov
outsl
pop
inc
inc
jecxz
or
cltd
popa
inc
lret
push
stos
sbb
pop
out
enter
push
push
mov
jnp
fisttps
push
inc
mov
xchg
pop
or
pop
jmp
fwait
xorb
mov
inc
aam
mov
mov
loop
pusha
mov
es
mov
test
lods
xor
jne
fldt
fwait
sbb
sbb
mov
in
test
lods
leave
xor
mov
call
pop
nop
adc
cmp
nop
ret
stos
movsb
jg
mov
fstpl
xor
push
test
push
or
fsts
in
or
test
and
pop
bound
popf
mov
es
dec
addb
popf
into
pop
xlat
rcll
lret
stc
repz
les
sti
mov
iret
and
mov
dec
inc
mov
jns
jo
dec
rclb
mov
ds
sarb
sub
adc
flds
test
pusha
loopne
stos
sarl
arpl
inc
xor
lea
leave
imul
loop
xorl
sub
scas
ss
fs
lods
xchg
ds
aas
cwtl
jmp
fldenv
mov
push
mov
jbe
inc
xlat
or
xchg
adc
aam
push
cmp
push
adc
jb
fadd
mov
fs
or
lods
clc
in
push
test
jge
daa
adc
loope
pop
loop
call
or
adc
xchg
xchg
shl
push
int
jns
cltd
inc
mov
sub
out
int
lcall
mov
mov
in
fcom
adc
sbb
lret
fwait
test
dec
aas
xor
add
mov
or
loop
jp
mov
popa
dec
jle
mov
or
repnz
inc
xor
add
dec
stc
or
or
dec
xorl
repnz
sbb
iret
js
or
mov
mov
jnp
cmp
push
ljmp
movsb
pop
lret
sbb
scas
test
mov
mov
imul
push
iret
adc
mov
dec
cld
aam
cmp
cmp
lock
js
fisubrs
cmp
filds
fsubs
and
fidivrs
push
les
cmp
sbb
fs
mov
add
xchg
aad
in
mov
and
sub
push
es
pushf
lcall
push
outsl
ja
nop
xor
jae
clc
push
jg
jmp
xor
push
sub
insl
into
nop
scas
sub
or
sbb
stos
les
arpl
in
rclb
cmp
lods
jns
lret
lahf
push
lods
and
mov
xchg
dec
dec
movsl
mov
push
cmp
rclb
stos
jbe
xchg
push
pop
push
stc
or
test
jmp
inc
int3
call
hlt
into
or
stos
aaa
dec
clc
daa
adc
or
xor
push
cltd
clc
push
mov
fbld
jae
hlt
add
lods
ja
mov
addr16
sti
adc
mov
xchg
and
jmp
out
pop
push
jns
shrl
mov
push
pop
scas
and
fisubs
mov
cmpsl
sbb
call
add
mov
popf
outsb
or
jae
rclb
repz
and
push
gs
xchg
mov
sbb
in
in
xchg
mov
ja
pop
ss
daa
lcall
cld
data16
sbb
jecxz
lds
mov
lock
jg
ss
daa
adc
xchg
xchg
jecxz
mov
and
loop
add
xchg
mov
rorb
dec
lahf
aam
out
lock
pusha
scas
mov
pop
test
push
shlb
in
addr16
iret
xchg
xlat
stos
movsb
cmp
leave
or
rcr
sbb
mov
mov
enter
sbb
jno
notb
sub
dec
ljmp
mov
sub
mov
sbb
dec
shlb
pop
out
push
jno
sub
mov
divb
xchg
sbb
movsb
imul
subl
push
int
sbb
rclw
xor
aad
jno
jecxz
inc
or
movsb
and
xor
jle
rclb
xchg
push
xor
or
add
dec
mov
push
sbb
push
sbb
imul
scas
ss
addb
insl
add
xchg
dec
inc
mov
mov
loopne
sub
or
loopne
rcrb
test
sub
imul
xor
dec
pop
jl
fistpl
lea
fnstsw
insl
std
scas
sbb
adc
cli
jno
mov
and
xchg
lea
xchg
mov
test
xchg
frstor
sbb
adc
xor
fidivs
mov
jo
mov
cwtl
mov
pop
sbb
es
cltd
jecxz
pushf
int
add
add
pop
inc
jo
push
outsb
cli
sti
int3
int3
es
mov
jg
mov
inc
pop
and
lds
shll
add
pop
outsl
cmp
pop
add
out
and
icebp
jge
out
out
cmc
push
push
cld
push
add
add
call
mov
nop
pusha
inc
pushf
dec
jnp
cmp
mov
mov
repnz
push
and
push
xor
sarb
in
scas
lods
lret
dec
sbb
xchg
adc
inc
pop
jbe
cmp
or
push
xchg
dec
lahf
xchg
scas
xchg
out
jnp
push
in
sub
mulb
jl
and
lea
lahf
daa
mov
jmp
pop
sub
pop
xor
sbb
mov
add
outsl
sbb
cmpb
ds
adc
into
pop
int3
xchg
nop
cmc
rcrl
mov
jl
push
push
ds
push
pop
das
cs
push
imul
jnp
scas
jno
int3
ljmp
test
stos
out
and
sarl
sub
sub
xchg
mov
xor
lret
je
sbb
icebp
rolb
cmp
mov
adc
std
sbb
xor
push
nop
jnp
push
notl
adc
mov
mov
test
jmp
arpl
inc
cmp
or
xchg
push
adc
cmp
push
aaa
push
std
ljmp
loop
dec
aad
cmp
cmp
jp
mov
sub
aam
sub
bound
push
enter
and
cmpsl
and
call
in
das
add
popa
mov
mov
out
push
push
inc
push
sub
fs
jne
mov
lret
out
sub
insl
pop
stc
out
cld
test
and
sub
jno
add
lds
jbe
movsl
mov
cwtl
sbb
dec
dec
fstpt
mov
fwait
cmc
je
int3
xlat
aas
or
xchg
loop
sbb
mov
push
mov
push
jae
loop
int3
adc
popa
dec
out
mov
fstpl
int3
inc
xchg
icebp
mov
movsb
ret
jae
mov
out
popf
stc
and
xor
lret
lock
jg
pop
cmp
and
push
or
andb
inc
hlt
subb
test
jle
repnz
xchg
gs
mov
sahf
mov
xor
fldenv
test
aaa
loope
test
std
sbb
mov
jl
loopne
pusha
xor
daa
push
pop
jp
mov
jne
push
fisubrl
jbe
scas
jb
jne
mov
repnz
mov
mov
adc
gs
inc
jne
dec
pop
lods
aaa
jne
xchg
dec
out
adc
daa
jb
fcomp
inc
pop
mov
movsl
insl
jno
je
ss
or
movsl
popf
rclb
xchg
and
sub
xor
xchg
jmp
add
or
in
movsl
enter
lahf
push
cmp
ja
pop
or
pop
and
cmp
scas
int
cmpsb
push
cmpsb
imul
xchg
enter
or
xor
inc
add
sti
scas
scas
ret
scas
push
adc
adc
pop
and
inc
sbb
test
push
stc
xchg
mov
inc
lods
pusha
xchg
or
adc
dec
shl
jle
sbb
mov
mull
add
lret
es
aaa
cmp
jp
jae
or
mov
xchg
sarb
or
stc
cmpsb
subl
adc
cmp
xor
je
ret
jl
fidivrs
cmp
dec
imul
stc
dec
gs
pop
xor
in
xchg
outsl
mov
push
lcall
pop
xchg
lahf
lods
lret
xor
pop
aad
sbb
loope
and
lcall
cmp
cmp
cmp
xchg
cmp
aaa
imulb
mov
fs
push
mov
or
shrl
std
cmp
dec
mov
inc
cmpl
jo
mov
adcb
xor
bound
pop
mov
leave
aam
push
cmc
notl
dec
push
aad
mov
dec
xchg
bound
mov
shll
ja
push
push
fsubrl
adc
sub
and
negb
aas
in
sub
mov
mov
mov
test
sbb
cli
xor
cmp
mov
jle
repnz
fistl
insb
repnz
mov
lea
sarl
mov
push
loop
ss
push
sti
arpl
jns
xor
mov
bound
ret
jmp
std
and
out
pop
icebp
popa
lret
fmull
push
repnz
mov
dec
mov
data16
fidivs
jns
aad
push
mov
rcll
lock
sub
inc
jle
clc
inc
add
jmp
gs
out
add
xor
xchg
sbb
ret
pop
adc
imul
sarl
int3
loopne
add
repnz
sti
cmp
int
call
mov
daa
xlat
outsb
fisubs
mov
dec
and
int3
leave
test
push
push
and
xchg
xor
int3
pusha
cmp
pop
sub
out
mov
mov
xor
push
les
push
xchg
mov
mov
xchg
aad
pushf
lret
movsl
sbb
adc
or
adc
or
mov
loopne
sar
mov
cmp
test
mov
lea
adc
mov
and
mov
adc
out
mov
xchg
cmp
cmpsb
frstor
scas
ds
xor
pop
adc
sbb
in
xor
shll
mov
sub
insl
adc
inc
testl
lret
out
xchg
dec
movl
push
negl
outsl
inc
aad
popa
jno
cltd
lahf
fs
mov
sbb
dec
jp
cmpb
jle
cmp
mov
ljmp
popf
lods
in
mov
push
dec
mov
jl
mov
jne
fidivl
out
pop
popf
sub
ss
or
push
mov
and
pop
xor
xchg
push
mov
sbbb
mov
xchg
insb
jae
es
inc
pop
lds
out
das
stc
lods
jne
insl
pop
mov
rcl
cmp
jecxz
xor
sbb
mov
ljmp
mov
les
clc
pop
fcom
mov
add
aas
sarb
lret
in
test
sbb
cltd
icebp
cld
scas
jmp
in
or
jns
push
scas
mov
fiadds
jl
das
push
ficomps
mov
lcall
out
mov
xchg
sub
fnstenv
or
or
enter
mov
icebp
rorb
xlat
sti
insl
cld
lahf
sub
cwtl
adc
sub
stos
gs
cmc
test
mov
push
divl
es
mov
inc
xor
int3
mov
xchg
popf
xchg
insl
xchg
add
pop
pop
in
dec
xchg
xor
adc
or
pusha
paddd
or
shll
adc
jp
stos
iret
and
xchg
roll
jmp
stos
aam
imul
test
leave
popl
xor
push
lahf
das
pop
mov
adc
mov
pop
fcmovnu
and
or
mov
jle
mov
xchg
mov
sbb
inc
xchg
cmc
notl
pop
fimull
jno
lea
xchg
in
stos
daa
or
mov
sbb
pop
push
sub
mov
imul
mov
aad
ret
loope
mov
fistpl
loop
xlat
outsb
jp
xchg
lock
insb
cmp
jae
lahf
sbb
subl
pushf
mov
aad
push
cmc
xchg
mov
in
js
and
jmp
xchg
rol
sahf
sbb
ds
dec
add
dec
sbb
adc
xor
jne
mov
lahf
jle
push
test
jge
cmp
or
or
xor
lock
dec
push
shrl
je
sub
jb
js
jbe
mov
jbe
fimuls
cmp
mov
add
or
adc
mov
mov
stos
out
cmp
std
mov
mov
lods
sub
and
int3
stc
outsb
xchg
scas
fs
loope
adc
ret
stos
loope
and
or
lock
cli
leave
push
js
add
mov
xchg
gs
enter
mov
add
and
xchg
das
xchg
subb
fisttpll
std
lods
pop
xchg
cltd
sbb
and
cmpsb
add
scas
lods
push
enter
mov
pop
lcall
sbb
jo
inc
imul
in
push
daa
xchg
pop
inc
shlb
push
sahf
arpl
push
mov
popa
cmp
cld
pop
std
push
outsl
or
jbe
dec
insb
loop
mov
outsb
aad
add
mov
out
mov
mov
scas
mov
dec
xchg
dec
jo
inc
mov
dec
jne
mov
pop
push
xor
sbb
fstps
out
repz
sbb
nop
xor
andl
add
push
sbb
out
nop
mov
xor
adc
aaa
or
cwtl
xor
mov
fwait
lods
sbb
push
mov
ss
dec
ja
jle
pop
cwtl
push
outsl
dec
sub
sbb
jecxz
sti
dec
inc
add
test
pop
adc
lea
sahf
jp
sti
xchg
cmp
pushf
ljmp
aas
pop
mov
push
pushf
mov
pop
lcall
sbb
xlat
cmp
sub
dec
adc
push
iret
dec
scas
adc
cmc
or
popf
dec
dec
inc
int
sub
add
or
movsb
stos
sub
inc
clc
mov
decb
adc
mov
add
sbb
fcomps
loopne
stc
cld
test
cmp
and
outsb
add
shr
pop
insl
lahf
and
and
icebp
xor
xchg
test
mov
mov
test
out
sti
pop
mov
sbb
xchg
adc
add
fidivl
iret
xchg
adc
mov
cltd
mov
push
push
pop
lods
push
xchg
add
inc
cmc
clc
pop
xchg
inc
xlat
cmc
pushf
mov
in
insl
bnd
jnp
daa
push
sub
push
lahf
mov
xor
jp
mov
nop
scas
iret
js
fnstenv
outsb
lret
icebp
mov
out
adc
test
test
ficomps
lods
stc
lret
jo
dec
out
or
add
insb
stos
outsb
mov
pop
pop
cmp
filds
mov
lahf
lahf
fstpt
lea
movsl
add
xor
add
into
stos
pop
ficoms
hlt
iret
addr16
dec
xchg
out
int
ficoms
or
jnp
mov
pushf
cmp
filds
dec
out
insb
or
mov
shrl
and
mov
xchg
mov
into
xor
push
or
ja
push
sub
xchg
outsb
loopne
inc
dec
add
test
and
lret
pop
lret
nop
insl
leave
cld
and
lret
pop
test
xchg
sahf
adc
les
and
inc
xchg
jns
stos
lret
aad
adc
mov
add
pop
add
add
imul
mov
outsl
pop
call
lods
or
cs
xor
adcb
sub
test
inc
inc
scas
mov
js
pop
test
cmp
lret
ja
sub
fnstcw
aaa
lahf
dec
add
ficomps
xor
push
pop
push
mov
xchg
dec
inc
cltd
jns
das
mov
sahf
inc
loop
sbb
movsl
imul
jle
jp
cmp
pop
inc
fwait
add
jecxz
pusha
popf
push
jne
sub
sub
scas
aad
jg
movsl
fimuls
mov
pop
out
jmp
mov
lret
mov
sub
enter
fwait
mov
mov
jp
sti
std
js
adc
sub
pop
jb
mov
lds
jae
mov
mov
inc
xchg
leave
pop
hlt
shl
insl
arpl
mov
ss
cld
roll
xchg
lods
dec
cmpsl
nop
sub
fs
jge
cmovns
cmp
mov
adc
lahf
out
cwtl
stos
lods
into
out
icebp
jg
push
pop
mov
inc
mov
loope
mov
xlat
test
out
mov
push
mov
sbb
xchg
jmp
out
scas
push
adc
insl
sub
adc
add
adc
dec
jno
fildll
rcrb
stos
out
fdivr
jno
imul
int3
js
xchg
je
sbb
add
sub
aam
shlb
mov
lcall
ljmp
adc
xor
sub
jbe
scas
push
daa
aas
out
xchg
addr16
dec
pop
mov
jle
cld
cmp
inc
cli
jns
lds
inc
ss
nop
push
lcall
pop
push
cmpl
push
inc
filds
push
iret
xchg
mov
rcrl
lds
adc
dec
repz
fisttpl
cld
dec
jnp
popa
fnstenv
shlb
icebp
inc
scas
jmp
int3
test
rorb
dec
mov
and
cwtl
je
dec
fs
mov
sar
mov
mov
mov
or
test
inc
arpl
in
cld
adcb
pop
jmp
fiaddl
mov
sub
idiv
imul
xchg
fcmovnu
in
xchg
imull
movsb
and
push
mov
adc
jge
arpl
jnp
mov
xchg
push
xor
pop
mov
pop
mov
outsb
lret
adc
decb
xchg
in
push
and
dec
fs
lahf
lret
xor
movsb
lea
lds
aas
and
or
mov
popa
cmp
pusha
mov
arpl
addb
xchg
xorb
dec
jb
mov
aaa
cli
ret
outsb
lock
loop
loopne
mov
cmc
imul
pushl
pop
xchg
or
dec
sahf
sbb
jae
hlt
mov
push
inc
daa
jle
inc
repz
adc
inc
xor
addl
int3
lahf
or
sbb
mov
imul
adc
loope
xchg
pop
xor
and
dec
mov
stc
addr16
loope
xchg
add
add
in
in
insl
mov
rcll
shl
add
xlat
lcall
push
lods
mov
mov
pop
mov
aas
dec
inc
mov
jge
icebp
inc
add
and
mov
xchg
jle
push
ss
js
icebp
push
lret
cld
mov
dec
aas
outsb
pop
fsub
cmp
cmp
in
imul
jle
mov
jo
adc
fwait
mov
pop
inc
gs
in
and
xor
xor
roll
icebp
sub
jne
pop
mov
test
jns
push
loop
cmp
cmpsb
popf
pop
jecxz
adc
lds
test
cltd
test
push
jae
inc
and
inc
sub
je
pop
sub
or
dec
sahf
lea
xor
pop
lahf
fcmove
jno
pushf
out
mov
bound
lcall
mov
lods
hlt
dec
scas
xor
mov
xchg
xor
pop
sub
push
or
lahf
jp
test
jg
jo
or
imul
pushf
dec
add
shlb
insl
out
cmpsb
push
xor
lcall
adc
adc
test
jne
stc
fildll
mov
xchg
aad
cmpsb
xor
pop
andb
pop
ss
pop
decb
ja,pn
shrl
sub
push
mov
dec
lods
xor
push
in
adc
fcoml
and
cld
lea
lea
mov
fmuls
cli
push
repz
push
sti
subl
xchg
jmp
pop
or
push
cmc
aas
pop
ret
loope
hlt
stos
inc
ret
mov
fld
ds
pop
shlb
imul
mov
xchg
push
add
mov
xchg
pop
mov
push
cltd
sbb
push
add
outsb
adc
mov
into
in
jge
mov
shrl
xor
cwtl
aam
xchg
inc
xorl
rcrb
pop
xchg
subb
lea
icebp
mov
mov
pop
mov
test
mov
xor
sub
int3
addr16
mov
fidivrl
cli
inc
add
sti
xchg
jg
shlb
loope
jecxz
xchg
repz
pusha
int
inc
xchg
xchg
fcoms
adc
addr16
mov
push
fisubrs
in
faddl
ss
in
fiaddl
sarb
aas
mov
mov
inc
pop
clc
fldt
pop
jecxz
push
xchg
cltd
fwait
jne
rolb
mov
loop
sbb
loopne
cwtl
push
std
jne
shlb
outsb
adc
test
int
in
adc
nop
jae
jne
subps
add
aas
push
xor
fcompl
cmpb
adc
or
cmp
mov
hlt
or
out
testb
in
and
adc
xor
xchg
cwtl
ret
ret
js
sbb
add
jns
icebp
insb
cli
mov
xchg
cmp
push
mov
inc
xor
mov
js
loop
aad
imul
mov
arpl
pop
enter
fldcw
sar
mov
das
pop
imull
fisubs
mov
dec
mov
push
fwait
pusha
and
sbbb
clc
test
cmp
inc
shlb
js
mov
adc
pusha
icebp
fadds
mov
jmp
outsb
or
out
out
movsb
sbb
pop
and
sbb
into
and
loop
sub
jnp
cmpb
cmp
push
lret
fcmovnu
pop
pop
js
pop
ss
mov
aad
xchg
inc
mov
leave
int
insb
fcmovnbe
adc
push
data16
push
clc
dec
xor
mov
mov
cmc
xchg
aas
adc
jmp
ljmp
sarl
add
cbtw
xor
dec
pop
adc
addr16
cli
mov
aam
jae
xchg
cs
test
sarb
test
adc
cli
adc
pusha
and
push
ss
xor
push
inc
pop
sub
mov
lahf
sub
push
sarb
mov
sti
push
popf
orb
sbbb
pop
out
and
aad
jno
push
and
lahf
scas
add
ficoml
out
mov
adc
decl
jbe
lret
cmp
jmp
pusha
push
int
popf
adc
js
bound
cmp
xor
and
fnstcw
dec
push
push
xchg
cs
push
or
add
sbb
insl
outsb
cs
popf
negl
xchg
in
push
cmp
mov
mov
ds
add
mov
xchg
xchg
mov
outsl
inc
jno
sahf
jae
add
in
push
adc
dec
imul
stc
and
cmp
xor
out
xlat
cmc
lods
sbb
ds
pop
repz
cmp
fcoms
loopne
xlat
repz
xchg
jg
or
cmp
adc
mov
inc
mov
pop
ja
lds
imul
push
and
pushl
loope
in
dec
mov
rolb
dec
dec
sub
sbb
inc
mov
insb
outsb
push
adc
pop
cmpb
inc
jecxz
pop
jg
cmp
imul
stc
xchg
cmp
stos
loope
cli
into
mov
icebp
push
add
arpl
xor
pop
cmp
cmpsb
dec
inc
in
pop
ret
outsl
push
loop
xorl
adc
or
incl
mov
aad
jge
mov
xchg
clc
leave
sbb
inc
add
aad
xchg
cmpsb
xrelease
and
xchg
and
add
sub
mov
loop
sbb
daa
lret
out
sbb
ret
lcall
cmp
dec
stc
imul
fidivl
push
aaa
mov
lcall
sub
inc
jnp
push
cmp
sub
stc
cs
ja
mov
sub
push
fisubrl
fisubrl
gs
stos
and
jle
shll
jecxz
fisubrl
pop
bound
daa
insb
or
xchg
sti
and
mov
jg
pushf
adc
out
sbb
lods
sub
aaa
jns
mov
mov
sbb
inc
aam
lock
lds
pop
fdivl
sahf
repz
loopne
mov
jnp
rclb
clc
mov
xorl
shlb
insb
in
int
mov
xor
cmpsl
xchg
sub
out
addb
jne
mov
add
xchg
inc
rolb
outsl
loope
notb
adc
dec
xor
sti
test
xchg
adc
or
jmp
jne
cmp
inc
mov
test
fwait
icebp
mov
and
rcrb
xchg
or
mov
add
das
lds
test
daa
jno
xchg
imul
lret
fs
or
pshufw
cld
jo
in
pop
add
outsl
xchg
or
lret
in
popf
ret
jp
cmp
int3
xor
ljmp
stos
dec
push
push
fstps
cmp
aas
jns
out
inc
rclb
fs
mov
xchg
cmc
cmpsb
xchg
je
add
adc
pop
mov
mov
ds
ret
xor
loop
push
inc
dec
mov
xor
inc
loop
loope
clc
and
lea
jmp
mov
adc
sub
pop
repz
out
stc
sahf
iret
repnz
add
push
mov
xor
ret
loope
out
sub
mov
into
arpl
aas
xchg
mov
pop
cmc
mov
pop
rclb
movsb
dec
aam
adc
je
stos
pop
mov
popw
lahf
mov
push
shrb
pop
adc
sub
in
inc
sub
cli
ss
test
or
in
jge
xchg
pushf
call
jbe
dec
xor
mov
test
sbb
push
movsl
dec
sub
dec
inc
inc
mov
xchg
adc
cmp
fistl
push
cmp
sub
test
push
sub
mov
lahf
sbb
xchg
xor
pushf
add
int3
jo
xor
daa
popa
arpl
or
lods
xor
jl
call
filds
inc
jb
test
lcall
js
jo
addr16
cwtl
mov
outsl
jl
add
mov
or
mov
out
jae
and
nop
out
rcll
sarb
lahf
mov
aam
adc
jl
mov
cmp
or
daa
data16
sub
xlat
and
push
outsl
inc
sti
stos
iret
sti
jb
push
jnp
pop
test
mov
or
mov
cld
xchg
popa
jge
mov
jnp
inc
sub
leave
xlat
pop
push
pop
dec
pop
dec
les
and
ret
and
sahf
ret
lods
mov
dec
popa
ror
mov
js
inc
movsl
int
ss
mov
xchg
iret
sbb
shlb
mov
push
dec
xor
jns
xorl
jge
push
ror
and
inc
cmp
mov
lret
push
insl
and
xlat
movsl
daa
dec
popf
cmp
push
xlat
pop
add
mov
add
cltd
stc
mov
fistpl
outsb
repnz
mov
imul
sub
lock
imul
mov
pop
daa
scas
adc
pop
push
repz
aas
pop
imul
mov
lret
stos
mov
sbb
cmp
mov
mov
in
add
cvtdq2ps
mov
in
out
inc
or
pop
push
rcrl
aaa
movsl
add
mov
dec
adc
in
push
mov
cwtl
test
inc
adc
dec
mov
arpl
sub
dec
dec
jne
mov
fistpll
in
in
cmp
mov
mov
xor
xchg
hlt
sahf
fwait
mov
add
scas
xor
mov
idivb
push
mov
xor
dec
mov
jae
fsub
inc
lret
push
mov
ret
inc
lock
adc
inc
pop
rolb
sub
xchg
push
loope
push
jns
repnz
or
xor
xor
sub
xchg
mov
xor
imul
add
sub
inc
mov
mov
sub
repz
mov
cli
xchg
popf
fbstp
lret
mov
jne
stos
dec
inc
xor
insl
and
pop
xchg
inc
iret
sub
jns
or
notb
dec
mov
lea
leave
aas
adc
sti
in
xor
mov
inc
xchg
int3
insb
and
xchg
lret
lret
loopne
movsb
mov
int
inc
adc
pop
outsb
or
insl
add
cmp
fmull
stos
and
enter
xor
out
jae
sbb
mov
push
and
pop
lcall
lcall
subb
push
negb
outsb
popf
movsl
ficomps
les
cmp
imul
and
fldl
in
mov
inc
add
xor
enter
icebp
rol
jl
xchg
mov
fs
add
push
cmpsb
in
xor
xchg
adcl
and
sbb
psubb
or
push
mov
jge
mov
mov
in
push
sbb
js
cmp
fcmovb
stos
shr
call
int
testl
lret
push
fdivs
addr16
mov
popa
jle
adc
jl
mov
inc
sbb
adc
sub
ret
xchg
ja
scas
dec
push
xlat
ficoml
mov
idiv
push
fnstsw
inc
mov
cmpsl
adc
scas
les
and
inc
out
jecxz
jg
push
sbb
jecxz
sub
pop
lea
and
sbb
les
out
cmc
ret
mov
sbb
pop
aad
inc
ss
imul
mov
pop
cltd
jmp
pop
mov
cmpsl
mov
pop
cmc
pop
lahf
push
ss
aas
scas
out
mov
popa
sub
push
loopne
into
xor
mov
add
incb
scas
loope
and
inc
push
pushf
aaa
push
lahf
lret
mov
push
enter
outsb
data16
jg
ret
adcb
inc
xchg
out
push
push
sbbb
loop
enter
repz
mov
hlt
pop
dec
cmp
pop
pop
stos
inc
and
mov
xchg
shlb
mov
jbe
mov
sub
sbb
inc
out
fisubl
mov
lods
push
jge
imul
cmp
pop
pop
pop
adc
icebp
cmp
jle
pusha
cmp
movsl
and
negb
daa
adc
mov
shlb
scas
stos
loopne
lods
pop
xchg
bound
cwtl
adc
dec
test
sbb
scas
imul
loopne
ljmp
and
cltd
pop
pop
add
mov
pushf
xchg
cwtl
rcrb
mov
adc
mov
enter
arpl
repnz
out
adc
negl
fcmovnu
jne
and
icebp
shrb
out
add
mov
xchg
dec
and
cmpsb
and
mov
negb
fadds
add
cs
push
inc
jne
inc
data16
push
adc
sbb
test
xlat
and
pop
mov
rclb
test
fcmovb
outsl
pop
or
sbb
stos
sbb
adc
mov
cld
je
pop
push
inc
inc
sbb
std
add
sub
adc
or
lods
sbb
fcoms
clc
xchg
test
sbb
bound
adc
mov
mov
jmp
cli
aaa
cmp
sbb
mov
fstpt
repnz
add
mov
mov
push
shlb
nop
loope
jmp
and
daa
jo
xchg
mov
add
dec
adcb
jnp
shrb
mov
fwait
and
fcom
sbb
ret
mov
mov
ftst
lsl
pop
cli
adc
mov
dec
rol
push
sarl
les
mov
scas
and
xchg
pop
xchg
xchg
xorb
popf
sbb
scas
sahf
pop
andl
fisttpll
movsb
inc
xchg
fidivl
cmp
mov
clc
call
inc
mov
jge
pop
loope
popa
cli
jmp
loope
dec
cltd
xchg
add
push
xor
insb
in
cmc
sbb
xchg
jo
movsl
xor
dec
fbstp
mov
gs
jnp
xchg
jg
push
jmp
sub
jns
fs
sahf
mov
insl
dec
fsubrs
int3
jns
popf
jno
xor
sbb
subl
stc
mov
bound
fsub
dec
and
pop
sti
call
jg
hlt
rolb
fsubp
mov
sbb
stos
mov
rol
jo
cwtl
nop
fidivl
outsl
inc
mov
add
adcb
test
test
daa
in
xchg
test
mov
add
scas
push
cmpsl
lret
rolb
jle
lret
stos
jbe
pop
mov
leave
testb
push
pop
shlb
cld
cli
int
cpuid
mov
cld
mov
arpl
or
cmovns
movsb
imull
lods
lret
loop
xchg
sub
dec
sub
aaa
scas
xlat
push
push
out
jnp
mov
bound
ljmp
push
jge
or
dec
mov
rolb
inc
adc
fdivr
lret
mov
adc
lock
inc
adc
mov
scas
andb
mov
sub
into
call
ds
rol
mov
inc
jno
mov
and
repz
mov
dec
xchg
mov
add
fistpl
int
sub
or
inc
add
add
jns
mov
add
dec
adc
fimuls
sbb
out
jp
mov
push
sahf
xchg
xor
repnz
pop
ja
sub
fdivr
sbb
cmp
int3
scas
and
pop
call
orl
cmp
aaa
lret
push
xchg
clc
movsb
cmc
repnz
hlt
lock
std
nop
fldl
mov
mov
sub
or
mov
jb
push
mov
fnstenv
and
in
stos
add
neg
int3
sbb
outsl
xchg
leave
stos
adc
addr16
addb
cmp
test
fs
dec
sub
out
push
lods
jmp
jmp
push
cmp
subl
out
xchg
inc
test
out
and
rcr
ljmp
and
inc
imul
jnp
shlb
inc
scas
test
daa
jecxz
lea
mov
shr
aaa
movsb
dec
int
nop
andb
aas
ljmp
ss
lcallw
adc
popa
mov
xor
jmp
pop
inc
sub
jg
pavgb
std
and
or
sub
shr
xor
lods
scas
jg
mov
mov
cld
xchg
push
adc
jo
adc
adc
or
dec
jp
jns
mov
cs
data16
repz
sbb
xchg
mov
rcrl
mov
xchg
mov
jne
call
xchg
addr16
sub
popa
jae
pop
adc
inc
adc
inc
sbb
mov
mov
cmp
xor
inc
cwtl
mov
pop
jge
xchg
cmp
mov
mov
mov
push
pop
aaa
icebp
stos
mov
jmp
cmp
cmp
flds
add
test
ficompl
lea
or
xchg
push
insb
jle
in
into
in
cltd
sbb
mov
daa
mov
aaa
xchg
bound
inc
clts
and
addr16
testb
mov
push
aas
xchg
shlb
cmp
sti
lods
adcl
call
push
mov
add
fsubs
and
xchg
jmp
dec
or
fstl
cltd
pop
mov
cmp
es
add
rolb
test
cmp
xor
xorl
jmp
jge
mov
hlt
mov
ficompl
mov
adc
lods
push
test
sub
imul
popa
arpl
or
sub
cmp
mov
adc
jp
sbb
and
jbe
pop
add
test
pop
loopne
mov
inc
sub
repnz
mov
shll
xor
add
inc
pushf
rorl
clc
mov
push
fstps
fcmovu
mov
lods
test
xchg
xor
or
mov
add
jb
mov
mov
push
sbb
rorl
outsl
adcl
int3
adc
jge
fmull
dec
push
mov
mov
insl
ret
adc
leave
xchg
pushl
aad
lds
vphsubwd
xchg
mov
int3
popf
cmp
adc
push
sbb
fcomps
jo
movsl
mov
push
enter
test
push
rorl
fistps
inc
cmp
hlt
test
ds
sub
pusha
cmp
jae
mov
dec
mov
mov
mov
lock
stos
and
inc
faddl
xchg
xchg
jg
adc
into
mov
inc
nop
int
lock
sbb
sbb
mov
push
std
add
mov
jle
std
jne
dec
sbb
mov
dec
sahf
mov
adc
shl
pop
icebp
xchg
and
xor
dec
adc
add
mov
out
add
int3
stc
xchg
push
loope
loopne
cmc
and
insl
adc
out
cmp
icebp
iret
adc
sub
jmp
push
mov
xor
rcrb
push
mov
xchg
test
add
in
inc
cli
mov
xchg
jl
or
movsb
test
out
or
pop
inc
daa
jle
pop
ret
mov
sbb
mov
inc
jmp
push
pop
xor
dec
ds
inc
aam
xchg
test
sbb
push
jns
test
aaa
test
cmp
cmc
push
xor
mov
jns
cmp
or
enter
out
adc
mov
mov
into
in
out
mov
pop
outsl
mov
push
push
stc
sbb
lock
xor
cmpsl
mov
pop
mov
pop
jg
popw
shrb
adcl
xchg
pop
xor
nop
orl
addr16
sbb
jg
xor
das
or
sbb
dec
movsl
mov
mov
jge
js
xor
cmpsb
adc
fnstenv
cmpsb
aad
mov
adc
and
aad
push
loope
lret
fwait
mov
sbb
add
mov
cmc
adc
mov
insb
ss
pop
enter
pop
incb
scas
push
es
dec
stos
rcrb
enter
fcmovbe
test
movsl
sbb
aaa
cmp
cmp
jno
jnp
daa
jo
test
inc
inc
mov
cmp
cmc
outsl
xchg
jmp
loope
xchg
pop
sarb
add
repnz
cli
hlt
test
inc
scas
adc
sahf
sti
clc
divb
xchg
sbb
and
enter
fidivl
sbb
scas
pop
arpl
jmp
pop
daa
jp
daa
aad
jns
nop
sbb
xchg
enter
jecxz
mov
add
dec
pop
jae
arpl
xor
xchg
mov
lahf
icebp
mov
inc
in
jge
xor
inc
cmc
movl
ja
and
mov
out
arpl
mov
mov
mov
lds
sbb
test
sbb
test
inc
lret
dec
xlat
jo
aam
sbb
push
xor
aad
inc
jg
cmp
push
lea
addb
inc
push
sbb
int3
mov
pushf
lahf
in
mov
adc
sub
ffree
add
lock
cmp
out
inc
test
lods
movsl
sub
sbb
aad
add
data16
repnz
lret
les
sbb
jbe
cld
test
decl
mov
repnz
xchg
push
pop
sbb
mov
mov
ds
outsl
mov
mov
shl
xorl
into
jne
mov
sbb
inc
xor
mov
scas
and
mov
jno
xorb
inc
adc
aas
jns
dec
notb
cmp
js
aaa
push
inc
rcr
int
push
and
mov
rcrl
cwtl
mov
std
in
mov
pop
or
enter
cmp
mov
xor
lods
xchg
push
push
push
sub
jne
or
cltd
lret
pop
mov
cmpsb
mov
adc
hlt
xor
js
jp
lahf
mov
xchg
inc
sub
jo
in
mov
cli
cmp
xor
insl
lahf
jmp
iret
or
xchg
rcl
jb
shlb
pusha
sbb
lds
inc
clc
arpl
mov
pop
mov
daa
nop
movsl
inc
sbb
enter
dec
jnp
mov
push
stc
dec
out
inc
fildll
mov
in
add
out
push
jge
cs
or
aam
push
mov
mov
scas
in
mov
inc
inc
push
ss
pop
std
pop
in
fwait
sar
loopne
mov
loopne
push
movsb
pushf
std
shlb
mov
and
pusha
or
lods
ja
std
cwtl
fcoms
xchg
sbb
cmc
dec
ss
pop
dec
int
dec
divl
pop
fmul
movl
inc
repnz
and
and
test
lds
stc
enter
add
pop
stc
mov
jo
mov
loop
dec
lods
cli
icebp
cltd
mov
mov
sub
inc
leave
xchg
xor
pop
inc
mov
fcoms
push
sbbb
lea
push
add
cmpsb
push
jmp
dec
leave
ret
jb
sbb
push
es
sbb
nop
mov
lret
sbb
lcall
mov
fildl
lods
cli
and
dec
jbe
js
xchg
pop
adcb
xchg
insl
add
imul
pop
ja
out
sti
cmc
adc
xchg
push
out
sbb
or
push
or
adc
js
and
popf
ja
out
xchg
sbb
adc
mov
pop
pop
imul
jnp
add
int
jg
or
out
pop
xor
scas
mov
arpl
push
mov
out
mov
js
test
fimull
mov
adc
out
notb
jmp
mov
or
dec
mov
inc
push
pushf
or
loop
inc
jge
jns
dec
dec
fstpt
mov
inc
or
ja
stc
and
stos
bound
jmp
cli
mov
jmp
jmp
fsts
jb
sti
fwait
insb
mov
test
add
jae
jmp
cwtl
fwait
jnp
repnz
inc
ficompl
test
xchg
pop
into
iret
loop
mov
loopne
sbb
mov
cltd
push
std
mov
mov
out
out
pop
insb
popa
mov
inc
push
push
mov
fidivrs
js
mov
out
adc
mov
xchg
aaa
add
inc
add
jmp
adc
pop
ss
inc
sbb
sub
cli
and
pop
int
mov
std
ljmp
sub
jg
fmull
and
ss
inc
xor
js
shr
loop
jmp
jle
mov
mov
pusha
enter
dec
sub
mov
std
mov
aam
sbb
lret
mov
daa
pop
movsl
push
push
rorb
leave
popa
dec
cmpl
test
adc
adc
cmp
test
bound
les
int
rcl
pop
dec
adc
push
out
push
nop
sub
leave
or
cmpsl
jle
insl
popa
cmp
jo
lret
push
out
aaa
sahf
icebp
imul
and
cwtl
cltd
push
pusha
or
xchg
cmpsb
rcrl
cmpsb
inc
lods
mov
test
in
insb
inc
sbb
pop
mov
fisubrl
rcl
inc
jnp
pop
mov
push
mov
jecxz
lea
popf
lret
in
inc
or
xor
xchg
cmp
pop
dec
es
insl
dec
mov
push
mov
adc
adc
push
test
cld
jne
outsb
cld
xchg
and
or
jmp
xor
mov
lcall
cs
sub
mov
popa
inc
push
je
xor
jecxz
push
adc
sbb
mov
jmp
jbe
push
data16
xlat
and
das
mov
push
daa
mov
or
push
sub
jnp
rolb
cld
lahf
shl
mov
daa
sahf
jbe
aaa
push
jecxz
pop
jge
add
mov
stos
loop
inc
push
out
scas
rep
add
in
outsb
lret
dec
pop
es
mov
mov
hlt
inc
push
lret
and
add
add
xchg
mov
xlat
hlt
jmp
mov
cmp
mov
popa
das
mov
fdiv
aaa
out
loop
lds
pop
xchg
add
cmpsl
loopne
repnz
pop
sti
sbb
aad
pop
xor
and
stos
lret
out
pop
push
icebp
push
es
aad
lods
add
pop
arpl
dec
leave
jg
xlat
mov
lea
add
sub
adc
stos
pusha
mov
lret
lock
in
lret
mov
mov
or
addr16
movsl
adc
test
inc
push
xlat
sbb
nop
pop
push
sbb
out
arpl
scas
inc
xor
repnz
inc
pop
push
mov
leave
jo
mov
jmp
cmc
mov
cmp
and
jmp
mov
mov
adc
imul
adc
mov
push
xchg
adc
stc
mov
or
mov
sysenter
sbb
sub
cmp
cli
mov
inc
cmp
lock
ret
inc
inc
push
outsl
arpl
hlt
mov
adc
jge
sahf
movsl
cmp
aad
jp
mov
fcom
sub
aam
fcomip
and
loope
popf
inc
insl
lret
subl
mov
xchg
fcmovbe
or
cmp
loope
fs
adc
push
or
jo
sarb
aaa
pop
movsb
mov
add
mov
lahf
push
repz
add
int
data16
scas
mov
jmp
cmpsb
gs
xor
xchg
loope
mov
nop
dec
add
int
imulb
jbe
mov
and
jo
jmp
test
or
add
cmp
loop
loopne
dec
dec
xchg
jno
rcrb
pop
mov
jle
repnz
mov
sbb
xchg
jb
fisubrs
xchg
add
iret
and
iret
adc
sub
loope
cld
loope
xchg
sbb
je
xchg
add
mov
push
xor
fsubl
movsb
repz
sub
mov
mov
or
and
lds
inc
jg
fstpl
cld
or
test
hlt
cli
sbb
sub
ror
pop
jg
ds
add
or
lahf
push
push
adc
mov
xchg
dec
jne
data16
shr
pop
cmp
orl
leave
or
pop
sti
jae
inc
jae
lcall
mov
and
loopne
lds
and
arpl
rorb
jge
mov
repz
insl
test
mov
cs
adc
in
mov
les
inc
scas
xor
pop
sbb
stos
and
or
pusha
in
std
and
and
inc
rclb
mov
pushf
or
out
push
mov
adc
sub
xor
sub
out
ret
xor
sbb
loope
mov
sarl
fldt
mov
xchg
fldt
shr
cmp
mov
jp
cmp
in
mov
jae
sbb
js
push
xor
out
pop
sub
and
jb
out
in
cmp
xor
push
cld
test
das
mov
jbe
fadds
sub
lret
xlat
fsubrs
xor
into
xchg
inc
mov
lahf
or
rcll
or
mov
push
sbb
pop
xor
sub
xchg
lret
sub
jl
cld
movsb
pop
aam
inc
pop
cmpsl
aaa
mov
push
xchg
add
addr16
lods
sarl
in
adc
cld
xchg
cmpsb
out
dec
cmp
dec
aam
or
push
int3
shlb
mov
scas
outsb
test
hlt
sahf
outsb
and
insb
mov
clc
movsl
jbe
push
inc
icebp
pop
std
jne
cmpsb
pop
inc
sbbl
push
xor
je
or
jbe
imul
adc
mov
lods
dec
sbb
dec
pop
out
jo
out
dec
inc
stos
outsl
imul
jg
mov
push
les
lds
pop
mov
cld
es
orl
xchg
leave
xchg
sub
shr
loope
push
outsb
push
movl
lcall
loopne
fistpl
lret
sub
dec
xchg
or
shrb
adc
xchg
cmpsb
std
fs
pop
stc
push
into
dec
and
push
push
mov
lds
add
adc
mov
push
dec
mov
sub
inc
sub
pop
push
add
and
in
inc
xchg
sbb
jno
mov
int3
pop
stc
aaa
push
adc
jo
arpl
mov
adc
sub
neg
and
cltd
aas
sarl
mov
mov
fdiv
inc
push
outsb
inc
cmc
add
push
test
sub
sub
hlt
push
insl
inc
cmp
inc
jge
push
outsl
sti
dec
adc
int
cmpsb
add
jecxz
xchg
and
ss
cltd
insl
jecxz
cmp
mov
and
rcll
xor
xchg
scas
fwait
jl
fcompl
jge
aam
mov
jne
aad
imul
dec
xor
dec
push
outsl
repnz
shrl
fmull
pop
pop
sahf
icebp
out
out
bound
xor
sub
push
mov
mov
arpl
pop
xor
mov
stos
mov
lahf
cmp
lcall
mov
int3
add
dec
push
fidivl
mov
clc
mov
nop
movsb
push
jle
xchg
cld
es
mov
push
aas
jae
xchg
add
andb
outsl
fldl2e
or
ljmp
inc
clc
push
mov
push
push
lock
xor
mov
cmc
mov
int
shlb
xor
mov
or
into
hlt
ja
mov
mov
es
xor
mov
mov
sbb
push
aad
fimuls
test
push
stos
insl
adc
jno
jmp
rol
cmpsb
adc
or
mov
fs
jg
out
dec
bswap
ds
cmp
icebp
loope
inc
mov
neg
stos
leave
data16
fwait
and
cmpsl
dec
adc
in
ds
pop
ljmp
mov
or
add
ret
inc
jle
add
xchg
cmpsb
mov
cmpl
sub
lods
lods
mov
push
inc
loop
mov
outsl
sub
mov
add
inc
xor
adc
mov
lods
popa
in
out
xor
cld
loopne
imul
hlt
loop
cmp
sahf
or
test
or
sub
inc
sbb
xor
adc
push
xchg
sub
sbb
adc
mov
pop
add
bound
mov
jo
sub
out
jb
rcrl
fmull
pop
insb
mull
sahf
add
sbb
or
cltd
mov
sub
sbb
mov
and
mov
xchg
mov
aam
aas
fcompl
or
dec
cmpsb
sbb
push
mov
jae
and
cmp
mov
push
pop
mov
gs
xchg
shll
test
sbb
mov
fildll
fisttpl
jle
and
test
add
int
jle
pop
ja
fmul
add
fdivrp
popf
push
or
dec
pop
xor
cmc
dec
lods
add
and
es
push
cs
inc
xchg
or
sbb
xchg
shrl
ljmp
outsb
sahf
xor
mov
xor
pushf
adc
test
pop
sbb
jmp
mov
pop
ret
mov
jge
stos
ja,pt
out
sub
mov
and
push
dec
jb
loop
lock
and
cmc
gs
mov
mov
cmp
cmp
jae
daa
andb
cwtl
push
jnp
mov
mov
push
adc
fnsetpm(287
xor
sub
je
push
mov
lock
test
sub
hlt
test
adc
inc
xlat
dec
push
xchg
jmp
adc
xor
mov
outsb
cmp
add
scas
pop
imul
popa
cltd
adc
lret
jg
mov
mov
movsl
mov
push
aad
jnp
rcll
movsb
cld
stos
lcall
mov
jbe
add
aas
xchg
jl
cmp
push
les
movb
cmpsb
fld
and
adc
fidivs
jmp
imul
push
sub
ret
in
adc
pop
hlt
jle,pt
int3
inc
jno
shll
pop
jne
jnp
sahf
add
fninit
sub
jae
adc
mov
cmp
or
pop
popf
scas
lcall
cmp
jb,pn
mov
push
in
cmp
and
add
leave
mov
icebp
rcll
xchg
orb
mov
add
jae
mov
xchg
mov
int3
aad
sahf
push
and
cmp
call
cmp
mov
int
inc
pop
xchg
mov
xchg
and
and
stc
and
out
sub
inc
sahf
mov
mov
mov
push
stos
cmpsb
lahf
mov
leave
mov
cmp
fisubrs
cmp
icebp
lret
mov
push
pop
bound
aas
shrl
inc
loopne
mov
xchg
add
xor
cmp
mov
and
and
lds
mov
movsb
aam
jns
mov
and
jnp
push
cmpsl
pop
in
mov
imul
clc
aaa
pop
les
test
push
or
cltd
fiaddl
mov
sbb
or
pop
cmpsb
lds
cmp
ficompl
jge
push
xor
mov
push
ljmp
mov
ja
bnd
pushf
test
inc
mov
aad
insb
or
mov
iret
xchg
jae
fs
add
clc
adc
adc
lea
out
lret
int3
and
fwait
loopne
or
out
adcb
sti
add
cwtl
dec
xchg
inc
xor
jmp
fxch
add
ss
sbb
lahf
insl
sbb
mov
jne
imul
fidivs
push
xchg
pop
mov
aad
push
xchg
lret
rcll
mov
nop
push
outsb
add
movsb
mov
rcrl
pop
lea
cmp
xor
xor
iret
leave
jg
jae
mov
mov
shlb
lcall
inc
stos
stos
or
imul
pop
mov
sbbb
orb
jo
add
sub
fcmovnbe
jb
movsb
sti
lret
jbe
int
push
pop
mov
mov
inc
jg
mov
js
inc
fdivl
test
ret
das
pop
xchg
or
into
pop
hlt
pop
adc
adc
pop
test
add
test
mov
pop
add
cwtl
jecxz
lods
inc
fmull
popl
repnz
dec
fisubl
jg
pop
test
mov
test
and
or
lcall
mov
cmp
push
sbb
mov
fnstcw
shlb
imul
enter
mov
gs
or
xchg
imul
dec
roll
push
mov
add
sahf
pop
and
hlt
mov
xlat
xchg
sbbl
sub
leave
xchg
outsl
hlt
idivl
ja
xchg
mov
aaa
subb
jmp
orb
in
jnp
cmp
inc
cwtl
bnd
scas
mov
dec
test
ja
lea
loopne
adc
pop
and
cmc
xchg
bound
daa
and
push
and
inc
out
mov
add
cmp
loop
lods
cmp
push
lret
inc
es
xchg
mov
jle
dec
or
loope
jl
pop
fs
add
dec
in
sbb
sbb
fs
inc
pusha
push
std
jnp
push
mov
dec
addr16
adc
push
jns
lcall
aas
jno
push
ljmp
pop
pushf
shll
or
xchg
add
stos
lods
xchg
popa
pop
adc
sub
jo
ja
das
loope
jmp
jle
sti
xchg
loop
or
shlb
out
push
scas
jg
jo
xchg
pop
xchg
outsl
xor
cs
lret
addb
jle
xor
sub
iret
ret
scas
mov
mov
in
inc
dec
mov
pop
add
adc
adc
ja
jne
cmpb
cmp
sahf
jb
das
fwait
in
adc
repz
sbb
lcall
jp
inc
out
lods
notl
mulb
stos
inc
iret
pushf
fistpl
mov
fildll
js
into
aad
incl
pop
add
xor
jns
mov
inc
in
stc
out
sbbl
fstps
xor
aas
push
pushf
sub
cmp
fistpll
icebp
xlat
iret
clc
mov
dec
shlb
in
je
addr16
cmp
mov
sbb
push
ljmp
push
add
sahf
fwait
add
clc
jne
movsl
jge
std
stos
xchg
aas
mov
jo
jp
iret
pop
inc
jg
and
add
flds
push
aam
popa
jl
lods
xchg
pop
mov
sub
fnstcw
in
xchg
mov
xchg
xchg
inc
cld
adc
cmp
dec
lret
mov
fst
push
jg
ret
jae
mov
sbb
cmp
pop
cmp
js
inc
sub
adc
push
in
repz
outsw
sbb
out
ret
jae
out
sti
std
xorl
jne
outsb
cmpsb
movsl
add
cmpsl
out
arpl
xor
ss
mov
in
pop
sub
lea
nop
mov
adc
orb
repz
lahf
out
push
mov
je
and
pop
stos
mov
adc
inc
mov
jnp
lahf
bound
lds
fwait
cmp
int3
ljmp
int
lds
icebp
or
or
jb
int3
insl
add
repnz
stc
jecxz
cwtl
bnd
adc
add
jnp
test
mov
lret
orl
mov
inc
int3
ret
add
xchg
push
mov
testb
mov
jecxz
push
pusha
test
and
mov
ds
xchg
jns
aad
push
out
xchg
sbb
sub
lret
or
je
push
fwait
cmc
sub
cwtl
and
int
nop
daa
ss
inc
cmpsb
aaa
push
je
inc
gs
pextrw
or
loop
cmp
into
leave
mov
hlt
cmp
and
lcall
repz
addr16
and
add
inc
jne
sti
fistpll
iret
cmc
fsubs
pop
ret
add
int3
sarb
test
mov
mov
aas
and
xor
pop
popa
adc
lret
mov
xlat
pop
je
cld
repz
arpl
push
mov
push
aad
es
ret
ja
xor
ret
cmp
xchg
cltd
mov
jmp
mov
movsl
cmp
adc
mov
and
movsb
jmp
push
push
push
inc
notl
push
scas
adc
add
inc
fs
cmp
push
mov
xor
pushf
pop
lcall
mov
iret
into
inc
arpl
movsb
ret
pop
js
mov
addr16
shlb
sbb
stc
add
fstps
xchg
stc
and
fildll
sub
into
cli
aam
jo
push
out
dec
xor
xor
adc
das
mov
fs
push
mov
lahf
xor
loopne
xchg
and
fincstp
jo
add
stos
dec
lock
mov
xchg
sub
int
mov
adc
push
in
bound
inc
sbb
iret
mov
cmc
jne
cmp
data16
ljmp
in
into
rcl
loope
jge
test
add
push
fdivrl
dec
test
push
cmc
sbb
lods
add
sbb
xchg
fwait
pop
xor
jge
mov
fcoms
jne
bound
mov
dec
in
mov
int
xlat
add
fnstsw
mov
dec
daa
xor
shl
mov
pop
sub
and
adc
mov
rcrl
fs
test
dec
cmpsl
dec
mov
shlb
add
sahf
out
cli
and
scas
adc
jge
fcompl
mov
dec
cmp
inc
outsl
adc
and
push
lahf
push
out
int
ficoms
cmp
insl
aas
or
rol
iret
adc
mov
pop
adc
add
fst
jle
int3
fcmovb
nop
ret
pop
test
sub
fistpll
repz
push
sbb
int
subl
js
pushf
popa
add
imul
push
pop
mov
or
mov
loope
push
or
xor
mov
inc
lods
outsb
rcll
jge
add
xor
lret
adc
lret
pop
jne
enter
enter
repnz
push
mov
mov
xchg
pop
xorb
pop
push
jp
outsb
enter
push
in
xchg
xor
xor
daa
jecxz
xchg
sarb
and
xchg
cmp
inc
data16
sti
xchg
fdivrs
pop
xchg
dec
scas
jmp
mov
in
mov
ss
jecxz
or
mov
sbb
mov
jbe
sub
dec
addr16
or
push
xchg
ss
into
and
aam
adc
sarb
test
inc
out
pop
jne
cmp
test
jmp
mov
popf
and
stos
mov
fbstp
mov
add
dec
xchg
sub
mov
ja
mov
imul
add
mov
ficoms
or
das
ss
into
pop
and
leave
loop
jp
repnz
jge
add
repnz
cmp
cmc
popa
mov
xchg
aad
ret
inc
aam
add
add
movsb
stos
jb
xorl
add
sub
cltd
and
push
push
hlt
xchg
int3
andb
mov
sub
pop
mov
or
loop
mov
in
cld
stc
divl
mov
jne
sub
xor
rcr
out
xorl
adc
dec
mov
push
scas
push
mov
enter
xchg
clc
ss
push
sahf
loop
mov
mov
push
in
cmp
cld
movl
add
jl
mov
scas
mov
and
fstps
int
push
sbb
stc
xlat
stos
pushl
push
in
adc
jnp
or
or
lea
inc
pusha
jmp
pusha
nop
adc
mov
jbe
or
dec
fmuls
ror
pushf
sub
mov
cs
push
dec
mov
jbe
xchg
dec
cld
xor
scas
mov
or
icebp
addl
dec
repz
mov
pop
pop
orb
push
js
mov
xchg
mov
pop
dec
jno
fdiv
gs
inc
div
pop
mov
pop
cmp
movsb
mov
rcll
dec
fwait
repz
mov
mov
int3
in
pop
mov
xchg
pop
mov
inc
ss
mov
cmpsl
adc
jg
gs
frstor
sbb
insl
aam
mov
mov
scas
jb
test
test
xchg
fildll
scas
addb
xchg
push
inc
add
or
or
movsl
xchg
nop
cmpsl
aam
jl
pop
imul
xchg
addr16
mov
sub
ror
xchg
scas
sub
sbb
lret
mov
jns
stos
int3
std
mov
sbb
xchg
xchg
lock
jb
inc
and
fs
xchg
int
arpl
cltd
ret
jnp
cld
stos
lcall
mov
loopne
jo
jbe
andl
rcl
sub
push
inc
mov
inc
mov
int
xor
ds
xchg
sar
addr16
inc
sub
add
fnstcw
pop
stc
lock
loope
mov
sub
jae
pop
jg
xchg
jns
ljmp
data16
pop
cld
imul
clc
push
xchg
jno
ljmp
mov
cmp
clc
xor
push
adc
jnp
out
mov
ds
addr16
xchg
lods
cmpsl
leave
inc
shlb
mov
ficoms
sti
mov
cmp
dec
inc
aam
fidivrl
mov
jg
add
mov
jmp
dec
or
add
cmp
push
adc
stc
mov
adc
xchg
mov
insl
xor
les
mov
dec
insl
ja
fnstcw
xchg
ja
pop
push
sbb
xor
xchg
ret
xchg
shrl
inc
mov
and
int
adc
jno
aad
call
push
sti
test
mov
std
mov
insb
pop
popf
pushf
xchg
out
pop
inc
out
fnstenv
pop
mov
pushf
aam
cmpsb
orb
xor
shll
jne
add
push
and
hlt
jg
cmovno
pop
inc
inc
std
push
pusha
xchg
loope
shll
neg
push
xchg
xor
adc
in
mov
rol
pop
cld
clc
and
pop
sub
mov
mov
cmp
mov
mov
popa
test
ljmp
popa
bound
sbb
inc
test
dec
jne
repz
push
bound
inc
push
mov
stos
inc
inc
mov
cwtl
pop
push
add
xchg
mov
mov
dec
push
sbb
mov
cwtl
mov
jl
call
cmp
fcomps
ja
xchg
mov
lock
loop
and
add
fcompl
hlt
mov
mov
icebp
inc
dec
add
movsl
fdivrp
out
jge
xlat
movsl
dec
fldenv
clc
aaa
in
inc
or
xchg
loop
ds
or
push
cmpsl
ljmp
jae
push
adc
pusha
jae
push
insl
mov
pop
ret
push
shlb
mov
add
xchg
pop
mov
imul
inc
stos
pop
test
test
jb
insb
and
add
mov
cltd
aad
pop
dec
enter
mov
dec
std
jle
push
xchg
test
jb
aam
bound
inc
xchg
jle
je
push
das
dec
neg
arpl
jmp
fucomp
icebp
push
addl
pop
sub
js
pop
add
cltd
popf
jge
mov
shrl
sbb
xchg
scas
xchg
jp
mov
cmc
aad
inc
jno
mov
mov
fdivs
mov
stc
dec
movsl
or
loop
mov
pop
imul
mov
and
jl
push
jg
xchg
fsubr
add
push
lock
adc
bound
int3
mov
in
lcall
mov
sti
scas
dec
les
movsb
dec
imul
into
sbb
xchg
dec
mov
cmp
sbb
mov
jl
into
loopne
or
cwtl
clc
out
in
imul
cmp
add
push
pop
sub
testb
scas
add
xchg
dec
fimull
repnz
sbb
psrld
mov
outsb
cmc
xchg
cmp
loopne
mov
xchg
repz
aad
xor
sbb
xchg
inc
sbb
mov
in
fsubs
cmp
mov
insb
mov
fnstenv
jle
and
out
cmc
les
dec
ficomps
xor
ret
lret
call
or
and
push
scas
sbb
hlt
sub
fcomp
add
mov
rorl
jle
or
jbe
pop
insb
stc
je
repz
adc
push
pop
mov
das
fcom
mov
lds
mov
dec
jb
cmp
daa
and
dec
push
add
and
pop
fldt
scas
and
int3
push
pop
inc
xor
lret
leave
leave
adc
fnstsw
mov
mov
add
aam
push
test
mov
adc
int3
out
testl
negl
inc
sbb
xchg
in
sbb
inc
addb
push
cmpsb
cmp
mov
jl
test
mov
or
in
dec
nop
test
loop
popa
scas
mov
out
mov
icebp
cmp
pushf
test
test
aas
jo
adc
and
pop
popf
xchg
jecxz
orb
arpl
adc
out
inc
mov
xor
cmp
mov
sti
mov
imul
or
icebp
out
xchg
pop
push
sub
ret
daa
ss
imul
mov
pop
into
add
sbb
cltd
fimuls
dec
push
lahf
fists
and
enter
sbb
into
lods
clc
daa
pop
jge
pop
icebp
imul
push
mov
aam
data16
cmp
inc
pop
mov
mov
jmp
mov
inc
in
push
inc
xchg
xor
dec
cli
in
lcall
cmc
cmpsl
fidivrl
add
daa
call
inc
or
pop
cmp
shl
cmp
cmp
dec
add
idivl
add
cmp
outsl
ja
dec
in
xor
cmpsl
dec
loop
xchg
adc
lods
dec
cmpsb
mov
outsb
fucom
sahf
outsb
out
mov
sub
xor
or
sbb
jne
clc
lods
aas
xor
jns
push
mov
and
and
xchg
cmpsl
jae
jmp
push
or
jae
or
in
sub
sbb
and
xchg
inc
dec
loope
in
sbb
sub
pop
inc
mov
je
lret
push
stos
xchg
inc
adc
cltd
in
int
pop
sbb
popa
dec
push
in
and
gs
rcrl
mov
add
into
xchg
std
repnz
dec
in
popa
out
call
call
xchg
xor
and
and
dec
out
mov
cmp
clc
mov
shr
adc
cmp
repnz
addr16
sbb
loope
adc
mov
cmp
mov
sti
movsl
bound
jecxz
dec
imul
mov
data16
sub
xlat
js
out
inc
xor
les
roll
cmpl
ret
cld
push
orl
push
jno
in
das
jmp
decb
pop
sub
scas
mov
or
pop
sub
mov
test
ja
mov
xchg
lods
pop
test
out
lret
enter
push
jbe
push
mov
and
mov
arpl
repz
xchg
push
dec
aaa
pop
outsl
adc
sub
popf
fisubrs
push
mov
loopne
outsb
push
sbb
mov
lds
pop
adc
and
sub
and
pop
and
dec
test
jno
ja
sbb
mov
in
mov
dec
push
jle
mov
mov
adc
fwait
adc
sbbl
inc
cmpsb
jmp
out
inc
mov
push
push
and
popl
mov
icebp
sbb
sahf
repz
xchg
and
fwait
add
cmpsb
add
lds
repnz
lock
cmpsb
sub
rcr
pop
sarl
ja
xor
pushf
xchg
aad
stc
pop
cwtl
or
pop
sbb
popa
cmp
mov
xchg
out
aam
scas
out
pop
fdivl
inc
or
xchg
ds
imul
lock
or
add
aas
jp
clc
lret
in
test
jl
pop
lods
xor
sbb
mov
add
cmp
xor
cli
cmp
ret
xchg
lret
inc
dec
adc
xor
pop
xor
cli
fdivrl
out
xor
pusha
or
inc
jge
movsl
xchg
pop
daa
loope
sbb
cmp
xchg
cmp
or
push
sub
dec
jne
loop
dec
pushf
sbb
sub
jle
inc
and
or
or
out
stos
jmp
les
mov
nop
cmp
loop
push
stos
dec
popf
sahf
and
mov
xor
cmc
sub
sub
push
pop
out
fidivl
mov
fildl
or
cli
cmpsb
pop
outsb
mov
dec
ljmp
mov
or
test
repz
imul
or
pop
je
mov
push
xchg
jle
arpl
adc
and
subl
pop
xchg
fdivs
push
leave
adc
test
cs
lods
cltd
andl
push
mov
add
ds
mov
loopne
xchg
shll
sbb
mov
aas
fidivl
negl
mov
arpl
bound
pop
dec
idivl
jecxz
and
call
shlb
int
push
rorl
push
jp
inc
sub
mov
aas
test
dec
popa
sbb
or
pop
scas
lds
gs
push
fmuls
repz
or
pop
and
mov
mov
lea
jno
jmp
rcr
sti
pop
push
lret
cli
insl
or
cmpsb
cwtl
inc
push
mov
cwtl
push
adc
ljmp
daa
xor
pop
push
in
rcrb
sbb
push
cs
and
fsubs
cltd
shll
adc
pop
jp
or
aad
jmp
fwait
insl
jl
lcall
cmp
arpl
loopne
xchg
out
mov
pop
pop
mov
jp
mov
push
cltd
adc
lcall
hlt
dec
mov
push
jge
push
aad
and
scas
sbb
xor
sub
cmpsl
std
mov
daa
push
call
jg
pop
cmc
outsb
lret
sub
inc
in
xor
repz
mov
jp
push
xor
outsb
std
cs
call
scas
clc
or
push
fst
jg
mov
jg
mov
stos
xchg
push
and
xor
sbb
or
in
call
iret
mov
pop
aaa
pop
dec
call
jns
fidivl
jo
jnp
lahf
xchg
stos
test
xor
adc
add
adc
add
jo
cmpxchg8b
xchg
inc
push
repz
mov
xchg
mov
sbb
repz
movl
jae
fs
inc
repnz
push
fsubrl
dec
mov
cltd
xchg
mov
cltd
iret
repnz
outsl
or
insl
cltd
add
mov
divl
jecxz
std
xchg
pop
adc
or
ss
repnz
xchg
push
shrl
int3
mov
jo
push
push
add
stos
push
mov
fnsave
repz
scas
pop
pop
inc
or
push
fstenv
test
bound
mov
shlb
jl
cltd
cmovl
scas
xchg
push
mov
jb
imul
imul
ljmp
movsl
xor
xchg
stc
sbb
hlt
in
jmp
mov
fstl
out
push
loop
loopne
repz
dec
xlat
cmp
frstor
adc
ret
sbb
mov
ljmp
cmpsl
inc
aas
rorl
mull
das
cmpsl
adc
mov
icebp
inc
mov
jg
in
mov
push
repz
push
stc
and
lcall
ds
out
adc
mov
add
sahf
mov
mov
inc
xor
rorb
push
js
repnz
pusha
in
sti
sbb
sbb
mov
pushf
adc
pop
icebp
notb
and
pop
aad
repnz
fdiv
cmpl
std
lahf
pop
mov
je
cmp
popa
add
in
pop
fdivs
dec
cwtl
shll
mov
dec
xchg
mov
dec
fs
pop
or
mov
mov
aaa
and
jge
and
fisttpl
loop
mov
clc
bound
inc
push
test
addl
sti
mov
outsl
jb
sub
popa
in
and
sub
add
insb
dec
cwtl
mov
ds
adc
jg
subb
insl
inc
mov
mov
insb
shrl
dec
cwtl
mov
jge
scas
std
cltd
lcall
loopne
push
mov
into
movsb
stos
push
stos
cmp
lods
gs
loopne
pushf
das
test
mov
aad
inc
fcomip
pop
or
jbe
loop
mov
cmp
aaa
inc
push
loopne
add
lcall
shl
pop
add
xor
aad
adc
loop
and
mov
jmp
inc
pop
add
fisttpll
imul
jns
and
inc
add
and
jl
jmp
iret
jae
xor
idiv
jmp
push
nop
adc
xor
xor
mov
add
clc
pop
rcll
stc
lret
mov
in
xchg
mov
lock
or
xor
neg
cmp
test
push
dec
fwait
dec
popa
fstp
pop
fwait
push
fistpll
cs
mov
xchg
dec
sbb
push
lea
mov
mov
test
nop
mov
jae
or
sub
cmpsl
imul
fcmove
aam
inc
pop
jmp
mov
stos
xor
lahf
sbb
addr16
mov
pop
jp
xchg
cwtl
mov
test
push
push
pop
lods
test
loop
and
ljmp
repz
push
daa
iret
or
cmp
jmp
push
in
int
adc
xchg
push
xor
mov
pusha
aad
xchg
pop
fmull
fldt
pop
int3
xor
pop
shrb
xchg
cmpsb
cld
cli
ss
jo
mov
xor
mov
loope
push
inc
inc
push
scas
pop
add
xchg
nop
inc
mov
inc
pop
mov
and
pop
in
inc
jne
pop
shrl
xlat
push
adc
dec
pop
popa
fldt
and
in
mov
xchg
call
mov
push
sbb
mov
lret
mov
jge
or
popf
icebp
sbb
mov
hlt
push
and
push
sti
ret
test
pop
je
or
clc
cmpsl
xchg
mov
dec
popa
mov
test
xchg
int
and
lret
mov
dec
jmp
xor
ss
dec
fisttpll
sbb
jno
je
out
add
sbb
negl
in
inc
out
dec
cmp
jl
mov
into
in
push
arpl
cmp
pop
mov
in
pop
mov
lret
fbld
mov
shlb
sub
leave
adc
jle
in
cmp
dec
arpl
lret
sbbl
or
cmp
or
dec
std
xor
push
repz
and
mov
xchg
in
adc
sbb
inc
ljmp
xchg
cmc
lahf
mov
imul
paddsb
adc
xor
jne
in
js
ds
popw
or
xorl
sub
lea
popa
pop
jb
int
and
mov
fstl
jns
lret
loop
jnp
rcrl
outsb
mov
outsl
je
lods
loop
dec
nop
ror
jmp
es
out
int3
jecxz
int
jl
in
or
push
bound
push
jle
push
xor
jg
xchg
out
aaa
out
sbb
cwtl
adcb
ret
mov
jnp
push
jmp
stc
push
lds
inc
js
ret
fpatan
imul
inc
out
push
cmp
push
mov
iret
mov
or
arpl
cmpsb
inc
movsl
icebp
popf
aad
lock
cli
cmp
mov
pop
pop
insl
lock
ret
test
clc
cwtl
fcomi
inc
pushf
xor
shr
pop
fcomp
stos
xchg
add
imul
xor
outsl
in
fwait
dec
add
cs
fs
lods
add
lods
insb
not
xor
xor
ret
pusha
dec
dec
call
outsl
mov
mov
mov
push
xor
data16
mov
xor
aaa
pop
inc
push
cld
popf
pop
jo
cmp
mov
stos
mov
faddl
flds
xor
ucomiss
adc
std
test
int3
sbbl
insl
int3
mov
ja
in
in
test
xchg
or
test
lods
out
roll
mov
push
mov
jo
ficompl
cmpsb
pushf
rolb
add
sub
mov
push
loop
or
push
lret
xchg
mov
mov
lcall
loop
pop
aas
cmp
jecxz
movsb
mov
hlt
mov
adc
dec
pop
inc
jecxz
xchg
inc
fstl
stos
cmp
sub
aad
mov
hlt
and
dec
mov
loopne
scas
and
roll
cmc
jle
test
xchg
pusha
adc
pop
subb
scas
inc
scas
dec
stc
mov
inc
cwtl
add
fldt
or
out
or
roll
pop
in
das
jbe
add
dec
add
inc
stc
inc
pop
shll
fidivrs
into
jo
dec
fisttps
dec
pusha
dec
movsl
add
push
fcom
xchg
cmp
pop
cmp
jp
data16
sbb
mov
je
xor
xor
faddl
fimull
mov
cltd
cmc
jg
mov
sbbb
mov
test
cmc
scas
ss
and
sub
and
stos
shlb
mov
movsb
jbe
leave
or
push
mul
mov
lahf
dec
data16
divb
movsb
je
gs
cli
incb
mov
mov
cmpsb
sbb
fstl
cmc
mov
pusha
xchg
push
and
fnstcw
test
jg
jg
mov
or
iret
imul
adc
inc
arpl
mov
xor
je
jmp
dec
mov
pushf
or
xchg
imul
divl
xchg
std
roll
outsl
outsw
inc
in
adc
sbb
push
or
pushf
sub
xchg
call
mov
loop
cmc
or
xor
cmp
xchg
and
jns
xor
cmp
inc
fisubl
cmpsb
addr16
ja
sahf
dec
or
cld
mov
clc
dec
fs
pop
pop
shlb
fsubrl
int3
dec
pop
sub
cld
les
sub
dec
cli
int3
mov
xchg
repnz
out
push
aas
lea
xchg
jl
adc
push
das
imul
add
xchg
add
rcrw
stos
adc
out
cmp
ret
mov
cs
or
std
vcvtpd2psy
dec
jns
adc
xlat
lods
jb
push
adc
sbb
pop
outsl
xor
xor
aas
inc
or
adc
imul
push
xchg
xchg
xchg
sbb
jge
fst
dec
inc
scas
lret
jl
mov
ror
mov
cmp
or
mov
idivl
in
fwait
ret
ljmp
cmp
cmpb
sub
push
dec
mov
pusha
xor
mov
pop
push
shlb
stos
stc
cwtl
jl
sub
push
scas
mov
idivb
adc
repz
sahf
shll
cli
add
xchg
pusha
push
push
fstpt
cli
scas
sub
push
fsts
or
add
sahf
fwait
cmpsb
dec
mov
add
push
and
loopne
test
mov
or
jb
test
jnp
add
or
pop
cmp
out
fmuls
adc
xchg
pop
insl
push
test
pminsw
fcom
mov
aam
rol
jne
lods
lahf
inc
sub
mov
sbb
and
int3
mov
pop
mov
int3
out
test
pop
jl
inc
push
lock
add
cli
pop
into
inc
pop
shlb
out
pop
lods
mov
shrb
cmpsb
adc
or
jle
dec
shll
dec
cmp
test
xlat
fistpl
call
je
icebp
push
inc
lahf
sub
cli
jle
or
movsb
imul
sar
loopne
mov
ficompl
imul
pushf
sub
sbb
and
cmp
mov
addl
xchg
ds
idivl
push
pop
jg
aad
mov
mov
xchg
pop
test
or
and
sbb
pushf
push
sar
sub
js
adc
mov
inc
lods
jmp
aas
cmp
inc
inc
mov
jae
pushf
test
push
lcall
inc
pusha
mov
cmp
js
pop
adc
sbb
in
scas
cltd
jns
repnz
ja
add
cld
xchg
and
popl
xchg
shlb
int
add
popa
std
fisttpl
xchg
mov
push
lds
push
pop
push
aas
ret
pop
cmp
rcr
mov
pop
xchg
loopne
xor
fsubp
lea
adc
stos
flds
cltd
xchg
lcall
ss
cmc
sub
fst
neg
ret
loope
cltd
mov
jne
dec
sbb
aaa
and
pushl
mov
into
jnp
aaa
outsb
inc
es
shl
pop
data16
mov
pop
sbb
stc
inc
mov
idiv
lds
mov
fmuls
inc
les
test
dec
mov
int3
jecxz
pop
ficompl
sbb
stc
movsl
into
aaa
and
mov
adc
lahf
inc
sub
pop
jge
jne
clc
loop
adc
imul
es
sbb
imul
je
and
shll
outsl
loope
dec
lcall
pop
sbb
mov
stc
push
xchg
scas
xchg
xor
jecxz
fcmovnu
leave
loope
mov
sbb
mov
mov
xlat
cmpsb
xchg
push
inc
pop
mov
or
sarb
fcoml
cmpsb
iret
fldl
bound
inc
ds
ss
add
shl
sbb
xor
gs
push
mov
and
sbb
lret
jae
mov
xchg
jecxz
aas
add
mov
sbb
dec
gs
dec
sub
add
mov
pop
push
add
and
icebp
jbe
add
xchg
cmp
movsl
dec
in
clc
add
sbb
inc
fidivrs
push
mov
cli
das
mov
add
imul
loope
cmpl
movsb
rorb
popf
pop
pushf
jnp
nop
xchg
jo
pop
mov
jo
mov
ds
push
test
sub
adc
jo
xor
clc
cld
call
dec
and
xchg
mov
gs
insl
mov
dec
adc
incb
idivb
fs
sub
mov
shr
int3
ljmp
lcall
pop
xchg
dec
or
mov
test
data16
inc
popl
stos
aam
add
inc
add
fwait
popa
pop
push
inc
mov
mov
xor
test
fidivl
cmp
clc
sub
mov
mov
pop
jmp
sbb
popf
data16
pop
into
sub
and
push
pop
and
adc
inc
sub
call
lret
pusha
mov
cli
cmpsb
cld
pusha
push
hlt
out
sbb
push
pop
int3
mov
nop
sahf
mov
lods
leave
out
fists
sahf
jge
inc
jecxz
mov
or
fldcw
ret
jno
arpl
mov
push
jp
and
movsb
out
sub
push
pop
and
inc
jns
lret
je
sahf
dec
loopne
xor
xor
movsl
push
scas
inc
pop
sub
or
paddq
mov
dec
ss
in
dec
icebp
cmp
dec
jbe
xchg
inc
je
lret
xor
dec
addr16
xchg
push
pop
jecxz
aad
jl
mov
lret
shll
cmpsl
fisubl
inc
sarb
mov
push
xchg
rcrl
sub
and
pop
or
pop
lcallw
cli
notl
or
sub
xchg
xchg
ljmp
stos
es
jge
fwait
arpl
fildl
mov
push
xchg
hlt
dec
std
pop
dec
inc
into
cmp
and
insl
pop
fwait
push
add
rorb
ja
test
mov
xor
ret
mov
rcl
pop
in
out
icebp
inc
inc
inc
or
jge
mov
dec
sub
dec
gs
adc
loopne
adcl
outsl
popa
mov
ret
insl
jp
enter
or
out
mov
xchg
fs
call
cmpb
jmp
inc
jmp
sbb
and
repnz
push
xor
or
lcall
rorb
jb
sarl
cwtl
inc
xchg
fdivl
hlt
aaa
xor
push
push
push
adc
loop
cltd
outsl
sub
xchg
daa
dec
xor
dec
and
sub
jmp
cmp
dec
pop
pop
pop
or
mul
mov
sbb
dec
dec
lcall
dec
mov
add
fildl
fucomi
out
xchg
push
pop
cmp
int3
pusha
addr16
stos
sbb
in
pop
add
mov
adc
shrl
notl
fcom
filds
push
add
sub
test
in
add
test
mov
lret
aad
and
test
roll
jb
aas
scas
cmp
jp
mov
push
fsubrp
push
mov
or
push
sarb
ds
cltd
jmp
pop
push
ret
stc
fcoms
mov
xchg
cmovns
cmp
xchg
dec
jno
and
out
or
cmp
imul
mov
pop
dec
xchg
movsl
repz
in
addr16
inc
dec
push
ret
dec
mov
sub
into
popf
nop
sti
lds
aad
adc
push
or
xor
fs
dec
shrb
in
call
arpl
and
cs
mov
icebp
loop
insb
cmpl
mov
pop
fs
xchg
adcb
in
fst
xlat
xor
mov
das
pop
stos
cli
test
out
dec
out
adc
arpl
mov
xor
mov
mov
ret
icebp
adc
jmp
add
adc
pop
icebp
das
mov
shlb
sti
shrb
mov
sbb
dec
jp
push
lcall
jne
mov
arpl
repz
xor
pop
push
xchg
mov
push
out
clc
lcall
jne
lret
add
ja
data16
loop
lock
pop
mov
push
cwtl
mov
dec
ret
aam
lret
inc
pushf
mov
xor
ljmp
inc
int3
fdivr
mov
cmpsb
sbb
cmp
fildl
out
sub
movsl
mov
dec
xchg
out
xlat
ret
mov
add
fisttpll
out
enter
cld
call
popa
sbb
in
orl
fsubrp
adc
sbb
mov
in
adc
dec
fucom
imul
std
jl
arpl
xor
scas
xchg
xor
add
push
mov
xbegin
and
fwait
sub
out
sbb
test
js
xchg
jle
out
movsl
outsl
mov
int
xchg
mov
adc
movsl
add
shlb
loop
leave
inc
sub
xchg
mov
adc
lods
cmp
jo
sub
sub
ds
imul
mov
mov
popf
xchg
mov
sti
dec
inc
inc
es
daa
adc
add
add
inc
pop
mov
pushf
sbb
scas
adc
ss
fld1
mov
lahf
add
mov
and
jp
xchg
mov
cmp
push
fmuls
fdivl
popf
insl
stc
enter
mov
inc
mov
sahf
loopne
pop
arpl
sub
int3
mul
mov
cmp
dec
adc
enter
movsb
mov
pop
mov
popl
rcr
shlb
mov
outsb
mov
fldt
jp
dec
fiaddl
dec
pushf
addr16
popf
popf
inc
push
rorl
fdivp
sub
aam
or
popa
push
stos
scas
aad
je
pop
fwait
pop
fimull
xchg
jbe
dec
pop
dec
fbstp
pop
mov
out
sbbb
mov
mov
mov
pop
inc
adc
mov
notb
ds
ja,pt
mov
out
cli
jne
pop
insl
mov
mov
dec
test
lock
or
hlt
mov
jnp
frstor
jno
xor
mov
les
pop
ds
icebp
rcrl
mov
sub
dec
xchg
cmp
adc
and
lea
push
jo
enter
lret
test
adc
rol
test
dec
ss
mov
mov
repnz
xor
inc
xchg
push
push
shrl
mov
lods
daa
sub
repnz
adc
jge
fistl
cmp
imul
test
adc
jp
cmp
xlat
inc
pop
in
test
hlt
iret
insb
int
imul
add
ret
outsl
jne
push
outsl
mov
jge
insl
ljmp
push
ds
cwtl
shll
mov
test
adc
jp
leave
mov
test
sub
xchg
pop
lock
jb
dec
mov
jge
xor
fsubrp
dec
jp
lret
or
xchg
inc
insb
xlat
sbb
pop
jecxz
xchg
mov
mov
ljmp
inc
pusha
xchg
xor
shlb
into
je
push
push
and
push
mov
mov
and
cwtl
add
fistpll
call
jl
addb
test
mov
inc
lret
lret
scas
mov
pop
icebp
lock
fdivl
std
xor
jns
xchg
push
push
jne
cmp
mov
imul
xor
loop
popf
mov
inc
jle
sub
push
dec
inc
and
popa
aas
shl
test
jl
data16
sub
fnstsw
dec
out
mov
push
inc
mov
cs
sub
ds
jbe
lahf
xchg
jnp
or
ljmp
push
insl
adc
into
aaa
cmc
xorl
mov
insb
aad
sub
sub
pop
sbb
outsl
inc
in
cmc
inc
idivl
lea
mov
xchg
ret
flds
push
add
imul
mov
and
push
push
mov
les
cwtl
std
mov
icebp
xchg
push
mov
jne
bound
stc
popa
and
gs
or
xor
divl
pop
xchg
aam
cmpsl
and
daa
out
inc
sub
mov
rorb
fstpl
fwait
lock
jle
mov
lahf
into
cmp
add
mov
fwait
clc
sub
mov
jno
xchg
and
add
push
std
mov
outsb
decl
mov
cs
scas
inc
cmp
xchg
xor
mov
inc
sbb
sbb
adc
test
in
xchg
mov
or
outsb
fcoml
fmull
mov
dec
shrl
mov
std
mov
rorl
adc
push
bound
not
xor
int
loopne
scas
sub
or
mov
mov
and
aam
gs
outsb
cmp
sahf
mov
dec
sub
sub
mov
fldcw
cmp
dec
xchg
fimull
and
push
xor
or
mov
lret
hlt
mov
stos
loopne
and
mov
cmp
cmp
nop
adc
jnp
jmp
mov
frstor
jp
imul
jg
mov
add
or
dec
mov
ret
mov
insb
ret
sbb
and
aas
push
jo
push
cmp
mov
lret
int
push
into
xor
dec
pop
gs
rorl
sub
daa
xchg
jae
div
push
push
sbb
pop
inc
mov
lahf
fwait
cmp
addl
mov
movsb
shl
cmp
mov
push
add
dec
xor
dec
enter
loop
cmp
jl
int3
mov
dec
imul
xchg
sub
push
add
cmp
push
or
and
jns
arpl
stc
in
daa
ss
cwtl
mov
inc
arpl
cld
aaa
mov
in
xor
in
cmp
cmpsl
scas
subl
push
mov
mov
xchg
rcr
push
ss
std
push
push
jp
push
inc
insl
sbb
out
sbb
nop
fildl
cwtl
imul
cs
inc
cli
inc
push
inc
inc
jno
fwait
pop
movsb
outsl
shlb
sbb
negl
loope
js
lahf
lods
inc
xor
mov
fidivrl
dec
outsb
test
popa
mov
push
popa
enter
and
mov
or
mov
push
xor
inc
jns
inc
adc
lock
and
or
ret
pop
notb
add
movsb
outsl
lea
pop
pop
in
jmp
or
ret
push
rcrb
push
les
in
imul
lret
call
data16
divl
adc
ficoms
daa
lock
jne
fsubrp
add
sbb
pop
mov
cltd
dec
clc
xor
scas
cltd
sar
pusha
and
pop
test
fdivrs
mov
mov
ret
dec
xor
subb
jmp
add
call
icebp
pop
jecxz
aas
arpl
pop
arpl
rcl
insb
xor
mov
imul
roll
daa
push
add
loope
movsb
sub
repz
lods
pop
xor
and
cmp
sbb
adc
and
jno
pop
ret
js
es
push
in
scas
clc
push
mov
and
test
cmp
clc
mov
xor
jp
or
push
in
ds
fld
push
jo
and
and
add
xor
popa
mov
or
fsub
push
fwait
aam
push
movsb
jb
mov
jmp
lock
loopne
ljmp
cwtl
inc
ror
insl
ljmp
scas
fisttpll
popf
cwtl
ljmp
imul
movsl
das
scas
outsl
xchg
ljmp
lea
pushl
push
xor
out
cmp
iret
popf
mov
jne
jmp
dec
mov
push
popa
inc
lds
lods
sarl
and
cmp
sub
hlt
loop
lds
and
rcll
aad
mov
aad
add
mov
out
mov
pop
insb
outsb
sub
or
or
jmp
xor
xchg
dec
jmp
push
movl
mov
sti
pop
pop
cmp
mov
or
sub
mov
clc
int3
mov
xchg
into
arpl
jns
testb
mov
mov
xor
addr16
loope
mov
data16
sti
lea
adc
sarl
mov
and
cmp
xor
insl
mov
push
enter
aam
cmp
hlt
adc
ss
sti
pop
pop
mov
xbegin
out
sbb
inc
sub
fwait
loope
sahf
bound
hlt
xchg
enter
sub
enter
push
push
call
and
pop
call
or
divl
imul
pushf
mov
xlat
cmp
test
add
jl
push
pop
int3
mov
push
loop
lock
aaa
dec
push
jge
add
shll
sub
out
mov
adc
mov
xchg
sbb
or
or
adc
pusha
inc
sub
pop
fstps
or
movsl
mov
mov
xchg
out
arpl
outsb
or
xchg
repnz
shr
loope
addb
idivb
sub
mov
lock
jle
add
xchg
cmp
out
xchg
lods
mov
xlat
sarl
xchg
pop
jae
mov
jns
xchg
xchg
push
aas
adc
pop
ret
cmc
xchg
mov
xchg
push
sbb
cmp
xor
push
xchg
mov
push
cld
mov
enter
lahf
dec
movsl
and
inc
vpavgw
aad
mov
mov
pop
dec
aad
lock
imul
inc
add
mov
in
xchg
pushf
int
scas
pop
sarb
pop
sbbb
push
gs
cmc
xor
cwtl
xchg
inc
pusha
in
bound
mov
icebp
inc
stc
xor
push
outsl
pop
shr
fdivrs
out
in
lret
sub
xor
mov
adc
inc
add
jo
shrl
xchg
pop
dec
pop
fadds
andb
loop
outsl
push
cmp
mov
mov
mov
xlat
mov
cwtl
arpl
clc
xchg
inc
and
aaa
xchg
adc
push
dec
mov
and
mov
pminub
dec
xor
mov
into
ret
jne
orw
or
outsl
adc
jmp
cmp
xchg
imul
stc
cmp
cmp
sub
cwtl
sbb
xor
push
xor
inc
ficomps
add
add
jp
aad
fs
push
mov
mov
mov
mov
psrlw
dec
push
and
mov
mov
lock
rcr
xlat
cmpsb
adc
adc
stos
stc
inc
mov
aaa
in
jns
out
dec
gs
pop
jnp
stc
push
in
leave
movsl
xchg
jnp
in
push
dec
xchg
decl
out
call
sbb
jne
movsl
mov
or
mov
fisubl
jb
push
push
gs
or
cmp
out
mov
adc
imulb
fildl
aas
mov
in
push
iret
sub
cmp
push
push
xchg
fucomp
jl
mov
je
xor
xchg
pushf
dec
scas
fs
xchg
pop
popf
test
mov
dec
les
nop
loopne
les
xlat
js
cmp
lret
rorb
test
imul
out
add
push
push
mov
in
shll
rep
mov
adc
fistl
pop
mov
icebp
mov
mov
mov
add
ret
jle
in
add
jmp
adc
sti
out
mov
rcrb
out
out
frstor
xchg
mov
sbb
add
sub
jecxz
ja
push
insl
cmp
xor
stos
pusha
fisubrl
cmp
adc
int
cmpsb
jae
das
in
sahf
in
daa
loope
imul
stos
mov
int
sub
insb
pop
xor
mov
lea
hlt
aas
fs
fwait
subb
inc
push
bound
mov
dec
adcb
aaa
sub
push
js
iret
mov
add
ficoms
jmp
or
pop
and
stos
dec
cmp
mov
hlt
shlb
mov
jns
in
inc
lea
sub
fwait
insl
fistpll
push
aam
sbb
outsb
test
sbb
repz
inc
xor
xor
in
fldpi
push
pop
inc
push
adc
inc
mov
jp
sbb
cwtl
xor
fnstcw
mov
sub
adc
jmp
js
xor
icebp
jno
xor
jmp
dec
mov
sbb
stos
mov
cmp
jg
js
push
pop
ja
inc
xchg
pop
jmp
mov
ds
jmp
bound
in
push
icebp
cmp
inc
push
test
dec
cmp
lds
mov
fnstsw
ss
inc
push
jnp
cmpsl
cltd
mov
inc
xor
xor
push
add
addr16
sub
lea
xchg
fisubrs
cmp
jo
fs
in
imul
sub
bound
push
add
sbb
push
fbstp
cmp
add
xchg
je
or
cmpsb
jbe
mov
mov
sbb
push
cmpsb
xor
pop
icebp
mov
outsb
push
xor
add
pusha
adc
icebp
loop
into
rolb
pushf
sub
add
fstpl
cs
or
xchg
rcrb
loopne
xor
stc
aam
or
jg
scas
sub
jle
cld
outsb
fists
outsb
cmpsl
pop
loopne
jno
push
pop
mov
xor
or
mov
sub
lock
icebp
push
mov
rcr
loop
dec
jmp
test
out
jb
nop
or
push
adc
or
rcrb
insl
mov
shlb
cmc
stc
lods
fistpl
cmp
arpl
mov
xor
sbb
xlat
mov
jb
sbb
mov
loopne
pop
movsb
pop
divb
inc
int3
sbb
shrb
pop
out
xor
pop
clc
arpl
scas
gs
and
or
fists
leave
std
mov
jmp
jge
into
movsb
stos
and
fs
mov
imul
in
in
mov
push
jne
stos
popf
test
pop
mov
fistpl
xor
mov
add
imul
xor
jp
cmc
lea
jg
and
outsl
hlt
cmpsb
clc
outsb
or
add
cmpsl
xor
inc
daa
pop
loopne
mov
test
in
push
jl
inc
mov
push
add
pop
popa
xchg
mov
fsubs
xchg
jnp
adc
add
pop
dec
mov
insl
pop
pop
stos
in
rorl
cmpsb
xlat
insb
daa
sahf
adcb
lret
shrl
pusha
push
xchg
mov
lods
cmp
out
jae
or
int
cmpsl
adc
les
cmp
test
pushf
pop
cmpsl
sub
outsl
pop
cmp
les
pop
cmp
sarb
das
dec
push
push
repz
mov
fistpll
iret
loop
push
sbb
fstpt
pop
or
mov
aaa
mov
cmp
add
shlb
xchg
std
jno
scas
out
movsl
sbb
cmp
dec
or
jp
cs
and
push
cmpsb
jl
xchg
xchg
int3
dec
mov
or
aaa
xchg
and
add
enter
sub
lcall
mov
testb
lock
push
ja
or
je
ret
push
xchg
inc
jmp
fcomi
cmc
push
lret
stos
outsl
lcall
ret
fwait
dec
imul
add
ret
dec
mov
dec
sbb
clc
std
push
lret
push
sub
sbb
adc
or
fistpll
pop
fwait
popa
frstor
jp
xor
fsubrl
loope
pop
aas
xchg
dec
negl
ljmp
sbbb
fmulp
ficoms
dec
les
jmp
xchg
lods
test
jnp
repnz
vmread
mov
cmp
fwait
je
loopne
outsb
pop
inc
sbb
dec
cmp
pop
ficompl
aaa
mov
cmpsl
shlb
hlt
sti
shll
in
dec
pushf
mov
test
shll
mov
lahf
or
or
fcomps
adc
mov
repz
pushf
and
fdivp
cli
popf
adc
popa
pop
mov
loope
lcall
mov
fstpl
aad
mov
lahf
sbb
xchg
pop
nop
repnz
jne
dec
leave
mov
and
push
mov
repz
icebp
mov
sbb
inc
sub
mov
gs
mov
enter
jecxz
shll
add
dec
or
negl
int
sbb
loope
lcall
dec
fwait
out
test
sbb
data16
mov
iret
ds
clc
icebp
cwtl
insl
xlat
push
subl
xor
sbb
dec
sub
jmp
mov
lea
xorb
or
int3
fidivrl
mov
out
ljmp
test
rcrb
into
cs
dec
mov
mov
fisubl
or
or
pop
sbb
push
into
jnp
cmc
pop
loope
cmpsb
lret
or
and
mov
subl
jbe
loop
das
sbb
xchg
sbb
add
mov
and
lret
inc
mov
int
push
mov
jl
or
jns
data16
adc
sahf
aas
jbe
push
fsubs
sbb
test
push
pop
adc
mov
cld
jp
aas
mul
jecxz
test
or
sbb
adc
repz
jge
movsb
push
dec
negl
dec
sub
push
sbb
aaa
lret
mov
add
pop
mov
notb
mov
ja
sub
jmp
mov
pusha
lds
inc
popf
incb
orb
je
lcall
inc
aaa
mov
mov
ficompl
pop
sub
leave
jno
in
stc
push
lret
pop
cmp
cmova
fcmovnu
xor
and
loop
fcomi
in
push
leave
jbe
mov
xor
mov
lahf
mov
shrb
inc
adcb
and
loope
add
cld
adc
and
add
inc
scas
movsb
das
xchg
xchg
jmp
inc
outsl
insb
and
cld
gs
and
orb
dec
out
sbb
pop
iret
mov
jl
stos
or
jg
mov
popa
mov
cli
mov
lods
test
mov
and
mov
dec
mov
xor
jmp
mov
cld
daa
dec
ftst
jne
rcrb
lods
pop
add
cmp
add
in
pusha
push
mov
xor
pushf
lods
into
nop
mov
jl
jb
shrl
jl
sbb
xchg
and
cmp
mov
pop
icebp
mov
jne
movsl
fdivs
mov
jle
push
fwait
out
mov
mov
and
adc
mov
stos
jmp
ret
push
sub
clc
enter
imul
lret
jg
daa
in
arpl
ljmp
je
je
in
or
cltd
nop
lret
cmpsb
jle
cmpsb
in
mov
mov
scas
pop
sbb
fwait
shl
bound
inc
inc
mov
cltd
leave
je
mov
insb
sbb
jo
push
loopne
nop
sbb
mov
xchg
xor
jmp
ljmp
xchg
pop
xlat
sub
iret
pop
ja
adc
das
add
cld
pop
stos
mov
and
aas
fcoml
sub
leave
add
dec
inc
and
add
push
fwait
fs
add
inc
cltd
shl
in
insl
stc
loop
movsl
cmp
ds
sbb
lock
cmp
gs
jnp
mov
inc
push
xchg
inc
jbe
inc
cs
es
stos
aam
movsl
repnz
mov
xorl
and
mov
cmp
iretw
adc
xor
mov
mov
sbb
insl
dec
push
dec
lods
fisttpll
or
push
jbe
sbb
das
nop
xchg
stos
imul
xor
sbb
adcb
ds
out
and
mov
mov
xor
mov
and
and
lock
dec
add
adc
adcb
imul
pop
ds
pop
stos
xchg
xor
dec
mov
push
fsubs
and
inc
or
push
inc
js
stc
scas
xchg
mov
pop
lret
fisubl
and
sub
jmp
jno
jecxz
mov
imul
ja
or
cwtl
pop
push
cmp
mov
cld
mov
cmpsl
mov
je
lcall
cld
insb
jmp
mov
jb
push
divb
gs
or
into
ror
sub
bound
icebp
cmc
xchg
jbe
lods
hlt
fnstcw
cmp
rorb
ja
jae
or
loope
lahf
mov
mov
jge
cmp
cmp
sti
dec
jecxz
mov
xor
push
pop
adc
fsub
jle
fadds
push
pop
mov
in
cmc
inc
aas
in
in
or
mov
or
inc
sbb
loop
idivl
test
dec
scas
mov
xchg
outsl
xor
mov
xor
mov
add
mov
adc
jge
jno
jbe
sbb
data16
mov
jbe
ds
mov
fs
push
sbb
dec
lea
dec
cwtl
xor
pop
and
add
jecxz
inc
or
mov
filds
jmp
jno
out
jno
hlt
mov
push
insb
jl
hlt
jecxz
enter
adc
dec
jo
push
adc
jmp
test
es
lods
cmp
xor
out
lahf
das
add
movsl
xchg
mov
insl
pop
cmp
repz
add
mov
stos
push
out
js
mov
lods
stos
stos
mov
cmp
push
mov
rclb
repz
cmpsb
inc
or
pop
subl
scas
leave
imul
pop
or
add
mov
lods
sub
jnp
dec
outsl
lahf
mov
test
adc
jmp
sub
sarl
mov
or
xchg
mov
jmp
fimuls
stc
cld
shlb
mov
jmp
sar
jecxz
and
insl
jecxz
test
repz
jbe
jo
cltd
btc
push
push
jns
push
inc
jae
push
or
or
stos
int
xlat
dec
mov
scas
xor
and
outsb
notb
xor
cs
adc
insb
mov
es
enter
adc
dec
cld
sbb
or
lahf
lahf
sub
pop
adc
pushf
mov
jne
or
adc
jne
inc
push
data16
ror
jp
mov
mov
jno
push
push
jle
cmp
inc
shlb
fwait
push
mov
mov
jl
in
enter
mov
ficomps
jg
jle
test
jecxz
sub
negl
mov
icebp
inc
cli
adc
xor
repz
movsb
cmp
in
movsl
sbb
cmpsb
dec
cwtl
mov
xchg
das
ret
ret
jbe
jae
data16
inc
push
xor
insl
dec
adc
rorb
movsl
mov
mov
iret
shlb
pushf
loope
fsubl
out
dec
mov
pop
dec
xchg
xchg
dec
add
mov
cmp
mov
lea
roll
pop
mov
or
dec
repnz
movl
push
xchg
mov
cmp
push
pop
cld
inc
pop
ret
in
out
lahf
dec
int
xchg
pop
inc
inc
cli
add
not
outsl
jg
lea
xor
xor
dec
jp
and
cltd
pop
jp
sahf
cmp
icebp
ds
lret
es
stc
aam
rorb
sti
mov
fnsave
into
add
jmp
mov
sbb
scas
cmc
xchg
je
daa
in
sbb
or
out
mov
cmpsl
cwtl
and
or
adc
pop
and
test
dec
xchg
jnp
lea
mov
dec
movsl
push
hlt
pop
inc
ss
orl
xlat
test
inc
jg
scas
sbb
rclb
repz
clc
xchg
add
mov
jns
fwait
loopne
add
test
cltd
mov
fstps
lret
je
add
cmpb
sub
std
mov
mov
xchg
outsl
subl
sbb
rorl
add
loopne
neg
fwait
mov
sbb
fldt
mov
outsb
lds
hlt
mov
adc
stos
insl
filds
push
outsb
mov
push
add
fdivp
enter
insl
scas
fsubrl
nop
dec
sbb
faddl
xchg
mov
adc
sub
mov
into
out
push
jg
andl
ljmp
add
lcall
push
xlat
daa
push
add
scas
pusha
enter
dec
lods
filds
adcb
inc
out
dec
jl
pop
jge
dec
jmp
mov
dec
std
gs
loopne
stos
jle
pushf
daa
sub
or
ffreep
cmpsb
jae
sbb
xor
sub
cmpsl
pusha
and
stc
stos
arpl
adc
pop
mov
cmp
add
xchg
mov
pop
cmp
jae
push
aas
push
cmp
cs
jge
mov
jecxz
fwait
adc
cwtl
out
dec
stc
inc
pop
in
lret
xchg
sarb
mov
mov
int3
loop
jo
decb
fisttpl
scas
stos
lahf
pop
cmp
aas
adc
lret
sub
out
mov
out
das
push
ret
int3
int3
jo
lahf
jmp
jmp
jae
shrb
push
inc
pop
shrl
xor
add
insl
into
lods
adc
xchg
mov
mov
cltd
jg
add
cs
sub
test
adc
push
jbe
popa
or
lods
sub
pop
dec
mov
imul
jne
scas
test
adc
xor
xchg
sbb
outsb
pushf
ficoml
jg
data16
or
test
sub
xlat
sub
push
mov
bound
outsl
jno
and
xor
dec
shrb
pop
fistpll
pop
mov
sub
das
arpl
fcoml
in
insb
inc
mov
frstor
jle
cmpsb
adc
or
addr16
xor
push
test
cmp
mov
cs
push
into
sbb
jge
mov
sub
push
xor
mov
xchg
icebp
pop
cmp
out
mov
ss
mov
pop
sbb
inc
xchg
or
adc
cmp
leave
or
push
push
in
dec
add
lcall
jmp
inc
popa
xor
xchg
jg
xor
cmp
jge
sbb
sahf
insl
mov
xor
inc
adc
push
and
scas
sub
lea
push
ss
mov
fcmovnu
push
cli
mov
bound
lds
or
repnz
gs
lea
iret
inc
cmpsl
xlat
xor
js
pushf
in
push
into
hlt
sbb
loopne
jl
pop
lock
mov
xor
jne
enter
jo
xor
xchg
mov
push
fisubl
pop
iret
arpl
fcmovu
xchg
insl
cld
cmp
pop
sbb
jg
jno
popa
arpl
adc
outsl
shrl
lret
adc
out
mov
lock
shl
repnz
aad
add
or
test
cmp
cmpsl
push
loopne
pop
pop
jno
nop
mov
pop
shll
sub
stos
notb
cmpsb
jecxz
or
sbb
push
data16
insl
xor
jo
andl
test
adc
xorl
cmp
or
sarb
or
mov
cmpsb
jecxz
sbb
rclb
std
dec
jo
cmp
or
mov
push
pushf
popf
add
and
out
mov
insb
repnz
sbb
ljmp
adc
rol
mov
movsb
pop
cmp
nop
loop
iret
popa
push
ja
rolb
cmp
aas
xlat
mov
lcall
push
mov
ficomps
movb
xorb
mov
inc
sbb
pop
in
inc
add
aaa
cmc
cmp
push
pop
cmpl
nop
push
mov
cltd
and
aam
lret
sbb
mov
xor
in
xchg
pop
lods
inc
icebp
nop
sub
sti
imul
pop
stos
mov
xchg
sub
sub
clc
lcallw
jne
xchg
fldt
pop
test
movsb
cli
insl
loopne
jnp
mov
lea
and
dec
orb
out
aam
cmpb
sbb
imul
lds
push
ret
sbb
fbld
jo
lret
pop
outsl
xchg
lret
out
scas
lock
rorb
inc
mov
or
adc
cmc
aam
xchg
xchg
adc
popa
sub
inc
pop
and
xchg
into
dec
loope
push
pop
sti
push
push
add
push
sub
fsubrs
call
fiadds
rcrl
jo
lret
repnz
icebp
shl
daa
cltd
or
out
mov
fcomps
xor
sbbl
loopne
add
imul
or
rcrl
movsb
pop
scas
enter
cmpsb
mov
lods
lret
aad
shll
cmp
dec
movsb
cmpsb
insb
xchg
mov
dec
pop
jl
jl
adc
inc
push
fiadds
mov
cmp
fs
sub
lds
cmp
inc
fists
loop
jo
mov
or
xchg
dec
xchg
js
es
ds
cmp
push
adc
leave
jge
cs
ret
mov
add
jno
dec
adc
fadds
lock
ja
pushf
pop
cmpsb
dec
les
dec
pop
mov
cmp
sbb
sbb
dec
push
mov
pop
sub
push
sub
pop
mov
repz
pop
and
in
jg
or
add
mov
cmc
xchg
roll
cwtl
xor
daa
mov
xchg
sub
pop
mov
mov
imul
add
cmp
cmp
mov
enter
and
mov
loope
repnz
fildll
in
mov
int3
adc
ficoms
or
cltd
les
aad
lods
add
test
incl
daa
and
stc
xchg
repz
repz
inc
sbb
dec
jb
jo,pn
cmp
cmp
sbb
push
inc
inc
fistl
int3
lcall
push
in
icebp
outsl
je
in
fwait
mov
movsb
lock
ljmp
sbb
push
mov
lds
cmp
aam
ja
push
sbb
mov
nop
xor
in
jne
or
cmp
out
add
imul
pop
pop
push
negb
lods
add
pop
aam
add
or
push
ret
popf
add
in
aas
sbb
in
dec
sar
stos
shll
lret
ds
xchg
insl
sub
sarl
adc
pop
xchg
mov
mov
push
imul
adc
and
orl
push
sbb
sub
jl
fidivrl
push
sub
mov
enter
dec
lds
jecxz
or
xor
sub
add
rclb
jmp
xchg
hlt
inc
xchg
inc
adc
test
adc
mov
sub
mov
sub
push
push
dec
out
mov
mov
pop
les
minps
cmp
sub
add
xchg
and
pop
jmp
push
imul
test
dec
mov
cmp
ret
shr
jmp
inc
loop
add
lea
push
lret
rorl
pusha
xchg
xorl
mov
xor
adc
insl
push
xchg
or
adc
andps
outsl
inc
je
push
fisubs
in
adcl
pop
ljmp
cltd
cwtl
add
or
lcall
ret
cmp
imul
dec
ficoml
sub
mov
int
mov
rclb
sti
push
mov
into
xchg
xor
in
xlat
mov
rcr
sbb
or
mov
mov
flds
and
cmp
fs
mov
clc
or
push
cmp
mov
stos
add
mov
repnz
loop
shlb
decl
inc
sbb
mov
xor
filds
test
push
xor
sub
push
add
xchg
shll
inc
mov
fs
pop
pop
test
or
jge
aad
xchg
das
mov
les
inc
fcomp
pop
jg
sbb
pop
mov
xor
xor
cmp
scas
lret
sbb
push
mov
xor
movsb
scas
jne
adcl
aas
rclb
jecxz
pushl
loope
out
mov
xor
cmp
jae
pusha
out
xor
sub
inc
mov
loopne
sub
mov
pop
outsl
jae
xchg
inc
sti
pop
out
lahf
movsl
aad
in
mov
sub
inc
sub
pushf
xchg
js
das
push
int3
jle
push
mov
adc
mov
cmovg
dec
dec
js
adc
enter
test
aaa
inc
xor
cmpsb
xchg
lods
cwtl
xchg
lret
in
notw
mov
stc
loop
insl
idivb
mov
rcl
ss
mov
push
mov
lcall
test
jno
add
imul
xchg
mov
cli
das
mov
insl
inc
rcll
sbb
je
outsb
mov
sbb
pop
xchg
out
add
add
ja
or
das
cmpb
lods
mov
mov
mov
fcmovnbe
push
push
push
mov
and
rcrl
jmp
push
clc
ds
mov
xorb
adcl
mov
cmp
pop
and
mov
sbb
and
jne
xchg
pop
or
and
jbe
pop
jmp
or
jg
pop
dec
pop
ss
and
loopne
xchg
hlt
pop
mov
or
push
and
push
cmc
inc
mov
push
mov
sub
adc
call
scas
add
xchg
inc
pop
out
test
sub
pusha
movsb
mov
negb
adc
jle
inc
mov
ret
jg
or
loopne
sahf
sub
xor
jmp
pop
imull
jg
stc
pusha
cmp
rol
mov
mov
mov
mov
adc
ds
inc
fsubrl
push
mov
stos
ret
mov
and
xchg
or
rcll
insb
adc
jns
call
xchg
in
dec
add
lahf
dec
mov
and
adc
jb
ret
push
or
popa
mov
insb
or
imul
sbb
adc
xchg
aad
lods
js
pop
aad
pop
cmc
mov
and
xchg
fnstcw
aad
repz
xor
cltd
js
loopne
and
xchg
xor
inc
pop
push
sub
addr16
lods
lods
cltd
sahf
cld
add
bnd
xchg
sbb
add
lret
xor
xchg
push
shll
int
std
push
xor
mov
fidivs
mov
push
out
movsb
and
stos
mov
pop
jne
jg
mov
jae
stos
addr16
out
or
rorl
lods
pusha
and
stc
xchg
mov
loop
icebp
fwait
sbb
adc
lods
push
cmp
or
test
ljmp
jl
mov
out
sub
in
cld
xor
out
dec
xchg
add
addr16
out
sub
xor
pushl
pusha
cld
scas
ret
scas
fs
sahf
and
and
fmull
fadds
rcrb
ja
inc
out
xchg
data16
mov
xor
and
mov
sub
mov
jnp
in
mov
cltd
pop
pop
repz
pusha
dec
mov
push
mov
pop
xlat
test
inc
add
js
jmp
mov
sub
or
int
adc
in
leave
and
pop
dec
pop
adc
xchg
xchg
mov
pusha
cmc
pop
dec
xchg
pop
in
fsubrs
sbb
jmp
inc
push
fdivs
mov
fsubr
push
in
adc
inc
and
aam
or
ret
addr16
dec
decl
ret
inc
push
and
in
mov
jb
ds
fmul
mov
mov
inc
orl
pop
cmpsb
je
and
add
scas
pop
cmp
push
icebp
sub
xchg
lds
sbb
es
sbb
test
flds
pop
xchg
sub
imul
ds
icebp
adc
sbb
dec
int
adc
xor
outsb
adc
mov
idivl
scas
push
dec
add
sbb
popf
jmp
aaa
xor
out
mov
mov
loope
push
fwait
roll
push
xor
addl
rolb
out
jbe
inc
sbb
mov
push
pop
mov
mov
imul
jmp
mov
mov
xor
int3
adc
jne
inc
cmp
jge
inc
stc
pushf
pushl
pop
cmp
xorl
rclb
movsb
stos
aas
push
mov
cld
cltd
push
lods
mov
mov
ss
fists
mov
dec
enter
sub
data16
adcl
fidivl
out
jnp
jmp
jp
mov
sahf
xor
mov
lea
fisubrl
in
xlat
outsb
and
jl
mov
roll
popa
pop
mov
inc
mov
clc
push
fs
addr16
xor
jl
push
cmpsb
movsl
out
leave
iret
and
test
jbe
sar
in
ret
pop
call
and
cmpl
sahf
pop
mov
fwait
add
xor
sub
jb
test
xor
std
sbb
sbb
in
add
adc
pop
lock
aam
in
xchg
jg
and
out
add
mov
out
aas
test
mov
insl
push
sub
ds
lock
sub
fildl
in
push
push
pop
cmp
or
js
adc
cmp
mov
add
jns
and
push
push
das
or
cmc
test
adc
shlb
push
imul
pop
insb
lock
or
fnstsw
jecxz
fcoml
shr
xor
je
xor
lods
imul
in
sub
jbe
shll
lea
lock
mov
jle
jp
icebp
xor
dec
push
sub
test
into
pop
pusha
int3
fdivrs
and
cwtl
or
mov
std
cmpl
es
push
cmp
test
subb
mov
faddl
fcoml
xor
adc
mov
lret
push
add
imul
movsl
movl
or
les
adc
push
xchg
xchg
inc
jb
fbstp
outsb
shlb
out
jne
add
mov
hlt
mov
jns
pop
dec
push
imul
in
mov
ret
mov
stos
or
push
insb
dec
addr16
lret
in
cmpsl
jle
fsubs
cmp
xor
add
ja
xor
xchg
inc
adc
or
into
xchg
mov
ret
mov
cmp
mov
push
aad
sub
dec
mov
dec
adc
xor
push
lea
les
push
sub
xchg
sub
stos
jle
js
jnp
shll
adc
push
or
out
inc
shll
lods
and
mov
sahf
inc
aaa
aad
and
add
jo
out
dec
into
out
stc
fistpll
scas
ds
test
jo
pop
les
dec
mov
or
pop
push
mov
xorl
subl
mov
movsl
sub
hlt
clc
push
pop
in
inc
cmpsb
cld
cli
dec
nop
pop
leave
cltd
cmpl
das
xor
push
pop
sub
pop
or
pusha
insb
jo
int
push
lcall
lock
mov
fidivl
rcl
inc
mov
mov
pop
bound
mov
mov
pop
scas
repnz
stc
rolb
aad
out
sub
jnp
test
mov
cwtl
dec
out
mov
es
pop
cmp
or
mov
inc
xchg
inc
mov
and
ss
xchg
sub
lret
jge
movsb
dec
pop
sub
in
cmp
aas
int3
dec
dec
cmp
pop
insl
in
stos
stos
imul
cltd
and
xchg
shr
jno
mov
idivl
xchg
sbb
jle
pop
in
xchg
imull
add
in
inc
xor
dec
lcall
mov
pop
cmp
movsl
jl
hlt
cmp
mov
mov
or
call
fs
ds
xchg
addr16
stos
inc
dec
sub
inc
loope
inc
dec
mov
push
adc
xchg
sti
mov
fistl
gs
aaa
daa
or
pop
loope
adc
adc
cwtl
mov
nop
or
lea
jnp
sub
xor
push
lret
cmp
xchg
pushf
testb
outsl
lret
sbb
rol
stos
shrb
inc
inc
loopne,pn
aam
out
adc
pop
dec
sbb
mov
add
push
cli
mov
fcomi
adc
mov
dec
xchg
mov
scas
and
cwtl
mov
adc
stc
leave
sub
punpckhdq
push
stc
mov
leave
fstpl
dec
xor
or
loop
pop
fcomps
mov
stos
ret
adc
lods
arpl
std
dec
dec
mov
cld
mov
cmp
pop
xchg
sub
scas
repnz
arpl
sub
int
pusha
sbb
adc
jae
push
push
das
iret
ffreep
imull
je
jnp
punpckhdq
mov
add
rorb
scas
test
ja
dec
dec
cld
xchg
jae
xchg
dec
jbe
mov
repz
out
dec
inc
xor
fwait
imul
repz
das
jne,pn
ficompl
xor
sbb
mov
xor
mulb
rcll
xchg
dec
mov
xchg
cmp
popa
jb
dec
push
iret
lea
xchg
xchg
test
pushl
popf
xchg
mov
adc
out
and
inc
inc
xchg
lahf
push
arpl
stos
pop
jbe
mov
mov
jl
lret
or
subl
cli
ja
fmull
xor
int3
xchg
popa
dec
fldl
ds
lret
mov
and
inc
mov
mull
fimuls
test
fidivl
adc
lock
push
push
aaa
paddusb
fcmove
pop
add
and
inc
or
shll
icebp
push
cs
lods
xor
and
shr
cmp
cmp
cld
and
xor
xor
rcrl
test
jecxz
mov
dec
aam
in
xor
ret
out
or
lret
sbb
int3
xor
and
mov
repz
and
mov
pavgw
test
lock
dec
cmpb
pop
outsl
xor
out
filds
push
and
ret
jp
or
adc
jp,pt
push
ret
push
setp
cmp
decb
je
and
sbb
je
lds
jmp
ja
mov
mov
mov
jb
xchg
jbe
mov
xor
testb
jns
pushf
fsubr
sbb
xlat
add
adc
fs
out
test
cltd
push
add
xchg
mov
lret
dec
aam
orl
jnp
pop
mov
icebp
gs
push
jns
outsb
mov
test
mov
cwtl
aam
adc
cmp
jnp,pt
pop
sbb
jae
fwait
mov
repnz
sub
clc
shrl
out
dec
xlat
fs
sbb
sub
xchg
dec
inc
or
test
dec
aas
addl
xchg
sub
jne
jge
mov
pop
mov
out
xor
cwtl
pop
pop
mov
sbb
push
dec
fcmovu
add
into
xor
push
call
test
xchg
aam
mov
arpl
in
mov
xor
rol
scas
subl
jo
sub
fldl
and
sti
and
jns
mov
out
xor
mov
bnd
mov
adc
aas
jno
adc
cmp
sub
adc
inc
rorl
push
xor
jns
or
jp
in
and
pop
negl
mulb
jmp
je
mov
sti
or
ja
ret
pop
enter
xchg
jne
loopne
jg
push
and
popa
cld
mul
mov
pop
mov
fimuls
mov
jno
ds
jmp
push
pop
inc
jmp
mov
dec
cmc
stos
inc
sub
addr16
sbb
neg
je
popa
repnz
mov
add
cmp
xchg
lret
inc
inc
adc
in
test
in
push
adc
outsl
xchg
push
test
mov
iret
int3
inc
lods
xchg
xor
into
or
mov
inc
cmpsb
lock
cmp
addb
xchg
push
orb
movsl
jne
inc
mov
shl
mov
mov
sub
or
jbe
sbb
ret
roll
cmp
xchg
mov
jo
pop
mov
fcomps
push
or
ds
filds
push
pop
or
sarb
repnz
scas
adc
pop
idivb
leave
rclb
mov
mov
test
sbb
pushf
mov
and
vmulpd
cmc
xchg
mov
insb
and
lea
or
dec
mov
scas
je
sar
cmp
inc
cmp
mov
femms
mov
adc
mov
mov
jb
or
push
xchg
out
test
in
jg
xchg
mov
push
lods
push
bound
cmp
cwtl
mov
push
imul
mov
xchg
xchg
and
jne
xor
pop
mov
jne
cmp
rorl
cwtl
inc
jo
jecxz
push
xchg
cmp
sub
sbb
cmp
adc
shl
scas
mov
clc
iret
mov
xchg
ja
jge
add
mov
int
outsl
xchg
cmp
setae
inc
movsb
inc
or
xor
aas
jecxz
mov
adc
out
mov
xchg
adc
rorl
sahf
call
add
inc
lock
mov
shrl
add
out
push
cs
arpl
in
xorb
out
call
sub
gs
pop
mov
test
mov
in
and
cmpsb
sbb
scas
mov
xchg
xor
jno
fildll
push
add
cwtl
sarb
push
push
cltd
and
outsb
xor
push
gs
inc
mov
add
and
add
inc
jb
stos
xchg
int3
adc
stos
mov
roll
mov
sbb
repnz
mov
lea
sbb
pop
outsl
fisubrl
int
mov
mov
xabort
inc
pop
push
les
repnz
pop
movsb
insl
inc
clc
lret
pop
in
cmp
inc
enter
adc
push
pop
jno
clc
xchg
add
hlt
push
or
or
repnz
push
pop
xor
neg
cmpsb
jg
add
dec
into
icebp
pop
sub
inc
insl
cltd
loopne
pop
pop
pop
das
xchg
mov
adc
loop
mov
and
xchg
xchg
stos
push
sub
in
add
mov
cmp
aaa
int3
scas
pop
add
int
mov
cmp
lcall
in
lea
inc
mov
outsb
mov
mov
adc
add
out
jns
or
subb
outsl
jmp
add
sbb
pusha
loopne
insl
cmp
scas
aam
or
push
mov
pop
mov
les
mov
shl
imul
xor
cwtl
cli
xchg
pop
add
fwait
repnz
int
gs
sub
mov
or
mov
push
xchg
sbb
sarl
pusha
dec
rcrl
sbb
lcall
inc
loop
lcall
and
adc
lods
fs
mov
xlat
xor
filds
pusha
lcall
fstl
jmp
dec
xchg
shlb
or
inc
and
test
pusha
mov
daa
sub
xchg
push
push
mov
xchg
xor
inc
pushf
pop
dec
enter
or
xchg
jo
pop
bound
les
aad
cmp
inc
push
scas
xlat
lcall
sahf
mov
lcall
rolb
cmp
repnz
sub
mov
lds
pop
subl
idivl
fldcw
xchg
ljmp
fldt
cmp
dec
adc
sbb
int3
rorb
test
scas
add
rorb
je
pop
fidivl
call
int
es
movsl
ficompl
jl
or
out
adc
aas
sub
xor
sbb
mov
std
sbb
xor
daa
mov
adc
or
inc
pop
dec
popa
out
fldt
fdivs
inc
pop
sbb
fdivs
cmp
int3
cmp
test
cmp
mov
enter
add
jnp
sahf
int
lcall
pop
xor
outsb
or
ja
into
mov
sub
xchg
je
ss
add
inc
sti
xor
inc
fnstcw
inc
push
fildl
fisubrl
mov
fwait
jecxz
xchg
push
mov
add
leave
sub
and
outsl
jle
inc
mov
fstps
stos
xchg
cmp
push
xlat
mov
cld
mov
inc
fs
push
sub
cmp
cmc
loope
push
lods
push
clc
push
sbb
lcall
lret
inc
add
adc
shll
adc
fdivl
pop
scas
lcall
xlat
rolb
in
adc
add
push
push
mov
adc
mov
push
adc
push
or
hlt
jb
mov
pop
xchg
filds
repnz
fidivl
scas
dec
jecxz
mov
xchg
insl
or
loop
call
push
push
insb
test
push
inc
ds
test
ror
aaa
pop
faddl
push
sub
subb
ds
inc
mov
stc
and
jecxz
cmp
popf
test
pop
int3
and
gs
out
outsl
xchg
mov
cmpb
nop
pop
sbb
sbb
insl
mov
and
adc
jbe
dec
push
les
imul
mov
dec
dec
daa
sbb
shll
and
adc
cmp
cmpsb
cwtl
sahf
push
lcall
inc
cmpsb
lods
sbb
sub
xchg
ss
push
or
stc
fbld
je
subb
mov
inc
adc
xor
or
ja
lds
cld
and
inc
enter
fs
lods
mov
mov
jl
lahf
mov
fdivl
ja
pop
icebp
int3
ss
ljmp
mov
lahf
cltd
xchg
fstps
jno
mov
push
insb
jmp
pop
out
sahf
cmp
mov
push
gs
int
pop
jecxz
out
jle
push
jmp
loope
fcoms
cmp
jns
out
hlt
mov
xchg
add
jg
and
lcall
pop
lahf
gs
xlat
cmp
popf
inc
lcall
jns
or
jge
sarl
scas
add
jne
sbb
das
push
shrb
mov
mov
jmp
cs
adc
lcall
lret
movsl
or
mov
push
int3
xchg
imulb
pop
ret
mov
sub
shlb
fldenv
and
mov
mov
imul
push
bound
add
adc
mov
sbb
call
push
xchg
leave
sbb
outsb
das
xor
adc
bound
pop
dec
int3
mov
inc
pop
ret
xor
jmp
int3
iret
cmp
ss
add
mov
inc
fiadds
mov
add
fnstcw
xlat
adc
or
mov
cltd
popa
mov
dec
cmp
test
xlat
xor
pop
dec
cli
bswap
pop
iret
clc
data16
daa
pop
mov
call
mov
adc
arpl
fmul
pop
das
out
xor
dec
mov
add
lcall
push
addb
ds
lret
mov
cs
jg
inc
add
cltd
add
adc
push
sti
mov
and
aas
std
xchg
sub
jns
bound
andb
inc
lods
mov
mov
mov
rcll
popl
cmp
fwait
loop
xlat
push
jno
cmp
rcrb
push
popa
lock
jne
jo
stos
mov
sub
push
and
loop
pop
bound
leave
ror
jns
bound
or
pusha
stos
fiadds
xor
cmc
shl
cmp
jo
leave
dec
jns
ficomps
test
sbb
mov
rcll
sarb
xchg
and
in
lea
mov
bound
out
xor
sbb
inc
cwtl
in
sbb
xor
scas
mov
aaa
cmp
call
sub
xor
push
int3
mov
lcall
stc
and
movl
add
push
lret
enter
mov
push
cmpl
in
mov
outsl
adc
jne
ret
push
push
out
cld
adc
iret
popa
xchg
push
adc
lods
xor
mov
inc
call
mov
stos
jmp
push
sar
jbe
fadds
xor
in
or
sbb
and
jmp
add
inc
jmp
movsb
int3
inc
fwait
jg
add
dec
pop
or
je
test
ss
test
lds
out
pop
jae
xchg
mov
jmp
enter
call
xchg
sbb
xchg
inc
and
rorl
and
sub
dec
jno
das
cmpsl
or
int3
push
push
loopne
cmp
cmp
lods
mov
testb
jne
sub
xchg
aaa
lea
addr16
int
movsl
stc
and
xor
mov
cmp
xchg
sbb
sub
fsts
lret
or
cmp
adc
xchg
push
test
add
or
fstpt
adc
mov
clc
into
jae
pop
mov
rcll
and
scas
push
inc
inc
pusha
mov
testl
inc
jg
out
in
mov
in
fs
xor
movsb
jecxz
popf
adc
mov
jge
fsubrl
mov
roll
adc
pop
cmp
mov
mov
repz
push
in
ret
jmp
or
and
pop
imul
iret
push
lods
aas
cwtl
push
out
pop
xchg
pop
in
lods
aas
loope
xor
dec
inc
ret
push
and
fidivrs
sbb
inc
dec
sahf
fildl
scas
and
pop
mov
push
in
fdiv
in
pop
loop
pop
jno
rcll
stos
adc
ss
add
in
mov
mov
cmc
movsl
movsl
mov
fisubrs
test
xchg
loope
clc
sahf
enter
fstps
mov
xchg
test
out
lret
pop
xchg
aas
cmpsl
mov
mov
mov
popa
imul
xor
icebp
hlt
cmpsl
imul
adc
mov
jp
outsl
sbb
rcrl
idivl
fs
hlt
sahf
sub
and
push
pop
dec
jnp
stos
addb
inc
pause
cmp
fadds
xor
insb
js
movsl
inc
es
pushf
popa
cwtl
cmp
lret
mov
pop
and
rcr
sub
ds
or
adc
nop
sub
pop
fcom
jge
aas
or
into
sbbb
cli
fwait
in
sub
js
add
pop
inc
jp
lods
int
and
test
or
xchg
insb
xchg
mov
fwait
mov
leave
test
test
int3
cmp
cmp
cmp
mov
iret
nop
clc
js
push
lret
xchg
push
dec
push
cwtl
daa
dec
cmp
or
or
adc
outsb
daa
push
sbb
inc
ret
jae
jge
inc
mov
sbb
rcr
fiadds
fimull
push
cs
imul
orl
scas
adc
cld
rcrb
mulb
push
int
jmp
cmp
mov
mov
pop
mov
add
mov
js
inc
cmp
fiaddl
out
sti
inc
ret
sbb
mov
clc
dec
dec
xchg
lcall
mov
mov
ds
addr16
jl,pn
and
sti
ficoms
fcmovbe
in
adc
sahf
jmp
stc
mov
xor
scas
pop
push
dec
js
add
mov
push
pop
dec
loopne
or
imul
lcall
out
repz
adc
pop
dec
push
mov
lods
jge
adc
mov
cmp
push
push
jmp
je
and
pop
or
push
push
movsl
xchg
cltd
call
stos
xor
inc
sub
mov
rcl
pop
shr
dec
jns
test
dec
inc
data16
cmp
or
inc
ficoms
sbb
fwait
inc
xor
inc
xor
cs
or
fistl
fs
sti
jbe
pop
inc
or
or
pop
fisubs
dec
cmp
sbb
mov
sbb
inc
push
test
sub
mull
push
add
ret
jg
jle
aaa
mov
bound
fwait
push
push
rcr
adcl
out
fisttpll
mulb
mov
sbb
dec
mov
push
out
adc
jmp
add
lret
and
iret
inc
lcall
into
xchg
pop
and
and
outsb
faddl
scas
cmp
cmp
sti
mull
or
out
push
lret
inc
jmp
aad
outsb
jb
gs
xor
jns
xor
xor
add
outsb
imul
in
insl
or
test
bswap
arpl
sbb
faddl
enter
imull
mov
cmp
into
into
sbb
mov
pop
mov
mov
leave
in
xor
mov
mov
add
and
jno
xchg
mov
decl
mov
shrl
dec
push
addb
jecxz
mov
add
push
dec
mov
pop
mov
inc
inc
push
add
adc
dec
rcrb
and
cli
mov
ret
sbb
aad
es
add
and
call
dec
ret
adc
icebp
mov
popf
and
cmp
pop
mov
mov
mov
test
xor
mov
xor
mov
std
inc
jb
roll
loopne
mov
outsl
jno
cli
sbb
ljmp
test
pop
xchg
sub
je
xor
or
imul
push
or
or
ljmp
mov
dec
push
out
adc
cmp
pop
jmp
scas
cmpsl
push
call
jnp
nop
xchg
inc
push
pop
fildll
and
xchg
xchg
les
sti
pop
pop
mov
imul
jmp
pop
mov
lea
mov
bswap
push
push
lahf
out
sbbl
outsb
loope
pop
les
fiadds
dec
xor
jmp
dec
sbb
sbb
mov
xlat
mov
pop
cmc
inc
sub
push
adc
mov
push
sub
jg
cmpsb
scas
or
fwait
inc
mov
popa
mov
movsb
addb
adc
test
scas
and
jno
test
popa
mov
xchg
jnp
rcll
inc
inc
adc
cmc
dec
cmpsl
add
xor
sub
sahf
add
dec
xchg
or
mov
insb
push
stc
insl
inc
push
add
adc
repnz
out
lret
push
daa
add
test
out
or
adc
jno
arpl
cmpsl
pusha
inc
add
clc
mov
scas
rcrb
pop
mov
test
cmp
outsb
stos
sti
xchg
out
bound
es
stos
sarb
push
mov
inc
repz
ja
ret
or
jbe
xchg
repnz
lret
mov
in
add
or
pop
xor
cmp
nop
push
fstpt
pop
or
in
and
andl
mov
push
sar
shlb
xor
pop
das
imul
pushf
jne
sahf
pop
mov
sbb
lock
adc
int3
negb
jecxz
inc
call
cmp
inc
test
subl
aaa
xor
dec
roll
inc
in
hlt
cmp
jp
dec
push
mov
stos
jne
jmp
std
cmpsb
scas
mov
std
and
cmp
nop
test
xchg
ret
push
in
jmp
in
aaa
xchg
insl
lock
adc
lahf
mov
lahf
xchg
outsl
rcl
clc
das
xchg
addb
mov
pop
add
adc
aad
loop
mov
movl
mov
mov
adc
xor
arpl
adc
loop
pop
xchg
mov
pop
daa
push
push
sub
subl
cltd
cmp
and
in
mov
lods
sbb
aaa
out
xchg
add
jl
iret
dec
roll
iret
daa
out
xor
stos
xchg
pop
popf
push
ret
add
mov
in
out
or
xchg
lahf
in
dec
push
popf
dec
mov
jg
les
sbb
pusha
push
pop
lcall
lret
imul
cwtl
andb
hlt
lock
sbb
inc
lahf
ret
dec
mov
xchg
and
push
fadds
out
testl
jle
push
xchg
lea
cmc
lcall
ficomps
mov
cwtl
out
lahf
arpl
sti
jae
mov
and
fs
jo
pusha
popf
mov
out
stos
inc
nop
mov
sbb
adc
or
adc
cmp
sub
out
jae
xorb
lss
lea
xchg
adc
adc
jg
mov
fs
xor
mov
jbe
mov
jmp
adc
sti
add
rolb
xor
leave
aad
mov
aad
test
xchg
sbb
jno
lds
sbb
sbb
pop
outsl
or
mov
filds
repnz
popa
xor
popa
and
int3
adc
loope
clc
aam
fldl
jo
fimull
sub
int3
imul
fnstenv
ror
inc
or
or
xor
lods
stos
adc
ret
test
out
dec
mov
roll
aas
pop
or
pop
les
push
in
fbld
add
cmpsl
push
xor
sbb
and
popf
shlb
js
or
push
adc
xor
fucomp
sub
das
mov
test
nop
inc
pop
in
jge
cmpsl
adc
int
mov
jbe
jmp
mov
jp
jl
test
mov
cmp
lods
imul
fsubrl
popa
push
adc
mov
scas
add
sub
shrb
repnz
les
ss
dec
sbb
push
leave
mov
adc
insl
adc
push
mov
ljmp
and
es
xchg
and
xchg
and
add
add
orl
cmp
clc
or
rcrb
adc
jmp
enter
dec
and
sbb
aas
inc
pushf
mov
cmpsb
jle
bound
sbb
mov
jo
sbb
mov
mov
jecxz
out
or
fs
pop
sarb
pusha
loop
add
adc
inc
fwait
add
and
pushf
gs
sbb
in
mov
aas
mov
imul
mov
pop
cmc
fsubl
push
stc
inc
lods
cmc
sub
push
mov
repz
mov
add
push
xchg
icebp
xchg
test
jmp
jg
pop
mov
jle
test
addr16
addr16
xor
sbb
shrb
in
add
inc
aad
das
mov
fldcw
xchg
loope
fidivrs
add
jo
push
int3
test
sbb
xor
mov
jno
in
xchg
es
xor
sbb
aam
and
orb
mov
xchg
xchg
call
imul
repnz
push
jb
cmc
test
pop
jno
sbb
jbe
mov
xchg
test
push
jge
mov
jb
xor
jo
sti
cmc
int
aam
dec
push
ljmp
shll
or
and
dec
push
cmp
scas
jae
dec
test
es
repz
xchg
xchg
sub
loopne
pop
sti
scas
push
push
dec
xorl
movsl
pop
jns
adc
add
dec
mov
and
cwtl
repz
es
add
jbe
jbe
negl
jno
add
bound
hlt
call
mov
repnz
mov
push
sbb
dec
pop
imul
leave
mov
shrl
gs
in
sbb
jns
test
pop
call
cli
aad
jge
and
jl
in
cld
push
inc
fmulp
stc
arpl
aam
je
push
push
mov
cmp
adc
jp
xchg
out
push
out
mull
pop
mov
jno
push
push
hlt
imul
sahf
test
inc
inc
mov
mov
or
mov
lcall
xchg
xor
or
or
mov
jne
gs
cmp
mov
fs
adc
lock
call
test
call
add
pusha
out
xor
pop
jb
aad
xchg
add
sbb
xor
jno
ficoml
sahf
js
xor
ret
sbb
int3
jne
cmp
inc
enter
mov
jb
cmpl
sbb
inc
into
pop
jb
and
std
inc
icebp
dec
lahf
int
jecxz
or
mov
loop
xor
xor
rcrb
sbb
shll
jmp
or
sub
dec
mov
icebp
roll
mov
stc
lock
sub
xor
loope
je
jno
iret
xchg
rcr
xchg
cmp
pop
fistpll
adc
insb
out
xchg
or
cmp
sub
push
cltd
cmp
and
push
inc
push
pushw
aaa
fwait
push
sbb
cmp
out
add
lret
or
loop
push
mov
push
and
iret
jae
push
bound
stc
mov
daa
cmc
sub
jo
in
adc
mov
jp
cmpsb
and
cmp
push
into
push
cmp
mov
jno
into
sub
pushf
popa
jns
sub
movsl
pop
add
testb
jge
pop
pop
aaa
dec
cs
dec
scas
jae
ret
sub
nop
push
sub
jb
lods
mov
aas
fcmovne
inc
test
cmp
jmp
addr16
test
imul
xchg
xchg
inc
enter
dec
xchg
pusha
je
xor
push
ja
pop
fidivl
mov
mov
and
dec
jmp
rol
mov
dec
adc
adc
adc
mov
lock
lret
cwtl
and
cld
divl
fstpl
inc
push
xor
aaa
push
dec
addr16
push
pop
jne
xor
xor
xor
lea
lret
mov
sub
push
ret
sbb
inc
adcb
jae
mov
cmc
adc
dec
loopne
push
stc
mov
insb
pop
nop
sbb
sub
in
repz
and
or
js
ja
pop
fstps
sub
sbb
push
imul
sarl
pop
jg
outsb
and
xchg
xor
lds
pop
inc
inc
xor
xor
xor
ljmp
stc
insb
pop
mov
lahf
push
out
stos
mov
pop
xor
dec
mov
or
insl
mov
xchg
or
dec
mov
jle
fdivp
inc
test
mov
pop
mov
clc
scas
je
xchg
sahf
data16
and
adcb
pop
mov
pop
jecxz
sbb
sbb
adc
jae
popa
adc
iret
pop
xchg
repnz
in
or
jp
dec
mov
mov
xchg
sub
add
add
subl
and
pop
iret
push
mov
stc
pushf
push
inc
pop
into
or
sub
inc
imul
in
outsb
add
inc
push
shrl
sub
cmp
mov
in
inc
insl
xor
inc
mov
xor
stos
jg
divl
or
mov
ss
cmpb
push
jge
sbb
sub
mov
bound
cs
jnp
sub
popf
jle
fidivrs
cmpsl
je
dec
and
jne
inc
pusha
jg
imul
push
mov
pop
ret
iret
and
repz
push
sbbl
pop
rolb
aam
adc
or
inc
test
repnz
and
sub
xchg
daa
scas
xchg
shlb
ljmp
push
inc
add
int
cli
out
dec
fiaddl
dec
stos
push
mov
data16
jmp
pop
inc
cmp
fimull
insl
scas
imul
cmp
sbb
iret
mov
inc
push
test
inc
loopne
cmp
add
ljmp
shl
cmp
adc
and
sarb
rcrl
rolb
mov
or
loope
pusha
lcall
out
lcall
dec
and
or
or
inc
push
insb
addr16
push
cmp
incb
in
popf
es
mov
jle
bound
jnp
inc
cli
xlat
leave
mov
gs
lahf
insb
fwait
jp
jno
sbb
cld
aad
dec
repnz
adc
push
popa
ret
adc
lahf
ljmp
sbb
shl
sub
psllq
mov
pop
or
daa
clc
jno
adc
insb
aaa
mov
aam
cmp
pop
xor
add
push
into
push
lret
jne
xor
fwait
add
or
mov
jo
mov
xchg
insl
rcrb
pusha
xor
push
xchg
jmp
jbe
jmp
mov
js
mov
loop
jp
repz
icebp
insl
xlat
out
xor
inc
mov
xchg
shrl
clc
sub
jge
repz
notl
pop
lds
push
sub
ja
icebp
divb
cmpsl
add
and
aam
pop
push
adc
pushf
push
pop
xor
repnz
jno
das
daa
add
iret
sbb
or
dec
sub
jg
xchg
add
xchg
enter
leave
rorl
aas
adc
jnp
xor
push
stos
lea
ja
mov
shll
jp
xor
lret
adc
popf
lods
dec
sbb
subl
test
mov
sahf
fsubrl
imul
cs
jns
rclb
leave
inc
adc
xchg
popf
jecxz
inc
jle
sub
rcrl
sti
leave
rcrl
dec
adc
std
adc
ja
jle
fbstp
jp
xchg
dec
pop
lahf
fs
cmp
sbb
push
dec
push
lds
shrl
mov
and
aaa
or
sti
stc
shll
sub
dec
ss
xor
inc
jge
insl
clc
movsl
dec
leave
loop
out
pop
and
and
sbb
loopne
or
mov
mov
jl
out
movsl
adc
xor
mov
or
clc
push
push
jbe
imul
loope
adc
jns
lock
dec
pop
lahf
pop
push
out
sbb
fs
fs
imul
mov
imul
pop
lea
dec
repz
or
mov
and
mov
mov
test
out
cmp
mov
test
dec
pop
dec
out
mov
rcl
iret
cwtl
cmp
jge
mov
adc
into
inc
pop
or
negb
sbb
data16
sbb
inc
add
mov
adc
iret
insl
mov
inc
mov
mov
pop
ror
int
gs
xchg
mov
pop
mov
sahf
add
xchg
cltd
repnz
loopne
shl
fdivrs
pusha
cwtl
aad
push
push
enter
xchg
xor
sub
movsl
roll
mov
xchg
mov
pop
mov
sbb
sbb
add
mov
push
addb
jno
arpl
mov
out
push
mov
test
scas
pop
jb
rcll
repnz
add
pop
mov
fstpt
inc
es
lock
pop
jecxz
jne
fimull
sbb
jns
gs
or
xor
or
jne
cld
cli
mov
in
and
call
jns
rcll
pop
sbb
cmp
push
ret
lret
scas
pop
mov
mov
sbb
cmp
fidivl
das
stos
repnz
les
add
cmp
mov
dec
mov
pushf
inc
push
push
sub
pop
ljmp
test
pop
fsubs
jmp
mov
dec
xchg
inc
out
push
es
and
push
loopne
pop
mov
leave
sub
cmpsb
sub
dec
andl
dec
mov
out
jno
mov
aaa
xor
inc
cltd
loopne
mov
add
mov
lcall
push
jle
jmp
lods
movsb
cmpsb
aam
dec
push
repz
pop
popa
mov
fstps
repz
mov
mov
pop
ffree
andl
icebp
pusha
out
fimuls
scas
or
jbe
fmull
jmp
mov
or
mov
test
nop
or
sti
aad
jge
dec
sub
mov
into
je
sub
inc
inc
cmpsl
pmulhw
mov
js
test
jbe
dec
sub
pop
xor
jle
cmp
mov
and
pop
negl
js
xor
imul
sub
cmpb
jbe
push
sbb
mov
fadd
adc
lds
sbb
inc
dec
push
out
cmpsl
fnstsw
stc
pop
push
push
mov
orl
in
sar
icebp
add
loop
cmc
out
sub
fwait
mov
inc
cld
imul
pop
popa
and
test
int3
push
lcall
pop
ja
xor
add
scas
add
out
adc
loop
or
cmp
lahf
xchg
test
bswap
fimuls
xchg
jnp
and
cmp
mov
sub
cmc
pop
jle
sub
ja
das
pop
jns
sub
repnz
arpl
cmp
aad
loope
cmp
and
xchg
das
icebp
jg
jnp
cmc
adc
or
fs
xor
and
mov
pop
mov
xor
lret
jmp
or
and
and
push
test
loopne
fiadds
cmp
std
int
nop
or
int3
clc
in
insl
jmp
ds
stos
and
mov
pop
sbb
insl
pop
or
or
addr16
push
xchg
insb
test
inc
test
mov
dec
es
xorb
xor
and
pop
imul
decl
jnp
adc
cli
push
or
and
cmpsl
lahf
sub
arpl
repz
imul
xchg
jp
push
lret
leave
inc
pop
scas
fsubl
pop
cmpsl
fistps
adc
xor
pop
inc
xchg
mov
jb
cmc
mov
or
or
xchg
mov
lds
loope
pop
mov
in
ret
lods
sbbb
enter
dec
les
mov
sbb
movb
test
pop
fwait
imul
mov
adc
push
xor
sub
or
ret
js
mov
stos
lock
jecxz
cwtl
lret
or
insb
jnp
mov
and
sbb
mov
jl
out
xlat
xor
loope
fistl
xor
lcall
or
mov
loope
leave
int3
mov
adc
inc
sbbb
mov
dec
das
pop
lds
pop
xchg
pop
add
hlt
jge
xor
jnp
cmp
xor
and
xchg
jb
arpl
and
xor
in
add
push
xchg
out
int3
popf
xor
inc
sarl
add
rorb
jnp
mov
push
popl
das
mov
sbb
decl
xor
mov
ds
mov
mov
jno
jb
out
dec
jecxz
jbe
adc
pop
mov
jmp
push
out
shll
and
push
cmpsb
repnz
int
jle
mov
imulb
push
iret
cwtl
int3
leave
and
inc
out
insl
clc
int
add
xchg
cwtl
js
mov
sbb
divl
or
dec
test
rorl
addr16
push
ds
sbb
fldt
mov
mov
sub
lret
out
mov
mov
pop
xor
jb
mov
gs
jl
outsl
call
mov
les
and
pop
movsb
sbb
pop
jo
repnz
daa
loop
lahf
sub
ficomps
xor
insl
dec
insl
push
mov
lock
cwtl
mov
movsb
sar
pop
in
popa
push
push
nopl
sub
lods
sub
pusha
int3
pop
xor
cmp
loopne
mov
add
call
cltd
in
out
in
or
lock
shll
js
mov
js
test
outsl
in
dec
pop
add
outsl
ss
sbb
mov
ja
xor
loopne
jne
pop
jge
pop
inc
hlt
iret
or
cmp
push
sbb
fstpl
mov
mov
ds
jmp
adc
mov
nop
dec
mov
adc
lds
jno
mov
mov
in
gs
fdivp
sbbb
out
dec
and
dec
ss
jno
arpl
aas
in
insl
test
add
in
or
rclb
hlt
movsl
xor
adcb
push
mov
jg
xlat
mov
fisubrl
bound
xchg
dec
insb
and
outsl
mov
jno
mov
push
adc
lcall
or
or
or
dec
out
fdivrl
sub
je
notl
cmp
lret
jl
fdivs
ljmp
mov
lahf
inc
xchg
sbb
mov
data16
test
aaa
push
dec
inc
idivb
sub
cmpsl
insb
lea
insb
ss
cmpsl
or
rorb
fwait
pop
or
data16
scas
dec
sub
cld
cltd
sarb
cmp
push
in
add
push
lods
push
or
outsl
sub
pop
xchg
push
jnp
lahf
add
mov
push
movsb
pop
mov
clc
sbbl
das
in
xor
inc
jmp
push
xchg
fiaddl
bound
cmp
sbb
mov
fistl
xchg
nop
adc
mov
les
push
cmpsb
cmp
mov
jle
out
mov
add
test
test
or
jge
jne
push
sahf
sarb
adc
mul
mov
sub
pusha
jmp
or
pop
sub
test
test
iret
or
lret
int3
xchg
pop
jmp
shll
sar
ljmp
repz
or
mov
shlb
int3
mov
adc
cmpsl
dec
mov
pop
xor
int3
and
out
cmp
xor
jne
sar
idiv
insb
and
ss
test
push
jns
rclb
fiadds
xchg
xor
sbb
xchg
pop
jg
push
cmp
lahf
xor
in
mov
sub
adc
adc
push
popa
sub
pop
push
fldt
sbb
inc
push
xchg
mov
insl
cmp
push
xchg
sti
ljmp
out
sub
inc
jp
pop
push
xor
xchg
sub
push
and
aaa
sbbl
push
sahf
out
stos
jl
and
mov
mov
mov
jbe
int3
test
divl
divb
test
imul
ja
icebp
test
mov
fsubrs
mov
or
mov
and
push
leave
aaa
popf
or
add
dec
add
inc
inc
sub
outsl
dec
dec
mov
ret
aaa
shrl
pop
andl
imul
or
mov
xor
mov
std
gs
xchg
hlt
sub
mov
jns
xchg
outsb
xchg
fwait
outsl
insb
mov
gs
daa
dec
rol
adc
push
dec
in
arpl
adc
fistl
call
mov
push
or
xor
in
lock
adc
mov
mul
pop
inc
pop
add
jo
inc
repz
testl
test
pushl
out
xor
mov
cmp
insb
mov
into
add
sbb
repz
xchg
frstor
adc
scas
jl
jb
push
sbb
lods
dec
or
sub
out
xor
loopne
movsb
xchg
lods
shrl
popf
jnp
lcall
stc
fcmovnu
mov
sbb
cmp
bound
aam
xchg
sbb
jmp
mov
jp
and
dec
and
nop
and
or
lea
gs
jge
jbe
pop
out
mov
sbb
stos
and
in
adcb
loope
jnp
jne
imul
and
jns
loop
xor
lock
add
cli
mov
lods
sub
in
dec
mov
xchg
lock
stos
je
add
outsb
sub
data16
test
dec
ja
dec
es
sub
pop
pop
xchg
cmp
push
stos
and
les
lret
pop
inc
ret
dec
das
jns
mov
dec
sahf
pop
ja
cs
aas
sbbl
pusha
jns
mov
lds
mov
pushl
add
cwtl
cmc
mov
iret
stos
sub
dec
aas
jbe
aaa
mov
ret
cli
insb
icebp
mov
xchg
and
iret
adc
push
cmp
dec
add
pop
leave
cmp
fdivrl
test
jne
cmpsb
rol
xchg
lods
outsb
xor
dec
xchg
mov
jge
xchg
xlat
je
ffreep
dec
push
sbb
rcrb
scas
out
dec
cmp
fstp
xor
repz
add
and
sbb
mov
jae
cli
popf
ficoml
daa
push
sbb
jne
sbb
cmpsl
or
insb
fldcw
fwait
daa
inc
cmp
jmp
adc
jae
cmc
mov
imul
imul
and
imul
repnz
push
out
sub
xchg
ror
xor
xor
sbb
imul
cmp
orl
dec
imull
dec
push
aaa
or
fs
xor
xor
les
aad
repz
out
cmp
jns
push
push
cmp
inc
jmp
sbbl
in
call
les
lret
ret
or
jecxz
arpl
std
mov
ret
cmp
stos
lgs
neg
sub
lods
popf
scas
inc
incl
repnz
push
or
imul
scas
and
pop
mov
fs
sbb
add
jbe
call
out
jecxz
pop
movsl
sub
and
inc
jno
jecxz
push
and
ja
fstps
push
pushf
mov
mov
rcr
popl
loopne
add
fisubl
fst
daa
pop
clc
mov
jmp
add
pop
lods
in
jl
mov
sbb
xchg
cmp
dec
lcall
clc
xchg
pusha
mov
repz
mov
mov
sbb
notl
in
jge
fwait
mov
test
inc
hlt
imul
add
and
or
das
mov
cli
popf
mov
sub
pop
sbb
outsl
cs
mov
mov
and
in
xor
and
mov
or
mov
movsb
xchg
cmp
adc
pushfw
push
push
test
gs
jne
push
pop
jae
ds
push
jp
mov
cltd
or
push
icebp
leave
in
mov
sub
push
hlt
mov
push
jne
jbe
bound
pop
das
lods
gs
shll
sbb
popa
ret
mov
sarl
in
mov
mov
lcall
insl
adc
adc
dec
ret
repz
out
and
xor
xchg
dec
and
jbe
mov
lea
cmc
xchg
stc
lock
mov
push
add
shrb
inc
cwtl
std
mov
and
xchg
repz
fdivrs
fdivrp
mov
pop
popa
pmulhuw
arpl
popa
in
or
pop
loope
lods
mov
icebp
aad
hlt
jns
jmp
call
mov
inc
cmp
nop
mov
mov
mov
addr16
or
mov
cwtl
fistpll
lds
cs
mov
aaa
dec
cmpsl
cmp
fdivrs
add
dec
push
outsl
mov
fucom
les
test
es
data16
pop
mov
mov
push
ss
cmp
jge
iret
pop
cmp
dec
sub
fstpl
xchg
jle
inc
in
imul
sbb
jle
enter
pusha
ret
mov
mov
insl
lret
outsl
xchg
aaa
add
pusha
icebp
add
in
pop
repz
xchg
popf
scas
push
out
jb
xor
lods
aam
push
jae
sbb
call
repnz
imul
aaa
jle
jno
int
rorb
fdivrs
or
jbe
xor
push
adc
dec
pop
inc
mov
es
sub
shl
and
orl
cld
add
mov
adc
dec
push
pop
push
push
fistps
or
mov
jb
dec
fdivr
pop
js
mov
ss
jnp
pop
lahf
aaa
roll
test
stos
xchg
rcrl
pop
push
xchg
test
test
orb
cmpsl
inc
orb
push
sub
shll
stos
xor
inc
aam
fildll
repz
fwait
lret
push
push
mov
out
xor
dec
mov
mov
sub
mov
sub
sub
add
outsl
or
popf
add
rcl
sub
in
fistps
notb
mov
mov
sub
mov
jl
and
sbb
cwtl
xchg
dec
jnp
iret
mov
inc
push
mov
pop
lahf
dec
add
xor
mov
popa
repz
or
pop
jp
outsl
pop
mov
xchg
into
jbe
clc
sbb
mulb
adc
mov
jp
gs
adc
pushf
jmp
fidivrl
das
jecxz
add
or
inc
lcall
stos
inc
imul
adc
push
ljmp
mov
xor
cmc
shlb
fisubs
rolb
lret
push
les
sbb
lcall
xor
stos
and
add
cmp
dec
fs
jnp
cmc
push
ja
test
imull
into
inc
xor
mov
addl
push
lret
lret
mov
sub
fsts
adc
dec
or
pop
stc
pop
pushf
cmp
test
pop
cmpb
sub
xchg
jge
and
dec
clc
mov
lret
cwtl
xchg
loopne
sbb
aas
popa
xchg
mov
test
mov
cmp
mov
out
fucomi
sub
cmp
or
xchg
mov
inc
and
ret
cltd
xor
int
movsb
dec
lcall
jmp
shll
sbb
cmpsb
das
loope
cmp
sti
arpl
dec
loop
inc
add
sahf
pop
je
bound
imul
inc
icebp
cltd
test
mov
add
pop
xchg
pop
add
jmp
xchg
add
shll
dec
aaa
inc
cmp
pop
sub
mov
cmp
jb
lret
sahf
test
imul
cs
or
in
push
loope
sub
out
in
out
sub
add
out
mov
rclb
mov
sbb
sbb
sub
pop
mov
stc
notb
push
lea
push
mov
stc
push
push
out
outsl
push
or
test
mov
imul
in
mov
inc
fcomip
adc
popf
das
push
mov
vmread
fsubrl
fwait
test
jbe
mov
sbb
lods
push
sub
outsl
sub
sub
and
inc
xchg
sub
shrb
jbe
stos
fstl
inc
mov
pop
and
incl
cmpsl
loop
sbb
mov
push
imul
dec
jg
inc
je
popl
fdivs
ds
jns
lcall
xchg
xchg
and
cwtl
adc
mov
cltd
inc
add
dec
dec
sub
pop
add
sbb
lret
dec
dec
jp
shld
stc
imull
das
insl
dec
sahf
push
ljmp
xchg
jbe
xor
sti
dec
das
test
mov
jno
inc
rcll
dec
sti
fnstsw
add
adc
cltd
mov
sbb
mov
and
jbe
mov
bound
xchg
loopne
jno
dec
out
dec
mov
sub
xor
pop
pop
push
and
fiaddl
adc
out
jmp
xchg
fmuls
pop
push
fdivrl
push
pop
inc
cmp
add
dec
adc
or
fidivrs
or
mov
imul
test
mov
fdivl
stos
ficomps
cli
push
adc
mov
aam
and
clc
es
adc
cmp
ss
xor
sub
aas
push
or
pop
and
add
and
fcomps
out
mov
fildl
lret
popf
sbb
jp
jecxz
in
daa
sbb
sub
inc
xchg
rcrl
cmp
jle
xchg
pop
sbb
pop
mov
push
push
mov
mov
inc
lea
out
pop
gs
mov
cmp
outsb
adc
lcall
popa
inc
repz
or
or
bound
dec
cmp
aaa
inc
jle
adc
pop
sub
add
aam
xchg
repnz
icebp
jle
aad
or
cmpsl
sub
sbb
scas
in
shlb
mov
int3
jno
repz
fstps
push
and
jge
mov
fdivs
ret
mov
scas
movsl
or
shl
test
call
lods
xchg
cmp
cmp
add
pop
in
js
outsl
mov
add
testl
es
push
addr16
or
lret
in
enter
mov
xchg
inc
and
cld
mov
xor
sbb
out
jbe
mov
pop
insb
and
push
pop
test
mov
aam
mov
call
lods
mov
or
lret
sahf
pop
ret
push
jl
or
les
adc
push
aas
and
and
sar
mov
mov
and
mov
sbb
dec
loope
jnp
addb
lret
pop
sub
ds
fdivl
hlt
dec
sbb
subl
pop
int
pop
sub
in
scas
nopl
daa
mov
mov
les
inc
jae
aam
adc
repz
mov
fsub
jae
test
ds
lock
push
push
xor
mov
fidivrl
out
pop
adc
fwait
outsl
xchg
rep
ret
lret
scas
pop
out
test
das
enter
xchg
mov
jmp
xor
or
add
sub
pop
lock
repnz
loopne
inc
imul
test
enter
sub
out
dec
hlt
outsl
inc
testb
sti
gs
mov
setbe
push
roll
arpl
ja
lret
jno
test
xor
mov
jbe
or
dec
sti
push
push
cmc
outsb
push
ret
add
xor
cmc
xchg
xchg
adc
jnp
inc
push
adc
rcrb
push
xor
cmp
leave
faddp
lea
mov
pop
inc
mov
loope,pt
cltd
cli
rcll
insb
adc
inc
aas
and
jne
cwtl
into
push
movsl
test
mov
pusha
je
lods
jne
cli
dec
inc
cld
fisubl
jb
test
test
dec
pop
inc
lods
clc
neg
std
jl
iret
pop
incl
ret
in
or
sbb
add
mov
inc
test
and
mov
aam
fstpl
daa
xor
push
inc
xchg
mov
mov
and
push
add
lds
enter
rep
into
jbe
cs
subb
movsb
in
dec
jge
pop
shll
or
je
hlt
aaa
jbe
or
pop
mov
jno
arpl
pop
jns
mov
std
outsl
fldcw
pop
addl
cli
movsl
adc
add
in
movsl
out
cmpsl
and
adc
cmp
lahf
rcrl
xchg
aam
pop
test
jle
bswap
inc
dec
jnp
sbb
and
add
inc
pop
push
scas
scas
pop
data16
add
sahf
adc
adc
xchg
adc
xchg
imul
mov
push
fcoml
fldt
or
push
imul
fisttps
addr16
mov
push
shlb
jmp
pop
mov
or
mov
rcrb
add
loope
mov
dec
out
into
fwait
mov
fstpt
pop
ret
mov
or
lock
cld
jb
cmp
and
dec
in
cmp
mov
push
cmc
and
ljmp
imul
shrb
sbb
arpl
add
imul
shll
test
movntq
out
popf
scas
push
lds
cmp
lahf
dec
jp
icebp
imul
test
jbe
std
daa
push
outsl
adc
inc
faddl
sbb
inc
sbb
cmp
or
sub
dec
sti
jmp
enter
repz
jno
rolb
loop
rorl
cmpsb
jbe
add
inc
push
mov
dec
mov
popfw
sub
loop
sub
cmp
xor
jmp
mov
leave
repnz
adc
cltd
and
test
dec
testb
lcall
call
lods
and
sub
popa
ror
xchg
notb
setbe
push
in
adc
cmp
mov
test
jle
cmpsb
xchg
imul
aam
insl
push
push
stos
mov
pop
xchg
fisubrl
xchg
xchg
xor
push
push
inc
lods
sub
xor
mov
adc
fstp
pop
xchg
lods
or
ljmp
and
mov
push
dec
nop
das
xor
push
fdivp
mov
cmp
adc
ret
sub
add
sahf
fistl
push
fnstenv
xor
push
xchg
pop
movsb
mov
jg
cs
std
or
pop
cmc
loope
lahf
sub
pop
xor
je
testl
scas
test
fildll
adc
popf
imul
xchg
test
mov
fldcw
mov
das
cmpsl
adc
enter
fildll
das
jl
dec
imul
pop
arpl
adcb
pop
into
push
shll
lds
mov
fcmove
repz
mov
imul
shlb
loopne
xchg
pop
pop
jmp
insb
inc
movb
push
xchg
loope
lea
xchg
test
ss
sub
mov
jno
jno
cmp
cmpsl
fiadds
bound
sbb
jmp
movsl
push
pop
inc
cmp
push
loope
js
cmp
nop
add
stos
push
mov
mov
xchg
int
insl
nop
and
dec
sar
sbb
outsl
cmp
xchg
je
aaa
popf
movsl
jno
inc
add
iret
pop
add
call
mov
rcll
sbb
pushf
incl
arpl
jmp
cmpsb
push
dec
add
std
sub
aam
cmp
cmp
xchg
pop
cmpsl
xor
or
sub
pusha
sbb
lahf
arpl
or
cmp
jbe
out
push
jle
add
out
fstpt
imul
mov
mov
repz
sub
comiss
mov
out
idivb
cmp
mov
jl
aam
inc
jge
add
and
fmuls
ja
mov
mov
mov
add
cmp
jnp
or
stos
nop
insl
mov
enter
add
jne
xlat
cmp
xchg
dec
fldt
pop
and
ret
xchg
xchg
and
test
jp
enter
cmc
das
lds
dec
in
adc
adc
stos
add
clc
mov
decb
push
nop
xchg
mov
addr16
adc
mov
jo
les
dec
scas
mov
int3
out
mov
xor
scas
test
stc
mov
scas
xchg
adc
scas
std
rorb
arpl
iret
mov
fs
mov
cvtps2pd
xlat
cmp
sub
push
movhps
push
add
xchg
idiv
adc
jae
add
or
mov
xor
fwait
push
and
sbb
push
mov
xor
dec
movb
fisttps
out
cmp
cmp
xor
jb
inc
sbb
sti
sbb
outsb
xchg
je
in
fcmovne
mov
pop
push
mov
or
sbb
sti
std
imul
loope
jno
jbe
loopne
cmpsl
arpl
sub
mov
jae
dec
cmpsb
sub
adc
je
addr16
jns
inc
insb
std
sarb
stos
xchg
scas
pop
hlt
cmpsl
cmpsb
out
or
jbe
imul
add
lods
mov
aaa
mov
sub
in
movsl
mov
sbb
xchg
clc
and
cwtl
mov
push
ds
and
add
movsl
inc
cwtl
mov
xor
roll
imul
mov
inc
jmp
nop
or
add
push
fdiv
add
push
sub
xchg
push
ljmp
mov
in
mov
inc
sub
sahf
movb
aaa
mov
mov
and
testl
mov
cmp
dec
lcall
insl
xor
popf
test
pop
shlb
inc
int
dec
pop
or
movsb
inc
add
jge
mov
pop
sbb
adc
jae
sub
aad
cmp
xchg
movsl
jg
dec
sub
adc
movsb
and
out
push
cmp
push
das
aad
mov
xchg
cmp
or
test
fldl
xor
nop
xchg
loope
cmp
cmpsl
bound
push
setne
data16
stos
subb
pop
loope
scas
das
pop
adc
int3
insl
xchg
pushf
lret
dec
inc
mov
or
jge
xchg
cmp
add
jbe
negb
cmp
cmpsb
stos
ret
loop
sub
fwait
inc
lea
pop
scas
cmp
icebp
and
test
pop
data16
hlt
mov
add
dec
inc
orl
push
sub
mov
fiaddl
xchg
jnp
leave
xchg
sbb
outsl
lods
dec
stos
mov
ss
scas
or
adc
pop
add
pop
std
sbb
pop
xchg
sbb
ds
gs
js
jbe
or
adc
push
jmp
or
adc
or
scas
bound
testb
push
and
in
movsl
sbb
out
loopne
sub
jno
mov
cld
pop
or
xor
pop
push
repz
adc
popa
push
out
push
les
stos
out
xchg
jno
cmpsl
xlat
jge
dec
jg
cld
repz
fists
jle
adc
inc
xchg
sbb
imul
pop
dec
lret
cmpsl
inc
pop
sub
dec
inc
and
mov
loopne
mov
cld
dec
insb
out
int3
lods
jle
call
pushw
or
rcl
mov
pop
jl
add
or
mov
stos
in
cmp
scas
jo
negl
jle
sar
clc
xlat
add
enter
rcr
xchg
cmp
and
ja
int3
xchg
push
xorb
lret
adc
jns
insb
xor
outsb
add
xor
push
cmp
xor
int
out
mov
and
imul
and
inc
movl
aam
popf
scas
lock
cltd
fwait
push
mov
add
pop
xor
cmc
rcrl
ja
mov
adc
divl
mov
jae
ljmp
fldenv
mov
cmp
sti
dec
out
es
jp
push
das
or
pop
xor
lea
pop
sbbl
cld
scas
in
dec
into
xor
aaa
push
and
gs
inc
jns
mov
outsb
cwtl
push
test
pop
pusha
mov
xor
inc
or
iret
inc
sahf
jmp
test
ljmp
int
fnstsw
add
and
and
mov
jg
repz
lock
dec
jbe
int3
xor
adc
aaa
pop
imul
je
jle
inc
dec
loope
pop
or
mov
push
cmpsb
sub
sbb
add
lds
sbb
mov
ret
cmc
rolb
or
pop
jno
push
dec
inc
xor
in
cmp
cmpsb
mov
popf
jge
iret
adc
aam
ss
test
stos
xor
xchg
ja
pop
shll
hlt
jo
insb
xor
inc
into
dec
pop
fildl
sbb
sbb
mov
fnstcw
outsb
sbb
or
mov
fadd
aas
pop
inc
dec
push
jg
push
xor
push
loope
inc
xor
add
jb
inc
lret
sbb
mov
scas
ret
sbb
into
incl
out
mov
clts
pushf
push
pushf
cmp
mov
test
mov
daa
cmp
or
or
jnp
inc
adc
addr16
and
cmp
xchg
jne
test
adc
mov
cmp
ret
cmpb
loop
nop
cmp
cli
jp
pop
inc
sahf
mov
aas
sub
or
outsl
push
out
ja
test
jo
mov
sub
pop
or
std
das
dec
xchg
jae
sbb
jne
pop
sar
jp
shll
xchg
lods
mov
mov
sbb
or
push
fs
in
pop
sbb
test
repz
fiaddl
movsbl
aad
stos
jnp
sub
adc
inc
xor
cmp
test
or
mov
push
xchg
out
es
jge
fstl
pop
sbb
or
or
and
pop
insl
jne
rcrl
xor
mov
mov
jle
cmpsb
mov
mov
xor
mov
jno
xchg
jl
movsb
cld
out
in
jle
andb
lds
fldenv
sbb
into
xlat
ds
mov
jnp
inc
inc
xor
movsl
push
fnstcw
dec
inc
test
mov
jge
dec
push
es
adc
fsubl
mov
bound
int
das
push
imul
mov
add
jne
icebp
push
cwtl
cmp
xchg
jae
xchg
sbb
mov
cmpsb
sbb
push
pushf
loope
out
xor
cmp
stc
dec
mov
cmp
iret
mov
fimull
inc
add
sti
sub
jbe
mov
cmp
inc
sub
jo
mov
push
mov
push
xchg
dec
and
dec
aam
push
xor
xchg
fs
xor
call
and
fcomps
jg
int
and
imul
inc
hlt
pop
inc
aam
mov
call
daa
mov
pop
imul
out
pop
add
scas
mov
arpl
pop
sub
sbb
int
std
cmp
or
and
cmp
into
sbb
loope
bound
mov
popf
mov
mov
push
mov
movsl
add
loop
xchg
or
je
rcrl
xor
out
cmpsb
sub
sub
leave
scas
xor
dec
and
and
push
mov
and
loopne
ss
mov
movsb
mov
add
xor
insl
inc
pop
jmp
repz
test
lcall
add
jnp
aas
nop
add
sub
ja
rcrl
ja
or
movsb
and
jp
pop
pop
xchg
and
or
fbstp
xor
ret
cmp
pop
repnz
stos
push
outsl
fisubs
adc
inc
dec
jnp
mov
dec
inc
xchg
out
adc
xor
xchg
inc
or
stc
inc
push
mov
addl
iret
ljmp
hlt
mov
push
stc
mov
jge
mov
inc
push
call
leave
repz
jne
xor
mov
sti
cwtl
lods
xchg
hlt
sbb
icebp
mov
mov
out
mov
and
mov
and
hlt
ret
mov
popf
sub
testl
mov
cmpsl
jno
fistl
xchg
xor
in
lahf
and
imul
mov
inc
xchg
dec
mov
mov
sub
adc
test
clc
imul
cs
fsubrs
hlt
inc
mov
and
int
xchg
test
ss
mov
cmp
je
inc
jns
insb
lea
inc
pop
jl
mov
sbb
lds
andl
pop
es
or
sti
stc
or
in
inc
jp
popa
sub
mov
fstpl
cmc
mov
lret
out
mov
aad
pop
or
sahf
sub
mov
push
and
jecxz
mov
pusha
int
sbb
mov
ret
cmpsl
jns
repnz
cs
dec
pop
stos
insb
int3
mov
sti
rcrl
inc
out
inc
mov
cmp
arpl
sub
pop
hlt
dec
pushf
push
push
mov
jmp
sbb
in
add
push
mov
fsubs
nop
fsubrl
mov
push
inc
lock
fmuls
mov
pop
addr16
add
adc
stc
cwtl
fcomps
push
xorl
mov
jp
ds
mov
into
dec
shlb
ffree
xchg
or
cmp
loope
xor
fdivl
push
cmpb
adc
sub
jge
stos
out
mov
ds
sub
std
xchg
sub
stc
loopne
sbb
int
nop
jns
lock
sbb
jo
dec
mov
subb
scas
cmp
sub
or
mov
sbb
jns
rol
bound
push
repnz
dec
mov
push
push
stc
outsb
shr
xor
fidivl
dec
mov
scas
xchg
je
ljmp
cmc
ds
rolb
sbb
out
push
test
int3
jne
sub
je
aam
leave
add
fs
inc
or
jnp
mov
leave
pop
and
pop
gs
jns
xor
sbb
les
jo
inc
pop
cmp
test
and
test
out
sub
outsb
lret
cmc
xlat
inc
ds
push
xchg
cmp
mov
call
dec
mov
jmp
lret
adc
shrl
movsl
outsb
rol
or
add
negb
imul
cltd
lds
mov
pop
in
ret
rolb
pop
push
in
fistpl
std
int3
jle
decb
mov
loop
mov
pusha
test
scas
rcr
inc
mov
shrb
outsl
pusha
aas
sahf
pop
sbb
outsb
pop
js
dec
push
pop
mov
test
add
cmp
push
lcall
lahf
popa
mov
lods
aas
pop
or
iret
jno
mov
iret
mov
add
rdpmc
ret
cmp
jl
mov
push
leave
mov
mov
push
pop
xor
mov
roll
rorb
call
jecxz
orl
pop
adc
push
adc
sti
pop
lea
xlat
jno
add
movsb
imul
scas
rclb
movsl
int
lcall
jo
mov
fsubrl
or
jne
or
xorl
cmp
sbb
lret
inc
xlat
push
ljmp
xlat
push
push
lea
or
arpl
stos
or
push
sti
sti
cmp
jp
inc
dec
adc
movsl
inc
xchg
lock
jle
cmp
cli
jno
add
test
pop
jnp
int3
insb
sti
push
adc
add
jb,pt
and
push
ds
jge
and
mov
fidivl
xor
loopne
das
cmpsb
sahf
pop
pop
mov
arpl
push
adc
mov
shrl
inc
outsl
lahf
sbb
lret
aaa
call
xchg
mov
or
ja
fwait
mov
lock
ret
lret
in
cltd
or
mov
fwait
mov
clc
scas
std
ret
push
inc
or
aad
push
fisubrl
pop
aaa
pop
pusha
push
imulb
pop
or
sbb
movsl
adc
test
in
out
add
xor
inc
or
int3
sub
xchg
xchg
and
push
sub
jl
add
add
mov
and
sti
adc
fidivrs
pop
xor
test
icebp
arpl
inc
popf
lea
lock
jns
xchg
cmp
cld
cmp
loope
add
and
enter
iret
xlat
das
ja
cs
addr16
inc
sahf
push
or
and
or
pop
in
pop
popf
or
aam
je
sub
xor
movsl
jne
sub
xchg
xor
movb
sub
aam
enter
cld
sbb
jae
test
push
xor
push
ds
faddl
imul
xor
pop
push
and
xor
mov
dec
mov
lret
lods
daa
mov
mov
movups
inc
mov
pushf
sub
mov
popa
inc
mov
pop
sub
shrb
scas
jo
jle
add
icebp
push
addr16
dec
aam
addr16
leave
mov
push
ljmp
cwtl
sub
cs
rol
push
data16
andl
movl
loope
js
xor
pop
pop
add
mov
arpl
mov
inc
sbb
std
xchg
mov
stos
push
cmpsl
adc
lahf
cwtl
lret
dec
xchg
jbe
dec
lods
fadds
nop
test
imul
xchg
or
lcall
ret
in
imull
ret
loope
into
in
jecxz
xor
pop
sub
int
daa
lea
das
mov
or
inc
popa
cmp
adc
mov
out
mov
test
xor
pop
repnz
dec
pop
push
and
jmp
sbb
enter
pushf
adc
jbe
adc
repnz
and
mov
sbb
shlb
bound
xchg
adc
or
fidivl
jo
dec
icebp
sbb
rcr
outsl
inc
xchg
scas
arpl
push
adc
or
cld
imul
test
sub
mov
cwtl
and
stos
jb
mov
aas
test
xor
xchg
aas
int3
push
push
fbstp
sub
mov
les
sbb
outsb
pop
aas
cmp
cwtl
adc
dec
test
inc
xor
adc
mov
jge
sbb
cltd
fsts
movsb
cmp
cwtl
mov
jmp
xchg
pop
int3
nop
xchg
scas
pop
inc
cltd
stc
dec
out
sub
jg
cmp
push
jns
push
pop
xor
push
test
sbb
sub
sahf
loope
cmp
ja
mov
lret
lods
pop
mov
adc
mov
int3
mov
inc
js
pop
or
iret
imull
mov
leave
jno
fisttps
pop
add
das
shrl
int3
fs
or
and
xchg
cli
mov
jnp
out
sarb
in
jns
and
lock
jle
call
out
pop
loopne
out
sbb
enter
in
jno
pop
push
mov
andb
pop
ds
sbb
xchg
repnz
iret
and
stos
ret
jns
lds
aas
movsl
enter
in
or
insl
pusha
xchg
aad
push
push
add
cmp
mov
sub
sub
ret
scas
std
pop
xchg
sub
xchg
andb
rclb
and
mov
fstpt
and
and
out
adc
lret
xchg
pop
add
sub
dec
out
fadds
dec
insb
pop
shr
jecxz
insb
pop
les
imul
aas
jge
add
lcall
inc
sub
in
xchg
sti
mov
cli
mov
dec
mov
js
mov
andl
sub
dec
jmp
xor
jnp
xchg
rol
xlat
mov
movsb
sbb
xor
mov
leave
sub
xchg
out
dec
cmp
mov
and
adc
cmp
adc
or
inc
idivl
stc
sarl
push
pop
mov
gs
push
xchg
xor
es
sbb
jp
mov
mov
cli
mov
cmp
inc
call
fisttps
iret
cli
adc
fldenv
add
rcrb
js
ret
out
pop
sbb
mov
mov
call
sbb
imul
lcall
cmp
sub
push
adc
inc
movb
fistpl
push
lods
inc
jbe
and
test
into
sbb
lret
fstp
mov
push
out
inc
sbb
jge
mov
lods
pop
xor
mov
and
mov
insb
mulb
adc
jg
andb
mov
pop
lcall
test
cltd
leave
xchg
sub
stos
ljmp
jbe
decb
aaa
xor
jo
or
jmp
inc
adc
daa
cmp
xchg
mov
scas
cmpsl
dec
iret
and
push
rorb
pop
repz
cmp
mov
and
xor
mov
add
imul
aam
dec
and
sub
sahf
xchg
sahf
or
xor
mov
xchg
clc
fidivrl
insb
sub
inc
jmp
sbb
test
test
cmp
movsb
fbld
mov
push
cmpsb
mov
inc
mov
adc
or
add
notl
dec
sbb
sti
adc
or
and
leave
cmc
outsl
push
enter
cmpsl
js
movsl
jns
jns
jo
mov
call
xor
in
sti
sti
or
fs
jl
sbb
dec
xchg
rcll
mov
cmove
sbb
add
gs
aas
cltd
stos
push
jp
mov
pusha
in
push
aam
sub
rolb
pop
xchg
loopne
aas
pop
cwtl
adcl
dec
lret
es
adc
fs
ret
std
sub
and
lahf
lods
inc
lcall
push
hlt
movsb
cltd
jg
mov
mov
sub
rorl
push
add
scas
in
lahf
jbe
sbb
mov
repz
mov
push
push
push
in
mov
dec
mov
lret
jo
icebp
pop
push
lods
arpl
ljmp
xlat
adc
es
sbb
or
cmp
popf
xchg
xsha1
cmpsb
mov
ss
mov
mov
fincstp
and
mov
inc
pop
subl
mov
or
add
fs
insl
add
pop
sbb
mov
in
ds
bnd
fistl
scas
mov
inc
xchg
out
and
push
mov
add
pop
mov
inc
aad
sti
cli
int
xor
iret
cmpsb
fldcw
pop
adc
dec
addb
add
mov
fs
add
aaa
mov
mov
pop
inc
repz
mov
fnstenv
fmul
popa
fneni(8087
in
outsl
std
sbb
xchg
ds
mov
sbb
jb
pusha
negb
ss
push
pop
arpl
or
add
xor
pop
inc
mov
or
mov
mov
xchg
dec
inc
lods
mov
lahf
xor
aaa
scas
add
jle
xor
scas
mov
xlat
lods
cmp
dec
push
pop
negb
dec
mov
incb
mov
lcall
inc
adc
shl
mov
mov
ss
xor
test
ljmp
push
cmp
xchg
xor
mov
jnp
je
add
xchg
cmc
nop
std
call
loope
mov
shlb
push
mov
xlat
add
add
xchg
je
mov
sbb
inc
aad
push
jecxz
mov
jae
mov
sub
inc
hlt
ret
mov
xor
xor
mov
mov
dec
out
orl
lret
or
mov
nop
sub
stos
int
pop
add
cmp
xchg
cltd
jne
add
xchg
aad
cmp
or
subl
insb
leave
mov
mov
jle
inc
xchg
frstor
xchg
dec
push
mov
add
adc
sbb
lds
data16
arpl
out
gs
shlb
fwait
cmpsl
push
and
push
std
jp
arpl
insl
cmp
jno
ljmp
imul
aad
clc
mov
add
jno
xchg
aad
jp
inc
add
ret
jp
leave
aad
adc
xlat
pop
punpckhdq
sub
mov
es
xchg
push
mov
mov
cmpsl
mov
jne
insl
fnstsw
jne
sbb
cld
into
shll
fnstcw
sbb
sbb
stos
mov
dec
add
add
or
inc
or
bound
sub
call
xchg
mov
movsb
xchg
stos
arpl
imul
or
sti
test
ret
bound
adc
pop
adc
test
jb
jge
adc
pop
pop
dec
pop
add
ret
jl
test
or
pop
call
adc
cwtl
sbb
dec
adc
cmp
mov
es
xchg
push
int3
jmp
std
ljmp
popa
mov
jle
lods
jbe
nop
push
and
jmp
jecxz
fpatan
scas
mov
cmpb
nop
jb
mov
mov
es
lret
mov
mov
push
outsl
out
inc
rcll
inc
dec
popw
jns
arpl
mov
xor
sbb
mov
movsb
test
push
jmp
out
or
test
mov
test
lods
or
adc
and
es
shl
xor
cmp
insl
lds
xor
stc
cmp
dec
xchg
pop
aaa
lods
cmc
push
push
push
enter
movsl
xchg
hlt
add
lock
pop
and
shrb
pop
clc
aam
jns
das
jno
popa
xchg
mov
xor
push
ss
sbb
cli
test
push
dec
push
xchg
jo
icebp
push
fld
in
out
leave
push
lods
dec
cli
pop
xorb
inc
out
fidivrl
loop
mov
cmp
aad
mov
sub
xchg
and
mov
subb
fdivp
in
popl
in
jecxz
ja
push
adc
and
js
out
enter
xchg
adc
movb
cmp
int3
pusha
sti
nop
pop
lret
push
cmp
pop
sbb
mov
fimull
fadds
out
and
xchg
sub
cld
sarb
pop
cmp
orb
xor
mov
mov
fadds
jb
mov
pop
push
push
inc
fisubrl
jno
cmpsb
sti
sub
or
dec
inc
sub
adc
mov
mulb
adc
xchg
ret
xchg
addl
adc
aas
stos
daa
and
adc
sbb
cmp
sub
shll
gs
push
shlb
or
shl
ret
fidivrs
push
or
jl,pn
inc
std
push
mov
mov
pop
pushl
or
inc
mov
aad
and
and
mov
mov
and
pop
xchg
je
adc
es
mov
enter
mov
push
pop
push
and
jmp
outsl
cs
sarb
pop
jmp
lea
adc
pop
lret
stc
dec
test
adc
push
cld
repnz
les
fisttpl
icebp
xor
pop
or
cwtl
ss
adc
cwtl
mov
sub
inc
fnstsw
mov
pop
lret
test
or
jg
cmp
or
jl
mov
rcr
pop
mov
int3
xchg
jnp
pop
stos
pop
push
lds
dec
xchg
inc
out
out
pop
enterw
icebp
and
push
xor
fcomip
push
arpl
movsb
add
lock
addr16
push
cmp
fimuls
mov
aad
daa
lret
imul
call
and
in
loope
xor
ret
je
out
iret
jbe
pop
sub
jb
cmpb
mov
mov
loop
orb
add
push
push
ret
cs
cmc
pop
jnp
inc
cmc
cwtl
dec
out
nop
mov
out
fildl
mov
jmp
int3
cmpsl
insb
push
inc
mov
dec
aaa
jbe
sbb
cmp
cmpsb
sbb
inc
les
or
jmp
jno
mov
push
sti
jno
sub
sub
dec
dec
jecxz
sahf
out
stc
int3
push
push
jo
fsubrl
mov
xchg
add
mov
xchg
lea
lods
jns
into
sbb
mov
test
cld
inc
xor
nop
sub
lds
or
push
sbb
aad
push
mov
pop
call
sbb
ror
jmp
inc
stos
inc
fldt
inc
fnstenv
adcl
fsubrp
scas
repz
and
inc
push
cltd
lods
fidivrl
pop
mov
inc
sti
dec
call
scas
xchg
es
mov
iret
data16
add
rcll
imul
or
fdivs
popa
adcl
fs
je
outsl
arpl
cmp
sub
jp
into
mov
les
push
xor
pop
insb
enter
jo
pop
imul
rcrl
test
sti
adc
mov
push
cmp
and
loop
or
pop
xchg
adc
sbb
sahf
cs
cs
pop
jns
or
sub
sbb
mov
inc
adc
inc
xchg
inc
fstps
arpl
mov
arpl
adc
pop
fnstenv
shlb
and
jp
sbb
outsl
lret
mov
dec
pushf
cwtl
sub
jmp
mov
lcall
pop
push
adc
push
jl
sub
outsl
xchg
add
pop
mov
jo
inc
fidivl
in
mov
gs
jnp
and
lods
lret
xlat
dec
mov
sbb
mulb
and
cs
sub
inc
call
push
push
dec
mov
jge
loop
stos
add
pop
cmpsl
in
pop
rcrl
jb
push
mov
lret
addb
cmpsb
scas
cmc
xlat
ret
ret
lds
into
xorb
sub
repnz
into
mov
data16
mov
sub
loopne
imul
and
lret
add
jle
lret
std
test
call
int3
ds
mov
jl
lods
cmpsl
sub
insb
pop
jnp
icebp
aaa
rolb
dec
out
leave
in
dec
xchg
fsts
sbb
fstps
call
aas
lods
mov
je
sbb
push
cltd
xchg
into
adc
movaps
push
push
cld
push
xor
adcb
mov
gs
sub
loop
lret
inc
and
int3
insl
pop
repz
lret
ljmp
mov
jg
popf
and
cmp
xlat
jbe
xchg
jmp
inc
inc
mov
xor
int
test
jo
lods
xlat
and
repz
add
mov
add
or
repnz
dec
mov
mov
ja
mov
dec
js
call
push
jo
mov
add
test
pop
ret
fnsave
sbb
hlt
iret
cmp
fstp
pop
mov
clc
ljmp
inc
jne
jns
insl
outsb
cmpsl
mov
mov
dec
scas
mov
mov
or
pop
xor
rcrb
jb
icebp
fists
sbb
inc
out
fnstsw
int3
fwait
les
mov
mov
mov
or
test
lea
mov
iret
or
movd
shrb
in
int3
cmp
and
dec
lahf
mov
push
add
bound
in
lods
lahf
out
jnp,pt
mov
pop
push
std
dec
push
xchg
mov
dec
mov
sbb
mov
arpl
