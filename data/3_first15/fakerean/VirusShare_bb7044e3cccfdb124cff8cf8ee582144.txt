sbb
add
mov
pushf
mov
add
lock
sbb
movsb
xor
pop
cmp
pop
sub
mov
xlat
fbstp
in
mov
jae
dec
mov
js
fxrstor
add
ficoms
adc
mov
es
repnz
ret
push
push
and
fcom
je
inc
lret
push
jae
sahf
mov
inc
call
fwait
mov
sbb
mov
add
push
or
lret
dec
cmp
mov
leave
lcall
inc
call
jnp
inc
xchg
js
and
pop
lret
test
je
aad
ljmp
mov
fsubl
sbb
pop
mov
push
lods
gs
xor
xchg
inc
call
es
add
sub
iret
add
xorb
loope
test
sbbb
mov
mov
nop
out
lea
add
and
jle
pop
dec
pop
push
fxtract
mov
jno
push
andl
and
std
das
mov
lahf
push
add
jb
pop
out
xchg
push
mov
adc
lock
push
aaa
stc
inc
aad
data16
dec
sti
roll
les
das
int3
inc
rcpps
inc
and
mov
incl
lods
scas
jno
insb
adc
pop
push
mov
pop
or
dec
push
mov
out
sub
nop
movsb
fdivs
pop
stos
mov
lcall
or
mov
inc
lods
mov
jne
adc
gs
mov
push
add
or
sub
ljmp
insb
jle
ret
pop
stc
gs
sub
add
js
xor
push
and
sub
das
in
or
leave
lods
add
dec
sub
mov
pop
les
popa
push
mov
cmp
dec
pop
sub
mov
jle
mov
mov
xchg
mov
mov
scas
daa
cmpsl
test
sbb
dec
pop
roll
mov
jb
sub
bound
pop
sub
push
jl
lahf
cli
inc
pop
push
mov
ret
loop
sub
pop
push
xchg
in
push
cltd
not
ror
sbb
adc
testl
and
movsb
je
xchg
adc
dec
push
sub
and
fldt
insb
mov
pop
inc
mov
popa
stc
out
scas
xchg
mov
in
jmp
push
insb
sub
test
and
imul
std
mov
xchg
out
test
jle
sub
and
xchg
jle
lret
push
ret
xchg
push
flds
aaa
jb
mov
pop
cmpsb
push
jl
cwtl
inc
aad
jnp
fiaddl
push
adc
mov
push
mov
dec
xchg
cmp
popf
sub
inc
jae
enter
fisubl
add
inc
mov
mov
lods
cmp
in
inc
rep
jmp
cmp
mov
cmc
push
xchg
jno
iret
jle
adc
aad
movsb
mov
repnz
pop
jmp
mov
out
stos
cmpsl
sub
popa
sahf
out
xlat
enter
sti
sub
mov
rcrb
xchg
rcr
cs
inc
mov
pop
inc
jp
je
cmp
push
dec
push
push
jecxz
xchg
xchg
lods
repz
fdivs
mov
rorb
sahf
push
dec
pop
add
fwait
inc
std
into
mov
ljmp
sahf
add
jno
fiadds
pop
cld
mov
sbb
add
int
or
pop
enter
dec
sti
lds
test
addr16
dec
pop
fisttps
push
mov
fdivrl
shlb
cmp
sub
jg
cmp
mov
enter
or
xchg
mov
sbb
aam
add
daa
aam
aam
cwtl
jns
loop
inc
fisubl
push
inc
dec
mov
ret
leave
cmp
pop
test
or
dec
mov
push
fcompl
jl
and
les
mov
out
data16
pop
xchg
out
pxor
inc
addb
mov
sbb
popa
and
add
sti
sub
or
xchg
jae
mov
ljmp
xchg
xchg
cld
not
cltd
add
dec
jl
push
aam
scas
fsts
xor
cmp
cmp
in
jnp
mov
je
out
mov
push
into
mov
jl
mov
fwait
push
pop
incl
je
mov
mov
loopne
mov
sub
xlat
test
movsl
lcall
adc
scas
rorb
push
push
sbb
cli
in
sbb
mov
loope
adc
pop
fs
mov
loop
mov
xchg
dec
add
cmpsb
mov
mov
js
js
mov
mov
sbb
pop
je
push
fsubl
dec
cmp
sub
xchg
xchg
mov
or
addr16
pop
test
pusha
imul
push
in
jmp
mov
aas
jb
jl
cs
push
cwtl
outsb
sub
scas
jbe
sub
orw
dec
mov
lock
in
inc
aas
lcall
jmp
mov
loopne
call
ja
sbb
xchg
cmpl
call
push
loope
loope
xchg
test
jmp
aaa
push
ds
lods
inc
add
cld
dec
and
pop
lods
pop
ret
jecxz
jecxz
push
jae
bound
adc
push
ds
scas
popf
jae
pop
and
jno
mov
ss
mov
repnz
mov
add
pop
nop
xchg
sub
or
cmc
roll
pop
sbb
dec
ret
mov
cvtps2pd
xor
je
jg
test
das
mov
mov
cs
out
out
adcl
shrl
push
push
scas
std
sub
inc
xor
xor
xor
aaa
mov
fidivl
leave
fimuls
dec
dec
cmpb
outsb
cmp
stos
fists
stos
jno
xor
lahf
loope
inc
pop
outsl
fcoms
fldenv
cmp
push
inc
jo
mov
inc
xchg
adc
pop
in
pop
jae
dec
xchg
nopl
push
xchg
push
dec
jmp
sar
pusha
add
sbb
scas
mov
insb
jl
dec
mov
out
imul
icebp
js
add
jmp
inc
rorb
pop
xchg
test
insl
add
sbb
pop
bnd
fidivs
adc
sub
push
sahf
sahf
repz
frndint
jae
fdivl
lock
cmp
in
pop
imul
or
cmpsb
repz
mov
xchg
loopne
jl
add
out
cmp
daa
mov
sbb
xchg
xchg
jbe
ljmp
push
sub
lea
mov
lret
cli
and
insl
mov
xchg
lods
push
add
adc
rorl
inc
in
or
jle
ss
fistpll
or
popa
out
jo
adc
lock
stc
out
xor
or
pop
ficoms
ja
and
nop
fcompl
adc
test
sbb
cmp
int
inc
push
mov
idivl
into
sbb
mov
bound
cltd
adc
movsb
mov
mov
mov
shrb
lods
ja
ja
fnsave
lock
mov
test
add
lret
push
jbe
and
psubb
or
inc
mov
mov
imull
adc
xor
mull
mov
fdivl
movsl
pop
int
jmp
loopne
outsb
lcall
lret
jmp
xchg
mov
xor
lock
sub
pop
sti
dec
jg
sarb
scas
dec
dec
imul
out
adc
pop
icebp
mov
mov
mov
jmp
or
sahf
sahf
insl
add
push
xor
mov
repz
in
sub
ret
in
push
fcmovb
xchg
ret
inc
jnp
jmp
loop
cmp
and
or
cmp
lret
pop
push
rcr
loopne
push
add
ds
js
push
jmp
ja
call
in
cmc
xchg
mov
and
out
loopne
mov
pop
mov
mov
out
xor
or
pop
in
lret
sub
push
jae
scas
push
scas
jg
inc
movsl
jp
repnz
out
inc
xchg
adc
jb
das
pushf
mov
xor
in
mov
dec
cmc
out
out
mov
push
sub
inc
arpl
rcr
cmpsl
dec
out
in
movsb
lock
adc
or
jg
mov
xchg
notb
addr16
lahf
mov
popa
pop
insl
outsb
out
leave
xchg
aas
aad
stc
push
push
addr16
mov
sub
cmp
adc
or
fdivl
pop
lcall
ss
test
mov
call
add
ficomps
or
adc
lret
es
cmp
jp
mull
xchg
je
xlat
jecxz
xor
int3
dec
mov
test
jne
pop
jnp
out
push
insl
stos
loope
lret
lcall
xchg
dec
in
jbe
in
xchg
cmp
jle
movsb
in
pop
shr
push
cmpsl
testl
ljmp
gs
loope
imul
push
lods
or
push
lea
test
ret
mov
adc
rcll
sbb
or
mov
pushf
out
mov
and
shll
aas
jb
ds
ret
popf
stos
subl
jp
push
cltd
jge
mov
xchg
arpl
mov
add
dec
or
test
xor
mov
aaa
sbb
shrb
decl
push
inc
xchg
lods
inc
inc
jmp
fistl
clc
scas
pop
push
sub
int
shrb
loope
rorl
int3
mov
inc
out
aaa
push
inc
push
ucomiss
out
pop
mov
push
jl
mov
addr16
or
test
imul
hlt
xor
pop
xchg
sub
pop
aas
cli
xor
xchg
sub
scas
test
sahf
cmp
rorl
popf
sahf
mov
push
adc
push
xlat
lds
mov
je
add
pop
jp
btr
mov
stos
mov
out
lahf
loop
jb
into
push
testl
call
int
mov
push
and
or
iret
in
out
fucom
cmp
mov
decl
sub
out
cmpsl
xchg
jbe
cld
sub
scas
jl
adc
dec
fisttps
cltd
les
mulb
inc
jp
outsb
sub
nop
sub
and
cltd
aad
inc
loopne
sbb
xor
mov
gs
add
and
test
sub
cld
xor
movsb
stos
push
pop
inc
mov
nop
mov
sbb
pop
mov
push
mov
ja
lret
and
jbe
inc
imul
lock
outsl
jo
mov
inc
daa
insb
clc
sub
inc
sbb
xor
sbb
int
lods
sub
cmp
nop
push
mov
out
xchg
add
push
sbb
scas
add
jnp
mov
fistl
in
shll
jae
popa
pop
inc
mov
mov
int3
imul
ret
xor
sar
jbe
adc
dec
push
inc
inc
mov
sub
ret
ficoml
fsubl
out
movsl
cld
fcoms
mov
sbb
inc
aad
incb
aaa
fs
mov
cltd
or
adc
xchg
or
push
xor
inc
inc
hlt
loop
shrl
outsb
mov
pop
cmp
mov
cmp
or
lcall
dec
testb
mov
xchg
push
notb
cmpsl
lret
dec
pushf
jns
xor
jmp
mov
xchg
adc
lds
cmp
outsb
in
sti
ret
pop
push
push
push
inc
outsl
aaa
inc
movsl
mov
and
mov
and
push
and
jno
stc
mov
cli
sub
jmp
xchg
jg
add
nop
pop
add
push
in
mov
dec
mov
push
xchg
push
sti
out
in
jl
lahf
je
sub
aaa
and
pop
xchg
mov
add
inc
jle
mov
aam
lcall
mov
out
and
push
push
push
fadds
inc
popa
out
test
insb
std
pop
mov
mov
mov
or
mov
pusha
or
fs
inc
ss
cmp
andb
inc
mov
jns
mov
mov
mov
add
rorl
shl
or
sbb
and
js
sub
shll
lock
cmp
jns
or
mov
sub
mov
jae
lahf
shl
movsb
cmpsb
out
xchg
shrb
fidivrs
sbb
dec
out
inc
push
test
ja
shll
xchg
sub
or
test
repz
pop
rcr
jns
and
ret
jne
pop
daa
cmp
stc
mov
mov
add
rorl
fs
mov
pop
mov
orl
icebp
sub
jp
dec
inc
mov
xlat
and
into
bnd
pop
cmc
push
cld
rcrb
inc
stos
ja
xor
das
std
out
test
xlat
dec
aam
xchg
lcall
pop
jg
mov
sbb
ret
notb
inc
ficompl
std
ss
loope
leave
iret
ljmp
lret
and
lods
out
inc
scas
in
insl
mov
sub
sub
mov
mov
iret
add
adc
jg
dec
mov
lods
adc
jbe
sbb
sti
scas
mov
int3
mov
adc
pop
mov
jl
mov
fcom
pop
xlat
fstl
mov
jnp
dec
rorl
dec
adc
andl
mov
ja
loopne
pop
sbb
mov
cs
add
movsl
in
ret
adc
and
xchg
pmaxsw
cwtl
test
pop
or
call
sub
shlb
mov
jne
lods
mov
imul
cli
int
js
xor
arpl
add
mov
das
and
lret
xlat
in
fdivr
andl
push
and
clc
mov
ljmp
pop
into
inc
or
xor
jne
dec
sbb
xor
lcall
adc
sbb
mov
xor
nop
dec
mov
and
popa
mov
mov
mov
jecxz
in
dec
out
sub
ret
xchg
mov
push
mov
dec
xor
pop
push
lahf
in
or
mov
dec
push
xchg
lock
imul
sbb
dec
push
pop
outsb
sub
add
je
mov
fimuls
inc
test
cld
push
jbe
jns
fs
aas
in
xor
mov
xor
adc
mov
les
inc
jecxz
pop
rorl
cmpsl
pusha
fiadds
scas
ss
movb
jmp
sbb
mov
push
inc
push
or
ljmp
iret
sbb
mov
mov
sbb
mov
and
movsl
pop
pusha
call
dec
dec
or
bound
je
xor
cmp
test
mov
cmc
push
pop
jo
cs
mov
aaa
outsb
inc
mov
sbb
xchg
loop
call
cmp
fcmovb
xlat
movsl
icebp
into
arpl
push
or
shrl
mov
loop
xor
mov
mov
testb
aad
mov
cmp
fldenv
imull
js
sub
pop
lcall
jae
mov
jle
push
add
xlat
jmp
out
in
addl
in
pop
js
ss
jb
rol
xchg
push
xchg
imul
clc
push
mov
aas
les
pop
cmpb
test
cmp
and
iret
aaa
pop
and
das
and
or
leave
xor
lods
push
fcmovu
dec
push
ja
jmp
inc
and
sti
jecxz
pop
aaa
pop
fistpl
mov
xor
ds
adc
sub
adc
ds
mov
xor
sbb
insl
mov
ficoml
add
adc
fs
repnz
es
mov
rclb
mov
dec
icebp
insl
outsl
fwait
adc
dec
adc
mov
pop
sub
mov
push
bound
insb
xchg
call
pop
and
js
push
fmull
fwait
and
sarb
in
cmpsl
jl
inc
test
xor
ret
fwait
mov
jg
sub
nop
fstl
and
out
js
mov
into
sbb
inc
mov
imul
jne
mov
xchg
or
orl
inc
pop
xchg
mov
dec
dec
push
loop
mov
insl
iret
inc
dec
aaa
mov
lods
jb
sub
adc
lea
mov
nop
xchg
test
push
scas
dec
xchg
fwait
mov
in
sbb
jno
mov
cmp
inc
loopne
sbb
sbb
adc
pop
sahf
fstl
stos
mov
lds
in
nop
or
notb
dec
dec
ss
mov
insb
pop
lods
sahf
add
fnstsw
xchg
out
in
clc
repz
push
in
arpl
adc
mov
js
imul
jmp
out
leave
cmp
cwtl
sbb
shlb
or
out
and
sub
rorb
cmp
das
cmpsb
cmc
int3
sub
or
and
scas
sbb
xchg
pushf
std
addr16
pop
mov
jp
jne
pop
dec
ljmp
pusha
add
js
iret
push
adc
inc
addr16
add
jb
push
pop
push
dec
mov
push
add
imul
ja
ret
cmp
mov
lret
dec
shrb
push
push
iret
cmpsl
mov
pop
mov
sub
pop
add
pop
shll
mov
mov
xorl
jl
sub
mov
or
cmp
icebp
mov
push
roll
ret
push
arpl
xor
out
iret
xchg
popa
addb
pushf
mov
iret
adc
rorl
dec
movsl
ror
xchg
pusha
jge
push
mov
outsb
mov
mov
je
stos
xor
dec
pop
adc
or
jns
pushf
insl
and
adc
vpavgb
push
xchg
jo
rcrb
call
mov
les
mov
int
test
lea
imul
sub
pop
out
insl
jle
out
xchg
fcmovnu
sub
jo
fsubs
cltd
in
sbb
ss
jne
jnp
or
sbb
data16
jl
xor
xchg
stc
push
dec
xchg
into
xor
data16
xor
mov
xchg
push
ficoms
gs
aam
sub
adc
filds
xchg
and
sub
enter
inc
push
test
repnz
and
fldenv
and
add
add
hlt
pop
inc
lea
dec
mov
aam
inc
dec
jg
stc
push
sub
imul
mov
push
insb
jb
ret
sub
out
rcl
cmp
inc
pusha
out
and
or
or
xchg
push
iret
lods
mul
das
jmp
fsubrl
fcomps
outsb
shll
xlat
xchg
dec
stos
lret
push
inc
test
add
movsb
mov
or
and
leave
push
in
test
pop
iret
js
mov
aas
rorl
lods
xlat
packssdw
scas
in
mov
popf
imul
fs
lret
mov
add
and
out
mov
mov
jae
adc
xor
mov
cmc
add
stc
cmpsb
push
mov
loop
cs
iret
stc
mov
inc
jg
loop
sarb
in
test
jbe
mov
stos
dec
mov
in
insb
andb
and
addr16
xor
mov
repz
enter
cmp
push
ret
daa
mov
inc
xor
lods
pop
stos
cs
sub
gs
pop
pop
xor
mov
gs
lret
addr16
jle
icebp
imul
lds
xchg
mov
xor
jb
fisubrs
adc
jmp
mov
inc
jbe
and
add
jae
push
xor
gs
loope
xchg
and
cmp
sbb
inc
lret
or
mov
cmpsb
mov
pop
rcl
dec
jl
repnz
or
js
jecxz
mov
lahf
ja
pop
push
adc
cmc
sub
cltd
jle
mov
fimuls
cli
push
mov
getsec
in
out
in
ja
pop
faddp
adc
pop
lea
das
add
fcmovnbe
movsb
scas
jp
orl
push
or
xchg
fstp
inc
insb
mov
cmpsl
les
jae
repnz
cmpl
cmp
fnstcw
inc
out
push
pop
in
nop
leave
scas
scas
jno
iret
jbe
shlb
mov
lods
adc
sub
mov
add
lcall
add
push
or
xor
lods
xor
movsb
in
loop
ret
cmpsb
ja
dec
adc
xchg
loopne
cltd
fisttpll
pusha
inc
out
stos
test
insl
insl
outsl
jmp
int3
jae
mov
mov
adc
add
mov
enter
insb
xor
out
movsl
inc
in
add
or
inc
sbb
jg
repnz
test
ss
mov
leave
jge
div
mov
cmp
sub
push
jle
pop
mov
xor
pop
nop
xchg
std
dec
scas
rol
adcb
test
lods
push
mov
mov
mov
mov
jae
shll
or
shr
cmc
add
jo
xchg
in
iret
insl
push
jmp
out
jbe
jo
out
aam
out
sub
fbld
jae
insb
push
pop
cltd
sbb
test
out
jg
popa
cmpsb
adc
lods
and
insl
hlt
sub
in
lcall
jb
and
push
faddl
xor
mov
iret
aad
pop
rcr
sbb
in
jmp
inc
or
movsb
lods
dec
mov
adc
in
cmpsl
inc
imulb
movsl
jg
scas
leave
pop
aas
mov
shrb
add
nop
sub
mov
emms
jmp
cmp
push
mov
xchg
sahf
push
jle
sti
pop
ret
adc
dec
pop
js
dec
lods
out
cmp
movsl
xchg
dec
mov
or
xchg
dec
cmp
fwait
or
mov
pop
push
add
sbb
sbb
sub
jle
cld
insl
mov
insb
jecxz
cmp
xchg
sub
xchg
mov
rorl
cld
gs
jg
adc
xlat
adc
das
into
jno
dec
jle
and
rcrl
pop
jg
aas
imul
pop
xchg
fcomps
movsl
fwait
jb
push
fbld
imul
call
pop
fildl
mov
ljmp
adc
pop
lret
jns
jge
xor
cwtl
adc
and
push
pushf
add
mov
xchg
dec
and
bound
jo
jmp
inc
popf
xor
mov
popa
sub
and
and
call
mov
jp
bound
flds
or
leave
jl
sbb
pop
and
pop
cmp
int
jo
push
inc
or
jo
fbstp
sti
int3
test
fs
and
frstor
nop
mov
xchg
das
jo
dec
pop
mov
pop
mov
sahf
repnz
aas
xchg
push
int
shrl
push
outsl
addr16
cmpl
bnd
int
es
push
icebp
insl
sub
mov
xor
and
jbe
adc
sub
lds
bound
adc
sarl
or
push
fnsave
lret
pop
ja
sbb
aam
loope
sub
sub
jns
loopne
ljmp
hlt
pop
mov
loope
iret
scas
dec
adc
sbb
lahf
adc
push
dec
iret
pop
nop
ficoml
dec
out
mov
scas
dec
testb
incl
lret
sub
inc
and
movsb
xchg
and
push
or
inc
pop
bound
fdivl
xchg
push
mov
out
sub
sbb
ja
cmc
pop
jns
push
ss
sub
movsb
mov
mov
out
cwtl
popf
lahf
punpckldq
dec
sahf
jns
cmp
in
mov
sbb
lock
inc
in
add
push
les
js
cmpsl
scas
inc
imul
fmuls
in
mov
push
adc
or
leave
adc
xchg
adc
bound
push
sbb
xor
inc
xchg
cmc
das
dec
imul
mov
sahf
or
jp
mov
xchg
sbb
cs
sub
fnstenv
pop
stos
cmp
cmpsb
mov
adc
xlat
imull
sbb
cmp
pop
pop
lret
inc
xchg
sub
mov
jecxz
push
loopne
add
push
inc
jl
xchg
mov
movsb
dec
mov
hlt
loop
es
adc
mov
stos
inc
push
movsb
or
xchg
cli
mov
sti
cwtl
jbe
or
sbbl
fsubrl
stos
testl
ss
xchg
mov
stos
xor
mov
enter
mov
daa
pop
cmp
lods
mov
sub
push
sub
xor
cmp
jp
movsl
and
je
scas
cli
lahf
sti
cmp
cmp
mov
push
xor
inc
inc
push
add
into
and
data16
sbb
jecxz
pop
cmpsb
or
pop
cmp
xor
shrl
fdivr
repz
ljmp
dec
or
jb
push
pop
cli
leave
lahf
test
ja
sbb
call
shlb
xor
fs
jl
mov
popa
jae
pop
mov
inc
ret
cmp
clc
jg
sbb
inc
sarl
stos
adc
in
and
shr
std
sub
das
add
je
sub
mov
pusha
and
xor
out
jo
out
pop
jle
in
pop
call
sbb
or
xor
movl
jg
sbb
mov
pop
jg
mov
xchg
add
cld
pushf
sub
fimuls
out
in
jmp
cld
sti
pop
testb
jecxz
inc
int
insb
mov
jae
lds
cmp
dec
leave
fisttpl
mov
in
xchg
pop
and
ja
in
inc
dec
adcl
sub
scas
inc
cwtl
fnstsw
pop
push
add
add
inc
sbb
inc
popa
mov
add
cmpl
sub
cmp
push
ss
insb
test
dec
adc
int3
enter
lret
test
fcoms
mov
push
add
imul
arpl
std
addr16
pushf
jnp
xchg
sahf
cmp
and
jecxz
pop
cmp
inc
hlt
repnz
lcall
push
add
inc
xor
icebp
loope
xor
cli
pop
fdivrs
xchg
sub
mov
insl
out
scas
add
mov
mov
xchg
xor
roll
jne
shlb
sub
mov
cli
imul
adc
popf
orl
xor
sahf
and
insb
pop
ds
lahf
fists
dec
or
and
cmpsb
jns
push
mov
ja
pop
sub
or
in
enter
dec
xor
ficompl
sbb
std
cmc
fnsave
xchg
outsl
and
sub
push
inc
push
dec
inc
call
cld
repz
ljmp
iret
movlps
lds
std
or
jge
pop
stc
pushf
movsb
xor
sub
jecxz
ss
pop
sahf
adc
out
rclb
xor
cli
mov
sbb
filds
mov
rorl
dec
fsub
aad
jns
and
xchg
loopne
mov
dec
sbb
mov
or
xchg
pop
xchg
test
aas
and
add
jbe
gs
mov
push
repz
fdivr
mov
repnz
mov
sub
mov
scas
or
mov
cmpsl
mov
xchg
push
sbb
sub
dec
adc
adc
fadds
add
pushf
shll
mov
mov
fsubrl
and
and
sub
sbb
or
les
test
sbb
adc
dec
inc
inc
mov
mov
or
int
mov
out
push
dec
mov
mov
test
cmpsb
sbb
fisttpl
movsb
inc
sar
cld
inc
repnz
dec
xchg
in
rcrb
mov
icebp
pop
pop
sbb
movsl
imul
fists
cmc
pop
push
xchg
sub
mov
stos
push
dec
int3
fnsave
or
sub
push
dec
mov
leave
jge
pusha
psubsw
bound
fstpt
mov
cli
fsubs
or
shlb
scas
das
rolb
ljmp
ret
sub
int3
sarb
rorl
pop
pop
adc
ss
cmp
mov
push
stc
outsl
dec
std
lods
dec
push
sti
lret
das
clc
scas
addl
jb
movsb
inc
fwait
das
lret
ljmp
mov
jns
aam
repz
dec
call
in
outsl
popa
cmp
xorl
xchg
or
xchg
shl
mov
cld
sbb
imulb
adc
and
push
inc
jp
and
mov
pop
push
mov
fcmovb
loope
sub
xchg
cs
xor
pop
add
xor
je
xor
pop
cmp
and
pop
mov
fisubrs
fucomi
xlat
shlb
sub
jmp
adc
mov
popf
rorb
cld
cmp
and
xchg
cmp
aad
test
or
movsb
xchg
cs
data16
idivb
jmp
push
fsubs
int3
out
add
gs
inc
push
aaa
inc
add
fs
ds
adc
lahf
push
out
fbld
jmp
sub
loopne
and
repz
outsb
in
and
aad
jl
sub
inc
push
lahf
and
and
loop
cmp
cmp
clc
push
push
sahf
pop
jl
mov
sbb
xor
jge
int3
mov
and
pop
std
subb
push
pop
xchg
enter
dec
push
lods
leave
stos
jmp
adc
jmp
fidivl
push
into
or
out
outsl
xchg
mov
add
mov
cs
adc
jno
push
pop
lds
out
int
movq
or
fcmovnb
in
cs
sub
jns
cmp
jg
jp
or
mov
pop
rorl
jo
mov
rclb
sub
out
sbb
loope
jo
fimull
mov
clc
fs
cld
movsb
and
in
cwtl
mov
cmpsl
lahf
mov
mov
test
mov
inc
call
cs
out
movsb
xchg
mov
sbb
aam
adc
shlb
mov
jae
mov
insb
xchg
push
je
sbb
test
jmp
insb
shlb
xchg
movsb
and
mov
imul
mov
test
jmp
xchg
nop
xchg
xchg
in
dec
gs
xor
adc
mov
dec
xchg
je
xchg
sbb
outsl
sbb
mov
jmp
jno
or
fsubrs
pushf
incl
xchg
test
push
fs
daa
ja
push
cmpsl
out
dec
ljmp
ds
xor
mov
xor
push
icebp
shll
jo
adc
jl
rorb
mov
xor
pop
sbb
pop
and
inc
pushf
jmp
add
roll
movsl
push
or
lock
mov
mov
nop
pop
neg
add
lods
add
aas
and
ret
insl
jle
fisttpll
jns
push
dec
jmp
jg
movl
mov
push
dec
test
test
sub
int3
pop
sub
mov
adc
incl
je
xchg
sub
xchg
cmp
pusha
adc
bound
sti
addr16
in
jmp
sbb
mov
push
add
arpl
stos
inc
outsb
sub
jmp
jo
call
test
xor
ljmp
adcl
andb
adc
fwait
sbb
pop
mov
inc
aam
mov
stc
dec
fcoml
test
popa
jno
xor
in
fucomp
mov
cltd
sarl
adc
push
lret
loope
mov
push
sti
xchg
dec
xor
xor
mov
out
push
loope
cmp
fwait
out
insl
dec
fldt
mov
int
push
mov
movsl
cld
add
fistpll
outsl
inc
roll
push
inc
sub
cmp
cwtl
jae
jmp
je
lret
dec
int3
sbb
add
mov
outsl
jg
sti
fidivl
scas
mov
cmpsl
test
or
mov
mov
ss
or
or
leave
xchg
add
push
in
inc
pop
sub
mov
int
leave
mov
jle
fst
push
sbb
mov
es
outsl
ret
lds
xor
sbb
call
ret
ds
cwtl
loop
test
push
in
daa
add
mov
jmp
fcompl
stos
mov
add
inc
je
sub
push
popf
hlt
or
jb
mov
mov
arpl
das
mov
lods
inc
stos
xlat
dec
loope
pusha
cmp
add
push
fs
and
iret
and
test
cli
mov
lret
or
and
sbb
lea
aam
into
xor
sbb
jnp
cmp
imul
push
push
cli
inc
sbb
inc
xchg
xchg
mov
loopne
out
sbb
ds
jmp
js
lea
sbb
fsts
js
mov
jb
jnp
movsl
push
les
push
mov
into
xchg
jb
push
or
dec
movsl
mov
push
push
push
mov
jo
std
dec
or
fdivr
loope
add
test
ret
daa
stos
icebp
rcl
jle
jg
cmp
ret
sbb
fsubs
pop
push
das
daa
add
jae
imul
lret
movsl
aaa
scas
xchg
cli
adc
stos
rcl
shll
push
or
insl
jae
mov
fs
aas
incb
ret
loope
and
mov
mov
add
ljmp
jmp
sub
cmpsl
mov
push
dec
xchg
mov
lea
lahf
cmp
pop
mov
xlat
mov
mov
sbb
pusha
adc
xor
movb
in
sbb
fs
mov
push
ret
push
mov
sub
hlt
in
cmp
lret
sarl
jle
mov
sub
and
das
mov
adc
insl
sub
inc
mov
mov
jmp
popf
mov
lahf
xchg
push
xor
gs
clts
pop
mov
dec
mov
int3
cmpsl
jne
cmp
shl
pop
mov
rorl
cwtl
fsub
or
cmp
lock
je
mov
sub
sub
movsl
movsl
lock
lret
push
mov
mov
push
insl
repnz
jg
jl
stc
test
pop
mov
icebp
in
or
sub
xchg
mov
mov
fwait
mov
dec
xchg
pop
pop
aas
dec
lret
xchg
loope
out
sbb
inc
sub
push
ds
cmp
cli
rol
and
pop
adc
je
mov
mov
in
aaa
push
cs
mov
stc
hlt
cmp
lock
fwait
or
jmp
in
adc
out
cmp
popf
enter
push
sbb
or
pop
fstps
mov
inc
mov
shrb
hlt
fsubrs
dec
pop
xor
jg
leave
icebp
mov
xchg
mov
sub
dec
or
aas
jp
dec
loop
dec
and
adc
dec
test
mov
push
add
sbb
lods
dec
lock
or
inc
ss
jb
repz
cmpsb
subb
repnz
iret
push
popa
add
not
mov
mov
bound
mov
jge
pop
push
aaa
sbb
imul
call
popf
shr
addb
xor
adc
popf
and
xor
loopne
mov
mov
adc
test
sub
add
push
jl
popa
jg
fistps
mov
adc
jge
mov
in
or
mov
inc
add
fcoml
mov
push
or
mov
mov
pop
inc
ret
mov
in
aam
out
pop
mov
xor
sub
xchg
add
mov
jge
jbe
sarb
sbb
ja
pop
xor
and
add
pop
ret
inc
mov
rol
jle
jmp
mov
mov
dec
pusha
js
pop
insb
ja
test
adc
mov
and
pushf
xor
test
pop
mov
and
ds
mov
idivl
addr16
xor
out
mov
das
xlat
loopne
or
enter
lcall
ret
xchg
repnz
lahf
cmpsl
in
sub
or
push
inc
jmp
sbb
in
mov
mov
push
in
stc
cmp
pushf
jbe
in
inc
ja
and
and
jns
icebp
xor
adcb
mov
and
sbb
and
aas
shrl
inc
ja
adc
arpl
out
sbb
ss
inc
ljmp
outsl
mov
shll
lea
iret
cmp
incb
push
cmc
outsb
cmp
sbb
mov
into
push
and
push
sub
xchg
fcomp
fstl
test
push
or
xchg
js
add
cmp
and
sbb
jb
inc
notb
xor
popf
std
xor
ret
movsb
xchg
arpl
call
push
or
and
fnstenv
call
xorl
xchg
and
mov
loope
rcrl
jg
int3
mov
rorb
sub
adc
mov
mov
mov
ret
aam
mull
arpl
lret
fcompl
filds
xor
cmpsb
fmull
xor
imul
xor
movsl
add
mov
shll
shrl
es
clc
sbbb
push
outsl
out
lcall
loope
int
stos
jge
dec
pushf
into
mov
cmp
and
iret
int3
insb
adc
arpl
cmc
insb
jecxz
repnz
ss
mov
aad
mov
fs
bnd
mov
jae
int3
dec
aas
dec
push
pop
xchg
sub
icebp
add
pop
pusha
and
rcr
popa
test
pop
fstps
push
fldl
rol
jne
dec
mov
cltd
push
into
xor
fs
loope
or
aam
push
stos
andl
xor
pushf
mov
ret
sbb
mov
addb
cmpl
or
xchg
xchg
sub
cli
xor
sbb
jl,pn
jp
sub
push
jg
je
fcoml
sub
out
adc
aas
add
xor
push
push
jl
mov
lods
in
xchg
call
stc
vlddqu
pop
lock
inc
fisttpl
pop
cmp
fdivrl
adc
cltd
inc
push
hlt
xor
or
lcall
sti
jne
sbb
std
or
pop
sbbb
jg
std
ljmp
cmpsl
jae
jno
jp
and
aad
mov
pop
je
push
nop
adc
in
jo
xchg
lods
imul
jo
fimull
jno
jle
cs
clc
push
jge
or
aaa
jns
out
call
in
xchg
test
cmp
int
int
lds
pop
lahf
outsl
adc
stc
mov
outsb
out
xchg
mov
stos
jmp
xchg
sub
imull
in
filds
insb
push
pop
das
dec
into
enter
fs
js
test
aaa
dec
aad
rcr
scas
fstl
arpl
or
cmp
imull
ljmp
mov
cmpsl
pop
in
jne
sub
xchg
and
ja
xchg
sub
xchg
mov
mov
sbb
jle
push
out
fsubs
inc
orl
jnp
fsubrs
leave
test
shlb
leave
ds
lods
loopne
ss
andb
mov
aas
test
test
xchg
cmp
shlb
mov
jl
es
fistl
adc
sbb
mov
pop
imul
cld
pop
call
test
movsl
xchg
dec
push
ret
adc
xchg
xchg
jne
inc
sbb
mov
leave
lret
cwtl
jg
movb
mov
mov
leave
ja
jle
cmp
fs
ds
sbb
insl
ljmp
dec
ret
repz
push
dec
loop
xchg
in
mov
movsb
pop
jo
adc
xchg
inc
jae
testl
and
push
arpl
ljmp
mov
or
popf
test
dec
aas
movsl
dec
jo
and
popf
insl
in
int3
dec
jmp
mov
add
xchg
sbb
cs
out
cli
inc
cwtl
leave
sub
xlat
inc
lods
sbb
in
loop
xor
jb
mov
cmp
lret
out
xchg
ja
icebp
outsb
fsubl
in
pop
rep
pop
mov
inc
hlt
notb
ficoml
sti
push
outsb
shll
sub
push
jbe
clc
push
sti
hlt
imul
lcall
fdecstp
rolb
cmpb
or
xchg
mov
inc
es
ror
cmc
sbb
mov
pop
mov
mov
jno
lea
xor
lret
xchg
sub
inc
or
push
cmp
repnz
push
mov
iret
clts
inc
inc
sahf
jmp
shl
pop
jne
inc
mov
and
nop
mov
ret
mov
push
pusha
dec
iret
xchg
pop
test
aam
xchg
add
call
cmpsb
negl
xor
jns
add
test
les
xchg
push
into
sub
clc
insl
pop
loopne
pushf
int
mov
mov
adc
dec
flds
jns
jae
outsl
bound
mov
pop
jecxz
mov
into
scas
xor
and
adc
jecxz
jmp
jp
bound
xorb
inc
inc
inc
push
lods
in
stc
lock
push
call
jmp
mov
mov
dec
imul
lretw
psubusw
enter
push
arpl
push
subl
pusha
jl
adc
xchg
jmp
pop
xor
rep
loope
lods
adc
nop
xchg
cs
push
out
mov
scas
fmuls
int
inc
pop
incl
xorb
push
movb
stos
add
popa
or
fwait
int3
mov
cs
insb
adc
sahf
mov
cmp
mov
dec
cmpsl
int3
imul
and
inc
je
lret
mov
xchg
and
pop
sub
lahf
arpl
sbb
cmpsl
lahf
aas
add
cmpsb
adc
pop
js
arpl
ja
and
cmp
sarb
adc
repz
mov
int
pushf
push
xor
lret
bound
mov
mov
mov
dec
push
out
test
xchg
cmp
fistl
xor
push
cs
cmp
stos
stos
lods
adc
insl
rol
in
andl
add
sub
out
nop
enter
adc
push
mov
mov
fwait
xchg
stos
add
add
sub
mov
out
xchg
cmpb
pop
sub
aam
outsb
hlt
adc
push
outsl
or
mov
jns
or
mov
push
cmp
mov
lss
imul
mov
test
sbb
andb
shlb
mov
arpl
jne
dec
inc
sahf
pop
fnsetpm(287
dec
push
xor
gs
aam
push
shrd
sub
bound
aaa
fcmovne
xchg
fidivl
pushl
mov
and
fdivrl
fs
mov
mov
jno
dec
clc
jnp
mov
mull
mov
in
adc
sbbl
out
mov
loop
or
cmpsl
jno
test
mov
out
sbb
outsb
dec
sub
mov
inc
imul
inc
data16
fsubr
inc
std
inc
and
xchg
add
xor
movsb
mov
and
leave
daa
dec
test
mov
repnz
aam
sahf
ljmp
sbb
xor
or
sbb
iret
mov
lds
xor
pop
push
jb
imull
ja
cli
or
sbb
pushf
or
inc
stos
out
xchg
daa
mov
mov
jnp
xor
xorl
shl
scas
imul
and
gs
pop
dec
rcl
mov
mov
fsubr
loop
jge
sub
mov
pop
and
xchg
jecxz
xchg
dec
pushf
push
dec
arpl
cmp
mov
movsl
xchg
ds
xchg
movb
push
mov
sbb
mov
sbb
push
mov
pop
jns
or
fimuls
fucomp
push
pop
lahf
cmp
sti
jecxz
xlat
lret
cmpsb
iret
in
lahf
sahf
push
add
std
divb
adc
les
out
movsb
sub
sbb
out
add
cmpl
rol
push
ret
imul
stos
shll
jnp
imul
dec
cmc
push
adc
mov
xchg
xchg
xchg
cmpsb
in
push
out
enter
push
aas
mov
pop
jl
clc
sti
pop
lahf
int3
xchg
mov
sbb
cwtl
add
insl
aas
nop
shl
cmpsl
dec
fs
insb
movsl
ds
pop
jge
sahf
inc
movsb
add
dec
sub
and
ja
sbb
xchg
arpl
inc
adc
cmp
sarl
mov
jle
shlb
test
or
pop
xor
push
movsb
mov
xchg
sbb
lahf
stc
xchg
rol
push
xchg
fidivrs
sbb
in
adc
push
stc
push
or
fsubr
out
int3
repnz
and
test
push
mov
pop
add
xor
mov
jge
mov
push
sbb
jbe
test
in
jle
mov
fst
dec
jne
aam
cmpsb
mov
cmpsb
mov
xchg
cwtl
sbbl
es
xchg
lock
shrb
outsl
dec
mov
inc
cld
inc
ds
and
scas
sbb
inc
popa
or
pop
jmp
cmp
je
cwtl
stc
mov
xchg
pop
cmp
jnp
mov
gs
mov
sbb
push
add
sub
es
jno
jle
sbb
outsl
add
out
test
data16
mov
jecxz
daa
mov
popf
adc
jbe
sub
sbb
pop
inc
pusha
mov
jnp
idivl
aas
xchg
jl
xorb
sub
cmpsb
add
sbb
aaa
jl
cmc
aam
jbe
xchg
and
mov
scas
cmp
fwait
out
jg
add
aad
imul
out
lret
add
rcrl
and
mov
sub
popa
dec
loope
jae
pop
cmpsb
hlt
mov
pop
cmc
mov
stc
daa
pop
and
pop
clc
sub
imul
mov
inc
in
add
ds
out
test
add
mov
pop
cmp
addb
in
jae
xlat
pusha
test
xchg
xchg
idiv
movsl
and
repz
repz
pop
stos
roll
pop
cmp
ja
push
push
fistpll
insb
and
adc
adc
push
jle,pt
out
add
cmc
jb
pusha
pop
mov
shl
push
cmp
aas
pop
cld
and
add
sbb
popf
mov
cmp
adc
shll
jno
or
iret
cli
fs
push
mov
xchg
adc
in
xchg
flds
jne
mov
push
fistps
jmp
pop
push
mov
dec
stos
jae
mov
repz
into
das
xor
mov
cmp
jle
stos
inc
dec
imul
imul
aam
clc
ret
clc
sti
insl
or
stos
int
loop
mov
sbb
jp
inc
mov
dec
aad
or
data16
mov
or
fmuls
or
out
push
push
sub
pusha
cmp
popa
imul
fimull
or
or
and
dec
ss
jno
loope
popa
mov
addr16
out
shrl
leave
dec
sbb
mov
cs
gs
mov
inc
sub
cmpl
inc
push
mov
and
push
jge
leave
int
or
xchg
push
imul
dec
mov
and
pop
pop
imul
lock
lods
xor
push
test
xor
into
xchg
mov
movsb
dec
decb
mov
mov
bound
fnstenv
divb
iret
shlb
dec
cli
sub
fildll
xchg
add
js
fadd
ja
push
pop
sub
lock
xor
pop
int
fildll
lds
in
jmp
push
sbb
insb
shlb
and
mul
mov
imulb
xchg
test
inc
aaa
and
popa
cli
dec
pop
mov
mov
jmp
inc
xor
rcrl
fs
mov
add
enter
imul
inc
pop
fisubl
add
inc
cli
push
lods
dec
cmp
rorb
push
mov
or
and
mov
push
lds
insl
adc
and
mov
inc
clc
pop
sahf
call
dec
add
call
data16
sbb
out
jle
sub
dec
mov
movsb
mov
adc
in
inc
fldl
ret
inc
scas
in
movb
pop
insl
movsb
xor
adcl
mov
sbb
icebp
add
loopne
dec
pushfw
push
into
mov
jo
ficomps
pop
fdivs
enter
jae
inc
aas
pop
lret
cwtl
xor
inc
mov
fsub
divb
lcall
cmpb
frstor
xchg
pushf
push
jne
push
xchg
mov
dec
dec
mov
adc
push
out
loope
dec
repz
push
fisttps
stc
jge
data16
dec
loopne
loop
bnd
mov
inc
popf
or
lds
xchg
xor
jbe
pushf
lea
mov
pusha
and
add
out
imul
into
push
je
bound
cmp
aas
mov
scas
arpl
pop
int
add
or
dec
les
cmp
iret
repz
mov
jge
jae
out
dec
jmp
scas
add
test
and
outsl
inc
sbb
or
imul
out
loop
mov
lcall
pop
pop
pushf
fdivl
aam
test
test
mov
sbb
icebp
les
neg
daa
xor
fwait
cmpl
and
mov
jmp
jno
jp
repz
dec
pop
jg
lret
push
mov
mov
cmp
mov
or
into
xlat
adc
and
jno
mov
pop
mov
mov
scas
jmp
mov
mov
xchg
jo
pop
lods
loop,pn
mov
js
sbb
push
inc
iret
cli
cmp
mov
mov
jns
imul
xchg
jne
or
cld
mov
mov
stos
mov
test
out
push
and
popa
sbb
lods
pop
push
xor
in
inc
ljmp
xor
ret
in
imul
sarl
xchg
inc
int
push
lods
repnz
xchg
lahf
inc
addl
sarl
or
inc
dec
dec
fisubl
iret
call
rcr
shr
leave
loop
inc
mov
arpl
dec
xchg
inc
fbstp
dec
in
and
call
bnd
aad
add
mov
test
cmp
dec
inc
pop
ja
repnz
dec
daa
dec
cmpsl
fdivs
cmp
xor
sti
or
pop
xchg
mov
mov
sti
cmp
or
push
ret
xchg
fidivs
push
or
mov
push
ret
push
repz
lods
insb
nop
cs
xchg
adc
inc
ss
push
fs
popa
adcl
aas
out
sbb
lea
and
sub
syscall
sub
pop
scas
es
or
loopne
idivb
inc
enter
jne
sbb
test
pop
xchg
lock
fstpl
int
xlat
popf
lods
rorb
sarb
pop
lahf
add
aam
xor
cwtl
adc
inc
adc
sbbl
sti
mov
out
sub
test
clc
loope
fistpll
add
cmp
add
or
mov
sbb
enter
mov
jb
jo
xor
and
jg
dec
or
push
gs
pop
rcrl
xor
gs
and
sbb
imul
mov
fcompl
xor
iret
xor
sarl
push
and
sbb
jp
sbb
fstpt
out
fld
push
cmp
iret
sub
push
clc
idivb
popf
mov
push
into
xor
imull
inc
and
gs
dec
fldenv
and
fidivrs
test
fstpt
pop
jnp
fstl
pop
pop
cmovo
les
aad
out
push
lret
aad
jae
in
add
adc
xchg
cmp
out
cwtl
ret
ljmp
sahf
pop
call
cmpsb
jnp
or
fimull
mov
jl
add
cmp
adc
inc
fsubrl
sub
cmp
movsbl
insl
ret
push
cli
add
and
mov
adc
jecxz
ret
je
shl
cmp
addb
jne
ja
sbb
call
sub
pop
sbb
test
push
jne
lea
sbb
loopne
cmp
js
cli
mov
and
dec
rcll
sar
xchg
dec
cmpsb
push
out
imul
sbb
lea
arpl
int3
cmp
ja
je
rclb
jo
loopne
imul
push
ljmp
xchg
sub
mov
addr16
sbb
popa
js
xor
or
lock
aad
outsb
xor
push
pop
movsb
xor
test
hlt
lret
dec
lods
mov
shrb
add
ret
cmp
rorb
or
daa
xchg
lahf
pop
ljmp
shll
ja
inc
data16
xchg
mov
or
ja
mov
sbb
and
xchg
out
outsb
push
or
out
fistps
mov
jne
movsb
insb
nop
lahf
outsb
pop
push
clc
jg
mov
pop
sbb
std
cmp
jns
aam
dec
js
cs
stc
or
adc
aam
iret
jo
sbb
adc
dec
loope
arpl
ljmp
inc
adc
pop
dec
jb
dec
imul
xor
push
subl
pop
inc
pop
jmp
in
stos
mov
jb
loop
dec
push
les
in
insb
nop
pop
jl
fimull
jle
stos
aam
ret
cmp
xor
cmp
jge
cmp
je
testb
mov
cmp
add
aad
jae
jge
rcrb
aam
es
out
jg
sbbb
adc
mov
dec
pop
jnp
push
push
repnz
mov
loop
jbe
mov
xchg
hlt
push
jb,pn
into
int
sbb
ss
enter
cli
mov
mov
insl
jge
negl
in
mov
lret
incb
in
leave
cwtl
test
fmul
scas
mov
xchg
jle
loope
jae
cmp
add
jl
bound
loope
cmpl
test
out
xlat
in
and
xor
adcl
and
or
icebp
loope
cli
dec
pop
insb
out
icebp
call
daa
adc
or
sti
mov
mov
aas
lock
lods
stc
mov
jbe
xchg
add
aas
imul
inc
xchg
pop
pop
sub
adc
lret
jae
je
and
and
mov
repnz
mov
pavgw
cmpsb
loopne
rorl
repz
add
adc
cmp
std
pop
cltd
into
push
jns
sbb
test
call
loope
repz
xrelease
enter
test
jp
dec
andl
pop
les
push
pop
mov
js
int
out
sbb
lahf
pop
ja
sub
ds
stos
ljmp
push
jbe
into
inc
mov
dec
test
hlt
imull
mov
jmp
mov
cmpsb
lret
lret
inc
dec
and
ror
jl
xchg
popf
adc
xchg
inc
cmp
fidivl
add
cmpsl
mov
pop
cmp
inc
mov
ret
add
xchg
fcmovne
pushf
loope
sbb
mov
out
push
pop
enter
int3
dec
xchg
inc
jmp
xchg
loop
jecxz
or
push
sub
push
xchg
jmp
jne
cmp
loopne
jl
mov
out
popa
shrb
xchg
pop
cmp
sub
aam
adc
ret
sbb
mov
rcrb
mov
test
xor
inc
push
loope
xor
cltd
call
das
cmp
repz
cmpl
jg
sub
dec
loopne
into
leave
or
ja
push
shl
inc
mov
mov
add
adcl
jmp
push
cld
xchg
rcrl
fbld
sub
inc
pusha
jnp
pop
push
jle
adcb
jg
jp
imul
arpl
icebp
dec
popa
push
sbb
cmp
xchg
xor
aad
mov
inc
mov
push
js
ret
and
mov
popa
xor
or
repnz
and
cld
adc
sub
sub
fucomi
mov
sbb
adc
xor
lret
mov
loope
and
push
rcll
and
sbb
or
xor
out
fisttpl
mov
add
leave
jmpw
mov
test
shrb
push
sub
mov
loop
xor
aam
jp
adc
lods
cwtl
out
daa
push
lods
out
jno
dec
jns
xchg
push
movsl
scas
fxch
in
mov
inc
cmc
cli
test
fsub
sub
inc
fisubl
stos
test
pop
shlb
ljmp
scas
ljmp
sbb
push
sbb
imul
jge
adc
xchg
scas
test
imul
inc
enter
lcall
enter
xchg
xchg
lock
fstl
pushf
xchg
jno
arpl
add
ret
and
mov
rcll
push
fstp
dec
fs
adc
mov
loop
xchg
ret
sbb
push
cmp
stos
or
push
jnp
aam
mov
push
pop
fmull
add
push
subl
mov
add
stc
movsl
cmp
ja
adc
mov
ret
inc
mov
pop
dec
and
fbstp
test
dec
pop
jecxz
inc
add
and
adc
popf
test
jae
test
popa
pop
mov
pusha
movsl
stc
dec
hlt
outsl
in
pop
push
int3
xor
cmc
mov
sbb
cwtl
cmp
call
jl
out
dec
test
cmpsb
and
mov
jns
mov
out
mov
insb
cli
push
cs
xchg
mov
jp
repnz
mov
imull
xchg
mov
mov
xlat
xor
mov
mov
xchg
jge
imul
stos
ss
aad
jns
sub
rcr
adc
mov
xor
sub
mov
imul
and
push
lods
aaa
out
sti
and
pop
fildll
adc
pop
sub
mov
adc
fists
adc
add
jne
jns
or
cmp
jo
cmp
test
mov
pop
mov
fdivrp
mov
pop
mov
cmp
xchg
aad
inc
xor
arpl
jmp
xor
fildl
pop
test
and
pop
cld
fimuls
loopne
xchg
test
aam
dec
clc
push
jmp
stos
in
in
enter
out
stos
sub
push
js
pop
mov
cmp
repnz
lcall
leave
pop
cmpsb
dec
xor
daa
jbe
sub
add
and
jo
or
dec
mov
mov
bound
sahf
sbb
xor
sub
or
add
aam
adc
call
xchg
dec
cwtl
push
sub
fwait
cmp
or
jge
dec
inc
repz
sub
icebp
add
inc
sbb
dec
into
inc
aas
out
in
cmp
andb
jmp
sub
and
or
scas
inc
mov
in
data16
je
aaa
xor
gs
cmp
inc
add
push
lcall
aam
xchg
xchg
iret
cld
test
aad
int
adc
push
iret
mov
mul
sbb
add
cltd
xchg
mov
xchg
lds
in
lods
cmp
mov
cmp
sbb
in
sbb
fsubr
hlt
in
outsl
icebp
arpl
loopne
xor
jle
in
jnp
dec
cmp
inc
mov
add
mov
dec
push
mov
add
xlat
lock
and
stos
jg
scas
addr16
popa
jno
cmpsl
xchg
push
inc
adc
xchg
outsb
mov
xor
in
mov
mov
dec
sbb
sti
jbe
je
inc
pop
cmp
sub
pop
icebp
push
nop
xchg
jle
cmp
jbe
sbb
mov
inc
das
inc
addr16
adc
cmp
sub
ret
sub
addr16
hlt
js
ljmp
cmp
jns
stos
out
lret
fdiv
aad
cmc
pop
xchg
ss
mov
mov
cs
and
fiadds
inc
adc
test
jnp
rcrb
pop
dec
pop
popf
aad
ja
push
push
data16
popf
pop
jb
inc
nop
fadds
imul
test
inc
adc
and
lret
stos
imul
push
adc
in
jo
xorb
int3
dec
mov
or
mov
cmp
ds
stos
sti
sbb
scas
inc
pop
test
jnp
sub
icebp
mov
add
loop
lret
loopne
inc
addr16
lods
cld
std
add
push
cmp
push
das
jbe
std
mov
imul
fs
loopne
in
jmp
daa
mov
imul
mov
rcrl
inc
mov
arpl
andb
cmp
dec
fwait
outsb
jg
adc
std
into
rol
jle
insl
out
push
xchg
jge
sub
popa
es
mov
adc
jge
mov
mov
test
in
rcl
shrl
mov
add
stos
add
mov
stc
fidivl
sarb
pop
ljmp
loop
lahf
clc
loopne
pop
jl
pop
and
fwait
aam
das
test
sub
fwait
stos
clc
shl
or
outsw
gs
push
cmpsl
lret
popa
lods
mov
pop
popf
mov
add
jle
mov
xchg
das
aam
mov
xchg
in
pop
fidivrl
pop
sbb
mull
lods
lea
cmp
fsubrs
xchg
adc
mov
test
add
xchg
out
call
in
enter
and
sub
add
dec
lcall
ror
in
and
add
mov
das
or
repnz
pop
ret
into
xor
rol
inc
popf
jno
sar
test
jle
cmpsl
mov
dec
sub
icebp
arpl
adc
cmp
jmp
dec
add
ss
int
fstps
xchg
loope
or
aad
cli
pop
sbb
jge
scas
in
xor
rclb
stos
pop
inc
or
nop
inc
mull
data16
cmp
and
sbb
or
inc
adc
enter
into
es
mov
jge
sub
cmp
rclb
mov
out
xor
sbb
pop
rorl
xlat
cltd
sbb
sbb
adc
xchg
sahf
mov
fisubl
decl
stc
pop
ret
jmp
ret
out
sbb
mov
mov
xchg
lret
xchg
iret
xor
jle
xchg
cmp
mov
aam
lods
into
movsl
xor
mov
pop
je
mov
loop
add
jns
adc
fwait
xchg
orl
outsl
and
leave
push
aam
arpl
popa
cmc
xchg
xlat
repnz
movsb
sub
jp
testl
cmpsb
pop
sbbl
mov
icebp
and
sub
jp
filds
pop
sbb
adc
push
dec
mov
in
cmp
mov
add
pop
insl
ficoms
lods
ds
mov
aad
ss
hlt
dec
and
inc
stos
dec
push
jns
mov
shl
test
cmp
aas
lret
les
testb
out
inc
out
xor
inc
jnp
mov
pushf
push
mov
popf
cmp
push
push
pop
fldt
gs
sub
loope
sahf
lcall
lret
pop
lods
rol
aaa
cltd
pusha
mov
push
test
adc
sarb
jmp
pop
sub
mov
mov
lods
int
mov
and
jno
cmpsb
sub
js
ds
cwtl
imul
sub
add
mov
mov
mov
daa
jns
bound
push
pop
jnp
into
xor
pop
rclb
notl
sub
fisttpl
fs
xchg
pop
or
fdivrl
popf
in
psubsb
cltd
dec
mov
push
xchg
adc
cmp
mov
sti
sbb
movsb
cwtl
cmp
hlt
add
xchg
jae
jmp
shrl
jo
inc
xchg
imul
mov
movsl
jae
push
push
aam
mov
mov
push
and
mov
sbb
mov
sbb
or
inc
cmpsb
bound
sahf
sub
gs
mov
fdivrl
rol
cmpsl
stos
insb
pusha
pop
mov
cmc
jnp
aad
fstpl
add
push
addr16
daa
test
out
loop
jae
push
cld
lock
rclb
lods
lahf
adc
lret
jg
pop
jb
icebp
mov
inc
adc
push
sbbl
push
cs
out
int
fs
xor
shl
adc
clc
add
dec
inc
insl
pushf
add
and
lret
pop
out
xor
sti
cmp
dec
jle
out
xchg
push
pop
iret
sti
push
in
jb
dec
adc
cwtl
outsb
mov
neg
dec
jle
mov
xor
mov
sub
xlat
cmp
pop
sub
or
xchg
ret
jmp
mov
aas
xor
pop
insb
cmp
inc
push
xchg
vcvtdq2ps
aas
mov
ret
loope
dec
push
mov
test
cmp
jne
in
adcl
scas
iret
sub
sahf
int
xchg
imul
data16
pushf
add
bound
jae
popl
mov
decl
cmp
xchg
cltd
pop
jno
outsl
dec
sahf
cli
jp
cmp
mov
mov
hlt
xchg
in
jne
push
mov
lods
sbb
push
stc
cmpsl
int3
push
repnz
pop
sub
mov
ljmp
mov
outsb
mov
idivl
mov
add
les
add
sub
outsb
addr16
add
pushf
bound
pop
jp
adc
aaa
test
dec
aas
je
into
ds
imul
stc
mov
mov
shll
outsl
inc
sbb
popa
sub
jp
fdivs
and
lcall
sub
cs
add
lahf
in
into
dec
dec
push
sbb
stos
dec
jnp
lock
fnstenv
ja
pop
mov
cwtl
pop
jae
push
test
es
out
out
shl
adc
lret
stc
adc
mov
adc
in
mov
push
std
sbb
std
push
xorl
call
push
imul
lods
cmpsl
push
add
mov
sub
test
mov
cmc
sbb
stc
shlb
cmp
pop
add
mov
push
push
mov
mov
fstp
lahf
ret
scas
mov
jae
cmp
xchg
sbbb
adc
out
sub
mov
imul
add
xor
or
xchg
std
fs
cld
mov
fldl
sbb
mov
sbb
rclb
pusha
or
lea
ret
repz
xor
mov
aam
lods
push
jne
je
fstps
inc
push
clc
not
inc
jnp
sub
add
lods
sbb
pop
arpl
call
push
xor
fstpt
leave
enter
je
mov
out
jge
insb
stos
adc
push
cld
adc
je
fisubrs
push
xor
sbb
dec
xorl
mov
aaa
enter
pop
imul
sub
push
mov
xchg
mov
data16
jne
adc
daa
pop
dec
ss
sbb
adc
add
outsb
loopne
aaa
popf
inc
xchg
mov
push
movsb
cmpsb
mov
lock
test
dec
or
dec
les
es
in
mov
xor
cmp
and
jnp
addb
and
outsl
lea
dec
scas
dec
push
fmull
sbb
andl
icebp
cmpsb
cmp
mov
rcr
jns
imul
cmpsb
paddsb
sbb
fcmovnb
test
mov
xlat
imul
add
scas
add
cmpb
mov
adc
insl
adc
pop
lahf
push
test
lret
jecxz
mov
fsubs
scas
outsl
scas
dec
pop
aaa
dec
or
pop
lock
xor
mov
and
lret
inc
and
xorb
imul
cli
std
in
mov
mov
imul
jp
popf
pop
out
lods
sbbl
leave
lret
cwtl
movsb
insl
jle
or
adc
aaa
fs
data16
mov
stos
push
pop
jmp
movsb
push
imul
push
xor
cltd
lret
cmp
enter
rol
popa
lret
xor
adc
lret
and
insl
fcomps
xorl
ljmp
sub
scas
xchg
pusha
adc
insl
sarl
mov
xor
fildl
je
xorl
notb
data16
cwtl
pop
jnp
les
fs
mov
dec
inc
mov
mov
xor
xchg
jmp
lret
lcall
and
es
mov
icebp
or
pusha
xor
xor
insb
mov
push
negl
fnstenv
iret
lods
movsl
stc
xor
xor
lods
lds
sbb
in
fmull
fcomp
xor
mov
and
add
ret
ljmp
sbb
xchg
enter
clc
iret
es
add
enter
fwait
cld
jno
iret
shr
pusha
arpl
in
icebp
pop
out
pop
call
in
les
lods
roll
das
pop
push
lock
cwtl
mov
jo
push
mov
nop
jnp
bound
test
imul
pop
rcrb
sub
mov
in
and
fisubs
ret
cmpsl
aas
xchg
adc
cmp
jp
ljmp
cmp
je
sub
aam
aas
xor
add
out
mov
clc
jp
out
pop
sub
dec
popf
mov
pop
out
fadds
repz
pop
adc
nop
sbb
mov
stc
adc
mov
mov
stos
inc
icebp
pop
fisubrs
adc
daa
lcall
xchg
push
pop
pop
decl
add
mov
pusha
hlt
mov
mov
mov
xchg
fs
je
inc
inc
int
or
mov
pop
sub
xchg
sub
ret
ja
xchg
int3
ffreep
and
cli
popf
sarb
or
jecxz
shlb
and
es
scas
and
dec
xchg
gs
xchg
push
aas
insb
pop
ljmp
jne
in
fucomp
mov
fwait
cmp
in
and
pop
push
jmp
lea
test
pop
fprem
pop
gs
rcrl
into
loopne
mov
add
mov
jecxz
jo
mov
or
mov
jno
xor
xor
pusha
push
sbb
pop
mov
push
stos
bound
leave
or
and
movhps
or
or
out
addb
mov
fisttpll
rcrl
fsts
push
aas
ret
mov
test
or
jmp
in
andb
movsl
pop
jp
pop
mov
pop
and
pop
rcl
and
mov
repnz
mov
mov
sbb
jge
and
cmc
fldcw
push
xorl
repnz
add
sub
repz
xchg
mov
stos
xchg
sbb
jmp
dec
sub
ror
loopne
out
imul
mov
or
adc
xor
test
inc
push
inc
call
and
out
mov
adc
fistps
mov
inc
xchg
jge
adc
les
and
pop
shll
mov
sub
jp
mov
push
dec
cwtl
cltd
jne
or
cmpsl
inc
xchg
mov
push
xchg
popa
and
lcall
adc
movsl
inc
and
outsb
gs
mov
fidivrs
lock
popf
add
dec
rol
cwtl
lock
in
dec
push
aad
mov
lahf
or
pop
enter
aas
dec
sub
in
pop
imul
les
into
jno
and
cmp
ffree
andl
cmp
sub
and
and
mov
sbbb
scas
xor
jmp
jle
fsts
leave
cmp
jnp
lock
jp
cmp
pop
or
aad
mov
out
xchg
roll
aaa
sbb
push
mov
rcl
jb
ret
fistl
shrb
scas
mov
sahf
push
push
shlb
out
add
call
int3
cmpsl
xchg
setb
adc
pop
cs
aaa
out
add
xchg
add
jmp
fstpl
lds
sbb
cmp
lcall
cli
in
lea
mov
sbb
divb
popa
mov
aaa
dec
push
jmp
rolb
repz
sub
cmp
jge
mov
mov
push
inc
xor
daa
scas
fstps
inc
push
push
adc
ficoms
dec
dec
jge
dec
mov
inc
leave
out
stos
iret
mov
test
inc
call
stc
mov
in
insl
xchg
pop
lock
cmpsl
nop
xchg
divl
adc
ffreep
loopne
lods
stc
int
cs
jae
sub
pop
xchg
xorb
enter
cmc
pop
lds
lahf
inc
dec
popa
xor
inc
mov
cwtl
pop
jl
push
je
gs
ret
and
push
insb
fstps
mov
sbb
mov
pushw
sbb
xlat
ret
mov
loopne
mov
inc
push
lea
mov
push
cmp
xchg
dec
int
in
pop
mov
or
out
imul
sbb
sub
lret
cmp
fucom
fadd
es
movb
mov
ret
dec
or
jne
mov
shll
mov
pop
daa
flds
jge
pop
loope
cmp
stc
jno
sub
push
mul
add
pop
dec
fwait
scas
shlb
push
std
jb
xlat
push
mov
lock
add
orl
icebp
push
std
sbb
mov
or
mov
jecxz
cltd
pop
sbb
cmp
sbb
pop
jp
push
mov
inc
jne
xor
lock
out
sbb
jb
fdivs
mov
cwtl
enter
add
lcall
repz
add
in
out
ficoml
cwtl
mov
jb
sbb
incl
xor
and
cmpsb
imul
pop
pusha
lret
sub
pop
xchg
fwait
adc
aas
pop
add
jle
dec
ja
jle
pop
mov
gs
adc
push
in
dec
leave
cmp
add
insb
or
sbb
das
ja
rolb
scas
add
dec
mov
fidivs
aad
jle
clc
xchg
lea
sub
or
push
push
jl
es
or
add
mov
mov
xchg
aaa
ror
jbe
addr16
sub
adc
xchg
lret
rol
fistl
inc
das
les
xor
pop
int
add
ja
and
jecxz
inc
in
loope
xchg
xor
add
int3
fimull
das
scas
fs
sub
push
jmp
dec
ljmp
das
push
push
std
xchg
loope
push
adc
mov
test
les
test
rorb
outsl
mov
add
aad
xchg
cli
push
outsl
jne
xchg
repnz
adc
inc
jg
ss
jl
pushl
pop
inc
cld
add
inc
cmpsb
fyl2xp1
stos
jns
sbb
js
fildll
mov
std
bound
inc
sbbl
lcall
orb
and
cmp
dec
cmp
scas
sti
xchg
gs
inc
and
xlat
mov
lock
imul
int3
ss
ret
cmp
es
mov
loop
jecxz
daa
dec
or
scas
movsl
xor
cld
mov
std
cld
and
in
mov
xchg
inc
jg
pusha
or
jo
xchg
xchg
out
jle
lds
jb
mov
mov
mov
dec
mov
fwait
xor
imul
cmp
pop
push
dec
cmp
add
dec
adc
cmc
xchg
loope
mov
sub
mov
mulb
ret
mov
dec
inc
sub
test
test
test
inc
xor
pop
jg
cmp
mov
loopne
xchg
mov
push
mov
iret
idivl
daa
jns
iret
cld
arpl
push
fucomip
dec
fwait
mov
xor
out
ss
pop
mov
sub
hlt
inc
fwait
hlt
jl
mov
and
xor
int
popa
jne
out
lods
adc
loop
and
setge
xor
imul
add
stc
adc
and
xor
dec
dec
fwait
push
mov
cmp
mov
stos
mov
jmp
push
sahf
xchg
push
sti
pop
hlt
mov
incb
inc
jmp
lcall
mov
cmpb
test
roll
dec
sbb
leave
or
outsl
cmp
shr
cs
das
jmp
pop
xchg
pop
mov
popa
das
push
jl
mov
and
xlat
dec
adc
test
int
dec
pop
xor
outsb
xor
pop
mov
loop
call
into
and
arpl
and
popl
cmp
sub
shlb
pop
ds
push
lret
jo
jb
leave
ss
shr
imul
iret
inc
sub
test
int
sti
arpl
push
jne
lahf
mov
xchg
mov
mov
std
mov
or
call
cmp
lods
icebp
popf
je
xor
dec
in
sub
pop
cmp
call
sub
inc
push
mov
sbbb
sub
xchg
add
mov
xor
das
mov
inc
pushf
popf
cmpsb
lret
in
lret
push
adc
insl
fcomps
mov
repz
push
insl
addr16
cmp
inc
cmp
mov
push
cmp
sbb
mov
mov
popf
cmp
xchg
inc
push
and
les
repnz
jns
int3
scas
lods
pop
mov
imul
nop
test
aaa
call
rol
cmp
xor
and
adc
mov
ret
in
lret
sub
inc
inc
jb
jo
dec
jl
sub
or
and
outsl
cmpsb
int
rclb
xchg
mov
scas
or
and
fadd
mov
arpl
jne
cmp
mov
lea
pop
je
adc
jecxz
cmp
mov
cwtl
mov
jb
fwait
push
xchg
xor
cmpsb
dec
or
push
mov
xlat
outsl
psllq
jbe
ret
push
pusha
cs
out
adc
das
inc
les
push
das
in
mov
jle
pop
cmp
jae
mov
dec
mov
xlat
scas
arpl
jp
sub
or
dec
fldcw
or
xor
pop
or
jb
xchg
mov
jg
jns
movsb
xchg
sbb
sahf
mov
mov
push
stos
and
jecxz
fs
jle
out
loope
pop
xchg
pop
sbb
mov
out
lods
into
cmp
jo
das
push
ds
lea
mov
sub
xchg
les
or
mov
or
enter
xlat
in
stos
pop
xor
add
cli
popa
icebp
push
xchg
xor
mov
add
aas
fidivrl
mov
inc
push
shll
dec
lds
into
dec
cld
cmp
scas
cwtl
fwait
ret
sbbb
inc
mov
jno
and
adc
pop
int
mov
cltd
xlat
mov
and
leave
push
inc
push
popa
inc
add
loope
int
pop
call
or
or
andb
push
in
scas
cwtl
cmp
mov
shr
push
cmc
adc
mov
into
iret
and
shrl
bound
loope
je
and
and
subb
jp
or
push
add
fdivs
mov
cmp
daa
jae
push
jge
sbb
or
jl
fcomps
and
ret
sbb
in
addr16
and
leave
notb
bound
fldt
repz
push
call
or
xchg
sub
add
lds
mov
out
xchg
out
xor
lods
sub
push
sub
fnsave
sub
mov
enter
lahf
into
or
pop
pop
mov
sti
mov
enter
icebp
mov
push
sub
push
push
int
dec
rorl
pop
push
xorb
scas
inc
cmc
jmp
outsb
sbb
or
inc
lods
or
sahf
mov
and
outsl
push
sbb
lock
xchg
and
mov
iret
pop
lahf
sub
xchg
xor
push
fwait
xor
rcl
xor
and
lods
ret
mov
sahf
sub
hlt
cmp
repnz
jns
out
imul
test
rorb
scas
mov
adc
pop
icebp
imul
or
push
test
sbb
aam
stos
pop
shlb
test
mov
jae
ljmp
xchg
insb
cmp
or
or
lret
lea
clc
adc
lods
pusha
push
xchg
lea
mov
inc
sub
mov
xor
shll
xchg
es
mov
add
xorb
daa
mov
jecxz
aam
fsubrs
xor
dec
cltd
mov
movsl
idiv
jne
push
sarb
das
repz
inc
or
cmp
leave
out
inc
push
mov
into
stc
adc
iret
roll
mov
inc
popf
mov
mov
hlt
or
jmp
in
cmp
addb
in
dec
mov
xlat
pushf
xchg
decb
add
and
push
push
test
dec
cmp
fdivrl
xor
dec
int3
inc
push
and
jne
les
jmp
ss
push
sbb
sub
add
lahf
test
xchg
loopne
push
xor
bnd
sahf
sub
adc
pop
xor
cmpsl
jno
loop
sbb
mov
dec
mov
add
sbb
push
dec
dec
out
jl
mov
outsb
bound
push
xor
std
imul
movsl
or
dec
xchg
push
mov
mov
movsl
movsb
bound
in
sbb
sub
lcall
pop
sbb
in
mov
mov
fdivl
mov
sbb
mov
xchg
dec
hlt
pop
push
int3
and
cmp
popa
add
movsl
inc
mov
xor
push
and
movsl
sbbb
pop
lcall
shll
hlt
jno
or
mov
jbe
and
jns
lret
adcl
inc
cwtl
mov
mov
mov
fisubs
mov
pop
cwtl
cli
pop
dec
and
shrb
mov
ds
sbb
shll
jg
xor
sub
mov
shl
cmp
jne
stos
out
repnz
stos
movsl
add
cmpsl
outsl
jo
jbe
cmp
add
aaa
aam
pop
pop
leave
jnp
and
scas
jecxz
push
fmul
mov
aas
add
pop
movsb
in
and
pop
jmp
in
fnstcw
popa
scas
pushf
jb
xchg
sub
outsl
inc
jno
jae
enter
mov
sub
mov
incb
and
mov
adc
hlt
or
mov
gs
dec
leave
sbb
jle
and
dec
rcr
stos
jle
or
xor
adc
aas
dec
call
adc
ds
and
lods
inc
add
inc
test
mov
adc
ja
pop
cmp
sbb
push
cmp
jg
enter
mov
enter
xor
aas
push
neg
and
outsl
inc
aaa
aam
dec
aas
out
das
mov
fidivrs
xchg
push
mov
mov
xchg
aam
dec
xchg
add
push
jmp
in
sbb
int
inc
and
inc
mov
inc
inc
scas
cwtl
lods
pushf
push
add
sbb
ror
std
cld
mov
lds
stos
aam
push
roll
mov
dec
push
push
cmpl
std
repnz
sub
repnz
inc
mov
pop
lahf
sub
xchg
mov
xlat
inc
inc
or
adc
push
push
cltd
mov
jns
inc
dec
push
adc
push
bound
mov
or
loop
cwtl
scas
hlt
xor
adc
mov
adc
jg
pop
add
iret
or
pop
inc
lahf
inc
pop
mov
fdivs
or
mov
jbe
dec
adc
ffreep
mov
xor
mov
test
daa
xor
and
xchg
cmp
es
jnp
and
jbe
mov
ret
out
mov
xchg
stos
jecxz
or
inc
dec
adc
xor
rcrl
lds
bound
out
in
mov
hlt
or
pop
frstor
jae
push
lret
sbb
and
dec
mov
xlat
push
popf
xchg
jne
dec
repz
gs
and
push
xor
xchg
and
mov
pop
out
lock
xchg
fmull
popa
push
data16
cmpsl
dec
mov
inc
mov
cmp
cmc
adc
jns
shrb
push
mov
aad
mov
inc
xchg
repnz
push
push
xor
cltd
push
mov
jp
sahf
movsb
pop
push
adc
out
sub
or
mov
ror
xorb
jnp
inc
mov
sbb
insb
loop
mov
test
hlt
fs
xchg
pusha
inc
push
adcl
in
xchg
dec
jle
sahf
adc
sub
inc
es
or
js
jmp
mov
pop
xor
pop
ljmp
push
jb
and
mov
pop
lcall
pop
stc
in
data16
mov
inc
cmp
push
adc
mov
insb
cmpl
ljmp
mov
add
and
sbb
push
in
lret
add
xchg
out
pop
das
sbb
add
pop
mov
gs
or
jns
jb
jae
add
mov
pop
cmp
call
jg
bound
sbb
mov
pop
imul
xor
cli
outsb
popf
inc
dec
rclb
sbb
and
inc
fs
bound
push
sub
dec
movsl
sarb
mov
add
xlat
add
or
lahf
mov
push
pop
into
push
push
ljmp
lahf
push
popf
xor
and
int3
sbb
push
fs
or
xchg
cmp
xor
fidivrs
push
jle
inc
loop
cmpsl
jbe
add
pop
testl
add
adc
sbb
lret
aad
push
cs
inc
mov
out
adc
hlt
js
stc
dec
rolb
sbb
inc
push
inc
xchg
in
mov
outsl
addb
daa
test
insb
popa
xor
xor
mulb
fcoml
pop
das
sbb
in
add
and
cmpsb
mov
ds
jg
call
aaa
or
jb
and
ds
faddl
mov
cmc
jmp
ss
pop
cmp
lods
adc
outsl
sarb
je
mov
or
popa
and
in
test
andb
outsl
and
fcmovb
inc
arpl
dec
sub
outsb
jae
push
jg
insl
pop
scas
shrb
inc
mov
mov
mov
xchg
gs
popa
outsl
int3
mov
xchg
rol
push
jecxz
int3
cli
mov
dec
addb
sub
mov
fstp
out
adc
push
in
inc
xor
jne
add
imul
fadd
adc
jge
push
lret
pusha
in
das
pop
outsb
cwtl
push
cli
fisttpl
mov
xorl
xor
out
mov
adc
lret
mov
cmp
out
in
and
jae
cmp
jns
push
stos
xchg
push
mov
dec
cmp
fiaddl
inc
shll
sbb
je
adc
add
sub
out
test
push
push
add
outsl
and
push
daa
lods
inc
mov
jo
cltd
mov
xor
fistpl
inc
aam
push
jbe
test
lcall
movb
in
mov
push
addb
pop
xor
fcmovnb
sarb
xor
or
pop
lea
jmp
cmp
sahf
aad
xor
out
dec
adc
cmpsb
repz
rcl
mov
outsb
in
imul
imul
rorb
push
fs
cs
mov
inc
clc
int
or
divl
cmp
out
fucomip
cmpsb
dec
fldl
inc
inc
dec
fsubrs
repz
xchg
push
movsb
xchg
xchg
repnz
mov
pop
in
inc
test
jae
or
cltd
popa
lods
popa
imul
xor
fnsave
call
dec
fsts
andl
pop
pushf
sub
lret
lret
outsl
pop
add
fdiv
dec
xor
scas
fisubl
dec
out
das
xor
and
es
jne
imul
aas
dec
inc
test
or
imul
shll
test
cmp
sti
mov
cli
pop
dec
or
das
movzbl
dec
fldl
jnp
xor
ss
xor
dec
stos
push
mov
nop
scas
and
mov
dec
jo
outsb
xor
mov
filds
and
mov
dec
xor
xor
inc
jo
dec
adc
pushf
add
aam
jb
outsl
xlat
stc
push
pop
cmp
insl
push
pop
jge
mov
sbb
das
push
test
and
push
or
cmc
stos
xchg
push
addr16
rolb
jne
scas
xchg
fildl
sahf
push
out
cltd
adc
mov
test
lret
sub
cmp
pop
dec
mov
fstp
adc
add
lret
xchg
mov
addr16
cli
insb
add
fsubp
pop
add
jecxz
inc
into
repnz
call
xchg
push
aaa
xor
push
pop
sbb
ret
jp
mov
fucomi
jle
sub
pop
xor
inc
in
pop
pop
push
add
pop
jo
jb
aad
mov
push
cmp
and
lret
lret
sub
sub
push
inc
jno
sub
xchg
and
push
cmp
fadds
cmp
inc
xchg
fwait
pop
push
add
icebp
dec
push
or
sahf
mov
xor
ficomps
cmp
xchg
and
hlt
adc
repnz
aam
stc
insl
lods
cmp
mov
sbb
ljmp
jb
scas
lock
mov
mov
stos
sbb
or
out
in
enter
das
sbb
jle
and
push
jge
mov
lds
subl
jns
pop
loop
call
rorl
js
mov
leave
adcb
xor
push
mov
call
lahf
mov
je
fnstsw
inc
loopne
mov
mov
adc
bound
xchg
inc
loope
mov
xor
push
dec
aas
mov
or
mov
pop
test
xor
xchg
mov
ss
push
and
sbb
out
lret
inc
sub
adc
inc
cmpsl
ret
popa
call
shlb
xchg
sub
ficomps
mov
jl
movsl
ss
mov
cmp
xor
xlat
xlat
out
sahf
in
icebp
aam
mov
push
aad
mov
pop
mov
mov
setge
pop
inc
add
shlb
hlt
enter
or
and
sub
mov
fstl
scas
insl
sub
leave
fidivrl
mov
dec
std
pop
mov
jns
sub
jb
mov
push
loopne
lds
cmp
jb
in
push
add
stos
jle
mov
out
or
xor
cmp
jo
test
adc
dec
xchg
rorb
mov
test
xor
pop
mov
iret
sub
scas
loope
pop
xor
cwtl
xor
mov
adc
jno
ret
add
ds
or
jne
xor
lret
xor
pop
pop
sub
jge
sbb
jl
mov
cs
xor
fisttps
dec
pushf
xchg
push
fisubrl
lret
mov
ret
mov
sar
xchg
loop
push
fsubrl
sub
sbb
in
xchg
adc
sub
mov
js
mov
pop
add
and
sbb
lock
or
push
add
mov
xchg
xchg
insl
lea
sub
loope
stos
fisttpl
add
loop
dec
xor
in
iret
leave
jbe
jo
pop
jne
push
mov
xchg
mov
ds
dec
ret
stc
push
ds
jl
pop
clc
pop
test
mov
mov
lcall
popa
mov
mov
adc
add
jne
sbb
lcall
push
into
sbb
aaa
cltd
pop
mov
jmp
jnp
mov
data16
sbb
out
andl
fmuls
test
push
xor
es
scas
dec
mov
aad
dec
cmpl
push
adc
stos
pop
leave
mov
ficomps
pop
jl
fwait
js
call
out
dec
dec
push
roll
out
pop
and
divl
pop
xchg
dec
mov
push
mov
in
addr16
xchg
test
cwtl
jb
addl
mov
mov
cmp
mov
and
inc
and
std
mov
out
mov
mov
int3
les
pop
lods
push
stc
mov
and
shll
aas
adcl
cwtl
push
push
test
les
cmovno
lret
sbb
data16
mov
add
in
sbb
sbb
iret
pmullw
xor
stc
sub
mov
pop
cltd
cmc
or
and
mov
inc
outsl
xchg
jo
ficompl
movsb
cmp
cmp
inc
push
std
lcall
cmp
stos
cmp
and
frstor
push
xor
sbb
daa
std
jno
pop
and
inc
repz
jecxz
xchg
pop
fsubrs
jmp
lds
push
pop
inc
lea
mov
es
lret
adc
or
mov
fcmovnu
enter
push
sar
or
xor
xchg
in
xchg
and
inc
xor
or
add
jnp
sar
loopne
sbb
les
sub
test
xchg
out
cmpsb
lret
add
xchg
aam
call
int3
push
sarb
aad
lods
jno
scas
xchg
std
out
mov
sub
inc
orb
or
mov
repnz
xor
cmp
push
test
jbe
js
push
imul
lret
pusha
adc
lods
sub
popa
fisttps
dec
inc
jne
jmp
xchg
dec
movsb
and
int
dec
sbb
test
xchg
test
or
jb
jns
cmp
add
sub
nop
adc
inc
je
and
mov
dec
shl
lea
mov
pop
push
pause
es
es
sar
fdivr
aas
pop
bound
mov
push
imul
add
mov
icebp
xchg
jns
adc
mov
popa
loop
int3
ret
jmp
imul
stos
mov
in
ljmp
pop
stos
and
push
jae
mov
jge
es
in
rol
push
sub
pop
push
jp
dec
js
fcomps
inc
xchg
test
mov
repnz
nop
mov
andb
inc
dec
rorb
lock
movsl
mov
je
sbb
outsl
imull
jno
jle
push
fsubs
lahf
push
shrl
jge
gs
or
sahf
inc
les
pop
in
mov
dec
xchg
and
movb
sbb
mov
fildl
jno
lcall
inc
xchg
cmp
shlb
outsb
inc
adc
xor
iret
je
jge
insb
xor
push
movsb
inc
xchg
ds
mov
jno
in
lea
and
ja
inc
or
scas
jmp
aaa
push
sub
test
lods
sub
out
out
stos
sbb
push
call
movsb
xor
inc
add
ss
push
test
push
popf
mov
fs
imul
mov
mov
in
shll
enter
jae
inc
imul
mov
add
push
imul
imul
push
cld
xor
xchg
or
test
jne
repz
xor
shl
push
inc
lret
popa
fsubrl
fcompl
jg
mov
stc
into
jge
daa
aam
aad
push
xchg
mov
xlat
nop
jne
jle
les
mov
femms
ret
xchg
dec
jb
out
xchg
jp
dec
out
xchg
cmc
sbb
sub
imul
inc
hlt
scas
aad
or
lods
jne
lret
inc
mov
xor
dec
push
stos
add
xor
repz
bound
hlt
xor
and
sub
testl
stos
fsts
and
pop
adc
jg
pop
or
sub
iret
data16
icebp
imul
inc
loop
lods
mov
mov
xor
cmp
xor
jge
int3
mov
push
pop
iret
pop
aaa
int
inc
xor
xchg
mov
fsubrp
in
scas
xadd
shll
jmp
adc
fdivs
add
popa
scas
push
ffreep
movsl
xor
sarb
xor
jne
mov
jle
xchg
cld
out
inc
fwait
pop
jbe
mov
jne
adc
insl
push
fldcw
dec
les
loopne
mov
push
pusha
add
movsb
or
enter
xor
notb
sub
test
xchg
adc
loopne
inc
xchg
aam
negl
inc
pop
mov
dec
sub
xchg
mov
xlat
push
jecxz
jae
jno
cwtl
imull
sbb
test
jl
adc
pushf
xchg
xchg
add
sub
pop
inc
aad
add
scas
dec
xchg
sub
xor
inc
out
cmpsb
repz
in
mov
push
sbb
sbb
mov
jb
mov
pop
lea
xchg
std
jle
jecxz
loope
mov
out
test
add
popa
dec
and
mov
mov
sbb
out
push
sub
dec
out
mov
icebp
jbe
add
lret
pop
lods
in
jo
dec
jo
mov
loopne
mov
adc
push
push
xor
fcomps
xlat
lret
js
je
push
pusha
xor
scas
and
in
sub
gs
lret
mov
cmp
lret
shr
inc
scas
mov
adc
push
inc
leave
icebp
outsl
push
adc
jnp
test
lds
jae
mov
negl
jne
dec
test
inc
sbb
aas
mov
adc
sub
pop
dec
popa
ljmp
lods
mov
sti
pop
push
sbb
popa
cltd
divb
sbb
sub
icebp
insb
push
gs
inc
and
sbb
xor
cmp
adc
sub
andb
sti
jl
pushf
mov
lods
xchg
sub
cmpsl
push
and
jae
jbe
inc
lret
sbb
add
or
in
mov
inc
cmp
push
aas
adc
sbb
sub
jo
aas
rcl
push
leave
mov
cmp
hlt
sbb
push
jmp
sbb
stos
scas
or
mov
enter
push
mov
std
scas
and
mov
cmc
or
pop
inc
or
dec
push
push
xchg
out
pushf
aas
out
lahf
js
negl
push
pop
lret
in
inc
fwait
jo
sahf
mov
adc
jno
inc
dec
aam
or
outsb
xor
xchg
adc
jl
pusha
scas
push
leave
jns
sbb
adc
in
xchg
inc
mov
repz
sbbl
int3
stos
lods
in
push
movsl
scas
cmp
movsl
cmp
test
push
mov
mov
in
push
arpl
insl
fcomi
pop
mov
lea
jb
in
mov
mov
add
adc
ss
inc
movsl
xchg
test
dec
and
testl
aaa
xor
jb
mov
dec
adc
inc
div
fcomp
aas
adc
mov
and
xchg
mov
faddl
stos
std
sbb
or
enter
fisubrl
test
hlt
cmp
sub
or
jp
mov
jnp
mov
push
aas
push
jge
ret
fldt
mov
sbb
rorl
stos
je
and
mov
xchg
jge
test
push
xchg
push
mov
or
sub
lret
scas
ret
shrl
push
inc
pop
pushf
mov
ret
sbb
sbb
and
int3
sbb
lods
call
mov
into
mov
js
ljmp
ret
icebp
popa
and
push
mov
movsb
es
lcall
int3
ret
add
shl
inc
and
cmp
adc
mov
sbb
push
arpl
mov
and
insb
mov
fisubl
mov
js
fmull
xor
pop
rcr
adc
inc
ds
push
sub
inc
popf
test
jle
popa
sbb
mov
lret
enter
xor
cmp
lds
mov
fnstcw
test
fistpll
sbb
xchg
loop
cltd
call
and
mov
pop
jle
mov
mov
add
jg
inc
lret
mov
push
sub
mov
sbb
fisubs
jle
cmpsl
jnp
scas
lret
fcmovb
or
jb
shll
in
fdivrl
fwait
cmp
test
pop
shll
bnd
fwait
jg
xlat
call
rcr
aam
jg
test
lcall
scas
shl
dec
inc
imul
into
push
stos
fistpl
xor
icebp
xor
std
and
or
lcall
and
rolb
and
and
pop
mov
outsb
pop
push
jle
mov
stos
or
cmpsl
cmp
or
scas
sub
cli
or
pop
cmpsb
adc
sbbl
mov
int
pop
cmp
cmp
and
icebp
adc
xor
out
jp
pop
rol
mov
push
pop
loop
pop
pushf
fimuls
mov
push
adc
inc
shrl
mov
in
lds
aas
bound
pop
mov
and
in
arpl
movsl
sbbl
lods
jl
outsb
sub
push
loopne
pop
aaa
jg
test
fs
fs
jno
xor
pop
xlat
divl
or
xchg
inc
shrl
inc
lcall
ds
jle
pop
inc
adc
mov
mov
leave
push
ja
in
xor
ror
or
inc
mov
nop
lods
hlt
js,pn
push
xchg
push
inc
test
imul
pop
xor
sbb
aam
or
out
jae
flds
jl
push
sub
pop
pusha
fcmovbe
adc
push
xchg
stc
bound
fisubrs
mov
cs
shrl
addl
cmp
push
in
push
pop
xchg
or
push
imul
sub
sbb
xchg
cltd
insb
inc
mov
aas
test
xor
dec
stos
jp
push
mov
cmp
xchg
cmp
test
int
push
gs
rolb
shlb
mov
cmp
lods
int3
mov
xchg
sbb
mov
pop
sub
shll
fwait
mov
fs
sbb
sub
movsl
pop
imul
sub
nop
lds
xchg
lods
movsb
aaa
mov
data16
out
add
jns
dec
jmp
iret
push
mov
xor
lcall
jno
cltd
movsb
aad
add
xlat
mov
icebp
add
cmpsb
outsb
and
cmp
or
and
xchg
cwtl
mov
push
icebp
ds
sbb
fmuls
cmp
movsl
xlat
mov
sti
mov
or
nop
and
inc
dec
cmpsl
pushf
ljmp
xchg
rorl
jmp
push
out
cmp
xchg
cltd
sub
lret
sbb
lds
mov
mov
adc
insb
mov
jp
pop
xchg
inc
xor
sub
xor
ljmp
shrl
sarl
mov
xor
mov
inc
mov
sbb
jecxz
bound
lcall
test
sbb
jo
and
ret
add
push
test
iret
insb
xorb
xchg
cmp
and
stos
mov
pop
mov
arpl
testb
mov
sti
inc
push
inc
sbb
test
xchg
sub
loope
aad
cmp
or
stos
mov
pop
aam
sub
mov
jo
mov
cld
jb
add
out
pop
pop
mov
xchg
insb
xchg
mov
sub
rep
scas
addr16
mov
filds
dec
movsl
mov
repz
test
adcb
repz
pop
sbb
cmp
loopne
jb
add
mov
out
call
push
sbbl
inc
aaa
push
daa
in
nop
pushf
push
popf
int3
cmpsb
in
xchg
outsb
xchg
cmpsl
in
inc
xchg
andb
xlat
jns
cmp
mov
mov
testl
xchg
mov
clc
mov
dec
sbb
sbb
popa
sbb
cld
dec
or
insl
pushf
jae
movsb
sub
sbb
jp
repz
inc
in
xchg
das
sub
outsl
divb
bound
das
rol
pop
popf
pop
int
and
pop
cmp
es
cmpb
mov
push
jge
mov
push
out
imul
rclb
and
sbb
xchg
jb
aad
cli
lods
nop
je
outsl
fiadds
push
sbb
out
rep
mov
mov
jae
push
or
sub
mov
pop
jnp
in
aas
sub
pop
roll
xor
or
add
and
in
sub
jno
xor
lret
cs
hlt
jge
sub
out
insl
xchg
xor
int
sbb
inc
mov
jmp
sbb
mov
mov
fnstsw
imul
ret
pop
int
adc
sub
pop
mov
aad
or
ret
in
js
push
pop
fwait
sub
pop
pop
cmc
in
pop
sbbl
imul
pop
mov
lock
dec
cvtdq2ps
add
out
aad
das
mov
sub
jmp
popa
cmpsl
and
xchg
out
add
inc
inc
fbstp
ljmp
out
stos
adc
sub
dec
out
push
add
and
cmp
sbb
pusha
jnp
add
jmp
inc
mov
pushf
xor
lock
sbb
cwtl
out
push
mov
shl
sbb
sub
lret
mov
mov
mov
es
dec
mov
call
in
mov
test
sbb
sahf
lock
mov
mov
dec
jnp
sub
movsb
and
cmp
mov
and
xchg
bnd
mov
lock
mov
insb
sbb
dec
mov
repnz
cmp
icebp
popf
or
add
out
xchg
jno
mov
jo
adc
dec
or
lret
sahf
add
lea
push
jbe
out
mov
sbb
dec
ficompl
push
xchg
inc
lret
mov
cmp
dec
mov
and
adcb
push
fdivrp
aas
mov
cmpb
jne
insb
loopne
cltd
test
lock
mov
mov
stos
mov
fwait
xlat
jae
dec
add
test
xor
stc
out
sub
pop
pop
jle
mov
xchg
mov
dec
and
xor
sbb
mov
mov
push
adc
push
jle
mov
adcl
or
pop
push
cs
jl
push
add
subl
loopne
push
call
xchg
movsl
cmpsl
test
stos
mov
mov
dec
cmp
inc
or
sbb
ja
icebp
inc
pop
lahf
hlt
pop
dec
dec
arpl
adc
mov
fstpl
or
sbb
in
sub
mov
repz
adc
clc
sbb
xor
nop
mov
jl
jge
and
leave
or
sbb
jns
ror
cwtl
pop
push
jl
leave
mov
les
jmp
adc
daa
stos
test
in
lret
pop
lahf
jns
out
sbb
inc
clc
out
popf
cwtl
mov
cli
lds
mov
cmpsb
mov
jle
sbb
push
outsb
adc
pop
add
jnp
cld
xor
lds
sub
int3
pop
fwait
aad
aad
lods
mov
jmp
jne
jnp
cld
repnz
in
test
jo
sbb
mov
or
cltd
test
xor
cmp
ret
add
dec
push
mov
testl
test
xor
fwait
insl
in
mov
shlb
fstl
call
ja
adcb
jnp
inc
ret
repz
pop
fidivrl
mov
imul
into
add
push
add
add
shl
sbb
pop
dec
scas
bound
bnd
out
sbb
aad
rorl
out
or
push
xchg
inc
jg
dec
das
pop
in
cs
arpl
insb
sbb
movsb
es
repnz
push
and
inc
adc
and
jmp
mov
mov
std
stos
or
test
mov
xchg
call
pop
repz
aaa
inc
ja
outsl
fidivl
mov
inc
lahf
mov
xchg
movsl
rcr
icebp
out
int3
cmp
xorb
push
cld
jbe
push
mov
in
scas
shlb
hlt
ret
or
into
push
pop
in
inc
popa
adc
in
and
mov
sub
shll
jge
mov
test
inc
adc
dec
adc
insb
ss
mov
in
sbb
mov
pop
fcompl
and
pop
jnp
pop
ss
cmpsb
rclb
jno
sub
scas
dec
das
push
test
jb
or
js
inc
jnp
shll
test
inc
xor
cltd
fcmovu
iret
jb
push
mov
add
iret
ljmp
push
insl
jbe
clc
xchg
pop
popa
xchg
and
stos
pusha
inc
fsubs
shll
in
cmpsl
xchg
test
aaa
test
arpl
scas
ret
pop
sbb
fists
cmc
loop
test
pop
push
fmuls
xchg
adc
lds
fs
lcall
xlat
out
jns
and
out
lds
pop
stos
sub
mov
pop
je
les
ja
repnz
sbbl
adc
mov
mov
aad
and
enter
shl
push
mov
decl
cltd
inc
sar
fwait
hlt
inc
or
arpl
cmp
movsb
lret
dec
pop
test
adc
idivb
test
or
jns
sahf
ret
mov
lock
imul
inc
dec
jno
loopne
pop
mov
jp
jmp
pop
scas
enter
mov
dec
pop
push
or
in
daa
sbb
mov
jmp
pop
mov
pop
add
in
and
adc
ds
and
mov
gs
push
lcall
popl
xor
mov
adc
sbbl
sbb
loopne
jne
cli
ret
jne
xchg
jb,pt
add
pmulhw
jo
outsb
inc
push
adc
sti
mov
push
sub
dec
mov
outsl
cmp
jne
mov
or
out
ss
xchg
clc
pop
daa
ja
xor
mov
je
cld
jecxz
enter
xor
shll
arpl
add
adc
jne
scas
stos
les
mov
pusha
and
dec
insl
push
adc
imul
scas
aam
xchg
lret
add
add
icebp
icebp
adc
lcall
xor
or
hlt
test
lcall
shrb
dec
push
clc
sub
fnstenv
xor
sbb
ret
sbb
cwtl
clc
repnz
ja
or
mov
popa
icebp
push
jmp
cmp
aam
mov
dec
inc
push
adc
push
sbb
mov
add
sbbl
mov
push
sbb
adc
flds
dec
push
stos
ljmp
pusha
repz
jge
test
out
dec
and
jo
pop
sar
or
pushf
popf
pop
or
enter
ret
adc
sub
sbb
pushf
jns
sbb
into
push
daa
in
lgs
mov
mov
pop
dec
pop
push
mov
fdivl
push
mov
ss
outsl
push
das
repnz
mov
sub
stos
leave
jmp
stos
in
jbe
sub
jmp
cli
fscale
sbb
lcall
jns
xchg
lahf
inc
fimuls
loope
push
pop
int
lds
loopne
cmpsl
es
dec
ror
push
mov
ficoml
mov
int3
into
sbb
into
stos
or
and
xchg
sahf
inc
cmp
fwait
test
jecxz
aad
sub
fstl
adc
mov
out
lea
xchg
jo
push
sbb
pop
idivl
out
mov
mov
stc
pop
xor
xor
adc
mov
shlb
std
push
mov
mov
notb
out
popa
dec
xor
inc
inc
push
jne
jns
incl
scas
frstor
das
sbb
shrb
mov
stos
sbb
dec
in
shlb
mov
subb
fbstp
test
imul
ss
test
pop
pop
push
dec
add
jmp
push
sbb
movsb
lahf
and
out
mov
mov
call
pop
mov
repz
fiadds
loope
jmp
inc
pusha
push
mov
fcoml
mov
mov
jge
iret
dec
enter
sbb
sbb
add
jmp
pusha
cmp
fisttpll
inc
and
jns
xor
mov
add
pushf
sarl
into
sbb
cmpsl
mov
stos
mov
out
mov
xor
pop
cmpsb
cmp
shlb
xchg
out
mov
lds
mov
mov
xor
loopne
test
data16
pop
jns
add
mov
subb
cwtl
xor
cli
pop
gs
xchg
push
mov
fwait
dec
mov
cmp
arpl
push
in
and
fxch
jle
or
push
mov
jle
cmp
out
push
sub
popa
out
or
sub
jl
lock
adc
ret
lret
adc
mov
leave
push
js
push
and
cmpsb
dec
in
cmp
pop
adc
fimuls
scas
jnp
in
dec
inc
adc
arpl
jno
xor
rorb
mov
mov
ljmp
cmpsb
mov
es
negl
popf
inc
inc
and
pusha
or
xchg
ret
stc
adc
scas
inc
mov
sbb
into
cmpsl
addb
or
and
jecxz
pop
aas
mov
int
pop
fbstp
ja
mov
ja
outsb
out
push
cltd
mov
adc
das
dec
in
mov
pop
adc
and
add
movb
dec
mov
clc
in
shl
xchg
insb
pop
xchg
adc
jg
popa
mov
out
adcl
sub
int
enter
dec
in
xchg
mov
or
enter
rolb
add
popa
inc
xchg
rcrl
mov
inc
pop
lds
cs
pop
push
sub
xchg
cmc
lods
xor
xor
and
xchg
shrb
fs
or
int3
inc
mov
fisubrs
mov
pop
rorb
int3
push
adc
xorb
or
stos
mov
ss
ss
in
sar
push
fcomps
retw
or
lds
shll
int
test
pop
fdivs
dec
sete
mov
in
sub
jl
cmpsl
dec
inc
dec
out
out
rorb
dec
dec
jp
imul
sub
adc
and
in
imul
fwait
pop
int3
ds
pop
fiadds
fs
xchg
push
sub
cs
sub
orl
jae
into
ljmp
sub
xor
mov
pop
and
fistpll
stos
pop
sub
sahf
dec
hlt
fwait
jne
rcl
sbb
clc
mov
push
push
mov
outsl
nopl
add
add
inc
subl
mov
les
xor
cltd
mov
mov
cs
dec
cwtl
scas
es
jle
lahf
or
movsb
es
fsubrl
push
mov
mov
mov
xor
xchg
mov
dec
das
mov
pop
repz
insb
or
mov
cmpsb
mov
ficoms
and
hlt
dec
dec
xchg
faddp
test
imul
adc
mov
test
jbe
lret
jo
scas
adc
scas
cwtl
xor
lret
fwait
add
shufps
push
xor
mov
adc
jno
fistl
or
out
nop
je
rol
cltd
in
fisubrl
and
push
jo
pop
lcall
roll
out
iret
adc
inc
rorb
or
shr
int
inc
pop
cmp
xor
ret
and
push
sbb
pop
push
je
cmc
xchg
mov
test
xor
sub
xchg
shll
jb
stc
loop
enter
jp
cmpsb
insb
es
cmpsb
sbb
sub
mov
bound
popa
pop
outsl
call
stc
push
mov
xchg
mov
dec
rorb
test
xchg
pop
mov
cmc
cmpsb
xchg
pop
out
pop
fs
or
out
sub
int3
mov
loope
insl
dec
stos
and
or
pop
pushl
pop
je
ss
js
mov
xor
fnsave
lcall
rcr
mov
sub
pushf
or
mov
xchg
in
imul
pop
pop
cmc
lods
push
jg
lcall
jae
stc
xorb
cld
sub
xchg
jmp
stos
pop
fldenv
inc
push
jb
pusha
push
je
js
dec
dec
sahf
mov
push
mov
mov
adc
adc
add
or
push
roll
sti
nop
xor
imul
xchg
outsl
pop
sbb
or
add
add
sub
jmp
push
sbb
sub
out
js
loope
add
subb
cmp
mov
xchg
mov
mov
sbb
jnp
or
sbb
add
mov
mov
cld
stos
ret
sbb
sub
fwait
xchg
mov
mov
test
ret
mov
test
dec
int
jl
leave
mov
push
aaa
add
out
adc
test
jb
sbb
jmp
rcr
mov
cld
insl
jae
jnp
mov
clc
into
lds
or
and
repnz
imul
pop
repz
fs
enter
imul
cli
inc
sub
xchg
mov
mov
lods
stc
outsb
test
repnz
add
mov
xchg
call
push
push
stos
insb
dec
xor
mov
hlt
std
xchg
or
add
xchg
idivl
ret
cmp
stos
insl
stc
sbb
sbb
stos
pop
mov
gs
sub
ljmp
enter
stos
push
data16
sub
sahf
mov
push
mov
gs
mov
pop
and
mov
and
in
shlb
roll
pop
popa
aad
stos
out
push
dec
xor
rorb
repnz
js
inc
mov
inc
mov
shr
hlt
ret
push
and
pusha
into
stos
adc
js
mov
imulb
push
shrb
ret
inc
ud0
push
xchg
xchg
aam
sbb
imul
rcrb
pop
int3
cwtl
lcall
sub
shlb
test
scas
push
ja
enter
out
lret
add
xchg
lret
shrb
jo
push
sub
mov
mov
inc
mov
cmp
daa
lods
adc
dec
aas
add
cmpsb
idivb
inc
and
dec
testl
jbe
adc
sti
fists
lahf
rcrb
test
cli
jge
push
subb
imul
sub
testl
push
lock
jmp
lods
shl
xchg
jb
mov
xchg
push
and
pop
lock
add
inc
dec
xchg
jno
test
jecxz
in
pop
repz
fcoms
jno
mov
into
pop
mov
scas
mov
stos
in
mov
dec
xor
leave
fmul
inc
es
adc
mov
ljmp
jp
mov
adc
or
mov
inc
subb
mov
ja
cmp
sub
fdiv
mov
xchg
adc
sub
aam
shrb
mov
sub
test
push
push
mov
arpl
cmpsb
mov
call
pop
push
xor
int
mov
jns
inc
ljmp
dec
cmp
jle
data16
pop
jae
sti
test
jns
out
cmp
scas
sub
or
repz
fistl
jne
repnz
push
fs
sbb
jns
xlat
in
lds
jb
mov
and
mov
lret
xor
pop
mov
inc
cwtl
lahf
xchg
or
test
lds
xchg
mov
enterw
and
sahf
call
scas
stos
aaa
roll
xchg
push
jl
orb
mov
xchg
test
dec
mov
or
jmp
out
repz
or
mov
adc
loopne
std
pop
lds
mov
xor
inc
sub
dec
imul
ljmp
xchg
and
mov
inc
mov
pop
lret
fmull
popf
or
lods
movsb
mov
scas
cmc
jne
mov
cltd
pop
int3
adc
addr16
and
enter
mov
insl
in
aas
bound
shlb
jle
dec
cmp
notl
mov
aad
and
push
mov
pop
mov
or
sti
popf
add
jnp
bnd
push
movsl
mov
or
jbe
in
mov
fwait
mov
sub
mov
fs
std
not
xchg
dec
sbbb
and
cld
sub
inc
cwtl
xor
or
or
inc
std
mov
test
inc
gs
inc
adc
inc
ficoms
push
test
mov
pop
push
aad
gs
clc
loope
dec
and
lods
gs
and
lds
lcall
jno
or
subl
shrb
and
push
and
mov
mov
mov
cmpb
jg
popa
dec
xchg
lret
sbb
mov
mov
shll
jae
add
inc
xchg
test
sbb
jmp
pushl
leave
ss
aaa
xchg
loop
fisubrs
sbb
sbb
pushf
test
add
pop
add
xchg
lods
popf
cs
xor
add
imul
lods
sub
idivb
rol
xor
xchg
scas
js
in
adc
aam
jae
andl
shrb
xchg
lds
jecxz
mov
mov
or
lock
ss
daa
out
mov
jno
xor
addr16
mov
rorl
sub
mov
inc
das
push
cs
xor
inc
andb
jle
stos
ret
push
pop
pop
inc
insl
stc
scas
xor
int3
loope
pop
into
lret
loop
inc
cmp
push
js
iret
jge
sub
ret
jae
xor
push
inc
xchg
pusha
inc
dec
sbb
shrl
and
adc
fwait
icebp
insb
xchg
xchg
lods
pop
stos
loop
jnp
fcmovnb
or
negl
test
xor
push
aad
mov
adc
jo
cmp
jbe
sbb
pushf
out
lret
fistps
jns
in
addl
push
xor
pop
or
xchg
inc
fildl
and
sbb
cld
enter
mov
cltd
xchg
jl
in
jo
xor
sbb
mov
jae
aad
fmuls
outsb
xor
adc
imul
nop
cmp
inc
sub
ret
in
pop
dec
mov
movsl
sub
imul
andb
movsb
xlat
dec
sbb
inc
sahf
subl
mov
data16
or
jbe
or
jno
call
pop
cmpsb
in
stos
mov
js
into
mov
dec
jl
pop
data16
and
adc
ss
fwait
and
stc
in
insb
mov
das
test
mov
push
and
sub
jb
dec
ret
cld
sub
xor
xor
or
xorb
sub
jns
pop
pop
push
pop
fnstcw
stos
je
inc
test
xchg
gs
cli
sub
jno
sahf
sbb
pop
adc
push
pop
dec
leave
dec
rcrl
jp
add
dec
lea
and
fidivrl
cmp
mov
out
pop
pusha
out
pop
or
jns
pop
mov
iret
cs
mov
jne
jns
sbb
mov
jbe
movsb
into
cmp
mov
test
sub
mov
fsub
cli
mov
push
fwait
mov
imul
cmc
mov
leave
add
sub
pop
cmc
ret
or
cmp
push
inc
cmp
and
pop
insl
fiadds
stos
xchg
inc
lds
xor
fcomps
or
add
adc
movsl
insb
pop
jno
ds
pop
xchg
adc
pop
test
nop
cmpsl
inc
cmpsb
xchg
pop
mov
xor
cmpsb
xchg
jnp
and
push
enter
cmp
in
xor
fwait
stos
xchg
mov
movsb
pop
fs
enter
sbb
adc
mov
fwait
les
test
aad
mulb
test
mov
fwait
adc
xchg
int
push
xchg
subl
popf
dec
adc
cmc
push
inc
out
pop
inc
mov
adc
aad
push
sbb
ja
je
mov
pop
dec
pusha
sahf
or
out
jle
or
sbb
ja
xchg
xor
cmp
xor
or
or
mov
sub
stos
pop
mov
lods
mov
xlat
xchg
and
push
rcr
aaa
adc
div
dec
mov
xchg
bound
push
cmpsl
mov
es
outsl
mov
inc
pop
inc
imul
inc
mov
lret
mov
loope
or
mov
lahf
js
out
adc
jbe
loop
jecxz
mov
fcmove
mov
jae
loope
call
leave
into
into
add
xor
mov
dec
shl
out
loopne
imull
xor
fidivs
xchg
or
or
mov
mov
call
lock
sub
rorb
loopne
test
loope
inc
mov
add
sub
shl
popf
in
jb
mov
jno
push
jmp
push
jp
and
fstpl
setle
adc
fistl
mov
push
addr16
mov
es
sub
mov
and
in
and
adc
js
stos
cmp
mov
insb
add
dec
or
sbb
dec
pop
push
repnz
sbb
ds
cmp
jecxz
add
fs
inc
and
xchg
or
cmp
add
aad
xchg
fcomip
adc
fidivrl
xor
popa
cmpsl
mov
out
xor
stos
cs
movsb
sahf
pop
les
scas
ss
stos
in
lock
aas
jp
cmp
mov
cltd
pop
sbb
mov
aas
sbb
aad
in
xlat
inc
mov
cmpsl
aaa
xchg
add
mov
mov
cltd
or
mov
mov
cs
cmp
sti
jg
and
dec
pusha
pop
cmp
cmpl
int3
pop
jg
lock
ljmp
sbb
movl
jle
jae
cmp
mov
xor
andb
inc
or
popa
mov
mov
cmp
dec
jbe
cmp
or
pusha
iret
mov
jo
mov
mov
lcall
push
fldt
push
loop
mov
dec
pop
push
adc
adc
mov
inc
fstps
xchg
xchg
or
out
xor
or
iret
sbb
mov
popa
sbbb
xor
add
dec
inc
sbb
and
jae
add
scas
sub
pop
jo
fbstp
pop
pop
adc
or
stos
inc
notb
mov
movsb
shrb
or
cmpb
out
xchg
imul
stos
push
and
lret
jp
cmp
pop
adc
pop
push
scas
jns
imul
js
div
mov
pop
test
lcall
cmp
add
xchg
loop
sub
dec
push
lods
pop
subb
mov
rcl
pop
nop
out
sbb
out
jb
add
xchg
ds
or
nop
hlt
push
cmp
into
push
leave
xchg
pop
icebp
sbb
sbb
mov
xor
pop
pop
push
faddl
notb
mov
push
scas
jmp
inc
cmpsl
jae,pt
clc
add
mov
jmp
sub
adc
cwtl
mov
xchg
inc
aaa
add
add
xchg
push
test
dec
outsl
xlat
and
jmp
subb
mov
mov
fwait
push
xchg
xchg
and
movsb
push
inc
adc
adc
popf
mov
adc
sbb
sub
test
je
dec
aad
lock
push
arpl
enter
pop
iret
push
mov
fisubrs
mov
or
mov
fidivrl
in
or
leave
dec
jo
popa
ljmp
push
popf
or
loope
loop
pop
or
or
dec
out
std
aad
push
test
cld
dec
aaa
xor
push
xchg
sub
inc
mov
mov
daa
lock
fdivrl
loopne
jge,pn
bound
loope
push
imul
cld
or
jmp
jecxz
or
movsb
cmp
mov
xlat
imul
test
ret
mov
jmp
bound
insl
aaa
inc
fnstenv
pop
xchg
inc
popf
cmp
sbbb
sbb
pop
sbb
test
aam
mov
data16
dec
pushf
dec
rorl
mov
cmc
jge
push
daa
imul
stc
gs
les
insl
and
movsl
mov
out
sbb
je
scas
ret
jbe
dec
iret
call
mov
mov
lea
or
xor
js
aad
mov
adc
and
adc
cmpsb
fldenv
cwtl
nop
aas
out
mov
orb
pop
movsl
mov
aas
inc
es
fbstp
inc
jge
jno
xchg
mov
jnp
push
adc
or
sub
sarb
fstl
jno
jnp
mov
add
mov
jp
push
cwtl
sub
jne
push
pop
dec
jge
loope
adc
cmp
pop
fmull
cltd
in
stos
faddl
cmp
xor
pop
ret
scas
fimull
stos
mov
rep
pop
divl
jo
cmp
xor
mov
aam
inc
cld
adc
daa
cmpsb
fidivrl
jmp
dec
mov
xor
xchg
sti
sub
jmp
nop
jo
mov
mov
pop
dec
lock
test
leave
sahf
cltd
iret
fstpt
jbe
les
mov
cmp
mov
lcall
and
es
adc
fiaddl
jmp
sbb
cmp
mov
mov
and
mov
mov
cmp
aad
cmp
cmc
push
fstpt
frstor
push
mov
testl
loope
sbb
pop
cmp
out
push
aad
and
loopne
cli
jo
repnz
gs
leave
pop
xchg
inc
mov
into
mov
bound
ja
jb
jbe
stc
gs
cmp
pop
inc
or
xchg
mov
push
loope
cli
jle
mov
sysexit
test
jns
outsb
test
icebp
ret
test
jg
xchg
lds
inc
pop
mov
cmp
push
inc
out
in
sub
rorb
arpl
shll
or
jnp
iret
comiss
mov
push
mov
ja
call
cwtl
loope
aas
pop
pop
pop
fs
aas
inc
shrb
fnstenv
add
cld
dec
jp
and
scas
inc
pop
test
fildl
lods
fucomp
xor
daa
jo
pop
pop
call
adcb
jp
dec
aam
dec
xchg
in
out
stc
into
jl
lahf
cmp
testb
nop
icebp
add
stos
push
cmp
bound
inc
aas
loopne
or
mul
xchg
xor
lock
mov
adc
add
cmpsb
lea
mov
cmp
adc
jg
ret
inc
adc
jo
fwait
add
mov
cwtl
mov
mov
add
xchg
mov
push
shrl
adc
out
outsb
inc
clc
or
fstl
addr16
outsl
mov
cltd
enter
loopne
mov
icebp
icebp
rcll
movsb
lahf
ljmp
outsl
ss
or
ja
roll
dec
pop
mov
xchg
shll
dec
xchg
xor
sbb
nop
adcl
xorl
sub
adc
push
jno
in
cmp
push
frstor
lcall
mov
pop
repnz
shrb
add
or
movl
push
pop
pop
and
xor
lret
or
mov
xchg
bound
or
mov
fsubp
fs
fdivs
out
jp
rolb
orb
pop
adc
stc
mov
out
dec
xchg
cmp
jo
cltd
lock
test
adc
and
pop
or
repz
data16
push
out
sbb
fnsave
push
push
adc
mov
insl
adc
scas
sarl
push
into
jg
jae
add
mov
call
scas
lahf
dec
or
mov
pushf
inc
stos
sbb
lret
sbb
fdivs
cmp
xor
push
pushf
arpl
cmp
inc
fnstenv
pop
or
cmp
and
adc
push
mov
test
xchg
ffree
pop
xchg
mov
int
and
mov
aaa
imul
inc
daa
cmp
stos
pop
popa
push
aam
inc
mov
in
test
push
pop
jg
push
insb
es
sub
adc
mov
repz
jbe
cwtl
push
add
mov
xchg
in
mov
mov
out
add
iret
cmp
ret
rorl
divl
mov
loopne
shl
push
fwait
out
dec
or
xchg
add
or
daa
das
mov
push
shrl
adc
lock
push
mov
cmp
jl
mov
sub
filds
and
jecxz
or
lods
xchg
icebp
adc
lcall
daa
push
pop
inc
mov
add
ljmp
dec
cli
popf
adc
std
bound
mov
inc
imul
test
mov
add
test
out
inc
mov
cmp
and
aad
out
incb
jecxz
arpl
int
imul
in
mov
push
pop
and
sub
mov
insb
xchg
inc
mov
push
hlt
pop
and
in
mov
cmp
xchg
mov
test
test
mov
pop
jne
add
cmpsb
sub
aaa
dec
or
xor
stc
addr16
pushf
sbbb
lret
mov
cmp
adc
push
cli
outsl
outsb
cmpb
push
shl
loop
sub
es
pop
loop
mov
adc
daa
movsb
lea
les
hlt
lods
ja
pop
aam
and
or
pop
mov
mov
cwtl
test
and
iret
push
inc
iret
cmpsl
lods
jmp
mov
mov
cmp
jmp
daa
clc
gs
mov
and
out
inc
loopne
mov
or
jl
push
cld
gs
mov
lcall
xor
dec
out
cmpsb
test
pop
insb
mov
fnstsw
insb
add
mov
inc
aad
test
ss
jle
pop
aad
push
iret
sub
inc
or
xchg
vmovsd
sub
xchg
cmp
add
enter
test
xchg
and
adc
mov
ss
xlat
ret
or
mov
js
out
ss
push
or
pop
sbb
or
mull
push
scas
sarb
dec
call
xchg
lods
out
push
clc
push
loopne
jae
pop
pop
faddp
xchg
mov
sbb
sbb
push
and
hlt
pop
insb
lret
test
xchg
mov
sahf
push
pavgb
rcrl
xchg
leave
ret
enter
cmpb
pop
jno
jo
sahf
mov
mov
leave
jbe
stc
loop
cmp
repz
pop
call
jmp
dec
jae
fs
fildll
push
out
sub
dec
mov
mov
pop
cli
int
cmp
fs
dec
pushf
adc
push
stos
cld
xchg
popa
lds
out
ds
nop
test
jo
jnp
mov
jg
sahf
mov
movb
xchg
mov
lods
test
test
sbb
and
das
cmp
cmp
push
fldt
cmp
dec
das
xor
and
or
nop
inc
inc
sbb
cmp
in
fstps
aad
and
sub
xchg
mov
xor
push
inc
loop
xor
jecxz
pushf
push
push
cli
cmp
inc
icebp
outsb
inc
add
aam
scas
in
ljmp
inc
rclb
cwtl
inc
sbb
xor
inc
mov
imul
test
mov
ret
pop
call
loop
rorb
cmp
enter
mov
pop
mov
mov
mov
test
imul
pop
ret
cmpsl
cmc
in
or
xor
or
int3
sahf
lahf
xor
push
pop
insb
push
sbb
add
push
scas
sbb
insl
test
lcall
mov
fnstsw
ret
jmp
xchg
sub
xlat
add
and
or
jecxz
fsubp
lcall
ficompl
divl
sti
sub
sub
add
inc
fadds
cmpb
and
mov
fidivrl
sub
mov
testl
and
out
leave
push
push
repz
lahf
jge
lock
outsb
ficompl
in
xchg
bound
mov
and
int3
repnz
inc
std
in
adc
rcll
cmp
sub
popa
adc
out
push
inc
aad
dec
fstl
cltd
lret
push
pop
jns
mov
aad
fistps
inc
gs
push
cltd
mov
cmp
lea
mov
or
sbb
push
push
sbb
adc
jnp
pop
mov
push
pop
dec
es
pop
dec
lret
or
adc
dec
or
inc
cltd
sub
ja
lods
or
push
mov
pop
cmp
sub
and
xchg
inc
mov
sahf
and
clc
outsb
xor
xor
cmp
cltd
or
std
scas
pop
insb
push
scas
daa
cltd
sub
xlat
jecxz
jne
inc
push
pushf
adc
inc
enter
out
jae
pop
sahf
je
fldenv
mov
or
jbe
inc
xchg
dec
push
loopne
mov
dec
in
xlat
cmp
int
and
dec
in
outsl
iret
push
rorl
test
shrb
cmp
ljmp
mov
push
lret
inc
xchg
out
sub
sub
jg
test
shlb
aas
imul
dec
loop
mov
jne
jp
push
mov
dec
out
rcll
xor
gs
call
lds
cmpsb
xor
or
add
mov
or
add
std
cltd
mov
test
sahf
cmp
js
adcl
negb
movsl
or
orb
dec
shrl
aas
rcrb
jo
outsl
add
push
outsl
and
bound
push
repnz
push
dec
shr
shll
shlb
xchg
aam
mov
xlat
in
push
in
or
mov
pop
mov
or
leave
sub
xor
cmpsb
or
jae
std
jns
xchg
and
adc
sub
stc
sbb
push
pop
mov
scas
fcmovb
xchg
outsl
jbe
mov
inc
jb
sbb
push
inc
movl
aas
push
iret
mov
ja
lods
clc
loope
dec
or
gs
imul
mov
ret
ds
mov
int
hlt
push
xor
sbbl
outsb
call
lcall
lock
adcb
adc
shll
stos
loop
xchg
pusha
icebp
xchg
addb
aad
sbb
aad
sub
arpl
cmpsl
jo
ror
add
mov
scas
icebp
inc
sbb
cmp
sbb
inc
inc
pop
xlat
xor
mov
ret
jl
adc
gs
in
xchg
lret
test
dec
sbbb
test
jae
aaa
test
out
sbb
pusha
cwtl
fadds
dec
stos
mov
xchg
adc
lahf
call
mov
push
jl
cmp
test
xor
hlt
fcoms
ret
xor
jecxz
ljmp
bound
stos
sbb
fidivrl
stc
mov
mov
push
std
fisubrl
addl
jno
mov
movb
scas
or
ret
lds
push
dec
ljmp
and
jns
or
dec
negb
push
lock
adc
lds
lods
jg
jne
inc
fidivl
xchg
out
bound
nop
and
mov
jecxz
inc
pushf
in
add
mov
popa
outsl
mov
test
aad
jmp
lret
test
das
mov
repz
lods
sub
sub
movsl
push
cld
imul
adc
push
mov
mov
or
mov
imul
lahf
ud0
xchg
xor
rolb
jge
test
idivb
dec
pop
add
fcomps
mov
lea
and
adc
bound
mov
daa
lea
cltd
jae
cmpsb
lret
pop
mov
lock
add
lcall
pop
xor
pop
xchg
mov
daa
jecxz
aaa
mov
mov
sub
dec
mov
ja
popa
fwait
xor
and
mov
dec
adc
dec
out
idiv
movsb
ljmp
sbb
data16
xchg
push
mov
movsb
fstpt
ss
call
jp
cmp
gs
shrl
xchg
leave
push
and
pop
nop
mov
out
cs
les
scas
data16
rclb
cltd
mov
int3
ja
cli
pop
dec
inc
xor
fdivrl
pop
sub
jle
jge
inc
fstl
mov
fdivrl
add
inc
mov
lret
xor
lret
add
jl
sub
shlb
xchg
sub
dec
mov
idivl
fadds
dec
dec
enter
sub
data16
xchg
inc
pop
das
sti
movsl
mov
dec
dec
jns
je
ja
mov
add
loopne
popf
les
imul
ud2
inc
sub
push
push
dec
push
cmp
fwait
pusha
jbe
lret
inc
xchg
movsl
dec
outsl
sub
shrl
lret
mov
mov
jp
rcrb
xor
lea
nop
ficoms
jo
and
loop
sbb
les
jge
sbb
xor
jne
mov
sti
incl
loop
pop
jnp
jp
or
insl
push
les
hlt
jae
mov
dec
mov
sbb
or
xchg
movsl
int3
xor
stc
in
cmp
sbb
mov
sbb
jl
add
rclb
or
enter
inc
jge
repz
mov
imul
cmpsl
xor
fs
push
and
cmp
loop
mov
pop
add
test
stc
pop
lret
push
inc
xchg
jle
test
ret
mov
jno
mov
scas
pop
test
scas
cmp
push
setge
rolb
or
popa
ja
into
xor
int3
outsb
sub
outsl
pusha
cmp
mov
dec
mov
js
repnz
in
lcall
sbb
xchg
xor
or
js
movsl
ficomps
das
push
push
xchg
pop
cld
dec
gs
xchg
repnz
outsl
or
mov
inc
orl
xlat
add
sub
enter
sub
add
xlat
mov
scas
xchg
xor
and
jmp
add
lods
and
sbb
cwtl
in
je
sub
stc
shl
test
adc
mov
js
mov
mov
adcl
test
push
pop
adcl
and
push
pop
adc
mov
inc
push
lret
sub
sahf
mov
mov
addr16
jne
out
leave
pop
xchg
mov
bound
or
cmpsb
lods
add
repz
push
lret
ljmp
mov
andb
push
jb
repnz
loope
aaa
pop
mov
or
cli
sahf
inc
and
sub
push
aam
stos
cmp
arpl
dec
xor
aad
adc
rorb
or
fistps
repz
mov
inc
jne
mov
jg
dec
xor
inc
pop
sbb
sbb
ljmp
test
aaa
dec
sbb
iret
stos
adc
mov
sbb
aad
cmc
fbld
js
or
add
mov
popf
mov
jae
lods
mov
aaa
jns
push
add
cmp
das
movsl
out
rcll
jae
sti
adc
lret
aad
mov
or
mov
popa
shll
push
add
or
xor
jae
mov
popl
inc
loope
mov
xor
cmc
in
cmp
aad
setno
mov
lret
loopne
bound
cs
icebp
push
add
or
sbbb
mov
push
fdivs
pop
and
cmc
cmp
cmpsl
cmp
cltd
ret
je
sbb
imul
fidivrl
jp
clc
loopne
cli
adc
cwtl
mov
jns
push
and
xchg
bound
fidivrs
mov
xchg
cltd
xchg
psubsb
mov
inc
arpl
les
nop
adc
cmp
xchg
int3
jp
xor
sub
sbb
rcr
jb
xor
push
inc
pop
les
cwtl
mov
cwtl
out
aas
sbb
sbb
std
mov
cld
push
sub
and
dec
pop
jecxz
fldl
jbe
jl
es
ret
shrl
nop
loopne
jo
ljmp
hlt
lcall
icebp
xor
addr16
outsb
or
push
and
lret
pop
mov
push
aam
lcall
or
fnstcw
jge
adc
sahf
int3
pop
clc
lret
imul
pop
mov
mov
out
subl
push
push
ror
bnd
mov
fldl
andl
int
xchg
jl
popa
daa
and
cmp
test
jge
adc
fdivrp
sub
test
outsb
lret
pop
xor
xchg
inc
shll
push
addr16
mov
sbb
push
loopne
lret
push
fwait
sub
lods
out
lods
sub
pushf
sub
lahf
mov
mov
and
dec
dec
xor
imul
mov
adc
pushf
hlt
popf
fwait
mov
mov
add
shl
sub
push
sbb
mov
lret
mov
stos
xchg
sub
sbb
mov
lock
cltd
xlat
pop
dec
cmp
xchg
rcrb
add
or
adc
and
and
jno
sti
add
xor
push
sub
mov
sbb
sbb
repnz
das
lret
mov
xor
or
mov
pop
xchg
outsl
je
xor
jbe
imul
ret
pop
roll
lods
rcr
bound
dec
scas
test
pop
dec
xchg
add
and
and
add
inc
mov
jp
cmc
mov
push
jmp
xchg
dec
inc
pop
sbb
mov
fwait
or
shlb
adc
iret
jg
mov
mov
negl
repnz
jle
cltd
subb
movlps
fcmovnu
rcrl
lcall
sub
mov
xor
dec
test
nop
or
cld
dec
lods
das
pushf
inc
xchg
dec
inc
push
pop
or
or
inc
jmp
push
cmp
sbb
mov
push
insb
push
push
mov
fiaddl
push
or
cld
add
rolb
mov
push
js
stos
outsl
pop
mov
and
ds
cmp
and
adcl
jnp
add
sub
xchg
mov
pop
push
mov
mov
xor
xchg
insb
push
scas
insb
fs
inc
pusha
sub
jnp
cltd
xchg
push
jno
ja
std
dec
imul
push
int3
daa
nop
xor
ja
test
mov
push
lret
jae
jns
mov
adc
sub
inc
lods
dec
ss
adc
dec
adc
mov
repnz
idiv
nop
aaa
sub
rep
sub
mov
push
xchg
and
sbb
sbb
jnp
unpcklps
mov
or
in
leave
xlat
or
xchg
adc
cmp
mov
das
xchg
mov
xchg
imul
mov
lds
pusha
cli
sub
adc
je
push
mov
dec
fists
test
outsl
lock
mov
jl
loope
pop
mov
test
outsl
and
lock
das
push
xchg
and
icebp
in
rep
jae
xor
push
dec
jg
in
inc
jg
pop
cld
rclb
popf
sbb
into
xchg
or
icebp
js
xor
sbb
ja
call
jne
mov
aaa
xor
lods
mov
lods
mov
aas
or
push
fnstcw
mov
clc
mov
lds
repz
jno
mov
sti
mov
std
mov
inc
cltd
pushl
and
sub
out
push
xor
pop
popf
test
and
mov
lods
mov
adc
jbe
seta
sub
jge,pn
pop
sbb
xor
ret
ss
cmc
out
dec
arpl
and
jnp
and
lds
inc
fcoml
decl
outsl
scas
push
mov
rcr
inc
gs
adcb
push
cmp
mov
push
mov
mov
dec
gs
popa
rcr
pop
lret
adc
xchg
push
mov
push
adc
leave
sahf
popa
push
stos
cs
repnz
mov
cmc
cld
popf
repnz
push
xor
mov
or
pop
xor
lea
xchg
or
jecxz
xchg
jo
rorl
imul
cmp
adc
scas
add
push
cmp
lods
test
mov
mov
sti
pop
and
cmpsl
mov
testl
jl
fldl
outsl
out
mov
cmp
idivb
std
xor
xor
lahf
lods
cmc
cmp
sub
pop
lea
mov
ds
icebp
adcl
popa
sub
sbb
das
into
push
xor
xchg
add
frstor
jno
cwtl
inc
cs
xchg
shr
pushf
mov
mov
sahf
cmpl
push
testb
rorl
int
rcrl
scas
mov
inc
jl
adc
dec
loopne
scas
mov
or
add
jbe
cmp
xchg
cmp
arpl
mov
jp
call
and
cmpsb
clc
mov
test
mov
cmpsl
adc
add
loop
inc
xor
ljmp
dec
lret
fisttpll
push
ja
push
es
lea
ror
or
lcall
cmp
mov
inc
push
dec
fcom
push
mov
daa
and
push
pop
aam
or
jo
sub
flds
enter
xchg
mov
fisttpl
aam
shlb
into
sub
add
mov
filds
mov
sbb
mov
sbb
pop
mov
ret
test
sub
enter
lods
ds
sysret
das
push
mov
pop
int3
popf
imul
sahf
movsb
sahf
jp
pop
sar
push
pop
in
xchg
mov
imul
push
adc
jb
fwait
mov
test
dec
lock
mov
ds
notl
jae
test
or
add
mov
dec
sub
jns
dec
inc
jbe
sub
or
mov
mov
insb
scas
and
push
mov
sub
ljmp
stos
pushf
adc
std
push
addr16
jne
or
sarl
mov
or
mov
sti
stos
cmp
out
pushf
enter
popf
push
jo,pt
cmp
les
mov
leave
addr16
clc
pop
scas
sbb
lock
sub
out
shll
aam
ror
jns
sbb
sub
or
cmp
pop
ficoml
cmpsb
outsl
fidivrl
pop
jl
mov
push
aam
cmp
mov
mov
leave
jb
xchg
push
sbb
mov
xorb
ret
mov
jp
or
insl
test
fwait
test
inc
jb
test
xor
inc
cmp
mov
dec
in
mov
aam
xor
adcb
jns
es
jmp
cmp
mov
je
aaa
dec
adc
testl
inc
sti
loopne
cli
inc
js
sbb
mov
ja
ja
dec
jle
inc
inc
in
cmpsl
mov
pop
and
int
sub
test
cmp
jp
adc
jecxz
ds
adc
mov
pop
iret
xor
fwait
pop
andb
clc
push
stc
push
push
std
pop
cmc
inc
ret
mov
xor
test
sbb
enter
stos
push
mov
lods
mov
ja
add
popf
cli
push
les
loop
or
xor
adc
js
mov
adc
mov
mov
mov
rorb
mov
or
clc
pop
cmp
dec
inc
jge
mov
dec
addr16
stc
xchg
add
jle
mov
std
lret
pop
ficoms
xor
shl
jl
mov
inc
xor
add
and
inc
cmp
adc
pop
lea
into
cmc
add
cmp
sarl
rcll
xchg
sub
outsb
std
shl
test
add
or
jecxz
and
sbb
mov
sub
or
cmp
pop
shrl
mov
xchg
mov
stos
test
jge
fs
fnstsw
call
in
in
sbb
loopne
xorb
imul
sub
sbb
rorl
xor
pop
cmp
xchg
imul
inc
test
sbb
pop
pop
popa
call
cwtl
pop
lea
int
jp
test
mov
mov
and
ret
int
dec
inc
pop
xor
rorl
dec
mov
push
jnp
jo
mov
movsl
mov
andl
push
adc
fldcw
cmp
cmp
fsubr
cmpsb
and
sbb
adc
leave
aas
iret
hlt
cli
xor
pop
inc
dec
or
inc
popa
imul
ss
push
data16
std
aad
sub
push
fistpll
dec
jns
pop
pusha
adc
mov
sbb
sub
cmp
lcall
jp
in
cmp
sbb
inc
dec
and
loop
test
mov
in
xor
push
adc
outsl
and
lret
cmp
push
lods
add
mov
cmp
int3
ret
cmp
add
pop
jne
test
jecxz
xor
xor
push
mov
push
xlat
loopne
jmp
push
dec
push
int3
icebp
lcall
lret
sub
mov
adc
mov
ret
mov
aam
testl
sahf
sarl
cmp
loope
inc
xchg
jmp
xchg
sahf
sub
stos
leave
mov
or
dec
shll
hlt
and
or
daa
xchg
mov
in
int3
cmp
pushf
xor
push
jne
adc
xor
sbbl
cmpsb
mov
nop
out
xor
sub
pop
add
ds
and
ret
add
cmc
mov
push
test
arpl
xorl
jmp
jecxz
jp
enter
stos
cli
shrb
push
movntq
and
pop
aas
enter
popf
daa
cmp
dec
mov
sar
mov
mov
mov
ds
lea
sub
cwtl
loope
cwtl
lock
lahf
sub
mov
or
sbbb
cld
test
imul
sbb
xchg
fnstenv
inc
mov
inc
fildll
jnp
xchg
das
fsub
cmp
and
mov
xchg
aad
cmp
sbb
push
sub
jge
and
xchg
lods
cmc
jge
mov
outsb
add
nop
jne
or
out
push
cmpsl
in
adc
mov
mov
popa
inc
push
test
sub
xchg
aaa
push
push
xchg
outsl
or
sbb
mov
sub
xchg
pop
ds
into
cld
int3
inc
lods
loopne
hlt
jge
data16
push
jmp
mov
push
into
sbb
ss
cmp
push
push
ljmp
cmc
stos
pop
push
and
in
inc
out
jle
test
sbb
mov
sahf
xor
sbb
into
sub
out
sahf
ja
push
sbb
movsl
gs
out
std
lahf
movsl
jo
nop
inc
movsb
jle
sbb
cmp
cltd
cmp
clc
push
inc
add
movsb
xchg
and
iret
out
xor
dec
jns
in
lahf
mov
sbb
mov
pusha
jle
xchg
dec
mov
mov
jp
and
add
sbb
lods
or
cmpsl
cwtl
lret
ret
adc
jp
xor
xchg
je
cmpsb
mov
cltd
test
mov
das
cmpb
xor
fsts
xor
outsl
sub
leave
push
aas
ds
lds
inc
lcall
sub
sub
add
xor
pop
mov
in
xchg
dec
mov
outsl
addl
push
test
pop
xchg
inc
int
out
movsb
push
jb
test
jno
ret
fcomi
in
pop
cmp
aam
scas
dec
mov
dec
out
add
cmpsl
lods
xchg
pusha
scas
ljmp
lods
adc
adc
sbb
orb
push
dec
test
mov
into
jle
adc
pop
in
mov
push
call
aaa
push
jg
add
dec
cwtl
loope
or
dec
inc
dec
mov
xchg
daa
hlt
mov
sbb
fisubrl
inc
icebp
xor
pop
or
in
aaa
daa
or
and
out
shll
pop
sbb
sbb
popf
in
fiaddl
shl
scas
data16
pop
shld
shl
test
jp
jp
out
sbb
jge
movsb
das
scas
or
loope
insb
or
faddl
jge
and
pop
popf
int3
rcll
movsl
sbb
out
mov
insl
pop
xchg
cs
xlat
stos
mov
inc
subl
adc
jb
and
mov
push
mov
fs
insl
push
sbb
daa
loopne
mov
in
gs
push
mov
pop
ds
push
frndint
test
and
pop
fsts
roll
xchg
or
sub
cmpsl
in
lds
push
cmpsl
clc
jno
jmp
sbb
push
jbe
fcmove
push
lahf
cmp
push
ret
jecxz
faddl
test
push
loope
iret
pop
mov
inc
or
jecxz
mov
pop
mov
out
and
adc
add
jle
mov
insb
mov
jg
popa
outsb
inc
popf
jns
mov
stc
xor
inc
repnz
add
inc
inc
dec
test
scas
scas
inc
mov
lahf
and
pop
shr
ds
std
shr
push
lahf
cmp
sub
movsb
mov
adc
add
xor
pop
xchg
cmp
jae,pn
xchg
and
jne
sbb
pop
xor
imulb
or
cmp
pop
in
sbb
out
ja
sub
mov
shlb
popf
xor
mov
xor
lahf
push
sahf
push
push
into
push
lcall
mov
outsl
stos
gs
je
cmpsl
aad
mov
mov
adc
jno
negb
xorb
int3
xor
enter
mov
js
dec
push
cmp
imul
out
xchg
push
outsw
fldt
cmp
cmp
cmp
sti
push
std
cmp
ljmp
inc
xchg
sbbl
mov
dec
xchg
mov
xchg
test
sbb
or
out
popa
sub
sub
out
insb
jae
jmp
sbbb
aaa
and
dec
shll
ds
pushf
jmp
pop
xchg
lcall
mov
in
fs
jns
inc
stos
push
mov
aas
test
push
cmp
sbb
cld
mov
je
adc
mov
test
jmp
xchg
mov
js
leave
jb
repz
setb
lcall
sub
mov
pop
arpl
dec
xor
sbb
lahf
fdivrl
adc
xchg
orl
cmp
loop
movsb
negl
subb
or
xchg
adc
xor
movsl
xchg
dec
test
gs
movsb
xlat
adc
fstpt
mov
into
xchg
push
aad
test
gs
rorl
xor
cmp
inc
bnd
int3
clc
xchg
lods
add
add
mov
adcl
dec
cmp
xor
rcrb
decl
pusha
sub
push
addl
xor
xor
mov
dec
xor
sbb
xchg
or
xchg
dec
fwait
aam
loopne
sub
addr16
add
or
xchg
insb
rcrl
pop
mov
faddl
pop
dec
data16
aas
fs
dec
cld
fnstenv
dec
add
xchg
push
sub
lcall
fwait
into
negl
es
cmpsl
mov
sub
add
push
out
roll
test
xor
std
dec
scas
mov
clc
jge
or
jmp
mov
inc
ds
lods
mov
gs
mov
mov
push
sub
push
cmp
jp
dec
loopne
lcall
inc
mov
add
in
lods
inc
jg
imul
pop
or
pop
xor
sub
pusha
push
stos
add
cmp
clc
ss
adc
lock
loopne
cli
sbb
and
dec
pop
xor
mov
push
pop
movsl
icebp
hlt
stos
and
sub
add
out
fidivrs
xor
outsl
fists
aam
into
xor
ss
clc
add
stos
xchg
out
inc
or
fsubs
hlt
jle
pusha
inc
cmpsl
arpl
mov
js
cmpsb
in
stos
add
shll
test
mov
mov
push
inc
xchg
sbb
push
xchg
loope
xor
cmp
mov
jno
sbb
sub
pop
rcll
andb
cli
and
enter
es
testb
out
mov
push
call
mov
jge
aaa
je
xchg
imul
ja
sub
shrl
dec
dec
jo
mul
shlb
leave
pop
sub
cmpsb
int3
loope
dec
mov
jo
lds
fisubl
fldt
mov
xor
and
or
outsb
faddl
lds
aad
xor
ja
jg
xor
dec
and
cmpsl
or
inc
dec
add
ret
sbb
insl
js
and
mov
cmpsb
std
adc
dec
or
sub
loopne
shrb
daa
icebp
mov
int
lods
lock
mov
fwait
rolb
bound
mov
xor
push
push
inc
pusha
cmpsb
insb
inc
mov
in
mov
fldenv
dec
mov
pop
xchg
pop
jno
das
data16
cmpsb
lea
sbb
bndldx
sti
std
pop
sahf
push
xchg
push
cmpl
lock
paddsw
cwtl
scas
lds
cwtl
daa
jp
sahf
popa
ljmp
mov
call
mov
incl
hlt
sti
in
inc
dec
xchg
push
xchg
out
push
xchg
jle
or
dec
dec
push
cmpl
adc
iret
xlat
xor
out
aad
in
int3
negl
cmp
imul
sub
loopne
mov
orb
jg
les
jb
mov
out
sub
aas
lea
adc
movsl
repz
jb
mov
pop
repz
loope
or
clc
fwait
pop
repz
inc
mov
sahf
add
pusha
out
sbb
pushf
rcr
xchg
nop
xlat
scas
inc
addr16
and
inc
xchg
dec
pop
icebp
mov
shll
test
xchg
xorb
mov
aam
pop
fcmovb
xor
push
mov
and
cmpsb
scas
and
int
out
in
cmp
or
jl
out
sbb
adc
cmpl
mov
inc
shl
out
ljmp
call
mov
add
inc
inc
xor
idivb
in
jb
jg
pop
out
rol
or
xchg
add
jnp
xor
faddl
sub
fwait
xchg
mov
sbb
addb
dec
sbb
clc
pop
jbe
sub
add
jl
push
sub
lahf
mov
aam
cmp
lods
cmpsl
adc
jnp
inc
adc
dec
and
mov
jl
dec
and
inc
push
mov
mov
popa
mov
fcoml
sbb
movsl
data16
scas
dec
int3
xor
dec
subb
mov
scas
xor
int
stos
decl
xor
add
aaa
adc
xchg
add
add
enter
rolb
xchg
dec
nop
inc
push
inc
and
sahf
repz
insl
sbb
xchg
outsl
mov
lods
dec
inc
lcall
xor
imul
fsubp
mov
push
mov
sbb
aas
popf
popa
sbb
xcrypt-ctr
cmpsl
jb
ss
iret
fstpt
idivb
or
push
jae
scas
pop
int
fisttpll
hlt
les
xrelease
bound
mov
loope
xchg
sarl
or
testb
cmpsl
add
add
mov
sti
mov
cwtl
js
fldt
mov
lret
dec
mov
adc
stc
out
cmp
mov
movb
xchg
sahf
inc
lds
xchg
xchg
push
mov
in
mov
jmp
inc
push
loop
mov
pop
xorl
ret
sbb
adc
daa
xor
sub
je
pop
dec
bound
pop
daa
mov
scas
imul
movsb
shll
jp
addr16
test
fstpl
mov
adc
addr16
stos
xor
repz
dec
adc
out
xor
aas
popa
push
sahf
cmp
fnstsw
add
pop
fidivs
bound
hlt
adcb
sbb
mov
inc
repnz
pop
pop
fucomp
movsb
sub
mov
adc
mov
sti
mov
pop
pop
dec
mov
inc
inc
push
mov
adcb
movsb
cmp
in
cmp
and
popa
inc
aam
inc
mov
push
std
inc
cld
fwait
test
mov
pop
mov
jge
and
je
pop
push
daa
push
dec
sub
into
stos
sub
fcoms
push
scas
jnp
xchg
xor
mov
dec
or
out
xchg
xor
shl
sbb
gs
adc
idivb
shrl
push
mov
test
mov
jbe
jmp
mov
pop
or
int
sar
in
pusha
xchg
xor
mov
shll
mov
sub
fldcw
nop
lods
add
xchg
leave
sbb
aaa
pop
out
cmp
jns
sbb
lock
cmpsb
js
fistps
lods
inc
adc
fildl
jne
xchg
xchg
mov
jle
cs
out
imul
fdivrp
fists
in
cmp
gs
popa
lahf
mov
push
cmpsb
cltd
mov
lea
cmp
push
cld
mov
pop
sbb
cmpsb
adc
mov
inc
adc
jbe
mov
pop
jne
mov
xor
loope
into
fimuls
shrb
aas
aaa
arpl
mov
cmc
mov
pop
adc
hlt
xorl
imul
push
inc
stos
lcall
sub
in
mov
sub
xchg
addr16
roll
sub
xor
mov
aaa
aam
cmp
adc
testb
push
fstp
jb
sbb
movsl
enter
sti
dec
fwait
cmp
fxch
daa
cmp
test
imul
out
negl
inc
and
scas
leave
leave
jp
mov
adc
cmpsl
dec
popf
push
dec
inc
imul
inc
test
es
sti
iret
jecxz
popa
push
arpl
ss
in
jns
out
lds
out
shrl
jecxz
add
sub
outsl
arpl
cwtl
addr16
xor
out
pop
cli
outsl
jg
ljmp
in
bswap
mov
jmp
out
rorl
addr16
adc
loop
inc
aas
xor
pop
or
mov
jno
sub
dec
daa
cmp
jnp
dec
or
add
dec
cli
add
push
icebp
add
push
push
pop
movq
mov
inc
pop
sbb
lea
in
jmp
mov
mov
adc
pop
jle
addr16
dec
or
push
jb
repnz
out
sub
pushfw
loopne
hlt
pop
mov
and
cltd
cmc
cli
icebp
test
sub
arpl
popf
andb
and
mov
scas
sbb
je
into
repnz
out
int
fs
cmp
lret
les
insl
cmc
dec
scas
mov
aad
adc
into
lcall
loope
mov
mov
cmpsl
sub
popl
adc
lods
inc
adc
cmp
xchg
sub
mov
jns
jo
jle
iret
xor
cmp
cmp
in
clc
add
imul
adc
push
cmp
mov
stos
les
xchg
jge
mov
out
push
push
shll
sysret
push
mov
sbb
add
jbe
sahf
push
cmpl
rol
in
or
movsb
adcb
push
or
cwtl
cwtl
sbb
gs
jae
mov
push
hlt
or
and
arpl
cltd
or
sub
jns
mov
inc
xchg
aaa
or
cld
mov
mov
jg
das
test
out
addb
in
fisttpll
add
rol
mov
mov
xchg
shl
out
pop
pop
dec
xchg
lcall
push
cmp
xchg
inc
lcall
mov
xchg
dec
mov
add
add
jno
and
scas
jge
mov
add
rorl
scas
push
mov
mov
push
clc
test
push
jbe
fcmovnu
idiv
xor
outsb
mov
mov
xor
and
pop
cmpb
fcomps
fs
adc
cmc
jns
je
cmc
mov
add
jno
add
jo
or
mov
pusha
cmp
add
loopne
jno
pop
mov
push
js
jg
sub
out
mov
fisubrl
mov
xor
mov
mov
shlb
mov
mov
mov
andl
and
scas
out
mov
push
adc
sub
jecxz
jne
push
rcl
aam
jnp
sahf
mov
mov
imul
push
test
mov
pusha
movsb
es
sbb
xchg
fs
popa
or
ds
mov
xor
and
rolb
aas
jg
fistl
aam
sbb
sbb
adc
fcmovbe
sbb
call
loopne
xchg
pop
mov
jns
aaa
pusha
inc
or
imul
cmpsl
xchg
mov
xchg
in
ret
cmp
xor
jp
fsubrl
daa
ret
sti
test
cwtl
xor
or
lret
lea
or
cmp
leave
cmpsb
jno
mov
rcll
icebp
jp
jne
fcom
andb
jmp
dec
imul
mov
mov
dec
inc
bound
xlat
cwtl
stos
cmp
sbb
pop
out
mov
jns
pop
int3
xor
je
int3
ficoml
cmpsb
sti
int
xlat
cld
inc
xchg
xchg
mov
sub
mov
fisubs
aas
test
test
cmp
jb
out
arpl
int3
push
inc
shl
rorl
adc
insb
repnz
dec
mov
std
cmp
dec
sarb
fdivrl
add
arpl
rolb
lret
add
xor
cmp
adc
sub
fmull
pusha
pop
mov
jb
dec
adc
cmc
cmp
movsb
mov
cwtl
push
in
hlt
push
jae
xlat
adc
xor
cld
push
fwait
mov
pop
jbe
call
fucom
aaa
inc
or
cmp
lock
lods
loope
sti
xor
sahf
xchg
imul
outsl
lea
add
in
ljmp
and
xor
pusha
push
ds
sahf
adc
rorb
jo
rorl
inc
adc
xchg
ss
testl
movb
and
or
sbb
test
sbb
fsubp
in
repz
popa
fcom
sbb
std
dec
dec
or
rcrb
push
rcrl
push
jle
test
jnp
mov
repz
leave
daa
mov
loopne
cmpsl
daa
xor
jecxz
xchg
push
xchg
rep
sub
xlat
and
mov
and
pop
and
cmp
fisttpll
loopne
pop
fisubrl
cli
add
mov
fisubl
push
jo
mov
xor
push
sbb
mov
jle
jbe
sub
xlat
cmc
js
mov
shr
lret
jno
add
mov
pop
loopne
jecxz
cmp
xor
push
mov
mov
sub
std
pop
in
pushf
insl
fisttpl
jge
dec
outsl
cmp
jo
mov
mov
dec
inc
and
movl
ret
xchg
fwait
inc
push
add
pop
test
inc
fcmovne
gs
stc
mov
fldt
xor
lea
imul
mov
jl
fcomip
enter
push
push
shrl
idiv
add
sub
icebp
lret
push
xor
dec
popa
call
sub
movsl
and
push
imul
mov
xchg
jnp
jne
out
ret
fxam
pushf
jmp
lahf
test
arpl
rcll
out
ret
add
outsb
mov
fwait
icebp
xor
fxch
enter
sub
mov
mov
mov
pop
js
xor
nop
jge
cmpsb
cmp
lret
test
mov
sbb
cmpsl
push
sub
sub
or
sub
fists
push
adc
inc
mov
jbe
pop
ficomps
mov
lea
dec
movsl
xchg
xchg
icebp
xor
popa
jmp
add
sbb
je
fistl
lods
add
mov
pop
mov
sub
cltd
mov
lret
pop
out
rcrb
or
imul
push
addb
mov
icebp
inc
icebp
sti
mov
sbb
mov
loope
cmpb
mov
adc
aaa
pop
mov
adc
test
cld
insb
lret
cli
add
push
xlat
clc
scas
cwtl
lds
clc
mov
inc
cmp
sbb
or
inc
or
sub
inc
stos
jnp
push
add
insl
push
cltd
sahf
and
loope
hlt
pop
mov
push
in
xchg
push
mov
rorl
pushf
inc
repz
cmpsl
push
xor
or
jp
push
fwait
pop
xlat
and
push
sbb
pop
sub
sbbl
and
lea
aam
ret
pop
jle
int3
int3
cmp
push
lds
mov
outsl
jg
fadds
push
adc
inc
pop
mov
xlat
popf
into
push
movsl
dec
and
loope
filds
or
stc
scas
pop
andl
loop
xor
aas
call
lret
popa
int
shlb
imul
pushf
and
or
pop
sub
dec
daa
cmp
push
push
jo
mov
mov
outsl
enter
subb
adc
or
pop
ret
enter
dec
adc
sub
lock
push
jle
cltd
mov
jb
sbb
aas
push
push
push
insl
or
jmp
sar
and
xor
dec
stos
xchg
stos
mov
filds
pop
nopl
movsb
jnp
cmp
push
push
sbb
lret
jecxz
cli
test
loop
pop
icebp
pcmpgtw
xchg
mov
push
sbb
push
mov
sbb
pop
idivb
adc
mov
pushf
dec
stos
in
or
cmp
cwtl
or
mov
insb
ljmp
mov
enter
std
out
popf
push
xchg
cmp
fs
aas
or
outsb
or
cld
cmp
popa
inc
fldl
pop
sbb
push
pop
imul
ja
xor
xchg
lahf
loope
sahf
ret
pop
mov
out
pop
lds
mov
iret
cmp
mov
cmp
cmp
mov
ret
push
mov
roll
insb
sarl
das
push
jmp
sti
clc
xor
mov
stos
pushf
ja
push
mov
popa
mov
jp
mov
xor
cmp
imul
mov
inc
mov
mov
push
adc
scas
jmp
cmp
dec
adcb
add
push
jl
inc
and
fstl
in
jne
arpl
out
mov
pop
sub
mov
hlt
adc
jmp
es
fmull
push
jno
negb
sbb
add
je
arpl
loop
push
int
imul
cmp
hlt
mov
mov
lret
and
mov
or
testb
jp
sbb
cs
xor
mov
jg
cwtl
aad
pop
cmp
stc
clc
out
stos
adc
pop
pop
ret
sub
mov
push
mov
mov
and
inc
sbb
adc
aad
dec
sub
test
mov
mov
mov
popf
scas
add
insl
adc
cld
dec
push
adc
roll
jg
popf
jecxz
movsb
mov
dec
cmpsb
lahf
pop
pop
movsl
fldt
int3
or
ret
into
leave
xchg
bound
scas
cltd
std
dec
test
aaa
addb
and
cs
pop
mov
fstp
push
cltd
cmp
sarb
and
mov
pop
lods
sub
jecxz
pop
pusha
cmp
addr16
decb
mov
popa
in
adc
lahf
rorb
leave
repz
push
stos
shlb
jmp
adc
daa
ljmp
push
pop
loope
call
lds
adc
push
jae
fiadds
ds
and
popf
gs
inc
inc
pushf
mov
cmpsb
mov
lods
sbb
call
dec
jnp
leave
mov
lods
std
mov
int3
daa
mov
fistpll
mov
mov
add
cld
cmp
sbb
fmull
sub
xchg
enter
hlt
mov
repz
push
pop
pop
inc
stos
xchg
pop
into
es
pop
jo
ja
movsl
and
aaa
mov
adc
aam
icebp
iret
es
add
sub
push
sub
inc
jmp
movsl
cmp
ja
inc
pop
and
arpl
sbbl
sub
lock
cmp
add
lcall
mov
iret
mov
xchg
lret
loop
add
cmp
imul
push
pusha
psrld
add
int3
in
movaps
leave
std
pop
js
mov
pop
mov
mov
jno
insl
lea
xchg
add
outsb
adc
outsl
xor
xchg
pop
shll
popf
daa
lret
add
dec
les
inc
cmc
sbb
pusha
push
pop
jae
cmp
std
outsl
ds
xchg
inc
iret
fisttpll
mov
out
mov
ret
loop
jge
dec
push
pop
xor
movsb
mov
pop
aam
cmpsb
ss
ljmp
hlt
int3
adc
testb
add
xchg
sti
inc
jns
out
jecxz
sahf
mov
or
std
and
pop
mov
ja
mov
and
cwtl
pop
mov
sub
je
or
cmp
cltd
cmpsb
jge
cwtl
mull
inc
inc
or
push
repnz
push
shrb
and
xor
stos
in
cmp
cld
inc
scas
add
cmp
and
lock
and
mov
int
or
in
xchg
adc
mov
push
addl
inc
movsb
mov
mov
add
cmc
or
or
mov
int
push
push
push
cli
fs
inc
outsl
inc
and
inc
mov
fstl
movsb
cmp
dec
push
ret
jmp
lahf
shr
das
repz
jle
mov
fdivrl
sub
daa
lcall
in
push
mov
ret
int3
push
jno
or
cmp
and
pusha
call
mov
xchg
push
sbb
fbld
loope
out
call
movsb
lret
fisubrl
xchg
push
fwait
into
scas
xor
out
rcrl
push
xchg
mov
pop
pop
jnp
xchg
lock
xor
push
enter
mov
cmpsl
sbb
aam
int
sbb
cmpsl
and
inc
das
mov
loop
les
cmpb
mov
loopne
sahf
out
cmp
or
cmp
enter
in
jl
pop
insl
inc
xor
andl
sbb
add
cmp
popa
loopne
push
sub
daa
or
jno
mov
mov
push
mov
cmp
add
mov
xchg
push
loope
xchg
in
leave
push
inc
sub
cwtl
mov
jecxz
aas
inc
stos
xchg
fsubrs
in
call
lcall
pop
aaa
adcb
ja
addr16
out
xchg
lock
clc
stos
mov
aas
out
je
push
in
add
int
xchg
in
xchg
push
jno
js
add
jno
dec
enter
hlt
xchg
push
xor
sub
pop
test
outsl
adc
adc
mov
inc
add
sahf
add
push
push
push
xchg
scas
mov
rorl
push
sub
into
popa
arpl
fidivrs
js
pop
stc
push
jne
jmp
cmp
push
xor
cmp
scas
jbe
jbe
jg
je
push
mov
push
add
aad
fidivrs
adc
push
mov
mov
loope
jo
dec
xchg
xchg
faddp
movsb
dec
daa
repz
sbb
sub
imul
push
and
lea
dec
cmpsl
das
mov
xchg
push
mov
cmpsl
sbb
cmp
cli
cmp
mov
in
push
xchg
cmpsl
jbe
xor
lret
stos
clc
lahf
rol
out
add
ja
dec
push
dec
xchg
jo
mov
mov
into
jge
out
xchg
jmp
out
incb
sbb
insl
mov
sbb
mov
lods
cmp
inc
out
das
push
mov
jmp
jge
push
loope
push
mov
mov
sub
stos
filds
push
rcrl
xchg
scas
jo
scas
ds
idiv
movsl
test
pushf
mov
add
orb
dec
and
orb
and
nop
es
add
popf
bnd
ss
int
or
ficompl
mov
pop
fstp
cmp
pop
orl
pop
xchg
shll
dec
cmp
push
sbb
xor
adc
orb
cmp
out
mov
mov
fs
and
mov
xlat
jne
cwtl
shl
jp
aas
adc
adc
xchg
out
cmc
shl
test
aas
insb
xor
pop
inc
cmp
lahf
pop
xor
xor
and
jae
movsl
gs
fwait
mov
in
shlb
ss
les
sbb
stc
pop
jae
lods
mov
imul
dec
jl
int3
es
hlt
fildll
stc
jb
aad
and
pusha
inc
jmp
adc
fldl
cmp
dec
and
and
dec
add
sub
mov
cli
sub
or
les
inc
aaa
into
jnp
jo
bound
jae
pushf
test
aad
loopne
xorl
inc
dec
aad
cmp
pop
divb
rcrl
fcmovu
ret
jns
into
in
pop
or
jge
adc
imul
or
pop
jmp
mov
sbb
inc
fidivrs
mov
ja
mov
add
aaa
pushf
add
dec
je
addb
in
test
sub
mov
pop
shlb
and
cmp
adc
in
es
into
push
mov
repz
xchg
js
or
test
stos
or
mov
mov
mov
test
push
pushl
mov
push
push
and
cmc
clc
push
cmp
test
and
jmp
loope
and
ljmp
pusha
pop
rcrb
jb
push
popf
fildll
push
sub
jg
inc
stc
push
xor
mov
fwait
sub
cmpsl
mov
notb
inc
add
ja
shrl
lahf
push
mov
ret
sub
or
lods
imul
sbb
sub
and
mov
out
jns
fisttps
pop
aam
push
cli
sub
push
pop
mov
mov
push
enter
gs
insb
fs
stc
or
and
sbb
mov
xchg
mov
stc
loop
push
mov
mov
call
je
cli
ljmp
sahf
jg
sub
fstpl
test
inc
xor
and
ja
or
pop
sub
xor
nop
imull
add
daa
in
lret
push
repz
sub
push
or
xchg
push
movsl
js
out
jmp
sahf
mov
adc
and
or
mov
fists
cld
inc
push
jo
mov
leave
mov
mov
lock
xor
lods
fildll
js
cmpsl
sbb
dec
into
pushf
orl
ffreep
aaa
lcall
stos
or
outsl
ds
sbb
pusha
mov
sbbl
push
fsubs
sbb
and
sbb
inc
and
sub
call
push
push
addb
sbb
rcl
dec
mov
adc
adc
repz
fdivp
fiadds
mov
jo
xlat
jb
lcall
inc
cmpsl
push
pop
inc
xlat
scas
sbb
sahf
cld
mov
and
arpl
xchg
fisttpll
adc
push
cwtl
sbb
push
xchg
pop
pop
and
jle
and
inc
and
xchg
pop
fisttpl
int3
ret
shrb
mov
leave
test
dec
xor
push
mov
adc
decl
pushf
jno
ds
inc
into
mov
inc
insb
xchg
orl
les
ja
push
loope
sbb
pop
test
pushf
xchg
or
adc
adc
mov
dec
xchg
daa
jecxz
jp
mov
js
or
mov
xorb
mov
pop
bound
test
dec
mov
enter
icebp
dec
mov
cmp
imul
inc
inc
mov
aaa
push
xchg
dec
fst
inc
lea
add
xchg
and
je
jnp
push
shl
sahf
jmp
aas
push
inc
adc
and
fisubl
cmp
pushf
cltd
outsb
fcmovnbe
xor
cmp
sub
sahf
ss
scas
jno
ljmp
popa
mov
lock
shrb
fsts
sbb
mov
shll
or
fs
xchg
les
into
ds
pop
adc
scas
mov
sub
mov
aas
jp
dec
aam
fwait
jmp
jecxz
cmpsl
mov
xor
mov
cs
mov
scas
stc
divb
dec
sar
add
stos
push
cmpsb
out
mov
rcrl
inc
adc
and
fsubr
aad
fidivs
sub
xchg
and
cmp
and
cmp
mov
pop
ret
dec
or
movsb
xlat
sub
outsl
pop
jne
loopne
cmp
jmp
add
sub
in
push
iret
mov
push
or
cmp
outsl
lods
xchg
out
adc
mov
stos
xor
icebp
fdiv
dec
jo
iret
mov
and
stos
pop
pop
lods
pop
addr16
ret
out
sub
orl
xchg
fnstenv
pop
xor
jp
ds
xchg
pop
fdivrs
insl
loop
and
cwtl
jl
pop
lahf
pop
insl
jle
xchg
ret
adc
push
sbb
aad
cmp
movsb
outsl
test
divb
popa
sub
in
cld
cli
lods
ss
jmp
aas
nop
loope
fldcw
sub
xor
inc
sbbl
or
add
dec
jbe
or
and
pop
mov
mov
clc
mov
into
push
loope
es
sbb
sbb
cmp
ss
mov
and
xor
into
outsb
and
mov
scas
cmp
push
jno
mov
xor
movb
popa
add
mov
movsl
mov
rorb
dec
hlt
inc
mov
push
pop
in
sti
aaa
fiadds
call
mov
scas
or
dec
data16
mov
orb
or
adcl
cmp
lods
leave
mov
movsl
sbb
inc
mov
rcrl
pop
in
inc
pushf
sub
mov
pop
lods
inc
mov
xchg
xchg
sbb
inc
mov
dec
mov
mov
loope
push
insl
pop
out
mov
pop
aam
mov
outsl
dec
pusha
hlt
xchg
dec
xchg
gs
xchg
jmp
mov
test
mov
aaa
fistps
xor
lock
in
lods
shl
adc
adc
unpckhps
or
jp
jmp
into
movsl
mov
ljmp
mov
popa
cs
adc
adc
shll
daa
sub
push
jne
add
push
call
adc
aad
cld
push
insl
mov
adc
pop
mov
inc
lcall
je
adc
cmp
push
cmc
dec
mov
pop
push
add
mov
cmp
push
je
pop
enter
rorl
frstor
inc
xor
mov
inc
movq
inc
shl
adc
dec
and
xor
add
cmc
enter
add
aas
jecxz,pn
test
inc
xchg
dec
das
fcmovnbe
lcall
jg
lods
and
jecxz
fldenv
dec
loope
aas
int3
inc
jmp
jbe
add
adc
cmp
inc
cmp
aam
in
pop
or
scas
rolb
ja
iret
add
sub
cmp
adc
cwtl
xchg
in
jo
rol
cmp
outsb
add
add
rcrl
bnd
and
cmp
pop
inc
or
fisubrl
adc
cmpsb
test
outsl
stc
popf
or
push
cli
mov
jle
test
jne
mov
into
xchg
sbb
and
cmp
sub
fiaddl
negl
jmp
test
outsb
or
sbb
sbb
add
push
pop
pop
jmp
lock
lods
movsb
mov
jnp
xor
movmskps
or
sbb
popf
lahf
repz
or
and
cmp
and
mov
push
int3
or
stos
jecxz
gs
lcall
push
imul
mov
jmp
addr16
mov
loopne
jae
xchg
jne
jecxz
mov
loope
jns
inc
movsb
and
push
and
fildll
adc
cmp
lods
or
cli
mov
outsl
dec
adc
sarl
lahf
std
inc
rsqrtps
inc
fiadds
pop
out
jp
adc
push
les
int
jb
outsl
subl
outsb
insl
fisubl
mov
ficoml
insb
dec
and
imul
sub
popf
cld
das
cmp
adc
int
scas
ret
cmp
and
dec
inc
add
out
sub
int
dec
sbb
and
iret
jecxz,pn
repz
popf
mov
jns
repz
int3
mov
pop
mov
lods
mov
out
inc
dec
std
inc
out
insl
out
xlat
outsl
mov
mov
xor
out
scas
mov
mov
shrb
outsb
mov
icebp
cltd
fistpll
fldcw
cwtl
call
jp
and
xchg
es
out
scas
inc
out
xchg
mov
int
xchg
sti
xlat
cmpl
mov
sub
pop
xchg
push
test
add
mov
ss
cltd
mov
sbb
cmp
cmc
push
scas
push
push
add
jb
adc
push
lods
lds
inc
lods
xor
add
int3
push
mov
and
out
ficoms
mov
jmp
mov
rclb
mov
add
pusha
int
xor
dec
mov
push
loop
hlt
cld
daa
inc
push
push
push
dec
pop
xchg
xchg
arpl
push
xor
mov
mov
push
mov
call
pop
mov
sub
mov
mov
xor
mov
mov
sub
sub
adc
mov
push
fimuls
orb
jbe
subb
sbb
insl
pusha
dec
addr16
dec
xchg
inc
and
jno
dec
lahf
sbb
movsl
and
jmp
in
xchg
push
mov
and
mov
mov
inc
and
mov
xor
inc
popa
dec
adc
jno
inc
sahf
cmp
ss
test
push
or
btr
lcall
outsl
lahf
push
jp
pop
xchg
push
mov
notb
or
inc
push
cwtl
dec
adc
push
mov
xor
sbb
rcrl
dec
mov
xor
cmp
fstenv
push
andl
aam
mov
sub
jp
aaa
nop
arpl
xor
cld
in
add
push
insb
cmpb
scas
dec
loope
divl
xlat
mov
pusha
mov
mov
add
pop
bound
insl
test
in
push
lret
sub
mov
cmc
sub
and
repnz
aam
cli
jle
insl
data16
notb
stos
and
xchg
fwait
pop
cltd
cmp
mov
lret
pop
out
xchg
clc
ds
fidivl
fidivl
xor
xchg
out
popa
xor
xlat
xchg
dec
pop
sarb
pop
cmp
ror
xchg
or
sbb
aas
add
cli
push
repz
pop
push
cwtl
sti
idivl
pop
sub
ljmp
inc
arpl
fld
mov
movsb
mov
mov
test
jmp
mov
push
cmp
xor
or
popf
outsb
mov
pop
out
jl
pop
pop
mov
mov
pop
cltd
std
sahf
jg
orl
xchg
out
fwait
mov
dec
popa
push
jo
jns
sub
mov
or
cmpl
gs
int3
ja
add
jb
pop
cmpsb
sub
dec
add
cs
sbb
or
jbe
stos
pop
cmp
repnz
dec
scas
shll
imul
rolb
daa
gs
aam
daa
mov
daa
pop
cwtl
cmp
cmpsb
sub
stos
inc
mov
mov
ljmp
movsl
mov
movsb
ret
mov
mov
mov
fs
xchg
jg
inc
out
popf
sub
pop
push
pop
adc
sbb
scas
and
dec
jns
stos
cmpl
mov
movsb
loope
sbb
enter
sbb
mov
iret
add
mov
das
mov
adc
outsl
dec
mov
mov
and
das
mov
out
pushf
cli
sbb
pop
add
popf
imul
adc
or
mov
mov
addr16
inc
pop
enter
pushf
sbb
xchg
add
test
lds
mov
pop
push
scas
mov
inc
jns
stos
test
mov
neg
ljmp
mov
ficoml
fildl
lahf
cmp
pop
lret
dec
adc
in
jbe
movsb
pop
in
jmp
add
or
fdivp
lcall
push
push
jae
cmc
fstps
add
cmp
sbb
insb
arpl
inc
aam
sub
xchg
dec
or
mov
push
cmp
cmpsb
mov
cmc
cmp
pop
inc
push
inc
dec
std
fcmovbe
dec
loope
adc
pop
mov
ljmp
dec
insb
ficomps
xlat
dec
dec
add
jno
or
adc
ljmp
xchg
out
adc
add
daa
add
sbb
inc
pop
call
or
sarl
mov
sbb
addr16
push
cmp
rclb
inc
dec
int3
pop
lret
out
adc
or
add
inc
xchg
vpmacssdd
jne
add
orl
add
pop
sub
mov
or
lret
mulb
sbb
shlb
int3
mov
inc
daa
popa
or
orl
mov
lds
jl
mov
or
ja
push
sub
mov
mov
push
lea
jbe
shlb
subb
cmpsl
cli
xor
sbb
mov
push
sub
rcr
jno
mov
subb
repz
mov
mov
dec
fsubr
cmp
clc
shlb
and
insl
jle
movsl
push
aad
cli
mov
add
jbe
add
jo
adcb
or
xor
pop
and
imul
mov
out
push
push
fbstp
mov
jp
jne
sbb
out
stos
cwtl
push
xchg
pop
or
inc
fidivl
push
push
mov
or
and
sbb
das
xor
push
push
jle
push
in
mov
sahf
test
in
int
leave
or
jb
dec
cmp
rcr
mov
andl
lahf
lods
add
rcl
ss
es
xchg
aas
jmp
je
mov
inc
cmp
gs
dec
rclb
push
push
cmpsl
mov
std
mov
sbb
subb
mov
out
push
mov
jl
test
adc
push
dec
gs
incl
aad
adc
ret
stos
lods
mov
test
idivb
jbe
lret
mov
sbb
repnz
mov
inc
cmp
inc
imul
pop
cmpl
lcall
iret
or
xchg
and
mov
cmp
repz
push
jp
pop
jae
iret
pop
jno
imul
add
push
add
mov
mov
out
hlt
xor
rolb
popf
inc
rcrb
lods
popa
push
les
adc
cmp
lret
push
pop
les
cmp
fdivl
add
push
jp
sarb
movsb
xchg
jo
mov
push
sbb
dec
lret
mov
lahf
leave
jb
push
sbb
mov
mov
sahf
out
cmp
mov
scas
cmp
or
mov
dec
mov
lret
adc
aam
ret
push
in
rcl
int3
pop
dec
push
out
test
cmp
flds
insl
fbld
or
mov
aad
pop
jns
jno
es
repnz
es
out
sbb
imul
mov
notb
rcl
mov
sarl
cmp
rcl
test
pop
daa
xor
pop
es
pusha
testl
add
test
std
add
adc
push
mul
inc
loope
jg
xchg
mov
push
jae
mov
js
lcall
insb
xchg
sub
mov
xchg
pop
pop
imul
adc
push
imul
jl
cmc
test
adc
leave
and
stc
sub
pusha
ljmp
out
outsb
mov
jp
adc
lret
into
pop
psadbw
fsubrl
ljmp
xchg
push
sbb
in
bound
repz
jmp
lret
cmp
enter
push
mov
iret
mov
adc
stc
aam
sbb
hlt
xchg
sti
leave
fnstcw
adc
js
in
jp
rolb
sub
xor
mov
mov
cmp
aas
push
outsb
rolb
xor
stc
rcll
cmp
and
dec
cmp
sub
test
ja
adc
sbb
stc
inc
hlt
pop
jmp
data16
jge
adc
xchg
cmp
xchg
loop
shlb
jns
popa
nop
push
add
adc
outsl
adc
add
and
sahf
cmp
jns
mov
daa
push
ss
adc
mov
test
outsb
jae
scas
add
lds
cmpsl
sbb
lret
leave
insb
aam
ret
neg
pop
push
push
xor
dec
std
ljmp
sub
push
xchg
into
dec
sbb
loopne
scas
decb
mov
imul
jb
cmp
lahf
leave
cmpb
inc
jne
lods
sti
je
and
sbb
insl
push
xchg
adc
fsts
sahf
pusha
sub
adcb
and
cmp
insb
paddd
sub
jmp
out
push
cld
ja
sahf
ret
scas
sbb
fldt
fsubs
pop
je
insb
mov
mov
jb
dec
int
push
aam
stos
gs
mov
outsb
push
jno
cmpl
xchg
fninit
xchg
jo
mov
call
mov
test
cmpsb
mov
loop
inc
sbb
fdivs
mov
lods
ficompl
das
addr16
mov
jno
xor
mov
fstl
test
decb
imul
inc
iret
xlat
pop
push
jnp
mov
xchg
and
mov
jbe
mov
repz
les
mov
out
gs
xchg
outsb
xchg
pop
leave
stc
out
xor
sub
les
lahf
mov
mov
icebp
frstor
fs
insb
or
push
ret
inc
inc
pop
xchg
daa
jno
jo
sbb
mov
addr16
mov
movsb
pop
jbe
or
mov
dec
mov
cltd
mov
fucom
and
and
loope
gs
inc
int3
adc
adc
sbb
fisubs
aaa
sbb
mov
sbb
pop
mov
movsl
in
sub
andb
into
rol
and
out
sbb
divl
jmp
shrl
adc
and
add
lods
aaa
cmp
xchg
outsb
xor
sahf
jl
push
lcall
xchg
dec
std
fs
mov
faddp
inc
jmp
mov
fistl
xor
add
jns
in
jp
subb
xor
inc
cmp
bound
and
out
push
ds
outsb
xor
clc
pop
fisubs
adc
or
mov
aaa
cmp
and
loop
fldt
daa
das
or
mov
iret
sub
addb
repnz
add
les
adc
movsl
pusha
cmpl
sbb
xchg
fnsave
cmp
dec
gs
jecxz
dec
fldl
jnp
cmp
inc
mov
and
jle
stc
lods
mov
xor
xor
xchg
aam
add
xchg
stos
cmp
fwait
in
cmp
push
mov
ss
mov
sahf
das
vmwrite
sbb
clc
xor
or
outsl
in
xchg
push
xchg
pop
lret
out
mov
test
mov
inc
fcoms
lret
adc
xor
sub
movsl
out
lahf
pop
es
and
nop
outsb
fnstsw
loope
fwait
decb
imul
mov
mov
lds
pop
cmp
daa
adc
push
popf
les
mov
jno
xchg
pushf
inc
and
shrb
lret
ret
dec
ficomps
mov
test
jo
add
xchg
jns
out
cmp
inc
or
mov
fbld
sbb
lods
test
aad
das
mov
cmp
loope
icebp
fists
lods
and
jnp
mov
and
pushf
fwait
das
or
fnsetpm(287
jp
aam
aas
lods
inc
sbb
fdiv
jb
scas
dec
daa
dec
dec
mov
test
mov
popf
cmp
xchg
enter
xor
insb
addl
test
test
xor
outsl
jae
jp
inc
cmp
je
add
cltd
xchg
nop
fisubrs
pcmpeqb
sbb
and
out
inc
mov
xor
iret
out
adc
dec
cmovs
pop
cmp
xor
xorb
popa
scas
lret
lea
aaa
xor
pop
push
imul
ljmp
cli
loope
scas
or
lods
fsubrl
inc
pop
or
mov
sub
daa
push
and
mov
daa
xor
cmp
sbb
sarl
xor
inc
movsl
pop
sbb
ds
lock
lcall
cmp
pushf
cmp
sub
and
mov
xchg
icebp
mov
arpl
jo
inc
jo
and
ret
sub
mov
xor
push
cltd
fcoml
xor
xchg
cwtl
jo
idivb
cmpsb
les
cmpsl
xchg
test
into
lock
or
pusha
add
rorl
in
mov
sbbb
lret
fildll
into
cmp
js
or
shrl
or
and
cmp
mov
and
ds
clc
out
insl
sub
add
lcallw
rclb
jnp
mov
xchg
xor
ror
add
int
lcall
xchg
jp
notl
pushf
push
shlb
jnp
mov
jl
mov
scas
inc
cmp
cmp
std
inc
adc
mov
inc
jno
pop
loop
mov
xor
xchg
mov
lahf
lds
loop
sub
movsb
dec
push
int3
push
int
outsl
lret
xchg
clc
mov
mov
or
dec
lea
cs
into
daa
mov
adc
or
cmp
xor
ljmp
inc
inc
or
leave
sbb
popf
outsl
std
mov
push
loope
xchg
adc
adc
pushf
push
and
and
sub
sbb
xor
mov
sbb
adc
jle
xor
mov
pop
mov
popa
subl
inc
popf
mov
and
fs
or
cmpl
xchg
dec
mov
outsb
int3
scas
jmp
mov
adc
ja
mov
adc
lahf
xchg
in
push
out
mulb
sub
in
push
xchg
cltd
cli
test
les
lds
loope
inc
fsubl
add
sti
adc
in
add
lcall
call
inc
add
xchg
inc
cmpsl
push
out
cmp
ss
pushf
push
mov
inc
aam
and
loop
or
outsb
out
mov
std
or
inc
jmp
dec
inc
pop
xor
sbb
jmp
in
sub
and
jle
cs
int3
xor
sarb
nop
sub
adc
mov
push
ljmp
jp
into
jg
inc
insl
outsb
adc
push
jne
push
imul
push
mov
gs
pop
sub
cmpsl
jecxz
mov
ss
hlt
out
jb
push
or
adc
jns
xchg
jmp
pop
or
sub
outsb
sbb
cwtl
popf
icebp
and
sbb
dec
ja
xchg
or
pop
vshufps
subb
add
xlat
mov
loope
je
shl
dec
dec
lods
scas
cmp
cmove
xchg
adc
pop
idivb
mov
rcrb
sbb
dec
cmp
dec
fistps
int3
or
add
mov
dec
cmp
lea
or
arpl
or
mov
outsl
paddd
test
pop
mov
push
cs
add
sub
mov
ljmp
cmpsb
push
jb
loope
mov
ja
pop
fcmovnbe
sti
insb
aad
inc
cmp
dec
xor
scas
sti
push
adc
xchg
xchg
aad
in
adc
push
mov
jb
cmp
or
mov
pusha
jne
loopne
sbb
jno
push
push
xor
or
xor
add
in
fidivrl
rclb
test
dec
dec
xor
loop
dec
daa
dec
push
and
scas
sub
aas
xchg
scas
sahf
push
push
dec
jno
fdivs
loop
in
xchg
mov
fs
rol
imul
xor
jae
jns
lock
imul
jbe
lret
or
call
icebp
lea
mov
inc
sbb
xor
popf
sbbl
xchg
cmp
fnstenv
xchg
and
cli
push
ud2
xor
push
fwait
adc
lods
jb
jbe
xchg
out
mov
popf
sub
xor
inc
call
inc
std
fisubs
add
or
jno
sbb
iret
inc
stc
or
into
call
xchg
cld
lods
xchg
fisttps
lds
push
shlb
mov
mov
add
pop
icebp
punpckldq
pop
sbb
cmp
jle
sbb
jl
imul
bound
mov
sar
test
xchg
idivb
fcompl
nop
xchg
arpl
sbb
stc
push
xchg
dec
xor
push
pusha
es
sub
cld
jge
clc
jo
daa
out
fldenv
or
stos
shlb
push
add
xchg
sahf
jbe
push
outsl
cmovbe
cmp
mov
out
je
dec
aas
dec
adc
inc
push
xor
and
aad
fistl
jne
test
in
nop
inc
addb
push
lret
cmp
outsb
dec
xor
or
data16
adc
cld
imul
je
iret
pop
out
addr16
test
dec
xchg
dec
in
ds
cmp
xor
or
mov
addr16
jmp
jle
je
sti
cmpsl
ss
ss
cmp
fildll
es
shlb
mov
out
pop
call
cmp
sti
xchg
jnp
fs
sbb
pop
pop
cli
cmc
sahf
adc
inc
xchg
pop
mov
or
js
adc
dec
out
xor
xchg
inc
mov
xor
dec
scas
sti
add
add
or
inc
inc
cld
pushf
enter
jno
and
jmp
dec
aaa
add
int
out
inc
push
out
fnstenv
jl
aaa
ja
rol
insb
push
inc
int
aam
cmp
xchg
or
jbe
and
daa
mov
ds
sub
movsb
fwait
addr16
mov
sbb
mov
icebp
pop
sbb
dec
jne
mov
and
pushf
stos
lods
and
cmp
or
mov
push
cmpsl
inc
loop
push
pop
int3
cmc
dec
ror
test
push
pop
jmp
xchg
mov
xchg
movsb
aam
iret
push
ret
es
and
xchg
pop
pop
sub
mov
subl
sub
jle
or
lret
adc
and
inc
mov
es
fisubs
aas
in
sbb
lock
cltd
loopne
das
xor
in
repnz
loopne
mov
repz
insl
daa
add
sahf
aas
adc
test
outsb
push
es
out
dec
pop
addr16
ss
or
es
cld
push
call
icebp
pop
jnp
xlat
pop
pop
in
xor
fs
inc
test
lea
aam
out
jmp
rclb
ret
mov
inc
roll
mov
ss
xchg
push
sub
fbld
call
std
dec
adc
lods
fsts
sbb
iret
dec
addb
ret
jb
stos
xchg
inc
out
add
cmpsb
subb
movsb
fs
sbb
xor
jge
daa
mov
cmp
test
dec
add
dec
xor
jns
in
cltd
inc
mov
bound
inc
test
mov
jno
jle
call
sti
ss
jb
add
jno
xchg
addr16
pop
xchg
pop
das
inc
push
test
mov
dec
sub
mov
mov
add
stos
fnstsw
xchg
popf
xor
js
ljmp
sbb
repz
int3
sub
mov
enter
add
mov
stos
gs
rclb
inc
fistpl
or
mov
dec
movb
push
cmp
cltd
roll
test
inc
xchg
sub
sbb
shrb
mov
fnstcw
adc
mov
pop
push
add
mov
inc
push
into
pop
fmull
stos
in
or
pop
ficoml
nop
es
xchg
lock
mov
popf
dec
jns
or
andb
outsb
fs
es
ret
mov
mov
jae
test
xchg
cwtl
lret
jnp
out
cwtl
ret
mov
mov
cmp
es
mov
ss
dec
pop
dec
mov
cs
mov
mov
outsb
dec
xchg
gs
fistpl
pop
lcall
or
aaa
dec
jp
rolb
inc
jp
or
pop
xlat
test
jne
leave
xor
and
push
mov
gs
fstp
jmp
inc
mov
jge
jbe
and
aaa
sbb
jbe
mov
mov
pop
les
scas
jno
neg
xor
mov
sbb
pop
in
sbb
add
adc
popa
pop
push
std
add
cli
jecxz
enter
mov
mov
fcoms
cmc
testl
jmp
push
jbe
iret
xchg
sub
mov
je
mov
adc
jns
push
inc
or
xor
sub
push
and
push
xor
push
lea
pop
in
sbb
in
bnd
jne
adc
clc
sbb
dec
es
adc
pop
and
insl
dec
fsub
popa
aas
push
and
sbb
inc
cs
add
sub
sbb
scas
je
jmp
jne
push
arpl
sub
jne
sub
mov
roll
adc
stc
sbb
add
jge
inc
xor
aas
sti
add
insb
arpl
mov
jle
es
pop
cltd
mov
cwtl
fs
nop
int
out
negb
xchg
xchg
addr16
sub
jp
popf
arpl
stos
outsl
addb
cmp
xor
popf
dec
movl
dec
pop
stos
push
and
es
cmp
inc
cmc
lcall
adc
das
adc
stos
mov
push
fcmovbe
ljmp
pop
push
pop
icebp
mov
add
repnz
inc
jmp
lcall
mov
and
dec
sbb
ja
dec
aad
pop
add
test
int
mov
iret
out
xor
dec
nop
push
push
ret
in
pop
cmpsb
imulb
cmp
mov
pop
cltd
xor
xchg
mov
movsb
inc
xor
xlat
rclb
push
or
in
cmpsl
scas
sbb
mov
call
addr16
divl
aam
adc
bound
call
xchg
fs
sbb
pop
daa
mov
push
xor
mov
cwtl
popa
enter
pavgb
xchg
fstpl
xchg
xchg
sub
push
push
cmpsl
xchg
test
hlt
dec
sbb
fidivl
loop
mov
icebp
xor
and
imull
jne
mov
pop
jle
xor
sarb
inc
push
mov
pop
mov
or
insl
cld
jmp
mov
negb
aas
mov
cmp
jecxz
pop
cmpsb
clc
fucom
data16
sub
fisubrs
cli
push
icebp
js
jbe
sbb
mov
inc
lds
repz
jb
jb
cmpsb
dec
stos
xorl
aad
repz
movsb
daa
clc
pusha
movd
popf
in
xchg
addl
sub
inc
pusha
cwtl
push
mov
cmp
lds
push
aam
out
mov
pop
in
scas
test
insb
lahf
xor
adc
xchg
test
inc
add
xchg
push
jle
mov
inc
ficoms
lds
mov
jnp
adc
cmp
jb
ds
mov
lahf
add
mov
and
mov
mov
ret
mov
lret
imul
and
pop
sahf
cmp
dec
xchg
pop
loopne
mov
rolb
sub
lods
stos
in
insl
dec
daa
ss
dec
int
and
rcr
jge
and
insl
adc
shll
stos
dec
int
imull
shlb
mov
mov
dec
into
add
scas
mov
mov
int
xchg
cwtl
in
sbb
lods
cmp
and
push
js
mov
fnstcw
xor
push
pusha
sub
lock
adc
xchg
mov
jne
xlat
hlt
mov
mov
sar
pop
test
xchg
push
into
je
add
icebp
mov
aas
jns
add
lret
ret
inc
movsb
fstps
sub
cli
fdivp
into
add
lret
push
pop
inc
push
mov
mov
inc
mov
fbld
adc
clc
bound
shll
or
jb
nop
into
add
outsb
sbb
scas
aad
mov
and
lods
jae
leave
lods
js
or
jl
ds
push
xchg
cld
jmp
or
leave
pop
loop
in
ljmp
or
sbb
fsubrs
push
inc
nop
mov
out
cmp
insb
adc
decb
fsubrl
ss
xorl
ficompl
mov
push
adc
daa
inc
dec
repz
sbb
fiaddl
and
insb
cld
adc
aam
push
sti
and
dec
inc
pop
sbb
or
cmp
mov
test
sub
xchg
icebp
sub
push
lret
cld
fwait
push
and
add
imul
xchg
mov
mov
outsl
fldl
sbb
ja
fistl
sbb
aaa
jl
mov
outsb
sub
int
scas
cmp
test
xor
push
les
lods
push
jae
rclb
cld
and
mov
filds
lea
cmp
or
mov
push
das
dec
pop
sub
sbb
or
pop
push
into
lret
jecxz
inc
cltd
mov
xlat
stos
into
out
pop
jne
mov
jg
shlb
mov
dec
sbb
adcb
push
xorb
push
mov
mov
arpl
std
add
sub
lea
repz
mov
jg
repz
and
push
push
pop
jle
dec
jmp
mov
dec
mov
pop
sahf
push
lds
mov
pushf
and
loope
shlb
cmp
add
add
mov
push
dec
out
icebp
popa
xlat
leave
nop
add
mov
scas
cs
stc
mov
in
push
cmc
pop
in
test
mov
test
inc
push
dec
shl
cltd
into
and
pushf
cmp
pop
xchg
daa
add
in
iret
mov
icebp
movsl
in
ja
imul
aam
pushf
sbb
dec
cwtl
dec
mov
fisttpll
int
mov
and
xor
lods
popf
shrb
sub
jge
jmp
pop
loopne
imul
mov
outsb
add
frstor
inc
fidivrl
cmpsl
dec
jb
mov
adc
jmp
icebp
mov
or
and
repnz
cwtl
xchg
loop
jnp
ja
movsl
xor
adc
clc
cltd
dec
insl
mov
js
dec
mov
sahf
pop
sti
sub
shlb
or
or
in
mov
shll
mov
mov
out
cmpsl
movsl
loop
xor
mov
and
or
xchg
adc
mov
loopne
lock
adc
sbb
je
shrl
pop
aaa
js
enter
sarb
shr
aas
and
sub
test
shl
and
mov
fcomi
outsl
pop
rcr
jl
sub
xlat
inc
jle
push
lock
mov
sub
ja
scas
dec
mov
sbb
test
jno
dec
andb
inc
and
mov
pop
mov
lds
xor
sti
imul
mov
lret
stc
pop
arpl
fwait
bound
mov
push
mov
test
and
mov
mov
cmpsb
movsl
inc
lret
push
push
mov
sub
out
sti
push
adc
jae
insb
lcall
in
xchg
call
inc
sbb
mov
cmpsb
in
dec
mov
mov
mov
in
test
add
insb
lock
test
dec
jmp
rcrl
aaa
mov
sub
repz
push
data16
rcll
and
stos
dec
jne
fdivrp
push
lret
test
out
push
add
popf
jecxz
xor
adc
cli
and
sub
jp
pop
call
adc
add
sbb
jbe
scas
cwtl
outsb
mov
dec
jl
sar
je
ret
inc
ss
stos
push
rcll
adc
lret
and
mov
sbb
adc
mov
push
pushf
stc
repnz
mov
addr16
or
jle
out
test
shl
andl
xor
imul
fistpl
divl
jmp
or
nop
jmp
mov
mov
imul
mov
xor
mov
sbbl
mov
test
sbb
mov
xchg
and
sub
pushf
cmp
aaa
xor
fs
cmpsl
or
js
pop
repz
push
cltd
ss
fs
aas
or
inc
cmp
jge
scas
rcrl
mov
mov
cmc
icebp
bnd
jp
aaa
fidivrs
add
dec
test
xchg
ficoms
pop
mov
cmp
pushf
test
loope
pusha
decl
pop
xchg
push
dec
mov
es
dec
cli
in
sti
out
movsb
nop
out
stos
je
inc
cmp
jb
mov
leave
mov
jbe
xchg
addl
int
clc
jo
xchg
mov
lahf
add
gs
pop
in
pop
jo
mov
aas
xor
outsb
dec
daa
mov
and
popf
daa
mov
mov
sub
inc
dec
cmp
test
divb
xchg
ret
lcall
adc
cmp
adc
andl
sbb
or
loope
fadds
fwait
cmp
lods
out
inc
sarl
movsb
add
adc
in
or
mov
mov
push
imul
mov
insl
cmp
xor
adc
lahf
xlat
arpl
hlt
lock
dec
mov
ficoml
pop
jmp
int3
pop
shll
and
rcr
ret
pop
inc
ror
jp
int
dec
pop
addl
mov
cli
inc
xchg
ja
movsb
rorl
pop
les
push
mov
sub
xor
das
push
xor
and
movsl
mov
les
imul
inc
dec
inc
mov
stos
mov
sub
xchg
pop
ss
adc
mov
rorb
mov
mov
jecxz
test
mov
sub
jo
out
dec
js
push
arpl
test
xor
std
dec
icebp
clc
rolb
sbb
loope
push
mov
cld
bound
aaa
cltd
pop
push
ja
or
add
jmp
pop
push
push
push
fisttpl
les
lahf
push
out
in
stos
out
pop
or
jno
fs
movsl
sub
cltd
sbbb
pop
fdivl
mov
pop
lret
mov
mov
loopne
cmp
mov
cmpsb
mov
insb
cltd
cli
inc
cmpsb
js,pt
icebp
test
ret
icebp
xchg
pop
fcomi
dec
push
enter
xlat
xchg
pushf
sub
jb
fdecstp
cwtl
loop
mov
popf
dec
outsb
dec
mov
imul
and
push
add
jmp
pop
push
add
jns
dec
or
pop
cmp
in
popf
pop
call
mov
adc
cmp
sbb
push
in
mov
push
test
xchg
push
test
cmpsb
cltd
xchg
imul
ret
inc
xlat
loope
and
inc
pop
ljmp
jns
in
ret
loopne
jne
in
xchg
das
shl
mov
adc
push
subb
ljmp
pushf
or
and
popf
cld
aad
or
dec
cmpsl
les
mov
sub
mov
pusha
lds
xchg
pop
arpl
inc
and
icebp
aad
pop
mov
push
adc
call
scas
negb
in
mov
fcoms
imul
add
pop
daa
mov
dec
push
lret
add
popa
lods
or
sub
int
orl
push
sub
inc
call
add
xlat
pop
push
mov
pop
xchg
add
nop
fidivl
mov
pop
add
cld
sub
and
js
add
cmp
mov
push
stc
adc
push
lds
cli
imul
fnstenv
jae
or
xor
data16
sbb
pop
pushf
stos
out
add
lock
sbb
daa
movsb
loop
xchg
movsl
jbe
sbb
out
xor
shll
sub
in
mov
shlb
leave
cmpl
jg
jae
push
sbb
add
mov
or
adc
dec
addl
stos
sub
xor
in
icebp
xlat
jns
adc
out
int3
repnz
and
mov
mov
dec
aaa
imul
int
jge
cmc
adc
repz
dec
add
lret
test
arpl
push
mov
mov
dec
gs
jnp
dec
icebp
hlt
cs
je
mov
pop
cmc
push
std
das
jge
push
fsubl
bound
xchg
xor
mov
push
aam
xor
in
fwait
cmp
sub
mov
lret
cmpsl
fwait
call
mov
arpl
pop
loope
dec
push
fidivrl
lock
mov
mov
jmp
inc
dec
add
out
jno
sahf
push
mov
adc
js
mov
shr
add
aaa
mov
mov
jle
sbb
out
mov
test
lds
dec
or
divb
pop
mov
sbb
repnz
clc
pop
xor
lea
andb
dec
push
imul
pop
movsb
mov
shll
xchg
stos
jbe
movsl
mov
ja
stos
mov
jne
sub
shr
daa
test
out
cmp
jns
das
xlat
xchg
sub
jg
cltd
adc
pusha
inc
repz
xor
daa
add
add
in
arpl
inc
pop
imul
fsubs
cmpsb
or
std
mov
fstps
andb
dec
push
xor
dec
testl
fcoml
mov
movsl
xor
stc
pop
mov
cld
mov
pop
add
pop
lock
rcrl
jno
xchg
inc
inc
fmull
out
add
imul
repz
test
jg
jns
arpl
push
pop
out
fsubrs
push
lds
sub
inc
pop
cmp
lahf
mov
shrl
sti
pop
sbb
clc
push
dec
mov
inc
sbb
inc
fnsave
fs
pop
mov
mov
add
pop
xchg
cmp
sbb
sbb
fistpll
das
cmp
shl
xchg
inc
aam
dec
test
pop
loope
lods
push
inc
push
out
push
sub
xor
or
fistps
mov
imul
mov
imul
cmp
out
pop
fldt
lea
jl
test
stc
sub
push
fstps
sbb
xchg
cmp
notl
mov
or
jl
sbb
pop
dec
dec
sarb
loop
mov
rcll
inc
not
xor
or
push
iret
ds
xor
inc
cmp
sbb
mov
jmp
push
int3
or
shlb
inc
scas
outsb
roll
or
pop
pop
out
mov
scas
xchg
lods
in
aas
aam
ret
insb
push
adc
push
repz
sub
xor
fs
xchg
mov
out
and
test
add
dec
lock
and
daa
or
mov
and
mov
and
mov
mov
ljmp
loope
jge
rcr
scas
lret
cmp
in
mov
inc
mov
xchg
nop
sbb
loopne
jge
sub
inc
sbb
inc
bnd
xor
add
xchg
or
cmp
repz
add
mov
inc
sbb
daa
sub
in
mov
add
push
cltd
clc
pop
sbbl
clc
jnp
imul
aam
shrl
sbb
xchg
jb
and
ret
add
test
and
cmc
lock
xchg
sbb
enter
add
outsl
xchg
fwait
mov
ss
int
push
inc
or
jle
pop
loop
in
mov
dec
call
and
and
fistpl
lcall
add
pop
insb
push
lds
mov
and
ljmp
xchg
mov
adc
cli
adc
or
sahf
and
insl
leave
cmpl
lcall
sahf
adc
movsb
push
lock
cmp
inc
xor
pusha
enter
hlt
mov
insl
cmpsb
insl
jne
repnz
lea
lret
fs
inc
imul
jns
pop
xchg
out
xchg
inc
and
sbb
shr
add
cmp
ljmp
in
sbb
cs
cmpl
xlat
aaa
or
adc
cmp
cltd
inc
adc
or
in
imul
fisubrs
in
aam
fs
cltd
or
imul
cmp
jo
dec
dec
push
jp
and
xchg
dec
push
or
pushf
mov
xor
shr
mov
arpl
mov
mov
rcrb
and
fs
aam
shr
imul
adc
dec
mov
cltd
xor
mov
inc
lods
push
dec
test
add
sbbl
jae
fcomip
jo
scas
pop
xchg
test
dec
jg
push
sbb
xchg
sbb
enter
jmp
mov
loopne
cwtd
pusha
addl
cmp
int
mov
cmpsl
xchg
pop
lods
mov
mov
out
aad
add
idiv
iret
add
insl
rcrb
icebp
cmp
xchg
jmp
xchg
psrld
sarb
scas
jo
cmpsb
mov
ret
jg
and
popa
adc
push
sbb
fwait
xor
inc
adc
mov
jns
scas
loope
enter
push
push
dec
clc
add
insb
cmp
in
cli
adc
aaa
jno
cmp
mov
mov
cmp
std
mov
out
push
testb
cltd
iret
out
scas
and
test
sub
adc
lock
mov
mov
pop
ljmp
cmp
push
je
push
shll
cli
imul
jl
add
jl
arpl
xor
popa
aad
mov
rdmsr
xlat
lods
popa
popf
pop
ret
push
xchg
testl
push
stos
inc
sbb
sti
jg
jmp
sub
or
into
add
lods
push
or
out
lret
into
repz
mov
fs
loop
lds
pop
aaa
xchg
dec
pop
scas
mov
dec
scas
add
cmpsb
pop
jmp
jnp
cmp
push
sub
push
out
imul
bound
add
hlt
adc
movl
sahf
sub
fdivp
cltd
sbb
pop
mov
lahf
in
and
nop
cmp
inc
sbb
ljmp
cmc
jo
xchg
aad
cmc
mov
aad
gs
cmp
mov
xor
addb
fisubl
movsb
lret
cltd
out
insl
adc
call
cltd
sbbb
arpl
bound
cltd
inc
int
into
adc
scas
fwait
in
movsb
in
mov
dec
ljmp
mov
stos
insb
loopne
js
dec
xchg
nop
mov
das
fdivrl
loop
mov
and
push
jnp
pop
pop
mov
jge
adc
dec
dec
ret
pop
je
rcr
enter
stc
add
xor
add
mov
or
ss
mov
int
call
repnz
stc
xor
pop
pop
in
std
push
sbb
adc
scas
pop
call
stos
movsl
iret
in
or
pop
inc
add
stc
push
clc
or
and
aam
aam
dec
addl
mov
dec
mov
cmp
leave
mov
cmpsl
xor
insl
add
sbb
mov
push
ljmp
mov
adc
mov
add
dec
sub
jo
bound
sahf
imul
jbe
sub
clc
xor
mov
popa
jle
push
hlt
mov
xlat
jg
jno
pop
mov
jne
mov
rorb
and
add
stc
push
insb
xor
in
addl
and
call
nop
pop
fwait
inc
dec
repz
add
pop
sbb
lret
cld
imul
int3
jo
cmpsb
pop
cmpsl
xchg
sbb
and
push
jg
in
lcall
addb
add
sbb
fstpt
ret
add
loopne
add
imul
pop
pop
lret
adc
xor
scas
cmp
push
mov
mov
in
push
xchg
shrb
lods
int3
mov
xor
pop
push
xor
push
rolb
jge
enter
pop
dec
rorl
pop
xor
add
cmp
push
mov
jnp
add
push
mov
pop
pop
lret
jmp
xchg
in
cmp
cmpsb
fsubl
loope
adc
pop
push
lods
rcr
lcall
pusha
pop
inc
mov
xlat
outsl
jo
mov
in
or
xor
imull
push
outsb
mov
pop
push
fstpl
cmpsb
mul
jae
push
pop
imul
repz
fstps
or
sbb
lods
mov
and
and
add
arpl
movsl
and
cli
lahf
sub
cmp
mov
movsb
xor
loopne
sbb
in
shll
popf
addb
cltd
cvtpi2ps
test
dec
movsb
shlb
test
jae
ret
inc
xlat
icebp
and
and
adc
leave
xor
add
adc
push
and
fmul
mov
les
fistpll
outsb
imul
xor
outsl
push
out
call
jg
sarb
xchg
sbb
cmpsb
nop
daa
xchg
rorl
xchg
mov
loope
or
adc
fstps
int
mov
mov
inc
mov
cmp
jbe
adc
jecxz
iret
into
test
aaa
ror
fs
in
sub
data16
xchg
jns
fsubs
mov
adc
ret
outsl
andb
dec
sarl
std
into
aam
sbb
rolb
dec
mov
mov
mov
lock
dec
pushf
jno
push
sbb
out
enter
bound
jle
insb
loope
inc
data16
out
fldl
cld
arpl
push
push
mov
mov
shlb
inc
cmp
rcrl
add
rcrb
test
add
fisubrs
and
cmp
dec
cltd
xchg
aaa
incl
jb
movsb
movq
lret
loop
lds
xchg
movsl
icebp
sub
xor
pop
in
mov
mov
xchg
outsb
idivb
inc
or
scas
adc
cmp
push
stos
mov
out
jb
cld
inc
loopne
bound
inc
jl
xor
aam
out
jmp
mov
mov
mov
mov
push
loopne
or
aas
roll
lcall
in
lcall
sub
in
mov
mov
mov
pop
dec
cmp
shrl
mov
les
push
es
arpl
add
gs
bound
inc
and
xchg
out
push
outsl
jno
pop
cli
out
pusha
jle
dec
jmp
inc
add
dec
iret
xor
sbb
clc
adc
sbb
pusha
aad
pop
das
inc
scas
pop
jl
push
cmp
and
cltd
out
pusha
int3
sub
fsubrs
cmp
sbb
sbb
in
push
jo
adc
or
jge
xchg
jmp
dec
mov
pop
mov
xchg
jo
jne
jb
sub
dec
rolb
xchg
xor
xchg
in
push
scas
mov
fwait
xor
xchg
out
xchg
mov
jo,pt
add
adc
xchg
out
sub
ss
aas
push
mov
test
nop
in
jg
sub
inc
dec
jl
push
inc
out
jmp
pop
mov
stc
fdiv
ret
jmp
mov
push
cmpsw
cmp
lods
test
aas
mov
aas
adc
xor
js
adc
mov
lahf
mov
xchg
nop
lods
test
lret
pop
ret
cmp
pop
shl
lods
mov
mov
sahf
ljmp
push
outsl
in
out
sbb
and
dec
sti
sbb
adc
sub
mov
adc
cmpsb
sbb
insl
adc
jnp
adc
sub
jle
movsb
fdivr
adc
fnstenv
lahf
sqrtps
cmp
jecxz
and
dec
xchg
or
stos
ret
cli
scas
push
lcall
adc
sbb
dec
ret
lret
add
push
add
pop
or
xor
add
mov
pop
xchg
mov
sub
add
inc
mov
addb
jnp
jg
mov
xchg
adc
xchg
or
and
fisubrl
in
mov
adc
jno,pt
out
and
es
mov
adc
insl
popf
scas
icebp
inc
pop
scas
std
filds
repnz
out
and
test
jle
cs
imul
sbb
mov
pop
andl
test
pop
fs
and
xor
sbb
or
mov
into
imul
mov
inc
and
pop
mov
test
das
pop
idivb
jmp
dec
push
push
or
sbb
lods
loop
sbb
fwait
mov
daa
test
adc
pop
jl
xchg
sti
cli
sub
pushf
stc
inc
xchg
sbb
mov
inc
sub
les
scas
repnz
jg
das
adc
das
in
pop
decl
xchg
and
and
pusha
je
dec
or
rorb
hlt
fisubs
pop
pop
int3
pop
imul
or
cltd
ja
loop
or
inc
nop
add
cmp
call
mov
repnz
mov
jbe
mov
pop
rcll
je
pop
es
leave
and
mov
mov
add
scas
stos
mov
mov
mov
xchg
fwait
outsb
push
imul
dec
or
loope
shrb
xor
test
test
fstl
mov
sti
mov
mov
js
aaa
fs
sub
jbe
imul
ret
in
repz
mov
scas
lds
push
ljmp
wbinvd
lods
jg
xchg
or
fistpll
repnz
cwtl
push
mov
lret
cltd
xor
jl
in
icebp
push
scas
and
loope
push
sbb
aad
mov
push
lret
imul
or
insb
mov
mov
and
xchg
push
cmp
sbb
mov
sub
push
repz
add
in
das
pop
es
pop
adc
data16
test
lret
lods
cld
mov
and
in
jne
test
sbb
inc
je
mov
pop
pop
loopne
mov
ret
sub
inc
in
dec
movsb
or
sbb
scas
adc
push
pop
and
cwtl
and
test
popf
das
sbb
mov
sahf
jne
mov
cmp
jns
push
ljmp
fisubl
add
inc
iret
mov
and
loop
lret
dec
test
pop
int3
adc
fstpt
push
jg
gs
dec
shlb
push
jne
inc
add
push
sbb
dec
fdivrs
arpl
pop
pop
lret
in
out
shll
mov
jmp
adc
xchg
mov
mov
jbe
inc
scas
test
cmp
je
iret
xchg
movsl
imul
outsl
or
pop
cmp
imul
or
cltd
pop
xor
xor
movsb
frstor
pop
jmp
outsl
push
iret
imul
mov
or
mov
xor
fs
ret
pop
jbe
adc
pop
insl
push
sub
out
fimuls
inc
aas
enter
notl
pop
lea
lahf
in
rclb
ss
ds
and
push
es
mov
xchg
push
xchg
adc
push
cmp
hlt
adc
sbb
mov
lods
stc
pop
mov
stc
rorl
in
push
cmp
lock
movsb
out
or
xchg
lods
sbb
fsts
inc
lock
xchg
pop
insb
jno
jmp
popf
int3
xchg
dec
mov
lds
push
mov
mov
ss
mov
push
jle
and
mov
std
mov
xlat
push
and
insb
lock
dec
pop
call
jae
sub
jl
xor
or
jecxz
lcall
inc
dec
xlat
adc
stos
inc
cmpsl
in
loop
or
inc
mov
inc
jmp
cmp
cltd
movsb
xor
xlat
insb
pusha
adcl
xor
pop
cli
jo
mov
das
out
roll
dec
mov
lret
pop
repnz
mov
mov
jp
icebp
stos
xchg
popa
es
loope
pop
mulb
add
sbb
mov
ss
push
xchg
nop
movsl
add
cli
inc
or
leave
sbb
out
sbb
cli
rcrl
xor
mov
and
test
outsb
pop
outsb
lds
or
cmp
lret
jae
lcall
sub
adc
bound
test
or
scas
out
pop
mov
outsl
push
xchg
loope
dec
lds
scas
xchg
roll
and
mov
xchg
add
loop
div
xor
int
sbbl
in
clc
mov
data16
int
jbe
daa
push
xchg
cmc
xor
jnp
rcrl
xchg
ret
push
push
sbb
insb
push
gs
adc
aas
popa
push
mov
dec
push
hlt
rcrb
sbb
jecxz
and
mov
arpl
xchg
add
mov
cmp
dec
jp
loopne
pop
test
push
int3
mov
sbb
xor
cmpsb
pop
and
or
jbe
mov
into
inc
aas
sub
imul
or
jecxz
push
lods
addb
test
sub
mov
adcl
pop
mov
stc
push
cmp
xor
dec
pop
mov
mov
out
or
sub
inc
mov
xchg
jo
into
test
cs
dec
push
fnstcw
lret
cld
xor
xchg
pop
or
xor
xchg
clc
push
push
ja
pop
xor
stc
adc
mov
mov
xlat
adc
addl
xor
pop
jp
sub
hlt
lcall
mov
adc
fcompl
push
inc
popa
lods
add
mov
fmul
xchg
sbb
ljmp
jno
push
cmp
xchg
and
outsb
adc
in
sbb
shrl
inc
cmp
ljmp
xor
sbb
mov
pop
jne
mov
lods
push
xor
pusha
dec
jns
push
lcall
xchg
xor
cmp
add
and
xchg
mov
clc
jge
int3
xor
xchg
cltd
mov
cs
jno
jbe
cmp
add
jl
ss
sub
ja
test
sbb
sub
fnstcw
cmp
loope
leave
stos
cltd
push
lret
fstl
sub
bndldx
adc
dec
sub
fiadds
xlat
mov
movaps
imul
pusha
out
xchg
shl
and
xchg
pop
fcmovnb
aas
sub
clc
cmc
cld
sub
rcrb
add
bound
push
mov
lods
sbb
loope
push
push
mov
push
lcall
sbb
mov
mov
rorl
pushf
cmp
test
sub
les
mov
cmp
popa
lret
mov
sbb
xor
push
push
and
sub
push
xor
outsb
cmpl
add
fstps
add
arpl
and
nop
dec
sub
or
adc
push
mov
push
sbb
lds
cli
mov
subb
add
gs
ds
sub
repnz
and
cwtl
jnp
or
sbb
sbb
outsb
dec
cmp
push
sbb
push
dec
pop
adc
shlb
aam
push
sub
pop
das
cmp
dec
popa
jmp
shrb
push
dec
loope
rcll
jbe
sub
popf
sbb
mov
adc
adc
mov
rclb
adc
pop
cmp
outsb
dec
or
pusha
pop
das
mov
orl
adc
jl
inc
mov
mov
call
sub
clc
addl
lret
or
jnp
pop
mov
lret
jge
mov
and
inc
repz
xchg
mov
sbb
or
iret
cmp
neg
add
aaa
xchg
rcl
fldl
xchg
xchg
das
out
scas
inc
jnp
jecxz
sbb
mov
cmpsl
or
sahf
inc
shl
fdivrl
or
mov
adc
add
or
push
xchg
sbb
insb
movl
filds
mov
enter
cwtl
ljmp
push
fiaddl
xchg
mov
mov
sub
ret
ficomps
inc
and
fstpt
flds
pop
dec
mov
and
repz
pop
in
mov
sahf
ret
test
or
xchg
cmp
loopne
or
fldcw
ljmp
mov
xor
sub
jb
sahf
push
add
popf
xor
pushw
sbb
jmp
loope
testb
xchg
pop
sbb
movsl
sbb
test
jle
mov
iret
es
xor
loope
push
jae
xchg
leave
fs
lea
inc
adc
adc
cmp
xor
clc
xchg
aas
mov
mov
out
pop
addl
jmp
cltd
cmpsb
data16
leave
push
lcall
outsb
scas
outsb
jbe
jmp
out
jge
push
mov
or
mov
sbb
fldenv
mul
mov
dec
add
sub
fucomp
xchg
jle
in
fdivp
sub
inc
call
movb
mov
sbb
je
mov
test
ljmp
shll
ret
fs
push
lds
and
bound
jle
mov
add
adc
shrb
xor
push
inc
xchg
inc
test
and
ja
push
jecxz
mov
push
outsl
loop
jg
jge
or
popl
movsb
ds
fsubl
fiadds
loopne
mov
push
push
sub
push
imul
xchg
pop
cmp
scas
mov
clc
scas
mov
xchg
stc
fs
enter
nop
cmp
jnp
out
push
adc
pop
mov
aas
stos
mov
sbbb
xor
sti
daa
adc
test
loop
and
out
dec
push
popa
sar
jmp
and
lods
cmp
es
inc
mov
pop
pop
adc
movsl
popl
or
movsl
push
adc
mov
divb
lds
or
or
xchg
je
and
cltd
lret
hlt
adc
lods
add
pop
dec
pop
mov
xchg
arpl
jnp
hlt
mov
hlt
mov
pop
add
fildl
jae
xchg
or
push
and
cltd
cmpsb
fadds
cmp
int3
mov
out
mov
pop
mov
pop
aaa
xor
das
push
hlt
mov
fbld
mov
rsqrtps
pop
sub
test
add
adc
daa
inc
push
pop
data16
stc
out
mov
pop
fnsave
test
mov
cwtl
fidivrl
or
sub
mov
jg
ja
and
leave
int3
xor
cmp
mov
leave
mov
stos
aaa
lock
ljmp
mov
jnp
clc
sahf
insb
push
dec
and
cmpsb
cwtl
xchg
adc
mov
stos
mov
inc
das
bound
mov
sbb
or
rol
adc
xchg
test
mov
jb
push
and
lcall
scas
movsl
call
outsl
stos
sbb
xchg
dec
mov
inc
dec
les
stc
sub
je
jecxz
andl
hlt
lret
lahf
cmp
mov
test
negb
fnstenv
out
add
push
test
jp
mov
jmp
les
int
jns
push
xor
jo
sub
scas
bound
adc
ret
out
push
sarl
pop
dec
stc
imul
push
cmp
cs
ss
jnp
pushf
roll
in
imul
mov
add
insb
dec
fbstp
outsb
shll
loope
cmp
mov
dec
ret
inc
leave
inc
sbb
mov
aam
pop
jnp
or
or
cltd
xorb
rcrl
gs
loopne
ja
mov
sbb
inc
lds
cwtl
sbb
mov
sbb
mov
dec
mov
xchg
cmc
sbb
loopne
sbb
mov
jne
add
shll
je
aas
ljmp
push
shrl
rcl
insl
push
jnp
filds
popl
or
fwait
dec
mov
mov
push
in
mov
fs
and
add
jmp
mov
sbb
jle
scas
jb
push
or
mov
jecxz
ljmp
incb
call
cmp
push
sahf
xor
icebp
std
and
xchg
adc
cmp
bound
add
xor
jmp
test
movsl
mov
mov
ret
xlat
fcmovbe
pop
mov
je
stos
mov
push
and
mov
dec
pop
dec
leave
jl
scas
inc
loope
js
mov
gs
xchg
lret
test
add
mov
jle
adc
int
pop
sbb
iret
lcall
ret
and
mov
cs
call
xlat
push
mov
out
sti
adc
mov
lds
arpl
jbe
push
xchg
cld
mov
mov
inc
out
push
push
inc
movsl
sar
or
xor
aad
fbstp
add
cmp
dec
fucom
sbb
movsb
mov
pop
ss
shl
insl
popa
dec
sub
int
sub
inc
push
testb
xorb
mov
jmp
or
xor
daa
lock
mov
or
dec
fldl
jae
loope
fisttpl
mov
mov
cltd
jecxz
push
or
mov
jnp
sub
arpl
lret
ret
xchg
sub
cmp
jbe
xchg
in
aad
cld
inc
es
into
out
xchg
mov
lods
out
lock
add
mov
sbb
adc
xlat
aad
shl
cs
outsb
xorb
and
push
aam
fs
jo
and
inc
and
and
je
cltd
pushf
add
lods
int3
sub
xor
int3
pop
mov
flds
fiaddl
and
jne
push
int3
outsb
mov
std
mov
mov
xchg
dec
imul
adc
mov
arpl
adc
mul
shlb
cld
ljmp
cmp
pop
es
sbb
sti
xchg
ret
xor
xchg
cmp
pop
pop
jmp
or
cs
and
mov
insl
cmpsb
push
mov
mov
fsub
mov
cmp
sub
stos
js
push
adc
adc
pop
mov
hlt
out
fisubl
jp
daa
orb
iret
mov
push
mov
push
je
out
sbb
loop
and
outsl
js
sub
jmp
testb
mov
push
sbb
mov
rcr
mov
jbe
mov
jno
dec
jae
mov
jmp
sub
testl
or
jg
sub
jnp
pop
inc
xchg
pushf
add
negb
cmp
sti
or
sbb
or
jl
add
stos
mov
and
dec
inc
sub
jae
test
jne
fisttpll
arpl
fwait
inc
mov
lock
lret
jb
cmp
jg
clc
xchg
sahf
inc
pop
pop
bound
ficompl
fsubrl
mov
jl
push
test
add
ret
pop
push
jp
xor
adc
movsb
add
ljmp
pop
sbb
xor
and
shlb
push
push
pop
ret
and
scas
jns
xchg
mov
inc
push
insb
fimuls
fucomp
test
mov
popl
lds
push
cmp
add
test
stos
scas
addb
sub
cmp
std
jno
xor
loop
inc
repz
jnp
jmp
push
inc
mov
inc
outsl
mov
mov
adc
dec
outsb
shlb
in
xor
jge
jns
fimull
out
notb
adc
test
cld
iret
pop
adc
pop
test
lea
xor
imul
push
lcall
jmp
push
mov
fdivl
fs
and
cmp
addr16
rcr
mov
inc
enter
sub
push
cld
rcr
daa
aad
test
mov
adc
bnd
pop
outsl
adc
push
jo
das
aam
insb
mov
xlat
scas
sub
loop
xchg
jmp
fcomi
stc
fbld
adcl
push
scas
push
ds
inc
sbb
mov
xchg
push
sbb
rcr
arpl
cwtl
sbb
inc
jae
daa
int3
add
bound
jb
vcvtps2dq
push
mov
shrb
jo
mov
rol
and
pop
jp
dec
mov
out
sub
pop
popf
lock
lock
das
and
adc
popf
in
pusha
nop
adc
addr16
and
icebp
fnsave
sub
sbb
lret
fsub
test
mov
popa
mov
sti
iret
fmull
inc
lcall
insb
sbb
push
inc
push
cmc
adc
or
push
xor
scas
js
push
and
mov
push
xchg
sbb
std
rolb
jns
int
lock
xchg
not
cltd
cld
dec
aas
aam
jns
xchg
imul
cmp
jl
fnstenv
in
hlt
fwait
and
into
push
mov
leave
sbb
mov
scas
pushf
into
aam
mov
daa
xor
jmp
and
outsb
fwait
ss
add
add
or
int3
xchg
adc
jo
sbb
fwait
add
es
adc
push
or
test
sub
mov
andb
mov
int3
cmpsb
cwtl
lret
imul
push
sbb
fisttpll
push
mov
mov
bound
cmp
mov
adc
cmp
out
imul
push
sub
mov
insb
mov
lock
or
mov
aad
sldt
bound
push
sbb
adc
fidivrl
test
add
movsbl
aad
in
mov
in
clc
jbe
and
cmp
and
inc
retw
aam
add
xor
add
insb
lods
bound
push
outsb
repnz
out
mov
in
and
enter
insb
rclb
scas
shlb
fsubrl
mov
test
inc
pop
mov
cld
jecxz
pop
mov
sub
xor
mov
pop
push
sub
push
in
aaa
out
sub
inc
push
or
sbb
inc
mov
dec
jb
or
mov
je
push
pop
pusha
adc
js
push
in
and
ficompl
sbb
xor
loop
lods
loope
rclb
push
adc
sub
stc
push
add
lea
cs
lods
adc
cld
mov
xchg
dec
inc
jno
bnd
add
or
out
xchg
leave
xor
pop
roll
push
cmp
rorl
lcall
orb
sbbl
add
and
inc
inc
xchg
loop
js
add
adc
xor
dec
sub
test
add
jmp
mov
sbb
aad
xchg
lahf
mov
jns
push
jne
out
test
or
std
xchg
mov
jl
or
test
aaa
fstl
test
clc
pushf
sbb
pop
mov
xchg
or
cmp
xchg
pop
jmp
mov
gs
mov
loope
sbb
push
inc
ret
push
adc
and
fistl
inc
mov
jecxz
push
shlb
int3
pop
iret
movsl
fnstsw
es
mov
mov
and
mov
clc
or
fldcw
lahf
mov
push
dec
leave
dec
out
jbe
aaa
and
jae
add
sub
mov
hlt
jae
fyl2x
shlb
adc
lds
out
ss
xorl
inc
icebp
popa
jne
mov
fucom
shrl
sahf
add
sbb
push
push
insl
in
or
fbld
mov
sub
mov
sub
popf
stc
and
xor
sub
mov
sbb
and
and
add
cmp
sub
cmp
inc
xchg
jecxz
cmp
imul
mov
cli
sub
fsub
mov
dec
xchg
sbb
stos
push
inc
mov
inc
orb
sar
out
jmp
sahf
cwtl
mov
subl
mov
les
sar
int
popa
lods
xchg
sti
xchg
fsubrp
sbb
popf
cmp
rolb
dec
pop
push
or
popa
sub
je
push
mov
jg
and
fidivl
sub
sub
nop
repz
mov
imul
inc
lret
pop
mov
dec
lds
xchg
loope
inc
adc
pop
sbb
jmp
or
cmp
cld
cmp
mov
sub
sub
and
and
mov
add
cli
cli
shll
jns
insl
adc
jne
dec
stos
and
insl
mov
ja
mov
inc
aas
je
icebp
adc
or
jnp
mov
sub
in
jecxz
scas
out
push
les
push
jno
mov
sbb
jbe
stc
aaa
insl
notb
mov
pushf
dec
je
sub
pushf
inc
sbb
pop
repz
sbb
jbe
outsl
dec
xor
adc
dec
js
scas
inc
insb
push
add
mov
sbb
out
cmc
xchg
loop
mov
jo
ret
fxch
push
pop
das
aas
ja
lcall
test
scas
and
or
mov
out
push
jo
pop
mov
lret
scas
adc
add
lds
fdivrp
add
cltd
aam
loope
pop
dec
adc
inc
jbe
jp
repz
xor
daa
shlb
cmp
test
sub
xor
adc
mov
mov
or
mov
loopne
push
inc
repnz
int
cmc
sbb
inc
lods
std
ja
aam
rcrb
call
sbb
fptan
pop
scas
cmp
cmp
or
xor
int
mov
cwtl
xchg
dec
sub
push
mov
bound
sbb
or
idivb
and
jb
push
mov
orl
jb
imul
push
push
push
mov
loope
fidivl
int
es
cmp
add
scas
scas
nop
ds
nop
cs
xchg
push
test
adc
mov
ret
lods
pusha
mov
shlb
xchg
dec
fwait
fs
test
out
sub
in
xchg
mov
inc
or
outsl
fsubr
mov
cmc
push
lcall
add
std
in
dec
js
insl
dec
mov
sub
xchg
mov
data16
or
aaa
mov
jne
gs
test
enter
cs
and
mov
adc
xorb
xchg
cwtl
cmc
adc
xorb
cmp
rcll
fldenv
nop
lods
mov
cmp
in
lds
or
add
sub
adc
push
or
or
sub
mov
mov
jbe
sbb
in
mov
or
sub
orb
je
out
pop
sub
push
inc
sahf
jo
xor
pusha
incb
jmp
jo
add
push
shl
mov
jecxz
mov
mov
pop
lds
cmp
adc
xor
js
pop
mov
jo
lock
xchg
jnp
jno
movsb
fcoml
or
push
and
cmp
pop
push
jnp
imul
push
xor
mov
dec
inc
dec
outsl
mov
aam
loop
jge
aad
sub
push
mov
clc
cwtl
push
mov
mov
xor
mov
mov
adc
xchg
push
repz
pop
test
dec
dec
mov
ret
xor
cs
mov
in
aas
cmp
test
adc
xor
push
leave
sub
ja
cli
sub
clc
push
adc
out
in
add
mov
test
adc
mov
push
imul
fldt
cmp
or
xchg
pop
lahf
stc
xor
mov
sub
push
sbb
repnz
mov
lahf
mov
in
movsl
pop
clc
mov
and
leave
fimuls
call
adc
jmp
sub
fisubrl
fdivrl
mov
rclb
xchg
and
ret
das
hlt
lahf
clc
mov
stos
jl
test
inc
cmpsb
gs
add
ret
daa
aaa
aas
sarl
sti
fistl
stc
outsb
popw
adc
gs
rorl
push
push
sbb
loope
or
jo
mov
fdivrs
ror
inc
jne
mov
loopne
mov
sub
lahf
fwait
inc
xchg
lea
out
scas
mov
fistpl
stos
stc
mov
int3
push
js
mov
bound
adc
cmc
arpl
mov
cmp
shlb
fwait
add
xchg
outsl
push
add
adc
xor
sub
call
add
mov
jae
sub
cmp
mov
mov
adc
inc
es
les
fdivrs
xchg
xchg
cld
popaw
je
xlat
jo
fistpll
cwtl
sbb
je
inc
cmpsb
push
adc
sahf
xor
jo
lock
mov
stc
cli
cli
icebp
in
pop
call
adc
ja
pop
aaa
dec
mov
mov
leave
cmp
scas
xor
xor
in
aaa
lock
sbb
sti
jns
push
push
push
pmuludq
repz
daa
cmp
jb
and
loope
sbb
adc
xor
pop
sub
test
aad
dec
clc
mov
bound
or
mov
push
cmp
out
stos
sbb
mov
or
daa
mov
pop
adc
jbe
scas
leave
pop
dec
jbe
push
mov
push
adc
push
adc
mov
xor
add
andl
push
cmp
pop
addr16
add
pop
ret
push
addr16
lcall
lds
adc
orb
dec
add
je
pop
mov
das
mov
cmp
je
out
push
sbb
test
sti
rorl
rorl
pop
pop
and
testb
stos
insb
leave
rorb
je
add
ja
out
adc
iret
stos
inc
insb
adc
arpl
aaa
mov
imul
ljmp
aaa
fnstcw
dec
sbb
in
mov
ret
jbe
push
xchg
xor
icebp
push
xor
cltd
xor
setb
mov
sti
pop
call
or
and
mov
movsb
stos
bound
add
inc
cmp
mov
adc
xchg
jnp
xchg
fistpl
and
cmp
xchg
push
out
xchg
fsubrs
mov
int3
xchg
mov
mov
jns
add
popaw
cmpsl
sub
mov
scas
scas
dec
lcall
or
xchg
jae
fsubp
in
out
subb
nop
loop
cltd
pop
das
and
mov
xor
lret
test
mov
icebp
call
sbb
sub
mov
jo
mov
out
and
stc
and
cli
lods
out
adc
mov
mov
sub
lea
cld
scas
mov
mov
jge
lcall
jl
inc
popa
int3
gs
dec
pop
repnz
xor
loope
sub
cmc
cltd
bnd
cmc
les
popf
and
dec
and
cmp
xor
dec
and
fcomip
xlat
inc
ljmp
orb
fcmovnb
hlt
lods
mov
pop
mov
ja
sahf
adc
sahf
mov
xchg
or
fwait
test
add
pop
sub
jns
adc
sub
inc
ljmp
outsl
sub
or
dec
loopne
cltd
inc
outsb
xchg
jle
popf
call
test
sbb
mov
adc
add
xchg
pop
sub
mov
pop
inc
mov
jb
ror
jo
icebp
mov
subb
jmp
xorl
in
mov
nop
cmp
cs
or
add
mov
clc
pop
daa
imul
filds
cmp
and
lods
out
enter
fiaddl
mov
cmpsl
int
ficompl
pop
mov
jmp
inc
jmp
mov
test
mov
or
movsb
push
loop
ret
cltd
testb
ror
mov
mov
push
cwtl
cwtl
fstps
jecxz
sbb
aam
sbb
jmp
jp
xorb
or
lret
mov
stc
hlt
ljmp
xchg
jno
lahf
shl
in
and
mov
jp
rcrb
mov
insl
fidivrs
mov
test
add
pop
out
mov
addr16
cltd
sarl
inc
sbb
pop
sub
sbb
int3
repnz
pop
sub
jbe
adc
jo
std
xchg
pop
mov
push
call
arpl
or
lods
in
mov
stc
mov
mov
cmpsb
popa
lret
sub
jns
jne
cmp
adc
aaa
fwait
mov
sbb
ja
ret
and
hlt
mov
push
pop
insl
xchg
test
outsl
mov
cmp
xor
mov
cmp
iret
decl
cs
add
pop
addr16
pop
inc
rcll
push
xlat
adc
lods
js
fsts
and
mov
gs
mov
push
push
adc
lcall
out
scas
aas
push
add
mov
sbb
dec
cmpb
cmp
jg
inc
mov
call
ljmp
hlt
push
insl
mov
out
xlat
push
and
es
ljmp
loopne
stos
out
adc
sub
sahf
mov
insl
clc
adc
mov
inc
mov
push
movb
xchg
mov
popf
cmp
or
push
xchg
fscale
mov
push
daa
lods
cltd
cmpsb
jo
rcll
in
push
mov
pop
jnp
fst
mov
lcall
ja
test
mov
xor
pushf
lret
push
fs
int3
pop
push
movsb
negb
pop
dec
cmpsb
outsb
test
out
xchg
sbb
and
aas
adc
or
insb
stc
loope
sbb
sarb
push
xchg
sbb
push
adc
enter
inc
push
icebp
adc
adc
push
mov
dec
sub
jns
mov
arpl
pop
inc
adc
fdivl
mov
xor
ss
roll
popa
and
outsb
daa
rep
ljmp
cmc
dec
mov
push
ret
out
cwtl
sub
jae
out
sub
popa
lds
jl
and
jp
mov
inc
ds
mov
fs
leave
cs
dec
icebp
or
insl
movsb
sub
sbbb
dec
xor
sub
cmp
cwtl
mov
ror
mov
in
int3
clc
push
ljmp
cmpb
sti
jle
pop
push
jno
dec
mov
ja
jb
jecxz
mov
in
adc
nop
into
int3
int3
pop
pop
aas
mov
and
sbb
and
pusha
or
xchg
jp
stos
daa
mov
rcrl
hlt
icebp
dec
cli
cli
leave
push
fstpl
jmp
stos
adc
mov
adc
sub
in
xchg
imul
in
mov
stos
xor
xor
xor
push
ficoml
xchg
cmp
adc
mov
hlt
jmp
repz
cmpsb
int
jo
fwait
cmp
faddl
lret
lds
pop
mov
sub
mov
adc
add
je
das
push
call
dec
adc
pop
ss
nop
adc
dec
mov
cwtl
out
call
adc
insl
or
jecxz
cltd
testb
ljmp
or
mov
cmp
ret
cmpsl
popa
out
lahf
dec
sbb
sbb
cmp
mov
rcrb
cld
xchg
clc
adc
or
aas
mov
cmc
add
decb
in
cld
sbb
ds
int3
in
pop
sbb
sbb
andb
out
mov
sbb
mov
jle
inc
jg
les
ret
shl
add
and
xor
dec
je
cmpsl
lcall
pop
ljmp
mov
ljmp
and
xlat
enter
jg
xchg
icebp
sub
fisubl
mov
aaa
sub
mov
inc
call
imul
sbb
call
je
xchg
lahf
cs
mov
addb
imul
fstps
cltd
scas
scas
mov
mul
mov
jnp
pop
ret
mov
imul
lcall
dec
cmpsl
sub
andl
ljmp
and
mov
jmp
fstpl
mov
adc
addr16
xchg
jbe
mov
cmp
cltd
pop
inc
data16
jmp
and
jg
dec
sbb
lods
and
shlb
mov
pop
push
mov
mov
gs
mov
ljmp
inc
mov
jne
push
pop
loope
adc
imul
mov
stos
fwait
mov
stos
cmp
or
mov
and
repz
inc
test
push
aaa
inc
ret
shlb
jg
mov
loope
cwtl
pop
idiv
leave
xchg
xchg
fcoms
cmpl
std
or
daa
xlat
jg
out
loop
gs
xor
xor
jne
int3
xchg
fcompl
out
imul
pop
dec
shrl
mov
inc
adc
xchg
imul
xchg
cmp
cwtl
in
fcoml
cmc
mov
mov
adcb
mov
jp
ljmp
pop
cmp
hlt
adc
movsl
insl
mov
lahf
fwait
std
mov
pusha
pop
push
jmp
movsb
popf
test
pusha
cmc
clc
cmpl
out
fs
mov
push
pop
ljmp
or
cmpsb
popf
adc
push
push
push
scas
cld
out
adc
lret
mov
or
push
and
jb
cmc
mov
push
pop
sbb
cmp
cmpsb
mov
pop
xor
addl
int
imul
lret
and
stos
insl
cmp
fidivrs
ret
lods
aas
dec
sub
vfnmaddps
popa
xchg
enter
pop
sub
add
mov
sbb
das
nop
add
jnp
jge
mov
iret
scas
fsubrs
xor
rorb
aas
test
xchg
data16
call
aas
cmp
in
subb
jne
mov
dec
pop
cmp
dec
jmp
cmp
xchg
push
push
andl
sbb
imul
pop
xchg
es
dec
repnz
aas
cmp
movsl
pop
sub
cmp
shl
jno
cli
jecxz
inc
lods
dec
shll
scas
add
int
rol
jg
fwait
aaa
xchg
nop
push
xor
cmpsb
lea
imul
pop
lea
pop
bound
and
inc
adc
les
rcll
das
xchg
pop
cli
nop
jmp
mov
out
jmp
aad
jnp
popa
lcall
cmpsb
fs
pop
aas
ret
xchg
xchg
and
sbb
gs
inc
add
ss
insl
cld
insl
push
xchg
pop
xchg
xchg
sbb
repz
xchg
into
aas
popa
test
daa
pop
imul
jns
mov
adc
fidivs
fisttpl
add
pop
arpl
cmp
outsl
xor
sahf
xchg
dec
int
cwtl
scas
inc
scas
push
mov
lock
cmc
mov
and
cmc
inc
pop
ja
aam
gs
jecxz
pop
mov
push
adc
aad
cwtl
jne
leave
fisubrl
xchg
xor
decb
aaa
xchg
fincstp
fstpt
or
fistpll
les
inc
mov
jmp
loop
cmc
push
pop
mov
push
jp
popa
mov
add
shll
and
mov
push
mov
and
or
lock
movsl
js
sbbb
pop
hlt
mov
add
dec
add
inc
inc
inc
add
jbe
pop
push
int
add
mov
inc
hlt
icebp
dec
int
xor
mov
add
cltd
jg
jne
je,pt
popa
popf
adc
shl
sbb
xchg
or
xlat
cwtl
pop
daa
jns
insl
push
hlt
iret
iret
jmp
add
sbb
xorb
mov
outsb
fldenv
mov
dec
xor
movsb
lahf
fistl
in
xchg
cmp
loopne
and
mov
test
or
jns
push
mov
xor
out
xchg
lahf
mov
mov
and
inc
push
arpl
dec
movsl
push
jecxz
rorb
mov
mov
fildl
jns
push
and
subb
push
lahf
movsl
fsts
decb
xchg
push
jbe
pop
int
xchg
and
inc
jbe
andl
sbb
roll
jns
push
pop
mov
mov
rcr
dec
sub
jb
adc
in
xchg
aad
pusha
lods
jno
sub
jnp
mov
clc
insb
test
dec
inc
daa
mov
push
push
mov
repz
call
add
repnz
xor
cltd
push
pop
jl
push
pusha
push
scas
or
add
mov
loope
pushf
mov
or
or
ss
mov
mov
and
inc
scas
lret
jo
insb
lods
das
and
mov
outsl
sub
mov
adc
js
pop
jp
aad
cwtl
mov
push
into
sub
mov
in
fcomps
jle
adc
push
scas
daa
xor
cs
jbe
or
int
fwait
test
push
inc
lret
pop
and
xchg
call
xor
xchg
stc
loopne
cltd
jo
movsl
adc
stos
mov
inc
loope
nop
mov
int
das
leave
mov
in
cmc
push
fiadds
std
cmc
push
andb
sub
dec
int
ficoms
repz
xchg
popa
daa
add
enter
push
adc
and
jne
mov
cmp
pop
add
mov
inc
sub
jecxz
movsb
inc
insb
mov
jge
add
lcall
and
sbb
ficoms
out
pop
clc
dec
lods
push
iret
sub
inc
psrlq
mov
mov
addr16
ljmp
popf
js
cmpsl
mov
ret
pop
rcl
and
xor
pop
sbb
mov
repnz
jp
cltd
xor
popf
mov
cmp
inc
xor
jg
and
inc
push
mov
loope
cs
lea
addl
out
jns
push
lahf
insl
push
inc
and
in
add
subb
sub
jb
jb
lcall
mov
sub
add
je
out
pusha
push
and
je
rorl
xchg
cmp
add
das
or
in
or
mov
repz
xchg
aaa
bound
jns
mov
xchg
jnp
lahf
shll
mov
pop
fisttpll
xchg
test
adc
jae
inc
lods
mov
scas
repz
jb
xchg
fs
das
mov
inc
sbb
imul
mov
scas
mov
xor
repnz
cwtl
ljmp
aam
add
cmc
inc
int3
clc
mov
int
or
mov
or
adc
push
ja
mov
test
loopne
sbbl
inc
pop
jl
add
jle
cltd
pop
jmp
sub
sahf
cmpsb
int3
push
call
sub
push
sub
aad
dec
and
dec
inc
ja
jne
adc
in
dec
mov
dec
dec
mov
inc
das
mov
mov
movsb
outsl
dec
xchg
xor
insb
fwait
js
xlat
cmp
dec
mov
enter
out
enter
int
cld
in
jae
pop
pusha
inc
into
addr16
lcall
outsb
ficomps
mov
inc
adc
int
mov
aam
notb
inc
data16
sub
mov
addr16
addr16
dec
stos
sbb
pushf
cmp
jp
sbb
xchg
mov
dec
cmpsb
cmp
dec
stos
pop
push
mov
fldenv
push
sti
test
out
iret
repz
mov
movsb
shlb
mov
out
je
inc
cli
aas
push
popa
push
data16
adc
insl
jns
mov
pop
push
in
add
test
sbb
dec
push
fdivs
adc
imulb
mov
sbb
jo
jg
push
int3
ret
aad
dec
aaa
pop
xor
lea
leave
cltd
mov
add
stos
jge
sarl
lahf
aaa
je
repnz
or
inc
ret
loope
sub
test
push
sbb
arpl
push
add
fisubl
dec
lret
inc
xchg
jg
mov
jnp
jne
ret
or
std
inc
rcrl
ret
cs
adc
sbbb
xchg
pop
push
cmp
cmpsl
jae
fwait
in
std
cmpsl
xchg
lods
or
dec
sub
push
or
movsl
fcomp
loopne
pop
sub
mov
gs
cmp
push
ja
in
adc
call
std
notl
in
ljmp
bound
shlb
out
pop
dec
sti
fstpl
jmp
movsl
mov
mov
test
jmp
in
jle
aad
pusha
push
xlat
xchg
add
bnd
icebp
pop
add
out
push
testb
stos
adc
pop
sub
and
cmp
clc
arpl
shlb
and
xor
fimull
stos
mov
sub
lds
push
xchg
mov
pop
into
adc
or
pushf
sub
loope
lcall
pushf
or
es
pusha
outsl
dec
rorl
push
sub
jle
call
fadd
push
xor
addb
ljmp
mov
mov
push
xchg
scas
lods
sub
ret
aaa
jo
sbb
xchg
or
in
mov
jmp
mov
test
inc
loope
jne
mov
or
dec
lahf
aad
shlb
inc
imul
xor
pop
fs
mov
mov
xor
adc
cmpsl
push
mov
outsl
or
notb
arpl
addr16
xor
fidivs
inc
sbb
xlat
sbb
roll
push
jns
inc
jp
adc
fidivl
and
mov
xchg
mov
data16
in
aad
rolb
and
adc
int
daa
aam
adc
in
in
sbb
popa
sbb
lret
cld
add
iret
dec
call
inc
xor
mov
sub
fldenv
push
lods
mov
fwait
fwait
jle
mov
jg
push
mov
mov
dec
mov
ljmp
insl
push
stos
sub
add
add
mov
fisttpll
ficompl
mov
repz
sahf
and
icebp
mov
dec
sbbb
dec
nop
std
adc
icebp
jo
push
mov
test
xchg
xor
xorl
adc
and
push
push
jg
jle
fnstenv
xchg
lods
adc
sbb
adc
orb
inc
dec
gs
notb
dec
outsb
pop
xchg
and
mov
inc
inc
lds
lahf
imul
adc
or
or
push
out
mov
icebp
icebp
pop
cld
in
sub
popa
cmp
pop
inc
test
pushf
sbb
mov
out
dec
pop
lock
add
icebp
rcrl
ret
sti
imul
dec
push
test
pop
fwait
std
jp
dec
insl
jns
fs
add
test
dec
ss
je
cli
xchg
xlat
jbe
enter
or
mov
add
hlt
sub
in
je
mov
mov
sub
testl
sbb
ss
inc
xor
cmp
jae
lret
pop
out
dec
scas
push
mov
sub
inc
sbb
pop
mov
mov
mov
fistpl
jmp
add
mov
push
push
cmpb
repnz
or
aaa
test
dec
push
and
sub
jne
xchg
loopne
imul
mov
test
or
mov
mov
cmp
inc
inc
adc
jns,pn
imul
lcall
add
pop
sub
rorb
imul
addl
fwait
pop
add
sbb
stos
push
out
xchg
stc
mov
xor
adcb
rdpmc
adc
lcall
adc
push
pop
mov
cmp
jle
int
cmc
and
inc
push
xor
push
movsl
jp
or
daa
test
sub
jmp
arpl
pop
jbe
sub
cmp
ss
cmp
insl
bound
sbb
pop
imul
and
scas
sub
lea
je
add
jmp
cmova
rcll
test
sub
xlat
push
xor
sbb
popf
push
pop
add
pop
and
mov
adc
in
cmpsb
stc
jle
andl
sub
dec
pop
mov
pop
je
xchg
and
add
pop
pop
sahf
stos
das
xor
dec
mov
mov
sahf
sub
jl
iret
dec
lds
sbb
test
iret
imul
and
int3
inc
xchg
inc
cli
enter
mov
bound
fcmovnb
mov
lods
pop
mov
loopne
leave
mov
loope
shl
inc
lcall
inc
mov
loope
insl
imul
test
icebp
ret
mov
scas
xor
sbb
xor
lcall
movsl
sub
mov
xlat
test
pop
loope
je
cmp
aaa
or
push
testb
bound
pop
cmpb
mov
xchg
pop
mov
push
jno
xor
notl
outsl
mov
pop
jl
dec
xchg
jb
out
sbbl
or
jo
loopne
comiss
cmpsb
mov
pop
sub
int
mov
test
push
adc
jne
hlt
add
mov
jg
mov
xor
push
push
out
pop
push
movsb
push
es
shlb
rol
sub
mov
dec
fs
xor
gs
or
jmp
inc
dec
adcb
sarl
xchg
gs
pop
jb
arpl
jnp
lock
jns
stos
cli
bound
cmp
out
add
movsb
or
repz
jno
push
in
xchg
fimull
xchg
jmp
sub
les
fiadds
addr16
insl
sub
dec
pop
stos
sbb
cmp
inc
or
pop
jge
and
adc
cmp
sub
ret
inc
stc
iret
push
pop
adc
into
cs
pop
sahf
or
in
add
lret
test
adc
int3
adc
fisubrs
cmpb
popf
or
jo
dec
aas
fcompl
dec
mov
push
mov
adc
in
pushf
push
pop
mov
or
jns
mov
mov
or
dec
jbe
outsb
arpl
test
loop
xor
push
sbb
mov
inc
incl
aam
std
loopne
xchg
or
rorl
push
test
dec
daa
les
xchg
int
pop
frstor
ret
cwtl
jge
pop
mov
mov
negb
aaa
add
xor
add
lea
mov
mov
data16
jmp
std
dec
and
ss
mull
leave
mov
repnz
test
out
in
push
adc
fisttpl
or
inc
popf
cli
and
pop
mull
xchg
xchg
sbb
test
add
insb
or
cmp
xchg
jnp
jl
fucom
mov
adc
aas
mov
fcomps
das
mov
lret
xor
adc
push
xor
cltd
ljmp
push
xchg
or
decb
xor
sbb
arpl
lock
xor
inc
lret
push
lcall
std
jno
dec
int
insb
iret
jne
adc
mov
hlt
in
push
sub
imul
mov
mov
adc
movsl
mov
or
adc
lods
ss
or
ljmp
orb
cmp
sub
sub
and
outsb
je
pop
out
repz
dec
xchg
imul
fwait
lods
stos
ja
in
js
ljmp
jno
inc
repnz
lret
adc
and
adc
dec
outsb
cmp
rol
aas
out
test
sub
fwait
pop
pop
mov
push
ret
fsubl
repz
lret
sub
gs
fstpt
scas
js
mov
lock
sub
ret
sti
idivl
xchg
dec
je
dec
outsb
pop
push
lret
out
dec
movsb
fwait
bound
mov
mov
xchg
lods
lods
ficompl
inc
adc
jecxz
mov
pop
or
or
out
ja
shll
lds
in
out
or
pop
cmp
rcll
in
imul
adc
bound
fs
out
jno
sub
inc
dec
shl
jle
loopne
mov
int3
pop
out
test
sbb
push
adc
push
adcb
add
inc
dec
xchg
pop
or
scas
js
loope
ds
mov
pop
loop
adc
cli
stos
fmuls
fs
jle
or
xor
pop
dec
shr
fndisi(8087
or
inc
cmova
aam
pop
in
adc
mov
outsb
pop
or
loopne
push
fbstp
inc
stos
sub
shlb
std
stos
push
rorb
test
dec
mov
or
pop
inc
and
dec
sbb
outsl
movsl
push
pop
fwait
mov
adc
jb
gs
pushf
adc
push
or
shl
test
pop
dec
push
rcr
fidivrl
sti
fnstsw
aaa
mov
or
testl
pop
cmp
sbb
add
jns
bound
rolb
outsb
xchg
jne
and
pop
cmpsb
mov
lods
adc
jbe
and
xchg
cltd
xchg
stos
xor
stos
cmpsl
jb
dec
jne
sbb
xor
sub
in
pusha
repz
adc
imul
sub
je
inc
cmpb
or
fidivrl
addl
cmp
popf
std
mov
mov
sar
stc
rclb
cmpsl
jnp
adc
fidivrs
inc
pop
cld
pop
popf
sbb
ljmp
and
testb
mov
in
xor
ret
std
lds
inc
jmp
mov
and
mov
shlb
inc
outsb
pop
and
into
sub
adc
push
mov
adc
lods
xchg
sbb
incl
shr
sub
adc
stos
mov
lock
int3
test
sti
fistpll
rclb
loop
das
mov
sar
add
int
popa
lahf
mov
sub
dec
jl
les
sub
sbb
xchg
in
or
and
mov
push
out
icebp
push
pop
ja
mull
insb
test
cwtl
test
orl
std
push
lcall
test
dec
adc
int3
cmc
scas
repnz
jl
push
push
xlat
mov
das
lcall
push
or
mov
fisttpl
popf
mov
pop
imul
adc
stos
sub
dec
in
loopne
je
dec
pop
hlt
mov
divb
sbb
ja
cli
cmpsl
rorl
in
mov
movsl
loop
push
jg
mov
stos
dec
in
adc
sbb
clc
test
jbe
add
mov
int
xor
aam
jnp
lea
sti
inc
es
mov
and
les
les
fwait
scas
mov
pushf
int
push
jo
lock
push
mov
sbb
cmp
and
insb
adcb
pop
outsl
jne
push
inc
xchg
sti
push
push
ja
pop
push
rcll
xchg
dec
pop
mov
and
pop
aas
sub
jp
jecxz
add
mov
arpl
jbe
dec
mov
addr16
cmpsb
sub
mov
imul
nop
test
jae
mov
popf
test
jb
mov
outsb
inc
push
or
lcall
inc
outsb
mov
jp
iret
pop
out
dec
out
add
push
and
xlat
call
flds
push
sub
leave
cld
shr
ja
jmp
mov
and
push
add
cmp
or
pop
xor
fidivrs
loope
sbbl
and
mov
mov
scas
push
movsl
popf
dec
pop
inc
push
je
lds
push
or
mov
lret
fidivl
out
int3
mov
dec
outsl
cmc
mov
daa
in
xorl
pop
cmp
and
cs
cmpsl
inc
insb
dec
push
cwtl
jmp
jge
jg
xchg
shl
dec
add
pop
lock
rcrb
mov
mov
inc
cmc
adc
adc
setne
mov
cmp
js
cmp
cmc
mov
sar
cmpsb
das
es
sub
cltd
inc
sbb
pop
push
or
insb
add
dec
dec
jns
sbb
sbb
sarl
lret
pop
in
and
adc
jge
mov
mov
std
in
bound
jb
or
xor
js
add
pushf
sbb
cmpsb
pop
inc
movsb
xchg
cmp
outsl
sub
test
add
mov
sub
movups
add
adc
xchg
cmp
not
mov
lcall
xor
mov
add
cwtl
xor
push
lds
mov
fmuls
lds
add
cmp
jo
adc
pushl
sub
xor
mov
push
dec
cmp
es
mov
fistpl
and
push
mov
test
gs
sbb
adc
mov
push
insb
adc
inc
inc
call
test
inc
cltd
pushf
sti
mov
adc
fcompl
es
jno
jae
enter
push
mov
enter
in
std
cmpsb
shll
rclb
dec
enter
xor
push
fisttpll
lock
xchg
jns
dec
dec
repnz
orb
sub
pop
cmpsb
das
daa
clc
jmp
in
je
jnp
xorb
add
jg,pt
cmp
xor
cmp
ljmp
add
and
sbb
xchg
loop
push
mov
int
outsl
pushf
mov
cmc
sbb
adc
xchg
sub
pop
clc
stos
xor
cmpsl
js
fldl
mov
dec
adc
push
pop
movsl
mov
sarl
test
cmp
gs
push
xorb
inc
jb
nop
cmpsl
js
sahf
mov
or
lods
addr16
jno
lret
shl
xor
bnd
int3
outsb
movsl
dec
stos
mov
js
cmp
ret
filds
and
fcmovnb
neg
out
inc
pop
lret
subl
ljmp
mov
inc
inc
stos
ljmp
or
sbb
fwait
imul
xchg
sub
mov
sbb
icebp
std
pop
inc
xor
fcoml
jmp
cmp
xlat
cmp
xor
jo
outsb
adc
pop
xchg
add
imul
addr16
pop
or
push
pop
stos
cltd
sbb
mov
jge
adcw
adc
sarl
shl
or
push
push
mov
std
or
pop
movsb
dec
test
push
mov
fdivr
lcall
jnp
fsubr
mov
cmpsl
shl
mov
mov
push
sbb
sub
cltd
enter
and
movsb
adc
mov
dec
adc
inc
lea
cli
fildl
pop
cmp
lahf
orb
xchg
outsl
outsl
fwait
loop
imul
aas
jno
testw
inc
mov
adc
inc
cwtl
imul
xchg
dec
adc
sti
push
shld
push
mov
je
cmp
out
sbbl
jg
enter
jbe
inc
xchg
sub
mov
xor
add
in
outsl
mov
xchg
push
jle
nop
lret
cmp
add
dec
jge
add
outsl
loopne
outsl
in
dec
mov
cmpsl
std
in
inc
mov
adcb
roll
cmp
cwtl
pop
ret
loopnew
xchg
lret
xchg
lea
dec
pop
sbb
push
int
adc
add
sbb
cmp
or
lcall
sti
lea
repz
icebp
mov
sub
mov
jecxz
out
aas
mov
bound
cmc
add
push
xchg
push
andb
mov
push
sti
pop
sti
sub
in
adc
push
pop
mov
fcoml
jnp
sub
repz
scas
rcr
orl
jle
dec
pop
ja
pop
pusha
cmp
or
pop
push
adc
xor
push
inc
sub
movsb
jnp
xchg
scas
ret
sbb
pop
rorl
mov
push
sbb
shrb
xor
mov
je
and
test
mov
jo
xchg
jb
daa
out
lahf
mov
jnp
fimuls
mov
xchg
lret
or
ja
jbe
jns
repnz
pop
mov
scas
movsl
mov
jl
mov
shll
outsl
inc
cmp
push
les
in
xchg
add
xchg
shlb
pop
in
test
sub
subl
lods
xchg
das
jnp
into
adc
sti
jmp
into
aas
inc
mov
imul
and
mov
pop
pop
shll
xchg
pop
jno
sbb
sahf
loopne
jb
in
xchg
and
pop
lods
push
add
imul
imul
shrb
pminub
dec
cmp
jmp
adc
push
mov
xchg
xor
js
insl
jnp
ret
data16
and
dec
lcall
adc
jg
outsl
lods
mov
std
in
clc
mov
lods
inc
je
sahf
aaa
pop
repnz
xchg
inc
adc
lock
mov
es
insb
push
scas
lret
inc
cmp
bound
and
cmpsb
sbb
pop
jb
imul
movsb
out
das
pop
loopne
ljmp
or
xchg
out
fdivrp
add
sub
or
test
or
rcrb
mov
push
xchg
dec
and
mov
hlt
jnp
cmpsb
jb
push
jmp
push
mov
xor
sub
cmp
fs
adc
stos
mov
hlt
mov
test
cmc
or
mov
mov
mov
or
fcompl
out
adc
add
call
in
jno
add
dec
fwait
pop
mov
sbb
sahf
pop
hlt
mov
push
dec
inc
push
dec
xchg
ficompl
js
fs
and
shlb
dec
or
xchg
push
bnd
cli
or
pusha
movsb
clc
sub
fisubrs
hlt
nop
stos
mov
mov
xor
movsl
lods
repnz
cmc
clc
push
fxch
mov
sub
inc
push
test
int
fnstcw
repz
mov
mov
adc
ret
push
sbb
sub
mov
into
shrl
pop
push
mov
cmp
xchg
dec
cmp
ret
test
bound
icebp
movsb
lret
adc
cmpl
bswap
mov
sub
aam
mov
test
fwait
arpl
scas
stos
inc
add
aam
lret
sbb
mov
jns
jl
int3
pop
push
jns
es
jo
stos
aas
xor
stos
mov
mov
in
es
jo
sbb
cmpsb
xor
push
xchg
cmp
xchg
in
out
xlat
or
and
aaa
insl
xchg
adc
pop
jae
incb
mov
shrl
push
push
cmp
jmp
xchg
aad
mov
push
cli
enter
mov
mov
cmp
out
xchg
dec
jl
pop
aad
pop
jp
aaa
jle
jno
mov
cmp
inc
mov
scas
scas
xchg
pop
mov
fcoml
pop
jo
lcall
and
adc
sub
dec
xor
lods
mov
sbb
mov
cmp
dec
inc
in
ret
test
fnstsw
jle
push
adc
arpl
mov
mov
mov
jmp
gs
les
hlt
imul
jl
les
pcmpeqd
pop
push
and
rolb
mov
sahf
inc
rol
test
in
sahf
adc
scas
jae
js
loopne
imul
jp
in
frstor
pop
xchg
in
loope
or
mov
cmp
or
xchg
and
shlb
and
into
sar
sub
dec
inc
sahf
jne
in
jmp
adc
icebp
movsl
dec
dec
nop
cmpsb
shl
out
loope
rep
pop
sbb
sbb
out
imul
xchg
xchg
xchg
jnp
and
jb
pop
jg
lret
pop
into
sub
adcb
mov
pop
or
pop
sahf
pop
xlat
out
lock
mov
jmp
ja
mov
enter
adc
adc
push
ljmp
push
popa
xchg
xchg
jge
stos
or
fdivp
in
sahf
test
dec
push
jns
ret
pop
test
in
fwait
xlat
push
mov
test
sub
push
movsb
mov
add
sahf
int3
leave
shll
jb
in
jbe
pop
shl
pop
out
jae
repnz
cld
test
gs
mulb
scas
sti
mov
outsb
arpl
and
fiaddl
mov
fisttps
fildll
lret
dec
arpl
hlt
aaa
outsb
shl
leave
scas
xchg
cs
call
dec
in
xchg
jmp
stc
sbb
shrl
std
inc
mov
mov
imul
add
add
mov
je
mov
mov
mov
jmp
pop
das
jle
out
xor
lds
mov
jp
sub
jl
pop
mov
xchg
mov
xchg
decl
inc
test
mov
push
push
test
mov
sbb
ss
sub
push
data16
mov
inc
xor
in
jno
repnz
outsb
data16
adcl
xchg
or
into
cmp
adc
dec
adc
aad
test
fwait
sahf
out
mov
stos
mov
xchg
movsl
mov
cli
xchg
jae
imul
or
mov
sbb
andb
iret
and
xchg
arpl
bswap
rclb
sbb
iret
push
lods
ficoml
mov
push
mov
jno
mov
outsb
daa
jmp
ss
mov
imul
out
int3
enter
jge
pusha
enter
out
xchg
pop
out
push
and
movsl
int
daa
enter
loope
outsb
sti
call
jl
sub
or
icebp
inc
outsb
arpl
daa
lret
std
stc
jbe
xor
shl
popf
lret
sbb
bound
xor
mov
ffreep
das
jne
pop
in
mov
pop
dec
pop
out
cmpsb
mov
jle
shl
in
or
das
pop
cmp
jle
push
out
rorl
push
or
sahf
lcall
push
or
mov
mov
fcoms
ja
sub
pusha
mov
inc
add
mov
jns
sbb
arpl
or
data16
popf
in
pushaw
jne
mov
pop
sub
shl
lods
int
aaa
in
push
add
adc
mov
arpl
jb
and
dec
ljmp
mov
mov
jae
int
imul
fstps
inc
jns
fdivrp
cmpsl
out
cld
insb
cwtl
pop
ljmp
or
test
mov
jp
inc
adc
inc
scas
fidivrs
xchg
cmp
xchg
sbb
rcrb
not
pop
lcall
push
out
push
std
outsl
xor
mov
inc
lret
jg
sbb
ret
popa
push
pop
cmovle
push
mov
loopne
mov
jecxz
aas
inc
dec
jge
aaa
push
push
pop
cli
jns
jae
pop
adc
pop
jne
or
cmpsl
aam
fimuls
insl
fstpt
jnp
add
xor
cmc
jecxz
js
mov
push
or
psrlw
mov
xchg
cmc
push
pop
les
sbb
xchg
adc
mov
dec
test
cmp
jecxz
inc
out
or
xor
arpl
cmp
enter
xchg
adc
xchg
mov
sarb
or
out
gs
inc
pop
daa
outsl
int
and
fs
inc
int3
lods
fcompl
movaps
cli
mov
push
mov
imul
sub
orb
push
dec
arpl
lret
cli
adc
sti
jecxz
sbb
sbb
cld
push
loop
dec
pop
lcall
cmp
inc
push
movsl
mov
fwait
fs
and
mov
shr
push
sti
and
imul
lods
outsb
xor
mov
outsl
pop
pop
sub
pop
scas
in
test
add
in
decb
repnz
xlat
aaa
pop
jne
popl
jns
inc
pop
push
test
nop
cwtl
popf
push
pusha
jg
gs
or
int3
incb
sbb
dec
shrl
mov
js
xchg
push
in
repz
inc
push
enter
add
mov
in
cmp
fsts
pop
mov
hlt
out
cmc
loopne
aas
pop
out
fs
outsl
xor
sbb
fimuls
scas
in
mov
out
mov
adc
xor
add
cwtl
mov
push
jae
mov
push
cmpl
cmp
inc
lahf
das
out
mov
jnp
xor
enter
jbe
sub
sbbl
clc
loope
push
inc
cmc
shl
add
mov
sti
cmp
push
notl
dec
or
inc
sbb
jne
fimuls
insl
iret
fidivrl
add
movsb
xor
inc
lods
inc
xchg
orl
ret
pushf
call
sub
xor
push
pop
xor
jbe
and
inc
out
mov
mov
jo
ja
outsl
fisubl
addr16
test
jge
push
mov
and
push
es
pop
xchg
jmp
xchg
int
inc
out
cmp
pop
cld
in
jno
popa
cli
insl
jg
inc
push
adc
inc
mov
jp
xchg
cltd
inc
jmp
push
fcompl
roll
loop
ljmp
dec
dec
mov
nop
popa
jno
cmp
jbe
lahf
push
push
ds
imul
int3
fldcw
sbb
push
xchg
or
pop
aaa
and
outsb
mov
shrb
jge
bound
sti
and
arpl
xor
mov
mov
mov
inc
aas
pop
subb
push
add
cmpsl
imul
rorb
add
aaa
xor
sub
inc
leave
or
sub
cmp
mov
test
das
adc
mov
cld
pusha
pop
xchg
mov
idiv
frstor
clc
push
sbb
pop
add
fisttpl
xor
pop
mov
aas
or
stc
dec
call
shll
repz
xchg
xor
xchg
mov
aam
lret
dec
outsb
sub
repnz
js
popf
jae
stos
ja
push
bound
sbb
add
mov
xchg
lcall
pop
sti
xor
jnp
and
and
add
loope
jle
data16
mov
and
pop
cld
mov
jne
mov
lahf
jno
and
push
dec
out
sub
int
jl
inc
test
xor
push
fs
out
pushf
jne
in
pop
ret
mov
dec
pushf
addr16
sub
and
adc
mov
lock
in
jo
push
or
scas
fwait
fwait
add
dec
pop
mov
xchg
jmp
push
xchg
test
pop
xchg
pushf
leave
and
movsb
pop
cmp
out
jecxz
inc
popf
jecxz
sarl
xlat
icebp
int
into
pop
insb
push
mov
jecxz
in
daa
ret
in
jmp
add
push
push
adc
psubd
lea
jecxz
inc
addl
mov
mov
sub
icebp
cmp
dec
xor
in
je
addr16
negl
jo
fwait
sub
lret
cli
iret
mov
lret
mov
cmp
adc
les
scas
es
xchg
aam
fnstenv
aam
daa
jns
hlt
scas
jb
mov
or
js
jno
rorb
mov
jno
repnz
mov
daa
adc
cli
jl
sbb
push
jg
sub
cmp
in
sbb
jg
ja
rep
or
fmul
dec
push
mov
push
data16
add
mov
rcrb
jns
push
pop
pop
cmc
aad
cs
mov
pop
flds
shl
imul
pop
mov
outsl
mov
loope
and
sbb
daa
mov
in
fsubr
jmp
mov
cmp
sahf
stos
pop
stos
and
out
pop
cmp
aam
sbb
test
cmpsl
enter
lods
push
into
adc
sar
pop
ret
out
cmp
fdivrl
daa
mov
rclb
mov
sbb
jae
test
cmp
lret
outsb
pop
inc
jg
push
xlat
and
mov
popa
push
adc
pusha
js
imul
cmp
cltd
add
sbb
inc
cmp
or
adc
xor
shll
test
js
in
ds
jbe
mov
xchg
push
xchg
scas
push
mov
or
fidivrl
xor
mov
insb
fistl
insl
push
inc
pop
push
sub
inc
push
cmp
mov
adc
lods
dec
fs
fs
or
cmp
push
daa
sti
int3
sar
push
test
insl
cmp
test
mov
fisubrl
jnp
aam
xor
inc
out
movsb
mov
sub
addr16
xor
cmpb
jb
aaa
push
xchg
add
sub
add
icebp
jmp
and
adc
adc
push
jge
push
dec
out
aad
popf
imul
sub
loopne
fwait
jg
into
inc
lds
roll
pop
push
cli
mov
lret
cmp
jno
cld
pop
mov
sbb
xchg
aad
sahf
data16
pop
pusha
xor
adc
add
xchg
pop
das
hlt
inc
mov
sbbb
sbb
lock
and
js,pt
mov
xlat
addl
sbb
das
lock
dec
in
xorl
mov
iret
inc
sbb
inc
idivb
xchg
neg
test
pop
sbb
cmpsl
cmc
out
sbb
mov
xor
dec
hlt
or
cmp
xchg
sub
test
adc
aad
psrlw
mov
loopne
xchg
int3
arpl
xchg
mov
js
sub
pop
pushf
and
fwait
lcall
fs
into
xor
inc
mov
imul
sbbb
fcompl
hlt
jb
and
adc
mov
sub
fcomps
insl
repz
xor
mov
jmp
repz
js
push
mov
xor
inc
stos
adc
int3
mov
jge
push
push
sub
loope
lret
bound
mov
lock
mov
inc
jbe
movsl
jecxz
ljmp
fcoml
loop
xchg
rclb
lahf
xor
test
fildll
gs
cltd
xor
push
mov
idivl
xchg
ljmp
mov
imul
xchg
in
inc
xor
push
mov
xchg
mov
arpl
push
out
inc
test
ret
xor
xlat
add
dec
xchg
stc
xchg
fidivrl
ljmp
inc
loopne
pop
movsb
jecxz
cmpsb
inc
out
out
ja
xchg
xor
xchg
fsubrs
jecxz
sbb
push
adc
call
dec
cwtl
and
loope
rorl
pop
jge
outsb
xchg
xor
jp
dec
fistpl
cmp
pop
push
cmpsb
push
orl
mov
out
jp
fcomps
mov
mov
cwtl
je
add
mov
xor
dec
and
cmpsl
xchg
push
push
push
imul
sahf
out
sbb
les
pop
xor
mov
cld
or
repz
xchg
ret
mov
jge
mov
jge
js
mov
push
or
inc
sbb
loopne
shl
outsl
mov
lock
mov
sub
cmp
test
dec
in
pop
mov
and
in
movsb
outsl
adc
loope
mov
mov
xor
sbb
pusha
xlat
je
mov
dec
jg
xor
push
mov
nop
rcrl
cmp
daa
into
sbb
push
sbb
or
adc
call
int
aad
pop
or
cmp
shll
loop
dec
jnp
push
sti
dec
push
cmp
dec
xor
pop
dec
outsb
lods
fs
stc
pop
ds
xor
cmp
xchg
jecxz
loopne
jg
clc
inc
xchg
ss
mov
dec
mov
incb
cltd
daa
xchg
inc
or
rorl
push
arpl
in
sub
sahf
xchg
out
enter
ret
pop
jg
ret
sub
push
adc
jp
add
lret
call
mov
popa
mov
int
ret
lcall
cmp
mov
jae
stos
mov
mov
dec
mov
in
frstor
push
jg
lret
lcall
test
cld
je
sbb
cwtl
test
pop
mov
cmp
pushf
sbb
adc
pop
stos
jns
push
dec
sbb
pusha
adc
push
sub
mov
dec
xor
lret
ret
andb
test
xchg
pop
mov
rcrb
cmc
fidivl
mov
xor
and
idivl
mov
unpcklps
cmp
movsb
int
pop
outsb
or
divb
pop
dec
ja
jb
aaa
jmp
cmpsl
test
dec
sub
shrl
mov
fmull
into
mov
inc
inc
outsl
addb
bound
cli
je
mov
push
push
mov
loop
test
or
aas
test
pop
inc
out
call
jb
mov
sti
dec
xacquire
cli
ss
inc
dec
movsl
jo
and
imul
shll
lea
push
mov
outsl
adc
mov
xchg
sahf
repnz
loopne
dec
add
insb
gs
testb
jne
fimuls
push
sub
adc
stos
test
int
clc
and
inc
loopne
fbstp
xchg
xor
and
mov
sbb
mov
out
push
or
mov
xchg
test
xor
xchg
inc
and
jg
rcl
cmp
popa
jne
jmp
sbb
test
ret
call
fwait
dec
xchg
loopne
xchg
push
jb
push
add
or
ret
fs
adc
push
add
cmp
in
adc
pusha
jmp
test
cmc
sub
push
ja
fistpll
push
cld
fs
popf
adc
sbb
cld
pop
cmp
sub
std
pop
lods
ficoml
cmpl
mov
pop
repz
ja
or
push
fldl
xor
lods
daa
je
dec
out
shll
dec
sub
pop
roll
xorps
test
jbe
aas
jg
push
in
lods
in
cwtl
daa
pop
cltd
or
or
in
pop
ja
xchg
jno
jle
push
ljmp
addb
js
addr16
vsqrtpd
arpl
je
pushf
xchg
cmp
aaa
push
and
call
lock
orb
push
cld
sub
push
push
xchg
mov
test
insb
xchg
sub
push
adc
int3
push
xor
pop
push
add
lods
push
fs
cmp
sbb
jg
jmp
cmp
add
cltd
in
ds
sbb
scas
or
daa
cs
pop
dec
dec
fwait
cmpsb
pushf
cld
push
out
ljmp
js
sarl
hlt
popa
gs
cli
test
pop
gs
add
dec
pop
popf
aam
in
outsl
mov
data16
mov
add
outsb
loopne
cmp
dec
frstor
imul
loopne
das
imul
xchg
shll
test
lods
sub
or
jl
rcll
cmpsb
pop
mov
push
xchg
sbb
add
arpl
ffree
test
and
xchg
mov
and
adc
in
popf
dec
cmc
dec
cmp
add
cmp
insb
int3
pop
inc
mov
dec
rorl
adc
push
out
sar
mov
mov
in
js
xor
push
shlb
add
ss
stos
clc
int
inc
inc
or
jecxz
sub
outsl
enter
int
or
pop
hlt
or
xchg
fcmovnu
je
inc
imul
xchg
in
insl
and
dec
fidivs
cmp
jg
repz
or
xchg
add
shlb
test
in
xor
fwait
loop
push
movsb
mov
mov
xchg
aas
dec
mov
movsb
push
add
sbb
shrd
aas
xorb
scas
sahf
stos
cwtl
cmp
out
shll
mov
push
and
inc
xchg
jo
into
pop
mov
push
movsb
je
nop
xor
and
movsb
sbb
andl
test
sub
callw
cld
cmpsb
jno
pop
sub
lock
movsl
push
xchg
mov
clc
mov
jb
fsub
push
xor
dec
jne
cli
ljmp
in
es
popa
cmp
nop
repz
pushf
sbb
jne
into
mov
fistpll
mov
fs
icebp
outsl
ffreep
add
into
ds
mov
mov
push
or
jecxz
fs
dec
les
add
stc
or
push
test
lcall
movsl
sbb
test
test
pop
in
test
mov
sub
cs
aas
lcall
jg
jmp
push
daa
cltd
sub
cli
sub
in
aaa
jns
dec
mov
rcrl
jmp
les
push
xchg
cltd
les
ss
mov
xchg
push
test
and
jl
xor
shr
ja
add
xchg
sbb
movsl
sbb
fmuls
stc
and
dec
inc
clc
mov
inc
push
dec
jp
jecxz
idivl
outsb
stos
sbb
les
insl
cwtl
mov
jns
add
inc
cmpsb
loopne
mov
test
mov
adc
fldt
imul
sub
mov
shl
push
pop
aad
mov
data16
adc
mov
mov
xor
ljmp
ljmp
mov
add
loop
xor
jmp
or
ja
outsb
popa
cmc
lret
into
dec
push
or
add
repz
mov
andl
rorl
mov
bound
and
cmp
aas
mov
dec
loope
xorb
fiadds
insb
xchg
mov
and
cmp
xchg
push
aaa
mov
sahf
xor
mov
xchg
pop
ret
fcomps
jae
incl
inc
aad
sar
pop
pop
loopne
fldpi
sbb
dec
sbb
xchg
mov
sub
jno
je
jae
or
int
pop
xorb
mov
push
xchg
je
dec
roll
and
loop
ror
mov
add
outsl
mov
aaa
mov
shl
int
mov
aad
push
inc
out
push
adc
pop
daa
pop
decl
lcall
add
pop
xchg
lods
adcb
sahf
push
xchg
sbb
inc
cmp
shrb
dec
xchg
mov
fmulp
cmpsb
ljmp
mov
xchg
repz
fldcw
hlt
fisubl
mov
sbb
leave
push
mov
fidivrs
into
adc
xor
jae
jo
push
cmpb
cs
add
mov
inc
mov
mov
aaa
scas
repz
pusha
xor
xlat
add
xlat
jno
sti
dec
hlt
mov
adcl
sahf
mov
inc
in
lock
xlat
jb
push
cmp
inc
sbb
sbb
lret
out
loope
ja
xchg
mov
movsl
cmp
daa
and
nop
cltd
inc
stc
push
cmp
loopne
decl
jbe
jg
sub
aas
and
cmp
jge
xchg
adc
pop
nop
and
lret
adc
mov
push
roll
push
out
lods
inc
pop
mov
jle
jle
daa
sub
adc
mov
dec
add
cmpl
stos
inc
or
shrb
jnp
outsb
lods
fnstcw
mov
cmpsl
push
or
popl
leave
sahf
pop
scas
in
jae
xchg
dec
fcomps
jecxz
xor
push
cmp
rclb
add
add
lcall
or
fildll
sub
lods
bound
jno
repnz
mov
adc
test
jp
dec
les
cmp
subl
and
pop
ficoms
dec
sbb
pop
jbe
stc
loopne
ds
sbb
cltd
out
xchg
mov
pop
xchg
arpl
mov
loopne
jmp
jb
and
sbb
mov
in
outsl
mov
loop
lea
adc
push
inc
xor
cmp
sub
adc
stc
lods
in
mov
xorb
lahf
addb
pop
out
dec
mov
xor
orb
fdivl
pop
sub
or
jns
push
incl
push
xlat
mov
and
enter
inc
dec
mov
cmp
dec
ud1
xchg
lods
data16
test
mov
int
in
aad
pop
cs
jmp
in
lret
mov
fcompl
xor
pushl
sbb
and
ret
mov
ret
movsl
jnp
lods
outsb
or
push
mov
popa
shlb
movsb
shll
adc
fisubrl
cmp
lcall
loop
push
subb
in
mov
mov
add
mov
icebp
aam
adc
hlt
std
shrl
test
neg
dec
cmp
adc
xchg
adcb
jnp
bound
mov
jl
pop
fsubs
jmp
add
lods
mov
sub
lods
fnsave
dec
jnp
push
xchg
out
cmpsl
je
pusha
idivb
jle
push
dec
jo
xchg
and
xchg
out
sbb
jmp
rcl
clc
ss
mov
mov
and
jl
mov
sbb
ljmp
movsb
data16
pusha
mov
jge
push
lret
pop
sti
mov
lods
mov
pop
clc
mov
daa
je
push
mov
pop
mov
sub
or
cwtl
pushf
lcall
mov
clc
mov
or
mov
push
pop
fidivl
xor
ficoms
popa
xorl
out
addr16
cmp
jmp
ljmp
in
clc
aam
mov
ret
das
scas
clc
lcall
cmpsb
imulb
rorl
mov
daa
in
push
xchg
orb
xor
dec
shlb
dec
popf
in
iretw
cmpsb
int3
adc
mov
dec
mov
push
mov
aaa
outsw
stos
stos
dec
inc
sub
ja
adcl
sub
daa
sub
fisubrs
dec
into
mov
lretw
ljmp
lret
dec
push
adc
inc
xchg
sbb
jmp
or
js
sub
ss
add
int
out
loope
negb
xchg
scas
dec
sbb
ret
push
mov
jmp
mov
pop
negb
loop
sbb
cli
and
pop
push
out
cmpsl
and
jns
dec
xor
jl
or
orl
mov
inc
sub
pop
imul
mov
arpl
ljmp
push
inc
xor
mov
mov
into
setp
sbb
sbb
mov
aaa
leave
lea
jbe
fmul
push
std
into
fisubrs
fildl
mov
lods
popf
dec
inc
out
inc
jnp
mov
out
mov
jns
adc
inc
jae
call
xchg
mov
pusha
mov
push
js
push
mov
push
js
mov
lret
das
pop
dec
loopne
or
out
mov
cmc
fisubrl
addb
adc
mov
aam
fstl
mov
leave
sub
inc
jbe
push
iret
add
xchg
sahf
mov
inc
in
sar
test
loop
mov
ds
dec
dec
mov
xchg
ret
pop
pop
jmp
mov
fmulp
pusha
cmp
lods
sub
and
iret
inc
dec
and
xchg
and
jg
out
rcl
adc
loop
pop
jmp
js
dec
inc
add
mov
je
jp
popf
push
adc
push
lods
push
sub
xchg
jmp
pop
mov
cltd
dec
xchg
outsb
push
push
dec
inc
fsub
rorl
dec
out
or
mov
out
xchg
bound
inc
in
dec
or
test
jl
ss
xchg
gs
fwait
popf
pushf
inc
mov
adc
adc
pop
lods
popf
dec
mov
sti
xlat
cmp
or
or
cmp
mov
out
fcmovnbe
int3
loope
ret
lds
je
mov
and
ret
dec
test
sbb
inc
mov
imul
lock
jmp
outsl
iret
cmp
hlt
push
sbb
nop
das
out
ss
dec
push
ss
add
adc
call
in
imul
and
dec
xor
sbb
iret
into
hlt
dec
arpl
cmp
ljmp
test
xor
xor
xorl
cmp
out
daa
aaa
cmp
cltd
xchg
xor
cltd
jbe
or
int3
cmc
int3
cmp
sahf
insb
sub
aas
pop
and
pop
mov
mov
loopne
popf
ret
out
mov
or
pop
xchg
fidivrs
movsb
icebp
bound
out
adc
lods
les
fcompl
sbb
inc
outsl
adc
insb
xchg
jne
js
add
mov
cmp
je
lods
test
or
pop
bound
and
bound
xchg
mov
mov
fidivs
cmp
das
shl
adc
mov
cltd
std
test
jnp
add
test
pushf
and
int
mov
and
sbb
popa
pop
sti
and
cmp
xchg
mov
cmpsl
dec
es
cmp
and
test
or
push
xor
stc
xor
pushf
or
f2xm1
and
outsl
push
inc
mov
sbb
inc
adc
frstor
mov
sahf
push
scas
jmp
dec
or
sbb
aas
es
dec
sbb
faddl
shlb
mull
xchg
sub
push
dec
cmc
out
mov
and
cmp
mov
inc
inc
xchg
adc
leave
loopne
sbb
xchg
sbb
inc
or
push
mov
mov
mov
mov
inc
cmp
push
xor
data16
xchg
mov
cmc
les
push
xchg
jno
lfs
or
lods
cmp
les
and
adc
pop
push
add
pop
cmp
mov
stc
sbb
mov
jge
inc
cld
mov
mov
pop
icebp
xor
pop
in
adc
loope
out
idiv
in
lods
dec
shlb
add
negl
add
mov
hlt
sub
cmp
ret
lcall
outsl
push
cld
mov
mov
mov
popa
xor
add
sub
popa
call
std
or
scas
testl
and
adc
jg
sbb
fstps
jns
or
loope
dec
popf
movsb
mov
lea
inc
ds
mov
popa
loop
pop
call
outsb
fcoms
inc
call
cmp
push
cmp
movsl
sbb
orps
sub
xor
call
jnp
dec
and
ficomps
sbb
push
sub
ljmp
fistpll
test
daa
xchg
xchg
daa
sbb
cmp
inc
mov
rcl
xchg
push
in
out
inc
loope
sub
cs
popa
jbe
lret
mov
mov
mov
ficoml
mov
xchg
js
pop
jge
pushf
sbb
in
push
sub
fisttpll
push
dec
xor
shrl
cmp
ficoms
repz
iret
js
mov
or
in
xchg
add
cwtl
xchg
pusha
cwtl
push
push
jg
xor
xor
mov
mov
xor
stc
adcl
push
jp,pt
xchg
adc
mov
jg
push
fstpt
movsb
scas
and
js
fildll
xchg
in
gs
mov
les
fldl
repnz
jge
loop
add
in
cld
sub
inc
pop
xchg
in
shl
add
pop
dec
in
mov
cmp
inc
dec
in
fcmovnb
les
jmp
rclb
jecxz
je
mov
addb
clc
dec
popa
pop
imul
mov
xchg
movsb
lea
mov
in
ds
lcall
lret
es
div
mov
jle
popa
mov
sub
xor
mov
ret
cld
xor
inc
xor
popa
inc
imul
mov
and
arpl
and
push
push
lock
jg
and
cmp
arpl
inc
cmp
and
add
loope
jl
mov
sbb
pop
cmpsb
enter
cltd
jle
and
jb
call
xchg
or
lahf
das
sub
xchg
add
push
sahf
fxch
hlt
inc
arpl
test
dec
lods
push
cld
push
pop
adc
or
or
fsubrl
loope
pop
and
cmp
cltd
pop
dec
pop
and
push
sub
jecxz
testl
dec
dec
insl
mov
xor
inc
loop
pusha
lcall
lods
pop
mov
rclb
nop
pop
and
fbld
out
mov
aas
push
aaa
xchg
dec
lea
dec
lock
fldenv
test
ljmp
mov
add
inc
mov
scas
out
aas
test
xor
rcrb
insl
dec
rcrl
pop
or
jge
or
adc
push
fldl
push
mov
push
xchg
adc
xor
insl
push
fwait
and
aad
rorb
sbb
xchg
in
roll
fists
in
jecxz
out
mov
lcall
mov
aaa
xchg
mov
daa
adc
clc
jge
fcoml
fistpll
or
push
das
inc
xor
daa
push
in
jmp
cmp
fnstcw
fstpt
out
fmuls
mov
pop
push
arpl
insl
xchg
mov
xchg
mov
pop
cmpl
jno
xchg
jae
pop
jnp
jno
mov
dec
xor
dec
mov
imul
fwait
pop
xchg
pop
cltd
das
arpl
mov
ja
jp
loop
or
std
push
test
fnsave
inc
push
push
pop
stos
jo
or
pop
enter
push
cmp
mov
ljmp
push
adc
fs
std
jle
pop
dec
add
or
sbb
and
xchg
fisttpl
jecxz
dec
dec
mov
dec
and
out
shl
or
test
out
repnz
stos
xorb
jle
or
imul
outsb
add
dec
lea
and
jbe
inc
shlb
std
sbb
mov
clc
pop
test
mov
jbe
lcall
cmp
add
dec
xchg
bound
inc
leave
andb
mov
cwtl
and
insl
inc
jp
and
sub
add
les
xor
ljmp
add
mov
scas
insl
sbb
lret
ja
popl
ficoml
mov
xchg
dec
mov
dec
dec
add
dec
aas
dec
xor
and
pop
add
dec
push
and
xchg
inc
loopne
mov
rcll
cmpsl
daa
xchg
repnz
fs
add
mov
xor
adc
adc
movsb
cmc
mov
mov
into
lret
cmp
cmp
inc
out
or
push
les
ds
fidivl
cmp
lods
dec
movsb
pusha
bound
call
sbb
and
push
push
xchg
ja
add
aam
mov
pop
mov
shll
dec
mov
pop
ret
stos
cltd
mov
xchg
cs
fdiv
xor
pushf
mov
fs
sub
imul
pop
sbb
std
sub
lea
mov
add
sbb
mov
cmc
mov
mov
jno
push
lret
pop
sub
add
pop
ret
xorb
arpl
aaa
push
shr
out
outsl
inc
fbstp
inc
arpl
aas
mov
pop
jle
inc
mov
movb
dec
mov
jne
fwait
inc
call
test
das
loope
xlat
pop
mov
je
pushf
mov
or
arpl
loopne
cmc
push
cmp
and
loope
xchg
sar
xor
ficompl
cltd
push
cmp
lret
loop
stos
jl
and
loop
fcomps
fisubs
out
xchg
fwait
cmc
mov
cmc
std
shrb
xor
inc
dec
push
fimuls
in
rorl
inc
or
xchg
out
scas
orl
push
enter
adc
xchg
shrb
dec
adc
stos
or
or
push
dec
mov
push
pop
andb
ret
adc
jb
mov
xor
test
mov
jl
stos
dec
rcrb
jmp
inc
fwait
push
pop
negb
out
fldt
xchg
jl
push
mov
dec
shlb
stc
mov
mov
shl
push
sub
adc
or
sarl
mov
sti
pop
sub
sub
add
xor
rol
lret
xor
dec
arpl
pop
push
inc
subl
enter
or
mov
add
sti
mov
fidivrs
adc
in
cld
or
decl
and
or
repnz
cs
pushf
dec
mov
cmc
rcrb
loope
lret
movsl
pusha
sbb
pusha
sbb
scas
cld
decb
fistpll
sub
mov
lock
pop
test
imul
sbb
cmp
cmp
hlt
decb
sub
fstpt
test
add
insl
loop
pop
mov
xchg
scas
stos
mov
insl
mov
dec
cmp
lahf
incl
xchg
lea
fsubrl
sti
inc
dec
ja
jge
mov
xor
push
jb
rol
stos
and
sahf
rorb
xchg
rclb
loop
rep
xor
jne
lret
mov
lock
inc
out
int3
outsb
rorl
add
fs
cmp
lret
push
add
in
fs
mov
shr
test
gs
mov
xchg
ror
adc
test
jae
xlat
xchg
cmpsl
sbb
mov
popa
cli
jp
lcall
jo
dec
movl
dec
out
and
pop
sub
jno
call
add
pop
xchg
pop
outsb
cltd
fdiv
and
lret
sub
out
fwait
popa
mov
jns
decl
xchg
aaa
push
and
push
cmp
arpl
push
dec
int
imul
adc
add
jecxz
into
and
mov
xchg
dec
call
scas
test
xchg
in
mov
fwait
cli
cli
mov
or
pop
pop
xchg
jge
push
nop
inc
jnp
mov
out
adc
push
pop
xchg
pusha
xor
lret
aad
mov
sahf
popa
jg
aam
xor
fdiv
mov
data16
inc
movsb
cmpsl
jp
je
ficompl
hlt
outsl
mov
or
or
push
push
or
and
pop
jle
mov
mov
jnp
mov
pop
xchg
xor
mov
divb
fldenv
cmpsb
jbe
shrl
test
cmp
call
out
idivb
pop
push
nop
mov
rolb
addl
xor
insb
insb
outsb
or
lock
sbb
dec
xchg
xchg
bound
data16
mov
pushf
mov
cmc
mov
sub
jmp
shlb
outsb
mov
mov
and
aad
jnp
mov
mov
iret
cmpsl
inc
jmp
mov
in
dec
inc
push
push
push
addl
push
sti
mov
jp
sbb
lret
and
js
pop
cmpsb
inc
pop
or
xor
xchg
enter
pop
dec
test
movsl
jmp
xor
xchg
and
jb
pop
and
push
cld
xlat
mov
jg
sbb
xchg
ret
fidivl
ja
shlb
push
sahf
cmp
ret
and
xor
iret
rol
icebp
jno
stc
xor
xor
jbe
jb
cmp
pop
jo
xchg
xor
jbe
arpl
loop
push
xchg
xor
cmp
fadds
stc
ja
mov
iret
cmp
adc
mov
pushf
mov
out
inc
cmpsb
dec
js
movsb
pop
or
addr16
jl
repz
fsubl
dec
mov
shll
lret
gs
push
push
xchg
push
test
adcl
mov
and
pushf
pop
and
cld
arpl
jg
aaa
cmp
mov
hlt
fcoms
loop
fidivl
dec
or
js
ret
xor
inc
in
pop
xor
les
mov
out
sub
leave
xlat
push
pop
push
push
sbbb
rorl
adc
sub
loop
int3
shr
xor
jl
adc
rcl
pop
into
fsubrs
xchg
mov
sarb
les
cmp
ds
clc
shl
fsubrs
push
pop
inc
mov
and
sub
mov
out
fnstcw
cmp
cmp
aad
adc
inc
cmp
lret
jl
push
sbb
lock
out
inc
dec
aad
push
nop
in
dec
cli
pop
lcall
repz
cwtl
inc
repz
addb
mov
dec
out
int
aam
inc
jo
or
push
push
sbb
mov
fisubrs
shr
add
sub
push
xchg
clc
mov
or
lods
mov
cs
mov
pop
bnd
dec
or
lret
data16
adcb
or
adc
push
out
int3
bound
idivl
jg
mov
sbb
outsl
ficoml
jge
enter
imul
pop
stc
imul
jmp
daa
js
inc
jecxz
push
sbb
pop
lret
ds
fucompp
pop
gs
pusha
sbb
hlt
inc
insb
repz
std
aad
adc
mov
push
dec
out
add
popf
adc
ds
xor
fisttpll
jmp
lcall
and
dec
or
fldcw
rorb
ss
mov
imul
xor
and
int
bound
xchg
dec
or
pop
cmp
cld
jbe
add
andb
dec
xchg
in
inc
push
cmp
jbe
mov
dec
mov
shl
flds
push
pop
xchg
outsl
cmp
sbbl
jmp
arpl
adc
in
sbb
lahf
lods
pusha
cld
mov
cmp
sub
pop
mov
cmp
inc
flds
add
pop
adc
mov
cli
push
xchg
push
mov
pop
pop
mov
jo
out
aad
inc
mov
dec
adc
mov
jg
add
iret
xor
jo
and
outsb
adc
add
inc
inc
jge
jl
movsl
dec
add
aaa
cmp
pop
psubusw
mov
or
xor
cmp
dec
inc
addr16
adc
jp
popf
pop
insl
cli
mov
aad
pop
lahf
test
or
push
pushf
mov
mov
sahf
jno,pt
hlt
add
xor
rol
cmp
sbb
fwait
sahf
rcrb
call
shrl
mov
ret
clc
jo
add
dec
cmpsb
inc
outsb
mov
add
leave
out
fisubrl
popf
and
repnz
xlat
hlt
loope
add
sbb
insl
pop
pushf
pop
inc
jecxz
xor
jp
push
jns
mov
rorb
push
mov
repnz
lret
iret
mov
sbb
push
je
pop
adc
into
push
xor
insb
sbb
int3
cmc
xor
dec
ficomps
int3
dec
out
push
xor
jnp
inc
inc
lods
dec
adcl
mov
push
in
mov
sahf
test
negl
inc
adc
mov
dec
push
mov
cmp
mov
movsb
das
mov
daa
sbb
movsb
les
sub
pop
cmp
push
sub
mov
jmp
data16
incb
aas
and
cltd
call
pusha
popf
sub
mov
mov
inc
add
push
xor
adc
adc
les
push
aaa
add
push
jbe
subl
insb
insl
add
jne
mov
mov
sbb
jg
or
adc
aad
mov
scas
mov
xchg
add
leave
jns
pop
adc
std
std
sbb
mov
shll
in
addr16
mov
pop
lret
push
repnz
out
sub
pop
in
xchg
add
sbb
cld
iret
leave
pop
fcom
cwtl
sub
add
mov
call
enter
lret
jne
mov
fwait
dec
xlat
fbld
sub
lcall
scas
test
mov
dec
clts
daa
test
or
aam
xor
stc
in
ss
gs
stos
pop
pop
mov
pop
aas
mov
or
add
or
ljmp
adc
adc
jg
hlt
ret
ret
pop
int3
push
out
pop
aaa
arpl
in
mov
stc
push
sarb
lock
pop
sbb
dec
push
and
xlat
movsb
inc
adc
adc
mov
push
fidivs
lret
lods
rorl
inc
fs
mov
jg
into
add
pusha
repz
sub
dec
mov
inc
pop
mov
cmp
inc
sbb
sarl
mov
add
or
sub
es
add
xor
fs
nop
movsl
pop
out
in
mov
ret
push
cmp
mov
out
jmp
rcrl
rol
mov
ljmp
arpl
shl
daa
dec
xchg
jle
mov
xor
outsl
out
or
inc
mov
pushf
mov
push
xchg
mov
dec
cmpsb
add
xchg
lcall
flds
aam
cld
jbe,pn
test
sbb
pushf
inc
in
shlb
xor
sbb
es
clc
cmpb
scas
sbb
test
loope
rcrl
nop
iret
jb
subb
cmp
roll
cs
ds
pusha
mov
adcb
pop
lcall
ljmp
pop
out
daa
sbb
cmc
ret
mov
out
pop
popf
pushf
mov
enterw
fsts
rcr
enter
in
shlb
fadd
jns
mov
dec
dec
in
pop
cltd
cld
mov
aad
xor
add
or
cwtl
imul
js
popf
pop
jae
movsb
idivb
lds
testb
adc
iret
adc
sbb
mov
fstpl
pop
mov
jns
aad
mov
sbb
sub
scas
push
pop
mov
movsl
xchg
aaa
push
int
push
dec
xchg
popf
xchg
jp
sub
sub
adc
sbb
xchg
jecxz
mov
sbb
out
dec
aas
mov
cmp
js
sub
inc
loope
sbb
shrb
jno
outsb
cmp
pop
mov
rorb
jne
lret
inc
lea
aam
out
mov
fdivrl
jo
add
mov
and
sahf
mov
pop
add
repz
fildl
mov
dec
and
sub
mov
push
scas
jb
movsb
dec
insb
in
into
adc
in
cmp
mov
movsl
call
out
jmp
insl
dec
movsb
lahf
test
lds
mov
xchg
lahf
or
cmpsb
sti
mov
add
jb
rclb
lock
jb
or
gs
jo
cld
les
cltd
repnz
cmp
jns
pop
xchg
loope
jb
sbb
out
cmc
lcall
jno
mov
das
test
or
xor
jno
sub
into
xchg
inc
lock
in
out
mov
pop
std
je
pop
fimull
in
insb
adc
ds
cmp
mov
push
test
sbb
pop
test
mov
loopne
mov
inc
xchg
jno
outsb
cmp
jnp
sbb
in
fidivrs
pop
aad
xor
mov
test
push
mov
push
scas
movsl
and
test
cmp
jne
or
dec
push
mov
test
and
cmp
in
popf
aas
stos
ror
adc
mov
jle
rclb
fsubrl
out
push
notl
sub
cmp
xor
adc
xchg
push
cli
dec
mov
pop
insb
dec
pop
frstor
push
repnz
sahf
sub
sbb
outsb
in
cmc
cs
and
frstpm(287
sbb
cld
mov
jecxz
xor
sub
nop
rcrb
jnp
lock
lcall
adc
xor
aam
lods
loopne
arpl
mov
jge
stos
ficomps
push
rorb
pop
cmpsb
cli
mov
push
gs
cmpl
mov
fs
in
test
in
pop
mov
mov
cmp
jnp
xor
cmp
cltd
aaa
and
push
hlt
insl
mov
push
and
mov
enter
dec
or
in
imul
or
push
mov
gs
ret
inc
xor
icebp
cmp
shrb
dec
mov
lret
and
es
aam
aam
mov
push
sub
push
sub
call
dec
sbb
xlat
rcr
sub
les
dec
mov
jg
sbb
sub
je
imull
or
cs
jg
inc
cmc
iret
aad
mov
mov
lock
pop
jmp
fdiv
mov
mov
mov
test
inc
adc
push
lcall
dec
inc
aas
test
and
fcomip
cli
ja
inc
xor
pop
lds
sub
or
adc
mov
jae
idivl
xor
xchg
cld
out
inc
pop
arpl
and
out
iret
aam
and
insl
mov
outsb
push
xor
out
arpl
mov
rol
sbb
movsb
js
pusha
pushf
mov
fbld
cwtl
jp
scas
fdivp
stos
test
pop
sbb
xor
add
push
es
jle
aad
sub
xchg
in
pop
sahf
pop
mov
jno
mov
fisubrl
mov
imul
adc
lods
push
jge
sar
clc
in
in
cld
jno
cmpsb
jmp
pop
inc
rcll
inc
xchg
inc
pop
pushl
add
lea
lret
sbb
rcll
pop
dec
pop
addr16
bnd
popf
jg
dec
es
lea
xchg
or
cld
sub
sbb
cmp
xlat
inc
jge
pop
dec
dec
mov
ds
inc
add
sub
in
lods
pushf
rcl
sbb
test
aam
or
rcl
adc
push
cwtl
int3
pop
call
arpl
test
ror
push
popa
sub
es
dec
or
cltd
mov
add
push
sbb
lcall
cmpsb
or
xchg
scas
and
mov
add
sub
andb
sti
lock
sbb
mov
cmp
scas
jge
inc
dec
cwtl
mov
icebp
sbbb
and
and
icebp
cli
in
push
mov
inc
mov
dec
add
mov
inc
xor
pop
mov
pop
or
add
xchg
dec
leave
push
dec
outsl
fmuls
pusha
dec
jp
jne
cmpl
mov
daa
test
cmp
in
sti
hlt
sti
ret
movsl
jbe
outsb
insl
xor
idivl
icebp
sti
add
andb
loopne
xor
ss
into
xchg
loopne
cmp
pusha
data16
jne
mov
stos
xor
stos
gs
mov
pop
ljmp
push
cli
push
adc
adc
lret
push
popa
mov
jnp
mov
adcl
cmpsl
mov
dec
aaa
scas
mov
mov
fldenv
rclb
out
sbb
mov
jnp
inc
daa
lret
aam
add
add
xor
out
rep
xor
dec
push
sbb
inc
mov
mov
repnz
dec
sbb
pop
ljmp
scas
hlt
jns
jbe
mov
sub
or
pop
into
test
ficomps
std
or
bnd
xchg
push
jbe
mov
in
divb
cltd
push
adcl
out
sub
mov
cmpsb
pop
dec
xor
and
push
popa
sub
jge
hlt
inc
lret
shrb
rcrb
or
mov
sub
movsl
test
mov
ljmp
add
cmc
enter
mov
mov
lret
push
push
shlb
sub
insb
add
jnp
pop
stos
iret
dec
cltd
insb
or
aaa
lcall
or
outsl
cmp
repnz
out
or
lods
cmp
leave
inc
pop
cwtl
pop
add
cwtl
xor
leave
xor
inc
aaa
push
sub
jns
lds
pop
iret
push
dec
jmp
dec
or
sbb
jmp
cmp
and
inc
cmp
add
cmpsl
fbld
inc
fnstcw
and
nop
jo
sbb
sub
stos
popf
sti
ss
cltd
cmp
incl
sub
loope
mov
or
cmp
or
das
insb
mov
sahf
or
icebp
jns
jmp
push
push
mov
sti
jge
adc
xchg
into
cmpsb
lock
and
add
add
mov
adc
sar
arpl
jo
mov
popf
jbe
mov
nop
inc
jg
xchg
or
inc
mov
pop
pop
lock
mov
and
gs
test
mov
push
sub
cwtl
jg
and
mov
out
vcmpps
adc
or
outsb
jns
ficompl
cmp
push
pop
faddp
repnz
adc
hlt
lock
dec
xor
xchg
push
repnz
and
ljmp
sbb
or
cmpsb
adc
lods
cmp
ljmp
mov
divl
xor
fwait
pop
push
std
mov
or
pop
sub
inc
into
dec
dec
push
lods
dec
daa
jne
leave
mov
push
fcom
pop
inc
lock
ret
adc
sub
fsts
fisubl
add
daa
pcmpeqw
rol
orb
xor
andl
je
icebp
sahf
sub
sbb
leave
mov
aas
sbb
movsw
xchg
fcoml
mov
lret
or
jb
hlt
mov
insb
icebp
mov
cmpb
jmp
mov
mov
test
daa
movsb
sar
outsb
mov
dec
jae
push
adc
inc
fisttpl
inc
cs
mov
xchg
fsts
sbb
sbbl
lea
cmpsb
xchg
mov
arpl
inc
jo
or
shlb
fnstcw
test
inc
inc
ss
negl
jb
dec
test
fsub
lds
bound
mov
xor
adc
mov
shlb
inc
or
add
stos
sahf
jge
mov
outsb
mov
mov
xlat
inc
inc
popf
push
or
jne
out
inc
jno
sti
jl,pn
cld
dec
andl
ljmp
mov
std
cwtl
jne
incl
je
sbb
and
dec
cs
xor
in
popa
test
cmp
ja
or
or
cltd
or
pop
fiadds
mov
push
mov
push
jb
cmpsb
iret
dec
or
fcomps
cmp
jmp
js
ret
pusha
fmul
mov
lcall
adc
add
inc
mov
enter
cmp
sahf
adc
inc
and
sbb
hlt
out
andb
inc
xchg
or
mov
clc
mov
pushl
add
push
jne
xor
push
adcb
lret
rcl
std
xchg
xor
mov
xor
popa
jecxz
lock
sahf
gs
test
jp
jae
in
lods
call
xorb
lea
out
addr16
pop
fcomps
push
adc
or
sub
or
and
hlt
int3
mov
lahf
frstor
fwait
dec
enter
loope
cmp
sub
adc
movsb
mov
rol
mov
fstl
xchg
and
out
cmp
adc
test
xor
ret
adc
inc
outsl
imul
or
jmp
lds
and
mov
repz
xor
dec
inc
adc
mov
and
data16
sub
jae
fidivs
add
je
push
fidivs
lcall
sbb
pop
pop
sub
fiaddl
in
mov
sub
mov
mov
fidivrs
pusha
lds
push
adc
lods
add
cmp
mov
out
cmc
jbe,pt
dec
sar
fwait
and
add
xlat
push
clc
pop
fcompl
fcompl
mov
or
loope
jnp
push
cmp
pop
or
sbb
adc
test
mov
sbb
scas
mov
inc
gs
push
cmp
jo
ret
sub
mov
sub
add
mov
stos
arpl
jp
adcl
ret
popa
mov
dec
jg
xor
xchg
ficoml
ds
mov
or
mov
inc
icebp
jg
shl
addr16
mov
jmp
xchg
sbb
push
nop
jo
and
imulb
movl
loope
sbb
mov
mov
pop
test
xchg
or
shrl
scas
jmp
ret
lahf
jb
dec
inc
sub
loope
push
bound
out
out
xchg
inc
mov
sbb
sbb
xchg
cmp
lret
repz
jbe
ljmp
and
mov
add
das
cld
mov
dec
sbb
call
out
add
icebp
bound
arpl
push
ja
xor
and
mov
jo
divb
clc
loopne
cwtl
out
push
andl
and
daa
jp
adc
bound
mov
or
adc
adc
mov
into
xchg
fimull
push
lret
adc
outsl
adc
dec
rcrb
pop
pop
insb
popa
std
imul
test
sar
ficomps
pop
int
enter
dec
out
or
inc
cmp
lock
mov
mov
cltd
mov
stos
mov
sbb
int
jle
and
call
sbb
test
push
icebp
sbb
inc
arpl
fldl
cmp
cli
and
mov
fcoms
out
mov
aam
movsl
jmp
repz
xlat
push
mov
or
lahf
das
adc
push
popa
adc
or
scas
and
insl
mov
dec
cmp
subb
jns
fincstp
cmp
aam
imul
cltd
lea
mov
cmp
adc
clc
lock
in
cmp
add
jmp
or
cmp
jno
sbbl
add
pop
inc
test
jo
push
or
mov
dec
repnz
ja
popa
sub
hlt
adc
ljmp
lock
sub
cmp
int
dec
jbe
rcr
pop
dec
sub
das
dec
lcall
incl
cmc
mov
sbb
int3
sbb
subb
jecxz
cmp
or
mov
in
cwtl
push
sbb
jnp
dec
jae
sub
in
sar
insl
and
sahf
inc
sbb
xor
sub
test
pop
repz
jmp
rcll
add
sbb
mov
sahf
adc
xor
insl
test
cli
xor
mov
push
dec
std
cmpsb
std
int3
fcoms
loope
fbld
dec
mov
addr16
repz
ds
das
addb
push
sbb
add
sbb
rcll
inc
cmpsl
xchg
jb
add
sub
mov
pop
out
xchg
data16
fsubl
mov
fnstenv
cmp
into
push
push
stos
dec
mov
xor
jmp
in
out
jg
xlat
push
lods
mov
and
mov
push
popa
popf
pop
jle
mov
adc
jnp
imul
mov
popa
lret
dec
xchg
mov
rol
es
xchg
in
fcmovbe
ds
dec
aam
clc
or
sbb
xchg
ret
sahf
cmpsb
push
lret
mov
repnz
lahf
and
jnp
inc
pop
repnz
inc
repz
shll
sbbl
loope
add
arpl
out
imul
inc
pop
fadds
cld
mov
sarb
inc
orl
jne
cs
aam
and
jg
mov
jmp
and
mov
scas
or
fs
mov
icebp
xchg
mulb
movsb
mov
jl
andb
jmp
leave
mov
or
repnz
jno
sbb
dec
fdivs
mov
clc
sbb
mov
push
inc
rcrb
mov
out
mov
insb
dec
js
push
push
xchg
out
mov
and
inc
scas
std
jle
push
sahf
enter
test
scas
scas
add
loop
xchg
bsr
ds
jg
inc
add
sub
sbb
sbb
sbb
inc
push
aaa
pop
movsb
add
fcmovnbe
into
jg
dec
lods
pop
jbe
ja
xor
int3
pop
fisubs
push
jae
cmpsb
mov
shr
lahf
sbb
and
dec
aas
decl
aam
inc
mov
fsubp
adc
xchg
adc
jne
mov
lea
sbb
sbb
dec
mov
stc
lods
mov
aad
fisubl
pop
lods
push
cld
aaa
dec
pop
xor
inc
lods
push
pop
dec
xchg
inc
and
mov
or
xlat
mov
cmp
shll
popa
and
sbb
iret
mov
and
dec
outsl
fsub
push
js
dec
push
pushw
inc
aam
jecxz
and
mov
jmp
xor
cld
mov
addr16
in
cmp
pop
add
ss
stos
inc
lcall
movsl
loope
out
mov
aas
addr16
add
imul
jmp
scas
leave
pop
or
rol
les
push
xchg
out
mov
sub
mov
cmpsl
sub
in
int
inc
push
cmp
pop
insl
and
fistpl
push
sub
mov
cwtd
repz
cmp
sahf
mov
test
jbe
aaa
imul
stc
lret
push
sbb
push
mov
pusha
div
insb
rclb
out
add
push
add
addr16
or
cmpsl
add
icebp
xchg
cmp
push
push
jbe
pop
fadds
cmp
outsb
add
mov
push
xchg
cmp
adc
dec
dec
lods
into
ljmp
mov
rclb
inc
cmp
mov
push
mov
xchg
insb
fwait
mul
sub
imul
sbb
xchg
adc
dec
dec
jle
frstpm(287
stc
sub
add
test
mov
adc
pop
dec
push
fcomi
lock
xchg
lds
ljmp
dec
inc
cli
sbb
xchg
push
ljmp
bound
mov
roll
push
push
xlat
ficoml
inc
mov
pop
mov
imul
lret
pop
into
in
mov
or
push
fistps
sbb
lahf
adc
jnp
push
scas
ror
cltd
dec
lret
xor
lock
cmp
jl
sub
mov
sbb
pop
sub
dec
mov
mov
push
xchg
sub
cmp
sbb
xchg
cmpsl
sbb
movb
cltd
push
fnstcw
shll
cmp
mov
cmp
push
ds
mov
jno
push
jge
xor
cmp
shlb
sub
jb
pop
lods
sub
push
xor
push
or
sbb
jg
dec
push
iret
test
jbe
xchg
fmull
jge
mov
jno
pop
lahf
int
dec
mov
mov
fbstp
adc
addb
pushf
pop
sbb
or
mov
add
or
test
subb
insl
sub
aad
loop
jae
clc
xlat
mov
push
add
sahf
lods
daa
shll
pop
addr16
xchg
repz
imull
and
imul
cld
push
dec
cmp
pop
std
or
inc
std
outsb
jge
mov
sbb
mov
lods
lods
push
sarb
sbb
mov
jne
sahf
mov
test
pop
xchg
sub
bound
push
leave
pop
scas
les
cmpsl
push
loope
out
sti
rorb
mov
fwait
mov
ret
shr
jnp
call
test
mov
dec
ljmp
inc
push
add
aad
xor
aas
cmp
in
jp
push
cli
in
jno
xchg
mov
adc
pop
mov
fldenv
arpl
cli
mov
shlb
fildl
cmp
stos
xor
loopne
push
jbe
nop
inc
xchg
add
add
out
sarl
push
pushf
jmp
icebp
xor
xchg
or
es
lock
inc
iret
xchg
icebp
lock
stc
cltd
cwtl
ret
imul
or
mov
idivb
jbe
loopne
dec
sti
mov
in
jae
fnstcw
lret
xor
sbb
sahf
int
sbb
xchg
add
sub
push
sbb
pop
pop
pop
dec
sub
xor
int
lea
call
jecxz
gs
stos
sub
jp
xor
loop
adc
in
xchg
mov
in
stos
mov
orb
adc
mov
in
add
jl,pn
jecxz
cmp
lahf
lret
repz
daa
push
cmp
push
adc
shlb
push
fs
lret
adc
or
xchg
divl
std
es
lock
loop
fnsave
add
cld
repz
iret
clc
in
xchg
jnp
test
pushf
pop
xor
push
arpl
or
cmp
mov
adc
xchg
xor
stos
les
dec
clc
mov
mov
in
jg
add
int
ds
bound
pop
lea
xchg
and
dec
movsl
mov
xchg
in
inc
jo
xchg
or
aas
aam
lahf
jle
aam
sbb
int
cmp
mov
nop
mov
pop
sbb
sarb
or
les
ja
in
inc
inc
pop
push
aad
adc
cmp
stc
lods
repnz
int3
inc
jl
rcl
ficompl
ds
xor
jge
lret
inc
fdivrs
fbstp
scas
popf
ret
cld
jnp
jbe
push
es
xchg
lock
add
gs
and
mov
sub
adc
test
aas
or
add
lds
orl
cli
testb
or
and
push
icebp
and
or
and
out
cmp
mov
cmp
into
lea
mov
mul
mov
adc
mov
dec
mov
pop
test
cld
popa
dec
push
inc
clc
in
mov
out
jb
popa
mov
stos
mov
mov
in
std
mov
add
add
movsb
repnz
jno
add
outsl
bound
in
add
cli
out
outsb
xor
sub
sbb
mov
sub
sub
shrb
sbb
inc
shll
out
lods
push
dec
movsl
xchg
mov
sar
cmp
push
and
test
popa
jl
cwtl
pop
call
insb
or
jmp
xor
scas
bound
ds
std
gs
cld
add
xlat
jle
lods
ljmp
xlat
jge
inc
mov
iret
ds
sbb
cmp
loope
lods
mov
sub
pusha
push
cmp
jmp
or
adc
jecxz
xor
call
aad
mov
mov
je
push
push
in
lea
jp
dec
cmp
push
xchg
jle
aam
adc
or
das
loopne
adc
push
or
les
insl
rcl
and
dec
jg
aaa
cmp
or
add
pop
push
js
jbe
ljmp
xchg
daa
pop
pusha
lods
add
sub
jnp
fldz
stos
clc
mov
imul
push
je
cmp
cli
xchg
inc
pop
and
lds
mov
fcmovnb
insl
aaa
imul
arpl
mov
pop
jge
ss
adc
push
call
pop
daa
fsubr
adc
xchg
xor
cs
xchg
or
lods
movsb
notl
mov
cs
test
xchg
mov
orl
jmp
inc
jl
mov
push
ret
mov
insl
stc
mov
dec
out
push
fmuls
rorb
mov
in
push
adc
lock
push
cmp
repz
jmp
nop
packsswb
insb
decb
jb
in
mov
or
and
mov
dec
mov
xchg
push
pop
arpl
xchg
cmp
push
xchg
mov
mov
jnp
push
iret
or
add
cwtl
inc
cmpl
push
movsb
pop
push
xchg
sti
jmp
pop
jp
ja
inc
loopne
sub
xchg
and
out
xor
and
mov
adc
dec
cmpsb
mov
ficoms
stc
les
push
push
out
ja
fsts
push
in
and
push
lahf
cs
xchg
push
pusha
pop
cmp
and
lods
out
clc
icebp
int3
lret
pop
sub
leave
pop
pop
pop
sahf
xor
fidivs
xor
dec
mov
inc
cmp
cltd
adc
sub
fcomi
push
cld
outsb
fistpl
jmp
xor
push
cmpsl
jb
push
cmpsl
out
and
inc
mov
adcl
sti
jae
out
adc
xor
and
xchg
dec
in
jecxz
pop
std
popa
mov
out
or
sub
loop
inc
pop
ja
inc
cmp
fstps
inc
inc
fcomps
not
mov
in
jmp
xor
or
or
add
or
rcrb
pop
ret
mov
pop
lods
or
push
mov
loop
xor
sbb
dec
dec
imul
push
pop
daa
hlt
sbb
out
fwait
daa
fmull
push
cld
xbegin
sbb
ljmp
in
mov
add
out
cltd
adc
int
xchg
push
dec
orl
data16
jnp
cs
lahf
out
add
cmp
loopne
out
lock
loopne
add
bound
cmp
add
popf
adc
div
dec
lods
dec
cmp
xor
push
cmpsb
je
sti
mov
mov
and
ljmp
out
ret
pop
divl
les
push
mov
xor
mov
pop
and
stc
jne
pop
aaa
push
fsubp
mov
loop
dec
inc
pop
sub
pop
cmp
shrb
sub
jo
icebp
jb
fnstcw
orb
inc
cmp
mov
lods
jge
pop
in
inc
fdivr
fnstcw
inc
sub
ss
jge
add
or
scas
hlt
rclb
ja
fs
mov
sti
or
mov
and
lods
xchg
aas
loope
rcll
mov
jns
fcmovbe
addr16
add
xchg
jo
inc
not
in
and
jns
fisubrs
push
pop
and
or
sti
inc
leave
aam
jmp
cmp
add
xlat
and
sub
push
add
popa
mov
clc
insl
jle
dec
leave
sbb
xchg
pop
fsincos
mov
fs
cmp
rcll
int3
scas
mov
out
dec
mov
sarb
cltd
cmc
aaa
mov
dec
fnsave
push
cmc
mov
jne
xchg
outsb
push
jge
inc
popf
fistps
mov
mov
mov
aas
lds
mov
ret
out
inc
mov
je
mov
sar
cs
out
jns
repz
out
xor
cwtl
or
jg
add
push
sub
repnz
les
mov
stc
arpl
and
xchg
mov
pop
jg
or
rolb
and
imulb
movsl
daa
cmpsb
pop
inc
and
mov
je
mov
test
push
inc
dec
and
test
mov
or
nop
mov
mov
or
dec
mov
sub
stos
and
aas
adc
jno
int
push
mov
into
sub
or
mov
or
xchg
sub
lods
sbb
and
add
pshufw
fisubs
bound
mov
repnz
ret
and
pop
xchg
cli
xor
sub
sbb
dec
mov
push
mov
cwtl
aad
jo
addl
mov
sbb
inc
pop
sahf
lds
cli
mov
daa
and
mov
push
loop
push
repz
add
lret
psraw
inc
test
jecxz
sahf
nop
in
pop
fildl
aaa
pop
ljmp
pop
pop
gs
push
outsb
fisubrl
mov
xchg
sub
and
mov
nop
scas
adc
imul
push
sbb
sub
cld
cmc
cmp
aaa
pminub
mov
in
test
in
pop
xchg
jecxz
into
iret
lahf
add
xchg
push
mov
daa
test
out
push
aas
sub
push
mov
test
ret
fwait
push
lods
mul
push
xor
loop
hlt
add
fneni(8087
test
outsb
sub
pop
fcomi
adc
cmpsl
adc
add
lods
loopne
cmp
pusha
aam
cltd
pop
test
ret
xchg
sbb
decl
cltd
xchg
mov
pop
sbb
cs
cmp
ret
push
test
aas
or
inc
mov
jo
xor
arpl
push
add
test
mov
cwtl
je
pop
inc
out
push
dec
cmp
jl
add
das
add
jbe
ljmp
sbb
out
fcomps
dec
movl
sbb
shll
shrl
mov
sbb
ljmp
fcomps
sub
test
subb
fdivr
cld
cmc
jmp
out
les
daa
pop
inc
xor
or
cmp
xor
jp
jle
add
and
fsubrl
fadds
adc
addl
or
jb
fwait
sti
mov
push
inc
and
aas
sbb
mov
jb
xchg
int3
imul
fs
mov
dec
adc
sbb
dec
mov
je
dec
mov
dec
sbb
aad
addb
jbe
test
test
das
mov
pop
ds
jno
jnp
cld
xor
push
dec
bound
lea
xor
adc
stos
leave
imul
addb
cmpsl
movsl
sub
jge
mov
sti
push
movsl
mov
adc
mov
cmpsl
mov
mov
popf
inc
push
adc
mov
mov
or
mov
repnz
aad
arpl
ret
in
icebp
sbb
adc
scas
xlat
aaa
std
das
out
std
inc
scas
es
test
cmpsl
add
xchg
int3
mov
dec
or
int
in
and
stos
ffreep
inc
lods
int
mov
inc
or
out
xchg
ljmp
je
lret
daa
loop
cld
aam
jno
popa
and
xchg
mov
xor
aad
xor
add
or
push
dec
gs
sbb
ja
inc
cmpsb
aaa
and
mov
nop
sub
mov
xor
daa
cld
mov
call
and
lret
and
lods
xlat
xchg
imulb
into
mov
in
iret
add
mov
xchg
sub
xchg
je
add
icebp
mov
cmp
push
ja
push
mov
jo
sub
jle
jle
clc
loope
pushf
dec
mov
sbb
sbb
xor
xchg
adc
xlat
xlat
fwait
or
pop
adc
popf
jnp
inc
movsb
ds
push
dec
sbb
scas
in
mov
cmp
mov
test
sbb
pushf
shrl
and
stc
dec
das
fsubs
repz
and
add
push
jge
nop
lods
mov
out
flds
jbe
les
mov
and
and
repnz
pop
xor
push
iret
sub
aad
into
lcall
jge
mov
inc
dec
into
jnp
adc
inc
lretw
inc
xchg
inc
xchg
into
js
insb
xor
mov
xchg
jge
dec
loop
dec
incl
int
in
fwait
hlt
out
cmpsl
or
mov
arpl
jmp
fmuls
enter
icebp
or
mov
pop
cmpsl
andb
pop
pop
jne
ss
mov
es
fmuls
mov
jns
and
fucomp
pop
sti
ljmp
sti
orl
sub
jno
sbb
and
hlt
inc
pop
fnstenv
mov
bound
mov
rorb
or
xchg
and
cmpsb
popa
mov
jle
jns
or
xchg
mov
xor
jno
test
add
sti
mov
mov
test
shrl
push
ret
cmp
inc
add
rcrl
pop
or
pop
push
fldcw
xorb
xlat
fcoml
adc
enter
push
and
imul
jmp
mov
adc
jecxz
push
jp
aas
push
out
dec
mov
add
not
je
stc
in
or
inc
pop
test
fs
mov
int
loop
pop
adc
shrl
jl
cltd
stos
pop
push
dec
push
popa
or
pop
addr16
or
xor
dec
popa
mov
inc
fcmovnu
aaa
cli
dec
fsubrs
andl
rcl
mov
pop
or
pop
jp
jge
psubusw
pusha
add
mov
push
sarb
push
push
test
aaa
push
aaa
dec
rolb
iret
arpl
bound
or
jne
inc
ret
jecxz
mov
call
fdivr
or
mov
pop
jae
scas
cmp
dec
adc
hlt
jnp
xlat
testl
divb
cs
push
or
addl
sub
xchg
push
mov
mov
xor
sub
add
lret
sub
push
notl
call
sub
cmpl
or
lods
mov
psubsw
mov
add
pop
dec
jne
popf
xlat
outsl
pop
and
xchg
and
jno
xchg
sti
xchg
mov
inc
cmp
aaa
and
mov
scas
stos
push
push
jl
jb
daa
dec
into
ss
sbb
xchg
dec
xorb
cmpsb
fdivrs
push
jmp
xor
inc
push
loopne
testl
inc
aas
fmuls
shrb
in
xchg
rclb
push
add
sub
loope
lods
loope
push
xchg
xchg
and
dec
xchg
jmp
aas
in
insb
lds
mov
xchg
lea
das
popa
daa
cmc
jo
xorb
stos
rclb
rolb
jp
or
dec
test
loopne
jb
mov
sahf
mov
rcll
filds
and
jns
jns
mov
std
sbb
or
push
push
mov
or
mov
insl
andb
dec
aad
xchg
loopne
or
sub
ss
das
and
push
mov
outsl
rorl
xchg
sti
and
arpl
ja
dec
adc
mov
mov
push
aas
outsl
test
aaa
cmp
sub
mov
push
imul
arpl
ja
test
cmp
pop
pop
iret
bndldx
push
movsb
aad
add
cmp
cli
int3
and
push
stos
cmp
jb
mov
and
push
aaa
fisubrl
shrd
pop
fs
sbb
mov
inc
in
and
out
movb
mov
or
cmpsb
pop
insb
imul
cmpsl
lret
mov
sbb
in
gs
fisttps
push
jp
sub
in
mov
mov
cmpsl
and
xchg
stos
pop
and
and
addr16
jno
loopne
jmp
xchg
push
mov
movsb
or
movaps
std
pusha
filds
ss
sub
lds
add
jns
adc
jb
mov
jb
stos
push
xchg
in
ja
mov
mov
adc
lcall
les
lods
cltd
getsec
pop
ja
xor
mov
das
sarl
in
xor
fidivrs
mov
jnp
fxch
or
loope
inc
dec
jmp
sar
lret
into
or
push
shrb
jmp
jge
push
xor
cs
or
xchg
add
jmp
insb
push
jle
sub
dec
dec
movsl
jmp
mov
xchg
insb
mov
addr16
push
jbe
adc
lea
mov
dec
stos
xor
jle
lret
jg
sbb
sub
sets
xchg
cmp
pusha
decl
jge
mov
loope
repz
aad
clc
lea
icebp
xchg
push
mov
dec
or
outsb
push
out
fs
out
fnsetpm(287
mov
fcompl
sub
mov
inc
mov
ret
add
popf
xchg
jne
jg
popa
cli
clc
or
fsubp
mov
jg
test
xor
enter
int3
jno
pop
mov
test
cmp
and
add
loop
ret
test
repz
sbb
xorb
push
insb
outsb
repnz
repz
in
iret
cltd
push
and
nop
mov
arpl
mov
mov
cld
aad
fprem1
cmp
test
jns
arpl
add
push
shlb
fmuls
jb
test
rcr
sbbb
xchg
push
inc
iret
cmpsl
inc
push
dec
mov
mov
mov
andl
push
sbb
add
dec
push
mov
cld
popf
movsl
pop
xor
jmp
sub
cs
jno
in
je
ds
inc
movsb
cwtl
clc
mov
and
pop
aad
mov
xlat
dec
fistps
sub
out
mov
cmp
xor
ljmp
dec
xchg
mov
or
setle
cmpsl
xchg
jb
dec
mov
mov
mov
xor
int
xchg
push
shrb
gs
fcomp
ljmp
push
outsl
popa
out
mov
inc
xchg
enter
out
xor
jb
icebp
lods
ljmp
mov
pop
adc
stos
or
jne
pushf
dec
enter
out
dec
pop
xchg
lods
pop
out
lods
push
sub
xchg
jns
xor
aad
adc
sub
cltd
pop
das
rol
fisubs
jnp
cltd
int
mov
sbb
test
sbb
jl
andb
xorl
inc
scas
add
add
lds
jle
push
test
push
mov
lcall
cwtl
xchg
pop
cmp
adc
icebp
add
mov
ja
dec
scas
leave
lods
jb
imull
pushf
fnsave
mov
adc
add
loop
xor
cld
outsl
bsr
push
cs
pop
fcomi
xchg
aas
test
repz
pop
and
nop
popf
jne
fidivl
call
jmp
ds
sub
push
test
lcall
leave
in
popf
push
test
fidivrl
imul
sbbb
inc
stos
repz
js
cld
aad
jecxz
shll
add
ja
scas
mov
dec
pop
mov
fwait
mov
repz
call
jno
lods
pop
test
and
or
xchg
inc
lss
sbb
cmpsb
lahf
in
mov
add
adc
xchg
movsl
mulb
icebp
jmp
or
mov
pop
pushf
lea
jecxz
aam
lret
idivb
pop
out
bound
clc
stos
fisubrs
fildl
loope
jg
aad
leave
jge
or
mov
pusha
js
xchg
jmp
mov
jecxz
std
adc
mov
xlat
ljmp
xchg
aaa
or
mov
mov
cwtl
pop
mov
pop
mov
mov
jg
sub
loop
jmp
sbb
je
cmp
fbld
push
std
lods
and
mov
stos
sti
dec
mov
rcrl
scas
shrb
arpl
inc
lcall
gs
jmp
jns
sbb
and
movsb
leave
mov
shll
mov
dec
js
call
les
movsb
shr
sti
cmpb
sbb
sti
outsl
dec
jae
fwait
popf
jle
push
negb
sarl
cmp
xchg
fstl
and
ds
roll
insb
in
cld
cmp
rolb
shl
aas
les
cmp
jecxz
clc
fidivs
pop
je
inc
adc
push
pop
sahf
arpl
mov
mov
mov
and
int3
inc
and
sbb
lea
ficomps
imul
mov
in
dec
mov
sub
in
mov
outsl
sub
xchg
mov
lock
ds
clc
rcr
jle
xchg
jno
in
push
push
repnz
sbb
test
mov
lock
cmp
mov
jmp
mov
ja
aam
mov
pop
dec
jle
enter
sarb
push
sub
call
mov
cmp
xlat
jae
add
mov
ds
pop
call
mov
lahf
xchg
xchg
sub
push
fisttps
dec
enter
mov
push
rcrb
inc
mov
mov
add
push
pop
xchg
xor
in
incb
insb
xchg
xor
jnp
fldenv
pop
movsl
adc
in
mov
sub
dec
fdivrl
sbb
std
push
add
lret
sub
add
pop
push
dec
sarb
add
xor
pop
cmc
lock
popf
pop
dec
or
mov
or
daa
mov
out
mov
aam
mov
in
mov
push
push
aaa
je
inc
jle
adc
imul
lea
aam
push
sbb
push
fdivrp
divl
mov
rorl
adc
xchg
test
popa
insl
mov
das
lds
xor
stos
or
xor
push
fsub
mov
fsubrs
out
popf
jl
stc
test
mov
xchg
pusha
arpl
rdtsc
aas
xor
xchg
sbb
cli
mov
stc
inc
mov
pop
cmp
daa
hlt
clc
repnz
dec
inc
fsubrp
push
mov
cmpsl
sub
mov
pop
aas
dec
sbb
cs
xchg
js
sub
inc
dec
mov
shll
lods
inc
cmp
inc
arpl
jecxz
mov
in
gs
jno
scas
div
or
inc
mov
negb
idiv
notl
decl
arpl
out
xor
in
ret
push
inc
movsl
dec
mov
cli
xchg
popf
xor
bound
pop
lods
cmpl
sub
pop
fidivl
inc
enter
cmpsl
cli
inc
xor
inc
or
sbb
mov
ljmp
mov
ret
pop
jo
sbb
xchg
idiv
stc
mov
gs
jecxz
push
aam
sti
inc
dec
cwtl
mov
outsl
dec
xor
sahf
ficomps
sti
cmp
adc
dec
sub
push
dec
test
xor
imul
mov
test
adc
inc
mov
enter
xor
notl
nop
xor
daa
aad
jns
jns
mov
cmc
mov
and
subl
iret
lret
mov
data16
xlat
or
ret
jb
imul
jg
xor
add
in
movsb
lret
mov
les
adc
ja
pop
test
shrb
inc
and
aad
add
dec
mov
jecxz
mov
push
lcall
add
iret
pop
imul
pop
outsl
push
sti
mov
mov
dec
fcomps
pop
sub
sbb
fistl
mov
dec
mov
inc
stos
or
fbstp
pop
mov
xor
loop
inc
mov
inc
mov
mov
pop
daa
out
lods
out
push
pushf
cli
or
aas
inc
cli
aaa
add
mov
scas
jge
into
scas
or
mov
out
fmuls
enter
gs
inc
push
cs
push
dec
lahf
das
cmpsl
and
cmp
fwait
or
out
ljmp
fwait
lret
inc
les
xchg
and
rclb
loop
test
sbb
mov
cmpsl
jge
mov
sbb
or
jle
enter
add
arpl
loopne
les
cltd
nop
adc
and
dec
inc
or
int
cmp
jge
add
lcall
mov
pop
test
dec
xor
xlat
and
paddw
int
jo
mov
xor
jb
jae
in
cmpsl
aad
stos
mov
jg
jmp
fimull
xlat
movsl
adc
and
bound
inc
pushf
push
mov
call
xor
cmpsb
adc
rcl
int
fs
cmpsl
and
fwait
addb
add
sub
jnp
lods
sub
sub
stc
inc
push
loop
sub
testb
or
mov
push
scas
jbe
inc
mov
adc
mov
mov
notl
in
mov
test
repz
and
sarl
mov
ljmp
adc
jmp
shll
xorb
sti
testl
push
pop
imul
jmp
and
stos
inc
cmp
ss
push
int
jae
dec
or
lea
mov
mov
and
xchg
jne
rcrl
adc
repz
xor
jle
dec
fwait
lcall
sbb
mov
popf
cmpsb
aaa
cltd
scas
repz
ret
in
test
lret
sub
lcall
lret
add
mov
out
mov
sbb
nop
cmp
dec
jp
xor
in
add
mov
pop
inc
xchg
xor
push
lods
mov
imul
sar
or
push
push
outsl
xchg
sti
sub
out
mov
outsl
xchg
xchg
enter
inc
pusha
adc
jmp
jmp
ret
hlt
mov
mov
daa
ret
leave
mov
mov
rcll
add
xchg
inc
fistps
mov
fcomip
pushf
out
fucom
xor
lods
shlb
or
jle
push
arpl
lea
push
std
in
mov
movntps
std
add
out
es
fiadds
movsb
pop
add
cmpb
xchg
lea
push
cld
stos
test
sbb
enter
inc
push
push
xor
pusha
pop
xchg
jno
mov
and
notl
and
jecxz
aad
mov
dec
sarl
lock
adc
lret
imul
cs
xchg
orb
pop
adc
faddl
cmp
cmp
scas
out
bound
xchg
lods
add
or
cwtl
xchg
das
test
adcb
dec
cmpsl
popa
xchg
dec
repz
mov
aam
ja
adc
add
repz
push
rcrl
mov
mov
mov
out
rcl
mov
mov
movl
and
pop
xor
xor
jl
test
push
and
adc
mov
test
cs
das
fistps
or
js
mov
jbe
out
fldcw
add
cmp
mov
sub
jecxz
leave
push
loope
adc
cli
imul
mov
mov
or
mov
cwtl
pop
sub
sbb
sub
loopne
arpl
scas
xchg
test
jb
pop
xchg
out
out
aad
dec
lahf
popf
inc
add
test
loopne
adc
shll
movsb
in
test
insb
mov
push
push
push
xor
sub
mov
jmp
ljmp
mov
dec
ficoms
jne
cli
bound
xchg
es
xchg
push
pop
fdivl
mov
mov
pop
dec
int3
out
dec
pushf
mov
imul
fstpl
dec
lock
dec
xor
outsb
shrl
mov
fwait
lret
xor
push
enter
lcall
push
int
leave
jo
or
xchg
lods
mov
xor
pop
push
lods
adc
lret
cmp
dec
out
ss
push
lock
cwtl
dec
xor
nop
movsl
fisttpll
sahf
mov
stos
and
push
imul
inc
xchg
popa
sbbl
repnz
loopne
add
sahf
mov
in
push
insb
jecxz
dec
dec
inc
sahf
scas
push
jmp
ret
xchg
inc
add
mov
add
and
lretw
dec
out
lret
mov
dec
jo
xchg
int
ret
pop
cltd
imul
push
and
add
jg
dec
arpl
ss
or
scas
jp
clc
dec
loop
pop
jmp
or
jo
pop
js
mov
andl
mov
loope
and
ljmp
inc
inc
xchg
xchg
pushf
add
cs
addr16
imul
xor
sbb
movsb
mov
jmp
xchg
into
and
clc
fdivrs
push
mov
jne
popf
xlat
adc
xor
mov
sub
int
cmp
enter
repz
or
jns
mov
int
out
and
cwtl
jg
ljmp
std
jl
push
mov
movsl
nop
lods
and
dec
leave
fs
es
mov
sbb
add
cmp
adc
test
xchg
aas
negl
repz
roll
or
shll
mov
cltd
mov
mov
cmp
adc
push
mov
push
dec
add
jo
es
imul
loopne
daa
push
lcall
add
sbb
push
jb
stos
lret
dec
cld
mov
or
in
sarl
mov
fisubrs
in
pop
loopne
cs
sub
popf
and
or
sub
call
adc
cltd
aas
fmuls
jae
lods
pop
mov
jnp
push
xlat
mov
iret
xor
stos
jns
pop
out
nop
int3
sub
jp
jge
imulb
add
mov
leave
jl
push
sbb
mov
insb
imul
jb
mov
fcoml
stc
add
xchg
sub
test
es
pop
mov
mov
imul
xchg
sub
sub
xchg
mov
int3
lock
add
adc
mov
ljmp
adc
mov
or
leave
arpl
repnz
sub
loop
sbb
mov
into
jle
icebp
test
mov
sbb
ja
fbstp
jno
xlat
sub
dec
std
dec
mov
sar
sub
sub
lods
jae
or
out
sub
movsb
dec
add
mov
xchg
jnp
testl
xor
sti
out
lds
or
sarb
leave
dec
push
negb
jne
mov
sub
xor
stos
mov
movsl
xchg
arpl
xor
adc
movsb
jg
sub
shl
outsb
dec
or
add
sbb
push
aaa
sbb
inc
iret
dec
in
push
daa
mov
aaa
cs
xchg
rcrl
call
mov
mov
jmp
imul
push
dec
xchg
fwait
ror
imul
push
mov
neg
sbb
xchg
push
sub
outsb
xor
fwait
and
lret
mov
jmp
inc
pop
test
adc
cmp
adc
push
gs
icebp
aas
xchg
sbb
dec
jecxz
add
fnstenv
out
jnp
mov
mov
mov
mov
add
sub
push
iret
mov
pop
ret
mov
outsl
adc
jmp
jae
add
xchg
cmp
and
and
dec
leave
mov
loopne
sub
lods
pop
int
lods
iret
out
add
xchg
popl
sahf
sbb
push
mov
xchg
pop
in
push
scas
loopne
jbe
mov
xor
push
mov
fstpt
fstpt
xchg
xor
jecxz
imul
aam
and
push
mov
xchg
cmp
push
js
movsb
jl
ffreep
lods
jmp
mov
mov
and
and
jne
xchg
jle
data16
in
xor
jae
inc
mov
ss
fs
jge
dec
xor
out
sbb
jno
pop
rcr
daa
mov
scas
adc
mov
movsl
mul
xchg
and
push
ljmp
and
jl
xor
xor
inc
aad
in
mov
xchg
je
dec
sbb
mov
aam
pop
sub
cld
fidivl
movsb
data16
aam
xor
push
pop
jp
pushf
stc
or
push
icebp
mov
xlat
jg
fiadds
das
push
or
into
insl
mov
cmp
sbbl
inc
shll
mov
bextr
aaa
jl
popa
dec
ds
aas
xchg
xor
in
lods
popf
fcmovne
push
gs
lods
cmc
imul
call
fwait
lds
cltd
lods
xchg
pop
push
les
add
push
xor
xchg
outsl
fisttpl
testb
stc
lea
adc
addr16
movsl
iret
cltd
add
stc
sbb
mov
xchg
jg
loope
sbb
mov
aaa
std
iret
xor
je
mov
int
jb
rcrl
or
sub
mov
lock
dec
movsl
sti
pop
bound
outsb
xchg
dec
mov
adc
xchg
in
push
mov
lret
ja
dec
add
test
pop
inc
testb
pop
pop
pop
ljmp
in
stos
in
dec
and
decb
push
mov
stos
addr16
stc
jl
mov
clc
adc
sbb
cmp
xor
fs
stc
mov
jo
jb
dec
mov
into
mov
pop
int3
adc
inc
cli
in
out
repz
test
or
das
adcl
adc
xor
dec
add
int
jmp
inc
fcmovne
and
xor
jb
cmp
push
jecxz
jne
cld
ficomps
popa
jle
ss
pop
or
add
dec
jno
sbb
or
movb
pop
shlb
clc
out
mov
jmp
inc
sbb
dec
call
shlb
push
jmp
mov
mov
or
and
xor
in
push
xchg
into
mov
stc
push
je
dec
js
cmp
popa
jb
dec
test
mov
aam
mov
fcoml
push
mov
or
sub
or
dec
mov
test
mov
stos
mov
out
inc
das
sub
fsubr
mov
mov
pop
nop
mov
inc
and
mov
fdivl
imul
enter
hlt
xchg
movsl
pop
sbb
ret
sbb
jo
subb
icebp
push
mov
fwait
jge
mov
cmpsb
cmpsb
jecxz
xor
loopne
cmp
cmp
js
repz
jnp
mov
jmp
out
pusha
sti
inc
fnstenv
movsb
ficoml
pusha
test
inc
subl
lret
xor
fdivrl
push
or
test
push
cmp
cltd
jne
jns
hlt
ja
dec
cmp
jl
inc
outsl
lods
pop
pop
andb
pop
fldenv
insl
mov
popa
jno
fdivrs
lea
cli
jnp
add
hlt
push
call
mov
inc
rclb
fcmovb
xor
std
lock
aas
lea
das
dec
xchg
mov
int3
mov
dec
lods
jns
sbb
pop
pop
call
ja
fs
inc
lret
mov
jne
xor
mov
sub
and
js
cwtl
popf
sbbl
mov
cmp
cmp
add
xor
arpl
mov
lock
push
pop
out
cmp
int
xchg
jae
xchg
jnp
adc
rclb
mov
jp
jo
ret
aam
inc
jne
hlt
sub
dec
sbbb
cmpb
sub
adc
cld
jg
outsb
cmc
push
xor
mov
pop
or
xchg
mov
movsl
xchg
inc
les
addb
pop
jecxz
or
scas
test
jl
push
fmul
repnz
pop
mov
xchg
jns
aas
or
sarb
lock
lret
mov
pop
jmp
popa
lods
dec
jo
es
add
push
aaa
inc
iret
pop
jl
pop
mov
ds
cmpsb
xchg
cmp
cwtl
mov
loopne
fs
loopne
jl
stc
ljmp
cld
stos
xor
bound
addb
mov
sti
sub
insb
cmpsl
iret
or
in
mov
inc
jp
ja
sub
pop
imul
sti
test
mov
int
popf
and
pop
fnstsw
lea
ficoms
cwtl
mov
sub
or
inc
jno
lcall
cltd
adc
lods
ss
js
mov
adc
aam
mov
repnz
cmp
fwait
adc
insb
add
inc
mov
or
mov
push
cmc
xor
pop
sbb
shl
inc
int3
sub
imul
jge
xor
inc
inc
xchg
push
lods
jp,pt
jbe
mov
dec
test
xor
add
xchg
fsubl
adcb
test
ds
xchg
imul
lret
add
sub
cmp
outsb
lock
xorb
imul
push
mov
arpl
mov
daa
sarl
jle
in
or
in
jb
cmp
pop
mov
xchg
cltd
in
es
fucomi
push
sbb
sahf
push
cmpsb
cmc
orb
fcomi
mov
leave
lret
popf
call
mov
daa
es
adcb
inc
sub
pop
and
mov
mov
xchg
adc
mov
cwtl
xchg
inc
jecxz
or
lahf
or
inc
and
test
pop
dec
insb
jle
add
out
xchg
es
add
in
pop
jb
adc
xor
lods
dec
sbb
js
mov
and
out
shll
adc
movsb
lret
or
cmpsl
jne
sbb
addr16
inc
push
test
push
popa
push
test
cmp
jge
adc
das
mov
fwait
loopew
pop
dec
or
loop
fldcw
pop
jmp
inc
data16
jb
and
or
in
ds
inc
les
scas
pop
or
iret
shrb
cld
pop
fildll
mov
sub
lcall
stos
mov
mov
cmp
jo
outsl
int3
sub
ds
aad
int
sbb
aam
insb
mov
clts
pop
cmc
scas
hlt
jle
xchg
lea
xor
sub
mov
das
jmp
sub
outsl
push
mov
aad
adc
or
aad
mov
pop
mov
aaa
mov
cs
pop
lds
xor
hlt
repz
repnz
jbe
je
loope
jno
je
xchg
xor
enter
sarb
or
dec
push
rorb
xchg
pop
cmp
sub
cmpsb
iret
dec
inc
repz
or
rcll
pop
sbb
or
arpl
xchg
or
sub
fidivs
in
and
xchg
push
daa
xchg
sti
mov
stc
cmp
mulb
jnp
pop
push
ljmp
or
ds
dec
mov
pop
orb
sbb
enter
fcoms
mov
in
lret
xorb
sbb
and
int3
das
mov
cmpl
pop
adc
lcall
aad
jge
mov
cmc
ud2
sbb
nop
cmpsl
mov
roll
xchg
pop
and
fs
jo
scas
inc
mov
or
pop
or
cmc
fnstsw
and
sub
mov
subl
or
or
mov
aad
cmpsl
addb
aad
jns
cmpsb
xlat
repnz
dec
pushf
push
cmp
and
adc
adc
jo
stc
ret
fwait
ss
xor
xchg
aaa
aas
xor
mov
popa
out
adc
sbb
or
sbb
or
aad
in
mov
jmp
sbbb
or
testl
and
jp
insl
aaa
sti
pop
stos
shll
inc
bound
ret
nop
ffree
push
mov
pop
sti
loope
cld
xlat
call
xchg
push
rolb
repz
mov
push
in
outsb
sti
mov
adc
out
cltd
mov
mov
xchg
mov
sbb
jp
fisubrs
lods
test
nop
jns
insb
sar
decl
aam
adc
cmc
test
inc
xor
mov
ljmp
jns
dec
in
sbb
mov
lret
push
jle
mov
fidivrl
sub
imul
ret
mov
loope
push
aaa
and
movsl
xchg
fimull
out
adc
xor
daa
add
push
mov
inc
or
dec
or
xchg
push
or
stc
lret
cmpsl
arpl
gs
movsb
adc
mov
mov
add
ds
jl
jmp
dec
push
ljmp
sarb
xchg
push
das
lock
sbb
mov
stos
cmp
test
ds
incb
pop
push
sub
test
and
pop
or
xchg
mov
mov
and
mov
sub
and
sub
or
mov
pop
push
movsb
xor
test
jo
loopne
fwait
pop
ss
cmpsb
and
repz
mov
sub
das
fnstsw
add
jge
dec
xchg
popf
push
xor
xor
push
jecxz
hlt
mov
and
sub
dec
fadds
push
adc
xlat
in
repz
out
fsts
and
dec
stos
xor
pop
cmp
jl
mov
xor
mov
pop
sbb
add
outsb
sub
sti
je
push
pop
mov
adc
jle
inc
repz
cmp
aaa
mov
cltd
pop
xor
xchg
cmovg
into
testb
push
cmp
ret
adc
mov
dec
call
call
cmpb
mov
add
inc
enter
sti
iret
sti
and
inc
add
stc
imulb
mov
fwait
inc
jae
mov
rorb
mov
or
or
cmp
out
aaa
and
xchg
xchg
pusha
cmpsl
inc
call
fadds
dec
test
popa
icebp
xchg
and
loope
dec
jge
aas
add
shl
dec
and
jo
or
mov
insb
jbe
mov
jge
cltd
aas
sub
or
jbe
fcmovnbe
push
jae
dec
push
clc
addl
in
test
loope
mov
iret
loopne
inc
xor
outsl
mull
xorb
push
xor
cmc
out
stos
adc
enter
call
fcoms
xchg
popf
cwtl
nop
ljmp
mov
jge
jns
fnstsw
inc
dec
push
sti
cmpsl
loop
adc
inc
lret
add
push
fcomps
adc
js
pop
add
adc
sub
call
into
adc
or
mov
in
jns
sub
xchg
movsb
into
xchg
mov
xchg
jp
aas
sahf
mov
pop
cmpsb
cld
mov
and
insl
inc
add
data16
sub
leave
xchg
jbe
mov
clc
sbb
test
jbe
dec
push
adc
out
stos
neg
mov
rcl
sbb
pop
in
xchg
sub
mov
jg
es
lcall
xlat
adc
adc
mov
push
add
cmc
dec
shr
push
js
cmc
hlt
test
cmp
clc
mov
xor
aas
dec
push
or
cmp
sub
dec
sarl
xlat
push
and
adc
dec
jb
dec
pop
inc
jns
fld
xor
xor
add
add
call
pop
out
dec
leave
movsl
mov
lret
cmpb
and
push
sbb
ds
sbb
cltd
clc
mov
fwait
push
ret
std
mov
outsb
mov
inc
or
out
adc
mov
outsb
cmc
out
inc
adc
mov
dec
sahf
imulb
mov
imul
jge
cmpsb
shlb
enter
sub
jnp
cli
jns
xchg
sub
push
or
movsl
sbb
movsl
adc
mov
mov
xor
xchg
pop
pop
mov
mov
ja
push
popf
pop
jns
mov
and
insl
xchg
jge
negb
out
int3
mov
cmp
leave
dec
inc
xchg
push
std
or
mov
lock
gs
pop
fwait
int3
or
mov
out
dec
ljmp
out
cmp
push
adc
loopne
ljmp
dec
fnstsw
mov
stos
call
scas
lods
scas
movsl
pushf
adc
aaa
sti
pop
jbe
pop
add
push
lods
push
adc
jo
ret
cmp
adc
adc
daa
add
loopne
add
popw
ja
xchg
mov
mov
and
ret
arpl
add
out
lods
repnz
test
inc
sbb
jo
negb
lret
mov
es
fchs
fs
mov
adc
ret
mov
dec
rcl
rorb
inc
mov
inc
out
mov
aas
clc
cmp
out
stos
sti
test
push
mov
cmpsb
repz
les
mov
jl
add
fildll
sub
sbb
stos
aas
ss
mov
fists
std
das
je
pusha
repnz
xchg
cmc
mov
and
movsl
dec
inc
mov
mov
sbbl
xchg
cmpsl
mov
inc
imul
add
lods
ret
adc
mov
push
cmp
xchg
leave
xchg
push
fs
mov
sub
adcl
xchg
leave
push
jae
subb
mov
inc
mov
sbb
xchg
mov
bound
gs
push
mov
lock
cmp
sub
icebp
sahf
and
or
repnz
into
popa
fwait
nop
xchg
icebp
push
jb
popa
dec
repz
aam
fcomip
and
mov
ljmp
mov
push
jno
fidivs
and
sarl
push
cmp
inc
mov
xchg
in
push
imul
ja
lahf
push
popf
fs
sahf
sbb
xchg
mov
add
cmp
pop
dec
push
adc
add
mov
pushw
sub
mov
sub
lret
psubsb
mov
jmp
movsl
sbb
jno
xor
lods
jl
push
jno
jno
lret
jb
push
xlat
stc
push
add
mov
mov
or
nop
cmpsb
loop
roll
adc
push
jp
inc
inc
aaa
js
pop
mov
add
call
outsl
cmp
xor
xchg
stc
sub
repz
scas
jo
out
leave
in
dec
test
mov
dec
jnp
xchg
enter
xorb
repnz
xchg
mov
scas
jmp
add
or
mov
sub
inc
xor
into
addr16
jne
ret
jno
push
js
aas
stc
dec
xor
or
adc
gs
dec
sbb
xchg
mov
xchg
aam
and
and
sub
push
enter
add
js
nop
stc
les
xlat
ret
dec
pop
adc
paddq
add
push
mov
push
cld
push
out
jae
jne
insl
xchg
fcomi
dec
movb
enter
ss
sbb
or
clc
cltd
inc
mov
xlat
xor
and
lret
jge
adc
pop
popf
cmp
lods
leave
xor
mov
inc
enter
cmp
mov
xor
enter
or
or
pop
aas
push
call
out
mov
sbb
imul
outsl
cmc
add
pop
jge
cs
lds
cmp
clc
sub
outsb
adc
sbbb
dec
insl
mov
sbb
into
xchg
and
cltd
push
pop
adc
add
cmp
sub
sahf
inc
leave
xor
hlt
pop
je
mov
faddl
aas
gs
push
addr16
sbb
and
ja
dec
adc
out
jae
fwait
lea
push
pushf
adc
xor
out
int
sub
cmp
inc
notb
test
sbb
mov
jp
mov
shlb
lahf
enter
or
xchg
mov
and
sub
jbe
or
push
xchg
mov
repz
dec
mov
mov
scas
push
jb
out
adc
push
aad
jbe
jns
jne
cs
mov
jmp
les
lcall
cmp
or
mov
dec
aaa
stos
gs
sub
inc
or
jnp
xor
test
fldenv
lahf
shrb
cmp
test
fcomps
lahf
push
inc
push
cmp
dec
jp
jns
pop
jno
jnp
jb
sbb
jge
or
adc
cmp
add
cmpb
dec
inc
xchg
sub
jne
mov
lea
sbb
fdivrs
cmpsb
ja
cltd
cmp
rorb
test
scas
popf
insl
sbb
inc
in
push
insb
adc
push
mov
lods
mov
push
leave
lods
sub
and
ret
dec
lds
test
rcl
pop
test
mov
out
xchg
daa
xor
fstps
inc
and
call
movsb
js
mov
or
inc
fsubr
stc
cli
mov
dec
xchg
pushf
iret
mov
stos
push
iret
shrb
sub
inc
aad
sar
push
mov
or
mov
xor
pop
iret
jecxz
and
mov
add
push
pop
lret
dec
mov
aas
imul
std
and
jae
stos
push
sbb
loope
jl
andl
ljmp
lods
testl
cltd
add
xlat
inc
mov
push
mov
loop
shl
ret
dec
call
xchg
insl
xor
inc
pop
scas
ljmp
movsb
fnstenv
insl
or
imul
push
pop
xor
inc
dec
fmul
jmp
es
sbb
push
fcompl
dec
xchg
mov
mov
jl
das
iret
aad
out
das
xchg
cmp
loope
mov
js
cmpsl
jo
and
stc
pop
ljmp
xchg
and
movsb
xlat
inc
loope
jge
jnp
sahf
out
jl
mov
push
mov
inc
and
inc
and
int3
ret
leave
pop
out
cld
pop
daa
jecxz
sbb
movsl
jno
popf
sub
inc
imul
inc
inc
or
in
inc
out
and
dec
mov
dec
aam
dec
sbb
lret
push
jns
sbb
andb
or
sub
jg
xor
cmc
xchg
cmp
popa
subl
in
mov
leave
push
lods
sub
in
mov
icebp
das
insb
stc
mov
sub
sti
outsb
out
jnp,pt
inc
dec
and
jae
cmpl
xor
pop
adcl
pop
lahf
ljmp
shll
mov
xchg
mov
repz
mov
jb
pop
pop
negl
icebp
pop
jl
ja
shlb
in
fwait
pushf
jle
shll
lods
jns
addr16
cmpsl
sahf
dec
dec
xor
gs
test
dec
xchg
in
aad
and
mov
out
test
mov
and
jmp
sub
enter
jecxz
loop
outsl
ret
push
add
int
imul
pop
xor
loopne
adc
cmpl
and
jp
mov
cmp
push
stc
dec
cmp
cltd
inc
mov
mov
ljmp
scas
sub
mov
repz
adc
mov
shll
jno
cmp
jo
scas
cli
sub
stos
fimuls
les
into
rorl
std
adcb
push
mov
jge
and
inc
out
mov
je
inc
mov
or
sbb
dec
sbb
xor
mov
pusha
lret
outsl
dec
addr16
dec
sbb
xchg
pop
xor
xchg
jnp
test
cld
punpcklbw
enter
lock
pop
sahf
rcrb
cmpsb
xchg
aad
xchg
xor
test
pop
iret
sbb
insb
jae
int
movsl
push
out
sbb
bound
mov
mov
sbb
mov
into
outsl
or
mov
and
xlat
sub
nop
rorb
or
pop
push
sbb
ret
sub
or
mov
jne
dec
push
fstps
or
scas
jo
dec
or
enter
push
shrl
adc
enter
pusha
mov
xchg
shll
in
jno
sub
out
lcall
mov
cmpsl
mov
push
dec
ss
dec
sbbb
sub
mov
pusha
xor
jg
jno
sbb
sbb
sub
out
rcrl
xor
stc
jbe
sub
cltd
dec
add
mov
xor
cmp
push
sbb
pop
jb
mov
cs
repnz
mov
enter
jno
loop
daa
fstpl
add
repz
cmp
test
and
cmp
mov
cld
jg
xchg
inc
adc
and
sub
cmp
jmp
addl
sub
adc
call
jp
add
fsub
add
xlat
or
ds
lcall
setl
inc
popf
jmp
dec
jo
jg
fnsave
mov
mov
and
sar
stc
call
ret
mov
sub
dec
out
ljmp
add
scas
jmp
and
subl
sti
xor
hlt
std
or
pop
das
gs
or
sarl
test
xchg
sbb
mov
add
xor
test
sub
sub
int
repz
or
test
lods
mov
xchg
xor
mov
mov
xchg
ret
leave
sbb
inc
test
inc
iret
dec
rcrl
sahf
popa
jae
inc
out
cmc
repnz
out
push
iret
pop
icebp
sbb
imul
popa
fidivs
lahf
int3
lods
jbe
lret
pop
adc
arpl
xchg
orl
fistpll
mov
int3
sbb
adc
arpl
adc
jo
rorb
leave
in
pop
jbe
xor
in
mov
jnp
sbb
xchg
xor
pusha
jg
fucomi
xor
rcrb
mov
gs
mov
adc
mov
ficompl
cmp
or
jbe
add
mov
sbb
xor
sysret
stos
mov
adc
sub
aad
clts
sbb
mov
in
fdivrp
outsl
fnstsw
ror
cmc
mov
pusha
push
lock
fsts
or
cmp
dec
mov
dec
je
jo
arpl
movsb
and
rorl
sbb
cs
sbb
pop
lods
adc
or
inc
mov
inc
nop
popa
sbb
xorb
mov
pop
ds
pop
xchg
inc
xor
mov
nop
fidivl
jecxz
in
jg
scas
pop
addl
rolb
mov
push
das
fildl
decb
push
je
push
inc
xor
sbb
cmc
mov
dec
cli
adc
lods
es
ret
cmp
fcomip
pop
inc
out
shll
repz
inc
pop
hlt
mov
loope
pop
mov
dec
dec
xor
std
ja
inc
cwtl
inc
aam
inc
or
int
and
sub
dec
mov
movsl
scas
pop
fiadds
mov
lods
sti
add
dec
pop
mov
add
ja
mov
mov
stos
fwait
jae
lds
sub
repz
cmp
lods
test
shrb
push
adc
sub
xor
and
lret
mov
lahf
mov
cld
pop
pop
add
call
inc
fdivs
mov
in
jl
punpcklbw
mov
pop
je
push
pop
push
pop
ficoml
push
incb
ficomps
pushl
xor
nop
test
iret
jl
cwtl
mov
jg
or
mov
in
mov
sub
adc
insb
jl
push
cmc
jb
xchg
fisubrl
mov
sarb
mov
sbb
mov
sbb
xlat
ds
das
adc
outsb
jno
iret
mov
jecxz
scas
jmp
mov
mov
fwait
in
scas
adcl
mov
test
jb
inc
loop
cmp
loope
rcr
cmp
jl
push
sub
lret
lcall
jae
mov
mov
jne
stos
mov
fisttpll
ja
test
orl
sbb
push
icebp
xor
mov
jg
and
nop
sti
mov
inc
xor
idivb
popf
inc
and
mov
adc
or
dec
pop
sbb
dec
cmp
sbb
jns
divb
mov
fucomi
loop
mov
mov
cs
xorl
xor
lock
jge
adc
xor
adc
cmc
fdivr
xor
or
sbb
test
fdivr
xor
xlat
mov
fbstp
sub
mov
xchg
rcr
xchg
push
mov
or
mov
fcompl
and
arpl
push
add
adc
bound
addr16
pop
mov
cwtl
test
xchg
push
rclb
mov
push
push
mov
cmp
sti
call
inc
andl
bound
js
adc
rolb
cmpb
addr16
dec
mov
jge
dec
mov
xor
mov
fnsave
std
xchg
int
xor
in
das
aaa
xor
pop
adc
sub
pop
repz
mov
cmpsb
push
js
lcall
mov
in
out
sub
xor
out
inc
xor
fnstsw
add
or
enter
frstor
js
sub
cmp
jmp
mov
jg
cltd
cld
lret
nop
and
sub
ja
and
fistpll
dec
scas
pusha
lcall
ret
cld
rclb
in
adc
or
cmp
fdivrl
or
stc
xor
movsl
popf
imul
dec
lcall
shrb
push
in
xchg
xchg
jb
sub
jno
cmpsl
data16
mov
insb
out
push
and
xlat
sub
jp
enter
mov
outsl
xlat
lret
pop
push
or
cmc
fnstcw
dec
in
shrb
addb
movsb
hlt
lahf
repz
mov
xchg
outsl
dec
mov
ss
mov
xchg
inc
int
roll
fucomp
rcll
inc
aaa
add
mov
fsubp
sahf
push
jg
jae
sbb
inc
xchg
pop
mov
out
loope
repnz
dec
jle
pop
inc
repz
les
inc
in
jecxz
mov
sbb
ret
fidivl
cwtl
push
sbb
jae
cmc
push
les
xchg
jns
and
dec
mov
dec
leave
pop
test
dec
mov
push
cs
ret
popf
add
xchg
ds
out
mov
cwtl
int
pop
add
clc
mov
pop
lea
or
and
xor
adc
mov
dec
and
mov
insl
out
sub
inc
xor
jle
lds
xor
xor
xchg
xor
push
adc
and
out
scas
sub
rcrb
mov
inc
push
movsb
pop
or
pusha
lret
aam
mov
fsubl
test
test
cmpsl
push
mov
xchg
pusha
sbb
and
mov
cwtl
sbb
and
popa
sbb
xchg
add
jle
int
mov
sbb
movsl
adc
adc
push
ljmp
mov
jp
push
call
scas
icebp
jp
shrl
mov
call
lsl
lods
in
add
cmp
sub
pop
sbb
push
aaa
lcall
pusha
adc
cmp
xlat
stos
es
das
dec
push
inc
pushf
pop
ret
xchg
pop
dec
outsl
test
xor
jb
dec
push
pop
sub
jae
or
inc
mov
and
arpl
cmp
pop
hlt
dec
es
lods
pop
and
das
add
test
stc
sub
aam
add
sar
popf
cmpsl
pop
sbb
cltd
sbb
in
shlb
mov
mov
push
fld
leave
cwtl
mov
iret
push
add
add
cwtl
in
shrl
or
shrb
loope
xchg
fisttpll
or
movsb
es
or
adc
jge
push
jbe
and
push
inc
push
aam
push
insl
jg
stos
ret
loopne
mov
mov
lock
mov
inc
xor
and
dec
push
call
fucom
movsb
mov
jbe
aam
sbb
imull
add
outsl
mov
fs
push
jg
int3
rcrl
clc
fwait
nop
sbb
jns
inc
push
adc
repz
add
and
out
cld
and
sub
int
fwait
xlat
jae
push
adc
sbb
mov
adc
outsb
nop
cld
and
push
sti
lds
pusha
cmpsb
pop
jl
pop
or
insl
ret
or
sbb
fwait
icebp
jo
loop
inc
push
sahf
and
xchg
cmpsl
dec
ja
sub
jg
dec
mov
cmp
rcl
inc
repnz
sti
inc
cmp
imul
mov
mov
mov
mov
mov
sub
xchg
ds
inc
and
loopne
out
jae
sbb
mov
and
push
adc
adc
jnp
xor
outsb
xor
mov
shlb
arpl
cmp
jo
cmp
jno
sub
push
xor
negl
and
inc
xchg
imul
xchg
sbb
lahf
ret
gs
dec
mov
push
ret
adc
fistps
xchg
dec
jecxz
jmp
jmp
adc
scas
add
xchg
lods
clc
push
inc
dec
sbb
jb
lcall
test
nop
call
cmp
sub
ss
jne
sbb
mov
mov
xchg
adc
mov
or
xchg
cld
outsl
dec
sub
sbb
out
loope
mov
mov
lods
test
dec
push
out
jae
xlat
pusha
jbe
mov
out
clc
insb
roll
xchg
ret
test
push
movsl
fs
and
fdivl
in
inc
and
out
xchg
inc
push
pop
in
gs
loope
shlb
fildll
int3
lock
mov
xor
jmp
jmp
and
xlat
sbb
cmp
bound
or
or
aaa
mov
dec
in
test
pushf
repnz
pop
lods
mov
push
call
cld
add
dec
cwtl
fldcw
mov
xor
addr16
testl
pop
pusha
mov
add
jl
xor
push
or
scas
dec
mov
cmp
mov
leave
pop
ret
adc
pop
movsb
mov
fidivs
dec
push
fldcw
js
jb
xchg
aad
stc
sub
adc
mov
cmp
cli
in
mov
dec
leave
sbb
mov
movsb
jns
mov
daa
lock
ss
mov
and
pop
pop
mov
or
or
adcl
sub
repnz
adc
push
stc
loop
cmp
jo
pop
adc
lock
mov
aad
fisubrs
mov
test
icebp
mov
adc
in
cli
push
ret
movsl
outsb
inc
mov
mov
xor
mov
lret
dec
js
insb
or
mov
jle
lods
cmp
sub
cmp
jmp
mov
outsb
xchg
fcmovnu
pop
sar
and
push
lcall
and
push
sbb
or
sub
mov
or
jnp
out
jbe
stc
jle
dec
inc
xor
sbb
sub
cmp
test
and
clc
in
mov
cmp
fistpl
js
sbb
push
inc
ss
pop
arpl
mov
loop
add
cmpsl
ret
mov
ss
in
out
testb
xchg
out
es
jno
mov
aam
cmp
push
stos
xor
cmp
outsb
cmp
and
or
shl
mov
cmp
in
test
daa
xchg
int3
aad
aam
ret
jg
jl
jecxz
repnz
sbb
cmpb
rolb
jg
enter
pop
dec
lahf
mov
pusha
rep
ds
mov
push
stos
add
sub
js
iret
push
add
pop
and
rolb
xchg
sub
push
lret
xchg
push
ljmp
xlat
and
je
lahf
cmp
add
adc
xor
mov
jge
icebp
dec
dec
sti
add
movsb
push
ss
mov
arpl
in
lds
andb
fisubs
and
jno
into
insb
inc
inc
add
add
jae
mov
pop
xchg
jge
push
and
out
sub
push
xchg
rcll
xor
add
inc
dec
jmp
test
mov
mov
inc
dec
or
aaa
pusha
xlat
iret
repnz
add
cwtl
ss
icebp
in
setle
fmul
imul
fwait
adc
mov
add
jp
push
xlat
push
adc
fcomps
cmp
jo
sub
int3
test
dec
int3
pop
int3
es
jge
mov
xorl
arpl
push
or
stos
shlb
and
push
ss
xchg
jnp
adc
repnz
jne
pop
cmpsl
cmpsb
aam
dec
imulb
hlt
adc
jg
test
xchg
popf
sub
cmpsl
std
xor
pop
push
icebp
xor
mov
jle
gs
xchg
mov
ljmp
jge
and
and
adc
repz
pop
movsb
lcall
sub
xchg
into
cmp
mov
in
push
jo
popa
mov
and
pop
add
fwait
cwtl
and
sub
fnstcw
mov
rclb
sub
mov
clc
push
sbb
jecxz
cmp
test
movsb
stos
fcmovbe
xlat
rcll
popa
call
in
mov
movsb
sbb
dec
repnz
int
clc
daa
or
in
shll
cmp
lds
dec
push
dec
mov
lods
and
sbb
mov
push
punpckhwd
lods
jbe
push
out
cmpsl
xlat
in
dec
mov
sti
mov
push
mov
dec
sub
push
dec
std
sahf
stc
adc
mov
dec
jecxz
mov
pop
stc
lea
pop
mov
push
dec
dec
rclb
in
pop
hlt
in
rorl
cmp
inc
push
jno
or
xlat
in
in
loope
xchg
jg
test
inc
mov
inc
add
scas
fcomps
and
stos
push
lret
mov
push
pop
or
jle
popa
paddd
ss
inc
mov
bound
xor
nop
xchg
jp
push
aaa
xchg
fidivl
rcl
mov
pop
mov
pop
std
mov
aam
fcom
mov
xchg
mov
push
mov
dec
rclb
inc
lcall
mov
movsl
stc
xchg
or
stos
out
shrl
imul
cli
dec
jl
jnp
mov
adc
cltd
testb
lods
hlt
andl
lds
cmp
data16
test
ss
testb
dec
or
xchg
icebp
push
in
faddl
lret
sbb
lods
pop
lret
sub
push
adc
mov
loopne
cmpsb
stos
popa
mov
pop
jnp
mov
jno
adc
insb
hlt
fcomps
lods
cmp
stos
inc
xchg
cltd
int
outsl
ljmp
pop
or
dec
and
add
mov
pop
movsb
push
in
orl
push
push
dec
adc
xchg
or
ficoms
cs
pop
loopne
dec
mov
addr16
adc
jae
pusha
pop
mov
add
test
insl
lods
lea
dec
add
ret
outsb
into
or
je
xchg
add
cs
jo
bound
repz
lods
add
xlat
loop
adc
loope
movsl
cld
dec
sbb
fstps
enter
inc
cmp
inc
out
xchg
dec
mov
je
cli
clc
and
push
xlat
pop
cltd
push
lret
mov
imul
mov
sbb
xor
cmc
sub
sub
scas
dec
inc
jne
ret
cmc
int3
add
fldenv
jb
fisttpl
and
or
xchg
rol
jne
mov
add
rcrb
sub
leave
mov
mov
enter
push
imul
pusha
rorl
pop
adc
daa
push
mov
push
les
mov
mov
scas
mov
in
dec
aam
sbb
jns
fcomps
push
mov
jne
jnp
cmp
xor
mov
jmp
inc
sub
ret
inc
and
pop
or
add
fwait
and
xor
popf
cmp
push
popa
test
dec
pop
inc
pop
xchg
jge
xchg
pop
adc
notl
sti
enter
or
mov
fisubrs
scas
gs
sub
fidivrs
push
scas
in
stc
sub
aas
lcall
or
sbb
out
push
push
cmpsl
ret
adcl
sub
sbb
sub
dec
sbb
addr16
lcall
xchg
mov
into
inc
jg
lea
int
jle
jg
lret
imul
xchg
sbb
xor
fmul
cmpsl
mov
add
outsb
enter
jmp
pop
nop
or
dec
cld
ret
fidivs
mov
or
add
xor
sti
lods
es
inc
mul
repnz
inc
lock
jnp
dec
out
xor
sub
insl
push
cwtl
and
out
lret
sbb
test
mov
or
push
push
pop
ds
loopne
push
outsl
and
sub
and
les
mov
jecxz
movsl
inc
adc
push
cmc
inc
inc
cmp
negb
jle
cmp
jnp
rorl
mov
mov
sbb
sbb
pusha
mov
dec
pop
add
imul
pop
lock
or
rcr
push
push
outsb
and
push
bound
leave
xlat
in
data16
xchg
and
mov
insl
fisubl
loop
dec
ds
inc
jle
pop
add
cwtl
jl
data16
outsb
mov
sbb
mov
stc
test
lods
xchg
cmpsl
mov
fsubs
adc
dec
fdivrl
stos
daa
es
mov
imul
cmp
xchg
jae
pop
cmp
mov
mov
jnp
movsl
sub
sub
adc
fldenv
call
mov
cmpsb
hlt
adcb
adc
nop
jns
pop
push
sahf
jmp
dec
inc
xlat
cld
int
lcall
hlt
or
adc
shlb
xor
fs
fldt
dec
sbb
icebp
pop
jmp
fstl
pop
sub
jle
sbb
sub
adcl
jecxz
mov
cmc
outsb
stos
xchg
std
mov
mov
xchg
arpl
push
xor
aas
inc
sti
cmp
jae
cmc
imul
fcoms
push
inc
jae
outsl
dec
das
fcompl
lret
rorl
xor
mov
dec
filds
or
jmp
push
faddl
xor
xor
stos
push
cmp
mov
ja
cmpl
cmc
or
fbld
lea
fsubrs
jecxz
dec
mov
fucom
mov
fwait
push
jbe
out
test
sbb
mov
jp
push
outsb
jmp
out
push
sbb
js
pop
into
aam
or
pushf
sahf
xor
call
inc
stc
std
pop
dec
loop
mov
movsl
add
mov
pop
mov
sub
int3
adc
insb
lds
leave
sbb
and
add
jnp
jbe
sbb
jg
aad
cwtl
or
int3
adc
mov
inc
inc
inc
dec
and
fstpl
add
and
shl
mov
in
mov
fbld
jnp
test
lahf
xor
or
sub
cli
adc
int
push
insl
jb
mov
movsl
fwait
dec
mov
int3
adc
pop
or
jno
nop
out
adc
mov
and
add
xlat
mov
mov
lock
pop
mov
cld
push
xor
xchg
lea
or
fildll
imul
ds
idivl
inc
mov
push
into
or
roll
cmp
test
dec
subb
rol
jmp
cmp
je
test
push
mov
out
cmpsb
ja
or
stc
jne
fbstp
push
into
arpl
xor
enter
adc
ds
leave
fwait
aaa
xchg
sbb
jge
xor
and
mov
std
adc
cmp
mov
mov
fisubrs
mov
dec
out
pop
fwait
cmpb
mov
icebp
or
xchg
push
notb
imul
pop
test
lea
dec
jae
sbb
inc
mov
movsb
jg
popa
push
jg
and
push
push
dec
clc
cld
dec
sarl
rcll
push
sbb
push
sub
adc
mov
pop
fimuls
add
cmc
xchg
outsl
lret
jno
and
jp
mov
dec
testb
aaa
adc
lret
imul
push
push
out
sub
out
mov
inc
divl
aam
outsl
jb
test
xor
pop
hlt
cmp
xchg
ljmp
scas
jl
mov
into
push
inc
rcr
sub
bswap
pop
lahf
clc
add
in
adc
cmpsb
and
dec
in
movsl
push
arpl
jb
mov
mov
js
js
fsubp
push
pop
fcoml
shrb
mov
inc
subl
push
xchg
jecxz
push
add
aad
mov
push
imul
mov
sub
and
decl
cmp
imul
ret
pop
xchg
jbe
cmpsl
leave
jns
and
mov
decl
mov
cmp
mov
xchg
fcomp
jle
inc
cli
into
sbbb
adc
outsb
xor
scas
cmc
push
jno
add
fdivrs
mov
aam
popa
test
xor
jecxz
andb
loope
mov
js
pop
xor
in
int
mov
rorl
insl
mov
incl
lds
je
ficompl
mov
mov
xlat
js
push
mov
mov
mov
sub
test
push
xor
pop
add
xchg
cmpsl
nop
dec
dec
adc
int3
jmp
insb
andb
jmp
jnp
sahf
cmp
outsb
in
xchg
fcmovb
mov
and
mov
fildl
lods
pusha
adc
lret
add
movl
in
test
ffree
adc
adc
stos
jp
popf
cmpsb
pop
adc
push
inc
arpl
setge
jecxz
stc
fsub
fwait
pop
xchg
lret
cmp
mov
push
sub
pop
dec
adc
loopne
adc
mov
test
cwtl
loop
iret
imul
test
mov
push
mov
jg
rcll
movb
jbe
daa
shl
dec
sarb
cld
hlt
orl
sbb
mov
daa
and
jns
rcr
cmp
daa
popf
xor
jl
stos
popa
xchg
fxch
test
or
fdiv
dec
mov
sbb
jecxz
scas
fisttps
je
lcall
int3
gs
mov
and
stos
mov
rcl
cltd
cli
push
arpl
test
cmp
notb
mov
jp
cld
js
addr16
and
fimuls
mov
jecxz
ljmp
adc
ss
dec
imul
jmp
add
repz
xlat
mov
inc
dec
out
adc
nop
jnp
push
or
sbb
inc
and
jmp
enter
repz
stc
sti
shrl
andl
imul
add
rorb
repz
lret
xchg
mov
shrl
mov
dec
jmp
and
fildll
ficoms
cltd
mov
movsl
scas
push
cmp
shrb
and
stos
ja
ljmp
mov
mov
adcl
shll
enter
cmc
stos
loop
xchg
imul
loope
pop
adc
cmpsb
xchg
scas
dec
fisubrs
int3
out
cmp
popl
out
mov
out
dec
dec
sti
add
and
or
and
xor
aad
movsb
roll
xor
jl
outsl
sahf
cmp
enter
xlat
mov
and
adc
std
push
pop
xchg
cld
push
inc
aam
add
jo
adc
jbe
xchg
cld
repz
lahf
hlt
fs
mov
cmpl
mov
xchg
insb
or
sarb
jg
test
jbe
loop
loope
xchg
jl
in
es
cs
aas
fnstsw
inc
mov
or
int3
mov
xchg
pop
pop
adc
add
ret
scas
add
or
cmc
out
sti
test
frstor
sahf
ljmp
cmp
cmc
cmp
pop
mov
mov
dec
xchg
and
add
mov
std
negb
clc
mov
aad
jge
pop
sbb
jp
ja
mov
mov
jecxz
lds
add
les
lock
popa
add
scas
rcrb
mov
pop
std
pop
xlat
push
fsub
inc
data16
dec
adc
xchg
arpl
push
mov
mov
je
xchg
imul
std
mov
rol
das
fs
lret
dec
and
inc
or
enter
sti
push
cmp
divb
mov
mov
mov
arpl
out
pop
pop
sub
sti
cmp
push
push
sarb
push
jno
push
xor
mov
push
insb
inc
or
inc
and
lods
add
pop
cmpsl
decl
not
inc
push
stos
dec
fs
sbb
ret
and
cwtl
iret
sbb
xchg
int
pop
push
and
jne
js
cmp
inc
pop
std
mov
nop
jecxz
mov
arpl
and
jno
xor
xor
add
insb
testb
pop
or
cmp
and
cmp
cmpsl
fsubs
insb
adc
sub
or
js
rclb
in
repz
ds
cmp
dec
mov
mov
or
fs
adc
push
lock
mov
aad
mov
push
or
repnz
pop
sbb
dec
xchg
mov
lret
cmpsb
add
rorl
push
jno
sbb
inc
cmp
addl
scas
addr16
mov
and
rclb
jge
nop
cmp
lret
shlb
mov
mov
shld
aad
cmp
cmp
adc
add
in
or
les
mov
add
adc
insb
push
mov
lock
inc
push
shll
popa
cld
je
ds
enter
popf
pusha
mov
enter
ja
iret
ja
out
inc
scas
fistl
rorl
inc
cli
xchg
mov
dec
popa
mov
leave
sub
push
popa
std
cmp
inc
fucomi
adc
icebp
dec
daa
push
mov
mulb
push
push
dec
pop
inc
dec
inc
fsub
sbb
les
xlat
std
mov
xchg
cld
sbb
mov
out
insl
scas
in
fs
nop
rol
pop
pop
pop
stos
or
scas
mov
sti
lea
push
imul
push
mov
inc
jle
notb
into
mov
test
nop
andl
je
xor
xchg
ss
add
not
jge
adc
int
cmpl
mov
mov
mov
push
or
je
and
push
in
xchg
test
gs
and
arpl
xlat
mov
sub
cld
sbb
xor
int3
insl
incl
lret
fs
inc
xor
in
lock
adc
sbb
out
sub
mov
jmp
sti
mov
fs
xor
pusha
or
or
push
xor
icebp
lods
sbb
imul
inc
aad
xchg
fs
fsts
inc
and
sbb
icebp
daa
popf
movsb
test
push
pop
mov
cld
and
in
in
fwait
push
sub
xlat
ret
pop
push
mov
dec
bound
push
je
ss
les
mov
into
pop
xor
sbb
arpl
std
ret
lds
addr16
jge
pop
std
lret
adc
xor
sub
jae
add
xchg
sbb
adc
sbb
es
jp
mov
cmp
and
xor
aam
jge
cli
sub
adc
inc
mov
sbb
mov
jns
ljmp
add
fwait
xchg
lods
and
lcall
push
mov
shl
xchg
lds
lods
arpl
mov
mov
add
push
lods
imul
dec
jecxz
push
adc
addr16
into
cmpsb
les
lock
loope
mov
fldl
jo
inc
add
lock
incb
push
jg
inc
mov
fstl
xchg
mov
dec
and
xacquire
in
les
insb
mov
mov
outsl
jmp
mov
sbb
cs
rorl
hlt
cmpsl
iret
dec
mov
adc
out
jp
in
mov
sbb
lds
sbb
ret
bound
push
or
pushf
call
cmp
lret
les
mov
dec
sbbb
shr
add
orl
lahf
aas
fimuls
loop
add
fisubs
mov
pop
repnz
push
add
pop
add
enter
orb
mov
in
jge
dec
xorb
cltd
mov
cmc
xor
push
mov
xor
inc
push
out
dec
loope
jno
ds
mov
shlb
es
cmp
pop
movsl
scas
stos
mov
std
xor
loopne
mov
loope
xchg
dec
add
cmpsb
js
mov
insb
lock
and
std
xchg
mov
sub
jl
xor
mov
inc
push
lret
fsub
inc
cld
cmc
je
mov
dec
xor
jbe
sbbb
mov
jmp
xchg
ret
lods
int
xchg
xlat
gs
repz
xor
mov
add
imull
cmpsb
cwtl
dec
jbe
sub
outsl
jbe
mov
cld
out
sub
jg
push
add
cmp
dec
push
nop
push
mov
daa
test
bound
xchg
push
push
int3
scas
xlat
jnp
rorb
and
push
xchg
cs
cmpl
fildll
jecxz
loopne
lods
and
inc
out
sbb
jno
xchg
or
mov
jl
je
push
fisubl
out
sbb
push
in
shlb
pop
and
sub
mov
xchg
xchg
add
aam
xchg
jmp
mov
adc
movsb
fmuls
adc
pop
lcall
aas
shll
pop
mov
sbbl
mov
mov
fstl
xlat
sahf
dec
lahf
adc
pop
pop
jle
and
jecxz
xchg
sti
and
adc
push
add
aad
repnz
iret
fisubrl
mov
jle
mov
fwait
ja
stc
and
and
pusha
push
jle
ljmp
push
imul
push
inc
mull
mov
dec
cli
sbb
or
add
mov
xchg
push
int
fs
gs
cld
sbb
mov
mov
jbe
lods
subb
or
jns
pushl
sbb
jnp
xor
sub
insl
dec
sub
add
les
mov
mov
sbb
mov
aam
stos
fnstcw
pop
dec
pop
scas
loope
je
or
mov
loop
shr
mov
push
mov
or
test
fld
adc
lea
test
sub
out
pop
or
gs
aaa
and
push
cmp
mov
pushf
mov
push
lock
cmp
sahf
aam
subl
lock
test
and
outsl
fwait
pop
cwtl
call
mov
outsb
cltd
push
cli
and
dec
sarb
pop
mov
jbe
fadds
jl
fldt
in
or
pop
mov
ret
push
sbb
pushl
mov
loope
je
cmp
dec
outsl
xchg
mov
ret
dec
push
or
mov
or
push
movsb
insb
sub
dec
faddp
insl
rclb
or
pop
adcb
rorl
mov
xchg
cmpsb
test
cs
jnp
imul
dec
aaa
popa
stos
mov
repz
int
sbb
movsl
clc
sbb
arpl
jnp
pop
push
mov
sbb
movsb
mov
inc
cmp
rorl
enter
xor
fsubrp
cmp
test
xchg
pop
sbb
dec
insb
sub
lds
sbb
std
stc
mov
negb
xor
push
frstor
xor
jle
add
sub
mov
push
adc
cmp
xchg
adc
shll
stc
ja
sub
and
add
in
xchg
sbb
stc
in
lea
loop
imul
pop
mov
mov
pop
aam
and
out
hlt
pop
lods
push
sub
sbb
orl
lods
pop
jbe
push
xchg
inc
mov
pop
in
adc
xchg
int3
insb
pop
push
cmp
mov
loopne
imul
test
push
xchg
jno
loope
mov
mov
push
imul
add
xlat
ret
adc
insl
js
mov
xchg
ja
out
pop
jecxz
stos
in
inc
movsl
cwtl
mov
lahf
fs
or
call
pop
lcall
out
repnz
fsubrl
add
and
pop
mov
cltd
push
es
dec
pop
or
mov
add
xor
jge
jl
icebp
pop
icebp
sbb
dec
dec
sbb
mov
and
aam
cmc
cmpb
cltd
out
push
movsb
repz
inc
cltd
je
psubb
aas
dec
outsb
pop
and
push
in
sbb
mov
mov
jo
pop
pop
sub
out
popf
xlat
sbb
cld
movsl
imul
cmpsl
les
jno
int3
gs
sbb
mov
daa
sbb
push
push
inc
dec
pop
pop
shrb
adc
shrl
xchg
push
out
jge
add
stc
xchg
out
dec
adc
dec
adcl
pop
xor
aaa
nop
xor
sarl
enter
cs
lds
cmp
xor
cli
daa
sub
mov
jg
dec
dec
shl
sbb
cmp
dec
xor
repz
pop
jge
add
and
dec
stc
js
xor
and
leave
into
dec
inc
cmp
lds
xchg
push
inc
push
push
imul
push
mov
aad
lea
je
cmp
and
inc
imul
xor
add
daa
cltd
stc
jo
dec
clc
add
pop
or
mov
push
xor
mov
jle
lods
mov
push
xchg
mov
cmp
cmp
sub
mov
inc
in
mov
pop
iret
mov
xchg
int
cmp
stos
xlat
push
sbb
mov
lcall
pop
lea
cmp
aad
aad
sbb
loopne
roll
xor
cwtl
xchg
inc
add
lret
mov
ljmp
xchg
out
adc
and
in
daa
out
movsb
fimull
and
fcmovb
ja
test
sbbb
pop
aas
inc
jo
adc
clc
sub
inc
je
xor
es
jo
lcall
lret
cmpsl
mov
fistl
adc
adc
shrb
mov
out
shrl
loope
pop
mov
add
pop
stc
add
xchg
fbld
dec
loopne
sbb
cld
push
out
clc
test
int
orl
int
fs
and
fldt
aad
loope
shlb
inc
pop
repnz
daa
addr16
push
sbb
stos
call
dec
xor
cmp
pop
fwait
outsl
mov
hlt
pop
push
or
mov
xor
jge
bound
dec
popf
xor
jbe
in
in
jmp
popa
jb
mov
imul
mov
popa
mov
aad
xchg
in
mov
cs
loop
scas
pop
nop
je
jno
xchg
imul
xchg
ret
sub
mov
into
std
pop
imul
lret
mov
into
andl
mov
xchg
xor
sahf
outsb
test
and
xchg
cs
popa
shlb
mov
xchg
aas
xchg
push
loope
outsb
cli
fwait
sbb
roll
sub
adc
cwtl
dec
dec
mov
mov
pop
in
pop
jp
add
mov
mov
cmpsb
insl
jnp
movsl
and
add
pop
sub
push
sbb
insl
std
push
or
xor
lds
sub
xorl
ret
pushf
loopne
mov
dec
mov
je
shrb
inc
pop
xor
jp
xchg
cmpsl
mov
adc
and
pusha
int
sti
lret
jecxz
cmp
lret
lahf
fisubrs
sarb
cmp
ret
xchg
decb
mov
dec
xor
pop
loop
pop
sub
mov
arpl
ds
popf
adc
jo
cmp
fdivp
dec
jb
push
mov
xor
dec
sbb
mov
popf
sbb
push
and
mov
ds
xchg
mov
loope
adc
cli
aas
mulb
pop
xorb
cmc
loop
jno
out
mov
add
aam
sbb
test
and
lds
and
repnz
lcall
sbb
lock
cmp
sbb
shr
ljmp
inc
pusha
addr16
pushf
jp
adc
stos
shlb
loope
pop
xchg
stos
adc
enter
test
ljmp
in
arpl
cltd
cmp
arpl
add
cmpsb
pop
cmp
pop
cltd
je
cmp
ljmp
mov
adc
mov
sub
pop
jbe
push
push
xor
ret
lcall
fwait
add
inc
xchg
push
stos
pop
sub
or
testb
lods
fimuls
stos
add
jmp
push
xchg
lods
cmp
push
xchg
sub
loop
repnz
je
xor
mov
mov
push
imul
es
scas
inc
cmp
sub
mov
cmp
pop
insb
repz
iret
push
xchg
xchg
icebp
inc
jge
sar
lods
or
cmp
test
lds
ret
fstps
pop
popa
and
daa
roll
test
nop
imul
repnz
lahf
in
and
sub
push
fldenv
xchg
js
rcr
add
push
int3
cmovle
ljmp
cmp
push
mov
mov
sbb
dec
jle
in
mov
mov
in
add
sti
inc
aam
jne
xchg
shl
out
xor
mov
sub
ljmp
mov
es
imul
add
pop
movsb
push
fbstp
inc
lods
out
xor
mov
addr16
test
jl
je
loop
cmc
out
inc
cmp
int3
leave
andb
sub
xor
xor
daa
sti
mov
sub
cmc
es
lahf
aam
je
out
sub
dec
nop
ret
sub
test
mov
mov
in
fcmovu
sahf
rclb
mov
pusha
repz
sub
orl
lret
sbb
cmp
aam
mov
lods
push
icebp
decl
xchg
dec
xor
mov
add
testl
mov
push
fiaddl
sub
cmp
addr16
ja
out
fst
hlt
xchg
cmp
cs
adc
dec
xchg
andb
jl
add
pop
fninit
jecxz
mov
rcll
imul
out
cmp
data16
mov
and
dec
xor
aas
pop
push
and
xchg
mov
arpl
es
nop
repnz
iret
loope
mov
testl
adc
ds
dec
add
xchg
mov
xchg
sbbb
les
mov
or
and
push
xchg
mov
jne
movsb
dec
mov
xchg
mov
jle
adcb
decb
mov
ret
xchg
adc
jo
mov
jo
mov
and
jbe
dec
and
jbe
ret
and
aad
roll
xchg
sbb
aad
mov
push
mov
mov
xor
cmp
sbbb
pop
mov
inc
sub
xchg
jb
cmp
mov
inc
addr16
jmp
push
pop
jbe
mov
inc
ss
mov
roll
mov
adc
pop
adc
in
addr16
repnz
jl
push
inc
test
fcompl
adc
mov
sbb
mov
pop
orb
pop
sahf
xor
fbld
int
stos
push
or
mov
push
nop
mov
push
fldcw
sub
insb
push
mov
scas
roll
ret
leave
cmpl
clc
fdivl
outsb
mov
imulb
icebp
mov
pop
push
mov
cli
test
out
or
dec
and
pop
jg
and
stc
in
dec
bound
loopne
jbe
adc
clc
push
aaa
mov
mov
mov
adc
pop
into
sbb
cmpsl
or
hlt
push
icebp
outsl
pop
lock
jle
xor
sbb
lods
in
ds
add
stos
jb
sbbb
fidivl
sub
pop
in
sub
in
ja
movsb
mov
and
cmc
outsl
jne
inc
aam
popa
pop
les
mov
cmpsl
fildl
pop
repz
xchg
sbb
jnp
mov
mov
jmp
cmpsb
xchg
popl
cwtl
shr
mov
mov
imulb
inc
xor
enter
lods
cld
jo
nop
cli
bound
call
jle
mov
mov
add
lcall
test
call
pop
xor
ja
adc
out
stos
push
inc
cmp
or
inc
aam
add
hlt
out
movsb
mov
repz
clc
jge
je
movsl
sbb
ds
or
add
fwait
dec
jmp
mov
scas
xchg
lods
inc
pop
inc
leave
dec
out
iret
mov
icebp
jbe
sbb
jecxz
scas
pushf
sbb
nop
mov
mov
cmp
pushf
fsubrs
lahf
cli
cmp
pop
ret
int
push
loopne
mov
out
push
push
ljmp
xchg
pushf
into
sbb
mov
ss
push
xor
add
rolb
adc
and
ljmp
rolb
lods
testb
negb
data16
cmpsb
dec
mov
arpl
imul
mov
mov
in
clc
cmp
data16
sbb
xchg
out
push
outsl
jo
pop
ret
sbb
push
push
xchg
jmp
inc
cmc
cmc
mov
jge
push
inc
add
iret
pop
pop
and
push
arpl
ret
stc
hlt
bound
sbb
daa
es
test
test
cmp
push
push
xchg
adc
shll
inc
mov
sub
jno
inc
adc
sub
pop
out
daa
push
lods
fisttpl
inc
xchg
push
mov
imul
and
push
cld
arpl
inc
in
aam
into
pop
mov
mov
int
fwait
mov
dec
addr16
enter
das
fldl
lea
jmp
aaa
cmpsl
fcompl
and
icebp
cmp
icebp
fidivl
push
rclb
sub
inc
sub
jne
outsl
lahf
psubb
add
or
and
pop
in
loopne
mov
mov
out
push
fisubl
add
aad
in
pop
aam
lods
lahf
stos
ret
lahf
mov
jge
adc
popa
jmp
mov
cmpsb
jno
mov
jp
imul
ret
nop
jnp
and
mov
adc
test
jb
mov
lahf
test
xor
lock
lods
sub
xor
mov
pop
cwtl
push
nop
and
stos
jmp
gs
jb
inc
cmpsb
lock
add
jl
cwtl
push
mov
xchg
cmp
pop
lods
int3
dec
mov
xchg
sbb
jmp
pop
aas
sub
push
fildll
aas
cmp
lds
loope
jecxz
ja
sbb
outsb
cmp
pop
push
mov
pop
arpl
mov
je
insl
sarl
inc
shll
insb
xchg
sbb
xchg
pop
mov
push
mov
cmpsl
fisubs
sub
and
out
jecxz
push
adc
sbb
aaa
iret
mov
cmp
and
repz
add
lret
int3
test
in
and
cld
data16
lret
sarl
sub
aaa
call
sub
out
pusha
xorl
in
inc
lret
fldl
pop
cmpsl
mov
sti
dec
fadds
xchg
fiadds
iret
loop
jae
inc
out
and
add
dec
mov
dec
mulb
loope
repz
xacquire
test
and
int3
adc
mov
push
mov
mov
adc
imulb
jbe
adc
push
mov
xchg
rcr
stos
lret
push
pop
stc
pop
ss
cmp
mov
mov
les
mov
xorb
pop
loope
sub
test
loopne
xlat
sahf
mulb
mov
scas
fsubl
jns
xlat
inc
aaa
push
dec
movsl
call
mov
add
push
inc
pop
imul
add
loopne
imul
idiv
test
icebp
lret
sub
and
pop
mov
bound
fcomps
cli
sbb
clc
ljmp
dec
mov
lahf
cmp
cs
adc
fdivrs
popl
bnd
dec
rcrl
lcall
rorb
lock
fs
xor
sarb
sub
in
andl
aad
push
add
fldcw
out
int3
or
test
clc
ds
call
mov
sbb
pop
lret
out
cmpsl
roll
popa
cmp
test
mov
scas
fiaddl
pop
add
and
fs
pop
scas
cmp
mov
fs
les
insb
add
and
add
add
ror
pop
push
sbb
fistl
xchg
fwait
sub
std
repnz
cld
cs
jne
xchg
add
test
fcomi
pop
mov
mov
jb
jno
subl
lret
push
cmc
jmp
or
sub
jb
and
dec
scas
mov
in
or
call
pop
gs
adc
int3
mov
inc
pop
sbb
and
pop
test
lods
push
pop
add
shll
jno
iret
jl
bt
test
lods
mov
les
xor
out
xor
cli
mov
jle
popa
add
sbb
aam
cmp
call
mov
xor
pop
mov
jle
inc
jmp
mov
xlat
ja
int
push
mov
mov
into
jle
pop
outsb
scas
addr16
jl
lret
xchg
pop
sbbb
adc
ror
cli
add
push
stos
fidivrs
sbb
dec
test
jg
jbe
mov
lock
cmpsl
idivl
mov
adc
sub
popf
in
mov
pop
ret
insl
mov
enter
mov
xchg
imul
cmpsb
dec
cltd
outsb
jno
cmp
loope
adc
shll
out
loope
fnstsw
shlb
cmp
jp
xchg
cmp
pop
fs
push
sbb
jmp
iret
sub
popl
dec
cltd
adc
imul
jne
int
push
ret
icebp
mov
inc
mov
sti
loopne
das
mov
mov
icebp
outsl
jecxz
sub
push
std
mov
aad
push
jle
jle
xchg
cwtl
loop
icebp
gs
shlb
xor
and
and
incl
xchg
cmp
and
cmp
iret
or
jle
adc
push
repz
dec
sub
clc
dec
cli
pop
xor
and
hlt
mov
mov
xchg
mov
dec
jp
or
inc
ds
out
add
pop
pop
mov
xchg
popf
stc
ljmp
inc
sbb
inc
aas
scas
std
push
pop
jp
fwait
in
fsubrl
and
into
aas
repnz
mov
and
or
cmpsl
push
stc
sub
sub
push
pop
outsb
cmp
add
daa
and
jae
aam
push
in
test
loopw
jp
cmp
ds
xchg
inc
mov
or
push
rcrl
xchg
mov
cli
repz
in
jl
push
or
daa
mov
pop
jnp
cs
xor
roll
fwait
and
sarb
cwtl
add
cmp
aas
out
int3
mov
stos
out
popa
or
addb
imul
fisubs
daa
aaa
jae
dec
mov
fwait
scas
jbe
adc
mov
ljmp
sar
ret
lods
jo
inc
fsubr
out
cwtl
sbbl
inc
aaa
mov
add
jno
test
cld
jns
mov
dec
stc
pop
js
addr16
adc
jns
dec
pop
bound
or
iret
jp
into
insl
cld
in
shr
adc
addr16
movsb
jae
pop
shl
aad
or
aas
out
ja
dec
jge
add
out
cmpsb
loopne
popw
in
cmp
and
leave
aad
pop
shll
add
mov
add
ret
imul
inc
xor
dec
xchg
stos
pusha
shll
and
adc
lods
scas
inc
pushf
mov
mov
sbb
cmp
mov
out
aam
add
mov
sbb
lea
movsl
cmp
sub
and
xchg
and
scas
imul
adc
aas
or
pop
js
push
les
mov
mov
xchg
notl
stc
adc
xchg
pop
sub
cmc
leave
imul
test
pushf
mov
lret
sub
gs
and
push
pop
rorb
cltd
push
mov
cmp
cmp
fadds
mov
fnstsw
pop
mov
dec
ret
loopne
ja
add
xchg
sub
xor
sbb
cmp
lods
jp,pt
out
out
jne
jb
loop
shl
or
mov
or
call
out
pop
or
test
sbb
stc
sahf
test
add
or
stc
aad
shll
push
sbb
xchg
sbb
pop
pusha
in
sub
aam
jmp
adc
movaps
pop
cltd
outsl
pop
loopne
push
inc
fisubs
mov
push
add
loopne
pop
push
xchg
mov
lcall
jmp
dec
sub
add
in
sbb
pushf
enter
icebp
inc
in
rcll
clc
out
pop
fdivs
dec
pop
mov
data16
lods
cmpsl
pop
pop
insb
fadd
dec
jg
jp
push
fiadds
jg
add
imul
test
popa
jbe
cmp
enter
jmp
pop
jecxz
int
add
pop
and
bound
or
sti
push
cmp
mov
and
inc
aam
je
push
movsb
pop
pop
or
cmp
pop
xchg
add
int
arpl
push
fistps
dec
jp
and
sbb
fstps
inc
data16
jge
add
or
loope
daa
bound
in
cli
xorl
call
popf
mov
aaa
push
ljmp
push
out
mov
aad
pop
cmp
push
cmpl
test
call
push
fmuls
in
push
sbb
ret
packuswb
xchg
cmp
inc
and
or
int
enter
xchg
fimull
adc
insb
bound
mov
sahf
dec
xchg
movsb
movsl
sbb
dec
mov
xchg
ficoml
mov
mov
call
dec
push
test
cmc
xchg
loopne
iret
push
aas
cli
sti
push
mov
dec
fs
stos
add
add
jnp
cmc
pop
cmp
enter
hlt
loopne
in
out
pop
xorl
dec
inc
pop
adc
test
jle
mov
pop
imul
jmp
dec
in
rorb
xor
cmp
jbe
aas
rcrb
cmp
sub
call
inc
mov
xchg
bound
jle
adc
cmp
or
sub
push
test
filds
adc
lods
cmp
pop
fstp
es
cltd
xlat
push
sbb
add
sub
out
mov
mov
sbb
pusha
loopne
inc
pop
mov
pop
push
cwtl
jae
xchg
cmp
push
jg
cmp
cmp
cwtl
rep
lock
cmpl
xchg
push
mov
rorl
cmp
mov
adcb
inc
xor
inc
push
cltd
mov
and
mov
jg
cmp
cmp
jl
xor
jecxz
adc
mov
push
and
fwait
sub
jmp
lret
lret
gs
notb
movsb
out
fstpt
aas
cmp
jbe
inc
pop
xor
bound
stc
ds
xchg
push
inc
pop
cmp
insb
repz
dec
mov
xchg
push
leave
xchg
aaa
ds
push
loope
lcall
rclb
ret
pushf
pop
lock
xchg
mov
xor
and
cld
xchg
and
cmp
ljmp
xor
inc
aad
mov
lahf
out
stos
cwtl
bound
jle
mov
jl
aaa
cmc
add
mov
fidivrl
cli
jmp
aaa
bound
popf
adc
ds
add
push
mov
add
into
pop
idiv
mov
outsl
jecxz
pusha
mov
xor
clc
dec
fsubrp
or
push
push
aaa
mov
sbb
add
sbb
dec
jmp
scas
mov
pop
imul
mov
test
jne
mov
and
bound
lds
call
pushf
imul
add
outsl
std
in
and
xchg
or
adc
mov
pop
icebp
stc
daa
divl
es
jmp
popa
stos
cmp
xor
test
mov
cld
xor
pop
cmp
sub
and
stc
test
or
and
jnp
test
dec
jmp
mov
not
cli
mov
or
push
jl
or
hlt
jmp
into
mov
roll
adc
pop
lret
add
mov
cmp
xchg
rcrl
mov
xchg
outsl
add
pop
in
pop
jge
xor
repnz
pop
mov
inc
cmc
fstp
test
les
push
cmp
into
dec
insl
lcall
outsl
xchg
sbb
stos
fs
shlb
dec
mov
mov
sbb
mov
add
daa
lret
adc
add
inc
sbb
xchg
add
pop
clc
add
mov
test
push
inc
push
stos
pop
out
adc
mov
shll
or
xor
dec
pop
in
mov
insb
pop
vmovups
jno
pop
into
bound
inc
mov
das
idivb
popf
pop
mov
nop
les
and
mov
xor
loope
int3
xchg
jge
insb
inc
lcall
imul
adc
js
mov
push
lcall
sbb
cwtl
cmp
mov
and
lds
int
jp
rclb
push
aad
inc
and
lock
lods
movsl
lds
mov
cwtl
fsubs
push
jge
lret
push
mov
push
fcompp
fs
nop
cmp
jmp
and
cmc
js
cmpl
fildll
sub
popa
sbb
jo
sbb
push
packsswb
push
xchg
pop
pop
test
lods
popa
push
mov
jnp
stos
and
jne
xchg
or
arpl
pop
addr16
adc
inc
adc
fsubl
divb
dec
xchg
push
lock
mov
test
or
pop
inc
aad
in
mov
lcall
shl
cwtl
add
out
shlb
loopne
daa
and
jmp
jl
clc
rorb
aad
andl
adc
add
and
int
repz
dec
repnz
test
mov
dec
push
lds
in
pop
out
lds
enter
in
out
pop
outsl
push
or
inc
dec
rorl
jmp
aam
movsb
fidivrs
in
xchg
bound
cmc
pop
scas
jbe
jno
insb
push
xchg
shlb
movsl
cmp
xor
mov
emms
mov
popa
xchg
mov
js
sbb
es
cmc
or
movsb
jg
and
inc
push
out
jne
pusha
inc
add
jge
pop
stos
xor
enter
push
add
popf
mov
aam
stc
testl
and
jns
mov
xor
in
jge
pop
adc
in
sub
jno
dec
cmp
shll
daa
shr
les
test
xor
mov
push
in
xchg
or
lcall
stc
mov
into
cs
sar
add
lahf
and
mov
inc
nop
push
outsl
hlt
shlb
cmc
and
fwait
lcall
test
push
loop
dec
adc
imul
and
ljmp
or
loopne
arpl
outsl
adc
movsl
ds
insb
sbb
icebp
mov
repnz
push
fmuls
or
insl
cmp
lea
or
xchg
mov
fisttps
jge
pop
xchg
or
stos
ljmp
push
test
pop
js
sub
ljmp
mov
mov
adc
sub
jmp
dec
adc
sub
in
sub
add
test
push
fimull
mov
fstps
mov
sub
sub
mov
and
repnz
aas
pop
aad
fldcw
and
xchg
push
push
arpl
mov
das
sahf
sub
jno
jmp
xchg
lcall
xor
sub
xor
jl
jb
popf
pop
nop
hlt
shll
xor
cmpsl
and
xchg
pop
cld
dec
mov
jmp
lret
jno
sub
adc
xor
push
xchg
inc
adc
outsb
jb,pn
arpl
dec
and
fwait
rcrl
fidivrl
in
js
xchg
jl
cld
xchg
rol
pushf
int3
adc
mov
adc
fisubrs
xchg
jnp
push
pop
andl
sub
cli
xchg
in
push
in
test
lock
and
xor
jo
jecxz
push
ds
xchg
cmp
xchg
lea
xchg
inc
ss
mov
lods
mov
enter
lods
and
data16
mov
xchg
sbb
sahf
lret
xor
add
insb
imul
scas
dec
or
shr
cmpsb
lahf
push
dec
push
xor
inc
add
sub
push
xor
dec
xchg
push
pushf
nop
lcall
xchg
add
adc
pushf
mov
sub
hlt
pusha
lahf
mov
dec
mov
xchg
mov
sbb
loop
jge
adc
jae
jno
ljmp
gs
mov
stos
adc
xor
outsb
roll
jmp
gs
mov
lock
clc
xchg
inc
cwtl
jle
mov
or
pop
stos
sbb
jb
dec
cld
add
clc
insl
mov
adc
mov
cmpsb
cmp
sbb
pop
sbb
mov
cmp
pop
icebp
in
sbb
or
cli
dec
cmp
leave
imull
enter
bound
std
mov
mov
add
and
lods
in
cld
call
lods
push
or
ret
stos
xchg
add
mov
mov
and
mov
call
inc
inc
inc
push
jl
rcrb
xchg
call
push
mov
enter
jle
nop
push
inc
push
jecxz
jns
cmc
cmp
pushf
dec
imulb
mov
or
lahf
pop
aad
repz
add
cmpsl
push
mov
xor
das
nop
and
jo
mov
sbb
or
mov
pop
insb
cmp
cwtl
mov
inc
jne
jg
sub
lcall
cmp
jbe
jp
pop
imul
add
fcomip
sub
subb
sbb
imulb
xor
jae
cmc
aam
sbb
call
push
xchg
adc
cmc
xchg
out
mov
xor
decb
inc
mov
js
xchg
js
rcrl
out
jns
in
xchg
lock
mov
fcoml
push
dec
fsubrs
mov
push
lcall
push
ret
stos
jno
out
mov
fdivr
push
bound
insl
xchg
nop
jecxz
inc
scas
push
inc
adc
call
mov
inc
xlat
pop
and
xchg
mov
lcall
xchg
lahf
cmp
pop
movsb
cmp
stc
xchg
cwtl
xchg
add
or
sub
mov
mul
mov
jle
rolb
repnz
outsb
fsubrl
shrl
mov
das
dec
roll
mov
cltd
icebp
scas
outsb
adc
cmc
shll
dec
jbe
jbe
dec
in
inc
dec
into
adc
fistps
add
addb
jl
dec
push
daa
movsl
out
aas
lods
adc
incl
dec
pop
push
fldenv
aam
insl
mov
mov
adc
cmp
dec
sbb
dec
mov
out
aam
sub
lret
xor
inc
dec
mov
out
xchg
xor
xchg
es
sub
stc
or
mov
cld
mov
mov
xchg
xor
lods
mov
xor
in
jbe
push
cli
or
mov
ret
mov
pop
ljmp
mov
push
jne
mov
jp
lods
mov
mov
ret
xlat
mov
add
mov
lds
dec
sbb
jne
test
sbbb
scas
mov
cld
repnz
int3
mov
out
xor
icebp
sbb
xor
ffree
andl
cmpl
inc
lcall
lea
mov
cltd
jns,pn
or
push
push
mov
incb
push
add
int
xchg
push
sbb
push
cmpsb
or
cmp
sub
lahf
inc
fiadds
mov
sti
ljmp
loopne
jae
mov
dec
add
in
adc
mov
jge
fs
enter
subb
push
ficoms
mov
dec
mov
lcall
lods
stos
scas
mov
addr16
adc
mov
fmulp
sub
cmpsl
movsl
mov
or
lret
pop
das
imul
sbb
xchg
bound
cmp
gs
adc
add
xchg
xor
test
les
movsl
in
xchg
jmp
movsb
jno
insl
jge
sbb
aam
fadds
sub
cmp
sbb
xor
jno
add
adc
mov
aaa
sub
xchg
iret
sub
adc
and
incl
imulb
outsb
int
not
int3
push
xor
inc
or
out
adc
popf
aad
push
loopne
roll
sti
sbb
test
mov
add
add
adc
or
cs
popa
imul
hlt
xchg
rcll
xchg
lods
and
jno
adc
enter
scas
sahf
cmpsl
xlat
sbb
js
adc
cmp
lret
xchg
xchg
rcl
rorl
jl
cwtl
test
adc
insl
stc
ficomps
imul
add
jae
mov
sahf
dec
mov
adc
add
cli
mov
inc
xchg
jle
push
mov
xor
inc
push
scas
xchg
outsb
clc
mov
scas
dec
add
adc
ds
jbe
adc
and
inc
imul
lahf
xchg
cs
stos
jl
shlb
push
into
out
bound
test
sbb
cwtl
ljmp
ret
lods
enter
std
scas
lods
sub
fistps
cwtl
ror
sbb
adc
dec
sar
xchg
or
orl
xchg
push
mov
mov
aam
inc
popf
test
pop
xorl
cmp
push
test
inc
mov
mov
sbb
cltd
xchg
and
es
or
std
sar
xor
outsl
jecxz
xchg
fs
cmc
or
roll
std
dec
mov
or
jne
sbb
mov
loopne
mov
xor
jne
push
and
xlat
xor
cltd
cs
sub
or
outsb
stos
aam
lods
cmpl
adc
lret
rorb
popf
sbbl
adc
xchg
stos
daa
cs
cmpsb
es
fcmovnu
je
pop
dec
push
xchg
iret
cmpsl
mov
movsl
enter
push
in
pop
data16
pop
insl
gs
loopne
add
repz
out
jg
es
push
out
xchg
imul
cltd
pop
push
cmp
sar
inc
pushf
fisttpll
jbe
xchg
sbb
or
mov
push
dec
adc
sbb
xor
fidivrl
fisubrs
push
dec
inc
sahf
in
das
popf
das
das
mov
and
shrd
sub
mov
sti
shlb
inc
mov
out
sahf
cmp
pop
hlt
repnz
pop
xchg
push
je
lds
sti
cmc
jae
push
mov
rorb
cmp
xchg
fcmove
xchg
mov
repnz
inc
cld
dec
test
push
sub
and
cmpsl
ss
mov
inc
into
fidivl
xor
ficomps
insl
movsb
das
dec
push
gs
xchg
stc
pop
jp
jg
sub
and
leave
lock
add
or
and
rcrb
mov
mov
ret
mov
lcall
xor
adc
inc
out
stos
addl
inc
inc
sbb
imul
inc
dec
xor
push
lret
xchg
mov
imul
cmc
jp
mov
leave
pushf
adc
inc
popa
sub
repnz
inc
nop
lds
imul
xchg
fwait
dec
aas
dec
inc
add
mov
jb
xchg
into
fsts
jg
stc
xor
insl
sbb
jmp
aad
push
out
shlb
push
xchg
std
fisttpl
add
lds
ficompl
ljmp
fld
and
adc
and
mov
xchg
push
xor
insb
xchg
icebp
lods
into
mov
in
xchg
les
jl
sbb
sub
dec
into
pop
lret
cmp
lret
mov
mov
aad
adc
push
push
mov
fwait
pop
arpl
xchg
outsb
jecxz
cld
outsb
adc
mov
pop
xchg
ja
ss
scas
lods
xchg
cmpsb
jnp
in
gs
daa
mov
mov
aaa
mov
popf
dec
movsl
sahf
scas
mov
leave
aam
push
and
jle
or
jmp
mov
lcall
popa
push
ljmp
push
mov
ret
enter
sub
std
pop
repz
aas
je
lahf
mov
cmp
xchg
shlb
sub
jns
ds
cmp
or
and
pop
sbb
pop
out
stos
jl
sbb
xor
clc
je
push
push
xchg
pop
sub
jnp
rorl
push
sub
cmc
ljmp
lock
popa
fisubs
xlat
lahf
mov
add
movsl
pop
sub
lret
mov
cmp
mov
inc
lahf
sub
ret
fldpi
repz
push
aas
dec
out
js
sti
inc
out
xchg
cmp
inc
mov
popa
add
ss
lds
push
decb
mov
popf
cmp
xor
push
or
xor
divb
ss
xchg
int
mov
jmp
mov
negb
jae
int
mov
insl
filds
xor
stc
jmp
cld
sahf
sub
mov
mov
das
add
icebp
add
push
ds
mov
fbstp
shr
jle
stos
stos
negl
loopne
push
jnp
adc
aaa
pushf
inc
add
insl
mov
add
pop
faddl
fistpl
test
repnz
in
mov
mov
mov
mov
test
adc
and
cs
or
sbb
add
frstor
leave
cli
and
xorb
mov
je
sub
stc
mov
rorl
or
lds
mov
mov
addb
movsb
xor
jbe
cmp
jmp
pop
clc
add
jae
adcb
in
fnsave
mov
pop
push
mov
mov
and
cmpb
mov
cmc
jns
test
xchg
jno
loope
xor
cmp
adc
pop
add
je
daa
sbb
pop
jp
hlt
push
in
fldenv
cmp
or
frstor
out
xchg
jo
or
pushf
and
jge
int3
push
fisttpl
cld
int3
insb
movsb
pop
pop
fnsave
sub
fdivl
ja
lea
je
pop
and
pop
test
pop
adc
push
xchg
xlat
nop
cmp
push
push
jne
fwait
mov
psubq
mov
mov
cltd
sub
popf
inc
jne
and
jmp
xchg
es
in
cltd
sbb
popf
mov
lods
mov
test
into
outsb
arpl
ret
and
in
pusha
cmpl
pop
popa
xor
mov
shr
test
push
test
fstl
xchg
cwtl
jnp
popa
out
lret
xchg
mov
lcall
mov
fwait
jne
std
movsb
nop
rorb
mov
jg
sub
push
inc
insl
xor
fs
mov
insl
dec
mov
or
jmp
push
cs
iret
xor
lods
jl
push
dec
or
lods
adc
add
sti
push
push
push
fstpl
test
lret
jmp
or
lret
dec
fidivrl
into
mov
jnp
ja
xor
arpl
lret
into
mov
jno
insl
mov
dec
clc
mov
jbe
inc
inc
gs
xchg
cmpsb
rolb
xchg
stos
xchg
fs
out
cmpsb
fs
loop
sbb
data16
sbb
es
xchg
inc
mov
push
scas
pop
adc
dec
add
mull
aam
dec
mov
rcl
jg
shrl
pop
fistps
cmpsl
shlb
adc
decb
inc
inc
jns
cli
cwtl
mov
adc
add
cmp
insl
cwtl
sub
inc
pop
lods
decb
xor
es
pop
or
jl
push
cmp
add
out
mov
fwait
pop
pop
jl
add
xchg
adcl
cmp
es
int3
pop
jmp
cmp
icebp
enter
sarl
push
sbb
std
or
sub
mov
xchg
pop
sbb
add
dec
jecxz
test
cmpsb
and
xor
pop
mov
adc
sbb
mov
roll
loopne
cltd
sbb
jnp
scas
mov
sub
push
ds
shl
xchg
adc
int3
jnp
sbb
stos
loop
comiss
mov
jle
dec
aad
inc
fbld
outsb
sub
or
sub
pop
movsb
mov
lret
jb
add
or
es
xor
push
xchg
rcll
repnz
and
push
andb
nop
sub
es
ja
movsl
and
rcl
in
lret
xor
sbb
movsb
ljmp
mov
mov
add
loop
int3
cltd
adc
shlb
movsb
nop
ret
jle
ja
loopne
sahf
insb
lock
mov
mov
js
bnd
pop
dec
out
test
mov
cltd
pop
sbb
out
mov
and
shrl
ja,pt
std
cmp
jno
test
mov
xchg
add
aaa
push
clc
pop
loope
fiaddl
rcrb
pop
les
pusha
push
sti
pop
pop
dec
das
daa
xlat
xorl
adc
xor
add
xor
mov
sub
movsb
cmpb
sub
add
rorl
out
out
stos
xor
mov
xchg
pop
cmp
mov
mov
pop
push
xchg
hlt
xchg
out
fistpl
mov
xor
inc
xchg
mov
cs
push
movsb
outsb
movsl
shlb
cmpsb
mov
or
or
cmp
mov
mov
dec
and
inc
xchg
dec
xor
fldl
push
mov
rorl
jmp
pop
mov
fisubrs
aas
jmp
xorb
addr16
mov
in
int
jecxz
pusha
xor
test
add
incb
push
jnp
push
mov
xor
sub
inc
cmp
cs
ljmp
adc
fstl
adc
mov
arpl
jecxz
xlat
setne
push
bound
cwtl
fists
cltd
push
cmpsl
pop
push
roll
shlb
pop
inc
aam
cld
xchg
sub
jns
pop
lods
je
xchg
jno
mov
xor
repnz
cmp
adc
fidivrl
stos
out
mov
jo
push
cmp
cmp
out
and
adc
pop
sbb
xchg
jb
arpl
mov
inc
or
and
imul
in
lret
mov
iret
sbb
pop
je
test
jno
shll
mov
daa
mov
xor
lods
mov
push
xor
inc
daa
scas
movsl
xchg
int
sub
cli
lds
jo
jp
idivl
sub
test
xor
and
lods
mov
add
clc
add
lock
addr16
les
xchg
ror
fdivs
add
stos
cmpsl
sub
cltd
push
mov
push
loop
dec
rclb
xchg
add
dec
out
hlt
sti
nop
out
xlat
sbbb
cmp
mov
gs
repnz
mov
cli
xchg
add
mov
ds
out
dec
loopne
add
push
xchg
lahf
or
jp
xor
push
xor
pavgb
dec
or
cmp
stos
pusha
popa
cmp
jae
inc
push
ffreep
pop
push
loope
es
leave
jp
cwtl
movsb
ja
mov
arpl
shrb
mov
test
xchg
add
xor
sub
jo
jnp
pop
test
mov
movsl
xchg
dec
cs
cwtl
mov
fcoml
or
fwait
cwtl
lds
hlt
ret
cpuid
jle
mov
mov
loopne
inc
dec
add
pop
or
cltd
jnp
pop
mov
cmp
loopne
xchg
shrl
inc
scas
out
fisttps
mov
push
push
in
sbb
push
dec
add
in
out
dec
adc
jae
xchg
gs
sbb
addr16
fs
out
scas
pop
push
nop
pop
mov
sti
cmp
dec
jecxz
mov
int3
or
cmp
lock
cmp
mov
aad
js
fldl
imul
inc
imul
pop
cmpsb
fst
mov
dec
lahf
adc
sti
in
jmp
push
inc
stos
in
leave
negl
in
pop
and
in
outsb
sbb
jle
and
xchg
ds
sbb
scas
cmc
mov
cmp
jnp
mov
push
add
pop
push
mov
insb
jle
xchg
mov
das
int3
sbb
jnp
mov
mov
mov
xor
fildl
enter
pusha
aas
cmp
movsl
int
dec
push
nop
xlat
ss
sbb
je
in
or
or
push
imul
gs
and
int
and
xchg
outsb
xor
push
xor
lret
inc
jbe
fdivrs
test
add
divl
mov
mov
lret
sbb
xchg
push
loope
mov
loopne
push
dec
je
and
jb
out
rclb
or
mov
popf
enter
es
pop
push
imul
fdivrs
add
and
xchg
add
daa
fstpt
pushl
cmp
cmp
xor
push
mov
dec
aad
outsb
arpl
js
scas
cmp
cmpsb
inc
sbb
cwtl
push
or
ss
rcll
pop
push
leave
and
adc
xchg
mov
stc
push
jno
mov
mov
pop
push
dec
inc
test
xchg
hlt
mov
nop
and
cmc
pop
mov
jbe
xor
andl
movsb
aas
popl
pop
jle
stos
push
movsb
lods
add
pop
andb
ret
imul
fwait
sbb
cmpsb
into
dec
out
sub
in
es
jae
mov
mov
mov
sub
loopne
arpl
pushl
rcr
inc
data16
add
ret
mov
cmp
mov
lods
mov
xor
adc
mov
jne
das
sub
cmp
pop
xchg
and
loope
lahf
repnz
cmp
dec
hlt
aaa
test
stc
ljmp
or
lret
or
call
inc
lret
and
hlt
xchg
ss
mov
jb
insl
inc
xor
movsb
addr16
stos
jmp
popa
clc
xor
cld
mov
data16
outsb
jne
je
push
fcoms
xor
mov
xchg
test
inc
pop
test
mov
int3
iret
xor
mov
out
test
xor
imul
jl
mov
rcr
dec
dec
xchg
outsl
ror
mov
pop
cltd
mov
pop
dec
sbb
aas
fisttps
outsl
mov
in
dec
inc
insl
jb
adc
fwait
das
cmp
sub
enter
mov
icebp
mov
add
xchg
in
cmp
js
lods
cmpsl
push
sub
cmp
or
imul
adc
leave
sbb
lcall
sbb
mov
dec
mov
inc
dec
outsl
sbb
jecxz
sbb
xlat
add
pop
into
sub
fnstcw
fdivrl
movsl
push
push
aad
jb
jg
sbb
subl
rorb
cli
dec
jae
fisubrs
push
imul
lret
and
push
inc
mov
sub
sbb
sub
cmp
test
rol
insl
xchg
hlt
aad
mov
std
jbe
dec
div
mov
sbb
sbb
mov
testb
adc
into
leave
cmpsl
mov
cli
jae
fwait
imul
rcr
pop
or
dec
addr16
sbb
popf
xchg
jbe
add
sub
aam
mov
mov
pushf
lods
jne
fldl
inc
stos
jg
std
les
push
xor
and
xchg
lock
jmp
mov
addr16
mov
sbb
ja
pop
sbb
fdivr
scas
cmpsl
sub
lock
lods
jnp
jp
test
mov
cmp
fbstp
enter
inc
int3
lods
neg
adc
inc
mov
stos
insb
mov
pushf
sbbl
inc
mov
pop
aas
mov
adc
cmp
hlt
lock
mov
and
xor
into
xchg
xchg
lea
inc
adc
push
or
mov
lahf
sarl
and
aam
mulb
lea
pop
mov
xchg
sub
cmpsl
cmc
mov
mov
addr16
pop
adc
mov
daa
je
sub
adc
rorl
push
sub
mov
xchg
loop
cwtl
push
pop
sub
ds
xchg
fldenv
xchg
testl
pusha
lret
xchg
addl
pop
rcrb
movsb
aam
scas
xlat
inc
ret
add
inc
pop
pop
or
stos
fidivl
mov
add
mov
mov
je
or
or
imul
mov
out
iret
inc
aas
inc
fsts
popa
cmp
jge
test
call
enter
adc
xor
ror
cwtl
jns
jecxz
loop
add
lret
dec
ja
in
pop
fistpll
sub
dec
notl
sbb
push
and
pop
rorb
add
push
inc
add
mov
insl
int
jmp
pop
pop
add
in
inc
cmpsl
xor
adc
fists
xor
daa
loopne
cmp
lcall
repz
cmp
out
cmpsb
push
test
pushf
xchg
hlt
adc
pop
shll
mov
cmp
pop
mov
outsl
mov
dec
pop
dec
cmp
and
sbb
stos
cmpsb
mov
hlt
push
xorb
xchg
outsl
popf
jbe
ret
jo
outsb
mov
sarl
xchg
mov
xor
cs
out
jne
dec
test
fsubr
cli
shrd
mov
push
cmp
fists
mov
pop
in
inc
xor
lods
stc
rcr
mov
lods
lods
popa
and
jns,pt
and
xor
aaa
pop
nop
jnp
pop
das
and
loope
int
xchg
sub
sbbl
xchg
sbb
dec
push
or
cmpb
lret
add
pusha
cmpsl
lea
icebp
pusha
xlat
shll
sub
outsl
ret
jo
or
sahf
cld
adc
jae
cmpsl
lock
out
or
popl
xchg
mov
push
jae
mov
sub
movsb
std
push
sbb
sbb
sub
jbe
les
and
in
xchg
popa
into
jo
aas
ss
dec
add
and
and
je
cmc
mov
shl
pushf
mov
cwtl
fwait
loop
sbb
cmp
mov
cmp
popa
jb
pop
jb
stos
push
mov
inc
out
jno
xchg
push
pop
stos
push
xor
jmp
gs
insb
je
outsl
push
out
cmpsl
in
scas
jne
pusha
xchg
inc
mov
mov
add
cmp
lds
and
xorb
stc
and
push
fsubrs
ja
sub
sbb
jle
scas
sbb
out
fimuls
inc
cmp
push
nop
sub
xor
cmp
testl
outsb
adcl
adcl
pop
aaa
push
iret
mov
mov
aas
add
adc
test
testb
ss
xchg
inc
or
popf
mov
jnp
sbb
xor
xchg
std
xchg
or
test
mov
gs
stos
push
ficoml
adc
das
adc
dec
test
jmp
iret
lds
inc
fists
cmpsl
jo
jle
imul
push
jle
inc
iret
fisttpl
xchg
sub
test
stos
mov
insb
test
push
popa
xor
fsubrs
fstps
fsubl
or
divb
mov
jae
imul
adc
sahf
mov
test
xchg
fimuls
add
or
std
jo
out
aaa
pop
mov
dec
movsb
pop
stc
sub
cmp
or
loopne
lods
mov
out
ds
cs
or
movsl
fs
cmp
push
cli
jo
and
cmp
ja
push
prefetch
fildll
scas
pop
nop
adc
hlt
insl
add
loopne
out
cmp
pop
pusha
inc
mov
cwtl
into
xor
or
rcrl
jo
jae
jo
dec
fldcw
mov
lret
insl
fnsave
frstor
dec
aad
cmpsb
movsb
lcall
pop
clc
bound
lds
sbb
pushf
aas
aaa
pop
or
push
daa
or
cli
pop
fs
iret
sub
mov
sqrtps
xor
fstpl
int3
shlb
jns
sbb
push
sub
sbb
sbb
lahf
popl
mov
pop
std
sbb
or
jl
icebp
ret
bound
shrl
adc
outsb
mov
daa
dec
fsts
pusha
inc
push
mov
stc
push
cmpsb
push
cwtl
pop
mov
sbb
bound
repnz
pop
repnz
pop
loopne
addr16
sub
adc
outsl
aad
pop
cli
cmp
in
popf
push
mov
push
daa
addr16
rcl
jp
aad
adc
add
ret
mov
repnz
shlb
jmp
pop
stos
push
push
mov
in
leave
inc
pusha
clc
addr16
dec
push
pop
jo
outsl
clc
jae
test
out
mov
sbb
or
xchg
push
test
test
xor
shrl
fwait
push
scas
pop
pop
sub
lret
dec
scas
ret
sub
adc
test
mov
mov
mov
sbb
insl
lea
insb
repnz
scas
mov
mov
fnstenv
and
lahf
aaa
push
test
test
les
dec
in
int3
imul
fidivs
iret
mov
push
idivl
pop
sub
std
sbb
popfw
movsb
loop
jl
lds
jae
pop
jnp
and
std
pushf
sti
mov
mov
ljmp
arpl
repz
lock
sbb
mov
pop
jp
leave
cld
pusha
xchg
lods
adc
inc
not
jb
enter
jp
je
jne
aaa
mov
vmovlhps
jle
adc
faddl
clc
lds
lcall
out
pop
out
iret
sub
ss
fcoms
inc
insb
xchg
ds
jmp
lods
inc
int3
pop
mov
testl
out
add
adc
push
xchg
sti
incl
dec
pmuludq
loop
jge
xor
shrl
lcall
mov
adc
mov
test
in
pop
std
sti
pop
imul
fwait
sbb
ss
mov
shrl
dec
mov
xchg
and
adcb
pop
jo
or
dec
mov
and
gs
sub
sti
pop
push
mov
mov
in
cmp
pop
or
fwait
sub
jle
shrb
imul
scas
das
stos
pop
insl
add
mov
xchg
out
int
inc
pop
fadd
sbbb
lea
push
or
imulb
out
add
dec
jnp
int
dec
mov
gs
out
and
fwait
push
add
daa
sbb
in
flds
dec
pushf
sbb
addl
dec
mov
fwait
insl
mov
xchg
jle
ja
add
sub
pop
sub
dec
or
pushf
repnz
sbb
push
orl
mov
mov
fs
fadds
mov
aam
shlb
or
pusha
shl
xorl
xor
jle
xchg
cmpsl
call
and
cmp
out
mov
sub
pop
sub
fucomip
cmp
aaa
in
jp
add
pop
xchg
mov
ds
ja
ljmp
inc
dec
popf
iret
xor
hlt
sub
ret
clc
imul
pop
in
pop
mov
fistpll
insl
loope
loope
jno
fbld
leave
jne
xchg
mov
add
dec
mov
mov
pop
ljmp
scas
icebp
mov
and
sahf
jns
and
ja
movsb
jns
dec
jns
mov
xchg
adc
sbb
mov
adc
stos
push
xor
movsb
mov
in
mov
jae
xchg
fsubl
mov
nop
popf
mov
mov
mov
test
and
add
cmp
or
add
out
test
aaa
inc
loopne
int3
shll
dec
inc
ret
mov
mov
insl
sti
scas
mov
jno
mov
mov
adc
fidivrl
dec
and
sti
jmp
and
push
movsb
stc
mov
sbb
andb
push
push
cwtl
or
sbb
jecxz
cld
cld
add
push
cld
mov
sbbb
dec
cmp
inc
in
je
leave
sti
repz
fisttpll
adc
jmp
out
int
sbb
popf
push
leave
mov
lahf
dec
data16
and
lods
into
mov
lcall
mov
fwait
push
cmp
jno
lret
hlt
mov
std
add
cwtl
pop
push
lcall
push
pop
adc
popa
mov
fsubr
aad
addl
pop
cli
sub
sbb
push
cwtl
jl
lret
mov
iret
adc
lock
jmp
mov
xchg
push
jno
cmp
cmp
adc
fidivrl
mov
pop
add
loopne
pop
sub
push
xchg
pop
lret
or
cmp
data16
popl
mov
lods
mov
pop
adc
dec
test
repz
shlb
das
push
dec
test
adc
inc
lods
fwait
ss
mov
outsl
mov
fldcw
lods
pop
jg
pop
jmp
ds
adcb
loope
repz
add
dec
in
adc
and
pop
fadd
loope
jnp
sbb
sbb
dec
loopne
cmp
std
cmp
insl
cltd
test
add
xor
inc
adc
jbe
jnp
cltd
jo
repz
data16
mov
rolb
adc
mov
loopne
push
pushw
ret
xchg
sub
out
lret
rcll
mov
pop
add
or
rcll
push
in
inc
mov
pop
in
stos
shrb
int3
mov
lock
call
es
lea
fwait
adc
cli
rcll
loopne
xor
shll
fs
cmpsb
inc
mov
inc
mov
and
test
loope
xchg
xor
mov
mov
mov
add
nop
push
or
lcall
test
jp
mov
mov
js
jge
idivl
dec
popf
fcmovne
xor
lods
pop
jl
cmp
clc
push
mov
dec
pop
mov
mov
cli
in
std
xchg
mov
lret
xor
pop
mov
test
inc
mov
or
call
push
jmp
dec
sbb
cli
gs
fildl
sbb
adc
add
lret
mov
mov
fnstsw
fmull
or
xor
test
sti
sub
pop
sbb
inc
fneni(8087
cmp
xchg
daa
icebp
notb
cmpsl
lea
sub
or
adc
mov
ljmp
hlt
cmp
or
daa
xchg
mov
in
inc
push
aad
xchg
call
lcall
xchg
jmp
mov
aad
inc
movsl
inc
int
imul
fistps
xor
call
pop
imul
lods
clc
lret
sti
mov
mov
xor
outsb
ss
sbb
push
jno
mov
dec
in
dec
jbe
scas
fisubs
inc
push
lods
pop
rcr
add
scas
pop
jp
cmp
in
xor
mov
jne
sub
stos
sbbb
adc
xor
data16
stos
inc
test
dec
add
shlb
sbb
mov
mov
jg
test
sbb
ret
repz
int3
leave
in
adcl
ds
and
jl
sbb
jmp
cltd
push
es
aad
cmpsl
int3
jno
push
add
cmp
mov
test
call
popa
add
jge
int3
in
xchg
rol
int
mov
lret
sub
pop
and
cmp
and
gs
js
leave
adc
push
je
push
fs
sub
push
ret
shlb
sbb
fisttpll
jno
repnz
and
xchg
movsb
fisubl
mov
mov
mov
notl
scas
and
jb
cwtl
xor
je
sub
push
outsb
pop
mov
add
xlat
jbe
mov
loopne
pop
xor
and
sahf
push
xor
xor
xchg
push
push
rorb
fcomps
push
and
push
loop
cmpsb
das
pop
addr16
inc
inc
mov
jnp
fcom
incl
xchg
add
mov
pop
sub
and
outsl
pushf
jg
out
push
inc
jmp
outsb
mov
cltd
xchg
pop
arpl
mov
testb
push
fdivrs
jbe
jae
xor
ja
aam
fisttpl
cld
loope
xchg
pop
pop
sarl
push
xchg
mov
xor
jp
sub
mov
ljmp
jge
jle
and
add
adc
adcl
cwtl
xchg
and
aam
and
sub
popa
cld
test
popa
into
inc
sbb
mov
dec
push
test
inc
pop
mov
pop
lea
cmp
sbb
pop
mov
mov
fsubs
test
mov
mov
sub
mov
inc
push
cmpxchg
shll
out
flds
ficoms
and
loope
sbb
sub
arpl
lcall
iret
mov
pop
jnp
ljmp
sti
lods
dec
push
jne
or
mov
cmp
sub
mov
hlt
mov
xor
out
jmp
scas
data16
fdivs
xchg
inc
jbe
jg
popf
scas
xchg
add
cs
push
test
out
dec
xchg
aas
add
aad
jne
pop
push
add
pop
movsb
stos
jmp
out
jmp
aam
test
push
lods
xchg
cmpsb
enter
adc
imul
adc
dec
push
mov
andb
jne
cmp
inc
jne
stos
jle
pop
jle
or
cmp
shr
test
rcll
btr
xchg
or
sbb
jp
test
bound
inc
cmp
dec
into
or
inc
xchg
add
jge
or
shlb
or
push
les
arpl
dec
ret
and
in
repnz
mov
sbb
pop
dec
xchg
adc
xor
xchg
stos
outsl
inc
dec
sbb
cmpsb
enter
pop
inc
inc
mov
call
mov
push
pop
sbbb
or
out
aad
mov
repnz
xor
jg
movsl
mov
sbb
jns
push
pop
into
xor
jo
push
fmulp
jns
or
sub
xchg
or
popf
xor
push
in
data16
inc
push
in
sti
pop
sbb
pop
std
inc
mov
fimuls
out
popf
pop
sub
push
imul
adc
push
and
in
sub
mov
mov
cld
hlt
pop
ret
xlat
dec
pop
enter
lret
pop
into
dec
push
pop
mov
repz
jne
in
push
and
sbb
mov
jmp
dec
es
push
daa
adc
outsl
mov
sbb
or
jecxz
pop
loope
test
mov
and
pop
xor
sti
jp
ds
cmpsl
bound
clc
out
push
lret
stos
fdivs
xor
enter
inc
in
ror
fsts
das
jge
scas
in
lahf
lods
jle
mov
sub
aaa
aaa
shll
mov
cli
iret
pop
imul
jmp
loopne
mov
in
lret
sbb
pushf
push
and
cmp
aam
sahf
sbbl
inc
push
or
jp
das
mov
movsl
xchg
sti
xchg
fcomps
dec
xor
xor
sub
and
in
lahf
shlb
stc
out
aas
xchg
pop
adcb
sub
or
scas
xchg
fnstenv
addr16
shll
gs
and
push
cli
enter
cmp
stos
sbb
mov
clc
scas
out
jb
inc
push
pop
push
movsb
bound
cmc
movsl
lods
cli
or
cmova
add
shl
xchg
orl
mov
mov
jl
sbb
mov
test
cli
dec
adc
dec
xlat
push
into
xchg
leave
aaa
jmp
loope
fcmovnbe
fs
imul
pushf
push
std
add
mov
xchg
push
shrb
xchg
cltd
fimuls
or
jne
rcrl
enter
or
xchg
mov
pop
jmp
fnstcw
das
xchg
sub
das
sbb
inc
pop
cmp
xchg
mov
push
jl
pop
aas
dec
mov
pushf
pushf
jbe
inc
and
rcl
cmp
add
test
xor
push
jb
xor
cmp
out
mov
xor
loop
stos
pushf
scas
xor
pop
xchg
mov
ss
popf
inc
sar
inc
sbb
bound
pushf
sbb
and
push
mov
adc
rcl
sub
loope
daa
test
fcoms
jnp
and
or
fsubrl
and
arpl
mov
mov
sti
repz
hlt
cmp
dec
mov
ficompl
sbb
pop
inc
shrb
sub
lcall
mov
push
call
and
inc
iret
xor
aas
mov
inc
leave
xchg
mov
mov
push
push
and
jle
cmp
pop
mov
ja
pop
mov
pop
mov
pop
inc
lret
lcall
add
fxch
in
mov
add
add
sub
lret
rolb
std
mov
dec
or
adc
scas
push
insb
imul
xchg
xchg
sub
iret
mov
xchg
out
inc
roll
mov
in
clc
movsb
push
jmp
imul
lahf
jmp
mov
adc
inc
push
inc
pop
ret
in
or
shlb
xchg
enterw
mov
or
mov
cltd
das
push
mov
dec
jecxz
jae
nop
fsubrs
push
stc
cmpsb
xorl
cmp
mov
in
ret
push
mov
aam
testb
jbe
dec
loopne
mov
cmp
xchg
sbb
ffree
mov
imul
shlb
xchg
sub
and
and
das
ret
sub
push
call
pop
test
dec
ljmp
mov
into
out
or
cs
inc
sub
dec
ds
mov
sbb
mov
icebp
out
aam
sub
xor
inc
popf
push
push
sbb
jge
lea
shrl
inc
imul
mov
push
lds
sub
inc
bound
push
adc
fcomi
jecxz
sbb
adc
dec
inc
adc
inc
ja
lret
pop
clc
sbb
or
pop
cmp
mov
call
push
lret
shll
xchg
out
xchg
sbb
std
inc
leave
loop
xor
std
lea
xor
or
and
cmp
pop
jle
dec
sbb
mov
jns
out
dec
aas
push
jb
pop
xchg
insb
or
test
inc
ljmp
aam
jl
faddp
push
dec
sub
mov
push
sbbb
arpl
jnp
cmpb
add
xchg
pop
idivl
mov
fisttpll
into
incl
hlt
adc
jno
adc
mov
nop
inc
push
pop
das
sub
sub
mov
cmp
pop
and
in
mov
mov
or
sbb
shlb
jl
mov
push
sub
xchg
aas
shll
loop
inc
mov
push
jmp
cmp
lds
addl
push
xor
icebp
scas
jp
push
mov
adc
ds
fstpl
mov
lcall
out
js
leave
jge
dec
je
shlb
mov
dec
push
dec
push
fdivl
rcll
mov
dec
jb
add
push
or
dec
pop
push
sub
or
mov
ss
or
cmc
lods
jns
pop
mov
xorb
cmp
fsubs
test
dec
popa
stos
adc
sub
test
pop
mov
mov
stc
adc
inc
pmulhuw
cltd
rcrb
cli
mov
stos
adc
ja
add
lock
or
sub
xchg
xchg
xor
stos
cmp
sbb
adc
out
cmp
ss
xor
mov
popf
outsl
fwait
insl
add
sub
mov
es
mov
stos
cmp
add
call
push
add
pop
leave
pop
icebp
cmpsb
jo
mov
sub
pusha
and
insb
inc
pushf
fcomip
add
jg
pslld
sbb
mov
movsl
xor
iret
fdivs
ljmp
aam
xchg
outsl
mov
mov
add
stc
ds
sub
lret
stc
pop
shll
stos
scas
loopne
loope
push
rcrl
out
es
xor
mov
inc
mov
and
mov
aad
adc
fidivrs
leave
sub
ss
inc
add
xor
jg
sbb
xor
mov
pop
leave
xchg
inc
jecxz
add
add
mov
xor
xor
pop
push
and
bound
cs
incl
push
mov
cli
cmp
dec
inc
jecxz
push
cmpsl
das
pop
adc
mov
insl
sub
or
xchg
dec
mov
ljmp
test
fcmovne
jo
aas
cmpsl
fcmovu
aas
cmp
iret
xchg
rol
std
jp
in
ficomps
stos
inc
xchg
push
aad
xchg
xchg
mov
pop
pusha
cld
jmp
inc
cli
out
sub
sub
xlat
inc
sub
setno
mov
insl
mov
scas
xabort
and
xor
dec
fistl
cmp
lret
sub
popf
cltd
inc
xor
add
icebp
inc
hlt
es
pop
adc
sbb
xchg
add
mov
lret
outsb
add
inc
inc
repnz
add
adc
dec
shll
gs
imul
cmpb
insb
sub
lahf
cmp
mov
ss
test
and
dec
jnp
sbb
dec
jl
add
and
loope
es
je
inc
insl
and
pop
mov
xchg
std
ss
inc
and
enter
andb
adc
inc
scas
mov
lcall
xchg
jmp
or
cmp
sbbl
insl
call
and
add
addr16
clc
aad
popf
sbb
or
cmp
pop
test
dec
jnp
cmp
popa
test
pop
cmp
dec
es
ljmp
pop
cmp
inc
pop
lods
lds
push
fcom
or
in
data16
testb
addr16
adc
rorb
jge
ljmp
mov
xchg
das
je
inc
test
adc
add
lods
jbe
data16
shlb
cmpsb
loopne
push
inc
nop
mov
push
or
pop
xchg
sub
dec
xchg
jo
push
pop
lcall
dec
iret
pop
mov
scas
fldcw
imul
fsubrs
xor
repz
mov
mov
cmp
test
mov
dec
inc
insb
or
clc
dec
cmp
mov
call
in
iret
test
cli
lahf
and
out
xchg
sbb
sub
andl
leave
sbb
inc
xchg
cs
lcall
mov
push
and
daa
add
rcrb
push
addb
jne
jbe
sbb
pop
adc
in
sub
mov
push
xor
mov
adc
sbb
repnz
lret
and
inc
and
push
sub
add
mov
jbe
sti
inc
mov
fists
loope
push
pop
mov
cmp
test
lret
stos
in
sub
imul
stc
mov
in
dec
jbe
popf
cmp
adc
mov
shrl
ds
xchg
sub
push
xor
adc
call
stos
test
jg
test
sbbb
inc
adc
rclb
pop
xchg
mov
movsl
enter
ss
fdivrp
std
les
mov
bnd
push
inc
jmp
adc
sub
in
pop
xchg
inc
pop
in
inc
daa
fisttpl
flds
inc
mov
loope
adc
xor
test
mov
enter
dec
lret
mov
rcr
popa
cmpsb
mov
js
jns
dec
mov
jg
or
and
push
in
mov
daa
mov
or
inc
call
pop
mov
mov
cli
repz
repz
out
sbb
and
push
push
in
mov
dec
sbb
movsl
enter
mov
out
fldenv
xchg
test
mov
push
push
imulb
fsubs
fidivrl
mov
xlat
mov
fimull
mov
in
jg
inc
or
int3
mov
dec
lds
cmp
or
sub
xor
or
pop
pop
ret
xchg
sti
dec
sub
test
mov
sub
hlt
and
outsl
pop
daa
xor
sub
mov
daa
jbe
inc
call
out
shll
xor
mov
aam
cld
fwait
jecxz
pop
push
xor
cwtl
inc
add
jae
mov
mov
mov
mov
sar
xchg
std
xchg
call
mov
sti
push
pop
sbb
stos
jne
inc
sub
mov
pop
inc
pop
jbe
jb
ret
cltd
out
pop
xchg
push
mov
into
cwtl
leave
ljmp
rcrb
push
adc
push
adc
mov
mov
lock
adc
dec
sbb
jge
inc
adc
imull
pop
pop
jae
lcall
fstpl
loopne
ds
push
inc
je
nop
rolb
mov
and
xchg
add
xor
xchg
or
xchg
or
pop
movsl
js
roll
jge
xor
mov
mov
mov
rolb
dec
out
cmpsb
je
mov
pusha
adc
int3
xchg
jmp
add
mov
add
aaa
mov
pop
xor
and
in
sub
mov
cmc
push
pop
xor
jns
jl
lret
sub
stos
insl
mov
popa
stos
lock
xor
mov
jbe
mov
hlt
mov
add
xchg
push
out
jo
jns
or
in
jbe
out
lods
fnsave
cmp
imul
push
or
add
xor
cmc
dec
sbb
and
das
sti
jg
in
popa
adc
push
inc
jge
dec
out
insb
insl
std
sbb
outsb
cmpsb
cmpsb
mov
mov
jge
sahf
hlt
lahf
out
jns
jnp
pushf
lods
roll
in
or
scas
sti
loopne
cmc
xor
into
mov
cmp
push
or
mov
shrb
rol
fistpl
stos
dec
mov
es
out
dec
pop
orl
jb
cli
sub
xor
gs
ficoms
sbb
jb
pop
in
stos
cmp
leave
xor
shll
jg
les
sti
roll
out
and
cmpsl
mov
test
call
inc
into
sbb
aaa
add
adc
test
movsb
rcrl
mov
fs
mov
push
or
into
cmp
sub
add
xor
loop
lahf
jnp
cli
adc
mov
fmuls
cld
ficompl
aam
ja
mov
mov
lahf
insb
add
push
jbe
push
adc
push
lods
jb
into
rcrb
aaa
cmpb
mov
es
inc
rclb
std
pop
loopne
or
stc
xor
cmp
xor
or
mov
gs
mov
stc
and
nop
stc
icebp
jmp
sbb
adc
jge
pop
mov
lods
outsl
scas
fwait
movsb
pop
jmp
sub
mov
sbb
xchg
sub
jo
sahf
adc
das
sub
mov
jno
fistps
push
in
sbb
out
lods
push
dec
jb
xor
ljmp
jge
stos
mov
cld
pop
mov
sub
leave
add
mov
pop
popf
js
lea
mov
and
push
xorl
add
aad
fiadds
jo
add
mov
out
cmpl
mov
dec
imul
add
fidivs
mov
iret
fdivrl
subb
and
sub
daa
dec
adc
mov
cmp
mov
mov
sbb
mov
repz
push
push
pop
or
sub
jbe
cmp
push
and
pop
mov
jb
out
mov
jo
sahf
mov
adc
sbb
jnp
hlt
mov
jns
test
mov
push
jge
dec
shlb
cmp
call
into
stos
xchg
int3
push
lret
fsubr
sbb
fcomp
cmpsb
push
xor
pop
fucomp
jno
pushf
push
push
mov
xor
shlb
cs
out
shlb
mov
sbb
mov
dec
loop
lcall
cs
mov
inc
rol
cmpsb
sarl
add
scas
dec
movsb
jl
stos
nop
scas
in
or
je
and
sub
xchg
fsubl
adcb
cmp
push
cmp
adc
inc
and
add
and
dec
sbb
leave
fisubrl
imul
jb
fistps
int3
test
mov
or
lods
gs
in
out
xorl
flds
bound
and
inc
je
out
xor
ret
jecxz
mov
push
and
rcll
cmpsl
lahf
mov
xor
inc
iret
pop
push
repz
mov
into
fwait
divl
call
mov
push
shll
loop
jmp
push
mull
jl
subb
jne
ljmp
mov
loopne
loop
and
sub
xor
inc
scas
ret
or
jno
and
sbb
lods
sub
inc
fistl
xchg
movsl
dec
popf
push
mull
mov
scas
mov
and
repnz
sbb
mov
mov
cmp
mov
pop
mov
leave
dec
fists
cmpsl
pop
fstp
mov
mov
not
cmp
xchg
rcl
rorb
push
adc
jmp
xchg
test
cmp
sbb
mov
cmp
std
push
or
hlt
pop
mov
out
jbe
adc
xor
jno
arpl
adc
cltd
sub
je
and
xchg
in
xor
xor
push
adc
ss
xor
popf
dec
jge
jnp
sbb
jge
in
mov
dec
xchg
add
dec
push
out
test
sbb
push
xor
push
add
pop
test
int
mov
pop
clc
popl
push
cld
mov
ret
add
mov
add
push
mov
push
sbb
mov
das
dec
ss
cmp
mov
fs
icebp
and
xor
data16
test
stos
cmc
inc
lds
and
loop
add
dec
popf
xor
mov
xor
inc
pop
push
sbb
rcl
sbb
repnz
rcll
sub
and
lcall
dec
fmull
inc
push
idiv
xchg
mov
int
xlat
mov
xchg
pushf
lds
mov
mov
jae
in
xchg
divb
sbb
insl
pop
cmp
aaa
mov
and
jbe
sbb
xchg
mov
sarb
sub
test
out
push
shld
or
arpl
dec
sub
stos
sub
push
inc
ret
mov
or
gs
call
lock
cmp
lea
sbb
ret
out
push
in
test
fwait
push
mov
pop
xchg
cmp
lock
jns
ja
das
dec
in
sti
or
mov
gs
addb
sub
inc
addb
mov
mov
xor
mov
and
movl
push
sarb
scas
pop
dec
push
je
push
outsb
adcl
cwtl
push
mov
nop
arpl
ret
es
sub
incb
ljmp
inc
jmp
or
add
xchg
cmp
enter
inc
pop
jg
lods
pop
daa
idivb
mov
in
dec
mov
pop
sub
cmp
enter
or
test
sbb
adc
ss
hlt
jae
loopne
stc
adc
push
adc
cmp
aad
mov
in
std
pop
adc
push
inc
mov
fmull
aad
inc
imul
vcvttsd2si
inc
and
jecxz
arpl
sub
cmp
sarb
test
xlat
ror
nop
loop
jp
loope
cmp
dec
and
adc
push
push
mov
inc
cli
movw
mov
ficoms
mov
pop
into
enter
addr16
xchg
in
insl
push
xor
dec
push
je
leave
and
pushf
out
loopne
repz
inc
push
dec
xor
jb
ljmp
mov
adc
dec
out
or
stos
cli
xor
jns
inc
dec
cmp
fisttps
push
jne
sbb
pushl
sbb
jno
aas
jge
adc
sub
dec
cmc
testl
inc
in
scas
xchg
ds
hlt
push
stos
add
cmpsb
sbb
cs
iret
sahf
mov
pop
pop
dec
cmpsb
aad
xchg
pop
pop
push
push
fsubp
jo
lret
pop
bound
cld
or
call
jmp
push
gs
cmpsl
sarb
cmp
shlb
icebp
daa
out
sbb
hlt
jo
sub
or
int
mov
call
in
jmp
push
and
scas
mov
insl
push
gs
jo
into
mov
xchg
cmp
jbe
icebp
dec
jne
insb
and
repz
inc
stos
call
notb
pop
negl
scas
xchg
std
cld
and
out
jl
add
push
jle
in
mov
lcall
push
fcmove
push
dec
aas
hlt
mov
call
into
stos
idiv
leave
sti
insb
xor
out
ja
shl
addl
outsl
gs
ds
pop
add
mov
pop
subl
fnstsw
or
shlb
fs
daa
push
test
push
dec
mov
fcoms
jecxz
sbb
es
jmp
cmp
mov
xlat
mov
fs
int3
mov
popf
rolb
popa
test
sbb
pop
testl
xchg
sbb
aad
sbb
inc
or
mov
xchg
pop
stc
lods
js
push
and
and
mov
mov
ffreep
dec
sbb
stos
push
cmp
adcb
lods
and
inc
xchg
push
in
in
or
cmp
in
icebp
cmp
in
add
sbb
insl
les
lret
movsl
data16
popf
mov
movl
mov
push
clc
insb
dec
leave
cmpsl
xor
xchg
sahf
mov
movsl
iret
pushf
inc
mov
and
jb
add
adc
rcrb
mov
out
jl
or
stos
mov
sub
sti
mulb
sahf
lret
jne
and
jbe
xchg
pop
jno
xor
add
pushf
cwtl
ljmp
and
inc
pop
dec
and
inc
subb
call
jnp
rcr
and
mov
out
pop
mov
mov
icebp
aas
jp
xchg
negl
ja
fst
mov
xchg
daa
test
lds
lock
adc
fsubrs
jbe
cmpb
int3
dec
test
lods
pop
repnz
mov
cmp
pop
mov
mov
pushf
cwtl
lret
sub
data16
out
jae
les
cmp
push
inc
cmp
inc
pop
push
cmpsb
sub
jp
pusha
or
xor
ljmp
sets
mov
xchg
movswl
jno
je
shrb
adc
fisttpl
mov
mov
iret
sub
xchg
fsubrs
cmp
push
divb
sbb
jmp
insb
outsb
movsb
jge
inc
cmp
cltd
adc
adc
xchg
jge
outsb
out
stos
test
stos
je
mov
ret
xchg
cld
insb
pop
jbe
sub
mov
dec
push
jno
jge
and
loopne
jl
or
les
rorb
and
cmpsl
fsubl
pop
jg
and
popf
ljmp
sub
mov
mov
out
xchg
mov
es
mov
or
insb
pop
or
outsl
xor
add
push
lahf
pushf
call
dec
scas
lods
adc
sub
not
repz
and
sub
int3
push
stos
stc
fdivl
or
scas
sbbb
test
enter
jl
dec
mov
xor
repnz
push
dec
sbb
push
lock
adc
pop
aas
xchg
cmpsl
ja
gs
das
sti
cld
add
testl
cs
fwait
ret
mov
xchg
cwtl
ljmp
dec
push
sub
push
rcpps
cs
hlt
xchg
ljmp
fimull
adc
jp,pt
es
xor
mov
xor
jae
push
push
sbb
dec
test
xor
mov
cld
dec
mov
xchg
sub
xchg
xchg
imul
mov
add
pop
xchg
mov
sbb
ja
ror
fwait
or
lock
addb
rclb
mov
fwait
xchg
testb
mov
imulb
test
jbe
shlb
cmp
dec
ss
add
shrl
sahf
mov
inc
aas
fldcw
jmp
js
inc
pusha
subl
dec
and
push
xlat
in
dec
inc
xchg
nop
xchg
inc
mov
fs
push
adc
setae
mov
xchg
add
mov
bound
pusha
and
fyl2xp1
inc
cs
rorl
sub
fiadds
insb
pusha
push
loop
popa
jecxz
add
push
mov
mov
xlat
mov
sub
sbb
pop
jo
xor
repz
pushf
xchg
sub
jae
sub
push
aam
pop
cmpsl
jmp
push
and
add
test
or
ret
sub
mov
xchg
or
push
adc
mov
out
jle
push
ss
lcall
les
cmp
lcall
ret
push
sbb
sbb
lret
cmp
sbb
and
mov
stos
int3
pop
dec
ret
lock
out
xchg
mov
subb
fdivr
rclb
ret
lret
adc
popf
dec
cmp
repnz
push
popf
adcl
leave
or
loop
outsl
cmpsb
mov
xor
inc
sbb
pop
ss
xlat
rcrb
outsl
dec
push
or
mov
mov
je
out
fs
icebp
aad
out
cmp
adc
pop
lahf
push
dec
arpl
shll
fs
mov
scas
push
ret
test
roll
cld
push
xchg
cmp
mov
int3
mov
mov
in
jo
and
and
push
jno
test
out
out
pop
test
imul
inc
inc
fwait
das
mov
mov
mov
cmp
push
test
pushf
or
mov
jne
dec
pop
popf
or
mov
ret
push
xchg
cmp
loop
cld
inc
pusha
xor
fwait
iret
push
ljmp
or
xor
push
and
decb
sub
sub
repz
fimull
xor
mov
gs
lds
fsubl
sbb
imul
mov
loope
cmpsb
adc
sbb
mov
fsubs
sub
bound
inc
dec
cmp
push
cmp
sbb
sbb
icebp
ret
sub
and
mov
xchg
popf
cmp
xchg
in
cwtl
stos
pop
and
lods
xchg
adc
js
sub
push
and
clc
mov
add
jg
sub
sub
pusha
add
ret
icebp
pop
jno
out
imul
dec
cmp
mov
adc
int
jnp
sahf
xlat
cltd
jne
repz
or
in
push
lods
mov
andb
push
sahf
xchg
push
imull
fxch
lret
cmp
repnz
das
dec
pop
jnp
adc
sarl
popa
out
pop
xor
xor
roll
orb
adc
nop
mov
or
mov
sbb
xchg
mov
dec
add
xchg
push
sbb
popa
mov
sbb
lods
jbe
idiv
mov
mov
push
insb
xchg
shr
testl
jae
mov
add
xchg
jmp
fwait
add
add
inc
cli
leave
inc
out
push
adc
xor
stc
jno
movsb
pop
mov
mov
push
icebp
faddl
or
aad
dec
push
pop
xchg
repnz
rorl
dec
repz
test
sar
cmp
imul
jno
and
int3
ret
cmp
adc
pop
adc
adc
xor
gs
lret
and
mov
xchg
std
adc
pop
cmp
push
pop
xor
faddl
cmp
out
sbb
dec
lods
fucomi
add
xor
inc
roll
cmp
imul
jo
cmp
movsb
scas
mov
js
imul
insl
imul
push
fs
fidivrs
ljmp
sbb
jo
mov
inc
cwtl
shrb
arpl
lea
mov
aaa
jmp
fisubrs
pop
sbb
mov
mov
xchg
xor
sbbb
data16
xlat
cltd
inc
insl
scas
cmp
scas
pop
imul
addr16
fildll
mov
jl
adc
adc
sbb
sbb
mov
mov
loop
adc
inc
jge
pop
cmp
mov
xchg
sbb
mov
js
mov
pop
clc
push
lods
mov
pop
int3
or
xor
xchg
sbb
stos
mov
cli
out
mov
inc
out
inc
andnps
data16
cli
es
cmp
out
mov
dec
mov
lea
bound
jb
popa
icebp
mov
lods
dec
fsub
aas
lahf
jbe
out
orl
mov
jae
in
jnp
mov
dec
push
std
faddl
test
xchg
fcmovu
cmp
test
repz
push
adc
aad
fisttpll
lods
and
xor
shlb
shrl
inc
pusha
xor
adc
mov
mov
mov
inc
dec
cmp
sbb
adc
movsl
int3
pop
fsubl
dec
xchg
sub
inc
dec
push
inc
orl
mov
scas
outsl
lret
fwait
jmp
out
pop
mov
xchg
jns
push
push
jnp
xor
lock
iret
cltd
mov
dec
pop
lods
xchg
xchg
pop
add
cmp
out
adc
paddb
sbb
or
ficoml
add
rorl
cmc
xchg
es
insb
std
cli
out
imul
push
xorl
lahf
mov
pushf
ret
push
xchg
add
enter
aam
push
adc
xor
mov
or
mov
push
imul
mov
inc
stc
or
loop
xchg
mov
mov
mov
lret
jnp
mov
subb
cmpb
and
in
push
mov
jp
lahf
sub
rcrl
or
icebp
mov
mov
call
dec
jmp
sbb
lea
push
sbb
ja
pop
sub
mov
fildll
je
cmp
lea
in
insb
jg
adc
jbe
mov
pop
pop
pop
clc
rolb
lahf
lret
cmpb
es
push
in
fidivl
jae
mov
repz
test
pop
jns
push
mov
add
rorb
lds
xor
push
loopne
ljmp
ja
iret
xchg
and
xor
fs
pop
mov
sbbb
cmp
mov
adc
out
lods
ret
xchg
addps
je
dec
jecxz
pushf
cmc
adc
cmp
addr16
lret
push
sub
push
inc
push
scas
push
xorl
insb
fiadds
inc
xchg
pop
fnstenv
and
lret
mov
lea
jle,pn
xchg
pop
enter
mov
add
mov
aaa
push
cmc
mov
jle
mov
pop
sbb
or
aad
sbb
and
jne
pop
aas
inc
jl
stos
lods
pop
sar
lods
rolb
fs
mov
cmp
inc
xor
xlat
mov
into
jecxz
add
adc
pop
mov
mov
pop
lods
shr
pop
cld
mov
bound
push
xchg
in
push
lods
adc
dec
ret
mov
es
cmpsl
xlat
mov
out
jle
mov
lods
cld
in
xchg
pop
jb
mov
loop
out
sub
push
cmp
out
jl
test
or
scas
lcall
test
jg
movsb
movsl
xor
adc
push
jmp
jnp
into
test
repz
test
push
pop
mov
dec
fmul
repz
add
movsb
xchg
fldcw
xor
jnp
icebp
or
cwtl
inc
push
cmp
mov
aam
pushf
rcrl
or
cmp
test
imul
aad
or
sahf
mov
cmpsb
mov
and
push
and
pop
divl
adc
jmp
cwtl
and
cwtl
mov
or
aad
ljmp
cmp
or
es
out
push
cltd
cmpsl
repz
inc
push
fwait
out
xor
sbb
movsb
cmp
daa
lock
and
lds
push
mov
pop
jp
mov
stos
imul
test
push
scas
cwtl
mov
aad
aaa
xchg
pop
lea
xchg
dec
jo
jne
mov
movsb
fwait
test
loop
add
jp
adc
dec
decb
test
push
stos
repz
push
psubd
adc
cld
xlat
jns
cmpsb
xchg
xlat
dec
xlat
aam
jb
out
and
ja
rorl
rorb
test
mov
into
inc
mov
xor
fcomps
in
pop
add
adc
add
jnp
pop
insb
lahf
sub
outsl
imul
mov
dec
jo
xchg
add
cmp
stc
mov
or
pop
jno
inc
cmc
lods
sub
jo
adc
sub
pop
divb
jbe
fstpt
jo
jg
adc
dec
sbb
xchg
mov
lods
xchg
test
mov
loopne
adc
scas
cltd
mov
sub
cmp
and
aad
jp
cmp
pop
or
push
lea
jl
xor
mov
and
mov
jb
in
push
mov
mov
mov
jno
mov
loopne
sbb
fnsave
arpl
repz
and
cmpsb
cld
pop
sbb
pop
dec
jl
cmp
pop
insb
ljmp
adc
ds
lods
subb
andb
aad
sub
dec
sbb
cli
out
shll
push
shufps
add
loop
add
mov
loopne
outsb
rorl
lock
aaa
sbb
cmp
ret
nop
repnz
or
and
cmp
test
cwtl
xor
jecxz
repnz
push
pop
int3
jae
mov
cltd
push
sub
xchg
mov
sbb
stc
xlat
inc
jg
sub
sbb
push
loopne
jmp
es
inc
nop
test
lods
jbe
mov
xor
rcrb
jmp
xor
push
add
aad
cmpsb
mov
cli
pop
push
in
add
pop
ficoms
and
out
or
in
mov
ret
xchg
lea
test
mov
mov
std
loop
ret
xchg
bound
js
mov
je
icebp
dec
mov
mov
pop
dec
in
jecxz
pop
cmp
sti
outsl
pop
jmp
sub
movb
mov
sub
rorl
mov
jbe
test
movsb
xor
outsb
stos
cmp
cmp
cmp
mov
push
dec
adc
ljmp
mov
ret
sub
cmp
mov
mov
loope
and
xchg
jno
xchg
adc
in
clc
mov
mov
fistl
jmp
arpl
sti
mov
inc
jmp
int3
test
cmp
dec
ja
insb
and
xor
jb
jns
xor
mov
fxch
sbb
mov
xchg
data16
adc
push
movsl
xlat
in
pop
and
sbb
data16
add
orb
dec
dec
dec
sub
pop
fistpll
shl
hlt
xor
dec
test
test
arpl
mov
jnp
ret
jne
xor
jns
pop
outsl
inc
pop
push
mov
lcall
add
aam
jb
dec
roll
xchg
inc
bound
fwait
test
in
mov
dec
sbb
fstpl
sub
and
out
movsb
lahf
nop
inc
leave
in
mov
sub
dec
fs
fists
dec
int3
push
mov
loope
mov
in
push
lods
andb
pop
cmp
test
orb
inc
add
mov
adc
lds
push
mov
in
movsb
inc
xlat
cwtl
cmp
sahf
sub
lods
in
scas
cmp
sbb
insb
bound
xlat
enter
in
xor
jno
cwtl
fwait
outsl
pop
stos
xor
inc
fcmovbe
cmp
outsl
out
test
shrb
xlat
addr16
sbb
xor
dec
pop
arpl
fwait
outsl
pushl
cmc
mov
shll
test
xchg
popf
fisttpll
and
sti
cli
xor
out
repnz
and
gs
shll
mov
mov
sub
cmp
push
sbbb
xor
in
orb
cmc
loope
pop
sbb
mov
mov
negb
xchg
dec
mov
fimuls
xchg
jb
mov
sti
fldz
push
pop
and
out
mov
xchg
and
cmp
xchg
ss
xchg
pop
cmp
jb
or
inc
dec
fbld
xchg
test
inc
aam
in
and
mov
jmp
sbb
lahf
sbb
cs
mov
push
inc
sbb
xchg
cmp
clc
xorl
sahf
or
xchg
imul
clc
adc
add
and
jo
adc
xchg
pop
aas
sub
xor
in
pop
adc
jmp
cmp
push
pop
or
adc
out
adc
outsl
stos
aaa
mov
sub
sbb
inc
test
mov
ret
int3
sbb
and
fcoms
sti
popa
inc
leave
push
sti
sbb
ret
dec
test
mov
adc
dec
or
mov
cli
lret
jbe
imul
sbb
xchg
mov
nop
jle
cmp
data16
adc
js
in
data16
aas
inc
hlt
test
inc
add
xor
lock
dec
pop
xor
insl
out
sub
mov
dec
jle
cwtl
mov
outsb
sbb
jl
and
sti
hlt
mov
jns
repnz
call
jecxz
fstpl
xchg
clc
xor
dec
test
std
movsl
and
loope
jb
popa
loope
cwtl
xor
inc
fistps
aad
pop
outsl
jp
testl
sarb
fnstenv
fwait
jecxz
test
push
jno
ret
jle
out
sub
cmpsb
push
inc
add
test
mov
xchg
ss
movb
scas
mov
mov
fildl
dec
pop
add
pushf
movb
add
cmpsl
adc
addr16
push
mov
cmp
jmp
cmp
pop
and
loopne
fisubs
push
and
cmp
inc
sbb
lock
push
stos
jg
insb
mov
test
fwait
stos
bswap
arpl
jno
dec
pop
jle
test
imul
loop
test
ss
aas
mov
stc
aaa
and
adc
xchg
cwtl
arpl
pop
in
xor
enter
jnp
xor
dec
mov
inc
cli
imul
pop
test
add
leave
fsub
sbb
stc
stc
in
fwait
cmp
stc
leave
idivl
ret
shll
inc
push
fisubrs
sub
cmp
aam
repnz
test
bnd
inc
test
js
adc
lahf
and
ja
fldt
dec
daa
xor
jae
sub
insl
cli
jbe
xor
pop
cmp
sub
mov
pop
pusha
mov
sub
pop
push
mov
fistl
mov
in
in
inc
mov
inc
inc
outsb
mov
or
dec
adc
pop
sti
shr
and
std
icebp
mov
je
sbb
sbb
sub
mov
std
add
aas
ja
inc
fnstenv
add
icebp
lret
pusha
cmpsl
sbb
movsl
lret
pop
scas
pop
lret
pop
jnp
popa
out
push
sbb
sbb
xchg
roll
test
enter
dec
pop
stos
pop
out
mov
or
pop
aad
add
jns
push
dec
mov
fadd
std
ret
xor
ret
adc
sbb
inc
ljmp
test
adc
fnsave
cltd
sbb
jno
sbb
lock
fs
lahf
jmp
test
stos
push
aas
push
mov
rorb
arpl
jbe
insl
fmulp
cli
ret
pop
arpl
mov
je
jns
sub
aad
int3
sub
add
stc
push
scas
mov
add
cmpl
xchg
and
popf
cwtl
inc
push
mov
pusha
aas
add
fdivrs
fcoms
pop
xchg
xchg
out
mov
jecxz
cmpsl
sub
sub
pop
sub
les
sbb
sarl
mov
dec
add
and
mov
mov
mov
mov
sub
cmp
rol
pop
sbb
in
adc
ljmp
out
jno
sbb
mov
fstpl
add
cmpsl
mov
pop
loopne
movsl
arpl
mov
mov
or
insl
sbb
sbb
sub
or
push
les
pop
cltd
clc
inc
mov
push
test
and
xchg
int
jno
cltd
mov
repnz
popa
jge
push
incb
or
jns
je
roll
bound
popa
inc
pop
xchg
into
mov
push
dec
jl
inc
push
insl
hlt
in
mov
test
or
or
inc
fnstcw
test
fbstp
sbb
dec
adc
jno
cld
jbe
jns
dec
sbb
push
sahf
sub
int3
insl
lcall
jae
fistpll
gs
in
ljmp
fs
mov
xlat
adc
outsl
pop
sbb
jmp
jle
or
lea
out
sbb
lret
jnp
in
repz
xor
cwtl
addr16
rcr
fcomps
js
test
pop
push
lds
xchg
dec
lcall
pop
outsl
arpl
and
and
sarl
dec
test
and
fbstp
popf
pushl
icebp
fisubrl
mov
inc
dec
je
jae
popf
or
xor
inc
cwtl
dec
adc
sub
push
repnz
stc
daa
push
mov
shrl
cwtl
jge
ds
jp
in
jecxz
ficoms
fcmovne
mov
inc
push
jnp
in
fstpl
jmp
shl
inc
push
xchg
fstl
insb
xlat
inc
clc
add
outsl
addr16
or
pop
jns
and
add
out
inc
sub
sahf
std
or
cmp
xor
add
mov
addr16
push
sub
das
fs
cld
xlat
or
stc
lods
in
pop
jnp
jo
ljmp
jmp
mov
adc
aam
test
bound
xchg
and
es
icebp
fiaddl
out
mov
es
xor
add
rcrb
es
ss
cmp
mov
cltd
mov
pop
jnp
mov
cmp
mov
sub
cmp
cmp
cli
bound
inc
in
push
mov
sbb
xchg
in
aam
dec
jp
cmpsb
bound
pushf
pusha
lahf
sbb
and
add
scas
mov
rorl
pop
fnstenv
out
pusha
adc
ret
out
int3
jle
mov
pop
inc
hlt
xlat
mov
dec
inc
adc
rcrl
and
add
push
jge
pop
or
test
shl
inc
call
sarl
ret
lods
mov
lock
or
leave
ss
and
and
data16
and
and
lret
test
inc
loope
mov
mov
jl
aam
or
cltd
das
adc
mov
mov
xchg
cmp
mov
cmpsl
mov
lock
push
sub
xor
and
jg
mov
mov
dec
pop
cmp
adc
mov
outsl
insl
in
nop
dec
add
shrb
inc
movsl
out
jb
cmpb
rcrl
cmp
or
mov
jno
jmp
jne
pop
mov
sbbl
jl
fildl
xchg
sub
sbb
lods
jle
jno
jge
push
call
jle
push
addb
push
dec
enter
push
dec
inc
inc
mov
int3
add
daa
pop
aam
decb
mov
xlat
jl
test
cwtl
xchg
out
sub
rol
pusha
ljmp
cwtl
jp
push
dec
in
sti
add
dec
push
adc
push
lret
sub
je
testl
or
js
testl
mov
negl
fs
js
mov
mov
test
xchg
push
lods
clc
add
dec
das
adc
fsubr
stos
mov
dec
addr16
subl
testl
mov
xchg
adc
out
adc
jg
popf
pop
cli
inc
xor
add
ret
stos
mov
mov
lods
arpl
cmp
mov
adc
popa
mov
mov
jb
repz
aas
add
add
or
ret
pop
mov
jo
in
cld
mov
mov
xchg
inc
jg
ja
pop
or
adc
cmp
xor
sbb
xchg
add
aas
jns
addr16
push
int
mov
aad
jno
inc
inc
test
pop
mov
dec
inc
mov
mov
les
mov
add
lahf
icebp
dec
std
jl
lock
inc
popf
sbb
push
xlat
push
fildl
test
jge
xor
mov
lret
jmp
loop
and
or
cs
jb
jle
xor
mov
jle
adc
scas
js
cmp
lods
pop
add
and
or
lds
or
push
loopne
mov
lods
mov
sub
or
push
push
push
push
jp
rol
cmpsl
call
dec
and
stos
add
adc
jg
rol
fdiv
pushf
xor
mov
push
adc
shrb
aas
fstp
xor
movsb
adc
add
pop
daa
imul
pop
xchg
sub
push
push
mov
gs
mov
daa
out
mov
push
int3
repnz
aas
add
in
sbb
fsts
hlt
xchg
or
stos
fisubs
mov
or
sbb
daa
lea
data16
or
pop
xchg
jb,pt
enter
lcall
cmp
movsl
pushf
xchg
mov
iret
mov
in
inc
sub
adc
scas
in
mov
or
sbb
fs
dec
pop
mov
outsl
fwait
and
adc
cmpsb
ja
fs
jl
pushl
cmc
incl
js
add
sbb
push
std
scas
fildll
sub
push
lea
cmc
imul
pop
mov
enter
lds
push
inc
mov
cld
lods
pushl
mov
sbb
ljmp
int
scas
add
mov
sub
mov
cmpsb
out
push
test
rcr
mov
ds
and
cwtl
in
mov
in
xchg
arpl
iret
pop
and
lahf
mov
ficompl
inc
add
mov
cmpsl
xor
adc
repz
insl
fcoms
mov
bound
das
arpl
push
shl
imul
arpl
pop
jge
in
pop
addr16
jp
sub
cmpsb
or
mov
and
and
shlb
mov
bound
push
movsl
inc
mulb
dec
inc
mov
fildll
andl
cmp
jle
xchg
sbb
in
jnp
xchg
test
and
shll
clc
lret
std
adc
pop
cmpsb
mov
pop
cli
sbb
jnp
loop
movsb
mov
sti
jo
xor
mov
movsb
out
ret
mov
mov
sbb
push
push
movsl
add
fidivs
scas
decb
and
int3
xchg
mov
cld
jle
dec
mov
fldt
jp
ret
call
jg
cs
jecxz
insb
stc
add
dec
test
mov
pop
stos
jbe
push
cmpsb
or
call
lahf
movsb
arpl
jle
xor
sti
sub
mov
add
adcb
sub
add
in
stc
cmpl
leave
add
test
aaa
lret
adc
add
lds
cli
xor
jg
lock
fistl
push
sti
mov
sub
jns
mov
imul
push
dec
fs
adc
shlb
sbb
dec
rorb
dec
mov
incl
cmp
sbb
or
push
int3
mov
out
ljmp
ja
jno
lea
push
xchg
jns
dec
cs
inc
cwtl
in
pop
add
adc
sbb
data16
push
mov
cld
fldt
xor
sub
enter
pop
sub
xor
sub
int3
sub
or
push
sub
or
mov
fs
pushf
pop
push
inc
mov
dec
mov
sub
sti
mov
lds
jmp
mov
inc
repnz
dec
hlt
xor
jno
sbb
push
or
adc
sti
mov
popa
cmp
cli
mov
cmp
adcl
add
popf
unpcklps
inc
insb
xchg
mov
testl
test
cmpsb
lods
stc
idiv
xchg
les
ficoml
mov
xchg
ror
mov
test
cmp
or
int
push
sbb
jae
sub
jg
mov
ret
icebp
fwait
cld
test
adc
push
addr16
push
addr16
aad
push
dec
sbb
inc
mov
lret
adc
jmp
lcall
xor
iret
ss
add
sub
mov
pushl
out
jmp
clc
shll
push
in
ja
fistpll
xchg
mov
mov
outsl
mov
cltd
cmpsb
mov
jl
rclb
push
loopne
rcl
dec
xor
and
jne
sub
mov
imul
sub
push
stc
sub
push
iret
fs
pop
in
dec
lea
push
inc
lret
int
adc
call
or
fstpl
xor
xchg
mov
rorl
in
push
cmc
xchg
inc
dec
ljmp
cmc
cmp
cmp
pop
jl
dec
aas
lea
into
and
mov
call
sub
pop
mov
add
insl
inc
jmp
lret
xor
movsl
insl
xchg
sbb
aaa
mov
or
adc
dec
xchg
bound
push
sbb
movsb
movlhps
lgs
dec
jg
push
push
mov
add
xor
push
aaa
add
sub
cmpsl
inc
inc
xor
jecxz
xchg
sub
push
daa
jo
fistl
andb
dec
pushf
sub
inc
dec
clc
mov
cltd
outsl
push
add
in
imul
rol
shll
push
mov
sub
sub
pop
ja
loop
sub
xchg
add
mov
std
dec
mov
sahf
bound
xor
or
push
stos
mov
mov
insl
cmp
cmp
xchg
cmpl
repz
and
daa
cmc
jno
pop
lock
jne
mov
clc
mov
and
pop
xchg
stos
adc
push
and
in
cld
jae
mov
aas
add
std
push
fcmovb
mov
in
lods
push
stos
ljmp
pusha
sti
or
mov
scas
xor
xchg
xor
dec
popf
fcompl
into
adc
xchg
sub
gs
jecxz
rcrb
inc
in
adc
cmp
push
dec
std
add
sarb
fidivrs
mov
or
test
push
cmp
pop
push
or
push
iret
jle
lret
jg
or
aaa
adc
loop
lcall
and
mov
sub
scas
or
fildl
jg
call
les
or
pop
push
cmp
push
jbe
into
and
mov
int3
push
adc
jne
leave
mov
sbb
fwait
cmpsb
fcompl
pop
adc
fwait
mov
pop
dec
or
repz
lods
adc
aas
jp
in
mov
test
push
push
inc
sbb
pop
push
xchg
mov
outsb
and
jbe
sbb
out
lea
lds
lock
fwait
mov
sbb
jne
ds
fisubs
lods
and
sbb
aaa
inc
test
fcom
cmp
dec
xor
push
mov
add
imul
sbb
shl
enter
jecxz
mov
imul
mov
mov
scas
imul
aas
ret
adc
jno
jge
cmp
ja
popf
insb
mov
xor
pushf
push
clc
loop
pop
push
sub
ret
cli
inc
aaa
inc
ja
push
xchg
ficoms
jmp
sub
adc
pop
je
aad
stc
jae
ret
dec
stc
shr
cmp
lea
xor
out
pop
xor
jl
mov
std
test
into
dec
decl
bound
pop
ret
insl
scas
imul
shll
fidivs
dec
jle
mov
cmp
inc
int3
mov
mov
bound
loop
popf
aad
clc
push
jb
clc
xchg
loop
push
fisttpl
mov
inc
jno
push
xor
out
adc
mov
dec
or
jmp
mov
xor
jmp
add
mov
cmp
cld
in
sbb
loop
fs
jp
push
fwait
xor
mov
scas
mov
jae
mov
pop
xchg
push
xor
mov
xor
add
pop
test
aas
in
pushf
fcoml
testb
pop
mov
repz
cmp
inc
jbe
cli
rcrb
sbb
mov
inc
frstor
gs
and
cmp
mov
mov
stc
push
lds
xchg
sub
int3
xor
out
xor
scas
adc
jmp
mov
jl
inc
sarl
xor
jg
sbb
pop
xor
lcall
lret
push
mov
loopne
loop
fdivrl
push
jecxz
dec
inc
dec
aam
mov
mov
or
and
pop
pop
lock
or
popa
mov
mov
sub
push
repnz
adcl
xor
popa
xor
cmp
loopne
mov
xchg
xchg
pop
mov
ds
jp
lret
and
sbb
loopne
shll
sub
xor
fsts
insl
aam
inc
jecxz
jmp
aaa
lock
add
pop
popf
iret
xchg
pop
add
sbb
arpl
and
bound
mov
out
in
mov
or
pop
sbb
cmc
jb
dec
out
mov
mov
enter
push
pop
jns
mov
dec
cld
adc
xor
fwait
and
push
jecxz
adc
faddp
out
addl
jne
or
dec
and
into
cld
and
aam
dec
adc
jbe
or
xchg
mov
sub
xchg
sub
in
mov
icebp
sub
das
ss
ret
mov
addr16
pop
rcrb
fs
cmc
jns
mov
dec
inc
andb
sti
mov
pop
adcl
jge
mov
sbb
js
pushf
insb
mov
xor
sahf
pop
mov
inc
cwtl
pop
ret
add
popf
fstp
inc
cmp
adc
imul
inc
daa
mov
negb
testb
imul
lock
sahf
clc
es
test
arpl
imul
fadds
push
gs
decb
sbb
jmp
adcb
adc
adc
shlb
mov
sub
int3
pop
dec
xchg
jmp
test
cmp
dec
scas
sub
repnz
leave
dec
jecxz
adc
fstpl
lcall
mov
add
add
jle
stos
lock
add
ret
ljmp
xor
les
fs
mov
int3
sbb
loope
jb
jg
sbb
inc
and
jno
push
push
std
push
imul
jns
fs
pop
push
xchg
sbb
imul
outsb
testl
sbb
imul
push
enter
ds
inc
arpl
std
lret
call
inc
xor
mull
dec
arpl
inc
push
bound
sar
mov
mov
inc
ljmp
add
inc
es
aaa
decl
loopne
rorl
subl
ja
div
test
pop
push
sbbl
jns
fadds
scas
xchg
pop
inc
add
mov
xor
pop
sti
ret
pop
push
pop
ljmp
popa
into
mov
stc
lods
cli
loopne
fsubrp
and
cltd
and
lret
dec
fsubr
ror
jbe
add
mov
mov
sbb
xor
sub
dec
push
adc
mov
add
imulb
mov
or
mov
rcr
adc
sbb
xchg
and
push
xor
pop
jae
cli
popf
dec
out
lcall
pop
xor
cli
popf
insb
cli
push
ror
les
es
repz
ret
cmp
inc
mov
pop
add
ficomps
mov
insb
scas
xor
jns
jg
js
jp
xchg
in
dec
or
cld
cmp
lea
mov
sbb
push
notb
daa
subl
jmp
sub
bound
sub
aad
dec
jb
roll
sbb
jecxz
mov
inc
shlb
cmp
jnp
pusha
push
mov
xchg
jmp
cli
xchg
xor
pusha
xchg
rcll
sahf
or
jg
negb
lret
dec
mov
in
rcll
mov
test
mov
sbb
mov
insl
cmpsl
dec
and
gs
or
scas
adc
leave
int3
pop
mov
or
inc
cmpl
mov
test
xchg
xchg
aam
xor
dec
dec
jns
imul
rcrl
stc
lret
int3
jmp
pusha
sbb
mov
test
pop
xor
into
inc
jl
push
sub
xor
jb
inc
mov
aam
imul
xor
jg
fisttps
jg
psrad
test
dec
mov
loope
xor
ficoms
fdivrs
fildll
jne
setl
mov
pop
add
xor
rcrl
dec
pop
mov
or
out
or
arpl
popl
xor
les
stos
lods
and
or
std
hlt
dec
into
outsl
cli
stos
and
cltd
aad
jp
mov
fidivs
xor
inc
loop
push
icebp
xchg
or
ficoml
cmp
cli
xor
call
adc
stos
aam
dec
cmpsl
push
fistps
imul
out
lock
insb
lahf
xchg
rcl
jg
incl
xchg
sbb
cmpsb
loop
fadds
pop
fwait
jbe
aas
jnp
imul
insb
jnp
mov
mov
cmpb
int
mov
clc
cmpsl
and
ret
repnz
cmpsl
and
pusha
xor
mov
rcrl
outsb
movsl
fcmovb
sub
jmp
mov
cmp
xor
out
push
cmp
dec
popa
aam
push
iret
mov
mov
jmp
add
add
jb
pop
rorb
mov
dec
sbb
in
std
xorb
xchg
cmc
xchg
orb
aad
xchg
inc
adc
scas
pop
add
outsb
test
mov
outsb
pop
cmp
add
insl
pop
popf
inc
imul
repz
icebp
sub
mov
pop
add
rcl
adc
inc
bound
and
push
xchg
adc
push
repnz
lods
mov
or
imul
sub
inc
push
sub
mov
mov
ja
int
jmp
lock
dec
ret
sub
cmp
xlat
xlat
out
mov
jle
cmp
repz
xchg
mov
popa
popa
rcrb
xorl
inc
lock
ja
push
pop
jns
inc
cmc
mov
jnp
sub
or
xchg
or
push
enter
loope
divl
add
push
call
setnp
mov
push
imul
in
push
sbb
sbb
and
loopne
lods
push
out
mov
mov
dec
add
repnz
hlt
scas
outsb
ljmp
js
fsubrl
add
popa
adc
adc
ja
sub
mov
push
mov
lea
dec
sahf
js
push
aad
inc
movsl
inc
lcall
fcomps
pop
enter
dec
andl
fbld
lods
pop
sbb
sbb
mov
pop
popa
or
xchg
ret
xchg
adc
sbb
mov
xchg
push
test
out
gs
ficoms
jg,pt
jle
xor
fwait
inc
inc
test
dec
sub
inc
inc
stos
dec
cmp
sbb
lock
mov
or
lret
or
stos
adc
dec
dec
adc
testl
jbe
std
push
mov
jmp
push
xor
xchg
hlt
popf
cmc
xchg
cmp
sbb
incb
shll
add
test
fdivr
loopne
xlat
jp
and
insl
sbb
cs
outsl
push
in
dec
jmp
lcall
jno
mov
add
insb
jb
int
clc
mov
and
bound
pop
xchg
addb
imul
imul
in
mov
jle
movsl
push
ja
in
out
xchg
out
pop
in
adc
xor
mov
fstpt
sub
mov
ret
ret
out
hlt
mov
push
into
push
mov
mov
stos
clc
lods
scas
sbb
xchg
push
push
pop
std
loop
adc
sbb
enter
sbbb
movsb
mov
dec
scas
test
cmp
dec
push
loopne
fwait
outsb
fdivs
dec
mov
stos
jae
in
add
in
add
adc
pop
out
and
outsl
push
addr16
pop
stos
add
dec
ss
sub
dec
cmp
pop
cmp
aaa
add
cwtl
std
xchg
cmpb
adc
popf
inc
jmp
inc
add
fs
les
subb
sarl
shr
push
ret
sti
lds
cmp
aas
mov
loop
mov
add
cmp
pop
mov
push
xchg
dec
add
dec
ret
xor
jecxz
push
xchg
and
cmpsl
xor
loop
mov
cmpsl
lock
test
aam
jno
int
pop
fistps
mov
dec
sbb
pop
mov
mov
adc
leave
enter
popf
mov
cmpsb
cmp
inc
les
fs
test
cmp
je
jnp
sahf
dec
sub
pop
in
inc
push
fsubl
jae
mov
and
pop
imul
movsl
mov
xchg
or
push
sbb
divb
mov
mov
mov
mov
ret
xor
inc
jbe
xchg
fcomps
popf
pop
pop
cwtl
cld
and
jno
cmpsb
dec
add
ret
adcb
jae
or
mov
fidivrl
test
inc
aad
fdivrl
jbe
mov
loop
xor
adc
lock
jl,pn
cmp
cmp
mov
stos
pop
mov
dec
movsl
mov
lret
mov
push
insb
mov
outsl
loopne
test
lds
lds
or
insb
sbbl
adc
inc
mov
rep
jno
dec
outsb
fisubs
pop
in
es
aas
stc
sbb
addr16
aas
shrb
aaa
in
xchg
adc
stos
cld
mov
add
jns
pop
mov
aad
aas
xor
dec
jns
mov
scas
outsl
mov
ds
and
jae
adc
mov
test
cmp
lahf
mov
mov
xor
and
inc
filds
mov
mov
jno
and
inc
sbbl
or
dec
pop
lods
mov
scas
dec
outsb
xchg
jns
jl
test
cwtd
ljmp
inc
daa
ret
sub
mul
outsb
jb,pt
aam
inc
repz
shll
ret
push
push
mov
outsl
push
ja
into
lods
sub
mov
or
inc
call
mov
cmp
nop
aaa
push
pop
mov
or
inc
xlat
fildl
mov
lods
mov
jmp
negl
push
dec
push
jmp
das
push
xchg
test
sbb
fsubrs
jmp
frstor
aad
adc
int3
jno
inc
xchg
insb
cld
jg
aaa
pushf
xlat
xor
sbb
sbb
mov
add
outsb
lods
sbb
sbb
pop
push
fisttpll
into
push
mov
sbb
jg
ret
fstp
mov
outsl
frstor
mov
inc
out
push
lods
dec
pusha
stos
sub
dec
stos
mov
mov
mov
iret
lahf
xchg
push
xchg
shrl
nop
inc
ljmp
andl
decl
shl
andb
inc
pop
jne
sub
sub
lret
dec
cmp
push
xor
add
in
out
adc
je
ljmp
bound
popa
jp
and
push
add
sbb
int
in
add
mov
loop
cwtl
ljmp
mov
bound
outsl
push
lret
aaa
fcmovb
or
xchg
jno
dec
pop
pop
lds
mov
test
cmp
xchg
js
in
inc
aas
xchg
xchg
jl
push
inc
mov
iret
idivb
mov
adc
pop
dec
xchg
sub
cmp
sti
ss
inc
or
adc
loop
dec
daa
cmp
mov
push
test
inc
mov
ret
rcll
push
push
mov
iret
movsb
test
and
mov
test
es
jno
cwtl
pop
pop
lds
ss
and
xor
scas
cmp
pop
cli
push
pop
cmpsl
mov
mov
loop
mov
insl
jno
mov
and
int3
cli
test
stc
or
inc
mov
rcr
jg
mov
xlat
stos
stos
ljmp
mov
divb
sbb
jmp
subl
je
mov
lcall
sub
cmpsb
adc
clc
xor
adc
scas
mov
lahf
adc
sbb
inc
fistps
lcall
repnz
cli
push
loopne
shll
jge
mov
cmp
mov
xor
addr16
xchg
inc
inc
popf
in
add
add
outsb
loop
das
pop
pusha
leave
inc
std
aas
push
out
hlt
xchg
testl
add
lret
jle
dec
xchg
xor
xchg
sbb
xor
mov
jno
and
daa
cld
lret
subl
aad
mov
ror
or
push
pop
xchg
cmpl
int3
push
mov
pushf
ret
jno
in
and
fwait
xchg
inc
lods
icebp
and
push
mov
push
and
sub
out
lret
sub
test
nop
mov
lret
inc
xchg
jns
add
es
fbld
sbb
popf
mov
stos
ljmp
cmp
clc
int3
icebp
push
or
cmp
mov
cmp
movsb
orb
adc
lret
aas
dec
sahf
cmpsl
xlat
fldcw
stos
into
pop
iret
pop
adc
jb
sub
popf
jmp
pop
fisubl
pop
popf
xchg
fiadds
push
test
xchg
jle
ret
stc
ss
imul
mov
sarl
xchg
stos
repz
int3
mov
mov
mov
and
sub
jle
les
std
xchg
inc
out
mov
jae
jns
fs
cmp
or
inc
es
pop
loope
sub
xchg
adc
lret
inc
xchg
dec
xchg
mov
push
pusha
lret
mov
fisubrl
jge
cmp
cld
sahf
test
xor
andl
enter
add
dec
or
mov
sbb
lahf
lea
ja
daa
js
emms
movsb
inc
inc
push
mov
pusha
int
sti
mov
push
inc
dec
paddusw
pop
xchg
sbb
dec
mov
fstpt
pusha
cmp
cmp
test
fnstcw
cmp
pusha
cmp
mov
mov
jno
call
mov
shll
pop
fwait
shrb
aad
aaa
daa
push
movsb
mov
cmp
sbb
adc
or
cmpsb
dec
mov
sbb
mov
out
and
test
push
xor
or
popf
loope
jnp
cwtl
in
jo
scas
pop
xchg
jl
call
or
cmp
icebp
fistpl
insl
fs
xchg
add
cmpsl
dec
mov
inc
je
jmp
sub
xor
stos
push
popf
xor
jg
loope
jecxz
inc
push
and
mov
mov
popf
iret
cltd
xchg
mov
data16
jnp
jg
xchg
pusha
mov
jmp
int3
aas
push
push
jl
imulb
shrb
and
popa
jmp
mov
push
into
fsubrs
dec
push
and
fcmovnbe
sbb
roll
sti
pop
loopne
test
sahf
ljmp
cmp
mov
sub
jbe
scas
imul
idiv
push
push
inc
xor
rorb
cli
cli
in
cmp
push
out
call
and
imul
mov
xor
sbb
divb
lahf
inc
adc
add
sbb
es
icebp
icebp
mov
mov
mov
jecxz
lret
loopne
xchg
aaa
cli
xchg
sub
stos
or
sub
mov
xchg
stos
jle
jmp
mov
or
sti
mov
aaa
sub
scas
xchg
adc
and
pop
or
addr16
popw
inc
adc
and
aam
rcll
loop
cmp
fs
idivb
cmc
xchg
push
mov
andl
mov
ss
jp
std
pusha
push
jnp
mov
cmp
mov
adc
popf
adc
xchg
sarl
fists
pop
cmpsl
add
add
push
pop
mov
pop
call
ret
incl
stos
mov
mov
clc
mov
pusha
xchg
adc
dec
sbb
stos
shll
mov
test
or
mov
jge
sbb
inc
enter
fdivrl
push
jp
mov
ljmp
out
int
and
decl
mov
xor
mov
mov
push
jge
mov
ret
pop
in
or
das
fstpt
pop
andl
xchg
adc
in
mov
dec
sub
mov
mov
stos
cltd
jbe
gs
ret
out
cmpl
popl
jecxz
in
andl
or
mov
sub
lds
mov
repz
adc
mov
fs
push
or
and
sub
lods
sbb
mov
sub
inc
xchg
je
mov
lds
mov
xchg
add
loop
cmc
add
adc
add
out
and
cmc
js
push
ds
or
shl
sub
inc
or
adc
pop
shrd
in
out
aas
jge
lds
dec
dec
push
insl
push
cmp
stos
ss
std
or
jne
cmp
pop
add
push
mov
sbb
and
xchg
aad
and
mov
mov
inc
jae
je
push
jg
sbb
paddb
xchg
mov
pop
cmovae
cli
sbb
adc
pop
pop
cmpxchg
dec
insb
insl
cmp
out
xor
adc
outsl
in
scas
dec
enter
es
jae
xchg
frstpm(287
sbb
jle
jmp
add
mov
fs
add
or
add
pop
out
outsb
sbb
jle
jmp
jmp
push
test
mov
cmpsb
inc
shlb
cmp
xlat
jae
pusha
in
pushl
jne
push
inc
pop
hlt
add
xchg
std
dec
shlb
xchg
mov
xchg
movsl
adc
sbb
outsl
mov
out
pop
jns
in
cld
inc
jnp
fs
dec
pop
fiaddl
mov
adc
je
call
push
mov
fwait
outsl
test
xor
rorb
leave
fnstcw
test
mov
lock
test
shrb
fldenv
and
xor
xchg
mov
cltd
insb
mov
adcb
movsl
pop
int3
shl
int3
mov
mov
jae
std
out
ficomps
xchg
cmp
inc
jmp
cmp
int
push
sub
test
sbb
jo
ds
sti
lea
lods
mov
xchg
int
rorb
ds
outsl
inc
mov
nop
or
jno
stc
add
jg
mov
sub
jne
call
stc
scas
sub
fs
mov
ja
sbb
and
out
adc
in
test
pop
cmp
xlat
in
jge
xchg
xlat
movb
aaa
popf
enter
fisubl
out
aam
or
fisttps
adc
stos
add
sbb
lret
sbb
shl
fcoml
inc
push
stos
fisubs
dec
test
test
in
cld
push
sub
mov
xchg
jle
pop
xchg
or
xchg
and
cs
inc
lret
xchg
int3
fcomi
pop
aam
and
test
insb
std
fists
int
rcll
je
adc
xor
mov
jne
inc
scas
loop
mov
int
jmp
test
imul
ds
jae
mov
push
gs
mov
fistl
fstp
fdivl
cmp
jp
mov
add
sbb
gs
cmp
cmp
mov
inc
add
lods
mov
mov
cmp
jecxz
dec
mov
dec
popa
iret
rolb
jo
fs
iret
sub
jle
inc
push
xchg
adc
or
cmc
jnp
into
cld
jecxz
data16
sbb
sub
mov
xchg
fbstp
jae
cmp
out
push
stc
cwtl
cmp
cmp
and
push
mov
push
pop
and
xor
sub
movl
xor
push
daa
jne
out
icebp
and
mov
push
jmp
in
add
mov
or
loop
push
mov
push
xchg
add
jo
nop
mov
sbb
cltd
std
cwtl
popa
into
add
div
mov
cmp
pop
mov
cltd
sbb
repz
scas
clc
lock
push
iret
nop
les
pushf
mov
push
outsl
cld
push
ss
adc
push
jns
movsb
out
inc
repz
movsl
arpl
pushf
pop
mov
and
jno
es
inc
pushf
lock
sbb
in
stos
out
xchg
loope
imul
stos
xlat
out
pusha
adc
ret
dec
out
icebp
shrb
jp
lock
adc
sahf
push
loopne
sbbl
cmp
mov
dec
pushf
das
loope
lods
xchg
test
nop
cli
add
sub
jp
push
repz
aaa
sahf
div
pop
push
xchg
pop
imul
dec
lds
call
pop
or
xchg
rcr
add
add
neg
push
xor
subb
call
insb
jno
or
repz
mov
mov
nop
push
mov
push
xlat
mov
jge
inc
mov
jns
addr16
push
pop
into
cmp
ret
adc
ja
cmp
cmp
out
push
mov
cli
pop
jo
push
jg
push
xor
cwtl
cmp
loope
pop
mov
xor
add
int
push
cmp
xlat
pop
stos
xchg
dec
xchg
hlt
cmpsb
ljmp
mov
jge
test
insl
fnstsw
push
mov
rolb
mov
or
push
mov
xor
xchg
push
push
and
stc
jbe
cmp
imul
or
jbe
in
fstpl
test
mov
mov
cmp
xor
les
out
mov
jge
in
ficoms
xor
test
xchg
jbe
dec
cli
sbb
adc
xor
xlat
daa
hlt
fisttps
pop
push
ljmp
enter
fstl
gs
add
and
filds
ficoms
out
jg
push
rcl
or
rcr
in
jp
clts
mov
inc
cmp
push
xchg
stos
mov
push
sbb
in
fstpt
icebp
cwtl
cwtl
dec
sbb
fldenv
mov
stos
popf
xlat
loop
lret
outsb
fistl
xchg
push
clc
iret
lret
dec
sbb
aaa
in
ss
repnz
inc
pop
push
sbb
push
jecxz
ret
daa
sbb
or
sbbl
mov
and
es
mov
call
mov
es
sbb
in
cmp
int
mov
mov
xlat
repnz
in
cmpl
jmp
xchg
or
sub
mov
pop
in
popa
out
rcl
in
mov
sbb
pop
mov
sub
dec
pop
sbb
lahf
pop
pop
jg
lcall
xor
push
or
push
mov
ss
bound
negb
into
mov
mov
pop
mov
and
push
and
movsl
sbb
xchg
fdivl
add
mov
ficoms
jecxz
test
or
jge
dec
sub
ja
test
cmp
test
lret
pop
mov
dec
fsubl
sub
sbb
add
xlat
mov
mov
or
sti
loopne
sbb
enter
cwtl
inc
aad
ror
push
xchg
andb
and
inc
mov
frndint
scas
aad
ljmp
jg
fwait
shl
sub
in
insb
aas
ja
outsl
and
sub
pushf
stos
pushf
arpl
xchg
pop
inc
fsubp
test
out
fucomip
dec
or
addl
inc
sbb
push
bound
out
sahf
dec
lods
clc
inc
inc
ja
jg,pt
hlt
out
lock
fnsave
xor
mov
pop
jae
stos
addb
xchg
and
mov
add
xchg
test
mov
jno
outsb
dec
or
lret
pop
mov
mov
inc
cli
cwtl
push
imull
aam
dec
mov
addb
cmp
jno
test
bnd
fimull
mov
and
pop
mov
push
push
mov
insl
xlat
inc
xchg
jecxz
adc
je
int3
push
xor
mov
cmc
push
sbb
push
adc
xor
shlb
ret
popa
inc
sbb
xchg
movsb
ret
xor
mov
sbb
imull
lods
xor
inc
pop
andl
xor
and
or
movl
in
or
and
or
sahf
int
dec
mov
pop
or
jp
lret
in
leave
les
fsubrl
inc
mov
mov
mov
pop
add
cs
clc
lahf
and
call
add
add
int3
dec
std
test
fwait
outsb
jge
jge
inc
sub
and
mov
lods
and
es
xchg
mov
jbe
xchg
mov
in
pop
loopne
add
fisttps
daa
cmp
fiaddl
jnp
int3
out
jge
mov
mov
mov
popf
lea
mov
mov
fsubrp
cmp
rclb
xchg
lods
dec
dec
and
xchg
in
sub
out
mov
jae
xorb
call
in
push
test
loopne
xlat
mov
push
push
pop
into
shrl
rorl
dec
pop
out
insl
xor
mov
mov
mov
lea
ret
fsubs
push
xor
or
fdivrl
push
into
push
imul
pop
imull
les
xchg
fdivp
lret
mov
xchg
fdivr
add
xchg
cmp
add
cmpsb
or
inc
daa
xchg
add
aaa
sbb
sbb
adc
push
dec
adc
in
push
jns
js
mov
dec
xchg
xchg
push
mov
nop
mov
mov
xlat
std
out
outsb
cmp
and
cmp
mov
xlat
adc
cltd
ds
repnz
push
fbld
test
mov
ss
cmp
adc
rorl
imul
xor
cmpsb
adc
out
or
sti
sub
xor
dec
mov
stos
imul
cld
inc
sbb
test
rcr
fisttpl
push
cmp
dec
inc
nop
mov
dec
mov
lods
mov
adc
je
loopne
cltd
xchg
aas
test
fcom
sbb
pop
adc
stos
and
hlt
xor
jne
pop
imul
mov
push
jle
lock
cmp
add
bound
jbe,pt
hlt
in
pop
sbb
dec
xchg
movsb
cld
fdivp
adc
add
cs
and
sbb
mov
sti
fadds
lds
fwait
inc
mov
dec
sbb
sbb
mov
sarb
rorb
mov
imul
loope
sub
cmpsl
stos
jg
rep
mov
xchg
popf
pop
gs
sar
cmp
cmp
xchg
or
inc
lcall
mov
mov
dec
jb
int3
xchg
cmp
ljmp
mov
jmp
inc
mov
push
xor
fwait
xchg
cmp
mov
pop
mov
lahf
adcl
testl
mov
or
mov
pop
push
jge
mov
dec
cmc
mov
add
movsb
popf
popa
dec
out
aaa
inc
jns
in
ret
popa
ds
jno
jp
push
mov
ds
jno
push
cmpb
pop
mov
and
lahf
mov
mov
out
pop
fnstenv
mov
enter
jmp
pop
pushf
sbb
sti
stc
xlat
mov
aam
inc
sub
js
test
orl
in
imul
dec
mov
out
cmp
push
sahf
pop
test
push
fnsave
ss
aad
stos
dec
lods
inc
jbe
lock
test
mov
adc
arpl
dec
dec
pop
rorl
dec
pop
je
add
imul
nop
push
lds
dec
mov
out
mov
mov
add
mov
mov
dec
repz
les
cmp
inc
and
movsb
nop
mov
xchg
lods
sahf
pop
lods
lret
push
stos
outsl
outsl
leave
mov
xchg
cltd
stos
and
pop
jae
cmp
xchg
push
dec
adc
cmp
jp
das
jecxz
mov
cmp
jle
insb
adc
in
adc
xchg
ret
test
imul
rcl
test
mov
and
jl
pop
mov
sbb
call
bnd
jle
inc
jecxz
sbb
test
mov
lock
and
scas
mov
xor
xchg
push
cs
xor
in
pop
mov
inc
mov
ja
and
mov
pop
and
mov
cwtl
decl
aaa
popa
out
push
and
cmp
xchg
jmp
xor
fistpl
iret
scas
mov
repz
or
sbb
lods
jmp
lahf
mov
pop
cmp
mov
std
imul
or
and
sbb
cmpsl
cmc
and
ret
lcall
aad
inc
adc
fimull
jmp
lret
push
inc
inc
inc
adc
out
loope
xchg
mov
clc
shld
or
push
dec
xchg
ss
cmc
int
jns
nop
xor
js
cltd
pop
adc
andl
xchg
sub
stos
mov
cmp
cltd
jecxz
jno
mov
cmpsl
int3
pop
lods
mov
mov
jmp
jno
sbb
jp
jne
and
sahf
outsb
loope
repnz
pop
test
sbb
sbb
dec
mov
ror
iret
and
mov
xchg
add
push
inc
cmp
sbb
fsts
push
imul
jbe
sbb
arpl
or
mov
stos
sbb
leave
mov
les
fisttpll
add
pop
addr16
mov
add
push
shll
mov
and
insb
jecxz
rolb
cmp
cmpsb
pop
xor
xchg
gs
out
sub
push
in
jg
and
inc
mov
jp
or
push
push
mov
out
sbb
jle
enter
pop
jg,pt
push
add
mov
aad
cli
cmpsl
add
push
cmp
mov
mov
insb
inc
lods
leave
pusha
add
xchg
pop
xchg
adcl
daa
and
test
lods
xchg
aad
jmp
icebp
in
jno
dec
repz
dec
jmp
cmpsl
cli
push
mov
jl
lret
cwtl
dec
in
mov
add
cwtl
jg
xor
ret
stos
mov
aad
aaa
mov
mov
sub
fcomps
mov
mov
cli
dec
mov
push
aas
or
jo
fwait
dec
sub
aas
enter
sbb
and
cmp
arpl
mov
lret
mov
cmp
mov
insl
stos
mov
sti
sahf
mov
test
push
mov
sbb
fst
cmp
xor
out
adc
std
sti
cmp
push
jl
add
mov
inc
scas
adc
in
repz
mov
mov
push
test
loope
push
xlat
xchg
lahf
inc
dec
pop
outsl
lahf
mov
inc
sub
and
push
jl
xchg
xor
sub
lods
adc
xchg
and
out
jge
gs
aaa
lds
mov
daa
xchg
call
and
nop
lret
cmp
filds
scas
mov
xor
xchg
mov
out
lahf
xor
jle
xchg
xor
xor
sbb
add
cmp
add
jl
testl
sbb
dec
mov
or
out
in
lahf
add
mov
xchg
push
sarb
or
das
push
fisubl
dec
or
shll
pop
sahf
out
adc
push
inc
xor
shrb
dec
xchg
adc
xlat
iret
ss
les
pop
push
imul
pop
and
out
rcl
mov
call
sbbb
xor
sbbb
ja
dec
jnp
pop
add
test
out
fwait
in
in
inc
ljmp
aad
loop
mov
mov
mov
jne
inc
ljmp
sysexit
ljmp
push
loope
sbb
out
ss
andb
push
add
cmp
es
ja
cltd
push
shll
fsubl
addr16
mov
lds
in
stc
xchg
pop
xchg
mov
nop
pop
xlat
jnp
dec
or
inc
add
mov
aaa
jnp
mov
adc
std
cmp
shll
pop
push
push
sbb
push
xchg
fimuls
mov
push
sub
adc
leave
sub
push
mov
jle
pop
jne
cmp
lock
pop
insl
adc
mov
loope
sub
and
dec
inc
ror
sbb
aad
shrl
xchg
add
pop
int
mov
out
push
fldcw
jge
pop
adc
mov
shlb
dec
inc
jp
data16
daa
jl
dec
mov
clc
sub
inc
andb
movsl
inc
ja
add
inc
or
scas
faddl
bound
dec
lea
fmul
hlt
mov
je
xchg
cltd
pop
cmc
jecxz
fwait
jbe
cmp
ljmp
cmp
push
je
mov
fsubl
and
rcl
fldenv
fwait
sti
ja
movl
aaa
aas
xchg
jbe
mov
adc
jbe
dec
push
and
xor
ret
xchg
imul
jno
push
ss
fimull
ja
in
jmp
fstpl
adc
nop
popf
mov
jecxz
mov
aas
and
mov
dec
stc
xchg
outsb
or
sbb
sub
dec
mov
cwtl
std
fistps
imul
dec
in
inc
in
pop
mov
aaa
ret
jnp
add
fsubs
std
insl
sbb
push
push
cltd
aaa
dec
popa
pop
jmp
addr16
popf
mov
mov
jmp
mov
adc
in
iret
loop
fiadds
fsubs
pop
jle
mov
scas
push
fcoms
and
push
cmp
aad
or
mov
notl
stos
inc
push
test
out
mov
jg
call
and
stos
cs
adc
adc
roll
rorl
les
aam
and
jns
push
or
xchg
test
mov
repz
es
lods
nop
lret
movsl
jno
stos
pop
xor
ret
cltd
pop
std
add
push
fwait
das
jmp
mov
xchg
test
push
mov
cmpsb
lcall
loop
push
test
cld
fs
jo
imul
je
and
clc
adc
xor
add
mov
ret
sub
push
push
mov
lea
mov
ret
jl
sbb
out
mov
cmp
mov
jnp
jp
cmpsl
shl
push
je
dec
ror
leave
xchg
sub
insl
pop
das
subb
sub
inc
jb
sub
mov
arpl
mov
mov
adc
mov
sbb
xor
mov
mov
push
std
test
xor
cmp
subb
mov
or
xchg
jg
adc
adc
cld
in
bnd
into
dec
out
pmullw
mov
lret
stos
mov
cs
shlb
pop
mov
push
adc
inc
push
ja
sbb
jecxz
shl
or
cmp
int3
pop
lods
inc
int
fcoms
inc
pop
leave
sarb
insl
cmc
cmp
sub
and
lds
cmpsl
lret
mov
jbe
push
inc
or
push
dec
xor
into
xchg
add
mov
pop
sbb
test
aam
jnp
fwait
xchg
es
jno
jmp
sub
mov
imul
movsb
ficomps
mov
in
sbb
lock
ja
insl
iret
out
movsb
xlat
je
aam
clc
push
mov
xlat
and
jecxz
shlb
push
adc
mov
fsubrs
jae
pushf
add
mov
es
outsl
test
in
push
push
jp
adc
lock
in
and
mov
scas
addr16
mov
or
jle
lock
inc
mov
cmpsl
mov
jge
fmull
xor
insl
dec
test
mov
or
mov
sbb
mov
sbb
jae
insb
jmp
add
fld
shrd
daa
xchg
mull
push
loop
pop
fsubrp
in
aaa
xchg
pop
cmp
fisubrl
movsb
sub
adc
or
cmp
inc
int
minps
jmp
clc
sub
cltd
xchg
mov
sub
adc
fmull
fldl
mov
lods
cmp
inc
jg
imul
dec
cmp
and
jp
orl
dec
push
cmp
movsb
mov
and
mov
lcall
test
dec
daa
xchg
xchg
stos
stos
push
push
pop
movsl
xor
rcl
sbb
repnz
push
aas
pop
jecxz
lock
popl
pushf
lods
out
push
test
and
cltd
xor
pop
jno
aaa
bound
add
ret
inc
adc
aad
test
pop
and
push
mov
and
loop
jmp
gs
fidivs
or
xor
pop
fsubl
ljmp
sub
jp
mov
push
or
movsl
sbb
ret
hlt
inc
out
outsl
inc
sbb
outsl
lods
mov
test
add
stos
stc
mov
inc
leave
push
mov
push
lahf
sahf
fdivrs
out
fcoml
jge
loope
ret
mov
add
jp
lret
dec
mov
jp
cs
sti
js
aad
enter
nop
and
mov
insl
out
push
movsl
lods
popf
fs
adc
or
imul
decl
cmc
cld
jmp
dec
cltd
cmp
aad
inc
mov
testl
add
sub
scas
inc
bound
insl
sub
call
xor
mov
xlat
ja
outsb
mov
adc
dec
sub
sbb
pop
and
adc
or
mov
mov
aad
push
cmc
sub
xor
outsb
adc
or
aas
xchg
lahf
sub
ret
aas
jbe
jnp
idiv
adc
popl
cltd
add
pop
xor
mov
loope
int
jae
and
jae
pop
les
call
inc
mov
inc
xor
scas
mov
es
sbb
repnz
dec
call
cs
mov
stos
cmpsb
orl
jge
jmp
and
jmp
push
ss
leave
popa
xchg
shll
pop
cmp
sub
push
int
sub
lods
xchg
inc
xlat
xchg
fcmovu
mov
sti
cmp
sti
sarb
das
movsb
mov
or
or
xchg
xor
or
int
bound
cs
jmp
add
inc
xchg
sti
arpl
pop
aaa
and
aad
notl
incb
pop
pop
es
cmp
inc
lock
jge
push
inc
clc
rcrb
dec
push
ret
ljmp
mov
cmp
sarb
push
shrb
add
inc
jp
dec
sub
sahf
mov
cltd
mov
adc
jo
mov
test
xchg
push
or
inc
push
fidivl
fcompl
cmp
ljmp
idivl
outsl
mov
repnz
arpl
dec
ss
pop
dec
leave
pushl
ljmp
repz
sbb
mov
mov
jmp
or
and
xlat
sub
in
add
iret
sub
jo
repnz
or
adc
ret
in
int
sub
clc
flds
or
and
sti
push
out
out
addl
lret
shlb
jno
clc
outsb
insl
mov
cmp
ret
sub
int3
lods
in
add
stos
iret
aaa
jle
popf
sub
pop
lods
aas
arpl
push
adc
jno
cs
fdivr
cmp
xorl
push
in
clc
mov
inc
push
mov
inc
and
add
add
mov
test
push
jbe
cli
cmpsb
imul
cmc
push
sub
das
sub
push
loopne
mov
fimuls
lock
or
fbstp
xchg
ss
adc
lds
dec
lret
fnstcw
and
sbb
jl
adc
fdivl
ret
dec
dec
or
add
jp
nop
mov
das
test
test
mov
jmp
andb
test
sbb
test
ret
fdivs
stos
jmp
cli
push
sbb
adcl
pop
lahf
ds
divb
rclb
or
pop
out
cmp
xchg
outsb
sti
sti
push
sbb
adc
xchg
push
xor
int
push
incb
xchg
cmp
lods
pop
es
mov
fsubs
ljmp
out
adc
push
or
adc
inc
stos
mov
mov
mov
sub
add
sahf
mov
jb
int
lcall
in
iret
movsl
ja
mov
cli
adc
pop
loope
jecxz
aam
std
daa
xlat
ret
repz
testb
fidivrs
fadd
jo
lcall
out
js
add
add
jge
xor
addr16
subl
pusha
xchg
xchg
xchg
shl
fisttpll
int3
inc
dec
mov
lock
loope
xor
in
popl
cld
sub
inc
inc
mov
mov
add
push
test
adc
rolb
push
push
xor
rolw
fisttpll
test
xor
cwtl
shrl
outsb
add
push
mov
mov
fwait
je
cmpsb
sub
mov
scas
scas
and
and
cwtl
cwtl
aad
icebp
xchg
adc
inc
shl
aaa
fdivl
xor
xlat
push
ja
cmp
mov
xchg
mov
mov
jo
mov
stos
mov
sbb
mov
mov
mov
inc
inc
outsl
sbb
mov
test
outsl
sbb
enter
cmp
push
mov
cwtl
scas
push
mov
or
jno
xchg
jno
in
stc
dec
pop
movsl
mov
push
pop
xor
popf
mov
cs
jle
iret
movsl
movsb
fldcw
aam
sbb
fdivs
pop
jmp
mov
cwtl
mov
repz
pusha
int3
push
push
rcll
stc
orb
pop
adc
enter
lret
add
cltd
inc
es
and
add
jo
movsl
jp
or
pop
cld
and
pusha
test
hlt
push
mov
fistpll
xor
shll
xchg
div
push
push
mov
or
hlt
out
dec
jno
addr16
mov
push
lret
cmp
cltd
and
adc
xor
arpl
jge
addl
mov
lds
push
rcrb
inc
add
mov
test
aas
movsl
jmp
shlb
in
pop
sbb
aaa
rcll
or
or
inc
mov
lret
das
mov
lret
jmp
jae
pop
mov
fstps
xchg
call
xchg
lods
mov
mov
je
pop
aad
cmp
dec
out
dec
jb
leave
mov
dec
imulb
adc
push
fisttpll
mov
xor
icebp
add
mov
leave
and
hlt
mov
xchg
loope
dec
int3
rorb
test
test
jge
fidivs
pushl
in
outsb
cltd
sbb
xchg
montmul
cmpsb
test
jo
mov
push
inc
dec
inc
and
and
or
in
int
pop
add
pop
fisttps
xchg
push
pop
stos
xchg
les
movsl
shll
jne
cwtl
pop
pop
test
or
jo
lock
and
div
dec
push
jle
scas
push
and
test
inc
mov
mov
dec
arpl
stos
cli
popf
xchg
bound
test
outsb
je
sbb
test
lds
sub
fdivl
jo
aad
pop
test
sub
inc
xor
sub
cwtl
fsubl
js
pop
mov
or
cwtl
pop
mov
lock
adc
dec
fs
jbe
xchg
add
addr16
push
push
inc
xchg
adc
and
jl
push
lods
cli
sarb
mov
fildll
lods
xchg
into
xchg
jb
add
mov
push
mov
pushf
jae
and
popa
bound
scas
xchg
jno
cwtl
int3
mov
mov
pop
stos
pop
cwtl
mov
sbb
mov
pop
pop
scas
lea
inc
xor
jl
imul
add
mov
cmp
mov
fisttpll
jns
inc
fcompl
popf
neg
jnp
popa
and
fwait
addb
push
lds
insb
enter
imul
jno
jp
mov
adc
mov
inc
jae
nop
js
int
inc
mov
cmpl
cmpl
dec
jbe
or
push
fsubrs
inc
fadd
ljmp
jmp
lret
mov
push
andl
rcrb
test
int3
cmp
adcb
jo
cmp
cmp
jmp
cmpsb
mov
mov
stc
aaa
fbld
cmc
jecxz
std
push
addb
or
jmp
mov
mov
mov
pop
adc
stc
jp
cmpsl
xor
pop
enter
and
mov
cltd
jb
mov
data16
out
sbb
in
loope
jae
xchg
test
int3
push
outsl
loope
nop
decl
fldenv
mov
mov
ss
cmp
jns
movsl
ss
push
mov
sbb
hlt
and
pop
inc
mov
outsl
cmp
scas
mov
dec
jae
int3
pusha
mov
or
dec
pop
int3
pop
mov
xor
int3
test
xchg
jae
mov
ja,pt
mov
and
jne
imul
add
enter
jmp
lret
and
cmp
test
xor
movsb
pop
fsubl
ja
push
fwait
jecxz
out
push
pushf
pop
xlat
jl
sub
jo
pop
cmp
cld
adc
gs
inc
cwtl
ffree
pop
shl
fs
mov
pop
loop
push
cli
xchg
pop
xlat
adc
push
mov
sub
dec
cmp
mov
pop
lret
cmc
dec
imul
cmpsb
xor
xchg
mov
in
bsr
enter
xor
push
mov
es
push
call
jae
aam
adc
sbb
add
inc
in
js
in
or
rorl
ss
jge
sub
ret
test
push
xchg
cs
mov
pop
sahf
int3
push
sub
fnstsw
imul
hlt
mov
xchg
in
or
repnz
jo
loop
stc
les
xchg
cmp
call
pop
mov
jae
sbb
xor
sti
cld
jge
add
cmpsl
mov
cmp
sar
iret
out
mov
jb
pop
mov
push
mov
jl
or
lds
repnz
mov
xor
and
dec
mov
push
mov
es
jl
in
push
adc
iret
inc
mov
adc
rcll
push
sbb
fldenv
and
sbb
xchg
cltd
shrl
fcmovne
xchg
idivb
push
xor
js
mov
cmp
push
imul
sbb
mov
nop
mov
ret
popa
xchg
xor
int
scas
test
push
and
pop
mov
mov
jo
sti
inc
fwait
enter
aam
repz
mov
imul
xor
cmpsl
lret
addr16
inc
pop
xcrypt-ofb
cmpsl
sub
imul
cmp
mov
dec
mov
imul
add
and
jo
xor
inc
adc
mov
das
xor
sub
arpl
imul
push
pop
xor
mov
push
fidivl
rcl
sti
inc
jl
sbb
sbb
xor
dec
cli
inc
mov
adc
adc
or
mul
mov
pop
insl
adc
pusha
sahf
cmp
cmp
add
aaa
loopne
je
xchg
notl
cmp
xor
xor
sbb
lret
push
fwait
hlt
xchg
jo
push
insb
pop
push
xchg
xor
sbbl
icebp
inc
xchg
shrl
jae
inc
pop
out
cltd
pop
cmp
xchg
adc
rcl
push
mov
add
dec
or
aad
cltd
fnsave
testl
testb
mov
mov
sbb
popf
mov
mov
push
jmp
push
push
lock
pop
movsb
imul
scas
insb
enter
adc
xor
hlt
ja
sbb
dec
stc
adc
dec
inc
in
pop
pop
sbb
sub
pop
stc
xor
mov
and
cmc
dec
cmpsb
subl
and
and
lds
lock
call
mov
flds
cwtl
aam
push
push
sbb
or
popa
dec
shrl
sbb
pop
inc
xchg
les
ljmp
mov
or
repz
pop
shr
in
push
sub
ja
call
loop
addr16
fdivrl
js
cltd
shlb
movsl
lds
aas
movsb
mov
int3
and
mov
and
cmp
fdivl
call
xor
data16
xchg
fcoml
dec
hlt
push
popf
lahf
jmp
push
pop
inc
push
daa
or
jnp
jg
rolb
pop
icebp
dec
shll
insb
xchg
jmp
lods
aam
scas
inc
inc
jl
fnsave
ret
pop
mov
mov
add
jb
xchg
ss
push
mov
call
icebp
cmp
mov
jae
out
cmpsl
fadd
test
lret
inc
mov
pop
mov
cwtl
popa
dec
xlat
push
pop
mov
and
popf
aad
jg
jae
mov
jns
outsl
mov
out
iret
sti
and
and
test
repz
push
fisubrs
cmpb
add
fisttpl
adc
in
and
adcl
call
xor
sbb
imul
dec
adc
xor
pop
subl
inc
sub
mov
les
lcall
leave
pslld
outsl
pop
push
push
inc
data16
movsl
jno
mov
mov
pushf
mov
ret
jp
push
rolb
in
push
jnp
pop
jae
mov
jecxz
scas
sti
pop
dec
imul
pop
fsubr
std
xchg
jp
xchg
or
sbb
cmpl
std
test
data16
xchg
mov
das
dec
xor
pop
movsl
push
pop
inc
ret
jno
sub
lds
cmp
sbb
cmp
adc
dec
dec
stc
cmp
mov
mov
movsl
xor
add
mov
mov
mov
jbe
cmp
fwait
in
pusha
push
pop
and
and
lret
nop
mull
cmp
xchg
gs
mov
aas
push
xchg
ljmp
cmp
leave
adc
lret
pusha
adc
xor
out
fildll
mov
mov
sahf
jb
loopne
dec
iret
inc
and
neg
jbe
iret
and
icebp
in
mov
fisubl
lcall
sub
cltd
jae
loopne
push
mov
into
xor
inc
mov
ljmp
fwait
test
inc
and
mov
and
ror
sub
roll
lret
xchg
cmp
push
xlat
push
mov
iret
inc
fdivrl
mov
add
out
shlb
and
dec
frstor
sti
je
mov
pop
mov
stos
pop
cld
xchg
loopne
sub
outsb
adc
push
imul
dec
adc
fs
xchg
lods
adc
push
inc
jecxz
mov
call
mov
mov
jae
push
out
data16
mov
fdivl
jno
cmp
loopne
mov
in
lahf
loopne
fdivrs
pop
ja
and
lods
mov
rol
shrb
inc
mov
and
mov
aaa
dec
mov
lods
rcrl
xor
nop
lcall
and
cmp
or
cltd
mov
push
jmp
stos
mov
fs
mov
lret
jp
fcomps
and
in
or
adc
mov
mov
add
jmp
fmuls
into
mov
inc
push
inc
xlat
jmp
jmp
fsubl
xchg
stc
fs
stc
mov
fisubl
push
adc
add
out
jecxz
fstpl
add
pop
push
sbb
mov
sub
adc
movsb
pushl
repz
scas
xor
inc
xchg
sub
add
or
imul
movl
sub
cmp
jge
cmp
outsl
test
jg
mov
jl
xor
mov
jle
mov
xchg
in
fcomp
adc
xlat
or
call
lock
mov
das
or
cmp
in
outsl
jnp
mov
imul
sbb
jg
adc
sbb
test
test
jp
mov
mov
shlb
push
jnp
aas
leave
cmpsl
jg
inc
shlb
fistpl
mov
push
stc
cs
adc
cmp
mov
fisubs
imul
xchg
cltd
in
stos
push
dec
vxorps
jmp
loope
outsl
das
sub
push
lcall
jne
push
mov
mov
repnz
mov
cltd
fists
xorb
inc
push
add
daa
leave
adc
cmp
xchg
pop
insb
xor
xchg
je
pop
sbb
mov
dec
dec
bound
jecxz
loopne
arpl
and
out
pop
xor
jno
aad
testb
aas
and
lret
test
sbb
push
jno
pop
mov
aad
shlb
jge
inc
and
rcl
sarb
jmp
rclb
mov
mov
idivl
je
mov
es
aad
adc
or
pop
cmp
mov
mov
push
sub
xor
aad
cmp
or
ds
cmp
rcrl
test
push
mov
ret
add
lret
sub
xchg
jns
mov
jb
fwait
mov
mov
pop
jg
mov
mov
adc
push
cmc
in
sti
icebp
lcall
mov
inc
js
cmp
xchg
daa
aas
daa
xlat
sub
aaa
add
std
mov
in
int3
cmpsb
mov
pop
mov
jmp
stc
leave
int
and
mov
fisttpl
ljmp
out
movsl
in
psubusw
stos
int
ss
stc
xchg
mov
push
mov
or
sbb
sbb
add
daa
cwtl
lea
shlb
push
or
pop
loopne
jle
cmp
pop
fsubrl
fldenv
lret
enter
jbe
in
les
dec
mov
pop
mov
push
callw
ljmp
xchg
adc
ljmp
adc
or
sub
or
mov
nop
or
inc
cmp
ja
sbb
cmpsl
push
movsb
es
push
mov
dec
and
das
cmpb
add
cmp
xchg
cmp
pop
jp
push
imul
mov
int
xchg
in
cmp
dec
enter
mov
and
and
fdivrl
mov
cmp
leave
pop
mov
mov
mov
icebp
shrl
jmp
or
idiv
and
lret
jno
aad
clc
out
shlb
jg
mov
sar
ficoml
icebp
jecxz
arpl
aam
push
xor
or
mov
add
loopne
mov
ljmp
sub
testl
sbb
out
mov
roll
push
or
jle
mov
jle
or
push
jne
imul
dec
movsl
xchg
xor
sub
inc
xchg
sbb
add
mov
pop
das
mov
loopne
cmp
xor
out
int
notb
data16
mov
stos
jmp
arpl
dec
xor
lea
stos
push
movsb
test
pop
xor
pop
adc
aas
pop
das
loopne
andl
dec
enter
popf
jo
ficompl
mov
push
or
test
xchg
adc
loop
jnp
push
lahf
mov
dec
xchg
aas
adc
fdivrs
testb
push
mov
xor
mov
int
add
pop
test
and
pop
sbb
mov
push
sbb
jg
ret
xchg
cmpsb
das
sub
lcall
adc
push
jnp
cmp
fisubs
mov
icebp
xchg
sbbb
add
adc
sub
xor
es
or
loope
outsl
add
lea
loope
adc
cmpsl
inc
daa
inc
rol
imul
sbb
loopne
xchg
int3
jmp
pop
test
jmp
xchg
rcrl
andb
sub
mov
cmc
sbb
shr
popa
mov
pop
in
dec
test
test
sbb
cli
lods
vpshufd
popf
in
les
fisubl
dec
inc
pop
sub
int3
icebp
mov
pop
dec
pop
loope
push
inc
pop
inc
sbb
rcl
scas
rcll
sub
cmp
push
shl
adc
mov
adcl
addb
push
sbb
in
out
sahf
out
pop
mov
insl
jae
stc
mov
fistpll
cmc
js
fs
cli
push
mov
inc
adc
icebp
sarb
xchg
test
xorl
out
sbb
addr16
lods
cmp
inc
clc
lock
pop
inc
jecxz
test
mov
pop
ret
push
xor
adc
fcmovnbe
icebp
adc
test
sbb
adcl
sub
xor
popa
mov
adc
cwtl
bound
mov
das
pop
fwait
add
loope
arpl
repz
fwait
movsb
xchg
jnp
js
jge
push
jnp
in
test
dec
cmp
xchg
mov
jecxz
nop
inc
shr
mov
clc
cmp
rcrb
xor
int
push
dec
sbb
jns
psubusw
adc
or
fisttpll
daa
adc
sti
daa
adc
lret
sahf
pusha
dec
cld
fdivrs
cmpsb
ss
sub
add
in
pop
adc
and
lcall
jno
xor
faddl
out
pop
ror
adc
clc
cs
out
jmp
inc
outsl
pop
js
push
loope
dec
sti
xorl
icebp
sub
sahf
push
and
jns
xchg
cmpsb
sub
leave
or
repz
xchg
push
push
or
das
rcl
aaa
or
adc
adc
div
pop
mov
ss
mov
enter
xchg
push
les
sub
xchg
iret
std
xor
int3
nop
mov
filds
test
ljmp
or
cltd
xchg
rcrl
aam
ret
cwtl
mov
jbe
aad
push
add
inc
cwtl
call
lcall
mov
pushf
in
cmpsb
sub
ljmp
cmp
mov
inc
fcmovne
les
jb
push
ds
jb
stos
leave
popa
and
lea
mov
mov
scas
test
mov
push
mov
movsb
fnstcw
sbb
xchg
sar
ret
stc
mov
fisttpl
js
in
outsl
adc
fdivrl
xor
ja
fadds
sahf
mov
out
jbe
aas
lcall
inc
jmp
xor
add
ja
addr16
adc
gs
pop
int3
in
imul
or
sbb
xchg
sbb
and
adc
pop
arpl
and
dec
mov
mov
aaa
xor
sahf
in
add
mov
loopne
aad
test
mov
xchg
fsts
iret
mov
and
sbb
jl
into
mov
mov
cld
push
dec
sti
and
adc
jbe
and
enter
adc
lea
inc
push
jnp
bound
std
sbb
dec
call
or
push
mov
int3
sbb
daa
test
mov
mov
ja
div
int3
stos
and
xor
mov
rol
fs
xchg
sbb
cmp
xorb
add
push
imul
xchg
sub
cld
cmc
fs
push
cmpsl
inc
sar
lahf
adc
pop
lock
cmp
pop
lret
lahf
push
xor
dec
sar
mov
add
fsubs
movsl
aas
mov
cmc
mov
ret
mov
jge
push
movsl
sbb
push
fnstcw
push
loope
shlb
cmpsb
sbb
movsl
outsb
test
andl
mov
cmpsl
popf
in
xchg
scas
jo
ror
add
mov
jne
cld
pop
adc
popf
test
mov
cmp
call
int
sbb
inc
mov
xor
inc
repz
shll
nop
mov
mov
lock
jbe
inc
adcb
daa
cmp
ret
mov
aam
sahf
movsb
mov
and
pop
dec
in
dec
mov
pop
xchg
ret
mov
mov
or
fisttps
sbb
sarb
leave
adc
mov
dec
jo
jl
sbbb
inc
sbb
or
sub
push
sbb
add
and
xchg
shlb
out
mov
mov
sbb
fldt
dec
jns
xchg
jg
or
ror
or
xor
push
mov
mov
out
adc
sbb
push
sbb
dec
xor
in
adc
pop
arpl
sti
hlt
imul
neg
pop
gs
lods
mov
movsl
cmpsl
jae
lret
pop
mov
cmp
push
push
or
jno
into
mov
inc
mov
pushf
push
and
jno
bound
movsl
xor
mov
add
jmp
pop
andl
jmp
xor
xlat
scas
aaa
dec
enter
in
sub
jno
test
inc
fisttpl
xor
nop
dec
dec
fsubr
stos
jo
idivl
xor
push
andb
cli
mov
adc
and
push
ljmp
rorl
xor
flds
clc
xchg
inc
shll
add
jmp
shr
xchg
and
dec
mov
xlat
repz
add
mov
jnp
cmp
cld
test
and
or
movsb
andl
mov
repnz
mov
out
ljmp
and
push
sub
sbb
mov
out
ljmp
out
sahf
pop
mov
or
xor
push
mov
daa
daa
adc
test
pusha
data16
push
mov
into
adcb
mov
cmp
aad
pop
inc
xor
push
pop
jae
ds
lcall
push
int
and
adc
xor
xor
jmp
cs
testb
sub
imul
adc
daa
mov
pop
cmpsb
jg
pusha
call
fisubrs
and
mov
xor
or
dec
mov
leave
jbe
mov
cmc
mov
sub
fstps
ja
push
lcall
call
rcrb
xchg
movsb
in
loop
aaa
dec
mov
lods
mov
cltd
cmp
pusha
mov
pop
int
pushf
icebp
movl
scas
aaa
ret
fwait
cmpsb
cmp
cmpsb
pop
aaa
popf
cmp
cltd
xor
pushf
push
movsb
adc
xor
mov
outsb
push
leave
sbbb
and
repnz
or
in
jne
cmpsb
in
cmp
sub
out
hlt
clc
stos
jl
movsl
mov
addl
mov
cs
cmp
cmp
mov
fnsave
clc
insl
pop
dec
notl
subb
add
out
insl
cmc
jp
clc
jmp
and
mov
fidivs
mov
pop
mov
je
mov
lods
cltd
cli
cmp
or
incb
jge
hlt
adc
mov
pop
xor
cmp
pushf
or
out
inc
popf
jne
gs
push
sbb
sbb
dec
jb
imul
mov
mov
fnstsw
xor
sbb
sub
push
insl
adc
sti
and
xchg
ret
movsl
call
lock
out
les
mov
dec
dec
and
xorl
int3
movsl
mov
xchg
rcr
jno
aam
je
push
mov
insb
cmp
and
icebp
jns
and
stos
fnsave
loop
and
mov
mov
std
sbb
fcomps
add
jns
in
sbbb
pop
xor
and
or
add
imul
jno
inc
pop
les
xchg
mov
xchg
or
dec
std
sbb
xlat
sub
inc
pushf
jmp
adc
insb
nop
xor
push
out
ljmp
pop
dec
std
in
das
jl
test
js
repnz
sbb
or
stos
or
adc
lahf
push
push
pop
loope
test
xchg
inc
cmc
je
mov
stc
mov
add
xor
dec
sub
nop
lods
push
push
stos
sub
xchg
xor
cmp
and
lahf
sbb
xor
out
movsl
xchg
sub
sub
push
adc
sbb
push
dec
fisubs
mov
rorl
out
xor
sbb
sub
fldenv
repnz
cld
mov
xchg
push
iret
hlt
andl
pop
pop
pop
jge
push
mov
pop
cmpsl
aad
daa
into
and
negb
pop
cmp
jl
sub
enter
in
mov
and
cld
pop
cmp
xchg
mov
pop
bound
add
xor
xlat
sahf
lahf
xchg
mov
lahf
add
out
inc
shll
pushaw
cwtl
mov
in
imul
cmc
addr16
jmp
adc
lcall
dec
scas
dec
lods
stc
in
jg
lahf
std
pop
push
and
lock
icebp
jl
jb
test
inc
sub
in
jl
push
out
dec
lods
lds
mov
lret
xchg
rorl
jle
out
dec
jle
jo
out
mov
pop
ss
push
jecxz
daa
mov
inc
imul
mov
stc
xchg
ss
jne
lds
ljmp
cmpb
bound
in
inc
out
dec
sub
jno
ja
xor
scas
push
push
jg
out
fdivrl
out
js
scas
test
pop
std
cmpsl
ret
dec
adc
bound
mov
fistps
mov
pop
xorl
push
push
insb
xor
jl
aas
sbb
rol
aaa
enter
test
or
adc
jmp
jae
aas
inc
jae
cmp
repnz
or
jno
and
hlt
ret
mov
fcoml
clc
adc
mov
fsubrs
jnp
in
lahf
lret
add
jecxz
into
iret
jae
sbb
nop
iret
aaa
pop
sbb
inc
in
jle
loopne
mov
sbb
sbb
xor
push
jns
inc
arpl
pop
sub
aad
clc
mov
ss
pop
jl
inc
pop
or
xchg
mov
pushf
insb
jne
cmp
cmp
adc
sbb
mov
lahf
add
push
and
imul
add
or
xor
adc
or
test
insb
fstps
out
std
daa
pop
sub
sbb
shlb
jge
fstpt
fs
xor
fidivs
pusha
ret
cltd
fcoms
cmc
mov
mov
jmp
cld
cmp
and
enter
sarl
jbe
or
push
or
out
and
fadds
mov
xchg
inc
sti
in
aad
movsl
nop
mov
mov
mov
imull
hlt
mov
inc
cmpsl
lods
lds
sahf
enter
sar
push
ret
mov
dec
jmp
cmp
cmc
das
dec
or
pop
es
fincstp
mov
lret
add
cltd
cmp
scas
roll
aaa
adc
daa
dec
das
adc
mov
shll
dec
and
cmpsb
cwtl
and
insb
aad
ss
cli
sub
loop
dec
rcrl
and
popl
push
xchg
mov
dec
and
mov
sbb
lret
pop
or
rcl
pop
sub
fnstenv
jl
fisttpll
ficoms
in
sbb
or
aam
int
push
dec
or
and
repz
jo
and
in
pop
or
daa
push
stos
or
xor
sbb
push
add
pop
data16
mov
lret
hlt
dec
inc
adc
in
enter
push
iret
sbb
sti
cwtl
int
xor
mov
cli
popf
add
out
fmuls
cli
fstl
lods
add
and
fildll
mov
push
loopne
out
mov
pop
out
sub
sub
test
iret
or
sbb
addr16
movsb
pushl
pusha
xor
nop
cmp
fdivl
fbstp
popf
icebp
mov
mov
fwait
push
movsl
pop
dec
ss
mov
scas
js
mov
mov
loope
jo
cli
xor
pminsw
cwtl
inc
pop
fcoms
xchg
pop
bound
xchg
pop
sub
adc
fs
icebp
aam
pop
jno
push
in
test
sub
daa
enter
push
repz
xchg
pop
cmp
xor
mov
pop
cmp
test
sub
jo
sbb
bound
ret
rcrb
mov
js
sub
xor
sahf
stos
bound
or
mov
lods
and
xchg
decl
mov
test
add
inc
add
sbb
mov
and
loop
sti
pop
jg
notl
mov
mov
call
clc
adc
sub
pop
xor
add
cld
rorb
cmp
leave
sbb
pop
lock
push
gs
mov
sbb
cmp
mov
sbb
shlb
inc
xor
jl
leave
xlat
inc
mov
sub
jmp
loope
xchg
dec
xchg
xchg
adc
sub
push
test
cmp
and
xlat
push
inc
adc
test
rclb
and
stos
stc
mov
ss
lock
mov
scas
xchg
sbb
push
fsubl
cmp
je
cltd
mov
cmpl
mov
xchg
sbb
and
cmp
ds
jge
mov
iret
insb
test
push
lds
ds
fisubs
cmpsb
sub
push
sbb
jmp
outsb
out
xor
andb
call
fdivrp
mov
xorl
vmaxsd
out
xor
in
jae
lea
mov
std
adc
mov
inc
test
mov
mov
loope
jle
xor
jecxz
push
aas
mov
xchg
scas
mov
stc
testl
decb
pop
add
mov
bsr
sub
or
dec
jnp
mov
pop
hlt
pop
push
xor
aad
mov
adc
inc
inc
jae
sbb
mov
lds
sub
xchg
js
or
je
cmpb
popf
push
icebp
mov
xor
int3
out
push
daa
sbb
sbb
or
mov
mov
cltd
divb
mov
xor
mov
dec
das
pop
inc
inc
mov
jne
xchg
sbb
jb
inc
sbb
inc
cmp
pop
mov
pop
mov
sub
lock
pop
pop
push
sbb
inc
cwtl
xchg
lahf
iret
and
inc
lods
mov
adc
test
inc
pop
int3
incb
out
mov
adc
inc
pop
call
xorl
ret
shrb
js
ret
mov
pop
imul
in
xor
mov
sti
lea
push
inc
int3
sarb
jae
rolb
dec
mov
subl
jl
sarl
cmpl
jp
test
dec
outsl
add
in
aam
xor
popf
push
pop
add
add
jbe
inc
repz
sar
mov
mov
ret
lods
jmp
sub
into
inc
pop
mov
and
sbb
insb
adc
test
jnp
fcmove
jnp
push
popf
sahf
xchg
mov
ret
mov
es
jl
pop
sub
mov
fucomip
stc
dec
movaps
fnclex
lods
adc
sti
test
in
outsb
into
jg
sub
adc
aas
fmul
cli
movsb
lahf
sbb
add
decl
xor
pop
arpl
push
pop
mov
aad
rcrl
icebp
xchg
and
ja
jp
add
mov
out
pop
clc
sbbl
mov
in
call
lea
pop
outsb
pop
in
data16
cmc
jle
test
mov
push
stos
and
ds
loope
fmuls
or
loop
mov
jge
lea
lea
inc
mov
rorl
pop
stos
lds
xchg
inc
fimuls
rcrl
mov
xchg
inc
push
nop
ljmp
cmp
xchg
gs
mov
xor
lds
mov
xchg
pusha
mov
iret
xor
test
mov
mov
pop
mov
push
sahf
pop
dec
bound
fs
sbb
xchg
inc
rorl
mov
add
jmp
icebp
scas
and
cmp
cmpsb
xchg
popf
in
imulb
lret
leave
jmp
cmp
test
pop
xchg
mov
lcall
mov
test
push
int3
sbb
aaa
jo
nop
push
jg
icebp
mov
or
jge
test
xorb
pop
pop
fstl
out
cmpsb
dec
sbb
dec
repz
and
popa
mov
daa
shrl
cmp
push
mov
leave
fwait
cmp
mov
and
mov
sbbb
bound
dec
mov
jle
fists
ja
je
nop
push
adc
push
js
mov
sub
sbb
mov
aas
push
add
outsb
sbb
or
aas
mov
stc
pop
fs
lret
rcr
pusha
push
pop
cmpsb
fcomps
pushf
dec
or
xor
xchg
and
int
cwtl
data16
jbe
inc
icebp
mov
mov
scas
jp
ret
pop
sub
push
inc
push
enter
pop
bound
ficoms
inc
leave
pop
out
imul
and
jp
or
mov
jbe
mov
or
sbb
dec
mov
addr16
mov
xlat
push
pop
imul
js
dec
dec
cmp
push
add
inc
mov
fnsave
ja
pop
mov
jno
ds
ss
jp
sub
mov
pop
flds
stc
jle
test
sti
sbb
xorb
or
aam
mov
push
aaa
pushf
les
jo
in
leave
inc
add
stc
lahf
ds
push
mov
adc
push
add
push
xor
inc
insl
xchg
jp
sbb
push
add
mov
inc
sub
aad
movsb
inc
push
pop
jge
xor
cmpsl
dec
xor
push
sub
ret
and
cwtl
xchg
xor
arpl
std
add
mov
jg
stc
jecxz
mov
ja
hlt
add
sbb
and
push
das
cmp
mov
std
xor
mov
push
jle
das
pop
jns
cmp
jmp
inc
push
cmp
in
or
frstpm(287
orl
arpl
pushf
sbb
scas
sub
test
pusha
sub
cmpsl
ss
hlt
sbb
mov
inc
cld
and
loop
lcall
sbb
clc
notb
out
mov
mov
fstpl
popf
xor
or
test
or
push
sub
sub
aas
pop
andl
pop
push
mov
jmp
fwait
movsl
mov
addr16
scas
loop
adc
and
and
inc
fld
push
cmp
push
and
jno
sub
les
in
sbb
adc
out
fwait
int
adc
pop
lcall
mov
sbb
pop
adcb
push
out
out
cli
and
xorb
and
mov
mov
mov
cmp
sub
jb
push
nop
jnp
in
pushf
and
lds
xor
xorl
push
and
xchg
or
or
xchg
and
outsb
sbb
imul
test
cltd
ret
pop
adc
ret
push
cmc
in
les
and
decl
and
test
jb
push
or
shll
and
sub
mov
adc
add
inc
std
sbb
push
xor
add
bound
dec
lcall
xor
cmc
push
add
sub
sbb
bound
mov
pop
je
lock
aaa
push
cmp
into
lea
ss
and
movsl
mov
ljmp
loop
test
lods
xor
push
ja
adc
jl
orb
cmp
rol
rorl
push
mov
pop
mov
dec
adc
jnp
adc
ret
mov
dec
mov
icebp
or
add
inc
push
push
push
xchg
ds
lret
push
maskmovq
negl
and
jecxz
jo
test
scas
out
dec
outsl
jnp
inc
dec
pushf
jb
sub
fisttpll
mov
push
in
cmp
fnstsw
popa
xchg
and
xor
insl
shl
sub
inc
and
adc
pop
jmp
fistps
out
mov
popf
int
sti
nop
push
insl
pop
or
cmp
sub
xor
jg
insb
sub
or
mov
lds
mov
stos
sti
addr16
arpl
adc
jb
scas
shr
push
push
pop
pop
fdivr
in
sbb
mov
xor
out
ffreep
popf
mov
mov
jnp
jbe
adc
idivl
daa
mov
bndldx
jbe
inc
mov
sub
gs
test
xchg
jl
inc
push
into
inc
js
insb
movsl
xchg
dec
mov
ds
jmp
sarl
ror
sbb
jne
sub
clc
ret
out
stos
pop
mov
xor
mov
fisubrl
out
in
in
jp
shlb
xchg
push
daa
jnp
pusha
or
mov
out
outsb
xlat
or
mov
js
shld
mov
push
push
hlt
push
jp
dec
and
dec
sbb
sbb
sbb
sti
add
push
pop
mov
add
push
ficoms
pop
fisubrs
xchg
push
faddl
cmp
xor
aaa
mov
out
and
sbb
pop
mov
xchg
insl
jl
movsl
fmuls
adc
addl
or
popf
stos
aas
xchg
scas
negl
mov
mov
push
mov
mov
jbe
xor
loope
push
lock
jmp
fwait
mov
sbb
and
push
lcall
mov
in
leave
in
adc
sbb
inc
mov
pusha
gs
push
loop
lcall
mov
mov
in
inc
mov
adc
leave
xor
daa
add
xchg
mov
jb
jle
cmc
scas
jecxz
mov
lds
repnz
jl
dec
imul
hlt
xor
pop
mov
xchg
loopne
adc
je
jmp
ret
xor
xchg
dec
test
aad
pushf
cwtl
mov
pop
int3
xor
dec
or
inc
ljmp
push
gs
test
jnp
xchg
pop
iret
xor
ret
mov
popf
sbb
push
stc
jge
sbb
scas
cmp
and
jle
add
dec
jne
aad
mov
xchg
and
and
jae
fisubl
popf
mov
lock
jg
or
push
fs
enter
ljmp
cld
and
outsb
test
push
lods
mov
scas
mov
ja
outsb
inc
mov
movsb
xchg
out
out
fwait
add
jmp
fs
cmp
stos
in
or
cltd
dec
or
push
mov
das
mov
icebp
dec
cmc
inc
xor
test
lcall
jo
stc
mov
fisubs
int
jecxz
ljmp
jge
int3
push
sbb
js
leave
mov
cmp
pop
push
add
or
fdivl
jg
cmp
outsb
scas
popf
sti
mov
call
pop
xchg
cli
ret
cmp
in
pop
cmpsl
imul
cwtl
jecxz
lahf
popa
push
jmp
cli
push
xchg
ss
inc
pop
icebp
lcall
cmpsl
dec
push
movsl
out
icebp
ret
gs
mov
cmp
inc
inc
loopne
cwtl
cmp
leave
adc
jl
mov
pop
test
xor
popa
pop
inc
cmp
and
pop
enter
aad
dec
pop
sub
sahf
push
iret
mov
inc
jo
test
cli
cmpsb
inc
sub
icebp
test
loope
jge
out
movsb
ret
jne
mov
mov
pusha
subb
jmp
jb
ret
xor
sub
inc
adc
cmp
out
and
pushf
lahf
aad
cmpl
sub
test
in
mov
int
aas
push
sub
aam
cmc
and
xor
scas
insb
sub
sub
push
push
xor
xchg
aaa
out
xor
outsb
fstp
pusha
add
leave
push
adc
lahf
pop
jl
lahf
sub
cltd
aam
pop
lret
addr16
cltd
lea
jno,pn
pushf
jns
add
adc
sbb
cs
push
cmp
adc
test
jno
test
fsubs
dec
cs
std
jae
imul
cmpsb
add
pop
push
outsl
jbe
das
subl
push
inc
mov
sub
mov
mov
outsl
cmpb
hlt
outsb
mov
fistpll
mov
xchg
mov
addr16
mov
iret
cltd
int3
psrld
rcll
push
loopnew
add
mov
xchg
push
daa
mov
insb
loope
lock
outsb
int3
mov
int3
jmp
jne
mov
test
mov
mov
lods
cmp
test
jbe
sbb
add
xor
popf
ret
pop
setne
sbb
sbb
jo
test
mov
push
and
nop
mov
or
cmp
std
clc
sbb
out
adc
sbb
mov
cli
sub
adc
orb
dec
lahf
and
dec
dec
popf
in
insb
pop
mov
mov
mov
sbb
imul
popl
adc
and
and
mov
mov
dec
jns
jnp
cmc
add
std
lcall
dec
add
xchg
xchg
mov
mov
mulb
xchg
sahf
push
cmc
lods
mov
fistpl
movsb
ljmp
mov
out
sub
add
xchg
push
push
pop
fincstp
sbb
mov
or
and
fistl
ret
add
mov
mov
mov
dec
xchg
mov
cmpl
aas
adc
pop
mov
jl
arpl
push
adc
sbb
or
loope
in
subl
push
add
cmp
outsl
jns
gs
inc
push
jle
fisttpl
in
dec
xor
mov
adc
clc
fadds
shrb
mov
cmp
mov
mov
jne
xorl
call
divb
push
push
fisttpll
gs
icebp
add
jnp
test
les
fst
lods
sbb
push
pop
cmpsl
ds
jae
fwait
mov
or
add
push
adc
jb
inc
aad
cmp
pushf
xor
push
sub
pop
icebp
insb
xchg
pop
outsl
ret
xor
and
pop
fisttps
fistpl
pop
push
insl
jmp
rorl
mov
aad
stos
jo
xchg
imul
dec
dec
enter
scas
fcompl
stos
push
mov
push
fdivrs
add
add
jge
sub
fisubrs
lret
add
mov
cmp
sahf
ficompl
stos
lahf
push
pop
push
sti
rep
gs
ljmp
repnz
popf
cld
out
add
push
lds
mov
out
push
aas
sbb
sti
rcll
and
sti
add
outsl
sbbl
pop
xchg
addr16
sarb
les
shll
mov
adcl
xor
rclb
sbb
mov
mov
out
and
in
adc
gs
aad
int
jle
sbb
mov
data16
jp
mov
xchg
add
dec
sub
pop
leave
adc
sub
jge
xchg
xchg
cltd
sbb
mov
push
orl
ret
sub
rep
jns
sub
movl
jg
sub
divl
push
xchg
orb
push
sbb
pop
xor
cmp
mov
sbb
push
sub
les
popf
frndint
jl
push
aam
cmp
orb
aaa
xchg
add
loop
pop
in
push
jae
cmc
mov
xchg
sbb
push
cmp
mov
xor
xchg
xor
cmp
jge
cmp
push
filds
outsb
pop
iret
in
call
ja
cli
or
pop
jl
cmpsb
pop
inc
mov
enter
push
mov
shrb
loope
aas
sub
mov
jecxz
xor
sbb
xchg
mov
dec
pop
les
daa
mov
imul
daa
jnp
sub
and
pop
mov
sbb
ljmp
cmpsl
addr16
in
jne
inc
sbb
inc
pop
aas
es
jge
xchg
rcrb
in
cmp
mov
cmp
cs
cmp
or
popf
int
push
lcall
add
cmp
jl
lret
dec
je
into
push
js
andl
pushf
jg
push
mov
sahf
sbb
daa
push
mov
fcmovnbe
fisttps
aas
or
sbb
push
fstps
fsub
jmp
mov
cmp
ss
xor
adc
pop
dec
jb
aad
sbbb
mov
dec
sarl
clc
addr16
xor
outsl
jne
ljmp
stos
or
adc
cli
adcl
scas
push
mov
and
cli
je
test
in
jg
mov
cmp
sbb
push
inc
mov
push
ds
adc
cmp
sahf
jp
pushf
or
add
cmc
push
test
in
popa
push
sub
loop
add
ljmp
into
xchg
mov
lahf
loope
arpl
arpl
add
xchg
xor
loope
cmp
aad
in
cmpsb
outsb
and
lahf
jg
outsb
repnz
shrl
in
sub
stc
in
lcall
sti
jl
cs
jp
mov
dec
cld
jne
paddq
mov
add
bound
ret
push
scas
pop
mov
mov
dec
mov
sti
js
loope
repz
fidivrs
mov
pop
jo
push
js
pop
iret
in
lahf
add
fwait
and
repz
mov
cwtl
lret
and
mov
cltd
loop
xchg
sub
fsubl
mov
loop
lods
adc
call
pop
mov
lds
sub
into
lea
mov
ret
mov
imul
shll
leave
adc
fstpt
xor
push
mov
iret
xchg
int3
push
adc
test
and
mov
dec
loopne
rorb
jns
jbe
mov
mov
lcall
sub
cli
jne
imul
jo
nop
xchg
call
and
pop
pop
and
or
test
movl
xchg
icebp
or
popf
cltd
jbe
outsl
cmp
sbb
bound
pop
lock
cmpsb
sbb
lcall
dec
jg
js
insb
cltd
xor
cmp
add
les
lahf
adc
sti
gs
sub
cmp
loop
push
lock
arpl
jg
daa
test
pop
rorb
cmp
mov
loop
inc
push
sub
dec
inc
mov
inc
mov
or
je
xchg
jmp
mov
or
xchg
fcmovb
xchg
inc
xchg
bound
in
pmaddwd
xchg
xchg
lods
sub
pop
add
mov
xchg
mov
aaa
sub
xlat
jbe
or
popf
sahf
pop
cltd
aas
sub
jo
scas
cmpsl
stos
pop
je
es
sub
imul
sbb
push
jns
ret
or
mov
popf
mov
sarl
dec
xchg
test
add
sbb
xchg
pop
imulb
outsl
gs
pop
lods
imul
ror
adc
repz
inc
fcomip
and
jns
jge
mov
push
bound
ror
mov
rorl
xchg
pop
test
data16
cmp
cmp
jp
arpl
shr
psubq
fsubrs
sahf
xchg
mov
adc
out
inc
lods
arpl
sbb
push
cld
mov
mov
pop
mov
pop
cmpsl
sbb
popf
xor
mov
lods
fildll
lcall
xor
and
mov
cmp
fisubs
cmp
stos
pop
nop
das
pop
ficompl
cmpsl
or
test
std
jo
in
add
fidivl
cltd
adc
push
in
ss
cmp
test
test
sbb
repz
ret
loop
pop
stc
xlat
dec
out
enter
xor
jns
inc
sub
das
jo
cmp
pop
daa
jns
ror
popf
or
fwait
dec
out
sahf
xor
ss
test
push
inc
jo
insl
xchg
and
pop
and
addl
ret
push
icebp
cli
cmc
jmp
nop
add
pop
stc
mov
enter
xlat
sbb
xorl
sub
push
mov
test
shrb
adc
les
inc
jecxz
cli
inc
pop
cmp
adc
icebp
mov
jnp
pop
pmaxsw
dec
fmul
sbb
mov
arpl
cli
insl
mov
pop
cmpb
xchg
jae
enter
dec
xchg
mov
in
mulb
popf
cli
xchg
scas
sbb
ret
data16
or
mov
ja
sar
cmp
adc
mov
loope
lea
adc
add
adc
pop
stos
or
dec
mov
sub
cmp
lcall
mov
and
lods
xor
push
mov
repnz
mov
xchg
jecxz
pop
cmp
or
lods
fsub
mov
sbb
stos
pop
dec
clc
pop
repnz
adc
xchg
push
hlt
inc
pop
in
xor
dec
insl
fdiv
fnsave
xlat
mov
out
lret
pop
push
jg
lock
out
das
mov
lcall
jp
les
push
sub
xchg
cmp
or
cwtl
adc
int3
xchg
xor
lcall
jecxz
fstpt
jecxz
rorb
sub
and
sarb
jnp
into
mov
xor
sarl
int3
xor
cmp
je
sub
cli
jecxz
add
into
adc
cwtl
es
sahf
in
cmp
or
xor
inc
and
mov
filds
ja
movsl
pop
nop
pusha
xor
pop
mov
popa
clc
daa
or
test
xor
faddl
int3
js
jecxz
or
sahf
clc
sub
sub
cmp
sbb
and
ja
dec
int
push
nop
ret
les
sub
data16
push
jmp
in
xor
lea
xchg
lock
dec
in
pop
mov
xchg
dec
inc
test
into
outsb
cmp
arpl
push
pop
pop
xor
int3
jmp
mulb
lods
iret
fwait
jg
mov
cmp
and
clc
mov
dec
push
imul
loopne
sarb
ds
cmp
out
test
sbb
nop
je,pn
jno
pushf
in
pop
shrl
mov
out
fdivp
add
loop
add
xor
mov
inc
inc
push
push
sbb
xor
daa
mov
clc
push
sub
lret
sub
sub
repnz
stc
sarb
aam
shll
movsb
das
arpl
loop
inc
jl
pop
adc
cld
pop
movsb
aad
inc
sti
stc
dec
cmp
inc
enter
in
mov
and
cmc
jnp
cmp
lods
xchg
or
cld
adc
int3
pop
cld
sub
repz
xchg
iret
aad
in
aas
pop
dec
sub
inc
inc
hlt
mov
mov
stc
adc
aad
outsl
out
or
aaa
ja
mov
clc
imul
in
std
sti
subb
adc
inc
rclb
sahf
lds
cltd
push
push
xchg
jnp
scas
push
lahf
adc
sbb
call
inc
jb
mov
inc
add
fs
cmp
xchg
not
insl
ret
push
adc
outsb
roll
sub
test
adc
jle
xor
push
mov
push
inc
popf
das
xchg
in
mov
dec
jle
insl
add
pushf
int3
lods
out
mov
sahf
jmp
ss
add
in
test
in
pop
std
hlt
jb
inc
and
out
and
sbb
stc
cwtl
insb
lds
adc
bnd
jae
lcall
jno
jle
jl
out
ss
sti
add
or
adc
mov
andl
fcoms
stos
adc
les
lods
movsb
pusha
sub
add
popa
in
dec
lahf
mov
sub
pop
mov
push
pop
repz
jle
sub
bnd
jne
shll
xor
mov
and
aam
cmp
mov
dec
imul
inc
dec
imul
mov
shl
cld
mov
mov
add
mov
inc
cmpsl
dec
stos
cmc
lods
cmpsl
jmp
testl
inc
scas
insl
out
mov
test
cld
sub
popf
pop
or
stc
xor
sbb
inc
mov
test
stos
rclb
jnp
dec
dec
sub
cli
add
mov
subl
jle
leave
je
cs
xchg
sbbb
mov
cmp
jb
pusha
int3
inc
les
xchg
aad
out
stc
test
out
fcoml
xchg
pop
inc
xor
sub
repz
or
and
jb
mov
jo
jp
xchg
jbe
mov
cltd
fisubl
inc
push
xchg
jbe
flds
lret
test
ret
mov
ror
xor
fcmovb
push
sar
jo
not
insl
int3
dec
pop
jo
lret
cmp
inc
push
hlt
es
lods
or
pop
mov
das
and
lret
mov
iret
es
stos
pop
out
out
pop
aas
push
adc
mov
pop
out
lds
cmp
loope
fsubrp
orb
add
ss
mov
mov
pop
dec
and
test
sub
cmp
mov
and
int3
or
mov
into
mov
loopne
xchg
jmp
std
and
jmp
cmp
sub
dec
stos
sub
fbld
fwait
mov
jl
inc
addr16
jb
mov
stc
mov
dec
push
mov
lahf
divl
in
xor
cld
and
out
sbb
out
ljmp
fimuls
hlt
adc
loopne
psraw
dec
data16
imul
repnz
xor
mov
add
test
shlb
arpl
in
mov
insl
out
push
mov
dec
dec
mov
mov
pop
xchg
cmpb
mov
sub
inc
std
roll
js
push
jo
add
icebp
xorb
jp
sub
test
mov
into
adcl
idiv
outsl
bound
jno
out
das
and
test
xor
sbb
lret
lods
xlat
mov
ret
test
mov
les
fnsave
js
shlb
adc
push
xor
in
sub
inc
loop
cltd
pop
push
xor
fldl
fldcw
add
shlb
add
mov
mov
mov
mov
cltd
lcall
ds
std
loope
iret
cltd
stos
pop
lret
daa
stos
sbb
lds
je
cltd
into
lret
sub
insl
mov
inc
mov
pop
jns
dec
mov
dec
jb
sub
in
addb
idivb
aad
icebp
dec
rorl
mov
xor
jb
xchg
fwait
sbbb
mov
lods
push
sub
sub
lea
leave
xor
in
xchg
call
sahf
sub
jne
outsb
in
and
dec
addb
add
insl
movsb
inc
insb
jge
mov
shlb
scas
scas
dec
pop
pop
xchg
pop
movl
dec
dec
xchg
lock
adc
lds
sub
pusha
and
and
add
cli
push
push
xlat
xor
jb
imul
pusha
fcoms
dec
mov
and
jle
insl
add
sahf
xlat
mov
dec
test
mov
and
fimuls
aaa
jns
hlt
push
nop
pop
sti
adc
mov
sbb
ljmp
dec
testb
into
in
inc
cs
mov
sbb
sub
inc
sub
jmp
sub
add
movsl
mov
and
jb
lock
pop
pop
and
fwait
lret
je
push
rcrb
inc
lock
pop
aas
dec
xchg
js
mov
mov
push
nop
jo
jge
rcrl
push
dec
sbb
std
jae
dec
dec
leave
sti
mov
inc
adc
push
sbb
dec
and
test
and
xchg
add
nop
add
ret
add
lret
dec
and
pop
arpl
jg
jae
stos
mov
leave
daa
shrl
in
and
arpl
jecxz
inc
push
jbe
xchg
shlb
sarw
repz
movsl
cmp
jg
call
and
jnp
push
lret
mov
push
out
jbe
out
ret
test
adc
xchg
mov
sub
mov
mov
repnz
pop
idivb
jl
fwait
adc
test
or
les
fsub
loope
xor
insl
jnp
andnps
adc
push
or
xchg
jmp
inc
mov
xchg
and
mov
xchg
mov
mov
jb
flds
aam
arpl
cli
daa
icebp
sbb
inc
sbb
loope
push
adc
sbb
loope
jmp
mov
fcmovnb
add
push
insl
inc
add
sub
inc
in
inc
mov
xchg
xor
scas
rcl
ret
push
dec
mov
test
cmp
ljmp
out
mov
jnp
mov
xor
les
sbb
into
lds
scas
adc
mov
xchg
or
fwait
shrb
lea
pop
inc
stos
pop
xor
outsb
mov
cwtl
add
rolb
mov
insb
mov
jne
pop
in
stos
xchg
fcomip
rolb
adc
sahf
pop
jae
iret
jno
push
lret
inc
xor
jecxz
mov
mov
aaa
pop
sti
or
pop
xchg
xor
push
jb
mulb
xchg
pop
jle
push
mov
cltd
loope
in
cmp
cmp
xchg
xlat
dec
cmp
mov
daa
into
cli
sete
fcoml
jo
sbb
imul
ljmp
clc
cmpsb
xchg
inc
push
mov
jle
mov
div
test
push
test
push
push
rcll
insb
sbb
cmp
push
mov
jp
lret
sub
in
loopne
sub
pop
dec
sub
adc
fucomi
test
dec
loope
in
stos
sbb
scas
inc
frstor
mov
add
insb
add
divb
lods
in
dec
fildl
pop
sbb
movsb
scas
mov
jmp
std
pop
out
out
or
test
int3
dec
dec
push
dec
outsl
out
jge
lods
mov
mov
pop
xor
js
xlat
pop
pusha
in
sbb
aam
ljmp
dec
cmp
int
xor
jp
cmpsb
xor
inc
popl
xchg
sbb
add
into
push
mov
stos
in
shlb
jecxz
popf
lahf
mov
xor
daa
insl
push
stc
aad
out
sbb
jne
add
xchg
das
push
lret
inc
xor
push
mov
imul
sti
or
fwait
ss
adc
xor
loop
es
push
ret
add
lret
pop
mov
pushf
adc
aaa
jo
andb
dec
daa
ftst
sbb
test
enter
outsl
push
filds
pop
into
imul
sbb
lcall
xchg
push
adc
cli
stos
jl
sbb
xchg
aas
cmp
inc
pop
subl
xchg
repz
gs
arpl
pop
mov
fnsave
sub
es
jns
lahf
jge
or
mov
and
push
mov
push
jecxz
dec
test
adc
push
pop
add
aad
dec
lea
arpl
cmpsl
push
idiv
imul
add
mov
or
cltd
test
out
test
lcall
jp
rcrb
push
mov
xchg
in
jb
dec
out
sbb
mov
std
sub
stos
mov
push
pusha
mov
jle
cltd
pop
out
cmp
push
sbb
mov
sub
leave
pusha
push
int3
mov
imul
and
aam
outsb
in
leave
dec
mov
loope
or
mov
xchg
test
push
and
js
mov
pop
and
adcl
xor
stos
in
mov
ja
adc
repz
insb
in
test
lret
orb
push
mov
cli
rorb
mov
rclb
filds
mov
popl
adc
mov
inc
jb
icebp
ret
movsl
sub
and
inc
sub
pusha
xor
ss
xor
aas
jge
mov
popf
loope
dec
xchg
cli
lods
lds
rcrb
arpl
and
mov
sub
xor
sbb
push
push
gs
inc
add
iret
xchg
sub
mov
dec
je
jge
pop
sub
hlt
mov
and
pop
jg
daa
cltd
inc
mov
jae
imulb
xchg
es
and
mov
sbb
out
push
adc
xchg
sub
mov
into
push
sbb
das
xor
lds
mov
adc
add
scas
shll
inc
xchg
movsl
lock
jge
lock
das
xorl
dec
fcoms
xchg
or
pop
xor
dec
and
test
jnp
std
popf
push
repnz
sub
jno
xchg
sbb
dec
add
fadd
stos
out
int3
clc
iret
push
leave
inc
lea
add
mov
and
inc
stos
shlb
cltd
adc
push
sub
imul
cmp
pop
ficomps
cmp
insl
and
mov
cmp
iret
pop
rcll
enter
je
sbb
jae
xor
shrl
popf
cs
lret
js
and
test
mov
scas
xchg
xchg
movsl
int3
sub
pop
and
add
mov
cmp
negl
sbb
pop
push
sarb
outsb
fldcw
rclb
outsl
mov
mov
leave
sbb
mov
inc
mov
ficoms
push
inc
fistpll
les
fisubrl
push
adc
mov
pop
adc
sub
pusha
fildll
mov
pop
push
cmp
sub
lods
clc
aaa
fldt
ja
and
andb
mov
inc
cmp
shlb
push
mov
repnz
or
sti
dec
push
pushf
imul
sbbl
inc
dec
adc
and
cli
pop
xchg
inc
pusha
jge
pop
fildl
sub
push
popf
xchg
ret
aas
icebp
cld
movsl
or
ja
movsl
icebp
fidivs
shlb
mov
cs
xor
ret
mov
sub
push
cmp
xchg
cmp
aad
mov
out
xlat
loopne
mov
jp
push
jb
push
std
jno
into
cmp
push
sbb
js
or
mov
out
mov
mov
mov
jne
inc
in
in
jle
cmp
dec
pop
cmc
mov
jecxz
push
ret
xchg
int
fnstcw
lods
xor
es
mov
out
fsub
je
pop
stos
fucomp
rolb
test
mov
int3
push
xchg
mov
scas
cs
les
mov
mov
and
pop
sbb
jno
andl
in
or
lcall
frstor
mov
xchg
push
into
dec
push
add
sub
lret
jne
dec
paddsw
xchg
ja
pop
jo
xlat
cmp
lcall
fbld
xchg
int
les
rclb
mov
subb
mov
aaa
mov
push
movsb
aam
mov
mov
xchg
dec
ret
dec
mov
jmp
pop
or
popf
sub
mov
and
repz
pop
das
adc
cs
sub
add
mov
xor
cs
dec
jnp
mov
lcall
addb
iret
addl
pusha
int
sti
mov
lods
imul
dec
shlb
lcall
push
or
aam
clc
mov
xchg
adcl
adc
inc
sub
or
repz
add
jge
cli
add
ret
mov
movsl
pop
mov
lea
push
cmp
sub
sub
mov
cmp
adc
add
or
out
inc
sbb
mov
jne
test
sbb
dec
pop
icebp
push
ljmp
ss
jb
outsl
adcl
xchg
dec
aad
jle
push
or
add
loope
add
shlb
test
sbb
adcl
mov
adc
imul
movsl
sbb
cmpsb
push
int3
cmp
shll
sub
sub
loopne
stc
push
or
inc
js
or
dec
sub
in
lods
jmp
ficoms
clc
sbb
arpl
aad
ds
xor
addr16
and
std
xchg
or
ret
ret
cld
push
dec
sbb
adc
mov
aad
pop
jbe
adc
sar
insb
fmul
dec
in
gs
xchg
popf
push
movsl
in
sbb
mov
addl
add
fsubr
inc
pop
or
sub
jmp
fidivrl
adc
jg
xchg
pop
jg
cmpsb
add
jecxz
pop
mov
mov
sub
faddp
movb
je
push
add
dec
mov
or
jo
std
push
fsubp
sbb
inc
add
push
aaa
push
pop
jnp
pop
inc
cmp
mov
dec
dec
inc
sarl
mov
hlt
jle
das
ds
imul
push
pop
fiadds
bound
mov
sbb
movsl
push
jl
call
add
mov
leave
add
and
rolb
jns
adc
inc
repz
lret
sub
adc
cmp
and
es
add
and
vmwrite
lods
out
insb
sti
lret
mov
xor
fistl
stos
sbb
call
lods
call
cmpsl
leave
cwtl
push
jnp
stc
mov
cmp
int3
and
cmp
es
imul
rolb
popf
mov
sbb
shlb
pop
outsb
ljmp
stc
mov
xor
nop
lods
lret
or
push
dec
sub
push
or
mov
mov
stc
fsubrs
or
pop
shrb
adcb
adc
mov
pop
lds
sub
pop
movsb
ja
in
push
adc
mov
shrw
adcb
bound
bound
loopne
sbb
je
pop
rol
aaa
pushf
pop
std
dec
inc
rcrb
dec
je
or
mov
xlat
imul
mov
pushf
inc
scas
popf
jns
add
orb
fisttpll
or
loop
dec
mov
jg
imul
push
enter
das
rcrl
push
std
inc
or
bound
movsl
xchg
push
inc
outsb
mov
in
pop
mov
fmul
add
lret
popf
cmp
aam
jns
xchg
jge
xchg
fwait
imul
jmp
push
xor
es
and
mov
cmp
fldt
push
cmp
mov
mov
dec
mov
and
sbb
add
notl
mov
pop
arpl
stc
xor
pusha
jmp
inc
repnz
sbb
std
outsl
lret
pop
adc
mov
push
sarb
mov
icebp
into
dec
push
loopne
lea
fwait
shrb
ret
mov
xchg
pusha
idivb
inc
and
nop
outsb
cwtl
enter
imul
dec
rcll
mov
movsl
xchg
ljmp
sbb
test
rcll
jbe
cltd
enter
inc
das
mov
fsubr
cltd
pop
rorl
adc
test
mov
pop
pop
popf
ret
jmp
popf
repz
jns
xchg
adc
ljmp
mov
bound
fdivrl
mov
mov
ret
iret
jle
add
sahf
shrb
mov
or
or
add
jno
push
icebp
aam
sbb
shr
lods
stc
inc
loopne
pushf
cmp
sub
jae
xlat
ret
rcr
loope
push
lret
in
inc
test
out
dec
jg
cltd
cmc
fwait
loope
dec
in
and
jge
cmpsl
scas
or
pop
add
jmp
cmp
pop
cmp
fnsave
inc
mov
mov
or
or
pop
lret
andb
pop
xor
adc
inc
xor
sti
mov
jge
cmp
sbb
mov
aad
inc
pop
jns
ror
mov
jae
jecxz
cmp
inc
jns
sbb
and
cmp
push
xchg
fildll
pop
push
cli
sub
xlat
xchg
xchg
js
mov
sub
jno
sbb
dec
popa
sub
jecxz
mov
pop
test
sub
sbb
mov
sub
xchg
dec
mov
push
cwtl
push
addr16
mov
cltd
jnp
dec
int3
call
ljmp
scas
stc
push
adc
enter
sbb
sti
test
pop
sub
pushf
sbbl
loop
int3
aaa
and
addr16
test
cmpsl
test
repz
ss
xor
dec
aam
xchg
shlb
mov
icebp
les
mov
push
or
rcrb
cmp
sub
pushf
push
mov
jb
mov
jl
fnstsw
inc
stc
into
dec
iret
and
fbstp
cmp
test
jp
pop
cmpb
push
das
sbb
pop
leave
lcall
rcrl
ss
xor
fisubrs
lea
in
test
insl
cmp
in
pop
and
enter
xor
rcrl
mov
lods
fisubrs
bound
mov
outsb
push
cmpsb
xor
mov
xor
cwtl
inc
pop
popa
and
and
jle
lds
lret
hlt
inc
cltd
xchg
aaa
cltd
out
lret
mov
xor
add
ja
arpl
push
iret
loopne
test
dec
shrb
pusha
in
fistpll
xchg
pushf
mov
jne
scas
jbe
fiaddl
adc
clc
pushf
jae
pop
sub
cmp
fcom
mov
and
add
sub
xor
lea
inc
stc
pusha
xchg
jb
loop
pop
xor
cmc
pop
out
mov
nop
push
pop
push
push
loopne
es
orl
push
jge
add
jo
sbb
int
jno
mov
push
sti
mov
shll
mov
or
leave
clc
jmp
addb
mov
jecxz
xchg
divb
sub
inc
inc
or
xrstor
dec
sbb
stc
adc
data16
inc
inc
pop
xor
cmc
mov
mov
add
and
dec
cmp
xchg
jbe
std
inc
and
mov
mov
ret
enter
inc
mov
mov
mov
cmpsb
sub
sbb
mov
out
mov
mov
cmpsl
adc
dec
inc
movlps
dec
les
ds
lods
xor
in
idivl
clc
xchg
jge
jle
fistl
sbb
loopne,pn
out
xchg
xor
dec
xor
outsl
imul
jo
ret
jl
push
and
call
dec
inc
cmp
daa
popa
mov
sti
jne
fmull
das
popa
mov
sti
inc
or
mov
movsl
neg
jbe
adc
daa
fiaddl
shr
or
inc
cmp
xchg
add
ret
jmp
and
and
cmc
fsubr
and
sti
sbb
dec
rorl
jmp
dec
cmpsl
notb
adc
pusha
lds
in
cmp
sti
int3
cli
lret
mov
push
inc
daa
cmp
or
jae
je
mov
dec
push
testl
adc
test
fisttpl
dec
inc
movsl
push
xchg
fs
fwait
and
lock
adcb
pop
lret
mov
xlat
cmp
scas
leave
mov
cwtl
sbb
and
scas
pop
xchg
mov
gs
outsb
push
add
mov
fistpll
dec
cmc
daa
push
push
rorl
and
fstpl
inc
cmp
fbld
mov
lods
add
and
fildl
into
push
mov
jg
xchg
daa
daa
and
fistpll
and
popf
imul
inc
adc
xchg
out
test
aas
xchg
mov
mov
outsb
popf
jnp
sarl
pop
sbb
sbb
leave
jge,pt
jecxz
and
pop
fsubl
lcall
dec
jnp
pop
lret
les
add
addb
gs
mov
push
or
sbb
xchg
dec
fdivrl
iret
repnz
pop
divl
or
pusha
xchg
in
add
decb
stos
jnp
std
adc
shll
mov
lods
addr16
js
sub
xor
adc
dec
jae
add
xlat
lret
and
test
xor
mov
inc
push
jo
add
daa
xor
mov
iret
xor
lock
repz
into
mov
push
test
popa
mov
hlt
sub
sub
ljmp
cmpl
push
add
sub
push
test
neg
mul
aam
cmpsb
std
test
subl
mov
push
movsl
push
jg
or
lret
cmp
ss
in
xchg
mov
adc
adc
push
add
dec
dec
stos
mov
lret
mov
push
and
mov
sbb
aas
xchg
fmulp
outsb
in
inc
sub
xor
addr16
jmp
lret
test
je
mulb
ss
lret
cmp
sbb
jo
sbb
xchg
fstpt
ret
pop
loopne
cmp
jg
pop
cli
mov
cmp
in
inc
jb
sub
jge
inc
inc
cltd
cmp
push
loop
sarb
outsb
dec
stos
sbb
lcall
aas
es
mov
cmp
and
pusha
les
lods
push
xchg
xchg
mov
in
fbld
jmp
dec
mov
and
adc
jne
lcall
or
dec
aaa
jb
aam
lea
fwait
repnz
cmp
lcall
testb
imul
add
imulb
cwtl
mov
sub
rcll
cltd
pop
jmp
dec
jae
sahf
and
push
fwait
repnz
jbe
lahf
pop
fildll
cmc
mov
cmp
add
outsl
lods
je
sbbl
test
inc
int
cmp
mov
fadds
pop
push
stc
nop
xor
dec
test
add
inc
sbb
in
push
xchg
test
lcall
icebp
js
je
out
lret
int3
hlt
sbb
mov
jb
pop
sbb
loop
bnd
and
rorb
xlat
mov
add
xchg
pushf
dec
data16
dec
xor
mov
cmp
lret
fwait
shlb
pusha
into
sub
popf
sti
and
add
ljmp
pop
and
test
push
ljmp
frstor
cmp
xor
icebp
mov
sbb
jo
jnp
sbb
xor
mov
popa
data16
jge
mov
jp
stos
push
and
inc
push
fadds
mov
mov
dec
call
addr16
popa
jecxz
mov
cmp
sbb
lret
movsl
mov
add
iret
adc
iret
mov
sub
fdivs
cld
xchg
jl
mov
jge
repnz
cmpb
loope,pt
test
xchg
addl
adc
add
iret
das
mov
sbb
sub
pop
jmp
fldpi
adc
sar
jp
ss
jns
scas
or
shrl
mov
subb
and
adc
arpl
clc
inc
jmp
ret
enter
xchg
pushf
test
push
pop
inc
add
or
xor
iret
jns
rorb
hlt
push
fadd
fisubl
data16
sbb
xor
test
aam
inc
jg
lcall
sbb
mov
sbb
iret
sub
mov
cmp
mov
stos
inc
sub
jg
push
clc
push
fidivrs
lret
sahf
mov
dec
movb
sbb
pop
dec
or
sbb
jno
adc
in
xchg
sbb
pop
adc
pop
out
xor
jg
mov
call
sbb
test
fwait
out
pop
insl
jno
or
decb
call
and
xchg
repnz
push
sub
pop
movsb
xchg
inc
sbb
push
mov
sub
mov
andl
mov
push
sbbw
outsb
sub
xchg
stos
xchg
push
add
jns
test
jne
shl
fstpl
push
test
xlat
sub
mov
pop
add
cs
into
cmpsb
and
add
mov
inc
imul
lock
popa
cmc
lahf
push
xor
repnz
and
xor
insl
mov
inc
push
outsl
push
xlat
inc
repz
mov
ret
cltd
hlt
mov
pop
add
rol
mov
push
mov
and
loop
or
xchg
imulb
aas
mov
cli
lret
cmp
pop
sbb
decb
sub
clc
cmpsl
push
test
lcall
into
fwait
or
sti
fstpl
inc
and
fisttpl
cld
and
iret
pop
dec
pop
sub
sbb
dec
adc
pop
loope
int3
dec
push
icebp
inc
inc
pop
and
stos
jbe
sbb
pop
out
cmp
insl
cwtl
mov
add
daa
xlat
mov
xor
push
es
jmp
fsubrp
dec
lahf
out
fimull
jle
lds
aad
mov
popf
outsl
js
js
cli
aam
cmp
test
push
dec
cwtl
pop
cmp
jbe
mov
aam
lret
xchg
jb
and
mov
shrb
ja
hlt
mov
loopne
add
xor
lods
test
outsl
mov
adc
push
repnz
inc
pop
mov
stos
es
mov
sub
fisubs
lea
dec
adc
or
testb
cmp
jmp
cmpsb
out
mov
imul
int
enter
push
fwait
cwtl
stos
idivl
out
jns
pop
fcmovnb
mov
mov
xchg
and
pop
leave
jb
mov
mov
aas
xlat
jne
mov
jb
repz
cmc
int3
dec
inc
outsb
mov
xchg
sub
ljmp
push
push
hlt
jl
test
push
jmp
movsl
pop
addl
dec
pop
xchg
dec
in
test
into
push
sbb
pop
test
loope
std
pop
lret
sub
and
ja
adc
mov
inc
stc
mov
mov
das
pop
fildll
pop
sbb
sti
mov
and
enter
cmp
das
pop
pop
test
cmpsl
jmp
inc
and
adc
and
or
addr16
inc
xchg
notl
add
std
jmp
cmc
sahf
mov
cmpsl
bnd
inc
dec
xchg
mov
in
add
xchg
mov
and
pushl
leave
lea
loope
and
fcoms
and
out
pop
mov
stc
mov
divl
inc
lock
pop
popa
test
movsl
je
fidivl
loop
in
xchg
pop
std
iret
jmp
aas
pop
xor
por
pop
leave
jns
and
cld
std
mov
mov
mov
pop
movl
mov
enter
ljmp
fisubs
sub
mov
or
mov
fiadds
xchg
adc
jp
pop
in
add
test
push
inc
or
int
ret
mov
shlb
mov
outsb
cwtl
std
pop
push
dec
mov
mov
push
adc
insb
jg
inc
cs
adc
lea
inc
aad
test
stos
pop
mov
rol
aad
push
dec
loopne
adc
subl
subb
lods
call
pop
fadd
mov
je
mul
jae
mov
in
push
fisttpl
aaa
xchg
dec
sub
pusha
add
testb
xor
jg
push
aad
pop
jns
inc
sbb
addl
nop
xchg
fsubs
fiaddl
push
fwait
mov
ljmp
mov
adc
xor
add
je
stc
sbb
ja
inc
sbb
pop
jge
lods
cltd
je
dec
fwait
cmpsb
xorl
sbb
test
or
inc
ret
shrl
pop
sahf
push
mov
cwtl
xchg
and
pushf
jb
pop
repnz
or
adc
adc
inc
mov
sbb
idiv
pop
outsb
fdivr
cwtl
pop
mov
xor
jnp
mov
mov
xchg
pop
jg
xor
and
mov
sub
aad
pop
cmp
scas
mov
cmc
adc
ja
and
insl
jno
lods
jmp
js
jge
inc
fldenv
adc
in
mov
in
into
sub
push
dec
jecxz
xor
push
cmpsl
sub
or
adc
mov
into
fiaddl
adc
jle
cltd
mov
out
iret
pusha
test
lahf
xchg
adc
les
int
in
mov
bound
add
jo
sub
stos
cmpsl
iret
mov
or
fsubl
and
adc
xchg
aaa
insb
movsb
push
fistps
xchg
dec
inc
mov
je
inc
pop
rclb
inc
lcall
inc
sbb
bt
xor
pop
cwtl
mov
shr
imul
dec
movswl
cmp
enter
insb
roll
fadd
fcmovbe
adc
inc
cltd
adcb
add
sub
xlat
jg
out
push
sbb
lea
repnz
push
lds
xchg
movsl
push
iret
jae
sub
xchg
clc
addr16
adc
popa
fadds
cmp
or
es
inc
ds
dec
cmpsb
mov
jb
push
or
test
ja
pop
or
xor
aaa
dec
rorb
cmpsl
insl
mov
in
sbb
mov
sbb
scas
jg,pn
cmp
dec
add
mov
out
leave
pop
loopne
mov
dec
xchg
cli
pop
loope
mov
mulb
dec
xchg
clc
pusha
dec
push
clc
repnz
gs
shlb
gs
mov
mov
cwtl
hlt
sahf
mov
les
sub
inc
push
mov
sub
bound
inc
sbb
popa
js
xchg
scas
rcll
sub
out
jge
ss
push
stos
movsl
lock
lret
or
pop
mov
jg
aas
xlat
mov
js
sub
dec
xchg
cmp
jl
push
lret
imul
out
or
outsl
and
les
into
push
push
mov
leave
adc
fldcw
mov
addr16
sbb
je
mov
pop
scas
ljmp
add
in
test
sub
out
xchg
mov
cmpl
sbb
popa
pop
push
xchg
inc
and
push
mov
xor
pop
addr16
iret
jnp
fs
sbb
dec
mov
jge
xchg
dec
icebp
xchg
push
or
ficoms
xchg
adc
inc
imul
push
ja
ljmp
cltd
stos
test
mov
roll
mov
incb
jp
and
movsb
dec
out
cmp
out
nop
test
pop
push
dec
aad
lret
test
mov
repz
jb
lret
mov
xchg
outsl
cmp
cwtl
or
sub
and
xchg
out
stos
fistpll
arpl
push
jle
mov
nop
mov
lret
xchg
push
hlt
or
push
rorl
and
jl
or
mov
aam
mov
inc
xor
dec
scas
in
sbb
sbb
pop
into
mov
add
jbe
dec
jle
fdivrl
jmp
clc
mov
xor
les
fcomi
movsl
ds
ss
test
mov
enter
out
das
mov
jns
icebp
pushf
cld
inc
ja
cld
mov
rorb
out
sbb
adc
imul
inc
hlt
fdivrs
dec
fisttps
es
cmc
push
ja
push
xchg
movsb
jae
scas
adc
das
stos
mov
mov
add
test
pop
dec
enter
shlb
ljmp
mov
inc
loopne
ror
and
adc
fmulp
fcmovbe
pop
lahf
adc
out
int3
inc
imul
fbstp
mov
mov
je
pushf
pop
aas
aaa
fcmovnbe
mov
mov
mov
lock
rolb
test
cld
pop
in
dec
mov
jle
mov
cmc
add
jne
mov
add
mov
repz
lcall
pop
icebp
inc
adc
sub
aam
lods
dec
sbb
or
lret
in
cli
testl
xor
cltd
out
out
repz
jmp
icebp
rorl
popf
arpl
rclb
dec
xchg
shrb
lock
iret
fidivrs
cwtl
pop
int
cmp
dec
je
mov
aas
xor
out
bound
mov
mov
adc
push
mov
imul
std
or
into
mov
in
call
jbe
stc
outsl
xchg
pushf
xchg
push
jge
and
addl
adc
adc
mov
jns
test
decl
cmp
xchg
inc
mov
push
lods
mov
mov
fcompl
sub
cmpsl
enter
lcall
pop
adc
cli
jno,pn
xchg
pop
xchg
jae
out
int3
out
popf
inc
and
movsl
repnz
add
jno
lods
mov
std
inc
pop
fistpll
test
cmp
in
cmpsl
mov
add
mov
xor
and
mov
xchg
inc
mov
pop
xchg
dec
xor
gs
sub
xor
jbe
andl
jg
addr16
fcoml
xchg
push
sbb
fcos
and
pop
jmp
cmpsb
xor
out
shlb
mov
test
jns
imul
hlt
mov
divb
mov
or
jne
std
push
xor
xchg
cmc
push
shrb
pop
ret
mov
push
mov
aam
outsb
and
mov
int
mov
fld
add
add
mov
leave
icebp
dec
lret
jmp
pop
je
jns
sbb
roll
inc
push
imul
pop
shlb
inc
lcall
sbb
xor
inc
dec
xchg
fisttpll
loopne
push
or
adc
push
adc
aaa
bound
mov
pushf
std
movb
inc
inc
loop
pop
lods
mov
dec
fnsave
cmp
pushf
sub
pop
imul
fldt
mov
lods
xchg
fisttps
adc
sbb
popa
fcompl
lahf
jge
pop
in
mov
push
mov
aad
fistpll
lahf
add
cli
and
mov
inc
jno
and
mov
lret
dec
jmp
mov
push
sbb
and
add
sbb
add
rcr
and
mov
lds
add
pop
in
sarl
mov
int
lret
cmp
pop
daa
mov
and
xchg
inc
imull
and
sbb
sub
pop
int3
xor
sbb
add
stos
mov
mov
pop
jne
add
pop
in
enter
dec
pop
inc
gs
mov
mov
sbb
push
add
int3
xchg
je
mov
fcomps
xor
pop
mov
pop
push
inc
repz
cmp
push
push
sub
jns
add
out
inc
jae
mov
push
mov
icebp
cld
fwait
cmpl
je
cmp
imul
in
cmp
jl
insb
mov
lods
push
imul
mov
arpl
dec
inc
add
inc
inc
mov
xchg
jns
xchg
cmp
xchg
insl
cmp
push
test
out
sub
idivl
int3
mov
je,pt
mov
leave
jbe
in
and
das
mov
push
int3
adc
sub
ss
lods
mov
aad
jge
cmpsb
clc
lods
repnz
fwait
sub
cmp
mov
push
les
inc
sarb
movsb
cmp
int
xchg
dec
mov
adc
push
lds
loope
in
out
add
aad
or
jp
aas
jl
scas
movsl
and
and
popf
dec
adc
jb
xlat
and
mov
jnp
out
out
pushf
aas
xor
pop
sbbb
adc
into
sbb
fadds
add
jae
nop
cmp
cmp
mov
mov
jl
rol
call
iret
enter
xchg
pop
mov
adc
push
xor
pop
call
in
sti
test
mov
in
pusha
jl
xchg
adc
aaa
mov
inc
call
jno
or
fs
mov
inc
and
repnz
das
xor
adcl
ds
stos
ja
fs
out
loope
ja
sub
pop
jb
adc
fisttpl
pop
inc
lcall
jne
lods
push
sub
ss
push
pop
and
je
cmp
and
cmp
ret
pushf
in
pop
mov
mov
mov
ret
and
dec
pusha
mov
adc
pop
jl
xor
lds
lods
stos
sti
sub
cmp
push
lea
fistl
jb
fdiv
push
enter
xlat
test
cwtl
push
icebp
std
stos
push
jp
fildl
mov
pop
inc
loopne
outsl
and
add
jnp
cltd
dec
lods
add
and
or
iret
jge
jae
dec
aaa
in
xchg
popf
jg
fldl
mov
je
xor
sub
adc
inc
or
outsb
aam
scas
xor
shl
std
fsubl
jl
or
loop
stos
pop
outsb
ret
bound
fldenv
iret
mov
aas
mov
insl
sarl
dec
xor
jle
sahf
mov
testl
xlat
imul
clc
sub
inc
adc
daa
push
xor
movsb
sbb
cmp
xor
mov
mov
pop
sbb
out
sub
hlt
push
shlb
xor
sub
dec
popf
ss
lahf
aam
paddd
sub
adc
dec
loopne
insl
int3
add
mov
push
ror
xchg
pop
mov
or
sbb
inc
int3
je
push
lock
add
mov
add
arpl
cwtl
mov
repz
xchg
add
xchg
cmpsb
and
loope
lock
mov
jnp
ret
or
pop
jge
test
sbb
lea
or
dec
pusha
xchg
or
xchg
ret
ljmp
mov
and
xchg
pushf
or
gs
mov
jnp
and
cli
add
loopne
je
ret
inc
push
sbb
add
mov
inc
mov
and
aam
lods
adc
in
call
adc
lcall
add
jo
lock
jp
orb
xor
leave
cmpsb
sbb
add
or
sbbl
hlt
test
out
iret
add
cmpsl
fisubl
ja
lret
mov
fwait
lret
testl
xor
mov
cwtl
sahf
loopne
mov
lahf
xchg
inc
cmpsb
divl
addr16
pop
daa
or
sub
cwtl
stc
outsb
cld
lret
xchg
add
mov
dec
mov
pop
pop
pushf
dec
inc
rcll
xchg
pop
in
or
imul
cwtl
xchg
sbb
mov
xor
add
into
and
add
cmp
ret
jae
mov
cltd
gs
sbb
je
add
gs
add
loop
aad
pushf
insb
jae
xor
aad
jle
inc
cmpsb
enter
test
andb
js
add
cmp
inc
mov
jl
cmp
lcall
sub
dec
les
jns
pusha
test
scas
stc
movsb
aam
shrb
rolb
mov
fnsave
iret
xor
sub
cmp
jmp
imul
push
inc
push
cmp
shll
movsl
je
pop
vpslld
cmp
pop
or
iret
xlat
cmp
inc
xchg
mov
and
xchg
hlt
or
ds
dec
xor
out
mov
ja
das
cmp
xchg
call
push
push
fistpll
mov
or
rclb
mov
test
pop
mov
repz
fs
pop
movsl
es
fidivl
arpl
shll
loope
add
pop
xchg
in
push
es
lret
lods
shr
sbb
pop
xchg
mov
and
dec
xchg
mov
movsb
in
loope
xchg
cmp
cmp
scas
jg
lds
jmp
pop
aaa
mov
cli
loopne
pop
push
sbb
lods
mov
pop
pop
and
lahf
ret
aam
sbb
pop
lods
loop
xor
shlb
sahf
push
or
mov
loope
jns
pop
lret
scas
push
lods
jno
adc
mov
imul
mov
xchg
test
sbb
and
pop
dec
mov
mov
push
repz
loope
jae
dec
cmp
divb
push
ja
jno
dec
or
jns
lods
and
fwait
adc
jo
jp
push
xor
push
push
ja
add
mov
and
jo
enter
jo
sbb
movsb
cmpsb
lcall
pop
mov
icebp
or
lea
leave
sbb
aas
mov
pop
dec
xlat
push
scas
int3
dec
mov
lock
sub
ret
aas
je
mov
scas
js
dec
lret
pop
push
mov
dec
add
mov
xor
clc
repnz
adc
aad
ds
inc
sbb
mov
xchg
cmp
daa
and
out
pop
fcom
cmp
lock
pop
or
dec
mov
bnd
xor
pusha
xchg
xorb
cmp
mov
outsl
pop
sub
test
lahf
imulb
insb
aam
pop
push
lahf
add
aas
test
dec
test
add
scas
xchg
xchg
scas
mov
std
mov
pop
and
push
rorl
cmp
sbb
mov
lcall
hlt
mov
pop
push
jb
fadd
or
cmp
mov
cld
idivl
inc
cmp
push
push
cmpsl
cbtw
mov
getsec
xor
xor
add
js
inc
sub
aam
dec
lret
pop
ret
idivl
jb
addr16
rolb
mov
jnp
sbb
xor
lcall
daa
jo
lcall
imul
dec
loope
pop
lds
sarb
in
aas
insl
lds
out
mov
fldt
fmuls
addps
pop
sub
shlb
test
aam
inc
rorb
in
xor
testl
lcall
loope
mov
add
out
add
push
jo
mov
test
add
mov
mov
cmp
mov
xchg
test
mov
xchg
cs
in
aas
sub
or
cltd
mov
fcoml
jmp
cmp
inc
pop
cwtl
cmp
jo
aaa
mov
push
out
cmpsb
pop
mov
jno
pop
test
inc
popa
sub
lret
outsb
xchg
jecxz
push
andl
xor
mov
push
stc
outsb
mov
movsb
ds
es
xchg
inc
adc
dec
mov
mov
sub
andl
insw
jecxz
out
or
add
outsb
ss
jnp
inc
sbb
xchg
cld
pop
in
mov
or
and
outsb
jns
stos
into
jmp
ds
dec
fisubrs
xor
mov
cs
out
es
ljmp
fs
pop
scas
fmuls
or
addb
in
xchg
fildll
push
xor
inc
hlt
xor
addl
stos
xor
add
lods
mov
aas
sub
pop
fstpl
and
and
sub
ds
repnz
cmp
xor
fistl
cmp
jg
push
inc
lds
mov
xchg
outsl
dec
stos
sub
jmp
push
push
dec
stos
mov
and
or
xchg
loopne
out
sti
sbb
out
mov
cmp
fs
sub
aas
es
pop
mov
rep
cmp
pop
inc
imul
ja
insb
sti
adc
xor
mov
jo
sub
popa
add
in
adc
add
sbb
or
out
mov
fwait
sub
and
insb
hlt
insl
scas
cs
scas
out
cmpsl
into
xor
dec
sub
xor
push
popf
movsl
add
popf
pop
xchg
arpl
or
lcall
add
xchg
xchg
add
dec
mov
leave
and
mov
ds
into
mov
fistpl
ljmp
sahf
out
push
xchg
push
and
cwtl
sub
rcrb
fcomps
ljmp
repz
dec
mov
sub
in
inc
aaa
shll
adc
xchg
push
in
movsl
xchg
sarl
and
push
add
sbb
dec
mov
and
rcll
out
mov
push
add
xchg
and
in
mov
cs
mov
adc
cmpsb
or
mov
adc
stos
push
test
push
cwtl
push
dec
adc
dec
jle
xor
out
sub
cmpsb
popa
mull
iret
mov
jge
xor
and
cmp
push
das
xlat
std
fwait
dec
cli
pop
nop
sarb
xor
lods
lret
and
and
sbb
mov
icebp
dec
sahf
in
vmwrite
inc
mov
lock
int
jl
dec
adc
xor
xor
clc
shrl
rorb
stos
pop
or
sub
dec
addl
das
xlat
mov
repz
rclb
sti
mov
lret
pusha
cmp
pop
out
sti
xor
dec
test
fdivr
aam
loope
jb
jg
lods
lret
cmp
divps
fcoms
movsl
movsl
and
ljmp
cwtl
adc
sub
ljmp
jno
stc
dec
lcall
rcll
ds
popf
aam
dec
jl
xchg
push
int
add
enter
in
test
loope
fsubrl
int3
imul
sub
pop
fwait
dec
sbb
incl
add
test
inc
leave
inc
lret
shrl
sbb
fdivrs
xchg
push
add
out
divb
repnz
mov
adcl
sub
pop
insl
insl
sarb
cmp
mov
add
loopne
cli
push
ucomiss
xor
pop
mov
push
insb
fs
jge
clc
jns
sbb
je
push
insb
inc
loope
bound
inc
std
add
cmp
xchg
nop
imul
pop
adc
xchg
adc
cmp
out
pslld
rolb
inc
xor
sbb
dec
sarb
mov
or
lods
cmp
pop
es
xor
orl
mov
mov
aad
and
and
leave
out
jne
xlat
fldt
test
imull
adc
mov
dec
xchg
sbb
mov
mov
outsb
xlat
cmp
shl
and
dec
pop
mov
in
stos
xchg
cmp
mov
leave
repz
pusha
ret
fadds
loopne
cmpsl
jecxz
mov
jl
loope
mov
push
push
pop
xor
push
xchg
popf
hlt
cmp
or
inc
push
std
or
addr16
repnz
xor
sub
leave
into
outsb
mov
mov
psrld
sbbb
out
lret
ficomps
imul
dec
xchg
out
imul
mov
mov
inc
push
xchg
cltd
dec
adc
repz
cmp
pop
inc
mov
xor
adc
cmp
mov
outsb
xchg
jns
shrl
aam
cmp
adcb
lock
scas
leave
rcrl
jns
sbb
inc
es
daa
iret
aam
add
push
test
insl
std
lods
fstpl
and
mov
xor
adc
sti
push
cwtl
jae
aas
or
mov
jle
gs
or
out
inc
das
mov
lret
mov
mov
sbb
movsb
xor
aas
sbb
frstor
std
rorl
mov
adc
mov
sbb
sub
mov
lret
loope
mov
fwait
mov
sbb
fistps
popa
ljmp
jmp
adc
mov
mov
mov
xor
in
inc
pop
cmp
dec
lret
imul
rcrb
inc
rcr
xchg
and
cmpsl
mov
add
sub
jne
mov
rorl
xor
popa
insb
pop
push
lret
pop
mov
mov
in
lret
out
test
pop
int
mov
mov
movsb
jns
xor
add
mov
mov
mov
mov
test
movsl
sbb
inc
cli
mov
leave
fsubr
inc
and
mov
icebp
out
dec
mov
mov
ret
lahf
mov
mov
xor
xchg
mov
push
in
lret
rcr
xor
scas
mov
mov
pop
push
int3
fs
sahf
cmpsb
cmp
test
cli
out
sbb
scas
mov
push
add
cmpsl
or
rcrb
ss
jnp
test
xor
adc
fmuls
xchg
push
jmp
rcrb
test
and
movsl
loope
cmpl
pop
push
cmp
and
cmc
popf
jnp,pn
jge
adc
push
scas
cwtl
xchg
inc
cmp
jno
sarb
loope
cmpsb
das
dec
insl
xor
call
stos
int3
xor
adc
cmp
pop
add
data16
jle
jecxz
add
repnz
in
mov
jmp
sbb
pop
fsub
inc
mov
test
push
out
loopne
mov
xchg
negb
push
in
add
es
nop
iret
mov
insb
in
or
jl
push
jne
add
adc
stos
shrl
sarb
js
ds
and
lret
lret
jl
adc
or
cmp
jl
ljmp
clc
pop
loope
movsb
inc
mov
dec
mov
aaa
add
das
pop
aaa
scas
fcomi
lret
mov
and
outsl
xor
fadd
ret
adc
push
mov
and
sbb
xchg
lcall
ss
data16
add
enter
mov
or
cmc
psubsw
imul
insb
into
repz
push
mov
nop
in
rolb
lods
iret
cmp
push
inc
sbb
pop
push
fs
out
xchg
push
dec
inc
ret
pusha
push
and
shrb
and
mov
jg
fildll
sbb
jle
xchg
cmp
mov
insb
cmp
dec
cmc
add
pushf
cli
add
insl
add
in
mov
xorl
outsb
push
addr16
sahf
mov
jbe
out
scas
mov
cmp
lcall
push
adc
scas
xchg
iret
in
mov
daa
shrl
sbb
insl
cwtl
int
cmc
lcall
sbb
shlb
sub
ss
cld
jno
xlat
shrl
adc
lea
fists
cmp
scas
js
mov
std
nop
sti
shll
insl
iret
inc
mov
mov
mov
xchg
repz
test
mov
or
leave
out
cwtl
lock
in
stc
lret
dec
jl
fs
sbb
mov
push
movsl
es
stos
loopne
addr16
dec
dec
xchg
idivl
call
jae
aad
xchg
and
cltd
sbb
das
jl
cltd
pop
sbb
out
test
scas
dec
inc
dec
lods
mov
adc
imul
jns
aaa
and
and
lret
mov
cmpsl
cli
mov
int3
push
or
cmp
movsb
fnstenv
fdiv
imul
or
int
dec
mov
ljmp
int3
pushf
cmc
arpl
or
jbe
mov
mov
dec
dec
sub
mov
fdivr
xchg
lods
dec
xor
outsb
xchg
cmp
nop
push
ret
push
push
push
dec
mov
test
or
inc
adc
inc
dec
jg
mov
sub
punpcklbw
es
stc
xor
xchg
xchg
scas
jecxz
mov
inc
sbb
xchg
loope
cwtl
shlb
popf
shll
fstps
push
cmp
clc
push
dec
mov
mov
adcb
cmpsl
ret
leave
adc
dec
gs
mov
ficoms
xchg
fnstcw
push
les
fisubrl
pop
or
pop
into
sub
cmp
fcmovb
rclb
xor
test
inc
ljmp
mov
push
xor
mov
push
jg,pt
mov
hlt
shll
mov
dec
icebp
push
push
ret
je
dec
js
dec
pop
add
jb
sub
repz
stos
mov
mov
sub
dec
arpl
in
and
icebp
push
dec
popf
and
sub
mov
outsl
aad
xchg
hlt
std
jne
not
js
sbb
push
popf
xor
mov
fwait
xchg
and
push
adc
pop
adc
mov
mov
into
int3
cmp
in
inc
xchg
or
jge
xor
in
mov
xor
stc
push
inc
jge
mov
cmpsl
mov
xor
and
jb
cli
das
nop
mov
data16
sarb
sbb
fsubrl
dec
xchg
cmp
out
lods
push
shlb
cwtl
xchg
dec
adc
fwait
and
push
pop
add
into
sbb
cwtl
or
ficompl
xor
out
dec
and
aas
add
sarl
fxtract
aam
xor
sub
sbb
cwtl
imul
xor
and
test
adc
mov
add
push
lods
cmp
xlat
and
popf
pop
es
and
nop
or
cmp
loopne
sub
imul
sub
in
and
lock
pop
xor
adc
mov
xor
les
popf
inc
cmp
and
dec
int
scas
jl
inc
xchg
gs
clc
mov
movsb
les
xor
outsl
scas
repnz
cmpsb
mov
pop
jmp
mov
sbb
fidivs
fisubrl
xor
mov
lea
stc
das
fwait
push
addl
mov
dec
repz
mov
xor
jo
inc
xlat
lcall
testb
push
jbe
subb
idivb
xor
out
push
jg
and
test
pop
lock
loope
or
sbb
outsl
popf
push
mov
pop
stos
insb
inc
mov
lahf
mov
inc
jg
into
jcxz
jbe
cmpl
out
sub
stos
aad
fidivrs
mov
bound
pop
out
aam
mov
push
add
or
and
popf
scas
mov
sbb
daa
imul
pop
mov
lock
dec
push
imul
push
adc
sahf
stc
sub
fcom
popa
mov
or
push
sub
lds
ljmp
xchg
lcall
jnp
lcall
cmp
ds
jl
push
notl
and
cli
rclb
mov
sbb
xor
out
or
xchg
fisubrs
inc
dec
fdiv
lcall
jp
lcall
xor
icebp
mov
jle
mov
pop
test
and
in
in
sar
mov
mov
xchg
enter
stos
or
adc
pmaxub
clc
add
adc
adc
or
das
xchg
adc
lahf
outsl
sub
lea
xor
adc
lock
scas
gs
mov
iret
std
shrb
js
add
mov
test
gs
jnp
dec
pop
stc
cli
sbb
aam
inc
and
leave
imul
adc
xor
jl
jmp
sub
or
aas
pop
call
movsb
clc
ljmp
addb
pop
xor
mov
leave
mov
and
test
cmp
pop
cs
jle
or
inc
jns
push
dec
add
mov
cmp
ss
sahf
ret
inc
dec
shrb
cmp
mulb
fadds
pop
mov
aad
out
sub
xor
inc
mov
imul
inc
imul
testl
fimull
sub
stos
lds
outsb
push
fsubr
test
fdivs
out
push
stos
lahf
or
cwtl
jle
int3
out
mov
imul
push
dec
fidivrs
int
xchg
lcall
dec
ljmp
popa
fnstcw
lahf
lods
mov
xor
imul
lcall
test
out
movsb
xor
ret
mov
iret
outsb
mov
cli
xchg
divl
xchg
jno
sub
cmp
int
shlb
and
dec
inc
mov
popa
push
sbb
or
outsb
ja
or
mov
sbb
adc
sbb
push
push
popa
insl
ds
in
ret
jl
lods
add
jnp
sahf
imul
fs
popa
dec
lcall
das
aas
or
sub
push
rorb
mov
test
dec
cli
popf
add
dec
lds
bound
push
and
add
out
push
xor
jmp
stc
mov
push
sub
enter
sbb
add
loope
inc
std
cmp
ja
out
xchg
inc
lea
outsb
xchg
sub
into
aad
cmpl
aam
mov
dec
adc
dec
jg
sbb
mov
mov
lcall
and
push
and
xlat
fwait
test
xor
push
pushf
ja
pop
das
icebp
test
xorb
jne
enter
mov
push
cmp
out
cmc
out
adc
sub
xor
cwtl
enter
mov
jp
loop
lods
push
data16
ja
in
enter
mov
mov
aas
adc
packuswb
add
push
or
rclb
dec
push
push
sahf
pop
ret
sbb
xor
xchg
xchg
sub
fwait
leave
mov
inc
pop
mov
or
sbb
test
lahf
lea
add
cmp
pop
ror
or
xchg
mov
imul
in
sub
outsb
push
jbe
sub
cmp
aas
bound
push
xchg
xchg
pop
subb
iret
jle
mov
sbb
add
and
outsb
mov
mov
adc
fstpt
mov
push
shl
lret
je
imull
cld
mov
clc
jae
cmp
xor
filds
mov
push
push
in
xlat
sub
pop
popa
loopne
xor
test
or
jle
dec
sub
push
call
loopne
mov
jb
flds
test
aam
shll
scas
push
and
test
insl
dec
lret
inc
out
je
fisubl
les
push
add
lock
xor
cwtl
and
rorb
mov
xchg
inc
dec
aam
xchg
sbb
and
push
inc
sbb
jecxz
data16
repz
enter
mov
add
jmp
mov
popf
sub
jp
adc
sub
cmp
arpl
sbb
sbb
jb
jbe
mov
pop
sub
push
pusha
int
mov
arpl
lods
int3
rcrb
jb
fsub
mov
pop
mov
jo
bnd
lcall
imul
stc
pop
mov
mov
cs
mov
scas
mov
jmp
repz
call
je
loopne
sarb
pop
incb
xchg
cmpsb
inc
adc
int
cli
pop
jp
cmp
push
enter
insl
xchg
pop
and
push
pop
mov
or
fisttpll
loop
icebp
lret
dec
xor
fisubrs
push
jns
test
inc
rol
shll
inc
mov
gs
out
lods
add
jb
testl
push
in
rcrl
lea
push
mov
out
je
xchg
dec
push
dec
mov
add
xchg
leave
out
into
pop
roll
scas
xchg
sbb
push
sbb
add
sarb
stos
pop
mov
xchg
js
insl
jmp
xor
inc
pusha
sahf
popf
pop
fiadds
jns
pop
enter
andb
xlat
xor
add
in
cmp
data16
push
mov
dec
cwtl
pop
jmp
sti
jmp
push
icebp
stos
repz
push
insb
andb
jno
mov
out
mov
mov
adc
sub
jge
not
std
xchg
and
jbe
mov
cmp
lods
dec
rcrl
lock
ja
sub
mov
clc
cltd
cwtl
scas
sbb
mov
icebp
out
cwtl
dec
jg
push
repnz
inc
xchg
xchg
mov
pop
mov
shll
fstpl
xchg
movsl
out
jne
jno
vphaddbd
repz
es
sarb
je
jno
in
xor
xor
scas
lds
enter
pushl
mov
cwtl
mov
cld
xchg
call
ret
bound
adc
and
sti
lea
xchg
sbb
xchg
xchg
ljmp
ret
jb
jp
cs
add
add
imul
pop
jns
fcompl
scas
mov
xor
jmp
in
aam
lods
dec
aad
push
idivb
xchg
jae
call
xor
sbb
mov
cmp
decb
and
pop
jmp
popl
inc
pop
adcl
mov
stos
jno
inc
mov
xchg
cmp
lods
fldcw
fcomip
mov
adc
scas
ljmp
mov
or
dec
and
xchg
movsb
sbb
fcoms
insl
std
mov
cmp
mov
xlat
pop
movsl
in
xchg
pop
fnstsw
sbb
sbb
sbb
or
int
jle
mov
aas
push
cmp
es
test
test
idivl
loope
mov
out
mov
inc
sub
push
and
scas
sbb
neg
frstor
xor
pop
sahf
clc
push
enter
inc
cmp
xor
enter
cltd
scas
xor
les
cmpl
cmp
clc
popa
call
fbstp
jbe
cmp
xor
gs
ds
jge
push
popf
inc
stos
arpl
push
lock
cli
inc
and
sub
into
rcr
aaa
loope
jge
arpl
jnp,pt
mov
pop
cmp
or
dec
arpl
test
sub
push
cmc
add
xchg
repnz
shlb
cmp
mov
aam
lahf
jg
andl
in
xor
mov
testl
insb
jnp
lock
add
lock
enter
leave
stos
push
aas
mov
adc
movsl
lock
repz
xchg
jmp
xchg
adc
ret
cmp
mov
add
imul
adc
push
xchg
xor
idiv
mov
fcoml
pop
pop
add
ret
into
mov
cli
sub
stc
pop
cmp
cmp
in
rorb
add
shl
jnp
cmp
pushaw
mov
mov
js
push
or
xor
lock
add
xor
push
or
add
pop
dec
sbb
inc
push
in
add
dec
push
jg
addr16
jno
cwtl
push
jp
adcb
inc
popf
ja
cmp
test
dec
testl
mov
test
bound
dec
sbb
lcall
das
xchg
or
mov
cltd
pop
testl
ds
and
enter
fs
ja
lret
or
lahf
aam
pop
pop
push
int3
adc
sbb
iret
rcrl
mov
orb
into
pushf
xchg
pop
cwtl
call
out
int
subps
andb
push
sub
sbb
out
ds
jno
lock
out
pusha
mov
ficoms
imul
fdivr
add
ds
or
mov
ss
push
jecxz
je
lock
add
pop
nop
push
mov
repz
mov
push
push
inc
icebp
divb
or
mov
sub
addr16
andl
sbb
jno
jmp
mov
xor
inc
dec
shll
jno
fcmovbe
shr
shl
cmp
mov
in
xchg
rcrl
lods
call
push
push
push
and
and
adc
cmpsl
mov
movsb
push
cmp
lods
xchg
aad
cld
mov
inc
cli
into
jecxz
fisubrl
dec
sahf
jge
je
gs
bound
movsb
jg
mov
clc
sbb
leave
cmp
in
inc
adc
mov
sbb
adcb
shll
das
jp
sub
daa
clc
xor
dec
in
or
mov
jge
cmp
and
mov
aam
ds
xchg
std
fildl
and
jb
outsl
and
aaa
subb
lods
sbb
pop
adc
movsl
arpl
dec
or
stc
test
lret
stos
in
mov
mov
cli
mov
cli
insb
mov
cld
mov
imul
das
xlat
pop
decl
aad
adc
mov
inc
pop
xchg
sub
jecxz
into
ja
jnp
cmp
bnd
out
insl
stc
adc
adc
inc
lahf
js
shll
in
xchg
or
roll
fdiv
test
sub
push
dec
and
dec
in
popf
jg
add
lahf
insl
shlb
lea
inc
add
cmp
pushf
mov
add
or
xchg
and
pop
jbe
add
shrb
add
jge
mov
ret
push
xor
sub
dec
stos
pop
outsb
test
xchg
sub
mov
push
jne
push
mov
cmc
js
and
cwtl
jmp
xor
cmc
add
xor
insb
scas
in
xchg
push
into
sahf
jg
ret
xlat
xchg
vmovntps
imul
dec
or
inc
and
fsubrl
xchg
out
sbb
sbb
stc
add
scas
add
cmp
cs
daa
icebp
dec
loop
mov
mov
loop
jp
sarb
in
adc
push
push
mov
gs
xor
out
fistl
icebp
test
jl
mov
or
es
xchg
movsl
dec
stos
push
jmp
xor
popf
adc
inc
and
insb
imul
add
dec
and
mov
pop
pop
xchg
jbe
iret
push
add
loope
mov
sbb
and
sti
lahf
enter
lea
mov
add
jl
jge
addr16
add
rolb
outsb
fstpl
les
jmp
mov
adc
mov
nop
dec
das
in
fadds
fdiv
in
rorb
insl
jo
mov
or
mov
int3
cs
sub
pop
sahf
aas
inc
xchg
mov
xchg
orb
imul
stc
dec
mov
push
mov
inc
loope
stos
and
insl
ret
loopne
mov
out
outsb
bound
decb
sbb
jo
cmc
sub
push
mov
in
ret
pop
mov
push
mov
xor
push
jns
ja
pusha
rclb
push
fadds
orb
gs
sub
rolb
jo
adc
ja
jp
pop
pusha
cmpsb
adc
xor
cltd
in
inc
mov
lods
xlat
sti
mov
jg
mov
sbb
add
and
add
movsb
dec
aaa
lods
add
mov
sub
add
std
popf
add
adc
ret
jmp
and
in
and
jb
adc
imul
jne
or
iret
lock
repnz
imul
and
test
es
gs
jp
dec
pop
mov
iret
into
jb
xchg
mov
jp
ficomps
les
int
lods
rclb
sbb
adc
mov
test
cmp
ss
cmp
out
adc
pop
leave
test
cwtl
loope
or
imul
xchg
test
fcomip
ss
add
lods
mov
lock
add
repnz
je
sub
cli
int3
lock
mov
pop
iret
dec
ljmp
in
add
test
or
push
popa
repnz
add
dec
popa
lcall
jmp
mov
stc
add
sahf
and
pop
mov
push
repnz
mov
das
roll
pushf
shrb
cwtl
stc
sub
in
insw
ret
cmp
call
jl
stos
pop
and
testb
jecxz
push
dec
add
or
jecxz
and
sbb
mov
sbb
mov
xchg
int
cmp
insb
inc
loop
pop
nop
sbb
or
sbb
adc
and
xlat
xchg
movsl
dec
insl
insb
movsb
xor
pusha
mov
fs
pop
pand
cmc
aad
pop
pushf
js
int
leave
sbb
ljmp
push
xor
pop
sbb
xor
scas
bound
clc
mov
cmp
add
dec
dec
dec
mov
xor
sub
rcrb
vpunpckldq
add
push
push
cmp
jmp
in
imul
sbb
mov
pop
xchg
pop
scas
ret
pop
jae
std
scas
das
pandn
mov
in
cltd
roll
dec
mov
loop
jnp
xchg
icebp
sub
and
jno
and
incb
cmp
adc
adc
mov
sahf
mov
movsb
in
add
je
cli
ds
loop
ja
dec
pop
push
sub
aaa
or
push
jecxz
inc
add
sub
repnz
stos
pop
mov
push
frstor
or
mov
sahf
insb
mov
adc
mov
push
jl
xchg
push
stc
repnz
std
mov
pop
jae
movups
ja
add
gs
mov
pop
inc
loop
lcall
out
push
out
add
ds
and
push
scas
push
cmp
adc
sub
mov
pop
jmp
cmp
sarb
orl
adc
mov
inc
mov
xor
int3
call
xchg
andl
push
shr
aam
dec
add
aas
xchg
jmp
dec
pop
mov
pop
dec
lds
loop
sbb
sbb
cmp
mov
lahf
jp
pop
push
lods
cwtl
ret
pop
scas
xchg
ds
inc
inc
inc
xchg
xchg
fcmovnu
call
mov
in
repz
fs
hlt
imull
jno
jmp
xor
in
cmpl
fidivs
mov
pop
push
bnd
jo
push
fistps
aaa
push
daa
dec
addl
pop
gs
sarl
mov
or
cmp
ja
ret
inc
sub
dec
mov
lock
sub
add
inc
mov
frstor
xchg
mov
int3
pop
loopne
clc
lret
mov
jo
inc
in
push
adc
xlat
jbe
pop
xor
ljmp
mov
fwait
push
dec
mov
jecxz
xchg
mov
call
rcrl
stos
hlt
xchg
xchg
inc
divl
and
and
pop
stc
ret
xchg
in
scas
mov
pop
fwait
enter
pop
xchg
loop
or
jae
aad
xchg
ds
sahf
or
or
cmp
sub
in
mov
mov
jbe
clc
fs
fwait
icebp
lds
adc
mov
mov
jp
iret
jge
sub
test
and
push
sbb
hlt
mov
cmp
lods
push
mov
pop
fucomp
int
sub
lret
movsl
aaa
in
xchg
movsl
pop
les
dec
sahf
jecxz
cld
stos
add
inc
mov
push
adc
mov
mov
adc
push
adc
mov
popf
test
stc
push
je
dec
sbb
test
sbb
shrb
adc
adc
rolb
out
fs
xchg
scas
pop
outsl
adc
cmp
mov
test
icebp
pop
clc
add
dec
test
jae
fs
cli
aas
dec
pop
popa
sbb
pop
mov
movsl
cmc
push
sbb
lcall
dec
movsb
or
inc
mov
xchg
into
orb
push
and
mov
jle
sub
int
jnp
ds
mov
jp
dec
jl
mov
xor
push
sahf
shrl
xchg
sub
orl
mov
leave
frstor
cmp
into
daa
xlat
sbb
cli
pop
push
int
jmp
aam
push
jg
movsb
push
lcall
mov
pop
lret
push
std
dec
jle
push
jns
aas
sbb
pop
push
jmp
jl
scas
mov
cs
clc
push
std
aas
and
xor
or
das
subb
call
shr
sub
lahf
jb
dec
inc
jge
adc
xor
lahf
das
add
dec
test
mov
and
in
pusha
pop
ja
or
sub
pop
cmp
pcmpgtb
push
and
fnstcw
adc
mov
fcomi
pushf
cmpsb
pushf
dec
scas
cld
je
mov
ss
lcall
cmc
out
scas
dec
ds
ret
push
out
call
xchg
dec
push
cmp
add
stos
xor
mov
movsl
push
cli
lods
fstpt
lret
ss
and
sbb
outsb
aaa
jne
das
mov
sbb
fnsave
cmpsb
into
push
lcall
pop
pop
stc
xchg
jo
ds
push
call
push
ret
jmp
das
enter
add
mov
adcb
dec
mov
popf
enter
and
xchg
daa
dec
push
out
sbb
add
xlat
fucomi
js
inc
lea
xchg
out
sub
add
adc
jbe
mov
in
jge
fcompl
xor
fdiv
stc
mov
rcrb
inc
outsb
cmp
lret
repz
mov
and
inc
inc
jge
cmc
and
adc
cmpsb
fcmovbe
dec
pusha
and
jae
mov
sbb
xchg
adc
pop
lds
xor
mov
popa
lock
mov
movsb
stos
fsincos
test
jmp
push
jp
je
cmp
jle
jecxz
jae
or
sbb
dec
adc
stos
fdivrl
inc
lods
xor
xlat
jp
adc
fcoms
shlb
fcmovnb
dec
xchg
mov
mov
cmp
test
push
daa
dec
inc
jbe
lcall
mov
aam
and
cmpsl
ss
add
xchg
adc
ljmp
inc
out
aaa
lods
xchg
in
loop
stos
mov
sbb
idivl
xor
and
ja
scas
pushf
pop
push
sarb
loope
das
pushf
push
jno
jmp
mov
sarl
loopne
ret
xor
push
outsl
xchg
stos
sub
aaa
and
clc
shrb
xlat
fidivrs
and
ss
xchg
jmp
pop
aam
andb
adc
adc
cmc
movsb
je
add
adc
mov
xchg
pop
pop
push
fsubp
call
mov
inc
mov
popa
shlb
xor
xlat
add
xchg
aas
cli
xchg
sahf
mov
sub
fwait
xor
pop
push
lret
or
jecxz
in
mov
js
bnd
ds
or
outsl
pop
in
test
push
ss
loope
aaa
xchg
inc
test
mov
popa
pop
push
fisttps
or
and
nop
andb
lahf
inc
pushf
scas
fs
sahf
mov
pop
ljmp
adc
mov
fwait
or
xor
push
sub
pusha
mov
icebp
ljmp
add
adc
loopne
mov
shlb
jnp
dec
cmpsl
dec
or
xchg
inc
sarb
mov
cld
jns
and
rcll
dec
into
repnz
jb
je
mov
cld
inc
in
and
inc
mov
rcll
inc
fwait
cmp
push
add
push
push
cltd
xchg
fs
ret
inc
in
dec
xchg
je
jmp
lea
mov
loope
lea
fdivrl
andb
mov
adcl
scas
xlat
iret
xor
mov
cmp
and
insb
clc
out
pop
or
ljmp
lret
popf
dec
or
cmp
jl
pop
xchg
xlat
test
dec
out
push
jmp
repz
lock
test
stos
inc
pusha
adc
mov
jb,pt
cmp
lret
fstpl
or
cmc
std
jg
pop
fisubrl
xor
inc
scas
stc
dec
pop
dec
ficoms
cmpsl
fidivrs
mov
arpl
sbb
outsl
jnp
mov
push
xchg
rcrb
mov
dec
inc
jne
fisubrl
insb
lods
insb
out
adcb
jne
test
test
pop
outsl
mov
add
cmpsb
adc
mov
roll
push
arpl
aam
mov
add
adc
push
out
fistpl
xor
adc
mov
mov
and
add
or
es
jmp
insb
push
out
stos
in
jns
es
nop
or
or
outsb
push
clc
cmp
push
cld
aam
movsl
xchg
jl
jg
into
scas
push
pop
cmp
das
test
cmpsl
push
movsl
cmp
hlt
cmpsb
pop
int3
xor
mov
clc
xchg
popa
addl
push
pop
lcall
imul
js
imul
inc
imul
sub
ret
out
outsl
fwait
push
dec
or
sti
cmc
xchg
xor
jg
sub
stc
rorl
rcl
cmpsb
inc
cli
and
imul
enter
xor
lods
xor
aad
sbb
mov
or
push
and
insl
mov
int3
sbb
pop
dec
xchg
hlt
pop
bound
add
jmp
std
jecxz
adc
and
or
sub
push
dec
mov
sub
sub
data16
or
inc
pop
hlt
lods
or
sub
jns
xor
push
sbb
jle
orb
andb
pop
ss
insb
or
xchg
dec
cmp
push
jecxz
in
adc
jo
ret
xchg
cmpsl
addr16
ss
add
cs
sbb
cmc
push
mov
xchg
pop
dec
dec
scas
call
sub
pop
cmp
jmp
aad
shrb
push
inc
cmpsb
mov
insl
ror
pop
and
nop
mov
add
push
shlb
pop
sarl
gs
xor
stc
nop
imul
movb
shr
nop
call
daa
shll
ds
jno
in
cmp
dec
ds
pop
aas
mov
and
imul
jb
insl
sbb
push
sti
sahf
shll
mov
cltd
loop
or
jns
sarb
sub
mov
add
loop
inc
cmpsb
icebp
repz
cmp
pop
leave
and
sub
jg
sbb
leave
loope
ret
pop
xchg
push
xchg
sub
xchg
push
jmp
mov
gs
mov
ja
es
pop
xchg
lock
inc
cmp
mov
out
mov
dec
repz
xchg
ja
mov
sti
xchg
or
jns
arpl
push
pop
mov
jno
inc
push
lds
adc
inc
ret
pop
xchg
cmp
xlat
pushf
in
inc
in
rcr
scas
or
enter
jno
les
loop
cmp
add
dec
addb
lret
cli
sti
es
xor
fdivl
push
mov
mov
sub
mov
ror
xchg
mov
insb
jne
or
hlt
mov
rolb
scas
fiadds
mov
push
repnz
mov
fs
in
rorb
scas
mov
negl
adc
add
jecxz
push
jle
out
push
lds
lea
sub
sub
pop
mov
pop
repnz
mov
test
and
lcall
hlt
xchg
xchg
in
mov
jp
dec
cmpsb
and
loop
mov
subl
fdivrp
icebp
clc
popf
dec
scas
repnz
das
add
jg
call
push
adc
push
cs
adc
test
dec
add
sbbl
dec
popa
pop
push
popa
dec
movsb
sbb
lahf
jmp
stos
xchg
jns
mov
repz
xlat
shll
outsl
inc
fildll
cld
std
gs
jns
sbb
bound
cmp
and
loop
ret
testl
cmp
ror
pop
cld
add
xor
xlat
pop
sbb
jmp
xchg
xorb
aam
jmp
mov
sbb
mov
mov
push
test
cmp
leave
cmp
or
imul
cli
mov
stos
mov
ret
out
and
data16
fwait
mov
push
xlat
or
fistps
bndstx
xor
je
movsb
mov
outsl
xor
loope
jmp
rcr
jge
xlat
addr16
imul
pop
cmpsb
out
test
aam
xor
mov
jno
scas
lods
sub
and
ret
arpl
orb
push
popa
js
pop
pop
popa
and
xor
fs
lret
fwait
or
push
stc
push
leave
push
add
mov
pop
and
fimull
inc
fsts
pop
jae
pop
sbb
mov
test
xchg
mov
cltd
mov
adc
popa
subb
sub
pop
mov
jecxz
int3
ja
dec
mov
pop
sub
pop
or
loope
shr
mov
icebp
add
lds
jo
or
push
sbb
fists
sub
loope
ljmp
in
repnz
nop
cmp
cmpb
mov
jne
jb
scas
popa
jno
mov
mov
xor
sahf
sub
bound
std
loop
popf
xchg
sbb
mov
inc
xchg
dec
jo
fstpt
jbe
fwait
push
sti
orl
fnsave
int
xor
mov
shrb
test
popf
out
lcall
pop
clc
inc
cmp
out
dec
icebp
fwait
inc
insl
add
sbb
jbe
pop
enter
pop
jp
or
dec
sti
fbld
xorl
push
mov
dec
fcoms
add
fistpl
fildl
fnstenv
ret
sahf
pop
imul
sbb
cs
fs
lods
jne
test
pop
mov
cmp
test
fs
cltd
push
es
sub
mov
jo
push
imul
or
fbld
add
das
addr16
mov
sbb
jbe
xorb
and
iret
push
repnz
fs
inc
jns
add
inc
jne
cmp
inc
out
lret
mov
pop
push
loope
mov
addr16
adc
mov
jp
in
test
repnz
push
test
adc
lret
xor
aad
xchg
mov
lods
imul
add
out
adc
arpl
pop
test
icebp
mov
mov
out
shufps
dec
lret
pop
push
sbb
stos
sub
xchg
pop
push
fidivrl
shlb
fstl
pop
or
lret
xchg
inc
cltd
sub
bound
pop
pop
ret
imul
fmuls
xchg
pusha
pop
in
sbb
or
fwait
jno
les
push
mov
movb
sub
mov
xchg
pandn
pop
sbb
das
out
mov
xor
adc
icebp
lcall
sub
push
fidivs
fidivrl
xor
sahf
jge
cmp
lret
adc
repz
jl
leave
ret
xlat
or
jns
push
xchg
lock
fs
xor
scas
jbe
rorl
loopne
mov
xchg
adc
stc
add
cmpsb
inc
fmull
jge
push
shl
loop
mov
jl
adc
xchg
repnz
mov
push
add
push
pop
xchg
lret
stos
hlt
repz
stc
xchg
popf
fcomps
cltd
dec
jnp
mov
ret
and
mov
mov
sub
ds
adc
sub
fwait
xchg
and
cs
inc
test
or
push
aas
nop
jg
sarl
aad
sub
pop
call
leave
sbbb
and
sub
scas
das
cmp
mov
pop
add
sub
ret
in
cmp
push
jno
out
lret
lcall
jg
adc
pop
clc
pop
ret
push
je
push
popf
xchg
lcall
inc
xor
addl
push
int3
add
mov
pop
push
sub
arpl
push
sbb
push
xchg
push
jbe
testl
movsb
imul
popa
add
fnsave
sub
adc
repz
xchg
mov
dec
lcall
imul
das
sbb
push
jo
cmc
je
xchg
mov
pop
data16
rcr
inc
push
xchg
ja
push
cmpsl
jl
pop
adc
fistl
xchg
loop
xor
ret
shrb
arpl
mov
xor
fisttps
pusha
xchg
or
sahf
and
popf
xchg
xor
sti
adc
es
sub
mov
stos
inc
push
es
cmp
pop
icebp
push
pop
enter
pop
pusha
pop
dec
mov
cmc
cwtl
jcxz
jg
xor
ja
notb
sub
mov
cmpsb
push
adc
fmull
sbb
sub
daa
jb
scas
mov
inc
in
lret
inc
push
cmc
test
lods
xchg
je
sbb
jmp
dec
jp
fisttps
xor
addb
mov
inc
jp
adc
lret
test
mov
xchg
movsl
lods
fnstenv
lret
pop
pusha
leave
iret
add
scas
lds
mov
in
mov
pushf
jmp
jbe
test
arpl
inc
ffree
inc
loope
std
jb
xor
mov
lods
call
mov
jno
push
scas
insl
push
jg
cmpsb
insb
aad
mov
les
cmpsl
lods
sahf
inc
mov
jg
inc
dec
xchg
sub
aad
das
ljmp
pop
xchg
cmpsl
pop
mov
out
or
pop
aaa
out
mov
das
and
sbb
dec
out
sbb
adc
inc
sbb
mov
mov
sti
arpl
repnz
pushf
call
lcall
imul
and
cmp
adc
mov
sbb
mov
sarl
sub
or
int
popf
xchg
loopne
cmp
mov
dec
cmp
mov
gs
dec
lods
dec
mov
dec
inc
mov
mov
dec
jo
lock
repnz
xchg
sub
inc
cmp
or
paddw
inc
lahf
les
pop
xor
and
neg
push
pusha
add
roll
cmpsl
cmpsl
sub
lods
xor
cmp
jle
push
adc
push
sub
lahf
out
loope
int
out
mov
lret
xor
or
pop
inc
sbb
mov
mov
push
mov
xor
xchg
rclb
call
mov
int
pop
sbb
stos
faddl
dec
lods
dec
xor
mov
ret
sub
test
mov
rorb
cmp
rcr
repnz
scas
jle
jg
push
cli
cmpl
cmpsl
mov
inc
push
adc
xchg
nop
fldt
es
cmp
call
pop
mov
cld
jp
iret
add
je
adc
loopne
aam
ficoms
cmp
call
xchg
pop
fsubs
lahf
insl
inc
and
sub
ret
inc
inc
ret
mov
pop
xor
mov
cwtl
adc
pop
mov
dec
jle
fiadds
addr16
mov
ror
das
mov
mov
sbb
or
aam
adc
sbb
js
or
ljmp
fucom
insl
fs
mov
nop
imul
icebp
sbb
into
insl
imul
and
scas
fdivr
mov
xchg
loope
out
pop
insb
or
das
push
and
outsb
sahf
sbb
ret
push
add
dec
pop
xchg
inc
orl
inc
std
xlat
jae
aaa
fwait
push
insb
js
cmc
xchg
mov
add
xchg
lret
adc
lea
sbb
ljmp
mov
xchg
fs
dec
lock
xchg
mov
pop
stos
test
and
test
xchg
insb
pop
or
in
mov
ds
int3
sbb
mov
stos
dec
shll
mov
out
pop
lret
lods
fistpll
sub
mov
or
or
cld
ja
xchg
xor
dec
sub
lret
outsb
and
mov
adc
lcall
lahf
ss
or
mov
lds
sub
imul
rcr
in
jae
jle
imul
xchg
rolb
and
ficoml
mov
pop
xor
xchg
push
jnp
lahf
lret
and
pop
mov
sub
mov
sub
mov
sub
repz
jecxz
and
les
sbb
daa
jl
mov
or
mov
or
mov
sbb
aas
xor
data16
and
jge
ret
xor
add
cmp
xchg
sub
das
aad
out
cmp
and
sbb
push
and
sub
cmpsb
ficoml
adc
repnz
in
mov
pop
mov
insb
mov
test
arpl
addb
mov
push
mov
inc
mov
mov
mov
and
lds
pusha
mov
jp
int3
lods
mov
xor
repnz
insl
or
push
xor
dec
and
enter
movsl
pop
imul
fwait
sbb
push
sub
cltd
push
pop
push
jle
jb
pop
sub
sbb
inc
inc
into
and
mov
movsl
pop
popa
sahf
push
iret
outsl
stc
test
add
mov
inc
inc
in
fildl
repz
add
xor
dec
add
add
outsb
xchg
mov
nop
iret
gs
inc
and
repz
jp
out
and
sbb
lret
mov
xor
jle
in
cmpsb
das
rcrb
inc
pop
pop
sub
lret
js
jge
inc
jecxz
sahf
push
loop
orl
repz
je
cmp
sub
push
dec
mov
out
xor
dec
out
out
or
or
ja
out
mov
jno
and
hlt
hlt
dec
mov
movsb
pop
pushf
hlt
shll
xor
jl
fstl
cltd
cmp
mov
lods
icebp
fwait
sarl
lahf
aaa
mov
aad
xor
or
or
sti
add
add
loop
in
jp
fiadds
movsl
pop
pop
push
test
dec
inc
sbbl
mov
jbe
mov
or
cs
aaa
and
sub
cmpsb
mov
dec
bound
jae
movsl
repz
call
push
jbe
call
and
mov
jg
cmc
leave
nop
sbb
fidivrs
mov
push
mov
loop
daa
fbld
stos
test
adc
pop
push
lret
dec
arpl
out
pop
pop
add
mov
push
sbb
jno
lahf
or
and
jns
sbb
sarb
jbe
jge
rorb
jg
insl
push
mov
movsl
jmp
jne
push
call
and
bound
mov
push
ljmp
or
push
xor
xchg
fs
sbb
imul
movsl
adc
dec
mov
fsubr
fs
insl
imul
out
dec
sbb
fisubrs
hlt
and
sbb
mov
test
je
mov
sub
popa
cs
dec
xchg
fmuls
jb
pop
jne
pop
xlat
xchg
xchg
push
add
or
int3
stos
cli
sti
mov
test
dec
mov
daa
ja
hlt
xor
sub
imul
mov
hlt
sbb
out
das
dec
dec
inc
xchg
xor
in
sbb
ljmp
std
push
ret
call
push
fidivrs
pusha
pop
pop
cmp
sub
jbe
jmp
ds
ljmp
fld
bound
mov
stos
mov
imul
stos
dec
test
icebp
aam
icebp
add
mov
bound
daa
cmpsb
inc
imul
inc
add
inc
lret
xchg
in
movsl
jmp
jge
out
les
mov
sti
xor
mov
jo
jb
arpl
xor
cs
mov
fistl
add
aam
fwait
lods
adc
xor
movsl
movsl
imul
sbb
mov
push
dec
idivb
mov
in
pop
and
push
pop
test
icebp
rclb
jecxz
xchg
push
mov
cltd
sub
mov
adc
clc
adc
in
cmp
xor
outsb
test
mov
in
xchg
mov
loopne
add
cmp
and
add
sub
sbb
adc
dec
test
call
testb
mov
adc
xor
xchg
stos
or
inc
pop
push
cmp
test
adc
pop
xor
call
mov
xor
rolb
mov
loop
push
sub
adcl
push
jo
in
dec
fsubrs
orb
shlb
das
push
ret
sahf
dec
or
xorb
aad
xchg
lret
push
std
sub
add
cs
arpl
and
adc
mov
in
das
xchg
add
fcomi
or
bound
popf
jle
pop
xchg
mov
bound
fldenv
and
jbe
push
scas
mov
mov
or
lahf
pop
out
mov
and
fmuls
mov
mov
ss
sub
cmp
mov
cmpsl
in
xor
pop
jmp
sub
dec
outsb
jecxz
push
jmp
dec
faddl
cmp
xchg
es
std
insb
dec
dec
cli
adc
xor
inc
pop
inc
xchg
mov
add
icebp
insb
add
enter
ror
mov
adc
mov
ja
clc
pop
clc
lods
mov
orb
aaa
fidivrl
push
lret
mov
sub
je
mov
pop
mov
push
xlat
mov
popf
jmp
out
pop
dec
stos
push
incb
sbb
mov
inc
js
divl
jl
sbb
mov
es
fisttpl
das
sub
fisttpll
mov
repz
lret
cmpsl
xchg
dec
arpl
cli
and
xchg
sti
dec
out
xchg
inc
xchg
lcall
xchg
add
fmull
xor
mov
outsl
cmp
pop
and
mov
jecxz
or
sub
aaa
jo
cwtl
int3
add
push
and
lds
dec
pushf
pop
das
or
mov
nop
dec
pop
mov
aad
sub
das
mov
adc
aas
sbb
stos
pop
mov
mov
mov
cmc
fwait
movsl
adc
enter
mov
or
sbb
sbb
faddl
ffreep
add
cli
dec
xchg
negb
es
arpl
mul
push
sti
daa
jae
jge
nop
mov
push
into
pop
movsl
pop
pusha
inc
xor
lahf
flds
jge
out
push
sbb
out
or
or
cmp
popf
adc
xor
popf
mov
iret
sti
push
inc
jae
loop
mov
mov
cmp
jp
lcall
push
out
adc
inc
cs
mov
pop
mov
scas
leave
clc
mov
inc
cmpsl
cmp
xchg
enter
and
inc
sbb
jae
adc
sub
repnz
in
mov
mov
push
sbb
mov
repz
outsb
popf
mov
mov
test
pop
repnz
out
and
adcb
dec
movsl
jo
fidivl
pop
lock
mov
cmc
and
cmc
dec
loop
or
mov
ja
push
jle
ljmp
and
ljmp
aad
mov
push
cli
outsl
ds
adc
aas
push
or
mov
jecxz
popf
lds
js
mov
add
cltd
mov
xchg
popa
dec
mov
pop
lock
push
mov
dec
jae
mov
lret
inc
sub
leave
inc
scas
lods
loope
insb
nop
adc
sub
movsl
fiaddl
inc
jns
out
aaa
mov
inc
jge
mov
into
test
or
lods
mov
and
adc
xchg
popa
imul
push
lods
les
push
pop
xchg
sarl
shll
or
notb
push
push
pop
call
dec
loope,pn
cmp
push
cmp
sbb
add
into
push
test
xchg
cmp
incb
or
out
adc
pop
enter
jmp
inc
imul
xor
pop
stc
popa
loop
xchg
pushf
cmp
dec
inc
cmp
mov
out
xor
cld
cld
xchg
mov
repnz
imul
pop
repnz
jae
repz
or
push
orl
test
add
dec
repz
loop
popf
je
cld
push
leave
aas
and
adc
scas
xor
pusha
cwtl
fwait
cmpsb
mov
sub
pop
adc
mov
subl
jne
int3
je
movsl
mov
xchg
pop
jmp
movq
lea
fwait
inc
repnz
popa
push
sti
shlb
movb
dec
andl
aaa
jbe
dec
addr16
dec
js
add
addb
fcoml
aam
fucomip
addr16
fcoml
movsb
shll
jae
adc
xchg
dec
xor
lret
or
and
jae
inc
roll
push
add
imul
xchg
ret
dec
push
outsl
and
movsl
cmpsb
inc
or
mov
popl
or
lock
and
daa
mov
xchg
sub
push
adc
dec
notl
inc
out
out
lods
fs
cmc
lock
xchg
stc
popa
cld
jge
push
sbb
xchg
std
rorl
or
cmp
or
hlt
aam
imul
jp
idiv
pop
call
mov
insb
jae
cs
inc
rorl
test
xchg
jbe
loop
mov
pop
pop
xor
add
push
push
lret
inc
mov
mov
mov
pop
cltd
in
jl
outsb
sub
cmc
and
outsl
xorl
insb
xlat
or
mov
je
pop
test
ret
mov
outsb
and
js
testb
jo
pop
and
shl
sub
inc
add
shlb
mov
jge
stc
xor
pop
outsb
mov
sbb
fiaddl
rcrl
mov
cmp
mov
dec
fcmovnb
aad
int
sub
shrl
sti
push
xorl
mov
sbb
pop
fidivrs
xchg
xchg
inc
dec
xor
push
imul
int3
mov
mov
and
sub
xor
push
ja
mov
pop
sub
mov
cmp
dec
mov
rcrb
adc
imul
cmc
push
shl
add
ds
xchg
fadds
ret
cmp
lret
pop
stos
pop
bnd
lds
or
loop
xchg
mov
or
pop
lcall
jg
sbb
roll
subl
cmp
pop
xchg
roll
jo
sahf
jg
cltd
jmp
roll
mov
pop
mov
scas
push
fisttps
mov
iret
mov
outsb
xlat
dec
or
cld
adc
in
mov
sub
les
pop
sbb
inc
cwtl
xor
adcl
ljmp
xor
and
scas
mov
dec
test
clc
test
fs
push
pop
push
roll
ret
lock
xchg
inc
pop
inc
push
and
pop
lods
dec
jmp
arpl
push
movsb
push
adc
flds
call
sub
push
jb
or
add
jp
sbb
cli
sub
xchg
cmp
pop
jae
mov
out
lret
ds
push
cld
sti
in
in
push
sub
cmpsb
push
cmp
mov
or
test
mov
outsb
in
mov
jae
push
iret
adc
dec
jmp
cs
dec
cmp
jmp
push
sbb
jle
push
enter
sub
loop
idivl
cwtl
and
inc
xlat
fistps
inc
cli
dec
jge
push
popf
jecxz
popa
mov
pop
add
xchg
nop
loopne
cmpl
enter
into
ss
call
mov
pop
fldl
out
pop
aaa
sub
or
movsl
insb
dec
mov
jb
jmp
push
movsb
cmpsl
xor
fs
xchg
imul
je,pt
jmp
jmp
mov
mov
hlt
lods
add
jmp
add
mov
mov
dec
jbe
leave
in
loope
jns
jno
or
inc
leave
iret
loope
cmpl
leave
push
and
cmpsb
cltd
pop
mov
xchg
jmp
cmp
mul
cwtl
push
xorb
arpl
xor
dec
repz
xor
inc
je
repnz
aad
jecxz
or
movsl
jns
mov
mov
lcall
adc
popa
or
gs
lea
outsl
xchg
sarb
jecxz
xchg
enter
cmp
pop
loope
sbb
xchg
cmpsl
adc
ljmp
mov
push
fbld
lods
xor
shrb
inc
out
imul
sbb
idivl
repnz
into
jecxz
movsb
outsb
mov
mov
aad
cs
lds
push
push
mov
iret
pop
ljmp
jne
dec
mov
into
daa
aad
mov
clc
out
xchg
mov
scas
fwait
add
xchg
dec
inc
add
push
arpl
out
or
leave
add
cmp
pop
ja
sub
jb
mov
cmp
mov
and
in
add
repnz
xchg
shll
jo
xchg
cmc
arpl
mov
inc
xlat
popa
lret
repz
stos
add
cmp
or
jns
fidivrs
incl
adc
insl
add
sub
jg
mov
ret
sbb
test
mov
push
sbb
clc
sti
inc
push
test
xchg
shll
push
fadds
jp
xchg
insb
out
xchg
dec
sub
pop
cli
shl
xor
cli
jns
mov
adc
or
sbb
loop
ja
dec
lahf
pop
sti
jmp
fldcw
std
or
pop
adcb
fildll
mov
mov
mov
aad
xchg
mov
sbb
cmc
mov
inc
mov
and
and
ror
fcompl
popa
xchg
out
pop
inc
test
adc
ror
sub
and
xchg
repz
add
lods
and
xchg
in
sub
mov
lret
xchg
js
push
sub
sbb
cmc
sbb
mov
daa
paddsw
push
adc
sub
and
push
dec
ljmp
push
rcl
popa
sarl
fxch
sti
adc
push
jb
push
pop
inc
shr
mov
stc
xchg
lcall
push
ljmp
addb
shrl
clc
outsl
in
out
adc
sub
mov
push
pmullw
xor
dec
push
nop
inc
fst
pushf
mov
mov
in
shll
sbb
add
clc
adc
ss
sub
cmp
push
ret
test
enter
jl
into
scas
sub
out
mov
push
pushf
fsubrs
dec
xor
or
xchg
add
add
or
neg
lret
in
fwait
xchg
test
es
lret
fstps
cmp
xor
aaa
insl
test
sbb
mov
cmp
add
mov
sarl
inc
push
jns
xlat
test
fdivrl
int3
mov
lods
pop
inc
cmc
jg
cmpsl
call
inc
outsl
and
dec
mov
mov
xchg
xor
cli
mov
loope
repz
fmul
sti
lock
jne
outsl
fs
das
roll
stc
ret
lods
test
aaa
mov
pop
mov
jne
push
jmp
pop
mov
xor
and
dec
iret
sar
mov
in
mov
and
pop
mov
or
mov
push
push
and
dec
jno
push
outsl
dec
fisubs
repnz
sub
and
push
and
mov
cmp
lods
or
ja
mov
mov
sbb
mov
stos
addl
leave
xchg
rcll
shll
adc
rcl
inc
jmp
jns
jns
fcomip
mov
addr16
sub
push
cmc
cmp
sbb
enter
sar
push
xchg
nop
or
lea
pop
aam
test
dec
inc
shlb
mov
mov
cmp
mov
mov
mov
sub
push
bound
mov
jl
test
xchg
xchg
xor
rolb
imul
mov
leave
rclb
jle
imul
xor
add
xor
inc
pop
lcall
pop
jge
mov
jno
xchg
xlat
cmpsl
push
mov
push
pusha
sbb
je
jne
xchg
leave
sbb
leave
push
imul
insl
or
fnsave
cld
pop
adc
ja
mov
or
sbb
and
adc
fisttpll
aam
call
sti
cmp
aas
aam
xchg
dec
sub
jno
xchg
sub
jno
sub
clc
roll
ljmp
into
sti
pop
jns
pushf
imul
xchg
jns
fsubl
and
mov
mov
imul
push
push
dec
lret
add
add
mov
ret
adc
xchg
lods
mov
push
imul
xchg
iret
pushf
pop
sahf
push
nop
cmpsl
scas
mov
and
mov
stos
jo
push
bound
lds
mov
popf
xchg
pop
outsl
fimuls
mov
mov
push
adc
sub
dec
test
jg
jo
xchg
rcrb
shlb
imul
sub
push
jb
push
ror
or
adc
xchg
out
xor
jmp
fisubrl
test
pushf
lea
and
lea
dec
lahf
pushf
pop
jnp
jb
fucomp
test
add
pusha
clc
xchg
es
incl
sub
lret
scas
mov
ficoml
mov
pop
mov
dec
fwait
mov
cmp
jle
cmp
jb
stc
iret
fmul
add
sub
mov
icebp
push
repz
inc
jl
test
js
insb
rcrl
adcb
inc
push
mov
mov
sahf
xchg
fists
adc
add
sub
inc
cmp
jo
data16
gs
inc
roll
loopne
in
xchg
fmuls
and
movsl
punpckhdq
imul
push
pusha
xchg
pop
add
add
in
add
movsl
int
and
xchg
cmp
std
repnz
lahf
rcrb
mov
xchg
popf
jecxz
pushf
fidivrl
jp
xor
aaa
and
cmc
pop
sbbb
int
ret
outsl
enter
test
lret
out
add
bound
dec
push
push
lahf
cwtl
rol
movsb
push
xchg
or
rorl
and
out
jle
sub
push
jmp
faddl
les
and
jne
lods
cs
imul
lcall
test
push
add
push
test
jg
sbb
inc
addr16
mov
int
push
dec
push
imul
out
push
pop
clc
xchg
xchg
push
jns
mov
out
arpl
adc
sbb
push
cld
push
dec
fstpt
stos
adc
aaa
and
pop
pop
mov
iret
push
arpl
cli
push
leave
movsl
das
jae
push
push
in
call
into
mov
or
ja
je
test
adc
mov
jnp
xor
cs
nop
push
hlt
add
sti
loope
data16
push
mov
jo
mov
push
out
in
gs
mov
rol
mov
pop
loope
fwait
push
sbb
jp
insl
xchg
sbb
inc
adc
mov
int3
mov
mov
and
cmp
daa
enter
je
sbbb
sub
out
dec
fnstenv
pop
xchg
mov
dec
imul
pop
mov
jge
xor
sub
xchg
fucom
push
cld
and
out
test
mov
hlt
add
outsl
addr16
ja
inc
jge
lahf
xchg
test
sbb
xchg
pusha
or
movsl
test
in
mov
jg
cmp
mov
sbb
outsb
std
cmpsl
xchg
sub
sbb
cmpsb
inc
fiaddl
xor
dec
xor
push
popa
push
lahf
mov
mov
mov
shll
sarl
sahf
xor
mov
lcall
inc
jle
add
outsl
mov
lahf
xor
xor
pop
out
lcall
fwait
inc
push
cwtl
and
rorb
stc
jns
pop
pop
mov
sahf
mov
lock
inc
xor
idiv
testb
imul
lahf
inc
lea
adc
lret
ret
dec
imul
sub
lods
out
mov
addr16
scas
in
mov
inc
movsb
add
and
ja
add
xchg
mov
adc
or
call
aad
push
nop
ss
in
cld
addr16
adc
adc
les
cwtl
lea
fistps
ds
xor
or
iret
aaa
data16
jnp
lahf
jmp
movsl
cpuid
outsl
and
in
jge
cwtl
and
xchg
mov
push
or
jno
scas
mov
jo
lahf
push
sbb
cmp
hlt
xchg
jo
xchg
push
out
jbe
xchg
sub
outsl
cmc
sbb
in
mov
imul
js
sbb
sahf
movsl
sub
xchg
or
jmp
pop
out
jb
out
dec
daa
fldcw
adc
mov
sub
movsl
add
add
and
popa
notl
andb
test
pop
in
mov
jecxz
mov
popa
push
push
arpl
sarl
pusha
adc
cmpsb
cmc
mov
aam
adc
repz
dec
mov
and
fidivl
cmp
mov
aas
pop
add
lods
loop
and
lret
xlat
xchg
jbe
sbb
add
xchg
aaa
pop
in
dec
mov
cld
adc
cs
inc
les
out
sub
movsb
jbe
jp
mov
and
mov
enter
jl
mov
imul
insb
xor
iret
lods
lds
mov
scas
mov
jmp
push
fucomip
dec
adc
cmp
call
sbbl
or
pushf
das
dec
push
and
aam
pop
lods
aad
push
addr16
or
sub
cwtl
aam
inc
je
adc
mov
fnstsw
in
sarl
in
orl
pop
adc
lret
dec
or
push
xor
push
jecxz
cwtl
mov
jp
rorl
ja
jnp
push
fcoms
div
cli
jb
lahf
xor
push
push
jbe
or
jno
dec
ss
adc
add
shlb
jge
rcrb
xor
out
in
cmp
jle
out
or
xor
sbb
inc
push
sub
dec
inc
mov
or
cmp
ljmp
push
push
pop
sub
cld
lds
in
lds
add
push
fdivl
mov
pop
mull
mov
in
adc
xor
das
mov
das
es
dec
testb
int
bound
lret
sub
in
xadd
in
dec
mov
sahf
dec
movsl
insl
add
daa
fldenv
imulb
cmp
cltd
lds
mov
pop
ljmp
sub
daa
cmp
mov
push
sub
mov
adc
dec
jb
repz
mov
xlat
adc
or
popa
jmp
call
test
addr16
enter
and
les
sub
aas
jb
xchg
fisubrl
outsl
and
in
loopne
negb
mov
pop
push
or
xor
adc
mov
mov
sbb
mov
mov
jns
push
gs
mov
in
cmp
sbb
cmp
idivb
mov
mov
aas
cld
in
fs
loope
cs
aam
out
jp
xor
fimull
fstl
es
fmull
mov
mov
sbb
sbb
push
fnstsw
jecxz
mov
add
or
bswap
std
fsubs
lahf
pop
adc
sub
dec
nop
dec
scas
punpckldq
push
sub
vaddsubps
mov
in
add
aad
jae
xchg
jns
ret
xlat
lods
xor
popf
jge
aad
jp
fiadds
push
xchg
shr
fadd
cld
shr
icebp
push
jmp
out
leave
and
insb
and
adc
pop
in
inc
repz
bound
mov
mov
sub
xor
jno
pop
jp
ficompl
imul
int3
jmp
ffreep
iret
int3
and
push
cmp
push
mov
int
sub
cli
dec
xchg
cmp
incl
out
jo
inc
cmp
pop
cwtl
push
mov
nop
sub
fcmovnb
ds
test
test
cli
rcrb
fcmovbe
stos
cmp
jp
sbb
sbb
push
sbb
lcall
aas
pop
scas
dec
leave
xchg
dec
mov
mov
movb
push
jns
popa
xor
mov
jns
and
dec
inc
movntq
pop
ficompl
cmp
jg
lahf
mov
jnp
cld
sub
addr16
mov
dec
in
jmp
sahf
inc
jno
or
pop
adc
mov
jo
push
cmp
push
test
outsb
cli
fdivp
sub
cs
lahf
adc
lahf
push
mov
sbb
testb
add
rolb
daa
scas
and
mov
push
shl
stos
insb
loopne
cmpsl
fs
imul
sbb
shrb
fnstenv
fsts
lods
cltd
ss
out
and
cmp
out
push
lret
negb
lea
sbb
loop
ss
xchg
pop
in
push
lea
and
test
jecxz
mov
cs
xchg
outsl
cmp
enter
add
in
enter
and
add
cmp
sbb
jle
pop
mov
daa
xor
icebp
mov
shrl
lret
arpl
iret
out
andl
rcr
add
fcoml
push
mov
repz
push
ds
repnz
repnz
sbb
pop
loopw
xor
cmpsb
out
mov
notl
pop
ja
je
mov
jb
xor
fs
imul
test
out
or
mov
popl
cltd
push
or
cs
iret
das
leave
data16
add
inc
dec
dec
ja
test
sub
ds
leave
pop
xor
adc
mov
xchg
pop
cld
xchg
adc
cmp
sub
add
jo
xchg
pop
shr
mov
ds
xchg
push
sbb
in
mov
scas
xor
pop
stos
ror
fsubrs
mov
xchg
pop
sub
iret
cmp
ret
je
cwtl
pop
pop
cmpsl
ljmp
xor
scas
pushl
lock
jae
xor
cmpsb
add
mov
pshufw
dec
jbe
outsb
sub
or
ja
ror
jae
test
push
cmp
jae
cwtl
sub
xchg
in
ss
or
in
add
scas
lcall
sbb
jno
outsb
scas
scas
orl
mov
or
loope
rcll
ljmp
mov
das
ja
push
inc
lret
jne
iret
mov
mov
jnp
add
sbbl
repz
add
push
test
add
push
iret
cmp
mov
lods
ret
jle
sbbb
pop
ja
lahf
xchg
jns
movsl
hlt
xlat
xchg
gs
addr16
jmp
cmp
mov
subb
mov
mov
or
inc
jb
jb
sbb
mov
repz
add
divb
outsb
add
sub
xor
mov
rcrb
imul
push
or
ss
xchg
mov
adc
sbbb
scas
dec
pop
or
aaa
aad
jnp
test
mov
hlt
je
sub
outsl
add
and
sbb
sbb
loop
ljmp
scas
add
insl
push
push
mov
jge
repz
xchg
scas
push
push
popa
test
mov
cld
add
and
imul
dec
fnstsw
mov
xchg
aam
dec
das
jge
sub
aas
test
enter
inc
mov
cmc
inc
ljmp
jmp
sti
push
imul
std
jo
sti
ss
jno
sub
stos
or
fwait
jne
push
xlat
sub
iret
call
data16
sub
mov
negl
scas
ret
inc
fchs
insb
push
mov
inc
sahf
int
int3
idivb
insl
jns
out
xchg
jecxz
jl
adc
imul
push
sub
jle
xchg
add
dec
xchg
xor
add
lods
in
outsb
inc
cmp
add
data16
fwait
push
in
or
popf
cmpsb
loop
dec
aam
aad
mov
data16
insb
xor
jnp
test
popf
cld
adc
nop
push
and
jmp
in
fnsave
das
xchg
xor
aas
fs
ljmp
daa
inc
or
sub
xchg
xchg
mov
add
ret
arpl
and
sbb
ror
push
call
jnp
fisubl
daa
repz
cmp
scas
xchg
and
ret
aam
insb
mov
mov
push
pusha
aaa
icebp
mov
loop
dec
cli
out
out
mov
mov
icebp
add
fidivrl
sbb
gs
xor
outsb
xor
mov
push
pop
movsb
lahf
cmp
aas
cmpsl
or
pop
std
cmpsl
ja
test
sub
add
stc
xor
mov
test
gs
mov
sbb
insl
imul
add
lcall
dec
pop
mov
push
mov
hlt
jmp
popa
repz
push
add
add
cmc
jnp
jmp
push
push
fistl
jg
pop
enter
rolb
mov
pop
push
xorl
cltd
int
sub
xor
imul
xor
and
popl
out
inc
cmp
mov
subb
adc
in
cmp
push
push
test
jecxz
aas
ds
es
repnz
lret
inc
scas
hlt
cmp
xor
test
mov
xor
scas
jg
push
test
jp
dec
ja
lods
jmp
in
das
push
mov
xchg
push
adc
insl
adc
pop
pop
sub
daa
fsubr
cmpsl
mov
push
xchg
icebp
xchg
jl
outsb
pop
dec
sbb
pop
mov
cmp
sbb
sub
out
cmp
cld
movsb
iret
jge
bound
repz
adc
pop
cmp
inc
ljmp
mov
cmpsb
fwait
cwtl
jp
and
cwtl
inc
mov
out
mov
xchg
and
call
jl
icebp
icebp
xchg
addr16
jecxz
cmc
xor
cmpsb
inc
mov
lret
or
scas
add
jbe
mov
aas
enter
ficompl
lock
and
push
and
adc
push
lods
ret
mov
test
fcoms
mov
mov
daa
inc
push
adc
sub
in
fimull
push
enter
mov
xor
lea
dec
fsubrl
shlb
pop
pop
mov
push
dec
jo,pn
push
cld
insl
andb
daa
xor
fisubl
ds
ss
lahf
sub
adc
adc
movsb
xor
mov
pop
fdiv
fists
pop
push
mov
arpl
add
xchg
xor
dec
mov
jle
xchg
arpl
dec
mov
subl
sbb
cmpsl
xchg
or
repz
pusha
xchg
add
mov
cmp
pop
add
out
jno
scas
aas
push
clc
dec
push
cwtl
jmp
imul
jmp
std
bswap
inc
cmpsl
mov
pop
inc
pop
sub
insl
scas
loop
addr16
and
add
outsb
ja
insl
or
test
sahf
xchg
jnp
sbb
xorb
mov
push
and
mov
ds
test
and
shlb
or
in
das
push
lcall
lret
stos
or
xchg
cmp
jle
xor
in
jae
sub
jecxz
sbb
mov
lcall
test
shr
loope
arpl
icebp
out
jnp
aad
mov
pop
cmp
movsl
mov
jle
int
sti
lock
cs
sub
out
dec
cwtl
jbe
dec
xchg
testl
inc
outsb
rcl
in
sti
ljmp
lods
mov
pop
adc
xchg
aam
lds
mov
push
push
pushl
stc
icebp
fldt
sti
pop
inc
dec
pop
inc
out
inc
or
inc
movsb
jmp
jg
cmp
xchg
or
hlt
mov
movsl
cs
and
dec
lret
subb
mov
movsl
pop
mov
sub
pop
or
xor
add
mov
inc
pop
push
fs
stos
add
xchg
mov
lds
mov
outsl
leave
sub
aaa
mov
mov
imul
mov
jns
lods
push
push
add
xorb
cmp
aas
imul
sub
sub
push
jne
push
stos
test
jmp
jb
movsl
daa
sub
push
mov
mov
mov
pop
lods
test
sbb
or
or
jge
cmpb
clc
test
and
in
jb
xchg
or
mov
xor
ror
mov
adc
in
add
inc
loope
push
aad
or
push
pop
cmc
dec
sbb
repz
dec
xor
pushf
adc
lds
xchg
stc
int
cwtl
ja
adc
rorb
push
jp
pop
aam
ja
daa
cmp
in
leave
cmp
push
jb
int3
dec
lcall
shrb
ljmp
mov
movsl
xor
pop
addr16
cmp
clc
pop
ja
aad
jb
mov
ss
push
push
and
pop
dec
pusha
inc
push
mov
inc
loop
mov
mov
lcall
xor
scas
dec
imul
int3
xchg
cld
cmpb
and
std
mov
pop
je
or
push
cmp
ss
in
mov
insb
aad
add
les
repz
ss
sub
jno
fstpt
clc
pop
in
subb
arpl
enter
xchg
dec
ljmp
popl
mov
mov
push
dec
ljmp
fistps
fdivl
test
sbbb
jg
js
dec
xchg
mov
sbb
fwait
loopne,pn
aas
int3
and
imul
in
xchg
jl
push
push
lret
dec
xor
jl
xchg
xorl
mov
andb
ret
mov
mov
inc
in
mov
movsb
cltd
mov
sub
inc
lret
aad
lods
test
inc
fdiv
es
inc
mov
push
stos
das
add
adc
sub
and
jbe
inc
jns
insl
lds
out
sahf
sbb
push
test
hlt
or
not
xchg
inc
xor
out
cli
test
sbb
cmp
pop
in
xchg
mov
frstor
into
aas
jecxz
sbb
sbb
cwtl
mov
cmp
in
mov
arpl
das
mov
jle
add
addr16
push
and
int
loope
and
in
xchg
or
or
mov
in
sbb
shlb
sub
dec
dec
les
mov
out
mov
mov
mov
arpl
xor
fldpi
in
fdiv
mov
mov
mov
stos
dec
sub
rcll
jno
je
movsb
ljmp
lds
jge
ret
sub
jae
jne
push
push
push
xor
inc
imul
push
ss
xor
sbb
pop
aam
fwait
cwtl
push
cmp
popf
or
pushf
jbe
addl
mov
and
bound
jbe
add
push
insl
xor
gs
push
stos
mov
insl
mov
ret
pop
lea
jle
push
outsb
or
dec
xchg
sbb
push
outsb
aaa
popl
loope
or
testb
pushf
pop
cmp
aas
aad
loopne
xlat
sarl
and
push
jecxz
fnstenv
fwait
test
aad
xorb
inc
jmp
popf
cwtl
xchg
mov
xor
sub
je
mov
mov
mov
pop
sbb
jns
aas
jo
aaa
jecxz
addr16
jb
mov
and
aad
fmull
nop
or
pop
std
les
hlt
xchg
xor
popf
sbb
mov
lea
loope
push
shll
mov
sarb
inc
ds
repnz
jge
and
test
cmpsl
loope
jmp
inc
xchg
sbb
xchg
cmp
inc
and
mov
jnp
pushf
sahf
pop
insb
clc
lods
jno
xor
aas
addr16
dec
push
or
fiaddl
adc
sbb
xchg
mov
lea
jg
jmp
popa
cmpsl
add
adc
mov
push
cs
adc
jg
jge
xchg
pand
push
add
mov
fcomps
pop
sbb
push
aaa
insl
je
sbb
cli
daa
jle
lcall
jmp
int3
in
push
js
mov
inc
add
mov
pop
aaa
xchg
xchg
sub
mov
mov
mov
insl
popf
pop
sub
mov
sub
sbb
push
add
or
push
aad
neg
cmp
arpl
out
mov
into
outsl
sub
pop
mov
push
push
push
adc
jne
or
sarb
pop
push
pop
neg
and
punpcklbw
jo
int3
jmp
fidivrs
inc
inc
fstps
jecxz
mov
cmp
ret
push
pop
cmp
bound
fstps
das
xor
push
into
sbb
mov
push
aas
mov
cmpsb
pop
scas
jle
xor
inc
aas
loop
mov
pop
aad
xor
into
mov
fwait
mov
insb
push
add
arpl
mov
push
dec
mov
push
jno
loope
inc
ret
mov
es
cmp
popf
int
push
ljmp
mov
movsb
test
andl
xor
loop
cmp
ror
dec
mov
pop
pop
mov
dec
inc
leave
in
mulb
ret
loopne
push
inc
jne
sti
adc
xor
inc
cmc
out
push
sbb
lds
cltd
fcmovnb
test
daa
push
mov
mov
test
out
xor
mov
ljmp
pop
adc
pcmpgtd
dec
or
jmp
cwtl
rcll
push
or
or
lea
loop
cli
mov
outsb
repz
call
out
out
jns
dec
mov
mov
inc
test
int
xor
jbe
sti
jmp
frstor
hlt
pop
jo
jne
xor
addl
dec
adc
dec
loopne
jb
jle
stos
call
cmpsl
xor
imul
cmc
inc
sahf
push
cmpsl
mov
int
call
sub
leave
mov
lcall
adc
xchg
mov
mov
mov
repnz
xchg
xor
xlat
sub
xor
mov
xchg
cmp
pusha
outsb
stos
pop
lret
sub
inc
movsb
fabs
sbb
fcoml
pop
nop
mov
sbb
jb
pop
push
and
loopne
repnz
mov
jg
xchg
and
daa
sti
mov
pop
pop
cmp
dec
add
push
sbb
pop
pop
pop
mov
adc
inc
xor
mov
add
pop
dec
adc
leave
push
lahf
movsb
out
and
repz
pop
mov
push
rorl
push
mov
cmp
into
xchg
ljmp
out
int
jl
int3
test
cmpsl
mov
pop
hlt
fidivrl
repz
cmpsb
push
add
movsb
test
push
mov
mov
and
lods
push
mov
push
rorb
test
add
out
fildll
or
cs
cltd
notl
jle
pop
outsb
leave
pushf
lahf
stc
pop
xor
push
sbb
add
cmpsl
mov
ljmp
sub
xlat
push
jmp
rclb
fnsave
mov
adc
jae
cmp
sub
dec
stc
sbb
jl
idivb
sub
pop
mov
xchg
fistps
mov
xchg
mov
and
movsl
dec
adc
adc
push
inc
adc
lods
imul
and
xor
bound
sub
cmpsb
das
data16
cmpxchg
sbb
xchg
lret
jbe
insl
push
fisubs
mov
es
mov
outsl
das
fsubrl
cmpsb
sub
imul
iret
popa
insb
sub
into
mov
int3
call
adc
mov
aam
jns
xor
sahf
or
adc
pushf
adc
or
xor
mov
cmc
cmp
scas
sbb
popl
mov
divl
sbb
aas
sarb
push
add
cmpsl
jnp
out
pop
movsb
dec
icebp
out
cmpsb
out
and
xorb
dec
stc
adc
movsl
sub
lock
xor
cwtl
pop
negb
sbb
fstpl
adc
xor
add
stos
outsl
jmp
mov
call
stos
mov
fs
fsubr
fs
adc
lock
or
ror
adc
mov
and
inc
into
mov
orb
push
adc
pusha
repnz
inc
or
dec
fadds
fs
mov
in
lret
pushf
dec
mov
sbb
inc
xorb
push
pushf
and
lods
je
lods
push
ror
pop
sbb
jle
xchg
jle
ss
das
inc
push
aam
dec
and
mov
test
cmp
popf
add
call
pop
inc
out
push
pop
outsb
sbbb
into
ret
push
mov
sub
jb
pop
pop
je
mov
adc
bound
pop
xor
cwtl
out
jnp
insb
cs
jne
cmpsl
sub
sub
repnz
icebp
lret
push
xor
insl
sar
ret
iret
daa
sbb
mov
aam
adc
lret
mov
jno
and
fs
frstor
cltd
jns
stos
shll
jl
mov
cmp
fidivl
clc
jmp
dec
outsb
jp
push
dec
pushl
mov
dec
add
pop
add
sbb
jnp
les
push
push
fdivr
pop
mov
ljmp
insl
enter
call
and
pop
jne
lods
dec
in
movsb
pop
xor
lahf
pusha
mov
out
mov
add
xchg
mov
add
data16
mov
jmp
mov
cs
les
and
xchg
cmp
test
aad
test
movb
xchg
add
inc
jge
fdiv
and
push
jmp
jae
jns
inc
lahf
cmpl
mov
xchg
push
and
xchg
and
pop
fwait
negb
test
push
xlat
jo
jns
in
js
sub
push
mov
or
daa
sub
popa
lds
jnp
icebp
bnd
mov
xchg
sub
mov
mov
iret
daa
cmp
outsb
and
dec
mov
jns
push
stos
popa
mov
repnz
es
ja
imull
inc
ret
test
rolb
cli
jp
inc
sbb
lds
push
and
filds
and
scas
xor
inc
jne
mov
shrl
stos
jo
inc
and
dec
hlt
loope
and
or
mov
js
inc
inc
stos
adc
aam
test
negl
fmulp
adc
xchg
mov
sahf
cwtl
ds
int
sbb
fsubs
test
in
adc
jp
jge
xchg
lea
jmp
mov
js
call
add
jecxz
in
mov
lahf
jno
ljmp
in
pop
jle
jo
movsl
mov
xchg
push
mov
xchg
pop
int
mov
mov
push
push
shr
gs
dec
xlat
or
insl
mov
les
pop
mov
lods
mov
dec
adc
lock
xchg
cld
gs
xchg
fwait
add
out
call
xor
add
sbb
movsl
sbb
ret
ljmp
or
addr16
dec
mov
pop
cmp
outsb
dec
xor
daa
sbb
and
push
call
adcl
dec
cld
push
mov
ss
ja
sub
aad
fnstenv
sahf
in
out
addb
jle
pop
xchg
sub
lahf
or
lods
push
call
mov
arpl
cmp
pushf
xor
sub
ret
xchg
sti
test
repz
in
mov
lea
dec
adc
popf
xor
sub
inc
scas
pop
pop
xchg
and
adc
popa
loop
jns
xor
sub
jg
push
mull
in
xchg
ret
dec
addr16
scas
movsl
bsf
in
or
cmp
call
movsb
inc
pushf
cli
push
dec
mov
js
in
roll
out
sti
mov
int
sarb
push
sbb
stos
pusha
insb
or
xor
nop
mov
test
xchg
dec
les
mov
nop
xchg
sub
enter
outsl
and
cltd
add
mov
int3
and
xchg
inc
inc
sub
fucom
xor
sbb
jle
cli
cmp
stos
xchg
cld
decl
sbb
ss
mov
jae
jmp
jle
push
fwait
test
xor
mov
aas
imul
out
sbb
cmpsb
cli
sub
jne
inc
in
cmp
out
stos
test
xchg
dec
mov
cli
loope
add
les
push
leave
lcall
jecxz
mov
nop
iret
jbe
mov
in
vfmadd231pd
flds
pmullw
lock
gs
ja
pushf
rcrl
xor
add
hlt
add
or
add
pop
mov
repnz
aaa
pop
aam
lds
addl
dec
or
or
popf
jnp
lret
loopne
jle
mov
pop
nop
ljmp
fmuls
or
aam
lahf
xor
jecxz
in
rol
aaa
scas
mov
mov
lock
test
sub
enter
pop
xlat
cltd
ret
orl
shrb
cmc
imul
jmp
iret
inc
xor
aas
jne
call
stos
jae
popa
out
ja
adc
cli
inc
or
lahf
lret
jl
int
icebp
sbb
std
push
xchg
and
inc
sarl
in
sub
aad
pop
pop
lods
jle
adc
mov
pop
in
jge
pop
inc
andb
xchg
mov
xor
push
add
jmp
dec
push
mov
sbb
dec
pop
push
mov
int3
insb
push
lea
aam
and
inc
in
and
adc
mov
daa
mov
ljmp
sub
pushf
jns
addr16
fadds
mov
dec
xor
fistpll
fidivs
aaa
icebp
shl
sbb
push
adc
clc
fsubrs
mov
dec
push
sub
lea
dec
xor
ja
mov
xlat
fidivrl
xchg
jmp
xchg
push
pop
sbb
sti
cmpb
imul
mov
in
cmpsl
xlat
mov
loop
inc
jle
loopne
sub
js
mov
cmp
adc
push
jmp
cmp
and
lret
out
pop
inc
std
push
inc
mov
mov
addr16
pop
xor
outsl
or
cli
cmp
in
add
je
loopne
dec
or
mov
js
cmpsb
pushf
jb
imulb
scas
cmp
xchg
dec
or
or
out
addl
lret
add
cmc
out
push
into
xchg
sbb
sub
std
mov
cmp
mov
dec
inc
lods
aam
ret
and
sub
shrb
sbbb
imulb
mov
adc
std
gs
cmpsl
aad
add
xchg
shlb
add
cmp
loope
shl
stc
insl
scas
sub
or
into
cmp
mov
pop
stos
push
push
nop
xor
mov
xchg
push
push
sub
mov
or
mov
andb
mov
scas
adc
push
jp
fdivl
push
adc
out
je
mov
lret
jge
sub
mov
push
sbb
mov
jne
sbb
mov
xchg
lcall
pop
bound
mov
push
cmpsl
fs
pop
xchg
outsl
pop
arpl
dec
call
jnp
mov
xchg
mov
pop
push
mov
sub
push
dec
in
push
jl
xchg
xor
lret
inc
int3
pop
repz
dec
jae
aas
mov
lret
or
ret
lds
pop
mov
jns
daa
mov
pop
mov
cmp
push
push
in
mov
dec
daa
lock
adc
cli
fs
sbb
jns
pop
push
je
scas
cmp
adc
daa
stos
dec
pop
and
and
jb
repz
or
pop
and
sub
xor
jl,pt
or
icebp
aaa
icebp
pusha
inc
lock
jno
loopne
cli
outsl
jp
pop
adc
sub
ds
push
cmpsb
adc
movsl
movsl
add
mov
mov
cs
shll
pop
inc
fs
inc
ds
stos
xacquire
inc
in
cwtl
addr16
sbb
mov
pop
js
test
test
xorl
addl
push
mov
movsb
pop
lds
and
mov
bound
shrb
movl
sub
loopne
cld
out
pop
dec
clc
xchg
out
cmp
mov
ja
sub
adc
xchg
into
pop
jae
lock
cmp
sbb
scas
pushf
pop
and
decl
or
inc
int3
sbb
test
add
xor
cmp
mov
out
xchg
fcmovnb
sahf
mov
xor
popa
mov
jo
rcll
dec
decb
dec
or
mov
sbb
mov
cmc
xchg
mov
or
mov
mov
shl
sbb
push
mov
hlt
mov
fwait
popa
jnp
xor
xor
dec
loopne
out
push
mov
cmp
add
and
pop
loopne
fldt
xchg
arpl
cmp
leave
cltd
xchg
imul
add
sarb
enter
jecxz
call
sahf
das
mov
add
xchg
movsl
mov
xor
push
cli
push
xchg
into
pop
out
bound
js
in
cmp
mov
add
test
xor
jns
jg
mov
push
mov
loopne
sbb
xchg
ds
sub
push
pop
loopne
adc
mov
in
mov
sbb
call
iret
lahf
jnp
jg
mov
pusha
wbinvd
call
cmc
lahf
and
out
pop
jno
push
insl
divl
sub
or
mov
rclb
mov
pop
data16
inc
imul
push
add
test
sub
pop
mov
xor
cmp
lds
push
fmull
rclb
pop
jns
adc
repnz
outsb
dec
pop
xor
gs
out
dec
insl
cwtl
mov
inc
jb
ljmp
add
mov
lcall
fwait
mov
fiadds
jmp
mov
mov
pop
test
into
mov
aam
sbb
ljmp
arpl
test
jp
xchg
or
in
jo
dec
push
lret
inc
cmp
lods
xchg
inc
dec
lock
inc
cmp
decl
out
mov
pop
stos
stos
mov
nop
sbb
shrb
add
loopne
push
or
dec
push
dec
dec
pop
pop
ret
in
xor
dec
sub
fwait
or
lret
cmp
test
sub
adc
adc
ja
mov
movb
push
cmp
inc
mov
lahf
pop
add
imul
popa
mov
xchg
rolb
inc
fwait
cli
mov
push
push
int3
inc
jmp
fcoms
out
add
imulb
aad
ss
push
iret
dec
adc
mov
cmp
pop
adc
outsl
jne
mov
sbb
aas
pop
lcall
mov
mov
xor
mov
ljmp
mov
inc
xchg
jno
dec
sub
fstpl
out
rorb
sub
gs
jns
mov
les
and
sbb
mov
mov
xchg
push
xor
aas
rorb
mov
out
imul
dec
dec
xchg
in
mov
fwait
movb
add
mov
fistps
mov
repz
pusha
dec
repnz
fisubrl
enter
aas
out
stc
icebp
fcomps
test
cmp
push
mov
stos
pushf
and
dec
inc
adc
cld
out
or
pop
cltd
fwait
ljmp
and
lcall
ss
movsl
jle
and
sbb
jbe
mov
lahf
and
inc
cltd
inc
je
scas
jg
out
push
leave
mov
stos
shr
shl
mov
inc
pop
or
or
sbb
and
xor
xchg
xor
xchg
pop
movsl
jmp
adc
jnp
sahf
lea
hlt
add
fsubp
fisubs
push
dec
inc
jge
je
out
lds
mov
mov
std
cwtl
mov
cmp
mov
cmp
push
rcll
xchg
lods
aas
clc
daa
sti
ja
pop
xchg
out
jle
in
stc
les
js
leave
cmp
sub
ds
jmp
int
test
cld
clc
mov
dec
jmp
adc
orl
push
mov
negb
push
push
shrb
xor
adc
cmp
dec
fistl
jns
test
js
push
jle
dec
into
and
mov
mov
cmp
add
stos
mov
sbbb
cmc
mov
ret
sahf
inc
ds
and
inc
lea
push
jo
sub
jl
fimuls
inc
or
dec
adc
mov
mov
clc
mov
add
sub
lcall
movsl
and
jne
push
ret
or
jmp
jp
enter
inc
jecxz
mov
mov
mov
daa
mov
and
mov
mov
iret
pop
mov
mov
lcall
shlb
cmp
xchg
ds
pop
call
jg
sbb
cmp
jge
cmp
mov
mov
sbb
lds
mov
aaa
jge
popa
xorl
aad
js
andb
inc
inc
adc
sub
cmp
cmp
and
and
push
subl
hlt
out
pop
mov
leavew
fcomi
loopne
pop
push
sti
test
pop
push
xlat
push
jne
insb
into
or
adc
pusha
ret
mov
and
pop
inc
into
inc
ja
dec
cmp
lock
cld
mov
stos
arpl
loopne
repz
aam
and
test
rclb
nop
cmpsl
push
jp
dec
dec
add
fadd
pop
pop
mov
inc
out
push
pop
scas
rorl
cmp
mov
loope
fimull
mov
push
adc
or
cli
mov
jns
inc
loopne
or
xor
adc
jbe
aam
jno
dec
rolb
push
inc
xchg
lock
lcall
es
cltd
mov
add
mov
mov
clc
outsb
rcrb
iret
repz
xor
ja
jo
roll
sbb
sub
pop
pop
popf
pop
dec
negl
mov
jg
mov
inc
lret
fwait
mov
xchg
pop
dec
dec
or
jo
mov
outsl
push
jne
clc
pop
repnz
xchg
data16
popl
fnstsw
fisttpll
lds
test
out
out
cmp
mov
xchg
inc
mov
insl
push
fldenv
xchg
mov
dec
pop
dec
mov
nop
jl
mov
push
inc
std
lock
shll
ret
sbb
cmp
fs
mov
jl
mov
mov
jg
xchg
fsubrl
xor
xchg
mov
ret
jmp
mov
inc
scas
and
in
test
insl
and
popf
jnp
or
jg
adc
mov
cmp
pop
je
sbb
je
pop
ja
push
add
fbstp
fsin
rorl
mov
sub
rcl
fnstcw
jge
adc
cvtps2pi
rcll
inc
sub
cmpsb
int3
outsl
pop
sar
inc
cmp
pop
pop
pop
mov
pop
mov
adc
xor
not
sub
mov
mov
sbb
fistl
aas
hlt
push
sbbl
inc
jp
push
mov
ja
mov
jbe
sbb
jge
into
xor
mov
xchg
pop
ret
nop
cmpsl
inc
pop
sub
mov
jmp
pcmpeqb
idiv
daa
add
jge
mov
fmul
out
sub
neg
cwtl
aad
insb
jne
mov
push
aam
scas
jl
arpl
pushf
push
aaa
imul
sub
movsb
pop
dec
enter
sahf
pop
out
pop
xor
adc
cmp
icebp
pop
mov
mov
movsl
sbb
neg
sbb
or
rolb
scas
xchg
xor
cmp
fwait
push
pushf
mov
mov
sub
stos
adc
out
stc
xor
sbb
fsubp
xor
mov
mov
cmp
test
jae
dec
mov
notb
fnstcw
mov
and
or
test
mov
add
in
icebp
shl
push
mov
mov
pop
push
sub
pop
lock
mov
test
jmp
push
add
into
test
stos
jns
pop
sbb
inc
jbe
in
xchg
imul
mov
adc
ds
push
mov
sarb
cmpsl
adc
jmp
in
mov
cmpsb
add
cmpl
mov
lret
mov
fdivp
movsb
lea
xchg
mov
push
ret
pushf
sub
mov
icebp
dec
mov
cmpl
sub
out
outsb
sub
ljmp
pop
jle
fldenv
cmpsb
cmp
test
lret
cmp
ljmp
pmaddwd
push
aaa
lods
imul
push
xor
loop
adc
enter
rcr
into
adc
ds
nop
mov
int
cli
bound
aam
inc
loope
imul
sarl
add
out
loope
in
lahf
enter
xchg
lret
mov
push
out
xchg
sbbl
es
outsl
cmp
shrl
jecxz
and
ss
pop
mov
mov
das
data16
lcall
fidivl
fsubl
pslld
cs
shlb
mov
scas
xor
ficoms
addr16
test
add
outsb
xor
test
out
lcall
mov
lcall
leave
je
pop
dec
aad
je
icebp
sub
stos
pop
sub
stos
jecxz
fsubp
dec
dec
cmp
std
test
bound
mov
call
push
or
push
jnp
scas
inc
sar
pop
rcrb
stos
jns
fwait
inc
jg
xorl
add
pop
repnz
ds
in
adc
adc
rclb
lea
std
jmp
fdivs
ret
cmpsb
dec
test
setl
dec
repz
jbe
imul
hlt
dec
sti
mov
mov
mov
mov
pop
inc
sbbl
pushf
or
inc
xchg
lcall
and
std
inc
aas
xorl
mov
lret
mov
inc
inc
xor
fwait
xchg
sub
xor
clc
fs
cs
sbb
jl
jbe
jle
xchg
cmpsb
mov
or
mov
push
add
fnstsw
jp
cmp
sahf
fists
icebp
int
ror
xchg
jl
iret
cmp
ja
dec
adc
push
ljmp
mov
insl
fisubrl
add
std
pop
movsb
add
cltd
mov
lret
push
orb
cld
cwtl
pop
or
repnz
test
out
pop
or
jl
bound
sbb
aaa
pop
pusha
jb
ds
pushf
dec
sub
mov
sbb
out
or
jo
jecxz
fsubr
push
adc
mov
fwait
sbb
jp
cs
icebp
jae
dec
testl
add
cmc
test
add
add
lock
sub
mov
pusha
test
push
mov
mov
mov
xorb
sahf
and
adc
pop
xor
push
sub
inc
dec
sbb
cmp
dec
push
pop
ljmp
mov
cld
sahf
int
mov
out
pop
mov
or
jmp
xor
mulb
loop
rolb
push
gs
pusha
pop
dec
pusha
rcrb
ljmp
ss
fcmovne
or
xchg
xchg
fists
jno
jge
inc
add
addr16
in
sub
aaa
xchg
mov
out
xor
xchg
fwait
rcrb
ljmp
mov
daa
or
out
jmp
fs
test
pushf
inc
inc
or
dec
push
mov
fdiv
jp
shll
cmpsb
adc
push
adc
std
rorl
mov
call
push
xchg
out
xchg
inc
js
pusha
xchg
jo
sti
lods
inc
and
sbb
sbb
cmp
loopne
rcrl
subl
cs
ss
cmp
pop
jne
in
into
shrb
sub
xor
test
mov
jmp
int3
lcall
flds
ret
jbe
and
cmp
shrb
imulb
xor
nop
jg
or
mov
and
pop
adcb
test
les
jb
bound
repnz
cmpb
dec
sub
rcrb
out
mov
dec
inc
divl
add
ja
sbb
int3
sub
movsl
pop
movsb
cmp
xchg
pushf
cmp
into
xchg
cld
jno
cmc
xchg
or
insl
inc
pop
mov
xor
adcb
aas
inc
adcb
mov
jle
adc
or
sub
adc
aam
add
inc
les
outsb
mov
or
in
decb
add
lea
repnz
pop
adc
mov
adc
lret
mov
iret
sub
jno
xchg
mov
mov
cmpsl
xor
or
sahf
pop
push
addr16
add
mov
or
mov
adc
adc
inc
test
cmpsb
movsb
xlat
jns
pop
jle
and
fmull
movsl
jns
push
cmp
cmp
ficompl
xor
jg
addr16
orl
test
adc
xchg
fcmovb
shlb
leave
pop
sub
pop
std
jae
repz
push
cwtl
push
nop
aas
jecxz
or
or
pop
pop
in
fisubrl
xor
add
or
sahf
jno
or
outsb
lret
clc
shrl
std
mov
fisttpll
into
inc
push
adc
sbb
sbb
push
adc
xor
ja
jae
mov
imul
push
dec
fidivrs
icebp
jecxz
test
xlat
inc
int
les
nop
pop
insb
jp
test
or
fstpt
sbb
inc
mov
test
das
nop
push
movsl
or
fs
rcl
pop
mov
jge
pop
cmp
stos
jecxz
push
fs
in
pop
lock
insb
scas
lea
push
sub
mov
mov
lods
sub
in
sbb
jns
pop
cli
pushf
add
mov
adcb
movsl
outsb
dec
mov
icebp
dec
dec
inc
inc
xor
add
lea
push
mov
inc
pop
scas
adc
push
sbb
cs
mov
aad
push
mov
mov
das
mov
js
decb
push
jl
mov
sub
jo
jge
push
int
mov
iretw
mov
mov
cmp
scas
lods
sarl
and
sarl
mov
fs
mov
adc
or
inc
out
push
mov
hlt
cs
and
insb
or
pop
mov
lcall
into
and
loope
gs
fmuls
dec
ret
pop
mov
xchg
in
insl
xor
in
imulb
mov
int
push
std
pop
pop
daa
cmc
mov
xlat
sub
sbb
sub
dec
sub
mov
mov
or
adc
aas
mov
xor
lods
add
xor
pop
cmp
inc
jmp
xchg
scas
push
jecxz
mov
pusha
shl
jo
push
out
jge
jmp
mov
lcall
imul
sbb
adc
dec
pop
fsubrl
cltd
xchg
xchg
push
pop
mov
rcrb
fwait
inc
xchg
mov
cmp
enter
fidivs
lret
lods
lret
add
fbstp
ja
mov
add
stos
fstpl
repnz
push
push
xchg
out
popf
jge
lock
inc
jmp
inc
fisttpl
lret
rcrb
or
mov
imull
adc
mov
iret
paddusb
adc
call
mov
jmp
enter
ja
loope
scas
call
popa
push
daa
insb
nop
clc
or
mov
push
pop
jns
push
rol
fcmovnb
nop
mov
test
enter
out
inc
lods
lods
gs
fiaddl
inc
into
jne
insl
mov
jno
in
pop
add
and
popf
imul
ret
repz
add
pop
mov
inc
push
add
ja
insl
mov
cmp
push
jge
imul
xchg
data16
sub
mov
cmp
pop
inc
sub
xchg
rclb
pusha
dec
push
xchg
push
mov
sbb
xchg
sbb
push
xchg
pusha
cmpsb
lahf
testl
mov
mov
jle
push
enter
push
jp
push
xchg
push
xlat
fsubs
lock
jge
mov
fidivs
mov
xchg
cld
dec
mov
mov
dec
ja
pusha
jne
push
ljmp
push
out
iret
imulb
test
jge
fnstcw
adc
pop
cmp
mov
mov
imul
xlat
je
mov
das
aam
add
sbbb
push
push
cmp
cld
lret
mov
sub
mov
mov
loope
mov
shrb
repz
inc
movsl
push
popf
arpl
pushf
dec
shl
dec
dec
sbb
outsb
cld
jecxz
lret
mov
subl
adc
sbb
jecxz
xchg
subb
arpl
inc
cmp
mov
sbb
sbb
or
sub
xor
and
leave
add
addr16
int
repnz
adc
fimuls
mov
stos
pop
pop
or
gs
int3
das
lea
xchg
data16
int3
adc
arpl
xchg
push
sub
imul
xchg
xlat
jne
push
daa
pop
nop
mov
mov
movsb
imul
pop
test
pushl
outsb
inc
loopne
dec
xor
dec
loop
or
push
mov
lods
pop
push
cld
lret
clc
bndldx
jmp
sarl
mov
jo
mov
loop
pop
mov
cltd
adc
pop
lds
add
jg
mov
inc
add
cmp
nop
ljmp
add
xchg
pop
and
out
push
mov
out
fistpll
jle
jb
mov
out
jo
adc
stos
cmpsb
in
adc
jb
arpl
mov
and
sub
adc
jno
jcxz
adc
into
add
and
addr16
dec
xchg
neg
mov
pop
shlb
fucom
std
mov
jb
les
popa
inc
add
pushf
jecxz
sbb
outsb
enter
mov
dec
into
pop
pop
pop
ja
imul
in
jne
mov
add
out
test
xchg
aam
inc
ss
mov
xchg
and
cmp
aas
xchg
mov
aam
scas
cmc
pusha
outsb
in
jle
mov
in
scas
pop
out
addr16
sub
add
or
mov
lcall
and
jmp
sub
add
cmp
pop
jb
test
loop
repnz
mov
fisubrs
jae
and
icebp
sbb
add
jl
test
jbe
std
dec
xor
or
sbb
push
sbb
add
fs
daa
push
xchg
mov
out
dec
add
test
mov
pop
adc
inc
clc
rclb
cmp
jp
adc
sahf
popa
repnz
orb
loop
ja
pop
nop
test
add
mov
loopne
in
push
outsl
mov
movl
leave
or
in
ss
pop
cli
jb
lds
dec
mov
push
xor
dec
sub
xorb
cmp
leave
and
adc
aam
cmpsl
push
sbb
aam
add
ret
pop
shlb
divb
inc
leave
xor
cmc
out
adc
iret
aam
repnz
mov
pop
inc
mov
xor
or
sub
lea
xor
inc
pop
xchg
pop
cld
jl
add
out
nop
mov
adc
aaa
dec
xchg
pushf
jae
movsl
fwait
outsl
xor
loopne
fidivrl
out
cmp
ss
fcmovu
cmp
dec
xchg
jmp
inc
push
testl
pop
sbb
dec
jle
xor
call
rcrb
mov
mov
sub
jl
lret
mov
loope
dec
sti
call
mov
in
mov
test
jae
mov
fwait
adc
or
repnz
pusha
in
xchg
xor
lock
outsl
push
pop
pop
adc
bound
push
in
cmp
xchg
jbe
sbb
push
aad
push
xor
fisubrs
adc
enter
jecxz
inc
mov
pop
divl
push
push
xor
in
cltd
push
jp
cmpl
mov
xlat
push
andb
popf
ret
dec
fnstcw
jnp
sarl
adc
adc
sti
sti
fdivrl
xchg
add
sub
pop
pop
out
stos
sub
iret
mov
or
pop
fnsave
add
dec
andl
mov
sub
mov
leave
imull
into
int
into
test
xchg
mov
mov
movsb
rcrb
xchg
bnd
ljmp
imul
jo
mov
jae
pop
cmpsb
jg
fldt
mov
daa
leave
int3
stc
ffree
and
sahf
sub
call
inc
push
jl
cmp
mov
into
ds
and
andl
sub
stos
xchg
and
sub
fisubrs
lods
push
lods
cmp
dec
inc
pop
lods
out
pop
outsl
icebp
mov
sbb
loope
enter
mov
pop
xchg
out
jmp
cmp
sbb
mov
out
mov
and
xor
ljmp
sub
pop
sub
stos
mov
nop
cmp
cmp
jmp
rorb
push
arpl
std
mov
xor
pop
cmc
dec
adc
nop
jns
lods
divl
sbb
in
shrb
sub
sbb
and
cmpsl
test
or
jg
lock
loop
pop
test
pusha
mov
mov
sub
pop
fldl
in
movsb
or
mov
and
sub
xor
mov
ljmp
in
push
pushf
and
push
jl
bound
mov
movsb
add
cld
xchg
xchg
sub
enter
jae
inc
mov
dec
adcb
xlat
int3
jmp
popf
mov
test
adc
add
mov
mov
mov
cwtl
movb
pop
dec
xchg
cmpb
outsl
push
fadds
cld
add
adc
pop
pop
dec
push
fcoms
mov
shrl
adc
into
dec
push
shrl
dec
pop
dec
mov
dec
loopne
mov
jno
adc
pop
dec
mov
pop
lahf
inc
in
add
mov
ficoms
ret
test
adcl
repz
push
inc
hlt
cmp
pop
xchg
ds
dec
lods
cld
rcl
aam
mov
mov
push
jl
pop
inc
inc
addl
lret
aad
or
imul
ja
sub
xchg
lretw
mov
pop
xchg
pushf
jne
mov
testl
or
leave
icebp
add
cmp
jmp
lock
adc
in
test
cmp
idivb
insl
movsl
loop
cs
jno
lods
imul
sub
inc
pop
ljmp
and
dec
ds
cmpsb
xchg
adcb
or
pop
loopne
ret
sub
and
mov
fwait
insb
dec
pop
inc
aaa
out
lods
and
pop
xchg
pop
negl
loopne
dec
dec
cmp
je
divl
pop
popa
arpl
push
js
sbb
adc
adc
mov
dec
sub
jnp
loop
test
pop
ret
mov
stos
inc
sub
leave
sub
dec
insb
xor
mov
dec
jl
or
pop
std
jmp
test
out
xchg
inc
mov
mov
sbb
fmul
adc
sar
mov
pop
out
outsb
mov
bound
fildll
adc
cmp
mov
cltd
mov
jmp
in
les
sahf
pop
test
inc
sbb
ret
leave
push
cmp
jmp
pop
cltd
daa
outsl
icebp
mov
ljmp
scas
jl
sub
ljmp
jbe
cmp
stos
pop
je
adc
popa
pop
ljmp
xchg
add
cli
sbb
mov
jb
stc
sbb
mov
jp
xor
push
sbb
out
testl
movsb
cmp
scas
adc
inc
loopne
rclb
sahf
inc
sub
cld
int
and
mov
fxch
jp
rclb
cmp
fcoml
lcall
sbb
enter
icebp
test
and
in
inc
mov
push
jmp
lds
lret
cld
mov
aas
shrb
out
mov
xchg
mov
sbb
scas
outsb
xor
lods
inc
adc
inc
sub
les
pop
pusha
mov
push
xor
and
mov
mov
movsl
sub
inc
add
popw
cli
mov
push
adc
sahf
jbe
xor
mov
jae
in
xchg
nop
popf
aad
js
inc
aas
inc
cs
cld
xor
sub
and
icebp
jno
outsb
dec
jge
out
lret
lods
mov
fcmovnbe
inc
mov
aad
ss
sahf
cmp
mov
mov
xorb
add
add
aad
add
mov
sarl
adc
mov
xchg
cmp
daa
dec
lock
aas
jb
outsb
aaa
mov
leave
repnz
jo
jmp
lods
int
mov
or
movsb
xor
std
test
jns
lods
dec
push
lods
mov
xor
inc
outsb
icebp
cmc
xor
movsl
call
sbb
ljmp
in
xchg
in
add
pop
jo
andl
iret
cs
xor
xchg
or
arpl
xor
xchg
ret
or
cmp
cmp
dec
dec
arpl
mov
mov
pop
mov
dec
mov
add
xor
repz
xor
mov
outsl
and
xchg
xor
adc
push
mov
lcall
push
out
dec
and
push
popa
mov
cmpsl
stos
mov
push
add
dec
lea
push
lea
xor
jge
fsts
pop
pop
and
mov
flds
xlat
ss
cmp
pop
jge
in
mov
loopne
scas
pusha
push
sarb
jns
mov
mov
ja
and
ret
xor
push
pop
mov
lret
jle
repz
fdivrs
aad
in
mov
loopne
xor
nop
addr16
jae
arpl
jne
or
push
in
lret
lahf
inc
jnp
pop
popf
push
jge
std
daa
xor
stc
clc
mov
arpl
aam
and
arpl
nop
ret
dec
xchg
cld
mov
inc
scas
and
inc
fwait
scas
push
aam
adc
fsubr
mov
pop
and
inc
or
jecxz
sub
lret
jmp
pop
adc
in
mov
jp
cwtl
cmpsb
xlat
or
dec
sbb
push
fnstenv
enter
clc
lcall
repnz
xchg
test
jne
mov
dec
loopne
clc
ffreep
or
iret
xor
fcom
out
mov
jne
les
outsl
or
dec
jle
lods
xchg
jmp
outsl
inc
es
cli
test
nop
dec
mov
imull
mov
ja
lds
fbld
add
mov
repnz
aaa
movsl
push
sub
ret
cs
das
mov
aad
aas
js
dec
cmpb
push
lds
popa
jno
and
xor
xor
or
int
std
outsl
add
loopne
mov
xchg
cld
decl
faddl
ret
dec
ss
arpl
push
cld
lds
sub
mov
push
loopne
mov
movsl
int3
out
cmp
jns
mov
in
pop
stc
adc
fs
inc
inc
dec
shrl
mov
mov
mov
jge
ret
hlt
adc
or
pop
fisttpl
mov
inc
js
and
inc
pop
xchg
cld
push
cmp
add
xor
lock
sub
inc
popa
fstpl
pop
jge
inc
push
cmp
test
call
aaa
jp
fcoms
fimuls
mov
lret
mov
pop
jg
lock
or
scas
push
bt
repz
pop
mov
sub
jae
or
ffreep
mov
not
xor
in
test
jno
lcall
rorl
es
cltd
pop
and
ficompl
adc
xchg
lds
outsb
call
nop
add
add
mov
outsb
lret
push
pop
ficoml
jge
inc
mov
push
dec
imul
inc
jge
push
ret
nop
ret
test
pop
and
xorb
sbb
push
mov
xor
pop
hlt
mov
and
pusha
and
cmp
movsb
lret
or
fcom
into
xor
nop
xchg
ret
out
mul
mov
cmp
and
les
cmpsb
cmp
push
push
ret
mov
int3
aam
lahf
stos
jo
mov
sbb
pushf
adc
std
stc
mov
bound
xor
js
sarb
je
lcall
sub
fbstp
xchg
jae
sub
inc
or
jp
mov
sbb
lods
pop
or
pop
cmp
dec
addb
gs
orl
jecxz
scas
idivl
aas
sbb
sub
pop
outsb
lods
adc
in
mov
ret
popa
inc
cmp
mov
mov
movsb
xor
imul
loope
sbb
xchg
push
cmc
fisttps
inc
fimull
outsb
or
insb
mov
dec
jbe
mov
add
sub
adc
push
cmp
mov
ficompl
sbb
sub
dec
and
testl
jb
adc
push
test
mov
outsb
shll
bound
cmp
in
sbb
imul
ljmp
mov
mov
jne
jmp
fwait
cmp
mov
fbstp
loope
push
mov
jbe
decb
ja
pop
adc
xchg
shlb
mov
data16
mov
cwtl
mov
push
dec
outsb
repz
pop
mov
and
lret
outsl
add
mov
pop
sbb
rorb
outsb
mov
test
inc
sub
loope
int3
mov
cld
mov
shl
ret
cs
mov
iret
push
inc
xchg
cmp
mov
dec
cwtl
jb
pop
adc
mov
push
inc
sub
out
jno
jmp
xor
mov
pop
sub
clc
lods
pusha
out
mov
mulb
xchg
mov
das
rcrb
cmp
call
cmp
and
test
push
or
sub
sahf
lret
loopne
pop
pop
and
imul
shrl
cmpsl
testl
inc
mov
js
sbb
popa
cmpsb
or
or
dec
mov
repnz
xchg
aad
mov
push
xor
inc
scas
in
cmc
sahf
sahf
shlb
js
ret
cmp
jg
pop
jl
cld
out
mov
sahf
out
fdivl
loopne
fbld
cmp
aas
jb
mov
notb
inc
out
pop
xor
movsb
push
add
inc
mov
pop
sti
ret
xchg
adc
xchg
aas
and
xlat
lock
movb
or
lcall
call
daa
in
daa
rorl
pop
jnp
sub
loopne
inc
jg
in
fwait
sbb
es
push
inc
push
into
daa
xchg
aas
lea
stos
mov
xlat
test
test
lock
mov
ljmp
inc
jl
punpcklwd
pusha
clc
ss
add
hlt
inc
dec
jmp
jg
sahf
mov
mov
out
mov
inc
lds
insb
leave
push
aam
and
push
xchg
jnp
shl
cmp
jmp
xor
pusha
pop
mov
ret
push
cmp
bound
adcl
cmpsb
cld
je
sahf
mov
cld
inc
mov
outsl
pop
fbld
mov
jp
hlt
jecxz
adc
xor
rcll
outsl
xchg
in
insb
xchg
or
pop
xlat
icebp
xorl
mov
sub
insl
jo
lret
jmp
test
std
je
mov
das
pop
lea
call
dec
fisttpl
sbb
mov
dec
addr16
pop
xchg
and
shlb
xor
cli
fcmovnu
jno
jp
inc
dec
push
sbb
pushf
loop
shr
roll
cmp
xchg
leave
mov
add
hlt
pop
bound
fincstp
scas
fstl
inc
add
aas
scas
jecxz
pop
js
and
pop
arpl
iret
fcompl
mov
cli
or
sahf
xor
jmp
std
fcmovnb
xor
xchg
pop
xchg
leave
mov
aad
rolb
loopne
jbe
xchg
jl
sti
dec
jns
sahf
aam
cmp
adc
push
in
out
mov
xor
pop
xrelease
notl
aaa
lods
not
push
clc
mov
dec
in
push
xchg
test
rol
push
push
mov
sub
inc
mov
xchg
sub
addb
jmp
outsl
rcrb
mov
mov
test
or
xor
mov
pop
rcrl
adc
adc
and
call
popf
sbb
arpl
fwait
jg
and
ss
jo
dec
js
subb
push
test
push
cli
test
scas
stos
xlat
pusha
dec
maxps
or
xchg
fstpt
idivb
cmp
add
mov
in
jb
lods
mov
mov
push
jb
dec
bound
inc
das
jne
jle
les
pop
mov
sub
aas
mov
int
mov
ss
cld
andl
in
jg
pop
lcall
mov
jns
mov
dec
xchg
pop
adc
out
adc
mov
sahf
insl
aad
mov
xlat
ficoml
cmpsb
mov
mov
lahf
add
dec
jmp
inc
sub
jne
mov
adc
and
dec
and
int3
xor
add
sub
cmp
push
inc
jecxz
mov
mov
or
fidivrl
imul
jle
adc
and
lods
pop
imul
adc
inc
leave
cwtl
pop
push
test
loope
or
daa
xchg
add
jp
sbb
aad
mov
dec
adc
push
cmp
pop
ret
jmp
jbe
mov
xchg
mov
and
jbe
cmpsl
cwtl
jbe
mov
sbbl
iret
fmull
mov
sub
fwait
test
inc
arpl
fidivs
and
and
sub
add
xchg
aam
jg
mov
popf
mov
out
je
pop
cli
sub
cmp
pop
lret
out
cmp
lock
iret
jns
sbb
loop
push
lods
stos
out
enter
jns
aaa
daa
ja
aaa
jo
dec
and
cmp
in
mov
dec
dec
dec
jmp
sbb
push
mov
mov
mov
sahf
dec
mov
out
lret
mov
adc
loope
inc
ret
push
push
clc
hlt
cmpsl
stos
inc
xchg
aas
insl
sub
out
out
and
push
xor
adcl
lock
xchg
and
mov
xchg
jecxz
test
and
repnz
cli
or
test
mov
jl
insb
or
les
inc
shll
nop
lret
subb
xchg
cmp
mov
mov
mov
lds
dec
pop
xchg
ljmp
push
rcrb
pop
add
ret
maxps
ljmp
adc
rolb
lret
clc
cltd
xor
insl
mov
mov
or
mov
push
jmp
adc
or
adc
xor
fbld
test
pop
cmp
pop
pusha
mov
mov
cli
int
stc
outsl
std
idiv
or
repz
mov
outsl
mov
movsb
popf
pop
jmp
xor
and
sub
loope
ret
fisubl
loop
dec
idivb
arpl
xchg
jge
add
aaa
hlt
inc
or
nop
and
jg
pop
inc
or
mov
push
sub
in
shlb
dec
cwtl
fldcw
ja
cltd
ror
movsb
cmpsl
imul
mov
pop
gs
or
lea
or
adc
adc
mov
pop
out
jae
faddl
iret
adc
push
js
or
lods
enter
shr
mov
fistps
aas
adc
xor
and
jns
std
cmp
pop
call
xchg
aas
mov
movsl
std
addr16
xchg
and
cmp
mov
dec
call
sbb
jno
pop
sahf
loopne
mov
es
mov
leave
outsl
lea
idivb
xor
and
aaa
push
rolb
popf
popf
rclb
pop
inc
enter
loopne
je
test
lahf
dec
push
ds
fs
sub
rol
pusha
rcrb
or
or
cmp
stc
test
clc
xchg
push
stos
sbb
pop
aam
mov
test
lahf
and
mov
inc
jno
fucomi
orb
xchg
pop
outsb
jp
jmp
xchg
push
in
add
jo
and
push
pop
add
fists
into
pop
ja
sbb
add
add
movb
dec
cmp
mov
popf
icebp
cmp
cmpsl
push
inc
mov
add
cmp
jbe
test
add
jle
xor
cli
pop
rorb
mov
movsl
rorb
mul
mov
sbb
mov
notb
xchg
and
popa
fcmovnb
xor
add
xchg
imul
mov
cmpsb
jg
popa
mov
adc
push
movsl
aad
out
dec
add
inc
dec
neg
inc
push
or
or
xchg
aaa
or
ds
jo
pushf
int
dec
adc
ror
mov
outsl
push
loope
push
insb
int3
jp
jle
dec
add
cmp
jle
push
and
mov
scas
xor
mov
push
add
stos
pusha
mov
lret
dec
cmp
imul
inc
pop
in
mov
dec
and
lret
adc
call
fistps
push
out
jb
xchg
push
pop
testb
lret
pop
movsb
pop
lods
jae
push
fldt
add
sub
fistpl
shrl
pop
ja
jnp
lds
lds
push
add
cmpsw
push
push
or
fstpl
aaa
lock
shl
div
nop
and
adc
testl
pop
and
or
pop
pushf
in
fldt
imul
fnsave
mov
dec
lods
sub
jecxz
out
push
adc
gs
mov
jecxz
outsl
movsl
cmpsl
mov
jae
js
stos
rcrl
sbb
xchg
mov
cld
leave
lods
pop
xchg
fnstenv
mov
data16
mov
xchg
subl
and
sbb
xchg
and
push
pushf
push
out
popfw
and
shl
pop
jge
mov
xchg
jne
xor
dec
mov
xor
rorl
fiaddl
or
xor
je
pop
lret
int3
vaddsubps
push
mov
pop
mov
xchg
and
xor
pop
dec
loope
mov
cld
mov
movsb
outsb
inc
adc
xchg
mulb
inc
sbb
out
adc
sbb
xor
add
mov
cmpsb
pop
cltd
sub
mov
pop
cmp
shrl
mov
mov
out
mov
aas
cmp
pop
adcl
add
mov
maskmovq
negl
test
mov
stos
dec
call
in
pop
loop
jmp
es
popf
pop
std
shr
sub
dec
sahf
scas
rclb
pop
subb
mov
mov
mov
ss
or
push
jg
adc
sub
insb
sub
xlat
jne
jnp
jl
lods
jg
dec
or
inc
rcrb
xlat
in
fincstp
clc
mov
pop
adcb
stos
stos
mov
sbb
xchg
stos
adc
es
in
add
clc
xchg
xor
mov
leave
clc
mov
lds
inc
jge
lock
lds
es
fadds
push
or
jg
or
sarl
cmp
pop
imulb
xchg
sti
xor
jb
aaa
fists
xor
xor
sahf
push
mov
std
inc
cmp
popf
cmp
mov
arpl
jae
clc
in
jle
leave
push
in
or
mov
or
ret
xor
add
loop
xor
into
xor
adcl
arpl
mov
inc
sahf
and
add
sbb
dec
push
incb
or
jecxz
test
and
adc
add
add
inc
fwait
add
xor
std
call
sti
call
nop
cltd
adc
ret
out
aad
push
push
pop
daa
aas
sarb
pop
or
ja
mov
ret
and
dec
push
lahf
push
pop
sbb
in
ret
pop
rclb
push
fimull
test
xor
mov
ret
inc
loopne
ficoml
sbb
hlt
jle
mov
rcrl
lea
ja
hlt
adc
jg
les
cltd
xor
dec
movsb
xchg
gs
out
inc
pop
mov
cmp
in
cmp
pusha
mov
lock
xor
ljmp
addb
loope
jb
aaa
xchg
mov
inc
ficoml
cmp
cld
and
jns
sub
sarl
xor
imul
xchg
xchg
jae
jb
fidivrs
out
cmp
mov
dec
movsl
pop
pop
xchg
test
adc
insb
jmp
loop
xchg
pop
stc
insl
je,pt
jb
sub
cmp
sbb
shrl
cmp
leave
leave
aad
pusha
fldenv
jg
mov
mov
andb
xchg
lret
cmp
pop
gs
jb
and
sub
in
add
out
std
push
cld
push
jl
pop
jle,pt
dec
fsubs
inc
les
xchg
call
rorl
pop
cmp
inc
pop
sub
cmc
lds
or
idivb
iret
loop
pop
lods
mov
rorl
cmp
and
mov
pusha
imul
dec
jo
dec
loopne
jge
pop
fdivl
movsb
int
jb
jecxz
idiv
xchg
inc
loop
insb
and
pop
inc
dec
out
aaa
xor
icebp
cmp
jns
mov
mov
push
nop
cmp
scas
dec
stos
lock
mov
pop
in
test
in
and
stos
rolb
mov
inc
xor
cmp
frstpm(287
pop
repz
mov
stc
fcmovne
mov
push
mov
pop
xchg
popa
pop
adc
sub
adc
ss
nop
pop
es
inc
inc
mov
bound
sbb
and
outsb
ja
out
movsb
aaa
pop
cs
cmp
jae
pop
cmpsl
sub
jae
add
ja
dec
ljmp
mov
jge
bound
xchg
into
call
pop
fcmovnu
ja
mov
gs
pop
sbb
inc
jle
mov
out
pop
push
pcmpgtd
nop
lds
sbb
jnp
pop
cld
inc
imul
das
std
mov
sub
loop
shll
cld
mov
rcll
addr16
pop
sbb
fidivrl
or
loop
test
outsl
fildll
or
cltd
sub
sbb
imul
push
mov
int
jno
jns
or
pop
outsb
pop
pop
sahf
movsb
xchg
movsb
mov
fmull
iret
fs
inc
mov
sub
nop
mov
call
jl
loop
dec
ficoms
xchg
xchg
movsl
mov
jae
popf
popa
jnp
pop
xor
stc
or
push
div
dec
insl
mov
mov
pop
sub
mov
in
movb
mov
mov
movsb
out
ja
inc
mov
in
push
or
sub
adc
ret
mov
mov
jo
pop
push
add
pop
inc
outsl
adc
pop
test
icebp
or
pmullw
push
lods
push
sub
xchg
sub
add
jnp
decl
xchg
popa
mov
aaa
loope
add
mov
mov
js
xchg
fisttps
inc
js
mov
bound
inc
pop
sub
testl
push
jnp
ljmp
fdivrl
es
xor
popf
ja
pop
js
leave
sub
push
adcl
jne
mov
int
mov
aaa
push
ret
jle
incb
repz
cltd
shll
imul
sbb
js
test
popa
ja
movlps
lahf
push
cld
clc
and
cmpsl
pushf
inc
dec
jo
in
ja
ret
jo
lods
lods
fdivs
add
push
mov
js
shr
cltd
lahf
out
shrb
push
popa
js
outsb
movsl
cmp
jns
push
pop
xchg
stos
lcall
pop
sub
xor
lods
inc
test
and
push
int
jo
mov
and
data16
stos
push
sub
xchg
es
add
jp
jbe
mov
jp
mov
add
pop
ret
jb
iret
mov
pop
mov
cmp
mov
dec
xchg
test
add
jne
jno
cmpsb
jnp
mov
mov
cmc
int3
hlt
stos
dec
push
lcall
cmp
cmp
jecxz
adc
and
shlb
mov
in
loopne
mov
sar
xor
movsl
lret
hlt
in
sub
xor
sub
into
sbb
out
jns
adc
mov
push
jg
sbb
leave
fsubrs
in
pop
shrb
mov
push
cld
add
jbe
jno
jle
push
ljmp
stos
popa
xchg
xorb
or
xorb
ficoms
push
cmpb
mov
je
lcall
sbb
cld
call
lcall
jbe
xchg
mov
inc
mov
nop
xor
fsubrl
lods
mov
roll
mov
scas
mov
out
xor
dec
mov
adcb
gs
pop
mov
jp
adc
sub
ret
leave
stos
aaa
adc
jp
stc
lcall
shrb
mov
mov
es
xchg
mov
std
pmullw
xchg
rorb
xchg
jle
xor
ljmp
cli
notl
jle
jge
mov
sar
rorb
or
jns
jle
adc
adc
mov
clc
sbb
and
imul
jl
push
or
fdivrs
shrl
sub
pop
popf
mov
xor
xchg
roll
or
xor
mov
xchg
push
add
cmp
pop
aad
inc
popl
test
push
or
dec
xchg
in
nop
mov
jle
push
aad
xchg
pusha
add
xchg
pop
scas
xor
push
jae
cmpsl
xchg
push
inc
lods
mov
cmpsl
jmp
outsb
push
adc
ret
pop
popf
pusha
add
loope
arpl
dec
add
lcall
testl
xchg
dec
sbb
adc
lods
jb
pushf
push
pop
sbb
mov
pop
popa
xchg
subl
mov
stc
imul
mov
push
mov
jg
mov
lds
sarl
push
std
aas
rcl
stos
insl
insl
jmp
cld
dec
test
adc
jne
sub
push
and
mov
pop
fwait
daa
push
cmp
inc
nop
arpl
leave
pop
andb
mov
mov
out
add
ljmp
sbb
cmpsl
push
or
ss
lods
popa
jl
mov
dec
sbb
xchg
xlat
xchg
dec
dec
addr16
adc
mov
fnstenv
out
jbe
pop
in
jno
push
inc
xor
xchg
mov
push
ficompl
inc
jae
out
mov
xor
fstpt
movsb
push
xor
sub
roll
jns
popa
call
cli
mov
and
inc
pop
pop
dec
mov
xchg
or
aad
jb
push
dec
inc
or
lahf
cmp
lahf
lock
pop
js
or
jecxz
cltd
insl
and
shr
repz
adc
mov
inc
das
outsl
insl
bound
sti
in
inc
mov
imul
cltd
addb
clc
pop
xor
or
addr16
or
push
dec
lahf
mov
mov
mov
add
mov
or
ss
loopne
loope
call
cmp
std
pop
shl
in
mov
rcrb
lahf
xlat
cmc
and
out
mov
push
in
add
sbb
push
iret
and
and
xchg
mov
aad
nop
aaa
cld
xor
jg
or
fsubp
push
cmp
inc
dec
inc
flds
inc
cmpl
cmp
push
sbb
jno
aad
inc
sub
pop
inc
xor
int3
inc
push
dec
mov
jns
mov
inc
pop
nop
mov
xor
jmp
cmp
xor
xchg
push
or
mov
in
cmc
add
jmp
jecxz
je
dec
scas
arpl
lods
mov
movsb
sub
jae
lret
sub
pushfw
add
inc
mov
cmovns
inc
push
or
mov
dec
add
inc
in
add
js
push
mov
sarl
pop
mov
push
lret
sar
jae
cld
punpcklbw
mov
pop
push
mov
dec
sbb
and
dec
jns
mov
sub
cmpb
popa
and
jp
mov
pop
inc
fiaddl
add
jp
pop
mov
bound
inc
dec
jg
xchg
es
push
mov
adc
adc
test
out
stos
push
test
and
sbb
jge
insb
or
cmpb
xchg
inc
mov
mov
jno
or
lock
sbb
lret
xor
fs
push
lods
push
and
xchg
xchg
push
popf
mov
rorl
mov
dec
ret
out
out
mov
imul
mov
imul
out
xor
test
ret
push
xchg
jb
sub
jnp
gs
jmp
push
lock
sbb
and
bound
fdivrp
stos
in
add
jo
jge
sbb
ljmp
xchg
ss
push
jb
sbb
push
dec
lret
ss
sti
xchg
outsb
xor
cmpsb
imul
mov
inc
lahf
repz
xchg
je
je
adc
outsb
outsl
and
pop
iret
jge
cltd
loop
leave
push
loope
mov
sub
inc
jp
dec
mov
and
mov
jge
das
dec
fbstp
and
cli
lahf
sub
and
and
shlb
jae
stos
ret
lahf
and
adc
jge
imul
jb
enter
adc
pop
cmpl
cmp
lds
or
mov
test
rcll
mov
sahf
pop
inc
and
mov
lret
iret
sti
fisubs
mov
or
sub
sbb
inc
push
pusha
mov
sub
aam
loope
movsl
scas
addr16
sti
mov
adc
fisubrs
fcompl
outsl
movsb
dec
push
std
inc
or
sbb
push
enter
push
sub
imul
adc
ds
dec
mov
mov
mov
fisttpl
sub
test
xor
pop
insl
call
and
popa
sub
in
mov
inc
xchg
lods
push
rclb
sbb
stos
hlt
add
or
pop
pop
push
aas
mul
adc
push
cmp
subb
lods
lcall
inc
icebp
push
sarb
mov
adc
addr16
imul
xchg
divl
inc
icebp
mov
adc
pop
addr16
xor
xchg
xor
into
icebp
lock
lock
add
addl
pop
fldl
pop
fs
gs
insl
pop
mov
push
mov
xor
mov
mov
mov
sbb
fisubs
lcall
mov
ficompl
sub
leave
push
jecxz
lock
test
xchg
inc
mov
ljmp
and
dec
and
outsb
icebp
fbstp
cmp
cmp
push
scas
ljmp
icebp
cmp
sbb
out
or
adc
addr16
xchg
cmp
jo
xchg
ret
cwtl
xchg
sbb
rcr
and
jb
iret
jmp
xchg
fs
in
imul
xchg
pop
and
jb
cmpsl
mov
or
insl
or
mov
insl
mov
and
jo
pop
sbb
dec
mov
out
fisubl
in
or
mov
cs
in
out
fadd
jne
inc
push
fs
inc
popa
sbb
int3
daa
and
sti
es
add
lahf
inc
dec
shll
out
inc
push
cmp
popl
sbb
leave
and
pusha
sti
loopne
xchg
gs
arpl
loopne
xchg
xlat
pop
addl
fstpl
lea
movsl
lret
push
js
inc
jns
hlt
cmp
add
push
ret
nop
cmp
lods
fstpt
repz
iret
xchg
sbb
jbe
hlt
bound
xor
aas
in
mov
pop
push
sbb
popf
mov
inc
mov
in
nop
insl
push
in
aas
dec
push
cmc
cmp
outsl
sub
int
xchg
pop
iret
into
inc
jne
xor
lret
icebp
push
aaa
in
stc
dec
clc
movsb
jbe
sahf
test
pop
mov
popa
scas
mov
les
les
inc
stos
out
push
lahf
pushf
mov
mov
out
loope
leave
in
cmp
jl
cmp
stos
leave
xlat
dec
in
or
pop
mov
push
xchg
scas
mov
rclb
push
addr16
scas
sti
cwtl
mov
dec
push
bound
adc
xor
data16
ss
jmp
and
cmp
js
jno
add
jnp
inc
mov
dec
sub
int
dec
nop
lret
call
mov
inc
pusha
rcrb
mov
lret
hlt
jle
stos
cltd
pop
ss
inc
mov
pop
jmp
roll
sti
sbb
inc
data16
cs
xchg
pop
cmpl
xor
test
cltd
sbb
lret
out
sub
rcrl
test
sahf
aad
ficoml
jae
mov
mov
mov
cwtl
inc
enter
lea
mov
stos
lods
in
mov
sbb
shl
push
rorl
adc
daa
testl
pop
stos
loop
popa
ss
ljmp
xchg
loopne
sbb
push
aad
enter
jnp
cltd
fcompl
push
push
sbb
mov
lcall
dec
lret
fldl
push
repz
pop
adc
pop
pop
pop
mov
and
and
cli
and
addl
mov
negb
data16
arpl
push
jb
sbb
lret
sub
repz
filds
in
mov
mov
xchg
inc
add
xlat
sbb
jb,pt
imul
outsl
lods
fiaddl
xchg
pushf
xor
pop
inc
xchg
arpl
sub
mov
jb
fwait
dec
testl
pop
mov
imul
xor
lods
pop
sbb
and
gs
ja
jmp
lcall
std
gs
je
fs
jle
lret
cltd
int3
fdivl
jnp
in
cmc
xor
mov
jo
jns
loop
cmp
movsl
and
in
stos
and
clc
sbb
cmp
sbb
add
loop
add
jmp
sbb
jno
cmc
push
stos
pop
and
add
sub
out
push
mov
inc
scas
inc
fisttps
cmp
pop
jg
shrl
adc
lcall
inc
pop
dec
lret
aaa
push
loopne
mov
and
and
or
vminps
dec
pushf
ret
fistpl
push
stos
mov
inc
and
jns
inc
xor
push
fildl
fdivrs
cmp
xchg
ret
xchg
sti
and
add
pop
xchg
sbb
cld
out
pop
jg
and
add
dec
sub
sahf
sarl
bound
sbb
xchg
pop
push
sbb
xchg
ret
mov
pusha
or
or
stc
loop
mov
out
out
push
pop
jl
xlat
adc
cmpsl
addr16
push
cmp
add
enter
pop
inc
sub
mov
in
ret
int3
test
in
inc
jecxz
mov
aam
xchg
leave
iret
cmpsl
lcall
mov
lods
cmpsl
pushf
dec
xor
xchg
and
movsb
pop
dec
dec
xchg
pop
pop
sbb
cld
push
test
mov
lahf
lock
cwtl
rcll
dec
arpl
and
mov
fists
negb
or
out
jmp
adc
and
idiv
loope
push
mov
divb
test
xchg
cwtl
xchg
daa
call
test
imul
cmpl
aad
mov
fdiv
mov
dec
jb
out
loope
test
and
movsl
lds
enter
jb
mov
data16
dec
push
outsl
sbb
and
aad
cmp
aam
and
rorb
and
push
or
fdiv
sub
cli
mov
imul
pop
mov
or
neg
xorb
cwtl
fdivrs
aad
xor
push
data16
sahf
jecxz
pop
cmp
inc
lods
pop
adc
inc
adc
aaa
loope
test
insl
loopne
jb
dec
cmp
aaa
enter
icebp
xchg
mov
fidivrl
fisubl
pop
icebp
sbb
jbe
rorb
scas
xchg
adc
add
fdivrs
and
jbe
add
inc
dec
mov
in
and
fildll
loop
mov
push
xor
into
mov
aam
cmp
shlb
aas
pop
sti
xchg
xor
daa
je
jne
mov
cmpsb
xchg
cmc
mov
sbb
insb
adc
arpl
push
aad
adc
mov
les
push
rorb
or
cli
arpl
xchg
add
iret
andb
or
inc
fsub
dec
outsl
test
and
pusha
xchg
subl
insb
cmc
mov
jnp
adc
stos
filds
nop
popa
out
sbb
jae
mov
test
les
movl
and
dec
dec
sbb
fisubrs
dec
pop
push
xchg
cli
es
or
pop
xchg
xor
and
cld
bound
movsl
adc
stc
or
sti
adcb
lods
movsl
popa
jmp
cmp
inc
test
dec
sbb
test
xor
rcll
inc
jp
fadds
aad
fstps
sub
cmp
pushf
jnp
jnp
fidivrl
scas
nop
mov
aad
sbb
adc
aaa
or
cwtl
xor
hlt
dec
fcoms
lcall
aad
push
leave
jmp
mov
inc
imull
neg
dec
andl
or
test
popf
inc
dec
pop
pop
test
aas
jp
mov
shlb
out
icebp
add
outsb
inc
sub
test
add
fcoms
lret
pushf
ficompl
imul
stos
les
jnp
adc
cmpsb
imul
push
mov
fidivrl
jnp
lds
xchg
dec
call
jp
adc
add
adc
sbb
repnz
out
cmpsb
dec
leave
jg
and
push
xchg
imul
sti
imul
les
jns
dec
push
aad
xor
dec
ss
jne
insl
out
adc
mov
call
mov
fcmovnb
cltd
outsb
fsubs
es
and
gs
and
out
pop
cmp
arpl
push
out
sub
push
sub
push
mov
add
dec
adc
jmp
adc
fucomi
shlb
into
popf
lcall
push
adc
scas
in
push
mov
pop
sub
incl
aam
aaa
push
or
add
mulb
sahf
ss
or
fldenv
cld
in
ljmp
addl
xor
mov
movsb
and
lods
dec
in
stos
scas
mov
cltd
sub
push
sub
jecxz
inc
mov
cmovp
test
xchg
mov
pushf
das
sub
shlb
xchg
mov
xchg
and
pushf
into
mov
push
mov
les
xor
imul
mov
mov
inc
sub
cmp
leave
cmp
pop
pop
subps
jp
sub
sub
addr16
imul
ret
sub
xchg
insb
jle
notb
jno
enter
cmp
lock
lods
pop
loop
adc
add
adc
mov
xor
sub
mov
pop
sbb
in
outsl
push
xlat
call
mov
addr16
pop
into
dec
cmc
daa
cwtl
ret
sub
add
mov
xor
clc
pop
imul
out
pop
cmpsl
inc
out
or
aaa
jnp
jmp
mov
xor
jae
cltd
data16
mov
and
filds
inc
and
lea
cmc
lock
pushf
push
push
pop
dec
add
cmp
scas
pop
rcr
addr16
sub
xor
addl
lret
push
inc
mov
outsl
ret
cmp
jbe
sub
ja
les
jle
mov
ja
push
roll
or
push
and
sahf
scas
and
out
push
rcl
dec
test
adc
push
push
ds
mov
stos
cmp
out
popa
test
bound
jmp
cmpsb
test
into
sarb
lods
mov
inc
hlt
or
inc
loop
fimull
inc
xchg
mov
push
rcl
push
xchg
pushf
lcall
ret
out
mov
dec
lahf
jle
or
mov
imul
xor
jg
dec
ret
add
mov
dec
icebp
push
cmp
daa
jg
sti
xlat
ds
cli
pop
cwtl
cmp
out
loopne
clc
cmp
dec
inc
cmpsb
in
cmp
aas
xor
mov
xchg
mov
xor
jno
inc
pop
pop
xchg
mov
add
jg
mov
testl
sbb
psubw
adc
pop
inc
sub
cmpsb
scas
out
jg
outsl
xor
insl
push
movb
cmpsb
popa
jmp
es
out
or
ljmp
dec
frstor
pop
fmul
dec
rcl
iret
and
int3
pop
pushf
xchg
call
jno
dec
sub
out
adc
jp
sbb
mov
dec
adc
sti
push
jb
cltd
movsl
and
test
sub
cmp
in
rep
or
add
inc
xor
cld
xlat
cltd
nop
cmp
mov
jmp
or
mov
dec
push
outsl
adc
add
mov
ja
or
cmp
mov
shlb
shlb
lcall
add
pop
dec
scas
pushf
mov
outsl
lret
mov
adc
xchg
cmp
xor
sar
xchg
popa
xor
inc
dec
outsb
in
and
cmp
xor
sub
dec
cld
jbe
loopne
add
int3
inc
add
add
fisttps
cmp
jmp
fstpl
xchg
push
mov
push
mov
fadd
fwait
loope
test
sbb
stos
add
push
das
out
add
nop
in
hlt
dec
jb
sub
sbb
cwtl
cltd
mov
and
iret
jae
je
mov
in
aas
fcomps
insl
jp
or
sub
clc
xchg
cli
sub
enter
xorb
das
pop
adc
int
lret
sarl
lea
ljmp
nop
loope
outsl
mov
pop
lds
push
imul
jae
add
scas
dec
cmp
lea
movsl
fwait
jp
jb
lahf
xchg
xchg
sbb
je
mov
test
in
pop
sub
mov
pop
push
push
jo
pop
pop
mov
fwait
iret
push
aas
sbb
xchg
sbb
out
unpckhps
mov
repz
jae
jne
or
loope
sub
add
pop
out
inc
lods
rcrb
pop
adc
mov
and
stos
cmpsb
fnstsw
rorb
fsts
mov
pop
in
xor
fsubs
psrad
jge
or
sbb
adc
push
xchg
and
in
push
push
repz
aam
test
fs
push
dec
pop
push
jb
cltd
je
aaa
sahf
lods
jo
adcl
lret
popa
cmpsl
sbb
das
inc
fldl
jl
push
pop
movsb
jb
push
push
pop
fstp
sub
aam
dec
pop
xchg
push
sahf
movsb
xchg
xchg
xor
push
fimull
ret
das
dec
cmp
test
stc
bound
dec
push
fnstcw
dec
sbb
lret
jmp
les
stos
clc
adc
sahf
or
xchg
push
sub
inc
in
les
xor
imul
sbb
or
repz
fldcw
sbb
jge
fisubl
pop
cld
stc
inc
push
cmpb
xchg
scas
call
imul
add
popa
inc
cmc
push
repz
lods
jae
and
lret
add
rorl
or
popf
stos
adc
inc
test
nop
pop
jge
jae
js
aaa
pop
push
push
xor
test
mov
shrl
sbb
orl
lcall
and
shl
icebp
pop
fsubrs
aam
dec
adc
gs
and
mov
push
shll
xchg
call
dec
lds
mov
rcll
xorl
pop
sub
jl
mov
hlt
ret
or
inc
bound
jb
je
jns
mov
cmp
cmp
pop
inc
add
push
data16
stc
and
rorl
sbb
ficomps
sbb
leave
jb
add
mov
add
shr
out
xchg
adcb
lret
ljmp
xor
subl
fwait
or
mov
jg
movsb
mov
loopne
sub
dec
mov
inc
jnp
mov
xor
out
xchg
aam
dec
push
or
jge
cmp
mov
idivl
fnstenv
sbb
nop
mov
dec
cltd
mov
or
push
sbb
lret
mov
out
or
or
xorl
or
mov
mov
out
sarb
pop
pop
ds
add
lods
add
fs
hlt
outsl
mov
daa
enter
shl
loop
mov
and
sub
data16
pop
scas
test
push
push
test
pop
lcall
lods
inc
clc
lock
mov
inc
int3
testl
xchg
jle
pushf
dec
add
inc
fs
jno
leave
out
sub
mov
cwtl
shrb
jecxz
mov
pop
fidivrs
mov
cmp
push
sub
mov
insb
jle
adc
ss
mov
inc
jae
mov
out
iret
loopne
bound
add
jb
xor
mov
movsl
ds
cmp
out
push
lods
lds
cmpb
adc
add
sub
dec
test
add
fiaddl
cld
push
shrb
adc
fsts
mov
bound
imul
mov
cmpsb
adc
dec
xlat
mov
mov
aad
out
jecxz
das
cwtl
and
and
and
in
addr16
mov
mov
insl
jb
xor
frstor
daa
mov
mul
and
stos
lods
pop
mov
pushf
xchg
fisubl
fldcw
fisttps
pop
in
stc
sahf
sub
sub
push
ja
mov
mov
cmp
addr16
rcrl
cltd
hlt
add
mov
out
fs
imul
lock
insb
test
or
push
adc
cmp
lea
lods
xchg
or
pop
shrl
popf
dec
xchg
je
repnz
mov
sub
pop
lahf
adc
sbbb
aam
in
movsl
cld
shll
out
mov
jo
daa
add
and
jecxz
sbb
mov
data16
iret
leave
adc
cmp
push
xor
test
dec
aad
xor
adc
push
jle
adc
aaa
push
xchg
mov
daa
sbb
daa
mov
sbbb
inc
jns
sbb
and
popf
repnz
adc
or
and
or
mov
in
test
dec
loope
xchg
sbbb
roll
mov
jle
dec
outsb
mov
push
mov
cmp
or
popa
in
sub
inc
jns
jb
repnz
aas
inc
dec
adc
sub
out
mov
inc
push
xor
xorb
cltd
mov
fimull
inc
out
imul
mulb
movsb
stos
test
cmp
push
sub
mov
add
jnp
in
mov
fldt
sahf
lea
scas
loopne
aam
lods
iret
mov
sbbb
jge
out
mov
ficompl
lret
iret
iret
lret
jb
or
or
pop
xchg
push
data16
sbb
cmpsb
sbb
mov
outsb
xorb
cld
inc
imull
test
repnz
psrad
mov
and
cmp
lahf
xor
stos
imul
mov
lret
lahf
shlb
jecxz
fwait
jmp
pop
xchg
inc
mov
lea
cmp
mov
fsubl
scas
inc
call
xchg
jg
mov
fimull
mov
or
testb
repnz
pop
test
imul
mov
mov
jge
xchg
push
adc
stos
out
inc
icebp
test
pop
idivb
loope
cmp
enter
xchg
xchg
add
mov
jnp
idiv
enter
push
dec
jmp
dec
or
add
rolb
pop
lret
fdivl
push
imull
in
lcall
push
gs
mov
mov
inc
test
das
loop
sbb
fldz
push
mov
nop
dec
xchg
fcoms
jne
in
mov
xchg
xchg
cmp
addr16
push
or
or
xchg
fstl
lds
fsubs
mov
sbb
cltd
lcall
pop
inc
sbb
stos
cwtl
lcall
lods
mov
sub
cwtl
jle
xor
add
lds
enter
fs
scas
sub
jmp
jle
out
xchg
jle
sub
xchg
test
mov
xchg
mov
test
mov
or
xor
repz
and
or
test
aad
cmp
add
cli
add
lret
mov
adc
mov
popf
sbb
push
inc
and
outsb
sbb
inc
cltd
stos
inc
stc
mov
lock
jmp
testb
fadds
push
cmpsb
das
adc
imul
push
mov
in
add
lahf
push
testb
iret
stc
daa
insl
dec
shrb
insl
or
cmp
das
cmp
fdivrs
mov
and
jp
mov
jns
int3
div
push
adc
xor
ja
fnstcw
push
in
cmp
ds
scas
fcom
daa
or
div
xor
pop
xchg
sub
call
jae
cmpsl
push
xor
imul
andb
sar
inc
inc
outsl
int3
popa
mov
aas
mov
cmp
mov
iret
xor
std
xchg
jns
jmp
lea
fists
pop
add
out
mov
pop
movsb
mov
aaa
mov
xor
and
cmp
push
inc
mov
mov
fistl
cmc
fisttps
shrb
sbb
sub
or
out
mov
mov
mov
int3
lds
dec
adc
push
mov
lods
popf
sbb
jns
dec
in
hlt
mov
iret
jge
fwait
imul
add
inc
push
sub
repz
mov
xchg
and
and
incb
pop
jecxz
xchg
sub
imul
lods
iret
repz
push
out
adc
out
jo
xchg
daa
pop
push
jmp
mov
xor
inc
cmp
shlb
sbb
and
sbb
pop
insb
push
mov
sti
es
jne
es
xor
scas
out
arpl
push
adc
out
sub
pop
add
add
push
dec
addr16
mov
xorb
int3
je
cmp
mov
shrl
cmc
dec
dec
add
in
mov
in
jl
and
and
test
scas
xchg
mov
cmp
push
fs
subl
adc
mov
mov
jo
pushf
fsubrl
lahf
rcrl
or
mov
jmp
mov
inc
ds
push
lds
es
mov
in
jl
dec
add
bound
je
call
jb
add
push
addb
call
mov
add
jne
inc
xor
gs
xchg
sbb
jmp
int
les
push
jne
push
mov
mov
ret
sbb
xchg
xor
negb
mov
daa
or
sahf
cltd
cmp
or
push
insb
outsb
sub
call
pop
xor
xchg
cmp
xor
jne
and
lods
pop
sub
fistps
int
jne
sub
out
add
pop
shrb
fwait
in
pushf
les
xor
inc
cmpsb
lcall
roll
aad
ja
pushf
stos
push
jb
insb
mov
insb
pop
insb
or
push
andl
inc
out
mov
dec
xchg
mov
dec
repz
jb
icebp
outsl
jne
mov
sub
ja
push
fistpll
fsubp
lods
hlt
push
push
dec
lods
mov
lds
dec
jo
push
cld
les
insb
push
mov
mov
mov
and
dec
std
mov
xor
xchg
add
pop
sbb
cwtl
shl
out
pop
les
cmp
xchg
mov
icebp
aaa
mov
push
xchg
dec
aam
es
aam
xchg
jno
add
popl
jp
push
rcr
mov
lret
xchg
pop
pop
or
and
pop
or
mov
add
mov
jl
daa
xchg
adc
aam
hlt
jnp
iret
or
jo
in
push
mov
insb
jge
inc
pop
es
add
addr16
shl
cmp
out
out
int
addr16
in
and
mov
mov
cmp
outsb
mov
ret
pop
xor
call
mov
pop
mov
add
xor
cld
mov
or
icebp
adc
cmpsb
aas
imul
icebp
mov
xchg
cmc
gs
add
jae
cwtl
into
in
adc
xor
adc
push
sbb
stos
mov
mov
pop
push
xor
adc
xor
idivl
sub
xor
xchg
or
add
aad
hlt
adc
or
inc
inc
jge
fimuls
sbb
mov
add
sbb
push
xlat
adc
push
fdivp
sub
clc
xor
sub
test
ret
je
adc
or
popf
and
pop
loopne
adc
jns
fwait
ja
imul
iret
loop
pop
sti
add
push
mov
dec
int3
adc
dec
loope
movsl
std
mov
inc
xor
sub
enter
mov
loop
idivl
fistl
pop
jp
mov
std
das
xor
daa
xchg
mov
mov
loope
mov
ss
rolb
out
push
jno
inc
das
jnp
inc
ret
adc
notl
add
fisubs
push
fwait
and
and
or
js
rolb
movsl
pop
insl
xor
test
repnz
fcoms
arpl
icebp
mov
inc
inc
lea
cmp
jle
and
test
cli
loope
inc
or
clc
add
add
mov
cwtl
jl
inc
out
mov
fucomp
das
adc
fists
int
gs
dec
cmp
sbb
add
inc
test
enter
sub
jle
jecxz
adc
imul
in
dec
fldl
or
popa
or
inc
push
inc
jo
lods
nop
mov
cmc
adc
idiv
and
xor
jmp
sbb
and
clc
out
repz
push
in
mov
jnp
sub
jle
mulb
inc
push
adc
ds
ficomps
popa
faddl
repnz
jbe
popl
arpl
outsb
mov
lock
mov
inc
aam
fisubl
mov
inc
cld
movsb
lods
inc
cmp
inc
mov
jb
leave
pop
mov
sbb
jnp
xor
subl
imul
movsl
lea
mov
add
nop
push
in
fsubrs
jmp
mov
imul
sbb
icebp
ss
aas
jl
or
sub
fs
test
movsl
not
ret
cmc
or
pop
nop
sbb
out
mov
jge
aad
push
xchg
push
lods
addb
in
enter
lea
xor
cwtl
js
sub
aad
push
mov
inc
mov
inc
jbe
or
test
xchg
out
mov
out
int
mov
sbb
xor
jl
sti
bound
leave
lcall
pop
fisubl
jns
scas
aas
xlat
xor
jmp
pop
xchg
mov
lods
std
loope
pop
aas
cwtl
mov
movsl
stos
nop
ljmp
jb
mov
loopne
daa
daa
inc
int3
sti
sub
push
push
push
ljmp
add
jmp
jmp
and
loope
push
fs
adc
lds
into
popl
lods
iret
and
or
sarl
mov
cmp
jno
jne
aad
adc
push
push
sahf
mov
pop
push
rcll
ljmp
enter
js
das
jge
popa
add
sti
negb
into
pop
inc
jo
jne
iret
out
in
sbb
aad
test
loope
push
inc
sbb
mov
imul
or
addr16
repnz
xchg
nop
xor
push
ja
gs
pop
mov
xlat
into
test
shl
mov
popa
mov
cmp
je
or
mov
sbb
ficomps
leave
lret
icebp
pop
pop
jno
mov
jo
adc
pop
lea
hlt
jno
adc
ficoms
xchg
mov
xchg
in
imul
push
inc
ret
pop
and
push
mov
push
xor
dec
sbb
xor
cltd
or
cmp
xor
pop
dec
outsl
jne
add
pop
add
cltd
sub
add
sbb
fdivl
lock
addr16
mov
ret
insl
cli
inc
dec
ret
mov
xchg
or
mov
xlat
mov
je
ja
xor
icebp
mov
clc
push
aas
xorl
add
add
dec
imul
shrb
xchg
adc
push
lcall
dec
lcall
mov
and
or
into
idiv
inc
sets
mov
adc
mov
fmuls
push
sti
cwtl
sub
inc
mov
fcoms
or
and
mov
mov
pop
or
inc
and
ja
mov
push
fstps
dec
aas
xorl
or
fwait
jl
cmp
xor
mov
fmuls
es
lods
clc
cmp
xchg
mov
aad
lds
iret
inc
int
cltd
loopne
add
ret
icebp
pop
mov
pushf
mov
pop
cmpl
mov
out
outsb
sarb
ja
mov
xchg
cmp
inc
daa
addl
std
lods
xor
dec
push
movsl
ret
and
dec
mov
imul
mov
cmp
js
jg
and
jle
test
and
jnp
mov
jmp
mov
fwait
or
sbb
lcall
jne
sbbl
mov
fidivrl
out
out
pop
push
push
test
dec
adc
fwait
imul
jbe
mov
sub
push
int
mov
das
sub
loopne
pop
lds
jecxz
mov
push
mov
jo
les
scas
loope
cli
stos
and
insl
dec
mov
fmulp
jmp
test
cs
or
scas
out
ret
das
xchg
push
sti
dec
rorw
mov
andl
int
stos
xor
xchg
roll
xchg
or
lds
mov
jno
jecxz
fsubl
addb
add
mov
xor
mov
xchg
inc
clc
sub
popa
les
lds
pop
cmp
push
push
mov
sub
pop
dec
rolb
insb
stc
loope
sar
insb
insb
sbb
and
sbb
int
jno
das
push
outsb
jo
jp
cld
int3
fcmovnb
fistps
xchg
sub
lret
ret
or
icebp
xchg
push
or
shl
sub
inc
roll
in
or
in
div
mov
adc
xchg
cmp
jae
test
xchg
push
mov
mov
or
xor
daa
mov
or
in
xor
scas
imulb
inc
lods
int3
andl
push
sahf
mov
or
popa
daa
int3
lret
or
out
pusha
mov
cli
xor
cmp
inc
movsl
cwtl
hlt
es
adc
rorl
test
daa
mov
xor
inc
adc
mov
mov
cmp
sub
cmp
push
add
xchg
sarb
dec
add
and
loop
lods
pmulhuw
xchg
push
scas
xchg
incb
popa
icebp
cmp
mov
rcl
jle
mov
sbb
jnp
or
pop
or
pop
xchg
imul
pop
push
pop
add
jno
icebp
ja
fwait
ss
std
or
iret
mov
lock
mov
cmp
pushf
mov
daa
lret
and
mov
outsb
leave
mov
inc
in
push
hlt
sub
mov
fiadds
test
pop
paddw
pushf
mov
dec
pop
rorl
xor
clc
mov
cmp
hlt
cwtl
fnstsw
ss
pop
inc
push
icebp
jmp
popf
sbb
in
xchg
xor
mov
or
fdivrs
repz
sub
add
popa
in
dec
xchg
data16
adc
cmp
lock
xlat
lahf
push
push
fsubs
movsb
dec
sbb
into
xor
sub
xchg
test
pop
and
leave
sahf
out
xor
adc
and
jge
mov
in
sub
ja
pop
imul
push
sub
pop
jo
cmp
mov
es
data16
xlat
mov
out
das
pop
jl
add
pop
fildl
pop
loope
lret
sbb
shr
iret
or
hlt
into
stos
lds
jno
cmp
out
push
sbbb
xlat
inc
push
inc
pop
sbb
push
push
sbb
or
test
sub
addr16
xor
ds
test
adc
lret
or
repz
in
test
enter
jbe
loope
mov
sub
fdivr
aam
fdivrl
dec
arpl
push
test
mov
loop
push
js
xchg
mov
jmp
xchg
xchg
add
mov
std
loop
mov
xchg
les
push
sub
and
in
sbb
cmpl
mov
inc
sub
pusha
mov
or
popa
test
mov
cmpl
mov
xchg
add
lds
std
pushf
loopne
or
movsl
xor
mov
ficompl
or
dec
rcl
cmpsb
adc
push
in
adc
pusha
add
fidivrs
sub
pop
loop
inc
push
adcb
mov
mov
pop
or
icebp
sbb
insl
and
push
cmp
push
fstpt
shrb
sub
and
jecxz
stos
push
and
xchg
mov
frstor
mov
mov
jg
hlt
call
add
and
and
cmpsb
in
lret
scas
add
mov
inc
xor
mov
scas
cmpsl
push
inc
sub
sub
pop
cmp
data16
sbb
fisubrs
cmpsl
add
dec
shrb
push
inc
or
cmp
rcll
repz
filds
jp
mov
push
inc
and
fsubrl
xor
stos
bswap
call
xchg
mov
mov
aaa
mov
jns
xor
loop
sahf
dec
pop
mov
cmp
dec
mov
movsb
lock
xorl
jns,pt
inc
popf
sub
jge
mov
cld
mov
mov
sub
adcb
xchg
sub
and
sbb
out
outsb
fwait
lock
xorl
xchg
in
mov
push
jp
jmp
pop
aad
mov
out
pusha
and
jae
lds
pushf
roll
xor
mov
mov
add
inc
jecxz
or
add
ret
jl
sbbl
xor
data16
and
ffreep
fldz
inc
repnz
sbb
mov
dec
mov
sbbl
rorb
popf
cmp
call
mov
sbb
fst
and
in
dec
cmpsb
push
add
outsb
in
jle
or
mov
leave
sti
imul
rorl
mov
mov
sbb
lds
popa
cld
inc
pusha
in
push
lea
push
xchg
or
scas
jg
clc
inc
idiv
xor
sub
out
adc
push
aaa
cmp
mov
gs
int3
pop
or
je
jle
dec
rcll
mov
movsb
scas
jg
int3
popa
add
sbb
and
lret
movsb
pop
or
mov
jne
clc
pop
adc
nop
push
sub
sub
aaa
dec
sbbl
scas
aad
dec
out
loopne
nop
push
shl
push
in
cltd
push
mov
fnsave
cltd
xor
nop
mov
xchg
jge
lods
xchg
ljmp
incl
jmp
mov
push
jb
cli
es
xor
and
xchg
lods
xor
lods
xchg
and
mulb
mov
popf
mov
adc
and
and
dec
mov
movsl
outsl
out
jg
int3
adc
cwtl
dec
daa
dec
insb
mov
icebp
push
dec
sub
imul
out
jb
sbb
pushf
jp
xor
mov
in
repz
divb
fdivr
xchg
repz
jle
and
rorl
dec
add
mov
gs
shl
faddl
and
xchg
xchg
sbb
in
pusha
scas
dec
and
pop
shll
in
test
sbb
cmovo
lods
jl
popa
loopne
xchg
aaa
jo
fstpt
fstpl
pop
adc
cmp
fnsave
xor
in
jge
mov
sub
adc
aam
in
int3
push
pop
pop
aas
imul
adc
test
mov
loope
cmc
test
add
lret
pusha
ds
loope
bound
cmp
and
push
ljmp
mov
sub
push
sub
divl
insb
inc
sub
iret
xchg
repz
jge
mov
inc
scas
inc
push
and
clc
nop
test
xor
xchg
cmp
xor
jno
xchg
xor
insb
sbb
cmpl
jne
or
sar
test
js
std
dec
repz
out
outsl
sub
rorl
iret
stos
jbe
sub
fld
mov
subb
test
push
mov
push
std
xor
jp
jle
fisubl
jb
ficoms
mull
push
dec
rolb
push
adc
je
cmp
push
rclb
lods
rcrl
lods
and
and
adc
popa
inc
sbb
arpl
push
jno
int3
das
cmp
xchg
mov
add
push
lea
sahf
mov
clc
in
stos
xchg
mov
iret
sti
les
mov
inc
test
ret
pop
xchg
push
sub
xchg
mov
sub
mov
sub
push
push
pop
jl
sub
cmc
mov
les
fsubrl
fnsave
repz
aam
mov
pop
cmpsb
pop
xchg
sbb
xchg
xchg
dec
rclb
out
lahf
movsl
in
inc
es
xchg
inc
and
cmp
scas
stc
sub
jg
sahf
insl
mov
popf
or
jp
xor
cmpsl
je
cmp
repnz
int
sub
push
jb
mov
cmp
js
mov
add
sbb
js
push
xor
lcall
sub
arpl
mov
mov
sbb
loope
xor
js
push
and
std
and
add
fsts
daa
sbb
mov
mov
mov
dec
and
outsl
outsb
push
loop
mov
push
popf
cltd
icebp
int
and
jo
jg
loopne
mov
xchg
mov
lods
jecxz
xor
repz
xchg
aam
mov
les
or
cmpsl
outsl
inc
pop
adc
ret
add
push
xchg
mov
mov
lahf
out
mov
imul
out
mov
sysenter
daa
sti
jno
popa
inc
lods
sub
mov
push
push
xor
ret
lock
xchg
insl
push
into
xor
mov
push
or
xchg
and
cmp
push
pop
shll
mov
add
pop
push
repnz
push
mov
push
imul
ret
lret
sbb
sbb
or
mov
adc
add
inc
fs
setle
mov
out
bound
pop
je
imul
stos
dec
outsl
mov
iret
sbb
rol
jge
or
mov
daa
sub
add
xchg
dec
sbb
pushl
push
xor
mov
scas
mov
or
icebp
lock
jb
jns
dec
insl
mov
aam
daa
jno
mov
mov
xor
sub
add
loop
lock
adc
mov
sbb
into
cmpsb
rolb
adc
movsl
dec
mov
inc
add
mov
clc
adc
sbb
andb
push
popa
pop
push
adc
jmp
call
and
in
ja
and
dec
aas
mov
daa
ja
es
inc
aad
rcll
push
jo
pushf
push
pop
and
test
int
inc
leave
subb
cmc
inc
mov
xchg
cld
xorl
inc
mov
or
int3
pushf
sub
pop
inc
ja
adc
adc
mov
cmp
cltd
dec
ds
shl
mov
dec
sahf
cmp
arpl
stos
or
in
rcll
movsb
pop
dec
add
jo
inc
and
inc
js
cmp
notb
xchg
sbb
push
repz
mov
rcl
outsb
icebp
lods
xchg
lds
ss
and
testl
lret
sub
xchg
ljmp
lods
xor
das
mov
jl
and
pop
jbe
inc
sbb
mov
jmp
dec
fildll
add
mov
inc
rcl
xor
jecxz
xor
out
out
adcl
test
repnz
mov
or
push
inc
jne
xchg
mov
gs
addr16
das
or
or
push
out
bound
les
cltd
fdivl
enter
fcomip
sarb
outsl
add
inc
ss
xor
aas
stos
loopne
jno
adc
cld
add
fdivrp
icebp
dec
aam
xchg
jb
mov
cli
aas
dec
out
insl
repz
fisttps
pop
in
jle
adc
add
cmp
sbb
int
jecxz
int
mov
dec
push
aaa
in
dec
cmp
sbb
or
into
xor
fimull
stc
jne
dec
out
dec
popa
and
jnp
inc
in
out
scas
mul
pusha
stc
mov
dec
std
divb
cwtl
test
sub
in
das
arpl
and
lret
loope
scas
addr16
outsb
icebp
in
cmp
shll
pop
inc
sbb
popa
jmp
jbe
add
and
mov
sbb
lds
lret
movb
mov
lret
or
and
lret
sbbl
jl
ljmp
or
mov
sbb
mov
cli
dec
aam
adc
add
into
cmc
mov
daa
arpl
loop
pushl
inc
popa
cli
mov
push
adc
jae
add
and
sbb
fstl
inc
jmp
clc
out
in
popa
clc
or
cltd
sub
or
insl
lahf
jecxz
add
loope
mov
inc
cmpsb
pop
sahf
movsb
lods
xor
hlt
gs
mov
dec
lret
push
adc
add
ds
cmp
psubusw
xchg
dec
pop
push
les
test
inc
xchg
add
and
lods
push
sahf
fucomip
fstp
ficompl
jmp
cltd
xor
dec
or
repnz
push
ffree
mov
inc
xchg
movsl
fadds
inc
dec
sbb
mov
fs
jno
loopne
mov
inc
pop
lock
pop
mov
sub
xor
stos
mov
icebp
fisttps
sub
dec
sti
shrb
ret
dec
idivl
and
or
inc
xor
inc
aam
test
add
movsb
mov
push
xor
out
add
loopne
popa
mov
dec
push
xor
push
push
dec
cli
outsb
push
jb
push
adc
xchg
and
mov
sub
xchg
mov
mov
cmp
add
in
inc
jle
pop
add
ret
aam
and
scas
cld
lds
into
push
push
xchg
sbb
jp
sarl
push
mov
stos
mov
popa
stos
jo
mov
mov
push
insl
push
dec
out
mov
sub
add
lds
cmp
and
mov
adc
jecxz
dec
pop
sub
addr16
fcomip
cmpsl
mov
out
xchg
cwtl
imulb
adc
sbb
push
test
adc
jp
inc
movsl
or
aaa
xor
addr16
les
pop
addl
pop
xchg
lret
sbb
inc
bound
outsl
mov
test
cmp
ljmp
jp
inc
push
add
xchg
pop
xchg
pop
and
les
fcmovne
andl
jne
jnp
and
and
dec
popa
pop
int
ret
sub
mov
push
daa
repz
sbb
mov
js
adc
sbb
adc
sbb
out
push
cmpl
dec
or
stc
jns
call
ja
mov
sbb
iret
mov
outsl
dec
jge
pop
repnz
popa
ret
jae
xchg
enter
inc
jo
sub
add
mov
dec
dec
popf
les
test
sahf
push
push
jne
sub
clc
popa
xor
sub
jge
mov
adc
out
add
mov
mov
inc
cmc
sbb
movsb
pop
ret
psllq
fsts
loop
aad
or
stos
lock
push
push
out
dec
in
mov
mov
outsl
and
notb
mov
push
push
xor
add
jo
pop
adc
lahf
mov
inc
adc
mov
push
mov
into
add
inc
add
cmp
mov
aam
mov
fstpt
fmul
pop
push
imul
das
ret
push
rcll
inc
fdivrl
mov
scas
stos
lret
fistpl
xor
jbe
jl
shlb
hlt
pop
pop
es
push
pop
mov
cmovnp
mov
dec
aad
sub
jl
inc
rcll
out
mov
adc
rcll
jo
push
stos
popf
pushf
jnp
bound
xchg
pushf
push
pop
shrb
xor
pop
push
inc
imul
mov
adc
mov
mov
dec
or
sub
sub
aam
or
movsb
leave
cmp
jae
pop
mov
je
fsub
and
fsts
stos
out
jmp
out
xchg
daa
mov
mov
xchg
addr16
rcrl
int3
lret
out
in
or
add
dec
add
jne
xlat
inc
aas
mov
adc
jno
xor
cli
fidivs
pop
adc
cli
imul
dec
stos
fcomps
lcall
xor
fsubrl
ret
xlat
jmp
cli
inc
sub
out
or
lods
gs
daa
sahf
xchg
repz
fldt
std
shl
mov
dec
out
inc
mov
in
idivb
test
sbb
xor
pop
inc
mov
scas
std
or
xor
cmp
pop
mov
ss
xchg
mov
push
es
idivb
xor
mov
inc
push
mov
pop
push
mov
gs
divl
imul
mov
test
scas
loopne
repz
push
stc
push
sub
arpl
jne
push
aas
sub
mov
add
or
insb
dec
dec
cmp
cmp
dec
inc
xor
imul
xchg
xor
or
adc
lods
jne
je
jb
neg
ljmp
mov
scas
in
outsl
xchg
push
mov
les
pusha
cmpsb
in
popf
xor
cmpsl
xor
xchg
jbe
out
lds
in
cmp
mov
mov
aam
out
aam
mov
inc
inc
push
mov
dec
scas
push
call
xchg
cld
repnz
stc
sbb
addr16
mov
mov
stos
jnp
data16
sbb
cmp
add
push
arpl
or
inc
mov
sarl
cmp
sub
sti
je
jecxz
in
sbbl
cmp
aas
lds
scas
lret
cmpsb
andb
push
loop
shrl
xchg
sbb
fwait
shrl
jbe
push
pusha
xchg
mov
mov
lock
sub
in
stos
pushf
pushf
mov
mov
mov
xchg
push
mov
pop
xor
lock
or
mov
push
mov
xor
roll
adc
test
test
sbb
fcompl
daa
scas
int3
dec
shrl
dec
sarl
sub
pushf
jb
push
mov
jmp
and
push
add
inc
stc
pusha
sbb
xor
jns
push
cltd
or
push
cmp
in
fwait
aam
jl
mov
xchg
repz
push
fistpll
mov
xor
xor
fmuls
sub
fcmovu
lcall
out
mov
cwtl
mull
iret
shlb
fildl
xchg
xor
sbb
js
stc
ret
sub
mov
push
test
mov
int
in
xchg
xor
xchg
and
sbb
test
shlb
lds
sbb
icebp
or
push
cmpsb
movsb
ret
addr16
mov
mov
jle
adc
jno
xor
jae
out
xorb
or
xor
fstpt
jae
in
inc
sub
subb
cmpsl
das
dec
aaa
adc
mov
or
push
test
xor
add
imul
repz
aaa
xchg
adc
sbb
dec
xchg
ljmp
mov
or
cmp
int
xchg
xchg
mov
add
push
gs
mov
jb
pandn
add
jp
xchg
mov
out
xor
xchg
out
pop
loopne
ret
aas
mov
ds
jle
mov
scas
imull
testl
test
pushl
lock
cli
mov
xchg
insl
add
mov
das
adc
out
jbe
fcomp
add
dec
mov
push
pop
sbb
daa
pop
sahf
sbb
sbb
or
jl
arpl
cwtl
jp
outsl
test
lahf
pop
lods
mov
test
xor
mov
or
stos
push
push
jae
scas
repz
sub
in
mov
cmc
mov
shrl
ret
mov
movl
pop
mov
divl
and
pop
push
cmp
adc
inc
sti
mov
lret
cmp
mov
pusha
enter
push
cltd
fld
imul
jmp
insb
pop
hlt
out
repnz
jecxz
push
sti
add
jp
mov
imul
repnz
pop
adc
fistpll
inc
sbb
shlb
push
out
and
js
push
pushf
icebp
rclb
inc
or
mov
rolb
lahf
mov
jecxz
xor
mov
xchg
fidivl
sub
jbe
in
je
inc
pop
xor
enter
hlt
test
fistpll
dec
and
xor
das
dec
xorl
jge
xor
pop
iret
fadd
mov
add
sub
out
inc
mov
addr16
sbb
or
cli
pop
js
sub
aas
outsl
cmp
mov
sarl
icebp
xchg
inc
xchg
mov
sub
inc
int3
lahf
push
aaa
int
stc
pop
test
pop
and
movsb
mov
hlt
fimull
pushf
inc
inc
addr16
jbe
scas
test
or
sbb
mov
inc
inc
cmpsl
test
call
repnz
and
movsb
js
pop
scas
xchg
mov
push
pusha
test
mulb
les
add
aas
and
stc
ss
sbb
mov
in
in
inc
inc
stc
add
jl
daa
mov
jmp
test
fildl
shl
add
add
int3
icebp
repz
fidivrs
mov
and
mov
cmp
stc
nop
daa
loopne
cmpsl
sub
dec
xlat
and
push
int3
aam
sub
lock
jge
ss
loopne
gs
push
mov
scas
mov
cmp
fistl
and
sbb
mov
push
mov
loop
inc
jns
mov
pop
insb
loop
sub
adc
mov
or
pop
popf
and
movsb
cmpb
and
push
icebp
iret
add
sbb
sbb
sub
jecxz
mov
add
pop
cwtl
or
fwait
pop
jb
sub
xor
shr
push
push
testb
lcall
loope
je
jne
xchg
fistpl
scas
lcall
mov
jle
pop
and
ljmp
lods
insl
mov
lods
fidivl
jge
fidivrl
int3
xor
jle
mov
bound
jl
mov
sahf
sbb
pusha
ljmp
test
add
sbb
dec
daa
mov
inc
xor
fs
jp
inc
jns
fsubl
adc
jbe
pop
int3
add
mov
mov
inc
pop
movsl
cltd
subl
adc
mov
xchg
cmp
add
xchg
sahf
pop
mov
push
xchg
fiaddl
inc
out
pushf
cld
pusha
movsb
out
sub
cmp
jae
data16
shrl
push
scas
add
xor
push
push
pop
inc
std
push
sbb
out
mov
insl
ss
adc
aaa
sahf
ljmp
mov
mov
pop
lock
cli
sub
fdivrl
sub
push
movsl
mov
dec
fwait
repz
fwait
hlt
adc
xchg
rcrl
jecxz
xor
dec
pop
fisubrs
xor
das
mov
add
loope
pop
mov
pop
shll
subb
jnp
xchg
xor
fidivrl
nop
movsl
jle
xchg
cmp
xor
jl
ret
mov
pop
popa
loope
mov
sub
jbe
test
inc
cmp
das
int3
int3
movb
jb
and
sub
pushf
xchg
cs
inc
les
jg
sub
jne
imul
je
and
les
sub
daa
and
adcl
mov
ret
sti
pop
mov
mov
mov
into
jmp
adc
sub
pop
clc
mov
adc
mov
push
repz
popf
pop
test
cmp
xor
cmpsl
inc
xor
push
inc
jle
xchg
out
daa
sub
pop
ret
jae
sahf
jne
es
pop
cmp
mov
xor
push
mov
ss
sarb
aam
pusha
int
dec
inc
and
aaa
mov
add
test
ja
js
xchg
push
mov
test
fcomps
imul
jmp
mov
pop
les
hlt
imul
ficoml
cmp
xchg
rol
fsubrl
push
cwtl
adc
stos
sub
stos
aam
cmpsb
cmc
jae
mov
sub
mov
pop
inc
mov
ljmp
pusha
movq
pop
je
mov
test
mov
xchg
js
jg
int
and
xchg
add
xchg
and
pop
cli
mov
push
fwait
in
lcall
sub
mov
addr16
xor
or
add
test
dec
pop
fadd
fildll
stc
test
repz
es
sub
fldt
movsb
hlt
pop
mov
loopne
mov
insb
sub
mov
mov
aaa
repz
push
push
ja
push
sub
dec
out
jmp
test
jp
mov
loop
fs
popf
bound
mov
xchg
addr16
cmp
mov
or
popf
cmp
sub
ss
cmp
arpl
mov
cmp
adc
imul
dec
std
and
mov
cmp
xchg
xor
int3
lcall
pop
in
ret
imul
push
xchg
push
decb
push
aas
shrl
popa
cmp
pop
inc
rcrb
movsb
and
lcall
pop
sub
and
cwtl
mov
enter
sub
notb
xor
inc
push
pop
jp
pop
rcll
popa
insl
xchg
inc
push
aas
dec
add
inc
shrl
sbb
pop
sbb
fs
out
addr16
inc
les
sub
stos
aam
adc
sub
adc
fcompl
and
cmpsl
pop
enter
inc
push
ss
cmp
pushf
xchg
xchg
or
imul
outsl
dec
jno
cmp
cmc
and
rcr
xlat
dec
pop
xlat
adc
pop
xchg
shl
jo
inc
or
pop
sub
mov
fxch
sbb
icebp
loop
cmp
lret
outsb
mov
lods
shll
cwtl
ja
mov
sbb
notl
xchg
popf
pop
lods
dec
and
std
mov
xchg
sbb
mov
mov
push
push
popf
aad
leave
imul
out
fsts
xchg
dec
repnz
xchg
jnp
pop
or
add
ds
popf
xor
cld
ret
int
mov
and
insl
xchg
pop
lea
mov
push
jne
mov
inc
cmp
iret
mov
loop
outsl
adc
mov
out
mov
inc
sahf
shlb
test
cmc
jns
xor
lea
xor
adc
jne
adcb
inc
push
shlb
mov
jb
stc
pop
dec
repz
cmp
xor
ja
dec
cmpsb
adc
icebp
int3
xchg
adc
imull
mov
jle
movsb
in
icebp
lea
int3
mov
cmpb
int3
and
test
mov
nop
scas
inc
iret
fisubl
stos
mov
and
ljmp
in
inc
inc
push
ds
adc
inc
push
dec
mov
xor
mov
jnp
cltd
dec
mov
inc
mov
cmp
sahf
or
loop
sbb
sbb
sti
push
xor
mov
bound
mov
mov
testl
mov
and
bound
mov
sbb
push
xor
and
dec
gs
and
cs
inc
jmp
sbb
imul
sbb
imul
out
fistpll
movsl
fisubrs
and
stos
cltd
adc
icebp
mov
jbe
or
jno
pop
iret
mov
pop
xlat
enter
lds
aad
ja
fidivrl
mov
push
xlat
stos
cmp
add
std
in
cli
dec
sahf
repnz
push
movsb
das
lret
bound
adc
pop
js
and
sub
pop
or
xchg
xchg
call
add
sbb
sub
cmp
cmp
add
lods
jge
cmp
dec
sbb
testb
add
lcall
popa
insb
mov
add
push
enter
clc
shlb
add
test
or
jbe
cmp
or
jp
repnz
movsb
mov
push
mov
dec
jl
insl
lahf
repnz
cmpsb
xor
mov
sub
jb
xchg
push
lods
mov
push
mov
dec
push
fcomps
and
cld
pop
sub
loope
mov
xor
sbb
push
addr16
jno
adc
xchg
enter
pop
cmp
push
ret
icebp
les
mov
lock
insb
pop
xchg
cmp
arpl
push
sbb
js
adc
adc
mov
mov
fcoml
xchg
push
gs
out
adc
jbe
sbb
mov
ficompl
aaa
addr16
xor
sbb
mov
xorl
je
xchg
loop
rclb
jge
ja
sub
dec
stc
or
inc
hlt
sub
lock
loop
repz
testb
sbb
addr16
ror
sbbb
hlt
or
inc
fnstsw
add
aaa
dec
scas
cmpsb
adc
fbstp
int3
popf
jl
cmpsb
cwtl
pop
dec
xor
push
jl
fnstsw
jp
cmp
xchg
xor
mov
push
sbb
pop
dec
xchg
adc
inc
enter
loope
pop
sub
hlt
mov
mov
mov
mov
and
dec
pop
inc
fdivrs
push
jnp
mov
out
jmp
mov
mov
add
nop
pop
leave
sub
call
lock
jmp
cmp
lds
sub
out
mov
xor
pop
stos
mov
push
sahf
pushf
pusha
filds
xor
add
aad
mov
jl
pop
mov
adc
into
ljmp
mov
jo
imul
std
sub
jb
nop
mov
add
sub
lods
sbb
xlat
jae
stos
inc
jle
and
sub
cmc
jle
je
sahf
pop
xchg
xchg
pop
push
inc
pop
sar
xchg
xchg
ss
xchg
je
xor
fistpll
loop
mov
lar
je
sbb
xchg
sbb
sub
into
and
mov
imul
fistl
and
jmp
push
push
adc
rcrl
mov
xlat
mov
mov
mov
fwait
sti
cmpsl
imul
adc
fs
cmp
xor
dec
jg
ficompl
mov
lahf
or
adc
vhsubps
inc
fs
in
and
int3
out
out
insl
jo
ret
loop
dec
jp
inc
stos
mov
cs
ret
out
mov
arpl
fmull
fs
andl
jo
aad
jg
pop
jmp
cmp
and
push
inc
and
mov
push
lods
stc
aam
xor
jae
lock
das
pushf
or
lods
xchg
push
mov
mov
ljmp
imul
lret
loope
push
addr16
dec
repnz
lock
out
mov
dec
add
pop
push
gs
mov
loope
cmp
clc
ret
xchg
adc
nop
adc
and
out
test
hlt
cltd
mov
adc
add
cmp
sub
lea
in
mov
ds
cs
pusha
icebp
rol
ljmp
add
ljmp
sbb
jne
daa
inc
dec
dec
popa
mov
jmp
pusha
fdivp
fdivrl
das
addl
cwtl
mov
inc
mov
enter
jbe
jne
test
sbb
stos
xlat
clc
std
jl
cltd
mov
stos
mov
adc
das
lods
add
scas
push
sbb
outsl
adc
cmp
jne
mov
andl
xchg
les
xchg
or
aad
out
or
xchg
stos
enter
int
outsl
mov
aad
in
clc
nop
mov
bound
clc
insb
xor
add
insb
inc
in
mov
je
addl
cmp
jp
mov
xchg
movsb
or
in
outsb
into
or
pop
mov
cmp
inc
xchg
sub
fildll
cwtl
push
mov
das
jl
and
fcmovnb
rorb
outsl
pop
adc
push
push
xchg
or
xor
xor
sub
xchg
int3
std
jp
pop
ret
mov
imul
movsl
repnz
fstp
mov
adc
sbb
cs
xor
in
loop
sub
imul
lret
adc
mov
mov
dec
mov
inc
xchg
sti
add
lock
das
dec
out
je
frstor
repz
rcrl
mov
cltd
pop
pushf
xchg
js
mov
fstpt
jb
aas
inc
mov
xchg
ficoml
cmp
adc
stos
xchg
mov
mov
mov
xchg
stos
iret
mov
movl
std
test
add
lods
xor
jnp
xlat
jmp
jl
cmp
fisubl
cmpsl
mov
pop
cmp
push
fbld
cmp
sbb
mov
or
lcall
mov
jno
jge
shlb
sbb
jmp
push
jae
mov
xlat
jecxz
sbb
roll
mov
enter
push
mov
jle
movq
adc
mov
cmp
xchg
leave
dec
xchg
nop
int
in
add
adc
rclb
mov
pop
cmp
mov
xchg
add
mov
lret
jecxz
add
clc
lods
out
adc
outsb
test
mov
dec
cs
pop
dec
inc
mov
mov
push
cmc
test
popa
mov
mov
and
mov
je
and
lea
adc
add
pusha
loop
xor
push
iret
fistps
lea
xor
mov
or
shrl
vmread
out
mov
dec
lea
out
shlb
out
pop
sahf
cmpsb
pop
cmp
add
cmp
jns
daa
sbb
sub
std
mov
xchg
xchg
in
push
test
mov
push
movsb
adc
out
test
cs
add
mov
hlt
leave
jbe
popa
cwtl
mov
repz
mov
cmp
xor
icebp
outsb
push
mov
dec
add
push
push
cmpsl
pushw
iret
fwait
call
lock
mov
xchg
int3
out
adc
xchg
js
mov
pop
stos
pop
push
jae
cmpsl
sahf
aas
lahf
cmp
pop
stc
jmp
push
in
jp
ljmp
jl
inc
pop
gs
mov
icebp
cmp
ret
dec
cmp
fsubs
inc
xchg
jns
jo
xor
xchg
push
rorb
je
cmp
jno
xor
loope
fisttpll
scas
sbb
stos
push
inc
cmp
ret
orl
push
xchg
test
xchg
in
dec
aas
mov
cltd
push
insb
lods
into
cmpsl
inc
xor
sub
adc
push
stos
sbb
pop
mov
pop
int
jno
imul
or
fsubp
sbb
std
cmp
bound
repz
hlt
bts
int3
cmp
cmp
movl
sub
pop
sub
or
in
or
mov
stos
cwtl
jmp
enter
movsb
out
int
imul
mov
pop
repz
in
movsb
sti
call
mov
adcb
xor
lods
jp
repnz
mov
out
cmp
sbb
jp
or
dec
or
xor
cmp
out
push
movsb
mov
sbb
or
sahf
and
mov
in
jmp
mov
hlt
inc
push
iret
or
je
daa
cld
and
int3
bound
fs
cwtl
ret
sbb
xchg
lods
jne
pop
mov
fildll
xchg
dec
pop
repnz
mov
push
loop
stos
xor
orl
xor
inc
jbe
xchg
jo
int3
jp
fnstenv
or
or
and
rcrl
add
loope
pop
xchg
out
repnz
dec
pop
mov
std
hlt
pop
in
pop
aaa
test
jno
dec
inc
inc
outsl
mov
neg
loop
jl
lret
lods
push
leave
push
ds
test
xchg
cltd
mov
adc
mov
sbb
lret
jae
clc
out
or
push
jae
lret
das
and
push
xor
dec
dec
sbb
cmp
inc
and
arpl
and
cmp
pop
push
cmp
pop
or
fmuls
dec
in
inc
outsb
sub
test
sbb
movsb
aad
test
add
popa
fbstp
xor
jo
repz
inc
lcall
imul
dec
imul
cmp
sub
xchg
jne
push
and
add
sbb
ret
arpl
jb
ja
adc
or
push
mov
rcrb
jb
outsb
cmc
test
push
push
jecxz
pusha
jp
pop
stc
sbb
dec
hlt
les
push
lods
cwtl
insl
insl
inc
xor
add
xchg
daa
fldcw
jmp
xchg
dec
or
pop
in
and
test
adc
and
sub
test
mov
pop
mov
mov
push
and
iret
or
inc
js
mov
loopne
lds
sub
imul
pop
movsl
pop
adc
push
int3
jg
pop
pop
jb
orb
test
jl
lea
lcall
js
imul
nop
ja
inc
xor
dec
add
ljmp
xchg
test
fwait
leave
mov
ret
pop
sti
cmpsb
mov
cld
lret
cmpsb
bound
or
loopne
shrl
xchg
jecxz
scas
rcll
idivl
xchg
xchg
lret
xchg
push
or
inc
arpl
gs
add
sbb
data16
movsl
or
pop
outsl
xchg
xchg
add
int3
xchg
lret
sbb
add
sub
cmpsb
mov
mov
mov
testb
jne
sub
daa
pop
cmpsb
loopne
call
sub
dec
out
mov
jno
jp
sub
jg
xor
xchg
mov
xchg
xchg
jae
fldt
add
movsl
cmp
cmp
stos
out
mov
push
pop
aam
popf
or
std
test
xchg
jge
bswap
cmp
cs
outsl
adc
pop
flds
cmpsl
stc
fcoml
fdivs
sub
push
xchg
movsl
and
push
cltd
or
cltd
mov
xchg
mov
movsb
pop
jmp
or
int3
adc
pop
and
or
cmpl
adc
mov
adc
lret
inc
pop
pop
jl
xor
sbb
lds
addr16
sub
fincstp
mov
adcl
leave
jle
mov
out
je
jae
jge
sahf
mov
sub
imul
clc
enter
xor
or
nop
cmp
dec
js
stc
xorl
dec
mov
stos
cmp
dec
arpl
xchg
pop
push
or
adc
nop
push
fdivrl
int3
dec
push
enter
test
push
rclb
push
fs
outsb
xchg
and
test
and
add
sub
cmp
mov
call
cmp
pop
pop
mov
inc
push
outsb
mov
mov
insl
or
or
cmp
sbb
enter
add
mov
push
cld
jl
adc
fadds
loope
fisttps
in
adc
add
jno
jp
mov
icebp
int3
movsl
xchg
mov
lret
jl
out
add
push
mov
pop
aam
mov
and
mov
inc
adc
lret
stos
cli
cmp
ret
xchg
outsl
jb
sub
inc
push
push
sbbl
xor
or
dec
or
dec
movlps
cld
dec
scas
dec
mov
jno
iret
test
jle
inc
in
cmpsl
jo
lahf
mov
xchg
and
mov
push
icebp
jge
adc
aaa
sti
adc
xchg
add
imul
fwait
or
pusha
mov
ljmp
jns
mov
mov
fisttps
in
test
sub
fs
or
lea
jne
or
ljmp
dec
cs
addb
mov
push
dec
fisubrs
out
sub
movsb
fcompp
rcll
sub
mov
push
mov
outsb
xchg
movsb
lret
and
lea
loopne
jmp
add
ja
call
mov
xor
jnp
iret
push
mov
insb
sbb
mov
in
or
push
sub
outsb
mov
pop
or
jno
push
shlb
or
test
je
push
out
xchg
lds
data16
jmp
jbe
cmc
arpl
or
dec
sbb
mov
pushf
test
test
inc
mov
rcrb
ret
loopne
jmp
pop
data16
inc
pusha
sub
imul
leave
icebp
lea
ja
test
out
repnz
sbb
aad
xor
push
xchg
fldt
cmp
xchg
test
test
mov
mov
push
icebp
fwait
into
and
cmp
dec
js
sub
mov
pop
adc
xor
js
inc
mov
inc
fs
aad
rorb
out
in
cmp
or
dec
mov
push
cmp
rcll
sti
ja
xor
sbb
lds
movsb
xchg
jecxz
add
jmp
inc
add
mov
cmp
cmpsb
into
push
jb
loope
push
fsubrl
insb
pusha
xchg
push
loope
test
xor
xor
add
shll
adc
mov
xchg
xchg
jns
fsubrs
mov
ljmp
popa
ja
out
mov
xchg
add
lock
pop
xchg
jo
in
call
jne
cmpsb
outsb
pop
test
and
cmp
imul
lds
mov
arpl
nop
jns
inc
inc
and
es
add
adc
mov
aaa
xchg
push
cmpsb
ficoml
mov
test
pop
imul
and
push
fadd
add
jae
inc
mov
shrw
fistpl
and
popf
subb
fwait
sti
mov
mov
sbbb
movsl
pop
mov
scas
orb
ret
jb
cmp
push
adc
mov
cmpsl
push
imul
clc
or
ficomps
jns
cltd
test
cmp
and
jle
shll
gs
jg
je
fs
sbb
rorl
mov
pop
add
xchg
pushf
dec
outsb
in
inc
dec
loopne
mov
jb
adc
push
inc
loopne
outsb
scas
push
sub
push
aaa
mov
jle
fcompl
gs
lahf
and
jo
paddsb
icebp
aaa
jns
imul
lret
or
push
in
pop
movb
push
push
jp
cld
lock
inc
repnz
bound
imul
sti
in
inc
sub
clc
leave
pop
xchg
lea
aam
repnz
call
std
jae
lahf
enter
mov
dec
andl
mov
pop
fsts
dec
dec
in
add
push
lds
and
cmp
ret
std
dec
jbe
enter
sbbl
aad
mov
lock
push
aas
xchg
cmp
cli
jle
in
movsl
xchg
mov
push
sub
popf
mov
sbb
xchg
mov
cmc
xor
fsub
jns
jecxz
inc
xlat
push
xchg
and
mov
jae
sub
adc
jo
inc
imul
mov
cmp
sbb
mov
jl
lods
outsb
sbb
cmp
sbb
fsubrs
pop
std
fcmove
lret
mov
cmpl
aaa
push
mov
cmp
mov
dec
jl
jp
xor
sub
inc
pop
fwait
stc
sbb
push
movsl
fisubs
out
dec
fimuls
mov
mov
pop
inc
cltd
insb
imul
inc
ja
ret
fidivrs
xchg
fstpt
nop
cs
cmpb
sbb
mov
mov
orb
mov
out
movsb
loopne
je
mov
mov
jbe
cmp
daa
das
stos
jbe
push
dec
xchg
insl
jp
jnp
mov
aad
push
shl
imul
pop
sbb
adc
sub
inc
dec
pop
insl
jb
stos
jnp
mov
mov
imul
fdiv
loope
jne
enter
ficoms
push
jge
and
dec
mov
int
inc
push
in
lret
cs
lds
pop
mov
mov
leave
rorl
fcomi
jns
xchg
xchg
daa
lock
out
pushf
mov
fnsave
out
jecxz
add
mov
pushf
daa
aad
loop
enter
stos
sbb
sbbl
sub
lock
inc
xor
jne
sub
jle
xorl
jo
je
scas
mov
jle
out
jp
ds
hlt
adc
icebp
fcoms
imul
cmp
sub
mov
lret
out
fwait
dec
jl
push
mov
sub
sbb
inc
in
shrl
out
negb
sbb
mov
jge
sbb
mov
es
and
sbb
inc
rorb
and
ljmp
fcoms
xchg
push
mov
das
adc
out
nop
pop
lods
aaa
loopne
lcall
in
nop
loope
xchg
push
jnp
outsl
mov
xchg
mov
shrb
fcoml
jg
mov
cmp
fcomp
rclb
orb
jns
pop
jmp
outsb
pop
xchg
xchg
sub
popf
movl
mov
cmp
loopne
fimuls
and
test
and
test
std
pusha
daa
in
sub
enter
popa
jge
pop
jle
dec
sub
pop
add
jbe
aas
stos
xor
cmp
jbe
mov
push
sub
out
and
sbb
pop
or
pop
adc
into
roll
ss
mov
mov
jbe
push
stc
push
jb
xchg
xchg
push
mov
jno
cmpsb
ss
sbb
out
sarl
int
sub
cmp
int3
cmp
add
jns
jmp
cmp
fildll
js
stos
mov
ljmp
sub
and
fidivrl
stc
sbb
aam
inc
push
sub
mov
pusha
imul
lret
push
or
inc
or
dec
es
inc
pop
pop
inc
inc
adc
icebp
cmpsb
xorb
mov
sbb
insb
cmp
or
cmp
jb
adc
sbb
push
ja
incl
mov
mov
cs
sbb
mov
mov
icebp
clc
xor
gs
inc
rcll
je
adc
jle
loope
jbe
xchg
rorl
je
push
pop
mov
inc
pop
jns
movsl
insb
fwait
stos
inc
and
outsl
dec
ret
fwait
inc
jbe
pusha
test
dec
push
adc
add
xor
fcomps
hlt
add
and
loope
nop
test
pop
sub
out
add
inc
es
insl
sub
mov
sbb
jne
jbe
cmp
and
loopne
repz
mov
mov
lds
sub
int3
iret
xchg
mov
xchg
imul
dec
out
mov
add
imul
xchg
lret
xor
iret
leave
pop
jl
sbbl
ljmp
rol
mov
shrl
aas
test
pushf
pushf
sub
loope
cmp
enter
stc
mov
shlb
pop
cmc
or
cmp
mov
fidivrs
xlat
jb
push
lock
and
xchg
mov
leave
sarl
inc
xchg
mov
cmp
test
daa
cli
xor
out
mov
mov
ljmp
mov
loope
jae
lea
das
gs
orb
loopne
mov
cmp
or
dec
cmp
out
test
push
iret
fsubrs
pop
ret
call
xchg
xor
sub
add
cmpsb
test
or
lret
sub
arpl
daa
les
mov
jo
stos
sub
push
arpl
pop
adc
jno
jae
pop
outsl
mov
xchg
divl
push
aam
ljmp
add
inc
cwtl
enter
inc
or
add
clc
lret
loopne
loopne
jge
or
mov
test
adc
add
dec
xchg
mov
les
imul
pop
add
or
sbbb
test
ja
ljmp
push
loope
mov
push
or
sbb
iret
xchg
dec
vcmpge_oqss
cmp
push
pop
imul
cmovne
push
and
xchg
iret
jle
mov
inc
dec
adc
sarb
cmp
js
mov
or
push
push
mov
xor
cld
sbb
adc
mov
sbb
fldenv
dec
sti
mov
sahf
mov
xchg
lds
push
sbb
dec
insl
sbb
push
in
jo
inc
push
mov
flds
mov
xchg
adc
hlt
out
int
jae
stc
lds
xorb
mov
fadds
dec
and
cmpxchg
or
jae
sub
jno
shlb
adc
lock
cmp
pop
cs
imul
je
and
inc
out
mov
sbb
pop
incl
push
icebp
rcrl
ja
addl
or
sti
dec
lcall
mov
lods
roll
cli
mov
jo
addb
rcl
jo
push
shlb
popl
jb
sbb
sub
mov
xor
ja
jne
test
hlt
or
adc
das
sub
into
out
mov
leave
inc
lea
inc
fs
jl
xor
in
sub
push
mov
mov
dec
nop
data16
in
lret
mov
xor
mov
mov
aad
mul
jns
pop
rcr
ss
pusha
push
enter
and
popf
cmp
xor
lret
divl
mov
clc
inc
add
cltd
fldt
out
fsubs
aaa
pop
sbb
es
jo
out
push
pop
insl
xor
test
cmpsb
add
sbb
or
sbbl
jmp
fcoms
lods
push
addr16
hlt
xor
dec
xor
sub
repnz
push
pop
fsubs
inc
push
rcrb
btc
jle
xchg
cmp
cld
cwtl
nop
mov
jge
mov
push
inc
xchg
in
mov
rolb
xchg
sbb
notl
or
cmp
cmp
inc
mov
fiaddl
xlat
fimuls
xchg
dec
cmp
outsl
dec
dec
shl
mov
xchg
add
xchg
mov
xor
inc
push
jg
mov
in
cmp
xchg
mov
stos
movsb
xchg
xchg
inc
jmp
insb
pop
jae
xor
sub
jl
sbb
cmpsl
dec
loop
xchg
sub
mov
sahf
mov
or
stos
pop
mov
repnz
mov
sbb
movsb
in
mov
testl
clc
sub
int
inc
adc
and
pop
sbb
mov
jbe
jmp
mov
sar
jle
mov
mov
inc
and
je
jmp
adc
push
adc
jp
jmp
lds
pop
push
mov
fnstcw
cld
inc
and
mov
adc
mov
ret
push
xchg
loope
add
adc
mov
add
loop
test
rorl
dec
vmovups
xor
repnz
xor
out
mov
pop
das
mov
sbb
adc
inc
push
lea
dec
xchg
or
popf
mov
jmp
cmp
imull
in
xchg
popa
cli
xchg
pop
outsb
and
and
jb
adc
push
dec
and
mov
cli
pop
roll
loope
mov
mov
jp
dec
pop
jnp,pt
test
push
mov
imul
sti
fsubrl
aad
sahf
sbb
inc
add
fiadds
lret
out
jae
rolb
or
mov
lock
ficoms
imul
stos
mov
out
bnd
pop
ljmp
fcompl
xchg
adc
xor
or
dec
repz
ja
mov
popa
inc
xor
or
negb
fildl
popa
pop
sub
inc
mov
in
fdivrs
xchg
and
inc
sbb
lcall
iret
jge
pop
mov
daa
or
popf
jb
sbb
sub
adc
in
lret
ret
xor
mov
aam
jbe
xchg
adc
push
leave
std
movsl
adcb
hlt
lahf
xor
fldcw
lahf
mov
and
adc
enter
aad
or
mov
icebp
fnstenv
xchg
xlat
mov
and
and
push
mov
and
or
mov
mov
dec
xchg
mov
fwait
cmc
push
cmp
lods
mov
out
sbb
xor
aas
mov
push
cmp
stos
adc
dec
mov
sub
cld
in
mov
mov
dec
dec
push
in
and
lds
je
rorl
stc
in
push
dec
leave
js
js
pop
idiv
mov
sub
push
pop
int3
popa
aas
mov
dec
adc
xchg
fcmovu
je
mov
xchg
lods
mov
push
sbb
jecxz
push
data16
add
and
test
inc
dec
mov
or
loop
xor
cmp
jbe
aas
mov
lahf
repz
push
xchg
ret
icebp
or
push
cmpsb
rcr
pop
movsb
sbb
sub
adc
ret
cwtl
fsubrl
mov
sub
adc
dec
insb
and
jae
pop
jne
mov
fs
aaa
adc
pushf
in
aam
mov
test
aaa
mov
xor
addr16
mov
lods
mov
xchg
scas
push
inc
mov
inc
jg
xor
jno
out
bound
ror
xchg
pop
sbb
cmp
lret
bound
inc
mov
inc
js
insl
mov
mov
mov
mov
inc
lea
mov
aam
scas
push
mov
ret
xor
pushf
rolb
fsub
mov
fmulp
add
loopne
jl
fdiv
push
and
inc
and
dec
mov
bound
mov
push
loope
xor
push
jno
mov
add
push
imul
sbb
push
popa
fs
lahf
imul
push
sbb
xchg
xchg
sub
xor
mov
inc
enter
das
sbb
dec
cmp
int3
mov
lock
iret
pop
test
jnp
mov
lret
inc
adc
or
std
int3
xchg
push
pop
enter
cli
outsl
rcr
outsb
jl
mov
ljmp
call
and
or
iret
lahf
dec
insl
enter
int3
xlat
jnp
mov
sub
jl
lods
pop
fwait
insb
sub
sub
cltd
icebp
xchg
mov
cmpsb
lcall
fsubrl
in
loopne
mov
sbb
pop
jns
gs
or
mov
fucom
jnp
dec
pop
and
push
jl
lods
movl
iret
cmpsb
jo
xor
sbb
or
mov
fsub
push
addb
loopne
addr16
xor
push
dec
inc
ret
shll
movsl
lret
mov
or
into
mov
pop
xor
lahf
dec
pop
mov
mov
stc
lcall
imulb
lods
aam
in
sarb
lods
and
fisubrl
pop
sub
nop
mov
pop
push
sbb
es
jno
dec
mov
add
cld
xor
hlt
push
idiv
out
test
int
cmp
ljmp
or
pop
icebp
pushf
adc
cmp
sbb
inc
shl
inc
pop
mov
jnp
jbe
aas
punpckhdq
adc
icebp
pop
dec
fldl
cmp
lods
out
mov
and
ret
mov
lret
inc
je
xchg
mov
mov
xchg
icebp
cltd
add
aam
adc
mov
push
cwtl
lahf
dec
jmp
jl
dec
inc
lahf
and
adc
inc
mov
nop
clc
enter
sbb
add
out
mov
mov
mov
mov
out
stos
and
scas
faddl
mov
fldt
mov
out
in
xchg
out
cld
or
stc
or
insl
mov
xchg
pop
jae
imul
mov
xchg
pop
ss
lcall
sahf
fistpll
xor
sti
rclb
ja
sbb
push
popf
dec
jnp
insb
rcrl
xchg
je
mov
or
outsl
xchg
aam
call
in
mulb
jle
repz
andb
mov
inc
cs
xor
sbb
into
loop
pop
sub
xor
add
xchg
imul
lods
dec
dec
sbb
or
jbe
mov
xor
aad
int
test
int3
lret
rcll
mov
adc
xor
ss
ret
shll
xchg
js,pt
cmpsl
inc
cli
outsb
test
add
es
addr16
aad
flds
sbb
pop
jno
xchg
pop
dec
mov
rorl
or
and
mov
lcall
add
nop
popa
cmp
cmp
jae
mov
out
xlat
subl
cs
int3
jp
sub
jb
add
in
push
fs
shl
pop
dec
or
cwtl
lcall
ss
in
mov
jmp
adc
repnz
push
add
mov
mov
mov
adc
ds
jecxz
xor
inc
pop
ds
test
jb
addr16
iret
dec
adc
mov
nop
sahf
aas
repnz
and
sbb
jbe
icebp
jb
push
stos
xchg
xchg
ja
repz
arpl
xlat
imul
hlt
loopne
movsl
repnz
pmuludq
das
jnp
jg
push
insb
pop
push
mov
jnp
mov
adc
insl
cltd
negl
push
inc
sbb
mov
mov
jle
add
pusha
dec
not
mov
lea
mov
movsb
xchg
js
shll
mov
repnz
fmull
sub
inc
xlat
mov
jp
test
pop
add
push
xchg
enter
fmulp
push
pop
fsts
movsl
cmpsb
add
fidivrs
inc
mov
fdivp
imul
pop
aaa
insb
into
into
or
cmp
xor
pop
les
gs
enter
pop
sub
adc
fsubs
mov
fsqrt
jecxz
push
in
pop
mov
ficomps
pop
jl
fwait
or
add
xor
std
gs
adc
out
push
cmp
xor
dec
xor
mov
call
dec
dec
sbb
test
pop
mov
pop
pop
pop
mov
adc
arpl
pop
mov
daa
rorl
push
add
popf
pop
jae
xchg
and
adc
lcall
mov
outsl
xor
loope
xchg
scas
stc
push
in
lods
jns
or
inc
aas
sbbl
ficomps
arpl
cmp
pop
enter
fisttpll
test
pop
std
sub
fcomps
xor
addl
xchg
adc
fucom
js
daa
bound
mov
cltd
test
add
sbb
and
cs
push
xor
or
scas
xchg
xor
out
adc
adc
inc
mov
push
inc
inc
pusha
adc
testb
ja
pop
xchg
icebp
outsl
mov
es
pop
mov
mov
xchg
pop
sbb
repz
arpl
repz
adc
adc
jnp
popf
pop
loopne
mov
stos
cmpsb
inc
dec
insl
dec
mov
ss
inc
inc
es
sbb
mulb
cmp
push
pushf
dec
adc
pop
push
ss
mov
add
popf
mov
out
mov
rorb
xor
lock
fcompl
inc
les
in
cld
stos
mov
sub
cs
add
and
shrb
das
sbb
add
push
cmp
scas
or
push
push
clc
adc
lea
rcll
jbe
out
lcall
cmpsl
cld
lods
cmp
sti
or
cmp
pop
and
add
pop
stos
fcmovnu
inc
xchg
ficoms
mov
jbe
jmp
mov
cmp
xor
orb
sub
push
mov
dec
fdivr
cmc
test
xlat
fs
pop
mov
sub
aaa
mov
pop
or
add
ljmp
stc
ljmp
ljmp
mov
out
xor
push
test
ret
xchg
and
add
sub
push
sub
inc
cmp
jl
pop
fidivrs
es
ret
or
cwtl
shll
pop
jns
jbe
mov
sbb
mov
pop
and
pop
push
in
push
loope
nop
out
int3
jae
xor
lds
test
popf
daa
filds
jl
mov
test
xor
mov
fstps
stos
sbb
push
icebp
aaa
push
ret
aam
mov
push
test
lret
mov
fs
das
arpl
cmp
push
mov
sub
loop
sbb
daa
dec
lret
cmp
mov
sbb
lcall
mov
insl
addl
pop
pop
in
lret
push
adc
loopne
test
cmp
js
mov
test
cmc
xlat
in
push
cltd
inc
mov
bound
movsl
mov
loop
cs
jl
in
div
andb
sbb
pop
ljmp
jmp
std
insl
testb
xchg
sub
and
orb
pop
mov
cmp
lcall
lcall
cmpsl
lret
jo
add
push
dec
mov
mov
or
jmp
fidivs
adc
and
push
jbe
pop
add
xchg
dec
loopne
mov
sbb
pop
pop
sub
mov
push
aaa
cli
int3
imul
push
lds
int3
xchg
fimuls
adc
push
sub
adc
or
inc
cltd
and
push
pop
push
mov
push
mov
or
push
xchg
test
ud0
mov
popa
sbb
insl
aaa
jbe
fists
lock
stc
mov
rcrl
rorb
fcmovnbe
iret
pop
rolb
xchg
stc
imul
xchg
xchg
mov
jne
mov
testb
pop
jnp
insb
or
lods
sbb
int
jl
orb
jne
mov
and
idivb
test
jp
adcl
push
lret
movsb
adc
imul
pop
stos
push
inc
sub
aaa
dec
xchg
sbb
xor
pop
ljmp
xorl
popf
addl
popf
jo
loope
jb
xchg
or
cmp
mov
cmp
dec
insl
jae
and
mov
jb
out
or
cwtl
mov
pop
fsts
cltd
int3
fstps
loop
mov
inc
and
sub
and
mov
cmp
test
stos
sub
les
enter
xor
sub
out
push
rolb
fstps
push
sub
adc
jl
dec
test
and
mov
outsb
and
xchg
ljmp
outsl
je
jnp
out
mov
xor
jecxz
filds
or
pop
rorl
push
js
push
repz
pop
mov
xchg
push
sbb
mov
clc
and
cmp
mov
into
push
cmp
adc
mov
jno
push
insb
and
mov
outsb
xor
add
jp
cmpsb
loope
sbb
sub
mov
out
aad
lds
push
mov
push
sahf
out
scas
add
mov
jne
jmp
push
jns
sahf
add
mov
inc
jbe
pusha
or
scas
out
insl
in
cmpsl
sbb
mov
fiadds
es
addb
or
daa
das
or
mov
lds
pop
scas
push
pop
push
push
mov
dec
xchg
imul
jg
ss
loop
sbb
jno
or
stc
test
mov
xchg
mov
mov
xchg
ret
jnp
push
pusha
mov
aam
outsl
xor
sbb
mov
xor
push
lret
jle
dec
mov
adc
jge
ja
jge
popf
es
jmp
pop
sbb
cmp
sbb
loopne
ficompl
imul
cmp
add
sbb
inc
scas
cmp
or
and
mov
imulb
add
stos
or
pop
or
or
test
push
subl
lret
xchg
movl
lret
shlb
nop
inc
lret
or
out
jno
add
add
ljmp
subb
mov
fwait
push
out
es
in
mov
inc
xchg
or
mov
hlt
push
xchg
enter
lret
fadds
mov
repnz
mov
lods
sub
sub
cmp
cmp
pop
int
pop
ret
stos
insb
repz
pop
idiv
inc
inc
arpl
addr16
or
pop
mov
xchg
mov
sbbl
pop
adc
and
std
out
in
dec
mov
std
test
das
and
faddl
daa
pop
pusha
or
adc
or
out
or
xor
iret
jecxz
cmpsb
std
and
out
inc
jg
outsl
add
mov
std
orb
addr16
cmpsl
cmpsl
jmp
ficompl
inc
sub
in
pop
add
stos
adc
testb
fldl
inc
stos
call
xchg
lods
push
lcall
data16
mov
loope
sbb
mov
cld
pop
xor
jge
and
push
outsl
and
jp
pushf
sarb
sarl
sahf
mov
push
test
jns
scas
adc
in
sbb
imul
adc
ret
lds
pop
int
sbb
lock
mov
mov
cmp
leave
fisubs
clc
ja
jl
jno
je
fs
out
andb
mov
mov
gs
push
ficoml
pop
push
push
mov
pop
movsl
push
fcoms
jae
inc
push
xor
sbb
in
and
xchg
movsl
rorl
jo
sbb
pusha
push
or
xchg
xor
cmp
leave
cmp
xchg
fstps
adc
fisttpll
aas
iret
adc
insb
add
insb
pop
cmp
sbb
movsb
mov
pop
dec
adc
mov
jp
sbb
lret
cmp
out
out
mov
jnp
mov
xor
shrb
in
inc
xor
enter
pop
jnp
mov
ljmp
pop
mov
pop
pop
mov
loop
popa
xchg
in
mov
movsl
je
adc
es
cmp
ss
jo
cmp
test
mov
xchg
fs
mov
dec
xchg
mov
in
in
xor
loop
subl
jnp
xchg
add
loop
mov
push
pop
repz
sbb
stc
add
popf
and
imul
mov
sub
test
push
push
jg
scas
and
jno
add
jmp
pop
mov
stc
sbb
movsl
sbb
cmp
scas
push
jecxz
sbb
add
insb
xchg
inc
and
sarl
int3
adc
push
sbb
lcall
xchg
sahf
hlt
clc
xchg
push
cmpb
cmp
add
mov
sub
sbb
es
jmp
outsb
aaa
adc
dec
jbe
cmp
mov
cmp
cmp
adc
jnp
adc
rcrl
xchg
mov
add
sbb
std
inc
aas
push
mov
add
adc
and
pop
repz
push
icebp
mov
cmp
fldenv
sbb
std
xchg
mov
cmp
sbb
repnz
push
mov
imul
nop
aaa
clc
shl
ds
and
dec
mov
mov
xor
xor
sarl
test
xor
and
repnz
mov
aam
dec
push
pop
das
xchg
adc
lret
sub
push
rorb
ffree
lret
mov
pop
and
dec
or
sbb
dec
pop
xor
ds
mov
lret
test
out
xlat
push
aad
jmp
mov
out
sub
fadds
out
fnstenv
push
int
enter
pop
lcall
les
jp
popf
sub
mov
jbe
adc
dec
addr16
jmp
xchg
pop
and
push
cmp
inc
jmp
cmp
dec
out
aaa
xchg
int
lret
jne
push
cmp
pop
jecxz
outsb
sbb
shlb
test
je
mov
push
icebp
or
int
push
mov
fiadds
pop
sar
bound
rorb
lea
and
xchg
movsl
jl
inc
icebp
mov
scas
test
les
clc
jg
xor
sub
sub
mov
fldcw
inc
mov
xchg
dec
pusha
inc
cmp
sbb
pushf
sub
sbb
push
ljmp
push
lret
or
ja
ljmp
imul
sbb
les
mov
jl
loopne
inc
jl
dec
xchg
mov
loopne
push
or
cld
add
fnstcw
popl
pushf
inc
mov
pop
leave
fld1
xchg
jmp
xor
and
fbld
ret
fcomps
adc
inc
clc
pop
xlat
mov
mov
mov
shl
out
in
push
negl
mov
dec
push
mov
xchg
mov
fisubl
test
sbb
or
add
sahf
mov
pop
inc
mov
hlt
sub
cmp
dec
scas
cmpsb
outsb
push
outsb
inc
dec
sub
test
pop
shll
sahf
dec
dec
imul
iret
jnp
into
dec
jmp
and
aam
or
in
sbb
nop
sub
push
fdiv
imul
jne
push
jo
inc
cwtl
lods
dec
pop
cmp
push
dec
sahf
icebp
jno,pt
fidivl
lea
inc
incl
fsubs
push
dec
fmuls
sbb
xor
push
mov
dec
pop
add
shrl
cmp
nop
push
loope
push
shrb
loope
or
adc
mov
inc
imul
ficomps
mov
mov
cmp
cmpsb
and
push
arpl
mov
xor
push
fadds
and
jae
pop
mov
pop
jg
cmp
bound
les
fnstenv
xor
pop
andl
das
shlb
push
call
and
cmp
push
mov
mov
ss
mov
and
push
pop
push
cmpsl
pop
mov
cmc
mov
shr
jecxz
jmp
jg
fsubr
xchg
xchg
push
xchg
and
into
ja
mov
lahf
xorb
mov
arpl
jne
push
shrl
sub
mov
push
repz
loop
jmp
add
ja
pop
push
sbb
sbb
push
and
add
fimuls
mov
loopne
adc
fisttpl
pop
xchg
sbb
mov
lahf
or
jle
popa
cmp
adc
stos
mov
dec
clc
in
mov
in
and
mov
dec
jbe
mov
adc
xchg
iret
std
fwait
insl
mov
pop
call
pop
and
cmpsl
dec
mov
mov
xchg
fisubrs
inc
jne,pn
fldt
pop
add
jb
pusha
pop
and
out
sub
inc
or
push
mulb
jbe
push
shlb
out
in
ficoml
inc
rol
mov
ss
add
and
jno
dec
icebp
pop
in
int
lret
dec
jmp
mov
out
rclb
sbb
xchg
jge
push
push
pop
repz
shlb
xor
xchg
dec
fldenv
cmp
or
scas
rcrb
imul
jle
addr16
in
aad
pop
movsl
sub
mov
in
xor
pusha
sahf
jne
xchg
lret
xor
mov
fdivl
add
fmuls
add
cmpsb
or
rolb
jmp
cmp
int3
adc
dec
subb
add
cli
mov
dec
jnp
sbb
into
sub
push
ljmp
andb
and
pushf
icebp
int3
call
dec
sbb
bound
dec
add
clc
xor
inc
testb
xor
fwait
adc
and
push
out
inc
movaps
insl
iret
lods
repnz
fnsave
sbb
call
out
bound
aad
out
push
and
ja
stos
out
ret
xchg
repz
push
faddl
push
rcll
cli
xchg
leave
out
and
push
imul
mov
ja
cmpsb
dec
sub
js
push
jle
pop
insb
or
sub
loopne
sub
stc
bound
mov
iret
adc
lret
jmp
cmp
cmpsb
xor
mov
mov
sub
imul
pushf
popf
cli
mov
adc
lds
lahf
inc
jb
pop
and
dec
mov
notb
sbb
movsb
jbe
in
pop
xchg
cmp
fwait
mov
and
mov
push
and
push
iret
adc
jecxz
sbb
push
dec
jo
ret
jns
bound
faddp
xchg
add
mov
jle
fidivrs
ret
add
and
cmp
add
shrl
mov
movsl
imulb
jecxz
out
call
jbe
mov
xchg
xor
stos
cwtl
aad
stc
std
das
pop
jmp
dec
call
sub
mov
dec
xchg
adcb
lods
out
loope
dec
pop
inc
pop
cmpsb
and
pop
cltd
xor
cltd
dec
jne
int
loop
ret
push
cmp
add
cmpsb
mov
mov
or
jecxz
adc
ja
cmpsb
xchg
sub
cmpb
xchg
scas
addb
mov
mov
loope
fidivrl
or
mov
out
mov
inc
mov
sbb
movsb
inc
mov
out
cmc
pusha
fdivrl
mov
sbb
and
mov
pusha
leave
testb
js
push
xchg
stos
mov
mov
jns
xchg
pop
ljmp
jb
xchg
imul
out
scas
cmc
lret
sbb
jle
movsl
insl
mov
test
stos
dec
inc
lds
pusha
jbe
cmc
pushf
dec
jg
mov
pop
push
fst
sub
int
push
and
xchg
inc
aam
mov
lds
dec
lcall
call
pop
and
add
fs
les
jne
add
cmp
mov
xor
xor
mov
xor
cmpsb
pop
xchg
xor
xor
xchg
out
lahf
push
inc
add
jg
pop
jecxz
cmp
lds
bound
repnz
jnp
arpl
and
cmp
in
mov
xchg
flds
aas
push
xchg
daa
push
ficomps
sub
pop
enter
mov
cmp
mov
fstpt
dec
fs
mov
xchg
xchg
sub
and
aaa
js
lods
stc
sub
push
int
mov
jae
test
call
mov
loope
cli
out
outsl
nop
mov
dec
fstpt
dec
imul
fwait
sti
shl
cmp
adc
or
test
mov
mov
inc
pop
neg
shrb
adc
mov
rcll
cmp
rcll
and
out
leave
in
adc
dec
inc
mov
mov
mov
scas
das
sbb
arpl
lret
fisubl
outsl
out
out
pop
or
mov
fistps
rcl
pop
shlb
pop
insl
stc
inc
add
xchg
xor
scas
push
mov
dec
leave
mov
addb
xchg
pop
leave
sbb
mov
and
adcl
and
out
inc
pop
das
inc
and
mov
je
jmp
and
jle
cmp
decb
adc
sbb
out
dec
mov
mov
pop
pop
cwtl
fsubrl
imulb
test
ja
enter
lret
xchg
lods
icebp
mov
dec
jl
sbb
mov
mov
outsl
or
cld
adcl
mov
cmp
dec
pop
mov
lock
or
push
iret
xchg
push
jne
xor
bound
out
mov
fiaddl
inc
bound
inc
hlt
std
cmp
ret
push
mov
or
imul
shl
jle
inc
sub
fbstp
shr
cmp
repz
outsl
leave
sub
mov
push
scas
idivb
rcrb
add
and
div
mov
push
loope
fdivrl
mov
int3
ds
int3
daa
mov
inc
aad
add
pop
stos
in
mov
xor
leave
in
mov
popa
and
sub
jbe
pusha
pop
dec
test
int3
push
sub
test
jle
loopne
ljmp
idiv
xchg
fwait
inc
rolb
fnstenv
orl
add
loope
movsb
jecxz
clc
mov
arpl
lcall
jecxz
movsl
dec
aaa
iret
int
addr16
fistpl
sub
add
mov
clc
scas
or
lods
xchg
repz
mov
adc
scas
addr16
clc
push
decb
mov
cmp
lcall
xlat
dec
sbb
insl
bound
stos
inc
jecxz
or
mov
in
popf
outsl
scas
dec
add
sar
jle
xor
pop
out
sbb
ret
scas
push
sub
mov
data16
je
cmp
cwtd
movsb
cmp
or
and
stos
pop
dec
xor
enter
jg
or
inc
add
inc
jb
xor
dec
xchg
stc
xchg
ss
xor
sbb
mov
imul
fwait
test
dec
outsb
iret
jg
mov
adc
repnz
mov
mov
mov
mov
jmp
lods
xor
sbb
pop
data16
sub
add
push
rorb
sub
out
ljmp
adc
xor
stos
movsb
ljmp
or
xchg
js
cwtl
cmc
negb
stc
into
lret
adc
or
shl
or
cmp
or
pop
sub
std
inc
sti
jle
mov
push
mov
push
dec
lret
movsb
xchg
out
nop
mov
ret
mov
jecxz
add
add
stc
sub
mov
repz
test
loop
lret
in
pop
loope
int
imulb
enter
fidivs
fcmovnu
leave
int
movb
or
pop
jae
adc
pop
and
stc
lea
adc
xor
push
rol
dec
lods
pop
ss
sbb
pop
push
pop
dec
leave
mov
mov
int3
int
add
dec
mov
mov
xor
data16
adc
ret
push
es
cli
and
pop
pop
lods
cld
in
mov
incb
mov
pop
sbb
cmp
pop
push
out
push
movsb
ljmp
cwtl
dec
mov
add
dec
repz
push
xchg
mov
rclb
dec
dec
jge
push
clc
jbe
pusha
addb
outsb
or
shrb
into
cltd
mov
lret
cmp
cltd
ljmp
addr16
and
inc
cwtl
sbb
inc
adc
cmp
repz
jg
out
clc
xchg
sub
inc
jo
jo
dec
jp
cmp
repnz
mov
adc
mov
aam
dec
mov
arpl
inc
jp
inc
mov
pusha
fmuls
imulb
or
sbb
pop
xor
push
dec
sbb
int3
ja
fcomp
push
fldt
pop
mov
in
or
mov
inc
ror
mov
hlt
mov
repz
mov
cmp
call
pop
xor
jae
aad
ja
mov
repz
js
dec
aam
lret
lea
scas
jb
and
or
loope
insb
pop
aam
jbe
mov
rorb
xchg
cmp
bnd
push
mov
push
xor
mov
aaa
or
lret
cltd
push
stc
jl
out
sub
cwtl
mov
mov
jne
push
xor
aas
mov
xor
lea
mov
cs
clc
enter
cmp
das
fnstcw
cmp
or
cmp
repnz
mov
ret
bound
loopne
sbb
and
jno
movhps
lahf
adc
insb
sub
cmp
fldcw
sub
subl
sbb
adc
adc
adc
jne
and
scas
cld
mov
stc
mov
int3
dec
inc
sahf
adc
leave
lods
fwait
mov
fistps
add
out
adc
iret
sahf
or
xor
xor
xchg
enter
dec
sbb
sub
cs
pop
mov
sahf
push
jnp
mov
inc
jge
or
int
push
loopne
add
out
mov
jmp
insb
mov
sub
pop
bound
inc
fldcw
cmp
and
mov
insb
xchg
out
je
loopne
push
imul
push
pop
sub
insl
outsl
or
xchg
fwait
dec
shll
lds
cmp
aas
test
xchg
mov
inc
push
test
cld
popa
int
imul
pop
xchg
test
fadds
dec
or
inc
mov
push
dec
xchg
add
xor
xchg
cmp
popa
lds
mov
and
test
mov
pop
xchg
ss
push
lcall
fistl
mov
push
in
push
adc
or
repnz
inc
and
or
ds
fwait
and
xor
xchg
xchg
jl
and
mov
or
popf
mov
dec
adc
cmp
cs
adc
mov
stos
leave
daa
dec
fildll
jg
pop
mov
ret
pop
arpl
inc
lcall
inc
stc
adc
cmp
dec
inc
mov
stc
xchg
or
out
mov
loope
movsb
xor
mov
push
std
cmp
leave
icebp
cmp
data16
dec
iret
adc
pop
pop
mov
mov
mov
fcomps
int3
je
call
adc
aad
cmp
add
mov
iret
dec
sub
jbe
sbb
nop
lar
aad
dec
out
mulb
aad
iret
jl
or
pop
stc
mov
fldt
dec
inc
sub
jns
fldcw
lock
push
push
adc
xor
icebp
lods
adc
ja,pn
cwtl
xchg
inc
ljmp
movsb
or
push
rorl
loopne
pop
insl
leave
clc
repz
xor
jae
lods
sti
sbb
test
inc
fidivl
xchg
sbb
fsubl
sub
fs
stos
pop
cld
cmp
mov
inc
out
push
xchg
push
aas
aam
jns
mov
shlb
dec
add
lds
and
sbb
sbbl
jg
mov
or
xchg
cmp
sub
les
in
or
mov
test
psubw
outsb
inc
inc
adc
sbb
aam
mov
andb
sub
pop
pop
jmp
sti
jg
movsb
pop
jl
xchg
push
in
push
and
mov
mov
gs
stos
jo
xor
add
out
push
push
jns
mov
test
out
inc
leave
fsubl
mov
mov
jmp
loopne
cld
lahf
fcomp
adc
ljmp
sarb
pop
adc
lds
aas
dec
jl
lea
xor
mov
inc
je
repnz
shl
hlt
sub
push
jb
cmp
pop
loope
mov
sub
cmpsl
test
aam
jmp
out
int3
loopne
inc
pop
sti
sub
push
push
mov
mov
xchg
lea
xchg
imul
mov
cld
lods
inc
and
ds
orb
adc
insl
aas
mov
mov
mov
sti
in
push
and
js
bound
jl
xchg
cmp
sbb
push
ret
mov
test
roll
lahf
outsb
pushl
icebp
popa
dec
xor
dec
mov
push
inc
popa
adc
stc
pop
cwtl
xchg
pop
mov
pop
push
push
popa
pop
xor
insb
mov
mov
jp
sahf
cli
or
and
fbstp
sbb
mov
xor
inc
inc
lea
icebp
sub
sarb
sbb
or
sub
sbb
inc
push
aas
imul
out
insl
push
lea
fildll
ja
into
in
mov
ret
inc
mov
in
fisubrs
jbe
loop
inc
inc
jns
sbb
scas
and
mov
arpl
inc
fildl
adc
repz
stc
push
xchg
jmp
in
cmp
lcall
in
loopne
add
jge
loopne
adc
mov
es
outsl
xchg
out
in
inc
jns
and
pop
or
adc
add
sarl
into
sahf
mov
push
cli
xor
xchg
cmpb
pavgw
jo
hlt
cmp
cwtl
psubq
and
sarb
adc
xchg
mov
push
push
xchg
movsb
cmpb
mov
adc
fiadds
mov
testb
xchg
cmp
fldl
scas
int
push
in
gs
pop
jg
jbe
mov
cmpsl
sarb
into
xchg
fcmove
jae
insl
cmp
hlt
jb
repz
ret
or
ja
shl
xchg
je
cmp
out
add
mov
mov
loop
jbe
and
mov
pop
lret
push
cmc
lds
or
add
cltd
negb
rol
pop
shrl
imull
imul
clc
push
arpl
sbb
cmp
fcomps
push
stos
ds
mov
aad
or
inc
adc
mov
xchg
fisttps
lret
push
in
dec
add
icebp
xor
push
xor
sub
cld
jb
and
jae
leave
lods
mov
popa
jno
cmpsb
sbb
je
mov
pmaxsw
xchg
push
clc
adcl
sbb
mov
lods
scas
lock
pop
mov
int3
lahf
mov
lods
inc
fcoms
jae
mov
fwait
mov
out
dec
pop
dec
in
mov
outsb
loope
scas
clc
inc
insl
neg
inc
inc
push
popf
cmpsl
cmp
push
push
ret
mov
adc
movsb
loopne
cld
sub
jp
jnp
push
aam
jae
stc
mov
insl
test
loop
pop
test
mov
in
loop
ret
mov
leave
cmp
test
daa
pusha
pusha
or
iret
jb
dec
cmpsb
mov
in
ljmp
aam
jb
xchg
sbb
jno
cs
pop
sub
scas
fdivrl
cmp
mov
cmp
push
cmc
imul
dec
add
insl
mov
and
in
test
xchg
pop
inc
jbe
jo
push
dec
sub
iret
cli
xor
push
clc
push
pushl
and
sbb
adc
js
push
dec
xchg
inc
loope
testb
insb
xchg
cmp
inc
lock
popw
pop
adcb
push
insl
xlat
adc
pop
xchg
mov
mov
fldenv
cmp
rcrl
fcoms
ss
lret
pop
fcmovnu
sti
imul
fs
cmp
or
or
outsl
fldcw
cmp
mov
mov
pusha
mov
dec
fsubrs
movsl
adc
inc
inc
xor
cmp
ret
inc
loopne
fdivrp
push
inc
cmp
jae
dec
pop
out
mov
jbe
mov
arpl
stos
push
scas
cmpl
or
aas
sbbl
lret
cmc
jle
mov
xchg
bnd
pop
jge
jmp
std
shlb
cmc
sub
jge
add
out
cltd
enter
jb
out
aad
or
mov
mov
or
add
fcom
scas
mov
out
lock
out
xor
int3
jbe
rorl
je
ja
ret
or
sbb
test
adc
sub
inc
cmpb
outsb
das
pop
dec
imul
and
mov
movsb
aas
mov
mov
dec
daa
out
scas
inc
fstpt
pop
in
dec
jne
mov
stc
xchg
movsb
jge
movsl
mov
lahf
icebp
xor
jmp
aas
push
push
in
lcall
mov
adc
mov
les
sbb
adc
mov
adc
test
inc
negl
int3
loope
pop
dec
lods
lds
mov
ret
fstpl
xor
mov
fdiv
outsb
sahf
push
sbb
xor
push
jmp
cmp
adc
imul
add
loope
rclb
jbe
je
dec
push
cmpsb
incb
pop
xor
out
stos
pop
aas
cwtl
or
push
and
mov
imul
jge
jo
roll
out
aam
or
mov
pop
sub
stc
push
xchg
xor
lret
xchg
fnstenv
mov
cmp
cs
mov
dec
push
jp
icebp
cmpsb
cmc
roll
or
adc
pushf
out
jb
mov
push
stos
mov
add
imul
xor
jne
scas
xchg
sub
jae
ds
mov
mov
fstpl
mov
leave
fldl
mov
jne
negb
sahf
mov
sbb
inc
sarb
cmpb
gs
inc
adc
repz
sti
sbbl
cmc
scas
lds
jmp
mov
dec
outsl
out
lret
jne
dec
adc
xchg
mov
adc
mov
push
mov
xor
scas
jae
das
imul
pop
cmp
rcpps
or
cmp
or
cs
cmp
repnz
jp
arpl
and
push
out
cli
movsl
lea
dec
or
push
jecxz
arpl
jne
out
push
js
mov
icebp
sub
pusha
add
adc
std
pushf
mov
testb
in
push
popa
xchg
sti
stos
sub
fistpl
xchg
std
sahf
mov
cmp
sub
out
add
out
push
xchg
leave
shl
push
cld
std
pop
test
mov
dec
lock
addr16
mov
sub
add
sbb
mov
sub
dec
mov
pushf
add
adc
mov
lods
add
cmc
outsl
or
cmp
insl
je
in
jns
shrb
icebp
mov
jnp
push
jnp
mov
or
loopne
jne
jp
sar
into
adc
lcall
aad
repnz
dec
fisttpl
push
jg
push
in
push
imul
iret
js
insl
test
and
gs
insl
lret
daa
push
leave
sub
lret
fistl
inc
jl
repz
or
daa
push
push
shl
cli
or
lods
mov
sub
repnz
push
ret
xchg
xchg
pop
cvtps2pd
out
pop
int3
add
mov
cmp
fsubrs
popa
test
and
push
cmp
rol
mov
mov
loop
pop
sahf
push
inc
cli
adc
pusha
mov
or
test
adc
notl
orb
xchg
movsb
sub
lcall
mov
jle
test
mov
sbb
daa
imul
lods
cmp
sti
xor
mov
pop
imul
sbb
cmpsb
jae
pop
imul
inc
inc
ffree
or
mov
or
and
dec
fprem1
pop
pushw
dec
adc
mov
pop
lcall
xchg
pop
fwait
add
dec
inc
decb
jno
stos
or
ret
stos
dec
pop
in
gs
inc
ljmp
lds
fwait
lods
hlt
push
adc
movsl
dec
and
mov
mov
sub
dec
lahf
add
call
into
sub
inc
dec
orl
scas
push
out
sti
sbb
or
add
adc
es
call
loop
out
idivl
and
sbb
cmp
repnz
aam
clc
ucomiss
and
stc
xor
add
paddusw
mov
ss
clc
movsb
adc
jmp
js
dec
xor
cmp
dec
mov
inc
adc
fcmovnbe
pop
pop
push
shll
icebp
leave
outsb
sahf
xor
testl
mov
jge
cmpsb
add
les
mov
jne
int3
or
loopne
sbb
fxch
or
mov
sti
cld
stc
scas
into
xchg
data16
cmp
repz
ss
test
std
mov
mov
add
movsb
pop
lea
sbb
je
and
shl
mov
addl
jg
fists
mov
dec
mov
cmp
cmp
mov
mov
pop
add
test
add
mov
int3
pop
sub
cmpsb
in
aas
jbe
out
mov
mov
push
sbb
mov
jle
xchg
xchg
test
bound
mov
cmp
push
rcll
mov
fimull
dec
sti
push
and
mov
or
xor
pop
jle
cld
adc
fs
lret
stos
xchg
add
mov
mov
adc
ss
pop
adc
sub
push
pop
lcall
lea
leave
dec
pop
cmpsb
testl
insb
scas
sub
add
mov
mov
fsubrl
mov
test
mov
popf
pop
stos
mov
sbb
clc
sbb
cmp
dec
xor
adc
adc
test
adc
sbb
popf
pop
outsl
clc
mov
lock
jp
xchg
stos
cmp
jp
cmp
xchg
aas
dec
pop
cmp
inc
sahf
cmp
insb
dec
add
movsb
out
pop
lock
sbb
xchg
cmp
popf
sbb
dec
mov
add
int3
movsl
mov
xchg
and
xchg
sbb
push
jmp
xor
insb
divl
aas
ficoms
mov
repz
add
jge
mov
ljmp
addr16
pop
negl
inc
aad
mov
jg
or
aad
xchg
jmp
call
mov
sub
adc
cmpsb
push
adc
outsb
sbb
fsubl
stc
pop
vmovlps
xchg
mov
shlb
sbb
sahf
add
cli
dec
jae
mov
sbb
popa
lea
clc
sahf
roll
sub
lcall
dec
xor
xor
push
push
leave
mov
insl
xchg
cmc
mov
mov
out
add
lahf
ret
rclb
pop
int
int
lock
or
adc
sub
leave
clc
dec
fwait
pop
loopne
inc
dec
push
std
jae
stc
xlat
andl
or
cmp
ja
jmp
loop
xor
and
popf
mov
lahf
jl
mov
pop
lea
cmp
leave
inc
out
imul
sbb
sti
push
jbe
test
loop
dec
pop
jge
daa
leave
xor
push
xor
loope
lock
mov
icebp
popa
dec
outsl
lds
mov
pop
mov
pop
dec
mov
inc
cmp
jp
into
mov
cltd
shll
scas
dec
sub
in
das
xchg
add
mov
push
sub
mov
scas
dec
test
mov
scas
inc
sub
push
repz
clc
jb
int3
xchg
cmp
add
push
stc
in
add
fisttpl
cmp
loop
xor
mov
inc
leave
ljmp
add
shrl
fdivl
xchg
scas
cld
pop
lcall
mov
pop
mov
pop
cltd
fisttps
bound
xchg
jne
popa
cmp
mov
sbb
rcrb
adc
arpl
mov
mov
mov
mov
inc
lahf
pusha
push
push
cmp
fldl
lods
sbbl
jp
dec
jnp
sub
fldt
call
addr16
mov
shrl
adc
movsl
xchg
repnz
dec
mov
xor
sbb
dec
inc
fcomps
mov
sahf
push
inc
mov
jl
or
push
xchg
mov
adc
ss
inc
xchg
adc
jns
je
scas
imul
out
jg
inc
mov
jno
insl
das
cmc
ljmp
xchg
or
lcall
or
mov
lret
testb
adc
xchg
sbb
mov
std
mov
mov
cmc
add
xchg
stc
je
fisubrs
aas
xchg
mov
sub
dec
rcr
cmp
or
aam
or
mov
aaa
ficompl
sub
mov
inc
pop
pop
mov
pop
cmp
int
mov
pop
xor
scas
jg
call
into
out
inc
adc
xchg
and
test
aam
addb
sbb
sbb
xchg
adc
pop
fildll
mov
aad
mov
mov
xchg
lea
pop
test
xor
test
stos
cld
mov
repz
xchg
and
xchg
dec
xchg
adc
test
mov
outsb
push
xor
push
fcompl
scas
xchg
mov
fwait
mov
and
in
cmp
cli
dec
icebp
add
cmp
mov
adc
adc
imul
inc
dec
stc
xchg
sub
pop
jmp
sbb
xor
push
push
pop
adc
push
push
mov
push
outsb
adc
lods
pop
sbb
jo
pusha
es
repnz
dec
dec
add
mov
scas
push
pop
xchg
rcr
repz
orb
mov
inc
test
add
pop
mov
lahf
jb
mov
popf
adc
sbb
inc
adc
mov
fwait
adc
push
les
push
mov
sbb
jns
adc
out
pusha
sbb
in
sbb
mov
pop
adc
xlat
or
arpl
inc
nop
mov
lds
cmp
jb
sub
insb
xor
into
int3
cmpsb
stc
and
lods
sub
adcb
mov
andb
out
test
lea
cmc
lcall
nop
xchg
adc
insb
inc
mov
test
inc
loope
adc
shrb
fdiv
in
bnd
inc
stos
push
jns
mov
push
mov
scas
cli
fwait
mov
and
ljmp
sub
sub
mov
cmpsb
push
mov
sub
xchg
aam
pop
mov
mov
es
loopne
add
inc
rclb
cmc
mov
les
fdivp
pop
in
xlat
pop
xchg
imul
jo
sub
jecxz
leave
dec
lds
jecxz
ret
scas
incb
sub
cmc
xchg
imul
mov
add
in
test
fnsave
pop
mov
nop
push
xor
xor
pushf
dec
dec
shr
xor
mov
mov
int
sub
rorl
je
pop
hlt
rorb
add
stc
xchg
inc
fisubrs
cwtl
stc
nop
aam
cltd
xor
mov
push
sbbl
movsl
inc
idiv
or
je
jbe
pop
push
ret
mov
xchg
in
adc
pop
mov
in
cmp
repnz
rclb
sbb
inc
inc
pushf
outsl
mov
push
sbb
js
adc
cltd
daa
inc
rclb
sub
fbstp
nop
mov
rorb
xor
jmp
cmp
sub
rorl
in
clc
mov
ret
lock
xchg
xchg
xchg
std
out
add
test
movsb
stos
mov
test
cmp
ljmp
push
sub
fldt
mov
push
inc
mov
shrl
mov
pop
lods
mov
mov
adc
xchg
xor
mov
inc
jmp
jns
sbb
adc
adc
inc
xchg
div
pop
or
fimull
xchg
popl
loop
dec
and
fisttpl
xchg
mov
cmp
cwtl
nop
mov
mov
addr16
push
not
sbb
mov
and
dec
clc
mov
inc
scas
std
idivl
dec
test
pop
xchg
cmp
mov
inc
sti
popf
fcompl
inc
movsb
ret
test
jp
arpl
fiaddl
xor
push
in
lcall
mov
orl
mov
mov
icebp
loopne
push
test
cltd
push
fsubr
ds
push
and
insl
jo
insb
addb
push
out
test
sbbl
inc
stos
sub
jl
push
shl
xor
loopne
movsl
orl
or
add
sbb
cs
xor
mov
mov
aaa
push
int3
leave
fsubrl
leave
and
sbb
pop
mov
std
mov
jns
lret
aad
out
je
dec
mov
jle
pop
daa
sub
inc
add
inc
xchg
xchg
cmp
sbb
push
es
mov
jns
daa
add
fstl
dec
add
mov
push
push
xor
fstpl
test
ret
mov
pusha
xchg
cwtl
rcrb
mov
mov
mov
insl
fldenv
jne
out
mov
inc
xlat
and
jp
movsb
inc
xchg
pushf
lret
in
andb
and
push
push
jmp
arpl
xor
and
xchg
or
fwait
shl
xchg
add
or
and
or
test
cli
subl
pop
fcom
shlb
enter
jg
cli
icebp
mov
cmpsb
movsb
mov
jno
or
jp
fstl
es
jno
shr
aaa
jmp
sbb
mov
dec
dec
push
das
shrb
or
stc
cmp
mov
push
addl
inc
inc
xchg
cmp
xchg
xor
sub
sti
pop
scas
lret
pusha
testl
cmp
leave
pusha
jns
adc
repnz
xor
push
sub
mov
icebp
or
loopne
fwait
in
dec
dec
sarl
stc
in
dec
ficoms
cmp
push
mov
dec
mov
in
out
or
ret
mov
xlat
cmp
pop
test
data16
add
sbb
jle
add
xor
adc
xor
mulb
or
push
inc
mov
clc
pop
lods
shll
cmpsb
loop
cmp
lods
jmp
adcb
xor
outsb
sub
xchg
cwtl
data16
xlat
movsb
stos
pop
dec
fwait
in
push
dec
mov
mov
rolb
xor
mov
mov
inc
popa
dec
push
adc
hlt
out
inc
arpl
clc
xor
adc
or
jbe
jecxz
stc
mov
push
ret
mov
aas
cmp
jb
and
mov
outsl
mov
ficomps
mov
in
scas
mov
or
sbb
ss
pop
out
sbb
dec
insl
mov
clc
les
pop
scas
in
or
dec
cmp
int
xchg
cmp
mov
sahf
aad
sub
pop
or
push
or
lds
hlt
push
out
pop
and
test
push
outsl
in
inc
loop
lret
pop
ljmp
cmp
and
movsb
fwait
ds
rorb
iret
mov
and
mov
cmpsl
xchg
or
cmp
xchg
fwait
adc
add
repnz
mov
clc
test
rol
test
inc
mov
push
jne
jmp
jecxz
addr16
imulb
dec
cmp
fistpl
push
aaa
out
xor
add
ret
int
fisubs
daa
adc
movsl
sbb
nop
lcall
les
fidivs
jnp
inc
mov
repz
xchg
inc
data16
sti
ds
subl
lock
cmp
out
rcll
rcrl
mov
imul
mov
jae
jmp
dec
adc
ret
mov
mov
fwait
decl
rorb
mov
pop
scas
jo
int3
aad
sbb
xchg
popf
fistl
xorl
or
imul
movsl
enter
pusha
mov
movl
sbb
cmpsb
jp
sbb
es
inc
imul
pop
mov
js
mov
and
clc
cld
fbld
jl
pop
or
lods
lods
in
enter
adc
mov
mov
and
add
jns
mov
ret
movsl
fwait
js
xchg
pop
dec
in
addr16
imul
push
test
push
out
pop
mov
mov
ficoms
xchg
mov
sub
mov
add
scas
insl
shufps
cmp
aam
dec
pop
iret
mov
icebp
scas
dec
sbbb
pop
aad
cmpsl
xlat
lds
mov
imul
sub
sub
div
rolb
xor
jge
mov
call
and
pop
lea
sub
mov
inc
push
pop
dec
pop
sub
mov
lods
dec
mov
in
sbb
or
push
test
lcall
xchg
cmp
ret
push
dec
jmp
xchg
aaa
loope
lret
in
idivb
cs
xchg
scas
aas
div
sub
and
loopne
pop
adc
mov
jo
mov
jg
jle
je
push
or
lahf
cmc
add
push
or
ret
das
pushf
adc
adc
rolb
in
call
fs
mov
pop
ficoms
and
jo
xchg
pop
sbb
pop
xchg
leave
popf
push
add
aas
leave
jbe
or
sub
adc
and
inc
mov
rcrl
xchg
jmp
jecxz
subps
out
inc
sub
andb
push
shlb
addr16
in
pop
or
push
mov
aas
pop
mov
sub
xlat
sbb
je
test
and
frstpm(287
pusha
mull
aam
sub
aam
xchg
add
into
scas
fiaddl
bound
xor
push
std
dec
dec
fcmovne
shlb
pop
out
xor
jbe
in
xchg
cmpsl
loope
cmpsl
xor
out
arpl
jl
push
lret
jge
cmpb
ficompl
cltd
test
pop
mov
mov
sub
and
clc
int3
add
or
push
loope
lods
jecxz
pop
aam
pop
jg
xor
das
pop
cmp
sbb
movsl
ret
icebp
scas
cmpsl
and
add
shlb
fdivp
iret
inc
es
and
add
test
in
jmp
sti
insl
lds
clc
sub
jno
jp
lahf
out
xchg
pop
mov
cmc
push
sbb
cmpsl
mov
and
out
bound
testb
clc
add
insl
loope
mov
jbe
dec
dec
adc
sub
sbb
lods
test
mov
or
push
pop
test
sub
mov
daa
mov
sub
push
pusha
jno
icebp
cltd
push
and
xor
pop
adc
insb
into
movb
jg
mov
ljmp
and
jle
aad
shlb
mov
subb
mov
fmull
jmp
mov
push
adc
mov
es
daa
loope
dec
sbb
pop
dec
mov
lea
pop
or
rorl
adc
cmp
js
push
cmp
je
aaa
mov
jg
enter
sub
xor
in
rcll
lret
popf
cltd
shll
mov
sbb
aam
mov
mov
or
out
jne
andl
stc
mov
push
les
jle
ss
push
jge
decl
cmp
dec
fmull
outsb
aam
stc
pushf
repz
xchg
jnp
add
in
pop
push
push
push
mov
aaa
js
loopne
loopne
dec
mov
push
pop
arpl
call
xor
cmc
std
mov
lods
cmp
sti
sub
das
div
lods
rclb
sbb
andl
outsl
pop
dec
and
outsb
xchg
leave
sbb
push
movsl
jg
outsb
sbb
push
hlt
out
movb
xchg
mov
jbe
xor
test
sub
repnz
das
push
fstpl
ret
sub
mov
sub
mov
in
into
cmpsl
leave
lcall
sbbl
or
push
fdivr
jo
stos
xor
sti
pop
arpl
test
inc
dec
flds
in
jo
aaa
adc
stos
add
out
mov
mov
mov
sti
cmp
pop
out
mov
test
pop
lret
movsl
repz
cmpsb
push
icebp
jecxz
mov
lea
inc
xchg
adc
aad
inc
xor
jmp
and
add
inc
inc
push
fidivrs
outsb
cltd
mov
xlat
loop
mov
gs
popa
xchg
push
pop
xor
aam
hlt
xchg
out
sbb
mov
dec
lds
popf
push
mov
sbbb
pop
jle
dec
rcrl
les
test
inc
ud1
fdivl
fsubrl
or
test
sub
or
popf
fwait
stos
or
inc
add
jmp
and
fcoms
bound
cld
jo
scas
fbld
dec
pop
movsb
and
ss
xchg
mov
fistpl
faddl
test
fistpl
mov
push
je
push
and
mov
repnz
dec
jl
fdivp
pop
jo
cmc
decb
and
dec
mov
aas
dec
fdivrs
cmpl
addr16
xchg
rcrl
xor
push
jae
sbb
daa
sbb
adc
ss
xor
xor
in
sarb
pop
in
and
jae
sub
xchg
inc
mov
psubusb
dec
std
enter
jmp
and
fs
outsb
jp
mov
lods
add
shrl
mov
popa
cvtpi2ps
inc
xchg
das
fsubs
xchg
sbb
dec
mov
sbb
mov
inc
add
jb
or
mov
dec
ret
int
sbb
push
test
mov
xchg
mov
sub
mov
inc
pusha
pop
and
inc
insl
fstpt
jp
js
pcmpgtw
pushf
xor
pop
dec
sahf
or
xor
mov
xchg
add
dec
or
fisubs
pop
loope
sti
addr16
fucomi
xor
push
xor
sbb
pop
add
and
int3
iret
ret
das
cmp
int
push
jbe
push
cmp
push
hlt
xchg
arpl
adc
sahf
inc
out
loope
pop
fcoml
push
fisttps
xchg
filds
inc
cmp
jecxz
or
lret
ror
movsb
and
add
inc
in
insb
call
xor
subb
and
incl
and
andl
andl
cmp
aas
fcompl
mov
cmpsb
and
addr16
adc
inc
xchg
outsl
imul
bound
rcrb
enter
or
mov
repz
gs
mov
sbb
mov
in
imul
pop
xchg
lret
xchg
mov
nop
loop
pusha
cld
sbb
repz
mov
scas
lock
test
adc
adc
gs
lods
aam
icebp
sub
sub
xchg
jo
and
inc
jns
and
dec
aas
aas
lret
arpl
mov
push
jmp
xchg
pop
inc
xlat
mov
sti
fldl
das
test
cmc
jb
in
adc
dec
repz
leave
mov
add
lea
push
adc
icebp
pop
dec
mov
daa
jmp
jno
push
das
bound
push
es
mov
enter
push
sbb
lcall
lea
repnz
jecxz
mov
inc
push
mov
inc
adc
fsub
mov
insb
push
out
push
adc
or
fsubrs
sub
add
movsb
arpl
mov
push
cmp
jp
dec
mov
xor
imul
xchg
push
rol
in
cmp
sbb
mov
xor
daa
ret
inc
mov
mov
push
and
test
push
lods
dec
pop
addr16
cmpsl
hlt
and
cmpsb
imul
addr16
sbb
or
into
in
cltd
stos
fsubrs
add
cmpsl
inc
and
xchg
inc
insl
movsl
or
and
cli
sti
mov
sub
mov
in
jl
arpl
movsb
jl
push
push
insb
movsl
subl
ret
std
dec
sub
jne
fnsave
adcb
inc
imul
cmc
jb
push
inc
jg
pop
repnz
dec
mov
sbb
lret
inc
mov
mov
dec
mov
roll
jb
int
mov
jmp
bound
rcrb
mov
scas
dec
inc
lret
dec
ss
loope
lahf
mov
xchg
or
sub
into
es
adc
lcall
and
inc
fdivrl
jbe
push
mov
mov
push
mov
ds
and
jne
test
jg
xor
repz
dec
jo
inc
ja
es
push
lcall
and
daa
inc
jae
push
cmp
repz
adc
pop
xchg
lret
sub
sbb
test
lds
jb
add
and
aas
out
hlt
iret
xchg
mov
sbb
in
xchg
mov
inc
lahf
out
dec
xchg
cmp
lea
pop
rcl
ss
aam
adc
jae
movsl
arpl
lods
int
mov
movsl
jno
lret
mov
ds
push
adc
ds
popa
pop
fcompl
test
es
mov
fsubl
mov
cmpsb
sti
in
mov
adc
pop
xor
mov
add
popf
mov
pop
rcrl
dec
ja
rsm
lock
sbb
mov
or
inc
iret
les
andb
rcrl
aam
inc
repz
out
jo
std
adc
sbb
jp
cmp
test
adc
fsubrs
hlt
push
outsl
jae
mov
dec
aas
cmpsb
ret
xchg
xor
push
outsb
adc
clc
dec
fstl
mov
or
loope
fwait
addr16
sub
mov
insl
les
pop
aam
fs
inc
lahf
mov
dec
out
push
jmp
jmp
push
dec
sbb
sub
std
das
mov
mov
mov
and
lods
mov
fimuls
notb
adc
push
iret
cwtl
aad
push
sub
xor
mov
jae
iret
mov
or
in
mov
pop
inc
in
pop
repz
fdivl
cld
fnsave
mov
mov
adc
pop
icebp
bound
lock
mov
fcmovnu
push
cmp
dec
mov
jns
xchg
sbb
bound
stos
stos
aam
daa
enter
pop
dec
aad
gs
adc
arpl
xchg
inc
pop
imul
das
mov
fildl
ret
sbbb
add
cld
jecxz
in
cld
stc
iret
sbb
dec
imul
mov
daa
pop
daa
jnp
push
push
cli
inc
repz
ds
add
insb
jmp
push
cmp
or
sbb
lods
jmp
shlb
xchg
push
and
xor
aad
xor
out
stos
add
push
mov
popw
fs
imul
jg
dec
pushf
aas
mov
push
fnsave
dec
aam
je
or
int3
ljmp
add
roll
mov
out
psllq
inc
addr16
cli
jle
scas
jge
sahf
aad
je
pop
xor
mov
pop
mov
adc
mov
jge
addr16
and
hlt
fisttps
popa
rcl
insb
test
arpl
xor
inc
pop
inc
popa
push
movsb
cmp
sbb
mov
cltd
lret
ja
sahf
sub
rcrb
cmp
sti
inc
inc
cmp
jbe
inc
dec
push
pushf
addb
sub
mov
xchg
mov
jb
cmpb
dec
dec
data16
mov
sub
dec
adc
mov
insb
or
loopne
xchg
mov
lahf
movsl
push
cmp
popf
mov
fldl
icebp
insb
cmc
mov
pusha
ljmp
mov
jnp
into
shll
iret
idiv
rolb
fnstcw
mov
mov
stos
adc
pop
test
adc
mov
aam
int
js
and
das
cmp
das
sarb
jno
xchg
ss
cmpsl
and
pop
sub
inc
outsb
flds
inc
jae
inc
sbb
xor
ret
inc
ficomps
js
inc
nop
das
icebp
ret
pop
cltd
mov
push
adc
mov
aaa
push
xchg
push
push
mov
adc
adc
testl
das
rcrl
ds
xor
and
adc
adc
cmp
pop
pop
jbe
add
adc
lret
push
and
push
das
push
test
das
fnstcw
push
push
das
xorb
mov
mov
sbb
les
cmp
enter
jnp
xor
jmp
add
sub
ja
and
test
jge
pop
bnd
add
dec
inc
fwait
lock
movsb
subb
pop
sbb
push
or
jno
adc
aaa
es
stos
stc
push
pminub
sbb
mov
push
aaa
add
cmp
jne
mov
test
inc
cwtl
sbb
mov
hlt
sub
dec
jecxz
push
insl
push
fsts
lods
sahf
sub
fwait
popa
fistl
testl
add
lahf
call
push
push
shr
mov
test
hlt
loop
mov
mov
xchg
fst
mov
dec
frstor
pop
mov
inc
pop
adc
or
mov
loop
in
rcr
test
pop
lahf
nopl
push
dec
outsl
iret
push
mov
test
iret
data16
mov
mov
shl
int
pop
call
cmp
sahf
popa
mov
sbb
xor
mov
dec
mov
mov
jg
addr16
xchg
cmp
sub
lret
sub
xorb
imul
jne
ljmp
xchg
inc
adc
and
lds
add
dec
jl
repnz
leave
adc
out
sub
dec
and
ds
sub
push
lcall
sub
je
lret
sarl
fsubrs
or
fwait
cli
push
in
je
ljmp
popf
mov
jecxz
inc
push
xor
pop
divl
int3
pusha
mov
rorl
or
mov
add
jmp
aad
adc
into
faddl
inc
sarl
jl
or
mov
sbb
cmc
sbb
push
call
repz
test
cmp
repnz
dec
inc
mov
xor
out
cwtl
pop
stos
inc
cli
outsb
orl
cmpsb
sar
cmp
fiadds
rclb
pop
xchg
sti
stos
testb
test
arpl
scas
lea
test
enter
push
outsl
inc
mov
out
cmp
lods
ret
pop
adc
cmpl
bound
xor
rcll
pop
hlt
loope
iret
bound
push
xchg
movsb
cld
mov
into
mov
leave
lods
in
addl
xor
jmp
mov
push
bound
cld
dec
jl
sub
cmc
jl
sahf
inc
pop
push
xlat
into
fmuls
jnp
sbbl
xchg
cmp
and
xor
cmpsb
data16
call
cmc
adc
insb
aam
dec
arpl
pop
cld
mov
push
push
lds
iret
sub
sub
push
aaa
lods
mov
aaa
xchg
aad
repz
out
mov
loopne
sub
je
jo
shrb
sbb
xor
add
cmpsb
cmp
inc
and
cmp
push
sbb
push
int
fildl
icebp
mov
or
adc
lret
or
scas
inc
loopne
and
cmp
call
xchg
push
push
cli
xor
fidivs
mov
test
push
fnstenv
lds
mov
fsubrp
div
lret
xor
or
xchg
xchg
in
sti
xor
xchg
inc
xor
sub
pop
mov
inc
mov
pop
mov
push
jg
mov
imul
outsb
jmp
adc
inc
jns
enter
mov
push
fcmovnu
lret
adcl
cmp
stos
test
popl
pop
jbe
pop
and
cwtl
lret
xchg
idivb
dec
sub
rorl
rcll
jg
sbb
xor
scas
jp
fst
jl
pushf
pop
push
les
push
push
pop
mov
test
push
movsb
pop
mov
jae
inc
cmp
mov
mov
cmpl
sub
xchg
xor
mov
popa
cmp
push
pushf
xlat
jae
jbe
into
in
nop
dec
aas
mov
rolb
aaa
mov
jecxz
inc
outsl
add
arpl
rcr
adc
cmp
push
mov
popa
push
sti
sub
push
sub
jge
sbb
outsb
shll
insl
sub
aad
lods
aam
mov
div
push
aam
shrb
movsb
inc
and
cltd
jo
mov
data16
push
ret
insb
adc
xlat
and
and
jmp
fiaddl
lret
jle
cmp
imul
pop
movsb
call
sub
or
xor
out
unpckhps
test
jmp
xchg
aad
cmp
dec
sub
test
cwtl
adc
add
lcall
add
es
addr16
xchg
add
pusha
ss
inc
add
das
call
js
iret
xor
mov
pushf
mov
dec
sub
sahf
push
jns
aam
mov
dec
xlat
adc
jae
push
ficoml
cwtl
in
pop
pop
xor
or
je
xchg
das
mov
sbb
rcl
lahf
mov
pop
shll
dec
adc
les
negl
insb
sbb
and
and
jl
jge
inc
jg
ljmp
mov
mov
cmc
push
pop
push
jb
lods
movsl
sahf
jg
xchg
call
or
jne
cwtl
mov
fdiv
and
add
add
test
xorl
xchg
stc
push
xor
dec
clc
mov
inc
enter
addr16
lods
xchg
pop
sbb
cld
sti
mov
sti
es
xchg
xchg
enter
mov
subb
pop
sub
or
add
and
and
popf
push
push
dec
jg
js
inc
adc
lea
add
outsb
nop
negb
in
pop
aad
push
jb
or
int3
nop
xor
adc
fidivl
inc
aas
fmull
cmpb
ftst
cwtl
mov
mov
popa
hlt
or
fldln2
test
sub
jnp
mov
mov
xchg
cwtl
pop
dec
cli
cmpsb
pop
loopne
xchg
xor
or
mov
mov
ror
outsl
or
sub
dec
xor
and
fsubrl
fwait
into
pop
xlat
jno
push
mov
cmp
mov
mov
pop
pcmpeqd
push
ret
leave
push
or
push
jne
ss
xlat
out
inc
jg
or
add
aaa
pop
mov
addb
outsb
or
nop
xor
subl
jmp
pusha
test
das
and
in
lods
sub
mov
aad
inc
inc
subb
cmpsl
ret
or
stos
scas
ljmp
mov
push
aas
maskmovq
divl
jg
jg
xlat
mov
xor
add
scas
push
rolb
mov
arpl
fiaddl
scas
stos
jne
test
cmpsb
sub
dec
push
int3
in
or
in
pop
icebp
or
jae
mov
pop
xor
add
bound
insb
mov
xchg
inc
into
stos
mov
stos
xchg
cmp
add
push
loope
es
sbb
mov
inc
movsl
xor
xchg
movsb
adc
cwtl
mov
scas
cs
rcl
xchg
fistps
popf
cmp
dec
loope
add
dec
cli
imul
js
popf
xlat
fneni(8087
sbb
clc
call
mov
xchg
mov
jbe
cmc
xchg
roll
loop
out
cmp
jp
add
push
lea
inc
out
jecxz
rcr
rcrb
xlat
fidivrs
xchg
lahf
sahf
add
insb
xor
fdivs
outsl
cmp
fisubrl
shr
cmp
cli
lret
mov
xor
mov
lods
xor
inc
xor
enter
dec
popa
loopne
push
out
push
insb
test
xchg
in
pop
mov
and
xchg
scas
xchg
outsl
sahf
mov
sub
bound
push
imul
xor
dec
jg
icebp
aas
sarl
inc
jae
fsubl
cmp
push
jae
xor
pop
dec
jge
jge
sbb
data16
mov
lahf
cs
jl
sahf
cmc
mov
sti
push
lea
and
jns
scas
setle
inc
addr16
pop
je
scas
lds
jo
sub
pop
xchg
and
in
scas
add
scas
movsb
dec
insb
mov
jge
xchg
cld
insl
push
fistps
mov
mov
xor
fsubr
in
cwtl
jbe
jp
int
cld
push
mov
mov
test
xor
in
imul
movsl
arpl
or
pop
inc
in
or
lahf
pop
lea
pop
pusha
or
loop
mov
cmpsb
shlb
in
pushf
dec
add
pop
push
pop
stos
mov
cmp
lret
dec
je
jmp
popa
or
gs
movsl
jb
lock
aad
inc
imul
adc
shlb
enter
add
jbe
mov
call
insb
in
jp
jmp
mov
push
mov
push
sbb
fcoms
dec
out
mov
jb
mov
imul
test
push
imul
outsb
insl
xor
adc
push
jmp
push
loop
les
insl
jae
mov
push
or
cmp
adc
pop
mov
sbb
jmp
jecxz
cwtl
fsubs
sahf
stc
imul
dec
imulb
dec
mov
subl
or
inc
js
pop
jae
xlat
and
int
or
mov
inc
push
ret
inc
xlat
jae
jl
jbe
xor
fs
pop
lahf
inc
call
fldcw
pop
fstl
cmpsb
cmc
test
add
ljmp
pop
adc
xorb
aad
mov
xor
fidivrs
clc
sub
and
cli
fbstp
or
xchg
mov
sub
jl
pop
mov
leave
scas
xacquire
xor
enter
leave
idiv
sbb
clc
xor
inc
stos
cli
mov
gs
insl
cltd
inc
mov
and
dec
push
stos
add
jb
push
cmp
lcall
cmp
cmp
jge
popf
pop
std
mov
add
fcompp
movsl
add
mov
stos
adc
lds
aas
int3
push
mov
pop
sbb
mov
inc
pusha
push
shll
push
cmc
mov
lock
push
push
add
mov
adc
dec
jmp
icebp
test
fwait
jle
daa
fimuls
lret
sbb
dec
mov
out
mov
mov
aam
inc
fists
pusha
shl
fisubrs
push
jnp
ss
push
loop
pop
int3
sbb
aas
pop
jne
inc
push
add
icebp
je
jp
mov
fisttpl
push
pop
xchg
mov
cs
push
pop
fisubrs
and
out
xchg
and
lea
incl
stc
call
sbb
jle
mulb
jne
cwtl
push
or
mov
sbb
dec
xchg
test
cmp
jno
inc
push
mov
pop
pop
inc
xchg
imul
out
roll
es
leave
popf
mov
movsl
and
lcall
lea
idiv
cmc
jmpw
mov
jle
sub
test
jge
ljmp
mov
xchg
mov
test
xor
adc
decl
test
adc
nop
pop
lock
cmc
cli
lock
add
push
ret
push
xchg
xchg
clc
sbb
add
cmpl
dec
push
mov
movsl
push
or
and
jns
ficoms
xor
adc
mov
xor
lahf
roll
pop
mov
sub
rorb
clc
jg
imul
push
jns
ss
mov
repz
adc
clc
mov
mov
dec
pop
cltd
fiadds
cld
cmp
jle
enter
leave
cld
ds
jmp
pusha
pop
sti
mov
xor
add
push
pop
repnz
jle
add
fimull
in
sub
fsubrl
std
add
cli
jno
call
xchg
ljmp
mov
and
and
pushfw
and
mov
cmpsb
mov
idivb
ud2
cmp
outsb
fdiv
push
mov
sar
hlt
daa
enter
pusha
dec
push
push
xorl
je
jbe
and
xor
xchg
lahf
popf
cmp
fstps
orb
pop
xchg
mov
into
mov
pop
and
jge
fsubr
xor
in
dec
sbb
lds
xchg
xchg
sub
daa
in
test
sbb
adc
shlb
call
jbe
in
push
dec
rcrb
leave
jo
pop
adcl
jp
repnz
cltd
dec
xor
rcrb
add
jo
jb
jo
pop
sub
push
sub
subl
ficoml
xchg
jne
sub
pop
lcall
and
mov
jae
mov
push
out
inc
popa
push
rolb
enter
cmp
hlt
mov
cmp
outsb
xchg
imul
out
xor
mov
mov
jg
and
adc
arpl
stos
add
jb
push
rcrl
inc
stos
mov
and
cltd
push
push
add
jne
popf
in
fdivrp
cmp
adc
xor
jo
fidivrl
cmp
mov
dec
ret
mov
pop
xchg
sub
inc
fs
in
cmpsb
pop
pop
push
mov
adc
sub
xchg
sbbl
xor
pop
mov
les
sti
sub
scas
xchg
xchg
push
sub
ror
stos
fcomp
sbb
xor
out
pop
pushf
mov
loop
mov
push
fwait
leave
lock
ret
and
adc
fnstenv
jle
lods
adcl
adc
push
or
cltd
jg
fstpl
cmp
jl
jo
or
jns
leave
sbb
subl
xchg
loopne
cwtl
fldl2e
mov
jns
jl
pop
fdivrs
push
xchg
daa
or
imul
add
cld
cmpxchg
cmc
mov
test
or
and
jecxz
or
mov
mov
popa
push
jns
and
movnti
adc
sbb
mov
or
in
push
das
xchg
mov
cld
xor
jb
lahf
jns
ror
and
andb
scas
inc
add
or
adc
imul
mov
pop
push
xchg
cmp
or
add
aaa
imul
or
fistpl
adc
lret
js
call
mov
dec
xlat
es
cld
daa
sbb
xchg
dec
add
and
loopne
xchg
movsb
dec
jo
push
lret
pop
flds
pop
lods
subl
and
ret
popa
icebp
and
negl
call
mov
mov
xchg
push
dec
mov
xchg
inc
in
fistl
insl
sarb
mov
push
mov
pop
jge
pop
cli
and
xor
xor
test
add
sbb
aas
cld
cltd
mov
xor
stos
adc
icebp
mov
sub
dec
adc
ret
add
add
mov
data16
repz
xor
pop
xchg
xchg
and
clc
loop
in
movsl
or
sub
mov
and
les
out
dec
lahf
inc
scas
roll
push
xlat
ret
iret
cltd
mov
push
jecxz
mov
adc
dec
push
cmp
mov
cld
lods
aam
fs
xchg
scas
push
pop
xor
push
add
mull
test
xor
inc
out
inc
js
and
div
jmp
fs
push
inc
lret
gs
and
sub
and
xchg
pop
sub
mov
push
outsb
push
mov
sarb
jmp
mov
add
xor
lea
push
js
pop
mov
mov
pop
cmp
sbb
sbb
addr16
add
outsb
xchg
inc
push
mov
inc
pop
std
stos
xchg
test
mov
fildl
ret
lahf
sahf
decl
in
pop
out
fidivs
es
or
adc
xchg
lret
jp
adc
xchg
mov
unpckhps
push
test
push
sbb
stos
rorl
out
in
xor
hlt
dec
mov
jno
das
mov
dec
mov
ret
add
inc
rcr
aad
cli
mov
repz
psllq
mov
mov
pop
dec
lods
out
pop
push
inc
loop
out
orl
mov
xor
sbb
stos
movsb
sub
jmp
stc
pop
out
lcall
sub
aam
into
iret
pop
or
scas
lock
push
leave
outsb
mov
and
ret
inc
das
daa
enter
popa
pop
arpl
add
aaa
test
mov
out
cmp
or
xchg
aaa
shr
idivl
incl
out
test
in
pop
ret
pop
ficompl
repz
dec
cli
sahf
sub
repnz
push
ficomps
call
imul
lods
xchg
loope
adcl
fisubrl
xor
outsb
inc
push
outsl
sti
aas
push
sub
jo
data16
sub
test
push
cmp
in
fidivrs
out
add
fsubr
sahf
cwtl
hlt
andb
lds
lock
lods
xor
les
test
clc
jne
jb
inc
push
mov
repz
xor
mov
enter
loope
xchg
jb
outsb
pop
cmp
in
push
push
adc
and
jbe
sub
ja
lds
sub
adc
xor
rorb
cli
ljmp
sbb
outsl
or
dec
lret
push
mov
add
fmull
fnstenv
in
scas
xchg
jge
mov
dec
xchg
mov
ss
xor
imul
fnsave
pusha
dec
cltd
pop
imul
in
les
push
xlat
dec
rcr
negl
mov
sub
arpl
call
cmp
mov
cmpsb
dec
mov
lret
adc
mov
jbe
repnz
int3
jmp
and
cltd
cwtl
movsb
sahf
mov
iret
fildl
pushf
arpl
inc
jnp
lret
loope
add
das
xchg
push
push
arpl
rcl
sarl
or
insb
sbb
xlat
std
sbb
add
enter
cli
sub
stos
adc
dec
cmpsb
mov
xor
or
cmp
and
int3
movl
lret
lcall
sub
jae
test
jne
or
pop
pop
dec
xor
dec
cmpsl
xchg
dec
hlt
ljmp
fdivl
push
out
dec
insl
fcompl
shll
adc
cmc
cmp
mov
or
movsb
ss
shrl
cmp
xchg
test
pusha
mov
int
push
andb
outsl
call
sub
cmp
cmp
aaa
ror
xchg
adc
xor
xchg
xchg
sbb
xor
add
lcall
movb
fdivs
and
scas
jge
lods
pop
add
out
push
ret
je
add
pusha
sub
add
cmp
roll
push
mov
pop
test
stos
pop
or
outsl
jbe
nop
or
out
and
call
fisttpll
cwtl
dec
cmp
sarb
sarb
shll
or
dec
movsb
and
mov
push
cli
or
fisttpll
and
sbb
clc
mov
sbb
adc
imul
xchg
push
daa
popa
idivb
call
hlt
out
mov
loopne
inc
ret
pop
int3
xchg
jb
lds
repz
or
dec
cld
andb
or
sbb
mov
movl
mov
int
mov
xor
bswap
and
xchg
stos
rcll
mov
xorl
lret
jns
pop
xchg
push
test
mov
adc
adc
fistl
out
adc
xor
scas
mov
int3
or
dec
in
pop
mov
faddl
sarb
cli
jb
mov
imul
jns
and
adc
aam
mov
inc
fcomps
mov
imul
fisubl
movsb
bound
clc
cli
ja
into
bound
sub
mov
cmp
push
pop
inc
ss
mov
and
jnp
int
loop
popf
out
sub
imul
mov
xchg
stos
shll
sbb
xor
popa
xorl
nop
jo
or
jno
dec
jecxz
imul
pop
mov
mov
dec
cmpsb
mov
mov
xchg
jne
dec
mov
mov
test
in
inc
scas
repnz
cmp
push
push
out
fnstcw
pusha
ljmp
nop
jmp
or
mov
jns
adc
or
lcall
gs
cltd
stos
aam
adc
mov
js
dec
ret
mov
repnz
and
mov
aad
leave
fmuls
mov
xchg
das
mov
jae
mov
repnz
ds
sbb
push
int3
addr16
aam
cld
cmpsb
out
das
cmc
jb
ljmp
xchg
xlat
sbb
inc
sahf
imul
jbe
xchg
sbb
stc
dec
stos
adc
not
or
incb
cmc
lods
mov
in
cmp
push
fs
pop
mov
and
dec
xor
leave
test
push
xchg
xchg
mov
mov
aad
or
sbbb
xor
jo
repnz
sahf
xor
dec
fcmovnbe
stc
sahf
mov
jno
ror
mov
and
mov
mov
sub
dec
mov
jb
mov
test
jnp
mov
mov
sub
sti
push
sub
jns
pop
idiv
mov
or
mov
push
mov
inc
pop
sti
je
sbb
dec
mov
lea
sub
xorb
pushf
gs
xor
insb
mov
mov
pop
and
or
push
fxch
imulb
inc
cmc
movsb
jns
mov
shlb
dec
xor
clc
pop
stos
inc
adc
xchg
mov
imul
ja
jb
mov
cs
and
mov
mov
rclb
ja
fisubrl
push
js
xor
xor
out
out
xor
fsubs
sarb
cmovne
mov
push
sub
mov
add
imul
into
hlt
ret
push
int3
push
roll
ret
dec
add
jbe
pop
push
aad
fistps
cltd
mov
or
xor
sahf
stc
cmp
push
icebp
test
mov
jno
fsubrl
popa
jp
lods
test
fwait
out
outsb
repz
push
cmp
out
std
pushf
dec
dec
inc
decl
and
rorl
mov
xor
inc
push
or
push
sub
iret
je
cmp
dec
mov
add
mov
mov
je
cwtl
loope
and
dec
std
sarl
rol
inc
jle
int
lods
add
into
push
addr16
enter
rcrb
int3
add
adc
and
in
mov
mov
enter
rcrb
inc
lcall
and
xchg
lahf
fwait
xor
lahf
cmp
mov
mov
sub
push
xor
cmp
pop
pusha
pushfw
push
xor
and
jp
aad
inc
dec
testl
xor
rcrl
gs
gs
fcompl
clc
cwtl
adc
push
jp
cmpsb
cli
jno
bound
repz
lcall
pop
leave
xchg
cmp
xchg
in
sahf
mov
or
div
outsl
pushf
jg
add
xor
mov
jne
jo
dec
fidivl
fs
jb
mov
push
fstpl
add
pop
push
mov
iret
pusha
and
cmp
jb
mov
cwtl
pop
fistl
in
pop
cmpsb
into
sbb
daa
sbb
mov
fsubs
mov
sbb
cmp
bound
add
mov
push
xor
lea
cmp
test
mov
loopne
incl
int3
outsb
push
xchg
jns
in
fcomi
daa
cmp
cmp
jnp
jg
iret
pop
and
cmp
push
sub
cwtl
fdivs
lods
or
xor
xchg
dec
lods
into
and
jbe
ss
mov
sti
sub
ss
inc
or
outsl
add
js
int
fs
add
je
orl
jo
je
add
sub
jne
addl
dec
jns
mov
ljmp
inc
test
mov
fmull
mov
pop
jg
rclb
out
add
inc
jb
fsqrt
insl
fisttpl
insb
int
push
sub
or
mov
add
dec
cmpl
xchg
mov
jmp
cmpsb
popa
ja
stos
arpl
jne
nop
inc
adc
jo
dec
in
mov
lods
fcmovu
pop
in
pusha
and
addr16
call
cmpsb
xor
pushf
in
inc
mov
lcall
into
ret
inc
cmp
lret
push
out
cmpsb
pop
arpl
aaa
fstpt
mov
inc
insb
xor
jle
lods
pop
ljmp
xchg
xchg
clc
pop
xchg
sub
gs
lds
scas
xchg
mov
mov
rorl
push
mov
es
movsl
inc
out
das
mov
push
jl
cmp
add
mov
add
stc
cltd
insl
enter
sbb
mov
arpl
outsb
rorl
mov
add
jl
insl
or
push
cmp
insl
xor
jo
push
repz
lods
mov
or
das
push
xlat
cmp
xlat
mov
xchg
mov
stos
cmc
test
cmpsl
fldenv
xor
rcl
pop
loopne
mull
cmpsb
mov
dec
mov
xor
data16
movnti
aaa
and
into
stos
mov
push
pop
insb
incb
fisubrs
mov
popf
nop
mov
sub
push
lcall
cli
mov
fdivs
hlt
outsl
cmpsb
push
sbb
jns
ret
mov
cmp
mov
adc
xor
mov
rcrl
xorb
mov
sub
cmp
imul
fcmovnbe
ret
movsl
xchg
xchg
fdivrl
sbb
xchg
popfw
out
and
dec
clc
arpl
outsb
xchg
pop
dec
mov
push
fistl
mov
xor
pushf
inc
pop
jmp
xchg
jnp
mov
fdivp
sbb
jnp
push
movb
lret
pop
dec
fwait
mov
xor
ret
cmp
dec
rcrl
push
push
out
jno
mov
in
dec
mov
movb
loopne
sub
jne
add
cmc
fwait
sub
pop
jl
sub
scas
adc
fsubp
loopne
push
in
sbbb
pop
imull
ja
test
jb
pop
mov
inc
push
adc
xchg
ja
loop
mov
leave
mov
inc
jecxz
push
loopne
adc
subl
loopne
test
mov
in
xchg
int3
cmp
and
sub
adc
cs
aaa
jb
mov
xor
rcrl
xor
jae
jnp
sbb
adc
cmpsb
gs
fidivrl
test
shrb
lds
jae
sbbl
xlat
mov
rcrb
int
or
mov
inc
and
imull
sbb
lret
subl
dec
lods
int3
ret
dec
inc
xchg
mov
movsb
pop
aam
ds
jae
es
adc
xor
fs
or
out
mov
mov
and
fdivl
xchg
nop
pop
add
insb
push
pop
outsl
sbb
sbb
enter
repz
call
iret
out
mov
jl
jecxz
das
fdivl
lds
dec
dec
aaa
repnz
add
inc
push
mov
flds
cwtl
test
inc
mov
hlt
cmp
jb
fbstp
jo
scas
rcrb
outsl
ror
je
hlt
push
rorb
das
adc
rorb
mov
or
lock
cli
aas
adc
and
dec
pop
lods
inc
rcll
mov
fmul
sub
jp
roll
mov
enter
add
cltd
mov
adc
fwait
mov
push
sub
add
scas
fimuls
cwtl
and
fsubrl
xlat
in
add
pop
cmc
pop
push
pop
jmp
iret
pop
mov
and
add
clc
xchg
sbb
cmp
mov
sub
les
push
into
gs
addr16
pop
rcrl
test
add
aad
lods
inc
mov
dec
jne
inc
pop
mov
jns
sub
mov
pop
push
call
rcrb
je
lret
scas
aaa
out
jle
sbb
mov
mov
subb
xchg
xchg
jns
mov
outsb
sub
jp
hlt
fmull
mov
sti
outsl
xor
mov
mov
sbb
inc
push
out
xchg
add
out
sahf
jnp
icebp
arpl
fld
loop
mov
out
loop
push
ret
push
loop
or
das
loope
fs
adc
sub
mov
jb
lret
cmp
dec
lds
js
insb
test
xchg
mov
les
xor
cwtl
add
fbstp
mov
inc
pop
add
icebp
dec
mov
lock
imul
sbb
lcall
pop
lock
cmp
sub
jbe
mov
daa
dec
push
or
jns
cmp
frstor
fldt
pop
mov
sarl
std
jo
push
in
jne
xor
clc
sbb
sahf
addr16
adc
mov
insl
push
clc
adc
jne
xor
pusha
mov
sbb
sub
xor
add
mov
push
push
data16
shll
into
fisttpl
xchg
push
ret
push
mov
xchg
fsubp
cld
aam
push
push
or
pushf
leave
movsl
movsl
mov
push
jno
add
jp
pop
or
sub
jne
add
leave
fisttps
retw
lahf
sbb
jne
cli
mov
pop
cmpsl
js
cli
dec
xchg
and
mov
enter
testl
lcall
inc
xchg
push
adcl
fsubr
sbb
xchg
adc
aas
lahf
stos
adc
inc
mov
dec
popf
movsb
fidivs
das
xchg
pop
mov
jle
and
fistl
ret
pop
jbe
xlat
not
jo
mov
jne
pop
jge
add
imul
movb
ljmp
add
movsl
in
mov
out
sbb
shr
mov
push
jbe
test
jno
inc
cmp
and
pop
iret
jp
or
dec
jo
popa
sub
insb
pop
icebp
jl
movsb
pop
jns
add
push
xchg
sbb
js
iret
cmp
sbb
mov
push
add
cmp
mov
lds
add
and
jecxz
jecxz
test
mov
enter
mov
hlt
loop
insb
cmp
dec
fcom
mov
popa
outsl
fnstenv
cs
or
mov
adc
xchg
in
xchg
or
push
dec
stos
inc
xchg
sub
jmp
ds
xor
out
hlt
lahf
int3
or
repnz
or
sbb
cmpsb
xchg
pop
cmp
fnstsw
mov
sbb
ficompl
or
cmc
ss
mov
jge
or
pop
adc
test
subb
das
scas
xor
push
sub
jb
fsubr
xor
stos
dec
divl
mov
jle
sub
orb
mov
push
xor
lret
mov
rcr
mov
push
adc
push
mov
repz
cltd
outsb
mov
xchg
or
adcb
xor
xor
cmp
add
sbb
dec
pop
adc
sbb
pop
aad
pop
test
shll
push
push
inc
pop
and
mull
dec
inc
jl
mov
dec
pop
mov
and
scas
lret
add
pusha
jge
xor
xchg
fcomps
cmp
lret
clc
jle
mov
cmp
imul
loop
sbb
jo
jle
jae
xlat
mov
aad
pmaxsw
jnp
inc
jb
inc
jle
inc
rorl
or
mov
ror
lcall
xor
lock
fs
fwait
push
mov
dec
xor
pop
ja
out
mov
mov
mov
mov
int3
inc
jmp
test
dec
xchg
xor
ss
add
pop
enter
mov
add
aaa
xchg
mov
mov
jns
adc
pop
push
out
mov
repz
in
mov
int3
xor
xlat
jbe
dec
stos
clc
js
xchg
cmpsl
leave
cmovle
mov
dec
add
dec
imull
sahf
ffree
mov
ret
cmp
scas
jmp
stos
sub
rcll
push
imul
lds
loopne
dec
cmpsb
cli
add
pop
loope
and
outsl
push
mov
mov
cmp
push
and
mov
fyl2x
cmpsl
call
sti
pop
stos
popf
xor
in
lds
xchg
mov
sub
and
cmc
push
cmpsl
mov
sarl
inc
movsb
aam
xor
out
xchg
lock
dec
ds
rcrl
pop
pop
adc
dec
je
dec
cmpsb
push
mov
pushf
lret
add
cmp
inc
pop
add
push
xor
lods
and
test
dec
inc
stos
jge
mull
data16
dec
pop
insl
mov
testb
jp
push
movntq
dec
mov
pop
mov
add
shl
imul
jp
push
stc
clc
push
adcb
mov
aaa
mov
jl
and
les
jno
pop
push
jp
sub
jo
aas
rcll
xchg
rorl
fwait
js
add
adc
jle
add
and
popa
adc
fimull
int3
pop
adc
xlat
cwtl
jg
movsl
daa
dec
cmp
arpl
push
enter
xor
int
inc
movsl
jbe
mov
inc
scas
fwait
xchg
jbe
scas
mov
xor
mov
mov
cmp
mov
push
pop
call
repz
js
test
lcall
rclb
pop
leave
ss
and
fcoml
push
dec
mov
pop
pop
movl
xchg
dec
xor
scas
dec
inc
loopne
mov
inc
dec
add
adc
in
lea
or
mov
jge
inc
sarb
or
add
ja
sub
fisubrl
test
sahf
data16
mov
fnsetpm(287
inc
xor
xchg
jns
idiv
test
rcll
pop
mov
jl
rcll
add
out
push
sbb
ret
jno
movsb
xchg
jmp
pop
mov
imul
outsl
dec
push
push
cld
sbb
adc
loope
cmpsb
pop
call
or
inc
shll
ds
sahf
out
loope
outsb
mov
ds
lock
mov
or
dec
int
sbb
jl
movsb
outsl
or
sub
cmp
out
jg
stos
leave
push
sub
adc
les
jb
arpl
ret
imul
sbb
inc
lock
and
pop
or
into
or
dec
js
dec
decb
xor
ret
or
xlat
loope
adc
mov
fisubrl
sbb
loop
outsl
pushl
fimuls
loop
cmpsb
hlt
sbb
pop
adc
mov
sbb
cmp
in
int3
mov
or
cld
xor
jb
mov
loopne
or
ficomps
mov
addr16
inc
adc
mov
stc
xor
jbe
cltd
mov
cmp
xor
push
push
insl
inc
out
push
std
je
in
data16
int
aaa
sub
push
xchg
xchg
xchg
adc
insb
popf
and
xchg
or
mov
inc
test
jnp
stos
or
divb
pop
icebp
pop
lret
arpl
testl
into
and
repnz
repnz
int3
add
out
xor
push
stc
in
mov
dec
je
sbb
addr16
push
xchg
test
std
cmp
loopne
sbb
mov
mov
mulb
mov
jecxz
push
xlat
mov
pop
cmpl
push
pusha
mov
or
sub
sub
xchg
jl
scas
xchg
mov
cmp
xor
fstps
dec
lret
mov
into
xor
push
int3
test
and
mov
mov
test
repz
ret
dec
rcrb
sbb
mov
lods
sahf
pop
add
pop
jnp
mov
gs
stc
adc
movsb
add
jg
iret
push
cs
test
xchg
scas
xor
inc
lret
sbb
push
stos
push
test
or
push
xchg
mov
es
push
data16
pop
jnp
loopne
sub
jnp
jl
push
or
pop
lcall
push
add
or
rcrb
mov
adc
incb
out
jne
sub
in
out
hlt
cmpsb
aam
inc
in
jnp
lcall
ror
les
or
adc
movsb
outsb
add
adc
je
shrb
inc
adc
xor
adc
lods
xor
jp
in
add
xor
cmp
test
pop
dec
flds
outsl
std
cwtl
fsts
push
dec
xchg
pusha
xchg
jl
maskmovq
notl
sbb
inc
xchg
push
in
daa
jmp
cmc
cwtl
fcomps
adcl
daa
outsl
xor
pop
cltd
jno
and
mov
fbstp
test
sbb
sub
addr16
adc
jae
pop
leave
mov
fbstp
aam
cmpsb
push
xchg
mov
xchg
mov
aas
mov
in
je
pop
push
mov
jne
sub
das
or
pushf
push
push
xor
insl
shl
jnp
pop
fisttps
push
enter
xchg
mov
loop
aaa
into
or
inc
or
xchg
leave
pop
insl
xor
push
jae
mov
stos
mov
adc
mov
and
inc
mov
sub
sub
das
scas
loopne
mov
add
or
mov
testb
je
jmp
adc
lret
mov
stos
dec
clc
inc
pop
mov
pop
rclb
test
adc
stos
jl
and
dec
mov
adc
jge
cmp
sub
pop
mov
mov
bound
sbb
je
and
cmp
pop
das
pop
sbb
mov
int
mov
mov
dec
cli
add
inc
or
mov
ljmp
pop
imul
clc
ss
outsb
out
or
ret
push
pop
xchg
in
cltd
xchg
add
rol
addl
inc
stos
push
mov
insl
xor
jg
dec
pushl
movsb
pushf
mov
push
aaa
sar
or
mov
dec
xchg
nop
mov
jmp
mov
mulb
es
inc
rcrb
add
and
xor
fwait
cwtl
pop
cmp
stos
fadds
adc
mov
push
push
fdivrs
inc
pushw
inc
cli
pop
jp
fidivrl
fildl
out
mov
scas
cld
test
mov
dec
pop
cwtl
cmpsb
leave
cwtl
jmp
fisubl
insb
or
pop
sub
mov
xor
adc
rorb
les
or
addr16
test
es
into
adc
xchg
aas
out
push
mov
and
shlb
sub
decb
sbb
sbb
cmp
push
xchg
int3
andb
push
xchg
test
or
loope
add
add
fld
test
hlt
stc
add
call
lahf
jl
sub
cmp
dec
push
adc
aam
inc
in
mov
jl
pop
cmp
jne
out
std
pop
test
pop
out
fistps
and
push
repz
mov
push
jg
ret
jb
call
xor
pushf
xor
cli
lock
sarl
and
ljmp
fistpll
sub
pop
idivl
dec
aam
aas
mov
idivl
cmpsl
xor
shl
iret
or
out
push
lahf
aaa
mov
adc
adc
ds
lds
insl
mov
inc
idivb
out
pop
cmpl
cmp
incl
nop
es
pop
les
cmp
mov
pop
rorb
jbe
test
mov
insb
pop
lock
jb
mov
jl
gs
sbbl
pusha
inc
jne
sbb
jmp
jae
lods
lock
pusha
fldl
fisttpl
jg
sbb
jp
xor
call
stc
fnstsw
add
jecxz
les
inc
iret
aaa
imul
push
pop
xchg
test
push
lret
sbb
int
stos
out
test
aam
jecxz
mov
xchg
fs
lock
nop
orb
cmpsb
imul
jmp
pushf
push
sbb
dec
int
ret
pop
dec
popa
add
pop
fwait
leave
pop
mov
fstps
cmc
scas
flds
mov
out
sti
push
sub
mov
jo
mov
loopne
push
in
stos
sarb
lahf
inc
fnsave
aas
push
clc
mov
std
mov
mov
fsub
les
pop
dec
gs
out
mov
pop
push
xchg
std
test
adc
into
inc
mov
xchg
out
mov
sbbb
add
in
cld
cmc
push
int
push
test
xlat
sbb
stc
in
outsl
fdivl
in
clc
mov
mov
repnz
pop
fcomip
ljmp
push
pop
jae
cmp
push
pop
and
pusha
sbb
mov
jge
setp
push
xchg
mov
sbb
and
aas
adc
cmp
jo
jb
shlb
js
cltd
add
fs
lods
dec
lea
pop
rolb
push
sbb
pop
movsb
mov
push
and
in
jbe
cltd
push
and
mov
push
outsb
imul
pop
inc
sub
into
xor
xor
jg
lods
xchg
xor
mov
push
and
cmp
ror
scas
or
add
aad
cmovo
xchg
xchg
imul
rcrb
mov
mov
fistpl
int
jg
loop
test
ja
stos
jno
cmp
pusha
inc
inc
fsubp
sbb
stos
sbb
cld
sbb
mov
and
adc
jge
jae
int3
test
push
cmpb
cmp
fs
cli
dec
inc
or
movsl
roll
pop
das
sahf
rclb
adc
push
cwtl
loop
or
jge
xor
cmp
sbb
and
rclb
int3
cli
sti
cltd
mov
xchg
sub
stos
test
mov
add
pop
cmp
sarb
callw
push
sub
fildll
pop
rcrl
adc
and
dec
ret
out
jp
cmp
and
leave
pop
ljmp
and
xchg
out
inc
sti
les
adc
mov
fs
pushf
sti
loop
lret
push
inc
in
xchg
js
pop
push
out
popf
sub
jge
push
xlat
sarl
fcmovnb
call
ss
std
sbb
bound
sti
mov
xor
xchg
daa
sub
jp
inc
adc
push
push
jp
jp
mov
mov
gs
mov
hlt
clc
adc
and
mov
addr16
inc
add
outsl
movsl
mov
cmp
add
loope
add
ret
das
sub
rorb
mov
push
mov
xor
inc
adc
mov
xchg
mov
aad
and
mov
or
and
pop
hlt
inc
daa
adc
jne
push
inc
mov
push
nop
xchg
mov
dec
pop
cmp
in
cmp
xlat
ljmp
bound
psubb
int3
ljmp
xchg
or
push
or
mov
outsb
imul
ljmp
in
mov
lods
jno
lds
test
mov
aam
lahf
sbb
int
mov
int3
rorb
movsb
fwait
inc
mov
jne
sbbb
xchg
inc
mov
mov
cmpsl
ss
shlb
idivb
adc
mov
bound
mull
iret
out
adc
cmpsb
mov
popa
or
mov
fcoml
xchg
mov
jle
dec
push
xchg
xchg
outsb
mov
call
std
xor
push
lret
and
sbb
out
aad
dec
pop
pop
push
add
call
push
mov
repnz
push
gs
insb
push
sub
pop
and
jg
ficoml
leave
popa
call
mov
lods
nop
into
pusha
cmc
loope
sub
inc
and
push
xchg
test
leave
dec
mov
aaa
add
xchg
mov
imulb
sbb
pop
adc
lret
sbb
add
xor
jae
lods
fwait
mov
adc
mov
mov
sub
mov
jae
mov
cmp
out
movb
xor
mov
cmp
xor
jns
cwtl
inc
jle
jl
sub
pop
mov
mov
cmp
sub
dec
imul
jg
jecxz
mov
jbe
std
push
cmp
out
sti
jbe
push
lea
outsl
mov
and
pop
mov
cmc
adc
cmpsb
in
les
mov
ret
add
push
andb
mov
inc
xor
stc
push
lods
dec
jns
sbb
leave
sahf
ja
cmp
mov
pop
pop
sub
and
mov
sub
aaa
stos
stc
mov
cmp
xchg
fbld
inc
fstpt
std
adc
mov
das
addb
pop
xor
lock
and
dec
mov
adc
dec
clc
xchg
cmp
mov
lcall
push
cld
enter
aaa
neg
fwait
les
test
xlat
mov
adc
or
mov
pop
xchg
xchg
mov
jno
fcomi
push
add
mov
cmpsb
lahf
cmp
mov
add
lock
jne
lret
jmp
pop
jecxz
lea
out
pop
idiv
ficompl
push
ret
or
xchg
repz
push
jb
negb
and
data16
mov
mov
in
jmp
adc
inc
xor
fisttpll
dec
stos
adc
outsb
int3
mov
push
ljmp
inc
or
rorb
adc
dec
fiaddl
fwait
in
push
fwait
cmp
jg
jp
push
call
cmp
je
fisttps
inc
ret
push
lock
xchg
xchg
xlat
inc
push
xor
into
add
cmp
rcl
push
adc
mov
xor
sbb
out
lods
ret
lcall
and
add
sub
jmp
bound
les
cs
fisubl
mov
inc
mov
sbb
cmpsb
cs
cmp
add
repz
fcom
ret
std
mov
dec
xor
insb
xor
fsubr
sub
stc
push
addr16
mov
jmp
pop
push
loope
popa
in
push
and
lahf
enter
and
inc
jno
jb
out
mov
rcl
inc
mov
mov
dec
popa
push
mov
lahf
xchg
out
mov
mov
loopne
add
rorl
xorl
rclb
inc
fnstcw
rcrl
fisubl
ret
lret
jns
dec
addr16
sbb
add
jecxz
push
mov
inc
in
push
adc
sbb
daa
je
add
cmp
sub
inc
outsb
sbb
adc
jne
gs
inc
out
push
aas
fwait
into
cs
clc
sbb
cmpb
push
mov
das
loop
push
pop
jne
int
stos
dec
fcoms
les
push
rolb
sub
add
loopne
jo
daa
js
jp
and
sbb
jo
cs
aas
and
test
cmp
mov
lods
jmp
rclb
shll
stos
cmp
add
dec
xchg
pop
cmp
aaa
jb
or
push
xlat
xor
int3
fwait
leave
jns
imul
mov
out
push
andl
cmpsl
ret
cld
mov
add
enter
leave
fildl
mov
jb
cmp
je
jb
push
jl
xchg
arpl
push
outsb
inc
jecxz
mov
sbb
stos
js
test
xorb
pop
xor
mov
sbb
adc
and
push
scas
insl
sbb
inc
mov
push
and
aas
cld
fcmovnbe
imul
pop
fs
fidivrs
add
mov
pushf
ror
mov
rcrb
outsb
jl
mov
sbb
fsubp
push
xlat
pop
cmp
cmc
and
push
fwait
icebp
sub
jb
lock
mov
in
shll
sbb
jge
ror
pop
icebp
shll
jge
inc
mov
ja
mov
aaa
mov
mov
test
dec
xchg
test
cs
cmp
fcmovbe
push
xor
mov
js
fsubrp
adc
adc
les
out
push
ss
xor
ficompl
scas
movsl
shlb
nop
movsl
mov
notl
ja
cmpsl
dec
add
jbe
imul
xor
imul
pop
pop
popa
jbe
mov
sar
outsl
scas
into
pop
int
cmpsl
mov
inc
mov
add
lea
or
xor
add
movsb
shlb
mov
xchg
outsb
inc
aaa
mov
xchg
loopne
outsl
mov
inc
je
sbb
push
adc
ja
insb
xlat
ss
sub
or
jno
jp
mov
and
imul
imul
inc
xchg
cmc
push
add
jp
hlt
mov
aad
jmp
adc
xchg
daa
hlt
ret
jge
ret
pushf
inc
cmpsl
lahf
mov
arpl
xchg
imul
push
dec
out
insl
or
int
adc
das
push
adc
out
stos
add
jg
jp
adc
jae
outsb
sbb
mov
aam
sub
push
pushf
in
mov
popa
cmp
push
gs
mov
ja
lock
push
push
cmp
mov
push
ss
mov
jecxz
and
mov
cli
push
mov
ds
les
sub
pop
inc
or
mov
adc
lcall
xchg
add
sbb
jns
add
int3
mov
add
leave
call
pop
das
incl
dec
repnz
cmp
inc
pop
loopne
insb
sarl
cmp
sub
inc
add
int
aad
in
inc
movl
cmpsl
push
xchg
hlt
lods
adc
movsb
dec
inc
xchg
out
cmovl
fcmovnbe
or
cmc
aad
cmp
pusha
jp
xor
jns
xchg
inc
push
ljmp
inc
sbb
imulb
fs
sahf
rcr
stos
cmp
pop
fs
push
pop
dec
dec
out
ficoml
jmp
xchg
decb
testb
jge
dec
mov
xchg
or
xchg
aam
xor
cld
bound
outsl
xor
dec
sbb
icebp
push
idivl
scas
loop
add
sbb
and
stos
and
rcr
pop
push
or
adc
xchg
mov
adc
addr16
mov
in
test
daa
out
aaa
sbb
xor
sub
inc
cmpsb
repz
sub
les
repnz
and
notl
cltd
imul
cwtl
repz
pop
adc
fdivs
in
xchg
or
jmp
xchg
or
sub
imul
jbe
nop
adc
add
and
pop
lret
inc
sub
jle
les
call
or
pop
pop
mov
xchg
out
inc
add
push
add
mov
add
icebp
loopne
dec
push
je
cli
jp
or
int3
test
sbb
cmp
adc
pop
xchg
pushf
nop
roll
ss
inc
subb
test
stc
adc
add
sbb
ret
jbe
cld
cmp
mov
jle
test
sub
dec
xchg
stos
hlt
mov
pushf
xor
mov
insb
fwait
dec
dec
testb
jns
mov
test
mov
icebp
lret
ja
or
aas
cmp
sbb
aam
push
cmp
or
sub
leave
pop
xor
jp
mov
lods
jne
jl
rcll
jo
in
sahf
idivl
es
dec
jae
cli
mov
insl
xor
lock
pusha
mov
xor
out
jg
mov
mov
add
xor
sub
add
pop
push
icebp
test
out
pop
fwait
ja
push
mov
mov
bnd
roll
jmp
xor
and
inc
int3
sahf
xchg
std
testl
jo
or
or
adc
rorb
or
mov
pop
mov
or
scas
test
iret
ret
std
outsb
push
rorb
xchg
ret
pop
cmp
jle
or
xchg
test
jne
add
ds
pop
add
movsb
mov
aad
mov
xor
fiadds
pop
mov
pop
and
jne
add
xchg
lahf
adc
jbe
out
loope
test
imul
aad
mov
dec
into
dec
xor
fstpt
loope
add
outsl
nop
sub
fcmovnu
sub
inc
inc
andl
adc
xlat
add
and
push
mov
mov
xor
add
adc
xchg
je
dec
outsb
loopne
adc
out
xchg
sahf
xchg
test
inc
xchg
inc
in
dec
cltd
mov
or
repz
rclb
lret
xlat
and
jbe
or
mov
pop
dec
popl
add
mov
jge
or
pop
push
mov
sahf
sbb
loopne
and
dec
xlat
add
test
push
sub
enter
repz
adc
jae
loope
cs
incb
sbb
inc
pop
mov
mov
lock
pop
dec
lret
and
je
adc
loopne
rcrl
lods
cmp
iret
repnz
pop
movsl
or
mov
shl
adc
mov
xchg
sahf
fldl
ja
push
mov
xchg
push
out
cs
sub
out
adc
mov
inc
aas
loopne
je
cwtl
ficompl
push
jnp
push
ja
adc
jns
ret
jg
inc
shlb
clc
pop
push
loope
lret
aas
lahf
aas
in
or
icebp
cmp
xchg
daa
and
aad
jecxz
inc
jo
mov
fildl
jge
adc
xchg
dec
das
and
push
dec
xchg
lret
and
gs
aas
jge
and
divl
pusha
pop
xlat
jge
add
stos
and
aad
ja
jns
mov
out
int3
mov
sti
jb
xchg
out
rcr
sti
xchg
xchg
xlat
daa
adc
test
cmpsl
mov
cltd
mov
jns
out
mov
cli
les
in
jbe
cs
xchg
in
outsb
mov
push
sbb
xor
xor
fisttps
sbb
adcl
inc
pop
enter
inc
inc
push
fs
fmul
jnp
adc
xchg
mov
out
lcall
push
shrl
add
xchg
in
imul
fsub
jecxz
notl
fnstsw
loop
not
jbe
mulb
das
mov
cmp
inc
adc
out
out
cmpsb
pop
aaa
pushf
push
into
hlt
inc
cld
fsubrl
repz
iret
lock
push
dec
rcr
insl
jg
out
adc
js
and
and
jge
fiadds
xchg
ja
lea
fstl
fldl
or
outsb
daa
add
xchg
mov
icebp
xchg
divl
nop
xchg
arpl
cmpsl
mov
inc
in
loop
fldt
mov
xchg
pop
xchg
faddl
in
fists
dec
sbb
dec
gs
dec
adc
mov
mov
xchg
xchg
xchg
ja
cltd
stc
and
incb
das
cltd
sub
out
stc
xchg
lds
lods
add
sbb
mov
or
xchg
or
push
roll
lret
loop
lret
rorl
push
outsl
pop
popf
push
add
int
fistpll
addr16
iret
cli
mov
xchg
push
and
lea
into
jne
jecxz
sub
mov
rorb
int
xlat
xlat
es
xchg
mov
add
leave
cli
int3
rol
mov
xchg
and
into
rcrl
and
pop
shrb
jns
xchg
fcoms
and
clc
fs
xchg
sub
pop
push
loopne
xor
dec
cmpsb
mov
fxch
rcll
fcompl
sub
stc
and
jae
loope
inc
sbb
pop
test
mov
mov
mov
or
mov
fnstsw
rorl
jb
jmp
fs
or
inc
xor
sub
cld
push
and
push
adc
movsl
xor
push
push
sbb
hlt
out
sbb
xchg
pop
mov
mov
mov
bound
sarl
aam
repnz
xor
lds
js
dec
adc
xor
dec
inc
dec
jne
mov
sub
sub
mov
push
pop
jle
cmp
lock
add
xchg
fmuls
sbb
add
push
dec
mov
cmp
lcall
cmp
cwtl
or
aaa
orb
mov
sub
pushf
push
jmpw
or
subb
sub
insl
lods
pop
outsl
mov
mov
rcrb
xchg
ja
cmp
jge
data16
or
adc
xor
nop
jmp
lret
mov
ret
testb
mov
arpl
ret
test
negb
fcmovb
arpl
push
fwait
mov
in
loop
lcall
jmp
push
pop
cmp
xor
in
sub
shll
mov
in
mov
test
out
sti
cmpsb
dec
sub
iret
mov
std
push
stos
push
mov
andl
int3
andl
add
pop
mov
jo
cld
dec
lret
pushf
jge
mov
bound
fs
xor
stos
sub
shlb
or
sbb
cmpsb
xor
add
fsts
mov
adc
outsl
jl
push
int3
sub
adc
es
scas
aad
dec
jns,pt
add
xchg
in
mov
cltd
fucomi
push
inc
je
pop
popa
pop
mov
imul
sub
stos
mov
out
cmpsl
popf
cmpsl
inc
dec
or
pop
sub
imul
and
xor
sbb
cltd
push
loop
es
sahf
imul
clc
adc
mov
or
pop
sub
fisttpll
jp
jmp
jo
and
xor
adc
xchg
sbb
mov
lods
jle
mov
cs
int3
sbb
pop
ss
int3
lret
ja
and
aaa
jbe
mov
xchg
jae
pop
je
mov
mov
mov
xchg
xchg
test
add
repz
and
or
mov
jns
shll
sub
popa
jle
int
dec
push
outsb
push
shll
rorl
fwait
in
adc
cltd
mov
movsb
dec
cmp
fcmovnu
movsl
add
push
out
mov
bound
xor
cmpsb
pop
cwtl
mov
inc
jne
ljmp
jb
dec
and
and
mov
add
fs
cmpsb
adc
push
jge
fnstcw
inc
mov
or
mov
lea
mov
stos
repnz
mov
bound
jne
or
and
loopne
xlat
out
push
or
sub
push
push
adc
into
push
xchg
sbb
cmp
sbb
daa
xor
popa
or
divb
mov
das
push
ds
cmpsl
imul
dec
mov
into
dec
scas
rcll
sbb
xchg
push
sahf
lahf
inc
inc
adc
push
out
pop
sahf
push
lods
xlat
jb
inc
lret
inc
sub
cli
adcb
cmp
cmpb
and
aam
jle
xorb
stos
mov
js
iret
mov
sbb
dec
cmp
add
lahf
add
xchg
sub
lea
aaa
mov
in
mov
xor
cld
dec
popa
andb
xchg
stos
jbe
mov
sub
ljmp
sbb
jae
add
inc
aad
sub
mov
adc
bound
pop
ret
dec
inc
leave
pop
andl
into
push
push
loope
shl
jle
scas
push
fldt
add
jbe
adc
sbb
fs
icebp
mov
popf
xchg
inc
orl
arpl
mov
call
cmp
stos
inc
add
outsl
repnz
movsl
js
pop
movsl
aaa
outsl
fwait
cmp
lock
xchg
cmp
ret
mov
iret
daa
flds
cmc
add
fsubrl
and
cmpl
mov
push
lahf
cltd
shll
xor
mov
out
lods
sbb
sti
cwtl
xchg
enter
push
gs
xor
repnz
sarl
daa
inc
sub
lods
xchg
pop
sbb
pop
xchg
mov
jo
mov
or
aad
jge
pop
sub
push
cld
outsl
mov
scas
outsb
je
mov
popf
shlb
fdivs
fisttpll
pop
clc
stos
pop
dec
inc
fsubrs
and
or
dec
dec
data16
out
in
ss
lahf
dec
ret
mov
in
lds
jns
jne
inc
fisubs
cmp
ss
and
mov
mov
mov
mov
fnstcw
cltd
inc
sti
sar
testb
clc
cld
jg
or
jno
nop
mov
jecxz
test
addr16
clc
adc
dec
sbbb
sbb
test
mov
jge
test
sub
push
repz
in
test
std
jmpw
int3
roll
dec
xor
pop
cltd
xlat
and
mov
pop
clc
gs
cmp
push
imulb
out
js
jnp
insb
nop
jp
stos
ret
mov
push
stos
mov
adc
cli
pop
pop
pop
aad
fld
push
fwait
sub
lock
scas
dec
iret
sarb
dec
xchg
dec
sbb
and
icebp
jb
cmpsb
pushf
sti
xchg
leave
mov
or
cmp
or
leave
mov
add
orl
sbb
movb
cwtl
out
and
push
dec
and
or
push
movsl
jmp
add
xor
lods
push
mov
lcall
popf
fldt
in
jnp
push
out
mov
mov
and
lock
jmp
sti
sub
mov
mov
push
je
lds
inc
mov
push
shrl
inc
sub
mov
int
inc
sahf
inc
aaa
pop
dec
sub
jg
push
fsubrl
xchg
dec
movb
or
pop
loop
jns
cmp
dec
mov
pop
sub
lret
fs
arpl
or
mov
push
mov
imul
mov
xlat
rorl
sbb
inc
push
lock
outsb
inc
sarl
in
jnp
loop
cmpsb
or
jne
repnz
jl
cmpsl
add
pushf
add
or
mov
lcall
daa
mov
or
test
sahf
popa
dec
lds
mov
fcmovnbe
pop
lret
xor
or
pusha
or
inc
in
les
sbb
and
adc
loop
push
sub
jnp
lock
sbb
clc
sbb
mov
fsubl
cmpsb
hlt
cmp
and
add
push
add
lret
push
out
adc
mov
inc
scas
mov
int
mov
mov
mov
adc
and
sub
and
push
mov
lret
jmp
ret
int
stos
adc
adc
icebp
dec
test
sarl
and
xor
stc
add
push
xchg
jge
jg
dec
fdiv
outsl
outsl
comiss
fildll
das
dec
int
imul
push
loopne
dec
sbb
add
aam
fs
fcompl
jg
mov
add
cmp
inc
xchg
roll
daa
mov
dec
leave
cmp
popa
push
mov
adc
aas
mov
dec
xor
test
inc
popa
inc
jbe
loop
or
cwtl
xor
fcmovnbe
xor
js
push
jnp
fs
pop
pop
adc
fmul
dec
stos
pop
jmp
or
or
fsubrs
dec
cmp
dec
inc
jns
pop
adc
in
pusha
or
ret
adc
shrl
or
or
mov
loope
and
enter
push
xlat
mov
popf
movsl
mov
xchg
in
shl
or
and
pop
fstpl
lret
ljmp
popf
clc
int
stos
cmp
loopne
dec
insb
push
hlt
leavew
cwtl
adc
and
call
cmp
and
lret
xor
inc
fs
xrelease
shll
mov
jg
mov
sbb
push
in
out
fsubr
jb
and
sub
out
out
ffree
add
cwtl
sub
in
cltd
sbbb
pop
mov
ljmp
icebp
mov
insl
xchg
das
nop
sbb
mov
aad
or
add
lcall
sub
dec
in
push
push
nop
aad
fwait
js
stc
inc
push
xlat
enter
aaa
je
jmp
stc
fcmove
pop
aas
call
cltd
or
push
xchg
fstl
repnz
xor
outsb
adc
sahf
test
pusha
and
lret
sbb
insl
mov
pop
cmp
inc
mov
or
data16
dec
inc
imul
inc
idiv
xchg
ret
cli
out
xor
arpl
dec
movsb
mov
push
mov
or
test
bsf
fwait
out
cs
sbb
rorb
scas
lret
ja
in
ficoml
outsl
pop
dec
mov
xchg
xlat
negl
rol
pusha
jecxz
cmp
shlb
pushf
shlb
pop
adc
cmp
jns
mov
imul
mov
jmp
push
sub
out
and
movsb
mov
test
cmpsb
jge
sub
xchg
inc
stos
or
push
orl
inc
iret
test
lcall
loop
pushf
sahf
mov
add
or
jne
je
cmp
fwait
out
aaa
cld
mov
sub
mov
push
jnp
lret
pop
or
jmp
cltd
jo
test
inc
das
push
adc
in
pop
pop
loop
push
fldl
pop
cmpsb
shr
sub
test
inc
sbb
lea
xorl
xor
dec
inc
rolb
stc
jmp
pop
shlb
cmp
push
test
jge
cmp
cmp
add
inc
sub
ljmp
test
rorb
test
std
mov
mull
out
add
push
mov
out
inc
mov
sbb
jno
out
pop
jmp
cmp
movsb
pop
les
sbb
adc
ret
ret
mov
ret
stos
jmp
movsl
test
test
sub
xchg
lret
inc
inc
mov
lret
js
adc
icebp
inc
cmp
ret
femms
test
cmc
sti
pop
jbe
ljmp
sub
xchg
sub
lret
mov
fwait
xchg
cli
pop
cwtl
cmp
cld
lea
inc
mov
stc
test
xchg
mov
icebp
inc
push
sub
dec
adc
sub
mov
dec
insb
sbb
jge
and
outsb
outsb
cmp
cmpsb
pusha
pop
push
in
andl
xchg
push
mov
jl
jae
jae
jle
faddp
stos
lods
lods
loopne
push
gs
or
aas
lahf
and
test
cmp
aas
in
push
int
sbb
pop
movaps
icebp
push
pop
fldcw
jl
mov
xor
dec
scas
int3
imul
mov
leave
jle
adc
das
clc
movsl
in
mov
xchg
add
or
movsb
mov
ret
sbb
xchg
push
lds
jecxz
pop
pop
aaa
cmp
into
hlt
imul
movsb
icebp
push
xchg
mov
add
mov
jns
xor
inc
push
aaa
push
dec
loopne
jge
sbb
into
jecxz
or
aaa
rcll
jne
mov
cmp
push
fiadds
jle
sbb
stc
out
mov
sub
jb,pt
mov
or
ss
xchg
adc
insl
dec
and
ficoml
jne
test
addr16
mov
dec
jb
mov
xchg
aas
addr16
adc
dec
sub
mov
jo
sbb
scas
rorl
xchg
mov
cld
das
sahf
push
inc
xor
shrb
adc
dec
mov
or
in
push
std
dec
loop
sbb
mov
leave
fld
scas
xlat
cli
and
dec
fldcw
aaa
inc
cmp
ss
cmp
scas
mov
fs
cmp
movsb
lea
in
in
sti
inc
mov
pop
adc
mov
pusha
bound
sub
pop
out
mov
dec
repnz
fcompl
outsl
pop
int
jbe
or
ret
push
jp
lea
pop
lcall
ss
dec
out
cmp
lret
and
jge
ljmp
les
aad
testl
stos
test
shrb
fs
js
sahf
xor
mov
sti
mov
aaa
xor
lods
and
hlt
push
pop
pop
insl
idivl
sub
jbe
cvtps2pd
leave
lock
enter
rcrb
adc
xor
sbb
orl
ljmp
mov
cmp
out
pop
dec
mov
and
daa
mov
add
js
shll
mov
gs
mov
testb
mov
shl
cmp
and
push
lock
xor
out
inc
int
dec
adc
push
xor
adc
leave
out
in
lahf
iret
mov
inc
movsl
addr16
ds
loopne
test
rcr
addb
xchg
xchg
mov
push
and
in
add
inc
adc
pop
sbb
push
mov
mov
push
scas
inc
inc
mov
cmc
sahf
adc
sub
popf
adc
cs
lods
dec
int3
add
sahf
imul
shl
lea
js
mov
pushf
jecxz
xchg
mov
hlt
push
sub
sub
xor
jae
call
and
stc
and
mov
sub
out
xchg
loope
jae
adc
pop
inc
les
sarb
into
lret
add
notl
xchg
push
xchg
and
arpl
push
push
and
lock
loopne
sbb
imull
mov
xor
cmp
lds
mov
adc
mov
in
imul
and
sub
je
pop
adc
loope
je
sbb
sbbl
jecxz
mov
xlat
cld
outsl
pusha
jmp
cmpl
xchg
mov
mov
cmpsb
test
sbb
movsb
in
cmp
jl
sub
push
and
adc
xchg
dec
cmp
dec
xchg
out
call
gs
push
imul
jne
mov
dec
cwtl
nop
fldt
and
popf
xchg
mov
aaa
gs
mov
inc
jmp
cmp
lods
loopne
or
rcll
pop
das
xchg
nop
add
popf
repnz
pop
mov
mov
or
push
sbb
push
pushl
cmp
adc
shl
stos
jmp
jecxz
daa
fcmovbe
xchg
mov
mov
xchg
lock
push
adc
mov
pushl
pushl
mov
or
xchg
sub
mov
je
or
gs
repz
push
aaa
lea
dec
pushf
sub
cmpsb
insb
push
mov
pusha
pop
adc
bound
cld
jbe
push
pusha
lds
scas
in
and
pop
cwtl
inc
lcall
inc
ds
jmp
nop
jp
out
lods
xor
lds
push
add
xor
push
push
arpl
inc
adc
sbb
mov
ss
inc
scas
lods
sbb
mov
mov
rorl
mov
and
rdpmc
fcoms
sbb
jae
lea
inc
mov
mov
movq
cmp
fistpl
in
sahf
xlat
dec
fidivrs
test
and
adcl
popf
adc
movsl
lea
icebp
ja
mov
lret
xor
call
push
jecxz
xor
xor
or
and
jno
clc
push
and
cmp
pop
sub
and
enter
mov
shrb
dec
jbe
sub
addr16
loopne
dec
mov
fs
pop
jle
and
xchg
xchg
jl
and
sahf
sbb
adc
adc
es
push
jnp
insl
ss
dec
jmp
test
dec
xor
xor
mov
push
push
sbb
cmpsb
sub
repz
stos
jb
je
ret
dec
xchg
fcoml
test
repz
in
popf
mov
mov
adc
neg
push
ret
test
inc
outsl
into
loop
inc
test
lret
xchg
ds
shrl
sbb
out
pusha
or
stc
or
jb,pn
pop
leave
adc
fdivrs
lea
lcall
fiadds
sbbb
inc
sub
pop
pop
sahf
test
ja
stos
xor
mov
jo
outsb
xchg
inc
shll
sub
push
xor
repz
xor
mov
sub
pusha
sahf
in
xor
inc
ret
dec
sbb
jb
test
inc
test
jne
and
cltd
ljmp
movsl
push
inc
adc
rcr
fmulp
ret
stos
addl
lret
adc
and
jge
mov
pop
mov
xchg
roll
lea
cmp
sbb
mov
inc
sub
mov
pop
push
addr16
mov
fcmovbe
out
mov
lret
or
adc
or
dec
adc
clc
jecxz
int
ss
das
pop
lea
add
mov
jo
pop
adc
adc
mov
jle
inc
std
pop
fisubl
emms
jne
xchg
stc
jge
cmpsb
pushf
pop
jmp
loope
outsl
mov
ds
push
daa
pop
jnp
leave
scas
and
dec
and
icebp
dec
ret
pop
cmp
push
sbbb
or
mov
sub
xchg
int3
lcall
cmp
das
pushf
mov
mov
setne
inc
pop
decb
cmc
test
jbe
add
into
pop
push
call
jmp
fstpt
push
lock
cmp
xchg
popf
imull
cli
stos
mov
cwtl
pop
icebp
out
inc
jmp
stos
cmc
mov
enter
dec
jl
mov
lods
stos
dec
rcr
pop
not
jl
arpl
in
push
jb
mov
sub
addr16
pop
dec
pop
xchg
add
mov
lcall
jp
pushf
jl
outsb
aas
fnstcw
lahf
lods
sub
insb
xor
mov
ja
sbb
lods
xchg
pavgb
dec
mov
imul
enter
add
sub
mov
xchg
in
or
test
mov
mov
pop
push
sub
cld
ffreep
into
ficoms
fbld
mov
adc
sbbl
in
dec
xor
pop
xchg
rol
lods
xor
gs
mov
out
sbb
fsts
mov
clc
pop
dec
lcall
pandn
xchg
adc
popa
jns
lods
or
js
sar
push
jecxz
cmp
inc
mov
dec
pop
rorb
adc
or
dec
ss
xchg
in
insl
scas
pushf
test
mov
fildl
sub
mov
cs
rcr
xor
pusha
mov
mov
in
movsl
aad
paddq
jl
ja
dec
and
jae
push
cmp
outsb
cli
jnp
mov
mov
movsb
ja
pop
and
data16
pop
pushf
add
xchg
cltd
pop
xchg
mov
xor
mov
aaa
cmpsl
mov
sbb
push
pop
loopne
test
dec
add
adc
mov
push
mov
add
dec
lds
testl
popf
outsl
out
movl
push
inc
idivl
out
insl
xor
dec
sub
out
cltd
jge
mov
mov
and
pop
repz
clc
stos
sub
roll
jno
ds
or
sarl
repnz
lahf
xor
out
outsb
rcr
push
jp
xor
dec
popf
cmpsl
inc
push
push
pop
ror
xchg
xorb
and
xchg
aas
push
test
das
pop
xor
dec
or
out
insb
out
daa
mov
push
mov
mov
xor
pop
das
negl
xchg
sbb
pop
repnz
rcll
cmp
or
out
daa
sub
mov
test
imul
mov
pop
jno
push
fidivrs
pop
mov
pop
xchg
pusha
hlt
aas
jecxz
and
aas
sbb
and
mov
cmpsb
xor
mov
int3
adc
mov
cmp
insb
lret
xlat
and
pop
pop
lret
imul
cmp
ret
nop
sbb
cmp
jmp
cmp
rorb
leave
fcoml
mov
push
std
ds
mov
mov
jmp
js
aam
push
and
rcrb
mov
add
les
test
dec
mov
jl
mov
fdiv
pop
sbbl
test
pop
xchg
mov
add
cmp
jle
adc
movups
adc
mov
sbb
addb
xor
fldlg2
shll
fists
repnz
push
and
sub
fistl
dec
aad
xchg
adc
mov
aam
xchg
insl
mov
adc
ljmp
shl
fs
push
dec
shld
inc
lret
mov
and
in
mov
imul
rol
inc
xor
stos
dec
lret
pop
in
inc
leave
xlat
jbe
push
insb
jnp
insl
js
vmread
pop
add
jno
sub
popf
lcall
mov
mov
pop
out
cmpsb
movsl
mov
in
ret
jg
imull
leave
ror
std
add
pop
dec
daa
push
sahf
mov
inc
pop
out
in
adc
sub
aam
sub
scas
aas
cmp
out
daa
sarl
mov
ret
movsb
aad
push
push
dec
jbe
adc
aad
hlt
pop
xor
mov
and
lea
xor
xchg
xchg
dec
lods
mov
xor
xchg
imul
lcall
push
pop
daa
movb
leave
ret
scas
nop
xorl
loope
sbb
fisubs
sub
add
inc
out
lcall
cli
jmp
lods
adc
xor
pusha
stos
sub
and
dec
xor
mov
mov
xor
dec
pop
sub
sub
xor
je
mov
lret
or
adc
cmp
and
adcl
xor
addr16
and
jae
cmp
mov
fs
cmpsl
popa
jecxz
jnp
cmp
pop
pop
mov
ficomps
and
push
enter
movsl
add
adc
repnz
cli
pop
dec
aam
xor
mov
mov
jno
add
push
in
cmp
mov
scas
int3
loop
push
lea
sbb
cli
dec
inc
std
mov
test
xor
pop
sbb
rorb
loope
mov
aaa
data16
arpl
std
sbb
pop
mov
addr16
xorb
xchg
mov
fwait
pop
pop
jno
mov
ds
ror
mov
mov
jecxz
mov
sbb
js
mov
mov
adc
dec
pop
ret
xchg
ja
and
dec
push
xchg
mov
jb
ret
dec
mov
xor
fdivl
loope
pop
cmp
inc
dec
and
mov
ljmp
add
jbe
mov
rol
add
xor
inc
hlt
lods
lds
ljmp
movsl
adc
repnz
or
in
push
repz
and
hlt
mov
loopne
jno
inc
pop
jne
push
cs
lret
fwait
pop
mov
test
dec
and
pop
scas
and
xor
jno
inc
or
sub
stc
gs
ficoml
mov
daa
sub
inc
rolb
xchg
inc
mov
mov
in
fwait
enter
lcall
push
sub
push
sbb
rol
push
call
push
repnz
sbb
jl
test
daa
cmpsb
mov
adc
insb
sbb
js
enter
adc
das
adc
or
jae
cmpsb
les
cmp
lcall
push
je
shl
aas
das
mov
push
lret
sti
aam
add
leave
dec
loop
cltd
sbb
dec
push
out
dec
incb
and
cmp
iret
sbb
insb
sbb
sub
in
in
jmp
sbb
adc
fimuls
imul
jl
jno
and
movsb
mov
shlb
mov
rorl
repnz
and
cmpsl
sbb
mov
xlat
cmp
test
pop
mov
outsl
or
jle
push
xor
test
mov
mov
pop
add
mov
push
push
pop
out
or
test
push
xchg
jae
mov
dec
push
sti
mov
clc
inc
ret
rorl
sub
jb
into
fldcw
inc
ds
leave
hlt
iret
lea
mov
stc
sub
add
jp
push
out
adc
fnsave
and
or
gs
sbb
lcall
orb
and
and
mov
dec
add
test
mov
xchg
subb
adc
jg
icebp
dec
add
dec
pop
es
mov
xlat
fdivrl
sub
mov
push
or
test
icebp
int
in
jmp
inc
or
test
xlat
sbb
call
sub
mov
or
dec
ljmp
xlat
jmp
les
sub
mov
pop
mov
jg
in
adc
dec
cmp
cli
mov
imul
jno
dec
or
test
sbb
loope
lret
fsubl
cmp
movsl
sbb
lret
addr16
repnz
and
sub
and
call
sub
xor
out
add
pop
xor
repnz
adc
iret
pop
sub
test
push
shlb
pop
inc
rcrb
flds
dec
push
mov
dec
in
dec
into
push
push
mov
icebp
and
daa
jb
jl
fistpl
mov
add
out
xor
cmp
adc
loope
addr16
mov
imul
mov
adc
dec
cmp
lds
push
pop
ja
pop
lcall
xchg
mov
test
jg
sbb
dec
sub
lahf
add
fsts
sbb
sub
dec
xchg
arpl
roll
ljmp
jle
mov
pop
insl
in
jg
sbb
sub
stc
or
sahf
arpl
mov
mov
lret
pushf
inc
in
lods
sbbl
mov
push
ret
out
ja
mov
mov
mov
sub
sub
pop
push
push
int3
imul
pop
orl
out
aas
sbb
js
mov
inc
sbb
push
inc
cmp
and
je
call
adc
sub
pop
fdivrs
leave
pop
or
cmpsl
pop
pop
cmc
outsb
dec
push
cmp
mov
mov
mov
out
cwtl
imul
dec
mov
xor
xchg
pop
push
loope
xlat
fwait
jle
repnz
add
test
mov
and
inc
fstps
popf
scas
cli
pop
rcrb
lahf
ret
push
push
and
icebp
jge
inc
mov
les
jg
xchg
fisubs
fsub
fadd
xchg
mov
repz
pop
andb
in
mov
inc
insb
cs
mov
sbb
outsb
lods
sarl
mov
jmp
out
je
cmp
xor
lods
cwtl
xor
in
or
pop
nop
popf
cmpsb
sbb
movsb
pop
test
xchg
test
jo
repz
mov
add
cltd
rcll
add
or
push
dec
adc
dec
jnp
jns
xor
test
mov
jae
sub
cli
aam
rorl
sbbl
movsb
add
jecxz
leave
insb
lods
cmp
xchg
arpl
arpl
jae
jb
dec
pusha
and
popf
mov
out
xchg
bound
mov
xor
xchg
xlat
push
fstl
js
or
mov
cmp
push
sbb
insb
cmpsl
mov
push
call
mov
outsl
mov
cmp
int3
mov
icebp
std
lret
je
push
outsb
sbb
xor
pop
add
sbb
lock
ja
ds
data16
lcall
sbb
push
mov
cmp
jb
fs
cmpsb
xor
mov
or
js
push
lock
dec
mov
stos
fistpl
xchg
push
fcom
push
enter
mov
xchg
pop
test
xchg
lds
mov
xchg
movsl
or
stos
lods
jmp
ret
dec
mov
ljmp
in
and
jnp
push
sub
add
insb
scas
mov
mov
out
pop
call
push
mov
xchg
jae
or
data16
mov
sti
mov
mov
out
enter
ds
cmpsl
dec
or
adc
fstl
fnsave
or
xor
jbe
jmp
out
data16
enter
inc
dec
sbbl
xchg
xchg
and
mov
les
addr16
xor
fistpl
push
mov
sub
icebp
into
aas
bswap
mov
out
push
pop
arpl
cmp
mov
cld
jle
outsb
jmp
sbb
pushf
cmpsb
adc
rcll
mov
mov
jg
dec
xor
pusha
pop
out
cmpsb
pop
fdivr
daa
ja
xchg
sbb
out
xchg
cmp
test
in
or
mov
repz
js
dec
push
lods
movsl
addr16
fwait
push
mov
jb
sbb
das
mov
lds
xchg
xchg
test
fldenv
inc
mov
mov
out
test
or
cmp
clc
mov
or
xchg
sahf
int
mov
pop
push
loopne
mov
xchg
inc
mov
icebp
ret
xor
xor
adcb
push
arpl
xchg
enter
fists
or
add
cltd
scas
sbb
lcall
sub
fcomps
pusha
ss
or
arpl
xor
sub
shll
add
arpl
jg
mov
orl
push
add
insl
inc
std
mov
ja
shrl
out
and
pop
test
jne
fldt
pop
or
fcoml
jecxz
mov
cmpl
jmp
and
fnsave
push
rolb
sub
sub
fnop
fdivrl
jle
or
adc
js
addr16
or
sub
push
mov
xor
pop
inc
outsb
loope
mov
pop
in
inc
ja
fwait
mov
sbb
loope
outsl
xor
sbb
jnp
daa
in
inc
lahf
lea
push
stos
sahf
lods
dec
sqrtps
or
jle
inc
pop
shlb
xchg
push
test
cld
cmc
lret
faddl
adc
incl
adcb
std
mov
pop
pmaxsw
cld
sahf
cmp
sahf
loope
mov
sbb
imul
push
call
lods
rcll
inc
popa
ret
dec
incb
mov
cld
xor
into
xchg
sbb
and
xorl
sbbl
pop
pushf
lcall
sub
cwtl
cmpsb
cwtl
cmpsb
aaa
pusha
ljmp
cmp
pop
adc
stc
cli
adc
hlt
stc
insl
jle
loop
cmp
into
pusha
cmp
hlt
push
fucomp
sub
mov
cmp
mov
push
sbb
fwait
popa
xchg
adc
mov
jbe
loop
xlat
movsb
movsl
jo
push
stc
jns
roll
test
mov
push
decl
iret
xchg
ss
fldt
in
cwtl
adc
mov
repz
cmc
xchg
roll
mov
fs
outsl
rcll
jne
lret
jne
dec
inc
leave
aad
mov
cld
add
sarl
aad
iret
dec
jno
mov
sbb
lret
gs
out
push
dec
mov
mov
out
es
testb
imul
dec
mov
enter
jnp
jnp
pop
dec
cld
pop
aas
push
pop
sub
inc
push
push
mov
stc
ds
call
pop
outsb
xchg
push
dec
insl
rorl
adc
loop
mov
mov
test
mov
movsl
jnp
mov
and
jnp
aam
xchg
jmp
xchg
cmp
out
pop
les
or
push
mov
inc
bound
add
out
mov
add
pop
cmp
rolb
in
sbb
adc
scas
cld
xchg
mov
loop
clc
lahf
mov
loope
xor
dec
testl
cmp
cmp
bound
scas
add
lahf
lods
aam
std
fsubrs
inc
movsl
pop
push
or
repnz
fisttps
icebp
pop
xor
and
cltd
mov
or
loope
xor
xor
cmc
jmp
add
jnp
inc
sbbl
fdivr
popf
loop
dec
arpl
fnstsw
sahf
and
cmp
pop
xchg
ljmp
clc
out
addr16
lock
xchg
das
pop
popf
or
sahf
mov
jmp
inc
mov
aad
mov
dec
insl
cmpsb
push
xchg
std
and
lret
adc
xchg
pop
sbb
shll
push
scas
xchg
inc
and
dec
and
loope
xchg
fisubrs
xchg
aas
lcall
negl
addr16
testb
es
push
jns
mov
sbb
mov
sub
mov
mov
and
leave
cmp
xrelease
ds
mov
pop
cmp
add
loop
cmp
mov
cmp
cmp
rcrb
jae
js
sbb
mov
xchg
insl
push
sbb
inc
enter
arpl
cmp
lret
sarl
xor
mov
mov
fidivl
rol
arpl
scas
xchg
clc
fisubl
xor
vpand
mov
or
mov
ficoml
sbb
sbb
mov
xchg
cmc
sub
pop
dec
and
jge
mov
sahf
cmp
ret
aam
repnz
xorb
test
jne
arpl
jne
xor
ficompl
sahf
inc
mov
jns
es
mov
jge
add
je
pop
mov
jo
pop
add
insb
push
pop
adc
dec
in
insl
inc
in
ljmp
xor
in
sub
dec
sarl
or
cli
frstor
jle
pop
repnz
ds
bound
xchg
icebp
lods
in
test
enter
out
jle
mov
mov
loope
ret
pop
jbe
dec
addl
inc
out
cmp
call
out
jne
nop
shll
sub
and
out
shlb
inc
out
mov
icebp
push
pop
pop
jle
pop
inc
and
cli
notb
js
adc
loope
loop
icebp
imulb
bound
adc
sub
add
adc
sub
lods
leave
jmp
fisttpl
mov
test
cmpsl
aad
gs
sbb
hlt
mov
lahf
mov
push
jle
jmp
pop
mov
lods
jmp
or
sbb
lods
sub
out
cmp
repnz
dec
sub
or
add
ja
movsl
add
lcall
or
ja
or
je
jno
mov
fiaddl
outsb
pushf
repnz
cmp
xor
jbe
in
fisttps
pusha
repz
sub
mov
xor
ret
push
sti
lret
fs
out
js
sahf
cs
push
pop
sarl
xor
cld
test
inc
enter
loope
xchg
mov
repz
mov
jle
jmp
xor
ja
icebp
rorb
mov
loop
pusha
mov
jg
nop
add
cmp
mov
mov
xor
pop
push
cmc
pop
outsb
xor
add
ja
gs
imul
jns
jo
and
mov
rcll
inc
movsl
mov
mov
mov
aam
or
test
sbb
adc
int
mov
je
std
cmp
fidivrl
mov
hlt
inc
xor
mov
sub
stc
or
pushf
sbb
call
pop
sub
pop
loope
add
insb
int
push
sub
iret
and
push
sbb
xor
jecxz
sahf
mov
jg
loop
enter
xchg
andl
repnz
jnp
into
xchg
mov
lret
mov
pushf
shll
push
das
push
inc
sarb
pop
into
push
or
loopne
movups
shr
lahf
ja
mov
aaa
jmp
fstl
adc
shr
push
aam
xlat
pop
inc
push
sub
fxch
in
jb
nop
shlb
push
js
scas
pop
rorb
mov
lret
cmp
cmp
sbbb
outsb
je
inc
sbb
xchg
mov
out
mov
pop
dec
push
xor
pop
jnp
add
sub
dec
jge
imul
mov
lds
mov
mov
hlt
pop
add
add
xchg
and
sbb
ret
jecxz
movsb
ret
sbb
pop
xchg
or
mov
pop
cmc
and
loop
sbbl
int
jns
jbe
bound
or
mov
test
push
ja
mov
pop
fistpl
out
imul
mov
out
lock
sub
ficomps
inc
sti
pushf
jo
js
and
loope
ja
leave
xchg
test
sbb
jo
out
cmp
mov
xchg
pop
sbb
rcrb
in
cli
push
pop
cld
fstpt
ret
xor
in
push
rcl
out
push
clc
out
push
pushf
dec
iret
clc
clc
mov
enter
cltd
je
mov
mov
pop
push
xchg
dec
inc
add
ja
adc
aad
cwtl
push
out
pop
and
xchg
xor
ja
xchg
ret
cmp
test
js
in
mov
jecxz
mov
loop
out
inc
cmpb
loopne
rolb
mov
adc
pop
push
and
loop,pn
sub
cs
call
imul
mov
mov
enter
out
mov
mov
adc
cmpsl
mov
jnp
xor
repnz
mov
cmp
iret
xchg
mov
mov
dec
js
add
pop
enter
push
pop
sahf
jp
cltd
or
push
lds
sbb
adc
daa
iret
daa
mov
icebp
cmp
xchg
pushf
rcrl
cmc
stos
icebp
xor
out
out
je
roll
loopne
shrl
inc
jne
sub
fidivrl
popa
or
sub
out
dec
fsts
add
std
cmpsl
or
pop
sub
pushf
test
out
daa
mov
dec
mov
or
shll
and
gs
xchg
xchg
out
mov
mov
lock
jno
mov
jge
jns
add
push
fadd
sbb
add
cmp
in
dec
je
inc
xor
loope
loope
and
push
xlat
loop
sub
stos
movsb
pop
incb
and
bound
jb
dec
push
mov
and
dec
lock
pop
inc
scas
imul
or
in
pop
xor
nop
pop
push
fadds
das
mov
inc
in
pushf
xchg
lahf
jo
loope
dec
or
push
in
insb
mov
mov
shr
hlt
jno
push
ljmp
aaa
sti
pop
js
mov
in
dec
or
lds
inc
imul
into
rorb
ret
in
jp
xchg
mov
inc
aaa
jne
mov
xor
sub
dec
inc
inc
cwtl
lahf
jg
lods
inc
sarb
inc
cltd
jns
out
xor
cmp
dec
pop
cmp
inc
add
fnstenv
pop
mov
mov
mov
jle
push
adc
jge
sar
mov
fsubrs
and
push
cs
out
int3
inc
fcmovnu
je
sub
cmp
push
inc
mov
or
shrb
jmp
jmp
in
fwait
out
inc
rclb
outsl
mov
xchg
icebp
add
ret
push
loopne
stos
push
mov
cmp
xor
loopne
cmc
jno
out
idivl
pop
arpl
xorl
lods
test
xor
mov
and
lahf
stc
test
addr16
sub
lcall
ret
and
mov
fidivs
xchg
pop
push
xchg
xor
lret
xchg
stos
add
ds
cmp
inc
test
mov
les
sbb
icebp
push
movsl
push
leave
loop
lret
lahf
repz
nop
push
cltd
jb
hlt
aam
es
stc
lock
adc
pop
add
cmpsl
test
adc
or
mov
in
mov
incb
enter
nop
out
cmp
xchg
pop
test
cmp
inc
xchg
dec
test
sahf
sbb
push
or
mov
les
add
mov
mov
sti
and
out
mov
arpl
xchg
sub
fwait
mov
insl
push
ret
sbb
or
test
dec
mov
cmp
sbb
test
adc
shr
pop
fnstcw
addr16
jge
ror
xchg
inc
pop
mov
out
or
pop
subl
ja
adc
xchg
and
ret
sbb
lock
in
inc
scas
cmpsl
std
fdivrp
insl
fxam
dec
push
test
cld
bound
icebp
incb
pop
xchg
orb
test
call
orl
or
mov
in
outsl
fistps
xchg
scas
sbb
movsl
cwtl
sbb
stc
jmp
mov
jns
cmp
movsb
xor
imul
pop
aaa
lcall
cmp
xchg
dec
lea
jne
shlb
jae
outsl
cmpsl
xchg
pop
aaa
xor
dec
pop
scas
cmpsb
fimull
bound
lret
mov
and
pusha
mov
ret
sub
inc
xchg
neg
lcall
pmulhuw
cmp
test
pop
xorb
stos
push
fs
mov
mov
ja
or
jae
or
and
ret
push
out
sub
mov
mov
inc
imul
mov
and
inc
out
add
fs
mov
nop
inc
cmpsl
mov
movb
ss
outsl
pop
mov
add
loopne
mov
push
mov
loopne
scas
push
sbb
mov
pop
popf
push
xchg
xchg
movsl
fiaddl
pop
idiv
add
jbe
addr16
pop
push
sub
lods
lods
ljmp
jno
sbb
gs
pop
cs
mov
dec
push
mov
push
imul
sarl
or
add
shlb
sub
test
mov
fwait
cmpsb
mulb
test
push
or
dec
jno
push
popa
push
cmp
inc
inc
lods
xchg
mov
xor
and
shlb
lret
xchg
push
rcl
adc
movsl
mov
mov
shl
push
and
icebp
in
or
pop
ljmp
movsb
mov
xor
pop
jns
jge
into
addr16
jb
sbb
clc
popa
mov
jae
rclb
mov
inc
mov
mov
cs
push
mov
das
popf
xor
jp
fbld
or
les
mov
mov
hlt
and
inc
fmuls
fcompp
aad
push
fdivrl
mov
ss
and
fstl
sbb
xchg
sbb
inc
push
or
jnp
xor
sti
xor
mov
dec
icebp
mov
sbb
sub
ds
iret
jl
pop
and
and
subl
mov
in
daa
or
inc
xchg
inc
xchg
addr16
in
call
sahf
dec
je
cs
xchg
mov
jns
ret
aam
lcall
inc
dec
mov
dec
mov
xchg
mov
dec
daa
imul
repz
pushf
xchg
stos
and
ret
addr16
xor
testb
bound
xchg
sbb
mov
mov
sub
js
xchg
sbb
sub
rorb
lods
std
pop
incl
gs
cld
pop
pop
in
stc
out
sub
push
fimull
inc
jne
jl
in
dec
std
xchg
sbb
mov
ret
fists
out
jae
push
loope
mov
push
frstor
push
movsb
inc
pop
addr16
push
hlt
cli
mov
aad
inc
pop
push
push
test
jns
movsl
mov
dec
int
xchg
rolb
dec
mov
and
jl
jae
pop
test
ret
xchg
sub
xchg
mov
push
mov
xchg
pop
ret
cwtl
test
cs
ljmp
lahf
hlt
xchg
test
pop
clc
add
dec
out
cmp
inc
rclb
sbb
lea
mov
daa
sub
int3
add
std
aaa
in
scas
scas
shrb
pop
movsl
pop
mov
pop
xchg
in
ja
lock
test
sbb
mov
mov
out
push
ret
nop
mov
ja
mov
icebp
jmp
xor
or
or
pop
adc
mov
stos
mov
ss
idivb
sub
push
cli
les
repz
lcall
test
cmp
stc
add
ror
and
push
icebp
add
enter
pop
leave
lcall
sahf
jb
clc
iret
loope
fsubl
cmpsb
cmp
lret
mov
mov
lcall
fnsave
add
sub
add
or
xlat
repz
sub
testl
incl
xchg
cmpsb
and
hlt
cmp
mov
fiaddl
push
or
jmp
repnz
add
fs
jmp
dec
dec
int3
pop
mov
out
movsl
dec
xor
mov
orb
jmp
lock
and
lcall
mov
fimuls
and
test
xor
scas
pop
sub
aad
adc
pusha
sbb
mov
icebp
test
fisttps
outsl
cmp
dec
mov
mov
inc
pop
inc
push
adc
cmpl
or
jo
stc
repz
push
and
and
or
inc
add
dec
push
cmc
push
lahf
pop
cs
jne
shl
push
xor
mov
cmp
sub
add
inc
repz
add
xchg
sti
and
ljmp
cmp
dec
lods
int3
xor
daa
jnp
data16
es
add
jns
mov
mov
jno
js
and
adc
or
sub
je
jmp
xchg
scas
dec
jecxz
test
and
dec
mov
mov
xor
mov
sub
stos
mov
mov
rcrl
mov
and
mov
push
adc
add
lods
mov
aad
ret
push
sahf
mov
jb
aam
ja
fadd
and
psllw
mov
scas
movsb
xor
push
mov
mov
rcll
or
lods
jl
frstor
xchg
je
ds
pop
outsl
into
sbb
push
inc
fimuls
stc
jbe
add
dec
movsl
es
leave
or
push
stos
adc
fidivl
mov
fldt
lret
mov
mov
pop
mov
sub
mov
repnz
in
jne
xor
mov
adc
adc
inc
or
jecxz
and
scas
mov
mov
push
repnz
pop
and
imul
xchg
sub
jnp
ret
outsl
add
idiv
adc
les
mov
push
data16
scas
cmpsl
jbe
loope
subl
dec
or
lcall
add
jno
or
lds
xchg
cmpl
xor
into
sub
out
sub
pop
push
add
sbb
movsl
fdivl
cli
inc
mov
nop
mov
divl
bound
sbb
pushf
xor
sahf
mov
pop
or
mov
pushf
add
push
sub
aam
ror
mov
jnp
pop
les
movsl
mov
jns
je
or
bsr
xchg
cmpsl
cmp
andb
lock
push
roll
jmp
push
lahf
xchg
iret
cmp
xchg
sub
fs
icebp
mov
jno
mov
mov
cmp
inc
mov
mov
sbb
clc
pop
xchg
aaa
push
icebp
mov
sar
clc
sbb
mov
test
fisttps
sub
pop
jno
cmpsl
xchg
mov
movsl
jecxz
pop
mov
sbb
in
cmp
adc
cltd
andb
adc
sbb
push
xchg
stc
xlat
jge
inc
pop
cmp
mov
ljmp
and
cli
mov
scas
iret
aad
decb
mov
shlb
adc
repz
add
cs
xor
add
jb
mov
cmp
roll
test
add
in
inc
mov
fstl
pop
sbb
je
cld
cmp
test
scas
jmp
insl
scas
xchg
cmc
add
fidivrl
jg
fldt
add
xor
loopne
or
cli
dec
insb
ret
adc
sbb
aad
scas
lods
mov
jmp
xchg
and
mov
and
mov
mov
scas
xchg
adc
push
adc
push
aaa
out
dec
pop
dec
fdivp
push
jno
fs
sti
jb
and
jmp
cmp
pop
lock
orl
mov
mov
jne
jae
lods
adc
std
testb
xchg
xor
mov
ss
xchg
outsl
jae
adc
mov
mov
jb
pop
int3
sub
push
cmp
scas
rorb
sbb
and
adc
insb
cmpsb
dec
and
loop
mov
in
enter
push
int
xlat
mov
mov
cld
loope
cltd
cli
mov
movsb
lcall
pop
sub
mov
loop
mov
arpl
aam
xrelease
dec
int3
jecxz
call
cmovo
jns
in
jae
fldt
scas
stos
jg
xor
add
test
jns
xor
addb
cli
mov
std
das
jl
ss
ljmp
jp
jae
test
pop
cmp
push
out
fwait
push
nop
jo
hlt
int3
mov
es
adc
das
repz
ss
daa
or
mov
cld
arpl
cwtl
push
jno
fnstsw
xor
mov
mov
push
pop
sub
inc
or
push
fwait
add
mov
add
bound
mov
jno
pop
sarl
adc
dec
nop
push
mov
sarb
jl
js
adc
arpl
shll
arpl
in
xchg
insl
mov
push
xor
pop
or
xlat
adc
nop
mov
out
sahf
ljmp
stc
movsb
sub
xorl
call
and
movlps
push
mov
mov
sub
mov
pop
dec
cld
popf
jle
mov
lret
call
das
or
or
cmp
ja
xchg
fimuls
dec
pop
inc
jg
mov
pop
lods
mov
push
inc
fiadds
add
pop
dec
push
out
or
push
mov
jp
aas
fsub
xor
mov
imul
mov
cltd
fcmovu
xlat
cmp
jle
jb
mov
loopne
xchg
dec
lds
or
lahf
inc
inc
fiaddl
cmpb
pop
xor
xchg
xchg
pushf
cs
push
fstl
add
jmp
jge
mov
jb
and
sbb
xor
cmc
dec
ss
inc
xor
pop
inc
xlat
or
push
addr16
jne
cmc
mov
mul
sub
sub
filds
push
push
or
cld
and
imul
dec
sub
insl
and
adc
cmp
imull
fbstp
clc
adc
lcall
xchg
or
scas
or
ret
jne
cmp
or
push
loopne
nop
xchg
jge
sub
nop
inc
dec
mov
and
sahf
xor
add
xchg
sub
adc
cmp
lea
subb
jecxz
cltd
cli
test
pop
inc
lret
mov
jbe
cmp
or
cmp
imul
aas
loopne
add
xchg
stos
push
outsb
sub
mov
add
stos
cmpsb
mov
test
sub
fwait
in
or
push
mov
inc
out
rcrl
les
pushf
into
fdivr
jp
add
and
int
andl
bound
pusha
dec
pop
mov
jbe
dec
enter
movsl
jecxz
cld
arpl
mov
pop
pop
mov
cli
dec
fcmovne
push
mov
pop
jnp
xor
js
push
inc
mov
mov
cmp
mov
push
jno
and
inc
xchg
loope
push
pop
cmc
daa
add
mov
std
pop
cmp
pop
jne
or
jne
lahf
dec
sub
scas
mov
add
pop
push
nop
icebp
push
mov
scas
push
outsl
pop
and
xchg
xlat
stos
mov
mov
daa
aad
xchg
sub
fisubrs
jge
lock
in
cmc
cmc
insb
lret
inc
xor
int
pop
push
push
rcrb
lret
sbb
xchg
cmp
into
rcrl
out
cmp
test
mov
xlat
dec
fistps
jbe
jne
adc
cli
test
push
dec
sub
out
movsl
scas
rol
repz
js
int
cmpsb
pushf
mov
popf
loope
dec
jge
test
ret
dec
adc
aam
lret
push
pop
or
mov
cmp
fsub
scas
xor
add
daa
jne
rcrl
push
jmp
pop
sbb
xchg
inc
adc
sbb
cmc
mul
add
cmp
xlat
mov
lock
pop
mov
dec
outsb
xor
cmp
ljmp
mov
negl
testl
jnp
xchg
jge
mov
inc
jns
push
test
cli
xor
aas
xor
lret
push
into
sub
xor
push
jge
push
test
inc
dec
xor
addr16
sbb
imul
dec
pop
pop
jle
mov
inc
jno
add
xlat
out
inc
mov
cmp
repz
push
mov
in
pop
jp
or
sub
cli
jge
mov
xchg
add
and
imul
loopne
call
jle
jl
xor
xchg
fcompl
scas
dec
adc
cmp
ja
push
or
cmp
mov
jmp
mulb
add
std
dec
xor
fcomi
xchg
test
pop
dec
and
push
sub
loopne
dec
dec
xlat
mov
inc
rcr
and
and
lds
mov
xchg
test
cmovns
ljmp
jmp
lret
fbld
push
xor
lods
movsl
cwtl
jle
mov
fs
adc
scas
xor
sbb
xchg
lret
das
cmpsb
out
cld
mov
es
es
lods
das
es
push
add
loop
mov
lods
sti
ret
and
les
pop
roll
jp
sub
cmp
adc
push
cmp
cmp
and
adc
jg
insb
arpl
pop
aam
int
push
sahf
push
dec
mov
fldcw
or
dec
hlt
add
into
roll
push
in
in
inc
pop
das
dec
mov
test
das
mov
mov
mov
in
test
test
adc
pop
lret
inc
jp
in
push
cmp
pop
inc
cmp
xchg
fsubrs
aas
lahf
imul
cmp
lea
xor
push
in
add
push
fists
in
popa
mov
xchg
ljmp
dec
pop
fldpi
sti
or
pop
xor
je
jl
inc
pop
xor
push
lock
pusha
jne
insl
leave
and
and
mov
mov
jo
jp
mov
cmc
dec
clc
adc
pushf
inc
and
inc
cli
cmp
inc
daa
mov
jne
jl
xor
lods
rcll
shrl
out
xchg
xchg
adc
pop
testb
and
nop
leave
mov
ret
xchg
xchg
lret
out
icebp
inc
leave
bound
mov
das
add
mov
cmp
popa
adc
xor
lret
cmpsb
popf
lcall
mov
dec
pop
pusha
push
xlat
xchg
ja
mov
loop
jne
scas
in
add
push
mov
jae
xor
shll
dec
sbb
js
rcr
cmc
in
rcrb
scas
repz
loop
cmc
loopne
cmp
dec
negb
cmc
add
dec
loope
and
push
mov
xchg
repnz
repz
stc
and
je
dec
das
xor
xor
bsr
fnstsw
fistps
pushf
out
dec
inc
call
fistl
pushf
pop
mov
adc
xchg
lcall
mov
pop
outsb
loopne
outsb
pop
sub
lret
cmp
mov
adc
out
movsb
xchg
rorl
rclb
fwait
inc
shrl
xor
xor
push
adc
inc
les
push
sti
pop
or
jno
lds
sub
lcall
inc
mov
enter
lods
cmp
in
addl
into
sbb
adc
in
das
add
mov
jbe
sub
es
inc
mov
stos
clc
xchg
mov
or
mov
out
fs
repnz
inc
mov
fisttpll
call
scas
mov
arpl
ds
movsb
mov
sbbl
sahf
sbb
outsl
notl
cmp
cmp
adc
adc
push
loopne
hlt
push
stos
xchg
fwait
ret
and
xor
lcall
dec
scas
mov
sbb
pop
fcmovu
lahf
clc
xchg
cmp
mov
out
lahf
frstor
pop
sbb
lahf
pushf
pop
fs
lret
ret
jl
jbe
jno
fdivs
popa
cld
dec
stos
icebp
int3
cli
cmp
cmp
out
icebp
enter
jbe
cmp
inc
sbb
xor
out
jne
jecxz
lcall
adc
test
inc
outsl
lods
mov
dec
xor
mov
dec
subb
ss
jl
sbb
and
lods
push
loopne
fadds
mov
insl
out
dec
sub
subl
xchg
jnp
mov
push
scas
mov
sub
gs
xchg
sbb
inc
call
adc
cld
mov
shll
iret
inc
gs
push
or
cli
fistps
sbb
jae
jno
out
add
sbb
xor
dec
push
aas
lea
xor
call
and
int3
es
xlat
adc
sub
repnz
ret
pop
leave
jae
or
orb
cmp
inc
sbb
scas
shll
jns
cmp
jbe
cmp
cwtl
das
cld
xchg
xchg
lahf
js
add
sbbl
add
push
sub
js
adc
xor
add
jge
xor
ficomps
out
ret
lahf
popf
test
lcall
imul
mov
mov
mov
ret
jne
dec
cmp
mov
inc
adc
inc
adc
add
cmp
test
add
pop
lret
sbb
or
pop
jge
push
push
cmp
sti
cs
jle
cmp
cmc
xchg
popf
pusha
lods
jb
push
mov
fucomi
adc
xchg
mov
pop
fldcw
mov
fucomip
andb
sahf
aaa
imul
lods
xchg
xor
xor
add
add
lods
cmp
sahf
jp
andb
or
cwtl
xor
mov
das
jge
test
dec
inc
push
and
imul
pop
outsb
mov
rcll
inc
test
lea
arpl
pop
cwtl
ficompl
jno
jne
lea
mov
fwait
in
pop
jnp
inc
movsb
push
call
add
or
push
jb
lea
pop
cmpsl
int
mov
fnsave
imul
in
scas
dec
daa
out
stos
jmp
sarl
xchg
sbb
mov
hlt
mov
pop
mov
cmpsb
sub
push
cmp
scas
cltd
ja
pop
in
push
insl
sbb
mov
clc
in
fisubl
push
cmp
lret
movsl
jne
mov
mov
lods
ss
or
add
sub
sbb
int
push
and
sahf
loop
mov
push
shrb
jg
lods
loopne
cmc
adc
das
out
jg
pusha
add
adc
andb
cmpsl
scas
sbb
ljmp
call
sub
sahf
pushf
and
rcll
es
mov
mov
push
xchg
mov
stos
add
imul
jbe
add
jne
imul
pushf
cmc
mov
cmp
scas
mov
stc
cmc
mov
sub
xchg
dec
cmp
jnp
push
or
pop
js
js
push
test
fistpl
and
lahf
xchg
and
fistl
push
and
mov
shrb
or
lea
dec
or
inc
loop
jb
mov
lods
nop
inc
repz
test
mov
inc
cmc
xor
ja
cvtpi2ps
push
imul
inc
rorb
ret
rcrl
out
idivb
ret
sbb
shlb
jne
inc
fsubl
dec
fdivl
in
or
lods
ljmp
pop
popf
or
mov
dec
push
jl
pop
lcall
or
je
and
nop
cmpsb
mov
jbe
sbb
lcall
and
dec
inc
mov
xchg
pop
pop
insw
imul
sub
push
cmp
inc
sub
mov
idiv
sub
lock
rcll
jae
lret
sub
add
loop
repnz
xchg
mov
jns
push
aam
add
jne
addr16
xlat
adc
cmp
jb
int3
int
dec
int
add
dec
push
pop
sub
sbb
stos
call
inc
ficomps
sbb
sbb
jl
cmpl
pop
adc
test
loope
sti
dec
pop
mov
xor
lods
aas
cmp
out
jg
and
iret
push
dec
iret
shrb
out
pusha
sbb
fstpt
pop
pop
sbb
mov
out
out
shr
pusha
cmc
add
xor
pushf
inc
pushf
jno
setno
dec
inc
jno
xor
jbe
insb
sub
inc
fidivs
mov
push
push
test
dec
inc
mov
clc
mov
add
pop
cs
pop
push
fwait
mov
add
or
pop
es
xlat
stc
dec
xor
int
movsl
adc
fsubs
leave
cld
pop
es
mov
push
cli
push
ds
mov
jge
ffree
xor
aam
in
xor
mov
aaa
sbb
mov
pop
or
js
testl
loopne
sarl
ret
int3
jl
jns
push
test
adc
xor
push
xchg
add
mov
rorl
sub
xor
push
dec
fisttpl
es
jbe
repz
mov
push
jnp
xchg
pop
popf
adc
jl
fldcw
sub
jno
test
pop
sti
and
and
insb
into
cmp
arpl
xchg
aaa
jae
loopne
inc
ja
jle
stos
mov
rcrb
iret
enter
mov
fnstsw
stos
inc
and
adc
adc
repnz
jge
dec
mov
scas
mov
mov
faddl
cs
stc
jmp
mov
jmp
in
xchg
adc
mov
xor
iret
inc
pop
push
xor
jge
jg
jo
mov
mov
lds
xchg
decl
jae
push
pop
dec
lds
test
movsl
pop
mov
or
push
push
cltd
pop
mov
and
sub
sarl
and
mov
push
cli
pop
dec
inc
fisubl
push
xchg
fdivl
sbb
inc
iret
fbld
mov
sbb
mov
int
scas
sbb
lock
pop
sbb
xor
cmpsl
outsb
add
push
dec
dec
cwtl
jle
sbb
and
repnz
sbb
pushf
jne
pop
decb
inc
clc
fistl
mov
add
cmp
out
inc
repnz
rorl
inc
inc
xor
int
test
jmp
xor
dec
xorb
lcall
mov
jbe
popa
daa
inc
fsubrs
xchg
dec
inc
imul
aam
sbb
cmp
sub
outsl
mov
dec
mov
cmpsb
lret
aad
lret
call
fidivrl
adc
xchg
add
out
imul
fiaddl
sbb
mov
cmp
insl
shl
mov
mov
add
push
adc
iret
xchg
xchg
mov
xor
inc
cmp
sets
in
lret
in
in
gs
es
scas
movsl
jbe
mov
xchg
cmpsb
mov
sbb
stos
movsb
jmp
pop
outsb
or
sbb
movsl
and
adc
inc
push
rcrl
pop
sbb
sub
xor
cmpsl
sub
add
rorb
and
shl
bound
cmp
stos
ficoms
dec
push
pop
and
mov
lods
scas
imul
add
sub
sub
push
pop
bound
roll
push
and
xlat
insb
popa
xlat
frstor
aaa
sbb
leave
pop
inc
add
orb
cmc
or
icebp
dec
add
sahf
test
fiadds
je
dec
imul
pop
jle
pusha
and
dec
psubd
or
stos
pop
aad
stos
add
sar
lock
out
nop
jne
lahf
pop
xchg
inc
sbb
bound
xor
loopne
fdivp
jmp
dec
je
mov
pop
fnstcw
xlat
pop
test
rolb
inc
lods
dec
xor
mov
scas
xlat
lahf
mov
insl
mov
pusha
les
push
imul
xor
aam
inc
mov
mov
xor
test
fld1
push
andl
es
pop
pop
xlat
mov
push
xchg
inc
std
imul
jb
push
or
stos
test
loop
push
push
scas
int
sbb
xor
les
pop
imul
sub
or
ficoms
dec
hlt
push
sub
popf
out
mov
sub
xor
rol
je
xchg
in
inc
push
xchg
stc
movsb
lds
cmpsb
dec
fstp
mov
inc
lcall
arpl
jnp
stos
aam
mov
xchg
jo
insl
xchg
mov
ret
add
jmp
roll
mov
sub
mov
andl
fmull
mov
mov
push
jbe
sbb
sub
mov
je
fst
cmp
jecxz
js
lahf
inc
loopne
cwtl
pop
jb
push
mov
sub
push
mov
out
repnz
jecxz
mov
add
leave
add
xor
leave
leave
nop
rolb
sub
dec
cmc
inc
js
loope
sbb
jl
adc
addb
dec
mov
xchg
push
popa
push
jp
or
outsl
pop
jecxz
shll
fwait
xchg
arpl
push
sbb
arpl
shl
enter
xchg
fdivrp
xchg
sub
mov
mov
mov
or
fisttpl
loope
ljmp
cmp
jmp
jmp
ret
xchg
add
and
loopne
or
adc
dec
mov
scas
cwtl
js
lds
cmp
mov
pop
sub
gs
nop
mov
jl
repz
cmp
add
xchg
movsl
stc
push
sti
xlat
bound
mov
fimull
je
jle
mov
or
icebp
pop
xchg
mov
inc
shlb
loope
push
rclb
push
fstpl
lds
ljmp
and
mov
mov
mov
mov
outsb
pop
aaa
mov
outsl
and
test
and
insl
stos
pop
faddl
das
xor
xor
mov
std
or
sub
xor
out
mov
clc
loopne
test
imul
push
mov
gs
dec
clc
js
in
inc
pop
or
rcr
pushf
out
int3
int3
sub
sbb
orb
mov
mov
into
ret
and
xchg
loop
adc
cmpl
sbbl
loopne
lds
test
in
push
sub
jl
push
aaa
jg
jo
bound
cmp
jge
inc
jp
enter
xorb
popf
sahf
rolb
or
loope
nop
pushf
xor
ja
mov
sbb
out
scas
push
and
push
push
push
leave
cli
and
xor
movsl
xorl
push
and
and
lcall
dec
or
rclb
sub
mov
and
hlt
jae
lahf
pop
xchg
fsts
popa
inc
out
lret
je
pop
enter
ljmp
lods
in
int3
sub
mov
les
inc
mov
aad
push
fldenv
xchg
dec
movsl
mov
sbb
je
cwtl
cs
hlt
cwtl
pop
enter
adc
pop
inc
adc
divl
arpl
xchg
xchg
movsl
out
pop
and
sub
sbb
mov
loope
dec
outsb
jmp
inc
mov
sbb
out
into
orl
xorl
xor
stos
pop
adc
pop
push
sub
dec
stos
mov
sub
movsl
cs
sbb
scas
adc
icebp
push
jecxz
scas
jl
nop
test
cwtl
scas
mov
xor
adc
aam
mov
je
aam
pop
xchg
adc
and
enter
jnp
ret
inc
inc
pop
lea
add
xchg
imul
lods
scas
cld
outsl
lock
ret
pushl
sbbb
jns
mov
adc
int
filds
inc
add
mov
push
loopne
xor
nop
stos
mov
pop
and
leave
push
out
xchg
xchg
pop
xchg
and
xor
add
pop
jp
push
mov
lahf
push
xchg
pusha
dec
out
pop
fistpl
mov
leave
pop
cmp
xchg
add
frstors
cmpsb
aaa
adc
dec
dec
push
hlt
or
aaa
add
roll
push
in
js
into
inc
scas
js
les
push
dec
push
mov
adc
or
and
out
jbe
and
xchg
jo
nop
popa
and
pop
push
cs
pop
sub
lahf
jg
add
leave
cltd
mov
sbb
popf
cmpsb
mov
or
jg
inc
jb
ljmp
aam
sbb
cmp
insb
push
pusha
scas
fistps
xor
leave
shlb
inc
ss
stos
jnp
xchg
xor
rcrb
pop
aam
adc
fnstsw
jb
sbb
mov
mov
fwait
int
or
mov
ljmp
fldt
jbe
insl
inc
cmp
ss
dec
les
inc
jecxz,pn
clc
xor
mov
xchg
outsb
push
sbb
xchg
sbb
push
call
mov
les
ss
shl
pop
push
in
fiaddl
push
into
sti
scas
dec
mov
fdivl
sbb
shl
add
xor
jecxz
pushf
mov
mov
and
aad
ja
dec
and
xchg
subl
lcall
mov
or
int
xchg
shll
jp
mov
mov
dec
fnstsw
pop
or
inc
cs
pop
push
movl
arpl
push
adc
scas
add
arpl
pop
add
cmp
pop
mov
aam
outsb
lcall
scas
sub
aad
dec
sub
inc
hlt
daa
sbb
cmpl
push
jno
cmc
fstpt
sub
mov
mov
push
inc
sbb
push
scas
in
or
cli
flds
push
andb
dec
cmp
icebp
pop
mov
popf
aas
jecxz
aad
and
or
pushf
add
ds
add
pushf
or
stos
adc
scas
inc
sbb
mov
mov
fisubl
inc
lods
out
loop
sbbl
jge
test
push
repnz
pop
fldl
pop
dec
add
jecxz
xor
inc
adc
push
mov
sahf
aad
insb
push
push
push
das
sti
and
push
mov
cmp
insb
andl
inc
out
nop
inc
push
jp
into
fwait
dec
mov
xor
out
leave
aam
add
add
mov
dec
cmp
xchg
pop
mov
push
fwait
adc
cmpsl
adc
mov
out
xor
push
inc
sbb
dec
jnp
test
fcomps
sahf
dec
neg
popf
fistl
pop
bound
jge
lods
xchg
ret
ret
fidivs
or
mov
mov
xchg
or
data16
imul
jns
sbb
mov
mov
test
pop
loop
or
mov
mov
stc
pushl
mov
push
push
mull
in
xchg
push
mov
or
push
negb
data16
dec
inc
mov
or
xchg
add
faddl
fisubs
in
pop
cmp
cmpsb
xchg
and
popf
cld
sbb
cltd
jns
stc
jbe
adc
aaa
scas
jle
push
daa
mov
adc
sub
xor
es
lods
adc
mov
dec
xchg
orb
mov
out
sbb
mov
and
jb
sbb
outsb
jae
test
dec
subps
pushf
push
lcall
stos
push
push
insb
push
jb
adc
fisttpll
cmc
lods
les
inc
xor
xlat
cli
sbb
xchg
insb
scas
push
sbb
lcall
add
stos
xor
into
aaa
mov
mov
xor
mov
adc
dec
mov
xchg
addl
mov
xorb
mov
enter
lock
jb
push
cmp
test
bound
xchg
ret
in
xchg
xchg
dec
adc
sub
adc
add
xor
xchg
sti
ja
adcl
outsl
into
mov
addr16
xchg
cmp
out
cmp
push
lret
enter
ret
mov
and
mov
inc
add
lret
fidivrs
loope
or
sub
mov
xchg
jbe
pop
cmp
inc
dec
cli
inc
sbb
xor
lods
xor
inc
fwait
mov
mov
jmp
pop
aaa
in
mov
inc
shlb
inc
movb
ret
nop
pop
orb
ret
push
nop
sbb
cltd
mov
or
cli
cmp
nop
movsb
dec
fistpll
out
and
or
xchg
mov
ss
out
fstps
jne
sbbl
or
out
xor
pop
pop
test
or
mov
sub
xor
adc
pop
mov
sbb
imulb
mov
inc
xor
test
jge
cmp
adc
rcrb
adc
add
mov
fldcw
cmc
into
pop
adc
and
or
iret
cmp
lcall
lcall
sub
es
rcll
push
dec
test
test
mov
jle
push
aad
mov
cmp
sub
loope
cmp
insl
mov
inc
mov
lods
mov
jnp
and
inc
cmp
dec
es
test
lds
dec
jmp
ja
and
xchg
stos
pop
loope
in
inc
sub
movsb
pop
jno
mov
adc
out
stos
or
fsave
xor
cmc
test
frstor
les
jb
fisttpll
std
iret
sub
and
mov
sbb
cli
imul
fwait
jle
in
aaa
mov
pop
push
test
fdivrs
add
orb
mov
add
inc
clc
cld
imul
mov
imul
data16
enter
push
lods
int3
push
xchg
aas
repnz
popa
push
xchg
mov
cmp
dec
mov
lcall
cmc
je
mov
fcomip
lods
das
mov
mov
out
mov
and
psrlw
aas
mulb
fistpll
push
jle
rcrl
xor
clc
pop
je
mov
mov
fidivrs
and
xchg
cwtl
inc
and
mov
cmc
sub
or
jmp
add
fs
pusha
sbb
pop
adc
das
shll
mov
mov
cwtl
pop
and
or
xchg
inc
pop
out
cmp
sti
pop
inc
lcall
ffreep
push
push
push
popf
adc
fmul
and
xor
dec
in
cs
sub
addr16
lods
push
loopne
test
sbbb
imul
jnp
in
cmp
inc
dec
sub
pop
dec
test
jl
mov
push
out
repnz
sarb
in
sub
add
out
js
lret
pop
sub
jno
aam
shl
gs
xor
sahf
daa
push
andb
lcall
or
push
daa
push
adc
add
mov
jno
out
fs
aam
ljmp
shll
lret
adcl
mov
adc
mov
jbe
pop
sub
xor
jg
adc
stos
and
daa
jnp
dec
and
or
pop
dec
dec
cmpsb
mov
or
mov
pop
mov
clc
sbb
loope,pt
bound
mov
mov
push
loope
sbb
data16
out
mov
add
pop
pop
aas
jecxz
inc
insl
add
pop
inc
aam
mov
pop
jns
outsl
mov
jnp
and
test
repz
aas
and
mov
fisttps
jno
into
or
jge
cmp
rcrl
pop
faddl
arpl
and
cmc
and
shl
repnz
mov
pop
inc
jp
fsubrs
fidivrl
add
shl
push
mov
cwtl
dec
pop
inc
cli
jl
movsl
pop
out
lret
push
jle
sbb
loope
mov
lods
popf
ja
pop
jb
cmp
into
loopne
arpl
sbb
push
movq
pop
xor
push
aad
jb
scas
test
mov
cmpsl
enter
pop
je
jl
lret
mov
inc
mov
mov
lret
add
cmp
movsb
jne
dec
hlt
sahf
jg
aas
adc
push
addl
stos
insl
outsb
jb
xchg
std
test
lods
add
movsl
fldcw
inc
or
mov
jmp
inc
leave
mov
xchg
inc
mov
mov
nop
mov
dec
loope
ret
testb
add
lods
test
outsl
icebp
dec
test
push
mov
sbb
ret
das
jno
xchg
insl
arpl
shrl
cli
mov
gs
pop
fcomps
mov
aas
or
cld
mov
sbb
sbb
mov
mov
pop
cld
shlb
adc
sub
nop
sub
cmp
inc
loop
and
lods
push
adc
inc
pop
stos
imul
sub
sub
pop
ja
or
xchg
lret
or
adcl
out
inc
mov
rolb
dec
push
xor
xor
mov
mov
push
jo
sub
cmp
inc
dec
in
sahf
cs
je
dec
into
push
lret
add
push
jne
out
adc
jns
pop
repnz
adc
and
je
push
int
loop
pop
ret
das
je
cld
iret
outsl
sbb
ror
inc
inc
dec
pop
dec
xchg
adc
mov
sub
mov
pusha
js
dec
and
loopne
mov
mov
fstl
ret
arpl
outsb
push
lcall
shrb
jns
and
or
push
test
cmp
lods
pcmpgtb
pop
cli
push
cs
data16
fwait
jg
sub
into
test
cld
cltd
pop
adc
loope
push
outsl
lcall
in
and
in
aam
push
lock
jg
aad
sbb
push
jge
int
cli
cltd
andl
test
add
add
push
repz
adc
pop
aas
popl
dec
xchg
aad
and
xchg
add
cmp
push
ljmp
repz
pop
nop
loop
test
lcall
mov
dec
jl
popa
xchg
das
and
push
rorb
test
dec
mov
mov
jne
fnstsw
repnz
add
cmp
test
xchg
jle
out
jge
iret
add
popf
push
push
sbb
ret
dec
jb
lea
sub
lods
push
xchg
push
adc
mov
xor
pop
loop
xchg
nop
push
and
jmp
push
mov
or
in
pop
es
dec
out
lock
inc
jb
and
jb
stc
sub
fcmovb
leave
xlat
jne
andl
add
data16
aad
sub
insl
out
sbb
insb
loopne
lea
or
mull
mov
icebp
jbe
inc
and
shll
shlb
lret
fsubrl
add
and
sub
sub
ss
sub
cmp
stos
or
or
adcb
popa
aam
fld
push
repz
and
push
rorb
jne
cs
mov
repnz
lea
inc
mov
repz
or
sarl
lods
dec
out
rorb
dec
push
ss
xor
fbstp
mov
fs
cli
pop
call
or
xchg
enter
push
add
or
pusha
push
clc
xlat
xchg
ror
shl
ja
jmp
push
lret
std
mov
mov
mov
cmc
xchg
mov
cmp
dec
dec
pop
xchg
test
pushf
pop
lret
or
movl
push
inc
jns
loopne
lds
cmpsl
xchg
or
inc
xchg
mov
dec
jmp
sbb
in
dec
mov
lds
and
xchg
jns
inc
out
adc
inc
gs
adc
cmpsb
dec
movsb
cmp
adc
lret
js
ljmp
rcrb
mov
cmp
test
sub
push
adc
inc
data16
ljmp
insb
loop
xlat
inc
nop
outsl
pop
xor
out
in
hlt
xchg
sub
pop
xchg
or
fidivrl
push
or
sub
mov
into
ret
aad
pop
jne
pop
pop
xor
ds
pop
xchg
sti
lds
inc
add
cmc
gs
xchg
imul
or
mov
jo
scas
mov
dec
inc
fwait
push
mov
and
or
pop
iret
or
in
xor
mov
icebp
mov
rorl
xchg
je
pushf
mov
and
lds
ret
cmp
xor
ljmp
stos
mov
xchg
sub
nop
xor
cltd
inc
push
stc
nop
sarb
cld
add
pop
in
or
sbb
mov
and
outsl
jmp
add
xchg
xchg
int3
mov
mov
pop
add
inc
inc
addr16
int3
mov
scas
data16
sbb
add
push
in
arpl
inc
push
jl
mov
mov
das
push
xchg
mov
sbb
sbb
loopne
xlat
add
je
test
sub
adc
stos
data16
filds
push
gs
mov
xchg
cmp
xchg
mov
cmp
ret
les
push
out
fs
sub
push
test
cmp
push
sub
sarb
sub
mov
add
cld
and
push
xor
mov
ja
mov
sub
pop
push
mov
inc
gs
fucom
ja
push
daa
cmpsl
stc
test
inc
repz
fs
jbe
repnz
aam
inc
bound
cmc
push
ljmp
movsb
cmpsl
movsl
jne
jmp
cmp
adc
jae
xchg
ja
push
or
push
divps
loope
clc
mov
fisubrs
int3
cmp
push
adc
sbb
int3
imul
hlt
jne
outsb
lcall
imul
xor
pop
xlat
sbb
not
aad
rolb
mov
sbb
dec
mov
pop
push
cld
inc
movsb
sub
mov
bound
push
sbb
lods
dec
jne
pushf
es
sub
loop
test
dec
ljmp
push
sub
or
or
stos
xchg
cmp
mov
push
cmc
outsb
clc
fsub
mov
mov
xchg
jne
and
lods
jle
sbb
sub
inc
leave
stos
pop
xchg
pop
jg
xlat
adc
cmp
xor
and
jg
mov
push
jb
pop
adc
inc
jbe
adc
arpl
push
add
into
test
add
hlt
and
jbe
bound
imul
and
xchg
adc
adc
xchg
icebp
insl
lret
ljmp
jle
lods
gs
or
outsl
fisttps
pop
unpcklps
lcall
inc
repnz
inc
arpl
cvttps2pi
and
ret
cmp
sahf
or
test
andl
jge
hlt
push
adc
out
sub
and
insb
mov
dec
inc
dec
mov
push
lods
sbb
cmp
pop
xchg
popa
mov
and
jmp
ja
aas
push
stc
mov
jl
or
hlt
data16
dec
push
pop
flds
push
xlat
addb
hlt
mov
inc
shl
int
pushf
bound
sbb
fs
iret
movsb
cli
ffreep
mov
movsb
stc
outsl
pop
mov
loopne
pop
pextrw
loope
add
xor
mov
in
and
sub
mov
mov
outsl
popf
inc
inc
inc
xor
mov
in
inc
sub
mov
popa
dec
pop
arpl
lret
inc
sub
or
repnz
aaa
xor
ret
mov
ret
adcl
sbb
jmp
arpl
xchg
adc
inc
push
lds
cmp
adc
push
mov
ds
push
popa
fadd
out
je
jo
and
jp
gs
fwait
inc
dec
jg
mov
shlb
lds
std
add
add
loope
mov
movsl
jg
mov
ret
xchg
lahf
jae
xor
or
loop
pop
mov
stc
mov
in
mov
xchg
inc
push
add
mov
push
add
test
jp
pop
int3
pop
and
xorl
mov
sbb
jno
aaa
in
inc
inc
add
sub
test
cmpsb
mov
xor
popa
xor
push
sbb
adc
sbb
mov
ret
fsubrp
jne
clc
loope
dec
sti
push
mov
aam
push
scas
sbb
lds
cwtl
push
jns
mov
insl
xchg
cmp
pop
jb
test
into
lcall
outsb
push
lods
dec
in
icebp
mov
mov
gs
jnp
xchg
mov
cmpsb
dec
shlb
mov
mov
dec
xlat
cmc
sub
mov
xchg
scas
popf
sbb
popa
lahf
jl
sti
fldenv
sti
dec
and
mov
cltd
sbb
xchg
cmp
jp
push
inc
ds
dec
cmp
in
repz
leave
shl
ds
mov
pop
cli
cmp
in
mov
cmp
fwait
cmp
fcompl
jg
stos
jne
cmp
jg
add
in
dec
push
inc
mov
jg
pop
test
add
not
cmp
xchg
imul
addr16
xor
add
adcl
call
daa
stos
inc
test
jmp
add
mov
addr16
ret
jmp
rcr
std
mov
pop
stc
jnp
sub
mov
js
xchg
or
pushl
gs
cmpsl
mov
insl
sub
xchg
and
mov
fwait
ja
xchg
xor
scas
mov
out
in
pop
sub
insl
mov
xor
and
jnp
ss
push
and
mov
shrl
jp
call
div
add
paddusb
mov
les
testl
mov
lcall
ret
cmp
out
out
das
call
mov
sbb
test
dec
or
fsts
lret
ret
adc
outsl
cld
test
jo
imul
xchg
mov
inc
std
jle
push
mov
in
aaa
or
adc
notb
pop
dec
or
sbb
xchg
iret
inc
push
outsl
in
add
jne
jae
push
rorb
dec
dec
mov
mov
out
xor
pop
pop
push
add
sub
xchg
rorb
divl
ss
lret
out
jmp
mov
cmp
rcl
stc
inc
mov
pop
sbb
jno
rorl
dec
cmp
and
sub
inc
sbb
pop
int
cltd
or
fisttpll
sbb
adcl
jbe
add
ljmp
stos
fldenv
sub
scas
xor
xor
scas
sbb
sahf
dec
ss
inc
aam
adc
jl
nop
les
out
sub
push
scas
dec
in
dec
outsb
or
push
push
stos
fnstcw
cs
mov
jmp
sub
and
mov
xor
pop
adc
cwtl
fmulp
push
popa
or
hlt
xlat
imul
inc
lcall
lea
or
sahf
fdivl
push
jne
push
sub
out
mov
dec
and
mov
dec
enter
lds
or
mov
mov
nop
outsl
fwait
pop
pop
mov
mov
iret
jnp
rcrl
mov
mov
lock
out
mov
dec
cmpsb
mov
jl
jge
cwtl
mov
ss
rcll
and
outsb
mov
add
cmp
les
lods
imul
inc
dec
ficomps
jnp
cwtl
je
ljmp
push
and
mulb
repnz
popf
rcr
outsb
shl
ret
test
inc
add
sub
push
popl
mov
incl
sub
iret
test
int
jne
hlt
das
into
lret
dec
xchg
sahf
push
jl
xor
dec
loopne
in
arpl
mov
mov
mov
mov
repnz
mov
xor
idiv
sarl
adc
lds
imul
test
nop
lret
imul
push
arpl
or
push
movsb
xor
push
mov
icebp
lock
sub
enter
mov
in
jae
push
and
xchg
dec
and
in
dec
push
aas
cmpb
inc
jle
push
sub
mov
and
loopne
adcb
xor
fists
mov
adc
daa
call
xor
rcl
sub
sub
mov
lcall
dec
jp
imul
pop
les
lahf
inc
xor
ja
add
int
add
out
ficoms
adc
aas
fnstsw
push
pop
lods
loop
loopne
sbb
push
in
mov
push
sub
bound
jns
push
sar
mov
xor
stos
cmp
jge
inc
xchg
dec
pop
mov
push
shll
lods
dec
xor
sub
notb
mov
bound
jnp
adc
fucomip
sub
xlat
sbb
int
mov
mov
cli
popf
xor
sbb
les
mov
fistpll
push
sub
xchg
push
rcll
repz
and
push
into
cltd
std
aaa
jae
pop
ficompl
pop
mov
shr
jle
cmp
jb
scas
lret
fcoml
lds
pop
les
pushf
addl
out
imul
add
ss
xchg
leave
lret
inc
mov
mov
fwait
dec
xchg
daa
or
xchg
add
mov
jg
xor
dec
sbb
adc
cmp
push
dec
mov
pop
ret
mov
adc
das
ret
pop
jae
jle
push
push
cltd
sbbl
add
mov
inc
cmc
cmp
sbb
cs
add
pop
out
ret
cld
in
xor
out
outsb
lret
shl
sbb
jle
ja
fcmovbe
shrl
sub
sub
or
scas
out
je
or
hlt
stc
imul
and
data16
adcb
sub
js
lea
dec
xchg
cwtl
ffreep
addb
mov
mov
shll
std
cli
rcll
es
shl
jns
daa
and
xchg
rol
adc
call
or
ss
movsb
popa
inc
push
add
cld
sub
sbb
in
aaa
sub
pop
or
out
inc
adc
and
pop
push
xorb
popf
mov
pop
mov
cli
jno
mov
lods
test
add
xor
inc
push
or
enter
loop
andb
jns
por
adc
in
outsl
int3
mov
shl
call
test
ror
and
testl
pop
lret
dec
and
or
repnz
pop
dec
lds
dec
xor
repnz
mov
mov
out
inc
mov
xor
das
stos
cmp
pop
mov
cmp
add
mov
xchg
xor
xor
mov
shrb
xor
aad
out
jmp
rorl
add
stc
pop
jne
enter
jmp
sub
pop
sbb
mov
jl
cmp
pop
rcrl
enter
test
jb
jmp
jg
sub
add
cmp
sub
sub
xor
dec
in
popa
push
jnp
push
inc
out
lods
adc
ja
out
mov
cwtl
jmp
jbe
repz
sub
xor
and
mov
jno
push
push
add
inc
je
sub
add
mov
clc
sarb
push
and
xchg
fwait
les
dec
xchg
ret
xchg
ljmp
lds
sub
adc
mov
sbb
cltd
sbb
je
outsl
ret
cmp
pop
mov
test
mov
mov
loop
andb
fstpt
mov
inc
mov
aas
jmp
cli
stos
jb
ja
jle
xor
adcl
lods
shrb
xor
jg
xor
jecxz
sub
pop
adc
data16
adc
inc
push
arpl
cmp
int3
add
pop
and
adc
movsl
sbb
je
out
or
mov
loope
mov
mov
test
out
repnz
dec
mov
sbb
add
mov
dec
iret
jecxz
pushf
imul
scas
adc
clc
xchg
repnz
cli
mov
popf
leave
sub
bnd
daa
jae
mov
sub
arpl
mov
sbb
cs
push
repnz
inc
sbb
cmp
lcall
fisttpl
push
ss
mov
inc
xor
add
ficoms
sub
adc
daa
push
mov
int
adc
sbb
xchg
popa
ficoml
cmpsl
orl
cmp
outsl
mov
cwtl
cltd
mov
stos
iret
fwait
outsl
mov
das
inc
xchg
fildll
cld
mov
adc
div
push
shll
adc
repnz
xchg
push
fldcw
cmc
fs
lcall
icebp
pop
or
lods
cli
int3
mov
leave
adc
fiadds
and
adc
mov
sbb
pushl
outsb
mov
fsubl
mov
cmpsl
add
or
fwait
xchg
test
inc
or
push
sahf
inc
popa
aaa
sub
fadd
fstpt
xchg
outsl
test
dec
pop
push
dec
sub
shlb
adc
mov
jno
fwait
cld
jae
dec
imul
arpl
loope
mov
or
fcompl
rcl
adc
jno
inc
jge
fldcw
mov
pop
dec
fs
aas
das
lods
jno
mov
ret
xor
shl
push
lods
pop
fildll
cmp
adc
xchg
lcall
in
pop
repz
mov
out
fildll
and
in
and
jmp
ret
sbb
es
jmp
jb
adc
fs
xchg
lock
sbb
imul
mov
insb
lods
or
push
cmp
mov
and
xchg
push
pop
jb
out
mov
in
pushf
jmp
sub
inc
andl
aaa
inc
pop
push
imul
into
inc
test
jns
mov
jne
jmp
dec
out
add
pushf
lahf
stc
cmp
pop
dec
jp
inc
int
push
sbb
pop
test
cmpsl
push
sahf
push
cmpsb
mov
sub
xor
repnz
or
mov
lock
cltd
test
int
fmul
jno
mov
add
sub
out
sbb
out
pushf
ljmp
aam
outsb
sbb
jge
jge
mov
xchg
or
stc
cmp
bsf
lret
push
mov
leave
test
xor
cli
dec
fwait
outsl
iret
dec
xchg
scas
cmp
xor
pop
sub
mov
sahf
xlat
scas
pop
aaa
test
push
addr16
jae
enter
mov
inc
jmp
loop
nop
or
adc
push
push
aam
jmp
rcl
sbbl
or
imul
jb
sbb
in
fimuls
mov
icebp
push
and
into
inc
xor
in
add
cmp
add
stos
or
cmp
mov
mov
adc
loopne
add
adc
lock
sub
mov
sahf
lods
sti
jb
je
push
mov
inc
inc
sub
loope
xchg
aaa
xchg
insb
lods
cmp
cmp
arpl
lret
fmul
repnz
jecxz
pop
and
xor
cmp
pop
mov
pop
sbb
push
adc
add
add
nop
or
ret
xor
xchg
loope
add
int
and
out
xchg
xor
scas
and
mov
enter
cwtl
xlat
xor
inc
dec
inc
movq
orb
mov
jmp
mov
dec
bound
fwait
mov
insb
pushl
nop
sub
sub
lds
mov
les
stc
bound
sbb
cltd
mov
push
in
mov
js,pn
cltd
jecxz
je
sahf
mov
stc
int3
sbb
subb
iret
lds
sbb
jae
subb
jno
and
mov
mov
cltd
hlt
xor
sbb
insb
cs
push
inc
lret
mov
or
fsubs
addr16
out
inc
out
pop
xlat
push
xor
test
jae
lods
in
je
pop
push
mov
call
mov
mov
lret
arpl
sbb
shr
push
sub
data16
inc
das
into
mov
mov
pop
nop
jp
cwtl
xor
jae
sbb
dec
es
adc
adc
or
ret
cltd
mov
sbb
fnstcw
inc
hlt
adc
or
mov
call
in
pop
sbb
ja
into
pop
xor
clc
pop
xorl
jl
mov
push
enter
test
shlb
leave
aas
out
movnti
dec
dec
lods
aaa
into
sub
mov
aaa
dec
pop
clc
ss
pop
push
jmp
pop
push
inc
pop
repz
cld
sbb
mov
out
and
sbb
ret
inc
out
or
cli
push
adc
cmp
cwtl
and
fisubl
mov
xchg
mov
adc
cmc
faddl
imul
inc
sub
popa
and
test
mov
test
in
fdivl
ror
lods
cmpsb
fwait
dec
inc
adc
pop
mov
sbbl
movsl
xor
push
stos
pop
inc
xor
in
out
in
xlat
out
jle
push
shlb
movsb
iret
dec
loop
mov
push
repz
ss
movsb
inc
loope
jecxz
test
arpl
pop
mov
mov
xchg
xchg
adc
mov
outsl
mov
or
cmpsb
arpl
inc
mov
enter
mov
test
push
in
or
jmp
sub
adc
mov
mov
jle
sub
dec
push
inc
lods
adc
lahf
insl
jp
pop
mov
xor
jbe
dec
cmp
roll
lods
ja
ja
idivl
inc
pop
mov
adc
stos
int3
inc
cld
sbb
inc
cmpsl
jo
mov
mov
fdivs
in
adc
repz
cli
and
fsubr
inc
stos
jae
mov
mov
xchg
cmpsl
incl
pop
mov
jmp
cmp
xchg
inc
inc
inc
loop
mov
jbe,pn
jg
adc
arpl
push
mov
xlat
sbb
adc
push
dec
pop
xchg
add
mov
pop
pop
cli
jp
call
push
adc
xor
lock
jno
test
ljmp
pusha
inc
push
filds
mov
adc
adc
stos
mov
add
cmpsl
mov
xor
loopne
cmp
inc
fildl
add
mov
rorb
fcom
scas
adc
mov
mov
cmp
xchg
and
sub
add
xlat
cmp
sbb
push
or
fidivl
nop
lock
pop
lods
ja
cmp
or
stc
jl
loop,pt
jl
sti
leave
orl
xor
cmp
cli
fimull
adc
and
cltd
xchg
sbb
lods
pop
pop
out
lret
and
ds
jg
mov
inc
pop
pop
xchg
jp
add
clc
jnp
lods
add
sbb
jns
and
mov
cmp
sahf
inc
mov
pushf
insb
xchg
sbb
pop
xor
inc
push
lods
out
outsb
mov
test
cmp
iret
int
fisubs
loop
repnz
lock
insl
or
dec
mov
test
int3
mov
dec
nop
inc
push
ja
popf
pushf
xchg
dec
shlb
cmp
mov
inc
and
addr16
mov
sbb
sbb
pop
repnz
jg
movsb
dec
fwait
and
hlt
pop
inc
dec
nop
fidivl
add
scas
daa
mov
fsubr
pop
gs
rorb
fadds
dec
sbb
dec
adc
or
clc
pop
mov
mov
push
mov
cli
or
xor
stos
or
dec
xor
movsb
jmp
sti
cli
inc
mov
ret
and
mov
dec
mov
fdivrs
dec
ret
leave
scas
xor
push
pop
fists
repz
fistps
lock
hlt
lret
sbb
loopne
mov
jnp
inc
scas
cmpsl
ljmp
imul
sahf
jae
cli
lret
push
es
iret
push
push
jne
aaa
stos
imull
shlb
pop
jnp
sub
mov
movl
ret
add
cmpsl
xor
jne
xor
insl
push
into
cmp
fisubl
jnp
jae
xchg
lahf
sub
adc
into
mov
inc
sub
sub
push
sbb
jnp
pop
inc
mov
add
test
nop
lea
dec
pop
jg
inc
xchg
stc
loopne
mov
mov
sub
frstor
pop
push
les
jl
cmpb
lds
sbb
fistl
cmp
mov
in
cltd
addr16
loopne
out
pop
outsl
pop
push
adc
imul
mov
lret
cmpsl
rcll
mov
push
repnz
jb
scas
lds
xchg
das
push
and
test
ljmp
and
fwait
mov
loop
mov
pop
dec
xchg
jno
int
fisubl
mull
mov
fwait
dec
ret
dec
fcomps
pusha
movsl
je
repnz
push
jmp
leave
mov
ret
js
leave
or
aam
pop
inc
mov
cmpsb
mov
mov
pusha
ret
xchg
and
sbb
inc
jo
or
xchg
pop
xchg
jne
and
fildll
or
mov
paddsb
js
mov
dec
scas
inc
sbb
inc
test
cmp
or
add
sub
loopne
cwtl
inc
repz
jns
ja
adc
fsubrs
movb
and
psubusw
mov
out
enter
ficoml
movsl
aad
nop
enter
sar
adc
dec
pop
inc
cmp
cs
mov
or
fs
fdivp
cmpsl
xchg
pop
jne
lret
out
push
push
sbb
mov
lods
pop
ja
jge
inc
mov
add
js
sbb
fidivs
mov
out
in
sub
mov
and
and
sub
dec
ja
mov
fisttpl
xor
pushf
call
out
cmp
add
jo
push
xor
and
inc
mov
adc
cmovp
stc
or
push
aad
adc
or
mov
mov
sub
xchg
insb
push
aam
aad
sub
sbb
pop
dec
test
xlat
bound
es
or
rorb
or
aaa
cld
test
repz
test
and
int3
pop
ror
jge
jmp
xor
leave
or
iret
mov
nop
subl
stc
out
and
jmp
jg
mov
mov
sub
mov
pop
jae
push
pop
xor
out
aaa
jl
sbb
mov
repz
mov
inc
adcb
cmp
rorb
loope
jbe
push
cld
clc
movb
lret
movb
lock
popa
fdivrs
es
ljmp
lahf
dec
popf
push
xchg
mov
ss
in
dec
in
sbb
sub
dec
cmp
mov
or
sarb
imul
popf
jae
or
push
dec
jns
test
data16
das
jl
cmp
popf
loopne
pop
in
cli
ret
mov
pusha
repz
sub
enter
sub
ret
pusha
lahf
inc
sub
push
imul
push
jp
sub
cmp
jle
mov
outsl
inc
faddl
or
ljmp
mov
notl
mov
xor
cmc
xchg
nop
push
call
aaa
int3
and
mov
rorl
icebp
frstor
mov
addr16
fdivrs
insb
aam
push
mov
dec
mov
mov
repnz
jge
scas
lret
xor
cmp
add
in
leave
mov
add
fwait
push
cmp
mov
mov
sbb
addr16
push
mov
jp
add
call
enter
sbb
mov
rol
xor
or
jo
in
insb
inc
pushf
ljmp
or
cmp
icebp
xchg
stc
jae
sub
jb
xchg
xlat
adc
push
sbb
add
sbb
add
lret
outsl
test
cltd
gs
test
lea
adcb
sub
mov
add
inc
jns
push
dec
pop
addr16
sub
loope
or
push
popl
push
cli
enter
mov
in
nop
loop
inc
sub
sahf
cmp
inc
sbb
cmpsl
push
push
cmc
icebp
dec
stos
or
jp
lds
aaa
lds
mov
arpl
lds
sub
fmul
lahf
adc
mov
and
inc
sbb
out
jecxz
or
scas
mov
mov
mov
sbb
mov
jbe
mov
scas
mov
outsb
and
and
pop
sub
mov
aam
stos
cltd
icebp
add
xorl
xor
jns
imul
ret
pushf
pop
add
dec
pop
add
lea
enter
inc
mov
mov
das
or
and
rcl
shrl
aad
pop
mov
jmp
xchg
xor
dec
push
repnz
scas
cmc
sub
mov
in
cmpl
shlb
int
jno
add
mov
mov
rcll
outsb
stos
lds
or
push
cltd
sbb
jp
mov
inc
daa
sub
insl
loop
mov
mov
popf
and
in
xor
stc
stos
add
or
sbb
dec
sub
into
xchg
icebp
mov
xchg
addb
xchg
mov
or
movsl
js
std
shlb
cmc
out
sbb
mov
lods
loop
push
pop
scas
pop
fistps
mov
cmp
test
lcall
testb
mov
pop
add
aad
push
in
dec
lret
lods
push
popf
imull
xor
cmp
sub
inc
call
inc
cmpsl
sbb
cmpsl
dec
jle
iret
test
jnp
jb
nop
ret
sarb
subb
dec
rorl
jne
pop
pop
insb
mov
jecxz
shlb
imul
push
mov
outsb
mov
lods
inc
and
mov
push
pop
stos
xor
cmp
xor
or
mov
inc
inc
aad
negl
cwtl
inc
jmp
fwait
cmp
jne
dec
jge
dec
mov
ret
scas
fadds
clc
icebp
pop
int3
dec
or
int
and
fs
jecxz
rorb
inc
jg
outsb
scas
sahf
fmull
fsts
icebp
aam
fisubl
xor
adc
adc
add
xchg
pop
mov
sub
test
xor
test
nop
popf
les
mov
mov
jge
pusha
scas
out
sti
xchg
inc
mov
jge
jno
lret
aas
cmp
or
or
dec
pushf
jmp
loop
mov
clc
xchg
mov
dec
arpl
das
aaa
les
inc
and
fcomp
icebp
pop
sbb
or
xorb
aam
push
imul
repnz
sahf
jmp
inc
fcoml
adc
pop
shll
into
pop
xor
mov
jmp
arpl
testl
adc
iret
xchg
jnp
inc
lds
iret
push
xchg
enter
mov
ret
inc
scas
dec
lods
outsb
divl
and
es
inc
dec
dec
mov
shlb
mov
jmp
mov
sub
ja
jl
sub
xor
cmc
sub
fstps
dec
sti
or
mov
repnz
leave
mov
xchg
cli
sub
mov
mov
int
cld
ret
repnz
push
popf
fcmovnbe
hlt
sahf
cmpsb
sbb
icebp
jnp
add
cmp
orl
xchg
cmpsb
push
jmp
sub
cmp
cmpsl
mov
pop
repz
pop
push
jg
outsb
pushf
add
cmpxchg
pop
test
fldl
fldt
lea
xlat
adc
add
stos
mov
mov
push
pop
pop
mov
in
xor
cli
xchg
ss
pop
jge
sahf
lock
pop
sbb
out
fwait
adc
rclb
sbb
pop
aam
xchg
movsl
lret
dec
cld
repz
rolb
mov
in
mov
mov
inc
ret
ficoml
outsl
add
andl
xchg
ja
xchg
cli
jae
popa
cmpsb
mov
gs
loopne
out
pop
out
pop
fsubrs
xchg
addr16
inc
pop
stc
pop
fadds
in
fnstcw
and
or
push
test
out
imulb
arpl
fistpl
stos
pop
loopne
mov
popf
sub
dec
xchg
cmp
cmp
sahf
pop
cmpsb
ret
xor
dec
in
xchg
mov
push
jo
mov
push
movsb
inc
stos
mov
push
jbe
rcll
out
sub
popa
xor
xchg
jecxz
xchg
out
idivl
cmp
add
rcll
out
xchg
cmp
xlat
mov
test
js
mov
rclb
int3
mov
jl
xor
add
int
pop
mov
enter
mov
aam
fs
sahf
mov
fimull
push
notb
rolb
add
jnp
pop
popf
cmp
dec
push
or
gs
imul
jmp
add
lods
or
mov
cli
sbb
fnstenv
in
mov
clc
fldenv
push
rcrb
imulb
stos
fscale
jne
mov
fs
or
inc
jmp
mov
lods
inc
or
out
xchg
sub
es
and
outsb
pop
lret
xchg
push
jne
andb
movsb
xor
push
movsl
arpl
jle
lea
in
lcall
push
add
addb
lods
arpl
adc
repz
mov
mov
lock
mov
xor
pop
cmc
repnz
stc
xor
xor
adc
fldenv
rclb
jbe
and
dec
popa
xchg
insl
jo
shlb
lock
or
cmp
mov
movsb
jb
iret
mov
mov
out
add
sbb
insb
imul
xor
mov
std
fcompl
push
add
push
jmp
outsb
cmp
jle
arpl
dec
leave
dec
repz
adc
repnz
adc
push
shrb
push
mov
add
pop
movsl
clc
sar
test
daa
mov
push
dec
bound
daa
xor
loopne
fldenv
out
test
out
in
ret
push
mov
jbe
mov
cli
inc
xchg
popf
iret
sub
xchg
and
and
jecxz
jbe
mov
cmpsl
xchg
mov
fwait
cmpsl
sahf
mov
mov
test
pop
cld
mov
dec
hlt
sbb
jns
and
or
out
cs
lds
lcall
cld
repz
incb
mov
fs
jnp
xor
dec
fsubrs
ret
fsubrl
inc
movsl
or
mov
or
pop
int3
lods
enter
pop
jnp
inc
mov
movsb
cmp
popa
cmpsb
pop
jl
movb
sub
inc
sub
pop
divb
loopne
or
mov
iret
adc
dec
mov
lods
repz
jae
add
mov
ss
pop
movb
rol
cmpsb
insl
mov
add
cmc
and
sbb
int3
popa
dec
pop
sub
xor
lcall
pop
roll
call
adc
push
fs
shrl
push
adc
xchg
shrl
imul
ds
pop
aam
push
in
sbb
enter
pop
in
adc
jns
nop
mov
mov
jns
push
dec
stos
adc
or
adc
cld
or
adc
fstpt
stc
fdivrs
or
mov
pop
adc
bound
mov
or
mov
ljmp
gs
jg
mov
ljmp
xchg
mov
mov
mov
pop
push
in
lods
xchg
std
hlt
fiadds
sub
and
pop
cli
xchg
jl
xor
xchg
mov
test
cli
cs
test
sub
push
mov
lds
test
sbb
scas
jge
push
jae
lods
lcall
divl
in
mov
daa
mov
cmp
in
rclb
pop
jo
cmp
incb
mov
shll
dec
inc
test
xchg
test
and
xor
aaa
ret
pop
or
sub
and
push
cltd
rclb
push
mul
fs
pop
cmp
popf
xchg
fcompl
mov
shrl
arpl
jnp
and
xor
stc
in
inc
daa
push
and
mov
es
mov
pop
xchg
push
icebp
loop
or
mov
xchg
xchg
pop
pushf
in
cmp
jecxz
mul
addr16
xchg
xchg
mov
loopne
jecxz
jno
sahf
mov
xchg
jg
push
add
jne
mov
fstpl
into
mov
sub
int
xchg
scas
mov
pop
mov
sbb
jnp
or
jp
inc
or
out
xchg
or
inc
cwtl
adc
mov
fs
add
sbb
push
mov
mov
mov
mov
dec
mov
jmp
push
xchg
jp
mov
adc
js
jae
ja
les
jmp
inc
xchg
lds
mov
xchg
aad
popf
cmp
es
aad
mov
or
hlt
in
xchg
repz
arpl
nop
imul
imul
loopne
xlat
inc
aaa
cwtl
inc
add
cmc
pop
lods
inc
mov
flds
mov
movsb
sarl
fdivrs
sub
add
bnd
inc
outsb
or
push
or
push
mov
je
loopne
test
sub
cld
xchg
imulb
mov
push
repnz
xor
enter
rolb
or
shll
mov
xor
dec
les
scas
adcb
popl
xlat
mov
dec
pmulhuw
in
pop
jbe
and
sahf
sbb
loope
xlat
or
dec
in
call
rcl
lds
cs
rcr
int3
lret
aad
outsb
pop
cltd
cmpsb
push
cmc
xchg
orb
mov
out
jp
test
add
fsub
cmp
mov
iret
xabort
mov
cmp
cmp
xchg
les
arpl
push
xor
sbbb
stc
scas
out
xorb
fwait
addb
adc
mov
push
mov
loopne
sub
lahf
sti
sub
imul
push
sub
lea
nop
add
lahf
addb
sbb
jecxz
dec
and
fimull
je
daa
lcall
test
cs
xor
mov
and
in
stos
adcb
rorb
lcall
pusha
sbb
sub
in
enter
push
hlt
push
fisttpll
ficoml
hlt
mov
adc
lea
or
push
adc
inc
sbb
jmp
xchg
sbb
cmp
lret
push
xchg
ss
pop
hlt
cmp
mov
call
in
push
fidivl
rcl
cmp
jae
pop
inc
ret
lods
fldl
call
xchg
push
sti
inc
push
scas
mov
addl
adc
rorb
scas
inc
jae
cmpsb
mov
sbb
lock
sub
adc
mov
xchg
cmp
sub
sarl
mov
nop
pop
repz
in
pop
push
dec
mov
std
les
push
out
jl
scas
lds
pushf
les
lret
xchg
sub
or
sbb
jnp
insb
jno
sbb
sbb
lret
stos
push
jno
popl
in
or
pop
mov
xchg
mov
loopne
test
sbb
out
cltd
fwait
call
lea
xor
mov
in
cmc
shll
pop
addl
and
pop
sti
test
xchg
pop
xchg
mov
fbstp
xor
clc
leave
in
out
inc
pushf
out
mov
andb
sub
stc
inc
jo
stc
mov
aam
mov
std
and
cli
cmp
stc
pop
adc
cmp
inc
xor
outsb
add
add
fstpl
xor
add
aad
aad
pop
cmp
adc
leave
or
fildl
out
mov
das
sub
and
insl
mov
scas
and
sub
arpl
pop
cmp
cmpb
dec
stos
inc
test
movb
push
xor
mov
mov
inc
inc
stos
pop
add
jno
add
xor
imul
adcl
ss
iret
sarb
jl
xor
ja
cmp
mov
insl
clc
enter
nop
cmp
cli
jae
ss
sarl
dec
mov
test
xchg
test
xchg
daa
pop
mov
pop
loope
sbb
ljmp
popa
pop
pop
pusha
clc
cmp
arpl
push
ret
sub
sub
mov
aad
or
imul
xor
cmpsl
jbe
mov
jns
lret
in
arpl
into
mov
xchg
into
and
cmpsl
in
pop
dec
jmp
xchg
in
orl
jne
mov
movsl
daa
mov
aam
add
push
mov
stc
ss
les
insb
imul
sub
mov
pop
popa
in
lret
mov
adc
aad
adc
test
xor
and
or
sub
push
or
jecxz
add
add
push
xchg
jge
xchg
mov
jl
dec
push
in
stos
dec
lods
jl
jo
mov
adc
cmpl
movsb
and
aaa
push
test
aas
jl
fwait
sbb
cs
inc
insl
mov
jae
or
out
std
cmp
adc
mov
dec
fsubl
sbb
in
out
mov
pop
loopne
xor
or
call
stos
popf
inc
shlb
mov
mov
popa
jecxz
enter
testb
insl
sbb
or
and
imul
mov
mov
pop
scas
xor
cmp
and
cmc
mov
stos
push
repnz
jbe
mov
jp
pop
stc
mov
xchg
or
fucomi
sub
dec
sbb
lret
into
lods
subw
pusha
add
fisubrs
push
adc
mov
xchg
out
sbb
cwtl
and
fs
inc
iret
sbb
std
dec
into
das
xor
cwtl
xchg
mov
leave
jbe
ds
dec
mov
or
int
mov
cmpsl
dec
jecxz
fcmovb
jg
cld
fsts
out
movsb
adc
dec
mov
push
inc
xchg
clc
cli
sbb
cmp
xchg
xorw
into
pop
xor
dec
cwtl
pop
mov
xchg
in
dec
push
fwait
push
push
push
cmp
leave
cwtl
jns
pop
sahf
mov
in
rcr
push
mov
sbb
inc
test
sbb
in
stos
sub
pop
fists
push
lods
push
xchg
pop
dec
testl
test
sub
adc
push
daa
mov
test
dec
out
test
push
cmp
gs
lea
push
push
and
dec
out
in
xlat
sbb
loopne
xchg
scas
mov
adc
push
mov
int
cmp
ret
pop
dec
popf
pop
cmp
sub
inc
push
sub
jnp
fimull
stos
lret
lahf
pusha
ds
stc
fldcw
pcmpgtw
rclb
leave
xchg
push
movsb
arpl
out
adc
sub
pop
outsl
mov
push
xchg
out
fstpt
and
shll
std
outsb
mov
sub
ficoml
leave
adc
inc
divl
xchg
push
adc
ja
push
pop
pop
jmp
xchg
divb
mov
adcl
movsb
lcall
sbb
mov
pop
in
pop
and
leave
hlt
idiv
addr16
xlat
dec
icebp
scas
mov
push
sbb
jns
sbb
cs
and
xor
xchg
sub
mov
push
cwtl
xor
pop
or
lock
stc
push
lcall
imul
loopne
decb
mov
sbb
les
pop
xchg
and
into
arpl
mov
adc
cmp
dec
hlt
cmp
test
push
aas
adc
push
and
add
rcll
cmpsl
cmp
repnz
pop
js
movsb
shrb
sbb
sub
mov
adc
ja
cmp
mov
mov
mov
sbb
push
push
daa
fnstenv
inc
imul
shrb
inc
mov
ret
in
jl
sbbl
ret
lock
inc
or
in
cld
push
jbe
mov
push
or
jp
lds
push
es
sub
sbb
fdivl
push
cmp
std
mov
jle
daa
mov
fnstenv
pop
adc
add
hlt
out
push
push
test
les
add
stc
mulb
test
sti
jb
decb
les
add
mov
inc
jo
mov
or
in
mov
ja
mov
outsb
std
jp
movsl
xchg
les
imul
iret
push
iret
push
repnz
loop
stos
div
sbb
icebp
out
adc
cmpsl
std
or
push
inc
jle
repnz
adc
xor
mov
movsl
jmp
mov
sub
inc
dec
ret
fistl
lock
and
scas
bound
or
imul
xor
out
sbbl
js
sbb
sbb
in
call
xor
pop
scas
bound
add
dec
int3
xor
loope
hlt
add
mov
dec
pop
fdecstp
inc
sbb
lds
or
add
fwait
mov
push
jecxz
pop
mov
mov
fiadds
int
cmpsl
test
and
mov
rcrl
xor
jl
idiv
inc
loop
jp
lea
sahf
sbb
in
jecxz
push
push
outsb
inc
and
mov
ficompl
inc
mov
mov
outsl
sub
lret
das
lahf
cmp
fcomi
pop
pusha
fld
addr16
adc
stos
fwait
lret
std
lock
jne
cmp
stos
clc
out
das
dec
xchg
imul
cmp
push
repnz
push
lret
gs
jae
aam
fildll
push
xchg
mov
dec
mov
push
call
push
cmpsb
mov
push
mov
out
mov
or
add
cmpsb
int3
paddusb
lds
enter
adc
out
inc
jno
mov
adc
stos
or
sbbb
and
add
or
adc
inc
sbb
pop
fsubrl
add
fimuls
adc
lock
mov
out
test
jge
xlat
subl
push
lea
in
insb
cmp
pop
dec
push
sub
jg
push
inc
mov
inc
push
in
push
mov
adc
scas
sbb
ja
xchg
enter
jae
stos
jno
pop
mov
pop
inc
scas
addb
insw
es
inc
add
sbb
inc
cltd
in
faddl
fstps
imul
pop
sub
mov
sbb
insl
xchg
fwait
xor
scas
and
adc
and
fdivs
jg
pop
inc
int3
or
pop
lret
jge
hlt
bound
repnz
imul
push
sub
out
add
inc
repz
clc
jp
inc
mov
int3
push
push
sbb
push
inc
add
leave
scas
jmp
enter
sar
test
mov
add
test
popf
pmuludq
mov
mov
mov
cli
and
imulb
ret
int3
scas
or
mov
jecxz
lahf
mov
dec
pop
subl
push
jecxz
icebp
stc
dec
xor
jl
and
repz
pop
xchg
sub
xchg
push
lods
sbb
fs
fmuls
into
movsl
movsl
fiaddl
in
je
repnz
push
out
pop
arpl
les
mov
aas
shl
sub
push
mov
adc
fnstsw
dec
ds
adc
cmp
testl
aad
mov
mov
ret
std
std
orl
mov
cs
ja
pushl
lock
pop
mov
cmp
jmp
sub
fsubs
pop
lock
xorl
stc
nop
aam
mov
adc
lret
xorl
mov
fcoml
sbb
test
std
push
cmp
enter
and
data16
sub
jp
dec
cmpsb
incb
or
xchg
mov
loope
xchg
mov
mov
mov
shr
mov
mov
push
pop
outsl
cmp
fildl
scas
sbb
in
sub
stos
ret
test
sarb
fs
loope
xor
sbb
popf
add
fwait
xchg
and
test
enter
push
or
mov
pop
les
hlt
cmp
gs
jmp
push
xorb
push
dec
sub
out
orl
cmp
insb
cmp
mov
cmpsb
or
dec
xlat
jecxz
fwait
cmp
xchg
jmp
into
push
push
imul
pop
repnz
push
or
inc
sbb
jbe
jp
stc
xor
push
mov
push
leave
jnp
cmc
stos
or
aad
add
insb
mov
fcoml
lret
into
xchg
inc
mov
shl
jnp
xchg
dec
loopne
loope
push
ss
push
sbb
ljmp
mov
adc
push
aad
sbb
xchg
adc
dec
int
out
stc
dec
dec
mov
mov
js
or
mov
and
jl
out
lock
test
pop
push
xor
test
xchg
add
shl
lcall
or
scas
mov
imul
push
mov
xor
adc
stos
mov
mov
orb
mov
cmc
test
pop
fcmovb
das
adc
imul
pop
arpl
cmp
nop
push
xor
push
pop
sbb
xor
incl
xorb
sahf
notb
sub
insl
jns
inc
jg
mov
pop
cmp
push
push
adc
call
cmpsl
inc
pop
cmp
pop
sahf
popa
gs
xlat
jo
das
lcall
js
cltd
subb
push
mov
nop
mov
shrl
pop
call
xchg
or
pop
mov
sbb
xlat
mov
jae
mov
dec
popa
xchg
bound
fs
sub
adc
pop
cwtl
pop
aas
insb
jne
std
mov
push
clc
rcll
dec
adc
cmpsb
hlt
mov
sub
and
out
jg
mov
sbb
ljmp
repnz
mov
into
pop
sub
addr16
fstpt
fwait
jne
sbb
orb
mov
mov
orl
dec
dec
mov
mov
sbb
divb
cli
out
cmp
leave
sbb
loop
in
out
ficompl
mov
mov
push
outsb
add
inc
cld
dec
mov
inc
enter
mov
or
fcoml
arpl
lcall
inc
cwtl
aaa
test
lea
xchg
mov
scas
inc
rolb
jp
nop
mov
out
pop
mov
dec
jmp
mov
pop
jnp
in
decl
pop
gs
popa
xlat
mov
dec
mov
es
fwait
xlat
aaa
loopne
enter
inc
int3
sub
xchg
je
lret
shll
int3
repnz
in
mov
cmp
add
test
add
data16
rclb
mov
push
dec
not
jb
ja
fstl
inc
cmpb
sbb
and
nop
jle
adc
ljmp
mov
dec
aad
mov
pop
sub
ss
cltd
stc
cmp
push
mov
rolb
dec
lret
pop
pop
loopne
jbe
movsb
fldcw
fsubrl
xlat
divb
cmp
push
fiadds
shr
mov
das
push
jle
loopne
lea
cmp
add
push
cmp
sub
mov
jmp
mov
sbb
jb
push
cmp
fbstp
nopl
pop
aas
mov
pop
subl
push
fucom
cmp
or
fildl
in
xor
add
lret
add
xchg
movsl
jle
shrb
xchg
icebp
mov
cmp
jo
push
int3
jno,pn
getsec
ds
stc
push
push
jl
push
add
adc
xor
ds
push
addr16
icebp
lret
ja
xor
xor
push
scas
cmp
repnz
mov
cmp
cmp
sbb
adc
jno
aas
inc
cs
cwtl
test
mov
cmp
mov
xchg
imull
add
cmpsb
mov
fs
dec
lods
push
divl
push
xor
bound
stc
arpl
add
cmpsb
fldpi
mov
fisubrl
and
xchg
xchg
notb
aas
cltd
or
xchg
fldt
push
inc
iret
cmp
mov
repz
push
xor
movsb
jecxz
sub
and
dec
mov
or
gs
je
lock
sub
pop
daa
jo
stos
xchg
lea
cltd
shrl
xor
jns
cmpsw
stos
push
push
add
push
mov
out
pop
mov
repz
clc
and
xor
lret
arpl
dec
sbb
lret
scas
add
xor
ds
mov
jb
les
mov
ficoml
ret
add
das
pop
and
mov
cmpsl
dec
adc
inc
adc
pop
loope
cmp
mov
lcall
outsb
in
js
or
inc
jg
adc
leave
push
in
cmc
lds
mov
inc
ret
pop
xchg
inc
push
adc
push
dec
movsb
test
cmp
out
ja
call
mov
imul
mov
push
xor
aaa
setg
xchg
scas
pop
push
inc
cmc
xchg
jne
mov
pop
xor
sub
outsb
imul
aad
aas
push
imul
mov
call
inc
arpl
loop
inc
sub
xor
les
popf
movsl
xlat
pop
or
rcll
mov
sub
sub
clc
jp
mov
in
fwait
mov
mov
xor
add
pop
dec
jl
or
jle
mov
add
loop
std
sub
xor
mov
ljmp
scas
add
loope
bswap
out
mov
pop
inc
mov
mov
pop
and
movsl
mov
out
push
push
orl
rcrl
jle
cmp
mov
or
push
sbb
and
xor
stos
rcll
dec
push
or
repz
fdivl
and
sub
movsb
addr16
clc
adc
mov
rcl
lcall
sbb
pusha
mov
fnstcw
xor
sbb
test
test
sahf
mov
sbb
inc
scas
aad
push
loop
gs
sbb
cli
dec
push
out
push
xor
test
ds
lcall
inc
inc
stc
hlt
icebp
fidivs
mov
jg
add
pushf
pop
int
fidivs
mov
inc
xor
bound
les
das
fisubl
push
int3
out
cmpsl
arpl
cs
pop
sbb
sbb
xchg
pop
and
jne
dec
call
push
push
sub
icebp
call
jp
push
and
gs
das
bound
xchg
int3
push
cmpsb
xchg
xor
mov
cltd
loop
push
xor
and
in
push
nop
ret
xchg
jg
sbbb
notb
sbb
pop
jmp
aas
in
fistpll
ret
scas
mov
stc
inc
mov
stc
imul
mov
aad
sub
stc
xchg
add
popf
stos
inc
out
jg
sbb
sub
mov
je
cld
stc
cld
fprem1
jg
out
xchg
stos
arpl
fld
idiv
sar
cltd
mov
out
inc
sub
xor
jg
pop
cmp
fdivl
leave
outsb
in
rcr
mov
mov
sub
jl
sub
xchg
gs
int3
adc
xchg
push
and
add
and
lods
adcl
scas
sbb
in
pop
lock
mov
out
cmp
xchg
int
outsb
pop
cmp
in
mov
sub
cmp
fisubrl
inc
add
xor
cmp
add
mov
and
push
jle
divb
cmp
ds
repnz
leave
push
in
xor
sti
or
clc
cmpl
stos
test
push
mov
mov
jmp
push
scas
pop
and
insl
hlt
insl
pop
mov
cwtl
cs
or
jg
pop
mov
call
inc
popf
push
push
push
mov
adc
dec
dec
mov
inc
sub
pop
jmp
leave
adc
mov
jns
jge
in
cs
test
pusha
pushl
inc
adc
enter
fs
clc
test
jne
push
out
mov
sub
add
test
pop
gs
lret
cmp
in
mov
push
dec
rcrb
push
push
adc
mov
mov
mov
dec
movsl
into
adc
lahf
enter
test
ljmp
jmp
daa
enter
stc
inc
bound
in
xchg
imul
xchg
mov
jmp
and
lods
je
gs
sub
add
lea
dec
les
mov
mov
hlt
dec
std
aaa
xchg
jbe
jae
addr16
push
ja
mov
outsb
outsb
and
cmc
xor
mov
ret
pusha
clc
xchg
cltd
xor
sahf
shrl
cmpsl
stos
adc
sbb
fs
pop
or
or
adc
inc
sahf
outsb
cmc
daa
sbb
je
xor
xchg
add
ds
fmul
out
dec
aaa
jge
and
les
mov
xor
mov
and
les
es
and
lahf
mov
es
push
clc
cltd
cmpl
jl
xor
mov
inc
pusha
jp
das
movsl
iret
xchg
inc
mov
mov
fiaddl
ljmp
mov
and
pop
jmp
jo
aam
jmp
jne
or
stc
mov
fistpll
pop
decl
pop
jbe
push
mov
mov
cs
lret
clc
sbb
stos
push
in
mov
push
insl
dec
push
imul
inc
scas
sub
cmp
dec
jle
mov
dec
mull
jle
and
jno
das
fbld
hlt
adc
lods
data16
movsl
sub
push
sub
popa
roll
lret
movhps
in
js
dec
rclb
jno
nop
jb
mov
push
repnz
sub
stos
cmp
push
pushf
fmul
mov
and
and
out
int
cltd
dec
pop
sarl
test
adc
sbb
push
out
cmp
mov
test
xchg
bound
jmp
mov
dec
xlat
mov
and
mov
and
add
sbb
xor
xor
cld
xchg
cltd
fcoml
xchg
into
sbb
dec
negl
fstpt
xor
dec
xor
pusha
mov
mov
sbb
loop
aaa
inc
mov
out
adc
mov
dec
dec
ret
div
push
movsl
lods
inc
push
loope
in
sub
xchg
pop
mov
push
jno
incl
xlat
xchg
ret
sub
mov
xchg
inc
imulb
adc
in
scas
mov
repz
pop
mov
dec
in
addr16
push
pop
sbb
xlat
cmpsb
test
icebp
repnz
aam
jb
dec
fwait
movsb
adc
hlt
push
aad
pop
cs
xchg
mov
sub
fmulp
mov
hlt
push
test
dec
inc
push
lahf
lret
test
sbb
mov
sbb
inc
xchg
add
xor
lahf
xor
lock
cmp
mov
sbb
movsl
adc
add
inc
inc
or
lds
outsl
and
sbb
cmp
cmp
xchg
dec
and
loopne
stc
imul
sub
icebp
cs
cmp
daa
into
int3
sbb
dec
ret
int3
insb
add
push
jg
icebp
fldl
inc
in
xchg
or
sub
add
arpl
in
rorb
movsb
add
xchg
gs
rcr
sbb
out
pop
add
loope
les
in
xchg
mov
push
in
into
dec
push
imul
das
cli
jno
mov
out
xchg
sbb
or
idivl
inc
push
rcrl
mov
lds
dec
imul
aas
scas
inc
push
enter
int
jae
push
push
int3
pop
clc
inc
les
xlat
xchg
out
popf
repnz
mov
push
lea
cmp
adc
lcall
sbb
jl
scas
movsl
mov
aam
or
push
sbb
in
ret
push
sub
push
mov
fstpt
repz
out
xchg
add
and
xlat
imul
add
shl
test
cmp
and
ss
xchg
mov
jbe
fcomps
in
imul
mov
inc
aaa
andl
ret
inc
rcl
push
clc
arpl
ss
sub
stc
movsl
fsubs
xchg
push
mov
je
in
lds
adc
adc
pop
dec
je
jo
pushf
sub
insl
popa
fildll
mov
aam
mov
int3
adc
fcoms
push
faddp
jmp
mov
stos
je
jecxz
mov
outsl
adc
std
mov
sbb
adc
fadds
and
ret
xchg
or
pop
jge
push
xchg
adc
xchg
into
movsl
mov
scas
xchg
push
push
dec
or
fldcw
test
lds
jge
xchg
inc
bound
cmp
stos
shlb
or
or
cmp
xor
push
push
adc
mov
mov
imul
mov
mov
pop
fcoml
push
push
dec
lahf
or
div
shld
aam
inc
cmp
cwtl
nop
int
and
negl
sbb
mov
fs
mov
sub
dec
mov
add
or
rclb
cmp
inc
addb
sub
xor
ds
adc
lea
ret
mov
ret
rorb
pop
mov
repz
loop
xchg
arpl
inc
test
jb
add
xorl
or
aaa
xlat
ja
sub
jbe
pop
cmc
mov
jge
mov
cmpl
jne
sbb
mov
clc
ds
sbb
data16
mov
mov
push
cltd
mov
sbb
inc
ss
pusha
adc
xchg
gs
xor
and
addr16
fsubrs
xchg
mov
sbb
in
xor
jb
cmp
addb
nop
scas
mov
adc
scas
xlat
mov
sub
mov
les
lds
sub
in
or
xlat
pop
hlt
pop
cmp
fsubrs
sub
add
outsl
lods
pop
rcrb
pop
int3
cmp
mov
cli
or
sbb
imul
mov
mov
arpl
packsswb
push
in
loop
mov
jge
pop
mov
fcmovu
add
roll
icebp
cmp
mov
arpl
push
fwait
cmp
in
loopne
inc
xor
icebp
lods
inc
and
add
mov
roll
loopne,pt
and
or
jo
add
push
jns
jno
das
ret
outsb
ljmp
jmp
scas
jnp
push
sub
cmpsl
sbb
mov
jge
inc
imul
ja
in
enter
ja
lea
mov
mov
xchg
mov
jge
push
mov
rcrb
ror
cmp
xlat
push
sbb
dec
negb
mov
cli
popa
out
add
mov
mov
std
lcall
xor
arpl
pop
jno
inc
and
je
imul
mov
mov
fcompl
lret
lods
outsl
nop
repnz
dec
adcl
inc
ss
push
xor
cmp
mov
sbb
bound
and
jmp
imul
sbb
jp
adc
and
mov
es
fsubr
test
mov
ds
pop
lcall
push
cmpsb
and
add
clc
ret
ret
cmp
xor
leave
xorl
mov
sub
outsb
and
mov
jo
stos
ja
xchg
sahf
push
jl
mov
jne
jecxz
pop
mov
or
mov
icebp
adc
lcall
in
pop
addb
fisubl
mov
sbb
xor
dec
cmp
stc
xlat
cmp
mov
int
xchg
rcrb
mov
push
aam
adc
insl
xor
sub
xor
mov
subl
js
add
adc
lock
mov
pop
jno
mov
sbb
stc
popa
adc
data16
in
mov
or
std
mov
lods
xchg
add
dec
inc
inc
ret
push
aam
adcl
jae
mov
shl
cmpsb
pusha
fwait
ss
lods
pop
mov
jp
push
xchg
push
sbb
jp
dec
mov
mov
add
sub
ds
sbb
pop
add
je
or
mov
js
pop
ja
cmp
mov
scas
mov
orl
mov
fwait
in
xchg
testb
sub
and
jae
cmpsb
pop
inc
pop
xlat
rcll
push
sub
insl
lahf
sub
imul
fs
adc
mov
xor
rolb
rolb
mov
push
pusha
fisttpll
mov
lds
dec
mov
push
xor
mov
sub
push
add
insb
xor
xor
cmp
ds
mov
xorb
cmp
jl
fidivrl
mov
ljmp
or
mov
insl
mov
xchg
cmpsb
mov
stos
mov
pushf
sub
pop
fistpl
cltd
fcomps
and
out
or
mov
jge
fildl
mov
in
mov
sbb
pop
daa
loope
push
into
in
nop
fcomps
popf
out
mov
xor
stos
add
jle
test
mov
xchg
mov
lock
rclb
mov
stos
test
inc
aam
ja
inc
jne
mov
mov
outsb
stc
mov
sbb
or
mov
add
sub
push
aas
mull
xchg
mov
movsb
ret
mov
aad
push
xor
mov
testl
pusha
inc
pop
add
xlat
int3
xchg
mov
call
into
aaa
in
aas
push
and
aaa
xor
cmpsb
ss
or
fldcw
cmp
out
dec
in
jno
push
xchg
mov
cld
fisubrl
aas
negb
cld
in
or
push
xor
dec
repz
mov
cmp
and
hlt
pop
push
pushf
lds
call
clc
rorl
dec
out
clc
push
xchg
mulb
call
adc
jbe
push
dec
xchg
test
rcr
hlt
and
cld
dec
or
adc
fstp
addr16
inc
jmp
dec
leave
pop
call
loopne
lea
mov
stc
jno
cmp
mov
xlat
mov
pop
mov
adc
lahf
out
inc
mov
es
push
aaa
push
push
mov
je
nop
xchg
in
fldl
jb
add
pop
inc
stos
pop
and
dec
mov
pop
lcall
mov
cmpl
enter
push
lahf
cs
popf
mov
dec
pop
or
cmp
adc
ret
push
xchg
inc
xlat
lret
sub
pop
outsb
in
xchg
andb
push
ret
adc
inc
sbb
cmp
mov
jge
int3
push
dec
pop
add
pop
adcl
push
pusha
jo
sub
cmp
lret
inc
imul
pop
add
rorb
ja
or
int3
cmpsl
ss
es
dec
inc
ss
out
cmp
mov
and
inc
xchg
addr16
xor
jbe
fistpl
ds
jns
jl
pop
dec
xor
add
xchg
or
mov
pop
dec
lock
scas
cmpsl
sub
fnop
ret
push
push
mov
pop
inc
jecxz
shrb
xor
cmpsb
mov
sbb
cmp
insl
pop
inc
cmp
out
xchg
inc
loop
test
movsl
xchg
cmp
mov
add
dec
mov
jmp
xchg
movsl
rorl
or
pop
push
movsl
fcmovu
nop
push
cmp
ja
push
loope
icebp
jge
inc
xor
push
icebp
test
push
dec
stc
jge
lret
and
cmp
add
xlat
push
dec
mov
cld
cmp
or
xlat
cmpsb
sahf
les
jbe
das
add
jns
repnz
pop
inc
adc
pop
mov
adc
jb
cmp
icebp
out
cs
addl
test
and
cmp
movsl
pushf
insb
rcrl
push
jb
add
daa
sub
mov
loop
adc
cmp
in
int
add
pop
push
and
add
cmp
pop
stos
dec
imul
xchg
xchg
mov
inc
movsl
inc
sbb
mov
out
fwait
and
ss
sbb
mov
jnp
adc
add
pop
in
call
xchg
inc
dec
jno
int
inc
add
in
mov
in
pop
filds
mov
xchg
out
inc
pop
js
xchg
mov
xchg
and
cmp
lret
xchg
roll
add
mov
out
adc
and
mov
adc
push
and
scas
xchg
xchg
dec
lea
sbb
les
in
xor
inc
test
xor
arpl
push
push
cmp
js
and
xchg
xchg
jnp
idiv
imul
ficoml
or
mov
pop
mov
nop
scas
mov
std
std
dec
or
mov
pop
ret
stos
mov
ljmp
fs
xchg
and
std
inc
and
hlt
fildl
sbb
cltd
iret
adcb
fcomi
sbb
jecxz
jge
mov
mov
xchg
push
dec
jno
ret
xor
and
cmpb
das
imul
scas
mov
push
jmp
dec
leave
or
ret
xchg
lret
not
pop
mov
and
scas
clc
leave
sti
decb
fcoms
int
sarl
scas
lods
push
mov
je
arpl
mov
push
in
fstpl
aad
and
adc
adc
inc
mov
and
loop
ss
scas
adc
mov
rolb
adc
fstl
shrl
fldenv
popf
push
add
push
xchg
adc
add
loop
rorb
fstps
push
cld
outsl
fldz
scas
jmp
add
int3
imul
jle
pop
or
jmp
adcl
adc
mov
in
jne
test
xchg
out
push
jne
inc
lods
das
ds
cmp
int
sbb
mov
ret
sub
sbb
pop
cmp
cs
stc
imul
xor
dec
shll
je
lret
cmpl
mov
daa
and
inc
mov
hlt
sub
inc
cmpb
sti
call
cmc
fcomps
jns
mul
xchg
sub
call
cwtl
lahf
xor
int
xchg
mov
xor
mov
mov
daa
mov
inc
daa
add
gs
mov
aas
cmp
mov
jl
add
push
test
insb
cmp
sahf
aam
sub
int
xchg
fdivr
add
stos
gs
dec
movsl
out
sub
daa
dec
div
or
fs
cmove
std
mov
jbe
out
jb
xchg
enter
fs
stc
push
mov
dec
hlt
dec
push
lret
mov
sub
fimuls
ljmp
inc
das
cmp
inc
leave
ds
mov
xchg
je
pop
or
repz
jg
mov
lods
ja
mov
stc
hlt
imul
xchg
out
out
pop
xchg
mov
jle
mov
mov
lret
sbb
imul
or
pusha
pushf
out
in
inc
adc
jbe
and
cli
or
pop
adc
fcoml
fcomps
fidivrl
ja
hlt
lcall
test
sbb
jb
leave
jle
jmp
xchg
and
and
in
jo
es
ror
lock
xchg
xor
out
dec
fisubs
jle
jae
mov
jb
jl
ja
rcl
mov
ds
jno
cltd
mov
xor
dec
fimuls
xlat
add
pop
scas
fwait
out
insb
cltd
adc
jge,pn
iret
fnsave
jbe
in
aaa
cmp
dec
mov
pusha
lcall
add
push
xorl
mov
push
jg
xor
rcr
and
sti
adc
xchg
insl
xor
mov
xchg
jne
addr16
push
fdecstp
xchg
and
xchg
xor
sub
fisubl
lods
inc
arpl
xchg
and
out
dec
mov
pop
fisttpll
popa
into
jae
mov
bound
or
push
aas
imul
mov
xchg
add
imul
outsb
sub
dec
adc
shlb
cmpsb
mov
fldenv
jmp
push
sbb
addr16
lods
fstpt
es
in
mov
stos
dec
pop
js
mov
es
jl
ss
xor
addl
jae
loop
outsb
inc
sub
in
inc
sbb
mov
or
pop
add
mov
and
sub
sub
and
cltd
mov
and
pop
pop
idivb
loop
or
dec
int
push
sub
andl
mov
xchg
enter
aam
sbb
xor
cmp
shl
repz
bound
mov
add
addr16
mov
jg
mov
xor
popf
inc
sbb
adc
mov
mov
clc
cmp
loop
jge
mov
lcall
loope
sbb
sub
lea
lds
lret
mov
outsb
popa
sbb
pop
inc
stos
xchg
movsb
bound
dec
mov
xchg
adcb
cld
xchg
xchg
or
repnz
bound
add
jo
and
outsb
add
shrb
sbb
pop
pop
jmp
mov
cmp
adc
push
fcoms
popf
stos
pusha
adc
ja
enter
ds
pop
sbb
lea
mov
mov
jge
stc
xchg
sub
clc
dec
cmp
adc
mov
iret
mov
outsl
and
sbb
scas
jle
mov
jno
xlat
sub
push
mov
cmpsb
rorl
inc
sahf
dec
dec
push
popf
aam
xchg
sarl
adc
adc
xlat
loopne
insl
leave
and
fldenv
jl
lahf
call
push
out
adc
cli
imul
pop
movsb
mov
jle
gs
cmpsl
es
cltd
fs
loope
rcr
adcb
or
or
rorl
pop
cmp
daa
sbb
shll
mov
sbb
push
dec
ret
xlat
mov
int
in
mov
or
mov
mull
pusha
pop
scas
inc
push
loop
sub
imul
insb
cs
mov
cmp
in
or
jns
pushf
inc
add
out
cli
jecxz
jns
and
fldt
sbb
or
mov
popf
add
pop
icebp
rcrb
dec
adc
inc
sub
in
std
out
mov
scas
cmp
enter
push
out
or
mov
lock
mov
xchg
xor
cmp
push
imul
lods
shrl
enter
jge
xchg
lds
int3
cmpsb
sub
rcrb
push
fwait
shlb
xor
xor
add
jge
mov
push
lods
insl
mov
popa
iret
mov
xchg
push
ss
test
bswap
sahf
frndint
push
jg
mov
sub
into
mov
fcomps
mov
or
ficomps
jmp
sbb
mov
lcall
cmc
psubusw
pop
out
out
sub
mov
ret
pop
dec
xor
xor
int
lock
lea
loopne
aas
lcall
inc
dec
push
ret
cmp
push
stc
or
lahf
aad
adc
xchg
or
or
jnp
loop
push
sbbl
mov
nop
jno
xchg
inc
ucomiss
aad
outsl
aam
jmp
adcl
cmp
push
inc
xchg
sub
ffree
add
lret
ja
xchg
mov
push
pop
push
adc
stos
fdivrs
inc
fsub
push
imul
inc
mov
mov
add
jns
lds
pop
outsb
pop
pushf
dec
test
aaa
imul
xchg
pop
sahf
jne
and
push
in
cmpsb
aaa
cmp
dec
mov
push
cmpsb
jnp
test
and
sbb
leave
in
cmc
cmpsb
push
in
insl
xchg
mov
std
test
xchg
pop
and
es
mov
into
clc
adc
pop
cwtl
data16
push
sub
mov
test
and
clc
push
jno
lret
hlt
hlt
adc
push
scas
test
fstps
dec
dec
xchg
xchg
pop
not
mov
icebp
test
mov
cmp
out
mov
xorl
push
aam
mov
push
addr16
rcll
xor
and
push
scas
nop
sti
push
inc
pop
inc
inc
fucomip
lcall
pop
lods
jmp
into
jle
rcll
adc
into
imulb
sub
inc
in
mov
sar
mov
call
test
or
movsb
enter
cmp
xchg
dec
cli
rorl
sti
or
push
mov
in
dec
jmp
les
rorl
pop
aam
pop
sbb
js
mov
call
pusha
jg
jb
mov
out
out
xchg
cld
sbb
in
mov
xchg
das
iret
out
mov
lods
and
and
in
mov
mov
lret
inc
movsl
pop
adc
jo
xchg
pop
adc
jg
test
in
ret
xor
push
out
mov
xchg
or
cmpsb
aam
ds
stos
pop
pop
leave
xchg
jl
sbb
and
lods
or
das
xchg
push
shlb
cmp
sub
into
lods
fwait
andl
mov
push
imulb
std
subb
xor
outsb
out
mov
and
cmp
outsl
or
imul
push
xchg
sub
in
repnz
arpl
es
cmp
cld
ret
mov
mov
cmp
mov
push
sub
nop
lret
dec
or
jp
push
jns
cmc
addr16
outsb
mov
mov
stos
lahf
mov
push
add
cmp
dec
and
mov
jb
sub
pop
outsb
mov
shr
test
lds
push
in
iret
xchg
xor
xchg
add
cmp
pop
loopne
mov
adc
mov
push
mov
push
or
xor
gs
popf
fidivrs
push
icebp
call
repnz
popa
jl
ja
ss
lea
and
inc
dec
int3
fistl
inc
adc
aam
addr16
push
push
mov
clc
sbb
lcall
fldl
dec
shl
pop
insb
pop
or
fs
aad
test
jle
stos
imul
addb
mov
pop
sbb
mov
mov
dec
lahf
ss
call
es
mov
rcrb
loope
test
outsb
add
cmp
cli
sub
call
or
fisubs
adc
push
cmp
repnz
ljmp
negb
push
and
inc
sti
jge
mov
jno
sbb
in
aam
mov
jg
push
jl
and
cwtl
push
fs
add
div
es
test
fsub
fmuls
sti
push
sahf
fstpt
pushf
mov
or
jno
cmpsl
stos
cs
push
test
aaa
leave
fimull
fidivs
test
imul
mov
roll
xchg
aaa
xchg
xor
sub
subl
mov
pop
rorl
push
adc
mov
repz
nop
enter
add
ret
sbb
sbb
pop
push
mov
push
cs
cmpsb
adc
or
sbb
das
pop
ljmp
lahf
ret
ljmp
add
cmp
add
mov
imul
fs
lahf
insl
cmp
inc
add
ficoms
bound
mov
jg
pop
insb
dec
xor
inc
addb
adc
jns
dec
ljmp
and
movsl
and
popa
inc
jae
pop
lret
lock
fsubr
jns
jmp
sbb
pushf
test
stos
mov
ret
pop
cmc
lret
ja
mul
mov
fs
sbb
lret
pop
lock
and
fsubr
inc
mov
sub
xchg
mov
jle
sub
add
jecxz
cmp
jmp
mov
mov
sub
ud1
mov
jno
dec
test
pop
lods
cli
insl
pop
lods
xchg
mov
stos
cmp
sub
lcall
push
scas
push
sub
push
mov
rcrl
ds
pop
push
push
lahf
and
daa
mov
je
pop
js
repz
int
mov
mov
add
jne
testl
fwait
cmc
sub
pushf
mov
sbb
pop
push
push
fbld
into
jns
xchg
push
inc
out
push
outsl
je
orl
enter
push
insb
or
aas
in
xchg
psubq
sbbb
jno
pop
or
jmp
data16
jmp
in
sahf
xchg
stos
jp
call
cmpsl
icebp
mov
xchg
dec
xlat
jle
out
out
nop
movsl
inc
test
data16
movsl
js
xchg
add
or
pop
jne
inc
idivl
scas
push
pop
das
icebp
cmp
cmp
sub
les
adc
jl
jmp
cmp
pop
cli
add
jecxz
mov
mov
imul
pop
sbb
jecxz
out
pop
mov
inc
lret
mov
sbb
mov
bound
imul
gs
cmp
addr16
lahf
xor
arpl
push
mov
dec
sbb
pop
fidivrs
adc
cmp
mov
xchg
ljmp
popa
leave
hlt
jno
dec
sbb
mov
insb
pop
push
jle
ja
addr16
jecxz
lock
mov
add
scas
cli
sti
mov
push
dec
xor
inc
lea
jle
imul
arpl
push
cmpsb
lods
jnp
mov
pop
xchg
aaa
scas
in
fimuls
sub
repz
arpl
lret
xchg
lret
lock
addr16
idivl
mov
lcall
jmp
iret
mov
call
lock
and
fldcw
sub
xchg
insl
pop
lods
dec
push
push
inc
pop
in
mov
sbb
stc
pop
ret
lret
or
ds
sub
movsl
sub
xchg
mov
push
mov
pushl
jbe
lret
in
cld
in
adc
mov
jbe
testb
jb
cltd
rcrb
aad
in
jo
stos
or
xlat
add
out
jmp
push
dec
dec
div
jg
cmp
sub
dec
and
and
mov
pop
in
roll
inc
sbb
mov
popf
test
iret
cld
adc
and
es
adc
sahf
shr
clc
or
imul
xchg
insl
pop
add
jmp
xchg
aas
iret
xchg
ret
or
lahf
jp
js
std
call
add
rcl
xor
jbe
add
sub
lahf
es
pop
add
jae
and
mov
cmpsb
push
out
sbb
xchg
rorl
dec
pop
in
cltd
sub
sub
lods
push
ds
dec
push
push
stc
repnz
fcmovbe
je
pop
add
mov
lock
bound
xchg
je
fistl
dec
cmp
and
and
jle
pop
mov
cmp
out
test
pop
xor
pop
sub
sbb
or
cmp
mov
push
lea
inc
inc
lcall
sub
stc
fildll
test
icebp
jmp
add
imul
pusha
hlt
movsl
test
push
mov
inc
pop
pusha
ds
fimuls
jmp
push
dec
sub
outsl
js
xchg
push
add
pop
xchg
pop
adc
jno
jge
out
or
or
imulb
push
lock
lahf
mov
imul
mov
or
pop
xchg
aam
push
mov
loop
xchg
jae
xor
nop
lcall
pop
mov
sub
add
push
icebp
sub
pop
out
fcompl
xor
loope
inc
mov
dec
mov
out
inc
inc
das
mov
mov
xchg
outsb
jecxz
dec
push
mov
inc
into
push
pop
mov
call
dec
lcall
sub
dec
fbstp
jge
jo
xor
sbb
xchg
lret
dec
jae
jae
adc
xor
dec
in
clc
jno
loope
insl
mov
ficoml
je
enter
arpl
push
shrb
inc
or
scas
leave
stos
lcall
pop
and
test
inc
clc
lcall
test
push
mov
mov
fs
clc
jl
xor
mov
lods
hlt
xor
lds
enter
adc
and
out
je
sbb
fsubr
mov
bound
xchg
inc
loop
leave
pushf
pusha
or
push
xor
mov
sub
sub
fucomi
jbe
inc
push
iret
xorl
mov
cld
call
cmp
out
dec
sbb
pop
and
sub
lret
mov
sarl
pop
icebp
pop
or
xchg
mov
dec
xor
mov
sub
aaa
test
pop
or
inc
jle
inc
sbb
lret
mov
pop
ret
or
push
test
adc
bound
ret
filds
call
mov
xchg
repz
lods
adc
cmp
decb
inc
enter
stos
imul
xor
mov
jb
lods
push
and
lds
cmpsl
ss
add
cmp
jecxz
aad
pop
add
ljmp
lahf
in
int
lods
push
cs
fwait
jb
insb
loope
jb
in
jmp
inc
pop
mov
dec
dec
cs
dec
call
push
hlt
sti
les
hlt
and
jmp
xor
jne
jnp
imul
int3
or
push
and
xchg
mov
movsl
into
mov
imul
sbb
jns
roll
jmp
inc
sarl
push
lods
arpl
fisubl
cwtl
or
dec
rorl
faddl
aad
pop
test
mov
sbb
cmpsl
add
fsub
fsubr
cmpsl
dec
popa
mov
xchg
lea
mov
mov
test
sub
pop
mov
jg
xor
in
pusha
push
dec
mov
in
loop
push
jg
stc
push
ret
in
lods
sbb
stc
jp
and
mov
inc
lods
mov
mov
jno
addps
add
or
or
mov
pop
rolb
call
jge
adc
adc
out
lret
cmpsl
pop
shl
add
inc
lahf
dec
imul
rorl
aam
ficompl
sbb
mov
ss
fs
rolb
and
mov
ljmp
negl
push
imul
cmpsb
bound
adcl
sub
test
outsl
lahf
add
out
aam
rclb
cli
lahf
mov
sahf
scas
cmpsl
push
pop
cmp
call
andl
xlat
jno
cmpsl
add
stos
nop
dec
add
push
sahf
ljmp
iret
out
hlt
outsl
sbb
pop
cwtl
pop
rolb
test
mov
in
loop
mov
faddl
pop
repz
mov
lret
push
cld
add
pop
pop
mov
repnz
iret
lahf
dec
pop
or
and
shll
mov
push
iret
and
mov
jnp
sbb
pop
cmpsl
imul
dec
loopne
jmp
cmpsl
lret
and
xor
loope
xchg
jg
cltd
fcomi
adcb
mov
push
je
xchg
pop
or
sbbb
cld
dec
add
popf
jae
inc
lret
fadd
xor
inc
rolb
jno
mov
or
push
pop
enter
jmp
stos
cmp
repz
outsl
es
enter
jnp
aas
hlt
jo
aaa
mov
sub
fsubrs
or
sti
jg
mov
pop
sub
pop
mov
and
jnp
repz
sahf
sti
mov
test
push
jns
stc
xchg
loopne
enter
mov
mov
mov
sbb
xor
jne
stc
dec
cmp
cltd
and
int3
hlt
mov
ret
test
enter
cwtl
push
xlat
dec
fldenv
ljmp
aaa
into
testl
push
out
mov
xor
dec
stos
pusha
lret
xchg
filds
cmp
cmp
scas
pop
dec
dec
dec
push
xor
and
cmp
rclb
xchg
jbe
subl
and
out
daa
in
jbe
inc
jge
or
add
cmp
imul
and
xor
hlt
mov
mov
inc
cmc
pushf
jo
jb
gs
repz
or
nop
pop
dec
jo
mov
gs
test
mov
push
adc
pop
icebp
test
addr16
sub
xchg
in
out
dec
ret
bound
mov
jb
dec
mov
adc
jle
jb
push
dec
fs
jo
inc
rcr
jl
cmpsb
outsl
adc
bnd
incb
iret
repz
loope
dec
ds
or
cltd
or
jg
cmp
repnz
cmp
mov
cmp
call
jbe
repz
inc
fnsave
cmpl
sbb
lds
push
hlt
imul
out
lcall
mov
pop
test
dec
pusha
fnstcw
scas
sbb
outsb
sub
adc
rcll
and
jb
scas
hlt
add
push
imul
sbb
les
aad
and
ds
jle
repnz
pop
popa
xchg
leave
sub
dec
cld
popf
xchg
in
dec
out
sar
xchg
mov
stc
mov
fwait
pop
cmp
xchg
inc
mov
popf
xchg
loop
loopne
jle
add
std
sub
cli
dec
mov
push
add
int
popf
pop
inc
mov
inc
inc
cltd
aas
out
jl
cmc
adc
std
ficompl
mov
xor
cmpsb
sti
or
subb
jnp
mov
pushf
sbb
repnz
xor
or
loop
fadds
stc
cli
cmc
dec
cmp
pop
cmc
loop
fdivr
std
cli
mov
sub
push
imul
xchg
sbb
xlat
inc
iret
dec
jnp
sbb
fldt
rcrb
pusha
out
or
int3
call
dec
adc
ljmp
mov
mov
mov
out
data16
movsl
xchg
stos
push
jmp
out
mov
subb
xor
mov
mov
lock
mov
rcl
sbb
cmpsl
sub
int3
insl
enter
in
fs
clc
jge
scas
cmc
cmp
mov
sub
inc
mov
jns
push
clc
mov
bound
jno
dec
fbstp
dec
add
hlt
dec
lcall
mov
scas
jno
ja
mov
xor
sub
cmp
bound
lods
push
and
js
addb
sub
xor
fdivrp
stos
cmp
mov
xchg
xchg
cmp
sub
sub
pop
cltd
mov
inc
or
sub
leave
mov
mov
stos
xchg
mov
cmc
or
fstpt
arpl
dec
mov
jb
inc
movaps
lock
jbe
sub
loop
cmp
lret
xchg
inc
add
addr16
adc
mov
mov
lds
js
xor
lods
std
inc
adc
clc
xor
cmp
sbb
ror
cmp
jmp
insb
fnsave
jle
cmp
cwtl
pop
cmp
repz
cmpsb
ss
movsl
std
je
jns
mov
lret
jbe
adc
jno
mov
xor
in
mov
pop
popa
fdivs
popa
rolb
addl
cltd
push
cmp
stos
leave
lds
bound
add
loopne
cmp
aam
cld
sahf
pcmpeqd
es
fsubp
xor
fstpl
scas
dec
sti
es
repnz
dec
bound
adc
xchg
and
lret
add
xchg
xor
push
xor
in
ret
test
int3
dec
dec
je
ss
test
adc
jns
adc
in
mov
push
stos
ljmp
imul
pop
div
cmc
push
fchs
xchg
cmp
fdivrp
es
les
rcll
push
aaa
inc
lret
ja
scas
fs
pop
pop
out
xchg
loop
mov
jg
cmpl
pop
push
mov
rol
lret
mov
mov
gs
cmp
decl
jae
add
cmp
mov
icebp
cli
inc
mov
filds
es
cli
test
aad
mov
inc
test
ret
ja
xchg
insb
arpl
fcoml
dec
stos
pop
adc
in
sub
cmpsl
leave
lods
jge
outsb
pop
fmull
les
aad
iret
in
sub
loope
mov
lret
je
add
clc
cmpsl
dec
dec
mov
outsb
bound
mov
out
shufps
xor
pop
jge
inc
xor
jae
or
pop
nop
test
push
call
movsb
fadd
cld
cwtl
enter
xor
sub
and
shl
testb
xchg
mov
jg
inc
leave
mov
inc
fisttps
scas
inc
and
jl
lea
fildll
mov
add
xchg
mov
jg
lret
loop
std
mov
xor
in
outsl
ja
push
push
mov
cmp
push
arpl
mov
and
inc
jnp
int3
and
test
iret
gs
jae
pop
addl
mov
lods
data16
sub
stc
sub
stos
ds
jns
popl
imul
shrl
push
flds
dec
dec
jo
dec
sbb
mov
jmp
or
jae
push
or
stos
jecxz
loope
negb
into
enter
mov
pop
mov
pop
add
loopne
lgs
or
mov
rcl
xchg
shrb
iret
push
dec
hlt
mov
cmc
ljmp
push
ret
in
outsb
int
mov
jb
shrb
dec
dec
shrb
out
jne
sar
adc
gs
adcb
mov
int
sbbb
mov
lea
inc
inc
add
je
dec
add
jp
shrb
sbbb
gs
hlt
jmp
sub
inc
mov
or
sub
js
jb
int3
push
or
mov
cmp
mov
sbb
xor
push
leave
test
mov
leave
mov
in
sub
mov
in
cli
pop
lahf
dec
inc
ret
pop
mov
cmp
add
fstp
mov
sbb
fst
inc
sbb
jnp
mov
jp
mov
into
dec
or
push
jns
jp
jo
pusha
pop
dec
xor
push
mov
lcall
inc
fimull
and
cmp
loope
mull
xor
jmp
push
sub
push
push
fs
clc
sub
repz
xor
sbb
les
fisubs
repnz
push
xor
push
repnz
inc
pop
push
mov
jp
stc
jo
enter
scas
jp
ret
sub
cmp
cld
mov
xchg
out
loope
ret
fbstp
cmc
loop
insb
mov
nop
jnp
add
andb
shlb
sbbl
sbb
push
jg
push
pop
jbe
add
cwtl
popf
hlt
nop
push
inc
jb
lods
mov
cmp
xchg
out
aad
push
adc
aas
mov
dec
mov
xor
mov
xor
stos
xchg
in
sahf
xor
push
jae
fnop
fcom
jae
daa
ret
sti
jnp
scas
sub
fpatan
or
push
jg
pop
sub
not
test
mov
out
lea
dec
pop
mov
cmp
jl
inc
inc
fstpt
loop
inc
repnz
add
pop
sbb
pop
cmp
jg
xchg
fwait
enter
test
aaa
into
dec
dec
imul
jmp
lods
cmp
cmp
inc
leave
movsl
addl
cmp
shll
adc
mov
mov
repnz
arpl
sub
cmp
jne
pop
mov
adc
cmp
mov
out
mov
addr16
xor
testl
cmpsl
pushl
cltd
ds
pop
push
lock
lods
aaa
dec
sbb
ja
negl
movl
cmc
in
lock
scas
insl
repz
jns
es
or
mov
sbb
push
and
inc
mov
addr16
xchg
pushf
idivb
lock
xor
mov
jg
movsl
fldt
ret
mov
jns
cmp
mov
enter
mov
ljmp
into
push
mov
jnp
je
lds
lcall
mov
sti
enter
testb
pop
movsb
jo
inc
jecxz
nop
sarl
pop
lea
jno
test
arpl
add
inc
je
popa
in
xchg
test
fists
dec
pop
and
fldcw
and
shlb
or
push
les
cltd
push
shufps
inc
in
pop
pop
pop
cmp
dec
in
out
lahf
inc
rcr
js
or
or
cwtl
jae
pusha
or
pop
call
movsl
enter
scas
shrl
idiv
pop
and
aaa
add
test
lret
cmp
mov
cmp
xchg
adc
cmp
add
xchg
sti
sub
dec
loope
mov
or
push
stos
orb
lea
jmp
inc
int3
adc
adc
pop
loop
aad
ljmp
daa
sub
std
add
in
xlat
fwait
ret
ret
les
repnz
jecxz
xlat
or
xor
shll
adc
push
adc
jb
adc
mov
sar
mov
push
in
loop
hlt
outsb
fdiv
cld
test
dec
sahf
jg
push
pop
leave
aam
pop
cmc
in
out
popa
jl
add
cmpl
scas
add
sub
mov
mov
xchg
fisttps
loop
add
jl
inc
sbb
cld
xchg
aad
lret
adcb
cmp
push
repz
fs
enter
insb
in
stos
ss
sti
sub
lods
mov
lahf
xor
push
cld
and
shll
repnz
mov
mov
repnz
cmovns
sub
ljmp
xchg
xchg
add
dec
jae
movsb
emms
xor
mov
xor
pop
call
and
push
xchg
popf
rorb
push
mov
imulb
shrb
adc
or
push
ficoml
aam
jge
xchg
ljmp
hlt
shl
adc
ret
fldl2t
hlt
inc
inc
sar
push
es
xchg
lcall
test
aaa
push
in
inc
into
dec
or
loopne
jo
adc
cmpsl
xor
scas
push
dec
mov
push
cmpl
out
xor
mov
out
fistl
test
sub
xor
mov
fsubrl
cmpsl
ja
shrl
and
clc
mov
push
ffreep
lods
loope
stos
aam
cmp
loopne
push
push
fdivrp
jnp
loopne
incl
xchg
out
sbb
inc
test
in
aaa
loopne
push
adc
cmp
xchg
jge
clc
mov
sti
rolb
mov
mov
xlat
jnp
shlb
dec
or
movsl
cmpsl
jmp
dec
out
fwait
aaa
rorb
and
jecxz
mov
jp
jmp
repnz
xchg
xchg
dec
sbbb
nop
mov
cmpsb
cmpsl
fmul
jmp
mov
push
repz
stos
test
cmpsl
insl
data16
stos
push
ret
std
out
xchg
sub
out
jg
xchg
or
push
jne
push
mull
pop
shll
loop
aam
mov
test
dec
in
mov
dec
cmpsb
sbb
sbb
fldenv
sbb
jae
dec
push
cmp
dec
mov
popf
pusha
aad
out
mov
mov
cmp
fwait
sahf
insl
push
xor
gs
test
sbb
or
xor
mov
leave
xor
cs
push
mov
jl
jl
jecxz
test
stos
outsl
ljmp
mov
sbb
out
inc
mov
mov
sti
push
daa
push
test
jb
mov
mov
into
inc
add
je
outsb
mov
pop
xor
and
mov
pop
adc
outsl
sub
xor
lock
sub
je
lock
mov
gs
sub
dec
jno
insb
outsl
and
imul
mov
mov
sub
jbe
mov
push
fdivl
mov
jl
gs
xchg
push
bnd
lahf
arpl
imul
neg
jge
call
push
mov
mov
dec
sti
aaa
outsb
movsb
repz
sbb
pop
mov
jmp
mov
popf
lods
fisttpl
popa
ds
mov
push
adc
jno
ds
inc
insb
shrb
sbb
xor
aad
and
add
cmpsb
dec
mov
je
pop
or
es
scas
fsubrs
nop
adcl
rcrl
push
clc
hlt
mov
fdivrs
dec
adc
mov
movl
int
mov
pop
mov
or
adc
jecxz
inc
cltd
arpl
int3
out
cltd
add
in
stos
mov
aas
test
and
mov
push
sbb
cmpsl
nop
mov
rcll
or
or
mov
pusha
jge
ja
jo
neg
push
lods
push
das
out
pop
add
fwait
js
xor
insl
and
pop
popf
loopne
sub
xor
in
mov
and
dec
fprem1
adc
fbstp
push
adc
add
std
out
pushf
jg
mov
int3
lock
lods
stc
hlt
push
push
or
js
fadds
aas
dec
add
in
pop
add
mov
adc
sbb
push
jmp
fimuls
or
adc
pop
sub
movsb
cwtl
pop
cltd
and
jne
add
inc
pop
ror
fdivs
xchg
cld
cs
xor
cwtl
or
clc
aad
ret
pushf
mov
xor
xor
sub
xchg
sub
cs
mov
out
flds
mov
sti
test
mov
ret
jge
pushl
xor
pop
mov
out
mov
pusha
push
and
jecxz
das
adc
inc
stc
stos
or
mov
xchg
pop
adc
fstps
xor
cmc
aam
sbb
mov
movsb
insl
mov
shr
outsb
fisubl
or
shl
clc
cmp
cmp
xchg
jle
and
call
lods
push
pop
mov
jns
pop
rol
mov
xchg
xor
faddl
and
mov
inc
pushf
jl
sub
out
test
xchg
and
xchg
dec
out
in
inc
adc
test
xlat
scas
outsb
push
fs
inc
ljmp
or
or
push
arpl
rcll
sti
xchg
aam
rorl
rcl
or
call
jge
addr16
jmp
mov
outsl
cmp
jae
arpl
add
cmp
inc
jp
cmpsl
stos
push
mov
xor
sbb
dec
cli
in
ret
dec
or
mov
fistps
loope
xchg
lcall
dec
and
shlb
xchg
mov
mov
pusha
outsb
in
xchg
add
push
inc
dec
or
cmc
pushf
arpl
rclb
xchg
inc
ret
fcmovne
shr
cwtl
enter
sub
test
xor
iret
aas
in
mov
cmp
in
mov
pop
idivl
sti
mov
sub
xchg
and
add
fcoml
inc
gs
inc
shrb
cmp
fcmovnu
jne
repz
add
or
fwait
pop
cmpsl
in
ljmp
jl
push
fdivr
mov
repnz
outsb
mov
jb
fldenv
cltd
dec
std
lcall
pop
xchg
xchg
pop
sbb
int3
xor
xchg
arpl
push
xor
mov
pop
xchg
repnz
rcr
in
sti
jae
mov
lods
dec
mov
insb
ss
hlt
dec
rclb
stos
add
cmp
popa
bound
jns
mov
fimull
sbb
loop
test
aas
sub
add
jecxz
and
fcomp
shll
push
ror
dec
std
and
call
jo
inc
xor
stc
sti
data16
movsb
pop
out
push
xor
mov
xchg
push
mov
cwtl
cmp
ljmp
imul
mov
lcall
iret
xor
xchg
repz
mov
sub
bound
xchg
test
push
and
imul
jo
mov
inc
pushf
xor
mov
xchg
daa
xchg
mov
dec
fisubrl
out
aas
adc
mov
cmc
xchg
icebp
sahf
ss
push
inc
sahf
lock
filds
cwtl
inc
std
pop
jp
or
jge
pushf
mov
pop
vblendvpd
pop
stc
cltd
jmp
mov
xlat
fsubrl
jmp
pop
sbb
jns,pn
je
sti
push
or
addr16
outsl
loopne
and
jle
test
mov
pusha
call
cli
mov
dec
cmp
xchg
jbe
dec
sbb
movsl
dec
jns
clc
sub
xor
adc
lods
lret
and
dec
cli
jbe
add
lahf
cmp
hlt
pop
scas
lret
dec
lahf
push
stos
movsb
dec
jecxz
push
cltd
sbb
loop
jne
test
sub
test
loope
cmpsl
jb
lcall
jne
out
mov
cmp
lcall
mov
int3
xor
shll
fidivl
push
adc
push
in
fldenv
sub
movsl
mov
sub
clc
xorb
aas
mov
push
jmp
loopne
js
push
cmp
xlat
addr16
pushf
rcr
and
dec
stos
out
mov
push
jb
cld
daa
lcall
push
out
or
lret
movsb
loope
xor
fimull
in
fdivrl
in
scas
sbb
xchg
add
cmpb
jo
loopne
nop
aas
into
jnp
ret
sahf
xor
jmp
test
shl
inc
mov
xlat
push
in
mov
mov
mov
lods
cmp
das
ljmp
insb
rcrl
incl
add
call
mov
dec
filds
pop
push
daa
pop
shlb
lahf
jge
stc
xlat
pusha
jp
aad
enter
pop
add
adc
js
out
mov
or
testb
sbb
inc
cmc
fimuls
test
dec
test
loopne
mov
adc
xchg
addr16
xchg
ror
xchg
sbb
adc
jp
outsb
cmp
gs
das
cmp
sbb
enter
or
and
inc
mov
mov
nop
fnstcw
cmp
loop
pop
and
lods
and
mov
adc
not
push
inc
pop
inc
ds
lods
cld
rcr
lods
lds
aam
and
push
mov
lret
lcall
inc
icebp
fnstenv
lahf
imul
jae
mov
xchg
xlat
lds
and
mov
insb
xor
pop
pop
rclb
arpl
inc
mov
inc
sub
adc
cmp
add
popf
dec
mov
sbb
mov
popa
jnp
jmp
adc
fildll
mov
and
pop
lret
scas
scas
adc
jae
fiadds
push
insb
shrl
sub
ss
pop
pop
lods
dec
push
mov
dec
cmp
in
cwtl
add
insl
xor
test
push
jle
imul
outsl
sarb
test
sbb
mov
and
scas
jg
or
fwait
scas
mov
es
loopne
in
xor
test
stc
mov
out
fst
sbb
popf
adc
mov
test
mov
cld
mov
pop
push
jns
movsb
rcr
ds
push
fcmovbe
adc
push
sbbb
sbb
dec
shll
xchg
popa
push
clc
and
xor
rcrl
or
out
mov
outsl
mov
xor
pop
lock
cli
xor
mov
add
jp
jne
std
js
adc
pop
jmp
mov
out
xor
out
dec
adc
mov
outsb
and
test
add
sti
scas
cmpsb
pop
je
in
lods
es
outsb
push
xor
xor
cmp
cs
push
js
push
mov
sahf
adc
lock
cli
cmp
lea
and
mov
and
add
mov
inc
daa
pop
inc
xchg
jnp
mov
jae
mov
pop
ret
cwtl
push
repnz
into
ja
bound
inc
sti
and
mov
mov
movsl
or
or
lds
mov
mov
clc
xor
mov
loopne
outsb
and
arpl
aaa
cmpsl
lahf
add
in
loopne
xor
sbb
fmull
jne
aam
cmpl
sub
pop
je
mov
cmpsb
mov
mov
popf
jg
push
lds
xchg
or
fistps
cmc
iret
loopne
pop
test
je
insb
fs
cmp
jbe
out
mov
scas
push
cmp
sbb
cmp
adc
pop
in
xor
enter
cmp
fs
inc
push
sub
mov
fcomps
cmp
popa
addl
mov
adc
and
pusha
leave
shrl
test
adc
adc
ds
aas
fsubrs
mov
xchg
das
mov
jl
outsl
pop
mov
jns
rolb
adc
ficoms
insl
int3
jb
fwait
mov
lret
lcall
sub
dec
cmc
lods
sub
test
data16
clc
jp
lea
cld
inc
lret
xor
inc
outsb
and
stos
lods
inc
xchg
push
pushf
outsb
shl
inc
xchg
and
aad
popa
mov
jecxz
push
dec
or
pop
inc
shlb
out
dec
int
or
adc
fs
xor
std
dec
inc
pop
idivl
mov
mov
xor
cmpb
icebp
mov
lock
addb
xchg
inc
add
mov
dec
loopne
mov
xchg
popf
scas
hlt
cwtl
sub
cmp
mov
cmp
insb
and
fistpl
jle
arpl
cmp
mov
dec
mov
addr16
inc
mov
imul
pusha
cmp
ror
xchg
fld
loope
subb
mov
ljmp
jecxz
je
rclb
jle
lea
adc
xor
subb
out
ror
movl
rep
pusha
push
or
in
lahf
addr16
out
mov
orl
in
adc
dec
sbb
ret
xor
adc
es
xor
popf
sub
or
sbb
sbb
jmp
and
xchg
sub
xchg
mov
loop
dec
addl
and
pop
loopne
xor
test
loope
xor
push
aas
jbe
insl
jae
movsb
aad
stos
sub
push
mov
lods
ljmp
shrb
test
mov
sbb
scas
xchg
sub
add
pop
ret
xchg
jbe
sbb
sarl
cld
lods
ror
pop
sub
jp
mov
ljmp
xchg
mov
add
dec
js
mov
jl
scas
inc
call
inc
lahf
or
add
xor
mov
mov
xor
fsubs
pop
movsl
loope
mov
rclb
outsb
fldl2e
arpl
movsl
int
sbbb
inc
lret
fildll
dec
mov
mov
addr16
inc
pop
es
testl
add
pushf
rolb
movsl
mov
push
xor
icebp
mov
push
int3
jecxz
jo
lret
and
sbb
arpl
sub
inc
cmp
xor
mov
iret
sbb
shlb
into
dec
enter
stos
outsb
and
dec
lret
shll
sub
mov
pop
mov
cmp
inc
sbb
les
pop
out
sti
adc
mov
push
and
xor
sbb
scas
dec
les
test
and
movsb
outsb
push
cmp
inc
popf
outsl
hlt
jle
repz
loope
or
add
push
cmp
pop
dec
lds
xchg
lock
xor
dec
lods
mov
cmc
test
imul
xchg
inc
out
das
movsb
mov
ljmp
and
pop
nop
sub
int3
xor
mov
mov
repz
ss
test
inc
and
rcrl
stos
andl
xlat
leave
push
dec
sbb
and
lds
dec
int3
cmpsl
cmpsb
popa
pop
call
or
shl
daa
xchg
addr16
std
xchg
xchg
lea
mov
popa
mov
std
or
push
xchg
pop
mov
xchg
cmovo
mov
cmpl
push
jb
or
jl
sbb
out
inc
je
mov
cs
sbb
adcb
cmp
fisttps
add
fcoml
idivb
lret
jmp
xlat
hlt
jo
sbb
pop
aaa
adc
ret
dec
mov
inc
gs
add
xor
push
adc
xchg
loopne
cmpb
roll
push
je
dec
imul
xchg
rcrl
lods
jg
or
xor
test
scas
pop
lea
mov
push
push
bnd
in
out
mov
aad
flds
inc
shrb
cmpsb
xor
imul
icebp
mov
out
and
fidivs
pushf
or
adc
lcall
xchg
pop
test
mov
cmp
sbbl
cmp
add
xchg
gs
push
mov
mov
in
repz
insl
jg
roll
or
or
lsl
xor
in
pop
testb
in
rorl
dec
sbb
enter
cmp
subl
in
out
xchg
sbb
std
mov
in
jl
xor
cmc
sahf
mov
xchg
dec
push
xor
adc
sbb
subb
gs
pop
mov
dec
insb
inc
loope
lock
shrl
lock
mov
je
aam
jne
mov
aad
xchg
lods
out
push
adc
ficompl
inc
test
mov
std
cmp
add
cmp
push
cmp
push
mov
cmp
pop
mov
push
notb
push
push
ret
rcl
stc
dec
orb
xchg
add
lahf
clc
ret
aaa
xor
and
nop
or
cmpsl
jno
in
fcomip
xor
in
pop
fdivs
and
mov
insl
js
sub
dec
mov
mov
jmp
sub
lds
stos
inc
sahf
xchg
mov
ret
jns
xor
jl
cmp
std
mov
sub
dec
aam
ret
test
sbb
inc
dec
pop
cmp
cmc
or
cs
push
in
fcmove
pop
lock
lock
ret
lods
push
int
mov
es
lret
out
inc
pop
or
dec
xchg
jmp
lods
inc
push
push
fidivrs
repnz
mov
jns
pushf
add
or
sub
pop
jp
mov
out
lds
cmp
mov
daa
inc
inc
sbb
imul
aaa
fstpt
inc
mov
push
or
sub
dec
pop
mov
mov
iret
mov
jle
push
push
inc
cmpsb
fnstenv
imul
jl
xchg
fistpl
mov
lcall
dec
fstpl
or
inc
sub
nop
imul
xor
pop
and
mulb
outsb
push
pop
into
push
mov
jnp
aad
cmp
rcrb
mov
ja
jbe
pop
or
pop
ljmp
xor
test
iret
rcrb
lea
mov
sahf
insl
pop
mov
add
iret
aad
or
push
xorl
lds
stc
xor
cli
mov
imul
sub
xor
mov
data16
loop
add
mov
shll
aas
notb
mov
lods
or
jae
mov
repz
insl
outsb
push
in
es
fld
jl
xorb
stos
mov
push
pop
or
sahf
fldt
leave
pop
clc
dec
ds
cmp
rclb
push
ror
add
mov
adc
cmpsb
sbb
pop
xchg
jae
jo
pop
std
sub
mov
in
push
mov
test
pushf
enter
nop
dec
mov
jne
mov
add
std
dec
jo
in
jecxz
jo
pop
out
cmc
pop
scas
test
cmp
test
shrl
mov
jl
jae
xchg
inc
jno
mov
pop
or
mov
loopne
mov
insb
mov
test
pushf
sbb
or
jbe
das
inc
cmp
fsubl
mov
cmp
inc
sub
pop
or
cmp
popa
fistpl
mov
mov
mov
std
jno
ljmp
fmul
cmpsb
inc
or
pop
clc
aad
mov
rcrb
subl
aad
xor
negl
mov
imul
cli
pcmpeqb
pop
cmpsl
hlt
xchg
push
inc
sarb
sarb
cmpsl
sbb
pop
imul
xchg
int
xchg
fadd
mov
cmovo
clc
les
or
out
test
pushf
movsl
and
out
cld
and
push
inc
add
ficoml
mov
cld
xor
fxch
jae
fdivrl
imul
inc
outsb
jnp
push
mov
lods
bound
pop
aaa
loopne
push
popf
pushf
cmc
lea
sti
mov
jns
in
jp
and
ret
inc
mov
mov
and
enter
mov
ja
cmpl
ret
popa
push
outsb
imul
test
inc
pushf
bound
jg
inc
pop
xchg
inc
lods
push
jecxz
iret
subb
aad
cli
jmp
cltd
sbb
stc
test
add
jle
mov
xchg
push
mov
push
clc
loop
push
push
xchg
out
or
outsl
addr16
jne
dec
push
cli
imul
inc
or
cltd
lcall
lcall
push
add
jno
and
xchg
mov
mov
imul
out
cltd
add
sbb
gs
jb
aad
shlb
shlw
imul
pop
xor
stc
insb
inc
test
imul
cwtl
cmp
mov
pop
arpl
cwtl
xchg
data16
andl
insb
imul
add
mov
cwtl
sbb
shll
movsl
cmpsb
xlat
aam
jecxz
pushf
call
fdivp
or
sub
sub
sbb
mov
jp
in
jo
jae
sti
fnsave
in
sarb
fstpt
xchg
dec
push
adc
out
test
lea
cmp
mov
loopne
fs
int3
add
sbb
out
mov
add
push
sbb
sub
dec
les
cli
adc
cmp
lret
inc
iret
sub
filds
xor
and
outsb
out
js
push
or
int3
std
aaa
mov
inc
jo
fmull
cmp
push
jne
in
pusha
jne
in
adc
popa
mov
push
dec
insb
test
add
out
scas
test
mov
es
rolb
ljmp
dec
cwtl
mov
mov
scas
push
jp
hlt
imul
pop
inc
decb
mov
enter
cmp
or
cli
cwtl
leave
pusha
test
push
cmp
mov
add
test
mov
xor
fwait
pusha
mov
or
pop
jp
or
repz
clc
inc
cmpsl
daa
sub
popf
pop
mov
cmpsl
sub
lods
mov
dec
pop
pop
jl
lods
roll
dec
push
xchg
mov
sub
ds
movsl
data16
shll
mov
adc
dec
and
xor
adc
sbb
and
pop
mov
mov
dec
mov
stos
cld
cmpsl
inc
icebp
inc
pop
outsb
mov
sbb
rcrl
inc
jo
in
add
adc
push
ds
in
lock
mov
movsb
call
mov
mov
xchg
dec
jge
jno
outsl
stos
je
push
js
mov
loop
cmp
or
imul
popf
jp
xchg
das
in
cmp
test
mov
nop
mov
ljmp
sub
dec
fsub
out
xchg
fst
inc
sbbl
xor
pop
adc
fdivl
enter
cltd
sub
inc
shrb
add
ss
incb
mov
push
or
mov
lcall
and
add
iret
push
lods
dec
mov
cwtl
sub
add
pop
or
xchg
sarb
int3
jg
cmpsb
scas
lret
sbb
testb
mov
orb
sbb
es
and
cmp
mull
lods
nop
rolb
leave
out
or
stos
pop
sahf
mov
stos
out
movsb
stos
cmpsb
push
push
add
or
sub
cmc
pop
sti
push
int3
nop
dec
add
jl
mov
xor
and
inc
arpl
ds
std
ja
jb
mov
pop
hlt
in
call
pop
mov
mov
es
xor
mov
in
inc
pop
mov
xchg
xor
or
mov
flds
cmp
xchg
int
jnp
jbe
adc
mov
lcall
sarl
adc
lahf
les
add
dec
or
lahf
inc
and
daa
xor
mov
in
nop
dec
sbb
push
shr
andb
test
sbb
popf
out
int
mov
pop
lds
inc
xchg
pop
cmpsl
ljmp
dec
int
loope
outsb
mov
ljmp
xor
mov
mov
cltd
test
lahf
decb
cmc
imulb
cmp
mov
sahf
pop
mov
popa
cmp
lock
mov
mov
adc
clc
jge
je
std
inc
adc
xor
cmc
movsb
xchg
scas
cmp
mov
out
mov
test
xchg
or
mov
popf
mov
mov
adc
push
push
xor
test
xchg
shl
inc
and
dec
sub
insl
mov
loopne
xchg
mov
xor
das
jb
cmc
sar
cmp
xor
imul
out
add
outsl
sub
or
imul
jns
ss
push
lods
loopne
notl
repnz
push
jge
cmpsb
inc
dec
xchg
into
bound
outsb
jmp
rcr
movsl
jge
sub
or
pusha
ja
daa
push
out
sub
pop
das
clc
adcb
dec
js
xchg
outsb
outsb
jg
sub
lret
mov
mov
push
jp
jno
ds
decb
fwait
mov
loope
sbb
jb
addb
int3
adcb
hlt
sahf
gs
mov
adc
or
in
flds
mov
mov
xor
push
pusha
jl
jno
and
inc
test
inc
xchg
dec
dec
sahf
push
sbbl
xchg
fcmovnu
out
scas
loop
mov
movsb
sti
sub
push
dec
arpl
mov
sti
inc
rorl
ja
movsb
rolb
inc
shlb
add
jo
xchg
mov
xor
and
lock
push
data16
scas
pop
mov
push
mov
mov
inc
add
jo
add
dec
push
shl
push
lret
dec
lcall
adc
icebp
call
ja
mov
and
notl
jmp
lds
out
or
insb
jmp
lock
out
jne
daa
inc
pop
ret
adc
ja
nop
pop
sahf
add
adc
sub
sahf
jno
xchg
fwait
int3
push
mov
icebp
int3
mov
cmp
cltd
test
dec
fadds
mov
outsl
pop
cmp
aam
in
das
outsl
jbe
dec
test
mov
adc
cwtl
fisttpll
daa
xor
cli
loope
jecxz
enter
fimuls
adc
ret
lock
je
enter
cmp
mov
repnz
subb
push
stos
jno
mov
mov
or
add
xor
enter
mov
test
loopne
adc
iret
cmpl
fimuls
sti
jge,pt
sbb
in
dec
loope
push
hlt
jmp
es
fistl
cmpsl
mov
popf
leave
sub
mov
sbb
test
xchg
sub
xchg
jmp
cmpsl
shr
sub
mov
push
fxch
movl
dec
frstor
loope
int3
sahf
inc
pop
subl
stos
jge,pt
push
adc
or
or
js
pushf
jne
fwait
mov
or
ror
xor
push
jo
mov
jp
xchg
push
loopne
arpl
iret
push
lret
or
jl
bnd
add
stos
xchg
in
pusha
push
popf
addr16
xchg
push
mov
push
sbb
adc
imul
push
jmp
cs
inc
pop
sub
pop
mov
sub
sbb
push
rcrl
mov
in
jge
xor
repz
inc
popf
mov
sub
push
push
add
xlat
cmp
negl
js
sbb
cmp
stos
pop
mov
and
mov
repnz
clc
test
pusha
mov
fstpt
js
testl
push
shl
call
push
xor
push
sbb
push
mulb
loopne
mov
xchg
mov
shrl
jg
xor
inc
mov
mov
pop
pop
ret
je
push
push
push
mov
out
dec
push
ret
int3
sub
iret
xlat
stc
xchg
inc
mov
lcall
ret
cmp
dec
data16
mov
sarb
ret
mov
negb
inc
push
aas
jmp
mov
mov
inc
out
xchg
sub
cmp
fistpl
std
sbb
cmp
sub
xchg
in
testl
out
cltd
xchg
add
push
pop
inc
shll
mov
loope
sub
jbe
je
pushf
push
test
and
jo
lds
imul
xchg
cmc
jns
lcall
dec
dec
out
mov
mov
push
sub
stos
adc
je
in
loope
push
sub
test
retw
xor
cmc
icebp
pop
xchg
sub
sub
fildll
bound
cmp
out
loop
fcoml
into
lods
jge
push
movsl
mov
pop
xchg
push
test
lea
mov
ljmp
iret
jnp
and
xor
push
lret
adc
out
notl
push
pop
mov
in
in
inc
push
test
push
inc
add
xor
sub
stc
push
add
and
and
push
orb
or
mov
pusha
xor
lret
fistpl
cltd
xchg
in
stc
nop
sub
repnz
cmp
sub
int
js
sub
jne
or
cmp
mov
jp
test
mov
lahf
pusha
inc
lret
jmp
xchg
ret
sub
fwait
lahf
xchg
ret
pop
sub
push
mov
popa
dec
cmpsb
xor
popa
mov
ret
ffree
pusha
xchg
cmpl
and
push
mov
lret
sti
push
and
pop
push
add
or
aaa
mov
mov
fcmovu
hlt
es
dec
lcall
or
jns
je
es
add
mov
sub
lods
lea
jl
inc
inc
add
icebp
push
out
cltd
cmpsl
mov
call
repnz
push
push
outsb
imul
sub
mov
pushf
mov
xlat
or
lods
and
stos
mov
outsb
icebp
stc
dec
push
rcrb
mov
cmp
dec
test
mov
jmp
pop
test
loope
ds
jmp
or
lds
std
xchg
out
fidivrl
andb
mov
cmp
adc
xchg
mov
lret
mov
movsl
xchg
sarb
or
arpl
jl
mov
mov
xchg
ja
mov
arpl
outsl
out
sub
and
popa
sbb
pop
add
mov
arpl
sbb
xchg
mov
mov
lret
clc
int3
mov
cld
sbb
mov
pop
lea
movsl
outsl
push
ret
mov
loope
xchg
pop
inc
hlt
dec
call
push
test
jae
aam
test
push
sbb
inc
fs
sbbl
cld
pop
fisubl
lcall
movsb
movsl
xor
cmovl
jns
sub
jne
lar
sbb
ret
in
ja
dec
test
add
sub
lods
out
sbb
outsb
jns
pop
cmp
call
push
fisubs
jo
pusha
stos
or
clc
inc
and
push
adc
imul
push
mov
popa
push
fmull
dec
inc
mov
add
push
pop
int
jmp
in
sub
lret
push
sub
mov
jmp
movsl
pusha
inc
inc
sbb
das
xchg
cmp
mov
adc
test
inc
imul
loopne
out
std
stos
add
jmp
bound
out
popa
xor
jbe
xor
or
push
fld
sbb
cmp
inc
mov
rorb
icebp
dec
jmp
adc
jle
fucomip
lea
inc
xor
dec
mov
inc
cmp
add
les
pop
gs
add
push
lock
add
push
fbld
dec
or
std
xor
jge
iret
add
sahf
adc
mov
inc
jae
add
xchg
pop
shrb
test
pop
lahf
pop
test
pop
stos
ficompl
mov
jae
sbb
outsl
ret
mov
xor
jl
mov
popf
xchg
xor
enter
add
mov
mov
fwait
push
movsb
push
mov
clc
rclb
std
in
inc
mov
inc
pop
movsl
inc
cmp
xor
cmp
mov
push
adc
sbb
fbstp
out
mov
mov
arpl
or
adcb
adc
xchg
iret
lret
lods
or
or
test
jecxz
repz
mov
call
cmp
lods
xor
cltd
stc
dec
pop
mov
sbb
int3
push
jg
lahf
std
cmc
clc
sub
pop
jp
aad
xor
out
push
out
mov
mov
mov
jne
cmp
jae
mov
in
clc
dec
stos
pop
addl
cmp
jne
pop
repnz
inc
adc
dec
push
mov
mov
inc
mov
div
inc
add
mov
cli
xchg
add
movsb
scas
in
mov
push
mov
and
jns
es
dec
and
sbbb
mov
lods
add
cmc
sbbl
mov
cs
sub
add
in
or
dec
mov
mov
sbb
mov
jo
pop
repnz
gs
mov
aam
push
sub
insb
test
cmc
push
lret
mov
jb
xlat
and
sbb
iret
cltd
adc
hlt
push
add
mov
jb
jns
insl
inc
push
fld
negb
mov
xchg
push
les
mov
push
mov
sub
addl
int
inc
pop
enter
and
sahf
leave
cld
fadds
leave
incl
mov
cmpsl
cld
imull
pop
and
call
mov
call
mov
add
dec
mov
and
out
push
cltd
mov
bound
int3
push
mov
cmpsl
mov
test
mov
jmp
maxps
mov
fs
out
testl
ficoml
rcrl
iret
mov
mov
addb
pop
addl
inc
jmp
inc
loope
test
sahf
ljmp
mov
lret
dec
insb
fisubrl
dec
inc
pop
movsb
mov
sbb
mov
and
sti
jg
pop
lcall
push
loope
jns
push
loop
mov
cwtl
push
cmp
insb
xchg
pusha
add
dec
scas
and
lods
cs
hlt
xor
or
out
xchg
shll
jbe
mov
jl
dec
inc
ud1
push
adc
inc
sub
lahf
div
adc
mov
inc
pop
xchg
js
mov
xchg
imul
mov
lcall
cwtl
xorb
ja
pop
fnsave
punpckldq
sub
leave
jmp
dec
aad
xor
add
addl
loop
add
jmp
stos
xor
imul
cmp
adc
sub
push
enter
cmpsb
sub
rcl
push
lret
clc
pop
cmp
movsl
jp
pop
nop
daa
dec
mov
mov
pop
arpl
dec
aad
push
add
xlat
fldl
aaa
lret
ds
mov
xor
push
jp
bound
push
sbb
adc
jle,pt
mov
sub
push
inc
inc
push
lock
ds
in
int
dec
out
and
aas
and
push
inc
sarl
mov
mov
loop
rol
dec
sub
jno
inc
xor
lcall
and
jmp
enter
xor
pop
mov
mov
mov
pop
sub
leave
insl
shlb
lret
lahf
mov
and
cmp
frstor
xlat
add
sti
mov
rcrl
leave
inc
sahf
xchg
mov
xchg
ljmp
cmp
and
push
cmp
ja
lcall
inc
out
xor
inc
mov
push
cmp
cld
adc
mov
divl
sub
in
push
xchg
enter
mov
cmc
stos
pushl
cltd
lcall
arpl
sbb
lods
ficomps
ss
jno
mov
mull
bnd
aad
imul
add
sbb
idivl
jl
mov
sbb
mov
out
mov
mov
xor
sbb
sub
ret
mov
xchg
adc
fidivs
daa
pusha
cmp
dec
fs
jl
pop
loop
call
call
sbb
inc
push
sub
pop
mov
orl
adc
jle
add
mov
adc
notl
pop
or
ret
sub
inc
cmp
cmp
scas
jns
lock
sahf
cmp
add
pop
push
scas
loop
add
or
push
sbb
test
push
fucom
pop
adc
repz
mov
clc
fistl
aad
pop
test
or
test
lds
mov
push
fcoml
ss
xchg
aad
sub
dec
push
add
ret
out
loope
pop
pushf
add
pop
enter
rclb
push
pushf
sub
sti
mov
xchg
pop
rclb
je
cmpsl
sahf
jb
xchg
sbbl
loop
pusha
mov
push
add
in
ret
std
mov
nop
pop
sub
cmp
cmc
icebp
pop
cmp
jle
stos
xor
movnti
in
dec
xchg
mov
aaa
inc
addr16
mov
inc
xchg
mov
mov
fnstcw
xchg
outsl
outsl
jns
negl
mov
and
mov
js
mov
mov
pop
fidivrl
fwait
xchg
decb
pop
lahf
add
scas
lcall
push
and
out
nop
shll
hlt
jecxz
daa
dec
ret
dec
jae
cmp
dec
scas
pop
imul
cs
and
adc
sahf
cli
fistl
xlat
sbb
decl
jb
xchg
rol
mov
inc
loope
call
pop
in
insb
mov
pop
and
insb
xchg
sub
and
and
in
imul
fcmovb
lcall
pop
jmp
iret
ljmp
jmp
sbb
aaa
push
ja
stos
and
xchg
fwait
pop
movsb
jbe
dec
pop
xchg
mov
push
mov
iret
mov
dec
add
lret
adc
pop
inc
cmc
sub
fcoml
loope
shrl
cltd
add
lret
lods
js
out
imul
add
sub
mov
shr
sub
out
es
loop
in
test
dec
inc
add
aaa
in
mov
mov
subb
push
cmp
jp
cwtl
cmp
inc
mov
xor
mov
dec
or
push
lods
iret
xor
movl
mov
mov
jp
adc
jno
sub
pop
jno
cmp
jl
test
dec
adc
outsl
js
mov
sbb
dec
inc
subl
imul
adc
ss
jl
xor
enter
pop
xor
dec
jns
or
pop
adc
xlat
add
aas
xor
jae
nop
jp
xchg
stos
and
fmull
sbb
cmpsl
pushf
insl
js
xor
ds
jns
or
sub
sarb
into
adc
mov
in
fisttps
bound
addl
fistpl
hlt
out
jne
jmp
push
aaa
push
loopne
mov
pop
lods
pop
mov
push
pushf
bound
push
lods
add
lods
dec
mov
mov
pop
loopne
inc
cltd
mov
push
cli
add
popf
sub
dec
mov
fcompl
mov
lock
adc
loop
push
lret
push
inc
popa
cmp
push
mov
jle
imul
sbb
call
cmp
mov
adc
mov
int3
pop
test
mov
xchg
mov
cld
mov
cs
sub
mov
cmpsl
xor
hlt
in
sbb
cmp
xchg
ficoml
dec
aad
test
xchg
in
jno
xor
inc
lahf
and
fwait
cmp
xchg
xlat
inc
mov
or
das
andb
sahf
pusha
adc
call
jl
sub
into
push
and
push
xor
arpl
dec
lret
jae
ljmp
mov
mov
jle
and
inc
add
movsb
mov
cmp
pop
xor
cmpsb
jge
xor
inc
and
inc
mov
cmpsb
lea
rcrb
and
cmp
inc
outsb
sbb
mov
mov
jmp
notl
insl
cmpsl
push
xor
xchg
push
xor
xor
dec
test
inc
lahf
div
mov
loop
aaa
mov
js
adc
add
xor
aad
loope
fisubrl
iret
hlt
hlt
xchg
call
lods
repnz
sbb
pop
dec
sub
mov
inc
loop
imul
pop
push
add
xor
fwait
push
push
scas
inc
cld
iret
aad
or
int
sbb
sub
lea
push
mov
lahf
push
bound
adc
int
mov
pop
dec
cmp
dec
rorl
inc
out
int3
movsl
cmc
daa
mov
mov
out
jle
push
inc
mov
cmp
mov
mov
lods
inc
mov
in
xchg
push
pop
cmpsb
js
repnz
push
mov
sbb
je
testl
repnz
xchg
mov
xor
push
imul
ljmp
cmp
xchg
inc
lcall
xor
xchg
sub
stos
inc
push
icebp
shlb
daa
push
jne,pt
notl
mov
mov
xchg
repnz
and
cmpsb
pop
pop
stc
xchg
and
sbb
shrl
mov
xchg
imul
xchg
sub
lret
pop
sub
fwait
insl
into
mov
iret
xchg
inc
mov
mov
pop
inc
xor
push
das
dec
out
into
repz
fcoml
insb
sub
dec
out
cmpsl
nop
mov
fistl
roll
xor
je
cltd
pop
adc
mov
repz
in
jp
out
addr16
sbb
lea
jns
lea
stos
push
mov
aad
lock
jo
xchg
test
mov
dec
int
mov
cwtl
mov
dec
lea
cs
jg
movsb
mov
inc
repnz
cltd
clc
out
inc
imul
gs
pushf
imul
pop
jne
out
and
pop
mov
shrl
in
dec
lret
xor
sahf
sub
lahf
clc
inc
jbe
out
sbb
imul
jl
ljmp
stos
ret
add
test
sub
ret
out
fistl
pop
or
stos
adc
aad
mov
out
lret
mov
sbb
mov
pop
dec
or
adc
roll
cld
aad
pop
imul
pushf
sub
in
repnz
lret
mov
pop
imul
imul
int
cli
dec
mov
in
bound
fnsave
add
cs
xor
xor
ljmp
or
je
dec
pop
ret
pusha
rorl
into
into
aad
xor
test
jle
mov
mov
repz
adc
cli
jecxz
and
add
test
jecxz
pusha
mov
loop
push
mov
fcmovnbe
mov
cmc
pop
insb
movsl
xor
lret
out
dec
fstl
imul
inc
nop
adc
dec
fadd
cmpsl
dec
jg
inc
aas
lret
in
icebp
enter
sahf
lahf
stos
or
lret
fucom
xchg
mov
movsl
and
adc
icebp
in
sub
fcoml
ds
fmuls
bound
mov
lret
subb
pop
sub
inc
mov
icebp
out
xchg
cmpsl
jecxz
insb
push
shl
repnz
repnz
pop
js
push
adc
int
mov
nop
adc
iret
ja
push
pop
inc
aas
jno
js
sub
test
mov
stc
cli
scas
rcll
mov
xchg
dec
je
mov
xor
add
test
jb
or
sub
popf
lret
cmp
leave
mov
mov
sub
xor
imul
std
lods
fdivrs
cmp
pop
lods
daa
mov
mov
push
jle
clc
add
push
popa
inc
add
inc
or
cmp
in
cmp
lret
xor
sbb
shlb
mov
fs
xor
cmc
mov
jecxz
inc
mov
dec
sbb
mov
sbb
test
mov
sbb
xor
xchg
mov
out
lods
dec
sub
fmull
dec
daa
in
repnz
in
lahf
sbb
repnz
add
or
stc
add
test
ds
in
jnp
mov
hlt
js
xor
add
popa
or
outsb
imul
sbbb
pop
test
mov
dec
jecxz
mov
adc
cmp
dec
je
xchg
scas
ljmp
shl
aas
cli
popf
mov
inc
sarb
divb
nop
shlb
and
ds
add
mov
enter
and
push
in
or
cmp
stc
insb
movsl
push
dec
or
fs
jnp
cmp
or
sbb
lcall
pop
repnz
push
rcrb
xlat
jecxz
cli
xchg
orl
cmp
dec
imul
in
enter
pop
jp
test
out
fisttpl
add
mov
xor
pop
push
ja
xor
and
push
stc
lret
in
inc
mov
push
scas
fidivrl
mov
lods
out
push
adc
mov
cmp
and
inc
das
and
jge
cmp
xchg
jp
cmp
ret
dec
scas
inc
mov
dec
xchg
test
jge
adc
jo
pop
repnz
xor
in
and
mov
and
int3
sbb
push
shlb
push
ja
xchg
mov
sti
pop
mov
or
inc
ds
xchg
cmpsl
lret
sahf
cld
mov
sub
fs
sbb
shl
cmp
and
dec
mov
lahf
push
movsb
iret
clc
int
push
jl
xorl
or
xor
jge
add
dec
sub
std
adc
inc
adc
stc
enter
outsl
push
cmp
lahf
callw
adc
fxch
into
or
idivb
mov
leave
adc
pop
sub
stos
dec
pop
int3
aas
test
push
mov
divb
inc
or
pop
fcmovnb
rorb
aam
shlb
lods
aam
mov
mov
dec
test
inc
jp
mov
sbb
xchg
or
loop
mov
call
xchg
test
xor
mov
and
jmp
sub
adc
mov
aam
lret
gs
mov
icebp
cmp
xchg
cmc
adc
imull
daa
out
xchg
push
dec
dec
jg
pop
cmp
notb
push
and
mov
addr16
sub
add
sub
mov
pushl
ja
xchg
lods
dec
mov
sub
xor
mov
sub
inc
jns
push
mov
mov
mov
pop
cli
scas
scas
bound
lods
jbe
leave
push
std
andb
pop
clc
rorb
in
mov
adc
cwtl
pop
mov
loope
hlt
push
mov
xor
bound
lret
and
outsb
jno
sub
cs
and
pop
and
decb
fidivs
cwtl
mov
pop
les
addl
pusha
sbb
xor
jnp
enter
cmp
dec
vpaddsb
adc
movsl
scas
enter
sub
mov
inc
shufps
fsubrl
adc
int3
imul
call
mov
fwait
dec
js
lea
fcompl
and
push
sub
pop
loopne
aaa
outsl
sub
xor
xlat
imulb
data16
push
dec
test
iret
adc
iret
pop
lcall
cmp
bt
inc
fldl
sahf
dec
sbb
inc
jnp
xchg
sti
jp
sbb
stc
fdivl
data16
cs
inc
xchg
and
mov
into
cmp
lahf
xchg
mov
test
sahf
push
enter
sbbl
and
icebp
cmp
imul
and
iret
xor
push
and
and
inc
ret
mov
lods
mov
ljmp
add
lds
stos
inc
xor
cltd
push
xchg
lret
aaa
sub
and
mov
mov
test
mov
pop
sub
cli
test
sbb
std
rcll
mov
aas
cs
bound
inc
sub
inc
imul
movsl
add
push
adc
lcall
xor
xchg
cmp
rcrb
outsb
mov
repz
decl
testl
add
enter
cmp
dec
clc
shrl
scas
mov
iret
ret
dec
pop
out
ljmp
pop
cmovg
push
cs
cwtl
in
jbe,pt
es
out
dec
mov
test
lods
gs
rclb
pop
ret
inc
test
xor
rcr
imulb
jecxz
cmc
neg
stc
sti
negl
add
inc
or
add
mov
fsubl
mov
cli
jp
mov
out
inc
jle
pop
xlat
cli
fisttps
movups
dec
and
jb
xchg
inc
mov
xor
lods
xchg
xchg
lret
mov
mov
les
jne
in
neg
xchg
mul
ja
sahf
push
cli
ficoml
cmp
aas
leave
out
inc
loop
pop
pop
out
adc
add
inc
aad
cmpsl
fnstenv
dec
adc
adc
adc
imul
jbe
shr
jne
repz
fsubrp
and
aaa
pop
or
mov
jl
rol
sbb
outsl
jno
mov
loope,pt
dec
arpl
push
test
push
pop
or
fldt
add
mov
inc
call
adc
dec
add
and
incb
push
or
and
pushw
xor
push
sbb
jecxz
leave
lss
fmull
fidivs
sbb
xor
and
in
repz
xchg
xchg
jnp
sbb
out
int3
jo
js
fstpt
push
jmp
hlt
and
dec
cld
sbb
adc
mov
outsl
into
push
popf
hlt
mov
outsl
inc
jle
pop
cmpsb
jbe
mov
sarb
add
idivl
fnstcw
cmp
out
repnz
out
jbe
or
adc
std
mov
std
testb
jge
push
jbe
lock
pop
cmp
bound
adc
sbb
and
mov
xlat
stc
lods
repz
adc
ss
or
in
repnz
outsl
push
sbb
push
sub
jmp
mov
rcl
testl
mov
mov
lds
adc
dec
jns
repnz
imul
inc
pop
fwait
ret
ljmp
inc
lock
inc
push
push
xchg
ror
jbe
add
or
inc
push
movsl
sti
sbbl
xor
addb
sub
mov
roll
stc
std
inc
xor
fisubrl
jb
arpl
cmp
mov
xor
lock
lahf
xor
stos
dec
cmp
ss
loope
push
sbb
adc
subb
push
negl
cmp
fidivrl
add
push
xchg
xchg
loope
bound
ljmp
jo
in
outsb
and
aaa
jl
daa
loope
or
dec
mov
icebp
or
pop
xor
or
inc
push
dec
mov
fstpt
xchg
xor
adc
mov
xor
jno
mov
sub
mov
mov
xor
ja
mov
imull
dec
ljmpw
jmp
adc
arpl
cmp
mov
test
pop
lea
sbb
fs
jno
mov
or
int3
push
xorl
idiv
cmp
push
icebp
dec
lret
cmp
push
orl
mov
dec
ds
aad
in
cmp
into
flds
loopne
enter
imul
xchg
aaa
pushf
jge
add
iret
insl
or
or
xchg
and
pop
jno
pop
imull
mov
lret
xchg
adc
rcll
mov
xchg
idivl
xchg
es
popa
lcall
insb
mov
test
xchg
dec
es
addr16
imulb
inc
lock
sub
nop
out
push
daa
jae
and
rorb
xchg
pop
call
ret
xchg
sub
mov
xchg
jmp
push
pop
sub
dec
lock
and
aas
outsb
lock
sbb
cmp
aas
mov
mov
sbb
or
insl
rorl
push
cli
jecxz
sub
xchg
or
dec
xchg
push
loop
dec
data16
sub
inc
ficoms
movl
loopne
xor
dec
pop
sbb
pop
je
sti
faddl
push
dec
jge
iret
lock
cmpl
sbb
pop
fs
call
pop
mov
add
sub
inc
gs
mov
stos
jae
or
movsb
and
sbb
adc
out
lret
cmp
int
shrb
pop
test
arpl
jmp
nop
mov
ljmp
rcrb
sbb
or
aas
in
push
into
enter
xchg
jecxz
jae
icebp
mov
push
pop
pop
cmc
add
xchg
push
mov
cmp
cld
out
dec
adc
pop
cld
jnp
mov
push
dec
repnz
lock
in
in
dec
test
cmc
fwait
enter
dec
mov
jp
aaa
cmp
dec
enter
sarb
dec
lret
movsb
jge
lods
cmp
pop
dec
dec
fwait
mov
inc
xchg
cli
adc
or
rorl
mov
sbb
out
hlt
sub
xchg
imul
sub
push
xchg
outsl
xchg
cmc
dec
mov
bound
xor
aam
mov
cmp
into
mov
or
stos
jb
push
jnp
sbb
or
dec
xorl
push
lahf
or
mov
and
push
xchg
neg
adc
pop
mov
sbb
mov
rorb
sub
mov
mov
xchg
jno
jge
push
and
pop
das
adc
sahf
pop
movsb
hlt
sub
inc
adc
aad
sbb
ret
test
addb
lock
in
popf
bound
lods
xor
cwtl
lock
fdivrp
pop
adc
xor
mov
sbb
pop
shlb
xor
jno
xchg
test
pop
out
fwait
sub
pop
aam
mov
push
or
sarl
scas
add
lods
movb
and
or
jle
lea
leave
mov
xchg
aam
add
loope
push
pop
jne
pop
cmp
aaa
add
les
and
loope
jnp
imulb
pop
cmp
repnz
or
ret
xor
test
rclb
fs
in
leave
das
loopne
stc
sbb
mov
dec
out
popf
xor
sar
mov
mov
jge
xchg
xchg
lcall
cli
mov
clc
hlt
push
mov
sub
jne
mov
pop
push
clc
insb
repnz
cwtl
fldl2e
cmp
sub
and
ljmp
loope
pop
add
adc
cli
sbbl
loopne
mov
dec
pop
and
inc
int
mov
jmp
mov
dec
cmp
pushf
cmovns
repnz
inc
js
cmpsb
jmp
sbb
mov
ja
int3
addr16
in
xchg
mov
cmc
inc
mov
and
fs
out
cmp
mov
inc
xchg
mov
cmp
stos
imul
sbb
int
jno
je
ds
push
idivl
hlt
cs
repnz
cmp
scas
dec
or
mov
bound
push
inc
jecxz
xlat
lcall
iret
inc
es
stos
rcr
hlt
pop
mov
mov
and
mov
int3
nop
shll
in
stos
sbb
mov
pushf
test
mov
pop
or
pusha
xchg
sbb
add
test
xor
int3
imulb
loopne
sti
adc
xor
xor
pop
inc
mov
es
adc
add
mov
xchg
bound
imul
jecxz
jae
or
clc
lret
adc
cmp
ds
fwait
add
rolb
pop
cs
into
sbb
iret
inc
pop
xor
inc
movsb
pop
adc
adc
push
inc
ret
data16
jp
stc
data16
cld
nop
mov
sub
inc
shl
cmpsb
mov
push
cmp
push
pop
pop
jmp
pop
scas
mov
mov
and
sahf
mov
push
pusha
mov
dec
inc
lods
mov
xchg
cli
mov
xchg
cmp
jp
push
adc
jne
add
xor
cmpsl
adc
inc
mov
dec
xchg
fnsetpm(287
add
jp
xchg
daa
and
dec
inc
and
loopne
movsl
add
fisubl
inc
iret
pushf
add
fsubp
inc
mov
mov
dec
inc
and
movsb
shlb
add
pop
std
pop
dec
mov
lret
mov
dec
mov
int
push
int3
adc
or
lcall
push
or
iret
push
inc
pop
mov
dec
out
div
jnp
mov
leave
jb
out
call
mov
push
fisubl
ret
leave
xchg
aad
out
dec
pop
or
push
cltd
rcrl
int3
xchg
repnz
das
adc
pop
outsl
test
mov
iret
sub
pop
dec
jnp
push
ljmp
and
lret
movsb
xchg
xor
movsl
ret
sbb
pop
push
inc
push
lea
cmp
popa
hlt
mov
imul
fnstsw
add
mov
into
push
repz
mov
sbb
aas
inc
mov
xor
jg
aas
shr
arpl
cmpsl
push
pop
mov
ja
sbb
test
xor
sbb
add
aad
mov
frstor
pop
enter
or
rorb
movsb
cmpsl
sub
divl
jae
cmpsl
aas
enter
iret
cltd
ss
sti
scas
fsubs
ja
push
pop
sub
les
jae
xchg
ds
mov
lahf
and
scas
push
jge
add
in
mov
shlb
insb
xor
pop
pop
xchg
insl
out
dec
cli
cwtl
and
jg
jl
or
dec
mov
rorb
or
dec
sbb
xlat
and
lret
data16
push
cmp
sub
mov
pusha
int
ficomps
testl
mov
or
lret
fs
cli
mov
xor
jp
push
bound
jnp
xor
pop
sarb
mov
outsb
in
push
jmp
xchg
loop
mov
arpl
ja
push
xor
fwait
mov
pop
pop
inc
int3
jo
leave
in
call
aaa
lock
pop
jmp
and
mov
inc
pop
mov
sub
fwait
xchg
xchg
jbe
arpl
je
lea
ljmp
adc
loopne
pop
fldcw
xchg
jmp
mov
stos
movb
cmp
adc
cmp
xor
xchg
cli
push
cmp
cmp
pop
lea
push
cs
addr16
xchg
mov
lahf
roll
inc
sbb
sbb
and
icebp
cltd
cli
xchg
fimuls
xlat
das
add
mov
mov
daa
mov
sub
test
das
popf
hlt
and
mov
sub
leave
ja,pn
cld
sbb
data16
lret
ret
popa
pop
pop
add
add
bound
jp
in
push
inc
inc
pusha
dec
inc
dec
out
cmpsl
jns
push
in
test
shl
or
cmp
movsb
notl
adcl
xchg
scas
lcall
imul
sahf
inc
mov
push
xor
pop
xchg
mov
loopne
lds
lock
add
and
and
lahf
mov
xor
sub
scas
mov
jb
or
pop
adc
arpl
pop
pop
pmaddwd
cmp
cmc
or
in
pop
jge
sub
imul
xor
add
inc
xor
mov
pop
mov
fists
jb
pop
ja
cmpsb
les
cmpsl
sbb
loop
aad
inc
cld
or
inc
adcl
lock
or
jle
mov
pop
out
test
mov
iret
pop
cwtl
cmp
in
mov
in
add
or
and
mov
aam
mov
push
mov
pop
in
adc
mov
xchg
je
leave
sbb
lahf
adc
cmpsb
ficoms
ret
push
sbbl
sti
lods
movsb
pop
out
xchg
add
stc
aas
int3
sub
lret
add
and
ret
loope
xchg
xor
push
sbb
std
fiadds
in
and
daa
xor
jl
pop
push
mov
and
addr16
xor
adc
mov
arpl
or
adc
in
inc
popf
notl
stc
in
mov
mov
jo
pop
mov
jnp
lret
sub
mov
push
decl
inc
nop
ds
lret
ss
int
push
fisubl
mov
mov
dec
stos
stos
mov
stos
test
lea
add
dec
xchg
and
jbe
sub
fs
add
mov
imul
add
and
ret
sbb
pop
sbb
mov
mov
jp
jge
push
push
jp
adc
out
pop
out
jp
mov
mov
mov
cmpsl
std
xor
mov
mov
ds
imul
iret
xor
cmp
sub
mov
fisttpll
insb
cld
lds
cmp
mov
or
inc
das
xor
andl
dec
dec
add
fmuls
hlt
mov
push
adc
sbb
or
int
adc
insb
xor
inc
cmp
jbe
sbb
testb
mov
ds
mov
lds
hlt
shlb
mov
push
sahf
leave
and
je
arpl
mov
mov
and
push
mov
jge
push
movsl
xlat
shrl
insl
mov
les
mov
ret
mov
or
pop
jae
icebp
fs
mov
cltd
inc
xor
jo
shrl
fisubrl
jns
ja
leave
mov
out
xchg
lcall
pop
xchg
jb
lcall
pop
mov
sbb
mov
ret
aaa
and
movsb
mov
hlt
mov
push
add
hlt
jnp
jmp
mov
movsb
mov
mov
xchg
jo
dec
cmp
cmpsb
jp
sub
out
push
jmp
fstpt
repz
sub
pop
popa
lea
xchg
sbb
mov
call
xor
mov
imull
fisttpl
xchg
xchg
lea
pop
nop
mov
sub
sbb
jle
iret
arpl
xor
mov
test
mov
ret
push
js
adc
sbb
mov
pushf
cmp
les
jmp
dec
rcrl
or
shr
pop
dec
ds
aad
mov
pop
cmp
sti
enter
lock
mov
shrd
sbb
sarb
pop
or
pop
pop
cwtl
dec
shll
lcall
jns
pop
lret
pop
mov
mov
call
fmulp
in
mov
stc
js
cmc
in
int3
notrack
xor
push
ljmp
jl
xor
pop
jae
xchg
inc
cmp
mov
fnstcw
lea
cs
not
dec
inc
xchg
xchg
dec
movsl
cwtl
pop
xchg
imul
push
or
push
inc
in
xor
xor
loopne
cmp
fs
jbe
xchg
xor
ret
mov
lcall
div
enter
cmpsb
int
cmp
jle
mov
sub
sub
pop
or
mov
imul
xchg
sub
popl
cmpsb
mov
cli
fcompl
jl
lods
sbb
add
loope
cld
les
fsubp
scas
cmp
les
lahf
mov
xor
jnp
dec
cmp
repz
cs
xor
xchg
jmp
push
clc
mov
cmp
pop
pop
mov
or
test
out
mov
mov
loopne
lods
fwait
pop
mov
push
sbb
xchg
push
jae
jge
insl
cmp
xchg
in
fistps
push
or
in
test
movsl
jp
mov
shlb
push
mov
dec
aas
cmp
sbb
xchg
lods
xor
test
inc
sub
in
imul
or
out
loop
shll
inc
in
jge
dec
stc
mov
movsl
mov
loope
xchg
lret
jmp
jl
inc
sti
popa
lcall
cltd
xchg
pop
filds
imul
iret
xchg
sti
inc
cmp
shrl
aas
out
or
inc
loopne
xor
lods
inc
js
movsb
stos
fwait
loop
loope
adc
cld
sbb
mov
xlat
aas
out
leave
xchg
pop
add
out
in
aas
call
inc
inc
adc
jl
lret
addl
repnz
jno
in
adc
dec
push
mov
cmpb
push
lds
and
mov
sbb
iret
repnz
push
rcl
mov
xchg
addr16
pop
and
loope
dec
dec
je
mov
xor
in
je
out
fisubrs
xor
jne
mov
pop
es
sbb
push
jae
repz
jns
jle
das
stc
and
rolb
adc
add
repnz
fildl
out
aaa
repz
inc
addr16
fisttpl
sbb
daa
lret
cmc
insl
arpl
or
and
fcompl
repnz
mov
sub
call
xor
push
inc
arpl
sahf
push
cli
xchg
movsl
xchg
jb
xchg
sub
imul
jge
lret
mov
dec
shrl
in
inc
mov
sub
loopne
out
sub
frstor
inc
lods
sub
popf
rclb
mov
lods
mov
inc
and
test
mov
cmpsb
fcomp
cmpb
xchg
fstpt
mulb
in
adc
jle,pn
sbb
xchg
push
sub
push
cmc
or
xchg
xchg
aam
push
pop
xchg
cmp
lret
sbb
out
jecxz
test
test
lea
and
divb
popa
loop
insl
jle
ret
lods
loopne
movq
sbb
cs
push
fldcw
lcall
enter
and
lret
cmpsl
enter
xchg
sahf
add
and
nop
out
bound
mov
sarl
mov
dec
sbb
aad
jle
sbb
jne
and
and
mov
mov
sub
dec
fbld
dec
or
pop
sbb
fldenv
or
cmpsb
cmp
addr16
inc
xchg
jmp
mov
dec
aas
je
add
jbe
mov
aam
ljmp
data16
adc
cmp
mov
xor
cld
int
push
movsb
pop
mov
mov
ficoms
es
out
lahf
push
pop
dec
into
inc
dec
cmp
push
jmp
sub
adc
or
cld
xchg
adc
imul
dec
iret
or
ucomiss
add
nop
jo
fists
loop
or
pop
adc
popf
je
mov
loope
and
push
out
lods
test
sbb
int
lret
mov
adc
dec
neg
cmp
shr
movsl
sub
ret
push
cs
sbb
push
fildll
sbb
into
aam
test
adc
push
pusha
lahf
not
cmp
test
push
xchg
adcl
mov
leave
sbb
filds
les
mov
or
cmpsb
sahf
stos
push
jae
daa
iret
mov
out
data16
sbb
stos
sbb
imul
cltd
filds
je
daa
cmp
and
xchg
sbb
xchg
enter
sti
pop
bound
cmp
jns
mov
scas
or
dec
mov
aam
movsl
pcmpgtb
leave
pop
lahf
push
repz
and
aam
xchg
mov
push
dec
lret
xchg
not
and
and
xor
sub
ja
pop
cltd
add
fmull
mov
sahf
sbb
clc
fisubs
pop
or
push
sti
movsl
push
xchg
lret
pop
cli
pop
test
mov
lret
xchg
push
add
enter
mov
je
arpl
insb
mov
iret
push
xchg
popf
fwait
xor
fs
rcrl
bound
sar
or
jg
fimull
fdivs
jnp
inc
add
sti
sub
mov
mov
mov
in
push
cmpsl
xchg
aaa
cmpsl
into
jmp
repz
push
and
ror
inc
scas
arpl
leave
and
dec
orl
inc
stos
dec
xorl
xor
out
sbb
push
stos
mov
add
test
add
mov
scas
mov
insl
mov
stc
clc
fisubrl
sub
pop
or
sbb
pop
sub
test
pop
xor
mov
cmp
jnp
movsb
sar
mov
es
fwait
xchg
push
add
and
dec
mov
mov
sub
mov
idiv
std
cmp
mov
loopne
mov
repz
sbb
imul
scas
lock
sbb
insl
xor
hlt
imul
test
pop
fs
mulb
stos
mov
nop
lds
jo
dec
outsl
loope
mov
or
sub
in
pop
mov
mov
adc
in
in
adc
adc
dec
int
cmp
lea
adc
or
jle
lock
into
in
fdivrl
push
jns
jle
gs
fsubp
mov
and
add
in
and
and
test
fildll
add
and
mov
and
or
push
int3
jmp
mov
cli
je
and
andl
jae
dec
sbb
jno
aad
test
jmp
sar
mov
and
pushf
and
adc
inc
mov
sti
sbb
jne
push
ds
inc
testb
adc
es
sahf
or
sbb
push
test
cld
xor
mov
xchg
pop
sarl
jecxz
repz
inc
cmp
dec
push
jge
inc
nop
jno
and
into
jecxz
loope
mov
sbb
sub
push
cs
xor
sub
fistl
cmp
lcall
add
mov
jnp
mov
adc
test
imul
add
enter
mov
ret
and
ret
jmp
repnz
mov
orl
and
inc
xor
mov
fidivl
mov
mov
xlat
outsb
jne
xchg
and
pop
ss
movsl
sub
mov
out
loopne
xchg
js
cmp
pop
xchg
xchg
xchg
sbb
mov
popf
push
leave
cmp
repnz
add
shll
xlat
ljmp
mov
movups
cmpsl
rcrl
cld
popf
cmp
mov
fistl
test
cltd
sbb
int
cmp
cmp
fldl
rorb
mov
xor
bound
push
gs
fwait
cli
ret
dec
push
sahf
scas
sub
mov
cmpsl
aam
movsl
fisubs
mov
push
filds
mov
imul
jmp
test
icebp
loope
cmp
xor
out
dec
dec
in
std
aam
aad
sarl
mov
test
xor
jnp
mov
lods
push
call
insb
int3
dec
mov
dec
fdivs
lahf
fcoml
adc
cmp
clc
adc
add
mov
clc
fidivrs
ss
arpl
iret
lods
repz
fdivrl
or
movsl
cmp
into
js
ds
out
jnp
adc
lods
stos
xor
imul
jecxz
repnz
sbb
jmp
xor
push
xor
cwtl
cld
pop
xor
addr16
ror
mov
mov
push
jg
add
leave
jo
adc
lret
cmp
mov
fimull
mov
imull
cmp
fdivs
sub
jo
cli
sbb
aaa
mov
and
cli
cmp
pushf
andb
loopne
sub
outsb
mov
arpl
and
mov
xor
sbb
adc
mov
bsr
shl
jo
xchg
lahf
sti
add
inc
test
inc
adc
cmp
xchg
dec
pop
in
fdivs
mov
adcb
cld
lahf
inc
xor
push
dec
sbb
xor
lock
xchg
cmp
pop
push
pop
stc
pop
mov
mov
mov
aad
add
icebp
leave
test
sbb
mov
aad
push
cltd
xchg
cmp
and
push
call
pop
pop
pop
ss
mov
imul
sub
pop
add
pop
inc
mov
add
cmpsb
sbb
imul
adc
shlb
pop
shll
fisubrl
pop
pop
add
push
out
lods
in
loopne
pop
rcrl
fdivrs
and
scas
add
outsb
xchg
lds
fimull
pushf
subl
add
in
in
ffree
mov
xchg
in
dec
add
filds
sbbb
mov
outsl
outsb
push
add
pusha
shll
call
push
bound
cmp
pushf
or
or
bound
idivb
into
cmp
mov
scas
mov
jmp
fnstsw
cltd
dec
add
dec
xor
clc
ret
cmc
and
push
push
add
clc
ds
es
test
xchg
cltd
out
inc
pop
jbe
dec
xor
jge
aas
clc
bound
mov
pop
jl
movsb
les
fbstp
mov
inc
ret
shr
jg
das
adc
cmp
and
lock
lock
mov
lds
sbb
and
xchg
test
icebp
sub
iret
bound
loopne
jge
dec
rcr
and
mov
mov
mov
test
stc
push
sbb
repz
testl
pop
dec
sub
das
dec
cltd
loope
xchg
stc
sub
push
mov
or
lods
add
jg
loopne
movsb
and
arpl
fcoms
sbb
scas
ss
fs
jle
xor
xchg
rorl
mov
or
pop
lret
dec
dec
hlt
cmp
insb
pop
lods
ret
out
mov
popf
mov
sbb
pop
mov
xchg
jb
sbb
js
add
xor
pop
xorl
and
push
subb
xor
mov
stos
xchg
or
fistl
add
mov
xchg
sbb
add
lea
pop
sbb
jne
lret
inc
shll
pop
sti
xchg
rcll
dec
fwait
test
inc
jg
sub
int3
xchg
inc
shl
sahf
pop
jae
mov
aam
mov
testb
push
jg
ret
push
out
lahf
push
inc
insb
cmpsl
cmp
pop
imul
push
push
ret
lcall
mov
fwait
pop
imul
je
jl
sbb
xchg
adc
in
cli
and
jno
mov
lret
or
scas
call
add
pop
push
lcall
out
outsb
jnp
cld
sar
lcall
xor
into
jmp
ja
sub
mov
fucomip
cli
dec
inc
push
scas
outsl
pop
inc
sbb
mov
pop
fstpl
mov
sahf
leave
sub
or
jno
lret
fxch
and
sti
cltd
mov
xor
pop
pop
lret
mov
clc
add
in
icebp
dec
push
mov
dec
test
rcrl
sub
mov
loop
stos
pop
push
stos
xchg
insl
inc
jmp
mov
out
movsl
add
dec
cmpsb
pop
sub
mov
xor
push
adc
cli
add
dec
ret
and
popf
pop
pop
mov
arpl
push
imul
stc
ds
xchg
jo
xchg
ja
lods
cmp
into
jl
inc
sti
add
cmc
pop
fwait
xlat
stos
movsl
push
test
adc
data16
jg
jae
fldl
scas
or
movsl
iret
xchg
lods
mov
lcall
je
sub
loope
or
and
push
enter
das
leave
ret
in
ror
cmp
fcoms
jo
mov
jno
xchg
repnz
lods
fcoms
dec
fmull
jl
fdivr
xchg
jge,pn
ds
xor
cld
les
cli
std
sbb
fldl
pop
push
add
xlat
les
lock
and
push
cld
mov
dec
mov
lods
adc
fistps
push
add
mov
insl
sbb
ds
in
lret
ret
adc
jno
xor
inc
sub
pop
fisttpl
daa
cmp
adc
push
inc
or
cmc
or
or
out
insb
addr16
xor
pop
pop
jo
dec
jo
pop
push
xor
mov
pop
sti
lods
jo
dec
sbb
idiv
loopne
mov
es
add
mov
dec
ja
inc
xchg
mov
mov
push
in
dec
testb
ljmp
mov
leave
int3
or
xor
cmp
mov
mov
leave
sbb
mov
out
push
sub
pop
scas
insl
dec
repz
mov
iret
mov
sub
int3
jp
hlt
jbe
pop
lds
iret
fwait
lret
cmc
and
out
or
push
xchg
pop
mov
divb
cld
mov
mov
in
aas
fs
clc
or
fbld
xchg
or
repz
inc
or
lcall
mov
jmp
out
sbb
adc
fcoms
leave
lea
sub
mov
xchg
fs
stos
inc
outsb
imul
int3
jge
push
fwait
sbb
xor
mov
or
mov
ds
and
mov
push
fucomip
cld
mov
test
popf
xchg
fidivl
adc
mov
das
sbb
lahf
fadds
out
stos
ficoml
ret
in
adc
xor
ja
out
pop
cmp
cmp
cltd
pop
lret
stos
addr16
fwait
sarl
int
nop
testb
ja
jns
in
shlb
pop
or
adc
dec
inc
fsubrs
shr
xchg
es
out
mov
aas
outsl
xchg
mov
out
sub
xchg
jne
inc
xchg
xor
mov
arpl
test
call
mov
pop
mov
cli
sub
pop
inc
lahf
cmpsl
loope
cwtl
stc
sarl
push
pop
int3
xchg
push
inc
icebp
dec
push
test
cmp
inc
mov
jg
mov
jno
lods
mov
push
add
cmp
push
sbb
xor
fiadds
and
loope
ret
std
loop
xchg
out
dec
inc
sti
mov
pop
data16
jmp
mov
dec
loopne
stos
jnp
cli
fisubrs
out
repz
mov
or
xor
inc
fildl
push
mov
bound
add
xor
loopne
out
mov
lret
cmp
cs
cltd
test
in
ljmp
insl
xor
xor
and
fdivrp
mulb
pop
mov
das
stos
jne
movsb
inc
insl
sub
xchg
fisubrl
xchg
dec
lret
add
cmc
jmp
popa
das
pop
sub
mov
mov
jae
mov
loope
int3
sbb
pop
into
mov
xchg
mov
jb
push
cmp
arpl
dec
inc
test
jne
call
xor
pop
add
movsb
call
sub
mov
dec
xor
sahf
sub
and
insl
nop
mov
clc
js
xchg
xchg
cmc
out
lea
adc
jge
fsubl
sti
push
adc
cld
imul
push
xchg
shl
cwtl
pushf
popa
jg
in
fstpl
call
mov
frstor
jo
mov
loopne
cmpl
push
je
shlb
xor
outsb
push
fistpl
loopne
call
sub
mov
sarb
test
mov
mov
jecxz
sbb
aaa
fdiv
pop
scas
pavgb
jo
lds
pop
push
fisubl
sub
mov
frstor
dec
jne
add
inc
arpl
cwtl
sahf
call
mov
sbb
cmp
add
inc
repz
stos
jns
mov
out
mov
jecxz
xchg
jle
ja
mov
dec
std
push
inc
rorb
testb
jle
xor
and
cmpb
ret
iret
cmp
test
push
pop
jecxz
or
push
add
call
pop
ret
scas
dec
mov
mov
imul
mov
aad
xchg
xchg
das
add
das
icebp
sbb
mov
jle
aam
sbb
cmpsl
adc
pop
ficomps
loope
push
ja
pop
mov
push
popf
lret
sub
dec
dec
mov
int
ret
sbb
mov
pop
add
subb
hlt
es
fcoml
xor
stos
xchg
notb
lcall
ret
cmp
cli
call
mov
aad
mov
push
jle
out
clc
popf
out
inc
pushf
mull
inc
int3
orl
flds
mov
ljmp
insl
lock
call
outsb
and
jnp
sub
or
or
pop
scas
in
loopne
popw
cli
jecxz
fisubl
daa
cmp
or
cmpsb
mov
dec
out
push
rcr
imulb
or
pop
pop
orb
insl
and
loopne
and
mov
sub
sub
mov
cmpsb
in
and
or
sub
sub
jbe
lcall
jecxz
icebp
aad
jl
cwtl
movsl
dec
xlat
movsb
lcall
aad
mov
sub
push
push
test
pop
cmc
in
mov
jb
sahf
sbb
les
iret
cld
mov
loope
or
add
sub
adc
outsb
fmull
pop
int
push
xor
jp
dec
push
jnp
les
adc
jecxz
xor
mov
loope
dec
shl
inc
repnz
dec
imul
mov
insb
dec
push
cmp
data16
mov
fistpll
jae
sub
dec
gs
push
js
ficompl
outsb
sti
out
pop
out
mov
andl
and
push
sahf
sbb
xor
lcall
sbb
roll
ret
push
sbb
fisttpl
xchg
icebp
pop
leave
lret
in
mov
push
adc
and
push
ja
cmp
pop
sbb
cmp
xor
lcall
xor
icebp
xor
or
xchg
loope
pushf
and
icebp
pop
fstps
pop
lods
add
add
jmp
fcompl
and
jge
repz
flds
cmp
jmp
nop
xchg
jno
cmp
dec
mov
hlt
push
mov
repz
jle
cs
outsl
inc
dec
fwait
lahf
loopne
loopne
ja
add
sub
cmpsb
push
and
inc
data16
push
pop
pop
dec
dec
pusha
cmpsl
xchg
hlt
mov
lret
lea
jae
imul
xchg
loopne
mov
jp
jle
cld
sbb
out
lahf
mov
or
call
and
mov
cmp
pop
sub
flds
out
das
std
xchg
push
sbb
out
sahf
xchg
jle
cwtl
mov
dec
in
inc
das
cmp
add
push
jg
xchg
jnp
cmp
or
sti
pop
mov
insb
adc
add
fs
push
adc
sub
mov
testl
cmc
xor
mov
xchg
add
push
movsb
xor
adc
notl
out
jae
dec
cmp
bound
sbb
jnp
test
xor
lock
jle
or
push
xchg
xorl
mov
xchg
lods
inc
ret
mov
and
outsb
adc
nop
leave
push
pop
dec
je
mov
repz
cwtl
lret
sbb
xchg
sub
and
cvtdq2ps
sahf
std
push
mov
int3
lcall
pop
fsubrl
pop
incb
popf
mov
inc
loopne
mov
inc
pop
orl
aaa
inc
mov
daa
arpl
add
ficoms
add
dec
xor
scas
sbb
fmuls
mov
cmc
inc
mov
mov
adc
sub
mov
das
push
inc
ret
jmp
imul
in
int3
cmp
fiadds
std
mov
add
sbbl
into
daa
lods
or
dec
inc
aad
int3
inc
aad
pop
and
dec
adc
das
cmp
pushf
rorb
fadd
pop
or
mov
out
and
xchg
rorl
xchg
sbb
push
loop
flds
mov
and
mov
test
cmp
out
shll
mov
loop
out
add
sarl
gs
add
mov
stos
pop
pushf
mov
jne
neg
pop
int
orb
or
mov
scas
sub
mov
into
lret
xor
scas
mov
call
mov
jb
mov
inc
xchg
mov
mov
pop
xor
cli
inc
dec
dec
js
pop
jnp
faddl
and
idivb
cwtl
lcall
mov
es
loop
fnsave
int3
push
les
and
jge
hlt
in
enter
mov
jae
scas
leave
sbb
hlt
sbb
sbb
scas
lods
scas
xor
scas
loop
pop
fsts
iret
cltd
jbe
mov
inc
xchg
jle
xchg
repz
data16
xchg
sahf
dec
push
adc
clc
lea
lods
das
scas
insl
sbb
inc
push
fcomps
cmp
jecxz
mov
xchg
ljmp
or
icebp
mov
jbe
xchg
mov
pop
test
ret
and
or
jb
lret
adc
adc
and
in
test
or
rclb
in
in
sti
rorb
clc
mov
xchg
jp
icebp
jo
jmp
xchg
cmp
push
lret
aam
in
cmc
sti
icebp
cmp
test
out
lock
pop
push
push
fwait
sub
xor
stos
cmp
cmc
cmp
inc
inc
iret
or
pop
jae
das
cmpb
cli
cmp
and
xchg
das
add
add
mov
push
dec
jl
fadds
inc
xor
adc
fldenv
xchg
testl
iret
xchg
push
jnp
push
out
sbb
adc
ja
popa
dec
inc
lret
pop
into
loope
pop
mov
adc
ss
mov
fnstcw
cmp
cmp
in
dec
mov
fwait
or
jl
lahf
push
push
dec
icebp
scas
loopne
call
loope
movsl
adc
or
test
xchg
ds
dec
ja
adc
in
repnz
packssdw
dec
cmp
mov
fstpl
mov
pop
mov
add
clc
inc
xchg
mov
mov
cmp
testb
dec
ret
xchg
xchg
adc
or
iret
popa
jns
sub
std
inc
into
fnstsw
int3
lahf
sub
aad
pop
dec
mov
xchg
aad
push
imul
add
shlb
cmp
addr16
adc
sub
in
cmp
out
or
rcl
in
or
fucomi
add
iret
dec
or
push
mov
mov
aad
icebp
cmp
iret
mov
ror
xor
repz
and
out
dec
mov
cltd
push
ljmp
pop
jp
xlat
cmc
jmp
jecxz
xor
repnz
sbb
jno
push
testl
movsl
mov
jecxz
sub
mov
inc
ret
std
out
add
inc
aam
xor
push
jecxz
xchg
pushf
es
or
sub
cmp
xchg
aaa
incb
ret
test
fcomi
std
insl
sarb
pop
dec
daa
jnp
addl
fisubs
jb
call
jmp
imul
adc
mov
aas
adc
pop
fwait
dec
adc
in
or
dec
cs
outsb
dec
nop
filds
repnz
lret
push
stc
inc
je
inc
je
dec
clc
xchg
dec
mov
add
pop
ds
xchg
mov
cltd
xchg
fsts
into
inc
jnp
roll
mov
ja
es
scas
popw
repnz
sub
xlat
and
sahf
pop
xor
jecxz
jae
loope
jp
or
cmc
inc
data16
fisttps
fcomps
mov
adc
lock
insl
notl
loop
xchg
jge
ds
popa
out
xchg
mov
jp
outsb
xchg
ljmp
aaa
ljmp
push
pop
and
inc
add
notb
xrelease
pop
jne
aad
adc
inc
in
jb
add
push
and
mov
fimuls
pop
fwait
adc
outsl
xchg
inc
jecxz
movsl
mov
inc
add
lret
add
enter
inc
push
stos
jae
sub
dec
cs
dec
jnp
cmp
lcall
xor
fisubrl
loope
adc
mov
lahf
inc
mov
jp
mov
fs
xchg
cltd
dec
jns
nop
in
out
or
out
xor
out
mov
daa
mov
popf
movsb
mov
sub
cmp
fs
mov
mov
lcall
jmp
movsl
notl
xchg
xor
xor
lods
jno
insl
or
ret
mov
lahf
pop
xor
adc
in
mov
pop
lods
cmp
lods
aaa
or
cmp
shlb
cmp
sbb
les
fwait
jl
xchg
push
dec
out
insb
enter
push
mov
and
rcl
ror
jnp
push
and
sub
mov
fcompl
and
ds
dec
jo
data16
xlat
inc
insl
out
out
inc
push
rcrb
cmp
mov
stos
mulb
fidivrs
sbb
int
xchg
test
lcall
sbb
or
or
xchg
dec
push
lods
cmc
ljmp
daa
lret
inc
add
lcall
clc
bound
cmp
loopne
imul
and
mov
fsts
xchg
mov
mov
dec
lcall
or
sub
jmp
mov
ds
xor
outsl
es
mov
pushf
pop
lock
push
mov
insl
pop
inc
notl
cmp
and
test
and
imul
lahf
sub
mov
dec
inc
dec
dec
cmp
sub
adc
push
dec
ret
shrl
shlb
cmp
pop
ljmp
out
frstor
je
and
xchg
jno
dec
cwtl
out
hlt
or
popa
mov
pop
mov
scas
sti
dec
movsl
adc
jmp
in
insb
push
mov
xor
mov
xor
movsb
shrb
xchg
add
push
stc
nop
test
push
xchg
sub
lcall
aad
stos
and
test
std
test
js
sub
pop
loopne
or
sbb
jae
in
mul
aas
pop
mov
loopne
xor
data16
sbb
mov
adc
int3
cmp
inc
int
mov
cmp
mov
int
inc
jg
and
dec
es
idivl
daa
xchg
or
pushf
sbbb
lret
lods
lahf
pop
stc
cmpsb
cmpsb
push
loope
and
mov
fwait
lcall
call
jle
push
mov
xor
int3
adc
mov
mov
xor
lahf
or
rol
hlt
scas
lods
es
and
mov
cld
pushf
andl
movsb
lahf
outsb
test
popf
mov
sub
fimull
out
mov
push
lea
cmp
mov
repnz
push
mov
imul
mov
orl
pop
pushf
pop
or
je
fcomps
or
xchg
mov
jg
adc
jmp
push
ds
out
cwtl
pop
sti
iret
adc
out
jle
dec
and
shll
das
js
in
cmpsb
mov
sub
adc
or
addr16
test
mov
ja
daa
mov
jp
ret
sahf
gs
push
mov
cltd
mov
popa
and
cs
lret
push
sbb
lods
jbe
inc
or
xlat
add
inc
lret
jno
or
push
pop
pop
xchg
fnstcw
stos
mov
aam
subl
lock
inc
fcoms
enter
inc
adc
aaa
mov
pop
flds
xchg
add
andl
sbb
xchg
in
cmp
lret
cmc
push
sub
rcll
div
mov
std
jne
push
popf
dec
mov
into
push
scas
xor
cwtl
pop
mov
lea
push
xchg
add
jmp
mov
sarb
test
mov
and
loop
ss
js
sbb
or
add
cmp
dec
pop
jle
icebp
repnz
not
nop
push
repz
add
test
shr
fnsave
push
mov
mov
aaa
mov
fisttps
je
jno
inc
push
in
aas
filds
addr16
sar
insl
fwait
add
cmp
lock
outsl
popf
xchg
cli
call
mov
add
mov
push
cmp
mov
dec
mov
rcrl
push
lcall
in
sub
mov
dec
cmpsl
das
repnz
lock
xchg
mov
mov
and
stos
aad
jecxz
adc
loopne
and
dec
jp
cmp
fwait
mov
hlt
push
gs
mov
push
int
rcrb
icebp
lods
pop
sub
sbb
inc
test
clc
mov
fidivl
addb
jecxz
sbb
mov
jno
pusha
rol
in
cmpsb
stos
mov
push
cmc
jo
mov
lds
idiv
rcll
outsl
lahf
dec
jmp
mov
mov
mov
orl
icebp
and
into
dec
aad
aad
mov
mov
test
mov
repnz
adc
and
xchg
and
pop
xor
dec
leave
nop
sub
lcall
xchg
xchg
insl
lcall
fildl
js
pop
nop
test
dec
shl
rolb
lcall
bound
pop
push
xchg
sub
pop
inc
add
in
loope
in
iret
cmpl
mov
xor
push
add
xchg
clc
dec
sbb
pop
sub
test
andl
ror
or
mov
rorl
je
push
adc
adcl
mov
jle
sub
test
ret
sub
sahf
jne
les
push
push
and
xor
ret
mov
repz
insl
imul
xor
test
jnp
js
xchg
push
sbb
push
das
push
mov
out
xchg
cs
dec
adc
push
daa
mov
lock
jmp
add
pop
mov
push
scas
dec
xchg
pop
pop
inc
xor
inc
cmp
inc
pop
out
test
mov
adc
mov
pop
dec
shl
adc
test
add
loop
inc
aaa
sub
push
mov
imul
mov
pop
movsb
add
cmp
jmp
pop
and
stos
stc
fsubs
sub
call
and
xchg
cmp
sbb
and
lods
lret
mov
lock
xlat
leave
lahf
cmpsb
mov
sub
jo
std
in
jae
cmc
or
nop
push
ds
inc
nop
lods
add
mov
popa
cld
xchg
push
mov
or
xor
repnz
xchg
test
idivl
stos
outsl
add
lcall
jl
out
leave
jp
hlt
jnp
and
jno
cli
xchg
push
inc
sub
popl
lods
arpl
cmpsb
cmc
and
jo
repz
inc
push
jne
push
jno
pop
add
scas
rorb
das
jb
inc
int
adc
enter
jno
mov
ds
jl
sbb
inc
inc
inc
jne
pop
sub
mov
jecxz
cwtl
jmp
aad
adc
out
cmc
xor
pop
dec
fwait
and
icebp
ret
loopne
jns
int
scas
int
rcrl
push
pop
fisttpll
dec
insb
pop
imul
mov
jae
lahf
pop
insl
pop
cmc
mov
pushf
aad
popa
jg
jbe
mov
mov
pop
and
sub
dec
and
outsl
scas
jo
movsb
mov
sub
cltd
pop
sub
sub
addr16
ret
pushf
arpl
stos
mov
mov
mov
push
jl
adc
aad
fisttpll
clc
das
mov
push
xchg
das
mov
dec
shrb
clc
mull
dec
call
add
mov
jmp
mov
ds
jecxz
repz
arpl
loopne
push
cmpsb
popa
scas
mov
lea
and
insb
fs
into
ja
mov
mov
mov
int
push
in
jo
pop
dec
mov
mov
lcall
dec
jae
shrl
push
mov
cmp
adc
cmpsb
mov
test
cmp
or
push
inc
clc
out
push
pop
daa
mov
xlat
push
or
sbb
pop
pop
cs
cmpsl
out
xor
adc
das
jecxz
out
nop
mov
push
in
push
cmp
mov
push
les
test
mov
fwait
sbb
or
mov
add
lea
pop
cmpsl
divb
push
stos
jl
or
lods
push
pusha
push
adc
xorb
push
xor
sahf
pop
sarl
mov
out
mov
mov
jmp
cs
loop
and
nop
aam
sbb
enter
mov
push
cmp
ror
inc
jmp
out
fmulp
sbb
repz
xchg
cld
cmpsl
inc
ret
mov
mov
outsl
lcall
stos
mov
mov
fistpl
xchg
inc
pop
fsubr
repz
icebp
mov
sti
sub
mov
scas
mov
xor
xchg
lds
fs
push
sbb
pop
leave
cmp
jl
popa
push
das
imul
addr16
repz
into
lods
pop
fxrstor
mov
clc
clc
arpl
add
cmp
test
bound
xchg
lock
xor
fsubs
mov
and
call
insb
sub
insb
stos
shrl
inc
xchg
imul
and
inc
push
repz
movsl
lret
jle
roll
stos
mov
cmp
pusha
mov
into
push
mov
add
cmp
stos
nop
push
aam
das
pop
jne
addr16
aas
ds
fs
xchg
xor
sub
push
push
adc
cmpl
or
dec
in
dec
repz
sub
gs
jne
sahf
xchg
fnstenv
cmp
leave
mov
mov
cmp
ficoml
outsb
and
fs
sub
lret
or
xor
clc
xchg
add
xor
jne
arpl
clc
int
cmpsb
xor
sub
inc
movsb
lcall
sahf
test
cmc
insl
nop/reserved
divb
xchg
xchg
xrelease
scas
jmp
cmp
cltd
or
out
cmp
nop
inc
xchg
cltd
add
add
in
popf
push
add
mov
fs
xlat
or
inc
mov
fdivrs
addr16
lds
enter
pop
inc
incl
imul
fadd
outsl
test
push
mov
or
cmpsb
push
inc
mov
lock
and
daa
aam
cmpsb
add
push
leave
jg
add
mov
pop
aam
jmp
mov
cmp
lods
in
xchg
je
xor
jne
loopne
shll
xor
iret
cmp
bound
push
xlat
cltd
jmp
test
sub
sti
inc
xorb
pop
lea
xchg
or
arpl
imul
imul
add
fimull
into
push
push
or
xorl
popa
out
sub
push
push
hlt
fwait
sbb
mov
inc
pop
inc
movsl
test
inc
xor
inc
cmc
clc
xor
inc
xchg
and
pop
in
leave
lea
outsb
insl
jne
fldt
movsb
mov
adc
dec
xchg
icebp
xchg
mov
loop
pop
inc
jle
enter
push
std
or
pop
notb
jmp
ret
lcall
aad
shrb
imul
push
push
cmp
sub
pop
cli
in
test
movsb
pop
fistps
jg
push
fists
fidivrl
rcrb
popf
call
imul
dec
cli
xchg
cld
mov
cmp
popf
pop
dec
add
pop
outsb
lea
fs
and
aas
xchg
inc
push
or
aas
das
ljmp
xor
sub
or
sub
jno
push
icebp
xchg
lret
pop
test
xchg
or
nop
cmp
or
vpcmpgtd
adc
lret
inc
add
mov
stc
sbb
hlt
sub
push
adc
shll
mov
jge
jecxz
adc
push
mov
push
es
cmp
ljmp
test
cltd
inc
icebp
inc
aaa
cmp
xlat
inc
in
movsl
and
lods
xchg
mov
out
cs
loope
pop
add
cmc
jmp
int3
xor
scas
mov
jl
cmp
pop
sub
mov
push
orl
lret
cs
push
lret
push
cmp
push
inc
mov
sub
push
out
popa
loop
movsb
add
push
or
inc
arpl
adc
out
fcompl
rolb
push
mov
jb
sub
xchg
sub
dec
cmpb
lcall
sub
and
test
xchg
popf
pop
data16
dec
andl
fisubrs
xchg
sbb
xchg
out
sub
pop
enter
dec
es
sbb
in
rcr
insl
inc
std
adc
mov
mov
lea
push
fidivs
dec
out
inc
add
push
cmp
es
loope
add
or
rcr
cmp
repz
or
xor
adc
xor
data16
in
insl
pop
add
in
std
pop
mov
lret
scas
jl
xchg
packuswb
mov
mov
ret
fwait
inc
mov
lods
notl
lret
popf
dec
bound
insb
lret
add
imul
sbb
outsl
push
add
mov
daa
imul
jnp
std
gs
dec
sbb
inc
arpl
push
sbb
mov
add
imul
xor
adc
xor
mov
movsl
pop
iret
insl
mov
jle
and
bound
mov
inc
test
jo
std
roll
push
push
xchg
cmp
loopne
mov
fldt
xorb
jb
into
mov
and
sub
jl
pushf
inc
pop
sub
fmuls
pop
sbb
stc
sub
lcall
pop
addr16
mov
inc
mov
stc
pop
push
std
lock
test
cmc
mov
sti
sub
push
lahf
aas
lds
add
ljmp
pop
or
and
fsubs
pop
push
adc
aam
ds
fimull
cld
mov
fistpl
xor
fs
add
sbb
in
pop
iret
int
cwtl
inc
jbe
mov
dec
imull
test
dec
pop
pop
shrl
dec
outsw
ret
xchg
test
push
ret
fdivs
loop
push
cmp
in
push
sbb
mov
ss
inc
mov
or
outsb
adc
adc
mov
jge
xor
mov
adc
and
jne
in
lret
in
pop
cmp
shrl
call
mov
in
xchg
push
jbe
rclb
mov
stos
test
mov
daa
jbe
mov
fwait
sub
int
mov
arpl
jne
test
add
lods
push
popf
push
jb
pop
push
jle
int
push
add
push
jmp
add
push
les
jae
dec
cmpsb
or
fisubrs
bound
fs
and
rol
push
imul
mov
imulb
daa
lret
pop
cmpl
cli
sti
jmp
adc
in
lret
cs
jecxz
sbb
mov
pusha
fs
xchg
repz
add
dec
xor
push
insb
movsb
dec
mov
mov
xor
push
fstpl
adc
into
push
out
adc
ja
add
pop
inc
mov
xchg
mov
negb
int3
xchg
push
movsl
stos
xchg
and
je
in
push
push
push
mov
dec
mov
mov
cwtl
fcoml
stos
lds
mov
xchg
or
mov
inc
iret
mov
cmp
sub
loop
mov
push
mov
stos
jle
je
mov
xor
jp
fsubl
das
pop
iret
push
xchg
fldl2t
mov
add
cmp
dec
mov
shrl
insl
dec
pop
sub
test
and
pushf
into
add
out
lock
pop
jmp
mov
adc
mov
mov
popa
jb
add
jmp
cmc
test
ret
push
sti
or
sbb
xor
dec
rorb
js
test
xchg
repnz
push
cltd
ss
gs
testb
lock
sub
add
mov
lods
mov
cmpsl
jmp
cmp
push
jae
mov
fistl
mov
movsl
ret
mov
mov
dec
and
xor
jle
scas
jo
cmp
add
cmp
imul
ret
pusha
int
xchg
dec
adc
popf
add
leave
jmp
cwtl
pushf
cmc
psrlq
enter
or
sti
mov
push
ljmp
sub
data16
mov
insb
imul
adc
mov
gs
movsb
push
insl
dec
mov
push
pop
aad
mov
into
mov
popl
xor
xchg
adc
cmc
rolw
xor
pop
cmp
mov
xchg
cmp
jne
cmpb
aas
sahf
sbb
dec
sub
inc
push
fstpl
inc
lods
or
imul
push
out
fsubrp
lock
sbb
push
cmp
add
xor
and
mov
gs
pop
scas
xlat
in
mov
lret
ret
scas
in
fwait
cmp
mov
push
dec
rcl
adc
adc
repnz
push
popa
xchg
ss
mov
out
xchg
leave
icebp
pop
insb
leave
xchg
push
icebp
icebp
int
inc
dec
negb
xchg
mov
jg
daa
cmp
dec
lds
inc
lahf
mov
es
pop
outsb
dec
xchg
lds
outsl
pushf
sub
jae
fs
pop
sarb
outsl
jae
and
pop
jne
mov
fstp
mov
jecxz
xorb
mov
pop
mov
sub
jae
addr16
cld
mov
cmp
and
jg
mov
pop
insb
ja
in
sub
push
ret
scas
mov
jecxz
mov
push
popa
pop
push
mov
js
cs
mov
rorl
cmp
cmc
xchg
into
jae
repz
sahf
mov
cmp
adc
mov
negl
sbb
negl
jo
sti
adc
push
in
push
jo
inc
std
add
shlb
fmul
ss
cmp
ficoml
xchg
int
xchg
cmp
test
scas
jle
lea
xchg
scas
test
xor
gs
mov
jp
push
mov
xchg
fs
xor
adc
adc
pop
add
loopne
jo
loopne
xchg
sar
push
and
inc
leave
sbb
lods
out
inc
dec
xchg
and
jo
ljmp
xchg
sar
rcr
and
idivl
pop
cmp
add
into
mov
std
sub
jecxz
mov
push
and
mov
lods
and
pop
pop
and
xorl
add
inc
lret
and
ja,pn
inc
mov
loopne
xchg
sbb
pop
adc
outsb
pop
cmp
fnstsw
jle
and
movsl
fwait
sbb
in
out
lahf
repnz
cli
les
mov
mov
popa
xor
enter
lods
roll
into
push
int
mov
sarl
je
rolb
jmp
mov
roll
imul
stc
stos
mov
cmc
sub
xor
cli
xorb
icebp
jmp
mov
lret
pop
dec
repz
aad
jp
imul
add
inc
sub
jnp
sub
scas
aaa
or
pop
cltd
mov
mov
adc
cmp
arpl
mov
mov
xchg
repnz
push
gs
pusha
rol
arpl
pop
pop
daa
lds
push
xor
js
leave
push
mov
outsl
insb
mov
inc
aas
mov
subb
or
jb
push
movsl
pop
out
outsb
hlt
mov
js
xor
xor
movsb
popa
lock
sub
push
cmp
lock
mov
adc
fwait
xchg
sti
mov
aas
adc
popa
insl
sub
stc
in
xor
mov
mov
lea
dec
xor
jge
mov
or
repnz
sbb
loopne
pop
sahf
jmp
jge
cltd
pop
mov
addb
fistl
clc
jo
into
mov
jmp
ds
je
mov
xchg
mov
adc
call
fldcw
xchg
rcll
movsl
je
pop
mov
cltd
sub
and
pop
subl
jge
inc
mov
js
push
pop
aaa
out
sbb
dec
lods
inc
add
repnz
in
sbb
mov
testb
fld
dec
sahf
mov
jge
jmp
jg
xchg
jnp
jmp
sub
sqrtps
jp
int
jge
lret
pop
enter
xchg
cmp
mov
ds
scas
loop
jbe
cmpsl
add
jl
test
mov
testl
mov
movsl
mov
jb
sarb
push
ljmp
leave
dec
les
xor
cmp
loop
xchg
mov
outsb
shld
sub
mov
or
imul
insl
lods
in
mov
adc
pop
push
iret
jbe
jp
enter
mov
js
inc
loope
push
pushf
inc
inc
lods
xchg
add
fsubs
mov
mov
cmpsl
dec
pop
adc
and
and
testb
mov
outsl
jle
mov
shr
xor
fimull
cmp
pop
mov
sbb
add
cli
push
popf
cmp
push
nop
cli
push
cmp
jg
mov
xor
into
mov
rol
cmp
clc
sub
ds
push
ret
xchg
mov
shlb
cmp
jb
and
push
pop
ljmp
jle
push
sub
imul
push
mov
mov
xchg
fcmovnbe
subl
jp
sub
es
inc
repnz
out
lahf
mov
es
or
xor
sti
jno
jle
add
jmp
in
jl
shll
nop/reserved
sub
jno
mov
xlat
jge
ljmp
mov
mov
sub
pop
sbb
rcr
ljmp
jno
mov
mov
addr16
scas
add
jmp
inc
and
jbe
jg
inc
mov
and
pusha
xchg
fdivrs
inc
lahf
insl
test
scas
cmc
sub
jle
stos
clc
adc
ljmp
inc
xchg
mov
pop
insb
roll
arpl
or
xchg
loopne
pop
pop
mov
in
xor
push
push
push
cmp
cmp
mov
xor
adc
cmp
data16
cmp
jmp
and
test
ret
pusha
pop
xor
in
int
cmp
pusha
icebp
pop
pop
push
sub
addr16
out
inc
ds
or
popf
pop
pop
pop
imul
mov
and
add
pushf
sbb
dec
sub
jae
push
sbb
push
faddl
xor
pop
xchg
sbb
xor
insl
jb
inc
jp
fsubl
cmc
sbb
jnp
mov
cmp
sti
sub
bound
jno
stc
loope
inc
enter
pop
mov
and
outsb
cwtl
cmp
or
jl
or
cmp
dec
jo
mov
mov
sub
mov
das
jg
sbb
push
sub
cmp
pop
sbb
pop
repnz
fcoms
clc
jl
pop
popf
sahf
test
lea
pop
push
aaa
call
sub
push
xchg
ret
inc
lret
mov
mov
pop
pusha
imull
aam
xchg
jp
and
mov
stos
xchg
cli
or
dec
pusha
icebp
inc
sbb
in
jbe
sbb
dec
pushf
jge
sbb
jae
xor
movsl
mov
inc
sub
enter
pusha
iret
push
lret
add
jmp
insl
or
je
stos
imul
je
adc
add
into
xor
sbb
fists
or
out
aad
add
push
push
scas
addr16
and
jmp
and
push
pop
in
es
sub
sbb
movsb
shrb
cmp
in
cwtl
cltd
scas
in
lods
enter
stos
mov
int3
inc
in
std
xor
sub
std
lods
mov
xchg
repz
pop
addl
fisttpll
lahf
cmp
pop
inc
lret
cs
movsl
jg
adc
pop
sbb
icebp
or
push
mov
push
sahf
dec
sub
xchg
fucomp
mov
in
cltd
push
add
lds
mov
mov
mov
negb
test
lret
or
jg
xor
xor
gs
cmp
push
adc
push
or
jp
jmp
lea
pop
pop
mov
push
test
mov
sbb
xchg
mov
cmp
rdpmc
ret
pushl
jo,pt
movsl
pop
out
dec
jmp
cmpsl
mov
push
test
cmp
stos
repz
ss
add
mov
pop
lahf
cmp
push
pusha
xor
jno
xchg
jp
scas
inc
movzbl
mov
mov
adcb
aaa
mov
pop
dec
shll
mov
mov
div
xchg
add
outsl
ret
lock
jne
js
inc
or
mov
add
enter
xchg
jnp
lods
mov
in
fsubl
adc
and
sub
rcrl
mov
bound
popf
or
lds
adc
jo
test
or
cmpsl
pushl
lret
inc
fists
iret
cltd
or
stos
into
and
pop
in
stos
mov
test
cltd
lcall
aad
cmpb
sbb
mov
loope
sarl
int
mov
lret
lea
ret
dec
mov
ljmp
cmpl
sbb
jno
mov
in
or
lahf
mov
cwtl
and
jmp
jp
lods
jecxz
push
and
dec
loope
leave
fiaddl
insb
mov
xchg
push
sub
sub
arpl
std
fldl
lret
lods
cmp
cmpsb
xchg
and
adc
jg
sbb
dec
cmpsl
lds
jae
movsb
sub
into
mov
cs
pminsw
or
fsubs
loop
subb
leave
or
out
repnz
sub
or
pop
out
jb
dec
repz
jl
pop
and
push
inc
dec
lea
xchg
add
aas
jg
add
add
test
pop
test
jmp
xchg
mull
or
jecxz
repnz
sub
or
cmc
add
repz
fidivrl
insb
cmp
in
sub
sub
mov
aad
dec
fisttpll
fnsave
pop
jbe
mov
xchg
pop
sahf
jmp
mov
push
jle
je
pop
or
cwtl
inc
shll
enter
jae
ror
add
pop
xchg
pop
testb
mov
ret
loope
mov
hlt
movl
jns
cmp
jg
xchg
cmc
popa
dec
icebp
dec
andb
lahf
sbbb
and
push
xor
mov
std
call
add
ret
sarb
or
or
or
and
mov
cwtl
int3
push
int3
outsl
sub
and
out
mov
sbb
mov
pop
mov
xorb
xor
outsl
iret
mov
inc
mov
dec
scas
rcrb
and
orl
jb
pop
adc
mov
es
scas
lret
and
ja
xor
sub
xchg
push
mov
fs
pop
stos
or
jmp
ss
loop
lock
adc
repnz
mov
addr16
xchg
scas
or
push
cmc
jae
dec
push
repnz
xor
inc
add
inc
pop
push
mov
xlat
sub
inc
loope
ljmp
test
into
sbb
jnp
jno
int3
stos
std
mov
jmp
jge
inc
and
inc
lcall
push
cmp
cmpsl
addl
aad
movsb
cmp
and
jmp
mov
inc
dec
setnp
add
sub
cmp
xorb
sti
clc
adc
incl
aam
sub
jmp
rolb
call
xor
and
lret
jl
femms
imul
mov
ds
test
inc
mov
or
push
adc
sbb
xchg
xor
roll
cmpsb
insb
dec
adc
insb
aaa
add
pop
mov
stc
jp
and
rcrl
clc
in
mov
ss
pop
mov
cmp
mov
xchg
stc
aaa
sbb
lds
pop
into
into
cld
shl
inc
cmp
mov
decl
insb
or
sahf
dec
mov
cmp
sbb
xlat
out
dec
fisubs
sarb
jb
in
insb
aaa
inc
pop
loopne
shlb
adc
call
pusha
outsb
test
jnp
jecxz
popf
pop
inc
pop
mov
mov
arpl
and
jne
add
and
cmp
mov
mov
fdivr
or
jg
std
in
mov
fsubl
mov
jb
stos
inc
inc
xor
add
icebp
out
dec
and
insl
pusha
push
shrl
mov
adc
lea
xor
mov
popa
push
gs
or
popf
lods
call
call
sahf
dec
mov
pop
add
les
out
lcall
mov
test
out
stc
and
je
jl
mov
sbb
sbb
mov
push
sbb
inc
xchg
ds
push
cmp
or
mov
mov
aas
or
push
out
jo
lods
push
sarl
shl
aas
mov
dec
sub
imul
sti
rol
scas
and
out
divb
adc
lea
fldl
dec
dec
pop
pop
xchg
pop
jb
pop
mov
ss
popl
sti
ljmp
fildll
dec
enter
dec
mov
push
out
imul
xchg
cmp
cmpsb
mov
dec
xchg
xorl
insl
mov
subb
pusha
xor
in
aad
pusha
arpl
stc
add
mov
out
push
sub
cs
cli
cld
push
and
and
mov
mov
and
mov
sbb
pop
sbb
jbe
lret
subl
push
mov
addr16
adc
fsubrl
and
push
mov
lcall
rep
push
mov
jl
jge
or
cmp
cmp
cmp
mov
cmpsb
shr
jmp
jmp
cmp
call
mov
cld
xor
ficompl
testb
movsb
pop
mov
pop
xchg
adc
imul
or
jae
orl
out
sti
add
notb
mov
xchg
shr
bound
out
mov
jmp
pop
cmpsl
call
sti
xor
cli
popa
xchg
cltd
lock
fwait
sbb
or
mov
fdivs
mov
sub
cmc
rorl
mov
in
lcall
jne
gs
loop
imul
add
pop
mov
fs
cwtl
in
sbb
dec
in
xor
mov
scas
js
loopne
sub
cmp
jns
aad
inc
jp
jge
fwait
dec
mov
lock
mov
add
push
cmp
sub
xchg
inc
loope
mov
out
pop
sub
or
fwait
ret
cwtl
data16
jecxz
sbb
in
ud0
inc
cltd
les
arpl
sub
mov
dec
pop
scas
pop
ret
mov
and
jl
adc
out
ret
lock
pop
aad
mov
loopne,pn
dec
push
dec
sbb
mov
mov
push
outsb
add
or
movsb
pop
cltd
andl
into
lods
jmp
je
repz
aaa
jno
pop
xor
mov
mov
inc
aam
adc
pushf
inc
xlat
jl
and
popf
or
xor
pop
addb
sub
imul
mov
les
jle
addr16
push
out
push
cli
jp
push
inc
clc
jecxz
mov
sbb
xor
pop
fwait
lret
jnp
dec
sti
mov
push
jge
sbb
dec
pushf
stos
test
aaa
es
test
shr
mov
pop
cli
ja
sub
in
imulb
dec
rcll
bound
clc
scas
outsl
push
pop
xchg
jle
inc
jp
scas
push
pop
pop
bound
xor
mov
insb
stos
out
outsl
in
dec
adc
aaa
insb
call
cli
shrl
and
shl
fistpll
mov
out
out
pusha
sahf
pusha
push
cltd
inc
mov
dec
and
cli
push
rorl
aad
test
jo
push
inc
pop
sbb
lret
sbb
jno
out
stos
cs
sbb
dec
pop
mov
test
adc
add
add
xchg
xor
xor
and
lea
mov
mov
popf
sub
enter
push
cs
mov
xchg
fldenv
stc
sub
insb
dec
movsb
mov
push
ljmp
cmpsb
mov
lret
push
mov
and
inc
mov
popa
add
jb
dec
arpl
stc
dec
imul
int3
xor
js
add
test
pop
movsb
in
subb
popf
cmp
push
mov
sbb
inc
fistpl
stc
add
ret
in
sbb
into
jbe
rorl
mov
xchg
es
lea
mov
insb
or
loope
movsl
add
movsb
test
add
mov
lret
in
dec
fsubp
data16
inc
movsb
mov
cmp
lds
mov
add
popf
adc
dec
rcr
adc
xchg
pop
push
popa
lock
adcb
in
mov
montmul
cmpsb
test
ds
sahf
xor
les
cmp
adc
push
std
ds
sbb
test
inc
notl
mov
das
test
jne
cld
sti
and
mov
loopne
push
aas
mov
cmpsb
xchg
cmpsb
push
pusha
cli
cmp
jns
stos
pop
cwtl
mov
movl
xchg
cld
xor
mov
cmpsb
out
or
dec
xlat
mov
mov
jmp
call
stc
pop
inc
inc
cmp
xor
aad
aad
ljmp
jmp
xor
fildl
stc
mov
call
or
loope
icebp
movsl
xchg
data16
mov
cwtl
imul
rcrb
push
aad
xchg
pop
lret
add
jae
sub
push
leave
das
imul
aaa
stos
or
out
loop
lret
push
ljmp
mov
sbb
mov
pop
pop
adc
aam
ret
lret
call
gs
in
xlat
push
fisubrs
xor
in
mov
dec
stos
xchg
jb
push
pushf
cmp
pop
mov
loope
pop
mov
es
push
bsf
mov
loope
and
sbbl
test
in
daa
jecxz
inc
jl
movsb
je
xchg
fadds
jmp
fs
xchg
imul
pop
shlb
gs
push
mov
andb
loop
jnp
push
cmp
pushf
flds
mov
fmul
repnz
mov
loope
jns
cmp
add
mov
movsl
hlt
fisttpl
pop
mov
call
pop
enter
cmp
loop
push
jmp
cmpsb
lods
gs
sub
adc
cli
xchg
mov
push
add
sbb
loop
jne
jp
xchg
clc
fisubl
fidivrl
push
popa
mov
sub
lahf
out
push
std
push
or
inc
and
loopne
cs
hlt
inc
loop
dec
movsl
test
call
cli
sub
out
pop
mov
xor
rcr
jecxz
cmp
xor
inc
iret
pop
xchg
pop
mov
push
cld
mov
mov
lods
daa
inc
adc
ds
push
stos
adc
adc
out
or
pop
jp
in
cmc
in
lcall
dec
adc
jg
jle
cmp
rcrb
push
rolb
dec
or
xlat
inc
imul
xor
push
jl
stc
and
jge
js
pop
sahf
mov
cmp
mov
insb
je
movsl
add
pop
scas
push
mov
lcall
and
pop
pop
cmp
js
lret
adc
test
mov
dec
insb
and
push
scas
lcall
pop
jns
push
sbb
call
fwait
inc
dec
or
dec
in
xor
mov
mov
sbb
and
and
cmpl
jb
fistpl
pop
dec
subl
mov
sub
jbe
sub
aam
mov
ja
jne
or
and
lcall
adc
ljmp
xchg
push
rcl
push
int3
ljmp
sub
jns
sub
dec
cld
pop
test
mov
push
and
or
mov
inc
mov
mov
adc
lahf
arpl
or
pop
ret
inc
test
ret
add
push
mov
and
push
pop
xchg
je
xor
jl
clc
fs
test
sub
lret
lcall
lea
and
rolb
or
mov
cmpsl
shll
pop
mov
sar
in
cmpsl
push
push
mov
ss
add
in
cmp
adcb
mov
shl
int3
jns
jb
push
pushf
into
pop
fcompp
push
xchg
ljmp
mov
pop
ror
scas
lock
mov
add
pushf
ss
in
insl
adc
xor
sub
cwtl
inc
dec
mov
mov
lcall
jp
jle
gs
js
fistl
mov
out
loope
mov
or
out
adc
stc
dec
xor
fwait
incb
inc
lods
dec
dec
fwait
in
in
adc
jbe
mov
fwait
out
mov
shll
and
js
add
or
cmp
test
mov
jno
fildl
pop
dec
sub
jno
dec
hlt
jno
les
icebp
out
push
outsl
mov
aas
push
bound
fidivrs
adc
fisttps
xchg
ficoml
mov
xchg
insl
das
mov
jns
jo
insl
mov
xorb
repnz
pushf
flds
jp
les
cmp
pop
push
rcrl
shll
cmp
or
mov
or
jg
lcall
and
dec
mov
cmp
hlt
into
rcrb
loop
jle
sbb
jle
imul
fstps
xchg
add
imul
les
and
xchg
xor
aas
dec
xor
test
mov
imul
mov
mov
inc
xchg
cli
xchg
fmul
inc
cmp
mov
aaa
inc
inc
mov
add
lret
das
sti
xor
mov
push
sub
cmp
ret
cmpsb
js
lcall
mov
xor
push
lahf
dec
scas
jnp
ret
mov
sub
cmpb
cltd
dec
mov
mov
enter
sub
cmp
sarl
loopne
dec
jl
cmpsl
and
inc
pop
lods
popa
inc
pop
in
mov
sbb
push
and
lods
cmp
pop
mov
iret
and
xchg
add
nop
ret
jb
jbe
fstpl
decb
cmp
jb
xor
xor
inc
in
fisubs
mov
add
mov
and
adc
std
mov
fwait
push
pusha
mov
mov
invd
pop
push
inc
adc
lret
imul
sub
daa
xor
aaa
mov
popf
inc
sub
loope
in
sub
scas
pop
pop
in
jmp
adcb
aas
fbld
push
push
test
xor
fisttpll
push
mov
addr16
out
scas
xchg
pop
or
sbb
clc
mov
jno
enter
xchg
sbb
mov
or
cwtl
pop
push
sbb
test
xor
mov
dec
in
mov
sub
lods
lcall
iret
movsb
test
loop
push
jno
fldcw
or
enter
sub
mov
mov
dec
mov
mov
std
fldz
mov
cmpsl
das
add
dec
mov
movsb
and
push
push
shrb
lds
pop
in
mov
iret
fisttpl
pop
outsl
aad
sahf
pop
shl
push
shll
lahf
add
and
addr16
mov
loop
sbb
mov
enter
movsb
insl
into
add
lret
ljmp
aad
jg
stc
mov
hlt
push
push
adc
xchg
push
pop
xor
jmp
push
jbe
es
fs
lcall
mov
out
jg
sub
adc
fstl
dec
cs
add
in
daa
jnp
xlat
lods
xor
pop
out
adc
addr16
dec
cltd
sbb
nop
pop
sub
jbe
dec
xor
data16
mov
leave
in
mov
fwait
sub
jmp
or
inc
shrl
hlt
std
out
dec
notb
in
inc
adc
ret
xorl
jmp
mov
xchg
out
iret
jns
call
cwtl
clc
xor
and
ja
xchg
adc
sar
stc
xchg
stos
fwait
cmpsb
push
pop
push
daa
xor
scas
xchg
hlt
dec
pop
dec
lea
fwait
mov
outsl
xchg
cmp
mov
add
xchg
fisubs
adc
testl
sbb
cwtl
cmp
mov
inc
icebp
aaa
jb
xor
stos
jno
xor
jge
jl
push
mov
pop
outsb
fnsave
mov
sahf
dec
pop
add
leave
pop
enter
inc
dec
ja
mov
sbb
mov
jo
js
out
mov
cmpsl
fsubrs
fsubs
pop
fwait
lods
adc
add
inc
adcl
cmp
dec
shll
clc
pop
mov
stos
aaa
out
xchg
fcoms
dec
cmpsl
adc
jb
dec
movsb
enter
sub
rcrb
inc
and
xor
rcl
dec
mov
daa
push
mov
inc
insl
mov
mov
mov
pop
fidivrl
fistps
push
subb
push
jle
subl
push
hlt
outsb
lock
adc
sbb
sub
jle
addl
cmpl
cli
nop
sub
push
dec
xor
lahf
es
arpl
arpl
push
jge
mov
pop
loope
in
ljmp
inc
adc
cmp
shll
xchg
add
xor
cmp
jp
pop
mov
test
xor
out
push
or
scas
ret
xor
pop
stos
sbb
movsb
ljmp
hlt
or
fistpl
not
mov
push
jp
mov
aas
or
push
push
hlt
negb
cmp
or
cmp
fidivl
test
cmp
mov
mov
out
and
sbb
xchg
test
adc
adc
fcoml
mov
xchg
rcrb
pop
sbb
jl
mov
dec
sub
fcomip
cmp
ffreep
shll
repz
mov
into
stos
mov
shll
sbb
jno
dec
mov
cmp
adc
jbe
cmpsb
inc
enter
xchg
dec
add
and
repnz
aaa
roll
xchg
dec
add
ret
sbb
movsb
stos
add
dec
jmp
mov
dec
sbb
adc
inc
scas
push
pop
adc
push
jecxz
and
jmp
jle
jb
adc
int
fs
push
shl
aad
and
test
dec
daa
insb
mov
jb
aam
mov
shll
arpl
and
and
or
mov
dec
and
stos
fsts
out
sub
addr16
xchg
stos
fs
push
jmp
lahf
fisttpl
outsb
je
clc
mov
jl
leave
push
je
cld
negb
data16
cmp
xor
out
es
adc
movl
jmp
mov
jl
jge
add
sub
int
jbe
and
push
push
rclb
movsl
das
adc
sbb
insl
and
clc
xchg
jae
rorb
pop
mov
mov
sbb
push
lods
mov
xorb
pop
scas
inc
mov
mov
lcall
mov
cmpl
xchg
jns
cmp
cld
inc
mov
mov
pop
mov
pop
js
aaa
mov
adc
iret
hlt
push
cmp
adc
cmp
jg
push
xlat
fs
fcomi
aad
xchg
adc
push
and
sbb
aas
cld
jae
mov
sbb
add
leave
or
in
mov
xor
lret
jne
loopne
ficoms
adc
aad
inc
dec
mov
jg
stos
loopne
je
fcom
loope
inc
jno
test
dec
leave
sti
mov
das
inc
nop
call
fildll
fs
cli
ror
scas
dec
mov
scas
cmp
mov
pop
rol
int3
pop
sub
mov
test
andl
inc
mov
fistpl
shlb
mov
in
movsl
loope
or
push
addr16
pop
mov
push
mov
outsb
dec
lea
mov
and
inc
pop
ret
sbb
inc
std
je
dec
movb
jl
nop
push
stos
ss
cmpsb
test
rolb
or
add
jmp
cmp
mov
push
dec
fildl
adc
jbe
outsl
jb
jl
adc
in
lock
xchg
xchg
inc
ret
out
orl
adc
or
mov
ljmp
pop
inc
jl
lods
shlb
cmp
out
push
mov
pop
sbb
lea
dec
adc
test
xor
mov
and
mov
mov
aad
data16
mov
clc
inc
jmp
pop
insb
mov
daa
sbb
or
add
lea
mov
pop
mov
insl
popa
adc
data16
call
xor
and
shr
pop
cmp
and
iret
dec
enter
lret
mov
scas
orb
rol
es
icebp
jmp
movsb
imul
and
xor
xor
cmpsb
stc
or
es
cwtl
or
addr16
jno
fisubrs
mov
or
mov
adc
xchg
sub
out
mov
add
jl
test
out
or
rorb
xchg
das
mov
cmpl
in
call
cmpsb
arpl
or
jmp
dec
arpl
rolb
inc
test
mov
in
dec
stos
pop
fdivp
inc
sbb
movsb
sahf
imul
inc
pop
or
and
lds
jae
popf
add
mov
mov
push
xor
ja
pop
or
xchg
popa
sbb
sbb
mov
pop
addr16
in
pop
jae
cmp
xlat
jp
jae
jo
rcrl
mov
int3
or
push
int3
mov
add
incl
xlat
inc
xchg
std
ss
mov
push
test
add
scas
shlb
repnz
jle
and
out
rorl
push
fucomi
leave
xchg
pavgb
xchg
xor
pushf
ret
fimuls
xorb
adcl
jae
push
jp
loopne
leave
stos
xor
js
pop
pop
push
adcb
mov
push
and
mov
adc
adc
add
xchg
arpl
pushf
adc
cmp
xlat
xchg
out
push
dec
loope
push
andl
repz
mov
pushf
pop
push
lods
stos
sub
jmp
pop
shl
les
aaa
add
lods
jb
out
push
into
pushf
andl
jecxz
scas
sahf
mov
push
loopne
adc
jl
xchg
pusha
mov
push
cmpsl
cmpsb
andl
inc
lods
or
inc
jno
dec
mov
pop
and
popf
ret
mov
insl
adc
push
adc
xchg
xor
or
les
or
and
add
out
aas
out
int3
lcall
les
daa
cmp
fsub
lahf
sub
push
test
imul
sbb
int
xchg
xchg
stc
push
cmp
lods
xor
arpl
dec
dec
xor
in
or
inc
mov
lods
popa
cmc
xor
push
xchg
stos
mov
and
test
loop
int
push
gs
jo
and
sbbb
lret
and
dec
lea
pop
xchg
add
sub
daa
cmc
mov
dec
push
cwtl
and
or
or
cmp
fst
lret
mov
jb
lods
cmpl
shr
adc
fdivrl
add
xchg
mov
aaa
mov
call
js
xchg
std
push
rorl
mov
mov
dec
popa
dec
ja
insb
and
adc
cmp
push
push
inc
mov
jb
mov
out
or
test
xor
inc
in
mov
pop
sbb
fbstp
sahf
and
sahf
stos
add
mov
fildl
xor
call
mov
addr16
ljmp
push
xchg
repz
dec
scas
stos
dec
mov
sarb
xor
cmpsb
jns
mov
sub
inc
inc
imull
add
mov
cmp
lret
xor
pop
sub
stos
and
out
xor
lock
push
cmp
jno
or
daa
daa
cwtl
cmp
cmp
ss
pop
sti
rolb
push
jmp
fwait
nop
ja
data16
jg
ja
mov
ffreep
pop
or
jae
cwtl
je
xor
mov
cltd
mov
add
cmp
outsl
pop
int3
in
outsb
push
ficomps
test
iret
jl
mov
jmp
dec
jge
stos
dec
cmp
jns
enter
sbb
inc
out
push
jecxz
decl
mov
dec
jle
inc
pop
hlt
inc
repnz
sbb
and
and
loopne
mov
xor
dec
sti
cli
lea
fnstsw
lea
addr16
xor
or
push
in
sbb
push
shlb
jno
sub
and
xor
pop
mov
pop
aas
cmc
cmp
jecxz
dec
lds
fs
fidivs
les
std
pop
insl
inc
mov
sub
insb
lahf
mov
adc
test
imul
test
int3
ljmp
mov
push
rcrb
pop
insb
js
insb
mov
int3
mov
dec
jmp
mov
insl
jecxz
rcrl
cwtl
data16
xchg
popf
fst
and
ror
in
lods
insl
lock
test
lock
adc
or
jmp
push
dec
and
daa
pop
mov
repz
imul
popa
adcl
pop
add
test
push
sub
outsb
mov
out
test
mov
out
push
push
mov
aas
cmp
or
xchg
push
pop
repz
jno
movsl
sbb
test
pusha
push
punpcklbw
xor
or
xchg
test
hlt
adc
dec
movsl
pop
pop
dec
movsb
enter
cmp
xchg
xor
mov
mov
jno
idivb
cmp
out
into
ret
hlt
sub
pop
insl
lds
insb
cmp
mov
add
pushf
pop
inc
xchg
loope
mov
int
addr16
mov
imul
dec
inc
pop
xchg
mov
shlb
mov
lahf
inc
mov
sbbb
sbb
fneni(8087
sbb
cmc
add
imul
shrl
push
das
test
ret
call
jp
and
movsl
clc
pusha
frstor
loop
lods
and
mov
arpl
mov
pop
xchg
jnp
aad
movb
in
push
dec
mov
inc
or
ficompl
jno
cltd
gs
int
out
mov
iret
push
cmp
push
cltd
es
cli
arpl
inc
mov
fidivrl
add
sbb
lds
ret
xor
mov
aaa
adc
add
sbb
lds
adc
adc
or
jg
into
ljmp
insl
xlat
sub
es
jecxz
mov
dec
pushf
aad
es
mov
xchg
pushf
aam
mov
aad
xchg
stc
daa
sub
movsl
mov
movsl
outsl
pop
inc
push
xlat
movsl
divb
fwait
mov
xor
xor
out
pop
mov
push
cmc
push
jge
sub
mov
flds
dec
addb
ss
push
sub
fmull
dec
scas
inc
arpl
in
cld
lcall
testl
std
jp
xchg
xchg
js
mov
pop
sbb
hlt
aad
xchg
sub
ja
mov
fcomps
xchg
mov
repz
mov
or
call
int
or
test
imul
mov
cmp
push
jbe
or
sbb
js
daa
pop
add
shl
cmp
cli
xchg
loope
push
repnz
hlt
mov
insb
fwait
sbb
push
movsl
push
adc
fimuls
fs
mov
adc
mov
add
test
add
idiv
push
aas
outsb
clc
jmp
test
add
enter
xchg
pmaddwd
mov
dec
lods
jp
push
test
xchg
add
mov
cmp
lock
add
inc
fisttpll
adc
je
jp
ret
pop
lea
mulb
inc
stc
dec
mov
out
hlt
mov
sub
sub
shl
and
mov
xchg
inc
loopne
clc
mov
js
dec
push
std
pop
mov
insb
out
push
pop
mov
movsl
sbb
cmp
mov
push
divl
and
sbb
sub
mov
repz
add
in
inc
subps
adcb
and
or
shl
aaa
jge
aaa
mov
mov
nop
fimuls
roll
inc
int3
dec
out
icebp
hlt
inc
lods
popa
jnp
push
jmp
add
push
out
mov
mov
clc
inc
jne
loope
pop
or
clc
daa
cmpsb
stc
scas
mov
add
lods
dec
fstps
fldt
fcompl
mov
push
aas
fcmovnb
in
pop
sarl
push
add
daa
jl
in
mov
cmp
xor
shll
sarb
or
push
pop
rclb
or
out
or
std
lods
jb
jp
rolb
push
in
and
xor
mov
inc
insb
xchg
enter
dec
loop
sbb
mov
enter
insl
mov
lock
sbb
mov
jmp
dec
std
jecxz
mov
mov
nop
fcmovu
out
leave
loop
in
mov
cmp
and
jno
es
cltd
mov
lds
fwait
lea
sarl
shrb
sbb
bswap
xor
or
push
lds
push
inc
cli
mov
add
ret
xor
cltd
fiaddl
ret
cmc
mov
jno
cwtl
movsl
stos
test
dec
or
xchg
movups
sub
aad
loopne
lret
fs
push
xor
in
icebp
lret
fdivs
dec
or
jecxz
dec
lods
push
stos
ret
cmpl
jecxz
and
jecxz
xor
pop
or
or
mov
cli
loopne
pop
in
pop
in
addb
cmp
mov
imul
sbb
rcl
shl
xlat
pop
pop
es
xchg
popa
into
xchg
cld
xchg
dec
fcmovnb
es
aad
add
mov
pop
xsavec
outsb
xchg
gs
arpl
movsb
or
sahf
pop
test
add
cli
nop
mov
and
and
mov
jg
leave
sub
sub
nop
popa
jmp
scas
lret
sub
xchg
jns
sbb
mov
pop
jbe
mov
cmp
jb
ss
mov
dec
imul
pop
out
mov
lret
inc
sbb
imul
mov
aam
sbb
push
pop
and
stos
adc
addb
leave
call
outsl
mov
data16
mov
jecxz
push
inc
gs
imul
xor
decl
pusha
and
movsb
inc
push
mov
mov
rclb
fisubs
scas
mov
sub
test
aaa
lock
jle
mov
outsb
aad
aam
inc
ds
js
mov
jp
inc
insl
adc
pop
jo
mov
or
mov
cli
ljmp
cmp
mov
mov
xchg
ret
push
sbb
mov
cld
out
sbb
pop
mov
js
lahf
jo
in
jmp
jmp
jbe
cwtl
and
les
xchg
jae
xchg
xor
pop
nop
jne
mov
mov
arpl
inc
icebp
gs
add
jbe
inc
inc
mov
push
pop
add
cmp
jecxz
repnz
rcll
sub
jnp
push
add
mov
cmp
pop
fs
es
icebp
outsl
mov
jbe
xor
divl
push
xchg
pop
or
sub
fcoms
rcrl
adc
mov
gs
int
pop
push
xor
inc
lea
add
loopne
fsubrs
xchg
mov
stc
pushf
out
mov
mov
xor
sub
jp,pn
dec
jne
push
or
sub
ss
or
enter
aam
inc
scas
dec
ret
sar
xchg
cmpsl
xchg
inc
sbb
cmp
push
test
je
or
lods
fs
fsubrs
fildl
mov
mov
aam
push
cli
sbb
lret
sti
and
je
ljmp
inc
and
fdivl
das
das
sarl
inc
imul
les
mov
mov
loope
push
mov
inc
bswap
mov
in
fmuls
sar
std
jp
fiaddl
mov
ret
mov
sub
or
cmp
xchg
dec
mulb
cmpsl
gs
fwait
ret
adc
cmpsb
cmp
mov
sub
aam
sar
lcall
cmp
pop
and
sbb
ljmp
xor
loop
or
xchg
call
pop
ja
pop
pop
xchg
xchg
adc
test
ret
dec
mov
push
cmp
or
out
jne
jbe
xchg
mov
test
outsl
jge
jmp
xlat
movsb
mov
testb
rcll
mov
inc
lock
push
inc
xor
scas
pop
in
mov
notb
jle
arpl
bound
insb
icebp
cwtl
jo
dec
mov
push
je
jmp
dec
inc
push
pop
jmp
jmp
cld
ret
pusha
xchg
xchg
fidivl
xchg
dec
push
pop
push
addb
jne
outsb
fcompl
ja
dec
fs
add
dec
decl
xchg
call
imul
cmpsb
cli
shlb
or
jecxz
fisttps
xchg
mov
fabs
dec
bound
dec
test
popf
sub
fucomip
cmp
jg
iret
xchg
jb
or
fiadds
repz
mov
out
xchg
jns
es
adc
and
in
xchg
out
add
cmpsl
push
mov
sbb
sahf
fcoml
pushf
in
xchg
rcrb
xchg
and
test
mov
jb
xchg
mov
dec
stc
xor
mov
les
adc
imul
loope
xor
xor
cld
test
ss
aad
int
addr16
sub
lea
cld
adc
push
jb
insl
int
pop
in
xor
and
sub
lods
push
mov
mov
mov
xor
pop
out
push
fsubp
sub
data16
inc
lret
movb
fisubrs
test
testb
mov
les
aaa
push
mov
out
stos
int3
xchg
xchg
les
in
xlat
push
or
jp
and
dec
cmc
mov
sub
mov
or
mov
in
jmp
mov
fsubrp
sub
ret
repz
or
inc
nopl
sub
mov
jl
lahf
push
shrl
out
out
add
cmpsl
xchg
lea
gs
pop
lret
inc
insb
inc
loop
out
jne
inc
addl
sbbl
sbb
sbb
dec
jmp
inc
movsl
arpl
outsl
push
pop
stos
ret
xchg
out
or
pusha
sbb
mov
cmp
and
pop
push
sub
es
adc
movb
jne
mov
and
and
lret
and
inc
cmp
movl
das
stos
xchg
push
push
xor
inc
pop
inc
xlat
inc
pop
fwait
sbb
lret
addl
dec
gs
in
mov
sub
aad
jl
cmp
fwait
imul
mov
ds
jb
push
stc
adcb
xor
in
cltd
data16
dec
rorb
nop
adc
xchg
movsb
sbb
mov
mov
test
test
and
stos
cwtl
cmp
dec
icebp
ja
sub
mov
push
xchg
daa
in
out
push
push
lret
repnz
sahf
orb
cli
jb
inc
test
jp
mov
js
jecxz
inc
dec
sti
cmp
test
cmp
lods
or
iret
std
sti
push
fcmovb
lahf
lock
arpl
loope
add
inc
sub
jge
or
dec
lods
lret
int3
andb
out
mov
cltd
pop
inc
mov
shlb
jns
out
sub
sub
insl
imul
sbb
in
fmull
pop
pop
fprem1
mov
repnz
iret
cmpsl
aad
je
les
out
icebp
dec
dec
mov
dec
jg
mov
test
or
add
sub
in
jmp
cs
pop
jb
or
push
mov
lcall
adc
jbe
shrb
or
out
mov
sbb
xor
stos
push
xor
push
arpl
popf
fisubs
pop
stos
or
cmp
cli
out
fistl
orb
xchg
jmp
cmp
shll
push
popa
add
insl
mov
int
nop
pop
ret
jae
xor
adc
lahf
in
mov
push
jecxz
or
xor
leave
outsl
outsl
inc
xchg
cmc
mov
xchg
outsl
fistpll
sbb
xor
adc
fistpll
es
adc
roll
cmp
jnp
ds
jle
dec
pop
fmull
adc
jle
inc
leave
jp
mov
pop
dec
xlat
or
repnz
or
scas
push
jb
jle
bound
xchg
movsl
dec
xor
push
clc
jmp
imul
fwait
mov
imul
xchg
rorl
lods
rorl
test
mov
pop
push
in
sub
fcomps
scas
aaa
aas
adc
sahf
pushf
stos
repz
lds
or
sub
jnp
cli
mov
stc
push
imul
int3
outsb
test
and
orl
xor
xchg
mov
jo
mov
xchg
sarb
shufps
int
cmpsb
inc
int3
mov
or
out
xchg
inc
jno
iret
sbb
or
or
lret
mov
sub
mov
adc
xchg
xor
xor
daa
mov
or
movsb
cltd
mov
je
iret
sbb
ret
cmp
fisttps
push
and
mov
jns
jmp
cmpsb
in
mov
data16
mov
popf
mov
shrl
imul
arpl
ret
xchg
loopne
in
and
add
je
pop
inc
sbb
or
xchg
mov
loope
clc
test
add
pop
mov
xor
push
rclb
pushf
xor
stos
and
sbb
test
dec
fwait
xor
repnz
mov
adc
arpl
fisubrl
cmp
stos
nop
hlt
cmp
push
mov
ret
xor
bound
stc
jbe
mov
or
stc
repz
inc
pop
ljmp
jle
pop
retw
cmp
push
xor
push
jecxz
pop
jo
cmpsb
cmp
dec
sub
gs
adc
rcr
fldcw
and
roll
sti
xor
or
cmp
rcrb
repz
inc
push
jo
dec
ds
cmp
dec
js
mov
mov
gs
out
inc
fnstsw
lahf
rcrl
in
add
scas
jns
pusha
sbb
jecxz
popf
dec
test
ss
dec
dec
inc
jbe
pop
push
inc
xor
or
pop
cmp
mov
fwait
mov
rclb
add
in
jg
pop
dec
push
sarl
cmp
sub
ss
lods
lret
dec
sbb
push
outsb
inc
xor
jae
aaa
daa
mov
dec
rol
rcrl
pop
sub
cli
sbb
xor
pop
sub
xor
cmpsl
and
sub
repz
movsl
mov
push
shr
xchg
inc
mov
adc
mov
cmp
outsl
idivb
mov
add
ss
sarl
pop
in
xor
xor
out
int
dec
subl
jg
sub
cmp
js
push
cmp
mov
jecxz
imulb
inc
xabort
mov
test
mull
fcoml
lock
cmc
push
lcallw
aam
mov
movl
insl
fists
fidivl
je
std
sbb
mov
sub
xchg
fcomps
insb
dec
cs
add
cmp
es
inc
xor
lods
push
adc
fcomps
jno
pushf
outsl
jg
mov
scas
aad
sbb
cld
ret
cli
stos
loopne
sub
xchg
inc
and
stc
sbb
sub
lret
ds
testl
popf
cmp
cmp
adc
pop
ret
dec
stc
push
daa
mov
test
ljmp
outsl
pushf
add
ja
push
dec
mov
insb
divl
test
dec
mov
adc
mov
adc
pop
xor
sbb
hlt
lcall
icebp
jo
push
jg
fcmove
in
je
pop
pop
mov
and
add
in
and
cltd
add
mov
mov
test
inc
nop
inc
lods
push
fucomi
jp
cld
addr16
lcall
lcall
cwtl
out
pushf
push
sbb
add
pop
insl
cmpsl
jne
int3
jle
addb
fwait
pop
aad
cmpsb
cwtl
aaa
or
xchg
jmp
mov
fildl
movsb
insl
and
dec
push
mov
fcoms
cmp
dec
and
pop
mov
ljmp
inc
popl
cmp
imul
lock
adc
ja
loope
jp
out
xchg
in
out
xorb
fldl
xor
mov
hlt
out
fcoms
or
nop
dec
mov
popf
test
les
mov
mov
or
and
mov
mov
cmp
notl
add
xlat
xor
fnstcw
xchg
lea
mov
pop
fiaddl
nop
dec
add
pop
xor
lahf
lea
jl
jo
icebp
rclb
cmp
xchg
mov
dec
add
mov
lcall
mov
mov
test
pop
in
pop
mov
les
js
inc
ret
dec
mov
out
push
inc
cmpsb
test
dec
lods
popf
loope
push
sub
jae
xor
mov
nop
push
xor
jg
icebp
mov
jg
pusha
xor
sti
inc
dec
jge
mov
iret
ljmp
fcmovb
sbb
nop
insb
inc
mov
or
repnz
scas
jge
mov
xor
push
outsl
push
movsl
xchg
lcall
mov
sbb
jl
mov
sub
pop
or
and
xor
adc
jle
mov
sbb
ret
inc
jae
sahf
fs
fisubrl
cli
push
mov
mov
sub
sbb
dec
jno
pop
movsl
jnp
bound
call
insl
push
rolb
lret
cmp
ret
imul
jle
xlat
dec
sbb
fldenv
cmp
cwtl
bnd
out
adc
int3
insb
jle
jecxz
jae
scas
sbb
shll
mov
mov
pop
xchg
repz
adc
idiv
in
nopl
mov
push
or
stc
cmc
addps
lock
clc
jg
and
lods
ds
cmp
adc
pop
nop
decl
cld
fdivrs
call
adc
adc
jmp
cs
lcall
pop
cltd
mov
mov
mov
xchg
insb
and
in
mov
stos
out
mov
sbb
and
ret
test
adc
push
repz
stos
cmp
in
test
ss
testl
icebp
cmp
aas
test
fnstenv
test
mov
int3
faddl
jge
loopne
add
dec
fnstenv
hlt
mov
sar
fistps
je
mov
jmp
and
jmp
add
call
jg
sbb
pop
add
mov
jle
inc
fucomip
lret
cmpsl
push
aad
loope
out
icebp
sbb
pop
inc
imul
scas
fs
stc
ss
inc
fidivrl
stc
outsl
stc
jg
push
mov
sbb
fistl
dec
sub
cmp
inc
sub
pusha
mov
incb
es
push
or
xor
sub
inc
pop
mov
ret
adc
out
cli
fwait
mov
xor
inc
insl
out
or
jns
or
outsb
cmpsb
add
pop
push
loope
jecxz
and
pop
cli
rolb
sub
sbb
cmp
mov
jmp
sahf
cs
into
inc
xor
test
imul
fwait
loopne
mov
aam
in
and
jno
cltd
mov
bnd
xor
movsb
imul
xchg
mov
cli
pop
and
xchg
dec
in
test
int
outsb
push
and
arpl
and
push
push
daa
inc
dec
lea
gs
cmp
es
mov
sbb
in
cmpsl
das
out
and
lods
pop
dec
aaa
add
lret
add
sahf
adc
bswap
or
aas
sub
inc
lock
repz
cmp
out
dec
mov
jmp
fsubr
jne
cmp
pop
repz
cmp
lcall
pop
mov
add
xorl
repnz
mov
fidivrl
int3
inc
or
clc
rcrb
fcomp
iret
bnd
in
xchg
in
je
dec
iret
adc
aam
jb
add
iret
adc
loop
insl
bound
daa
sbb
jnp
out
mov
xchg
mov
lock
xor
mov
cmpsl
sub
lret
jo
imull
xlat
xchg
gs
std
add
jae
les
adc
jnp
jns
call
and
mov
xor
mov
outsb
int
dec
xchg
das
in
dec
xchg
push
test
js
imulb
jl
add
xchg
mov
mov
xchg
adc
or
jne
pop
ret
adc
mov
or
fadds
dec
mov
arpl
loope
pop
mov
xor
gs
pop
pop
fildl
and
sub
xchg
cmpsb
adc
sbb
test
and
add
fisttpll
adc
mov
movsl
xchg
repz
bound
add
leave
jecxz
bound
xchg
dec
xor
adc
jecxz
inc
js
das
jne
fs
or
rolb
sub
loopne
pop
dec
popa
ljmp
jbe
cmc
iret
lods
or
shrl
cmpsl
inc
sahf
cld
mov
shl
and
mov
xor
xlat
js
dec
xor
and
xchg
adc
sub
cmp
and
dec
cmpb
lea
mov
sbb
outsl
inc
mull
push
mov
add
ja
mov
xorb
arpl
test
mov
push
adc
ja
xor
inc
add
sub
jge
fidivrl
pop
leave
movsl
test
sbbb
lods
xchg
orb
lea
mov
call
add
scas
add
cmp
faddp
pop
ret
loope
outsb
stc
repz
xchg
addr16
in
ljmp
andl
mulb
cmpsb
sahf
inc
inc
inc
xchg
mov
sti
inc
imul
jg
fnstsw
xchg
mov
cli
fisubs
fnstcw
pop
mov
sub
pop
lods
dec
mov
jle
push
mov
popa
sbb
test
sbb
xchg
fstl
inc
aad
xorb
sub
std
test
insl
dec
out
dec
pop
loop
test
sub
pop
aas
ss
inc
pop
outsb
shlb
sbb
ja
mov
shll
int3
or
out
popa
sbb
mov
push
sahf
xor
scas
icebp
rorl
or
mov
out
std
xchg
pusha
inc
push
push
mov
sbb
cltd
scas
add
jl
dec
xchg
incl
test
movsb
pop
xchg
bound
adc
cld
aad
and
imul
nop
sbb
sbb
imul
adc
decb
jo
cltd
jmp
stos
or
insb
cmp
stos
push
pop
arpl
cltd
pop
push
cmp
icebp
pop
cmp
xchg
lahf
test
push
inc
sbb
and
or
pop
add
clc
sbb
jecxz
sarb
mov
xor
lods
xchg
adc
pop
ljmp
cmp
xchg
jmp
xchg
inc
aad
loopne
push
dec
pop
aaa
cmp
push
jae
psubq
lcall
cmp
mov
and
mov
pusha
xchg
xlat
cli
lea
cmc
mov
sti
loope,pn
mov
ret
xchg
cmp
je
ja
ret
rolb
out
lea
xor
aam
pop
sub
ret
int
push
add
adc
insl
or
xchg
data16
negl
sbbb
mov
test
imul
int3
jae
cmpsl
jmp
mov
and
adc
sti
cld
insl
mov
inc
dec
inc
adc
scas
stc
hlt
lret
mov
and
outsl
cmp
lods
sub
push
lods
or
xchg
xchg
dec
cmp
xchg
mov
or
ret
data16
enter
push
rorb
xor
sahf
stos
icebp
cmp
xor
mov
movsl
xor
add
or
outsb
inc
cltd
or
mov
outsb
je
or
lock
dec
loope
push
push
push
mov
jb
jae
das
enter
ljmp
idivl
mov
xchg
sub
inc
fnstenv
dec
ss
stos
fisttpl
fmuls
cmp
push
and
hlt
and
lock
adc
push
movsb
ret
imul
xlat
mov
add
iret
imul
dec
jg
adc
ret
insb
dec
loop
imul
pop
test
pushfw
test
lds
and
add
and
cs
hlt
cld
or
xchg
mov
mov
push
mov
ret
into
mov
xlat
mov
subl
hlt
loopne
scas
add
dec
dec
pop
or
repz
popa
pop
lahf
imulb
fs
and
jmp
push
push
fcoml
push
mov
and
inc
fwait
lods
sub
adc
je
mulb
jbe
xor
sub
ss
in
lret
xor
sti
jo
mov
fmul
mov
lds
outsl
or
out
les
cmp
dec
fwait
orl
pop
push
lods
mov
cmp
inc
jmp
lea
repz
inc
ret
jg
neg
mov
jmp
aas
xor
dec
or
pop
xor
lods
xchg
int
inc
lds
or
fdivrl
out
xchg
mov
insb
std
nop
dec
leave
pop
clc
jbe
dec
cld
xchg
ret
mov
loopne
sbb
sahf
lods
insl
cli
sbb
repz
mov
aas
cmp
sub
cld
mov
cmpsl
sbb
fildl
add
nop
mov
int3
fadds
popf
adc
mov
and
mov
hlt
pop
push
out
pop
ljmp
xor
add
or
pop
xchg
xor
sbb
lods
repnz
xor
cmp
cmpl
data16
ss
in
rcrb
ret
es
hlt
movsl
lret
pop
xor
push
pop
or
sbb
jg
or
mov
push
mov
idiv
insb
push
inc
test
aam
inc
add
sarl
sbbb
outsb
push
add
cmp
fcoml
cld
xchg
jmp
mov
adc
xchg
or
pop
sub
adc
scas
cmpsb
sub
jg
or
es
andl
je
incb
xor
xor
xchg
xchg
scas
mov
jge
push
mov
inc
jno
test
das
in
xor
lock
sbb
cmp
inc
pop
loop
mov
push
testl
jne
mov
push
add
jle
mov
das
pop
sub
mov
int3
adc
pop
pop
ret
imul
ret
adc
pop
xor
outsl
in
ficompl
dec
and
lret
js
ret
into
mov
bound
imul
popa
ljmp
lea
push
adc
pop
les
push
push
jb
bound
rcll
push
sub
xlat
mov
pop
lock
push
sahf
or
aaa
ror
lods
or
sbb
sbb
jo
stos
lods
imulb
and
jo
xlat
mov
rcrb
and
sub
fisubrl
lret
fld
push
mov
lea
mov
sti
cltd
addb
add
or
arpl
add
rcrb
jo
pop
xchg
insb
loope
fisttpl
adc
push
repz
out
mov
icebp
mov
call
ret
fisttpll
mov
daa
mov
xor
push
mov
mov
lcall
scas
mov
add
sbb
cmpsl
fisttps
clc
sbb
mov
sahf
cmc
add
lods
cmp
xor
fdivs
mov
cwtl
je
arpl
pop
xchg
jae
mov
fwait
sarb
push
add
sub
xchg
adc
sub
pop
lret
popf
rclb
pop
bound
xchg
mov
fidivrs
mov
ja
xor
clc
in
or
dec
push
inc
pop
mov
pop
mov
dec
dec
xor
pusha
lcall
cs
daa
sbb
out
inc
mov
sbb
xchg
cltd
jg
or
inc
mov
mov
jne
xchg
jecxz
gs
imul
rorb
aas
shll
fisttpll
inc
mov
cmp
pop
movsb
and
sbb
cld
ja
push
nop
jg
push
js
mov
adc
mov
sub
mov
cli
inc
jmp
leave
and
push
jecxz
outsl
add
and
hlt
mov
inc
inc
push
imul
es
les
xorl
xor
fidivrl
mov
pop
test
orl
repnz
push
test
cmp
sub
mov
pop
jno
arpl
and
popa
sub
test
push
add
bound
add
mov
add
cltd
push
lret
inc
mov
fwait
add
popa
xchg
mov
jnp
lret
loop
inc
cmpsb
inc
aam
int
mov
jg
pop
cmpsl
sub
cltd
cmp
sbb
jmp
xor
jg
fcom
scas
ret
cmp
pop
jle
mov
sbb
out
lods
mov
dec
push
pop
fs
pop
jns
cmpsl
es
xor
ja
dec
inc
xchg
sbb
pop
das
dec
cmp
cltd
test
pusha
jns
ret
bound
mov
mov
insb
out
push
or
lock
add
add
out
and
jp
sbb
mov
ds
cltd
xchg
xchg
cwtl
push
test
xchg
aam
jae
mov
or
icebp
movsl
jp
xchg
push
loopne
es
push
jl
aaa
and
dec
stos
xlat
lret
add
icebp
sti
out
imul
fstpt
mov
repnz
aam
std
pop
cmp
push
mov
push
dec
lcall
fsubrl
jg
add
dec
test
push
int3
push
add
loope
pop
inc
sbb
rcl
shr
mov
mov
fnstcw
or
adc
sti
jae
inc
sub
test
call
rcl
sbb
sub
gs
xor
std
add
push
imul
lcall
popf
dec
ret
mov
pop
sarl
jmp
in
mov
addr16
inc
flds
iret
cs
jge
xchg
popa
cld
mov
lahf
pop
pop
and
stos
aas
je
push
lcall
mov
dec
mov
xchg
movsl
arpl
cmp
mov
jp
xchg
xor
aaa
cmp
jl
lcall
out
mov
add
repnz
int
mov
mov
shr
push
cmp
or
clc
dec
in
xchg
add
hlt
jb
test
ljmp
addr16
xor
aad
mov
pop
mov
ja
loopne
scas
or
into
pop
adc
mov
mov
mov
mov
jbe
push
lahf
jmp
fistps
or
insl
mov
int
aam
xlat
sub
enter
mov
pop
xor
cmc
xor
div
test
add
cmp
xor
jp
xlat
push
jno
jge
stc
xor
xor
mov
pop
and
rclb
push
sub
sub
push
rorl
fdivrs
call
inc
xor
and
call
xchg
subl
lea
les
nop
pushf
mov
pop
outsb
mov
lret
jp
mov
femms
or
cmp
rol
cwtl
jne
jge
mov
push
or
aas
fimuls
adc
call
aaa
hlt
cmp
cmp
fildll
inc
cltd
mov
data16
push
jae
je
and
xchg
out
test
int3
lock
jl
jl
adc
mov
rep
movsl
in
pushf
outsl
cmc
and
or
inc
sub
arpl
rorb
dec
dec
xor
mov
xor
inc
gs
push
sub
adc
add
in
nop
mov
push
stos
loope
movzbl
out
mov
loope
mov
gs
cltd
inc
cmp
aas
mov
aam
mov
mov
pop
sub
aas
lock
pop
loopne
mov
push
clc
jecxz
test
and
lret
aaa
rcrl
push
add
lea
int3
aas
fnstsw
xorl
inc
fdivr
mov
jmp
enter
iret
mull
bnd
pop
mov
jle
pop
ret
fmuls
mov
or
pop
push
xor
lret
into
xlat
cmp
inc
orl
xchg
push
pop
subb
or
in
prefetchnta
pop
das
idivl
sti
pop
gs
jnp
icebp
ficoms
mov
or
je
js
sti
pop
pop
outsl
enter
push
add
lods
and
int
iret
loope
shr
mov
sbb
cmpsb
inc
outsb
popf
aad
fistl
cmpsl
mov
scas
js
jnp
jo
push
cli
out
cmpl
mov
fisubs
adc
shll
jge
fs
pop
mov
push
sti
jne
js
xor
cmp
aaa
sbb
daa
lahf
mov
or
push
notb
push
std
das
je
enter
insb
inc
jge
pop
xor
ret
cld
mov
rolb
iret
sahf
or
mov
pop
popa
xor
lret
aas
in
pop
mov
jge
sbb
js
loopne
jns
cmp
pop
inc
shl
or
mov
jl
lret
sarl
hlt
movl
mov
sbb
xor
inc
adc
push
cli
insb
xchg
sub
addr16
sti
ja
ret
jno
test
inc
or
inc
pop
lret
mov
pop
mov
inc
movsl
popf
xor
mov
repnz
push
inc
xchg
pop
mov
int
imul
aam
test
lcall
movsb
repnz
lods
dec
mov
rcr
mov
mov
lret
subl
insl
dec
outsb
je
adc
dec
mov
aaa
in
jle
lea
dec
xchg
and
pushf
mov
shlb
push
or
sti
push
sbb
nop
sub
pop
dec
ljmp
add
dec
xor
jb
mov
sub
shll
out
rorb
add
call
gs
ljmp
stc
xor
into
insb
in
cmp
outsl
mov
cmpsl
jmp
adc
sub
sub
dec
test
shl
out
ljmp
ds
enter
xor
sbb
xor
jo
jmp
fiaddl
das
pop
popa
adc
outsb
sbb
dec
mov
aam
stos
push
loope
sbb
lcall
icebp
aad
fstp
insl
testl
iret
clc
lea
rorl
adc
mov
imulb
fildl
mov
shlb
push
ljmp
in
cmp
out
data16
sbb
nop
jmp
xchg
push
pop
sub
mov
call
imul
push
je
mov
and
stos
inc
cmpb
and
sbb
pop
xchg
cli
sti
std
rorb
mov
arpl
stos
jnp
fiadds
adc
push
push
push
mov
js
aad
jp
fs
rolb
es
shll
sbb
cmc
outsb
outsl
cmp
int3
cmpl
pop
cmp
lods
pop
pop
div
pop
push
aas
out
arpl
movsb
popf
cli
dec
out
push
arpl
sub
push
out
mov
das
add
rolb
mov
push
mov
dec
xor
adc
lea
dec
sub
shrl
loop
cmp
mov
outsl
insb
jb
aaa
aaa
xorl
pop
dec
jp
add
mov
add
mov
xor
mov
add
lea
pop
sbb
mov
or
sbb
adc
ret
leave
sbb
cmp
sbb
mov
jne
sbb
or
stc
or
pop
pop
mov
fcmove
sahf
call
cmp
arpl
jmp
sbb
dec
add
and
jb
aas
xor
in
stos
mov
clc
vshufps
aam
add
inc
and
cmp
adc
sbb
fwait
or
cwtl
dec
mov
sbb
and
daa
jecxz
dec
outsl
or
aad
cmpsl
dec
mov
dec
mov
rol
into
jbe
cmp
xchg
jp
fprem1
fs
out
movsb
xchg
mov
and
outsl
std
cmp
jo
rolb
aam
aam
int3
mov
add
in
lock
cld
fildl
outsl
inc
rcrl
movsl
out
adc
inc
lret
push
pop
rol
ss
out
mov
out
adcb
filds
fsubl
mov
test
in
mov
loopne
scas
and
jno
inc
cmpb
mov
cmp
insb
nop
bnd
js
mov
jmp
negb
lods
fisubrs
push
dec
mov
or
in
lods
cltd
xchg
xchg
outsl
pop
je
cmp
sahf
loopne
test
inc
inc
int
push
sbb
pop
push
pop
inc
pop
or
loop,pt
mov
stc
out
inc
stc
add
scas
adc
inc
xchg
cmp
aam
mov
or
jg
jp
and
mov
inc
dec
jno
inc
outsb
cmp
nop
iret
or
push
repnz
mov
leave
ret
and
dec
mov
xor
sbb
fcmovnb
sbb
lcall
cmp
pop
jp
jge
or
insl
cmpsl
jb
push
mov
imul
out
dec
mov
imul
xor
pop
fwait
add
gs
mov
jbe
or
dec
mov
xchg
ficompl
mov
and
mov
bnd
add
jg
xchg
js
and
push
scas
cltd
pop
cmp
mov
test
cs
aad
adc
roll
sar
pop
mov
or
adcb
loopne
lret
cli
hlt
cmp
dec
jmp
add
adc
outsb
test
loop
push
cltd
jo
stc
mov
adc
pushf
ja
push
dec
rol
cmp
and
in
or
sub
clc
pop
jno
xlat
daa
rcr
adc
loopne
sbb
pop
stc
pop
movsb
std
jno
stos
adc
dec
flds
push
es
subl
shr
mov
push
stos
fdivrs
mov
pop
ss
pop
pop
cld
cmpb
add
jge
fs
out
mov
push
pop
loop
sbb
sub
cmc
lea
repz
insl
push
and
into
in
stos
adc
out
sahf
mov
dec
icebp
sbb
imul
dec
rclb
ret
fistpl
fimull
stc
shrl
test
sbb
scas
leave
dec
sub
dec
fs
xchg
int3
pushf
addr16
out
and
mov
out
shlb
xchg
push
sbb
sub
fldt
imul
add
mov
xor
adc
repnz
pusha
xor
jg
or
icebp
sub
dec
push
fcmovne
fildl
imul
les
sbb
xchg
int3
lret
jne
mov
sbb
mov
push
adc
sbb
fwait
jne
ret
dec
movsb
rcrb
jge
cbtw
jle
add
xchg
and
mov
add
push
imul
jae
sbb
insb
and
adc
nop
push
xor
aad
popa
ds
shlb
or
cmp
jo
adc
scas
mov
add
mov
lods
push
lcall
and
roll
sub
push
lods
xor
lahf
rolb
sbb
jae
cmp
mov
or
outsb
outsb
add
dec
sub
lea
bound
pop
loop
cmp
scas
and
jmp
push
xchg
fcoml
xchg
lahf
adc
stos
sbb
jecxz
jecxz
les
adc
jno
cs
addr16
int3
sbb
inc
int
mov
stc
and
mov
inc
mov
data16
push
jle
or
mov
inc
lods
and
mov
jns
notl
push
shlb
roll
jbe
fdivs
repnz
pop
jae
pushf
inc
subl
push
xor
mov
and
repz
sub
xor
push
xor
adc
push
ljmp
jmp
pop
loop
mov
mov
aaa
out
rcr
inc
loope
out
inc
mov
rorb
jnp
xlat
mov
adc
and
mov
and
inc
xchg
movsb
jbe
nop
outsb
inc
mov
out
leave
sub
in
out
or
pop
out
test
and
jecxz
xchg
shlb
push
mov
aaa
push
in
popa
adc
pop
pusha
xor
movl
insl
jo
mov
and
xor
adc
lahf
rclb
jp
es
jne
push
mov
cltd
push
mov
and
sbb
push
sarb
out
mov
sub
inc
loope
xor
push
iret
insl
scas
ficomps
jns
cmpb
mov
lret
add
jmp
add
and
in
jmp
in
dec
mov
divl
into
fwait
push
roll
dec
leave
dec
inc
pusha
sbbl
sbb
sub
cld
test
ljmp
push
lahf
je
pusha
sti
lahf
mov
or
sbb
or
inc
pop
imul
push
dec
sahf
ss
imulb
mov
nop
adc
jg
mov
adc
xchg
nop
cmp
daa
scas
aad
nop
popf
xchg
pop
mov
jnp
cmpsl
vmwrite
mov
push
lock
xor
mov
pop
ljmp
fldl
sbb
mov
add
push
jno
jb
adc
stc
sub
mov
mov
or
xlat
push
cmp
jbe
pop
pop
add
cmp
adc
jb
hlt
push
shl
pop
mov
xor
inc
gs
xchg
aad
pop
ficoml
daa
jmp
mov
jb,pt
dec
test
pop
inc
stos
sub
mov
adc
fwait
and
jg
repnz
cmp
cmp
les
xor
cmp
xor
and
incb
xchg
inc
xlat
mov
push
outsl
mov
addr16
sti
das
sahf
dec
jae
pop
movl
xchg
add
iret
sub
mov
sbb
dec
cltd
fiadds
shrb
jle
xchg
lret
fsts
sarl
sub
inc
shll
jne
lret
sub
ds
cmp
push
cmpsl
fwait
dec
and
xchg
das
and
dec
push
iret
jae
mov
xchg
stc
aam
into
mov
sbb
jo
sbb
mov
push
jno
dec
push
mov
pop
outsb
in
jae
stc
orb
and
sub
fists
int
xchg
cltd
enter
fiaddl
es
and
stc
push
pop
fstpt
fs
popf
out
sar
pop
mov
mov
push
insb
ret
fimuls
iret
ret
xlat
xor
ds
mov
aas
ljmp
and
aas
arpl
shrb
shll
bound
mov
mov
sti
xor
enter
inc
mov
lods
ret
mov
lods
sub
mov
and
es
jbe
push
xchg
and
pop
movb
dec
into
mov
adcb
jno
out
data16
popa
or
adc
mov
outsl
je
cmp
pop
sub
addr16
push
xchg
fdivs
add
push
mov
jle
fcmovnbe
dec
adc
or
and
scas
out
aaa
fnsave
insb
clc
leave
inc
dec
push
xor
jnp
popf
xorl
scas
lret
cmp
sti
and
push
and
mov
sbb
aas
inc
dec
and
cmp
jb
dec
sbb
adcb
pop
sbb
pushf
nop
and
call
insb
jns
lahf
adc
pop
push
imul
jns
arpl
outsl
out
inc
adc
mov
lock
data16
push
aad
std
jbe
lret
push
or
int3
jecxz
repnz
pushf
fdivl
es
rclb
xor
inc
cmp
inc
sbb
inc
push
sbb
jbe
xor
mov
sub
fs
dec
push
mov
pop
data16
jp
daa
adc
dec
lcall
fimull
outsb
jle
shl
test
mov
adc
push
ljmp
aaa
mov
and
dec
in
aas
das
xlat
cwtl
adc
imul
inc
lret
arpl
popa
or
adc
cld
add
add
out
mull
or
cmp
nop
and
mov
testl
ljmp
and
mov
xchg
push
pop
pop
push
daa
mov
and
cld
jmp
mov
loope
je
add
pop
push
cmc
cmpsl
xor
mov
dec
push
pop
sbb
push
cmpl
mov
dec
mov
repz
pop
xchg
inc
jle
xchg
sbb
in
xchg
push
sub
rcrl
addl
scas
ljmp
xchg
addr16
sbb
loop
sub
js
xor
scas
outsb
jl
aam
movsb
and
aas
mov
adc
jge
lods
push
int3
gs
pop
loop
je
jecxz
mov
ss
mov
data16
mov
cld
and
cmp
or
push
repz
aad
outsl
ljmp
push
shlb
ret
negl
in
dec
cltd
stos
clc
and
push
arpl
loopne
hlt
ficoms
lods
push
lret
lcall
inc
imul
enter
push
loopne
lea
and
jecxz
lahf
adc
adc
stos
mov
dec
addr16
push
cmp
inc
lock
or
dec
shll
xorb
or
xlat
addl
or
dec
sahf
iret
fldcw
xor
js
out
ja
push
das
add
test
add
push
pushf
nop
or
pop
and
imul
ret
dec
xor
stos
sub
push
mov
lea
hlt
pop
cmpsb
mov
ficoml
push
cltd
negb
out
inc
cmp
icebp
dec
or
pop
and
decl
and
sub
xor
sub
divb
arpl
js
pop
jno
rcll
jns
test
loope
pop
pusha
mov
xchg
adc
lock
push
add
pop
lret
aad
jns
pmaddwd
adc
sbb
mov
inc
xchg
pop
mov
pop
mov
ss
mov
inc
push
cmp
cmpsb
test
mov
add
aaa
sbb
sbbl
xchg
xchg
ds
xor
testl
test
xchg
in
add
outsb
test
shl
and
and
cmp
lahf
jmp
stos
fnstenv
aad
lds
sub
or
xchg
lds
jo
fldcw
sub
jmp
push
aas
int
pop
xor
call
add
ret
rorb
es
dec
ja
sub
fisubl
jg
push
mov
jmp
loop
and
dec
lret
xchg
lea
and
sbb
jp
inc
jle
sti
sbbb
mov
xor
repz
loope
pop
repz
ja
sbb
mov
cmp
fldz
pop
xor
sbb
jo
sbb
mov
fstl
mov
in
pop
das
mov
or
xchg
mov
movsl
lock
das
or
rorb
aam
or
push
xchg
sub
lahf
mov
cmp
nop
lcall
inc
shlb
sub
pop
inc
daa
sahf
mov
xchg
pop
outsb
inc
mov
insb
cld
test
mov
sar
int
mov
es
fnstcw
pop
xchg
xor
mov
hlt
or
mov
sti
mov
pop
pushf
jns
xor
in
ljmp
xor
sar
repnz
jg
in
jbe
outsb
imul
cltd
mov
xor
inc
pandn
mov
shll
cmpsl
cli
push
imulb
and
add
push
adc
xor
jecxz
jne
in
ljmp
cwtl
xchg
pop
jle
scas
arpl
jnp
insl
cmc
push
in
xor
fidivl
dec
aas
lea
cmp
movsb
leave
pop
add
popf
fistpl
jno
loope
mov
sbb
out
movsb
test
out
push
adc
push
sbb
lods
push
lret
mov
sbb
jno
jne
decb
xchg
out
mov
lret
movsl
add
inc
out
data16
push
cmp
inc
mov
xor
sub
pop
push
adc
mov
xchg
or
dec
sub
daa
mov
cmp
jl
ljmp
sub
in
lock
jo
sahf
mov
loop
divw
imul
nop
jno
push
leave
jp
lods
ret
in
insl
or
push
sbb
sub
or
mov
and
nop
fmuls
stos
inc
out
aad
cli
repz
dec
mov
outsb
fdivr
mov
jg
or
jp
inc
in
or
fstl
xor
push
fucom
mov
in
aaa
inc
cmp
mov
ljmp
mov
notl
mov
xor
jmp
xor
sbb
stc
fprem1
push
aam
mov
clc
movsb
cmp
das
dec
jno
ds
xor
js
xor
test
in
add
cmp
rcrl
jge
adc
push
cli
mov
jb
mov
push
xchg
adc
jge
es
sbb
xchg
push
jge
jmp
mov
lock
icebp
sbb
ja
lret
add
stos
mov
not
cmp
adc
or
out
pop
ljmp
ds
cld
arpl
dec
inc
add
in
cld
je
xchg
arpl
fcoms
xor
sbb
sti
sar
rclb
or
je
push
adc
test
pop
sti
in
fwait
mov
inc
ficomps
or
js
sbb
sub
into
and
fmul
int
into
xor
xor
mov
frstor
and
loop
fstpt
sub
jbe
popf
cmp
xchg
pushf
cmp
arpl
ljmp
add
mov
mov
and
xchg
dec
mov
jp
std
dec
sub
xor
fisubl
adc
jo
dec
mov
inc
cmc
push
push
icebp
cli
bound
add
inc
pop
repz
fwait
out
movsl
xchg
je
pop
outsl
int
jae
xlat
pushf
pop
imul
test
aas
and
fdiv
pop
adc
push
insl
into
into
jae
pop
mov
adc
lret
sbb
cld
fbstp
mov
cmp
scas
lret
jno
pusha
pusha
int3
and
adc
into
inc
dec
test
mov
inc
pop
fidivl
or
and
dec
cmpsl
inc
sub
jge
mov
test
andl
push
int
arpl
mov
and
push
lods
or
in
loopne
arpl
xor
mov
mov
loope
fildll
stos
std
repz
and
or
dec
pop
lahf
xor
cld
lret
shrl
int
sbbb
into
vcmpps
sub
into
fs
push
pop
or
adc
jmp
mov
jmp
clc
dec
enter
into
xor
sub
or
arpl
gs
imul
clc
in
and
jmp
insb
jge
pop
imul
dec
mov
or
outsl
fisubrl
add
cld
pop
loop
mov
mov
dec
pop
mov
dec
into
push
mov
mov
cmpsl
gs
popa
jb
inc
sti
fisttpll
loopne
fadd
jle
fcoml
push
popf
in
cmp
ljmp
js
push
mov
or
pop
push
xchg
or
mov
push
fcmovnb
and
mov
repnz
fdivp
js
fsubrl
arpl
add
movsb
push
pop
dec
hlt
movsb
aam
lods
xchg
mov
pop
sbb
mov
lea
dec
mov
popa
daa
jno
mov
in
mov
push
fldenv
or
fnstenv
aad
sbb
cmpsb
jnp
jnp
cmp
and
push
and
adc
or
ds
inc
fcomps
and
arpl
aaa
push
pop
jecxz
setnp
jne
into
add
or
aad
cli
or
cmp
jmp
test
pusha
es
sbb
push
decb
cmp
call
xor
push
fcmovne
adc
or
jecxz
mov
lods
lret
loop
outsb
insl
add
xor
ret
add
xchg
loopne
ss
lds
leave
jg
out
loop
xchg
ret
add
mov
lock
lds
outsl
addb
push
bound
add
cs
clc
mov
and
mov
xor
mov
cmp
out
popf
das
sub
ret
push
mov
xchg
fwait
pop
in
subl
xlat
mov
int3
add
shll
jmp
xchg
fcomps
mov
jns
xor
mov
dec
xchg
jge
out
dec
push
cmpl
mov
fists
fdivs
out
and
data16
outsb
lcall
add
jo
mov
jnp
pop
xlat
movsl
mov
mov
sar
adc
lret
ss
inc
xchg
andl
inc
or
mov
push
outsl
pusha
fimuls
mov
mov
jl
fwait
enter
mov
pop
sub
push
iret
lcall
cld
lods
adc
push
scas
cmpsl
lds
sbb
into
popf
inc
loopne
jnp
lds
lds
testb
and
mov
xchg
fisubrl
iret
lds
mov
mulb
add
xchg
movsb
mov
sub
rcr
fstl
pushl
nop
lahf
ret
pop
outsl
inc
xchg
add
rcrb
clc
loop
pop
add
inc
push
pop
or
add
pop
fs
dec
js
mov
bound
ja
xor
pop
cwtl
inc
xor
aam
in
repz
mov
fdiv
incb
jecxz
in
jmp
xor
fdiv
add
add
je
ljmp
ret
sti
cs
mov
pushf
xchg
cmp
and
dec
ret
addr16
mov
mov
sub
jnp
fincstp
pop
in
add
mov
xchg
mov
mov
sbbb
inc
nop
mov
arpl
ret
addr16
stc
push
lds
pop
in
fistps
addl
in
jae
lock
pusha
adcb
call
imul
gs
sahf
push
loopne
inc
cmp
call
mov
jae
push
sahf
data16
icebp
adc
clc
lret
cmp
cmpl
aad
bound
pop
dec
push
pop
jg,pt
sbb
leave
inc
xchg
pop
inc
mov
dec
mov
mov
push
das
xor
xor
mov
das
arpl
test
lret
fsubrs
mov
sub
adc
and
jg
or
sub
lock
sbb
jnp
jne
jp
mov
fstpt
or
push
cmp
cmp
rcr
add
fprem1
clc
and
and
mov
mov
sbb
push
aam
ja
mov
jecxz
fildl
adc
inc
pop
xor
fsts
add
negb
lret
xor
std
add
sbb
adc
div
vpcmpgtb
mov
fstpl
xchg
xchg
scas
sub
test
and
shrb
jg
cmp
lods
popa
iret
and
sbb
inc
cwtl
loopne
out
inc
sahf
test
insb
sub
cmpb
pop
pop
mov
cld
out
adc
jns
loope
dec
mov
sub
add
fldl
inc
xchg
out
imul
sahf
mov
xchg
sbb
mov
cltd
popf
pop
inc
iret
xchg
pop
inc
fnstsw
movl
or
xor
xchg
inc
inc
xor
cltd
xchg
bound
hlt
paddsw
lds
test
ljmp
lcall
mov
cmp
sub
or
adc
mov
mov
dec
mov
push
jmp
push
or
movsb
sub
sbb
mov
pop
jge
fcoms
xor
ret
bound
test
fnstcw
subb
rep
xchg
adc
push
mov
xor
je
test
int
repz
and
and
fimuls
stos
inc
daa
hlt
sub
push
mov
int
and
cli
add
mov
cltd
stos
mov
inc
pushf
dec
stos
enter
xor
lea
stos
pop
test
lock
cs
and
pop
fdiv
sub
stc
jg
mov
out
js
shll
movsl
or
out
adc
xchg
movsl
push
pop
cmpb
mov
push
adc
outsl
mov
test
or
jp
adc
pop
adc
jmp
pop
add
xchg
mov
ss
mov
push
push
and
fwait
cmp
mov
fldl
dec
nop
adc
and
sub
mov
push
imul
cld
fs
xchg
mov
repz
mov
mov
dec
cmpsb
mov
in
adc
jae
arpl
mov
or
addr16
jle
and
loope
movsl
sahf
mov
daa
xor
sub
inc
dec
lret
mov
fsubrp
cmp
mov
dec
cmp
lods
aad
scas
pop
jne
ja
jecxz
call
ret
je
pop
ret
sbb
daa
in
inc
ja
push
pop
jns
test
mov
xchg
movsb
negb
push
cmpsb
fisubrs
jp
dec
mov
jo
lret
mov
mov
dec
add
enter
clc
filds
test
stc
dec
pusha
std
add
jnp
mov
pushw
dec
mov
cwtl
fbld
cmpsl
mov
cmp
jle
sub
in
popf
adc
outsb
mov
push
jp
aad
aam
push
daa
jno
dec
hlt
je
push
aas
xor
int3
aam
pop
ljmp
lds
push
ret
ret
shrl
andb
in
loope
data16
iret
adc
add
outsb
cltd
cmp
cmpsl
clc
sub
bound
dec
sub
in
js
pop
sar
push
mov
repz
sahf
jns
jg
insb
push
call
cmp
jb
xchg
and
pop
jbe
femms
scas
xor
mov
pusha
jmp
xor
mov
sarb
pop
sbb
dec
mov
inc
push
fwait
movsl
sahf
jg
xchg
inc
shr
or
mov
mov
jo
xchg
jecxz
xor
dec
xchg
push
add
add
testb
inc
std
movsl
push
test
ss
in
std
popf
cmp
fadds
jno
enter
loop
sbb
jge
sub
insl
fnsave
dec
inc
mov
pushf
lret
mov
jmp
mov
test
push
and
mov
pop
into
cmc
js
gs
enter
push
jno
sti
jge
inc
push
mov
sbb
out
js
add
int3
sbb
and
mov
and
scas
dec
cltd
cmp
out
cmp
jmp
or
add
leave
fs
lock
test
pusha
fld
dec
lcall
bound
jns
xchg
add
push
mov
or
shr
fsubs
xchg
jns
fnstsw
inc
shl
jge
sub
dec
sub
cwtl
imul
jns
or
mov
repz
mov
ds
lods
or
fiadds
xchg
mov
mov
mov
push
fidivl
xchg
sbb
dec
repnz
jns
push
imul
or
dec
movsb
cmp
jbe
mov
ret
pop
in
js
js
and
mov
or
cmc
mov
add
inc
and
push
mov
and
cmp
mov
loope
inc
inc
push
lea
push
mov
mov
cld
jmp
andl
movsb
inc
pop
mov
dec
mov
push
insl
push
ljmp
mov
cmpsl
mov
mov
not
stos
shrb
dec
sbb
fwait
adc
xchg
rclb
shr
icebp
mov
flds
into
cld
or
in
jae
rolb
into
int
jecxz
aam
sub
cmp
out
or
das
mov
cmp
out
mov
lret
or
push
insb
xchg
and
rcr
pop
and
stos
outsb
mov
imul
jge
nop
xchg
mov
in
or
lods
inc
or
push
outsb
cli
lock
xor
xchg
or
clc
arpl
test
faddl
idivl
cmp
jge
xor
add
popf
jo
lret
mov
cmpsl
push
ds
xor
mov
dec
ljmp
shlb
jge
mov
xor
mov
mov
repnz
or
vmovupd
or
jns
xlat
sub
mov
lcall
mov
cs
out
xor
rorb
lock
repnz
mov
mov
les
fwait
lods
or
adc
pop
jg
ljmp
dec
jmp
jl
pop
dec
popf
add
outsb
push
mov
sahf
notb
xchg
in
fwait
jb
lock
xor
jmp
mov
sahf
push
dec
dec
and
loop
xchg
sbb
fistpll
ficoms
daa
pop
mov
out
sub
cmp
test
pop
inc
adc
bound
jge
jle
xor
dec
das
xor
imul
daa
dec
mov
jnp
outsl
jno
addr16
lods
cmp
jne
imul
imul
or
mov
mov
fcompl
or
int
jne
dec
dec
xorl
jecxz
xor
dec
cmc
or
xor
repnz
adc
fnstsw
aas
xchg
pop
sarl
imul
push
test
push
fidivrl
xchg
adc
cs
mov
pusha
sti
push
add
ret
mov
pop
cli
popa
inc
cmp
nopw
add
pop
lret
mov
add
out
sbb
sub
insb
cmp
or
xchg
adc
aad
inc
mov
cltd
icebp
push
test
jb
nop
or
sarb
popf
pop
jb
sarl
lods
test
dec
and
sub
add
lahf
ja
inc
addr16
hlt
shlb
sbb
mov
mov
mov
addr16
das
sbb
xchg
xchg
sub
sbb
imul
cli
mov
aam
fsts
je
pop
inc
fs
popl
sub
icebp
xchg
xchg
adc
mov
scas
shll
ss
gs
push
rol
dec
in
jae
movsb
rcll
jg
pop
or
pop
or
inc
push
inc
js
xor
insl
dec
and
jle
popa
movb
fildl
sahf
hlt
sti
jmp
scas
in
xor
cli
imul
adc
pop
enter
jg
enter
add
shl
or
cmpsb
cmpsb
xchg
xchg
fs
sub
scas
mov
inc
leave
test
testb
push
jmp
mov
je
es
lahf
sub
cmp
call
lahf
jg
adc
mov
fcmovb
jne
pushf
fisubrs
insl
faddl
jno
aam
icebp
les
push
sbb
add
xor
sub
pusha
add
mov
pushf
add
mov
shll
cmp
sbb
pop
xchg
or
rcll
push
arpl
xchg
dec
arpl
mov
aad
icebp
aaa
pop
push
jmp
xchg
fdivrl
iret
push
mov
les
adc
push
push
mov
pop
insb
bound
push
scas
dec
int3
xchg
fisubrs
adc
lods
mov
inc
outsl
and
ljmp
inc
cli
test
push
jge
xor
cmpsl
addr16
pop
gs
cmc
sub
test
and
push
or
mov
ss
adcb
sti
xor
push
xchg
or
arpl
popf
xor
xchg
and
adc
shl
out
or
jbe
sub
lcall
and
int3
and
movsb
dec
mov
adcl
xchg
xor
int3
sub
outsl
das
scas
add
inc
and
push
push
push
icebp
pusha
outsb
test
outsb
add
fmull
mov
outsb
dec
sub
xor
icebp
int
popf
dec
lret
inc
ret
and
jns
jno
daa
hlt
ljmp
jge
dec
adc
xor
or
fisubrs
mov
jae
scas
cmp
ficomps
into
dec
xor
jecxz
movsb
xor
ds
mov
and
push
xor
lock
rolb
fstpl
inc
mov
shr
mov
dec
pusha
rorl
aam
loope
xchg
jae
adc
sbb
mov
pusha
cltd
bnd
xchg
or
cmpsb
pop
xchg
fsubrs
pop
inc
inc
fists
jo
jp
cmp
imul
mov
loope
std
xlat
pop
sbb
ret
nop
add
jo
addb
and
jmp
push
int
or
mov
xchg
xchg
push
and
jecxz
xchg
clc
hlt
push
push
subl
and
mov
fbstp
cs
dec
pop
xchg
xchg
push
mov
and
sub
mov
in
or
loopne
cmp
lret
lret
xor
dec
adc
insl
lods
cmp
pop
push
xor
push
dec
adc
imul
stos
pop
xchg
insb
xor
cmp
movsl
inc
roll
xlat
jae
cwtl
lret
in
idiv
ret
mov
daa
pop
and
sub
fildll
cld
and
adc
pop
icebp
enter
out
xchg
mov
jb
xchg
orb
aaa
cmp
xchg
push
adcb
cltd
cltd
xlat
or
dec
cs
stos
fwait
sub
ds
ljmp
add
lds
push
cmp
push
data16
cs
ret
jae
dec
jne
outsl
and
mov
leave
call
sub
div
add
mov
add
add
cmc
lcall
or
shlb
sub
fcomps
ds
jo
adc
or
sti
jnp
call
js
aas
aam
cs
shlb
sub
loop
cmpsb
cwtl
dec
decb
sbb
lods
push
pop
loopne
fidivrs
push
cmc
and
add
mov
icebp
pop
push
icebp
cld
test
add
faddp
out
dec
push
sahf
fisubrl
pop
les
hlt
jle
loope
and
inc
dec
xchg
scas
lods
add
int3
xchg
push
or
push
rcr
cltd
ret
dec
jle
imul
inc
sub
adc
lret
mov
lods
mov
xor
test
inc
movsl
test
lret
xchg
push
scas
daa
jns
dec
jl
popf
add
xchg
fnstsw
in
jns
pop
lret
test
inc
aam
push
cmp
cmp
inc
cmp
mov
or
add
jbe
jl
out
dec
mov
ret
dec
sbb
mov
push
pop
into
cs
xchg
jns
dec
imul
out
sub
add
inc
in
fiadds
mov
fadds
pop
mov
push
jecxz
ret
xor
fisubrs
loop
in
scas
sar
push
loopne
mov
or
lea
jge
push
mov
stos
mov
xchg
jl
mov
jg
int
jp
xchg
fisubrs
push
out
push
mov
dec
xorl
aaa
pop
loope
rcrb
mov
ret
fmuls
dec
std
and
idivb
aas
cmp
mov
lret
or
divb
sbb
mov
pop
shl
icebp
stos
or
in
jb
fists
popf
sub
sub
dec
popf
pop
xor
dec
nop
shlb
enter
pop
pop
rolb
add
out
adc
push
mov
push
inc
jae
xor
fcompl
fsubr
ss
mov
add
iret
stos
int3
call
push
lret
sub
cmp
insl
sub
movsb
jmp
mov
iret
push
add
pop
sbb
inc
jl
cld
pop
fsubl
shlb
rcrl
mov
xor
lahf
int3
jns
test
inc
daa
lret
imul
fwait
jge
add
jo
daa
push
in
jecxz
pop
jae
test
call
mov
leave
je
inc
or
xchg
push
or
pop
inc
mov
xor
hlt
mov
jo
mov
andl
or
mov
sbb
sbb
push
loopne
in
add
pop
mov
fisubs
sbb
pop
push
and
inc
fs
or
jb
cmpsl
xchg
addr16
pop
out
xchg
ds
and
pushf
rol
or
jecxz
pop
rcll
rcl
dec
rclb
or
lods
pop
fisubrs
mov
iret
pushf
mov
and
popf
fcmovu
cmp
mov
adc
lock
stos
xchg
pop
inc
je
and
or
stos
jnp
push
xchg
fmulp
sbb
andb
sub
mov
mov
sub
xchg
inc
sbb
popf
sarb
loope
jmp
icebp
out
cmp
dec
add
fists
mov
test
ret
fsubrs
inc
jo
cmp
lds
push
addr16
sub
and
sbb
add
cmpsb
pop
mov
into
inc
and
pop
movl
mov
lods
and
out
sub
pop
mov
inc
arpl
ljmp
mov
xchg
fbld
imul
jb
jbe
dec
ss
adc
cmp
pusha
out
ja
or
and
mov
mov
in
xor
inc
push
mov
cmp
imul
xor
mov
stos
add
mov
dec
test
repz
in
popf
lret
shlb
mov
jno
pusha
sbb
je
sti
or
cmp
fiaddl
mov
repz
sub
and
and
pop
sarb
cmpsb
cmpsl
pop
lcall
jmp
jnp
jl
enter
adc
adc
mov
push
inc
sbb
pop
out
sbb
push
xchg
test
ret
jae
push
or
incb
es
add
mov
dec
cltd
lds
lret
fsubrs
and
in
xor
pop
lea
addr16
fists
mov
mov
push
jg
out
mov
fs
pop
pop
loopne
pop
dec
cli
dec
fcmovbe
xchg
pushf
pop
mov
mov
mov
sub
cmc
imul
sbb
imul
xchg
jecxz
pushf
sbb
dec
mov
subl
and
xor
pop
or
frstor
push
imul
mov
in
dec
push
mov
push
lret
insl
and
adc
adc
aad
stc
pop
cwtl
jge
sbb
out
std
adc
loop
push
mov
mov
add
fcompl
in
out
mov
test
push
test
jbe
cmp
adc
push
mov
cmp
jle
sbb
xchg
mul
pushf
mov
push
ret
cli
or
gs
loop
inc
sub
xor
sub
jle
or
pop
mov
cs
insb
dec
add
adc
inc
scas
subb
movsb
jecxz
ljmp
in
je
mov
xor
pushf
jns
es
lret
fstl
in
repz
or
fdivl
cmc
pop
bound
fcmovne
hlt
in
mov
cmc
and
dec
sbb
pop
cmpsl
jge
movsl
das
mov
xor
fldcw
scas
outsb
push
shl
xchg
mov
dec
dec
inc
pop
daa
mov
lods
roll
mov
rclb
adc
jbe
test
xor
and
add
adc
outsl
sub
pushf
pop
push
dec
loopne
adc
das
lods
mov
xchg
jp
inc
lods
es
pop
inc
ss
rclb
mov
mov
sbb
scas
fidivrs
pop
cmc
test
or
and
add
movsl
clc
lea
jmp
imul
and
int3
in
cmp
jge
adc
aas
lret
xor
dec
add
or
roll
or
ljmp
shr
mov
and
cmp
sub
jne
cmp
sub
or
cmpsl
mov
sbb
mov
jl
pop
fildll
jno
sub
adc
xchg
cmpsl
push
mov
pop
or
ljmp
and
std
jmp
cld
pop
gs
adc
and
je
push
xor
dec
in
fisttps
test
ja
scas
bound
jnp
and
cmp
push
cs
sub
push
inc
cmp
xchg
xor
loope
adc
scas
outsb
imul
pusha
lret
mov
scas
or
xchg
sbb
and
cmp
mov
cmpsl
ret
fwait
jge
xchg
fcoml
xchg
inc
or
mov
push
and
jl
mov
or
xor
lods
mov
xor
add
loop
or
cmp
mov
cmp
jmp
push
adc
in
add
mov
pop
push
insb
pop
mov
jo
pop
inc
mov
into
mov
add
sbb
dec
div
sbb
ja
insl
and
push
and
into
xor
push
adc
into
and
mov
adc
std
ja
repnz
cld
xor
es
in
cmp
insb
addl
daa
fildll
or
cmpsl
push
cld
pushf
loope
push
push
repnz
add
sbb
ss
stos
dec
gs
ret
rorb
adc
cs
lea
cmpsb
cmp
setb
cmpsb
fs
adc
das
rorl
arpl
xlat
mov
cmp
mov
cltd
stos
mov
sbb
sbb
pusha
pop
addr16
iret
scas
lods
lcall
inc
mov
jmp
mov
fwait
sbb
jg
lea
das
lods
push
fcoml
insb
dec
std
push
repnz
imul
ror
movsb
and
pop
xchg
sub
mov
call
ret
scas
add
ret
push
loopne
mov
add
xor
jecxz
push
and
push
lret
loope
orb
test
xor
test
mov
test
lea
push
sbb
shl
or
cwtl
test
push
add
loopne
jbe
inc
or
push
pop
or
mov
push
or
adc
xlat
pop
cmpsb
mov
sti
and
or
repz
enter
ret
clc
mov
jb
mov
lea
aad
rolb
sbb
orl
add
pop
mov
sub
mov
loopne
mov
xchg
push
xchg
imul
gs
add
add
adc
scas
cmpsb
mull
adc
jge
adc
loope
sub
push
lods
and
push
dec
imul
pop
decl
cmp
inc
test
adc
jbe
xchg
mov
mov
aam
xor
sub
pop
jbe
fs
int3
xchg
xchg
and
inc
int
fcoms
into
push
adc
bound
push
test
xchg
adc
jmp
fcmovnu
and
push
cld
leave
les
push
jo
mov
push
ret
ret
and
adc
adc
mov
cmpsb
sbb
or
test
fisubs
pop
push
test
test
cs
scas
jmp
push
fistpll
fcmovu
out
add
pop
cli
bound
shll
xor
mov
shrb
loop
rorl
push
mov
lcall
popa
add
jnp
xchg
and
imul
sbb
ja
mov
mov
fcompl
aad
icebp
in
fbstp
out
and
mov
and
out
pop
cmp
lds
lahf
or
pop
adc
jbe
sbb
stos
sub
fadd
daa
push
jae
pop
fwait
push
pop
cmp
ret
xor
inc
and
pop
jb
dec
sbb
out
mov
mov
stc
cwtl
adc
imul
xchg
loop
insb
loopne
sbb
sub
ficoms
bound
sbb
int
fsubl
mov
mov
jl
clc
mov
and
pop
inc
mov
push
cli
lea
add
imul
xlat
test
push
enter
repnz
and
in
ret
mov
gs
mov
fs
je
xor
inc
mov
sub
test
mov
js
sub
inc
popa
push
dec
cmp
jae
mov
adc
out
ret
pop
jo
xchg
xor
adcl
mov
scas
cmpsb
sub
sub
xor
cmp
mov
xor
fcoml
mov
dec
sbb
daa
xor
negb
testb
jnp
mov
mov
and
sahf
and
mov
or
mov
andl
shrb
cwtl
adc
jge
jno
icebp
pusha
sbb
pop
rolb
popa
cmp
mov
sahf
ud0
scas
or
es
out
pop
in
push
in
pop
ja
adc
int
daa
push
daa
sub
xchg
movsl
out
mov
xchg
shll
jg
push
cld
ds
mov
pop
daa
and
pop
outsb
cltd
cs
lret
sub
lret
dec
add
cmp
dec
dec
push
lret
negl
add
ret
scas
xor
xchg
push
push
jmp
pop
push
out
adc
mov
adc
es
adc
adc
ret
sbb
sub
or
notb
sub
jne
not
je
push
pop
popf
adc
add
rclb
xor
lods
outsb
fnsave
test
xchg
test
icebp
dec
iret
out
sbbl
xchg
std
push
pushw
push
aas
cmp
or
repnz
pop
push
xor
inc
xchg
xor
aam
inc
add
sar
addr16
vandps
test
stc
adc
dec
fdivl
lret
out
je
rcrb
xchg
sahf
dec
xlat
pop
jbe
dec
adc
sub
out
repnz
sbb
into
and
cmp
aad
cwtl
push
out
decl
int3
cltd
addr16
cmpsb
jnp
xchg
ret
repz
adc
leave
mov
jmp
and
sbb
push
push
cmp
mov
xor
xchg
sub
cmp
fmuls
cmp
dec
push
out
test
push
sti
pushf
mov
gs
cmc
adc
scas
test
lcall
add
outsl
dec
mov
mov
push
test
rcr
ret
shll
int3
lret
dec
movsl
nop
add
call
push
pusha
inc
pop
mov
and
pop
or
jne
movb
jb
fs
mov
xchg
mov
fcompl
fsubrl
aam
and
scas
inc
jg
pop
jecxz
scas
and
mov
cmp
in
jb
cmp
js
adc
add
push
mov
lcall
aas
shl
jae
pop
mov
stos
lods
jl
ljmp
or
sub
inc
mov
mov
mov
xor
test
subb
cmp
scas
pusha
push
dec
push
out
mov
add
sbb
sub
cmpb
xor
es
mov
sti
or
dec
and
cmp
icebp
inc
scas
shll
lock
jmp
xorl
out
pop
xor
xchg
inc
rcl
cmp
fisubrl
call
aas
cltd
shll
mov
jmp
cmc
and
xchg
dec
idivl
xchg
cmp
add
sbb
lahf
mov
and
add
in
dec
lcall
dec
test
call
sub
mov
fwait
dec
mov
in
ret
adc
jmp
adc
xchg
outsl
lcall
jecxz
fcompl
pop
lock
pop
outsl
es
inc
stc
aaa
loop
xorb
xchg
aad
divb
pusha
cmp
xor
pushf
push
sub
lds
xor
jnp
jnp
and
push
push
shrb
cmp
xchg
add
sbb
and
and
push
or
lds
sti
imul
aad
and
mov
pop
cwtl
mov
mov
mov
pop
mov
xorl
mov
call
out
les
sbbl
mov
lea
jl
repz
jl
aad
inc
outsl
mov
sub
cmpb
jmp
sahf
in
ret
nop
xchg
ret
xor
lods
and
pop
rorl
dec
loopne
mov
repnz
cmp
xchg
pop
int3
aas
outsl
push
jg
mov
das
cld
xor
ljmp
ja
movsb
out
xchg
ret
ds
imul
or
aam
sub
and
call
push
fistpll
ja
cmpsb
jp
sti
push
push
pop
lods
insb
jbe
xchg
lds
out
mov
jb
xchg
mov
jo
cmpsl
scas
xchg
pop
popf
and
mov
fmuls
mov
rorb
push
sub
mov
add
fxch
jg
sub
jb
mov
xlat
mov
es
rorl
cmpsb
pop
and
adc
test
push
popa
fbstp
jb
pop
jge
and
adcl
cmp
and
mov
bound
and
xor
outsb
add
dec
dec
movsb
push
mov
repz
jmp
imul
adc
dec
inc
jle
out
sahf
sub
mov
ret
jl
adc
mov
popa
dec
mov
das
in
lds
es
jae
dec
fwait
sub
adc
cmp
mov
mov
mov
add
test
lea
sti
sub
clc
fcoms
sbb
lea
insb
dec
sbb
xlat
mov
cmc
out
mov
popf
jnp
pop
lret
inc
jl
lahf
aam
scas
inc
cli
push
jnp
shll
push
jae
or
ljmp
frstor
sbb
or
test
shll
mov
sbb
adc
sub
mov
setle
cmp
mov
sahf
decb
cmpsl
xchg
mov
mov
mov
and
jg
leave
pop
pop
inc
stos
sarb
divb
int3
inc
and
sub
cli
outsb
nop
repz
xor
iret
ds
xor
sahf
or
testl
push
in
sub
adc
jle
jge
xor
rclb
mov
push
stos
push
das
pop
jae
mov
mov
pop
adc
jb
outsb
jmp
mov
sbb
sub
loop
loopne
dec
mov
sub
mov
sub
insb
orb
or
lods
jmp
dec
insb
mov
pop
cmp
movsl
mov
iret
jb
frstor
enter
pop
rcl
inc
lock
jns
sub
jg
and
ror
ret
aad
int3
adc
sbb
xchg
ljmp
xor
add
into
aas
fiaddl
sbb
jne
mov
lods
xor
movsl
cmpb
cmp
sub
int3
and
mov
test
sub
and
aad
jno
pop
into
insl
xchg
popf
push
in
push
mov
jb
ja
mov
cltd
jecxz
bound
xchg
clc
stos
shr
push
dec
dec
mov
nop
mov
pop
insb
cld
dec
leave
loop
aad
mov
mov
cld
lret
insl
cmpsl
or
xchg
xor
addr16
pop
hlt
mov
cmp
insb
cld
pop
ds
push
pushl
xchg
mov
call
lcall
dec
push
and
adc
pop
sbb
lret
and
clc
mov
in
das
lods
mov
ja
push
or
cmp
or
jl
mov
mov
shrb
js
pusha
in
lret
int
sbb
sarl
lds
mov
ljmp
mov
mov
push
repnz
mov
add
lock
ja
ret
jmp
mov
add
mov
push
push
jns
ljmp
mov
pop
xor
ss
repnz
std
gs
cwtl
push
push
lahf
mov
and
or
lret
sbbb
pop
das
and
mov
cld
mov
sbb
mov
push
addb
pusha
je
test
sbb
and
push
subl
clc
push
aaa
lea
mov
in
add
jb
or
push
cmpsb
dec
adc
ds
jo
pop
mov
add
sbb
out
or
ficomps
or
test
ss
cltd
pop
je
test
hlt
imul
flds
fistpll
loope
jmp
icebp
mov
jmp
cmp
cmp
imul
repz
sbbb
push
repz
fs
pop
out
jp
cli
popf
cmpsl
add
fdivr
lea
rclb
add
pop
adc
mov
add
mov
fdivrl
sar
dec
sub
clc
or
pop
cmp
inc
xchg
mov
data16
rol
fidivrs
mov
out
inc
sbb
jo
xchg
jbe
pop
mov
stos
dec
inc
popa
loope
cltd
push
or
cld
and
stc
and
arpl
or
insl
push
inc
mov
daa
adc
push
leave
sbb
pop
lcall
xchg
inc
in
pop
cmpl
clc
popf
jg
inc
popa
daa
or
clc
mov
outsl
inc
mov
xchg
es
cmp
and
test
push
insb
jge
dec
push
sbb
je
inc
adc
movsb
call
je,pn
dec
mov
lods
rcll
imul
out
rorl
repnz
idivb
jnp
mov
aam
lret
mov
cmc
mulb
sbb
movsl
inc
adc
mov
mov
pop
adc
sbb
xchg
add
jmp
out
xor
lods
pop
jmp
xchg
sub
xlat
not
sub
jo
push
push
mov
mov
dec
repz
pop
pop
xchg
cmp
xor
rorl
add
add
xor
pop
jno
test
cltd
scas
in
lahf
mov
fiaddl
mov
pushf
movsl
outsl
mov
pop
pop
in
lahf
xchg
push
enter
cmpsl
test
mov
inc
dec
hlt
subb
jecxz
dec
lods
pop
jg
dec
mov
dec
es
mov
jo
xor
test
push
adc
das
sub
pop
pop
test
mov
testb
or
lds
lds
les
inc
das
andb
pushf
inc
adc
jmp
stos
xchg
idiv
bound
sahf
ja
jb
into
call
mov
jo
cld
into
cld
mov
adc
daa
push
test
push
push
addr16
in
int
lcall
mov
jo
imul
mov
aad
fldt
fimull
leave
jge
lock
add
scas
xor
int
jmp
out
mov
dec
cmc
lret
outsl
mov
jb
pop
in
jg
addr16
arpl
or
and
sti
jecxz
aaa
jl
scas
inc
lret
xor
mov
cld
cmp
loope
push
push
push
je
xchg
fcompl
in
sub
bound
cmp
jo
popa
ljmp
or
daa
add
aas
sub
mov
pop
cmpb
dec
outsb
jb
jne
jle
jno
gs
mov
add
mov
loope
dec
xor
scas
aad
push
and
add
mull
lcall
clc
pop
mov
xor
push
and
mov
outsb
sub
addl
sbb
incl
outsb
je
mov
leave
repz
pushf
cld
dec
mov
lea
mov
das
in
dec
and
dec
data16
pop
out
enter
cli
cmpsl
ret
insb
push
movsl
aas
fdivrs
insb
jge
jne
mov
add
push
xor
sub
test
test
or
fnsave
add
inc
addr16
dec
adc
call
cwtl
jle
out
insl
mov
sub
mov
sahf
xlat
imul
xchg
repz
ret
out
rcll
iret
jnp
popa
mov
bound
jl
sbb
in
mov
or
cmp
push
pop
data16
cmp
mov
sbb
jle
sub
push
jmp
je
scas
pop
rcll
movsl
loop
or
xchg
fldl2t
es
xor
pop
sub
movsb
inc
xchg
and
loopne
insb
push
loope
aas
xor
and
mov
insl
int
rcll
dec
push
push
sub
push
pop
mov
scas
inc
shl
adc
dec
or
jecxz
scas
fucom
xchg
nop
sahf
test
or
adc
inc
dec
jb
mov
ret
adc
cmp
or
movsl
cmp
enter
dec
lods
ffree
jo
pop
in
mov
or
mov
out
dec
or
in
lahf
enter
and
outsl
push
push
cmp
ficoms
stc
lods
jl
inc
fisubrl
ja
stos
or
or
fistpl
inc
sbb
lret
das
and
pop
testl
movsl
push
popf
ljmp
sbb
sbb
aad
addr16
loopne
xlat
sbb
cmp
shlb
filds
pop
push
sub
loope
push
lret
out
xchg
aas
pop
mov
or
int3
out
push
inc
fcompl
lret
lods
rolb
arpl
xchg
cmpsb
xor
xor
scas
xor
test
cld
enter
push
popf
jb
add
pop
xchg
add
inc
rcrb
js
or
test
loopne
jg
enter
inc
lcall
sub
xor
ret
mov
test
and
outsb
andl
ljmp
dec
or
daa
push
add
xorb
pop
xchg
mov
es
fstpt
dec
sub
sub
call
xor
cmp
jmp
inc
stos
dec
xchg
adc
or
stc
daa
mov
pop
sub
lahf
mov
sbb
lods
pop
lea
xchg
mov
std
loope
jae
ds
sub
pop
add
jmp
jge
lds
xchg
jne
push
lahf
sbb
jg
pop
stos
scas
sub
mov
fcmovnb
icebp
adc
popf
pushf
mov
popf
mov
dec
sti
data16
xchg
add
decb
inc
mov
sub
sub
push
mov
lret
mov
pop
aas
lds
js
mov
aas
addb
inc
lret
jmp
mov
movsb
pop
or
xor
cmc
jmp
fsubl
mov
mov
sbb
aam
mov
adc
xchg
pop
ficomps
mov
pop
mov
inc
mov
jge
in
adc
addr16
loop
data16
daa
dec
mulb
cmp
adc
test
sti
adc
cld
jmp
icebp
xchg
push
cli
xor
rclb
and
pusha
xlat
push
cmpsb
ficompl
test
adc
add
cmp
add
in
xchg
out
sub
xchg
int
popf
fidivrl
ficomps
jbe
cmc
loop
dec
jno
mov
enter
ds
cmc
nop
in
fidivs
mov
shll
aad
es
xor
jno
mov
pop
push
mov
mov
fdivl
xor
movsl
jecxz
xchg
fidivrl
inc
pop
aaa
data16
popf
mov
xlat
add
mov
dec
xchg
cmpsl
mov
inc
nop
and
ljmp
loop
xchg
stc
mov
jnp
clc
imul
pop
ret
ret
push
movsl
pop
push
xor
cwtl
data16
lret
imul
mov
mov
and
sbb
mov
insb
sbb
dec
pop
adc
sbb
sbb
push
xchg
lds
ret
push
adc
stos
fneni(8087
xlat
or
cmp
jno
aad
mov
ss
mov
mov
mov
scas
outsl
addb
cmp
sbb
adc
js
fwait
sbb
add
sbb
adc
mov
imul
mov
pushf
data16
out
cmpsb
rolb
mov
iret
test
adc
lret
sbb
movsl
imul
jno
jge
sub
push
cmp
clc
push
sub
inc
adcb
cmp
imul
sub
mov
mov
icebp
and
inc
or
rcr
inc
pop
lods
and
push
mov
and
iret
sub
jge
or
and
or
fucomi
test
mov
add
push
dec
mov
test
pop
out
dec
inc
outsb
out
mov
data16
out
frstor
daa
or
imulb
and
add
out
push
mov
or
iret
inc
xor
mov
divb
and
jo
push
and
or
sbbb
add
or
insb
xchg
aas
jle
cwtl
cmpsl
dec
repz
jbe
lds
pop
cltd
lods
inc
iret
cmp
and
sbb
push
add
xchg
adc
push
ret
inc
into
add
aad
or
cmpsl
dec
shl
jbe
lods
mov
arpl
pusha
nop
jmp
insl
push
lea
mov
pop
or
idivb
mov
dec
cmp
xor
jle
and
or
dec
mov
adc
add
arpl
daa
xchg
mov
xchg
pop
loop
bound
testb
mov
and
enter
ret
xchg
push
mov
mov
pop
fwait
insl
leave
lahf
cmpsb
lret
ss
jl
fwait
dec
mov
push
xor
push
adc
cmc
lock
pusha
sub
mov
or
adc
mov
add
stc
cmp
je
push
lahf
popa
not
pop
sub
sbb
sbb
xchg
lret
mov
inc
mov
aad
mov
loopne
movsl
pop
lock
cs
syscall
mov
shrb
add
or
push
aaa
add
dec
loop
test
and
xchg
xor
lret
outsl
clc
and
loope
inc
fisttps
jbe
add
mov
outsb
fsub
jmp
repz
adc
out
jae
fcomp
shll
cmp
pop
scas
push
and
pushf
inc
jmp
shl
inc
loop
out
js
inc
jl
imul
out
clc
lret
inc
dec
roll
xor
push
push
mov
cmc
push
or
push
push
cmp
mov
in
into
mov
xchg
jo
shlb
mov
mov
and
jno
rorb
push
inc
fs
xchg
test
pop
lret
cmp
dec
xor
cmp
cmpsl
push
sarl
add
sub
das
shlb
clc
pop
rcrl
adc
mov
mov
insb
jae
inc
fwait
rorb
xchg
outsl
rcll
loop
add
pop
inc
iret
nop
into
xrelease
or
push
aas
push
sti
aam
sub
add
sub
test
adc
mov
dec
push
mov
pushl
sbbb
cmp
jp
pop
movsl
loop
sarl
pop
dec
or
mov
lea
cmp
sub
test
mov
stos
addr16
mov
dec
jecxz
dec
fildll
xorl
mov
cmc
das
cmp
icebp
ljmp
clc
das
push
mov
test
das
addr16
add
jge
outsl
adc
or
ret
aad
test
mov
add
lods
xorl
stos
arpl
lds
cmp
jg
xchg
xchg
repz
sub
xchg
push
je
push
push
ljmp
pop
scas
hlt
enter
push
std
test
pop
jl
xchg
mov
pop
and
mov
sbb
es
out
lcall
or
ret
ret
jmp
push
mov
iret
sbbl
inc
mov
or
adc
and
sub
fs
test
test
ss
add
js
test
sub
lret
bts
stos
fildll
push
test
xchg
mov
sbb
fsubrp
pop
mov
push
popa
mov
cmp
fwait
popf
decb
enter
adc
aas
pop
leave
jg
sub
adc
fnstsw
jmp
and
movsl
xor
adc
cmpsl
scas
outsl
shlb
cwtl
sub
sub
movsl
dec
xchg
arpl
insl
call
jne
out
stc
pop
fisubrl
inc
mov
dec
dec
js
repz
imul
aam
stos
in
out
mov
pop
ss
rcrl
jb
xchg
inc
cld
xchg
aaa
and
icebp
cmp
add
xor
insl
fsubs
cmp
sub
and
add
int
adc
inc
xchg
jge
mov
subb
mov
sub
ret
cmp
lods
sbb
insl
mov
stc
inc
mov
scas
cltd
jae
xchg
pusha
pop
psrad
jae
dec
jbe
insb
push
mov
mov
imul
es
push
f2xm1
xor
fimull
push
shlb
mov
lret
push
xor
or
rclb
pusha
popf
adc
pop
loop
push
jae
xchg
sub
pop
jecxz
cmp
in
hlt
and
popa
and
shrb
scas
adc
fwait
dec
cwtl
cli
xor
adc
push
push
inc
imul
cmp
popw
mov
xor
xchg
bound
scas
mov
sti
pop
mov
decl
add
mulb
int
fstl
xchg
into
test
repz
sub
call
inc
fsubs
and
loop
xchg
mov
dec
inc
into
je
dec
xor
jecxz
cmpsl
dec
cmp
adcb
xchg
ret
aad
addr16
mov
test
sbb
push
and
sahf
xchg
push
xor
push
lea
cld
jno
lea
mov
test
mov
or
out
or
xchg
mov
mov
bound
mov
sbb
clc
ja
sub
mov
fs
jecxz
sbb
mov
cmc
sbb
stos
in
incl
stos
inc
jp
jmp
arpl
out
sti
cmp
mov
insl
out
jle
gs
jecxz
clc
sbb
cwtl
xor
lcall
jp
sub
add
test
shll
test
pushf
lods
mov
mov
stos
mov
dec
pminsw
push
lea
lret
stc
lds
push
imul
stos
jge
push
out
rorb
lret
mov
jge
popf
sub
or
sub
scas
rcr
push
mov
test
or
dec
pop
cmp
sub
xor
xlat
and
or
es
aam
insb
stos
idivl
jecxz
mov
ljmp
jl
ljmp
push
sub
and
xor
lret
pop
fcompl
lahf
adc
in
aas
int3
ljmp
scas
cmp
not
lret
mov
mov
sub
aaa
mov
push
dec
pusha
xor
adc
sub
or
call
push
and
test
sbb
imul
int3
out
jae
xchg
push
push
les
aaa
and
cmp
movsl
jle
cmc
xor
ret
mov
pop
dec
xor
fs
sete
xchg
xor
js
jge
pop
les
popf
nop
jns
stos
repnz
test
add
repz
sub
inc
fmulp
je
pop
mov
mov
sbb
cmp
test
jge
mov
insl
sub
movsb
sub
je
inc
sti
leave
pop
cmp
sti
pop
shlb
lods
jno
xchg
fildl
sbb
adc
add
jge
and
rcrb
sub
inc
fsts
loopne
stos
mov
ret
xchg
stos
enter
push
lods
pop
or
mov
mov
pop
out
mov
enter
sub
pop
pop
incb
mov
pop
outsb
in
xchg
inc
or
imul
xorl
sub
inc
jmp
add
fs
and
adc
sti
fcoml
adc
jp
daa
mov
sub
lcall
dec
hlt
into
aaa
repz
mov
ret
sbb
mov
popa
mov
jmp
popf
ds
inc
push
fstps
mov
std
push
addr16
mov
push
inc
mov
mov
push
rcpps
fs
notl
cmpsb
pop
aas
ret
sti
mov
fdivrl
fiaddl
les
fnstenv
push
int3
adc
mov
jbe
mov
iret
add
setns
fisubl
rolb
notl
jb
cmp
xor
das
pop
pop
scas
mov
icebp
mov
push
cmc
outsb
lods
xor
and
mov
sub
int
lret
lea
outsb
adc
insl
fnstsw
jae
repz
loop
inc
test
jle
call
cmp
sbb
and
adc
or
xchg
push
mov
rorb
sahf
sbb
mov
sub
repz
xchg
mov
lahf
inc
data16
mov
and
je
and
cwtl
sahf
mov
ret
pop
lods
data16
cmp
stos
dec
loop,pn
cmp
push
jmp
xchg
dec
arpl
jecxz
push
jo
add
jecxz
mov
dec
add
xorb
dec
dec
sub
dec
ficoms
pop
mov
add
adc
nop
jmp
psrad
fwait
jae
shr
enter
cmpsb
in
sbbb
mov
jmp
or
test
mov
sub
push
jmp
aas
push
and
adc
cmpsb
in
push
push
outsb
adc
push
jecxz
cld
pop
mov
sbb
sti
xchg
xchg
lahf
dec
cltd
loop
pop
cmp
xor
mov
mov
aam
in
mov
push
icebp
enter
xchg
dec
lock
outsb
xchg
movsl
lock
das
jl
in
and
lret
add
inc
inc
movsl
mov
sub
test
jnp
xor
lahf
int3
or
rol
inc
or
xchg
movsb
mov
jecxz
jb
imul
nop
mov
push
jmp
rcrb
sarl
add
or
psraw
cs
icebp
das
lods
mov
push
enter
inc
dec
int3
mov
xchg
hlt
daa
inc
imul
sub
mov
in
stos
adc
sbb
sub
pop
test
jnp
bound
pop
xor
sub
imul
arpl
xor
orb
int3
or
outsb
cmpsb
sahf
jb
inc
adc
xor
xchg
lods
inc
or
jl
sub
test
push
and
xor
or
xlat
cs
mov
aam
xlat
subb
outsl
adc
cmp
xchg
mov
add
xlat
icebp
lret
mov
xchg
mov
lret
out
and
shr
pop
into
inc
in
cmc
adc
lcall
gs
cmp
addr16
enter
pop
dec
ss
jp
cs
out
jne
cmp
into
int
or
push
mov
xor
dec
jl
lcall
data16
loopne
data16
scas
dec
push
test
add
push
sbb
dec
test
ret
or
dec
out
popf
arpl
ljmp
leave
lret
jge
cmpsl
dec
mov
mov
iret
sbb
or
enter
dec
jb
push
sbb
cmpsl
cmp
and
cmc
popa
pop
mov
test
push
push
leave
add
in
mov
out
and
mov
scas
mov
fidivl
mov
cmp
mov
cmovns
iret
dec
mov
sbb
lahf
jmp
test
xchg
mov
leave
jge
push
inc
dec
stos
mov
jle
lret
cwtl
mov
les
xor
call
es
mov
and
dec
scas
ja
inc
fadds
into
es
rcrl
or
jle
ret
scas
in
imulb
pusha
mov
add
fstps
adc
fiaddl
cmp
shlb
xchg
out
sbb
dec
xor
or
lret
imul
lds
add
decl
pop
xor
rcrl
loopne
stc
dec
add
in
or
jmp
in
sbb
xchg
adc
in
jl
mov
insb
xchg
xlat
mov
xor
pop
sbb
mov
jg
mov
vpunpckhqdq
adc
jne
and
mov
les
and
cmp
shlb
out
sarb
sub
testl
shrb
sbb
jp
ret
sub
add
fwait
or
sub
pop
movb
scas
mov
mov
and
xchg
fstpl
mov
fwait
add
outsb
aad
push
xchg
mov
mov
pop
fldl
mov
jle
popf
bound
mov
add
movl
mov
pop
xor
xlat
int
sarl
fisubs
sbb
insl
lcall
loopne
mov
jmp
sbb
cld
pop
sub
push
add
sbb
out
dec
pop
push
mov
jg
and
stc
outsl
in
dec
mov
imul
sar
jns
cmpsb
fistps
imul
je
data16
ret
mov
ret
mov
mov
stos
pop
jae
mov
inc
ja
in
test
pshufw
dec
and
cmp
adc
lcall
jecxz
mov
cmp
or
cmp
sub
stos
push
lret
jmp
mov
inc
cltd
aas
jnp
int
cwtl
scas
addr16
lds
cmpb
leave
add
lcall
ror
xor
leave
fstpl
enter
adc
cmpsb
xor
in
and
daa
in
into
cmpsb
jg
dec
ret
mov
inc
lea
rcr
xchg
out
imul
add
sti
outsl
or
xor
mov
movsl
and
push
adcl
xor
aam
and
push
filds
xchg
xchg
mov
movsl
and
jmp
cmp
in
cmp
cmpsb
mov
ljmp
xor
movsl
es
jmp
movsb
lods
sub
mov
std
std
push
jmp
mov
scas
push
das
mov
adc
lds
xchg
incl
scas
ret
jmp
clc
mov
mov
pop
inc
clc
mov
jl
push
call
ret
popa
cmpsl
fs
fidivl
xor
xchg
mov
xlat
or
inc
les
mov
lods
sti
icebp
cmp
sub
add
add
pop
mov
sbb
jno
push
rclb
out
fistpll
out
fadd
mov
mov
or
mov
cs
jg
sbb
data16
xchg
add
iret
adc
stc
cmp
orb
std
sbb
jbe
nop
enter
inc
imul
mov
cld
sbb
mov
mov
push
outsl
pop
daa
rcrl
mov
sub
pop
ljmp
pop
pop
dec
nop
clc
ljmp
out
shlb
sub
push
arpl
pop
inc
pop
jle
add
mov
jb
xchg
ret
dec
jg
inc
call
outsb
cli
loope
lret
adc
xor
adc
or
inc
xchg
jnp
pop
fadd
ficomps
imul
inc
subl
jb
jp
pop
mov
lret
adc
jns
mov
dec
fistpll
jb
push
ret
jnp
sbb
icebp
jmp
int3
jl
fists
xlat
push
insb
push
loop
xchg
cmp
test
loop
dec
pop
xor
cld
lahf
scas
pushw
popa
ss
xor
mov
testb
xor
cwtl
jecxz
push
sbb
cmp
daa
and
jl
push
sbb
or
sbb
inc
add
lea
mov
mov
test
outsl
cld
xchg
xor
out
xor
sbb
sarb
scas
inc
loopne
addb
dec
cmp
in
inc
mov
pop
add
push
push
andl
sub
mov
stc
push
xchg
fwait
je
fldt
sbbl
or
std
leave
sub
add
js
jo
pop
pop
rorb
pop
out
mov
popf
mov
and
xchg
xchg
sub
idiv
repz
movsl
inc
shrl
jbe
std
or
jne,pt
mov
repnz
and
icebp
dec
test
in
loopne
pop
ljmp
mov
jae
ja
aas
pop
xchg
cltd
test
lea
mov
sbb
sub
cmp
inc
jno
divb
decb
jne
cmp
adc
fadds
cmpsb
mov
push
jp
adc
sarl
pusha
mov
daa
sar
jbe
lret
fstpl
fcoms
jle
test
cmpsl
fwait
jo
fdivl
pushf
shlb
push
mov
cmpb
fs
clc
xchg
push
pop
or
adc
mov
and
push
dec
dec
out
inc
js
mov
cmp
repnz
lret
fs
dec
cli
es
adc
jno
in
add
xor
pop
lret
imul
and
cmp
stc
add
xor
fisubrl
jge
aam
jg
mov
jmp
aas
xchg
jo
insl
bound
cltd
aad
movsb
pop
insb
xorb
inc
shlb
sbb
pop
insb
insb
popf
lods
insb
mov
outsb
mov
ja
inc
loopne
adc
iret
jne
imul
dec
testl
scas
push
lret
push
mov
into
cli
xchg
mov
repz
or
mov
sbb
lcall
push
sbb
mov
add
imul
fistpl
pushf
mov
daa
pusha
jl
ret
popf
push
add
mov
sbb
insl
pop
jae
lret
cmp
in
and
idivl
inc
sarl
aam
mov
jns
in
stc
cmp
std
inc
shrb
imul
loop
adc
repnz
sub
cmpsl
imul
bound
mov
inc
in
scas
ror
mov
sbb
out
mov
mov
cltd
inc
dec
cmp
daa
mov
sub
jge
and
outsl
dec
xor
adc
dec
push
inc
dec
mov
xor
xor
dec
inc
call
jmp
push
into
adc
jbe
mov
cmp
lods
test
mov
data16
imul
dec
pop
jp
fsin
rol
negb
fidivrs
rol
pop
fstpl
jne
ficoms
mov
or
jnp
je
repnz
sbbb
lods
call
pop
push
cmc
jl
pop
push
cmpsb
xor
lret
ret
out
jle
sbbb
pop
inc
ficomps
setge
call
insl
arpl
test
cmp
xchg
stos
pop
cmp
arpl
scas
push
xchg
pop
mov
stos
aad
cmp
mov
or
adcb
mov
es
push
mov
pxor
jecxz
push
ds
std
lods
xor
sub
cmp
mov
sub
arpl
lds
outsl
pop
pop
in
xlat
cmpsl
sub
inc
push
mov
mov
in
fnstcw
lahf
cld
stos
hlt
pop
stc
ss
push
fidivl
mov
add
push
es
aad
dec
and
inc
push
cltd
call
sub
jle
into
stos
lea
jecxz
push
jg
pop
into
or
xor
or
mov
in
or
and
cmp
inc
in
cwtl
lea
pushl
mov
movsl
sub
push
movsb
push
test
or
sub
xchg
mov
lahf
pop
movl
add
mov
sahf
inc
out
sbb
dec
add
ja
sub
and
rcrl
inc
data16
arpl
lret
out
mov
loope
out
cmpxchg
cmp
outsl
aas
jno
dec
jnp
dec
jecxz
push
push
shlb
popa
out
xchg
es
aas
sub
cltd
into
pop
enter
lock
adc
in
scas
movsl
cwtl
in
mov
inc
into
jecxz
mov
mov
mov
inc
mov
mov
adc
push
cmp
cmpsl
fdivr
pop
push
cs
adcl
and
dec
adc
ret
mov
mov
test
imul
mov
xchg
movsb
sub
xor
test
jle
mov
pop
xchg
sub
ret
push
rcr
stos
cli
out
jno
outsl
nop
add
sti
push
int
fnstsw
fnsetpm(287
repz
and
test
or
repz
cmp
xlat
lds
mov
mov
sbb
imul
xchg
popa
hlt
mov
mov
imul
ficompl
sbb
call
out
mov
divb
outsl
inc
sub
sub
pusha
dec
outsb
into
jo
mov
mov
pop
mov
jle
xor
or
dec
ret
cld
mov
ljmp
cli
lret
ljmp
pop
pop
cld
dec
pop
jbe
sti
push
dec
shl
lret
jge
cmp
ds
mov
repnz
mov
outsl
jno
add
fcoms
lds
adc
fs
xchg
aam
arpl
or
test
xchg
and
mov
pop
imul
xlat
cmp
adc
dec
test
push
add
andb
or
clc
jg
xchg
in
jle
dec
lods
out
out
stc
hlt
push
hlt
int
iret
in
call
dec
cmc
xchg
je
ficomps
add
int
pusha
xchg
daa
adc
cmpsb
pusha
add
repz
adc
and
pextrw
xchg
mov
or
ja
jns
push
mov
push
rolb
subl
sub
inc
je
cwtl
add
jp
fcomip
clc
adc
pop
ret
sarb
or
mov
stc
mov
cmp
popf
outsl
inc
mov
mov
push
jge
mov
jmp
ljmp
sbb
inc
mov
sub
xor
mov
xor
xchg
punpckldq
mov
insl
jge
xchg
scas
repz
mov
inc
les
jo
mov
xor
xor
sar
std
gs
xor
sbb
and
mov
pop
daa
mov
fbld
test
stos
js
mov
jne
jne
cld
push
inc
addr16
dec
insb
jo
popa
movsb
xor
adc
movsbl
jle
shll
mov
repz
fldcw
js
push
out
jmp
xlat
mulb
outsb
and
aas
fdiv
enter
inc
jmp
mov
xchg
mov
shl
lds
push
arpl
and
lahf
cmp
adc
xchg
cld
ds
stc
repz
mov
mov
mov
dec
mov
pushf
xchg
jns
mov
mov
dec
push
aad
int
fidivs
aaa
xlat
xchg
and
pop
add
mov
jo
stos
int
push
sbb
movb
cmp
pushf
and
xchg
addr16
xchg
jae
insl
dec
or
ss
xchg
aaa
ss
movsb
mov
jmp
inc
je
int
push
xor
push
leave
xchg
aad
hlt
rol
jb
loop
lods
xor
movsl
out
sbbl
or
in
das
imul
push
aaa
pop
jne
add
outsl
inc
bound
mov
sub
pop
aad
xchg
aas
sbb
mov
inc
loop
popf
fimuls
ficomps
mov
mov
sub
xchg
fs
mov
das
mov
mov
xlat
push
vmptrld
arpl
inc
lods
imulb
mov
es
xchg
iret
outsl
popf
jmp
ret
adc
inc
sbb
jb
cmp
cmpsl
inc
fwait
dec
jp
loope
jne
pop
xchg
pop
jl
int3
lcall
xchg
arpl
push
jg
ljmp
sahf
inc
pop
and
dec
xor
pop
rorl
pop
enter
hlt
rcr
in
jnp
mov
inc
insl
fdivrp
call
incb
int
or
out
leave
inc
jl
outsl
sbb
pop
fdivrl
push
push
pop
js
imul
lods
push
lds
cmp
mov
fsub
xchg
mov
int
subl
mov
sub
les
out
mov
dec
mov
add
adc
fisttpl
xchg
push
mov
mov
stc
adc
sbb
je
aaa
call
push
inc
jne
ljmp
shr
lock
outsb
sbb
mov
shl
pop
out
movsb
sbb
scas
jge
sbb
loopne
shll
scas
and
push
cld
rcrl
adc
dec
sub
and
jp
lods
push
sub
push
push
add
inc
into
cmp
or
pop
repz
mov
mov
push
rcrl
add
and
push
or
mov
sub
mov
fiaddl
dec
insl
sbb
repnz
cmp
and
jle
dec
insl
push
test
insl
or
pop
in
add
cltd
push
sbb
sbb
jae
and
cmp
mov
mov
ds
fsubr
iret
into
cwtl
mov
sub
scas
shrb
sbb
lock
dec
call
sbb
nop
lret
and
push
cwtl
jp
mov
cli
repz
push
daa
pop
cmc
aad
mov
fidivrs
incb
sbb
in
cld
mov
jb
arpl
lahf
repz
and
xchg
dec
mov
push
mov
mov
test
push
push
int3
test
ficoml
sub
cmp
adc
arpl
adc
sub
mov
mov
pop
sub
mov
push
fldt
lret
sahf
adc
push
lcall
cs
push
lret
jge
xorb
push
mov
cmpsl
add
sub
dec
dec
and
adc
test
rcl
dec
xchg
in
cli
inc
and
pop
out
rcr
lods
xchg
in
and
fdivrl
mov
and
mov
adc
out
sbb
fcmovnu
rcrb
mov
imul
pop
mov
sbb
mov
pushf
push
pop
xchg
jge
movsl
loope
jecxz
mov
mov
pop
xor
out
mov
fldenv
jno
fdivr
insb
lret
and
inc
stos
cmp
mov
in
or
popf
xor
lods
xchg
sub
xchg
in
packssdw
mov
push
std
xchg
pop
add
push
mov
ja
push
dec
and
enter
mov
je
pop
cmpsb
or
shl
add
dec
cmpsb
daa
sub
or
fsubr
xchg
icebp
and
inc
add
adc
sbb
rcrb
dec
pop
xchg
mov
dec
cmpsl
test
les
add
pusha
inc
push
roll
mov
mov
xlat
pop
frstor
jbe
sub
mov
scas
int3
sbb
xchg
and
cmp
sbbb
sahf
xor
mov
jp
clc
inc
sbb
mov
loope
mov
test
cwtl
xchg
movsb
mov
xchg
cmc
mov
inc
test
pushf
mov
cltd
aas
lods
xor
lods
fdivs
lods
arpl
or
push
push
lea
dec
push
mov
icebp
push
add
jle
jl
pop
sbb
aam
stos
dec
push
mov
jecxz
ljmp
shll
inc
xor
sbb
test
testb
pop
andl
test
xchg
jb
into
sub
rcrb
cwtl
inc
jo
cmp
xchg
lret
cmc
fcoms
repnz
and
mov
ss
cwtl
push
or
mov
mov
and
incb
sbb
adc
sar
inc
mov
pop
xor
inc
mov
mov
xor
orl
inc
jno
into
xor
ret
cmp
pop
fs
fsubl
stos
cmc
loopne
xchg
jecxz
fldcw
enter
test
or
xchg
xchg
pop
lret
jp
pop
mov
in
xor
jbe
dec
pop
xor
cmp
mov
jb
aad
xor
out
repz
pop
hlt
ror
pop
push
repz
rclb
adc
inc
mov
sub
or
xchg
pop
xor
add
and
pop
mov
push
xchg
lods
mov
sbb
loope
roll
mov
cmc
and
loope
xchg
pop
repz
aas
and
pushf
insb
fsubp
pop
and
push
mov
test
push
loopne
movsb
mov
adc
rcrb
daa
fmulp
and
scas
imul
movsl
test
xor
int3
stos
jmp
mov
out
mov
jmp
pop
outsb
and
inc
in
cs
xchg
mov
dec
push
xchg
inc
imul
push
mov
adc
aas
in
sti
pop
mov
xchg
data16
add
cli
into
iret
clc
ss
in
ror
aaa
icebp
data16
fnsave
repnz
call
ja
fwait
mov
mov
add
xchg
das
and
push
cmp
pushf
into
clc
bound
sub
inc
rcll
pop
dec
fidivs
scas
sarl
mov
std
mov
mov
inc
mov
pop
push
je
popf
sub
in
jmp
add
push
add
popf
and
xlat
sbb
pop
lea
sub
das
lods
mov
jmp
mov
repnz
sub
xchg
xchg
enter
repz
mov
fsubs
pop
imul
inc
pop
mov
insl
pop
mov
inc
jecxz
mov
shl
mov
xor
mov
adc
mov
scas
sub
dec
mov
jb
cmp
bound
cmc
movsl
loop
roll
in
push
mov
mov
mov
test
mov
int3
lahf
cmpsl
sahf
sub
pop
add
shll
xchg
shll
rcll
mov
cld
sub
xorl
dec
popf
xor
pop
mov
movsl
orb
sahf
clc
movsl
pop
cli
fwait
mov
push
pop
push
stc
aaa
jne
fnstenv
or
mov
xlat
push
jno
repz
add
bound
mov
cmp
fwait
fs
pop
js
jmp
lcall
cli
sub
inc
scas
xor
ror
ret
in
xor
mov
jae
cmp
dec
xchg
jae
mov
test
mov
and
hlt
cmp
push
adc
lret
enter
mov
adc
xchg
mov
jbe
xor
mov
push
out
mul
inc
sbb
scas
or
cmpsb
fbstp
sar
dec
jge
sbb
cmc
in
push
test
jne
je
push
popf
push
inc
das
mov
jne
adc
sub
rorl
xorl
pusha
mov
in
xor
cs
dec
rorb
popa
sub
inc
inc
and
std
ror
xchg
imul
loop
sub
push
sub
and
dec
sarb
movsl
incb
cmp
mov
and
xchg
cld
sbb
pop
addl
jle
es
icebp
jg
hlt
popf
cs
test
rolb
out
sbb
ja
mov
ret
sub
adc
mov
lea
gs
pop
xchg
xor
gs
push
xor
es
test
popl
test
add
jae
fildl
aam
cld
or
mov
pop
hlt
pop
ret
and
cmp
push
mov
mov
push
or
xor
mov
adc
into
out
insl
sub
dec
dec
jg
dec
daa
cmpsb
or
hlt
mov
ret
cmp
mov
mov
sub
aad
xchg
stc
dec
cmpsl
sarl
in
movsb
in
and
lods
popf
gs
pop
popa
sahf
into
jno
nop
pop
in
jb
push
xchg
insl
pop
frstor
lods
std
insb
into
push
test
inc
in
inc
mov
cmp
cmp
aam
out
xor
xlat
arpl
bound
int3
jmp
pusha
out
cmpsb
mov
jo
les
je
adc
sahf
push
sub
clc
dec
push
push
dec
adc
sub
in
fnstsw
stos
stc
cltd
cli
test
cmp
push
add
lret
movsb
adc
test
sbb
cmp
xchg
jns
stc
shrl
dec
xchg
mov
icebp
sarb
cmp
or
inc
movsl
lds
clc
pop
pop
jne
sahf
xor
sti
fs
mov
sbb
cltd
pop
add
dec
aaa
sub
add
popa
filds
aas
cmp
lods
int
xor
mov
add
xchg
enter
in
mov
sub
mov
jns
and
xor
lods
enter
xchg
jge
mov
int3
pop
fnstcw
shll
inc
dec
add
push
add
sub
arpl
pop
jb
push
cmc
arpl
inc
dec
xchg
out
mov
push
in
sahf
out
xlat
add
call
or
lods
sub
lcall
mov
es
ret
push
and
xor
xor
addr16
popa
xchg
inc
mov
mov
pop
cmpsl
lods
jno
jne
mov
xchg
sbb
cld
jge
mov
pop
nop
push
jno
insb
xor
loop
push
ret
cs
sub
sbb
dec
cmc
jns
push
inc
sub
push
jo
xchg
xor
sbb
dec
daa
roll
lahf
xor
test
shlb
add
add
cmp
les
jecxz,pt
jns
lods
cmpsl
jle
ja
cs
dec
sbbl
aad
iret
imul
into
mov
arpl
mov
pop
les
cmp
sub
movsb
test
loopne
out
jnp
into
insb
fimuls
aas
test
and
adc
mov
xchg
and
pusha
fistps
pop
sub
dec
sub
loop
test
dec
sub
adc
mov
push
push
les
fbstp
mov
mov
inc
shrl
jno
jae
int3
icebp
and
loope
sub
movq
das
jecxz
mov
push
loopne
xchg
inc
mov
cld
push
and
fists
in
push
fstpt
xchg
cmp
pushf
sub
cmp
dec
xchg
cld
sbb
lea
cmpsl
imul
rorb
sbbb
inc
inc
in
imul
pop
pusha
push
dec
push
push
lods
ds
popf
dec
pop
add
xchg
cmpsb
xchg
data16
adc
ja
mov
jge
mov
into
and
jp
clc
ja
jl
mov
xor
sti
lret
push
pop
movb
rorl
cli
test
push
in
sbb
inc
sbb
ss
push
in
sbb
inc
push
mov
mov
loopne
outsl
mov
dec
inc
dec
aaa
mov
fs
push
aad
shr
jmp
aaa
or
jge
mov
xor
inc
xchg
movsl
mov
fstpt
mov
enter
call
add
int
push
popf
or
rorb
repnz
mov
aas
pop
push
jne
out
pop
dec
je
cmpsb
xchg
jno
imul
sahf
js
or
fs
inc
scas
pushf
sub
pusha
pop
shlb
jge
or
cltd
and
fdivrl
mov
shll
loop
lea
aaa
or
scas
xor
jecxz
add
mov
stos
sbb
int
std
int3
mov
pop
adcb
sahf
jg
add
push
mov
cmc
ss
and
mov
adc
push
push
movsl
lahf
add
scas
push
cmp
inc
aas
je
cmc
call
loop
rclb
int3
js
mov
push
outsl
xchg
inc
push
sbbl
rcrb
and
out
jnp
mov
mov
push
sbb
cmp
ss
or
fwait
out
inc
dec
xor
adc
pusha
ret
sbb
ds
push
idivb
enter
clc
out
jecxz
xor
cltd
jecxz
inc
lret
popa
fisubrl
repnz
into
fisttpll
push
push
mov
lock
les
push
push
es
xchg
pusha
and
jmp
cmc
push
dec
insb
outsl
lds
or
stos
or
or
cmp
dec
je
fwait
mov
popf
sahf
repz
add
and
pop
and
dec
mov
adc
movsl
and
and
icebp
mov
pop
or
pop
rorb
aad
pop
adc
int3
jne
aam
imul
and
lret
negl
sbb
pop
xor
or
jae
cmc
cmp
mov
aad
push
je
ffree
push
jl
ljmp
ret
lcall
cmp
adc
repz
cmp
jb
cs
pusha
or
sub
mov
iret
jae
fdivl
call
imul
pop
loop
push
mov
stc
das
loop
sti
cli
ret
mov
cmp
push
outsb
xchg
or
fcmovnu
ficomps
test
inc
jle
mov
jmp
mov
sbb
fdivp
fldl
pop
rcrl
ljmp
cwtl
movsl
xor
test
imul
cmp
aad
leave
mov
mov
mov
aam
dec
jns
rclb
movsl
je
xchg
inc
push
pushf
nop
mov
mov
cmp
sbb
or
add
mov
adc
and
inc
imul
xchg
add
xchg
ret
lret
cli
mov
and
add
mov
dec
xchg
rol
adc
pushl
lret
int3
pusha
sub
frstor
les
negb
scas
aaa
ss
inc
out
lds
lea
push
fs
insb
iret
loope
jecxz
sub
movsb
push
stos
xchg
push
fiaddl
jmp
jno
push
jl
xchg
jae
movsl
jne
mov
aam
lods
mov
dec
in
cmpsl
nopl
gs
xchg
popf
add
cmpsb
stc
and
jns
cmc
mov
shl
addr16
cmp
jne
push
lcall
lods
ret
fs
imulb
sbb
lds
sahf
imul
test
jno
xchg
fcoml
sti
popa
inc
cmp
adcl
jg
sub
rorb
scas
xchg
stos
sub
popf
inc
fsubrs
add
in
mulb
cwtl
out
inc
inc
lretw
sub
or
fldenv
mov
dec
test
scas
push
adc
push
push
popf
mov
mov
rcrb
fxch
mov
sbb
jae
jbe
lock
es
mov
andl
iret
lds
gs
mov
scas
out
popa
iret
xchg
andb
into
int
jne
pop
les
sbb
or
addr16
and
mov
and
rorl
mov
add
pop
push
jg
icebp
mov
xchg
hlt
notb
dec
rcr
cmpsl
test
js
cmp
addr16
sbb
std
roll
scas
push
into
lcall
pop
adc
xchg
pop
mov
mov
jne
icebp
xchg
fisubrs
dec
outsb
add
and
gs
test
sbb
call
xchg
bound
sahf
push
aas
adc
xchg
and
aaa
and
inc
dec
cmc
stc
jle
mov
pushf
stos
ror
je
jle
sbb
cli
repnz
mov
outsb
xchg
es
into
adc
jle
mov
and
int3
lock
jl
adc
pop
je
pusha
cmp
lock
sbb
in
ffreep
fbstp
out
lods
dec
push
in
inc
lods
mov
rcrl
and
inc
pop
lods
pop
mov
cmp
jg
cmpsl
div
dec
jl
test
ret
mov
bound
bound
mov
xor
mov
jae
incb
mov
aam
and
ss
jns
daa
popf
xor
je
jmp
pushf
cmp
fildl
rolb
stos
pop
addr16
cmp
cmp
pop
out
jg
sbb
lret
xchg
sti
imul
jge
sbb
mov
mov
dec
repnz
pop
sub
fcoml
push
test
mov
outsb
rcll
mov
xchg
xor
lods
jb
sbb
lcall
cmp
clc
adc
push
mov
dec
or
cmpsb
test
stos
pop
pop
sarl
mov
fsubr
pop
scas
ja
mov
adc
aam
enter
in
jge
daa
rclb
jle
push
mov
mov
and
mov
jmp
xor
int
xor
data16
jge
xor
inc
xlat
mov
insb
pop
xlat
out
mov
jbe
sbb
lret
mov
and
mov
xchg
xchg
repnz
xchg
dec
push
pop
lcall
mov
aas
or
sbb
push
rolb
mov
or
and
pop
jg
mov
and
pop
inc
mov
pusha
inc
xlat
push
je
jge
mov
dec
fdivrs
push
ret
dec
sub
or
pop
mov
jo
push
push
in
out
sbb
bound
push
fcomps
jae
push
jns
rolb
mov
jb
rcll
sahf
mov
xchg
ficoms
inc
fidivl
push
pop
hlt
test
outsl
shlb
xchg
test
lock
insl
in
xor
jg
mov
jecxz
shr
jnp
cmp
mov
sub
add
push
negb
or
fadd
cli
adc
cmp
inc
arpl
jno
sub
iret
sub
cmp
movsb
cwtl
dec
xchg
and
xchg
dec
mov
mov
clc
les
out
rcll
aas
jns
push
add
sub
int3
sub
dec
push
and
aas
jecxz
fcomip
ds
das
push
sbb
mov
imul
enter
testb
out
xor
repz
mov
loopne
mov
or
adc
lock
fcoms
push
lahf
mov
or
and
and
mov
jmp
xor
cld
cs
cmp
iret
dec
movsl
cli
mov
test
mov
mov
test
inc
push
adc
push
xor
rorl
hlt
dec
push
bound
int
add
dec
out
cld
sub
dec
sub
push
cmpsb
inc
jns
lock
into
mov
and
push
xchg
add
mov
jae
mov
test
sub
sbb
and
cmp
sub
sti
fisttpl
mov
out
test
pop
add
pmaxub
daa
push
mov
add
lea
or
loop
or
adc
pop
ja
jp
dec
movsl
fisubs
in
mov
sar
es
mov
jmp
lds
mov
rorl
lods
mov
pop
inc
nop
call
pop
addr16
xchg
ljmp
cli
add
out
addr16
sub
shll
jl
and
and
mov
adc
out
add
add
and
add
out
rolb
sub
or
xchg
mov
ss
std
sub
jg
adc
cmpsb
test
movsb
or
push
outsb
je
lret
dec
arpl
arpl
stos
shr
mov
push
push
and
mov
imul
sarb
mov
mov
daa
fistps
mov
dec
idiv
je
test
loopne
frndint
aam
fwait
sahf
ljmp
ljmp
push
dec
pop
jg
test
lods
sarb
cs
stc
xchg
push
es
test
aaa
jno
shll
adc
add
out
out
outsb
ficompl
ret
lea
dec
jle
adc
out
xor
xchg
xchg
insb
mov
dec
lret
fadd
xor
xchg
out
repz
pop
cmp
mov
adc
addr16
cmp
pop
adc
adc
ljmp
idivl
sbb
push
pop
daa
mov
adc
cmp
xor
in
mov
inc
dec
xchg
jl
pusha
movsl
mov
repnz
mov
push
aaa
imul
in
hlt
sahf
xor
int3
adc
jge
sub
jns
adc
fcomi
mov
dec
mov
movsl
and
jg
mov
pop
cmpsl
pop
out
inc
mov
in
lods
outsb
inc
sbb
mov
sbb
jno
insb
stos
inc
sub
loope
mov
in
stos
in
dec
fwait
out
xchg
jl
cli
xlat
jmp
pop
fcmove
das
filds
xlat
pop
incb
arpl
in
mov
push
inc
pop
jo
cli
in
sub
add
scas
cmp
int
pop
jle
mov
sbb
xchg
cmc
xor
mov
jno
mov
mov
push
insl
and
mov
pop
cmp
xchg
filds
lahf
es
imul
cmc
adc
std
inc
aam
push
or
repnz
or
push
xchg
mov
xchg
dec
dec
stos
cmp
push
scas
jecxz
in
repnz
ljmp
lods
in
jmp
mov
sbb
and
clc
sub
and
das
leave
mov
mov
fldt
call
inc
in
mov
xchg
lea
pop
ret
sti
lcall
test
inc
add
inc
mov
movsl
and
fmull
mov
icebp
js
jmp
inc
cltd
pop
sti
push
sub
sbb
les
outsb
inc
std
pop
mov
pop
sti
clc
in
dec
sti
inc
push
jl
clc
insl
inc
xor
loop
sub
or
dec
outsb
inc
rclb
mov
ja
out
sub
xchg
dec
pop
arpl
inc
inc
pop
mov
push
and
call
gs
dec
test
xchg
mov
rorb
shl
in
sahf
popfw
lahf
mov
add
in
and
xchg
arpl
cld
xchg
lcall
lods
add
je
sub
adc
cmc
sub
movsl
leave
js
cmp
ss
mov
cmpsb
clc
fwait
loop
mov
insl
test
mov
cltd
repz
dec
test
ljmp
loop
aam
xchg
shll
inc
sahf
repz
push
test
out
sbb
movsl
shlb
leave
pusha
or
mov
inc
sbbb
push
push
daa
sbb
jge
jbe
dec
pop
cmp
jmp
cmp
cmp
mov
jne
pop
xchg
inc
or
inc
add
mov
ret
pop
shlb
jge
dec
add
push
enter
mov
fisttpl
cld
loopne
jp
in
xorps
mov
pop
xchg
dec
push
mov
imul
bound
test
mov
call
out
lahf
ljmp
pop
fwait
mov
inc
pushf
sub
or
mov
pop
mov
add
xchg
add
sub
or
inc
or
cltd
aam
sbb
sbb
mov
add
repz
add
inc
sbb
xor
sub
pushf
lret
cmc
mov
test
sub
or
ret
and
push
add
test
rolb
popf
lcall
xchg
dec
movsl
lock
pop
xchg
pop
ret
xchg
jmp
jecxz
ret
dec
stc
fucom
out
ja
xchg
mov
std
cltd
lods
dec
inc
ja
xchg
nop
iret
adc
dec
mov
scas
pop
inc
int3
xchg
mov
fdivrl
mov
mov
in
jne
loope
outsb
rcrl
xor
fstl
or
cltd
inc
add
scas
loope
mov
xor
xor
pop
mov
frndint
outsb
pop
addb
pop
leave
fildl
mov
sub
ss
push
aaa
pop
mul
arpl
aaa
and
lret
repz
or
test
adc
inc
adc
mov
lods
cltd
stos
aaa
lods
lcall
sbb
imul
shr
pop
and
jg
insb
loopne
dec
sub
shlb
xor
or
adc
rcll
hlt
sub
int
xor
in
mov
or
lahf
sbb
jns
push
pusha
arpl
cmc
mov
mov
aam
ljmp
inc
inc
sti
pop
ss
sub
mov
mov
lcall
dec
mov
fs
sbb
das
aam
inc
sbb
sbb
das
ret
jns
hlt
iret
test
faddl
in
scas
bound
hlt
dec
xlat
mov
pop
xor
xor
push
outsl
in
fldt
scas
movsb
mov
movsl
add
dec
pop
and
jne
nop
pop
fcmovb
adc
loope
int3
pop
nop
sahf
xor
push
adc
adc
negl
testb
mov
sbb
add
out
jl
or
mov
pop
inc
inc
jecxz
adc
pop
mov
jbe,pn
sub
aas
dec
xchg
add
je
rcrl
sub
mov
mov
stos
cmpl
mov
ret
pop
test
push
leave
inc
push
out
leave
lcall
imul
iret
out
lret
xorl
out
ja
lret
jg
pop
js
sahf
add
mov
nop
add
decl
mov
call
sub
divl
jecxz
cmc
adcl
dec
incl
mov
xchg
aam
stc
dec
stc
cmp
filds
les
idivb
add
sub
mov
pop
jbe
mov
jle
lods
add
push
sbbb
test
sbb
div
cvtpi2ps
in
cmp
stos
cmp
lahf
sbb
push
fstps
sti
test
pop
fucomip
std
inc
add
jb
in
je
call
mov
sbb
movsl
call
mov
push
in
inc
repnz
sbb
sub
in
loopne
push
pop
push
ja
out
filds
sti
push
and
fxch
push
and
pop
cmc
mov
mov
push
xor
jp
lea
nop
loop
jle
clc
xor
in
mov
lcall
fchs
jmp
pop
mov
inc
jecxz
in
adcb
movsl
xchg
insl
inc
jecxz
cwtl
add
jae
ficomps
inc
mov
insb
push
sbb
imul
cmp
sbb
adc
out
xchg
int3
pushf
inc
stc
inc
jnp
xor
das
pop
inc
xor
dec
jmp
rcr
fistl
lds
mov
cli
lret
mov
out
rorl
pop
mov
xchg
js
adc
lods
stos
stc
mov
fidivrl
pop
scas
mov
mov
data16
sti
cld
sbb
cmp
jns
popa
bound
jns
jo
or
mov
ljmp
sub
inc
sarb
xlat
inc
mov
inc
xor
mov
into
adc
adc
sbb
mov
push
mov
imul
fisttpll
ss
stc
and
loope
loope
lcall
fsubrs
or
jle
cmp
push
dec
aad
sub
mov
imul
mov
sub
loop
scas
xor
inc
test
cmp
popf
or
clc
call
or
dec
xchg
iret
xor
cmp
insl
adc
mov
stos
in
adc
mov
xchg
dec
push
cmpsl
push
or
movsl
aad
mov
xor
jecxz
or
fwait
sbb
pop
jmp
inc
mov
xchg
and
hlt
std
cmp
inc
fcomps
or
add
mov
cwtl
outsl
lods
cmp
jbe
daa
jmp
test
icebp
jne
aam
or
lea
mov
loope
call
in
jno
jle
pop
mov
test
or
call
cld
mov
sub
xorl
mov
xchg
mov
xchg
mov
repz
inc
loop
sub
hlt
add
dec
in
rcrb
out
inc
fwait
ror
xchg
pop
cmpsl
dec
inc
pop
xor
test
imul
cld
mov
fdivl
mov
out
fadds
shlb
jo
movb
and
add
cltd
jbe
or
nop
insl
andb
dec
jle
pop
lods
movsb
sbb
fidivs
ss
mov
movsb
lods
adc
jo
std
sub
push
outsl
out
aas
pop
ljmp
push
dec
xor
sbb
and
jb
push
xchg
and
jle
mov
fnstsw
jle
orl
mov
shl
xor
add
filds
lock
xor
fsubrp
add
mov
mov
push
jl
xchg
jg
adc
out
push
std
jne
or
out
fwait
ret
aas
mov
push
stc
add
push
popf
mov
cwtd
dec
fdivp
popf
push
pushl
outsb
cltd
shrb
enter
dec
outsl
imul
adc
and
cltd
fbstp
mov
or
dec
test
imul
xchg
decl
ficoml
dec
in
mov
xchg
fistps
add
adc
adc
adc
and
repz
push
scas
pushl
loop
mov
fwait
test
stos
ja
out
sar
and
fldln2
xor
add
sub
fsubrs
ret
cmpsl
insb
mov
jne
in
addl
sahf
push
ljmp
stos
outsl
decb
and
ret
cwtl
cmp
fsubrs
adc
js
pop
out
cmp
cld
test
xor
cmpb
pop
fdivs
into
ficompl
scas
test
in
mov
sub
xchg
jae
scas
adc
dec
xlat
xchg
ds
xchg
push
add
stos
jg
call
lds
jb
cltd
sarl
sbb
adc
or
inc
cmp
mov
mov
sarb
sub
mov
ror
add
ja
js
cmp
add
inc
sbb
and
fisttpl
adc
aad
lcall
inc
imul
jnp
jb
mov
xchg
sbb
insl
xor
sub
ja
fs
sub
std
fldcw
pop
jne
pop
jnp
clc
sub
dec
mov
cmp
test
inc
jnp
loope
sub
adc
fisubrs
lahf
xor
pop
sbb
pop
mov
xor
sub
fiaddl
ljmp
and
adcb
push
insl
repnz
xchg
movsb
mov
xor
inc
inc
loop
and
inc
test
push
es
xor
daa
dec
dec
xchg
mov
dec
pop
lea
push
inc
rcrb
adc
pop
xorl
push
in
jne
mov
dec
std
shlb
and
push
mov
xchg
es
jno
shll
mov
pop
scas
pop
es
iret
pop
pop
mov
cmp
sub
imul
jb
xchg
shlb
or
hlt
xchg
notb
adc
push
jl
jmp
iret
jl
icebp
push
movsl
sbb
ja
pop
aad
jne
mov
mov
aaa
fidivrl
lret
pop
daa
xchg
sbb
adc
mov
sbb
xor
and
dec
nop
pop
push
outsl
or
push
imul
push
clc
loop
jne
adc
xor
dec
sbb
pushf
mov
and
es
lret
inc
nop
outsl
nop
mov
push
inc
jno
add
mov
es
aaa
out
outsl
lock
xchg
pop
ret
fdiv
bound
fucomi
adc
in
fistl
xor
pop
daa
or
lret
insb
push
cmp
adc
cltd
inc
aas
int
push
xorl
jnp
loope
inc
mov
icebp
pusha
fwait
jg
scas
aad
and
jge
in
lock
cmp
das
pop
push
jb
jecxz
stc
inc
scas
adc
stos
fcompl
repnz
stos
cmc
testl
adc
push
lea
outsl
push
leave
lds
cli
fistpl
mov
push
sbb
out
movsl
push
mov
nop
inc
test
push
add
and
lret
jb
aam
fwait
pop
jno
pop
clc
jo
push
cmp
sti
aad
dec
test
sti
cmp
sub
ja
mov
out
fnstcw
and
xchg
mov
negl
sbb
sub
imul
jmp
rcll
popa
add
xor
inc
jl
pop
addl
fsubrs
movsl
lods
push
xor
leave
nop
dec
mov
push
ja
xor
adc
test
xor
push
add
mov
int3
dec
pop
mov
pop
inc
int3
lock
dec
xor
cmpl
call
push
push
loopne
or
sbbl
pop
test
push
mov
mov
adc
hlt
popf
pop
lcall
pop
pop
shlb
dec
fsubr
daa
jo
ret
push
xor
mov
jp
in
xlat
pop
lahf
mov
inc
int
mov
jmp
xorb
jo
stos
cmpl
and
jne
add
cmc
or
xchg
mov
orl
add
cmpsl
dec
mov
gs
inc
adc
jmp
and
jp
cmp
sub
shll
sbb
sahf
jno
andl
xor
mov
push
jg
stc
ret
lret
mov
xchg
mov
inc
fstps
ja
push
add
mov
mov
jb
andb
int
jno
arpl
in
out
insl
push
pusha
lret
mov
push
xchg
or
fmull
sbbb
clc
push
aas
ja
sub
pop
or
xor
iret
les
clc
rcrl
bound
imul
inc
push
dec
mov
test
shll
sbb
jecxz
popl
and
xchg
xlat
insb
xchg
cmp
in
insb
nop
cmc
sbb
mov
out
sub
fsubl
js
dec
daa
or
mov
mov
clc
sbb
inc
pop
and
push
xchg
cli
lods
push
and
and
jb
inc
sub
enter
popf
fs
movsb
jo
inc
jle
pop
add
mov
mov
clc
test
addl
fsubp
fbld
loop
xchg
jb
jg
jp
cld
rol
mov
xor
jg
jp
mov
popa
popf
mov
dec
in
jge
xor
or
pop
lods
or
pop
and
int3
cmp
lcall
daa
jp
insl
mov
enter
fistl
in
or
push
mov
sbb
data16
pop
fldenv
push
mov
cmpsb
mov
or
pop
add
mov
jnp
pop
push
fdivrs
rorl
push
test
jne
adc
jo
loope
mov
clc
fstpt
ljmp
arpl
pusha
mov
pop
pop
push
fnsetpm(287
stos
test
adc
xchg
and
dec
push
sbb
mov
scas
lock
and
jnp
fsubp
mov
nop
xchg
aam
iret
mov
inc
dec
xor
adc
bound
rorl
xor
pop
outsb
addb
inc
push
pop
notb
ljmp
adc
outsl
test
adc
lret
hlt
test
paddq
push
movsl
cmp
cmpl
sbb
mov
addr16
and
xchg
dec
setne
pushf
fs
stc
pop
es
insb
cmpb
cwtl
mov
es
mov
xor
rclb
es
sti
sarb
mov
jecxz
cli
fcmovnb
mov
loopne
mov
test
mov
fisubs
push
insl
mov
es
add
sbb
and
or
xchg
sbb
ja
test
dec
clc
in
push
sub
inc
jnp
insl
into
pop
dec
aam
stc
and
addr16
sub
enter
dec
add
cmpsb
fsubp
mov
inc
cltd
out
aas
sbb
add
mov
into
push
ja
inc
add
std
adc
cwtl
pop
push
sbb
push
cmp
pop
sbb
daa
ss
sbb
repz
xor
xorb
fisubrl
push
loopne
andb
out
push
mov
out
jecxz
jp
jecxz
jl
add
loopne
inc
dec
pop
push
mulb
cmp
push
mov
ret
sahf
xchg
ret
jge
mov
nop
xor
les
add
cwtl
xchg
movl
lret
ret
lcall
add
ljmp
out
hlt
sub
xor
pop
mov
popa
sahf
cmpsb
test
loopne
loopne
pop
dec
or
xor
cltd
dec
pushf
and
pop
jge
orl
sbb
out
jb
fwait
imul
sbb
movsl
mov
fcom
pop
push
jnp
into
add
shl
xlat
ret
dec
jle
mov
jmp
fst
fildll
mov
inc
stc
stos
jno
je
fptan
push
and
inc
adc
in
lret
imul
sbb
fwait
test
jno
cmc
cmpsb
bound
cmp
pushf
jae
ret
cmp
add
lcall
or
cmp
pop
cmp
jns
neg
dec
sbb
mov
in
loop
jne
fucomip
mov
lcall
jb
xchg
fldl
pop
loop
testb
cs
xor
pop
and
loope
jp
movsl
cmp
jl
outsb
cmp
inc
add
mov
jg
sbb
jae
cmp
xor
adc
inc
shll
ja
cld
xchg
out
xchg
xlat
stc
cmp
mov
xchg
inc
orb
jp
stos
mov
loopne
xor
clc
pop
dec
int3
int
sub
ds
dec
push
subb
sub
jb
mov
repz
xchg
cmc
lods
jmp
aas
jne
cmp
and
aad
mov
fld
inc
in
xchg
mov
pop
jae
mov
pop
xchg
dec
test
mov
mov
pop
cmp
loopne
sub
mov
je
into
add
pop
dec
pop
idivl
dec
and
int3
call
repnz
in
imul
addr16
add
dec
add
sub
rcl
ffreep
mov
sub
pop
mov
inc
sub
sub
aam
sarl
int
movsl
mov
inc
add
cmc
jo
sbb
mov
loope
lret
mov
fistpll
out
mov
pop
inc
pushf
mov
jbe
inc
int
mov
inc
daa
scas
ret
fnstenv
xchg
adc
cltd
or
push
mov
sbb
lahf
pop
test
icebp
inc
outsb
cmp
sarl
adcb
cmp
pop
push
xchg
mov
pop
xchg
pop
mov
inc
dec
pop
cltd
paddb
out
ffree
inc
mov
mov
gs
pushfw
push
mov
shrl
sub
xor
push
pop
cld
mov
lahf
mov
scas
lret
inc
dec
and
mov
pop
mov
xchg
in
cmp
jne
jns
iret
jb
out
lea
mov
add
cmpsb
int
stos
jmp
mov
or
fwait
mov
sbb
sub
pop
cmp
or
cmp
push
test
hlt
ss
in
js
pop
lods
mov
add
sbb
ss
push
in
xor
sub
repnz
xchg
ficoms
or
mov
arpl
dec
xchg
out
cmp
cmpsl
inc
es
lock
ja
imul
jge
sub
sbb
mov
adc
pop
test
out
jmp
cmpsl
loop
adc
sbb
imul
iret
cld
add
adc
stc
mov
jnp
jo
repz
fwait
repz
pop
shrl
test
popw
pushf
std
xor
mov
push
xor
pop
xchg
pop
mov
mov
adc
aad
scas
das
test
push
and
or
jns
fbld
push
xchg
sahf
jg
movsl
push
outsb
popa
mov
xor
xor
fiaddl
int
das
push
inc
jl
lods
dec
sahf
out
add
mov
jns,pn
fcomps
cmp
mov
push
xchg
jnp
inc
or
test
sti
repnz
out
imul
es
les
xor
push
pop
lods
push
inc
push
inc
ja
jmp
add
imul
and
push
loop
nop
flds
or
cltd
call
push
jp
pop
flds
sbb
inc
negb
insb
fwait
inc
adc
gs
cld
add
inc
adc
pushf
flds
push
jge
rcll
add
out
outsb
cmpsw
push
dec
or
lahf
sti
mov
mov
in
hlt
xchg
movsb
mov
sarl
xor
mov
insl
inc
ja
repz
pop
add
dec
pop
pop
out
inc
lret
clc
jg
jmp
outsl
or
sbb
dec
arpl
rcll
cmp
xchg
ds
pop
lock
xchg
arpl
inc
adcb
mov
lcall
pushfw
imul
mov
aam
insl
pusha
cmp
and
push
and
pop
push
xor
frstor
pushf
daa
cli
xlat
pop
in
loop
push
movsb
testb
daa
mov
aad
or
scas
mov
pop
pop
push
sbb
jno
sarb
jmp
rcl
ficoms
and
mov
outsb
xchg
xor
jbe
mov
xor
dec
xchg
addr16
in
and
loope
divb
insb
mov
test
repz
or
test
out
or
sarl
adc
inc
add
lea
fsubr
dec
shll
fistps
jge
and
stos
filds
mov
add
dec
stos
das
sbb
fbld
and
outsl
xor
mov
js
inc
add
push
hlt
add
jp
cmp
mov
mov
sbb
sbb
adc
jne
cmp
push
repz
xchg
pop
pop
mov
cs
sub
adc
xor
push
or
adc
jl
out
sarb
loop
mov
sub
xchg
fldl
pop
or
std
insl
add
into
ds
popf
sbb
mov
cltd
mov
dec
mov
sub
jne
pushf
imul
or
xor
or
test
rcll
mov
dec
outsb
ret
in
movsl
jb
ret
mov
jno
and
add
inc
lea
sbb
or
repz
mov
cmp
out
scas
push
rcl
sub
scas
push
or
loop
in
jbe
aaa
add
lods
int
add
cld
insl
pushf
out
adc
cmp
dec
shrl
mov
iret
fidivrl
imul
xor
mov
es
xchg
test
pop
orl
mov
clc
fcomps
vcmppd
ds
mov
add
or
std
sahf
sysret
mov
jnp
mov
xor
xor
loope
int3
push
xchg
jno
push
adc
out
sbbb
add
stos
aad
push
xchg
add
dec
inc
shl
mov
add
add
test
in
sti
cmp
xor
ds
xlat
fidivs
ljmp
cmpsb
gs
adcb
fwait
push
jns
out
dec
xchg
dec
mov
inc
out
fstpl
rcrl
push
gs
leave
sbb
sti
pop
xor
mov
adc
jl
out
cs
out
in
pop
add
pop
push
es
adc
dec
aas
dec
gs
jno
xchg
pop
push
dec
sub
mov
fsubrs
and
lcall
mov
and
jbe
mov
sub
lea
sbb
cli
dec
mov
mov
xchg
inc
mov
inc
sub
mov
inc
sti
sub
test
mov
sti
mov
dec
int
push
andl
cmpsb
je
aaa
dec
ja
leave
aas
push
iret
gs
movsb
scas
hlt
sar
inc
push
xchg
das
pop
int3
fdivrs
fwait
xlat
rol
fidivs
mov
cmpsl
push
outsl
and
dec
stos
dec
test
enter
test
inc
push
jmp
cmp
movsb
sub
repnz
add
add
test
mov
decb
dec
pop
movsb
xchg
or
add
fld
jns
push
lods
push
push
out
stos
mov
test
mov
sub
or
loopne
out
add
jmp
adc
nop
lcall
cli
fstps
mov
xchg
pushf
lahf
scas
cltd
test
adc
pop
and
cwtl
inc
ret
cli
lret
sub
adcl
testb
aad
mov
push
int
test
inc
outsl
jmp
fldcw
push
les
dec
mov
rorl
inc
mov
xor
out
xchg
fstl
incl
in
leavew
movsl
inc
stos
xchg
mov
cmpsb
popf
mov
ret
cmpsl
mov
xor
rcr
add
sub
xlat
scas
and
mov
inc
sbb
popf
ja
sti
xchg
mov
fdivr
inc
push
pop
pop
outsl
mov
rorl
gs
xchg
into
loope
mov
or
xor
fdivl
push
jnp
pop
lods
pop
xchg
popf
fadd
push
xor
sbb
adc
sti
sahf
adc
xor
leave
mov
and
out
add
cmp
inc
pop
icebp
arpl
mov
pop
and
mov
xchg
dec
inc
shll
pop
movb
add
mov
xchg
inc
fcoml
push
fadd
aad
repnz
lock
outsl
roll
or
out
dec
leave
cli
adc
mov
mov
aaa
jb
arpl
mov
xor
pop
fucom
jp,pt
cs
push
add
jnp
xor
sahf
push
cld
dec
adc
shll
push
scas
cmc
sahf
cli
inc
sub
xor
ffreep
mov
ss
mov
sub
mov
xor
sarb
test
sbb
adc
mov
bound
jg
movsl
out
cmp
or
mov
xchg
mov
adc
ret
mov
ret
dec
push
ds
pop
lfs
aad
pop
jne
lds
lea
cmp
fwait
enter
xchg
lret
aas
inc
scas
sub
sbbb
and
stos
ficoml
add
fmul
xor
aad
std
insb
pushf
nop
test
mov
add
jp
or
push
sbb
filds
test
push
xchg
cmp
in
jmp
lcall
shlb
in
std
and
sub
xchg
or
inc
xchg
xchg
pop
andl
lret
loop,pn
lods
mov
lret
mov
mov
lret
xor
mov
roll
jb
jle
ljmp
sub
push
mov
xchg
js
mov
lret
filds
mov
adc
cmp
flds
insl
add
push
sbb
adc
dec
inc
ret
out
inc
sub
push
and
insb
stos
out
push
or
pop
enter
xor
and
xchg
add
mov
fcoml
cmpsb
in
fiadds
mov
mov
ss
lds
pop
movsl
add
mov
xor
lock
cmp
xchg
add
and
shrl
fbstp
mov
pop
push
cmpsb
sbb
adc
andl
repnz
inc
and
jg
adc
mov
lock
daa
stc
and
jle
cmp
std
testl
cltd
iret
cmp
or
inc
jae
mov
or
aad
les
pop
mov
xor
xchg
aaa
cli
xchg
nop
imul
push
bound
insl
popa
cmpsb
test
loope
sahf
jmp
pushf
mov
cld
ja
inc
sbb
mov
stc
bound
shl
and
stc
mov
and
sub
inc
sub
nop
int
lds
jns
adc
fcmovb
orl
jbe
sahf
or
mov
hlt
scas
xchg
mov
out
push
cmova
fwait
push
popf
enter
jge
stos
cld
push
jmp
push
cld
scas
in
xchg
out
push
call
inc
shlb
aam
int
repnz
inc
fdivrs
inc
sti
fstps
sarb
add
adc
push
loop
in
ficoml
mov
mov
mov
es
xchg
lcall
push
sahf
call
mov
dec
xor
xchg
push
inc
and
std
fadd
loopne
sbb
aam
int
jns
add
lods
jnp
push
imul
xor
ds
or
push
loope
je
sub
adc
mov
popf
cmpsl
cld
xor
add
mov
mov
sbb
stos
pop
stc
mov
repz
mov
out
jnp
scas
lods
stc
imul
popf
pop
mov
imul
adc
sbb
jo
push
mov
mov
test
inc
lahf
cmpsl
cmp
push
xor
aad
inc
mov
enter
and
xchg
mov
enter
jmp
push
cld
adc
cmc
push
inc
ss
and
sub
push
ds
dec
pop
or
sbb
jl
push
dec
repz
fstps
inc
lods
lahf
hlt
pop
cmpsl
pushf
scas
pop
pop
push
pop
movsb
mov
aad
ret
cli
iret
adc
repz
add
jo
ljmp
mov
mov
repnz
es
push
adc
cmp
xchg
insl
mov
cmpsl
mov
pop
hlt
jns
lret
add
addb
movsl
mov
out
pop
xchg
cmp
pop
mov
bound
repnz
lods
jmp
movsb
mov
mull
popf
cli
mov
ret
jnp
push
aam
lret
adc
fdivs
fimull
jg
jnp
pop
rcrb
sarb
aad
push
mov
mov
imul
pop
lret
les
mov
dec
pop
adc
test
sbb
add
mov
and
and
gs
nop
or
das
loope
inc
shl
out
jno
adc
mov
xor
sub
fdivrs
stos
call
adc
sysret
leave
pop
push
xchg
add
xor
mov
xchg
retw
and
in
and
icebp
pop
popf
out
add
jb
inc
in
sbb
repnz
mov
cmpsl
cwtl
mov
inc
sbb
ret
mov
shl
data16
sbb
pusha
cli
mov
rclb
or
fcomp
mov
stos
addl
mov
inc
mov
mov
xorb
adc
mov
dec
xor
test
les
push
pop
xor
test
cmp
cltd
inc
cmpsl
push
push
jp
pushf
and
jg
push
jne
dec
add
je
pop
pop
cmpsb
pop
enter
test
jmp
mov
push
orl
mov
xchg
iret
lock
pop
testl
decb
pop
das
push
pushf
cmp
shll
pop
imul
movsl
sub
jmp
sub
cmc
or
add
adc
loope
stos
mov
xchg
jbe
cld
ja
and
out
jb
pop
dec
testb
mov
inc
pcmpeqd
push
or
adc
jle
xchg
mov
mov
sbb
iret
jmp
jle
in
xchg
dec
pop
jne
cmpl
test
mov
ret
push
dec
test
icebp
sub
jg
sub
in
lds
mov
mov
enter
jno
mov
xchg
jg
addl
mov
out
and
sub
and
cld
sahf
add
push
cvtdq2ps
int
movl
icebp
pusha
jmp
mov
inc
and
aas
mov
pop
pop
pop
dec
data16
or
test
mov
mov
dec
pop
hlt
fcmovb
jmp
push
pop
push
fs
jns
orl
adc
dec
xchg
sbb
adc
mov
or
sub
and
movsb
xchg
out
gs
outsl
repnz
jmp
mov
pop
out
adc
and
dec
and
mov
push
pop
stc
mov
pop
mov
cmc
xor
xor
push
hlt
pushf
sti
mov
xlat
les
loope
ss
pushf
mov
shll
xchg
dec
cmpl
das
outsl
lods
ja
mov
or
aas
push
test
cld
sub
lds
jb
mov
dec
fcom
xchg
daa
sbb
ficomps
pop
das
xchg
dec
ja
or
add
xor
mov
jl
or
test
movsl
ljmp
jecxz
xor
and
dec
idiv
xor
es
push
pop
repnz
loope
loopne
pop
xor
or
mov
fbstp
pop
lock
fiaddl
pop
add
adc
cli
mov
jp
fstps
stc
push
sbb
adc
mov
pop
out
scas
aad
jns
adc
es
mov
sbb
adc
adc
call
ja
xchg
sub
lret
testb
popf
push
adc
sbb
imul
mov
mov
sub
dec
std
lods
adc
xorb
lret
cwtl
sbb
data16
or
xor
mov
jnp
pop
jp
fnstenv
rol
mov
and
test
jecxz
xchg
adc
and
add
imul
shll
xchg
insl
aaa
outsb
stos
into
cmp
and
push
mov
adc
cmp
sahf
pop
rcrb
sbb
jbe
or
loope
or
adc
cmp
pop
or
iret
adc
cmp
mov
add
cmp
stos
cmp
decl
loope
mov
loop
ljmp
xor
mov
fs
shld
sbb
and
dec
loope
cwtl
pop
xchg
inc
jne
and
js
inc
xor
icebp
xchg
fnstsw
pop
rorb
lcall
jmp
xchg
imul
and
faddl
andl
repz
mov
pop
or
or
in
insl
inc
les
adc
adc
xchg
jg
icebp
inc
inc
movb
xchg
nop
into
mov
imul
xorb
or
test
aas
pop
mov
enter
sub
jecxz
dec
insb
imul
jp
and
lds
sbb
and
inc
lahf
fs
pop
negw
sbb
ror
fucomp
scas
sbb
gs
popa
xchg
call
test
outsl
int3
mov
adc
mov
pop
pop
mov
add
aad
shll
aad
dec
xor
rolb
pop
fcmovnu
imul
and
lods
lods
aas
jns
xor
xchg
add
push
xchg
iret
idivb
inc
stos
mov
out
pop
iret
xor
xchg
jnp
test
cmp
sti
mov
mov
sub
fisttpl
aas
and
mov
pop
and
loopne
imulb
mov
inc
adc
sub
shlb
and
jmp
subb
mov
test
dec
imul
hlt
sub
push
add
mov
lret
stos
mov
fcoms
test
pop
or
ja
andl
push
sbb
mov
pushf
mov
cmp
push
lods
cmp
lods
mov
cmpsl
and
mov
mov
fwait
mov
or
mov
dec
jno
push
pop
lret
jae
ret
in
int
hlt
les
pop
push
pop
jbe
xchg
add
jg
sub
sti
sbb
out
push
dec
insl
popa
dec
mov
cmp
or
das
loopne
jns
rorb
inc
scas
cmpsl
mov
cwtl
dec
cwtl
mov
dec
stc
jnp
mov
push
test
push
fists
shlb
je
xor
xchg
je
inc
cs
jb
sub
imul
cwtl
adc
mov
add
pusha
fists
jp
push
ret
cltd
jae
fistps
js
pop
shr
inc
push
push
cltd
jmp
movsl
sub
or
rol
xor
xchg
mov
jl
outsl
addr16
repnz
inc
cmpb
adc
push
sub
xchg
lcall
mov
inc
xchg
popa
sbbl
hlt
clc
mov
test
xor
mov
push
xor
dec
pop
ret
and
cmpsl
fnstsw
dec
dec
dec
pop
sbb
fwait
mov
cmp
enter
inc
fcmovne
add
lock
ret
sarl
mov
test
dec
jecxz
push
pop
aam
iret
sarl
out
rolb
in
enter
std
daa
jg
out
pop
dec
add
xchg
inc
fs
ja
pushw
pop
pop
pop
out
int
mov
loop
insl
clc
cmp
fwait
clc
sub
fwait
dec
sub
scas
daa
movsl
dec
cmp
bound
enter
sbb
or
cmp
add
out
xchg
nop
out
test
fs
mov
pop
rolb
cs
fmuls
push
jno
scas
xor
stc
aas
int3
lcall
ret
pushf
int3
lods
pop
xlat
xchg
or
in
xchg
out
lea
add
shl
pop
fistpll
icebp
fwait
mov
out
outsl
push
cli
clc
cmpl
out
pop
xor
aad
or
mov
adc
aad
mov
outsb
mov
or
out
lods
test
or
icebp
dec
sahf
es
xchg
push
shll
push
mov
dec
aam
add
lea
mov
push
fmull
pusha
dec
insl
push
mov
push
fidivrs
popa
xchg
cld
icebp
daa
into
push
xor
jae
cmp
sarb
xchg
jnp
push
pop
cltd
fidivl
add
fcoml
pop
push
adc
imul
into
shrl
pop
cs
fwait
mov
xchg
cs
or
fidivs
jbe
add
dec
cmp
push
xlat
iret
leave
xchg
mov
add
das
ficompl
jae
inc
je
and
xchg
aas
push
jne
mov
push
outsl
dec
lahf
jbe
cmp
orb
dec
xchg
push
inc
inc
insl
and
jne
enter
push
mov
es
dec
xchg
cmc
xchg
push
bound
push
in
shrb
popa
push
sub
push
dec
aam
push
and
fwait
push
mov
fxch
lods
add
repnz
jbe
pusha
stc
out
xchg
jp
scas
ljmp
bound
gs
cmpsb
or
xor
dec
dec
scas
mov
subl
mov
inc
lock
pop
movsb
loope
push
outsl
adc
data16
icebp
pop
or
inc
in
push
test
adcb
popa
scas
xchg
xchg
popf
dec
mov
les
adc
xor
in
test
or
imul
and
push
add
popa
sub
pop
aam
push
push
hlt
insl
xor
jno
popa
sbb
cmp
push
insl
lcall
mov
in
leave
push
imul
sbb
fwait
and
mov
mov
es
push
mov
sbb
pop
in
dec
jnp
jbe
inc
pop
pop
loopne
jmp
adc
fbstp
mov
gs
hlt
test
mov
insb
rclb
mov
push
imul
jecxz
mov
hlt
int3
dec
das
lods
cmpl
ja
jecxz
fimuls
xor
imul
stc
aam
mov
push
adc
push
or
call
inc
outsb
jmp
in
rclb
mov
sub
mov
and
daa
loopne
mov
pop
jle
sbb
fnstsw
dec
ret
popa
jl
loop
mov
aad
icebp
pop
ljmp
mov
ljmp
in
scas
fldt
fcoml
es
lret
lret
push
push
mov
testl
sahf
inc
jne
jbe
xor
adc
enter
sub
mov
pop
mov
xchg
sbb
shl
jp
sbb
hlt
ret
andnps
es
popf
fmul
int
dec
xor
aas
rcrb
repnz
scas
xor
mov
sbb
jae
aas
arpl
mov
popa
pop
push
out
fs
sbb
sbb
lret
je
lret
int
notb
xor
xor
enter
repnz
lret
fs
mov
outsl
jns
mov
sub
sbb
xor
nop
jg
jbe
arpl
push
roll
mov
inc
jo
xchg
push
sbb
nop
mov
fs
int
out
push
ss
icebp
inc
jecxz
mov
inc
fmul
mov
loopne
add
mov
aam
jp
mov
mov
aas
dec
lret
iret
lret
scas
pop
fsub
in
ss
xchg
adc
dec
xchg
sahf
push
movsl
jmp
lret
popa
movsl
arpl
inc
je
pusha
cmp
adc
ret
adc
out
clc
incb
mov
ja
and
fs
push
cmp
mov
gs
sbb
out
add
in
jnp
or
jb
pop
repnz
dec
cmp
ds
rcrb
ret
dec
std
add
pop
push
sar
xchg
jne
out
les
sub
cvtps2pi
adc
mov
out
pop
jne
imul
cmp
and
fstp
dec
jle
sub
sbb
aas
cwtl
inc
add
cmp
adc
adc
adc
adc
in
fincstp
aas
cltd
sbb
addl
stos
cmpsb
ljmp
dec
dec
mov
adc
out
addr16
mov
loop
sub
or
jge
xor
inc
jno
pop
mov
shl
jnp
or
push
or
mov
xor
jns
rcl
lret
int3
and
ficompl
fidivs
lods
out
push
cs
and
pop
jo
adc
fildll
js
inc
ret
mov
nop
sarl
mov
into
pop
inc
xor
inc
lods
sub
fcomps
imul
mov
mov
negl
mov
hlt
xor
addr16
aam
jp
jb
les
je
mov
int3
push
push
gs
mov
push
mov
cmpsb
mov
in
enter
cmp
pop
lods
fs
add
lods
iret
mov
sbb
push
xchg
and
mov
subl
arpl
mov
jmp
jno
push
mov
loopne
add
mov
les
fsubp
mov
cs
addr16
jns
lods
xor
lock
push
inc
aaa
adc
test
cltd
out
or
stc
mov
or
in
xchg
or
cmovns
xchg
repnz
shlb
adc
mov
push
xor
mov
mov
mov
loopne
fpatan
adc
and
lret
imul
add
cmp
shll
push
test
in
mov
pop
mov
pusha
fisttps
iret
sub
xchg
inc
dec
cs
dec
and
add
mov
loop
or
nop
insl
nop
les
rcll
insl
incb
lret
je
mov
icebp
jnp
mov
sub
lret
aam
loopne
out
ljmp
cmp
fadds
test
xor
arpl
cmp
loopne
imul
xchg
inc
orl
int
cld
mov
mov
jnp
call
xchg
aam
cmp
fldenv
cmp
push
stos
dec
inc
jmp
cmp
lahf
xchg
xchg
and
push
ficoml
push
xlat
sbb
sub
cs
scas
jnp
mov
test
out
lcall
aad
pop
mov
rolb
pop
mov
inc
mov
test
sub
dec
xorb
nop
cmpsb
out
shrl
data16
sub
sbb
mov
std
inc
aad
lret
lock
add
adc
xor
int3
jae
inc
enter
jae
pop
subb
adcl
pushf
dec
cs
sbb
mov
testl
dec
mov
push
scas
mov
or
stc
test
adc
addr16
push
fsubr
or
out
mov
add
pop
inc
repnz
jecxz
xchg
int
mov
mov
cltd
lret
push
adc
add
pop
addr16
cld
cmpsb
mull
add
stc
pop
mov
fcmovne
inc
add
jno
cmp
cli
loope
dec
mov
fldcw
push
xchg
in
cld
es
lret
bound
sub
fucom
repnz
mov
outsb
dec
ja
ret
aas
xchg
into
jle
jmp
inc
data16
jmp
outsl
addr16
pop
mov
pop
ja
lods
push
pop
imul
xor
jge
fimull
testl
stos
fdivrs
lcall
sti
push
lret
pop
cmp
mov
push
mov
test
cmp
mov
dec
es
leave
imul
and
dec
mov
subl
jb
adc
jae
adc
xchg
ret
inc
mov
cmc
stos
pop
jns
lds
sub
mov
addr16
add
mov
out
lods
std
inc
mov
clc
sub
bound
int
add
jle
mov
cmp
dec
in
xchg
adc
jb
xchg
movsl
loop
addr16
leave
int
cmp
inc
xor
mov
mov
rorl
mov
mov
push
jbe
jg
mov
xor
and
incl
lret
push
push
mov
push
movsl
adc
lods
sarl
or
and
inc
outsl
aam
xchg
mov
das
inc
das
into
mov
sbb
hlt
sbb
loop
pop
nop
iret
ja
fcomi
es
je
dec
sub
orb
pop
inc
dec
les
sbb
sub
lret
out
lahf
and
mov
mov
addr16
push
push
lods
mov
pop
lock
test
shrb
sbb
xchg
iret
cmpsb
mov
or
lods
stos
pop
and
cwtl
bound
pop
gs
loope
lahf
hlt
cmp
cltd
pop
shll
jge
xchg
sub
fnstenv
push
icebp
jnp
mov
inc
and
lods
xorl
adc
das
jnp
dec
mov
dec
or
mov
stos
fisttps
pop
ds
sbb
int3
sbb
jb
mov
jmp
repnz
cli
ss
out
jno
mov
push
out
push
push
adc
dec
dec
data16
cmpsb
sahf
or
sbb
jns
mov
push
adc
int3
leave
pusha
mov
pop
mov
orl
sub
jl
add
xchg
xchg
inc
xor
lcall
stc
push
mov
cmp
mov
mov
ret
cltd
xchg
adc
in
repnz
xor
ss
cltd
dec
stos
adc
cwtl
sub
mov
mov
sbb
roll
data16
push
shrb
add
sbb
hlt
je,pn
and
pop
loope
mov
jns
outsb
pusha
or
mulb
stos
sub
cmpsb
shll
lods
adc
mov
rolb
xchg
iret
lods
fsubl
sahf
in
out
fstp
mov
ja
stos
pop
add
in
mov
hlt
xor
xor
pop
sbb
mov
lds
mov
pushf
jns
mov
ljmp
lret
pop
cwtl
imul
jbe
and
xchg
cmp
shld
stos
leave
lods
adc
mov
fcmovnu
dec
repz
enter
clc
xchg
cmp
imul
nop
or
lods
ljmp
xor
and
push
sahf
test
in
cmp
mov
cmp
mov
sub
loop
xchg
mov
xchg
jmp
test
jge
push
push
xor
out
jb
mov
repnz
scas
pop
sarl
mov
xchg
sub
xor
xchg
adc
loope
pop
inc
xor
out
cmpl
push
into
mov
mov
dec
shl
pop
pop
cmp
and
sbb
mov
inc
push
dec
jecxz
dec
mov
push
sbb
adc
add
xor
mov
sub
in
rcrb
xor
fists
add
xor
dec
mov
cs
jae
lock
jecxz
sti
jecxz
pop
out
into
lea
xorb
xchg
lock
out
je
push
notb
cmpsl
sbb
xchg
xchg
aaa
rorb
cmp
xlat
test
scas
jmp
test
rcrl
and
and
or
cmp
push
push
xor
sbbb
imul
scas
ret
jl
shr
mov
outsb
jle
out
jbe
dec
fists
pop
sbb
mov
flds
push
and
std
insb
xchg
adc
jo
cmpsb
sbb
xor
loop
mov
xchg
cmp
cmp
sbb
and
ret
jns
add
sub
pop
cli
add
pop
and
pusha
push
lds
mov
xlat
jb
push
insl
or
adc
aam
loope
cmp
stc
icebp
xchg
or
mov
xchg
popf
shll
cwtl
xchg
cs
inc
stc
lret
or
ficoml
inc
pop
dec
clc
test
insb
aas
xor
lcall
je
mov
xor
in
fsubp
sarl
mov
add
adc
cmp
lret
sub
pop
or
jne
in
sbb
push
mov
rclb
mov
outsb
jp
xchg
imul
stos
mov
push
sub
dec
imul
pop
push
in
inc
push
in
out
int3
int
test
sbb
fldenv
inc
fsub
mov
out
imul
fs
aaa
inc
out
dec
loopne
dec
add
pop
jp
lret
mov
xor
sar
into
fiadds
xor
sbb
adc
mov
pop
aaa
and
or
push
cs
not
int
inc
loop
lret
ror
clc
adc
xor
pop
jmp
push
dec
fisubrs
push
pop
xor
xor
aad
mov
and
cmp
shll
jmp
out
stc
out
outsl
sbb
shlb
sarb
xor
push
cmp
and
add
bnd
and
xchg
sbb
repz
fstpl
mov
rcll
or
xor
roll
stc
rorl
jo
daa
subl
test
fimull
shr
pop
loope
aam
lods
loope
out
mov
loop
aaa
push
lds
call
inc
popf
xor
and
cmp
mov
cmpl
jb
nop
adc
push
imul
cmp
scas
xor
lcall
mov
dec
inc
sub
inc
mov
pushf
pop
test
outsb
jg
inc
movsl
push
inc
sub
out
shll
aad
pop
in
cmp
das
mov
xchg
dec
inc
fsts
jle
sbb
ret
cmp
push
mov
mov
sub
das
add
push
xchg
push
xor
jae
jbe
dec
sub
cs
lock
dec
xor
fdivr
lock
es
enter
inc
shlb
call
ss
and
xor
xchg
and
mov
iret
popa
sbb
mov
inc
pop
push
movsb
dec
cmp
and
cltd
ret
clc
fs
mov
js
das
test
pop
out
xchg
add
and
cmpsl
aas
movsl
pop
mov
mov
xchg
in
adc
scas
sbb
add
sbb
cmp
xchg
cmp
call
cmp
repz
mov
insl
fistpl
cmp
jge
je
hlt
mov
fdivl
pop
jge
adc
mov
adc
sub
cs
sarl
fnstcw
icebp
negb
in
push
stc
inc
pop
aam
xchg
scas
shll
mull
xchg
mov
fmull
lcall
sahf
jmp
mov
push
inc
mov
push
pop
clc
sbb
adc
ret
outsb
xchg
pop
and
xor
jo
in
jmp
lds
fneni(8087
mov
mov
sub
cld
mov
les
outsb
push
mov
mov
sbb
mov
orl
icebp
jp
xchg
test
jge
rcll
loop
lret
sarl
cmpsl
addb
xlat
xorl
lret
mov
pop
push
insl
mov
cltd
in
xchg
cld
or
xor
cltd
ss
push
arpl
dec
fwait
cmp
jbe
int
clc
imul
test
iret
cmp
lods
aam
je
orb
in
int
push
xchg
mov
je
cld
xchg
sbb
nop
lock
cmp
push
popf
pusha
sbb
jle
stc
loop
dec
adc
pop
inc
sbbl
testb
cmp
xchg
adc
jno
test
xchg
push
sti
shlb
adc
push
cmpsl
repz
fcmovbe
mov
inc
in
inc
jnp
in
inc
pop
xor
movsb
cltd
cmp
int3
sbb
call
and
push
xchg
mov
lock
std
enter
enter
mov
dec
jo
xchg
xlat
rorb
jmp
sub
mov
fs
ljmp
insl
sbb
cltd
arpl
sbb
push
pop
or
ret
lret
dec
cwtl
pop
decl
popf
testb
mov
pop
cltd
movsb
shrb
sub
nop
in
inc
dec
leave
inc
jbe
ja
ss
mov
cmp
idiv
and
aam
icebp
out
jmp
sub
lock
mov
mov
loope
lock
pop
mov
jb
insl
jne
fdivrs
sbb
cwtl
out
sub
sbb
lret
ret
popa
cmp
xchg
xchg
jl
sahf
pop
xchg
xor
jecxz
ficoml
cli
jns
mov
jle
mov
pop
or
adc
sbb
les
out
fwait
mov
popa
cmpsl
hlt
jno
push
ret
inc
sub
cmpsl
pop
mov
fmuls
cmp
out
add
dec
mov
jl
xacquire
cltd
inc
mov
call
pop
mov
add
xchg
lahf
mov
shlb
out
push
imul
hlt
sarl
out
mov
dec
push
roll
xor
inc
bound
fistpll
test
or
sbb
inc
push
mov
dec
lea
adc
mov
imul
into
sub
loope
mov
pop
add
sub
movsl
pop
mov
movsl
shrl
jecxz
adc
add
in
test
dec
rorl
xchg
and
aad
xor
stos
sub
pop
pop
lahf
pop
hlt
adc
scas
addb
push
and
ret
ret
push
sti
mov
icebp
arpl
int3
js
jmp
mov
mov
into
stos
push
rcll
mov
lret
aad
sub
cmp
sub
cmp
push
movsl
movl
pop
or
out
ds
pop
push
jge
sub
packuswb
popf
les
fmuls
or
hlt
das
rcr
jae
push
jmp
arpl
testb
cmovge
pop
lret
shlb
leave
cli
ret
add
mov
mov
fdiv
rol
push
leave
jl
cmpsl
fisttps
arpl
loop
ret
stc
xor
sub
call
pop
rcrb
xchg
sti
xor
and
lret
add
dec
push
popf
dec
jl
ret
mov
xchg
or
xor
clc
repnz
pushf
push
test
mov
cld
out
gs
fldenv
jp
and
cmp
pop
pop
xchg
push
xor
xchg
iret
call
rcrl
pop
mov
pop
aam
sub
stos
mov
enter
mov
divb
inc
js
adc
cmp
leave
out
pusha
add
push
mov
ret
inc
imul
mov
cltd
data16
aad
clc
nop
cmpsb
cli
in
imul
pop
std
cmp
jbe
in
fldenv
in
xchg
test
lods
imull
mov
fsubrs
push
push
movsb
mov
test
in
pop
mov
and
imul
jb
stos
add
popf
scas
add
aaa
das
icebp
leave
push
xor
or
aam
in
sbb
cli
idivb
cmp
adc
andl
rcrl
add
rcrl
rorb
pop
push
bound
xchg
lcall
insl
popa
popa
or
cmpsb
addl
ds
aad
subl
mov
add
cmp
outsb
je
mov
js
dec
xchg
mov
or
pusha
rcll
shl
roll
inc
insb
jl
dec
xchg
mov
aam
popf
jnp
xchg
mov
and
mov
lret
in
jge
dec
iret
sbb
xor
out
mov
shlb
ds
in
fs
push
and
adc
xchg
push
xor
jb
les
add
inc
stos
aaa
inc
popf
add
or
or
decb
sub
pop
sbb
fldl
stc
out
cmp
xchg
cmp
pop
xorb
cmp
das
incb
xchg
call
push
lahf
imul
pop
ja
int
add
in
xchg
pushf
add
xor
and
and
in
xchg
pop
push
mov
in
test
mov
cmp
ret
adc
int3
mov
or
jnp
out
cmp
rorl
stos
pop
pop
lock
mov
cltd
dec
pop
jno
adc
dec
loopne
add
dec
scas
lea
lret
cmp
data16
and
fimuls
leave
in
shr
aam
mull
dec
sti
jge
fadd
insb
fnsave
inc
stc
mov
cmp
mov
fistpll
aad
aaa
and
loope
outsb
popf
jbe
adcb
repnz
add
aas
lds
cltd
push
or
loope
jecxz
and
push
mov
pusha
pusha
push
bound
test
jmp
lock
decb
jl
push
fmuls
dec
jns
out
sbb
sub
sti
pcmpeqw
xlat
xchg
subl
les
stos
or
fmull
loopne
lahf
std
jecxz
sub
rol
cmp
cmpsb
stc
mov
ljmp
jne
sub
sbb
pusha
iret
fs
sbb
imull
push
pop
push
lds
mov
and
cwtl
aad
cli
jmp
popl
or
push
mov
push
sbb
pushf
mov
mulb
or
pop
cmp
push
rol
xor
sub
mov
push
pop
push
fldcw
push
vpshab
xlat
pop
test
add
outsb
int3
adc
cmpsb
movsb
push
dec
arpl
jp
imul
add
das
or
loope
jae
cli
jecxz
cwtl
add
lds
movsb
inc
jae
push
push
xor
and
add
xchg
insb
popa
out
or
adc
call
push
adc
mov
xor
jl
inc
mov
out
leave
inc
in
enter
xor
jg
add
cld
ds
test
pop
sub
out
push
fbstp
ret
mov
sub
xchg
inc
mov
loope
shr
nop
mov
add
pop
mov
sub
cltd
sbb
sub
lea
sbbl
icebp
mov
or
xchg
pop
incl
arpl
adc
leave
icebp
mov
mov
jp
sub
mov
sti
jp
aam
lcall
test
shl
lods
aad
push
push
lahf
jno
jae
xchg
repz
mov
scas
or
jg
sub
inc
sbb
sub
push
pop
dec
mov
jae
subb
xor
sbb
pop
pop
daa
mov
add
or
hlt
dec
sub
mov
jmp
insl
not
mov
out
sub
call
fcoms
dec
inc
incb
cmp
mov
jbe
loopne
es
pop
mov
sub
xlat
pand
cwtl
mov
pop
xchg
mov
dec
sbb
into
adcb
out
xor
fisttpl
cmpsb
movsl
dec
in
lock
test
jne
outsl
call
dec
inc
adc
push
nop
cmp
mov
call
in
fmuls
fbld
mov
push
insl
jnp
fcmovne
and
into
dec
jno
mov
fcompl
sbb
cmc
out
pop
sub
fbld
xchg
pop
inc
out
bnd
scas
ds
dec
adc
cmp
pop
xchg
pushl
sub
aas
adc
loope
pop
xchg
xchg
mov
call
daa
leave
jmp
add
test
das
sahf
insl
nop
lcall
les
cmp
sbb
enter
jns
mov
adc
test
xor
cmc
sbb
push
and
sub
mov
sub
cli
xor
shlb
cmp
and
scas
cmc
mov
sub
mov
push
addl
dec
js
push
rorl
mov
lock
lds
test
mov
test
pop
loopne
xchg
adc
mov
daa
fdivrs
xchg
data16
cltd
cld
fisubs
inc
imul
movnti
idiv
outsl
shrb
movsb
inc
bound
ret
addr16
xchg
sahf
sbbl
inc
int
mov
je
icebp
ljmp
jge
je
jne
inc
cli
cmp
sbb
lods
test
sbb
adc
test
and
cmp
rol
je
subl
repz
cld
outsb
fmul
cmpsb
dec
daa
push
mov
or
add
jge
data16
leave
jnp
scas
jns
adcl
xchg
insl
into
lahf
add
pushw
fcmovu
or
xor
call
dec
outsl
aad
aam
jns
cmp
lcall
jns
mov
mov
sbb
ss
or
sbb
stc
loop
aad
sti
pusha
and
bound
bswap
jb
ret
mov
xor
stc
int3
hlt
xchg
mov
pop
dec
push
and
push
in
lret
jmp
repz
call
push
in
mov
sbb
dec
stc
js
in
std
jae
and
mov
test
inc
dec
arpl
push
pinsrw
mov
je
lret
add
into
xchg
cmc
repz
add
push
xor
add
mov
jae
mov
mov
pop
adc
pop
cld
imul
aad
xchg
sti
loop
adc
testl
jmp
pop
cmpsb
jmp
inc
pop
cld
loope
fildll
pop
sub
dec
lods
jae
ljmp
ljmp
pop
cld
adc
inc
ret
dec
or
add
inc
xlat
ss
jecxz
push
sub
lods
inc
out
and
addl
imul
jmp
shll
pop
lcall
aam
into
scas
loope
push
or
nop
popl
pop
add
and
enter
lods
fwait
lods
fidivrl
push
bound
ljmp
outsl
roll
mov
jne
rorl
rorb
adc
jl
mov
inc
mov
pop
mov
or
addr16
rcrl
sbb
fisttpl
test
cmp
add
add
cli
adc
cmp
pop
mov
jp
lret
jle
xor
into
enter
push
pop
sbb
jb
adc
cmpsl
lcall
pop
push
fiadds
rcl
push
in
mov
xchg
addr16
sbb
inc
xchg
aad
cmp
inc
mov
in
push
lock
inc
cmpl
inc
stc
mov
movsl
jge
ja
cli
xor
jl
sti
inc
mov
cli
shll
mov
pop
scas
or
jecxz
icebp
pop
cmc
cmc
mov
and
sub
fwait
add
sub
fucom
outsb
mov
insb
shlb
inc
pop
popa
fidivs
iret
sub
aas
insl
add
das
push
mov
cmc
and
loopne
or
in
cmp
movsb
mov
dec
mov
stc
ktestb
in
push
les
and
decb
cmp
sub
pushf
int3
popa
or
movhlps
mov
sbb
fcomi
movsl
add
mov
push
mov
fstl
fldl
mov
jp
jo
mov
and
lea
shr
clc
mov
loopne
out
mov
inc
mov
mov
sbb
mov
aaa
insl
xor
loopne
xchg
rep
xor
mov
mov
mov
addr16
sbb
fdivs
popa
mov
fwait
rorb
jo
mov
lcall
outsl
jbe
loop
inc
push
xchg
insb
pop
or
fwait
stc
lock
jnp
fdivl
leave
stos
pop
popa
test
scas
xor
ds
sti
inc
adc
fcomp
or
xchg
cld
popf
pop
outsb
fmulp
pusha
subb
lds
and
pop
xchg
imul
dec
add
xor
fsts
mov
adc
dec
fcmove
adc
insl
fistpl
nop
fcomi
xchg
xchg
clc
sub
aad
mov
sub
fs
lock
add
jp
xor
into
sub
mov
insb
in
loop
or
mov
ret
jnp
in
and
fs
inc
adcl
mov
leave
mov
xlat
popa
es
pop
mov
push
sti
xlat
cmp
mov
cs
notl
std
mov
je
jne
mov
push
or
pop
sub
jns
inc
bound
push
xor
fucomip
pop
cmp
sti
das
add
sbb
outsb
inc
jg
pop
popf
add
popa
mov
call
xchg
cli
loopne
fwait
divb
cmc
roll
out
jbe
mov
adc
sub
shlb
pushf
outsb
mov
pop
sahf
sbb
rolb
xchg
int
pop
mov
and
lods
or
push
xchg
cltd
fisttpll
sub
cld
xchg
ror
outsb
cwtl
aaa
dec
adc
popa
or
cmpsb
jnp
push
sub
sbb
test
or
push
cli
sub
inc
push
jp
mov
popa
in
cs
mov
aaa
pop
js
pop
decl
fcompl
dec
out
pop
sub
cmpsl
divl
imul
mov
push
movsl
jno
adc
lea
js
inc
push
sub
inc
out
bound
or
sbb
frstpm(287
xor
jne
jle
add
mov
aas
or
xorl
xchg
icebp
in
xor
mov
xchg
cli
fcmovb
xlat
jnp
aad
push
mov
push
shr
popa
scas
dec
xchg
das
aaa
lea
cld
out
ja
lcall
jae
xchg
push
mov
in
sbb
push
mov
mov
mov
outsb
ljmp
leave
jge
dec
dec
out
mov
or
in
pop
sbb
fildll
mov
jmp
push
sbb
pop
mov
into
cld
dec
ja
imul
or
fcmovnbe
mov
ds
lcall
pop
jmp
gs
pop
xor
nop
push
xchg
dec
aad
mov
inc
mov
and
test
aad
push
addr16
popf
out
mov
jp
repnz
idivl
pop
add
mov
mov
je
jns
lds
pop
jbe
gs
inc
inc
ret
mul
sbb
adc
aad
and
mov
test
out
mov
and
clc
jg
or
repz
xchg
mov
and
xchg
pop
loope
and
mov
cmp
inc
lret
inc
std
pop
add
mov
int
in
arpl
test
adc
inc
or
mov
inc
dec
cmp
cmp
sahf
jge
xlat
fwait
xor
jmp
sub
test
push
cmpb
dec
adc
xor
lods
inc
cmpsl
or
or
sti
ficomps
addr16
xchg
bound
cmp
fwait
das
sbb
adc
mov
mov
xchg
mov
scas
jne
add
mov
xchg
adc
jle
icebp
aam
cmp
nopl
inc
cmc
ret
xor
push
inc
call
push
out
cld
push
popf
mov
test
movsl
shrb
daa
aam
lods
iret
aad
lahf
enter
cmpsb
pop
mov
rcll
jl
mov
pop
stc
xchg
ljmp
ficompl
add
xchg
sti
rolb
scas
insl
ret
movsb
inc
sub
ret
or
call
and
and
shr
testb
add
ret
nop
adc
into
xor
jno
repz
sub
or
out
cli
xlat
loopne
cmpb
mov
rcrb
xor
out
data16
nop
mov
jmp
xor
mov
jge
jns
push
sub
into
mov
sub
push
in
popf
test
xor
add
fcoml
push
jl
notb
mov
sbb
out
cltd
add
dec
daa
mov
lcall
jmp
mov
sarl
pop
xor
mov
pop
add
call
repz
pusha
and
mov
aas
push
bound
mov
fdivl
iret
jnp
xchg
dec
pop
or
lods
mov
pop
scas
sbb
pushf
mov
inc
xor
imul
sbb
pop
pop
dec
int3
dec
je
push
out
out
inc
insb
mov
pop
push
add
pop
dec
in
sti
add
and
or
sub
js
mov
add
rclb
arpl
mov
push
mov
and
sub
popf
xor
gs
out
dec
mov
sub
xor
add
adc
pmuludq
es
jb
fwait
jmp
mov
cs
dec
rcl
bound
test
push
into
sub
mov
mov
sub
subb
and
pop
dec
addr16
cmp
stos
or
push
ret
outsl
pop
stc
das
mov
push
add
aam
out
sbb
push
int3
push
dec
int
insb
or
add
shr
imul
rcr
mov
sub
testl
or
push
sarl
cmp
mov
push
add
push
out
in
mov
xor
cltd
negb
cld
and
roll
int3
test
lret
add
stc
jmp
mov
inc
inc
les
and
dec
mov
movsb
push
in
inc
mov
out
xchg
stos
mov
leave
and
ljmp
push
push
das
inc
adc
cltd
dec
loopne
xor
mov
arpl
and
jg
inc
inc
pop
aam
jle
mov
push
sub
pop
and
aam
mov
mov
dec
or
mov
jne
fs
test
adc
cwtl
pop
jle
and
cmp
mov
and
out
adc
inc
push
js
stos
loop
hlt
gs
pushf
cwtl
and
arpl
js
into
mov
add
std
repnz
fisubs
gs
out
cli
movsb
cmp
adc
scas
pop
ret
sub
and
pop
les
pop
daa
test
into
ds
mov
mov
or
sti
call
push
aaa
pop
cmpsb
stos
xchg
jg
dec
mov
daa
flds
stc
push
inc
dec
out
add
shll
enter
cli
xchg
jmp
imul
sahf
sbb
lcall
jecxz
popa
or
mov
pop
popa
out
testl
mov
mov
inc
notb
mov
xlat
fisubrl
repz
push
leave
and
inc
push
or
cmpsl
std
rorl
sub
mov
jbe
xor
pop
push
out
das
cmc
lock
popa
cmp
xlat
sbb
push
push
fistpl
jl
cmp
jno
push
jmp
jbe
xor
ret
sbb
in
fiaddl
bound
out
insb
mov
mov
fidivl
xchg
negb
daa
jl
inc
cmc
and
je
push
lcall
loopne
loope
callw
or
mov
cmp
not
arpl
sarb
xchg
mov
inc
cli
pop
loope
xor
sbb
push
sbb
loope
loop
cltd
mov
and
in
inc
cmp
scas
mov
inc
adc
loop
xchg
mov
or
cmp
jne
jge
shrl
inc
arpl
inc
hlt
xor
mov
add
mov
push
test
jbe
cld
mov
inc
pop
xchg
ltr
adc
pop
and
clc
test
lret
xor
stos
fstl
shlb
out
je
mov
scas
push
in
adc
dec
sti
dec
push
adc
xchg
pop
popf
dec
jb
mov
mov
lret
sbb
std
pop
fmull
jnp
pop
mov
push
xor
cmp
arpl
insb
mov
sub
cmp
lret
testl
pusha
add
sbb
lea
pop
out
addb
sub
les
push
fdivr
test
test
ds
das
out
sbb
pop
inc
jecxz
jo
xor
inc
rep
mov
mov
repnz
xchg
cmp
pop
stos
sti
pushf
std
dec
movsl
inc
xchg
repz
lock
xchg
outsb
call
call
xchg
out
adc
mov
clc
ds
adc
xor
dec
sub
loope
iret
sub
movsb
ret
movsl
ss
xor
jb
jp
daa
bound
jbe
mov
xchg
pop
lcall
inc
jbe
aaa
enter
stos
test
cmpsl
push
cmp
pop
aas
aas
shl
inc
scas
cmp
sbb
or
xchg
dec
add
pop
lea
jno
fisubl
mov
pop
adc
mov
pop
inc
or
arpl
movl
mov
sbb
mov
mov
jnp
mov
arpl
daa
outsb
mov
push
stc
jns
mov
decb
fadd
mov
imul
sbb
ja
dec
pop
bound
ret
in
lret
push
dec
mov
dec
shrl
inc
cmp
inc
inc
mov
cmpsb
xor
pop
aaa
inc
xchg
pop
fldenv
aam
xor
adc
add
push
fldenv
inc
sub
popf
imul
push
dec
jl
push
mov
mov
push
pop
jp
sbb
pop
pushf
shlb
outsl
mov
aas
mov
pop
test
mov
adc
in
into
push
xchg
dec
cltd
cmc
test
ja
ficoms
push
ss
enter
or
xchg
shr
jecxz
and
pop
sub
adc
pop
sti
sub
rcrl
and
adc
fcomp
mov
push
lcall
xchg
adc
pop
dec
mov
or
imul
xor
mov
out
iret
inc
mov
and
and
sub
and
ja
cmpsb
xor
lds
out
add
add
in
pusha
bound
pop
data16
call
cld
cmp
fwait
bound
cli
sub
cmovae
pop
shll
mov
lock
inc
repnz
lret
stc
ja
mov
ss
push
repz
sub
mov
lcall
test
arpl
and
repz
shlb
aad
addr16
pop
add
dec
push
aas
adc
pop
jl
fbstp
shll
ds
pop
mov
xchg
fimuls
cmpsl
cmp
inc
pop
sbb
cwtl
fisttpl
ret
adc
sbb
xor
fildl
popa
testl
fsubrl
stos
fstps
dec
fcomps
pop
pop
pop
pop
pop
or
cmp
insb
clc
pop
aaa
scas
or
and
add
mov
jae
or
shrl
xorl
stos
mov
push
add
sbb
xor
and
push
outsl
push
inc
outsb
pop
push
mov
in
leave
mov
shll
fidivrl
mov
ss
mov
aas
inc
outsl
cs
ret
adc
pop
inc
xchg
mov
inc
fiaddl
sti
and
fstcw
shlb
in
sub
xchg
mov
adc
xor
cmp
js
push
ret
mov
cld
add
cmp
cmp
adc
or
jno
int
mov
imul
fnstsw
loopne
xchg
xchg
jb
insb
out
jae
cmp
pop
lods
xor
stc
sarb
outsb
push
fs
push
movsb
sti
in
pop
dec
pop
dec
js
pusha
cmp
push
xor
add
adc
xchg
mov
mov
in
xor
xchg
mov
cli
dec
dec
scas
push
lods
inc
fimull
pop
push
sahf
into
loop
scas
call
push
imul
ss
xchg
lock
sub
cli
out
popf
jge
call
ss
icebp
cmpsl
lret
ret
lret
loope
leave
lcall
leave
adc
pop
leave
sahf
jbe
into
cmpsb
sub
mov
xor
sbb
outsl
les
sub
test
jl
push
cld
fs
repnz
mov
out
shrl
repz
mov
mov
sti
mov
sbb
jp
cwtl
or
jb
inc
mov
dec
pop
xchg
lcall
sahf
inc
sub
xchg
push
int
adc
sub
call
sbb
and
jmp
add
adcb
ret
mov
push
pop
xor
iret
pop
aaa
sbb
xlat
pop
pop
xor
ss
rorb
leave
xor
cltd
and
dec
mov
xchg
nop
adc
push
cli
je
loope
es
add
loopne
arpl
and
hlt
mov
xchg
push
adc
ret
lret
pop
jl
pushf
push
pushf
adc
mov
mov
ret
sbbb
cli
sbb
push
jmp
jp
roll
into
sub
fisttps
cmp
sbb
push
lock
out
jno
in
addr16
push
lret
add
ficompl
pushl
dec
jae
xchg
or
andb
std
sbb
jg
push
jl
add
mov
inc
scas
aaa
cmp
mov
cmp
push
push
int
push
or
sub
mov
cmp
xor
ja
insb
cmpsl
std
mov
push
movsl
push
popf
pop
cld
xor
mov
sbb
fisttpll
jns
test
dec
mov
push
sub
pop
shrb
inc
in
push
push
loope
addl
sub
sbb
push
add
aaa
sub
outsl
popl
xchg
xor
pop
test
out
mov
mov
inc
jmp
cmovl
stos
jo
ljmp
pushw
xchg
lret
es
popf
int3
push
push
daa
lret
movsl
lret
repz
push
arpl
mov
lcall
mov
mov
and
add
jno
into
jmp
popa
loope
daa
inc
jge
add
cmpl
clc
outsb
mov
and
setge
dec
sbb
mov
jecxz
pop
and
dec
push
xor
rcl
into
imul
je
pop
into
push
inc
fcomps
sub
into
imul
mov
es
xchg
sub
loopne
pop
in
daa
pop
lock
enter
or
jle
add
inc
push
adc
ret
test
mov
mov
and
jae
xor
mov
rclb
cltd
repnz
fdivs
lret
cmp
mov
mov
push
push
and
push
scas
or
xchg
xchg
idivb
cmp
insl
andb
xchg
xor
fs
das
fstp
cmp
or
or
sbb
loope
stc
into
jnp
mov
mov
rorb
pop
das
xchg
mov
out
push
jne
xchg
out
out
aad
addl
test
mov
cli
push
xor
sub
sbb
pop
in
popf
push
call
inc
insb
fstl
add
out
insb
roll
js
push
scas
movsl
inc
aas
pop
scas
add
sbb
enter
push
add
mov
fnstsw
lahf
jae
decb
stc
imul
cmp
sti
jns
call
xchg
movsl
pusha
sub
sbb
pop
push
std
sti
push
mov
bound
mov
inc
sbb
push
in
jnp
clc
movsl
sarl
test
jb
jae
sar
sbb
arpl
jne
pop
mov
or
mov
hlt
in
int3
outsb
add
adc
push
inc
int3
iret
clc
popf
fwait
jb
rcll
ja
fldln2
test
jge
lock
and
cmpsl
inc
shrl
test
jo
mov
push
lock
jge
out
mov
sbb
rorb
mov
pop
sub
lods
push
out
xchg
inc
xchg
adc
or
mov
sbb
jecxz
mov
in
iret
cmp
leave
fidivl
flds
lods
ret
sbbb
movsl
push
push
fdivrs
or
push
outsl
push
mov
inc
or
sub
add
cmp
xchg
imul
fldenv
dec
in
sbb
cmp
dec
inc
pop
imul
out
mov
hlt
cmp
test
mov
ret
jne
cmp
test
notl
sbb
not
pop
bnd
jg
mov
aas
push
cwtl
cli
fsub
push
shll
out
inc
cmp
nop
mov
in
inc
nop
ret
jb
orb
jnp
add
jp
jb
mov
repnz
test
cmp
addl
xchg
push
push
add
cld
test
mov
dec
adc
or
sub
add
ficomps
fwait
dec
pop
orl
xor
ljmp
shlb
or
cld
add
in
ljmp
popf
das
push
sub
popf
sub
imul
rorl
movsl
lret
aad
jnp
or
dec
ds
addl
sbb
mov
add
mov
cli
lea
scas
mov
jb
add
outsl
adc
pusha
mov
enter
jbe
ret
movsl
sbb
push
jp
movsl
lret
rol
push
jae,pn
cmc
ja
ds
mov
jb
test
rclb
mov
dec
pop
pop
cs
fistpl
bound
adc
pop
mov
shlb
jae
lds
mov
and
mov
out
lods
adc
ds
movsl
add
scas
jbe
mov
push
stos
testb
scas
xchg
jae
scas
dec
xor
jp
xchg
push
lds
inc
add
mov
cwtl
push
mov
loope
jns
pop
sub
rcrl
ljmp
shll
pop
and
imul
push
inc
movsb
sub
stos
imulb
dec
push
pop
lret
xor
mov
or
inc
iret
inc
orb
addr16
push
cmp
nop
scas
xchg
sti
inc
cmpsb
cs
lret
sar
push
mov
call
mov
lcall
mul
sub
mov
or
sbb
addps
ss
jle
xchg
jns
sub
xor
add
cmp
mov
pusha
stos
add
fnsetpm(287
jl
inc
adc
push
push
roll
repz
dec
add
mov
push
xchg
in
arpl
nop
push
mull
mov
ret
imulb
pop
mov
imul
sbbb
mov
sub
bound
pushf
or
or
jge
xlat
or
lcall
xchg
cmp
ja
daa
jnp
jle
lods
pusha
mov
out
imul
adc
fucomp
lods
jno
cmp
jecxz
pop
ret
push
jge
test
pushf
mov
xlat
mov
ds
mov
jp
stos
jo
loopne
xor
jle
lret
push
and
rcrb
jnp
inc
mov
sub
add
loope
test
sub
mov
addr16
lcall
loop
lret
daa
xchg
outsb
jmp
sub
loope
xchg
dec
mov
mov
or
adc
ret
pop
jl
fsubrs
cli
push
popf
jo
or
push
iret
and
jbe
cmp
adc
xor
iret
mov
sbb
xchg
fmulp
imul
insl
mulb
cmp
jae
dec
popf
mov
sbb
insb
push
ljmp
shll
nop
adc
dec
cmp
cli
div
cld
es
mov
in
sbb
jp
aaa
loop
dec
xor
jb
sahf
xor
lret
sub
in
jl
mov
scas
rorb
mov
addr16
sbb
lods
mov
imul
jae
and
loopne
lods
or
mov
mov
enter
mov
fcoml
push
inc
mov
add
ret
mov
cmpsb
mov
cmc
mov
mov
or
test
shll
in
pop
daa
pop
adc
addb
popf
inc
bound
int3
push
cmp
xor
and
std
in
sub
dec
push
fwait
add
scas
and
ja
js
jmp
dec
sahf
les
mov
rol
sub
jb
mov
jnp
cvtps2pi
or
cs
aad
out
xor
leave
mov
shrb
mov
mov
dec
adc
in
inc
xor
mov
sbb
inc
mov
lret
dec
rclb
or
pop
jecxz
fcomip
outsl
inc
mov
jne
xor
mov
dec
mov
or
lret
xchg
xchg
test
in
jno
push
sbb
adc
sbb
lea
push
cmp
push
ffreep
inc
and
scas
aas
jb
jle
pop
cmp
dec
mov
mov
sbb
sub
in
mov
call
sarb
cltd
mov
sub
push
push
lods
cmp
push
dec
push
dec
lds
xchg
cli
and
push
mov
cs
aad
mov
add
aad
xor
mov
pop
dec
mov
jnp
insl
hlt
dec
xlat
dec
push
sarb
jb
loope
mov
ljmp
mov
push
popf
cmp
pushl
xchg
sbb
je
out
mov
mov
mov
arpl
ds
sarb
xor
pop
cmp
filds
pop
push
pop
cmp
leave
in
pop
xchg
xchg
testl
mov
adc
jns
xchg
in
fwait
cli
ja
out
inc
insl
pop
pop
movsl
inc
adc
add
xor
jge
jb
mov
rep
inc
in
aad
call
out
mov
sbb
xchg
sahf
hlt
pop
out
push
inc
test
pop
data16
stos
cld
je
insl
xlat
sub
sub
xchg
xchg
test
pop
insl
mov
nop
jle
orb
push
push
je
cmpl
out
sbb
popa
repz
inc
jns
test
pop
cmpsl
fs
andb
mov
cmpsb
ret
movsb
repz
jp
push
dec
sbb
jmp
pop
xor
fisubrs
sbb
icebp
pop
sub
xchg
mov
jae
pusha
lea
lcall
adc
fsts
mov
adc
pop
nop
mov
dec
xlat
pop
repz
pop
cwtl
lock
adc
push
push
lock
pusha
jne
or
stos
push
pop
andb
ror
sub
mov
aam
es
in
sbb
fwait
ja
cwtl
mov
or
cld
aaa
jp
sub
or
sbb
out
mov
jp
fldcw
cwtl
xor
out
xchg
out
pmaxsw
and
insl
push
rcrl
jmp
rcrl
int3
push
xchg
in
test
cmp
out
cmpsl
dec
sar
pop
sbb
je
dec
loope
xor
adc
data16
adc
fstpl
jle
pop
cmp
insl
or
push
sahf
sub
pushl
movsb
mov
imul
ljmp
jno
or
dec
push
xor
icebp
out
sub
xchg
inc
jg
movsb
cmp
clc
and
lds
call
gs
sub
pop
and
sbbl
pop
call
rolb
lea
mov
cli
xchg
push
hlt
dec
add
lret
lds
and
aas
xchg
insb
push
dec
popf
in
aaa
test
hlt
adc
adc
push
outsb
and
arpl
aaa
fs
ds
xchg
xchg
fwait
in
enter
jmp
lds
mov
mov
int
adc
fmul
or
arpl
or
inc
xchg
jae
cmc
das
into
test
add
sub
pop
leave
cmpsb
hlt
inc
in
in
mov
cltd
loopne
enter
xchg
rolb
aad
les
shrb
mov
xchg
push
push
stos
adc
repz
and
pop
mov
xchg
mov
outsl
dec
mov
adc
sbb
and
fnstcw
out
rolb
dec
xor
test
inc
in
cltd
mov
call
sub
mov
mov
xchg
andb
mov
enter
adc
add
mov
adc
int
mov
ss
sub
jbe
sub
xor
xor
rolb
mov
jnp
idivl
sahf
scas
push
mov
adcl
leave
inc
dec
mov
rcll
jnp
jnp
xor
adc
fadds
xlat
mov
out
xlat
mov
nop
fbstp
fwait
inc
push
and
test
jnp
frstor
cmp
das
lods
ret
push
lock
fisttpl
lea
rorl
dec
xchg
push
cmp
sbb
popf
std
imull
pop
mov
xor
xor
gs
and
mov
lea
daa
scas
sbb
sbb
fcoml
add
xor
mov
pop
mov
adc
sub
inc
xor
inc
movsl
out
orl
decl
das
clc
push
test
out
sub
bound
cmp
push
scas
dec
ljmp
std
mov
js
dec
cs
cld
daa
idivl
cmp
dec
sbb
leave
cmpb
fistl
lcall
imul
repnz
scas
fwait
adc
imul
sbb
cmp
lret
popa
test
ss
inc
rcrb
or
xchg
adc
outsl
stos
lcall
mov
and
rol
inc
rol
jnp
mov
call
or
or
sahf
dec
xor
icebp
sbb
cmpsl
and
int3
and
in
fistl
stc
push
adc
scas
xor
push
sahf
lods
mov
lret
gs
scas
pop
xor
pop
pop
jne
daa
and
loopne
stc
data16
insl
mov
jnp
std
push
cwtl
cmpsb
mov
sbb
cmp
cs
inc
je
adc
push
cmp
adc
cmc
test
inc
dec
les
rcr
inc
add
sbb
jecxz
enter
testl
cmp
test
xchg
stos
mov
and
pop
or
sub
sub
inc
mov
pop
push
push
push
hlt
inc
mov
sbb
movsl
mov
out
xrelease
hlt
cltd
mov
leave
mov
pop
push
sahf
lods
cwtl
jge
andb
xor
fsubrp
add
or
in
lea
testl
loope
rolb
notl
and
rcr
jp
xchg
jb
sbb
sbb
jecxz
jp
idivl
inc
imul
cmpb
outsl
pop
push
jl
int
cmp
dec
xchg
xchg
mov
inc
or
xchg
adc
mov
addr16
xchg
xchg
test
stos
les
pop
fwait
jge
fistps
ja
pop
adc
pop
lahf
push
adc
ljmp
shrb
push
test
mov
push
pop
es
jl
ja
or
add
imul
sti
je
sahf
and
lret
inc
sub
sti
mov
int3
scas
fidivl
dec
lods
pop
and
nop
ljmp
test
and
paddusw
in
imul
push
push
ljmp
inc
nop
add
add
test
das
and
enter
sub
jl
sub
add
popf
push
sub
xchg
dec
insl
mov
inc
mov
sahf
shlb
in
mov
sub
sub
xor
shl
and
ds
mov
inc
mov
jns
push
xchg
jae
out
jmp
adc
lea
jnp
sub
adc
sti
or
xchg
iret
stc
loop
cld
loope
aas
aad
jge
sub
lahf
jle
movsl
and
mov
mov
ljmp
icebp
aas
hlt
inc
xor
rcrl
fnstcw
dec
mov
repnz
out
in
stos
sub
inc
mov
mov
loopne
cld
xor
imul
jl
scas
in
enter
mov
cld
or
in
stc
sub
or
movsb
mov
inc
pop
sti
popa
fwait
stos
popf
ret
int3
and
mov
shlb
jo
data16
push
in
and
mov
xor
push
clc
mov
push
test
push
ss
jp
pop
dec
mov
mov
fwait
jl
cmc
mov
mov
jns
fsubrs
not
js
scas
lods
or
mov
sub
fsubrs
repnz
add
in
sti
add
lods
test
nop
mov
mov
push
ljmp
cmc
inc
jg
test
inc
push
push
orb
in
inc
lds
dec
js
insl
sahf
add
dec
inc
add
mov
pusha
sbb
cwtl
repnz
pop
imul
loop
mov
and
pop
nop
add
loope
or
insl
sbb
or
clc
mov
lret
mov
call
popf
es
add
pavgb
mov
iret
adc
sarb
jle
hlt
iret
cmp
mov
xchg
or
movsb
int3
cli
leave
lret
scas
or
inc
mov
fildll
mov
and
fs
mov
in
pop
or
sbb
in
inc
popa
mov
fcmovnbe
jno
clc
les
subl
mov
outsb
insl
push
js
xchg
xchg
cmp
popf
inc
dec
mov
lret
and
mov
sub
jb
jmp
test
loope
jmp
cs
repnz
ret
call
int3
jmp
dec
pushf
xor
imul
mov
mov
cs
add
aam
xchg
insl
fs
cmp
pop
in
jmp
jo
nop
ret
and
jp
pushf
xchg
les
sub
dec
push
and
addr16
outsb
mov
xchg
jecxz
pop
mov
cmpsl
cmp
xlat
xlat
movsl
mov
outsb
ret
jp
xor
jmp
mov
mov
push
scas
xchg
mov
xor
fwait
sub
mov
repnz
or
add
ret
out
and
xchg
lret
mov
push
cmp
or
test
push
push
mov
sub
jne
dec
mov
xor
subb
pop
ljmp
xor
loope
inc
xor
rcrb
or
push
push
add
in
outsl
push
bound
mov
dec
xchg
movsb
and
sbb
adc
xor
push
mov
je
sub
jge
jle
jmp
sbb
ja
and
stos
loope
jle
add
inc
sti
insl
push
pop
jo
mov
stc
cld
dec
jbe
mov
fwait
add
or
mov
repnz
jp
pop
xchg
cmpsb
xchg
dec
jne
loop
rclb
arpl
leave
adc
add
nop
mov
sbb
ja
pop
inc
push
xchg
data16
sub
arpl
xor
jbe
sub
jnp,pn
or
into
pop
add
add
xchg
pop
push
xchg
mov
subb
bound
and
pop
scas
clc
int
cwtl
fsubrs
sahf
mov
ret
mov
xchg
push
icebp
dec
inc
jnp
xlat
xor
lock
inc
fistpl
xchg
insb
mov
out
push
add
xchg
stos
inc
cli
aam
mov
add
mov
imul
mov
jge
data16
leave
mov
jecxz
jnp
adc
xchg
sub
inc
sti
loope
push
cs
fwait
dec
daa
shrb
ljmp
cmp
mov
fstpl
stos
aas
adc
testb
mov
pop
xchg
rorb
aas
hlt
xchg
lret
xchg
mov
mov
int
xor
dec
push
insl
push
jb
inc
xchg
pop
sbb
stos
sbb
dec
jle
mov
icebp
push
lret
mov
lock
mov
sbb
out
dec
or
adc
pop
lahf
bound
repnz
lret
aas
push
cmpb
push
sahf
ret
scas
push
fmul
iret
mov
cs
mov
or
inc
sbb
cwtl
scas
adc
adc
adc
or
mov
ljmp
dec
sub
fimull
dec
mov
mov
leave
jbe
lock
xor
int
xor
bnd
mov
pop
pop
dec
mov
es
mov
gs
test
mov
out
sbbl
ret
out
int3
loop
sub
adc
xchg
sbbb
mov
and
xchg
sub
inc
adc
pop
pop
cvtps2pd
cmp
jle
insb
testb
mov
cmp
popa
mov
jecxz
xchg
das
int3
push
lea
mov
jle
in
and
ljmp
sbb
js
push
movsl
cmp
dec
jno
mov
lods
mov
or
jbe
ret
pop
rorl
cld
shr
jp
stc
gs
sti
jmp
mov
xor
pop
sub
xor
sbbl
stc
dec
sbbb
hlt
sbb
xchg
ret
adc
fldz
and
sbbb
cltd
insb
sub
lea
pop
push
inc
fcomp
rclb
jae
repnz
and
sti
les
dec
es
popf
sbb
iret
rclb
call
arpl
cltd
or
adc
scas
lahf
cwtl
push
jp
push
sub
or
sub
inc
cltd
movsl
adc
cmp
icebp
xchg
sub
and
mov
in
push
jno
xchg
in
ret
popa
nop
inc
push
ds
cli
cwtl
pop
cli
push
xor
cld
add
sbb
je
enter
mov
ret
fdivrl
xor
sbb
jl
push
mov
aam
dec
push
jl
xchg
xchg
test
fsubs
push
ljmp
xchg
push
daa
popa
dec
pushf
xorb
jl
les
aas
cmp
outsl
stc
mov
imul
add
mov
loope
or
push
aam
or
mov
cli
les
inc
icebp
inc
mov
dec
int
xchg
push
sahf
or
jge
xchg
sarb
aam
sub
clc
lret
push
mov
cmpsl
mov
cmp
rol
lcall
mov
movsl
aad
clc
mov
shlb
cmp
mov
mov
pop
pusha
dec
add
xchg
sahf
lcall
cmc
loope
xor
loopne
or
leave
fcoml
mov
mov
mov
shll
gs
ds
cs
sub
pop
inc
pop
fdivr
and
add
mov
out
fdivp
inc
jecxz
jb
hlt
add
cmpsb
in
imul
into
bound
push
pop
mov
add
insw
and
and
jmp
xchg
adc
addr16
repnz
mov
pop
adc
pop
mov
rcrb
popa
cld
mov
mov
pop
imul
cmp
out
cmp
cli
sub
or
jnp
jge
mov
das
xlat
jno
shrl
push
pop
stc
adc
and
fwait
push
test
outsl
sub
mov
sub
mov
sbb
mov
leave
jno
push
shll
out
gs
mov
enter
lret
fwait
jmp
lds
out
sbb
ffree
xor
repz
push
and
incb
movsb
sub
dec
mov
push
push
es
pushf
add
insl
pop
sub
shr
push
loop
into
dec
adc
out
in
aad
mov
push
add
adc
sub
cs
test
subb
mov
jle
popf
jbe
out
aad
cmp
les
sbb
bound
fists
push
adc
hlt
xchg
ret
xlat
or
adc
insl
cld
psubb
mull
inc
cmp
pusha
inc
pop
or
in
and
int
push
jae
pop
xor
popa
xchg
ja
sti
fimull
xchg
xchg
pop
push
cwtl
dec
pop
mulps
mov
daa
leave
push
outsb
xchg
xchg
xchg
pop
cmpsl
bound
lret
out
out
sbb
adc
ffree
jae
in
jecxz
dec
test
push
push
fld
mov
fmuls
pop
scas
lods
insb
fadds
gs
add
adc
jecxz
jae
dec
stos
push
mov
push
pop
or
jmp
add
cmp
fucomi
ds
add
dec
aas
mov
and
inc
or
int3
cwtl
xchg
cwtl
xor
lret
fbstp
call
insl
xor
cmp
mov
rcll
add
mov
arpl
call
mov
fidivrl
mov
cmpl
sub
adc
jmp
add
dec
mull
aaa
jb
inc
out
in
je
cmpsb
and
ds
stos
adc
subb
xor
shlb
insb
inc
sahf
add
sub
push
mov
inc
push
mov
std
cmp
pop
ljmp
fs
subb
xchg
je
fdiv
mov
out
and
jo
push
shrb
pop
sub
add
jle
jns
jmp
out
sub
outsb
mov
inc
pop
insl
out
daa
mov
call
pushf
pop
xor
mov
sub
popf
sbb
cltd
add
lea
jo
or
lret
inc
dec
rcrl
push
sti
jae
xor
or
cmpsl
pusha
fldcw
pop
addl
xchg
or
sahf
jp
mov
xor
clc
dec
add
jle
pop
and
mov
xchg
pop
and
and
inc
add
mov
loopne
push
in
rol
push
js
in
mov
les
dec
sbb
lods
xor
fnsave
shr
ss
loop
mov
dec
inc
pop
out
pop
or
out
mov
aas
orb
bound
or
in
mov
inc
add
xor
push
scas
add
pop
in
or
lret
movsb
imul
cmc
xchg
jl
mov
dec
jge
xor
popf
push
cmc
subb
out
dec
dec
lcall
in
cmpsb
dec
in
sub
or
adc
mov
sahf
icebp
scas
sub
enter
sbbl
cmp
jg
mov
bound
cwtl
imul
adc
shr
dec
int
shll
add
mov
js
jecxz
adc
in
leave
jl
xor
add
push
int3
and
cmp
and
mov
test
out
inc
and
mov
fldt
xor
pop
push
sti
into
in
fcom
imul
cli
mov
and
and
pop
sub
test
fldl
testl
daa
rclb
int3
imul
add
int
outsl
dec
and
or
fcmovne
in
xchg
xchg
cmp
push
int
ret
hlt
xor
xchg
mov
mov
xor
cltd
push
mov
stc
or
test
dec
adc
sbb
les
sub
outsl
mov
adc
lcall
lea
inc
cmp
std
adc
mov
in
pushf
cmpsl
jo
mov
movsb
dec
test
dec
lods
xor
idiv
int3
xor
popf
fidivrs
ror
fbld
addl
imul
xchg
in
test
shll
pop
sub
inc
sbb
cmpsb
jb
adc
mov
jmp
fldenv
andl
in
jo
mov
test
push
lret
call
and
es
mov
fstl
xchg
or
popf
fistpll
clc
imul
lods
imul
cwtl
aam
enter
pushaw
lahf
add
jae
sub
stos
fsubp
ds
mov
ss
push
mov
ljmp
shrb
into
test
fwait
jmp
leave
lods
movsb
inc
mov
adc
adc
flds
xor
fdivrp
push
and
lcall
jne
lds
in
ret
mov
push
xchg
stos
sti
push
imul
jp
pop
sub
adc
mov
inc
in
lods
outsb
insl
inc
mov
add
fcomps
fcoml
add
add
inc
cmpsb
popa
shrb
pop
mov
cwtl
aam
fwait
push
dec
ja
xchg
pusha
mov
mov
push
jmp
add
push
push
sti
and
lods
addb
test
sbb
pop
cmp
xor
fisubrl
ret
mov
out
jge
and
rcll
xchg
add
jl
sub
sub
pop
lds
cmp
lret
or
std
and
push
cld
and
push
js
or
pop
xor
mov
sbb
icebp
iret
sub
cmp
push
incb
inc
jbe
sti
fsubl
out
sbb
stc
dec
jbe
mov
inc
xor
mov
aad
in
mov
add
lods
mov
vpsubq
lea
adc
jbe
aas
andb
mov
sub
hlt
leave
push
cmp
nop
scas
mov
aas
mov
mov
sbb
fildll
jge
ret
inc
push
lret
nop
adc
pop
shlb
negb
lcall
orl
aad
dec
sub
sub
xor
aaa
lods
jle
and
cmpsl
xchg
js
mov
mov
icebp
xchg
jg
sbb
aas
hlt
scas
nop
inc
lcall
inc
lods
jp
ss
sub
dec
jnp
mov
fnstcw
jge
into
push
add
movsl
cltd
ds
inc
lcall
or
loopne
jno
xchg
mov
xchg
and
xor
sbb
rcll
push
and
mul
jmp
mov
mov
in
sbb
lock
mov
sub
mov
rolb
rep
xor
lret
lock
inc
lods
adc
sti
xor
mov
fs
dec
add
insl
mov
enter
push
inc
dec
sub
adc
popa
out
and
inc
rorl
mulb
adc
xor
push
xor
aam
pop
mov
lret
dec
push
out
jno
dec
pop
fld
testb
nop
mov
orl
mov
jp
adc
sub
push
add
gs
dec
je
sarl
pop
inc
scas
xor
call
dec
aad
outsb
sub
bound
mov
and
pop
and
dec
dec
push
mov
push
or
sbb
mov
push
dec
aaa
xor
std
sbb
or
xlat
mov
inc
mov
movsb
subb
addl
pop
mov
adc
mov
inc
dec
jge
inc
movsl
lds
fidivrl
cld
scas
lds
test
inc
xor
cmp
nop
jne
push
adc
add
jnp
dec
xchg
xor
out
mov
imul
jae
ljmp
in
push
mov
aas
pop
call
loop
sbb
dec
sti
iret
xor
add
lock
sub
int
shll
jns
mov
sbb
inc
inc
inc
fisttpll
rorb
cld
rclb
stc
adc
ret
push
mov
adc
shlb
fmull
dec
mov
mov
les
mov
add
push
int3
mov
mov
test
or
push
int3
and
into
enter
push
mov
mov
repnz
mov
lret
pop
sub
fsub
pop
movsb
mov
daa
mov
xlat
lds
stc
inc
in
mov
inc
sub
ja
and
enter
je
out
inc
mov
lcall
jle
stos
into
or
fnstsw
popf
imul
shrl
mov
mov
mov
out
or
mov
arpl
call
jbe
mov
loop
adcl
inc
movb
rcrl
push
inc
jb
add
inc
bound
push
xlat
jmp
push
or
inc
mov
push
movsl
lret
cwtl
sub
and
shlb
insb
leave
xchg
mov
loopne
mov
loope
or
loope
setge
pusha
cltd
fcomps
xlat
movsl
daa
sub
cmp
mov
jecxz
mov
jg
loopne
mov
insl
ds
icebp
pop
xchg
jnp
adc
shll
fs
fmuls
mov
xor
push
jmp
fisubs
arpl
subb
fsubl
jae
push
mov
sbb
ljmp
mov
push
fistpl
or
xchg
out
add
js
dec
js
in
lahf
or
imul
xor
stc
sbb
pop
or
je
add
dec
rcl
xor
aas
ljmp
xchg
arpl
std
out
loop
das
mov
push
adc
adc
jg
outsl
cld
lret
test
ja
std
sbbl
or
adc
pop
push
cmp
sbb
fidivl
std
xchg
pop
or
pop
cmp
out
adc
addr16
into
sub
pop
mov
pop
mov
enter
or
inc
pop
cltd
xchg
stos
out
loope
xor
or
adc
push
out
inc
pop
aas
sub
mov
inc
xchg
jns
ss
out
mov
fidivl
int
mov
mov
jle
sub
and
int3
sbb
rorb
pop
imul
aad
leave
loop
mov
or
stos
adc
sub
adc
mov
xlat
pop
mov
gs
aaa
scas
test
lret
jl
dec
in
das
lods
push
test
cmp
pop
xchg
or
nop
stos
mov
xchg
loopne
ds
les
adc
mov
add
inc
pushf
and
xchg
stos
cmpsl
mov
xor
ds
sarb
insb
sarb
push
cmp
inc
enter
ret
lret
cwtl
cltd
inc
mov
aas
pushf
push
cli
sub
jno
dec
or
test
dec
sbbl
insl
add
in
mov
dec
mov
and
sbb
mov
push
jge
hlt
jl
xlat
jb
clc
mov
xor
sbb
jb
pusha
adc
or
leave
fmuls
fdiv
sub
xor
in
mov
jl
sbb
movsb
pop
add
sti
or
fwait
leave
jle
pushf
xlat
sub
cmp
in
or
ret
out
xchg
pop
inc
fsubrs
and
push
loopne
jnp
push
or
int
dec
sub
cli
arpl
adc
mov
push
fiadds
roll
fs
pop
ljmp
movsl
mov
push
sub
mov
idivb
aad
dec
fs
cs
jmp
mov
aas
push
test
and
sub
scas
xor
clc
js
mov
std
test
data16
scas
inc
hlt
sti
or
xlat
dec
repnz
xor
call
and
or
jge
ja
pop
out
sbb
or
jnp
or
scas
bound
mov
push
xor
je
in
jmp
out
xchg
rorb
shlb
scas
adc
xchg
cmp
mov
push
xor
xchg
dec
xchg
xlat
fldt
aad
ds
sti
mov
xchg
jo
out
jle
and
test
scas
push
cmp
scas
xchg
lahf
int
adc
add
in
daa
shrl
xchg
dec
js
push
test
das
mov
fs
mov
pop
ljmp
lahf
push
or
jmp
cld
insl
das
mov
xchg
out
or
mov
adc
sbb
lods
ret
push
xlat
cwtl
cmpsb
mov
jg
push
int
xchg
and
shl
mov
xor
mov
inc
in
pop
pop
mov
mov
mov
or
or
dec
les
mov
xchg
in
jp
lret
mov
fstpt
enterw
dec
hlt
fsts
fisubl
mov
cmp
mov
inc
jl
bnd
mov
loopne
jne
in
rclb
add
lahf
bts
into
mov
hlt
mov
mov
and
mov
movsl
lds
int
inc
mov
inc
loop
inc
jmp
out
cmp
arpl
xchg
xor
add
insl
mov
stos
cli
out
leave
popa
popa
inc
cld
sbb
adc
mov
pop
enter
or
test
stc
fimull
inc
inc
jmp
addl
aad
adc
call
mov
fwait
insb
jbe
shlb
lret
pop
jnp
push
pop
xor
mov
mov
sbb
pop
adc
into
ss
scas
or
les
xor
inc
mov
adc
push
fdivs
mov
lcall
and
nop
inc
ss
out
imul
jae
push
fs
inc
xchg
push
outsb
aaa
enter
inc
dec
inc
sbb
fmuls
jns
mov
repz
pop
stos
pop
in
push
addl
add
lods
or
inc
inc
jbe
mov
inc
push
js
xchg
pop
nop
loop
adc
inc
and
into
add
jp
lds
dec
ret
push
into
call
popa
xor
push
hlt
xor
pop
and
xor
lret
aam
xor
sbb
aaa
sti
movsl
cld
xchg
imul
ret
pop
sub
fwait
jl
mov
test
add
mov
mov
jl
dec
push
ljmp
sbb
sbb
mov
cmp
add
xchg
push
dec
loop
pop
clc
fiaddl
xchg
and
cmp
jecxz
fcmovnbe
push
test
sub
popa
add
pusha
hlt
add
xchg
and
addb
orl
cmp
lods
repz
cmp
sbb
sub
mov
or
aad
xlat
push
iret
jmp
insb
xchg
pop
cmpl
inc
and
leave
sbb
lret
mov
and
or
jmp
jmp
add
add
stos
dec
push
popa
jle
sbb
jno
mov
into
jo
sub
addr16
xchg
stos
rcrb
loopne
psrlw
insl
lcall
fisubl
cltd
cwtl
pop
out
sbb
hlt
outsl
inc
push
gs
stos
xor
enter
outsb
iret
shl
mov
sarl
push
loop
test
js
test
mov
fistpl
and
mov
xchg
popf
mov
inc
mov
dec
or
jge
int
and
xchg
jb
int
push
sub
aas
cmp
inc
out
rclb
rcrb
ficomps
adc
lock
fstps
in
addr16
jmp
cwtl
pop
daa
daa
push
jnp
mov
subb
xlat
cmp
js
adc
mov
aaa
lods
or
mov
popf
mov
dec
and
sub
xchg
mov
xor
decb
test
pop
dec
cwtl
add
mov
jmp
bound
push
iret
jne
mov
push
fidivrl
or
stos
lea
push
das
imull
lahf
inc
test
dec
mov
xor
fists
add
arpl
arpl
pop
je
sub
pop
inc
leave
in
mov
and
in
andb
mov
test
in
fmull
lds
sub
ds
sbb
std
mov
mov
dec
adc
lods
xchg
mov
add
or
and
stos
flds
jns
mov
xor
jbe
xor
repz
rcrb
aaa
and
xor
fiadds
sbb
js
and
in
xor
jecxz
jl
jl
ss
movl
add
pop
fimuls
dec
fisubrl
dec
inc
andl
pop
imul
mov
in
aam
fwait
dec
adc
adc
push
lahf
outsb
lret
mov
subb
add
faddl
in
aad
cmp
or
mov
loopne
mov
inc
loope
mov
mov
incb
mov
lea
loop
sub
sub
mov
fdiv
adc
xor
or
int3
xchg
sub
pop
mov
dec
int3
in
enter
mov
push
sbb
loope
xchg
cld
mov
dec
or
in
xor
addl
test
xchg
add
mov
enter
inc
cli
sub
mov
sub
dec
mov
out
mov
mov
int
lahf
push
dec
jge
mov
clc
push
scas
xchg
stos
movsb
jg
out
push
dec
ret
loope
sbb
push
loop
es
pop
fists
loop
std
repz
cld
lods
mov
sbb
nop
or
cmc
ds
xchg
sbb
es
out
jge
xchg
push
mov
push
aam
mov
xor
dec
test
rclb
daa
bnd
mov
push
rsm
test
or
jns
push
rcll
loope
lea
hlt
jae
cmp
dec
enter
sub
jb
cwtl
sub
push
and
cltd
test
push
jge
cmc
dec
dec
pop
scas
pusha
jl
push
enter
scas
movsb
push
fwait
inc
inc
lcall
pop
sub
lea
jns
sub
rcl
insb
push
jecxz
add
insl
fsts
loope
jmp
inc
pushf
sub
sahf
sahf
add
sub
and
sbb
test
daa
les
inc
lret
fcompl
sub
stos
mov
js
movsb
nop
std
cltd
aaa
std
cmp
sub
mov
sub
or
lcall
out
or
in
cmp
jb
jnp
push
xor
inc
cmp
imul
and
test
adc
loope
sbb
mov
xchg
and
das
mov
aaa
pop
jbe
clc
push
jno
inc
xchg
inc
push
pop
movsl
pushf
adc
mov
fnstenv
xor
mov
divl
enter
sbb
mov
dec
aas
fwait
int3
and
in
pop
test
mov
nop
dec
add
jne
push
mov
cmp
pusha
push
xchg
jl
daa
pop
adc
mov
bound
dec
nop
insl
sbb
cmp
add
insb
inc
xchg
aaa
xchg
or
dec
xor
lock
cmp
jbe
mov
rcll
mov
dec
xchg
mov
rorl
push
adc
ret
pop
nop
pop
stc
repnz
xlat
ds
or
push
fimuls
or
push
shll
sbb
mov
stos
cmp
shlb
pop
in
add
sub
and
xlat
mov
mov
ffree
cmp
sarb
out
shll
push
mov
jl
shlb
or
roll
sub
ret
out
jae,pt
cwtl
pop
aad
fcmovne
mov
movsl
xchg
xor
cmp
cmp
inc
sbb
mov
xor
cmp
out
mov
sbb
push
xchg
pop
dec
aas
repz
jno
rolb
fsubs
pop
and
add
sbb
sahf
shlb
stos
in
cmp
scas
pop
adc
gs
jns
mov
cmp
fwait
stos
dec
mov
test
push
cli
inc
idiv
sbb
mov
lret
fcomip
and
pop
arpl
dec
push
xchg
xor
push
mov
xor
mov
add
push
sub
leave
lahf
mov
mov
add
sar
pop
adc
xchg
aaa
add
jae
mov
data16
mov
scas
fwait
jae
rolb
adcb
pushf
repz
or
int
mov
mov
frstor
push
repz
cmpsb
xor
sti
pop
pushl
jno
rcrb
movsl
dec
std
lcall
imul
mov
add
inc
mov
or
sahf
sbb
mov
loop
imul
sbb
es
push
hlt
orl
repnz
repnz
adc
ja
loope
stc
repz
ret
test
sub
pop
xchg
imul
mov
or
inc
adc
in
push
cmp
mov
popa
dec
sbb
mov
addr16
mov
fsub
loope
pop
dec
xor
mov
iret
mov
aad
push
sbb
popf
sbb
xchg
pop
mov
sbb
xor
sub
push
xor
push
mov
stos
push
pop
xchg
movsl
dec
notb
mov
adc
outsl
cld
fists
ljmp
mov
lret
and
mov
push
rcll
pusha
dec
dec
jge
in
in
mov
out
loope
pop
scas
nop
cmp
jmp
rolb
das
inc
sub
test
aad
fisttps
adc
loop
jmp
dec
fstps
mov
test
adc
fisttpl
mov
and
test
pop
xor
jmp
test
pusha
push
fsts
cmc
clc
test
daa
sahf
push
pop
xchg
push
mov
add
insl
outsl
jmp
cmpsl
xlat
xchg
test
jbe
mov
mov
inc
mov
rorb
mov
push
sub
loope
outsl
mov
cli
rcl
xlat
cmpsl
jl
cltd
cmp
or
jbe
mov
add
leave
cwtl
xchg
arpl
push
enter
xlat
xchg
xor
jbe
push
icebp
sbb
cmp
add
fxch
fs
cmpsb
cmpsb
pcmpeqb
xchg
shrl
jae
mov
divl
imul
js
mov
clc
insb
popa
and
add
fisttpl
lods
cmp
aad
fwait
inc
pop
add
sti
notb
insl
push
cs
decb
xchg
in
inc
pushf
mov
pop
xchg
push
cmpsb
gs
mull
aas
pop
adc
iret
or
mov
push
xor
popf
mov
arpl
shrb
ljmp
rorl
int3
xor
cmp
imulb
loop
cmp
adc
pop
cs
or
fwait
mov
pushf
aas
cmp
rcll
sarl
pop
mov
and
in
mov
daa
fdivs
xor
cs
adc
sub
sbb
insl
sub
imul
or
push
jmp
or
in
cmpsb
lds
std
sbb
mov
scas
ror
in
sub
mov
xchg
mov
out
dec
mov
jo
fsub
jne
cmp
cltd
add
std
sbb
aas
ss
jecxz
jae
nop
push
movsl
xor
pop
dec
pop
loop
sub
xchg
pop
lret
test
data16
mov
test
mov
inc
pop
xchg
mov
pop
and
fisubrs
aas
sbb
xor
cld
insb
jle
insl
mov
cs
adc
mov
sub
dec
mov
push
dec
or
movl
aam
imul
jnp
aad
push
add
add
mov
mov
iret
mov
fldl
mov
imul
push
leave
nop
test
lea
aad
push
out
hlt
sbb
ret
or
jns
pop
push
fwait
mov
iret
mov
aad
jns
mov
adc
testl
js
cmp
enter
adc
xchg
adc
aas
inc
ret
into
mov
and
dec
pop
insl
pop
test
popa
addr16
adc
mov
fwait
repnz
xchg
es
pop
lds
pop
aam
sbb
pop
lds
popa
add
cmc
arpl
mov
xor
pop
cli
arpl
test
test
sub
mov
or
js
push
lret
repz
dec
push
sub
jae
in
or
insl
xchg
pop
mov
push
jno
jo
xchg
xor
inc
cltd
pop
push
ljmp
repz
stos
rcrl
xor
je
data16
adc
sub
arpl
scas
mov
fcoml
in
fcoms
xchg
cld
push
xor
ret
sub
or
fiadds
mov
jno
outsb
jbe
fidivs
xor
int3
pop
jno
push
aas
or
pop
arpl
add
out
sub
mov
jns
or
sbb
pop
dec
xchg
jb
bound
out
mov
lock
push
rol
repnz
jmp
sub
xchg
jecxz
shll
push
imul
push
add
sti
mov
aas
out
and
adc
push
push
add
sbb
pop
out
data16
mov
mov
int3
fnstcw
xor
popf
mov
xlat
sbb
mov
push
cmp
mov
iret
arpl
xor
push
xchg
les
testl
fsubrl
and
jge
pop
jno
xorb
sub
mov
and
aas
in
stos
mov
adc
push
add
sbb
sbb
mov
adc
xor
mov
and
cmp
fcoml
dec
xchg
imul
mov
data16
in
jg
xchg
mov
jae
movsl
pop
lea
stc
and
test
lea
inc
or
or
repnz
imul
xchg
xchg
sarl
or
adc
dec
in
add
sub
imul
sbb
xchg
cmp
das
shlb
jle
out
movsl
sbb
call
aas
shrl
cli
pop
stos
loopne
xchg
push
mov
sbb
lahf
icebp
push
cmpsl
or
or
xchg
mov
test
lcall
iret
ds
cld
sub
cs
dec
sbb
xchg
inc
ds
inc
add
inc
dec
mov
xchg
mov
dec
pop
dec
fcoml
cs
jb
jb
ja
adc
add
xlat
push
ljmp
jne
xchg
or
lahf
call
pop
adc
mov
push
sbb
fadds
xchg
sbb
out
loope
cmp
add
push
mov
dec
pop
ja
fcomps
push
bound
shrb
xor
pop
movsb
jne
or
cmp
dec
loop
daa
ljmp
test
pusha
out
fcompl
lahf
xor
cmpsb
not
orb
popf
mov
into
test
stc
sbb
mov
div
mov
xchg
add
shrl
push
or
pop
or
jg
cmp
bnd
jecxz
pop
movsb
orl
ljmp
je
mov
hlt
psadbw
loope
arpl
push
jl
xchg
and
fstpl
iret
mov
call
pop
out
js
mov
and
or
test
es
push
pop
jae
mov
push
pop
test
clc
xor
sbb
mull
mov
je
addl
or
fidivrl
cmp
je
fsubr
inc
pop
fxch
mov
push
popa
out
sub
sbb
cmp
aas
xchg
mov
es
shrb
add
mov
into
ret
jno
ljmp
xor
aad
repz
dec
sbb
cmpsb
pop
push
lods
add
fiadds
out
mov
adc
adc
mov
xchg
sbb
jne
lock
rcl
mov
jb
and
pop
xchg
test
dec
mov
mov
repz
rcr
sub
clc
cli
xor
testb
test
mov
js
sbb
mov
add
and
jmp
cmpsb
repnz
je
xor
mov
pop
dec
adc
fiadds
dec
cmp
inc
aam
pop
inc
fwait
jp
mov
jne
scas
leave
out
cmp
dec
cld
add
pop
inc
sbb
test
scas
mov
aas
scas
sbb
adc
xchg
or
fcoms
rcl
cli
mov
inc
sub
xchg
sbb
jbe
imul
jle
xlat
lods
in
icebp
lahf
out
and
jbe
daa
cltd
jl
pop
pop
add
push
sbb
inc
cmp
mov
outsb
enter
into
adc
jnp
mov
dec
xchg
mov
and
dec
xor
pop
cmp
clc
xchg
pop
pop
push
sbb
repnz
decb
mov
test
imul
pop
mov
adc
test
rcl
movsl
ljmp
and
pop
dec
jp
xchg
lods
shl
lahf
idivb
pop
xor
mov
pop
or
test
add
jno
loope
loop
bound
iret
and
mov
loop
cwtl
shr
pop
iret
stos
mov
inc
scas
cs
stos
or
sbb
jmp
test
daa
test
sbb
push
fdivs
fwait
rcrb
mov
dec
pop
fdivp
xchg
cltd
leave
hlt
mull
dec
dec
dec
cmc
sbb
push
lret
adc
dec
xor
das
out
pop
in
lret
add
cs
dec
repz
add
int3
mov
incb
dec
test
inc
jg
cmc
mov
out
and
out
pop
ss
jmp
stc
pop
rcr
popa
sub
in
or
faddl
lock
add
xor
inc
loope
sbb
stc
pop
pop
or
es
testb
out
xor
jbe
rolb
lds
push
rorl
cmpsl
stos
jg
xchg
add
fdivrl
gs
cmp
or
jmp
nop
dec
add
in
and
enter
push
mov
in
lods
outsb
mov
jb
iret
pusha
pushf
mov
dec
scas
or
pop
push
notl
int3
shlb
rcr
mov
sahf
dec
adc
fdivrp
mov
inc
icebp
mov
mov
cmpl
xlat
cmp
in
call
xchg
cmp
aam
pop
add
shrb
sub
jae
or
push
mov
mov
stc
test
mov
pop
xor
cmp
pop
sub
in
test
fstps
lret
cmpsl
push
jmp
push
daa
dec
daa
sub
sub
mov
hlt
fstps
adc
jg
adc
jne
mov
xor
xchg
dec
dec
fcoml
test
xchg
dec
push
push
xchg
ret
inc
jle
lock
ja
jecxz
dec
push
lods
ret
add
sub
mov
aas
mov
cmc
cs
js
push
cmpsl
fsubs
rolb
xchg
fs
cli
out
pop
adc
sbb
ds
mov
aas
subl
xchg
shr
sbb
jl
cmp
xchg
stc
mov
cmpsb
lret
xchg
repnz
rol
dec
stos
out
pop
loope
roll
push
adc
jne
insl
pop
mov
dec
int
das
push
call
frstor
dec
cmpsb
mov
sbb
clc
imul
sahf
ljmp
mov
and
insb
nop
test
jge
ja
ret
sub
mov
xor
mov
cmpsl
or
jae
in
stc
inc
add
fs
fsubrl
jle
scas
aaa
xor
jle
mov
xor
scas
ss
pop
insb
je
jns
push
pop
add
jecxz
call
push
or
mov
stos
dec
jne
popf
mov
jp
insl
xor
out
mov
insl
dec
push
push
dec
lods
lahf
pop
aam
dec
lahf
sbb
ss
pop
pop
in
loope
sbb
dec
loop
push
ja
lahf
adc
call
pop
push
fnsave
and
ljmp
mov
filds
fmull
jg
int3
inc
into
out
movsb
jb
loop
mov
test
dec
bound
jecxz
push
fcmovne
shll
outsb
push
mov
cmpsb
jbe
push
aam
or
iret
or
out
mov
mov
ljmp
sub
inc
jge
and
icebp
jmp
adc
or
inc
jmp
mov
inc
push
in
sub
xchg
mov
inc
sarl
subl
dec
mov
lock
xchg
aad
or
xchg
dec
push
or
cmp
adc
int3
sub
movsl
xchg
stos
stos
int3
xchg
jne
repnz
or
sub
cwtl
and
imul
into
pop
or
into
push
addl
das
mov
mov
mov
loopne
xchg
inc
dec
mov
mov
xchg
push
es
ja
imul
cmp
inc
jl
and
pop
std
sub
imul
std
andl
jae
mov
mov
loop
gs
push
es
icebp
mov
imul
fmull
and
mov
dec
mov
aas
in
hlt
int
add
xor
inc
fucom
notb
mov
lock
xchg
int3
or
cmp
xchg
fs
or
hlt
es
pop
push
and
cmp
add
scas
push
pop
jle
jb
jnp
mov
lcall
ret
mov
mulb
push
movsb
rcl
sub
inc
out
mov
inc
lea
loope
pop
mov
inc
insl
add
xor
push
jno
lods
mov
inc
jge
lret
xchg
add
pop
and
ja
mov
in
pop
addb
js
movsl
fldcw
mov
daa
loope
pop
adc
or
fnstcw
push
loope
mov
into
sbb
adc
mov
mov
iret
call
fldt
jb
testl
stc
or
aaa
rorl
subb
xor
mov
and
inc
sbbb
test
rcl
popa
bound
addr16
icebp
xor
sbb
jb
jae
mov
or
and
push
shll
je
sub
fiadds
and
dec
cmp
jp
push
push
cmc
jae
repnz
pop
xlat
adc
add
sbb
xor
adc
mov
or
cmpsl
stc
or
out
jmp
scas
xchg
cmpsb
sub
shrl
inc
xchg
add
xchg
mov
nop
cld
std
mov
rcrb
jmp
aas
pop
fdivrp
jb
clc
lods
int
pop
out
jmp
fdivr
popa
mov
push
mov
jge
js
insb
mov
cmp
pushf
pop
data16
repnz
je
aam
add
or
push
shl
xchg
xchg
inc
mov
aaa
icebp
cmpsb
fildll
cmc
xorb
xchg
push
cld
mov
inc
icebp
push
loope
cltd
xlat
push
pop
shll
push
pop
leave
ret
xchg
fisubl
dec
dec
pop
sarl
xor
jle
mov
xchg
sahf
adc
inc
rcll
push
sbb
mov
or
pop
arpl
fisubrs
jp
aad
dec
mov
lods
xor
jmp
mov
mov
cltd
shr
inc
sbb
aaa
loop
push
mov
jl
mov
mov
arpl
cmpb
pop
cmp
mov
insl
lods
movsl
mov
fnstenv
mov
shrb
xor
shlb
daa
jae
pop
sbb
icebp
movsl
js
jecxz
jbe
add
inc
xor
cltd
lret
ret
or
or
inc
push
sbbl
jno
mov
andl
xorb
popa
push
inc
fldt
in
lea
out
xchg
cmpsl
xor
pop
fcmovbe
sarl
mov
pop
mov
outsl
cmpsl
or
cwtl
xor
fidivrs
adc
fcoms
repnz
pop
shlb
imul
rcr
adc
aad
fnstcw
sahf
xor
das
or
lods
popf
jb
out
in
cmp
addr16
jecxz,pn
in
jo
mov
jg
es
sub
or
roll
adc
jnp
popa
sbbl
jmp
test
and
add
jb
mov
shlb
mov
addr16
push
mov
popf
out
and
mov
cmp
xchg
insb
inc
add
push
pop
xchg
push
inc
jb
int3
and
subl
mov
repz
cmp
sbb
rcll
jmp
mov
cmc
dec
or
rcl
movsb
inc
pop
push
cmp
push
test
idivl
out
sbb
sub
adc
enter
cmp
or
sub
js
mov
pop
test
push
adc
mov
jmp
push
dec
enter
jbe
test
mov
stos
lahf
mov
lods
fs
mov
push
shrb
xchg
push
shlb
or
call
add
sarl
mov
inc
pop
into
jmp
stos
ss
ret
in
xor
add
pop
cmp
mov
lahf
and
mov
or
cs
mov
xchg
inc
clc
lcall
pop
out
adc
loope
mov
mov
sarb
fisubrl
or
pushf
adc
loope
int
mov
ljmp
mov
rorl
push
stc
in
cmp
rolb
js
pop
xchg
pop
in
test
mov
imul
pop
or
addr16
mov
aad
popa
xchg
cmpsl
inc
add
shl
jg
fldenv
add
pop
jb
sbb
and
cmp
ss
test
fidivl
lock
jg
mov
movsb
stc
ja
cltd
mov
dec
push
aas
add
mov
xchg
xor
or
sti
mov
iret
cmpsb
lds
lods
pop
pop
repz
dec
sarb
xor
and
mov
xchg
daa
pop
jg
sub
sbb
imul
scas
sbb
cli
sub
mov
ss
cmc
mov
adc
inc
push
jl
sbb
es
cmpl
add
shlb
fdivrs
xchg
adc
int3
fsubs
popa
mov
fdivrl
loop
nop
fcomp
jg
inc
sub
aad
out
negb
push
mov
xor
cltd
cwtl
push
add
add
addr16
xor
fbld
rorl
add
push
dec
aad
mov
xchg
or
loop
jno
fdivrl
xor
lds
add
repz
lea
pop
shll
scas
clc
loop
sub
popa
cmp
lea
pop
pop
mov
enter
inc
cmp
cmpsl
iret
xchg
cmpsb
or
xor
shrb
or
push
mov
sbb
pop
sbb
push
jg
inc
push
mov
lods
sahf
xchg
sahf
test
mov
fsubl
pop
xchg
xchg
and
cmp
lea
outsl
loop
adc
ja
add
insb
xchg
lret
dec
push
or
shll
sarl
mov
movsb
lock
out
mov
shl
mov
push
out
sahf
jg
inc
ss
shl
std
and
mov
cli
cmc
mov
es
sahf
cmpb
cld
xlat
cltd
scas
fsubr
movsl
inc
scas
push
shl
mov
stos
dec
push
ret
inc
mov
pop
xor
inc
mov
je
jo
fistps
ror
popa
stc
and
ljmp
call
mov
and
push
icebp
or
and
outsl
or
std
cmp
dec
nop
mov
jg
push
push
dec
in
lds
test
or
jmp
mov
cs
imul
iret
and
inc
adc
popf
add
fdivrl
mov
sub
popa
cmp
dec
add
mov
xor
lds
test
mov
movsb
sbb
out
test
xchg
cltd
and
ja
ss
push
jb
mov
ret
sbb
fwait
adc
arpl
shl
push
bnd
jns
aaa
insl
test
pop
scas
jle
sbb
mov
add
loope
xchg
test
dec
jg
mov
or
jns
lea
inc
sbbl
mov
jb
stc
enter
and
movb
mov
add
pop
jns
jge
xorl
xchg
xchg
repz
sub
and
adc
mov
test
cli
cmp
jns
xchg
mov
dec
fildl
ret
js
dec
scas
insb
mov
aaa
adc
xchg
in
test
dec
cli
jns
out
rorl
push
shlb
stc
sti
add
mulb
testb
xchg
add
cs
pushl
subb
cltd
bound
push
gs
lods
jbe
leave
scas
dec
mov
imul
fucom
arpl
aad
sub
cs
sbb
push
add
mov
pop
jb
cmc
ret
mov
cmp
repz
and
in
push
pop
pop
orb
ja
jmp
lods
inc
jbe
xor
pop
lret
faddl
cmpsb
jmp
aaa
add
pop
test
enter
push
jnp
in
pop
stos
pop
cmpsb
fldenv
push
jae
pop
pushf
dec
xor
push
mov
mov
aam
cmp
adc
js
jno
mov
pop
inc
shrb
rolb
xor
jbe
cmp
push
sbb
mov
adc
notl
repnz
dec
gs
jmp
cmp
je
jb
mov
setp
test
jb
jae
sarl
pop
sub
mov
movsb
cmp
push
out
lahf
sbb
jne
cmovns
scas
gs
sbb
imull
into
adc
cmp
inc
sub
scas
push
inc
aam
sub
xchg
iret
and
jae
shl
cmp
imul
leave
mov
lock
sbb
mov
les
insb
hlt
inc
in
fdiv
adc
mov
push
mov
addr16
xchg
leave
dec
xor
das
inc
mov
repnz
push
ja
nop
daa
cmovl
sub
movb
ret
mov
xchg
or
iret
fbld
enter
pop
outsl
and
fidivs
sbb
xchg
cmp
inc
int
mov
xlat
add
mov
ret
sub
adc
andl
mov
das
incl
mov
jbe
orl
cmpsl
notl
mov
out
cmp
jecxz
xlat
mov
loopne
mov
and
fs
add
mov
js
pushf
lahf
mov
add
push
dec
fyl2x
in
cltd
popa
xor
bound
inc
mov
add
ret
and
lods
ret
es
or
lea
mov
jno
aas
sub
push
cltd
add
fsubl
or
jmp
dec
and
out
pusha
xor
inc
inc
stos
push
jl
push
dec
cmp
test
test
sub
dec
xor
cmp
xor
cmp
loope
shlb
lret
int
jle
cld
fwait
and
dec
push
in
imul
or
dec
lock
xor
and
fcmovnbe
jle
cmp
movsl
pushf
add
mov
out
sub
mov
add
sbb
out
fwait
pop
mov
cmpsl
mov
push
or
mov
xor
imul
sub
shll
icebp
pop
jmp
inc
adc
lea
or
xchg
fcmovnb
sub
arpl
lret
adc
in
popa
mov
jb
icebp
subb
test
and
mov
sbb
das
xchg
cmpsl
push
ja
das
out
mov
lods
xchg
push
mov
push
dec
dec
sub
mov
sub
out
jp
lahf
jl
lret
int3
ret
cld
sbb
outsb
and
je
and
mov
xchg
sti
push
andl
mov
cmp
lock
xlat
mov
lds
sub
mov
jecxz
dec
xchg
sahf
pop
jbe
sbbb
in
jg
in
add
mov
popf
rolb
and
out
leave
mov
test
push
add
xchg
ja
arpl
push
jbe
add
sbb
lods
movsb
lret
or
mov
add
repnz
loop
addr16
mov
jg
jmp
rolb
popl
sbb
aam
sahf
cs
lret
sub
std
lock
and
inc
mov
cmp
cs
clc
mov
sbb
sbb
insl
fldcw
les
sbb
call
arpl
dec
mov
pop
cld
sub
jg
dec
cmp
enter
jge
cmp
xor
cmp
scas
pop
inc
inc
pop
adc
mov
into
mov
mov
xchg
pop
pushf
xchg
popa
push
popa
pop
je
aas
cwtl
mov
stc
mov
movsb
dec
test
in
int
mov
test
jge
pop
pop
imul
arpl
mov
inc
sbb
mulb
mov
test
repz
lock
mov
nop
fists
rolb
je
mov
mov
addr16
popa
mov
lret
or
leave
xchg
lock
or
lcall
call
pusha
inc
pop
jg
or
cmpsl
dec
lock
xor
cmp
test
in
mov
in
notb
or
push
inc
es
and
std
or
cwtl
js
jo
mov
pop
sub
mov
push
clc
push
sti
push
call
mov
int3
les
or
pushf
stc
enter
dec
sub
sub
lods
leave
pop
rol
xchg
pop
ret
sub
mov
push
or
icebp
mov
rcrl
lods
cmp
negl
shrl
inc
pop
in
cs
dec
loop
dec
jno
ja
jo
stos
lods
ja
arpl
cltd
test
movsl
jo
dec
sbb
jmp
xchg
push
or
test
xor
mov
push
and
pop
mov
adc
cmp
cmpsb
fwait
add
cltd
sbb
jge
add
xchg
jbe
das
pop
mov
sti
cmp
repz
adc
jnp
mov
xchg
mov
test
dec
shll
out
inc
ret
xchg
enter
es
xchg
movsb
sub
and
mov
inc
dec
enter
sub
mov
mov
push
and
adc
repz
test
mull
adc
fs
mov
orb
mov
inc
gs
cwtl
in
push
sbb
ret
cmpsb
xor
movb
cli
mov
pop
es
sub
movsl
sub
add
pop
inc
data16
jg
out
xorl
fstl
mov
nop
in
outsl
or
movsl
push
lods
ds
popf
movsl
push
push
adc
scas
out
daa
sbb
fst
nop
adc
not
cs
push
adc
adcl
inc
das
inc
adc
xchg
mov
sub
inc
mov
fstps
popa
sbb
ja
in
inc
aaa
out
cld
mov
adc
in
jmp
xor
mov
xchg
imul
push
xchg
cmp
lods
dec
call
push
xchg
jge
clc
test
cld
xlat
ds
jns
mov
out
fidivrl
aam
out
ljmp
in
xchg
cltd
sub
or
mov
xchg
std
gs
dec
inc
popa
ret
pop
aam
lock
fstps
adc
sub
lods
mov
cltd
icebp
adc
jo
xchg
nopl
scas
xor
rcl
scas
add
add
or
xor
jnp
xor
xchg
cmp
pop
es
icebp
mov
icebp
hlt
inc
pop
and
mov
xor
add
ret
and
cmp
mov
adc
addr16
jnp
add
or
cmc
push
out
scas
and
cmc
xor
clc
popf
aaa
lcall
lret
adc
mov
and
icebp
xchg
push
pushfw
imul
pop
or
int
push
daa
dec
imul
outsl
cmc
ret
sarb
rcll
sbb
hlt
repnz
xchg
stc
cmp
mov
sarl
dec
insl
daa
hlt
mov
or
mov
arpl
pop
lahf
frstor
les
fisubl
inc
jl
loope
xlat
mov
lcall
or
stos
xchg
gs
pusha
or
ret
lods
xchg
ret
notl
sbb
fimull
inc
cmp
pop
cmp
loopne
fwait
jg
popf
jge
aaa
mov
sbb
ret
rcrb
imul
push
mov
test
js
repnz
dec
insl
test
mov
nop
or
sub
dec
xchg
pop
xor
sahf
cwtl
or
mov
cmpsb
cwtl
addr16
test
cmp
sbb
shl
and
inc
mov
jmp
jbe
mov
scas
cmp
mov
push
jnp
dec
mov
iret
ret
es
sbb
mov
sti
lock
enter
iret
inc
mov
sbb
mov
xchg
out
xor
int3
rclb
xor
lods
cmpsb
cwtl
lods
jge
imul
jo
aas
sub
jo
mov
scas
in
mov
mov
daa
cmpsb
jno
inc
leave
xor
add
not
stos
fldt
out
mov
int3
enter
mov
cmp
stos
push
xchg
inc
xor
stc
and
push
movsb
ds
stc
aam
cmpsl
popf
push
test
dec
inc
in
icebp
lock
ss
jmp
popa
stos
fldl
lds
push
jl
fcmovbe
jg
out
testb
pop
das
jbe
xchg
pop
insl
add
daa
loope
cmp
jge
fnsave
arpl
jp
fldenv
mov
cltd
mov
arpl
call
scas
aam
shlb
xchg
jp
or
vpunpcklwd
sbb
lods
pop
cmpsb
mov
mov
cs
inc
pop
leave
push
adc
cltd
iret
sbb
mov
les
mov
mov
stos
pop
ss
dec
mov
fidivs
into
xchg
aaa
sbb
sbb
mov
fstpt
mov
mov
notl
jb
or
add
lret
xor
adc
xchg
fld
stos
ljmp
sbb
ljmp
test
imull
xchg
push
mov
cmp
mov
dec
in
jns
inc
jae
vpaddb
cli
push
xor
adc
jno
roll
jle
aam
lods
mov
push
dec
cltd
push
inc
stos
insb
sbb
jmp
stos
mov
lea
jmp
xchg
jnp
leave
cli
push
int3
jmp
lcall
in
push
cmp
popa
arpl
dec
jne
orl
fistps
inc
in
shll
leave
cltd
jb
addr16
add
divl
xchg
adc
inc
xlat
inc
cmp
in
dec
outsb
fildll
xchg
jb
mov
bound
push
in
adc
mov
mov
dec
js
xor
in
loopne
shlb
mov
sub
jnp
popa
test
add
loop
roll
push
adc
into
and
adc
stc
int
movsb
icebp
adc
popf
or
xor
data16
sub
das
mov
lret
jae
popa
outsl
dec
outsl
ja
push
add
adc
jb
enter
jo
cmp
sub
inc
test
stos
pop
jge
dec
mov
mov
mov
add
dec
mov
ror
les
pop
pop
mov
sub
and
xor
lret
mov
out
mov
jne
repz
add
insb
loop
lea
jp
inc
jns
or
stc
leave
cmpsb
out
add
call
ds
jo
cmpl
test
or
out
in
or
stos
push
inc
adcl
xor
or
scas
sbb
idivb
dec
icebp
mov
and
or
xchg
sub
loopne
mov
add
ja
jb
out
arpl
mov
inc
jb
push
imul
movsl
stos
jne
pop
xorb
not
fsts
jbe
push
mov
leave
xor
mov
push
xlat
call
arpl
mov
outsb
or
mov
mov
shlb
pop
lods
imul
and
pushf
insl
jg
and
imul
dec
lea
lds
or
push
fisttps
stc
cmpl
push
inc
sub
mov
mov
inc
fiaddl
jnp
aaa
leave
inc
pushf
inc
cmp
mov
ja
popf
test
dec
mov
repz
inc
fbld
lret
repz
sahf
loop
cmp
les
sbb
sbb
inc
mov
sub
cmp
cmp
test
mov
jns
adc
mov
mov
push
addl
pop
lret
inc
or
es
subl
xchg
in
mov
shll
cli
rolb
scas
cmpsl
int3
out
add
ret
dec
mov
mov
mov
pop
mov
scas
sbb
jp
dec
inc
push
inc
andl
and
out
jmp
repz
lret
adc
lea
pop
lret
dec
xchg
inc
jae
idivb
fs
pop
mov
int
into
out
xchg
cmp
cwtl
cmpsb
popf
jno
mov
test
and
fmul
mov
ljmp
sahf
insb
mov
mulb
in
ja
jb
adc
out
xchg
jns
sbb
mov
lods
scas
popl
dec
pop
and
repnz
or
mov
enter
in
pusha
mov
jg
pop
out
orl
pusha
adc
gs
mov
add
sbb
xlat
pop
lods
sub
sbb
push
jns
movsl
fstpl
scas
and
push
or
fstl
or
push
daa
nop
mov
mov
and
ret
add
loop
ror
jne
stos
test
push
mov
push
rclb
push
aaa
lods
and
out
sub
xchg
jg
dec
stc
xchg
repnz
sbb
mov
mov
jns
adc
imul
sub
stos
test
mov
push
cltd
pop
leave
mov
mov
fucom
jnp
outsb
push
or
pop
or
add
xchg
jb
lods
out
xchg
lcall
stos
movntq
inc
mov
cmc
fcompl
sahf
push
cmpsl
push
dec
in
mov
push
in
xor
leave
mov
mov
mov
iret
pop
inc
scas
pusha
add
push
stos
rcrb
mov
sub
dec
adc
nop
jb
scas
test
add
popf
gs
rol
clc
addr16
test
pushf
lods
cmp
push
loope
repz
mov
cmp
mov
lock
pushw
and
hlt
add
push
add
gs
movsb
jge
enter
sbb
push
sub
loope
fwait
inc
addr16
clc
push
inc
imul
stc
push
xchg
out
and
scas
push
testb
mov
push
stc
scas
ss
cmp
mov
push
sub
bswap
pop
scas
pop
cld
jnp
sub
pop
fcompl
loope
and
lods
xor
ret
xchg
mov
in
or
std
ds
ja
dec
stos
pop
popf
add
mov
pop
pop
sbb
daa
and
mov
stos
mov
inc
dec
push
xchg
stos
rcl
pop
jecxz
in
clc
pop
mov
inc
mov
test
sbb
cmp
adc
ss
sub
frstor
sub
stos
and
rcl
jae
jle,pn
push
pushf
push
xlat
scas
dec
push
sbb
aas
cs
and
push
fldcw
xor
out
xchg
mov
in
jecxz
pushf
xor
xchg
jecxz
les
jne
movsb
mov
dec
or
mov
nop
dec
cs
hlt
cmp
sbb
std
test
cmp
add
cmp
sub
sarb
rolb
dec
inc
jae
call
sti
mov
jge
and
jecxz
lods
mov
xchg
push
dec
imul
pop
ss
and
cmpsb
es
xchg
pop
push
and
in
mov
sbb
jg
movsl
aas
pop
jbe
sbb
xchg
insl
fsubrl
jae
mov
jge
jg
dec
cwtl
adc
jecxz
mov
in
mov
stos
stos
add
sbb
out
cmp
and
lcall
out
enter
pop
rcrb
push
add
notb
in
lods
lret
jecxz
and
popa
repnz
jmp
add
fsubrs
call
nop
ja
and
lods
xchg
xor
sub
jp
insb
push
dec
sbb
mov
lcall
push
dec
xchg
in
push
push
inc
sub
mov
jne
xchg
mov
sub
mov
das
loop
cmpsl
sub
ja
test
cmc
leave
mov
sbb
mov
push
out
lds
aad
sbb
repnz
hlt
cmpsb
lods
jo
sbb
arpl
pop
inc
add
outsb
pop
cs
loopne
out
inc
xor
mov
les
push
push
ret
mov
sahf
mov
push
xchg
cli
pop
adc
fldl
add
or
cmp
cli
orb
out
push
xchg
xor
mov
xlat
icebp
pop
sbb
cmp
inc
cmp
adc
sbbl
stos
mov
add
or
cwtl
je
std
in
loope
mov
pushf
pop
clc
pop
mov
cltd
pushf
adc
pusha
repz
lods
int
cmpsb
adcl
sahf
out
test
jnp
jp
fbstp
cwtl
popa
repz
dec
test
push
mov
movsb
cmp
xchg
hlt
ds
lcall
push
pop
movsb
xchg
mov
outsl
pop
aad
push
outsl
sahf
xchg
cltd
movsl
out
test
insl
cmp
cmp
xchg
lahf
mov
lcall
sbb
cs
shl
pop
or
loopne
xor
jl
xor
aas
nop
ret
inc
cmp
sar
sarl
mov
cmc
sub
jle
xor
dec
into
lods
sti
scas
xlat
xchg
xchg
push
mov
xchg
mov
push
mov
mov
inc
pop
adc
mov
mov
jmp
add
and
sbb
add
mov
sarl
repnz
test
adc
in
pop
push
or
sbb
aad
jo
test
mov
and
cmp
push
sub
movsl
outsl
mov
idivb
insl
sahf
xchg
dec
or
stc
imul
repz
sub
fildl
in
int
xor
hlt
cmp
enter
lds
ret
adc
test
repnz
xchg
fcomip
push
push
sub
insl
fiadds
fiaddl
insb
inc
push
xacquire
loop
mov
cli
test
mov
xchg
mov
iret
out
inc
aam
cmp
mov
xchg
movsl
inc
sub
pop
pushf
mov
fisttpll
push
dec
shll
cli
es
xlat
imul
pop
adc
mov
shll
pop
fldl
loope
hlt
pop
mov
mov
xlat
cmp
jnp
sub
cmp
int3
ficoml
sub
pop
add
jge
pop
imul
je
mov
xor
sbb
imul
neg
mov
enter
outsl
js
inc
or
add
dec
inc
outsb
add
mov
jmp
mov
xor
xor
jno
xchg
xor
add
cmp
push
or
rcr
pushf
into
shll
mov
jns
shrb
mov
push
sbb
mov
shlb
xchg
outsl
mov
nop
popf
pop
sub
xchg
mov
testb
outsb
shll
out
pop
in
mov
popf
addl
int
shlb
xchg
cmp
icebp
jo
test
push
hlt
xchg
in
cmp
andb
or
mov
cmp
sbb
sub
pcmpeqb
cmp
mov
loopne
or
jo
imul
pop
test
imul
insb
nop
push
add
push
push
dec
pop
movsl
xchg
jnp
rep
mov
dec
stos
and
and
inc
sub
ret
mov
pop
and
ret
lds
aas
repz
pop
test
cwtl
shrb
in
pop
mov
sub
sti
dec
sti
cmc
roll
mov
sahf
pushf
fcomi
mov
insl
test
mov
mov
shll
xchg
fidivrs
aas
sbb
mov
out
sbb
sbb
int
jge
mov
push
sbb
aam
mov
loop
adcb
dec
add
sbb
negb
dec
xor
pop
js
ret
or
push
das
clc
imul
inc
scas
push
jno
outsb
jno
negb
mov
arpl
repnz
jns
xchg
cmp
xchg
jbe
cmp
loopne
push
sbb
adc
ret
jle
jecxz
js
sahf
adc
cmp
repnz
xor
push
or
rcr
imul
and
clc
cmc
adc
xor
xor
cmp
pop
jno
repnz
loop
push
push
cltd
daa
mov
lahf
mov
mov
adc
ja
outsl
js
out
and
lret
adc
mov
add
in
dec
ret
mov
jbe
push
xor
cmp
pop
loopne
adc
xchg
inc
xchg
mov
test
insl
dec
pop
lods
pushf
mov
cmc
mov
mov
popf
lea
cmc
cwtl
cmp
addr16
push
bound
mov
adc
sbb
jle
incb
and
clc
roll
call
mov
icebp
inc
shrb
pop
jnp
cmp
add
imul
das
movsl
mov
inc
pop
ss
rorb
lret
pop
lret
xor
daa
mov
cld
mov
dec
or
fdivs
pop
cmp
sub
or
insl
push
aam
fwait
sbb
jnp
pushf
test
lret
jne
cmp
pop
xchg
xor
popf
sub
lock
emms
xchg
leave
mov
pop
xor
js
fwait
call
ret
cmp
xlat
jmp
pop
sbb
jae
aad
stos
lock
das
mov
fbld
lods
loopne
jg
sahf
fldt
xor
shl
mov
int
fists
in
sub
push
loope
adc
repz
sub
xchg
imul
movsl
ja
adc
jae
cmpsl
pop
dec
fmuls
jecxz
js
in
push
xchg
adcb
dec
dec
in
mov
mov
scas
jo
cmp
add
pushf
scas
jbe
push
cmp
and
inc
pop
add
cmp
lods
cli
std
mov
loope
lods
push
pop
add
icebp
in
ja
jo
or
fnstcw
pop
or
mov
mov
dec
icebp
es
cmp
pop
ss
dec
mov
pop
pop
cmp
data16
data16
ret
stos
push
jl
push
repz
js
mov
jg
sub
fadd
data16
mov
outsl
mov
push
xor
and
jmp
mov
aas
sub
popa
ss
stos
inc
inc
sub
xor
sub
mov
push
mov
inc
jge
push
inc
cmp
xor
mov
mov
rolb
mov
repz
stos
mov
mov
mov
mov
das
or
loop
jmp
pop
out
cmp
add
rolb
aam
test
mov
jae
fists
cmp
lock
xor
push
mov
xor
lret
test
xor
subb
imul
pop
cmp
jl
mov
and
sub
jns
enter
pop
jle
mov
and
sub
je
aam
mov
imul
jg
mov
push
addr16
clc
ret
sbb
jg
cltd
movsb
jg
dec
test
adc
loop
lret
cld
idiv
jbe
gs
xchg
lahf
mov
jmp
add
sub
ja
push
pop
int
dec
adc
aam
push
lock
fwait
repnz
lock
sub
and
loopne
ds
mov
lock
push
pop
sub
jmp
lock
push
sbb
sahf
das
ret
push
leave
pop
jle
in
dec
cmp
sub
sahf
jmp
mov
cmpsb
lret
scas
xchg
in
cmp
stc
ljmp
mov
stc
mov
xchg
and
aas
pop
divb
notl
mov
lds
daa
shlw
sbb
mov
pop
push
mov
mov
jae
stos
es
rol
xchg
pop
or
imul
mov
lods
xor
imul
int
nop
sbb
and
scas
sbb
mov
sub
jl
xchg
and
add
inc
test
mov
pop
mov
mov
push
inc
inc
xchg
movsb
dec
push
mov
cs
adc
sti
cld
pop
and
adc
insb
adcl
and
outsb
sub
xchg
push
mov
lock
in
cmpb
xchg
pushf
sahf
mov
popf
push
push
push
dec
mov
jno
ljmp
push
into
mov
lret
xor
aaa
jl
or
stos
push
lcall
loope
sub
mov
cltd
jg
stos
inc
jle
es
jbe
mov
adc
mov
cmpsl
movl
push
ds
cld
sub
test
popa
and
fcmovnb
jae
inc
ds
xchg
dec
xchg
mov
fs
ret
cmpsl
xor
and
mov
adc
ja
out
mov
imul
xchg
out
scas
mov
jbe
cmp
dec
jecxz
scas
jo
and
cmp
iret
loop
cs
aam
das
fs
sub
cmpsb
pop
adc
out
or
int3
inc
mov
inc
ja
fwait
inc
in
lods
sahf
adc
cmp
jbe
imul
pop
cmp
or
pop
insl
pop
pop
popa
std
ret
loope
mov
js
jbe
fidivs
fldl
or
jbe
jb
das
imul
push
iret
mov
cmp
mov
mov
xchg
fidivrs
lret
loopne
fildl
test
in
xchg
sbb
push
pop
outsl
jb
fs
popa
rorb
test
shl
mov
pinsrw
add
mov
jae
adc
cmp
mov
sahf
mov
cld
addb
loopne
out
aas
cld
cmp
push
xchg
xlat
repnz
xor
dec
ss
xchg
mov
sbb
aad
bound
mov
loopne
ds
mov
lods
repnz
cld
inc
insb
cmc
push
pop
mov
mov
outsb
nop
das
mov
xchg
rcl
bound
ds
pop
mov
insl
sbb
pop
add
lcall
inc
clc
cmp
jp
das
dec
push
mov
adc
mov
mov
xor
pop
sahf
sub
or
iret
nop
outsb
and
cmpsl
sub
sahf
lds
idiv
mov
sub
sub
rol
jge
jno
cmp
xor
lods
xor
inc
dec
out
and
sbb
clc
scas
sub
jbe
mov
dec
dec
lods
push
movsb
int
pop
iret
data16
je
stos
fwait
dec
pop
inc
cmpsb
fldt
ja
outsb
sub
sti
imul
cmp
aam
inc
pop
jg
fildll
test
and
sub
push
sbb
jae
pop
jle
xlat
subps
out
js
jl
aad
out
mov
aaa
out
add
push
mov
daa
loope
xor
enter
push
push
adc
dec
je
dec
les
mov
enter
pop
adc
call
xor
pop
out
pop
jl
clc
pop
add
cli
jl
std
adc
mov
mov
or
shrl
fbstp
mov
or
mov
fstp
stc
and
ret
jecxz
jle
xchg
orl
cmp
lea
js
sbb
pop
fbld
add
nop
xchg
sahf
push
scas
xor
shl
xor
pop
in
inc
shrl
rcl
add
pop
jns
dec
pop
xchg
cmp
mov
popl
out
jmp
fildl
xchg
jno
or
inc
cmp
add
movsl
xchg
add
push
pushf
mov
adc
out
pop
mov
arpl
cmpsl
test
push
adc
testl
adc
and
cltd
lret
loop
aam
out
clc
inc
call
cmpsl
jnp
pop
and
imul
mov
das
xor
imul
lods
push
loope
add
jne
insb
loope
mov
data16
pop
cmpsb
lock
xor
call
les
jbe
jl
outsb
jg
lahf
adc
push
loope
out
adc
loope
xor
cld
js
dec
push
movb
push
dec
ret
ds
movsl
sbb
push
xchg
push
dec
test
jns
test
paddb
xchg
push
pusha
in
scas
pop
js
lods
scas
insb
add
hlt
pop
stos
adc
fldcw
adc
and
lret
adc
adc
pop
sbb
data16
mov
lret
jmp
lret
cld
inc
ficompl
psrad
pop
je
push
inc
pop
or
icebp
jae
jmp
rol
test
fwait
js
mull
or
stc
jmp
in
mov
cmp
or
sahf
gs
mov
jb
xchg
das
outsl
pushw
dec
adc
iret
mov
or
sbb
lret
lods
cmpsl
pop
movl
xchg
repz
popf
inc
xor
add
ret
add
xchg
lds
xchg
out
loope
dec
je
cmpsb
das
inc
rorl
dec
and
mov
jae
addr16
out
push
sti
xchg
gs
push
xchg
xor
cltd
enter
cli
sbbl
sub
inc
add
hlt
shll
sbb
push
out
mov
xchg
fsub
in
push
je
push
push
sbb
int
cmc
mov
dec
push
mov
mov
ljmp
adc
xchg
sbbl
loopne
repnz
mov
inc
cmp
ss
adc
dec
movsl
dec
sbb
cmp
rcrl
jb
mov
dec
mov
roll
jne
fnstcw
sbb
fsub
jge
aaa
fbstp
icebp
cmpsl
xchg
jae
cmpb
xchg
mov
pop
sub
xchg
xchg
cltd
fs
in
in
insl
fidivs
and
mov
rol
jb
mov
xchg
or
in
and
inc
fidivl
pop
xlat
scas
iret
std
inc
aad
pop
or
insb
add
shll
imul
ret
fwait
loopne
stos
insl
call
jg
idiv
lods
bound
sbb
sbb
add
call
pusha
outsb
pop
ret
adc
sub
sub
shlb
imul
jg
mov
je
and
inc
iret
push
insl
in
insl
lcall
es
push
shlb
gs
mov
stos
loope
lret
enter
lds
jno
insb
mov
jge
jae
push
cmp
pushf
out
mov
ss
push
ja
int3
cmp
mov
insl
and
pop
test
mov
sub
mov
jb
adc
mov
pop
ja
movsb
aas
int
fwait
lahf
in
aad
aam
sbb
scas
cmpl
popa
xor
inc
stc
mov
xchg
pusha
ss
pop
in
faddl
pop
sub
jne
pop
push
and
xchg
push
mov
mov
nop
std
sbb
out
fisubrs
es
xor
cmpsb
cmp
sub
sub
or
pop
sbb
sbb
enter
jae
addr16
in
outsl
pushf
inc
in
repnz
insb
jp
in
mov
lret
jnp
pushf
or
mov
je
xchg
mov
enter
mov
adc
xor
cld
or
sbb
pop
sub
mov
sti
imul
inc
or
push
stc
pop
mov
loopne
mov
jmp
xor
and
mov
push
ret
cli
hlt
out
inc
daa
pop
dec
xlat
adc
inc
ret
xor
aaa
dec
inc
cmp
inc
inc
icebp
dec
add
or
cli
adc
pop
jbe
icebp
cltd
bound
push
popa
sub
nop
inc
pop
adc
fmull
or
add
fdivrp
leave
dec
ja
adc
push
xlat
daa
xchg
negl
jo
fmuls
mov
ficomps
adc
adc
xor
xlat
call
je
adc
xchg
adc
jg
xchg
arpl
mov
push
add
jnp
xchg
pushf
test
rcl
rcr
cmp
clc
mov
push
pop
push
sub
pop
aaa
jns
push
data16
jno
xchg
pop
jbe
and
iret
sub
loope
insl
ret
xlat
and
int3
push
xchg
push
mov
or
scas
and
lret
stos
xor
inc
pop
pop
into
jl
push
lahf
add
cld
add
pop
aaa
mov
and
push
mov
int3
aad
daa
inc
xchg
or
mov
sub
leave
mov
in
dec
arpl
loop
adc
iret
loop
stos
mov
mov
mov
mov
jecxz
cli
sub
fidivrl
inc
sbb
mov
es
imul
out
cmp
add
mov
cld
cmp
dec
movl
fmul
sbb
pushl
or
xor
add
stc
cmp
aaa
in
and
sbb
sahf
mov
cltd
aam
cmc
sti
in
cmp
insb
fdiv
repnz
push
dec
js
inc
or
testb
aas
or
int
inc
add
shlb
xor
mov
cmp
pop
sub
pop
xor
lods
insb
cltd
data16
sbb
inc
cltd
es
sbbl
inc
das
cwtl
push
cmp
icebp
pop
mov
xor
mov
xchg
lock
negl
fxch
jmp
or
or
adc
and
andb
scas
rclb
fs
ja
loop
jne
pop
and
movsb
mov
imul
fs
lret
push
call
inc
push
repnz
outsb
stos
fwait
test
mov
inc
mov
int3
xchg
xchg
lods
lcall
stos
xchg
fdivs
test
mov
and
dec
jae
mov
out
mov
mov
lods
lret
cmp
popf
mov
xor
icebp
lea
jae
cmp
push
stc
repz
stos
loop
jnp
and
inc
push
fimull
ds
stos
inc
in
ljmp
je
jae
sbb
test
xchg
jbe
xor
pop
aas
and
jnp
popa
sbb
sbb
rcrl
ret
pusha
ret
push
fmull
push
push
enter
jo
mov
sbb
std
jl
or
sub
addr16
inc
loope
push
xor
insl
adc
stc
push
sub
lods
fwait
xchg
mov
jae
jno
pop
mov
or
push
dec
pop
adc
mov
inc
mov
test
xchg
dec
inc
jo
aaa
ljmp
sti
and
fidivs
add
xchg
ret
imulb
into
iret
jge
push
test
enter
push
dec
xor
addps
or
lds
daa
pop
cmp
out
pop
pop
pop
mov
mov
lock
cmc
in
or
dec
sbb
fnstcw
iret
sti
mov
mov
insl
jmp
testb
ja
stc
push
cmp
pop
xor
ja
int3
mov
in
jne
ret
mov
fdivrp
cmp
pop
call
sbb
outsl
jecxz
lret
iret
mov
sahf
push
lahf
pop
mov
es
scas
add
fiaddl
inc
fildl
test
xlat
add
hlt
sub
sbb
ds
sbb
insl
xchg
jp
imul
push
dec
push
mov
je
test
lea
imul
cmpsl
jns
clc
fisttpl
pop
pop
jbe
loope
aad
sti
lea
sub
inc
iret
daa
inc
mov
subb
jnp
in
leave
shrb
lahf
xor
or
cltd
loopne
cmp
mov
aam
fisubrl
popa
jge
fists
adc
addr16
jae
push
mov
mov
adc
data16
sti
stos
aam
fsubs
rorl
rorl
popa
mov
fwait
das
sbb
mov
mov
mov
mov
mov
int
push
jnp
add
lock
pop
jmp
push
pop
cld
dec
insl
adc
movsb
or
or
jge
aad
mov
fistl
xchg
clc
xchg
lods
test
out
push
mov
lret
rorb
mov
and
pusha
or
dec
gs
pushf
jle
ret
fsubrp
icebp
xchg
inc
icebp
cld
arpl
mov
daa
scas
orl
push
jecxz
dec
mov
clc
stos
dec
jo
add
enter
mov
mov
fimuls
ret
in
sbb
test
aad
scas
addr16
and
dec
and
push
mov
push
jo
roll
cmpsl
inc
daa
roll
mov
pop
sbb
dec
test
add
xor
lahf
lea
cmpsl
xor
std
ljmp
mov
movsb
mov
jecxz
xor
nop
test
xchg
mov
loopne
popf
popl
call
imul
inc
mov
xor
addb
ds
pusha
sbb
es
or
sahf
fwait
mov
imul
jecxz
push
cmp
rorl
jecxz
daa
xor
popa
outsb
xchg
incl
xor
cld
les
and
ja
xchg
lahf
dec
pop
enter
cmp
xor
cmpsl
and
sbb
pushf
filds
mov
push
js
icebp
jnp
int3
imul
lock
cmp
adc
pop
cmp
adcl
movsb
cmp
cmp
mov
addl
push
test
sub
push
js
andb
ds
dec
les
shrb
jecxz
adc
inc
mov
testl
out
cwtl
adc
std
fldcw
mov
outsb
xchg
mov
xorl
pop
push
mov
mov
rcll
daa
jg
sub
call
hlt
test
adc
lret
test
rcrl
cs
xchg
mov
int3
pop
push
stc
xor
inc
mov
dec
shrl
lock
rcr
xor
inc
out
fsubrs
push
filds
test
mov
xchg
js
icebp
mov
jnp
mov
jecxz
xlat
cmpsl
sub
push
int3
xchg
fsubrl
scas
mulb
movsb
js
push
xor
or
xor
xor
sbb
mov
mov
stos
fwait
mov
pop
addb
cmp
int
sub
add
stos
dec
faddl
adc
push
lds
test
and
mov
pop
mov
xchg
xchg
add
adc
xchg
mov
rcll
cmp
push
mov
push
mov
aad
mov
cmp
jns
ja
jle
adc
xor
pop
push
inc
cmc
jo
outsb
mov
or
xor
pop
ret
inc
in
roll
jns
lret
cmpsb
push
xchg
push
fildl
dec
jo
fadd
xchg
scas
jne
shlb
enter
dec
sub
and
mov
inc
in
enter
or
mov
xchg
sarb
cmp
imul
add
pop
inc
sub
sbb
hlt
jmp
jb
adc
jbe
and
mov
decl
into
push
push
push
fs
js
testl
test
movsb
push
jo
jae
pusha
iret
stos
enter
out
test
add
dec
sub
mov
or
pop
mov
xor
lock
sub
stc
aad
dec
out
pop
pop
lds
add
and
js
xchg
fiadds
repz
pop
push
ret
scas
sub
xchg
or
in
fisubs
pop
aam
insl
mov
stos
arpl
mov
sbb
idiv
adc
or
pop
mov
jne
imul
mov
aas
add
call
sub
push
xchg
ficompl
jle
insl
push
movsb
test
sti
and
pop
pushf
jb
rclb
push
push
xchg
fwait
mov
popa
cmp
aam
mov
jae
int3
ret
loope
fsts
jecxz
mov
mov
repz
xor
jns
xor
sbb
dec
sbb
add
or
in
ljmp
jecxz
cltd
mov
loopne
lods
push
dec
dec
sub
negl
adc
rcr
sub
mov
adc
rcll
sub
inc
rcrl
call
popf
pusha
add
mov
mov
cltd
decb
mov
xor
imul
insb
sbb
mov
pop
xor
fisubrs
adc
cmpsb
pop
stos
icebp
pop
in
cmpsl
cmp
jecxz
sub
test
mov
cmpsl
or
xchg
sti
sbb
jmp
in
cmp
cmp
or
and
pop
mov
xor
out
idivl
scas
jl
insb
leave
mov
jle
es
mov
or
sub
lods
std
inc
cmpps
mov
repz
dec
les
pop
daa
and
adc
in
lahf
and
lock
shlb
mov
stc
shl
mov
stc
sub
and
add
ds
notl
adc
sub
in
cwtl
push
inc
lret
lods
or
mov
xchg
leave
aas
cmc
jnp
and
mov
sarl
aam
dec
bound
mov
mov
rcrl
dec
pop
mov
flds
xor
push
cmpsl
xchg
test
or
gs
test
xchg
ja
jle
jle
shlb
jb
fwait
std
loopne
mov
ret
sbb
xor
and
aaa
xor
cmpsb
cmp
mov
cld
lahf
mov
xchg
aad
or
sub
cmp
inc
push
xor
sbb
xor
fnstenv
je
push
ficoms
add
movsb
js
outsl
rcll
mov
sbb
mov
sbb
push
push
cmp
mov
sub
fcomi
iret
push
pusha
pop
adc
inc
outsl
cmp
popa
sbb
xchg
add
xchg
mov
push
dec
imul
lret
sbb
sub
pusha
mov
xchg
push
cmp
pushw
sub
outsl
fwait
push
outsl
push
ds
pop
loopne
scas
inc
jbe
bound
test
ljmp
jle
ficompl
inc
push
mov
xchg
xor
fwait
aad
das
pop
adc
or
sbb
cs
cmp
pop
outsl
lds
out
lahf
push
xchg
lock
mov
imulb
nop
movsl
mov
pop
idivl
mov
adc
inc
ljmp
mov
cmc
sbb
push
jmp
cltd
les
or
sbb
dec
orl
daa
bound
out
repnz
data16
es
mov
mov
dec
fisubrl
sti
into
pop
mov
sub
imul
pop
xchg
pop
cli
xchg
int
cs
scas
jae
mov
rcll
rcll
jns
test
mov
es
cmp
roll
push
xor
out
test
mov
int
push
lret
push
mov
ret
inc
rcr
push
rolb
sahf
shlb
adc
ja
iret
add
sbb
insl
inc
test
addr16
jbe
repz
subl
dec
pop
pop
adc
subb
stos
ss
mov
es
jns
adc
sub
mov
les
lahf
dec
inc
aas
adc
push
fwait
lret
and
add
cltd
push
pop
push
xor
push
aam
xchg
lods
cltd
cwtl
and
cmp
call
std
adc
ret
mov
cmc
inc
pop
or
xchg
movsl
jbe
sub
jno
inc
push
xor
lea
aas
pop
cmpb
push
dec
push
sub
sbbl
pop
stos
pop
pop
fcmovnu
cmpsl
cmpb
push
cmp
lret
std
call
cs
prefetchwt1
imul
inc
sub
push
stc
mov
pop
cmp
out
scas
popa
vcmpnltpd
jmp
into
ror
inc
mov
fnstcw
push
out
es
bswap
mov
insl
or
push
call
pop
imull
bound
stos
cli
cs
cwtl
push
fcom
push
and
out
sub
rolb
insb
push
dec
mov
and
sbb
arpl
loopne
cmp
filds
test
or
fs
aam
push
jl
popa
iret
dec
data16
mov
rol
adc
scas
xor
cld
pop
push
std
arpl
mov
ss
leave
push
mov
sbb
stc
aad
jl
sbb
lds
cmp
int3
arpl
dec
mov
xor
fwait
popf
add
hlt
test
mov
test
adc
pop
icebp
cs
inc
dec
out
ret
xchg
pusha
pop
sarb
mov
push
lcall
mov
cli
push
mov
mov
pop
enter
imul
je
sbb
je
in
pop
fsub
mov
xchg
cltd
test
repz
xor
cmp
das
and
sti
xchg
jl
sbb
addr16
mov
mov
adcl
lock
pop
outsb
subl
shll
pop
loopne
and
push
enter
ds
adc
sub
sub
loope
mov
sub
fisubl
mov
fidivs
inc
jne
mov
xchg
outsl
and
jl
cltd
add
outsl
mov
icebp
sbb
add
dec
mov
add
sub
repnz
aas
mov
and
adc
push
cltd
movl
scas
call
mov
shrl
loop
mov
inc
sub
pop
pop
fmull
pop
fdivs
inc
ja
xor
add
jns
add
mov
cmp
pop
push
or
fistpll
sub
imul
leave
inc
shll
insb
pop
or
popa
cs
push
test
js
cwtl
pop
xchg
mov
add
sub
inc
out
inc
push
push
jg
fdivl
rcrl
dec
jne
lods
adc
push
nop
xchg
mov
and
addb
and
inc
adc
xchg
jns
cmc
jle
mov
outsb
out
mov
xlat
inc
mov
push
ja
cmpsb
sarl
cmp
mov
xor
aas
cltd
js
inc
push
aas
outsb
sbb
mov
and
into
xor
push
and
pop
jb
push
mov
scas
pushf
insb
pop
xor
pop
sbb
jg
xor
mov
idiv
and
lods
leave
das
jecxz
adc
in
sbb
mov
jb
jo
pop
pop
xchg
stos
mov
mov
pop
xor
or
std
andl
sub
call
psrad
repnz
pusha
add
ss
rcrb
cwtl
jl
dec
cwtl
jne
movl
out
dec
adc
cmpsl
clc
test
hlt
iret
jg
ds
clc
or
daa
std
fdivrs
dec
mov
and
sub
outsb
leave
das
fidivrs
mov
pop
or
pop
jl
xchg
outsb
sahf
stc
sbb
cltd
call
jbe
mov
inc
sbb
pop
push
popa
cwtl
dec
icebp
stc
cmp
push
sub
jo
pop
or
xor
leave
dec
pop
scas
xor
sbb
adc
data16
or
shlb
repz
jb
mov
xchg
and
and
mov
pop
ds
jmp
shl
fisubl
inc
das
mov
nop
cmovg
push
std
mov
fcomps
ficompl
lds
insl
scas
testl
fs
add
mov
push
and
cld
add
test
pop
dec
fcompl
fwait
sbb
mov
xor
jne
and
add
mov
cltd
sub
ror
fcomps
push
loopne
std
jg
add
imul
cld
stos
mov
aam
cmpsl
shrl
inc
test
push
out
pusha
xchg
clc
mov
iret
adc
movsb
xor
test
xchg
xchg
mov
add
in
inc
jle
dec
lods
lcall
int3
lcall
xchg
add
push
int
sub
push
push
dec
cmp
cltd
inc
pushf
sbb
cmp
dec
pop
shlb
loope
add
inc
adc
pop
loope
in
mov
mov
push
das
push
loopne
stos
loope
stos
mov
mov
icebp
stos
and
push
out
mov
stos
arpl
aas
daa
loopne
push
sbb
push
dec
inc
inc
sbb
popw
ret
sbb
add
aad
imul
popa
pushf
es
sbb
jle
stc
mov
call
xlat
sbb
jp
sub
test
notb
cmp
dec
dec
loop
or
sbb
fnstsw
test
movsl
rcrb
aad
jge
aas
or
mov
or
mov
loope
icebp
or
adc
dec
fidivrl
sub
es
addr16
iret
scas
push
test
xchg
dec
das
inc
test
pop
jl
orl
xor
out
iret
push
and
scas
nop
pop
lods
pop
cwtl
loopne
xchg
fildll
cmp
add
jp
sbb
adc
cmp
push
cld
mov
push
xor
jecxz
bswap
pop
inc
mov
sbb
push
cmc
jmp
xchg
push
call
lock
jl
add
mov
cli
mov
div
test
xchg
jno
sub
cmpsl
imul
mov
es
popf
mov
mov
ror
or
scas
lods
pusha
fmull
fs
out
pop
cmp
cmovb
xchg
movsl
mov
imulb
xchg
xchg
neg
iret
faddl
or
dec
xchg
cmp
push
cs
jl
adc
das
cmp
cmp
notb
fidivrs
xchg
scas
addl
in
loop
pop
mov
pop
roll
sbb
popa
popf
sub
cmpsl
and
sarb
cmpsl
mov
bnd
jmp
into
stos
pop
popa
inc
rcl
aaa
jmp
sub
loop
test
iret
add
arpl
xor
dec
mov
mov
push
cltd
sbb
or
sub
fistl
rclb
fsubrs
sub
outsw
fs
sbb
loopne
xor
sbb
add
or
ret
xlat
test
frstor
sbb
test
and
fwait
movsb
adc
mov
or
stc
dec
call
cmp
pop
dec
outsl
mov
sbb
fldl
lods
jmp
cmc
inc
jno
xchg
pop
mov
mov
lcall
cli
in
xchg
sub
mov
adc
sbb
sub
out
sub
sub
cmp
das
and
rcrl
pop
loop
xchg
and
pop
movsl
addl
mov
out
mov
jmp
xchg
int3
pop
push
cs
jne
jmp
ljmp
ljmp
ljmp
fisubrs
cmp
aam
add
pshufw
and
jmp
mov
std
arpl
dec
andl
popa
clc
jmp
and
lock
ret
lret
mov
pop
push
ds
cli
sarb
inc
inc
mov
dec
loope
loopne
mov
push
ljmp
pop
pop
pop
fcmovnb
sarb
xor
cmp
jle
dec
imul
movsl
push
test
shlb
xor
test
popa
inc
mov
xor
inc
push
out
in
xor
push
cli
out
xchg
shl
xor
sub
adc
lock
cmp
lret
mov
idivl
sahf
js
jbe
std
sub
mov
push
aam
or
cld
test
push
shrl
fwait
xor
daa
cmp
pop
decb
fsubl
icebp
cld
ret
gs
sar
dec
in
add
or
pop
jno
popa
aam
aam
cmp
pop
popa
dec
adc
pop
push
hlt
pop
cmp
and
and
fwait
push
xchg
xchg
or
shlb
fistl
fiaddl
rclb
jmp
cmp
arpl
or
and
test
push
mov
add
pop
adcb
into
clc
lods
mov
aaa
adc
nop
loop
pop
fs
in
in
inc
xchg
ljmp
sub
xlat
xor
mov
or
cli
movsl
repnz
outsl
sub
scas
leave
in
aam
sub
or
or
sbb
push
add
test
mov
cmp
mov
mov
popa
jnp
and
push
shll
mov
es
push
mov
fwait
push
repz
loopne
pop
jae
cld
xchg
and
xchg
and
fucomi
jae
inc
push
pusha
xchg
push
jo
sub
ret
loopne
xchg
daa
jae
adc
int3
fildll
in
sahf
not
cmp
fnstcw
negl
jno
ss
insl
les
cmp
push
fpatan
cltd
xchg
pop
bound
lock
dec
sub
dec
pop
xchg
mov
mov
push
stos
call
xchg
mov
pop
sbb
adc
jle
jo
test
push
in
and
and
add
mov
daa
and
aam
into
dec
jg
or
or
aas
insb
repnz
dec
ja
sub
lcall
sti
or
xor
nop
int3
add
inc
stc
push
add
mov
jle
cmc
aas
or
das
and
stc
fimull
jecxz
outsl
xchg
sbb
mov
mov
rorl
fst
arpl
neg
iret
xchg
test
or
jno
scas
push
sti
lods
andb
imul
fistps
push
out
outsb
mov
insb
repz
pop
sub
dec
cltd
fiadds
sub
adc
pop
sbb
ret
or
sti
and
fbstp
jmp
dec
imul
loope
rolb
sub
lods
inc
lea
pusha
pop
cmp
stos
xor
or
adc
mov
cmp
cmp
mov
xchg
mov
ror
mov
gs
andl
mov
sbb
dec
adc
out
xchg
push
rcr
int3
sbb
in
into
pop
mov
lds
jl
test
lods
cmp
mov
xor
mov
xchg
add
fidivrl
jb
mov
push
push
int
iret
or
mov
aas
xor
jae
fisttps
xchg
pop
into
or
fs
lock
and
icebp
cltd
push
test
xchg
sub
push
mov
and
repnz
aas
pop
into
xchg
movsb
xor
xchg
or
sbb
sbb
xor
adc
xor
xlat
dec
leave
inc
mov
fwait
test
out
mov
test
scas
int3
and
dec
inc
jle
outsb
icebp
jbe
icebp
xchg
cs
xchg
inc
popf
pop
mov
fdivrl
lahf
pusha
enter
pop
mov
movsb
loop
int3
add
enter
cmpl
xor
xlat
stos
push
insl
lds
test
push
xor
push
insb
hlt
clc
jne
mov
loop
xchg
mov
fisttps
inc
fistps
xchg
mov
daa
dec
pcmpeqd
popa
sbbb
insl
or
test
push
dec
mov
xor
mov
int3
fwait
mov
jmp
dec
jle
mov
fwait
cmpsb
xchg
sbbl
jmp
sub
daa
loope
dec
mov
fbstp
inc
xor
popf
mov
lods
and
data16
cmp
movntps
movsl
xor
ror
mov
testb
mov
out
shrb
dec
repz
lds
jae
fistpl
imul
mov
pop
add
jb
pop
hlt
sbb
xorl
popf
aaa
std
ja
pop
add
xor
xor
cmpsb
cwtl
mov
stc
or
enter
rorb
push
ret
push
push
shll
mov
and
ja
cmpl
aad
sub
inc
iret
inc
mov
pop
sbb
sarl
add
lahf
in
sahf
inc
ret
xchg
incb
push
xor
int3
pop
xor
sub
dec
cli
test
or
add
xlat
rorb
repz
lds
notl
les
cmp
lea
movsl
enter
lret
sbb
shlb
jmp
cltd
imul
sbb
in
pop
xchg
pop
inc
jb
jecxz
rorl
jo
repz
aas
divl
loopne
mov
je
rcr
stos
mov
decl
jg
shlb
cmpsl
pop
jno
test
and
mov
jo
xchg
hlt
dec
jne
xor
leave
lret
mov
or
lret
xchg
pop
pop
mov
js
dec
lods
lahf
jmp
xchg
adcb
mov
pop
mov
push
das
xlat
stos
dec
test
adc
push
cmpsb
cmc
and
cmp
test
mov
jge
idivl
daa
into
pop
pop
jge
or
pop
subl
es
fidivl
das
arpl
imul
pop
das
mov
and
cld
add
std
cld
ret
dec
cmp
ret
pop
adc
cmpb
cmp
sahf
and
popf
pop
cmp
jo
popl
aam
push
jle
scas
in
and
ss
mov
xlat
jns
pop
jp
jne
out
jecxz
mov
daa
sub
inc
into
aam
mov
sarb
lcall
jb
insb
pop
vhsubps
xchg
sarb
xchg
mul
cmpsb
fld
adc
int3
jnp
data16
pop
or
rcr
add
lret
sbb
bound
sbb
data16
xor
dec
pop
insb
adc
loopne
fisttpl
js
xchg
andl
cmp
nop
sbb
mov
pusha
add
sbb
ja
addr16
inc
inc
add
aad
push
lret
iret
sahf
scas
cmp
std
push
sbb
pusha
push
sbb
lcall
add
push
pushf
jns
add
aas
pusha
cmp
mov
xlat
sub
cmp
push
in
cwtl
insb
rcrl
test
pop
fisttps
ja
loopne
mov
jmp
sub
dec
push
rorl
mov
cmp
xor
cmp
aaa
jmp
cmpsl
inc
and
nop
mov
fiadds
movsb
mov
jl
insb
inc
insl
push
subb
dec
lock
mov
loope
call
cld
bnd
andl
lahf
and
push
adc
push
adc
jb
xchg
sbb
out
mov
movsb
lret
jp
add
sbb
cmp
xchg
enter
in
jnp
sub
sub
mov
push
data16
rcl
pop
and
mov
inc
xor
lock
push
sbb
xor
inc
in
mov
cmp
loop
roll
mov
add
popa
sub
inc
mov
push
pop
xchg
push
inc
aam
bound
push
rorb
jmp
add
jg
std
pushf
aas
inc
jnp
dec
das
into
subb
js
adc
push
cmp
and
mov
add
ret
mov
mov
push
in
inc
rcl
jns
and
out
popf
arpl
xorb
lret
jle
inc
std
or
add
sbb
ljmp
popa
adc
fldl
in
loope
mov
and
ja
mov
popa
cmp
das
jp
cmp
pushf
ljmp
jl
fstp
repz
divl
daa
inc
or
xchg
mov
fwait
mov
jecxz
or
outsb
xchg
push
push
push
popa
bound
iret
hlt
adc
sub
mov
cmpb
insb
pop
xlat
mulb
sahf
push
mov
add
pop
sbb
icebp
and
orb
loope
subb
loop
mov
popa
push
scas
cwtl
pop
sbb
mov
in
mov
loope
xchg
cmc
dec
mov
inc
xchg
xchg
inc
out
sub
aaa
lret
mov
xor
mov
xchg
mov
pop
inc
lods
jae
jns
push
mull
lahf
dec
mov
lea
inc
mov
cmpsb
jg
cmp
lret
cmpb
mov
cmc
mov
pop
out
pop
mov
imul
sbb
pop
push
fsubrs
adc
push
cli
xlat
lods
rcrb
loop
adc
add
add
cmp
jl
cld
sbb
dec
cmp
add
mov
inc
mov
jbe
movsb
iret
jl
arpl
dec
loop
and
jno
mov
mov
jbe,pn
loop
lret
in
dec
out
push
or
lret
cltd
inc
xchg
in
add
scas
les
stc
repnz
jb
imul
jp
fwait
pop
insb
mov
dec
gs
fsubs
jo
roll
add
sbb
xor
mov
mov
adc
push
lcall
push
xchg
icebp
and
add
or
cmp
fwait
sub
xor
lcall
aad
negb
inc
adc
mov
pop
or
xor
adc
std
call
test
outsl
insb
inc
jae
adc
xor
icebp
fsubl
stos
idiv
mov
icebp
lods
mov
and
das
pop
gs
jo
pop
ret
ficomps
fcmovbe
ds
xchg
jns
and
mov
adc
adc
pop
mov
jne
dec
xor
into
and
stos
mov
push
xchg
hlt
fdivl
mov
pop
pop
xlat
test
mov
dec
fnsave
insb
adc
xchg
int
push
sbb
negl
mov
aaa
movsb
mov
xchg
jbe
pop
fsub
add
inc
loop
scas
mov
test
mov
cmpsb
popf
push
enter
push
or
mov
inc
loope
mov
les
ss
movsb
shlb
push
mov
imul
les
gs
add
leave
movsb
hlt
jmp
adc
ret
push
mov
int3
ret
adc
cltd
es
or
jnp
aas
stc
jae
lods
rcrl
cmpsb
sub
jp
xor
mov
sbbl
imul
int3
and
lds
enter
or
dec
sbb
xchg
inc
outsb
mov
ljmp
pop
push
icebp
xor
add
push
ret
lahf
aaa
test
lods
adc
mov
or
ret
data16
add
js
pop
adc
outsl
iret
movsb
dec
loope
lea
dec
cmpsl
repnz
adc
fdivrs
mov
mov
add
ror
xor
imul
loop
in
xor
push
loope
cmpsb
adc
sbb
aaa
out
xchg
sahf
std
std
mov
jns
push
lahf
cld
inc
jb
in
mov
stc
and
ljmp
mov
push
cmp
bound
into
or
psrlq
sbb
fidivrl
and
int3
cltd
pop
pop
cld
xchg
pop
push
cwtl
in
out
mov
or
push
hlt
shrl
xchg
fmul
mov
adc
test
adc
aam
xchg
cmp
fldcw
stos
cmp
jecxz
jo
stc
cmp
std
enter
bound
arpl
add
bound
icebp
js
pushf
xor
dec
and
sub
mov
pop
xchg
loopne
xor
inc
xchg
push
imul
ljmp
bound
imul
cmp
loopne
and
lea
dec
and
mov
mov
lods
lahf
push
pop
xor
addr16
pop
cli
push
inc
push
stos
imul
ficompl
mov
or
xchg
mov
lret
adc
xchg
cmp
jecxz
push
pop
sbb
je
and
inc
jbe
popa
pop
aas
jno
inc
mov
xor
mov
push
rcrb
cltd
xor
call
pop
push
adcb
inc
lods
orl
pop
cmpsl
push
in
in
je
inc
inc
movsl
into
cmp
enter
shll
or
pop
mov
lods
dec
insb
xchg
ret
mov
mov
data16
sarl
dec
mov
fnsave
sbb
shr
mov
pusha
jae
addb
iret
out
adc
add
add
sub
insb
add
xchg
inc
pop
dec
shlb
jle
gs
jnp
xchg
into
adc
dec
ret
mov
add
push
inc
sbb
pop
test
mov
cwtl
test
call
fldl
enter
mov
jg,pn
lea
in
test
popa
rorl
jns
or
jge
or
xchg
mov
cmpsb
fsts
inc
pushf
jnp
and
adc
mov
aad
sub
push
arpl
cs
jle
leave
cld
fsubs
or
popf
xchg
jne
ds
jne
adc
jno
lock
adc
jp
pop
pop
aaa
stc
lods
inc
add
cs
or
sub
inc
aam
pop
fdivs
lods
stc
pop
xor
adcb
fsubr
mov
into
mov
ds
push
xchg
aad
inc
jb
sti
aad
ds
scas
es
daa
xor
andl
pusha
cmpsl
xor
hlt
xor
jo
out
sub
mov
dec
sbb
xchg
adc
cld
aas
pop
mov
add
inc
leave
fists
inc
rorl
push
push
cwtl
rcll
orl
or
jnp
pop
fwait
jle
adc
inc
push
ljmp
shlb
cmp
adc
test
std
adc
cmp
mov
inc
cmc
lea
mov
mov
ljmp
pusha
movsl
movsb
pop
dec
rcrl
push
cmp
and
shrb
cmpsl
push
add
sahf
jnp
pop
movq
shll
mov
pop
lds
add
mov
lock
int3
and
iret
cs
sbb
test
or
cmpsl
sti
xor
ficompl
jb
dec
in
pushf
andb
sub
lret
std
dec
push
jl
jo
lahf
adc
or
in
adcl
ret
cmpsb
pop
cld
xor
xor
aam
cmp
sub
xor
scas
mov
cmpsb
adc
lahf
dec
cmp
inc
cli
fucomp
xchg
pop
mov
mov
inc
stos
push
and
jns
add
int
inc
mov
std
mov
mov
dec
mov
mov
mov
ret
fs
fcomi
int
mov
scas
cmp
inc
push
ret
test
push
popl
out
pop
add
test
push
mov
stos
fucomip
mov
mov
into
testb
sub
aam
mov
xchg
int3
aaa
and
out
push
fldcw
incb
in
pushf
popa
pusha
enter
loop
or
pop
sbb
rcll
mov
jge
sbb
jecxz
add
sbb
xchg
and
addr16
loop
jmp
sbb
push
divl
xchg
into
pop
jo
cwtl
leave
sbb
jge
dec
int3
jle
pop
add
mov
mov
rcr
test
sub
add
xor
test
ret
mov
movsl
bnd
in
movsb
mov
fisttpll
push
add
cli
dec
arpl
mov
cmp
lcall
bound
bnd
mov
ficomps
cmp
mov
mov
into
pushf
stos
sub
into
test
lret
jle
int
lock
sbb
ss
ret
and
xchg
jl
std
cmp
pop
test
and
add
fxch
lock
push
ds
movsb
adc
dec
sub
inc
mov
mov
dec
and
enter
add
mov
xchg
jbe
mov
addb
push
xchg
scas
mov
sbb
shr
rcrb
mov
test
popa
pushf
xchg
inc
shr
xchg
jae
pop
or
mov
dec
aam
jp
dec
std
loopne
je
ret
or
xchg
mov
movsb
mov
sbb
sbb
jmp
dec
ja
bound
fildl
xor
dec
cld
mov
int
inc
and
aas
daa
rorb
xchg
mov
ljmp
out
aam
inc
pop
sub
mov
fwait
lods
in
clc
mov
les
ja
sbbl
mov
cld
mov
or
testb
movsl
mov
dec
ror
fistpl
pop
xchg
push
inc
sbb
shl
push
sahf
sub
jge
cmp
dec
iret
test
aas
ja
out
loope
daa
call
sti
in
cmp
mov
pop
int3
fcompl
in
sbb
inc
in
ret
lret
lods
sub
sub
pop
push
out
mov
out
gs
ret
sti
pop
pop
popl
mov
add
scas
addr16
xor
xor
mov
bound
es
mov
pop
sub
rcll
int3
jae
not
into
out
xor
aas
sar
push
pushl
das
dec
dec
enter
aad
and
mov
cmpsl
lods
movsl
jmp
adc
mov
adc
bound
insl
iret
aas
lcall
lea
push
xchg
insb
cmpsb
ja
jno
aas
mov
mov
add
aad
cs
add
sub
fmull
popa
andl
jae
cmp
rcrl
lahf
adc
fisttpl
mov
sti
loop
movsl
imul
gs
lds
adc
xchg
in
xchg
cmp
inc
jp
inc
xchg
jmp
pop
fldcw
ud1
inc
mov
jne
mov
jb
pop
and
test
xor
mov
sarl
fisttpll
xor
xor
push
jg
clc
sbb
test
mov
int3
jmp
mov
imul
cmp
lods
sbb
adc
and
out
mov
dec
mov
stos
ss
leave
addb
std
out
jle
mov
sbb
je
pop
or
test
and
mov
mov
sub
pop
das
pop
add
stos
xor
adc
jmp
lret
push
hlt
inc
mov
lds
rcll
scas
leave
push
sub
popa
ds
lret
test
adc
push
hlt
cmpsl
sbb
xor
decb
in
xor
fldenv
andl
mov
xchg
les
ret
insl
jae
cmp
mov
imul
push
jge
add
dec
mov
ss
ficomps
sbbl
pusha
movntq
adc
or
int
psrld
out
pop
repnz
push
pop
mov
shl
jne
dec
stos
or
mov
mov
pusha
pop
sarl
mov
mov
daa
inc
cmc
or
test
xchg
push
paddw
cs
jbe
pop
mov
sbb
push
imul
adc
repz
xor
sti
inc
jmp
xor
scas
sub
loop
lret
mov
push
sbb
push
xor
mov
push
nop
int3
or
adc
lods
in
mov
sarl
dec
adc
push
jg
adc
and
push
dec
imul
push
sarl
mov
lods
push
push
rcrb
inc
clc
dec
add
add
mov
imul
sbb
sub
insb
sahf
nop
mov
mov
mov
notb
out
push
mov
leave
push
pop
in
inc
mov
mov
lock
sahf
xor
in
pop
sahf
mov
out
and
push
cmp
jp
or
ja
push
mov
mov
call
dec
mov
xchg
xor
cmp
inc
or
push
xchg
inc
mov
cmpsl
pop
pop
in
inc
inc
adc
lea
mov
roll
push
call
push
add
out
pop
fst
dec
in
lret
push
leave
push
lahf
mov
xchg
cwtl
xlat
ds
cmc
repz
adc
push
adc
data16
imul
jmp
movsl
lret
mov
int3
inc
sarb
xor
out
push
sub
sub
jns
push
int
rcll
cmp
int3
adc
xchg
mov
int3
roll
int
mov
cld
push
aas
push
xchg
aaa
xchg
orl
roll
and
mov
mov
daa
jb
add
pop
xor
stos
pop
out
fcoms
jmp
loope
test
adc
sub
adc
test
sti
and
sqrtps
mov
ss
outsl
push
add
push
inc
loop
fcompl
fstl
xor
add
mov
jge
mov
xchg
repz
rolb
pop
jnp
jnp
out
insb
and
insl
push
mov
stos
lods
jmp
and
adc
popl
in
out
pushf
mov
sub
inc
sub
test
std
popa
subb
xchg
and
mov
cli
inc
add
dec
inc
dec
je
mov
jmp
mov
loopne
jbe
arpl
cmp
pop
dec
mov
in
cmp
lret
push
clc
jns
cmp
or
push
mov
add
xlat
repnz
xor
ja
addb
std
jmp
mov
inc
rclb
leave
test
jge
inc
lds
or
fldenv
data16
adc
ljmp
adc
in
mov
ljmp
xchg
outsl
mov
xchg
clc
push
ret
add
or
data16
adc
xchg
jnp
mov
enter
in
das
xor
repnz
mov
repz
imul
into
sbb
fbstp
mov
push
gs
fucom
push
into
mov
lods
stos
mov
pop
mov
je
movsb
insb
or
stos
ret
cld
pushf
mov
bnd
mov
pusha
test
ret
or
in
icebp
jle
sahf
insl
test
pop
mov
xchg
test
outsb
sbb
jns
es
incl
fstpl
add
hlt
ret
ljmp
and
std
sbb
outsb
cmp
scas
cmpsb
mov
ss
sub
cmp
inc
push
add
cmp
push
test
xor
push
int
and
xor
xchg
push
movb
mov
adc
fstpl
repnz
cli
ret
movsb
fidivrs
ja
imul
stos
cld
sub
fwait
pop
out
adc
cltd
in
inc
add
out
je
lcall
or
fwait
add
popa
fstl
sbb
arpl
add
inc
xchg
pushf
sub
push
ds
inc
mov
mov
push
cmpsl
out
mov
cli
in
mov
mov
scas
mov
addr16
dec
pop
mov
mov
cmp
or
addr16
scas
cmpsl
sbb
scas
jne
int
je
or
imul
sahf
inc
dec
jmp
bound
out
je
pop
cmp
push
lcall
jne
popa
mov
es
push
pop
push
rcrl
sbb
dec
fcmovnu
cmp
mov
icebp
sbb
mov
fists
xor
xchg
jo
push
mov
sbb
inc
jo
jae
stos
mov
dec
insl
cmc
aas
cs
fisubs
loop
les
lahf
lcall
cmp
cs
xor
lcall
pusha
pop
sbb
fucomip
sbb
pop
and
pop
insb
stc
pop
xchg
mov
add
pusha
lcall
cwtl
push
imul
mov
test
xor
orl
push
mov
jmp
pusha
ja
xchg
sub
pop
test
adc
push
cld
out
fadds
aad
pop
and
jb
pop
enter
out
fnstenv
cli
test
popf
and
pop
xchg
sbbb
cmp
or
xchg
je
adc
in
data16
stos
fimull
xor
jmp
movsb
shrb
out
mov
adc
cli
xor
mov
sub
lods
lcall
popa
jl
or
or
ja
jns
lds
xchg
icebp
jmp
inc
mov
dec
or
incb
lods
jns
xor
pushf
mov
pusha
shr
push
aas
gs
mov
lods
outsb
or
mov
insl
out
je
bound
fsubrs
int3
and
mov
cltd
imull
jecxz
xor
mov
add
sub
jae
fnstenv
sbb
aad
mov
addb
fsts
icebp
xor
es
jnp
xchg
dec
pushf
xor
jecxz
mov
icebp
fnsave
ja
lds
fwait
out
ss
insl
jns
cld
ss
mov
cmp
lea
or
or
jno
clc
inc
mov
xor
push
fdivs
jae
pop
jns
sbb
adc
mov
or
or
in
hlt
call
inc
and
xchg
inc
jne
ret
mov
sub
test
xchg
mov
fstp
cwtl
mov
ja
pop
pop
jno
aad
into
jge
jno
xor
mov
out
test
and
pop
xor
cmp
jge
push
xlat
xchg
in
sub
xchg
imul
outsl
mov
test
scas
lods
mov
and
aam
push
and
mov
pop
loop
jmp
jge
xor
xchg
imul
lods
pusha
aaa
cmpsl
enter
mov
stos
fwait
lret
adc
outsl
pop
mov
fisubs
adc
add
adc
xchg
and
or
int3
pusha
imul
sbb
mov
inc
lret
sub
add
sbb
pop
mov
mov
mov
das
hlt
mov
xor
jge
sub
ret
adc
ror
xchg
push
popa
push
lahf
fwait
pop
push
ds
ret
xchg
jbe
or
mov
enter
and
mov
jp
fdivrl
and
pop
cld
push
cmp
mov
ficoml
push
cmp
ja
mov
push
rclb
adc
outsb
outsl
into
add
dec
cmp
push
shrb
mov
pop
arpl
out
pop
jge
jo
push
and
aas
and
inc
mov
sbb
add
out
or
loop
adc
inc
in
gs
js
mov
jo
jns
lods
pop
jmp
bnd
push
enter
pop
outsb
ret
addl
mov
in
mov
push
mov
or
stos
cmp
mov
jno
push
mov
lods
or
dec
imul
pop
ljmp
daa
ret
je
mov
mov
push
sub
add
mov
mov
test
sti
lds
xchg
jl
repz
mov
notb
xor
push
xor
xor
addr16
mov
in
nopl
pusha
andb
inc
mov
xchg
in
inc
sbb
adc
jge
inc
in
cmpsb
lea
mov
sub
mov
or
jg
mov
subb
fidivrs
loop
pop
pop
fistps
pop
jns
leave
sarl
mov
clc
out
inc
aaa
xchg
inc
inc
insl
pushf
xorl
or
loop
aam
mov
sbb
and
xchg
and
sbb
xor
out
std
push
stc
repz
dec
pop
sub
shlb
or
push
out
pop
lock
frstor
push
push
mov
dec
lea
and
sbb
lcall
sbb
in
out
call
pushl
inc
movsbl
and
jp
jbe
insl
iret
push
cmp
aad
call
pushl
cmp
push
aas
test
rclb
mov
aas
jge
cwtl
pop
outsb
xor
adc
js
xchg
fistpl
cld
ret
loop
push
adc
stos
insb
jbe
clc
xchg
hlt
nop
jp
jle
nop
cmpsl
adc
adc
les
jne
push
mov
sub
scas
xor
jb
and
jns
pop
sbb
adc
cmp
mov
mov
mov
mov
scas
es
pop
in
jmp
mov
inc
push
push
aaa
lahf
pop
divl
rcl
inc
aas
sub
cs
jae
mov
test
cltd
cmpsb
mov
test
leave
mov
xchg
mov
xchg
sub
sub
les
add
xor
mov
bound
lcall
mov
mov
push
daa
sbb
imul
clc
and
ds
call
repnz
pop
loopne
dec
pop
mov
mov
xor
ss
cld
mov
adc
jo
xchg
fwait
cltd
or
rcrl
out
les
mov
div
xchg
jmp
xchg
push
insb
or
lock
cwtl
es
pusha
mov
dec
jns
stc
jnp
mov
xlat
mov
cmc
fmuls
popa
dec
imul
nop
fldl
jmp
jo
inc
xor
jo
ja
inc
cltd
fnsave
pop
inc
leave
andb
sbb
dec
fildl
ret
lret
cmp
cld
fsubrs
mov
addl
xor
shll
mov
outsl
in
movsl
outsb
pop
test
loop
sbb
cs
lock
out
mov
aad
scas
arpl
in
imul
or
fisttps
dec
loopne
jne
fists
pusha
fnstsw
fstpt
sahf
jle
test
pop
jo
xchg
pop
into
fistpll
jl
xchg
jmp
cmp
outsb
in
inc
mov
mov
imul
inc
ljmp
les
data16
pop
mov
shrb
loopne
in
push
ds
int3
mov
aas
sar
ja
push
jb
add
xlat
cmpsl
dec
xchg
scas
pop
sub
call
lahf
idivb
jno
lcall
outsl
cli
data16
add
or
mov
iret
ljmp
adc
or
mov
mov
loopne
sbb
cld
int
scas
sub
mov
inc
dec
lret
xchg
jecxz
das
sub
mov
test
lods
xlat
hlt
imul
rcll
lcall
push
xlat
test
in
fwait
pop
incb
push
fwait
fldcw
push
pop
lcall
xchg
fcomps
adc
fst
mov
les
or
loopne
jne
mov
or
push
dec
mov
call
mov
lods
ja
ja
xchg
rclb
mov
push
insb
fists
jnp
jbe
dec
pop
rorb
popa
sbb
ljmp
or
jno
push
push
sbb
stos
shl
shrb
imul
or
call
add
pop
cmpsb
mov
lea
xor
cmp
push
push
hlt
jb
into
xor
sub
and
mov
stc
popa
and
out
not
push
push
roll
rorb
adc
add
dec
into
and
push
push
mov
idiv
cmp
pop
ret
or
pop
sbb
movsb
add
mov
bound
int
jne
dec
xchg
jne
add
jg
jno
push
xchg
sub
icebp
jnp
push
stc
or
adc
push
les
inc
in
call
cld
sbb
push
out
fisttps
int3
inc
js
jl
subl
push
sbb
mov
xchg
jg
lcall
mov
inc
shl
out
std
aas
call
scas
pop
xor
iret
addr16
jns
jp
out
cmp
sbb
xorb
popf
mov
int
add
or
daa
add
test
out
mov
jp
pop
addr16
int
adc
or
lcall
xor
arpl
rorb
mov
add
jb
sub
jo
dec
push
mov
test
out
mov
iret
jbe
dec
int3
hlt
ss
xchg
lds
int3
aad
test
mov
jl
mov
nop
xchg
sbb
lret
adc
dec
outsb
dec
pop
int
xor
lds
leave
out
pushl
dec
push
popf
repnz
loopne
pop
pop
push
scas
into
mov
mov
les
lock
xor
pop
loope
push
js
sub
mul
adc
ljmp
push
cmp
mov
shlb
mov
sarb
rcrb
cs
movb
sbb
ljmp
aaa
insl
mov
jbe
dec
dec
data16
loop
pop
aas
scas
jg,pt
pop
sub
pop
adc
aam
je
cld
movsl
or
lock
fsubl
or
mov
lret
push
loop
pushf
or
lods
test
rol
lahf
cltd
dec
ja
test
push
cs
mov
cmp
stc
cmp
xor
jle
dec
int
hlt
pop
sbb
and
push
lcall
lds
jae
mov
mov
insl
mov
out
jmp
and
in
pinsrw
imul
sbb
push
inc
clc
shll
sbb
les
dec
push
mov
inc
jg
lea
dec
test
mov
mov
ja
nop
scas
xor
sbb
sub
xor
call
sbb
lds
jbe
pop
dec
rcrl
js
mov
and
popa
mov
or
mov
jnp
cmp
xchg
jbe
or
dec
inc
out
loopne
mov
mov
mov
pop
out
pop
and
mov
xor
popa
and
stos
and
in
sti
sub
pop
popf
scas
sbb
mov
dec
adc
fbld
adc
push
adc
fcoml
repz
sub
pop
leave
and
in
fnstcw
icebp
pop
mov
mov
movsl
sets
xchg
mov
jecxz
arpl
jle
into
ret
pop
push
push
mov
test
pop
insb
pop
pop
or
pusha
xchg
ljmp
das
imul
test
sub
mov
xchg
sub
out
mov
add
ret
gs
adc
adc
ljmp
movsb
xchg
mov
pop
xor
pop
push
inc
xlat
ficompl
mov
out
push
pop
and
jnp
outsl
ds
mov
clc
jg
mov
mov
lock
out
push
int3
int3
xorb
and
test
loopne
fcmovnu
pop
call
xor
insl
xor
imul
mov
adc
scas
fildl
into
test
add
addr16
fwait
sbb
xchg
push
lods
inc
mov
sub
sahf
or
roll
jmp
and
imul
mov
mov
xchg
std
push
push
das
imul
aas
sti
pop
js
jmp
xlat
lcall
subl
je
in
faddp
xchg
jmp
fwait
inc
and
repnz
movsb
push
adc
das
lret
mov
mov
adc
cmc
or
mov
aam
adc
and
sti
test
repnz
int3
stos
sub
mov
std
inc
shl
out
scas
cmp
push
loop
test
mov
pop
mov
mov
push
pop
stc
into
inc
daa
push
sarl
shrl
insl
lock
out
cwtl
ficoms
jbe
inc
mov
cmp
xor
push
je
sarl
inc
push
mov
out
push
push
push
fwait
jnp
mov
add
ret
rolb
xchg
stos
daa
inc
xchg
cmp
pushf
jecxz
add
ljmp
inc
adc
je
cmp
dec
jmp
movntq
pop
mov
das
jge
dec
jmp
add
in
add
dec
pop
imul
jns
and
and
push
pop
or
in
and
add
fucom
mov
adc
cmpsb
xlat
jb
dec
mov
in
mov
mov
adc
repnz
rol
or
lret
sbb
sub
fisttpll
in
xchg
arpl
loopne
sub
addr16
rcl
out
dec
inc
stc
enter
inc
pop
pop
pop
fadds
push
cmovns
repz
or
in
cmovs
fnstsw
mov
scas
dec
mov
mov
popa
loope
sub
jmp
lahf
stos
push
jnp
dec
test
mov
nop
push
out
repnz
shll
std
test
ret
cmp
fwait
in
jo
sti
add
mov
in
push
scas
inc
ficomps
cs
mov
sub
mov
shlb
cmp
js
sbb
popf
sbb
xchg
mov
mov
jecxz
dec
cwtl
ss
push
or
cmp
movsl
push
insb
lock
and
jb
add
pop
push
mov
std
xor
cmp
jno
nop
xchg
les
fisubs
xor
testl
ffree
sbb
dec
enter
shll
rcl
and
cltd
or
pop
cmp
sbb
iret
popa
push
hlt
sbb
sbb
jmp
mov
adc
mov
sub
fisttps
push
fldcw
loopne
fs
push
and
mov
popf
mov
rorl
cld
xor
xchg
cli
in
lahf
mov
jp
mov
xchg
test
imul
or
clc
ds
mov
or
test
into
mov
xchg
je
dec
aaa
shll
sbb
lcall
jo
sbb
out
popf
push
jne
aad
push
addr16
adc
cmp
movsl
mov
fildl
cmpsb
cld
push
movsb
jnp
cmp
sbb
mov
and
pop
scas
add
mov
xlat
dec
scas
cmp
pop
mov
aam
arpl
into
or
subl
loop
add
mov
and
hlt
shrl
adc
gs
xor
test
out
or
pop
push
xchg
and
sbb
lret
test
repz
pavgb
rcl
imul
pop
daa
push
cld
jo
fs
pop
mov
mov
xchg
pop
cmc
pop
inc
out
cli
jno
outsl
add
je
cld
in
les
scas
pop
jo
or
das
push
sub
adcl
push
mov
push
dec
push
hlt
inc
scas
sbb
and
test
and
shrb
mov
mov
aas
loope
push
add
mov
sub
ds
test
adc
popf
orb
push
xor
push
sti
lret
not
dec
or
das
lcall
pop
xchg
jb
std
mov
xchg
add
pop
pop
mov
add
std
lahf
sub
popf
shrl
sbb
sbb
mov
pop
push
jmp
pop
test
scas
sbb
pop
dec
sbb
jb
mov
xor
lods
fdivl
xchg
inc
add
cli
jnp
subl
dec
std
jne
add
cmp
imul
sub
les
testl
cmc
inc
add
and
xlat
jns
hlt
jno
shl
fcompp
push
cmp
dec
js
les
add
mov
sbb
es
insb
lret
sub
out
push
mov
out
xor
pop
jp
aad
or
mov
roll
icebp
xchg
mov
adc
xchg
dec
sbb
sbb
inc
gs
push
add
std
shl
add
mov
lods
aad
sub
incl
sti
jne
aam
xchg
mov
push
loop
icebp
lock
mov
outsb
jne
and
pop
daa
lock
mov
clc
jns
push
jo
adc
dec
loop
dec
push
sub
das
idiv
mov
clc
xor
repz
adc
pusha
mov
ss
push
js
push
ss
into
xor
data16
clc
dec
in
inc
inc
inc
sbb
mov
out
push
das
cmc
pop
xchg
imul
pop
sti
xor
mov
loop
rorb
mov
mov
daa
xor
sbb
mov
bound
pop
ret
and
bound
in
dec
cmp
cwtl
pop
call
jecxz
jl
sub
xor
mov
out
shr
rol
or
or
sbb
ss
cmpsl
stc
lret
mov
dec
enter
js
aaa
and
rcr
rcrb
les
sub
nop
orl
pusha
xchg
lret
mov
test
adc
into
test
in
mov
dec
mov
out
sbbl
stos
xchg
divb
xor
clc
dec
xor
dec
pop
mov
in
dec
bound
pop
push
ds
add
inc
add
mov
jle
mov
lods
dec
pop
jno
out
sbb
mov
jae
jb
cmp
jmp
jp
inc
pop
xor
imul
push
fists
pop
pop
pushl
gs
stc
testl
sbb
add
cld
add
jp
scas
inc
cmp
movsl
outsl
mov
jmp
aaa
mov
into
and
sub
out
dec
cmp
xor
pusha
ret
jecxz
cs
pop
dec
in
movsb
jne
cmpsl
push
pop
mov
loop
iret
mov
aaa
arpl
mov
fildll
fsubs
ds
mov
cmp
lods
fstpt
ds
cmp
adc
xor
add
outsl
add
mov
push
push
mov
dec
mov
dec
scas
fcoml
cwtl
mov
sbb
pop
mov
jp
nop
iret
rclb
rorb
sub
mov
dec
lods
jecxz
ja
adc
vphaddwd
inc
jo
ljmp
rcrl
jmp
ds
jmp
pop
rolb
jl
outsb
push
int
inc
incb
dec
fwait
add
jge
daa
add
dec
loopne
inc
mov
andb
sahf
cmp
jbe
scas
repz
add
cmp
cmc
xchg
dec
fdivp
dec
jno
call
sbb
and
dec
repnz
dec
push
mov
frstor
std
and
jo
imul
popl
loop
leave
dec
adc
pop
popa
mov
xchg
push
push
loope
mov
pusha
jmp
add
mov
cwtl
inc
imul
pop
cs
leave
sub
clc
xchg
xchg
in
and
fnstenv
punpcklwd
dec
adc
adc
push
jnp
jecxz
arpl
sub
out
dec
pop
lods
add
xchg
idiv
add
mov
leave
xor
or
sub
sub
inc
mov
pop
mov
xchg
cld
cltd
push
fidivs
pushf
filds
sbbl
inc
aad
inc
and
cwtl
jo
fildll
or
repnz
adc
je
xchg
mulps
sbb
xor
test
fnsave
or
movsb
jmp
or
sbb
aaa
xchg
shlb
aad
gs
sub
dec
adc
loope
loope
cwtl
iret
movsb
pop
repnz
icebp
cmpsl
int3
xchg
cld
push
cmp
and
xchg
lcall
test
or
mov
ja
push
scas
rcrb
sti
mov
loopne
and
pusha
add
loopne
add
inc
push
or
push
xor
orb
jmp
fmul
sub
jecxz
leave
rorl
call
dec
pop
inc
push
push
push
xchg
icebp
mov
jl
loopne
or
jp
loope
cvtps2pi
fstl
jmp
mov
fcomip
dec
pop
iret
repz
loope
rorb
cmpsb
ss
push
xchg
aaa
mov
ljmp
movsl
mov
out
cltd
fstps
inc
fdivs
rclb
es
mov
js
dec
cli
pop
es
jbe
mov
stos
cmp
mov
inc
add
xchg
orb
inc
test
sahf
xor
xlat
xor
stc
call
cltd
in
clc
inc
xor
adcl
and
stos
inc
mov
push
je
mov
jae
aaa
leave
rcrl
nop
inc
xor
dec
xor
pop
xchg
mov
push
sub
dec
cmp
mov
scas
outsl
pop
jns
jae
cmp
pop
lods
hlt
loopne
lock
fcoml
gs
xchg
add
cmp
imul
jnp
ret
dec
loope
xchg
pop
adc
jle
sub
js
xchg
fists
and
out
jb
sbb
push
out
dec
sbb
jp
in
fsubrs
addr16
or
daa
iret
cld
clc
cmp
icebp
mov
das
mov
xor
push
divb
mov
sub
loope
sub
jb
in
lods
and
clc
pop
movsl
mov
pop
dec
fwait
mov
xor
clc
push
bswap
cltd
out
jp
mov
fwait
inc
mov
sbb
icebp
mov
arpl
cmp
stc
mov
adc
add
mov
sub
gs
or
ljmp
cmc
cli
rep
pop
fdivrs
ss
sbb
out
jae
outsl
ret
loop
mov
sub
in
sbb
insb
sbb
clc
lret
scas
flds
mov
add
faddl
xor
pusha
or
pop
push
clc
xchg
jno
in
pushf
insl
dec
xchg
jbe
adc
mov
sub
in
lods
xchg
pop
cmp
fstps
and
or
jns
or
jno
add
insl
and
adc
pop
mov
push
arpl
push
adc
mov
add
or
iret
insl
push
inc
rcrb
andl
lcall
outsl
nop
and
fadds
and
mov
loopne
sarl
pop
in
lea
jmp
jnp
fistpl
pop
fnsave
inc
pop
dec
xor
stos
add
mov
dec
sti
into
dec
adc
jno
mov
nop
outsl
pusha
xlat
or
dec
in
test
outsl
data16
xorb
push
fistpl
subb
inc
mov
or
sub
ret
add
add
sarl
out
pop
pop
push
pop
xor
mov
xchg
mov
or
shrl
iret
inc
mov
loop
push
or
sarb
aam
fs
out
inc
push
fnsave
inc
fidivs
fs
cwtl
negl
adc
aaa
mov
xchg
int3
out
xchg
out
adc
scas
xor
xor
inc
insb
mov
sub
leave
in
imul
fcom
lcall
adc
out
lcall
adc
dec
out
mov
push
dec
adcb
lds
and
cld
insl
xlat
xchg
jne
cs
loop
or
cmpb
call
adc
outsl
xor
shlb
inc
dec
cmp
cmp
insb
jg
in
dec
fs
jo
mov
gs
scas
mov
lahf
sbb
lret
push
lret
fsubs
test
mov
inc
cs
inc
out
int3
jb
jae
inc
jp
addr16
mov
aad
inc
xor
inc
dec
xchg
ljmp
sub
push
mov
xchg
dec
je
sub
outsb
imul
cli
or
xor
pushf
xchg
notb
cmp
dec
imul
subb
mov
xor
and
ljmp
push
pushf
xor
mov
and
jmp
mov
sbb
sub
push
sbb
int3
arpl
test
mov
pop
repnz
adc
xchg
cmp
lds
std
cmpb
dec
dec
enter
xchg
add
xchg
inc
es
icebp
cmp
mov
loopne
std
cmp
lcall
decb
call
in
xor
outsl
cmpsl
push
pop
xchg
out
lds
dec
nop
lods
mov
cmc
mov
test
mov
insl
not
daa
jge
jns
popa
testl
sub
shl
lret
pusha
sub
sbb
clc
out
inc
js
push
cmp
bound
jbe
push
movsl
insb
or
xor
mov
jo
ljmp
cmp
mov
sbbb
mov
jl
inc
xor
cwtl
lret
pushf
daa
stos
pushf
xor
lcall
push
xor
test
enter
mov
mov
scas
call
lea
in
mov
push
mov
or
lock
hlt
xor
pop
push
int3
aad
xlat
xchg
daa
ss
push
repz
loope
push
and
ret
cmpsb
mov
nop
sub
insb
out
push
cmpsb
sbb
aad
scas
xor
mov
repnz
ss
push
lgs
dec
stc
sbb
sub
js
js
cltd
fbstp
jbe
pop
push
inc
shl
sub
pushf
jb
xchg
jbe
test
pop
clc
jns
or
cltd
nop
adc
sub
mov
popa
mov
sub
dec
cltd
adc
xchg
mov
iret
jmp
cli
sub
fistpl
loop
adc
jle
stos
rolb
jne
fs
mov
cmpsb
lds
and
xchg
xchg
jmp
push
ret
xchg
inc
shll
sub
push
pop
out
adc
jae
int
jnp
push
lds
idiv
jg
rorb
insb
add
push
mov
dec
cmpsl
inc
sbb
dec
inc
mov
sahf
in
std
loopne
imul
std
iret
incl
inc
inc
repnz
mov
xchg
or
ret
jb
test
sub
in
adc
mov
add
into
imul
mov
cmp
or
jecxz
pop
add
movsl
lods
int
push
fistl
lods
mov
jmp
test
dec
negl
addr16
pop
in
outsl
mov
xor
loope
loope
xor
int3
jae
jns
adc
mov
repnz
pop
fsub
mov
movsb
jp
add
sbb
bnd
in
dec
jmp
scas
lcall
adcl
adc
cmc
dec
xor
jp
in
in
arpl
and
out
or
sub
incb
or
ljmp
loop
test
aam
adc
dec
mov
xor
sub
inc
fs
outsl
inc
lods
add
xorb
jne
inc
addr16
cmp
loop
xchg
push
xchg
shl
notb
lods
sub
add
xchg
jb
inc
adc
ljmp
inc
jmp
les
adc
inc
push
pextrw
xchg
out
bound
push
aam
arpl
xchg
ljmp
mov
bnd
cmp
popf
popf
scas
cmc
fldenv
mov
push
push
jp
ljmp
clc
mov
or
mov
popa
jp
mov
push
jno
xchg
or
shlb
push
add
aad
mov
add
mov
arpl
pop
loopne
scas
xchg
sbb
gs
push
fwait
in
push
add
add
xlat
push
repz
loope
jp
cmpb
pop
sbb
notl
adc
test
subb
out
xchg
shrb
adc
cs
aaa
int3
bound
pop
adcb
xor
xchg
push
push
cli
cmp
fldt
out
outsl
dec
jb
push
dec
xchg
fidivrs
or
mov
inc
mov
loope
xor
int3
jl
dec
pop
call
push
cltd
fadd
inc
jle
pop
cli
adc
insl
je
enter
aaa
sub
or
jle
fisubrs
push
sub
jge
rol
mov
xchg
or
ja
xchg
xchg
inc
push
xlat
lds
sub
mov
adc
shl
and
testl
dec
andb
mov
fdivrs
loop
repnz
ja
inc
icebp
cltd
xor
repz
dec
xchg
add
sub
sbb
adc
inc
sbb
data16
mov
bound
push
imul
scas
vpsrld
hlt
xchg
xchg
movsl
loopne
gs
dec
pop
xor
mov
push
mov
jle
fsubr
push
pop
ret
sar
pushf
push
mov
jns
mov
mov
mov
push
sub
jno
xorb
xor
call
push
mov
pop
mov
push
insl
clc
addr16
aaa
insl
pop
rep
outsb
inc
cmp
push
xchg
push
outsl
mov
pop
xchg
pop
adc
push
mov
pop
dec
xchg
inc
scas
pop
dec
add
nop
dec
sbb
or
mov
and
jge
insb
pusha
int3
mov
push
adc
test
sub
lods
aam
jno
push
jb
movsl
icebp
add
push
pop
mov
or
push
and
and
push
adc
mov
jae
arpl
mov
and
fistps
pop
mov
out
sbb
fwait
in
jge
push
test
sub
sub
out
cli
pop
inc
out
or
lea
mov
or
les
adc
outsb
cmp
dec
jns
adc
pop
xchg
pop
add
pop
push
pop
push
jg
mov
pushf
test
cmp
pop
sbb
call
jl
dec
inc
xlat
cld
jae
push
push
loopne
sbb
adc
mov
outsl
lcall
sub
fcom
insl
mov
mov
shll
loop
imul
popf
dec
pop
not
mov
mov
sub
nop
cmpsb
mov
into
jl
add
out
pop
push
push
and
leave
dec
cmp
mov
data16
lcall
pop
mov
js
mov
rep
lcall
loopne
aam
pop
lsl
push
std
in
mov
in
jl
sbb
pop
leave
pushf
in
add
in
add
pop
in
stos
jne
adc
fildll
scas
cs
push
std
imul
or
lret
push
add
sub
je
cmp
mov
sbb
popa
imul
xchg
test
pop
out
std
push
dec
lds
dec
pusha
and
dec
testb
or
jne
loope
mov
or
shrl
popf
movsb
adc
adc
or
mov
addl
sub
ljmp
pusha
addl
aas
orl
mov
xor
rorb
adc
xor
fs
inc
jne
sub
ficoml
sub
jno
or
pop
loopne
cmc
scas
mov
or
ljmp
popa
loope
arpl
jbe
cwtl
gs
jns
icebp
imul
enter
dec
cmp
adc
xchg
imul
xchg
sub
sbb
cmp
in
rorb
icebp
rcll
pushf
inc
mov
ss
mov
std
ret
ss
or
xchg
out
adc
sbb
nop
mov
sbb
push
in
adc
jae
add
dec
mov
xlat
jo
mov
push
sbb
xchg
in
jno
out
call
mov
test
iret
xchg
push
jns
xchg
mov
inc
daa
lret
jae
cmpsl
jns
or
and
leave
leave
dec
cltd
fistps
add
sub
inc
faddp
push
inc
cmp
add
cmp
sbb
fucomip
test
dec
scas
imul
mov
mov
mov
and
aam
sbb
enter
out
out
into
fs
sbb
inc
xchg
adc
pop
roll
sbb
push
xchg
add
rcll
fisttps
faddl
mov
mov
mov
mov
jbe
jne
lods
jns
sbb
outsb
int3
cltd
inc
push
sbb
fsubrs
shll
inc
out
fcmovbe
xchg
clc
and
mov
test
nop
cmp
jo
sub
push
cmpsb
xor
add
sbb
push
sub
pop
test
out
sti
movsb
sbb
cmp
mov
cmp
cld
cli
mov
push
jns
adc
ret
xor
sbb
ja
pop
inc
iret
jns
sbb
cwtl
divl
pop
jne
int
xor
sub
je
pop
fnstcw
xchg
mulb
mov
rcr
cmc
mov
es
jnp
push
mov
pop
in
int3
sbb
insb
popa
mov
subb
enter
mov
mov
outsl
mov
mov
in
pop
push
loop
and
cltd
lahf
mov
jns
imul
cmpsl
adc
into
xor
mov
sub
pop
dec
xchg
test
adc
aas
loopne
fidivl
push
mov
out
xor
inc
xchg
or
jae
jo
sbb
mov
fldl
jl
push
xor
loope
xchg
rcrl
cli
push
out
lret
je
rcr
push
enter
push
inc
lods
jmp
push
iret
int
cmp
push
xor
fsts
clc
in
es
aaa
mov
lahf
outsb
es
scas
adc
and
xchg
sti
mov
sbb
hlt
js
movb
test
insl
fistl
movsb
rcrl
inc
bnd
jge,pn
dec
push
mov
je
jns
rclb
fdivp
push
xchg
lds
add
out
in
fs
ret
or
cmp
icebp
insl
add
push
lret
cmp
call
lahf
xchg
int
ret
mov
mov
repnz
push
imulb
lret
jg
pop
xchg
adc
fimull
mov
add
sti
push
loop
ja
bound
inc
ret
xchg
lods
jae
jmp
push
jg
add
jo
mov
mov
lahf
mov
outsl
aaa
cmc
cmp
xchg
dec
nop
cmpsb
and
pop
lock
dec
or
das
jecxz
jnp
cmp
das
push
sti
add
les
adc
add
out
xchg
xor
xchg
mov
cmp
scas
sti
sub
imul
pop
orb
xor
clc
sbb
sub
mov
pop
jno
mov
hlt
sbb
add
pop
xchg
pusha
push
ret
mov
les
xchg
in
into
xchg
out
test
inc
xchg
adc
scas
mov
and
pop
mov
outsl
xor
mov
call
cltd
cmp
clc
scas
fdivrl
mov
adc
pop
cltd
or
and
movsl
cltd
std
cmc
sbb
testl
pushl
add
jbe
dec
mov
jl
lds
mov
or
inc
test
inc
nop
xor
stos
imul
mov
dec
iret
fisttps
or
inc
add
aas
dec
pop
mov
ds
lds
ret
insb
idiv
icebp
test
jle
ljmp
xchg
push
jmp
cli
sbb
jle
addr16
daa
xchg
mov
test
mov
mov
inc
dec
out
pop
sti
xchg
xchg
mov
aaa
fdivrl
xor
int
lret
scas
fnsetpm(287
cmpsb
xor
mov
mov
pop
xchg
sub
sub
jbe
mov
mov
xor
stos
inc
sub
mov
adc
inc
cwtl
pop
sbb
add
lods
cmpsb
addr16
mov
fmuls
or
popf
sub
aas
decb
cmp
fwait
sbb
add
fisttpl
into
jae
shrl
or
sti
pop
and
roll
mov
js
xor
pop
leave
xchg
mov
ret
fldcw
je
roll
rol
push
ds
pop
pop
xor
add
adc
cld
or
sub
icebp
out
push
push
xor
sub
cli
ja
xorb
pushf
in
mov
gs
scas
xchg
aad
mov
insb
js
or
fucomp
insb
cwtl
clc
sub
push
cmpsl
outsl
push
dec
and
xor
jnp
xchg
lahf
inc
movsl
outsb
arpl
mov
ret
pop
sbb
cmp
push
inc
pop
xchg
cmp
outsl
cmc
gs
or
pop
rorw
addr16
pop
mov
sub
subb
add
sarb
test
dec
push
dec
fldenv
inc
xlat
out
dec
push
xor
movsb
adc
sti
jecxz
ss
in
incb
xchg
stos
ds
mov
int3
sbb
ret
adc
pop
inc
mov
xor
gs
jl
push
add
rcl
push
jb
nop
fwait
mov
out
lahf
clc
rolb
lods
and
aad
int3
mov
pop
jl
rcrb
andb
mov
cs
xlat
mov
ss
je
out
and
cs
outsb
jb
mov
out
xchg
std
adc
aad
fcoml
xchg
adc
pop
sbb
inc
daa
and
stos
mov
mov
icebp
jg
cmp
pop
je
sub
mov
sarb
lods
and
test
test
ret
test
sbb
and
loope
sub
push
xor
inc
xchg
test
adc
imul
rclb
out
push
fcmovbe
jg
hlt
push
das
ret
adc
sub
jbe
xchg
test
mov
lods
lods
icebp
hlt
sarb
addr16
insb
xor
cmp
push
xor
jl
scas
pusha
sub
outsl
pop
or
mov
dec
movb
mov
fstpt
or
aam
das
cmp
ret
fstl
cmp
xchg
xchg
and
mov
test
out
repz
pop
mov
mov
flds
subl
mov
xchg
push
sbb
das
mov
or
orb
hlt
arpl
ds
mov
sub
idivb
loopne
stos
push
cmpsb
fldt
push
icebp
js
sahf
into
popf
jecxz
outsl
push
std
xor
push
pusha
xor
xor
test
fxch
sub
mov
jne
insl
sarl
sbb
negb
sbb
out
daa
add
mov
in
mov
aad
mov
lds
pushl
add
adc
dec
cmp
xchg
inc
je
xchg
xchg
push
sahf
and
scas
pop
and
jmp
dec
xchg
cmp
or
je
jecxz
in
sub
cli
jae
adc
test
mov
cmc
fdivrp
imul
ds
cmp
orl
xchg
mov
pop
out
push
mov
push
xchg
mov
arpl
jb
cli
movsl
jb
pushf
movsl
lcall
cmp
adc
test
jmp
push
sub
mov
pop
and
rcrb
cmp
rclb
mov
mov
mov
das
aad
dec
sbb
mov
sbb
test
out
jmp
sbb
push
jmp
ss
stos
fmuls
sub
imulb
sub
push
je
je
mov
pushf
xor
ljmp
test
imul
sub
in
aas
je
and
push
mov
lcall
dec
jnp
pop
xchg
mov
loopne
sar
out
inc
or
sub
inc
into
mov
sbb
ficomps
pop
dec
int
mov
repnz
sbb
mov
icebp
pop
lea
not
cmp
inc
int
jge
out
outsl
fnstenv
jno
mov
out
xor
arpl
pop
fwait
pop
filds
lods
cmpsb
aam
cmp
mov
pop
adc
je
xchg
pusha
cmp
pop
mov
fcmovb
shlb
das
in
pop
jnp
rol
push
nop
jmp
sub
xor
mov
lcall
xchg
xlat
or
jmp
push
cwtl
ds
sbb
orb
push
lret
setl
mov
dec
lret
ss
xor
je
add
gs
insl
add
cmpsb
jecxz
mov
ret
fstpt
cwtl
pop
mov
pop
xchg
lea
out
mov
xor
ss
mov
add
imul
mov
cmp
push
jne
popf
jge
nop
cmp
pusha
ret
jp
fidivs
adc
cmpl
xor
sbb
js
push
mov
test
shlb
lret
addl
lods
adc
xor
sbb
sbb
push
addr16
dec
sub
cmp
adc
sub
je
adc
sub
jge
xor
je
mov
aaa
imulb
punpckhbw
and
dec
mov
aas
cmpsl
push
outsl
xchg
clc
stc
and
idivl
dec
push
mulb
mov
pushf
or
inc
xchg
mov
xchg
sbb
in
sti
jo
test
jge
lcall
stos
std
adc
rol
sar
mov
out
jne
push
gs
xor
pushf
lods
ljmp
jmp
mov
jo
add
sub
add
inc
fwait
psraw
stos
addr16
aam
add
pusha
mov
add
xchg
in
push
inc
pop
sub
cs
jp
cmpsl
iret
lods
xor
orb
pop
or
lods
or
idivl
add
movsl
cltd
adc
ja
das
in
add
sbb
adc
lret
inc
mov
cmp
aad
lea
dec
enter
lahf
leave
push
adc
and
push
fdiv
xor
push
lahf
cmp
adc
ret
inc
scas
mov
cwtl
sbbl
rorb
mov
fcompl
movsb
pop
inc
push
sub
mov
mov
xchg
int
jae
lret
inc
insb
jle
ftst
xchg
adc
add
sub
and
xchg
pop
pop
test
mov
mov
xchg
in
insl
xchg
push
lds
cwtl
mov
xor
stos
pusha
int3
ret
in
fildll
xchg
jl
xchg
pusha
sahf
dec
pushf
pop
pushf
pop
push
jecxz
pop
js
xor
ja
ljmp
xor
pop
lcall
mov
xchg
adc
into
jae
xor
fs
inc
fildl
test
sbb
xor
push
mov
in
mov
in
pop
loopne
gs
iret
jo
fidivl
js
inc
jecxz
out
xchg
ret
mov
xchg
cmp
mov
pushf
xchg
push
in
dec
loope
pop
inc
mov
bound
lahf
gs
jne
aam
aam
xchg
loop
mov
jle
fs
add
jmp
dec
adc
ljmp
mov
jb
inc
mov
push
popa
aas
stos
scas
sti
push
lret
pop
and
sbb
xor
sarl
jl
cmp
frstor
popf
rcll
int3
xor
jnp
xchg
push
js
nop
arpl
xor
cmp
repz
push
push
int3
jmp
cmpsb
xor
and
out
imul
push
lds
roll
xchg
push
ja
jno
add
sbb
sbb
out
into
and
inc
mov
sbb
data16
inc
pop
fsubl
dec
jbe
loope
adc
test
mov
mov
popf
rclb
hlt
dec
or
insb
insb
fistpll
adc
fisubl
out
vpcmpgtb
sub
adc
negl
jmp
jle
ja
stc
jmp
mov
jge
pushl
mov
cld
fidivl
fadd
mov
adc
push
test
adc
mov
sub
inc
inc
loopne
data16
dec
test
pop
repnz
jmp
cmpsb
ret
out
cmp
xchg
movsl
sub
pop
sbb
pop
outsb
cmp
push
jg
lcall
fidivl
fwait
mov
adc
ja
adc
dec
repnz
push
cwtl
mov
or
push
lods
or
push
repnz
or
popf
rcpps
gs
jmp
dec
sub
xorl
cmp
adc
outsl
movsb
mov
mov
push
stos
jne
sahf
xor
mov
std
inc
or
in
xchg
lods
xor
flds
js
mov
adc
push
jo
cmp
outsl
lods
xor
enter
and
cli
or
lret
mov
or
aas
pop
cmp
enter
fs
cli
or
in
fwait
adc
jl
mov
adc
stos
sbb
daa
dec
jbe
dec
xchg
mov
cmp
add
jbe
lock
repnz
add
loop
mov
mov
int
cwtl
sub
les
pop
test
aad
dec
xor
subl
test
movsb
pusha
mov
and
mov
out
test
in
and
lock
ss
mov
sbb
push
xor
test
add
bound
xchg
je
mov
leave
or
xor
daa
cmc
frstor
and
xchg
jecxz
es
sub
mov
test
jno
xor
add
fcoms
push
mov
lock
cmc
sbb
test
outsl
popa
or
data16
std
sahf
cli
xor
mov
xchg
outsl
jmp
pop
add
lods
dec
xchg
in
dec
cmp
pushf
cmpsb
sti
lret
xchg
pushf
out
jno
mov
rorl
xor
ror
add
cmpb
jnp
lea
inc
orl
mov
pop
lahf
adc
popa
mov
rol
imul
add
filds
sbb
push
ss
xchg
iret
stos
fsubrl
cwtl
cwtl
mov
jge
sbb
sti
outsb
aaa
xchg
sub
fdivrs
subb
push
and
imulb
push
mov
adc
scas
aaa
addl
daa
lret
insb
mov
inc
jns
mov
sbb
das
mov
jecxz
and
ds
push
mov
pop
sbb
or
cld
fldt
sbbl
sbb
outsl
and
adc
jle
add
mov
jmp
xor
xor
pop
lea
xchg
pop
test
dec
cmp
dec
ret
sbb
mov
lea
fdivs
dec
pop
ljmp
and
inc
mov
out
jb
push
push
mov
cmp
add
pop
sbb
mov
cmpsl
xchg
rcr
or
and
jp
repnz
loop
es
in
ror
out
fs
mov
cmc
jb
cwtl
gs
cwtl
add
xchg
sbb
in
sbb
stc
pushf
jmp
xchg
leave
ret
xchg
jp
push
fucomi
mov
adc
jnp
lret
sub
movsb
mov
ja
je
cmp
and
fs
repnz
or
lret
push
cmpsb
xor
stc
popl
adc
sbb
iret
mov
aad
mov
gs
sbb
or
sbb
jo
mov
stc
inc
movsb
pop
inc
loop
insl
push
in
in
pop
rcl
ret
enter
dec
adc
pushf
gs
lret
test
mov
pushf
push
pop
adc
xchg
adc
and
add
aam
jecxz
ror
add
mov
stos
and
cmp
int3
sbb
shll
loop
hlt
aas
es
bound
insb
pop
iret
hlt
subb
push
ja
fnsave
ficompl
hlt
hlt
shlb
scas
mov
mov
fs
pop
lock
pushf
lahf
mov
lods
leave
mov
gs
orl
pop
jp
push
mov
xchg
mov
adc
popa
xchg
rcrl
sbb
enter
mov
xlat
jne
push
jno
into
push
loope
int
dec
dec
test
fidivrs
roll
or
jg
xchg
ret
outsb
mov
xlat
js
arpl
inc
lds
shlb
les
leave
movsb
pop
mov
jno
pop
daa
cmp
ljmp
aam
rolb
out
orb
inc
addl
test
and
xchg
mov
inc
mov
mov
cwtl
dec
adc
lds
xchg
mov
shll
sub
in
and
jge
pop
cmp
dec
lret
sbb
jb
push
aam
mov
mov
inc
cld
push
lcall
shll
cmp
pop
push
lods
xchg
hlt
mov
inc
testl
fidivrs
shr
cmp
push
popf
sub
inc
pop
in
inc
fsub
push
sub
mov
dec
cmovle
into
push
fs
mov
cli
or
push
mov
fnstcw
xlat
ljmp
dec
mov
pop
pcmpgtb
iret
mov
pop
sub
scas
jo
push
cmp
dec
loop
nop
pop
loopne
add
outsb
sbbb
push
jne
mov
pop
jp
inc
mov
mov
push
dec
lret
femms
sbb
in
andb
jne
pop
popa
hlt
sub
sub
push
repz
int3
mov
adc
adc
subl
fstp
pop
test
inc
ret
test
in
push
hlt
pushf
jecxz
aas
dec
mov
lret
jl
and
lock
shlb
mov
sbb
negl
cmpsl
mov
xchg
out
loope
insb
ret
out
mov
test
pop
enter
cmc
pop
mov
xor
gs
stos
xor
loope
adc
lahf
xor
je
push
sti
fcmovne
les
xchg
add
mov
jp
mov
and
or
xorb
aaa
rcrb
add
and
adc
fimuls
push
pop
and
fwait
repnz
pushf
es
mov
movsl
mov
cltd
dec
add
mov
test
out
enter
mov
into
popf
stos
fnsave
jge
fmull
jns
adc
pop
fwait
sub
cmp
out
xchg
ljmp
test
shll
push
repnz
test
push
scas
add
jbe
inc
ret
inc
jg
jp
repnz
add
loopne
pop
sub
cltd
inc
and
scas
pop
dec
xchg
xchg
int3
mov
jecxz
xor
dec
cld
xor
jbe
es
jns
stos
or
mov
dec
stos
xor
gs
test
cmp
outsb
sarl
rclb
mov
add
add
inc
cwtl
mov
pop
and
mov
push
lret
sub
ret
add
mov
xor
mov
ljmp
cmp
lret
sub
push
leave
sti
repz
and
int
stos
or
inc
sub
jne
imul
testl
xchg
mov
sub
jae
xor
js
push
push
mov
sub
pushf
pop
in
inc
sbb
pop
sub
fucomip
jmp
pop
inc
ret
xchg
in
outsb
sbb
loopne
cmp
sub
jnp
jns
jle
cmp
or
add
orb
dec
add
add
in
cmc
xchg
push
fidivrs
in
sub
mov
in
push
lcall
push
icebp
jl
inc
sar
mov
shr
fldcw
imul
mov
es
jg
pop
cmpsb
mov
and
sub
nop
cld
or
push
pop
clc
add
xor
xorl
xor
mov
pop
mov
push
stos
dec
xchg
out
out
sub
faddl
aaa
int
mov
mov
nop
aaa
in
push
xchg
mov
sub
xchg
testl
loope
add
mov
rcrb
add
xchg
movups
xor
daa
repnz
push
adc
cmp
cltd
dec
fcoms
insb
push
shrl
add
pop
fwait
cmp
sub
std
cmp
popl
cli
test
jp
subb
jbe
lds
inc
stc
movsl
popa
popa
imul
bound
inc
sub
mov
and
adc
add
sub
nop
cmpsb
ss
std
mov
rcl
adc
aaa
and
jne
nop
mov
jmp
hlt
sbb
adc
and
je
fisttps
jge
pushf
push
ret
mov
or
shrl
jb
adc
push
jge
jle
add
fs
testl
cmp
sbb
scas
les
in
cs
mov
add
jp
sub
imul
sti
ss
es
adc
int3
mov
inc
popa
cmpsb
push
out
adc
pop
cmpsl
xchg
hlt
mov
cli
daa
arpl
les
outsl
lods
ja
mov
mov
insl
xorl
dec
mov
add
jo
aaa
ds
stos
icebp
jne
imul
call
dec
js
or
mov
xor
push
jbe
inc
add
aad
mov
testl
je
mov
ret
add
mov
pop
rcrb
aad
push
xor
or
clc
add
adc
fs
xchg
cli
fs
pusha
kmovw
imul
lea
shlb
rorl
testb
push
xchg
popa
mov
dec
mov
mov
fsubrl
stos
aam
xor
imul
outsb
insl
loope
cltd
xchg
pushl
add
mov
aam
in
xchg
rclb
cmp
aas
xlat
clc
pop
lods
loope
clc
lock
pop
jne
push
arpl
popa
push
pop
push
lods
cld
fdivrs
push
or
push
jbe
leave
xor
inc
loope
mov
loop
add
ljmp
out
lret
ja
xchg
push
test
call
pusha
mov
or
in
add
mov
clc
xor
push
ja
inc
xor
sahf
dec
repnz
cmpl
xchg
fwait
jp
pop
sub
cmpsl
sbb
mov
mov
out
adc
and
sub
mov
ret
repnz
fbld
or
sti
jecxz
test
outsl
jl
je
test
sub
jbe
add
popl
mov
addr16
add
cmpsl
pop
jmp
inc
pop
sbb
cmpsb
dec
jae
repnz
das
mov
mov
adc
loop
mov
and
fisubs
stos
adc
mov
inc
dec
xor
faddp
and
inc
shlb
fidivrl
push
mov
jg
jnp
adc
test
lea
and
stc
mov
fidivrl
push
push
cmp
jge
sbb
push
fisubrl
stos
loope
add
pushf
loop
iret
mov
sub
mov
imull
inc
repz
xchg
sahf
adc
cwtl
mov
mov
adc
insb
testb
add
fmul
sbb
outsb
cmpsb
cmpsb
fwait
xor
stos
pushf
jge
call
fidivl
mov
popa
mov
xorb
gs
inc
xor
cs
push
sub
int
rorb
xor
out
cmp
ret
stos
mov
adc
cmp
lret
enter
fcoml
loop
insb
jo
movb
lahf
fisubs
sub
mov
dec
iret
push
fldl
inc
and
or
mov
cmpsl
jae
bnd
arpl
pop
ja
xor
gs
pushf
pop
add
pusha
or
jmp
jno
dec
jo
inc
cmpsb
test
rcrl
rcrb
cmc
pop
movsl
rcrb
add
imul
push
cmp
sbbb
sub
mov
stos
pop
cmp
cmp
jg
push
sbb
inc
xor
mov
mov
rcrb
fildll
enter
out
lds
lds
cwtl
test
adc
arpl
push
outsb
test
pusha
std
cmp
scas
rcl
bound
imul
cltd
sub
push
fwait
lds
icebp
push
pop
mov
sti
pop
cli
cmp
lea
leave
jge
push
dec
cwtl
cmp
push
js
mov
cmp
pop
les
xchg
cmc
enter
mov
data16
sub
pop
xor
xchg
aas
lret
daa
mov
dec
push
sahf
cmpsb
add
fsubrs
sbb
sti
int3
stos
sbb
pusha
adc
sub
rclb
pop
rcr
insl
mov
xor
xchg
push
fimuls
fstpt
sub
adc
jp
push
bound
and
jns
int
sbb
orb
outsl
xor
das
cmp
cmpsb
mov
jb
lods
push
jno
clc
pop
or
mov
pop
mov
sbb
es
xchg
xchg
mov
or
xor
jmp
inc
pop
and
subl
movsb
addr16
pop
mov
xchg
lcall
aad
lret
cmp
lahf
fdiv
add
fimuls
push
xchg
rorb
inc
dec
mov
mov
jbe
inc
int3
add
push
fstpl
cmp
les
xor
iret
popf
sbb
jno
inc
repnz
ror
int3
jo
das
push
test
cld
out
jbe
insl
cli
int
fsubs
shl
insl
push
aas
shrl
imul
sti
jno
jnp
rorl
jle
mulb
ret
lahf
iret
cltd
imul
xchg
cmp
xchg
push
lret
adc
daa
and
js
das
and
cli
insl
sub
or
repz
push
adc
dec
cmc
repnz
scas
lret
mov
int3
pop
test
shl
scas
xor
jno
cmp
mov
inc
xor
es
ljmp
push
add
scas
test
mov
das
dec
fwait
iret
daa
inc
movsb
jge
xchg
xchg
sbb
dec
xchg
int
cmp
sub
pushf
jge
push
fidivs
stc
into
sbb
jne
and
cmpsl
jp
xchg
sbb
xchg
inc
mov
push
fiaddl
imul
xchg
push
add
mov
pop
popa
and
out
not
inc
push
call
mov
stc
ret
ljmp
idivb
aad
fisubrl
adc
dec
push
mov
ror
mov
orl
push
shl
mov
imul
arpl
xor
dec
cmp
jecxz
push
xchg
pushl
mov
cmp
repnz
xchg
xorb
push
movsl
loope
push
push
pop
add
mov
pop
mov
loop
faddl
push
call
mov
ss
jbe
fldcw
call
xchg
shlb
sar
ficoml
jno
xchg
push
in
outsl
xchg
into
xchg
xlat
adc
push
ss
sub
mov
and
hlt
cld
pop
jae
in
cmp
notl
fsubrl
push
mov
lret
or
add
xchg
into
adc
cmp
xor
mov
es
cs
mov
jb
xchg
dec
hlt
lret
je
cmp
push
imul
inc
ds
dec
mov
lea
pop
int3
xor
imulb
cmp
add
imul
lret
adc
adc
mov
or
sbb
mov
loop
inc
and
aaa
mov
scas
shll
sub
xor
shlb
sbb
inc
jnp
into
insb
inc
pop
jbe
hlt
push
pop
pop
inc
sbbb
jmp
xchg
xor
fwait
and
inc
daa
out
push
mov
xor
es
adc
xchg
mov
repnz
dec
push
cltd
in
lret
and
fdivs
and
pop
into
xchg
mov
adc
dec
jle
sbb
fmulp
repz
ljmp
sub
fs
sub
orl
lret
or
lods
je
rorb
hlt
fdivl
cmpsb
xchg
mov
test
imul
insl
jb
ret
mov
push
mov
add
movsl
out
aam
fstpl
das
mov
jno
cmp
cmpsl
sub
in
stc
pop
mov
jae
jns
xchg
sti
sbb
xchg
loope
jbe
push
adcb
pop
jbe
mov
popl
rcll
sti
cmp
es
popa
lods
cmpsl
vmulsd
pushl
and
insl
in
jge
or
sbb
cmpsl
dec
adc
jne
pop
call
ret
mov
pop
mov
rorb
test
mov
jg
mov
sub
sbb
scas
mov
in
aad
imul
pusha
data16
xchg
or
or
fdivrp
imul
pop
mov
pop
sti
pop
cli
mov
cmp
dec
push
lahf
and
pushf
jb
insb
dec
imul
dec
rol
ret
inc
dec
popf
mov
cmp
sar
ja
stos
pop
jbe
add
xchg
dec
mov
pop
xchg
lock
mov
cmp
fwait
jp
cli
mov
pop
jecxz
sub
adc
inc
cwtl
dec
lahf
fwait
cs
xor
xor
or
idivb
scas
xchg
mov
mov
insb
es
jp
cmc
mov
push
fsubrl
hlt
mov
adc
clc
pop
push
or
mov
sbb
mov
int
pop
ja
cmp
and
fs
sbb
das
arpl
cmp
add
les
out
js
mov
pop
sbb
add
jmp
or
arpl
jp
imull
dec
sbb
dec
sub
cmp
addl
lea
stos
sub
jp
popf
mov
pusha
cmp
out
adc
dec
add
jnp
je
bswap
inc
xchg
imull
xchg
xor
jns
sub
int
lahf
jecxz
and
mov
inc
inc
lret
lds
jle
shlb
mov
outsb
int
loopne
mov
mov
lret
push
addr16
movsb
sti
fstpl
mov
sub
call
sbbb
stos
insl
ror
scas
stc
cmc
mov
movsl
push
cmpsb
or
cmpl
lock
and
inc
lret
add
jmp
fsubrp
sub
adc
ja
dec
js
loope
divb
pop
repz
cmp
jb
sub
aam
mov
icebp
xchg
and
cwtl
jb
fcmovbe
sbb
lret
dec
fidivrs
jb
push
test
roll
dec
lahf
and
cmp
inc
in
dec
mov
ss
push
add
jo
sub
inc
push
mov
mov
cmpsl
and
pop
data16
test
fs
in
outsl
and
xchg
dec
xor
aam
sbb
cmpsb
fs
mov
addr16
adc
or
adc
in
shlb
js
mov
andl
xor
dec
cmp
pop
mov
popa
sub
mov
xor
mov
cld
inc
xlat
out
cmpsl
cmp
loope
dec
orl
in
cmp
inc
jb
pusha
xchg
sub
outsb
jns
xlat
push
ja
fimuls
popa
test
or
adc
les
notb
stos
push
mov
push
xor
cmp
xor
aaa
stc
sub
in
cs
cmp
sbb
outsb
loope
outsb
repnz
movsb
sbbl
dec
shll
push
sbbl
fsts
push
add
aas
cmp
hlt
mov
xor
and
mov
inc
fmulp
rolb
cmp
inc
scas
test
adc
pop
popf
sub
push
fs
shlb
loop
out
jg
imul
out
pop
add
xchg
inc
ret
xor
loop
mulb
push
add
lds
push
fidivs
or
movsl
pop
or
clc
popf
lahf
jns
mov
xor
sub
push
cmpsl
ljmp
aad
pop
mov
rolb
mov
fisubl
adcl
arpl
jae
mov
shlb
xlat
stos
or
push
jbe
out
ret
jmp
and
loope
mov
mov
fwait
rorb
movsb
xlat
enter
inc
mov
cwtl
fwait
std
filds
add
pop
sbb
orl
sbb
shlb
and
in
fcomp
mov
jecxz
data16
cmpsb
stos
jae
adc
pop
and
cmc
lahf
inc
int
sbb
adc
jecxz
test
and
jnp
test
das
aas
mov
mov
insl
cli
shrl
icebp
or
jmp
imul
sahf
ljmp
push
fcom
cmp
cbtw
xchg
push
cmp
mov
lahf
fldenv
push
clc
repz
fs
fisttpl
xchg
add
fsubl
pop
mov
jmp
sbb
mov
mov
add
lret
push
daa
push
pop
scas
scas
cmp
cmp
xchg
adc
xor
cmpsb
push
popf
add
dec
add
loop
out
cmpsb
and
jae
jp
and
pop
stos
add
shl
xchg
outsl
jbe
ja
pop
jnp
nop
xchg
push
pop
addr16
mov
out
adc
test
lahf
sub
cli
inc
lods
lcall
mov
pop
ret
in
xchg
jne
xchg
mov
and
mov
pop
sub
daa
aam
or
enter
xor
cmp
fildll
cmp
fnstenv
cwtl
xlat
cltd
sbb
push
or
dec
pop
inc
sbb
jl
cmpsl
cmpsl
lcall
icebp
cld
mov
rclb
mov
sub
add
xor
lods
faddl
int3
ret
push
xchg
or
nop
movsl
jmp
int
ficompl
fldcw
pop
repz
cmpsl
lods
lods
fnstcw
pop
add
inc
push
push
test
orb
aad
mov
fstpl
es
inc
xor
mov
in
faddp
sbb
gs
scas
imul
rol
mov
scas
cs
std
xor
leave
push
scas
pop
mov
pop
adc
jg
and
scas
and
mov
mov
mov
retw
int
popl
xchg
in
pop
loopne
lcall
decb
mov
and
js
or
cli
les
dec
repnz
sub
lods
xchg
jno
adc
loopne
or
jmp
cmpsb
dec
rcrl
sbb
xchg
cmpsb
pop
sahf
push
xor
pusha
ret
bound
and
pop
loopne
mov
orl
ja
bound
pop
scas
add
xchg
outsl
int3
sbbl
inc
ja
pop
and
push
out
push
jns
pop
lcall
cs
mov
mov
mov
lods
outsb
push
repnz
push
sub
pop
xchg
idiv
fxch
ds
adc
out
pushf
mov
mov
adc
and
cmp
rcrl
adc
and
dec
test
jecxz
pmulhuw
icebp
adc
sti
jle
clc
sub
lea
mov
dec
sbb
test
cmpsb
test
mov
dec
popa
pop
xchg
mov
xchg
jne
into
push
test
mov
cmp
or
test
dec
inc
mov
movsl
in
in
xor
cmpsb
notl
mov
int3
cmp
adc
pushf
push
or
clc
and
inc
and
mov
add
mov
lock
ss
nop
aam
aam
filds
pop
es
cmp
fwait
scas
into
pop
fisubrs
test
cmp
or
in
mov
mov
pushf
mov
cmpsb
push
dec
jb
dec
cmc
mov
or
addr16
jg
jno
fistpll
adc
aam
outsl
cmc
or
push
push
dec
mov
inc
lods
sub
mov
inc
xchg
lods
es
fsubl
mov
inc
sar
loopne
dec
fiadds
dec
dec
cmpl
jecxz
mov
outsl
cvtdq2ps
xchg
xchg
or
push
scas
sub
repnz
inc
stc
mov
add
xchg
lds
add
les
adc
xor
loopne
hlt
add
adc
sarb
xor
sbb
and
jbe
inc
out
fwait
cmp
cmpb
aad
or
pop
sub
stos
jl
mov
mull
fs
stos
jp
and
imul
ret
lcall
mov
mov
jmp
mov
mov
cmp
pusha
mov
cmp
pushf
jle
xlat
mov
subb
call
mov
mov
psubw
and
les
mov
xchg
add
mov
pop
jns
inc
movsl
sub
shll
dec
inc
push
sti
sahf
jmp
lods
es
pusha
mov
xchg
rep
xor
lret
subl
out
cmp
into
cltd
loop
pop
xchg
out
push
xchg
mov
xchg
cs
int
ret
pop
out
push
leave
mov
lods
arpl
sti
test
aaa
ret
sti
data16
gs
mov
mov
test
outsb
ss
fdivl
pusha
push
add
ss
and
std
xchg
mov
je
lds
pusha
mov
pop
mov
mov
xchg
out
push
and
push
mov
pop
fsubr
repz
daa
nop
roll
add
ret
mov
enter
pop
pop
jmp
mov
or
insl
lahf
inc
gs
js
js
ret
mov
loopne
and
or
push
xchg
cmp
lahf
pop
add
sub
out
jbe
xchg
inc
sbb
jno
cwtl
inc
jmp
sub
xor
cmp
popf
jge
pop
jbe
iret
test
xor
or
xchg
jae
ficomps
xor
or
sub
js
fimuls
lea
dec
call
mov
inc
adc
icebp
lea
pop
jne
dec
or
je
ds
loopne
and
inc
xchg
pop
lds
push
andl
sub
test
push
sub
outsb
jle
jns
dec
mov
addr16
imul
sbb
shrl
test
xor
push
out
leave
je
pop
cmp
xor
inc
insb
imul
pop
pop
shrb
rorb
cmp
loop
dec
fistpl
pop
and
outsl
test
cmp
repnz
stos
sti
sub
pop
sbb
jne
pop
stos
jge
cld
adc
or
cld
sub
les
jmp
sbb
pop
add
cmp
sbb
fdivrs
pop
mov
cmp
cmp
inc
inc
adc
push
adc
fiadds
inc
cli
sub
mov
sbb
and
mov
psubq
push
cwtl
jp
push
int3
add
add
in
ret
and
mov
movsl
icebp
dec
xchg
mov
popf
adc
lds
imul
adc
cltd
sbb
in
imul
test
add
dec
inc
imul
mov
into
mov
pop
jno
cmp
test
or
int3
aas
jo
insb
pusha
negb
and
ss
mov
das
push
in
jno
cmpsb
xchg
cli
fstpt
dec
add
jle
pop
ljmp
stos
jmp
sub
loope
pushf
or
sbb
out
ljmp
pop
pop
and
addr16
xchg
hlt
mov
sbb
inc
rcll
insl
push
stc
push
mov
fnsave
and
mov
std
ret
mov
inc
inc
aaa
test
clc
jo
add
test
sub
dec
rcrb
mov
dec
xchg
xor
ret
stos
shl
or
add
or
mov
inc
fdiv
dec
call
adc
lret
fsubs
mov
out
jnp
pop
xchg
popf
fdivl
das
fstps
inc
xchg
mov
pop
pop
cmp
or
and
jnp
dec
out
mov
dec
mov
jg
xlat
cld
dec
ret
dec
and
in
push
xchg
into
add
mov
lahf
sub
test
mov
sti
je
loop
mov
loop
imul
mov
test
push
xor
out
mov
idiv
es
fnstenv
lret
mov
mov
jmp
movsl
xor
sarl
fdiv
arpl
cmpsl
ret
cmpsl
fwait
jns
ret
repz
xor
xor
cs
and
push
dec
xor
cli
inc
and
adc
testl
lds
pusha
stc
fdecstp
mov
inc
dec
push
cmp
cmp
jae
shrb
xchg
pop
lods
leave
mov
jmp
int
mov
enter
jnp
add
scas
mov
xor
scas
xchg
std
jl
and
mov
jle
xchg
shlb
aad
or
or
dec
call
loopne
adc
mov
xor
mov
jo
test
icebp
out
lds
xlat
jg
xor
cwtl
rcrl
insb
dec
addr16
loop
pusha
xchg
cs
mov
mov
jbe
push
arpl
ret
mov
enter
fwait
lret
les
bnd
sbb
inc
xchg
xchg
in
cmpsl
jb
lock
aaa
stos
xorb
inc
jmp
iret
add
inc
sbb
jp
xor
ss
movswl
stos
dec
lods
mov
jecxz
int
add
mov
nop
jg
push
cmc
xor
xor
mov
jo
sub
cmp
out
mov
out
dec
ljmp
stos
sbb
xor
inc
sbb
or
adc
xor
icebp
mov
adc
cmp
rcr
jnp
add
repz
in
dec
insb
sbb
in
sarl
jle
fisubl
clc
stos
sbb
arpl
xchg
fwait
out
and
addb
push
pop
adc
push
js
punpckhdq
inc
xor
mov
mov
icebp
mov
sub
es
and
or
sbb
adcb
adc
add
addps
push
shl
xchg
stos
scas
jae
int
lahf
mov
xor
adc
mov
pop
sub
xchg
sahf
insl
mov
add
into
sbb
xor
dec
mov
test
push
or
jo
and
or
popf
dec
pop
push
mov
mov
mov
jmp
cmp
outsb
fldl
hlt
pop
inc
lret
mov
cwtl
lret
jmp
sbb
pop
mov
and
cmp
pop
notb
mov
scas
or
insl
push
pop
xor
fldenv
in
or
inc
test
jbe
mov
insl
or
pop
test
fldl2e
enter
ds
test
sahf
aas
psubd
fistl
xor
cmpl
in
dec
jb
or
mov
sbb
mov
movsb
gs
pusha
dec
out
shlb
inc
scas
xchg
cmc
testb
sub
lods
adc
pushf
xchg
enter
jnp
mov
fwait
lods
out
les
pop
gs
dec
mov
mov
xchg
int
sbb
out
dec
pop
outsb
sbb
std
push
insl
lret
sub
fistpl
sub
sbb
test
dec
jmp
in
add
xor
mov
push
inc
lret
xchg
sub
or
mov
lret
pusha
filds
fiadds
mov
std
mov
cltd
enter
cld
shlb
out
out
sub
inc
mov
fwait
in
incl
in
push
out
mov
ficompl
xchg
aaa
popa
dec
leave
push
adc
test
cmpl
jb
clc
into
jno
into
or
lahf
xor
sub
xchg
std
fcomi
gs
xchg
cmpsb
sbb
fdivrl
mov
jne
arpl
pop
sub
dec
mov
jge
cwtl
loop
aas
push
and
cli
xor
jbe
adc
xor
push
testb
sub
js
fcmovnb
or
daa
mul
mov
in
or
push
or
mov
in
aad
jle
loopne
fcoml
outsl
inc
mov
mov
mov
stc
mov
lahf
jmp
fcomps
int3
jb
inc
cmp
lea
xchg
call
adc
jl
dec
xchg
inc
rcrb
aaa
jno
jno
mov
adc
mov
call
sub
mov
out
and
lods
mov
xchg
mov
hlt
xor
out
adc
mov
xor
lods
dec
add
frstor
sub
push
std
mov
movl
nop
in
add
cmp
mov
iret
push
fs
scas
ljmp
dec
mov
test
rclb
in
sar
and
fadds
add
or
das
mov
jb
dec
mov
bnd
movsl
call
fs
movsl
and
push
jb
and
jnp
pusha
cmpb
pop
fimuls
lahf
sahf
aad
mov
pop
rolb
in
das
outsb
repz
cld
lret
loopne
inc
gs
sbb
add
in
ja
push
inc
cwtl
add
stos
into
stc
mov
mov
or
xchg
cmp
shl
out
xchg
push
and
cmpsl
ljmp
in
out
xor
inc
sti
test
and
push
dec
aad
sbb
rcll
jl
or
fwait
xchg
call
ja
pop
jl
ret
out
xchg
sbb
sbb
les
cmc
xchg
sbb
fbld
mov
push
cmc
xchg
jb
xor
insb
int
sub
inc
sbb
mov
lea
std
stos
negl
sbb
or
cmp
aam
daa
in
insl
and
jb
add
addr16
jb
sub
mov
or
push
jb
dec
fwait
lods
push
xor
std
fsubs
dec
call
imul
push
stc
insl
je
pusha
testl
sbb
push
sbb
add
test
sbb
xor
mulb
gs
cmp
fdivs
push
stos
rol
movsl
and
or
xlat
mul
inc
das
lea
pushf
mov
imul
mov
outsl
int
lret
push
mov
insl
loopne
js
sti
repnz
clc
cmp
out
inc
rcrb
push
shll
or
icebp
call
mov
clc
jnp
mov
dec
sbb
add
int
xor
push
mov
mov
push
fadd
adc
pop
ret
nop
ret
cwtl
jle
lahf
push
pop
int
jno
jg
mov
pushf
push
pop
jecxz
inc
xor
ja
jge
xor
mov
mov
gs
mov
scas
call
cwtl
in
pop
jne
mov
aad
mov
jo
pushf
xor
aam
popa
dec
sbb
in
ret
jae
and
sbb
nop
test
inc
test
jmp
fwait
dec
scas
fs
mov
loopne
pusha
jecxz
mov
xchg
lea
inc
add
jns
dec
mov
adc
pop
mov
int
and
jecxz
xor
sbb
dec
in
mov
inc
aaa
dec
push
int
sbb
and
cwtl
jb
fnstsw
fsubr
call
jge
pop
cmc
pop
jne
insl
fs
pop
push
in
xchg
xor
lea
jmp
shl
jb
std
cltd
mov
push
mov
sbb
arpl
sbb
dec
adc
gs
xor
add
int3
cmp
and
std
sub
cltd
jo
inc
mov
and
or
rorl
sbb
mov
mov
mov
or
add
and
out
and
fdivrs
das
inc
inc
xchg
cltd
aas
mov
adc
subb
mov
loop
push
xchg
adc
jne
shrb
push
mov
dec
inc
ljmp
aad
add
lods
inc
es
push
outsb
sarb
xor
mov
jns
xor
in
stos
insb
lret
inc
out
sub
xchg
ficoml
mov
jae
insl
je
popa
jne
sbb
iret
push
popa
or
testl
push
xchg
test
out
mov
stos
ljmp
xchg
out
mov
pop
jbe
inc
mov
jmp
pop
xchg
loope
inc
push
push
movsb
sbb
inc
fildl
mov
mov
adc
or
movsb
push
adc
sti
outsl
fs
in
cmp
mov
jge
mov
or
addr16
shrl
popf
and
je
cltd
mov
stc
mov
shrl
test
or
pop
add
fildll
lcall
iret
adc
dec
xorb
pop
loopne
imul
test
dec
aam
sub
aad
lods
or
push
pop
add
add
push
out
ss
cmp
push
mov
push
jle
pop
xor
push
mov
fwait
jge
shll
push
dec
aad
cmp
dec
nop
scas
sbb
mov
jnp
pop
add
pop
add
push
adc
int
rol
pushf
jno
pop
pop
cmpsb
sub
fs
mov
lock
loop
in
mov
fsubrl
adc
outsb
xorb
pop
or
iret
pop
add
cltd
pop
xorl
repnz
mov
mov
mov
jg
in
xchg
popa
push
mov
int
out
jno
adc
inc
test
popf
mov
add
es
mov
inc
mov
or
outsb
xor
ss
push
mov
jmp
jg
cmpsb
jecxz
cmpl
out
movq
ficoml
insl
scas
dec
imul
fnstsw
push
insl
imul
and
ret
fwait
je
icebp
sbb
mov
xchg
adc
addr16
ret
jp
inc
inc
xor
add
jnp
cmp
dec
shlb
or
sbb
inc
fs
sub
arpl
movb
pop
rcr
xchg
mov
mov
out
push
xor
and
lods
push
add
faddp
shlb
inc
mov
int3
mov
in
mov
stos
adc
cld
sbb
adc
and
lods
mov
pop
or
cs
nop
or
rcrl
sti
shlb
jle
xor
gs
push
push
mov
pop
add
outsl
jge
sbbl
je
stc
mov
sbbb
and
push
nop
xchg
call
mov
inc
mov
xor
insb
push
inc
fistps
mov
sbb
loope
sub
ja
and
mov
daa
scas
jle
xchg
je
mul
mov
jns
call
insb
jnp
arpl
xchg
add
push
mov
ds
xor
in
sub
popl
sbb
in
jb
ds
pop
inc
push
jge
test
data16
pusha
fwait
or
push
lods
adc
ret
dec
and
dec
pop
jae
cmpl
mov
pop
les
or
dec
js
mov
and
cmpsb
adc
imul
jbe
push
mov
repz
jbe
sbb
orb
aam
movsl
push
sti
cmp
rclb
xchg
leave
pop
or
lcall
js
shr
mov
or
dec
xor
lahf
cmp
lods
jecxz
les
and
push
dec
dec
cmp
scas
out
push
mov
pop
adc
xlat
and
shrl
scas
cmp
aaa
mov
in
push
push
dec
or
cmp
xchg
dec
mov
sbb
inc
das
mov
pop
adc
in
int
pop
jmp
or
test
jne
cmp
sbb
ficoml
cltd
aad
neg
icebp
xor
leave
call
out
add
rorb
xchg
dec
inc
cs
dec
test
jns
mov
je
inc
inc
call
ljmp
testl
dec
lcall
fmull
or
xor
jb
sbb
dec
add
clc
push
out
adcl
insb
dec
fcoml
ds
es
push
lea
shlb
mov
xor
stc
jecxz
add
aam
out
lds
pop
call
test
arpl
iret
jns
repnz
jno
mov
in
mov
out
cmp
xor
repnz
mov
and
sbb
lret
pop
scas
push
jbe
sub
mov
les
sub
ds
xchg
xchg
int
fsub
loop,pn
adc
loope
dec
repnz
sub
dec
das
push
inc
iret
imul
rorb
dec
popa
and
xchg
sbb
bound
cmpb
outsb
mov
aad
cmp
andl
pop
cwtl
movsb
stc
scas
add
fistpll
cwtl
cmp
lret
mov
xchg
subb
jbe
jge
mov
lahf
test
push
or
jge
mov
cmc
jmp
mov
hlt
mov
adc
gs
mov
cltd
cmc
xchg
xchg
xchg
cs
mov
mov
mov
jbe
int3
test
add
dec
icebp
pop
cli
mov
mov
cli
lock
leave
aad
int
gs
or
xor
or
ja
pushf
cmp
sti
loop
cmp
cmp
insb
das
aam
bound
mov
pop
andl
cmc
pop
xor
dec
push
ret
fdivrl
js
adc
or
mov
jl
dec
les
dec
loop
lret
dec
pop
adc
movsl
push
push
call
ret
cltd
mov
xor
int3
ja
push
scas
lcall
mov
in
or
mov
sti
movsl
jbe
mov
mov
icebp
inc
xchg
fbstp
mov
dec
cmp
in
fs
aam
int
out
push
stos
imul
adc
adc
push
xchg
push
pop
clc
dec
popa
mov
test
xchg
and
push
test
shlb
xor
adc
jo
divl
js
hlt
and
mov
mov
loopne
adc
adc
xchg
aad
pop
arpl
jnp
lcall
xchg
out
xlat
rcrb
pop
icebp
adc
mov
sbb
dec
mov
popa
sbb
adc
sub
addr16
lods
push
jg
jge
dec
add
imul
sbb
cmp
push
in
in
and
sub
jae
cs
jge
dec
cmp
out
mov
mov
adc
push
jo
adc
aam
lods
cmpl
inc
movsl
mov
mov
fmull
mov
mov
pop
add
iret
cmpsb
mov
aam
mov
popa
lcall
mov
rolb
sbbl
fidivs
mov
mov
dec
mov
xchg
cmp
dec
rol
dec
outsb
push
push
cli
push
push
pop
ljmp
rolb
clts
jg
cli
cmp
enter
push
xchg
add
mov
pusha
cmp
stos
sub
and
and
pop
pop
and
fldl
cmp
push
outsl
add
xchg
xor
mov
lahf
lcall
arpl
jae
in
cmpsl
pop
mov
fisttpl
fs
push
xor
or
out
dec
stos
pop
mov
movsb
cmp
mov
mov
mov
insl
jg
lods
test
cmp
rolb
jle
mov
add
mul
push
call
adc
addl
inc
inc
ss
jmp
in
push
mov
mov
mov
push
fsub
pop
xchg
loopne
arpl
out
xchg
stos
aam
sub
movsl
movaps
or
mov
int
inc
popa
sarb
lretw
mov
aad
adc
sub
pop
cltd
add
ficompl
fldenv
xlat
test
out
sub
xchg
roll
inc
sub
and
xor
lods
add
cmpsl
inc
jno
out
aaa
inc
cmc
jno
inc
mov
mov
movsl
idivl
push
push
fwait
pop
add
ret
frstor
add
out
jmp
ds
xchg
mov
adc
mov
xchg
enter
pop
dec
repz
movsb
fmul
ret
call
inc
mov
mov
adc
sbb
data16
jne
ss
mov
mov
push
add
aad
je
sbb
mov
inc
dec
pop
xor
loop
outsl
push
jne
add
test
inc
faddl
push
popl
arpl
and
repnz
lods
mov
mov
inc
mov
add
and
dec
insl
cmp
sbb
mov
add
dec
int
and
test
out
shrb
cmp
xor
push
icebp
gs
dec
jp
push
xchg
or
sbb
roll
fildll
imul
call
loop
aaa
ret
scas
jle
fs
shrb
inc
ret
jl
push
push
push
ss
pop
add
cld
stos
scas
push
lahf
mov
jge
cmp
pushl
fisubrl
dec
xor
popf
pop
mov
sbb
loop
pop
jae
aam
in
stos
pop
cmp
mov
sbb
or
and
push
test
mov
jmp
ljmp
gs
aad
jg
out
jl,pt
fmul
loope
adc
push
cltd
sbb
aaa
fbstp
in
je
dec
pop
ds
fs
std
test
xor
movsb
inc
jge
pushf
pop
stos
jmp
pop
and
popf
push
or
pop
stc
fldl
imul
mov
adc
xchg
add
mov
mov
push
jl
sbb
push
jle
cld
cltd
stos
inc
fcoms
cmp
sar
fiaddl
dec
rep
repz
hlt
movsl
fmull
cmp
pusha
lock
ret
push
mov
sub
xchg
xchg
inc
mov
ja
xor
xor
sbbb
ja
cmp
push
adc
dec
xchg
add
push
adc
cmp
mov
ds
adc
cmpsb
and
mov
jge
repnz
mov
je
add
addb
imul
pop
dec
je
cmp
int3
cmp
push
out
cs
cmp
xchg
mov
inc
cmp
add
imul
fs
mov
in
popa
rcr
mov
inc
dec
fs
xor
rorl
pusha
inc
push
cmpl
imul
add
mov
adc
push
push
icebp
xchg
jecxz
call
jbe
inc
adc
ss
add
fistpl
pop
mov
jmp
shr
pop
pop
sbb
add
les
sub
push
out
sbb
aas
mov
xlat
mov
stos
jno
jp
std
sbb
sarb
flds
daa
inc
inc
or
jp
ror
and
mov
adc
inc
nop
jb
shlb
movsl
jmp
inc
aam
push
icebp
ja
shll
sub
inc
pop
xchg
mov
mov
jns
out
mov
pop
add
gs
cld
pop
ljmp
mov
mov
sbb
fsubrs
out
mov
fs
inc
stc
pop
dec
test
repz
sbb
inc
dec
int
mov
repnz
mov
inc
popa
dec
in
inc
add
test
inc
sbb
push
add
jle
inc
inc
cli
sub
shlb
test
clc
pop
sub
imul
lcall
aad
aam
sub
incl
cltd
mov
es
fucom
js
push
scas
pop
dec
hlt
xchg
sub
and
pop
or
addr16
fwait
sub
mov
sub
jnp
xchg
fstp
ret
inc
mov
xor
cmp
addr16
cs
xchg
and
dec
aad
mov
mov
and
or
ror
mov
cmpb
subb
clc
jmp
xor
and
sub
sbb
mov
add
or
and
jb
xor
rcr
dec
add
dec
into
enter
jae
stos
nop
xor
jl
pop
and
into
xchg
xchg
jl
mov
jbe
ret
mov
push
or
in
subl
scas
push
cmp
es
loope
push
sti
shr
add
jne
lods
cld
mov
jno
ja
push
inc
cmp
stos
xorb
inc
sbb
sub
aas
mov
cltd
pop
mov
xor
and
cs
test
pop
fs
sbb
movlps
adc
jle
cmp
mov
adc
pop
xchg
lods
mov
xor
test
or
sti
and
cmp
es
rcrl
pop
xchg
jns
mov
push
sbb
arpl
jae
and
popa
mull
js
dec
movsl
lods
fdivs
adc
je
out
and
shlb
mov
xchg
mov
inc
cmp
push
pusha
jns
roll
in
lahf
je
inc
in
xchg
jmp
xor
cmp
inc
mov
xor
je
dec
subl
push
fcomip
shl
dec
cmpsb
push
or
mov
or
adc
movsb
call
sub
imul
mov
js
rorb
testb
adc
lret
test
pop
pusha
xchg
cmp
shlb
mov
jmp
and
rcrb
pop
mov
test
repz
push
xor
cmp
stos
das
into
sub
xchg
push
add
xor
xor
and
ficoml
xlat
inc
je
subl
or
call
or
sub
push
sbb
inc
jne,pt
pop
mov
dec
mov
loop
in
rorl
mov
add
movb
mov
fistl
sbb
xor
jne,pt
push
fcomp
jp
jg
cmp
mov
pushf
in
or
iret
jle
rorl
adc
je
es
cld
lret
jg
pop
push
cmpsb
stos
sub
jle
das
mov
lods
pushf
and
dec
fs
std
sahf
test
adc
dec
scas
lahf
cmpsb
mov
ljmp
sub
pop
test
sbb
jne
sub
and
adc
loopne
data16
or
cmp
add
mov
flds
cltd
inc
and
and
mov
repz
adc
scas
cli
mov
scas
lea
cmpsl
jle
mov
imul
sub
cs
test
mov
hlt
jne
add
es
cmpb
dec
xchg
mov
and
or
sbb
sub
mov
lds
xchg
pop
cmpsb
and
fidivs
pop
or
icebp
es
sub
js
cmp
mov
inc
mov
sets
pop
scas
add
pop
out
pop
mov
out
pop
inc
sub
xchg
push
jb
xchg
insl
mov
sub
es
std
ja
ret
cmp
mov
imul
and
add
sub
pop
mov
mov
xchg
or
sub
jo
and
insl
aad
pop
jle
out
shlb
mov
test
cmp
fdivr
jg
cmc
testb
mov
in
leave
add
scas
mov
sub
jg
jg
jno
mov
in
lds
pop
cs
push
or
add
fstps
push
ret
andb
inc
cmp
xor
dec
loop,pn
mov
cmp
int
int3
xchg
ljmp
mov
das
push
push
enter
roll
sub
sahf
sahf
ja
pop
sbbb
lcall
stos
iret
xor
jecxz
push
stos
test
leave
das
adc
pushf
and
mov
and
pop
adc
mov
das
and
lods
ljmp
mov
test
mov
stos
fnstcw
and
fmuls
vmovups
cmpsl
xor
imul
imul
js
lret
fnstsw
out
daa
mov
lods
dec
jb
jl
imul
shlb
mov
test
mov
movsb
jno
lcall
add
pop
jno
idivl
lds
scas
rol
and
test
mov
pop
lret
and
lahf
jno
stos
xor
jg
push
xor
jbe
add
pop
out
jg
test
push
xlat
jno
mov
pop
inc
clc
mov
pop
or
pop
mov
aaa
mov
sbb
cmpb
sbb
and
pop
dec
cmp
fldcw
test
push
sub
ja
mov
icebp
mov
je
pop
and
push
test
pop
mov
mulb
in
icebp
fsts
daa
daa
icebp
movsl
out
cwtl
daa
sbb
inc
mov
pushf
pop
mov
pop
xor
fsub
pop
adc
nop
lahf
jl
push
dec
inc
inc
iret
rolb
xor
and
addr16
cltd
xor
mov
roll
mov
fcoms
lahf
mov
dec
jg
xchg
push
scas
aas
push
push
in
add
jno
sahf
int3
mov
andb
mov
pop
inc
pop
push
popa
ja
push
rcr
stos
xor
jle
cmp
lahf
inc
and
pop
jo
sbb
scas
pop
mov
and
mov
ds
xchg
stos
inc
sub
popa
mov
xchg
movsb
pop
test
fildll
mov
push
loope
mov
jmp
mov
movsl
inc
jo
and
pop
sarb
xor
jb
dec
pop
loopne
jno
sub
test
adc
add
inc
pop
and
mov
mov
dec
and
inc
enter
sub
stos
fcoms
std
jecxz
ret
mov
dec
js
sub
insl
clc
jg
mov
xchg
popf
push
xor
cmp
add
push
sahf
mov
popa
je
xorl
mov
fs
cmpl
fcoml
jnp
and
aas
ret
test
out
cltd
dec
shl
or
fwait
mov
sbb
icebp
inc
or
movsb
and
pushf
xchg
inc
mov
jge
mov
sbb
or
adc
stos
ds
xchg
fildll
fstpl
pop
aad
add
mov
int
pusha
pop
jg
movsb
add
add
scas
mov
lcall
xchg
ret
sub
cmpb
dec
xlat
popl
leave
jb
jecxz
jmp
lret
mov
das
aas
mov
hlt
pushf
dec
sarb
jp
pop
cmp
cwtl
rcl
push
lcall
je
div
jecxz
adcl
push
mov
aad
jle
sub
test
push
add
cmp
int
xor
sub
sti
fcom
jns
cmp
mov
aam
mulb
mov
shl
loope
mov
in
and
jecxz
lds
fs
fisubrl
push
push
cmp
dec
insb
xchg
pop
xor
adc
ficoml
inc
xchg
jp
sub
hlt
out
pop
sbb
and
xor
shl
mov
or
or
mov
adc
lcall
adc
loope
push
or
in
xor
mov
cmp
ret
xchg
jne
push
inc
cmp
sub
mov
movb
mov
jne
bound
into
push
mov
sbbb
pusha
sub
bound
popa
inc
xlat
test
aaa
or
push
out
lcall
mov
sub
fldenv
ss
rorl
mov
jge
fidivl
push
push
mov
sahf
ja
inc
jp
jmp
mov
jns
mov
cltd
dec
arpl
jno
inc
imul
movsb
and
add
lods
imul
xchg
inc
pop
inc
hlt
add
xor
sti
jns
mov
cmp
sbb
negb
js
into
shll
pushf
dec
jo
mov
mov
add
ja
and
dec
mov
or
leave
mov
mov
stc
dec
aaa
popf
push
jb
enter
push
push
femms
jns
inc
xchg
xchg
mov
lods
xor
lods
or
xchg
xor
popa
push
cli
testb
popa
les
xor
xchg
sub
xlat
push
xor
add
push
imul
mov
mov
adc
nop
scas
hlt
add
inc
add
nop
pop
cmpsb
in
das
sbbl
test
pop
scas
push
std
xchg
movsl
add
mov
pushf
cmc
jecxz
sbb
jnp
xchg
jo
out
adc
mov
movsb
push
rorb
jnp
push
insl
repnz
push
cwtl
mov
mov
mov
cmp
jo
xor
out
or
push
or
add
pop
push
out
xchg
movsl
out
int
jle
and
xor
or
pop
pop
ret
lret
sub
inc
pop
xchg
hlt
sub
sub
imul
cmpsl
movsl
pop
scas
xchg
push
call
pushf
js
and
ss
dec
ficoms
mov
adc
cwtl
xchg
lea
les
mov
push
ret
jbe
ret
cmc
sbb
adc
sbb
lock
mov
fdivs
ret
add
inc
inc
sbb
mov
pop
xchg
imull
shrb
pop
cmp
rcrl
loop
ljmp
lcall
les
jg
sub
test
jo
push
adc
pop
push
mov
popf
jns
and
test
lock
lret
sbb
or
js
push
mov
sub
in
xchg
out
cmpb
dec
js
xor
inc
mov
mov
imul
ds
jecxz
xor
mov
mov
nop
mov
add
xor
arpl
nop
xchg
int3
push
mov
and
sbb
sub
pop
push
sub
incb
xor
sbb
ffreep
out
mov
mov
pop
mov
in
rorb
lahf
sub
or
push
xor
mov
or
xchg
pop
pslld
out
cmpsl
pop
std
fcos
mov
adcl
jne
xchg
fscale
clc
mov
insl
mov
add
frstor
lcall
inc
test
sub
leave
or
jns
adc
ja
sub
ss
or
shrb
push
fdivrp
in
pop
sbb
inc
test
fwait
test
gs
icebp
roll
jo
mov
out
nop
in
jnp
inc
rorl
jp
add
sub
mov
es
jns
dec
mov
pop
enter
jnp
sub
scas
push
sub
fstl
dec
or
insl
std
orl
imul
xchg
pop
adc
loop
ds
mov
imul
iret
aad
jbe
lea
stos
xor
mov
push
shll
push
xchg
jmp
adc
je
cmp
notl
cmpsl
mov
xchg
inc
ds
rclb
dec
mov
aas
ja
loope
dec
cmpsb
cld
das
mov
pop
xchg
add
les
sbb
aam
lods
pop
add
cmp
in
enter
dec
xchg
push
dec
movsb
insl
mov
insl
out
lods
cmp
stc
cmpsl
or
jp
sbb
adcb
jp
movsl
loope
jecxz
cmp
in
rorl
xor
lahf
adc
leave
jmp
and
jnp
cltd
push
or
jbe
sub
out
pop
mov
jno
rcl
movsl
inc
fdiv
cmp
fs
in
cmp
into
jbe
clc
shrb
and
mov
or
test
sub
mov
jne
pop
enter
cmp
xchg
pushf
test
in
popa
sbb
sub
jbe
or
pop
jecxz
cwtl
gs
shl
or
rorl
fisttpl
leave
jmp
adc
mov
leave
mov
arpl
adc
mov
jp
and
mov
andb
xchg
dec
std
adc
jg
xchg
arpl
push
lea
push
hlt
cs
mov
pop
sbb
xchg
aaa
daa
scas
xchg
adc
push
mov
mov
scas
or
stc
sub
add
shrb
fwait
mov
and
lods
fdivrs
xor
cmp
sub
xchg
mov
mov
stos
or
pop
outsb
jp
inc
pop
jne
adc
mov
inc
dec
ljmp
jns
sbb
inc
xchg
aad
std
pop
popf
andl
adc
rcl
imull
or
rclb
pop
mov
push
push
or
or
cmp
call
test
or
dec
sub
jp
test
adc
fcoms
popf
sbb
jo
sub
jp
pusha
out
aaa
aas
sti
sub
push
and
mov
pop
dec
fs
mov
and
popf
pop
outsl
imul
test
stos
les
insl
pop
daa
sub
movsb
pop
adc
adc
imul
add
pop
sbb
jb
std
loope
in
icebp
data16
lock
leave
test
push
subb
and
mov
dec
inc
lea
pop
outsb
insb
mov
mov
loope
xor
xlat
leave
inc
and
into
out
ret
inc
push
jb
sub
adc
aaa
inc
sbb
xor
lock
xchg
mov
pop
je
adc
dec
or
mov
add
loope
mov
or
sti
loope
adc
ret
sarl
dec
sbb
sahf
divb
xor
pop
cwtl
out
icebp
stos
jb
add
dec
pop
push
mov
negb
repz
push
jecxz
fnsave
and
jge
pop
rcr
push
inc
add
dec
in
clc
inc
pop
call
lods
xchg
mov
xchg
add
xor
pop
ret
divl
adc
push
loopne
fcomi
inc
into
lods
xor
in
fcmovu
lcall
mov
out
mov
xchg
or
aas
ret
test
shr
adc
nop
in
sbb
out
xchg
outsb
pop
fsts
jle
ror
adc
clc
adc
jo
push
das
xor
cld
movsb
sub
mov
popl
sbb
xchg
inc
cmpsb
out
jge
jo
scas
lret
sub
das
ds
cmp
or
adc
xor
push
cltd
push
lods
xor
jnp
int
mov
hlt
mov
out
imul
jbe
mov
xchg
adc
lock
jmp
dec
adc
mov
pop
xor
sbb
clc
fwait
clc
mov
pop
mov
into
mov
push
das
cmp
lock
sbb
xchg
and
nopl
insb
jns
clc
or
cltd
jb
push
xchg
sar
dec
stos
adc
ret
jbe
xor
aam
mov
pop
aas
xor
imul
mov
mov
mov
faddl
add
xchg
sbb
add
rcll
push
inc
cmp
aas
pop
in
imul
icebp
push
jmp
dec
rcrl
icebp
lods
stos
or
movsb
xor
mov
gs
mov
int3
mov
pop
sbb
mov
and
into
es
adc
lds
in
addr16
pop
ja
icebp
call
mov
leave
mov
dec
cmp
push
int
jnp
or
inc
push
cmpsb
pop
in
and
mov
cmp
cld
call
pop
sbb
inc
test
and
addl
call
mov
sub
fnsave
aaa
mov
rclb
pop
add
sbb
jp
fucom
arpl
cmp
jg
inc
orl
or
testl
cmpsb
jns,pt
into
push
jo
fildl
out
fwait
pushf
dec
cmp
mov
push
jno
inc
mov
in
popf
or
cs
sbb
shl
out
insb
arpl
pop
add
cmp
sub
cmp
jmp
lret
mov
mov
cmp
in
cld
inc
inc
sub
scas
pop
icebp
pop
jb
fld
pop
insb
pop
dec
mov
push
lret
movsb
pop
push
ret
movsb
dec
mov
lods
popa
fisubl
arpl
js
sbb
or
and
pop
pop
inc
xor
cwtl
sbb
sbb
leave
mov
mov
cmpsl
sbb
or
test
xlat
inc
lahf
mov
cmpb
aam
test
lcall
and
popa
inc
outsb
je
pop
or
adc
sub
fnsave
lods
fwait
add
icebp
call
sbb
xchg
mov
pop
mov
test
mull
pop
arpl
jmp
fists
mov
in
mov
sub
mov
cmp
movsb
iret
scas
mov
inc
enter
sahf
imul
rol
and
not
pop
sbb
xchg
mov
js
js
mov
xchg
pop
push
inc
and
loopne
push
push
rolb
mov
mov
in
inc
push
mov
jecxz
cli
enter
adc
pop
pop
and
xchg
rorb
adcb
xchg
add
mov
inc
sub
mov
push
gs
cmpsb
in
out
sbb
lret
ds
movb
xchg
pusha
jmp
notb
dec
mov
sub
pop
mov
sti
mov
sbb
ljmp
test
xchg
sub
lock
outsl
xor
daa
dec
scas
daa
mov
inc
int3
dec
ljmp
fdivrs
aad
xor
lcall
adc
dec
cld
mov
mov
out
cmp
in
insb
or
addr16
sahf
idivb
stos
jg
lcall
pop
xchg
push
mov
clc
inc
xor
aad
mov
ret
jne
bound
adc
push
lock
or
push
mov
lret
lock
sarl
addr16
mov
pop
cs
xor
pop
mov
ret
ret
shll
xchg
mov
arpl
inc
cmpsl
adcl
sub
inc
push
fistpl
jecxz
sbb
mov
js
insb
add
mov
rorb
pop
lods
shrl
jp
in
pop
push
or
fsub
test
fstp
lock
pop
xchg
loop
sub
pop
in
sbb
pop
cmp
es
ljmp
loop
mov
jp
cmp
or
fs
jnp
iret
loop
addl
aas
gs
cmp
xchg
iret
cmp
lcall
inc
cltd
fneni(8087
xor
lods
ss
fs
dec
int
loope
aam
add
mov
dec
xchg
sub
adc
xor
cmp
test
cwtl
mov
xchg
cld
adc
ja
push
lret
ljmp
fdivrs
xor
mov
scas
jnp
imul
inc
push
push
movsl
cmp
xchg
data16
adc
test
jp
or
mov
mov
sub
lret
aam
xchg
jne
jnp
jo
cwtl
mov
in
inc
xchg
mov
cmp
xchg
mov
shrb
dec
add
jns
in
movsb
out
adc
push
cmp
ret
or
xchg
xchg
decb
jns
test
push
sbbb
test
add
les
or
cmp
sub
cmp
mov
test
push
lods
pushf
hlt
cltd
adc
xchg
jnp
and
push
xchg
insb
jge
inc
mov
cmp
cmp
xchg
push
push
lods
imul
sub
xchg
mov
cmpb
mov
push
lret
in
mov
gs
xor
ja
cwtl
cs
pop
push
and
int3
les
jge
mov
adc
cmp
adc
imul
test
sahf
jae
mov
mov
ds
cmp
aaa
xor
adc
loop
dec
sar
sbb
icebp
push
xchg
mov
mov
push
dec
insl
xlat
and
jb
xchg
dec
fsubrl
out
int
sub
inc
cli
orb
jle
jp
xchg
jecxz
inc
idivb
test
xchg
fstps
jl,pt
ret
lods
add
int
dec
mov
xchg
inc
dec
in
gs
shll
cmpsl
shl
mov
es
lea
lods
sbb
inc
cli
jno
cmp
inc
movsl
cmpsl
jg
cmp
data16
adc
jbe
dec
cld
rcrb
pop
out
pop
and
dec
cmc
clc
pop
pop
and
test
cmp
inc
sub
add
and
cltd
sbb
sub
pop
and
arpl
testb
jmp
scas
inc
add
aaa
cmpsb
xor
cmpsb
pop
jne
and
xchg
testl
int
pop
lds
dec
add
leave
cltd
cmp
mov
fdivrl
xor
xchg
arpl
mov
je
call
cmp
jae
sub
xor
ret
or
ror
fildl
test
sub
cmp
movsl
cli
nop
out
mov
ret
gs
fistpll
ret
fs
dec
push
aaa
or
loopne
dec
lahf
add
cmp
push
cmp
cmp
and
mov
cmpsb
add
fistl
dec
dec
inc
inc
mov
jge
lcall
push
or
jmp
enter
int3
sub
and
clc
fwait
addr16
lds
repnz
jmp
sti
mov
sub
or
clc
movsl
cmp
loop
lds
jl
lock
mov
cmpsb
xchg
sub
insb
xchg
sub
xor
xchg
mov
sbb
out
ja
sub
xchg
call
xor
ljmp
popa
lret
cmpb
cmp
jg
fidivrs
sub
daa
sbb
cmpsl
cmc
cmp
push
in
std
roll
lods
add
test
mov
mov
mov
sbb
xor
notb
xchg
pop
nop
arpl
pop
lods
add
pop
jg
fs
and
outsb
jmp
les
fsubrl
mov
shlb
and
xchg
mov
fs
stos
jmp
stos
mov
mov
or
cmpsl
iret
jnp
jne
cmp
or
lock
clc
push
cmp
scas
ja
aam
arpl
je
add
cmp
jno
pop
push
test
mov
scas
mov
fistpl
inc
xor
cmpsb
push
pop
add
subl
pop
test
add
push
in
xchg
test
and
test
mov
sbb
mov
xlat
loope
ror
rcl
push
and
ljmp
and
bound
loope
in
xchg
or
inc
inc
sbbl
jmp
mov
fidivs
mov
lds
mov
shlb
mov
cli
mov
or
sbb
jl
mov
lock
cmp
or
xor
cmp
mov
fiadds
dec
repz
cmp
leave
fiadds
sti
repnz
shll
test
mov
mov
lret
out
in
inc
inc
sbb
sarb
out
pop
sahf
scas
mov
mov
cmp
inc
mov
lcall
fisubs
pop
daa
lds
mov
jl
lock
insb
scas
xchg
cltd
and
pop
mov
inc
ret
sti
xor
xor
and
mov
les
lcall
sub
xorb
inc
push
std
adc
lea
stos
mov
jae
mov
loop
call
notb
imul
cmp
pop
in
je
pop
or
mov
dec
jno
inc
pop
mov
cld
jmp
inc
xor
jle
sbb
loope
xchg
popa
in
addr16
xor
push
push
popf
nop
scas
jb
lret
vsqrtsd
cmp
pusha
mov
adc
or
lcall
and
gs
loop
sbb
jae
jnp
sbb
mov
push
add
ret
mov
xor
test
add
sub
sahf
and
shrl
and
mov
cmc
mov
push
lret
push
aaa
xchg
out
mov
into
inc
test
subl
js
in
jb
or
mov
jo,pn
decl
je
push
pop
jg
orl
mov
dec
fistps
roll
mov
sub
fsts
shlb
test
std
add
or
mov
sbb
fiaddl
cwtl
dec
dec
sbb
sbb
int3
hlt
jl
insb
cs
shl
inc
rcrb
mov
xor
leave
or
aaa
cmp
add
add
xor
cwtl
pop
pop
fcomps
out
adc
int3
rolb
and
lock
xor
out
out
pop
adc
ss
test
ja
and
shr
fdivrs
out
out
lret
sbb
pop
cmp
jecxz
call
test
sti
xlat
sbb
mov
inc
les
inc
insb
push
push
cmp
mov
jmp
xor
add
xor
jmp
lods
lea
data16
lret
fnstsw
divl
sbb
or
fldl
decb
adc
xchg
fsts
pop
aam
imulb
lcall
xor
dec
push
das
das
pop
sbb
sbb
xor
mov
dec
and
pop
fiadds
movsb
xchg
arpl
pop
jo
xlat
lds
int
and
inc
popa
mov
and
imul
addr16
fs
xor
pushf
clc
nop
jge
mov
iret
adc
push
fwait
and
pushf
pop
mov
movsb
push
stos
mov
out
or
sbb
cmp
sbb
push
mov
outsl
call
testb
cmpsb
mov
out
mov
lret
ret
jg
push
push
out
cmp
push
ljmp
out
xchg
cwtl
daa
insl
sarb
addb
iret
jle
imul
jo
push
adc
loop
and
mov
sub
std
sbb
xlat
les
fisubl
fistps
cld
inc
aas
insb
pop
xor
jge
jl
xor
cld
add
outsb
and
and
bound
movsb
add
jne
fiadds
pop
pop
lds
frstor
push
das
popf
jae
stos
jg
pop
xchg
mov
inc
mov
jne
mov
mov
xchg
xchg
mov
shlb
ljmp
mov
mov
mov
dec
inc
and
pop
mov
xchg
push
aaa
cmp
pop
stos
mov
add
cmp
jmp
fstpl
test
lock
inc
out
into
test
push
jnp
mov
jmp
lods
enter
cmp
jo
or
or
pushf
jnp
test
jne
and
push
icebp
imul
mov
jno
rcl
mov
scas
lret
lock
test
jl
adc
loope
mov
rclb
daa
andb
out
popa
and
add
rcll
xlat
addb
mov
ja
mov
sbb
xchg
lret
and
sbbb
sub
test
xorb
mov
loop
mov
sbb
loope
sub
shlb
xor
cmc
jle
fs
xchg
iret
sbb
test
cmp
xlat
test
lds
cmp
out
leave
xchg
mov
mov
dec
fs
in
dec
push
xchg
add
daa
push
pusha
jmp
adc
out
mov
dec
stos
push
or
pushf
shlb
sarl
je
in
lcall
std
inc
push
push
add
inc
pop
sbb
icebp
inc
inc
popa
inc
adc
cmp
sbb
nop
lods
xor
xlat
xchg
adc
sbb
loope
bound
pop
int3
insb
sbb
pop
cmpsl
std
loope
inc
lea
es
sti
sub
subb
inc
fdivr
in
fwait
roll
cmpsl
icebp
in
mov
std
iret
xchg
xchg
lahf
adc
mov
out
hlt
sbb
rclb
push
out
sahf
sub
ds
aaa
xchg
mov
outsb
mov
daa
fidivs
push
push
mov
movsl
std
jg
stos
or
fstpl
sbb
cs
insl
or
pusha
sarl
dec
mov
addr16
dec
out
mov
out
inc
push
sar
fidivl
test
iret
inc
data16
aaa
lret
jne
repz
fisttpl
std
test
iret
jmp
mov
int
imul
call
add
hlt
mov
push
or
jo
in
xchg
xchg
pop
in
popf
scas
in
add
icebp
pop
fistl
sbb
jns
lds
pop
cs
imul
push
or
cmp
jl
jbe
in
mov
pusha
push
adc
mov
cmp
pop
push
mov
loop
push
inc
xor
out
insb
daa
cmc
add
imul
test
jnp
push
int3
adc
pop
rcrl
out
pop
push
cmp
repz
jle
mov
jo
sub
cmpsb
pop
cmpsl
aam
adc
jne
sbb
frstor
aaa
test
xchg
scas
inc
test
jno
test
add
stos
add
cwtl
mov
pop
enter
sahf
pop
push
and
test
xchg
adc
je,pn
pop
sbb
cmc
xchg
je
scas
out
popa
sub
outsb
in
push
outsl
or
mov
inc
daa
push
push
pop
lret
cmp
data16
mov
fildll
ret
dec
jno
sub
lahf
jl
cwtl
jo
xor
inc
adcb
fbld
imul
mov
mov
imul
or
xor
fdivr
ds
sbb
dec
and
push
and
adc
xchg
lret
mov
mov
push
mov
fcomp
mov
mov
add
lret
cmp
sbb
sub
sahf
adc
test
in
mov
or
stos
mov
fucomp
hlt
jo
mov
shl
xor
movsb
fwait
test
rcrl
sub
popa
fst
push
les
sbb
orb
xchg
in
repnz
imul
mov
mov
and
popf
cmp
dec
xchg
gs
std
aas
mov
mov
out
jle
cmp
lcall
lock
mov
xor
out
cmp
or
or
mov
push
or
pop
aam
fidivl
lahf
movsb
mov
in
cmp
dec
add
push
imul
cmp
jnp
sahf
in
and
dec
fnsave
push
ret
aam
adc
adc
add
cmpsl
add
dec
or
or
loop
cmpsl
sbb
scas
sbb
and
arpl
fwait
add
inc
icebp
lds
pop
dec
clc
loope
add
mov
adc
xchg
or
mov
inc
xlat
sub
fwait
dec
xlat
mov
int3
pusha
inc
jmp
outsl
rcrl
test
inc
mov
unpckhps
loope
push
mov
jno
add
cmp
outsb
xor
fcompl
mov
or
xchg
fisubl
xor
add
lds
enter
adc
jl
sti
popf
push
aaa
in
shrl
sti
sub
repnz
sbbb
stos
arpl
push
testb
mov
adc
sub
jl
jae
jb
adc
mov
xchg
pop
jno
cmp
jecxz
or
mov
jne
sub
dec
lcall
xchg
mov
sub
popf
pop
adc
sub
decl
mov
cmp
lcall
icebp
lock
cmp
adc
inc
cmp
inc
push
pushf
jae
xchg
pop
lcall
in
and
lds
inc
into
lock
jno
mov
push
addr16
inc
cld
mov
xchg
dec
jmp
push
ljmp
cwtl
out
jae
movsl
shlb
call
jns
imul
jl
scas
mov
sbb
dec
cmc
and
and
adc
ss
insl
pop
aad
and
rcl
popf
stos
dec
mov
xor
lahf
test
or
ljmp
stos
adc
les
xacquire
call
ja
test
aaa
lea
xorb
or
inc
movups
stc
sub
add
push
ds
lahf
xor
xlat
fwait
mov
add
call
mov
push
outsb
aad
ss
pop
lret
mov
daa
fnstsw
mov
inc
call
cmovo
hlt
shrb
mov
cmp
pop
test
sub
jmp
xchg
or
je
cmpsl
loop
mov
faddl
lds
loop
and
clc
xor
xchg
pop
ss
add
adc
xor
lods
out
aad
imul
xorl
fstl
cmp
arpl
push
aad
aad
into
stos
inc
push
jae
pop
xchg
pop
inc
fstpt
sub
jg
into
out
insl
xchg
add
out
lcall
imul
pop
test
inc
cmp
aad
lods
data16
pop
mov
scas
mov
test
dec
jg
mov
mov
pop
sbb
ds
subb
sbb
mov
mov
divb
aaa
test
arpl
or
push
inc
jmp
pusha
mov
ds
sbb
fidivrs
icebp
insb
cmc
aad
fdivl
mov
repnz
and
in
out
push
std
jecxz
xchg
jo
js
sub
test
ds
inc
aam
and
mov
dec
xchg
mov
neg
pop
mov
dec
imul
pop
add
call
pop
arpl
lret
and
fs
fldt
repz
icebp
shrb
fidivl
test
aaa
xchg
push
imul
xchg
push
leave
rolb
and
and
jp
mov
mov
test
or
xor
push
dec
mov
jle
rorl
movsl
test
sub
mov
test
bound
add
test
sub
mov
das
jbe
mov
testb
jo
xor
or
jle
aad
mov
repz
sbb
outsb
jae
cli
sbb
pop
jmp
in
aas
and
mov
xor
cmp
repz
movb
push
inc
push
mov
cmp
add
push
loop
jb
mov
int3
insb
sahf
fwait
repz
insl
dec
mov
push
out
xor
cmpsl
cmp
push
insb
daa
ja
sarl
lret
jne
sbb
jns
jae
xchg
rorl
xchg
add
enter
out
mov
imul
imul
ljmp
popa
icebp
xchg
xor
data16
decb
shlb
cli
mov
inc
shlb
mov
das
fisubrs
adc
subb
or
jae
pop
mulb
inc
add
cmp
lret
and
xor
je
loop
insb
push
mov
xor
filds
mov
das
div
pusha
clc
dec
mov
add
out
bound
cld
xchg
mov
xlat
call
sbb
jg
imul
dec
lds
clc
cmp
icebp
pusha
mov
or
mov
push
mov
js
mov
xor
pop
pushf
leave
pop
pusha
movsl
aas
mov
iret
sub
cmpsl
and
jbe
addr16
lahf
les
jmp
xchg
jp
out
dec
and
decb
mov
xor
fwait
aad
in
ficoml
repnz
mov
inc
lcall
cmpsl
into
xor
cli
mov
mov
mov
aam
in
dec
jb
push
pop
rorb
or
ja
dec
in
addr16
jo
pop
fisubrs
js
and
cmp
aas
add
cltd
cmpsl
shrb
aad
xchg
jg
movups
aaa
cmp
dec
aas
stos
xlat
push
jno
jb
add
test
aam
mov
jge
testb
in
mov
cmc
or
xchg
sahf
ss
popa
es
pop
insb
sti
xor
dec
mov
lea
gs
or
cmpsb
lods
mov
push
sbb
and
mov
add
addr16
std
adcb
loope
insl
sub
lret
dec
ds
jno
cmp
fadd
push
jne
xchg
out
jbe
mov
pop
dec
cltd
lahf
stos
lret
sub
xlat
pop
sbb
out
adc
fstl
mov
cmp
or
lock
add
fldcw
hlt
xor
or
xchg
add
mov
inc
or
cmc
jnp
mov
or
scas
movsb
in
lcall
mov
and
cmpb
ja
mov
fists
jae
repz
scas
xchg
jns
stos
push
mov
cmpsb
cmpsb
scas
push
cld
jbe
sub
mov
jbe
stos
push
sarl
adc
lea
aam
sbb
adc
inc
inc
in
push
js
mov
loopne
mov
cli
jo
por
pop
add
in
dec
pop
dec
cbtw
jle
sbb
pop
mov
dec
push
shl
add
push
mov
mov
lcall
in
mov
aaa
aaa
push
cmc
pop
or
aam
mov
push
pop
rorl
jge
pusha
imul
stos
xlat
push
les
cld
cmp
jmp
cmp
adc
bound
jae
sbbb
push
in
lcall
inc
jo
in
shll
movsl
xchg
xchg
pop
test
xor
das
sbb
jno
push
fnstenv
fnstcw
mov
scas
js
std
pop
inc
push
mov
xchg
add
dec
loopne
inc
or
jns
mov
subb
gs
jb
mov
inc
push
fs
xlat
adc
sub
addl
stos
pop
outsl
mov
mov
cwtl
imul
pop
out
mov
out
xchg
adc
push
addr16
data16
dec
es
pop
sahf
in
dec
adc
jmp
or
fiaddl
mov
add
or
pop
pop
into
out
jle
add
popf
and
lret
mov
sub
mov
data16
pusha
and
mov
in
stc
outsb
das
push
xchg
ret
fldenv
stc
jmp
mulb
xchg
sbb
xor
inc
cmp
imul
sub
iret
push
xchg
lret
icebp
dec
icebp
aam
int3
jmp
cmc
inc
dec
add
add
push
pop
leave
push
jae
dec
mov
insl
xor
add
sbb
pop
cmc
mov
in
in
xlat
sub
aaa
xchg
mov
adc
fwait
jae
xor
dec
jae
mov
jge
ret
out
stos
cltd
imul
shl
scas
sbb
mov
sbb
pop
mov
test
aaa
sub
cmp
push
fldl
shll
pushf
jns
sub
push
sbbb
loop
addr16
inc
sbb
enter
lods
adc
cmp
loop
push
jnp
fnstenv
pop
xchg
int3
lahf
xor
pop
imul
ja
cmp
js
negb
xchg
sbb
or
xchg
cmp
push
incb
out
inc
vcvtss2sd
loop
in
js
adc
mov
inc
jecxz
jnp
in
scas
gs
cmovl
popa
xchg
in
mov
sbb
adc
dec
repnz
ret
fwait
adc
jge
xlat
xchg
pop
pop
aam
pop
xchg
mov
or
mov
inc
ret
mov
js
mov
mov
daa
cmp
stos
test
lea
cltd
sbb
and
loope
flds
pop
cmp
data16
pop
add
repnz
mov
jecxz
push
jge
sbb
sahf
popa
mov
scas
js,pt
call
daa
inc
aad
adc
sub
jp
clc
mov
dec
addr16
push
adc
adc
popf
es
jne
push
jno
jle
ljmp
test
xchg
ret
xchg
lcall
xchg
rcl
int
mov
in
daa
inc
cli
lret
gs
sub
xchg
shrl
mov
or
inc
adc
mov
cli
sti
and
ljmp
stc
xchg
je
fbstp
das
cmp
mov
mov
dec
nop
xchg
shl
fsts
subl
je
jmp
mov
or
lods
fdivr
in
mov
iret
ret
sub
jo
push
jp
divb
and
das
inc
lret
dec
fidivrl
mov
mov
and
hlt
mov
add
fldenv
into
lret
sub
xchg
lret
jbe
lds
dec
fcompl
xchg
xor
cmc
data16
imul
fidivl
lods
sub
pop
or
mov
lea
shrl
xlat
adc
test
inc
popf
mov
add
aaa
lret
test
imul
movsb
rcrb
xchg
ja
jnp
lods
push
mov
cli
xchg
gs
jbe
add
push
pop
dec
push
popf
out
inc
sbb
loopne
or
push
add
adc
into
aas
leave
xchg
and
xor
or
and
pop
cli
jae
cmc
sbb
jge
sub
ja
daa
out
ja
and
dec
pop
es
mov
mov
mov
ja
mov
fwait
jl
mov
cltd
rorl
lahf
out
and
cmp
icebp
add
ret
insb
lret
push
jno
push
in
dec
sbb
xchg
in
insl
add
adc
dec
adcl
shlb
popa
mov
cmp
sbb
incl
xchg
xchg
fstl
in
out
rcrl
fnstenv
push
inc
sbb
jns
test
nop
pop
out
dec
ljmp
inc
add
lahf
adc
inc
es
in
jmp
ja
ja
xchg
into
fadds
leave
test
sti
pop
not
mov
xchg
mov
inc
xchg
call
mov
loop
stos
mov
loopne
int
insl
pop
outsl
fisttps
mov
push
lock
repnz
scas
mov
ret
add
and
mov
in
es
pop
inc
scas
add
sub
dec
inc
or
popa
cmpl
sub
add
and
push
push
xor
add
mov
stos
lods
pushf
pusha
or
sub
jo
xchg
jl,pt
das
ds
rcrb
pop
gs
stc
pop
lahf
jns
out
xor
repnz
or
sbb
mov
jnp
mov
mov
movsl
mov
scas
inc
cmp
push
mov
sub
xor
mov
sub
xchg
mov
andl
cmp
mov
inc
gs
outsb
sahf
mov
push
out
repz
imul
dec
adc
icebp
inc
push
loope
ljmp
fidivrs
pop
and
ficoml
xchg
add
test
xchg
test
mov
movb
cs
mov
loope
out
mov
mul
dec
loope
out
rcll
rcll
jmp
add
mov
rcll
lahf
clc
add
inc
sbb
push
jnp
mov
inc
mov
xchg
cmpl
lahf
arpl
dec
jbe
cmp
push
inc
js
mov
daa
lods
leave
cmp
out
jo
pop
and
ret
jbe
pusha
or
out
test
ss
outsb
sti
pop
fdivl
push
mov
xchg
and
rol
addb
mov
jmp
pop
pop
mov
cmp
xchg
cmpsl
sbb
bound
cmpsl
cmp
push
xor
clc
pop
mov
cs
aaa
adc
imul
sub
lret
out
jg
mov
outsb
jno
int
or
or
fldcw
into
or
lcall
push
sahf
cmc
test
int
mov
jbe
sbb
and
icebp
cs
add
sbb
mov
sahf
xorl
mov
stos
xlat
and
cmp
loop
les
call
add
xchg
pop
jae
jg
sub
mov
pop
pop
lods
mov
aas
push
and
push
pop
and
int3
xchg
es
lods
cmp
mov
dec
mov
add
adc
xor
and
inc
outsl
xor
jmp
mov
loop
enter
je
repnz
xor
and
fucomi
xchg
sub
inc
pop
add
xchg
jg
mov
sub
andb
inc
xchg
jo
out
cmpsl
lret
push
mov
adc
out
cmp
std
xchg
dec
push
gs
push
and
std
scas
mov
mov
mov
jb
push
jmp
cmp
mov
jbe
xchg
adc
scas
push
xchg
movsl
ja
lret
inc
inc
insb
inc
js
cwtl
rolb
dec
ret
xor
inc
orb
pop
jecxz
shll
add
adc
mov
loop
out
jle
bnd
push
sub
fcoms
pop
inc
xor
sub
inc
cli
pop
sbb
movsl
add
push
add
dec
xor
xchg
leave
stc
sbb
popa
adc
and
mov
dec
std
cmc
jmp
gs
repnz
jnp
xchg
push
mov
rolb
add
dec
popa
pop
cmp
dec
loope
rcl
lds
and
out
xchg
clc
mov
pusha
inc
pop
mov
lahf
cs
int
orb
cmp
and
in
movl
xchg
pop
jmp
rclw
ja
push
outsb
mov
xchg
decb
imul
shll
push
sub
lods
and
rorl
shl
movsl
mov
xor
in
add
sbb
cmpb
jno
cmpps
iret
mov
mov
shll
sub
mov
fnsave
lods
mov
insb
mov
sar
cwtl
and
out
adc
fstl
mov
ret
lret
pop
out
lds
enter
in
xor
xor
pusha
adc
adc
lea
mov
ljmp
cmp
repz
test
testb
bound
pop
pop
lret
sub
fcoml
stc
sub
mov
imul
imulb
jne
cs
rclb
xor
sub
mov
adc
or
mul
inc
dec
call
xchg
pcmpeqw
cmp
xor
shl
stos
mov
jmp
pop
xchg
cld
push
mov
inc
lcall
sbb
out
mov
stos
iret
test
jns
xor
adc
mov
stos
cmp
nop
popf
xchg
test
fldcw
add
mov
lret
add
xor
ja
std
subb
xor
push
push
mov
out
decl
push
jp
xor
add
imul
cmp
gs
pop
cmp
mov
clc
mov
mov
push
jns,pn
divb
and
jne
es
orb
testb
adc
gs
lods
adc
insb
mov
shrb
inc
jb
xchg
inc
adc
popa
int3
inc
mov
fiaddl
cld
xchg
jo
lret
icebp
and
insl
dec
or
add
add
inc
incb
mov
imul
xor
sub
cli
popl
stos
jg
gs
test
push
je
jg
mov
sub
and
dec
add
cltd
es
out
aas
fdivl
adc
mov
push
push
inc
or
int
adc
and
ljmp
add
fsubrl
cmc
and
int3
fidivrs
mov
push
jmp
movsl
pushf
mov
add
sub
jmp
aam
into
mov
insl
imul
fistpll
xor
in
sbb
sbb
sbb
or
xlat
orl
adc
loop
pop
push
jecxz
insl
xchg
mov
adc
xchg
stos
in
push
adc
int
jb
cmp
jmp
into
clc
insl
mov
xor
jb
sti
mov
ds
dec
testl
push
in
icebp
lcall
das
jge
dec
jmp
roll
ret
lds
pop
std
push
adc
scas
push
movsb
lret
fwait
inc
sti
call
out
pusha
ja
or
dec
pop
loop
xor
push
lds
push
mov
ror
add
nop
sub
popf
ficoml
lea
mov
adc
bswap
lock
notb
add
sbb
cmpsb
mov
jmp
pop
mov
std
ja
stos
add
xchg
imul
jae
and
adc
push
lret
into
mov
xor
ljmp
lods
pop
mov
stos
inc
mov
xchg
dec
jnp
in
int3
dec
out
mov
jecxz
or
or
jb
push
inc
adc
add
dec
xchg
mov
mov
sub
rclb
mov
mov
inc
insb
cmp
iret
xor
out
pop
es
jmp
mov
sbb
jno
out
decl
test
lock
sbb
pop
adc
or
roll
and
out
sbb
and
mov
add
mov
neg
push
in
dec
cli
fistpll
mov
and
pop
jno,pn
pop
lods
sar
mov
test
adc
cld
sbb
insb
insb
out
mov
push
add
mov
mov
and
mov
mov
cltd
scas
sbb
test
add
ret
add
dec
inc
pop
cmp
js
mov
xchg
push
pop
cmp
inc
popf
mov
sahf
adc
and
mov
or
out
xchg
les
andl
pop
sahf
cmp
push
aam
or
pop
xor
sahf
lret
jmp
jge
test
cwtl
lret
cwtl
xchg
fcoml
or
ret
jae
loop
inc
sbb
into
mov
jecxz
fimuls
push
filds
push
cmc
xchg
int
inc
mov
xchg
cld
xchg
fwait
psubusw
clc
xchg
xor
mov
xchg
sbb
cmp
xchg
dec
orl
shll
ja
adc
and
push
ja
pop
popf
wbinvd
rcrb
loopne
mov
jb
adc
add
dec
inc
loopne
lea
xchg
popf
add
cld
push
rclb
jmp
xchg
addr16
cmp
add
std
inc
inc
jmp
neg
inc
xchg
and
lret
out
mov
ss
jns
push
jne
add
inc
test
jmp
adc
inc
movsl
ds
sbb
mov
cmp
xor
mov
pop
xchg
aaa
shl
mov
xchg
es
rolb
ret
mov
and
xor
outsl
mov
jg
push
push
push
jle
pop
dec
or
xchg
mov
pop
test
xor
movb
in
inc
adc
fimull
add
fmull
xchg
das
mov
sub
dec
jecxz
jp
les
push
sahf
stc
xchg
pop
lods
out
inc
adc
out
add
xor
test
push
rorb
movl
xor
lods
cmp
xlat
push
fldcw
xor
sub
cs
and
js
ror
loopne
imul
lret
and
inc
cld
aas
shlb
fld
insb
out
dec
mov
mov
mov
jge
inc
inc
cmp
jmp
ret
or
scas
mov
cld
scas
add
add
insb
int
fsubs
add
aaa
enter
out
out
add
mov
addl
sbb
out
das
sbb
mov
xlat
or
pushf
imul
lea
mov
pop
int3
ljmp
cs
int3
push
cs
lea
mov
dec
dec
aam
repz
dec
dec
outsl
mov
iret
and
lods
cmpsl
xor
push
dec
push
andl
mov
mov
lods
test
sti
mov
loopne
dec
dec
mov
dec
daa
pop
push
addl
dec
sbb
in
adc
leave
mov
sbb
nop
lock
ret
outsl
cwtl
add
jl
lods
shlb
xorl
mov
in
xor
or
xorb
insl
loope
ret
jmp
cwtl
xor
in
call
and
je
aam
shr
jl
aam
add
xor
out
push
or
mov
sbb
jns
xchg
pop
lea
ret
lods
cmpb
movsl
cltd
imul
push
enter
mov
jle
stos
pop
inc
out
out
adc
ret
inc
mov
mov
lock
inc
jno
movsl
dec
fisttpl
in
pop
loope
lock
adc
lock
lea
cld
hlt
repz
negb
movsl
fsubl
int3
jecxz
repz
push
xor
add
inc
hlt
mov
or
xchg
stc
dec
cmpsl
mov
lret
adc
jns
repz
jno
je
into
ret
or
lds
sar
xchg
cmp
mov
sti
xchg
movsb
nop
mov
pop
ja
sbb
adc
in
loop
lcall
lahf
stos
inc
test
dec
push
inc
scas
repz
or
add
test
pusha
jb
push
push
ret
xchg
sub
and
in
push
rorl
in
daa
outsb
testb
inc
in
cwtl
jle
inc
xchg
pop
push
pop
loope
cmpsl
jne
sub
mov
or
push
and
xor
aas
jo
dec
inc
fdivr
dec
inc
add
cli
adc
leave
pop
mov
orl
sbb
push
mov
aas
icebp
xlat
xor
mov
inc
cmpb
rol
fdivp
mov
scas
dec
not
push
mov
cmc
push
les
das
mov
xchg
dec
xor
xchg
xor
ljmp
adc
adc
sti
inc
dec
add
jae
shlb
dec
inc
xor
aad
push
or
cmpsl
adc
add
fsubrl
movsl
mov
and
sub
adc
xor
cmp
adc
mov
xchg
scas
pushf
lret
or
lods
mov
call
int3
in
test
jg
cmp
outsl
mov
cmpsl
push
data16
out
sub
imul
dec
sub
mov
sbbb
push
cmp
cmp
pushf
jle
push
jle
sti
xchg
pop
nop
lods
adc
jmp
cmp
test
pop
sub
mov
inc
push
sub
daa
push
xchg
shrl
push
adc
das
push
rclb
imulb
xchg
dec
mov
mov
jb
sub
popa
push
lea
push
aas
or
imul
lock
in
xchg
int
call
adc
pop
mov
jnp
add
mov
std
lds
or
icebp
or
lahf
push
insb
mov
inc
lock
les
insb
mov
dec
icebp
push
push
enter
loopne
icebp
pop
xchg
out
sub
fsubs
ret
inc
mov
insb
jl
and
call
shrb
pop
push
orb
mov
jl
mov
mov
fwait
shlb
xor
mov
stc
aas
out
ljmp
dec
jno
ret
pop
dec
or
inc
fldt
je
push
sub
and
inc
out
xor
inc
hlt
or
inc
scas
mov
sbb
pop
cwtl
aas
push
mov
xchg
cwtl
lret
sbb
leave
push
xor
dec
int
mov
inc
xor
insb
outsb
addr16
mov
sub
and
loope
xor
add
and
mov
arpl
out
cmp
les
inc
sub
fwait
xchg
xchg
mov
rcll
lcall
push
mov
jae
mov
sti
outsl
mov
jmp
out
jp
imul
mov
jns
rcll
sti
sbb
jp
lret
xor
or
fldcw
fwait
dec
into
lock
and
pusha
jl
mov
loope
push
movsb
mov
in
mov
rol
sub
shrl
dec
lret
dec
ljmp
sub
cmp
fldcw
orb
and
outsl
xchg
rorl
inc
shll
mov
mov
subb
inc
mov
xchg
leave
fdivs
sbbl
push
sub
and
ljmp
dec
push
and
into
pop
aas
nop
jo
sub
cwtl
add
jb
push
into
sub
mov
pusha
lret
mov
add
aad
cmc
xchg
imul
mov
xchg
lds
pop
dec
pop
inc
in
popa
sub
leave
pop
and
sbb
arpl
out
jmp
mov
jecxz
pop
shl
or
add
pop
daa
xchg
leave
loope
sarl
pop
push
xchg
inc
push
fcmovnu
adc
int3
xchg
jnp
negl
mov
inc
xor
cmc
ror
jns
or
nop
cli
pop
inc
fstps
call
pop
mov
jecxz
cmpsl
imul
xchg
mov
fstpt
push
push
mov
sbb
icebp
mov
sbb
dec
mov
mov
adc
inc
mov
cmpsl
in
rorb
jl
inc
pop
sti
sbb
mov
sub
test
sbb
lcall
adc
pusha
hlt
data16
subl
es
aaa
pop
dec
into
jp
out
cmc
outsl
or
ljmp
mov
repz
or
mov
xor
iret
or
inc
ljmp
cmc
cmp
mov
outsb
addl
leave
aam
or
or
fcomps
pop
aam
in
xchg
aad
cmpsb
inc
cwtl
lret
fldl
mov
jmp
int
pop
add
lcall
pop
lods
insl
lcall
xor
adc
xchg
sbb
sarl
push
ljmp
loopne
adcl
adc
fldcw
sarb
mov
or
xchg
out
enter
test
js
sbb
fisubrs
or
push
cld
mov
lret
inc
dec
mov
std
push
les
add
and
leave
push
mov
xchg
push
outsl
int
cmpsl
js
clc
cmpsl
push
mov
dec
scas
pop
iret
jecxz
jl
adc
xchg
pop
pusha
repz
sub
add
add
mov
fadds
mov
jb
jp
into
sahf
daa
insb
mov
xlat
dec
int3
mov
lods
les
sahf
es
fsincos
xor
lahf
js
jns
xlat
mov
and
fmuls
call
fidivs
xchg
lcall
out
imul
sub
push
imul
lahf
movsb
xchg
xchg
pop
cmp
push
sbb
mov
pop
cmp
cli
std
ret
cmp
cmp
jnp
mov
mov
push
xlat
xor
adc
std
fdivrl
mov
push
mov
das
mov
ja
flds
or
outsb
sahf
pop
out
push
mov
and
xor
dec
mov
lcall
push
mov
ljmp
sub
js
cld
sub
insl
adc
fwait
pop
adc
jnp
in
sbb
xchg
pcmpgtd
aas
add
jbe
lock
sbb
pop
jo
out
stos
mov
and
fwait
mov
jno
sbb
daa
cli
mov
inc
enter
scas
cwtl
mov
jae
add
adc
scas
popa
xor
test
cmpsb
push
rcl
and
out
jecxz
lret
mov
pushf
mov
les
or
push
pusha
test
inc
adc
cmp
aam
lods
lds
lods
dec
cmc
out
fsubrs
inc
cli
divb
lea
sbb
ja,pt
out
movsb
mov
xchg
push
or
pop
cmpsl
cmp
mov
jecxz
imul
fucom
inc
mov
sub
jo
mov
sbb
sbb
push
mov
fwait
rolb
in
dec
aas
ds
push
push
cmp
je
add
jle
rcll
fcmovne
lret
xchg
add
lret
sbb
stos
lcall
in
ret
jo
dec
lds
es
mov
dec
notl
sbb
in
jns
enter
mov
mov
arpl
fsubs
xchg
xchg
aas
jnp
rorb
add
ljmp
mov
pushl
sbb
out
and
aas
cvttps2pi
adc
icebp
pop
mov
idivl
add
test
out
movsl
mov
sub
sbb
out
mov
cmpl
sbb
test
aas
insb
pop
pushf
or
das
dec
scas
jle
sti
cs
adc
ret
add
sbb
addr16
jbe
xchg
push
sahf
mov
mov
dec
popa
jnp
out
cld
dec
fsubr
shlb
gs
add
pop
jb
loop
mov
mov
inc
and
jae
int
add
int
adc
loop
mov
add
test
insl
pop
and
pop
test
test
sbb
sbb
and
pavgb
adc
pop
add
mov
shll
scas
and
dec
jns,pt
out
imul
dec
movsl
jns
cmpsl
jne
push
jbe
mov
or
imul
mov
pop
jbe
fcompl
xchg
and
sbb
cmc
sbbl
pop
call
mov
stos
sarb
or
loope
dec
inc
xorl
lods
ret
jl
int3
pushf
outsb
lcall
stos
xchg
jmp
movsl
jmp
cld
mov
pop
pop
fcoms
or
jmp
push
lret
ret
cmc
inc
outsl
stc
lea
pop
mov
cli
mov
dec
pop
cwtl
out
lods
aas
mov
int
movsl
in
clc
sbb
inc
test
cmp
jnp
fistpl
mov
push
or
add
push
mov
cmp
lods
sub
jo
ds
mov
mov
jb
movsl
fsts
cld
push
cmpsl
arpl
mov
jecxz
adc
xor
loop
mov
rcl
add
xchg
jge
jmp
mov
je
or
icebp
call
in
push
jp
adc
lods
das
push
cmp
jo
push
and
jae
mov
dec
and
lock
lret
scas
or
or
sbb
push
sub
push
arpl
insb
subl
stc
mov
pop
xor
lret
fdivs
stos
cmp
mulb
sub
adc
jne
icebp
pop
sbb
and
and
stc
cmc
subl
push
xor
frstor
jge
fisubrs
jnp
decb
out
add
cld
leave
push
sti
scas
pop
xchg
sub
sub
mov
dec
jp
xchg
in
popf
in
jo
push
paddsw
movsl
push
das
xchg
clc
popf
push
inc
mov
inc
dec
lods
pop
dec
and
das
aas
push
and
push
lods
fwait
aaa
lcall
out
cmpl
aad
test
sti
push
pop
insb
push
pop
outsl
dec
ficomps
mov
cli
xchg
jle
ss
lods
jge
jl
fmul
insb
jl
es
or
fwait
fucomip
in
lret
jno
dec
outsb
es
mov
dec
sahf
stos
jg
ja
ja
mov
xchg
sub
mov
and
orl
push
lods
or
add
prefetchw
or
adc
xchg
hlt
cltd
fmull
push
popf
int
inc
add
and
jmp
xlat
mov
push
fwait
cmp
or
or
adc
push
stos
xchg
mov
ret
mov
mov
dec
stos
push
movsl
or
cmpsb
fs
test
and
pop
movsb
insl
jl
mov
fisttpll
imul
loope
out
lods
jg
mov
dec
fidivl
clc
mov
pop
stc
and
pop
outsl
xor
pusha
fwait
sbb
push
fs
loopne
int
adc
ljmp
pop
xchg
jbe
jne
test
push
mov
cmpsb
jg
mov
jmp
inc
imul
stos
lock
pop
aaa
inc
mov
jecxz
and
iret
int
in
out
inc
ss
jp
inc
pop
fwait
sbb
mov
cmp
div
fisubrl
sub
xchg
pop
mov
movsl
out
stos
and
mov
pushf
imul
jle
sbb
arpl
out
dec
dec
insb
sbb
fwait
cmp
xchg
repnz
lods
cmc
in
or
mov
in
dec
int
pop
lock
sysret
hlt
xchg
imul
insb
mov
adc
mov
loopne
mov
repnz
cmc
dec
in
dec
and
iret
mov
adc
add
aaa
adc
add
out
fs
pop
fcom
int3
lds
out
stos
loopne
pop
dec
xor
into
icebp
popa
jle
jae
jb
bnd
pop
dec
sbb
inc
lret
mov
sahf
inc
das
inc
pusha
icebp
push
pop
insl
fnstcw
adc
mov
insl
loopne
imul
ljmp
sbb
mov
add
mov
lods
test
loop
xchg
test
pusha
cmp
into
sbb
mov
jo
lcall
sub
push
add
leave
test
mov
inc
xchg
add
sahf
cmp
cmpsb
cli
sbb
filds
dec
jno
xor
into
bound
push
and
sub
clc
scas
cmp
insl
outsb
add
cltd
test
inc
adc
test
cmp
xchg
fimuls
fcom
jl
inc
out
dec
and
mov
xchg
xchg
xchg
test
sbb
pop
in
pop
pop
and
push
mov
clc
sub
in
andl
aam
imul
scas
mov
mov
sbb
sbb
mov
in
addr16
dec
and
push
sahf
ds
je
test
inc
insl
std
add
mov
xchg
sbb
mov
loopne
push
push
or
or
pop
mov
mov
jnp
xchg
aaa
std
push
inc
imull
imul
sub
mov
enter
repz
jne
popa
sbb
lods
les
xchg
sub
cs
jb
adc
dec
and
ja
das
mov
jbe
les
or
out
mov
push
sub
mov
test
aad
xchg
lea
das
daa
inc
stos
sub
andb
mov
inc
fisubs
sbb
cmp
enter
lds
shrl
fidivrl
enter
mov
adc
jmp
pop
and
push
fisubs
pushf
add
ret
pop
ds
push
std
sub
add
jle
fxtract
or
xchg
push
and
das
addr16
and
cwtl
das
cmp
pop
fwait
pop
and
enter
sub
lahf
test
push
or
mov
loope
xchg
std
andl
data16
adc
mov
or
push
stc
fs
ljmp
mov
xchg
mov
xchg
imul
fwait
adc
mov
push
movsl
sarl
mov
mov
xor
scas
push
outsb
and
iret
xchg
xchg
iret
shll
xchg
mov
and
divb
jb
push
popa
jne
aad
push
enter
ret
sub
mov
pop
clc
orb
pop
adcl
insb
push
dec
cmp
lods
adc
sub
mov
sahf
test
test
cmovnp
mov
inc
in
and
out
pop
leave
or
jo
xlat
jecxz
pushf
push
out
movl
mov
mov
add
push
loope
leave
or
inc
mov
stc
push
lcall
dec
cmpsl
fisttpll
std
pusha
fs
inc
push
fldcw
mov
fildl
lea
stos
cwtl
push
inc
std
popf
inc
notb
mov
subb
movsl
or
lods
int
pop
int
or
xor
iret
lcall
pop
stc
push
test
imul
mov
inc
fdivs
arpl
loopne
inc
xor
xor
decl
arpl
movsb
mov
test
sti
inc
imul
or
jp,pt
pusha
test
xor
iret
out
cmp
pop
lds
pop
movsb
adc
push
clc
pop
popa
rcrb
subl
je
outsb
jo
stc
lret
and
mov
mov
mov
push
les
cmp
test
xchg
mov
je
ds
imull
adc
lods
add
add
imul
xor
popf
adc
lods
sti
sti
int3
lret
pop
cmp
and
adc
inc
lods
jmp
xchg
out
push
adc
mov
iret
loop
inc
push
ret
daa
rcrb
lods
in
xchg
adc
xor
jmp
sbb
es
or
fimuls
jmp
xchg
idivl
sub
fldenv
cmpsl
fabs
pop
orl
bound
aad
and
into
pop
mov
pop
insl
adc
jp
sti
call
stos
mov
add
test
lret
pusha
or
andl
and
or
cmp
mov
add
xlat
adc
sbbl
aam
ds
test
rcrl
mull
jg
stos
sub
mov
sbb
loop
mov
pmaxub
pushf
insb
dec
add
scas
xchg
js
cmpsb
cmp
lahf
mov
cli
mov
and
adc
jbe
jle
sahf
xor
mov
iret
sbb
lea
out
ds
mov
xor
ja
mov
ret
scas
in
in
popa
dec
cmc
inc
fs
sub
insb
and
iret
into
lea
std
lods
pop
push
push
in
inc
cmp
scas
arpl
xorl
les
js
and
jne
xchg
stc
test
out
js
aam
inc
pop
dec
pop
jmp
popa
cmpb
rcrb
cwtl
sub
cld
icebp
test
cmp
sbbb
pop
push
shll
and
adc
xchg
imul
mov
pop
sub
sub
add
mov
mov
popa
mov
test
rcr
outsb
inc
lea
sub
ret
push
lea
xor
and
lret
mov
repnz
jecxz
adc
add
jno
and
popa
mov
and
xchg
push
lea
push
loop
jns
mov
sbb
mov
xor
cmp
xchg
iret
adc
mov
in
mov
out
dec
pop
loop
mov
in
das
subb
fbstp
cmp
jae
and
insl
sbb
sbb
push
lret
inc
into
imul
cmp
js
mov
imul
es
lea
and
adc
lret
enter
inc
dec
not
xor
jae
dec
sbbl
lret
and
inc
pop
hlt
lcall
push
and
int3
and
mov
ss
ja
adc
mov
adcb
inc
push
test
cmp
push
sbb
push
or
loop
fsts
cltd
dec
and
mov
mov
push
pop
jg
jae
mov
shl
dec
push
cmp
nop
lock
inc
scas
mov
fstps
mov
mov
and
push
add
movsl
les
mov
lods
inc
push
in
add
gs
outsl
mov
adc
cmp
loope
imul
sub
push
js
test
ljmp
lret
arpl
jp
scas
push
pusha
xchg
inc
pop
aam
inc
test
cmp
and
xchg
sbb
and
loope
xor
cmpsb
push
adc
aad
mov
stc
mov
xchg
icebp
cmpsb
sub
lar
int3
out
jbe
aam
sbb
xor
fs
in
xchg
insb
jae
jnp
mov
lret
aad
pop
loop
pop
xchg
mov
lcall
mov
setns
or
jge
mov
shrb
xchg
movsl
ss
adc
lods
lahf
flds
popf
cmp
push
test
jle
push
pop
les
sbb
push
push
sarl
sub
jns
jne
lods
iret
scas
mov
mov
rorl
push
cmp
and
neg
dec
push
lret
inc
mov
mov
fldenv
mov
out
fs
mov
adc
or
push
jge
ja
in
test
cmp
lea
xchg
dec
call
mov
hlt
ljmp
jns
call
sahf
jns
arpl
out
test
inc
lea
mov
pop
enter
inc
inc
or
out
push
es
mov
mov
push
push
and
hlt
fwait
aaa
gs
xchg
int
pop
mov
jne
ss
jnp
scas
pop
js
xlat
mov
cmc
rol
cmp
lahf
pop
adc
outsb
cli
sbb
addl
testl
push
jnp
shl
or
das
cmp
inc
xorl
iret
pop
cmpsb
lret
pop
adc
leave
xchg
lahf
imul
mov
cmp
dec
pop
or
or
jmp
testb
xchg
fisubrs
push
jb
mov
sub
movsb
pop
inc
pop
stc
jae
push
fcomi
dec
fcompl
subb
pop
mov
pop
cbtw
lret
movsb
iret
in
dec
out
xchg
mov
mov
and
loope
clc
enter
aad
pop
jbe
aad
popl
test
aaa
mov
xor
cwtl
jge
push
popa
in
in
jp
xchg
xor
loopne
arpl
lea
lock
adc
roll
pop
mov
and
testb
sbb
aam
xor
add
sbb
pop
gs
repnz
xor
imul
icebp
repz
pop
call
adc
and
jno
stos
and
cmpsl
sbb
daa
jg,pn
jo
aad
jnp
mov
jnp
outsb
push
cmp
mov
lods
divl
imul
jbe
pusha
pop
cld
dec
sbb
dec
push
mov
sbb
cmp
xchg
mov
cmp
shl
sub
call
xchg
pop
nopl
xor
jg
mov
loope
clc
insl
inc
pop
add
out
sarb
movsb
rcll
jbe
out
mov
or
cli
dec
pop
jb
sbb
add
dec
stc
int
std
jge
xchg
repnz
cmpsb
dec
adc
dec
adc
xchg
sub
into
ret
shll
or
and
mov
leave
dec
add
inc
enter
aad
pop
adc
ja
add
mov
aad
sahf
pushf
test
dec
xchg
xor
fisubrs
pushf
xor
jge
or
sbb
jge
cltd
cwtl
stos
iret
cmp
pop
mov
xor
xchg
and
inc
add
or
push
xor
ljmp
sub
cmp
int3
xor
rcl
pop
sahf
mov
aas
adc
das
ret
cmp
jbe
mov
mov
lods
and
fs
ljmp
test
push
cltd
inc
xlat
push
stos
push
cmpsb
jge
in
pop
outsl
sub
cmpsl
sbb
out
call
lahf
js
and
sahf
cmp
mov
movsl
call
ljmp
fwait
and
in
popa
outsb
push
ljmp
sub
icebp
les
js
dec
mov
aad
les
rcrb
popa
bnd
mov
push
xor
in
push
and
add
ljmp
jo
mov
and
pop
xor
fildl
loope
insl
aam
push
lahf
sbb
and
cmp
cltd
add
mov
idiv
inc
pop
sbb
and
inc
fldt
movsl
repnz
shrb
mov
data16
and
sbb
mov
dec
push
enter
pop
sbbl
into
pushf
into
mov
jge
inc
add
lock
pop
push
ret
call
shll
xchg
shll
mov
xchg
mov
lods
adc
mov
adc
mov
xchg
sbbb
daa
pop
pop
jl
or
mov
nop
std
pop
xlat
call
push
dec
loope
scas
js
jle
mov
xor
gs
mov
sub
mov
pop
mov
in
cmp
pop
movsb
inc
ret
xor
cmpsb
and
pop
inc
lahf
sbb
imul
mov
sbb
xchg
or
sub
lea
mov
loopne
aam
test
xchg
inc
insb
or
jl
sub
and
pop
pop
lret
jmp
sub
push
mov
adc
sbb
iret
enter
daa
jmp
test
jmp
cmpsl
mov
lds
xchg
fisubs
fiaddl
inc
lock
fs
dec
loope
mov
inc
movsl
sbb
mov
jae
rol
inc
pop
or
addr16
imul
pop
lret
mov
addb
dec
push
sbb
incl
sub
push
scas
adc
jbe
xor
outsb
mov
std
sub
add
outsb
ret
push
addr16
repnz
mov
dec
pop
scas
push
out
xchg
jne
inc
push
sbb
test
add
mov
loop
sub
rcrb
jg
adc
sub
adc
jl
outsl
arpl
imull
sub
add
les
jmp
aam
test
stc
pop
ss
push
movsl
push
or
cld
cmp
cmpsb
xchg
mov
jmp
mov
sub
ss
das
out
pusha
aad
ret
inc
push
xchg
xchg
scas
lock
adc
mov
fmuls
cmpsl
or
das
pushf
xchg
push
and
push
inc
lods
dec
outsb
or
call
push
xlat
xchg
xor
cmpsl
ror
dec
dec
ds
mov
xor
mov
or
mov
push
ds
stc
cltd
mov
lds
ds
pusha
jns
or
rolb
jb
push
jno
cmp
lcall
rcl
dec
and
pushf
enter
test
roll
cmc
fstpl
pop
es
out
sbb
scas
adc
shrb
repz
sbb
xlat
cmpsb
push
jl
out
jno
popl
lret
or
loopne
pop
in
add
je
lcall
xchg
sub
cmc
lcall
lahf
mov
jp
mov
mov
adc
push
rcr
mov
xchg
xchg
out
aas
hlt
leave
pushf
fcmovne
sbb
mov
mov
mov
pop
adc
iret
cmp
enter
cld
jg
mull
sbb
clc
inc
sbb
bound
cmp
sub
inc
shl
xchg
into
test
out
or
dec
jl
fucomip
inc
xor
pop
dec
adcl
lahf
cmp
mov
enter
dec
ljmp
sti
pop
int
gs
dec
lret
pop
sahf
jmp
mov
dec
call
mov
lcall
sbb
xor
pop
movsl
xchg
adc
into
jno
mov
mov
add
shll
pop
iret
imul
scas
xlat
pop
dec
add
ja
fsubs
notb
inc
push
pop
adc
inc
sub
push
mov
ficoml
inc
rcrl
popa
jmp
dec
mov
scas
in
add
mov
mov
sbb
movsl
sti
mov
negb
and
inc
cmp
mov
imul
xchg
xlat
icebp
imul
rolb
mov
jae
xchg
jbe
outsl
add
test
int3
imul
pop
lds
adc
addr16
sub
jge
jb
push
cmpsb
repnz
int3
inc
and
dec
fimull
test
mov
fnstenv
imul
xchg
insb
lods
push
inc
hlt
dec
mov
jle
jne
lods
ljmp
pop
stc
xor
aas
mov
ja
cmp
cmpsb
sbb
adc
cmp
pop
add
shlb
mov
sbb
test
cwtl
inc
or
add
jg
and
push
or
fisttps
mov
or
cmpsl
cmp
aam
inc
xchg
jmp
mov
mov
dec
out
rcl
mov
jo
out
dec
lods
pop
mov
pusha
cmp
mov
or
jmp
rcr
cmp
push
jno
add
xchg
ficoml
and
inc
cmpl
insb
cmpsl
inc
mov
adc
aas
inc
mov
hlt
ret
scas
xlat
push
scas
rcl
in
add
enter
add
in
aam
jl
lcall
jnp
out
add
aas
cmp
ljmp
xor
xor
in
pop
adc
jecxz
fsubp
or
sbbl
and
outsl
push
and
xor
popa
push
and
das
aaa
lds
sbbb
std
jmp
filds
sahf
mov
cmp
sbb
and
dec
rclb
push
xor
mov
pusha
popf
mov
jmp
imul
sbb
xchg
pop
jle
xchg
das
lcall
cmpsl
scas
mov
imul
xchg
aad
sbb
mov
dec
push
and
xor
repz
inc
push
lcall
les
or
or
dec
aaa
outsl
int3
and
lcall
sub
and
push
cmc
jg
cmp
imul
rcr
inc
xor
loop
out
mov
je
mov
into
in
in
adc
dec
fdivrs
push
xor
inc
mov
aam
mov
ss
sbb
addl
aaa
loope
movsb
mov
mov
loope
das
mov
cmpsb
fmul
or
lods
jbe
xchg
or
pop
and
out
xlat
fs
movsl
dec
dec
inc
xchg
mov
fnstcw
adc
pop
xor
or
jp
popf
js
sub
pop
jae
clc
pop
lods
xchg
rorb
leave
lods
sub
inc
stos
push
fcmovb
mov
cmp
lock
cmp
jnp
scas
cmpsl
sbb
daa
sub
lahf
add
or
ror
xchg
jecxz
push
push
mov
xchg
push
mov
iret
inc
test
mov
call
ljmp
sbb
push
pop
jb
cmp
jno
inc
test
and
add
fsubrs
push
sbb
and
add
pop
xor
aam
into
insl
les
sbb
int3
sub
xlat
mov
adc
xchg
push
cmpsl
shlb
sub
mov
adc
cli
dec
daa
js
push
cmc
mov
xlat
out
loop
je
test
out
and
jns
ret
imul
pushf
out
jae
mov
and
and
push
std
cmpsb
cmp
xor
inc
icebp
dec
sbb
cltd
dec
insl
xchg
test
in
dec
pop
dec
cmp
les
sub
add
jns
rorb
fcompl
imul
mov
enter
imul
js
xlat
shr
cmpsb
mov
sarl
call
mov
jns
out
xchg
xchg
pop
mov
jg
mov
popf
push
imul
pop
xlat
jae
mov
or
xchg
or
mov
and
test
xchg
pop
pusha
mov
add
jg
out
addb
enter
push
mov
sbb
pop
test
xchg
add
fisttpll
enter
ja
sub
sbb
cmp
or
sti
jmp
movsl
movsb
mov
inc
outsl
mov
es
faddl
lods
ficoml
sbbl
aas
mov
fcoml
mov
scas
mov
mov
popf
aam
andl
mov
call
xorl
xchg
dec
addr16
insl
push
out
mov
js
xchg
shll
push
inc
or
cmp
xchg
jno
add
sbb
cmpsl
xchg
outsb
cmpsb
insl
aaa
cmc
add
cmp
adc
shll
rcll
sarl
repnz
lea
mov
cmp
jnp
inc
scas
xor
pop
out
rcrb
xchg
mov
mov
int
inc
inc
stc
xchg
and
pop
jle
inc
inc
mov
xorl
or
pushl
popa
pop
adc
lcall
sbb
rcl
mov
xlat
cs
pop
xorl
icebp
pop
sbb
add
scas
sub
cmpsb
sarl
mov
xchg
repz
mov
cmc
sbb
aas
pop
dec
inc
lret
popf
inc
stc
clc
adc
inc
mov
divl
mov
aas
push
xchg
repz
mov
ss
sti
pusha
adc
jmp
pop
mov
mov
repz
xchg
push
adc
cmc
adc
xor
fidivs
je,pn
sbb
xor
dec
js
repz
movsb
sub
enter
lock
inc
popf
mov
insb
ja
mov
loope
mov
pop
mov
mov
stos
popa
add
test
adc
push
jns
lock
mov
push
xchg
cmp
movsb
pusha
mov
in
mov
lahf
icebp
fs
mov
gs
dec
xchg
jb
data16
call
mov
dec
add
sub
xor
jge
js
int
fs
enter
ret
test
cmp
shrl
add
fldenv
sbb
lahf
inc
xchg
js
jo
outsl
cmp
notb
gs
out
dec
cmp
test
mov
xchg
xchg
cmp
mov
xchg
or
cmpsb
rcr
pop
adc
repz
enter
daa
test
aaa
fwait
mov
pop
mov
mov
pusha
or
out
movsb
mov
cmp
sub
adc
mov
fisttpl
std
js
nop
xlat
daa
dec
stos
pop
dec
push
rcl
ret
xchg
dec
add
je
test
insb
push
jp
call
push
sahf
pop
mov
int
fisttpl
inc
sub
add
sub
filds
push
xchg
into
inc
loopne
jmp
lahf
cmpsb
push
and
jmp
adc
cltd
push
or
jae
iret
std
jae
notb
or
jb
mov
out
cmp
jl
lret
xchg
sub
stos
shlb
pop
xor
mov
in
into
out
xchg
jl
adc
ret
add
lret
jmp
pushf
bound
aas
sbb
dec
orl
in
cmp
sub
lea
cmp
jo
xchg
mov
fisubl
inc
mov
or
add
mov
movsb
xor
xchg
xchg
mov
icebp
and
add
xor
in
sbb
xor
js
aam
xchg
mov
ret
scas
sub
mov
scas
mov
or
daa
xor
and
hlt
sbb
xor
xorb
popa
adc
stc
sti
xchg
jl
and
xchg
inc
insl
mov
xor
stos
daa
add
mov
jecxz
mov
stos
push
fucomi
ficompl
cmp
cmp
js
cmp
and
lds
push
imul
push
jmp
xchg
xorb
pop
call
mov
fmul
sbb
jmp
xchg
test
xor
and
xor
and
dec
and
pop
xor
das
fs
mov
sub
clc
enter
sahf
cwtl
test
jno
jae
loopne
imul
cmp
test
ret
mov
icebp
cmp
sahf
jae
mov
lods
or
fmuls
mov
cmp
in
add
mov
pop
cli
sbb
inc
or
pop
jae
pushf
test
movsl
xchg
add
lock
jle
xchg
jns
int3
adc
gs
xor
push
push
mov
sti
cmp
stos
or
adc
mov
ja
adc
enter
mov
aaa
test
ss
pop
out
imul
xor
icebp
pop
sbb
cwtl
or
cmovae
sub
stc
repnz
js
adc
add
repnz
into
jbe
ja
xchg
jmp
push
or
adc
sbb
sbb
aam
jmp
pop
out
mov
and
icebp
and
orb
push
and
dec
addr16
jb
xchg
adc
ljmp
dec
mov
cwtl
mov
push
mov
movsl
push
sahf
je
adc
loopne
in
inc
push
inc
push
insl
in
mov
daa
rclb
xlat
jge
jp
mov
push
cltd
push
or
in
xchg
jb
dec
pop
in
mov
fisubrs
test
nop
xor
mov
hlt
fcoml
pop
inc
sarb
in
jecxz
divl
mov
mov
jb
dec
lods
sub
push
in
xor
xchg
sub
add
mov
cmp
pop
jl
cmp
jb
push
clc
outsl
cmc
dec
and
repnz
ss
outsb
mov
mov
lea
dec
into
fisubrs
cmp
jecxz
popa
jl
push
rcll
or
dec
ja
mov
int3
adc
lds
notl
cmp
pop
std
inc
idivb
stos
adc
or
into
stos
popa
pop
pop
sbbl
fiadds
push
mov
dec
call
mov
and
scas
push
adc
cmp
mov
sub
adc
sub
jae
push
movsl
jp
int
sub
push
mov
pop
inc
mov
push
out
xchg
sbb
push
push
xchg
jmp
movsb
adc
add
repz
xor
add
icebp
fiadds
pop
insb
scas
lods
pop
ret
int
rolb
imul
ljmp
lret
pop
repnz
cmp
mov
pushf
sbb
cmpsl
mov
ljmp
out
popa
popa
mov
imul
mov
xchg
or
popf
imul
mov
fdivp
shlb
mov
or
testb
add
pop
and
mov
loope
add
and
test
imul
dec
pop
jp
xchg
loop
aad
insl
mov
cmp
jo
push
jns
rcll
decb
pusha
jmp
push
lahf
or
bound
mov
je
jno
jbe
cltd
dec
test
or
fcoms
cmpsl
repnz
scas
outsl
loopne
xor
int
ss
loopne
lahf
add
pop
iret
test
mov
push
jge
je
mov
push
insl
das
jae
xor
push
push
add
out
loopne
dec
lods
adcl
aaa
xchg
jp
loopne
fsts
imul
cld
mov
sub
shrl
mov
jg
dec
or
lahf
inc
add
jecxz
push
mov
iret
mov
xchg
insl
ror
add
pop
xchg
bound
adc
cld
fcmovu
aad
or
add
roll
sbb
inc
xchg
push
dec
nop
mov
por
setg
cltd
adc
mov
gs
jg
shrb
mov
sbb
xor
jecxz
fldl
adc
jbe
ja
js
test
icebp
stos
rcl
mov
pop
dec
or
bound
inc
test
pop
mov
add
in
das
mov
xor
xchg
inc
mov
les
sub
cmp
sarb
push
xlat
mov
outsl
xchg
adc
inc
loopne
xor
push
push
bound
mov
pop
les
mov
mov
aaa
ljmp
pop
sbb
adc
mov
pop
mov
adc
int
jne
call
outsb
hlt
loopne
shr
cmp
xchg
dec
xchg
mov
dec
or
sbb
hlt
stos
inc
inc
in
xchg
xlat
fidivrl
mov
outsb
jp
dec
push
testb
stos
fs
rol
je
nop
adc
push
xchg
popf
test
jae
sub
lds
mov
lret
adcl
outsl
test
dec
or
xor
ja
int3
scas
aam
cmp
stc
aad
inc
lds
push
and
cmp
ret
out
push
sti
out
ret
jecxz
leave
mov
mov
imul
lea
orb
xchg
shrl
mov
mov
call
mov
call
mov
out
imul
scas
xchg
cmp
and
iret
fxch
fsubrl
cmc
sbb
add
es
int3
out
cmp
jge
lock
pushf
or
mov
inc
movsb
push
jo
cli
jnp
mov
cmpsl
push
adc
test
mov
imulb
mov
jecxz
push
dec
xchg
xor
jnp
lock
gs
outsl
into
mov
inc
mov
xlat
out
mov
jge
and
adc
mov
and
enter
int
cmp
cmp
arpl
mov
push
mov
pop
sub
xchg
jecxz
sbbb
dec
cmp
fmuls
sub
mov
sub
stos
repz
nop
sarb
ds
mov
pop
sbb
imul
pop
mov
aas
mov
mov
mov
int
fimuls
enter
pop
mov
mov
xchg
inc
jecxz
add
sub
repnz
int
in
loop
xor
xor
test
popf
in
push
mov
mov
jecxz
lahf
xlat
jg
das
jmp
add
movl
pop
fcmovne
mov
add
mov
inc
push
nop
add
or
scas
jns
fs
xor
pop
dec
pop
push
sub
outsl
xchg
rclb
cmp
xchg
ss
push
ds
shlb
jne,pn
lods
mov
inc
cmp
aam
pop
outsb
addr16
cmpsl
outsb
data16
push
xchg
jne
sbb
lods
rcll
xor
and
jg
push
xchg
push
aam
cltd
pop
pop
rcl
ret
mov
or
shlb
pop
mov
sbb
movsb
cmpsb
jns
pop
addr16
jbe
xchg
orb
out
add
lret
cmpsl
pop
cmp
cmp
int3
inc
repz
jp
inc
cmp
mov
mov
cmp
das
xchg
test
adcl
pushf
out
movsl
jnp
mov
xchg
mov
xor
orb
iret
mov
mov
mov
lods
ret
cmp
jno
sub
pop
jge
movsb
ret
mov
jl
mov
mov
xor
iret
jle
mov
cmp
outsl
sbbl
and
pop
push
push
outsl
filds
int
std
xchg
in
lcall
outsb
and
mov
mov
mov
jmp
pop
ds
rcl
pop
pop
scas
dec
test
aam
gs
push
mov
sub
cmpsl
test
cmp
jns
loope
or
and
mov
xor
std
call
inc
mov
inc
aaa
mov
lcall
repz
int3
cwtl
push
xchg
int3
or
inc
inc
aam
ret
xchg
push
les
incb
daa
sbb
repnz
jbe
jno
push
add
imul
mov
lock
push
lods
arpl
sub
push
or
mov
mov
jle
ss
sub
lock
js
add
icebp
jp
lahf
or
lcall
fstl
xchg
arpl
or
sti
subl
ret
pop
sbb
sbb
pop
or
pop
loopne
mov
pushf
adc
mov
mov
sarl
sbb
cmp
xor
leave
add
mov
jnp
mov
movsb
jns
mov
xor
jne
sbb
pop
jg
addr16
push
into
inc
push
sub
cmp
lock
add
je
shlb
imul
sub
xchg
into
sbb
dec
aam
cltd
jmp
int
lds
out
daa
in
nop
aam
cltd
insb
mov
jae
push
xor
in
movb
xor
in
leave
xorb
int3
inc
mov
mov
xchg
cmp
and
mov
cld
sbb
sbb
sbb
sub
in
cmc
outsl
adc
dec
in
in
push
mov
movsl
jbe
mov
in
inc
push
dec
jge
fildl
in
fsubp
fcomps
insl
inc
mov
adc
out
int3
ret
into
mov
es
bound
int3
add
ret
jmp
ljmp
aam
aaa
in
push
adc
xchg
sti
push
cld
call
sub
xchg
jmp
loopne
mov
lods
and
les
lret
adc
push
loopne
gs
ret
test
or
pop
in
in
jecxz
mov
lahf
test
in
loope
cmp
cmc
testl
xchg
xchg
aad
icebp
and
jp
rol
iret
mov
leave
adc
push
xor
xchg
lods
xor
or
sub
sbb
je
inc
push
ds
or
lret
shlb
test
xchg
push
mov
mov
mov
rol
cmp
int
and
and
lahf
dec
xor
push
sahf
out
mov
les
xorb
es
sarl
popa
cmc
sbb
xchg
nop
mov
jo
shl
sbb
cmp
or
movsb
jns
sub
xchg
inc
and
imul
pop
add
jns
and
dec
into
hlt
outsb
jmp
mov
inc
lret
mov
sub
cmp
mov
stos
mov
and
mov
das
adc
inc
and
mov
cmpsb
or
popa
mov
cmp
push
or
adc
xchg
insb
fistps
lcall
pop
sub
fs
jle
xchg
cmp
add
pop
mov
pop
iret
cmp
rcr
mov
out
int
jb
cmpsl
cltd
arpl
inc
lahf
imul
bound
and
leave
push
fcmove
sti
and
mov
imul
cltd
int
ja
inc
dec
insl
jl
xchg
out
insl
cmc
lret
xor
and
ret
jb
dec
cmp
scas
stc
ret
mov
les
cmp
inc
lahf
in
aad
adc
sub
xchg
dec
es
call
repz
out
jp
call
xchg
aaa
into
pop
ja
aam
xchg
cmp
xchg
add
test
ja
mov
dec
sbb
scas
dec
mov
mov
push
push
aaa
xchg
push
in
add
push
shr
aas
or
pop
dec
xchg
dec
cld
mov
push
stc
fucomi
std
inc
mov
jg
sub
out
jle
aam
xlat
adc
scas
cmp
es
ss
pusha
shl
dec
mov
adc
cmpsb
loopne
imul
cli
fbld
mov
or
jge
sub
imul
lea
loope
sahf
shlb
mov
je
and
mov
dec
fistl
fstpl
dec
jecxz
jg
or
call
and
fwait
aad
pop
cs
dec
dec
scas
dec
dec
dec
xchg
pop
or
inc
cmp
pop
ret
outsb
test
aam
xchg
aas
js
repnz
notl
aas
jb
outsb
mov
repnz
pop
dec
pop
sub
xchg
cld
mov
cmpsb
pop
lret
mov
mulb
and
lea
jo
inc
xor
icebp
cs
cmc
push
mov
push
std
scas
call
testb
loop
jns
fmuls
push
push
mov
push
dec
clc
roll
neg
das
mov
daa
add
adcl
pop
call
mov
filds
push
xor
mov
insl
daa
push
dec
repnz
mov
adc
inc
mov
into
dec
mov
mov
insb
jae
loop
sbb
and
pop
sbb
jns
xchg
fisttps
pop
dec
push
nop
inc
lret
gs
in
xor
les
into
mov
mov
add
sub
fbstp
fsts
xor
cmp
sub
adc
adc
aaa
push
cmp
js
shl
movsl
mov
shr
push
mov
data16
neg
cld
lahf
mov
shll
and
movsl
mov
cmpsl
nop
sahf
mov
xor
jb
and
adc
fs
shlb
pushf
jecxz
sub
push
sbb
inc
pushf
mov
xorb
test
mov
mov
add
nop
inc
and
cmc
arpl
aaa
push
sbb
push
and
mov
aas
push
test
sub
mov
sbb
or
in
aad
lcall
or
and
insb
lods
mov
adc
stos
repnz
call
cmp
inc
dec
fisttpll
inc
repnz
mov
outsl
cmp
cmpsb
in
cmp
ss
sub
mov
ficompl
lret
mov
mov
in
testb
shll
cmp
shufps
popf
cltd
leave
inc
pop
pop
cwtl
push
mov
mov
rcll
shl
mov
mov
inc
inc
out
out
and
std
mov
pop
mov
mov
test
adc
sub
clc
mov
jbe
fcoms
inc
shr
sbb
lods
jg
or
dec
mov
cmp
adc
mov
sub
cmpsl
es
in
jae
mov
outsl
lods
ja
repz
push
icebp
pop
ljmp
lahf
xchg
push
popf
and
adc
dec
mov
jo
call
dec
out
lods
sub
aam
xlat
pusha
mov
sbb
dec
nop
movsl
jae
incb
lods
sub
cmc
in
mov
out
push
and
pop
outsb
jns
and
aas
bnd
stos
mov
dec
ret
xor
fsubrl
movsl
sahf
or
mov
fistpll
popa
mov
pop
sub
divb
out
adc
ds
das
cli
mov
dec
jecxz
outsb
xor
jle
mov
out
insl
test
mov
or
rcrl
jl
push
push
popf
pop
mov
jmp
cmpsl
or
push
mov
mov
mov
leave
imul
ja
sub
and
mov
gs
mov
mov
lahf
dec
dec
mov
int3
mov
mov
scas
mov
sbb
cmpsb
repnz
scas
outsl
and
mov
and
push
push
jne
or
outsb
xchg
js
inc
daa
cmp
cmp
inc
hlt
test
pop
cs
loop
sbb
loopne
pusha
push
ss
insl
push
mov
push
fstpt
inc
push
rorl
rorl
inc
subl
bound
mov
cmp
mov
mov
push
mov
dec
xchg
fisttps
stos
jne
mov
mov
lret
sbb
mov
mov
mov
push
in
push
popa
adc
sbb
dec
xor
xlat
adcb
and
es
test
fbstp
pavgw
imul
mov
insl
in
or
in
mov
cmp
mov
lds
cmc
inc
ljmp
lea
popa
dec
and
mov
jb
stc
test
stos
loop
or
je
sahf
imul
xor
jo
scas
inc
je
test
ret
andb
divb
int
stos
add
jle
fisttpll
mov
lea
and
jne
fisttpll
outsl
jbe
and
dec
cmpb
cld
add
fidivs
cmc
and
xor
adc
cmpsl
pop
and
sub
sbb
inc
mov
adc
mov
cs
lods
aad
fstps
outsl
xchg
mov
fistps
dec
jns
inc
lds
and
dec
xlat
fsubl
sub
xchg
out
push
jle
cli
jne
loopew
fwait
dec
sbb
adc
popa
cmp
inc
sub
dec
bound
cli
mov
cmc
push
push
cld
cmc
add
mull
jg
mov
in
sub
or
cmp
sub
fwait
das
adc
in
inc
pop
pop
es
imul
mov
js
pop
out
int
shl
hlt
pushf
dec
add
shlb
aad
stos
xor
pusha
pop
aaa
mov
out
rol
push
pop
nop
lods
jp
dec
or
scas
and
and
ret
push
xlat
fbstp
data16
test
pop
outsl
stc
push
mov
or
xor
add
pop
out
inc
scas
loop
lds
mov
repnz
sbb
iret
pop
ret
jge
aas
loope
rcll
nop
rclb
xchg
sub
jl
sahf
hlt
test
adc
leave
nop
inc
clc
jmp
jge
mov
popa
and
fldl
fdivrs
loop
imulb
jle
add
outsl
data16
mov
mov
imul
pop
fs
xor
dec
add
popa
dec
ds
lods
adc
sub
fstps
outsl
jmp
push
sbb
sub
pcmpeqd
clc
dec
dec
adc
dec
jg
pop
and
lods
sub
sbb
pop
cmp
fldcw
push
enter
imul
adc
nop
dec
ds
xor
sub
ljmp
dec
or
leave
fstl
push
xchg
xlat
mov
loop
int
mov
xchg
sbb
frstor
lds
adcb
filds
adc
imul
loope
sub
xor
and
mov
ret
adc
pusha
xor
movsb
xlat
cmp
int3
add
inc
shrl
jo
lock
loopne
into
fnstenv
inc
imul
or
daa
and
cs
adc
xor
imul
fs
lock
in
pop
call
iret
fdivrs
lods
and
imul
jmp
jp
and
aad
testb
lods
enter
faddp
mov
fcompl
insb
cmp
clc
sbb
ss
test
mov
mov
loopne
jmp
cltd
test
mov
lods
add
xchg
mov
dec
outsb
ret
iret
mov
ffreep
fcomi
mov
mov
insb
adc
hlt
divb
std
jecxz
sub
ljmp
lret
xor
sub
mov
push
cmp
enter
cwtl
f2xm1
cmpsb
inc
cld
push
mov
movsl
sub
add
lahf
or
xor
xchg
mov
mov
imul
test
sbb
stos
or
enter
push
iret
xchg
dec
cwtl
vmread
inc
push
cwtl
shl
stos
test
sbb
loope
jne
sbb
insl
bound
push
sub
jmp
cwtl
jle
or
in
lret
lods
cmp
mov
push
dec
stos
mov
lret
in
mov
lock
sbb
aaa
movsb
adc
loope
int
iret
pop
sub
nop
and
lcall
lahf
sub
or
loope
sbb
xor
aas
ja
scas
mov
fisttps
fnsave
cmp
cli
movsl
cmp
sub
call
sbb
sbb
cli
jae
data16
mov
iret
popa
imul
mov
out
lahf
sti
mov
inc
repz
pushf
not
mov
push
loop
or
sbb
mov
mov
pop
js
sbb
in
mov
mov
add
lods
jmp
sub
jl
cmp
lods
imul
ds
sub
push
sbb
movsb
or
orb
mov
jl
or
mov
in
mov
test
cmpsl
clc
sbb
push
cltd
dec
popa
test
pop
push
cs
sub
mov
dec
aad
and
xchg
jecxz
fadds
mov
loopne
push
das
dec
out
push
sti
add
imul
popl
les
cli
ja,pt
fsubrl
lock
into
or
into
push
fadds
clc
pop
sbb
sbb
sahf
xchg
push
lods
fs
push
and
test
dec
rcrb
cld
aaa
daa
sahf
mov
inc
push
adc
push
rcr
push
fists
mov
movsb
mov
cli
int
loop
pop
or
jl
push
rcrl
div
xchg
sbb
test
das
loope
call
inc
iret
and
pushf
inc
and
enter
scas
xchg
lcall
int3
call
insl
xchg
jecxz
adc
outsl
movsl
ljmp
ss
sub
test
jno
pop
pop
inc
and
and
sub
push
ja
cmp
and
lods
inc
push
push
test
xor
test
add
cld
in
mov
test
adc
jecxz
push
inc
push
mov
lock
roll
or
popa
jns
push
inc
push
fldenv
outsb
ficompl
pop
clc
daa
inc
fisubl
test
fidivrs
gs
enter
sti
sub
pushf
repz
fildl
sbb
pusha
popf
popa
es
xor
dec
jp
and
repz
jae
mov
jne
xor
arpl
loop
mov
push
test
fidivrs
mov
inc
lcall
cmp
jo
adc
cld
enter
push
js
pop
push
scas
jmp
xchg
inc
cmpsb
mov
pusha
call
adcb
je
hlt
fdivl
mov
add
and
scas
xor
js
ljmp
jmp
rorl
ljmp
aam
xchg
add
std
mov
mov
movsb
js
in
mov
out
cmp
sbb
rcrl
dec
push
sub
in
hlt
in
cmp
inc
outsl
adc
push
out
outsl
mov
pop
cmp
lahf
mov
ret
push
loop
jp
jg
pop
gs
dec
iret
lcall
mov
loop
add
xor
in
or
lret
pop
je
mov
xorb
leave
fistpl
push
or
inc
in
outsl
scas
aam
sbb
or
mov
mov
out
iret
cltd
mov
mov
sbb
mov
mov
inc
cld
test
outsb
mov
mov
sub
icebp
imul
sbb
push
add
inc
or
loop
adc
lods
scas
insl
sbb
pop
push
mov
outsb
adc
pop
jp
icebp
aas
shlb
sub
inc
idivl
rcrb
xor
mov
jno
ss
lret
mov
stc
sti
sbb
cld
inc
jno
and
loop
jb
imul
lods
aaa
xchg
cld
cmc
stc
fs
mov
dec
pop
mov
lds
inc
out
ret
add
arpl
shll
hlt
jp
shrl
loopne
test
lea
dec
scas
dec
pop
push
adc
scas
or
jbe
dec
ret
int3
rcll
jle
or
dec
ljmp
sub
cmpsl
in
xchg
in
in
leave
aaa
or
sub
jl
daa
fsub
mov
in
je
mov
test
cmp
idivl
aas
or
inc
cs
adc
mov
add
sub
inc
mov
lods
pop
mov
mov
std
imul
inc
int
subl
shl
and
sub
sbb
pop
push
xor
or
push
fadds
loop
enter
lea
sti
mov
rcl
mov
mov
pop
es
xor
mov
and
inc
mov
sbb
adc
rolb
pop
mov
movsl
stc
imul
mov
in
cmp
jl
fcoms
sbb
loopne
sub
push
cld
xchg
mov
mov
xchg
push
test
out
pop
ds
fnstenv
push
xor
xor
stc
pop
cld
add
lods
dec
imul
sub
cmpsb
inc
sti
push
sub
dec
hlt
popf
lods
cwtl
mov
cmp
es
enter
xchg
xor
arpl
imul
xchg
xchg
pop
movsb
mov
fstl
cmp
jp
or
mov
xchg
pop
and
std
push
mov
frstor
out
adc
lods
in
ja
xchg
cs
xchg
sahf
sub
add
jne
loope
jnp
pop
in
sub
xlat
gs
popf
inc
push
mov
pop
sub
js
in
add
add
push
lret
dec
add
and
cmc
jecxz
or
cltd
mov
sti
inc
daa
jmp
adc
inc
leave
add
arpl
fists
jae
push
stos
int3
mov
movsbl
mov
into
je
cmp
xor
cmp
jnp
aaa
add
cmp
mov
movsb
lahf
repnz
rclb
cmp
and
test
and
in
jmp
into
lds
cmc
pop
orl
push
rcrb
imul
mov
daa
sbb
ret
adc
xor
mov
lea
sbb
mov
aaa
scas
in
xor
jecxz
ds
sub
out
and
ret
rorl
das
in
movsl
sbb
into
loope
pop
and
inc
or
fiaddl
fldt
mov
andl
fwait
cltd
lods
cmc
mov
push
mov
les
incl
mov
sub
lods
jae
mov
add
lahf
pop
aam
ss
stc
test
lret
mov
mov
imul
jg
loope
jae
iret
pop
sahf
sbb
sub
fsubrs
imul
vaddsd
sarl
xor
jbe
jmp
cmp
pop
inc
popf
mov
pop
insl
xchg
sahf
inc
mov
dec
pop
jno
push
add
mov
popf
sub
mov
mov
xchg
rorl
dec
lret
das
mov
pop
gs
loopne
insb
xor
and
push
inc
ror
adc
sbb
mov
jp
insl
push
mov
xchg
sub
or
mov
push
jmp
cmp
out
pop
xchg
mov
ja
test
outsl
jo
jle
add
push
add
movsb
push
imul
mov
stos
lcall
fisubl
cmp
or
lcall
iret
nop
inc
inc
push
or
cld
adc
scas
mov
sbb
cmp
pusha
movsb
test
mov
fnsave
mov
push
cmc
and
lods
cmp
test
jae
jb
and
incl
daa
cmp
movsl
sbb
sbb
outsl
ret
lea
push
add
dec
jb
pop
cmpsb
inc
scas
pop
push
pushf
xchg
mov
xor
icebp
mov
and
xchg
lea
sub
out
jbe
push
jbe
sub
lock
and
cs
inc
add
xchg
jmp
inc
shlb
xlat
sbb
sbb
or
test
orb
dec
and
adc
xchg
ja
push
test
mov
sti
mov
inc
or
data16
jge
imul
mov
pop
popf
add
add
dec
lods
sub
scas
xchg
cmp
push
mov
loop
inc
xor
ss
dec
or
xchg
pop
aaa
cli
scas
addr16
jmp
cmpb
inc
fdivs
xchg
outsl
inc
xchg
call
mov
lret
in
adc
push
leave
cmp
out
lret
mov
sbb
xor
dec
jl
sbb
adc
inc
inc
dec
rcrb
fs
xor
test
lock
adc
mov
orb
sbbb
fisubrl
xchg
fdivr
adc
test
mov
out
push
and
sbb
add
rcpps
mov
mov
fimuls
dec
testl
xchg
mov
cli
inc
xorb
jno
cmpl
aad
aaa
sbb
adc
push
mov
int
push
jmp
mov
js
dec
std
mov
idiv
in
lret
jmp
xlat
call
popf
mov
fmuls
push
or
fwait
ret
fwait
push
rcll
addr16
loop
insl
adc
sub
push
sbb
dec
and
loope
inc
aaa
lret
lods
push
icebp
pop
lock
out
popa
pop
and
lahf
push
arpl
cltd
lret
push
sub
mov
outsl
add
test
push
mov
adc
clc
into
test
dec
inc
mov
mov
out
fmul
inc
iret
adc
jbe
xlat
mov
dec
push
dec
adc
pop
aam
mov
mov
ret
lds
movsl
push
xchg
pop
xor
xchg
pop
xchg
cmpsl
jecxz
xchg
push
mov
xchg
int
test
cmpsl
fwait
lds
ret
unpcklps
cld
sub
adc
cmpsb
adc
and
fiaddl
xor
mov
arpl
or
pusha
lcall
add
jge
jge
imul
mov
jge
insb
inc
inc
out
or
cmp
add
sbb
and
cmp
icebp
mov
mov
jg
es
mov
scas
pop
stc
mov
mov
jb
xor
mov
or
fs
cli
stos
js
popf
dec
test
insl
aas
mov
lcall
fdivrs
dec
sti
cmp
rorb
iret
adc
clc
je
cmpsl
fiadds
mov
mov
ds
arpl
fmull
sbb
daa
xor
fdivs
push
orl
mov
mov
lahf
in
sbb
push
icebp
test
add
std
mov
sar
ret
and
insl
movsb
or
sub
aaa
ss
push
popa
adc
rorl
test
sbb
leave
es
mov
out
or
jmp
mov
adc
sub
sbb
mov
mov
jg
repz
popf
mov
outsb
cmp
sbb
xchg
lret
iret
rol
lahf
jp
push
shrl
mov
pushf
mov
and
pop
int
or
add
clc
aaa
pop
imul
popa
or
adc
pop
loop
pop
pop
ljmp
test
jp,pt
and
in
pop
jb
push
sub
mov
sahf
call
mov
xchg
mov
in
popf
notl
inc
jo
icebp
sbb
or
xchg
or
push
xorl
sub
addb
xchg
and
xor
jns
jl
loop
lods
repnz
pop
mov
pop
mov
fnsaves
rcrb
out
xor
jne
call
sbb
pop
in
adc
jl
mov
or
incb
mov
push
hlt
dec
lock
mov
sub
insl
lds
cltd
inc
pop
in
jge
ret
jne
les
add
mov
clc
pop
adc
addb
loopne
mov
sahf
xor
push
mov
nop
adc
mov
cmpb
stc
xchg
push
loope
sub
cmp
add
mov
cmpsb
push
xor
addr16
xchg
insb
push
ret
sbb
mov
arpl
mov
jmp
push
fldcw
mov
xchg
jne
movsl
push
pop
dec
leave
jnp
or
aam
push
inc
xchg
xchg
icebp
fldl
push
cmp
sub
inc
dec
mov
loop
cmp
pop
test
xor
mov
xchg
fstps
lahf
pop
fmuls
inc
push
lods
imul
bound
pop
fsqrt
aad
stc
xor
jb
loop
mov
jle
mov
inc
xlat
jne
rorb
jno
std
inc
jb
mov
push
dec
int3
std
dec
andb
lcall
paddq
mov
mov
sbb
dec
mov
pop
fildl
pop
or
sbb
ds
rorl
mov
stos
or
es
js
fcmove
jp
jl
push
pop
pop
xchg
mov
xchg
insb
push
and
dec
inc
mov
hlt
sbb
mov
push
dec
or
and
loope
push
mov
and
cs
inc
xchg
insl
push
and
and
mov
pop
fidivrl
mov
lcall
xchg
push
or
mov
dec
xchg
lods
cmp
xchg
pop
jno
mov
mov
sbb
lds
dec
pushf
mov
sar
shr
lret
mov
add
push
or
xchg
shrb
push
shrb
dec
fstpt
fidivs
jl
dec
clc
pop
mov
dec
stos
xor
outsl
sbb
daa
and
in
inc
test
adc
enter
mov
mov
ret
inc
jp
loopne
cmpsl
mov
add
inc
lea
div
test
sbb
fwait
mull
cmp
sub
loope
mov
es
inc
clc
aaa
mov
sbb
adc
jns
sbb
xor
jg
subb
in
add
adc
xor
mov
cmovns
mov
pop
jno
cmpsl
jge
data16
jp
mov
inc
int
or
mov
dec
sub
enter
repnz
add
mov
pop
xchg
movsb
jae
out
lds
outsb
fists
jns
fistpl
lock
xor
sbb
rorl
sub
popf
test
xchg
push
scas
mov
enter
lock
loop
dec
mov
xchg
pop
cli
loopne
adcb
add
xor
daa
mov
repz
xchg
pop
int3
xchg
jp
adc
jl
ljmp
std
pusha
push
jae
mov
popf
lods
pushl
stos
sbb
shrb
jle
ds
pop
cmp
sti
sub
scas
call
xchg
enter
jno
stos
lea
cmp
fsubp
mov
scas
xor
sbb
iret
adc
lods
sub
imul
mov
mov
fidivrl
sahf
mov
sti
ss
sbb
adc
leave
inc
cmc
mov
lods
int
mov
fisttpll
mov
out
mov
sbb
cmpsb
jg
mov
jne
mov
cmp
add
push
and
mov
jae
repnz
mov
xchg
xor
stc
mov
addl
and
js
fcmovnbe
xor
clc
adc
jmp
or
out
mov
or
mov
neg
fists
sbb
fcoml
adc
jmp
ljmp
inc
fsts
jae
in
jmp
test
adc
dec
decl
or
and
adc
movsb
rcr
into
xchg
clc
insl
je
and
mov
pop
xor
data16
nopl
ret
jmp
adc
js
repnz
xlat
loopne
cmp
ret
aas
jmp
pop
rcll
or
ret
xor
gs
test
std
dec
sub
lock
sbb
lods
inc
leave
jb
shl
bswap
insb
pop
xlat
sub
mov
pushf
fdivrl
push
jmp
sub
pop
sbbb
push
dec
sbb
daa
shll
add
lods
push
cmp
cmc
aas
and
inc
add
push
push
lret
and
cmp
xlat
inc
jmp
cli
or
es
in
arpl
add
fimull
xchg
add
jb
pushf
sbb
inc
pop
pop
xor
mov
push
ret
loop
push
inc
les
xchg
fbstp
ret
mov
mov
movsb
mov
sbb
pop
lea
sarb
jae
mov
ret
pop
or
jne
and
pusha
mov
aam
test
xchg
dec
adc
and
gs
pop
xchg
stc
int3
lcall
fs
aas
cmp
lods
adc
sbb
pop
pop
mov
dec
lret
mov
push
jl
add
dec
jns
lea
xor
add
insl
int
sbb
out
xor
push
fdiv
test
movsb
lret
xchg
movsb
lea
rorl
sbb
call
fs
loopne
xor
push
sub
shlb
fisttpl
rorl
push
xchg
dec
xor
xor
and
fisttps
mov
mov
mov
and
in
mov
jecxz
movzwl
push
test
nop
dec
jbe
and
jnp
and
xor
mov
or
dec
bswap
outsb
rolb
sbb
adc
inc
stc
movsl
push
dec
shlb
mov
mov
xchg
orb
sub
sub
sbb
imul
inc
int
out
addr16
test
fsubl
push
jl
scas
xor
and
insl
sti
or
hlt
imul
xchg
dec
jmp
pop
sub
sti
test
loope
mov
outsl
inc
or
xlat
mov
and
mov
mov
out
and
daa
mov
mov
cmp
mov
aam
mov
cmpsl
sub
cmp
push
adc
fldt
int3
ljmp
jbe
ret
mov
test
in
in
add
fs
pushw
add
mov
fimuls
insb
dec
xchg
xor
push
jb
decb
ds
mov
jl
xchg
xor
imul
mov
mov
out
sahf
xchg
cltd
shrl
test
cmp
jo
stos
mov
out
ljmp
cmp
push
or
sub
insl
mov
and
xchg
mov
in
xchg
inc
ja
push
adc
pop
add
dec
in
not
jmp
xchg
and
aaa
mov
add
loop
pop
cmpsb
mov
push
ss
int
mov
add
ljmp
nop
dec
movl
rolb
outsl
mov
fs
in
jo
icebp
sbb
les
or
ret
pop
xchg
mov
clc
sub
add
pushf
fcomps
xchg
loop
stc
push
mov
push
pop
nop
pop
les
repnz
clc
jge
mov
mov
es
add
call
fldcw
icebp
add
shlb
jno
mov
inc
cmc
nop
gs
push
ret
xchg
pop
xchg
jno
add
mov
push
push
roll
mov
test
es
cmp
popa
mov
inc
fidivrl
pusha
lods
int3
in
xor
push
sbb
ja
ret
add
cwtl
jmp
sub
push
push
and
push
cmp
imul
inc
movsl
or
cwtl
test
push
pop
jae
jle
das
pushf
mov
jl
add
aam
in
and
test
orb
xor
cld
sub
sbb
cmp
test
inc
cmp
dec
push
jle
mov
std
je
push
aad
push
sbb
cs
inc
sbb
dec
nop
iret
xchg
xchg
cmp
add
dec
cld
sbb
mov
sbb
xor
push
and
cltd
xchg
mov
mov
mov
mov
mov
addb
sbb
or
lahf
sarb
sub
dec
xchg
jno
xor
jnp
pop
stc
clc
mov
jnp
xor
mov
aam
mov
imul
or
mov
inc
test
sbb
fstl
out
addl
int3
adc
imulb
pop
sub
lock
mov
mov
ret
mov
mov
mov
or
cld
inc
pop
pop
je
mov
and
jns
sbb
arpl
stc
mov
adc
pop
fimuls
cmp
cmpsl
hlt
adc
pop
in
add
push
xchg
sti
jmp
jp
xchg
ss
mov
pop
in
sahf
sub
ret
push
cmp
cwtl
or
push
pop
inc
mov
es
and
xchg
inc
sbb
cltd
fstpl
pop
ror
imul
pusha
mov
mov
sub
push
pop
stc
js
pusha
cmp
mov
popf
icebp
sbb
xor
out
out
or
add
sub
sti
clc
mov
int
aad
subb
push
mov
or
mov
xor
push
ja
push
arpl
popa
jo
push
add
mov
mov
stc
scas
imul
test
icebp
dec
in
popa
es
mov
adcl
fidivrl
aam
push
loope
fsubs
push
mov
sti
scas
loope
xchg
xor
pusha
stc
jecxz
gs
fadds
mov
inc
arpl
stos
cmc
xor
sub
fsubrs
pop
aad
add
bound
jnp
jecxz
mov
hlt
cmpsb
lcall
xchg
ja
jp
inc
push
adc
divb
leave
xor
lcall
cmp
and
js
pop
jp
sarb
xchg
and
and
loope
fs
test
add
test
loop
push
pop
mov
enter
xchg
xchg
mov
test
dec
jmp
xor
int3
pop
ja
daa
adc
adc
xor
into
and
imul
ja
lods
jg
and
pusha
aaa
jp
out
adc
test
cli
mov
insl
xor
ja
loopne
lea
pop
clc
nop
subb
repz
ret
sahf
push
inc
jnp
add
out
push
mov
xor
cltd
aad
movsb
and
les
scas
or
icebp
push
imul
loope
iret
dec
lods
mov
add
mov
gs
ret
ds
data16
jb
jp
dec
popl
int3
lcall
jmp
sub
inc
bound
mov
das
push
hlt
arpl
cmp
inc
pop
push
or
ficoml
sub
mov
rclb
xor
push
inc
push
sub
bound
test
sub
mov
xchg
es
xor
jno
pop
aad
into
cmp
shlb
adc
mov
mov
into
cmp
out
movsl
inc
mov
mov
test
jge
cs
xchg
rcll
and
push
aaa
cltd
mulb
clc
mov
cld
inc
mov
adc
lret
push
ja
fadds
cmpsl
add
loope
icebp
gs
nop
ficoms
enter
mov
js
frstor
lret
xchg
dec
and
loope
dec
imul
mov
push
sub
jb
clc
jg
push
sbb
sbb
adc
cmp
and
pop
pop
movsl
or
sbb
push
in
add
mov
loope
in
fldl
mov
mov
fbstp
scas
add
mov
sbb
inc
mov
or
enter
mov
dec
inc
pushf
in
icebp
mov
push
and
mov
cmp
leave
insb
test
ljmp
loop
daa
dec
add
cmp
inc
adc
jp
pushf
push
pusha
inc
pop
into
test
js
mov
aaa
push
out
rcr
push
or
mov
jno
inc
shlb
and
test
inc
add
cmp
lret
mov
sbb
daa
lods
xchg
int3
xchg
xor
lahf
jbe
mov
stos
xor
push
test
in
or
pushf
adc
add
mov
adc
push
inc
gs
adc
jp
push
xlat
int3
out
push
int3
loopne
cmc
ljmp
filds
or
pop
and
out
xchg
inc
cmp
int
outsb
dec
sti
cmpsl
out
mov
push
out
push
cmpsl
pop
outsl
lods
and
or
cwtl
mov
aam
loopne
mov
fs
add
pop
hlt
adc
xlat
inc
xor
or
and
mov
mov
outsb
jb
pop
int
mov
into
sarl
pop
sub
dec
shlb
pop
ja
xchg
add
adc
inc
pop
push
lahf
bnd
repnz
int
es
mov
push
jb
jle
push
insl
ljmp
sar
mov
adc
pop
jno
cltd
ds
jp
sbbl
add
cmpsl
or
pop
cmpsb
push
add
inc
movsl
push
in
xchg
cmp
or
gs
inc
pushf
push
xor
rcll
aaa
lret
stc
ret
fdivl
lcall
aad
pop
loope
or
mov
into
push
decb
lods
adc
and
test
pop
adc
sti
icebp
aam
insb
ja
ja
jae
mov
pop
xor
pop
test
adcb
popf
andb
lahf
loop
adc
sbb
push
xor
addr16
xchg
adc
dec
pop
sbb
add
nop
jno
imul
cmp
lret
adc
popf
arpl
shll
es
pop
sbb
mov
out
push
mov
jecxz
fistl
in
and
dec
jns
idivl
or
mov
jecxz
and
cmpb
call
movsb
lret
dec
shlb
into
sbb
mov
cmpb
lods
stos
jmp
adc
data16
pop
enter
sbb
xlat
adc
lret
fistps
out
pop
in
push
jge
iret
sbb
fs
or
ss
sbb
xchg
es
mov
adc
xor
xchg
or
mov
es
jmp
mov
pushf
or
pop
sub
sbb
outsl
cld
push
mov
imull
test
dec
push
fs
cld
add
mov
xchg
arpl
js
mov
repz
cmpb
mov
in
mov
mov
ss
jp
add
sub
push
and
sbbb
add
mov
les
push
jns
mov
mov
fildll
mov
repz
mov
sub
xchg
mov
push
ror
stos
jns
mov
push
popa
shlw
xor
outsl
mov
mov
es
iret
pminub
jge
xor
aam
xchg
fsubrp
test
cld
adc
leave
mov
jo
clc
shlb
add
or
fisubl
ss
push
roll
sbb
fldenv
mov
bound
mov
mov
ret
and
inc
ja
les
sbb
pusha
inc
xor
jge
lods
dec
mov
jo
or
mov
psrld
mov
xlat
ja
gs
fbld
push
mov
xchg
jae
fldpi
ds
mov
stc
es
xchg
mov
imul
shl
jnp
mov
push
jnp
or
dec
aam
and
push
cmp
lods
jnp
loope
cmpsl
inc
lcall
fsubl
lods
aas
push
pop
popl
in
push
sbb
pop
cmpsb
inc
mov
subb
or
enter
aad
sahf
jb
loop
cmp
mov
mov
loop
flds
lods
mov
jbe
in
sbbl
cmp
lahf
xor
xor
xchg
adc
addr16
jo
jne
push
lahf
mov
outsb
out
push
push
in
jo
into
sub
je
loope
xchg
pop
ljmp
adc
mov
mov
shll
out
scas
dec
loope
mov
jl
aas
mov
mov
inc
sbbb
imul
ret
outsb
mov
mov
leave
negl
mov
test
jmp
push
cld
sub
cwtl
xchg
xchg
cmpsb
enter
and
jp
testl
xor
mov
lret
lret
test
mov
cmp
in
fidivs
fadds
sarl
mov
enter
inc
imul
dec
xchg
cmc
dec
jl
fsubl
jmp
lock
mov
push
in
jne
adc
lods
pop
sbb
add
push
mov
jo
lods
jae
data16
cltd
aad
xchg
cmp
scas
ds
fs
sbb
cmpsb
add
dec
fwait
cmp
inc
ud2
inc
jne
mov
lods
sti
sti
or
pushf
add
das
xor
fstl
sbb
inc
sbb
stc
cmp
roll
orl
cwtl
sbb
call
or
xlat
or
xchg
pop
loope
jp
and
dec
dec
addb
fcomps
or
cmp
stc
lcall
push
inc
add
leave
mov
cmc
xchg
das
mov
shlb
lcall
bound
adc
jmp
xlat
xorb
push
inc
sbb
add
imul
mov
and
les
inc
mov
adc
aad
and
in
nop
cmc
jecxz
int3
stc
adcl
and
arpl
cmp
jb
or
pop
int3
daa
sub
clc
in
jb
lods
loope
into
cmpsl
leave
imul
or
pop
cltd
or
inc
push
rcll
cs
push
cli
push
or
loop
lods
inc
jnp
xor
pop
aas
cli
mov
inc
push
add
insl
and
xchg
pop
lock
scas
jmp
sub
pop
pop
mov
inc
and
and
add
push
stc
jecxz
adc
out
scas
out
leave
lods
push
int
xchg
sub
pushl
cmp
aad
dec
fwait
pushf
add
enter
mov
inc
jmp
loope
divl
nop
repz
stos
movsb
pop
cltd
popa
xor
sbb
cmp
data16
jge
imull
movq
decl
ss
mov
dec
inc
test
and
dec
push
sub
imul
and
notl
push
test
fimuls
jmp
ret
xor
push
sbb
mov
jno
inc
mov
dec
inc
loop
iret
dec
fists
mov
adc
aas
daa
mov
cmc
inc
insb
cmp
ljmp
add
pop
inc
jmp
pop
adc
filds
roll
or
sbb
dec
repz
inc
iret
mov
mov
ss
outsl
loope
mov
loope
movsb
repnz
mov
loop
push
push
decl
rorl
hlt
imul
je
and
ret
movsb
and
and
or
cmp
jno
das
outsb
movsl
or
sarl
jge
stos
dec
xor
xor
in
pop
jnp
sbb
cvtps2pi
push
jbe
mov
xor
xor
pop
inc
xchg
fdivl
dec
add
mov
sbb
jae
pop
xor
adc
jecxz
lret
xchg
sarl
or
pop
testb
nop
xchg
sti
xchg
jp
xchg
pop
jns
repz
lea
jae
fidivs
sbb
adc
cwtl
adc
lret
cmc
sbb
add
or
pusha
inc
xor
enter
mov
rcrl
mov
rorb
cmp
sbb
mov
ret
fnsave
xchg
inc
iret
imul
jp
jl
repz
push
jg
daa
je
or
ret
outsl
fstpl
mov
data16
xor
inc
xchg
jno
test
mov
aas
pusha
sub
nop
mov
jns
fimuls
push
sub
mov
cmp
push
xchg
pop
jo
mov
aam
jecxz
pushf
mov
sub
push
jp
mov
jl
cmp
adc
iret
jae
jne
cmp
mov
popf
jb
into
ficomps
add
cmc
sbb
mov
mov
xchg
sahf
sbb
cmpl
mov
pop
mov
xor
mov
hlt
js
inc
into
adc
push
jp
sarl
sti
test
add
loopne
cwtl
xchg
jb
jo
lahf
adc
fidivrl
xchg
jecxz
adc
data16
into
outsb
cmp
xor
jbe
jmp
lahf
cmp
insb
pop
xchg
push
scas
pushl
lods
imul
adc
mov
adc
sub
not
xchg
cs
into
enter
cli
stos
pop
call
and
clc
out
orb
xor
dec
push
fld
in
cltd
cmpsb
es
pusha
fs
jl
inc
out
fmul
xchg
fidivrl
test
cmpsl
cmp
add
add
out
mov
in
in
xchg
cltd
sbb
lea
cli
mov
icebp
lods
popa
outsb
dec
mov
push
repnz
popa
outsl
aad
test
lcall
pop
leave
cmp
leave
aas
ss
test
add
fildl
xlat
cli
mov
hlt
lds
sub
testb
fsts
sub
lods
into
ja
mov
mov
push
cmp
dec
xchg
sarl
inc
nop
push
lock
and
lcall
sub
mov
loopne
inc
out
xor
out
mov
xchg
sub
fs
pop
mov
fistpll
aaa
dec
iret
test
or
pop
pop
cmp
mov
ja
lret
pushf
clc
and
inc
push
in
pop
xor
test
push
enter
pushl
and
subb
data16
cwtl
push
das
fstpt
xor
pop
adc
imul
inc
xchg
scas
ret
or
and
aam
shll
in
inc
fs
jecxz
sub
lock
mov
nop
jl
subl
mov
sub
sbb
out
sbbb
sub
ret
pushf
xchg
sbb
dec
or
getsec
outsb
std
jge
int
shll
ss
ja
pop
adc
loop
jne
mov
cmpsb
xor
out
adc
xlat
pop
sahf
xor
pop
jg
and
jp
xor
pusha
xchg
ss
sbb
xchg
xchg
pop
adc
add
fwait
adc
push
pop
add
mov
cld
sarl
out
push
add
jge
lcall
in
cmpsl
div
mov
push
mov
aaa
push
cs
cltd
out
stos
and
cwtl
divl
mov
repnz
jle
or
imul
ret
mov
adc
stos
cmpsb
ss
mov
js
lret
std
rcll
pop
xchg
rorl
xchg
mov
mov
cmp
je
inc
loope
je
jns
out
rcl
sbbb
ja
fcmovnu
dec
pop
aas
lcall
fucomip
push
enter
es
mov
dec
and
adc
or
mov
jle
pop
mov
xchg
lcall
pop
sbb
into
test
jg
roll
push
pusha
jbe
dec
mov
jnp
inc
dec
mov
jl
push
inc
xchg
in
inc
pop
mov
xchg
pop
cmc
add
jp
cwtl
ror
icebp
outsl
mov
pop
dec
xchg
outsl
in
mov
inc
mov
adc
push
cmp
mov
sahf
sti
fwait
sbb
jno
das
fdivp
stc
mov
loopne
addr16
mov
jnp
xor
lret
repnz
push
add
inc
mov
fidivs
lds
adc
scas
lret
xchg
push
aas
aaa
push
pushf
fs
jmp
into
fwait
leave
push
mov
sbb
std
clc
in
mov
xchg
pop
mov
inc
repz
or
fsubs
inc
dec
arpl
push
push
popa
push
jnp
add
faddp
xchg
das
icebp
mov
test
sub
enter
test
pop
inc
lds
fisubs
jns
xchg
cmp
cmp
cmp
clc
lock
fwait
negb
dec
nop
cmpsb
pop
fs
imulb
sbb
xchg
mov
push
pop
insb
mov
decb
cmp
es
fistl
rcr
mov
cltd
call
scas
cmp
cmp
andb
jae
movsb
out
stc
notl
cmp
push
mov
std
aaa
mov
mov
sub
and
push
rolb
mov
incl
fidivrs
pop
lret
inc
push
lret
sbb
sub
mov
in
sarl
pop
inc
andb
mov
stos
cld
inc
arpl
inc
popf
cli
jne
sub
jle
orl
arpl
or
pop
fildll
jne
ds
pop
push
and
ret
cli
les
adc
dec
arpl
jecxz
and
or
inc
xchg
dec
inc
inc
fdivrl
inc
movsb
mulb
out
pop
pop
adc
mov
or
sub
shll
push
iret
ljmp
ret
loope
dec
aad
sbb
imul
nop
push
js
shll
das
das
dec
nop
or
addr16
mov
rcll
inc
mov
aas
push
inc
add
pop
and
and
mov
xchg
loope
sbb
pop
lods
xchg
adc
cmp
clc
jp
arpl
adc
adc
aaa
rorb
movsl
sub
or
das
int
sbb
xor
sub
hlt
cmpsl
test
push
movsl
test
inc
or
sub
mov
adc
adc
arpl
orl
fdiv
mov
inc
loope
add
pop
arpl
dec
nop
test
je
in
mov
adcb
or
bound
call
sbb
xor
and
cltd
icebp
xchg
insl
dec
mov
hlt
in
movsl
add
adc
inc
imul
stos
sbb
loope
pop
xchg
dec
and
mov
shlb
jb
mov
jmp
iret
cli
jo
and
rcrl
cmp
xor
cmp
leave
nop
lret
add
add
outsb
aaa
jecxz
subw
data16
aad
mov
cwtl
mov
jecxz
inc
out
or
mov
inc
dec
lret
into
inc
test
fwait
dec
icebp
jnp
ret
jne
mov
cli
jbe
adc
cmp
mov
dec
mov
push
sub
rcl
dec
push
push
inc
test
sub
mov
and
pop
movsl
jmp
je
sbb
or
fnstcw
out
aam
cmpb
adc
dec
cli
ds
push
movsl
push
loop
adc
push
push
xor
sub
pushf
dec
ret
inc
nop
add
cwtl
push
mov
sti
test
out
xor
mov
xchg
or
add
sbb
hlt
xchg
into
jae
sub
icebp
test
push
xacquire
cmp
aaa
es
sbb
push
popf
or
nop
xor
stos
dec
and
sbb
jecxz
rorb
or
sti
ret
fbld
mov
xchg
cwtl
cmp
cmpsl
cmc
shrb
mov
or
dec
imul
jmp
jecxz
and
mov
push
es
sbb
jge
push
xor
shlb
push
rcrb
xchg
xor
rol
push
inc
mul
push
das
xchg
cmp
mov
mov
add
clc
pop
cmp
addb
insb
idivb
mov
aad
push
xchg
stc
or
mov
pop
repz
in
cwtl
imul
dec
push
or
mov
ljmp
mov
rcrb
xchg
into
inc
cmpsl
pop
aaa
xlat
add
xchg
mov
or
xor
jge
and
lods
andl
adc
mov
stc
pushf
in
inc
iret
push
jl
push
jne
push
daa
mov
dec
mov
add
inc
out
cs
sub
mov
jne
push
mov
adc
cwtl
dec
push
repz
out
sbb
gs
xor
js
les
test
ret
scas
popa
add
das
mov
fadds
mov
xor
xor
mov
sbb
jb
repnz
out
insl
mov
mov
adc
inc
jae
mov
call
push
ret
and
sub
or
jbe
push
ja
jb
pxor
out
mov
or
jmp
push
xor
cmp
mov
mov
cmpsl
and
dec
outsb
jbe
sahf
pop
xchg
scas
mov
xor
cmp
rcl
pop
or
jno
or
out
rclb
test
dec
cmpsl
lret
loop
push
and
test
lret
inc
mov
iret
push
cmp
push
and
je
rcll
in
xchg
mov
push
das
rclb
mov
xor
inc
in
es
inc
dec
xor
jg
aad
mov
imul
and
and
je
push
sahf
sbb
lret
jo
pushf
push
into
mov
jg
jae
xchg
dec
xchg
mov
adcl
jp
mov
faddl
mov
jae
and
push
push
bnd
mov
xor
lods
sbb
xor
imul
adc
lret
ret
popf
pxor
js
dec
sub
lods
stc
xor
lret
sbb
mov
outsl
jo
mov
adc
stos
inc
mov
ret
pop
cmpsb
or
inc
cmp
fld
js
sub
mov
aam
mov
js
jge
in
or
pop
jg
jb
aaa
ret
push
pop
aad
jnp
imul
add
loopne
pop
insb
push
inc
sti
sub
sbb
ss
mov
or
dec
xor
insb
mov
mov
cmc
xor
jle
rclb
shrb
jbe
cmpsb
iret
test
lea
dec
push
mov
push
addb
pop
sub
mov
push
mov
add
inc
cmc
xchg
repnz
psubq
mov
add
jmp
cs
fldcw
mov
adc
insb
enter
or
inc
sbb
dec
mov
mov
addr16
jl
mov
xor
jo
jae
lcall
shl
sub
jb
pop
jl
enter
aad
cmp
push
inc
es
fs
popa
lds
aas
repnz
xchg
cmpsl
mov
jae
lcall
mov
cli
push
lds
and
shll
bound
inc
cmp
cmc
cmp
xor
xor
insb
jl
adc
ret
orb
lods
pop
inc
push
leave
or
sahf
jge
mov
jge
gs
fiadds
fdivs
leave
sub
inc
fmuls
mov
insb
and
popa
cmp
inc
lcall
mov
pop
daa
or
gs
mov
dec
inc
cs
fwait
imul
cli
leave
jo
fcmovb
lods
add
cmp
ja
pop
js
cltd
cmpl
or
xor
in
xor
cli
pop
xlat
mov
fs
sub
es
push
pop
sbb
mov
mov
xchg
call
gs
in
dec
lea
mov
daa
and
das
bound
jl
xchg
adc
sbb
movsl
in
adc
or
imul
pusha
sub
rcll
andl
shll
adc
mov
push
daa
jo
jg
ficomps
in
inc
add
int3
in
jecxz
push
leave
mov
fstpl
cmp
xchg
das
gs
insb
sbb
cmp
sub
jge
inc
xchg
adcb
aas
cmp
sub
lret
dec
outsb
add
dec
pop
movsb
ss
sub
loopne
inc
dec
cmp
sahf
je
aam
gs
sarb
push
sbb
cwtl
sub
jae
addb
inc
insl
pop
icebp
lret
popa
xor
add
fisubrl
shlw
stos
pop
mov
pop
and
adc
add
xor
inc
xchg
jp
pop
fyl2xp1
scas
push
fstpl
xor
push
sti
xchg
fadd
mov
sbb
mov
xchg
inc
sub
test
fucomi
push
repz
jbe
aaa
test
stc
and
cmpsl
out
repnz
dec
pop
xchg
add
fistpll
ja
cwtl
stos
fisubrs
xchg
divb
jg
jecxz
divl
rol
into
xchg
in
pop
imul
push
enter
sub
inc
push
loop
mov
cli
scas
jle
mov
int
fidivs
fs
scas
jge
pop
mov
jle
mov
push
movsl
xor
shrl
mov
dec
xchg
jbe
insb
pop
fnstenv
jo
xor
nop
sahf
push
fidivrl
mov
dec
xor
mov
into
lock
mov
cwtl
incb
rorl
and
sbb
repz
scas
pop
dec
mov
pop
cmp
mov
mov
jecxz
ficomps
insb
les
in
or
lea
cmp
cmp
cs
inc
push
cli
int3
jnp
dec
xlat
mov
cmp
clc
cmpsb
clc
lods
lods
mov
das
xchg
dec
xchg
rcl
imul
icebp
scas
cmp
mov
jbe
icebp
pop
cmc
pop
out
fdiv
pop
sahf
and
int3
dec
jp
push
jge
andl
xor
cmp
fcoml
movsb
cli
shrb
inc
insb
push
dec
int3
dec
jge
pop
cld
or
sub
pop
jg
cmp
test
cs
xchg
inc
lea
sbb
pop
add
mov
cmp
out
xor
xlat
mov
cmp
dec
dec
and
ja
mov
add
add
sub
mov
dec
loop
in
das
push
mov
dec
jg
loopne
rcl
hlt
jmp
orb
xor
pop
xchg
pushf
dec
test
aaa
jae
sub
dec
scas
push
repnz
push
and
repz
loop
jns
or
sahf
leave
mov
movsl
cmp
ret
mov
mov
mov
gs
pushf
add
xlat
mov
pop
mov
xchg
jae
sbb
inc
adc
push
add
das
xchg
js
xchg
jo
clc
inc
data16
mov
movb
pop
xlat
popa
mov
add
mov
out
sub
jecxz
inc
mov
movsb
out
xchg
push
jmp
sbb
cmpsl
mov
jge
out
mov
shlb
sub
jne
in
and
lods
push
jo
push
mov
pop
loope
iret
mov
scas
in
xor
adc
aaa
or
mov
and
xchg
lea
sahf
stos
pop
int3
rsm
cmpsb
cwtl
mul
mov
xchg
push
add
lret
lret
inc
push
cmp
sbb
mov
mov
xchg
dec
in
in
sub
cmpsl
push
push
hlt
add
push
popf
sbb
insb
je
inc
xor
inc
cld
call
cmp
mov
or
dec
cmp
in
lods
adc
insl
loop,pn
cli
loope
inc
pop
jge
stos
fbstp
xchg
adc
call
xchg
push
sti
mov
lahf
jle
mov
imul
imul
lds
fists
xchg
jecxz
xchg
aas
rorl
fistps
stc
jb
mov
scas
lods
cmp
loopne
xlat
pop
fistpll
adc
shlb
int3
xorl
xchg
cmp
lea
in
dec
push
daa
mov
mov
fmull
pop
lock
lods
adc
fimull
stos
xchg
sub
outsl
std
mov
xor
mov
mov
or
cs
push
xor
shl
xor
mov
icebp
cltd
ret
insb
sub
mov
fistl
popa
repz
and
lds
fs
cmpsb
fsubrs
mov
je
push
and
jo
out
jnp
jl
pmullw
jmp
inc
mov
push
cmp
sub
mov
or
push
in
test
outsb
frstor
movsb
lods
mov
loopne
std
add
stos
or
sbb
lods
lock
mov
lds
loop
clc
not
xor
mov
xacquire
lods
sti
cmp
sub
gs
ret
add
sbb
je
stos
cmpsb
sbb
xchg
push
push
adc
cwtl
icebp
das
shlb
lods
sbb
mov
mov
movsl
add
std
sbb
mov
sub
mov
jno
xor
sbb
mov
aam
mov
nop
pop
pop
cld
loopne
andb
adc
loopne
out
push
filds
call
cmp
rolb
test
arpl
mov
or
and
mov
sub
scas
jbe
ret
jle
lea
adc
lds
jns
lcall
inc
in
dec
call
cmpsb
pop
decl
icebp
loope
jecxz
cltd
daa
cmp
mov
adc
cmpsb
int
aaa
in
in
sbb
sub
adcb
fdivrl
sub
mov
movsl
xor
sbb
lahf
pusha
decl
mov
loopne
dec
push
sar
out
xchg
and
insb
pusha
jp
cmp
xorb
jecxz
pop
dec
pushl
lea
test
out
lcall
aad
ret
pop
mov
jge
test
pop
push
pop
pop
lods
mov
mov
fadd
bound
mov
xor
or
pop
mov
cmp
cmpsw
addr16
push
ja
cmpsl
push
das
test
imul
lret
lcall
scas
add
jbe
repnz
sbb
lcall
xor
notl
push
and
enter
sbb
push
pop
nop
push
xlat
dec
mov
or
inc
clc
pop
inc
jmp
sbb
out
inc
inc
push
cs
cld
pop
loope
xchg
xor
js
jl
or
pushf
and
mov
mov
push
fdivl
roll
sub
fistpll
push
inc
test
inc
rcll
sub
stos
call
sub
mov
imul
rcll
pushl
aad
jb
bound
mov
pop
pop
data16
and
adc
test
aas
cmpsl
js
inc
fildll
jge
test
lret
roll
or
shrl
fcompl
xchg
sub
insb
imul
ss
jmp
push
and
push
popa
adc
sarl
and
mov
xor
lret
loop
jne
test
lcall
movsb
daa
movsb
out
mov
inc
iret
sti
dec
icebp
invlpg
je
or
xchg
ret
divl
lret
jae
push
cmpsb
cmp
xorl
push
aas
jnp
sub
pusha
jae
sarb
mov
adc
gs
mov
idiv
jecxz
js
rorl
xchg
enter
repz
cmpb
out
add
pmullw
and
icebp
add
add
add
jns
lret
int3
mov
cltd
add
psubd
push
jmp
jle
out
shl
fistpll
mov
add
ljmp
int
ret
insl
sub
loop
mov
bound
lods
lods
pop
das
dec
add
push
pop
in
jne
pop
pop
ja
aam
adc
arpl
jg
push
pop
mov
cmp
out
call
loopne
out
outsb
pushl
adc
add
mov
roll
sti
or
addr16
pop
mov
or
ret
mov
cmp
push
pop
repz
loopne
mov
je
and
xchg
pop
std
cmp
jg
xor
jmp
sti
dec
les
shr
repz
adc
and
sbb
jle
in
movsl
mov
fwait
mov
out
xor
mov
add
andl
dec
dec
or
out
pop
stos
stc
pushf
add
add
pop
xchg
mov
jecxz
inc
fstl
insl
adc
or
dec
pushf
fcmovnb
dec
addr16
mov
outsb
bound
push
adc
into
pusha
adc
dec
ds
xor
cmp
icebp
mov
or
mov
roll
mov
cltd
stos
mov
mov
mov
test
stos
std
sbb
stc
push
jbe
addr16
xor
jge
shll
adc
cmpsl
fwait
scas
adc
jno
push
and
mov
fmul
sti
cmp
lods
lret
sub
sahf
pop
andl
sahf
imul
outsb
clc
stos
inc
sbb
or
add
mov
sbb
aad
inc
jmp
cmp
subb
push
fmuls
fcompl
jae
out
jb
gs
cli
jno,pn
ret
repz
adc
inc
pop
mov
push
pop
lods
ss
pop
jae
mov
mov
andl
xlat
loopne
cmpsb
adc
hlt
dec
cld
add
divps
and
add
sub
js
loopne
les
mov
addb
adc
dec
leave
mov
cltd
or
inc
leave
pop
adc
sub
ss
outsb
and
or
mov
rcrl
jb
cltd
and
jmp
repnz
mov
mov
adc
sbb
es
repnz
xchg
popf
jae
in
scas
mov
pusha
imul
cmc
jns
mov
mov
stos
cwtl
pxor
iret
cmpsb
dec
mov
mov
jns
dec
adc
cmc
mov
scas
mov
and
test
xchg
push
adc
and
gs
sti
repz
incl
mov
fbld
roll
push
leave
ja
dec
fiadds
mov
mov
int
cwtl
fildll
addr16
xchg
cld
push
int
mov
xchg
dec
sbb
in
mov
in
xchg
xorb
push
pushf
loop
mov
sub
push
jne
xchg
in
pop
je
inc
jg
push
inc
dec
pop
xor
inc
mov
ds
inc
mov
push
xchg
test
pop
mov
ret
mov
mov
aad
dec
jne
add
add
sub
and
imulb
lds
mov
pop
lcall
mov
mov
int3
sbb
mov
mov
mov
mov
fimull
icebp
mov
fwait
push
push
cwtl
leave
mov
push
jae
sub
jb
outsl
insl
cltd
cmp
in
movsl
jge
dec
cli
daa
cmp
nop
mov
cwtl
push
cmovbe
mov
pop
jl
loop
cmp
inc
andb
pop
sbb
movsl
incl
hlt
mov
ja
adc
rcrb
cmp
ret
lret
mov
lock
pop
adc
xor
pop
add
xchg
lock
cmc
stc
xor
popa
in
sub
cs
inc
cmpsl
xchg
cmp
and
pop
pop
mov
mov
mov
pop
lods
xor
sarb
sub
icebp
jne
dec
ficoml
xchg
push
xor
inc
cmp
cmp
jmp
mov
mov
cmpb
js
xchg
dec
inc
lret
stos
lret
icebp
mov
mov
mov
fsts
jge
ret
ljmp
repnz
divb
adc
sub
insl
xchg
insl
dec
push
rcrl
scas
cmp
das
fisubs
bnd
inc
pushf
gs
and
aad
add
mov
xchg
fsubrl
push
xchg
mov
pop
add
in
decl
sub
push
push
push
sbb
cltd
movsb
adc
shl
sub
jg
bound
clc
mov
pop
test
jno
push
jg
cltd
pop
out
add
dec
jecxz
mov
pop
pushf
dec
lahf
push
mov
test
in
dec
ljmp
jne
repnz
add
scas
cltd
test
mov
or
cld
pop
daa
addr16
mov
mov
xchg
inc
xchg
pop
jecxz
xchg
dec
sbb
add
mov
push
dec
subb
mov
aas
push
fs
loope
imul
push
test
ds
ss
in
jp
jmp
and
xor
xchg
xchg
leave
push
mov
cmp
loopne
jle
cmpsl
mov
gs
inc
lods
insl
shll
mov
test
inc
mov
loope
jnp
in
push
and
mov
sahf
outsl
ja
add
jg
push
fistpl
lcall
mov
arpl
fldt
sbb
movsb
or
or
pop
in
js
pop
add
popa
cli
add
mov
insb
jge
mov
iret
xor
adc
pop
jg
sahf
push
sbb
push
mov
pop
cmp
cmp
jp
dec
add
es
lahf
cmp
mov
repnz
pop
mov
pop
test
jmp
clc
rcrb
cltd
in
jp
nop
mov
push
imul
adc
push
fadd
cmpsb
pushf
xor
leave
adc
xchg
enter
std
stos
mov
sbb
iret
repz
xor
push
scas
xchg
sub
js
dec
sbb
out
addb
or
push
mov
inc
push
pop
mov
das
loop
js
and
mov
int3
xchg
lods
lds
pushf
aaa
pop
inc
out
mov
ja
hlt
adc
add
mov
push
adc
lods
push
or
scas
cltd
xor
scas
rclb
insl
or
and
cltd
rorl
push
sub
pop
pop
fs
inc
dec
xacquire
xchg
xchg
lods
pop
leave
mov
fcoml
adc
mov
and
mov
cmp
adc
push
adc
cwtl
mov
add
mov
out
popf
jo
xchg
lds
rep
sahf
fucom
sbb
or
dec
fwait
lcall
push
lock
fnstcw
jno
lods
iret
cltd
fildll
sub
cs
sub
mov
fimuls
shll
pop
push
mov
add
mov
popf
mov
xchg
movsl
mov
push
clc
and
add
popf
scas
aas
sub
fwait
js
mov
ljmp
inc
mov
in
leave
mov
gs
mov
sbb
aad
sub
xor
dec
jnp
dec
fdivr
mov
je
mov
ja
push
gs
mov
xor
push
outsl
cmp
mov
inc
mov
stos
ret
xorl
out
lret
push
pop
xchg
adc
adc
ds
int
pop
push
in
shlb
fldt
mov
cli
test
stos
sbb
mov
ret
adc
sub
mov
scas
das
test
out
in
mov
repnz
rorb
sub
jns
pop
iret
pop
ljmp
mov
outsl
ficompl
xor
dec
jns
jmp
inc
shrl
or
cmp
imul
arpl
pop
pop
test
notl
mov
loope
add
add
inc
icebp
push
sub
mov
dec
adc
je
pop
popf
dec
scas
lods
imul
mov
pop
push
cmpsb
xor
xchg
add
cmp
out
pop
adc
insb
lock
and
xor
cld
enter
lds
jo
and
std
add
and
mov
mov
repz
push
dec
xchg
icebp
push
lret
jl
jle
mov
ret
out
nop
ljmp
insl
fadd
cmp
mov
and
mov
int
lods
ljmp
xor
jecxz
push
mov
sbb
mov
dec
fildll
jne
andl
jae
cli
insl
mov
outsl
or
cmpsb
pop
push
push
adc
xchg
xchg
add
xchg
decb
outsl
enter
icebp
fmuls
jae
test
and
ret
outsb
push
xchg
out
insl
fcoml
outsb
push
xchg
inc
ss
add
jg
addr16
int3
insb
and
jmp
sbb
mul
adc
dec
test
cmp
adc
imul
outsl
xor
inc
std
call
sbb
movsl
push
and
push
cmp
inc
jl
sub
jmp
rcrl
mov
pop
test
into
xchg
push
fists
outsb
ret
adcb
out
xor
mov
ljmp
jb
pop
pop
mov
test
push
and
lock
cs
sahf
jae
push
out
push
je
or
fcmove
pushl
add
pop
testb
mov
pop
imul
loope
inc
incl
mov
mov
test
rclb
jns
fs
push
xchg
mov
jne
push
mov
xchg
push
xchg
pop
out
orl
mov
pop
pop
mov
inc
scas
xchg
pop
out
jne
push
inc
divb
or
cs
fistpl
int
popa
insl
scas
fstl
in
sbb
nop
sbb
repz
inc
inc
mov
dec
xchg
int3
add
cld
sahf
inc
cmpsl
push
xorb
pushf
cld
test
push
pop
ds
cwtl
xchg
push
jae
sti
or
testl
xorb
popl
aas
xchg
bound
inc
sbb
lret
fisttps
jo
cmp
into
lods
add
inc
shl
jns
mov
dec
scas
and
add
testb
adcl
mov
jmp
fwait
outsl
pop
adc
sub
mov
push
and
push
or
adc
jbe
cltd
fstpl
jb
adc
push
mov
ljmp
shrl
jp
pop
into
loopne
adc
movsb
pop
dec
cmp
cs
rolb
add
aam
test
addl
inc
sbb
fld
js
into
add
mov
jg
in
or
dec
hlt
insb
jno
arpl
cwtl
mov
ja
push
sbb
mov
or
mov
popa
and
adc
push
rorl
xchg
push
jo
dec
aad
add
mov
cmp
dec
pop
inc
sub
pop
jmp
xor
mov
fistpll
mov
mov
add
mov
lds
fadds
mov
adc
xchg
int
cmp
es
hlt
sbb
mov
push
push
adc
into
and
mov
or
orl
cwtl
sbb
in
lds
movsb
jge
jnp
sahf
leave
in
cwtl
xchg
xchg
push
cli
inc
mov
fidivrl
sbb
hlt
sub
cmp
or
aaa
iret
mov
rorl
mov
leave
popa
mov
imul
mov
and
sarb
xor
and
or
and
subl
mov
mov
ss
inc
and
mov
das
lahf
xor
ficoms
mov
mov
add
push
scas
pop
dec
xchg
incb
enter
ds
or
dec
test
pop
mov
pop
sub
outsb
push
imul
nop
cld
leave
fsub
aam
sarl
jmp
mov
adc
dec
cld
mov
mov
sbb
ret
xor
xchg
mov
lret
xchg
popf
in
sbb
cli
paddw
pop
or
and
cmp
xchg
inc
lret
rcr
sub
and
arpl
in
sahf
std
cmp
mov
pop
push
cmpsl
sub
mov
pop
je
fists
cld
repnz
jmp
subl
mov
lds
cs
add
mov
aas
stos
stos
popa
dec
dec
mov
push
into
push
mov
mov
push
pop
cmpsb
ljmp
dec
loop
imul
mov
imul
fisubl
jl
jp
orb
out
inc
cmpsb
out
mov
shll
mov
inc
xchg
mov
cli
pop
dec
jg
cld
jmp
arpl
sarb
pop
push
popf
mov
jg
incl
xchg
pop
fcomps
stc
xor
pop
inc
push
loope
fmuls
pop
pop
stos
adc
arpl
lahf
mov
fildl
push
cmp
add
jmp
lods
sub
aam
xor
inc
sti
and
push
dec
or
push
in
jle
mov
test
add
sub
pop
mov
mov
fnsave
enter
xchg
or
mov
xchg
fwait
mov
stos
in
push
ds
lods
and
imul
pop
imul
add
lods
jno
insb
and
je
add
test
xchg
stos
in
call
mov
inc
xor
das
mov
aad
loopne
test
fmull
push
jo
push
cs
sbb
cmpsb
scas
scas
jbe
jbe
decl
mov
push
cmp
movsl
repnz
xchg
test
add
fistpl
push
sbb
mov
mov
jle
mulb
cmp
push
test
sbb
dec
or
loop
push
push
ret
loopne
adc
jo
inc
repnz
inc
push
pop
ja
daa
ljmp
call
xchg
pop
pop
leave
imul
xchg
je
pop
xchg
mov
add
add
inc
fistps
aad
mov
inc
sbb
fadds
js
dec
mov
inc
adc
mov
jge
btc
mov
sub
outsb
push
add
and
mov
xchg
dec
out
cli
jle
cmp
das
es
or
scas
xor
jle
scas
sbb
push
xchg
int3
in
je
inc
sbb
fnstcw
andl
xor
lret
es
mov
pop
push
andb
inc
nop
adc
cmp
jno
xchg
push
sub
aad
push
clc
jne
sub
addr16
xor
push
push
ljmp
in
jmp
mov
outsl
adc
or
lret
pusha
xchg
push
bnd
push
mov
stc
push
lds
nop
int3
imul
mov
and
inc
inc
es
jp
dec
ds
cli
sub
mov
cmpb
lahf
pop
div
stos
jo
sbb
jno
int3
sub
xchg
jmp
fisubrs
mov
or
je
movsl
mov
ljmp
push
cmp
jmp
inc
push
sbb
nop
cs
fwait
lret
or
shrb
mov
rolb
pop
lods
pop
xchg
icebp
aas
and
stos
bound
jg
gs
cmpl
loope
lcall
bnd
and
adc
dec
sbb
fisubl
mov
dec
iret
cmpsl
jle
jmp
movsb
movsb
and
cmp
jmp
insl
xchg
aaa
xchg
sti
jno
aaa
frstor
fistpll
jg
fidivl
jmp
sub
pop
shlb
ret
pop
pop
adc
dec
ret
aam
adc
pop
and
pop
mov
cltd
jmp
fstpt
fidivrs
daa
xchg
daa
lret
pop
inc
sbb
cmp
negb
jne
xchg
jecxz
push
xor
adc
xor
push
mov
fstps
pop
rorl
ja
xor
js
imul
sbb
xchg
in
imul
mov
jae
adc
jns
pop
addr16
aaa
xor
loopne
movl
mov
pop
lods
cmpsb
xchg
mov
scas
mov
mov
lcall
iret
lock
inc
daa
mov
cld
cmpsl
dec
ret
push
xlat
outsb
sahf
sti
int
lcall
mov
cmp
inc
ljmp
mov
adc
mov
xor
in
cmp
sub
pop
insl
mov
cs
mov
sbb
sbb
lods
arpl
mov
jo
insl
cmp
adc
jno
dec
adc
test
imul
adc
push
pop
test
mov
dec
rorb
ja
mov
or
push
pusha
test
pop
es
cmp
mov
xchg
scas
hlt
mov
mov
rclb
cmp
in
add
dec
jno
test
sahf
and
imul
in
into
out
test
dec
xchg
in
rcrl
sbb
sub
jnp
inc
scas
sbb
aaa
addr16
lea
sbb
out
js
sbb
ja
je
mov
jne
pop
stos
repnz
and
test
nop
ja
cmp
fistpll
jecxz
sti
xchg
sbb
in
cwtl
sbb
jns
lret
push
jge
fisubrs
popa
imul
int
or
dec
inc
enter
aad
pusha
jb
stc
push
jb
lds
fnstenv
movsl
sahf
jnp
adc
cmpsl
aam
mov
xor
subb
aas
stc
and
push
jp
scas
stc
scas
outsl
ret
fsubrs
jno
jne
out
mov
pop
mov
xchg
xor
pop
pop
jg
inc
cld
cs
pop
inc
sub
push
push
stc
cmovns
pop
sti
mov
not
mov
ret
subb
xchg
dec
fwait
inc
adc
cld
and
pop
dec
data16
sbb
inc
fmuls
inc
ljmp
sbb
mov
push
mov
mov
popl
lret
outsb
int
aas
movsl
repnz
mov
push
cmp
jle
push
ret
out
and
repnz
pop
out
fisttpl
int3
xchg
aas
mov
jg
inc
test
loop
lds
mov
push
aam
shll
pop
cmp
out
out
mov
xor
jge
popf
and
adc
je
fildl
popa
shll
mov
push
imull
dec
cltd
leave
test
das
jo
int3
inc
sbb
inc
xor
ror
jmp
push
das
dec
das
pop
adc
std
ljmp
pusha
jge
xchg
stos
sub
jge
xor
aaa
inc
xchg
xchg
or
xor
cmp
mov
test
fists
mov
loop
in
aam
xchg
lcall
mov
test
dec
in
push
inc
push
jbe
fbld
xchg
sbb
inc
push
dec
fcmovbe
inc
sub
loop
shlb
popa
mov
movsl
dec
mov
or
and
dec
mov
cli
adc
add
mov
test
add
fmuls
lock
and
test
loope
xchg
and
stos
cmp
cmp
add
xlat
cmp
add
mov
in
xchg
or
inc
nop
dec
hlt
xlat
cmp
mov
stos
and
lods
aaa
xchg
ret
mov
jecxz
mov
xchg
xorl
in
push
pop
jge
jno
dec
sbb
and
xor
lcall
mov
test
pop
outsb
pop
mov
xchg
push
cmpl
aas
cmp
fiaddl
mov
scas
aad
xchg
rcr
popa
push
clc
push
fisubrl
sub
clc
fdivr
pop
pmulhuw
sbbl
sti
mov
out
gs
imul
fadd
stos
mov
sub
inc
or
test
jl
jbe
xor
test
xor
cmp
ss
or
leave
call
inc
stos
scas
clc
sub
fidivrl
test
pushf
pop
call
xor
icebp
jecxz
cmp
jle
xchg
test
shll
and
adc
fwait
lock
in
add
pop
mov
stos
inc
mov
xor
sbb
mov
pushf
loopne
inc
outsl
xor
lods
cmp
addl
stos
jl
xlat
and
xchg
add
xor
int3
subl
dec
sahf
cs
enter
gs
pop
sti
xchg
bound
push
add
cli
mov
gs
inc
xor
xchg
sbbl
cmp
pusha
sub
data16
push
pop
pop
das
pop
popf
add
iret
mov
fwait
shll
dec
and
mov
add
flds
sub
loop
push
pop
mov
xchg
and
xchg
xchg
or
daa
pop
scas
mov
fnsave
testl
push
pop
pushf
sub
ds
push
push
xor
mov
mov
rcl
pop
in
and
inc
aad
xchg
or
repz
std
sahf
out
std
xchg
clc
and
bound
sub
inc
sti
jecxz
shlb
pop
int3
lret
inc
xor
jecxz
clc
xchg
arpl
cwtl
iret
dec
mov
scas
jo
cltd
jg
xchg
jnp
adc
jne
aaa
adc
imul
popa
cmp
sub
mov
fcomps
inc
inc
add
inc
es
mov
mov
outsb
dec
mov
sbb
adc
aas
push
mov
rcrl
lods
stos
into
mov
add
lods
jge
mov
mov
movsb
adc
icebp
pusha
adc
jge
das
vunpckhpd
xchg
or
vpaddsw
inc
mov
and
pushl
imul
pop
mov
jge
jb
inc
lods
rolb
pop
pop
add
mov
push
rcrl
add
inc
cmpsb
enter
stos
pop
mov
sbb
sub
sub
push
ljmp
ret
loop
and
imul
or
mov
mov
aas
je
pop
popa
mov
xor
sub
aam
inc
cmc
lods
shlb
and
mov
sbb
push
ljmp
mov
mov
pop
shll
ljmp
adc
popa
dec
ljmp
mov
lock
out
lcall
add
pop
sub
adc
push
icebp
jae
scas
mov
test
cmpsl
and
popf
sti
and
imul
mov
xor
jmp
push
pop
outsb
or
repnz
lcall
cmp
push
mov
sub
fimull
add
push
jne
jmp
lods
sarl
cld
pop
pop
push
adc
cmc
loope
loop
mov
jecxz
scas
xchg
jmp
mov
movsb
mov
out
push
push
mov
sti
cmpl
cld
ja
sub
and
push
rcll
aas
cld
add
mov
scas
in
iret
addl
out
aam
mov
mov
imul
negb
xor
pop
push
cmp
pop
addr16
loop
loope
imul
xor
rcl
inc
imul
sbb
popf
mov
add
xchg
push
cs
dec
jle
lods
pusha
out
loop
bound
jnp
pop
insb
pop
out
repz
aaa
adc
inc
dec
cmpsb
fcomip
push
movb
jl
mov
test
das
fidivl
addr16
jp
push
fdivp
push
es
mov
es
negl
jge
lret
push
imul
fwait
dec
int3
shr
movsb
sbb
mov
rcrb
aaa
xchg
lock
jb
cs
mov
call
and
aad
outsl
dec
or
movsl
cmp
shr
cmp
sahf
dec
xchg
es
sbb
adc
jl
xchg
jae
cmp
adc
imul
int3
adc
int3
ret
ret
adc
mov
dec
xchg
std
cmp
inc
retw
jns
gs
pop
cmc
xchg
cmp
mov
fdivp
sar
adc
push
out
mov
jns
imul
and
jmp
sbb
insl
and
cld
ja
mov
cmp
cmp
jnp
mov
mov
cmc
cmc
cmp
rcll
or
fmuls
adc
cmp
addl
push
vunpcklps
cli
scas
add
nop
scas
mov
jmp
out
cld
mov
jmp
cmpsl
shll
insb
into
cld
gs
out
out
xchg
test
testl
add
imul
pushf
mov
xchg
imul
out
cmpb
imul
push
xchg
cmpsl
xor
in
fists
cmp
sbb
push
bound
mov
mov
loope
cs
rorl
sbb
es
fstpl
repnz
xchg
pop
lea
jge
xchg
jecxz
aam
outsb
fdivl
hlt
in
xchg
push
mov
hlt
insl
imulb
in
lret
xlat
xchg
mov
sub
adc
mov
shrb
mov
sbb
pop
int
push
and
frstor
sbb
or
inc
mov
negl
cvtps2pi
popa
push
aas
jmp
test
cmp
cmc
out
cli
inc
cmc
js
dec
call
sahf
movsb
push
lods
aam
mov
repnz
inc
jne
iret
sbb
int3
pop
push
xchg
xor
lret
shrl
out
cltd
xchg
sbbl
and
push
pop
test
iret
or
in
outsb
in
inc
pop
xchg
jl
imul
sub
je
adc
cmp
repnz
fs
sbb
mov
cwtl
mov
ja
in
inc
pop
sub
mov
mov
jecxz
pop
mov
inc
add
jmp
pop
imul
orb
pop
sahf
cs
shlb
mov
orb
rcrb
ja
sbb
movsb
mov
sbb
enter
add
sub
cmp
pop
sbb
push
mov
inc
iret
scas
ljmp
cld
jecxz
addb
outsb
push
lret
xor
dec
mov
adc
mov
iret
inc
movsl
mov
xlat
mov
jge
lea
imulb
or
xchg
jne
stc
mov
ret
ret
dec
lret
in
inc
add
cwtl
cwtl
mov
addr16
mov
dec
rolb
loopne
out
add
popa
mov
push
lock
cwtl
pop
push
mov
enter
jmp
les
adc
lret
pop
movsl
cs
adc
in
hlt
data16
lret
outsl
jecxz
fucom
sbb
cmc
and
jbe
push
mov
sub
bound
inc
jg
lock
xchg
outsb
in
dec
mov
fidivrs
pop
lret
or
xor
push
xchg
mov
mov
inc
hlt
leave
ja
jnp
stc
add
push
pop
push
fwait
xor
out
call
xchg
dec
push
dec
aaa
mov
test
sbb
bound
push
mov
loope
jne
and
pop
xlat
push
test
iret
sbb
jmp
outsl
or
les
mov
add
pop
seto
sub
adc
dec
add
scas
cmc
aaa
test
cmp
jae
loop
sub
adc
in
or
mov
cmc
or
and
dec
nop
ja
stos
mov
xchg
inc
xor
bound
aas
mov
in
mov
push
out
mov
cli
ss
and
or
mulb
mov
das
mov
xor
xchg
popa
xorb
mov
cmpsb
xchg
ja
in
cld
aas
imul
cmpsb
add
loopne
xchg
fs
jge
and
jle
push
int
cmp
iret
jne
inc
cmp
loopne
lds
repz
out
cmp
xchg
icebp
jo
mov
fldenv
das
loopne
sahf
fwait
lods
outsl
xchg
in
ljmp
jb
sahf
adc
flds
mov
jl
test
xor
mov
cmp
adc
xchg
aam
ja
cmp
scas
repnz
adc
movsl
ja
sbb
test
xchg
cmc
mov
ret
push
subb
mov
inc
xchg
jns
or
cmp
pusha
mov
es
movsl
cmpsb
sbb
mov
lds
fiaddl
dec
out
sub
xor
shlb
adc
addr16
fiadds
movl
enter
jle
pop
std
add
addr16
pop
test
adc
addr16
adc
cltd
fsubr
into
test
jno
les
sbb
adc
push
mov
mov
push
cld
xchg
jns
int
mov
cmp
call
jb
inc
shrb
dec
ret
dec
or
pop
push
push
jne
pop
mov
testb
dec
ficoml
ret
or
add
inc
clc
inc
or
inc
cmp
pushf
sbb
dec
mov
mov
inc
addr16
or
pusha
mov
fadd
popf
les
mov
fmuls
push
push
push
hlt
jle
repz
pushf
js
sbb
and
sbb
insl
mov
mov
shl
sub
sahf
push
cmp
inc
xchg
pop
mov
js
test
aam
add
mov
inc
dec
push
mov
xor
mov
and
xor
adc
pop
mov
test
and
dec
hlt
popa
pop
adcl
fisttps
xor
xchg
sbb
in
movsl
mov
push
and
sub
xor
mov
js
stos
sub
push
xor
out
lret
or
shr
pop
mov
jl
push
je
sub
mov
dec
push
imulb
pop
aad
xchg
pop
mov
cld
add
add
popl
xchg
or
and
mov
test
cli
or
es
mov
fildll
xor
pop
in
js
xchg
lods
push
dec
imul
fisttps
xchg
cmp
in
push
sbb
xlat
mov
gs
lods
gs
in
fmul
imul
and
jle
mov
scas
subb
inc
js
loopne
push
fldt
jnp
jmp
mov
pop
in
mov
hlt
jne
ret
sub
mov
lret
push
gs
in
in
xlat
mov
push
xchg
pop
lock
mov
out
aam
xor
leave
roll
cmp
scas
dec
test
jl
mov
in
pop
pop
cmc
cmp
subb
mov
cmp
outsb
mov
xchg
les
notl
push
inc
ficoml
and
mov
pushf
outsb
xor
xchg
sub
cli
arpl
fnstsw
cmpl
ja
cmp
ljmp
int
mov
loop
mov
dec
lds
data16
std
cwtl
sbb
dec
jo
mov
jns
sbb
lret
and
outsb
push
mov
add
in
daa
int3
test
adc
lret
or
sbb
bound
jmp
pop
push
test
inc
and
jb
lods
jecxz
xor
jb
test
jbe
dec
nop
mov
stos
enter
cmp
jbe
orb
fcomps
sub
dec
pusha
jmp
mov
cmpsl
rcrb
or
cltd
in
orb
sbb
lret
cmpsl
call
xchg
dec
and
leave
adc
sbb
inc
xor
jecxz
cmp
lods
adc
imul
aad
add
pop
mov
add
sbb
mov
xchg
lods
insl
imul
js
repnz
sbb
jnp
int3
add
dec
lahf
mov
repz
out
inc
popf
mov
popf
jge
or
pop
xchg
dec
jo
gs
out
add
xor
and
pop
sbb
sub
imulb
divb
ret
cmpsb
aad
xchg
mov
shrb
or
add
mov
cwtl
mov
inc
mov
mov
bound
rol
lock
bound
icebp
insl
jbe
faddp
into
test
add
jae
fwait
into
mov
ss
mov
push
or
rolb
daa
adc
pop
mov
jmp
mov
cmc
loopne
pop
and
out
setnp
cmp
add
movsb
test
in
xchg
xchg
add
dec
cs
dec
repz
test
shl
xlat
pushf
fistpl
imul
dec
mov
inc
stc
mov
and
ds
out
push
loope
out
mov
aas
stos
adc
push
fcmovne
popf
pusha
idivl
ljmp
push
repz
cmp
adc
test
ret
inc
sbb
pop
lret
pusha
loop
and
jmp
mov
and
add
fdivrl
lret
xlat
xor
lahf
inc
int
out
inc
sub
ja
enter
xor
sbb
inc
stos
movsl
jecxz
mov
repnz
in
and
dec
aas
insl
scas
sbbb
loop
lods
insb
out
ljmp
std
sarb
push
les
fiadds
sbb
rorl
jae
rcrb
cmp
into
decb
popa
int
cmc
and
xchg
inc
loop
ss
add
sub
jecxz
leave
jnp
and
in
int3
jns
cli
sub
cmpsb
in
js
adc
mov
mov
popa
adc
roll
subb
push
add
xchg
sub
cmp
mov
push
inc
sub
xor
mov
je
jo
or
daa
std
mov
sub
outsb
scas
cmp
xor
sbb
jnp
sbb
fisttpl
popf
sbb
cmp
movsl
jge
mov
sbb
negl
lds
sbb
mov
pop
lret
in
sbb
dec
and
xchg
wbinvd
loope
sub
mov
loope
stos
and
lock
arpl
pop
stos
adc
mov
sahf
fsubs
adc
or
mov
mov
stos
jg
mov
cmpsl
ret
cmp
loope
outsl
inc
shlb
imul
inc
push
dec
fwait
jae
mov
pop
int
repz
or
rclb
neg
in
stos
xor
call
sub
mov
stos
dec
out
xchg
jg
jle
arpl
aam
jmp
push
add
repz
sbb
cmpsl
scas
repz
push
xor
mov
outsl
into
xor
inc
cmp
sbb
outsl
jp
shrl
dec
out
mov
xchg
or
xchg
push
cmc
ss
lahf
inc
test
data16
stos
or
pop
sahf
shll
fdivrs
add
mov
movsb
or
jne
lock
fsubs
dec
cmp
xchg
out
xor
adc
lods
or
mov
imul
cli
jo
lahf
xchg
dec
mov
out
stc
push
mov
testl
pop
ja
subl
and
popa
xor
js
out
and
pushf
inc
push
mov
add
in
cs
jp
test
jbe
mov
nop
es
imulb
xchg
inc
jecxz
and
pop
sbb
xchg
mov
adc
inc
mulb
enter
insl
aad
fs
xorb
sub
xchg
aas
xor
call
scas
sarb
icebp
repz
xchg
or
adc
mov
xchg
insb
xor
and
cmp
ds
pop
in
lds
mov
icebp
imul
lods
dec
push
insl
xchg
add
pusha
mov
sbb
push
scas
pop
jns
loope
mov
int3
fxch
push
jmp
les
bound
test
fwait
hlt
daa
sub
lock
testl
mov
leave
sub
and
mov
loop
out
add
jb
ds
outsb
out
jp
inc
jge
popa
push
xchg
xchg
shl
adc
push
cmpsb
inc
aaa
add
lcall
sbb
mov
sbb
jae
test
and
loop
mov
inc
inc
sti
and
decb
cld
out
push
jno
inc
lock
inc
xor
aam
sbb
addl
mov
lock
xlat
inc
ret
or
daa
adc
out
repnz
push
mov
pushl
sub
fldenv
adc
aam
pop
outsl
sub
pop
adc
xor
verw
xor
jp
iret
cmp
push
adcb
aam
jp
sbb
pop
mov
mov
lcall
int3
lret
cwtl
adc
shrl
lret
out
data16
sub
mov
ret
lret
test
fcomps
mov
cmp
lods
push
sub
and
xchg
fs
adc
andb
sti
jno
adc
mov
ret
mov
cmp
je
leave
push
adc
xor
push
mov
hlt
repz
aaa
repz
mov
add
add
pop
insl
test
enter
cmpsb
popf
pushf
lods
sbb
mov
mov
scas
loopne
sar
dec
repnz
test
outsb
addl
and
lcall
sub
xor
push
fs
daa
xchg
jne
push
inc
addr16
into
rorb
aas
mov
sub
lretw
dec
scas
cmp
int3
int
add
adc
or
fmull
cwtl
jecxz
pop
fildl
fs
xchg
sub
adc
or
and
aas
test
dec
push
jl
pop
pop
sub
push
pop
inc
inc
xchg
mov
ja
xor
cltd
xor
shrl
jno
push
ss
or
cmp
loopne
inc
in
push
mov
push
loope
and
dec
movsl
dec
xchg
stos
jp
divl
shll
jg
movl
gs
adc
mull
in
dec
fnsave
and
dec
push
adc
push
incl
or
sub
mov
xchg
scas
lods
dec
push
xor
push
xor
lret
push
sbb
nop
xchg
roll
mov
push
cmc
fcmovnbe
cwtl
inc
sub
out
shll
cmp
adc
in
add
sub
adc
xlat
xchg
or
and
outsb
mov
aaa
divl
aaa
jecxz
in
inc
cs
mov
or
ret
mov
cli
and
adc
xchg
test
dec
outsl
add
jb
push
ds
mov
jle
ficompl
or
movsl
or
aas
xchg
jae
lods
iret
rclb
rcrb
insl
movsb
mov
test
mov
push
and
xchg
xchg
scas
pushl
out
sub
jmp
shlb
dec
push
xchg
adc
divb
fwait
dec
cmp
push
stos
cmp
push
jle
lods
scas
mov
adc
lock
jae
mov
xor
mov
pop
sub
xchg
divb
jp
repnz
lret
ja
sub
xchg
fistps
adc
negb
jmp
lea
sub
sbb
lods
mov
adc
mov
and
xlat
bound
or
push
inc
cld
fdivl
lret
mov
or
sbb
das
ja
xor
mov
xchg
incb
popa
rcrb
xor
sbb
stc
mov
cmp
sub
addr16
scas
icebp
stc
leave
mov
jno
mov
setno
jle
sbb
aaa
setge
push
outsl
ss
mov
sahf
add
push
add
xor
push
and
in
fidivl
dec
ror
in
xchg
in
das
add
pop
pop
jg
in
cmc
xlat
addr16
andl
leave
pop
adc
sub
xchg
push
cli
xchg
or
sub
loop
fwait
and
dec
xchg
push
jp
lods
xlat
iret
jb
clc
adc
sbb
test
mov
jle
xchg
lods
or
push
jecxz
cmp
xchg
adc
sub
clc
sti
adc
push
je
cmp
sbb
jno
fnstenv
jnp
lahf
push
fistpll
xorl
and
scas
mov
fcomps
pop
dec
xchg
inc
sbb
js
push
lock
cmpsl
adc
sarl
jle
lea
jg
inc
sbb
mov
pop
and
cs
lcall
mov
push
outsb
repnz
mov
js
dec
repz
cmc
inc
dec
inc
fs
inc
add
ret
push
popa
mov
mov
lcall
mov
ret
mov
xor
jmp
rclb
cwtl
vpackuswb
aam
dec
mov
scas
stos
mov
ljmp
das
in
sti
and
or
or
out
subl
add
mov
test
psubusb
js
push
movsb
jmp
andb
es
inc
mov
and
imul
dec
insb
jne
jne
inc
push
jle
cmpsb
mov
je
aad
fsubp
imul
std
ror
rcrl
fucom
adc
add
imul
arpl
mov
xchg
jl
stc
xor
rclb
jecxz
sub
rcr
mov
lret
scas
mov
sbb
lea
sub
cmp
or
mov
adc
pop
add
test
adc
sub
iret
int
or
adc
jg
popa
xchg
push
movsl
mov
sti
or
inc
test
inc
or
pusha
cmp
icebp
mov
adc
les
mov
push
mov
push
out
xor
outsb
and
add
jg
mov
inc
dec
rcr
sub
js
nop
inc
fwait
test
and
dec
fwait
mov
scas
adc
and
mov
inc
test
ret
pop
loop
sbb
sbb
xor
dec
shll
xor
int3
loopne
inc
sub
es
jae
ret
sbb
xchg
iret
mull
cmp
mov
pop
xor
add
out
sub
add
insl
push
rolb
insl
rolb
pop
aad
fimuls
sbb
cltd
and
loop
hlt
xchg
loope
fistps
fucomip
leave
jbe
iret
mov
or
dec
sub
xchg
mov
fucom
imul
repz
sub
loopne
movsl
in
dec
leave
xor
jno
add
cmp
sarl
mov
outsb
pop
jb
icebp
cmp
mov
jle
or
outsl
or
data16
add
xor
testb
jno
pop
lods
dec
dec
add
xor
in
lods
test
jle
gs
cmc
sbb
pop
cli
inc
push
and
add
test
lahf
dec
and
cmp
mov
adc
fucomi
ljmp
in
or
sub
push
rcl
mov
and
mov
adc
fdiv
jmp
out
ror
sbb
ljmp
subb
mov
cmp
cmp
in
xchg
mov
lods
push
icebp
std
and
in
mov
repnz
cmp
pop
loop
pushf
lahf
xor
and
or
nop
sahf
pop
xchg
xchg
push
dec
mov
mov
clc
pop
adc
mov
jae
push
dec
es
cmc
sub
jmp
cmpb
mov
xchg
loopne
in
xchg
mov
mov
mov
loop
ret
jg
leave
dec
and
call
sbb
push
sbb
int
lcall
push
inc
inc
cmp
ret
popa
in
std
mov
jno
sbb
data16
pop
out
jno
sahf
stos
xchg
mov
jne
jns
daa
repz
mov
pop
sarl
cs
sbb
adc
jne
ss
addr16
lret
loop
cmpsb
rorl
rcrl
jecxz
add
adc
mov
adc
cmpsl
cmp
mov
adc
jge
xor
sbb
inc
in
rcl
repz
out
xor
sbb
jno
push
mov
fildl
jmp
xlat
insl
mov
mov
mov
push
outsb
jne
ficomps
loop
inc
stos
mov
in
lods
jp
xor
sbb
xchg
std
pop
sub
loop
xor
scas
mov
and
es
std
inc
mov
inc
or
xor
les
shl
outsb
mov
repz
push
dec
dec
adc
in
enter
mov
aas
add
adc
es
mov
call
dec
sarl
aad
xchg
mov
gs
fs
pop
inc
inc
mov
add
dec
cmp
xor
pop
mov
jge
dec
pop
mov
loope
out
lods
cmp
and
add
mov
dec
faddp
mov
fwait
adc
into
sub
test
lret
das
and
dec
sti
dec
popa
lock
pop
pop
jae
hlt
or
xchg
ret
mov
lods
sti
into
popa
xor
hlt
fwait
sbbl
sub
iret
ss
into
arpl
fwait
clc
cmp
push
icebp
add
das
mov
bound
pop
in
mov
sbbl
sbb
jae
jmp
jmp
mov
sub
push
insb
notl
or
lods
popa
lock
mov
adc
iret
push
popf
rcrl
movsl
pop
push
dec
jmp
insb
sti
push
out
xor
cmpsl
mov
es
arpl
jne
jecxz
mov
pop
cs
adc
pop
pop
iret
aam
icebp
dec
add
movsl
sbb
sbb
dec
adc
mov
clc
jns
mov
jmp
adc
dec
mov
xor
neg
cmpsb
xchg
xchg
sub
adc
adc
shrl
subl
test
pop
xorl
push
aam
out
mov
add
sbb
cli
into
push
jge
outsb
add
fdivs
ja
lret
test
test
pusha
cmp
sbb
inc
cltd
test
test
lds
in
mov
mulb
xchg
inc
ss
add
cwtl
sbb
sbb
adc
cwtl
adc
or
ss
mov
popf
loop
mov
repnz
inc
les
int3
pop
jb
ret
pop
ja
stos
xor
loopne
jnp
sub
jbe
dec
leave
es
cmp
xchg
addb
clc
cmp
cwtl
jmp
pusha
sub
sbb
and
adc
pop
pop
jmp
mov
std
fidivs
stos
repz
in
inc
pop
adc
cld
lds
pop
lahf
jg
mov
cmpsl
xor
fildll
mov
cmc
xchg
out
push
jp
push
fs
push
push
lods
sti
mov
pop
popf
pop
popa
fidivl
les
mov
pop
fistpl
dec
jle
add
mov
nop
xchg
xor
shll
stc
fildl
shrb
and
int
out
js
adc
test
loop
jg
add
addr16
repnz
pop
int
cmp
dec
mov
es
ss
test
nop
sti
adc
shlb
mov
sub
shr
mov
adcb
mov
outsl
sbb
aad
jbe
jecxz
rcrb
xchg
and
adc
sbb
and
sahf
cmpl
test
pop
fistl
add
cmp
imull
xlat
mov
sub
mov
shr
cltd
test
lcall
imull
push
movsb
fcmovb
stos
jmp
cmc
jnp
or
xor
adc
adc
or
movsl
push
mov
popf
xor
xchg
outsb
aas
sub
push
pop
mov
mov
xchg
fmuls
cmp
movsl
xor
mov
mov
jbe
dec
add
push
dec
jp
fidivrl
nop
mov
sbb
cmp
dec
rcl
or
xchg
or
ret
mov
push
mov
cmp
test
mov
xchg
xchg
xlat
icebp
xorl
nop
or
ficoms
dec
jb
mov
in
or
ja
out
mov
xchg
mov
addr16
jb
ret
jecxz
jge
sbb
jnp
cmc
or
icebp
sub
insl
in
mov
cmc
jl
aam
push
cltd
jns
in
popa
outsl
fisubrs
lds
jnp
xchg
sub
dec
leave
aas
xchg
scas
pushf
mov
addl
mov
popa
push
fwait
icebp
inc
aam
aam
popf
dec
sub
fisttpll
mov
adc
cmpsl
lahf
xor
fmull
fs
sahf
jmp
pop
jle
jno
dec
adc
inc
cmp
sbbl
cmc
stc
xchg
xchg
sub
adc
push
je
outsl
mov
xor
sub
pusha
out
mov
sbb
push
shlb
test
dec
sbb
ret
push
jmp
rcrl
dec
or
int
dec
lret
pop
inc
sbb
lcall
jge
xor
in
jae
test
jae
cmc
clc
jge
mov
js
mov
loopne
xor
xor
enter
adc
pop
repz
outsb
out
js,pt
jl
stos
ja
xchg
sti
fmull
mov
xchg
add
into
insl
in
sub
inc
push
sub
in
ret
mov
std
sahf
mov
in
arpl
in
mov
mov
popf
aad
mov
cmp
inc
xchg
jae
sub
call
fimuls
sub
cltd
gs
addl
sbb
push
sbb
mov
fmull
ja
arpl
xor
test
in
push
pop
addr16
and
lcall
lods
dec
loop
xlat
lods
pop
lret
mov
je
clc
loope
push
inc
bound
xor
fimull
jmp
mov
bsf
xchg
pop
jp
mov
movsb
mov
inc
test
mov
and
or
aam
pushf
aad
fidivrl
andl
jl
adc
outsb
push
inc
xlat
push
mov
cwtl
cli
xchg
sbb
and
in
mov
addb
inc
dec
insl
cmp
jle
jno
in
fadds
addb
xor
sub
clc
inc
negl
rol
mov
decb
pop
lods
scas
sub
lods
adc
sub
sub
jne
mov
outsl
fidivrs
sub
cli
popf
fldenv
movb
arpl
jmp
jle
insl
xchg
mov
outsb
pop
lret
pop
test
lret
sbb
xor
arpl
outsl
push
push
add
push
std
xor
inc
fsubrp
popf
xchg
addb
xchg
cmp
push
outsl
das
add
push
sbb
test
xor
testl
aas
xchg
fisubl
lods
mov
sbb
mov
mov
fstps
jge
cmpsl
outsl
dec
xor
jmp
pushf
in
stos
lds
iret
fdivrs
xor
jb
fs
insl
xor
dec
xchg
stos
js
mov
and
pop
mov
ljmp
fs
jl
gs
jo
call
pushf
in
sbb
into
gs
mov
in
jbe
push
xchg
push
jge
sbb
lcall
scas
sub
fdivrs
pusha
xchg
imull
mov
inc
xor
and
bound
mov
or
mov
icebp
into
mov
adc
ja
fsubrp
pop
cmp
hlt
lods
jns
push
stos
lcall
stc
test
shlb
mov
mov
ja
xchg
adc
repz
sarl
push
xor
xor
rorb
fcomps
jp
sbb
dec
adc
es
lea
mov
test
push
lds
mov
fmuls
test
mov
sub
repnz
xchg
or
or
adc
mov
in
divb
imul
push
nop
add
subb
sbb
mov
jmp
cltd
sbb
outsb
insb
sbb
enter
data16
icebp
xchg
jge
cltd
aas
aad
sub
insl
and
xorb
dec
aaa
jge
push
push
stos
pop
pop
push
mov
outsb
addr16
adc
fstps
gs
lods
into
stc
push
shlb
stos
hlt
mov
mov
ja
mov
pop
js
test
jns
popa
mov
xchg
cs
and
pop
pop
negb
xor
ret
call
es
lret
hlt
jge
js
xor
pop
jle
push
or
jns
mov
xchg
cmp
sub
subb
shrb
and
sbb
shr
xchg
cmp
xor
or
rcr
or
in
xchg
pop
ficompl
mov
xor
pop
push
cmp
loopne
test
out
push
call
jnp
dec
stos
inc
roll
cli
fwait
adc
subl
push
mov
dec
je
lahf
bound
adc
cmc
and
xchg
xchg
push
sub
int
pop
xor
cld
or
repz
or
mov
sbb
fiaddl
adc
cmp
dec
in
xlat
cld
cmp
iret
pop
xor
push
lock
test
andb
mov
sbb
jne
gs
fidivrl
push
push
push
pop
out
das
cmp
mov
push
add
test
vmread
adc
repz
mov
sbb
repnz
ret
push
push
lock
aas
aad
rcl
mov
jle
push
in
mov
pop
out
cmp
and
fnsave
inc
mov
testb
jmp
jl
jns
mov
jbe
and
or
iret
jle
outsl
or
lea
imul
dec
pop
dec
in
cmp
loopne
data16
into
sbb
mov
inc
pop
aad
dec
out
std
ljmp
push
adc
loope
jno
lock
adc
test
insl
stos
test
cmp
add
testb
ja
xchg
pop
mov
cmp
scas
dec
in
testl
mov
aam
xorl
cltd
ret
inc
out
in
mov
aaa
pop
pusha
mov
jg
fdivrs
lds
jo
lret
stos
outsb
push
les
or
pop
xchg
xlat
inc
xchg
push
aaa
inc
dec
mov
imul
dec
add
mov
insb
in
jno
les
mov
in
jp
repz
insl
push
xchg
fwait
insb
sbbb
mov
in
dec
popf
add
sub
popa
bound
add
sbb
pop
daa
in
popf
popa
sub
xchg
stos
push
fwait
mov
sub
in
clc
lods
push
sbb
insl
lods
xchg
imul
sub
pop
dec
repz
xchg
cmc
pop
sub
sub
push
jl
add
loope
inc
lock
add
repnz
dec
jl
cmpl
dec
addr16
push
push
inc
push
pop
or
sub
xchg
adc
inc
pop
je
aad
addr16
push
das
cld
inc
mov
dec
cmpsb
fnop
sub
mov
sub
sti
repz
jecxz
or
sbb
scas
lock
cwtl
dec
daa
jg
int
cmpb
stos
xchg
bnd
adc
cmp
out
inc
sahf
cmp
adc
call
ja
fildll
clc
dec
inc
mov
mov
or
mov
call
mov
push
mov
inc
or
pop
jnp
shll
add
pop
add
movsl
imul
nop
pop
popf
sub
fisubrl
cmpsb
xor
pop
jmp
push
cmp
pop
aad
jnp
adc
lock
jmp
dec
xor
mov
cmp
inc
cmova
push
push
jmp
fmull
sahf
jbe
pusha
dec
inc
rorl
mov
adc
aad
pop
cmp
jo
lret
push
rcrb
lods
iret
fucom
out
daa
addr16
mov
or
push
out
sub
jae
add
movsl
daa
inc
jmp
iret
dec
mov
pop
mov
dec
outsb
mov
lret
xchg
mov
add
addr16
sub
xchg
mov
hlt
push
fmuls
sbb
xchg
out
push
int
call
sub
xchg
test
popa
mov
sbb
and
aas
dec
negb
jno
sbb
daa
popa
cmc
pop
push
push
aas
inc
mov
mov
adc
fldt
jns
cmp
inc
aad
mov
cmp
xchg
lds
sub
mov
aas
cmp
shll
mov
in
xchg
mov
add
popa
mov
and
jge
pop
fwait
sub
jae
sub
jge
jmp
into
dec
mov
inc
xchg
inc
scas
mov
push
mov
cld
sub
scas
and
ljmp
lea
push
sarl
cmp
pop
lds
sub
rcrl
out
leave
sarb
out
pop
dec
push
push
das
mov
xor
shl
pop
decl
insb
adc
jl
adc
outsl
es
inc
decb
loope
shl
xchg
sub
mov
icebp
push
sub
or
into
xchg
in
clc
jge
xor
fldln2
xor
jmp
repnz
nop
aam
sub
stc
pop
push
jne
add
fs
popa
into
push
mov
mov
sbb
mov
rolb
outsl
cwtl
inc
mov
imul
into
xchg
pop
ffree
fsts
or
cmc
sub
fdiv
xchg
jbe
push
dec
and
imul
mov
push
aad
fwait
mov
testl
loopne
hlt
sbb
push
enter
xchg
mov
sahf
lea
movsb
xor
mov
and
pusha
cmc
in
inc
ret
lahf
imul
in
ffree
out
test
inc
jno
push
cmp
xor
jl
lods
xor
or
sbb
insb
cmp
nop
daa
cmp
imul
push
out
push
scas
out
mov
jmp
stc
push
rcll
pop
dec
out
pop
xlat
mov
inc
cmpsb
adc
inc
jmp
sarl
fisttpll
decl
decl
rcrl
sub
xchg
stos
sub
sahf
repnz
cli
das
ljmp
jbe
pop
mov
fwait
int
aam
xchg
bound
pop
imul
mull
xor
mov
popf
inc
jg
in
shrl
mov
out
mov
mov
fldt
add
insl
fisubs
outsb
inc
fstl
fmull
xor
rorl
inc
mov
sub
imul
imul
je
roll
inc
mov
stc
or
call
loope
cwtl
pop
fwait
pop
push
inc
fsubrl
add
sbb
sub
cmp
in
divl
jl
mov
int
push
cwtl
mov
dec
jno
add
xchg
xlat
imul
fs
lret
pop
xchg
arpl
ret
dec
cmpsl
xchg
cli
test
pusha
stos
enter
and
dec
dec
push
xor
inc
lret
cmc
add
enter
push
pusha
lret
test
lods
movsb
pop
je
inc
mov
test
and
fbstp
inc
lock
inc
arpl
ror
cmp
outsb
xor
int
stc
ja
adc
clc
mov
add
mov
hlt
dec
fsts
add
and
and
sub
ja
fs
xor
add
lods
je
mov
cmp
pop
add
or
adc
js
lock
sub
addb
jp
or
in
push
fisttps
xchg
mov
sti
add
jnp
dec
call
js
jae
adc
sub
pop
xchg
sub
mov
enter
sbb
bound
addr16
enter
dec
sub
lock
sbb
call
inc
cmp
stc
fs
add
loopne
or
ret
lock
cwtl
loope
das
stos
icebp
gs
stos
out
loope
push
outsb
or
inc
or
stc
xor
xorl
out
push
in
mov
rorl
out
pop
push
xlat
sub
jb
dec
stc
xchg
adc
add
ss
testb
test
push
hlt
inc
in
jecxz
loop
and
into
fcmove
icebp
ljmpw
testl
pop
shlb
mov
int3
test
pop
subb
cmp
jecxz
xchg
lea
nop
xchg
jo
shrb
xchg
jge
fwait
adcb
pusha
out
inc
jne
jge
add
mov
pop
in
pusha
inc
lcall
fisttps
pop
jae
sub
sub
mov
or
push
sub
insl
dec
mov
fsubrp
movl
mov
dec
jno
pop
movsl
addb
inc
shrl
mov
add
pop
jg
ljmp
movsb
sbb
dec
stos
xor
lds
dec
push
mov
adc
punpckhbw
outsb
ss
mov
adc
call
jns
lahf
xchg
ret
in
mov
mov
mov
data16
lret
dec
lock
cwtl
subb
jmp
aad
push
repnz
xchg
sub
repnz
jb
jmp
mov
enter
out
insb
popf
pop
push
push
xlat
jnp
xchg
outsb
sbb
push
adc
mov
pop
nop
inc
test
in
add
mov
xor
and
hlt
mov
jnp
mov
fcoms
aas
inc
push
xor
jp
vpmulhw
or
rorl
jmp
push
push
fisubs
lret
out
mov
or
jno
fpatan
push
pop
out
mov
cmp
lret
pop
fwait
push
push
sub
pushf
add
mov
add
sub
dec
popa
mov
imul
mov
jbe
pop
sub
mov
imul
xchg
repnz
in
sbb
adc
loopne
insb
lahf
and
adcl
and
imul
push
mov
xchg
dec
or
test
aaa
nop
xor
fs
in
lock
jle
lret
mov
dec
fwait
bound
cs
or
leave
push
mov
adc
clc
inc
and
pop
sti
push
adc
fldt
mov
xchg
das
dec
push
dec
lahf
xor
push
push
dec
pop
ss
outsl
jmp
pop
xchg
adc
adc
or
pusha
js
jns
xor
adc
jmp
les
mov
push
sbb
pop
add
aaa
mov
sub
lret
mov
dec
das
jp
mov
and
sub
lea
rcrb
shrl
and
jecxz
nop
rcrl
cmp
fimull
test
push
aas
push
pop
sti
xor
in
repnz
cs
inc
repnz
mov
jg
mov
inc
jo
in
hlt
push
add
movsb
outsl
mov
das
das
push
cmpl
mov
jp
repz
cmp
cmc
dec
loopne
pusha
fst
bound
dec
mov
mov
frstor
fmuls
in
pop
scas
cmp
call
dec
jmp
arpl
mov
gs
lds
imul
movsb
xchg
cwtl
sbb
add
js
xchg
xor
jb
push
xor
icebp
or
xor
add
inc
out
aad
std
xor
divl
mov
pop
inc
mov
repnz
jne
pop
icebp
pop
push
lds
xchg
sub
push
enter
je
fs
enter
nop
mov
or
icebp
push
lahf
js
sub
xchg
adc
xchg
push
clc
cmp
sbb
les
jl
test
cmp
insb
mov
inc
pop
push
outsb
pop
xor
ja
or
push
jns
pop
cmpsl
stos
and
pop
push
xchg
nop
cld
inc
inc
push
inc
scas
cli
sarb
pop
inc
inc
fsubrl
push
lcall
mov
inc
xchg
les
and
lods
test
adc
scas
cmp
push
push
fidivs
enter
sbb
push
outsb
xchg
cltd
push
mov
fadd
sbb
fwait
mov
push
out
cs
movsl
in
xchg
push
add
sbb
pop
negl
xor
cmp
jge
in
cmpb
sbb
sub
je
insl
sub
js
jns
test
sbb
pushf
jns
mov
mov
dec
jbe
es
push
cltd
daa
pop
leave
les
dec
jmp
mov
pop
mov
lret
pop
hlt
mov
xor
insl
call
sub
div
jb
cmp
scas
loopne
push
icebp
ret
push
mov
test
and
mov
loop
dec
push
cltd
mov
adc
repnz
push
jecxz
test
push
cmpsl
lahf
push
cmpsb
or
dec
mov
dec
in
pop
imul
je
sbb
leave
or
xchg
xchg
jno
int
lahf
push
mov
xor
add
xchg
add
clc
les
loopne
dec
pop
push
mov
push
lock
leave
test
pop
and
cmc
cmp
ror
dec
cmpsl
or
mov
or
fistpl
push
xor
and
and
push
mov
mov
push
push
adc
outsl
xor
pop
movsl
mov
sbb
int
fs
mov
and
movsb
rorb
imul
adc
mov
adc
push
loopne
inc
xchg
pop
and
push
repnz
pop
fsts
ds
jo
outsb
pusha
vorps
xor
xlat
add
xchg
jae
inc
test
or
dec
pop
stos
inc
insb
xchg
movsb
jne
insb
dec
adc
cmp
cmp
popa
mov
repz
or
push
flds
leave
add
sub
fdivrs
add
adcb
fiadds
popf
loop
push
xchg
aam
cltd
lret
fsubrl
xchg
sarl
dec
mov
test
fdivrl
xor
fwait
fs
cs
fmul
xorb
xchg
mov
mov
je
mov
insb
ds
sbb
xorb
lock
push
xchg
popf
inc
aam
pop
clc
icebp
mov
es
sbb
and
int
cltd
ljmp
enter
nop
add
jg
xchg
sub
push
inc
jge
dec
inc
xchg
inc
mov
add
popa
push
xchg
pop
divl
mov
pop
mov
popf
or
add
xchg
gs
mov
mov
and
sub
lods
ss
sbbl
jmp
imul
sbb
or
xchg
jp
test
cmp
idivl
mov
movb
negl
or
scas
adc
mov
daa
jb
mov
aas
jno
add
movsl
add
inc
inc
das
fdivl
loopne
inc
out
movsb
adc
dec
add
test
mov
mov
sbb
cmpsl
into
mov
mov
cmpsl
es
sub
fidivrl
orl
xlat
outsb
push
loope
test
dec
into
pop
test
loopne
mov
add
adc
ss
pop
cwtl
jae
xor
movsb
loope
mulb
out
push
stc
js
movsl
stos
adc
loope
inc
or
dec
xor
adc
aad
add
jecxz
and
push
jmp
mov
das
push
cmp
mov
pop
xor
mov
or
fsubrl
cld
dec
cs
fbld
call
xchg
stc
fadds
in
pop
out
aas
dec
inc
leave
jns
es
mov
adc
dec
jle
rolb
sub
sub
jae
cmc
cmpsl
jle
outsb
xchg
add
out
or
fiaddl
lods
dec
mov
and
and
jbe
bound
leave
xor
ret
push
pop
adc
push
push
popa
and
sub
adc
inc
js
mov
pop
cmp
sub
pop
out
lods
adcl
mov
out
mov
fsub
fidivrs
aas
fisttpll
inc
sbb
xor
or
out
ret
jbe
or
es
xchg
xchg
jno
cmpb
or
ljmp
pop
pop
out
fsubrp
push
add
and
inc
es
mov
cltd
outsl
insl
cmpsb
dec
push
cmp
jae
xor
mov
push
sub
call
inc
mov
and
inc
and
icebp
ret
cs
out
jne
cmp
lock
icebp
inc
sbb
add
push
inc
xor
cld
mov
jns
nop
sbb
test
ret
stos
ljmp
xchg
pushf
out
and
ret
sbb
dec
push
mov
cmc
push
mov
pop
je
jecxz
jne
out
lcall
and
es
jne
dec
adc
push
sub
into
inc
call
adc
pop
dec
push
or
aaa
les
icebp
mov
lcall
imul
imul
pop
jns
les
dec
stos
ja
and
mov
sub
dec
test
subb
shrb
std
xchg
sub
sti
insl
std
adc
mov
adc
mov
fildl
sti
xchg
adc
popa
sbb
es
aam
or
sbb
and
mov
xchg
add
jno
adc
push
inc
sub
fcomp
scas
mov
lahf
sbb
or
int3
nop
out
xor
jae
mov
and
fsubs
mov
in
fsubrs
lods
nop
xor
mov
outsb
sub
mov
scas
mov
mov
pop
je
aam
adc
ja
jl
jb
and
outsb
add
or
jp
js
cltd
pop
es
outsl
lds
push
inc
sub
repz
mov
inc
xor
pop
fisubrs
sub
fst
scas
jecxz
pop
mov
pop
ljmp
push
and
push
rcrl
idivb
mov
js
xchg
cmp
xlat
pop
das
pop
xor
icebp
rcll
sarb
xor
pushf
pop
arpl
scas
jo
mov
cmpsb
or
outsl
mov
xor
test
flds
push
pushf
lcall
lret
pavgw
pushf
xor
das
sbb
fstpt
pushf
lret
std
sub
outsl
mov
jo
xlat
mov
popf
sbbl
jge
jne
jbe
mov
int3
adc
pop
and
dec
mov
inc
rorb
and
or
outsb
cmp
fistps
mov
jne
les
jge
rcr
mov
loopne
dec
out
xor
add
test
dec
cmc
xor
cmp
add
or
pop
mov
rorb
movsl
addb
push
imul
repnz
or
add
inc
popa
adc
mov
and
imul
addr16
cmp
sahf
xor
sub
js
adc
mov
cmp
push
stos
repz
mov
or
push
enter
imul
push
and
popf
dec
xor
adc
mov
dec
gs
test
ljmp
push
push
loop
ja
scas
inc
sbbl
std
loope
cltd
lea
into
cmp
cld
fwait
mov
adcb
push
xor
jl
push
add
and
xrelease
push
ds
xor
arpl
outsb
cmpsl
ss
jae
lods
xchg
ss
aas
sub
movsb
out
xor
fidivrs
jecxz
sbb
andl
jl
xchg
dec
xor
cltd
fsin
stc
adc
loope
int
repnz
int3
fs
shll
mov
mov
leave
xlat
cmpsl
jne
ret
in
xchg
mov
inc
inc
and
pop
jae
in
cmpsb
cmpsb
fimull
test
sti
scas
mov
js
repnz
or
cli
xchg
repnz
xchg
ljmp
mov
in
shlb
xor
les
rclb
adc
and
push
das
dec
push
in
or
mov
adc
push
push
mov
sahf
hlt
sub
ljmp
data16
arpl
mov
jecxz
xchg
int
lahf
repnz
pop
jmp
pop
sti
cli
mov
mov
in
jnp
cmp
test
push
cli
popa
xchg
sbbl
or
or
lods
jl
aad
pop
jbe
mov
fiadds
mov
mov
or
mov
pop
adc
fsubrl
xor
mov
ficoms
cmp
ja
inc
inc
mov
add
pop
test
int3
mov
xchg
mov
ljmp
dec
pop
xlat
lcall
scas
je
in
movsb
insb
arpl
in
and
repnz
leave
lock
lock
dec
mov
pop
mov
pop
stos
nop
push
cmp
gs
aaa
inc
stos
sbb
sub
dec
xor
ds
stos
pop
clc
mov
jge
mov
push
xor
mov
jb
test
adc
jmp
pop
inc
xchg
sbb
in
add
and
mov
xor
pusha
xor
adc
push
mov
inc
cmp
xlat
dec
lods
mov
mov
xor
jg
cmp
repz
rclb
int3
sbb
daa
push
xchg
repnz
xor
inc
fwait
push
adc
call
movsl
jge
dec
lods
aas
test
mov
jbe
push
fs
scas
inc
ror
lods
dec
lret
mov
mov
or
cmp
pop
fimull
aas
sbb
scas
xchg
lcall
sbb
sbb
or
outsl
in
xchg
imul
push
xchg
icebp
insb
outsb
outsl
daa
hlt
mov
jp
mov
inc
jns
imul
rolb
sbbl
dec
mov
cltd
fildl
mov
jno
fstps
jno
pop
or
sarl
je
dec
xchg
xchg
sbb
cld
fwait
pop
sti
inc
pop
cli
xor
mov
sbb
in
mov
rcr
leave
xor
xor
cmp
popf
int3
jg
push
push
mov
icebp
in
mov
inc
dec
cmp
xchg
and
jmp
mov
movsl
sbb
jo
cmpsl
mov
jecxz
cmp
and
in
sarb
int
fstp
push
popa
addl
adc
add
xchg
dec
test
sub
mov
insb
or
cmp
int3
push
mov
fimull
ss
fdivrl
enter
shrl
jbe
mov
dec
lea
and
leave
lcall
dec
sbb
iret
and
cltd
cli
cmp
lock
popa
mov
push
cmp
addl
mov
adc
mov
add
jno
sub
add
dec
in
sti
jns
cmp
cmc
xchg
and
outsl
cmpsb
push
fld1
flds
mulb
xchg
adc
outsb
mov
icebp
loopne
fisttpl
addr16
faddl
xor
or
inc
movsb
xor
sbb
stos
jl
js
mov
xor
push
outsl
shlb
cmovp
pop
movsb
or
dec
add
ljmp
push
xchg
and
aas
addl
je
jno
mov
dec
dec
in
std
roll
es
out
mov
adc
adc
pop
inc
mov
push
mov
outsb
rcrb
pop
test
lret
std
lret
xchg
clc
mov
or
pop
cmp
xor
sbb
addr16
push
mov
mov
jns
test
sbb
xchg
sqrtss
adc
dec
aad
add
xlat
pop
push
test
lret
mov
pop
inc
push
jmp
icebp
cli
sbb
pop
push
int
xchg
pop
movsb
add
loope
shll
outsl
or
cltd
clc
outsb
add
out
pop
or
mov
cmp
fstps
add
jae
fisubl
jl
push
sub
cwtl
jb
jae
mov
jo
xor
lods
test
push
into
mov
out
jns
mov
and
adc
pushf
les
fmuls
lahf
fisubl
popa
scas
scas
test
lret
hlt
cmpsl
enter
xchg
stos
push
jl
pop
and
mov
shl
cmpsl
and
mov
sbb
or
pop
xor
stc
push
mov
fadds
ficomps
movsb
pop
popf
loop
mov
bound
ja
pop
fcoms
idiv
daa
lret
push
fstl
add
bound
dec
in
xorps
xorl
and
movsl
jl
cli
adc
loop
cld
scas
pop
inc
icebp
xor
push
hlt
sbb
add
adc
push
xchg
mov
xchg
out
int
scas
sub
rcll
in
xchg
frstor
adc
jmp
push
xchg
pop
sub
iret
fsubr
push
jp
mov
xor
aam
xor
inc
rorb
pop
xchg
xor
fisubl
sarl
inc
cmp
xchg
jg
sub
push
jbe
pushf
arpl
adc
jp
arpl
push
inc
iret
aas
dec
mov
cmp
test
loope
test
jecxz
dec
push
pusha
subl
mov
cli
xchg
pusha
test
xchg
out
jno
xchg
dec
pusha
lea
inc
xor
sub
pop
dec
popf
decl
sahf
cmpsl
int3
push
add
pop
xchg
sahf
aam
jle
cs
jp
adc
adc
ret
test
in
push
jmp
dec
push
mov
push
adc
inc
ss
mov
sarb
sub
sbb
insb
iret
insl
shr
pop
dec
add
scas
xor
in
mov
push
xchg
shll
in
shlb
ljmp
jae
pop
mov
mov
jo
xor
cwtl
xchg
pushf
jns
ret
sahf
push
jbe
cmp
and
test
xchg
mov
js
outsb
push
inc
insb
push
or
icebp
mov
aam
outsb
mov
mov
aas
dec
jle
fsubs
sbb
or
shlb
out
daa
fwait
hlt
pop
dec
jg
shl
dec
insb
mov
cld
ss
inc
sub
adc
mov
jne
inc
and
les
mov
add
push
push
or
xchg
stc
jne
jmp
jmp
inc
add
xchg
je
xor
in
jmp
jecxz
jl
icebp
or
mulb
dec
std
mov
inc
lods
je
sti
add
aaa
xor
jo
add
or
sub
add
in
test
pop
add
mov
mov
shrb
inc
push
adc
cmpb
dec
xchg
in
bound
leave
adcl
cwtl
cmp
jg
or
jbe
inc
jbe
mov
les
add
in
jns
mov
push
imul
movsl
int3
les
dec
bound
xor
jge
mov
pop
or
pop
jp
fptan
cwtl
xor
aam
sub
add
lds
push
dec
cmpsl
cmp
push
or
test
fsubr
insb
iret
and
sti
nop
sahf
sub
repz
jae
cltd
mov
inc
lcall
mov
rcrb
insb
sbb
add
pop
out
adc
iret
jne
lea
outsb
iret
stc
mov
dec
aam
jle
ljmp
inc
lea
push
lahf
es
inc
pusha
xlat
and
call
pop
jo
and
in
dec
dec
xor
test
sub
je,pt
jbe
dec
test
inc
jmp
or
ljmp
mov
dec
sti
jmp
ret
in
mov
add
frstor
cmp
mov
or
sub
ficompl
int
aad
out
adc
loop
push
xchg
shll
adc
mov
adc
loopne
jp
loop
lock
out
pop
pop
daa
xchg
push
jmp
mov
mov
xchg
loope
or
dec
mov
push
daa
lret
das
fistl
lcall
orb
pusha
adc
fucomip
enter
sub
movsl
lret
lods
test
mov
push
js
xor
jo
dec
push
iret
add
jg
inc
or
add
pop
jle,pt
popa
sub
sahf
jle
stc
insl
pop
lds
xor
movsb
imul
sbb
out
test
mov
mov
idivl
mov
test
std
mov
lods
subb
push
and
pop
orb
movsl
popf
flds
and
cmp
fcmovu
jg
mov
xchg
mov
stos
inc
jno
jmp
push
adc
add
sar
mov
pop
mov
shl
sub
mov
xchg
push
or
rcpps
in
push
dec
fwait
jp
jmp
aaa
hlt
or
dec
pop
mov
mov
xchg
aaa
add
dec
xor
and
int3
and
into
mov
mov
popf
outsb
jns
cmp
imul
add
aaa
mov
inc
call
sbb
or
cmp
popa
popf
test
cmp
mov
pop
push
mov
sarl
or
or
scas
sub
pushf
dec
jmp
xor
bound
ljmp
jl
mov
das
or
xchg
mov
push
iret
fisubl
xchg
loopne
rcl
pop
add
stc
shr
mov
setne
mov
dec
pop
loopne
aas
fisttpll
and
clc
inc
cmp
out
rcrb
les
add
repz
dec
and
loopne
pop
ds
test
cli
jmp
inc
mov
inc
mov
cmp
mulb
pusha
pop
cwtl
mov
iret
pop
repz
fimuls
test
mov
or
bound
sub
ja
iret
stos
and
xchg
and
add
mov
fdivr
xlat
fisttpll
sub
jle
fdivr
call
xlat
daa
data16
sub
xor
or
sbb
clc
cmp
cmpsl
jo
int
shlb
cmpsb
push
pop
jbe
dec
cld
sbb
pop
je
lods
rorl
jl
mov
daa
test
mov
stos
fistpl
fisubs
push
xor
loopne
int3
scas
xor
jo
pop
mov
inc
lods
lods
rcll
push
js
or
mov
insl
jae
fwait
mov
sub
push
stos
xor
test
cmp
popa
icebp
xchg
mov
mov
adc
cltd
mov
js
dec
jnp
cmp
xchg
cli
cmp
xor
lock
sarl
das
enter
sbb
ljmp
xchg
in
aad
jno
iret
loope
inc
test
ds
int
cmp
mov
or
les
cmp
and
push
sbb
jae
or
cmc
mov
insb
dec
aas
flds
test
xor
jl
mov
outsb
lcall
aad
stos
and
ret
cmp
outsl
aaa
adc
repz
xchg
jae
xor
scas
sub
fsubrp
xor
jg
jo
and
mov
dec
int3
dec
scas
jbe
cs
in
dec
mov
add
outsb
ret
int3
loopne
pop
aam
and
add
push
mov
mov
push
mov
cmp
imul
rorb
sbb
push
mov
movb
and
lea
inc
fsubs
aad
inc
xchg
aas
mov
fcomps
mov
imul
push
sbb
iret
ss
stos
and
mov
hlt
mov
or
scas
mov
dec
aad
jae
pop
cmp
pop
pusha
ret
pusha
mov
mov
sbb
mov
pop
jmp
lods
or
mov
femms
dec
push
push
lea
inc
imul
test
pop
jle
je
aaa
popf
inc
mov
cmp
dec
xchg
mov
add
bound
xor
in
arpl
dec
insl
fldcw
ret
pop
shlb
rclb
inc
fists
mov
mov
push
mov
icebp
into
jne
dec
js
xchg
mov
pop
xor
bound
cld
jmp
enter
shlb
in
dec
cltd
sub
jae
stos
sub
rol
mov
sbb
les
call
xor
dec
std
mov
test
gs
adc
pop
std
into
lds
add
sahf
push
inc
mov
aas
shlb
sahf
mov
cmp
mov
or
fcompl
scas
in
sub
or
fsubs
fs
fsubrl
or
fnstcw
out
mov
lret
movsb
das
jp
lock
sahf
dec
daa
add
vpunpckhdq
xchg
ret
pop
out
xchg
sbb
rep
rsqrtps
scas
outsb
repnz
test
xor
sbb
mov
mull
and
inc
out
adc
mov
out
jge
dec
cmp
out
mov
mov
leave
das
pop
imul
lret
cltd
or
scas
hlt
mov
pop
dec
push
lods
popf
push
fsubrl
hlt
push
mov
test
jns
and
enter
mov
test
fidivrl
test
fmulp
pop
outsl
jmp
add
inc
popa
push
and
bound
std
push
xor
orps
into
inc
mov
xor
dec
scas
test
aaa
js
call
pop
sbb
lret
es
scas
aaa
lock
mov
mov
inc
fwait
push
jbe
imul
add
push
aas
adc
add
xor
loop
shlb
push
testl
cld
inc
mov
mov
pop
fcoml
in
mov
pop
ficompl
pop
outsl
pop
ljmp
adc
loope
mov
daa
push
pusha
imul
cs
fstl
adc
xchg
or
dec
cmp
push
jg
xchg
dec
std
xor
push
into
pop
mov
jbe
hlt
dec
mov
test
aas
in
ljmp
push
pop
mov
add
cld
arpl
jno
mov
mov
pop
jo
mov
jmp
xchg
jl
inc
dec
pop
inc
std
int
int
xchg
aad
dec
pop
mov
lahf
push
cld
aaa
adcl
push
xchg
scas
xor
fistl
leave
aam
cmpsl
mov
dec
fisubrl
pop
ret
pop
sbb
jne
test
lea
out
pop
out
bound
cmpsl
sbb
pop
aaa
mov
mov
das
xlat
test
cmc
sub
negb
lret
xor
xchg
outsb
cwtl
pop
icebp
fstl
cwtl
rclb
iret
testl
xor
es
push
cmp
lods
or
inc
or
pop
int3
das
xchg
test
adc
insl
stos
icebp
push
mov
mov
outsl
mov
bound
out
loopne
rclb
xchg
ss
push
pop
xchg
pop
jns
dec
stos
mov
xchg
inc
imul
fwait
lods
add
andl
andb
stos
sub
decl
mov
lretw
dec
push
xor
insl
sbb
rcrl
push
xchg
pop
adc
ss
and
push
xchg
cmp
mov
inc
fiaddl
test
fsubrl
mov
xchg
stos
es
fisubrl
js
fstl
insl
dec
adc
or
imul
add
pop
push
xchg
pop
insl
push
add
loope
lea
les
or
xchg
dec
adc
fisubrs
lcall
adc
mov
lock
pusha
movsb
nop
bound
cwtl
ffreep
lret
xchg
cmpsl
mov
push
scas
dec
cmc
pop
fldt
decb
inc
call
pushl
stc
xchg
and
outsb
aad
push
mov
add
adc
shrb
mov
mov
lret
mov
add
mov
orl
rolb
jge
cmp
cmp
jbe
jo
idivl
jl
mov
cmc
add
xlat
dec
xor
popa
pop
jnp
mov
les
sbb
out
cwtl
pop
ljmp
outsl
cmp
dec
test
cmp
cmp
int3
mov
mov
inc
xor
inc
xchg
inc
cmp
mov
push
lds
out
ret
mov
scas
mov
imul
nop
dec
dec
add
gs
mov
and
daa
movsl
xchg
push
jmp
nop
mov
pop
aam
stos
dec
jge
mov
cmp
pop
out
jnp
push
pop
sbb
mov
pop
icebp
push
icebp
pop
inc
inc
fiaddl
loop
incl
lahf
add
fldl
xor
out
mov
sub
xor
inc
stc
std
jmp
into
inc
movb
scas
push
mov
push
enter
enter
ucomiss
xchg
movsb
cs
push
repz
rcrl
push
jne,pn
push
push
sbb
loopne
mov
pop
cmp
or
adc
pop
push
ffreep
mov
inc
push
testl
ja
lds
fadds
int
add
dec
mov
imulb
ss
cmp
cmc
sub
test
add
or
inc
pop
dec
and
sbb
sbb
fldcw
stos
cltd
sbb
fsubrl
cmp
in
ficompl
test
fwait
lahf
jo
call
push
inc
bound
mov
pop
push
fstps
fisubs
mov
lds
cmp
call
inc
fcoml
mov
jp
cmp
loope
sub
push
cltd
mov
mov
xor
dec
mov
and
and
pop
gs
lea
fistpl
xor
lcall
mov
cmpb
xchg
sahf
pusha
stos
inc
int3
mov
cmp
adc
adc
mov
les
cmpb
test
enter
stc
shrl
mov
inc
xor
shlb
scas
push
xchg
inc
pop
test
push
jmp
loopne
add
ja
es
and
add
std
or
in
sahf
fs
aad
mov
inc
daa
jae
cmpsl
in
imul
sahf
dec
dec
xor
xor
sarl
xlat
or
in
xor
jnp
clc
jae
lea
cli
aam
fwait
call
nop
sub
xchg
bound
fdivl
inc
mov
out
fs
mov
testb
push
addl
lret
and
xchg
add
gs
int
je
mov
sub
in
int
push
js
movsl
ja
adc
pushf
fmul
xchg
and
push
movsb
mov
stos
pushf
imul
in
add
mov
subb
leave
sbb
mov
imul
test
test
lods
loopne
lret
mov
pop
sub
insl
leave
sbb
or
mov
mov
pop
add
sub
lods
out
pop
cs
popl
fprem1
out
sub
jae
jno
push
mov
hlt
or
mov
sub
pop
inc
clc
lds
jecxz
test
imull
inc
dec
fisttps
sbb
imul
in
sbb
sub
inc
cltd
aaa
je
pop
and
lcall
clc
xchg
aas
addr16
pop
ja
adc
dec
mov
shll
int3
cmp
jl
mov
jge
imul
shll
rorb
fs
mov
xor
sbb
lret
dec
cmc
cli
and
mov
jae
inc
cs
and
mov
mov
inc
mov
dec
ja
sub
cld
lea
loop
jl
fsub
xchg
xchg
into
cmp
jmp
adc
scas
mov
cmp
cmp
addr16
fstps
fs
mov
pop
rcll
push
pop
push
int
addr16
fisubrs
inc
mov
xchg
sahf
es
in
adc
aaa
pop
lods
mov
rep
inc
shld
xchg
js
jns
push
in
push
fwait
and
mov
mov
arpl
ja
adc
add
rcrb
dec
out
pop
cmpsb
mov
mov
mov
cwtl
cld
rcr
add
out
push
cmp
lret
pop
stc
ljmp
push
add
xchg
push
jg
pop
push
jp
aaa
add
sub
inc
sbb
sbb
mov
add
cld
rorl
in
cltd
xchg
fcoms
xchg
xor
hlt
sub
mov
adc
in
xchg
fcompl
fs
push
leave
rorl
pop
out
fidivs
shr
lret
aaa
pop
xor
inc
mov
mov
add
mov
ss
popa
loopne
ss
jcxz,pt
sbbb
into
jnp
push
adc
jno
xchg
and
pop
loopne
inc
stos
push
mov
dec
and
into
or
mov
cwtl
pushf
push
fildl
jl
cmc
dec
aas
jle
pushf
mov
inc
sub
push
js
xchg
pop
and
add
pop
mov
dec
cli
sub
js
xchg
xor
dec
cmp
test
jge
andl
pop
aaa
xor
fstpt
clc
shrb
pop
das
leave
fs
pop
sahf
bsf
jns
mov
cld
fldt
gs
repnz
fmull
fdivs
jns
pop
push
cmp
dec
fldl
dec
mov
scas
adc
shrb
aas
repnz
lods
ret
cld
loop
xorps
xchg
cmp
cmp
fbld
jne
leave
push
enter
xchg
gs
mov
sbb
jno
push
shlb
mov
aas
mov
repnz
inc
inc
scas
rcll
dec
aaa
mov
adc
jae
call
cmpsb
jno
fldt
outsb
sbb
aas
sub
fwait
xchg
arpl
jnp
icebp
push
nop
hlt
jp
out
jmp
dec
imul
mov
adc
pop
stos
ret
adc
xchg
sub
les
mov
xor
out
icebp
xchg
push
enter
fsubrl
xchg
rclb
adc
xchg
xor
push
pop
add
jl
mov
lahf
dec
push
and
push
push
ds
mov
mov
dec
mov
iret
outsl
sub
in
in
fcmovnb
dec
inc
pop
pop
ljmp
data16
add
pop
sbbb
ss
pop
xchg
jle
xor
mov
fidivl
out
jp
jp
mov
scas
cmp
mov
jg
outsb
dec
test
loop
stc
cmp
cmp
mov
out
aaa
bound
cli
les
iret
inc
pop
je
addl
push
push
mov
push
aaa
sub
cmp
and
ljmp
xchg
dec
dec
outsb
cmp
push
ljmp
sbb
sub
push
push
cmp
loopne
das
mov
lahf
xor
fsubrs
mov
and
pop
and
popa
push
orl
mov
jg
sub
bound
mov
ja
add
dec
bound
bound
inc
mov
mov
mov
push
add
shl
cwtl
sub
xchg
test
dec
or
icebp
in
out
jne
bound
xchg
sub
inc
adc
shrb
mov
cltd
in
xorb
jnp
push
jae
cmp
add
movsl
pcmpeqb
in
mov
sti
ret
ret
and
xor
fldcw
jge
add
xchg
pop
fcomps
es
dec
sar
pop
aad
xor
pop
xlat
mov
mov
xchg
adc
pop
sub
dec
inc
je
aaa
pop
mov
stos
in
dec
xchg
add
pop
cmpsb
cmp
ret
jmp
sub
jno
sti
mov
adc
add
mov
and
addl
or
jmp
sub
aad
inc
mov
or
push
je
pusha
aam
divb
cmc
ja
jno
fimull
adc
hlt
bound
sbb
arpl
sub
lods
jnp
xor
test
mov
int
xchg
test
mov
out
ret
popf
sbb
scas
sbb
js
pop
xcrypt-ctr
cmpsl
sar
and
repnz
mov
cmp
dec
js
xor
data16
stos
or
xor
mov
addr16
bound
jle
shrb
dec
add
in
cltd
mov
pop
push
negl
fidivrs
mov
mov
pop
jp
mov
aad
lock
out
stos
int3
arpl
cltd
add
mov
or
test
pop
into
mov
ss
or
jecxz
and
and
mov
leave
jle
pop
xor
xchg
pop
xor
adc
nop
jbe
mov
das
popf
mov
mov
add
clc
inc
pop
sbb
add
mov
xchg
js
loope
mov
and
dec
sub
add
xor
incl
lock
addl
insl
mov
xor
xchg
jbe
jns
cmp
xchg
cmpl
repz
mov
test
pop
xlat
pop
and
inc
popa
mov
dec
add
xchg
push
mov
imul
add
mov
movsl
lock
fbstp
cmp
push
jg
js
sub
mov
and
insb
fs
and
cmp
sbb
fwait
aaa
outsl
xor
adc
jae
add
fildl
stc
cmp
enter
mov
xchg
ret
and
pop
adc
iret
inc
xor
mov
jge
int
add
jo
out
xchg
mov
loopne
xor
scas
add
jmp
push
enter
add
jbe
addr16
gs
pushf
pop
popf
mov
stc
push
pop
data16
mov
and
cs
sbb
push
pop
adc
sarl
daa
daa
adc
mov
fs
mov
push
stc
shlb
sub
jle
imul
add
add
add
in
pop
test
insl
mov
jg
push
jbe
jle
imul
sub
aad
dec
lock
adcb
jp
shlb
mov
adc
inc
lret
push
xchg
ss
inc
add
and
cmp
and
push
outsl
clc
pushl
in
cmp
lahf
sarl
jl
cs
lcall
jg
pop
ljmp
and
mov
jae
cmp
pop
pusha
mov
xchg
call
pop
xchg
mov
in
movsl
loopne
pop
mov
xchg
and
cmpsb
shll
add
lods
sub
cmp
sbb
pop
aaa
in
pop
and
std
mov
mov
loope
pop
dec
in
pop
push
sbb
cmp
add
fisubs
sahf
sbb
test
popa
sub
dec
xorl
addb
xor
dec
or
ficompl
icebp
add
sub
sbb
dec
jle
dec
stos
mov
lret
ret
jp
jo
cmp
pop
cmp
xchg
addr16
ret
scas
dec
shl
mov
lea
test
jno
loopne
fcompl
fidivl
rcrl
mov
mov
add
sbb
add
push
pop
push
push
or
add
mov
adc
cmp
pushf
hlt
icebp
enter
xor
pop
imul
pop
aas
lahf
stos
sub
mov
jg
jmp
push
decb
fldenv
test
fisttpl
push
fcoml
inc
gs
in
xlat
xchg
push
jae
incb
lss
mov
out
xchg
xor
and
lret
ss
push
jnp
push
pop
cli
sbb
push
mov
ficoml
test
cmpsl
test
lret
dec
pop
inc
mov
jge
sub
jno
outsb
push
int
inc
sahf
and
mov
aam
cld
aas
mov
cmp
push
fwait
inc
xor
mov
push
and
test
mov
repnz
push
rdmsr
xor
aad
hlt
dec
andl
imul
sbb
test
or
sbbl
or
mov
xor
jb
lock
rcl
adcl
jl
aad
fsubr
sbb
mov
dec
shr
arpl
mov
mov
shlb
xor
shrl
test
in
or
mov
inc
jmp
cld
cld
push
xlat
stos
adc
and
in
daa
mov
push
addb
ja
dec
jle
loope
mov
fstps
lods
jg
dec
or
fidivl
cs
mov
push
stos
das
shll
negl
jb
sub
lods
adc
test
or
ds
lret
ret
sub
sub
jns
stos
push
fwait
jne
jle
ds
lock
mov
dec
cmpsl
or
sbb
mov
jmp
lods
imul
sbb
push
mov
lret
pop
and
in
sub
jp
out
pop
mov
roll
idivb
or
std
inc
ret
jo
call
cmp
cmpsb
mov
xor
call
aam
sti
add
out
fadds
mov
adc
cmp
lret
dec
inc
cmp
adc
and
arpl
lahf
mov
lods
scas
test
mov
addr16
mov
pop
sub
lock
dec
or
and
xor
push
fcmovnbe
insb
mov
mov
enter
sbb
inc
ljmp
xor
xlat
pop
loopne
sbb
aas
xchg
mov
mov
orb
sub
test
mov
and
cltd
push
cwtl
inc
les
enter
bound
add
dec
ja
dec
or
int
inc
call
pop
push
ror
xchg
push
pop
cmpsl
jmp
dec
imull
jbe
mov
pop
jnp
push
cmp
push
cmpsb
pop
jo
cld
mov
lds
xchg
xchg
filds
sbb
xchg
icebp
dec
sub
jnp,pn
fimull
push
or
pusha
cld
add
or
sbb
sub
hlt
push
shl
mov
icebp
inc
xchg
mov
jne
mov
jmp
and
mov
lods
xchg
mov
push
imulb
or
dec
xor
jno
jns
mov
pop
adc
push
je
scas
fists
xchg
push
jl
data16
jle
xor
ljmp
mov
bound
mov
loopne
cmpl
adc
xchg
sbb
inc
in
rolb
cld
push
lea
fs
scas
fwait
pop
add
mov
or
mov
cmp
test
and
icebp
inc
cmp
call
sahf
or
mov
jl
xorl
and
in
jae
in
pusha
repnz
jne
pushf
or
nop
nop
dec
scas
dec
adc
cmpsb
faddl
jp
loope
cs
loop
xchg
iret
pop
push
mov
push
mov
adc
xchg
in
xor
dec
das
fdivrl
adc
mov
addl
xchg
hlt
pushl
scas
test
push
or
sbb
data16
sbb
data16
int
mov
sbb
sbb
cmp
xor
sbb
rcrl
mov
outsb
add
sar
movsl
mov
mov
push
fbld
inc
add
add
insb
jl
add
leave
aam
std
jmp
push
and
add
sbb
les
mov
shlb
ss
jmp
mov
jle
ja
xchg
icebp
inc
inc
dec
xchg
push
into
pushf
inc
jle
jb
inc
cmc
jl
dec
clc
aaa
in
or
in
lods
lret
sbb
or
inc
and
pop
jo
sti
fisttpll
fnsave
lea
xor
xchg
ret
mov
xchg
fisttps
ret
ret
cmp
mov
mov
dec
cmp
or
dec
pusha
sahf
insb
add
mov
xor
mov
ja
cmp
ja
incb
xor
or
push
inc
pop
fcoms
push
mov
sti
iret
clc
test
je
in
mov
pop
mov
int
inc
xchg
jne
sbb
jo
cmp
shlb
lock
xor
or
iret
jns
push
dec
xchg
inc
jecxz
mov
xor
ja
xor
flds
xchg
or
fsubrp
push
sub
xor
or
lock
or
sub
ret
jge
pop
inc
fcompl
mov
pop
repnz
cmpsl
andb
add
xor
mov
pop
mov
pop
enter
inc
mov
gs
push
sub
mov
or
xor
lahf
daa
js
mov
scas
sbb
iret
cmp
push
into
mov
bswap
cltd
andb
and
fisubrl
scas
sbb
loop
add
cwtl
or
mov
adc
adc
and
popf
and
dec
mov
inc
rcr
cld
ds
outsb
fs
test
dec
js
mov
pusha
jecxz
inc
pop
inc
pop
fldt
push
popa
lds
lea
mov
movsb
mov
xor
pop
mov
sti
cld
sahf
jo
enter
sbb
aas
cmp
inc
sarb
cmp
and
int3
xor
push
inc
outsb
mov
mov
movsb
xchg
je
xor
fnstcw
cmp
xlat
je,pt
js
ret
sub
pop
jecxz
sub
add
inc
and
xor
dec
xlat
xor
das
xchg
push
ss
in
loopne
mov
xor
xor
pop
int
xchg
inc
scas
mov
das
push
inc
lret
mov
or
pop
hlt
movsb
leave
lahf
sub
pop
les
lea
mov
ja
ffree
inc
ja
cwtl
cmp
jecxz
jl
outsl
inc
jne
cwtl
lock
xchg
cld
outsb
add
pushf
movsl
leave
push
es
and
mov
mov
xchg
dec
hlt
pop
xor
cmc
jae
push
push
call
dec
xor
js
out
push
or
andb
cltd
and
and
nop
test
stos
sahf
test
aas
sahf
pop
mulb
dec
pop
jo
movsb
rcll
sub
movsl
daa
movsb
enter
fildll
push
push
or
inc
shl
repz
mov
ret
into
push
enter
sub
push
xchg
lods
je
push
into
xchg
in
andl
mov
aad
mov
fwait
outsb
sbb
iret
dec
insb
je
cwtl
in
push
push
add
outsb
shl
aaa
inc
faddl
mov
sub
lret
xlat
movsl
mov
fbld
test
mov
aam
test
sub
cmp
das
in
sbb
xchg
mov
ja
sbb
out
imul
sbb
dec
cld
cld
sub
adc
rolb
test
stos
shr
shll
pop
adc
jecxz
xor
ljmp
rclb
pusha
into
mov
add
outsl
jne
insl
popl
xor
push
cmpsb
inc
xchg
movsb
enter
rcl
sub
xchg
enter
cmp
push
mov
mov
mov
mov
shll
dec
sbb
sbb
xchg
popa
in
scas
aaa
stos
sti
adcl
pop
add
push
mov
add
push
add
sub
or
push
mov
loopne
cli
push
scas
push
stos
ficoms
movsb
push
jecxz
sbb
jno
lret
dec
int3
and
mov
inc
cmp
sub
jae
mov
sahf
adc
lds
sbb
jge
jnp
xor
xchg
mov
mov
test
mov
push
leave
xor
ds
int3
nop
nop
stos
jne
mov
adc
test
jae
sbb
jecxz
sub
xor
lahf
cmp
pop
mov
mov
rcl
fiaddl
inc
mov
xchg
xor
cmp
out
cmp
rclb
sbb
cmp
iret
push
push
scas
scas
sarl
int3
jne
mov
and
xor
std
pusha
xorb
imul
ror
jo
fisubrl
jecxz
gs
imul
push
sub
leave
cmp
push
adc
xchg
cmpl
bound
xor
jg
insb
ret
adc
cmp
sbb
scas
jno
pop
lods
scas
cmp
mov
rcrb
mov
inc
mov
push
iret
jns
xchg
jno
inc
test
cmp
pop
and
jg
fs
rcll
insl
mov
or
in
faddp
xor
fsubl
push
push
aam
loope
fcoms
sub
lock
rorb
inc
je
mov
cld
and
outsl
stos
mov
cmpsl
fs
dec
fnstenv
mov
hlt
mov
pop
in
add
fidivrs
add
ljmp
xlat
mov
xchg
pop
mov
mov
adc
outsl
lods
adc
out
imul
mov
mov
repnz
popf
out
pop
xor
movsb
std
bound
xor
fnstsw
aad
ss
xchg
test
xchg
push
cmpsb
cltd
add
push
cmpsl
loopne
daa
rcrl
test
divl
or
add
nop
pushf
fcoms
inc
enter
imul
lahf
stos
dec
sub
sub
clc
or
cmp
cmpsb
mov
push
pop
ss
je
arpl
out
dec
pop
daa
imul
dec
shll
pop
cmp
xchg
xchg
inc
add
loop
cmc
xchg
and
lds
jle
pop
call
insb
pop
sbb
icebp
mov
jae
adc
iret
clc
addl
xlat
and
sbb
or
inc
and
xchg
fidivs
iret
movsl
insb
pop
scas
les
cmp
xor
popa
enter
mov
popa
mov
cltd
fisubl
adc
call
rorb
xor
xchg
mov
mov
mov
sti
and
enter
sub
push
and
lds
jo
inc
mov
sti
or
nop
mov
cmp
into
popa
pop
pop
mov
jb
sahf
fisttpl
dec
out
sti
gs
lods
cmc
notl
jle
leave
sbb
cmp
add
push
inc
push
sub
cmp
int3
test
int
push
pop
cmp
push
repnz
insb
sarb
mov
jb
ss
fcmovnb
sahf
test
and
inc
pop
hlt
fyl2x
inc
dec
mov
fsubrl
pop
arpl
cmc
dec
mov
add
cli
int
pusha
inc
cmp
xor
bound
cmp
inc
lods
mov
outsb
rcll
xor
out
adc
sub
hlt
call
movsb
adc
aam
or
testb
add
add
ds
jmp
lods
mov
jns
mov
call
adc
stc
push
daa
pop
mov
popf
inc
dec
push
fdivr
jle
test
popf
test
sbb
cmove
mov
popa
jp
les
sbb
push
flds
jecxz
cmp
aas
sbb
test
mov
and
pop
mov
pop
push
cli
jae
push
sub
jno
sti
xchg
jmp
rclb
dec
sbb
in
ljmp
movsl
mov
xchg
and
repz
imul
fildl
cmp
nop
push
das
sti
aad
inc
addr16
push
cmpsb
pushf
jbe
pop
fsubs
les
lret
jne
xchg
test
lgs
xchg
fistpl
or
or
add
cmp
out
sbb
jp
xor
mov
jbe
ror
call
adc
lret
nop
in
push
pop
ret
loope
pop
lea
vsubps
scas
inc
xchg
xchg
jge
lods
mov
cmp
call
fisttps
push
mov
sbb
pop
cmp
in
or
ja
call
sub
imul
daa
xor
inc
dec
ja
lret
dec
jne
cltd
add
enter
adc
leave
lea
xor
cli
mov
scas
fstl
repz
add
fs
repz
les
inc
fnsave
dec
addr16
sub
les
jo
push
aas
pop
pop
out
pop
aaa
sarb
jnp
into
inc
sbb
cmc
scas
xchg
shl
pusha
lahf
mov
sub
aad
or
adc
xor
pop
push
pushf
fildll
and
xchg
dec
cmp
push
in
cwtl
mov
shrl
xor
lret
shrl
sub
xor
jmp
dec
out
fcompl
movsb
jnp
or
lock
pop
fld
inc
mov
jne
insb
repnz
rcl
clc
repz
and
pop
mov
sbb
inc
ss
mov
mov
mov
jl
jbe
outsb
mov
jno
int3
dec
cmp
rcr
mov
jnp
cmp
imul
xor
call
mov
out
xlat
fiaddl
pop
fldl
cmc
pop
vpunpcklwd
stos
aam
fs
inc
es
or
dec
and
fcmovnu
in
or
and
cld
inc
test
fs
fcompl
cmpsb
int
test
dec
daa
xlat
nop
dec
lret
adc
lods
icebp
sbb
mov
loop
pop
icebp
mov
imul
dec
sub
xchg
adcb
cld
test
or
pop
std
xchg
xlat
push
mov
cmp
xchg
shl
dec
mov
into
ljmp
add
imul
enter
xchg
pusha
test
mov
push
and
jmp
out
or
jnp
inc
sub
dec
push
repz
lods
xor
lahf
lret
nop
inc
mov
pop
and
xchg
push
and
rclb
cmp
mov
pushf
add
ror
jecxz
jmp
xchg
ror
rcll
add
add
test
bound
mov
sbbb
mov
adc
jnp
cmpsb
xor
cmp
sbb
fmull
push
nop
cli
flds
popa
lret
aas
int
inc
sbb
mov
cli
cs
cmc
test
adcb
mov
cmpsl
mov
inc
mov
cltd
and
jg
lods
or
push
fldenv
rcl
ret
lcall
jae
inc
aaa
jnp
mov
in
push
fstps
mov
fwait
mov
cmc
imul
std
dec
or
mov
cmpl
mov
ror
aad
mov
and
imul
cmp
jne
pop
xor
ret
lahf
add
int3
pop
pop
cmc
or
and
xchg
add
mov
xor
mov
mov
sbb
out
popf
cmp
cmp
andl
jae
int
pop
and
or
inc
insb
xchg
clc
shrl
mov
mov
roll
xchg
insl
jbe
es
inc
les
stos
sbb
mov
fbld
xor
cmp
frstor
lods
cmp
call
dec
das
cmp
xchg
in
test
ret
jge
sub
fistl
lock
lcall
mov
adc
imul
ret
xchg
sbb
xchg
push
test
lahf
lods
cmp
push
xor
js
mov
jle
ja
pop
add
fnstsw
mov
fwait
and
cmp
sub
pop
push
ja
jle
dec
outsb
sub
sub
push
lods
scas
stos
ss
js
cld
cwtl
imulb
xchg
fmuls
pop
arpl
push
add
xchg
mov
repz
jno
adc
fwait
js
push
ret
mov
xchg
not
scas
mov
cmpsl
lret
add
rcrb
push
xor
loopne
lret
test
cmpsb
adc
mov
or
pop
daa
jmp
mov
filds
xchg
lret
xor
xchg
or
or
nop
adc
cmp
fs
mov
jl
ret
xabort
insl
adc
cmpsl
pushf
dec
subb
sub
mov
and
jge
sbb
sub
rep
mov
jns
xchg
loop
repz
imul
arpl
mov
inc
xchg
test
mov
orl
inc
popa
iret
je
push
fstpt
mov
cmp
iret
pop
mov
xor
pop
adc
mov
push
fnsave
and
out
mov
stos
xor
jl
stos
jl
adc
adc
xchg
call
cli
js
dec
pushf
dec
add
mov
mov
cs
push
cld
jmp
dec
jmp
mov
fs
sbb
loopne
and
das
popf
ret
dec
and
ds
mov
or
mov
clc
pop
adc
dec
push
inc
xchg
test
fsubs
xor
lret
pop
mov
inc
mov
sbb
rclb
stc
mulb
cmp
lret
cltd
shll
outsb
in
inc
jbe
inc
mov
push
and
les
lcall
std
add
sub
jns
pop
mov
jno
lcall
dec
add
adc
pop
jo
ljmp
add
into
push
enter
xchg
das
rclb
rorb
out
lods
jno
dec
xchg
mov
pop
ljmp
ret
outsb
and
pop
out
and
shrb
rcrl
or
and
dec
xor
xchg
cli
sbb
cmp
decl
out
das
lret
in
in
mov
loope
loope
cmc
mov
lret
loop
cmp
pop
jg
push
sbb
lret
je
or
xor
add
xchg
adc
xchg
loopne
in
jl
xor
xchg
push
pusha
mov
insl
adc
push
cwtl
and
leave
jmp
dec
les
mov
dec
inc
stc
imul
mov
or
mov
xchg
and
push
cmpsb
loop
int
sbb
out
jp
call
sub
cld
popf
push
inc
mov
and
mov
clc
push
push
sqrtps
gs
pop
jns
in
cmp
into
test
lods
jle
and
mov
cmp
fcomps
sbb
mov
es
lods
adcl
fs
and
fwait
jns
test
stos
enter
out
call
mov
add
cld
stos
mov
cltd
add
in
jmp
lcall
jno
test
out
push
test
in
jmp
pop
or
pushf
or
imul
add
push
sub
test
cmc
sub
push
ret
in
mov
or
add
cmpsb
nop
xor
mov
test
cmpsl
adc
out
lods
adc
andb
addr16
mov
jge
scas
jb
lds
pop
imul
dec
shl
jno
cmp
neg
andl
push
mov
sub
scas
shll
mov
mov
subb
add
add
sub
pop
ret
jnp
xchg
push
add
adc
inc
loope
insl
cli
xchg
sbb
dec
sti
test
clc
dec
jbe
sahf
xchg
sbb
xchg
dec
xor
jmp
xlat
xchg
rolb
and
mov
adc
or
or
and
rcr
popf
insb
xchg
orb
fisubs
pushf
lds
jo
push
in
mov
stos
mov
into
icebp
inc
in
dec
cmp
pop
je
mov
loopne
or
daa
and
bound
clc
pop
out
inc
mov
mov
aaa
and
add
xchg
pop
test
xor
shlb
popa
cmp
iret
fs
call
out
in
stos
sbb
out
jns
es
out
mov
pop
cmp
lcall
aaa
jne
push
movl
leave
add
jns
jbe
mov
xor
das
sbb
shll
add
sbb
aaa
pop
cld
or
aam
adc
mov
mov
jb
sub
mov
enter
icebp
mov
push
nop
add
subb
adcb
jbe
shll
out
and
adc
push
jle
call
aad
ja
aad
push
in
dec
rcll
fnstsw
fcoml
lret
lcall
dec
xchg
cmp
mov
hlt
cld
sbb
pop
lods
mov
dec
fs
stos
fs
shlb
pop
mov
cmpsb
pushf
inc
call
ja
popa
test
mov
lret
filds
mov
lock
test
fsubp
xchg
stos
jno
xchg
cmp
icebp
pop
sti
mov
js
push
mov
int
outsl
cmpsl
out
add
jb
jg
cltd
inc
inc
mov
jnp
dec
lahf
cmp
xchg
orl
bound
loop
push
inc
inc
testl
jne
fsubrp
fwait
movsl
sbb
stc
aam
bsr
inc
pop
pop
mov
das
es
mov
mov
mov
sbb
arpl
and
je
cmp
xchg
and
and
mov
mov
cmp
jno
pop
xchg
pop
jbe
jno
push
test
cli
mov
cmp
sbb
mov
pop
outsb
dec
jmp
aam
bound
sub
pusha
int
into
out
loop
imul
fidivl
xchg
inc
xor
dec
ret
cs
cmpsl
cmp
jne
mov
push
sbb
repz
xchg
jne
jl
mov
push
add
outsl
call
sbb
cld
out
inc
jnp
xchg
cmp
pop
mov
xlat
je
pop
cli
dec
sbb
mov
andl
fstl
pop
mov
jle
push
xor
add
or
sub
aas
pop
inc
xchg
je
movsb
dec
sbb
jmp
aad
xor
xchg
cmp
pop
push
xchg
lea
pop
adc
inc
xchg
pusha
outsb
rcrl
adc
in
and
pop
imulb
lock
gs
mov
das
and
cs
push
fdivs
xor
cmp
and
push
push
cli
dec
xor
in
jg
jg
popf
jo
or
adc
push
js
cwtl
ss
dec
call
xlat
sti
mov
repz
int3
mov
and
jb
xchg
ret
testl
lock
pop
and
sub
rorb
add
pop
sbb
jno
cmp
inc
mov
stos
cli
mov
bound
data16
mov
aad
xlat
jae
inc
ficomps
fwait
fwait
cwtl
insb
cmp
xchg
test
les
and
add
mov
or
xchg
cld
jge
das
orl
lds
inc
fldl
int
test
or
rcrb
outsl
js
push
mov
mov
and
imul
dec
lcall
mov
test
or
hlt
xchg
mov
ret
adc
fsubrs
push
test
pop
mov
mov
xor
aas
sbb
xchg
ret
xchg
sub
add
aam
jb
mov
adc
cmc
cs
mov
shlb
or
ret
loopne
mov
ja
ret
popf
pop
test
mov
mov
aas
push
aam
push
xchg
xor
pop
fildll
mov
cmp
nop
sbb
pop
aam
push
test
sub
jne
in
push
inc
aad
jb
jo
enter
imul
push
loope
sbb
and
mov
xchg
aas
mov
mov
leave
int
or
xchg
aaa
mov
mov
pop
inc
cmp
push
stc
sub
les
loope
inc
cmp
mov
push
dec
add
xchg
inc
xchg
ret
setle
orb
sbb
fsts
xchg
lcall
mov
fdivl
mov
pop
dec
jns
mov
add
inc
jne
je
sub
xor
sub
cmp
dec
pop
pop
jnp
or
cs
jl
in
cli
jle
add
sub
pop
ficoms
adc
add
or
mov
add
sbb
ret
inc
and
shrb
sbb
pop
rol
scas
rcl
lock
icebp
pop
pop
mov
mov
insb
sub
or
stc
and
push
cli
dec
inc
mov
xor
setbe
daa
test
jp
mov
dec
sbb
cmpsb
orl
mov
test
mov
ss
sub
loop
push
enter
mov
inc
out
pop
add
inc
xchg
cmc
mov
mov
test
lea
mov
mov
pop
mov
mov
pop
add
ss
cli
lret
shrb
mov
lods
inc
insl
mov
cmpsb
mov
inc
out
in
negb
pop
nop
xor
xor
adc
in
cs
shlb
gs
push
fcomp
or
jmp
outsb
sbb
xor
inc
repz
loopne
push
xchg
fldl
and
jns
sbb
push
in
xor
in
orl
outsb
lea
fidivs
mov
or
jo
insb
inc
cmp
dec
cmp
jae
sti
sbb
in
add
ljmp
stos
mov
sub
stos
xchg
nop
mov
mov
dec
sub
push
push
adc
rolb
insl
lods
cmp
inc
pop
int
and
jae
push
jnp
ss
xchg
xchg
roll
nop
dec
xchg
test
xchg
in
or
mov
dec
sarb
sbb
loope
push
add
or
jne
xchg
xor
jp
inc
and
lret
fistl
mov
pushf
and
xor
push
mov
bound
mov
arpl
test
pop
push
mov
xor
andb
inc
inc
sti
sbb
pop
mov
test
jno
sub
dec
mov
push
mov
test
or
mov
jb
loop
aas
out
insl
es
test
insl
adc
stos
insl
es
cmp
mov
inc
xor
mov
add
xchg
push
ja
lahf
xchg
push
sbb
mov
push
mov
fs
push
inc
xchg
dec
mov
fwait
mov
and
incl
mov
fidivs
jne
repnz
adc
mov
ret
xchg
jae
fwait
popf
fs
cmp
int3
mov
lret
aad
push
xadd
xor
or
test
cmp
cltd
test
loop
repz
add
fisubs
mov
incb
and
pop
xchg
mov
jo
mov
add
out
divl
outsl
inc
sbb
aas
into
jmp
out
or
adc
ficompl
pop
inc
std
and
in
movsl
mov
jg
lahf
xchg
push
scas
sbb
push
ret
rcll
jle
roll
les
xor
push
sbb
and
nop
lret
mov
xchg
sub
lock
push
pop
daa
adc
popf
xor
fwait
stos
mov
xorb
jp
add
dec
dec
mov
in
lock
mov
lahf
jg
fsubl
cmp
ret
daa
cmp
std
inc
sbb
aam
stos
jno
sbb
fcomi
pop
adc
in
aad
movsl
in
ljmp
clc
mov
push
add
or
mov
addr16
daa
fdivrs
xor
lock
jno
sbb
sbb
mov
xorb
jns
mov
ja
xor
dec
xchg
jl
popa
mov
pop
jb
cmp
mov
loop
subb
loop
arpl
inc
pop
sti
xlat
mov
popa
add
int3
inc
loop
ljmp
popf
or
mov
cmp
rclb
std
adc
ror
jg
push
and
scas
incb
sbb
lret
dec
ljmp
repz
mov
outsb
or
out
sti
or
inc
and
repz
sub
dec
and
insb
addl
cmp
lods
pop
push
lret
and
mov
cld
cmp
pop
test
out
dec
xor
adc
add
jl
fimuls
aaa
sti
rcll
loopne
cmpsb
push
pop
inc
scas
adc
pop
dec
lcall
push
pop
jb
loop
int
push
and
dec
add
out
pusha
add
test
aad
bound
and
clc
push
jmp
push
inc
inc
cmc
mov
frstor
aaa
mov
int
adc
orl
push
lea
or
mov
call
lret
inc
mov
xor
aaa
movsl
lods
das
jmp
ficomps
mov
repnz
cld
sahf
mov
sbb
add
scas
dec
aad
repz
xchg
movsl
sbb
inc
in
enter
test
sub
push
and
inc
jb
dec
sar
add
mov
jp
ret
gs
mov
sub
xchg
push
aam
test
lcall
loope
mov
lds
out
repz
mov
adc
push
sub
pop
push
jp
ror
mov
adc
xchg
arpl
pusha
xchg
filds
call
mov
fdivl
ja
sbb
jge
rcll
dec
rcrl
mov
jmp
repnz
int
in
pop
mov
push
and
inc
sub
xchg
and
fwait
mov
enter
add
and
mov
lods
test
nop
adc
push
rclb
mov
loopne
in
outsl
jb
aad
pop
or
push
pop
mov
shrb
es
pop
scas
mov
cmpsb
gs
mov
imul
mov
shlb
xorl
imul
jns
dec
pushaw
movsb
or
ds
cmc
mov
gs
aas
jmp
fnstcw
pop
in
daa
push
sub
leave
xchg
xchg
sub
inc
in
enter
cmp
adc
adc
or
cmp
andl
sbb
xchg
mov
popa
je
scas
fs
pop
mov
push
inc
addr16
mov
add
cwtl
add
mov
into
add
sbb
mov
cmpsl
enter
xorl
das
filds
and
adc
xor
bound
jge
es
or
jbe
bound
or
ret
xor
mov
test
mov
mov
pop
ficoml
mov
repnz
mov
in
adc
sub
add
cmp
fs
fisubrl
mov
inc
sub
incb
push
mov
cmpsl
insl
cmp
jb
xlat
testb
adc
lods
cmp
mov
das
push
lcall
inc
fsubr
and
fldl
cmpsb
clc
popa
js
incb
dec
and
mov
push
loopne
pop
enter
shr
enter
push
movsl
adcl
or
mov
sbb
stc
mov
pop
scas
lret
dec
inc
leave
mov
into
pop
xor
mov
stos
mov
adc
push
jge
jae
enter
fstp
mov
pop
pop
inc
gs
mov
loopne
and
mov
scas
loopne
movsl
or
sbb
jl
rcrb
jno
sbb
push
in
mov
pop
and
shl
int
inc
test
xchg
dec
pop
add
xchg
mov
sbb
pop
mov
stos
mov
dec
in
and
out
imulb
xor
jbe
push
pop
std
jp
mov
and
repnz
mov
cmp
pop
jns
outsb
jbe
xorb
jnp
adc
les
rclb
add
or
and
jno
lahf
pop
xor
dec
mov
cmp
jns
es
mov
push
cmp
push
mov
add
push
aad
dec
pushf
enter
push
test
clc
fimuls
movsb
ret
negl
inc
add
into
ficoml
push
out
xchg
jl
mov
icebp
test
adc
or
cmp
ljmp
cltd
aad
stos
or
loop
lods
xor
cli
out
and
jns
pop
dec
mov
adc
int3
mov
enter
jmp
cs
jl,pn
mul
stc
ret
pop
sub
add
pop
adc
add
mov
xor
leave
xchg
cmc
fwait
test
loopne
and
add
xlat
cwtl
mov
aam
jmp
imul
dec
xor
movsl
outsl
lret
jge
add
xchg
mov
jno
shrb
sub
mov
inc
sub
outsl
jns
outsb
cmp
or
test
jge
jns
jne
inc
adc
decb
jb
mov
jg
rol
testl
ret
in
mov
adc
dec
xchg
ja
pop
sbb
incl
push
pop
jne
aad
nop
movsl
mov
xchg
pusha
jb
xchg
dec
enter
mov
adc
cmp
loopne
movb
add
push
inc
leave
pop
mov
pop
push
jge
fistpl
or
int
jmp
adc
or
add
icebp
inc
push
in
inc
pop
out
loope
xor
adc
ja
je
or
dec
lds
inc
popa
dec
and
pop
pop
jbe
lcall
jbe
arpl
and
sub
icebp
push
mov
arpl
mulb
hlt
dec
jle
fsubl
dec
repz
cmp
sub
stc
sbb
sbb
sqrtps
xor
xchg
add
scas
out
clc
or
adc
jg
imul
jo
ud1
pop
and
mov
and
mov
je
pusha
test
fisubrs
mov
jnp
clc
xchg
mov
lret
repz
sbb
fistps
ss
mov
xor
jbe
and
repnz
push
mov
mov
jns
aad
push
mov
xchg
cmp
call
xchg
inc
movsw
sbbl
lcall
xchg
xlat
rcll
xlat
sbb
lret
xchg
fwait
jb
fiaddl
cmp
loop
xchg
push
dec
cli
add
xchg
sub
lds
mov
sub
dec
scas
into
mov
jl
aas
fwait
icebp
jge
push
jo
or
cmp
insl
loopne
hlt
xchg
clc
testb
test
jb
insl
pop
mov
sbb
adc
add
mov
rcl
loop
mov
cwtl
mov
call
sbb
movb
int3
nop
push
shll
adc
leave
mov
cmpsl
push
sub
test
xchg
lea
aam
cmp
clc
pop
dec
aaa
test
aas
ss
xor
xchg
add
idivb
lea
lcall
pop
add
add
cs
hlt
inc
cli
lcall
mov
or
and
inc
incl
lahf
xor
hlt
jns
mov
and
aam
sbb
cmp
imul
cmpsl
jns
and
mov
sbb
aad
or
sbb
sub
call
push
adc
leave
jbe
jmp
add
adc
cmp
mov
test
lret
jae
inc
cltd
mov
sar
jns
mov
push
popf
ss
lods
mov
and
loopne
test
adc
jmp
xchg
dec
repnz
add
pusha
pop
loopne
adc
cli
loop
pusha
cmp
cmp
push
push
jo
pop
adc
dec
dec
adc
popa
sub
repnz
mov
sub
add
sbb
out
push
push
jae
xchg
in
and
push
pop
mov
movsl
xor
cmp
mov
sbb
popa
xchg
mov
lgs
data16
or
xorb
clc
mov
sub
jg
jne
jle
outsb
xor
dec
dec
les
mov
adc
mov
pop
dec
outsl
and
or
mov
add
adc
jmp
enter
push
inc
in
cmpsb
pop
mov
cmpb
sub
scas
push
in
jmp
pop
jns
lret
fs
pop
test
cs
jae
das
add
lcall
mov
mov
pusha
cld
sbb
fldcw
cmp
jno
xchg
or
stos
sub
jae
dec
dec
fsubrs
rcrl
inc
jns
pop
out
cli
sbb
ret
inc
lods
pop
mov
dec
int3
test
les
lret
inc
jle
add
mov
jbe
mov
mov
hlt
stc
push
mov
enter
dec
loopne
mov
inc
movsl
popf
rcl
scas
push
insb
dec
sbb
xchg
popa
pushf
inc
cmpsb
js
ret
test
sbb
out
push
jns,pn
xchg
shrb
shr
pop
mov
jae
mov
mov
inc
les
test
sarb
fs
mov
adc
pop
ds
pop
and
add
js
fldenv
sbb
or
xchg
pop
icebp
jmp
add
lcall
xor
sub
push
ret
adc
cmp
dec
ret
sbb
jae
popa
dec
pop
idivl
movsl
adc
sub
xchg
xchg
xchg
adc
rcrl
sub
or
hlt
mov
mov
mov
add
lods
neg
pop
jnp
movsl
mov
loopne
cwtl
mov
jno
pop
iret
push
xchg
pop
addr16
xchg
rorb
mov
sub
xchg
dec
inc
lock
xor
ljmp
xchg
lds
mov
out
push
push
ljmp
aam
call
out
jno
pop
jmp
cmp
jne
stos
nop
pop
clc
adc
and
cmpsb
lods
mov
inc
dec
pushf
mov
out
out
je
xchg
in
fdivs
lock
imul
mov
mov
mov
fcomi
int3
jno
ja
clc
or
pushf
in
loope
lret
mov
cmc
test
jecxz
pop
loop
push
add
jnp
aas
lea
dec
sub
test
cmc
std
subl
lock
jo
sub
cmp
or
add
xor
fidivrl
jnp
test
inc
xor
jmp
in
push
sbb
fdivrl
out
or
xor
test
lahf
mov
sbb
ja
xor
cmp
clc
xchg
lret
shl
dec
sub
xchg
test
sarb
and
popf
pop
xlat
js
xor
cmpsl
fisttps
stc
test
or
xor
sbbl
xchg
cmpsl
ss
dec
add
fisttps
pop
mov
les
push
fstpt
jmp
push
sub
cmp
mov
call
cltd
adc
dec
xor
imul
fimuls
sbb
pop
pop
ljmp
add
pop
add
lea
mov
ja
xchg
jae
inc
daa
xor
imul
pushf
or
mov
iret
imul
pop
mov
xchg
sub
lods
movb
out
fsubrl
sbb
mov
cli
push
enter
ja
test
mov
push
in
ficoms
pop
cmp
add
fldt
xchg
cmp
lahf
cmp
das
out
out
dec
sbbb
out
lds
cmc
xor
sub
adc
fiadds
loop
fs
aad
test
or
out
adc
xchg
fs
dec
shll
hlt
in
cmp
into
sbb
dec
xlat
pop
or
inc
cmp
aas
pop
adcl
xor
push
lds
jne
pop
or
jnp
fisubrs
bnd
int
outsl
xlat
cmpsl
dec
adc
fsubrs
scas
test
jno
pop
arpl
jo
mov
or
int3
jmp
rorl
gs
add
clc
imul
pop
add
mov
push
ds
jns
aam
inc
call
cmp
push
adc
sub
fcmovnu
xchg
into
call
inc
ja
orb
mov
in
pop
cld
stos
pop
mov
push
enter
push
fildl
into
mov
loopne
adc
cli
dec
roll
adc
insb
leave
out
sbb
push
cwtl
inc
jo
cmp
push
sbbb
sahf
leave
pop
loope
sbb
xlat
mov
mov
jecxz
inc
xor
inc
inc
sub
jle
xor
dec
int3
lret
jmp
inc
fsts
dec
dec
sbb
or
insb
in
out
out
cmpsb
and
mov
outsl
enter
push
pop
in
hlt
aad
lds
mov
inc
lret
mov
mov
add
orl
push
in
xchg
xor
int
push
aam
and
int
icebp
mov
cs
pusha
sbb
jne
lods
je
jp
jle
sbb
jle
leave
fdivrs
stos
cmp
jnp
icebp
and
or
jmp
mov
aam
shlb
test
fadd
xchg
stc
mov
add
and
pop
aas
clc
lds
pop
imul
lahf
and
xchg
mov
pop
mov
fs
idivb
mov
in
mov
subl
in
movsb
add
add
dec
and
xor
subl
mov
cmp
and
hlt
fldl
and
mov
or
bound
mov
arpl
cmc
andl
mull
nop
cld
stos
in
pop
es
push
nop
and
lods
js
xchg
xchg
sub
sub
mov
or
and
sbb
aaa
adc
dec
pushf
sub
lods
cmpsb
out
cs
outsl
xchg
in
mov
push
or
push
subl
and
lea
jo
and
iret
dec
mov
jge
xor
and
loop
rolb
dec
subl
xchg
sti
arpl
fs
xchg
enter
mov
lahf
sti
add
add
cmpsb
mov
sbb
scas
or
or
inc
push
sbb
dec
popa
push
add
push
mov
ficomps
imul
push
add
sbb
pushf
pop
add
idivl
xchg
adc
iret
pop
jo
add
push
inc
das
loop
icebp
adc
push
mov
dec
in
mov
test
cwtl
aad
addl
popl
mov
in
divl
sub
push
bound
popa
jge
lock
pop
fdivs
icebp
dec
ret
mov
loop
sub
jne
mov
sahf
shl
scas
mov
add
rcrl
test
mov
inc
mov
xchg
test
dec
loopne
int3
xchg
cmpsl
jle
fsub
mov
pop
mov
xor
mov
out
stc
sarl
dec
push
test
and
push
test
outsl
jge
xchg
sub
pop
mov
leave
mov
xor
loop
mov
mov
mov
mov
cmp
fwait
pushw
push
aaa
jbe
outsl
sbb
aas
fsts
enter
adc
pushf
jp
in
stos
divps
or
sbb
pusha
loop
push
inc
sbb
int
les
aas
aam
in
xchg
or
js
out
lret
movb
inc
aas
clc
or
or
xchg
cmpsb
mov
outsb
or
in
xchg
or
test
mov
test
push
nop
pop
and
jnp
inc
dec
push
nop
mov
addr16
test
std
lock
push
xchg
sub
cli
inc
fwait
xchg
jle
daa
aam
inc
inc
mov
repnz
pop
js
mov
sarb
mov
jl
insb
push
cs
xor
sub
and
or
rolb
add
in
aad
mov
xchg
loop
cmp
test
pop
loop
dec
push
cmc
sub
int
cmp
scas
enter
ja
dec
adc
scas
shll
push
jle
out
test
mov
call
jl
fs
xlat
out
imul
jbe
and
and
cmp
iret
push
je
fdivrs
xor
test
pop
ficompl
sahf
cld
push
inc
xchg
push
mov
push
or
mov
in
repnz
sub
mov
adc
icebp
sub
call
xor
mov
movsb
dec
jno
aas
cli
andl
aad
inc
pop
cltd
or
xchg
cmp
ret
push
add
aad
lcall
lds
jo
ret
mov
lret
inc
ljmp
sbb
adc
popf
or
jns
push
das
dec
pop
xchg
gs
stos
sub
mov
popf
sbb
push
sub
mov
idivb
dec
aad
jnp
dec
imul
push
lcall
jmp
push
mov
js
cmpsl
insl
add
mov
xchg
add
stc
xchg
int3
outsb
movb
xor
ss
add
pop
dec
jle
pop
dec
dec
or
xchg
cltd
jb
lret
inc
xchg
fldt
fcomp
push
ret
cs
adc
push
and
mov
xor
xor
es
push
mov
popl
dec
sar
push
mov
sbb
jp
mov
test
adc
sbb
xchg
sub
stos
aad
jo
cmp
jb
push
gs
sbbb
dec
int
int3
push
negl
xlat
dec
push
pop
inc
cmp
push
xchg
enter
jo
pop
pop
mov
cmp
mov
movsl
gs
nop
test
dec
xchg
xchg
fs
and
pop
stos
mov
push
pop
mov
push
and
mov
aas
mov
xchg
aaa
add
mov
sbb
jmp
jo
mov
xchg
xchg
enter
clc
dec
ret
leave
pop
hlt
sub
and
mov
or
xor
push
enter
inc
mov
xchg
clc
ljmp
jbe
xor
adc
repnz
out
jmp
mov
ret
sbb
adc
enter
subl
or
bound
insl
xor
mov
les
add
add
ljmp
cmpsb
fistpl
loope
fwait
mov
fcompl
push
out
cmp
jbe
scas
mov
xchg
xor
pop
cmp
rcr
out
cld
xor
dec
mov
rcrl
mov
inc
aas
movsl
jae
cmpsb
mov
cmpl
sub
dec
sahf
mov
mov
imul
jno
jle
sub
pop
pop
pop
mov
ljmp
mulb
dec
or
lret
les
cmp
gs
js
mov
lret
adc
xchg
dec
push
pop
push
int3
jae
mov
ret
mov
daa
push
sbb
out
add
pop
cltd
xlat
mov
mov
mov
fs
ds
scas
mov
cwtl
xchg
push
cltd
scas
add
mov
in
cmp
negb
cmp
dec
sbb
into
sub
int3
mov
jbe
mov
mov
pop
sbb
cli
cmp
in
loopne
adc
jae
stos
or
jmp
mov
sub
ficoml
mov
call
and
push
aas
add
stos
scas
movsl
lods
xor
fs
fwait
xchg
das
imul
jns
outsl
aas
loopne
ret
repz
popa
add
outsb
inc
and
push
hlt
push
mov
or
xchg
jno
gs
push
sbb
xchg
fisubs
pop
adc
or
test
cmc
aaa
std
das
dec
push
jg
mov
test
inc
test
cltd
ljmp
jecxz
shl
lock
fstps
sub
sbb
xchg
enter
dec
sbb
sub
xlat
jmp
pushf
incl
and
adc
int3
pop
push
in
loope
loope
add
pop
push
jl
test
dec
mov
or
out
movsl
sub
xchg
xchg
mov
fcmovbe
shl
inc
mov
inc
xchg
and
jmp
or
js
js
stos
fwait
gs
jnp
daa
aam
dec
les
enter
bound
mov
sbbl
out
das
push
cltd
pop
dec
ret
testb
mov
cmp
sbb
test
jmp
push
or
cmpsl
imull
lret
in
out
add
int3
sbb
push
push
mov
mov
enter
popf
pop
mov
push
das
icebp
or
stc
outsl
cmp
mov
dec
and
test
popf
adc
lea
xchg
push
inc
ljmp
out
inc
sbb
in
std
push
fstpt
sub
sahf
imul
xlat
das
cwtl
push
sti
sbb
pop
aaa
add
jg
xchg
cmpsb
sbb
pop
ja
xchg
fdivl
mov
fndisi(8087
or
or
in
and
xor
inc
add
cmpsl
loopne
pop
lret
jns
inc
xchg
cwtl
mov
inc
sbb
inc
das
push
pop
lods
jl
pop
mov
movsl
jmp
adc
andl
xor
sub
sub
jae
and
dec
mov
iret
fwait
dec
popf
out
fld
mov
jle
pushf
cwtl
pop
adc
lea
mov
push
ja
lods
scas
sahf
iret
jle
mov
inc
imul
mov
mov
pop
sti
lds
xor
scas
xor
or
mov
cld
xor
subb
sub
pop
lahf
or
fdivrs
push
popa
xchg
inc
sbb
add
cmp
or
jbe
rclb
cmp
sar
flds
cmp
pop
inc
dec
jne
cmp
dec
std
aaa
mov
rorb
lods
movsl
sub
pop
add
mov
xchg
sbbl
or
push
or
adc
fwait
mov
cmp
insl
daa
xor
int3
gs
test
lahf
in
mulb
sbb
call
mov
ret
bound
std
push
xor
jmp
cmp
xorb
outsb
inc
scas
out
lahf
sarl
push
das
out
lcall
ss
test
inc
hlt
ret
loop
shlb
dec
imul
sahf
lock
pop
inc
mov
popf
fistpl
inc
repz
test
pop
shll
mov
mov
mov
bound
arpl
popa
xchg
cmp
sbb
inc
xchg
push
jb
add
push
ret
test
cli
test
mov
xchg
mov
mov
mov
mov
jmp
xor
les
iret
mov
fwait
mov
xchg
lods
idivb
push
cmp
inc
subl
push
loopne
btr
dec
rol
jno
orl
add
pop
mov
aas
mov
ficoms
imul
sbb
mov
int3
mov
push
mov
adc
push
or
insl
in
cmpsl
cmp
pop
lods
iret
ljmp
push
push
pop
xor
inc
sti
ja
andl
sti
out
inc
stos
adc
mov
inc
cltd
jb
jne
fcmove
push
xor
mov
push
sar
xor
adc
xchg
enter
test
fnstenv
xor
icebp
icebp
jp
adc
or
aam
inc
bound
movsl
stos
cwtl
or
jno
jp
iret
lock
roll
lret
mov
xchg
sti
test
shl
adc
hlt
add
ret
pop
mov
jg
xchg
imul
imul
pop
xor
into
mov
cmp
push
or
scas
xchg
inc
sbb
insl
call
pop
popa
add
fcompl
loopne
leave
push
outsl
dec
mov
test
inc
fnstenv
and
int
inc
aad
push
mov
outsl
mov
in
mov
mov
out
pusha
jbe
dec
loop
icebp
sahf
push
arpl
pop
mov
lock
add
test
leave
iret
add
push
dec
inc
mov
mov
push
test
dec
popa
pop
loop
and
xchg
rcll
cltd
aas
fnstsw
xchg
loope
out
add
not
ja
xchg
ljmp
push
fisttpl
push
mov
testb
jl
mov
mov
sub
sub
mov
mov
lds
dec
dec
inc
add
sub
push
or
xor
mov
sbb
dec
shll
cli
mov
mov
pop
cmp
jg
xchg
push
push
arpl
push
jle
scas
cwtl
mov
lds
cwtl
movl
jb
sub
xor
cmp
adc
ds
cli
outsb
or
into
mov
lret
mov
sti
lea
add
and
sarb
mov
sbb
jp
xor
adc
ret
and
pop
in
sahf
bnd
add
adc
insb
sbb
mov
cmp
cmp
insb
add
scas
imul
push
rol
pusha
testb
mov
imul
xor
pop
ja
lods
mov
lret
and
std
test
xchg
lock
adc
lea
ret
hlt
loope
jb
test
sub
add
jns
mov
es
pushf
mov
ljmp
enter
dec
adc
std
lret
mov
cmp
scas
int3
push
stc
icebp
push
test
add
inc
jbe
jmp
mov
adc
mov
mov
lret
dec
jmp
in
out
xchg
and
cmc
sbb
jne
cmp
push
aas
and
sub
stos
add
jns
xor
mov
fwait
js
or
adc
dec
lock
dec
inc
inc
inc
and
or
lretw
add
lock
and
mov
icebp
clc
sti
xor
ss
adc
or
out
mov
jecxz
into
lret
adc
inc
enter
sbb
data16
into
jne
jp
daa
popa
test
or
push
add
std
ret
or
push
icebp
or
outsl
jecxz
lret
scas
jbe
insb
fdivrs
jmp
jno
inc
out
andb
insl
adcl
pop
pop
jmp
je
jno
addr16
push
lods
adc
imulb
mov
ds
arpl
nop
mov
aam
mov
pop
movsl
dec
shlb
repnz
and
push
es
in
lahf
lock
ret
loope
and
test
shl
cmc
sub
subb
add
ffree
pop
push
inc
inc
or
out
add
nop
dec
jbe
lock
jecxz
jp
dec
push
pop
push
aas
fbstp
adcl
xchg
mov
ret
sbb
in
icebp
adc
shrl
push
pop
lods
in
mov
jle
mov
jne
psubusb
outsb
mov
inc
mov
or
xchg
and
test
in
xchg
mov
sbb
sub
mov
rcll
sarl
fldl
cs
fcoms
xor
cmp
add
or
insl
aas
lods
xchg
call
cmp
dec
test
jl
icebp
add
cmp
in
sub
xchg
cmp
mov
in
js
dec
pop
inc
fs
cmp
push
dec
dec
stc
cmp
iret
fwait
push
lods
adc
pop
sarb
lahf
xor
mov
jb
data16
imul
adc
pop
jecxz
stos
scas
rorl
in
or
out
lock
insl
mov
mov
push
jbe
or
pop
addr16
jne
inc
xchg
outsl
ljmp
fistps
xchg
fs
inc
es
pop
inc
pop
daa
xchg
cmp
pusha
clc
imull
push
inc
rcrb
xor
cmp
lock
in
adc
xchg
and
xor
stos
cwtl
loop
and
shl
mov
imul
jmp
popf
inc
dec
test
mov
les
ret
dec
or
cmp
das
inc
xchg
pop
push
adc
and
cmp
test
jmp
ret
sub
repz
dec
fidivs
push
dec
xchg
xchg
mov
iret
repz
iret
iret
pushl
push
xchg
dec
xor
xor
repnz
xchg
sbb
repnz
cmc
adc
movsl
and
xchg
adc
mov
jl
xchg
mov
pop
aas
sub
data16
sarl
fsubrl
mov
mov
sub
lahf
cmp
cmpsb
stos
mov
jle
es
in
fidivs
pop
js
aam
leave
push
pop
outsl
inc
lods
ret
inc
jo
xchg
pop
idiv
xor
sub
bound
jae
fnsave
int
aad
xchg
icebp
mov
add
lret
or
xchg
daa
sub
lea
daa
test
insl
stc
jns
enter
pop
jne
in
cmp
pop
out
push
pop
sbb
sbb
fistps
fnsave
fwait
jl
xor
inc
cmc
jp
call
adc
jmp
jo
push
cmpsl
dec
imul
fsubp
enter
cmpsl
add
mov
pop
pop
data16
push
push
add
or
push
pop
mov
xor
jl
aaa
push
adc
pop
mov
and
push
bound
scas
scas
out
shll
les
mov
fcomp
fdivrs
subl
popf
sti
inc
aas
jbe
xor
adc
dec
sti
mov
mov
push
loop
fisubrs
gs
cmpsb
jnp
shlb
pop
inc
push
push
in
scas
daa
arpl
mov
sti
mov
jg
xchg
orb
xor
test
mov
mov
imul
inc
movsb
xor
repnz
js
mov
jae
sar
imul
pop
push
xor
scas
jo
out
push
cli
xchg
shll
xlat
dec
fld1
cmp
mov
pop
mov
bswap
cmp
push
push
sub
stc
lods
std
jne
std
div
mov
lds
fxch
mov
sti
pop
and
push
lock
ror
push
or
nop
dec
leave
cmpsb
rcrb
lret
mov
shlb
sub
dec
mov
rolb
aas
mov
sub
mov
add
dec
out
pop
jl
jnp
mov
push
xchg
enter
inc
into
push
lods
or
xchg
outsl
mov
adc
cwtl
loop
insl
shrl
push
push
xor
sub
test
mov
cltd
jne
out
leave
icebp
insl
imul
dec
incl
adc
pop
xchg
leave
dec
mov
xchg
cmp
push
jl
insl
mov
sbb
inc
sbb
add
pop
mov
shlb
inc
push
and
jbe
out
rcl
mov
jg
sub
into
push
data16
dec
mov
popa
xor
xchg
cmpsl
loopne
lret
dec
jecxz
fwait
mov
je
mov
sub
jge
in
add
out
mov
inc
add
mov
xchg
test
fmul
dec
int3
test
mov
imul
je
mov
into
ror
and
xchg
adc
fs
loopne
inc
cld
mov
cmp
add
push
mov
jo
push
pop
push
adc
out
or
pop
push
inc
or
dec
mov
pop
and
pop
pop
lds
bnd
mov
or
loope
shrb
or
cmc
popl
sti
loope
scas
jns
push
data16
push
test
jl
dec
xchg
mov
daa
pop
cmp
enter
cmpsl
mov
aad
xor
not
test
movq
and
push
iret
out
and
scas
cmp
cmpsl
sahf
jo
mov
cwtl
xlat
mov
adc
or
ret
xchg
lods
call
iret
div
pop
test
repz
add
call
sbb
push
gs
dec
cmp
ja
cwtl
movl
movsb
jbe
or
stc
and
push
js
aas
insl
ljmp
rcll
inc
adc
aam
push
out
jno
mov
insb
call
adcb
fdivl
lods
addr16
nop
les
xchg
pop
dec
jne
and
inc
in
cli
in
jmp
add
xchg
ja
xor
lea
mov
or
and
gs
divl
push
scas
orl
pop
push
js
test
mov
adc
pop
das
pop
and
call
xor
shrb
mov
dec
and
inc
popf
stos
aad
and
inc
adc
or
popf
aas
jp
mov
ljmp
mov
loop
jp
push
sub
stc
jle
das
add
push
leave
mov
cmpsb
rcr
fs
pushl
ficoml
lods
mov
push
jg
das
cltd
sbb
into
popl
cmp
sub
sti
cmp
ljmp
lret
es
mov
int3
pop
sub
xor
dec
repnz
xlat
mov
and
xchg
cmp
jae
jg
sbb
mov
jae
arpl
int
sub
call
scas
xchg
lahf
test
sti
inc
pop
jns
vandnpd
inc
xchg
nop
leave
icebp
xchg
push
inc
fdivl
or
sbb
bound
and
pushf
and
sbb
or
jmp
mov
mov
jb
dec
sub
mov
stc
sbb
cmp
mov
pop
mov
dec
jp
hlt
sub
ljmp
loopne
inc
lds
loope
mov
pop
popa
repz
bound
mov
jbe
lock
rcll
push
or
aaa
pop
cmpsl
jecxz
mov
adc
pop
sub
ljmp
repz
sbbl
inc
dec
mov
inc
or
mov
adc
mov
inc
sub
push
insb
nop
inc
mov
mov
das
or
out
loopne
out
outsb
ljmp
or
mov
jbe
mov
std
jb
popf
and
repz
jbe
dec
push
mov
cli
iret
push
adc
add
in
cmc
shll
mov
popf
xchg
pop
popf
int3
dec
xor
cli
stos
jno
dec
jge
or
xlat
sbb
popf
out
xor
add
dec
push
mov
pop
scas
push
pop
sbb
cmp
divl
pop
in
ret
or
push
cmpsl
leave
mov
ds
xor
call
xlat
xchg
nop
push
mov
sbb
outsl
ret
lahf
das
dec
push
fcomps
add
jnp
cmp
add
lds
jge
insl
ds
adc
cmp
jmp
mov
loopne
dec
daa
cmpsl
das
in
cld
in
push
jb
sarb
pop
rcl
jbe
xchg
adc
pop
mov
faddl
stc
or
cmp
in
sub
jle
xchg
int3
inc
adc
stc
sub
xchg
decl
inc
sub
enter
add
fidivs
imull
xchg
rcl
sbb
pop
jge
jns
push
lret
into
cld
aam
sbb
ljmp
inc
adc
xchg
pop
bound
push
repnz
leave
push
loopne
xchg
cmp
adc
lcall
jae
dec
push
or
mov
or
mov
lods
jge
jg
dec
aam
insl
xchg
outsb
mov
mov
jmp
bound
cs
xor
mov
arpl
addr16
mov
xor
adc
jmp
or
loop
or
fsubl
push
in
incl
push
sbb
sub
and
ja
mov
sbb
push
mov
rorl
std
in
sbb
mov
lret
mov
mov
lahf
push
xor
xchg
push
push
leave
aad
xor
cli
push
ss
push
lahf
or
enter
lcall
iret
push
xchg
or
lods
sbb
mov
or
lods
mov
push
popf
lret
movsb
movsl
dec
sbb
xchg
shlb
mov
cmp
mov
pop
or
aam
js
adc
clc
mov
in
in
xor
pop
lods
dec
insb
nop
xor
add
rcrb
lea
cmp
xchg
repz
rolb
add
lret
lods
jbe
rorb
or
and
adc
pusha
add
xor
dec
mov
or
test
and
mov
ljmp
mov
push
xlat
or
les
add
cmp
add
sti
cs
pop
dec
mov
and
ret
sub
fcomps
mov
mov
inc
daa
mov
mov
cmp
cmp
rep
test
movsl
xor
and
loope
cli
jmp
and
icebp
ret
xchg
dec
mov
lods
mov
shlb
nop
mov
add
push
or
sti
xchg
mov
ret
cli
dec
sbb
nop
mov
jg
aad
arpl
mov
add
adc
add
pop
jmp
push
subb
sub
fidivs
icebp
mov
loop
rolb
lret
xchg
mov
enter
test
movsb
push
mov
adc
push
popf
popf
mov
pop
dec
fs
fwait
rcl
xor
aas
mov
xchg
cmp
leave
gs
lret
or
test
adc
xor
movsl
popf
dec
pop
or
sub
scas
out
call
push
inc
cmp
mov
lock
add
fs
loope
pop
in
mov
dec
cmp
cmp
adc
sbb
xchg
push
orb
sti
in
inc
jl
push
add
cs
ljmp
or
jnp
adc
roll
pusha
dec
int3
add
cld
sbb
lret
mov
dec
push
addl
and
fwait
in
sbb
mov
mov
mov
sbb
inc
dec
outsb
lea
sti
cld
mov
or
push
jns
imul
cmp
or
or
jae
xchg
pushf
aad
adc
mov
dec
jle
pop
adc
cmp
mov
jns
aad
cmp
lods
pop
test
inc
lahf
push
std
in
pusha
mov
sub
rep
mov
cmpb
insb
scas
sbb
pusha
cmc
sbb
and
inc
call
pop
les
int
loopne
out
sub
icebp
stc
push
fstps
cmp
or
out
xlat
xchg
mov
cwtl
call
sbb
fcmovnb
scas
jge
in
andb
inc
fistps
push
or
or
rcll
fwait
mov
push
out
add
cwtl
cwtl
mov
cmp
aas
aam
clc
mov
std
pop
and
aam
inc
mov
xchg
mov
mov
or
test
leave
cwtl
lcall
gs
aad
mov
dec
adc
adc
jb
fdivrp
lock
arpl
sub
shlb
sub
add
popf
mov
add
loopne
or
jb
enter
insb
mov
push
loop
movsl
mov
jp
push
mov
int3
add
pop
mov
cld
xor
mov
int3
xchg
popa
mov
fdivr
sbb
jae
orl
fildll
mov
dec
not
lahf
sub
mov
ss
mov
ja
dec
loope
leave
xchg
icebp
dec
sahf
xchg
fs
mov
inc
in
mov
mov
inc
shll
in
scas
fiaddl
stc
mov
sbb
cmp
add
cmpsl
xchg
cmp
int3
jbe
subb
daa
or
xchg
dec
cmc
int3
sbb
inc
dec
mov
arpl
scas
enter
stos
adc
test
iret
test
xchg
jmp
sub
push
push
mov
mov
dec
fiaddl
sbb
mov
mov
push
fsubrp
jl
je
or
jecxz
xchg
gs
fcmovnbe
jne
mov
adc
pop
pop
cwtl
gs
sub
or
add
es
cmc
push
popa
cltd
dec
adc
sub
mov
adc
rclb
push
lods
rorb
arpl
dec
out
dec
shlb
rcrl
fdivrl
cmp
lods
mov
sub
add
jp
sahf
aas
jbe
add
std
incl
inc
cmp
push
insb
cmpl
add
or
jno
xchg
jmp
push
push
hlt
mov
sub
addl
add
les
icebp
sbb
push
adc
aaa
mov
cwtl
adc
jg
fnstsw
cld
push
dec
aas
int3
roll
jp
sub
and
push
out
scas
gs
movsl
xor
xchg
in
sbb
xor
lock
cmc
cltd
ret
call
fiaddl
ljmp
insl
mov
aas
fnstenv
arpl
cmp
movl
adcb
mov
or
inc
sahf
mov
lret
lea
pop
ja
sti
fwait
pop
xchg
insl
push
sarl
xchg
stc
jle
cmp
or
xchg
jecxz
rol
arpl
pop
lds
ret
cmp
repnz
pop
fwait
test
ret
sti
inc
xor
cmp
mov
movlps
sbbb
scas
xor
inc
ss
mov
subl
mov
xor
sbb
mov
in
das
mov
lahf
jle
ljmp
mov
jl
out
mov
sub
push
inc
popa
mov
clc
mov
pop
mov
mov
lcall
lea
mov
push
pop
arpl
jle
test
enter
aam
in
in
repz
push
enter
or
sti
cmp
mov
mov
cmp
sbb
fbld
pushf
hlt
adc
into
scas
shrb
cmp
into
popa
loopne
icebp
fimull
jb
jp
xchg
negl
jg
pop
out
inc
imul
insl
jns
sbb
stc
sbb
movsl
push
inc
in
cmp
test
mov
pop
add
je
sarl
adc
jge
add
mov
sub
cmp
lret
imul
outsl
mov
pop
xchg
mov
cld
push
mov
jno
xchg
ss
push
sahf
pop
repz
sub
inc
ficoms
bound
stos
dec
mov
jp
stc
or
loopne
scas
add
mov
mov
mov
iret
aas
push
rolb
add
addr16
in
pop
fwait
push
fwait
out
ss
xchg
push
iret
cwtl
pop
mov
shr
das
movd
lds
mov
pop
mov
mov
sub
jae
stos
and
xor
jne
in
jns
sub
jnp
cmp
daa
mov
rdpmc
or
lods
loope
pop
cmpsl
mov
es
xchg
jno
into
dec
lret
popa
es
lock
leave
out
sub
imul
fwait
or
mov
jg
pusha
push
fs
out
rolb
lock
out
cmpsb
mov
inc
in
fistpl
subl
shl
ficompl
pushf
mov
call
and
nop
pop
jge
fdivrl
jb
iret
jno
sub
ss
or
movsb
in
cmpl
mov
and
and
jne
mov
clc
pop
mov
mov
shlb
adc
xchg
and
mov
mov
int
dec
bound
pop
fildll
aas
icebp
cmp
test
jae
mov
cmp
test
push
out
ds
or
add
cmp
dec
out
pop
repz
daa
dec
cmc
aas
push
fdivl
jmp
leave
shrl
insb
arpl
lods
fldl
and
movsb
test
sub
xchg
jns
lds
loop
or
shll
xchg
jp
test
gs
enter
xchg
jns
ljmp
pusha
addl
repnz
push
pop
notb
inc
pusha
push
push
sbb
in
int
pop
cmpsb
lahf
jl
add
pop
leave
aam
dec
jmp
or
or
jg
aam
scas
mov
dec
inc
jb
out
dec
xor
in
mov
cltd
popf
dec
hlt
stos
cmpsb
fsubl
test
in
jo
xchg
addr16
cmp
mov
movsb
movsb
and
pushf
rorl
xor
lds
ss
sub
shlb
test
arpl
pop
scas
push
add
sub
mov
adc
lods
xlat
inc
mov
mov
cltd
in
and
stos
fadds
pop
cmpsl
xor
mov
cmp
push
sbb
mov
push
sbb
pop
out
and
xor
inc
test
sbb
mov
adc
leave
cmp
adc
roll
data16
jno
test
aaa
mov
jp
push
add
pop
int
or
ljmp
push
out
xor
popa
xchg
lea
push
add
addb
dec
imul
pop
adc
push
testb
inc
ret
jmp
cs
mov
pushf
jmp
out
in
int
sub
push
xorb
les
jo
add
dec
stos
sub
rorl
std
das
dec
insb
xor
inc
fstpt
push
push
dec
dec
cmp
jge
ret
filds
add
xor
fwait
jno
xlat
insb
hlt
data16
add
movsl
mov
pusha
mov
repz
cmp
mov
int3
jmp
sbb
sub
out
bound
or
es
inc
aam
sbb
cli
fs
lahf
mov
ret
push
fildll
enter
and
test
cmpb
inc
std
push
movsl
mov
and
add
pop
sar
nop
pop
add
lret
xchg
test
call
js
test
out
pop
xchg
cmp
push
arpl
popf
adc
push
jecxz
in
and
and
xor
scas
push
push
movsb
push
inc
loope
loop
or
testb
xor
mov
xchg
rcl
aad
sbb
xor
or
sti
mov
outsl
cmp
fs
adc
repz
push
inc
mov
push
xchg
and
jo
out
jecxz
cwtl
test
inc
rcll
inc
fstpt
sbb
aam
jb
dec
sbb
xchg
xchg
movsl
push
pop
xchg
and
xor
xchg
std
jmp
out
icebp
in
test
mov
pop
aas
pusha
lds
in
arpl
pusha
out
jne
adc
and
pop
hlt
or
rol
push
pop
mov
dec
iret
clc
mov
pop
inc
add
adc
jne
mov
mov
cmpsb
outsb
jnp
jae
jge
mov
rorb
or
fdiv
repz
xchg
cmpsb
jne
in
jge
icebp
push
pusha
dec
jle
mov
in
mov
mov
push
inc
loopne
sub
insl
ficomps
push
bnd
pop
pop
pop
dec
mov
pop
jno
or
daa
fimull
out
xor
pop
ret
imul
jns
inc
pop
push
lar
in
je
push
push
pop
test
popa
ret
stos
test
jo
jmp
mov
stc
call
roll
test
and
push
cwtl
dec
movsb
mov
outsl
push
je
pop
hlt
xchg
dec
loopne
or
jo
icebp
sub
push
and
push
aaa
addr16
test
or
std
pop
or
js
ljmp
int3
cmp
int
lahf
jns
mov
mov
lret
or
cltd
outsl
push
jns
repnz
xor
xchg
inc
cmpsl
ja
sub
xor
bound
mov
test
gs
pop
lock
sub
loope
add
push
into
jmp
jecxz
neg
cli
cmp
jo
sarb
push
mov
pop
jmp
and
call
mov
bound
mov
pop
jle
loopne
and
mov
aad
lret
pop
popf
popf
xor
cmc
push
cvtps2pd
fsubs
xchg
pop
jmp
jg
mov
dec
dec
stos
sbb
lahf
fptan
scas
ficomps
mov
ja
adc
addr16
out
mov
push
popa
mov
hlt
sahf
xor
roll
jmp
dec
shrd
push
ret
mov
je
movsb
mov
orb
sub
test
and
stos
or
in
mov
or
jo
fsubr
es
mov
cmc
dec
insb
es
fwait
repnz
adc
add
cmc
addr16
out
cmp
fnsave
lcall
cs
xchg
stos
mov
clc
ljmp
nop
test
dec
jne
pop
mov
lcall
ljmp
jo
mov
or
mov
adc
xor
aam
inc
push
lods
enter
or
repnz
cmpb
sub
das
sub
addr16
lret
shr
cld
mov
insb
popa
das
or
push
lcall
lcall
xor
cwtl
sahf
mov
jecxz
dec
mov
pop
mov
xlat
adc
mov
movsb
cmpl
imul
cmpsb
out
ja
or
sbb
repnz
lcall
cltd
pop
testl
cmc
xchg
shrb
xor
nop
test
mov
jbe
adc
imul
inc
notb
cmp
pusha
fsub
adc
ja
mov
add
es
in
pusha
imul
out
insb
sub
rcrb
cli
sti
jge
popf
loop
add
lds
pop
push
mov
sub
inc
and
cli
loopne
push
jg
jecxz
call
jne
jbe
shrb
adc
ljmp
mov
adc
add
jmp
cltd
fucomip
outsl
push
imull
in
jo
inc
adc
loop
mov
cmp
les
lock
push
and
jne
push
add
xchg
popl
pop
jl
xlat
shll
inc
push
loopne
fs
in
adc
loopne
out
jb
dec
ret
int3
call
sbb
aas
sti
sarl
flds
andb
cmpsb
loopne
fisttpl
stc
push
inc
and
dec
jmp
sub
sti
or
cmp
adc
push
jnp
stos
adc
dec
mov
test
hlt
mov
add
faddp
xchg
daa
out
pop
mov
adc
outsb
mov
cmpsl
adc
sub
sbb
mov
jno
push
add
mov
dec
xchg
imul
xchg
jns
add
and
dec
mov
cmp
pusha
repz
mov
xchg
xchg
addr16
sub
push
stc
lds
sbb
mov
mov
push
mov
shll
js
mov
repnz
sbb
push
sbb
imul
push
out
and
and
mov
or
xor
xor
fsub
push
out
aas
fxch
cmp
jo
test
in
xorb
int
pop
das
pminub
and
mov
lcall
enter
out
notl
imul
fdivrs
fs
or
mov
sub
xchg
cld
fs
movsb
push
popa
jne
push
mov
sub
lcall
adc
add
mov
sbb
push
js
jnp
scas
in
adc
in
dec
das
mov
enter
leave
jno
jmp
mov
push
repz
jbe
xchg
mov
jne
sub
pop
adc
push
stos
push
push
hlt
ljmp
or
ja
jmp
hlt
stc
sbb
dec
dec
test
enter
lret
insl
ror
imulb
leave
leave
inc
aad
push
xor
sahf
sbb
hlt
sub
sbb
and
jp
test
cmp
incl
ds
daa
out
std
mov
ret
sub
jmp
fstpl
add
mov
jp
dec
leave
fdivr
imul
ljmp
int3
outsb
iret
fisubl
aaa
adc
lret
xchg
adc
fisubrl
mov
jno
lds
cmpsb
xchg
push
push
in
lods
mov
sub
jecxz
mov
push
mov
xchg
fcoml
adc
shll
mov
mov
add
mov
mov
push
cwtl
inc
fsubrl
adc
lret
xor
imul
xchg
cmp
test
ljmp
leave
xor
sub
xor
aaa
jl
repz
sbb
cmpsb
pop
pop
fs
aad
mov
hlt
clc
push
out
in
out
add
inc
xor
mov
aad
jne
call
push
test
pop
add
xchg
push
pop
mov
cs
fstp
inc
flds
sub
aas
movsb
cli
push
clc
out
push
shl
and
dec
push
lahf
scas
push
iret
pop
push
int3
ret
leave
cmp
sbb
add
sbbl
jb
push
fidivrs
mull
mov
pop
leave
fdivs
leave
dec
fincstp
stc
push
dec
add
repnz
and
scas
sbb
out
xchg
nop
repz
push
fwait
xchg
mov
ficoml
or
iret
xchg
mov
jae
xlat
push
push
jne
paddusw
pop
pop
andb
cmp
aas
pop
inc
pop
jb,pn
cmpsb
push
push
mov
scas
add
outsb
lock
fisubrs
mov
and
jne
mov
push
and
fcomip
pusha
fs
mov
scas
test
insb
shrb
rcrl
cltd
mov
in
pop
sbbl
jne
nop
and
je
dec
sbb
add
inc
inc
out
xchg
imul
mov
mov
lods
jg
dec
push
lret
leave
inc
rorb
inc
cli
dec
ds
pop
jg
mov
dec
mov
lock
sub
add
arpl
xchg
test
push
push
mov
or
push
inc
inc
mov
dec
dec
shl
xor
push
add
cmc
mov
add
lret
sbb
fiadds
rclb
insb
pop
adc
call
sbb
mov
pop
jo
out
mov
pusha
fildll
sbb
das
cmovne
xchg
pop
in
out
dec
mov
pushf
fidivrs
xorb
ss
sub
hlt
cs
xor
addr16
ficomps
push
add
sbb
jb
mul
jl
sbb
mov
push
insb
xchg
leave
cltd
in
popf
inc
push
inc
fbstp
idivb
or
sub
jl
mov
decl
push
jmp
adc
test
inc
in
cmp
xor
push
and
pavgw
pop
pop
fnstenv
xor
jo
int
into
mov
loopne
or
or
push
enter
loopne
rclb
inc
in
xor
cwtl
jno
cltd
xchg
lods
es
pop
sbb
clc
dec
and
stos
clc
fldenv
out
fucomi
lock
and
inc
js
push
inc
inc
cmp
flds
lock
add
jnp
fmul
adc
mov
in
aas
inc
or
div
jno
xor
ja
mov
in
add
leave
sub
mull
xchg
mov
je
cmc
pop
sbb
in
scas
rcrl
pop
mov
add
stos
stc
nop
and
lahf
mov
mov
imul
mov
xchg
ret
jbe
push
sbb
xor
jae
mov
or
daa
repnz
inc
push
clc
mov
fwait
int3
pop
xchg
inc
nop
lret
push
out
fs
xor
int
lret
pop
jmp
xchg
mov
or
push
bound
jae
sbb
add
jle
sub
pop
mov
fldenv
cmp
xchg
popa
movsb
rcrb
mov
es
mov
xchg
in
push
jno
mov
push
dec
int
repnz
or
pop
gs
test
dec
aas
bound
push
imul
aam
imul
sub
mov
lcall
mov
mov
pop
mov
push
scas
inc
sub
adc
imul
fsubl
mov
call
rclb
pushl
push
negl
sbb
pushf
ja
push
push
xorb
je
mov
pushf
popf
pop
shrb
out
bound
mov
cmp
addr16
call
cmc
filds
xchg
aad
jle
inc
xor
ss
sub
call
pop
mov
push
sub
iret
je
jp
mov
fadds
das
ficoms
scas
shl
test
dec
lods
mov
xlat
add
lea
and
cld
repz
shlb
mov
and
xchg
lahf
pop
es
xchg
movsb
lock
push
scas
int3
xchg
mov
sarb
nop
rclb
les
jae
dec
push
push
gs
out
gs
pop
xor
cwtl
xor
xor
push
sub
fbstp
lds
clc
push
pop
push
mov
fisttpll
arpl
lods
mov
imul
xor
movsl
ss
cltd
pop
movsb
xor
mov
adc
stos
lods
lret
xchg
push
shlb
or
std
mov
and
mov
and
lock
pop
sub
jge
sbb
cmp
inc
mov
and
pop
inc
pop
outsl
pop
mov
adc
push
jno
fimull
pushf
or
sbb
imul
in
movl
mov
cmc
test
cmp
int
cmpsb
sbb
cmpb
jecxz
pop
and
mov
cmovb
jno
jmp
jb
insb
loop
incl
dec
push
jecxz
xor
add
cltd
jne
xchg
sbb
xor
mov
test
and
mov
test
pop
repnz
pop
add
push
jp
mov
filds
les
ds
push
movsl
cmpsb
push
dec
sbb
mov
sub
pop
sub
fisttps
adc
adc
adc
xchg
sub
jle
adc
pop
scas
cmp
adc
xchg
lds
and
dec
enter
mov
inc
xchg
aad
and
loope
jae
push
jg
sub
adc
leave
stos
dec
fisttps
imul
and
idivl
leave
sub
rorl
es
mov
jo
in
fnsave
pop
stos
jno
jg
lock
push
jecxz
cltd
inc
loopew
aaa
call
push
lds
roll
push
out
jg
dec
sub
pop
lods
cmp
mov
fwait
cli
dec
roll
dec
mov
or
int
imul
or
adc
rol
test
pusha
fdivrp
pop
mov
xor
sbb
clc
int3
gs
push
mull
mov
shlb
or
in
dec
sbb
xchg
mov
jl
sub
movsb
add
inc
jge
in
push
jo
mov
xchg
adcl
jge
xor
data16
pop
add
xor
lcall
enter
mov
jmp
add
out
push
or
outsl
imul
mov
fdecstp
aas
stos
jnp
frstor
ds
add
add
cmp
dec
xor
cmc
inc
ds
ds
sbb
imul
icebp
andb
cmp
test
outsb
sub
xchg
out
jmp
cltd
sbb
push
xchg
mov
scas
sbb
lahf
mov
fsub
lods
sub
adc
dec
add
pushf
aaa
adc
outsl
mov
outsl
sub
cmpsb
mov
cmc
lcall
mov
push
xor
xor
mov
mov
mov
ret
lcall
or
lret
out
shrb
inc
icebp
push
rcll
lahf
movsl
rcrb
rcr
jns
and
push
fmul
or
sub
push
iret
imul
sbb
repnz
ds
mov
and
in
loop
adc
jp
dec
nop
lret
leave
lods
mul
test
or
or
popa
push
cmp
ja
push
mov
inc
lahf
adc
mov
outsb
rcrb
mov
loope
add
push
loope
sub
out
xchg
ficoml
cmp
sbbl
and
iret
and
push
into
testb
dec
ds
inc
and
outsl
pop
cwtl
pop
mov
cltd
dec
sub
mov
jp
pop
cs
std
xchg
sbb
xchg
sub
mov
xchg
push
mull
ror
arpl
cld
jae
outsl
ret
shll
xchg
pop
cmp
jecxz
sbb
lcall
push
jmp
pop
mov
inc
sub
push
dec
mov
pusha
das
cmp
jge
or
adc
jno
jbe
ds
sahf
fisubrl
dec
cld
dec
hlt
fmuls
loop
cmp
inc
dec
popa
test
incb
cmp
sar
repz
mov
adc
and
jbe
cld
pushf
jg
or
mov
fnstenv
rolb
sub
mov
repnz
inc
popa
inc
aam
mov
cmp
inc
inc
and
add
jmp
xor
and
xor
testb
mov
mov
jb
jnp
fst
mov
jmp
cld
adc
fists
mov
in
nop
inc
incb
xchg
pusha
loop
inc
or
mov
stos
push
repz
sbb
ret
nop
pusha
lock
sbb
pop
push
push
or
sub
mov
dec
ret
cmpsb
push
and
push
add
loope
call
enter
int3
stos
in
loopne
loopne
mov
call
lods
fisubrs
data16
aad
lds
xor
push
lock
aam
jmp
ret
jae
and
in
mov
fcmove
shl
cmp
mov
push
pop
call
loop
and
incl
andl
jno
or
rcrb
cmp
sub
ja
pop
pusha
push
add
out
inc
mov
fstps
sbb
add
add
mov
and
xchg
movsb
insb
jbe
inc
sti
into
adc
call
pushf
cs
fidivrs
mov
icebp
or
dec
mov
subl
mov
adc
fcompl
pop
gs
and
mov
loop
out
je
jae
mov
cwtl
imul
inc
xchg
bound
rcll
cmpsb
and
push
sahf
dec
mov
in
adc
enter
add
sbb
push
mov
cld
mov
pop
inc
pop
cmp
sarb
push
test
inc
aam
xor
popf
jmp
mov
in
jmp
ss
ljmp
bound
dec
notb
std
mov
xchg
and
cmp
lcall
pop
adc
sbb
inc
test
sub
sub
scas
cmp
bound
mov
cmp
pusha
mov
ja
jp
jns
and
bound
jl
jl
pusha
addr16
push
das
test
adc
cld
push
push
shll
inc
xchg
push
or
xchg
mov
cltd
testl
cmp
adc
mov
gs
pop
xor
cmp
cmp
pushf
cmp
dec
aam
cltd
cmp
cmp
aad
lahf
lds
mov
test
repz
imul
xor
dec
clc
mov
fwait
xchg
mov
xchg
mov
outsl
mov
jge
push
outsb
rcll
das
clc
push
arpl
pusha
leave
xor
stos
pop
les
cmpsl
mov
mov
aaa
lock
ss
and
cld
adc
arpl
mov
bound
jnp
jbe
repz
hlt
mov
lahf
sti
popa
cmp
push
dec
lea
movb
mov
mov
fs
push
sub
cmp
nop
sti
xchg
ja
rclb
lret
inc
pop
insb
pop
push
mov
lcall
xor
ljmp
sub
dec
lret
loop
push
popa
pushf
mov
mov
lret
jnp
xor
ret
pop
cld
in
xchg
push
add
nop
mov
lods
incl
xor
dec
sarb
lods
call
mov
jno
sti
pushf
sbb
scas
lods
ret
dec
xor
xor
or
mov
nop
sbb
imul
xchg
adc
adc
mov
lret
orb
xchg
jo
lcall
push
xchg
ja
dec
mov
xchg
push
jg
stc
cwtl
inc
push
sub
movsl
mov
in
mov
mov
dec
fidivrl
enter
aad
mov
jae
mov
subl
jecxz
adc
cwtl
push
or
ss
add
inc
or
and
xchg
jns
sbb
insl
sbb
sbb
push
dec
push
mov
or
sbb
sub
inc
xor
mov
xor
jmp
scas
xchg
out
jae
jmp
jae
ret
lds
mov
fisubl
or
adc
scas
ja
mov
or
sbb
out
pusha
repz
mov
dec
or
sti
jbe
and
mov
mov
pushf
mov
jp
xor
movsb
pop
xchg
cld
std
popf
insb
daa
xchg
stc
call
mov
xor
mov
clc
rcrb
ret
addr16
push
xor
pop
cmp
lock
enter
movsl
inc
mull
enter
xchg
push
das
mov
dec
xor
loope
sbb
hlt
and
mov
push
or
push
divl
dec
xchg
jp
arpl
sbb
lock
or
sub
inc
daa
fwait
cli
loope
push
push
push
jns
lcall
sbb
and
jl
stos
push
in
sub
jno
mov
jae
pop
pushf
and
mov
mov
jbe
std
fmull
cmp
jae
test
pop
pop
mov
sbb
push
enter
xchg
test
cmpsl
out
idivl
and
pop
les
pop
or
pop
fwait
idivb
out
loopne
mov
jne
scas
data16
lret
jp
inc
push
xchg
xor
hlt
movl
and
fstl
and
xor
fisttpll
mov
dec
lahf
adc
pop
jge
inc
add
cli
repz
iret
inc
sub
mov
mov
sub
lret
rcrb
or
test
pop
dec
in
push
das
inc
stos
or
jge
mov
adcb
pop
mov
pop
test
test
xor
leave
pop
jge
and
mov
call
stc
aam
add
fiadds
test
imul
add
mov
and
repz
lret
push
pop
xchg
push
xchg
or
outsb
push
mov
rol
xchg
mov
lock
adc
xlat
out
jb
xchg
rcl
sbb
add
mov
lahf
fmul
and
mov
push
in
inc
xchg
and
lods
sbb
dec
inc
popf
inc
call
sbb
push
gs
cmp
lea
ret
mov
test
repnz
cmc
movsb
in
mov
xchg
test
add
or
repnz
adcl
test
sbb
imul
ss
lods
sbb
xchg
pop
cmpsl
xlat
comiss
stos
std
in
out
je
jno
cmp
out
std
shl
or
sub
cmp
mov
cs
mov
sahf
push
es
je
shrl
test
pop
or
mov
xor
and
jo
jne
dec
sarl
inc
or
loop
stc
jl
movsl
out
cli
mov
sub
or
leave
dec
inc
jge
adc
dec
push
imul
pop
mov
sti
push
fimull
and
test
into
mov
ficomps
repz
sub
les
iret
cwtl
or
in
bound
mov
sub
inc
mov
addb
sbb
adc
aam
add
popl
movsb
dec
mov
fcoml
aam
jno
pop
pop
pop
mov
and
push
cmp
lods
cmc
shl
outsb
out
nop
jns
outsl
mov
xchg
pop
add
imul
jmp
mov
xor
in
cmp
int
bound
jge
fisubrl
sti
or
cmp
pop
xchg
fisttps
dec
test
mov
test
cmpb
jg
push
fs
sbb
fdecstp
cs
bound
stc
mov
inc
cmpl
cmp
movsl
lcall
fistpll
js
xchg
fdivs
lret
pop
mov
repnz
mov
and
lods
outsb
repz
mov
inc
xor
dec
xchg
or
sub
mov
ds
inc
out
pushf
jno
jl
mov
mov
ljmp
xlat
daa
lcall
pop
aas
jnp
fsub
xchg
iret
cmp
dec
and
mov
out
es
or
popa
aaa
push
jmp
fadds
add
rcll
lret
icebp
mov
fcoms
popl
mov
test
sbb
loopne
xchg
inc
push
mov
imul
ret
into
and
push
jl
ss
pop
decb
call
xchg
ljmp
mov
arpl
aam
push
movsb
imul
lods
dec
xor
scas
fcomi
cmp
adc
enter
stos
inc
loop
sbb
mov
icebp
mov
mov
ds
in
sub
test
push
push
sbb
adc
push
fidivs
dec
outsl
jg
push
sbb
adc
mov
lcall
dec
sbb
sub
mov
and
dec
cltd
mov
jno
adc
sbb
notl
call
mov
mov
push
pusha
aaa
mov
xor
push
push
mov
xchg
mov
iret
cmp
cmp
or
je
pop
dec
xor
aad
outsl
es
sub
mov
mov
or
imul
mov
and
inc
lret
imul
pop
inc
dec
out
jmp
mov
ds
es
or
sub
lock
push
push
dec
das
push
jecxz
inc
adc
sti
mov
xchg
hlt
sub
jns
out
xorl
pop
pop
dec
dec
push
mov
sbb
mov
imull
jl
lea
movsb
setno
lds
push
outsb
lret
mov
shrl
insl
sub
push
lcall
sub
adc
insb
or
paddusb
dec
fstpl
adc
cmpsl
les
divb
fsubs
sbb
pop
pop
movsl
xchg
push
jns
adc
xchg
into
jb
inc
sbb
aam
xchg
jno
test
fsts
jmp
je
outsb
scas
or
push
push
cmp
mov
pop
jl
sbb
add
cltd
xchg
lock
arpl
into
push
sub
mov
popf
jne
mov
xor
mov
arpl
mov
addl
jae
mov
xlat
fistl
ret
cld
insb
mov
inc
mov
mov
imul
rcll
bound
bound
and
dec
and
arpl
cmpl
test
loope
outsb
out
adcb
orb
mov
lods
loopne
add
in
jmp
hlt
cmpb
test
xchg
sarb
pop
jne
jno
addps
sbb
std
rolb
arpl
add
sbb
sbb
shrb
inc
aas
xlat
pop
dec
rolb
repz
pop
js
xchg
sbb
pop
adc
imul
inc
sbb
aam
loop
cmp
outsb
testl
cmp
cld
add
mov
pop
out
andl
inc
xchg
mov
or
ror
ss
push
mov
call
repnz
dec
adc
mov
ljmp
fbstp
inc
in
les
std
sub
testb
push
adc
daa
mov
push
xchg
gs
scas
xchg
out
cltd
adc
std
or
sub
aaa
push
push
mov
push
fistpl
nop
stos
push
push
inc
cmpsb
mov
xor
xor
push
pop
cmp
andl
sbb
outsb
adc
push
mov
mov
pop
data16
xchg
out
push
aas
sub
lods
repz
xchg
int
cmp
inc
in
jo
popa
out
icebp
mov
daa
mov
idivb
je
stos
icebp
fcomip
imul
pop
xchg
inc
enter
mov
adc
int3
je
fcmovnu
inc
push
cwtl
dec
lds
nop
or
fadd
add
jo
sub
xor
jae
mov
push
fs
mov
call
lock
cwtl
clc
push
jle
in
xchg
outsl
test
sub
hlt
cltd
ret
and
std
stos
frstor
insl
repnz
sub
mov
inc
cmc
faddl
in
and
fwait
mov
call
repnz
adc
inc
sub
in
jno
scas
mov
scas
mov
pop
inc
mov
inc
jo
cmp
or
fwait
js
js
add
or
mov
movsl
cmp
pop
mov
sbbl
xchg
add
dec
add
loop
ficomps
jl
cmp
or
mov
fldcw
imul
and
jle
out
divb
mov
ss
shll
sbb
mov
fstl
mov
xchg
clc
movsb
gs
cmc
push
dec
jbe
test
push
push
add
inc
dec
lcall
jb
outsl
mov
jle
es
mov
in
and
jno
roll
sbb
pop
add
cmpsl
push
ljmp
xlat
stc
lret
sbb
test
xchg
neg
in
mov
sbb
push
xor
mov
sub
out
or
cs
pop
test
mov
repz
mov
aaa
xchg
add
lods
mov
mov
pop
mov
cld
push
adc
cmc
xlat
js
pop
daa
popf
or
mov
adc
dec
addr16
rol
jmp
xchg
push
sbb
leave
jno
cs
sarb
mov
gs
and
fildll
mov
or
insb
mov
jns,pn
lods
sti
lcall
lahf
jmp
push
xchg
jne
add
sbb
xor
push
stos
jmp
lock
adcb
lcall
fldl
ljmp
xchg
sbb
dec
in
in
push
adc
repnz
insb
mov
in
lcall
and
push
inc
andb
and
pop
lcall
fstl
fstps
jo
arpl
test
or
mov
shll
pop
push
enter
push
fwait
pop
in
and
jne
jns
stos
mov
adc
popa
or
xchg
push
cmc
dec
push
sub
bound
lods
xor
shl
push
push
js
pushf
sbbb
jp
cmp
movsl
in
cmpsb
sbb
jp
outsl
cli
pop
mov
iret
popa
mov
fsts
jns
mov
pop
or
pop
jo
push
mov
mov
adc
scas
dec
fldl
xchg
push
lcall
daa
scas
stc
sub
push
dec
ret
aad
jne
pop
xor
jg
fcmovnu
lds
and
ljmp
das
or
lahf
les
or
filds
mov
add
test
push
or
or
dec
sahf
xlat
sub
push
aad
pop
arpl
sahf
mov
pop
ss
aaa
cmp
jle
mov
mov
imul
xor
popf
jo
stc
pop
mov
movsl
adc
shrb
cld
arpl
add
fadds
insb
or
dec
push
lret
imul
mull
xlat
jecxz
add
mov
div
xchg
add
js
pop
subb
mov
test
clc
or
negb
nop
fisubrl
aad
rcr
cli
pusha
js
jle
mov
jns
shr
fcompl
repz
push
xchg
aad
sbb
mov
pop
fcompl
aaa
loop
lea
jmp
dec
lds
rcr
jae
lods
arpl
add
mov
ljmp
pop
stc
sub
xchg
sti
or
in
fbstp
or
in
add
and
in
pop
dec
pop
pop
push
or
mov
jb
jo
sub
xchg
add
or
mov
mov
sbb
jne
in
addl
sbb
inc
or
ss
add
dec
mov
jle
sbb
stos
les
out
orb
add
lea
add
adc
xlat
cs
mov
test
pop
sbb
in
insb
mov
mov
mov
xor
push
pushf
les
mov
mov
inc
les
pop
pop
fwait
jo
test
rcll
movsb
add
mov
fisubrl
cli
dec
cmp
pop
out
inc
rorl
jb
and
inc
mov
push
adc
sub
rcll
jge
xchg
or
xchg
mov
sbb
or
jo
imul
jge
fisttpll
lock
les
mov
pushf
cld
inc
in
sbb
mov
dec
sub
xchg
adc
pop
inc
inc
jl
or
cmp
jge
pop
imul
dec
xor
adc
dec
out
fs
icebp
daa
in
test
hlt
adc
push
jns
out
xlat
pop
jmp
inc
leave
imul
dec
aas
in
xorb
jg
mov
cmp
outsb
pushw
call
cmp
insb
test
cmp
fmull
xchg
xor
faddl
and
cwtl
shll
shlw
scas
int
jle
sbb
pushf
lret
std
sub
fdivrs
lods
xor
aaa
fbstp
xchg
inc
pop
xor
in
int
cmp
push
mov
fs
jo
popf
sub
jge
push
loop,pn
out
xor
mov
mov
movnti
mov
dec
mov
aaa
mov
stos
push
mov
cmpsl
dec
fiadds
inc
dec
pop
ds
mov
jmp
addb
xchg
jo
fdivs
bswap
inc
sbb
sub
nop
mov
je
sub
sbb
fisttps
jbe
or
inc
mov
pop
cmc
je
or
and
ret
and
sub
adc
in
push
in
adc
test
mov
outsl
in
adc
sbb
dec
inc
es
test
ret
or
xchg
mov
mov
mov
xlat
lcall
mov
cmp
dec
push
test
sbb
fidivrl
or
outsb
push
push
dec
outsb
push
pop
mov
je
ficompl
inc
jnp
mov
bound
pusha
arpl
repz
mov
cli
inc
inc
fadds
lock
add
rorl
xchg
outsl
adc
rorl
inc
or
and
lods
add
xor
out
jecxz
mov
inc
sub
add
divb
cmp
or
inc
imul
add
gs
jae
cmp
cwtl
inc
fistl
pop
loope
pusha
fcmovne
cmp
cld
xchg
hlt
and
dec
sbb
add
mov
into
add
push
leave
in
icebp
lahf
mov
movsl
inc
cmp
cltd
addr16
mov
adc
jb
lock
int
cmp
sti
inc
inc
cmpsb
imul
mov
and
push
xchg
dec
add
lahf
pop
mov
rcr
dec
pop
out
outsl
sarb
les
xchg
mov
pushf
xchg
orl
jnp
pop
mov
push
insb
xlat
stc
jp
sub
adc
mov
sbb
sub
and
testb
sub
cli
dec
pop
mov
test
jge
pop
fsubs
sti
xlat
int
pop
add
adc
rorb
xor
mov
pop
sbb
adc
push
or
jecxz
in
std
xchg
int
inc
adc
jae
jb
nop
jno
xor
insl
int
cmp
sub
sub
adc
leave
and
sub
mov
xchg
xor
mov
sti
sti
jnp
scas
dec
cs
popf
mov
mov
cmp
xchg
mov
mov
aam
dec
lret
add
adc
lcall
sbb
sub
xor
outsb
mov
pop
xor
fwait
test
inc
mov
jne
clc
add
sbb
loopne
les
rorb
adc
jecxz
sbb
adc
enter
dec
and
cmp
shrl
dec
or
insl
int3
into
icebp
xchg
in
insb
imul
push
lret
or
push
outsb
push
daa
in
pop
dec
and
mov
int
shl
xorb
or
and
push
lahf
inc
jge
pop
pop
scas
mov
shl
frstor
fst
cmp
in
mulb
hlt
cmpsl
dec
xor
dec
mov
cmpsl
dec
xchg
mov
adc
test
xchg
and
mov
out
inc
sarl
push
jae
fdiv
mov
bound
fists
sti
ret
pop
out
jae
fcoml
fmul
ljmp
sbb
inc
mov
jecxz
sub
pop
jo
sub
mov
mov
test
xor
ja
scas
dec
cmpsb
push
sbb
mov
xchg
lds
cmpsl
push
nop
lods
mov
pop
loop
stos
rcr
arpl
cmc
cmp
push
sti
mov
pushf
xor
xchg
fcomps
or
push
and
dec
pop
inc
or
mov
mov
jge
cmc
dec
fwait
call
loope
stos
adc
xchg
adc
jge
jg
sbb
dec
pop
ret
pusha
adc
mov
jmp
ficoml
out
dec
je
add
sbb
in
testb
and
int
sub
jae
cld
fadds
lcall
mov
push
lods
jb
ds
mov
pop
out
sub
repz
push
xor
outsl
push
or
jb
out
lock
inc
cmp
adc
pusha
cltd
cld
stos
iret
lret
fists
adc
int3
and
stos
mov
cmp
pop
fistl
js
rolb
inc
mov
add
jb
cmc
adc
adc
mov
inc
sbb
into
je
adc
mov
ds
imul
adc
push
ret
inc
movsl
push
push
arpl
shll
jns
xor
pop
repnz
popa
das
adc
and
jmp
out
sub
into
fisubs
fdivrs
aad
fwait
lcall
pop
ret
outsb
and
test
inc
jg
add
push
rep
insb
sbb
in
cld
fcompl
mov
cmp
cld
into
out
fs
mov
xchg
dec
inc
push
sub
cmp
lea
lods
add
or
xchg
fimull
cmp
mov
sbb
lret
loope
adc
mov
je
xchg
cmp
push
inc
sbb
xor
and
xchg
add
pop
cpuid
jge
test
pop
test
mov
xor
jge
sbbb
fdivl
movsb
add
repnz
pop
sbb
mov
cmp
je
and
clc
push
cmp
ret
decl
jne
cmp
adc
add
movsl
or
ljmp
fidivrs
push
dec
mov
mov
sbb
inc
inc
ror
mov
mov
test
icebp
repz
mov
test
mov
jnp
pop
test
sub
jns
dec
xor
pop
push
adc
daa
xchg
mov
mov
and
aam
dec
fnsave
mov
push
mov
push
sub
dec
sbb
cmp
lret
in
xor
cmpsl
mov
mov
and
call
lock
jb
jae
fstl
lods
das
jb
rcll
ss
mov
push
lods
fidivrl
cmp
fldcw
andl
dec
into
cmp
and
pop
sub
xchg
or
loop
xchg
dec
jnp
into
lcall
xchg
mov
xchg
cmp
mov
jecxz
push
cs
in
push
movsb
jnp
icebp
push
xorl
xchg
xorl
xchg
dec
cld
insb
iret
sbb
sar
out
inc
cwtl
lods
js
arpl
fwait
xchg
addb
scas
inc
push
lods
dec
in
in
dec
loop
sub
vfrczsd
test
ret
ss
or
in
or
bound
ret
or
aas
sti
jl
mov
mov
pop
cwtl
scas
andb
daa
sbbl
lret
out
sahf
daa
cmp
fwait
xchg
adc
mov
pop
pop
cmpl
sbb
test
iret
not
lret
and
andl
add
std
mov
mov
scas
and
fisttps
cmp
movsl
les
aad
sbbb
pusha
movsl
jb
ljmp
xchg
in
push
fmul
movsb
sbb
arpl
xor
adc
sub
hlt
dec
test
sub
nop
mov
repnz
cmp
aam
gs
les
add
mov
mov
scas
cmp
pop
adc
flds
jl
mov
adc
and
outsl
cli
push
bound
out
jg
and
int
sbb
popa
in
xchg
aam
faddl
lret
divl
and
es
fwait
insb
in
mov
ret
cwtl
mov
mov
push
jnp
mov
push
sub
rcll
movsb
sbb
or
add
dec
imull
fdivl
std
sub
pop
jnp
sbb
push
mov
push
fs
mov
insl
dec
lods
test
rclb
and
xlat
jns
dec
addb
orb
pushf
jmp
and
cld
adc
out
movsl
dec
dec
mov
lods
aad
outsb
arpl
or
in
insb
repz
add
or
cmp
xor
mov
cltd
inc
pusha
iret
movsb
mov
push
mov
sub
mov
iret
jbe
sbb
inc
ret
cld
sbb
and
scas
hlt
pusha
jne
add
push
inc
mov
inc
sbb
lret
jg
shl
enter
jecxz
xchg
and
sub
lahf
adc
adc
mov
lods
lcall
mov
pop
sub
div
imul
stos
and
xor
in
fisubrs
xchg
fistpl
repz
push
testl
sahf
hlt
test
push
cmpsl
sub
out
sarb
das
and
jnp
mov
mov
roll
leave
cmp
xor
or
scas
loop
cld
jl
enter
addb
stos
inc
sbb
addr16
fistpll
lcall
add
sbbb
mov
js
lret
mov
and
jle
cmc
test
xor
and
cli
sar
inc
loop
cmp
pop
lds
outsl
cmpsl
jl
addr16
sub
ja
sahf
fistps
jp
cmp
pushf
std
pop
imul
dec
out
sub
scas
and
pop
rorb
gs
test
adc
lea
jae
clc
push
clc
adc
lods
dec
jno
cmp
pusha
outsb
outsl
jl
inc
shrb
jne
subb
sbb
mov
aam
jo
iret
lret
push
ss
repz
enter
jno
pop
lock
scas
jne
divl
add
cs
lret
rcr
rorl
push
mov
fistl
sub
cld
xchg
ret
ds
into
data16
fisttps
ret
jbe
shl
mov
loopne
add
shlb
addl
pop
cmp
mov
and
xor
or
popf
pop
mov
adc
stc
clc
add
loopne
test
jno
loopne
xchg
and
adc
lret
push
jmp
sub
xchg
aas
xchg
testl
sti
sub
push
loopne,pn
popa
or
addr16
cld
pop
nop
dec
mov
test
nop
nop
imul
or
inc
xlat
mov
arpl
es
inc
and
jb
divl
pop
insl
xchg
lea
inc
cmp
ja
pop
psrld
mov
xor
test
lea
cmp
dec
mov
xor
andb
les
test
sbb
mov
push
dec
and
popa
aad
data16
js
test
hlt
dec
sub
cmovae
xlat
scas
ret
test
sub
aas
cmp
mov
cltd
scas
into
pusha
pop
testl
das
out
ja
adc
inc
lods
pop
mov
push
insl
lcall
mov
hlt
jmp
xchg
icebp
call
inc
mov
mov
inc
xchg
fsubrs
mov
and
outsb
jl
out
das
mov
push
xchg
xchg
push
std
lock
or
frstor
aam
fs
les
dec
cs
in
mov
fidivs
mov
mov
or
or
imul
icebp
stc
sarl
rcll
ljmp
sub
cs
dec
mov
bound
push
add
push
gs
jg
into
cmpsb
cmp
or
ds
inc
js
std
arpl
xchg
icebp
insl
js
sub
xor
fildl
popf
cmp
pop
cli
cmp
aaa
push
push
leave
jg
push
movb
dec
push
push
out
push
dec
xchg
and
inc
lds
nop
jle
push
and
jnp
push
push
or
inc
addr16
mov
mov
mov
sbb
dec
sub
mov
inc
xchg
sbb
lods
rcrb
xchg
sahf
mov
ror
mov
imulb
dec
pop
jmp
sub
push
lock
cmp
push
pop
xor
pop
inc
push
pop
out
add
lret
ds
ja
fdivrl
dec
addr16
push
mov
insl
dec
fiaddl
xchg
mov
fidivs
sub
jbe
sbb
add
popa
mov
xchg
cli
jle
pop
popa
add
pushf
test
stc
mov
or
mov
lret
out
inc
pop
sub
dec
xchg
addr16
call
pop
add
push
mov
push
enter
mov
stos
and
cmp
or
aad
inc
xchg
xchg
cwtl
popa
icebp
jmp
ja
jne
jae
in
push
inc
imul
outsb
jecxz
mov
pushf
jns
movl
dec
inc
sub
enterw
mov
leave
loopne
sahf
push
leave
push
xchg
mov
jl
ss
test
dec
cmp
pop
lods
jl
aaa
scas
xlat
lds
loopne
test
sub
bound
ds
pushf
adc
movsl
mov
mov
mov
xchg
stc
insb
cmpsl
dec
cmp
mov
mov
dec
in
sub
mov
subb
dec
mov
and
xchg
push
cmp
push
push
xlat
lret
sbb
rcl
fisubrs
lods
push
push
pop
or
mov
fsubrp
cwtl
cltd
dec
ljmp
outsl
das
jb
mov
dec
aas
popf
push
mov
xchg
repz
mov
xchg
push
sarl
pop
adc
inc
jo
or
mov
test
jno
dec
cmp
imul
es
lock
inc
aas
xchg
outsb
or
arpl
adc
insb
and
cli
adc
xchg
add
inc
dec
or
jbe
cltd
in
or
call
jp
subb
inc
push
pop
pusha
insl
jnp
lcall
cmp
loop
and
test
ljmp
mov
dec
sbb
mov
sahf
push
addr16
xchg
or
sbb
std
xor
xchg
cmc
mov
in
sahf
fmull
dec
cwtl
xor
dec
adc
pusha
rorl
fcoms
push
dec
inc
test
mov
xchg
insl
call
shll
retw
mov
mov
jecxz
jecxz
dec
pop
push
xchg
insl
xchg
mov
xor
imul
fbstp
data16
in
notb
subb
and
scas
dec
outsb
jmp
ja
push
jb
adc
cmp
ds
xor
in
loopne
sbb
outsl
xchg
cmp
mov
jge
mov
call
out
or
loope
pop
cmp
iret
cmpsb
shrl
incb
or
dec
movsl
and
ja
push
pop
scas
aas
aas
xchg
mov
bound
xor
repz
jb
mov
mov
rcrl
push
cmp
fidivrs
aad
cmp
xchg
clc
xchg
or
xchg
jle
inc
insl
cli
pusha
sbbl
sub
sub
mov
test
inc
enter
sub
cli
dec
add
push
lret
xchg
les
mov
push
lea
orl
out
outsb
vandnps
sbb
jmp
cmp
push
sub
clc
or
cmc
sbb
std
push
gs
or
sbb
div
pop
jno
sub
ret
orb
pop
dec
ret
shrb
push
or
or
mov
dec
xchg
imull
pop
stos
inc
int
pop
xchg
adc
aaa
js
scas
push
ds
and
leave
sti
mov
dec
mov
hlt
jp
aam
cli
cmp
out
cmp
dec
subl
or
cmc
xor
das
bound
loop
test
data16
clc
mov
cmp
fidivrl
fld
nop
sbb
mov
mov
push
test
stos
aas
pop
mov
je
outsb
pop
loope
sbb
jle
sub
stos
sub
adc
xchg
push
xor
testb
add
addb
jmp
rolb
pusha
setg
repz
push
push
icebp
cmp
pop
test
mov
repz
and
jno
movsb
mov
pop
outsl
cmpsb
es
xor
lods
fdivrl
xchg
jecxz
dec
xor
inc
in
add
pop
imul
ljmp
mov
ret
lods
xchg
dec
adc
push
out
jmp
not
dec
shlb
adc
roll
mov
das
jl,pn
add
inc
and
jg
mov
jae
imulb
inc
lods
dec
mov
cmpsb
cmp
push
mov
in
cld
mull
in
or
adc
scas
or
mov
or
int3
pop
jno
imul
fcompl
aam
mov
lret
or
xchg
fdivrl
cmp
mov
inc
jns
xchg
fcompl
sub
fwait
xor
cmpsb
push
lds
mov
adc
or
and
ja
outsl
push
xor
dec
cmp
aad
push
mov
imul
mov
cmc
cmp
out
mov
mov
repz
int3
inc
sub
loop
xchg
cltd
xor
gs
int
clc
push
jp
sub
es
lret
xchg
pop
ret
mov
mov
jo
fdivl
pop
mov
out
iret
jnp
mov
sbb
inc
pop
stc
lret
ja
fisttpll
out
repz
fnsave
inc
cmc
mov
mov
or
push
repnz
movsl
pop
cmp
and
mov
fnstcw
and
mov
pop
bound
aad
xor
insb
jbe
pop
mov
xchg
mov
xor
adc
pushf
pushf
adc
dec
cmp
mov
add
inc
outsl
fwait
push
and
inc
inc
mov
inc
inc
add
js
xor
aam
aad
rclb
jno
idivb
jg
in
jg
test
test
outsl
nop
fistl
adc
mov
cmp
ror
jns
rclb
insl
push
fdivl
sub
jecxz
js
push
insb
mov
hlt
sahf
ror
sub
xchg
adc
mov
sarb
pop
jg
popa
adc
pop
call
cmpsl
jl
inc
xor
shlb
xchg
adc
test
inc
in
add
idivb
lahf
sub
scas
jae
cltd
mov
roll
das
jl
in
dec
sub
mov
push
fmull
ja
into
ljmp
cld
out
or
sti
mov
xor
ret
xor
and
mov
popf
adc
jge
dec
adc
lock
addb
sub
imul
xlat
cmc
cld
jbe
stos
sub
ret
mov
std
sub
jle
pusha
aam
in
inc
xor
pusha
inc
rolb
ss
sub
dec
std
push
daa
pavgb
addr16
fistpl
inc
and
inc
or
test
lahf
loope
inc
and
movsb
dec
shlb
test
mov
mov
test
hlt
in
and
xchg
and
pop
push
mov
adc
mov
testl
adc
inc
jge
test
add
popa
rclb
addl
mov
cmpsb
dec
push
les
je
in
loopne
add
insb
add
add
test
sbb
sbb
fcoms
sbb
scas
fldl
adc
sub
je
adc
inc
stos
ret
mov
sti
popa
inc
int
push
xor
mov
add
push
cwtl
adc
mov
out
inc
ficoml
and
in
jmp
lret
add
jae
addb
mov
imul
inc
cmp
mov
fnstsw
adc
jno
push
or
fstl
jle
and
and
imull
pop
add
push
pop
nop/reserved
inc
dec
or
jno
test
repnz
lods
mov
hlt
sbb
xchg
mov
sarb
push
xor
orl
xor
jb
outsl
rorl
cltd
shlb
lahf
inc
pop
fsubrs
push
in
dec
stos
nop
addr16
cmp
jb
sti
icebp
sub
daa
mov
and
jle
das
mov
cs
mov
jge
pop
jns
lods
mov
repnz
sub
ret
mov
lea
jge
addl
movsb
std
pop
mov
sbbl
enter
lcall
mov
imul
fildll
dec
je
xchg
aaa
xor
dec
mov
daa
ret
sahf
sub
cmp
xor
dec
lds
shll
mov
adc
sub
xchg
int
cmp
sbb
into
cmp
orb
lea
jo
inc
push
cmp
es
dec
imul
mov
out
leave
das
loopne
call
pop
xor
and
loop
aam
jle
mov
gs
and
push
sbb
testb
cmp
test
jns
ror
mov
push
xor
aad
xlat
call
pop
add
pop
bound
into
les
test
push
les
movsbl
lds
das
jecxz
cmp
push
push
fbstp
adc
cmp
xchg
jbe
leave
sub
lea
add
les
xor
push
or
out
cld
aaa
sbb
mov
pop
mov
out
jle
mov
xchg
in
outsb
inc
mov
mov
pmaxub
fimuls
jb
fxch
dec
pop
pop
xchg
imul
dec
test
popf
jl
fnstenv
jns
andb
jmp
xor
popa
mov
fisubrs
hlt
sub
ljmp
subb
xchg
push
clc
stos
inc
std
clc
rclb
roll
push
jb
fnstcw
pop
push
xor
pop
jne
loope
pop
adc
ja
add
scas
test
cwtl
popf
stos
jmp
adc
aad
jne
mov
mov
push
movsl
jle
int3
xchg
notl
mov
negb
fmul
jmp
push
dec
push
mov
xlat
sbb
lock
lea
add
shlb
sbb
imul
jne
rol
std
call
outsb
aas
mov
test
jmp
jg
popa
int
xchg
add
jae
fisttpll
testl
pop
cmpsl
push
aad
adc
roll
pushf
cmpsl
jecxz
aas
mov
xchg
push
push
int3
mov
xchg
rorb
daa
sub
lods
push
lahf
adc
in
test
adc
adc
hlt
pop
shl
jle
dec
ret
sub
stc
ret
xchg
int
push
stos
and
inc
shrb
cmp
pop
in
dec
in
push
add
cli
mov
cwtl
out
cmp
adc
in
ljmp
lahf
sahf
fbld
int
adc
fimuls
cld
out
stos
mov
or
dec
add
into
rcrb
or
arpl
mov
enter
pop
mov
add
inc
mov
daa
cltd
aas
or
lea
dec
or
dec
out
enter
imul
sbb
stc
pcmpeqw
jle
orl
fimull
dec
mov
mov
shl
loope
imul
scas
add
in
and
out
das
lret
jb
lahf
insl
jne
xor
sbb
insl
sahf
jmp
jge
bound
es
sub
mov
sahf
sub
lods
inc
in
xchg
xchg
js
xchg
xchg
ss
or
push
les
push
rcll
and
mov
aaa
test
mov
aaa
pop
lahf
outsl
jmp
jg
cmp
leave
mov
cmp
rol
pop
pop
mov
adc
or
cmp
and
jne
inc
out
pushf
mov
ret
out
dec
lock
out
stos
inc
adc
cltd
call
sbb
daa
add
xchg
es
ret
test
fmull
adc
mov
pop
pop
lahf
cmp
jmp
notl
stc
inc
arpl
xor
addr16
cmp
lods
lcall
xchg
xchg
push
lea
shrl
shlb
leave
push
in
call
xor
mov
fsubr
pop
inc
adc
jb
mov
pushf
aaa
xchg
rclb
ljmp
cmp
test
jge
ja
imul
adc
jb
test
push
popf
ds
jnp
aad
outsl
aas
add
cmp
jle
jnp
cmp
sub
and
jmp
lods
insb
inc
or
aam
xchg
fcmovne
pop
test
fldl
into
out
pop
cs
cmp
int
or
test
xlat
mov
add
stos
inc
imul
movsb
pop
adc
outsl
je
mov
insl
sbb
lea
dec
mov
sbb
repnz
sbb
push
dec
mov
aad
xor
fcmovne
add
shll
adc
mov
adc
jle
dec
sti
xchg
leave
sbb
pop
hlt
scas
inc
fstpl
mulb
or
or
sbb
aaa
nop
inc
pop
pusha
push
push
cwtl
dec
adc
push
aam
push
push
out
sub
sub
inc
repz
mov
stos
rolb
jb
stos
xor
addr16
sti
fs
out
mov
push
fcmovu
aad
xor
and
aaa
inc
inc
pop
loop
dec
push
dec
mov
stos
jecxz
xor
mov
push
cmpsb
pop
and
fists
pop
jg
data16
mov
sub
pusha
jg
adc
clc
or
out
das
dec
add
xlat
lods
xchg
mov
mov
mov
push
jno
jbe
and
dec
gs
mov
jae
dec
lret
mov
pop
sbb
gs
mov
fistpll
fwait
xor
imul
inc
fiaddl
dec
xchg
stos
fmul
call
popa
adcl
lock
lret
iret
inc
sbb
adc
cmpsb
cmc
je
gs
adc
pop
out
and
sub
pop
fsubrp
out
dec
xchg
inc
inc
or
dec
std
adc
loopne
in
cmpsb
mull
fwait
ss
aad
fwait
dec
cmp
sbb
loopne
imul
frstor
add
mov
xchg
scas
jno
lret
dec
fmul
sbbb
pop
lods
mov
scas
dec
call
jp
push
je
and
stos
mov
jne
push
cmp
movsl
push
and
ljmp
xchg
mov
cltd
aas
jb
push
adc
cli
mov
adc
fstps
mov
or
cmp
std
add
test
sbb
into
inc
ja
test
leave
pop
sarl
cmp
mov
cmp
std
test
inc
sti
xor
mov
push
popl
movsl
and
xchg
xchg
ret
mov
jne
cmp
insb
arpl
xlat
insl
pop
test
xchg
push
fs
pop
in
out
stos
sbbb
or
mov
loopne
sub
xchg
and
cltd
dec
inc
sub
ja
xor
sbb
mov
mov
cli
movsb
sbb
repz
rcl
xor
outsl
push
push
addb
in
ret
adc
nop
jl
dec
sub
and
test
push
sbb
sub
rcr
outsl
bound
or
mov
adc
int
jo
out
cltd
push
xorb
ss
popf
or
xchg
mov
push
mov
add
imul
dec
out
pop
call
and
dec
in
xor
xchg
pop
out
lahf
lods
mov
mov
push
call
cmp
in
adc
test
cmpsl
sar
cmp
pop
lret
jle
pop
lea
mov
xchg
andl
int3
idivl
pop
xchg
insb
cmp
jno
lahf
icebp
dec
dec
xchg
aam
rcrb
mov
cli
data16
loopne
sbb
rorl
cmp
jns
inc
ror
aas
jne
imul
int
insl
mov
sti
inc
and
repnz
lcall
add
in
mov
mov
subb
xchg
xchg
and
fmuls
jno
sub
fwait
cs
xor
les
pushf
subb
movsb
push
in
xor
xchg
add
enter
ljmp
sbb
or
push
enter
repz
fidivrs
movsb
scas
jmp
sbb
jg
and
shl
out
sbb
sbb
int
or
daa
insl
xchg
repnz
xchg
loop
jmp
or
mov
pop
xor
sbb
fnsave
push
inc
pop
pusha
dec
mov
popa
jle
mov
lea
fst
jo
sbb
cmp
pushw
cmp
dec
cltd
mov
fs
gs
je
gs
ljmp
pop
pop
mov
mov
jae
in
outsl
jmp
stos
es
fcoml
xorl
push
lret
lock
inc
dec
imul
addl
mov
jns
flds
mov
add
sub
cld
call
mov
or
mov
inc
mov
hlt
mov
cmp
movsb
mov
leave
test
addb
or
sub
pop
int
outsl
lock
cmpsl
mov
fldt
orb
int
lea
jecxz
jl
push
cmp
mov
repnz
lret
or
test
mov
dec
dec
ficomps
xchg
pop
jp
fisttpl
push
pop
fwait
sbb
inc
sub
bound
js
sbb
stos
aam
jae
push
inc
outsb
add
popf
cmpsl
icebp
jg
je
or
sub
mov
add
cmp
repnz
inc
jle
shl
mov
dec
jb
xor
lods
xor
aam
or
mov
hlt
aaa
lahf
pop
dec
iret
insb
and
mov
mov
dec
mov
xor
or
mov
push
pop
imul
popf
or
xor
jnp
push
shll
adc
adc
iret
data16
out
cld
add
push
shlb
push
movsl
int
lds
pop
push
arpl
push
test
cmc
jbe
pusha
shrb
xchg
mov
adc
adc
pop
pop
and
lds
sub
je
mov
jl
ljmp
lcall
lock
sbb
insb
std
daa
add
pop
mov
adc
divb
push
addb
inc
rcl
icebp
insl
mov
mov
mov
jo
xor
fwait
stc
mov
cmp
leave
loope
pop
pop
cltd
dec
sarl
test
divb
ds
fldenv
movsl
xor
out
in
lahf
sub
mov
dec
sti
inc
mov
outsl
bound
out
jo
cmp
lock
in
in
mov
popa
ja
and
aaa
das
add
cmp
nop
add
pop
pop
jbe
or
or
lahf
sub
dec
xor
xchg
popf
cmp
sub
into
xadd
dec
push
xchg
jbe
mov
repnz
test
sbb
sbb
dec
fadds
xor
xchg
adc
sarb
jg
das
mov
loopne
js
xor
and
xchg
test
daa
fldenv
or
fnsave
scas
aas
sbb
or
push
xor
lock
int3
fstpt
jl
mov
mov
pop
out
cltd
jb
test
xor
adc
xchg
sti
aaa
stos
inc
mov
pop
popf
aad
das
imul
std
jns
shlb
dec
xor
call
push
push
adc
xor
test
cmp
cmp
leave
fildll
mov
xor
adc
hlt
addr16
out
adc
ficomps
mov
imul
jge
pop
movlps
mov
pop
sub
push
adc
out
mov
ror
push
ljmp
inc
leave
ds
xor
mov
cmp
xchg
sub
lods
mov
pop
aam
adc
out
into
fldl
je
std
shrb
rorl
jge
sub
jl
adc
fldt
add
pop
xorl
fstl
sbb
xchg
or
push
mov
pop
cmpsl
push
sub
fistps
addr16
lods
cmp
mov
push
jae
cmpsl
pop
fbld
movsl
sbb
cmp
shrb
test
imul
sarl
fdivs
sahf
jne
pop
sub
sub
mov
sbb
xchg
jl
sub
movsl
ret
jle
push
pop
inc
jge
dec
dec
xor
and
imul
fwait
xor
jns
into
inc
pushl
loopne
inc
pop
iret
decl
insb
add
out
in
ror
addr16
out
xchg
out
aaa
dec
adc
fwait
push
lods
les
xor
sbbb
movsl
das
es
push
test
inc
fstl
int3
mov
dec
xchg
mov
rorb
mov
dec
or
xor
jbe
clc
ds
out
shr
daa
lcall
pushf
xchg
pop
dec
dec
and
push
pop
jmp
jl
cwtl
popf
sbb
jl
ss
loop
sbb
into
inc
lahf
push
and
cmpsl
mov
sti
in
xchg
mov
add
les
ret
mov
pop
jp
outsl
adc
cmpsl
cltd
and
aas
inc
loop
push
mov
leave
out
iret
xchg
hlt
lds
stos
jne
jno
pop
stos
adc
xor
cwtl
pop
dec
sub
push
testb
pushf
out
negl
fiadds
sbb
clc
mov
inc
jmp
jge
jno
icebp
fwait
mov
lods
lret
ljmp
iret
in
rolb
inc
js
sub
mov
xor
lds
adc
push
popa
jl
sub
imul
jnp
or
decl
mov
sbb
xchg
pop
ja,pn
adc
scas
mov
stos
sub
mov
sarb
js
add
xor
sub
lret
cmp
push
lods
mov
inc
mov
jp
into
fbld
lods
and
push
daa
dec
dec
and
jle
bound
sbb
test
or
nop
fiadds
inc
push
cltd
sub
cld
out
sti
cmp
fs
leave
sbb
push
pop
push
scas
outsl
in
mov
sub
decl
stc
xor
hlt
cmpsb
jmp
gs
push
clc
dec
pusha
imul
push
sbb
stos
and
js
fistpll
sbb
inc
jbe
add
adc
xlat
jb
sbbl
mov
inc
stos
mov
push
xchg
xor
mov
enter
pop
jb
imulb
gs
movsb
test
pop
mov
add
sbbl
pop
lret
jle
outsb
sbb
jp
jae
test
mov
lahf
test
outsb
and
jnp
ret
in
mov
xor
pusha
sbb
stos
cwtl
add
ja
dec
pop
shll
call
movsl
and
outsb
rcrb
hlt
and
jnp
fisttpl
cmpsl
sub
ja
addr16
int3
scas
mov
mov
sub
push
or
outsb
cmpsl
adc
dec
jbe
fldenv
sahf
ljmp
mov
out
jbe
or
mov
icebp
mov
adc
dec
stc
pop
pop
sub
ret
push
fwait
sbb
or
cmp
out
push
test
adc
and
xchg
dec
inc
push
addr16
mov
ud1
mov
scas
ds
adc
sbb
and
aas
lcall
fstp
out
cmpl
bound
out
loopne
xchg
adc
scas
xchg
add
sbb
jne
ds
scas
insl
scas
pop
sti
cld
add
out
and
aam
out
js
xchg
dec
jno
push
lret
pop
lret
add
addb
jp
xchg
push
stos
insl
mov
imul
mov
cmp
pop
ja
je
fwait
in
jmp
pop
pop
leave
xchg
add
cmp
mov
mov
adc
jle
pop
or
jge
sub
or
std
fwait
inc
push
ret
jo
movsb
cltd
call
add
push
dec
and
cmp
push
jmp
sbb
cmp
dec
out
jno
xor
sbb
scas
cmpb
push
bound
mov
lret
mov
adc
inc
jge
sub
mov
jno
int
push
mov
in
mov
add
scas
stos
movsb
pop
out
popa
fcmovbe
insb
arpl
jno
and
xlat
mov
add
xchg
mov
push
cwtl
mov
je
aas
leave
and
fsubs
dec
stc
clc
clc
fs
cmc
icebp
push
rcll
or
push
pop
inc
jb
fbld
stos
sub
shll
pop
push
jbe
and
into
addr16
cld
test
sti
je
pop
negb
inc
xor
dec
lock
xchg
aaa
roll
lret
mov
dec
xchg
jns
loope
lret
jmp
test
loop
xchg
les
sbb
sub
into
aad
std
std
mov
int
push
shlb
out
jno
mov
adc
mov
push
test
xchg
lock
inc
icebp
fadd
or
add
nop
scas
xor
or
sbb
xor
push
xchg
andl
cld
dec
sbb
and
int3
cmpsb
mov
shlb
pop
cwtl
mov
mov
dec
aas
inc
repnz
inc
int3
daa
stos
sub
mov
cmc
mov
add
mov
mov
in
test
mov
mov
push
movsb
mov
scas
in
inc
push
imul
add
clc
cmpsl
or
fldcw
fldcw
ret
push
add
outsl
stos
rcrl
inc
testb
call
mov
hlt
inc
mov
cmp
ret
dec
imul
cmp
mov
out
inc
mov
adc
push
mov
test
cmp
int3
xchg
xor
je
cmpsb
or
pop
or
xchg
jle
aas
jmp
and
jb
cmp
popa
add
adc
cmp
orb
cmp
or
fwait
clc
mov
jp
test
mov
push
push
into
jl
imul
jl
out
xor
inc
filds
loop
adc
sub
orb
pop
call
or
adc
xor
int3
stos
sahf
pop
adc
xor
inc
lretw
enter
lahf
jne
mov
insl
mov
ds
add
dec
lds
mov
fiaddl
add
mov
test
notb
sahf
push
pop
mov
cwtl
lock
add
mov
movsl
pusha
sbb
stc
lret
std
shll
rcrl
loope
out
jmp
or
push
pop
sub
jne
pop
dec
pop
mov
pop
sbb
outsb
add
xchg
sub
add
cmp
pop
or
jno
mov
cld
daa
xor
inc
popf
inc
aas
sub
sub
cmpl
sbb
sub
inc
push
pop
arpl
rcr
mov
sub
imul
imul
inc
pop
mov
je
inc
xor
into
and
xchg
or
idivl
xor
mov
icebp
lea
dec
push
jb
push
pop
mov
sti
sub
out
andl
cmp
cmp
cwtl
mov
mov
das
les
inc
daa
or
mov
shlb
cmc
pusha
insl
cmpb
scas
orl
jp
mov
jnp
sbb
jecxz
xor
filds
sub
imul
outsl
icebp
xor
push
push
add
cmp
mov
xchg
sbb
xchg
jno
lds
jmp
xor
mov
xchg
fwait
in
pop
loope
int3
cwtl
out
decl
shl
add
ret
test
jmp
cltd
mov
sbb
stos
sub
lahf
sub
adc
fstpl
xchg
test
je
dec
jo
inc
mov
push
lods
mov
aaa
push
pop
pop
cld
jge
cmpsb
xor
ss
and
popa
lcall
js
cmp
cli
mov
or
outsb
jae
dec
pop
sbb
adc
pop
jnp
imul
sub
pushf
mov
popa
enter
repz
cld
mov
data16
jg
fimull
repz
lods
scas
aas
cmp
sbb
scas
sub
cmc
ret
sbb
shll
iret
fbstp
pushf
sbb
test
dec
lds
lock
jmp
mov
jns
stc
add
xor
jge
mov
test
mov
or
icebp
push
add
rorl
jecxz
ja
jnp
sarl
mov
xor
xchg
jecxz
data16
jmp
movsb
or
orl
je
lret
inc
movsb
xor
lods
lea
test
add
jno
push
xchg
and
push
rcrb
enter
adc
push
hlt
mov
push
jne
repnz
ja
mov
lcall
jnp
mov
adc
setno
pop
std
out
mov
addr16
fcoms
xor
std
and
aas
sub
add
negl
or
clc
pop
push
jl
lahf
cmp
push
sub
repz
add
mov
mov
in
and
mov
xor
in
ja
test
sarl
or
subb
lahf
into
icebp
mov
mov
into
add
bound
les
dec
jne
cld
pop
push
sub
fmuls
sub
push
xor
inc
xchg
ss
sti
es
fcompl
das
adc
fisttpl
pop
fs
stos
pop
mov
mov
inc
gs
outsb
mov
cmp
and
xchg
mov
xor
jecxz
lahf
enter
sub
nop
cmpsb
sub
dec
ljmp
mov
loop
push
enter
or
or
popa
enter
xchg
sbb
int3
adc
and
xor
dec
clc
mov
hlt
inc
sbb
lea
add
cmp
stos
iret
mov
outsb
leave
mov
mov
int
iret
icebp
test
xchg
insb
xor
icebp
shrl
and
sub
rclb
push
sbb
or
dec
fildll
sti
push
or
xchg
nop
shl
sub
xchg
test
jecxz
filds
cmp
out
stos
sub
add
jge
not
sbb
pop
in
pop
out
or
and
out
cwtl
mov
shrl
cs
xor
mov
and
sbb
jno
sub
int3
mov
push
sbb
sahf
jns
cmp
or
or
enter
sub
popa
fistpll
inc
dec
fimuls
inc
xor
push
decl
fisubrs
int
fucomi
in
in
fwait
loop
xchg
xchg
push
inc
inc
push
and
stc
mov
inc
jecxz
das
dec
ficompl
mov
xor
jl
repz
xor
jmp
dec
loope
adc
mov
icebp
clc
or
imulb
arpl
xor
sub
les
repnz
shrl
cmp
stos
cmc
loope
push
out
mov
mov
xacquire
popa
jne
lods
add
adc
inc
fidivs
mov
or
or
mov
loop
scas
sbb
push
mov
dec
push
jle
adc
loopne
mov
stos
dec
ja
push
push
scas
hlt
cwtl
test
test
jnp
xlat
jne
xor
mov
pop
mov
imul
test
push
push
imul
adc
mov
or
scas
imul
cmp
cli
pusha
cs
xchg
pop
push
dec
inc
movsb
jne
loopne
pop
scas
xor
push
adc
sbb
icebp
sub
ret
and
fdivl
xchg
pop
adc
in
xor
and
fiadds
mov
push
sub
fs
fidivrl
and
fsubrs
jl
dec
mov
adc
pop
add
ret
jns
mov
stc
iret
or
in
mov
mov
fwait
jmp
leave
mov
add
outsl
xor
mov
cmp
push
mov
fstl
mov
cmpb
out
jmp
fiaddl
cld
cld
mov
cmpsb
pop
adc
in
cmpsl
jle
outsb
into
idivb
divl
xor
outsl
pop
pop
clc
mov
enter
aad
lds
push
insb
mov
sub
pop
xchg
cmp
pop
dec
fucompp
cltd
out
testl
pop
fldenv
std
jmp
cli
mov
or
mov
loopne
shr
mov
repz
mov
lret
jno
sub
call
mov
push
enter
sbb
sbb
pop
scas
out
add
push
fiadds
call
paddusb
fcmovu
int
mov
fdivrl
or
jb
jg
cmp
jae
cmpsb
scas
mov
cmpsb
xchg
adc
insl
loope
mov
mov
pop
or
jge
fcom
jbe
movsl
nop
cmp
jo
mov
fmuls
repnz
mov
enter
stos
push
fst
test
fwait
push
sbb
or
repnz
sub
fisubs
lock
rcll
or
bound
stos
cltd
int3
adc
xchg
mov
xor
js
jne
fwait
xor
xor
insl
and
mov
out
mov
pusha
dec
or
xor
mov
inc
aad
pop
lret
test
mov
cmp
jge
mov
mov
lcall
push
and
lods
movsb
out
pop
ljmp
mov
sti
push
mov
adc
sbb
int3
add
add
add
pop
xor
repz
adc
test
mov
mov
pop
dec
ret
push
shlb
xchg
dec
lret
adc
push
popf
test
cld
out
orb
pop
adc
sbb
addr16
push
or
or
dec
out
ficompl
add
fcoml
dec
and
mov
push
jmp
sub
add
out
repnz
pop
into
xlat
and
mov
cmp
mov
ret
rclb
or
xor
insl
jecxz
mov
aad
push
cs
mov
xchg
and
mov
push
dec
push
imul
js
rcrb
insl
and
stos
dec
movsl
ds
inc
mov
mov
ror
cs
stos
adc
ret
pusha
test
cmp
push
sbbb
ljmp
and
xor
add
js
jecxz
mov
enter
call
fsubr
inc
mov
andl
test
pop
push
add
mov
test
or
xor
ja
cmp
sarl
scas
jecxz
add
mov
test
lret
ficoms
and
testb
mov
add
ljmp
push
jne
adc
push
lahf
aaa
xchg
inc
enter
xchg
arpl
sbb
sub
cmp
imul
stos
xchg
mov
sbb
not
shll
cmp
sti
sbb
fsubr
loopne
dec
jo
mov
xchg
push
jno
push
lock
lahf
and
rol
mov
ret
xchg
call
stc
inc
cmp
adc
pop
shll
aas
aam
loopne
pop
mov
cmpb
or
movsb
push
inc
xchg
rorb
fsts
pop
mov
sub
sub
frstor
rol
pop
shrl
jb
mov
dec
and
xchg
popf
inc
ljmp
jp
xchg
jmp
adc
test
sbb
or
xor
mov
sub
sub
lea
scas
dec
fdivl
cs
jle
mov
pop
adc
sub
mov
mov
fdivrs
mov
mov
sbb
dec
lahf
sub
push
shrb
repz
stc
jae
and
mov
adc
sbb
sbb
daa
xor
dec
cwtl
cmp
andl
and
add
xchg
mov
mov
sbb
add
lock
pop
mov
aad
mov
in
mov
imul
add
fstpt
test
push
cmp
repz
int
test
movsb
fistps
sbb
xor
xchg
negl
clc
bound
out
bound
jg
xchg
xor
mov
mov
inc
js
fsubs
xchg
lods
dec
pop
test
ror
xor
jne
out
out
je
outsl
ds
or
shlb
cmc
mov
dec
jns
mov
repz
out
and
jno
ret
xchg
dec
in
lock
lahf
xchg
rorl
and
jl
pop
push
test
fisubs
mul
test
pop
or
icebp
pop
out
enter
cltd
xchg
push
cmp
cld
movsb
imul
stc
cmc
mov
xchg
sti
cwtl
lock
cli
mov
push
xor
xchg
add
fwait
mov
data16
pop
cmp
iret
mov
lea
fisttpl
jl
mov
and
lods
mov
cmc
shr
add
cmp
bound
sub
push
cs
jns
dec
mov
jns
sbb
mov
jp
mov
test
lahf
pop
std
xchg
push
push
outsl
push
and
jns
pop
sti
pop
add
mov
xchg
jnp
lret
in
and
lret
xchg
and
out
fbld
mov
cmp
sbb
stc
cwtl
mov
mov
sbb
push
into
stos
nop
cld
call
fmuls
jo
xor
dec
mov
lods
js
jecxz
jb
add
cmpl
push
mov
sub
push
js
adc
aaa
and
lea
ja
mov
mov
mov
es
push
cmp
jge
cmp
add
icebp
add
push
lahf
xchg
jmp
pop
pop
and
xor
xor
stos
cmp
xchg
mov
ja
aaa
jmp
xor
jp
lods
adc
popf
cmc
adc
xchg
cmc
fwait
movsl
loop
cmpsl
dec
jbe
sarb
aad
imul
and
pushw
add
mov
xor
ljmp
leave
inc
sbb
lods
pop
add
insb
scas
xor
aas
lahf
in
xchg
push
iret
rcrl
sub
testb
and
push
pushw
xchg
pop
flds
ss
jg
scas
ds
mov
aad
jno
inc
lds
lret
xchg
movb
inc
dec
in
int
mov
sbb
fstpt
sub
mov
addr16
pop
cmp
lds
mov
lods
aad
fimull
hlt
or
popf
mov
leave
ljmp
fisttps
data16
loopne
jle
mov
xchg
inc
push
lods
dec
in
adc
push
dec
lcall
repz
and
xchg
je
cmp
sbb
aad
jg
mov
jno
lods
cmp
sbb
add
lods
cltd
or
gs
xchg
inc
jae
mov
mov
dec
lea
adc
insl
lods
jo
jg
jbe
lcall
sub
iret
push
mov
add
mov
dec
stos
jbe
add
jae
hlt
jno
and
sbb
mov
pop
negb
incl
and
and
mov
cmp
loope
sub
xchg
mov
push
sbb
fidivl
loope
mov
cmp
sub
sbb
icebp
out
subb
out
mov
fisttpl
jg
lods
je
pop
sub
insb
cmp
insl
scas
sub
adc
sub
rclb
add
rcll
or
xchg
adc
orb
push
in
sahf
cmc
pop
push
rorl
add
or
adc
scas
or
sub
mov
aas
aaa
mov
pop
jl
mov
cwtl
loope
lahf
xor
mov
loope
js
mov
jp
or
ret
aaa
into
mov
jg
push
dec
stos
ret
das
and
adc
test
jecxz
cmp
push
test
push
into
enter
addr16
or
scas
cmp
or
fildll
xchg
imul
movsl
les
xchg
ljmp
arpl
cli
pop
bound
enter
mov
aam
cmp
pop
or
push
daa
cmpb
stc
jl
lds
sbb
jnp
sbb
sbbl
dec
sub
pushf
adc
shlb
repnz
add
arpl
pop
sub
xchg
inc
pop
sbb
add
mov
fimuls
out
fwait
bnd
mov
and
jmp
mov
andl
adc
addr16
hlt
js
insb
cmp
pop
or
mov
cmp
rcr
movsl
adc
arpl
aas
loopne
stos
and
adc
xor
daa
mov
and
imul
push
or
cmp
fsubl
add
popa
sar
cltd
lret
inc
movsb
pusha
lahf
or
daa
cli
sarl
add
out
cmpsb
fmull
jb
imul
test
ror
add
jae
in
iret
jl
push
fs
lock
mov
shl
inc
sub
jb
fbld
cmpb
stos
dec
sbb
jae
dec
sub
cs
mov
xchg
cli
sbb
add
out
outsl
jno
dec
inc
jge
vpaddd
push
jb
sbb
adc
mov
gs
mov
inc
adc
mov
or
stc
adc
stos
xchg
insl
xor
call
and
jo
inc
imull
inc
movsl
pop
pop
int
fidivrs
scas
jp
sub
inc
push
hlt
sbb
dec
dec
add
fnstcw
loope
stos
add
jg
leave
and
data16
jl
rorb
sbb
rcll
in
in
adcb
jo
jns
inc
into
mov
es
lahf
inc
leave
fmul
or
jge
dec
mov
ss
jg
mov
in
mov
push
cmp
inc
es
out
inc
pop
daa
andl
adc
addr16
mov
jecxz
xchg
je
inc
ljmp
push
push
lcall
jbe
aam
fsincos
pop
lea
aam
aad
sti
cltd
js
xlat
fsubr
jge
adc
test
int
sar
lea
inc
dec
xchg
push
sahf
jg
outsb
mov
ret
repnz
shrl
mov
cmpsl
adc
sub
mov
les
pop
mov
push
or
mov
add
adc
stos
jae
cmp
das
push
push
cvtps2pd
stc
push
sub
xor
cmp
je
das
mov
addr16
addr16
stos
xchg
popf
lock
lock
adc
pop
pop
push
adc
shrl
add
cmp
push
and
cmp
int
mov
shrb
mov
jno
nop
lea
mov
dec
scas
dec
push
pop
lret
sub
sbb
movq
into
push
int
and
fdivrs
xor
gs
stc
mov
fnsave
cmp
in
lock
mov
jbe
xor
loop
cmp
aad
mov
or
in
popf
imul
jl
push
sub
shrd
imul
pop
iret
std
pmaddwd
rol
xlat
inc
dec
in
in
call
cwtl
std
inc
pop
lcall
and
pop
in
xor
aas
cwtl
cmp
mov
cli
in
cmp
adc
jecxz
cld
out
dec
sub
push
mov
push
lcall
mov
jle
jecxz
adc
cwtl
in
xor
mov
xor
sub
pushf
adc
cmp
les
mov
mov
cld
gs
notl
fsubs
pop
das
or
fnstcw
insb
adc
lods
xchg
lods
imul
xchg
pop
shr
dec
sbb
notb
xor
fwait
in
mov
xchg
rcl
dec
or
cmc
and
lods
sbb
inc
pand
out
pusha
rcrb
pop
sbb
andl
xor
sub
mov
pusha
fwait
jne
addr16
push
inc
lock
push
xchg
in
subl
push
jge
int
and
cld
dec
mov
iret
sbb
adc
out
popa
push
ds
cli
jae
dec
imul
pop
inc
inc
add
loope
icebp
xor
mov
test
push
cmpl
insl
inc
xchg
out
xlat
and
mov
push
lret
xchg
lcall
pop
sub
insl
aaa
arpl
loopne
out
push
adc
mov
sahf
adc
jb
pop
mov
xchg
sub
loope
xchg
cwtl
in
in
sbb
in
sub
pop
xchg
ds
clc
les
int
fdivs
pop
and
and
mov
jmp
adc
pushf
insl
push
sub
out
push
fcompl
ds
ja
or
jecxz
stc
push
xor
repz
test
std
dec
in
mov
sub
and
sbb
xchg
xlat
inc
sahf
pop
cld
mov
jg
aas
nop
sbb
inc
xor
or
push
sbb
js
mov
dec
es
xor
addr16
insl
or
mov
cmpsl
loop
dec
cwtl
sub
inc
pop
ss
or
mov
sbb
fs
daa
mov
pusha
xchg
push
loope,pt
int
js
xchg
aaa
push
sub
clc
shl
pop
insl
cwtl
repz
push
popa
inc
cmp
dec
enter
lods
push
dec
fstpl
jecxz
or
mov
in
jne
xor
jns
fdivr
insl
sbb
dec
rclb
push
scas
cmpl
mov
punpckhdq
pushl
mov
push
jge
cmp
popf
cltd
lock
adc
rclb
push
fildll
jg
mov
mov
mov
int3
cmpsb
lret
repnz
adc
sub
xchg
stc
push
sub
ficompl
cs
pop
xchg
mov
int3
add
out
fldln2
shlb
xor
dec
cmc
int3
push
inc
rcl
das
ljmp
sub
das
out
mov
jmp
mov
in
and
leave
inc
push
test
jnp
pop
pop
push
xchg
roll
push
aam
push
sbb
lods
cmpsb
push
inc
loop
nop
int
insb
add
iret
pop
test
mov
jae
hlt
push
push
inc
cmp
repnz
and
vrcpss
or
pop
and
orb
cmc
je
out
loop
cld
insb
add
xchg
rcrb
stc
imul
and
sub
fcompl
rorl
arpl
rolb
mov
jb
icebp
push
je
andb
inc
fisubrl
cmc
cmp
scas
popf
sbb
pusha
mov
jecxz
addl
mov
add
adc
jo
orb
jg
or
or
int3
int3
jns
call
or
loopne
enter
aaa
popa
mov
unpckhps
xchg
lcall
subb
fdivl
sti
inc
mov
pop
xlat
pop
mov
sub
movsb
add
dec
in
sarb
mov
add
cld
ficomps
mov
lods
mov
inc
fucompp
push
ret
stc
jg
ja
pushf
std
xor
vminps
fst
lahf
or
xchg
test
mov
mov
and
inc
mov
mov
clc
les
jl
lret
jns
mov
inc
neg
pop
and
in
inc
mov
adc
cmp
aaa
cs
js
fs
stos
movsl
scas
jge
jmp
fildl
repnz
mov
stos
out
je
push
insl
mov
inc
shrb
or
out
in
pop
scas
loopne
pop
popf
push
out
mulb
test
leave
es
jne
or
lods
nop
aas
rcll
cmc
or
mov
jecxz
mov
fnstenv
adc
cld
aad
faddl
mov
add
mov
hlt
dec
enter
mov
aam
test
sub
xchg
or
scas
ret
pop
push
mov
pop
or
fldcw
sub
xlat
jnp
add
fimull
sti
xchg
add
lods
inc
scas
pop
dec
mov
dec
in
lret
add
dec
push
or
xchg
fwait
psrad
lea
xchg
dec
jns
or
fstpt
push
inc
push
mov
rorl
cs
nop
call
and
ss
ss
inc
jg
pop
lret
clc
add
jnp
push
test
lods
add
outsb
adc
mov
into
mov
add
xor
mov
imul
movsb
push
jecxz
loope
testl
fchs
push
fcomps
popa
pusha
int3
xchg
fucomip
fisubs
ds
in
ret
rcrl
jge
lods
push
aam
mov
xchg
into
cmpsb
in
lret
push
xor
js
inc
mov
or
and
mov
sbb
and
mov
aas
aaa
inc
and
je
xorl
and
cmpsl
addr16
subl
lock
pop
adc
test
rorb
outsb
push
sbb
pop
sbb
int
jmp
fisttpll
and
lcall
mov
push
js
cmc
fs
aas
lret
into
inc
pushf
add
adc
je
loop
sbb
imul
inc
mov
mov
popf
stos
jb
dec
mov
ret
rclb
xor
movsb
pop
ficoms
cmp
mov
inc
push
and
aas
pushf
or
idivb
cmp
insb
data16
push
stos
js
mov
out
adc
sbb
xchg
sub
adc
mov
std
push
push
mov
push
aad
mov
test
mov
popf
mov
and
jmp
loop
mov
fcoml
or
es
lods
stos
or
sbb
lcall
clc
popa
and
dec
and
test
out
xchg
sub
insb
pop
or
pop
into
movsl
imul
xchg
movsl
pop
add
push
test
sub
repz
jge
negl
das
lret
sub
mov
fimull
jb
fcmovnbe
xchg
sub
lahf
pusha
ds
mov
mov
aaa
fistps
ja
inc
and
xchg
idiv
pop
mov
pop
fxch
ja
das
pop
pop
and
fisubs
jle
loop
into
inc
dec
push
jo
and
sbb
adc
stc
stos
loopne
popa
sbb
je
daa
imul
push
jmp
jnp
xchg
ret
lret
outsl
je
jp
shrb
imul
mov
jle
lcall
mov
outsl
sbb
pusha
pop
aas
fcompl
outsl
cwtl
or
lret
fidivrs
lcall
wbinvd
mov
or
mov
stc
imul
mov
sub
jle
sbb
jle
gs
pop
mov
add
add
push
daa
mov
xlat
fdivrp
xchg
pop
mov
sar
gs
pop
sbb
lods
test
sub
mov
fstpl
push
insb
insb
pop
rol
inc
xchg
mov
fstl
ficoms
adc
int3
push
mov
dec
stos
lods
popf
jae
ja
xchg
rol
push
mov
repnz
pop
dec
lds
push
test
testb
add
imul
and
loopne
mov
cli
fnstenv
pop
out
call
scas
repnz
xchg
mov
mov
push
and
add
inc
cmpsl
pop
into
stos
ss
mov
inc
aas
or
jmp
in
sarl
jae
dec
cmpl
fst
or
es
and
loope
aam
pop
push
jl
scas
filds
push
pushl
test
xor
or
mov
ljmp
lods
jbe
orl
iret
push
divl
lahf
out
movsl
bound
dec
addl
test
jl
mov
test
mov
sbb
bound
jno
mov
pushf
stos
push
out
cmp
cmp
aaa
or
mov
fdivl
mov
dec
mull
jo,pn
push
lock
jg
or
fmul
dec
mulb
sbb
mov
jl
push
mov
fisubs
cld
inc
jbe
mov
mov
inc
mov
xchg
jge
data16
and
mov
in
out
fsubs
lods
popf
movsb
mov
in
mov
cmp
xor
cltd
adc
and
jo
ret
sbb
fs
mov
imul
popa
adc
in
sub
int3
jle
push
jg
pushf
jle
sti
jnp
push
inc
lcall
cmp
dec
jl
pushf
cs
adc
sbb
xor
add
mov
stc
adc
cmpsl
out
mov
adcb
sbb
pushf
popf
in
or
je
mov
mov
xchg
fstpl
lret
fnsave
push
sub
sbb
aas
xchg
adc
call
rep
andl
stos
pop
psubusw
sub
fcompp
dec
inc
cmp
ret
add
aam
sbb
sahf
push
adcl
mov
pop
rcr
mov
out
mov
lods
call
or
cmp
loopne
jo
mov
add
mov
ja
leave
repz
pop
xchg
lcall
repz
mov
insl
pop
int
add
pop
xchg
test
mov
loopne
sub
push
cmc
cs
add
lret
leave
cmp
adc
or
inc
jg
into
xchg
fnstsw
test
xchg
pop
pop
out
add
cld
movsb
cltd
or
jl
sub
xchg
scas
call
push
andb
aad
add
jmp
add
push
test
imul
mov
rcr
lods
test
cwtl
insb
or
push
push
xchg
xchg
test
push
in
xor
sbb
ljmp
ja
xchg
aaa
xchg
das
out
sahf
jmp
cmp
inc
mov
fildl
jne
cli
xchg
sbb
loop
aas
pop
lret
daa
pop
jge
aaa
mov
push
mov
and
fidivrl
pop
pop
dec
outsl
inc
int
sti
jl
push
jno
adc
shr
add
cmp
push
push
mov
sub
sub
mov
xor
dec
cmpsl
sarb
mov
fstpt
add
or
daa
and
xlat
sahf
std
cmpsb
int
add
xchg
imul
mov
in
shll
or
xchg
gs
cltd
xor
push
addr16
mov
adc
dec
shr
push
mov
xchg
inc
add
xlat
adc
je
mov
fwait
jl
dec
popa
push
lods
rcrl
jnp
adc
aad
in
adc
in
out
mov
pushf
rcrl
or
movsl
ss
fiaddl
mov
shlb
stos
mov
sbb
fildl
jl
inc
inc
jne
push
sbb
loopne
xor
sti
cmp
xchg
pop
xchg
in
pop
aad
ss
imul
dec
adc
xor
outsl
mov
xchg
je
jne
xchg
and
test
xchg
mov
and
mov
shlb
dec
sub
loope
es
aas
push
or
cmp
pop
jmp
or
push
dec
and
push
inc
mov
sbb
sbb
adc
xchg
xor
fidivrl
mov
lret
mov
ficoms
mov
fdecstp
xchg
jo
scas
pop
rolb
jb
nop
das
fcoms
dec
jbe
mov
mov
or
repz
push
nop
push
mov
jb
scas
and
sti
inc
xor
in
cmp
mov
das
jge
fistps
add
xor
dec
add
jb
fcoml
mov
mov
mov
stos
xchg
push
pusha
mov
or
and
movsb
jnp
adc
add
sub
stos
dec
fdivp
sub
clc
cltd
adc
in
in
in
cli
cs
movsl
lret
test
stc
or
mov
xchg
mov
cmp
inc
add
push
add
adc
shr
cld
ss
test
and
mov
pop
leave
lea
mov
fwait
insb
movsb
test
test
test
mov
xchg
in
scas
pusha
jns
outsl
mov
ja
sahf
daa
mov
inc
pushf
push
loop
cmp
repz
out
pop
push
aas
push
outsl
jmp
mov
imul
push
test
lock
xor
sub
js
fmuls
cmp
pop
xor
divl
mov
insb
lcall
or
outsl
jge
cmpb
js
repz
mov
xlat
sub
sub
cmp
les
pop
ret
cld
jnp
subb
mov
xchg
mov
scas
shl
loop
mov
inc
pop
mov
aam
scas
dec
ja
sbb
cli
cwtl
sub
cs
xchg
mov
and
fs
xor
dec
imul
mov
and
xor
add
loope
arpl
xchg
ds
insl
movsw
add
cld
mov
sub
and
stc
push
test
aas
xor
xor
lcall
push
andl
add
adc
insl
adc
int
jp
out
add
jle
daa
mov
pop
xchg
mov
inc
or
int
adc
push
or
sbb
xor
adc
mov
pop
fstpt
loop
jmp
in
stos
dec
hlt
or
inc
jbe
jb
or
jmp
mov
iret
cmpsb
add
fwait
imul
ror
mov
aam
ficomps
jno
jns
or
xchg
adc
jle
orb
xor
xor
fcomip
aam
push
xlat
fadds
adc
shrl
or
xchg
fcoml
mov
dec
dec
in
lock
pushf
sub
fbstp
loopne
mov
insl
sahf
pusha
adc
std
push
je
ret
cmpsb
dec
jl
lret
mov
repz
movsl
add
add
jg
imulb
in
push
cmp
imul
xor
jnp
cwtl
pop
negb
sub
xchg
ja
push
xchg
std
fldl2e
mov
lds
outsb
mov
xchg
adc
popa
mov
nop
push
cmp
and
cmp
out
add
mov
imul
loope
mov
cmp
les
cwtl
mov
dec
push
adc
das
xor
lock
das
int3
xor
mov
push
xlat
adc
test
movsb
mov
jl
in
ss
xor
mov
sti
test
sahf
push
xchg
subb
roll
rcrl
dec
ret
fdivrs
stos
test
xor
insb
cld
stos
jo
inc
clc
rolb
in
stos
fidivrs
lea
xchg
add
pusha
lods
ja
imul
inc
cmp
add
or
fnsave
pop
ret
call
lock
out
mov
sub
or
mov
pop
imul
frstor
mov
push
repnz
adc
cmpsb
fsubl
sahf
fstps
push
jno
xchg
mov
or
pop
imul
or
mov
loopne
out
push
add
xchg
pop
outsl
mov
add
lahf
sub
xor
rclb
aas
arpl
jecxz
aam
nop
inc
outsl
insl
mov
mov
mov
mov
mov
mov
jne
test
and
rcll
aad
jnp
in
xlat
frstor
pop
jg
dec
mov
outsl
xchg
leave
and
add
cmpsb
subl
or
and
mov
ss
or
sub
mov
sub
push
inc
xor
push
call
push
mov
imul
push
pop
cmp
cli
mov
xor
adc
jmp
pop
pop
adc
jne
or
ljmp
xor
push
mov
sbb
push
adc
shll
cmp
jle
sbb
scas
pop
push
xor
icebp
mov
fs
xor
jmp
sbb
jecxz
xchg
sbbb
or
adc
and
shlb
sub
mov
mov
in
pop
cmpsl
jmp
mov
iret
cmovne
sub
loope
mov
jg
adc
nop
aam
jae
push
xor
lds
movsb
mov
add
fcmovne
out
clc
outsl
push
mov
dec
adc
inc
jo
insl
mov
sub
or
pop
in
xor
je
lcall
add
push
gs
cmp
or
dec
push
inc
mov
and
mov
dec
cli
aad
mov
mov
xchg
xchg
jmp
mov
int3
insw
lret
mov
test
mov
mov
mov
dec
pushf
sahf
cmpsb
fcmovnu
push
das
in
mov
sub
add
hlt
mov
push
stc
lret
and
mov
cmpsb
mov
lock
aam
push
add
push
xor
cltd
mov
shlb
in
out
in
inc
xor
cmp
jge
repz
sbb
aam
sbb
jns
neg
inc
jmp
sbb
xor
pushf
das
pop
mov
sbbl
sub
rol
mov
and
out
imul
in
movsb
shlb
adc
mov
sub
jnp
sbb
jl
mov
jle
sub
add
lock
clc
sub
xor
ljmp
rcr
fcoml
dec
aaa
mov
mov
insb
mov
xchg
mov
mov
punpcklwd
fsts
ud2
int3
data16
xchg
lds
or
jo
aas
mov
in
gs
movsb
sub
or
or
fmul
mov
mov
lock
test
enter
testb
popf
mov
inc
push
add
test
fsubrs
cli
cmp
fadd
dec
arpl
adc
bound
xchg
pop
mov
jle
jae
std
in
xchg
in
aad
cmpsb
mov
leave
jno
xchg
and
cmc
and
jns
mov
push
cmp
add
jo
call
pop
lret
sbb
test
xor
jecxz
iret
mov
push
push
jne
inc
mov
stc
popf
insl
add
mov
mov
shl
mov
mov
lds
or
and
inc
inc
jmp
pusha
sbb
sub
or
or
aam
js
adc
xor
js
rclb
xor
add
lret
dec
gs
pop
xchg
xor
test
sub
aam
push
movsl
adc
in
adc
dec
scas
pop
movsb
lret
orl
jns
push
or
and
push
gs
or
inc
orb
cmp
lcall
or
imul
mov
mov
inc
pop
xor
nop
int3
pop
push
jno
shlb
roll
es
mov
pusha
iret
xchg
lods
pushf
sub
pusha
pop
xor
popa
fucom
shll
push
fsubl
add
aaa
insl
mov
xor
stos
mov
and
xor
jne
inc
push
aas
fistps
push
enter
mov
jg
push
nop
rolb
fsubl
ds
cli
mov
or
ret
mov
mov
push
xor
std
xchg
test
imul
inc
jae
push
stc
jno
movsb
lods
mov
dec
inc
outsl
xor
mov
fistl
mov
cs
inc
add
test
fmul
fidivrl
scas
cmpsb
mov
cmpl
repz
das
jb
dec
gs
inc
adc
test
fnstsw
movsb
shr
addr16
test
sbb
lret
pop
pop
ljmp
scas
dec
jecxz
push
gs
xchg
push
pop
test
lret
jp
mul
inc
jle
bound
call
nop
imul
sub
jge
popf
clc
cltd
roll
fiadds
inc
mov
jge
into
jo
and
xchg
shr
std
cmp
test
ret
dec
jno
mov
std
cmp
imul
scas
dec
out
pop
in
fidivrs
mov
mov
ficomps
testb
adc
jnp
sub
or
out
nop
sbb
std
lds
dec
cmp
test
mov
xor
jns
pop
test
cli
movsl
mov
xor
push
add
das
adc
mov
inc
xor
fs
mov
jae
fsubs
fsubs
fmul
cmpsl
test
loopne
sbb
or
jae
pop
xor
dec
aaa
pushf
and
into
jg
jnp
pusha
in
lea
and
lret
insb
push
inc
cltd
pop
pop
pop
cmp
out
fdivrl
pop
inc
jo
nop
aad
jl
mov
shlb
adc
push
movsl
nop
push
insb
pop
out
mov
in
xrelease
pop
lahf
push
sub
xchg
inc
add
cmpsl
in
pop
adc
xchg
pop
jae
lret
std
loope
sbbl
sub
pop
mov
sub
dec
or
or
mov
xor
loopne
xchg
pop
jle
cmc
xor
or
jmp
xrelease
pop
adc
mov
dec
cmp
fiadds
mov
pop
dec
cmp
xchg
iret
inc
sbb
push
clc
dec
push
push
fucomp
cmp
pop
call
rorb
movsl
push
jg
popa
push
xchg
dec
cmovl
out
ds
cs
in
xor
and
outsl
push
arpl
sub
outsb
pop
dec
mov
fdiv
dec
push
fs
jmp
pusha
and
lods
dec
popf
mov
sbb
mov
mov
adc
adc
pop
popf
je
mov
mov
mov
push
jle
add
dec
movsl
push
scas
sbb
rorb
stos
sub
fdiv
inc
rolb
fadds
cwtl
pop
mov
jbe
mov
out
stc
push
add
pop
in
adc
inc
dec
xchg
scas
mov
push
push
rcrl
cld
mov
fmull
mov
test
pusha
adc
fdivrl
subl
inc
sub
mov
push
sub
ret
xor
adc
inc
mov
mov
pop
adc
mov
mov
jle
not
loopne
and
jb
fstl
sub
icebp
lret
fcmovbe
dec
pop
movsb
mov
test
pushf
push
pop
xchg
xchg
jbe
add
lret
hlt
ja
mov
pop
je
pop
jge
push
and
mov
inc
mov
mov
icebp
add
push
lods
or
jle
xchg
adc
out
cmp
adc
dec
stos
pop
dec
sysexit
and
loope
push
and
add
daa
int3
sahf
or
cs
push
mov
sbb
jp
mov
sahf
pop
pop
shll
repz
data16
insb
fsts
mov
leave
cmp
push
sub
jbe
dec
adc
in
lods
cs
sub
push
dec
rep
ss
pop
and
fsubs
sbb
xchg
xchg
hlt
jns
pop
adc
xor
push
dec
popf
mov
xor
roll
push
leave
imul
xor
fisubrl
sub
cmpsl
dec
mov
cld
mov
sub
sti
add
dec
or
hlt
stos
pop
jo
mov
push
sbb
sti
addr16
mov
call
cs
jno
lods
mov
xchg
push
out
je
lods
or
lods
arpl
mov
and
adc
push
repz
and
and
rcll
add
fildl
xor
push
mov
iret
fmuls
and
loopne
stos
and
dec
addb
cwtl
cld
sbb
in
sbb
clts
aas
mov
icebp
sbb
fidivrs
add
lods
fbstp
bound
dec
insb
divb
push
lret
test
cltd
scas
movsb
mov
xchg
xchg
xchg
mov
fistpll
add
cwtl
mov
call
xor
push
leave
cli
pop
push
add
push
imul
inc
lock
xchg
addr16
outsb
pop
sarb
jmp
cwtl
push
js
data16
cwtl
jns
jge
mov
inc
xchg
adc
jge
jb
gs
add
push
push
or
jne
ja
pop
aad
mov
sub
repz
mov
push
das
dec
shlb
cmpsl
add
push
xor
pop
dec
cli
negb
lods
in
sbb
arpl
cmp
cltd
int
xor
and
jge
addl
rcll
adc
push
xchg
mov
and
arpl
orb
cli
mov
daa
jo
mov
in
insb
or
jp
jl
rcr
cmp
inc
mov
cmp
add
pop
out
movsl
pusha
xchg
jbe,pt
mov
je
arpl
xchg
sahf
jb
sbb
mov
rcrl
or
push
add
iret
inc
push
ficompl
ss
push
pop
push
arpl
cld
push
fdivl
ret
xchg
les
movb
xor
push
mov
push
push
mov
pop
add
and
cmpsl
bound
cs
jmp
sbb
cmp
dec
jecxz
or
mov
jg
xchg
cltd
mov
mov
push
dec
or
and
jecxz
aas
inc
xchg
mov
outsb
dec
cmp
and
popa
je
cmp
mov
adc
and
insb
out
rcrb
xchg
das
pop
xchg
dec
push
gs
add
jb
xchg
or
sub
xor
xor
dec
and
fdivp
movsl
cmp
in
nop
xchg
mov
roll
mov
or
ss
test
cmp
ja
push
fdiv
bnd
inc
and
nop
fs
out
leave
mov
rcll
mov
adc
mov
cmpsb
insl
pop
xchg
cmpsl
testl
mov
pop
repz
daa
movsl
and
mov
dec
jb
and
sbb
pop
xlat
data16
imul
loop
and
movsb
repz
out
insl
add
jnp
scas
mov
or
pop
mov
scas
ja
xchg
adc
jo
pop
or
dec
cmpsb
sti
mov
data16
mov
popf
sti
outsl
rcrb
mov
cwtl
inc
jge
lret
popf
cs
in
in
mov
in
cmp
mov
push
jle
jnp
adc
xchg
jns
call
in
je
add
shl
inc
mulb
and
out
jge
xchg
cltd
jmp
xchg
outsb
das
push
inc
jge
xor
and
lret
mov
xchg
push
sub
push
imul
test
mov
inc
jne
jmp
push
hlt
shld
or
popa
inc
sub
pop
aas
xor
insl
aas
cmp
dec
jmp
push
bnd
fdivrs
es
jae
std
jns
mov
sub
cmp
daa
pushf
and
in
push
ja
negl
movsb
mov
dec
xchg
shrb
add
ja
mov
shll
pop
xor
cld
cmp
adc
mov
jle
shrl
cmp
push
lock
pop
pop
fs
jns
int3
add
mov
sahf
mov
cmpsb
sti
cmpsb
pusha
sub
add
mov
in
hlt
aaa
pop
loop
push
loopnew
sub
sbb
xchg
sub
xchg
imul
popa
and
mov
lret
rclb
rorl
testl
fimuls
pop
mov
fcoms
mov
icebp
or
js
cltd
lea
mov
xor
mov
jg
fmull
ret
icebp
aas
pusha
dec
pop
jae
and
push
ljmp
pop
or
lret
pop
push
fcos
dec
dec
shlb
mov
sub
scas
and
mov
lock
mov
sbb
in
inc
insb
mov
jb
in
cmp
ret
lahf
add
shrl
mov
pop
or
out
mov
out
in
mov
mov
mov
jbe
or
sbb
jae
mov
mov
mov
push
imul
xor
stos
push
or
pop
lcall
int
gs
outsb
dec
mov
ljmp
xchg
adc
inc
push
inc
ja
xchg
repz
pop
add
or
mov
or
jbe
inc
scas
call
pop
push
dec
dec
mov
and
icebp
xor
jb
push
push
mov
fnstenv
inc
enter
into
out
fsub
inc
cwtl
fimuls
in
xchg
mov
cli
jmp
mov
sbb
dec
add
ret
pop
mov
xorb
and
dec
aam
push
xchg
pop
dec
push
nop
cmp
mov
dec
out
stos
rcrb
lods
adc
leave
jl
cmc
in
sbb
fnsave
cmp
sbb
mov
std
cld
jo
mov
push
sbb
xchg
test
lret
cwtl
cmp
or
sar
lret
sbb
or
push
out
xrelease
pop
push
push
xchg
aam
xor
sbb
rorl
sub
pop
dec
pusha
pop
jmp
mov
pop
repnz
or
mov
push
jb
repnz
call
pushf
test
jl
fdiv
scas
cli
pop
sub
add
jno
push
dec
not
popf
sub
sbb
cmc
pop
push
pop
dec
iret
jb
shrl
dec
popf
dec
test
call
das
cmp
xor
test
sub
sbb
test
sbb
insb
xlat
lods
push
jbe
or
sub
aad
divl
pop
fstl
adc
jb
add
aaa
mov
adc
push
xor
pop
push
repz
shlb
jb
dec
ja
push
xchg
hlt
notrack
xchg
or
push
scas
dec
out
dec
je
sbb
xchg
jg
sub
or
out
cmpsl
repz
jb
inc
inc
mov
jmp
or
in
and
and
pop
jg
aad
pop
and
bound
pop
pop
xchg
add
mov
fsubl
pop
adc
mov
jmp
and
sahf
add
filds
push
jnp
call
hlt
mov
xchg
inc
cmpsb
mov
dec
repnz
xchg
call
sarb
mov
sti
dec
fsubrl
clc
xor
jge
and
xor
lock
mov
int
test
jg
movsb
sub
mov
mov
sti
les
jne
sahf
mov
cmp
repz
mov
loop
cmpsb
mov
cmp
das
pop
rorl
jle
lods
xlat
test
push
add
pop
xor
jae
test
addl
inc
aam
ja
xor
xchg
add
xchg
sbb
ret
push
rcr
cmp
push
in
loope
adc
cmp
pop
cmpsb
lock
sarb
mov
ret
in
ret
or
fs
mov
jae
cmp
subb
push
sahf
mov
pushf
cwtl
sub
incl
adc
hlt
ss
stc
push
pop
mov
inc
in
data16
cmp
mov
sahf
mov
das
jne
fs
inc
cmp
xchg
test
xor
popa
push
jbe
sbb
icebp
lret
mov
or
clc
push
js
dec
add
mov
xchg
fsub
adc
mov
inc
hlt
shl
add
pop
fwait
lret
jbe
fsubr
adc
jns
test
cmp
inc
push
xor
lds
dec
in
fwait
cmp
outsb
or
adc
and
outsb
out
inc
sub
dec
testb
sub
add
outsb
xor
xchg
cmp
push
add
dec
adcb
inc
cmp
pop
pusha
subb
outsb
rcll
fistpl
dec
or
sub
dec
aaa
push
mov
mov
movsl
outsb
lock
leave
idivl
in
sub
hlt
dec
imul
sbb
lock
inc
cmp
mov
xor
jle
pop
aam
inc
idiv
xlat
mov
mov
out
popa
ljmp
leave
cld
xchg
dec
mov
mov
pop
cmp
aaa
lods
and
leave
jp
jg
or
lods
sub
enter
popf
pushl
call
mov
ss
popa
rcr
sahf
jb
dec
xor
pusha
pop
dec
aam
pop
repz
pop
cmp
mov
adc
andl
jb
pop
mov
loopne
jbe
jno
aam
inc
push
outsl
add
inc
jecxz
mov
les
push
and
jns
pop
loope
lret
push
je
push
lods
lret
lods
and
jle
add
aam
pop
pushf
xor
movsl
mov
jecxz
sbb
mov
ljmp
leave
jns
cmp
mov
nop
and
xchg
js
sbb
int
mov
jae
mov
andb
mov
outsl
test
sub
dec
mov
push
jmp
std
mov
sub
clc
jae
mov
es
xor
xchg
add
inc
and
xor
sbbb
xchg
arpl
mov
mov
xor
lcall
ljmp
xchg
rcrb
and
cmpsb
fldcw
xchg
pop
mov
sahf
jae
repz
inc
jp
mov
dec
rcrl
out
push
lret
mov
popa
add
shlb
arpl
dec
dec
ret
or
out
pusha
sbb
dec
xchg
pop
mov
cmp
jmp
dec
push
sahf
lret
sub
loopne
arpl
stos
popf
cwtl
cltd
sub
pusha
mov
fwait
inc
and
ljmp
push
into
rclb
push
fiadds
cmp
test
aam
jmp
or
xor
sub
push
or
lea
fldenv
iret
cmp
cmp
es
adc
iret
and
jo
dec
jge
fiaddl
cmp
pusha
loope
dec
add
jns
jp
mov
push
cli
pop
and
nop
xchg
ss
cmp
jp
aaa
inc
stos
int
xchg
loop
pop
lods
push
rorl
daa
data16
xor
das
pop
push
setb
outsl
mov
inc
cmp
fnstenv
or
ja
aad
cwtl
dec
or
dec
inc
loop
mov
in
mov
mov
in
int3
and
dec
and
jecxz
fmull
jnp
out
sub
je
mov
enter
scas
popa
out
sbb
xchg
outsl
ror
pop
mov
ficoml
push
pop
pop
lcall
dec
out
mov
sub
pushf
inc
setl
jno
aad
pop
fisubrl
iret
lds
addr16
dec
pop
sahf
cld
dec
cmp
and
adc
test
jo
xchg
lret
ja
repz
inc
pusha
movsb
adc
rorl
fisttpl
push
or
mov
pop
out
jg
insl
xor
mov
nop
mov
mov
popf
hlt
xchg
pop
xchg
fsubs
orl
cmp
fstpt
xor
jg
xchg
xorb
lcall
movsb
adc
stos
sub
scas
pop
sub
pop
sbb
scas
test
std
les
or
mov
push
test
dec
push
or
out
dec
lret
fldt
jno
lea
and
mov
icebp
je
cld
out
cmp
mov
jle
mov
dec
pop
xor
and
inc
and
push
sbb
in
pop
pop
outsb
clc
sbb
shlb
adc
in
or
mov
fbstp
mov
dec
pop
scas
fwait
scas
call
mov
mov
cwtl
test
xchg
dec
mov
lods
xor
sahf
xchg
pop
jmp
shl
xlat
mov
rclb
xchg
test
xchg
jno
fisttpll
pop
xchg
add
lea
xlat
aaa
inc
pop
push
inc
xchg
push
fucomip
ret
mov
cmp
sub
sub
xor
neg
out
adc
jne
xor
adc
mov
mov
fisubrs
and
push
jl
pop
mov
and
aaa
ret
dec
inc
in
inc
ret
inc
insb
or
mov
loope
xlat
jp
pusha
imul
inc
sbb
and
cmpsl
mov
faddp
jmp
sarl
fldcw
scas
popf
pop
ficoms
leave
mov
insl
std
sbb
and
mov
stos
mov
ljmp
imul
aad
adc
pop
std
icebp
out
push
lea
aad
pop
xor
dec
jl
cli
les
rolb
dec
add
in
mov
xorl
jno
push
cli
or
shr
mov
and
mov
jle
xor
das
fsts
and
push
mov
jno
xor
push
icebp
dec
mov
mov
push
pusha
sbb
sbb
inc
xchg
dec
xor
clc
xchg
pop
rclb
aaa
in
fldenv
jae
jmp
std
pop
sbb
cmp
mov
daa
sbb
call
test
add
les
cmp
sbb
push
xor
xor
insb
jge
bound
mov
and
cmc
fsubrs
mov
out
enter
sub
pop
xor
jecxz
mov
mov
pop
or
ds
inc
bound
sub
mov
add
add
add
fsubs
dec
sahf
mov
call
jecxz
fwait
scas
leave
sarb
ljmp
jecxz
push
stos
push
jb
sub
dec
popa
cmp
xchg
mov
xchg
xchg
fsubr
scas
mov
pushf
add
mov
mov
mov
testl
push
fwait
adc
xchg
lods
jns
lret
push
mov
jle
lods
loop
jp
movsb
add
xchg
bound
xchg
push
add
add
cmp
mov
add
into
cmp
or
sub
call
ret
iret
iret
ds
xchg
test
fs
daa
out
pop
test
push
lods
xchg
fiaddl
sbb
pusha
adc
inc
sbbb
sbb
neg
repnz
cmpsb
in
pushf
repz
mov
mov
mov
dec
jbe
je
test
dec
dec
cs
xlat
sbb
hlt
mov
repz
push
out
lds
stos
notb
add
ss
icebp
aam
test
or
es
rcr
scas
lea
add
push
or
cmp
cmp
out
and
mov
cmpsb
inc
sub
mov
dec
dec
xchg
push
lods
mov
add
inc
subb
sub
lea
repnz
xor
out
xchg
push
in
std
mov
mov
add
fcoml
lret
loopw
clc
adc
leave
inc
jecxz
mov
adc
imul
jns
add
in
lret
add
add
xchg
xchg
push
jecxz
sub
jecxz
cmp
mov
mov
outsl
in
mov
or
push
pusha
add
lcall
mov
sub
and
data16
and
fcmovne
inc
jl
push
stc
out
mov
xor
push
mov
into
fstps
inc
ja
insl
lock
xlat
xchg
fs
cmpsb
jg
loope
sub
out
out
xchg
or
sahf
or
or
sti
mov
sub
notl
mov
lret
jb
ss
sbb
sub
and
pop
in
lcall
sbbb
stos
addr16
cltd
cmp
and
das
pop
inc
insl
cmp
jl
nop
imul
xchg
aad
loope
shll
cltd
stc
adc
mov
mov
or
jo
xchg
sub
push
es
add
cmp
outsl
into
mov
out
mov
fadds
xchg
inc
push
ds
jb
xchg
bound
sbb
push
insb
cmp
arpl
dec
sti
je
adcb
sub
sbb
jns
jge
stos
mov
sbb
and
sub
nop
fsubs
loopne
ss
dec
in
movsb
push
mov
xchg
xor
mov
lea
pop
push
scas
mov
mov
jo
cmp
push
cmc
aaa
or
xchg
mov
jle
sbb
jno
pop
pop
and
repz
adc
shl
cmp
shlb
cmp
call
pusha
mov
or
sbb
jb
rol
sub
pop
fsubl
adc
inc
mov
popa
mov
lcall
lret
dec
or
sbbl
xchg
and
dec
xchg
pop
push
shll
mov
mov
jl
mov
scas
cld
jmp
or
fsubrl
clc
fucomp
movsl
lret
loop
ret
loop
mov
inc
push
lret
mov
sbb
inc
pop
lahf
add
rcrb
xor
xor
cwtl
and
jle
repnz
inc
mov
pop
loopne
cmp
outsl
and
pop
stos
mov
mov
dec
push
xchg
xchg
loope
enter
and
jo
adc
std
adcl
cmp
subl
leave
inc
and
push
andl
pop
push
repnz
jae
pusha
cli
icebp
sbbl
pop
sub
je
nop
cmc
or
xchg
rclb
cmp
mov
xlat
stos
int3
dec
dec
xchg
mov
mov
jbe
rol
xor
pop
aad
jb
xor
add
push
adc
inc
and
jecxz
sbb
mov
pop
lock
mov
inc
xor
jae
push
inc
rolb
adc
pop
or
fildl
mov
clc
pop
jmp
mov
std
inc
mov
push
sub
mov
xor
mov
mov
hlt
ret
cmpsl
adc
icebp
jbe
xchg
jbe
jle
sub
fnstcw
lods
es
fidivs
ss
inc
rol
sub
ret
jae
popf
ret
les
std
outsl
enter
mov
xchg
xor
push
inc
test
leave
faddp
dec
cmp
add
mov
insb
pop
dec
call
xor
shll
mov
push
dec
xchg
sahf
sbb
stos
call
mov
and
in
mov
adc
nop
sub
negl
xlat
sub
inc
call
mov
lock
mov
inc
adc
cmp
ja
mov
iret
leave
mov
dec
stos
push
sbb
rolb
inc
negl
cli
push
das
int3
les
fbstp
push
push
cmpsb
test
mov
fs
mov
push
lds
test
imul
cmp
xor
mov
xchg
sub
cmp
and
mov
sbb
fimull
xchg
or
cltd
lds
outsb
sub
dec
adc
pminsw
jmp
and
jnp
adc
cmp
pop
xor
or
and
sbb
inc
es
mov
test
fwait
inc
xor
mov
mov
or
out
insb
ret
dec
in
lret
cwtl
out
rorl
orb
fmull
cmp
jo
add
dec
insb
xchg
xchg
aad
cwtl
rolb
jbe
xchg
add
mov
mov
arpl
fbld
or
or
mov
icebp
scas
xchg
repnz
and
cltd
or
push
int3
mov
fisttpll
sub
cli
nop
jl
subb
push
frstor
pusha
inc
push
mov
lods
jbe
xlat
dec
jmp
mov
sbb
adc
in
or
mov
pop
pop
das
negl
ror
xor
stc
inc
mov
fdivs
out
int3
mov
cmp
push
cli
faddl
bound
add
sbb
xor
int3
nop
add
add
adc
pop
or
inc
and
xor
inc
push
or
add
mov
popl
fimuls
or
jp
push
and
pop
pop
into
fldcw
test
xchg
fbld
in
fs
je
pop
dec
or
neg
test
push
push
mov
pop
bound
xchg
sub
push
mov
lret
ficoml
in
xor
clc
inc
and
mov
inc
jne
mov
sub
in
mov
mov
test
daa
xchg
pop
fisubrl
sbb
addl
sbb
mov
in
aas
jge
ficoms
ja
movsl
into
data16
int3
mov
jns,pt
and
aam
add
dec
dec
in
insl
push
mov
fistl
scas
clc
repz
cmp
fstl
fistps
dec
dec
or
outsl
gs
sbb
lock
mov
mov
xchg
cmp
mov
stos
mov
push
inc
cwtl
iret
xor
shl
nop
out
lahf
cmp
clc
xor
insl
insb
cli
adc
sbb
xchg
mov
shrb
cmp
flds
into
add
int3
lret
or
repz
add
sub
xchg
mov
xor
cmp
lea
popa
aas
inc
mov
and
fld
xchg
push
xchg
sub
mov
mulb
lods
push
leave
adc
repz
aas
inc
add
xor
inc
jecxz
jae
mov
mov
in
rolb
sub
pop
jge
std
jb
cmp
cmpsl
scas
inc
cmc
jge
sub
sub
mov
inc
jg
dec
mov
pop
or
sbb
lea
xor
sub
shll
adc
outsb
into
cmp
les
dec
pop
div
push
mov
fidivrs
add
xor
rcr
or
mov
add
pop
lahf
fists
adc
clc
sbb
sbb
pop
xchg
aas
jae
xor
scas
push
inc
mov
jnp
and
sbb
mov
fdiv
adc
repz
mov
fildll
xchg
out
into
in
into
ret
jecxz
dec
lods
push
sbb
in
adc
sbb
xchg
mov
jnp
jne
decb
je
sub
roll
shll
ss
pushf
dec
adc
in
sub
lea
out
or
mov
sbb
pusha
pop
cmpsb
cmp
or
push
stc
cmp
mov
xchg
les
icebp
jecxz
dec
mov
nop
sbb
push
add
sbb
data16
mov
mov
push
cmpsb
cmpl
mov
cmpsb
xor
push
data16
stc
sar
in
sbb
outsl
pop
pop
and
pop
dec
xchg
mov
xor
pop
cwtl
ror
popa
testl
divb
sbb
fiaddl
or
iret
pop
ret
mov
das
xor
or
ljmp
xchg
dec
iret
jno
es
mov
jecxz
mov
jecxz
mov
pop
add
es
mov
mov
into
aam
ljmp
mov
insl
xor
pop
call
mov
bound
ljmp
jmp
cmp
jae
bound
and
or
push
mov
arpl
mov
dec
out
sbb
jne
sbb
sbb
sub
out
jle
and
stc
jmp
sbb
mov
mov
mov
adc
pushf
outsl
fwait
pop
add
xchg
adc
aad
call
cmc
jle
scas
sub
mov
cmpsl
lret
test
ret
and
decl
or
fcompl
cmpsb
idivl
cld
cmp
sbb
in
inc
and
scas
test
and
xchg
daa
sub
push
adc
leave
fstl
inc
rol
inc
int
mov
xor
rclb
sub
pop
ret
out
xchg
setns
into
jp
negl
jmp
sbb
dec
loopne
pop
xchg
in
mov
fsubrl
jecxz
push
add
pop
lock
and
jne
test
push
stos
inc
inc
in
adc
and
xchg
cli
aam
mov
je
repnz
adc
push
xor
mov
adc
inc
cmp
mov
add
inc
dec
jae
into
test
fstpt
das
sahf
cmp
xor
out
dec
jbe
rolb
inc
xor
int
add
and
shl
inc
rcll
repz
jbe
mov
inc
cmp
pop
mov
lret
inc
dec
jae
enter
ficompl
rcrl
loope
jnp
repnz
push
repnz
sbb
out
mov
sbb
pop
scas
int3
rcll
fninit
subb
add
sahf
mov
cmc
es
add
jns
lock
xchg
jae
sub
out
test
lret
es
call
push
stos
insl
test
cmp
add
les
int
inc
mov
xor
push
sub
shll
imul
mov
adc
pop
dec
jbe
mov
lahf
xchg
rorb
dec
cs
mov
pop
stc
jge
mov
jle
xor
lahf
adc
or
movsl
dec
or
add
in
js
ja
xor
lock
xchg
lret
mov
movsl
pop
hlt
pop
sbb
mov
push
outsl
sbb
or
icebp
pavgw
repnz
or
or
adc
jns
out
outsb
mov
aad
inc
fdivrs
imul
mov
pop
imull
ss
and
stos
jp
sub
rcr
popa
jle
call
rorl
pushf
cmp
adc
and
cmp
dec
jae
lea
mov
mov
mov
jmp
mov
jae
mov
push
cmp
dec
cltd
dec
jmp
sub
ds
cmp
mov
ret
loopne
xor
scas
pop
shl
nop
push
mov
cli
adc
cmp
icebp
mov
adc
add
xchg
add
das
mov
adcl
and
cmp
loope
fsubr
dec
pop
lahf
bound
inc
mov
push
sahf
dec
jae
cmpsb
dec
or
xchg
pop
dec
pushl
mov
cmpsl
ss
mov
outsb
and
mov
jb
pop
jp
pop
inc
es
or
divb
mov
mov
mov
jle
or
je
push
out
xchg
out
xchg
add
adc
push
lret
mov
sarb
int3
jae
mov
lahf
cwtl
and
clc
sbb
leave
stos
sub
dec
jns
ja
mov
and
ljmp
push
and
pop
imul
outsl
idiv
loop
out
test
mov
js
mov
dec
xchg
lea
shll
icebp
sti
lds
cld
mov
pop
or
adc
test
cmp
fisubrs
or
fs
popf
jne
in
imul
xor
push
outsb
orb
add
xor
or
test
sbb
test
in
es
pop
shr
outsw
out
shl
and
pushf
or
mov
js
popa
mov
in
inc
popf
pushf
shl
xchg
and
pushf
insb
sarl
leave
lock
test
xchg
mov
fidivs
push
push
pop
push
dec
sarb
lods
pop
shrl
cs
push
mov
clc
cld
movsb
xchg
inc
int
cli
test
push
sbb
mov
push
in
dec
addl
add
jmp
fimuls
inc
xchg
adc
js
js
dec
and
pushf
rclb
fidivs
shll
cli
arpl
cmp
inc
icebp
sbb
adc
pushf
fsubr
sub
or
or
jle
adc
pop
pop
adc
xor
je
imul
sbb
jmp
daa
lock
call
fs
and
mov
pop
gs
mov
mov
out
idivl
andb
sbb
sbb
adc
sbb
pop
cmc
jge
sahf
mov
scas
dec
faddp
lret
cs
inc
pop
popa
sahf
mov
out
stc
aad
in
jecxz
out
pushf
js
jne
out
or
into
pop
dec
push
cld
dec
mov
xlat
fdivrs
insb
movsl
mov
jae
mov
xchg
add
xor
or
stc
sbb
test
jbe
xchg
push
mov
sub
push
or
inc
cmp
imul
sahf
inc
dec
lea
adc
xchg
xor
sbb
hlt
int
inc
or
adc
sbb
mov
or
or
test
xchg
push
or
bound
gs
sub
xchg
stos
xor
outsl
sub
scas
jbe
jne
out
rcrb
mov
xchg
incb
fld
andl
repnz
add
jb
cmp
jmp
mov
stos
psubq
out
inc
fmull
jnp
into
xor
xor
cwtl
sbb
xchg
pop
jge
sbb
add
inc
and
aas
imul
mov
pop
dec
cltd
insl
mov
sub
cwtl
pop
sti
sub
push
iret
cwtl
add
push
jne
mov
push
popa
hlt
dec
xchg
in
jmp
sub
mov
inc
fldl
xchg
pop
test
testl
pop
pop
cmp
mov
xor
add
in
mov
jns
sub
lret
bound
mov
adc
or
pop
adcl
gs
jns
adc
jns
cli
push
ret
lcall
clc
shll
or
xchg
pop
ficoml
imul
mov
sbb
xchg
icebp
xchg
fwait
mov
xchg
lds
jno
mov
jmp
cmp
cli
push
and
ss
mov
pop
sbb
aas
and
arpl
mov
mov
call
jo
lret
loopne
xor
push
mov
xor
out
pop
popf
mov
sahf
or
adc
jae
dec
push
xchg
lahf
ror
pushf
jp
sahf
sbbl
or
rclb
nop
les
mov
mov
add
out
xor
cwtl
fwait
and
xchg
dec
push
mov
mov
sub
lea
push
xor
adc
ds
jno
movsb
fcompl
shl
cmp
sahf
mov
lock
ret
jne
jmp
add
call
cmp
in
ret
rorb
shrl
aad
pusha
ja
cmp
lods
adc
cmpsl
insl
mov
aaa
sbb
out
test
cmp
fldt
xchg
lds
stos
or
xor
fsts
movsb
frstor
dec
scas
mov
fldenv
fidivrs
lret
push
movsl
sub
ss
sarb
popf
rclb
js
mov
out
jo
gs
enter
es
rcl
popf
dec
mov
cld
ja
outsl
inc
stos
xor
xor
iret
js
bound
call
inc
shl
dec
mov
inc
jns
mov
xchg
mov
das
push
stos
xorb
jge
cpuid
movsl
mov
push
popa
mov
jae
xchg
aaa
push
stos
sbb
notb
sub
das
out
inc
movsl
jp
and
push
out
dec
adc
xchg
sbb
mov
push
or
pop
sub
les
das
pop
mov
pop
xlat
in
sbb
ds
xchg
jo
jge
arpl
adc
mov
mov
das
or
jns
cli
mov
mov
shl
xor
inc
cmpsl
fsts
or
push
insl
inc
pop
gs
pusha
cld
fldenv
addb
cmpb
mov
add
push
cmp
jmp
pop
stc
sub
cmp
fdiv
rcr
lcall
mov
inc
std
lods
sub
lods
pop
cmp
sub
ja
cmp
jp
lods
call
push
jle
add
mov
cmpb
lea
je
test
imul
lret
mov
pop
ss
sbbb
out
insb
pop
push
int3
sahf
or
mov
or
inc
sub
mov
dec
pop
sbb
push
aam
xchg
jmp
inc
mov
xchg
push
std
insb
push
sti
pop
mov
out
pushf
test
sar
ds
int3
add
jbe
call
or
or
imull
mov
leave
pop
push
lcall
in
into
or
daa
sbb
cld
js
inc
sbb
xchg
xchg
push
jbe
ficoml
pop
rorl
sub
dec
mov
add
and
jle
mov
xlat
xor
mov
jmp
aam
jo
rcll
dec
icebp
cmp
test
mov
out
cmpsl
jmp
sbb
sub
mov
ficoml
lret
mov
test
xchg
jmp
pushf
fidivrl
nop
jnp
daa
out
lea
dec
inc
mov
stc
adc
dec
add
int3
ljmp
push
jne
push
mov
ret
icebp
mov
imul
rorl
xor
adc
mov
dec
cmp
xor
nop
mov
hlt
pop
cmp
ficoms
ss
in
pop
mov
add
rcrl
ret
cmp
xchg
and
push
dec
ja
add
xor
bnd
and
fs
fwait
daa
test
mov
inc
mov
mov
vmovups
test
mov
jae
xor
jecxz
ret
xor
lock
cmp
out
pushf
fnstsw
dec
fs
xor
daa
dec
sub
aas
jp
push
lds
es
mov
pusha
jge
inc
push
lret
aas
mov
dec
call
insb
insl
imul
sbb
cli
pushf
add
mov
std
fs
or
into
jp
gs
mov
popa
or
and
and
enter
mov
sbb
scas
xchg
leave
loopne
gs
test
stc
cmc
xor
std
fistl
out
lea
shlb
dec
inc
mov
mov
loopne
sti
test
das
cmc
test
test
push
addr16
add
mov
mov
xchg
test
xor
jp
pop
fdivrs
cmpsb
mov
andb
xor
pushf
inc
xor
das
fs
lcall
pop
sbb
or
adc
sub
out
push
xor
push
mull
xchg
arpl
es
xchg
sbb
inc
jge
jg
idivb
xor
jno
jae
cmpb
mov
lods
pop
ret
dec
cmp
iret
or
ret
mov
daa
sti
and
idiv
sbb
inc
dec
fiadds
pop
pop
push
aad
mov
enter
mov
icebp
cld
mov
cmp
mov
xor
xchg
or
pusha
xchg
cltd
repz
cmp
pop
jnp
ljmp
into
insb
push
xchg
inc
push
cli
pop
push
mov
ljmp
and
xchg
cld
push
cmp
iret
sbb
jp
mov
imul
mov
cmp
jle
or
dec
add
ficompl
call
lcall
and
sbb
inc
insl
pop
movb
pop
sti
push
aad
adcb
push
push
sub
jmp
aam
xchg
jbe
fdivrs
outsb
dec
pop
adc
push
cltd
loope
lds
adc
adc
push
cwtl
lods
subl
xchg
dec
cli
aas
insb
jmp
fnstenv
add
push
adc
mov
mov
mov
aad
dec
mov
fadds
out
fisttpll
outsb
pop
or
xchg
in
xlat
out
repz
out
outsb
pop
xchg
lret
inc
popa
fs
pop
imull
pop
xchg
es
andl
and
adc
cmc
add
nop
dec
dec
jge
in
insl
sub
lock
popf
lock
aaa
shll
sbb
mov
inc
xor
iret
cmp
inc
sub
out
pusha
jmp
addl
cmpsl
pop
push
xchg
ja
loopne
in
push
cld
popf
xchg
iret
push
jne
mov
push
mov
js
nop
jle
pusha
sbb
jp
enter
pushf
pop
insb
push
push
es
pop
pop
cld
cmp
ss
cltd
iret
ljmp
in
mov
add
out
aad
xor
mov
mov
fsubr
adc
push
cmp
or
sub
cmp
xchg
push
bswap
divb
repz
ficompl
scas
dec
sub
mov
mov
mov
dec
xor
dec
xchg
rcll
pop
dec
pushf
repnz
add
stos
mov
loopne
aaa
bswap
cltd
push
cmpsb
or
xor
sbb
xor
shll
xor
int
pop
xor
test
and
test
inc
mov
test
mov
test
pop
sbb
lock
and
or
das
lods
mov
inc
cld
int3
push
jb
add
stc
fnsave
sub
pusha
mov
or
or
in
jmp
subl
outsl
adc
inc
dec
jg
popa
sbb
mov
cli
fidivs
mov
icebp
adc
cmp
lds
aas
fisubs
sub
repnz
fsubrs
aas
ret
and
shrl
dec
js
mov
add
cmc
xchg
dec
lahf
imul
push
cmpsb
mov
repnz
rcr
and
hlt
lods
out
cmp
xlat
sarb
ljmp
lret
xlat
jmp
adcb
addr16
pop
xchg
push
dec
add
xor
adc
loopne
fstps
inc
xor
cmc
je
ret
jne
or
stos
push
xchg
ja
sbb
cmp
xchg
adc
stos
hlt
mov
push
jg
mov
cmp
adc
push
clc
roll
sbb
xlat
xchg
xchg
or
loope
into
dec
mov
add
fnstenv
filds
addr16
mov
dec
pop
pop
mov
iret
sub
push
jge
stos
out
pop
dec
push
lahf
and
std
mov
icebp
divb
xlat
jp
jmp
ret
add
dec
mov
stos
jecxz
psubb
nop
sti
add
fsubl
add
and
iret
push
add
addr16
loope
loope
push
or
dec
outsl
and
repnz
sub
mov
push
fldcw
repz
pop
repnz
adc
bound
subl
xor
mov
jae
push
lcall
ret
dec
lret
mov
dec
imul
js
mov
lods
cmpsb
subl
outsl
scas
jno
mov
jnp
icebp
call
mov
jno
into
dec
push
subb
add
add
fildl
pusha
fnstenv
lret
iret
shll
sbbl
or
ja
ret
lret
mov
adc
pushf
dec
ret
push
xchg
in
fisttpll
pop
ret
cmp
push
fisubrl
pushl
xor
add
mov
cmp
jae
je
pop
shlb
sub
cmpsb
cmp
ret
jno
sbb
shll
mov
cmp
cmp
addr16
push
xchg
inc
jnp
xchg
xor
mov
stc
bound
pop
sti
xchg
add
xchg
idivl
cltd
pop
mov
adc
gs
repz
or
sbb
cmpsb
mov
inc
jne
jae
sub
sub
lcall
add
xor
in
fldt
xchg
aam
in
xchg
jmp
call
xchg
aad
mov
dec
in
mov
sar
adc
dec
add
jp
mov
xor
xor
and
cmp
cli
fistpll
mov
lcall
xchg
sbb
ss
mov
cmp
xchg
and
popa
sbb
xchg
mov
push
into
cmp
es
fildl
jmp
mov
movsl
movsl
push
lds
jp
jo
cli
jae
jo
jmp
loopne
dec
aam
cltd
ljmp
scas
aam
ret
int3
lret
icebp
xchg
xor
inc
adc
mov
and
loop
popf
popa
xchg
sub
cmp
cmpsl
flds
jp
test
add
rcll
mov
jg
xchg
xchg
dec
outsb
jnp
in
je
cmp
pop
jno
pop
mov
jae
ljmp
mov
in
xlat
pop
mov
xchg
mov
push
push
pop
jge
inc
aaa
in
mov
test
sahf
mov
out
mov
jmp
repnz
es
mov
and
aam
cmpsl
in
jns
rorl
in
imul
sub
pop
int3
and
pushf
xchg
sub
xor
or
jnp
jne
jl
jmp
test
hlt
fildl
lods
fsubr
scas
aad
push
nop
out
lods
test
fwait
call
sub
mov
insl
cmp
inc
scas
loop
lret
loop
inc
jne
push
in
mov
popf
and
or
mov
sub
push
sbb
add
push
mov
jg
or
xor
je
mov
insl
insb
xchg
add
mov
cld
sub
fadd
inc
seto
test
in
lods
mov
xor
loopne
test
push
fcom
pushf
xchg
test
fldt
xchg
imulb
push
mov
divl
pop
nop
out
adc
mov
imul
jns
std
int3
or
in
push
inc
fwait
int
inc
or
pop
push
lock
es
lahf
jl
xor
outsb
addr16
inc
scas
or
aad
inc
lods
sarb
les
out
cmp
xor
jl
jbe
cmp
xchg
xchg
lret
sti
jl
ret
stc
fwait
lahf
or
xor
push
mov
jl
cmp
sti
les
sub
test
dec
or
and
mov
sbb
daa
mov
mov
lods
stos
push
lods
add
xchg
fnstsw
push
push
movsl
loopne
push
mov
jle
dec
dec
testb
add
stc
imul
mov
inc
in
pop
div
sub
or
bound
push
jnp
pop
stos
xchg
cltd
dec
or
fimull
push
mov
or
adc
lock
cs
lods
test
xchg
scas
js
js
cltd
bound
movl
adc
mov
test
and
mov
rolb
and
jnp
lods
aad
ja
mov
in
repnz
push
out
and
call
xor
insb
xlat
pop
ja
add
aas
cmp
mov
cmp
mov
mov
mov
adc
mov
inc
xor
insl
mov
test
imul
loop
jbe
enter
jb
mov
mov
xor
dec
data16
push
loope
xchg
fwait
mov
daa
aam
push
inc
mov
mov
outsl
and
in
dec
or
sbbb
mov
cld
je
inc
out
leave
ljmp
test
aad
mov
les
sub
test
or
outsb
jno
loop
add
xchg
ja
out
mov
xor
push
sub
subb
push
pextrw
subl
sarl
mov
orb
addr16
inc
rcrb
aas
mov
into
xor
shl
push
mov
push
pop
mov
push
push
jp
test
cmp
into
cmp
mov
das
jno
mov
repnz
iret
mov
das
or
shl
sub
xchg
xchg
sbb
out
rolb
xor
nop
cmp
mov
shlb
fs
rcll
xchg
sarb
in
lahf
inc
mov
std
and
cmp
dec
test
bound
inc
lcall
pop
push
bound
in
xchg
xor
or
repnz
dec
push
add
xchg
insl
xchg
sbb
push
lods
outsl
cmpsb
pusha
inc
dec
jne
xlat
fs
or
or
int
pushf
mov
pop
add
shll
push
lret
pusha
cmp
push
fucomi
pop
sub
push
ret
lret
bound
add
add
gs
pop
fistps
dec
pop
icebp
jno
movsl
inc
add
pop
gs
js
mov
adc
popl
mov
test
gs
sbb
mov
in
outsb
pop
sub
outsb
cld
loopne
pop
pop
es
add
xchg
cs
dec
cs
pop
out
cld
outsl
dec
mov
les
xor
xchg
mov
mov
test
push
out
mov
add
mov
xchg
divl
mov
psllw
inc
int
ljmp
lds
mov
adc
sub
lock
movb
out
push
jns
lret
push
js
ja
xchg
dec
or
dec
dec
fbld
xor
mov
sbb
dec
lret
xchg
pop
loop
cmpb
add
xor
out
outsl
movswl
sbb
sti
js
inc
div
push
push
aam
jnp
out
movsl
pushf
das
mov
lahf
xchg
repz
and
imul
and
ljmp
add
mov
ror
pushf
fsubr
jp
ret
ds
shrb
lock
lds
testl
push
add
push
repnz
adc
stc
lock
rorb
sub
es
mov
out
mov
xchg
or
add
add
push
jmp
imul
scas
sbb
jl
jo
repnz
adc
cs
repz
movsl
lock
adc
jae
pop
mov
leave
out
cmp
mov
mov
cmp
pop
mov
pavgb
ficompl
sub
sub
lods
and
mov
push
or
cmp
push
mov
shrb
push
outsb
movsb
test
call
mov
in
dec
mov
and
cmp
cli
dec
pop
jnp
test
pushf
fadd
jno
inc
cmp
int
aad
in
xchg
lea
pop
push
scas
lds
mov
imul
rcrl
dec
daa
push
insl
jnp
sbb
lods
cld
jp
and
fisubrs
pushf
call
sub
adc
and
pop
xlat
rcl
nop
pusha
nop
lea
in
movsb
mov
jbe
jno
subb
mov
xor
mov
add
cwtl
movsb
aad
enter
repz
xchg
pop
jp
cmpsb
inc
jmp
js
cmp
mov
cmp
xor
inc
dec
sbb
add
shl
cltd
pop
xor
xchg
mov
in
adc
pop
dec
dec
cmpsl
xor
clc
cmpsl
ja
imul
fwait
xor
mov
xor
loop
jb
call
pop
push
es
push
nop
scas
and
add
les
mov
loop
push
mul
cmp
inc
sbb
les
sbb
mov
adc
adc
int3
inc
out
movsl
xor
ret
xchg
test
and
sbb
push
ja
xorb
mov
mov
add
push
jnp
subb
push
incl
das
jp
int3
je
icebp
push
cmpsl
or
mov
stos
cmp
leave
xchg
mov
out
arpl
fstp
or
push
repnz
sbb
pop
xchg
jb
lcall
push
pop
sahf
ds
add
outsb
push
movsl
dec
adc
pushf
jnp
xor
out
mov
pop
and
sub
int3
fcompl
les
sahf
sar
xlat
out
leave
std
je
aas
aam
pop
lea
dec
ret
in
dec
xorl
ret
pop
rorl
or
pop
mov
mov
sub
hlt
rolb
pop
mov
imul
loop
dec
sahf
cmp
adc
out
inc
push
mov
jo
loopne
subb
repnz
nop
sbb
mov
fdivl
push
test
test
loop
fsubrl
mov
add
test
inc
jne
fwait
add
in
and
orb
pop
xchg
dec
ds
into
inc
cmp
mov
sub
sub
push
mov
xor
cmpsb
arpl
mov
pop
out
shrb
ss
inc
repnz
push
push
jbe
fdivrl
xor
jle
or
out
mov
bound
outsb
push
std
add
sar
pop
fwait
scas
dec
mov
jnp
push
pop
js
sbb
fdivrs
dec
ss
xor
stc
xchg
mov
pop
fcmovnb
and
mov
xor
jbe
in
test
les
xchg
mov
lret
dec
pop
fstps
into
xchg
test
mov
sahf
or
fptan
aas
pop
adc
mov
inc
movsl
jnp
mov
out
stc
mov
sbb
cwtl
sub
ret
enter
out
add
popa
int3
mov
inc
fsubrs
fstpl
xor
xor
scas
mov
daa
aaa
ja
lret
jle
cmp
and
add
lret
push
mov
movsb
mov
sbb
or
mov
pop
iret
xor
mov
in
jns
mov
jnp
cmp
or
ljmp
and
bound
and
mov
adc
bound
mov
mov
xchg
into
sub
xchg
adc
test
icebp
shufps
lds
add
cld
dec
push
xor
scas
mov
adcl
push
scas
cs
int
leave
shrl
pop
adc
ret
inc
sbb
adc
stos
mov
jns
fcomip
xor
loope
jae
xchg
ficomps
clc
pop
dec
sbb
mov
and
xchg
push
mov
fnstenv
fmulp
scas
cwtl
jmp
cmp
mov
jnp
adc
add
xor
sbb
dec
push
popa
iret
push
cwtl
fdivr
push
xor
inc
jmp
pop
sahf
and
sbb
jge
cmp
mov
sbb
mov
push
repnz
push
inc
popa
mov
jns
lcall
dec
or
xchg
sbb
xchg
jbe
repnz
sbb
sub
mov
pop
pusha
xor
nop
sahf
mov
xchg
and
shlb
push
in
xchg
mov
mov
jecxz
adc
jle
mov
out
and
jnp
sub
cltd
push
inc
out
ja
mov
sub
push
jbe,pn
cltd
in
ficoms
add
aad
sbb
jmp
lahf
popa
mov
mov
aad
jp
jb
ds
lock
xor
cmc
add
ja
loop
fsubs
jmp
inc
adc
jo
stos
std
pop
adc
fadd
fsts
lcall
sti
mov
xchg
add
xor
push
pop
inc
stos
ficoms
dec
mov
clc
add
and
adc
shr
mov
jmp
movsl
jle
mov
jne
dec
pop
pop
outsb
test
fdivrs
dec
orl
jg
xchg
mov
ss
sbb
adc
xchg
xchg
in
push
sub
bnd
sub
mov
xor
mov
fidivl
push
inc
daa
xchg
mov
aad
cmp
mov
inc
cmc
pop
shr
je
lds
or
add
xlat
addr16
fnstsw
imul
ss
xor
je
mov
enter
fmul
neg
dec
xchg
scas
rcrl
mov
imulb
lea
not
ds
and
sbb
jmp
fildl
push
mov
fists
in
shrb
pop
pop
insl
mov
pop
inc
dec
dec
cmpsl
lods
adc
sbb
mov
arpl
scas
mov
push
fnstenv
push
push
or
daa
mov
inc
jmp
xor
mov
lds
xchg
sbb
cld
mov
sbb
xor
add
js
xor
xchg
movsb
adc
mov
nop
mov
pop
enter
push
mov
test
out
push
cwtl
repnz
add
jae
push
lods
xchg
int
pop
sub
test
addr16
shl
mov
cltd
lock
xchg
enter
mov
jge
mov
dec
lcall
xchg
popa
inc
xchg
xchg
cmpsl
jae
cli
push
sub
cltd
push
and
sbb
call
mov
jmp
daa
movsl
pop
dec
mov
idivb
cmp
mov
add
movsl
inc
sub
jle
ficoml
repz
dec
jns
pop
icebp
lahf
and
fistl
and
shl
jmp
ljmp
mov
addb
ss
je
inc
mov
hlt
lret
pop
aam
scas
repnz
es
arpl
out
addb
and
les
inc
xor
xchg
out
das
adc
xchg
jl
and
int3
insl
stc
mov
inc
and
fistpl
pop
pop
add
mov
xchg
sub
xor
cmovg
pop
adc
clc
push
jne
xchg
rcll
sbb
mov
inc
sbb
lea
push
movsl
out
sbb
mov
clc
call
repnz
leave
pop
je
xchg
fdivrs
mov
pop
sub
jecxz
jmp
jmp
mov
fs
add
and
pushf
icebp
cmpsl
ror
addr16
inc
dec
mov
stos
sub
pop
call
insb
dec
mov
jmp
adc
and
dec
jbe
cli
cli
stc
sbb
and
mov
adcl
sub
lahf
scas
je
test
xchg
loope
sahf
dec
jo
pushf
inc
ja
mov
push
notl
push
mov
fmuls
pop
and
ror
cltd
incb
xor
js
les
ljmp
pop
std
xor
gs
inc
inc
jnp
ds
cli
mov
ja
push
stos
adc
mov
cmpsb
shrl
repz
dec
mov
lret
jnp
and
int
cmpsb
ret
or
testl
mov
dec
cmc
mov
in
pusha
xchg
adc
pop
sbb
lea
insb
ret
shr
mov
cmp
mov
mov
cmp
and
xchg
clc
js
lcall
mov
test
imul
pop
movb
stc
js
je
pop
mov
in
or
pushf
iret
ja
jb
add
aad
cld
insl
stos
fwait
cld
vmwrite
jp
add
imul
aaa
xorb
mov
pop
into
cld
sub
fnstsw
lret
xlat
push
xor
jns
cld
movsl
inc
incb
enter
inc
lods
sbb
les
mov
push
pop
dec
or
dec
adc
shrl
add
push
fdivl
inc
in
jno
test
pusha
adc
cmc
mov
jno
push
mov
mov
pop
xchg
mov
outsb
jbe
xor
add
popa
jecxz
jge
lods
pop
les
push
mov
fdiv
fistps
sbb
in
iret
nop
cs
stc
jle
fwait
sub
mov
std
cmc
enter
push
mov
imul
mov
add
mov
lds
std
popf
outsl
test
xchg
js
in
insb
test
dec
mov
iret
dec
xor
pushf
shlb
xchg
ret
xlat
outsb
push
pop
push
in
xchg
dec
into
aas
jecxz
scas
jne
leave
pop
aaa
out
aad
stc
pop
movsb
mov
xchg
and
or
lods
cld
int
rcrl
rcll
lods
dec
pop
dec
test
cmovb
leave
jle
xchg
inc
inc
icebp
fimull
shl
pop
fsubl
pop
shl
jle
sub
push
add
fisubrl
idiv
mov
es
push
fs
sarb
popf
jb
out
mov
gs
and
popl
inc
punpcklbw
xor
mov
add
loope
xlat
jnp
push
xor
test
shlb
push
pop
arpl
scas
lock
xchg
vcvttsd2si
cmp
les
adc
xchg
js
mov
sbb
fldenv
rclb
test
push
in
add
xchg
outsb
rcrb
mov
pop
xor
bound
add
cmc
jg
test
shlb
inc
jns
cld
scas
push
xor
data16
sti
push
sub
add
jnp
fadd
mov
icebp
insl
mov
mov
test
dec
jno
dec
sbb
adc
or
lock
push
mov
push
pop
pop
jge
jo
lea
xchg
push
jnp
arpl
fsubl
inc
inc
inc
push
test
push
push
mov
stos
pop
jg
std
shll
ja
push
aad
xlat
ds
and
lds
add
sub
and
out
fidivrs
addr16
dec
xor
out
test
test
popa
arpl
jmp
test
fidivl
push
fists
ljmp
xor
pop
mov
pushf
xchg
sub
nop
cmpsb
imul
adc
inc
arpl
mov
mov
ss
adc
sar
in
aam
cs
lods
cmp
jb
inc
jl
mov
mov
adc
mov
inc
add
adc
dec
push
aad
movsl
jmp
add
add
or
cmp
jp
ds
push
mov
add
mov
mov
shll
popa
outsl
mov
cwtl
jo
mov
push
imul
in
xchg
int3
xor
mov
push
add
push
aaa
leave
jne
test
cwtl
add
ds
movsb
nop
es
xchg
jnp
ja
jns
mov
xchg
popa
out
loop
loopw
xchg
mov
adc
xchg
cmc
sbb
or
jb
dec
cmp
sub
dec
push
scas
and
mov
rolb
test
inc
inc
push
gs
add
ja
imul
or
mov
aaa
mov
inc
and
stc
mov
xchg
adc
dec
insl
inc
lds
arpl
and
pop
lcall
push
adc
sbb
sbb
mov
push
shrb
cli
inc
push
sbb
movsb
cmp
aam
mov
sbb
push
mov
icebp
iret
add
adc
add
lods
adc
in
inc
mov
sub
sub
mov
pop
jg
xchg
mov
lret
ret
xor
push
sbb
or
jp
sub
shll
sahf
test
cltd
xchg
adc
dec
dec
nop
push
mov
int
mov
testb
push
loope
inc
addb
lods
adc
outsb
das
popf
les
add
cmp
pop
fstpl
sbb
mov
ljmp
stc
xorb
mov
mov
mov
sub
je
in
push
idivb
lds
sbb
sahf
fs
mov
xchg
lods
aaa
dec
push
repz
sbb
insl
mov
jecxz
daa
arpl
dec
sti
cmp
jb,pt
and
mov
cmpsb
inc
int3
fcomps
bound
std
mov
or
cmp
in
adc
xor
icebp
dec
aad
in
xchg
repz
push
cmc
insl
cs
xchg
mov
test
add
adc
sub
mov
pop
push
xlat
cmpb
cmp
and
mov
loopne
leave
mov
hlt
inc
test
inc
iret
dec
mov
xchg
cltd
pop
dec
pop
and
xchg
sbb
lea
js
js
into
inc
negb
shrl
inc
shl
inc
icebp
dec
dec
pushf
outsb
jge
arpl
add
ja
movsb
stos
push
stos
pushl
xchg
xor
loop
xchg
movsl
pop
outsb
and
adc
lds
hlt
and
jg
mov
stc
stos
xor
add
dec
pop
cmp
lahf
inc
pop
inc
fstpt
push
or
shl
dec
out
dec
fisubl
mov
insl
hlt
sub
inc
iret
mov
insb
mov
lsl
or
cmp
jmp
jnp
rcrb
lret
inc
lea
lds
lahf
xchg
je
testl
incb
cltd
xor
adc
xchg
es
mov
aaa
outsl
popa
pop
xchg
inc
scas
push
or
ret
and
inc
popf
rcl
rcr
inc
adc
ss
mov
mov
jae
add
ret
cltd
and
sarb
cmpsb
out
out
insl
fwait
rcrb
ds
daa
adc
pusha
mov
or
aam
push
sub
loope
out
xchg
shrl
cmc
push
adc
test
imul
cs
pushf
inc
mov
pop
mov
lods
mov
and
dec
loop
test
jns
cltd
inc
jle
push
xchg
inc
xchg
xor
or
fs
push
leave
push
or
cltd
rcl
xor
cwtl
sub
dec
mov
ja
jbe
jecxz
or
fistpll
cwtl
mov
stos
sub
xchg
xchg
out
add
push
insb
jns
imul
cmp
pop
xor
jmp
pop
xor
push
cwtl
arpl
jl
and
push
bound
stc
shll
sub
xor
dec
adc
lret
xchg
and
adc
stos
nop
push
mov
sahf
or
push
lea
lods
xchg
out
decb
adc
mov
js
mov
out
enter
lret
push
bound
jns
es
nop
imul
mov
and
mov
jae
into
xor
cmp
xlat
dec
loop
stos
mov
lock
and
mov
and
jo
fs
ljmp
jl
daa
fimull
jle
push
cli
sarb
sbb
repnz
gs
push
xor
or
adc
add
mov
pop
xchg
loopne
jle
jp
movsl
xor
push
scas
leave
jnp,pn
jns
jle
inc
pop
sbb
in
in
and
or
jmp
xchg
repnz
lds
mov
sbb
or
arpl
aad
xor
out
dec
cmpb
push
jecxz
out
adc
dec
add
sbb
sbb
and
adc
cmp
outsb
fucomp
sarl
fsubrl
sub
xchg
mov
or
xor
inc
test
sbb
jno
xchg
push
imul
cli
jo
mov
xchg
idiv
fdivs
mov
call
out
fsubr
into
stc
inc
push
sbb
repz
mov
add
flds
jecxz
pop
adc
pop
xchg
cmc
pop
inc
mov
ds
ret
xor
fiaddl
pop
ss
push
jo
sbb
jns
leave
lret
jae
mov
mul
pop
daa
mov
lods
xchg
fbld
pop
stos
pop
mov
mov
xchg
push
mov
ds
push
idivb
push
sub
insl
movb
adc
scas
add
loop
loop
cmpsl
popf
insb
push
scas
bound
sbb
test
sub
aaa
add
std
loopne,pt
cld
shl
inc
outsl
fidivs
adc
cli
push
fidivl
add
js
and
xor
push
add
addr16
mov
xchg
addr16
xor
dec
push
aaa
xor
rorl
xchg
out
in
repnz
lock
inc
ljmp
add
mov
jg
xchg
mov
cmp
jnp
sub
xchg
loope
loopne
xorb
scas
movsb
add
rorb
loopne
fnstsw
inc
imul
xchg
ficoml
mov
pop
test
mov
out
repz
lods
jno
iret
fmulp
ljmp
cwtl
inc
xchg
and
inc
or
addl
sbb
aad
in
adcb
testb
stos
mov
imul
lods
adc
test
test
xchg
mov
ret
xchg
daa
cmpsl
ror
mov
lock
into
ret
sti
fwait
push
or
and
stc
addr16
mov
movsb
push
sbb
ds
cli
enter
aam
out
add
adc
vpsllw
pop
xor
push
enter
int3
test
or
mov
sbb
jbe
aam
pop
xchg
mov
fs
mov
and
repnz
leave
sbb
fdivrs
lret
inc
push
ret
iret
cmp
mov
xchg
dec
dec
mov
mov
adc
cmpsl
mov
int
mov
xchg
in
pop
mov
inc
add
mov
ja
pop
and
dec
sub
mov
outsb
std
mov
and
filds
lock
pop
cmp
sub
mov
push
xor
adc
test
mov
and
insb
dec
loope
shrl
lods
jne
out
shrb
jl
add
xor
imull
xchg
stc
jg
ret
ret
les
adc
or
xchg
in
shrl
mov
out
data16
lods
stos
rol
or
sub
lock
add
cmp
outsl
push
test
and
mov
sub
iret
push
and
push
and
sbb
dec
jne
int3
aaa
inc
xchg
or
fucomip
mov
dec
lret
xor
adcl
das
mov
mov
mov
lods
sti
lret
dec
ficoms
jbe
mov
shl
pop
mov
ss
xor
outsb
js
mov
aas
jb
es
xor
inc
inc
std
mov
xor
sub
pop
call
nop
sub
or
js
aam
mov
push
mov
cmp
pop
fdivrl
mov
sbb
xor
sub
and
and
call
push
repz
out
mov
out
fnsave
and
in
dec
mov
push
mov
pop
subb
fdivrl
je
add
inc
dec
es
mov
aaa
fdivr
xcrypt-cfb
cmpsl
sarb
iret
add
and
lret
xchg
or
jg
clc
sbb
lret
jo
aam
push
fcomps
jae
sbb
pop
call
loopne
add
and
inc
pop
adc
inc
repz
testl
dec
loopne
out
arpl
scas
cmp
movsl
adc
adc
mov
add
roll
fwait
cmp
mov
stos
cmpsl
jmp
ss
add
fnstcw
inc
incb
popf
adc
fucompp
inc
pusha
ds
ja
fildll
shl
aaa
into
fsts
pop
pop
shl
add
hlt
jg
sub
in
add
les
loope
xchg
push
lcall
shl
testl
jo
xor
in
aam
mov
inc
cmp
mov
ja
shlb
inc
cmp
pop
out
pop
test
pop
xchg
add
shr
testb
dec
xor
in
adc
push
sub
push
mov
das
aad
and
inc
xor
push
fcoms
jae
jbe
adc
cmp
lret
push
outsl
or
mov
bound
pop
imulb
and
fsubs
lcall
sub
jmp
mov
xchg
jbe
iret
xchg
movl
lods
sbb
xchg
cmp
sbb
adc
cld
or
push
mov
xchg
ja
shrl
cmc
or
pop
mov
xor
sbb
adc
sbb
seta
repnz
or
fwait
in
test
adc
adc
dec
xchg
push
and
icebp
or
scas
shrb
dec
adc
pusha
push
dec
test
push
mov
xor
mov
test
fwait
pop
cmpsb
inc
incl
pop
gs
imul
adc
popa
sub
shlb
sub
sub
inc
mov
jmp
jnp
imul
sub
jecxz
shlb
scas
test
add
lods
ja
push
lcall
outsl
jns
mov
decb
xchg
aaa
ja
call
sub
and
xchg
enter
arpl
jle
insb
cltd
repnz
addr16
sarl
dec
aas
test
daa
dec
int
cmc
arpl
jecxz
mov
mov
push
mov
push
mov
movups
push
lock
mov
sbb
adc
sbb
loope
enter
jne
mov
push
arpl
xor
or
xchg
loope
push
cmp
push
mov
cld
xchg
mov
pop
jb
adc
sbb
sub
lret
enter
cmp
pop
jge
repz
mov
push
arpl
adc
mov
out
xor
add
xor
or
dec
stos
fdivp
shlb
push
cwtl
jg
push
jbe
mov
pusha
adc
inc
push
test
shlb
jno
ss
mov
bound
jl
lock
ds
fcmovnu
out
movsb
lahf
cmp
jno
and
mov
dec
pop
insb
add
mov
js
test
mov
data16
imul
int3
and
mov
test
roll
xlat
jo
dec
inc
lock
movsl
ret
insb
cs
in
je
aaa
movsb
xchg
fstpt
push
sti
pop
gs
jne
or
out
test
sbb
cltd
insb
pushf
pop
jp
outsb
stos
adc
std
mov
fldcw
mov
sbb
fildl
ss
loope
repz
iret
mov
adc
popf
pop
cli
cli
pop
xor
dec
sarb
pop
fldenv
inc
cld
mov
inc
mov
mov
shr
aad
adc
lcall
in
sub
insb
or
cwtl
dec
xlat
dec
jmp
xchg
mov
cmp
stos
lods
pop
aam
dec
xchg
xchg
cmp
add
sar
adc
aaa
or
mov
imul
jge
sub
in
jg
shrd
inc
add
sbb
cs
dec
xchg
and
xchg
andl
mov
mov
and
adc
aad
aas
fistpll
shll
out
inc
lahf
sbb
jge
jmp
imulb
mov
jl
mov
roll
mov
push
ljmp
adc
shlb
sbb
push
jne
mov
mov
imul
and
pop
push
xchg
or
out
cmp
fildl
inc
adc
and
add
or
dec
sbb
popf
pop
in
cmp
adc
cwtl
cmc
test
jb
mov
ds
xchg
es
cmp
gs
mov
ret
cltd
test
repz
mov
mov
pop
addb
loopne
aas
cmp
sbb
jb
in
xchg
out
aas
pushf
dec
pop
int
das
sub
push
dec
adc
leave
dec
ret
dec
aad
jbe
pop
nop
addr16
sbb
sub
insb
and
ss
and
gs
clc
es
mov
fildll
sbb
sbb
inc
sbb
sub
out
subb
push
and
hlt
shl
adc
insl
push
jl
pop
stos
sub
cli
mov
adc
mov
ret
rcll
fst
les
adc
insb
inc
ja
or
pop
xchg
imul
cmp
lahf
insb
js
or
arpl
push
jae
ljmp
xchg
imulb
ljmp
fwait
mov
fiaddl
pop
test
add
ffree
stos
xchg
pop
sub
pusha
dec
lods
rclb
out
pop
adc
or
lods
movsb
sub
ljmp
stos
iret
ja
sub
or
mov
mov
shl
adc
mov
jge
pop
js
cwtl
insb
es
loopne
add
sub
out
fucomi
stos
lret
xor
stc
out
das
xchg
das
int
sub
movsb
daa
imul
fidivl
sub
bound
cmpsb
sahf
jb
loop
clc
fsubl
pop
stos
add
icebp
repz
mov
repnz
int
sub
outsb
or
mov
push
push
mov
jg
pmaxsw
jmp
call
movsl
mov
cltd
and
xor
in
adc
xlat
pushf
ss
add
dec
inc
iret
or
imul
jb
push
and
mov
push
ja
or
sar
dec
dec
xor
rclb
sub
xor
cmp
xchg
push
in
es
or
xchg
dec
ficompl
jno
pushf
aas
shrb
pop
mov
adc
pop
movaps
jp
notl
adc
and
jns
sbb
xchg
sub
iret
test
mov
roll
sbb
jnp
mov
inc
xchg
outsl
pusha
test
xchg
cmpsl
sub
and
jp
mov
add
enter
iret
dec
stos
call
xor
ffreep
stc
xchg
outsl
mov
sbb
aam
add
js
in
xlat
cltd
sbb
mov
fcom
ja
fwait
mov
ljmp
cmp
xchg
xchg
mov
icebp
rorl
les
mov
push
pop
shrl
outsl
jae
inc
sub
pop
loopne
mov
nop
inc
pusha
and
mov
aaa
aam
pushf
adcb
mov
gs
dec
andl
sub
jb
insb
pop
ret
dec
push
push
stc
dec
push
lds
sbb
pop
aad
inc
sub
mov
mov
dec
and
sub
das
pop
cli
sbb
in
gs
mov
inc
scas
mov
push
das
subl
loopne
mov
jae
scas
ss
in
push
rorb
sbb
jae
cmp
jno
xor
test
mov
adc
cmp
loop
mov
movsl
rol
js
fstps
inc
sbb
cmp
rcrb
insb
pop
inc
xor
jno
mov
cld
adc
dec
xor
movsl
push
into
andl
cld
mull
ds
ja
inc
lret
dec
hlt
push
or
pop
mov
insl
gs
xchg
mov
xchg
sbb
popf
cs
and
xor
push
push
and
inc
pop
movsl
out
out
jno
xor
lcall
out
int3
or
lcall
shlb
ljmp
ds
mov
xchg
fs
out
nop
sbb
add
fs
jnp
mov
xchg
mov
cmp
inc
mov
push
aas
lret
aas
sub
cmp
mov
push
mov
ja
adc
sahf
jnp
push
outsb
bound
sbb
popl
stos
push
sub
ret
rorl
je
add
add
leave
mov
dec
fdiv
fcoms
cmp
loop
adcb
dec
divb
jmp
incl
pop
loope
xchg
xchg
mov
ret
mov
daa
je
add
cmc
and
dec
loop
lds
repnz
iret
pop
pusha
stos
nop
push
hlt
add
mov
pop
shll
std
cltd
jbe
inc
int3
js
push
inc
test
gs
mov
inc
filds
cltd
cmpsb
mov
sbb
jmp
push
sbb
mov
repz
enter
fisubrl
fcoms
pop
mov
or
fstl
into
jmp
fwait
dec
outsl
and
jbe
xchg
push
es
ds
mov
cmp
push
adc
mul
pop
leave
cmp
test
aam
mov
das
out
in
shrl
cli
js
pop
mov
xchg
imul
faddl
in
or
push
sub
int3
sbb
dec
fucomi
imul
outsb
pop
xchg
vxorps
add
es
push
rcl
inc
push
addb
pop
ljmp
adcl
inc
movsb
sbb
lods
xor
arpl
fdivp
push
sub
jo
shll
jns
add
or
std
jle
lret
sub
mov
stc
lea
add
push
xchg
movsb
sub
in
jl
jle
daa
scas
into
cmp
inc
cltd
xor
xor
ljmp
mov
cmp
imul
scas
fwait
int
jge
jl
mov
outsb
in
int
sbb
xchg
pop
notl
cwtl
xchg
imul
ret
xchg
pop
js
xor
lahf
adc
sub
push
sbb
loop
jae
ficoms
pushf
stos
andl
jbe
int
xor
test
sub
dec
dec
dec
hlt
loopne
repz
and
mov
out
jle
insl
jno
pop
push
btr
pop
cmc
mov
dec
mov
jne
iret
mov
mov
pushf
lea
jg
mov
pop
pop
jmp
mov
push
dec
pop
idivl
sub
sbb
or
push
push
dec
push
push
mov
add
fadds
fcompl
jno
lea
xchg
test
movsb
adc
dec
popa
fsubs
enter
push
add
popf
es
sbb
test
pushw
xchg
mov
lret
div
and
cmc
arpl
fadds
scas
and
mov
cld
shrb
and
clc
in
cmp
lcall
push
or
xor
push
mov
mov
cmp
jbe
push
movsl
xchg
jle
xchg
out
jge
dec
loop
jb
mov
xor
jbe
mov
repnz
mov
sbb
sbbl
xor
fcomi
jl
les
sbb
int3
mov
mov
cmpsb
adc
mov
es
lahf
test
pop
aad
cmp
and
inc
or
mov
movsb
or
mov
int
dec
pushf
lret
mov
lret
mov
mov
cmp
pop
xorl
aas
sbb
movl
js,pn
push
jae
dec
or
push
int3
scas
inc
jmp
rcl
or
sbb
xchg
cmc
orb
je
or
cld
xor
add
sbb
imul
rorb
je
rcrl
in
pop
cmp
stc
aas
popa
ret
scas
and
subl
fisttps
loope
xchg
call
aad
call
mov
mov
cmp
and
ja
xchg
ja
out
add
shlb
xor
adc
dec
int
xchg
pusha
mov
aaa
xchg
xchg
mov
cmp
push
repz
mov
inc
inc
mov
xor
into
dec
mov
add
leave
repnz
iret
movsb
dec
sahf
pop
aam
data16
lock
push
adcb
imul
inc
std
adc
push
faddl
xlat
xor
lea
popa
and
jbe
cli
sbb
into
js
test
push
les
jbe
jo
addb
int3
bound
jge
in
mov
push
jecxz
iret
dec
push
mov
cmpsb
push
xchg
int3
mov
ja
jo
xlat
adc
fsubs
pop
inc
jne
inc
shl
aas
xlat
xchg
and
jno
mov
scas
add
push
mov
jnp
add
mov
in
push
movsb
push
adc
mov
sahf
lahf
test
mov
push
add
addr16
and
adc
add
mov
mov
inc
xor
popf
mov
adc
shlb
mov
jmp
xchg
mov
adc
jge
mov
repnz
xor
imul
and
repnz
call
lea
movsb
pop
sbb
cwtl
daa
and
push
add
lcall
out
or
dec
inc
nop
in
mov
sub
push
mov
sbbb
aas
cmp
out
push
pusha
scas
repz
das
stos
stos
shlb
adc
in
and
shlb
inc
xchg
sub
jne
jmp
inc
pop
in
dec
dec
pop
pop
ja
sbb
cmp
add
add
cld
ljmp
sub
jno
fsubrs
and
sbb
out
cmpb
stos
aad
idivl
jl
dec
inc
call
lahf
jmp
mov
mov
sbb
fmull
pusha
pop
movsl
les
pop
pop
mov
sub
and
pushf
dec
push
adc
and
xor
test
push
mov
lods
sub
icebp
popl
rclb
outsl
pop
mov
aas
xor
cs
in
add
in
push
int3
div
or
mov
in
leave
mov
add
mov
imul
inc
lcall
movsl
fimull
loopne
insb
mov
xor
xchg
push
cld
mov
pop
jb
pop
pmovmskb
fdivrl
xchg
mov
jl
repz
jno
into
in
cld
mov
rcl
push
fnsave
xchg
sbb
sbb
jmp
imul
loop
inc
std
pop
add
out
cmp
test
in
mov
out
push
push
mov
ret
cli
lcall
push
cltd
pop
movsb
jns
lods
mov
rclb
and
push
fcmovbe
subl
in
jmp
dec
ror
mov
popf
mov
xchg
mov
inc
cmp
jns
jl
clc
lcall
dec
cli
and
mov
inc
shll
xor
add
jb
test
loopne
arpl
imul
mov
imul
cmp
lcall
shr
mov
stos
fmull
outsl
xchg
lcall
xchg
les
ficomps
pop
shll
aaa
sbb
cmc
clc
je
aaa
jb
out
aad
xchg
loope
dec
or
and
jmp
pop
and
adc
fdivrp
aam
or
aas
cmc
rorb
and
xor
sbb
inc
movsb
mov
int3
es
cmp
mov
loopne
lahf
jns
addb
int3
mov
scas
xchg
inc
daa
mov
xlat
stc
test
pop
es
out
push
mov
fwait
call
pop
push
pop
adc
mov
xchg
mov
jnp
dec
into
mov
xchg
nop
imul
sub
dec
scas
stc
jne
mov
lock
shrb
pop
clc
inc
popa
dec
scas
and
outsl
test
mov
pop
mov
flds
xor
xor
adc
rcrl
neg
fildll
cmpsl
repnz
dec
mov
shll
call
in
arpl
add
enter
test
or
inc
jge
dec
fidivs
push
rclb
nop
enter
bound
ret
ljmp
xor
pop
xor
pop
pop
inc
sub
fmuls
push
mov
cli
into
gs
loope
xchg
dec
call
pop
hlt
imul
sub
fincstp
repnz
jb
ret
loope
dec
stos
inc
cmp
dec
lret
add
pop
pop
imul
scas
shlb
mov
push
push
xchg
push
bound
imul
test
push
daa
scas
jle
std
dec
jno
mov
and
mov
xorl
xor
xchg
xchg
pushf
cld
and
loope
push
mov
jl
jp
cmp
xorl
cmpb
push
nop
movsl
xchg
jle,pt
lret
or
add
test
xchg
je
fwait
lock
cmp
xchg
and
sbb
inc
inc
popf
and
lea
mull
int3
and
sbb
scas
test
push
arpl
pushf
ret
enter
js
push
in
addr16
jno
ds
cmp
and
mov
outsb
loop
scas
scas
loopne
fnstcw
rcrl
inc
pop
arpl
arpl
into
pop
rcrb
xor
xor
sub
decl
mov
mov
ret
and
pushf
ror
out
sbb
shll
aas
mov
add
dec
fs
pop
push
sbb
mov
cmp
xor
fidivrs
xchg
imul
rclb
or
inc
jbe
xor
sarb
shl
mov
icebp
lods
or
cltd
rorl
sbb
or
jbe
mov
and
mov
aas
mov
stos
mov
and
outsl
or
xchg
popf
les
xorb
xchg
or
mov
add
push
scas
lods
sahf
fimull
out
das
hlt
and
inc
jge
sub
cmp
sub
pushf
sbb
pop
sbb
pop
and
or
or
and
notb
insl
es
jp
movsl
shl
js
cltd
out
loopne
pop
mov
stos
dec
jnp
orl
jmp
std
daa
ds
sbb
movl
sbb
push
movsb
xchg
std
cmp
data16
push
and
nop
lahf
adc
jmp
inc
ficoms
xchg
xchg
sub
or
into
adc
icebp
pop
jle
cmpsl
stos
das
inc
lds
pop
sarl
mov
and
mov
adc
test
pusha
xchg
push
xor
inc
out
pop
dec
and
mov
mov
outsl
je
loope
inc
movsb
xorb
les
ss
hlt
ljmp
pop
ss
outsl
sti
add
sahf
push
sub
pop
mov
das
cltd
iret
xor
pusha
lds
out
cwtl
enter
cmpsb
dec
mov
inc
sub
hlt
jns
inc
popf
add
lea
xor
movsl
or
inc
mov
shll
mov
lds
fmul
in
jnp
mov
sub
xor
fstpl
cld
jns
inc
inc
sub
test
mov
repz
in
cmp
fiadds
pop
ss
dec
xchg
mov
shl
js
outsb
rclb
push
cmp
or
stos
sub
fs
pop
shlb
out
mov
and
xor
lret
xor
xor
push
out
stos
adc
pop
sub
cmp
ds
cmp
loopne
and
ss
jg
adc
fs
data16
adcl
sbb
inc
stc
push
in
mov
jo
adc
cmp
bswap
cmp
sbb
adc
cmpsl
js
lock
lock
lds
leave
dec
insb
mov
xor
add
cmpsb
inc
mov
in
and
rol
imul
add
filds
mov
sub
jmp
ds
adc
push
mov
adc
cli
xchg
int
ja
into
adc
xchg
lahf
pop
add
pop
pop
lea
sbb
jo
cmpsb
icebp
jmp
dec
in
or
mov
std
sub
mov
or
and
add
insl
test
test
add
addr16
mov
in
pusha
sbb
sub
pop
push
sbb
movsb
clc
dec
add
sarl
imul
int
arpl
out
jae
nop
mov
dec
adc
lahf
adcl
ljmp
addr16
stos
pop
cmpsl
mov
mov
push
cmp
shrl
push
xor
adc
aad
ljmp
shlb
xchg
les
pop
inc
dec
lock
fmull
imul
lea
mov
ss
fidivrl
popa
hlt
fwait
out
lret
pop
addl
incl
jmp
fadds
lret
mov
cmpsb
jp
xor
xchg
mov
call
or
fst
mov
dec
inc
xor
xorb
pop
in
ljmp
jbe
mov
adc
scas
sub
aad
xlat
mov
shlb
pop
dec
add
fcmovne
push
pop
and
pop
push
es
cmpsb
out
repnz
add
and
dec
imul
imul
dec
fisttps
cld
inc
lds
push
and
arpl
inc
mov
fsubl
push
out
loope
sbb
push
jb
das
xor
jg
repnz
add
test
ja
aad
mov
es
push
decl
dec
lock
sub
and
or
xor
das
add
pop
inc
xchg
pop
ds
jle
fisubrl
leave
in
in
cld
mov
cmp
push
pusha
push
add
enter
dec
and
vmread
dec
arpl
js
or
cmp
pop
dec
cltd
pop
shlb
sub
lahf
mov
push
or
aaa
sub
enter
add
push
jg
sahf
xchg
sbb
out
xor
mov
mov
adc
testl
sub
jo
xchg
in
mov
lock
ss
out
and
roll
mov
dec
sub
adc
jg
fmull
pop
cmp
dec
es
dec
jne
jns
push
pop
es
xchg
movsb
pop
xchg
cmp
cmp
fucom
dec
sbb
sbb
mov
or
mov
and
hlt
fisttps
inc
push
jo
je
fwait
pop
movsl
test
sbb
and
mov
fdivrl
xchg
sub
mov
divb
inc
mov
sbb
js
jecxz
movsb
push
mov
xor
xchg
xor
push
stos
adcb
mov
add
int3
ret
or
push
cld
fbstp
in
cli
sarl
out
into
test
fwait
jle
cmp
jno
icebp
xlat
dec
rcrl
aad
test
mov
cltd
sub
sub
mul
sbb
stos
loope
cmp
loope
stos
jmp
push
jmp
sbb
pop
cmpps
lahf
in
pusha
jp
adc
pop
aam
pushf
cmp
mov
decl
dec
jg
lods
imul
push
xor
push
add
dec
rolb
stos
mov
pop
sbb
pop
and
xor
call
ds
jno
pop
call
stc
or
std
mov
pusha
inc
jmp
aas
sub
mov
inc
addr16
jb
rol
lcall
mov
aaa
or
mov
push
sub
xchg
cmp
sbb
call
pop
lret
divl
xchg
pop
js
outsl
filds
lcall
popf
test
adc
and
dec
add
gs
orl
fstps
jb
xor
gs
scas
sub
cwtl
xchg
sub
push
or
inc
scas
andl
or
stc
pop
and
lock
push
cmc
lahf
std
int3
pop
xlat
cs
insl
arpl
fadd
iret
fisubl
cmp
insl
orl
int
fdivrl
pop
enter
mov
push
pop
pop
adc
cmp
js
jno
int
int3
xlat
aaa
stc
lds
fwait
iret
adc
sahf
fadds
xchg
cli
mov
in
mov
pop
fsts
sub
orl
dec
negb
push
cmp
loope
jle
inc
into
sub
fwait
inc
adc
into
push
push
add
lds
pushf
xor
outsl
in
pushf
lcall
pusha
sbb
je
inc
stos
loopne
mov
gs
cmc
pop
push
mov
or
sbb
out
xor
pusha
js
fstpl
inc
sub
push
xor
leave
das
add
xlat
add
cmp
std
pop
rorl
arpl
scas
test
jae
cmpsl
cld
cmp
sbb
mov
jge
mov
lods
cwtl
xorb
arpl
add
sbb
mov
inc
and
lcall
jp
xchg
jnp
fisubs
or
dec
push
pop
fcmovnu
fldenv
loope
adc
repz
jmp
mov
xor
insl
les
sbb
xchg
adc
or
dec
xchg
test
negb
imul
and
in
cwtl
pop
mov
mov
cmp
or
jecxz
dec
mov
sub
sub
adc
in
ret
mov
testl
stos
adc
cmpsb
fists
test
mov
leave
shrd
pop
sarl
cmp
in
sub
adc
roll
xchg
daa
xor
xor
mull
mov
adc
adc
sub
push
mov
aaa
push
das
repz
pop
hlt
cwtl
add
or
jae
pusha
hlt
adc
pop
fdivrs
sub
loope
insl
dec
movsb
add
inc
mov
inc
shrb
push
push
inc
outsb
xorb
push
mov
sbb
mov
and
adcl
lret
sahf
mov
jge
jl
and
filds
in
test
xor
aam
mov
cmc
inc
add
push
arpl
dec
shlb
pop
jo
loope
das
jno
rcrl
pop
clc
pop
mov
mov
push
cltd
stc
inc
cmpb
ljmp
inc
out
ret
std
add
mov
cwtl
sub
xor
dec
jg
shll
movsl
jg
xor
test
mov
mov
or
push
cmpsb
arpl
inc
push
inc
mov
jmp
int3
pop
mov
mov
or
aam
imul
mov
mov
push
xor
dec
mov
in
fsubl
rol
mov
pop
xor
mov
dec
cmpsb
xchg
dec
jno
dec
test
ss
inc
aas
rorb
out
insb
decl
add
lahf
shl
mov
aad
into
push
mov
out
ret
cli
icebp
cli
call
out
into
loopne
mov
loopne
lcall
popa
pop
pop
push
test
mov
test
andl
push
hlt
jmp
js
pop
adc
in
inc
rorb
insb
xchg
xor
add
cmp
mov
adc
jb
push
dec
sbb
pop
add
fwait
push
imull
push
dec
mul
and
cmpsl
xor
dec
xor
adc
insb
cmpsl
cmp
push
jmp
adc
cmp
mov
hlt
xchg
js
cmpb
jl
ljmp
faddl
insl
push
jae
or
cmp
scas
sub
iret
in
sub
shl
cmp
sbb
or
lock
bnd
dec
ja
addr16
lods
mov
pop
call
leave
lahf
pop
fs
jecxz
pop
in
xor
test
mov
scas
jg
adc
mov
mov
or
cwtl
cmp
std
pop
pop
repnz
shlb
jecxz
sbb
xor
cltd
cmp
xlat
movsl
arpl
mov
add
fsubp
adcl
rcrb
out
mov
mov
test
cs
nop
gs
push
mov
repz
jmp
repnz
pop
push
push
bts
divb
std
clc
sub
sub
pop
stc
inc
or
je
push
inc
popf
pusha
jbe
adc
mov
push
dec
les
pushf
inc
mov
xchg
pop
push
jo
movsl
aas
test
int3
push
push
call
push
popl
movsl
sti
cmp
xor
add
dec
dec
rcrl
js
dec
push
dec
cmp
sub
adc
or
in
out
in
je
pushf
pop
scas
filds
rcrl
aam
into
adc
and
insb
jne
push
mov
fsubrs
in
add
in
fdivs
jp
gs
stc
jle
xchg
adc
adc
mov
xchg
mov
push
aas
dec
fcompp
hlt
adc
mov
pop
push
dec
test
scas
and
sub
cmp
push
lea
adc
push
arpl
push
mov
xchg
enter
hlt
xor
dec
vmovaps
int
stos
inc
add
mov
out
gs
nopl
push
mov
fidivrl
movsb
sbbb
sub
push
cmp
lea
xchg
cmpsb
mov
fbld
popl
mov
adc
adc
and
adc
jg
sbb
xlat
push
jo
pop
shrl
int3
adc
fdivrl
push
lahf
ljmp
ds
lahf
and
cmp
inc
ret
addr16
dec
addb
movsl
call
int3
jg
jl
dec
movsl
int3
pusha
mov
inc
jns
jno
jno
fwait
jge
cmp
mov
in
mov
mov
sbb
lods
in
lahf
addr16
sbb
shlb
clc
movsb
insb
andl
inc
mov
dec
lock
jbe
sbbl
je
cmc
adc
xchg
push
in
stos
push
adc
test
cmp
mov
or
in
test
push
mov
ds
inc
repz
sbb
push
ljmp
push
imul
sub
pushaw
loope
inc
lahf
jno
cmp
xorb
sub
clc
gs
stc
lea
fmuls
xchg
popl
cmp
scas
scas
dec
jne
cmp
loopne
mov
xor
mov
and
xchg
mov
jo
mov
ss
cwtl
mov
dec
inc
aam
adc
adc
xchg
mov
jle
or
ja
loope
adc
sbb
adc
inc
es
push
mov
mov
or
mov
std
aas
popa
pop
add
lods
push
and
imul
jmp
or
xor
movsl
cmp
add
and
enter
std
adc
cli
or
xor
dec
les
sub
dec
lods
stc
push
and
mov
out
mov
daa
or
push
sub
scas
sbb
shlb
fstp
mov
das
xor
scas
inc
dec
repnz
lcall
ret
pushf
pop
es
cmp
sarl
in
cmp
cld
pop
dec
sti
hlt
inc
rorl
inc
push
dec
lret
ss
xor
xchg
je
int3
push
and
inc
aaa
add
xchg
call
hlt
insb
xlat
data16
sub
sbb
lret
add
add
outsl
pop
cmp
push
xchg
xor
shlb
loop
xchg
shll
jecxz
mov
bound
das
bound
add
inc
pop
mov
sub
insl
xlat
mov
fcmovnu
jne
les
add
push
mov
sub
and
sbb
jp
in
jmp
insb
xchg
or
push
incl
lret
adc
push
add
out
push
dec
lods
in
sbb
int
mov
testl
loopne
mov
jecxz
pop
inc
cmpl
data16
cs
lahf
mov
pop
pusha
adc
test
idivb
sbb
insb
cmpsl
xchg
adc
mov
in
xchg
aad
push
daa
jp
decl
sahf
mov
sti
lahf
cmpsl
outsl
into
ds
sbb
adc
and
pop
xchg
fs
lahf
mov
bnd
pushf
imul
int3
aam
mov
mov
sbb
xor
insb
jmp
mov
mov
test
push
rol
add
mov
dec
jae
fsubrs
arpl
jno
jns
or
or
outsl
pop
pop
nop
or
sub
cmp
std
push
mov
in
and
add
call
and
push
in
shll
leave
out
stos
sbb
sbb
xor
scas
and
mov
jecxz
push
dec
cmp
lods
jg
jae
xchg
imul
jg
cmp
enter
pop
xchg
adc
jp
push
out
mov
pop
testb
adc
mov
test
xor
dec
mov
dec
and
cmp
inc
stos
pmulhuw
nop
cmpsl
sbb
mov
hlt
pop
xor
jbe
aas
push
imul
fwait
andl
mov
ja
mov
xor
dec
cltd
mov
cmp
dec
loop
mov
cmp
popa
sahf
aas
mov
stc
pop
gs
movsb
or
push
neg
dec
push
aaa
xchg
rep
jb
adc
leave
repz
adc
jnp
loope
mov
or
push
aam
pop
add
shll
pop
popa
sub
xchg
mov
aam
xlat
fwait
les
cmc
lret
xchg
push
outsl
inc
aad
loop
test
sub
leave
mov
cld
test
aad
jg
sub
inc
xor
pushf
adc
lods
add
mov
fdivr
dec
das
mov
or
out
sbb
adc
mov
fwait
sahf
rcr
xor
test
stc
decl
dec
xor
lock
fcoml
iret
push
push
repnz
xlat
xchg
mov
or
pushf
insb
rol
out
jbe
xor
icebp
add
push
push
cwtl
fwait
shlb
cwtl
leave
out
ret
scas
sti
out
push
insb
fcomps
inc
mov
mov
in
outsl
cli
cmp
test
cmp
xchg
int3
xchg
insl
push
mov
out
mov
add
aad
push
pop
sahf
sbb
daa
adc
push
add
sub
push
mov
movsl
and
leave
sbb
inc
mov
lods
jecxz
pop
test
movsb
dec
movsl
jle
or
pop
shll
lcall
push
fisttpl
jl
pop
mov
push
cld
stc
daa
pop
addb
sub
das
sbb
es
rep
jg
in
std
lds
repz
push
push
scas
addl
mov
push
pop
and
mov
push
into
sub
mov
jmp
out
cmp
mov
rcl
into
scas
mov
je
clc
or
jns
xor
insb
ds
fists
xlat
aad
mov
repnz
cli
or
shrl
pop
add
insl
mov
lret
mov
imul
lahf
popf
and
popa
sub
dec
rcrl
sub
jo
arpl
sti
and
fnsave
shlb
jbe
xchg
mov
adc
aas
adc
ja
insb
xchg
in
and
inc
or
les
subl
xor
movsl
jl
cmp
inc
mov
xlat
push
xor
bound
orb
cmpsl
or
in
sti
sbb
inc
cmpxchg
call
ja
roll
test
lods
dec
scas
push
cwtl
call
mov
xchg
pop
cltd
icebp
pop
std
test
cltd
arpl
dec
lret
mov
hlt
sub
andb
mov
dec
dec
cmp
test
dec
mov
fldt
inc
cwtl
mov
sub
fimuls
ret
jb
outsb
ss
icebp
sti
cwtl
and
xchg
ss
je
pop
mov
mov
lret
cmpsb
cmp
ret
loop
push
icebp
rcrb
pusha
jns
js
cs
ret
test
ss
notl
adc
ljmp
adc
pop
in
je
in
adc
mov
out
outsl
fst
xor
int
add
imul
insb
pop
pop
rcl
cmp
xlat
and
not
inc
arpl
xor
cmp
sub
adc
and
cmp
or
adc
jecxz
or
pop
std
std
imul
sbb
leave
xor
outsb
gs
lahf
adc
arpl
daa
psubusb
or
loope
out
ret
sbbb
or
pusha
or
iret
out
mov
sub
push
dec
test
popf
data16
fnsave
gs
dec
scas
int
andb
inc
and
sub
les
jo
sti
pop
popf
ret
fwait
push
jb
iret
mov
jecxz
pop
sub
dec
std
jo,pn
adc
add
pop
fldl
adc
push
jbe
xchg
ja
sbb
aad
in
xchg
fsts
and
lea
data16
push
adc
fsubrs
mov
push
inc
in
jo
mulb
pop
shll
popa
push
arpl
into
push
mov
dec
or
stos
repnz
sti
pop
ljmp
adc
fidivrl
xchg
cmpsl
cltd
test
cmpsl
cmp
pop
adc
incb
pop
shl
sbb
push
jb
mov
lea
dec
jmp
push
fdiv
jecxz
mov
lods
mov
rclb
sub
es
mov
sbb
xchg
in
js
lret
mov
dec
out
jg
push
push
mov
pop
mov
sbb
mov
cwtl
mov
pushf
out
mov
fwait
mov
jo
test
lods
or
dec
test
mov
ret
dec
adc
dec
ficompl
mov
add
xor
jno
or
shlb
arpl
pop
pop
pop
push
loop
jb
inc
das
mov
shlb
dec
push
fimull
jg
fcoms
std
out
out
push
cmpsb
fidivrl
push
pop
xchg
fdivrl
pop
in
cmpb
push
xchg
bound
push
xor
mov
mov
mov
outsl
daa
jecxz
xlat
xor
mov
cli
aam
dec
pop
rclb
hlt
jne
mov
shll
mov
jecxz
sbb
jle
dec
xchg
into
loopne
dec
inc
sub
bound
scas
pop
aaa
or
sbb
pop
mulb
pop
adc
xchg
push
arpl
rclb
sbb
repz
out
je
push
dec
sub
sub
push
dec
in
gs
xchg
jp
xchg
inc
add
sbb
iret
out
aam
sahf
stos
push
jmp
inc
testb
xor
sbb
dec
sub
lahf
test
mov
xor
in
pop
cltd
stos
cmc
inc
jae
lods
jbe
xor
fisubrl
fsubl
out
lock
imul
leave
adc
test
out
add
pop
jl
cmp
adc
inc
xchg
lret
pop
xor
mov
shll
mov
pop
mov
fnstsw
cwtl
daa
fsts
in
pop
sti
aas
cmpsl
add
or
in
jo
cmpsl
jnp
int
sbb
mov
mov
aam
nop
xchg
into
sahf
arpl
lret
inc
clc
cltd
das
jp
outsb
lahf
push
int3
loop
dec
cwtl
mov
and
mulb
out
sub
popa
mov
out
mov
and
mov
adc
and
sar
sub
aas
aas
call
add
outsl
loopne
aaa
sbb
pusha
cmp
hlt
testb
push
cmp
mov
es
sarb
pushf
cmpsl
add
pop
dec
and
icebp
cmp
fcomps
or
cmp
leave
xlat
sahf
mov
shll
aam
and
or
das
jecxz
inc
pop
fstl
inc
xchg
cltd
iret
xchg
iret
inc
and
xchg
adc
inc
imul
packssdw
jp
ret
add
movsb
aaa
mov
jb
mov
and
mov
and
xchg
fldt
js
push
arpl
jo
ja
pop
sbb
sbb
adc
dec
cmpsl
fwait
inc
jae
push
mov
repz
in
dec
and
sbb
lods
call
mov
inc
pop
arpl
movsb
adc
fsts
jle
ret
jno
sbb
xor
lahf
xor
and
jle
je
daa
jecxz
mov
mov
loop
push
movsl
push
and
sbb
fmul
mov
push
ss
jns
in
into
mov
mov
in
mov
lods
div
xor
out
push
cwtl
mov
iret
rclb
es
shrl
pop
sahf
test
insb
pop
sub
scas
add
js
es
jae
test
inc
jnp
pop
mov
pop
fisubrl
ds
daa
sbb
jbe
mov
ds
xchg
mov
inc
sbb
fstl
add
lds
ret
xor
dec
cmc
jl
mov
jb
push
sbb
and
sub
repnz
dec
dec
test
xchg
xchg
sbb
mov
mov
push
mov
and
int3
pop
mov
stos
shrb
and
cmp
or
pop
cs
jns
cmp
enter
sub
mov
repnz
jbe
pop
and
or
or
cmp
ja
in
mov
rcll
pop
stos
mov
nop
out
aas
sbb
fcomps
aaa
or
mov
jp
addl
push
int
ret
or
sbb
pop
sahf
inc
sub
addb
mov
cmp
sub
sahf
cmp
xor
xchg
lods
adc
xchg
push
gs
xor
pop
cmpsl
or
jbe
aad
cmp
lods
sub
mov
add
mov
cli
aad
rclb
into
sti
adc
aas
cld
into
call
inc
loope
into
or
aas
loopne
fs
fcompl
imul
cmp
pop
popf
sub
cmp
ficoml
push
pushf
ret
adc
mov
push
rorb
adc
and
ficoml
dec
gs
imul
and
sub
inc
pop
mov
pop
stc
aas
loopne
imul
mov
xor
inc
and
ds
or
pushf
outsl
in
mov
lret
in
jmp
or
clc
push
cmp
add
jecxz
pop
test
lret
or
dec
jl
mov
into
pop
out
jo
repz
or
aad
and
out
clc
fsts
dec
jbe
jle
cmp
ja
sub
push
scas
jp
popl
test
test
aad
rolb
icebp
jae
imul
push
lcall
int3
mov
inc
inc
out
hlt
pop
jmp
mov
xor
mov
pop
lds
add
mov
push
xchg
inc
mov
sub
xchg
ss
jo
je
sbb
call
bound
push
into
mov
subl
add
jb
xchg
jns
aam
fsubrl
adc
mov
or
lcall
ss
mov
mov
add
stos
js
imul
jno
inc
push
jmp
dec
jle
jne
inc
push
popa
testb
rorl
inc
in
dec
cmc
into
sbb
xchg
sub
mov
xlat
xor
jp
stc
xor
movsl
cmp
dec
xor
ret
les
subb
lods
jae
pop
adc
pusha
mov
jns
push
adc
mov
addr16
sbb
xchg
mov
and
xor
cltd
lret
addb
andb
cmp
add
pop
cmp
es
cmpsb
add
push
insb
cmp
cmp
cmpsb
xchg
cmp
sbb
xlat
dec
or
or
lcall
sub
and
out
andl
pop
cmpb
leave
bound
lea
in
mov
xchg
and
jl
jns
in
in
dec
out
lret
pop
mov
loopne
test
mov
repnz
fidivrs
lds
add
cmp
xchg
mov
xchg
push
fs
sub
sub
repnz
cmp
jo
mov
pop
ljmp
mov
xchg
pop
mov
insl
mov
xchg
negl
shrl
mov
push
jg
js
lcall
pushf
adcl
popa
jno
mov
cmc
mov
or
or
aas
mov
scas
ficompl
xor
xor
pop
adc
mov
pop
dec
sbb
fwait
sub
push
fisttpl
fninit
stos
pop
jo
cmp
shll
mov
and
xchg
lods
inc
push
adc
lea
out
pushf
imul
sub
lcall
movsl
repz
push
add
sbb
insb
mov
in
xor
push
lods
mov
imul
aad
xchg
push
js
adc
push
push
xor
insb
xor
leave
repz
imul
into
aam
data16
sbb
icebp
fdiv
adc
sub
mov
inc
insb
or
jno
and
lods
jmp
popa
push
jge
notb
pop
mov
test
dec
pop
mov
int3
jne
dec
lahf
insb
sbb
or
shll
mov
repz
sub
push
test
sbb
dec
and
dec
outsb
rcll
jmp
repz
cmp
test
es
lcall
pushf
repnz
mov
sub
push
jle
inc
push
inc
push
add
lods
addr16
clc
repz
jge
jno
adc
sub
xchg
lods
xchg
xchg
das
out
push
add
mov
pop
mov
in
adcb
fimuls
push
add
loopne
mov
jge
aad
aam
inc
jo
lahf
inc
mov
std
cmp
mov
sbb
enter
ret
pop
xlat
js
xor
bound
rcrb
lret
aad
or
out
push
xchg
test
dec
mov
cs
jo
fistpl
xor
ja
mov
push
push
ror
mov
out
xor
cmc
push
add
cli
fldt
sbb
mov
test
and
xor
xchg
jb
iret
add
sbb
jmp
popa
test
or
out
stos
ljmp
icebp
sub
mov
adc
inc
xchg
add
push
lcall
pshufw
mov
popa
dec
test
pusha
mov
sub
in
ret
loopne
fsubrl
add
or
mov
add
repz
inc
rorb
call
jmp
inc
aam
adc
iret
dec
and
xchg
adc
inc
dec
sub
rorl
clc
stos
xchg
push
test
dec
mov
lods
pusha
cld
adc
jo
jnp
jmp
or
ret
icebp
icebp
add
shll
fs
jno
popf
cmpsb
hlt
mov
pusha
inc
out
mov
push
mov
nop
mov
pop
shlb
ret
pop
adc
xchg
fwait
pop
movaps
push
sbb
sbb
les
ret
xchg
xchg
mov
xor
sbb
xor
inc
push
cld
adc
jo
mov
add
sub
bound
sbb
add
loopne
sti
cli
fisubrl
loope
jnp
cmpsl
add
in
inc
aas
and
es
inc
pop
mov
mov
mov
lock
jmp
cltd
adc
mov
and
hlt
xlat
push
xchg
arpl
push
data16
cmc
adc
sbb
xchg
and
call
ficoms
xchg
or
icebp
mov
call
xor
sub
pop
mov
jno
sbb
popa
test
dec
stos
sub
add
adc
cli
mov
loop
lcall
pop
fdivrl
in
xorl
lods
es
aaa
repnz
mov
add
fsubrp
dec
movsl
repnz
lea
mov
pop
into
inc
les
mov
dec
mov
adc
fcompl
or
popf
jle
xlat
iret
xchg
int
push
push
popa
sub
aas
dec
insl
dec
jnp
or
jnp
mov
xchg
dec
shlb
insb
shlb
loop
pop
mov
icebp
test
leave
or
inc
and
out
push
push
push
xchg
xor
adc
mov
lods
adcl
push
sub
mov
or
sar
fstps
or
xor
aaa
cld
adc
pop
in
lahf
mov
clc
pop
ret
adc
cld
and
pop
and
cs
mov
mov
cwtl
xor
test
iret
xchg
jg
mov
insb
imul
mov
das
icebp
xchg
imul
dec
cltd
adc
shr
mov
aad
mov
pop
mov
ret
mov
push
insl
push
add
in
mov
jno
pop
out
idivl
insl
xor
out
add
pop
or
test
insl
mov
mov
dec
movb
addl
dec
cs
jo
in
loope
push
dec
lea
test
push
push
mov
pop
fbld
dec
ds
mov
cmpsb
dec
int3
hlt
jg
sub
mov
leave
cli
pop
adc
imul
sbb
or
add
je
sbbl
leave
outsb
jecxz
fwait
daa
lahf
iret
lock
lcall
jnp
mov
push
fwait
js
stos
sub
push
push
aam
clc
or
adc
jg
flds
add
dec
pop
jle
mov
loopne
test
subb
push
mov
sub
cmpb
ss
leave
sub
faddl
fs
fcompl
nop
jnp
movsl
cmpsb
jnp
cmp
jo
inc
test
fisttps
push
jb
cwtl
mov
mov
push
or
std
jo
sub
mov
push
and
xor
push
sub
inc
pop
pop
mov
pop
dec
inc
scas
in
xlat
jo
cs
sub
imul
js
sub
adc
ljmp
inc
es
mov
ss
fdivrl
hlt
fiadds
das
stc
mov
insl
xor
je
mov
mov
add
jmp
fwait
mov
adc
dec
mov
fwait
and
push
lea
pop
and
aam
subb
or
inc
lods
xchg
dec
in
mov
inc
stos
insl
sub
pop
mov
xor
inc
stos
pop
pushf
mov
xchg
bnd
pop
mov
mov
xor
mov
jge
mov
xorl
rcl
push
sub
add
push
mov
xchg
aas
lock
lcall
out
sub
or
stos
cltd
subb
aaa
jns
push
pop
loop
xor
mov
push
pop
lock
add
jns
iret
clc
mov
out
pop
jb
or
adc
sbb
je
mov
sbb
sub
mov
ljmp
icebp
pop
or
ss
inc
adc
lahf
scas
andb
adc
das
push
mov
insl
jmp
testb
mov
jno
jp
mov
mov
lods
xchg
aad
cmc
decl
in
lret
lods
movsb
dec
mov
inc
sti
dec
xchg
adc
push
push
jle
jns
add
clc
adc
out
icebp
add
cmpsb
mov
pop
xchg
stos
or
mulb
cmc
cmp
adc
adc
enter
cmp
fsubr
adc
out
pop
mov
pusha
cmp
popf
push
loope
arpl
iret
xchg
mov
movsl
sbb
inc
mov
mov
filds
push
movsl
in
adc
sub
test
bound
incl
je
adc
xchg
loopne
pop
nop
jle
cs
cmpsb
mov
mov
stos
sub
out
dec
xor
push
cli
add
mov
aad
and
xchg
sub
ret
pop
fsubrl
std
dec
lret
fisttps
push
inc
dec
jl
ljmp
xor
and
enter
les
test
lods
int3
mov
mov
and
ja
vrcpps
sbbl
push
ror
dec
sbb
cmp
mov
push
xchg
shrb
lods
mov
adc
inc
sub
cmpsb
jno
pop
pop
xor
cmp
adc
jno
ror
xchg
push
mov
cmp
adc
imul
and
pop
mov
fwait
inc
lret
aas
je
aam
pop
add
shlb
dec
xlat
subl
dec
roll
inc
xchg
lahf
and
push
push
stos
cmc
push
jp
cmp
sbb
outsl
lret
negb
test
xchg
ret
mov
xor
lahf
imul
insb
aam
inc
add
aas
out
rcll
cwtl
push
js
outsl
lods
addps
mov
aas
push
and
loope
popf
cmp
in
sbb
xor
mov
mov
push
fiaddl
sub
add
bound
dec
pop
dec
call
sbb
xor
xor
ret
in
sub
data16
cmp
test
mov
add
js
add
cs
loope
pop
and
jnp
lock
pop
cmp
jl
das
insl
mov
stc
add
cmp
mov
shlb
push
int
shll
dec
xor
stos
cmp
mov
mov
push
ljmp
lea
and
movsb
pop
jp
push
cld
inc
fwait
cld
mov
pop
sbb
in
arpl
dec
xor
sbb
scas
stc
jmp
fnstcw
test
mov
or
mov
adc
cmp
das
xchg
arpl
into
xor
inc
dec
inc
add
ljmp
shll
sbb
les
adcb
sti
push
pop
jp
mov
push
insb
and
stc
and
lahf
sbb
dec
fcompl
jmp
mov
mov
inc
insl
ss
ja
sub
test
inc
imul
jno,pn
add
push
call
sarl
xlat
push
cli
xor
gs
popa
mov
les
inc
int3
mov
mov
xadd
dec
mov
inc
pop
and
jns
lahf
push
test
arpl
enter
loopne
or
and
sar
xchg
iret
sbb
daa
inc
fs
lea
cmp
xchg
sbb
lds
jno
xchg
cmp
jmp
sub
dec
sbbb
rorb
call
lock
jle
pop
mov
fs
bound
lret
test
movsb
call
mov
add
sbb
repnz
push
mov
xor
and
mov
mov
mov
cmp
mov
mov
bound
jae
fldcw
arpl
inc
adc
xchg
xchg
rclb
loopne
xor
sbb
or
mov
push
test
js
pop
fsub
sti
add
aad
mov
sub
push
sub
cli
aas
js
icebp
push
cld
jecxz
and
mov
mov
pop
rcrb
mov
inc
decb
cmp
mov
dec
xor
popf
lock
imul
add
mov
dec
mov
mov
pop
push
push
mov
rcll
mov
gs
dec
add
movsb
jae
mov
sbb
fs
jb
mov
mov
fisubs
fidivs
out
or
mov
pop
xlat
lock
add
out
mov
jl
jl
ja
nop
xchg
pop
xchg
add
sub
lock
xchg
pop
xor
cwtl
in
aaa
dec
iret
fwait
mov
stc
fwait
inc
sub
mov
mov
lods
or
push
mov
sub
aas
loopne
jmp
dec
add
int3
jmp
int
jmp
or
es
pushf
add
lea
outsl
call
fs
divb
mov
cmpb
jo
mov
cmc
pop
outsb
pop
sub
mov
js
addr16
imul
jl
ja
imul
ret
jno
pop
mov
fldt
sub
adc
ss
mov
push
ds
mov
cld
or
push
mov
push
inc
pusha
ret
inc
push
xor
xchg
test
pop
dec
push
push
jmp
ret
bound
mov
in
in
lock
into
xlat
xchg
aam
mov
hlt
mov
andl
jmp
mov
shrl
in
mov
cmp
out
sub
aad
shrl
sub
or
mov
hlt
adc
mov
inc
ret
sbb
mov
cmp
xor
or
mov
pop
lods
popf
jns
or
jnp
xchg
mov
rcll
das
jne
fwait
jp
inc
divb
jg
fnstenv
push
aaa
xchg
push
cmc
les
add
leave
call
shlb
mov
lea
enter
jle
sub
out
hlt
adc
pop
test
xchg
adcb
adc
outsb
pop
inc
or
xor
pop
push
xor
add
add
adc
fmuls
sbbb
or
scas
push
stc
push
adc
cmp
cmp
cmp
andl
mov
ret
shll
dec
dec
push
add
mov
push
andb
sbb
shll
adc
cwtl
test
or
pop
add
insl
push
push
int
lret
lret
and
pop
fwait
xchg
enter
mov
sahf
stc
aas
pop
mov
lcall
sub
jnp
into
pop
ljmp
xchg
xchg
scas
mov
js
fistpll
rcrl
into
sub
std
cmp
ret
lret
lods
stos
jp
nop
pop
gs
pop
test
or
cmc
mov
lds
lock
mov
lods
cmpsl
mov
cs
lret
ljmp
jp
aad
or
out
aad
mov
pop
xlat
loop
sbb
jae
mov
stos
and
mov
xlat
sbb
shrl
push
lods
mov
dec
add
xchg
add
sarl
mov
jo
fs
adc
inc
xor
adc
mov
popa
pop
icebp
xlat
mov
loopne
push
cmp
inc
mov
stos
add
pop
fdivrs
js
or
dec
cmp
out
add
aad
rorb
icebp
push
ret
inc
xchg
push
imul
mov
insb
movsl
add
pop
pop
fidivl
jecxz
aaa
in
in
xchg
ja
pop
loop
imul
ret
sahf
daa
mov
jle
add
sbb
dec
mov
mov
pusha
add
jmp
jmp
xor
xor
ret
fsub
dec
scas
add
mov
loop
jnp
sbb
scas
lods
dec
das
xor
fucomi
and
adc
aad
int3
fnstcw
xchg
adc
mov
dec
shlb
mov
addr16
add
cmp
and
popf
repnz
fnstenv
iret
popa
pop
lar
sub
nop
push
pop
gs
sahf
pusha
inc
inc
repnz
jo
addr16
das
int3
or
scas
inc
stos
cmpsl
add
jbe
xor
xlat
out
add
push
or
sub
in
xor
dec
jle
into
cltd
add
and
adc
adc
das
mov
cmp
les
out
sbb
jmp
cmpsb
mov
pop
jae
mov
icebp
int3
mov
mov
mov
imul
in
rcrl
divb
jmp
mov
das
icebp
fndisi(8087
xor
xor
dec
repnz
hlt
repz
scas
nop
flds
sbb
loop
jnp
sub
or
pop
lcall
pop
jle
fdivrl
ret
mov
sar
mov
stos
mov
jmp
mov
push
cmpsb
fidivrl
pop
cmp
dec
dec
xchg
jae
nop
sub
sbb
xchg
push
js
mov
add
ja
ja,pt
lret
lods
fstpt
pop
sar
cmp
add
arpl
loopne
cmc
push
int3
outsl
call
ret
or
stos
ret
test
cmpsb
cli
push
std
dec
dec
pushf
inc
push
xchg
mov
out
mov
loopw
add
push
jecxz
fwait
out
pop
stc
lods
movsb
sub
fs
repnz
fst
imul
jge
lcall
leave
push
mov
fisubrs
push
outsb
fists
ljmp
xor
cmc
sub
imul
cmp
xchg
or
mov
xor
hlt
inc
lret
aas
push
fwait
bound
fwait
jmp
jle
adc
popf
jnp
es
cmp
dec
push
int3
cmp
inc
mov
out
push
xchg
pushf
inc
mov
shll
stc
cltd
mov
sahf
sbb
je
sub
push
or
mov
out
les
and
aad
add
jo
stc
cmp
cmpsb
sbbl
incb
iret
ljmp
push
xor
scas
sub
push
in
pop
in
or
mov
mov
xor
or
jmp
fs
stos
fldcw
jp
js
cs
adc
push
mov
push
adc
mov
popa
add
sub
rcl
popw
mov
pop
sbb
push
pop
cmpsb
pop
inc
jmp
lock
pushf
jne
mov
cmp
mov
subl
jle
push
ljmp
cmp
mov
mov
and
push
and
bound
mov
push
and
mov
into
out
notb
data16
adc
fstps
sbb
or
jb
subb
popf
imul
fnstenv
jp
lcall
mov
mov
inc
jp
xchg
push
fistps
xor
mov
das
jnp
adc
jno
mov
cltd
je
test
lods
cmp
test
pop
sarl
jns,pt
push
sub
xorl
xchg
xorl
stos
loopne
mov
mov
cmp
or
inc
add
mov
mov
push
lcall
inc
pop
add
xlat
int3
xor
jae
xor
xor
out
dec
sbb
lock
pushf
cmp
pop
mov
pop
dec
push
sub
xchg
or
sbb
gs
andl
arpl
aaa
aas
and
popa
imul
add
mov
cmp
xor
mov
movsl
fwait
mov
cmpsl
cmc
je
lods
pop
inc
lret
arpl
cld
pop
dec
mov
in
scas
das
imul
xchg
mov
add
pop
fistl
mov
shlb
movsl
dec
mov
xchg
gs
jp
test
sub
pop
pop
sbb
ficoms
lea
pop
sbb
int3
loope
xchg
out
fwait
jl
das
mov
outsb
fwait
inc
les
outsb
push
pop
push
pop
xchg
pop
mov
lret
call
out
movsb
test
mov
or
sub
js
xor
cli
or
xchg
mov
and
addl
in
lea
in
outsl
in
inc
popa
mov
fwait
out
int
pop
mov
adcb
pop
sub
cmp
adc
iret
or
and
mov
sbb
testl
mov
fcoms
gs
xchg
outsl
dec
dec
out
je
movsl
stos
out
inc
lea
mov
xor
dec
insb
push
in
pusha
pop
lock
or
cs
les
out
jb
shlb
and
lock
mov
rcrb
mov
xlat
inc
pop
pop
add
fsubr
add
ljmp
push
xchg
gs
in
sub
int3
jnp
push
mov
mov
add
xlat
insb
push
jnp
aad
sub
xchg
out
cmc
fisttps
cli
filds
hlt
sub
dec
or
jg
or
cwtl
inc
or
add
lret
sub
adc
add
ret
inc
insl
dec
push
pop
aaa
bound
xchg
ret
stc
nop
cmp
xorb
mov
scas
test
sbb
mov
mov
jle
push
pushf
sbb
jl
nop
lahf
mov
mov
or
xchg
dec
notb
sbb
jnp
bound
adc
jge
jno
loop
sbb
shlb
pop
ja
pop
mov
mov
leave
cli
mov
lahf
imul
sbb
leave
mov
cmc
push
mov
bound
subl
das
jmp
insb
imul
mov
movsb
dec
lcall
xchg
inc
inc
in
adc
push
leave
rolb
lea
mov
jno
cwtl
add
and
mov
xchg
pop
mov
push
cmpsb
lcall
ja
fisttpl
pop
sti
pushf
add
popf
jecxz
imul
cld
push
mov
fsubs
data16
inc
mov
mov
jae
inc
js
pop
clc
and
push
sti
inc
mov
pop
ficoms
adc
pop
and
inc
pop
xchg
test
mov
xor
jnp
test
push
call
shlb
xchg
cli
sbbl
xchg
les
push
clc
test
sub
pusha
sahf
mov
repz
stos
subb
fmulp
adc
dec
xchg
xchg
or
or
out
or
iret
imulb
add
add
jge
testb
pop
jbe
cmp
popa
js
cmp
jmp
enter
cmp
sub
and
sub
pop
xor
mov
xchg
cltd
jb
jl
sub
adc
fstps
loopne
imul
and
cmp
pushf
sub
jmp
inc
movsb
sub
adc
inc
in
rcrb
lahf
sbb
in
mov
int
icebp
push
push
xchg
mov
sub
push
out
iret
push
repz
loopne
out
mov
xlat
and
cs
adcb
int3
outsb
xchg
cmpsl
ds
sbb
dec
rcrl
fwait
stos
into
inc
push
inc
lcall
sub
adc
hlt
das
icebp
inc
pop
mov
scas
scas
in
adc
gs
jl
dec
fisubs
cmp
fxch
cld
xchg
mov
add
gs
mov
loop
jb
dec
xchg
fcomip
shlb
xchg
fcmovbe
scas
in
scas
in
inc
mov
pop
inc
mov
orl
daa
insb
pop
imul
or
push
stos
push
shrl
and
inc
inc
jle
jne
scas
or
je
cltd
jnp
xchg
popa
frstor
fcomps
jmp
jp
pushf
bnd
jp
jns
push
out
out
xchg
in
loopne
add
fwait
and
sub
add
pushf
xchg
jmp
adc
push
out
lret
sbb
pop
mov
cli
pop
sbb
push
xchg
inc
mov
shl
fisubl
aas
into
inc
adc
sub
or
xchg
pop
mov
loop
les
mov
add
mov
mov
mov
dec
mov
ja
in
jae
dec
test
sbb
pop
xchg
mov
sti
orl
fcom
daa
cmp
jns
mov
outsl
pop
bound
mov
stos
mov
inc
shl
repz
jge
jg
imul
sbb
movsl
ja
popa
or
mov
mov
add
rolb
fnstsw
push
ret
xor
sub
pop
dec
xchg
adc
aas
xchg
rcll
push
rclb
sahf
out
inc
dec
daa
mov
enter
fldenv
repnz
aad
cmp
sbb
nop
mov
cs
leave
inc
repz
out
rorb
mov
and
push
pop
xchg
lea
das
dec
jmp
jo
loope
aaa
pop
jb
mov
iret
imul
clc
pushf
rcrb
dec
push
imul
test
jmp
out
mov
sbb
aad
add
add
data16
jb
daa
fdivl
call
dec
cli
call
ja
jmp
push
lds
jecxz
ja
cwtl
lods
mov
push
in
clc
fnstcw
stos
push
call
inc
nop
dec
lods
xor
inc
pop
sbb
cmpsb
and
shlb
lret
dec
mov
mov
andl
jl
fstps
mov
shlb
add
dec
sub
bound
dec
sbb
xlat
pop
jne
aad
cmp
and
xchg
call
ds
out
pop
xchg
jmp
loope
sbb
mov
dec
xchg
rcl
insl
xor
or
negb
add
lock
xchg
jne
mov
scas
mov
popa
daa
xlat
loopne
aas
fldenv
sbb
xor
dec
push
mov
mov
jne
iret
push
das
pop
rorl
push
shlb
and
cmp
ficomps
jge
cld
test
std
mov
mov
push
and
cwtl
push
in
hlt
cltd
int3
inc
sti
adc
stc
cmpsl
cwtl
lret
pop
nop
cmpsb
out
xor
lret
mov
dec
lret
xchg
repnz
sbb
mov
adc
call
roll
mov
daa
je
cld
stc
sub
iret
leave
cmc
xchg
rorb
pop
inc
andl
stos
xor
dec
jle
aam
fs
cmp
mov
push
ds
push
add
adc
divb
test
xchg
ja
inc
jmp
xchg
int
inc
insb
mov
adcl
pop
lock
push
cmpsb
ljmp
mov
cwtl
cmpsl
push
aam
hlt
xchg
mov
lods
cmp
add
jmp
mov
ret
adc
fld
and
lds
insl
mov
mov
dec
and
mov
jo
sbb
push
ret
jmp
mov
sub
lods
dec
jl
sub
bound
xchg
push
call
loope
xchg
or
test
sub
popf
test
push
mov
fists
testb
sub
gs
mov
bound
stc
dec
and
addr16
mov
jg
inc
add
jmp
into
jo
xor
push
or
sahf
adc
icebp
sbb
es
mov
cs
popa
xor
jmp
stc
addl
inc
loop
movsl
xor
fistl
or
pop
pop
pop
mov
cmp
sub
mov
push
pushf
fdivl
out
sahf
push
jecxz
jbe
jne
fisubs
movsl
mov
pop
pop
cld
inc
cmp
lcall
mov
cmpb
in
pop
es
scas
aad
sub
es
pop
pop
pop
lods
stc
lods
test
or
mov
dec
xchg
xor
xlat
adcl
dec
les
out
cmp
inc
or
lock
or
add
jp
inc
rcrl
leave
mov
push
xchg
aas
sti
movsl
jb
push
in
outsl
add
mov
xchg
hlt
push
pop
or
pop
out
mov
mov
xor
pop
dec
ret
and
inc
lock
sub
repz
les
dec
bnd
inc
negl
and
and
and
fsubrp
pop
mov
sahf
xchg
pop
cmp
pop
fwait
push
jmp
stc
ret
and
dec
inc
adc
jl
xchg
sbb
std
out
push
cmpb
inc
aaa
inc
cmp
test
mov
mov
pop
shrl
xchg
sbb
clc
insl
xchg
xchg
cmp
enter
push
mov
jbe
outsb
andb
int
dec
mov
arpl
fmull
cmp
pop
fidivrs
aaa
sub
xorl
inc
jb
pushf
testl
and
clc
iret
dec
aas
inc
add
popf
mov
aad
mov
mov
cmc
daa
loope
popf
ret
aas
push
cmp
sahf
outsb
or
pop
test
cmpb
and
or
aad
clc
adc
je
fmull
into
nop
add
leave
xchg
jnp
xchg
or
out
mov
orb
jo
inc
std
mov
dec
push
outsl
add
repz
mov
jecxz
cld
ss
cmp
out
test
cwtl
xchg
push
arpl
dec
jmp
sbb
push
sub
data16
dec
aad
cmp
sub
mov
cmp
mov
sub
jnp
and
sbb
popf
scas
mov
test
cmp
loope
cmc
push
add
mov
xchg
aam
lods
sahf
cmpsl
stos
add
add
adc
push
int3
xchg
stc
das
xchg
jne
adc
sbb
cmc
mov
test
push
icebp
cmpsb
cmpl
movl
push
push
push
pop
int3
fmul
loope
push
or
repz
cmc
out
pusha
cmp
or
imul
jno
pop
xor
fldt
ljmp
dec
xlat
cmp
je
test
stos
fsubl
push
jg
loope
sub
inc
jp
xchg
xchg
lea
lea
loope
dec
jno
push
add
cli
xchg
or
dec
adcl
pop
adcl
test
sub
dec
push
lret
mov
mov
sbb
push
add
push
xor
iret
fwait
jne
and
fcomps
cld
loope
movsl
sub
jb
jmp
insl
cmp
dec
out
mov
mov
pop
test
ret
shrb
xchg
clc
repnz
mov
lahf
push
ja
mov
je
sub
jno
ret
iret
push
mov
add
push
mov
mov
icebp
arpl
xchg
mov
add
inc
fstp
ret
sub
xchg
outsl
jmp
or
fstpt
dec
mov
fldl
sti
mov
jnp
dec
jo
imul
ficoml
inc
cmp
sbb
stc
mov
inc
in
stos
int3
fimuls
mov
shll
inc
in
dec
fs
dec
in
mov
sub
jne
sub
push
cwtl
aas
lcall
insl
cmp
sub
mov
jne
aad
shrl
sbbb
push
inc
out
inc
ljmp
mov
fstpl
dec
xlat
mov
jno
pop
mov
mov
insl
fdivs
sbb
in
jmpw
xor
cs
cmpsl
ljmp
pushf
loope
iret
or
out
and
mov
das
mov
pop
mov
dec
ds
adc
popa
cli
popf
mov
stos
cltd
cmp
fstpl
or
sub
andl
mov
into
dec
add
xchg
mov
pushf
adc
int
jae
movb
push
pop
push
lods
or
xchg
out
clc
push
push
out
pop
lcall
jb
jbe
notl
dec
out
push
mov
mov
push
test
les
pop
sbb
popf
in
lret
xor
cmp
sub
push
scas
add
popa
data16
scas
xlat
pop
sbb
call
negb
jb
jo
call
repnz
popf
std
in
fstps
arpl
sub
mov
adc
or
rclb
pop
push
cli
push
int
cmc
dec
pusha
sbb
inc
dec
pushf
decl
jno
jno
stos
enter
mov
add
mov
adc
fnstenv
push
mov
push
arpl
jae
scas
sbb
iret
and
jno
mov
and
sarb
aaa
lret
cmpsb
negb
sbb
les
loopne
gs
scas
popf
or
add
jb
add
xchg
mov
xchg
fadds
call
lcall
repz
testl
mov
pop
mov
addb
dec
dec
add
pushf
sahf
mov
jbe
mov
push
push
mov
inc
dec
pop
pop
mov
pop
xchg
outsl
or
hlt
shlb
rorb
xor
push
sti
nop
push
ret
inc
xchg
add
std
cmp
movsb
or
mov
mov
cwtl
jne
sbb
test
xchg
and
pop
iret
sti
rorb
loope
mov
mov
jb
jg
and
sub
xor
xchg
sbb
push
push
cmp
imul
push
mov
ficompl
lock
int
or
jmp
push
inc
xor
sub
xchg
insb
sub
out
pop
out
cmp
dec
out
xchg
add
popl
xchg
iret
cltd
orl
pop
sbb
in
pop
mov
das
mov
int3
fs
adc
mov
pop
loop
loope
es
cmp
outsb
jb
sti
insl
rcrl
mov
filds
push
cmp
pop
insb
int3
lds
cmp
shl
ret
les
cmp
pusha
adc
shlb
inc
int
and
push
push
push
mov
pop
add
push
jo
repz
inc
lods
push
decl
pand
imul
rcr
xchg
cmp
scas
mov
cmp
cmp
jmp
aad
adcb
loope
add
push
or
xchg
pop
add
push
iret
jp
in
in
pop
fnstsw
dec
outsb
clc
add
cmp
xchg
ret
aaa
les
aaa
ja
lret
mov
ret
ret
mov
aam
bnd
mov
jo
les
mov
lret
cmpsl
test
or
pop
ds
mov
popa
xchg
insb
or
pop
jmp
sub
inc
inc
pop
sbb
mov
mov
fcmovb
xor
test
adc
push
sub
cwtl
mov
push
cli
mov
cmpb
xor
stos
daa
and
mov
or
daa
sub
adcl
add
jecxz
sbb
xchg
mov
sub
push
int3
cmp
imulb
pop
dec
mov
outsb
lock
imul
add
inc
loop
push
lea
xchg
inc
mov
sub
sub
aad
push
xlat
pop
and
das
adc
cmp
mov
popa
ficompl
call
test
nop
mov
mov
lret
jge
sti
dec
jmp
push
pop
lods
sub
push
push
test
mov
dec
cmp
and
mov
lods
data16
mov
pop
ja
sub
movsl
movsl
mov
mov
imul
pop
xchg
dec
movsl
lret
aam
aaa
and
into
addl
test
lret
iret
sub
dec
in
cmpsb
fcomi
add
sbb
icebp
aaa
fcomp
add
push
dec
push
add
dec
mov
xchg
sbb
pop
jg
mov
pop
repz
fisubrs
inc
ret
pop
icebp
insb
or
test
loopne
xor
mov
hlt
mov
and
push
enter
inc
cwtl
out
push
add
xor
cmp
ret
xchg
mov
xor
stos
mov
mov
or
xchg
mov
in
fsubl
xor
pushf
xchg
hlt
hlt
int3
arpl
scas
pop
cmp
inc
lods
pop
mov
rorb
clc
jp
stos
ret
cmp
daa
cmp
push
cmc
mov
mov
stos
mov
push
pop
hlt
pop
push
nop
sahf
flds
mov
test
movsb
rorb
pop
inc
sbb
jb
inc
dec
testl
lods
es
adc
mov
ss
or
mov
mov
adc
push
xor
fistl
imul
fistpl
xchg
push
cmp
xchg
and
mov
cmpsb
mov
xchg
lods
loopne
fcmovne
push
xchg
mov
std
inc
ret
int
out
cmp
push
les
lret
inc
sbbb
push
add
xchg
adc
sbb
xor
rcll
mov
pop
jne
mov
jo
and
arpl
jb
mov
and
icebp
dec
std
push
ret
out
dec
sub
or
clc
lods
push
sub
testl
sbb
leave
loop
and
xor
dec
sbb
mov
pop
aas
aam
shrl
pop
into
shlb
jne
lcall
icebp
fs
adc
cmpsl
test
push
icebp
sarb
inc
pop
shrl
push
sub
and
xlat
out
jge
jno
xchg
iret
inc
pop
push
xor
arpl
or
aas
data16
lahf
adc
mov
xchg
adc
cli
fs
iret
sub
js
push
mov
cmp
fsubs
test
nop
inc
dec
pop
jne
cmp
xchg
lcall
movsl
sub
or
test
fdivr
xor
xchg
or
lret
bound
orl
push
mov
test
or
pop
ror
xor
mov
xor
sub
inc
xor
bound
cld
les
fcompl
push
cmp
lods
sub
and
push
lahf
rep
cmpsb
fcompl
adc
test
cmp
fcmovnu
mov
or
fsts
cmp
dec
shl
mov
jg
pop
js
push
sbb
inc
sub
sbb
xor
or
jge
lret
std
xchg
mov
cmp
test
xchg
mov
pop
hlt
je
aad
pop
lret
jp
pop
inc
scas
lret
xchg
out
int3
mov
call
sub
add
xor
mov
mov
inc
repz
xor
push
push
insb
jle
cmpsl
stos
sub
inc
lds
js
aas
xchg
aas
notl
xor
and
mov
int
enter
pop
jae
daa
cld
fdivr
arpl
jmp
loopne
push
in
aad
dec
ljmp
sbb
mov
mov
jg
lret
out
adcb
ret
push
jno
lock
pop
les
push
cmp
clc
fisttps
xor
in
jne
pop
pop
push
or
vcvtdq2ps
aam
fildll
popf
jnp
in
xchg
mov
jg
movsl
inc
jns
sub
mov
call
mov
stos
adc
lcall
and
out
rolb
std
jae
leave
ljmp
aam
pop
and
jbe
or
push
out
sub
jge
std
pop
add
push
repnz
neg
mov
pusha
clc
jo
dec
sub
ficoms
testb
pop
xchg
jmp
call
add
pop
mov
and
std
dec
xchg
sti
dec
mov
add
and
mov
jb
scas
aas
and
hlt
inc
mov
dec
mov
add
leave
pop
lods
and
out
imul
ljmp
int
loopne
shr
sbb
fs
test
mov
rcrl
push
out
test
aas
cmpsb
subb
divb
cmp
test
push
scas
mov
or
lret
adc
popf
daa
hlt
mov
fndisi(8087
sub
daa
cmc
scas
xor
insl
or
nop
lahf
test
jmp
adc
mov
mov
or
ffreep
aas
xchg
js
lcall
outsl
xor
test
ja
pop
mov
notl
push
mov
sbb
push
jae
movsb
push
insb
pop
mov
mov
lods
inc
ja
xchg
sub
push
jb
push
jecxz
arpl
jmp
xchg
nop
push
loope
and
imul
sub
mov
mov
ret
cmc
sub
inc
cmpsb
and
mov
std
sti
xchg
cli
fs
pushf
mov
xchg
into
scas
lret
int3
std
sub
ljmp
push
decb
mov
and
push
mov
dec
js
loope
int3
stos
dec
ljmp
push
fs
or
stc
cwtl
adc
cmc
enter
js
xchg
outsb
mov
add
jno
repz
and
mov
jp
jp
push
out
mov
aas
xlat
or
or
out
stos
jb
mov
das
sahf
in
mov
jl
test
aam
mov
push
cmp
jnp
stos
add
cltd
sbb
fisubrs
push
ljmp
xor
mov
test
pop
insb
iretw
mov
mov
or
mov
cmp
pop
fdivrl
inc
fisttps
sub
imul
mov
dec
adc
ja
xchg
and
cli
lea
fstpt
push
cmpsl
leave
add
fcoms
lcall
jno
xchg
mov
stos
mov
sar
movsb
stc
adc
insb
mov
insl
mov
xchg
daa
into
jo
popf
enter
push
outsb
ja
call
sar
cmc
out
pop
repnz
cltd
mov
add
mov
or
movsb
mov
iret
movsl
push
inc
repnz
adc
sbb
pushf
push
shrb
adc
mov
insb
fbld
sarl
pusha
add
mov
sub
dec
add
xchg
lea
inc
mov
xor
bound
dec
daa
int3
pop
loopne
push
sub
mov
aam
sbb
hlt
loopne
leave
es
jno
out
popf
pop
daa
inc
pop
push
imul
testb
outsl
sbbb
shl
enter
add
sbb
leave
push
or
jbe
xchg
test
lds
test
cmp
xor
push
mov
loop
pop
dec
sbb
or
xor
or
loop
stc
loope
mov
mov
adc
add
sub
fcoms
stos
lret
popa
movsb
clc
sub
sbb
popa
cltd
les
sbb
fcomi
pop
fists
add
dec
lea
and
sub
xchg
loop
lds
jg
gs
xchg
pop
inc
push
dec
popf
jmp
push
mov
pop
leave
out
jg
dec
pop
das
fwait
jp
ljmp
lcall
lea
mov
cmc
movsb
test
lret
insb
sbb
rclb
lds
mov
mov
pop
aam
pop
fs
sbb
scas
dec
out
mov
jle
into
adc
bound
data16
into
scas
insb
lret
and
mov
jge
dec
insl
shlb
inc
push
push
popf
loop
mov
and
and
rcrb
shr
cmpsl
mov
lods
add
mov
dec
cli
mov
ja,pt
pop
int3
popa
loope
in
mov
std
mov
xor
add
fadd
xor
adc
xor
bnd
cmp
inc
push
cmpsl
repz
mov
aam
mov
pop
addr16
cmpsl
mov
hlt
dec
pop
hlt
xchg
daa
stc
idiv
sub
mov
xchg
aam
and
outsb
mov
push
leave
and
les
jge
insl
cwtl
imul
pushf
movsb
imul
cs
or
outsl
mov
rorb
mov
mov
mov
addr16
lods
cmc
es
iret
cmp
pop
mov
xchg
and
sti
imul
and
xlat
loop
jmp
sbb
pop
cmp
cmpl
test
pop
mov
or
cmc
push
xchg
fcomp
in
cmpb
call
idivl
pop
stc
jle
rclb
xor
test
aaa
rcrb
out
subb
ds
push
mov
push
test
push
cwtl
das
mov
mov
lret
test
in
add
test
xchg
sbb
jb
xor
push
dec
pop
or
gs
ds
es
adc
mov
dec
mov
add
out
lock
test
xor
shrl
dec
mov
mov
enter
cmp
rcrl
lahf
mov
lods
imul
loopne
jno
scas
pusha
inc
xchg
stos
mov
mov
mov
dec
shlb
inc
inc
popa
insl
cmp
pop
mov
inc
xor
dec
cmp
stos
adc
xchg
aam
lods
adc
jle
sub
aaa
insl
incb
jle,pn
lahf
jmp
add
ljmp
push
adc
je
fisubs
jmp
ret
xchg
das
push
push
push
mov
sub
jne
mov
jmp
lods
int
loopne
inc
inc
jo
push
mov
and
repz
mov
fmuls
mov
xchg
test
inc
jg
scas
mov
mov
bound
negb
repz
sahf
cmc
mov
imul
jle
dec
xchg
sub
mov
fisttpll
fsubr
test
jle
jb
xchg
int
mov
inc
jbe
lea
pop
adc
movsb
popf
dec
pop
insb
push
xchg
mov
ret
aaa
mov
aad
xchg
ja
add
sar
minps
jp
aaa
push
push
js
pop
adc
inc
push
ja
xchg
jns
sbb
insl
sbb
out
dec
mov
lea
sub
adc
xchg
push
lret
lret
mov
push
or
add
or
dec
pop
cmpsw
lods
xchg
outsb
bound
cmpsl
addr16
mov
sbb
sbb
das
cli
xor
xor
push
aam
push
cmp
icebp
rcll
in
aas
push
mov
jne
jb
int3
mov
push
test
ret
dec
fldenv
mov
cmp
sub
ds
idivl
lods
gs
rolb
nop
jmp
addb
outsl
jmp
xor
jno
mov
std
lea
aad
xchg
stc
rorb
mov
add
mov
mov
mov
lods
ret
mov
sti
cmpsl
test
movsb
shr
fcmovbe
adc
jnp
mov
lcall
ljmp
sbb
mov
ds
sbb
cmpsb
sti
dec
cmp
rcrl
daa
or
dec
dec
rclb
pop
add
ja
inc
sub
out
dec
out
dec
sub
hlt
je
and
cmp
jge
mov
mov
movsb
popf
loope
add
cmp
mov
ret
out
ss
pop
sub
in
daa
fildll
pop
mov
je
mov
ret
insl
mov
jl
and
mov
xor
mov
inc
jl
lds
and
cltd
xchg
je
push
pop
xchg
out
stc
and
sub
repnz
mov
pop
dec
mov
mov
jg
ret
jge
pop
je
test
out
push
fisubrs
andb
xchg
mov
fsubrs
pusha
outsb
cmp
pop
rcrl
jmp
jb
aam
sub
subb
data16
add
xchg
ljmp
insb
xchg
add
pushf
lods
xchg
mov
pop
mov
xchg
dec
push
in
lcall
or
cmp
xchg
sti
daa
push
insl
fs
jbe
dec
lock
jnp
sbb
ds
lret
cmp
std
pop
enter
gs
mov
and
mov
inc
and
in
es
rorb
imul
add
dec
lods
das
lock
ror
adc
dec
sbb
test
mov
and
sbb
jle
repnz
imul
add
shrl
dec
mov
aaa
loopne
ret
repnz
scas
icebp
nop
sahf
mov
ret
je
pop
das
mov
loop
fmul
sub
pop
lret
movsb
cmp
sub
push
data16
and
dec
and
mov
and
jb
ljmp
sbb
sbbb
lock
fcmovb
sub
xor
outsb
std
rcrl
stos
sbb
sbb
scas
cmp
sbb
ljmp
inc
add
and
lret
in
int
cmc
mov
ds
mov
popf
out
fidivrl
lret
lret
jmp
mov
notl
xchg
sahf
or
in
cwtl
sub
mov
shll
das
mov
push
out
sar
jge
sub
xor
xchg
xchg
test
xlat
fisubl
cmpsb
lods
fldenv
mov
fimull
add
fcompl
sbb
out
jl
insl
in
add
mov
inc
cmp
call
loope
jns
cmpsb
xor
test
sbb
insb
bound
fstpl
out
arpl
mov
das
fimuls
mov
jae
push
and
cld
lds
int
nop
fisubs
mov
sub
ds
pop
dec
jbe
mov
sbb
or
stos
add
movsl
or
xor
outsl
rol
clc
test
jno
rorl
inc
ret
pop
aam
cli
repz
jp
sbb
cs
xor
aam
jge
xor
lcall
push
xchg
out
sbb
sahf
mov
imulb
mov
fcoml
jno
add
mov
jns
xchg
mov
cwtl
rorb
repz
mov
ss
push
xor
mov
scas
rolb
pop
dec
push
mov
cmc
push
in
outsl
dec
mov
or
lret
mov
divb
notl
cmp
mov
add
cmp
adc
pop
lods
xchg
popa
fs
pop
or
mov
lods
roll
xchg
fimuls
lea
push
mov
popa
lret
jnp
or
in
push
pushf
out
push
lock
lds
pop
int
pop
jl
int3
repnz
jo
cmc
xor
dec
mov
mov
repz
pop
mov
mov
jg
into
and
cltd
push
dec
jmp
push
xchg
mov
icebp
add
test
cmc
jg
mov
out
cmp
mov
icebp
pop
fwait
vmaskmovdqu
imulb
xchg
dec
add
pop
test
mov
cwtl
jno
test
mov
test
jmp
mov
cmp
test
movsl
cwtl
movsb
and
movsl
pushf
inc
adc
sub
adc
and
fcomps
lds
clc
jno
push
xor
loope
pop
xor
jmp
dec
adc
rorb
aam
jo
dec
inc
insb
in
xor
pop
jae
orl
adc
es
test
push
jnp
test
ss
pop
je
rcr
int3
sub
es
inc
xor
xor
and
mov
and
js
add
and
loopne
dec
ss
jns
jb
lods
mov
shll
mov
or
push
push
xor
add
or
cmp
pop
dec
shlb
jns
nop
pop
sub
jg
pop
ret
dec
cs
loope
insl
mov
inc
ffreep
lret
dec
pop
pop
or
and
dec
hlt
repz
filds
and
push
loop
push
sahf
sub
lret
cmp
aas
aaa
lods
fwait
mov
add
mov
sub
out
aad
shll
ja
outsl
jnp
push
pop
popf
pop
lahf
sub
sub
push
pop
push
sbb
sti
fwait
xchg
mov
nop
cmpsb
push
cmp
les
add
and
out
pop
rcrb
std
lret
inc
jnp
dec
mov
sbb
out
repnz
lods
cs
clc
push
ja
imulb
adc
ret
repnz
and
imul
fmull
sbb
ds
inc
sbb
stc
mov
outsb
loopne
fs
mov
out
in
into
aas
pop
and
sub
fwait
ret
push
out
or
and
loopne
xchg
ficompl
inc
lods
sub
add
push
sub
out
bound
jno
in
xor
mov
int3
lahf
push
cmpsl
cmp
mov
sbb
enter
loop
cmc
jns
in
jl
cmp
mov
jo
add
mov
std
in
data16
xor
pop
cmpsb
adc
ss
fwait
popf
mov
lods
mov
movsb
shl
fnstcw
mov
xchg
cwtl
pop
addb
lcall
cs
sub
nop
sub
stc
out
and
cwtl
sbbl
inc
fistpll
jb
ficoms
pop
mov
popf
and
cli
xor
jmp
fisubl
or
je
pop
xor
jge
popf
insb
das
dec
cld
mov
jns
stos
nop
stos
pop
lods
pop
arpl
or
in
ja
int3
xchg
xor
sub
testl
decl
jecxz
jp
sti
fdivl
push
lods
cmc
cld
mov
setg
adc
add
pop
add
hlt
jle
popa
mov
repnz
fidivs
xchg
mov
ror
sub
pusha
outsl
sbb
stos
sti
shrb
imul
into
mov
add
shlb
decb
outsb
mov
aas
jmp
jmp
adc
fdivs
outsl
pusha
push
dec
lret
or
fldcw
mov
jl
adc
mov
cmp
aam
hlt
stos
in
sbb
pop
dec
fmuls
pop
cmp
jl
sbb
mov
repnz
xchg
leave
mov
addl
dec
mov
out
push
or
stos
push
cwtl
inc
lcall
push
or
pop
mov
jbe
es
jb
pop
jo
lds
or
adc
dec
push
daa
sub
xor
xchg
mov
jge
mov
ss
cmc
and
enter
shlb
lods
and
fwait
adc
shll
cmp
addr16
in
fildll
fwait
mov
xchg
fwait
or
sub
popa
aad
pop
shll
in
jg,pt
aas
mov
push
outsb
mov
fwait
mov
test
pop
mov
add
or
jbe
rorb
aas
sbb
push
leave
jp
out
leave
mov
lods
pop
or
pop
loopne
mov
das
xchg
add
sbb
mov
sbb
inc
or
movsl
jns
ret
pop
aad
xchg
mov
ror
pop
jno
pop
lea
fcompl
mov
out
pushf
es
push
dec
fldl
push
xchg
push
or
and
xchg
xor
and
outsb
jnp
test
adc
jmp
movsb
pop
loopne
xor
fs
jecxz
neg
jns
push
cs
or
mov
jns
mov
xchg
mov
push
out
movsb
jmp
aas
jmp
push
or
xchg
mov
push
or
sti
mov
insb
sbb
aaa
notb
shrb
inc
mov
jmp
addr16
shlb
jo
ss
and
cwtl
jb
mov
mov
lret
push
outsl
into
sbb
pop
mov
sub
gs
shl
adc
jo,pn
jo
negb
sub
sahf
sahf
adc
mov
idivl
mov
lds
jns
push
andl
mov
ljmp
and
sub
negb
sahf
adc
loope
mov
imul
ds
mov
cwtl
fistl
cmp
xlat
pop
cmpsl
xor
fnstsw
rcr
mov
push
cmpl
cmc
fsubrs
mov
dec
mov
ljmp
jns
cmp
pop
jl
sti
pop
dec
aam
call
inc
es
or
xor
hlt
lods
in
mov
scas
push
fsub
add
mov
lock
lahf
es
dec
mov
pop
mov
xchg
ret
insl
cld
mov
pop
fstl
fidivs
dec
mov
xor
xlat
sub
mov
push
leave
addr16
clc
jno
inc
and
bound
mov
std
mov
ficoml
in
mov
xchg
adc
pop
push
push
xor
fbld
out
add
push
xor
sbb
xor
repz
add
lret
inc
add
dec
adc
and
data16
xchg
aaa
dec
xor
enter
dec
mov
sti
std
xor
mov
gs
cmc
add
fsubr
dec
and
pop
aas
fsubs
idivl
test
iret
or
lds
sbb
fs
sbb
fisubrl
jb
pop
or
dec
jns
in
push
pop
das
mov
popf
inc
xlat
jle
mov
and
jge
cmc
lret
movq
xor
sbb
mov
mov
sub
imul
sub
sub
dec
iret
cmp
cmp
add
mov
lea
inc
xor
jae
stos
push
lock
xorb
push
pop
out
fdivrs
lea
repz
fs
pusha
adc
or
ja
in
aaa
cld
or
xchg
fnsave
cmc
add
int3
ds
shr
out
aas
mov
dec
add
adc
jecxz
sbb
mov
adc
pushf
push
insl
xchg
push
pop
mov
lahf
andl
fnstsw
test
adc
mov
mov
mov
pop
popf
in
sub
and
int3
out
rcl
loopne
and
inc
mov
push
adc
rclb
dec
lcall
int3
inc
cmpb
xchg
test
lahf
xor
in
jmp
jle
in
das
imul
or
nop
pop
dec
sar
rcrl
enter
pop
jbe
inc
clc
test
jle
pop
jecxz
or
adc
daa
je
jns
adc
fbld
mov
pushf
push
insb
in
aam
test
addr16
xchg
jns
ss
arpl
mov
test
cmc
mov
sbb
xlat
sub
rcll
jbe
ret
jge
int3
jns
bound
fsts
test
cmc
iret
jg
mov
pop
cmp
xor
imul
push
jg
add
mov
cmp
sti
subps
andl
or
push
jmp
stos
dec
fildl
sbb
ret
test
xorl
vcmpps
inc
insl
movsl
dec
dec
push
aam
sbb
adc
dec
ljmp
push
mov
add
dec
mov
js,pn
sub
or
push
mov
add
jmp
mov
push
inc
dec
sub
mov
mov
insl
in
lock
int3
xchg
gs
data16
out
mov
jecxz
repz
add
or
fidivs
mov
pusha
or
push
cli
push
inc
js
rol
jl
aaa
mov
imul
call
pop
cmp
sbb
cmp
jmp
bound
xchg
jae
jno
roll
imull
pop
stos
pop
pop
pop
stc
push
je
fcomps
jae
in
insb
push
call
mov
hlt
cmp
stos
xchg
aam
icebp
ss
inc
popa
xor
mov
sti
cmpsb
or
lret
gs
rcrb
adc
add
movsl
or
mov
jecxz
addl
push
jb
mov
xor
mov
jg
and
imul
jecxz
andl
in
inc
sub
movsl
test
adc
mov
lock
fidivl
dec
dec
push
and
xchg
and
sub
int3
fmulp
aas
jp
aam
mov
sti
insb
insb
mov
adc
mov
test
push
inc
push
scas
out
std
sub
add
inc
inc
shlb
fildll
sti
push
test
ret
imul
adc
inc
sub
add
shrb
sub
xor
pusha
sub
aas
int
in
push
sbb
lcall
add
mov
aas
or
movsl
scas
mov
xchg
add
bound
pop
xchg
in
rcll
addr16
fsubrs
xor
or
or
and
adc
xor
cli
pop
scas
sbb
nop
sub
jne
shrb
es
and
push
cmp
nop
adc
frstor
sbb
push
sbb
push
adc
adc
mov
arpl
in
in
mov
pop
adc
addr16
shrl
mov
pop
push
xor
mov
sarl
mov
jno
aaa
mov
add
sub
mov
xor
gs
sub
xchg
pop
add
ret
stc
repnz
lds
fsubr
lret
xor
pop
lds
loopne
negb
and
pop
pop
sbbb
sub
push
sti
rcrl
cmp
and
hlt
pop
dec
shl
mov
sar
push
pop
pop
add
iret
scas
mov
cmp
es
das
or
icebp
shll
stos
fwait
stos
out
shll
roll
addr16
loopne
adc
add
xor
add
mov
lds
stos
imul
mov
scas
rcrb
lcall
imul
jg
mov
lds
mov
icebp
shl
inc
mov
jmp
addr16
push
and
gs
arpl
lods
jns
mov
popf
dec
push
loop
cmp
mov
fs
cmp
lret
aam
or
push
repz
nop
shlb
mov
test
sub
cmp
out
loopne
adc
xchg
sbb
push
sbb
pop
xor
aam
sbb
mov
jb
dec
imul
pop
push
hlt
shlb
dec
ja
imul
jmp
sbb
xchg
or
fwait
les
cmp
inc
inc
fwait
adc
xchg
loopne
loope
xchg
add
ffreep
xor
push
sub
pop
daa
faddl
mov
inc
leave
aam
clc
mov
or
jmp
inc
popf
sbb
inc
inc
mov
mov
enter
bound
xchg
fcomip
mov
lcall
lods
push
sub
mov
repnz
xor
dec
gs
imul
cmp
pusha
data16
shrl
jecxz
add
push
jb
je
fldcw
xlat
out
jbe
fdivrl
dec
jns
jmp
ret
aas
repnz
adc
add
or
sub
nop
jno
adc
cli
imul
mov
or
insb
mov
or
pop
pop
rolb
test
popf
adc
xor
mov
push
jno
sbb
and
xor
pop
aad
mov
addr16
mov
into
xchg
mov
cmpsl
or
clc
dec
out
xor
fmul
decb
xchg
loope
push
subl
push
sahf
lret
push
test
or
xor
test
mov
xchg
or
sti
loope
and
and
adcb
in
loope
pop
incl
jl
aad
test
xlat
sahf
mov
dec
lock
aaa
adc
into
lock
add
xor
or
leave
sub
mov
sub
ja
push
fiaddl
mov
push
into
clc
repnz
xor
jns
inc
dec
push
cltd
scas
pavgw
lret
inc
mov
mov
pop
xchg
lret
jp
lret
mov
out
push
roll
insb
mov
and
sahf
cli
icebp
cli
pop
xchg
jae
ficomps
shr
mov
in
jmp
adc
cmp
inc
cmp
adc
fwait
movsb
cwtl
rorb
scas
jmp
cmpsl
push
icebp
jns
nop
bound
hlt
jl
js
mov
hlt
into
int
sub
xor
sahf
cld
push
xchg
and
mov
fucom
scas
inc
or
push
or
xchg
mov
push
pop
test
and
ds
roll
mov
adc
mov
cmpsl
inc
scas
aas
test
adc
pop
test
mov
mov
stc
and
mov
cld
rorb
push
stc
inc
outsl
mov
xor
pop
ljmp
mov
das
and
pop
jmp
adc
push
clc
clc
int
mov
stos
ds
js
jmp
push
xor
divb
scas
popf
hlt
sbb
pop
and
lret
lcall
cmp
clc
xor
and
icebp
mov
pop
dec
scas
and
xchg
adc
sbb
inc
iret
bnd
inc
rclb
mov
mov
mov
sbb
cltd
inc
sub
stc
testb
les
jnp
cmp
xorb
and
mov
jecxz
jbe
xor
je
idiv
dec
jp
sbb
or
jge
rolb
inc
pop
jg
cltd
mov
pusha
out
xlat
xor
inc
cli
aam
repz
fstl
outsb
test
sbb
sub
ds
inc
and
pop
jne
inc
dec
push
dec
mov
shl
push
fs
std
cli
in
rcrb
jno
imul
mov
insb
imul
mov
xor
rorb
lea
mov
sbbb
and
repnz
ja
orl
scas
mov
mov
adc
aad
loop
data16
sbb
fsubrs
mov
adc
sub
mov
stos
add
in
inc
or
dec
rcrb
scas
push
test
mov
add
add
cmpsl
cmpsb
lods
add
aaa
jne
push
mov
mov
call
mov
mov
inc
add
int
xor
outsb
out
cmp
and
push
cmp
or
jns
push
decl
je
jae
mov
or
stos
imul
lock
mov
pop
push
lods
cmp
dec
sbbl
pop
add
jg
mov
stc
and
xor
fcompl
or
adc
movsb
adc
mov
inc
lcall
jg
inc
lock
fidivl
sbb
insl
rorl
push
sub
jns
or
leave
ja,pn
fidivs
cmpsl
or
mov
in
lea
push
jne
mov
and
subb
jae
fldenv
cmp
mov
mov
pop
out
lock
pop
cs
jp
lcall
mov
adc
push
ds
inc
mov
push
fimull
mov
add
nop
ret
cmpsl
sub
dec
mov
cmpl
push
xor
outsb
call
mov
andb
or
int
mov
aaa
imul
in
inc
hlt
push
jns
lods
ljmp
and
pop
rolb
sbb
sub
add
or
cmp
mov
mov
fs
dec
jg
shl
mov
inc
push
cmp
push
xor
cmp
inc
out
rorl
sbb
mov
jmp
push
fisttpl
add
cwtl
addb
hlt
and
lds
jns
loope
out
je
pop
dec
cmp
jno
lea
push
pop
sar
mov
lcall
push
sbb
imul
mov
push
cmc
popa
dec
adc
jae
mull
push
xchg
scas
inc
push
dec
int3
shrl
outsl
lret
xorl
mov
and
dec
imul
jl
lock
imul
adc
dec
mov
mov
pusha
mov
jg
mov
scas
dec
xor
xor
call
cmpsl
pop
sbb
xor
fildl
movsl
iret
cmp
jb,pn
xchg
xor
int
and
pop
mov
adc
and
pop
xchg
loope
loopne
dec
jmp
mov
or
xor
in
sub
js
inc
add
jns
scas
cltd
add
pop
mov
outsb
jp
leavew
dec
clc
jmp
test
lcall
cmp
scas
adc
rclb
sbb
mov
mov
popa
clc
xchg
push
and
adc
sub
outsl
ds
test
or
call
fdivrs
cli
xchg
fs
add
inc
inc
in
out
mov
mov
sahf
leave
xchg
imul
lods
mov
push
mov
sti
push
fnstenv
add
not
leave
fdiv
outsl
rcrb
int
ss
push
int
and
push
xchg
push
xchg
dec
stos
mulb
int
in
sti
iret
mov
out
adc
jbe
lcall
and
jbe
dec
mov
scas
das
adc
es
add
ficoms
xchg
lock
mov
xchg
cmp
add
dec
or
sub
and
enter
xchg
mov
mov
divl
inc
inc
movsb
std
mov
add
sub
lcall
xor
cs
and
gs
sbb
out
push
sbb
push
mov
aad
out
fcoml
mov
xor
mov
lds
repz
xchg
loopne
xchg
push
repz
jb
test
pop
insb
lods
cmp
pop
mov
repnz
pop
jmp
loop,pn
pusha
js
inc
dec
jecxz
ja
or
out
mov
mov
cmp
jnp
out
subb
pop
add
testl
lods
mov
jecxz
imul
lods
mov
loopne
nop
lcall
mov
lods
inc
and
sub
adc
xchg
test
les
jecxz
lods
lods
xor
jge
mov
mov
pop
adc
pop
mov
es
inc
mov
push
pusha
insb
mov
insb
movsl
xchg
pushf
fs
or
cmp
repz
std
pushf
mov
imul
jns
pop
inc
mov
sti
push
adc
pop
push
sbb
inc
repnz
fwait
xchg
xorb
push
pop
and
daa
stc
cmp
clc
sahf
jno
mov
ss
jg
movsl
cmp
cld
cmp
xor
out
idivb
aaa
push
push
cmp
jle
mov
jle
popf
mov
ljmp
in
and
cmp
cltd
mov
scas
arpl
je
cmp
pop
pushf
lock
cmpsb
test
jb
mov
inc
icebp
in
mov
and
cmp
add
pop
lret
dec
push
jp
mov
movsb
mov
out
mov
jmp
xor
adc
cmp
push
push
lret
mov
lahf
out
mov
aam
or
sar
jne
sahf
insb
or
addb
xchg
push
pop
sbb
push
frstor
jne
lahf
lods
and
mov
xor
out
adc
pop
sub
sub
into
xchg
fucomp
ja
mov
pop
add
test
sbb
iret
mov
jp
xchg
push
sti
inc
mov
sbb
hlt
xchg
inc
dec
xor
cmp
xor
xor
mov
lock
push
mov
int
inc
sub
out
sahf
sahf
pop
lret
out
dec
mov
jp
pop
ss
cmp
test
add
and
mov
stos
jmp
movsl
scas
pop
dec
lds
push
decl
rcl
push
xchg
imul
adc
adc
add
lahf
add
and
push
int
lahf
jnp
mov
mov
lret
jecxz
in
outsl
add
js
push
push
fwait
int3
mov
push
aam
out
sbb
in
push
xor
jnp
pushf
jo
cltd
sbb
and
xchg
add
jns
loopne
loopne
lock
dec
dec
movsl
inc
or
stos
cmp
xchg
xor
inc
mov
sbb
pop
pop
js
jae
jne
out
movsl
jecxz
cmp
sub
scas
or
push
insb
mov
dec
sar
cmpl
sub
jl
fnsetpm(287
mov
sti
shll
sub
adc
adc
mov
inc
stos
jge
mov
dec
fs
pop
inc
aas
int3
push
enter
mov
push
jb
fwait
stos
and
sbb
bswap
ret
mov
loopne
sbb
mov
sbb
cmp
dec
or
xor
imul
loope
lret
cltd
push
and
mov
jns
or
sub
imul
adc
test
repnz
jne
aas
addr16
out
loope
rcl
push
fiaddl
repz
cmp
or
sbb
sbb
fldenv
out
mov
popl
pushf
mov
push
insl
add
push
lds
pushf
test
push
push
and
inc
sub
lods
jb
aad
xchg
mov
jl
mov
repnz
addl
pop
mov
and
xchg
sub
int3
aam
pop
pop
imul
lea
imul
jl
jge
adc
mov
pop
xor
sub
pop
mov
pop
orl
cmp
mov
scas
stos
fisttpll
shll
xorb
mov
add
lcall
add
sub
in
nop
outsb
add
cmovne
xor
pop
sti
ret
bound
inc
out
inc
cmpsl
fs
orb
cmc
inc
xchg
xor
xor
push
mov
xor
mov
push
sbb
movsb
inc
dec
add
cwtl
leave
sub
pop
ret
orl
lahf
pop
inc
pop
or
out
mov
subl
cwtl
rcrl
rclb
mov
or
insb
jb
lcall
rorb
ret
arpl
dec
nop
push
ljmp
stc
test
cli
push
xchg
popa
push
mov
fsubrl
scas
cmpsb
push
cwtl
lcall
lods
call
jne
jns
loopne
inc
js
xchg
in
test
or
xorl
sbb
pushl
push
cs
mov
mov
cmpsl
jmp
filds
std
js
setge
push
push
mov
jne
mov
xchg
add
push
jo
jns
sub
push
pop
cmpsl
outsb
shlb
iret
push
mov
push
mov
stos
loop
dec
lea
push
into
jnp
and
mov
adc
mov
xor
mov
pop
push
and
push
jae
js
push
jg
ss
aam
addl
jp
pop
mov
rcrl
inc
jle
and
repnz
inc
or
push
sar
adc
daa
pop
arpl
sarl
mov
in
lcall
loope
loopne
ja
sub
pushf
int3
push
sub
out
lret
xor
add
scas
jp
out
in
test
shrb
jmp
addb
jns
fimull
cld
push
adc
adc
fildl
je
fnstenv
ljmp
dec
and
in
jle
sbb
cmc
cmp
imul
out
imul
xor
test
rcrb
stc
sar
pop
adc
cmp
jle
adc
push
mov
push
xchg
push
mov
les
js
xor
push
sarl
dec
loope
xorb
sub
lahf
jmp
imul
mov
ja
imul
jg
movsb
pop
jne
bound
outsb
lahf
add
jle
sahf
mov
pop
sub
mov
jns
mov
sbb
inc
repnz
outsl
mov
andb
aaa
enter
scas
mov
loope
xor
jns
sub
and
and
nop
ljmp
inc
scas
call
inc
sbb
mov
daa
in
jo
adc
out
int3
aam
mov
mov
mov
fistpl
stos
sub
aad
adc
xchg
scas
iret
mov
ret
inc
push
lcall
or
jle
fidivrs
nop
pusha
add
div
add
cmp
sub
jae
mov
mov
cmpl
hlt
jbe
pusha
mov
inc
je
sub
mov
dec
pop
aaa
outsl
push
out
xor
mov
loope
insl
mov
nop
or
push
adc
add
rclb
fadds
lods
sub
mov
mov
movsb
inc
mov
sbb
pop
js
int3
pusha
jmp
test
cmp
ljmp
loope
mov
xchg
dec
mov
push
movsb
sbb
movsb
sub
iret
lret
sbb
negb
lods
scas
add
lock
and
xchg
scas
xor
notb
sahf
push
pop
jb
mov
pop
pop
push
fs
clc
loope
fbstp
pop
and
popa
or
jg
inc
fidivl
dec
aad
xlat
rorb
insb
movsl
call
xlat
dec
mov
fmull
mov
sub
lods
push
fnstcw
push
cltd
mov
inc
jg
cmp
repz
in
or
andb
test
lcall
and
loopne
repz
imulb
roll
notb
mov
push
test
fstpt
sbb
cmpsl
shr
mov
xor
data16
movsl
imul
popa
cmp
cmpsb
jns
xor
mov
fsts
hlt
aas
dec
add
cld
jmp
xchg
fildl
jmp
lods
or
pop
mov
push
or
mov
int3
leave
sub
cmp
or
in
mov
fs
out
fldenv
fucom
jne
lock
jnp
repnz
sub
mov
pop
push
divl
push
leave
sbb
dec
mov
sub
popf
jg
inc
test
adc
inc
mov
in
pop
aam
mov
punpckhwd
popl
pop
xchg
ljmp
jo
and
inc
mov
sbb
scas
lret
inc
cmp
push
insb
test
mov
mov
cmc
lret
into
shlb
or
pop
and
pop
inc
mov
jmp
rcrl
xor
or
loop
addr16
movsb
aas
or
mov
sti
lods
add
rcll
repz
xchg
sbb
icebp
xchg
sub
int3
test
fnstenv
adc
inc
lret
or
sub
add
sbb
popf
scas
lret
jmp
xor
lods
and
sahf
int
lea
fsubrl
and
fwait
adcb
dec
clc
jle
inc
mov
fs
in
mov
movsl
js
jnp
test
xlat
stos
shll
mov
arpl
mov
out
add
outsb
rclb
or
cs
lods
cmp
test
push
cmp
cmpsb
jbe
dec
mov
mov
nop
movb
rclb
cmpsl
adc
rol
xchg
jno
mov
mov
and
lret
clc
arpl
sti
or
test
pushf
push
xchg
aas
ret
push
jp
adc
insb
dec
lret
sub
ret
ret
dec
pop
inc
outsl
xchg
sti
popa
movsl
aam
inc
dec
pop
into
ja
adc
cmp
or
sbb
subl
fbld
daa
pop
pop
jle
fidivrs
cmp
stc
sbb
aad
pop
je
fcmovbe
inc
outsl
insl
ror
popf
lods
addl
jno
jl
jnp
cmp
sbb
pop
add
jle
xchg
mov
mov
xchg
es
adc
repz
sbb
sahf
repz
mov
lods
mov
pusha
aad
lea
fldl
scas
cmp
aas
inc
andb
push
cmp
mov
push
das
xor
inc
xor
push
cmp
cwtl
or
xchg
mov
pop
mov
or
dec
xchg
xchg
xor
xor
pushf
jle
xchg
scas
mov
jge
movsb
hlt
psllw
jnp
pusha
cmp
jmp
fs
sbb
pop
inc
xchg
push
push
scas
cs
jge
data16
jmp
fldl
fcom
gs
nop
xor
mov
mov
stc
mov
roll
stos
out
adc
in
cltd
outsl
enter
push
stos
orl
dec
cmc
cmp
test
jl
fisttpll
pop
imul
push
sti
add
cmp
incl
sub
push
add
jae
cs
jae
int
mov
xchg
lret
shll
mov
sarl
sbb
push
jmp
inc
addb
pushf
push
insl
pushf
mov
inc
sub
lret
int3
push
lcall
jl
rcll
in
mov
inc
cmp
jge
jbe
mov
test
push
gs
add
dec
lcall
pop
adc
sbb
push
inc
sarb
add
rorl
inc
mov
lret
add
mov
cmp
adc
aaa
pop
scas
mov
int
mov
dec
adc
int
ss
add
das
ret
mov
jno
push
mulb
ljmp
rcrb
jne
sub
es
pop
stos
enter
sarl
and
or
es
std
stos
mov
jg
mov
xchg
push
test
rcl
inc
test
ret
imul
mov
dec
mov
in
insb
dec
bound
js
jg
ror
mov
jbe
loopne
cmc
lock
daa
jae
faddp
mov
xlat
pop
pop
cmpsb
jle
mov
ljmp
in
xor
push
push
inc
sbb
sarl
inc
hlt
mov
sub
setns
jbe
sbb
mov
mov
mov
enter
or
xor
jno
mov
icebp
mov
mov
out
xor
fisttpl
mov
in
sub
push
mov
dec
fs
insb
jns
imul
fucomi
push
add
fndisi(8087
popf
int
jmp
pop
xor
push
mov
sbb
xchg
or
lods
xchg
push
imul
fcmove
pop
inc
pop
je
fwait
jle
rolb
mov
sbb
in
xlat
aad
push
adc
dec
adc
dec
push
andl
leave
dec
clc
mov
rol
cli
mov
jge
jb
xchg
stos
or
mov
repz
rorl
lods
insl
sub
jp
rcll
mov
repz
push
aad
xor
jmp
insb
pop
inc
dec
jnp
sahf
loop
fs
pop
testl
aaa
push
jbe
cmc
add
loopne
inc
pop
shll
mov
sub
jnp
lret
jnp
mov
push
ds
fcoml
or
push
mov
xchg
sub
dec
je
cwtl
loopne
push
lods
sub
adc
es
pop
faddl
inc
imul
lahf
aad
mov
cmp
sub
xchg
hlt
hlt
mov
sbb
aas
clc
je
jg
stc
dec
test
negl
push
test
mov
pop
in
icebp
mov
inc
cwtl
arpl
rcrw
and
adc
aaa
xchg
shrb
jg
cmc
xchg
loop
shll
out
int
repz
fsubs
cmovnp
mov
add
stos
push
sbb
aam
or
xchg
inc
mov
cli
das
cmp
mov
push
outsb
insb
xor
std
mov
dec
or
jnp
scas
xchg
add
jbe
lea
sti
rcrb
xor
jecxz
cmp
movsb
sbb
pop
jbe
sbb
push
fistpl
shrb
divl
xchg
out
call
push
mov
or
dec
sbb
jo
jle
push
sub
in
je
pusha
mov
test
clc
pop
in
fucomp
fidivs
incb
nop
inc
stos
sbb
pop
shl
outsb
pop
push
push
stos
paddw
leave
add
cmpsb
mov
pop
cltd
testl
push
mov
imul
dec
xor
imul
frstor
or
cmp
repz
and
cmp
push
hlt
mov
stos
test
cmc
xor
rorl
hlt
inc
jb
ret
lcall
dec
jmp
les
cmp
jg
lret
and
and
lods
xor
in
mov
or
rcll
mov
sbb
and
js
imul
int
add
ret
dec
xor
cs
sbb
hlt
fnstcw
mov
jo
inc
testb
sub
ficoms
outsl
lods
xlat
mov
xchg
ss
jecxz
mov
and
or
mov
pushf
jmp
xchg
sti
mov
cwtl
stc
xchg
cmp
mov
xor
dec
jb
mov
lret
mov
popf
inc
lahf
leave
dec
call
add
nop
mov
lret
das
mov
lret
hlt
push
es
shll
rcl
adc
pop
xchg
ret
sub
dec
mov
mov
repz
add
rcl
dec
sbb
and
cli
in
stos
cmp
repz
adc
sub
jp
scas
movb
push
call
and
cwtl
aam
cli
cmp
jno
cmpsb
inc
inc
shll
pop
dec
inc
mov
popf
pop
add
fcmovnb
adc
dec
xchg
loope
outsb
arpl
fadds
jb
inc
iret
cld
int3
out
sub
add
add
inc
cmc
aad
push
insb
mov
mov
into
sub
and
je
mov
aad
jmp
pop
add
hlt
je
cld
cltd
add
or
sahf
incl
inc
mov
pop
mov
cld
xchg
add
push
popf
shlb
inc
sbb
push
mov
loope
icebp
xor
jmp
js
cmp
push
sub
orb
inc
mov
and
jge
push
fdivl
and
repz
inc
mov
mov
or
imul
mov
push
orl
or
rcrl
lds
sbb
out
jmp
in
scas
xor
add
movsb
in
test
xchg
cs
mov
mov
inc
lahf
bound
pop
add
cmp
inc
scas
adc
test
jbe
sub
xchg
jbe
ja
das
fmul
push
sbb
mov
testl
cmp
push
std
mov
sub
add
jo
rcrl
sbb
push
mov
pop
cwtl
ret
mov
es
xchg
add
inc
lea
inc
lods
js
pop
sbbb
xor
jo
mov
dec
icebp
or
gs
out
mov
jbe
outsb
adc
bound
and
fdivrl
and
mov
test
sub
pop
pusha
pop
xor
out
pop
inc
sti
mov
stos
sub
out
pop
adc
mov
xlat
shr
aam
in
jge
dec
push
stc
stos
cmp
ret
out
lea
push
es
xchg
or
shrb
mov
sbb
mov
mov
mov
gs
out
mov
cmp
jno
cli
mov
pop
out
push
lods
out
aam
or
xor
into
mov
sbb
xchg
popa
mov
stos
sbb
lcall
rorl
rcrb
push
dec
sub
jo
ljmp
fisubrl
lock
lods
lods
dec
or
adc
jmp
push
pushl
int
push
hlt
cmovg
jmp
outsl
push
hlt
pop
imul
push
xor
pusha
mov
dec
xor
lds
cmp
and
shr
ja
sub
jg
and
jne
xchg
lea
mov
push
cli
xlat
icebp
int
mov
shll
data16
iret
les
dec
imull
bound
pop
shl
push
out
cmp
mov
loopne
ss
nop
movsl
inc
mov
mov
loopne
jmp
dec
enter
mov
aas
mov
fwait
cmpsl
pop
outsl
dec
pop
or
xchg
add
popf
add
adc
rcll
pop
mov
add
xchg
adc
in
fld
cmp
cmp
jle
jecxz
mov
mov
add
adc
iret
imul
mov
pop
jnp
fistl
test
cltd
inc
add
int
lock
xlat
cmp
and
rcll
dec
xor
cli
stos
adc
push
ja
mov
add
mov
jp
frstor
addr16
rcll
xchg
repz
rcl
stos
lahf
sarl
fdivrl
dec
stos
scas
push
faddl
xchg
xchg
loop
inc
movsb
sub
mov
xchg
in
shll
xor
psubusb
adc
imul
pop
pop
mov
lods
dec
xlat
outsb
sbb
pop
andb
jo
aas
out
ljmp
sarl
inc
xorw
int
xchg
lods
mov
les
sbb
jne
sub
pop
test
xlat
pushf
ljmp
popa
lret
push
in
or
daa
fsubrl
into
cmc
popa
inc
mov
xchg
mov
xchg
push
cwtl
lods
loope
ror
mov
dec
sub
push
popa
mov
mov
or
mov
lahf
inc
int
fmull
mov
pop
cltd
arpl
imul
xchg
and
je
xor
repnz
jb
cmp
andb
int
std
mov
sbb
and
push
pop
xchg
sub
cmpsb
fbld
jns
xor
js
mov
adc
xchg
push
lcall
xor
xchg
cltd
into
nopl
add
jp
cwtl
xorb
mov
sbb
inc
and
push
cmp
scas
daa
icebp
jnp
add
hlt
movl
mov
or
mov
jle
enter
jbe
insl
in
push
data16
pop
cli
js
xor
mov
subb
sub
xchg
jae
cltd
inc
sbb
pop
test
out
divb
pop
repz
and
jge
repz
adc
lret
and
xchg
movsl
xor
mov
mov
push
test
ror
inc
cmp
push
push
pop
xlat
fwait
hlt
stc
pop
movsb
jle
stos
xchg
into
arpl
add
push
mov
push
pop
sub
jmp
mov
mov
pusha
inc
push
jns
adc
test
iret
pop
ja
cmpsl
mov
push
int
inc
cmc
sarb
add
shll
mov
adc
popf
sti
add
test
test
in
adc
fwait
pop
in
fisubs
inc
clc
inc
sbb
mov
xor
push
cmp
aas
mov
stos
iret
push
popa
jle
sub
out
inc
sbb
inc
lahf
ret
das
or
loopne
repz
lds
int
mov
xor
push
stos
inc
xchg
cltd
pusha
adc
out
sahf
insb
adc
sbb
cmpsb
dec
sahf
fmulp
add
or
push
sti
test
insb
and
data16
stos
loopne
add
mov
pop
adc
mov
hlt
loope
and
mov
xor
scas
repnz
push
xor
push
shlb
and
scas
mov
adc
xchg
inc
repnz
lahf
aad
out
push
push
sahf
inc
call
xor
jbe
inc
pushf
rcll
sti
loope
lods
aam
popa
dec
lods
cmpsl
fstp
dec
fwait
arpl
in
call
sbb
popa
test
and
inc
mov
das
and
out
in
es
xchg
loop
cmp
daa
lods
cmp
add
push
xor
adc
add
out
mov
loop
sub
mov
scas
or
lods
adcb
xchg
mov
sbb
xchg
adc
and
push
push
dec
or
xor
rcr
dec
sub
sbb
mov
add
cld
dec
jmp
jp
mov
bound
dec
pop
mov
ljmp
lahf
and
sahf
enter
inc
push
xchg
push
cwtl
subl
aaa
pop
loop
mov
rclb
push
popa
rcll
pop
push
mov
ret
push
stos
inc
clc
inc
test
leave
lods
pop
jl
xchg
cs
mov
dec
inc
testb
fistpll
pop
lea
mov
loope
xchg
push
and
sti
jmp
fmul
lret
mov
pop
clc
cmpsl
pop
xchg
movsb
xor
xor
icebp
xor
pop
push
pop
nop
outsb
adc
scas
dec
pusha
test
and
and
hlt
sub
cmp
dec
ljmp
sub
xchg
adc
popf
into
stc
cmp
pop
push
fbld
jnp
aaa
cmp
sub
jo
jg
sbb
int3
scas
outsl
jae
sub
adcl
jle
fsubrl
ja
cmpsl
dec
or
ds
scas
push
inc
lret
mov
fwait
sahf
inc
jbe
xchg
fwait
orb
push
and
arpl
mov
sti
fs
jo
sbb
mov
lcall
pop
sbb
shr
and
in
nop
sbb
aas
dec
imul
pop
test
jns
mov
or
or
sahf
ret
iret
jl
sbb
repz
imul
mov
xchg
mov
aad
and
cmp
rclb
popf
pop
add
add
shl
test
adc
cmp
test
xor
pop
xor
sub
jl
pop
mov
and
shrb
jnp
mov
push
mov
aam
dec
adc
mov
mov
mov
pop
cmp
cmp
push
push
pop
loopne
outsb
cwtl
inc
loopne
mov
push
ret
cwtd
inc
push
xor
loopne
push
lods
addr16
and
pop
xchg
jl
inc
lea
push
sbb
dec
push
gs
push
scas
or
dec
outsl
dec
mov
jp
pop
out
inc
sub
jbe
les
fcmovnu
into
push
insl
fwait
out
aam
mov
dec
sub
sbb
sbb
cwtl
cmpl
mov
mov
xchg
mov
mov
mov
push
imul
jle
lods
jnp
hlt
std
jg
inc
push
sbb
shlb
add
dec
les
jne
mov
andb
test
inc
clc
fnstenv
xor
enter
xchg
add
test
ljmp
inc
int3
cs
mov
xor
stc
int3
jmp
inc
adc
scas
stc
xorl
in
cmp
std
jge
add
pop
repnz
test
je
int
in
lea
or
cmp
cmpsb
test
xor
leave
int3
aad
mov
jnp
push
or
cs
out
daa
inc
dec
jg
pop
sub
sbb
fldcw
cmp
cmc
xchg
or
mov
daa
jo
nop
xor
inc
testl
xor
and
jmp
popa
mov
adc
or
dec
mov
push
add
dec
xorps
pop
iret
xor
mov
xchg
mov
pop
repz
cmp
out
push
jecxz
ja
popa
mov
les
sub
and
pop
nop
push
jp
loope
sahf
xchg
mov
mov
cmp
cs
loop
cmp
movb
aaa
sahf
test
mov
inc
movsb
mov
push
sbb
mov
sar
jge
data16
int
inc
cmp
jb
adc
nop
fcmovnb
sub
xchg
mov
jg
sub
loope
adc
mov
mov
jp
sub
ds
insb
cmp
in
fstl
or
mov
mov
mov
dec
dec
out
mov
dec
cmp
fcomps
int
jae
outsb
out
nop
popf
or
sub
mov
dec
pop
cmp
movsb
sub
divb
ss
mov
adc
stos
inc
mov
stc
pop
jmp
lods
mov
imul
in
xchg
mov
jmp
xchg
sbb
sahf
ljmp
je
sub
lret
push
loope
cmpsl
inc
dec
addr16
mov
and
xor
jmp
jae
adc
pand
jo
jecxz
or
fbld
ljmp
xchg
or
adc
cmpsb
clc
mov
mov
imul
mov
cmp
mov
test
sub
cli
outsl
or
dec
ja
movsb
int
dec
loopne
add
mov
stc
test
out
stc
sub
rcrb
into
adc
popa
jge
fnstenv
je
xchg
fnstsw
or
dec
add
es
in
and
movsl
in
aaa
and
inc
cmp
cmc
jb
jae
inc
out
pop
xor
ret
imul
fisubs
mov
sbb
xor
addr16
out
pusha
iret
in
and
mov
mov
inc
mov
es
adcl
inc
adc
ds
nop
test
cld
cmp
mov
mov
mov
inc
out
jecxz
shr
test
cmc
sti
dec
jbe
cli
shlb
leave
scas
dec
and
test
push
out
std
lds
test
xor
cmpsl
push
inc
cmp
aaa
sbb
test
xor
xor
in
adc
fs
cli
and
stos
fidivl
jg
popf
aaa
jl
std
add
mov
sbb
and
fidivs
test
or
fisubrs
pop
jno
push
fimuls
pop
sti
jbe
xchg
out
inc
test
or
mov
pop
xlat
push
movb
imul
cwtl
push
rcr
test
dec
and
sub
push
sahf
fidivrl
jnp
fcmove
pavgb
lea
push
inc
mov
and
mov
das
xor
sub
in
dec
mov
mov
mov
fcomps
pop
xor
rcrl
adc
dec
jge
inc
sbb
test
jg
and
push
xchg
add
xchg
jo
jg
jnp
sbb
xchg
push
jge
stos
mov
jnp
mov
xchg
and
dec
rcrl
lock
daa
nop
dec
mov
and
dec
test
iret
mov
mov
and
pop
in
sub
inc
je
ret
fwait
insb
cli
push
int
mov
add
std
or
lcall
xchg
and
int3
push
inc
inc
adc
lret
xchg
out
inc
shll
mov
mov
and
ret
scas
lret
std
inc
pop
mov
stos
xor
pop
data16
adc
dec
push
pop
test
push
adc
dec
ljmp
ss
in
hlt
xchg
ret
push
sbbb
or
test
cmp
ret
cmpsl
cmpsb
ja
mov
dec
fsubrp
jne
rcrb
test
inc
mov
jbe
add
pop
sti
mov
notb
mov
std
xor
mov
pop
rolb
shrl
daa
jnp
sbb
loop
sbb
outsb
inc
lcall
insb
dec
sbb
movsb
int
scas
lea
sub
jno
notl
inc
jle
movsb
js
sub
stc
or
imul
adc
sbb
test
ds
shrl
sbb
lcall
lret
xor
add
push
mull
ds
jae
xchg
lods
mov
dec
jmp
cmp
and
adc
pop
mov
sbb
mov
dec
adc
insl
lret
aaa
int
mov
int3
mov
xchg
dec
add
mov
jnp
mov
rcrb
jo
test
clc
mov
and
mov
push
mov
lds
cmp
mov
sbb
push
add
dec
xchg
stos
mov
jo
xlat
stos
pop
and
dec
cwtl
insl
cmpsb
int
jno
dec
push
out
popf
fadds
and
mov
shrb
mov
jp
cmpsl
fistpl
jns
inc
mov
pop
in
addr16
in
xchg
mov
ret
jae,pn
dec
js
aam
xchg
inc
jl
lret
in
mov
nop
paddsb
stc
mov
movsb
lcall
std
rolb
popa
pop
dec
lods
idivl
push
add
adc
jnp
push
pusha
pop
outsb
jb
pop
jae,pt
or
shll
fs
daa
mov
dec
mov
mov
ret
dec
sbb
aam
mov
notl
jnp
shl
lret
adc
and
fwait
popf
push
sub
pop
movsb
movsl
jmp
aam
add
sbb
mov
aam
mov
dec
xlat
jno,pn
fcmovu
adc
sarl
in
clc
push
dec
cltd
in
ret
jmp
scas
iret
dec
inc
or
ds
inc
test
or
push
and
scas
and
jle
push
and
in
sti
inc
jnp
push
pushf
jae
add
mov
loop
sarl
out
pusha
sbb
and
cmpxchg
pop
mov
gs
push
jnp
xchg
cli
jne
pop
sbb
jecxz
bnd
jnp
ljmp
pusha
cmp
divb
xchg
xchg
xchg
jge
in
pop
ficoms
pop
lret
push
test
sbbb
and
dec
popa
jmp
jg
ret
jp
cli
lea
ret
pop
add
inc
push
inc
pop
xchg
lahf
adc
mov
lods
lcall
sahf
cmc
mov
sbb
xchg
cmp
stc
sub
push
jns
addr16
out
push
pop
ror
repnz
and
test
adc
add
out
inc
mov
pushf
in
int
xchg
push
mov
ja
ljmp
push
add
gs
jg
pop
in
dec
or
mov
mov
sub
sbbl
inc
mov
sbb
dec
inc
lret
sbb
mov
and
xor
add
pop
adc
inc
mov
mov
pop
pop
jae
test
cmp
or
repnz
add
push
outsb
insl
shl
das
pop
fnstsw
xor
pop
inc
inc
in
add
jb
mov
push
or
and
hlt
std
pop
aas
addb
jmp
jge
push
cmpsl
push
in
lods
imul
lcall
aas
sahf
pop
fsts
inc
mov
xchg
xchg
jmp
andl
xchg
inc
push
jmp
lea
mov
push
adcl
push
xchg
cmp
jg
scas
pop
jge
fucom
divl
sahf
push
pop
in
adc
sbb
xchg
fisttpl
das
in
pop
and
cmpsl
jecxz
fsubs
adc
adc
mov
sti
or
jb
mov
or
ret
lea
push
inc
mov
xchg
sbb
xor
sub
jle
xlat
loope
push
cmp
hlt
xchg
or
jno
data16
pop
dec
xor
cli
out
int
push
lcall
div
inc
pop
sub
sarb
mov
insl
test
lods
cld
add
mov
jg
xchg
cmp
mov
test
inc
adc
xor
data16
andl
add
mov
adc
jp
shll
jge
scas
dec
sbb
in
xor
cmp
sbb
add
lahf
bound
mov
cmpsl
inc
test
jg
in
jbe
scas
lcall
lret
call
lods
flds
test
inc
sub
imul
subl
pushl
ret
sub
add
nop
cli
fnstsw
fs
cmc
pop
movsl
cltd
xchg
sbb
outsb
and
push
pop
sahf
push
xchg
in
add
inc
ds
sbb
stos
dec
mov
pop
cmp
test
inc
dec
pusha
fisubrl
mulb
inc
ja
sbb
pop
movsl
dec
inc
and
fbld
movsb
in
xchg
pushf
mov
jg
sti
jne
xchg
fiaddl
rcrb
in
popf
fsts
fmuls
sub
xchg
sbb
sub
xchg
and
cmpsb
frstpm(287
mov
faddl
cmp
arpl
mov
push
inc
scas
mov
hlt
push
push
add
or
add
pop
jnp
mov
xchg
push
xchg
mov
pop
push
stos
js
cmp
add
loopne
push
adc
add
dec
cmpsl
xchg
jecxz
xchg
fstpt
lea
push
cmp
push
mov
aam
lods
inc
cli
sbb
and
pop
shr
ror
push
push
and
mov
dec
mov
sub
shrl
adc
or
xchg
jo
cmp
pop
stos
fnstsw
fildl
inc
inc
call
mov
cmpsb
out
jl
ja
xor
stos
movsl
imul
ds
std
dec
mov
dec
dec
je
subb
mov
je
or
int3
in
add
stc
lret
or
lret
imul
sub
sbb
xor
movsb
outsl
outsl
add
outsl
cld
insl
jmp
jo
sbb
js
or
into
add
push
dec
test
out
icebp
out
lret
call
pop
add
ljmp
adc
pop
fistps
push
test
scas
lock
pop
sbb
ficomps
stc
jno
or
push
ret
sbb
xchg
sahf
test
dec
mov
std
and
data16
in
push
arpl
inc
jno
mov
pop
adc
loope
push
fistpl
or
or
ss
pop
pop
aas
call
inc
leave
jg
sub
sbb
pop
bound
push
imul
push
sub
lods
add
repz
jnp
sbb
loope
ret
imul
lcall
sbb
push
add
push
xor
fldt
loope
ret
push
mov
addb
add
lds
xchg
sbb
pop
add
pushf
testl
ret
pop
mov
push
hlt
jl
shlb
call
in
cmp
add
cmc
cmp
dec
int
cltd
mov
push
push
cmpsl
mov
loope
xchg
call
loopne
jb
inc
jp
enter
pop
daa
mov
and
pop
dec
adc
sarl
std
inc
or
xchg
jmp
int3
xlat
add
test
xchg
gs
lea
cli
repz
test
xlat
loope
pushf
add
sub
inc
pop
xchg
and
mov
out
loopne
push
mov
and
lock
std
int3
fwait
into
jns
add
lret
dec
lds
pushf
pop
mov
push
in
push
enter
xchg
mov
xor
mov
sbb
es
sub
out
dec
shlb
test
loope
scas
scas
daa
cmp
push
aad
inc
out
in
movsl
rorb
sbb
cmpl
cmp
push
adc
pushf
or
icebp
jb
inc
pop
orl
loopne
int
test
roll
not
hlt
addr16
add
sub
lods
push
mov
repnz
cmp
or
push
xor
xchg
mov
or
pop
outsb
cmp
mov
adc
pop
aas
sahf
in
mov
mov
add
pop
fcmovbe
or
fstpl
mov
push
movb
sbb
int3
ret
icebp
lea
pop
xor
mov
dec
sbb
and
and
add
lret
sbb
int3
inc
lea
dec
lcall
mov
loop
hlt
iret
and
lods
sub
faddl
hlt
into
sub
in
mov
mov
hlt
cmc
adc
daa
addr16
das
sarl
aas
aad
jo
jbe
adc
and
and
add
add
imul
arpl
in
dec
cmp
jmpw
cwtl
mov
lcall
push
dec
sbb
jmp
xchg
daa
imul
pushl
scas
hlt
jnp
lea
orb
sub
add
push
idiv
jecxz
je
fisubrl
cmp
add
cld
in
rep
sbb
shrb
inc
lret
push
xorl
js
outsb
sar
xchg
mov
xchg
xchg
add
push
aas
es
jle
mov
lea
add
stos
aaa
or
int
rolb
leave
sti
jle
jne
pop
stos
inc
mov
mov
repnz
dec
jb
cmp
mov
out
fisubrs
in
push
rolb
adcl
leave
inc
jp
xor
add
push
rcrb
cmpb
adc
xlat
rolb
ret
mov
mov
shlb
bound
mov
jo
sbb
fwait
aad
inc
xlat
sbb
je
jg
cmc
jl
mulb
sub
add
inc
dec
mov
or
cld
push
mov
push
inc
out
pop
fnstsw
movsb
aaa
flds
push
out
pop
leave
or
lods
repz
sbb
movsl
test
cli
adc
adc
outsb
cmp
pop
add
xchg
dec
xor
shlb
in
shl
lock
mov
out
cmp
add
mov
push
mov
xor
ljmp
pop
cmp
jne
or
push
stos
rcll
cli
cmp
leave
cmp
sub
pop
and
cltd
aad
loopne
inc
sub
mov
sub
imul
out
bound
pushf
sub
imul
dec
mov
jge
push
dec
outsb
out
stos
das
inc
icebp
pusha
xor
or
sub
in
gs
mov
cltd
sbb
xchg
xlat
outsl
aad
pop
iret
mov
dec
cmpsb
xchg
add
loop
push
orl
mov
scas
sti
std
shlb
dec
fsubs
adc
push
lret
adc
stc
push
pop
xchg
das
repnz
xor
sbb
mov
xor
ret
shll
jno
jl
gs
inc
or
add
add
outsl
xchg
inc
sub
hlt
jns
mov
dec
imul
pushf
shrl
xchg
pushf
mov
call
jne
mov
and
mov
cmp
xor
mov
aaa
jge
lock
test
inc
rcrl
ljmp
push
sahf
mov
test
jae
cmpsb
xchg
test
shll
sahf
outsl
dec
push
jg
les
sti
lret
push
in
fsubs
nop
fcomps
inc
rcl
imul
xchg
pop
adc
mov
out
cwtl
mov
js
adc
push
in
insl
aad
cmp
notl
shr
push
loopne
enter
in
jae
ss
jecxz
mov
cmp
and
aaa
scas
lret
and
mov
int
and
mov
lods
ds
mov
test
inc
int3
xchg
aad
xor
mov
shr
dec
xor
cmp
aam
int3
mov
cmp
js
out
arpl
dec
loopne
sahf
dec
mov
add
xchg
or
or
insl
paddw
sbb
cmp
add
mov
and
insl
fsubrs
jmp
pushf
into
push
lea
in
movl
lods
add
inc
mov
add
lea
int
ret
dec
in
or
mov
out
out
enter
arpl
mov
add
xor
je
push
mov
gs
out
add
and
inc
dec
cmp
or
sbbl
sub
insb
mov
push
inc
xchg
sahf
and
mov
pop
hlt
js
icebp
cld
sub
jo
xor
mov
int
cltd
aaa
mov
arpl
lahf
xor
cmp
hlt
mov
push
loopne
into
int
jbe
aad
or
sbb
stos
jbe
sub
or
lods
ror
mov
shll
mov
dec
jge
sub
pop
mov
imul
and
cmpsb
movsl
loope
repnz
in
popa
fsubl
adc
sub
adc
dec
cmp
mov
iret
lds
cmp
lret
ja
sub
adc
stos
lret
push
mov
sub
out
popa
or
cmp
leave
push
fdivr
ljmp
adc
adc
sub
lcall
popf
push
sahf
sbb
cmp
pop
mov
jge
xor
ljmp
push
std
lds
inc
sub
fnstsw
ret
push
fcoms
or
lcall
aad
in
js
subb
jge
dec
int
fs
insb
inc
or
jg
mov
incl
xchg
in
jnp
fwait
negb
sub
out
je
das
sti
cs
mov
inc
ss
dec
xchg
mov
ss
inc
mov
repz
jecxz
out
aaa
int
dec
das
lods
lock
fs
cmp
mov
scas
out
notb
jl
ss
jle
push
insl
loope
mov
xor
in
inc
xlat
and
leave
push
mov
fisubl
add
lcall
ret
xor
int
xor
lahf
cmp
mov
repz
pusha
jmp
sbb
push
add
jno
in
mov
mov
aaa
loope
and
hlt
in
scas
xchg
cwtl
test
push
jp
in
ds
xor
inc
mov
xor
ss
fcoml
dec
int
jg
cmp
stos
jns
jge
repz
push
lock
nop
jns
mov
icebp
ljmp
push
mov
jle
int
cmp
cmpsb
cmp
hlt
sub
push
jl
mov
mov
push
fidivl
testb
nop
jo
ss
mov
pop
mov
or
push
jbe
jbe
call
dec
fistpl
dec
xchg
mov
pop
call
cmp
ds
pop
mov
mov
lcall
int3
inc
movsb
fisubs
mov
mov
xchg
iret
push
dec
mov
add
aas
lret
cli
out
loopne
jae
stos
jg
or
sub
mov
lcall
fdivp
leave
sub
gs
popa
mov
mov
movsl
cvttps2pi
sub
loope
movsl
adc
xchg
dec
mov
loopne
sbb
pop
xchg
outsb
mov
cmpl
push
jo
clc
jne
jl
inc
pop
in
adc
push
movsl
arpl
mov
xchg
pusha
xlat
and
pop
mov
sub
adc
adc
fwait
pushf
es
or
ja
dec
pop
push
xchg
loope
dec
mov
and
inc
mov
add
and
mov
lds
imul
mov
fnstcw
pusha
xchg
imul
pop
mov
mov
in
lods
ljmp
rorb
lock
aaa
xchg
or
push
jnp
mov
ficoms
and
dec
fiaddl
ds
loope
xor
rcl
ficoml
push
cmp
dec
loop
movsl
push
pop
lahf
push
pop
outsl
mov
cmpsl
jp
jmp
inc
lret
outsl
xchg
inc
mov
and
scas
fidivrl
add
inc
push
sbbb
fcompl
subb
ljmp
inc
imul
mov
mov
mov
and
fld
popf
cwtl
movl
sbb
jb
aam
jge
fsubl
sub
test
mov
dec
inc
popa
data16
cwtl
mov
sarb
jge
inc
mov
test
out
cmp
or
fsin
mov
popw
mov
jecxz
arpl
dec
pop
fwait
test
setb
push
sub
movsb
daa
mov
pop
enter
mov
cmc
repnz
mov
in
ja
push
cmp
iret
cld
inc
aaa
lcall
nop/reserved
push
jno
sub
and
jb
xchg
cmp
mov
in
xlat
or
mov
sbb
xchg
hlt
repz
pop
inc
jp
loopne
mov
mov
dec
push
inc
pusha
dec
pop
sub
push
add
je
adc
mov
mov
pop
mov
into
jp
mov
pop
mov
sub
sub
fadd
decl
pusha
lods
jmp
push
sbb
ffree
inc
pop
stos
not
sub
ds
imul
and
notb
test
sub
mov
sbb
xor
enter
mov
inc
stc
mov
lods
cmpsb
insl
mov
punpcklbw
jno
lds
inc
jecxz
adc
dec
adc
fwait
fs
cmp
sarl
ja
aas
and
bound
incl
sub
add
or
mov
insl
xor
jg
push
pop
ret
inc
int3
push
movsl
dec
dec
das
xchg
ljmp
push
scas
fldt
in
js
adc
mov
jns
xor
aad
movsl
cmp
repz
notb
in
dec
decb
int
mov
mov
int
jae,pt
ja
lods
mov
repz
in
mov
int3
jo,pt
iret
lahf
jecxz
dec
dec
or
mov
movsl
mov
xlat
cmp
jp
lcall
mov
dec
jae
pusha
aaa
mov
jbe
xchg
sti
outsl
dec
dec
mov
sbbb
cmpsl
enter
xor
dec
pop
les
test
shl
clc
int
incl
in
xor
sub
scas
repnz
mov
pop
popa
addr16
dec
xor
push
ds
sti
leave
xchg
add
minps
jle
cs
adc
cmp
sub
pop
xchg
mov
out
and
and
mov
cltd
sub
fs
pop
dec
push
leave
mov
jge
mov
push
out
mov
sub
mov
or
jp
ficoml
sahf
adc
xor
add
out
divl
mulb
insl
dec
cld
mov
push
jle
std
sub
cmp
stc
pop
cld
add
and
jno
mov
sbb
mov
pop
pop
sbb
push
popf
lods
popf
mov
sub
pop
push
pop
aad
std
push
rep
or
test
push
jb
out
xchg
jno
sub
xor
ja
jmp
mov
mov
dec
insb
mov
jecxz
mov
or
addr16
fcompp
in
or
xor
lock
sbb
mov
cmp
fwait
jge
adc
leavew
add
dec
mov
jge
pusha
aas
jo
dec
out
in
mov
xchg
jmp
cmp
sbb
ret
or
cmp
pop
xor
mov
ret
dec
cmp
adc
mov
xchg
leave
cwtl
mov
dec
and
pop
pushf
out
pop
sbb
aaa
jnp
or
cmc
jnp
and
test
mov
shll
push
pop
push
cmc
lds
in
dec
mov
jg
scas
fadds
leave
cmp
mov
out
imul
aaa
movsb
jbe
je
cli
push
negb
push
enter
mov
jmp
dec
call
and
outsb
adc
inc
negl
adc
add
dec
push
test
out
sarl
add
shll
mov
fcmovnbe
iret
cmpsb
pop
repnz
mov
sbb
jo
xor
sub
shll
movsl
sub
call
repnz
inc
sbb
jl
jmp
lds
test
adcl
outsb
and
adc
xchg
push
cmpl
mov
or
jo
hlt
fcmovnu
xor
push
call
std
add
adc
pop
cmpsb
fsubs
mov
adc
movsl
mov
adc
test
scas
adc
out
rcrb
push
mov
pusha
roll
iret
cmp
mov
dec
out
mov
xlat
repz
call
aaa
js
mov
push
mov
lods
rorb
jne
inc
data16
outsb
xchg
sub
push
pop
aad
or
sti
push
cmp
test
call
shlb
test
add
add
inc
mov
mov
fwait
outsl
mov
lds
pop
xor
cmc
nop
add
imul
dec
lds
cmp
aaa
mov
clc
fsubr
push
inc
pop
popaw
loopne
scas
pop
addr16
fwait
jb
xchg
mov
bnd
int3
inc
aaa
sbb
test
out
mov
repz
cmp
fdivrl
lahf
dec
jmp
add
sub
xchg
push
lock
test
lea
sub
cmp
imul
popf
in
ljmp
mov
mov
es
js
pop
or
sub
lods
cld
lods
in
arpl
lds
mov
mov
add
and
push
lock
mov
imul
in
aam
shr
aas
xchg
mov
stos
inc
cli
push
cmp
test
cmpsl
mov
xchg
repz
push
fnstsw
xchg
loop
sbb
jbe
cmpsb
rcr
pop
in
int3
rclb
fistl
sbb
xor
mov
sub
cmp
sarb
push
or
sbb
push
movsl
or
push
sub
mov
push
xor
imull
bound
cmp
add
out
repz
xchg
test
das
outsl
popa
neg
jb
adc
mov
push
pop
fisubs
sub
jo
nop
pop
idivl
repnz
mov
ret
ffree
aad
hlt
jbe
dec
jp
mov
push
dec
mov
or
mov
test
cwtl
sub
and
cmpsl
push
adc
jnp
cli
inc
jle
sahf
and
std
sbb
aad
pusha
dec
out
adc
and
dec
ret
xor
es
out
cli
lds
xchg
or
loopne
mov
ja
add
pop
lock
test
stos
add
arpl
mov
inc
sbb
xor
or
fisubrl
lock
cmp
out
sbb
arpl
dec
inc
jb
jle
repz
pop
jno
sub
es
ljmp
mov
inc
or
divl
add
pushf
and
shll
xchg
fdivr
push
add
cmp
js
call
enter
xor
dec
jnp
ficoml
lret
aaa
jnp
aam
sub
or
mov
jne
jo
sbb
std
lock
fmuls
stos
lret
iret
js
pop
inc
fisubs
cmp
fdivrs
inc
mov
subl
xor
mov
dec
mov
add
leave
stos
xchg
mov
jo
mov
outsl
and
popa
xchg
mov
stos
sub
mov
sbb
insl
inc
jp
scas
mov
pusha
daa
dec
mov
les
pop
jle
adc
pop
shl
jns
sub
dec
in
mov
xchg
adc
sbb
fcomps
push
xor
jl
daa
jb
cwtl
imul
pop
js
in
xchg
and
mov
xor
fisubrl
mov
popa
movsb
add
add
inc
fbld
call
push
xchg
leave
sbb
out
pop
adc
cltd
or
lret
jmp
or
aas
jae
pop
out
pop
mov
stos
outsb
push
ret
rcr
nop
ljmp
push
scas
mov
jns
cld
jo
inc
fnstcw
push
stos
push
mov
mov
andl
mov
lods
sub
xchg
dec
cmpsb
inc
in
test
pusha
adc
or
push
scas
add
orb
xchg
gs
loopne
shrb
or
xchg
and
inc
lock
les
jno
dec
sbbl
in
add
jne
adcl
sbb
add
notb
shl
jo
jge
mov
push
dec
cli
cmp
inc
dec
aad
fildll
sub
xchg
lahf
rcll
imul
rcrl
inc
iret
movsl
mov
mov
in
cmp
aam
pushf
dec
jmp
xchg
lds
mov
mov
xchg
dec
xorb
lret
repnz
jl
xor
jns
xchg
nop
xor
add
outsl
sti
lods
and
in
dec
inc
add
push
sbb
add
pop
mov
lods
fidivrs
pop
stos
adc
idiv
dec
pop
xorl
lcall
jg
add
pop
mov
pop
or
or
push
xchg
roll
cmpb
mov
call
cmpsl
adc
cmp
lods
imul
out
inc
push
add
push
mov
adc
loope
scas
mov
call
aaa
push
out
ret
into
or
push
and
inc
mov
movsl
lods
dec
sub
insb
jno
pop
sub
es
jecxz
fmuls
rclb
or
js
jnp
call
test
push
lahf
fst
repnz
push
jmp
into
and
xchg
jmp
xchg
stos
gs
inc
sbb
jns
jne
lar
int
into
repz
sbb
pop
pop
mov
xchg
push
fdivp
push
aam
and
mov
into
add
dec
iret
jne
fadd
jmp
or
fcoms
mov
daa
ja
scas
rol
lds
ret
dec
mov
adc
in
pushf
xchg
cmpsl
lock
fsubrp
cmp
les
test
adc
inc
push
xor
hlt
movb
or
jecxz
push
push
ret
cwtl
dec
in
xchg
out
lods
sub
ficompl
out
cmp
test
dec
outsb
ret
jp
insl
cs
shll
mov
jne
jp
les
scas
push
arpl
out
sbbl
gs
daa
push
jge
add
arpl
inc
push
mov
imul
or
jg
adcl
in
ja
sbb
scas
stc
inc
inc
xchg
in
jmp
push
dec
fists
out
add
adc
rcll
add
xchg
xor
cmp
push
or
inc
arpl
stc
call
jmp
test
mov
adc
dec
jns
into
cmp
int3
js
xor
andl
add
clc
outsb
and
rclb
aas
xor
notb
xchg
mov
cmp
xchg
pop
mov
or
dec
dec
ja
pusha
dec
or
fbld
add
rorl
push
lahf
addl
lds
cmp
pop
enter
in
xchg
sbb
xchg
mov
scas
cmp
xor
inc
jge
and
push
aam
jb
arpl
inc
les
mov
mov
arpl
out
cmc
jo
das
pop
shrb
enter
jae
push
push
sub
or
adc
ja
test
sbb
out
insb
sub
add
dec
and
add
and
pushl
xchg
cmp
outsl
stc
dec
lock
xlat
jns
mov
push
lea
mov
lock
notl
and
mov
jb
fwait
mov
jle
xlat
lcall
and
movzwl
addr16
aaa
cmp
fimuls
push
add
in
scas
xor
inc
loop
sub
test
adc
adc
int
sbb
sub
and
pusha
popa
inc
dec
push
dec
js
in
and
or
xor
fsubp
int
cmpsb
fsubl
je
adcl
jns
imul
iret
push
out
fimuls
push
inc
loop
cmpsl
neg
push
push
out
pop
push
rcr
pop
cmp
out
cmp
into
sub
pusha
xchg
mov
and
jnp
mov
mov
push
push
fdiv
inc
daa
nop
sbb
ret
fistpll
imul
jle
mov
jl
jge
shlb
jl
stos
xchg
lahf
xchg
fsts
out
pop
test
add
into
sub
sub
cmc
dec
imul
call
data16
fnstsw
roll
stos
mov
push
xchg
cld
cltd
addr16
es
sbb
pop
push
dec
movl
sti
hlt
dec
outsl
mov
and
cmp
stc
ret
repnz
cmp
pop
popa
jp
mov
push
push
lock
lcall
and
mov
dec
add
jae
pop
push
mov
ret
mov
movsb
lds
sbb
inc
jnp
mov
fstpl
cmc
data16
xchg
stos
addr16
mov
push
adc
add
int3
subb
fstpl
add
lret
add
dec
dec
ret
js
lock
addr16
jnp
pop
mov
sub
adc
and
mov
push
inc
aaa
das
mov
pop
shlb
fisubl
cmp
mov
ret
xor
dec
or
arpl
out
enter
sbb
sbb
xor
scas
mov
ds
std
sub
inc
or
pop
add
sub
jnp
test
data16
int3
mov
dec
ja
sub
jle
mov
stos
iret
xor
in
push
popf
mov
enter
fsubrs
lea
xchg
or
aad
mov
cltd
fisttpl
aam
dec
cmpsl
and
js
xor
mov
ja
shrl
sub
pusha
in
mov
repz
jmp
cmc
sbb
pop
addr16
incb
dec
push
nop
xor
jp
das
dec
sub
rorl
mov
out
daa
cwtl
dec
fnstsw
mov
data16
ret
sbb
mov
mov
sub
jl
cmp
sbb
push
out
fwait
jg
fistpl
mov
out
test
fimuls
in
xor
je
shlb
jae
xchg
and
test
dec
xor
and
jns
pop
sub
jecxz
sbb
das
pop
dec
mov
and
pop
inc
sub
mov
or
jbe
aam
addr16
xchg
dec
std
sub
lret
mov
movsb
fistpll
jecxz
adc
adcl
mov
test
ss
adc
nop
lahf
push
inc
scas
es
fildll
sub
scas
mov
js
jne
add
in
cwtl
sbbb
inc
outsl
or
insb
sbb
subb
cltd
aad
movsl
cmc
arpl
jns
loope
mov
int
orl
fsubrl
mov
mov
sbb
mov
xchg
iret
ficoml
push
or
add
hlt
xchg
imul
xchg
jb
mov
xchg
scas
and
mov
jl
jbe
dec
cmpsb
sbb
push
xor
dec
call
sub
mov
sbb
adc
ja
sarl
pop
mov
loope
pop
jo
cmp
add
fsubs
popfw
daa
or
sbb
sbb
sub
lret
sahf
call
fmull
cmp
repnz
jle
mov
add
mov
push
sahf
push
and
in
and
mov
and
mov
jle
shl
out
fstps
jecxz
push
movsb
mov
std
jmp
xor
sbb
and
fs
outsl
adc
mov
rcl
inc
sub
sbb
cmp
push
mov
inc
imul
dec
dec
lds
test
cmp
cmpb
stos
out
sbb
push
cltd
xchg
adc
inc
ror
popf
adc
repnz
enter
mov
es
jecxz
addr16
fdiv
xorl
es
mov
es
lret
jecxz
mov
jae
scas
jbe
mov
or
in
pop
enter
sti
pop
pop
jne
test
mov
mov
shlb
sbb
imul
notb
out
leave
xchg
jnp
shll
mov
insl
scas
and
int3
in
inc
or
dec
xchg
loopne
mov
sub
daa
or
sti
add
mov
xor
jns
daa
pop
sbb
xlat
ljmp
in
pop
jle
loop
add
imul
mov
ljmp
sub
scas
bound
sub
bound
rorb
pop
or
or
xor
push
xor
icebp
sbb
pop
test
pop
sub
repnz
push
into
aam
std
rcll
jge
lret
gs
mov
inc
adc
loop
mov
mov
fdivs
xchg
and
dec
fmulp
adc
imul
add
mov
inc
movsb
add
adc
xchg
mov
jae
xchg
lds
xchg
cmp
imul
in
lods
sub
int
sbb
push
mov
mov
cmc
idivb
call
movsb
movsl
xchg
xchg
inc
inc
pop
mov
sub
adc
dec
movsb
es
jmp
mov
cmp
loopne
lcall
cmpl
mov
pop
mov
xchg
aam
pop
or
enter
mov
sub
jl
jb
sbbl
push
sbb
dec
mov
sub
ljmp
cmpsb
pop
in
pop
dec
dec
push
xor
sbb
mov
push
xor
sub
adc
mov
scas
lods
stc
in
pop
test
xchg
ret
neg
mov
std
push
pop
es
xorl
xor
jmp
push
inc
loopne
scas
cmp
test
jp
out
xor
adc
jb
xchg
push
xchg
cwtl
push
cld
jle
ret
adc
std
lods
sbb
inc
cld
jl
fs
iret
sub
dec
inc
test
pop
dec
out
jecxz
mov
sbb
adc
aas
repnz
cmp
or
dec
rclb
sahf
inc
lea
sub
pop
jge
mov
leave
and
int3
gs
mov
pop
lds
and
lret
and
bound
lahf
and
sbb
out
adcb
popl
stos
loop
sub
stc
or
and
cmova
rcr
decb
lret
pop
pop
jb
push
sbb
inc
inc
inc
inc
lret
and
push
inc
mov
cltd
stos
setae
add
mov
xchg
sbb
shlb
adc
dec
xor
gs
ret
push
push
aaa
xchg
outsl
mov
test
inc
mov
outsb
xor
std
pop
nop
xchg
test
xor
jae
sahf
or
xlat
dec
adc
gs
leave
inc
sti
cmp
cmc
pop
hlt
mov
addr16
and
adc
adc
mov
jp
mov
mov
sbb
jno
mov
lret
iret
xchg
sti
inc
je
outsl
stos
in
movl
rcrb
inc
lahf
aas
sbb
mov
add
dec
pop
or
out
leave
cmp
jo
mov
pop
out
sub
jp
pushf
aas
and
je
push
ret
push
fimull
mov
push
test
or
jno
inc
andb
xchg
jbe
cmp
shr
mov
mov
jae
inc
push
mov
mov
xlat
scas
cmp
in
int3
movsl
xor
xor
imul
mov
cmp
cmpsb
push
into
ja
mov
cmpsb
jmp
test
pop
push
subb
push
fdivs
je
stos
lods
dec
aad
popf
cld
jp
daa
pop
sbb
mov
push
xchg
test
jns
leave
les
mov
aaa
shl
imul
push
arpl
out
cs
fwait
stos
es
addr16
cmp
mov
out
mov
popf
ljmp
xchg
jg
call
rorb
loopnew
sub
or
sahf
rcll
in
mov
sub
adc
mov
cmp
pop
arpl
adc
enter
movsl
mov
xchg
out
xor
xlat
ret
andb
mov
dec
inc
pop
dec
dec
jle
pop
lret
scas
mull
xchg
sbb
adc
aam
sub
int
mov
popf
cmpsl
push
out
cmpsl
ret
aam
pop
repz
std
repnz
or
std
jp
lcall
dec
sub
leave
test
mov
inc
xchg
mov
lret
sbb
push
push
and
sbb
pop
cs
icebp
jne
sub
add
push
cmp
xchg
dec
sbb
popa
mov
cltd
xchg
and
ja
lods
insb
pop
aam
push
jl
sub
ficoms
cmp
cmpl
add
push
or
mov
pushl
inc
or
int
scas
push
mov
ds
sahf
rolb
ljmp
jno
push
lret
inc
lcall
out
stos
xchg
inc
xchg
repz
sub
sub
cld
add
pop
xchg
inc
in
dec
xchg
outsb
mov
shll
push
js
dec
and
dec
or
call
sub
mov
pop
adc
cmp
int
add
daa
push
xchg
sbb
push
push
icebp
int3
ljmp
push
xor
xor
out
add
jns
jae
dec
sbb
shl
jb
mov
or
out
lret
outsl
jmp
movsb
cmp
inc
mov
inc
dec
cmp
std
pop
sub
out
aam
sbb
dec
sub
rcrb
out
ds
mov
sbb
mov
lret
mov
push
jge
xchg
jge
int3
test
cmp
push
xor
mov
std
stc
jbe
mov
mov
orb
sub
adc
mov
xor
roll
push
xchg
sbb
aas
testl
push
mov
and
mov
arpl
push
stos
adc
je
adc
movsl
mov
nop
or
mov
add
bound
mov
xor
repnz
outsl
push
ljmp
bnd
ret
mov
xor
add
stc
mov
inc
fdivrl
test
dec
bound
adc
loope
push
icebp
cmc
pop
iret
test
out
inc
call
xchg
sub
jo
and
call
test
mov
sub
icebp
and
mov
jge
cmpsl
sub
dec
mov
and
pop
sbb
inc
addr16
mov
out
bnd
and
inc
mov
faddl
dec
js
rorb
mov
add
push
repnz
fnstcw
jns
out
rcr
and
pop
jge
sub
es
mov
loope
add
mov
adc
stos
cvtps2pi
dec
dec
mov
nop
popf
addr16
adc
je
or
enter
idivb
ljmp
sti
xchg
hlt
in
mov
mov
jecxz
movsl
pop
popa
add
adc
mov
cli
iret
jb
pop
pop
add
dec
jp
js
add
sbb
push
xorl
enter
dec
pop
std
and
mov
cmp
add
sub
or
mov
cmp
pop
jecxz
icebp
lds
out
test
add
out
pop
add
dec
ds
mov
mov
out
cltd
sbb
mov
or
xchg
js
std
dec
mov
mov
roll
sarb
push
fsubl
fsub
jg
adcb
jae
repnz
or
dec
fidivrs
xchg
stos
rol
add
cs
repnz
ds
lret
mov
outsl
stc
loope
push
pop
cld
and
dec
iret
aas
ljmp
mov
xchg
fcomps
lret
push
ljmp
jg
lods
and
in
adc
lods
and
and
in
call
lahf
hlt
lea
xchg
shll
sub
adc
lods
lods
and
enter
test
mov
sbbb
fistpl
adc
pop
xchg
iret
loope
and
dec
jno
ret
addr16
loopne
sbb
mov
xor
mov
or
aaa
push
inc
ja
add
add
inc
lods
movsb
cwtl
dec
data16
dec
push
or
and
xchg
push
test
or
cmpb
pop
mov
jo
cmpsl
andb
addb
dec
and
mov
dec
hlt
pop
dec
sbb
or
and
cmp
push
xchg
insl
test
or
in
arpl
dec
out
or
cmp
mov
popf
sbb
dec
mov
ja
mov
call
and
dec
jo
xor
inc
and
mov
xor
cltd
xchg
nop
mov
jmp
mov
fldl
aad
cmp
test
aam
adc
push
gs
lahf
stos
in
rol
lahf
jno
jmp
pop
mov
mov
cmp
cmp
js
and
inc
ja
mov
mov
daa
add
fstp
xchg
mov
pop
or
jbe
ljmp
or
das
mov
cmp
clc
push
sub
jne
mov
inc
mov
jge
lea
and
enter
dec
mov
pop
in
and
cwtl
or
sbb
das
test
push
movsb
mov
or
mov
pop
leave
mov
cli
add
imulb
and
nop
fs
scas
stos
icebp
fwait
pop
and
dec
clc
out
lock
pop
pop
and
add
jge
mov
sub
in
movsb
pop
pop
out
xchg
rorb
jge
and
sbb
pop
data16
lock
sbb
pop
ja
push
bound
mov
pminsw
dec
stos
sti
and
pop
xchg
scas
sar
bound
idiv
xlat
sbb
nop
shrl
push
orl
mov
mov
cmp
lock
or
loop
cltd
cmpsb
cmp
cli
push
movsl
pop
mov
jnp
pop
ret
out
ss
push
mov
xor
shrl
int
sbb
out
inc
mov
adc
fdivrs
fsts
cmc
call
aas
sbb
ds
test
arpl
or
test
into
add
icebp
popa
xor
pop
into
jge
jo
dec
es
lods
jl
ret
loop
ret
and
adc
mov
sarb
inc
imul
divl
pop
mov
and
jle
test
gs
cld
mov
pop
dec
add
pop
aad
call
xor
clc
sti
adc
dec
stos
xor
mov
stos
mov
scas
jno
xchg
test
iret
or
sub
sahf
out
rcll
imul
adc
imul
dec
jl
jo
or
xor
cmp
xchg
into
ja
in
movsl
xchg
cmpsb
or
dec
add
push
call
inc
push
mov
lods
mov
or
shrl
cs
gs
fsts
pop
jno
aaa
xor
sbb
ds
mov
dec
or
xor
das
fdivr
mov
dec
xchg
jp
scas
std
loope
or
insb
enter
hlt
sub
test
push
icebp
push
roll
push
push
ljmp
imul
nop
pushf
dec
aas
xor
sarl
jle
loop
sub
push
mov
mov
sub
pop
lcall
shrb
cmpb
and
jns
repz
nop
sbb
loope
mov
cmp
sub
test
and
and
cmp
cmp
jle
add
ss
xchg
xchg
lods
xor
shll
outsb
stos
pop
int3
or
add
push
mov
sahf
mov
enter
pop
icebp
pop
xorb
adc
mov
fsubr
ds
or
cmp
scas
add
test
inc
dec
or
add
insl
cld
lock
fdivl
add
add
test
or
sbb
lea
and
gs
pop
setp
jle
jae
fidivrl
int
adc
dec
xchg
sub
mov
push
outsl
jbe
test
bound
lret
int3
xor
rolb
jno
lock
hlt
jnp
cwtl
dec
inc
cmp
sbbb
mov
pop
inc
push
push
sub
adcl
out
push
jno
lahf
call
gs
sub
push
lret
mov
addr16
mov
inc
sub
jge
cltd
adc
insb
in
mov
mov
fcoms
iret
or
cmp
pop
ja
out
push
mov
outsl
rorl
jae
add
iret
adc
or
in
xchg
cmpl
fwait
add
dec
jno
ss
mov
hlt
dec
push
inc
repz
frstpm(287
mov
push
outsl
mov
inc
inc
xchg
jnp
mul
lahf
stos
cmp
std
mov
insl
push
cmp
xor
add
mov
jmp
inc
pop
gs
aas
jp
testl
xor
fmuls
nop
push
andl
or
mulb
addb
movsb
dec
aam
jmp
repz
outsb
fidivrl
ljmp
cmp
ss
mov
mov
pop
scas
stos
sti
cmc
and
and
xchg
mov
and
aas
adc
and
cmp
push
and
js
test
mov
jbe
sub
or
adc
nop
push
xor
add
adc
cmp
in
sub
lds
add
add
sbb
sbb
ds
imul
mov
aam
ja
popl
jns
inc
test
into
fs
shll
gs
aad
cmp
shlb
lds
pop
fldenv
push
mov
mov
jg
inc
sub
mov
jae
and
cltd
rclb
subb
aas
insb
add
xchg
int3
les
dec
dec
mov
cmp
testb
pop
sub
xchg
push
add
dec
sbb
jecxz
adc
gs
sub
mov
cmp
jno
sbb
in
lret
dec
and
pop
pop
ret
pusha
leave
aam
jl
repz
sub
push
push
jge
std
lret
mov
lds
mov
shll
out
mov
dec
adc
test
js
lret
out
mov
out
flds
scas
push
lahf
jge
or
mov
dec
and
mov
add
dec
addr16
and
jmp
jg
and
xchg
ror
cmp
popf
fs
fldl
orb
xor
loope
mov
scas
adc
icebp
lahf
sbb
and
and
mov
lds
mov
mov
inc
jge
punpcklbw
out
sarl
aaa
insl
ss
es
xchg
jne
shr
push
aas
jg
lahf
cmp
push
add
jle
cld
lret
mov
call
movsl
or
mov
and
sar
mov
add
in
ja
mov
test
mov
mov
xchg
mov
cmp
cmp
sub
popa
ja
dec
adc
scas
lea
es
pop
arpl
outsb
es
cmp
adc
mov
loope
add
jbe
jb
mov
mov
out
or
inc
ja
movsl
arpl
push
or
out
push
stc
cmp
mov
loope
pop
inc
scas
push
mov
in
jle
adc
pop
jb
mov
test
sbb
xchg
xchg
cmp
dec
mov
shlb
inc
aad
xor
push
cmc
sub
insb
push
mov
loope
sbb
mov
jle
jnp
enter
jne
cmp
test
cmp
lret
ffree
mov
stos
sub
sub
out
arpl
pop
lcall
not
dec
xchg
sub
adc
or
hlt
and
jle
ds
scas
sahf
mov
or
mov
mov
cld
movsb
mov
mov
dec
fmull
add
add
mov
mov
pop
mov
or
mov
jno
mov
mov
mov
lea
inc
nop
and
call
popa
sub
jmp
aad
sub
fildl
xor
push
imul
push
mov
xchg
rcrb
mov
push
aas
add
mov
adc
icebp
icebp
adc
out
cld
shlb
insl
xchg
mov
lods
mov
arpl
mov
fimull
outsl
xchg
xor
sahf
mov
or
dec
aas
mov
jno
mov
xchg
mov
mov
shll
jmp
fucomp
ja
inc
sbb
cmp
sbb
outsb
inc
rcll
loopne
adc
push
ja
cltd
xor
divl
and
mov
mov
mov
push
pop
sub
xor
or
dec
mov
ljmp
int
mov
fwait
pusha
outsb
adc
push
cmp
fwait
adcl
add
jp
test
enter
test
adc
movsb
adc
or
scas
orl
loop
insb
mov
jge
inc
into
popa
jle
jns
pushf
mov
out
inc
outsl
lahf
incb
mov
add
jae
jbe
push
sbb
xor
sub
or
lret
fldcw
and
xlat
mov
xor
or
arpl
clc
out
xchg
fdiv
bound
ss
jp
cmp
dec
popa
sbb
mov
out
add
inc
jmp
fisubs
or
pusha
stos
or
loop
mov
adc
xchg
and
sbb
adc
dec
dec
push
xor
mov
pop
pop
xchg
mov
sahf
out
adc
jnp
jo
fwait
cld
outsl
pop
mov
insb
pusha
cmc
pusha
in
scas
add
arpl
gs
adc
aas
inc
int
ljmp
sti
jne
inc
faddl
add
mov
add
pusha
ljmp
js
jecxz
push
jns
pop
xchg
xchg
mov
jbe
and
mov
pop
mov
andl
je
and
lcall
in
sbb
call
sub
mov
cmc
push
repnz
lock
sbb
xchg
inc
out
xchg
mov
mov
pop
xor
sti
icebp
int
jb
arpl
xchg
push
in
call
mov
inc
aad
aad
adc
fiadds
filds
sub
mov
xor
jg
repz
rep
push
fldcw
sti
cld
das
dec
adc
or
sub
ds
icebp
xchg
gs
je
mov
es
inc
es
and
jb
sti
cmp
outsb
insl
mov
jbe
gs
aam
stc
daa
in
xchg
mov
and
mov
mov
pop
shll
ss
cmpsl
scas
xchg
sub
js
movsl
in
mov
out
outsb
outsb
loop
cmpb
inc
test
xlat
mov
scas
addb
adc
push
ljmp
cmp
sbb
push
push
and
outsl
adc
enter
pop
or
test
sub
dec
popf
sbb
adc
orb
sub
mov
xchg
clc
push
dec
dec
inc
pop
ret
dec
imul
jmp
lock
dec
jg
aam
lret
pop
cmpl
lods
adc
faddl
aas
lods
push
jmp
stos
bound
stos
push
or
xchg
mov
xchg
lea
in
cmpsb
lods
xor
push
lcall
jb
mov
jg
nop
test
inc
and
insb
adc
enter
dec
xchg
xor
int
jecxz
insl
adc
add
mov
js
fnsave
cmc
mov
mov
push
iret
div
cld
jbe
out
andl
inc
inc
pusha
mov
jecxz
add
jmp
enter
daa
and
mov
das
int
add
xchg
and
cmp
pop
out
lea
jb
pop
stos
pop
fprem
clc
lret
push
lret
jno
mov
enter
bswap
shl
jb
push
and
fstpt
inc
jmp
fcmovb
pop
mov
mov
mov
lret
sub
mov
imul
ds
loope
xor
mov
sbb
or
roll
jp
addb
mov
lcall
roll
inc
aad
and
cmpsb
aad
mov
pop
aaa
fidivrl
cmp
mov
fisttps
xor
cmp
sub
pop
fstpl
xchg
add
xchg
push
jb
fadds
js
jg
mov
or
xor
inc
in
call
or
sbb
ja
jno
sbb
pop
insl
mov
cs
jle
cld
jg
sub
add
mov
imul
andl
jb
aad
adc
xchg
pop
or
ret
out
jl
pop
jmp
mov
push
fcoms
movsb
push
xor
xlat
daa
sub
add
sbb
rcrb
adc
popa
lret
push
sbb
mov
mov
scas
test
popa
subl
aam
pop
js
cmpsl
in
je
in
push
cmpb
je
test
loope
out
pop
sbb
fwait
int3
inc
fxch
lret
add
imul
and
inc
sbb
inc
cmc
pop
sti
call
mov
popf
out
movl
insb
inc
icebp
sub
int
sahf
jns
jge
lods
bound
cmp
scas
addl
dec
in
xchg
jno
out
pop
xorb
xor
mov
dec
into
adc
aad
push
mov
push
lcall
push
sbb
inc
jns
cld
insb
xor
je
fstpl
mov
movsl
mov
xor
out
into
aad
cmp
stos
loopne
scas
fstp
cmp
fistpl
repz
jl
cmp
out
out
fnstcw
cmp
pop
jge
push
pop
in
daa
jae
jge
dec
dec
test
lods
fwait
fwait
mov
fs
sub
aad
add
xor
les
cmp
loopne
push
pop
out
xor
adc
mov
lods
sub
lods
and
pop
adc
cld
lret
test
idivl
dec
movsb
out
sbb
sbb
nop
in
bound
mov
out
cmc
stos
dec
pop
mov
mov
mov
push
in
ret
rolb
pop
lret
out
push
mov
gs
test
add
sbb
rclb
orb
xchg
fnstcw
mov
push
int
and
outsb
aam
dec
outsl
cmc
pop
jns
add
fs
or
or
lret
insl
fbld
out
pop
in
sbb
mov
popa
sbb
add
sahf
cs
mov
testb
sub
sbb
leave
and
sub
dec
fdivl
dec
ds
push
sbb
jne
cmpsl
jno
jl
daa
xor
adc
fistpll
sub
inc
mov
addr16
jno
stos
mov
adc
push
pop
add
cmp
les
inc
dec
or
repnz
or
mov
rclb
icebp
scas
das
lock
outsb
or
test
sub
test
mov
push
in
popf
and
jmp
cmp
jp
call
scas
pop
push
mov
orb
jns
sbb
jne
pop
jge
mov
xchg
mov
clc
inc
iret
lret
mov
jbe
mov
cmpsl
std
fstpl
mov
iret
les
aam
cmpsl
or
push
xor
pop
lret
and
scas
mov
jp
or
mov
fsubrs
xchg
daa
std
and
lahf
shl
negb
xchg
loop
loopne
cwtl
push
addb
add
or
pop
rclb
nop
ja
xor
lahf
scas
xor
loop
add
jge
lds
cmp
and
xor
or
int3
rolb
xor
in
add
or
insl
or
sti
dec
or
push
insl
add
cmp
mov
mov
stos
cltd
out
repz
xchg
jns
mov
addr16
jno
mov
and
pop
data16
push
orb
les
xlat
push
enter
clc
sbb
aad
sub
pop
imul
pop
cmp
or
jns
das
sbb
sbb
enter
lods
lea
stos
cmp
xchg
mov
cmp
xchg
lods
jecxz
sarl
out
pushf
data16
mov
jae
fiaddl
movsl
lahf
or
xor
pop
adc
adc
mov
adc
xor
lods
stos
mov
fs
stos
inc
xor
adc
iret
sub
ja
jns
lds
xchg
jle
jbe
dec
inc
into
sbb
pop
lods
movsb
sarb
mov
js
xor
fwait
int3
mov
xchg
movsl
int3
jb
fucomi
xchg
iret
adc
sub
inc
mov
cmp
lock
push
imul
nop
icebp
and
ret
jae
popfw
inc
scas
sub
lea
cmp
sbb
mov
mov
test
aad
imul
test
cmpsl
nop
jae
push
cmp
push
mov
stos
es
xor
sbb
mov
ss
icebp
inc
mov
popa
hlt
sbb
adc
jbe
pop
and
cmp
fbstp
lock
ljmp
int3
mov
jmp
shrb
xlat
sbb
insl
and
jl
in
hlt
scas
cmc
push
dec
imul
add
test
lahf
lea
mov
popf
xchg
int3
or
int
lods
or
ds
ja
sahf
inc
push
pusha
push
dec
jns
sahf
mov
pop
mov
lret
gs
je
mov
insl
dec
aad
push
cmpsl
roll
movl
in
lods
add
cmp
or
xor
div
call
push
adc
pop
enter
sbb
leave
mov
xchg
rclb
gs
fwait
stc
leave
push
hlt
les
int3
fwait
outsb
mulb
mov
or
rorb
inc
sarb
pop
mov
cmp
dec
js
jl
pop
add
stc
jb
jb
cmp
mov
xchg
mov
jmp
cmp
jae
add
fnsave
jmp
aad
xchg
test
sbb
movsb
adc
testl
jmp
fucomip
jl
mov
xchg
mov
dec
mov
popf
push
vpshufd
sub
sub
adc
ds
push
outsb
mov
icebp
or
ja
pop
cmp
pop
and
fldcw
xchg
push
test
in
popf
mov
popf
out
pop
add
sti
stos
ljmp
mov
pushf
xor
or
cmpsl
insb
and
das
stos
sub
dec
cs
sub
cmp
xchg
int3
negl
test
andb
pop
adc
add
push
xchg
lcall
cmpsb
test
mov
sbbb
sub
mov
xchg
mov
mov
pop
lahf
incb
aas
push
movsb
iret
out
dec
cs
xchg
nop
and
pushf
test
mov
and
mov
hlt
insl
shrb
jo
int3
xor
in
fwait
jb
fidivrs
mov
push
adc
jl
pop
jmp
repnz
cltd
cli
lea
ljmp
mov
mov
inc
imul
lret
scas
inc
inc
gs
ret
dec
xor
cmp
sarl
ret
and
movsl
xchg
icebp
aad
adc
popf
mov
les
xchg
sbb
fs
mov
cld
push
and
pop
arpl
inc
int
xchg
mov
movsl
rcl
push
mov
mov
pop
sarl
inc
adc
aas
inc
scas
pop
cmp
sbb
test
sbb
stos
cmp
xor
sahf
rcrb
gs
push
xchg
push
pop
inc
mov
loope
lock
nop
pop
ss
out
and
repz
stos
mov
jae
push
rolb
add
cmp
add
xor
xchg
rcrb
ret
inc
ret
pop
xchg
pop
add
and
push
adc
pop
xor
in
dec
xor
cmp
push
pop
dec
jbe
add
lock
push
outsl
mov
int3
mov
mov
sub
hlt
pop
mov
push
lods
int
sub
imul
popa
sbb
pop
or
imul
int
push
jb
cmpsl
movsl
rclb
inc
outsl
call
push
ja
sbb
arpl
jmp
in
test
shll
mov
addr16
int3
xor
mov
and
scas
mov
addr16
loop
imul
jge
call
or
dec
adc
or
xchg
pop
jae
inc
or
sbb
loopne
jecxz
push
jb
inc
cmpsl
ja
inc
std
jo
outsb
push
mov
xchg
sub
hlt
push
dec
sub
lds
push
add
js
jle
mov
xorl
fs
insl
jmp
out
lea
in
pmullw
xchg
pop
out
rcrl
repnz
adc
mov
or
dec
movntq
sub
and
jb
cmp
imul
jae
divl
cs
daa
pop
lahf
mov
pop
btc
or
cmp
add
jp
and
mov
rorb
push
xor
icebp
imul
out
testb
iret
xchg
dec
dec
sub
jae
testl
iret
push
lods
test
add
movsb
aaa
clc
je
cmpsl
jo
punpcklbw
add
sbb
cmp
fsubrs
int3
mov
mov
mov
orb
lods
push
mov
aas
ss
fs
jge
iret
and
fstl
repz
dec
mov
push
test
mov
neg
pop
sub
je
fs
fildll
xchg
stos
xchg
dec
enter
fidivrs
rcrl
xchg
push
push
lret
pop
xchg
xchg
popl
jge
lods
add
bsr
xor
push
xor
xchg
ficoms
aam
sub
cmp
inc
imulb
es
pop
push
lahf
inc
in
lahf
pop
mov
dec
ss
mul
mov
lock
adcl
xor
sub
pop
mov
push
jo
xor
jns
inc
push
call
push
push
add
rorl
repz
int
mov
call
push
inc
loope
mov
jp
adc
mov
sub
ret
adc
sub
test
fstl
mov
test
fs
mov
add
inc
cld
ret
sbb
push
sbb
outsl
mov
xchg
inc
jnp
inc
sub
shrl
fbld
movups
dec
push
flds
movsb
and
loope
fimull
or
xor
adc
imul
pop
movsb
cmp
stos
dec
pusha
pop
in
movsl
sbb
sbb
out
int3
xchg
ja
dec
je
in
shlb
cld
sub
imul
lds
imul
pop
mov
adc
pushw
and
mov
pop
sbb
je
aam
into
iret
mov
insb
push
rcrl
jo
int
or
fldenv
in
mov
dec
ss
pop
mov
clc
push
out
iret
push
aam
inc
outsl
and
mov
imul
or
call
mov
aaa
or
sbb
in
sub
or
mov
inc
into
and
sbb
jno
daa
ss
int3
push
cmp
xor
dec
jbe
out
negb
dec
stos
mov
leave
and
filds
pop
out
sub
rcr
mov
incb
mov
jns
popa
sti
test
or
fmuls
in
cmc
add
xor
dec
mov
call
stos
enter
arpl
inc
and
lods
xor
mov
adc
jecxz
xor
mov
mov
arpl
jl
ss
outsl
push
fcoml
outsl
and
adc
jbe
pop
lods
loopne
loope
fistps
xchg
ffreep
test
int3
adc
out
addr16
cmp
add
out
pop
adc
int3
andl
pop
scas
clc
mov
repnz
xor
enter
xor
call
cmc
mov
das
add
fisttpl
lds
jmp
and
subl
sub
add
xchg
or
clc
std
icebp
dec
lods
rorl
mov
adc
sbb
pop
test
jne
call
sbb
adc
mov
js
test
push
or
aas
cltd
mov
in
sub
cmpsb
xchg
add
xchg
sub
inc
daa
cmp
push
lret
call
in
sub
xchg
lds
add
sbb
fucomp
push
fdivs
pop
ja
pop
sub
dec
mov
jl
lods
push
les
cwtl
add
enter
xchg
mov
mov
test
lret
push
jle
stos
mov
adc
dec
movsl
inc
and
hlt
addl
daa
leave
xchg
mov
dec
lahf
fsubrs
sbb
adcl
sub
pop
sti
imulb
cmp
addr16
test
mov
das
in
sarb
call
sub
pop
stos
je
movsl
pop
repz
pop
xor
mov
and
xorb
negl
sub
pop
jge
or
movsb
push
int
dec
daa
lret
fsubs
popa
js
adc
cmp
lods
rorl
scas
add
mov
test
xor
sti
xlat
movsl
out
sub
xor
lahf
cwtl
cli
mov
in
out
call
jne
rolb
jne
in
into
iret
nop
sub
mov
stos
andb
jne
pop
fidivrl
in
js,pn
mov
stos
outsb
jge
jmp
lods
sub
pop
test
push
mov
popa
cld
add
mov
mov
aad
test
push
sub
mov
iret
in
pop
stos
out
push
sbb
dec
mov
shll
out
ja
rcr
dec
xchg
cltd
mov
fwait
xor
adc
inc
test
push
xlat
popf
daa
ja
xor
clc
insb
or
cli
sbb
out
xchg
in
cmc
sbb
stos
repz
mov
dec
sbb
hlt
mov
fldcw
mov
mov
mov
pop
and
es
jo
and
into
xchg
adc
es
or
outsb
add
dec
push
pop
mov
lahf
mov
imul
or
fcom
fsubr
lock
ss
dec
push
rorl
out
dec
or
jle
int
into
lods
and
adc
inc
ss
fstpl
sbb
das
mov
inc
jmp
or
mov
mov
jecxz
lahf
mov
fmuls
sub
fwait
ret
mov
or
cmp
ds
cmc
ljmp
rcrl
or
lds
cmpsb
xor
push
mov
xchg
cbtw
push
inc
arpl
sub
sbb
xchg
push
push
dec
sarl
jns
fstps
pop
sbb
stos
scas
sbb
push
sub
mov
into
pop
icebp
frstor
out
iret
nop
hlt
ds
pop
scas
daa
mov
daa
sub
adc
push
cltd
xchg
in
orl
imul
cmp
loopne
icebp
shll
std
test
adc
test
sub
inc
arpl
ja
cltd
pop
and
push
add
bound
sub
or
shlb
jne
mov
int3
mov
sub
sbb
repz
push
lcall
mov
jle
std
mov
outsl
adc
mov
testb
data16
mov
lcall
jmp
jo
mov
xlat
push
cmp
push
push
or
mov
and
lods
in
xchg
icebp
not
push
or
loop
jno
mov
aas
mov
push
into
jp
dec
dec
or
sub
insb
or
clc
push
or
or
mov
mov
mov
sbb
pusha
mov
jge
iret
gs
ja
push
or
ss
mov
mov
aad
push
mov
adc
stos
mov
mov
loopne
aas
out
pushf
adc
out
pop
inc
adc
cltd
adc
cmp
je
repnz
aam
shl
mov
aad
mov
fcompl
bound
loopne
sarl
push
fwait
mov
push
test
mov
pop
sub
dec
jle
movsb
mov
cmp
mov
inc
jno
hlt
inc
mov
mov
mov
les
and
jno
sub
xor
movsl
push
mov
in
sbb
test
jl
pop
cld
jb
in
xchg
ljmp
stos
aam
sub
dec
adc
sbb
mov
and
cmp
or
xchg
fsubl
insl
lods
cmpsb
fstps
lods
add
ljmp
testl
aad
les
push
stos
stc
mov
sbb
cwtl
test
fldenv
mov
call
filds
cmc
xchg
push
mov
adc
jbe
mov
inc
xchg
mov
xchg
cmc
mov
dec
lock
ret
or
push
sbb
pop
jae
subl
ds
addr16
and
gs
push
lret
loope
jle
add
mov
sub
jg
sub
xor
out
adc
stc
stos
addr16
cwtl
sbbb
sti
and
sub
push
outsb
ja
lcall
fwait
sbb
lret
lahf
shll
xor
daa
inc
push
xchg
jp
jbe
jge
movsl
mov
cmp
mov
dec
ljmp
mov
xlat
les
loopne
sub
push
enter
sub
cmp
imul
andl
dec
test
mov
xchg
cs
mov
lods
out
in
and
jp
xchg
sub
js
leave
add
push
mov
cmp
jp
arpl
scas
mov
jbe
push
lret
dec
rcrl
ret
xchg
lods
and
adc
inc
mov
bnd
das
mov
mov
in
or
push
inc
jge
subb
mov
loop
push
adc
xchg
push
mov
aad
cmp
ss
jp
aad
mov
xchg
jl
or
in
bswap
and
add
adc
pop
inc
aam
mov
stc
mov
mov
add
mov
or
je
jl
xlat
enter
sub
cmp
iret
out
inc
std
sub
lods
pop
mov
hlt
repz
cmc
push
xlat
or
movsl
or
insb
shl
mov
imul
xchg
test
adc
pop
daa
inc
xchg
lock
dec
xchg
pop
cwtl
daa
and
and
outsb
pop
pop
adc
and
stos
push
sub
fwait
xor
push
add
scas
lods
xchg
dec
das
sub
leave
and
jbe
cmpsl
fnstsw
xor
lret
sub
pop
orb
push
int3
repnz
out
jbe
cmp
aaa
lcall
and
inc
mov
fildll
cmp
movsb
cmp
xor
sub
pop
aam
repnz
mov
hlt
mov
mov
aas
popf
test
push
pop
inc
fcoml
jb
sub
cmpsl
shl
add
loopne
faddl
dec
cmp
pop
mov
popf
mov
mov
jno
lcall
jbe
cmp
xchg
pop
fisubs
scas
inc
loop
sub
inc
clc
lods
mov
inc
inc
popa
daa
lahf
ret
mov
fdivrs
mov
dec
or
jle
repz
int3
pop
mov
ret
aad
mov
mov
xor
adc
mov
imul
adc
jl
add
cli
pop
jne
mov
adc
popa
test
aas
jns
aam
lcall
sbb
add
mov
int3
pop
sahf
cs
movsb
rolb
cld
sbb
dec
inc
out
pop
daa
xor
push
dec
pop
or
mov
pop
int3
mov
sub
cmc
add
leave
mov
dec
push
jo
jne
jmp
rolb
ret
fdivrs
adc
cmp
jge
mov
decb
inc
mov
add
and
mov
rolb
and
or
push
xchg
mov
sbb
out
enter
mov
cmp
addr16
adc
arpl
or
sub
push
jp
aam
mov
mov
jl
aam
jne
mov
aas
pop
pop
mov
ret
mov
negb
enter
icebp
sub
enter
fwait
sub
cmpsb
dec
or
imul
pop
jne
add
sbb
pop
push
cmc
je
cmp
lods
sub
xor
cmp
lcall
xor
fwait
mov
or
lcall
inc
pusha
or
or
xchg
and
ret
lret
movsb
in
jg
fscale
hlt
push
je
mov
insl
pop
mov
push
inc
mov
insb
in
out
sbb
pop
ljmp
adc
int3
cmpsl
imul
pop
jp
sbb
jae
movsl
stc
nop
inc
pop
cmp
xchg
adc
je
or
mov
adc
mov
cmpsl
out
dec
out
mov
lds
andl
fcomps
inc
cmpsb
out
cmc
pop
mov
sbb
cmp
leave
or
xchg
mov
add
hlt
das
mov
stc
imul
sub
test
psrlq
and
and
das
mov
push
sarl
adc
sbb
inc
xlat
pop
inc
cmc
lahf
mov
mov
xor
and
fisubrl
outsl
mov
push
popf
sbb
leave
adc
arpl
jo
sub
jp
decb
fldenv
bound
sbb
mov
mov
mov
or
xor
addr16
pushf
adc
push
shrl
lea
sub
xchg
pop
mov
addr16
loopne
or
out
and
jmp
adc
loopne
or
iret
stos
je
and
dec
repz
jbe
or
pop
in
outsl
divb
popf
in
push
mov
and
out
fcmovu
ds
lea
cmc
cwtl
dec
insl
stos
push
int
cmp
shl
loope
jecxz
cwtl
addl
iret
dec
mov
pop
mov
icebp
out
pop
push
pop
aas
mov
jne
fwait
or
popa
cltd
fidivrl
mov
fldcw
or
dec
mov
pop
push
addl
cs
enter
pop
mov
lret
movsb
aad
mov
test
out
je
jmp
arpl
and
icebp
outsb
fcoml
gs
or
int
dec
in
imul
mov
cmc
add
mov
jl
bswap
cmpsb
jge
leave
mov
std
xchg
cltd
mov
jg
repnz
bound
inc
mov
lret
addr16
add
add
xor
jmp
fbstp
jge
dec
adc
pop
mov
into
cmc
out
jle
add
icebp
aaa
notl
mov
mov
popa
out
sbb
ret
out
sub
popf
mov
and
stos
jns
fnsave
sbb
mov
dec
push
jge
in
aad
popf
dec
imul
mov
test
sub
adc
dec
lahf
cmp
xchg
push
or
std
or
sbb
ret
sub
mov
repz
inc
jg
push
aad
cmp
fs
lcall
movsl
inc
jp
je
jecxz
dec
mov
negb
push
mov
xor
leave
orb
push
into
pop
aam
cmp
bound
scas
or
aad
mov
sub
xchg
pop
push
dec
out
inc
jbe
add
mov
imul
call
jb
cmp
lods
jo
fisttpl
insl
imul
loope
mov
pop
push
hlt
push
loope
inc
or
in
dec
lahf
xor
jno
lret
pop
cmp
mov
cmp
into
stc
test
pushf
sahf
adc
dec
test
aam
fisttpl
cmp
cmp
cli
enter
dec
cmpl
cld
pusha
fsubrl
or
push
orl
pop
jb
rcrb
mov
push
push
adc
jmp
fs
add
sbb
daa
mov
jbe
dec
fs
int
xor
jno
add
sub
sbb
xor
and
xchg
lret
sbb
mov
add
mov
cld
mov
sbb
imul
jbe
lods
int
push
sbb
mov
cmp
ficoml
ds
pop
lock
or
lds
mov
pop
ret
or
mov
aas
les
jnp
out
mov
or
mov
mov
aam
test
and
ret
inc
push
inc
data16
popf
xlat
lds
jnp
jbe
fisubrs
clc
je
lods
xlat
in
adc
out
cmp
into
dec
xor
out
movsl
pop
sub
lods
or
int3
add
inc
imul
mov
add
insl
daa
adc
aad
scas
pop
stos
cmp
ja
cmpsb
xchg
mov
lret
shlb
bound
nop
decl
xchg
lret
pop
mov
gs
cwtl
scas
hlt
orps
fdivs
sahf
lods
in
jno
gs
xor
loop
rolb
movsb
or
in
jns
insl
adc
pop
dec
jmp
inc
mov
int
insl
and
movsl
push
jno
and
and
std
jns
subb
loope
dec
pop
jae
movsb
jae
cmp
fmuls
ljmp
aas
adc
xchg
stc
cmp
mov
popa
pop
sti
cmpsl
decb
mov
push
mov
loopne
mov
lock
ja
rcll
into
adc
adc
insb
rclb
mov
insb
push
add
and
inc
aaa
push
hlt
cmp
xchg
inc
add
sbb
jl
stos
ljmp
enter
inc
in
or
mov
dec
movsl
mov
xchg
out
dec
adc
scas
stos
aas
lahf
pop
sbb
mov
mov
sarl
mov
js
inc
pop
std
cltd
cmpsb
push
inc
push
pop
adc
mov
mov
xchg
inc
loope
pop
mov
jb
fnsave
in
xchg
xchg
inc
inc
and
cmpsl
adc
pop
xchg
and
sbb
stos
dec
push
dec
push
lds
mov
pop
ficompl
loope
push
cli
jl
int
cmp
sub
add
cmp
xchg
xlat
push
xor
adcl
ret
push
cmc
subl
mov
daa
jle
movsl
fsubrl
jb
cltd
call
out
bound
sbb
jle
insl
sub
int
out
inc
lret
jbe
icebp
xchg
lret
rcll
mov
stc
jecxz
add
aas
push
sbb
btr
xor
enter
test
lret
shrl
rdpmc
jbe
roll
scas
sarl
or
inc
adc
dec
add
fiadds
mov
loop
jns
inc
jg
mov
push
xor
pop
jmp
xchg
ds
or
jae
mov
sub
lret
addb
mov
or
inc
xchg
fdivrp
fptan
or
pusha
cld
xchg
inc
lcall
pop
sbb
mov
fs
or
pop
movsb
int3
or
fsubl
push
std
std
je
sti
mov
sbb
sub
mov
pop
std
adc
aas
pop
dec
or
adc
inc
test
fmul
adc
out
xchg
sbb
lock
stc
leave
xor
add
dec
in
dec
jecxz
test
stc
pusha
bound
addr16
dec
push
pop
call
shrb
mov
adc
into
pop
inc
in
cltd
jg
and
out
mov
xchg
mov
mov
lods
dec
jno
push
jl
int
jp
lret
mov
xchg
add
lods
aaa
xlat
movsb
cs
mov
or
data16
lea
mov
aad
cmp
cmpl
fsubs
fstl
sub
cltd
arpl
cli
punpckhwd
dec
cld
insb
jmp
ret
dec
pop
aam
push
add
in
sub
mov
mov
mov
cmp
arpl
fcomps
add
mov
subl
aad
pop
enter
push
push
xor
js
xlat
stos
push
cmpsl
push
adc
jo
cltd
pop
lret
ja
push
add
cmp
push
push
xchg
nop
mov
test
push
xor
mov
cmp
jge
outsl
mov
repnz
push
pusha
cmp
lret
lea
dec
pop
adc
xchg
xor
std
jo
mov
adc
dec
sbb
testl
push
outsl
inc
mulb
pop
sbb
cmc
aad
es
stos
sub
inc
hlt
mov
lock
adc
jl
out
xchg
cmp
rorl
mov
inc
mov
xchg
and
js
pop
loopne
bnd
xchg
mov
in
pop
jns
adc
xlat
inc
aas
mov
dec
add
xadd
or
loopne
mov
sbb
and
repz
pop
push
adc
cmp
or
cltd
lds
mov
pop
mov
xor
fcmovbe
ljmp
fs
out
fistpl
xor
dec
das
call
mov
pop
xchg
or
lods
popl
in
shll
imul
push
xchg
inc
pop
xor
push
add
xor
xor
fistpll
dec
inc
inc
xor
sub
ret
lods
and
loopne
pop
and
pop
lods
add
mov
insl
stc
fpatan
dec
in
mov
and
xor
lds
daa
jo
popf
aad
mov
jns
mov
fisttps
adc
lock
jbe
cmpsl
lahf
or
push
sbb
js
xlat
sub
jne
repnz
mov
mov
push
xchg
xchg
mov
hlt
sbbl
cld
mov
cld
fstps
mov
mov
mov
add
mov
lea
dec
xor
jb
pushf
mov
std
fneni(8087
repnz
fstps
dec
leave
pop
fmulp
sub
cmp
push
shll
test
pusha
xlat
mov
mov
ss
mov
push
lock
pop
and
aad
xchg
fmuls
mov
sub
fimuls
pushf
cmp
dec
sbb
inc
fcmovbe
cwtl
inc
adc
std
mov
clc
std
cmp
dec
push
push
incl
and
push
dec
lcall
mov
mov
push
test
push
push
mov
sbb
push
push
cwtl
dec
testl
std
mov
cmp
xchg
lret
xor
sub
ficoml
in
xchg
test
dec
sbb
inc
xchg
cmpl
dec
popa
mov
and
lea
adc
cwtl
xor
fidivrl
xchg
dec
adc
test
outsb
and
dec
sbb
sbb
inc
rclb
ljmp
mov
mov
insl
gs
movsl
and
pushf
xchg
lcall
dec
push
sti
lret
inc
mov
pop
pop
or
pop
and
loopne
shrb
decl
and
adc
test
mov
adc
or
cmpsb
in
pop
jno
sub
mov
fsts
pusha
jle
cmpsb
cmpsl
jbe
add
adc
jl
stos
loopne
sbb
lea
scas
push
add
fisubrs
out
andb
ret
push
aam
out
repz
insl
test
adc
mov
inc
pop
or
es
frstor
push
std
sbb
mov
aaa
stos
add
pop
out
cmc
add
add
xor
daa
mov
xlat
nop
jno
ja
cmp
in
sbb
push
das
test
imul
loopne
sarb
adcb
jae
lret
dec
jecxz
jo
pushf
jle
out
ja
mov
jno
push
and
sbb
leave
test
push
enter
mov
bnd
xchg
xchg
movsb
in
sub
push
rcr
pusha
push
push
mov
sbb
loope
das
and
inc
xchg
cmp
out
cmp
cwtl
andb
subb
sbb
inc
cmp
inc
jmp
dec
pop
sub
sub
ret
test
xchg
mov
js
xor
ret
cmpsb
test
or
pop
inc
test
pusha
or
ja
psubsb
mov
stos
fwait
scas
lods
xchg
in
gs
gs
in
addr16
sub
cltd
lcall
jge
fcompl
or
shrb
iret
fnsave
fidivrl
xor
int
stc
xor
stos
dec
js
push
out
pushw
xlat
cld
push
icebp
fldenv
aam
fisttpl
and
sarb
rclb
sub
sub
mov
shll
sub
frstor
mul
dec
jecxz
cmpb
jmp
insb
jge
arpl
shll
mov
xor
or
mov
pop
mov
sbb
xor
xor
mov
pop
or
clc
push
aam
lds
push
adc
lds
adc
out
or
sbbb
sbb
into
in
cmpsl
lret
clc
mov
data16
idiv
dec
sahf
je
sub
mov
insb
cmp
adc
inc
ret
dec
cmp
ret
xchg
lods
hlt
or
push
sbb
sti
cmp
xlat
xor
cld
push
aaa
ficomps
push
push
xor
fbstp
scas
rcrl
inc
cmpsl
add
clc
jmp
or
aad
and
xor
hlt
insl
and
je
mov
stos
or
xor
xorl
cmp
or
mov
xchg
pop
out
pop
shl
xor
roll
push
lret
lods
fs
mov
jnp
xchg
dec
popa
sahf
fcom
mov
sbb
xchg
push
out
mov
xor
xchg
cmp
pop
cmp
repnz
push
push
fnstcw
ljmp
mov
mov
or
pop
dec
nop
add
cmpsl
push
cmp
jae
repnz
push
inc
mov
lds
mov
sbb
int3
inc
mov
movb
ret
dec
outsb
je
push
pop
sahf
test
xor
shlb
mov
shrb
rcrl
ret
xchg
jl
in
jmp
and
lcall
pop
mov
ljmp
mov
fisttpll
stc
add
mov
inc
stos
jecxz
sbb
mov
clc
cld
leave
icebp
test
imul
dec
insb
lods
add
sub
add
sbb
mov
jecxz
std
or
cmp
mov
setle
adc
dec
outsb
push
filds
push
outsb
mov
ljmp
das
out
imul
or
sbb
mov
xlat
mov
xchg
push
sbb
leave
lahf
xlat
ss
mov
les
adc
fdivs
sub
in
add
jno
dec
outsl
push
iret
icebp
in
ja
push
in
xchg
inc
mov
adc
cmc
sub
and
mov
dec
cmp
fisubrl
mov
mov
lods
sbb
push
push
out
sbb
mov
rclb
sti
ret
xor
call
lods
in
fdivrl
int
fisubl
out
jns
fucomip
adc
adc
pop
or
stc
icebp
sub
sbb
int3
add
pop
jle
je
arpl
das
in
or
ror
mov
es
repnz
lods
nop
dec
std
sbb
pop
stos
cltd
sub
imul
lods
cld
lods
lock
mov
sti
sbb
repz
inc
sub
andl
jo
negl
mov
push
pop
fsts
aam
aaa
cmp
data16
lea
arpl
or
fdivp
push
out
arpl
inc
sti
mov
shlb
das
adc
inc
add
pop
xor
push
insl
ror
xor
or
xchg
mov
mov
pop
aas
pop
das
mov
xchg
rolb
inc
test
add
mov
add
addr16
push
test
push
xor
jmp
dec
fmulp
cli
stos
std
adc
push
jae
jnp
mov
fwait
es
xchg
jmp
mov
sbb
faddl
or
jecxz
and
or
pop
jg
nop
leave
fidivrl
jno
pop
mov
fdivs
pop
ret
scas
shlb
push
cwtl
cld
add
test
inc
scas
xchg
lret
cmc
xor
std
push
sub
inc
shl
jb
adc
push
shlb
xor
xor
in
aam
aam
out
mov
inc
sti
ljmp
mov
or
aam
inc
or
orl
lret
rcll
sti
mov
and
mov
pop
es
fsincos
pop
imull
jno
ret
enter
sti
loope
dec
divps
push
lcall
divl
lock
ljmp
call
hlt
cs
mov
jae
shll
cs
jb
mov
out
add
cmc
mov
push
cltd
es
out
sub
rcll
jae
xor
dec
xor
or
std
fldt
or
xor
cmp
adc
mov
std
mov
adc
and
in
push
mov
in
imull
mov
or
daa
xchg
xchg
sti
loope
xor
lods
dec
fadds
and
mov
sbb
mov
cmpsb
xor
data16
mov
mov
jnp
sti
rolb
mov
fldl
pusha
imul
push
mov
hlt
or
testl
jb
sti
and
jno
jle
sbb
lahf
push
xor
dec
sub
dec
in
int
jle
test
dec
lcall
push
dec
gs
jge
cmpb
dec
mov
cmp
jo
lcall
in
imul
pop
lcall
scas
lret
dec
fwait
xor
sbb
sbb
dec
out
xchg
or
stos
sbb
cwtl
push
jp
rolb
xchg
cmpsb
push
rcrl
mov
repnz
add
rcrl
push
aaa
arpl
and
imul
nop
sub
nop
aam
les
xcrypt-ecb
cmpsl
dec
mov
mov
std
inc
mov
std
jno
cmc
clc
dec
js
push
lds
imul
iret
mov
inc
jo
ret
or
pop
xchg
push
clc
daa
mov
je
dec
daa
insb
cltd
outsb
aaa
ds
xchg
je
imul
mov
lahf
and
hlt
call
mov
fisttpl
mov
adc
push
or
lock
pop
sub
xchg
test
cli
clc
daa
pusha
pop
cmp
xlat
dec
je
jbe
popa
pop
cmp
sub
in
aam
jp
jecxz
mov
inc
lcall
push
inc
adc
cld
test
lret
cmp
xor
or
inc
xchg
jne
adc
xorl
js
cmp
sub
out
inc
mov
and
mov
xor
push
mov
pusha
jo
adc
aad
xchg
xor
mov
dec
mov
cmp
pop
inc
adc
in
stos
mov
pop
imull
xchg
lret
addl
xor
or
sub
mov
aad
mov
mov
out
rorl
xchg
sub
leave
cmc
aas
ja
push
xor
and
lods
xor
mov
add
stc
xchg
xor
movsb
and
je
movsb
dec
movsb
mov
sti
mov
out
mov
outsb
lds
mov
xchg
loope
pop
and
loop
in
mov
jae
in
aaa
pop
xchg
xor
jno
fmull
insl
mov
mov
test
imul
push
add
insb
push
sti
pop
xor
cmpsl
cs
mov
shr
sub
and
repz
dec
movsb
sbb
xlat
stos
lods
xchg
jl
pop
inc
sub
inc
shl
test
add
loopne
arpl
popa
in
or
std
rclb
push
ds
adc
in
mov
and
inc
sbb
xchg
hlt
push
notl
or
jo
push
push
and
sbb
pop
mov
enter
addr16
mov
sub
add
jmp
pop
mov
push
lret
std
add
jns
mov
xor
xor
scas
mov
loope
lds
xor
jg
sub
cmp
and
int
jne
popa
or
pop
inc
fcompl
mov
adc
cld
and
adc
sbb
pusha
insw
je
fwait
mov
cli
ljmp
shl
sbb
xchg
xor
scas
cmp
xor
sub
jle
xchg
xor
insb
popf
test
or
or
lret
mov
aaa
push
shrb
or
sarb
xchg
hlt
out
push
fs
popfw
push
mov
fldcw
dec
loopne
hlt
add
or
mov
scas
xchg
and
xlat
mov
into
pushf
sub
mov
jae
scas
pop
sub
insl
movsb
clc
clc
add
ljmp
jae
je
inc
js
popf
popa
imul
mov
ret
cmp
sbb
cmp
lds
pop
pop
jle
cld
mov
xor
mov
sbb
call
push
jb
divb
sbb
mov
es
int3
adc
pop
sti
add
pop
mulb
inc
adc
js
xor
sti
leave
shl
inc
mov
pop
iret
dec
jecxz
fbstp
movsl
fwait
shlb
dec
out
dec
mov
sbb
mov
xchg
loopne
sub
jo
cltd
lea
inc
mov
js
cmp
inc
sahf
roll
fistpl
inc
enter
inc
cmp
ss
cs
in
inc
cmp
stc
sbb
adc
outsb
ffree
adc
hlt
hlt
pop
cmc
in
fnstenv
pop
stos
jecxz
test
stos
aaa
add
and
pop
popf
addr16
add
in
pop
push
pop
cmp
sbb
sbb
test
jnp
fs
ds
les
lock
mov
loopne,pt
mov
add
gs
sub
xchg
gs
loope
lret
ds
pushw
sub
daa
aam
aaa
xor
push
repz
into
sbb
mov
fdivl
lea
ds
adc
sahf
sti
pop
mov
jno
jl
push
rolb
inc
bound
push
jb
mov
inc
ror
and
dec
test
psraw
lds
mov
sub
xchg
push
or
mov
mov
add
push
lahf
loop
bound
popf
jmp
rorb
and
test
pop
lea
getsec
pop
inc
mov
sub
ja
js
pop
adc
arpl
aad
sub
sahf
mov
out
xchg
ret
and
jb
movsb
fldln2
xor
pop
or
pop
ret
loopne
int3
adc
push
lea
add
pop
fldl
sbb
stc
xchg
shll
repnz
inc
ss
pusha
xchg
cs
adc
clc
sub
daa
pop
cld
or
sub
fmulp
aas
mov
sub
mov
add
xchg
stos
cwtl
std
mov
clc
inc
scas
sbb
pushf
push
pop
ret
fwait
add
data16
mov
sub
lock
ja
enter
and
dec
mov
pop
lcall
add
inc
out
fistl
dec
add
pusha
xchg
nop
fidivrl
xchg
adc
xchg
xor
out
mov
cld
cmp
outsb
loopne
dec
push
ret
enter
pop
mov
shrl
pop
xchg
or
arpl
iret
and
pop
jmp
push
in
insl
not
mov
pop
movsl
sbb
add
repnz
nop
jg
test
mov
jg
cmp
stos
dec
mov
inc
scas
jecxz
jl
cmp
sbb
rol
adc
pop
popf
cmpsb
cmp
adc
pop
jg
jl
jne
sub
aas
mov
push
orl
xor
aad
bound
loopne
cmp
jo
adc
xor
cmp
pop
loopne
sub
dec
xchg
lcall
rolb
sbb
add
xchg
mov
pop
pop
aas
mov
and
out
inc
out
cmc
mov
shll
cli
sub
dec
subb
and
in
or
lahf
xor
and
loop
jecxz
outsl
cli
mov
loopne
adc
adc
or
in
lcall
movsl
lahf
sti
adc
adc
cmp
daa
sahf
push
mov
dec
rorb
push
cmp
cld
mov
or
sbb
ror
mov
pop
push
mov
mov
ss
sbb
out
leave
dec
stc
jns
or
inc
jb
mov
push
jg
shll
dec
sub
jge
loop
pop
push
and
adc
xor
cmc
and
imul
or
pop
add
je
lds
cld
sub
and
push
push
out
sub
push
xlat
mov
push
fidivs
pop
and
sbb
push
jb
int3
mov
mov
jo
sbb
push
js
shl
in
pop
out
mov
lret
xchg
outsl
je
inc
and
push
mov
je
or
mov
daa
sbb
mov
add
fwait
push
loope
mov
fwait
lret
aas
into
enter
cmp
or
stos
fsubrs
push
cmp
lds
inc
jl
sbbb
pusha
fwait
test
sbb
or
nop
les
rclb
inc
mov
sbb
mov
pop
jecxz
mov
std
xchg
fcmovu
fucomip
outsl
pop
jb
in
mov
inc
bound
jge
inc
mov
sbbb
sub
push
mov
push
fcomip
mov
push
das
mov
cwtl
add
into
mov
iret
add
popf
insb
clc
cmp
sahf
popa
sarb
jmp
jne
pop
rclb
cli
outsb
inc
dec
or
fxch
rcr
xchg
popf
or
fyl2x
jae
xchg
cwtl
lea
repz
push
stos
pop
inc
inc
rclb
inc
imul
add
imul
repnz
gs
movsl
repnz
add
jp
pop
dec
cld
cmpsl
daa
mov
xchg
fs
xchg
adc
jecxz
push
jb
mov
mov
stos
iret
lcall
xlat
adc
into
inc
add
sti
int
cld
mov
repnz
inc
adc
and
mov
mov
pop
mov
pcmpgtw
mov
jo
ret
mov
shll
dec
inc
nop
xor
cmp
out
inc
not
cmp
ss
cltd
shll
add
jl
loop
mov
and
into
scas
pop
mov
js
adc
arpl
int3
ret
ds
cs
aam
pop
dec
pop
sahf
jnp
xchg
and
mov
mov
jo
pop
movsb
push
add
or
jle
or
add
inc
movsb
je
dec
push
adc
cmp
mov
fdivs
sbb
dec
lret
outsl
push
std
es
clc
and
dec
flds
cmpl
jp
mov
add
repz
call
lahf
imul
cmpl
mov
lret
out
jne
mov
cmp
sarb
mov
jae
or
sub
loopne
inc
imul
cmp
mov
xchg
inc
insl
je
test
clc
add
sahf
add
xor
fwait
mov
push
in
jge
mov
inc
loop
mov
sahf
inc
nop
roll
in
aas
xor
xchg
iret
xor
adc
mov
mov
mov
es
mov
inc
xor
inc
pmaxsw
inc
aas
sub
leave
aaa
push
push
mov
popf
bound
xchg
sti
inc
jo
or
insl
std
jae
dec
add
repz
clc
jb
rcll
imulb
and
or
out
add
sti
js
ss
into
and
cld
ja
movsl
insl
mov
fisubrl
sti
fldcw
mov
mov
sub
pop
cmpsb
repz
mov
aad
mov
xchg
xor
sarb
mov
idiv
xchg
mov
pusha
jo
shlb
add
push
and
adc
scas
add
sbbb
sub
xchg
lahf
sub
daa
stos
imul
push
xchg
out
pop
xchg
out
hlt
sub
adc
in
mov
cmp
dec
test
inc
imul
sar
push
sbb
hlt
adc
fidivrs
pop
xchg
lahf
sbb
loop
jp
cmp
cs
sbb
imul
or
and
push
data16
dec
push
mov
sub
cmp
shll
icebp
popa
mov
fists
mov
mov
je
and
cmc
jmp
sbb
lret
push
fwait
dec
clc
pushf
in
mov
and
and
ds
adc
movsl
addr16
mov
das
mov
jno
mov
sub
mov
or
out
or
movsb
xlat
and
inc
cmp
int3
repz
xchg
and
sub
sbb
das
adc
add
xchg
sbb
sbb
aaa
mov
add
adc
pop
add
inc
lahf
inc
int
mov
scas
ja
aaa
pushf
std
das
dec
out
orl
lahf
xchg
negl
mov
imulb
jmp
mov
out
or
sbb
lret
xchg
inc
negb
scas
mov
pusha
push
sub
and
pop
fisttpl
nop
xchg
into
pxor
xchg
jno
es
fsubp
add
loop
lret
out
cmp
dec
lods
inc
fwait
mov
jg
incb
add
ror
push
dec
out
je
mov
adcl
std
mov
in
decb
stos
mull
es
mov
jl
lret
xor
orl
aam
movsb
test
pusha
inc
shrb
cs
filds
xchg
sbb
and
jae
inc
xor
mov
pusha
orb
xchg
movsb
and
clc
pop
fbld
mov
imul
movsl
insl
push
pop
popf
mov
js
xchg
or
dec
lods
adc
inc
pop
out
cld
mov
pop
and
test
xchg
mov
jle
mov
dec
xor
xor
in
jl
cmp
std
cs
jnp
sub
in
enter
dec
lds
cmpb
xchg
cmc
pop
popa
out
jo
lahf
pop
es
push
aad
cmp
aam
cmp
ja
mov
test
sub
test
push
cltd
outsl
push
aam
push
xchg
addl
push
sub
lods
mov
or
mov
xchg
mov
inc
and
mov
and
sbb
mov
pop
sub
fistpll
sbb
cmp
jmp
jae
loopne
push
pop
int3
dec
mov
aam
lret
std
jnp
xchg
push
iret
orb
fldenv
jo
shl
testl
scas
inc
call
sbb
negb
fsts
xchg
fidivs
xlat
push
sti
lret
mov
inc
movsb
rcrl
mov
jecxz
mov
cmp
mov
mov
cwtl
mov
in
and
ret
test
rcl
jnp
and
scas
adc
xor
sub
mov
pop
push
push
push
notb
xlat
fstpl
imul
push
jg
cmp
shr
clc
mov
shlb
out
in
add
popf
cmp
out
sbb
mov
sub
ss
and
add
sbb
dec
dec
xchg
ja
mov
outsb
add
enter
popf
jbe
or
fisubrs
mov
fwait
mov
mov
xchg
aam
mov
dec
adc
lods
push
adc
xchg
and
sbb
adc
movsl
xchg
fidivs
enter
rclb
mov
mov
hlt
push
sub
cmp
mov
or
jae
leave
and
or
repz
fbstp
pushw
insb
insl
arpl
cs
inc
jae
jns
outsl
js
negl
add
aas
add
inc
jo
aas
mov
negb
std
jge
lahf
mov
divl
int
int
lods
mov
mov
sbb
push
push
iret
popa
dec
test
lret
pop
iret
adc
add
mov
jb
fstpt
das
popa
test
or
loopne
inc
push
add
sub
xchg
ljmp
fisttpll
out
in
jl
sti
shlb
adc
lcall
icebp
out
ljmp
or
push
adc
into
sbb
mov
icebp
aam
fcompl
aam
push
inc
in
xor
ljmp
pop
adc
lods
ret
dec
xchg
cmpsb
jbe
arpl
stos
sbb
lock
ret
mov
test
sbb
loopne
cmp
iret
xor
lret
dec
in
cmp
jae
stos
mov
xchg
push
jle
loope
xchg
cmc
jnp
push
and
stos
push
inc
xchg
dec
mov
nop
dec
mov
in
mov
sub
arpl
mov
pop
mov
sbb
dec
fstpt
dec
mov
jbe
insl
test
dec
test
rcll
ret
xchg
adc
or
pop
pop
test
lods
pop
popl
cwtl
repnz
movsb
add
xchg
xor
scas
cld
out
xor
pop
out
pop
sbb
mov
pop
les
mov
and
fsts
gs
std
inc
int3
cmp
test
mov
es
jo
pushf
fstpl
imull
hlt
cli
sub
cmp
xchg
lods
cltd
ss
and
ret
and
lcall
inc
outsl
sub
add
dec
cli
lret
push
loope
fmul
mov
mov
push
or
lcall
jg
xor
mov
push
or
lods
adc
ja
stc
inc
into
adc
push
mov
dec
scas
scas
inc
bound
cs
stos
push
icebp
sub
sbb
test
int
out
rcrb
fnstcw
aad
scas
imul
mov
jno
dec
or
adc
mov
jge
jle
int
and
sub
or
in
imul
out
into
or
mov
pop
pushf
rcr
repz
outsl
outsl
xor
xor
arpl
mov
fcoml
mov
imul
mov
xchg
lahf
lds
mov
fcomps
adc
or
lock
push
cs
cmp
mov
lods
lea
xor
xlat
loopne
pop
mov
mov
cmc
mov
out
jns
or
into
std
jg
adc
insb
xchg
pop
jne
cmpsl
stos
fcmovu
ret
jb
jnp
mov
xor
nop
ss
fisubl
icebp
ficoml
mov
adc
es
enter
fildll
and
adc
xchg
in
mov
jnp
mov
push
scas
add
fcomps
movl
push
sub
sub
outsb
pop
insl
in
lods
or
mov
je
cli
or
hlt
in
xor
out
fists
add
lret
clc
in
xorl
cltd
and
pop
push
cmp
rorb
aaa
jne
daa
fsubs
mov
mov
shrb
cmp
rolb
mov
addr16
pop
aad
insb
add
pop
test
jg
adc
sbb
shl
cmp
mov
enter
xorb
push
mov
call
or
push
inc
push
add
xchg
or
xchg
popf
inc
fcomps
sub
inc
pop
cmpl
sub
ljmp
sub
daa
nop
xchg
xchg
xor
vpsubusw
xchg
fwait
adc
dec
mov
sbb
mov
andb
cmpsl
rcrl
lock
jno
mov
mov
imul
adc
adc
inc
mov
xor
ja
sar
stos
fmuls
pop
out
ret
xlat
mov
out
aad
cltd
xchg
xor
cld
pop
xor
adc
addl
or
or
cmc
or
ja
pop
mov
mov
adc
jg
pop
jo
sbb
outsl
test
les
in
ror
sbb
dec
sbb
sub
lahf
dec
jo
fiadds
jp,pt
pop
sbb
lcall
jae
movsl
xor
push
mov
jmp
jp
xchg
push
fildll
call
cmc
jg
mov
adcb
mov
add
push
sbb
insb
jp
fistpll
ljmp
sub
xorb
dec
lcall
in
loopne
outsl
add
jne
aaa
lret
cld
lret
push
movsb
fsubl
ds
stc
cltd
hlt
and
negb
pop
xlat
sbb
lret
nop
addb
hlt
fbstp
in
and
mov
rcrl
lret
mov
imul
jbe
test
fstl
rorl
shll
dec
xchg
cwtl
movsl
adc
movb
in
outsl
popf
idivb
inc
lods
push
mov
pop
cltd
jle
jl
mov
jae
push
mov
rcrb
xchg
cwtl
and
xchg
roll
push
jecxz
stc
int
inc
lahf
in
gs
add
inc
xlat
xor
mov
pop
aaa
shll
je
inc
push
fstpt
arpl
and
mov
ja
fimull
push
mov
ja
loope
popa
mov
in
bound
scas
sti
jo
adc
stos
addr16
adcl
in
and
stos
mov
push
jmp
nop
sub
sub
pop
test
adc
mov
inc
or
pop
out
dec
mov
mov
cmp
int
aad
adc
leave
cmpsl
mov
cmp
flds
je
ret
xchg
sub
je
add
jae
xchg
cli
les
fcoml
in
cs
iret
push
cs
adc
hlt
push
ret
and
test
xorps
mov
pop
aaa
adc
xchg
mov
xchg
pop
mov
jae
jmp
jns
jecxz
sbb
es
push
clc
jns
les
jns
test
dec
jno
das
les
sub
in
hlt
mov
jb
or
pop
je
repz
repnz
loope
push
lret
aad
je
push
pushf
add
mov
cmp
sarb
shrb
jae
xchg
mov
in
ja
movsb
cld
pop
inc
loope
jg
adc
sub
lods
cltd
xor
cmp
mov
repz
xchg
enter
mov
jg
or
push
test
cmc
aas
sbb
sbb
test
pushf
mov
mov
or
rorb
sub
test
pop
mov
push
mov
cmp
adc
in
cmpb
adc
inc
pop
xor
push
fwait
popa
or
adc
lcall
scas
sub
fmul
repnz
mov
sbb
test
aad
scas
dec
mov
pop
ljmp
or
add
xchg
bound
fimuls
push
mov
or
insb
pop
jl
loopne
iret
aad
insl
mov
cmpb
insb
ret
mov
repnz
out
frstor
push
lahf
or
rcll
adc
add
sbb
dec
in
shll
xor
stos
mov
mov
sub
mov
fmulp
push
jmp
xor
or
pop
sbb
push
ss
int
push
aas
pop
jge
scas
aas
mov
mov
mov
or
cmp
cwtl
repz
jp
mov
adc
popf
pop
jo
loope
mov
test
cld
jmp
out
lods
mov
ret
aam
push
icebp
sub
mov
add
fists
xchg
sahf
push
test
out
pop
push
pushf
rcl
sub
jge
jg
push
pop
ljmp
fadd
or
mov
inc
icebp
push
lea
fisttps
inc
xchg
add
into
xchg
sbb
xor
xchg
xchg
sbb
or
jp
lcall
outsb
mov
scas
jbe
call
mov
push
ficoml
and
mov
es
std
mov
or
stos
push
mov
pop
scas
inc
xor
mov
divl
outsb
jge
mov
sbb
push
ja
movsl
dec
daa
push
add
push
hlt
adc
dec
imull
dec
movsb
mov
xlat
or
clc
fistpl
pop
xchg
inc
movl
or
mov
xchg
js
mov
pop
imul
inc
sub
and
in
xor
jo
dec
jp
in
push
adc
sub
outsl
data16
mov
sub
cmp
push
iret
imul
clc
or
xor
mov
mov
loope
fs
stos
stos
xchg
and
pop
aas
test
int3
inc
orl
out
sub
das
push
cmp
jnp
cmpsl
imul
sub
adc
inc
gs
or
sub
inc
out
decb
andl
xchg
dec
icebp
stc
js
cltd
xchg
push
lods
inc
sub
rcll
repz
outsb
mov
sub
pop
lret
jb
or
cmp
in
insb
mov
inc
ljmp
shrb
and
cmc
in
scas
xlat
mov
mov
pushf
push
xorl
inc
int3
inc
pop
je
add
jnp
jmp
mov
mov
mov
movsl
bound
add
shl
leave
add
outsb
jnp
iret
gs
out
sbb
int
bound
xchg
and
mov
cmp
cmp
mov
lahf
xchg
push
out
cmp
leave
jne
or
jbe
ds
sbb
adc
test
lea
enter
insl
inc
movsb
out
add
dec
clc
sbb
repz
jmp
sarb
pop
mov
mov
cwtl
out
loop
imul
js
inc
lret
cmpsl
aad
sub
xor
icebp
xor
dec
pop
clc
loopne
mov
rorb
add
dec
push
pop
or
inc
mov
sbb
dec
dec
mov
test
sbb
testb
dec
popf
and
lea
cmp
fiaddl
lock
or
xchg
inc
push
lock
pop
pop
inc
in
lods
mov
xchg
outsb
add
mov
adc
fsubs
sahf
mov
push
pop
loopne
ja
arpl
sub
cmpl
pop
sbb
adc
pushf
es
cmpsb
dec
movsl
lds
jns
cmp
repnz
mov
loop
pop
call
lret
mov
scas
jle
das
test
loopne
mov
mov
fsubl
ret
add
xor
and
aaa
dec
scas
add
sub
jmp
sbb
jge
push
shrb
cld
jnp
in
js
test
mov
idiv
fwait
push
add
arpl
dec
ja
sub
cmp
outsl
loope
pop
xchg
jo
dec
mov
jne
mov
adc
sub
push
bound
adc
pop
sahf
mov
clc
mov
cwtl
fwait
cld
add
lock
mov
out
mov
call
add
xlat
popa
in
scas
cli
lock
std
fstps
push
cld
imul
add
sub
pop
sbb
cmc
lds
data16
mov
sub
add
inc
ljmp
rolb
les
xchg
pushf
mov
mov
mov
pop
outsb
cmp
cmp
or
jp
push
outsl
pop
fs
dec
mull
sbb
push
in
lret
sub
dec
mov
jns
adc
dec
inc
jecxz
movsl
mov
push
in
clc
mov
mov
sahf
scas
mov
mov
jb
scas
js
lea
inc
xchg
imul
push
add
outsb
inc
or
insl
arpl
xchg
mov
addr16
xor
pop
xor
inc
outsb
pushf
pop
fwait
dec
repz
jo
jbe
mov
mov
mov
xor
mov
sbb
aas
dec
dec
mov
jns
mov
lods
cmpsl
inc
add
pop
lods
das
sbb
test
and
push
out
imul
insb
in
shl
sbb
imul
jl
mov
sub
xor
repz
fs
lods
pusha
je
push
and
out
add
in
sub
iret
add
mov
pop
icebp
cmp
into
sar
and
aaa
inc
jns
pop
jecxz
jl
test
pop
and
pop
outsl
div
add
sub
sub
sbb
pusha
mov
stos
out
xor
add
push
rorb
pop
xlat
mov
push
add
sub
in
pusha
mov
fistl
or
or
or
push
xor
push
and
mov
inc
fwait
add
sti
jge
test
call
ret
movb
dec
fsubl
xlat
ret
stos
popa
adc
insl
cmp
jnp
std
lods
add
stos
lods
aad
scas
clc
jle
xor
enter
cli
daa
data16
sub
push
sub
mov
sbb
add
xchg
xor
mov
xchg
lret
xchg
lcallw
fldt
pop
data16
shr
jmp
fdiv
adc
and
pop
mov
xchg
or
in
and
cs
push
push
bound
and
sub
mov
mov
pop
jle
cmc
or
inc
pop
in
insl
ss
pop
cmpsl
gs
xchg
lret
push
mov
cwtl
mov
mov
movsl
push
shlb
mov
std
xchg
cmp
ds
mov
fcmovu
pop
mov
movsb
and
lahf
pushf
dec
lea
sub
insb
push
xor
mov
push
out
push
pop
add
adc
fnstsw
pop
and
or
xchg
mov
xchg
out
fldlg2
adc
sub
pop
mov
test
sbb
mov
int
int
ss
leave
jbe
mov
sbb
mov
lods
das
xor
ret
fidivs
jl
mov
sbb
cmp
in
leave
dec
or
push
mov
mov
fnstcw
mov
es
push
mov
lret
stos
movsl
mov
pop
sbbl
jno
xchg
sti
ret
mov
push
cmp
sub
in
push
mov
jae
outsl
cs
mov
in
lods
outsl
push
lcall
mov
push
fisubrl
jmp
dec
xlat
or
cmp
xchg
mov
push
iret
lcall
test
fcoms
lcall
loope
cmc
stc
lea
push
lods
pop
test
loopne
adcb
push
mov
test
cld
cwtl
bound
inc
pop
adcl
add
addl
pop
sahf
repnz
mov
cs
and
xor
or
int
and
dec
mov
jle
mov
loopne
push
in
movsb
outsl
jno
add
cwtl
call
insb
lret
clc
sahf
inc
xchg
in
pop
neg
or
xchg
les
rolb
lret
mov
stos
or
push
addb
cltd
ds
lea
fsubp
sub
cs
adcl
inc
or
push
psraw
lcall
push
fsubrl
xor
xor
sbb
cltd
push
stos
xor
data16
fwait
cmp
hlt
adc
inc
and
outsl
lock
ljmp
mov
fwait
adc
mov
inc
fadds
roll
popl
xor
jno
mov
cwtl
push
dec
gs
pop
aas
jo
push
dec
out
push
xor
aaa
fwait
popa
repnz
rcrl
fnstcw
push
call
or
jmp
scas
mov
repnz
rolb
push
xorl
inc
popa
cmp
mov
add
mov
ret
add
in
mull
fbstp
push
add
sub
and
push
xor
gs
xor
aad
fcomp
sbb
ret
or
or
outsb
pop
xor
stos
and
out
loope
hlt
jmp
movsl
sub
xor
push
ret
mov
dec
sub
sar
rcrb
push
js
call
loope
pop
popa
adc
rorb
mov
add
add
sub
in
sbb
rorb
fwait
jnp
out
jg
xchg
sub
jmp
stos
and
stc
jnp
fnstsw
add
dec
out
fidivs
and
inc
push
rclb
sub
or
pop
mov
mov
mov
mov
js
mov
sarb
pop
loopne
adc
cmp
movsb
mov
inc
inc
add
and
icebp
add
insl
pop
lret
sbb
cld
push
cmp
cmp
mov
xor
icebp
jo
jbe
dec
nop
xchg
pop
mov
push
adc
jae
scas
pop
sbb
push
insl
stos
dec
mov
add
sarb
mov
add
add
ficoml
arpl
loop
popf
scas
in
push
cmp
rcrl
dec
cs
pop
ds
xchg
popf
pushf
push
sti
stos
xchg
sub
fisttpl
ret
mov
call
pop
and
xchg
js
mov
cmpsl
xchg
xor
jno
mov
stos
mov
aad
mov
add
push
pop
repz
sbb
cmp
aas
aam
cmp
lcall
ret
sub
fildl
insl
das
cmp
movsl
cmp
subl
addl
sbb
mov
cld
or
movsb
cltd
fstps
arpl
and
mov
outsl
push
cs
mov
jmp
fsubs
xor
cmp
pop
test
cmpsl
xor
nop
cmpsl
repnz
shrl
push
sbb
sub
push
cmp
mov
mov
outsb
xchg
adc
xchg
push
sub
jb
dec
ja
mov
aam
fs
cmc
in
push
cmp
xchg
daa
das
mov
aaa
sub
cmpsl
xchg
mov
pop
ljmp
addr16
insb
pop
dec
test
dec
outsb
inc
clc
or
sub
por
daa
sub
and
push
add
cmp
pop
out
movsb
push
fidivs
mov
jge
jg
call
imul
jp
or
mov
fwait
inc
and
inc
sbb
ljmp
push
jb
roll
addr16
xlat
cmp
xchg
loopne
test
sub
inc
jb
popf
je
dec
inc
and
adc
dec
imul
inc
push
loope
or
sbb
sbb
push
xchg
jae
mov
push
adc
fmuls
ljmp
mov
mov
jl
push
push
fisubrs
mov
adc
jno
push
cmp
pop
or
and
add
jge
sub
xor
out
loope
pop
addl
mov
pop
movsl
push
insl
inc
sbb
sbbb
jp
dec
adc
push
negl
push
stc
add
mov
pop
rcll
in
sub
mov
push
sbbb
or
scas
loopne
lcall
mov
mov
lds
sbb
cmp
aam
cmpsb
lcall
jl
stc
sub
aas
sbb
mov
mov
jae
mov
aas
sub
or
leave
lret
push
push
xchg
mov
lods
mov
xor
pop
pop
dec
aad
mov
push
or
fucomip
jo
arpl
adc
push
mov
add
adc
mov
scas
in
xchg
hlt
lods
icebp
xor
xor
jae
xor
scas
mov
jge
out
inc
sbb
adc
pop
clc
lcall
adc
fdivl
arpl
add
ret
pop
and
fwait
aaa
ds
inc
cmp
inc
jle
sub
dec
shrl
insl
clc
fwait
cmp
cmp
mov
insl
dec
pop
and
jge
sbb
cmp
jecxz
dec
pop
in
pop
aas
ljmp
mov
mov
jge
cld
out
adc
adc
mov
xor
mov
xorb
cmpsl
jle
mov
mov
or
mov
xchg
add
push
add
js
jmp
cli
pop
mov
fsubl
inc
lcall
jle
adc
push
das
xchg
sub
jnp
enter
jge
mov
dec
xchg
insb
xchg
xchg
pop
pop
fs
int
adc
ret
xor
ja
xchg
mov
imul
mov
lret
mov
ret
jmp
mov
xchg
iret
xchg
scas
jmp
mov
inc
dec
adc
iret
packuswb
ss
and
call
iret
outsb
cmp
add
mov
orb
or
into
inc
add
xchg
xlat
sub
add
test
mov
jbe
in
push
movsl
cmp
pop
shlb
leave
add
and
sbb
inc
push
fsub
or
xor
test
fisttpll
jne
sbb
jmp
inc
xor
mov
in
xor
rclb
popf
sbb
mov
cld
and
scas
popa
subl
dec
movsb
fndisi(8087
mov
jb
pop
jbe
xchg
mov
mov
and
test
movsl
jnp
inc
xchg
bnd
flds
sub
pop
sbb
jno
ficompl
movsl
xor
add
repnz
jge
int3
push
push
out
cmp
push
inc
cli
fisubrl
out
arpl
icebp
mov
mov
mov
sub
sbb
pop
pusha
jno
xor
xchg
add
jmp
add
sbb
sahf
gs
xor
jb
clc
sub
push
or
jbe
cmpl
leave
push
and
jno
arpl
sub
bound
or
adc
imul
je
ds
test
xorb
xchg
test
lret
sarb
inc
cmp
mov
pop
loop
mov
add
arpl
enter
lods
xor
dec
das
std
pop
jle
bound
stos
mov
out
loope
sbb
fdivs
loopne
push
cmp
dec
jae
enter
stos
or
mov
enter
cs
dec
xchg
sbb
push
in
movsl
mov
sub
add
cmc
dec
pop
jg
mov
pop
adc
dec
adc
xor
movsb
in
xor
jecxz
xor
mov
fsubs
inc
mov
mov
mov
push
pop
std
add
fsubl
mov
cld
sbb
or
add
adc
lds
leave
rorb
and
pushf
fisubl
divb
sub
mov
jle
push
sbb
cltd
imul
outsb
in
lret
into
mov
test
jecxz
push
mov
test
cmc
and
xchg
jg
or
les
mov
xor
xor
xchg
fbstp
mov
iret
fstpt
inc
aam
jp
das
cmp
or
mov
std
hlt
jp,pt
sbb
sub
std
ss
cmp
loopne
jnp
or
jl
and
sbb
repz
fistpll
adc
shr
jmp
outsl
mov
push
incl
pop
sub
das
mov
dec
fwait
sub
sahf
mov
sub
test
mov
clc
test
add
xchg
cmc
sahf
cld
pop
fsubrp
test
inc
mov
std
in
dec
or
mov
push
adc
in
adc
or
test
jg
push
andl
fistl
adc
popa
mov
sahf
out
xchg
or
mov
sbb
cs
mov
into
dec
jns
push
mov
andb
lahf
ss
call
mov
dec
adc
jae
in
data16
push
cld
or
inc
mov
test
sub
ret
mov
push
or
loopne
jle
ss
xor
jp
aad
mov
or
mov
xor
pusha
adc
imul
sub
mov
adc
ret
sub
and
adc
pop
push
push
call
ds
in
xchg
mov
in
adc
test
adc
lahf
pop
jmp
lds
sarl
aas
dec
add
cld
cwtl
std
jp
sbb
aas
mov
jg
sub
inc
mov
mov
ja
cs
pop
call
into
pop
mov
popa
jo
int3
imul
lods
jle
bound
out
xor
adc
inc
mov
sbb
cmp
testl
dec
int
clc
fwait
leave
sbb
cwtl
jns
stc
mov
fs
or
mov
mov
mov
pop
sbb
inc
out
loop
cmpsb
adc
dec
pop
pop
stos
mov
xchg
push
repnz
sti
sbb
ret
sub
xchg
into
pusha
jmp
cmp
jle
addr16
ss
std
addr16
push
and
outsl
xchg
rorb
subl
fsubl
or
aam
push
jle
mov
sbb
sub
or
clc
xchg
in
sbb
into
mov
rolb
jmp
adc
cmp
pop
adc
mov
clc
stos
and
mov
ret
sub
cli
jbe
mov
lahf
cmp
mov
rorl
inc
mov
test
or
mov
xchg
or
and
repnz
ss
sbb
sub
sahf
ljmp
pop
adc
xchg
inc
jnp
mov
lods
data16
fisttps
ljmp
mov
arpl
popa
xor
das
aam
divb
loope
xchg
addl
iret
push
pop
xchg
loope
xchg
mov
out
fstps
insl
bound
icebp
pop
pop
aad
and
mov
into
lods
mov
adc
cs
dec
enter
sbb
incl
adc
imul
mov
in
inc
pop
aaa
pop
xchg
xchg
mov
mov
les
pushw
jns
fists
cmp
aaa
mov
aad
loopne
dec
sub
shlb
add
bound
mov
xchg
jp
sbb
xor
xchg
jns
jge
jle
aad
adc
sbb
call
test
mov
or
fistps
movsl
xor
xchg
test
dec
insl
bound
popf
dec
bound
mov
fimuls
int3
or
push
mov
cmp
ret
pop
mov
shll
dec
jp
orl
add
fidivs
rolb
sbb
push
insl
daa
jne
je
mov
pop
cld
cwtl
rcll
dec
pop
mov
fmull
inc
inc
jle
inc
sbb
or
aad
adc
out
iret
dec
loopne
dec
aaa
stos
mov
jmp
daa
lock
lds
push
push
addb
mov
xchg
lods
aaa
hlt
push
stos
int3
adc
push
je
nop
mov
stos
mov
cwtl
inc
pop
bts
push
dec
jp
lds
sbb
xchg
cwtl
adc
clc
cmp
test
iret
cmpsl
mov
dec
jns
lahf
addl
ds
cli
movq
pusha
fwait
imul
jp
shll
pop
cmp
rcrl
lcall
cmpsb
out
cmp
stos
or
cwtl
clc
icebp
repz
inc
jae
push
sub
test
or
jecxz
mov
rcl
mov
sahf
add
je
aas
dec
pop
mov
cmp
mov
push
mov
xor
mov
and
push
dec
dec
mov
sbb
or
jmp
mov
xchg
lahf
aas
mov
push
adc
mov
jne
popf
or
ret
sbb
es
push
loopne
sub
mov
cmp
sbb
test
jbe
sbb
inc
xchg
inc
mov
in
fadds
sahf
addr16
push
inc
inc
stc
and
lods
arpl
jg
xchg
dec
or
in
push
mov
mov
adc
sub
and
and
notb
inc
xchg
test
dec
stos
sbb
push
inc
cld
jae
mov
inc
xor
into
cmp
mov
sbb
out
pop
leave
movsb
inc
xchg
scas
pop
mov
push
dec
adc
mov
test
pop
mov
sbb
lea
jns
push
fimull
mov
and
inc
jl
cmp
push
je
test
lret
clc
arpl
sbb
mov
mov
out
inc
hlt
call
jnp
xchg
cltd
in
jge
xchg
outsl
cmpsl
addr16
pop
fstl
xor
ret
mov
and
cld
pop
add
pop
add
push
mov
and
in
mov
iret
das
stc
lahf
gs
jne
xchg
sub
push
xchg
lock
pop
or
sub
sbb
ja
arpl
pop
and
insl
adc
test
push
xchg
fstpt
fidivs
lods
imulb
es
int3
ss
jle
xor
xchg
inc
sub
int3
push
loop
ss
mov
insb
mov
rclb
cmp
xor
cld
in
mov
les
mov
std
mov
lock
mov
pop
cmp
fucomip
push
xchg
cmp
push
xchg
mov
push
out
mov
popf
mov
lods
pop
aaa
nop
loope
loope
out
ja
dec
mov
adc
mov
jge
push
mov
and
fdivrs
and
mov
xor
mov
dec
pop
ss
mov
out
adc
dec
mov
leave
lods
sbb
push
sbb
push
ret
xor
xor
imul
push
dec
push
std
sub
aam
inc
push
jae
inc
or
mov
mov
dec
adc
scas
into
jp
pop
cmp
std
jecxz
push
ret
and
push
mov
adc
iret
and
or
dec
aam
out
mov
mov
sahf
dec
mov
aaa
cmp
in
cmp
shlb
dec
test
fsubrs
repnz
and
mov
mov
cmp
mov
xor
cs
jnp
mul
clc
xor
es
add
mov
pop
pop
les
ss
push
push
fstpl
icebp
xchg
icebp
mov
testw
dec
shr
cmpsl
or
xor
jo
lret
xchg
mov
or
xchg
adc
mov
push
addr16
fisttpll
arpl
sbb
jbe
jnp
push
daa
aas
add
xchg
pop
jb
cld
cmp
imul
jbe
and
cmp
xchg
xchg
sbb
mov
cld
pop
xchg
les
fldenv
fwait
pop
leave
aas
push
mov
sub
scas
add
movsb
or
sbb
cmpsb
or
mov
ss
xchg
cmp
adc
mov
in
sbb
fsubs
jge
aaa
nop
pop
das
push
and
sahf
es
bound
cld
mov
adc
sub
push
mov
lcall
adc
or
fcoml
call
fwait
and
jnp
je
mov
mov
std
rcrl
mov
je
ss
fistps
outsb
or
cmp
sub
daa
xchg
in
mov
pop
sbb
loop
mov
insb
adc
call
sbb
xor
push
mov
xchg
lock
cmp
shlb
scas
popf
hlt
testb
xchg
outsb
dec
inc
sbb
jge
jne
add
jle
mov
sub
adc
adc
pop
cmp
xor
das
bound
jl
faddl
ss
cmp
or
out
movsl
aas
jb
add
repz
fwait
imul
sub
outsb
xor
lret
pop
cmp
jo
cmp
mov
aaa
push
and
stos
xchg
sub
xlat
mov
adc
dec
mov
decb
out
sbb
xchg
addr16
push
mov
push
cs
lret
sahf
cmpsl
dec
jl
ja
xlat
push
and
ja
inc
subl
inc
xlat
int
or
test
imul
int3
cmp
cli
fcomps
movsl
stos
adc
jmp
cltd
les
xchg
xor
cwtl
add
mov
pop
lahf
jge
jl
and
dec
inc
aam
inc
ret
dec
in
shlb
repnz
data16
jns
subb
ss
loopne
sarl
push
ja
fstpl
mov
rolb
shll
fucomp
inc
or
mov
fs
aad
xor
inc
jecxz
aam
adc
repnz
mov
xchg
repnz
cmp
sbb
push
adc
cltd
xchg
mov
pop
fcompl
adc
pop
push
cmp
mov
icebp
enter
fwait
or
xor
sarb
pop
je
inc
push
sub
loop
xchg
rcrl
push
movsl
push
mov
adc
sbb
or
lahf
jmp
sbb
cmp
pop
pandn
lahf
jb
push
dec
into
mov
notb
mov
xchg
dec
xchg
mov
das
and
pop
pop
xor
adcb
lds
sub
and
loop
insl
pop
mov
mov
add
loope
xchg
ljmp
mov
js
sbb
and
aam
dec
xlat
sub
incl
loope
pusha
outsb
xor
nop
push
jecxz
pop
popf
dec
jle
jle
loop
lds
and
push
push
add
mov
sarl
mov
call
add
bound
inc
pop
unpcklps
pushf
loope
nop
dec
pop
push
pop
pop
sub
cltd
sti
out
xor
add
fwait
movsl
or
add
xor
mov
sub
je
ret
jg
js
pop
movsl
and
inc
sub
cmpl
jno
repz
sub
fistl
sub
popf
cmpsb
dec
cmpsl
or
sbb
out
fdivs
out
outsl
xor
loop
stc
std
call
test
jo
pop
mov
fsubl
pop
sbb
adc
test
fsubr
clc
scas
lock
sub
cmp
adc
ret
stos
pop
sbb
sub
les
dec
jp
inc
shrl
xchg
test
pop
jno
out
or
fidivs
xchg
mov
sbb
lahf
and
mov
push
pop
aad
and
cld
mov
pop
js
outsb
sbb
sub
lcall
shrl
lret
cmpl
mov
fsubrs
repnz
xor
or
push
xor
push
jne
xchg
ret
sti
aad
fdivrl
rorb
mov
push
and
push
in
dec
ret
icebp
push
lahf
scas
mov
push
xorl
fstpl
push
sub
or
sub
mov
clc
in
mov
fisttps
inc
jb
ds
cmpsl
test
xor
pop
test
push
xchg
pop
jae
push
inc
in
jo
mov
fidivl
jg
pusha
or
pop
orl
outsl
movsl
inc
adc
cs
js
aam
push
jb
dec
jmp
dec
pusha
dec
xchg
cld
dec
fisttps
xchg
jno
pop
daa
repnz
sub
sbbl
cmp
mov
mov
xlat
out
push
jb
mov
test
inc
and
jl
and
xor
out
gs
leave
loope
pop
pushf
les
xchg
cs
mov
xchg
xchg
in
dec
loopne
test
mov
ds
jae
pop
out
in
xchg
xlat
cmp
lcall
aad
je
and
xchg
add
pop
aam
rcl
scas
aaa
loop
dec
sbb
xchg
dec
xchg
aaa
push
shrl
lret
mov
sub
arpl
mov
adc
cmp
rcll
xchg
xor
loopne
adc
out
sbb
aam
nop
sub
int3
js
sti
add
mov
inc
cmp
lcall
and
stos
out
mov
add
sub
mov
push
cmp
movsb
sbb
test
add
sub
mov
mov
xor
je
jne
icebp
in
aaa
in
ss
or
mov
mov
mov
push
bound
dec
dec
adc
aad
or
and
dec
sahf
mov
jmp
xchg
out
xchg
test
cli
mov
call
ds
ret
data16
cmp
negl
sbb
mov
call
mov
cmp
scas
aam
ljmp
mov
pop
ret
dec
sbb
jns
sbb
dec
ljmp
pop
loop
jo
stos
clc
jo
mov
lcall
mov
aaa
cs
or
xchg
jge
mov
imul
cmp
sbb
aas
shl
in
fstl
incb
insl
lea
test
fcoms
cmp
xor
lds
rorl
sahf
shr
imul
addb
push
adc
jo
ljmp
mov
sti
ss
dec
or
loopne
or
xchg
and
mov
sbb
loop
aam
or
iret
push
out
or
xchg
or
ss
pop
xor
dec
orb
aad
shlb
or
data16
dec
push
inc
sub
mov
adcb
jb
ret
popf
push
shll
dec
orl
pop
mov
jbe
and
push
add
je
stos
das
mov
xor
subb
xor
ret
mov
mov
sbb
mov
inc
sub
cmp
pop
mov
test
and
ret
popf
cmp
lcall
nop
enter
mov
sbb
in
jle
cmpl
fucomi
jmp
fstl
lret
shl
cmpsl
mov
int
les
push
mov
cmc
pop
cs
mov
push
fimuls
test
inc
mov
loopne
dec
lret
icebp
mov
and
jns
adc
jno
adc
mov
dec
sbb
push
mov
inc
xchg
shl
lock
jp
jmp
adc
adc
mov
xchg
sub
std
test
lds
pop
push
jg
mov
imul
sahf
clc
xor
mov
call
and
push
and
vmovdqa
jecxz
repz
fnstenv
shr
or
mov
adc
mov
sbb
push
aas
add
shlb
shlb
mov
inc
fdivrl
pop
cmp
mov
popf
jg
mov
movsb
xchg
sbb
inc
int
cmp
fiaddl
and
call
mov
push
aaa
into
ss
fistpl
xchg
pusha
jp
dec
in
push
mov
je
data16
bound
mov
mov
cld
sub
loope
xchg
icebp
sub
sar
dec
outsb
movb
jmp
mov
cmp
subl
inc
mov
test
inc
into
dec
xchg
push
cli
jmp
arpl
fisubl
orl
mov
push
repz
pop
add
mov
aad
lret
sbb
int3
sbb
lea
shll
and
scas
mov
ret
pushf
test
adc
cwtl
lea
sbb
fistps
std
movsb
and
xchg
repz
lods
pop
dec
adc
rcrl
shll
add
lret
daa
lods
and
cmpsl
outsb
lods
add
lea
adc
cmp
xor
iret
pop
sub
and
cltd
jnp
and
dec
dec
dec
xchg
mov
ds
out
inc
add
pop
mov
test
xor
nop
jbe
int3
fwait
stos
testb
jno
scas
adc
pushf
mov
stos
adc
into
adc
add
push
pop
jnp
jns
jbe
subl
adc
push
in
jb
pop
pusha
push
push
sub
inc
push
push
and
push
pop
jae
inc
nop
test
test
pop
pop
out
dec
out
scas
xor
push
ja
fimuls
repz
push
sub
mov
xor
pushl
dec
out
sub
loope
mov
pop
xchg
repz
les
sub
adc
mov
mov
inc
lret
dec
inc
pop
jle
into
orb
or
icebp
mov
adc
test
xchg
jb
pop
pusha
icebp
lods
in
xor
cmp
repz
sar
cmp
movsb
loopne
popl
pop
or
and
enter
or
mov
shrb
dec
call
jae
popf
mov
pop
bswap
loope
cld
cmp
leave
adc
pop
mov
dec
inc
js
push
mov
std
out
sti
orb
in
ret
adc
js
jno
mov
pop
push
fstpt
out
leave
inc
insl
popf
sub
adc
pop
cmp
push
orl
inc
ja
inc
jno
cld
pop
sti
imul
fwait
pop
or
fs
mov
mov
cltd
jle
xchg
lcall
idivb
dec
jae
in
sbb
lcall
lret
mov
arpl
xchg
mov
sbb
adc
fisubl
loop
mov
mov
subb
mov
cmp
in
pop
scas
sub
push
xchg
jno
call
arpl
gs
xor
xchg
lds
xor
cmp
lods
aaa
or
scas
fwait
mov
repnz
dec
sub
jl
inc
xchg
jo
dec
xchg
jo
in
and
pop
push
dec
test
ret
lods
xor
pop
dec
jae
lcall
xchg
adc
or
das
js
lret
je
pop
imul
lds
or
cltd
ljmp
fsincos
inc
mov
sbb
adc
add
pop
mov
stc
cmpsb
add
lods
mov
push
fadds
sub
mov
and
outsl
js
rclb
mov
mov
repz
fistpll
xorl
push
jmp
jl
sbb
ja
mov
roll
mov
loopne
gs
cwtl
aam
ret
rcl
xlat
jnp
jle,pt
fistpll
sub
bound
and
inc
pop
mov
aas
mov
inc
jg
pop
adc
xor
stos
mov
mov
out
push
jne
inc
push
sub
testl
pushf
fisubl
cmp
push
aam
cmp
add
mov
cmp
dec
mov
movsl
xor
dec
push
ds
adc
jae
aam
inc
dec
sub
loop
jl
sub
jle
jmp
jge
cwtl
dec
pushf
leave
cmp
movsb
call
popa
bound
iret
mov
adc
shll
adc
rclb
loope
lret
repz
xchg
bound
cmc
out
out
jle
movsl
push
add
scas
adc
jae
or
xor
sbbb
xchg
sub
sbb
scas
js
sbb
fistpl
dec
les
push
cmp
xor
lcall
xor
fisubl
push
cmp
test
jne
out
and
retw
scas
repnz
stos
push
push
or
mov
push
in
fcoml
adc
xor
daa
cltd
or
int
fists
scas
push
mov
mov
std
pop
pop
cmpb
mov
jecxz
pop
fisubrs
or
push
aaa
inc
jb
aad
fnstenv
stc
sbb
repz
pop
outsl
bnd
adc
test
daa
inc
mov
push
mov
mov
shlb
aam
add
js
xchg
ret
push
insb
jl
or
aad
dec
lock
dec
cmp
fbstp
ficoms
loopne
push
xor
dec
or
mov
xchg
lods
cmpsb
cmpsb
pop
inc
fmull
cmp
mov
lds
aad
dec
fsubr
fimuls
repnz
sbb
ret
xor
insw
orl
ljmp
pop
cmp
xchg
aaa
xchg
jae
aam
pushl
clc
adcb
insl
sbbl
aad
arpl
mov
add
dec
jmp
xchg
add
mov
add
pop
or
into
xor
movsl
jnp
andb
jp
popa
adc
mov
mov
mov
fstps
pop
cli
sub
push
ljmp
and
lock
ret
test
add
mov
mov
std
adc
arpl
push
mov
xor
xlat
mov
stos
push
popf
std
pop
cs
push
aas
sbb
jle
push
mov
jae
and
jecxz
and
adc
incl
repz
and
pop
push
pop
fdiv
lcall
and
jne
mov
and
sbbb
xlat
ret
or
dec
xchg
testl
or
mov
das
mov
mov
mov
shlb
ljmp
out
or
dec
xor
add
pop
dec
inc
sub
cld
ret
loope
and
test
mov
xor
shl
into
jl
cwtl
or
adc
aas
test
bound
lods
cmp
aas
cmp
aaa
fcom
mov
cmpsb
sub
mov
and
lea
or
pop
aas
lahf
test
shll
pop
cmc
or
pop
push
mov
shll
pop
mov
mov
jle
cmp
jmp
gs
mov
xor
sub
xchg
mov
inc
aad
fisubs
pop
mov
xchg
addr16
out
dec
sbb
inc
or
daa
leave
pop
mov
jle
cmp
adc
xor
leave
xchg
push
sbb
stos
or
mov
fldcw
shr
mov
push
xorb
in
movsl
ds
push
int3
repnz
ret
loop
test
cmp
gs
pop
fs
fcoms
sub
popa
insb
xchg
ja
jle
test
cmp
nop
push
jecxz
or
adc
add
cmp
xor
inc
pop
popa
cs
test
mov
pop
lock
repnz
adc
movsb
sahf
xor
mov
adc
into
js
sbb
dec
ss
mulb
outsb
out
push
xor
push
mov
mov
mov
sbb
dec
dec
xor
hlt
sub
insl
push
push
dec
ss
sbb
dec
adc
out
pop
les
popa
stos
fildl
loope
shr
outsb
fildll
xor
adc
mov
pop
rcll
or
xor
mov
in
mov
bound
les
test
jmp
sbb
or
les
xchg
faddl
leave
fadd
jne
icebp
mov
xchg
mov
cld
sub
dec
push
dec
mov
fistps
cmc
lahf
mov
hlt
mov
mov
test
or
cld
push
add
pop
push
loope,pt
cmp
xchg
shl
orb
lods
daa
push
out
xchg
and
add
bswap
mov
push
test
mov
mov
lods
out
cmp
stos
inc
jae
xor
pop
aas
stos
adc
arpl
lods
test
scas
mov
pushf
test
int3
xorb
adc
faddl
arpl
mov
lds
insl
sar
mov
jo
push
lret
push
mov
outsb
push
ljmp
pop
enter
push
or
pop
or
sub
loop
push
dec
push
dec
dec
cmp
movsb
jo
test
ljmp
xlat
mov
int3
adc
mov
xchg
leave
xor
cltd
sbb
xchg
lret
push
jle
mov
add
mov
inc
and
cmp
inc
xor
les
rcrb
mov
mov
out
and
sub
lahf
pop
dec
jae
add
push
lret
roll
imul
out
fldl
jle
lds
repz
sub
icebp
sbb
mov
repz
mov
jns
cmp
es
push
sbb
sbb
aas
out
out
popa
int3
mov
push
sti
lds
js
in
lret
call
fistl
inc
movsl
ds
xchg
icebp
int3
scas
lock
fwait
cmpb
fmul
inc
int3
mov
cmpsl
dec
xor
mov
cmpsb
in
or
mov
outsl
jecxz
out
cmp
andl
int
pusha
fsubl
xchg
add
data16
lds
out
mov
xchg
sub
xchg
inc
sub
cmp
fdivl
and
imul
pushf
ret
jno
mov
mov
mov
xchg
in
dec
fcmove
xor
sahf
cs
cmp
lods
loop
lods
bound
and
call
adc
out
ss
aam
idivl
call
adc
or
lahf
loop
test
xchg
in
cmp
and
xchg
sti
hlt
fcmovbe
or
movsl
dec
inc
iret
inc
pop
sub
cmp
leave
or
and
dec
push
fdivrl
mov
push
jp
test
mov
and
nop
cld
jg
xor
mov
cli
inc
shr
push
cmp
sub
pop
cmp
gs
add
sub
adc
inc
inc
pop
loope
outsb
xor
fidivs
cmpsl
imulb
and
and
cmpl
fadd
es
and
shrb
xlat
jg
lahf
mov
cmp
jle
cmp
mov
and
fwait
push
mov
aad
push
or
loop
shr
push
cmp
push
or
shll
sbb
jecxz
clc
push
or
xlat
pop
cmp
fninit
mulb
sahf
dec
mov
aam
pop
fstpl
into
xchg
jge
scas
repnz
xchg
out
dec
fsubl
inc
sub
pmaxsw
int3
jl
mov
ss
push
lahf
mov
in
add
shr
inc
xlat
or
xchg
leave
test
sub
shrb
sbb
test
or
stc
cmp
insl
scas
lcall
sbb
cli
sub
leave
xchg
addr16
int3
sub
push
dec
pop
push
and
push
xchg
in
xor
mov
lcall
adc
sbb
xchg
cmp
cwtd
pop
sub
cmp
pop
or
in
mov
mov
jmp
pop
into
push
aas
mov
push
fs
rol
xlat
push
adc
arpl
jno
xor
ds
cmp
jae
insb
xor
inc
das
ret
out
push
test
sub
mov
hlt
ljmp
add
sub
xor
fnsave
add
test
fstl
push
mov
push
stos
flds
lcall
or
test
inc
mov
mov
or
icebp
sahf
test
outsb
dec
das
add
test
imul
and
test
sti
push
dec
imul
into
push
popa
int
rep
mov
out
push
xchg
lret
jne
push
imul
je
pop
and
adc
sbb
repnz
adc
push
imul
cmc
jnp
repz
dec
dec
subb
cld
dec
mov
push
xchg
or
gs
mov
xchg
jbe
pop
mov
and
pusha
daa
rorb
mov
inc
pop
xchg
fcomps
or
fisubrs
mov
mov
leave
mov
and
and
sub
insb
cmp
popf
push
std
push
sub
cld
int3
das
xor
adc
xlat
nop
test
stos
jnp
mov
sub
pop
fcompl
iret
hlt
adc
dec
movsb
add
int3
push
push
fbstp
mov
push
popa
sbb
mov
xlat
repnz
lds
xorb
and
push
loop
mov
adc
cs
gs
mov
and
fldcw
les
in
into
test
push
jb
mov
mov
cmp
fwait
dec
adc
int
std
shll
jl
xor
leave
push
push
push
loopne
scas
cmc
fs
out
bound
arpl
punpckhwd
shlb
shll
sbb
loopne
and
dec
pop
or
rcrl
mov
or
in
mov
xchg
xor
iret
mov
adc
imul
sub
adc
jle
lock
popa
outsl
ret
out
and
dec
lock
lods
inc
stc
out
push
jbe
dec
add
push
and
mull
subl
ret
mov
push
inc
sti
mov
fnstenv
into
mov
pop
clc
fcomps
aam
adc
jnp
in
sahf
aaa
lds
inc
sub
insl
stc
arpl
int3
pop
push
fnstcw
mov
iret
pusha
loopne
data16
aas
xchg
cld
je
add
rorb
sub
add
and
je
xchg
push
clc
divl
inc
sbb
xor
inc
lds
mov
adc
ret
movsl
fldcw
adc
add
pop
enter
insb
inc
push
cmpsb
xor
lahf
xor
out
push
aad
ret
dec
jo
out
cmpl
loop
pop
in
pop
sub
dec
xchg
pop
mov
xor
andl
cmpb
adc
addb
jae
popf
sub
xchg
lret
lods
mov
test
sbbl
fsubrs
fs
std
subb
mov
shrl
jns
mov
fistl
cmp
jo
sbb
idivb
sbb
hlt
jp
inc
adc
mov
clc
push
lcall
jecxz
lret
mov
xor
push
bound
movsl
xor
les
cld
fwait
in
fisttpll
ret
sbb
xchg
int3
xchg
mov
mov
pop
or
and
imul
sub
ljmp
xorb
mov
dec
push
test
pop
lahf
cmpsl
mov
pop
shll
loop
or
cmpsl
je
ffreep
jno
test
xchg
iret
add
sbb
aam
cmp
scas
mov
mov
pop
push
pop
lds
insb
int
out
lcall
jbe
js
push
nop
dec
out
sbb
mov
xor
les
pop
jo
mov
mov
mov
dec
lahf
and
add
test
push
fwait
push
movsl
notb
in
and
ret
aad
mov
or
and
mov
jmp
in
scas
enter
roll
sti
push
je
arpl
pop
xchg
cmc
mov
mov
in
push
das
push
popf
xchg
push
pop
sub
stc
sti
into
lret
ror
push
into
xchg
xchg
push
popa
or
pop
sarb
pop
test
and
dec
add
sbb
movl
fsubr
jno
scas
adc
push
jnp
push
dec
arpl
mov
nop
pop
in
lods
push
add
mov
sbb
xor
dec
ja
int3
lods
or
int
mov
stos
popf
clc
sar
loop
cmp
fldt
hlt
xorl
push
cmp
sahf
mov
incb
push
insb
pop
xor
insb
stc
mov
push
add
mov
stos
pop
or
mull
or
outsb
repnz
shl
xchg
mov
sti
insb
les
insl
mov
pop
ss
adc
mov
inc
mov
es
xchg
popf
int
add
jne
js
sub
in
or
cmpsb
or
movsb
imul
xchg
test
add
ja
pop
adc
in
fwait
daa
lcall
mov
mov
cmp
out
mov
lret
ljmp
xchg
add
out
cmc
push
or
jnp
lcall
sar
lret
lea
jmp
icebp
mov
ficomps
loop
push
je
push
mov
xor
add
shll
or
mov
pop
xor
movsb
pop
inc
mov
pop
adc
sbb
sbb
call
cmpl
cmp
cmp
mov
cmp
mov
push
sub
sub
cltd
fs
jmp
push
addl
movsb
xchg
adcl
cwtl
cli
loopne
cld
fidivrl
test
fmuls
mov
mov
push
mov
jbe
dec
dec
ret
pop
mov
rcrb
daa
imul
sbb
cmp
nop
stc
xorl
imul
je
in
not
insb
outsb
mov
lret
enter
mov
movsb
jno
fidivl
push
xchg
mov
add
push
bound
dec
dec
and
mov
sbb
and
cs
jle
xchg
dec
adc
pop
es
xchg
adc
pusha
mov
subl
inc
insl
iret
addr16
insl
xor
rcrb
push
inc
mov
xchg
repz
sbb
cmc
lcall
lock
jmp
fwait
mov
adc
stc
jae
mov
mov
mov
fcmovnbe
push
dec
xlat
push
xchg
into
outsb
lds
loop
sti
test
add
mov
or
jae
insl
lock
mov
ljmp
sarl
iret
gs
mov
nop
or
in
insb
or
pop
mov
jge
outsl
fdivr
xchg
mov
mov
mov
inc
mov
ret
add
test
xchg
repz
jecxz
es
addl
scas
sbb
sbb
mov
lock
mov
xor
rcl
arpl
dec
adc
mov
xor
ficoml
andb
insb
lcall
or
xchg
sbbl
pop
xchg
pop
fsubrs
ret
sub
cli
aaa
push
jb
xor
test
or
xor
clc
gs
sbb
or
in
movsb
push
enter
inc
add
ds
lods
lods
popa
mov
and
mov
pop
shlb
sbb
jecxz
pop
push
faddl
cmpsb
arpl
insb
or
inc
aas
mov
jecxz
push
push
pusha
xchg
cmp
out
popa
cwtl
div
adc
jecxz
hlt
daa
int3
mov
inc
jae
push
pop
jmp
inc
icebp
fisubs
cmp
popa
push
movsb
add
sub
adc
jno
push
pop
sbb
jne
fcmovb
std
std
adc
nop
cmp
and
bound
and
cmp
adc
fistpll
and
mov
shrl
ficompl
mov
push
mov
and
xor
xlat
push
jb,pn
out
rcrl
sub
fimuls
xor
jp
xor
and
xor
pop
push
jle
rorl
mov
adc
sub
cltd
or
mov
int
push
lods
dec
jecxz,pt
aaa
push
mov
les
jne
jnp
and
fdivrl
add
jb
cmpsb
js
dec
das
cli
in
iret
xchg
rcrl
lcall
xor
rclb
or
xor
cmpsl
cmp
mulb
inc
int
dec
or
popf
fidivs
addb
imul
je
icebp
adc
cmp
insl
add
pextrw
sub
test
shrl
stos
and
mov
ds
les
aas
dec
pop
pop
jle
push
or
and
leave
aas
inc
cli
cmpsb
xchg
rorb
rorb
cs
imul
mov
test
mov
and
jbe
pushw
and
arpl
ds
outsl
addr16
xchg
mov
es
outsl
mov
inc
mov
aam
fwait
ljmp
loop
loop
mov
mov
shlb
and
pop
dec
stc
cmp
jp
js
push
mov
adc
cltd
mov
xchg
out
fcomps
mov
xchg
imull
cmp
daa
aas
lds
imul
cmp
sbb
push
jnp
cmc
xor
pop
push
jae
push
inc
mov
iret
stos
mov
jge
mov
addb
sbb
mov
xchg
jb
xchg
sbb
sub
jns
pop
lock
adc
jns
xor
xchg
mov
arpl
inc
js
gs
xchg
xchg
add
cmp
xchg
icebp
decb
lds
adc
push
xchg
mov
push
add
jl
arpl
adc
or
pop
cmp
push
jecxz
pop
rcll
push
cli
push
sahf
inc
cltd
fdivs
fsubl
ss
pop
sub
or
pop
sub
sbb
cld
stos
sbb
lods
mov
and
sarl
fdivl
cmc
mov
pop
leave
insl
stos
jnp
jno
mov
inc
dec
xor
out
jge
or
out
sub
pop
xlat
cmp
out
imul
xor
ss
movsb
lret
shll
jnp
mov
xor
or
xchg
mov
subl
rorl
scas
sub
mov
dec
popf
movsb
inc
cmp
mulb
enter
pop
int3
mov
stc
std
lcall
push
js
jg
jns
lret
inc
loop
dec
push
out
and
adc
sahf
push
xor
add
fs
fcmovnu
popa
loopne
fwait
lcall
dec
int3
xchg
loope
movsb
dec
lods
mov
leave
and
push
lods
ret
dec
stos
pop
jne
push
jae
jbe
cmp
xchg
push
adc
stc
les
jae
shl
mov
testl
sbb
push
push
out
and
lret
testb
loopne
push
lcall
lods
push
cltd
sub
mov
aaa
test
xor
mov
lds
popf
lcall
sub
js
cmpsl
xorl
sbb
sbb
pop
jge
sub
inc
das
push
fdivrl
scas
ftst
out
jmp
mov
mov
shlb
imul
inc
gs
mov
cmp
dec
clc
lds
xor
nop
mov
and
lret
imul
cmpsl
mov
shlb
jge
dec
dec
jbe
cltd
push
adc
fldcw
xchg
jle
or
out
test
mulb
adc
sub
test
push
or
sbbl
int3
xor
pop
inc
fcmove
jbe
dec
sbb
adc
dec
ret
rolb
sbb
mov
xchg
test
xchg
in
out
shrl
int
outsb
or
ret
mov
stos
adc
lock
jae
mov
sub
add
ds
shll
mov
xchg
push
xchg
mov
pop
push
out
mov
mov
loop
ja
cld
add
mull
sub
stos
aam
xchg
lea
gs
int3
cmpb
mov
je
mov
sbb
cmp
stc
ds
data16
dec
inc
cmp
jb
sub
and
or
fldl
add
jne
out
add
inc
inc
je
cltd
imul
inc
push
xlat
popf
and
leave
sub
jne
cltd
je
cmpsb
dec
rclb
stc
or
or
outsb
xchg
lea
xor
out
gs
fists
mov
mov
jl
test
xor
stc
mov
pop
int3
adc
jns
mov
push
jnp
loop
push
xchg
clc
push
outsl
mov
xor
jne
sub
and
inc
pop
test
xchg
push
pop
sub
es
jo
fistps
xchg
jecxz
aas
repz
push
cmp
rolb
ret
xor
mov
jae
xor
pusha
ljmp
mov
jb
lret
mov
sub
push
sbb
lock
dec
push
fsts
adc
je
jle
mov
ljmp
jp
mov
int3
push
adc
insl
pop
xchg
out
xchg
lret
sbb
jl
or
jnp
pop
xchg
daa
movsl
pop
jg
cmpsl
xchg
mov
jmp
sbb
std
xor
gs
loope
das
push
rcll
int
mov
jno
rcrb
jae
shrb
dec
mov
fwait
popa
mov
rclb
xchg
mov
jne
xor
je
loopne,pn
rcrl
and
popf
sub
std
gs
pop
imul
pop
cmp
or
loopne
jp
cmp
out
jb
lahf
jge
mov
add
xor
punpckldq
movsl
jb
xor
in
sbb
cld
pop
mov
xor
rclb
dec
inc
fmul
or
clc
rclb
movsl
jmp
movsl
pop
addl
push
scas
xor
xor
add
and
dec
pop
rcrl
movsb
out
arpl
push
mov
cmp
push
movb
cmp
les
sbb
loopne
out
sub
les
pusha
andl
out
data16
xor
hlt
pop
jp
insb
sbb
mov
adc
mov
jo
dec
and
ds
lds
push
stos
add
das
scas
pop
push
arpl
stos
sbb
sahf
xchg
inc
add
or
faddp
insb
cmp
add
es
sbb
cmp
popa
push
inc
out
inc
mov
bound
es
mov
or
adc
mov
and
pop
jl
and
add
cmp
je
pop
lcall
add
ret
mov
dec
loope
push
cld
sbb
xor
cmp
xchg
rcrb
xor
sub
push
pop
js
or
daa
cli
adc
sbb
push
fisubl
mov
dec
mov
aaa
jle
or
mov
mov
push
into
push
cmp
mov
test
mov
jle
pop
dec
push
mov
scas
in
lock
out
mov
jne
push
push
push
mov
test
rorb
pop
stos
cmpsl
daa
push
cwtl
xchg
daa
mov
push
push
jecxz
add
add
jle
into
scas
stc
fmulp
jg
push
cs
sub
xchg
jg
jge
cwtl
mov
inc
push
xchg
pushf
andb
add
shrb
cmp
lods
inc
xchg
xor
jmp
mov
push
mov
shl
lods
pop
push
icebp
xlat
or
movsl
int
rclb
inc
push
dec
dec
sbb
out
cmpsl
arpl
mov
fstpt
mov
dec
cmp
test
cld
ljmp
clc
mov
mov
jge
pop
lds
dec
std
sbb
filds
pop
inc
cld
das
mov
xor
dec
push
mov
cmp
in
in
add
pop
repnz
sbb
shlb
fsubrl
push
xor
sti
cmp
jp
push
cwtl
mov
cld
jl
mov
aad
lret
nop
fldcw
clc
pop
leave
out
lcall
push
fsubrl
jge
xlat
lock
mov
add
mov
test
or
loop
lret
dec
pop
outsb
les
int3
pushf
dec
mov
imul
jge
adc
lock
and
or
out
push
aas
xchg
leave
push
push
sub
nop
mov
dec
xchg
sbbb
pop
xchg
dec
xchg
daa
mov
movsb
xor
lods
mov
pop
out
dec
pop
push
cld
sub
orb
jmp
and
xchg
data16
xchg
mov
xor
inc
jns
mov
jmp
dec
mov
pop
mov
or
dec
and
and
jge
fsubr
sbb
cmp
mov
scas
loope
xchg
aas
add
dec
xlat
arpl
lods
jnp
dec
dec
pop
pop
cmp
leave
sub
mov
stc
aaa
inc
loop
jecxz
sub
add
cmp
ss
jge
gs
pop
bound
mov
pushf
mov
stc
bound
les
cwtl
loop
in
mov
pop
sub
mov
sub
mov
cmp
lods
adc
nop
xor
lret
shlb
and
cld
out
inc
mov
push
mov
or
pop
xchg
pushf
movsl
mov
mov
movsl
pop
mov
push
push
orb
mov
add
scas
pop
out
mov
sub
fwait
nop
push
sub
fsubl
in
jo
js
lods
movsb
xchg
icebp
fadd
mov
lea
sbb
dec
mov
arpl
cmp
cmp
mov
stc
or
inc
mov
mov
in
cli
jmp
insb
out
in
call
pop
mov
jae
mov
xchg
faddp
pop
or
adc
push
inc
or
jge
mov
leave
or
adc
stc
insl
mov
dec
mov
subb
pop
cmp
add
fcoml
push
push
sub
jg
sub
in
push
aam
jge
adc
xor
pop
orb
ja
add
push
lods
mov
xchg
adc
outsl
aas
das
xchg
fildll
gs
jnp
adc
dec
inc
xor
or
sti
and
xor
data16
fnsave
dec
inc
js
xor
jae
pop
data16
lock
test
dec
dec
cmp
dec
lea
and
adc
sbb
cmp
icebp
inc
or
aam
inc
stos
lock
ret
push
into
pop
inc
pop
fcos
push
mov
jns
or
stc
push
jb
add
lods
adc
mov
or
or
out
fsubp
add
mov
jns
push
mulb
mov
sub
inc
test
cmpsl
pop
mov
lahf
cmp
or
cmp
lods
and
inc
pop
lods
in
cs
test
xor
pop
pop
loope
hlt
lahf
cmpl
xchg
fistpll
cmp
cmpsl
push
cltd
xlat
cli
sbb
xor
sub
xor
movsl
test
jmp
repnz
fmull
scas
mov
jae
add
outsl
jmp
js
push
cmpl
loope
inc
or
adc
xor
adc
push
jmp
popa
xor
jle
rcl
test
into
fucom
jge
test
lcall
push
pop
inc
ret
mov
jmp
and
std
pop
lock
sti
inc
pusha
scas
syscall
mov
cmp
sbb
push
test
popa
ret
sahf
xchg
in
addr16
mov
popa
iret
mov
loope
shl
cld
push
jnp
in
int
jbe
aaa
push
or
fistps
inc
dec
test
push
sbb
repz
popa
jno
test
push
dec
xchg
sti
and
jecxz
inc
or
aaa
lods
rcl
nop
xchg
clc
bound
insl
mov
fistpl
mov
pop
movsl
xor
stc
aam
lret
imul
add
mov
repz
je
mov
mov
xlat
sbb
xor
or
sub
push
or
inc
nop
cmpsb
and
mov
jnp
stos
xchg
sbb
filds
adc
das
adc
push
sbb
push
sti
adc
ljmp
ss
fsts
sbb
popa
xchg
push
mov
mov
popf
je
pop
pop
pop
imul
imul
mov
inc
add
jo
push
sbb
xchg
and
rcrb
stc
out
cltd
out
shl
inc
enter
xlat
andb
dec
aad
shll
or
stos
cld
jo
mov
xlat
jmp
out
add
mov
stos
test
dec
xchg
mov
dec
inc
andb
xor
addb
lahf
jp
mov
jl
imul
ror
inc
lcall
std
data16
xor
into
stos
std
dec
pop
mov
or
pop
pop
shlb
enter
ljmp
je
sub
adc
inc
inc
xchg
adc
es
icebp
idivl
mov
inc
xchg
dec
fbstp
imul
cmp
cmp
cwtl
aam
or
orl
add
add
imul
arpl
add
push
je
xor
xor
inc
bnd
mov
cmp
mov
cmpsb
pop
push
jns
dec
jnp
xor
clc
sub
out
jp
jns
cmpsl
ret
jbe
out
and
ja
ret
jbe
imul
and
leave
or
sbb
fiadds
sbb
jmp
xchg
jge
or
mov
add
aas
mov
mov
xor
lds
js
inc
pop
xor
cld
pop
push
and
ret
sahf
out
xor
data16
int
dec
add
lea
dec
ljmp
fs
cmpsb
xor
and
lahf
sti
sbb
pop
shrb
leave
daa
rcl
mov
jp
icebp
mov
ds
loope
outsl
test
lods
out
call
add
mov
mov
ficoms
add
negl
out
jle
cltd
inc
inc
cwtl
repnz
sbb
idivb
sbb
outsl
pop
xchg
imul
push
ror
add
shlb
sub
inc
out
pop
mov
in
sbb
and
iret
push
fidivrl
jp
rolb
dec
pop
cmpsl
lahf
hlt
test
movsl
sub
sbb
and
or
loopne
repz
pop
out
shlb
out
and
xchg
sahf
arpl
add
in
cmp
aad
in
out
push
cmp
dec
icebp
inc
pop
stos
sarl
mov
dec
test
sti
or
sbb
cmc
inc
dec
sbb
addr16
and
push
xor
lock
or
pop
push
xchg
push
iret
mov
adc
cmp
mov
cmp
out
movl
mov
in
lcall
inc
xor
icebp
jns
jbe
and
into
imul
push
push
ljmp
loop
cmc
in
ja
mov
jbe
pop
mov
xor
xor
fiaddl
int3
and
xor
xchg
mov
ds
scas
push
ficoms
in
and
int3
add
jno
out
dec
and
cmc
sbb
lcall
notb
jecxz
jge
xor
cmc
inc
test
ret
lcall
push
and
fisttpll
xor
cmp
xchg
sbbl
inc
mov
xor
inc
push
mov
sub
mov
popfw
imul
inc
scas
sahf
mov
sub
mov
jmp
bound
add
mov
cli
jmp
sub
cmp
mov
imul
mov
fld
mov
push
sarb
aad
shll
dec
cmp
aam
xchg
ret
jl
ret
subb
lcall
adc
out
mov
xchg
cmp
frstor
dec
push
aad
movsl
inc
mov
sbb
mov
add
je,pn
loope
sbb
into
mov
in
add
call
and
mov
and
inc
subb
les
or
pop
adc
stos
jbe
adc
add
dec
inc
and
jecxz
shrb
mov
aad
aam
xor
cmpl
movsb
addr16
mov
rclb
int3
lret
cmpsb
pop
cs
pusha
cmp
cmp
arpl
test
adc
pop
mov
xor
push
outsb
or
mov
sub
dec
mov
pop
fildll
leave
xchg
mov
loop
sub
dec
hlt
rcl
cs
std
sub
fs
mov
sar
inc
ss
dec
dec
loop
rorl
ret
std
fldz
scas
add
sti
lahf
enter
ret
cld
or
jo
lret
sbb
mov
gs
clc
mov
sbb
leave
mov
cmpsb
mov
fisubrs
daa
lcall
fnstsw
sbbb
in
sbb
sub
mov
xchg
int
xor
bnd
xchg
shrb
mov
addr16
push
mov
addr16
xor
ficoms
push
pop
dec
loope
mov
movsl
loopne
out
mov
ljmp
sub
push
loopne
mov
push
loop
scas
out
test
into
in
ficompl
popa
xor
or
adc
xor
ret
fidivrl
mov
mov
jb
in
lcall
xor
loope
sbb
add
leave
xchg
jp
mov
fdivr
mov
or
dec
mov
mov
je
cmp
mov
ljmp
insl
rcr
ds
cmp
jne
lea
jl
leave
xchg
lods
loope
mov
or
scas
mov
push
push
test
dec
outsl
mov
inc
outsl
mov
xchg
add
pop
sahf
xchg
push
adc
call
add
jp,pt
call
movsl
jmp
fdivl
daa
and
enter
mov
cmp
cwtl
xor
cmp
cmp
hlt
pop
dec
xlat
popl
jp
sbb
movsb
ss
rol
mov
jbe
aad
stc
rcrb
imul
push
movhps
icebp
loop
and
xor
jns
mov
fldcw
xchg
pop
imul
or
xor
mov
test
sub
fcomps
rol
loop
js
std
cwtl
mov
xchg
jmp
jns
push
stc
arpl
sub
jl
fsubp
mov
mov
fisubrs
and
loop
mov
nop
out
add
sbb
test
test
or
sbb
jle
sbb
jecxz
pushf
pop
jecxz
repnz
dec
sarb
xchg
ficoms
shlb
insl
fisttpl
pusha
mov
push
movsl
stc
sbb
rep
mov
cmpl
pop
cmp
out
ja
loope
bound
jnp
ljmp
and
movsb
inc
daa
inc
loope
pusha
inc
jo
in
nop
and
pop
hlt
jl
adc
mov
jecxz
push
ds
aaa
dec
inc
adc
cmpsb
nop
movsb
inc
sbb
xchg
sbb
push
add
orl
jno
adc
push
pop
adc
bound
pusha
test
in
ret
jo
mov
jmp
mov
pop
xchg
xlat
out
cli
ljmp
cmpsb
sub
or
test
mov
insb
adc
dec
and
daa
mov
mov
pop
or
jge
push
and
cmp
jle
jne
mov
out
adc
mov
sbb
mov
inc
mov
pop
loop
jmp
add
mov
arpl
jmp
push
pop
jp
bound
enter
rorb
fcmovu
test
fisubrs
xor
shll
lcall
xlat
cmp
dec
imul
test
outsb
sub
sarl
mov
inc
lods
in
movsl
shrl
add
and
sub
xchg
repz
adc
dec
or
add
inc
pushl
mov
mov
sbb
xlat
lret
hlt
je
pop
mov
int3
je
out
pop
decb
xchg
rorl
add
outsl
hlt
outsb
mov
sub
inc
loop
sbb
insb
cltd
xchg
int3
push
inc
cmp
addb
mov
sets
cmpsb
addr16
fstp
jg
aam
jnp,pn
adc
stos
add
push
jge
repnz
jae
inc
iret
xchg
adc
ja
movl
mov
div
pop
and
clc
push
add
xchg
out
push
fwait
xchg
mov
ret
fucomp
cs
jecxz
andl
ds
mov
pusha
adc
inc
in
int3
std
popf
sub
mov
and
aad
pop
movsl
pop
ror
aam
inc
gs
push
pop
mov
push
xchg
sbb
jp
int3
cmp
add
imul
testl
dec
bound
push
xchg
insb
lahf
xchg
ja
pop
sub
push
insl
icebp
mov
test
test
loop
push
push
aaa
dec
mov
xlat
insb
jecxz
les
jmp
repz
fildl
mov
lahf
shl
ds
sbb
out
fdivs
jmp
test
xchg
cmpl
sub
sub
pop
scas
jecxz
ja
xor
stc
or
out
mov
test
pop
push
dec
cs
push
fs
push
aas
cmp
push
sbb
out
mov
jge
iret
xor
pop
notl
inc
or
test
fwait
or
mov
jb
add
xor
jbe
test
hlt
ucomiss
inc
adc
mov
std
adc
cmpsl
in
jo
xlat
out
pop
sbb
lcall
stc
mov
in
or
gs
lods
loop
mov
inc
adc
mov
mov
jns
fidivrl
pop
int3
pop
scas
xchg
in
jmp
scas
push
mov
push
inc
cli
mov
xchg
cmpsl
jae
cmp
enter
and
jbe
icebp
cmp
add
add
cmc
aam
pop
aaa
or
mov
xchg
xchg
lods
lods
divb
outsb
pusha
and
subl
jae
and
gs
popf
and
xchg
mov
andnps
icebp
cli
jl
inc
xchg
pop
inc
pop
loop
pushl
fsubrs
adc
fiadds
pop
cli
ret
mov
adc
das
lods
imul
xchg
push
js
lahf
xchg
popf
dec
rorb
sti
inc
cmp
jmp
lods
into
mov
sub
das
jp
rcl
icebp
mov
repz
daa
push
xchg
push
pop
add
and
jge
fbld
xchg
xor
notb
ljmp
xchg
shlb
fdivrl
icebp
jne
adc
adc
adcb
cwtl
je
sbb
pushf
or
inc
in
sbb
cs
add
push
mov
imul
fwait
clc
xor
xor
xchg
or
inc
jp
or
les
inc
inc
xor
jb
mov
xchg
or
enter
stos
mov
add
mov
iret
les
scas
testb
icebp
enter
xchg
push
fnstcw
data16
outsb
add
xchg
mov
shrb
push
mov
jb
sbb
std
add
in
int
rclb
hlt
push
lret
push
and
mov
pop
loop
xor
fisttpll
test
loope
clc
shl
lcall
xchg
pusha
mov
push
xchg
call
jae
mov
pop
xor
pop
adc
add
mov
outsb
push
dec
sahf
or
lcall
add
pop
ret
nop
mov
rcrl
cli
lret
mov
mov
mov
push
or
pop
roll
outsb
outsb
mov
or
test
pop
fdivr
insb
movsb
xchg
add
outsb
xchg
push
aad
aaa
scas
lock
in
cmp
nop
loop
les
test
pop
inc
hlt
mov
push
nop
or
jecxz
das
jo
fwait
js
push
out
pushf
mov
jmp
xor
lock
cmp
fisubl
pop
decb
or
inc
push
jbe
mov
lods
fadds
cmp
xchg
daa
mov
imul
mov
fcomps
pop
fs
cwtl
sbb
jbe
or
push
sbb
stos
and
jne
jb
fildl
cmp
push
imul
pop
sbb
pop
cwtl
addr16
jnp
out
mov
adc
enter
xchg
and
scas
mov
test
jecxz
mov
mov
xor
push
xchg
adc
pop
xor
inc
or
inc
shll
sarl
xor
xchg
mov
in
xchg
mov
mov
and
mov
pop
add
inc
cltd
stos
in
jno
cltd
pop
das
ret
js
jbe
ja
clc
cmp
cld
adc
jg
es
imull
cmp
jp
adc
in
mul
push
lods
pop
pop
pop
mov
mov
out
or
fcmovu
subb
add
push
int3
das
adc
dec
gs
outsl
dec
fcmovbe
out
or
outsb
jl
push
nop
lret
sbb
mov
pop
fincstp
cld
sarb
xor
xchg
movb
mov
scas
sbb
pop
into
lret
int
arpl
sbb
loopne
mov
inc
inc
mov
add
mov
out
aaa
pop
ret
jp
jne
and
adc
pop
mov
pop
roll
fs
int
js
filds
fs
lea
fs
jnp
loopne
pop
shl
ret
xchg
loop
mov
cmpsb
and
cmpsb
sbb
cs
inc
pop
and
sbb
rcrl
pop
fdivl
mov
pop
ds
mov
pop
mov
mov
mov
pop
out
mov
xchg
ret
stos
rclb
mov
mov
dec
xlat
mov
mov
fcmovnb
dec
scas
inc
dec
sbb
pop
push
lea
nop
sub
push
shlb
insb
fwait
mov
je
xchg
adc
and
icebp
insb
fsts
mov
into
or
and
jecxz
cmp
jo
sbb
in
sbb
xchg
xor
and
test
pop
rcrl
lahf
xchg
dec
mov
pop
fisubrs
mov
sbbb
sub
insl
test
out
ljmp
mov
mov
pop
cmp
adc
sarl
dec
sub
imul
sbb
sub
fsubrl
mov
cmpsb
scas
jbe
std
stc
dec
xchg
sbb
repnz
cmp
call
sub
lock
cmc
pusha
movsb
movsb
sub
es
mov
push
int
lods
push
and
add
mov
sub
lds
jnp
dec
outsl
cmpsb
lret
das
push
mov
mov
fwait
jecxz
or
push
addr16
xchg
mov
test
mov
add
xor
loopne
pop
sub
negl
sub
inc
adc
push
mov
mov
jo
loope
ja
scas
sub
enter
call
das
das
cmp
mov
fadd
outsl
push
cmc
pop
das
fs
int
cmp
dec
or
rcl
mov
fstpl
cli
movsb
adc
inc
mov
mov
cmpl
pop
loop
mov
cs
push
pop
mov
inc
cmp
mov
mov
int
cltd
jns
sub
jmp
jle
jb
iret
inc
scas
in
subb
inc
mov
rcrb
std
jno
mov
dec
sub
push
dec
fcomp
leave
ljmp
ds
pop
sbbb
sub
jge
rcrl
mov
pop
xchg
mov
pop
jg
or
out
inc
aaa
xchg
mov
aam
xchg
jo
push
dec
cmpsl
cmpb
cmp
pop
lds
xor
push
test
and
into
jge
int
loope
sub
lret
dec
call
repz
jl
cmp
mov
jnp
mov
jp
jmp
adc
xor
out
das
dec
fwait
cmp
adc
mov
pop
loope
bound
rclb
movsl
push
data16
sub
push
mov
icebp
push
shlb
repnz
not
xchg
scas
mov
pop
cs
pop
sti
repz
xor
icebp
frstor
mov
add
ret
adc
es
daa
jle
js
out
lock
dec
daa
aam
loopne
ljmp
sub
inc
or
or
adc
leave
sub
mov
mov
jno
pusha
jo
dec
stc
testb
adc
adc
movsl
push
mov
ret
ds
in
push
pop
fists
pop
mov
and
shlb
sbb
pusha
leave
and
dec
sbb
sbb
popa
lret
mov
sub
pavgb
add
sub
fists
loopne
outsb
ffree
iret
in
dec
addr16
mov
mov
or
mov
inc
push
fxch
popa
mov
and
cld
pop
subb
mov
lock
xchg
les
test
lods
add
cs
mov
sar
or
pop
les
ret
stc
mov
es
mov
xchg
inc
pop
and
call
mov
and
in
xor
mov
enter
mov
mov
or
js
push
lea
je
pop
andb
repnz
push
dec
dec
push
cmp
dec
int
je
js
fisttpl
inc
insb
scas
popa
outsl
aam
jg
pop
stos
fidivrs
adc
imulb
adc
jb
loope
lds
pop
shl
sbb
outsb
adc
pop
sbb
cmpsl
inc
sbb
jo
add
xchg
mov
aas
mov
jno
and
push
inc
lahf
push
sub
sub
and
cmp
dec
pop
xchg
imul
or
inc
jne
xchg
outsb
cmpsl
mov
xchg
fs
into
jmp
mov
mov
and
enter
mov
mov
jge
jle
or
xchg
jo
push
repz
jl
jae
scas
and
aas
dec
movsb
sub
adc
cmp
xor
cmp
mov
repz
xor
jle
cmpsb
push
inc
ds
push
loope
sbb
lahf
jae
shrl
xor
ljmp
push
into
lcall
dec
js
pop
sar
sti
sub
stos
dec
out
inc
jecxz
adc
shll
stos
test
aad
mov
add
daa
ss
push
data16
pop
movsl
lods
pop
mov
inc
int
mov
push
testb
cvtdq2ps
inc
sbb
int
clc
mov
inc
adc
leave
pusha
dec
push
jge
push
mov
popa
int
push
sub
int
popl
or
xchg
dec
in
push
push
repz
mov
sub
testl
adc
sbb
mov
xchg
xchg
fstl
mov
shlb
pop
inc
sbb
std
jbe
add
gs
mov
cwtl
divb
sub
out
insl
xlat
arpl
out
xchg
mov
fsts
test
mov
loope
cmp
test
and
push
inc
out
arpl
jle
std
add
or
aad
xchg
mov
das
or
mov
pop
or
and
stc
test
data16
lahf
xchg
mov
dec
and
xor
lcall
or
js
jl
mov
mov
sub
loope
xlat
xor
xor
test
inc
dec
movsb
sub
leave
rep
fildl
push
push
adc
cltd
nop
sub
mov
mov
sarb
lods
sarl
aaa
in
or
sbb
clc
inc
leave
ja
scas
cmp
scas
push
cmc
movsl
xchg
pop
imul
dec
or
fmul
das
fiadds
jo
xor
data16
mov
ret
or
pusha
scas
paddsw
fiadds
incl
out
dec
push
xchg
xchg
cs
sahf
xchg
scas
lahf
pop
loope
mov
adc
mov
inc
hlt
sbb
dec
ljmp
push
cmp
jmp
xor
and
pushf
cmpsl
adc
mov
jecxz
and
movsb
sub
add
adc
or
lret
xor
or
xor
sti
in
inc
mov
cwtl
mov
ret
add
jecxz
mov
push
das
cld
fcoms
cmc
mov
sub
shl
cmp
in
mov
clc
mov
jne
inc
outsl
add
cmp
sbb
xchg
sub
pop
xchg
xchg
sarl
pop
jle
ja
lret
inc
push
imul
das
aam
fwait
lods
loop
mov
pop
push
out
push
and
inc
inc
stos
loope
inc
clc
ja
je
lret
push
sbb
rcl
enter
orl
inc
loopne
add
loopne
sub
divb
add
add
fsubrl
dec
inc
and
sbb
sbb
dec
push
adc
push
or
mov
lods
cs
jge
icebp
inc
or
push
dec
cmc
inc
pop
or
sub
or
pushf
and
jb
cmp
jg
loope
iret
pop
cmp
fisttpl
jae
or
jmp
xlat
in
fs
jbe
fcomps
mov
mov
mov
lods
pop
call
or
push
and
mov
pop
jmp
das
xchg
jmp
les
jle
jno
dec
xchg
arpl
mov
and
inc
lcall
and
fdivl
fisubrs
sahf
ja
add
imul
xchg
and
clc
jmp
test
jae
jb
lret
filds
mov
sbb
ljmp
scas
out
inc
int3
mov
pop
mov
add
in
jae
push
cmp
bound
inc
jl
fsubs
das
pop
je
dec
cmp
jecxz
lock
pop
arpl
mov
jb
lds
cmp
mov
in
leave
pop
inc
pop
lods
push
mov
pop
xchg
fdivrs
ret
jo
test
mov
orb
cmp
mov
inc
test
mov
sub
inc
jno
movsb
sbb
cltd
and
sub
leave
test
sub
sub
push
out
push
xor
xchg
dec
mov
sbb
pushf
pop
pop
insb
call
push
je
xor
ret
jmp
lds
leave
xchg
or
xor
adc
add
pop
push
sub
and
add
pop
addb
js
xchg
out
outsl
inc
shrb
cld
mov
cwtl
iret
mov
xchg
insb
in
cmp
pushf
lret
jno
pop
aad
sub
movsb
push
cli
fldlg2
xlat
inc
jge
movsb
js
xorl
cmp
mov
mov
mov
int
jns
lcall
hlt
ds
jbe,pn
add
or
cvttps2pi
push
push
lahf
inc
jnp
add
pop
jecxz
gs
lock
incl
xor
push
mov
and
mov
nop
mov
jo
or
inc
push
insb
lea
lret
adc
sbb
out
aam
mov
les
ja
inc
pushf
insb
pop
shr
mov
jbe
icebp
cmpb
lret
lods
fbstp
mov
in
mov
and
push
out
pop
push
sub
clc
mov
sbb
clc
sbb
dec
stc
inc
cltd
lret
adc
xchg
into
add
xor
je
insl
jno
data16
iret
sbb
in
jl
sub
mov
int3
mov
jne
loop
xor
testl
int3
add
jo
jmp
mov
cmc
or
push
push
in
xor
ret
adc
or
fisubrs
inc
and
inc
mov
mov
bound
jle
ds
bound
cmp
push
sub
adc
adc
pop
hlt
and
dec
mov
pop
stos
nop
lea
xor
jb
enter
pop
adc
data16
rcll
dec
mov
test
add
push
mov
pop
aaa
aas
imull
je
pushf
push
jmp
sub
pop
xor
retw
jg
fstl
mov
or
fistpll
xchg
rcrl
sub
sbb
mov
mov
sub
pop
add
in
xor
xchg
in
push
iret
in
jns
adc
jl
das
out
push
arpl
sti
mov
insl
ja
rorb
flds
or
mov
mov
cmc
stos
sub
out
aam
lods
std
push
gs
inc
cli
pop
imul
mov
or
out
test
mov
repnz
outsb
adc
arpl
out
jne
jge
jg
sbb
int
xchg
xor
test
pop
mov
cli
sub
add
repnz
inc
addr16
mov
into
aad
sahf
pop
push
xchg
lcall
cs
sbb
fwait
in
adc
or
movsb
mov
xor
movsb
inc
jnp
inc
loopne
hlt
lods
sbb
rorb
les
nop
mov
xor
sub
dec
or
lret
mov
sub
shlb
in
dec
fmul
mov
js
xchg
bound
mov
and
pop
fstp
in
xor
mov
mov
xchg
pop
fimuls
je
mov
and
mov
stos
fisttpl
enter
push
and
ja
mov
mov
or
sub
ret
mov
adc
and
les
add
loop
insl
pop
push
xchg
out
pusha
icebp
sti
mov
pop
push
pop
or
scas
mov
jge
sbb
or
mov
or
outsb
mov
int3
rorl
test
in
jo
mov
xor
push
fisttpll
imul
fwait
adc
call
xor
enter
pop
or
movb
shll
push
fwait
arpl
cmc
cmp
bnd
insl
xchg
icebp
pop
cmc
pop
bound
add
bound
scas
js
nop
or
test
es
and
xchg
mov
lock
lret
cmpsb
jge
add
xchg
rcr
inc
adc
adc
fs
fimull
subb
xor
mov
test
sbb
xchg
lds
dec
int
pop
xchg
frstor
and
das
pop
lea
std
sub
lock
adc
addr16
stc
push
fs
in
das
cmpsl
sar
push
xchg
jno
push
jge
cld
loop
dec
mov
push
pop
popa
pusha
fwait
pop
arpl
mov
mov
nop
cli
jns
pmaxsw
aam
jae
loope
dec
jmp
or
pop
mov
cltd
xor
mov
popf
pusha
mov
lods
mov
cmpsb
jbe
aam
iret
ret
push
jns
xor
push
and
and
in
sub
scas
into
add
mov
es
cs
xchg
aaa
sbb
xor
mov
aam
ljmp
push
fisttpll
pop
dec
in
stc
mov
cs
pop
out
cmp
arpl
push
adc
xor
jne
lods
cmpsl
or
jp
cmp
lret
cmp
jbe
ds
xchg
xchg
stos
loope
lcall
pop
int3
dec
subl
sbb
add
nop
jp
jecxz
shrl
and
fadds
les
les
ficoms
sub
xchg
sub
sbb
xchg
adc
in
jno
jmp
and
dec
mov
inc
into
ds
shlb
jl
and
dec
push
outsl
sbb
roll
js
or
fsts
mov
outsl
addr16
cmp
add
cmpsl
cmpsl
or
cmp
sub
rdtsc
daa
movsb
sub
fnsave
in
dec
sub
lahf
adc
sti
mov
push
xchg
jne
sbb
sub
pop
lret
mul
loopne
pop
or
je
cmpl
pushf
dec
sbb
ret
inc
movsl
js
mov
xchg
std
jno
out
dec
fistps
sbb
pop
jo
push
sti
test
sarb
inc
add
int
data16
lods
aam
fcmovu
dec
aam
mov
rcrb
and
leave
in
outsl
stc
pop
ds
xor
or
stc
mov
mov
into
dec
daa
jl
adc
vcmpps
push
mov
cvtps2pd
mov
dec
jns
sub
or
mov
sbb
mov
xchg
inc
aas
lds
fnstenv
icebp
fdivl
clc
dec
add
fiadds
push
sbb
sub
ja
rorl
sahf
lahf
jb
jae
push
mov
jmp
pop
sub
dec
ds
mov
xor
sbb
xor
or
hlt
roll
dec
insb
jmp
xchg
adc
iret
cld
mov
adc
shlb
out
or
nop
xchg
mov
xor
cmp
pop
push
mov
xchg
popa
mov
popf
push
cltd
mov
sbb
jle
jle
nop
adc
test
push
aas
sbb
sahf
std
cmpsb
jae
popf
cld
push
int3
cmp
mov
movsb
mov
cld
insl
or
mov
adc
inc
sar
dec
xor
push
enter
rcll
xlat
add
fsub
mov
out
or
aas
mov
cmc
xor
xor
add
stos
pop
pop
fmulp
mov
sub
js
push
rorl
sarb
adc
xlat
mov
sub
addr16
adc
fiadds
test
rcrb
xor
push
lock
and
imul
inc
outsb
cld
outsl
rcrb
into
mov
mov
out
fsts
enter
push
jmp
inc
arpl
sub
xor
xor
mov
dec
test
lcall
xor
mov
cmpsb
aam
movb
xor
lods
push
roll
shr
mov
cmc
mov
or
add
aaa
fldl
ror
cld
ficoms
dec
push
push
fcoms
fucomp
in
mov
test
push
inc
and
jo
mov
push
cmp
dec
mov
data16
ret
and
mov
sbb
and
rorl
inc
mov
and
add
dec
rcll
xchg
pop
lret
cmpsl
into
jb
pop
and
leave
xchg
add
mov
cli
and
mov
mov
push
scas
mov
add
pop
dec
cs
das
jp
cmp
js
jno
mov
mov
mov
mov
shll
fcoml
aam
cmp
and
out
cltd
cmpsl
mov
and
hlt
add
jbe
rcll
test
pop
shrb
mov
fldenv
push
ljmp
fsubrp
dec
prefetch
xchg
imul
pop
and
jo
or
jmp
jnp
scas
popf
mov
imul
popf
jecxz
shll
mov
call
dec
dec
mov
xchg
cmc
jae
flds
js
addr16
pop
addb
in
in
flds
pop
xor
jno
idiv
jecxz
test
stos
xchg
and
ja
mov
ficoms
into
bound
push
jp
daa
jae
sbb
mov
and
out
lods
ljmp
push
das
loopne
push
xorl
and
lret
inc
cmpsl
test
pop
pop
repz
xchg
xor
xchg
lods
dec
adc
xor
xor
arpl
xchg
lea
and
jmp
repnz
hlt
cmp
stc
out
xor
in
and
sub
mov
push
adc
dec
icebp
loop
adc
out
clc
leave
fstpl
pop
inc
inc
push
aas
lds
movsb
scas
insb
cmp
incl
xor
jns
stc
adc
dec
add
js
cltd
les
out
les
pop
add
jb
mov
jle
aad
loop
cmp
stos
adc
sub
pushf
xchg
shrb
or
cwtl
lods
clc
outsl
or
in
imul
or
fisubs
sbb
sub
sahf
adc
cmp
jp
pop
xchg
rorb
fwait
add
and
rol
roll
or
jmp
mov
movsl
fisttps
cmp
ss
shl
fcmovnbe
outsl
outsl
lds
in
mov
sar
or
cltd
mov
xor
mov
cltd
jnp
xchg
sub
sbb
push
arpl
and
xchg
lods
sbb
and
stos
adc
push
cmp
lds
add
sbb
fstp
inc
sub
xor
and
pop
ja
rclb
mov
lahf
lds
data16
push
cmp
insl
lods
mov
repnz
std
out
test
jg
rolb
pop
outsb
ret
jmp
and
adc
int3
es
sbb
les
add
jns
scas
xor
sarl
hlt
and
aam
or
pop
imul
flds
jmp
movsl
lods
fwait
xchg
xor
inc
sub
mov
out
in
and
pop
loop,pn
dec
push
pop
sub
sub
dec
lods
cmpsl
hlt
and
inc
mov
sarl
xchg
xchg
ret
mov
pop
dec
int3
test
xor
add
dec
inc
sub
ret
pop
sub
and
push
inc
or
inc
fs
xchg
movsb
mov
insl
mov
les
and
adc
add
icebp
cmp
inc
adcl
loop
and
sar
shll
mov
fs
cmpsb
punpckhwd
out
in
adc
in
mov
mov
cld
and
dec
mov
xor
out
in
dec
fldcw
cmp
test
push
mov
arpl
movb
jecxz
icebp
jo
dec
pop
cmpsl
movsb
enter
push
shl
xchg
add
jb
data16
pop
jbe
push
arpl
stos
in
mov
pop
lods
mov
dec
push
outsl
mov
inc
faddl
enter
inc
push
xchg
push
inc
jmp
test
repnz
cmp
in
inc
lods
mov
inc
pop
adc
punpckldq
xor
adc
faddl
dec
testb
cmp
gs
loopne
mull
imul
pop
mov
sub
add
in
cmc
sbb
imul
scas
jle
insb
dec
fnstsw
out
sbb
xchg
push
mov
fwait
push
push
imul
xor
cmpsb
cmp
add
ret
js
fmuls
loop
popl
mov
rcr
movsl
adc
inc
jo
in
pop
cmp
mov
dec
xchg
movsl
aas
sub
lret
dec
inc
lret
mov
ja
adc
sbb
jo
gs
mov
ret
pop
jle
insl
pop
lea
sub
pop
hlt
aad
or
mov
test
sbb
push
or
mov
push
push
ds
les
xchg
les
insl
bound
jge
jmp
sti
dec
xchg
sub
shlb
mov
test
test
jbe
pop
scas
mov
adc
mov
pusha
jae
into
add
fldl
in
negl
rorl
jo
fmull
push
mov
push
call
mov
push
gs
mov
data16
jmp
shll
adc
push
mov
movl
dec
cmp
xchg
cmp
shlb
leave
es
xor
clc
out
iret
inc
mov
sub
mov
xchg
repnz
stos
sub
lock
ret
movb
jo
fcompl
sub
nop
lcall
pusha
mov
rorl
gs
lods
loope
nop
push
clc
push
fidivs
sub
mov
mov
dec
and
mov
adc
dec
mov
popa
or
js
fsubl
jnp
mov
xor
push
sub
in
cmp
add
pop
cmpb
sub
ds
xchg
adc
leave
fmuls
loopne
pop
xlat
push
jae
mov
pop
mov
jl
ljmp
ja
out
mov
cmovo
mov
int3
pop
pusha
stos
fs
das
inc
jae
lods
jae
insl
sub
mov
sbb
mov
inc
or
push
mov
mov
mov
jnp
adc
xor
std
iret
orl
mov
pop
pop
pop
jo
adc
stos
or
and
lahf
mov
mov
dec
outsl
es
fisttpll
ja
js
cmpsb
cmpsb
jmp
andl
xor
dec
inc
aad
into
test
leave
les
cs
dec
xchg
cmp
jp
imulb
cmpsl
cli
inc
shl
cmc
cs
repnz
cmp
repz
mov
aaa
mov
pop
les
in
fiadds
lret
mov
enter
xchg
enter
mov
jl
aaa
in
adc
xor
aad
aas
mov
andb
pop
push
add
fisttpll
outsb
call
push
sub
arpl
inc
or
es
push
xchg
xchg
in
cmovl
cmpsb
rcrl
adc
andb
int3
cmp
adc
push
or
aas
dec
push
scas
dec
mov
mov
mov
idiv
lcall
test
int3
test
shlb
scas
sbb
or
shl
cwtl
sbb
mov
mov
sar
test
ds
aam
addb
xchg
divl
and
xchg
mov
pop
adc
xorb
rcl
dec
cmpl
inc
mov
mov
sti
sti
out
mov
aam
loopne
imul
inc
xchg
push
cltd
mov
push
cmp
sbb
cmpsb
mov
or
add
xlat
inc
jo
or
mov
js
mov
push
gs
cmp
clc
test
cmp
loop
fnstenv
movb
push
or
jmp
mov
fsubrs
push
and
mov
xchg
arpl
daa
adc
sub
xchg
cmpsb
popa
push
jl
fwait
xchg
mov
jb
hlt
ret
sub
cmp
in
out
xchg
nop
dec
dec
pusha
pop
cmp
out
and
push
lahf
fstps
adc
lds
jmp
inc
push
ja
repz
add
clc
call
or
jge
sub
mov
test
mov
push
mov
sbb
xchg
in
idivl
lahf
in
pop
inc
inc
adc
or
cmp
cs
jne
push
out
loopne
inc
cli
out
test
sbb
cmp
and
pusha
nop
pop
imul
loope
push
or
jge
addb
sahf
pop
or
movb
test
dec
jno
mov
cli
dec
mov
in
jb
mov
sbb
jp
pop
mov
pop
bound
scas
mov
cmpsb
mov
fbstp
xchg
xchg
cmp
xchg
ljmp
and
cmp
js
xchg
mov
in
pushf
and
push
inc
mov
mov
cmpsb
cmp
call
dec
xor
rcll
mov
sub
inc
push
push
cmpsb
insb
pop
data16
pop
repnz
sbb
in
imull
int
mov
jmp
sbb
pop
ds
scas
das
jge
pop
fwait
and
sarb
push
pusha
stos
push
dec
dec
mov
in
gs
rorb
or
mov
test
fdivs
fnstenv
ud2
pop
jnp
js
xchg
dec
jo
sub
stos
loopne
pushl
repz
jne
jb
mov
push
xlat
mov
int
arpl
jb
fs
xchg
adc
or
xor
pushf
jecxz
jne
pop
in
and
lret
les
jg
data16
and
and
fwait
push
shl
pop
xchg
and
dec
sbb
repnz
fistpll
push
lcall
add
add
dec
adc
jbe
cmp
popf
pop
mov
dec
fs
push
push
adc
add
ds
fildl
mov
les
push
pop
push
inc
pusha
lea
inc
cmp
xchg
inc
mov
cmp
imull
idivl
ror
mov
je
cs
jae
push
dec
inc
sub
je
rcr
outsb
sbb
repz
adc
xor
test
ss
shr
push
je
mov
mov
out
mov
adc
test
imul
scas
push
pop
cli
dec
icebp
js
cmp
sbbl
push
sub
push
imul
test
fdivl
dec
dec
inc
ds
aad
xchg
pop
int3
mov
xor
jmp
mov
fidivrs
xchg
or
mov
mov
push
addb
je
ret
xchg
xlat
jecxz
pop
ret
imul
xor
js
adc
pop
pop
mov
nop
xlat
sub
dec
pop
in
sar
popa
jge
int
popf
in
fwait
mov
mov
mov
fwait
mov
hlt
lds
push
cmp
bound
mov
pop
or
pop
adc
pop
push
nop
cmpsl
and
xor
sbb
mov
pop
mov
jbe
jmp
outsl
lahf
mov
cli
sbbb
sub
imul
inc
lds
ret
xchg
mov
dec
jl
test
icebp
add
mov
push
inc
cmc
dec
sbb
pusha
leave
mov
jp
ss
jmp
dec
pop
imul
pop
jo
hlt
fidivs
loope
dec
push
mov
data16
jecxz
xor
bound
pop
divb
adc
mov
adc
pop
mov
addr16
mov
mov
pop
inc
pop
loop
fldenv
inc
push
add
aas
loop,pn
shr
ffreep
dec
dec
cmp
loope
pop
pop
sbb
aam
add
mov
in
push
lds
rolb
loope
clc
xor
ja
lods
or
mov
pop
xchg
xor
iret
jmp
mov
jp
inc
fbld
jnp
leave
into
inc
and
sbb
pop
xor
jle
mov
xchg
xchg
jne
aam
push
dec
jmp
dec
stc
mov
mov
fisubs
int3
jno
sub
test
cmp
mov
jb
push
push
mov
dec
popa
lds
adc
xor
outsb
xchg
call
shll
add
push
in
pop
aas
imul
add
aaa
mov
fs
shr
cmp
push
loope
bound
push
xor
dec
mov
mov
lea
jl
scas
inc
movsl
pop
stc
push
jo
sbb
pop
adcb
fiadds
mov
dec
mov
into
xchg
dec
movsl
js
dec
jl
out
addl
insl
or
loop
cmp
push
stos
pop
cmp
fwait
js
jg
cwtl
mov
out
sti
fistpl
or
sub
jecxz
pop
les
out
lods
insl
pop
and
dec
push
mov
movsl
mov
cmove
push
sbb
xor
jno
cld
and
mov
and
hlt
out
jno
push
stos
xchg
rcrb
mov
loop
inc
je
andl
push
jge
mov
ljmp
je
mov
lret
cmp
pop
gs
mov
fists
je
fwait
mov
out
cmc
xchg
je
and
mov
mov
daa
jmp
adc
std
and
imul
fmul
fwait
push
jp
jae
and
cltd
nop
push
mov
adc
push
mov
inc
icebp
jmp
movsb
push
add
mov
pop
fdivrs
inc
push
pop
pop
pop
aad
add
xchg
in
pop
xchg
loope
rolb
out
mov
jge
mov
push
shlb
das
pop
fucom
test
repz
and
outsb
jge
rcll
jp
dec
xchg
das
movsb
adc
sub
and
insl
stos
pop
dec
push
jne
pop
push
inc
mov
ret
dec
push
lahf
mov
jns
sub
inc
jae
mov
dec
and
stos
mov
xchg
or
pop
data16
and
add
mov
inc
ja
jmp
or
cmpsb
sbb
mov
fsubr
shr
mov
xor
shl
lds
mov
sub
lret
loop
xchg
push
cmp
leave
cmp
and
mov
push
inc
sbb
push
adc
mov
pop
in
bound
clc
std
dec
xchg
fbld
sahf
hlt
cmp
lds
repz
sbb
jbe
xor
fistpll
adc
fiadds
sub
lahf
mov
sbb
jnp
pop
das
xor
adc
mov
sbb
cmp
aaa
sahf
pop
adc
jnp
xchg
mov
daa
cld
vpsubsb
scas
fdiv
in
xchg
movsb
push
jae
and
jns
pop
imul
inc
jecxz
aas
loop
add
xlat
cld
movsl
push
enter
out
or
dec
sbb
aaa
jno
mov
jb
iret
repnz
jp
fnsave
sub
jne
pop
adc
shlb
stc
loopne
adc
pop
scas
lret
jnp
pop
jge
and
cli
mov
dec
fimull
pusha
dec
mov
call
fucomi
loop
aas
aaa
testb
test
mov
arpl
in
int
fs
adc
pop
xchg
jecxz
pop
les
lds
pop
mov
mov
loop
mov
adc
repz
jbe
cmpb
xor
adc
or
dec
rolb
push
addb
xor
push
outsl
lea
fcompl
xchg
in
lea
sti
fstl
insb
ljmp
pop
stc
push
rcrl
sub
daa
adc
mov
mov
repz
adcl
in
and
cmpb
inc
ret
int
les
insl
in
test
inc
movsb
fwait
in
addr16
js
xchg
adc
or
xchg
fists
loopne
cmp
scas
mov
aam
lret
push
dec
sub
cmpsl
dec
sbb
push
add
push
mov
or
add
aad
adc
mov
cmp
outsb
js
popf
clc
xchg
fs
push
arpl
mov
cld
mov
jmp
fimull
xchg
cmpsb
fdivrs
inc
add
adc
outsl
mov
rcrl
add
cmc
ja
adc
fstpt
jl
sub
or
stos
lcall
stos
lea
inc
loopne
into
data16
nop
out
fsubs
lret
jnp
or
in
fisttps
adc
jmp
fdivrl
mov
test
sahf
cmp
mov
lods
sbbl
shlb
or
jno
enter
fs
pop
jne
push
or
inc
jns
mov
ja
xor
es
push
and
push
insl
lock
pop
dec
inc
push
movsl
jne,pn
and
pop
or
adc
test
mov
mov
jmp
ficoml
jl
es
push
daa
lods
pop
iret
adc
add
mov
push
sbb
insb
add
push
jne
inc
hlt
imul
jge
loope
jns
pop
cltd
mov
mov
pushf
repz
mov
dec
mov
in
fwait
loopne
push
nop
sub
in
xlat
imul
mov
cmp
jle
jo
xchg
rcl
pop
and
sbb
clc
pop
lea
lret
and
call
xchg
or
add
adc
and
jg
pop
jbe
jbe
jp
jb
cmp
call
roll
sub
in
mov
mov
repz
dec
repnz
in
mov
push
gs
push
dec
mov
xorl
mov
push
dec
test
js
sbb
xchg
or
fdivrl
loop
shr
aas
addl
jmp
cs
in
jge
test
xchg
pop
rolb
cmp
xor
inc
stos
dec
xlat
xchg
xor
pop
ds
pop
dec
call
adc
xor
dec
call
stos
jmp
sar
xlat
cmp
pop
addr16
jno
inc
xchg
adc
sub
mov
add
jmp
adc
cltd
xor
and
dec
shrl
stc
loopne
and
add
nop
adc
or
rorl
dec
jmp
pop
jg
xor
adc
sub
jbe
cmpsb
push
xchg
dec
adc
mov
cmp
arpl
pop
imul
mov
mov
stc
mov
pusha
xor
inc
mov
xor
or
push
fldl
jns
js
inc
mov
and
xor
sub
das
jle
xchg
je
or
je
xor
push
add
or
add
pop
data16
outsl
xchg
mov
sbb
or
sti
pop
in
das
bnd
cs
fisubrl
mov
xor
lea
sahf
scas
xchg
dec
call
sahf
lret
test
gs
pop
or
mov
xorl
jp
adc
cwtl
mov
iret
cmpsl
jl
pop
aaa
cmc
ret
mov
mov
push
sub
dec
call
push
inc
inc
or
adcb
lea
mov
push
mov
and
test
cmp
mov
stc
mov
mov
push
outsl
dec
pushf
in
ss
xchg
add
push
sub
adc
jecxz
cli
int3
jl
inc
lcall
sub
pop
lds
dec
adc
sub
stos
outsb
jp
dec
push
cmpsb
mov
push
imul
xor
sbb
inc
add
push
sbb
pop
sbbl
setl
xor
mov
push
int3
cwtl
mov
incl
hlt
ror
rcrl
arpl
fcmove
cmp
inc
adc
out
add
shr
rolb
je
or
sub
js
out
cmpsl
xor
push
add
push
in
cltd
inc
adc
add
stc
xchg
sub
rcl
mov
push
or
nop
mov
sbb
mov
dec
xchg
adc
sbb
cmpsl
mov
bound
cmp
cwtl
pop
loope
push
lea
cli
push
fdivs
fwait
lcall
mov
mov
mov
add
ret
outsl
sti
cmp
mov
imul
pusha
insb
js
sarb
jne
mov
mov
adc
mov
lods
xlat
pop
jmp
and
movsb
mov
icebp
add
mov
cwtl
je
cmp
jo
stc
sti
mov
pop
movsb
scas
pop
sub
inc
scas
int
xchg
push
sahf
roll
sub
aad
add
jb
and
cmp
push
rclb
dec
sbb
dec
in
push
aas
mov
jnp
xchg
lods
loopne
add
jl
std
ret
lods
jne
das
inc
add
mov
leave
push
inc
lret
lret
call
dec
lret
loope
mov
iret
lds
cmp
aad
pusha
or
push
mov
faddp
ds
mov
or
out
sub
cld
sub
mov
and
and
fsubl
or
das
adc
movsl
scas
lahf
shll
push
test
fcom
xchg
push
jp
repz
adc
xchg
shl
inc
int
je
enter
mov
nop
andl
push
jbe
icebp
out
xchg
dec
js
fstl
pusha
lahf
cwtl
xchg
mov
lahf
popf
mov
fcom
cmp
adc
and
pop
xchg
push
cld
rcrb
mov
inc
push
inc
cmp
sahf
inc
push
sbb
insl
fnstcw
adc
dec
rclb
sbb
jge
sbb
mov
and
jno
cltd
outsl
sub
ja
dec
add
repz
lds
roll
fcmovbe
pop
push
mov
and
cwtl
sbb
adcb
ret
xor
addr16
mov
in
loop
xor
add
imul
arpl
cmpl
and
dec
loop
xor
shrb
mov
and
imul
pushf
subl
rorb
dec
sub
push
in
or
popa
js
xor
pop
mov
xor
cmp
stc
and
sub
ret
xorl
cltd
cmp
daa
pop
scas
daa
jnp
icebp
or
sbb
je
xchg
loope
inc
lahf
and
xchg
cmpsl
pop
out
outsb
loope
xchg
insl
cmp
loop
mov
mov
cmc
jno
push
test
hlt
and
cmp
call
push
ret
xchg
push
jae
adc
jne
jl
repz
jg
mull
add
push
mov
xorb
xor
xor
movsl
cmp
push
out
push
xchg
out
out
jge
in
fisubs
test
pop
pop
popa
and
mov
dec
fsubrl
mov
jnp
cmp
sbb
push
fcoml
or
mov
sbb
lock
push
inc
sbb
mov
mov
xor
loop
in
fisttpl
xor
repz
mov
adc
dec
mov
add
adc
out
mov
shlb
aaa
xor
sub
mov
enter
shll
sub
and
push
testl
out
pop
dec
mov
jno
test
fcmovu
jae
push
mov
pop
mov
adc
cli
sbbl
cltd
jnp
roll
aam
and
out
push
jno
and
mov
out
je
xchg
outsl
pop
fdivp
sar
inc
sub
aas
mov
adc
lods
dec
lret
mov
cltd
inc
fmuls
call
mov
mov
and
mov
add
or
dec
push
ret
pop
add
stc
scas
scas
mov
adc
fwait
movsl
aas
xor
xorb
scas
in
jmp
fmull
aas
pop
ja
lds
hlt
into
movsl
mov
and
dec
xchg
jp
ja
std
aaa
jl
jns
jmp
shll
fs
mov
nop
aaa
jge
icebp
mov
sub
mov
repnz
popf
in
movsb
aas
scas
adc
pop
outsb
mov
or
cld
shlb
scas
cmpsb
mov
outsb
inc
pop
rcrb
mov
call
add
add
fisubl
ret
daa
and
int3
mov
cwtl
mov
xchg
xor
arpl
popa
cs
aaa
fisubrl
dec
movsb
sbbb
jle
sub
movsb
imul
cmp
add
jge
mul
jecxz
in
decl
inc
mov
add
add
ficoms
dec
incb
and
sub
pop
adc
loopne
push
clc
outsl
inc
pop
inc
lock
sbb
jle
sub
sbb
stc
pop
dec
xchg
popa
mov
mov
dec
inc
mov
xchg
mov
or
pop
shl
mov
outsb
test
mov
imul
push
jns
inc
mov
or
jne
out
ret
es
xor
insb
fadds
gs
cmpsl
pop
out
frstor
sbb
sahf
xchg
cmc
mov
movsl
in
sbb
push
or
daa
in
dec
nop
or
xchg
push
cmpsl
mov
inc
jae
sbb
fidivrs
popf
mov
sbb
shll
inc
gs
sbb
fildl
jecxz
mov
enter
adc
or
xchg
inc
in
pop
paddq
add
test
inc
out
mov
cmp
mov
mov
jecxz
push
aaa
inc
and
push
je
clc
xchg
pop
nop
sbb
jae
xchg
pop
jp
push
cmpsl
cmp
gs
pop
imul
mov
dec
dec
shrl
clc
jae
mov
and
lea
dec
clc
cmc
lret
jo
std
out
push
pop
inc
out
pop
lcall
sbb
jp
ljmp
pop
jns
inc
ret
xchg
sub
mov
push
ljmp
mov
aas
xlat
pop
push
pop
mov
adc
xor
jb
ljmp
or
mov
mov
push
dec
out
mov
mov
mov
pop
mov
jno
mov
inc
xchg
repz
xchg
cmp
jnp
sub
fistl
mov
pop
ret
and
loopne
push
orl
sub
xlat
in
sarl
int3
mov
cld
pop
lods
dec
mov
jecxz
sbb
push
mov
jo
xchg
enter
sbb
mov
pop
mov
lock
shll
cmc
stos
mov
sub
adc
into
inc
cmc
mov
cmp
pop
dec
data16
imul
dec
loopne
inc
imul
adc
jbe
or
testl
insb
aad
dec
xchg
mov
loope
xchg
mov
dec
sub
shll
popa
es
addl
push
mov
movsb
ljmp
testb
mov
pusha
sub
mov
shl
call
and
popa
mov
push
shrb
ja
pop
shrl
xchg
in
test
orb
shll
jnp
mov
adc
and
inc
jo
call
push
mov
loope
outsl
adc
push
sub
mov
add
xor
push
xchg
leave
fwait
pushf
aam
mov
cmp
cmp
loope
and
cmp
sub
dec
mov
aas
fdivl
add
les
mov
and
sub
out
aaa
jnp
ret
xchg
divb
sub
aaa
push
insl
int3
sarl
and
inc
int
popa
imul
int3
fisttps
shll
ds
fs
les
fsubl
dec
mov
mov
insb
icebp
aam
dec
idivl
fs
cli
rol
shl
pop
push
fiaddl
and
js
inc
sti
movsb
ljmp
out
cwtl
sbb
add
mov
insl
inc
add
inc
scas
jo
pop
jl
sbb
sub
inc
mov
lock
cmp
cs
mov
lods
popf
mov
mov
jbe
mov
sbb
pop
mov
jae
mov
xchg
jmp
mov
imul
mov
daa
fwait
enter
icebp
call
test
ss
hlt
js,pn
pop
mov
icebp
dec
ret
mov
lds
popa
pusha
das
xor
repnz
push
dec
mov
pop
ficompl
lret
jg
out
rcl
int3
adc
jne
daa
stos
leave
add
mov
or
jl
dec
mov
mov
mov
sub
pusha
call
andb
pop
addb
sbb
push
ss
pop
and
dec
bound
pusha
dec
fnstenv
and
jo
leave
cltd
or
sahf
mov
loope
push
lods
rorl
pop
xor
cwtl
pushf
push
clc
xchg
in
shlb
dec
cs
fcomps
pop
or
and
hlt
scas
pop
mov
cmp
jbe
incl
inc
push
xchg
jae
test
test
jae
sbb
sub
push
dec
mov
sbb
inc
or
mov
mov
jnp
mov
clc
dec
in
mov
enter
sbb
outsl
sub
push
mov
pop
pusha
xor
fmulp
stc
ss
dec
or
or
push
fucomi
clc
in
jae
je
xchg
loop
lcall
cli
xchg
test
mov
arpl
pop
sahf
push
jo
sub
repnz
jns
xor
jno
das
out
push
or
dec
pop
add
mov
sbb
mov
mov
fs
push
xchg
push
mov
jmp
jo
and
into
lcall
sub
pop
add
outsl
cltd
ret
out
jbe
mov
mov
sbb
mov
xchg
shlb
aas
popa
int3
test
push
loop
lret
ljmp
pop
stos
push
mov
mov
xchg
addl
addb
add
sub
inc
sub
cwtl
mov
jge
repz
xchg
gs
loope
xor
shll
and
or
xor
daa
clc
outsl
xor
xor
aam
jne
test
add
into
fwait
push
pop
mov
pop
dec
xor
icebp
in
in
cmp
inc
outsb
pop
mov
outsb
push
mov
fisubrs
push
adc
xchg
mov
push
mov
aad
std
mov
inc
sbb
cltd
xlat
inc
mov
sbb
ss
fidivs
js
ss
sbb
xchg
mov
mov
repz
cmp
cmc
jne
sidtl
in
mov
xlat
sbb
xor
xchg
dec
adc
bnd
inc
mov
je
fwait
or
fwait
adc
and
mov
into
dec
addr16
mov
popf
sub
cmp
mov
push
or
lahf
push
xorl
jo
push
cmpsl
lcall
sbbb
push
popf
or
nop
lock
pusha
inc
pushf
sbb
into
ljmp
pop
jne
jb
pop
insl
or
xor
jne
fnsave
jl
into
js
dec
adc
dec
mov
in
pop
shll
push
test
sub
rol
inc
push
add
incb
cmp
fisubrl
ret
mov
mov
mov
icebp
xchg
mov
jo
pop
pop
xor
xor
rorl
pop
xchg
in
push
inc
xchg
lods
xchg
movsl
out
sbb
test
sbb
push
adc
jmp
enter
shlb
scas
jnp
push
dec
inc
decl
push
pushf
fidivs
xor
pop
lods
sub
mov
push
push
push
ret
out
cmc
cmp
add
lea
pop
imul
pop
ss
jns
cmp
and
adc
and
jecxz
push
add
mov
and
cmp
xchg
sbb
les
inc
shll
loop
sbb
jns
mov
rcrb
in
mov
mov
js
dec
cmp
test
xorl
jb
adc
call
pop
leave
ljmp
mov
xor
je
test
sub
xchg
repnz
in
nop
mov
push
push
xchg
inc
in
or
fisubl
jg
js
enter
jl
aas
cmp
fs
mov
adc
dec
sbb
jge
repz
cmp
dec
inc
in
inc
xchg
xchg
in
inc
pop
adc
mov
xor
push
adc
out
add
sbb
es
es
std
fidivl
push
add
cld
movsl
fnstsw
fistpll
jmp
dec
ja
push
rorb
xor
rorl
mov
mov
and
adc
pop
mov
xchg
stos
jmp
xor
lret
cmpsl
xor
enter
lahf
sub
xor
cmp
movsl
and
jg
xchg
jge
pop
jmp
and
in
mov
call
and
clc
fldl
sbb
stc
lcall
cwtl
sahf
int
push
add
ss
stos
testl
xchg
fimull
push
cmp
pop
mov
cwtl
xchg
pop
js
nop
in
test
pop
lret
arpl
pop
xchg
or
cmp
in
flds
dec
xchg
in
fldcw
call
scas
in
adc
push
xchg
aam
cld
jp
and
js
js
mov
push
pop
adc
or
jnp
sbb
stos
add
in
sbb
mov
jg
jp
in
test
xchg
or
jae
ds
jl
inc
stos
jbe
loop
das
jp
jae
pop
negl
xchg
je
and
xchg
mov
inc
mov
adc
stos
mov
sbb
test
popa
mov
or
inc
lods
adc
mov
and
pop
es
loop
inc
push
out
lods
ret
mov
scas
out
jo
out
je
dec
in
in
test
ret
xchg
pop
push
test
mov
repz
xchg
andb
jg
mov
in
je
or
inc
mov
lcall
into
lods
dec
dec
mov
cmpsb
jmp
mov
cli
push
icebp
addr16
ds
xchg
add
mov
xlat
lahf
xor
adc
xchg
cmp
imul
ss
lds
lcall
and
mov
in
mov
lea
popl
sahf
mov
add
mov
jns
cmp
dec
outsb
pop
icebp
dec
mov
icebp
pop
addr16
xchg
sbb
popf
bound
push
ss
test
popa
cli
gs
dec
or
xor
lods
out
inc
orl
ljmp
inc
in
jl
in
pop
sbbl
sbb
mov
jbe
mov
mov
mov
xchg
clc
jge
inc
cmp
mov
inc
in
xchg
pop
out
dec
sub
xor
mov
loopne
enter
lock
call
lret
nop
or
movsl
sbb
jl
cmpl
popa
movsl
push
xchg
adcb
mov
lods
or
xorl
add
xor
nop
jns
mov
push
jbe
lods
mov
lea
mov
adc
adc
sbb
in
mov
push
pop
dec
scas
inc
mov
ds
das
or
or
data16
ja
fadd
adc
sbb
dec
loop
popf
scas
and
adc
js
cmp
out
xchg
sbb
out
lds
adc
mov
and
loop
and
xchg
clc
mov
fisubl
sub
pushl
mov
rolb
dec
inc
add
lret
mul
add
or
sub
push
stos
cmp
cmp
in
loopne
fcmovne
xchg
dec
jmp
div
xor
sbb
aas
mov
dec
stos
loop
fcompl
push
sahf
mov
or
arpl
lods
lea
inc
jne
jecxz
or
ret
rcll
pop
sub
shll
je
jmp
pop
loopne
cwtl
pop
in
sbbb
cmp
pop
ja
stc
int
adc
adc
mov
push
adc
shlb
add
insb
or
andl
int3
xlat
in
pop
negl
aaa
and
mov
inc
repz
gs
popa
ljmp
jb
mov
pop
sti
pop
mov
xlat
xchg
test
xlat
es
pop
andb
xor
and
andl
fs
push
fdivrp
std
ja
addr16
loopne
stos
imul
mov
popf
add
repnz
xor
xchg
clc
jmp
pop
dec
shrl
sub
ja
push
xor
lods
popa
inc
sbb
bound
cmp
pop
dec
sub
cmp
push
out
cs
mov
push
pop
sahf
cwtl
pop
push
sahf
lock
xor
push
inc
insl
lahf
jle
or
sub
into
mov
call
lea
sar
xchg
clc
fdivs
lods
in
inc
icebp
xor
jbe
add
cmp
cli
push
andb
pushf
jb
lret
push
xchg
cmpl
popa
call
sub
adc
xlat
jecxz
adc
jp
sbb
xchg
mov
and
push
jae
add
jne
jge
sub
js
ljmp
sbb
stc
mov
mov
call
xor
mov
ret
pop
dec
mov
ficomps
push
stos
lret
mov
dec
in
push
sarl
jmp
stos
inc
fadds
lds
sti
aaa
test
flds
sahf
sahf
shr
sub
cmpsb
sub
icebp
pusha
pop
add
cmp
lret
ljmp
inc
loopne
cwtl
jns
cmpsb
sbb
mov
push
inc
int
jns
iret
mov
mov
xchg
pop
mov
ret
xchg
addb
addl
arpl
push
pop
adc
insb
cmp
mov
sbb
jae
fidivs
jle
loop
push
ljmp
mulb
data16
rcl
je
dec
sub
das
fimull
xor
aam
jne
mov
clc
add
jae
cmpsl
sub
jae
jo
push
push
push
push
int3
shl
fcmovbe
mov
adc
mov
test
shrl
adc
inc
xor
movsb
aad
and
outsl
sub
outsb
aaa
into
xlat
xchg
pop
ficomps
mov
push
pop
ret
pop
cs
cmp
jbe
push
sahf
outsl
pop
pop
daa
sbb
sbb
jl
pop
jns
jne
aad
jns
fs
push
aaa
push
pop
jge
outsb
lods
xor
jbe
loope
rorl
xor
push
cltd
sbb
push
jo
pop
dec
adcb
mov
ss
arpl
add
pop
lcall
loop
movsb
sbb
adc
stc
fbstp
mov
lret
fwait
xchg
dec
movb
dec
or
mov
adc
mov
sub
fldt
fidivrl
or
push
ret
jae
mov
ret
mov
inc
jg
push
sub
jp
stc
lods
das
inc
jg
ljmp
mov
push
xchg
mov
pop
sbb
ds
jne
jmp
sub
add
sarb
cmp
bnd
fidivrs
popa
sbbb
cli
mov
into
mov
push
mov
pop
adc
cmp
or
inc
inc
adc
add
lret
adc
pop
cmc
push
jge
mov
jnp
jmp
dec
clc
push
roll
mov
or
mov
push
sub
lret
jle
fucomip
sbb
pop
push
cld
cmp
rolb
fwait
popf
aad
stos
push
stos
mov
xchg
adc
push
dec
pusha
xchg
add
out
bound
rcr
inc
ss
fs
lock
and
pop
and
inc
mov
xchg
ret
gs
sub
cmpsb
cmp
pop
lahf
xor
and
xor
push
sbb
push
adc
fimull
pop
ror
sbb
clc
leave
push
movsb
mov
pop
outsl
pop
fcoml
outsb
mov
pop
xchg
or
out
add
imul
sub
cmpsb
inc
pop
lret
mov
push
addr16
jb
int
dec
or
gs
fsubr
and
repnz
imul
fs
pop
cmp
scas
add
push
into
sbb
repnz
ret
outsl
xorb
mov
mov
gs
mov
dec
sbb
std
loope
dec
sub
mov
inc
f2xm1
xor
xchg
push
dec
adc
scas
ret
repnz
xchg
dec
js
mov
add
or
and
sub
int3
cmp
outsb
fwait
sub
and
sarb
pop
pop
mov
xchg
and
loope
xchg
xchg
push
and
into
or
popa
mov
fcomps
jae
not
in
xor
rolb
add
xchg
cwtl
mov
iret
adc
inc
jne
int3
dec
sub
mov
adc
sarl
jbe
sahf
mov
sbb
arpl
inc
fdivrl
pop
mov
xchg
jo
aaa
or
inc
in
in
clc
sub
sub
cmp
sub
mov
push
scas
ds
pop
cli
mov
jno
adc
bound
loopne
xchg
xor
jne
insl
out
push
inc
fs
lahf
mov
or
es
out
add
xchg
lods
pop
pop
jg
push
pop
sbb
loopne
and
xchg
shr
mov
jno
xchg
adc
pop
insb
out
mov
gs
dec
mov
pop
jno
push
jle
xorl
xchg
or
bound
mov
mov
in
jg
fwait
mov
std
fists
mov
or
adc
xchg
add
mov
pop
add
adc
aaa
pop
imul
clc
jmp
es
jle
in
mov
jnp
sbb
sti
adc
push
inc
jns
mov
sbb
sarb
repz
push
lock
ds
or
cmp
xor
les
ds
dec
movsl
sti
dec
and
add
and
cmp
sbb
mov
in
or
cwtl
ret
sub
cmp
popa
jne
test
jmp
cmp
mov
cwtl
aas
out
icebp
mov
xchg
push
push
jp
xchg
inc
inc
jns
cmc
test
and
in
pushf
jmp
and
mov
mov
mov
aas
jmp
enter
mov
xchg
mov
dec
cmp
ss
ljmp
aaa
movsl
jle
mov
jmp
ret
roll
pop
mov
inc
jp
push
cmp
add
aad
sub
leave
aaa
stos
sbb
stc
mov
ret
mov
lret
adc
int3
hlt
pop
int
and
sbb
adc
mov
pop
iret
mov
mov
and
and
sti
sarb
std
push
shll
pop
int3
xchg
xchg
mov
mov
enter
add
and
sbb
fisubrl
movsl
sti
iret
mov
aaa
rcrb
dec
pop
scas
shll
jle
sahf
jb
iret
pop
testl
les
pop
mov
cmp
ret
imul
xor
or
mov
cmp
xor
jbe
sbb
xor
mov
jnp
add
in
stos
lds
outsb
pop
out
mov
push
iret
nop/reserved
out
lcall
cli
insl
dec
inc
push
xchg
cmp
gs
cli
iret
repnz
xchg
pop
jmp
testb
and
inc
jns
add
shll
pop
aad
jge
add
out
and
jns
roll
sbb
pushf
xlat
xchg
pop
push
loopne
mov
jp
sbb
imul
testl
fmull
mov
xchg
enter
inc
aad
mov
sub
push
loopne
mov
and
or
jnp
leave
fnstcw
sbb
scas
mov
sbb
fsubs
cltd
push
in
test
mov
mov
jmp
loope
inc
ja
imul
dec
inc
and
loopne
out
push
xor
push
push
mov
call
int
fsts
and
sub
xchg
call
jecxz
or
out
mov
mov
jae
bound
cmpsb
fdivl
sbb
mov
xor
aas
xchg
aad
add
mov
xor
push
rcll
pusha
and
mov
shrb
cmpsl
xchg
loope
mov
in
pushf
fisubs
aaa
mov
les
loopne
xchg
sub
in
cltd
sub
pop
cli
mov
pop
and
pop
les
dec
mov
lahf
shl
movsb
push
outsl
add
and
or
jge
int
lret
sbb
icebp
pop
sbbl
or
mov
sbb
jno
rorb
sub
outsb
pop
cmc
cmp
xchg
push
jnp
jbe
in
dec
mull
mov
dec
data16
xlat
mov
int3
out
jge
sbb
dec
pop
clc
cmp
lahf
jp
stc
push
fbld
movsl
aam
jge
sub
or
mov
sar
sbb
rolb
inc
dec
mov
arpl
ja
mov
outsl
test
out
xor
sbb
les
gs
xorl
and
xchg
inc
jb
push
adc
bound
jae
lahf
sahf
icebp
mov
pop
pop
inc
pop
inc
xor
adcl
pop
push
into
mov
mov
dec
xchg
jae
xor
fdivr
movsl
xlat
into
bnd
gs
clc
mov
out
loope
idivb
mov
mov
out
fsubr
pop
jb
lods
mov
fwait
in
dec
add
jecxz
inc
jae
xchg
sbb
xchg
rcrl
insl
js
ja
push
sar
lret
or
xchg
dec
xor
negl
pop
inc
ja
xchg
jo
sub
inc
jnp
lahf
int3
out
adc
bound
dec
mov
jg
xchg
loop
mov
and
std
cmp
push
sbb
or
sub
mov
adc
jge
cli
aam
sbb
mov
lds
outsb
pusha
xchg
adc
test
stc
jbe
popf
fs
cmpsb
mov
sub
fldt
pop
popa
mov
fwait
add
and
in
adcb
out
mov
add
inc
xor
pop
adc
dec
fidivrs
cmp
test
sbb
out
and
lods
inc
jp
mov
push
mov
hlt
out
sbb
add
leave
push
lret
fwait
outsb
leave
jns
lret
loope
dec
repz
dec
push
out
or
ficompl
push
sahf
testb
and
push
dec
leave
xor
arpl
dec
rolb
mov
je
into
pop
mov
dec
jle
xchg
xor
popf
sarl
daa
iret
cs
cltd
mov
adc
dec
rcll
ret
ficompl
jne
popf
divl
stc
movsl
mov
test
mov
xor
cld
add
int3
je
lea
or
sub
sahf
cmpsl
push
outsb
lret
fsub
stos
sbb
add
push
mov
sbb
add
idivb
xchg
dec
aam
and
or
test
imul
outsb
insb
scas
cli
jo
clc
ds
loopne
inc
and
fwait
loopne
ljmp
rclb
pop
cld
mov
pop
push
scas
or
movsb
pop
sbb
lea
adc
in
iret
popf
pop
test
stos
in
mov
clc
lea
inc
or
pop
imul
or
add
dec
fs
in
outsw
xor
test
add
test
push
sbb
fs
push
lods
aas
loope
mov
push
imul
call
adc
pop
and
call
mov
aam
js
pop
mov
xor
xchg
push
dec
jo
xchg
shrb
out
cmp
or
loopne
clc
pusha
stos
mov
add
inc
mov
cmpsb
jl
sbb
add
mov
sarb
push
lcall
cmp
cmp
jg
out
shll
ss
lods
ficoms
subb
mov
jp
clc
scas
add
pop
inc
push
fildll
adc
sub
mov
test
outsb
loope
sbb
adcl
jl
xchg
cmp
and
lods
mov
mov
loope
js
testl
inc
es
xchg
and
cwtl
xlat
jmp
pushw
xor
add
dec
in
inc
mov
ljmp
xor
test
cmp
mov
dec
int
fsubr
mov
test
jg
mov
enter
and
je
jae
ljmp
bound
fs
push
into
add
loop
pop
shlb
adc
pop
iret
push
push
into
jnp
or
mov
fdivs
call
sti
cmp
mov
pop
mov
out
and
cmp
and
cld
test
jae
adc
nop
std
aad
icebp
test
mov
push
lret
jl
aam
out
rcrl
push
cmp
xchg
pop
inc
pop
ja
or
cwtl
jle
inc
cmp
dec
sub
fs
push
movsl
fldl
or
test
andl
shr
lret
in
adc
lds
fistl
iret
or
or
or
xor
jmp
leave
in
stos
cmp
ffreep
sub
push
je
jnp
hlt
pop
sbb
lock
int
sahf
mov
sub
xchg
shrl
push
xlat
lcall
scas
xor
loop
push
stc
sbb
xchg
pusha
xchg
fldt
test
in
js
inc
pusha
push
dec
psrlw
mov
and
push
inc
pop
mov
pusha
push
popa
xchg
inc
dec
add
cmp
pop
pop
inc
ds
sahf
mov
ror
arpl
mov
push
pop
aas
and
repz
rorb
fstpl
inc
aam
aam
jb
ret
xor
out
mov
fists
pop
xchg
loopne
xor
sbb
aas
mov
repz
aas
std
lods
push
xlat
or
fbld
inc
arpl
mov
cmp
add
push
flds
push
mov
leave
fsubl
mov
loope
mov
push
aam
lret
add
push
mov
repnz
add
mov
mov
sbb
test
imul
cs
mov
mov
ja
ss
fisttpll
rorb
scas
nop
lods
adc
add
enter
jnp
push
dec
test
jp
jecxz
jl
mov
in
packssdw
xchg
xor
in
addl
aaa
inc
push
in
mov
dec
push
aaa
ret
std
sbb
test
sub
lahf
imul
test
data16
mov
aas
or
push
test
out
mov
inc
aas
sbb
sarl
sub
loop
adc
push
mov
jae
mov
mov
bound
sbb
and
or
jne
in
clc
clc
idivl
std
ds
sub
addr16
mov
sti
pop
cltd
inc
and
add
in
addr16
movsl
xor
inc
gs
adc
cli
fiadds
cmp
imul
mov
sahf
movl
outsb
and
push
faddl
sbb
cmc
push
enter
test
cmp
std
adc
sbb
scas
lret
repz
insl
dec
imul
sub
addr16
cmp
cmc
xchg
repnz
and
std
into
sahf
xorb
outsl
push
or
inc
into
dec
outsl
mov
call
mov
dec
into
movsl
dec
mov
aam
in
cmp
arpl
cmp
mov
pop
insb
das
sub
or
jne
and
aam
scas
jnp
add
xchg
xor
pop
int
and
lods
rorl
aad
loopne
xchg
je
sahf
and
ja
cmc
int3
jb
fs
cmp
sub
imulb
test
dec
add
dec
sti
insl
jne
mov
jle
andl
adc
and
clc
push
pop
cmp
jo
stos
xor
dec
call
pop
mov
loopne
or
push
jl
pop
shlb
push
mov
inc
cltd
dec
jp
daa
andb
in
pop
pop
test
push
out
test
shr
pop
xor
lds
ja
xor
xchg
gs
cmpsl
icebp
mov
push
repz
das
and
xchg
add
data16
xor
dec
icebp
xchg
push
cmp
movsb
mulb
add
test
add
inc
cmpsl
lods
imul
cs
scas
mov
cwtl
sub
mov
push
divl
mov
loop
repz
in
or
jge
pop
jns
push
adc
enter
and
in
xchg
dec
push
xchg
sub
inc
jmp
loopne
and
jno
sub
sub
in
push
incb
stos
mov
test
cmp
orb
into
insb
testl
and
imul
outsl
jecxz
or
out
mov
dec
xor
ljmp
xor
test
sti
sti
mov
aaa
lcall
shlb
cld
std
inc
roll
mov
jmp
js
in
pop
jno
mov
inc
push
adc
les
or
lds
mov
lret
es
inc
jle
call
sets
mov
cmpsl
lea
mov
push
jmp
lret
lods
pop
aas
and
dec
call
test
mov
or
push
inc
jp
int
pop
pop
ret
jo
cmp
movl
ret
cmp
and
add
imul
push
ltr
sbbb
push
adc
pop
stos
aas
xchg
xchg
fldcw
push
je
mov
lods
aad
orl
popf
fcoms
inc
les
lret
icebp
lods
lret
test
cmpb
js
lds
bound
ljmp
cmp
mov
jno
push
dec
jno
ja
push
jecxz
notl
pop
push
mov
nop
adc
lods
inc
shll
cld
xor
call
xor
mov
mov
push
or
ja
popf
xchg
mov
fs
fimull
mov
cmp
jmp
dec
mov
testb
mov
gs
cmp
mov
adc
loop
scas
push
adc
js
out
sbb
popa
jo
lods
lods
lds
inc
test
test
dec
rcll
call
mov
add
popl
mov
xchg
push
mov
frstor
mov
ja
pop
cmpsb
mov
push
adc
hlt
sahf
dec
inc
ds
lods
ret
pop
repz
insb
jl
cmp
jg
jg
or
mov
add
fs
mov
mov
xchg
push
sub
dec
iret
sbb
jnp
cmp
ss
mov
jle
push
xor
scas
jl
pop
xchg
cmpsb
pop
mov
in
sub
mov
sub
js
mov
cld
out
fstl
sarb
cmc
gs
pop
out
xchg
sar
or
dec
push
stos
push
sub
xor
adc
jns
inc
out
jnp
mov
ds
jb
push
aaa
sub
mov
mov
xchg
xchg
mov
subb
dec
popa
inc
inc
xrelease
and
jne
insb
sub
xor
sub
sub
test
ds
repz
fmull
int3
nop
push
daa
lods
cmp
movsb
jmp
sbb
aad
sti
repz
sbb
je
lret
icebp
sbb
loop
pop
and
cmpsb
ds
mov
ret
xchg
cli
mov
and
int
mov
cmp
mov
repnz
adc
in
mov
lock
dec
inc
mov
push
fistpll
xorl
dec
or
shlb
dec
je
mov
pusha
fsubrs
jnp
aam
xchg
incb
arpl
inc
dec
or
sbb
lds
fimull
add
and
and
fisubs
repnz
xchg
cmp
xor
pop
lods
and
sbb
jnp
push
xor
outsl
out
jne
jp
or
cmc
jl
or
mov
movsl
xchg
dec
scas
das
aaa
dec
dec
imul
testl
sub
mov
or
jge
mov
cmp
xor
cs
xchg
dec
sti
pop
out
popf
les
ret
in
push
jge
insb
lahf
xor
arpl
arpl
in
cmp
roll
xchg
or
push
in
inc
arpl
mov
int3
cmp
adc
mov
mov
pop
loope
or
mov
mov
test
push
mov
jg
aad
movsb
std
sbb
cmp
out
cmp
push
or
cld
jl
cwtl
sahf
sub
sbb
mov
mov
daa
adc
mov
dec
add
and
popa
sti
push
mov
xchg
in
or
cs
adc
fnstenv
jbe
mov
fdivl
pop
adc
out
rcrb
testl
pop
or
cmpsb
add
mov
sti
jmp
ret
push
jo
push
int3
mov
ficompl
addr16
movsl
adc
or
lock
aam
dec
jbe
sub
mov
adc
mov
push
gs
add
insl
mov
out
pop
int3
cmp
pop
or
and
leave
daa
xchg
insb
sub
inc
xor
ljmp
mov
fldt
sahf
jmp
mov
jle
scas
test
pop
add
lods
iret
inc
cmp
rorb
lea
xchg
lods
rcr
dec
stos
shll
push
clc
jecxz,pt
push
ja
jo
test
dec
push
push
mov
pushf
andl
lock
xchg
and
and
pop
cmp
jle
inc
mov
mov
fildll
out
mov
lahf
subb
sub
in
sub
dec
lea
pusha
mov
je
in
dec
cmc
adc
sbb
outsb
pop
lahf
ficoml
dec
mov
lret
dec
out
rol
xlat
rcll
lahf
push
sbbl
sub
sub
aas
lcall
jnp
mov
jecxz
xchg
inc
cmp
mov
out
hlt
cli
fimull
mov
out
xor
xchg
or
andb
pushf
xchg
add
pop
xchg
fistpll
xor
dec
xchg
cmpsb
xor
sbb
inc
xchg
scas
cli
xchg
lods
xchg
xchg
ret
cltd
add
jle
fxch
cli
and
mov
data16
add
pop
fsub
adc
push
fsubs
pushl
std
mov
mov
outsl
int3
aas
jle
repz
push
cltd
hlt
stos
leave
push
enter
ja
push
mov
loopne
call
int3
xchg
mov
jge
push
xor
clc
arpl
shl
xchg
add
push
xlat
lea
shr
jle
fbld
jge
push
lods
aad
mov
es
push
scas
dec
clc
xor
mov
imul
mov
dec
mov
dec
ret
cmp
mov
add
lret
dec
sub
cmp
jecxz
jbe
aam
mov
fcoml
jl
mov
xchg
aas
aaa
mov
lock
aaa
stc
lock
sbb
dec
test
loope
jmp
insb
rcrl
mov
sbb
es
data16
dec
lret
sub
aad
or
stc
jae
adc
jnp
ret
in
lock
xchg
adc
xchg
mov
rol
sub
cs
xchg
push
xor
shll
lds
inc
mov
add
sub
movsb
popa
in
and
fs
shlb
je
rcr
xor
cmp
cli
xchg
stos
sub
adc
repz
out
jmp
dec
ja
push
jge
xchg
js
mov
sti
insl
mov
push
ret
sub
adc
xorb
repnz
scas
push
and
loopne
xchg
popa
cli
jno
sahf
subl
xchg
xchg
dec
mov
add
imul
lahf
mov
or
push
mov
jg
xor
cmp
jg
adc
add
daa
mov
jne
xor
outsl
jae
cwtl
cmp
mov
lcall
mov
add
jmp
int
xchg
insl
xchg
inc
outsb
cltd
and
mov
loop
pusha
sub
hlt
cmpsb
jnp
insb
pop
enter
xchg
roll
out
lds
bound
test
ja
xor
addb
mov
je
sub
fidivrl
mov
mov
outsl
xchg
dec
insl
das
bound
hlt
mov
jecxz
xor
or
sti
outsl
aas
out
outsb
leave
adc
or
lcall
lods
xchg
jecxz
jle
out
es
push
adc
pop
fstl
mov
aaa
jp
xlat
pop
inc
sub
sbb
mov
aad
cmp
cmp
cwtl
jg
ret
add
shr
loop
cmp
or
imul
add
mov
adc
ss
inc
mov
cmp
xor
mov
jo
test
or
aaa
js
scas
add
sbb
lret
sub
movaps
or
ja
scas
xor
out
addl
int3
or
insl
lds
imul
xchg
cld
fst
and
arpl
stc
ret
pop
adc
xor
pop
mov
mov
fcoml
push
lret
loop
cmpsb
mov
adc
cwtl
in
loop
ja
xlat
dec
add
ds
or
inc
add
mov
test
pop
shrl
or
ss
and
repnz
outsb
jg
mov
sti
mov
pop
lret
repnz
out
mov
pop
xchg
jp
ss
adc
sub
sbb
sub
xor
inc
enter
adcb
xchg
xchg
aaa
mov
and
loopne
xor
fidivrl
sub
jle
sub
rcr
jb
xchg
mov
cs
mov
ljmp
inc
cmp
or
jge
mov
in
mov
jecxz
call
mov
and
cmp
inc
aaa
lret
pop
adcb
mov
adcl
lret
and
push
stc
jns
jns
cmp
mov
mov
and
jns
outsb
adcb
adc
xor
std
sarl
and
iret
rclb
bound
jns
jb
cmp
cmpsb
mov
push
imul
push
aam
jle
nop
test
test
sti
lods
pop
dec
addr16
lret
icebp
orl
jne
out
jbe
dec
les
pushf
fisubs
adc
jmp
rclb
jge
popa
je
adc
idivb
test
sbb
sbb
jl
loope
es
test
call
xchg
loopne
inc
inc
je
xchg
add
ss
clc
and
mov
nop
sub
mul
out
aas
pop
add
mov
cmc
repnz
and
fldenv
int
sbb
mov
or
ljmp
or
out
adc
xchg
insl
xor
mov
test
jae
adc
rcll
push
subl
add
in
mov
test
and
xchg
mov
adc
pop
xor
xor
adc
jnp
push
fcmovbe
fwait
in
ja
sub
inc
add
ljmp
pushf
lcall
cmpsb
add
mov
bswap
lcall
xor
inc
adc
sub
shll
ja
adc
movsl
adc
jo
jmp
xor
mov
mov
cmp
xchg
pop
hlt
cmp
insl
xlat
test
loope
dec
xchg
dec
mov
push
addr16
add
adc
aaa
and
pop
lcall
adc
fistps
lds
sbb
or
stc
in
or
mov
jg
ds
push
and
scas
hlt
mov
mov
leave
add
cltd
mov
mov
xchg
mov
sub
jne
xchg
std
je
mov
cwtl
sub
pop
dec
adc
jmp
push
loope
sar
mul
sbb
jp
in
iret
test
scas
adc
and
xchg
sahf
out
mov
inc
fadds
sarl
pop
cwtl
inc
push
or
pop
aaa
data16
jg
adc
cmp
xor
xor
mulb
iret
int3
cs
sbb
insl
jp
idivb
xor
cmpsl
fdivs
addr16
cmp
push
push
push
cmp
jns
xor
loop
jno
pop
add
xchg
pop
in
jp
cmp
mov
sub
ljmp
lea
mov
arpl
ficompl
sub
addr16
mov
add
add
xor
push
add
stc
lret
scas
out
mov
mov
sahf
outsb
lods
movsl
ss
jns
lea
out
mov
sub
pop
jl
mov
in
lret
fsub
or
call
shl
sub
je
cltd
loopne
icebp
in
mov
inc
adc
or
pop
test
pop
jl
sbb
loop
ret
jl
aad
test
sub
pushf
dec
jne
adcb
mov
xchg
repz
cld
jp
pop
jae
js
add
call
mov
push
push
cmpsb
cmp
adc
fs
adc
lret
sub
xor
orl
mov
insb
out
and
in
push
add
or
mov
shll
ret
add
lock
mov
xorl
cli
xchg
lret
pop
pushf
psllw
dec
sub
push
adc
scas
xchg
mov
jp
scas
enter
push
iret
cli
fucom
daa
inc
sub
sbb
pop
dec
push
sub
push
mov
loopne
rolb
inc
sbb
aas
adc
pop
fwait
sub
adc
and
mov
int
pop
push
ljmp
push
mov
xor
jae
or
sub
fwait
mov
push
dec
addr16
shll
lods
jb
call
sub
aas
push
loopne
dec
push
or
push
jb
xor
pop
and
xrelease
outsb
push
mov
aaa
testb
pusha
pop
fcmove
dec
shrl
inc
sbb
cmc
xchg
repz
fs
xchg
cmp
aam
adc
pop
insb
push
sahf
ret
lret
add
inc
push
push
popf
test
inc
ret
cwtl
jbe
push
cmp
jnp
pop
or
dec
pop
add
lret
add
icebp
pop
jl
or
push
and
mov
pop
lds
and
ss
jnp
jo
andb
sahf
jne
cmovle
mov
inc
rorl
ja
rcr
imul
cltd
xlat
pop
fdivs
and
mov
mov
icebp
dec
out
xchg
std
enter
icebp
testb
mov
fnstcw
sbb
cs
push
ss
and
adc
data16
mov
cmpl
test
adc
or
out
psubsb
cltd
xor
in
rcr
dec
add
cmp
enter
mov
lds
mov
sbb
or
push
imul
pop
aaa
gs
pop
sbb
test
mov
and
mov
arpl
jle
loop
add
arpl
or
mov
out
sub
test
xor
xor
cld
pop
xor
lret
dec
cmp
jbe
jo
mov
jmp
cmp
push
out
ds
sub
or
push
xchg
add
or
mov
dec
je
dec
scas
dec
aas
xchg
popl
add
and
and
fiaddl
stc
das
daa
mov
dec
loope
fcmovb
push
loopne
sahf
adc
cmp
movsl
test
jae
ss
or
push
jae
lcall
ficompl
sbbb
dec
pop
mov
xchg
xor
inc
lock
mov
insl
frstor
sbb
lahf
loop
testb
dec
shll
push
xchg
movsl
pop
adc
sbbb
push
out
divb
xchg
clc
scas
jnp
leave
xchg
hlt
cld
in
outsl
xchg
rolb
xor
jne
jbe
cmc
repnz
lret
jl
sub
adcl
xlat
xchg
fsub
mov
jne
cmp
sub
into
ss
mov
mov
repnz
pop
lret
repz
nop
aaa
push
push
jne
xchg
outsl
popf
fisubl
add
mov
repz
and
fsubs
sub
mov
sub
mov
jle
inc
xchg
adc
cmp
dec
scas
arpl
add
lods
jl
fsts
test
sub
dec
pushf
sbb
in
inc
shrl
ret
cmpsb
sub
push
mov
mov
jns
mov
frstor
sub
push
ljmp
scas
sub
ja
jnp
mov
cmp
jnp
xor
rclb
xor
stos
push
jl
fisttpl
insb
clc
inc
cmc
lods
xor
adc
popa
dec
push
push
push
imul
data16
orl
dec
repnz
jle
cwtl
push
fstpt
in
inc
imul
push
dec
pop
xchg
push
int
xor
outsl
mov
decb
leave
int
fs
cmp
insb
xchg
jle
xchg
adc
inc
or
cmp
inc
jmp
inc
daa
add
fs
push
mov
inc
icebp
sub
mov
jg
adc
cmp
sbb
xchg
into
xchg
ss
jb
jae
popa
and
in
es
mov
fidivl
jecxz
dec
jnp
cmp
dec
fs
lock
jecxz
cld
adc
xchg
or
inc
cli
mov
lds
fstps
pop
popa
rorb
imul
cmp
aaa
shrl
popfw
sbb
jno
jo
lret
bound
and
rclb
mov
mov
test
add
cmc
pushl
iret
or
scas
mov
jbe
pop
das
and
in
sti
lods
mov
xor
sub
adc
jne
mov
in
out
cmpsb
mov
xchg
imul
inc
cld
xchg
lret
lret
lahf
jae
and
dec
and
imul
xlat
lret
dec
adc
repz
sbbb
insl
gs
cmp
es
aaa
and
loope
add
movl
jl
or
pop
mov
ja
push
das
xchg
lock
inc
jmp
cmp
cmpsl
cmp
inc
mov
cmp
sbb
inc
rdtsc
inc
jo
sahf
xorb
jp
lods
sahf
and
shl
push
fsubl
sub
sbb
cmp
push
adc
jge
push
add
jl
cmpsl
das
fld
add
add
mov
push
sbb
cmp
leave
jo,pt
push
cmp
jne
hlt
dec
scas
lods
mov
mov
xlat
jo
in
add
xor
mov
call
xor
loopne
lret
fidivl
rcll
filds
pop
fcomps
or
xor
inc
aam
mov
std
push
push
hlt
xor
nop
jg
mov
into
add
jmp
dec
adcb
divb
pop
xchg
popa
shl
xor
adc
jo
cmp
or
popf
push
sti
std
sub
scas
jl
xchg
pop
aam
add
and
jmp
adc
cmpb
dec
cs
shr
inc
flds
movsl
popa
pushf
fstpt
push
out
jg
inc
and
cmp
jl
repz
dec
clc
mov
xchg
in
and
cmp
pop
mov
push
cmp
out
inc
repz
lock
jbe
dec
jb
jo
cmp
rcll
and
xchg
push
sti
and
iret
ret
mov
sub
inc
mov
mov
mov
dec
and
cli
jo
movsb
fisubs
cs
aam
push
cmpsl
jle
jecxz
add
scas
icebp
cmpsl
push
das
cs
mov
adc
pop
adc
sahf
push
in
cmp
jbe
into
push
inc
pop
aas
xor
pop
mov
mov
mov
mov
sub
ja
jbe
stc
lret
imul
rol
mov
stos
outsl
into
pop
stc
icebp
dec
out
mov
xchg
cwtl
es
xchg
dec
mov
mov
adc
lods
sti
negl
int
mov
lret
mov
fadd
in
outsb
aad
inc
std
lods
xchg
adc
sub
ja
xor
dec
inc
pop
cltd
incb
and
scas
xchg
inc
push
out
and
sbb
decb
or
icebp
lock
sub
push
inc
lds
test
in
mov
imul
mov
int
mov
xchg
mov
fs
push
sahf
adc
mov
xlat
fdiv
dec
jbe
push
xor
cmp
push
xchg
cltd
mov
sub
adc
test
fnstcw
mov
mov
dec
sub
loopne
rcrl
sub
mov
movsb
jbe
mov
pushf
adc
cmp
popa
cmpsl
pop
gs
repz
add
dec
inc
jae
test
or
mov
jno
loop
pop
pop
cmp
mov
popa
push
dec
subb
dec
adc
sub
or
push
jo
inc
inc
mov
inc
dec
in
rcrb
fucomi
or
stos
dec
or
aam
or
fcomps
xor
inc
inc
cs
loop
cwtl
daa
popa
xchg
mov
sbb
test
popf
xchg
sbb
scas
dec
pushf
bound
and
mov
push
mov
xchg
ret
hlt
pop
mov
lock
in
movsb
cs
iret
mov
cmpsb
rcrl
sub
push
inc
test
pop
sbb
shrb
imul
xchg
jge
inc
dec
mov
sbb
movsb
pop
out
mov
cmp
iret
pushl
fadd
addr16
and
jb
xor
mov
inc
sub
sbbb
xchg
addr16
negl
xorb
into
mov
jno
sbb
ss
sahf
jmp
add
mov
movsb
sahf
pop
xorb
jbe
sbb
shl
lret
or
jle
adc
adc
inc
popa
cmpsb
mov
mov
scas
outsb
lcall
xchg
push
repnz
fsubl
pusha
sarl
mov
inc
mov
add
and
out
inc
add
out
jmp
lret
sbb
xor
mov
dec
stc
sub
dec
push
xchg
jl
add
and
arpl
add
jmp
pop
add
push
jge
stos
dec
push
call
mov
mov
je
cmc
in
in
clc
add
lcall
inc
movsb
jecxz
pop
or
addb
adc
add
add
dec
fistps
or
adc
ret
fisubl
sub
jnp
mov
or
inc
sbb
ficompl
mov
pop
sti
pop
sti
sbbl
inc
mov
xor
cmc
inc
lds
jg
lret
ret
and
mov
imul
cld
and
sbb
out
adc
test
pop
xchg
syscall
dec
sarl
sbb
mov
popa
cmpsl
loopne
push
cmp
adc
xor
addr16
imul
ss
in
sbb
js
mov
lret
arpl
pop
js
sbb
int3
test
inc
pop
dec
bound
cs
js
jb
jnp
fwait
stos
jno
in
jae
cld
mov
jg
fnstcw
push
xor
in
ljmp
xchg
shll
cmp
cmpsl
push
mov
dec
cmp
xchg
or
clc
in
imul
idivl
out
vpacksswb
inc
adc
xchg
stos
xchg
test
lock
aad
ljmp
mov
pop
mov
add
push
sub
mov
fisttpl
push
xor
sub
sarl
testb
out
in
sub
mov
scas
push
xchg
mov
loopne
pop
fstpt
xor
pop
mov
pop
push
jmp
xor
cltd
rorl
bound
jp
dec
inc
scas
icebp
pop
sub
and
popf
fwait
mov
in
popf
inc
lcall
push
jne
xlat
push
push
sahf
add
repz
es
shrl
repnz
aas
shrl
inc
in
fwait
push
stc
lret
push
hlt
push
add
repnz
push
xor
and
shll
fcompl
mov
inc
jo
jmp
sub
inc
in
cmpxchg8b
push
fcmovne
fs
imul
movsb
out
out
pop
shlb
and
mov
iret
sub
in
sbb
dec
je
sub
divb
xchg
aam
in
xor
push
ror
inc
adc
fstpt
call
xor
stos
stc
dec
push
adc
cs
lods
jge
adc
fcoms
mov
dec
gs
in
jno
popf
out
pushf
xchg
xchg
xchg
movsl
xchg
in
fisttpll
test
jmp
push
mov
sbb
aad
pop
outsl
ret
and
or
es
inc
inc
and
enter
mov
repnz
mov
xchg
call
or
leave
test
adc
add
mov
mov
repz
jne
aam
pop
fstp
pop
test
push
cmp
push
clc
sbb
dec
inc
shlb
mov
in
or
dec
mov
lds
test
aaa
xor
jg
shll
arpl
xchg
loopne
in
sub
inc
in
sbb
dec
xchg
pop
es
push
addl
dec
negl
lret
orl
flds
pop
ljmp
aad
cmc
sar
mov
call
mov
or
jg
mov
mov
fs
test
cmp
arpl
mov
dec
fs
ljmp
decb
aas
mov
clc
mov
popa
push
cli
xchg
pop
push
dec
je
in
xor
jo
dec
fwait
mov
sti
push
shl
fimull
inc
clc
mull
sub
shlb
jb
sti
rolb
mov
cwtl
adc
sbb
loopne
xchg
hlt
xlat
dec
inc
test
fimull
fstpl
mov
ret
lret
push
mov
inc
jo
dec
cmp
fs
aas
aam
inc
hlt
leave
adc
lahf
roll
outsb
imul
repnz
into
insl
jl
das
and
and
adc
sbb
pop
mov
mov
mov
outsl
in
aam
ja
in
xchg
sbb
mov
ret
xlat
add
jecxz
and
pop
test
cmp
pop
xor
movsl
int
dec
out
mov
imul
in
inc
outsb
sub
insb
mov
xlat
sub
cmpsl
xor
jb
push
xlat
mov
into
dec
push
subl
stos
scas
mov
sub
sarb
add
pushw
aam
sbb
cwtl
fs
inc
imul
pushf
cmc
test
lock
test
mov
mov
movsl
xor
das
mov
test
into
mull
iret
jns
sarl
push
aam
mov
mov
sbb
adc
js
lret
loop
jecxz
addl
lret
xchg
add
imul
adc
jecxz
push
lcall
xchg
mov
sbb
inc
fidivl
fcomps
xor
push
lret
imul
xchg
xchg
lahf
fildll
lods
mov
imulb
pop
je
ja
test
test
xor
cmc
xor
xchg
out
sbb
pop
inc
rcll
or
xchg
in
and
xorl
xor
mov
push
pop
cmp
lods
enter
mov
outsl
xchg
outsb
push
mov
push
cmp
mov
insl
fildll
cwtl
movl
pop
roll
cmp
xchg
pop
mov
cld
int3
aad
mov
adc
mov
jae
scas
adc
pop
out
jle
lods
gs
insb
lcall
pop
lods
push
dec
or
in
push
es
dec
lcall
adc
je
int
cwtl
aaa
int3
and
and
movsb
cmp
jge
inc
push
jbe
xchg
popa
les
push
cmpsb
fs
inc
push
xchg
sub
mov
jno
scas
jnp
xchg
adc
xor
imul
ficoms
cld
sarl
mov
lret
test
ffreep
inc
adcl
or
jno
adc
gs
xor
sub
push
push
das
pop
ficoml
aad
sub
push
mov
enter
imul
push
out
loopne
push
aam
test
scas
loope
bound
bt
imul
xchg
sbb
or
and
mov
movsl
mov
jge
lods
icebp
pop
adc
punpcklwd
push
push
fisttpll
sbb
pop
xchg
sahf
int3
inc
xor
sub
sbb
adc
xchg
jle
mov
fs
and
mov
push
cmc
pop
andl
mov
jne
out
add
push
sbb
sub
add
mov
movsb
fs
xchg
xchg
outsb
test
and
sti
subb
movsl
lret
fldt
into
js
cltd
sbb
or
xor
and
fnclex
imul
es
mov
and
sub
enter
jmp
sbb
fs
fcoml
cltd
sub
xchg
je
shrl
and
enter
xor
xor
jecxz
push
sbb
mov
jo
lret
test
mov
mov
fbstp
and
or
movsl
mov
lods
in
sbb
adc
lods
push
or
xchg
stos
jg
outsb
imul
push
fs
stos
inc
cmp
jo
mov
scas
mov
ljmp
in
xlat
in
dec
or
fcoml
sar
cwtl
sahf
xor
mov
xchg
cmp
mov
and
cmpsl
sbb
and
sub
xor
xor
cs
test
adc
fldt
mov
stos
scas
jmp
push
stos
inc
adc
pop
adcb
lret
mov
jecxz
insb
xchg
mov
jae
lret
xchg
fstpl
xor
pop
loopne
lods
outsl
arpl
add
movsb
push
out
lea
dec
popa
push
cmp
add
negl
jo
testl
mov
mov
cli
and
js
jne
insl
sbb
mov
les
jno
jge
adc
test
and
push
and
sub
shrb
cmp
popf
adc
rcl
test
pop
cltd
nop
imul
scas
repz
fstp
mov
ret
cmp
push
test
cmp
out
pop
jbe
mov
jns
jo
cltd
dec
iret
mov
mov
inc
les
mov
ret
lea
ret
sbb
dec
add
cmp
and
xchg
fisttpl
sub
push
pop
or
in
add
nop
iret
stos
sbb
push
sub
cld
mov
ret
jnp
push
mov
mov
xchg
sub
fimuls
push
mov
punpckhbw
xchg
xchg
dec
mov
pop
xchg
xor
loop
mov
pop
jo
mov
jne
and
xchg
sbb
xchg
icebp
lret
cmpsb
rorb
pmuludq
int3
jmp
push
cltd
cs
mov
ret
dec
arpl
jnp
xor
dec
fisubl
xor
stos
movsl
shll
jno
pop
lock
ja
mov
mov
mov
pusha
dec
out
movb
push
fisubrl
shl
or
in
rcrb
mov
inc
push
add
adc
adc
inc
dec
ficoms
mov
or
inc
fisubl
aam
pop
adc
jns
lcall
push
pcmpeqb
xor
pmuludq
popa
dec
mov
rcrl
mov
icebp
mov
sub
cmp
cltd
add
icebp
mov
into
das
idivl
mov
mov
mov
lods
mov
push
jbe
mov
push
inc
mov
sahf
adc
enter
and
push
push
icebp
movsb
jmp
mov
pop
push
sahf
sub
mov
arpl
add
cmp
scas
jo
adc
imul
fmul
push
xchg
xor
mov
js
sbb
mov
and
push
pop
out
jg
cmpsl
notb
xlat
addr16
or
xor
jo
in
mov
xchg
jmp
xchg
sub
mov
sub
lcall
dec
rcr
jl
insb
fwait
cmpsl
sbb
icebp
or
out
mov
or
sbb
adc
int
loope
add
ja
mov
push
das
out
jb
insl
fldenv
mov
insl
movsl
in
sub
inc
push
mov
shrb
out
call
stos
sbb
mov
add
or
int3
jb
jmp
aad
fistpll
movb
pop
mul
sbb
dec
mov
xchg
cmp
aaa
pusha
xor
sbb
ja
jo
lret
push
loope
test
xor
add
xchg
clc
test
lods
popa
and
jle
pop
leave
outsl
stos
push
fdivrp
push
jo
test
cmpsl
lcall
add
lods
mov
rorl
push
mov
inc
repnz
and
cmp
sub
mov
sti
sbb
push
out
cmp
mov
fnstenv
addr16
js
or
and
das
jp
lock
inc
pop
shlb
mov
into
inc
dec
jns
aas
out
jge
xlat
popf
sub
sarb
jmp
outsl
movsb
mov
sub
mov
jmp
mov
aas
cld
dec
jae
inc
mov
sbb
std
arpl
cltd
jb
lea
fsts
jmp
cltd
sbb
xchg
std
in
lahf
or
jge
sub
movb
aad
inc
cmp
pushf
or
cmp
push
push
xchg
mov
das
test
jmp
sbb
fs
in
scas
pop
out
xchg
and
fucomip
pop
out
xor
sub
cmpsb
lds
xchg
repnz
fbld
aad
push
pop
pop
adc
ret
test
mov
fsts
arpl
xor
jae
dec
stos
sub
insl
push
mov
add
or
cmpb
loopne
sub
leave
outsl
dec
mov
insb
loopne
sbb
jb
mov
inc
mov
sbb
xchg
pop
jns
sbb
scas
in
cmp
fwait
std
test
out
xchg
loope
fisttps
sbbl
fwait
ljmp
xor
xchg
ret
pusha
dec
adc
push
out
mov
bound
scas
insl
leave
inc
out
cli
test
pop
jne
jl
adc
jns
jge
ror
xchg
js
mov
js
cs
mov
daa
mov
xchg
sbbl
adcb
stc
test
sub
push
cmp
mov
lret
dec
cmpsb
std
push
mov
inc
lods
stos
leave
xchg
jp
mov
xor
sbbb
stos
add
loop
outsb
fs
adcb
mov
xor
fdivrl
pop
jne
mov
insb
leave
adc
pop
adc
ficoms
in
and
loopne
jbe
sbb
arpl
lret
pushf
and
jg
stc
sbb
popa
push
add
mov
loope
insb
lods
sar
nop
jno
pop
mov
addb
out
mov
js
mov
mov
and
sbb
les
add
jo
out
fimuls
rcl
pop
rcll
imul
mov
fimull
jb
mov
mov
pop
dec
jp
popa
hlt
xchg
adc
ja
movsb
imul
xchg
inc
stc
push
cmp
pop
sbb
mov
daa
ret
fbld
rol
insb
loope
hlt
cltd
pop
imul
enter
faddp
movl
repz
push
adc
xor
ret
adc
ret
outsb
out
fldenv
fildll
divb
or
lahf
lock
push
push
jnp
addr16
mull
cmpsb
pop
test
push
stos
cwtl
bound
push
or
push
push
div
dec
mov
push
sbb
add
adc
jno
inc
mov
cmp
dec
xlat
aad
das
cwtl
int
negl
push
or
adc
sbb
stc
dec
xor
xchg
mov
and
pop
xchg
or
push
push
daa
js
jae
mov
sbb
adc
sbb
push
lcall
pusha
test
loop
popf
inc
mov
movntq
out
repz
bound
dec
in
lods
mov
mov
mov
xchg
push
fcomi
shrb
xchg
sti
cmp
jae
dec
mov
fcmovu
sbb
in
add
aad
sub
or
inc
add
dec
push
loopne
push
lcall
pop
adc
sahf
repnz
mov
sbb
mov
add
mov
or
cli
nop
inc
lahf
std
mov
call
fwait
enter
and
loopne
xchg
mov
jg
adc
into
enter
outsb
xchg
mov
popa
dec
loop
cli
lods
movsl
sti
clc
cli
hlt
push
dec
shrl
adc
in
or
aad
and
testb
or
icebp
je
mov
aam
jp
mov
sub
mov
and
inc
jae
in
daa
test
pushf
in
arpl
movsl
fistl
scas
and
ret
and
stos
in
push
jmp
cld
inc
or
mov
inc
aas
xchg
adc
leave
ror
lcall
inc
and
repnz
testl
fxtract
fsubr
dec
lods
outsb
xor
jo
out
roll
mov
push
cmp
pusha
icebp
incb
sub
ljmp
jmp
pop
cmc
outsl
ret
adc
cmc
or
or
clc
ficompl
sub
dec
push
sub
add
jo
xor
and
mov
cmpsb
jbe
lods
sbb
mov
scas
mov
cmp
stos
mov
sti
jge
pop
call
scas
xor
int
inc
xchg
mov
aas
and
add
hlt
push
dec
and
pop
dec
push
inc
and
aad
jbe
gs
sub
and
pop
loope
pop
or
repnz
movsl
cmpsb
pop
mov
jmp
pop
lea
stos
xchg
jns
mov
fisttpll
stos
jae
or
push
data16
push
sbb
mov
cmp
inc
push
movsb
or
and
xchg
xchg
sub
les
push
or
outsb
or
push
or
aaa
push
cmc
mov
into
rcll
outsb
xor
sub
sbb
pop
mov
cmp
xchg
mov
int3
dec
mov
bound
jne
pop
int3
xlat
or
cmp
arpl
dec
xor
xchg
inc
pop
or
mov
stc
sti
std
dec
gs
cmp
popf
jle
test
ret
mov
or
pop
mov
cld
push
pop
dec
aad
outsb
movsl
js
loop
dec
addl
dec
repnz
aad
adc
testb
sti
dec
in
out
mov
cmpsb
cwtl
mov
mov
pop
mov
jns
cmp
jb
mov
fmull
out
cmp
push
lods
and
push
fsubl
aas
lcall
cwtl
mov
push
jnp
aad
stos
ljmp
mov
out
scas
aaa
add
push
mov
test
fisubrl
xlat
sbb
movb
push
pop
sti
and
scas
outsb
sarl
enter
lea
pop
inc
pop
push
xchg
cmpl
mov
shr
jne
push
imul
xorl
add
cmp
and
xchg
or
outsl
cmpsb
cmp
or
inc
lcall
mov
imul
lret
andb
lock
ja
xor
and
idivb
xchg
dec
mov
pop
add
sub
call
sbb
xchg
push
add
out
xchg
mov
mov
fstps
leave
mov
xchg
loope
pushf
mov
sbb
mov
xlat
pop
jecxz
das
inc
pop
test
and
fs
or
mov
push
adc
outsb
or
or
lahf
cmpsl
cmp
test
shl
sahf
cmp
and
das
enter
pop
ja
cwtl
mov
data16
cmpl
mov
push
hlt
test
lahf
push
pop
subb
mov
push
fsubrs
add
push
and
cmp
jmp
mov
fdivs
call
pop
cltd
pop
lret
dec
pushf
pusha
ja
ret
cmp
cmp
lahf
test
xor
jecxz
and
sbb
and
mov
out
inc
jle
sbb
aad
cs
add
arpl
out
push
scas
push
xchg
and
je
sahf
xor
test
push
mov
lret
pop
adc
sbb
jle
add
int3
inc
clc
aam
dec
rcl
xchg
cli
mov
or
mov
sbb
rcrb
pusha
icebp
add
cmp
outsl
cmp
cmp
pop
test
jle
push
or
xchg
rclb
pop
sbb
lods
and
jmp
outsb
push
mov
daa
and
cmp
loope
repnz
stos
ret
pop
jecxz
repnz
stc
mov
pop
cmovs
xchg
pop
into
push
lods
or
cmpsb
and
into
mov
flds
or
cmp
xor
insl
data16
das
dec
push
dec
popf
adc
jnp
insl
in
cmp
xorb
rclb
call
insl
sbb
lcall
das
test
insb
in
out
int
bound
mov
negl
xchg
stc
adc
push
bound
or
adcl
xchg
int3
loope
imul
inc
add
push
inc
xchg
adc
mov
test
mov
cltd
inc
add
mov
adc
fnsave
imull
jb
lods
add
jmp
xchg
push
mov
sbb
adc
xchg
stos
adc
cli
lea
test
bound
xchg
xchg
outsl
mov
xor
push
mov
lret
lahf
aas
ffree
or
xchg
test
mov
nop
repz
mov
test
or
jb
sbb
leave
adcl
dec
xchg
lret
repnz
js
lret
jmp
or
or
or
jno
sar
mov
jae
outsl
mov
ret
testl
orl
test
mov
mulb
insl
aad
call
or
jns
outsl
test
cld
ds
adc
paddb
out
call
adc
imul
jg
fbld
je
test
and
ret
mov
push
mov
xor
enter
iret
add
ja
loop
mov
cmpsl
mov
sbb
dec
push
popf
or
dec
inc
daa
inc
orb
repz
es
mov
and
push
lods
pop
push
mov
jle
test
or
push
dec
ds
addr16
leave
hlt
in
or
movsl
es
pusha
jge
aad
rcl
xor
insl
movsb
xchg
mov
addr16
pop
pop
inc
lret
jecxz
mov
jecxz
inc
or
outsl
push
jmp
sub
jae
out
add
cmpsl
or
fbld
and
insb
rcl
clc
mov
rcrl
jle
ss
adc
es
push
loopne
aad
repnz
mov
lret
add
lock
cmpsb
push
sub
outsl
popa
mov
cwtl
pop
lret
mov
xchg
aad
jmp
out
loopnew
inc
sbb
das
mov
cmpsl
jg
gs
sub
outsb
out
fstl
jmp
data16
mov
repz
or
and
or
jo
arpl
add
fdivrl
push
out
or
pop
movsl
cmp
xor
mov
sbb
int
mov
psrld
mov
xchg
dec
sarb
js
add
fidivl
ja
sub
mov
aaa
nop
ror
popf
xchg
js
out
clc
lahf
xchg
sub
adc
inc
dec
ret
xchg
fisubl
out
or
fstp
out
jl
pusha
lret
mov
xchg
pop
aad
add
xor
ficoml
jg
js
adc
inc
pop
mov
into
enter
cld
iret
mov
scas
xor
pop
and
mov
jb
or
test
push
mull
fiadds
les
mov
sbb
mov
jne
mov
sahf
adc
scas
xor
mov
push
xchg
hlt
pop
and
pop
incb
test
iret
ss
shr
mov
push
add
mov
test
mov
in
xor
add
inc
bound
sub
xor
push
mov
mov
scas
lods
lods
jnp
xchg
inc
mov
data16
outsb
mov
adc
daa
lret
aad
outsl
push
jecxz
scas
lock
fwait
lods
lds
stc
icebp
icebp
inc
cld
jnp
gs
loopne
out
xchg
mov
lods
dec
jge
sub
call
test
pop
xchg
shll
and
leave
rol
dec
mov
sbb
imul
sub
mov
sbb
shrb
lock
aam
repz
or
std
insl
cmc
cli
xorl
nop
aaa
lods
xchg
jmp
mov
sbb
add
in
aam
adc
in
sarl
enter
and
aaa
push
pop
mov
js
jnp
out
nop
sahf
stc
jl
imul
mov
faddl
inc
cmc
out
lods
dec
dec
mov
mov
mov
cld
fiaddl
cmp
dec
jge
out
mov
cmp
fldl
jb
pop
scas
ficomps
test
sbb
add
jne
sti
cmpsb
sub
mov
test
xchg
mull
mov
test
xchg
and
inc
xchg
scas
stos
xor
push
ja
mov
test
cmpl
xchg
adc
sub
inc
jnp
out
je
xchg
lods
jmp
inc
pop
mov
out
jb
mov
mov
dec
shll
fists
fbstp
rclb
fwait
inc
pop
shlb
js
sub
scas
sbb
call
jg
stos
and
add
cmc
jmp
sub
sub
jo
sbb
les
shll
imul
and
mov
call
jp
out
fisttpll
fld
add
mov
push
mov
loop
or
rol
add
xor
jge
out
adc
pop
and
push
iret
loope
mov
cmp
sbb
in
aam
pop
push
cmp
dec
xchg
or
addr16
hlt
test
in
movsb
addr16
xchg
or
mov
push
adc
or
add
or
jae
mov
out
arpl
jnp
pushf
pop
popa
out
imul
sbbb
jbe
not
sub
mov
and
movsl
jae
lods
gs
xorl
dec
jecxz
loop
or
in
xor
sub
jecxz
xchg
fdivrl
push
int
pop
ret
dec
repz
push
roll
mov
cmp
mov
outsb
or
shl
cmp
dec
xor
mov
sub
icebp
popa
pop
jl
mov
es
stc
movb
pusha
out
cmpsl
push
es
cli
xlat
es
cltd
popf
adc
repnz
adc
mov
nop
jle
dec
xchg
push
sbb
sbb
fidivrl
mov
mov
cmp
cmp
movaps
cwtl
je
cmp
aad
pop
adc
inc
ja
int
icebp
and
movsl
jmp
sbb
inc
sub
and
push
outsl
and
icebp
sbb
fcmovbe
je
cmc
ja
inc
scas
jmp
movsb
data16
outsl
test
sbb
and
insb
add
push
shlb
xchg
out
cwtl
jge
ds
leave
mov
idivb
fs
sbb
jnp
je
push
mov
std
dec
leave
jne
daa
sbb
mov
jno
lea
fidivs
jae
aam
xor
pop
daa
sbb
mov
test
roll
sub
mov
sbb
js
sti
ret
cmp
idiv
or
inc
data16
sub
xor
inc
fisubs
push
in
mov
das
stc
inc
push
lods
jecxz
cmp
xchg
out
xchg
cli
pop
add
xchg
or
sbb
je
xor
ret
les
jae
mov
xor
pop
clc
fcom
sub
xchg
dec
adc
enter
int3
arpl
or
pop
xchg
mov
jl
add
inc
negb
adc
xchg
scas
clc
push
cmp
and
mov
sbb
out
xor
push
sbb
cmp
inc
sbb
and
lret
adc
push
xlat
lds
inc
inc
adc
mov
iret
or
add
icebp
mov
fsubp
aaa
ret
push
push
mov
icebp
repz
stc
out
push
xchg
sub
movsl
dec
std
cmp
fsubs
stos
xchg
mov
adc
lods
imul
mov
insb
adc
push
and
cmp
pop
push
in
fldenv
pop
adc
sbb
lods
push
and
ss
mov
ja
push
mov
lds
pusha
out
add
jbe
pop
leave
repnz
flds
addr16
stos
lea
hlt
push
mov
fiaddl
enter
out
mov
pop
and
sub
nop
loop
mov
ja
or
mov
lods
int3
ficompl
dec
xchg
andb
repz
addr16
xchg
fs
cmp
aam
mov
data16
gs
into
daa
loop,pn
add
data16
sbb
pushf
dec
orl
add
or
movsl
dec
sbb
push
cli
mov
imul
mov
inc
push
and
dec
test
aaa
mov
push
scas
cmp
fisttps
pop
fmul
mov
inc
jg
sbb
sbbl
divl
js
mov
mov
and
fisubs
fsubl
mov
enter
pop
cwtl
aam
lods
inc
inc
mov
jle
fcomps
mov
out
add
fldenv
call
pop
sub
arpl
aam
decl
fchs
mov
sub
mov
push
push
inc
mov
cwtl
sbb
adc
push
movsl
das
in
addr16
or
enter
out
dec
add
test
jo
add
mov
adc
mov
push
stos
rorl
aas
jno
adc
repz
pushf
cwtl
adc
mov
or
jb
or
leave
xchg
ljmp
xchg
xchg
mov
sbb
ficoms
int3
rcrl
aas
add
or
sbb
addr16
or
inc
adcb
imul
int3
pop
push
int3
icebp
in
mov
testl
dec
push
or
dec
push
jecxz
mov
lahf
ret
push
ret
fstl
sub
int3
inc
dec
dec
enter
and
cmpsl
imul
fs
scas
push
pop
pop
sbb
push
pushf
out
mov
ds
jecxz
jne
or
fmull
cwtl
dec
arpl
hlt
std
addr16
dec
aad
inc
mov
jmp
movsl
stc
jmp
out
mov
ljmp
scas
inc
xor
dec
dec
push
imul
fdivp
push
out
pop
push
mov
and
fsubrs
stc
jne
fidivrs
mov
adc
dec
repnz
loope
add
movsb
scas
cmp
cld
jmp
mov
jge
jg
or
xchg
mov
or
aas
sbb
mov
int3
jno
lds
dec
inc
pop
adc
fs
stc
cmp
bound
rcr
nop
pop
jne,pn
inc
mov
jecxz
sbb
jp
jne
mov
les
pop
call
dec
cmp
stc
gs
in
outsb
sub
pop
add
push
cltd
adc
pop
enter
pop
ret
leave
mov
xchg
dec
xchg
push
jb
repz
aaa
mov
jnp
xor
dec
xlat
aaa
out
add
lock
outsl
mov
stos
pop
iret
ucomiss
inc
clc
iret
cld
mov
pop
enter
dec
out
dec
stos
dec
mov
push
ja
jge
xchg
jns
pop
data16
je
outsb
addr16
push
dec
and
push
inc
jl
mov
mov
shrb
ja
sub
data16
data16
pop
and
push
mov
pop
add
jno
in
xchg
or
inc
or
cmc
ja
mov
dec
lcall
sahf
push
xor
cs
ljmp
push
mov
xchg
test
loopne
sbb
adc
subl
loopne
adc
int
mov
outsl
dec
add
inc
push
stos
fidivrl
sub
mov
stos
pusha
xchg
test
jg
and
cs
ljmp
push
inc
xor
sub
out
and
scas
sub
xchg
and
fbld
rol
cmp
jl
push
fsubs
mov
pop
imull
pop
cli
push
jo
mov
jl
ljmp
imul
jl
jl
dec
sbb
cvtps2pi
lahf
push
dec
cmp
mov
mov
cmp
or
inc
push
and
push
add
int3
cmp
loopne
gs
scas
ret
push
push
xlat
icebp
imul
test
aaa
popf
movsl
push
pushl
mov
push
inc
fisttpll
es
cmp
sub
aaa
pop
push
lods
sbb
mov
das
cmp
push
sti
jns
inc
pop
roll
fwait
pop
pop
jo
ret
mov
dec
fxrstor
sbb
xchg
les
leave
test
mov
xchg
xor
mov
mov
outsl
sub
xor
ljmp
ja
lock
lods
in
mov
mov
pop
mov
sbb
lahf
mov
adc
xor
in
jo
xor
lret
jns
dec
inc
pop
fdivr
sahf
mov
notl
lret
les
aam
in
mov
outsl
jne
xchg
mov
xor
lods
inc
dec
jl
jae
fnsave
iret
or
xchg
je
ds
adc
or
stos
xor
jae
pop
push
adc
cmpsl
int3
pop
inc
cmp
sbb
les
sub
call
ss
mov
adc
dec
add
ret
std
mov
mov
pop
or
aad
rcl
jo
xchg
repnz
xor
fwait
adc
aaa
xorb
sbb
clc
shrl
loope
xor
adc
inc
out
mov
lds
pop
adc
add
xorl
out
jge
add
hlt
adcb
popf
mov
xchg
mov
imul
in
mov
push
movntq
cmp
xchg
shll
jae
mov
mov
cmc
xchg
roll
cmp
push
int
xchg
loopne
jae
rcrb
adc
popa
push
sbbb
int3
cmp
pushf
or
jno
clc
add
mov
es
in
imul
jnp
push
out
fs
jo
jno
adc
push
inc
fsts
out
and
sub
dec
std
sbb
paddsb
out
lret
pushf
je
out
sub
ret
push
sbb
pop
push
movsl
aam
mov
outsb
adc
xchg
xor
call
mov
inc
cwtl
scas
xchg
mov
lret
aaa
jmp
xor
movl
dec
mov
jnp
andb
rcrb
or
mov
pusha
lret
dec
mov
cmp
dec
cmp
or
clc
arpl
call
jg
addr16
add
sub
lahf
xchg
pop
sub
jle
dec
aam
stos
hlt
jmp
inc
scas
or
mov
and
mov
sbb
cmc
aad
pusha
and
mov
push
xlat
xlat
add
ret
iret
lock
pop
cmc
xchg
es
negb
push
dec
clc
outsl
fsub
sub
dec
lock
pavgw
add
dec
sbb
xchg
daa
add
bound
hlt
dec
cmp
outsb
leave
fwait
inc
mov
and
ffreep
mov
cmp
ja
sbb
pushf
xlat
push
lods
leave
out
adcb
and
mov
shrl
mov
and
xor
test
push
xor
jle
ss
and
push
fs
mov
mov
aaa
pop
sub
cmpsb
add
pop
aas
lds
mov
adc
or
loope
or
fistpll
dec
xchg
outsb
push
adc
jns
scas
leave
inc
orl
and
mov
inc
test
add
test
mov
add
ja
mov
outsl
pop
push
nopl
sbb
into
repz
pop
adc
xchg
cmpsb
mov
xchg
mov
les
test
adc
push
xor
out
dec
or
mov
stos
pop
loopne
pusha
xor
inc
xchg
arpl
addr16
add
push
repz
pusha
push
mov
shll
pop
adc
sahf
stc
stos
jl
mov
cs
dec
fs
jle
ljmp
dec
xor
pop
test
or
fcmovb
repnz
or
jl
lret
inc
push
ret
shlb
in
jb
dec
jo
xchg
sbb
clc
ret
test
cmp
jae
scas
loopne
icebp
stc
orb
movsl
repz
int
rcrb
stos
lahf
dec
mov
add
jbe
xor
mov
push
or
addr16
add
xchg
pop
xor
sub
dec
addr16
insl
add
xor
bound
popf
mov
adc
add
pop
mov
sbb
xchg
sbb
subb
int
jmp
mov
sub
shll
int3
clc
in
push
adc
popa
mov
inc
push
int
add
xor
loope
push
sub
insb
sub
cltd
sub
cmp
loop
inc
scas
enter
pop
cwtl
lods
fsubrs
push
andb
inc
jecxz
imul
pusha
call
loope
pop
push
pusha
adc
loop
sbb
fnstsw
fsub
sahf
inc
out
out
cmpsl
sahf
dec
in
dec
lea
mov
fwait
lds
add
inc
or
sbb
push
push
jle
adc
mov
mov
dec
sub
add
mov
add
rcl
mov
movsl
pop
cmp
fistpll
aas
outsl
in
outsb
mov
popa
scas
loope
jp
incb
xchg
hlt
lret
sub
pop
inc
fcomi
roll
jbe
jne
lods
scas
repnz
jmp
test
fwait
xchg
xchg
lahf
xchg
dec
dec
push
jl
lea
mov
inc
lret
lods
push
mov
bound
and
loope
stos
outsb
dec
rcrb
push
ja
lret
pop
enter
jb
pop
sarb
into
mov
mov
xor
push
mov
rcrl
ror
pop
xor
xchg
cmp
push
js
xchg
adc
adc
xchg
mov
lea
mov
jo
sbb
jecxz
add
repnz
and
fsubrs
fiadds
icebp
xchg
sub
lahf
sub
push
stos
mov
iret
stos
mov
push
mov
mov
inc
mov
jge,pt
pushf
fimull
and
clc
and
adc
mov
pop
mov
mov
lods
push
pop
les
test
and
mov
push
push
repz
xchg
sbb
aaa
sti
lret
scas
mov
mov
jle
sub
cmp
lret
sub
sub
cs
or
shlb
push
movsl
mov
or
outsl
mov
xchg
dec
mov
fsub
jbe
lret
mov
int
pop
jnp
xchg
arpl
sarl
sbb
cltd
in
lret
fwait
jp
insl
xor
mov
xor
jbe
mov
add
das
jle
xchg
mov
es
sub
xlat
push
mov
push
js
xchg
adc
cmpb
xchg
sub
jbe
pushf
mov
sbb
pop
pop
test
mov
inc
mov
jge
cmp
je
lret
push
and
jo
loopne
dec
cmp
ljmp
adc
cli
pop
sub
inc
test
jl
xor
pop
add
xchg
movsl
lods
or
fwait
roll
cmpsl
aam
fidivl
mov
sbb
sub
sti
xchg
mov
negb
int3
cmpsl
sbb
call
into
cs
stc
fcomip
pop
mov
xor
shl
sub
int3
cmc
inc
jno
ja
cli
push
cwtl
push
xchg
xor
pop
xor
fldenv
inc
es
ljmp
sub
fs
push
mov
andb
pop
imul
pop
clc
aam
ljmp
aam
dec
lods
ror
jge
test
nop
fldenv
shl
repz
fwait
pop
xor
nop
adc
addb
in
mov
sub
hlt
xchg
mov
rcr
jo
or
push
ljmp
push
mov
xor
lds
dec
insb
setne
movsl
aaa
outsb
mov
xchg
push
lods
xchg
loop
movsl
inc
call
jns
jnp
es
call
mov
mov
lea
mov
lcall
fstl
in
movsl
xchg
jbe
fsub
lds
ret
bound
cmpsb
mov
sbb
test
jne
cwtl
int
sub
or
and
sbb
pop
popa
out
fistpl
and
fimuls
add
mov
or
lcall
dec
shr
jbe
orl
mov
cmpsl
xor
and
stos
adc
cmpsb
mov
shrl
adc
inc
addr16
ret
and
shlb
jnp
enter
lcall
push
cli
dec
mov
scas
int
xchg
fisubrl
xchg
adc
ljmp
xor
cs
outsb
cs
sub
cwtl
cwtl
lret
push
xchg
sub
enter
inc
mov
cmp
inc
add
js
into
sbb
mov
pushw
es
xchg
loopne
out
adc
jge
cmp
mov
jbe
adc
fdivrs
pop
mov
in
pusha
sub
lahf
addr16
fadd
xchg
scas
and
daa
push
push
shlb
inc
mov
orl
out
fildl
data16
inc
and
rorb
bnd
ret
lahf
mov
mov
cmp
stc
pop
adc
roll
sbb
lahf
xor
subl
fisubrs
cmp
fcoms
popa
lcall
and
addl
in
and
inc
in
pop
jle
les
xchg
ds
sbb
add
mov
in
clc
pop
pop
imul
adc
sti
or
lds
push
push
std
mov
pop
js
mov
loope
rcll
jp
mov
mov
test
inc
rcrl
and
xchg
call
repz
inc
test
xor
inc
pop
mov
lahf
in
ljmp
jp
cmp
add
add
add
sbb
ds
iret
nop
repnz
outsl
js
dec
xchg
iret
push
int
mov
movsb
push
stos
mov
rcr
fcoms
les
dec
sbb
stc
fwait
stc
jb
std
hlt
loope
out
xlat
pop
cmp
sbb
inc
mov
pop
sub
push
hlt
les
sub
pop
mov
out
jae
loop
out
stos
imul
iret
into
aad
jb
xor
sbb
mov
fldl2e
aaa
in
jp
add
gs
movsl
and
lcall
into
mov
cwtl
and
cmp
adc
push
and
jnp
adc
cli
rcll
mov
mov
aas
inc
xorl
aas
mov
clc
jb
sub
test
scas
inc
loope
adc
and
push
xor
dec
stos
pop
aaa
jne
mov
dec
cmc
dec
cmp
pusha
xchg
pop
outsl
push
movsb
adc
jne
repz
lock
lcall
bound
add
aaa
les
mov
faddl
aad
andb
adc
jecxz
sbb
ret
push
xor
pop
push
lret
cmp
repz
jne
mov
ljmp
rcrl
outsb
and
and
call
shr
rcrb
push
sti
enter
pop
mov
in
in
fs
inc
or
mov
ret
call
push
push
xchg
js,pt
int3
lods
mov
aam
icebp
jnp
adc
popa
in
js
vhsubpd
add
xchg
repnz
es
inc
leave
lds
or
pop
lods
fwait
shrl
iret
xchg
add
dec
and
add
daa
cmp
pop
sub
lcall
mov
ja
icebp
nop
testb
dec
push
mov
sbb
nop
test
pop
pop
arpl
imul
fwait
lock
mov
dec
addr16
xlat
ret
sbb
addr16
aad
movsb
sarl
xchg
divl
into
sub
fwait
andb
pop
rol
shlb
adc
imul
repnz
xor
inc
dec
stos
mov
sahf
mov
or
jge
std
cld
mov
push
ret
pop
lret
xchg
dec
rcrl
cmpsl
lock
inc
cmp
sbb
xchg
leave
popa
mov
pop
push
sbb
addr16
sbb
movsl
sub
dec
xchg
nop
xchg
adc
cltd
data16
push
xchg
xchg
push
es
xor
lret
lods
xchg
mov
xchg
into
lds
outsl
int3
cs
cltd
js
mov
jb
push
or
jecxz
stos
push
xor
les
out
scas
dec
or
pop
js
and
fstpl
mov
lahf
les
ljmp
insb
enter
sti
imul
stc
pop
and
loopne
push
stc
cs
jne
repnz
pop
adcl
cmpb
xchg
mov
shr
stos
insb
sbb
dec
rclb
incb
jne
jae
inc
fisttps
sub
inc
jb
mov
andl
test
push
push
pop
jo
xchg
mov
rorl
sub
mov
out
xchg
mov
jb
jge
or
fsts
mov
mov
xchg
jmp
jp
daa
jbe
out
fistps
sti
es
ret
sbb
pop
mov
sub
lret
outsb
lods
clc
enter
insb
pop
das
dec
adc
dec
adc
mov
cltd
insb
aad
xchg
mov
mov
scas
push
mov
jge
mov
pop
gs
cmc
fldenv
sub
or
out
stos
mov
in
sub
sub
popa
xchg
mov
repz
mov
add
ja
add
pusha
push
jmp
repnz
es
bound
imul
mov
sbb
jmp
loope
das
xor
shlb
adc
sbb
lock
pop
int
pop
push
or
scas
pushf
push
mov
sarb
int3
mov
fldenv
out
xchg
xchg
js
std
push
ret
int3
cmc
inc
or
sbb
xchg
mov
test
add
push
cmp
inc
mov
cwtl
push
mov
xchg
xchg
adc
ja
data16
mov
cltd
movb
jg
mov
and
sbb
add
pop
xchg
dec
out
arpl
iret
imul
shrb
xchg
popa
sbbb
push
in
xor
cmp
addr16
fimuls
out
jnp
pop
pushf
inc
push
and
out
xchg
xchg
stos
dec
and
insb
ja
mov
sub
mov
adc
and
mov
dec
jle
bound
mov
adc
dec
ret
inc
mov
mov
mov
test
int
xlat
xlat
dec
mov
fadds
pop
xchg
lods
dec
jb
push
mov
xchg
hlt
sti
repz
xchg
jle
jnp
cmp
sub
xchg
jnp
mov
lcall
xor
xchg
xchg
mov
pop
fwait
mov
pusha
add
mov
jmp
push
addr16
mov
pushf
push
sarb
sbb
inc
push
ror
mov
jbe
xchg
call
out
xor
adc
ret
xchg
jnp
int
nop
cmp
mov
xchg
jecxz
pop
mov
dec
test
sbb
xor
ret
les
dec
pop
xchg
daa
xchg
xor
jo
xchg
jb
loope
mov
cli
iret
lds
sbb
enter
add
add
and
out
mov
mov
out
dec
cmp
imul
cwtl
mov
push
cwtl
dec
int3
iret
cltd
lea
enter
negl
push
lret
adc
sbb
xchg
fldl
mov
rorb
xchg
sti
or
cmp
xchg
adc
pop
xchg
sbb
jne
les
sbb
mov
enter
pop
out
cs
push
adc
jnp
cmp
sar
mov
dec
loopne
outsl
add
jae
std
and
stc
int3
ret
jbe
xchg
cli
xor
push
sbb
std
fnstcw
fucomi
in
repz
push
lret
dec
inc
cmp
jb
lret
cmp
js
mov
enter
adc
pop
sahf
jnp
mov
out
shr
sti
stc
das
sub
xchg
mov
sub
mov
xor
cmp
add
pusha
pushf
mov
lods
gs
adc
sahf
add
into
mov
fwait
sbb
adc
outsl
jns
pop
or
fisubrs
add
out
sbb
cmpl
call
imul
lds
cmpsl
stos
push
dec
insb
les
jp
push
arpl
mov
mov
pop
imul
mov
outsl
lea
scas
mov
push
xor
add
icebp
sar
mov
push
mov
dec
add
mov
fimull
in
sub
mov
sub
jae
add
shll
push
mov
push
vmovmskps
jmp
or
cltd
fs
leave
push
lcall
adc
xor
testb
adc
shrl
mov
pusha
lcall
fwait
scas
sub
xlat
push
out
xchg
push
sub
mov
int3
js
mov
dec
inc
data16
dec
sbb
or
cmp
pop
fsubrp
pop
xchg
mov
jno
cmp
fnsave
jnp
pop
mov
sub
add
pushf
sub
rolb
mov
clc
imul
into
mov
mov
sahf
adc
pop
fldenv
pop
fisubrl
rolb
filds
xor
pop
ret
xlat
daa
xchg
stos
xchg
movsb
pop
sbb
sbb
pop
add
mov
or
movsb
loope
jo
dec
fwait
push
fs
icebp
cmp
lahf
jge
add
icebp
notb
mov
aas
jbe
push
dec
test
add
mov
out
repz
cmp
xor
sbb
addr16
inc
push
or
pop
icebp
rcrl
mov
lret
xor
or
pop
je
xlat
popf
andb
roll
popa
lea
mov
call
push
cmp
adc
xchg
mov
pop
hlt
pop
shl
lea
cmpsb
xor
mov
push
ljmp
push
lock
daa
mov
sbb
jmp
insb
mov
or
fldcw
scas
rorl
roll
push
lods
daa
out
inc
into
les
xorl
sbb
adc
push
popa
jmp
xchg
lods
icebp
mov
jo
sub
gs
das
xchg
clc
rol
imul
rclb
mov
insb
and
lods
adc
sbb
shlb
mov
ds
or
and
add
mov
mov
or
or
not
sbb
shlb
push
xlat
bound
out
sarl
mov
add
dec
pop
fldt
add
sub
mov
mov
mov
sbb
ret
sti
mov
cmp
stc
ret
loop
push
mov
jl
sbb
pusha
leave
inc
insb
add
mov
add
adc
rcll
pop
lahf
dec
adc
imul
sbb
mov
or
sbb
mov
gs
fbstp
pop
addr16
dec
mov
shrb
cmc
xchg
shl
shr
stos
dec
jnp
cmp
mov
xor
dec
jne
or
inc
test
pop
jo
mov
out
fisubl
adc
cmp
adc
sub
daa
or
cmpsl
xchg
add
mov
mov
jae
and
popf
nop
sahf
test
enter
xchg
jae
jle
stos
popf
mov
in
dec
scas
inc
xchg
push
sub
mov
cwtl
movsb
cmp
jp
out
loopne
and
xchg
sbb
rolb
lods
fs
icebp
xor
arpl
loope
mov
cmp
xchg
shr
and
lods
or
ds
call
das
dec
cmp
pop
sbb
test
inc
shll
sub
int3
test
mov
dec
shll
dec
push
dec
lods
and
flds
mov
aam
rolb
shll
subb
mov
sbb
add
pop
mov
sti
shlb
jno
das
and
mov
adc
roll
mov
sti
or
jge
test
push
jge
int
inc
jmp
sti
ja
push
fcomi
xor
push
mov
sarl
xchg
pop
pop
sub
iret
inc
push
push
mov
sti
add
aas
ss
pop
fidivrs
fistl
mov
push
pop
imul
stc
jno
dec
jecxz
pop
fistpl
cwtl
mov
push
adc
scas
jne
or
jnp
lods
das
xor
bound
xorl
outsb
and
out
inc
loopne
jae
shll
inc
jmp
xchg
dec
outsb
sti
cwtl
inc
ja
push
imul
fwait
push
aaa
sbb
add
inc
rolb
push
sub
lds
pusha
sti
imul
int
ljmp
fs
lds
outsb
xchg
je
ja
jmp
pop
mov
adc
pop
push
out
fcomi
out
in
adc
loopne
push
lods
xor
fistps
cmp
lret
inc
xchg
xchg
loop
pusha
dec
xchg
sbb
mov
sub
movsl
mov
cmpsb
dec
dec
mov
xor
jae
push
lea
mov
test
jns
in
int3
test
xchg
hlt
mov
add
pop
mov
sarw
mov
inc
ret
pop
shl
lret
sti
out
out
insl
dec
popf
and
mov
gs
loope
cmp
jp
cmp
jne
lods
in
push
int3
in
sub
xor
inc
fisubrs
test
clc
push
stos
jl
jne
and
popf
mov
insb
test
cmp
or
adc
adc
or
push
pop
in
ljmp
jmp
mov
or
inc
xchg
dec
nop
repnz
xchg
mov
sbb
fildll
xorb
push
xchg
mov
addl
insl
enter
mov
dec
stc
out
or
cld
fstpt
test
bnd
xor
fsubrl
mov
mov
clc
lret
out
jmp
ljmp
sahf
and
ss
daa
pusha
std
push
insw
cmp
lods
adc
pop
pop
mov
aaa
lods
out
jecxz
loopne
mov
cmp
cmp
adcb
adc
cmp
jmp
and
fs
xor
pop
in
out
add
fbld
std
test
pop
inc
sbb
mov
inc
sub
dec
jg
add
mov
xchg
mov
push
aad
jno
imul
xor
lods
fadd
xor
hlt
sub
xchg
pop
es
ljmp
jmp
sti
or
push
dec
clc
scas
ja
les
aad
pushl
das
lret
and
call
sbbl
mov
mov
call
push
loope
mov
std
jge
imul
push
mov
popa
sbb
jbe
lret
pop
test
in
pop
push
out
push
adc
cmp
add
dec
shlb
xchg
push
popf
cltd
movsb
push
js
or
fwait
scas
mov
dec
pop
or
lock
cli
push
pop
leave
add
sub
fmull
jecxz
lea
daa
xor
inc
inc
dec
pop
xchg
mov
cmp
lret
mov
jmp
bound
adc
fs
pop
adc
cmp
popf
das
dec
out
sahf
pop
cmpsl
sahf
push
cmpsb
fldl
sub
xchg
adc
nop
js
loope
add
fidivl
or
cwtl
or
jge
xchg
aas
jbe
movsl
pop
in
enter
mov
adc
jg
outsl
cmp
mov
or
mov
fcmovnb
or
jge
mov
mov
mov
lock
mov
mov
dec
inc
lea
scas
mov
xor
pop
sahf
js
cmp
xchg
punpckhwd
jle
call
stos
rcl
sbb
mov
pop
push
cmp
pop
in
adc
push
push
mov
outsb
adc
cwtl
or
push
gs
cmp
sub
pop
jmp
lock
iret
mov
jo
mov
lret
xchg
pop
sub
jg
fwait
sub
adc
pusha
fadd
out
mov
sarl
mov
inc
mov
inc
jns
out
cmpsb
in
push
mov
adc
xchg
mov
pop
outsl
leave
inc
pop
cmpsb
jo
dec
movsb
pop
push
cmp
pop
imul
jae
fwait
mov
or
stos
arpl
arpl
cmp
idiv
lds
and
cmp
fistl
mov
add
sti
push
out
inc
scas
cmp
adc
adc
test
push
pop
faddp
shlb
cmpsb
repnz
or
push
lret
jo
imul
es
inc
sub
mulps
xor
cmp
jle
aam
xor
rolb
test
pusha
push
or
jno
pushf
sub
je
imul
sub
jl
sub
mull
hlt
cwtl
jb
cld
les
aam
push
js
sarl
and
aad
jo
stos
loop
jns
and
mov
cli
inc
sub
jno
mov
ret
icebp
add
jl
xor
push
push
movsl
insl
or
movsl
movsl
ret
mov
dec
test
adc
in
outsb
ret
movsl
dec
aas
add
das
jae
push
ss
icebp
addl
ja
lret
fstl
cmp
pop
adc
add
in
jae
jp
or
adc
outsl
test
std
xchg
data16
jae
jnp
out
lret
xchg
pusha
out
push
xchg
pop
lahf
jbe
mov
mov
cwtl
mov
push
push
push
add
pop
jnp
inc
loope
data16
imul
adc
lret
cmp
rorb
adc
loope
cmp
ret
pop
pop
pop
xor
mov
stos
test
bound
cli
mov
int
je
pop
adc
in
mov
je
scas
mov
popa
mov
idivb
aaa
mov
sub
cmc
popa
dec
insb
call
fisttpll
mov
and
pop
push
adc
fcompl
mov
add
pusha
pop
bswap
sti
test
dec
out
imul
pusha
pop
js
js
shll
jge
inc
dec
shll
add
out
xor
sub
imul
daa
fsubp
dec
rol
and
fidivrs
inc
sub
xchg
fistpl
push
loopne
dec
mov
ficompl
mov
je
cmp
push
xchg
test
and
sub
pop
fldt
ds
or
popl
mov
icebp
jg
nop
int3
pop
jecxz
loop
or
lods
xchg
jecxz
stos
add
out
subl
push
and
les
and
sbb
jle
pop
fimull
jmp
sbb
ljmp
lea
xor
mov
imul
arpl
jae
dec
adc
xchg
mov
jp
mov
and
xchg
mov
test
mov
fnstcw
cs
cmp
push
notb
addr16
or
sbb
fdivrs
cmp
cwtl
xchg
jmp
ret
push
je
inc
adc
ret
pop
mov
pushf
lret
push
push
jecxz
xchg
outsb
ljmp
xor
out
test
mov
push
xor
add
sahf
and
dec
sub
jae
test
add
ficompl
pop
out
stc
fdivrs
mov
and
or
iret
inc
push
cmp
dec
adc
hlt
outsb
pop
xchg
mov
add
repz
jmp
adc
inc
mov
and
cmp
cmp
mov
push
clc
int
dec
repz
and
repnz
jb
lahf
add
leave
into
gs
lock
js
incl
int3
es
inc
insl
jmp
lret
mov
dec
mov
mov
mov
add
test
xor
xor
sbb
xor
mov
cmp
cld
add
je
ljmp
stos
push
rolb
dec
push
sarl
mov
jnp
inc
int3
fucomi
jle
mov
pop
push
pushf
sarl
clc
out
je
sahf
aaa
adc
mov
pop
adcb
ljmp
aad
jg
outsb
pop
push
hlt
insl
mov
inc
or
push
mov
push
pusha
pop
mov
push
das
shl
addl
jae
push
test
pop
outsb
cld
adc
repnz
cmp
nop
ljmp
mov
getsec
mov
and
ret
test
imul
cmp
jg
mov
push
xor
std
call
call
imull
push
pop
sub
jmp
rcrb
pop
ja
jmp
add
ja
hlt
mov
ret
xor
add
push
popf
push
dec
xchg
arpl
out
jle
jae
mov
mov
jle
scas
mov
cmp
cwtl
mov
sub
rorb
ja
or
inc
shrl
les
jecxz
adc
int
outsl
pop
or
push
jle
loop
pusha
aad
arpl
mov
jmp
pop
jno
lock
fnstcw
push
dec
xchg
test
pop
xchg
jp
mov
arpl
xchg
mov
jo,pn
inc
xchg
jne
dec
mov
push
cmp
sbb
xchg
xchg
xor
jno
lods
sub
cmp
sbb
xlat
es
or
dec
lds
fwait
dec
pop
xchg
cli
ds
push
cmp
sbb
insl
jo
or
push
dec
fsubs
into
dec
pop
cmp
xchg
lahf
insb
mov
sbb
inc
mov
daa
pop
testb
inc
es
shll
cmp
cmp
adc
gs
adc
cmp
gs
test
cmp
or
lods
xor
adc
subl
mov
insb
faddp
out
faddl
dec
lcall
sub
lea
jecxz
fistpl
xchg
push
cmp
or
sub
into
sbb
dec
std
pop
adc
ds
mov
cmpsb
bound
dec
stos
cmp
rcrb
pop
rclb
jno
int3
inc
clts
mov
mov
icebp
jbe
arpl
add
cld
lret
scas
and
cli
fmull
push
dec
mov
clc
popf
cmp
in
mov
mov
in
popf
add
test
sbb
rcrb
jmp
sub
mov
dec
push
je
cwtl
push
sbb
sahf
xorl
adc
xchg
or
add
jecxz
add
loopne
mov
sub
js
leave
inc
shll
cli
mov
pop
push
adcl
jle
fstpl
imul
shll
cmp
pop
fbstp
cmp
lods
xchg
xor
lea
stos
cmp
loopne
xchg
mov
dec
push
rcll
and
out
sub
aam
ret
adc
into
imul
adc
fisubl
cld
sub
bound
rcrb
add
xlat
repnz
pop
dec
aaa
ss
or
lea
les
cmc
lds
incb
dec
fldt
push
out
test
outsl
aas
mov
adc
rorb
into
fwait
hlt
repnz
call
les
addb
mov
adc
sub
mov
inc
or
add
mov
push
data16
rcr
fisttpl
loop
fptan
push
js
ja
clc
xor
sbb
add
and
mov
inc
sub
divl
ret
jbe
and
fwait
out
test
mov
push
rorb
and
push
dec
mov
and
sub
mov
sbb
loop
lods
sub
and
adc
mov
mov
push
dec
outsl
jle
in
xchg
mov
icebp
ret
mov
or
pop
push
mov
hlt
sbb
cmp
rcl
sarb
sub
inc
das
xor
inc
and
fnsave
aad
pushf
lcall
cmc
stos
xchg
mov
pop
mov
and
mov
dec
jmp
cs
movsl
out
xor
ja
mov
mov
ds
or
add
or
loopne
test
sti
outsb
enter
out
test
pop
inc
adc
jge
pop
in
in
dec
dec
pop
cmp
jmp
xor
jmp
inc
es
popf
in
scas
movsb
addr16
mov
mov
jno
push
xchg
and
in
orl
rcrl
aaa
imul
imul
mov
cmp
jge
test
pop
add
mov
xchg
jne
in
push
mov
ljmp
and
fcoml
lahf
ljmp
inc
dec
cmpsb
dec
cltd
inc
pop
or
stc
xor
and
js
ficomps
gs
add
lret
in
jbe
add
fisttpll
mov
loope
sub
xchg
xchg
dec
sbb
sbb
out
and
test
xor
data16
pop
sahf
lahf
repz
in
aad
cmp
push
sub
fwait
icebp
jnp
int
ret
sbbl
enter
mov
movsb
add
stos
mov
lret
xchg
das
and
or
or
cmpsl
add
scas
je
ret
add
and
mov
mov
push
xor
jne
mov
adc
push
xor
fwait
cmpsb
in
lcall
jg
inc
nop
dec
outsl
xchg
in
xlat
test
rorl
xlat
ja
test
inc
cmpsb
push
rcl
popa
mov
rcrb
in
push
and
xor
cmp
xchg
movsl
clc
xchg
loop
mov
pop
shlb
add
push
cmp
dec
loopne
pop
push
insl
push
xor
scas
fisttpl
inc
add
pushf
fs
movsl
adc
outsl
lds
pushl
call
push
fcomps
mov
gs
andb
insb
mov
xor
and
pop
cltd
test
ds
inc
lds
jb
inc
mov
dec
or
and
dec
cmpsb
icebp
fidivrl
cmp
sub
jb
les
push
call
pushf
inc
loop
add
dec
lock
jg
ljmp
cltd
lods
xor
mov
or
xchg
std
bound
sub
roll
std
mov
adc
dec
movsb
hlt
or
arpl
lcall
sarb
pop
ljmp
push
std
fists
cmpsl
lret
push
subb
outsb
pop
or
out
fcomps
mov
mov
mov
dec
hlt
push
jno
mov
aad
cmp
lcall
inc
lcall
andb
inc
insb
test
aad
mov
ss
fcom
cmp
je
dec
pushf
cmp
xor
jge
in
jmp
cmc
out
test
and
popfw
nop
dec
pop
add
push
push
add
xor
adc
mov
loope
ret
sub
mov
imul
xchg
push
or
mov
adc
aaa
aam
or
sti
jmp
sbb
mov
dec
fcompl
xchg
cmp
jecxz
lret
arpl
cmpsl
inc
mov
cmp
rclb
xchg
cmp
mov
lret
mov
int3
int
xchg
push
sub
mov
cmpsb
or
test
outsb
addr16
pop
aad
mov
jecxz
test
mov
pushf
xchg
and
aam
outsl
fcmovbe
sub
pop
pop
ja
movsb
das
cmc
mov
xchg
in
or
sub
faddl
adc
lret
mov
in
cmp
xchg
mov
sbb
mov
test
xchg
mov
fwait
push
adc
jnp
push
in
aaa
jne
jno
push
pop
pop
cli
pop
cli
mov
shrb
mov
add
addr16
inc
repz
push
inc
sub
push
mov
jmp
jns
in
push
das
inc
inc
arpl
jo
je
pop
js
imul
push
jecxz
sahf
cmc
dec
sub
roll
sub
lods
sbb
in
mov
pushf
jne
pop
pop
int3
fwait
jbe
push
jge
sar
inc
lods
xchg
aad
test
pop
add
stos
fistps
arpl
aas
or
mov
push
int
sub
out
ljmp
and
xchg
cmc
push
lahf
push
sbb
or
loop
repnz
sub
push
add
icebp
xor
jl
sub
or
mov
and
push
mov
xchg
addr16
rcl
scas
xchg
sub
nop
inc
shlb
mov
ds
daa
jnp
sub
or
fistl
fimull
jecxz
inc
mov
cli
jbe
hlt
push
aam
adc
dec
inc
pop
bswap
cwtl
repnz
pop
mov
lret
xchg
test
outsl
rclb
loope
lods
js
mov
imul
insb
repz
adc
jp
inc
pop
cmp
fwait
xchg
daa
lods
cli
outsl
inc
mov
sarl
pushf
faddl
sub
push
mov
loope
ret
push
and
push
mov
jae
fcoml
dec
adc
sub
loope
dec
push
outsb
out
fs
sbb
iret
xor
and
popa
adc
dec
pushf
enter
repnz
in
test
filds
outsb
loop
call
cwtl
pop
fiadds
cmp
imul
imul
push
mov
jno
jmp
insl
popf
cmpsb
mov
mov
jge
fstps
xor
test
add
pop
dec
jne
insl
fildl
scas
mov
jmp
add
add
adc
jg
jmp
pushf
mul
ffree
push
icebp
jmp
jbe
lahf
add
xchg
cmpb
xchg
ss
jne
xlat
scas
sti
xchg
xor
mov
imul
test
xchg
xchg
mov
cs
jbe
inc
stc
aas
pop
addr16
cld
hlt
jb
fwait
mov
push
xchg
loope
mov
arpl
stos
insl
insb
jne
mov
dec
xor
dec
sbb
in
scas
jne
decb
xchg
cmpsb
into
lahf
fldcw
data16
aad
mov
test
sbb
fs
les
mov
fistl
add
or
mov
and
lret
xor
mov
mov
addr16
fwait
cmc
sub
lahf
jae
push
pusha
and
mov
cmp
and
lcall
and
pop
movsl
mov
inc
xchg
mov
jb
mov
sbb
cld
outsl
out
shl
jb
rclb
fs
inc
and
cli
push
mov
imul
mov
aaa
std
add
orb
and
fiaddl
dec
inc
add
shr
out
xchg
push
cltd
mov
fwait
ss
insb
pushl
mov
sbb
aad
nop
cmpsl
sbb
jno
lret
mov
jno
inc
pop
leave
mov
mov
mov
xor
push
popf
cmp
push
sub
mov
test
cmpsl
andb
jecxz
or
jle
lea
scas
addl
push
sbb
es
xchg
fcoml
mov
sub
push
inc
pop
insb
cmp
xor
data16
aad
mov
test
inc
cmp
inc
outsb
add
mov
mov
adc
xchg
mov
jp
outsl
shll
adc
inc
int
push
pop
pop
adc
fucom
pop
addr16
mov
jne
jnp
pop
sub
xchg
sub
loop
pop
call
pop
jecxz
sbb
in
mov
cmp
cwtl
test
movsl
icebp
scas
cmp
xchg
js
pop
mov
cmp
test
dec
sub
jae
pop
dec
and
lret
xchg
push
inc
mov
and
xchg
stc
push
push
mov
sub
mov
mov
ffreep
aad
sub
test
sbb
dec
add
cmp
fs
inc
push
shlb
jnp
out
mov
mov
pop
sub
fdivrl
cmp
addr16
xor
shlb
mov
push
xor
sbb
loop
out
nop
mov
push
mov
ljmp
mov
cmp
sbb
or
mov
fs
xorb
push
mov
push
mov
inc
subl
aas
sbb
mov
pop
out
pop
je
dec
pop
xchg
mov
arpl
lret
ret
cmpsb
cwtl
sarb
stc
outsl
ret
punpckhdq
js
fcoml
mov
sbb
stos
movsb
xchg
ljmp
mov
jae
push
lahf
sbb
mov
cmpsb
hlt
inc
add
mov
inc
fildl
jae
jo
push
lds
cwtl
stos
dec
push
lea
popf
lahf
jo
jne
xor
sbbl
jb
mov
add
inc
imul
ds
cmp
cltd
icebp
pop
scas
inc
sbb
fcomip
movsb
or
loope
rcll
and
xor
adc
sbb
rol
jle
xchg
or
dec
xchg
jo
and
mov
out
dec
fdiv
daa
jle
and
cmpl
sti
cs
jecxz
mov
xchg
inc
mov
daa
shlb
inc
rorl
and
mov
cmp
out
pop
jns
dec
mov
enter
jno
cmp
insb
pop
pop
adc
nop
xchg
inc
inc
jmp
cmpsb
mov
add
cmpsl
insl
mov
dec
inc
xor
or
fstl
out
mov
xchg
sbb
push
icebp
mov
xchg
lret
xchg
cmp
es
mov
pop
jg
je
xchg
es
gs
mov
test
into
adc
mov
or
aas
icebp
sbb
xchg
mov
fmuls
scas
lods
mov
into
fisttpl
jbe
icebp
push
xchg
daa
mov
cmc
cmpsb
sbb
sbb
or
clc
pop
mov
ds
sub
jmp
mov
pop
adc
mov
jns
mov
cmp
data16
lock
lret
xor
shrb
pusha
repnz
insl
je
jae
or
dec
mov
xlat
lret
and
dec
not
mov
jp
fildl
sub
jmp
adc
sub
sbbb
stc
jbe
movsb
mov
lret
stc
inc
aaa
jne
mov
fucom
inc
lahf
sbb
add
bound
push
je
mov
push
cmpsl
and
add
or
dec
push
aam
rcrb
popa
mov
dec
sbb
sub
fwait
cmpsb
mov
out
jnp
popa
or
mov
inc
scas
and
xchg
mov
sar
dec
and
int3
stos
lcall
sub
cmpsb
and
jle
cmp
pop
pop
loope
dec
mov
adc
sahf
cmp
mov
js
fmuls
cmp
aaa
jmp
sbb
and
outsb
ljmp
mov
dec
outsb
xchg
dec
adcb
call
xor
sub
dec
xchg
out
jns
imul
push
add
jmp
das
mov
add
stos
test
sbb
pop
mov
cmc
ljmp
and
mov
aad
into
jno
nop
adc
pop
dec
sbb
jae
mov
push
shll
sub
mov
sub
jmp
mov
cmpsb
or
pop
and
fisubrl
cli
mov
jo
leave
dec
filds
adc
and
and
xor
fnstsw
das
jb
fstps
adcl
movsb
xchg
flds
insl
scas
or
mov
insb
lcall
cmp
jp
or
jo
push
test
jge
out
sbb
dec
sbb
pop
test
frstor
mov
jecxz
inc
sub
mov
repnz
pop
iret
int3
loope
mov
cmpsb
mov
xchg
test
test
xchg
lahf
sbb
mov
scas
cli
in
fst
sbb
imul
cmp
sub
push
fs
jge
push
mov
sub
adc
xchg
mov
sbb
movsl
clc
adc
ljmp
fwait
add
jmp
jo
mov
lahf
sub
icebp
inc
les
jge
fxam
xchg
or
shll
xchg
adc
lock
push
insb
mov
pop
sbb
push
xor
lea
xchg
movsl
loopne
ret
mov
scas
int3
test
fwait
adc
pop
mov
mov
mov
js
movsb
pushf
fldl
push
sub
out
jnp
xchg
arpl
fs
jns
sbb
mov
or
iret
adc
xor
andb
pop
ror
push
xor
push
xchg
xchg
mov
sub
ss
mov
rcrb
jb
mov
aaa
cwtl
push
mov
pop
jno
lea
jnp
sti
pop
mov
xchg
lahf
pop
add
xchg
sti
test
pop
pop
enter
insb
push
imul
div
adc
arpl
pop
into
div
xchg
insl
cwtl
iret
fs
push
push
sub
pop
adc
sub
cs
out
ds
movsl
mov
popa
inc
mov
cmp
shrb
adc
inc
leave
hlt
jp
mov
mov
push
sub
dec
arpl
jmp
sub
ds
mov
inc
into
loopne
aaa
shrl
ds
xchg
jno
data16
xchg
dec
sbb
push
jp
cmpl
push
lock
adc
dec
std
push
mov
adc
cltd
inc
dec
icebp
popa
enter
adc
test
dec
ucomiss
or
lea
popa
dec
fsubs
mov
mov
push
mov
ss
inc
cmpsl
jge
mov
les
pop
mov
dec
fdiv
cmp
loop
jmp
aas
mov
adc
xor
push
add
dec
pop
ja
fdivrs
mov
push
divb
adc
loopne
xlat
push
and
movsb
into
mov
mov
loopne
repnz
idivb
add
dec
cmp
adc
ja
cld
mull
jb
adc
loope
into
push
ret
push
xchg
mov
fidivrl
aas
cli
or
push
mov
push
push
ret
adc
sarl
popf
iret
test
pop
and
pop
jl
mov
push
cli
xchg
fldcw
cmpsl
push
clc
sti
jae
enter
jp
pop
jb
xor
or
adc
sbb
idiv
add
loope
shll
xchg
es
cltd
bound
mov
outsb
jb
orb
inc
mulb
mov
inc
dec
mov
mov
add
sub
pop
idivb
mov
xchg
aad
daa
daa
rclb
hlt
push
cltd
lods
sub
add
jo
clc
jb
stos
and
daa
pop
inc
or
mov
and
mov
pop
mov
jmp
sbb
sub
mov
pop
cmp
pop
test
jmp
mov
cmpsb
mov
insb
stos
lret
into
sub
aaa
rcl
mov
sub
imul
push
jp
imul
mov
mov
data16
jp
xchg
push
mov
cmp
add
jg
push
or
scas
sub
sbb
daa
jne
loop
cmp
mov
sahf
rcll
dec
into
ficompl
aad
xor
cmp
mov
andb
sbbb
or
push
xor
sarb
fs
lds
in
cmp
fcoms
sti
push
dec
clc
xchg
stos
mov
push
push
mov
mov
xor
int
inc
fisttpl
fadd
ss
add
jg
nop
push
xor
in
loope
add
daa
sbbl
fmull
enter
mov
sahf
add
mov
xchg
arpl
sbb
jae
jns
and
ja
cmp
lcall
pop
mov
fldcw
addr16
mov
pop
loope
sbb
mov
adc
out
mov
les
lret
push
cmp
jns
ret
jg
mov
xlat
pop
lock
mov
jge
push
sbb
lods
imul
cmp
fwait
sbb
pop
aam
push
je
int3
ret
aad
sub
in
or
or
es
and
jg
out
mov
loope
push
lds
dec
add
adc
fmull
mov
ljmp
cmp
sub
cmpsl
xchg
mov
cmp
repz
out
push
lock
pop
jp
jle
data16
enter
or
or
mov
in
adc
adc
popf
dec
pop
push
aad
cwtl
mov
std
xor
mov
cmpl
into
push
lret
push
and
jge
mov
pop
add
sub
test
push
adc
xor
cmc
mov
fdivrl
push
jl
sub
and
fwait
mov
stos
jno
mov
icebp
fwait
cmp
mov
mov
pop
mov
dec
sahf
xor
test
add
cmp
or
xor
jg
mov
ror
xchg
inc
xor
or
mov
repz
mov
cmpsl
arpl
xchg
mov
cmp
xchg
pushl
insl
jg
dec
jae
sar
add
rorl
in
push
mov
js
in
icebp
adc
sub
mov
push
xor
outsl
ret
jge
inc
sahf
xchg
call
inc
jl
out
add
aam
cmp
pop
sarb
sbb
idiv
inc
jge
adc
ds
int
hlt
das
cmpsl
inc
adc
dec
jno
addr16
lock
jnp
popf
aad
loop
insl
in
mov
std
or
and
xchg
pop
out
push
pop
jmp
pop
or
aam
callw
cli
movsl
jl
push
mov
and
cmp
ret
mov
mov
mov
lcall
push
inc
mov
xchg
pop
in
inc
mov
fldt
xchg
push
cmp
adc
ja
lock
sub
add
lds
or
stos
jg
xor
arpl
cmc
mov
jns
pop
and
mov
inc
sbb
mov
or
push
lea
idivl
and
xchg
inc
lahf
dec
mov
cmpsb
pop
repnz
adc
adc
push
fcos
adc
scas
cmp
hlt
testb
dec
out
adc
xor
nop
and
outsl
adc
cmc
sub
repz
fwait
dec
mov
lahf
fisttpll
aam
and
xor
jp
in
stos
push
cmpsb
jbe
jae
xchg
or
fdivrl
out
sbb
jle
das
into
mov
repnz
mov
scas
iret
popf
loope
mov
dec
ret
jmp
and
xor
mov
cmpsl
lret
stc
outsb
xchg
or
das
bound
push
addr16
fmuls
and
add
and
loope
and
in
xchg
add
mov
sbb
sub
xor
imul
mov
pop
lret
mov
adc
out
pop
ljmp
or
mov
ficoml
sub
jne
stc
adc
xor
push
push
test
mov
add
mov
and
jae,pt
adc
mov
inc
fs
and
cmp
insl
sarb
fadds
mov
je
sahf
mov
stc
sbb
movsb
jo
dec
dec
std
into
pop
inc
xor
pusha
adc
jg
jp
sbb
fdivrs
in
call
jb
les
push
adc
push
stos
mov
xchg
sbb
jne
cld
jns
pushf
cs
adc
xor
pop
clc
mov
pop
fstl
sahf
je
shrb
push
dec
std
mov
xchg
iret
sbb
inc
dec
movb
mov
or
mov
sbb
push
xor
in
lea
ret
adc
xchg
add
cmp
je
push
xor
jb
xor
add
rorb
das
sahf
push
sbb
shrb
nop
jbe
jo
daa
push
int
mov
stc
pop
cli
ret
fwait
test
daa
ds
mov
xchg
or
pusha
mov
out
ja
xchg
inc
hlt
cmp
sbb
fidivl
xlat
outsb
fisubrs
xor
or
push
push
pop
cli
push
jnp
sub
pushf
cld
sbbb
je
lods
out
mov
popa
push
xor
gs
lds
jbe
daa
xchg
xchg
fmul
movups
mov
jg
mov
stos
push
jo
pusha
or
add
aas
mov
pushf
xchg
or
jno
insb
es
push
ss
inc
out
addb
dec
xchg
fcompl
in
std
or
ret
js
jp
jecxz
add
inc
setge
mov
lcall
movb
add
xor
lret
jl
push
mov
xchg
nop
and
test
test
mov
popf
xchg
decb
mov
mov
sub
cmpsb
jb
cs
out
push
add
and
sbb
ds
lcall
xorl
movsb
adc
mov
and
mov
sub
pop
lds
push
and
adc
bound
sbb
cli
addr16
xchg
mov
std
xchg
mov
ljmp
insb
into
xor
iret
push
insl
pop
leave
fdivs
lret
aaa
rol
pushf
loopne
addr16
pop
lcall
push
push
or
nop
cmpl
mov
in
rorl
and
xchg
mov
out
es
jmp
sbb
aam
sbb
in
add
pop
scas
cmp
and
lret
mov
icebp
pop
out
in
sarb
sahf
stos
cmp
pop
jae
push
cmp
mov
sbb
xor
add
xchg
enter
ljmp
call
xchg
ret
shrb
nop
lcall
sahf
dec
bound
fdivs
test
adc
fldenv
stc
pushf
mov
fdivl
test
lret
stos
stos
rcl
or
mov
or
std
inc
add
mov
jno
xor
jbe
movsl
xchg
mov
xchg
loope
clc
push
aad
push
and
je
lock
mov
push
lods
mov
mov
lcall
js
adc
insl
sub
stos
cltd
mov
jmp
popf
sbb
rcpps
add
jns
es
and
dec
gs
adc
aad
lea
or
and
pop
rolb
push
rcl
cs
push
ds
dec
test
and
cmp
pusha
test
push
movsl
gs
fdivrl
popa
jb
lcall
xchg
pushf
cmp
ret
cmp
ret
js
mov
dec
xor
pop
popf
xlat
mov
mov
mov
mov
popf
cmp
and
popf
std
insb
nop
rolb
dec
or
dec
lcall
fmuls
fstps
jnp
pop
data16
sbb
mov
mov
mov
in
pop
nop
shrl
fucomp
jle
cli
mov
mov
insl
xchg
sbb
fiadds
xchg
mov
cmp
cmpsb
xchg
aaa
push
ja
aam
scas
shrb
ljmp
sahf
fwait
aad
mov
adcb
cmp
xchg
jp
cmp
in
add
ss
adc
aam
loope
xor
push
pushf
hlt
pop
jne
es
inc
adc
arpl
add
mov
mov
rolb
and
or
stos
fmull
in
xor
inc
ja
sarl
lock
add
cltd
je
stos
cmp
cwtl
adc
icebp
lcall
mov
jmp
imul
xchg
loope
cmpsb
test
imul
clc
or
in
out
and
push
ljmp
sbb
pop
mov
push
jl
add
inc
dec
loopne
mov
or
lea
and
or
inc
cli
xor
or
xchg
outsb
leave
mov
sahf
xchg
into
cli
sti
jnp
rclb
repz
cltd
daa
fs
data16
mov
add
int
sbb
mov
sbb
mov
shlb
bound
dec
push
lcall
aad
jmp
push
mov
out
loopne
vphsubwd
pop
or
inc
xor
mov
aaa
pop
int3
call
daa
mov
jge
and
xchg
push
insb
loop
mov
subb
shrl
push
popf
ljmp
out
fmul
aas
test
sbb
jns
sbbb
add
popf
inc
push
dec
inc
jmp
js
popf
pop
jecxz
js
mov
or
outsb
xchg
call
pop
out
xor
ljmp
and
dec
adc
adc
push
jg
or
and
mov
js
popa
jg
mov
mov
jecxz
cmp
mov
pusha
mov
out
add
or
dec
insl
in
jmp
push
iret
xchg
jp
xchg
push
xchg
cmp
xchg
inc
jo
clc
or
mov
js
pop
mov
mov
xor
push
mov
xchg
mov
pop
loopne
push
xor
inc
fildl
push
lods
les
loop
mov
imul
mov
and
aam
sti
fisubl
dec
pushf
popa
cmp
pop
sbb
xchg
cmp
popa
cmp
addr16
jle
push
adc
out
outsl
inc
cs
test
mov
and
xor
sti
das
das
fnstenv
lcall
jle
xor
daa
jne
and
ljmp
addb
rcll
iret
adc
cs
mov
or
rclb
leave
je
or
pushf
aas
inc
in
xchg
xchg
cmp
or
pop
ss
jecxz
jbe
pop
test
jne
pop
in
pop
jmp
iret
mov
dec
mov
andb
push
jl
test
test
vmovdqu
int3
jg
in
jno
sarb
outsl
dec
push
out
push
add
inc
jne
inc
adc
inc
jle
insb
add
sub
ds
scas
imul
shr
xor
fdivl
dec
int
push
rcrb
leave
cmp
pop
mov
pop
push
je
mov
push
in
shll
fsts
sbb
int3
into
inc
and
incl
aaa
out
adc
push
mov
cmp
insl
lea
loope
jmp
dec
mov
xchg
pop
dec
sub
add
add
out
push
mov
jb
mov
push
mov
aas
dec
jmp
pop
fisttpll
js
pop
dec
movsb
lods
mov
pushf
int3
xchg
xchg
ja
fbld
push
xor
xchg
pop
into
cltd
add
or
ret
int
iret
inc
xchg
lcall
sbb
jg
mov
push
mov
inc
out
stc
inc
sbb
test
sahf
rcr
das
sub
lods
cli
js
lock
rcrb
xchg
pop
adc
pop
sub
and
insb
push
popf
movl
out
pop
or
in
movsb
mov
cwtl
sarb
lds
add
les
fs
addr16
nop
leave
ja
frstor
sbb
aaa
cmp
and
fstl
sub
mov
int
xchg
cmp
push
or
cmp
and
repnz
repz
pop
insb
cwtl
mov
and
adcl
testl
inc
jbe
sbb
cmpsl
call
xchg
cmc
adc
pusha
arpl
stos
mov
cmp
mov
adc
ds
lods
jae
jle
in
adc
mov
gs
pmaddwd
or
aam
jno
movl
inc
jns
mov
xchg
jge
aas
mov
nop
shrb
mov
cmp
sub
int
xchg
cmp
out
cld
aas
in
test
inc
orl
outsl
pop
jp
imul
jbe
ret
mov
xchg
shrb
in
jo
add
mov
push
and
jecxz
lds
loopne
sti
add
inc
jle
or
bswap
jp
fmull
and
xor
movsl
jp
mov
cmpsb
jecxz
xlat
divl
add
cmp
addr16
mov
outsl
clc
cmc
lret
outsl
adc
xor
mov
fldl
xor
adc
out
or
lods
shl
pop
in
add
jg
or
mov
pop
stos
loope
add
sub
repnz
sbb
push
ja
xor
arpl
dec
popf
negl
gs
mov
stc
xchg
imul
cmp
sbb
clc
adc
sub
icebp
enter
mov
hlt
mov
in
outsl
jl
push
decb
mov
sub
std
loopne
xchg
sub
push
mov
pushf
push
xlat
and
cmp
iret
jecxz
negb
sub
lcall
dec
aad
aaa
ret
rclb
cmovle
cmpb
imul
clc
add
daa
mov
pop
das
test
add
mov
js
push
aad
das
mov
push
jo
lock
subl
adc
imul
add
sarb
xor
popa
adc
cmp
nop
aas
push
mov
int3
push
test
mov
dec
mov
jge
sbb
inc
jb
lcall
das
push
push
xchg
and
or
cmp
or
push
or
xchg
pop
mov
mov
mov
addb
aam
push
notl
outsl
popa
loope
jge
pop
aam
jbe
add
stos
push
add
aaa
mov
sub
lret
lret
inc
pop
sub
fsts
mov
jbe
les
fidivrl
add
punpckhdq
xchg
loope
cmp
dec
mov
xchg
addr16
jb
sbb
idivb
mov
fstpl
xor
in
andb
rcll
mov
arpl
stos
stos
scas
add
shrb
pop
push
in
mov
pop
insb
jae
add
mov
iret
test
mov
or
dec
jae
pop
outsb
lds
flds
jo,pn
dec
add
call
imul
dec
fidivl
iret
mov
pop
push
sub
stos
int
shrl
subl
cwtl
sar
rolb
andl
adc
jge
cmp
rorb
int
test
fbld
cmpsb
icebp
popa
es
add
ret
test
lcall
push
mov
rol
out
scas
fwait
sub
inc
mov
aad
aaa
push
test
and
fcomps
xor
jge
xchg
mov
xlat
cs
xchg
push
sti
xchg
xchg
out
cmpb
sbb
lret
add
lea
outsl
addr16
jmp
sub
jg
push
push
aam
sub
adc
insb
aam
movsl
xchg
daa
or
push
fsubr
mov
sub
mov
inc
add
add
jnp
jo
xchg
dec
pop
in
xor
stos
out
mov
js
sbb
push
push
mov
xchg
or
push
sar
mov
lret
mov
and
mov
into
rcrb
cmp
mov
jae
lcall
mov
outsb
lcall
fistpl
loope
push
mov
cli
ss
out
test
adc
dec
xor
pop
cld
jg
mov
lret
xchg
insb
insl
lods
cs
fildll
or
scas
cmc
mov
xorb
xor
jne
mov
rcrb
fwait
lock
ds
hlt
arpl
push
aas
dec
cmp
aad
pop
addr16
xchg
fildl
inc
adc
push
aad
mov
mov
push
jge
out
fwait
paddd
enter
mov
and
test
xchg
aas
push
jmp
dec
dec
jmp
int3
sbb
movsb
das
mov
call
push
sbb
add
mov
add
mov
fdivrs
and
popa
adc
ja
xchg
jb
push
insb
sub
fcoml
sahf
xchg
fmul
sbb
sub
clc
stos
xchg
dec
or
cmp
jl
mov
add
xchg
scas
pusha
dec
fs
pop
and
jmp
mov
sub
adc
xor
cmp
push
mov
jnp
into
cs
jle
insb
xlat
jbe
sub
std
je
lods
inc
aad
mov
adc
xchg
cmpsb
sahf
scas
call
aam
fdivrl
inc
mov
ja
push
dec
sbb
xchg
pop
mov
fistps
add
and
call
or
sbbl
jg
repnz
xchg
xor
xchg
ja
inc
push
dec
xor
iret
pop
cmpsl
jp
fisttpl
or
cmpsb
mov
or
insb
dec
iret
ret
mov
lods
xor
inc
aaa
ret
push
sar
or
arpl
xchg
add
push
and
gs
mov
movsb
adc
in
inc
inc
shl
xlat
aam
cmp
xlat
lret
mov
shrl
lret
test
ja
outsl
fadds
cmp
in
jae
insb
or
loope
data16
movsl
cwtl
lds
cmpb
aam
push
scas
sbb
push
and
fidivrs
stc
mov
mov
push
pop
mov
xor
shrb
push
or
outsb
fsub
notl
fldenv
mov
les
sbb
cwtl
mov
sbb
cmp
inc
out
test
in
test
jle
out
out
cmp
adc
insl
scas
xor
lcall
xlat
cs
insl
inc
xchg
notb
es
push
lret
xchg
imul
dec
int
inc
fcoml
pop
push
sbb
adc
aad
xchg
dec
fstpt
push
pop
sub
inc
out
dec
xchg
mov
inc
pop
jmp
lea
push
xor
test
or
push
aas
imul
popa
xchg
fisttpll
dec
cmpl
sbb
mov
imul
sub
ja
jo
sub
pop
stc
push
lods
faddl
scas
loope
scas
dec
mov
scas
cmpsl
lods
test
das
or
xor
xchg
enter
xor
test
sbb
add
jmp
xor
inc
and
dec
pop
test
cli
outsb
sub
sarl
xor
sub
xchg
aam
cmpsb
stos
mov
mov
fwait
mov
and
test
jmp
jmp
icebp
sbb
cwtl
test
cmpsb
notb
insb
call
int
jecxz
sarl
cltd
fucompp
fldt
pop
rep
std
sub
jb
stos
es
repnz
xchg
std
inc
mov
dec
xor
adc
xchg
fstps
xadd
push
repnz
dec
lahf
dec
cmp
cmpsl
dec
push
dec
pop
ds
lcall
mov
and
rol
xchg
sbb
adc
pop
pusha
cmp
pop
rorb
in
lahf
and
push
icebp
ljmp
add
addr16
lret
and
mov
gs
hlt
loope
shrb
call
clc
fnsave
div
mov
dec
popf
jbe
ret
es
call
adc
mov
fisubrs
push
sub
or
adc
xor
insl
pop
xchg
arpl
sub
cmp
and
pushf
fldt
and
jbe
push
inc
movb
ds
repz
or
mov
add
mov
fstpt
cli
push
inc
add
jae
push
shrb
mov
push
call
xchg
call
fadds
shrl
mov
pop
push
sub
sahf
je
lret
mov
mov
sbb
dec
fidivrl
sub
outsb
iret
cmpsl
mov
dec
push
xchg
push
dec
test
mov
stos
dec
adcl
inc
mov
or
lock
mov
adc
dec
lea
and
outsl
decl
jecxz
jno
test
je
jne
fbstp
adc
cmc
loop
clc
cmp
xchg
xor
scas
push
sub
dec
bound
pop
xchg
aaa
aam
xor
and
jbe
sub
and
popf
enter
loope
inc
test
mov
adc
sub
out
xchg
addr16
mov
push
add
rclb
je
add
ds
test
cmpsb
outsl
mov
stos
cli
and
add
flds
push
mov
test
shr
sub
pushf
popf
inc
fmuls
add
sub
in
es
fildll
cmp
into
int
cmp
jno
ds
mov
add
sub
jle
and
out
or
mov
cmpsb
push
mov
repnz
cmp
mov
loop
inc
out
pop
roll
dec
xor
stos
adc
fcoms
test
mov
in
lahf
aad
mov
sbb
loopne
push
aas
pop
sarl
pop
neg
jae
rcl
sbb
inc
push
inc
or
in
js
fstpl
sbb
dec
inc
cmp
xchg
adc
mov
push
mov
sbb
or
jecxz
mov
dec
je
fmulp
mov
xor
stos
pop
sub
add
lret
stc
int3
jno
mov
cmpsb
inc
dec
addl
sub
cmp
fsubrs
or
inc
dec
cmp
dec
lcall
int
and
xor
and
xor
jbe
movsl
pop
test
adc
data16
ja
call
or
mov
jg
jge
addr16
mov
add
aaa
push
xchg
dec
or
out
xchg
jb
js
rcll
mov
or
jp
pop
int
jne
addr16
repnz
rcll
imul
js
stos
add
push
lods
les
sbb
test
repnz
sti
rcrl
mov
jmp
jbe
dec
imul
divl
push
shlb
jle
xor
add
mov
inc
into
mov
mov
push
sub
pop
push
sub
jl
ss
arpl
cmpsl
jb
test
in
in
stc
adc
or
mov
add
aas
jbe
dec
jp
cmpsl
gs
lods
jne
or
pop
outsl
sbb
jle
ror
push
fiaddl
inc
mov
xor
mov
scas
pop
jl
cwtl
fidivs
pop
sahf
hlt
aas
in
add
push
shrb
sarb
stc
jae
stos
or
push
ret
arpl
aaa
push
loopne
cmpl
icebp
sar
jg
bsf
jmp
mov
clc
or
outsl
or
fnstenv
adc
clc
les
pop
or
mulb
fs
dec
push
sub
dec
jae
mov
sbb
daa
icebp
xor
push
lcall
add
int
add
adc
mov
sub
sub
add
xor
lcall
popa
add
or
pop
fwait
mov
call
pop
dec
mov
scas
cmp
adc
adc
cmp
push
dec
mov
jb
popf
push
rsqrtps
cs
xor
pop
sbb
imul
dec
mov
mov
jmp
shll
imul
pop
lods
scas
fwait
rol
pop
jmp
lret
jbe
xchg
call
cmp
scas
les
lods
insl
insb
or
addb
icebp
inc
icebp
sti
addr16
xchg
cmc
inc
pushf
mov
hlt
mov
repnz
imul
lret
inc
mov
repnz
cmp
push
faddp
pop
dec
leave
xor
aad
push
ficoms
dec
dec
mov
popa
mov
mov
sbb
xchg
test
pop
xchg
sub
sub
das
pop
xchg
mov
and
outsl
sbb
or
xchg
sti
cmp
sub
mov
imul
out
mov
repz
mov
in
adc
gs
addb
mov
adc
push
call
mov
mov
and
mov
dec
loope
int3
jnp
jle
fisubrl
xchg
fsubrs
rorl
out
icebp
push
add
sbb
notb
int3
inc
dec
test
stc
sbb
jmp
clc
mov
cmpsl
add
or
mov
pop
and
cmpl
push
ja
dec
add
cmp
dec
cmp
lock
pop
fnstcw
sub
mov
cwtl
mov
loop
iret
xchg
es
js
push
jnp
pop
adcl
or
pavgb
pushf
lock
xchg
jge
sub
mov
mov
adc
pop
fiaddl
cmp
loop
ja
insl
sub
mov
rorl
adc
mov
mov
test
iret
jne
cmpsb
loope
add
cmpsl
jecxz
ja
nop
scas
dec
mov
inc
rol
inc
mov
xchg
stos
pusha
mov
jmp
pop
mov
jmp
cmp
mov
es
lock
jp
dec
outsl
seto
sbb
and
jns
jmp
imul
lahf
sub
popa
iret
pop
adc
mov
andb
push
loop
in
js
ret
jg
mov
mov
sub
enter
or
mov
arpl
pop
push
aaa
inc
cli
imul
or
in
sub
mov
arpl
outsb
jns
xor
pop
test
xchg
add
mov
cmp
dec
xchg
jb
jo
xchg
and
jnp
or
ss
or
imulb
jge
fstl
ja
shll
xor
outsl
mov
imul
jl
mov
inc
test
sub
xchg
aaa
push
loop
in
pusha
pop
jg
cld
or
lock
jne
int
popf
frstor
xor
cmp
stos
bound
jnp
and
sarl
mov
movsb
push
addl
hlt
inc
xor
ljmp
xchg
mov
and
xchg
jno
xchg
mov
shl
xor
dec
pop
sahf
adc
fadd
std
or
mov
lahf
lret
and
repnz
xor
dec
int
dec
mov
rcrl
or
outsl
scas
decb
adc
sbb
popf
lcall
or
out
ljmp
scas
cmp
mov
mov
xchg
xchg
scas
sub
adc
push
pop
cmp
fst
sti
dec
mov
mov
shll
fbstp
or
mov
mov
notl
add
mov
jno
cmp
out
push
js
test
push
or
jmp
lcall
mov
fsub
cltd
sub
out
inc
pop
mov
mov
outsl
cmp
rol
dec
test
xchg
inc
or
xchg
lcall
mov
ucomiss
sbb
dec
and
test
rcl
sub
xlat
movl
test
ffree
mov
mov
sbb
inc
push
jo
push
pop
mov
xchg
pop
arpl
addr16
pop
pop
cltd
arpl
or
lret
hlt
aad
add
lret
bound
sbb
fsub
and
in
or
dec
ljmp
das
aad
addr16
push
test
xchg
sbb
in
loopne
sub
leave
aas
and
mov
imul
pusha
bound
cwtl
mov
stc
lcall
or
repz
loop
and
or
hlt
pusha
pop
mov
and
andb
pop
mov
insl
jno
cltd
sbb
ja
push
test
xchg
sahf
xchg
jmp
jno
and
mov
xchg
movsb
jmp
hlt
fistl
rolb
jne
call
popa
sub
mov
movsb
adc
mov
shrl
jne
test
sbb
fcompl
jmp
jns
in
push
ret
inc
test
leave
mov
mov
mov
xchg
adc
aaa
lods
jnp
lret
in
pop
fstps
or
mov
inc
or
rclb
dec
int3
dec
fmul
jge
ds
and
rorb
arpl
ss
jge
je
lds
mov
sbb
push
test
stos
fisubl
xchg
push
mov
hlt
sti
add
add
hlt
jg
mov
idivb
push
nop
xchg
jae
or
pop
xchg
jl
mov
or
addb
jo
push
shlb
mov
jnp
cmpsb
push
mov
cmp
lock
js
and
orb
cltd
pushf
push
jecxz
and
divb
in
out
push
pop
cmp
stos
mov
push
jg
rcl
loop
rolb
arpl
and
mov
mov
out
xor
mov
out
clc
xchg
loope
sbb
adc
or
jge
fbstp
xor
icebp
xchg
nop
push
xchg
inc
inc
into
ss
jns
adc
lret
clc
mov
int
das
inc
stc
xchg
fwait
jno
aam
ret
das
cmc
adc
xorl
xor
shll
mov
pop
outsl
adc
mov
out
insl
sub
aas
and
push
xchg
outsl
cmp
mov
add
jo
dec
or
je
int
in
pop
pop
lahf
push
jns
mov
add
aas
mov
daa
fnsave
push
aaa
js
jb
popf
mov
adc
lods
dec
sub
in
scas
jae
scas
dec
bound
add
and
push
and
pop
or
ss
sbbl
andb
scas
sbb
cmpsb
sub
xlat
out
or
enter
sti
fildl
jle
sbb
adc
outsb
mov
adc
xchg
shrl
push
dec
lret
sahf
test
jmp
nop
mull
or
cmp
fsubl
xchg
add
jns
stc
mov
sbb
lret
xor
mov
cmp
out
js
add
sub
sub
mov
mov
jb
aas
xchg
jbe
fcompl
ss
insl
xchg
mov
fisubrs
jl
cwtl
sub
push
jno
sti
sbb
cmp
push
xchg
enter
test
call
faddl
push
xchg
xlat
les
je
push
xlat
adc
cmp
sbb
popf
leave
gs
ja
dec
inc
sub
scas
mov
test
out
pop
cmp
test
outsb
pop
insb
mov
les
sub
std
cmp
insl
call
stos
add
gs
dec
fcmove
cmp
sbb
aaa
lods
add
std
xor
fdivrs
jl
and
mov
push
cmpsl
scas
adc
loopne
leave
add
ja
cmpsb
sbb
repz
sbb
roll
or
adc
push
insl
xchg
or
aaa
in
push
cmp
fcomi
mov
nop
out
icebp
lahf
test
or
sbb
dec
popf
pop
mov
mov
shlb
push
xchg
xor
test
mov
insl
leave
aaa
xchg
xchg
inc
in
les
in
sbbl
arpl
pop
lods
lret
xlat
pop
stc
or
push
mov
fisubrl
in
xchg
iret
int3
adc
push
out
fcoml
sbb
int
shll
vpmuludq
xlat
insb
ja
mov
pusha
mov
stc
push
lods
jmp
dec
dec
pushf
jecxz
pop
xchg
aad
fidivs
push
mov
out
hlt
gs
mov
mov
push
sbb
mov
mov
mov
and
adc
repz
roll
icebp
pop
dec
xchg
int
jle
push
dec
cld
aas
pop
push
dec
mov
and
ret
dec
pushf
movsb
insl
fs
push
scas
mov
scas
xchg
lock
sbb
rcl
xor
mov
shl
ja
jle
push
sbb
jecxz
lret
in
mov
jb
inc
lahf
dec
or
or
les
jae
notb
xor
dec
inc
ss
push
jae
and
jmp
in
daa
jle
loope
ret
mov
js
jge
aad
imul
jg
or
lods
mov
mov
das
cmp
adc
inc
out
cli
cmp
mov
xlat
adc
and
jl
push
mov
push
xorb
inc
call
out
sub
out
xchg
clc
jne
es
add
or
adc
mov
popf
mov
out
mov
adc
xor
in
repnz
sarb
push
xchg
mov
outsl
fwait
pop
push
xchg
inc
xchg
xor
movsb
lds
cli
rep
pop
xchg
mov
cs
mov
mov
add
data16
pop
mov
and
sbb
pop
mov
int3
sub
push
xchg
fcompl
mov
mov
xor
xor
sub
scas
xchg
dec
sbb
add
lret
test
sbb
jns
loopne
andb
pop
test
outsb
fwait
mov
dec
nop
sahf
jbe
pusha
dec
pusha
call
test
fld
out
shlb
int
lods
add
inc
or
roll
mov
test
cmp
in
ret
inc
or
xchg
xchg
inc
jo
or
xchg
sbb
lahf
add
inc
lcall
xchg
xchg
movsl
sbb
dec
lds
xor
lea
mov
inc
pop
cwtl
cmpsl
mov
hlt
and
sbb
addl
sbb
xor
stos
add
xlat
sbb
dec
shlb
shl
add
dec
std
call
popa
cmp
mov
jno
push
add
sub
pop
js
xor
nop
xchg
hlt
xor
fmulp
aas
jmp
fadds
dec
sub
fwait
pop
sbb
lahf
mov
pop
stos
fisubrs
lods
outsl
loopne
addr16
imul
pushl
aas
pusha
shlb
fisttpl
fidivs
and
jmp
inc
jl
or
shll
pop
sti
ficoml
mov
shlb
lea
leave
cld
hlt
test
scas
repz
cld
lods
xor
ret
lods
aam
cmpsb
mov
or
cmc
out
outsb
out
dec
or
sbb
and
inc
cmp
fstpl
mov
fdivs
sbb
add
dec
js
out
lahf
mov
in
dec
fs
adc
testb
lods
int
mov
inc
adc
pop
lods
add
movzbl
push
push
mov
in
shlb
dec
mov
jl
stos
pop
sahf
sbb
jo,pt
das
mov
xor
cmp
or
ror
inc
sbb
adc
hlt
and
sbb
outsb
push
mov
jb
add
repnz
or
cmp
lods
ss
loop
loope
jne
jle
or
cld
bound
pop
test
cld
push
in
push
ja
push
push
ret
imul
and
test
xor
rclb
ds
sub
push
mov
scas
push
push
jle
idivl
lret
orb
int
sbb
push
mov
das
js
lea
dec
or
mov
das
dec
out
cmp
cld
xchg
dec
inc
push
mov
int3
mov
adc
out
aaa
outsb
fcoms
addl
rclb
inc
inc
cltd
mov
jg
outsb
sub
in
cmp
jnp
rcrl
int
mov
inc
lds
stc
push
sub
idivb
shlb
fnstcw
int
lds
inc
lods
notb
xchg
xchg
cmpsb
test
jg
sbb
repz
add
jae
mov
pop
xor
mov
mov
sub
aas
pop
mov
push
xor
add
int
pop
addl
lds
aas
hlt
cmp
imul
push
repnz
xchg
lcall
inc
dec
push
dec
or
pop
or
ret
int
imul
insb
xchg
test
mov
mov
rclb
push
push
and
dec
clc
pop
push
pop
inc
push
ret
cmc
push
sbb
xor
mov
pop
dec
addr16
sahf
mov
xchg
mov
outsb
cmpsl
lods
add
pop
sub
repnz
lret
xchg
or
js
pop
sbb
shll
fsubs
and
scas
add
or
mov
push
mov
xchg
data16
add
mov
and
orl
jle
test
jne
or
nop
and
outsb
andb
adc
aad
push
mov
push
dec
jbe
pop
icebp
ds
push
cmp
mov
mov
sub
dec
adc
loope
push
dec
jle
dec
in
fstl
mov
ret
nop
lock
ss
lcall
jns
pop
mov
fs
jle
mov
dec
adc
pop
js
adc
mov
mov
inc
stos
sahf
and
and
hlt
inc
roll
mov
jno
push
les
test
movb
mov
lock
mov
sbb
insl
sub
arpl
fisttpl
loope
lock
xlat
add
cmp
mov
in
rclb
lods
out
mov
push
test
cwtl
sbb
sub
popf
pusha
jo
outsb
sub
cmp
add
mov
faddl
lahf
add
pop
cwtl
push
shlb
mov
dec
fs
lret
stc
fstps
cmp
mov
mov
add
add
add
lods
enter
cmp
pusha
mov
lods
andl
mov
jge
lods
cmp
push
sbb
bound
sbb
sarl
inc
outsb
add
scas
loop
mov
es
hlt
aam
cltd
mov
stos
in
cmp
cmp
addb
xchg
inc
lock
add
xor
ja
lock
xchg
pushl
ja
sub
adc
std
push
sub
dec
or
leave
or
mov
dec
jmp
or
mov
add
add
lods
sbb
inc
shll
out
sub
mov
mov
push
sub
out
sti
in
mov
xchg
push
incl
mov
jg
cmp
hlt
sub
sbb
dec
and
mov
scas
sbb
int3
ret
ret
xor
push
and
sbb
fldcw
or
push
lds
nop
pop
push
in
in
mov
movsb
xchg
adc
and
mov
das
aas
pop
cmpb
iret
xor
lret
fadd
cmp
pop
idivl
outsl
stc
mov
repz
sub
inc
addr16
dec
pop
mov
nop
sub
cltd
imul
xchg
cmpsb
adc
adc
cmp
faddl
and
jle
rol
imul
dec
pop
sub
cmpb
mov
test
mov
push
sub
lcall
or
loopne
inc
ss
aaa
outsb
loopne
int
jo
adc
mov
inc
dec
push
adc
scas
inc
mov
lods
popa
repz
xlat
dec
leave
push
mov
adc
shl
mov
popa
pop
xor
xchg
push
aam
or
ret
jnp
daa
push
inc
push
ljmp
jl
test
pop
xchg
adc
mov
pop
into
mov
pusha
jns
xchg
shlb
ficompl
adc
xchg
sbb
popa
xchg
cmp
xchg
inc
lods
sbb
adc
std
mov
add
int
mov
pop
cmp
int
cmp
xchg
ljmp
xor
stos
sbb
lea
jnp
mov
jbe
xchg
pushf
fimull
add
sbb
roll
repnz
stos
daa
push
dec
in
dec
outsb
or
fbld
cld
push
outsl
not
jns
cmc
mov
adc
fidivs
inc
jmp
cwtl
cmp
adc
ds
add
lret
sbb
mov
test
mov
cmc
insb
pop
loope
imul
or
cltd
out
add
push
push
dec
icebp
ds
or
mov
mov
dec
scas
filds
loop
mov
out
jne
xor
cld
push
mov
jb
das
aam
push
sti
xlat
andb
pop
mov
mov
stc
fwait
scas
aaa
xchg
jne
and
pop
push
or
mov
scas
adc
cmp
mov
jmp
in
shrd
jmp
and
xchg
inc
in
sub
push
leave
mov
call
into
jge
push
test
add
mov
pop
push
jge
push
inc
push
shr
leave
or
test
pop
loopne
jns
jb
daa
dec
mov
cmpsl
pusha
cld
sbb
adcb
pop
cmp
mov
data16
pop
cmp
fdivl
cld
push
or
call
mov
xchg
nop
adc
push
adc
push
loope,pt
xchg
and
inc
inc
mov
fistpl
sub
jge
imul
cmp
loope
jne
jg
nop
dec
test
movsb
lods
aam
addr16
mov
cmpsl
pop
bound
jno
aam
cwtl
xor
xor
iret
lea
addb
and
in
push
mov
mov
dec
popa
notb
mov
mov
outsb
push
sahf
sbb
imul
in
es
xlat
repz
lea
shl
sub
test
pusha
jae
stos
popf
aad
js
cmp
jmp
ror
dec
scas
jmp
xor
daa
or
pop
out
adc
pop
movsb
push
out
fcmovu
out
aad
jbe
dec
adc
insl
xchg
arpl
pop
fimuls
sub
adc
in
inc
push
add
mov
xchg
sarb
lcall
dec
push
cmp
ljmp
pop
xor
fsubl
mov
add
cmp
lahf
stos
mov
jnp
orl
cwtl
les
in
leave
mov
push
fidivl
cli
nop
pop
jmp
mov
arpl
or
test
pop
add
add
mov
xor
dec
or
ljmp
sub
out
scas
xor
push
xchg
call
jle
dec
pop
push
push
lods
mov
lahf
and
gs
mov
cli
std
movsb
push
dec
dec
sahf
rol
stos
push
cltd
jbe
adc
rcll
mov
aaa
outsb
or
xchg
add
sub
jo
mov
lods
aaa
sbb
pop
pop
repnz
xlat
gs
mov
fistps
idiv
nop
mov
imul
repnz
inc
test
push
clc
mov
sbb
sub
test
or
push
repnz
sbb
test
cmp
js
inc
ja
mov
out
pop
adc
scas
mov
dec
adc
mov
mov
pop
es
bound
sub
je
push
mov
jp
pop
mov
shll
lcall
inc
iretw
push
ret
mov
push
lock
ja
mov
and
mov
push
pop
fstps
pusha
add
push
sub
rol
mov
in
imul
mov
dec
out
push
inc
repnz
adc
jmp
loope
pop
sbb
fcmovnu
xchg
outsb
decb
jmp
or
cmp
push
cmp
mov
iret
lods
sbb
mov
cmp
cmp
test
lea
fldl
sbb
adc
test
xchg
xchg
jo
fdivrs
sbb
int3
mov
push
add
mov
or
roll
imul
hlt
out
lock
arpl
in
fidivl
jecxz
cwtl
dec
pop
cmc
mov
lcall
rcrl
xor
cltd
popa
sub
inc
hlt
hlt
sbb
and
loopne
std
xor
and
in
push
mov
aaa
mov
jo
cwtl
nop
mov
jecxz
imul
xor
mov
jle
add
enter
push
loopne
fistl
in
ror
pop
pop
mov
cmp
in
rcr
mov
mov
out
fs
or
lcall
daa
outsb
push
cmp
stc
sbbl
sbb
int3
loopne
jno
adc
inc
mov
mov
nop
hlt
xchg
sbb
jae
mov
xor
inc
jo
mov
sub
or
shlb
cltd
stos
pop
daa
add
data16
inc
ret
and
mov
scas
aam
rcll
in
mov
pop
cli
jne
adc
dec
push
sbb
loop
mov
stos
dec
xchg
add
push
mov
sarb
pusha
mov
cmpsb
je
pop
jns
imul
outsb
or
andl
rorl
add
dec
das
or
or
je
stc
loop
shll
ret
mov
outsl
jno
fcmove
mov
add
jecxz
push
fld
cmpsl
imul
mov
or
scas
out
mov
mov
push
mov
mov
xchg
push
insl
push
xchg
adc
cld
int3
mov
add
sbb
cmpsb
daa
push
adcb
bound
mov
je
pop
push
xchg
pop
subl
xchg
pop
mov
out
mov
cmpb
xchg
sbb
adc
lcall
push
cmpsb
pop
mov
cmp
hlt
xchg
xor
sarb
jmp
stc
pushf
std
xlat
rorb
add
push
xchg
or
sub
cwtl
std
jecxz
pop
jecxz
lock
cmp
aaa
jmp
call
inc
and
push
popa
jle
decb
adc
loope
mov
sbb
cld
stos
sub
jg
inc
or
push
and
cmc
sub
int
sti
sbbb
out
sbb
add
dec
xor
std
adc
cmp
enter
sub
adc
pop
pop
ret
ret
enter
iret
inc
imul
push
inc
loopne
shll
outsl
dec
out
inc
cli
push
aam
cmp
clc
or
xor
data16
ss
in
fucomi
pop
sub
mov
xchg
movsb
fwait
mov
mov
xchg
fldt
in
xor
or
xlat
mov
rol
test
and
dec
or
fidivrl
jg
decb
push
mov
mov
andl
mov
fdivrs
jg
jp
pop
imul
adcl
adc
sub
push
jb
lret
xchg
mov
es
addr16
scas
ljmp
pop
or
cmp
add
outsb
jg
mov
rcll
add
pop
mov
cmp
out
repnz
jl
bound
cmp
jecxz
mov
mov
mov
movsb
aam
jl
add
push
and
in
adc
lods
or
jno
push
sbb
mov
and
std
push
aas
inc
pushf
stos
inc
jp
mov
dec
sti
pop
into
test
xor
faddl
xchg
lret
lret
mov
push
dec
ja
ja
and
jge
cmp
jmp
in
xlat
fwait
das
cmp
cmp
inc
pop
or
adc
jmp
cmp
das
lret
mov
push
jo
adc
adcl
add
das
adc
hlt
test
xchg
and
xor
xchg
in
into
fildl
jge
push
fdivr
add
outsl
and
mov
xor
cwtl
xor
and
jne
dec
pop
mov
pop
aas
std
jbe
arpl
xchg
dec
mov
lahf
lods
rcpps
ret
xchg
jmp
faddp
aas
cmp
shrl
sarb
xchg
and
loopne
jbe
dec
add
add
stos
push
jl
sub
and
dec
add
add
cmpsb
jl
in
sbb
mov
inc
mov
and
int
mov
fbld
cwtl
test
mov
mov
setns
inc
mov
cmpsb
jns
push
nop
loope
mov
aam
hlt
sub
outsl
hlt
in
aad
sub
fiaddl
mov
cmc
sub
pop
aaa
or
push
iret
dec
inc
dec
jbe
outsb
insb
sub
sbb
in
sahf
mov
and
mov
dec
in
mov
imul
jb
popf
out
fwait
hlt
and
gs
and
cld
das
jne
sbb
gs
cmp
jo
das
mov
arpl
ret
push
stos
test
fprem1
insl
cmc
test
inc
add
popf
mov
gs
hlt
dec
lahf
aaa
pop
loope
push
mov
rolb
in
inc
mov
and
lods
out
push
repnz
push
pop
jae
sbb
sahf
and
or
sahf
stos
push
divl
add
lcall
jge
out
xor
mov
lahf
push
inc
lods
ds
insb
int3
or
repnz
cltd
inc
pop
jp
idivb
push
or
mov
mov
xchg
jg
and
xchg
loope
jns
cmp
or
mov
push
jae
push
and
hlt
test
daa
or
adc
ret
fwait
ret
imul
inc
test
out
sbb
aam
stos
mov
imul
jo
add
andb
mov
mov
repnz
xchg
imul
fists
movb
inc
out
push
jge
ljmp
dec
in
testb
mov
sub
xor
stos
dec
inc
frstor
ret
mov
mov
pop
mov
mov
testb
sbb
adc
stc
mov
pop
in
rcrl
aas
adc
stos
mov
addr16
inc
clc
dec
dec
mov
inc
into
pop
ja
jb
mov
xchg
push
outsb
into
inc
test
les
xchg
rorb
push
je
sub
sub
pusha
or
push
mov
jecxz
mov
ffreep
mov
mov
int3
outsb
cmp
cmp
push
lret
xchg
and
bound
pop
adc
clc
xor
sub
jb
in
sub
push
aaa
pop
jge
or
stos
dec
xchg
adc
fldenv
inc
xchg
gs
fwait
test
loopne
scas
jl
push
out
jecxz
cltd
adc
cltd
rorb
xchg
scas
cmp
mov
sub
subb
imul
lcall
bound
addr16
lea
mov
es
push
shll
js
pop
cld
mov
inc
push
xchg
pushf
jmp
test
insb
popa
enter
test
out
aad
movsl
imul
out
jno
je
jle
std
and
gs
es
pop
push
inc
add
add
mov
xor
sbb
xor
jne
in
pop
sbb
movsl
adc
cltd
xchg
outsl
mov
fists
mov
push
push
icebp
push
sub
imul
pop
jecxz
repnz
bound
js
pop
test
pop
scas
xchg
sub
sub
ret
in
dec
popa
int3
and
loopne
enter
in
push
test
gs
sub
sbb
cmp
mov
sub
sbb
dec
add
cmp
test
pop
das
jle
popa
bnd
mov
imul
movsl
ja
adc
addr16
jg
repz
jge
shrl
adc
dec
pushf
inc
iret
lds
es
dec
inc
daa
iret
and
fcompl
adc
cmp
xor
mov
pop
out
les
xor
inc
daa
aam
fsubrp
cld
dec
js
movsb
xchg
out
sbb
jne
lret
loopne
xchg
adcb
subl
or
insb
repz
push
nop
outsl
push
jmp
mov
mov
orb
xor
pop
sarl
pop
xor
loopne
mov
jle
xchg
mov
jnp
and
mov
cmp
stos
sbb
inc
mov
and
pop
fnstenv
ret
das
xor
xchg
pushw
in
fnstcw
xor
xchg
mov
cmp
arpl
iret
inc
inc
out
inc
mov
or
mov
mov
mov
add
or
jnp
adc
mov
jp
outsl
xor
testb
push
push
mov
dec
testl
icebp
jbe
pop
xchg
and
ds
or
pop
int3
imul
push
enter
scas
daa
call
jno
bound
bound
inc
mov
in
mov
xchg
lcall
add
hlt
icebp
add
aam
lods
out
in
ds
scas
les
add
and
sbb
pop
out
add
mov
cmp
stos
sar
mov
push
adc
or
fs
insb
push
xor
repz
jo
hlt
push
xchg
imul
xor
inc
jbe
leave
mov
adc
lret
pop
fimuls
bound
lahf
sub
test
adc
mov
cmp
mull
idivl
xor
xor
and
stos
push
cmp
mov
out
lcall
jnp
cltd
loopne
stos
fidivrl
adc
pop
movsl
xchg
inc
cwtl
js
xchg
ret
repz
lahf
das
fmull
jb
das
int3
fwait
outsl
dec
and
into
push
or
fcmovnbe
in
xchg
and
mov
test
stos
je
rep
into
aaa
rorl
xchg
or
repz
in
in
sbb
xor
pop
std
cmp
jecxz
dec
mov
loopne
or
sbb
cmp
enter
arpl
mov
lea
out
shrb
sub
mov
shll
push
loope
pop
push
xor
add
jne
or
fisttps
inc
ret
sbb
mov
xchg
mov
mov
or
rcrb
mov
sbb
or
js
mov
push
and
lcall
call
mov
rcll
xor
ja
out
aas
mov
dec
out
dec
test
lds
in
aam
jb
rcll
cmp
call
lahf
aaa
inc
add
inc
push
sarb
enter
and
aas
shl
shl
inc
sub
dec
in
popf
jmp
popa
pop
popa
sub
loop
hlt
fwait
fs
lods
test
jge
mov
inc
mov
and
clc
xor
xchg
clc
dec
mov
and
lock
scas
stos
mov
xlat
lcall
dec
andl
test
sbb
xor
push
pop
je
icebp
or
jp
ud0
inc
push
lahf
mov
loop
xor
outsb
dec
fwait
sub
fdivrl
mov
pop
push
outsb
add
push
shlb
loop
mov
xchg
xor
push
jl
push
inc
imul
and
clc
inc
popf
inc
ljmp
imul
movsb
cmp
jp
in
mov
test
xor
insl
cld
stc
pop
in
xchg
pop
sub
stos
push
icebp
sbb
mov
jg
jns
aam
shll
and
fnstenv
fsubs
fdivs
rclb
add
into
jo
test
pop
cltd
jb
rcrb
jecxz
inc
lods
xor
enter
jmp
ss
lcall
xchg
push
dec
fsubrl
mov
mov
popf
in
xor
iret
cmp
in
aam
loop
lock
gs
das
jp
mov
dec
pusha
fldt
lods
dec
and
stos
jg
push
ror
mov
insl
sbb
jle
pop
jbe
insl
mov
jecxz
test
dec
out
push
adc
dec
int
cs
jne
loopne
and
aas
stos
insl
jae
les
sbb
xchg
jns
inc
es
dec
mov
sarl
mov
clc
add
xor
ljmp
jg,pt
mov
sub
xchg
fdivr
push
leave
push
jmp
push
outsb
mov
mov
enter
pop
xchg
arpl
pop
cmpsb
out
gs
sub
lret
add
outsb
cld
fistps
xor
dec
pop
and
jo
pushl
push
lret
sub
inc
rcrl
mov
and
push
addr16
adc
fldl
push
cltd
xchg
mov
mov
out
stos
std
and
mov
cwtl
and
popw
mov
push
lock
out
fisttpl
ffree
sbb
lock
mov
int
mov
fldln2
push
mov
dec
pop
es
rcr
scas
dec
nop
adc
lds
daa
idivb
adc
es
inc
fs
clc
or
adc
imul
shrb
das
dec
push
test
jo
or
xlat
sub
inc
cmpsb
push
add
inc
lods
xchg
jbe
sbb
fmuls
lods
icebp
or
bound
push
loopne
imul
pusha
push
subl
sbb
dec
loopne
cmc
enter
jl
or
inc
ljmp
jbe
sub
add
sub
arpl
lret
test
mov
hlt
jns
mov
dec
jne
dec
mov
sbbl
xor
sub
xchg
cmp
inc
jl
notl
push
into
adc
dec
pop
push
lods
loope
inc
cmp
or
fldcw
add
mov
movsl
inc
icebp
mov
inc
sub
out
hlt
es
push
int3
adc
movsb
sarl
cmp
mov
push
mov
not
sbb
mov
mov
xchg
out
mov
jmp
rcrb
adc
add
add
daa
pop
in
pop
sub
sbb
jl
out
push
jo
jnp
das
add
cld
mov
fs
fwait
dec
in
outsb
pushf
imul
fdivl
clc
aas
imul
out
lret
rolb
fwait
iret
dec
rcrb
and
neg
in
xchg
cmp
adc
jno
iret
ds
sbbb
xor
ret
mov
jbe
cmp
sti
adc
xchg
outsl
xor
cmp
mov
std
repz
sub
dec
and
xchg
inc
push
decb
fistpll
sbbb
add
movsl
mov
cmpsl
inc
in
fincstp
push
inc
fwait
xchg
cmp
xor
cli
inc
inc
pop
or
in
inc
mov
xchg
pop
lahf
popf
sbbb
push
pusha
ret
xor
or
jb
jne
enter
mov
adc
in
add
movsl
sbb
mov
fwait
repnz
mov
mov
dec
sub
adc
clc
je
mov
fcomps
or
scas
fdivrs
loop
jl
push
or
test
fisubrl
xchg
outsb
pop
into
push
mov
pop
xchg
cmp
mov
mov
add
or
mov
dec
xor
cltd
ja
add
jp
xorl
test
cmp
lahf
jmp
lods
stos
lods
mov
pop
mov
jg
push
clc
xor
dec
jp
test
cmpb
das
mov
mov
pop
mov
cwtl
pop
mov
ljmp
pop
sahf
adc
push
sarb
adc
call
aas
loop
fmull
cmpsl
lcall
mov
dec
mov
pop
xchg
sti
imul
mov
mov
mov
pop
pop
outsb
outsl
lock
dec
test
daa
xor
nop
mov
xchg
adc
pop
jmp
sub
out
push
adc
add
vandnps
outsb
xchg
lret
pop
push
fwait
clc
divb
xchg
mov
fstps
icebp
stos
mov
pop
adc
cmp
push
or
cld
mov
dec
mov
sub
outsb
add
lea
lods
aam
add
add
sbb
fs
ss
mov
dec
xor
cli
and
fmull
mov
push
enter
push
sub
popf
imul
int
push
jge
cmp
repnz
out
pushf
js
sbb
clc
pusha
jle
adc
test
push
rcll
mov
iret
lret
xor
hlt
testb
inc
push
or
adc
fs
push
mov
ret
or
dec
dec
sti
mov
xchg
push
int
in
les
test
sbb
xabort
sub
xchg
test
loopne
inc
adc
mov
jg
in
movb
rcrb
pop
sub
push
sub
cmp
mov
ss
mov
call
inc
loope
mov
sarb
add
dec
mov
adc
or
mov
or
dec
aas
dec
popa
mov
pop
mov
or
loope
bound
aas
pop
cmp
sbb
lods
dec
and
adc
fidivrs
jne
jl
out
cltd
pop
insl
push
push
inc
jne
or
jecxz
cmc
mov
push
out
lret
lret
test
in
mov
push
subb
rcrl
insb
loope
add
pusha
movl
aam
mov
cmp
repnz
rcll
addr16
adc
cli
adc
jmp
std
andl
inc
dec
sbb
push
dec
insb
mov
lahf
xor
xor
jns
and
mov
xchg
lahf
mov
and
cmp
inc
jns
push
xor
adc
in
xor
mov
sbb
into
adc
addb
ljmp
xor
mov
cmpsb
cmp
sub
mov
int
fdiv
aas
adc
mov
cld
ljmp
adc
mov
sub
clc
mov
sbb
call
inc
mov
mov
imul
cmp
adc
jne
inc
loop
adc
scas
mov
ds
shl
adc
scas
testb
aas
outsb
ret
into
int
add
les
test
loop
adc
or
push
adc
lods
xor
mov
insl
mov
mov
jecxz
gs
dec
sub
sbb
iret
mov
enter
jbe
push
pusha
pop
push
rorb
jno
lea
jae
pusha
push
push
xchg
ror
dec
cmp
outsb
nop
xor
sar
mov
data16
sahf
ret
xchg
xchg
pop
arpl
clc
insb
fwait
lret
xor
jbe
sti
jns,pt
or
cltd
leave
sti
jae
or
jne
outsl
sub
mov
xor
stos
aad
int
fsubrp
sarb
dec
lock
int3
in
add
add
clc
add
jae
fnstenv
xchg
inc
adc
out
orb
pop
clc
jnp
nop
jle
popa
sbb
jl
xchg
sub
hlt
pop
jbe
cmp
fistpll
sub
adcl
sbb
ss
pop
pop
mov
enter
ja
adc
jge
cmpsb
xchg
movsb
out
push
or
stos
push
loop
shl
add
or
xor
cmpsb
jge
push
push
jp
aad
adcb
jne
mulb
cmp
jl
and
xchg
push
lahf
xchg
stc
das
int
xlat
adcl
adc
mov
jmp
mov
pusha
xchg
dec
decl
xor
cmpsl
or
cld
dec
aad
mov
xor
lock
roll
mov
push
xchg
mov
hlt
adc
cs
pop
pop
push
fdivs
cmp
adc
sub
pop
mov
cmpsb
mov
dec
rclb
aas
xchg
call
or
mov
movsb
jg
xchg
pop
fistps
sbb
out
scas
mov
or
out
push
add
aas
in
xchg
lds
jmp
dec
movsl
cmp
test
loope
dec
cld
xchg
inc
fnstsw
sub
stos
repz
out
loopne
mov
inc
cmc
push
adc
or
scas
out
jae
lahf
cmp
jo
mov
adc
or
imul
loope
pusha
dec
xchg
pop
pop
ljmp
mov
mov
mov
lea
adc
testb
pop
loopne
popf
popf
dec
int3
getsec
into
andb
lret
out
push
xchg
push
test
or
push
adc
in
lea
repz
push
push
jno
in
iret
ss
mov
xchg
repnz
xlat
xor
incb
xor
dec
outsb
adc
lcall
daa
imul
shll
inc
shl
ljmp
aaa
insb
fstpt
adc
das
sahf
and
or
add
adc
pop
rolb
jg
mov
push
js
cld
sbb
addl
outsl
sub
nop
int
dec
sbb
popa
pushf
xchg
int3
test
es
js
pusha
xlat
add
push
into
mov
scas
lds
adc
mov
dec
jnp
loope
jecxz
ja
push
ret
cmp
jbe
mov
fsubs
push
and
scas
orl
sub
add
push
jno
sub
iret
xchg
jbe
cmp
inc
ss
loope
in
aas
dec
and
cmpsb
sti
dec
shlb
lcall
push
cld
and
lahf
stos
repz
jae
cmp
mov
add
jle
or
adc
pop
das
faddp
push
sub
fwait
lea
cmpsl
xchg
popf
loope
aaa
lds
shlb
jnp
cmp
icebp
scas
mov
movsl
test
jge
cmpsl
jne
repnz
adc
and
subb
popa
sub
test
sub
push
xor
aas
push
stc
enter
xor
loopne
cmp
cmp
iret
mov
lret
cwtl
mov
adc
inc
ljmp
pusha
inc
daa
or
es
test
int
inc
rcll
add
out
add
popf
xor
or
jg
jne
fstpl
xlat
cmp
imul
int
mov
mov
fisttpl
add
push
loopne
pop
sahf
xlat
stos
xor
adc
jl
roll
int
fcoms
xchg
pop
cmp
mov
out
outsl
or
mov
pop
mov
cmp
mov
cmp
subb
push
stos
aas
add
iret
rcl
push
rorl
and
std
out
lds
sahf
inc
jmp
lock
pop
mov
pop
jmp
sbb
data16
pushf
mov
jno
rsqrtps
shll
adc
mov
stos
add
popa
or
rcrl
adc
inc
jbe
test
lea
jle
push
orw
das
or
dec
mov
loopne
or
xchg
sbb
sbb
mov
in
cmp
aas
dec
rorb
in
shll
lods
inc
pusha
jp
and
stos
push
data16
andb
outsb
rorb
jge
out
push
lock
mov
lahf
pshufw
or
xor
mov
cmpxchg
xchg
fsub
data16
pop
adc
or
push
and
call
stc
inc
sbb
sbb
mov
enter
mov
ret
jmp
repz
arpl
dec
mov
xchg
outsb
jmp
leave
test
jae
fnstsw
movsl
out
lods
leave
inc
cmp
fisttpl
mov
loopne
insb
test
iret
mov
or
adcl
ret
aam
mov
fs
popa
jbe
ss
sbb
sub
leave
cltd
or
cmpsl
rolb
mov
negl
xchg
aad
and
and
pop
scas
inc
mov
mov
imulb
inc
pop
xlat
fidivrl
fs
cltd
mov
js
pop
lds
jecxz
lods
lea
loope
mov
lock
sbb
jo
mov
ret
cmp
and
jno
icebp
addb
jl
jle
cmpsl
lods
outsl
dec
test
jns
in
in
jg
loope
and
and
insb
ss
pop
adc
adcl
cmp
sbb
or
icebp
dec
mov
dec
jl
mov
jb
push
xorl
inc
or
jb
jnp
dec
sbb
dec
or
mov
xor
xor
xor
out
lcall
pop
cwtl
stos
nop
mov
mov
daa
test
cmc
lcall
adc
sahf
cmpsl
insb
mov
sbb
xor
adc
xchg
jle
sbb
test
ret
loopne
stos
sbb
dec
dec
jo
scas
hlt
add
mov
and
push
iret
lods
push
jecxz
sbb
dec
std
mov
out
jmp
mov
dec
adc
outsl
add
mov
pop
incb
sbb
add
xchg
pop
aaa
sbb
addr16
outsb
push
mov
les
pop
mov
mov
in
cmp
outsb
push
cld
scas
int3
js
pop
sbb
movsl
pop
cli
and
cmp
lcall
dec
push
out
mov
mov
loope
push
push
adc
push
xchg
jg
add
xchg
jnp
sub
xor
in
add
es
dec
in
xor
leave
push
les
inc
xchg
xor
gs
xchg
push
popl
int
add
cmp
pop
or
cs
add
pushf
aas
decl
imul
ja
in
adcl
lds
dec
ret
mov
mov
pop
cmp
stos
mov
adc
clc
iret
and
add
or
jnp
pusha
mov
in
cwtl
cmpsl
jmp
adc
and
add
mov
andb
fs
jmp
shr
dec
lcall
xor
cmp
sbb
arpl
mov
mov
loopne
inc
ljmp
jae
fsts
pop
popa
ss
mov
mov
add
in
ljmp
aas
dec
cmp
outsl
pop
sub
cmpsb
insl
inc
in
shlb
aas
inc
out
out
sbb
addl
in
inc
lret
cmpsb
faddl
out
dec
dec
loopne
mov
or
add
mov
out
add
popa
mov
mov
lcall
repnz
mov
add
dec
dec
cwtl
add
xchg
imul
adc
std
push
xor
shlb
movsb
daa
inc
xchg
or
jne
das
arpl
fwait
movsb
push
jnp
sbb
mov
or
movb
fdivrs
pop
into
push
into
inc
ret
mov
pop
fcoms
pop
inc
adc
daa
mov
adc
sahf
daa
adc
fld
jl
push
movsb
fiaddl
mov
sbb
mov
test
mov
fiaddl
mov
shl
fisttps
mov
icebp
out
xchg
pop
mov
jo
adc
and
cmpl
movsb
mov
lds
je
ljmp
jmp
sbb
repnz
jb
xor
push
imull
jb
mov
and
inc
xor
outsb
int
inc
add
sub
mov
in
call
push
scas
or
mov
xor
add
mov
into
cmc
push
sbb
mov
jge
or
cmp
mov
xchg
pop
lea
stos
fsub
test
pop
loopne
mov
pop
jns
jecxz
test
outsb
pushf
imul
mov
inc
out
or
push
test
mov
stos
in
mov
cwtl
aam
inc
sub
sbb
lret
xchg
aad
xor
lcall
int3
pop
out
cmp
ss
shlb
cmp
or
and
dec
pop
adc
inc
adc
cwtl
mov
dec
dec
das
iret
inc
out
and
pushf
out
dec
and
mov
adc
pop
lds
xchg
inc
mov
pop
pop
sub
cmc
sbb
pop
shlb
dec
int
addb
mov
in
test
stc
test
ret
xchg
pusha
push
das
xchg
btc
aam
dec
and
aad
sub
je
popf
imul
adc
jmp
adc
inc
push
outsl
mov
adcb
inc
and
pushf
hlt
outsl
sub
repnz
les
mulb
cli
in
add
sub
and
je
aam
and
sbb
and
ja
add
into
sub
shr
clc
mov
ss
jbe
mov
test
loop
dec
cmpsl
mov
xor
fs
loop
pop
mov
cmp
inc
push
js
enter
aad
fldl
sbb
adc
xlat
daa
psllw
pop
rorl
sbb
sbb
add
or
in
cwtl
sbb
fistps
push
sub
inc
xchg
enter
mov
out
and
sbb
push
lret
insb
fstl
je
std
xor
jno
inc
sbb
pop
mov
adc
js
loope
scas
in
test
lods
pushf
rcll
sub
pop
arpl
shrb
push
lcall
mov
outsb
add
iret
cltd
and
repnz
push
arpl
mov
dec
andb
jge
pop
jb
fldl
inc
ret
stc
push
jae
ljmp
push
dec
mov
sbb
sbb
testb
lods
mov
orb
lret
pop
push
cmp
mov
adc
movsb
fiaddl
adc
or
dec
je
push
add
in
aas
test
push
scas
mov
rol
ret
int
xchg
fimuls
pop
fisttpll
and
flds
mov
and
call
sbb
pop
je
cmp
lds
inc
push
ds
mov
pcmpeqb
in
cmp
mov
fwait
mov
cmp
es
mov
mov
sbb
jo
jns
mov
sbb
stc
je
mov
pushf
fucom
mov
dec
sbb
cmp
movsl
nop
and
andl
js
aaa
mov
ja
int3
sub
adc
add
cld
xchg
shll
mov
sub
test
fsubrp
rcll
arpl
loope
in
lret
pop
ret
lock
rep
lods
xor
sub
imul
inc
out
arpl
xchg
xlat
scas
mov
stos
mov
jae
daa
test
jne
jnp
xor
cmp
es
and
pop
paddd
mov
outsb
sti
cmp
movsb
inc
call
pop
cmp
iret
mov
xchg
in
jmp
mov
movsl
cmpsb
mov
or
jo
sti
adc
sub
icebp
nop
mov
pop
jne
adc
push
sahf
loopne
sarl
inc
pop
inc
hlt
sarb
jb
adc
mov
in
pop
mov
and
push
movl
or
sbb
push
roll
mov
es
inc
jg
scas
sbb
mov
push
in
loope
lods
pop
aad
enter
mov
repnz
in
loopne
xchg
mov
mov
gs
ret
test
mov
sbb
xchg
pop
xlat
sbb
rolb
enter
mov
pop
xor
add
pop
movsb
push
xchg
scas
mov
lods
sub
fstpl
mov
pushf
lahf
enter
aam
mov
and
mov
dec
and
push
cmp
xor
int
rcll
notl
sbb
xorl
sub
jle
inc
movsb
sbb
push
or
dec
movsb
imul
adc
push
push
pop
push
jmp
aas
mov
push
out
int3
dec
das
jno
loop
loop
andl
jbe
filds
xchg
repz
vpavgw
sahf
scas
movb
mov
sbb
pop
aaa
sahf
clc
cmp
adc
arpl
sub
rclb
cmp
stc
dec
xchg
add
call
cmpsl
push
push
repnz
movsb
jae
dec
sub
pop
lahf
adc
xor
mov
mov
jae
stc
jl
inc
and
mov
lret
push
aaa
xchg
push
test
lahf
lods
xchg
dec
pop
out
and
int3
inc
rcrl
stc
push
inc
lret
pop
xchg
pop
add
add
push
mov
out
pusha
mov
and
pop
pop
pop
mov
lret
inc
mov
cwtl
sbb
shlb
push
lahf
jmp
jl
or
xchg
xchg
aad
out
push
mov
mov
out
je
xchg
xlat
push
adc
nop
lret
jl
mov
das
leave
outsl
lret
jg
and
jae
addr16
in
jecxz
inc
test
cltd
dec
xchg
cmp
ljmp
shl
fcmovu
dec
aam
cmp
cmp
pop
push
loope
sub
xchg
cli
inc
dec
in
cmp
pushf
cmpsb
jecxz
repnz
in
repnz
test
loopne
pusha
lock
add
or
lret
cmp
dec
movsb
or
xchg
adc
rolb
and
pop
neg
gs
sahf
out
jle
cmp
dec
aas
lret
jbe
jle
xchg
sub
mov
push
adc
mov
cltd
icebp
inc
sbb
push
lods
nop
loope
fs
jnp
push
cmp
js
mov
stc
add
dec
notl
push
popf
jmp
jbe
add
fwait
inc
xchg
add
sbb
push
or
mov
pop
jmp
pop
inc
cmpsl
sbb
popf
les
xor
das
cmp
cmp
xor
jmp
inc
in
test
bound
shlb
mov
aas
repnz
push
mov
dec
jno
mov
int
fmuls
stos
subb
imul
mov
fsubrl
stos
cltd
insb
std
pusha
in
mov
sti
int3
inc
xchg
xlat
or
and
xlat
insb
push
cmp
inc
mov
pop
je
push
push
mov
cltd
push
push
mov
daa
mov
mov
push
fdivs
dec
push
fmul
jecxz
adc
aam
sbb
cmp
cmp
mov
inc
mov
mov
push
inc
das
inc
cmc
aaa
fldenv
push
mov
cmc
mov
mov
push
int
sbb
add
sahf
push
and
adc
ret
loopne
daa
mov
mov
jb
fstps
mov
pop
into
lds
sub
adc
adc
mov
dec
xor
add
jnp
daa
ret
inc
mov
scas
push
sbb
mov
inc
rcrb
fsubrp
xor
movsb
sub
int
cwtl
sarl
test
mov
sub
data16
mov
out
add
stc
stos
adc
idiv
dec
rorb
cmp
rcrl
cmc
sub
shr
mov
ljmp
repnz
aas
mov
and
push
mov
or
aas
or
es
sbb
jp
xor
mov
adc
sti
jl
jns
or
adc
mov
and
xor
movsl
out
xchg
cmc
or
adc
mov
rclb
xor
prefetch
cmpl
cmp
pop
les
test
outsl
push
int3
jmp
mov
jecxz
adc
push
cmp
sti
sub
pop
mov
pusha
cmp
push
flds
jp
xor
xchg
sbb
add
lds
xchg
ss
lods
xor
repz
mov
push
fisttpl
xchg
or
je
rcll
out
mov
sbb
leave
cmpb
movsl
repz
out
dec
dec
mov
add
icebp
into
push
cmp
aaa
add
out
lsl
shrl
fwait
sbb
icebp
mov
jb
fwait
or
faddl
cli
rol
push
aaa
ja
mov
outsb
jmp
add
rol
mov
cmp
push
push
add
cmpsl
out
cmp
add
cmp
mov
cmp
test
lret
cmpsl
mov
push
imul
insb
mov
xchg
sahf
mul
sub
rcr
std
mov
inc
mov
and
aad
sub
fists
mov
pop
nop
out
push
ds
pop
lock
jle
mov
ja
adc
mov
xchg
pop
arpl
je
imul
mov
insl
repz
insl
sti
xchg
mov
jns
xor
insb
push
roll
xchg
mov
pusha
and
aas
inc
repnz
pop
lods
mov
cmp
mov
mov
loope
cmc
xchg
lods
in
pushf
mov
das
cld
std
mov
push
and
and
mov
lcall
arpl
loopne
sbb
sbb
out
jg
movsb
jecxz
call
sub
mov
mov
lods
sub
enter
loopne
cmp
or
sbb
push
push
or
sub
xchg
test
inc
adc
push
leave
xchg
ret
adc
or
push
mov
daa
jno
xchg
cmpl
or
addb
mov
jp
movsb
dec
mov
test
pop
push
je
xchg
int3
psrad
lock
mov
int
mov
cltd
fs
outsb
repnz
adcb
imul
mov
gs
xchg
xor
mov
dec
jnp
into
lahf
sub
cmpsl
inc
jge
andb
and
xchg
lahf
fidivrs
adc
xor
mov
jecxz
lds
pushf
fldenv
clc
hlt
int3
dec
xchg
push
in
data16
push
cli
stc
into
shlb
jb
ja
pop
ljmp
push
movsl
lock
test
jecxz
xchg
and
cmp
jl
xlat
push
cld
sub
in
in
sub
imulb
popa
jge
jmp
mov
sub
push
or
xor
sub
sub
mov
out
loop
xor
sbb
insb
sbb
gs
push
xchg
dec
push
mov
or
fnstcw
fistps
jle
inc
addl
jnp
gs
inc
mull
pusha
int3
cmp
jnp
out
jl
out
pop
push
roll
sub
adcl
pop
data16
mov
mov
mov
leave
push
loop
mov
adc
mov
movsl
lahf
fsubrp
mov
pop
ret
cmc
fimull
mov
lods
mov
inc
in
cmc
xadd
daa
jbe
jl
idivl
imul
push
aas
push
inc
mov
pop
mov
stos
mov
fcompl
add
shrb
flds
call
lods
cmp
std
mov
push
mov
mull
cli
pop
popf
or
jmp
pop
andl
cld
push
mov
push
or
jecxz
pop
shl
sub
ja
mov
or
sbb
repnz
mov
pop
scas
fcompl
enter
shrl
in
movsl
mulb
stos
in
ret
fdivs
ss
pop
and
jmp
mov
fs
or
fistpll
inc
pushf
int
or
sub
outsb
or
xor
and
out
lahf
cli
mov
es
pop
pop
idiv
jle
mov
shlb
xor
push
cmpsl
adc
mov
mov
push
in
and
lcall
mov
addr16
jns
in
xorl
dec
mov
mov
fs
or
out
dec
test
sbb
aam
pop
stos
mov
cmc
jmp
cli
leave
fsubrs
xor
nop
sub
adc
ret
leave
adc
ja
cmc
inc
mov
or
fbld
call
pop
fisubrl
leave
jge
dec
mov
inc
jo
fcompl
cmpb
jnp
jle
gs
fimuls
je
mov
jo
xor
enter
int3
out
lea
cld
mov
data16
push
lock
xlat
sub
jns
cwtl
xor
jge
pushf
outsb
mov
pop
dec
ret
lods
cmp
mov
stos
lret
jp
push
add
jecxz
cmc
popa
repz
pop
xchg
test
addr16
insb
push
jmp
in
cmp
sbb
movsl
gs
jmp
cmpsb
adc
and
and
ja
jecxz
inc
push
mov
xor
sbb
sbb
push
adc
cmc
into
gs
mov
shrl
in
add
repz
mov
cltd
sbb
shl
pushf
movsb
xchg
aaa
pop
cmpsl
dec
fs
mov
mov
mov
idivl
mov
test
das
ljmp
xor
xor
cmc
mov
xor
xchg
sahf
repnz
rorl
int3
add
push
hlt
or
call
or
sarb
adc
orl
cld
xchg
push
xchg
lds
aas
repz
dec
cmpsl
cmpsl
xchg
sub
lock
test
push
pop
sbb
movsl
jae
out
clc
adc
sahf
sti
in
repz
lods
lahf
sub
popa
cmpxchg
cmpsb
mov
enter
pop
lock
rcrb
adc
insb
shr
cltd
mov
orl
cmp
add
push
mov
xor
pop
int3
adc
sarl
dec
fwait
jno
xchg
fisttpll
ss
mov
inc
jns
jl
pop
and
jmp
sbb
dec
mov
sbb
xor
andb
test
dec
scas
pop
fwait
cmpb
add
popa
mov
aas
push
jb
mov
cmpsl
mov
aam
cmp
int3
fs
jmp
imul
jae
ljmp
add
imul
unpckhps
sbb
je
push
mov
adc
and
ja
mov
cmpb
sbb
or
sbb
fsub
xchg
dec
cmpsb
es
jne
mov
or
or
dec
mov
fcom
repz
xor
fcmovnu
add
es
andl
imul
daa
push
call
or
cmp
push
dec
cmc
iret
mov
adc
setno
cmp
mov
and
sbb
fstps
pop
shlb
in
popa
or
and
mov
lret
jle
das
or
jecxz
push
callw
and
ss
repnz
mov
fwait
inc
jecxz
adc
push
fcmovbe
dec
mov
or
cmc
pop
push
lcallw
mov
ds
xchg
push
aad
fldt
jb
loop
popf
pop
stc
xor
frstpm(287
mov
push
pop
pop
sbb
test
pushf
iret
cmp
push
inc
push
lods
jno
cli
inc
ja
fsubr
xor
mov
jp
jecxz
push
movsl
bound
jmp
ret
pop
outsb
jecxz
add
inc
aas
lahf
loop
pop
xchg
cmp
lods
add
sub
cmp
lds
push
cmp
xor
aam
push
test
push
stc
rcrl
ds
or
in
dec
int
and
int3
add
push
or
insb
ja
push
repz
fcompl
push
pop
xor
aaa
xchg
sub
xchg
rcrb
in
setbe
push
sub
mov
decl
dec
test
mov
jbe
ret
fsubr
pop
add
ds
inc
outsb
jp
add
divb
sub
mov
sarb
add
inc
lods
pop
shll
or
mull
jg
sarb
dec
push
mov
test
or
mov
push
fnstenv
pop
push
adc
scas
dec
xor
pop
xchg
mull
popa
adc
inc
fiadds
xor
jp
or
jp
mov
xchg
das
imul
stos
lods
push
adcb
ret
stc
jle
dec
xlat
arpl
jne
mov
shll
pop
xor
into
xchg
inc
and
push
dec
js
and
xchg
lods
or
sub
add
sbb
stos
enter
test
data16
xchg
pop
fucomi
jge
ds
pop
push
lods
test
fimull
push
push
mov
mov
inc
std
lds
imul
pop
push
int3
sub
fldz
mov
in
xor
stos
nop
mov
out
stos
adc
inc
repnz
push
cmp
dec
and
push
pop
stos
insb
push
or
push
add
in
mov
mov
outsl
adc
jnp
es
mov
daa
adc
push
cwtl
pop
out
mov
xchg
fsubs
jge
mov
rol
or
push
jnp
lock
stos
add
mov
cmp
clc
es
outsb
xlat
mov
jp
or
ljmp
aas
mov
pop
adc
dec
lcall
mov
jns
pop
inc
pop
mov
push
es
out
sbb
push
leave
out
and
pop
fwait
popa
subl
inc
orl
or
sarb
outsl
rcrb
in
dec
xchg
jns
and
scas
add
pop
push
xchg
add
mov
dec
mov
push
mov
mov
sub
xlat
ret
mov
imull
pop
jle
mov
pushf
xchg
call
and
add
xor
stc
lahf
andb
cld
repz
pop
adc
adc
add
fs
int3
scas
rolb
and
xor
adcb
xchg
push
in
jecxz
roll
xchg
mov
push
mov
jno
int3
mov
mov
lret
or
pop
adc
jge
outsl
fs
les
loopne
test
outsb
jge
stc
and
cmpsb
lret
dec
push
xor
std
xchg
xorb
xor
sbb
rclb
sub
lcall
cmp
mov
ret
jno
cmp
sti
ljmp
jle
mov
leave
iret
inc
mov
js
pop
sbb
enter
push
push
scas
mov
inc
or
pop
cmpsl
jnp
add
pop
push
std
jge
lods
sbb
xchg
mov
mov
aas
int3
dec
loope
or
cmp
or
mov
xchg
inc
xor
iret
imulb
xor
dec
mov
js
cmp
es
aaa
add
and
out
jo
push
aam
sbb
dec
test
test
push
xor
sub
jno
xchg
mov
insl
sbb
mov
push
sub
or
xor
orb
inc
push
cmp
inc
mov
add
pop
cmp
addr16
mov
add
imul
in
cwtl
outsl
sbb
aas
add
dec
sbb
fsts
sub
enter
xchg
sarl
xchg
mov
add
add
pop
cltd
sub
aas
sub
out
pop
mov
imul
addr16
cltd
ret
add
pop
in
aaa
mov
mov
or
lahf
xlat
cmp
test
rol
cmpsl
lahf
jle
jnp
leave
push
cmp
xor
scas
mov
fcmovbe
xor
aam
popa
xor
dec
push
call
mov
pop
es
test
shrl
je
bound
in
xlat
push
lret
dec
mov
cmp
adc
push
fnstcw
push
and
jmp
sti
and
testb
cmp
icebp
and
in
ds
fs
shrl
fs
lea
outsl
mov
fdivl
mov
je
pop
cs
je
movsb
xchg
mov
lahf
movsl
daa
hlt
inc
dec
and
xchg
sub
cmp
notl
or
and
push
mov
adc
sbb
ljmp
out
adc
add
mov
mov
jno
xor
sbb
sbb
jmp
out
push
imul
mov
popf
add
or
repz
addr16
enter
out
add
loopne
fs
fldl
pop
stc
sub
dec
and
cmp
jmp
dec
test
sub
and
sub
int3
push
movsl
movsl
dec
dec
or
cs
imul
movsb
into
inc
jbe
rcrb
inc
mov
or
dec
sahf
stc
mov
inc
into
ret
movsl
fwait
mov
xor
cmp
sti
outsb
mov
xor
mov
cmc
mov
xchg
and
sbb
int
and
push
and
stc
rolb
add
mov
fwait
lret
cs
ret
shlb
adc
inc
xchg
lods
sti
test
test
insb
int3
adc
pop
int3
jmp
jg
pusha
test
or
imul
mov
adc
add
mov
and
or
mov
lcall
andb
push
scas
scas
pusha
pop
orb
loopne
or
fsub
jl
pop
jge
adc
push
mov
mov
outsl
les
les
aad
and
lods
lods
sti
iret
addr16
clc
lret
arpl
inc
dec
mov
leave
ficomps
cs
sarb
adc
pusha
out
pop
icebp
cmp
stc
les
lods
stc
push
mov
gs
sti
scas
mov
inc
xor
movsl
imul
cmpl
push
pop
lds
jb
rolb
fmull
mov
cmp
stos
xchg
inc
dec
out
dec
add
pop
ret
jg
movsl
push
les
sbb
lcall
jmp
adc
mov
sub
mov
xlat
add
push
sub
pop
mov
xchg
or
add
push
mov
cmp
ror
mov
mov
insl
pop
mov
adc
iret
aad
push
je
loope
dec
cmc
pop
sub
dec
imul
call
sbb
pop
jmp
mov
or
cmc
push
push
cmp
jo
jmp
mov
pop
or
mov
xor
pop
dec
add
jo
or
dec
js
push
lret
sbb
ss
or
out
ret
adc
sbb
lret
and
mov
pop
push
rorl
popa
inc
aaa
fstl
int
sbbb
aad
je
cld
icebp
stos
popf
mov
ljmp
adc
dec
pop
xorb
test
pop
hlt
jg
lds
fxch
stos
sub
push
loopne
repz
int3
or
cmp
pop
cmp
adcb
fsubs
mov
movsb
insl
cli
pop
sbb
sub
mov
lock
or
adc
movsl
lret
loope
mov
mov
sub
sbb
dec
repz
es
int
mov
push
das
push
stc
push
mov
inc
mov
sbb
mov
leave
ss
insl
push
outsl
xchg
sbb
in
lock
cmp
testb
inc
je
cli
sti
dec
lds
icebp
pop
xor
es
jmp
lds
and
pop
shll
adc
out
sbb
int
adc
cwtl
lahf
mov
lret
in
and
stos
cmpsl
dec
push
add
jp
mov
pop
push
inc
add
or
stos
fidivs
adc
outsb
test
mov
inc
movsl
imul
add
fidivrs
and
jecxz
in
push
aas
mov
cmc
lock
aaa
adc
inc
jno
stos
sub
add
inc
js
jno
andb
pop
sub
mov
test
mov
inc
add
cmp
fisttpl
dec
stc
lods
or
pop
outsb
std
push
mov
dec
ss
pop
insl
jp
cwtl
push
adc
notb
pusha
in
ljmp
aas
mov
sahf
in
cmp
sbb
dec
sub
aaa
sbb
pushf
daa
mov
adc
sub
fyl2xp1
mov
jl
movsl
loop
mov
fptan
lret
pushf
mov
int3
int
xor
arpl
fwait
addr16
je
out
movsb
sub
dec
idiv
int
out
rorb
in
push
int3
aaa
lods
add
test
je
xlat
push
mov
out
in
dec
out
pop
in
lds
pop
push
jae
mov
ret
or
sbb
pop
lock
mov
mov
xchg
imul
sar
sahf
push
repz
dec
in
push
sbb
shll
dec
or
inc
mov
mov
sbb
in
or
or
pop
jge
push
roll
popf
std
xor
fstps
dec
mov
jbe
sti
and
mov
pop
sbb
mov
loope
xor
inc
std
es
xor
mov
pop
mov
sbb
pop
mov
arpl
or
adc
xchg
push
mov
dec
or
mov
mov
push
inc
jo
sbb
sbb
in
push
sub
sbb
dec
pop
scas
test
ret
jo
fwait
add
out
cld
dec
and
sbb
or
and
enter
subb
test
push
nop
int3
lcall
mov
mov
dec
xchg
jb
loopne
jmp
pop
sbbb
push
into
fwait
jbe
jae
inc
jp
lea
mov
mov
gs
shll
arpl
xor
mov
call
sub
inc
pop
cmp
or
insb
adc
mov
xchg
movsl
icebp
mov
xchg
push
xor
sbb
xor
adc
fstps
xlat
fists
cmc
and
jge
fsubl
fmul
dec
addl
dec
mov
sbb
mov
inc
loope
add
ror
loop
leave
js
js
push
popa
adc
mov
lret
imul
and
or
mov
test
out
sti
and
dec
cmp
mov
addr16
mov
mov
mov
pop
das
inc
outsb
push
mov
imul
clc
lock
sbb
or
fists
push
add
xor
rorl
into
aad
pop
inc
insl
in
ret
xchg
lods
lcall
test
test
pop
inc
sub
jno
or
pop
mov
xchg
sbbb
std
fistpll
enter
mov
adc
xor
pop
out
sbb
les
cmc
mov
imul
addr16
jg
mov
enter
mov
cmp
dec
je
cmp
push
dec
out
jo
hlt
cwtl
cs
pop
cld
lret
rcll
in
dec
xchg
andl
mov
out
cmpsb
sub
xor
jo
test
pop
sbb
fcompl
test
adc
rol
jb
roll
jl
inc
dec
in
pop
pop
sub
jmp
aas
int3
test
inc
cmp
ja
jno
sub
sbb
in
ret
shll
lods
xchg
int
mov
adc
push
mov
push
sbb
mov
ret
push
push
jnp
hlt
xor
xchg
inc
sub
mov
jmp
add
mov
mov
adc
cwtl
ljmp
jl
pop
daa
aaa
das
jge
call
dec
cmp
sub
jge
fimull
cmpsl
push
int3
leave
fisubl
fisttpl
dec
xchg
xchg
mov
add
popf
sub
or
ja
xor
jp
or
lcall
andl
sti
push
adc
rcrb
xor
mov
scas
outsl
daa
xchg
or
shl
loop
in
add
lahf
mov
aam
sub
push
scas
aaa
mov
jnp
sbb
mov
add
pop
int3
out
adc
std
fcmovu
pop
pop
adc
andb
outsl
pop
push
pop
mov
push
push
mov
adc
mov
push
pop
sub
mov
repz
dec
insl
jp
jns
jl
mov
mov
add
out
push
xor
vdivsd
lock
push
dec
mov
addr16
dec
andl
jp
frstor
dec
in
inc
call
add
jnp
lahf
lock
add
xchg
in
icebp
mov
into
mov
adc
xlat
aas
aaa
fs
mov
lods
cmp
in
lds
fsubrs
or
cmp
test
cld
into
adc
adc
lods
jno
dec
out
out
sub
mov
xor
test
or
adcl
stos
andl
xor
mov
inc
push
into
inc
jecxz
sub
sarb
loopne
or
or
mov
sub
cmp
daa
insb
push
pop
arpl
divb
loopne
and
mov
mov
cwtl
loopne
inc
push
adcl
in
frstor
xchg
loop
dec
mov
mov
aaa
in
push
lock
sub
xor
pusha
and
add
pop
lret
dec
jns
loop
cwtl
dec
lock
dec
add
lahf
inc
das
xchg
aas
and
andl
mov
scas
fildl
xor
rorb
ljmp
sub
jae
push
mov
dec
mov
loopne
push
int3
mov
jnp
std
ficoml
mov
movsl
frstor
sbb
inc
insb
int3
sbb
inc
and
enter
test
in
dec
imul
ss
jp
pusha
fadds
insl
fsts
mov
outsl
enter
lock
lods
rolb
pop
jmp
or
popf
movsl
in
incl
inc
cmp
xor
xor
jno
insl
pop
push
clc
mov
jge
mov
sti
dec
je
or
ficoml
int
xor
pushf
insl
mov
cmp
xchg
fimull
dec
push
sub
insb
int3
jns
data16
stc
sub
mov
pop
xlat
bound
leave
mov
mov
mov
ret
loop
ret
push
sahf
mov
and
xchg
push
iret
cmp
fs
pop
cmp
adc
in
shlb
lds
adc
test
aad
cltd
mov
xchg
xor
pusha
sbb
lahf
test
sub
arpl
repnz
adc
mov
mov
lods
fiaddl
inc
inc
icebp
fwait
push
ds
test
outsl
lahf
fcompl
or
in
clc
hlt
cmp
hlt
xor
stos
and
mov
imul
mov
inc
into
rolb
fucomip
and
sbb
test
js
sbb
int
dec
fidivrs
dec
jge
xchg
in
insb
cmpsb
or
or
push
inc
incb
push
jle
andl
outsb
pop
ja
test
test
gs
xor
pop
adcb
test
cmp
test
aad
addb
jecxz
mov
jge
imul
cwtl
fldenv
sar
sub
imul
jae
sti
aam
test
imul
and
add
or
in
sub
test
inc
addr16
loop
fmull
cwtl
xor
leave
jl
fmull
ret
rol
sti
clc
insb
or
push
pop
aad
pop
mov
jb
mov
scas
push
cmc
add
mov
pop
push
xchg
xchg
rcll
xchg
inc
enter
jb
mov
pop
xor
xchg
sti
adc
sbbl
adcl
dec
xlat
imull
fistpl
cltd
loop
xchg
stos
imul
mov
sahf
sbb
push
and
fwait
xor
out
mov
mov
xor
cmc
or
and
push
hlt
jns
jge
shl
mov
pop
push
xchg
xor
and
aaa
dec
orb
push
dec
stos
push
cwtl
popa
movsb
sub
xchg
and
jne
and
lods
inc
push
loope
adc
pop
jns
dec
addl
nop
jno
jmp
insl
inc
hlt
loop
dec
sahf
bnd
sub
hlt
dec
push
adc
mov
inc
dec
and
icebp
and
scas
jo
es
out
mov
xchg
jno
pusha
stc
and
cmp
ror
push
sti
shlb
push
sar
cmp
sub
push
jecxz
movsb
inc
in
imul
popa
test
jo
test
adc
inc
mov
movsb
iret
sbb
mov
inc
into
xchg
leave
imul
pop
fwait
sbb
push
imul
lods
adc
mov
lgs
cmp
jo
fadd
lea
lret
scas
std
dec
in
or
xchg
aas
sahf
stos
pop
outsl
aam
shlb
pusha
jae
cli
xlat
cmp
dec
or
cmc
outsb
xor
jp
in
test
decl
mov
jp
adc
jmp
lret
dec
pop
mov
fsubrl
or
adcb
fcoms
cwtl
inc
adc
or
stc
dec
xchg
movsl
and
aam
mov
cmp
mov
cmp
mov
test
je
inc
loop
sti
mov
sub
aas
pop
inc
js
mov
adc
inc
push
jecxz
cli
test
stos
sub
sahf
dec
repnz
out
mov
push
mov
notb
pop
outsb
xchg
rclb
addr16
sbb
rolb
mov
jb
stc
cwtl
lds
movsl
or
jne
cmc
inc
insl
cmpsb
mov
or
push
adc
enter
insb
lods
ret
sbb
jmp
loopne
xor
push
dec
sbb
mov
jmp
bound
into
arpl
cmc
bound
jno
bound
jb
pop
dec
adc
test
cld
or
mov
cld
mov
ret
pop
test
and
daa
in
mov
jp
sbb
pop
xchg
out
dec
sbb
daa
and
sbb
data16
int3
prefetch
mov
movsb
mov
fwait
add
std
clc
je
sub
movsl
jg
std
mov
rcrl
sbb
popa
or
sti
sbbl
pop
push
cmp
mov
out
lcall
push
xor
xchg
mov
neg
sbb
ss
ret
fldenv
mov
mov
or
lea
loopne
lret
sub
ficomps
jne
sbb
daa
adc
push
loope
sbb
xchg
ljmp
ljmp
rolb
dec
neg
mov
mov
scas
inc
dec
mov
xchg
loopne
push
lahf
orb
cmp
ljmp
sbb
rcrb
pusha
rol
out
jne
test
ffreep
movsl
ficompl
push
std
int3
and
push
or
cmp
mov
nop
aaa
mov
cmc
adc
mov
stos
std
sahf
cld
aaa
mov
adc
mov
jle
push
call
pushf
push
jmp
lahf
dec
lret
psllq
icebp
mov
stc
dec
and
inc
sub
adc
insl
mov
fnstenv
adc
mull
dec
scas
add
shrl
lods
push
inc
leave
pop
enter
jae
adc
into
shll
mov
ja
negb
iret
sbb
xor
lock
aas
jge
xchg
fsts
mov
pop
das
pop
int
pop
dec
jmp
call
pop
adc
push
mov
mov
pop
imul
ret
inc
xor
add
shlb
imulb
mov
int
test
outsl
cltd
mov
dec
mov
dec
push
dec
scas
shlb
dec
cmp
popa
xchg
mov
test
lock
movsb
jecxz
sti
fcomps
int3
mov
sbb
insb
dec
testl
shll
xchg
xchg
fs
mov
sahf
xlat
arpl
fwait
xchg
movsb
inc
pushf
roll
jb
sub
divb
jbe
subb
mov
in
mov
cld
pop
sbb
bound
mov
add
rolb
adc
adc
in
mov
inc
dec
xor
lahf
aad
fimull
jns
xor
insl
mov
lds
xor
inc
pop
and
cld
adc
add
inc
shrl
call
je
jne
pushf
loope
ss
stos
or
dec
fnsetpm(287
test
mov
mov
inc
and
xor
icebp
jecxz
jns
leave
inc
push
xor
inc
sahf
push
fildll
add
mov
ret
js
les
outsw
movsb
dec
push
push
ds
xchg
enter
subb
cmp
mov
std
cld
flds
add
xchg
dec
addb
dec
pusha
mov
outsb
rcll
loop
mov
mov
mov
fidivrl
sbbb
cmp
mov
dec
pop
inc
xchg
and
mov
inc
jecxz
mov
adc
sahf
mov
test
ret
pop
jp
rolb
call
xchg
icebp
aas
fs
fidivrs
inc
loopne
sub
xor
xor
cmp
iret
inc
inc
out
fstps
mov
aaa
jb
jle
push
call
mov
pop
sete
subl
push
inc
push
xor
std
inc
mov
int3
adc
stos
xchg
arpl
adc
adc
in
push
push
jno
or
push
cmp
mov
mov
dec
xor
data16
rorl
push
ror
loope
in
adc
cmp
fwait
jbe
mov
mov
pop
inc
jge
lret
push
fmulp
cli
std
adc
push
sbb
pop
in
jo
fs
push
xchg
mov
inc
push
mov
cli
ljmp
test
mov
pushf
test
mov
fwait
xchg
xor
jge
insb
inc
inc
lods
mov
outsl
pop
fisubrl
push
push
xor
xor
sub
mov
dec
fisubrs
loop
cmpsl
xor
sahf
cmp
lods
mov
loope
jge
or
fcmovnu
jmp
mov
gs
out
add
arpl
testl
jno
push
push
test
sbb
jae
sbb
stos
sbb
popa
in
mov
clc
and
adc
ret
lret
and
stos
notb
inc
outsl
das
inc
popf
mov
vmread
or
popf
xchg
insb
std
and
add
ds
das
pop
repnz
cmpsb
inc
dec
repz
dec
das
fldt
repz
xchg
popf
dec
jno
add
xchg
insl
out
sbb
test
stos
jnp
xchg
pextrw
sbb
dec
lds
pop
nop
lods
je
pop
inc
sub
jbe
xchg
xchg
mov
imul
sub
dec
fmul
mov
inc
inc
mov
cli
int
lcall
std
mov
data16
rclb
xchg
jne
sub
inc
xlat
mov
pusha
push
sub
es
pop
sub
or
lret
and
sub
fidivrs
loop
mov
cmp
dec
inc
push
inc
jne
xor
push
lods
add
xor
popaw
mov
and
mov
andl
leave
repz
mov
xchg
sub
adc
cmp
jg
xor
and
xchg
push
call
stos
xor
dec
jns
shlb
mov
cltd
fsts
data16
pop
jmp
insl
or
push
or
inc
lock
add
or
adc
pushf
leave
xorb
clc
push
sbb
sbb
or
fdivs
in
mov
insl
adc
fcmovne
int3
jmp
dec
imul
mov
lds
cmpsb
and
xchg
pushf
std
lea
paddb
movsl
sbb
add
jle
bound
xor
sub
in
mov
add
in
and
sbb
cmp
xchg
mov
mov
sub
cmpsb
xor
loopne
imul
aaa
sbb
pop
pusha
pop
dec
xchg
push
and
ljmp
cmp
repnz
mov
mov
rcl
push
mov
xor
xchg
int3
sub
sub
and
inc
ret
repnz
push
in
mov
add
dec
cmc
jmp
insb
inc
cmp
lods
loope
dec
push
or
rolb
mov
lcall
push
das
arpl
push
popa
xchg
push
lahf
or
aam
push
mov
leave
adc
xor
test
mov
sarl
arpl
in
and
fwait
daa
jmp
movb
sub
ds
idivb
movsl
xchg
xor
and
lret
in
mov
sar
mov
add
cli
dec
dec
fildl
frstor
inc
test
repnz
ret
sbb
add
ror
mov
fdivrs
cmp
xor
mov
jge
jo
ret
push
mov
cwtl
push
mov
ss
pusha
fisttps
dec
xchg
int3
cwtl
cmp
stos
push
inc
jmp
jbe
push
cmp
pop
push
aaa
dec
push
push
xor
mov
bound
mov
lret
add
inc
jmp
mov
ds
dec
out
data16
push
xor
inc
add
test
bound
cmp
mov
ficomps
cmpsl
stos
rcl
hlt
xchg
scas
js
and
scas
sub
shrl
push
mov
ds
not
mov
out
pop
xchg
rcll
pop
roll
add
lcall
sar
pushf
mov
fisttpll
inc
add
ljmp
push
sub
int
iret
cmpsl
mov
fwait
mov
les
mov
xor
int
cmpsl
int3
movsb
and
add
movsb
jbe
sarb
sti
mov
es
test
and
mov
dec
sbb
jo
xchg
xor
imull
ja
insb
scas
add
sbb
push
mov
xor
call
mov
jge
decb
les
jecxz
or
out
mov
inc
inc
aaa
es
lahf
bound
fstps
aam
and
jge
xchg
int
sbb
push
nop
and
xlat
test
xchg
insl
xor
push
xchg
push
test
faddp
ret
push
shlb
orb
js
push
pop
push
xchg
repz
aas
adc
imul
sbb
dec
xchg
add
out
ficompl
and
ljmp
shr
aad
cmc
mov
cmp
sti
xor
ljmp
sub
dec
dec
out
add
mov
leave
inc
adc
ds
rcr
call
pop
xchg
pop
xchg
and
fcoms
pushl
push
adc
loopne
push
sahf
loope
iret
mov
jle
fucom
xor
sub
insb
jecxz
adc
cmpsl
rorb
in
rcrl
notl
mov
fxtract
xor
push
jl
push
sub
push
lods
fsts
fwait
mov
dec
xchg
sub
addr16
call
jp
and
out
mov
insb
cli
mov
int
dec
outsl
loop
stc
pop
dec
pop
and
pushl
jo
aad
sahf
or
jmp
cmpsl
adc
shrb
jbe
mull
mov
adc
addl
ret
icebp
jno
jecxz
jmp
jge
je
jg
adc
mov
lret
stos
lahf
adc
insl
movsb
sbb
adc
or
cmpsb
jg
scas
xor
inc
leave
jb
sbb
dec
jl
ljmp
movsl
stos
jnp
inc
in
pop
pusha
fcompl
push
and
nop
popa
test
aas
dec
xlat
inc
xchg
xor
push
pop
les
add
hlt
daa
pushw
push
orl
push
addb
imul
rcrl
jo
adc
xor
jo
shr
pop
sbb
lret
inc
push
sbb
pop
pop
dec
and
popf
in
sbb
jle
pop
cmpsl
mov
nop
inc
sbb
cmc
add
je
sahf
pushf
mov
adc
in
lds
fcomps
test
pop
xchg
outsb
mov
es
jno
mov
xchg
inc
add
addr16
adc
jle
inc
rol
pop
call
daa
xchg
dec
jp
jl
out
int3
mov
fstps
in
icebp
push
inc
pop
outsl
jo
mov
in
sub
inc
and
out
cmp
push
ret
cmpsb
pop
icebp
push
subb
pop
xchg
mov
mov
mov
dec
jge
mov
lret
je
movsb
dec
leave
mov
mov
adc
mov
mov
int3
nop
mov
fistl
ret
aas
pop
shr
or
test
nop
adc
jb
mov
fbld
lcall
lods
dec
fistpll
dec
xchg
daa
push
inc
stc
les
and
dec
sbb
add
pop
andb
emms
stc
daa
scas
call
sbb
leave
mov
sti
sub
out
push
pop
and
call
and
ljmp
sub
sbb
hlt
inc
cmp
daa
push
in
mov
mul
rcl
addb
pushf
aad
jne
shll
fdivp
push
lret
mov
shrl
and
aad
cwtl
lahf
or
aam
cmc
jmp
js
bound
jp,pn
bound
push
test
cmp
pusha
and
jno
in
or
push
push
mov
sub
jne
jbe
sbb
mov
inc
icebp
jmp
cmpsb
sete
push
in
adc
jl
and
and
dec
jl
cmp
loope
fdivl
fwait
push
jns
pusha
sub
pop
push
scas
push
xchg
mov
fdivrs
aad
sub
imul
xlat
mov
scas
jl
movsb
jmp
cmpsb
jge
ljmp
xor
daa
ret
push
in
mov
adc
jl
out
inc
add
test
lods
fwait
cs
sbb
and
add
xor
int3
fs
lcall
push
int3
je
cmpsb
std
mov
das
fldcw
sbb
lods
jbe
in
out
xlat
mov
xor
hlt
adc
call
inc
cmp
popa
es
in
add
pop
jecxz
pop
mov
popa
cmpsb
lret
gs
idiv
pop
push
mov
inc
pop
xchg
aas
out
jbe
mov
dec
dec
sbb
sbb
adc
dec
add
mov
aaa
add
decb
loopne
into
rcll
icebp
or
mov
xor
add
outsl
in
mov
test
aam
and
push
mov
outsl
mov
push
mov
ret
cmp
sbb
push
add
inc
mov
push
ror
ret
sbb
mov
jne
jg
mov
push
push
cmc
mov
mov
inc
fwait
pop
xchg
enter
rcrb
cmp
das
cld
mov
lods
imul
add
call
std
dec
lock
scas
outsb
ret
jne
aad
dec
jne
cltd
mov
int
adc
adc
insl
xchg
dec
addl
adc
or
or
cltd
sub
add
daa
push
sub
call
fyl2x
jae
in
push
int
xor
ja
rcll
cli
ds
fbstp
sbb
fisttpl
add
jae
adc
and
push
out
test
dec
cltd
in
sub
lahf
jecxz
push
fldenv
dec
ret
dec
mov
mov
repz
and
stos
sbb
fisubs
xor
pop
adc
in
sbb
or
inc
add
jge
sbb
push
push
mov
shl
inc
pop
or
jne
add
popf
scas
lcall
lods
les
std
enter
push
aad
inc
cmp
int3
dec
decl
add
sbb
sbb
movsl
aad
popa
vmovhps
out
push
lret
dec
addr16
xor
sbb
test
mov
mov
lahf
inc
in
arpl
stos
sahf
dec
mov
mov
mov
stos
test
xchg
cmp
dec
stos
out
jo
push
test
xchg
repz
into
out
xchg
xchg
sub
sbb
push
jbe
ja
push
iret
dec
jg
int
mov
jo
xchg
xchg
push
sbb
xor
jg
pop
lods
lods
stc
mov
mov
ja
scas
cs
int
out
lret
mov
pop
mov
mov
sbb
pop
ret
andb
or
mov
andl
mov
adc
shlb
out
mov
sbb
imul
out
xchg
inc
mov
inc
aaa
mov
inc
dec
fistps
xchg
cld
loopne
repnz
les
es
aam
and
les
hlt
add
repz
in
jmp
xlat
sahf
sbb
loope
mov
sbb
test
xor
fisubrs
mov
jne
push
xlat
pop
mov
xchg
fs
sub
and
push
rolb
arpl
sti
mov
push
mov
hlt
imul
pop
js
xchg
lahf
mov
out
nop
xchg
pop
mov
mov
inc
add
lds
mov
cmpsb
leave
mov
pop
mov
in
lahf
imul
sti
out
addr16
orl
xchg
repz
xchg
mulb
lods
fsubrl
mov
mov
shlb
arpl
or
jo
sub
push
jmp
pop
sub
mov
fbstp
adc
jne
arpl
loope
adc
dec
or
jo
ljmp
push
insb
or
pop
xor
fsubrl
pop
dec
loop
cmp
and
xor
pop
ss
incb
sbb
or
sub
inc
mov
imul
and
lahf
push
dec
inc
iret
and
mov
out
jo
test
mov
mov
or
ret
mov
jnp
loopne
leave
es
loope
pop
cwtl
cmp
mov
scas
push
xor
sbb
cmp
inc
cmp
xchg
xchg
xor
sub
orb
cltd
xchg
xchg
mov
lods
popa
scas
mov
mov
insb
lea
aam
jo
pop
or
fcomps
lods
sbb
push
lret
stos
mov
push
jbe
stos
inc
movl
adc
adc
dec
sub
sub
hlt
xor
cmp
gs
arpl
xor
in
mov
jo
mov
iret
into
outsb
in
iret
push
dec
icebp
mov
repnz
jmp
stos
imul
ja
cmp
dec
and
mov
and
xchg
test
ljmp
inc
cltd
aam
push
push
daa
sbb
movsl
adc
add
push
inc
inc
out
jmp
mov
push
and
mov
into
push
stc
loopne
aad
testb
imul
dec
inc
les
imull
jmp
mov
dec
bound
inc
mov
fistpll
cmp
and
or
inc
sbb
mov
cmpsb
sbb
outsl
cltd
mov
gs
xor
inc
out
or
fldenv
xchg
pushf
aaa
stos
pushl
mov
jge
jne
in
push
inc
xor
insb
or
add
in
cli
orb
inc
xchg
pop
pop
mov
or
fistps
test
push
mov
sahf
mov
inc
xor
mov
sbb
sub
enter
cld
in
pusha
shl
xor
xchg
xlat
xchg
je
arpl
imulb
leave
in
outsb
jg
push
sbb
mov
in
mov
negl
inc
jmp
inc
and
inc
fs
inc
cvtdq2ps
adc
xor
add
ljmp
xlat
mov
sti
mov
cs
cmpsb
pop
sbb
aaa
push
cmpsl
inc
and
sub
aad
mov
lahf
jmp
dec
mov
push
push
sbb
add
imull
jb
in
sub
mov
xor
or
jb
mov
imul
stos
pop
icebp
xchg
repnz
andb
mov
mov
push
adc
adc
add
adc
cmc
out
or
adc
and
call
icebp
mov
out
or
lds
adc
in
test
cmpsb
addr16
xor
es
mov
arpl
sti
movsb
or
mov
hlt
pop
sbb
cmc
jno
decl
mov
add
cmpsb
std
mov
lahf
pop
or
addr16
pop
ret
dec
call
and
cmpsb
push
popa
cwtl
mov
or
clc
icebp
or
insl
lcall
mov
jmp
push
adc
hlt
sub
fimull
aam
or
mov
adc
xchg
cli
jno
js
fisttpll
xor
sahf
push
jg
test
jl
adc
call
bound
stc
fcmovnb
pop
mov
test
sbb
gs
inc
or
popf
xlat
and
xor
scas
adc
push
xor
outsl
test
ret
push
in
insl
daa
push
or
cmp
test
int
fcomp
cmp
shrb
rcl
jb
scas
std
ror
add
fadd
pop
jbe
std
adc
inc
fdivrl
fwait
test
inc
or
ss
pusha
cmp
ret
dec
adc
and
xor
or
jae
in
mov
fs
xor
or
cwtl
jg
aam
imul
add
into
ljmp
stc
sar
shll
fisttps
lock
shl
sbb
sub
pop
insl
mov
jge
leave
lods
and
cmp
sarb
pop
scas
out
stos
enter
test
movsl
outsl
jnp
jne
pusha
pop
sub
fsubl
ret
or
out
push
int3
xor
mov
das
dec
or
subb
cs
adc
jb
mov
mov
jb
sti
je
xor
push
sub
stc
pop
cs
jle
xor
cmpsb
lds
ret
adc
mov
sbb
cld
dec
jle
sub
pop
adc
daa
adc
out
mov
mov
pusha
lock
push
mov
or
mov
push
xlat
adc
mov
nop
mov
fstl
call
repz
dec
mov
popf
int
popf
push
xlat
stos
jl
stc
pop
jne
push
add
les
out
or
lcall
gs
adc
cmpsb
push
xchg
xchg
pop
repz
or
mov
rol
aaa
decl
adc
push
mov
cmpsb
enter
pop
add
mov
je
push
out
and
adc
push
mov
mov
jg
inc
mov
lret
sub
mov
jle
adc
cmp
cmp
push
icebp
out
clc
out
or
add
adc
sti
xor
xchg
int
sub
jae
stos
xor
mov
aad
mov
mov
stos
rcrb
push
in
pop
dec
inc
rorl
inc
jne
dec
mov
imul
sbb
cltd
mov
fmull
cmp
cmpsb
push
or
iret
inc
popa
push
xchg
dec
mov
leave
cld
dec
jecxz
jp
or
jge
out
iret
shrl
leave
fsts
xlat
xor
xor
pop
clc
movsl
dec
rcll
movsb
sub
mov
lods
filds
jns
inc
add
fbstp
cmpsl
push
fsubrs
outsl
cld
mov
pop
insb
lds
cmp
and
int
lret
fs
jmp
test
mov
cmc
mov
or
jecxz
lods
in
insb
mov
push
jp
stc
popa
cmp
xchg
push
dec
nop
fs
faddp
aam
std
sti
cmp
jo
push
iret
cmpb
rcl
sti
push
adc
jnp
dec
sbb
int
or
lods
repnz
mov
mov
mov
cmc
scas
fwait
in
mov
mov
shl
stc
sbb
mov
pop
mov
xchg
ljmp
inc
stos
scas
outsl
repnz
and
call
add
pop
pop
push
jecxz
xchg
xchg
mov
lahf
inc
and
out
sbb
in
mov
cli
aaa
jo
addr16
push
or
mov
lcall
sub
orb
pop
aas
std
or
mov
out
push
addb
sub
js
nop
xchg
fldenv
pop
jae
sahf
out
jae
cmp
and
xchg
sarl
sbb
sbb
lods
mov
call
icebp
lods
pop
hlt
jae
xchg
or
push
icebp
mov
xor
loope
rcll
fdivl
pop
xor
cs
mov
xor
xchg
imul
in
xor
push
xor
mov
fistl
mov
and
out
push
arpl
hlt
popf
or
movsl
cmp
and
adc
mov
cwtl
push
dec
push
daa
lods
fucomp
xchg
pop
shl
jno
mov
js
sbb
mov
jno
pushf
daa
inc
sub
sub
nop
ja
mov
pop
inc
sub
lahf
sbb
ficomps
sti
outsl
mov
adc
daa
ret
add
mov
jo
out
add
pop
mov
cmp
stos
mov
pop
pop
xchg
sbb
movsb
dec
in
scas
push
push
lods
inc
and
or
sub
xchg
push
movl
cltd
pushf
cmp
ret
push
and
ret
les
mov
jge
xchg
jmp
mov
arpl
lods
push
adc
insl
pushf
cmp
fwait
dec
insb
and
push
pop
sbb
testl
lret
push
sbb
out
lcall
fwait
shll
jo
xchg
sahf
lahf
leave
movsb
push
stos
and
insb
orb
push
aas
push
je
and
xchg
std
int3
cmp
add
loop
jns
fscale
cld
adc
push
outsl
inc
add
adc
adcl
pop
imul
add
addb
lods
cmp
xor
outsl
add
popa
pop
out
dec
dec
lds
or
or
lods
sub
mov
dec
in
cmp
imul
insb
sbb
movsb
xchg
or
test
ret
xor
mov
inc
jmp
mov
in
sbb
sub
cmp
xchg
xchg
push
mov
shrb
dec
or
rclb
movsb
and
mov
sbb
cli
mov
loopne
mov
mov
pusha
adc
daa
adc
inc
aaa
aaa
mov
pop
sub
xor
pusha
jmp
stos
mov
jmp
fimull
push
mov
add
clc
imul
xchg
adcb
pushf
cmp
xchg
inc
or
cwtl
rcl
cs
sub
and
rcrb
jae
in
shrb
in
jbe
fnstsw
fsubrl
inc
test
aam
popa
fldenv
movsl
dec
cltd
and
test
lods
inc
fbld
fcmovb
adc
pop
insl
dec
hlt
xchg
pop
pop
and
sbb
cmp
mov
sti
adc
lods
adcl
push
fisttpl
cmp
cmp
popf
scas
push
cwtl
daa
push
xchg
lret
mov
insl
inc
popf
mov
push
in
or
jp
repz
sub
adc
mov
sub
xor
and
cltd
loopne
aaa
in
loop
test
mov
pusha
mov
repnz
xchg
sahf
jb
jno
out
and
mov
sub
shrl
je
out
cmp
das
ja
inc
or
adc
lret
mov
aam
mov
sub
in
fucomip
mov
popa
mull
pop
fidivs
in
add
and
lds
mov
mov
lret
jecxz
or
aam
inc
fidivrl
mov
xchg
ficomps
cmpl
cmp
xor
fcomi
sub
mov
das
mull
daa
adc
mov
mov
outsl
bound
in
loope
sub
std
cmp
mov
mov
je
push
add
movl
lods
call
fiaddl
data16
cmc
test
lods
inc
shll
adc
pusha
cmp
cwtl
xlat
and
pop
cmp
stos
jo
push
fildll
mov
aad
gs
cli
jne
jle
cmpsl
movsb
push
jo
cld
mov
add
mov
xor
stc
sub
aam
mov
ret
mov
mov
xchg
adc
mov
jns
mov
push
enter
leave
jo
lret
das
pop
adc
orb
into
icebp
loopne
mov
shrl
or
dec
lea
cmp
out
jnp
xchg
sbb
push
clc
dec
dec
dec
nop
push
es
mov
xchg
dec
fsubrp
enter
loop
and
inc
push
pop
in
and
out
lods
jb
or
pminsw
sbb
mov
iret
xchg
ja
jmp
push
fisttpll
shll
xor
lock
sbb
out
movsb
dec
ret
in
adc
ss
inc
daa
cmp
jl
out
std
add
stc
std
adc
filds
mov
test
push
sub
sbb
jp
lret
adc
lea
mov
sub
add
or
fsts
mov
mov
jne
daa
cs
out
test
lcall
stos
subl
xchg
dec
imul
cmp
in
pop
insl
and
fbld
push
lahf
nop
pop
pop
add
lods
les
mov
int
std
rcll
mov
movsb
jbe
inc
lods
faddl
imul
mov
sbb
inc
lahf
mov
pop
js
sahf
pushl
test
xor
notl
cmp
pop
jno
dec
lret
pushf
stos
out
and
mov
icebp
adc
inc
cwtl
pushf
out
scas
add
daa
sti
int
sbb
jns
push
push
jae
popf
adc
movsw
xchg
xchg
rcrl
add
mov
push
out
adc
jle
add
xor
loopne
add
adc
aam
dec
into
push
or
movsb
loopne
sbb
dec
jge
cmpsl
lods
push
aam
outsb
jle
mov
pop
and
mov
xchg
inc
xchg
das
data16
lret
rcrl
or
add
jns
clc
mov
xor
nop
mov
gs
lret
test
fwait
push
xchg
popf
mov
sarb
jns
mov
mov
es
jae
pop
in
sbb
std
jp
add
mov
push
je
pop
outsb
hlt
mov
add
mov
pop
xchg
sahf
jecxz
inc
lcall
in
aad
cltd
lods
aaa
cmp
xchg
js
stos
lods
and
push
shll
push
out
sbb
mov
adc
mov
hlt
lock
cs
ljmp
faddl
push
jae
lods
xor
or
shll
pop
test
xchg
xchg
ret
sub
jmp
cli
push
jle
shlb
add
in
int3
gs
call
jbe
dec
out
cmp
adc
xchg
xchg
psrlw
fistpll
call
jns
jno
dec
pop
out
and
push
ja
jle
mov
fsubl
pushl
push
cli
pop
frstor
cmp
push
fistps
enter
test
movsl
inc
sahf
xor
and
in
out
xchg
or
xor
cmp
scas
mov
imul
repnz
push
dec
dec
call
fcoms
aad
movsl
dec
mov
mov
sub
dec
insl
add
inc
sahf
arpl
imul
jo
loop
vrsqrtps
mov
cmp
jmp
mov
and
fs
mov
fnstcw
cmp
cmp
xor
mov
push
jns
mov
sub
dec
dec
aas
mov
inc
imul
pop
rolb
add
cli
xchg
jne
sbb
fsubrs
pop
test
sub
mov
dec
jo
mov
dec
inc
rcrl
add
jp
addr16
mov
daa
movsl
test
fnstsw
fisttps
adc
inc
push
lahf
mov
adc
jl
xchg
or
pop
incl
pop
rcrl
sub
adc
jge
xchg
orb
or
pop
sbb
les
clc
insb
jg
test
mov
dec
dec
mov
popa
push
rcll
ds
push
lock
or
xchg
dec
and
pop
mov
repnz
enter
rcl
jmp
ret
mov
test
sbb
data16
jno
outsl
mov
lahf
jnp
sbb
lock
adc
jmp
iret
mov
sbb
sub
mov
hlt
stos
leave
pop
or
dec
mov
shll
add
cmp
push
aam
mov
mov
jnp
out
xchg
cmp
aaa
lahf
xchg
jo
pop
ds
mov
pop
adcl
mov
insl
mov
sbb
jecxz
testl
cmp
int3
sbb
inc
cmp
push
out
insl
jne
mov
shll
movsl
andb
push
cmp
addr16
outsb
mov
sbb
xchg
ret
outsb
outsl
add
sub
jo
int
je
pop
adc
and
insb
mov
gs
shr
xchg
out
xchg
aaa
in
fmull
cs
call
repz
stos
add
insb
xor
sbb
jp
xchg
das
sub
addr16
stos
push
mov
and
stos
jns
orb
aaa
xchg
jg
pop
aam
lock
inc
or
arpl
pop
std
popf
fnsave
push
movsl
dec
fbld
cli
or
imul
test
mov
in
loop
xor
xor
jno
dec
jmp
jbe
lret
mov
cltd
sub
or
jmp
inc
subl
jns
nop
sub
loopne
adc
inc
sbb
add
adc
out
test
mov
rcll
loopne
xor
jnp
adc
sar
mov
call
mov
lret
push
in
xchg
mov
or
jge
jae
fisubl
cmp
xchg
cmp
mov
pushf
adc
hlt
shll
xor
lcall
or
push
divb
mov
or
sbb
jnp
jg
sbb
insb
or
cli
sar
mov
push
xlat
xchg
xchg
ss
int
sub
dec
mov
mov
xchg
imul
cmpsl
cli
jb
repz
sbb
daa
sub
cmp
mov
insl
enter
imul
imulb
and
lods
mov
mov
ja
fstps
jmp
add
mov
jbe
and
js
insb
dec
add
pop
in
cwtl
test
or
test
dec
rorb
and
dec
mov
stos
or
mov
mov
data16
push
arpl
jge
bound
in
mov
ljmp
std
aaa
leave
addr16
pop
aaa
pop
leave
cmc
inc
dec
and
nop
push
inc
int
or
fcoml
test
repnz
add
dec
sub
pop
xchg
xor
push
cmp
scas
push
pop
adc
jbe
xor
pmullw
xchg
bound
jl
sub
inc
pop
pop
add
xchg
divb
sbb
imul
jg
fcoms
in
fistl
jae
lods
lret
fimuls
inc
out
xchg
xchg
cmp
ljmp
movsl
sub
mov
adc
pop
call
add
scas
or
cmpsl
scas
mov
xchg
shl
mov
mov
xchg
xchg
lea
out
cltd
sbb
cmpsl
scas
out
test
xchg
dec
idiv
and
inc
xchg
ds
mov
loop
out
push
rorb
sbb
aaa
pop
add
dec
and
jge
in
repz
repnz
or
jno
pushf
xor
cmp
dec
lock
sub
in
enter
subl
dec
fwait
outsl
xor
sub
mov
sarb
xor
sahf
call
inc
hlt
pop
cmpsb
mov
pop
cmp
xor
mov
add
aas
or
insb
jp
data16
mov
or
loope
int
ret
mov
ja
shlb
mov
jns
inc
push
lret
mov
std
or
cmp
mov
jns
jbe
mov
loopne
scas
cld
lcall
jne
pop
sahf
sbb
std
outsb
ja
incb
or
cmpsl
pop
rcrb
in
jne
popa
addr16
test
test
push
cmp
or
mov
mov
jge
mov
push
push
dec
adcl
lods
add
mov
out
pop
inc
mov
arpl
adc
test
and
test
mov
stos
fwait
je
sti
aad
pop
gs
stc
daa
sbb
xor
jp
jne
xorb
leave
les
mov
fmull
daa
mov
sub
out
shlb
sbb
lock
lcall
mov
cmp
stos
lahf
cmp
pop
dec
ror
in
imul
insl
mov
ljmp
cmpsl
mov
jnp
push
cltd
loope
cmp
cmp
mov
call
mov
dec
jge
popf
jmp
insb
mov
xor
fdivs
in
adc
stc
push
add
outsb
adc
in
ds
mov
mov
dec
push
inc
ficoml
in
cli
inc
jmp
pslld
aaa
jp
icebp
pop
cmpsb
cmc
mov
lahf
in
divl
dec
mov
adc
fcmovne
add
pop
imul
test
mov
mov
pop
mov
mov
push
cmpsl
in
cmp
adc
in
arpl
stc
fstl
js
cmc
fsubp
mov
fcmovne
into
int
or
leave
sbb
cmpl
std
pop
int3
stc
das
cmc
cs
push
mov
sub
ja
mov
xor
dec
xor
inc
and
sahf
testb
in
ret
movsl
jne
jp
repnz
push
test
mov
mov
mov
lret
mov
xchg
or
cmp
push
or
lcall
jmp
in
or
ja
call
movsb
shll
out
pop
xor
nop
mov
mov
daa
sub
pop
inc
ret
cmp
stc
pop
test
or
inc
lea
out
popl
pusha
xor
fwait
adc
push
dec
mov
subb
outsl
cmp
loop
jo
push
push
mov
push
mov
jle
not
rorb
jnp
push
mov
je
pushf
mull
mov
sbb
addr16
cmpsb
sbb
xchg
pusha
mov
mov
sarb
pop
jbe
sti
adc
ret
pop
xor
hlt
mov
or
cmp
movsl
mov
mov
fstpl
addr16
dec
dec
leave
push
sarl
jns
xchg
sbb
mov
sbb
cmpsb
or
push
and
jecxz
or
shl
mov
adc
daa
pop
dec
je
lods
add
rcrb
nop
sti
and
push
push
sub
lret
jecxz
mov
or
jbe
pushf
sbb
rclb
scas
dec
popa
mov
inc
pop
sarb
mov
aad
in
mov
jp
cltd
fdivs
movsl
push
push
call
xor
xchg
push
xor
dec
repnz
out
std
aam
int
add
movsl
dec
xchg
pop
xchg
mov
mov
orl
sub
aad
jae
xchg
popf
cwtl
popa
inc
xlat
test
lret
mov
xchg
ljmp
and
push
mov
into
dec
mov
xor
test
sbb
sbb
fdivrs
popf
adc
mov
adc
mov
test
jo
pop
js
pop
icebp
stos
mov
adc
orl
loopne
insl
popf
add
rolb
inc
repz
ret
sbb
push
test
ror
mov
sub
cld
xchg
pushf
daa
out
scas
shrb
shl
dec
jb
jne
or
inc
adc
rol
adc
addr16
or
iret
stos
cmp
arpl
in
outsl
jo
dec
and
xchg
jo
and
xor
pop
sub
ljmp
mov
inc
sahf
adc
pop
cltd
outsl
mov
int
movaps
xor
mov
jnp
scas
sub
mov
inc
mov
or
adc
sub
rcrl
or
lods
frstor
inc
repz
sub
and
jns
and
or
movsl
cmp
push
dec
sub
pop
cmp
fildll
js
shl
pop
ss
sub
inc
xor
ja
and
scas
jo
xor
jbe
insl
repnz
shrl
add
testb
loop
mov
dec
jp
jo
insl
icebp
xchg
roll
or
ss
push
mov
mov
xchg
pop
in
scas
lea
sahf
test
das
jle
lret
push
add
fsub
cwtl
and
enter
movsb
notl
mov
cli
jnp
mov
mov
adc
cmp
cltd
loop
xchg
fs
adc
ret
imul
je
mov
inc
dec
push
mov
lock
jecxz
movsl
xchg
xchg
subb
jle
lods
sbb
jbe
push
into
outsl
push
sub
out
mov
les
jecxz
test
or
fwait
repnz
aaa
or
aam
repz
hlt
cmp
aad
mov
leave
mov
add
movhps
fs
pop
add
mov
inc
mov
xchg
jns
sub
xlat
dec
loope
pop
sub
dec
mov
inc
mov
mov
xchg
fsubrp
mov
add
lret
push
push
jne
jge
or
sar
dec
ds
fcoms
pop
movsb
iret
in
ds
sarb
out
outsb
ja
aas
neg
lods
dec
pop
sbb
dec
jbe
cs
int3
pop
nop
fisubl
pushf
dec
ficomps
dec
nop
arpl
sub
pop
bswap
notl
aas
pop
aam
enter
sbb
mov
scas
sahf
test
adc
xor
fistl
add
dec
add
or
inc
jmp
loopne
int3
pop
mov
es
int3
dec
adc
cld
mov
add
mov
xchg
or
mov
jnp
insb
fiaddl
xchg
dec
xchg
cmc
loopne
add
flds
int3
ljmp
cwtl
jno
dec
jg
pop
mov
inc
mov
dec
cwtl
pusha
sbb
stos
das
xchg
sbb
andl
test
jge
cmp
mov
dec
outsl
loope
xor
fucomp
imul
adc
test
movsl
add
jp
sub
jne
mov
mov
and
dec
cmpsb
mov
sbb
sub
movsb
lea
popa
popf
sbb
int3
aad
cmp
pop
movsl
mov
jmp
cmp
mov
cmp
sub
xor
jg
aad
add
rol
pop
pop
mov
outsl
stc
lcall
mov
stos
shlb
daa
jmp
xor
adc
and
mov
mov
das
pop
in
gs
cmp
outsl
pushf
xor
ja
ja
dec
js
jbe
fildl
sub
orb
cmp
xchg
pusha
inc
inc
jbe
aaa
or
pop
aas
dec
mov
divb
bound
dec
cmp
roll
adc
arpl
xor
inc
push
roll
adc
scas
sub
dec
in
pop
lods
xchg
jmp
cwtl
xor
sub
insb
jmp
leave
inc
sbb
insb
xor
adc
out
mov
lock
mov
mov
mov
inc
cmp
addr16
fsubrl
arpl
pop
adc
jecxz
push
cmp
cld
adc
js
ljmp
and
mov
jns
xchg
insb
fs
dec
fnsave
mov
fcomip
inc
mov
int3
jle
lret
in
dec
stc
and
gs
push
jnp
fwait
xor
shll
push
cld
imul
jns
push
dec
mov
lea
ljmp
xchg
int3
shl
pop
sub
adc
mov
push
inc
pop
or
mov
int3
inc
ret
push
dec
dec
movsl
movsb
mov
outsb
mov
loope
push
je
jbe
cwtl
stos
push
jle
cs
pushf
nop
pop
in
xor
mov
inc
rcrb
out
sub
and
or
shl
insb
leave
data16
daa
mov
dec
ficoml
adc
mov
aam
mov
enter
jbe
imul
insl
ds
int
movsb
adc
daa
mov
dec
dec
mov
stos
fs
test
jbe
lods
jb
roll
in
mov
or
pop
xchg
and
clc
pop
addr16
pop
xorb
inc
dec
mov
dec
mov
jecxz
cmpsb
inc
mov
enter
and
das
push
lcall
pop
ljmp
insb
mov
data16
addr16
outsl
dec
fsubp
movsl
scas
insb
adc
stos
rcl
push
cmpsl
dec
push
jg
add
dec
outsl
sub
jg
push
inc
or
addr16
stos
jle
cmpsb
jle
cwtl
lods
popf
push
cmp
or
aad
mov
xchg
arpl
push
mov
push
out
jns
stos
hlt
aam
outsl
gs
push
insb
pushf
sbb
sub
mov
stc
xlat
push
sub
adc
dec
and
jnp
xchg
lock
inc
sahf
xor
jp
adc
jmp
pop
es
mov
fcomps
bound
add
pusha
in
rcl
cmc
fistps
jne
lcall
adc
cmpsl
fdivrp
inc
gs
dec
pop
shrd
inc
add
test
cmc
pop
arpl
adc
iret
push
adc
add
ljmp
jbe
gs
mov
add
jle
xor
xchg
mov
daa
mov
gs
aas
push
shll
mov
movsl
pop
vmread
into
stc
sbb
fs
add
daa
imul
mov
or
in
xchg
pushf
lea
rcrl
sbb
push
jmp
pop
cmp
xchg
mov
lea
cli
cmc
push
out
ret
shl
ret
jl
lahf
insl
pop
mov
loope
out
je
gs
sbb
xchg
add
lods
push
imul
mov
or
xchg
test
jecxz
pop
mov
pop
insb
mov
add
add
or
xchg
xor
call
nop
sbb
mov
dec
sti
xor
jo
sub
lcall
es
or
shl
sbb
addr16
jbe
sub
idivl
mov
or
inc
pop
test
cmp
movsl
push
jp
mov
sbb
mov
and
push
add
stos
mov
dec
adc
lds
jno
pusha
xchg
pop
js
xor
ja
dec
jp
mov
mov
mov
out
lock
xchg
jg
fwait
jle
lret
nop
cmp
dec
popf
dec
xor
movl
dec
in
inc
js
popa
ja
das
xor
cmc
push
sub
loope
dec
in
divl
xchg
fcmovu
scas
xor
dec
cmc
nop
push
adc
in
lock
jo
stos
push
mov
lock
int
loope
jmp
imul
sbb
xchg
test
mov
jns
dec
mov
lods
mov
add
inc
ret
out
sub
mov
outsb
shlb
mov
shlb
xlat
leave
inc
pop
pusha
pop
push
out
mov
cmp
dec
mov
int3
xchg
nop
aad
loop
rorb
or
sahf
cmp
fcom
ss
movsb
xor
cmpsl
cs
push
lahf
cmp
lcall
adc
out
imul
out
outsl
mov
dec
test
xlat
push
cld
xchg
push
lds
loopne
cli
leave
xchg
aad
add
movsl
in
mov
xchg
popw
lcall
rcr
cmp
mov
idivb
sti
mov
mov
int
aad
jns
outsb
push
sbb
adc
das
popf
and
mov
popf
loope
jg
stc
icebp
mov
mov
xchg
mov
push
adc
js
inc
lea
inc
cmp
out
or
mov
jp
xlat
ja
bound
aaa
ret
cwtl
jmp
mov
fucom
and
loop
aaa
daa
mov
fsubp
xor
pop
testb
pop
je
ja
mov
mov
inc
lcall
repnz
frstor
movsb
sbb
in
xchg
lahf
mov
pop
push
mov
ret
dec
loop
rcr
push
int3
push
dec
inc
popf
pop
outsl
bound
int3
xor
call
adc
cmp
addr16
mov
mov
adc
aam
loope
jmp
dec
aad
cmpsl
inc
or
fidivrs
lods
fimuls
mov
inc
add
out
mov
lods
push
inc
fs
fmuls
movsl
cmp
push
pop
sbb
push
push
mov
sarl
sub
pop
mov
sahf
insl
clc
jl
xchg
cmp
cmc
loopne
adc
push
lods
push
adc
out
cli
test
je
mov
jbe
mov
xor
leave
push
out
dec
cmpsl
cmc
adc
xchg
xor
add
movl
xor
adc
add
mov
divb
mov
sar
sbb
iret
mov
xchg
cwtl
enter
fcmovne
jns
pop
scas
fbstp
aam
leave
mov
popf
jne
mov
mov
rcr
dec
pop
test
rorb
out
pop
mov
push
aaa
xor
push
and
cld
out
jo
xchg
int
arpl
loopne
jae
aas
push
jg
mov
enter
dec
jp
sub
sbb
cld
in
rcrb
lahf
add
mov
lock
xor
das
addr16
cwtl
mov
jno
sbb
out
dec
mov
dec
pop
mov
mov
test
call
call
push
push
lods
sub
xchg
dec
push
insl
jo
xchg
cmp
je
cmp
movsb
sub
inc
icebp
push
push
insl
arpl
cmp
test
inc
cmpsb
cs
call
out
dec
rorb
pop
jo
iret
dec
push
loope
outsl
mov
std
adc
jbe
push
fbld
lods
and
test
adc
lret
scas
sbb
iret
into
sbb
xor
dec
dec
sub
xchg
xor
adc
rorl
rcrb
cmp
popl
hlt
sbb
add
imul
xchg
int
inc
roll
and
or
pop
loope
jl
mov
fs
jg
inc
jmp
adc
mov
cmpsb
rolb
jmp
cmp
sub
dec
add
sub
mov
cmp
bound
push
lcall
push
adc
cmc
enter
outsb
xchg
ret
cmp
xor
jo
adc
push
push
lahf
rcrl
jo
xchg
and
and
stc
adc
push
js
scas
mov
out
add
dec
clc
flds
inc
mulb
imul
pop
mov
xchg
pop
mov
mov
lods
fldcw
jl
jne
pop
or
xor
mov
push
in
jo
sbb
push
push
cmc
add
adc
gs
or
add
xor
in
scas
pop
sbb
lock
jg
ret
adcl
loopne
add
cwtl
inc
mov
test
add
mov
bound
mov
insl
cmc
jno
insb
mov
in
fs
inc
movsl
adc
and
cmp
add
inc
mov
pop
push
in
sar
aaa
mov
out
add
dec
sub
or
sbb
mov
xchg
sti
arpl
cmp
mov
leave
loope
xor
mov
int3
add
xor
and
mov
sub
adc
bound
mov
cmp
lods
adc
cmp
sub
jge
clc
daa
or
pop
mov
mov
or
fstpt
and
mov
sub
jl
nopl
pop
add
sub
jnp
jl
xchg
fwait
add
lahf
mov
cmp
scas
and
ss
jbe
nop
inc
mov
repnz
sarl
enter
shrl
bound
pushf
and
dec
stos
clc
or
push
cmp
dec
outsb
jl
inc
push
daa
or
data16
imul
dec
pop
movb
sbb
cmp
das
pop
jbe
outsb
and
push
add
arpl
cmp
xor
subb
mov
mov
gs
lods
out
das
add
xor
mov
pushf
push
addb
push
xchg
arpl
negb
push
ja
addb
xchg
pop
or
inc
mov
dec
andl
jns
cmp
push
in
jb
mov
inc
addr16
int
outsl
cmp
aas
lahf
dec
mov
xchg
bound
or
adc
cmp
lods
cmc
sahf
jg
xchg
or
test
mov
cmp
push
jge
imul
gs
scas
dec
aad
pop
cwtl
sahf
cmpl
stc
nop
loop
mov
cmp
push
dec
mov
inc
sbbl
pop
sub
cwtl
jg
call
push
ret
outsb
outsb
notb
popf
and
sbb
cmp
popa
mov
ret
push
dec
mov
lea
test
repz
fsubrs
test
mov
or
pop
or
pusha
ret
and
add
pop
cmp
sbb
mov
push
push
pop
cmp
mov
mov
mov
mov
movsb
push
mov
iret
mov
gs
mov
xor
mov
push
aam
movsbl
xor
test
jecxz
mov
out
inc
loope
enter
push
hlt
xchg
in
lds
pop
xlat
repz
mov
mov
fwait
shrb
mov
fwait
inc
mov
js
xchg
imul
inc
pop
pmullw
test
sub
out
fs
popf
cwtl
push
sti
in
repz
mov
add
xchg
aad
fwait
and
push
add
mov
cmp
lcall
lret
fisubl
int
dec
das
mov
jbe
out
in
test
jg
fistpll
addl
xor
cli
sub
mov
push
test
cld
cmp
or
cltd
jp
int
test
xor
mov
push
hlt
and
cmc
shlb
jbe
adcl
je
and
sarl
movsb
insb
jbe
dec
and
cmp
xor
mov
cmp
push
into
sbb
nop
inc
mov
shlb
cwtl
cmc
mov
cmp
sti
push
mov
in
mov
mov
lea
mov
mov
shrl
push
xchg
test
sub
aam
cmp
push
push
lea
js
mov
pop
out
sub
leave
sahf
xor
enter
lahf
es
testb
push
mov
mov
xchg
dec
bound
jl
mov
jle
or
stc
out
in
push
push
mov
jge
loope
jnp
fs
pop
push
sbb
in
mov
pop
xchg
sbb
mov
rcrb
loopne
aaa
mov
mov
mov
sbb
mov
vshufpd
adc
in
pop
cltd
dec
push
xchg
jp
scas
nop
aaa
inc
dec
push
cmp
leave
xor
lods
or
xor
insl
xor
jo
xlat
jae
pop
inc
mov
popf
lcall
repz
sub
pop
xor
push
aad
sbb
mov
sub
cmp
jne
imul
pop
mov
mov
push
add
ror
push
pop
inc
mov
movsb
pusha
xchg
lds
addr16
out
hlt
call
sub
adc
jb
jl
jno
inc
xchg
push
cmp
test
mov
sub
and
clc
ret
out
in
ja
aam
pop
push
mov
add
mov
pop
dec
int
or
cmp
mov
cmp
sub
movsl
jge
cmp
mov
mov
xor
repz
xchg
or
push
aas
enter
sbb
push
out
mov
in
pop
pop
rcr
xchg
xor
dec
sti
rsqrtps
lret
fs
add
sbb
rcl
sti
cli
push
nop
jo
dec
roll
mov
jno
jb
repz
popf
jnp
xchg
enter
iret
inc
xchg
mov
cmpsl
lods
test
ficoms
mov
addl
mov
dec
fdivr
add
sbb
or
lds
mov
ss
mov
inc
test
movsl
and
or
subl
mov
pop
scas
xchg
rolb
xchg
mov
in
shl
cmp
xchg
inc
bound
mov
shll
sub
xor
ret
or
cli
outsl
xchg
shrb
dec
cltd
lods
and
arpl
enter
push
pop
inc
adc
mov
dec
push
push
mov
push
roll
mov
std
xchg
lret
inc
mov
and
repnz
lret
add
sbb
cmp
jbe
cmpsb
xor
pop
ret
ffree
push
ret
mov
adc
inc
mov
fcomp
cwtl
cmp
mov
or
xor
roll
xor
iret
leave
add
cmp
enter
sbbl
push
imul
lock
inc
jne
in
arpl
aad
fcompl
pop
sarb
mov
adc
data16
adc
movsl
test
jb
stos
sub
popa
test
xchg
imul
sub
imul
dec
cltd
cwtl
insb
into
jg
and
push
dec
or
xorb
add
cmp
pop
repz
jmp
cmp
loope
jle
add
popf
mov
decb
repz
and
add
mov
cmp
dec
rcll
sub
xchg
outsl
not
mov
mov
and
pushf
sbb
imul
ficoms
xor
sub
ds
sub
jecxz
ja
outsl
sbb
mov
aaa
andb
adc
xor
xchg
jbe
loop
cmp
in
pop
into
cmpsl
jg
jb
xchg
cmp
cwtl
jbe
out
inc
mov
out
subl
loop
xor
lahf
mov
cmp
xlat
mov
scas
movsb
dec
and
incb
mov
push
pop
aad
push
add
mov
inc
push
fstps
dec
or
pop
popa
shl
mov
dec
push
xchg
cmp
push
push
cmp
xor
stos
xor
pushl
jecxz
test
ljmp
pop
push
lods
mov
dec
add
cmp
xchg
and
dec
int
push
jg
popf
aas
pop
mov
inc
and
dec
popa
mov
out
aas
xchg
mov
mov
sbb
adc
mov
xchg
mov
test
mov
inc
xchg
xor
mov
mov
insb
mov
cmp
and
dec
testb
jl
dec
movsl
add
insb
mov
repz
adcb
pusha
imul
rcll
jno
jl
push
nop
add
test
or
cmc
or
jl
mov
lods
pop
sub
cmp
aaa
test
out
jg
test
lcall
arpl
xchg
mov
jmp
fdivrs
fidivs
xchg
dec
sbb
xchg
jb
mov
xchg
fisubrl
adc
pop
mov
cmp
andb
xlat
lds
xor
sbb
in
mov
jae
mov
scas
mov
dec
mov
mov
sub
inc
sbb
cmp
decb
dec
push
push
sub
push
pop
pop
cli
xchg
ds
xor
push
in
cmp
mov
bound
popa
test
jb
pop
nop
mov
xchg
out
dec
addr16
add
jmp
and
hlt
faddp
fdivrs
sar
mov
das
pop
test
push
sbb
and
gs
push
lods
js
xlat
shr
out
jb
cmp
xchg
jmp
sub
pushf
test
add
cmp
add
dec
sahf
xchg
ja
lret
add
neg
or
call
popf
scas
mov
daa
xchg
sbb
adc
add
movsb
not
inc
xchg
adc
push
mov
sub
add
inc
cltd
and
pop
mov
ret
scas
in
test
push
out
pusha
lea
cmpsb
imul
mov
rclb
xchg
and
cmp
mov
add
repz
std
hlt
dec
and
add
out
and
cwtl
mov
adc
les
mov
cmp
cmp
push
aas
xchg
popl
ret
lods
cmpsl
add
jns
mov
les
cmp
cmp
stos
xchg
add
stos
lock
and
mov
ds
in
fstl
mov
aaa
sbb
lods
clc
enter
xor
rolb
mov
mov
jp
inc
fimull
insb
pop
pop
add
pop
sahf
cmp
lret
mulps
ja
or
add
jbe
in
xor
mov
fs
shlb
leave
mov
mov
rorb
lret
pop
fcmovbe
scas
pop
push
inc
lds
out
sbb
enter
movsl
mov
movsl
mov
inc
adc
mov
and
or
push
jp
pop
mov
push
add
nop
or
pop
pop
or
cmp
add
cmp
pop
fcmovnbe
mov
call
cmp
ss
scas
inc
mov
push
xchg
std
repnz
jle
inc
outsb
xchg
inc
pusha
in
lds
adc
xchg
inc
xchg
xchg
lods
test
or
jno
fsubr
jne
add
fidivrl
leave
ja
mov
shlb
insb
movsl
sub
out
dec
sub
xchg
inc
inc
xchg
popa
sahf
sbb
push
or
or
shr
adc
mov
sbb
sbb
pop
mov
push
mov
fildl
xchg
jl
into
push
fisubrl
push
sub
sbb
iret
push
or
aam
xchg
fwait
mov
or
mov
outsb
push
daa
mov
jmp
leave
std
jmp
ljmp
jmp
jae
or
out
sbb
data16
addb
and
test
lcall
mov
cwtl
xchg
adc
push
rcl
rorb
pop
mov
aam
notb
or
push
mov
call
rcll
jl
shl
arpl
stc
int
push
iret
orl
repz
adc
push
dec
dec
push
lods
clc
pop
dec
sub
mov
bound
sbb
fs
lea
cmp
pusha
inc
mov
xchg
das
into
lahf
and
jbe
rcrb
movl
sub
xorb
std
xchg
push
adc
call
mov
adcl
aam
or
inc
cmp
rol
aas
cmp
push
outsl
jge
cli
xchg
cmpsl
or
inc
popa
mov
into
dec
inc
inc
je
sub
adc
popa
pop
push
push
add
fsts
dec
xor
mov
jecxz
frstor
sub
insl
jl
bound
ret
pushf
imul
es
dec
divb
je
cmp
inc
and
add
cld
push
ds
lock
mov
sbb
lock
idiv
push
dec
pop
cltd
lahf
sbbb
push
add
sbb
cmp
mov
pop
jnp
jg
pop
lret
xor
pop
xor
vsubpd
cs
push
icebp
imul
fnstenv
pop
lcall
sub
and
cmp
fbstp
repz
sub
lret
aad
mov
push
cmp
stos
stc
add
push
xchg
into
sbb
leave
cmpsl
add
fs
and
lea
mov
mov
loopne
rolb
shrl
pop
mov
adc
cmpsb
push
cmpsb
pop
add
push
dec
addb
adc
xchg
push
mov
fisttpl
aas
dec
push
test
pushl
push
test
xor
roll
sti
dec
dec
xchg
xor
mov
ret
mov
rcrl
int3
dec
fildll
es
lds
fimuls
iret
cmp
push
sbb
in
xor
mov
jo
add
mov
lea
mov
jecxz
cld
mov
insl
pop
sub
push
outsl
loop
in
cs
orb
roll
out
dec
or
mov
pop
add
lret
xor
xlat
rcr
pop
mov
jp
ret
repnz
adc
out
das
rolb
jnp
fidivs
ds
jmp
out
int3
pushfw
cltd
testb
mov
push
faddp
sbb
xchg
jbe
lds
add
je
sahf
fs
xchg
pop
loop
jb
dec
gs
sub
sbb
rcll
xor
divb
cmp
shll
stc
and
aam
sbbb
insl
cmp
outsl
push
jle
sbb
pop
push
stos
xchg
add
adc
or
jnp
test
mov
sub
fwait
lods
mov
and
icebp
mov
aaa
sti
dec
pop
jns
scas
jmp
addr16
xchg
sub
dec
rol
inc
xchg
insb
sub
rclb
ret
mov
adc
movsb
dec
dec
dec
adc
call
pop
aaa
fistl
mov
outsb
pop
add
fildl
fnstenv
xorw
inc
repz
push
in
iret
pop
and
decb
xor
movsl
mov
lods
sbbb
adc
lea
jle
jle
test
outsb
mov
xor
cli
dec
mov
scas
jo
loope
mov
mov
in
out
call
cmp
test
mov
jno
push
or
jns
add
mov
and
mov
pop
mov
outsb
out
out
imul
mov
ss
sahf
push
imul
add
fstps
cmp
xchg
decl
out
adc
out
outsb
xchg
sbb
test
cmp
ret
cmpsb
xor
cmp
jno
cmc
insb
daa
jle
jnp
push
inc
mov
das
ja
pop
xchg
jle
or
cmc
insl
xlat
add
addr16
xor
pop
cmp
cmp
adc
arpl
mov
lcall
lret
add
xchg
pop
adc
mov
push
gs
push
in
mov
shlb
xchg
sub
adc
mov
cmp
movsb
cmpsl
inc
mov
inc
cltd
pop
push
jb
mov
or
xchg
mov
js
or
jg
pop
ret
add
sub
cmp
xor
and
xchg
ds
out
sbb
mov
and
fsubs
inc
sub
and
fcoms
fdivp
jne
fistpl
rcr
dec
xor
inc
nop
aas
das
inc
cmc
cmpsb
cmp
popa
mov
je
jns
les
fisttps
and
es
inc
mov
xchg
cmpsb
imulb
in
lods
in
adc
and
lahf
roll
cltd
stos
push
fs
enter
aas
lcall
rolb
movsl
pop
xchg
or
xor
addl
jo
dec
loop
mov
lcallw
and
mov
stos
sahf
test
cli
dec
add
push
xor
ficoms
shlb
or
ss
arpl
cltd
xchg
and
push
aam
xor
out
xchg
loopne
push
fwait
loop
test
mov
jmp
xorl
mov
sub
jp
sub
scas
mov
ret
cmp
pop
and
dec
sub
pop
scas
mov
rorw
lahf
cmp
lods
cli
push
and
movsb
jo
cmc
mov
lret
fisttps
sub
jbe
cmp
mov
iret
push
jmp
jne
insl
and
mov
sti
jmp
cltd
pop
push
mov
scas
xor
stc
fldcw
xchg
mov
ljmp
mov
popf
sub
aam
sub
inc
adcb
lock
sahf
sbb
lock
lret
pop
dec
mov
jno
shrb
xorl
in
and
pop
enter
xor
push
mov
xor
xchg
addr16
mov
jl
loope
mov
jne
xchg
sahf
mov
xchg
xchg
arpl
nop
pop
fildl
test
jl
jge
push
push
lcall
lret
inc
scas
jns
loope
cs
sub
push
mov
sbb
outsl
sti
sub
imul
xor
xor
insl
lcall
sbb
lret
je
and
dec
fldt
test
jno
mov
fsubrs
jmp
mov
jmp
adc
push
aam
insl
ss
inc
add
pop
popf
ret
pushf
fldt
out
stc
jnp
rcrb
into
stc
fistpl
dec
cmc
mov
add
and
xchg
lret
mov
add
iret
sbb
cld
add
in
xor
stos
loope
ss
shl
and
ret
cli
jle
cmp
mov
lret
xchg
add
or
and
imul
jne
insl
push
shrb
loope
sub
popf
inc
loop
int
sbb
imul
jbe
bound
xchg
negl
repz
jmp
aam
fdivrl
or
cmc
dec
popf
testb
add
dec
pcmpeqb
into
mov
and
rclb
adc
test
mov
sahf
mov
nop
rcrl
outsb
pop
pushf
cmp
inc
shl
mov
xchg
outsb
xor
cltd
mov
outsl
sbb
sub
ds
orl
inc
mov
mov
xchg
insb
add
push
mov
mov
inc
sbb
mov
pop
enter
jb
scas
dec
sti
popf
cltd
enter
pushl
pop
jg
cld
insb
fwait
mov
leave
xchg
inc
mov
in
dec
dec
mov
arpl
cmp
cmp
push
push
hlt
fistps
popa
add
pop
mov
negl
in
js
fcmove
inc
jmp
testl
add
xchg
xchg
push
adc
nop
cltd
outsl
out
xchg
shlb
scas
and
test
je
sub
adc
mov
and
jp
adc
sbb
xchg
pop
mov
push
pop
pop
mov
pop
js
in
sbbl
add
lcall
subl
mov
aam
aaa
pop
ja
add
lret
inc
dec
pop
xchg
adc
int
adc
cmp
push
or
or
imul
rol
bound
ret
rcrb
xlat
movsl
mov
mov
add
xchg
rcl
fldcw
adc
jge
jns
adc
insb
add
pop
rolb
add
stos
push
imull
cmp
shlb
sub
aas
pop
add
mov
daa
mov
mov
idivb
test
dec
xchg
out
push
and
mov
ljmp
cltd
mov
lods
push
push
je
mov
imul
arpl
bound
lret
out
mov
adc
rcl
dec
iret
mov
xchg
push
arpl
add
xlat
shll
in
mov
mov
out
add
push
xchg
push
insb
bound
jbe
inc
sub
and
mov
mov
fiadds
in
test
dec
rcrb
nop
sahf
aaa
shl
or
jns
mov
push
sbb
add
movsl
xchg
scas
shll
cwtl
ret
lods
iret
mov
ja
sub
jge
cs
js
or
dec
stos
insb
std
dec
jae
fwait
lods
jg
or
pop
sub
mov
pop
push
xlat
in
push
jnp
lods
push
sti
ret
mov
mov
and
int
outsb
add
movsb
cltd
mov
enter
jle
fnsave
xchg
pop
aaa
bound
mov
into
popa
mov
cmc
lock
mov
aad
inc
jnp
mov
sahf
sbb
mov
xchg
cld
cli
pusha
xor
pop
dec
xchg
xchg
sbb
xor
jnp
pop
push
jmp
pop
push
push
pop
add
sbb
int3
push
mov
icebp
jno
popf
in
bound
lds
shr
sbb
fisttpll
xchg
mov
xchg
and
std
test
arpl
jno
sarb
and
and
mov
in
mov
lahf
xchg
lret
dec
xlat
addr16
sbb
jge
aaa
int
sub
movsl
popa
ss
jbe
sub
nop
loope
push
fwait
pop
insl
fimuls
xor
adc
int
add
mov
inc
insl
mov
paddq
in
and
xchg
xor
push
jecxz
aad
aam
dec
dec
inc
outsb
idiv
repnz
push
scas
pusha
sub
repnz
cld
cmpl
and
out
in
rorb
inc
dec
ret
xor
cmpsb
jae
imulb
dec
stos
or
movsl
imul
in
mov
jg
sub
and
mov
pop
pop
cli
jae
jmp
das
mulb
pop
cmpsb
dec
repnz
js
out
test
out
lcall
outsl
jb
fdivs
add
cmpsb
push
in
cmp
stc
fbstp
mov
fnstenv
lcall
mov
roll
cmp
test
jmp
xchg
dec
popf
sbb
lock
jge
adc
and
inc
push
arpl
sub
test
movsb
imul
loope
lock
sbb
mov
add
jp
out
ja
mov
push
lock
xor
js
cmpsl
stos
testb
fdivrl
push
popa
shrb
xor
sahf
loopne
scas
mov
push
mov
push
xchg
sbb
mov
lahf
int
cmp
insb
stos
call
lds
lret
stos
push
sbb
pop
jmp
mov
add
out
mov
adc
jmp
stos
iret
filds
fs
or
into
push
pushf
mov
shll
sub
test
jne
cli
scas
mov
cmpsl
repz
add
js
mov
mov
aaa
pop
out
fdivr
gs
and
inc
faddl
inc
filds
sub
adc
std
pop
jne
jecxz
xor
pop
and
jge
jge
lea
sbb
pop
ret
sub
cmpsl
js
in
push
mov
mov
inc
cmp
and
fcomps
lret
je
jno
test
pushf
dec
push
repnz
mov
cmpsb
insl
out
cmp
inc
lret
stos
ljmp
jns
scas
jb
aaa
dec
mov
sbb
xlat
inc
popa
test
int3
loopne
jo
dec
movsl
flds
into
lds
inc
jmp
clc
cmp
jge
cwtl
bound
and
push
inc
outsb
ja
and
test
mov
icebp
xor
popa
adc
mov
cmc
and
and
xchg
jle
aam
inc
inc
xor
xor
idivb
sbb
sbb
adc
jns
icebp
mov
push
testb
jmp
inc
mov
lret
je
mov
dec
sbb
sbb
mov
bound
xor
iret
jbe
lock
cmpl
shrb
mov
push
into
cli
arpl
dec
xchg
scas
mov
adc
out
fucom
and
inc
add
lock
loopne
mov
mov
fs
inc
fidivs
shlb
adc
and
hlt
dec
jbe
in
inc
jp
ret
dec
stos
push
std
cltd
jnp
pop
xchg
inc
cmpsb
push
mov
into
sti
mov
or
cmp
push
xlat
and
hlt
ljmp
out
je
xchg
xchg
int
dec
mov
movsb
jne
add
push
mov
leave
adc
xchg
sbb
stos
fisttpl
loopne
or
mov
sub
filds
and
mov
xchg
or
loope
mov
cmpsb
insl
sbb
outsl
mov
lsl
stc
mov
sbb
cld
clc
lret
xor
xor
push
push
or
dec
and
imul
add
inc
dec
add
pop
pop
lods
jbe
outsl
push
push
aas
sti
test
xor
imul
mov
les
xchg
insb
mov
inc
cltd
and
push
mov
loopne
dec
pop
inc
add
hlt
testb
rorb
aaa
inc
fsubrl
jp
in
sub
hlt
gs
add
pusha
arpl
push
lds
mov
rorb
mov
imul
sarl
mov
addr16
loope
in
notb
mov
jbe
mov
mov
mov
outsb
push
push
loop
repz
push
pop
dec
inc
jae
nop
xchg
lods
mov
mov
mov
sub
flds
add
sti
jp
pop
aas
insb
mov
jbe
push
and
xor
jo
dec
into
imul
mov
sbb
inc
mov
in
inc
fiaddl
inc
and
jne
inc
outsl
add
add
adc
mov
cmpsb
aas
add
imul
mov
and
shll
ficomps
in
adc
push
xorb
sub
sbb
cmp
pop
pop
imul
in
ljmp
sbb
xor
rorb
lret
sti
pop
add
add
addr16
int3
in
cli
call
cmpsb
mov
iret
push
xlat
sub
lods
and
add
push
pop
pop
or
adc
fucomi
in
mov
movsl
sbb
imull
adc
dec
insl
xor
fidivl
xor
and
stos
cltd
into
in
cmp
pop
stos
call
cmc
movsb
jb
das
lret
add
in
push
pop
mov
iret
jmp
rcr
fsubl
cmp
push
lds
outsl
add
dec
loope
rclb
xor
add
popa
and
shl
lcall
loop
dec
lods
cltd
jne
cmp
sub
xchg
rcll
imul
mov
dec
cmp
rol
arpl
sub
out
or
or
daa
sub
mov
mov
xlat
stc
ds
mov
mov
sbbl
add
popf
push
dec
movsb
out
je
test
iret
imulb
pop
jmp
stos
and
aad
pushf
dec
sub
cmp
outsl
pop
cmp
mov
fwait
jbe
das
add
cld
int3
cmp
clc
stos
addr16
pop
popf
xchg
dec
stos
cmp
mov
sbb
lret
jnp
ret
dec
int3
insb
out
daa
fstpl
pop
xchg
pop
ss
lret
std
mov
jge
sbb
into
mov
cmpl
pusha
hlt
mov
adc
lcall
cmp
imul
push
ljmp
or
and
fadds
in
cmp
cmc
out
dec
pop
or
decl
push
push
aad
lea
mov
lret
jp
pop
shl
pop
or
xchg
mov
idivb
mov
cmpsb
out
or
pop
imul
mov
inc
out
into
lods
xchg
dec
adc
in
dec
xchg
lods
call
mov
std
sbb
dec
inc
dec
mov
or
sub
mov
pop
fildll
mov
sti
insb
fstps
add
sbb
xchg
sbbl
outsb
push
cmp
outsb
adc
das
or
rcrb
xchg
popa
xchg
pop
cmp
add
pop
pop
xor
jae
pop
and
xorl
sbb
xchg
add
mov
sub
xor
inc
cltd
xor
popa
adc
test
push
ss
add
clc
xlat
cmp
aam
pop
mov
inc
setb
clc
and
push
in
dec
cmp
fidivrl
mov
outsb
sahf
int
mov
mov
stos
dec
js
addr16
in
loop
sahf
cli
fs
pop
cmp
xchg
insl
dec
test
gs
and
aaa
ja
fcompl
sbb
hlt
add
or
cmp
sbb
sbb
ffree
negl
fiaddl
or
icebp
sbb
push
cmc
mov
sbb
lock
xchg
xor
push
lods
cmp
mov
inc
jl
lcall
inc
call
shlb
xor
xchg
push
mov
test
mov
jnp
jecxz
in
xor
divl
in
inc
ja
add
daa
cmp
ret
mov
test
xor
out
test
pop
dec
not
pop
inc
js
imul
aam
out
sub
and
and
jmp
stos
and
or
test
scas
ficoms
inc
cmp
dec
mov
dec
icebp
cmp
in
sbb
push
enter
test
in
add
outsb
sbb
xor
sahf
inc
leave
mov
xchg
shrb
pop
mov
cmp
ds
adc
iret
push
std
mov
int3
stos
cmp
dec
ja
jbe
push
ljmp
cmc
mov
loopne
jne
in
repz
xor
add
insb
mov
mov
jb
enter
mov
and
icebp
fs
test
mov
ss
fimull
fildll
xor
xor
xor
lds
rcr
lods
add
mov
test
dec
repnz
clc
xor
mov
rclb
jns
inc
cli
jo
adc
dec
aas
push
jae
arpl
repnz
jb
popa
mov
inc
arpl
jp
jno
lahf
or
scas
pop
mov
aas
pop
jl
sahf
mov
mov
shrb
mov
cmpsl
loopne
in
and
stos
hlt
outsl
add
adc
mov
enter
pop
mov
inc
pusha
leave
or
mov
mov
flds
cmp
sbb
out
jnp
jg
push
lods
jb
repnz
scas
inc
dec
cmpl
lock
in
push
hlt
push
andb
test
xchg
outsb
fmull
sarl
adc
outsb
bound
arpl
outsl
mov
outsl
dec
cmpsb
mov
add
inc
push
jbe
fadds
mov
loopne
shlb
push
lahf
ljmp
in
faddl
or
lock
popf
pop
rcrl
adc
outsl
mov
mov
mov
add
int
pop
cltd
pop
and
ja
testb
fsubrp
cli
cld
or
aas
xchg
mov
or
sbb
lcall
add
bound
aad
popf
add
cmp
out
ja
popf
sub
mov
jmp
cs
mov
loop
push
insb
pop
daa
pop
cmp
aas
add
in
mov
rcrb
arpl
std
dec
clc
mov
lcall
fwait
adc
fwait
insl
pop
fs
fwait
push
scas
dec
in
or
xor
imul
push
hlt
mov
or
adc
movsb
pop
test
ss
lahf
cmpl
adc
cltd
in
mov
fisttps
add
jne
xorl
lahf
arpl
sub
aad
cmpsb
mov
sbb
dec
lea
cmp
aad
inc
ds
xchg
cmc
fwait
dec
add
out
or
je
lods
mov
xor
xor
insb
stos
jnp
ret
xor
mov
push
std
and
push
dec
cmpsb
test
repz
ret
push
push
in
mov
cmpsb
cltd
ljmp
pop
neg
push
fbstp
mov
add
mov
cs
and
test
mov
pop
imul
adc
and
andb
notb
push
cmp
shrb
xchg
add
cmp
outsb
cmpsl
xchg
mov
jp
and
jnp
jecxz
adc
jo
dec
xlat
push
lcall
pop
loop
pop
sub
push
cmp
into
push
in
xlat
push
cmpsl
jbe
xor
loope
stos
fisttpll
push
jne
inc
sub
fidivrl
daa
enter
xchg
mov
jnp
insb
jp
adc
test
and
bound
int
pop
stos
lahf
inc
movsb
into
sub
pop
xor
mov
and
dec
pop
push
add
sahf
dec
andl
test
xchg
mov
iret
iret
divl
mov
bound
pop
out
xlat
add
mov
inc
or
das
fbstp
cmp
sbb
and
inc
pop
and
jo
mov
incb
xchg
fildl
loop
push
mov
rcrl
dec
inc
and
mov
inc
cmpsb
xor
jo
lret
xlat
es
xorb
sub
sub
stc
add
sub
fs
jge
push
lret
xor
dec
popf
pushf
xor
and
mov
jmp
and
dec
mov
lods
out
out
mov
loop
nop
loop
fadd
aam
shll
xor
inc
sbb
lret
and
adc
push
loop
les
mov
shll
push
arpl
inc
in
ret
sbb
scas
lds
or
adc
mov
repz
fstps
cmpl
sub
or
pusha
xchg
cli
add
or
arpl
pop
jnp
mov
or
mov
pushl
scas
push
jl
add
push
inc
xchg
scas
xor
ljmp
jmp
mov
cli
roll
je
fists
pop
int3
filds
jnp
fdivl
mov
pop
aam
jl
and
add
dec
loop
je
inc
jns
in
loop
lods
push
inc
in
mov
int
stos
jg
sbb
stc
lcall
mov
pop
or
dec
or
sbb
fwait
ret
out
shl
popf
out
lahf
pop
in
pusha
fsubrl
mov
mov
clc
mov
popa
sub
dec
sbb
inc
add
add
mov
push
jmp
push
jne
mov
fldenv
popa
xor
dec
addr16
pushf
adc
mov
fiadds
scas
sti
sub
movsl
add
lret
mov
cmpsl
sahf
in
and
sub
or
jle
xor
mov
stos
fs
pop
and
out
jg
xchg
adc
inc
xor
jne
lods
test
sub
pop
or
jmp
std
out
clc
int
jns
in
mov
mov
cmp
pop
pop
cmp
loopne
dec
lahf
test
icebp
pop
jp
xchg
mov
xor
cmp
in
mov
jne
jg
cmp
enter
mov
repnz
add
pop
pop
ret
test
jle
iret
insb
sub
jl
jne
loop
shlb
pusha
cmpl
mov
and
adc
lock
lret
mov
jae
daa
ret
lds
into
and
les
lds
jbe
mov
mov
lret
call
loope
mov
jmp
je
xor
orb
test
popf
insb
popf
sub
cmp
dec
imul
ss
fsts
mov
push
hlt
test
cs
push
sub
daa
mov
pushf
fbld
fstl
mov
dec
outsb
mov
xchg
mov
pop
gs
ret
fisttps
xchg
outsl
sub
pop
addr16
adc
cli
out
adc
mov
mov
cmc
add
outsl
sbb
fcoms
and
push
ret
mov
dec
dec
mov
pop
pslld
jne
sub
div
mov
push
cmp
roll
dec
pop
fwait
pop
and
jne
or
push
dec
int3
inc
mov
faddl
mov
xchg
sub
adc
pop
repz
xchg
arpl
mov
xor
cltd
daa
and
popf
and
sbb
xchg
out
add
push
mov
std
scas
jne
pusha
pop
insb
shll
and
mov
mov
ds
outsb
jns
aas
dec
bound
dec
outsl
aad
push
js
jb
jnp
in
adc
insl
add
js
mov
stos
test
ret
inc
sub
pop
rorb
mov
pop
add
mov
or
xchg
stc
add
cmc
jmp
cmc
or
xchg
je
lock
aaa
sti
cwtl
js
pop
fwait
mov
xor
sub
mov
sbb
push
inc
jno
xorb
add
or
into
inc
cmpsl
adc
adc
neg
out
push
int3
shlb
cmp
idiv
lcall
push
mov
fisubrs
loope
jae
lret
ds
aad
inc
ret
mov
pop
push
jo
sub
in
sub
push
mov
fdivrl
jmp
std
xor
imul
jnp
paddsw
dec
lea
sbb
divb
jmp
push
mov
xchg
pusha
mov
fsubrs
fcoml
jmp
dec
pop
addb
cmp
sub
sahf
int
popa
repz
hlt
mov
dec
push
leave
adc
and
movsb
cs
push
enter
mov
movsl
cwtl
out
out
subb
das
into
mov
xchg
mov
leave
adc
push
add
adc
scas
jge
dec
inc
mov
rcl
dec
or
ret
divb
add
mulb
mov
in
das
cmpsb
repz
lods
or
in
inc
push
dec
mov
in
ret
and
lcall
add
sahf
mov
cmp
fldcw
sbb
or
aam
ss
mov
jbe
aad
call
imull
pop
mov
fstpl
xchg
std
lods
in
adc
dec
inc
push
and
inc
shll
adc
lcall
xchg
cmc
dec
cli
xchg
iret
loopne
clts
sbb
pop
push
lea
outsl
shll
cltd
push
sub
popa
pop
hlt
out
xchg
mov
pop
les
lcall
mov
cmp
adc
dec
mov
or
movsl
xchg
ficomps
push
lods
sbb
mov
cmp
fnsave
jae
mov
cmc
mov
test
mov
aaa
scas
mov
sbb
enter
pop
repnz
push
jl
xchg
sbb
scas
lock
nop
cwtl
lret
nop
stos
adc
in
jle,pn
lret
dec
fwait
dec
mov
aad
dec
xchg
cmp
ss
test
std
jl
pushf
cmp
and
in
mov
adc
add
adc
pushf
mov
mov
data16
jmp
mov
cs
jo
test
insl
jo
lcall
pop
xor
xor
cltd
xchg
mov
sbb
pusha
clc
pop
sbb
lods
pop
add
pop
inc
mov
sbb
popa
ret
stos
jo
imul
mov
adc
daa
and
dec
xor
xchg
fnstenv
pop
pusha
not
ja
decl
test
xchg
and
movsl
or
add
sbb
jecxz
pushf
mov
or
push
pop
lods
stc
xor
adc
adc
aas
out
movsl
inc
sub
dec
sbb
push
cs
sub
and
pop
test
orb
fbstp
xor
jp
mov
jne
lea
pop
cwtl
testb
aas
lods
or
xor
addr16
jle
sub
dec
inc
inc
jo
add
addb
cmpsl
lea
aam
mov
outsb
dec
js
sbb
sbb
mov
aaa
fcoml
cmp
cli
cmp
or
mov
jbe
jecxz
das
push
movsb
jno
mov
push
enter
rcr
jno
stc
and
xchg
xlat
mov
jge
inc
xchg
ret
xor
sub
adc
imul
hlt
into
add
mov
call
pop
scas
pushf
push
in
daa
loopne
ret
pop
and
sub
lcall
js
fcmovnb
ja
mov
js
in
jae
and
ss
cmp
popa
xor
enter
xlat
jge
leave
cmp
pushf
add
jb
add
mov
dec
jp
mov
lcall
mov
rclb
stos
mov
popa
ds
or
fildl
cli
subb
sbb
test
pop
shll
jg
xor
mov
cmpb
movsl
xor
sti
sbb
cmp
je
or
sarb
add
pop
je
pop
push
mov
push
pop
out
rol
mov
out
mov
arpl
add
add
mov
add
sub
mov
fcmovnu
cmp
jle
icebp
dec
and
xchg
sbb
insl
cmc
add
xorb
push
and
int3
adc
mov
shll
subb
mov
jne
mov
call
fists
and
sbb
mov
jmp
mov
mov
xchg
lods
in
push
cwtl
lahf
shl
sub
lods
out
int
fidivl
cmp
gs
sahf
jmp
psraw
add
mov
sbb
je
mov
sbb
scas
push
cmp
hlt
ret
inc
pop
inc
std
jmp
out
dec
jae
mov
call
scas
jg
jle
imul
jns
adc
push
daa
rcrb
and
and
ds
shrl
ret
inc
sti
testl
out
bound
push
jg
mov
jo
and
xor
je
dec
movsb
cltd
xor
mov
popf
imul
mov
test
jnp
outsl
dec
imul
push
mov
inc
ljmp
dec
adc
std
fwait
sub
lods
push
sub
lret
pusha
jle
lock
and
movl
mov
mov
je
inc
push
jp
and
fwait
inc
inc
outsl
daa
popa
addb
das
jg
mov
pushf
mov
rolb
pop
jo
outsb
push
sub
movsl
ret
adc
mov
fidivl
mov
pop
ret
sti
pusha
pop
out
pop
jo
mov
mov
call
test
fists
and
and
aas
testb
push
sahf
test
adc
jne
aad
push
pop
jb
jge
adc
pop
and
pusha
test
std
mov
xchg
mov
bound
xor
lcall
dec
mov
cld
testl
fldl
test
movsb
lea
fidivrs
out
pop
mov
movl
mov
data16
je
lret
cli
bound
mov
jbe
fisubrl
jle
cli
cmp
pop
xchg
insl
dec
popf
pop
insl
addl
and
repnz
ret
dec
movsl
push
xlat
inc
cmpsl
shll
fisttpll
pop
in
push
pop
mov
icebp
ror
pop
in
xor
mov
pop
fwait
test
push
and
push
add
lretw
dec
push
cwtl
mov
fisttpll
loope
mov
ret
loopne
dec
loop
jl
imul
mov
test
int3
xor
mov
sti
adc
je
andb
paddusb
enter
sub
lcall
pop
mov
jge
in
push
outsl
xor
and
mov
sub
and
hlt
xlat
xor
push
ja
shl
out
enter
mov
xchg
mov
jne
mov
jnp
dec
pushf
in
into
lods
rcrb
lea
xchg
push
mov
test
out
aas
mov
cmc
lret
cwtl
rorl
jge
das
mov
mov
cmp
xor
push
xchg
mov
inc
push
dec
addr16
jo
inc
push
loope
xchg
mov
test
in
sbb
imulb
stos
push
repnz
lcall
das
jns
lods
shrl
aam
xchg
nop
mov
pop
mov
ds
push
mov
test
pop
into
movsl
dec
and
mov
aam
sbb
mov
jbe
sti
cmp
ljmp
sti
push
mulps
lret
int
adc
or
lea
jmp
pushf
add
int
dec
sbb
dec
inc
test
mov
rol
ds
push
push
sub
dec
lock
daa
jge
stos
mov
jle
addr16
jbe
adc
sahf
push
dec
cmp
out
in
dec
repnz
sbb
js
int
shll
mov
xchg
cltd
cld
std
or
shll
xchg
inc
insb
ds
push
lret
leave
lret
and
negb
xor
into
les
or
xchg
lea
ss
and
add
popf
dec
pusha
and
hlt
and
or
xchg
gs
fwait
mov
int3
xchg
mov
add
bnd
in
sub
aas
push
lret
pushf
ret
loopne
int3
push
add
call
out
loope
or
pop
xchg
dec
aas
jg
cmp
and
pusha
jl
adc
sbb
fimull
mov
push
push
int
imul
jg
sub
dec
jmp
inc
pusha
fiaddl
inc
pop
xor
out
pop
jns
fimuls
shl
cltd
add
mov
cmp
movsb
inc
sarb
mov
cwtl
mov
inc
aam
lods
adcb
fidivs
mov
pop
cmp
sarl
xchg
pop
push
cmp
or
aaa
push
out
sarb
sub
fdivl
data16
add
scas
lcall
fidivrl
xchg
cmpsl
stc
ret
jle
jnp
stos
je
mov
popa
inc
push
lods
xchg
inc
mov
inc
inc
rep
jmp
stos
cmp
insb
cmp
inc
push
mov
jne
test
and
push
or
loop
xchg
lods
jge
dec
and
sbb
stos
sbb
fstpt
or
sub
fistl
cli
and
jnp
add
pushl
jl
and
fwait
rep
adc
sbb
leave
nop
aad
or
and
aaa
add
push
jmp
dec
push
les
mov
shrb
dec
inc
arpl
add
inc
cmp
shll
sbb
lods
sahf
lods
sahf
xchg
xor
call
orl
sbbb
pop
sti
xor
dec
jle
ret
std
push
or
mov
sub
add
cltd
mov
jbe
or
aas
pop
cwtl
sbb
jp
xor
mov
xor
mov
mov
xor
testl
adc
pop
xchg
das
push
jnp
popf
and
ret
inc
cli
loopne
in
aaa
adc
dec
jno
push
dec
adc
xlat
add
sbb
stos
jl
nop
xchg
cmpsl
dec
sbb
push
cmp
daa
dec
popl
aaa
mov
pop
fistl
mov
xchg
stos
pop
testb
sub
aaa
rcrl
pop
add
jno
decl
sub
dec
jo
jle
test
incl
loop
mov
jl
aad
repz
std
and
sarl
fisttps
sub
sbb
or
sarb
jae
adc
lods
inc
adc
cmc
inc
mov
ret
je
stos
loope
pop
jmp
cmpps
mov
shrb
jg
loop
mov
mov
movsb
sarb
xor
and
xchg
mov
std
add
or
and
arpl
push
xor
push
adcl
adc
jge
shll
jmp
xor
mov
frndint
jnp,pn
repz
sub
and
aas
cltd
push
aaa
dec
inc
adc
jl
cmp
add
xchg
cmp
leave
ss
pop
imul
fmull
ret
dec
lcall
push
je
nop
mov
std
push
xchg
outsb
ret
fdivrs
orb
add
cmpsb
and
sti
lret
fiaddl
inc
jb
imul
je
mov
out
incl
cmpsl
jmp
and
insb
insb
int
inc
outsb
push
xor
mov
xorb
leave
iret
cs
pop
dec
cmp
pop
adc
dec
lods
lods
lahf
mov
mov
lds
xor
sbb
sarl
scas
or
pusha
fsubs
sub
xor
scas
mov
test
cltd
leave
mov
xchg
sbb
lds
inc
faddl
insl
sbb
dec
dec
pop
imul
cld
pop
gs
jnp
xchg
xor
add
div
mov
lods
test
std
adc
xchg
lds
jb
push
inc
mov
push
iret
dec
pop
xchg
jg
movsb
xchg
mov
push
imul
shll
mov
push
mov
fwait
cwtl
sub
daa
pushf
sub
aaa
cmpb
jb
cmp
jg
jl
fs
in
mov
mov
xlat
ljmp
stc
mov
sbb
fdivr
in
or
mov
cmpsb
popf
aad
fwait
aas
fmull
and
push
xlat
dec
cs
dec
lret
dec
jne
push
sbb
je
je
xchg
and
inc
jge
cmp
xor
movsl
cmp
or
int3
fistl
shlb
mov
enter
fmuls
mov
mov
ds
mov
cltd
jno
cmp
add
mov
movsl
in
arpl
inc
test
add
or
movsb
movsl
jl
xchg
push
mov
test
fwait
xor
mov
mov
xor
cld
lods
inc
pushl
lock
dec
sti
stos
imul
fistpll
dec
shll
inc
fisubs
xor
fsub
lods
mov
mov
daa
inc
xchg
jg
push
sbb
mov
cmpsb
mov
shlb
jp
mov
das
lods
sub
and
int3
and
mov
hlt
int3
inc
and
inc
lahf
mov
xchg
add
jne
imul
repz
rorl
push
es
jmp
sti
pop
or
rorb
push
add
ljmp
jg
inc
lcall
add
cmpsb
ss
mov
adc
mov
push
fcmove
mov
push
jb
mov
nop
loopne
and
je
jecxz
xchg
xor
dec
jno
dec
loope
xor
add
xor
jmp
cmp
or
and
xchg
clc
or
cmp
mov
leave
jge
mov
stc
xlat
push
or
in
pop
and
out
adc
ret
fnsave
dec
jle
pusha
lock
not
xor
cs
pusha
lds
lods
xchg
addl
es
scas
lea
push
sbb
imul
test
adc
jle
push
fdivl
adc
int3
into
xchg
sbbb
out
test
push
sbb
popf
pop
or
cld
insl
push
cmc
mov
push
daa
and
rorl
shrb
ja
add
sbb
pop
imul
dec
adc
jle
in
xchg
xchg
cmp
dec
add
ss
bound
jecxz
push
jg
int3
enter
scas
mov
gs
xchg
rcll
insb
jecxz
jb
orb
push
shll
sahf
sub
mov
lds
in
jp
inc
xor
mov
inc
jb
std
sbb
dec
cmp
push
mov
pop
icebp
add
mov
lods
leave
daa
stos
push
fnstsw
mov
mov
mov
add
lods
xchg
jg
pop
dec
push
cmp
or
mov
not
in
sbb
and
mov
or
xor
test
dec
or
add
leave
lea
pop
repnz
imul
mov
fmulp
adc
and
adc
bound
mov
insb
xor
jmp
pop
mov
nop
mov
lret
daa
or
arpl
scas
arpl
jl
inc
dec
repnz
cmpsb
mov
fprem
fbld
xor
sbb
xor
daa
dec
ds
cwtl
push
test
gs
mov
add
cltd
nop
rcrb
mov
scas
pop
inc
imul
es
pop
jge
inc
adc
and
xor
add
daa
sbb
push
push
jmp
xor
ja
xor
repnz
pop
mov
nop
adc
outsb
dec
adc
fstpl
mov
add
ret
mov
lock
mov
xchg
movsb
jbe
dec
cmpsl
xor
inc
cmp
jb
sbb
pop
jno
adc
sbb
test
and
loopne
andb
push
xchg
out
test
iret
mov
popf
in
sbb
dec
aad
xchg
jp
push
out
mov
andb
leavew
movsb
pop
mov
loope
lods
or
sub
cmp
inc
sub
fcomps
jne
and
pushf
sub
jns
cli
mov
jne
push
pop
movsl
add
ret
mov
fwait
lds
mov
fdivs
push
mulb
inc
cmp
jns
jnp
xor
add
setle
data16
pop
into
insl
insb
fimull
test
cltd
mov
sub
rcl
loope
fucomi
jb
or
cmp
cmpsl
xor
push
mov
repnz
out
xchg
ret
adc
fists
sbb
or
pop
cmpsb
pop
lds
dec
jo
nop
and
sbb
aad
in
cltd
lcall
je
jg
es
inc
mov
mov
lret
aam
jae
scas
cli
out
jb
dec
pop
mov
pop
mov
sub
icebp
inc
jecxz
rorb
scas
pop
test
dec
lods
idivl
add
inc
sub
aad
lret
pop
sbb
or
into
push
push
or
push
negl
nop
ret
std
adc
pop
roll
les
dec
dec
xorl
aad
pop
aam
rorl
push
jb
mov
ficomps
mov
xchg
ret
out
xchg
ljmp
push
pusha
test
popa
dec
cld
ljmp
sub
in
push
mov
sbb
jae
icebp
fisubs
push
outsb
clc
jge
mov
mov
or
scas
insl
cmp
mov
push
stos
aad
push
push
inc
add
mov
cs
mov
and
adc
pop
ja
mov
popf
dec
or
jmp
je
ja
test
les
lea
cwtl
mov
cmp
dec
jle
sub
cli
hlt
mov
xchg
cmp
mov
cmpsb
add
sbb
jno
and
xor
insb
push
xchg
imul
lahf
movsb
adc
lret
jg
ljmp
and
mov
dec
cmc
mov
js
inc
idiv
push
mov
pop
sbb
loopne
add
push
adc
fnstcw
subl
cli
inc
cmpsb
ficomps
rclb
push
mov
fdivl
cmp
jg
cltd
and
xchg
andl
int3
push
jbe
fimull
leave
sub
pop
mov
fdivs
movsb
xchg
lods
ret
dec
cli
pusha
in
mov
pop
fnstenv
pop
inc
int3
lahf
jb
xor
cmp
mov
decb
cmp
pop
push
dec
jp
jnp
lahf
jb
xchg
sub
sub
imul
movsl
out
pop
pushl
mov
or
inc
scas
jl
fdivrl
loop
push
pop
sub
ljmp
dec
sbb
fcoml
subb
ret
push
mov
sub
pop
scas
ja
popf
xchg
in
inc
add
or
dec
cs
das
scas
repz
lret
mov
fs
and
rcr
pop
mov
enter
xor
aaa
insb
cmp
fcmovnbe
outsb
sbb
fists
mov
inc
loope
push
mov
or
cmp
mov
dec
xor
test
sbb
insl
fildl
mov
and
out
mov
jge
push
pop
aas
setle
mov
sbb
mov
inc
mov
inc
out
dec
xor
jge
jp
into
push
mov
push
in
std
push
movb
cld
ss
mov
frstor
arpl
sti
or
pushf
pop
sahf
sbb
mov
push
cs
lahf
adc
out
lods
inc
sub
stos
or
inc
cmp
rclb
mov
fmul
cmp
adc
and
cmp
and
scas
cs
insl
outsb
jo
lods
mov
lock
jg
jle
fincstp
jne
repnz
hlt
es
outsb
mov
lahf
xchg
mov
fwait
mov
sti
xchg
push
aad
stos
jmp
shlb
stos
mov
stos
pusha
mov
ficompl
push
sub
adc
adc
jae
out
jae
sti
xor
jecxz
test
mov
cmp
js
cwtl
mov
nop
lods
xchg
jg
xchg
xchg
inc
faddp
sarl
sbb
in
shll
sub
ljmp
int3
dec
mov
mov
out
push
enter
jo
das
imul
xor
mov
mov
repnz
dec
icebp
mov
mov
arpl
sahf
mov
jmp
push
and
clc
mov
ljmp
xor
jl
xor
inc
xchg
adc
sbb
mov
and
xor
repnz
dec
jno
stos
aaa
pop
xchg
int3
subl
mov
xor
cmpsl
inc
loop
jecxz
dec
nop
lret
sti
jg
lea
into
stc
imul
push
cli
out
adc
xchg
sub
and
push
inc
incl
or
rclb
out
and
xchg
sahf
scas
stos
xchg
lret
jmp
movsl
lea
roll
insb
out
pop
or
pusha
and
mov
jmp
loop
loope
inc
aaa
std
ret
cmpsl
or
jb
enter
or
ret
push
and
add
lahf
push
in
popa
mov
sbb
ljmp
sbb
mov
pop
movsl
push
mov
mov
mov
icebp
pop
and
dec
sub
mov
aad
jle
mov
sbb
push
cmp
cwtl
pop
ds
imul
std
sbb
lods
aaa
mov
sarl
mov
pop
ficoml
mov
push
sub
arpl
nop
in
ficoml
mov
in
outsl
sub
fmull
and
xchg
roll
inc
mov
push
ds
cmp
mov
es
js
dec
ret
repnz
xchg
sbb
push
das
pusha
jnp
test
inc
jg
mov
mov
jecxz
push
xchg
lret
insb
push
pop
testl
xor
mov
outsl
popf
push
fsubrl
icebp
cmp
pop
lahf
fmuls
or
scas
test
icebp
outsl
bnd
mov
ret
ss
popa
jge
imulb
sub
push
push
push
int3
les
cmp
aas
or
pop
popf
jmp
inc
or
loope
lds
push
dec
or
push
push
cld
xor
xor
add
ror
pop
outsl
xor
test
imul
dec
push
push
add
pop
cmp
call
call
pusha
cli
fdivl
out
pop
mov
xchg
push
daa
add
mov
mov
and
out
push
jl
push
and
inc
mov
or
push
jne
pop
arpl
or
movsb
outsb
add
rolb
outsl
sub
loopne
cmp
test
inc
mov
mov
test
jns
je
test
js
jmp
int
cmp
data16
fdivrp
sub
push
loopne
jecxz
xor
jl
fldl
lret
imul
jns
push
ror
dec
inc
or
push
xor
les
inc
cld
adc
fs
daa
imul
mov
jae
andb
pop
loopne
mov
call
cwtl
fisubs
lahf
jl
int
pop
fstps
xchg
jne
jmp
rcrl
sarb
dec
sbb
mov
and
int3
clc
in
fs
lea
xor
aad
xor
adc
scas
xor
and
mov
sti
pop
cmc
sti
mov
mov
push
push
mov
gs
add
loopne
xor
cmp
js
adc
sub
shll
sub
shll
imul
out
jle
popf
jl
add
loop
cli
add
jg
add
std
xchg
fdivs
movsb
adc
fwait
add
xor
fdivr
mov
mov
jns
mov
sbb
and
pop
jne
pop
fldt
mov
jmp
les
pop
cmp
movsl
cs
xor
jae
into
filds
in
or
xchg
fnstcw
lods
pusha
adc
jmp
addb
loope
call
push
in
and
pusha
push
mov
xor
pop
mov
push
addl
add
popf
mov
mov
insl
mov
rcll
sub
insb
andnps
and
xor
lods
mov
xchg
cmp
movb
imul
jno
inc
xchg
dec
icebp
scas
sub
jge
arpl
cmpsl
jge
adc
andl
jnp
decl
or
in
adc
aam
or
adc
addb
cmpsb
aaa
enter
lock
mov
scas
or
jl
cmp
inc
cli
jecxz
inc
shrb
jmp
push
add
dec
fwait
xchg
lcall
fs
mov
pop
pop
cmp
orl
sub
inc
hlt
xor
sarb
pop
outsl
lea
and
dec
jp
test
and
fsubr
aad
scas
adc
addl
add
mov
filds
pop
xlat
sbb
fwait
pop
sub
movsl
or
add
jo
cmp
xchg
adc
sbbb
add
aaa
cmp
push
fcoml
jg
jmp
and
or
sub
and
insb
arpl
test
xor
into
cli
push
sub
aaa
push
lret
and
add
leave
sub
movsl
mov
xchg
pop
out
mov
test
scas
cmp
or
or
inc
mov
mov
push
in
xchg
jae
mov
sub
sbb
lock
inc
jle
inc
xchg
mov
xchg
ja
cmp
add
or
xchg
sbb
jne
arpl
cmp
adc
test
adc
nop
push
fnstenv
jl
inc
and
repnz
sarl
pop
imulb
pop
jne
scas
incl
and
jp
nop
pop
aas
pop
and
cmpsl
ds
or
push
repz
fisubrl
cmc
mov
xor
mov
sub
or
stos
cli
loope
push
inc
insb
popa
sahf
outsl
in
call
mov
lock
repz
cmp
inc
scas
cltd
mov
add
cmc
psadbw
or
inc
push
test
fists
lret
dec
cld
dec
and
add
add
hlt
pop
pop
imul
movl
lea
movsb
sub
popa
std
add
mov
push
push
pop
loope
insl
push
inc
int
insl
jb
mov
sub
mov
push
js
or
xchg
inc
pop
mov
cmp
pop
aad
pop
cs
fildl
ror
jo
iret
nop
jbe
xlat
mov
cmp
das
sbb
scas
xchg
mov
add
xor
jmp
ja
das
xchg
sbb
mov
sti
rorb
fmuls
adc
adc
push
jg
loopne
cld
aam
dec
cmp
adc
imul
mov
pop
sbb
lcall
add
ds
rcr
roll
xchg
jo
out
daa
movsb
cmp
mov
inc
adc
cmp
addr16
push
add
jmp
es
adc
xchg
pop
into
scas
in
xchg
mov
mov
mov
repnz
clc
pop
mov
scas
adc
enter
fcompl
lods
sub
mov
dec
push
stc
ds
in
push
jmp
daa
xchg
jle
or
test
insb
adc
int3
mov
adc
xlat
add
xorb
dec
pushf
into
and
frstor
xchg
mov
add
or
push
outsb
pop
cmpsl
insl
jb
sbb
dec
mov
add
das
adcl
jbe
es
sub
add
fiadds
dec
push
ret
insb
jns
xchg
mov
stos
add
mov
sbb
push
cmpsl
les
mov
sub
repz
in
mov
and
data16
xchg
mov
xchg
stc
add
iret
adc
and
sub
jge
sub
jnp
xlat
aad
pop
xchg
adc
je
fwait
mov
mov
outsb
pop
push
fiadds
jae
add
ja
mov
mov
xor
push
pop
sahf
lock
xchg
dec
jns
cmp
jb
dec
shll
fwait
jns
icebp
and
sbb
inc
add
ss
mov
sbb
sub
cmp
cmp
cmp
fisubs
inc
dec
test
mov
add
ss
clc
jno
fcmovbe
je
ret
pop
xchg
outsl
mov
push
cmpsb
add
leave
mov
je
jbe
xor
jno
test
mov
adc
sbb
mov
insb
loope
xchg
enter
inc
out
jmp
push
jge
test
in
pop
cs
pop
xor
mov
sbbb
adc
outsb
cli
pop
add
sub
orl
out
add
push
dec
cmp
in
fcomps
dec
leave
fcomps
sbb
and
orb
pop
ds
test
movsl
sahf
xor
mov
test
test
ja
mov
sbb
adc
dec
ret
mov
adc
xor
mov
sub
xor
int
js
outsb
jmp
lock
jo
inc
mov
icebp
outsb
nop
enter
xor
mov
pabsd
lahf
aas
aas
mov
sbbb
lret
sbb
jg
mov
inc
or
push
adc
inc
pop
cmp
nop
mov
mov
add
xor
inc
mov
rorl
mov
mov
pop
cmp
test
jge
pop
insb
gs
xor
push
mov
loopne
jbe
movsb
dec
call
cwtl
fimuls
xchg
test
aam
das
in
fldenv
test
repz
jp
insl
ds
xor
sbb
je
add
loopne
fistpl
sbb
sub
xchg
dec
cmp
xor
sub
movl
popa
stos
int3
lods
push
enter
jmp
or
fdivrs
mov
in
pop
xchg
imul
fucomp
out
mov
test
into
xchg
adc
ja
mov
lds
xor
loop
cmp
movsb
push
pop
adc
mov
jl
push
loopne
mov
hlt
jno
pop
mov
jnp
mov
inc
imul
sub
mov
aad
sbb
dec
adc
roll
pop
jb
lock
inc
mov
sub
lea
insl
out
jecxz
xor
rcll
mov
loopne
daa
xchg
xor
pop
jecxz
inc
sbb
xor
in
mov
lds
fidivrl
cmp
aas
and
shr
add
enter
jb
pusha
lahf
lcall
sbb
or
or
in
stos
roll
out
xor
lea
hlt
movsb
mov
add
push
fstpt
jb
fidivs
cld
cmc
orl
cwtl
roll
mov
loope
lods
mov
les
pop
sbb
outsb
xchg
into
xchg
inc
in
mov
sti
mov
dec
xor
fldcw
mov
shll
or
xor
sbb
popa
push
aaa
test
add
out
xorb
mov
adc
loopne
cli
inc
cs
lock
cmp
dec
sahf
in
aad
scas
pop
repnz
jle
lahf
mov
movsb
adc
sbb
fisubrs
jo
ss
or
xor
add
fbstp
push
fsubrl
dec
sub
cmpsb
mov
std
mov
imul
cmpsb
fstpt
int3
cmp
xor
inc
sbb
jg
adcb
jae
sahf
push
sbb
mov
mov
push
repz
sub
jo
nop
aad
fistpl
fiaddl
push
jmp
xchg
scas
mov
and
cmp
and
enter
pop
imul
nop
mov
fldenv
rorl
aad
out
jo
cmp
div
add
out
jne
xor
xor
clc
fcmovne
jnp
push
xor
xor
cmp
mov
pop
adc
gs
es
cmp
jle
jbe
out
xor
mov
psubw
jb
ss
push
bound
sti
pop
cld
insb
insb
js
cmp
push
mov
loop
test
aas
stos
addb
add
out
je
lret
insl
js
or
lods
es
xorb
ror
push
inc
cltd
add
jl
dec
movsl
cmp
mov
push
xchg
in
lret
and
out
dec
mov
cmp
push
test
loop
jb
lret
jg
nop
add
jo
mov
roll
jge
mov
je
cmpsb
mov
imul
adc
lret
and
test
sbb
jns
divl
mov
std
jbe
cmp
fiadds
cmpsl
int3
jge
jne
mov
sbb
movsl
or
leave
imul
or
int3
or
fimull
cmpsl
mov
pop
mov
mov
push
pop
mov
into
cmp
popa
jmp
xor
push
mov
inc
scas
pushf
and
stc
mov
jo
jbe
repnz
into
aam
lods
dec
gs
and
imul
fs
stc
pop
insb
mov
lea
shll
aad
popa
sahf
xchg
mov
jae
mov
xor
push
adc
xor
js
nop
add
scas
mov
push
fs
push
shr
test
xchg
divl
push
xor
push
aaa
scas
mov
jno
lret
mov
xor
sub
adc
cwtl
jb
adc
mov
notl
in
mov
jns
jo
leave
adc
pop
and
jl
ror
sub
xchg
and
movsl
mov
add
adc
aas
dec
pusha
add
pop
in
cmpsl
ljmp
lret
es
sbb
pop
xorl
sub
lea
into
nop
adc
fmul
cmp
or
test
in
cmc
psadbw
xchg
add
jecxz
cmp
imul
sbb
aam
jno
dec
lods
std
push
or
lea
mov
mov
jg
sbb
push
xor
clc
mov
push
nop
or
dec
lret
sub
out
inc
or
stos
insb
jnp
dec
and
dec
orl
mov
cmp
xor
xor
mov
mov
stc
mov
pop
add
dec
aas
xor
jns
out
or
leave
inc
xchg
aad
xor
mov
push
mov
inc
dec
and
stos
out
push
sbb
ljmp
sbb
sub
xchg
out
loopew
jl
outsl
out
das
stos
push
sti
push
decl
in
mov
mov
cmp
xor
ds
mov
pop
testb
test
rcrb
xchg
dec
pop
fcoms
divl
xorl
inc
jge
icebp
push
mov
mov
pop
xor
int3
les
mov
fildll
outsl
lds
xor
xor
out
js
fstpt
cli
inc
xchg
in
sbb
scas
aam
test
jns
imul
push
sub
xchg
dec
gs
mov
cli
cld
inc
jae,pt
push
and
inc
cmp
xor
scas
jns
das
xor
sub
test
sti
ret
and
cld
push
lods
fnstsw
pop
movsl
es
mov
stos
cwtl
jo
mov
out
jno
lahf
cmc
xor
sub
push
add
pop
dec
dec
lcall
decb
xor
cmp
sub
aas
inc
sub
xorl
out
test
pushf
xchg
dec
add
mov
cltd
adc
insl
gs
sarb
je
iret
and
clc
sub
stc
xchg
das
mov
adc
movsl
dec
xchg
leave
add
daa
ljmp
push
addl
mov
xor
mov
xlat
sbb
dec
test
or
sbb
adcl
ljmp
mov
ds
add
outsl
jg
ds
jecxz
loop
xor
das
xchg
xor
and
add
or
dec
addr16
sub
in
adc
mov
xchg
lods
test
das
sbb
int3
les
xor
mov
fmul
lret
iret
stc
adc
adc
fsub
sub
dec
add
fdivr
adc
xorb
sbb
ds
xor
mov
andl
shl
mov
sbb
je
lods
test
into
out
pop
pop
push
mov
std
pop
sbb
or
movsl
out
lret
movsl
push
test
or
decl
sub
mov
sbb
loope
or
mov
in
jae
fidivl
add
and
cmpsl
sti
cmc
cmpsb
mov
divl
mov
jo
inc
xchg
jge
hlt
inc
pop
push
jnp
mov
scas
imul
pushf
lods
in
jns
jbe
ret
mov
xchg
and
and
andb
sub
les
lds
mov
out
pushf
hlt
pushf
dec
add
xor
sbb
cmp
shlb
push
out
les
xchg
push
push
lahf
outsb
test
insl
sarb
leave
imul
xchg
popf
stos
inc
scas
loop
jge
ficoml
ljmp
cld
adc
push
adc
jno
fcomps
in
cmp
mov
fadds
mov
test
and
jb
jns
inc
adc
xchg
popf
xchg
push
adcb
dec
mov
mov
andb
dec
je
test
mov
xor
iret
fwait
out
test
jmp
fdivrs
pop
mov
subb
pusha
jecxz
mov
iret
lahf
test
femms
pushf
mov
sbb
jl
mov
aam
test
dec
jge
pusha
jecxz
pusha
icebp
sub
push
jne
push
dec
mov
ret
ds
sbb
xchg
stos
pop
loop
and
or
inc
ret
mov
loop
cmp
dec
pop
or
mov
loope
test
pop
jp
xor
and
mov
ret
adc
test
aaa
pop
inc
cmp
mov
out
or
mov
in
imul
into
jecxz
jecxz
scas
mov
ja
push
jmp
int
jae
test
mov
cwtl
jl
or
cmp
xchg
push
inc
mov
bound
daa
das
sub
cmpb
pop
ja
xor
jmp
jb
pusha
cmpsb
mov
sbb
add
test
or
sbbl
xchg
cmp
cmc
lahf
or
mov
inc
sbb
mov
js
pop
inc
ret
out
cld
pusha
dec
dec
pushf
cmc
push
jg
or
sub
clc
je
and
hlt
icebp
clc
data16
pop
lcall
or
mov
loope
sub
pop
cmp
idiv
pop
rorl
call
in
push
loope
mov
invd
sub
adc
es
aas
inc
xor
shl
test
cmc
pushf
cmp
inc
mov
js
push
pop
sub
dec
cmp
cmp
imul
rcrl
xor
dec
dec
popa
cmp
jns
xlat
push
push
xor
clc
inc
push
lea
in
outsl
jecxz
sub
or
cmp
cld
pusha
enter
mov
xor
faddp
push
icebp
mov
xor
insl
sbb
sub
icebp
ljmp
and
outsb
and
jl,pt
test
mov
ds
fucomp
or
imul
es
das
test
cmp
ret
sbb
test
push
mov
dec
dec
pop
test
xor
rorl
push
jb
test
lods
mov
pushf
jnp
adc
jle
lods
pop
mov
cli
fiadds
dec
shlb
ljmp
cmp
pop
xchg
inc
xlat
push
mov
popf
jmp
sub
push
and
sub
or
scas
cltd
daa
xor
dec
dec
mov
subb
mov
xchg
sbb
and
test
push
loop
call
xchg
pop
sahf
pop
pop
mov
dec
subb
mov
testb
xor
cli
push
push
scas
pop
popa
outsl
jle
cmp
dec
lahf
or
mov
adc
mov
jge
pop
popa
push
inc
arpl
dec
daa
into
in
pop
testl
jnp
cmc
mov
mov
sbb
sub
test
mov
jle
addr16
inc
test
dec
call
or
jle
jmp
mov
push
aam
aad
hlt
adc
pop
movsl
shrl
pop
mov
ret
loopne
cli
push
sub
out
adc
jno
cmp
and
icebp
icebp
movsl
cmp
fscale
pusha
rorb
cmp
clc
jg
pop
xor
mov
shl
loop
ds
cwtl
subb
ret
and
or
call
sub
inc
mov
add
mov
popa
pop
pop
mov
and
xchg
sbb
int3
cmpsl
test
pop
movsl
cmp
push
pop
dec
and
and
int
jmp
aad
into
jns
add
mov
gs
jne
rorb
lahf
fmull
repnz
int3
cmp
mov
mov
imul
int
dec
jle
mov
scas
add
cwtl
xlat
sarb
ficoms
daa
fdivs
sub
xor
cmovle
dec
shll
stos
hlt
mov
push
adc
rcrb
adc
mov
in
dec
nop
repz
mov
nop
in
sbb
mov
jmp
ds
fsub
cmp
sbb
addr16
xchg
jg
dec
test
pop
pop
bound
inc
xchg
popf
add
test
sub
in
pushf
jb
and
cltd
push
aam
pop
lahf
inc
jge
mov
mov
mov
sub
movsb
lahf
cltd
or
inc
or
dec
mov
xor
fwait
bnd
xor
lahf
pop
push
iret
xlat
addl
cmpsl
push
ja
rcrb
cmp
fs
in
fcomps
nop
adc
xchg
sub
rcr
lcall
je
jle
inc
shll
xchg
addb
scas
shll
aas
fs
and
push
xchg
fidivrs
hlt
mov
adc
mov
xor
rcrb
fs
pop
mov
or
push
lock
adcb
push
jbe
xchg
mov
dec
pop
lret
xchg
pop
test
movsb
pop
test
mov
in
push
clc
xchg
sti
shlb
in
arpl
dec
shrb
or
inc
dec
dec
push
mov
push
xchg
pushf
cltd
and
sub
rcll
and
fmull
pmuludq
in
dec
aam
dec
dec
gs
push
pop
aam
pop
idiv
jge
mov
rorb
jecxz
fwait
test
sahf
and
jmp
outsl
int
mov
jmp
xor
ret
xadd
jmp
lods
leave
sub
cmp
ljmp
fbstp
repz
xor
or
mov
xchg
bound
dec
dec
bound
xlat
cmp
inc
stos
call
sbb
or
mov
xor
mov
lock
cmp
xlat
adc
shl
push
test
inc
cmp
cs
dec
lods
jecxz
xorb
sar
repnz
out
aaa
jecxz
jns
jne
inc
cmpsb
daa
mov
sti
arpl
xor
decl
sbb
fistpll
orb
pop
cli
adc
jns
test
and
mov
loop
fisubrs
cld
insb
mov
jg
inc
pusha
dec
push
fsub
mov
and
jne
push
into
or
and
mov
je
xor
into
stc
mull
mov
outsb
je
scas
jp
in
and
in
xchg
test
pop
jae
mov
clc
dec
roll
inc
pop
pusha
pop
ficoml
mov
mov
mov
dec
dec
and
js
xchg
xor
mov
mov
xor
insb
adc
cmc
push
ljmp
popa
addl
and
test
ljmp
cwtl
aas
xchg
and
stc
push
fidivs
inc
sub
sub
cmp
sub
mov
jno
movsl
scas
imul
xchg
test
lahf
in
stos
xlat
or
push
test
outsl
push
push
clc
push
jecxz
and
adc
je
sti
sti
mov
rclb
lock
loope
cmp
mov
push
xorl
inc
pop
mov
xchg
jle
test
test
pop
aad
enter
cmp
arpl
and
mov
lea
adc
fisubrs
and
test
enter
mov
loope
fisttps
mov
or
mov
or
gs
mov
insl
ret
scas
dec
mov
add
mov
cmp
aas
call
fcmovne
hlt
pop
pop
les
jbe
mov
imul
mov
clc
cmpl
add
es
lahf
lahf
aad
cltd
push
insl
addr16
dec
rcrl
stos
lea
out
ficoml
cmp
sub
cli
fcomp
jg
roll
pop
inc
push
push
lret
cmc
mov
adc
ss
jge
pop
adc
dec
mov
add
push
movsl
pop
fbld
les
push
mov
out
lret
insb
cmp
jne
add
inc
aaa
into
cwtl
and
stos
pop
clc
shr
dec
out
push
sbb
jae
daa
jl
mov
fidivl
repnz
mov
mov
test
insb
decl
aaa
xor
loopne
mov
push
shr
pop
fisubrl
cmp
cmpsl
xlat
lds
sub
fldt
sbb
jg
sub
mov
pop
adc
out
out
shll
subl
mov
adc
repnz
adc
sbb
es
in
jge
sub
xchg
sub
jne
pop
loopne
scas
in
xchg
fisttpll
outsl
divl
sbb
aaa
test
jae
inc
cmpsb
sbb
inc
add
lds
xchg
mov
xchg
push
or
hlt
aas
jge
call
xor
fadds
or
mov
das
mov
test
push
cmp
mov
pop
in
cmp
aas
dec
fisubrl
jbe
mov
cli
pushf
popf
dec
pop
sub
aad
pop
pop
int
in
add
dec
sbb
movsb
idiv
or
xor
add
loopne
sbb
out
xor
push
hlt
sbb
je
adc
mov
cmpsl
xor
imul
out
dec
mov
xchg
xchg
rcl
mov
sahf
aas
and
fistl
dec
push
pop
push
and
inc
cmpsb
setbe
mov
or
cmp
mov
push
mov
popa
loopne
add
mov
xchg
sahf
adc
adc
push
fidivl
loope
outsl
int3
fldlg2
mov
in
outsb
out
mov
mov
cmp
jne
ret
push
jmp
jne
mov
popa
sbb
jmp
test
int3
mov
mov
movsl
clc
cwtl
ja
stc
pop
and
out
add
int
mov
mov
mov
ds
pop
cwtl
mov
cmp
int3
nop
add
sarl
or
test
jl
cmc
mov
or
sbb
sbb
sub
les
sub
jnp
and
jns
fcoms
lahf
ficompl
add
es
js
out
jmp
je
dec
cli
aam
cmp
mov
adc
fisttpl
je
xorl
push
jge
sbb
popa
enter
inc
in
xchg
das
lcall
dec
push
inc
pop
nop
xor
shl
lea
scas
lahf
add
cld
xor
sub
andb
mov
cmpsl
xchg
pop
lea
pop
lcall
adc
fiadds
xchg
adc
sub
jno
daa
mov
jae
insb
mov
mov
cmpb
js
lret
sti
dec
push
pop
test
push
push
push
sbb
pop
sub
call
pop
xchg
out
or
js
push
test
inc
arpl
mov
popf
adc
loope
stc
int3
and
cmp
mov
jecxz
pusha
imul
inc
out
sar
dec
or
es
push
jmp
add
mov
stos
insb
repnz
cmpsb
aam
adc
rcrl
aaa
push
cld
mov
mov
inc
or
pop
inc
add
inc
rcrb
xchg
aaa
test
mov
das
out
xchg
inc
call
int3
out
jne
xchg
push
sbb
xchg
and
ret
mov
adc
inc
sub
mov
cli
jae
sbb
xor
jbe
aad
cmp
adc
or
sub
aam
dec
sub
fwait
lahf
sbb
dec
jb
arpl
clc
mov
aam
mov
cmp
and
scas
jmp
outsb
sarb
les
inc
pop
sti
or
gs
daa
add
or
push
sub
cltd
fisubs
loopne
mov
cltd
repnz
xchg
lcall
sub
mov
or
mov
xor
cltd
dec
dec
or
fwait
sbb
dec
lea
lret
push
jno
enter
push
push
mov
push
paddusw
test
push
rcll
inc
sti
push
in
jg
pop
stc
cmc
or
jno
pop
fnstsw
pop
nop
cmpsl
sbb
ja
cmpsl
xchg
bound
mov
mov
shl
out
xor
adc
and
cld
push
addr16
add
lret
inc
xor
fcomi
in
and
push
sub
or
in
add
xchg
fwait
jl
ljmp
mov
stos
lods
push
adc
std
call
adc
inc
aam
cwtl
mov
push
cmp
cmc
mov
dec
insl
fcoml
loopne
or
lcall
test
jnp
lahf
and
sahf
aam
or
in
daa
jae
jge
push
loope
dec
inc
bound
push
hlt
adc
mov
negl
push
bound
test
sbb
mov
cs
xchg
mov
rclb
xchg
mov
icebp
mov
jge
push
cmp
cwtl
or
cmp
lea
xchg
fidivrl
xlat
aam
arpl
or
push
fnsave
mov
jmp
cmpsl
mov
sahf
std
ds
loope
xor
stc
mov
jmp
xor
in
and
nop
inc
add
mov
cmpl
inc
mov
dec
mov
stos
lahf
mov
sbb
ss
in
mov
push
stos
xor
xchg
in
imul
and
lret
mov
add
lods
mov
fnstenv
pop
add
fstpl
inc
push
hlt
fs
cs
repnz
leave
mov
push
test
test
mov
movsl
or
popa
jo
cli
and
add
dec
out
xchg
movsl
pop
repz
repnz
es
cltd
decb
and
and
fwait
and
inc
jecxz
sbbl
xchg
out
mov
push
iret
mov
xchg
pop
mov
lods
stos
call
inc
xorl
cmpsl
mov
test
fisttpll
fistpll
cmc
push
xchg
inc
dec
xor
mov
int3
jle
outsb
ret
lret
es
mov
fs
sbb
fsubr
test
stos
stc
jmp
xchg
add
decl
push
sbb
jl
push
or
fnstenv
into
xor
imul
lock
ja
or
iret
repnz
add
fnstenv
xchg
add
sbb
dec
lcall
hlt
repz
mov
nop
fnstsw
jne
push
fisttpl
add
inc
pop
dec
cmp
jge
sub
jbe
inc
adcl
int
jns
pop
out
into
cmp
jne
jg
es
sbb
or
enter
dec
mul
mov
andb
movsl
sahf
inc
and
jae
mov
cmpl
mov
sub
adc
dec
adc
out
ror
mov
inc
aad
mov
data16
push
dec
das
sbb
scas
mov
subl
inc
push
xor
and
movb
dec
xchg
or
out
test
jl
or
inc
xchg
test
pop
test
lcall
push
stos
pushf
stos
js
test
cmp
cs
sahf
insl
rcrl
insb
dec
hlt
dec
leave
addb
mov
add
cmp
sbb
mov
addr16
xchg
sbb
and
aad
jno
mov
sti
inc
add
fidivrs
and
cltd
and
in
xor
mov
mov
xchg
xlat
aad
cltd
inc
add
notb
pop
push
pop
dec
pop
sub
sbbl
inc
std
divb
xchg
xor
cmp
pop
jbe
test
xor
and
mov
inc
ret
fldt
insb
mov
test
mov
js
mov
in
lret
cltd
sbb
cpuid
push
hlt
push
aad
pop
jp
shll
jg
add
iret
mov
test
pop
out
movsb
shr
mov
adc
push
icebp
ficomps
lods
insl
dec
mov
dec
fwait
shl
jo
mov
cltd
pop
push
lds
xor
mov
in
shll
clc
xchg
or
lcall
ljmp
and
add
and
mov
push
lock
addb
pop
movsb
and
scas
jp
imul
jbe
pushf
mov
mov
aam
add
push
imul
add
adc
loope
movsb
push
nop
or
xchg
sub
es
pop
in
dec
mov
xor
xchg
mov
loopne
in
bound
cmp
mov
adc
mov
shrb
loope
pop
mov
insl
push
inc
ds
loopne
mov
ret
xchg
and
jbe
mov
clc
int3
jle
hlt
sbb
jmp
shrl
mov
sub
xorl
sbb
mov
adc
jle
gs
stc
add
push
pop
lcall
cmp
repnz
xor
aaa
aam
je
sarb
dec
add
std
scas
mov
lahf
daa
addb
adc
or
pop
xor
pop
push
jmp
sti
dec
inc
inc
lea
dec
fldt
rol
xor
daa
sub
sbb
xlat
jecxz
ss
addl
pop
xor
dec
stos
cmp
cmpsb
xor
jo
push
les
inc
les
lahf
inc
fcomps
movsl
mov
sub
jmp
addr16
lret
xor
cmp
stos
add
rorb
dec
cltd
lods
movsl
and
cmp
adc
and
add
ds
dec
mov
sub
ss
lea
mov
mov
push
and
pop
mov
out
adc
scas
imul
cmc
fmuls
ljmp
cltd
into
push
flds
xlat
lretw
inc
jae
xor
and
aaa
add
into
arpl
xor
jae
mov
es
aaa
mov
add
push
mov
xchg
xor
aad
repz
adc
clc
aam
sbb
xor
js
cmp
aam
xchg
mov
pusha
push
popa
test
hlt
jbe
fdivs
andb
imul
pop
push
jp
nop
inc
mov
or
and
mov
movsb
pop
scas
sbb
es
sub
into
cmp
jno
iret
jge
dec
or
xor
les
cmp
mov
loopw
lods
cmp
mov
ficoms
adcl
cltd
bound
mov
pop
out
scas
mov
test
sub
mov
imul
sbb
out
test
cmp
pusha
xchg
movsl
data16
sahf
or
aad
xchg
arpl
lahf
xor
mov
insb
mov
stos
in
dec
cltd
mov
call
add
arpl
push
jo
andl
lcall
pop
add
ror
int
push
xchg
add
rorb
cli
xor
movsb
or
dec
fs
lods
add
dec
les
or
mov
aas
imul
jno
push
sub
push
clc
pop
push
sub
mov
or
push
inc
adc
in
mov
bound
dec
sbb
subb
pusha
cmp
cmp
or
outsb
insb
xor
mov
mov
pop
mov
xor
push
mov
dec
sub
adcb
test
mov
mov
xchg
mov
mov
loop
das
push
mov
xchg
dec
and
pop
mov
cltd
sbb
sahf
inc
jle
pop
enter
adc
insb
sub
push
sub
dec
jmp
sti
push
jle
dec
pushl
dec
mov
fists
nop
jmp
shl
leave
adc
cltd
mov
scas
xor
xchg
adc
loope
xor
popa
cmp
pop
xchg
add
leave
xchg
cmp
pop
add
push
popf
adc
mov
inc
xchg
push
mov
fistl
pop
dec
xchg
insl
popf
lock
lcall
mov
jecxz
jle
nop
int3
xor
mov
mov
inc
dec
dec
jnp
icebp
cmp
and
imul
inc
lret
or
sub
or
iret
inc
dec
clc
ret
jge
xchg
dec
mov
outsb
add
aam
je
xor
repz
stos
inc
xor
stos
fwait
outsb
or
test
dec
clc
ret
jae
outsl
push
adc
stc
xchg
or
repz
aaa
xchg
pusha
sarl
js
rcrb
xchg
lea
shrl
mov
cmp
mov
or
or
es
cmpsl
mov
movsl
mov
mov
aaa
pop
mov
inc
int3
sbb
iret
lret
divl
jl
cld
add
subb
test
pop
pop
into
push
leave
and
loop
test
adc
clc
insl
mov
pop
addr16
jno
mov
enter
fimull
cmpl
adc
mov
inc
and
test
jle
divb
mov
mull
mov
jecxz
xorl
mov
int3
jbe
pushf
sbb
mov
sarl
mov
ds
mov
add
aaa
and
push
push
aad
jno
lds
jg
inc
inc
mov
pop
scas
adc
pushf
add
mov
or
mov
stos
pop
sub
cli
lods
pop
push
fs
outsb
leave
subb
in
mov
mov
jp
dec
scas
jecxz
mov
popw
insb
movsl
int3
mov
rolb
jae
push
popa
cltd
xchg
mov
sbb
inc
mov
jecxz
in
ret
fcomp
jmp
popa
les
push
scas
jp
cwtl
add
test
jns
repnz
repnz
push
xor
pop
mov
jb
lcall
push
jl
cmp
inc
scas
xchg
and
dec
test
mov
dec
mov
out
push
shrb
mov
shl
in
sti
cs
mov
lea
stos
cmc
fistl
mov
or
sar
stos
xor
push
xor
addl
cmp
sub
sbb
test
xor
iret
sbb
in
mov
mov
pop
mov
and
lahf
inc
fldt
mov
cmp
cmp
pop
mov
aam
cli
mov
out
dec
push
sbb
ds
in
lret
in
mov
fnsave
push
mov
mov
pop
loopne
pop
xchg
fldz
insl
fdiv
mov
xlat
and
adc
xlat
fnsave
mov
cmp
in
xor
mov
xchg
cwtl
mov
cli
adc
push
sub
lret
inc
nop
cmp
mov
ret
fcompl
addr16
sbb
or
dec
popa
push
xchg
repnz
mov
push
mov
lret
mov
xor
and
push
rol
int
add
dec
aam
xchg
xchg
push
cmp
xchg
js
mov
scas
test
mov
ja
in
mov
push
push
jae
lret
cli
jb
into
cmp
ret
lcall
sbb
ret
cmpsw
mov
push
jmp
inc
jns
mov
iret
mov
stos
loopne
lcall
out
mov
fiaddl
rcrl
dec
fdivrl
push
jo
shr
int3
scas
sti
pop
fcmovne
insl
bound
movsl
popa
in
pop
fwait
ss
pop
hlt
loop
sbb
sarl
aam
cltd
frstor
adc
sub
dec
mov
jge
add
fs
gs
fs
je
push
cwtl
xchg
inc
cmc
pop
popf
out
bound
fcompl
fists
lret
mov
call
pop
xor
cmpsl
mov
inc
xchg
and
stc
out
das
sahf
push
dec
mov
orb
pusha
dec
mov
shlb
mov
jno
adc
add
or
sahf
cmp
inc
pop
push
cmp
fmull
and
out
add
and
mov
pop
into
fisubs
int
dec
sbb
push
and
xchg
push
adc
cmp
int
cld
mov
xor
les
push
cmp
jnp
hlt
iret
ret
pop
mov
mov
dec
ljmp
fld
sarl
fiadds
dec
popf
popf
jmp
imul
jg
cld
pop
sub
lret
shrb
jo
lahf
loopne
fisubs
js
cmc
int3
out
dec
insl
mov
notb
mov
inc
lahf
rcrl
rcl
pusha
fisttps
push
mov
and
and
xor
inc
stc
test
sbb
clc
jge
mov
adc
and
sbb
lcall
adc
ror
or
fiadds
xorl
add
inc
dec
lret
pop
or
movsb
pop
mov
mov
jmp
sub
jp
sub
cwtl
aas
fsts
pop
push
dec
cmp
and
mov
push
pusha
push
jo
clc
rcrl
adc
cmp
orl
mov
xor
mov
jae
add
and
push
pop
ja
and
scas
push
aam
push
je
push
inc
lcall
sahf
and
pop
mov
out
inc
sbb
push
adc
mov
clc
pop
repz
test
inc
cli
pop
xor
dec
or
out
outsl
pop
mov
xchg
cmp
cmpsl
not
jecxz
add
mov
insb
mov
lock
jo
cmp
sbb
frstor
das
sub
std
das
es
loop
and
loopne
popf
mov
sahf
popa
out
push
dec
add
shr
xor
cmp
adc
call
dec
ljmp
xchg
jns
sub
sbb
push
bound
fstpl
inc
in
xor
inc
and
push
dec
std
ret
pop
dec
push
sub
mov
test
adc
xor
icebp
ret
in
inc
loop
pop
inc
sub
xor
jle
stos
cmpsl
and
push
fisttpll
adc
cmp
cmp
pop
imul
inc
xchg
imul
add
mov
cmp
andl
or
inc
cmpsb
inc
adc
push
dec
divb
push
mov
jnp
sbb
or
adc
lock
popf
jmp
insl
jb
loope
jno
xor
mov
lods
pop
lock
and
aaa
popa
jl
or
movsl
cmp
xchg
jb
dec
icebp
push
test
or
andb
pop
fmuls
or
lret
test
mov
getsec
sub
pop
cmp
clc
hlt
in
movsb
fstl
int
mov
inc
sbb
popf
xchg
rcll
out
jg
call
jle
push
or
pop
cmp
pop
stos
lock
sbb
or
iret
int
lds
aaa
pushf
pushf
push
sbb
stos
pop
cmp
mov
xor
ljmp
fmuls
xor
inc
sti
test
inc
js
xor
adc
es
or
es
dec
enter
sbb
int3
add
insb
or
fildll
mov
pushf
arpl
repz
fistps
ret
arpl
inc
fwait
lret
dec
inc
pop
dec
test
sbb
arpl
pop
out
jl
je
out
add
jb
or
and
cwtl
je
lods
add
mov
dec
ljmp
cmp
mov
lea
hlt
xchg
mov
or
into
cmp
testl
cli
pop
or
dec
mov
mov
adc
and
fistpll
jge
fcmove
mov
push
bound
mov
dec
sub
sbb
jns
xchg
sbb
xor
jae
mov
out
push
sub
sbb
ret
scas
ret
and
jb
ja
mov
pop
inc
push
xor
xor
add
popa
jl
mov
xor
mov
test
roll
mov
inc
std
xor
repnz
jo
ljmp
sbb
push
xchg
cmp
lret
or
sti
rcpps
mov
fistl
lret
xchg
adc
pop
push
mov
clc
cmp
aam
mov
nop
fs
fdivs
ss
add
pop
and
mov
mov
pminsw
divb
add
stos
fs
stc
jmp
xchg
cwtl
test
pop
and
mov
insb
ja
sub
call
mov
xchg
ja
push
lcall
inc
outsl
jbe
push
cli
andl
sbb
mov
je
mov
aad
cmpb
mov
adc
and
xchg
sbb
jns
lcall
xchg
dec
lods
fsubrl
xstore-rng
jge
cld
mov
aad
mov
ss
and
pusha
adc
frstor
jno
out
pop
lret
mov
push
push
pop
ret
or
pop
mov
jno
xor
pop
add
mov
mov
and
jmp
cmp
cmp
xchg
cmp
xor
push
push
lret
dec
aas
iret
add
mov
icebp
test
lods
jge
and
adc
clc
push
mov
xchg
movsl
int3
pop
test
and
and
leave
or
or
sbb
jae
repz
lds
idivb
xor
pop
xor
pusha
cli
pushf
adc
cld
add
enter
push
fstl
aad
push
ret
shr
mov
scas
cmp
std
add
mov
sbb
mov
sub
cli
mov
leave
ret
or
addb
and
or
ljmp
insb
lahf
xor
pop
ljmp
xor
fldt
cld
cmp
popf
jbe
add
mov
iret
lahf
addb
and
out
sbb
lods
or
push
repz
rcl
es
bnd
and
or
push
fstpt
jnp
inc
mov
pop
rcrb
fiaddl
or
push
scas
iret
out
rolb
push
xor
jp
repnz
push
in
movsl
in
sub
imul
lods
jecxz
jle
sub
mov
pop
mov
pop
lds
ds
cltd
movsl
xchg
cltd
fistl
dec
jns
dec
pushf
adc
mov
sub
sbb
shrb
aam
rcrl
ds
cmc
cltd
sarb
xor
fdivrl
cmpl
jmp
ds
sbb
decb
pop
fs
aad
test
pusha
rcrl
test
pop
cmp
stos
cmp
loopne
movsl
mov
imul
jle
repz
push
mov
cmp
mov
jp
xor
push
dec
pop
ljmp
ds
in
push
xor
cs
sub
sbb
mov
fldcw
scas
inc
fcoml
sub
fcomps
and
jle
cmpsb
fmull
mov
xor
pop
in
push
repz
or
je
xor
cmp
cmp
repz
sbb
sbb
mov
sub
adc
insb
xor
cmp
mov
orl
adc
repnz
sti
in
stos
cmp
aaa
sub
dec
lret
pop
dec
clc
mov
lret
daa
jne
fldt
cmp
push
xchg
jns
mov
dec
movsb
leave
cltd
fcmovnbe
ret
pop
cmc
cmp
popa
and
inc
pop
jno
popf
mov
mov
or
and
jbe
shrb
inc
inc
decb
ret
xorl
jecxz
je
gs
enter
scas
ficoml
mov
mov
xchg
inc
pop
jb
dec
in
add
fimull
fidivrl
xchg
sbb
loopne
cld
mov
cmp
xchg
dec
fs
sbb
test
or
out
pop
xor
ss
cmp
mov
ds
hlt
dec
ja
sub
mov
popa
xchg
hlt
in
xor
icebp
and
sbb
out
outsl
sbb
xchg
jge
and
or
movsb
or
test
mov
loope
or
in
rcr
adc
dec
pop
enter
adc
mov
cs
mov
cmpsb
pop
cmpsl
add
shr
in
xchg
lahf
loopne
inc
fwait
or
pop
sub
repz
cld
daa
lahf
mov
daa
push
push
jmp
loopne
cmp
js
stc
pop
jg
mov
inc
in
dec
sub
and
clc
sahf
mov
cld
pop
fistpl
test
shlb
inc
mov
cmp
lahf
dec
sbb
or
ret
shlb
sub
xchg
mov
sub
insb
rcll
push
cld
and
push
xchg
cmp
out
jbe
adc
push
cltd
mov
in
xor
mov
dec
or
inc
mov
fnstcw
sub
xor
ja
xchg
mov
je
loop
cs
nop
ss
dec
pushf
test
std
jp
and
dec
xor
pop
shll
addb
pushw
dec
mov
mov
popf
add
test
loop
pop
mov
cld
decl
std
mov
push
xchg
cmp
mov
lcall
push
std
data16
in
insb
add
subb
xchg
and
mov
and
cmp
shl
pop
push
sbb
mov
push
scas
test
cli
lret
add
loop
and
xor
ljmp
jns
xlat
sbb
out
cs
cmp
repz
push
in
dec
xor
test
leave
mov
jno
imul
cmp
or
scas
mov
outsb
or
xor
pop
mov
pusha
or
inc
mov
adc
bound
jl
cmp
adc
adc
jo
adc
jo
dec
fists
jbe
add
pop
mov
adc
mov
insb
push
push
repnz
pop
out
movsb
in
or
test
lret
jmp
loop
mov
fcmovne
mov
mov
je
sub
xchg
out
mov
cmp
mov
mov
add
je
mov
mov
adc
mov
pop
add
std
mov
jge
cltd
lods
arpl
dec
xor
and
mov
push
movsb
in
or
ret
or
bound
mov
je
mov
mov
subl
imul
daa
jae
insb
pop
gs
xchg
dec
mov
xchg
xor
bound
push
jns
xchg
xor
mov
jns
sub
cmp
js
mov
rcrl
lret
inc
mov
mov
les
sub
jnp
insb
add
int
adc
inc
mov
adc
out
cmpsb
stos
loopne
sub
inc
and
jp
jp
pushf
sbb
sub
jl
sub
jg,pn
or
mov
mov
cmp
fdivrs
std
and
sbb
test
scas
pop
int
inc
repnz
jmp
cmp
aam
data16
js
cmp
jecxz
adc
pushf
xchg
push
sub
push
jge
movsl
cmpsl
std
push
cwtl
jge
imul
push
fwait
jp
out
cld
int3
fs
pop
dec
dec
sub
and
enter
push
outsb
or
jmp
mov
movsb
and
pop
in
xchg
popf
lahf
call
or
pop
fisttpll
or
cld
push
cmp
push
cmp
je
jecxz
into
scas
mov
pop
pushf
jae
jbe
cmp
mov
pop
enter
out
and
arpl
cmpb
and
test
jecxz
das
jle
test
js
inc
call
inc
sbb
or
flds
arpl
xchg
cld
popa
push
xor
and
jb
push
aas
cs
scas
call
fistps
inc
decl
xchg
andb
pushf
xchg
mov
adc
pop
repnz
int
sbb
sbb
fwait
bound
cs
and
pop
stos
cmovns
dec
test
push
xchg
inc
in
out
inc
gs
popf
mov
cltd
sub
push
cmp
divl
dec
and
pop
push
mov
xlat
pop
xor
dec
and
sbb
sub
outsl
pushf
out
arpl
or
cltd
or
dec
adc
std
push
fs
adc
call
sbb
push
xchg
pop
inc
imull
sub
pusha
sub
cwtl
ret
push
cmc
das
xchg
cltd
mov
out
jg
jae
js
xor
lret
and
mov
cmp
stos
cmp
pushf
push
xchg
es
leave
lcall
test
adc
mov
pop
lods
push
push
sbb
imul
add
sub
sbb
test
sbb
sub
les
ss
jp
sub
lods
loopne
aad
cmpsl
cmp
into
outsl
and
daa
or
xchg
add
inc
bound
add
jecxz
pushl
cs
mov
call
sub
cmp
ds
push
push
test
pusha
mov
jmp
ret
cli
pop
loope
mov
fisubrs
lds
shlb
dec
pop
out
out
xchg
lret
mov
jmp
stc
ljmp
mov
mov
loopne
mov
pop
aad
out
popf
xchg
mov
daa
add
push
xor
mov
fmul
jno
mov
test
shlb
push
cld
out
add
push
inc
mov
and
movsl
xchg
fsub
movsb
aam
aad
orl
stos
xlat
inc
mov
mov
ss
push
push
xlat
insb
jns
lahf
xor
jo
push
xor
iret
jg
xor
pop
mov
imull
adc
or
outsl
jae
arpl
jg
es
pop
outsb
repnz
push
movsb
fmul
pop
out
cmp
movsb
push
pop
sub
out
adc
xor
bound
mov
aas
push
mov
cmp
cmp
out
test
add
gs
sbb
mov
dec
shl
push
out
test
push
jmp
pop
outsl
dec
das
dec
dec
shr
xor
dec
jge
cmc
adc
pop
inc
dec
icebp
jns
pop
ds
in
sub
lock
cmp
sub
std
or
stos
xor
jge
adc
pop
pop
mov
or
lods
rolb
pop
hlt
jle
inc
rclb
lret
push
cltd
mov
mov
sub
push
pushl
mov
push
cmpsb
aad
jno
push
mov
and
mov
dec
or
adc
cmc
push
out
lods
pop
inc
jae
lret
push
aas
pop
mov
movsl
mov
scas
ret
sbb
pop
inc
cmpsb
insb
push
push
mov
push
cmp
add
cmp
hlt
jle
aad
in
xchg
xchg
jecxz
pop
inc
push
std
test
inc
lds
ja
push
loop
xchg
popa
inc
lea
push
out
lock
or
push
arpl
jne
aad
jnp
cli
mov
xchg
push
push
mov
cmp
arpl
xchg
sbb
push
or
sbb
icebp
jne
dec
pop
adc
jno
stc
data16
pop
in
into
iret
jns
inc
xchg
mov
cmp
iret
fs
inc
adc
clc
sub
in
sbb
nop
cli
cmp
push
sbb
add
lahf
inc
xlat
hlt
xorl
mov
dec
push
repnz
cmpsl
ret
sahf
out
cwtl
ret
call
pusha
xchg
cmp
and
lret
mov
fs
mov
jg
push
xor
push
sbb
iret
or
and
cmp
mov
daa
push
fdivrl
pop
cmc
daa
in
sbb
lods
or
test
or
dec
mov
aam
mov
fiadds
adc
add
and
xor
cmp
divb
daa
cltd
sub
mov
sub
mov
adc
test
pushf
shr
sub
mov
xchg
xchg
ss
cld
jno
loop
imul
orb
push
and
dec
dec
push
stc
cmp
mov
fstpt
movsb
push
movsb
mov
mov
sub
adc
mov
sti
pop
aaa
add
xchg
and
fisttps
les
stos
nop
cld
mul
mov
in
ret
fwait
mov
lahf
cmp
jbe
lods
shll
xor
cmp
and
int
mov
ja
mov
xor
pop
lock
mov
popf
mov
push
xlat
mov
xchg
jb
repz
and
push
mov
mov
stos
cmpsl
mov
add
mov
outsb
mov
xchg
addr16
pop
pop
rcrb
pop
cmc
lds
mov
mov
incb
imul
mov
inc
fs
and
cld
sti
cld
xchg
data16
stos
xor
into
xor
fs
lea
daa
push
jb
mov
rcrl
dec
xchg
fidivrs
aaa
in
adc
pop
fdivr
mov
fisubl
aaa
xchg
sti
cwtl
push
fs
test
xchg
and
mov
pop
fisttpl
test
loope
gs
sbb
pop
pop
xchg
cs
xor
pop
arpl
and
jb
dec
fwait
push
push
movsl
inc
das
mov
subl
sbb
sbb
push
add
xchg
fwait
push
js
mov
inc
jp
incb
xchg
flds
lods
addb
mov
sbb
jnp
mov
or
mov
jo
imul
fwait
pop
or
aam
mov
sbb
xchg
inc
pop
sub
xor
js
sti
jp
mov
push
xlat
push
cwtl
fsubrs
cmp
das
nop
decl
or
push
mov
and
ret
xchg
jb
sti
inc
sub
fisttpll
in
mov
sbb
out
and
iret
scas
popf
orb
jne
and
inc
add
fsubl
xor
push
add
inc
das
xchg
sbb
ret
in
mov
std
shlb
je
jecxz
mov
les
sub
or
into
popf
aas
pusha
xor
inc
add
mov
subl
mov
insb
or
enter
pop
jnp
cld
rorb
pop
aad
test
arpl
ror
cltd
iret
icebp
xor
pop
scas
mov
popf
icebp
mov
fldt
sub
negl
push
inc
push
mov
out
push
je
or
arpl
jl
xchg
and
pushl
pop
das
out
xor
ss
push
lcall
inc
push
push
out
nop
mov
jg
pop
jo
loop
push
inc
xchg
mov
pop
fidivs
hlt
repnz
add
dec
les
mov
adc
mov
mov
jmp
xor
add
adc
pop
mov
add
dec
push
cmc
cltd
and
inc
andb
outsl
push
sub
sbb
je
or
movsb
mov
test
push
xlat
push
push
pop
out
inc
jge
mov
mov
or
mov
add
sub
pushf
enter
mov
rolb
aaa
enter
leave
jle
pop
in
mov
lods
les
shlb
lcall
insb
loope
xor
and
scas
mov
and
mov
mov
pop
loope
cmpsl
lcall
jae
inc
xor
sub
out
cmp
lahf
push
in
in
jo
jbe
mov
push
dec
in
out
pop
mov
fldenv
loop
cmp
notl
lds
movl
inc
fwait
sbb
lahf
js
xlat
push
cmpb
mov
push
inc
pusha
adc
xchg
dec
lds
jno
jno
push
arpl
inc
and
mov
insb
pop
and
jmp
filds
andb
push
sub
lods
rcrb
popf
daa
shrl
fdivrp
pushfw
ljmp
lcall
push
ja
fs
dec
and
cld
repz
divl
dec
in
adc
out
mov
inc
pusha
ss
push
andb
test
and
sub
and
popa
pop
sbbl
pop
fiadds
out
push
je
pop
imul
lret
adc
push
sti
sbb
push
shlb
bound
out
lods
mov
mov
push
jecxz
sub
push
xchg
xor
jb
ljmp
mov
fdivrl
mov
int
or
sarl
ljmp
mov
or
or
imul
cmp
rorb
add
movhps
test
xchg
roll
shll
stc
call
aaa
add
ret
fbld
aam
fadds
out
jmp
call
xor
cmpsb
lcall
shl
mov
sub
inc
stos
in
push
lret
adcb
sbb
shlb
add
sbb
mov
pop
xchg
mov
fwait
pop
xchg
das
loope
xor
push
sbb
adc
loope
xchg
pop
lods
movsl
mov
testl
cmpsl
add
das
adc
rcll
pop
movsl
outsb
arpl
in
iret
pop
dec
inc
test
push
je
xor
in
push
mov
xchg
popl
frstor
gs
aas
dec
sbb
pushf
or
fdivrs
and
movsb
jmpw
add
sbb
fistpll
dec
aam
sbb
outsb
lret
fwait
popa
leave
dec
inc
out
pop
cmp
dec
sbb
std
cld
sbb
mov
xchg
test
push
sub
testb
xchg
sbb
loope
je
xlat
push
clc
outsl
mov
and
es
pop
fisubrl
jmp
clc
mov
out
fwait
enter
scas
inc
cmp
fdiv
mov
add
arpl
push
inc
add
cmp
xchg
jg
push
mov
push
cltd
test
add
inc
jns
adc
int3
nop
xchg
in
popf
xchg
ss
bndstx
ljmp
in
scas
xor
mov
pop
cmpsl
outsb
sbb
mov
pavgb
cmpb
mov
push
imul
mov
sbb
lret
fadds
push
pop
clc
pop
out
jp
sbb
xorl
lds
mov
jnp
test
push
shl
sub
cmp
mov
sahf
jmp
loope
cmc
aaa
flds
repnz
pushf
add
fsubp
rol
mov
jge
lds
xor
fs
fs
aaa
inc
xor
jmp
jbe
jo
xchg
jne
clc
cwtl
pop
into
fadd
inc
xlat
lods
ret
cmpsb
cmp
out
and
mov
movsl
ds
xchg
les
xchg
stc
add
adc
dec
jmp
mov
push
bound
add
out
jecxz
and
les
cmp
fs
ljmp
ficomps
push
jecxz
sub
das
cmp
xor
mov
pop
dec
aad
mov
dec
sbb
add
mov
and
sub
popa
cmp
subb
pop
cmp
pop
mov
ret
fs
call
push
sbbb
aam
push
jmp
scas
pop
pop
setl
fcmovb
js
dec
jecxz
push
pop
scas
rorb
pushf
xor
test
sub
sub
lahf
xor
test
mov
sub
pop
test
jg
lret
xlat
in
inc
jp
fcmovnbe
jmp
mov
es
or
mov
or
leave
stc
push
scas
addl
insl
movsb
ds
mov
jl
lret
cld
das
sti
test
pop
test
push
call
jns
and
jae
cmpsb
stc
test
data16
scas
xor
sub
inc
aas
jmp
in
repz
scas
adc
cmp
push
inc
inc
sbb
add
xchg
xor
and
adc
pusha
outsb
repnz
and
xchg
in
mov
outsb
add
test
cld
in
idiv
pop
mov
cmp
andl
rolb
fdiv
ds
push
insb
daa
bound
dec
mov
mov
or
xchg
xorb
cld
ds
sub
lock
das
inc
mov
dec
pop
push
jne
pop
fs
jle
add
mov
jmp
adc
xlat
cmp
mov
in
jbe
dec
outsb
in
int3
dec
shll
inc
and
cli
test
ljmp
dec
fcoms
es
cmpb
push
arpl
dec
mov
and
fwait
mov
fcomps
push
sub
out
std
or
stc
aaa
test
lea
icebp
jg
roll
inc
cmc
stc
mov
cmpsl
xor
add
jns
shr
pop
mov
sub
or
mov
push
loopne
adc
sbb
mov
clc
xchg
push
cmp
jo
xchg
ljmp
dec
call
or
lods
add
lcall
mov
sbb
test
gs
mov
cwtl
jecxz
and
mov
mov
pop
or
jmp
fbld
gs
dec
lods
loope
int3
loopne
stos
daa
sbb
push
jno
pushf
loopne
ljmp
ja
mov
ja
aam
aam
and
jge
dec
pop
xor
and
scas
push
or
pop
mov
pop
icebp
imul
adc
jmp
ss
clc
cmpsl
mov
test
stc
pop
jbe
leave
add
adc
jb
orb
mov
cmp
lods
test
in
aaa
sub
pop
fsts
mov
jle
xchg
loopne
inc
push
push
xchg
and
dec
inc
in
mov
outsb
mov
inc
jbe
dec
ret
mov
test
fcom
cmp
xorl
in
push
ret
sbb
insl
lods
xchg
out
adc
and
cs
sbb
out
cltd
cmp
sarl
push
es
in
sub
lcall
jo
adc
and
ficoml
ss
hlt
inc
xchg
pushf
scas
xor
sar
push
test
test
pop
mov
mov
lahf
xlat
cmpsb
xchg
cwtl
mov
inc
and
lods
pop
jp
shlb
std
mov
mov
iret
sti
mov
rcr
and
sbbb
xchg
enter
adc
sbb
lds
sub
icebp
push
xchg
push
les
outsl
xchg
adc
xchg
lcall
les
dec
bound
call
jp
enter
insl
out
mov
out
outsb
out
cs
push
push
mov
xchg
jns
inc
fs
loop
xlat
stos
outsb
cli
push
shll
push
push
pop
lret
jge
cmp
inc
dec
ficompl
sub
sub
mov
jmp
outsb
mov
ss
daa
fldenv
movsb
ret
mov
aas
cmc
imul
aad
or
mov
scas
dec
jge
dec
jbe
jp
push
iret
mov
test
js
mov
ja
lock
cmp
repnz
out
xor
fcmovnu
lods
mov
jno
outsl
mov
sub
ret
lods
jecxz
stos
rol
leave
sub
scas
fbld
in
jl
sbb
lock
std
stc
mov
pushf
jle
fsubl
test
or
mov
adc
pop
fldcw
dec
fwait
sbb
dec
and
push
push
fbstp
stos
daa
lcall
fdivs
ja,pn
add
jecxz
xor
inc
negb
cmp
pop
fwait
mov
das
mov
xchg
cwtl
rcr
sub
cmp
outsl
imul
ret
push
xchg
jecxz
aam
ljmp
pop
dec
inc
popf
cwtl
inc
test
pop
sbb
shll
imul
gs
mov
jmp
stc
divl
or
jne
add
adc
lock
push
bound
jns
and
movsb
xchg
aad
jb
pop
mov
inc
arpl
push
cmc
pop
and
out
dec
jbe
xorl
andb
adc
adc
xchg
std
xor
pop
cmp
jno
dec
insb
inc
fcoms
adc
fmull
xchg
out
dec
sub
sbb
movl
jno
adc
fdivl
dec
jae
pop
clc
xchg
aas
ret
loope
adc
adc
movsb
aam
dec
sti
test
scas
sti
add
mov
or
jp
and
popf
jle
out
les
lods
leave
loope
and
es
adc
jno
push
stc
xchg
push
xor
cmp
in
cmc
mov
sub
cmpsb
xchg
les
push
adc
les
jle
push
inc
cmp
shr
push
jmp
insl
lcall
lret
scas
dec
push
jle
and
std
mov
movsl
or
mov
push
mov
aas
cmp
cmp
pop
cmp
pushf
and
cmp
fmuls
iret
out
sub
mov
pop
cmpsb
cmp
std
daa
test
pusha
jp
xor
jns
mov
inc
mov
pop
sar
dec
scas
xchg
fiaddl
pop
stos
sbb
addr16
fisubs
jbe
inc
fisttpl
lods
dec
mov
jns
add
stos
add
imul
inc
popf
push
cltd
jl
in
push
aas
sub
cwtl
xor
dec
push
mov
fnsave
adc
call
fldcw
pushf
inc
mov
loop
adc
sti
scas
mov
ds
daa
xor
mov
sbb
imul
aaa
xchg
paddusw
rorb
fidivs
cmpsl
rcrl
sbb
or
icebp
sahf
add
xchg
nop
jmp
inc
jge
movsb
dec
push
lods
mov
shll
sub
rcll
and
cmc
cmpsl
dec
jae
sub
arpl
push
xor
fs
add
out
mov
pop
cli
push
cwtl
push
es
fst
das
and
pop
pop
inc
lret
je
jp
pop
cld
jl
fadds
fbld
nop
scas
sti
xchg
push
add
mov
movsb
add
arpl
lds
outsb
xor
mov
outsb
out
pop
sahf
stos
stos
imulb
push
in
iret
das
dec
popf
inc
mov
jb
lret
ret
sbb
xor
pop
fnstcw
pop
xor
data16
mov
ss
adc
mov
aas
out
lret
rcll
cmp
mov
test
gs
xchg
call
inc
fists
js
out
push
call
subb
cmp
inc
ds
inc
xchg
nop
pop
fwait
add
and
cmp
ljmp
pushf
mov
mov
and
mov
mov
movl
repz
push
pop
add
lods
mov
mov
mov
sbb
jge
push
pop
sub
xchg
imul
rorb
fbld
scas
loope
dec
inc
shll
mov
inc
or
imull
sub
pop
ja
xchg
sbbl
mov
test
ja
push
bound
rep
push
mov
add
mov
sbb
add
adc
jns
mul
inc
jo
xorb
outsb
imul
push
fidivrs
mov
dec
insl
fbld
outsl
ror
andb
test
jne
sub
mov
dec
xlat
out
sub
push
xchg
popa
pop
or
add
out
call
or
scas
ljmp
clc
into
repz
out
xlat
dec
sub
pop
nop
inc
add
mov
and
repnz
and
das
ds
sti
jl
shrb
arpl
and
push
adc
xchg
and
sbbb
jae
jp
sbb
or
rcrw
fcos
or
loope
push
nop
dec
dec
cmp
xor
divl
dec
adc
sub
or
push
and
push
iret
xchg
les
or
fadds
lcall
je
popa
out
jmp
iret
jb
pop
mov
and
shlb
scas
dec
movsl
inc
stc
mov
shlb
add
jle
pop
into
xchg
jmp
push
movsl
cmp
push
js
aas
sarb
jbe
pop
mov
dec
pop
mov
xchg
shrb
ljmp
shrb
sbb
jns
adc
sub
adc
inc
imulb
jo
std
in
rcrb
loopne
fs
push
xor
adc
js
and
test
repz
or
inc
out
ja
sub
mov
pop
insb
push
icebp
into
sbb
adc
test
add
into
pusha
sbb
out
shlb
push
mov
cmpsl
imull
and
imul
sbb
mov
dec
pop
xorb
mov
add
jne
add
xchg
mov
ror
mov
sbb
pop
ret
and
inc
jnp
les
insb
cltd
data16
rorl
bound
inc
outsl
dec
into
iret
sub
push
ret
mov
insl
xchg
sub
inc
push
sbb
cltd
ds
lock
dec
leave
cmp
inc
mulb
xlat
mov
xor
mov
fisubs
cmp
add
or
gs
and
xor
cmc
adc
mov
sahf
test
add
xor
dec
mov
ss
jns
pop
repnz
in
xor
idiv
push
pop
sub
jae
adc
sub
scas
cmp
mov
mov
sub
int3
mov
xchg
movsb
sbb
fmuls
pop
jne
dec
bound
and
aas
iret
adc
cli
sbb
les
and
dec
orl
inc
lret
pop
cmp
xchg
in
out
fs
movsl
xor
shrl
imul
lea
mov
repnz
fwait
mov
int
push
in
clc
mov
ret
push
push
cltd
mov
pop
xor
mov
fisubs
mov
inc
fsubrl
popf
repnz
aaa
mov
push
sbbb
push
das
xchg
mov
sbb
out
shr
pop
std
dec
daa
jae
push
inc
pop
mov
into
inc
sub
aas
mov
scas
ss
ret
xchg
xchg
and
fdivrl
pop
adc
repnz
adc
out
mov
bound
mov
std
rcrl
stos
test
sub
push
mov
pop
mov
push
out
push
dec
cld
popa
pop
and
mov
or
push
inc
stos
sbb
ds
pop
testb
lods
cs
pop
mov
rcll
cwtl
xor
jns
ret
push
inc
inc
pop
popf
lock
lahf
xor
push
xor
aam
xchg
push
cld
add
mov
sub
sub
loope
cli
sbb
or
push
addl
les
inc
mov
loop
dec
jns
mov
inc
lea
sub
cmp
test
push
sbb
jno
cltd
es
xor
pop
inc
sbb
pop
adc
or
inc
lret
xor
ljmp
mov
jno
xor
ljmp
dec
es
xchg
lods
dec
adcl
mov
fbstp
leave
lods
adc
andb
add
mov
push
xor
imul
push
jecxz
sbb
lods
sub
rcr
pop
addr16
or
call
or
fnsave
xor
ja
mov
hlt
pop
into
push
cwtl
inc
std
shlb
mov
sti
add
xchg
xchg
and
jo
dec
mov
scas
lods
xor
push
scas
adc
cmp
scas
sar
inc
fcoms
and
shll
insl
cmpsb
mov
sbb
jle
xchg
cmp
out
mov
xor
rdmsr
out
and
adcb
fwait
mov
loopne
dec
and
mov
iret
rcrb
xlat
lods
fs
fbstp
xchg
mov
repz
out
jl
cli
add
decb
pop
adc
addr16
jg
imul
int3
cmc
mov
mov
stos
imul
popf
pop
enter
orl
jno
mov
lds
loope
out
pop
ds
xor
scas
xchg
aaa
idivl
cwtl
mov
push
gs
dec
sbb
gs
mov
pop
pop
adc
faddl
stos
lret
pop
push
lea
sbb
scas
sti
aas
test
push
fwait
in
mov
stc
push
scas
mov
movsb
push
sbb
xor
cmp
insb
add
data16
mov
popa
stos
cmp
int3
nop
sahf
clc
push
push
hlt
cmp
mov
mov
test
dec
leave
mov
push
gs
lea
adc
jle
push
mov
outsl
imul
push
out
push
cmp
and
xor
lret
loope
or
shlb
inc
or
out
ds
fcmovnu
xchg
out
push
inc
pop
xor
inc
push
test
int
mov
out
pop
push
add
or
faddl
xchg
jle
movsb
xchg
addr16
test
add
pop
imul
mov
and
loop
test
inc
lret
nop
in
jnp
or
mov
movsl
adc
dec
mov
clc
cmp
arpl
pop
aad
add
daa
jnp
mov
inc
fdivl
js
cmc
sbb
scas
dec
and
cld
mov
inc
mov
ds
cmc
dec
lds
sbb
ljmp
shr
test
ret
movsl
out
xor
cmpsb
inc
push
inc
fidivrs
movsb
mov
movsb
mov
sub
pop
test
add
repz
xchg
js
cmpsb
rclb
ret
push
movsl
inc
insl
stos
or
rorl
cmp
inc
pop
test
dec
and
mov
pop
jg
sbbl
push
sub
inc
mov
adcl
adc
xchg
inc
cmp
add
inc
pushf
and
shrl
sti
jmp
mov
jge
in
mov
ljmp
pop
imul
movsl
mov
cmp
or
aas
test
add
jb
mov
mov
pusha
fbstp
cli
add
cmpsb
out
call
in
xor
jle
or
xor
dec
mov
insl
push
inc
mov
mov
add
jnp
adc
jo
and
outsl
jne
ficomps
aaa
cmc
sub
cmpsl
xchg
in
pop
sbb
inc
movsl
xchg
mov
pop
push
cmp
mov
iret
push
push
enter
mov
sub
push
mov
into
xor
stc
lock
out
es
daa
repnz
add
daa
inc
mov
mov
jne
out
mov
sbb
push
push
fisttpl
ja
ja
mov
pusha
sbb
mov
mov
scas
rclb
sub
mov
push
xchg
add
and
xor
testl
cmpb
enter
movsb
mov
ljmp
xchg
fcoml
jge
mov
xchg
push
rclb
int3
fldl
add
xchg
in
dec
jne
mov
into
idiv
out
and
jecxz
or
push
sub
jecxz,pn
andl
popf
rolb
repnz
shll
or
shll
sub
xchg
fnsave
cld
jo
jno
rcll
mov
mov
fwait
push
fsubrl
sub
push
loopne
test
sti
daa
inc
fs
xchg
sbb
mov
push
push
outsb
loopne
iret
and
dec
lods
loopne
mov
mov
push
arpl
in
shrl
and
cltd
xor
adc
into
xchg
sbb
je
mov
lret
add
lds
shlb
cmp
xor
mov
icebp
ja
jae
jno
fwait
es
pop
hlt
shl
add
fsts
pop
pushf
mov
loop
push
xchg
shll
or
and
lea
inc
sbb
mov
js
mov
and
xor
mov
ret
mov
pop
pusha
sbb
arpl
or
or
dec
mov
add
and
or
push
das
sbb
out
mov
outsb
test
test
mov
lret
inc
push
je
hlt
int
mov
cld
movsb
jb
ret
pop
xchg
push
pop
shrb
adc
sbb
mov
xchg
pop
sub
loopne
rcrb
fwait
aad
cld
jns
push
scas
insb
lret
inc
sbb
mov
sti
mov
js
add
fcmove
jg
adc
psubusw
fs
cmp
lods
cmp
inc
shl
addr16
stc
call
xchg
inc
shlb
or
les
adc
movsb
add
xor
xor
dec
sbb
mov
mov
push
dec
pop
jg
scas
stc
enter
and
pop
inc
leave
mov
cmp
pop
repnz
dec
xchg
cmp
jo
in
lock
sbbl
push
dec
sbb
nop
pop
addl
inc
mov
test
fsts
or
pop
scas
jl
sbbb
cltd
jbe
movsb
and
sbb
ja
int3
pop
adcb
jnp
rcrl
mov
or
cmp
shr
pop
fldl
cmp
add
adc
das
xlat
dec
pop
fsubr
insb
pusha
cmpb
mov
pop
fcomps
mov
cwtl
adc
mov
inc
jecxz
add
repnz
mov
in
or
orb
mov
gs
aas
pop
ja
enter
ja
icebp
call
jge
cmpsl
mov
fnstsw
mov
pop
js
rolb
and
xchg
xchg
xchg
mov
les
add
into
adcb
loop
ret
arpl
lock
push
add
sub
jne
cmp
or
ljmp
and
lea
mov
dec
roll
aaa
inc
aaa
in
add
ss
mov
adcl
push
and
sahf
push
mov
loopne
mov
in
lods
adc
mov
or
int
repz
in
adc
mov
or
sbb
xchg
cmp
pusha
or
push
pusha
or
jecxz
adc
fiaddl
dec
lea
mov
inc
in
xor
fs
xchg
bnd
dec
jle
push
xchg
cmp
addr16
xchg
fmuls
xorb
push
ljmp
daa
pop
je
sbb
add
icebp
and
inc
push
orb
inc
ja
inc
mov
and
mov
aad
lret
mov
jno
and
ret
imul
sub
test
mov
xlat
cmp
in
sbb
popa
cwtl
testb
movsb
mov
mov
les
pop
pop
fdivs
cmp
add
push
insb
pop
arpl
iret
scas
xchg
push
jns
pop
xchg
mov
adc
jae
ljmp
movsb
inc
arpl
cltd
pushf
mov
add
xor
dec
int
insl
test
loope
or
mov
addr16
pop
enter
movsl
mov
mov
inc
adc
push
mov
push
enter
movsl
push
in
ret
pop
cmp
outsb
pop
cmp
sahf
out
shlb
nop
cmp
js
jp
push
push
icebp
in
mov
stos
adc
fs
in
pusha
fidivl
sbb
loop
lcall
dec
std
leave
inc
mov
enter
popf
movsl
lea
add
outsb
sarb
ljmp
lock
inc
jge
jae
jns
rorl
mov
shl
push
adc
icebp
jge
mov
fidivrl
mov
sahf
inc
in
clc
sarl
in
mov
sbb
bound
stos
cmp
adc
jae
cwtl
loopne
push
push
cmp
inc
out
shr
ret
sti
pop
inc
sbb
xchg
adc
xor
leave
and
ret
in
clc
popw
clc
pop
clc
mov
and
dec
mov
stos
adc
xchg
inc
and
ret
jp
ficomps
in
les
insl
xlat
pop
rcr
sub
fldt
popf
iret
sbb
js
fbstp
jl
push
adcb
movsb
lcall
sub
sbb
lock
xchg
ljmp
mov
xor
or
sbb
jae
add
addr16
cmc
ror
int3
hlt
cli
and
stos
repz
push
stc
jnp
aad
enter
sbbb
pop
sahf
in
cltd
shrb
xor
add
sub
lock
push
cltd
mov
push
int3
out
dec
test
xchg
call
cmp
pop
fldenv
cmp
std
jmp
hlt
xchg
or
shl
mov
jecxz
push
mov
les
jle
jne
pop
or
pop
mov
rcrl
aad
jecxz
mov
cmp
lock
push
cmp
mov
sti
fstp
jae
adc
pop
xorl
fstpt
inc
mov
pusha
ror
sti
jmp
cmp
xchg
pop
bound
cmp
push
scas
add
cmp
mov
rolb
aaa
icebp
fwait
pop
cs
sub
mov
lods
inc
or
jle
push
push
mov
xchg
sahf
mov
jmp
movl
fidivrs
push
test
rcr
dec
fstpl
push
mov
mov
push
xchg
push
jae
sub
inc
inc
push
pushf
icebp
push
xchg
in
mov
div
movsl
mov
ss
imul
ficoml
adc
mov
dec
test
add
aaa
or
xor
mov
add
jno
pmaddwd
mov
xchg
adc
pop
mov
mov
out
inc
enter
inc
ja
fsubr
lods
sarb
mov
outsb
cwtl
sbb
and
enter
push
in
push
js
sahf
fs
xor
inc
cmpb
inc
mov
add
sbb
out
and
cli
je
je
movsl
dec
mov
dec
push
mov
sbb
movsb
sub
inc
in
push
loop
lds
bnd
sbb
outsl
jnp
lea
pop
int3
fdivs
aas
lods
aas
dec
lock
sbb
scas
repnz
mov
psraw
std
shr
aad
jge
pop
pop
arpl
push
test
or
shr
sub
add
jb
ret
imul
and
cmp
bts
mov
pop
mov
xchg
decl
incb
or
inc
lock
mov
add
popf
adc
es
cwtl
hlt
ret
sahf
mov
mov
sti
push
subb
cmpsl
hlt
sub
adc
ds
xchg
scas
test
lods
icebp
scas
cmp
cmc
adc
push
jne
inc
or
xchg
push
fsubr
loop
push
inc
push
pusha
rcrl
inc
aaa
or
adc
xchg
adc
jo
sahf
xorl
dec
dec
and
movsl
xchg
pushf
xor
push
mov
or
mov
shrl
insl
rcll
or
cmp
les
test
adc
xor
push
js
adc
mov
loope
int3
jbe
xchg
inc
sarb
push
sbb
js
mov
inc
rclb
and
push
in
and
jae
out
cmp
push
jo
cmp
xor
jo
daa
mov
mov
daa
int
out
sahf
lods
and
cs
movsb
push
dec
push
push
pop
mov
nop
inc
jge
test
pop
ficoml
inc
in
inc
out
ds
cmp
stos
sub
push
in
loopne
rcrb
dec
and
mov
js
hlt
lods
aaa
out
stos
adc
sbbb
push
adc
mov
in
mov
dec
fs
inc
in
xlat
inc
add
adc
loopne
add
lahf
xor
sbb
sub
xchg
rclb
dec
mov
push
xchg
push
inc
enter
iret
cs
das
std
ret
xchg
add
sub
rcrb
or
jns
mov
test
adc
jmp
cwtl
sarb
out
pusha
stc
imul
sub
inc
jno
cmp
lock
mov
inc
or
aam
adc
sub
fs
cmp
mov
xor
sbb
jbe
jb
daa
lods
aam
jmp
xchg
iret
popa
aaa
push
and
outsl
mov
mov
repnz
aas
cmpb
imul
popf
xor
addr16
xor
fisttpl
gs
jmp
in
shrb
out
sub
rolb
stc
xor
sbb
xor
cwtl
add
inc
add
cltd
je
aaa
jne
or
aaa
push
xchg
adc
in
cli
aad
xor
lahf
ljmp
aaa
aas
jne
xor
repz
push
lds
imul
jmp
in
pusha
xor
push
es
pusha
fidivrl
scas
pop
cmp
pop
adc
sub
cmp
je
mov
dec
mov
jmp
inc
mov
daa
sub
cmp
cmp
bnd
movsl
jbe
test
ret
repnz
inc
fildll
pop
mov
xchg
inc
adc
stos
shl
cmp
lret
jae
mov
or
jno
adc
mov
adc
mov
sahf
fisubl
xchg
cld
push
popa
out
push
inc
sbb
inc
rorb
adc
xor
pop
bswap
pop
dec
out
lods
test
adc
pop
daa
ds
cltd
sub
jno
push
leave
out
sahf
std
xor
ret
mov
push
xchg
jno
sub
jb
fwait
movsl
lds
jb
pop
mov
jmp
cli
push
repz
sbb
bound
test
addr16
movsb
les
ds
pop
ja
std
lret
fwait
mov
iret
jo
clc
daa
xor
adc
cmp
in
iret
fisubs
add
lahf
stc
nop
dec
sub
cmp
rcll
xchg
sbb
pop
and
jo
push
into
outsl
aad
or
jp
cmp
jne
xchg
ja
and
add
rcrb
pop
pop
adc
push
divb
dec
jle
lret
sub
push
loop
mov
stos
lods
ss
adc
ficompl
cmp
loope
inc
xor
mov
pop
mov
iret
xorb
dec
in
sbb
xor
inc
mov
or
or
mov
adc
mov
and
mov
les
nop
scas
rolb
inc
mov
movsl
loopne
int3
xlat
dec
cmpsl
mov
jmp
inc
jo
rolb
cmc
and
jmp
sub
int
inc
sub
sub
ret
or
push
and
vcmpsd
lock
and
sub
fimull
nop
lock
inc
mov
push
pop
and
lds
sub
fistpl
mov
ja
or
sbb
cmpsl
dec
and
sub
es
loop
cmc
jmp
lods
mov
sub
push
and
loope
sbb
mov
jo
cmpsl
cmp
inc
jle
cmc
pop
inc
lret
jo
push
add
xchg
inc
xor
pop
imul
sub
shll
out
pop
mov
mov
ds
iret
pop
mov
mov
inc
pop
cmp
cwtl
inc
mov
shrl
insb
jno
addr16
mov
std
jnp
mov
inc
mov
add
push
stos
testb
sub
stc
cltd
stc
dec
mov
popf
dec
add
aad
cli
jbe
sbb
call
push
or
or
ss
and
mov
push
subl
pop
lods
pop
mov
and
popf
jnp
dec
and
xlat
shll
cmp
mov
pop
cmp
imul
dec
test
sub
ror
dec
loop
sub
push
mov
test
aas
shr
insl
icebp
in
in
jne
pop
or
mov
sbb
data16
test
idivl
mov
arpl
outsl
dec
mull
out
pop
out
mov
xchg
or
ljmp
ljmp
xchg
lahf
mov
pop
mov
loopne
mov
lcall
pop
adc
mov
insb
aam
pop
mov
imul
push
lret
inc
cli
es
out
jae
fidivrs
add
lock
mov
orb
push
pushf
out
push
add
jp
xor
mov
fbstp
and
cmpsl
push
inc
dec
dec
fmull
scas
mov
imul
mov
xchg
cmp
pop
insb
mov
fcomp
aad
pushf
jge
mov
dec
mov
xlat
add
mov
mov
div
fisubs
cmp
lds
mov
jg
bound
cwtl
inc
inc
fistl
cs
outsb
mov
pushl
push
pop
dec
loop
pop
cmp
fcomps
xchg
jo
loop
movsb
test
mov
pop
ja
in
cmpsl
sbb
mov
xchg
mov
and
test
push
lods
int
pop
pusha
es
cmp
pusha
mov
ja
test
sbb
mov
scas
dec
dec
call
adc
fbstp
insl
cmp
jp
mov
xor
adc
fsubr
faddl
jmp
or
test
jae
int3
into
inc
mov
sbb
mov
imul
test
mov
data16
lods
fistps
pop
and
mov
fisubl
aad
inc
sub
dec
fldl
addr16
popf
outsl
or
sbb
mov
lock
or
pop
lea
sti
dec
sbb
arpl
push
mov
jns
insb
bound
lcall
push
push
jp
mov
inc
andl
aas
dec
popa
mov
cmp
xchg
outsb
dec
sbb
ficomps
fsubr
pop
mov
push
add
and
out
lea
pop
testb
mov
frstor
pop
daa
lcall
mov
clc
fmuls
mov
pop
and
jmp
icebp
or
rcll
add
jbe
cmp
and
outsb
or
gs
hlt
mov
popf
add
mov
jg
mov
mov
or
push
jecxz
rclb
jge
sbb
arpl
je
jns
inc
sbb
push
imul
and
rcll
sub
enter
clc
add
mov
cli
aas
dec
jmp
fidivrs
push
inc
inc
mov
stc
sub
dec
pop
inc
lock
int
and
clc
lret
aad
add
cli
push
jle
icebp
mov
movsb
mov
or
and
pushf
aad
pop
fdivs
mov
add
push
fmuls
outsl
or
mov
lods
mov
je
daa
push
jle
mov
in
adc
xlat
jbe
mov
sub
add
mov
cmp
incb
xchg
fisttpl
test
cmp
jnp
call
mov
lcall
sahf
into
adc
out
mov
and
js
test
subb
pop
repnz
je
divl
cld
lods
outsl
mov
jp
ret
sahf
add
fcompl
leave
xchg
inc
aas
lods
pushl
and
ljmp
cmp
xchg
sbb
xchg
sub
and
jnp
cmp
adc
nop
inc
decb
mov
jmp
andb
jno
jb
je
push
or
js
out
adc
adc
xlat
pusha
cmpsb
and
xlat
fnsave
fwait
mov
clc
mov
sub
test
in
sub
cmpsl
pop
mov
arpl
in
shlb
inc
cld
addb
mov
mov
cmp
aaa
hlt
cwtl
xor
pop
scas
jae
jb
or
outsl
pop
icebp
mov
mov
jl
testb
sub
aam
xor
out
dec
je
stos
repz
cmp
popa
stos
mov
out
mov
scas
jb
inc
div
sbb
std
push
cwtl
cld
push
sahf
lock
cmp
lds
jecxz
mov
and
pop
stc
sbb
sub
cmc
out
adc
inc
mov
add
push
add
push
nop
movsl
mov
xor
sahf
in
daa
cmp
dec
lcall
daa
sub
je
inc
loop
adc
les
jns
fs
dec
xor
test
fistl
or
call
lahf
int3
add
shl
mov
daa
ficomps
add
inc
add
xor
ret
lret
push
fldenv
imul
out
mov
xlat
xor
cltd
adc
outsl
imulb
cmpsl
xor
ljmp
out
sbb
push
sbb
popa
cmp
lret
pop
sub
dec
sbbb
cmpsl
dec
jmp
inc
mov
jecxz
sub
out
xchg
fs
rcrl
dec
dec
jmp
aad
orb
cli
jle
xchg
sub
icebp
fmul
mov
or
pop
fdivrl
push
sbb
out
sub
int3
jno
jp
js
lret
push
pop
push
mov
decb
mov
inc
inc
jg
jl
cld
mov
pop
loope
xlat
or
pop
stos
and
adc
jge
js
data16
mov
sbb
pop
mov
stc
sub
pop
dec
push
push
lods
dec
test
adc
outsl
mov
jo
mov
and
fwait
jl
sbb
cmp
sbb
dec
insb
out
push
outsb
icebp
mov
push
into
fists
adc
push
aaa
js
ja
outsl
pop
mov
xchg
fbld
roll
pop
insl
repnz
aaa
lahf
cld
lret
ljmp
insl
cmp
shll
push
mov
cvtpi2ps
mov
hlt
ds
mov
movsl
les
push
test
jp
fldl
enter
pop
loope
out
lcall
cltd
repz
ds
int
pop
loope
mov
jns
or
cmc
fimull
xlat
push
lods
push
pop
sub
jne
and
stos
dec
push
hlt
insb
mov
add
shrl
adc
insl
dec
mov
fmul
mov
hlt
pusha
jmp
cmc
ret
and
inc
pushf
sub
pop
and
cld
jmp
lret
mov
cltd
int
push
mov
lea
vpsllq
ret
sbb
push
mov
sbb
dec
inc
cmp
call
aam
lcall
mov
mov
outsb
aas
stos
dec
mov
movsl
mov
into
lock
push
mov
pop
iret
iret
push
ljmp
cs
adc
lock
inc
push
aam
in
shl
inc
mov
ret
inc
and
dec
dec
imul
push
call
push
jo
adc
aaa
pop
add
sub
jp
adc
addl
lret
or
mov
mov
nop
xchg
jmp
sub
daa
inc
ja
out
sbb
push
dec
addr16
xchg
push
cmc
push
out
repz
or
mov
cltd
lods
loope
xchg
xor
sbb
mov
inc
sbb
xor
fwait
xchg
dec
test
es
loope
jl
push
ret
sbb
mov
lret
mov
cmp
mov
jecxz
in
and
call
ss
data16
in
es
push
leave
add
xchg
movsb
pop
sahf
out
dec
test
ret
adc
es
out
mov
cli
or
add
mov
sub
mov
xchg
bound
ror
arpl
aas
cli
in
add
pusha
add
mov
pop
mov
jae
mov
lds
pop
mov
mov
call
jp
loopne
aam
icebp
cmp
inc
add
cmp
lea
ss
shl
pop
jb
cmp
xchg
jns
push
xchg
adc
jb
leave
add
dec
jb
es
in
sub
rcrl
orb
and
push
adc
out
add
cmpsl
or
mov
lds
jae
int3
mov
outsb
inc
pusha
cld
and
sub
xchg
mov
inc
incb
or
bound
xchg
iret
sahf
fnsave
mov
rorb
mov
jecxz
add
adc
pushf
sbb
and
mov
mov
sbb
dec
into
cwtl
loop
sti
xlat
xchg
inc
clc
lods
popa
sbb
jge
sub
rorb
xlat
lret
jecxz
xlat
xchg
xor
push
in
loopne
jl
mov
inc
push
dec
movsl
sahf
enter
xchg
or
gs
enter
mov
outsl
mov
fs
or
or
fdivrl
jge
jb
push
sub
insl
data16
push
test
mov
imul
xor
cmp
rolb
inc
inc
push
mov
push
enter
out
add
cmpsb
xchg
add
push
test
out
lods
fnstsw
pop
setl
sbb
clc
jo
inc
xchg
aaa
hlt
cmpl
xchg
fbld
cmp
jle
cmp
arpl
jnp
mov
adc
je
cltd
lock
test
jo
xchg
cmpsb
mov
clc
xchg
mov
ret
cmp
jne
xchg
mov
in
ja
sub
xchg
add
sub
bound
pop
arpl
iret
sahf
jecxz
outsl
incl
or
out
add
pop
mov
daa
jg
outsb
in
add
and
pop
dec
sbb
push
pop
and
mov
xor
mov
xchg
lret
inc
ret
cmpsb
popa
repz
inc
mov
mov
xchg
push
cmp
in
cmp
orb
and
mov
inc
mov
push
aad
lods
ret
pop
test
cs
pop
into
push
aad
mov
inc
or
xchg
dec
adc
inc
cmp
repnz
xor
jne
fcompl
push
into
and
je
mov
bound
push
movsb
into
movsb
jmp
dec
out
notb
in
sub
mov
enter
aad
repz
ss
xchg
jmp
loopne
xchg
adc
dec
mov
add
aad
addr16
cmp
mov
jb
dec
mov
je
push
push
cli
rcl
push
scas
movsl
stos
mov
repz
push
or
sub
test
int
dec
aaa
push
ljmp
out
and
xchg
mov
xlat
js
lock
ret
imul
hlt
jecxz
jg
inc
sti
rorl
xor
mov
ret
add
xchg
pop
push
push
fildll
ljmp
pop
pop
xlat
jne
and
je
hlt
fnstenv
xchg
call
add
js
push
pop
xchg
jbe
in
sbb
lret
or
ss
or
lret
push
inc
cmp
sbb
inc
inc
cmc
and
inc
pop
push
and
inc
jae
aaa
loope
inc
lahf
ss
inc
mov
pop
lcall
adc
add
pop
lret
insl
mov
aad
ud2
xor
lret
jp
push
subb
loope
loope
push
iret
iret
adc
inc
bnd
jg
jmp
inc
loopne
mov
pop
cmp
mov
xchg
jnp,pn
fsubrs
cmp
js
cmp
cmc
cmp
and
test
mov
xchg
cmp
rcrl
jl
add
mov
mov
mov
push
inc
and
pop
pop
mov
xor
dec
xor
stc
mov
pop
xchg
add
xchg
test
push
jns
popa
cmp
jae
test
daa
inc
push
outsl
adc
es
sbb
pusha
aam
inc
jbe
xor
in
mov
xor
sub
xchg
outsb
adc
aas
pusha
push
mov
aam
fmuls
push
adc
cmp
dec
mov
mov
xor
je
cmpsb
nop
loopne
sahf
jns
imul
xor
movsb
adc
xor
xchg
adc
xchg
insb
push
or
ror
or
xchg
inc
ds
add
push
mov
test
mov
int3
add
mov
sbb
cs
data16
push
test
adc
out
fdivl
and
icebp
mov
ret
xor
bound
push
add
cmp
fldl
and
sbbb
ret
sahf
push
sbb
mov
insl
mov
mov
fisubrs
lcall
mov
mov
ds
sbb
push
shll
cli
std
insl
mov
pop
xchg
jne
xor
cld
pop
mov
inc
pop
dec
mov
in
push
lea
and
push
cmpsb
daa
cmp
into
xchg
cmp
dec
mov
jnp
repz
jnp
jmp
iret
push
filds
imul
add
outsb
dec
pop
adc
push
pop
adc
cwtl
mov
xchg
insb
in
mov
sbbl
test
xchg
mov
out
aaa
mov
push
lret
dec
incb
mov
roll
imul
push
pop
sbb
dec
addr16
dec
sub
fistps
aam
stos
jge
pop
push
leave
push
in
aaa
out
hlt
sbb
cs
and
add
enter
adcl
inc
fld
inc
cwtl
dec
or
xchg
cld
scas
cld
jmp
mov
popa
mov
add
push
cmovs
sub
ret
leave
inc
adc
jp
lea
cld
sbb
sbb
test
mov
mov
push
stc
js
nop
sub
push
sub
mov
js
cmp
loop
cwtl
jae
or
jnp
jle
outsb
jnp
push
push
inc
mov
sbb
jnp,pt
shrb
mov
adc
xchg
dec
jmp
pop
xchg
movsb
cli
push
notb
stos
fs
xchg
sarb
push
push
xchg
movsl
add
je
outsb
int
jns,pn
out
mov
ljmp
pop
inc
cmp
mov
jl
sub
fcompl
int
shlb
pushf
sbb
dec
movsb
ficomps
ljmp
movsl
lods
daa
aad
add
push
aaa
xor
pusha
scas
sbbb
scas
xor
xor
call
adc
push
jae
fistps
jp,pn
in
pop
stos
repz
mov
cmpsb
int3
movsl
imul
pop
push
shlb
mov
and
adc
mov
cmpsb
push
lahf
push
out
fstpt
or
cmp
push
mov
js
scas
mov
xlat
cs
mov
lret
xchg
jmp
in
in
movsb
call
shll
jge
jl
fcoms
shrb
test
pop
adc
or
xor
jmp
push
out
popa
pop
rcrb
rclb
ljmp
mov
jnp
scas
sahf
jmp
jo
and
sbb
outsb
lret
mov
ljmp
push
cmp
out
data16
xchg
add
call
fs
mov
or
lods
mov
mov
sub
icebp
orb
je
pusha
mov
es
mov
idivb
xor
mov
stos
fldcw
pushf
jb
push
mov
cmpsb
mov
ja
add
es
pusha
shr
cwtl
rcl
mov
fstps
dec
pop
fldenv
data16
ja
movsl
in
jnp
cmp
imul
lahf
les
xchg
daa
or
xor
dec
dec
mov
xchg
cwtl
data16
stos
cmp
lds
xlat
movsb
testb
xor
jl
ret
sub
lahf
pop
jle
cmp
sub
pop
xorb
or
adc
xor
addr16
lock
insb
fistpll
sbb
cmp
je
jecxz
push
loop
lret
mov
xor
xchg
cmp
movsl
pop
cltd
fsubrs
int
arpl
xchg
dec
sub
push
jg
mov
ret
popa
push
jbe
sub
cmp
repz
aad
push
aas
in
sahf
fmul
mov
nop
jl
nop
inc
lea
cli
push
push
xchg
cmp
mov
pop
dec
push
arpl
addr16
cmp
cmpsb
js
fidivs
or
sbb
and
das
sbb
mov
fdivrp
mov
mov
adc
cmp
sahf
and
jl
loopne
cmp
xlat
loop
add
icebp
xlat
mov
and
xor
sub
push
bound
xor
rcll
repz
pusha
jge
arpl
add
push
mov
xor
fsubrl
sbbb
jl
inc
fildll
cmp
jbe
scas
imul
ficoms
or
or
fwait
jg
sti
ja
mov
lods
in
stc
add
pop
lcall
jge
fcompl
mov
push
mov
loopne
stc
data16
movsl
xor
fwait
out
pop
loope
push
jg
jns
cwtl
dec
inc
and
in
push
loope
outsb
sub
mov
jle
pop
xor
xchg
lret
test
and
push
popa
bound
xchg
jne
arpl
push
add
divb
add
adcl
pop
cwtl
enter
adc
mov
push
bound
adc
or
loope
pop
ret
dec
mov
gs
lahf
push
lret
fld
xor
sub
inc
subl
inc
sbb
lds
lock
nop
inc
mov
addr16
push
and
dec
sbb
mov
outsl
arpl
insb
loopne
xor
sbbb
mov
das
xchg
outsl
dec
dec
inc
fadds
and
or
je
xchg
push
lods
dec
jecxz
and
hlt
jno
cwtl
insl
test
out
lret
inc
jbe
ss
ficoms
sub
mov
stos
loopne
sbb
pop
shr
push
out
mov
push
cmp
fdivl
jns
mov
inc
xchg
mov
push
enter
xor
and
jle
arpl
dec
sbb
pop
jle
jns
adc
test
roll
sbb
mov
pusha
fs
lock
jl
movsb
mov
lods
shrb
jnp
xchg
mov
jns
xor
inc
mov
add
xchg
xchg
or
sub
popa
pop
sub
inc
ror
movsb
sbb
in
cmp
loope
and
cltd
fisttpl
pop
loope
mov
adc
and
arpl
sti
mov
pushf
popa
out
push
enter
jns
pop
lods
addl
in
outsb
imul
jg
inc
sbb
shl
mov
jbe
inc
sbb
shll
sahf
pop
push
cs
lea
je
scas
xchg
loope
call
in
xor
add
cltd
sahf
push
icebp
jg
xor
pushf
xchg
sub
jne
mov
xchg
dec
scas
mov
add
lods
out
mov
gs
ds
xor
inc
addb
repnz
inc
rorl
sbb
enter
xor
xchg
mov
cmpsl
mov
mov
push
jg
pop
mulb
nop
imul
cld
sub
adc
and
lods
cltd
popf
dec
add
adc
mov
imul
sub
jns
xorb
aam
jbe
cmpsl
inc
int3
lahf
cwtl
pop
fwait
mov
jl
std
cmp
fwait
xor
push
scas
stos
xor
xchg
cld
adc
add
mov
sub
jge
scas
mov
mov
negl
out
sbb
int3
cmp
scas
xlat
lret
mov
inc
sbb
aaa
push
fiadds
int
jb
adc
ret
add
lahf
xchg
arpl
gs
jecxz
jge
dec
xor
into
sar
bound
cmp
aaa
std
test
repnz
push
or
divb
lods
ret
mov
jle
outsb
cmp
in
dec
and
add
cmp
jp
jns
or
mov
inc
inc
test
or
shl
faddl
les
cmp
icebp
push
mov
jne
cli
loope
and
cld
or
in
xchg
in
fists
xor
lock
add
sti
push
dec
sarl
push
mov
adc
push
in
or
sub
aaa
and
mov
push
push
fsub
pop
scas
push
fisttpl
push
mov
adc
sub
fidivl
bound
sbb
enter
or
add
loope
lret
fs
imul
sbb
jbe
jb
push
fs
out
jp
lahf
sarb
push
pop
mov
sbb
inc
dec
in
fidivrl
cmp
sahf
mov
inc
std
enter
pop
mov
cmp
sub
mov
or
icebp
mov
loopne
sbb
stos
sbb
mov
sbb
jmp
or
pop
mulb
push
mov
xchg
jmp
ja
xor
pop
xchg
cmp
or
jecxz
xor
cmpsb
test
mov
aas
mov
in
sbb
sbb
daa
xor
test
leave
xor
push
xlat
or
or
mov
xchg
or
pop
mov
mov
jge
mov
das
jno
jb
ret
push
add
sbb
jne
xchg
xchg
stos
testl
fwait
sbb
mov
fdivl
icebp
andl
sub
adc
jbe
aad
fldl
add
mov
fsubs
inc
xchg
and
jmp
xor
push
or
shl
lods
movsb
jmp
rcrb
xor
sbb
mov
push
sbb
mov
jmp
out
or
aas
and
jg
jae
filds
cmc
dec
fdivrp
push
cld
pop
or
test
lock
call
mov
inc
xor
das
cmpl
or
cli
adc
aaa
fcmovnbe
nop
inc
cmpsb
aad
fs
cmpl
push
jo
cmp
sub
sbb
inc
pop
mov
scas
scas
adc
mov
test
jmp
dec
xchg
jne
mov
sti
xor
lret
lds
mov
jp
nop
stos
sbb
test
outsb
pushf
aas
jg
out
dec
js
out
add
es
xor
xchg
data16
cli
push
fistps
les
push
push
in
pop
aas
xchg
out
inc
sbb
sub
hlt
mov
jnp
jp
out
mov
dec
cmpsb
mov
mov
rorb
mov
xchg
xchg
xchg
arpl
imul
loopne
or
adc
xor
sbb
scas
pop
jno
in
mov
xor
into
sub
jp
in
outsb
enter
xchg
xchg
pusha
scas
lea
into
mov
test
jae
sbb
jo
push
and
dec
cmp
xor
add
xchg
pop
adc
fdivs
shll
pop
mov
ficoms
jb
ror
inc
int3
iret
xor
xchg
push
or
or
push
sahf
mov
xchg
or
stos
xor
or
xor
push
inc
mov
and
sbbl
mov
adc
dec
push
inc
lahf
js
loope
adcb
notb
aaa
ds
mov
cld
in
lret
jne
xchg
dec
mov
cmp
mov
mov
add
sbbb
shl
mov
xchg
mov
inc
insb
inc
out
addr16
mov
dec
test
aad
xor
addr16
in
shl
or
dec
out
es
adc
lea
jb
jle
push
mov
sbb
lds
cmp
cwtl
pop
std
jp
adc
inc
test
xlat
cmp
xchg
ret
int
xor
inc
outsl
das
in
inc
mov
rcll
xchg
inc
xor
xor
lahf
out
adc
lcall
es
mov
mov
out
cmp
insb
dec
out
push
jnp
cld
and
rcrl
push
inc
pop
fstpl
mov
mov
and
push
or
lcall
mov
andl
dec
push
xlat
test
or
shl
arpl
lret
in
inc
pop
xor
or
inc
dec
std
jae
rolb
jne
cmp
ljmp
mov
mov
js
andnps
jno
shrl
insb
lcall
lock
sbb
shll
mov
and
in
jl
sbb
xchg
stos
jmp
cmp
adc
cmp
push
mov
lahf
test
xchg
repz
push
test
pop
mov
adc
lcall
cmpsl
inc
dec
shlb
test
sbb
fwait
ror
scas
out
lret
imul
out
pushf
scas
jl
xchg
sbb
ret
shll
ds
xlat
mov
and
ret
imul
mov
stos
dec
dec
lds
nop
push
subb
jecxz
mov
repnz
addl
aas
xor
sub
mov
push
pop
test
jmp
sbb
inc
jp
cld
push
push
push
xchg
mov
sbbl
mov
sub
cmp
in
into
lret
inc
cs
push
int
andl
sbb
rclb
mov
jnp
or
cltd
scas
jecxz
mov
push
push
into
xor
cld
jno
popa
push
mov
jg
repnz
dec
sub
jae
jp
aaa
lahf
lret
sub
shl
lret
cmp
mov
adc
pop
lds
or
frstor
out
sub
insb
jge
sub
jmp
cmp
adc
loop
popa
shll
dec
jmp
movsb
push
pusha
inc
mov
and
hlt
or
xchg
bnd
adc
addr16
daa
popf
cmp
xorl
adc
xor
cmp
push
inc
mov
sbb
sub
jle
out
loope
dec
out
lcall
push
or
cltd
or
pop
push
aas
not
fimull
jns
cli
adcl
inc
add
aad
dec
popf
inc
repnz
fs
leave
aam
push
mov
sti
cmp
inc
movsb
rclb
mov
sbb
or
sbb
sbb
or
repnz
shr
push
fwait
inc
js
adc
in
mov
lret
adc
dec
cmpsl
aam
dec
jno
mov
scas
repnz
add
adc
cs
fnclex
mov
movsb
ret
and
repnz
jecxz
adc
xchg
push
pop
cmpsb
loopne
sub
out
dec
pop
fimull
xor
loopne
cmp
in
xor
sub
or
dec
ds
jl
lods
ret
push
cs
or
repnz
mov
lea
in
xchg
mov
mov
loopne
xchg
xchg
mov
iret
xlat
movsl
xor
sbb
scas
pop
out
push
mov
daa
mov
pop
mov
cmp
jecxz
inc
jge
inc
cmc
bound
scas
jns
xorb
add
ss
adc
pop
mov
jge
and
or
mov
jecxz
lds
lock
inc
xchg
and
test
sbb
dec
imull
mov
sub
adc
ljmp
mov
pop
scas
adc
aad
mov
jge
cmp
inc
addr16
jae
scas
push
enter
jnp
jle
xlat
and
out
out
pusha
xchg
aam
fmull
ret
cmovle
fstl
mov
xor
sbb
lahf
lea
loopne
lods
xor
pop
jecxz
xchg
cwtl
inc
movsw
cmp
xchg
hlt
add
lret
and
shl
test
pop
sahf
and
mov
loop
mov
mov
cmpsb
xchg
jl
aas
movsl
orb
ret
or
addr16
fsubs
mov
insl
and
mov
jb
pop
push
hlt
popf
lods
cmpsb
test
or
mov
aad
mov
mov
loop
jmp
lea
adc
xor
cmpsl
sub
ljmp
fcomps
ja
lahf
cmc
leave
ret
iret
cld
jg,pt
adc
ja
adc
mov
mov
ret
push
pop
cmp
jno
cmp
icebp
inc
xchg
sub
pop
mov
shl
mov
in
jle
mov
mov
adc
push
sbb
pop
pop
dec
dec
xchg
aas
dec
mov
cld
sub
lret
cwtl
mov
or
mov
adc
movsb
imul
test
ds
cli
jae
adc
adc
loope
inc
push
sub
sbb
mov
js
test
sbb
xchg
rolb
int3
int
xor
jmp
or
out
xchg
push
icebp
or
mov
aaa
push
sbb
jbe
adc
bound
sub
sar
mov
je
test
out
mov
adc
int
jle
cmpsl
outsb
out
cmpsl
inc
xchg
mov
pushf
mov
lea
clc
dec
das
in
xor
fwait
xchg
in
js
jmp
aam
pop
aam
sahf
rcrl
pop
and
and
push
out
je
jne
mov
push
push
in
mov
mov
jae
sbb
sub
cmove
jge
sbb
pop
mov
sahf
into
cwtl
ficomps
mov
pop
mov
mul
xchg
inc
jne
ss
cmp
hlt
jp
mov
push
push
jmp
mov
and
xchg
xor
xor
cmpsl
pop
dec
bound
cli
in
mov
adc
push
stos
inc
out
push
jo
sbb
mov
mov
notb
inc
je
loopne
add
pusha
dec
sbb
in
push
mov
sbb
and
fldl
mov
inc
out
mov
adc
push
leave
pop
sbb
repz
popa
call
jae
mov
push
mov
clc
xor
or
and
push
pop
test
adc
push
jge
rcrb
lahf
std
hlt
loope
dec
lock
xor
fidivrl
in
insl
xor
loopne
dec
lea
sub
pop
in
fnstenv
jecxz
popa
xchg
mov
or
fs
aad
cs
out
adc
inc
bound
out
sub
lds
xlat
dec
add
push
xor
es
aam
hlt
sub
fsts
sysexit
leave
inc
mov
jl
add
shlb
inc
or
clc
test
pushf
shr
rclb
sbbl
adc
cmp
cld
and
mov
adc
xor
mov
fwait
add
cwtl
mov
inc
je
lahf
and
imul
mov
mov
pop
pop
pop
mulb
sbb
test
cmp
fldl
dec
loop
aad
pop
int
and
push
scas
lock
mov
scas
mov
std
fisubs
mull
pop
mov
idiv
leave
or
xor
subb
lcall
and
or
fisttpl
out
imul
sub
lcall
sub
in
mov
popa
push
push
shlb
add
cmp
out
and
dec
cmpsb
nop
cmp
aam
test
xchg
mov
mov
adc
inc
popf
test
add
aaa
mov
adc
ds
add
push
fdivl
sub
cmc
enter
dec
test
std
dec
pop
mov
lods
adc
mov
xor
sub
and
dec
popf
in
pop
mov
js
inc
push
mov
dec
mov
ds
push
push
mov
sarl
and
rcrl
cltd
int3
ss
pop
andb
mov
cmp
adc
enter
xlat
adc
in
xchg
test
jnp
loope
jmp
mov
movsl
lea
ja
push
fcompl
dec
xchg
dec
fistps
flds
in
mov
in
xchg
test
and
hlt
inc
xor
cmp
xor
inc
adcb
fstpl
pop
jl
pop
or
adc
scas
call
mov
loope
test
sbb
sarb
jae
adcb
push
push
push
push
loop
aad
cwtl
cmp
pop
mov
push
mov
push
leave
cmp
dec
in
xor
dec
dec
ljmp
outsl
pop
ss
fmuls
fisttpll
std
fstpt
rcrl
xor
sub
push
mov
lcall
cmp
jmp
add
lock
xchg
push
pusha
jecxz
pop
or
add
jg
in
int3
push
ljmp
js
outsb
scas
jp
or
dec
insl
inc
xchg
xor
arpl
sub
sub
loopne
mov
call
mov
add
outsb
call
push
iret
inc
pop
pop
xor
xchg
rclb
in
adc
enter
xor
hlt
into
mov
fistpl
push
dec
pop
int3
shr
add
dec
xor
rorl
jbe
fidivl
xor
sub
sub
add
cmp
lock
repnz
or
fistl
lahf
loop
loopne
mov
dec
mov
mov
data16
dec
dec
add
jae
dec
or
das
dec
je
xchg
mov
enter
mov
mov
test
cmpsl
pushf
xchg
pop
or
loope
or
sub
dec
cwtl
fadd
mov
xchg
bnd
xor
mov
cmpxchg
mov
repz
add
idivl
fstps
push
xchg
lcall
add
inc
mov
orl
inc
push
jecxz
xor
mov
xchg
movsl
push
sti
leave
or
cmp
and
cmc
lds
push
inc
inc
xor
and
sbb
fdivl
ffreep
lret
jecxz
arpl
pop
shrb
dec
cmp
ds
mov
fnsave
mov
mov
jmp
fdivrs
ja
sbb
xor
iretw
xchg
jge
call
mov
mov
fiadds
cmp
add
jge
push
sub
es
rcrb
push
inc
push
jne
xor
cmp
fidivs
jb
jae
mov
leave
xchg
jae
movsb
cltd
cmpl
push
and
mov
das
and
xor
mov
dec
int
fildll
mov
rcll
fnstcw
mov
xor
shrl
divb
repnz
fadd
bound
sahf
dec
in
lret
pop
cmc
loop
jne
mov
mov
sbb
cmpl
fisubrs
or
adc
mov
sub
adc
bound
adc
inc
je
sub
mov
cltd
sti
jmp
out
and
xchg
pop
mov
pop
rorb
inc
clc
push
in
and
sub
dec
dec
xor
and
sbb
cmpsl
inc
jo
int3
mov
icebp
xorl
shrb
repz
stos
push
xchg
ffree
das
mov
leave
jg
pop
mov
mov
lcall
push
or
sbb
stos
dec
inc
jns
popf
xchg
cmp
dec
insb
xchg
and
icebp
lock
lods
mov
pop
stos
jle
sbb
and
or
in
pop
pusha
outsl
push
je
or
adc
pop
xchg
mov
into
inc
cltd
test
jae
les
gs
add
mov
out
add
mov
repnz
out
mov
inc
loopne
fcomi
push
pop
lcall
push
sub
xlat
repz
mov
hlt
addb
push
enter
scas
pop
xchg
dec
loope
mov
push
jbe
inc
lahf
xchg
in
loop
inc
push
pushf
adc
pop
pushf
dec
or
add
dec
or
fisubrl
xchg
iret
dec
xchg
fildll
jbe
lock
mov
xchg
pop
jg
pop
mov
loop
lret
adc
sub
cmp
decl
cmp
imul
and
pop
es
mov
sub
arpl
inc
outsb
adc
rcrb
mov
or
push
mov
daa
mov
mov
test
aas
adc
mov
sbb
fs
sbb
lret
clc
out
arpl
arpl
dec
shll
xchg
fcoml
sub
shl
cwtl
ja
sbb
adc
fdivrl
push
fs
test
imul
pusha
fldz
dec
dec
in
jle
add
adc
push
lock
sub
lods
push
jecxz
ret
cs
push
cli
mov
lock
mov
lock
andb
iret
dec
adc
mov
cmpsl
cmc
adc
pusha
fs
add
xor
fcompl
mov
cmp
push
dec
inc
dec
in
xor
mov
popf
jb
push
popf
adc
cs
jo
pushf
add
push
sbb
mov
or
fucomi
aam
das
pop
test
insb
push
lret
adc
mov
dec
icebp
shlb
mov
div
sbb
mov
aas
inc
jno
push
test
adc
and
popa
fcomp
adcl
xchg
ds
cmp
js
and
lds
lods
sub
pop
xlat
cli
mov
push
mov
ja
ret
pop
adc
shrb
add
pop
pop
iret
outsb
cmc
sbb
jle
sbb
aad
addr16
sbbl
fcoml
frstor
int
psubusw
loope
mov
adc
fsts
dec
jns
test
mov
test
negb
cmp
lcall
fisubl
fcoml
inc
mov
movsl
xor
fcoml
rcrb
fcmovbe
lods
and
push
mov
xor
insb
in
push
xor
aaa
push
or
mov
shlb
loope
push
mov
lahf
movsb
push
mov
xchg
enter
icebp
loop
addl
pusha
loop
add
mov
sbb
xlat
leave
sub
pop
dec
rolb
lea
pop
inc
xchg
mov
mov
scas
lds
mov
mov
cwtl
or
lock
insb
movsl
sti
push
imul
mov
imul
add
addb
pop
bswap
xchg
movsb
or
or
push
in
xchg
inc
push
push
jmp
jno
out
push
daa
mov
mov
and
jnp
rol
cld
daa
jbe
aad
mov
fs
mov
mov
aas
mov
insl
mov
and
and
sbb
mov
shll
dec
mov
push
cmpsb
pop
lods
sub
orb
insl
push
stos
fs
dec
int
in
or
fcoml
mov
test
aaa
icebp
xchg
leave
and
sbb
adc
pop
dec
sbb
mov
lods
adc
into
pop
fwait
jg
out
movsb
pop
lret
adc
xor
scas
mov
mov
sbb
inc
cli
stc
ss
mov
int3
dec
es
rclb
daa
and
cmc
xchg
add
mov
push
pop
add
mov
sahf
inc
fldenv
inc
jecxz
cmp
dec
mov
lods
les
repz
in
lcall
out
aad
jns
push
pop
jae
pop
jecxz
jne
bound
inc
inc
adc
out
pop
mov
stc
in
scas
les
and
out
les
jmp
cmc
aas
mov
mov
mov
jne
mov
data16
dec
repz
cmp
mov
data16
jne
jb
adc
mov
ror
or
loopne
inc
jo
ds
inc
sub
cwtl
ror
xor
push
inc
ja
pop
xor
lods
cmpb
mov
jmp
lahf
sahf
mov
xchg
ret
scas
pusha
xchg
loop
dec
hlt
std
mov
sbb
dec
push
mov
test
or
insb
adc
jno
shll
aaa
push
sub
xchg
sahf
mov
rcrb
or
scas
push
out
and
inc
mov
rol
lahf
cmp
js
out
stc
pop
dec
add
adc
jge
push
xchg
sub
push
fs
out
pop
loop
nop
sub
jns
xchg
push
repz
movsb
pop
jo
sti
push
push
icebp
pop
xchg
push
out
pop
stc
jge
inc
mov
sahf
sub
je
add
xchg
sbb
add
add
cmp
lret
stos
movsb
cmp
push
inc
push
xchg
hlt
push
testl
ret
fisttpl
das
cmp
pop
lahf
add
push
fsubrl
cmp
cld
xchg
push
push
fnstsw
addb
lret
or
insl
sti
pop
int3
inc
mov
lods
cmp
shll
mov
mov
jle
jg
mov
pop
clc
jo
pop
out
mov
dec
xor
lret
movsb
cs
pushf
dec
jo
pop
std
sub
outsl
pop
sahf
pop
ret
fisubrs
sbbl
pop
cmp
add
inc
mov
imul
jne
nop
in
lods
xchg
mov
jp
add
mov
imul
outsb
dec
inc
inc
add
jno
cwtl
sarb
xor
jbe
sbb
inc
ret
or
inc
notl
in
inc
mov
mov
xchg
test
lret
and
push
lea
loope
nop
jle
mov
xchg
mov
mov
mov
sub
call
sbb
gs
dec
jmp
or
das
xor
repz
mov
adc
mov
pushf
rcrb
xchg
jne
hlt
fs
test
orb
shl
aad
outsl
in
sti
cmp
xchg
mov
pop
repnz
xchg
incl
outsb
xor
test
xchg
sub
mov
mov
xchg
inc
cmc
jns
jb
sub
push
imul
xchg
mov
cmpsb
out
xlat
inc
pop
ja
popf
ret
mov
repz
add
and
mov
adc
cmp
sbb
jge
scas
jecxz
negl
xor
push
cmc
ja
aas
mov
fs
xor
pop
test
inc
jmp
inc
mov
movsb
fistpl
xchg
cwtl
mov
imul
jle
fldcw
sbb
es
mov
push
mov
xor
lods
xor
rcrl
mov
add
pop
ret
add
loopne
mov
push
out
test
sub
xor
ret
das
imul
jle
inc
push
jnp
xor
dec
sbb
out
cmp
cmpsl
jno
xchg
fwait
ds
int
pop
mov
inc
xchg
cmp
jecxz
clc
jmp
xor
ret
fisubrl
aaa
rclb
add
xchg
in
mov
not
sbbb
cmpsb
movsb
outsb
fadds
cwtl
andb
dec
aas
jge
dec
notb
mov
jnp
adc
shrb
mov
popf
in
jae
test
je
dec
bound
dec
mov
and
pop
insl
xor
mov
sbb
iret
sub
sbb
call
test
add
cld
pop
out
xchg
sbb
insb
repnz
cmpsb
fildl
inc
shll
repnz
lea
stos
mov
jo
pop
dec
push
inc
fstl
cmc
sub
je
pusha
leave
inc
orl
sub
stos
or
movsb
mov
arpl
push
rorb
xchg
jecxz
aad
push
fstpl
jae
mov
mov
ret
addr16
pop
inc
push
xchg
icebp
repz
mov
lea
or
rcll
pushf
pushf
mov
dec
xchg
aam
jge
push
xor
dec
loop
pop
scas
xchg
add
push
add
repz
jo
push
sbb
push
jle
outsb
in
sbb
into
mov
mov
ret
mov
push
pop
aad
cmp
aas
mov
popf
sbb
gs
repnz
mov
lret
jne
pop
scas
sub
out
fsts
push
fwait
push
and
mov
add
mov
xor
push
xchg
subb
ss
mov
xchg
and
out
lea
cmp
dec
lock
mov
stos
es
stos
push
nop
repnz
jl
mov
out
imul
cmp
cs
mov
add
pop
cltd
and
aad
xor
movsl
xor
scas
pop
mov
testb
cmpb
jmp
movsb
mov
dec
insl
mov
rcll
mov
jl
cmc
fcoms
dec
add
int3
mov
xchg
repnz
lahf
inc
mov
push
add
mov
sbb
cs
xchg
aaa
sbb
pusha
repz
lds
int3
rorl
mov
mov
mov
ret
adc
cmp
jl
fwait
repnz
mov
mov
xchg
and
hlt
and
add
mov
jns
mov
sarl
fucomi
popf
out
lods
mov
in
ds
cmp
jl
ljmp
add
xchg
cs
lret
add
iret
mov
cmp
xchg
das
sub
icebp
roll
popf
adcb
add
arpl
add
dec
in
ret
mov
push
jns
stc
dec
push
jae
fsubrl
or
je
enter
inc
xor
aas
addr16
lock
jmp
imul
test
popa
neg
inc
xchg
lea
pop
xor
xchg
cmp
imul
push
xor
hlt
adc
in
mov
inc
mov
pop
shll
cmp
mov
cmp
dec
jle
inc
adc
imul
loop
inc
jp
pop
es
test
inc
ja
xchg
nop
or
stos
cmpsb
lods
loopne
out
ljmp
lds
jne
sbbb
xchg
scas
lret
mov
push
jecxz
js
fmuls
pop
or
cmpsl
mulb
xor
std
push
cmp
mov
push
jne
add
push
and
ficoms
aaa
into
xor
and
and
xchg
add
cmp
pop
cmp
pop
xchg
pop
add
push
cmp
dec
pop
aad
testb
and
push
in
cld
mov
test
pop
insl
xor
fwait
inc
aas
aaa
jg
mov
jmp
imul
xlat
es
ret
adc
sub
cwtl
inc
dec
xor
xor
cwtl
sbb
inc
xorb
xchg
pushf
out
cmp
mov
push
call
cwtl
or
test
xchg
mov
sar
add
repnz
pop
cmpsl
xor
mov
pushf
lods
mov
jecxz
and
push
cmp
pushf
dec
adc
stc
jae
mov
shrl
arpl
lahf
xchg
insl
fsubl
cmc
orb
insb
mov
icebp
or
jecxz
push
xor
in
repz
hlt
mov
and
je
push
lcall
dec
hlt
push
xchg
mov
xchg
dec
jge
out
jl
jns
sti
dec
ret
iret
add
and
add
sub
int3
push
lret
pop
in
jne
cmp
out
mov
mov
jg
cltd
jl
pop
mov
xchg
mov
dec
jge
push
sbb
pop
das
data16
testb
cmpsb
or
mov
xor
into
push
imul
loopne
movsb
mov
pop
mov
push
cld
jnp
imul
negb
scas
add
ret
add
inc
dec
in
shll
call
outsb
xchg
sub
pop
xchg
and
sub
pop
mov
xlat
inc
pop
test
jecxz
pusha
sahf
jg
xor
loopne
sbb
mov
pop
mov
xorb
mov
int3
fwait
push
repnz
loop
lock
lock
sbb
rcr
test
cmp
into
cmpsl
dec
or
int3
inc
loopne
push
sbb
popa
shll
mov
lret
loope
push
faddl
insl
ss
pop
sbb
ret
enter
xor
vaddss
pop
mov
sbb
cwtl
scas
push
sub
xchg
inc
or
icebp
cmp
rorl
or
dec
mov
stc
stos
dec
insl
mov
mov
push
cmp
and
xchg
sbb
in
lret
mov
or
xchg
jecxz
add
fcoms
push
lods
fistpl
test
inc
std
adc
data16
cs
out
inc
mov
inc
push
std
test
add
fs
mov
sar
roll
cmpl
lgs
cmpsl
mov
add
jp
scas
pusha
in
xor
sbb
inc
mov
lods
stos
xchg
push
and
adc
adc
mov
iret
hlt
repnz
clc
out
mov
jecxz
lea
jg
sub
jl
push
fcomps
push
fidivrl
or
cmpsb
xor
push
xor
out
dec
inc
inc
shlb
imull
mov
sub
pop
lret
dec
push
outsb
adc
enter
js
sub
xchg
sbb
push
pushl
loop
push
sub
dec
ret
test
repz
jb
call
push
mov
dec
and
jb
mov
xchg
mov
push
dec
jmp
adc
dec
xor
jne
in
enter
lcall
adc
ja
fnstcw
test
mov
xchg
rolb
ret
into
push
sbb
dec
inc
push
xchg
mov
sub
iret
fsubs
pop
std
add
xor
push
popf
cmp
pop
fistpll
xchg
xchg
shr
ss
sbb
lret
xchg
stos
dec
clc
and
sbb
cmp
dec
dec
jl
push
stos
pop
pushf
mov
mov
jbe
cs
cmpsb
xchg
mov
cmp
pop
and
ja
call
jle
clc
mov
in
pop
neg
xor
jecxz
popa
mov
test
gs
mov
push
sub
mov
loope
adcb
stos
call
arpl
mov
mov
lahf
mov
and
popa
das
stc
ljmp
add
push
xchg
in
insl
das
or
push
lret
inc
inc
aaa
sarl
aam
push
or
mov
add
imul
stc
mov
dec
adcl
ror
or
mov
jnp
sti
push
sub
cmpsb
mov
sarb
push
lock
xchg
mov
lea
add
mov
mov
jl
lret
std
cltd
xor
or
cli
pop
test
mov
sbb
or
cmpsl
push
dec
mov
call
ja
xchg
mov
sub
lcall
les
stos
ret
rclb
sti
push
add
dec
out
out
and
push
pusha
mov
out
push
jmp
ret
pop
loopne
addb
mov
push
sub
jae
push
jecxz
js
xor
test
stc
xchg
and
jmp
push
pop
aad
or
fcmovnb
sub
inc
js
jae
call
enter
cs
pop
outsl
and
cmp
mov
sbb
in
ja
fdivrs
push
or
and
stos
dec
aas
movsl
loope
out
cwtl
pop
out
xlat
push
or
rsqrtps
in
pop
or
xchg
sbb
or
das
bound
xor
ljmp
pop
scas
test
scas
mov
stc
into
js
and
lea
mov
mov
mov
cmpsb
dec
ret
cmpb
fisttpll
int
sbb
push
out
dec
jno
lds
jp
loop
cs
lea
push
fldt
jg
test
sub
movsl
pop
in
and
add
aas
bound
mov
add
jno
outsb
add
mov
hlt
sbb
inc
push
sti
cmpsb
aad
call
in
cld
jle
xorl
ficoml
jno
dec
lods
into
in
popf
mov
cmp
push
in
jl
imul
push
insl
or
jle
nop
xchg
shl
fbstp
mov
mov
mov
out
sarb
dec
js
shrl
pop
mov
lods
jp
arpl
ljmp
lods
xchg
addb
push
fbstp
popa
cmp
bound
push
push
fxch
aas
xor
jbe
fwait
cltd
cmp
jg
inc
out
mov
outsl
and
popa
sbb
into
adc
jl
inc
test
xchg
scas
stos
and
in
adc
jg
or
mov
inc
xor
dec
in
rolb
pop
call
sti
imul
push
ljmp
fisttpl
stos
and
mov
std
lock
pusha
popa
stos
mov
les
nop
call
imul
push
dec
push
rol
adcb
mov
aaa
pop
or
adc
cltd
pop
and
push
loopne
pop
cs
xchg
ja
daa
in
pop
xchg
push
adc
int
inc
cmpsl
mov
ds
insl
pop
mov
jecxz
sub
mov
inc
mov
les
adc
fisttps
idiv
dec
dec
xor
cld
cwtl
rcrl
and
leave
in
jbe
notl
dec
fisubrs
xlat
jnp
adc
stos
imul
stc
in
inc
cmp
lret
adc
xchg
xor
sbb
call
sbb
fwait
adcb
cmp
sbb
or
adc
fsubrp
pop
nop
push
lcall
test
or
fs
xor
sub
movb
imul
hlt
cwtl
inc
or
add
adc
and
mov
pusha
adc
jle
fwait
xchg
std
arpl
mov
mov
push
pop
cmp
cmp
das
shrl
daa
mov
push
mov
daa
add
outsl
jae
sbb
lcall
fsubrs
pop
out
xchg
jecxz
fnsave
pop
mov
push
push
aad
push
xchg
out
or
cltd
mov
jbe
imul
aam
in
or
push
dec
out
sbb
idiv
xor
sbb
dec
inc
cmp
or
repnz
pop
out
std
or
incb
jnp
pop
mov
add
and
test
mov
push
xchg
adc
ja
lret
movnti
fwait
mov
and
dec
jp
mov
test
adc
addr16
push
popa
enter
test
push
xor
cmp
sbb
mov
cmp
adcb
repz
out
sarb
inc
shlb
pop
push
jecxz
ja
pop
aas
nop
jmp
inc
adc
dec
jo
icebp
imul
push
cmpl
orl
push
mov
lret
testl
cmpsb
pop
xchg
and
adc
mov
js
inc
inc
mov
jne
mov
pushf
sub
sbbl
movsb
data16
inc
adc
xor
cmp
xor
mov
out
jbe
xchg
out
lret
mov
test
stc
pop
add
mov
mov
jno
addb
adc
sbb
jmp
daa
out
ficoms
jecxz
jns
sub
adc
pop
adc
int
lret
pop
or
or
movsb
je
out
in
pop
ds
adc
mov
xor
cmp
pop
lret
orb
inc
cld
lock
adc
or
cmp
adc
call
fsts
sub
xchg
push
mov
push
rclb
insb
or
inc
lock
mov
movl
test
cwtl
les
adc
dec
mov
push
xchg
xchg
dec
dec
lret
push
xchg
inc
sub
outsb
push
pop
idivl
inc
out
dec
mov
adc
inc
push
sbb
loopne
lods
jp
dec
sub
in
aaa
rcll
push
in
incb
add
add
popa
addr16
adc
test
loop
test
add
cmp
fistl
dec
mov
cmp
and
sub
popa
addb
sbb
mov
add
loope
and
icebp
mov
gs
mov
rorb
push
cwtl
xchg
push
sahf
jle
arpl
add
jp
mov
mov
add
cmp
push
shrl
sub
mov
inc
jnp
cmc
or
jmp
jno
jae
push
push
hlt
and
sub
ret
rolb
inc
movsl
or
jne
add
cmpb
jmp
xchg
xor
shl
fiaddl
push
and
pusha
leave
pushf
mov
call
enter
xlat
ficoms
xchg
adc
jecxz
sub
cmp
mov
imull
nop
or
jb
dec
mov
fcomp
popf
aam
shll
mov
mov
cmpsb
cmpsl
rolb
add
mov
pop
stos
mov
mov
fcompl
repnz
pop
cmpsl
js
add
mov
clc
fnstsw
mov
pop
sub
xchg
xchg
out
xchg
cmp
mov
sub
dec
test
insl
shll
in
or
mov
leave
cmp
add
ret
cltd
into
aad
dec
push
lcall
xchg
sarl
mov
lods
cmp
xchg
mov
mov
and
pop
push
ja
lahf
flds
adc
cld
dec
add
pop
mov
cmpsl
xchg
loop
xchg
mov
push
sti
mov
pop
jge
std
adc
push
cmp
add
out
mov
add
mov
dec
inc
dec
pop
xchg
sub
cltd
mov
cmp
adc
xor
ljmp
dec
push
or
mov
shrl
popf
and
sub
jns
mov
fistpl
dec
loop
cld
imul
mov
rclb
stos
xor
repnz
lcall
out
lods
pop
pop
dec
lods
jle
scas
btc
sub
and
test
push
mov
mov
cmc
cmpsl
rcrl
lods
shl
test
mov
xchg
push
mov
notb
mov
sub
and
cmpsb
mov
outsl
pusha
mov
stc
sbb
imul
mov
adc
cltd
pop
ss
enter
xor
out
lds
inc
scas
add
add
add
inc
bound
dec
jp
clc
mov
pop
insl
je
lret
shlb
dec
mov
jne
adc
jbe
loopne
xchg
dec
dec
mov
scas
out
outsl
movsb
push
test
mov
xor
cmp
int3
fdivr
jecxz
add
dec
mov
rcrl
push
stos
aas
in
mov
inc
dec
int3
adc
inc
stos
dec
inc
hlt
inc
sbb
pop
push
in
push
xor
or
std
or
insl
fwait
data16
jmp
test
les
mov
mov
insl
jno
jbe
and
and
or
push
clc
insl
pop
sbb
add
inc
rcl
jns
mov
pop
orl
inc
imul
outsb
xor
push
lret
and
xchg
xor
test
fisubrs
inc
clc
push
cld
int
push
push
ss
cmp
push
jae
mov
push
jmp
mov
adc
lahf
push
bound
add
pop
addr16
out
fcmovu
cli
xchg
pop
jmp
sub
fisttpl
push
add
imul
inc
test
xor
mov
mov
cmpb
pop
aaa
ret
in
mov
in
subb
rcrb
cmp
stc
ss
or
push
arpl
sbb
leave
mov
xor
mov
pop
mov
mov
xor
and
cmp
mov
jnp
outsl
add
or
dec
pushf
xchg
ja
stc
or
inc
sbbb
pop
mov
shl
lahf
pop
movsb
fnstenv
jns
in
out
mov
jl
imul
sbb
aaa
dec
or
cmp
aaa
cs
into
xchg
inc
mov
xor
js
cld
pop
scas
or
mov
loop
dec
pop
call
jge
ja
xchg
sbb
push
adc
adc
scas
sahf
sbb
add
dec
adc
clc
mov
xor
lock
adc
pushf
mov
fsts
popf
iret
sub
orb
sub
add
add
mov
repz
xor
push
fs
in
xchg
icebp
jnp
xor
shlb
sbb
scas
or
cs
pop
xchg
sub
shll
cld
mov
dec
mov
out
jns
dec
xchg
adc
mov
mov
push
leave
inc
xchg
jnp
dec
in
dec
repnz
mov
dec
cmc
inc
push
cmp
rolb
pop
ds
dec
sbb
dec
push
sub
mov
mov
dec
fistpl
jge
mov
add
dec
stc
push
adc
lahf
ret
mov
loopne
rcrb
sbb
sarb
iret
mov
jle
pop
mov
je
icebp
adc
xchg
jmp
push
jp
dec
and
add
push
mov
jbe
test
pop
stc
sbb
jne
ss
mov
push
jo
sbbl
jecxz,pt
mov
cmc
and
rcrl
mov
out
push
aas
adc
dec
jnp
jns
xorb
add
inc
das
mov
aas
or
ss
mov
push
enter
test
adc
test
sbb
mov
pop
paddsw
jae
outsl
into
adc
and
or
pop
cmp
mov
jb
aaa
lods
int3
les
cmp
les
arpl
stos
sahf
pop
xchg
enter
dec
and
jns
jb
pop
aas
in
cmp
sarb
popa
adc
or
mov
xor
loop
je
inc
popa
stos
shlb
movsb
xor
fisubs
stc
shl
jg
xor
cmpsb
add
arpl
sub
inc
stos
sub
jns
fxsave
lret
pusha
dec
imul
and
scas
mov
xor
inc
or
ds
ret
inc
cmpsb
or
test
inc
cwtl
cmp
rorb
insb
sahf
push
lods
cmp
xor
addr16
leave
loopne,pt
nop
xchg
shll
mov
mov
out
roll
fwait
mov
jne
dec
jmp
inc
or
lret
pop
lea
sbb
xchg
jns
dec
repnz
out
fxch
loopne
imul
xor
mov
mov
adc
push
adc
sbb
dec
icebp
mov
push
in
aas
jbe
fiadds
cs
adc
inc
mov
mov
xchg
in
ds
xchg
notl
sub
add
add
mov
adc
daa
xor
mov
push
stc
mov
test
push
cmp
icebp
mov
idivl
or
dec
pop
mov
mov
jmp
or
data16
out
cmp
ds
sbb
mov
inc
mov
rorl
adc
pop
jns
call
in
xchg
mov
daa
ljmp
mov
mov
jns
out
push
push
in
xchg
mov
xlat
filds
ja
dec
mov
adc
or
lds
push
sub
jne
and
enter
pop
inc
fisubrs
sub
mov
movsb
adcb
bound
loop
adc
lods
adc
xlat
or
sar
cli
incl
aam
push
subb
pop
sbb
fsubl
fwait
fs
inc
in
adc
mov
pushl
aad
pop
jbe
sbb
jmp
pop
jge
rorb
mov
mov
mov
xchg
push
scas
jnp
pop
daa
mov
lods
add
daa
movsl
dec
sbb
mov
sbb
aaa
xchg
rcl
lods
lods
or
and
push
or
dec
out
sbb
and
in
pop
cmp
rcl
push
pop
outsb
shll
push
mov
call
inc
aad
sub
add
inc
and
ret
xchg
mov
cwtl
js
cmpsl
out
push
imul
test
jp
mov
mov
xchg
int
sbb
sub
jecxz
pop
sbb
ficomps
xor
test
nop
lods
add
add
je
call
sti
or
aaa
in
nop
std
lahf
or
sub
inc
ret
jmp
cmp
mov
fidivrl
insb
pop
sub
imul
out
mov
sahf
sub
inc
dec
cltd
and
xorb
add
aaa
mov
int
xchg
push
dec
xchg
dec
aam
jl
and
fwait
test
sub
inc
cmp
out
add
xchg
aad
cmp
mov
iret
int3
mov
imul
pop
add
sub
mov
bound
iret
xor
sti
testb
xlat
lahf
mov
or
fs
fldt
inc
dec
addr16
rcrb
pop
mov
cmp
adc
dec
cmp
out
cli
inc
cld
jnp
and
inc
in
out
out
or
sub
sti
push
ja
xchg
mov
xor
push
jo
jnp
xchg
mov
dec
xor
jmp
imul
mov
hlt
test
inc
lds
xchg
add
rorb
test
inc
lahf
stos
cmp
sub
or
mov
cmp
std
shrl
and
inc
fnstsw
pushf
sub
sarb
xchg
addl
nop
add
push
dec
adc
in
outsl
je
js
or
lcall
dec
sub
or
into
lock
jl
and
xor
out
cmp
xchg
clc
rcl
std
jp
fs
push
popf
rcll
jecxz
enter
sbb
or
fimull
pop
or
ror
xchg
fsubs
arpl
and
ljmp
sbb
cmpsl
clc
insl
mov
in
xchg
aad
lock
dec
scas
xchg
add
lock
cmp
xchg
adc
not
fwait
pop
lret
leave
mov
cmp
test
mov
cmpsl
aam
test
jge
das
daa
insl
test
pop
sahf
lcall
ficoml
push
hlt
add
mov
inc
inc
ret
out
outsb
fildl
aaa
fnstsw
and
and
cmp
aas
lcall
cmp
lock
sti
ljmp
fnstcw
xchg
mov
mov
jge
popa
mov
mov
push
sahf
jge
jae
loopne
jnp
push
aas
push
ja
sub
lds
in
xchg
pop
pop
add
push
loope
fisubs
ficomps
mov
and
dec
mov
ljmp
inc
mov
dec
sbb
or
dec
inc
movsb
push
dec
fisubrs
addr16
sub
inc
lods
jns
cmp
jmp
sbbl
fsubrl
or
dec
fsubl
pop
adcl
cmp
jno
and
lret
imul
inc
mov
out
dec
je
and
scas
mov
or
shlb
xchg
pop
and
ds
and
scas
fcomip
aas
lods
hlt
stos
test
sbb
imul
scas
or
cmc
scas
mov
pop
sbb
daa
adc
in
in
rclb
testl
movsl
fnstenv
dec
push
push
scas
dec
and
pushf
data16
nop
pop
lcall
repz
imul
mov
loopne
adc
dec
adc
dec
test
inc
out
cltd
mov
out
std
mov
jecxz
decb
or
and
mov
vphadduwd
cmp
mov
jmp
bound
pop
lea
push
or
push
push
test
push
data16
jp
push
jg
xor
pop
push
mov
pop
aaa
xchg
shll
or
pop
mov
jle
push
cmpsl
pusha
push
xchg
jo
inc
ficompl
jnp
jae
xchg
inc
out
mov
dec
sbbl
xchg
hlt
mov
lret
stc
cmc
mov
int
out
incl
out
out
sbb
xor
inc
jne
add
cmp
xor
lods
or
and
je
or
push
dec
call
jb
fisttpll
or
call
sahf
xor
mov
or
push
xchg
sub
xchg
xor
stc
movl
testl
inc
imul
xchg
inc
bound
jp
push
cmc
push
and
jmp
repnz
stos
sub
mov
xor
or
mov
lds
out
lods
pop
cltd
xchg
mov
aas
in
pop
add
out
jmp
nop
fidivrs
daa
cmp
insb
sub
dec
out
sub
xchg
int
mov
add
hlt
ret
movsb
shll
pop
xor
sbb
enter
xchg
jl
pop
pop
add
icebp
fsub
clc
in
sbb
pop
cmc
aad
lods
mov
push
shrl
lods
lods
enter
sub
leave
stos
push
xchg
pop
outsl
pop
popf
std
cld
jg
push
add
sbb
pop
fcompl
mov
dec
dec
jg,pt
and
in
fisttps
and
cmp
ja
fwait
arpl
stos
lret
sub
repz
xor
cmp
test
or
adc
mov
mov
icebp
mov
cmp
cli
or
inc
bound
inc
out
ret
in
push
pop
inc
das
dec
sbb
push
lret
mov
inc
lahf
xchg
or
fisubrs
inc
mov
cmp
inc
pop
pop
or
call
cmpsb
jno
js
sub
mov
rclb
call
rcrb
mov
sbb
shrb
jno
lock
loop
sub
or
daa
mov
pushl
rorl
shlb
inc
shlb
mov
mov
xchg
cmp
or
in
popf
fidivl
test
jbe
insb
lahf
mov
js
or
mov
rorl
aas
dec
fisubs
dec
cmp
pop
jns
lcall
and
loope
dec
call
mov
pxor
jo
jo
push
stos
adc
es
adc
les
and
or
mov
cltd
push
xor
leave
add
das
leave
popf
and
xlat
sub
push
cmpsl
scas
inc
in
inc
pop
adcl
jno
cmp
jmp
push
stos
pushf
pop
xor
xchg
adc
fidivrs
cmp
fnstenv
xlat
scas
test
int
push
adc
test
ss
sbb
stos
pushf
out
jb
int3
jmp
fucomi
push
pop
mov
xchg
lock
xor
cmp
shlb
stos
test
mov
cmp
ds
xlat
xchg
iret
and
mov
icebp
stc
or
pop
fisubrl
adc
das
xor
lret
jle
or
gs
inc
stos
jns
out
insb
push
jnp
cmp
insl
sbb
frstor
adc
sub
inc
shll
mov
pop
in
mov
xor
aaa
jnp
add
pop
sbb
pop
stc
mov
mov
and
add
and
sub
andb
es
xor
adc
mov
mov
adc
mov
mov
mov
cli
lahf
lret
inc
jno
cmp
mov
cs
mov
adc
addr16
ss
adc
xor
add
in
mov
arpl
cmp
push
pop
and
cmp
mov
sub
bound
in
ret
jecxz
jmp
cmp
mov
into
mov
cmp
pop
xchg
ret
sub
push
mov
push
xor
pop
pop
add
setge
or
sub
and
pop
and
popf
shl
and
test
dec
pop
and
sub
mov
into
imul
cmpsl
or
xor
lcall
mov
aam
hlt
loope
sar
dec
aaa
bound
test
shlb
das
inc
cmp
add
and
je
lods
aam
pop
xchg
mov
test
add
cli
add
test
or
in
and
fists
pushf
out
iret
fisttps
call
popa
xchg
shlb
fisubs
mov
cmp
mov
add
pop
ret
pop
loopne
sbb
data16
subb
jg
pop
stos
ds
imul
xchg
dec
jae
xchg
sub
mov
mov
sbb
mov
adc
cld
fbstp
push
xor
xor
jge
mov
and
xor
jecxz
ret
sub
inc
test
push
push
rcrl
scas
fwait
jno
ficoml
pop
cmp
std
dec
fnstsw
iret
aad
mov
daa
xor
mov
fsubrs
rorl
jp
sar
add
mov
xor
das
fmull
jp
cmpsl
shrb
xchg
add
iret
ja
std
mov
outsb
sarb
lds
lds
test
adc
shl
testb
scas
mov
sbb
mov
mov
nop
pushf
enter
sbbb
mov
lods
lods
test
sub
mov
mov
adc
outsl
sar
push
into
stos
pop
sahf
lds
lock
fldcw
mov
xor
hlt
xlat
shrl
adc
sbb
sti
push
xchg
sub
cmp
push
inc
enter
jmp
mov
add
repnz
aam
clc
cli
lea
adc
cmpsb
fimull
or
xchg
cmp
jl
push
mov
jecxz
mov
sub
inc
sbb
testl
push
lret
push
in
dec
mov
cmp
adc
inc
adc
xchg
mov
pop
shrb
test
push
mov
loopne
pop
movsb
push
mov
fcmovu
xchg
xlat
in
add
xchg
cmp
pop
cld
fiaddl
imul
fistl
adc
outsl
into
shll
fldcw
mov
sbb
shlb
lret
jns
xlat
pop
cmp
adc
mov
mov
sbbl
js
fldcw
ds
es
daa
inc
int3
adc
aam
setle
mov
pop
or
int3
gs
loopne
mov
push
jnp
jno
pop
dec
mov
mov
jnp
pop
movsb
sub
sbb
mov
mov
or
imul
xor
fsub
push
cmp
aad
hlt
mov
push
call
jecxz
test
scas
sbb
adc
rorl
add
rolb
ja
cmpsl
cli
xchg
lea
adc
add
mov
out
dec
lods
pop
in
leave
mov
pop
and
adc
or
xlat
gs
jmp
push
ds
cvtpi2ps
cmp
xchg
xchg
sub
adc
lahf
ror
loopne
repz
push
cmp
mov
in
rcr
ret
and
lret
cmp
imul
mov
jg
mov
pop
pushf
cmp
pop
sbb
rorb
push
test
cmp
mov
mov
mov
bnd
jo
cmp
out
sarb
gs
xlat
lahf
push
aad
add
dec
pop
dec
mov
popf
jnp
pop
repz
movsb
jle
pop
into
loope
ja
mov
pop
adc
add
xchg
sbb
xchg
lds
test
sub
and
push
cltd
out
xchg
xchg
nop
imul
fndisi(8087
test
jne
cli
cmpl
or
movsl
in
dec
sbb
push
dec
push
in
xor
stos
outsl
inc
dec
cli
mov
cmp
ret
cs
jo
test
mov
cmpsl
push
adc
xchg
push
out
add
cltd
mov
xchg
mov
xchg
jne
cmp
or
sbb
sbb
mov
inc
pop
mov
xchg
jle
lahf
icebp
popf
jae
or
fdivs
xchg
adc
fisttpll
inc
jp
jg
sbb
jp
sub
pop
rcr
push
js
pusha
repz
xchg
cli
daa
mov
aad
out
test
sbb
popa
add
cwtl
mov
push
inc
mov
in
sbb
xchg
push
inc
xchg
mov
push
repnz
call
stc
dec
aas
jl
mov
enter
scas
mov
push
cld
out
in
dec
mov
cmp
jmp
mov
call
dec
mov
int
adc
jne
sub
xchg
cmpsb
shll
adc
popa
sahf
pop
icebp
push
cmc
and
lret
cmp
leave
orb
mov
int
cs
pushf
jno
push
out
cmp
pop
imul
clc
inc
enter
js
lahf
sub
mov
xchg
xchg
enter
test
cli
ss
or
pusha
fcomp
jne
xor
mov
mov
call
lret
mov
sbb
cmp
addl
add
mov
loopne
shlb
mov
test
jl
outsb
into
dec
frstor
leave
mov
or
add
mov
leave
jb
sbb
pop
adc
cld
or
mov
aam
pushf
sub
adc
scas
pop
js
mov
test
sbb
pushl
push
aad
std
out
ret
sbb
fbld
mov
sbb
jl
cmp
jb
loop
inc
sbb
insl
add
insb
sub
insl
mov
sub
mov
push
xchg
into
popl
push
inc
repnz
outsb
inc
dec
jg
dec
add
push
jns
sti
sub
imul
loopne
jl
sub
lahf
imul
push
pop
insb
cmpsl
or
test
fdivrl
int
push
xchg
cmp
lea
push
ss
mov
and
outsl
push
add
jle
iret
fwait
repz
mov
sbb
adc
mov
data16
frstor
xchg
mov
pushf
lods
mov
inc
loope
mov
loopne
out
add
xor
dec
xchg
aas
push
shll
and
pop
jg
xchg
push
pop
cmp
lret
and
or
pop
enter
mov
out
rol
dec
stc
pop
bound
adc
out
jne
sbb
add
cmp
out
mov
popf
adc
jp
xchg
fstpl
adc
sbb
pop
mov
sbb
xchg
sub
xor
sbb
loopne
and
xchg
add
jo
sbb
mov
mov
dec
nop
fstpl
data16
nop
sarb
je
dec
lea
pop
js
hlt
inc
mov
mov
outsb
aad
jae
xchg
jnp
aas
aaa
movsb
mov
xchg
sarl
push
lret
jbe
out
add
fsubl
outsl
imul
ret
aad
sbb
sbb
mov
out
push
add
cmc
movsl
push
xor
testl
push
int3
mov
icebp
out
stos
aam
cmp
lock
out
les
jecxz
lcall
imul
xchg
mov
and
adc
stos
push
out
hlt
imul
sbb
xor
fsubs
xchg
lret
pop
inc
jne
pop
movsl
mov
pop
rolb
pushf
add
xchg
pop
xchg
xchg
fistps
and
xor
insl
loopne
mov
pushf
insb
push
or
fbld
addr16
insb
push
mov
mov
mov
add
repnz
adc
push
rsm
adc
dec
loopne
loopne
out
sbb
xor
add
cltd
sub
sbb
push
bnd
mov
jmp
push
and
jnp
aad
dec
mov
inc
adc
mov
cli
and
jl
sbb
fcmovb
xchg
push
dec
ret
in
mull
add
rorl
sbb
stos
ljmp
gs
js
popf
cmpsb
xor
mov
push
jns
adc
pushf
mov
mov
into
mov
add
push
mov
das
mov
rcll
adc
cmp
and
out
inc
pop
dec
leave
scas
jle
xchg
xor
popa
loop
icebp
lret
and
call
subl
roll
mov
and
xor
ja
fucom
adc
movsb
repnz
fidivrs
jg
ror
add
or
std
pop
sahf
repnz
ret
xor
hlt
test
nop
sbb
popf
jbe
adc
mov
cld
inc
in
into
sub
or
cwtl
out
popa
adc
mov
jo
test
mov
jns
roll
jb
orb
mov
xchg
pop
test
out
mov
jne
out
add
mov
inc
mov
call
lcall
mov
add
inc
lods
jle
rcr
gs
cmp
imul
stc
push
fnstsw
inc
data16
loop
cmc
repnz
bound
frstor
pushf
push
push
xchg
lret
or
in
lret
dec
imul
or
out
in
aad
cmc
cmp
sahf
mov
mov
add
arpl
add
imul
js
dec
xchg
fisttpl
sbb
aas
fistpl
lds
dec
jno
daa
jecxz
sub
push
incl
mov
filds
pop
testb
pop
mov
jg
xor
cmp
push
jle
jns
out
inc
loop
mov
pop
push
ss
sub
dec
arpl
mov
gs
jbe
insl
lret
hlt
jmp
dec
add
jbe
xor
xor
mov
test
out
sbb
out
lds
pop
mov
jne
sbb
shl
pop
stos
pop
nop
lret
pop
test
mov
testl
js
andl
and
pop
shl
daa
jp
cmp
mov
loop
add
dec
addl
jmp
ret
lahf
xchg
sbb
lcall
adc
ljmp
and
jle
push
pop
mov
repz
and
adc
sub
lea
push
push
rcll
pop
dec
jmp
pushf
test
xor
push
ret
mov
popf
mov
repnz
and
rorb
bound
outsb
sbb
sub
xorb
dec
in
jp
jl
movb
sbb
or
jp
add
push
xchg
mov
mov
fiaddl
push
inc
push
imull
jns
and
mov
aad
imul
bound
mov
cmp
mov
xchg
dec
jns
mov
sahf
mov
mov
xor
inc
sbb
add
lds
roll
fwait
call
xlat
lret
jecxz
in
ficoms
mov
pop
mov
mov
push
push
cmp
add
stc
xchg
adc
push
data16
jo
leave
cmp
int
in
adc
and
cmpsb
jbe
or
mov
mov
xchg
inc
cmpsl
pop
sbb
ret
sub
sbb
testb
push
sbb
sbb
arpl
inc
hlt
and
and
mov
hlt
sub
jg
sub
stos
sub
ljmp
sub
lret
mov
sub
out
dec
xchg
add
jb
sbb
fnstenv
testl
test
ret
cld
adc
mov
lock
adc
xor
shrl
faddl
or
cmpsl
call
sub
adc
arpl
fisubs
add
shrl
lcall
inc
int
xchg
push
xchg
repz
out
cmpsl
lods
push
mov
test
xor
inc
out
add
xchg
xchg
daa
call
mov
out
jmp
adc
inc
sbb
clc
mov
stos
dec
test
cmp
dec
hlt
ds
jmp
les
mov
add
loope
sub
mov
icebp
sbb
testl
es
and
out
scas
popf
mov
stos
scas
push
orb
ficomps
ss
inc
and
cmp
push
mov
inc
push
fwait
dec
adc
mov
mov
shrl
sub
sub
cmpsb
mov
out
jb
adc
scas
pop
xchg
subb
pop
rclb
cli
pop
mov
shll
cli
push
sbb
inc
add
icebp
bound
mov
mov
cmpb
xlat
pop
arpl
push
movsb
jno
lea
lret
push
cmp
pop
xor
xchg
xchg
fistps
repnz
stc
inc
pop
fcoml
xor
shr
lods
lret
and
test
mov
jg
test
ret
lret
aam
push
subb
mov
shl
push
sub
in
movsl
pop
aam
bound
adc
pop
movsl
lcall
bound
push
sub
test
lret
adc
int
cmp
movsb
jle
pop
push
sub
lahf
jae
jns
clc
loopne
cld
daa
negl
aas
test
xchg
dec
imul
and
in
xor
push
ret
jg
add
sbb
and
lret
jnp
adc
jo
pop
sbb
adc
mov
jp
mov
nop
andb
shrb
movsl
add
roll
dec
jmp
mov
shrl
sub
arpl
daa
xchg
cld
xchg
push
ss
out
inc
test
das
pusha
or
nop
jns
outsl
shl
faddp
push
mov
lcall
mov
sub
xchg
mov
out
jno
sarb
ja
mov
enter
mov
imul
cmp
out
dec
inc
pop
mov
stc
cmp
dec
out
enter
sti
pusha
pop
mov
outsl
jae
ja
pop
xor
cmp
mov
clc
shll
aam
xor
inc
lea
ljmp
arpl
mov
inc
jo
pop
and
push
in
and
repz
pop
and
bound
aad
mov
sbb
xor
xor
out
dec
cld
cmp
or
scas
insb
sbb
cmp
inc
mov
insl
mov
inc
and
jnp
jle
popf
ret
dec
mov
xchg
repnz
gs
pop
leave
push
xorl
adc
notl
jno
xchg
mov
push
mov
jecxz
js
sbb
inc
mov
sbb
pushf
sbb
lcall
push
ret
test
jnp
data16
mov
inc
pop
stos
inc
ret
call
ss
pusha
aam
shr
movsl
jnp
pop
lods
or
cmp
jl
es
pop
loop
fldcw
fcomip
mov
jno
lock
xchg
fdivs
or
cltd
sbb
js
jne
imul
icebp
std
repnz
jp
cmp
or
xor
xchg
lock
bound
es
in
and
lds
jg
aas
add
inc
stc
xchg
stos
sub
imul
mov
enter
jbe
inc
xchg
mov
mov
jg
and
lret
mov
sbbb
es
xor
mov
lods
dec
rclb
int
cmpsl
add
adc
jno
fcoms
or
jge
dec
xchg
jb
add
sub
stos
aaa
cmp
int3
push
sbb
in
aas
mov
js
jo
loop
and
test
repnz
mov
jb
cs
sub
jns
adc
pop
jecxz
shll
cmp
push
mov
and
push
dec
xchg
shlb
pop
lahf
xor
cld
xlat
inc
aas
hlt
fimuls
mov
aad
stos
jo
imul
lahf
fldt
xor
xchg
cmp
cmp
cli
push
and
pop
sbb
imul
pop
inc
cmc
push
fcomps
pop
cmpsb
test
mov
push
inc
cli
pop
lock
fsubr
jns
jecxz
movsb
mov
loopne
ja
orb
int3
add
sbb
ret
in
sti
add
or
sbb
mov
mov
fstl
test
and
dec
out
fstp
sbb
push
out
out
stos
popf
dec
out
shlb
push
filds
mov
imul
fldcw
sub
icebp
cmp
ss
fistl
shlb
xchg
jecxz
lret
mov
mov
cmpsb
fstpt
out
push
push
lods
shll
pop
xchg
adc
mov
std
jb
sbb
xlat
push
cld
xchg
push
das
cmp
add
jns
xchg
aaa
out
inc
dec
neg
dec
jge
lcall
or
ret
fcompl
xor
inc
mov
xchg
ret
push
cmp
jl
jmp
es
lret
and
push
xchg
stos
xor
fxch
xchg
sub
lods
pop
dec
cltd
inc
imul
js
testb
inc
jmp
nop
lcall
in
jmp
mov
pop
inc
dec
scas
push
pusha
mov
stos
out
rcrl
mov
dec
stos
jmp
fidivrs
dec
gs
mov
pop
xor
cltd
daa
fstpl
mov
fldl
sub
pop
pop
shll
sbb
mov
dec
xchg
rolb
nop
cmc
push
and
dec
pop
jg
in
scas
int3
in
mov
or
ret
and
cmp
ja
mov
ret
pusha
jae
ret
nop
add
in
divb
mov
rclb
push
fistps
sbbl
bound
mov
cmp
sahf
adc
adc
into
push
xchg
lods
xor
jp
aas
sbb
cmp
aad
loope
fs
mov
stos
je
and
cmp
loopne
xor
shlb
mov
addb
sub
outsl
in
je
inc
mov
jecxz
xchg
cmp
mov
xor
fwait
cmpsb
ds
stc
push
sub
or
jne
cmpsl
js
jl
test
arpl
xchg
inc
stos
sub
daa
inc
xchg
in
jb
adc
inc
out
ljmp
std
fcomps
pop
aas
pop
sub
sub
cmpsb
xchg
sahf
jno
add
addr16
mov
cltd
mov
jne
test
les
sub
ficoml
repz
aas
into
dec
push
fisubl
jae
outsb
inc
hlt
and
cwtl
fisubrs
or
inc
xor
dec
getsec
jge
fidivs
and
fwait
xor
out
cmp
push
inc
pusha
lcall
divb
enter
bnd
mov
dec
fs
outsl
hlt
out
adc
loopne
cmp
xor
ljmp
addr16
inc
push
mov
std
ja
mov
test
das
mov
sub
daa
mov
mov
inc
push
inc
inc
rcll
mov
or
jbe
pop
pusha
outsl
pusha
into
xlat
out
add
mov
shrl
shl
push
cmp
stos
sbb
lret
lahf
adc
mov
inc
cld
pop
fsubrs
mov
push
movsl
or
mov
movsb
out
and
scas
push
dec
cmp
mov
fwait
sbb
xchg
ficomps
repz
fwait
jae
xor
fnsave
xor
push
dec
jmp
filds
mov
or
sti
out
push
seto
push
outsb
addr16
int
fldcw
push
mov
push
pusha
push
lds
fisttpl
dec
lret
xchg
out
dec
dec
subb
pop
adc
jno
jle
out
xor
fwait
adc
sbb
jge
lods
adcl
push
or
pop
push
sub
lahf
dec
push
jbe
in
push
jns
cld
add
movsl
int
rolb
jbe
ret
es
jg
or
stos
dec
movsb
daa
sbb
sbb
nop
adc
je
into
ret
cli
jo
popf
int3
arpl
lret
inc
cmp
ret
ret
cmc
gs
cmpb
pop
mov
jecxz,pt
ljmp
adc
push
outsb
outsl
and
push
dec
outsb
pop
lret
loope
bound
push
bound
jp
lcall
cmpsl
pop
xchg
mov
xor
push
fstpt
nop
repnz
out
bswap
dec
les
push
pop
shrl
mov
push
sar
cmp
je
es
popf
xchg
imul
dec
gs
pusha
jecxz
push
mov
mov
push
jae
pusha
mov
bnd
push
and
sub
test
jp
cmpsb
mov
ret
int
lea
into
mov
dec
add
bound
sub
jecxz
leave
sub
cmpsb
push
push
pop
push
sub
jle
adcl
xor
adc
insb
mov
sbbb
sbb
jg
xor
not
pop
xchg
mov
sub
nop
xor
pop
add
jl
out
loop
xchg
shll
scas
repnz
or
inc
fsubl
cmpsb
cld
out
pop
out
add
jb
push
lret
sbb
xor
test
push
or
lds
xchg
loope
cs
or
add
pop
or
mov
cmp
es
ret
daa
cli
pop
out
add
jecxz
aaa
jmp
dec
mov
inc
and
ljmp
int
mov
or
jg
pusha
or
or
pop
and
pop
xchg
shlb
mov
push
fwait
test
lret
lret
in
mull
mov
call
aaa
les
mov
dec
orl
fisttpll
adc
cmpsl
cmpsl
idivb
scas
mov
mov
stos
jg
call
outsb
test
in
out
cmp
mov
aad
outsb
pop
loope
mov
cmpsl
or
mov
js
xlat
popf
or
fcompl
fsub
jb
xchg
dec
xor
fdivl
repnz
fildll
int3
arpl
mov
pop
mov
movsb
pusha
fildll
js
test
test
outsl
mov
inc
nop
mov
push
sub
pop
cmp
clc
hlt
add
and
pop
je
outsb
jg
sbb
lds
inc
add
imul
pop
stos
pop
aaa
in
addr16
ljmp
loop
rcrl
xchg
mov
xor
push
cs
call
lahf
mov
pop
std
xchg
mov
lret
repnz
mov
lcall
js
gs
add
push
scas
sub
jb
gs
sub
xchg
call
mov
hlt
or
mov
mull
sub
inc
jno
jg
aam
dec
ficompl
into
pop
pop
push
sti
lret
cmp
adc
push
in
sub
inc
cmp
xchg
outsb
xchg
outsb
insb
sub
outsl
cmp
lods
sub
mov
rcll
out
popa
cmp
mov
pop
mov
notb
mov
mov
xchg
add
jo
mov
push
ss
pushf
icebp
mov
out
outsl
and
pop
scas
loopne
xlat
ds
cmp
int3
sarl
mov
dec
cli
and
cmp
bound
adc
int3
pop
push
cltd
xor
xchg
jecxz
test
ja
and
pop
push
inc
repnz
out
out
test
push
stos
mov
mov
xor
inc
hlt
stc
push
fiaddl
push
jno
cmp
push
adc
mov
sarl
subb
inc
lods
add
ljmp
arpl
icebp
insl
dec
cmc
shll
sub
sbb
push
xchg
arpl
or
sub
sub
xchg
fs
push
adc
sub
mov
adc
movsb
xchg
fsubs
adc
shl
xlat
popa
sbb
mov
dec
xor
loop
stos
push
pusha
lods
std
cmp
mov
ss
stos
mov
jbe
mov
mov
lret
daa
sbb
sbb
adc
imul
arpl
push
jmp
pop
add
add
daa
fidivs
enter
pop
mov
cmp
lret
sahf
dec
or
inc
sub
jmp
aam
leave
xchg
jo
push
arpl
call
mov
pusha
xchg
pop
pop
test
test
sub
les
in
int3
es
jns
cmpsb
adc
adc
sub
pop
iret
pop
popa
out
and
jb
fcmovb
int3
hlt
mov
or
xchg
cmp
bound
outsb
popa
les
dec
jne
push
movsb
push
push
mov
js
push
pop
insl
mov
leave
and
xchg
adc
cs
popf
lods
push
mov
cs
push
dec
clc
cmp
sarl
ret
int3
push
cld
mov
test
mov
mov
cmp
cmc
ja
cltd
bound
out
mov
cmc
cmp
xchg
test
add
ja
daa
outsl
je
imul
outsl
jb
xor
enter
cmpsl
add
push
and
pop
cmp
sbb
mov
inc
es
dec
xchg
aas
xor
xor
leave
lea
mov
sub
xchg
into
nop
mov
mov
test
aaa
and
sbbb
or
popf
imul
aam
push
fimull
add
xchg
jg
scas
dec
cmp
adc
loopne
faddl
push
aaa
test
xor
sub
leave
test
xchg
ja
mov
arpl
mov
xor
xchg
dec
add
andl
stos
pop
add
xchg
rorl
fimuls
dec
test
inc
sub
xchg
dec
repnz
mov
dec
and
sub
mov
aaa
cmp
dec
fcomip
dec
xor
movsb
sbb
mov
mov
cmpsb
mov
in
jne
rorl
push
loope
js
icebp
icebp
push
or
scas
push
jns
fisubs
cmc
fdivr
adc
jne
push
xor
cmp
dec
add
push
sbb
sub
leave
xchg
cmp
out
mov
popa
cmp
out
or
xchg
jnp
and
xor
iret
jge
arpl
xor
mov
xor
jbe
adcb
shl
dec
pop
in
decb
lcall
nop
xchg
cmp
cli
int
loope
jae
fcmovne
adc
shlb
pop
xor
repz
icebp
imul
in
sub
aad
inc
sbb
xor
insl
mov
mov
and
pop
imul
or
xor
xorb
cmpsb
dec
jp
les
inc
mov
sub
cwtl
clc
or
pop
adc
push
add
sub
shlb
test
adc
imul
or
mov
outsb
in
adc
mov
mov
jae
xor
inc
outsb
mov
sbbl
mov
out
sarb
popw
jecxz
in
mov
stc
fildll
add
out
pop
push
lcall
sub
mov
xchg
cmp
repnz
xchg
jne,pt
cmp
mov
or
dec
dec
jecxz
outsb
inc
cmc
jno
repz
movsb
leave
adc
mov
or
and
sahf
jno
and
xor
and
dec
jb
test
dec
cmp
xlat
popf
int
push
movsb
repz
add
aad
shrb
mov
mov
mov
adc
scas
mov
cmp
jle
sub
imul
adc
sub
ds
dec
shl
push
or
adc
xor
xchg
mov
fwait
push
mov
mov
mov
add
xchg
or
int
ret
cltd
jb
in
add
and
out
sahf
ffreep
mov
pop
fwait
push
mov
lcall
push
inc
fidivs
rcrb
mov
enter
cmpsb
pushw
into
aam
cmp
rcll
xor
cmp
test
jge
pop
cli
scas
fsubs
xor
js
sub
dec
sbb
or
pop
mov
xchg
out
aas
loop
xor
xor
push
jae
aam
mov
imul
mov
jno
jae
mov
cmp
mov
push
sarb
out
rcrl
xor
ljmp
outsl
mov
clc
mov
mov
into
sub
outsb
inc
fwait
xchg
jl
mov
adc
jp
or
mov
mov
xchg
inc
push
js
ja
nop
sahf
mov
mov
pop
push
enter
xchg
sub
bound
loopne
mov
dec
xor
mov
xchg
fildl
repz
mov
cmp
daa
mov
test
insb
dec
adc
lahf
divl
jns
dec
in
dec
sub
nop
xlat
add
cmp
cmc
mov
pushfw
mov
cmp
xchg
fsubrl
add
and
rcr
fistpll
imul
or
fisubrl
divb
fistps
sbb
sbb
lods
cmp
push
inc
xchg
adcl
dec
popf
pushw
rclb
push
fmuls
cli
test
xchg
lea
push
or
rcr
dec
or
cmc
sahf
or
jo
adc
mov
dec
inc
xchg
insb
mov
stos
int
lods
test
and
clc
daa
scas
stos
nop
aas
rol
les
jnp
mov
xchg
int
notl
mov
fisttpl
hlt
dec
mov
pop
dec
in
inc
lods
pop
adc
dec
push
call
and
adc
hlt
les
inc
stc
leave
add
rcll
js
ret
mov
push
ds
mov
aad
cmc
add
or
or
insb
orb
or
xlat
jl
or
ljmp
pop
insl
mov
fsubl
sub
sbb
adc
push
dec
pop
add
sbbb
sti
std
add
sbb
dec
jmp
mov
push
test
inc
mov
adc
xchg
sbbb
jne
jo
xor
andb
jle
xor
imul
scas
xchg
mov
rcr
dec
leave
mov
sub
sbb
xchg
mov
mov
sbb
lock
loop,pn
cmp
jnp
sub
addr16
sub
xchg
adc
fstpt
fstpl
cmovno
lea
ret
lret
mov
push
or
or
xchg
jp
in
dec
outsb
mov
shll
daa
lret
decl
dec
psllw
mov
fldl
aad
xchg
lock
sub
or
imul
sub
scas
xchg
pop
sarb
lcall
pop
xor
mov
xor
pusha
rolb
stos
ljmp
sarb
insl
mov
mov
push
mov
pop
out
inc
mov
inc
inc
stc
shlb
add
sbb
lcall
jle
hlt
nop
or
movsb
int3
jmp
ja
aad
sub
lock
dec
fsubs
test
inc
push
aad
lea
push
movsb
jno
cmp
fisttps
subl
vmovdqa
int3
add
mov
cmp
cmpsl
shl
mov
js
mov
in
in
mov
mov
ljmp
in
mov
mov
mov
xchg
cmp
fidivl
sbb
aam
arpl
mov
in
lahf
pop
or
sahf
pop
mov
inc
jle
daa
sub
cmovns
ja
fdivrs
lret
rcll
lea
push
daa
in
mov
mov
cmp
popf
fsts
mov
add
add
dec
out
mov
or
fidivs
xchg
sahf
inc
jmp
imul
stc
stos
das
sub
add
iret
push
sti
rcrl
call
lods
jnp
stos
mull
add
call
addb
fwait
dec
repnz
into
popf
or
movsl
jecxz
js
xchg
popa
pop
cmc
in
sbb
jno
vshufps
int
scas
pop
dec
popf
ret
enter
sbb
shlb
adc
aaa
dec
or
add
je
ret
add
inc
mov
gs
mov
jmp
cmpsl
ss
decb
mov
inc
cmc
enter
xor
movsb
or
fsubrs
les
loop
loop
lods
xchg
lret
pop
pop
and
cmpsl
mov
jb
xor
or
pop
xchg
fcomps
jo
mov
bound
xchg
mov
mov
inc
test
fisttps
xchg
mov
xchg
mulb
cmp
dec
cvtps2pi
sub
movsb
or
mov
out
je
and
jg
pop
inc
rol
push
test
lahf
dec
push
aam
leave
sbb
xchg
sbb
pusha
fidivs
mov
sarl
pop
cvttps2pi
push
dec
pop
fwait
sbb
jb
popf
cld
cmpsl
jb,pn
sub
mov
out
aaa
std
loopne
mov
push
sub
addr16
jge
lods
bound
xor
adc
das
movsb
dec
cld
clc
bound
dec
icebp
insl
leave
aas
fs
out
les
fwait
test
or
add
cmp
push
jo
or
dec
lahf
outsb
and
mov
scas
adc
mov
dec
cwtl
lret
lods
or
xor
fdivr
repnz
lret
mov
xor
pop
adc
xor
ljmp
mov
bound
test
test
push
mov
mov
out
ret
stc
lods
test
jge
adc
pusha
lock
mov
adcb
xchg
loop
popw
mov
out
sub
aad
cmp
test
inc
cwtl
stos
out
fldt
or
push
pop
mov
aam
dec
or
call
fwait
rcll
mov
fsubrs
imull
xlat
and
lods
push
xchg
inc
leave
outsl
cltd
cmp
imul
and
push
outsl
loopne
bound
divl
callw
aam
push
subl
or
sub
or
decb
aaa
popa
push
jno
inc
push
lahf
mov
lods
or
cmp
cmpsl
xorl
lret
loop
inc
push
stos
ds
xor
sti
jmp
xchg
aad
and
sbb
mov
pmuludq
shll
add
scas
inc
les
push
loopne
enter
push
xor
daa
inc
rcrb
dec
xor
add
arpl
jae
cmpsl
int3
add
dec
lds
dec
jns
loopne
ja
idivb
daa
jae
add
daa
push
mov
add
in
pop
jno
hlt
int
push
arpl
pop
icebp
lds
out
mov
add
lds
dec
outsb
xchg
lea
xchg
sub
lods
daa
sbb
xchg
cltd
mov
mov
cs
ja
and
leave
add
push
mov
lds
mov
cli
pop
xor
into
cmc
or
aaa
or
pop
enter
mov
inc
push
cmp
push
imul
inc
stc
or
mov
lcall
je
jp
mov
insl
adc
test
movsb
gs
mov
pop
add
loope
cmp
inc
sbb
sbb
arpl
cmp
mov
enter
inc
loop
adc
shll
dec
clc
dec
enter
int3
mov
in
icebp
xchg
fidivs
lret
mov
pop
es
jb
mov
xorl
adc
mov
adc
cltd
mov
push
ljmp
or
lock
icebp
jge
es
push
lret
jb
lea
data16
test
popf
andb
cmp
mov
cmpsb
ds
ret
mov
add
dec
xchg
mov
aad
jo
or
jecxz
push
push
int
call
jns
ret
mov
jg
inc
lea
movzbl
test
js
lds
push
push
pop
popf
xchg
lods
jg
jmp
and
shlb
xor
pop
fimull
clc
add
cli
bound
out
mov
mov
mov
xchg
scas
vcvtpd2psx
daa
jo
test
es
fucomp
dec
fisttpll
cmc
outsl
cs
xchg
out
ret
pusha
stos
pop
push
fabs
clc
dec
push
jb
xchg
incl
mov
std
xor
pop
xchg
xchg
push
xchg
ss
add
lods
dec
leave
jb
push
add
dec
push
clc
leave
shll
jg
add
hlt
clc
cmp
cmp
cmpsl
inc
or
jg
inc
jae
cmp
loop
sub
xchg
popa
pop
hlt
adc
push
cmp
mov
call
xorb
pop
and
pop
xlat
ret
pusha
in
call
add
fisubrs
pop
pushf
mov
xor
and
adc
out
mov
pop
andl
mov
mov
fwait
and
mov
jg
stos
fdivrl
dec
xchg
into
xlat
pop
stos
aaa
mov
adc
aas
push
sub
lods
jl
or
icebp
sub
mov
cmpsl
scas
int3
in
stc
push
aas
cmp
sub
xor
push
rcrb
mov
call
or
jp
push
nop/reserved
xor
xor
jne
cmpsb
and
lret
sub
cmp
loopne
in
das
jo
jno
rcl
hlt
cmp
mov
nop
call
push
scas
sub
insl
add
loope
and
xchg
pop
push
pop
push
in
lret
push
outsl
cld
call
sbb
and
stos
out
sub
xchg
cmp
test
hlt
xor
pop
rcrb
daa
cmp
jnp
cmpb
cs
sbb
mov
cltd
inc
add
inc
rcrb
cmp
jbe
dec
xchg
test
loope
arpl
xlat
adc
push
and
mov
in
mov
push
out
outsb
xchg
mov
add
stos
jmp
ds
sub
arpl
outsb
movsl
ret
loop
adc
xor
cld
lahf
out
or
imul
outsl
mov
hlt
fwait
shl
insb
and
adc
les
sbb
sbb
fs
jbe
popf
or
call
pop
inc
test
mov
push
mov
push
sbb
push
test
loopne
cmp
sbb
push
mov
push
adc
sub
add
push
pusha
mov
mov
jne
ret
imul
cmp
data16
sbb
lcall
ss
or
sub
fwait
popf
aam
shl
jp
pop
dec
xor
out
lea
mov
ret
jl
rclb
mov
adc
inc
pop
or
xor
scas
iret
jl
xchg
hlt
movsl
imul
fstp
outsb
and
sub
outsl
lods
and
inc
push
js
lret
mov
fcoml
adc
sti
sbb
pop
dec
sti
ds
mov
xchg
mov
jg
jae
jno
ja
adc
xchg
aas
sbb
jmp
insl
sbb
lret
lea
mov
scas
nop
ljmp
push
shr
inc
and
xor
push
roll
mov
ret
cmpsl
dec
test
xchg
sbb
subl
sahf
int
sbbl
in
xlat
testb
mov
jno
mov
in
or
out
les
xor
movsb
cld
sub
lods
lds
cltd
xchg
bound
or
movsl
mov
and
jb
sbb
jg
pop
lcall
repnz
adcl
fldt
push
mov
add
or
and
int3
inc
push
push
pop
jns
daa
movl
js
mov
and
outsl
sahf
dec
into
gs
add
insl
mov
or
lock
dec
jmp
fistpll
push
aam
and
frstor
int
or
enter
cmp
ljmp
cli
dec
dec
cmp
inc
nop
imul
xchg
mov
sbb
shrb
lret
sbb
mov
jg
xor
mov
xchg
inc
adc
sti
xlat
cmp
nop
push
ficoml
mov
aam
insb
mov
jge
add
pop
jcxz
xchg
xchg
mov
loop
sub
mov
in
daa
mov
jmp
push
mov
push
js
cmp
jb
add
sar
sub
aaa
stos
stos
scas
fldt
stos
fs
cmpsl
mov
mov
and
iret
sub
mov
shrb
xchg
mov
cmp
faddl
insl
fs
inc
pop
arpl
xor
or
or
in
notl
les
pop
pop
ljmp
inc
xlat
orl
push
pop
cmp
or
dec
mov
or
sarl
jb
clc
cmp
mov
xor
jb
xchg
sbb
cmp
out
lock
jo
push
dec
rcr
pop
pop
pop
sub
mov
pop
jge
mov
jae
in
pop
xor
popa
cli
push
mov
jae
mov
rclb
inc
loopne
fcmovbe
shl
data16
xor
inc
aam
or
scas
push
push
addr16
inc
push
cmpl
cmp
mov
rclb
out
mov
sbb
cmp
stos
rolb
sahf
jne
sbb
call
mov
cmc
xor
fwait
aad
push
pop
call
mov
es
push
mov
pop
dec
pop
fs
mov
fdivs
sarb
sbb
pop
sbb
into
inc
adc
inc
add
stc
dec
sub
jae
ffree
mov
aaa
adc
jge
aad
maskmovq
sahf
notl
mov
sub
loopne
pop
xchg
adc
sub
jge
jbe
ja
xor
add
adc
or
jae
scas
or
ljmp
lods
int
mov
mov
and
out
and
repnz
adc
add
movsb
xor
lods
out
pop
inc
push
jge
test
jnp
mov
mov
sti
cmp
pushf
pushf
loopne
fldt
jns
cmpsb
pop
xchg
popf
dec
inc
or
aam
xchg
out
stos
pop
sti
arpl
jae
dec
jecxz
hlt
jmp
sub
jle
into
push
jae
loope
xor
popf
pop
popa
xlat
and
popf
mov
add
loope
andl
push
push
fcompl
and
or
data16
iret
push
test
scas
popl
sub
or
jbe
lcall
xchg
int
lods
xor
mov
aad
sub
xor
jb
xrelease
sub
xchg
or
add
roll
cmc
cmc
adc
movsl
push
and
cld
cltd
mov
lcall
mov
xor
orps
adc
insl
and
add
mov
xor
stos
push
xchg
rcl
bound
xchg
jp
dec
mov
sub
pusha
dec
pop
adc
jns
aam
push
mov
ret
mov
out
adc
punpckhwd
sub
insb
aam
xchg
xor
mov
lock
cmc
push
adc
or
test
add
notb
movb
jecxz
cld
bound
xlat
repz
addr16
popf
sbb
pop
fucomi
jmp
or
sub
addr16
sub
mov
jl
insl
lods
div
imul
jno
add
dec
jbe
addl
mov
add
mov
call
movsb
xor
mov
xor
cmpsl
sub
push
movsb
outsb
movsb
cmp
aad
sbb
loop
push
add
cli
or
jae
adc
inc
jle
or
push
fistpl
fisubs
fdivl
sub
mov
mov
sarl
add
jecxz
loopne
or
or
mov
lretw
aas
jne
push
pop
and
sti
or
pop
rcrl
xchg
push
mov
popa
fdivrl
add
cmp
inc
hlt
sbb
add
in
out
xchg
mov
xor
and
loop
cmp
pop
xchg
imul
insl
cmpsb
mov
add
ret
out
add
xchg
enter
mov
popl
cmp
xchg
scas
inc
test
inc
pop
fisubrl
jmp
cmc
rcl
stc
adc
cmpsl
repnz
negl
shl
or
popa
bound
sbb
jo
test
lret
xchg
sub
outsl
fisubrs
fbstp
into
cmp
jecxz
idivl
mov
mov
lahf
dec
call
dec
adcb
pop
or
push
jp
in
push
pop
jo
imul
shlb
mov
mov
fsubs
push
outsb
faddl
in
arpl
jbe
and
sbb
stc
ljmp
inc
sbb
scas
xor
cmp
mov
int3
mov
jle
lock
bound
pushf
lock
xor
jo
in
mov
mov
fcmovbe
xchg
push
mov
ds
sbb
xchg
stc
dec
ja
or
jp
lret
xchg
outsb
jns
das
leave
inc
sbb
mov
adc
pop
xchg
push
inc
mov
push
es
negl
sub
add
jb
mov
aaa
aaa
scas
outsb
dec
cmp
aad
mov
sub
pop
xorb
rclb
xchg
jns
jno
sub
addr16
lods
and
mov
sahf
mov
cmpsl
push
mov
imul
jno
xor
push
mov
jmp
daa
pop
mov
insb
push
cltd
push
sbb
mov
or
xchg
sbb
scas
inc
out
data16
insb
xchg
fstps
cli
jg
and
hlt
lods
testb
fs
ljmp
adc
not
dec
pop
and
sbbl
dec
xlat
jbe
or
sub
scas
push
fisubrs
add
and
fwait
sahf
es
sbb
test
push
or
xor
mov
add
sahf
imul
cld
jae
and
inc
insb
subl
jne
nop
test
mov
data16
lea
in
inc
jno
mov
add
add
lret
add
es
mov
sbb
fldenv
out
mov
sbb
cmp
scas
pop
lret
mov
out
popf
sub
push
lahf
sbb
cmp
jmp
or
mov
sbb
lods
fldl
data16
pop
mov
xor
loope
add
sub
adc
lret
ret
and
cmp
lock
cmpl
adc
je
sbb
pop
dec
arpl
iret
data16
jbe
jb
jbe
sub
fs
cmpsl
sub
xor
jp
sahf
flds
or
lods
adc
mov
dec
enter
cli
add
out
xchg
je
sub
cmp
fisubrs
jg
adc
pop
popa
lcall
dec
gs
add
imul
or
cmp
sbb
or
bndstx
push
jmp
pop
cmp
jne
add
push
stc
movsl
out
mov
bound
int
mov
and
jl
daa
pop
cmpsb
out
pop
push
lea
shlb
or
push
cmpsb
pop
lock
xor
mov
sbb
push
jecxz,pt
xchg
xor
cmp
inc
sar
in
icebp
movsl
lret
shrb
dec
mov
and
test
cli
mov
adcb
nop
mov
cmc
roll
mov
mov
in
rolb
ficomps
pushl
repnz
cltd
roll
gs
fwait
hlt
je
lods
shrb
xlat
out
jnp
fdivs
adc
pop
mov
insl
jg
dec
cmp
pop
or
icebp
iret
fstpt
fs
mov
or
pop
sub
or
xchg
or
pushf
and
sarb
sub
cld
push
dec
push
rcrl
dec
inc
sub
dec
mov
je
dec
xchg
gs
dec
cli
xchg
in
and
or
inc
ds
add
fstps
scas
in
test
sbb
or
jae
aaa
jae
dec
add
jb
popf
xlat
jle
mov
out
hlt
addb
lods
push
xor
xlat
out
cltd
mov
psubd
dec
cmpl
xchg
lods
push
pusha
xchg
dec
popf
xor
and
xor
xor
popa
xchg
aad
ljmp
xchg
cld
inc
cs
cmpl
scas
push
add
xor
push
or
adc
jno
or
xor
repnz
push
dec
or
test
movsl
inc
repz
outsl
jl
sbb
push
std
dec
or
xchg
or
test
in
push
jo
or
xchg
out
dec
vpcmpeqb
jmp
inc
gs
sbb
cmpsl
dec
test
shll
dec
cmc
jmp
mov
add
jecxz
pop
push
xchg
xchg
jbe
jbe
int
inc
mov
or
mov
scas
in
or
xor
scas
mov
sti
push
mov
sbb
lcall
push
cmp
pop
cwtl
fs
cmpsb
push
aas
xor
mov
int3
xor
xadd
cltd
cld
jae
cld
popf
adc
stos
xchg
jmp
in
std
mov
mov
daa
add
and
xlat
ja
lret
cmc
dec
mov
scas
lret
lods
dec
div
add
pop
out
hlt
sub
pop
test
sub
xchg
xor
addb
inc
aam
xchg
pop
mov
sti
scas
push
rorl
cmp
icebp
add
int3
dec
je
sar
ljmp
dec
xchg
or
pop
sahf
fcompl
mov
jbe
sub
mov
int3
xor
imul
adc
out
scas
mov
jmp
lea
leave
or
cli
rorl
adc
mov
repnz
xchg
stos
mov
arpl
mull
mov
or
push
in
lea
fwait
or
popa
xchg
out
or
adc
mov
lds
in
adc
addr16
es
orl
outsl
xchg
jecxz
sub
leave
pop
ds
push
dec
aad
push
ret
or
fcmovu
pop
pop
adc
pop
dec
xor
sbb
sub
cmp
jo
leave
inc
rcll
xor
data16
fidivl
popf
jecxz
pop
dec
shrl
jmp
std
cltd
jg
mov
jecxz
lret
repnz
pop
add
jae
dec
lock
mov
cld
mov
xor
sub
mov
add
out
dec
or
and
sbb
shrb
xlat
orb
add
pop
jg
into
lods
pop
sbb
sbb
out
xchg
push
in
cmp
loop
or
test
fsubrs
in
inc
inc
ret
leave
mov
adc
pop
icebp
jl
cmc
jbe
cmp
jo
dec
movl
dec
push
push
jl
mov
xchg
adc
out
lea
jmp
pop
shl
fidivs
fldcw
lcall
add
xchg
add
idivl
jge
testb
adc
icebp
or
mov
xor
pop
rorb
mov
out
in
push
jp
and
jno
pop
sub
stos
adc
stos
sahf
ja
inc
adc
gs
xlat
cltd
clc
sub
xchg
nop
inc
pop
int3
add
gs
sbb
sarl
push
push
fsub
subl
mov
cmpsl
mov
mov
cmp
pop
push
xor
mov
jle
xchg
fimuls
mov
rorb
mov
mov
out
adc
loop
enter
xchg
icebp
insl
push
sti
push
cs
jg
sbb
outsl
dec
dec
xor
pop
cwtl
icebp
inc
lahf
jno
push
es
or
push
loopne
dec
adc
cmp
ljmp
xchg
fs
not
jnp
loope
imul
mov
sbb
and
adc
mov
inc
pop
jne
pop
lahf
dec
or
add
lret
and
push
aas
dec
push
dec
mov
incb
cs
mov
fs
mov
pop
pop
fdivrs
and
inc
jae
mov
mov
sub
jge
xchg
adc
arpl
dec
aam
incb
mov
mov
mov
pop
lahf
adc
xchg
pop
ret
int
push
add
pop
push
fisubrl
sbb
repz
sbb
xchg
pop
push
arpl
lahf
mov
repz
and
enter
es
cmpsl
clc
fimuls
xor
test
push
aam
flds
mov
or
scas
push
xor
pop
fmul
add
mov
inc
or
insb
pop
in
leave
daa
es
push
xor
addr16
fdivrs
daa
mov
sub
jmp
pop
or
mov
push
fldenv
hlt
in
test
outsl
movsb
in
mov
pop
test
loopne
xorb
xor
lret
mov
mov
test
data16
jg
rclb
mov
cmpb
out
into
sub
gs
mov
out
test
push
pop
jecxz
fdivl
test
jge
call
mov
sub
sbb
xchg
adc
es
fdivrp
pop
std
mov
inc
js
inc
pusha
mov
cmpb
mov
test
and
sti
bound
daa
mov
adc
aaa
nop
movsb
push
xor
and
std
push
adc
inc
mov
mov
jo
xchg
xchg
pop
jmp
xchg
imul
xor
int
hlt
lock
mov
lock
cli
sti
aad
xlat
outsb
aas
cwtl
insb
fstpt
sbb
test
pushl
lcall
shll
lcall
and
push
lea
lods
jge
out
aad
mov
jmp
inc
iret
mov
les
imul
dec
add
and
icebp
lods
jae
insb
je
ja
sbb
add
stc
sub
cmp
sysexit
pop
out
mov
jnp
mov
iret
aas
lahf
mov
stos
jnp
jae
mov
xchg
mov
and
stos
lods
hlt
mov
xor
or
pop
inc
mov
imulb
pop
inc
lcall
cmp
sub
push
push
movsb
mov
lahf
push
add
sbb
roll
nop
ret
repz
add
dec
adc
mov
rcl
xchg
mov
out
mov
pop
pop
mov
mov
daa
sbb
ss
divl
dec
pop
fistpl
adc
mov
push
loopne
and
jle
stos
in
cmp
imul
aam
dec
pusha
push
movsl
cli
bound
xor
out
fstpl
gs
jnp
jb
jl
movsl
stos
ds
and
pop
lret
movsl
or
dec
cwtl
xchg
cmp
cmp
rcrb
test
jb
inc
fsubl
adc
push
data16
or
outsl
inc
fsubrs
gs
cwtl
sahf
dec
mov
xor
sti
dec
incb
add
shr
pop
dec
sub
movsb
jnp
add
xor
clc
sbb
inc
fwait
stos
jo
out
dec
mov
arpl
leave
shll
fstl
sbb
mov
pop
xor
inc
ffree
sbb
mov
mov
and
push
ret
leave
mov
jno
xchg
xor
jl
adc
or
int3
nop
shl
and
movb
mov
sbb
enter
mov
push
movsl
mov
out
out
fldl
divb
add
pushf
xchg
jnp
jmp
pop
ror
push
or
pop
iret
or
dec
lods
adc
cmp
fsubl
cld
mov
insb
out
lea
int3
sbb
enter
jecxz
pop
fadds
in
inc
in
push
jnp
push
in
fcmovnu
inc
lock
leave
lock
imul
cs
jo
lods
fs
lods
stos
sbb
mov
push
and
mov
push
call
rclb
out
and
dec
mov
nop
das
rolb
jecxz
push
call
and
int
movsl
xchg
repnz
ljmp
mov
es
je
mov
ret
jno
cmpsl
insb
insb
shlb
les
and
jmp
cmp
pop
adc
dec
xchg
sbb
cmpsb
mov
adc
nop/reserved
lahf
aaa
mov
insb
cmpsl
jo
sub
cwtl
mov
jo
leave
cli
nop
inc
mov
imul
rolb
nop
sub
pusha
pop
push
sbb
imul
cmp
bound
pop
stos
cmc
mov
cld
add
cmp
mov
jg
out
xor
bound
push
hlt
scas
mov
push
cmp
aam
test
call
jns
sub
dec
scas
cmpl
mov
aam
mov
adc
stos
in
lahf
jmp
cmpsl
lods
push
mov
push
xlat
jge
inc
ljmp
dec
or
dec
dec
pop
ljmp
add
add
fists
mov
pop
adc
mov
out
sbb
xor
shl
mov
mov
pop
mov
test
mov
and
leave
stc
rorb
or
mov
imul
cmc
dec
repnz
mov
rorl
mov
cli
adc
inc
xor
leave
loope
sbb
imul
ret
aad
mov
loop
nop
and
jo
repnz
fsubr
and
jle
and
rolb
scas
fs
in
jns
xor
jb
mov
les
sub
loope
adc
add
mov
mov
xchg
mov
dec
sti
les
xchg
popl
jbe
cmpsb
jmp
aaa
dec
ret
imul
dec
cwtl
daa
inc
mov
jne
sbb
cmp
sar
int3
push
ja
push
jae
gs
mov
movsl
lock
cmpsb
and
mov
in
and
adc
adc
push
mov
aad
jo
in
sti
icebp
lret
repnz
dec
inc
fstps
movb
mov
jl
push
xchg
adc
mov
js
xchg
mov
cld
call
daa
cmp
and
nop
clc
adc
int3
jge
sub
in
daa
add
xchg
flds
push
mov
mov
mov
add
test
push
mov
pushf
pop
fnsave
dec
xchg
sbb
push
cmpsb
sub
movsl
or
shrb
lods
loopne
push
out
mov
inc
mov
test
jb,pt
jae
push
dec
out
mov
fstpt
mov
mov
stos
in
pop
cmp
imul
data16
mov
dec
xor
ja
ret
inc
popf
mov
ja
mov
push
in
sbb
cmc
sarl
stos
and
stos
clc
lock
sub
xor
adc
inc
and
adc
cmpsl
out
ljmp
fisubs
xchg
test
mov
repz
lods
insl
or
arpl
xchg
adc
aaa
addr16
fisubl
jbe
out
pop
cmp
mov
imul
mov
ja
ss
cmpsl
stos
lods
xor
pop
insl
or
iret
lret
hlt
dec
inc
sarb
insl
cmc
sub
loope
mov
sbb
mov
sbb
dec
aad
push
and
push
xchg
dec
ret
push
jecxz
mov
push
rcl
into
loope
inc
inc
daa
add
in
and
mov
rolb
push
icebp
mov
jo
hlt
mov
xor
mov
push
sub
stos
out
call
add
mov
sub
test
lds
and
xlat
jecxz
adc
ret
test
mov
push
or
ret
or
inc
sbb
sbb
cmp
lods
xchg
jmp
icebp
mov
add
dec
add
adc
ja
dec
xadd
pushl
mov
pop
or
pop
insb
icebp
dec
mov
jne
outsb
mov
je
add
jns
lahf
fimull
cmp
adc
daa
sub
fcomp
and
ljmp
repz
dec
aam
inc
fwait
out
fcoml
faddl
cmpb
mov
in
cmp
jge
dec
lods
loopne
repnz
repnz
rclb
outsl
repnz
out
jno
sarb
cmp
mov
in
clc
cld
pop
jmp
cmp
loope
clc
sahf
addb
nop
loop
int
nop
mov
mov
fsubs
lock
sub
rcl
cmp
mov
or
test
xchg
addl
dec
imul
dec
call
std
or
lods
adc
daa
cld
repnz
mov
scas
pop
ror
call
push
test
xchg
xchg
cmpsb
std
push
cmpsb
je
imul
mov
in
sti
stos
mov
shll
mov
dec
mov
sub
inc
or
sub
subl
popa
mov
shl
xchg
adc
jbe
test
popf
bound
roll
call
xor
loop
pop
sar
dec
dec
repz
mov
fistps
loop
lods
outsb
jge
std
xor
mov
xchg
cmp
imul
xchg
into
cld
jge
push
sbb
enter
or
pop
arpl
sub
data16
imul
add
in
xlat
adc
aas
fsubrl
frstor
divb
mov
mov
xchg
out
mov
push
scas
sub
pop
xchg
lcall
repz
ds
xchg
rcl
inc
daa
out
cmpsl
adc
aam
inc
mov
sub
fs
cld
jp
aas
lock
out
sub
sbb
and
lahf
movsb
cmpsb
in
cmp
mov
mov
adc
out
in
mov
mov
xchg
jl
cltd
loop
loopne
std
xor
mov
mov
int3
pop
sbb
lods
mov
ficoms
loopne
nop
push
test
les
imul
ret
fcoms
and
cwtl
sub
pop
sbb
sub
push
fidivrs
nop
dec
mov
jge
inc
mov
inc
loop
cmp
cmp
fcoms
inc
ret
xor
bound
ljmp
cmp
test
bound
nop
ret
dec
lret
or
dec
add
out
popl
hlt
sahf
cmp
pop
jp
mov
add
pop
dec
push
insl
jb
mov
xchg
in
inc
scas
inc
in
out
push
out
pop
and
xor
dec
pop
lock
aaa
push
adc
pop
and
in
inc
test
mov
xchg
dec
mov
add
lods
pop
xor
xor
push
sub
and
lret
pop
mov
mov
sbb
sysexit
scas
mov
push
lods
rcrl
and
push
repnz
out
cmpsb
shlb
stos
cmp
xchg
stc
xchg
into
adc
xchg
je
cmp
mov
push
and
adc
leave
mov
bound
xor
jmp
rorb
mov
xchg
or
mov
jae
cltd
mov
leave
xlat
nop
cld
or
scas
cmpsl
cmp
dec
push
cmpps
jp
cmpl
int3
lods
cmp
mov
popa
jb
fucom
mov
jecxz
movl
pop
aad
loopne
rcrl
sbb
into
inc
cmp
pop
push
pop
adc
call
xchg
jg
in
mov
cmp
sub
add
dec
sub
sbb
push
lods
loop
loopne
bound
gs
xchg
push
cmp
jmp
push
and
push
out
mov
mov
cmp
mov
cmpl
outsl
fildll
pusha
xchg
mov
fs
sahf
daa
cmpsb
push
xchg
mov
lahf
xor
xchg
xlat
cmp
xchg
cmpsl
mov
jmp
xor
fwait
or
shl
std
lods
xlat
xchg
fisubrl
inc
fisubrs
xchg
imul
shrb
adc
cltd
cmc
adc
shlb
test
fs
adc
ja
movsl
test
popa
imul
outsb
daa
xlat
outsb
ja
repz
aam
stc
adc
aas
pop
enter
mov
fs
xorb
mov
cwtl
cld
loopne
jmp
or
hlt
push
lret
call
or
and
fstpl
xchg
nop
rol
mov
icebp
andl
cmp
repz
rcl
jg
sbbl
lcall
add
fwait
xor
into
aad
pop
jae
cs
xor
adc
imul
add
pop
fmuls
pop
inc
mov
mov
sub
push
or
movsl
jnp
pop
sub
loopne
lods
lds
loop
lret
jbe
mov
mov
aas
xor
lcall
xlat
jecxz
push
data16
or
out
sub
adc
lcall
stos
mov
idivb
mov
jmp
shlb
lcall
mov
sbbl
ja
test
xor
or
stc
jae
aas
adc
call
arpl
fsubs
or
into
imul
push
add
out
and
insl
push
mov
mov
std
xchg
loopne
cmp
and
pop
and
dec
mov
gs
jbe
jne
xlat
mov
imul
pop
xor
xor
cli
mov
cmpsl
pop
test
lret
or
mov
mov
stc
jb
into
clc
in
sarb
in
and
std
stos
jb
push
mov
stos
cmp
push
lcall
sti
xor
pop
popf
ds
in
jo
cmp
aad
movsl
push
dec
adc
push
add
or
in
xor
mov
enter
jb
test
push
repnz
shrb
pop
aad
add
pop
int3
shrb
xchg
xor
pop
cmp
mov
xchg
xor
out
lret
mov
pop
add
in
adc
xor
inc
mov
and
out
addr16
sahf
xchg
mov
lcall
jmp
and
rorb
inc
sub
lods
mov
daa
mov
add
ficomps
mov
jno
or
cmpsb
repz
cmpsl
hlt
repz
dec
insl
and
pop
addr16
pop
or
loopne
insb
es
fisubs
jne
clc
sbb
push
arpl
mov
daa
idivb
data16
sub
and
aas
jae
push
cmpb
lcall
jmp
fstl
jmp
adc
jp
sbb
mov
fwait
sbb
mov
inc
xor
cwtl
insl
sti
aam
push
jo
xlat
cmpsl
and
test
sbb
icebp
sbb
adc
movl
dec
xchg
pusha
adc
movsb
adc
rolb
add
in
inc
stos
ja
jg
shll
popa
mov
das
and
mov
imul
and
push
dec
arpl
inc
inc
popf
icebp
cltd
cltd
into
add
std
inc
add
dec
je
ret
push
lcall
dec
cmp
xor
enter
cli
roll
jbe
mov
adc
inc
mov
jle
loopne
mov
cmp
in
cmpl
push
out
mov
mull
pop
push
imul
adc
iret
jmp
dec
dec
lcall
mov
cmpl
mov
mov
sbb
push
scas
push
les
mulb
cwtl
mov
popf
and
inc
shlb
rcrl
jmp
pop
dec
push
jg
push
ljmp
pop
push
loopne
punpckhwd
subl
inc
jbe
pop
and
cltd
subl
outsl
dec
mov
fwait
mov
dec
shrb
lahf
scas
lret
test
push
ret
mov
mov
adc
xor
in
shlb
inc
imull
and
sar
imul
fmul
iret
inc
adc
xchg
pop
in
fiaddl
out
cmp
mov
movsl
mov
mov
xchg
pop
add
jbe
in
push
mov
pop
std
pop
outsl
mov
mov
jmp
pop
stos
pop
sbbb
icebp
xor
cmp
adcb
push
xchg
incb
pop
movb
mov
xchg
fcompl
jbe
add
arpl
cmp
sbb
lret
loopne
cltd
fcoml
cli
testb
sbb
lcall
jecxz
sub
data16
and
mov
cmp
push
adc
test
insb
adc
inc
push
push
dec
sbb
sub
jne
pusha
sbb
push
cmp
pop
mov
and
sahf
push
mov
sbb
push
scas
gs
hlt
lods
inc
push
push
bound
push
jp
adc
imul
into
jl
ret
adc
adc
fstl
and
sidtl
ss
dec
add
mov
loope
notb
dec
inc
out
push
loopne
out
std
push
xor
test
xor
cltd
xor
cmp
pop
bound
lret
adc
and
movsb
mov
jmp
into
cli
inc
lock
xchg
cmp
jmp
pop
imul
lret
cmpl
loop
int3
lods
imul
ljmp
test
lods
cmc
mov
cmc
mov
scas
insb
ljmp
int3
pusha
iret
dec
inc
lods
xchg
lock
push
cmp
sbb
testl
cmp
aam
iret
xlat
and
fsts
test
dec
js
rcl
out
icebp
mov
test
fwait
sub
add
cmp
cwtl
adc
cmp
aad
push
aas
adc
cwtl
loopne
fstl
xor
andb
leavew
ret
fcom
into
std
push
sub
in
dec
sahf
enter
or
add
push
push
test
sahf
test
jne
imul
shlw
imul
adc
in
aas
adc
aam
inc
clc
shlb
es
cmpsl
mov
add
sbb
popf
lahf
mov
sbb
fsubl
adc
sub
mov
lret
repz
jo
pop
sbb
sbb
or
jp
cmp
dec
clc
in
mov
js
inc
shll
pop
and
decb
sub
loop
out
pop
mov
and
faddp
imul
sub
fucomi
arpl
test
dec
push
xchg
fsubrs
insb
scas
jne
push
in
push
xchg
das
dec
xor
lcall
push
into
call
loopne
pop
cmp
jne
movsl
pushf
cmp
loope
lods
jns
push
cli
sub
sbb
fwait
push
fbld
int3
mov
dec
push
fwait
dec
je
adc
mov
out
rorl
inc
push
insb
mov
cmp
int
mov
lods
sbbb
imul
adc
lea
cmp
sbb
xlat
mov
out
push
fidivs
cmpsl
in
dec
cmp
out
mov
xor
pop
xchg
and
mov
fisttps
jno
gs
sbb
mov
fwait
movsl
cmpsl
sbb
mov
adc
push
fdecstp
push
mov
pop
fistpl
ficomps
mov
mov
stos
inc
jecxz
lret
out
xor
outsb
outsb
jnp
cmp
aam
mov
lds
in
lods
jnp
daa
inc
sahf
enter
sbb
ret
clc
pop
mov
or
jg
js
jnp
push
inc
fcoms
movsb
cs
xchg
mov
out
cmp
and
lods
mov
pop
lods
adc
pushf
jle
jl
cmpb
mov
sub
xchg
mov
testl
push
shlb
icebp
hlt
inc
mov
fucom
stos
pop
popa
call
mov
lea
or
adc
mov
shlb
inc
mov
mov
push
ret
push
daa
sahf
lods
jge
mov
jl
leave
stos
or
adc
adc
cmp
and
mov
xor
xchg
cmp
sub
insl
ds
push
add
je
fcomps
or
mov
sbb
inc
aam
popa
add
fs
lret
mov
jmp
outsb
or
pop
push
jo
pop
arpl
dec
movsl
add
mov
dec
decl
loope
cld
lods
push
push
cmpsb
cmpsb
add
out
mov
xchg
and
inc
fstps
js
cs
js
movsb
push
add
out
and
jp
jle
popa
dec
in
sbb
mov
lods
or
or
in
push
repz
push
mov
adc
xor
out
mov
xchg
adc
mov
xchg
aam
jl
fildl
xchg
xlat
cmp
call
or
ss
inc
loope
push
sbb
push
dec
clc
in
rorb
call
es
mov
enter
repnz
mov
jl
aam
out
cs
sahf
arpl
mov
das
mov
jecxz
jge
fwait
adc
bound
cmc
lock
out
xor
movsl
cmp
pusha
scas
jns
jle
jmp
jns
and
pop
jae
cltd
ret
xor
sub
hlt
popa
or
cmp
lcall
shrl
mov
in
mov
xchg
pop
ljmp
push
push
xor
push
sbb
testb
leave
in
sub
jp
mov
into
gs
lods
push
and
in
mov
lods
clc
xor
dec
inc
and
popa
push
push
icebp
cmp
pop
dec
cmp
adc
or
sub
sbbb
jae
lea
pop
xchg
cmovp
adc
sbb
vpshufd
pop
cld
outsb
xor
inc
adc
sahf
mov
mov
bswap
fsubrs
xor
orb
stos
jecxz
cltd
movsb
sub
mov
in
adc
js
scas
mov
rcr
fwait
cli
xchg
iret
sub
imul
jmp
stos
cmpsl
jp
cmp
jns
dec
cwtl
in
sbb
jecxz
icebp
mov
pusha
scas
fildl
imul
aam
pop
lea
mov
roll
aaa
cmp
mov
cs
and
jo
mov
lcall
push
or
adcb
outsl
jl
mov
shl
hlt
pop
stos
push
inc
mov
inc
gs
mov
call
jle
mov
add
std
xchg
adc
sub
xchg
mov
pop
jbe
sub
xor
out
inc
pop
xchg
sub
and
sub
dec
lret
jne
xchg
fwait
repnz
stos
std
lret
cltd
cmpsl
cmp
mov
out
neg
sbb
insl
stc
jns
movsb
pop
xorl
mov
mov
xor
icebp
pop
sbb
inc
nop
mov
repz
aam
hlt
rcrb
push
repz
xor
gs
pop
out
mov
ret
sbb
xchg
jno
movsl
pop
xor
sbb
add
daa
sub
xchg
mov
aaa
pop
sub
pop
add
enter
js
mov
lods
xor
jb
sbb
clc
lret
xchg
push
enter
scas
xor
mov
cmp
and
data16
add
lods
lods
inc
test
stos
sahf
xor
pop
aas
xchg
sbb
or
xor
test
mov
int
pop
stos
cld
jnp
outsb
loope
ja
xor
les
clc
jnp
jecxz
inc
mov
out
enter
mov
cmp
jge
ja
test
call
pop
bnd
xchg
mov
out
mov
mov
mov
aad
adc
mov
add
je
jne
pop
mov
fwait
popa
fsubrp
adc
insb
xchg
xchg
lret
inc
lock
pop
lock
int
or
iret
addl
xor
xchg
addb
inc
mov
adc
incl
fptan
insl
dec
pop
subl
hlt
pop
lret
pop
pop
sbb
mov
xchg
ret
push
fmul
inc
xor
cmp
fidivs
mov
dec
adc
ficomps
ja
pop
and
int
pushf
xor
adc
mov
jle
sbb
sbb
mov
adc
jbe
sarb
or
test
inc
mov
adc
sbb
in
mov
pop
pop
insl
mov
push
in
shll
pop
push
popf
test
nop
das
adc
adc
push
xchg
push
push
mov
fnstenv
push
icebp
lds
push
and
xchg
daa
cltd
loopne
push
pop
push
fisttps
mov
push
push
incb
dec
push
cmp
mov
mov
jge
inc
xor
sbb
mov
adc
adc
shll
shlb
cmp
cmp
mov
xchg
out
cmp
es
jns
cmp
out
lcall
in
clc
adc
pop
adc
fmul
push
dec
ret
pop
and
mov
shll
jnp
es
lcall
jmp
or
sbb
mov
rcrl
movsl
xor
rcrl
cwtl
jl
xor
and
test
pop
ret
or
inc
in
imul
rcl
lret
push
sub
fwait
cmp
notb
lret
adc
mov
fbstp
push
cmc
subb
xchg
in
addb
in
pop
inc
sahf
or
roll
fwait
push
iret
add
xchg
cmpsb
jle
outsb
loopne
jno
xchg
xchg
in
shl
push
jle
or
lret
sub
fcomi
fldcw
mov
jae
cmp
insl
out
std
data16
push
jecxz
out
data16
and
arpl
shlb
jge
test
repz
out
lods
mov
addl
cmp
push
sbb
int3
insl
cmpsl
jg
movsl
lds
inc
add
outsl
sbb
aas
add
pushf
cmpsb
std
das
loop
jmp
or
lahf
insb
xchg
rol
stos
xchg
pop
inc
popa
stos
adc
pop
pop
jecxz
movsb
popf
cmpb
aad
loopne
or
cmp
dec
stos
pop
rclb
push
xor
mov
cld
cs
mov
scas
or
les
xor
cmp
loop
lcall
xor
int
dec
and
mov
mov
xchg
cmp
bound
pop
ja
jne
jecxz
ljmp
xchg
loop
add
sbb
loope
loope
sbb
pop
mov
mov
sar
ljmp
cmp
add
push
push
dec
and
ret
pop
rclb
out
adc
sbb
xchg
or
in
add
or
inc
dec
fisttps
xor
std
lret
mov
loopne
arpl
xlat
mov
in
jno
call
cmp
jl
or
cwtl
mov
cld
mov
jl
cltd
fdivl
cwtl
in
dec
cs
dec
mov
mov
subl
out
push
add
mull
lock
fidivrs
mov
adc
andb
xchg
sub
ljmp
adc
pop
movsl
and
adc
xchg
lret
xchg
js
fistpl
cmp
enter
mov
mov
in
fisttpll
testl
sar
and
jge
sub
inc
adc
add
dec
imul
add
cmpsb
mov
movsl
in
test
cld
idiv
sbb
iret
cld
pop
inc
clc
out
in
int
jnp
cs
cwtl
mov
test
cwtl
cld
lea
cli
int3
imul
mov
xlat
ja
lods
jge
dec
push
or
jecxz
push
addr16
add
iret
sbb
cmpsb
int3
sbb
or
mov
push
mov
pop
push
mov
ret
xchg
xor
jmp
or
add
xchg
movsl
pusha
mov
or
fidivrs
sti
xchg
aaa
out
inc
nopl
daa
dec
pop
sbb
pop
jl
lcall
rorb
int3
inc
xor
push
jg
in
loopne
aam
adc
xchg
xchg
int
ds
sub
add
sub
stos
xorl
push
int3
insb
jge
and
das
cltd
pop
xchg
insl
sub
mov
sahf
jecxz
jne
sbb
adc
iret
sub
dec
xchg
shr
outsb
les
shl
xor
jns
fildll
sbb
jbe
imul
movsl
push
dec
fs
pop
jp
cli
and
mov
js
xchg
call
cmp
enter
push
repz
dec
and
jge
sub
jle
cmpsb
imul
mov
push
add
dec
sub
jnp
or
int
sub
xorl
sub
inc
mov
or
or
sub
loopne
ficoms
mov
adc
pusha
je
imulb
leave
jae
jmp
xchg
fidivrs
out
sbb
fdivrp
xor
jb
pop
jecxz
cld
dec
jge
ss
xor
in
pop
ljmp
scas
insb
mov
xor
pop
cmp
out
mov
or
pavgw
xchg
testb
mov
and
in
mov
test
pop
nop
cs
cld
push
jecxz
push
jns
les
pop
lcall
fdivrs
xchg
cmpsl
inc
pop
lods
out
mov
xor
inc
sbb
test
imul
jnp
pop
into
popa
jbe
add
jp
jle
aas
pop
mov
adc
inc
mov
sub
mov
cld
mov
nop
enter
roll
arpl
dec
int
sahf
imul
stos
sbb
ret
les
cwtl
fldenv
aam
ficomps
scas
dec
pushf
cwtl
shlb
pop
fmuls
cli
adc
punpckhbw
out
insl
mov
std
mov
xor
jbe
insl
lcall
adcb
out
loop
xchg
enter
sub
pop
in
push
or
push
div
push
push
rolb
mov
imulb
push
xchg
shl
jno
xchg
xlat
jle
add
cld
xor
ret
mov
mov
fstpl
adc
cmpsl
test
pop
stc
in
dec
repz
lea
adc
push
adcb
sbb
inc
adc
mull
cmp
fstpl
mov
js
jno
dec
outsb
sbb
fs
pushf
jno
jb
scas
mulb
mov
fdivrl
pop
mov
push
test
lret
call
push
pop
push
loope
or
out
mov
fwait
or
pusha
test
fldcw
sub
dec
loop
inc
icebp
or
loope
xor
sub
loop
jne
adc
dec
stos
pop
nop
jmp
xor
movsl
jno
cltd
scas
not
cld
fldt
mov
fnstcw
shll
test
push
icebp
cmp
int
push
push
movsb
dec
cmp
fnstenv
mov
or
fcomps
sarw
cmc
mov
fldcw
push
adc
sahf
or
scas
push
cmp
sbb
out
dec
cltd
loope
sbb
xchg
mov
mov
cmp
scas
jnp
or
clc
pop
bound
out
test
call
es
sub
xchg
je
js
jo
lahf
stos
les
aad
cmp
jl
dec
xor
pop
xchg
pop
cmp
std
in
push
mov
mov
aam
cwtl
push
data16
insl
push
or
push
xchg
pop
or
pop
push
and
loope
sbb
jb
or
imul
xchg
or
adc
inc
mov
add
pop
xchg
cmp
in
sub
mov
or
lahf
add
mov
add
jae
add
repnz
ds
rorl
pop
mov
xlat
jle
xchg
and
mov
sbb
outsb
mov
dec
mov
and
fstl
pop
iret
adc
push
adc
or
xchg
mov
idivb
lods
movaps
pop
rcll
lods
push
fiaddl
in
cmp
sar
push
jbe
inc
pop
cmpsb
int3
in
sarb
pop
loopne
out
push
notb
xor
jmp
rorb
out
push
xchg
pop
jne
mov
ja
mov
fsubr
dec
stos
adc
popf
lret
sbb
call
cld
movsl
jno
add
out
cmp
fcoml
popa
jmp
outsl
sub
jae
arpl
scas
mov
xor
pushf
jb
ss
fs
jmp
outsl
jge
fsub
idivb
mov
cmpsl
mov
add
xor
push
cs
iret
jg
push
gs
sbb
push
dec
int3
mov
mov
xor
iret
push
mov
fsubrl
jp
and
loope
inc
imulb
lods
ret
push
pop
lret
ror
mov
adc
stos
pushl
ret
js
pusha
outsb
xlat
push
mov
inc
inc
hlt
push
xor
jg
lock
inc
inc
roll
or
pop
in
inc
and
dec
mov
sbb
jmp
std
jg
lea
xchg
and
cmp
test
in
dec
mov
jge
inc
test
ss
sbb
inc
adc
xor
or
jp
clc
xchg
pop
aad
fmulp
mov
lea
jl
xor
adc
mov
lcall
mov
sbb
mov
push
mov
imul
pop
sbb
pop
mov
mov
shl
mov
dec
mov
das
fldcw
add
call
fmul
mov
leave
cmp
in
push
lock
dec
mov
dec
rorb
inc
mov
xchg
xor
call
loop
cmpl
aaa
sub
adc
in
call
fcoms
lret
mov
jnp
mov
lahf
push
or
add
push
cltd
and
inc
mov
shlb
out
xlat
xlat
lcall
outsl
mov
aaa
inc
add
inc
jns
push
addb
mov
mov
xchg
sbb
sahf
jg
jae
jo
dec
sti
out
sbb
insb
mov
shrl
push
popf
outsb
lahf
pop
lret
or
push
jle
lahf
mov
xor
pop
adc
mov
sahf
push
filds
pusha
sbb
int3
adc
xchg
inc
jno
xchg
xor
int
mov
icebp
push
jae
pop
movsl
mov
add
aam
mov
jecxz
add
fstpt
sub
mov
ret
push
scas
mov
push
sti
add
insb
outsl
into
inc
aad
dec
movsl
adc
pop
loop
xlat
sbb
outsl
repnz
jl
packssdw
insl
pop
xor
add
xchg
out
inc
xor
mov
lds
imull
jle
mov
fisubrs
pop
inc
mov
repnz
mov
daa
icebp
movsb
inc
call
jmp
scas
xor
push
and
add
adc
or
cmpsb
mov
dec
pop
or
sar
adc
inc
je
imul
out
mov
sbb
sub
xchg
xchg
pop
push
aam
lods
or
jbe
daa
adc
lods
divb
dec
add
loopne
and
jg
mov
aam
mov
js
ret
inc
inc
mov
dec
shlb
mov
popf
jo
cmp
cmp
insl
je
xchg
and
dec
test
mov
xor
lods
ljmp
mov
div
add
add
lret
rorl
out
fdivrs
call
sbb
jno
cmc
bnd
repz
pop
xchg
xor
mov
or
sbb
cmp
repnz
sbb
lahf
shl
mov
dec
cmc
xchg
xor
mov
ds
test
sub
das
jmp
mov
insl
and
dec
in
adc
mov
idiv
fmull
popf
mov
jl
int3
and
mov
adc
mov
mov
mov
mov
cs
std
imul
inc
dec
jmp
iret
and
clc
and
add
js
inc
inc
repz
mov
stc
mov
or
pop
mov
mov
hlt
xchg
std
sbb
inc
mov
popf
sbb
jnp
test
jg
aas
sub
jmp
or
cmpsl
ljmp
lcall
xchg
cmp
stc
cld
jns
insl
addl
mov
xchg
ja
stos
arpl
adc
push
lret
pop
pcmpgtd
mov
mov
mov
push
enter
pushf
addb
pop
inc
or
jmp
and
int
fcmovnbe
call
dec
sub
pop
test
mov
rcll
xchg
push
jg
ret
xchg
loopne
xor
lahf
adc
mov
cs
add
pop
xchg
and
cltd
mov
orl
cli
mov
xorb
xlat
inc
int3
imul
aam
out
pushf
outsl
div
mov
ret
es
fs
mov
mov
adc
fildll
arpl
jmp
sub
pop
test
testl
pop
pop
popa
aaa
lea
jge
inc
fldcw
fiaddl
bound
adc
imul
cmp
sub
loope
mov
in
fs
mov
add
and
sub
adc
xor
mov
cmp
std
add
inc
lods
sub
in
mov
push
jo
xor
jmp
lea
popl
div
mov
jo
mov
jns
insb
mov
sub
mov
mov
dec
mov
jge
sahf
sbb
aad
xor
ljmp
mov
mov
sub
or
dec
hlt
xor
inc
or
ja
lret
or
mov
cltd
jg
cmp
insl
mov
repz
dec
sbb
and
cmpsb
lea
or
pop
lods
mov
stc
out
bound
int
lock
dec
nop
dec
jo
shll
lods
mov
addr16
push
fadds
mov
fsubl
or
jb
shlb
out
insb
sarb
and
sbb
jge
cmpsl
outsl
mov
loope
jp
jno
cmp
lock
out
in
nop
sub
icebp
mov
adc
xchg
out
out
mov
push
arpl
std
xor
movsb
xchg
ss
xor
mov
cli
shrl
pop
mov
sbb
stos
mov
add
lcall
cwtl
outsb
adc
or
lods
adc
pop
clc
push
sub
scas
push
ret
imul
inc
lock
jo
cmp
dec
popa
or
and
mov
pop
shrb
je
inc
test
xor
mov
mov
and
mov
mov
mov
lret
imul
push
mov
imul
movsl
jle
jecxz
je
icebp
ja
mov
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
xchg
fwait
sahf
subb
les
inc
dec
xor
mov
stos
add
pushf
mov
or
out
xchg
aam
call
int3
sbb
mov
imul
icebp
dec
cmp
sbb
rcll
es
mov
int
cmp
fstpl
pop
dec
jae
fwait
xor
lcall
lret
daa
fwait
add
shlb
fldenv
or
xor
loop
add
dec
loopne
arpl
lcall
xchg
fwait
repnz
ja
or
inc
mov
leave
or
cmc
cmpl
lcall
imul
js
lret
dec
push
xchg
fwait
iret
mov
popf
ja
aad
cs
pop
or
push
pop
pop
aam
xchg
cmp
sub
mov
mov
ljmp
pop
jo
ds
into
jge
sbb
mov
pop
push
aad
sar
inc
add
mov
out
push
inc
insl
xchg
mov
cwtl
mov
ret
cmp
cmp
sub
jo
pop
dec
mov
mov
arpl
scas
mov
movsl
dec
in
mov
fdivs
les
xchg
sahf
outsb
mov
or
enter
dec
adc
lret
out
pop
xchg
jp
jb
xor
jg
mov
or
or
sbb
ret
out
sbb
cltd
mov
dec
popa
test
cmp
les
dec
mov
sub
lea
jg
mov
call
xor
rorb
add
adc
inc
inc
shrl
lea
nop
lret
pop
pop
mov
outsl
pop
or
jb
jle
pop
adc
sbb
cmpsl
push
popf
or
in
pop
lock
call
popa
mov
repnz
scas
ficompl
outsl
fstpl
lret
cmp
dec
hlt
mov
mov
xchg
cmp
and
xchg
addr16
in
stos
jg
lret
mov
sbb
stos
into
aad
push
xchg
adc
pop
fcoml
lods
xchg
sar
dec
lret
addr16
testl
fstpl
pop
testl
loop
shlb
push
xor
bnd
jecxz
cwtl
xor
leave
fstpl
insl
mov
cwtl
adc
mov
mov
inc
lds
pop
inc
or
inc
pop
lcall
dec
in
movsb
test
stc
sub
push
xchg
sbb
repz
and
aaa
pop
adcl
addr16
les
leave
add
icebp
in
mov
xor
dec
jg
dec
out
jle
js
mov
cmp
dec
cwtl
cli
les
outsb
inc
jno
mov
add
sbb
push
and
jmp
inc
fsubp
add
aam
lds
mov
and
pop
cwtl
cmp
xchg
jnp
cmc
shrb
nop
lods
xor
mov
das
movsb
lahf
lods
idivb
fsubs
pop
inc
gs
sti
in
xor
lcall
lcall
lret
stos
mov
pop
pop
ja
inc
loop
push
nop
or
xchg
insb
mov
pop
or
hlt
in
in
lret
sub
int
nop
mov
dec
jnp
xor
and
xchg
add
push
adc
cmp
ja
adc
pop
arpl
aad
dec
pop
jecxz
dec
out
cmpsl
cmpsl
push
push
int
jae
mov
pop
xchg
ds
jns
mov
adc
sahf
data16
int3
xor
sub
adc
sbb
stos
mov
loop
cmp
push
xor
imul
pop
cmpsl
inc
dec
pop
push
dec
inc
xor
adcb
scas
sbbl
push
arpl
jae
pop
cmp
scas
pop
xchg
pop
cld
mov
mov
stos
adc
xor
sub
jle
push
aaa
cli
push
lods
and
lahf
aam
dec
fdivs
xchg
cmp
adc
rclb
push
xlat
jns
in
xlat
out
rcrb
arpl
ljmp
out
cmc
out
dec
dec
fwait
scas
jg,pn
es
out
add
inc
aam
mov
and
mov
out
cld
loopne
adc
dec
popa
or
push
jecxz
xchg
jecxz
fcmovnu
push
xchg
ds
jmp
popa
jmp
sbb
ror
mov
loop
jb
dec
and
repz
and
les
scas
stos
jmp
inc
xor
aas
jl
mov
add
xchg
or
fildll
push
adc
jne
int
sub
sbbb
sub
inc
fs
ret
add
mov
lret
xchg
subb
mov
sahf
dec
ja
test
ucomiss
test
std
or
faddp
cwtl
xchg
ja
cmc
divb
adc
outsl
or
sbb
out
sbb
jnp
adc
and
or
mov
fwait
cmp
or
and
push
add
xchg
mov
out
shlb
aas
inc
leave
mov
or
xchg
outsl
mov
dec
cltd
push
repnz
xchg
ds
aad
jge
fwait
loop
pop
jecxz
outsl
push
pusha
ds
inc
fldt
cmp
and
aaa
pop
jne
shll
xor
scas
push
outsl
push
xchg
testb
hlt
fs
leave
add
popa
dec
xlat
fs
in
aam
mov
sbb
add
mov
inc
push
mov
loop
lods
lret
roll
into
jle
sub
inc
xchg
out
push
jmp
jbe
mov
pop
movsl
add
adc
ret
sub
sub
and
sub
frstor
es
mov
push
cmpsb
sahf
mov
cld
cmp
xor
rcr
call
inc
mov
xchg
notb
cmp
insb
push
mov
dec
cmpsb
es
mov
adc
cmp
pop
daa
adc
push
pop
push
mov
icebp
outsb
mov
xor
cli
ret
pop
mov
sub
add
mov
add
push
aam
loopne
adc
xor
in
cmpsl
cwtl
loope
test
jbe
xorl
jnp
inc
xchg
xchg
addl
adc
xor
xor
jmp
pop
out
jmp
lret
push
mov
xchg
addr16
pop
jne
dec
idivb
loopne
push
std
pop
jge
insl
pop
or
mov
cwtl
in
lret
mov
movsl
sub
inc
inc
mov
mov
push
cmp
mov
mov
popa
testb
pop
jecxz
jg
pop
icebp
ljmp
add
push
jp
dec
cld
out
mov
cs
fdivrl
dec
push
data16
ss
mov
loop
xchg
xchg
and
cs
loop
push
jp
call
push
sbb
pop
xchg
add
sub
push
jno
ljmp
and
je
mov
ljmp
outsl
cmp
add
test
pop
and
mov
jb
data16
lahf
xor
int
ret
add
lea
cmpsl
sub
into
xlat
push
dec
stos
sub
and
mov
mov
scas
push
es
mov
dec
lods
popa
xlat
cmpsb
ret
sbb
aaa
inc
jge
shl
mov
inc
jmp
xchg
add
and
lahf
stos
aaa
xor
xor
pop
xor
imul
mov
insl
es
shl
push
mov
imul
fbld
push
dec
in
mov
mov
cmp
popa
xor
rcrl
add
out
in
adc
xchg
icebp
inc
lds
ds
stos
mov
jno
addr16
gs
cmpsl
les
or
out
out
lods
arpl
pop
sbb
jg
jle
adc
pop
dec
sbb
lods
xor
je
in
and
lods
xchg
push
push
testb
pop
js
negb
mov
sbb
push
addr16
sub
inc
mov
scas
jmp
cmp
jmp
mov
mov
ret
xchg
xor
dec
jbe
xor
sub
mov
nop
imul
popa
and
in
cmpsl
daa
aad
cmpsb
adc
clc
aad
enter
loopne
cmp
push
pop
mov
sub
jg
sbb
xchg
push
mov
adc
mov
incl
into
or
mov
insb
mov
xchg
jle
stc
test
lret
cmp
shl
mov
test
stos
cmpsl
insl
add
test
lret
iret
aad
cmp
into
jae
jb
lds
call
inc
enter
subl
mov
dec
aaa
add
mov
mov
lods
repnz
push
mov
mov
pusha
jo
or
adc
stc
test
cmp
mov
dec
cmp
leave
pushf
push
rolb
mov
inc
lea
clc
mov
movsl
inc
mov
shll
bound
adc
mov
iret
int3
stc
pop
xlat
mov
push
pop
lahf
jmp
mov
syscall
insl
out
ljmp
push
push
pop
and
mov
fnstcw
out
inc
push
sti
push
cwtl
sbb
shll
lret
mov
mov
repz
jmp
mov
add
push
andl
mov
out
pop
push
adc
gs
jbe
mov
mov
fcomi
addr16
aam
adc
mov
std
imul
imul
add
inc
aas
in
shll
or
inc
push
mov
nop
mov
push
jbe
xor
and
mov
int
les
ss
cli
daa
loopne
fisubrl
fnsave
lcall
and
pop
nop
add
ret
xchg
inc
jno
xchg
jecxz
aad
out
mov
sti
push
mov
outsb
mov
lock
xchg
aam
and
js
insb
out
push
and
mov
inc
and
clc
mov
js
daa
cmp
arpl
movb
dec
xchg
push
insl
or
sbb
push
mov
and
sahf
pop
pop
jg
test
movsl
jns
xor
nop
jecxz
gs
call
jmp
iret
pop
jmp
je
pushf
jb
jecxz
inc
mov
mov
flds
shll
fsubr
dec
frstor
cli
sarb
inc
inc
dec
inc
push
adc
xchg
jbe
jb
push
imul
cmpl
or
pop
dec
mull
js
iretw
in
xor
rorb
bound
sarb
sub
into
inc
xor
clc
das
stc
sbb
ror
stos
into
cmpsb
iret
add
scas
leave
lods
xor
cs
fisttpll
stos
out
pop
cmpsl
ror
sbb
or
fwait
in
testb
push
ret
adc
pusha
and
mov
xchg
add
inc
push
pop
mov
les
loop
mov
mov
fwait
ret
xor
std
mull
push
xor
jmp
push
clc
mov
clc
xchg
jbe
push
jmp
xchg
jb
xor
dec
cmc
imul
popa
cmpsl
push
adc
mov
stc
or
addl
pop
lahf
scas
mov
popf
push
xchg
sbb
fstpl
and
or
dec
jle
inc
cmc
mov
es
add
jae
mov
inc
std
cmp
jecxz
mov
cltd
xchg
aam
bound
leave
mov
cmp
ja
mov
les
mov
xlat
das
mov
dec
into
jp
jne
sbb
or
mov
xchg
jb
pop
push
and
leave
or
flds
sahf
movsb
movsb
dec
push
repnz
jae
cmp
fsubrl
jae
xchg
leave
pop
shll
aad
mov
mov
in
inc
cmp
xchg
mov
xchg
mov
aad
mov
sbb
jae
pop
dec
sub
push
pushf
add
push
and
das
test
dec
mov
push
add
iret
push
decl
jmp
sbb
std
fcmovu
mov
aad
mov
mov
pop
arpl
xchg
mov
cltd
xchg
shrl
das
mov
aam
push
sbb
mov
pushf
mov
mov
pop
js
push
push
imull
pop
sbb
or
and
cmp
ljmp
jb
push
lea
leave
sbb
std
in
push
mov
push
dec
dec
out
stc
notl
addr16
scas
dec
std
jno
in
dec
ret
stos
sti
imul
shrl
cmp
outsl
enter
lret
insb
loop
pop
std
test
loopne
cld
in
or
jecxz
es
inc
xchg
xor
push
push
mov
sbb
sarl
xor
loope
sub
in
jge
xor
mov
les
inc
xchg
mov
cmp
push
ljmp
in
add
or
aam
loop
stc
jg
cmpsb
fst
pop
jne
adc
loopne
inc
out
pop
mov
adc
int
and
popa
dec
cld
pop
in
mov
call
cmpsl
mov
in
adc
inc
lods
xor
xchg
pop
icebp
in
push
iret
xor
int
rcll
icebp
lock
lcall
pop
jnp
push
cmp
int3
int
push
pop
inc
push
les
dec
sub
mov
hlt
dec
je
sub
mov
aad
add
es
mov
sub
push
or
movsl
mov
nop
push
test
ljmp
inc
std
mov
adc
ss
pop
xor
fdivs
imul
nop
inc
push
stc
mov
mull
xchg
aaa
rcrl
pop
aad
mov
inc
mov
loopne
aaa
jo
outsb
cmp
fwait
cld
js
mov
cs
ja
xchg
stos
repz
pop
aad
call
jg
or
mov
cmpsb
mov
xchg
sub
stc
inc
push
xorl
lods
imul
roll
mov
pushl
add
ret
add
mov
repz
cmc
dec
loop
inc
sub
add
and
cltd
cli
dec
mov
dec
in
ja
xor
push
fucomp
repz
leave
enter
es
mov
test
lcall
sub
jne
mov
push
or
cld
loope
xor
lcall
xchg
call
nop
xor
pop
inc
cmpsb
pop
sub
cmp
test
repz
mov
and
jno
add
push
push
imull
pop
inc
adc
ja
inc
iret
insl
and
push
mov
in
add
jns
outsb
and
add
jo
xorl
pop
push
inc
mov
dec
jne
popa
cmpsb
and
pop
mov
int
xor
lods
jns
adc
testb
sbb
and
cmpsl
push
mov
dec
fldt
dec
in
mov
aad
scas
jle
adc
rol
mull
mov
or
push
pusha
adc
movsl
adc
and
int3
cwtl
mov
out
xchg
clc
push
mov
ja
mov
int
rcrl
lret
cmp
pop
ret
mov
push
mov
or
cld
push
push
lock
in
inc
mov
je
ret
mov
pop
incl
testb
cwtl
mov
icebp
lods
fisubrs
cmp
dec
sub
add
mov
orb
or
fcomi
fisubl
mov
push
shll
fs
imul
jb
leave
mov
lcall
arpl
pop
pop
push
dec
das
push
popf
test
pop
cmp
inc
cmpsb
and
test
push
ljmp
xchg
das
mov
insl
and
adc
stos
dec
ja
loopne
enter
cmp
pop
pop
daa
cmp
movsl
popa
mov
fisttpl
lock
sbb
dec
mov
pushf
mov
fcomp
aad
iret
pop
jae
fcmovne
adc
xor
jne
test
orb
js
fs
adc
outsl
push
push
imul
les
out
out
outsl
sub
sbb
fadd
jnp
mov
in
inc
data16
fidivrs
in
add
and
inc
inc
sbb
outsl
and
jg
mov
ljmp
pushf
orl
cli
ljmp
mov
aas
daa
inc
jle
dec
into
aad
add
xchg
fbld
mov
inc
iret
push
in
lods
jmp
out
bound
cmp
jge
sub
hlt
xchg
sbb
out
pusha
pop
push
jg
in
aam
rorl
fwait
ret
aad
je
push
shlb
sbb
sub
insb
push
mov
add
mov
scas
and
dec
sub
mov
adcl
or
pop
outsb
fadds
jle
mov
shlb
daa
mov
je
push
sub
pop
stos
testl
push
cmpsb
push
jl
ret
cmpsl
xchg
shlb
inc
push
addr16
shrb
xchg
and
ja
clc
aas
and
jnp
test
lods
mov
sbb
cmp
inc
imul
xchg
aas
jmp
sbb
mov
mov
cwtl
sub
cmp
and
mov
inc
ret
mov
iret
call
mov
test
lods
jb
jbe
jle
cmpsb
mov
mov
ror
pusha
cwtl
add
in
fdivrs
es
xchg
dec
pop
popf
int3
mov
sbb
push
sbb
insl
xchg
add
aam
add
loopne
incb
js
popf
aam
stc
out
addr16
push
fstl
or
jae
int
sub
mov
popf
add
popf
add
jns
sbb
cmp
xor
sbb
mov
push
cmp
and
jmp
hlt
and
imul
inc
pop
cmc
and
push
adc
int3
fstpl
add
daa
jge
sub
outsl
dec
js
mov
imul
int
xchg
mov
push
sbb
sub
shl
repnz
mov
add
xchg
push
aas
in
icebp
or
rcll
adc
jge
pop
or
push
insl
rcrb
push
cmp
cli
negb
dec
movsl
and
ficoms
aam
sahf
fcompl
or
scas
pop
mov
adcb
into
and
insb
scas
pop
jl
stc
stc
insl
out
lret
mov
mov
push
xor
jp
leave
pushf
mov
test
fiaddl
addb
mov
in
test
sahf
notb
adcb
cmp
xchg
test
arpl
xor
add
xchg
hlt
dec
jnp
dec
xor
fs
sub
sbb
ds
xchg
inc
cli
push
xchg
ja
cwtl
xor
movsl
push
xlat
aaa
pop
cmpsb
dec
fidivs
lock
loope
in
test
cltd
aas
mov
imul
lret
test
push
jbe
jecxz
sub
cmp
mov
add
push
stos
leave
lods
push
test
test
orb
out
rcrb
aad
loope
dec
xchg
push
shrl
adc
repnz
stos
leave
xor
das
leave
js
fldl2e
int
push
add
cltd
mov
in
aas
mov
fnstsw
mov
xor
or
mov
sahf
mov
dec
lds
mov
cmc
hlt
ljmp
mov
jbe
fnstenv
mov
sbb
adc
leave
ljmp
ds
jecxz
mov
je
push
xor
xlat
sub
lret
repnz
push
adc
pop
inc
cmp
out
push
jo
popf
xchg
in
add
fildl
ljmp
jecxz
sub
unpckhps
dec
aaa
mov
fiaddl
pop
loope
adc
mov
out
data16
push
cmpsl
and
in
dec
mov
aas
outsl
in
std
mov
scas
xchg
inc
add
ds
ja
jo
add
lods
pop
mov
xor
push
xchg
push
insl
xchg
pop
leave
cmp
test
dec
pop
sbb
inc
test
cmpsb
fadds
mov
cmp
xchg
add
js
stos
es
dec
or
std
xlat
fildll
sub
nop
aam
movb
fcmovnb
or
sbb
xchg
mov
adc
popf
ljmp
or
rcrw
mov
js
test
ss
cld
dec
dec
sahf
movl
das
dec
xor
pop
aam
es
mov
cli
add
xchg
imul
inc
pop
scas
mov
call
cmp
sub
popa
rorl
pop
sub
sub
fcmovne
pop
mov
test
dec
iret
cmp
dec
in
lods
xchg
out
jae
lret
mov
mov
enter
iret
outsb
jmp
fidivrl
lret
sbb
faddl
mov
jl
mov
or
popa
and
mov
sbb
pop
pop
hlt
xor
and
ret
lds
jns
into
imul
jge
loopne
or
inc
adc
push
dec
lods
pusha
push
shrl
out
pop
pop
fsubrp
sub
out
jns
sub
and
inc
test
shll
daa
mov
in
push
xor
rolb
sub
fnstsw
jmp
inc
in
ret
movsl
lahf
mov
mov
push
xchg
lods
adc
jle
sti
add
sub
cld
push
cld
xor
or
push
rcll
movsl
imul
clc
inc
adc
scas
inc
adc
stos
and
lahf
xchg
pop
pop
inc
movsb
rcrl
je
cwtl
ds
test
or
scas
adc
mov
ss
rcll
sti
inc
das
jp
test
xchg
gs
sub
pop
fildll
xor
push
mov
stc
inc
jmp
xor
out
inc
sbb
cmpl
xor
mov
int3
fs
cs
loopne
or
mov
push
adc
xor
xchg
adc
movups
mov
sub
pminub
cs
sbb
and
jp
fcmovnu
cmc
push
mov
scas
out
fisubrl
sbb
les
adc
cmpsb
and
push
push
jo
fstpl
out
xchg
sub
leave
xchg
imul
push
push
daa
jb
in
xor
lods
rcrl
mov
popa
cmp
adc
stc
jnp
add
mov
xchg
imul
pop
push
add
hlt
scas
ss
pusha
mov
inc
jnp
test
inc
xchg
jo,pt
pop
jne
push
jp
sbb
or
dec
jae
in
clc
negb
shr
xchg
psllw
dec
cmp
ficomps
rcrl
loope
out
jl
std
repz
jb
adc
and
sbb
stos
mov
fbstp
sbb
sub
push
aas
and
mov
adc
ja
mov
ja
iret
or
sahf
xlat
dec
cmp
mov
jns
pop
add
lret
call
sbb
aas
add
cmp
inc
lods
lret
stos
outsl
jno
scas
dec
icebp
divb
std
les
adc
push
pop
add
mov
pop
lret
add
movsb
cmpb
mov
cwtl
sbb
stos
enter
and
mov
outsl
lea
pop
add
adc
or
notl
lahf
and
mov
shll
cmp
mov
dec
mov
xchg
aam
daa
jb
sbb
mov
sub
pop
push
das
or
and
jg
sbb
lahf
sti
xchg
adc
mov
int3
dec
aam
mov
in
sub
ljmp
sbb
push
push
movsb
fidivrs
xchg
cmp
adc
std
pop
cmp
pop
push
mov
fldt
or
out
adc
xchg
dec
push
adc
sbb
icebp
movsb
arpl
and
xchg
cmp
xchg
dec
push
lret
xorb
std
stos
stos
movsb
cmp
movsb
lock
mov
mov
mov
and
repz
cmpsb
mov
mov
fwait
mov
lcall
into
and
not
stc
sub
sub
mov
push
cs
jnp
adc
mov
test
into
scas
and
test
adc
popa
adc
imul
outsb
dec
cmp
xor
push
or
and
out
cmp
dec
icebp
push
iret
jns
daa
in
add
xor
sub
add
arpl
fxch
adc
mov
clc
ss
ror
in
mov
jno
loopne
ljmp
popf
pop
test
or
imul
push
xchg
xor
jo
inc
orl
test
cwtl
mov
stos
aas
aam
in
add
insl
fstpl
jne
popa
mov
adc
inc
push
add
sub
inc
pop
push
outsb
rorl
dec
cmpsb
fldt
push
sbb
xchg
divl
and
cmp
jp
ja
cltd
sti
xchg
mov
jns
mov
push
aam
inc
push
arpl
jb
cmp
pushf
repnz
cmp
scas
and
inc
push
andb
cmp
nop
and
mov
mov
xchg
and
jnp
cmp
cmpsl
inc
addr16
adc
push
xorl
inc
push
jbe
mov
hlt
fimull
or
ljmp
add
jnp
imul
xchg
mov
js
outsb
push
push
es
jmp
and
cmc
inc
jo
repnz
in
jg,pn
add
lds
push
xlat
cli
pop
sbb
sub
icebp
mov
or
repz
lahf
repz
outsl
add
jns
pop
imul
dec
jp
addr16
insb
mov
pop
ret
adcb
cmp
lods
push
mov
hlt
xor
fnstenv
mov
mov
mov
jle
dec
fistps
fnsave
loopne
in
bndldx
stos
fists
xchg
iret
stc
push
and
lret
mov
pop
inc
push
xchg
loopne
aam
aaa
in
and
dec
fcomp
rorb
sub
aam
cmc
movsl
repz
pop
add
adc
lds
mov
or
hlt
sub
xor
nop
jno
lea
call
sub
lds
cmp
add
shrb
pop
xchg
enter
mov
aas
mov
and
addl
pop
lahf
out
stos
loopne
dec
test
fsubl
dec
rdpmc
push
or
js
xlat
dec
enter
leave
mov
sar
sub
mov
icebp
dec
movsb
dec
mov
punpckhwd
incb
sub
jae
sbb
pop
stc
aam
clc
shl
lea
addr16
je
add
pop
jbe
xor
ret
push
inc
mov
jno
jl
mov
and
iret
les
cmc
push
repnz
xor
pop
mov
xorl
jbe,pt
les
xor
push
hlt
or
inc
sbb
sub
push
add
mov
lret
int3
repz
lock
filds
dec
cmp
inc
mov
and
and
scas
inc
scas
push
jb
inc
xor
aaa
mov
es
xchg
sbb
push
sarb
xchg
popf
xchg
pop
lods
sub
fsubrp
dec
sbb
loop
push
xchg
popf
xchg
sti
adc
add
cld
mov
mov
cld
push
jno
dec
test
into
adc
xchg
data16
xlat
test
and
enter
stos
out
push
mov
xchg
cmpsl
lods
fistps
mov
shrb
in
dec
inc
loope
dec
or
iret
pop
scas
push
roll
mov
test
mov
xor
inc
jbe
repz
mov
xor
push
lahf
xor
sub
test
movsl
out
rol
dec
rcl
jmp
cmp
mov
mov
mov
sarl
add
mov
stc
cmp
sub
and
sti
adc
outsb
sub
addl
pop
xor
iret
mov
lret
xchg
aam
jne
xor
sbb
add
mov
int3
bnd
je
inc
inc
xor
call
jns
das
xor
adc
aas
xor
call
sub
xchg
xchg
adc
fmuls
cmp
sub
lds
sti
int3
and
xchg
fnstsw
call
out
in
sub
ja
add
mov
jns
clc
jns
sub
jge
push
mov
mov
sub
fistps
push
jne
pop
insl
mov
cmp
test
mov
sahf
lock
or
adc
xchg
push
pop
add
enter
push
jo
cmp
out
sub
ret
mov
repz
add
repz
sub
test
push
mov
mov
fs
filds
mov
add
pop
pop
loop
leave
test
lret
repz
ret
ljmp
lods
jle,pn
loop
xchg
xchg
stc
xchg
xor
rolb
jmp
sub
xchg
into
mov
xor
jne
pushf
cmp
push
rcll
test
setbe
lods
into
mov
sub
out
rol
push
outsb
mov
mov
dec
pop
jecxz
gs
cmp
scas
cmp
sbb
and
push
int
scas
clc
fdivrs
adc
fadd
sub
imul
call
in
sub
mov
jl
xchg
loop
in
jne
mov
iret
rclb
leave
aam
xor
jg
daa
sbb
sbb
fs
sbb
fs
outsb
pushf
arpl
sub
div
or
cmp
jo
push
in
xchg
pop
mov
inc
shlb
add
rep
sub
testb
sbb
xchg
stos
mov
nop
pusha
dec
pushf
dec
ficoms
pop
xchg
stos
sti
lahf
imul
filds
sbb
ja
test
in
xor
jle
cs
mov
dec
cli
inc
xchg
out
lock
mov
dec
adc
cmp
ss
inc
test
out
insl
add
xor
pushf
shl
add
jmp
jmp
insb
ljmp
or
repz
mov
popa
jmp
call
push
enter
cwtl
std
movsl
pop
cmp
adc
pop
xchg
call
mov
push
mov
sbb
icebp
insl
jno
inc
out
lods
jns
xchg
pushf
xchg
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
and
je
mov
