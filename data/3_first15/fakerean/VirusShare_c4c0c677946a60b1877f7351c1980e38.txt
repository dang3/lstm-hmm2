mov
add
shr
movb
lea
ror
xor
xor
lea
lea
push
push
push
push
call
cmp
jne
adc
xor
xor
xor
lea
mov
rcl
neg
and
neg
xor
add
lea
push
push
push
push
push
push
push
call
cmp
jae
xor
mov
add
add
xchg
lea
neg
adc
mov
cmp
jne
lea
mov
xor
mov
mov
adc
neg
xchg
popl
xor
not
add
xor
shl
xor
mov
xor
not
decl
jne
cmp
jae
neg
or
lea
neg
neg
call
not
xor
neg
neg
rcl
neg
cmp
jne
call
and
rol
xor
xor
xor
xor
neg
lea
not
cmp
jne
adc
add
not
xor
mov
and
mov
cmp
jae
and
lea
pushl
call
lea
xchg
mov
mov
xor
cmp
jae
rol
neg
lea
push
push
push
push
push
push
push
call
cmp
jne
mov
mov
mov
mov
movl
lea
rol
movl
mov
mov
cmp
jae
xor
neg
lea
mov
not
and
mov
mov
lea
cmp
jae
ror
shl
ror
xor
lea
mov
xor
rol
mov
shr
mov
cmp
jne
shr
and
adc
lea
adc
lea
cmp
jae
xor
shl
mov
xor
add
neg
call
xor
xor
xor
mov
mov
lea
cmp
jne
xor
mov
mov
neg
xor
cmp
jne
mov
not
mov
shr
xor
push
xor
cmp
jae
xor
add
lea
not
not
xchg
neg
not
mov
mov
add
adc
cmp
jae
add
mov
lea
adc
mov
mov
call
and
xchg
mov
mov
cmp
jne
xor
ret
push
mov
add
pusha
xor
xor
lea
cmp
jae
adc
not
and
and
neg
mov
xchg
pushl
call
pop
cmp
jne
adc
lea
ror
not
not
and
xchg
lea
lea
rcr
and
mov
not
cmp
jae
lea
xor
and
mov
inc
jne
neg
mov
add
cmp
jae
not
xor
dec
mov
rcl
xor
ret
mov
shr
ror
mov
mov
shrl
cmp
jne
movl
mov
shl
xor
lea
mov
mov
add
lea
cmp
jne
xchg
lea
neg
mov
rcl
mov
lea
push
lea
push
lea
push
lea
push
pushl
call
cmp
jne
mov
xor
rcr
mov
rcl
mov
mov
not
shl
and
movl
lea
xor
cmp
jae
lea
mov
xchg
xor
rol
shl
lea
lea
rcl
xor
xor
cmp
jne
lea
mov
xor
mov
not
shl
popa
leave
call
call
lea
lea
movl
mov
cmp
jne
call
xor
xor
mov
and
lea
rcr
call
not
and
mov
xchg
and
add
mov
shr
rol
lea
ror
rol
xor
movl
xchg
mov
movl
lea
cmp
jne
xor
xor
movl
xor
neg
xchg
dec
adc
xor
ret
push
lea
push
push
pushl
pushl
call
cmp
jne
add
ror
not
neg
mov
lea
not
lea
push
push
push
push
pushl
call
cmp
jne
lea
mov
lea
mov
ret
xchg
mov
add
not
not
mov
cmp
jne
lea
mov
add
xor
rcl
mov
not
lea
shr
shr
mov
mov
lea
cmp
jne
shl
mov
mov
add
and
neg
inc
je
cmp
jne
not
neg
movl
mov
mov
mov
add
cmp
jne
xchg
xchg
neg
xchg
push
jmp
jle
lcall
insl
and
push
xor
jg
push
rolb
mov
test
repnz
push
dec
adc
push
jle
sahf
xor
or
dec
in
cld
add
xor
imul
mov
rol
xor
inc
test
mov
xchg
mov
mov
or
push
mov
ds
fcomp
xchg
jne
loope
sbb
mov
or
aas
push
cli
stos
je
ds
fnstsw
fcmovu
cmpsl
out
cs
xor
mov
ds
inc
int
aaa
loop
jmp
repnz
mov
jmp
insl
pop
cli
mov
lcall
cwtl
movsb
test
movsl
sub
dec
fcomp
xchg
fistpl
sub
and
mov
and
daa
sahf
sub
mov
sbb
bnd
daa
in
inc
lods
xor
fisttpl
inc
lods
fcmovu
ret
faddl
mov
mov
daa
test
js
adc
push
sbb
jg
push
cltd
js
mov
test
add
sub
xchg
push
pusha
cld
dec
cmpsl
or
xchg
pop
dec
fistpl
push
cwtl
fmull
or
mov
and
in
xchg
jg
fdivs
shlb
and
popf
and
and
xor
stc
pushf
xchg
push
mov
aam
push
in
lret
pop
mov
xor
xchg
dec
push
es
push
or
mov
orb
ljmp
cwtl
or
in
cmp
push
jo
movsl
and
push
push
fcoml
fdivl
pop
in
push
cwtl
fmull
and
lret
xor
gs
cltd
jnp
pop
cwtl
or
push
ret
adc
ret
add
fnstsw
lea
add
aas
dec
ja
mov
std
pop
je
mov
jbe
test
lcall
hlt
cmp
jbe
fcomp
add
std
fs
mov
jnp
jge
sbb
scas
sahf
fdivr
dec
push
sub
mov
mov
fldenv
bound
ja
jbe
cmc
outsl
sbb
adc
call
hlt
and
jbe
jp
out
repnz
inc
adc
jg
stos
fwait
rcr
int
mov
iret
cmpsb
std
jg
mov
dec
ljmp
jb
push
popf
test
sbbb
insb
jl
popf
into
xchg
dec
inc
fiadds
or
sbb
mov
not
push
jg
add
cmp
ss
jbe
push
test
repnz
mov
add
stos
push
jl
add
test
fiadds
xorb
mov
pop
push
add
cltd
jp
jl
push
repnz
jge
out
or
jbe
divb
loope
mov
and
addb
adc
mov
scas
fprem
xor
adc
std
fdivp
hlt
or
es
test
std
or
cwtl
xor
adc
into
mov
jbe
fmulp
je
dec
outsl
sahf
in
jg
mov
ret
jg
xor
std
push
mov
stos
std
jg
adcl
fbstp
out
ds
ja
inc
sarl
stos
sarb
std
or
sub
jp
lods
jle
or
ds
jbe,pt
lds
or
icebp
je
mov
mov
into
mov
inc
adc
sahf
dec
add
pop
xlat
fsts
xlat
fldenv
bound
ja
jbe
cmc
outsl
or
std
out
cmc
pop
jbe
add
sub
aaa
popf
pop
je
jle
std
jg
stos
jl
push
icebp
out
jbe
inc
into
jb
std
jl
ftst
aas
jbe
mov
sbb
xchg
jg
stos
std
cs
xchg
xor
adcb
out
add
aas
jbe
addb
andb
shlb
jle
insl
jmp
adcb
std
add
in
jbe
adc
inc
cmc
fucom
aas
jbe
js
je
std
add
in
jbe
mov
add
and
sti
pop
test
stos
sub
nop
jle
outsl
jmp
jo
mov
stos
xchg
clc
push
add
ss
repnz
ja
std
jg
cmc
hlt
mov
ljmp
ljmp
dec
int
cmp
pusha
and
adc
mov
lods
addb
xchg
push
sbb
add
std
fimuls
hlt
mov
loop
mov
and
jo
loopne
jo
fsubr
repnz
xorb
icebp
hlt
cmp
mov
jnp
mov
inc
decl
push
hlt
cmp
mov
fimuls
jl
mov
jle
pop
dec
xor
push
push
add
jbe
push
sbb
xor
jbe
and
mov
pop
mov
jne
cmc
sub
fistpl
orb
stos
pop
sti
push
cmp
sahf
xor
orb
jbe
jge
mov
pop
decb
jle
xorb
cmp
jl
mov
scas
pop
mov
orb
imul
mov
push
and
movsb
inc
sbb
stos
aaa
cmc
adc
jbe
std
or
mov
sbb
jbe
jbe
jne
cmc
hlt
cmp
adc
push
push
push
sbb
int
jg
fcomip
pop
mov
popf
cwtl
and
jg
stos
cld
shrb
mov
and
jg
stos
push
and
sbb
or
mov
pop
movsl
jle
jb
xchg
aas
push
lcall
mov
jb
repz
mov
inc
adc
sarl
stos
jbe
jle
jg
stos
std
hlt
inc
and
jbe
std
jl
mov
or
arpl
idivb
jle
xchg
jg
stos
add
jle
sub
fiadds
std
jg
jmp
hlt
cmpsl
jbe
outsb
and
or
std
inc
ds
mov
lock
sub
mov
jnp
sar
mov
int3
add
es
lcall
je
cli
jo
push
loope
into
dec
mov
ss
out
jl
cld
arpl
in
jg
mov
jbe
mov
out
callw
les
pop
add
adc
cmp
adc
and
sub
jne
pushf
aam
and
lods
cmp
mov
jle
in
xor
movsl
imul
cld
jge
lods
and
adc
in
outsl
push
cmpsl
push
inc
and
fldt
jns
clc
mov
jne
sub
scas
divl
mov
jecxz
in
fcompl
mull
pop
inc
mov
pop
xor
sub
cmpsl
xor
packuswb
and
jp
cmc
add
fldl
fadds
jg
test
les
cmpl
xor
testl
jle
insb
dec
push
adc
out
je
dec
cmpsl
jg
jecxz
into
fisubs
scas
lods
sbb
les
in
stc
inc
push
xchg
fsubrs
fsubl
arpl
repz
dec
pop
mov
into
jb
mov
push
add
fs
adc
je
das
pop
mov
pop
stos
and
adc
incl
in
pop
inc
test
cli
sub
leave
xchg
arpl
enter
popa
lock
stc
clc
std
punpckhdq
sbb
sub
adcb
pop
pop
and
xlat
add
fildll
jae
out
mov
out
jno
fnstcw
mov
jge
xorl
xor
sbb
loope
clc
in
movsl
pop
and
lods
mov
dec
mov
ds
mov
scas
push
insb
aas
mov
ja
inc
push
jnp
and
and
xorb
push
xchg
or
dec
and
xchg
or
xchg
dec
inc
popa
int
adc
loope
clc
in
loope
outsb
sub
icebp
fs
jg
xchg
xchg
cmp
and
movsb
jbe
xor
dec
mov
mov
cmp
stos
imul
imul
mov
outsb
mov
cmp
add
add
mov
xchg
sub
fdivr
fsubrl
or
iret
scas
inc
pusha
mov
cs
ss
jmp
mov
icebp
jae
mov
jmp
iret
ja
lcall
cli
repz
aad
cli
mov
daa
and
bound
repnz
jb
xchg
adc
adc
dec
movsl
or
jle
xchg
jae
imul
cmp
xchg
jae
lods
mov
jne
nop
fisttpll
jnp
in
mov
push
or
stos
push
repnz
cmpsl
and
or
push
lock
test
cltd
fs
xchg
lea
sbb
adc
jnp
or
mov
insl
or
lds
jle
mov
in
xchg
dec
push
cmpsl
cli
or
mov
test
test
push
add
cli
pushl
inc
inc
cmpsl
add
xchg
add
push
push
fdiv
addr16
adc
movsl
lock
mov
add
leave
outsb
out
aad
jbe
out
jl
loop
js
jno
out
and
or
push
mov
xchg
jmp
cmp
and
and
cli
add
adc
in
adcb
testb
xchg
scas
out
mov
pushf
sbb
lret
jae
cmp
movsl
pushf
adc
jp
adc
or
sbb
loope
hlt
push
jle
pop
fdivrl
sbb
push
inc
adc
jl
sbb
mov
push
ja
test
sbb
pop
nop
jne
or
pop
mov
push
cs
pop
mov
inc
mov
xchg
insl
out
or
push
mov
jnp
call
xchg
out
fisubrs
stc
push
mov
jo
ja
mov
movsl
ljmp
roll
pop
jb
in
cld
or
mov
xor
mov
loopne
fldenv
stos
mov
mov
scas
icebp
inc
jl
jo
pop
adc
sarl
xchg
movsb
or
jmp
rorl
pop
push
mov
mov
inc
mov
jg
or
mov
jbe
rorb
std
pop
ds
mull
mov
int3
push
fsts
inc
jmp
jnp
inc
cmp
or
cmp
hlt
call
ficoms
cmp
push
repz
js
push
mov
int
ds
lret
mov
sub
shl
jmp
jl
in
or
rcrl
in
mov
clc
push
dec
fwait
mov
inc
nop
add
fcomps
cmp
add
subb
in
mov
xlat
iret
ret
cmp
mov
push
mov
pop
xchg
fcoml
adc
inc
push
negl
push
cmpsl
jns
sahf
sbb
nop
imul
pop
push
cmp
adc
leave
mov
fwait
test
es
clc
sub
or
icebp
and
jl
pop
fisubl
xchg
lods
loop
dec
shrl
dec
and
dec
add
pop
imul
mov
sbb
push
xchg
out
mov
adcb
pusha
mov
lods
cmpb
push
sbb
jmp
faddp
cmp
or
pop
scas
jl
sub
dec
add
ret
mov
sub
mov
cli
xor
testb
hlt
xor
pop
sti
xor
sbb
pop
adc
add
mov
push
movsl
and
addr16
push
in
jg
dec
mov
or
dec
mov
xor
je
inc
push
push
imul
ss
es
lcall
pop
cmp
xchg
je
fisubs
pop
dec
push
lock
cmp
insb
incb
call
jne
out
cmp
inc
add
mov
pop
cmpl
imul
es
cmp
inc
ja
lcall
mov
or
shll
mov
sub
cmp
cli
mov
cmp
lahf
push
adc
fistps
pop
mov
push
mov
sti
mov
mov
pop
aaa
iret
fwait
das
push
aaa
jmp
xchg
inc
ret
fcomps
fs
mov
mov
mov
push
and
or
mov
mov
cltd
jmp
test
lahf
push
daa
notl
mov
pop
mov
sti
sbb
mov
scas
inc
jae
loopne
cmp
lret
jecxz
decb
xchg
cmp
mov
test
mov
inc
jle
mov
pop
push
mov
mov
popl
js
outsb
fsubs
fists
inc
dec
pop
cmp
mov
jp
repnz
xchg
cs
imul
jle
lahf
scas
jo
ja
pop
outsl
or
std
mov
adc
mov
stc
add
mov
testb
je
push
clc
lret
imull
jbe
cmc
inc
stc
in
fisttpll
rorl
mov
or
sbb
xchg
jae
movsl
scas
mov
pusha
lcall
fdivl
test
cld
push
loopne
outsl
jle
and
xchg
mov
mov
pop
jmp
fstpl
push
adcb
mov
data16
jae
ja
sub
jmp
or
dec
xchg
cld
lret
test
rcrl
and
scas
decb
fisttps
lcall
push
and
or
push
lods
adc
sbbb
in
cmc
imul
iret
add
insl
xor
and
std
and
movsb
imul
jp
jmp
jle
xchg
je
xor
mov
clc
mov
leave
mov
addr16
mov
test
outsb
fwait
insb
es
mov
enter
push
clc
push
shrl
jne
mov
pusha
dec
les
or
pop
pop
xchg
mov
icebp
jmp
xchg
stos
and
add
insl
jle
cld
out
jbe
push
sbb
je
movsb
lahf
mov
notl
sbb
into
out
out
and
outsl
jnp
je
dec
lea
inc
movsl
push
mov
aad
aam
push
or
lods
cmp
in
gs
mov
test
notl
pushf
loope
or
pop
jbe
mov
jne
pop
sti
pop
imul
xor
cmp
out
js
lcall
movsb
fucomi
out
pop
popa
xchg
pop
pusha
xchg
push
adc
lahf
das
jl
sti
pop
pop
xor
dec
jae
stc
cmp
dec
jae
dec
gs
cmpsl
ja
stc
mov
test
mov
cmp
inc
or
jmp
push
adc
sbb
hlt
fsubrl
jle
jecxz
pop
rorl
sbb
jnp
xchg
or
popa
xor
test
hlt
mov
stos
mov
push
jge
leave
movsb
and
scas
cmc
xor
ljmp
notl
out
pop
adc
ja
aam
mov
js
aam
add
out
sub
test
scas
or
out
mov
leave
mov
add
data16
movsl
lock
jae
push
xor
mov
mov
jo
inc
lret
popa
pop
mov
mov
add
lock
add
add
mov
mov
in
lods
adc
cmp
sarl
setg
sub
sbb
fwait
je
repnz
dec
jle
sahf
aad
mov
xchg
rcll
out
mov
aaa
mov
dec
dec
aad
in
sbb
js
jl
cmp
mov
add
sbb
dec
lods
into
shrb
mov
jno
aad
and
inc
scas
sub
pop
push
je
hlt
xchg
lea
into
add
xorl
ljmp
bound
cmp
or
mov
jno
push
imul
scas
repnz
adc
js,pt
add
fsubrs
mov
gs
shl
jbe
shlb
or
and
sbb
adc
jnp
jo
mov
jnp
jl
and
imul
mov
xor
dec
mov
xchg
or
test
jle
mov
out
popa
addr16
and
mov
outsl
ret
xor
push
push
std
fiaddl
outsl
mov
xor
sub
dec
cli
pop
and
push
outsl
lahf
loop
cmc
pusha
sahf
int
xor
int3
xchg
push
or
push
xor
mov
push
jp
stos
mov
jecxz
mov
mov
call
je
mov
fnstcw
aas
jnp
sub
mov
das
cmp
pop
ljmp
out
dec
daa
cmpb
dec
in
in
call
outsl
mov
enter
mov
dec
xchg
jne
add
rorl
and
fbld
sub
call
sahf
mov
xchg
mov
cli
push
and
mov
filds
jge
lret
mov
cmp
int3
jns
mov
out
mov
in
pop
mov
testl
sub
jle
mov
scas
pop
and
mov
in
cltd
push
push
mov
lods
fwait
mov
adc
or
mov
cmp
nop
movsl
orl
push
cld
jle
rclb
adc
inc
push
mov
lcall
movsb
jo
sbb
lock
addl
mov
or
popa
jne
loope
aam
jmp
loope
jle
and
jl
push
mov
inc
pop
mov
adc
or
fwait
ret
lcall
mov
push
xlat
scas
ret
fwait
or
xchg
mov
push
bound
decb
mov
xlat
pop
dec
fsub
push
test
fidivrs
vpshlq
xchg
in
jne
andb
fs
cld
mov
push
test
sti
inc
mov
xorb
push
cmc
lods
dec
mov
popf
mov
mov
sbb
mov
movsb
out
push
adc
lahf
push
popf
aas
push
jl
push
aas
icebp
inc
scas
hlt
scas
mov
xor
add
call
outsl
rcrb
pop
iret
lcall
outsl
hlt
mov
xor
jle
insb
dec
cmp
fdivr
xchg
mov
jbe
jo
sti
movsl
push
in
jmp
pop
pop
stc
clc
jg
mov
cltd
mov
xchg
jb
pop
cmpb
hlt
pop
addr16
mov
pop
movsb
pop
ljmp
xchg
bound
xor
dec
lcall
sub
imul
es
sti
bound
or
je
or
ret
add
pop
clc
pusha
mov
or
addr16
je
es
fisubs
jg
fwait
data16
stos
sub
sahf
aam
aaa
lcall
xor
sbb
sub
push
out
adc
cld
mov
jae
std
sub
notb
stc
iret
pop
pushl
test
ja
jbe
add
push
xor
mov
outsb
push
pop
test
insl
testb
dec
mov
stc
clc
jl
jns
jae
adc
jnp
inc
repnz
mov
mov
jo
mov
jle
or
fdivrl
push
or
fldcw
fisubrs
cmpsl
bound
es
aaa
and
xchg
inc
jle
cmp
ljmp
jns
cmpsl
mov
push
jbe
andl
stc
add
sub
imul
jne
jns
push
fistpl
push
dec
mov
push
adc
pop
mov
popf
shl
int3
rcrl
ljmp
or
jge
pop
mov
lea
rcl
mov
and
xchg
test
cmc
mov
mov
or
outsb
mov
out
lds
rcrl
mov
dec
pop
cld
test
pushl
fisttpll
cwtl
sub
inc
push
xchg
out
stos
icebp
jp
stos
jge,pt
dec
into
xchg
std
push
adc
xchg
jecxz
cs
jmp
lods
pop
test
inc
vunpckhps
push
pop
in
dec
dec
enter
insb
fxch
mov
xchg
fidivl
ret
dec
outsl
pop
push
cs
xchg
imul
mov
div
gs
imul
imul
dec
in
pusha
or
sub
filds
jl
mov
das
loopne
mov
cli
sbb
pop
aas
scas
adcb
outsl
das
xchg
push
xchg
daa
arpl
ljmp
lods
mov
xor
outsl
xchg
or
cmpsl
jns
in
xchg
aam
pop
add
test
push
add
pop
add
push
push
cld
lcall
push
sub
stc
in
pop
cltd
sti
sbb
movsb
adc
push
lods
jecxz
int
shlb
sub
int3
lcall
lods
jns
mov
cld
mov
ja
sti
mov
jle
out
nop
repz
call
xchg
ja
clc
add
lds
int
int
pop
bound
icebp
js
out
cmp
mov
cmp
fsubrs
pusha
cmp
jle
std
jae
sbb
es
repz
mov
data16
sarb
xchg
or
add
sub
add
icebp
out
pop
sbb
shrb
ljmp
pop
sahf
pop
xchg
push
xsaveopt
faddl
pop
xor
out
push
insl
pop
adc
in
test
xchg
pop
jmp
pop
add
leave
std
mov
and
outsl
adc
insl
pop
sbb
cmp
mov
push
lods
hlt
push
lahf
int3
cld
sub
into
jge
inc
adc
add
cli
sti
aam
popf
cli
fisubl
lcall
roll
fldenv
mov
jge
ds
cmc
les
sub
push
and
cs
ljmp
js
cmp
push
inc
xchg
mov
cmpl
or
mov
mov
mov
lret
popf
adc
cmp
mov
xchg
mov
sti
les
ret
pop
into
pop
and
mov
xor
daa
sbb
jge
jo
loopne
div
mov
jge
mov
insl
inc
adc
mov
sub
testb
dec
imul
xchg
mov
mov
test
jne,pn
xchg
xor
aad
sbb
enter
inc
test
xor
out
out
inc
out
fwait
stos
push
add
push
xchg
shlb
sub
inc
xorb
lods
cld
jge
xchg
imul
aad
push
or
jo
adc
jns
mov
rorl
mov
xor
mov
scas
aaa
das
dec
int
mov
inc
mov
add
dec
jae
push
inc
dec
pusha
jns
jecxz
pusha
test
add
jmp
inc
push
das
mov
inc
mov
les
js
push
fs
jbe
jecxz
das
push
dec
sub
cltd
in
xchg
stos
adc
subb
into
jle
mov
cmp
int
ja
es
mov
aaa
mov
negb
mov
fadds
das
sti
sub
mov
push
push
ficompl
xorb
mov
xchg
xchg
lods
mov
insb
mov
arpl
pushf
inc
addl
fstp
and
cmp
add
mov
dec
out
jp
sub
cmpsb
mov
mov
mov
dec
daa
dec
lcall
out
cwtl
outsl
jp
mov
sbb
jns
jle
cwtl
adc
pusha
gs
scas
xchg
lods
cmpsl
inc
sbb
out
iret
stc
lcall
sbb
push
pop
insb
pusha
out
pop
inc
mov
ret
sbb
push
cmp
int3
lods
or
lods
pop
pushf
sbb
push
push
jo
pop
push
aad
cmp
jle
add
popf
imulb
pop
rclb
inc
loope
or
mov
push
jbe
pop
movzwl
hlt
in
cltd
addr16
bound
pusha
test
pop
inc
imul
pushf
jge
idiv
jnp
bswap
leave
out
mov
or
xchg
inc
or
add
inc
mov
jae
jne
ss
mov
fs
fcmovnbe
aad
add
out
mov
jge
adc
cli
adc
mov
or
clc
dec
and
shl
loopne
out
les
outsl
cmp
jle,pt
mov
sbb
int3
xchg
mov
pop
pop
shr
lret
aam
insl
dec
mov
outsl
insb
cs
popf
or
je
ja
push
filds
push
scas
leave
notl
lcall
roll
and
jb
jns
das
sbb
jle
mov
lods
cmpsl
fstl
ja
js
inc
mov
fdiv
jb
cld
mov
inc
ficomps
jae
mov
sub
pop
and
and
aad
xor
cmp
aaa
inc
sub
add
pop
fstps
imul
in
aas
scas
ret
or
int
jb
stos
mov
repnz
mov
cltd
or
das
mov
gs
fdecstp
and
add
sbb
sub
jo
out
out
mov
fs
cmp
out
test
xchg
lea
cmp
pop
sbb
shr
jl
pop
adcb
mov
aam
jle
subb
xor
mov
stos
mov
repz
movsl
inc
inc
mov
fs
xor
jecxz
lea
sbb
in
test
add
or
testb
inc
movsl
add
aad
cmpsb
cmpxchg
mov
stos
adc
jge
repnz
cmp
or
mov
lock
mov
cli
insb
scas
sti
inc
repz
jmp
jle
push
add
fwait
sahf
fnsave
jmp
sti
jmp
test
fucomp
mov
cmp
xor
jns
jb
xorl
push
xchg
lret
pop
jo
cmc
and
add
shll
jne
pop
mov
repnz
jp
jns
inc
lret
stc
or
xor
mov
popf
clc
fsubl
sub
faddl
bnd
repz
jg
icebp
fisubs
lods
xchg
mov
insl
jle
push
stos
add
sti
test
imull
mov
sbb
mov
loope
push
pop
out
jge
cmp
inc
pop
enter
sbb
add
add
pop
je
pop
stos
sahf
in
xchg
xchg
jns
xor
jge
push
dec
dec
push
jle
stc
dec
fcomip
push
dec
push
scas
inc
mov
mov
dec
imulb
ret
aam
mov
bound
inc
je
push
insb
ja
leavew
push
mov
aaa
stos
jge
popa
sbb
test
jae
jg
pop
xchg
dec
push
sub
stos
jge
xchg
jmp
fnstsw
std
ficomps
imul
imul
or
iret
and
jo
pop
fidivl
pusha
xor
ss
hlt
jmp
shl
inc
dec
sub
dec
mov
hlt
mov
mov
bound
inc
adc
imul
or
mov
stos
dec
minps
push
mov
jne
xor
shrb
aam
inc
std
inc
aaa
dec
jno
mulb
popa
int3
cmp
fdivrl
imul
mov
js
pop
lea
dec
dec
cli
and
ja
shlb
push
jg
add
jno
add
adc
xchg
lidtl
jns
dec
out
jae
out
pop
shlb
fbld
add
mov
ljmp
lea
out
sub
shrl
aad
pop
xlat
jno
and
cmp
add
pop
push
lock
mov
in
std
inc
inc
adc
and
outsb
push
jg
xor
pop
pop
jne
test
mov
and
lods
int3
add
mov
jbe
lcall
xor
cld
test
fmuls
xchg
sub
fsubs
mov
out
mov
movsb
lret
xchg
xchg
lods
jle
jno
loope
ja
pop
pushw
mov
dec
mov
mov
int3
ja
mov
mov
clc
pop
cmp
insb
mov
xchg
lret
xchg
stc
push
mov
or
adc
adcl
inc
stos
fnstsw
inc
lret
mov
jle
add
dec
pop
and
cld
insb
sbb
dec
sarb
adc
ss
push
nop
pop
int
push
lcall
xchg
mov
call
jne
in
inc
and
std
sub
add
jecxz
sbb
repz
dec
lea
pop
push
scas
sub
dec
mov
push
add
fidivrs
in
xchg
inc
dec
jnp
ret
mov
fldt
dec
mov
pop
pop
sbb
lods
jbe
sub
dec
pop
scas
mov
xlat
fsubs
rcrb
arpl
imul
jle
jns
xchg
jg
gs
lods
jmp
je
add
mov
push
inc
xchg
jge
lahf
cmp
cli
cmp
je
push
popf
das
rclb
pop
adc
insl
stos
cmp
sub
scas
jle
popf
inc
les
jge
ds
push
in
ds
or
dec
jno
loope
sbb
notb
insl
ds
mov
shrl
cli
xchg
inc
fsubrs
sbb
cmp
jp
decb
or
addl
in
push
dec
sbb
jae
jge
push
std
mov
cld
test
mov
imulb
loopne
out
fiadds
adcb
inc
orps
repnz
jecxz
enter
mov
fstl
cmp
push
mov
pushf
jmp
xchg
popa
es
hlt
aaa
dec
mov
sahf
rorl
ljmp
mov
lret
loop
sbb
lret
sub
ror
mov
shl
xor
insb
cmp
mov
add
xor
mov
dec
pop
jp
mov
mov
mov
adc
imul
adcl
in
jmp
call
sub
xchg
add
lods
cld
mov
nop
pop
mull
out
out
mov
fdivrs
daa
ja
aam
mov
mov
les
dec
sahf
gs
mov
jge
hlt
sti
int3
jnp
fwait
inc
dec
nop
mov
dec
sti
mov
mov
out
in
movsl
or
mov
push
lret
gs
lods
sub
xchg
cmpl
lds
iret
jbe
pushl
cmp
jb
lds
clc
inc
icebp
out
pop
jecxz
insl
push
icebp
fcompl
stos
pusha
stc
mov
fistps
inc
int
out
cmp
fisubrs
out
andb
lret
je
sbb
push
aaa
add
add
and
dec
mov
adc
test
mov
loope
movsb
mov
pop
aas
push
cld
sbb
sub
cs
shrl
jg
sbb
repz
xor
stos
in
aaa
stos
jge
lahf
pop
icebp
mov
jns
mov
xchg
hlt
add
aad
out
bound
jne
das
repnz
ret
sub
sub
es
mov
lahf
int3
xchg
mov
icebp
sub
repnz
mov
cmp
sti
jge
ds
adc
outsl
ror
lods
jns
das
or
mov
in
bound
sub
inc
xchg
stos
jl
mov
pushf
out
xchg
lods
push
inc
shlb
insl
add
jo
xor
aas
pop
pop
jl
push
jp
test
and
fmull
fwait
notb
push
pop
divl
push
adc
inc
or
test
gs
jge
or
fs
pop
out
push
mov
cmp
lret
in
sahf
repnz
cmp
decl
pop
jns
les
js
stc
mov
pop
xchg
popf
jecxz
add
xchg
inc
fisubrs
xor
and
jle
cmc
xchg
and
add
ret
push
les
inc
xchg
mov
loope
cmp
xchg
mov
adc
xchg
gs
lds
cmc
imul
scas
sub
sub
cld
fldt
and
mov
in
pop
bound
jno
imul
div
loopne
mov
mov
outsb
and
insb
cmc
xchg
roll
sub
fs
sub
cmpsb
in
iret
jmp
out
mulb
pop
subb
ss
icebp
movsl
sbb
mov
stos
inc
and
dec
ja,pt
and
cmpsb
sti
mov
mov
test
jmp
ret
stc
inc
test
andb
mov
push
cld
sarb
mov
add
push
scas
mov
jne
jle
je
lret
mov
scas
inc
loopne
xlat
outsb
cld
xchg
shr
pop
mov
cmp
sti
pop
popf
xchg
or
dec
push
fildl
dec
add
xchg
xchg
fsubl
jl
imul
dec
pop
mov
sti
mov
insl
lret
std
stc
icebp
push
sahf
repz
mov
arpl
and
xchg
sub
mov
mov
movsb
sub
inc
mov
xchg
mov
enter
mov
loopne
lea
and
data16
lock
mov
jb
jb
in
cli
jmp
jmp
mov
cmp
ds
pop
pop
jl
push
adc
dec
in
ret
xchg
inc
aad
cmp
jge
aas
arpl
mov
mov
outsl
out
not
hlt
cld
push
orb
xchg
cld
or
and
inc
das
in
mov
lods
cmp
jmp
jb
rolb
xchg
jge
lods
aad
xor
sub
mov
in
jnp
pop
or
sbb
jae
pop
mov
mov
mov
fidivs
sbb
fwait
xchg
jne
shll
mov
cmp
popa
jb
mov
xor
lret
movsl
fimull
das
mov
mov
adc
idivb
dec
sub
aaa
lods
loop
sub
outsb
xchg
jb
scas
lds
mov
loopne
into
add
inc
outsb
mov
jb
cmp
lahf
ja
adc
cld
mov
mov
fs
mov
push
lds
out
cmp
in
sar
fcmove
cmpsb
fcomps
addr16
and
scas
cmp
rcll
inc
imul
cmpsl
aas
rcll
fidivs
shrb
fiaddl
ljmp
dec
push
xor
ficompl
icebp
scas
jl
xorl
push
bound
jmp
adc
dec
inc
pop
pop
and
daa
sbb
xor
sub
pushw
in
mov
push
je
pop
inc
jnp
dec
iret
mov
ss
stc
adc
inc
jg
pop
insl
test
mov
repz
cmp
insb
sti
out
sti
arpl
push
popa
int3
push
ss
cmpsb
mov
fcmovnb
stc
inc
mov
jp
xchg
mov
mov
xchg
jns
push
sub
adc
push
scas
lods
mov
fdivr
iret
xchg
pop
push
fs
lcall
jae
loope
sahf
clc
movsl
ja
stos
mov
data16
ret
gs
inc
repnz
jmp
mov
sti
sti
enter
lcall
jns
push
cs
nop
inc
or
shrl
mov
mov
xchg
mov
sub
daa
pushf
loop
sbb
fnstsw
movsb
frstor
xor
sahf
mov
inc
repz
pop
xlat
inc
jo
jnp
in
iret
pop
mov
mov
mov
add
adc
xchg
inc
dec
jno
adc
mov
sti
and
jnp
jle
div
cmpsb
or
out
daa
lret
aaa
aam
inc
sub
xor
aaa
jg
sbb
int
jnp
popa
xchg
clc
or
sub
out
mov
es
les
popa
imul
sbb
cld
jo
push
sub
cmp
je
insb
imul
push
outsl
insb
mov
js
and
mov
addb
or
jne
inc
mul
fimull
iret
inc
ljmp
stc
lods
xchg
xor
pop
mov
cmpsb
addl
stos
in
xor
scas
jl
and
div
adc
stos
in
jbe
sahf
jge
hlt
mov
popf
hlt
jo
ja
gs
pop
in
sub
jg
aas
int3
enter
push
fiadds
ss
aaa
outsl
ficoml
mov
cmpl
clc
test
dec
imul
aas
and
and
jb
and
mov
lods
fsubrl
xor
cld
sbb
xchg
idivl
mov
inc
popf
inc
mov
and
mov
in
adc
cmpsb
push
js
sti
incb
push
fwait
loop
jl
xchg
xchg
or
sahf
cld
mov
repz
and
je
fcomp
adc
cld
mov
aam
fstps
jae
pop
adcl
fnstcw
hlt
cltd
push
test
subl
xor
scas
inc
add
gs
sahf
imul
xorl
sbb
pop
mov
clc
cmp
mov
in
icebp
sub
cmc
ret
push
and
jb
in
inc
mov
movsl
dec
xor
ja
add
push
fsubs
and
mov
test
popa
xchg
lea
push
cmp
mov
jge
mov
jmp
cli
outsl
pushf
rep
aad
push
jp
push
dec
out
in
loop
pop
or
les
mov
std
aaa
push
mov
test
fsubrl
mov
xor
push
sub
sub
pop
sub
add
negl
or
cmp
sbb
loope
and
pop
push
dec
das
jl
xor
add
mov
xchg
test
pop
sahf
jmp
jle
sti
vpshld
xor
cmp
cmp
imul
mov
shl
cs
push
add
les
stc
xor
outsb
ja
pop
sbb
int3
lods
jns
je
push
push
mov
shl
add
pop
int3
sub
mov
hlt
cmp
add
in
test
sti
cmp
mov
out
jmp
fwait
pop
lods
js
adc
out
subb
ret
jp
fsubs
cmp
mov
inc
mov
and
adc
ret
hlt
jp
orl
out
jg
cmc
incb
iret
int
push
mov
dec
pop
mov
lock
xchg
dec
dec
int3
scas
outsb
push
repz
inc
bound
jae
clc
outsl
xchg
mov
movsb
sbb
pop
popf
stos
movsb
imulb
stos
rolb
mov
int
ljmp
in
je
scas
xchg
pop
and
out
jno
jecxz
mov
mov
leave
rclb
cs
pop
fdivl
pusha
mov
xor
inc
adc
inc
into
sti
push
insb
imul
outsb
jmp
xor
mov
daa
lea
popa
call
pop
pop
js
cmp
xlat
test
out
aaa
inc
cmpsl
adc
mov
in
push
sub
iret
imulb
imul
pop
or
sbb
adc
pop
sbb
lahf
iret
cmc
scas
cmp
leave
out
int3
loop
xchg
int3
mov
std
cmc
push
cld
add
nop
ds
loop
push
mov
loope
movsb
movd
mov
sub
rcrb
mov
ds
in
in
mov
sub
add
inc
xchg
mov
and
xchg
test
push
and
cld
loope
out
xchg
imul
movsl
lahf
add
lods
mov
icebp
fs
lea
jge
mov
dec
ds
repnz
mov
not
outsl
scas
mov
out
insl
push
add
test
popl
jno
out
jo
pop
in
pop
int3
sbb
inc
arpl
daa
jl
add
lock
cmpsl
fstpl
movsb
adc
call
jne
pop
jl
sti
inc
xor
mov
notb
imul
mov
pusha
pop
push
dec
push
cmp
les
mov
mov
in
xchg
push
out
and
push
push
pop
sahf
xchg
mov
sbb
cs
or
jno
xchg
iret
in
hlt
xor
jns
push
cld
mov
aam
xchg
pop
pop
pop
call
jnp
jae
mul
ds
daa
add
fsubrl
in
mov
stc
imul
xor
leave
pop
ds
dec
loope
cmpb
mov
ljmp
push
inc
notb
frstor
dec
jbe
subl
push
incl
in
das
in
imul
outsb
stos
sbb
mov
stos
out
repnz
in
cmp
aam
ds
je
stos
or
and
imul
add
push
sub
insb
lcall
pop
loop
jne
jnp
das
inc
fs
outsl
mov
fs
dec
jae
adc
mov
inc
scas
add
arpl
push
out
outsl
addr16
push
sarb
out
andb
dec
pop
xchg
movsl
xchg
dec
add
push
inc
test
ror
or
jo
mov
ss
add
ja
movsb
js
mov
mov
adc
inc
into
fisubs
cld
movsb
or
xor
mov
jne
push
add
push
bound
mov
cmp
out
lahf
and
pop
popa
push
inc
xchg
xor
in
jno
and
out
test
cmc
addb
or
sbb
pusha
push
pushf
mov
cmpsb
push
adc
divb
stos
jle
dec
test
lcall
vmovss
or
fadds
jp
lds
mov
mov
cltd
xchg
mov
jnp
cli
negb
mov
mov
mov
pushl
adc
repz
icebp
mov
fs
adc
in
jmp
push
lret
push
mov
jo
mov
dec
addr16
mov
xor
je
test
ret
sbb
cmpsl
cld
lret
cmp
hlt
mov
mov
andl
mov
or
ret
cltd
outsb
jp
add
mov
popf
xchg
xor
loope
filds
insl
and
imul
addr16
xchg
pusha
xor
pusha
pop
cwtl
repz
mov
cmpl
mov
xlat
mov
cmp
cld
scas
dec
xchg
jp
ljmp
insl
jne
test
or
jns
cmc
push
jbe
jbe
testl
xorl
pop
jnp
stos
xchg
inc
insb
hlt
aas
jns
pusha
xor
mov
sub
add
pop
call
xchg
inc
aam
insl
std
insb
sbb
jbe
movsb
pop
je
push
push
das
jne
out
test
adc
push
jle
adc
mov
jo
sbb
mov
in
lods
pop
and
es
aad
cmpl
mov
fnstenv
mov
xchg
out
cmc
add
xor
add
xchg
icebp
jl
lods
xchg
dec
xor
shlb
pop
aaa
.byte
