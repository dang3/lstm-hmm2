sbb
add
mov
fstpt
outsb
ds
test
xor
fcmovbe
mov
daa
and
gs
je
out
jge
dec
cwtl
aas
push
shrl
adc
sti
sub
xchg
xlat
lret
cmpsb
inc
mov
mov
xor
and
jbe
mov
test
or
mov
imul
sti
sbb
test
dec
dec
and
push
leave
pop
std
sbb
sub
das
jecxz
inc
adc
test
in
sbb
es
mov
bound
fistpll
inc
push
mov
xor
rep
and
dec
mov
test
arpl
adc
and
sbb
sbb
cmpsl
xchg
test
mov
out
inc
and
adc
pushf
movsl
sub
imul
push
mov
fistl
sbb
ficomps
jns
roll
imul
out
loope
mov
aam
pop
cltd
fcmove
push
sti
fwait
out
scas
ficompl
add
das
mov
into
pop
mov
cmp
inc
cli
aas
or
notb
sarb
lret
xchg
mov
ret
leave
sbb
push
aas
add
and
ret
xchg
mov
pop
mov
mov
aaa
lcall
shll
mov
and
popa
mov
cmp
push
dec
and
and
inc
adc
into
out
pop
inc
dec
xchg
rcrl
dec
xorb
push
imul
ss
das
sub
mov
jbe
or
xchg
out
xchg
inc
in
sti
sbb
into
mov
out
xchg
xorl
fistps
mov
add
pop
fcomi
adc
addr16
pushf
jg
outsl
jnp
pop
jne
je,pn
pop
repz
int
jno
jno
ja
cld
mov
imul
mov
inc
rcr
inc
aas
push
arpl
jecxz
xchg
lret
xchg
mov
mov
ficoms
int3
leave
dec
gs
mov
dec
leave
aaa
mov
xor
push
out
cmpl
fildl
cmp
or
mov
jmp
loop
mov
xor
adc
push
sbb
lods
push
scas
cld
in
aaa
lret
cmp
adc
insl
or
ficoms
push
inc
and
cwtl
stmxcsr
jne
std
inc
dec
mov
mov
mov
mov
inc
cld
lock
jle
in
and
mov
dec
addr16
jno
and
push
mov
pop
xorl
gs
mov
stos
nop
mov
fwait
clc
pop
cmc
addr16
ljmp
lcall
test
pop
xchg
jno
addl
test
lock
jle
adc
mov
mov
xchg
sub
or
jne
jge
push
ljmp
pop
dec
jo
xchg
xchg
sbb
call
push
lahf
aaa
stos
or
add
js
xor
cmp
mov
sbb
mov
je
mov
push
or
lods
lret
cli
loope
test
sahf
rcrb
out
jp
ss
out
inc
ljmp
mov
and
cmpsl
sahf
pop
pop
lods
lahf
inc
and
mov
push
sbb
mov
shl
les
cs
inc
mov
pop
jb
icebp
add
mov
je
out
popf
xorl
xchg
out
outsb
hlt
sbbl
ljmp
fs
stc
in
mov
movsb
jecxz
ret
sbb
movsl
aam
dec
sti
adc
test
loop
or
repnz
inc
jnp
adc
and
xchg
push
push
jg
mov
int
xlat
fidivrs
imulb
mov
and
sub
pushf
mull
lds
xlat
mov
imul
data16
pop
mov
lahf
xchg
pop
cwtl
jle
inc
xor
pushf
adcl
inc
jae
push
ds
xchg
enter
xlat
loope
dec
dec
xor
inc
lret
pop
icebp
les
sbb
leave
and
repnz
lods
mov
mul
xchg
jb
pop
jno
push
enter
xchg
add
cmpsb
sbb
sbb
iret
sub
cmp
lahf
cltd
aad
aaa
and
inc
mov
xlat
and
and
icebp
psllw
movb
or
ljmp
mov
iret
sti
cmp
jg
iret
outsb
jnp
stos
es
inc
rdtsc
mov
out
bound
fadds
and
test
jle
cmp
push
cmp
sub
jnp
daa
stos
cmpsl
mov
scas
and
repnz
cmp
out
lea
das
ftst
popf
ret
js
cli
outsb
jo
xchg
xchg
adc
jecxz
xor
xchg
cmp
jne
into
jmp
popf
sbb
scas
hlt
and
mov
mov
or
cmc
pop
rcrb
xor
daa
call
ficoms
lcall
cmovns
cmp
sbb
jle
xchg
mov
cmp
flds
push
mov
mov
inc
loope
popl
loope
stos
jae
pop
insl
cmpsb
das
mov
ficoml
push
push
int
ret
bound
xchg
adc
adc
dec
mov
push
adc
push
xor
sub
dec
fisttps
out
out
testb
xchg
cmp
cmp
mov
pushf
and
fisubl
dec
xor
aad
icebp
ljmp
subl
arpl
push
mov
pop
or
adc
pop
mov
add
mov
je
test
mov
movsl
mov
fbld
shl
xor
push
jbe
test
icebp
rcrb
imul
in
inc
adc
add
aaa
xchg
fbstp
test
popf
lds
dec
add
out
outsl
cmp
push
xchg
fstpl
inc
cmp
sub
lret
out
imul
cmpsl
incb
ret
mov
jp
out
jle
dec
cmpsb
xchg
mov
stos
pushf
jnp
das
inc
je
fadds
stos
jae
sub
ret
pop
pop
dec
lock
mov
sbb
or
pop
fs
cmpsb
js
add
aam
rcll
pop
jno
xor
in
into
and
fmulp
xorb
xor
lods
and
dec
mov
in
mov
push
xchg
pop
in
push
cltd
dec
lret
lahf
stc
mov
fstpt
lock
cmpsb
dec
xchg
enter
add
push
stos
or
cmp
xor
adc
xor
fcomps
fs
hlt
sub
mov
inc
sbb
test
xchg
fwait
repz
movsb
int
adc
sub
pushf
cld
jns
ljmp
lret
adc
dec
and
push
fldl
cld
jg
pop
ret
sahf
sub
jno
inc
add
adc
push
repnz
mov
xor
lods
or
mov
sbb
cmp
sbb
jo
mov
dec
add
xchg
sub
decb
aas
add
into
xchg
js
or
mov
sbb
stc
push
in
mov
enter
lea
aaa
or
sbb
or
hlt
mov
cmp
ss
cltd
mov
insl
fistl
test
cmp
lods
dec
sub
scas
xchg
mov
sbb
fiaddl
fabs
ficoml
sbb
jbe
inc
mov
outsb
outsb
or
xchg
push
push
mov
in
mov
jmp
fnsave
aad
jne
shll
popl
and
pop
xorl
in
out
test
mov
push
mov
push
insl
cltd
aas
adc
mov
cmp
cmp
insl
cld
int
lcall
xor
ret
pop
sub
jno
sahf
mov
mov
data16
shlb
push
out
fnsave
xchg
in
in
xchg
cmpsb
lods
add
pop
and
into
pop
loopne
test
fnstenv
rclb
push
mov
push
in
inc
ss
cmp
mov
cltd
dec
inc
xor
rorl
adc
mov
mov
jbe
not
xchg
xor
fadds
adc
sti
fadds
mov
jne
push
fidivs
push
mov
lods
mov
das
outsb
ret
mov
imul
or
sarl
imul
mov
out
sub
mov
dec
and
js
push
inc
mov
adc
insb
jbe
add
push
std
ret
add
sub
jne
jo
pusha
imulb
mov
repz
sub
mov
adcl
adc
dec
movsl
imul
jbe
loope
mov
repz
inc
mov
fsubl
push
jecxz
test
testl
xchg
fcmovnu
pop
cs
add
jmp
andnps
inc
sbb
dec
push
bound
push
scas
xor
sbb
inc
movsl
ret
inc
fnstcw
fcmovnb
inc
or
add
lea
or
sub
sahf
mov
loope
xchg
cmpl
mov
ret
repz
push
test
pushf
stc
ljmp
cmp
inc
mov
cmc
adc
sub
shlb
outsl
xlat
test
add
mov
lods
push
mov
push
sbb
push
and
dec
bound
mov
test
adc
jns
mov
mov
pop
daa
jne
test
jb
and
aas
inc
mov
sahf
dec
lds
fwait
xor
enter
pop
pushf
pop
movsl
in
mov
inc
in
sub
adc
mov
mov
mov
mov
shrb
fcmovu
or
lcall
ds
jns
pusha
push
loope
or
dec
rclb
push
es
dec
insl
psubsw
out
imul
jb
daa
sbb
push
jnp
mov
stos
jge
stc
rolb
adc
ret
fnstcw
pop
xchg
sbb
dec
xchg
aas
leave
jecxz
xchg
sti
push
das
shr
lret
sbb
mov
addr16
cwtl
je
mov
mov
je
xlat
mov
cmpsl
shl
das
lret
mov
mov
adc
loopne
outsb
ljmp
lret
sbb
loop
scas
mov
ret
mov
leave
mov
jge
pop
or
repnz
int3
rcrb
mov
add
shlb
je
ret
pop
xor
scas
jo
jge
int3
add
or
sbb
nop
int3
xlat
add
mov
pop
cwtl
dec
loop
xlat
xchg
ret
dec
movsb
popa
mov
and
xchg
incb
cli
or
mov
jmp
nop
mov
xlat
insl
mov
nop
adc
popa
fmuls
iret
ja
in
call
out
sub
das
jmp
adc
push
jns
push
xor
popf
ds
xchg
jg
sbb
add
addr16
push
cltd
push
pop
xor
add
and
inc
push
add
xchg
or
fisttpll
lods
jmp
and
xor
add
out
or
dec
ds
jnp
push
enter
pop
in
push
outsl
inc
inc
push
xlat
jne
mov
pop
cs
not
or
sahf
xor
adc
ret
cmp
push
rcrl
push
mov
cmp
movsb
and
sbb
mov
mov
shll
cmp
push
mov
leave
mov
rorb
in
lahf
and
and
sub
cld
or
fildl
push
popa
lahf
enter
clc
jmp
mov
mov
push
mov
pop
pop
inc
push
imul
lock
pushf
jge
loopne
addr16
aad
inc
xchg
rorb
and
and
and
cwtl
adc
jmp
daa
idiv
sbb
push
inc
daa
sub
sub
outsl
or
imulb
cmp
movsb
f2xm1
mov
mov
and
imul
std
mov
out
outsl
stos
pop
gs
jns
sub
test
sbb
xchg
dec
inc
push
ja
scas
and
addr16
dec
adc
push
and
sahf
lret
push
addr16
jmp
sbb
push
mov
aaa
stos
arpl
sub
and
out
dec
mov
xor
sbb
mov
and
mov
or
cmp
mov
dec
jmp
jbe
aad
fnstenv
mov
dec
test
xor
fcomps
rcl
adc
test
pusha
jns
repnz
js
adc
adc
rdmsr
xor
addr16
pop
pop
lods
mov
push
testl
sub
xlat
xor
das
stos
sub
xchg
shlb
test
lret
mov
fcoms
pop
adcb
xor
je
fstpl
outsl
jle
out
loopne
dec
adc
lods
mov
mov
leave
pop
jns
jne
daa
out
xchg
repnz
pop
addr16
jg
iret
jo
push
fld
cmc
mov
out
mov
jmp
movsb
mov
daa
mov
enter
dec
pop
rcr
adc
dec
aas
cmc
inc
ja
xchg
jns
aad
and
out
shlb
out
cmpsl
xchg
enter
imul
jae
movsb
incb
into
call
xor
js
test
mov
xchg
push
in
fdivs
xor
movsl
cmp
pop
jp
js
sub
dec
lcall
jno
ret
sbb
jmp
cmp
mov
bound
movsl
mov
mov
in
sbb
enter
loope
cwtl
push
cmpsl
or
push
adc
stc
sub
push
movb
shll
sbb
jo
mov
repnz
das
andl
jne
fdivrs
jns
pop
mov
jb
pop
inc
jp
clc
pop
sub
nop
mov
ret
aas
lea
jbe
rol
in
ljmp
cmp
lret
and
adc
out
pop
cltd
or
stos
lock
adc
mov
pop
add
jle
lcall
pop
cmp
jecxz
push
fisubrs
mov
inc
jbe
fs
adc
push
cmpsb
adc
iret
or
mov
and
jle
sbb
cmp
out
mov
pop
push
lret
leave
jmp
das
mov
push
cmp
fdivl
emms
pop
fbld
rcrb
inc
cld
data16
mov
and
jo
movsl
xor
mov
xchg
xlat
cmp
enter
fdivr
add
imul
push
jno
in
cmp
movsl
mov
cmpsb
outsb
jno
cmpsb
and
mov
mov
aad
inc
mov
mov
cmpsl
xchg
loope
dec
pop
cmpsl
cmpsl
dec
pop
iret
sbb
cld
lcall
cmp
les
repz
ja
ss
inc
xor
sar
clc
sub
jle
movb
jle
in
xchg
sub
add
cmp
repz
cmp
lods
jnp
fldenv
fmul
lods
jb
sub
jecxz
popa
mov
int3
or
les
lods
pop
iret
rorb
je
icebp
or
cs
in
ja
scas
int
ror
jl
xor
jbe
dec
mov
sbbb
jb
fwait
push
sub
inc
push
andl
jnp
pushf
ljmp
popf
cmpsl
inc
movsb
push
inc
lock
mov
or
jp
or
jnp
xchg
loope
subb
mov
test
jo
mov
lcall
out
fstpt
imul
push
outsl
sub
rcr
sti
xchg
cld
mov
add
je
fisubrs
nop
dec
jb
notb
lret
insb
push
mov
sarl
sti
shrl
cmpsb
cmp
in
stos
ja
out
jl
shr
sub
or
out
aaa
inc
inc
and
movsl
mov
jp
out
mov
mov
stos
dec
mov
sti
dec
loop
ret
jp
or
rclb
ds
and
jb
jl
call
jo
jne
cmpsl
mov
cmp
jmp
testb
cmp
scas
jo
xchg
aad
lret
add
in
add
subl
add
lretw
push
mov
xor
pushf
cmpsl
push
jbe
cmp
jae
sub
and
cld
out
mov
leave
dec
fidivrs
push
xchg
shlb
movsl
cmc
insb
mov
add
loopne
add
sub
sub
cmp
fisttpll
fcomi
lea
pop
cmp
and
push
fs
test
xchg
idivl
mov
and
or
adc
mov
xchg
push
add
add
fwait
or
outsl
test
int
mov
jno
push
push
cmpsb
addr16
sbbl
gs
mov
push
popa
inc
cmp
adc
pop
mov
movsb
rorb
jp
jns
ds
cli
add
or
into
inc
xor
fmuls
and
push
aam
and
push
push
outsl
pop
insb
jbe
sbb
or
or
inc
aas
jne
iret
ja
adc
xor
out
repz
cwtl
stos
into
outsl
or
add
je
das
jl
jb
pusha
jle
adc
push
jge
lds
fnstsw
push
xlat
cmp
ret
callw
inc
call
scas
nop
jae
pop
js
fdivs
add
pop
xlat
add
lret
dec
subl
scas
lock
and
inc
je
jb
lret
sahf
push
shlb
add
sub
shll
push
cwtl
xchg
push
insb
jae
test
packssdw
sbbl
mov
cli
mov
push
cmp
jl
mov
adc
cmp
test
cld
mov
in
enter
cs
dec
inc
in
or
mov
xor
mov
int3
sub
test
stos
stos
push
repz
xchg
jno
icebp
in
popa
pop
filds
into
movsl
jnp
lcall
loop
dec
cmp
mov
fsubrl
mov
dec
xlat
aaa
dec
mov
xchg
xchg
test
jge
cmp
movsb
cltd
testl
cmp
ss
out
add
or
fsub
int
int3
cld
xchg
xor
xchg
hlt
cmp
lcall
stos
xor
mov
orl
mov
xor
cmp
mov
sahf
test
lret
adc
outsb
loope
and
and
or
ds
stos
or
loopne
xlat
ja
lcall
rcrl
inc
aas
add
or
sub
mov
and
mov
sub
imul
xlat
lock
mov
imul
jo
imul
test
aad
int
pop
in
sub
pop
mov
cmc
mov
cmp
jl
cmpsb
sub
aam
dec
push
movaps
mul
ja
icebp
jno
outsb
mov
or
or
lcall
xor
mov
repz
dec
push
add
xchg
loopne
cmp
in
mov
repnz
lods
or
add
jecxz
popf
xor
mov
sub
in
dec
std
lods
bound
push
dec
dec
enter
fs
sbb
fcomp
fistps
pusha
or
out
jno
loopne
andl
rorb
jnp
inc
repnz
mov
sub
inc
out
popa
or
sbb
xor
pop
ret
dec
jns
js
cmc
lea
xchg
movswl
xor
sub
mov
push
add
ret
lcall
add
push
pop
xchg
pop
push
in
xor
lock
mov
repnz
aam
mov
push
loope
or
imulb
mov
jg
nop
or
mov
scas
test
ljmp
sub
xor
movsb
jp
xchg
or
jo
mov
cmc
or
xor
and
aas
sbbb
jns
pop
push
jb
dec
dec
inc
push
dec
xchg
gs
jbe
inc
gs
sbb
sbb
es
push
repz
adcb
mov
lock
lret
inc
sub
test
test
fmuls
push
cli
mov
lmsw
in
push
and
mov
cwtl
ret
sub
adc
dec
ds
int3
daa
jb
arpl
inc
rorb
push
outsl
test
jp
call
push
mov
sbb
rolb
mov
jbe
dec
jb
inc
int
sbb
push
or
xchg
ds
sbb
cmp
lretw
add
int3
jbe
fsubrs
rcrb
shll
rcr
negl
xchg
call
mov
xchg
inc
aad
dec
int
scas
jl
push
rcl
inc
jo
dec
mov
cltd
aas
outsb
mov
ja
fmul
mov
leave
loope
and
ret
cwtl
mov
dec
cltd
in
imul
jae
leave
dec
idivl
es
lret
add
lret
das
dec
pop
mull
and
lock
popa
add
scas
fsubrs
push
jmp
xor
pop
in
mov
mov
insl
idivl
inc
xor
jno
je
in
mov
xchg
pop
cltd
cli
jae
into
dec
add
pop
ljmp
rorb
loope
out
xlat
fiaddl
test
pop
mov
aad
cmp
mov
dec
aam
fdivrs
test
jmp
or
mov
mov
not
inc
test
fs
fcomps
movsl
enter
push
cmpsb
mov
sub
lods
lods
insl
xchg
movb
xchg
dec
xchg
or
push
jns
icebp
xchg
and
jae
cmpsl
mov
sub
sbb
push
popa
lds
xchg
ret
cli
loop
xor
cmp
fidivl
jecxz
sub
movsb
xchg
xor
mov
or
stos
mov
and
push
sbb
ljmp
adc
mov
mov
push
or
loopne
repz
leave
cmp
cmpsl
xchg
jp
ljmp
dec
sub
pop
mov
inc
sti
xchg
mov
sbb
pop
inc
aam
mov
inc
jge
cmp
sbb
cwtl
jecxz
lret
xchg
aad
ret
adcb
lea
inc
pop
test
aad
mov
mov
js
pop
or
decl
rep
aad
lods
xchg
push
das
stc
adc
jl
fsts
jns
and
scas
adc
jb
xchg
insl
cmpxchg8b
js
xorl
xchg
cli
push
and
sbb
dec
fs
mov
div
idivb
ficoms
xchg
mov
push
imul
lods
call
stos
sbb
cmp
cmp
xchg
int
ret
test
lret
hlt
pusha
adc
jns
pop
out
inc
in
mov
mov
and
outsb
mov
xchg
lea
mov
mov
add
les
sub
xchg
daa
pop
mov
or
in
jge
inc
dec
iret
mov
lea
icebp
lods
movsb
mov
fisttpll
fisubl
cmpl
nop
sahf
jne
andb
sub
xchg
sub
in
xor
or
or
loop
cmp
into
cmpsl
ret
ret
filds
cmpsl
dec
pop
ret
jp
sub
mov
shrl
aaa
iret
jae
or
les
int3
out
clc
mov
test
jo
test
loopne
sbb
iret
in
or
push
or
sahf
inc
cltd
inc
scas
loope
dec
and
imul
and
loopne
mov
fidivrl
xchg
in
jmp
pushf
out
fildl
mov
das
jae
test
int3
mov
es
movsl
pusha
push
imul
mov
insb
mov
out
imulb
notb
sbb
imul
xchg
fmuls
pushf
pop
add
push
jmp
pop
gs
xor
ret
les
adc
inc
and
pop
sub
adc
pop
outsl
lds
pop
jnp
adc
fadd
jge
test
adc
or
dec
lods
fsubrs
fstps
inc
push
mov
xorl
push
cli
dec
mov
loopne
jecxz
lods
nop
xor
inc
xchg
xchg
out
cmpsb
sub
and
mov
and
pop
jnp
jne
mov
out
inc
sub
cmp
push
push
cmpsl
xchg
or
jle
push
sbb
inc
dec
mov
std
jnp
push
fbld
cmpsb
mov
je
jbe
cmp
jl
inc
jns
cmp
xor
test
mov
lret
cli
sbb
xchg
out
pop
seto
jno
push
fildl
jecxz
ret
push
mov
push
leave
not
or
xchg
mov
leave
mov
cmpsl
push
xchg
jne,pn
pop
leave
xor
aam
jns
mov
fcmovnb
aas
jl
lock
sti
jmp
xor
mov
pop
std
lcall
dec
cmp
adcb
adc
mov
jae
jno,pt
xor
xor
jmp
push
xlat
add
int3
and
movl
add
sarb
add
stc
mov
sbb
sbb
push
bound
dec
xchg
jae
adc
ja
mov
add
sbb
xchg
sar
dec
push
insl
pop
sbb
cmp
mov
mov
aad
inc
iret
push
add
rcll
rorb
push
loop
cmpsb
fsubrs
xor
loop
clc
and
cmp
sub
icebp
inc
xchg
push
sbb
fwait
push
int3
mov
shl
and
inc
stos
imul
mov
inc
xchg
loope
xchg
push
inc
cmpsl
or
mov
loop
and
push
mov
popf
jno
jg
mov
jno
je
sbbl
push
jo
mov
push
mov
in
hlt
dec
ror
and
hlt
xlat
cmp
cmpsl
add
push
outsl
mov
jb
push
sub
fwait
insl
push
lods
and
dec
data16
ret
mov
loop
mov
xchg
repz
mov
lods
ret
cmpsl
mov
fidivs
push
out
push
mov
mov
mov
mov
das
sub
jp
cs
repnz
andl
push
push
ds
push
mov
inc
sub
jo
clc
popa
pop
pop
cmpsb
jne
xchg
sub
shll
arpl
push
add
arpl
add
push
outsb
inc
add
lock
jl
testb
mov
mov
inc
cmpsb
sar
sbb
add
jle
shlb
loope
vcvtps2pd
xchg
xor
fcmovnbe
cmc
call
mov
mov
jp
cmp
cmp
cmp
dec
mov
aam
jg
lcall
pop
sbb
sub
push
or
les
les
imul
sub
adc
shll
imul
cmpsl
jle
scas
lock
cs
ret
adc
jp
sub
insl
lret
es
jb
xchg
cmp
fcmove
cmpsl
leave
sbb
or
xor
sbb
mov
or
mov
fbstp
andl
les
sbb
inc
pop
mov
inc
mov
cmc
push
xchg
xchg
adc
and
mov
xor
dec
push
mov
clc
or
or
mov
sbb
mov
sahf
and
decb
cmp
pop
jmp
mov
mov
sub
mov
in
adc
test
stos
mov
idiv
push
leave
sti
inc
movsl
ret
xor
mov
lcall
or
push
pop
mov
call
sarl
jo
outsl
mov
mov
mov
lret
shll
pop
add
out
fst
cwtl
sbb
jg
inc
cld
inc
lret
lret
scas
repnz
xchg
cmp
je
div
cmp
bound
ja
dec
push
cmpl
fstpt
movsl
cmp
mov
lea
aad
push
jp
pop
jae
or
test
pop
cwtl
sti
sub
or
xor
dec
mov
adc
jbe
mov
mov
jbe
ret
nop
sub
ret
adc
bound
add
mov
mov
enter
loopne
stos
aaa
mov
inc
rol
mov
fwait
xor
fldenv
stos
shr
mov
mov
test
scas
lea
movsl
sub
lahf
adc
jbe
daa
ret
and
fmuls
pop
xchg
imul
pushf
sub
cmpl
sub
pop
stos
lret
and
movsl
fmulp
mov
stos
xor
sbb
cmpsb
outsb
addr16
mov
pop
test
pop
rol
xor
cs
mov
push
cmc
sbb
test
add
scas
mov
mov
or
sub
and
push
nop
inc
xchg
lcall
scas
mov
inc
imul
jmp
stc
in
jb
or
mov
sub
movsb
mov
jmp
je
mov
mov
jae
popa
sbb
fwait
or
iret
push
inc
cmpsl
jbe
cmp
sbb
in
lods
xchg
repz
packssdw
jbe
shll
jge
jo
inc
movsb
adcl
mov
repz
and
mov
test
sub
xchg
loop
leave
pop
inc
push
dec
push
push
xor
mov
adc
cmp
mov
push
gs
push
push
aas
aas
and
sar
sub
lock
inc
push
dec
dec
inc
mov
push
sbb
repz
dec
imulb
xchg
add
or
inc
fcmovnbe
sub
fidivl
nop
scas
lret
subb
and
sti
jle
call
mov
hlt
dec
cmp
pusha
xor
repnz
xchg
and
dec
inc
sub
or
xor
mov
dec
cmp
push
sub
fsubrs
xchg
jno
dec
mov
inc
cltd
sbb
push
cmpsb
popf
xchg
repnz
lds
add
mov
dec
add
fists
sub
cmp
mov
data16
and
sbb
outsl
mov
in
enter
lcall
shl
aaa
jne
and
fldl
mov
xor
mov
inc
movsb
sub
aam
xor
andl
mov
int3
aam
loope
jbe
shll
lea
xchg
dec
add
mov
sub
adc
dec
push
push
int
jecxz
add
sub
add
movsl
sbb
xchg
jb
mov
mov
scas
dec
loop
and
mov
and
cmp
aas
add
leave
movsl
sbb
pop
call
icebp
or
mov
sub
in
jns
stc
lock
std
jno
test
fnstcw
sbb
out
lods
jmp
sbb
popa
shlb
push
dec
mov
movsb
mov
sahf
cmp
adc
sbbl
addr16
enter
sub
push
sub
cltd
xchg
imul
loop
mov
pop
imul
jge
mov
jnp
cs
jmp
push
sub
ret
jb
mov
sbb
in
icebp
and
repz
pushf
push
insb
int3
clc
cmpsb
enter
outsl
pop
outsb
mov
into
popf
cmp
push
mov
mov
mov
lods
clc
jb
sahf
adc
lret
aam
mov
add
pushf
sarb
shll
mov
mov
andb
cmp
and
les
and
xchg
push
xchg
adc
xchg
or
scas
sub
fsts
add
xchg
push
mov
test
xor
nop
push
hlt
movsl
xchg
arpl
lret
and
inc
shrl
xor
xchg
lcall
xchg
mov
jl
sub
push
mov
jns
pop
xchg
fstl
lahf
dec
stos
add
in
or
stc
pushf
pop
mov
jmp
jo
adc
or
adc
inc
mov
aas
inc
shll
ret
in
fdivl
lea
sbb
sub
push
insl
xchg
push
pop
mov
lcall
in
push
and
adc
sbb
mov
lods
inc
jl
ljmp
sub
xchg
ds
dec
mov
lods
inc
push
xor
pop
mov
xchg
mov
mov
cli
pop
dec
add
xor
loope
or
dec
mov
adc
jmp
pop
dec
outsl
testl
push
lock
pusha
mov
popa
data16
into
test
push
es
loopne
ja
call
cmp
loop
push
aam
lods
cmp
shr
stos
out
sbb
sarb
pushf
fistl
mov
ficomps
inc
and
mov
daa
mov
lret
jl
dec
sbb
arpl
int
cmpsb
xor
in
push
outsl
xor
test
lods
push
mov
lea
in
jl
cmp
mov
pop
shll
imul
in
or
lret
xorl
fldcw
cmpl
fnstcw
test
sahf
jecxz
js
jmp
jno
in
in
divb
jp
pop
xchg
jecxz
sbbl
xchg
nop
fwait
repz
int3
fwait
push
pusha
outsb
xchg
dec
repz
outsl
popa
xor
cmp
push
out
sub
fists
mov
xor
sub
aas
sbb
inc
ds
outsl
dec
mov
mov
iret
sub
call
and
int3
add
push
mov
ret
test
pop
jnp
fwait
push
adc
ret
daa
mov
adcl
xchg
jl
xor
xchg
and
das
sbb
aas
xchg
adc
movsb
mov
and
ret
mov
cmp
push
or
push
decl
rorb
sbb
mov
sbb
clc
test
cmp
sub
es
sbb
mov
das
sub
lcall
out
jno
sbb
jo,pt
insb
dec
sub
out
test
cmpsb
les
push
sbb
push
loopne
cwtl
pop
ret
shlb
mov
cmp
minps
js
imul
das
mov
movsb
inc
fadd
dec
imul
mov
push
notb
jp
adc
cli
mov
aad
mov
push
mov
cltd
adcb
outsl
pop
adc
push
repnz
lahf
or
mov
imul
imul
push
dec
adc
dec
and
subb
or
in
mov
in
je
mov
fdivp
jno
push
leave
hlt
nopl
je
daa
sub
inc
daa
cwtl
jbe
push
ljmp
add
inc
pushl
mov
dec
inc
cmpsl
cmpsb
cld
sbb
int3
and
sbb
or
loope
mov
jmp
xchg
popa
ss
push
mov
lods
movd
sti
dec
adc
cmp
pop
inc
std
movsb
or
xor
insb
push
mov
lea
mov
mov
sbb
lret
cld
insl
push
rcll
lea
repz
lret
mov
movsb
cld
fwait
adc
std
das
ja
inc
dec
jb
out
inc
cmpb
xchg
subb
and
push
cwtl
mov
push
xchg
insl
cli
add
nop
fdivs
add
lods
std
adc
imul
ja
sbb
roll
adc
mov
cmp
pushf
lea
test
mov
aad
cld
or
pop
cmp
roll
cmp
mov
push
roll
cmp
sti
int
fldl
lods
sub
dec
cld
popf
hlt
arpl
ja
pop
lcall
xchg
jmp
xchg
push
mov
mov
scas
mov
call
dec
icebp
mov
push
leave
orl
imull
dec
inc
xchg
dec
pusha
or
mov
mov
inc
cmpsb
xor
insb
jne
inc
ret
out
sar
and
icebp
push
pushf
int
out
insl
inc
xor
loop
fisttpl
fstpt
fcompl
add
imul
pop
sbb
mov
fcomp
mov
hlt
xor
daa
aas
mov
cmp
jecxz
stos
jns
adcl
psubq
outsl
dec
nop
dec
xchg
std
std
mov
int
out
inc
xor
pusha
or
push
arpl
sub
adc
test
out
xchg
mov
ret
push
xor
mov
push
cmpsl
adc
mov
repnz
mov
pop
push
inc
pop
add
adc
adc
xor
adc
cmpsb
cltd
mov
pop
inc
pop
and
imulb
jge
mov
scas
add
inc
xlat
xor
inc
scas
xchg
js
movsl
or
lea
jb
daa
iret
nop
mull
addr16
adc
lret
loopne
sub
add
stos
xchg
and
cmp
call
icebp
test
fwait
fwait
mov
out
bsf
ss
out
sbb
ja
sahf
jbe
push
add
sub
in
add
mov
aad
adc
add
xchg
xor
dec
in
icebp
adc
mov
inc
dec
jo
pusha
cltd
gs
sbb
mov
movsl
mov
xor
cltd
xchg
and
sti
mov
sbb
cli
adc
movsb
and
jns
rcll
jae
lods
mov
lahf
lcall
push
lds
outsb
mov
cltd
push
jnp
and
cmp
adc
jmp
lods
pusha
mov
movsb
movl
gs
inc
xchg
cmpsl
pop
leave
enter
fisubrl
int
in
ret
xchg
pop
mov
out
mov
push
data16
add
iret
pushf
jmp
lods
jp
sbb
aad
shlb
inc
adc
int
xorl
into
lret
and
pop
sub
cltd
xor
leave
inc
xor
arpl
idiv
sti
push
sub
xchg
mov
jno
inc
mov
cmp
inc
cli
fidivl
pop
stc
inc
in
fcmovb
dec
or
pop
bnd
mov
rclb
adc
or
pop
jle
pop
and
dec
clc
adc
nop
test
out
add
imul
mov
rorl
fwait
int
aad
test
pop
dec
jnp
inc
sub
sub
mov
lods
fidivrl
lea
mov
fdivrp
cmp
stos
repz
into
xchg
cmp
addr16
and
fcompl
push
lods
xor
jae
push
stc
sbb
cs
test
outsl
cmp
pop
xchg
mov
pop
dec
bound
rep
clc
shlb
cld
dec
mov
out
int
jbe
mov
pop
pop
into
jbe
lcall
les
fcomps
aaa
cld
sbb
ja
lds
iret
add
les
xchg
aaa
sub
add
lret
stc
sbb
dec
cmpsl
icebp
sti
fucomp
cmp
das
insb
out
int
dec
loop
testb
or
mov
nop
orb
movsl
mov
jnp
push
pop
add
or
push
add
sub
das
mov
in
jns
cmpsb
cwtl
jnp
ficompl
xor
nopl
sbb
inc
test
adc
add
ror
adc
or
iret
adc
lret
mov
outsl
xchg
nop
cli
loop
nop
cmp
into
in
cld
mov
pop
lock
xlat
shll
bound
insb
lcall
loope
mov
xchg
jle
pop
call
lahf
imul
clc
ret
lcall
daa
fwait
xchg
sarl
scas
mov
mov
sarb
int3
imul
xor
ror
jmp
inc
or
xchg
int
xor
das
movsb
mov
push
out
cltd
sbbl
ja
out
sahf
test
test
mov
insb
inc
sbbb
jl
dec
mov
pop
jle
es
adc
loopne
aas
mov
aad
movsb
or
lods
xchg
js
ror
nop
daa
int3
pusha
cmpsb
fldcw
xchg
or
scas
arpl
jbe
xchg
xlat
subb
jnp
cmp
inc
adc
roll
mov
jbe
sub
ror
dec
add
idivb
cmp
inc
jmp
stos
xchg
lds
mov
fdivrp
rolb
mov
inc
out
emms
and
ret
aas
loope
call
into
xor
xchg
mov
or
mov
pop
jb
test
inc
imul
loop
push
fs
xor
inc
arpl
aad
adc
jne
scas
adc
jecxz
out
and
inc
xchg
in
movsb
cmp
inc
jno
add
ljmp
xchg
lahf
jbe
fisubl
push
jb
cmp
movsb
iret
aas
andb
xchg
jbe
ret
xchg
mov
repz
cld
js
cmp
repz
lods
mov
xchg
repz
pop
rcr
stos
xchg
adc
rclb
das
js
xchg
jo
adc
sub
fndisi(8087
xlat
out
jno
xchg
cmp
sahf
cmc
xlat
outsl
and
out
sbb
mov
dec
shlb
jb
fwait
adc
subb
xchg
mov
or
inc
xchg
lock
test
add
pop
sub
jo
test
push
adcl
imul
fwait
out
out
gs
ss
filds
dec
imul
in
mov
sub
out
push
inc
xchg
sbb
adc
xlat
jns
aam
test
rcll
sbb
xchg
push
outsl
fwait
gs
inc
sbb
xlat
daa
sahf
xchg
pop
std
sub
pop
popf
jp
mov
cmp
inc
aas
test
add
out
clc
inc
jne
pop
test
popa
repnz
mov
pop
out
and
xchg
cltd
sti
push
lods
repz
dec
das
dec
add
jp
adc
jge
call
lahf
idivb
cmp
fistpll
scas
cmc
jmp
fisttpl
insb
mov
push
into
jb
arpl
mov
out
cld
lahf
ror
xchg
sbb
mov
or
repz
cltd
adc
xor
sub
jp
mov
aas
in
and
cmpsl
xlat
mov
inc
outsl
inc
jo
pop
inc
mov
pusha
mov
inc
mov
mov
mov
or
mov
fsts
inc
dec
pop
out
in
mov
dec
ret
adc
aam
cmp
repnz
xchg
test
insb
push
fs
adc
aaa
or
inc
and
adc
data16
mov
mov
pop
movsl
fs
pop
jmp
cmpsb
push
outsl
ja
ss
adc
lret
dec
into
inc
sub
cwtl
adc
and
and
insl
clc
fistpll
xor
pop
sub
gs
stos
insl
inc
inc
push
rcll
js
inc
pop
cmpsl
scas
filds
jg
cld
xchg
push
sub
ss
cs
adc
aam
xchg
xor
cmpsl
dec
and
push
mov
leave
loop
mov
sbb
iret
ret
add
aam
out
loopne
loop
scas
push
adc
mov
mov
mov
into
pushf
imul
mov
rol
pop
xor
loope
lahf
mov
xorb
pop
loop
mov
inc
loope
xchg
or
ja
repz
pop
and
bound
scas
out
out
xchg
repz
gs
mov
sbb
idivl
jne
shll
pop
in
test
cmp
jp
sbb
mov
mov
sti
xor
cmpsl
mov
sti
into
or
aas
mov
loope
mov
les
aas
adc
repnz
bound
mov
call
addr16
sub
scas
loope
js
nop
push
pop
ret
pop
pop
xor
frstor
repnz
pop
push
inc
scas
mov
pop
cmpsb
lret
adc
icebp
mov
cld
sub
jne
ret
aam
jl
lods
shl
push
test
add
fisubs
sub
push
jnp
dec
inc
inc
pop
pop
mov
dec
and
daa
iret
mov
out
jne
sarb
dec
popf
mov
sti
arpl
xlat
mov
sbb
mov
arpl
jmp
inc
mov
sti
iret
insl
test
cmp
fsincos
mov
rorl
dec
sub
jbe
xchg
js
mov
dec
cld
xlat
insb
mov
mov
inc
and
xlat
cmp
lods
test
mov
gs
sahf
xchg
xor
movsb
pop
das
fnstsw
push
cltd
sub
ss
repnz
lret
inc
iret
push
leave
movsb
clc
sbb
jg
jmp
movsb
cs
jmp
ret
inc
loope
jae
push
cmpsb
add
pop
andb
xchg
das
jnp
push
shlb
cmpsl
fwait
cmp
inc
push
stc
popa
pop
xchg
fcmovb
jb
adc
jns
add
mov
lcall
xchg
popf
push
pop
jo
xchg
and
mov
xchg
scas
testb
ret
jae
sub
repnz
es
push
popf
and
mov
les
or
xlat
cmp
mov
test
pop
dec
incl
fists
fadd
lds
mov
inc
sub
aas
pushf
sbb
pop
mov
cmp
and
incl
cltd
fisttps
das
mov
mov
test
lahf
fiaddl
push
inc
daa
or
sub
cmp
aas
add
testb
repnz
ljmp
test
std
cmp
ffreep
mov
je
adc
fs
jge
dec
imul
aad
scas
inc
fadd
ret
jae
das
repz
pop
movsb
ds
movsl
out
sbb
lods
scas
jnp
pop
filds
insl
adc
or
add
lods
inc
push
mov
xchg
mov
ss
jmp
fmul
sbb
pusha
sahf
adc
outsl
or
cmp
jge
xchg
js
mov
sbb
fwait
pop
mov
inc
or
push
aaa
lods
outsl
sub
icebp
xchg
shlb
enter
repnz
xchg
ds
movsb
dec
add
jmp
inc
imul
sub
cmc
lds
shl
cmp
int3
cmpb
bound
mov
cmp
xor
pop
mov
dec
mov
in
les
cmpsl
xchg
int
out
add
mov
fs
in
mov
pop
sub
pop
push
test
adc
js
sahf
cmp
push
xchg
adc
xor
pusha
sahf
jle
push
shlb
call
jle
test
lahf
inc
pslld
fldt
adc
add
ret
fdiv
stos
push
jo
pushl
push
pusha
jmp
xorl
mov
push
iret
lock
adc
push
jle
xchg
test
iret
stos
push
fsubrs
addr16
and
inc
push
lea
int
jo
loopne
mov
les
test
lea
sub
in
push
lret
fs
rol
pop
loope
adc
or
stos
in
pop
xchg
and
dec
xor
cmp
xchg
and
jmp
shlb
stc
lods
mov
inc
xchg
push
mov
and
ja
outsl
mov
cmpsb
cmpsb
pop
xchg
jbe
and
sbb
mov
pop
test
imul
fs
or
bnd
lods
add
mov
mov
lahf
call
mov
fldt
push
cltd
mov
dec
adc
lods
xchg
outsb
xchg
pushf
xchg
pop
inc
push
sub
scas
push
cwtl
fimuls
popf
call
push
or
push
xor
in
dec
dec
std
or
in
mov
mov
pop
cmp
int3
xchg
cmc
sbb
jbe
cmpsb
push
ljmp
in
fisubs
notb
pop
jmp
mov
lcall
or
adc
std
jb
fadds
cmp
stos
cmc
cmpb
test
out
sub
imul
test
jnp
lods
mov
mov
mov
and
ja
add
xchg
fcomip
mov
inc
fcoml
fistps
sub
inc
rol
les
mov
inc
push
and
cmp
hlt
push
test
sub
jns
bound
lahf
mov
test
jnp
xor
subb
loop
pop
mov
loop
jb
shll
hlt
in
test
jg
and
xlat
dec
lcall
adc
insb
sub
jo
sbb
push
and
les
add
adc
movsl
push
fimuls
insb
jmp
cltd
or
les
loope
and
cmp
or
call
movsl
mov
cmc
xchg
jl
loop
loop
jb
lds
sbb
rolb
leave
into
int3
stos
repz
mov
or
sbb
dec
loopne
mov
cmp
icebp
cwtl
fildll
push
movsb
jno
ss
and
loop
mov
xchg
ds
sbb
xchg
test
sbb
rorl
jne
movsb
push
xor
lcall
xlat
sti
jnp
dec
mov
scas
insb
xchg
mov
cmp
xchg
dec
mov
arpl
or
xor
push
sub
xchg
ss
or
movl
xor
push
jl
jecxz
daa
addr16
ds
cmc
leave
push
cmpsl
call
inc
loop
xchg
or
stc
jle
sub
jne
push
push
mov
or
stos
pop
ja
xchg
cmpsl
lea
pusha
push
add
aam
sub
out
dec
in
jp
out
sbb
cmp
sub
sbb
cmpsb
jb
aad
ljmp
insb
jge
imul
fidivs
movsb
mov
insl
jbe
cmp
daa
jg
loope
xchg
mov
gs
xor
cmp
push
stos
xor
mov
gs
out
sahf
outsb
js
fcompl
push
je
push
mov
mov
adc
xor
ror
inc
lock
dec
mov
xchg
test
jno
mov
ret
lods
mov
cmpsl
pop
out
cld
mov
push
jnp
fwait
fwait
cmp
xor
iret
movsl
ret
sub
and
dec
inc
or
mov
jb
stos
push
push
pop
sbb
ret
int
add
std
lods
lds
and
filds
stc
lds
cmc
or
jns
popf
fidivl
xchg
xchg
fwait
cmp
and
pop
push
xor
inc
mov
push
insl
adc
je
fcom
xlat
int
sarl
cmpsb
mov
jg
xor
sub
jns
test
pop
add
sbb
cld
dec
pusha
stos
frstor
xchg
pop
mov
cmp
mov
adc
jle
jne
fsub
adc
fucomip
clc
mov
cmpsb
ds
xor
cmp
jecxz
pop
pop
repnz
adcb
movsb
sarl
fwait
cwtl
imul
ja
mov
xchg
inc
adc
cmpsl
or
fsts
add
adc
cmp
pop
out
jl
incl
popf
sbb
es
int
cmp
jge
sahf
push
sbb
dec
jae
push
pop
int
aam
push
push
or
or
xor
fcoml
rcll
jmp
movsb
add
mov
pop
and
daa
jge
jg
mov
adcb
dec
in
or
dec
test
push
dec
xor
xchg
mov
stos
push
jmp
out
cmp
lret
lret
sti
movsl
mov
push
dec
inc
addl
dec
or
lret
sbb
adc
nop
mov
mov
dec
jbe
ret
or
xor
cs
xchg
mov
sub
ret
or
mov
test
cmp
jnp
dec
add
cmc
jne
sbb
push
adc
cmp
imul
out
mov
enter
daa
push
rorl
inc
sub
mov
fstl
leave
cmc
or
mov
cli
mov
aas
jge
mov
lds
add
push
cmpsb
sub
mov
xor
hlt
add
jmp
jae
inc
adc
out
call
mov
push
aad
mov
arpl
add
call
sbb
pop
mov
xchg
lea
push
pop
xchg
pop
and
imul
cmp
pusha
mov
das
test
icebp
shl
pusha
push
sbb
out
cmp
pop
les
iret
popl
mov
push
jno
push
cwtl
cltd
and
adc
jmp
in
icebp
shlb
jbe
pop
mov
add
lea
push
in
and
popf
dec
nop
cs
inc
in
movsb
dec
push
fcmovnbe
push
xchg
push
mov
cmpsl
sbb
inc
pop
testb
ficompl
dec
ret
cli
enter
cli
jb
mov
test
hlt
cmp
std
xchg
sbb
mov
imul
jl
sub
add
lahf
les
lret
daa
inc
and
push
lret
mov
jno
call
lahf
inc
sub
or
inc
fsubs
movsb
mov
dec
rorb
outsb
fisttpl
in
push
mov
cmpsl
popa
and
loop
sbb
lods
bnd
lods
test
dec
cmc
adc
pop
rorl
test
test
dec
inc
xor
rcl
lret
in
or
scas
shl
addr16
pop
outsb
das
push
insl
jae
add
adc
loop
mov
call
icebp
jne
mulb
leave
jne
cld
mov
out
cmc
pop
aas
inc
cmp
xor
arpl
and
out
stc
pop
lahf
xchg
clc
out
cltd
sarl
fsubrs
jl
xor
shrb
jo
test
inc
jne
andb
icebp
mov
xchg
es
sub
shrl
xor
cld
jne
jge
std
andl
loop
sbb
iret
pop
xchg
xor
xlat
cld
xchg
scas
stc
inc
cmp
pop
iret
fimuls
xchg
mov
fidivrs
fucomi
dec
inc
push
add
jmp
loop
sti
out
test
sbb
or
sahf
jo
scas
adc
lock
mov
inc
rcll
xchg
popf
incl
or
fwait
pop
ss
and
sti
enter
jge
inc
mov
mov
or
add
in
adc
cmp
lcall
jno
outsl
mov
xchg
cmpsb
mov
add
sahf
aad
and
inc
add
int
mov
jl
fisubs
fadds
addr16
add
mov
in
jae
mov
cmp
pop
iret
dec
push
enter
mov
mov
lock
sub
fisttpll
fsubl
andl
gs
mov
xchg
or
cli
xchg
jge
cltd
stos
lods
insb
cmpsl
pop
xlat
cmp
jg
arpl
in
jecxz
sbb
jo
inc
jbe
les
fnstenv
jb
inc
sub
mov
shlb
fistl
pusha
mov
dec
adc
mov
cmp
les
mov
movsb
jecxz
sbb
sub
movsb
or
ja
pop
xor
ret
outsb
jecxz
das
leave
shrb
mov
xchg
scas
hlt
aas
pop
inc
or
pop
cmp
imul
arpl
fnstenv
pop
lret
pushf
xchg
mov
jl
mov
ja
cwtl
insb
je
xor
mov
xor
mov
loope
mov
stc
ret
sub
loop
push
sbb
out
fs
xor
ds
gs
inc
loop
popf
dec
and
dec
inc
mov
mov
pcmpgtw
xchg
mul
xchg
cld
xor
jmp
popf
xor
pusha
lret
imul
mov
fsubrl
aam
hlt
adc
dec
cmc
mov
sub
rcll
ret
jle
fisubrs
test
sti
mov
push
cmpsb
inc
push
pop
int3
xlat
addb
mov
sub
in
lds
pop
outsb
xchg
xor
add
adc
pop
les
loopne
inc
movsl
mov
mov
fisttpl
pop
mov
into
rorb
stc
int
insb
test
outsl
mov
sub
lret
mov
insb
push
xchg
std
in
push
dec
dec
lret
mov
xor
in
dec
push
stc
push
int3
ret
lret
inc
jbe
in
adc
mov
data16
popa
push
lods
adc
int
inc
xor
mov
fs
jg
lahf
ret
lods
subl
xlat
repz
into
mov
incb
imul
fbstp
jg
jp
fwait
xor
cmp
je
cld
inc
mov
cs
cmc
out
hlt
sti
imul
mov
ljmp
sbb
cmpsb
add
and
sbb
sahf
scas
push
add
out
mov
mov
clc
mov
lock
cmc
mov
dec
pop
mov
and
mov
lods
cmpb
inc
bswap
in
or
xchg
movsb
cmpsb
lret
fldt
cmp
or
aas
pop
cmc
sub
jecxz
lret
xor
sub
mov
inc
adc
mov
and
or
dec
jp
mov
inc
push
popa
loopne
mov
cmp
je
fmull
or
push
addb
and
mov
pop
or
fidivs
andb
push
add
mov
and
mov
push
or
fs
icebp
pop
cltd
sti
xchg
add
inc
jo
mov
out
push
shl
inc
jmp
push
and
pop
mov
adc
sar
roll
decl
test
scas
pop
pop
icebp
mov
sub
xor
and
mov
jge
pop
daa
dec
sub
push
push
inc
cmc
inc
ret
movsl
es
mov
iret
cmc
bound
push
push
mov
dec
pop
pushf
fwait
jbe
int3
xchg
loopne
add
into
idivl
cmpl
pop
inc
push
xchg
inc
pusha
je
push
mov
cmp
jnp
enter
sbb
aas
adc
in
repz
stos
sub
aad
clc
les
xor
xor
mov
pop
pop
subl
pushl
stc
push
sti
sbb
call
sbb
xor
fcmovbe
dec
pop
fucom
test
mov
popa
shlb
cmp
leave
gs
xchg
dec
out
push
enter
movsb
xchg
and
xor
into
mov
mov
cld
dec
scas
and
jge
and
inc
xchg
xchg
adcl
fmuls
pop
sbb
pushf
rcr
mov
inc
js
rcr
jcxz
fstps
fucomp
cwtl
fldenv
dec
lds
aas
movsl
daa
pop
popa
pop
mov
cmp
push
inc
out
fistpll
xchg
loopne
test
jmp
ret
xchg
popf
adc
fs
mov
loope
adc
jo
push
pusha
adc
je
push
cli
popf
test
xchg
loope
mov
cli
into
pusha
mov
mov
imul
jbe
and
popl
punpckhwd
dec
inc
add
cwtl
inc
sub
cmp
adc
lcall
test
sbb
loopne
xchg
sbb
ja
fidivs
test
ds
add
dec
out
cmpsb
int
cs
mov
pop
push
scas
sti
inc
sbb
inc
xor
or
push
xor
xor
fdivl
dec
cmpsb
pop
ds
inc
adc
xchg
push
loope
into
jl
mov
cmp
outsl
daa
push
dec
jne
and
aaa
push
lds
pop
stos
mov
stc
loopne
xor
push
mov
mov
iret
int3
jo
dec
dec
mov
mov
shrb
rep
je
ss
mov
xchg
and
popf
jmp
pop
adc
lcall
push
jg
test
popa
out
fiaddl
add
arpl
fbstp
push
rdmsr
aad
sbb
imul
hlt
std
lahf
lea
sbb
ljmp
fbstp
sbb
inc
adc
cmpsb
das
lcall
cmp
mov
jns
out
pop
push
push
lret
std
inc
dec
cmp
gs
inc
inc
xlat
enter
aas
clc
stos
lahf
push
fdivs
or
inc
scas
cmp
gs
popa
loope
mov
in
mov
inc
lcall
out
dec
pop
jo
inc
jo
and
mov
repnz
pop
ffreep
rorb
nop
fwait
pop
clc
cmp
enter
sub
jbe
dec
sbb
pop
outsb
cltd
and
cwtl
sbb
jae
cmp
pop
imul
and
enter
push
pop
cmp
mov
or
out
adc
cmp
sub
fcmovnb
push
jnp
push
gs
pop
dec
divb
out
push
cld
inc
mov
cwtl
fcomp
fwait
popa
pop
lret
pop
leave
outsl
int
aad
rcl
mov
cmp
cmpsb
xorb
push
stos
repz
xchg
cli
add
adc
or
mov
loope
sbb
les
data16
dec
notb
gs
pop
insl
dec
jmp
pop
add
xchg
sub
loope
hlt
repz
mov
mov
scas
rorl
sbb
test
je
fndisi(8087
je
movsb
mov
aam
divb
pop
or
mov
mov
shlb
in
mov
push
imul
lahf
iret
inc
inc
cmp
cs
mov
add
cmp
adc
into
and
cld
in
loop
je
je
ds
jl
sti
jae
inc
cmpsl
push
scas
adc
addr16
inc
lods
loopne
sub
or
cmp
add
or
ds
or
nop
scas
jnp
fwait
xlat
mov
pop
xor
xor
inc
int3
jne
in
jl
or
iret
out
jge
adc
leave
leave
ret
xchg
das
inc
push
divb
mov
cltd
or
mov
jo
repnz
aad
lock
rcrb
add
test
sub
xor
xchg
jnp
arpl
jb
test
out
push
sbb
lcall
xchg
out
push
cmpsb
std
shrl
loop
push
daa
sub
or
jge
jbe
xchg
scas
cld
movsb
and
int3
jns
pop
push
ljmp
cs
fisubrs
dec
mov
jnp
inc
mov
imul
xor
mov
or
les
push
dec
add
mov
enter
mov
add
add
xchg
movsl
pop
out
adc
mov
and
mov
pop
lcall
loope
arpl
hlt
dec
lods
push
xchg
sub
push
nop
clc
shl
push
call
popa
mov
arpl
jl
inc
adcb
leave
sbb
mov
cmpsl
das
in
sbb
test
xor
sti
xor
je
std
repz
pop
pop
loopne
fwait
xor
sbb
out
cmpsb
mov
int3
repnz
aas
je
cs
test
lds
in
xchg
lods
push
xchg
bnd
sub
lea
insb
push
cmp
add
nop
test
stos
imul
pop
jbe
xchg
mov
push
inc
mov
jnp
pop
or
sub
inc
mov
inc
push
mov
or
mov
dec
mov
mov
movsl
cmp
aam
mov
daa
dec
mov
push
mov
data16
and
int3
lea
push
and
mov
iret
in
dec
in
xchg
xchg
sarl
lea
sub
add
sub
xlat
push
mov
push
sbb
xor
call
lds
or
pop
lcall
mov
int
leave
jne
popa
mov
stos
sub
mov
jmp
enter
inc
js
mov
jns
shr
xor
xchg
ss
outsl
aam
dec
inc
jge
aad
in
sti
popa
jl
jo
cmc
mov
cmp
ds
sbb
test
mov
aaa
ja
aas
cmp
sub
test
insb
jne
xor
sub
test
mov
add
outsl
stc
jl
and
negb
fwait
inc
jo
xchg
jge
call
xor
sahf
jle
ja
push
adc
sti
shl
xchg
mov
lret
fwait
popa
mov
ljmp
lds
call
and
or
push
sub
sbb
or
push
bound
ret
add
dec
cmc
lret
mov
add
xor
outsb
shrl
sub
pusha
or
mov
cltd
in
add
pop
pop
push
cmp
add
popa
push
pop
cmp
mov
push
insl
movsl
inc
rcll
adc
mov
mov
sarl
push
mov
add
jns
int
jns
mov
mov
mov
fadds
popa
repnz
loopne
sahf
popa
xchg
push
inc
iret
std
cmpsl
mov
sbb
lcall
xor
sub
pop
xlat
pop
xchg
xorb
and
adc
pop
mov
cmpsl
cmpsb
outsb
xchg
lods
sub
clc
mov
test
movsl
push
cmp
movsl
cltd
xchg
cmpb
fcoms
pop
and
stos
xor
add
gs
inc
test
mov
mov
out
adc
inc
loope
inc
cmp
dec
call
stos
cmpsl
out
ja
mov
mov
xor
dec
rcll
outsb
push
push
negl
in
push
sub
pop
and
push
push
or
mov
add
jne
add
jmp
sub
adc
sbb
into
mov
fs
mov
loopne
lea
xor
add
xchg
pop
adc
xor
fstpt
or
in
mov
add
xor
and
push
pop
push
or
fisubrl
mov
loopne
jl
and
mov
sub
or
xchg
jg
mov
add
mov
lods
cld
stc
mov
inc
data16
fbld
push
cs
mov
mov
inc
pop
cmp
pushf
adc
mov
sub
scas
test
sub
cltd
icebp
xor
popa
fldcw
aaa
repz
xor
sub
cmp
push
or
jp
mov
mov
lret
ljmp
cld
repz
mov
std
inc
mov
cmp
adc
push
ret
sbb
aaa
ret
adc
out
cltd
sub
les
lahf
lcall
inc
leave
in
mov
sub
enter
sbb
push
jnp
aas
test
into
outsb
jae
lret
dec
mov
nop
rcll
add
sbb
and
sub
xchg
xchg
cmp
clc
jno
clc
ss
fdivrs
int3
enter
or
aam
repz
sbb
jge
xor
add
lock
shll
je
sbb
cmp
dec
push
mov
adc
xchg
xchg
scas
mov
scas
inc
lret
cmpsl
scas
adcb
shlb
icebp
add
xchg
stc
int
aaa
cwtl
and
jbe
sub
sbb
jne
pop
mov
dec
mov
arpl
movsb
add
addr16
sbb
pop
or
jb
push
inc
pop
push
sub
add
cmp
or
xor
mov
push
adc
cmpsb
div
cmp
cmp
out
aaa
xor
push
cld
adc
cld
andl
imul
insl
ss
push
shrb
pop
xlat
orl
roll
mov
into
outsl
pop
adc
adc
sub
mov
into
jmp
mov
ja
jmp
add
push
or
adc
sbb
mov
mov
mov
push
std
xchg
sti
xchg
cld
jp
paddusw
sarl
popa
std
mov
imul
pop
or
fwait
movsb
and
test
fists
loope,pt
repnz
repnz
xchg
mov
add
out
enter
aam
xorl
ret
out
std
mov
push
inc
mov
inc
or
fldenv
in
sub
pop
ds
cmp
adc
inc
rolb
push
inc
aad
in
lret
outsl
cmp
lret
push
std
icebp
jnp
iret
movsl
pop
das
sbb
popf
call
sbb
jmp
roll
test
das
jo
stc
scas
rcr
rcrl
push
clc
in
scas
loopne
sub
jnp
mov
stc
dec
pop
in
push
cmp
les
loop
jmp
sti
cmp
xchg
push
add
push
sahf
mov
adcb
icebp
outsb
xlat
sbb
jmp
repz
jne
or
mov
cli
les
adc
in
xor
or
lret
push
popf
popa
or
adc
jb
pop
out
xorl
lea
inc
pushl
fwait
insb
adc
call
jmp
fwait
add
nop
cs
ljmp
subl
loope
push
mov
in
clc
je
div
jbe
pop
test
mov
scas
jb
add
insb
jle
lds
repz
andl
inc
lods
cmp
pop
mov
fs
or
push
aam
inc
out
into
aaa
jo
insb
test
push
mov
jno
in
movsb
cmp
push
lahf
mov
xchg
mov
icebp
mov
stos
pusha
add
cmp
sbb
mov
xor
ljmp
and
adc
es
shll
mov
adc
inc
pop
adc
jae
adc
inc
aam
push
jmp
fstpt
xlat
stos
push
ss
mov
jp
sbb
pop
lea
dec
adc
mov
out
sub
lcall
test
cbtw
es
lods
lods
adc
lahf
jp
sub
stos
jge
mov
lds
loope
adc
enter
mov
mov
push
sbb
mov
pusha
lcall
inc
push
clc
mov
addr16
xor
int3
icebp
insl
ss
mov
arpl
adc
sti
je
cli
les
out
jge
repz
push
sbb
outsl
lods
pop
mov
hlt
sahf
and
inc
bound
or
outsb
jle
in
dec
stos
jecxz
add
adc
aad
and
call
leave
mov
pop
fwait
inc
cmp
lea
or
mov
orl
mov
and
scas
jle
sbb
dec
xchg
ret
push
in
cmp
in
dec
xchg
pusha
int
xchg
sub
xor
push
or
cmp
and
sub
mov
mov
add
mov
add
mov
and
sbb
adc
fimuls
ret
xchg
add
fwait
outsl
add
mov
imul
aad
xor
pop
mov
ja
addb
incb
dec
inc
addr16
inc
jno
fisubl
lds
mov
fdiv
add
jne
sub
inc
fldcw
lcall
mov
repz
insb
test
adc
xchg
test
in
mov
ljmp
jmp
xchg
pop
push
mov
pop
pusha
pop
mov
sub
cli
test
sub
mov
push
mov
and
js
sbb
push
or
rcll
adc
pop
sbb
jb
lret
xchg
jne
sbb
push
xchg
cltd
add
hlt
inc
stos
and
test
enter
sub
mov
add
cmp
insl
adc
jbe
xchg
pop
push
es
std
lods
add
sbb
in
push
cwtl
ret
mov
xchg
xor
ficomps
and
lock
sti
cs
jg
inc
jle
aas
roll
cli
cwtl
out
ljmp
and
push
and
out
sbb
cld
rol
adc
add
cmp
inc
dec
fdivl
dec
jae,pt
jmp
mov
rclb
out
inc
jecxz
sbb
sub
fwait
gs
jb
lret
pop
xor
jecxz
adc
movsb
jmp
xchg
rclb
dec
fsts
popf
mov
int3
sub
mov
cli
imul
std
lock
stos
mov
inc
call
and
ss
ja
pop
mov
adc
pusha
sbb
cmp
dec
xor
cmp
test
stos
lds
mov
jnp
insb
adc
push
subb
outsl
sbb
pop
imul
and
xchg
es
xchg
fcomi
mov
test
cltd
inc
negb
mov
ret
and
lods
sbb
imul
cmpsb
xchg
aas
mov
sti
lahf
mov
jne
mov
cwtl
shl
cmp
js
mov
inc
dec
rclb
add
popf
test
jmp
push
or
mov
cmp
into
call
or
add
adc
pop
in
jae
pop
or
pop
mov
out
ret
or
imul
jmp
xor
js
and
adc
fwait
mov
dec
test
imulb
xorb
fwait
xor
sahf
in
inc
cmp
lds
imul
xchg
push
push
pop
fsubl
jbe
fwait
sub
adc
aas
popf
push
jmp
cwtl
outsb
es
inc
jno
icebp
popf
push
stc
cmp
call
mov
adc
and
add
lds
jmp
adc
mov
repnz
popa
testl
cmc
xchg
fsub
mov
xchg
movsb
mov
xchg
fs
roll
sbb
xor
or
mov
add
add
mov
daa
ret
es
sub
out
inc
and
psubw
aaa
stos
inc
adc
gs
jmp
insb
stc
inc
xor
xchg
inc
aas
data16
xchg
aas
pop
mov
mov
mov
cmpsb
inc
nop
cmp
mov
or
xor
jne
sub
pop
repz
adc
and
and
in
xchg
mov
mov
stc
or
test
dec
shlb
or
lock
sahf
cltd
and
jo
xchg
mov
xchg
jg
rcll
and
aaa
dec
fidivl
adc
int
pop
and
clc
xchg
xchg
stos
or
call
popf
push
lret
js
or
xchg
dec
push
mulb
out
mov
adc
jb
adc
jg
repz
xbegin
push
outsb
lods
icebp
hlt
cmp
inc
outsb
inc
stos
shrb
pop
je
sub
jmp
dec
sub
pop
xchg
mov
ja
les
xor
mov
pop
mov
mov
inc
pop
in
fsubrl
jns
xchg
sbb
in
cmp
in
int3
add
sbb
in
hlt
pop
jo
xchg
push
mov
or
push
jmp
push
out
loopne
sha256msg2
or
cmpsb
dec
mov
scas
pop
xchg
mov
sbb
xor
xchg
popf
mov
xchg
shll
dec
xchg
ret
xchg
push
add
psubb
jno
movsl
ja
ljmp
pop
call
lods
and
lcall
push
popf
lods
test
aas
sub
into
nop
or
mov
mov
popf
dec
mov
nop
test
inc
sbb
or
pop
pusha
xchg
fidivs
ljmp
inc
sbb
sbb
jl
inc
mov
arpl
mov
pop
fsub
aaa
mov
call
push
faddl
imul
data16
jp
in
outsb
fimuls
mov
mov
dec
sub
push
fldenv
jmp
push
stos
mov
call
inc
jae
pusha
scas
sub
adc
mov
movsl
test
xchg
ret
and
gs
or
xlat
inc
mov
ljmp
sti
xchg
movsb
idivl
aad
push
cmp
ds
arpl
ja
add
cmp
out
scas
test
test
and
stc
mov
lods
mov
aaa
out
out
push
stc
mov
mov
out
jg
xor
mov
popf
sub
sti
jno
imul
cmp
sub
inc
les
ss
dec
dec
ja
pop
das
pop
int3
dec
jg
insl
xchg
bound
cmpsb
mov
jns
das
jns
enter
pop
pop
push
lea
push
mov
mov
jb
xchg
shr
shlb
aad
pusha
orb
push
push
inc
sub
adc
mov
dec
insl
mov
sbb
int3
sbb
dec
xor
addr16
aaa
adc
aam
mov
outsl
rorl
cltd
mov
rclb
les
push
and
jge
mov
repnz
jge
scas
pusha
shlb
imul
bnd
lret
jmp
push
ficomps
addr16
and
fstpl
mov
ljmp
mov
pop
mov
inc
enter
hlt
out
faddp
test
dec
cmpsb
fsubr
mov
dec
mov
arpl
and
dec
push
mov
inc
xchg
xchg
dec
rolb
add
cmpsl
xchg
pusha
and
dec
or
mov
push
push
inc
mov
push
jge
cmp
lret
adcl
pop
out
jae
mov
fsubr
mov
pop
jo
mov
xchg
xor
in
sub
push
xlat
fsubrl
jnp
sbb
stos
sub
stos
daa
push
xlat
push
fnstsw
in
adc
daa
pop
pop
stc
mov
xor
fstpl
pop
xchg
data16
and
mov
adc
xor
mov
mov
jmp
movq
bound
xor
mov
pop
fisttpll
add
or
int3
sub
adc
inc
add
std
mull
jae
add
pop
fbstp
dec
mov
ja
fdivr
jae
xor
mov
mov
aam
mov
fidivl
popa
mov
mov
xchg
ret
mov
fwait
mov
push
and
out
dec
js
lret
adc
pop
sbb
cmpsl
leave
and
dec
out
shrb
push
xlat
jbe
loopne
push
jno
in
push
jecxz
rcl
aaa
cmpl
mov
adc
mov
push
inc
xchg
sar
xor
push
decb
lea
mov
add
loope
mov
subb
xchg
in
repnz
jbe
cmpl
sub
sti
cld
mov
mov
mov
xlat
stc
mov
jecxz
test
lods
xchg
mov
divl
outsl
add
outsl
lcall
das
lea
jno
call
test
popa
fwait
loop
pop
jle
jp
call
fadds
pop
prefetch
lods
fcmovnb
fistps
add
xchg
push
in
xor
aaa
and
outsb
into
pop
and
ror
sub
adc
test
pop
sub
fstp
leave
lss
movsl
jg
fcmovne
pop
sbb
or
xchg
lock
adc
lret
jge
xor
xchg
pop
out
arpl
hlt
jo
jg
or
adc
daa
insl
mov
add
pop
hlt
sbbl
xchg
das
aas
adc
fidivrl
in
and
xor
sbb
push
xor
mov
fsubs
daa
shll
stc
mov
xchg
add
fadds
sbb
es
outsl
push
mov
ja
jae
sub
nop
add
xchg
or
popl
test
jb
xchg
xrelease
mov
inc
add
push
mov
sub
shrl
repz
add
repz
jp
pop
rorb
outsl
ss
or
jecxz
fiadds
shlb
jae
cli
movsl
mov
ret
cltd
lahf
sbb
inc
sbb
std
jecxz
dec
xorl
imul
xor
pop
mov
repnz
test
mov
or
sub
hlt
mov
cmpsl
sbb
shrb
test
imul
ret
jae
stos
js
dec
jmp
sbb
gs
sbb
mul
jg
push
ficoml
lods
fsubrs
int
dec
andl
sbbl
cmpsl
lea
sbbb
jae
adc
movsb
ljmp
xor
dec
iret
mov
jp
ljmp
mov
leave
lock
mulps
aas
ss
mov
xor
pop
or
and
orl
cmpsl
das
outsb
in
adc
in
jno
xchg
aam
add
lcall
notl
xchg
int
sti
aam
sbb
loope
lods
pop
pop
out
or
xchg
xchg
nop
mov
je
jp
mov
inc
xor
sub
xchg
into
in
fwait
aaa
pop
das
dec
and
or
sub
jmp
xchg
inc
push
xchg
cmp
jmp
lcall
pop
es
cmp
dec
or
xor
xchg
pop
or
mov
and
and
mov
les
pop
int
dec
fimull
jp
push
lahf
push
xchg
inc
cvtps2pd
cli
sub
cmp
jbe
jecxz
dec
outsl
lock
push
repnz
mov
sbb
pop
stos
inc
pop
mov
out
jb
sti
mov
mov
jb
stc
dec
cmpsl
push
jo
sbb
loope
cs
inc
sub
jg
mov
jnp
orb
xchg
test
mov
jecxz
test
pop
ds
icebp
push
dec
xchg
fildl
jbe
jns
mov
pop
inc
mov
repnz
aam
mov
pop
xor
adc
cld
adc
sahf
xchg
call
xor
lods
fadds
adc
out
imul
mov
jle
add
cmp
jno
inc
jg
lahf
stos
pop
mov
clc
ss
adc
ljmp
sub
mov
stos
lods
fdivr
test
xchg
subb
inc
pop
je
lret
xchg
decb
sub
and
add
mov
xchg
and
das
mov
push
inc
in
loope
jbe
cmc
dec
leave
cmc
ficompl
mov
push
popf
cmp
xchg
arpl
add
adc
push
jns
movsl
and
fnstcw
sbb
repnz
arpl
or
movsb
rcrl
imul
cmp
push
nop
mov
clc
push
cmp
cmp
jg
or
mov
mov
lea
int3
neg
out
data16
jmp
movsl
mov
xor
xor
cmp
cmp
nop
mov
imul
mov
lret
out
bound
xor
jns
pop
test
test
cmc
mov
in
pop
sub
jb
dec
das
ds
shll
mov
in
lret
inc
das
mov
addl
dec
cltd
pop
pop
sub
xchg
cmp
arpl
xorb
add
jmp
movsl
mov
aam
aas
ljmp
mov
mov
push
push
pop
fwait
sub
lcall
sub
mov
jns
in
popf
push
mov
pop
out
cmp
addr16
cmp
fs
icebp
adc
leave
jle
dec
push
inc
push
and
xchg
cmp
and
push
shll
add
mov
mov
cmp
inc
ss
pop
inc
subb
rolb
arpl
insl
rcrl
jle
fcmovnb
mov
das
test
aaa
jno
xor
xor
leave
inc
je
or
pop
mov
sbb
loope
xor
dec
jmp
rcrb
adc
mov
dec
mov
adc
mov
fwait
adc
jge
out
adc
fsts
movsb
mov
xor
mov
ds
sti
mov
mov
mov
cmpsl
jne
pop
mov
jmp
jg
add
loope
dec
mov
mov
insb
sbb
sbb
fdivrs
or
push
sahf
lock
lea
and
int
scas
xor
add
imul
cld
push
fistps
sub
in
mov
pushf
dec
sahf
loope
cmp
cmp
jmp
push
mov
or
inc
cwtl
xor
or
jbe
mov
cmp
sub
dec
into
and
inc
dec
js
sahf
fdivr
lcall
adc
add
pushf
ds
mov
xor
int
insl
adc
or
ret
push
shlb
xchg
add
lcall
or
std
aad
jmp
xlat
cltd
ds
push
out
mov
lret
xchg
jae
in
out
mov
test
sub
jmp
inc
mulb
loopne
ret
sbb
sub
push
mov
xchg
dec
in
imul
jns
push
ret
and
inc
cmp
or
subb
popf
iret
mov
dec
cs
xchg
or
test
aad
jo
fmull
test
mov
push
lcall
shll
aaa
inc
sbb
movsl
add
out
adc
rcrl
push
or
pop
in
enter
subb
aas
scas
mov
pop
sbb
mov
das
xchg
movsl
lods
mov
faddp
repz
lods
sbb
push
cld
test
sbb
sbb
in
push
imull
xlat
stc
scas
dec
dec
andb
or
icebp
bound
fiadds
push
dec
and
jo
test
lds
sbbb
cmpsb
xor
arpl
add
ja
shl
insl
js
mov
fs
stos
mov
jbe
hlt
and
inc
iret
xor
push
in
jge
pop
loopne
popa
clc
test
add
cs
idivb
inc
or
adc
aas
insb
xchg
cmpl
inc
mov
add
inc
adc
fwait
jnp
add
in
das
add
mov
mov
pop
cmp
repz
inc
out
xor
cltd
aas
mov
inc
sti
mull
int
rorl
movsb
push
mov
xchg
dec
stc
mov
dec
shrb
mov
pop
inc
jne
test
fildll
outsl
lds
test
pop
in
adc
movsb
jns
push
and
js
or
outsl
mov
ror
jmp
and
xor
mov
ss
pushf
imulb
add
fcoml
pusha
push
fstps
jl,pn
mov
xchg
pop
shl
sub
fildl
pop
or
cmp
xor
or
mov
jge
push
jmp
dec
xlat
jl
mov
out
dec
jne
push
mov
mov
ss
bound
inc
stc
sbbb
adc
loope
scas
mov
jnp
sub
pop
mov
jb
vmovapd
xchg
rolb
in
pop
in
adc
ret
jmp
imul
inc
and
jo
leave
push
insl
and
mov
add
sub
pop
jp
test
bound
fsubl
dec
dec
xor
jbe
add
ss
stos
comiss
fwait
inc
daa
push
xorl
mov
push
repz
and
adc
repz
jne
test
cld
fcmovbe
push
fs
inc
test
sbb
lret
mov
stos
arpl
out
inc
sbb
fildll
pushf
clc
xor
sub
jmp
out
dec
inc
mov
sbb
imul
in
sub
pop
pop
ss
dec
jns
je
pop
or
and
mov
loop
fcoml
cmp
movsl
les
leave
jns
and
out
jl
jbe
mov
pop
and
rclb
test
push
xchg
add
cmp
repz
mov
movsl
sub
cmp
dec
cmpsl
out
push
bnd
pop
jle
push
idivb
push
push
loopne
mov
xchg
imul
test
imulb
mov
in
mov
stc
imul
iret
lods
jge
push
xchg
mov
xchg
pop
in
fldenv
inc
jne
in
or
and
push
rcrl
loopne
ss
loope
inc
shlb
push
iret
fstps
imul
rorb
pop
fldt
aad
jne
cmp
dec
xchg
mov
mov
or
out
out
dec
mov
lods
popa
shlb
mov
jne
mov
cmp
imul
into
ret
fldt
sub
cmp
push
mov
in
movsl
mov
out
mov
addl
mov
cmp
or
pop
sub
std
or
cmp
xchg
movsl
cmc
cld
lods
or
lret
add
push
push
push
in
repz
jno
rcll
gs
sbb
out
les
loopne
push
outsl
test
push
mov
cmp
xor
adc
adc
jge
mov
int3
sub
fstl
jo
lret
jmp
das
ss
pop
in
je
push
jno
mov
adc
nop
jge
xchg
ret
cmovo
fbstp
sub
es
imul
mov
leave
inc
and
into
or
loopne
add
dec
add
daa
ror
xchg
push
pop
leave
sbb
sub
out
jne
std
and
repz
fisubrs
sbb
push
jbe
mov
mov
lods
sti
test
in
pop
rorl
sti
sbb
push
add
push
jo
movsl
cmp
push
jg
or
or
xor
sarl
inc
ret
insl
xchg
mov
out
push
shrl
add
ljmp
and
add
subb
xor
cmp
sub
out
pop
out
xor
mov
pop
pop
dec
xchg
mov
xor
xchg
andl
dec
movlps
enter
sub
sahf
inc
outsb
cld
jge
push
add
rclb
add
mov
mov
and
imul
adc
fisttpll
mov
xchg
ficoms
mov
jns
movsl
cli
cmp
stc
int3
sub
mov
cmpsl
rclb
mov
mov
mov
push
push
mov
in
icebp
out
int3
lahf
push
lcall
fcmovnbe
fnstsw
or
imul
cli
clc
add
rclb
insl
inc
getsec
icebp
repz
jp
dec
sbb
jl
cli
lds
sub
insl
mov
add
mov
clc
jp
push
and
jns
add
mov
test
shr
pop
daa
icebp
xor
add
pushf
xor
int
or
es
cmpsb
scas
das
nop
mov
aas
xchg
ds
daa
inc
sub
and
adc
fidivs
aam
in
xor
lret
loopne
sbb
icebp
xchg
dec
cs
in
and
les
push
clc
andl
cmp
pop
idivl
in
cld
aad
mov
test
xor
pop
inc
mov
pusha
cmp
cltd
push
ret
sbb
adc
jns
push
out
jle
clc
add
dec
mov
pop
xor
loopne
testl
mov
lds
cwtl
xchg
mov
in
adc
mov
inc
xor
fwait
popa
push
push
cmp
daa
or
pop
call
andnps
ljmp
fidivrl
sub
scas
bound
push
daa
mov
mov
push
mov
loop
subl
sbb
sub
xchg
movsb
or
pop
shr
pushf
cmp
push
pop
pop
xchg
adc
xlat
pushf
or
ss
mov
inc
rcll
push
aam
jmp
or
aas
jbe
loopne
cmp
pop
shll
lea
dec
rorb
push
mov
scas
push
jmp
jmp
mov
in
pop
pop
fsts
out
add
aaa
adc
and
mov
xor
add
mov
jns
mov
jb
dec
les
pop
jmp
dec
adc
mov
jl
js
gs
jp
shll
loopne
out
stos
inc
fsubrl
jo
dec
jns
mov
out
arpl
lcall
xor
aad
sub
xchg
inc
or
call
rolb
jb
push
dec
mov
adc
mov
jo
scas
cmp
jb
std
orl
test
push
push
sub
jns
xchg
ds
jg
iret
shlb
clc
imul
mov
mov
add
mov
push
push
fcompl
adc
cld
mov
test
test
ljmp
push
or
int3
adc
fs
sub
cmc
mov
sbb
jnp
js
mov
les
rcrb
shr
pusha
lret
lds
es
iret
and
rol
in
cmp
arpl
scas
dec
add
faddl
dec
push
or
adc
cmp
lds
sbb
in
popf
scas
sub
fmul
cmc
test
or
movsb
jg
loope
or
sbb
and
push
mov
mov
and
mov
xor
out
push
mov
xor
mov
cs
mulb
cli
dec
mov
cmp
ret
pop
les
cmpsl
fmuls
bound
inc
inc
or
jecxz
xchg
adc
jge
ret
clc
fsubrs
jg
adc
hlt
pop
mov
lret
rolb
outsb
fdivrs
leave
rol
enter
out
shl
mov
jmp
aas
rcl
js
aam
push
mov
or
decb
mov
cmp
test
nop
daa
cmp
cmp
mov
push
push
mov
lods
sbb
scas
or
sbb
mov
insb
sbb
mov
aas
scas
mov
inc
jmp
addl
in
fnsave
sub
sahf
push
out
push
mov
pop
add
in
fists
mov
jecxz
xchg
pusha
pop
push
jl
push
mov
data16
mov
adc
jl
or
aam
inc
mov
lret
vpsubusb
fwait
jge
cmp
push
lcall
fwait
hlt
push
clc
mov
and
add
mov
mov
or
fisubs
inc
xor
mov
push
push
inc
jle
pop
add
in
cmc
lods
mov
fmuls
into
rcrb
cld
push
lods
mov
cmp
stc
jge
sub
push
es
lods
test
imul
sbb
mov
mov
movsb
pop
cmpsl
jbe
ret
ljmp
in
mov
test
fisttpl
loope
add
push
jp
xor
fldl
inc
mov
mov
mov
pop
dec
or
inc
popa
sub
subb
mov
mov
push
icebp
and
and
push
lahf
stos
shrb
cmp
sbb
int3
addr16
and
std
addl
push
and
adc
jge
int3
dec
push
scas
sub
fldt
ret
frstor
fsub
fsts
out
adc
xchg
and
cmpsb
inc
js
and
adc
mov
sbb
pop
pop
cmovno
test
push
or
cmp
jg
lret
in
fwait
lea
dec
pushf
popa
mov
outsb
pop
inc
inc
and
pusha
outsl
and
rclb
xor
fnstenv
nop
mov
add
in
outsb
pusha
mov
lds
xor
repnz
xchg
dec
repnz
imul
scas
or
shrl
xchg
lea
rorl
leave
enter
je
int
mov
sbb
negl
sbb
push
out
ja
xlat
dec
xor
add
mov
xchg
rorb
sbb
out
push
cmpsb
xlat
int
pop
nop
adc
sbb
and
mov
call
add
out
pushf
xor
or
mov
add
jb
dec
je
clc
or
dec
scas
jg
lea
popa
std
jne
repnz
mov
icebp
cmpsb
inc
sbb
mov
mov
idivl
andps
xor
sub
cmpsb
stc
sub
xorb
cs
xor
bound
insl
incl
fucomp
and
fcompl
gs
pop
movsl
mov
jnp
les
std
ja
xor
test
mov
lret
inc
sub
imul
adc
bound
push
pusha
sub
inc
sub
fadds
cld
dec
inc
nop
std
sahf
push
push
jo
test
daa
dec
es
js,pn
mov
mov
adc
popa
mov
ret
into
mov
jle
jns
push
cmp
fs
mov
flds
mov
mov
sub
dec
pop
insl
nop
stos
add
iret
rolb
test
rcrb
push
loop
sub
aad
mov
sub
and
stos
mov
dec
imul
adc
pop
pop
ret
and
daa
cmp
aaa
fs
xchg
fbld
out
mov
pop
adc
pop
dec
ror
ljmp
movsb
mov
cmp
out
mov
or
xlat
push
pop
xchg
pop
or
lods
xchg
gs
dec
inc
mov
cmp
test
cmpsl
loop
adc
test
outsl
sbb
fucomp
sbb
nop
hlt
lods
or
gs
nop
cld
dec
es
stc
xchg
adc
fs
sub
sbb
test
jb
push
and
sbbb
mov
adc
push
adc
inc
adcb
lods
push
adc
scas
dec
insl
insl
ret
push
xor
daa
fiadds
push
adc
in
add
js
fisubrl
das
push
js
rcll
test
out
sti
inc
add
popa
push
loop
pop
shll
cld
aam
fidivs
es
adc
cmp
stc
sti
ret
pop
add
push
sub
cltd
stc
sub
xchg
pop
xchg
out
lret
mov
ror
in
mov
pop
adc
xchg
stos
outsb
jnp
inc
ja
les
push
shll
xchg
jae
sahf
insl
ds
push
imul
pop
sub
mov
pop
or
jb
xchg
pop
ss
jle
cmpsl
shlb
jae
jle
cmp
dec
inc
cwtl
cmp
arpl
fwait
in
sahf
mov
adc
fcompl
cmp
jl
pusha
pop
sub
popf
daa
arpl
push
mov
or
jl
jle
js
xchg
in
lahf
fwait
pop
sbb
dec
in
loop
mov
adc
mov
cs
ret
sub
and
clc
mov
push
icebp
push
push
cmp
je
nop
sub
lods
lds
adc
cld
jge
sbb
scas
je
out
aad
in
ss
sub
inc
inc
adc
idiv
fsubs
xlat
mul
adc
je
push
xor
pop
mov
mov
push
adc
out
push
push
and
daa
cmpsl
push
mov
lock
push
das
adc
adc
or
daa
mov
pop
in
push
add
fstl
mov
imul
xor
xchg
push
into
cmpsl
cmp
add
stc
cmp
push
lods
lods
push
fldl
push
stc
sub
sub
icebp
data16
lret
fucom
xchg
dec
fs
pop
jecxz
lods
pop
loope
add
and
xor
push
and
addl
sbb
push
mov
or
sahf
jno
dec
sbb
test
dec
mov
push
testl
ret
mov
push
pusha
out
mov
sbb
scas
xchg
aas
rcll
pop
fnop
jle
test
inc
mov
vmulsd
gs
and
outsl
add
js
popa
or
cmp
mov
sbb
add
in
int
dec
mov
push
adc
pop
das
add
adc
stos
fdivs
mov
filds
mov
gs
in
sub
jnp
cmp
cs
pusha
push
and
sub
xchg
jae
xchg
pop
cmp
push
cmp
jbe
imul
rol
push
adcb
cmp
sti
xor
ret
dec
outsb
mov
sub
cmpsb
in
test
roll
sbb
lahf
push
outsb
push
nop
jmp
cmp
xchg
imul
lcall
add
adc
mov
in
xor
dec
js
pop
mov
sbb
push
xlat
loop
cmp
dec
push
stc
push
aaa
pushf
js
xor
enter
test
movsl
aas
lock
mov
lahf
fstps
sub
lfs
jg
and
pusha
mov
sub
pop
lret
outsl
loopne
xor
jo
ljmp
mov
lret
or
ss
adc
daa
mov
test
mov
sub
testb
sbb
mov
sub
mov
mov
adc
mov
cltd
out
jmp
xlat
cmpl
inc
pusha
lret
xchg
cwtl
add
xor
cmpsl
dec
out
add
jge
jns
xchg
mov
movsl
xchg
xchg
and
lret
or
xchg
scas
push
in
push
jle
imul
inc
cmp
stos
sbb
mov
pop
stos
int
push
dec
xor
xlat
mov
in
int
push
iret
sub
movsl
xor
mov
movsl
jb
adc
pop
mov
mov
mov
outsb
out
test
je
and
mov
pop
xchg
inc
cld
sub
jmp
and
jnp
and
sbb
loopne
je
mov
or
jmp
rcll
cmpsb
out
inc
aaa
sub
add
sub
jle
jns
xor
outsl
cmpsl
or
cli
cmp
mov
xchg
jp
pushf
cmp
not
cmp
pop
in
xchg
adc
aad
mov
cmp
mov
add
call
mov
scas
lock
sub
fs
cwtl
movsb
shll
cwtl
adc
aad
scas
insl
jl
not
sub
or
mov
pop
push
jns
sahf
mov
insb
and
dec
ja
dec
sahf
test
scas
cmp
test
shrb
xchg
or
pop
scas
mov
xor
xchg
add
xor
and
cmc
rcrl
xchg
in
dec
add
cld
dec
nop
or
mov
rep
xor
and
lods
out
or
push
mov
xchg
lcall
lcall
stc
xchg
jmp
fs
movsb
lcall
or
push
int
mov
mov
shll
and
lcall
mov
in
insl
cwtl
lock
inc
jbe
push
adc
jb
decl
fistpl
mov
js
lcall
stc
push
adc
in
ror
dec
ds
and
test
inc
out
push
stos
mov
or
cmp
sbb
dec
imulb
hlt
dec
xchg
jp
outsb
insl
test
out
push
or
js
js
fcoml
sbb
and
ret
mov
das
test
pushf
jge
dec
aam
in
cltd
or
push
dec
mov
mov
mov
jno
dec
test
mov
or
push
pusha
mov
xchg
push
sbb
lahf
mov
movsb
cmp
int3
mov
jmp
push
jns
pop
mov
mov
das
cltd
pop
cmpsb
idivb
lahf
push
call
inc
add
mov
mov
ds
les
push
add
xchg
lret
add
cmp
fcmovb
adc
imul
imul
push
pop
sub
dec
adc
sbb
pop
dec
mov
sbb
jo
jo
mov
pop
pop
loopne
mov
xor
add
jecxz
pop
cmc
or
cltd
stos
adc
mov
push
insb
add
fnstsw
cli
daa
xchg
sbb
or
out
dec
cmp
pop
mov
dec
or
test
cli
iret
shrl
mov
ja
inc
sub
in
ret
out
cmp
mov
pusha
pop
rcr
dec
movsl
add
sbb
imulb
dec
ret
outsl
lret
sub
nop
hlt
into
dec
xchg
insl
adcl
jnp
xor
les
mov
cli
in
adcb
mov
or
jmp
add
cmpl
xlat
cmp
movsl
mov
loopne
dec
mov
cli
testb
xchg
cltd
jb
inc
test
fdiv
mov
fildl
sbb
fisubl
sbb
cli
mov
hlt
sub
sbb
je
adc
cs
lock
cmp
xchg
add
pushf
incl
mov
jmp
das
stc
popa
fwait
in
dec
sbb
adc
pop
inc
and
imul
orb
cmp
sbb
hlt
pop
sbb
cmp
inc
dec
int3
jge
repz
xchg
dec
jb
mov
insb
xchg
push
jge
xor
cmp
jl
jno
sbb
test
fs
mov
loope
sub
lret
rcrl
shl
and
jo
fmuls
std
mov
in
cmpsb
mov
scas
lds
sbb
subb
cmpsl
outsb
jl
subb
repz
pop
sub
nop
jnp
pop
push
outsl
push
arpl
inc
pushf
xor
movsb
stos
pusha
cmpsl
lret
test
or
clc
clc
push
mov
jg
sub
mov
fcompl
repnz
xchg
add
stos
mov
dec
sbb
xchg
fildl
push
jb
sbb
or
and
pop
mov
push
fs
sarb
or
lret
pop
lret
mov
xchg
mov
push
fs
and
and
pusha
xchg
xlat
sbb
cld
rol
mov
aaa
mulb
js
int
sbb
ret
jge
rcrl
in
or
or
aad
mov
imul
push
loopne
out
sub
aam
mov
fdivrs
cmp
adc
inc
jp
pop
out
jg
dec
out
jg
fnsave
push
loopne
mov
in
mov
inc
inc
mov
inc
or
roll
push
cli
movsl
cmpb
sub
icebp
ja
clc
std
test
dec
int3
sbb
lcall
hlt
sbb
fwait
mov
sbb
adc
iret
lods
in
dec
cwtl
or
xor
ja
mov
mov
cmc
jge
dec
fstp
or
sub
popf
cmp
cmp
loopne
outsb
jmp
push
testb
fcmovu
cmp
add
aad
test
jns
js
cmc
adc
xor
xor
cli
sbb
cmp
mov
in
imul
mov
insb
sahf
outsl
or
pop
cs
sub
frstpm(287
dec
ret
pop
cmpsl
int
or
mov
add
imul
inc
mov
lcall
aaa
lods
fistpll
into
adc
xchg
repz
mov
insb
insb
push
sbb
add
mov
shlb
sahf
out
mov
mov
lret
outsb
push
iret
jbe
adc
xchg
cmp
daa
into
adc
cltd
add
mov
sub
in
movsl
cmp
int
lcall
stos
mov
add
incb
inc
jo
xchg
jmp
xchg
and
loope
cli
ja
push
xor
dec
pop
mov
add
and
into
jl
xor
int
sbb
int
cli
ds
pop
scas
rol
neg
scas
push
jb
cmp
adc
dec
rorl
sub
or
in
sbb
pop
bound
inc
loopne
call
mov
lret
mov
xor
xchg
sti
and
scas
mov
repz
scas
fs
pushf
adc
inc
mov
cwtl
jns
push
orb
fadds
sbb
add
xchg
or
inc
in
jns
sbb
push
shr
ds
pop
lea
imul
test
mov
mov
xor
pop
fnstenv
popa
add
add
stos
add
add
dec
and
push
lret
pop
mov
ret
sub
outsb
fsubrl
loop
ficompl
mov
sub
xor
lret
out
mov
push
mov
testb
push
mov
add
imul
pushf
mov
ja
jae
ret
sti
inc
sub
mov
ja
sub
popf
cs
adc
xlat
imul
mov
fs
pop
orb
sbb
jno
jo
xchg
mov
sbb
jle
js
clc
inc
test
out
dec
shlb
or
pop
pop
fiaddl
fistl
mov
pop
mov
push
inc
scas
hlt
aam
aam
in
les
mov
cmp
jb
xor
mov
adc
pop
out
inc
ljmp
out
lret
les
add
push
inc
adc
aas
xor
leave
repz
mov
adc
mov
sbb
mov
or
pop
loop
or
jge
xchg
inc
fists
add
xchg
es
dec
into
sub
call
nop
int
jg
push
mov
out
add
push
jge
or
jg
ja
mov
push
stc
movsb
loop
cs
inc
mov
dec
mov
nop
lock
inc
mov
lock
mov
adc
test
mov
adc
dec
stos
ficoml
das
repnz
cmp
xor
jne
mov
mov
lock
nop
jle
jae
cld
or
or
lock
loope
cltd
jne
xchg
inc
adc
divl
es
movsl
lock
pop
fistpl
in
cltd
test
pop
lcall
repnz
icebp
mov
fstps
mov
pop
hlt
test
rcr
fdivrl
sub
push
jno
mov
insl
pop
jb
mov
lret
jbe
cmp
inc
dec
adc
int3
pop
adc
nop
cltd
inc
inc
dec
int
xchg
xchg
insb
mov
jo
dec
arpl
repnz
push
and
push
dec
scas
pop
divl
jecxz
pop
ficoms
cwtl
shl
popf
int
add
fdivs
sbb
fs
sub
movsb
call
sbb
mov
mov
sub
and
push
cmp
outsl
leave
cmp
add
jge
xlat
inc
int
xor
fucompp
dec
adc
inc
mov
mov
push
not
in
nop
sbb
pusha
sbb
jl
mov
mov
arpl
jmp
test
xchg
sbb
mov
les
cmp
lcall
add
fmul
push
and
or
les
imul
push
lcall
pop
sbb
hlt
popf
sbb
mov
cmp
inc
aas
mov
xchg
into
cltd
popa
mov
cmpsb
aaa
fisubrl
js
stc
inc
adc
or
dec
loopne
aad
fsubrs
adc
pop
fdivl
popl
add
dec
mov
sub
push
jae
lock
xchg
ret
test
xorb
sub
fsubp
leave
xor
divl
xor
sub
jecxz
loopne
add
pop
test
addr16
sti
sub
xchg
leave
mov
std
jnp
jo
jne
mov
xchg
cmp
adc
xchg
pusha
in
mov
imul
xor
sahf
insl
mov
test
lret
mov
push
adc
pop
mov
repz
loop
cmp
mov
inc
ja
clc
scas
cmp
fcoml
aad
mov
mov
adc
lret
inc
shll
pusha
jne
pop
test
pop
push
lock
add
jge
neg
mov
fwait
inc
pop
in
mov
xchg
in
enter
mov
in
xchg
mov
inc
inc
cld
sbb
jne
mov
pop
cmp
xor
call
or
lea
cmp
jo,pt
push
mov
sahf
or
sbb
and
popa
dec
aas
jbe
rcl
in
shlb
cmp
shll
repz
add
decl
sbb
mov
or
dec
arpl
add
out
xchg
lret
mov
scas
dec
test
pop
dec
pop
or
pop
jmp
sub
aaa
stos
call
into
int3
xchg
sub
pushf
movb
mov
leave
in
cmp
sub
xor
mov
ret
mov
mov
leave
push
dec
jbe
daa
mov
nop
out
sbb
mov
scas
aas
test
jge
mov
js
and
lcall
mov
mov
ja
test
push
mov
pushf
push
ljmp
js
sub
inc
xorb
mov
cmp
loop
push
xchg
adc
fs
push
jle
lea
ja
lea
xor
je
mov
clc
clc
mov
outsb
push
xchg
or
mov
and
shr
lds
out
xor
lods
jne
out
leave
out
jne
inc
scas
ret
ret
loop
dec
push
lods
pop
push
xchg
dec
inc
shrb
cmp
cwtl
and
adc
aad
bnd
cmc
loope
shlb
into
push
mov
in
bound
xlat
pop
and
inc
scas
movsl
mov
jp
jmp
xchg
cli
xchg
push
andb
or
push
mov
stos
inc
jnp
int
das
outsb
pop
lea
cld
mov
das
mov
and
dec
sub
push
fdivl
cld
lea
int
pushf
out
mov
sti
test
movsl
push
xchg
clc
mov
and
mov
test
mov
inc
mov
clc
jecxz
dec
test
dec
ljmp
jnp
adc
fwait
int
cmp
jno
and
jns
faddl
xor
mov
mov
xchg
ss
stc
aaa
jno
mov
out
push
xchg
out
aas
push
icebp
aaa
jnp
pop
stc
mov
add
xchg
jns
fsin
mov
xchg
add
shl
push
scas
mov
rorl
sti
xchg
push
push
fidivrl
lock
mov
dec
mov
xor
pop
mov
lcall
sub
dec
pop
out
jae
pushf
std
mov
outsb
sbb
clc
xor
xor
xchg
roll
fmulp
rcrb
xor
xchg
mov
dec
aaa
std
ds
idiv
and
dec
add
jge
inc
lcall
arpl
xor
subl
mov
cli
stc
and
or
mov
aaa
mov
add
shrb
aam
jle
popw
fisubrs
xchg
cmp
adc
loope
adc
jmp
or
pop
inc
sbb
sub
dec
mov
outsb
dec
mov
std
jb
bound
in
ds
mov
sbbl
sarb
ret
arpl
jne
imul
fucomi
rorl
or
sbb
jnp
jp
or
sub
mov
add
test
pushf
popa
adc
mov
es
sub
fs
ljmp
leave
jnp
pcmpeqd
in
repnz
mov
dec
call
popf
sbb
fisttps
add
aas
cmpsl
xchg
ficomps
push
mov
cs
cmc
gs
adc
lcall
adc
pop
xchg
dec
push
inc
push
idivl
jle
pop
inc
mov
cmpsb
push
add
add
mov
and
xor
fisttpll
insb
int3
loope
mov
fimull
lret
shl
cld
push
or
jmp
ds
in
les
jo
or
dec
test
jl
fisubrl
xchg
or
sti
lea
mov
enter
movsb
pusha
imul
call
lock
cmpsl
lods
xor
ds
ljmp
scas
mov
jb
adc
inc
adc
lds
inc
mov
mov
fdivs
push
int3
hlt
lods
js
pop
add
pop
or
mov
mov
jbe
pop
xchg
or
sub
hlt
stos
bound
push
and
xor
add
jnp
jmp
push
xor
xchg
mov
fucom
mov
loop
xchg
sbb
dec
mov
jbe
mov
ret
sbb
gs
iret
jbe
xchg
cmpsl
jbe
xchg
orb
repz
mov
mov
pop
popa
jge
arpl
dec
loopne
sbb
add
push
mov
test
ja
dec
fadds
mov
jb
pop
test
xchg
xchg
cmc
divl
adc
push
ret
lcall
popf
cmp
adc
or
sbb
inc
or
or
jl
daa
mov
iret
jne
into
int
or
cwtl
mov
clc
jmp
mov
lcall
addr16
mov
adc
inc
iret
sbb
out
cmp
je
xchg
inc
or
out
lds
sti
pmuludq
and
outsb
xchg
dec
mov
inc
inc
cmp
imul
jge
adc
orl
data16
roll
mov
xor
pop
stos
int
or
cmpsb
int
scas
cmpb
mov
sahf
push
inc
cmp
lcall
mov
js
mov
call
sbb
add
push
stc
push
outsl
sbb
jbe
push
repz
mov
int
pop
loopne
add
mov
or
xchg
push
mov
lret
push
sub
sub
pop
adc
push
test
add
fsubr
daa
lret
jae
pop
clc
or
inc
push
mov
hlt
jno
mov
pushf
ret
mov
mov
jne
mov
xor
les
subb
scas
call
ret
jno
mov
xchg
sub
aas
insl
sub
pop
fwait
aaa
lea
addr16
enter
push
das
push
das
xor
sbb
mov
clc
test
fsub
push
test
mov
popf
imulb
mov
push
pop
fs
out
cmp
push
pop
dec
mov
sbb
sbb
lock
movsl
outsl
jle
lret
fsubl
fnsave
xchg
cmp
fldt
lahf
jmp
xchg
sub
sub
aas
jns
jnp,pt
and
dec
sbb
adc
imull
mov
sbb
arpl
jne
lcall
mov
push
outsl
jle
jo
pop
cmpsb
pop
loop
ffreep
lret
inc
in
jmp
ror
push
mov
and
testw
addr16
sbb
cltd
sub
out
daa
jecxz
mulb
out
sbb
or
xor
add
es
mov
xor
and
into
add
roll
shrl
xchg
mov
mov
data16
add
ss
fwait
xor
call
inc
jp
arpl
out
inc
inc
dec
cmp
dec
imul
shl
xor
mov
inc
fiaddl
int3
dec
mov
dec
insl
xchg
or
jl
or
jbe
mov
sbb
aas
push
mov
push
movsb
stos
pop
popa
mov
jg
out
pop
test
mov
call
js
mov
push
lea
flds
jl
xor
push
stos
shrl
out
fwait
sub
mov
jecxz
pop
es
push
enter
sub
test
push
push
inc
mov
sub
dec
xchg
rorb
adc
jle
push
or
cmp
mov
and
adc
pop
test
xacquire
flds
nop
add
mov
ss
mov
in
pop
adc
and
fsubrl
std
mov
cmp
sbb
cmc
mov
negb
test
pop
and
pop
stos
loope
cmp
jb
add
mov
sbb
lret
adc
jp
bound
inc
jmp
cmp
mov
ret
fwait
cmc
call
cmc
mov
mov
leave
mov
adc
jb
enter
lds
lock
lea
mov
dec
cmpsl
push
pushf
mov
lds
mulb
mov
sub
ja
arpl
cmp
cmp
mov
adc
inc
push
jns
jno
xor
sbb
xchg
out
sbb
adc
inc
mov
xor
jl
jle
mov
adc
mov
jae
inc
mov
lds
imul
dec
jb
jecxz
add
sar
scas
jnp
jb
shrl
leave
or
add
mov
mov
psubusb
lods
adc
cmp
sbbb
imul
pop
or
or
push
jl
mov
pop
adc
jl
jns
and
mov
imul
jp
stos
test
inc
cwtl
cmp
jne
js
xchg
dec
rol
and
addb
mov
jge
mov
das
lods
sub
aam
cmpsb
or
fwait
ret
rcll
xchg
jle
xchg
sub
cmpsl
mov
popa
inc
lret
mov
mov
push
xor
mov
gs
mov
push
and
ret
xchg
push
enter
mov
adc
lret
enter
push
pop
ds
xchg
sub
pop
mov
xor
inc
fwait
mov
mov
outsl
xor
jmp
ror
dec
mov
xchg
add
iret
mov
iret
loope
push
decb
cmc
rcrb
cwtl
ss
xor
pop
jb
mov
bound
arpl
push
cmp
rcrl
out
inc
sub
mov
dec
inc
fstpl
je
cmpsb
stc
inc
adc
stos
sbb
sbb
call
call
pop
cli
aad
push
in
dec
repz
push
lahf
jmp
lret
outsb
sbb
adc
pusha
ljmp
mov
daa
or
aaa
or
cmp
mov
jnp
push
es
in
std
mov
lea
stos
cmp
arpl
mov
jnp
mov
cmp
push
adc
sbb
lahf
iret
xor
iret
fs
jne
mov
adc
xchg
sbbl
mov
sub
jge
sub
and
test
jecxz
cld
mov
rolb
add
sub
cmp
mov
shll
imul
cs
or
sbb
insl
sarl
xor
push
adcl
lock
jne
sub
and
mov
rorl
dec
xchg
pop
mov
push
lcall
in
leave
aam
push
movb
mov
subl
and
mov
mov
repz
pop
cmp
int
int3
push
cs
mov
sub
cmp
mov
lret
push
cwtl
mov
shlb
adc
jmp
mov
push
in
lret
testb
negl
cmc
in
aaa
pop
stos
js
or
ja
data16
ja
or
pop
pushf
movsl
pop
lods
pop
jge
enter
cmp
push
mov
dec
pop
lret
das
insl
scas
sub
cwtl
xor
loopne
sub
cmp
and
insl
dec
push
cmp
xor
gs
es
dec
push
push
cwtl
mov
loope
ljmp
out
cmp
fidivs
xchg
sub
jbe
nop
xor
in
inc
xchg
pop
lret
test
xchg
inc
lds
fimull
ret
stos
div
test
scas
pop
loopne
xor
or
outsl
pop
cmp
mov
movsl
hlt
mov
test
repnz
cmp
repnz
xchg
mov
ret
cmp
insl
push
and
xchg
jg
jne
movsb
jl
cmc
mov
jle
fbstp
sti
xor
mov
inc
imul
pop
fdivs
pop
stos
cltd
fisubrs
push
mov
bound
cld
roll
pop
ret
aaa
xchg
and
mov
das
in
jo
in
fadd
sbb
das
mov
sub
mov
xor
aaa
lds
dec
xorb
cmc
fsubl
sahf
xor
cmp
out
or
push
lods
imul
nop
dec
or
int3
lds
adcl
lret
mov
jns
push
mov
add
cmp
pusha
shrb
xchg
adc
xchg
inc
outsb
sbb
cmpsb
jl
negl
pop
jbe
call
cmpsb
and
in
int3
inc
and
sbb
inc
pop
test
jnp
xchg
mov
mov
inc
sub
sub
test
shll
add
ds
jae
dec
push
arpl
xor
inc
data16
cmp
dec
cmp
xorl
cmp
pop
jge
sahf
int3
mov
js
xchg
sub
cmp
mov
push
fcmovnu
xorb
out
dec
xor
xchg
dec
push
or
and
std
push
mov
and
or
ja
test
in
sbb
icebp
je
jae
push
pop
or
jo
int
sbb
in
mov
sbb
ljmp
xchg
mov
xchg
daa
jb
dec
push
sub
mov
int3
fsubr
xor
or
ret
fwait
jecxz
dec
pushf
xchg
jne
repz
adc
xchg
mov
data16
movsl
mov
loope
scas
inc
push
or
fstl
xor
push
push
in
push
push
jo
clc
in
es
xor
cmp
cmp
mov
js
push
sarb
cmp
shlb
jnp
icebp
xor
push
inc
pop
cli
arpl
mov
loopne
push
push
jno
shlb
adc
cmpsl
sub
pop
mov
popf
inc
pop
imul
fwait
and
dec
xchg
inc
and
cli
pusha
dec
mov
mov
subb
cmp
push
jne
xchg
fistl
dec
push
shlb
sub
adc
sub
jb
int
sub
call
repz
lea
dec
xchg
push
mov
outsb
jb
inc
stos
dec
ret
mov
adc
push
xchg
gs
xchg
push
xchg
pop
push
stos
sar
test
or
jg
jmp
push
iret
out
push
das
test
or
inc
xchg
out
cmp
xor
mov
adc
lods
and
arpl
add
pop
mov
mov
cli
xor
dec
jno
sub
and
dec
inc
pop
scas
cmp
pop
push
xchg
int3
orl
loopne
ljmp
mov
mov
ja
adcl
lret
mov
or
hlt
testl
cltd
push
mov
mov
push
mov
ret
jg
inc
push
fildll
rcrb
mov
call
jle
rclb
jnp
lock
sub
mov
push
lcall
push
pushf
cmpsb
mov
dec
aad
xchg
inc
sub
adc
dec
in
gs
je
xchg
inc
aas
lahf
repz
inc
mov
pop
or
adc
dec
int3
repz
cmp
cltd
inc
scas
loop
mov
and
inc
dec
call
inc
popf
inc
cld
lcall
mov
sbb
nop
lods
push
or
rorl
mov
out
dec
xchg
mov
xorb
xchg
stc
pop
xor
lret
jns
in
sarb
push
test
fwait
or
adc
mov
jmp
dec
pop
xor
ds
lock
jg
mov
adc
push
jecxz
mov
sbb
xchg
test
pop
lret
mov
or
mov
sub
imul
sti
push
and
pop
adc
clc
pop
add
mov
into
or
push
fisubrs
test
adc
scas
lcall
pop
ds
jmp
dec
int3
push
jmp
mov
rorb
mov
stc
sbbb
mov
nop
and
xor
mov
push
loopne
add
push
adc
hlt
pop
int
dec
out
and
and
sub
and
shll
ja
repnz
fcmovu
mov
fstps
lcall
add
je
inc
fstps
sub
fucomi
mov
or
fisttpl
mov
xor
inc
pop
inc
aam
mov
daa
adcb
mov
or
sub
loop
loopne
dec
test
xor
adc
sub
push
imul
pop
jmp
and
push
lret
imul
inc
es
mov
nop
mov
lock
js
push
xor
addr16
test
add
in
pusha
fsubl
out
jnp
jbe
test
icebp
mov
cmp
inc
push
roll
inc
sbb
in
push
jno
pop
xchg
xchg
cld
xchg
xchg
outsb
hlt
xchg
dec
popa
xchg
pop
push
or
cltd
inc
dec
dec
or
push
outsl
int3
dec
cmp
dec
popf
xor
inc
stc
inc
cmpsb
popa
mov
push
jmp
je
sub
sub
scas
dec
dec
filds
cmp
std
cwtl
or
lret
lret
fsubl
mov
inc
mov
and
xor
dec
and
frstpm(287
divb
mov
int3
inc
pop
mov
jb
dec
add
pop
jae
mov
cmp
movsl
insb
jg
clc
add
jbe
lock
push
cmp
subb
mov
jb
cltd
ds
movsl
dec
fnsave
cltd
pop
add
in
repz
les
and
or
loopne
fstpt
and
xor
mov
fnstenv
and
ret
inc
fidivrl
jno
xorb
add
xor
ja
cld
inc
ss
es
xor
cltd
icebp
aas
add
adc
enter
push
je
or
jecxz
mov
rcrl
xlat
movsb
push
and
insl
data16
jne
jns
jl
xor
popa
adc
adc
rorl
mov
xchg
add
push
lds
pop
lods
out
stos
adc
daa
mov
push
mov
outsl
shlb
std
sub
icebp
fsts
jbe
mov
mov
xlat
mov
push
push
dec
adc
inc
cwtl
ret
add
sahf
xchg
fsub
sub
sub
shll
mov
mov
gs
or
xor
mulps
xchg
lret
xchg
pop
and
mov
movsl
aas
das
or
jg
or
jns
subl
inc
or
jmp
loope
cmp
roll
or
jbe
mov
pushf
stos
dec
mov
jns
mov
negl
popf
cltd
xor
and
popa
ja
inc
stos
jno
mov
and
loope
or
pop
jne
ds
fs
mov
pop
inc
xchg
bound
insl
dec
and
fisubs
inc
inc
repnz
clc
jecxz
cwtl
adc
and
enter
jge
or
xchg
outsb
sub
lods
cmp
adc
cmpsb
data16
adc
mov
or
test
into
dec
push
cmc
mov
dec
in
mov
out
repz
stos
lahf
psrlq
cmp
outsb
dec
dec
clc
adc
test
out
fnstenv
xor
insl
idivb
aas
out
mov
inc
push
mov
or
xchg
push
or
out
cmpsb
adc
es
jmp
push
jns
xchg
stc
cmpsb
dec
cmp
jo
jl
scas
lahf
testl
pop
mov
je
repz
pop
int
pop
es
ja
ds
out
push
les
loopne
adc
je
std
sub
lods
xchg
pusha
push
push
test
push
das
out
lcall
movsb
stos
fsts
negb
pop
mov
add
dec
jns
sbb
in
xor
lods
mov
scas
mov
aam
lods
aad
mov
and
fs
add
lret
xchg
das
adc
sbb
jns
jmp
cmp
loopne
mov
push
mov
cmpsl
jmp
and
scas
ret
dec
jl
pop
mov
xchg
jge
fadds
dec
push
das
inc
xchg
xchg
sub
pop
inc
pop
mov
gs
mov
adc
xchg
fwait
loope
inc
mov
sub
pop
xlat
mov
sub
insl
imul
movzbl
pop
adc
jge
or
pop
addr16
in
je
sbb
mov
fbstp
mov
divb
rol
xchg
xchg
dec
cmpb
int
push
hlt
add
fdivs
dec
push
fstpt
jmp
loop
jl
xchg
rcrb
inc
mov
scas
and
cli
adc
out
pop
jl
push
mov
xor
lock
out
xchg
mov
mov
mov
imul
inc
pop
adc
and
in
mov
ret
fbld
dec
fdivl
fnsave
nop
jo
mov
inc
push
mov
pushf
push
jle
jns
ja
jnp
or
js
xchg
fidivrs
lret
vsqrtsd
xchg
sub
jbe
mov
dec
in
sub
in
sub
outsb
loopne
bound
fidivrs
jg
add
cmp
jecxz
jmp
test
adc
cmp
cltd
xor
inc
fistps
adc
shl
rolb
inc
adc
shr
mov
cmp
or
mov
or
test
dec
out
inc
cmp
gs
inc
pusha
aaa
and
xor
adc
rclb
jmp
call
out
lret
push
dec
push
mov
ret
push
das
adc
dec
rclb
dec
nop
add
pop
bound
pop
out
add
icebp
jo
popa
mov
lcall
and
mul
mov
sbb
shl
notb
shr
ss
mull
mulb
popa
enter
cmp
test
lret
outsl
cld
mov
push
push
or
add
mov
add
test
cwtl
mov
out
sbb
pop
das
fcmovnb
pop
or
pushf
hlt
mov
jae
fistpl
out
xor
xorl
out
xchg
mov
pop
jns
cmp
loopne
scas
add
dec
clc
xor
test
and
test
std
jg
push
movsb
dec
xchg
xchg
cli
push
dec
in
adc
dec
addr16
inc
sbb
xor
lret
jl
or
or
clc
mov
xor
test
xor
mov
out
jae
sub
int3
icebp
push
and
dec
dec
jge
mov
fmull
in
out
cs
push
fisubs
js
in
jl
and
je
scas
mov
dec
jns
lock
icebp
nop
js
lahf
mov
dec
into
xor
int
add
int
xchg
leave
rorl
outsl
ret
test
adc
and
or
xlat
cmpsb
jge
mov
subl
mov
and
push
push
mov
jnp
xchg
ret
xorb
jnp
mov
jmp
adc
jl
out
jle
sub
jecxz
bound
out
fucomip
or
ret
sub
in
imul
sub
ds
jmp
cltd
cmp
dec
popa
ja
dec
cmp
ja
sbb
pop
out
inc
xor
xchg
ret
xor
in
mov
mov
movsb
jg
aad
jle
in
ja
xlat
mov
in
mov
push
adc
incl
sub
add
xor
stos
xchg
jne
rclb
fwait
mov
sbb
xchg
inc
push
jb
inc
mov
ret
push
int
jecxz
mov
ret
pushf
push
pop
mov
loop,pn
das
dec
sbb
mov
add
xchg
inc
aaa
leave
hlt
xor
and
dec
fnclex
mov
sti
popa
testb
mov
nop
inc
jl
fdivp
sarl
jne
inc
aaa
mov
mov
push
mov
ret
fcomp
inc
shll
imul
push
jle
jge
jae
mov
adc
mov
cld
xchg
add
mov
fwait
test
ds
inc
ss
push
ss
lds
mov
xor
jns
test
sbb
push
cmpsl
mov
je
shlb
mov
xor
add
mov
dec
push
frstor
mov
cld
inc
mov
dec
fdivrl
pop
ja
repnz
clc
pop
push
aaa
cld
push
fsts
in
mov
scas
mov
lret
out
mov
es
mov
aas
leave
mov
out
lds
in
jns
push
outsl
mov
xchg
xlat
fisubrl
stos
pop
in
cwtl
push
dec
xor
cmp
shlb
ljmp
into
gs
and
dec
lret
sub
insb
xor
push
das
orb
dec
jmp
data16
mov
pop
outsl
inc
ret
shrl
mov
sahf
sub
sbb
or
in
pop
ds
das
push
add
es
out
and
lods
loopne
mov
cmp
jg
mov
dec
std
adc
loop
imul
ds
jnp
mov
ficomps
or
mov
xchg
fldcw
in
and
xor
scas
cmp
loopne
add
xchg
and
out
dec
cmp
jae
in
jo
push
dec
ret
in
inc
outsl
sarl
rclb
mov
sti
cmp
sahf
mov
shl
loope
fsubrl
xor
pop
hlt
cmpsl
shlb
inc
push
add
xchg
push
lods
push
mov
fwait
push
sarb
iret
cmp
add
mov
inc
or
lahf
rorl
mov
lahf
cmpsl
pmulhuw
mov
movsb
mov
bnd
mov
ret
pusha
or
sub
gs
mull
ds
mov
fcoms
hlt
mov
lahf
out
pop
add
inc
stos
jb
xor
adc
pusha
icebp
outsl
pop
inc
push
inc
lret
xchg
popa
out
inc
lret
out
iret
inc
mov
cmp
imul
sub
xor
jbe
inc
fsts
jp
mov
imul
jns
jle
jb
out
daa
mov
push
cmp
pop
rcrl
push
jbe
xor
xor
repz
inc
and
adc
hlt
push
xlat
out
test
cmp
jmp
in
loop
push
rcl
aam
push
lcall
xor
ret
lods
mov
xchg
sub
push
js
cmpsb
fstps
jl
lahf
daa
add
cli
xor
clc
insl
xlat
negl
sbb
push
jecxz
mov
out
outsb
jnp
jae
xchg
fcompl
out
jle
push
pop
roll
xchg
xchg
pop
xchg
outsl
xchg
loope
ss
adc
loop
dec
or
adc
jae
std
xchg
inc
push
and
lods
cmpsb
call
stos
loop
mov
add
jnp
mov
inc
xor
xchg
mov
sbb
inc
push
push
stc
rcr
jno
push
mov
clc
xlat
fiaddl
gs
and
andl
jecxz
jge
cmp
cmp
xor
dec
cmpsl
mov
sub
sbb
mov
lods
imul
dec
adc
ret
adc
ret
mov
and
cltd
mov
lea
dec
cmp
mov
mov
and
jp
lods
fistl
ss
xchg
push
rcll
mov
mov
inc
sbb
lret
or
movsb
sbb
pusha
or
ss
or
bound
jae
jns
mov
cwtl
inc
or
or
push
shr
sarl
call
cmp
and
ficoml
mov
jl
cmp
inc
jns
std
mov
adc
inc
push
gs
push
inc
mov
jmp
loopne
jmp
pop
rol
mov
ja
inc
cmp
dec
loop
mov
push
push
out
dec
xchg
cmp
mov
aaa
outsl
mov
stos
pop
jmp
arpl
or
push
jle
clc
ljmp
sbb
pop
xchg
insb
mov
mov
stos
lock
and
push
mov
push
adc
sub
mov
sbb
push
mov
mov
stos
inc
mov
xor
pop
xchg
jns
popf
push
jns
push
push
mov
pop
out
shrb
xchg
testl
adc
xor
sbb
mov
lret
aam
sarl
jno
and
pop
loopne
hlt
add
dec
rorl
pop
dec
cmp
repz
and
test
mov
add
cltd
mov
add
xchg
xchg
lcall
lret
repz
addb
mov
dec
sar
in
inc
ret
sub
push
fdivs
rolb
inc
xchg
push
je
fldcw
and
jno
adc
cltd
push
jns
out
orb
adc
test
or
push
ds
hlt
push
out
stc
in
dec
sbb
cli
mov
fldcw
pop
shll
sub
rolb
imul
pop
or
addr16
dec
mov
aad
xor
inc
or
mov
dec
rcll
gs
inc
loope
and
cmc
outsb
insb
fwait
push
call
add
inc
xor
stc
divb
xchg
pop
sub
clc
mov
insb
jl
stc
or
mov
push
repnz
adc
jne
cmp
xor
adc
loope
sbb
sub
sub
ffreep
mov
or
pusha
push
mov
es
pop
lret
ja
xchg
cwtl
insl
mov
pop
and
inc
xchg
hlt
and
pushf
push
adc
fsubrl
cmpsl
inc
xchg
loop
mov
out
mov
xor
rcrl
mov
fwait
shll
fstl
add
repz
mov
pop
js
inc
test
aas
aaa
mov
mov
jmp
mov
cmpsb
and
hlt
adcb
dec
mov
dec
rcl
andb
lock
aas
test
mov
std
cmp
mov
popa
mov
inc
mov
inc
jecxz
sar
sahf
lret
lods
pop
neg
dec
jb
jge
cmp
jo
clc
pop
inc
in
sub
pop
inc
xor
xchg
push
push
lock
addr16
pop
pop
xor
lea
pop
loopne
lea
repz
add
push
adc
jnp
mov
sub
ss
stc
dec
cmp
dec
ss
or
cltd
popf
pusha
loop
aas
mov
arpl
stc
cld
lods
mov
pop
pop
jne
in
fcom
fucompp
lods
fmull
mov
scas
jge
cli
test
mov
xorb
pop
xor
fld
xlat
xor
adc
lds
js
jg
lods
movsl
icebp
cmp
add
add
daa
or
sbb
xchg
jne
test
xor
push
pusha
loop
icebp
push
jmp
sub
mov
mov
lcall
mov
pop
lret
insb
adcb
test
push
es
int
and
addr16
add
out
jne
inc
outsb
cmc
push
mov
and
sub
jg
testb
shll
cmp
sar
in
cli
outsl
cmp
fdivs
out
xor
inc
sbb
and
aad
insl
jecxz
xchg
or
js
in
mov
stos
dec
rcr
xchg
pusha
sarb
loope
std
jg
mov
or
movsl
rcrl
clc
in
xchg
mov
icebp
pusha
popa
push
ljmp
loop
jno
adc
das
and
ficomps
add
pusha
pop
xchg
sub
and
jmp
mov
ljmp
pop
fmull
xor
inc
xor
jns
ret
cmc
mov
or
adc
push
ds
inc
sub
add
es
dec
mov
pop
popa
ss
das
loop
rcrl
gs
jbe
out
mov
or
call
in
in
add
push
std
fnstcw
cmpsb
jle
cld
ja
daa
cmp
mov
mov
lods
inc
cmp
popa
jle
sbb
jg
cmc
push
mov
mov
dec
sub
mov
xchg
sbb
stos
ret
lcall
imul
mov
jno
stos
mov
ljmp
ffree
ja
ret
and
or
fmuls
push
fcom
jbe
xchg
push
insb
popf
lret
cmp
cmpsb
sahf
xchg
jo
rcr
pusha
loop
mov
cmp
jmp
or
imul
jns
shll
out
inc
and
mov
in
negl
lret
and
aad
divb
or
dec
pop
add
mov
test
xlat
add
rcrl
in
and
mov
loope
outsl
mov
shlb
icebp
fists
xchg
jb
insb
outsb
push
or
lods
adc
adc
adc
or
jp
addr16
icebp
mov
movsb
lods
inc
aas
push
xlat
fcomps
or
jne
xchg
fistps
add
sti
insl
lret
jge
and
jg
test
sbb
in
aam
in
sti
sbb
cmp
js
fdivrl
in
nop
push
lds
cmp
push
dec
sbb
mov
movsb
or
jmp
jle
adc
pop
testl
aaa
cmp
loope
iret
dec
insl
inc
inc
jecxz
addr16
mov
pop
jp
ds
shlb
into
push
add
sti
dec
push
jl
rclb
shl
cmp
cltd
and
sub
mov
in
lods
mov
je
adc
adcb
adc
test
out
lods
jns
xor
jbe
out
inc
scas
das
and
fcmove
shrb
mov
pop
mov
lret
pop
imul
mov
add
xchg
gs
lods
or
sti
ret
jo
mov
mov
pop
scas
mov
testb
jb
or
sub
ds
jp
cmp
ds
cmpsl
nop
dec
js
addr16
push
lahf
mov
outsb
mov
pop
push
inc
jmp
mov
cmp
mov
cmc
add
hlt
dec
and
sahf
faddl
hlt
sbb
xorb
aam
mov
and
dec
or
inc
fsubs
add
add
and
pusha
and
dec
cltd
add
movsl
sub
sahf
clc
jbe
xor
add
pop
outsb
mov
repz
cmp
imull
push
sub
fcoms
mov
push
loop
xchg
ja
lahf
cmp
test
sub
xor
add
sub
jmp
iret
sbb
dec
subb
inc
push
cwtl
mov
lret
mov
xor
ljmp
jle
dec
jmp
data16
scas
mov
pusha
push
bound
fisubrs
call
insb
loope
xchg
sti
test
sbb
orl
mov
rorl
jl
cmp
sub
xchg
cmp
sub
pop
xchg
ja
stos
cmp
and
std
sbb
xchg
aas
add
mov
jp
inc
addr16
js
add
add
mov
pusha
jge
mov
jnp
pusha
ja
mov
es
insl
push
jbe
push
adc
js
pop
push
int3
imul
pop
lea
mov
jp
adc
or
decb
das
cwtl
push
pop
sub
movsl
shrb
clc
cmp
in
in
xor
rolb
sbb
cmp
fsubl
sarb
shll
bound
cmpsl
push
outsb
xchg
mov
sahf
push
js
push
jp
pop
add
repnz
push
gs
lcall
xchg
fsubs
cmpsl
push
out
push
cs
shl
mov
in
cli
fcompl
pop
and
lods
test
xor
push
js
lds
call
push
sub
cli
jg
imul
sti
pop
add
add
pop
jb
mov
sbb
jns
jne
add
in
jmp
bound
lcall
pop
in
andl
mov
lahf
fisubrl
cmpsl
mov
lock
or
das
lds
lea
es
xor
ret
pushf
insl
icebp
mov
jns
or
mov
add
mov
xorl
inc
sar
add
cmpsl
repnz
shrl
jb
int
hlt
inc
dec
callw
mov
scas
js
xchg
out
rol
repz
push
es
imul
rclb
xchg
cli
sahf
mov
cmpsl
rcr
ljmp
jge
mov
sub
cltd
cwtl
andb
ljmp
jo
mov
int3
jne
das
sub
xor
mov
fsts
add
dec
into
pop
mov
shlb
adc
jge
mov
xchg
mov
loope
fisubrs
lret
adc
jo
add
inc
mov
fmulp
in
push
enter
out
ror
push
inc
stc
fwait
cmpsl
add
cltd
cmp
mov
mov
adc
mov
imul
stc
int
adc
jg
popf
and
cs
iret
dec
inc
sub
adcl
add
jbe
push
pop
aam
mov
negl
dec
mov
or
adc
or
mov
mov
pusha
icebp
xor
mov
fcompl
loop
daa
rcrl
and
add
adc
cltd
movsl
loope
cmc
movsl
test
cmp
add
jo
jge
lea
mov
movsl
push
outsl
cld
xor
jle
call
sarb
push
shrl
leave
out
cmp
xor
cs
rcrl
daa
mov
repnz
jb
fcmovbe
lret
movsl
clc
insb
test
adc
sbb
fcoms
fldcw
mov
shll
inc
pushf
pushf
or
mov
inc
femms
sbb
shrl
mov
loope
inc
mov
jmp
jge
into
add
mov
outsb
cmpsb
mov
push
push
and
push
mov
lock
mov
and
out
sbb
fxsave
subb
jb
push
hlt
imul
in
push
cs
adc
es
cmp
dec
movsb
aam
push
lock
out
daa
pop
mov
xchg
cmp
inc
stc
ds
or
mov
jns
dec
in
pusha
inc
stos
in
lock
inc
test
jmp
add
add
daa
mov
outsb
jp
inc
xor
mov
jae
mov
jns
fwait
pusha
sbb
ret
lretw
jae
sbb
call
dec
daa
sub
lock
push
imul
push
inc
sub
mov
out
test
and
and
or
dec
mov
rol
lret
cmp
dec
mov
ljmp
imul
sub
jo
or
rolb
adc
mov
xchg
popa
in
scas
jae
mov
sub
add
sbb
aas
or
fidivrl
jb
jno
push
adc
jecxz
fidivl
xlat
ret
outsb
mov
rcl
pusha
in
xchg
and
pop
pop
xor
cmc
push
jo
jl
mov
cmp
dec
and
ja
dec
cmp
popa
pop
cmc
mov
xchg
push
inc
mov
push
fcomps
jns
mov
sbb
jo
stos
push
xor
xor
imul
mov
data16
icebp
mov
mov
cmpsb
imul
jmp
add
pop
loopne
leave
jb
adc
fstl
xor
mov
lret
lret
shrb
dec
xor
mov
fcompl
sub
jbe
pop
lock
mov
pop
pushf
cwtl
xchg
stos
popa
add
loop
in
dec
mov
mov
adc
repnz
mov
div
rclb
das
mov
xchg
inc
mov
xchg
push
shl
add
add
push
arpl
nop
pop
test
cmpsb
cs
sub
jo
jmp
cmp
jle
mov
mov
jmp
or
mov
cmpsl
jle
add
sub
leave
mov
jp
cmp
cmp
hlt
pop
jbe
sbb
popl
jo
sub
xchg
push
push
cmc
or
lods
dec
idiv
nop
clc
or
and
xchg
dec
inc
je
and
mov
adc
mov
cmp
insl
fldt
jle
pop
sti
repz
ds
ja
add
push
scas
add
call
nop
outsb
test
jno
inc
ljmp
mov
stos
addr16
das
in
mov
jo
daa
push
fbld
pusha
sbb
arpl
jle
xchg
sti
fcmovnu
sbb
insl
in
imul
dec
cmp
xor
sbb
ficoms
pop
xorb
push
and
inc
cmp
mov
out
cmp
mov
xlat
dec
enter
je
stc
mov
and
mov
jge
mov
sbb
int
and
fdivrl
stos
aad
sti
insb
xor
pop
pop
xor
je
and
cmp
xchg
movsl
call
xchg
sbb
inc
mov
or
in
getsec
xor
jne
pop
stos
or
sub
mov
test
pop
stos
dec
in
xchg
sub
adc
ret
test
jo
sub
mov
sub
in
xchg
mov
inc
push
or
repnz
inc
sbb
or
jecxz
test
cmp
test
outsl
mov
aad
dec
outsl
and
jbe
iret
push
ss
in
hlt
je
cld
shlb
bound
sbb
mov
jns
lods
dec
lahf
mov
xor
and
jno
scas
or
das
xor
test
insb
add
mov
ds
out
xor
orb
insl
sub
loop
mov
and
ss
cwtl
inc
add
mov
sbb
sti
int3
xor
and
lahf
mov
dec
aad
mov
pop
mov
je
or
clc
pop
insb
pop
test
aam
comiss
mov
add
insb
out
out
pusha
push
pop
ror
adc
jns
jmp
stos
jge
sti
and
push
xchg
xchg
mov
std
or
lret
call
rcll
and
fstpt
cmpsl
cmp
in
dec
cmp
cli
movsl
aas
movsl
mov
jge
xor
std
les
les
scas
xchg
mov
push
rcll
xchg
pop
pop
test
and
mov
cmc
arpl
aas
adc
inc
addr16
fstps
inc
xor
lret
and
lea
aas
mov
cwtl
push
idivb
and
hlt
xchg
cmp
mov
es
lea
mov
xchg
mov
shrb
xchg
inc
jle
fnstenvs
sbb
mov
push
mov
sbb
pop
pop
int3
or
mov
call
cld
in
pop
call
jb
lret
adc
lods
out
and
inc
pop
xor
pusha
out
dec
xchg
lds
dec
lds
es
ja
int3
and
mov
inc
push
xor
movsb
mov
imul
sbb
pop
jg
xor
xor
movsl
push
xchg
loopne
xchg
inc
repz
or
pop
cmpsl
cld
mov
add
fnsave
imul
orb
andb
outsl
scas
jne
pop
sub
mov
push
stc
pop
push
or
fistl
cli
push
nop
add
cli
clc
pop
addr16
add
lods
add
enter
sbb
fcmove
cmp
xchg
jg
fadds
inc
xchg
test
lods
push
dec
and
js
or
jecxz
and
mov
mov
stc
pop
adc
push
jecxz
cwtl
ss
or
jnp
scas
movsb
rcl
bound
jne
orl
sbb
jnp
cmpb
orb
dec
arpl
je
out
gs
pop
in
push
inc
pusha
mov
xchg
popf
aam
imul
mov
sub
call
cmc
lea
jecxz
mov
inc
jnp
sbb
sub
jecxz
test
xor
xor
call
mov
stos
lahf
call
or
data16
or
add
jnp
xchg
leave
gs
xor
xchg
out
and
xlat
popf
xor
dec
push
xor
mov
out
and
push
lret
stos
icebp
xlat
push
xchg
insl
or
aam
aas
jno
hlt
dec
shr
jnp
xchg
cmp
movsb
mov
insb
cmpsb
hlt
xlat
je
add
inc
pop
rclb
mov
cs
mov
enter
cmc
inc
stos
cld
mov
out
mov
mov
push
call
jmp
insl
sub
jnp
push
xor
ja
cmpsl
mov
movsl
mov
or
sbb
xchg
dec
and
pop
jg
xchg
test
dec
cltd
jmp
xchg
sub
jo
jge
pushf
sub
sbb
jg
cwtl
add
movl
sbb
cmpsb
sub
push
in
mov
cmp
lods
push
and
lods
xchg
mov
mov
mov
xor
jae
push
push
call
inc
pusha
inc
lcall
add
dec
daa
push
or
pop
fildl
pop
sub
adc
data16
cmpsl
les
xor
popf
cmpsb
scas
or
mov
cmp
in
stos
xor
lret
cmp
add
fldenv
cli
stc
cmp
add
sarb
jmp
in
and
data16
push
push
push
filds
clc
xchg
sti
add
mov
inc
jle
pop
xchg
shll
cwtl
jns,pt
movsb
imul
push
pop
sbb
sbb
jge
jae
pusha
mov
mov
mov
mov
and
je
mov
jl
outsl
call
sub
mov
scas
in
daa
sub
xchg
fistpl
push
andb
ss
sbb
aaa
test
fnstcw
mov
mov
fcmovb
mov
pop
shrb
lds
psrad
mov
and
into
jb
pop
push
inc
xchg
orb
cmp
push
pop
and
lcall
inc
sub
fmull
lret
mov
pop
sub
or
hlt
ljmp
cmpsl
sahf
outsl
popf
or
inc
test
jp
mov
ja
sub
jo
sbb
fmuls
dec
xorl
icebp
mov
cmpsb
jg
sti
sbb
mov
loopne
push
cmp
and
or
sub
xchg
inc
jmp
push
mov
jl
lret
push
in
and
dec
push
shll
imul
push
dec
dec
std
addb
fidivrs
adc
aam
mov
dec
outsb
add
dec
lock
cmpsb
xchg
cmp
add
scas
or
ds
into
push
jp
push
addl
mov
sub
pop
fstps
mov
jno
inc
cli
repnz
loope
cmp
jbe
lds
pop
arpl
in
scas
cli
dec
pop
inc
cmc
out
mov
stos
add
cmpsl
daa
jecxz
ds
dec
cmp
xor
insl
cmp
pop
lds
addb
mov
pop
stos
xchg
mov
xlat
jne
mov
mov
aaa
jmp
pop
or
aas
push
js
jmp
adc
mov
pop
or
fistpll
push
call
fs
or
int
xor
test
inc
add
push
mov
inc
cld
cmp
cmp
cld
and
rcll
mov
data16
add
mov
dec
pop
sub
loop
pop
popf
fists
data16
test
stos
pop
dec
jae
and
arpl
xchg
movsl
cmp
dec
mov
add
and
lock
lock
jb
inc
jp
mov
push
mov
push
jecxz
mov
fidivs
gs
cmp
add
sbb
loope
popf
pop
jne
mov
fadd
dec
jl
jae
icebp
aaa
and
fidivs
or
add
inc
movsl
xor
jbe
mov
push
xor
lock
adc
or
jmp
cmp
movsl
cmc
and
negl
fiaddl
test
mov
test
xchg
ret
and
cs
pop
mov
xchg
xor
sbb
mov
loope
gs
cs
jne
movsb
arpl
lret
adc
cmp
mov
sbb
addr16
mov
addr16
jne
add
fcmovb
sbb
icebp
xor
cltd
insb
mov
aaa
mov
arpl
enter
and
sbb
sbb
pop
jae
cmp
cmp
dec
add
cltd
cmp
test
iret
dec
hlt
dec
jnp
sub
fdiv
inc
pop
imul
inc
inc
iret
add
jge
pop
cmp
insb
xchg
rdpmc
ret
inc
push
fnstcw
aam
mov
into
fs
das
fiaddl
cwtl
sbb
pop
outsl
and
xchg
scas
and
repz
jmp
adc
mov
rcl
push
cmp
cld
shlb
inc
rcrl
jp
mov
mov
fildll
pop
popa
cmp
mov
arpl
gs
lcall
jmp
nop
loope
or
add
imul
loopne
shlb
lcall
test
jo
pop
mov
inc
repz
addr16
pop
pop
or
sub
test
xor
test
in
rcll
outsl
xchg
add
fildl
gs
xchg
jle
scas
aas
leave
add
les
mov
inc
orl
push
jge
shll
or
inc
cmp
jae
inc
mov
inc
mov
dec
out
inc
mov
inc
je
inc
sub
dec
addr16
lods
arpl
xchg
mov
inc
out
daa
add
mov
jg
hlt
fisttpll
in
aam
mov
movsb
mov
cmp
cmpsb
fidivl
cwtl
mov
iret
das
push
sbb
in
mov
lcall
repz
push
mov
dec
cli
fldl
sbb
and
out
xchg
outsl
push
repnz
ds
ds
adc
jno
sub
adc
dec
push
ret
xor
mov
push
aaa
sub
inc
fwait
mov
ficomps
cmp
mov
or
xorl
pop
in
jb
insl
insb
fldl
xchg
xor
shlb
dec
sbb
fidivs
data16
hlt
repnz
cmp
insb
icebp
in
fcompl
lods
lret
fsts
scas
fistl
inc
cmp
test
push
dec
daa
pop
pop
or
inc
lret
imul
xchg
cltd
in
and
inc
or
inc
outsl
push
sbb
pushf
dec
mov
mov
loope
xchg
xor
test
push
fidivl
ret
add
mov
pop
out
es
mov
fldl
jle
cmp
jae
add
pop
mov
pop
fs
xchg
movsl
les
stos
add
mov
fldl
subl
push
or
nop
popf
mov
sahf
lahf
bound
test
inc
ret
ljmp
out
jae
or
and
adc
and
sub
sub
push
sbb
stc
sbb
mov
xor
div
dec
pop
sbb
xchg
cmp
inc
pushw
insb
clc
aam
lods
mov
lret
and
cld
push
or
mov
cwtl
push
shll
jmp
cmp
jle
add
xchg
fnstcw
ja
push
shl
out
push
dec
or
xor
cmpsb
fidivs
jg
pop
mov
shll
inc
push
aam
and
in
mov
xchg
xor
inc
cmpsl
je
cmc
jnp
cmp
xchg
sbb
mov
lahf
and
icebp
lds
loope
pop
mov
rcrl
mov
push
dec
fwait
push
outsb
pop
popa
mov
sbb
cmc
sarb
test
mov
mov
adc
cmp
and
arpl
iret
inc
sub
sbb
xchg
sarl
outsl
and
ljmp
pop
stos
loopne
stos
out
daa
fcomps
iret
add
mov
xor
add
test
int3
stos
incl
out
inc
int
sub
imul
test
sahf
cld
push
dec
mov
adc
mov
mov
xchg
push
mov
adc
stos
xor
dec
pop
pop
mov
gs
lods
add
or
dec
add
add
sub
mov
in
test
and
jnp
outsb
pop
push
sbb
dec
das
in
push
jns
popf
fcoms
mov
adc
cmpsl
and
jle
in
in
aam
adc
aaa
flds
inc
jo
mov
mov
iret
es
push
mov
je
sbb
sbbb
and
sub
xchg
push
sbb
pushf
push
xchg
jl
sti
sub
out
mov
pop
xchg
sub
ret
aaa
push
shll
push
lea
fwait
fwait
mov
in
popa
cmp
aaa
cmp
or
jp
add
rcll
fiaddl
and
add
ds
leave
inc
in
in
pop
add
jecxz
in
sub
pop
enter
mov
jl
push
mov
stos
inc
mov
mov
inc
mov
push
insb
in
std
xchg
jbe
mov
fsubl
sarl
lret
adc
mov
fildl
lea
ficompl
sbb
jnp
add
cwtl
dec
lret
andb
fidivs
loope
inc
pop
mov
insl
cmpl
adc
sub
push
lods
aad
mov
cmpsb
adc
call
inc
pop
adc
or
js
fistl
stc
jge
adc
das
jnp
lock
jbe
cmp
jge
adc
inc
sbb
mov
dec
xor
in
inc
scas
push
rclb
push
dec
pusha
xor
int3
popf
xor
aas
sbb
test
testb
shlb
jge
fistl
sti
insl
js
cmp
sbb
push
xchg
xchg
movsb
cmpsb
dec
sbbl
inc
bound
out
mov
aas
enter
jle
xrelease
inc
dec
fdivl
enter
dec
push
cmp
adc
xchg
inc
xchg
cmp
and
and
pop
pusha
out
or
scas
jb
data16
jmp
movl
call
fs
inc
fistps
adc
xchg
add
fiaddl
sbb
sub
mov
mov
int3
out
push
sbb
lock
out
and
adc
sub
fisubrs
mov
incl
test
call
sub
mov
in
push
pop
push
data16
popf
jo
mov
cmp
cltd
insb
and
mov
mov
sbb
dec
mov
jo
fdivrl
or
negb
push
cmpb
mov
fists
pop
sbb
inc
add
pop
ret
mov
inc
mov
dec
imul
in
fcomps
ret
out
test
push
movsb
pop
sbb
pop
loope
add
outsl
cmpsb
push
jmp
adc
and
mov
sbb
push
mov
in
cld
fcmovnb
popf
or
imul
test
pop
icebp
jns
xor
inc
sbb
and
sbb
je
xchg
pop
jmp
pop
test
add
add
popa
call
int
shl
lods
mov
cld
stc
pop
orl
mov
mov
aad
cmpsl
sahf
jbe
loopne
das
sub
and
loop
add
mov
addr16
jp
jns
lret
sar
fidivs
inc
jge
xchg
movsb
dec
jecxz
pop
inc
sbb
or
jl
out
popa
jbe
xor
inc
sub
push
lea
dec
cli
mov
mov
ja
jns
fsubrs
dec
sar
test
ficoml
add
jl
inc
xchg
and
xchg
xchg
xchg
adc
dec
ja
mov
sbb
fcompl
rol
ljmp
and
popf
xchg
stos
outsl
shll
insl
out
loopne
lea
ficompl
mov
daa
cmc
scas
xor
int
push
add
pop
mov
adc
nop
and
test
cmp
ljmp
adc
and
mov
xchg
adc
push
pop
mov
push
shrb
aaa
mov
fwait
mov
fldt
xor
out
outsb
stos
stos
popa
ljmp
jno
push
lcall
xor
cs
or
jno
sysenter
and
sbb
push
mov
push
mov
jg
and
fdivrl
scas
jo
aad
add
popl
dec
xchg
insl
inc
ret
push
adc
cld
xchg
adc
mov
mov
pop
push
js
xchg
pop
into
or
mov
push
sbb
sti
outsb
jg
stos
push
andb
fistpll
js
jge
leave
mov
lcall
bound
scas
mov
jge
int3
mov
into
sub
or
mov
nop
cltd
stos
jne
xor
sbb
jp
inc
cmp
bswap
movsl
outsl
xor
dec
cmp
fildl
dec
add
stos
repz
xchg
fists
sbb
cli
pop
mov
test
test
sbb
fldcw
cmp
xchg
inc
dec
cltd
movsl
pop
rcr
push
test
mov
and
gs
push
sti
and
pop
jae
test
pop
pop
int
lret
ds
xchg
jge
adc
push
cmp
fsubr
cltd
aad
outsl
sbb
lret
jle
cmp
xchg
ret
into
and
adc
pop
or
inc
imul
or
ror
cltd
nop
cmc
incl
cmp
rcr
jb
sbb
jecxz
push
sub
xchg
data16
data16
aad
test
xchg
mov
ret
insb
mov
daa
sub
mov
mov
push
cmp
jbe
aaa
jg
out
lods
mov
cmp
cli
cld
fucomi
bound
adc
mov
push
mov
inc
jae
sub
inc
std
sub
mov
jnp
lea
mov
adc
je
test
outsb
and
jp
cld
xchg
movsl
mov
in
and
cmp
mov
in
lahf
cld
in
push
into
push
lea
or
sub
add
mov
jle
xchg
inc
hlt
sahf
sti
scas
sub
out
jb
mov
xor
xor
in
push
mov
dec
scas
leave
clc
in
int
jmp
xchg
sbb
sbb
mov
test
push
cmp
rcrl
pop
jae
in
bound
sub
sub
sti
stc
cmp
fnstcw
inc
popf
and
sbb
das
push
push
loop
push
cmp
push
jo
mov
fdivrs
fdivrl
in
xlat
pop
in
xchg
out
movswl
dec
orl
in
pop
cmp
andb
jb
pop
inc
mov
ret
dec
rolb
adc
jne
lods
push
jne
adc
sub
or
or
in
insb
adc
inc
add
sbb
jle
int
jmp
xor
mov
lods
int3
push
push
inc
loope
out
aas
inc
inc
inc
jg
jo
pop
call
cmp
cltd
dec
sarb
adc
pop
cs
push
int
aaa
std
push
push
fwait
jnp
inc
add
mov
test
sbb
jnp
clc
jbe
inc
xchg
test
shl
cmp
jmp
sbb
pop
pop
std
pop
into
in
pop
xor
leave
xor
or
pop
nop
pusha
aam
test
je
jl
shlb
push
ds
sbb
adc
add
iret
mov
jl
push
mov
stc
sub
push
sub
cmpsb
xor
adc
push
push
mov
cmp
add
popf
mov
in
push
inc
sbbb
pop
sbb
in
ja
fdivl
and
and
ljmp
mov
repnz
stos
sbb
inc
cmpsl
cmc
ss
pop
sti
ja
pop
jmp
pop
ret
mov
or
int3
sub
mov
jg
cs
dec
mov
rclb
call
test
rclb
push
pop
cmp
dec
sub
fldt
xor
shll
dec
rorb
scas
xor
insl
imul
add
ljmp
xor
jge
jmp
and
pop
fisttpll
and
xchg
jecxz
inc
dec
cmp
pop
fisttps
stos
test
xchg
and
out
cli
movsb
dec
aam
sbb
arpl
das
lods
outsl
scas
testb
xor
dec
fwait
insl
xor
adc
icebp
xor
lock
inc
sbb
inc
aaa
ffreep
jns
xor
fdivp
sti
xchg
pop
pop
adc
in
imul
mov
inc
add
push
ljmp
fcmovnb
fs
jnp
xor
sub
lods
adc
cmp
sbb
repnz
scas
sbb
aaa
push
jg
cmp
jnp
jl
xchg
cmp
daa
fisttpl
rolb
sub
inc
pop
fs
inc
xor
and
lret
mov
mov
mov
test
and
stos
outsb
cmp
mov
cmp
stc
fwait
call
enter
in
jnp
and
jge
aad
movsl
xchg
inc
es
repnz
aaa
je
insl
adc
and
or
and
inc
insl
clc
push
adc
add
movsl
or
xchg
cmpsb
out
lcall
sub
jnp
adc
out
sub
push
mov
loopne
mov
push
mov
cli
cli
leave
pop
or
push
push
mov
or
aam
int
jbe
lock
push
pop
fidivl
lret
popf
inc
inc
mov
mov
cld
xchg
aas
lret
ljmp
movsb
adc
sti
sbb
jns
iret
fsubs
mov
mov
sahf
sahf
mov
push
leave
out
inc
sub
fs
jne
jne
fs
add
mov
cmp
fistpll
fsubl
mov
out
jb
dec
cmp
adc
push
movsl
mov
ljmp
adc
in
es
mov
sarl
lock
mov
movsl
bound
adc
dec
push
in
lret
insb
dec
js
adc
pusha
inc
es
dec
xchg
inc
push
loop
testb
sub
push
add
xor
scas
and
jle
divl
ljmp
fnstcw
rol
js
aas
mov
sbb
sar
insb
arpl
test
xor
jmp
rcrb
scas
pop
jns
or
mov
mov
jmp
out
xchg
cwtl
stos
in
pushf
push
push
enter
adc
leave
fwait
sarb
pop
incb
movsl
jb
xchg
loop
fcompl
insb
add
fnstenv
mov
hlt
pop
insb
push
push
out
xorps
mov
xor
sub
cli
ret
lods
sbb
mov
push
jo
test
imul
daa
and
and
push
leave
mov
or
dec
or
xchg
adc
pop
cs
aad
ljmp
inc
cmc
ljmp
dec
xor
adc
and
jmp
jmp
inc
mov
mov
or
mov
mov
lea
leave
push
pop
out
cmpsl
mov
mov
daa
loop
mov
push
jo
sahf
and
jmp
repz
ss
ds
iret
inc
jp
jecxz
mov
cs
subb
xor
test
cltd
ret
fmul
iret
mov
cmpsb
call
into
jns
sub
stos
xchg
scas
test
lds
lds
add
pop
pusha
sti
pusha
test
mov
imul
add
cmp
ja
mov
jb
aaa
fneni(8087
sti
adc
dec
jne
stos
aam
cmpsl
push
mov
imul
mov
pusha
mov
adc
into
sbb
out
in
sub
sub
jmp
fs
xchg
mov
adc
popa
arpl
out
cwtl
push
and
repz
stc
cmp
fwait
call
fldpi
xchg
and
pop
jae
loope
jb
or
xchg
mov
push
adc
pusha
cmpl
pop
xchg
pop
sbb
into
out
mov
shrl
inc
pop
in
sub
gs
or
jns
adc
lock
call
icebp
aad
dec
fmull
jb
lahf
addr16
adc
addb
mov
and
les
icebp
sbb
jg
imul
cmc
jne
rorb
and
insl
jg
fcmovnbe
filds
sbb
in
xchg
add
mov
sub
pop
mov
or
filds
and
mov
adc
mov
imul
sub
add
jne
orb
sbbl
sbb
xchg
add
mov
lea
push
test
push
ja
out
sub
cmp
lahf
outsl
fidivrl
inc
push
cmp
mov
or
ljmp
pop
mov
in
lahf
test
xor
sbb
loope
sub
stos
pop
shlb
aaa
popf
xor
dec
lods
into
dec
mov
idivb
sub
int
mov
outsb
lret
dec
in
inc
loope
call
xchg
in
mov
inc
push
xlat
test
aaa
mov
pop
mov
les
xor
ljmp
push
mov
fidivrs
jmp
fwait
lds
or
push
mov
jnp
inc
inc
test
fs
xor
stos
mov
xor
mov
shrl
scas
fidivs
dec
push
test
shll
cmp
push
fwait
shlb
lret
mov
cmp
dec
xor
rorb
push
icebp
dec
adcl
pop
push
dec
fildll
xor
xchg
jecxz
iret
setge
mov
out
lret
enter
call
push
data16
mov
jecxz
repz
and
out
mov
mov
aaa
mov
rorb
inc
dec
fstpl
out
jns
mov
in
cli
aaa
dec
xchg
xchg
xor
jg
fcmovnu
aam
cmc
adc
cmpsb
imul
dec
in
test
mov
dec
arpl
iret
jmp
mov
cmp
cmp
inc
inc
test
mov
lahf
jmp
mov
jb
add
test
cli
push
xchg
cs
mov
sarl
shlb
pop
push
dec
inc
xor
subb
push
mov
imul
aad
mov
imul
decl
xchg
push
dec
pop
sub
movsb
jmp
ja
ljmp
dec
in
jne
add
cmp
decb
pop
dec
adc
cmp
aas
es
jo
mov
xchg
out
icebp
std
pop
mov
daa
fisttpl
call
ljmp
dec
inc
sahf
mov
aas
int3
js
jne
loopne
xchg
xchg
imul
rcl
push
sbb
std
into
test
xchg
lcall
rorl
lods
sbb
loope
pop
icebp
sbb
xor
lds
je
cmpsl
inc
test
data16
into
fmuls
insl
inc
sbb
push
jne
xchg
insb
xor
lret
sbb
fsubp
dec
cmpsb
mov
test
loopne
cli
leave
dec
add
mov
xor
xchg
aad
inc
adc
paddb
mov
cmp
add
fnsaves
into
leave
dec
or
jmp
xchg
xor
fnstenv
sbb
fisubrl
faddl
js
mov
mov
ljmp
pusha
int3
inc
pop
orl
or
mov
mov
xlat
push
aaa
mov
lahf
inc
adc
add
subb
or
in
add
es
arpl
loope
xchg
jp
dec
and
adc
jle
jl
inc
adc
jo
pop
sti
aad
jg
aaa
inc
or
jge
inc
in
jmp
or
inc
dec
xchg
shlb
lcall
push
sub
cmp
rcl
outsb
ljmp
mov
in
mov
cmpsl
cwtl
loop
or
cmp
in
cmp
lret
loope
xchg
xchg
arpl
xor
aam
aad
xor
cld
pop
inc
in
xchg
into
cmp
imul
out
push
inc
pop
and
arpl
cmpsl
mov
cmp
mov
sbb
push
jae
loop
add
push
imul
mov
jecxz
push
scas
or
push
mov
push
and
idivb
mov
movsl
xlat
loop
loopne
jbe
int3
gs
jne
movsl
xchg
mov
loop
mov
out
push
stos
aas
adc
aam
sbb
cmc
in
stos
cld
mov
add
add
lret
push
cmc
pop
or
shr
data16
cmpsb
int3
ret
pop
xchg
scas
stos
jnp
adc
in
xlat
push
cmp
xchg
push
mov
bound
es
scas
pop
imul
rcrb
ljmp
pop
enter
add
pop
push
or
or
popa
loope
stos
cmp
in
pop
outsb
add
movsb
movsl
int3
jb
mov
jno
negb
repnz
ret
dec
inc
sub
xchg
mov
mov
mov
cvttps2pi
sbb
lods
iret
push
jp
imul
int3
std
imul
or
test
and
dec
fsubp
mov
push
mov
shlb
push
leave
stc
aas
addl
push
loop
adc
jg
cs
mov
sub
xor
jge
pop
mov
pop
mov
lret
and
scas
mov
movsb
jecxz
sub
pop
mov
imul
add
xor
ss
jle
xchg
int3
cld
xchg
push
push
sbb
push
das
jnp
jecxz
sub
mov
imul
bound
fmul
in
fsubr
and
ljmp
dec
mov
pop
mov
addb
sti
or
icebp
add
lods
mov
dec
sbb
push
and
cld
adc
xchg
cmpsb
mov
pop
mov
cmpsb
in
xchg
lahf
mov
mov
popf
les
in
mov
ret
out
icebp
in
insl
jne
loope
pop
xor
ror
lahf
jno
into
dec
xchg
loopne
or
adc
cmp
pop
inc
out
inc
xor
out
cmc
mov
leave
xor
cltd
das
clc
sarb
adc
loopne
jne
cmpsb
fimuls
stos
scas
jg
inc
popa
stos
xor
lcall
incl
pop
mov
jmp
out
sub
fnstenv
sub
movsb
add
testl
roll
int
mov
pop
xchg
pop
pop
sbb
or
fsubrl
notb
cli
mov
pop
test
push
jecxz
xchg
xor
mov
ret
mov
xchg
mov
mov
stos
in
shl
das
push
cmp
ja
clc
stos
imul
xchg
add
lret
gs
pop
imul
and
sub
mov
ret
mov
mov
and
xchg
mov
push
into
movsl
into
outsl
sub
pop
jp
ss
dec
cmp
in
sbb
in
mov
and
xor
sbb
ds
repnz
jmp
mov
dec
das
inc
imul
fdivp
les
jne
sub
cmp
xchg
jb
stos
push
mov
loope
sub
xor
dec
dec
sub
inc
movsl
add
insb
sub
stos
add
movsb
push
dec
jecxz
push
loop
pop
rcrl
inc
fstl
jge
jle
mov
ljmp
orl
xchg
mov
cmpl
mov
add
loopne
or
and
cmp
icebp
cwtl
in
pop
dec
jle
adc
fstpt
ja
je
in
cmp
outsb
idivl
adc
iret
fisubrl
outsb
add
add
inc
shrl
test
test
jb
pop
mov
lds
adc
clc
pop
idivl
ret
add
jecxz
icebp
hlt
or
cmp
xchg
jge
shlb
dec
cmp
icebp
dec
add
mov
mov
ficoms
dec
int
xchg
xchg
mov
xchg
idivl
xchg
mov
fcomi
aaa
cmpsl
lds
sub
rcrl
pop
inc
sub
pop
mov
push
adc
add
cwtl
cmp
adc
lcall
xlat
std
shrl
in
in
xor
mov
jae
mov
movsb
cmp
pop
in
daa
mov
addr16
add
mov
fsubr
shr
cmp
sbb
ss
jo
ljmp
mov
cmc
jp
filds
push
push
jns
adc
arpl
adc
pop
jae
sbb
push
add
dec
js
inc
scas
jns
rcll
mov
pop
mov
pushf
cmp
or
movsb
and
or
or
jns
aaa
and
lret
sbb
cmpsb
movsb
out
jbe
rol
jno
popa
jecxz
aam
cwtl
xchg
xor
sarl
gs
int
pop
cmc
mov
fucom
xor
push
cmpsl
lcall
pusha
inc
jecxz
icebp
addl
pop
mov
mov
int
xchg
cmp
mov
out
iret
scas
mov
inc
mov
push
movsl
jns
dec
sub
inc
in
leave
hlt
cmc
mov
fsubrl
lods
mov
pop
fnclex
in
pause
mov
xchg
imul
lret
mov
lods
dec
cmc
ficoms
adc
pusha
leave
lods
outsb
sbbl
cwtl
pop
adc
out
mov
int3
push
loop
pushf
cmp
sbb
pop
loop
add
stc
sti
stos
movsb
rol
rcl
and
push
jl
fdivl
cs
sub
mov
mov
fnstcw
lea
mov
je
mov
int
mov
daa
cmpsl
jnp
or
mov
mov
lods
push
mov
into
leave
or
psraw
xchg
shrl
mov
mov
or
mov
bswap
ja
sbb
std
cmp
cmc
repz
arpl
mov
mov
js
add
sub
jno
or
sub
push
rclb
imul
xchg
and
xor
push
mov
aas
mull
subb
fwait
test
inc
mov
mov
int
pop
or
push
sub
inc
mov
ret
loopne
aas
pop
mull
imull
push
sub
push
or
cmp
adc
das
das
dec
loop
daa
popf
hlt
cmp
add
pushf
mov
lret
addb
mov
icebp
push
jnp
mov
outsl
arpl
xchg
jne
mov
sbb
loopne
jecxz
inc
fcomp
stos
movsl
in
fdivl
jecxz
sbb
xchg
lret
shll
cmp
cld
outsl
xor
idivl
pop
push
daa
sub
popf
pop
sbb
out
in
lret
xchg
push
outsb
push
mov
jmp
jne
lods
rol
bound
cmp
aaa
sbb
xor
sbb
movsb
mov
mov
inc
inc
xor
dec
sub
or
and
push
xchg
and
fstpt
je
fiaddl
inc
mov
pop
sbb
incb
sub
sbb
jae
xchg
mov
dec
cmpsl
popa
pop
cmp
push
mov
out
push
loope
mov
sbb
mov
popa
fbld
fbstp
push
push
loop
sub
aad
cli
lret
xchg
xchg
cmp
aaa
adc
mov
cmpsl
pop
aaa
fucomip
shr
mov
sub
jo
test
pushf
sti
mov
out
arpl
pop
mov
push
adc
gs
rorb
rcr
nop
mov
adc
add
inc
mov
jge,pt
sahf
jb
stos
add
enter
lcall
popa
xchg
jb
xor
lds
jle
rcrl
and
xchg
cmpsl
orb
popa
jb
xchg
cld
inc
mov
mov
pop
insb
jmp
stc
adcb
xchg
insl
dec
xchg
call
imul
aaa
mov
xchg
cmp
movsl
stos
cmp
adc
cmpl
clc
xor
mov
pop
jnp
imul
jae
gs
jae
int
cmpsl
jne
aas
xchg
pop
cmpsb
repnz
push
xchg
inc
or
ss
sahf
cmp
sbb
sub
leave
jo
ss
xchg
dec
inc
fdiv
ds
cmc
cmp
xchg
out
popa
cs
outsl
lea
jle
cmp
loop
mov
shll
pop
js
pop
fs
shr
mov
out
sub
sbb
repnz
pop
mov
lock
mov
lds
leave
and
cltd
add
xchg
lret
push
cmp
add
int
scas
jle
mov
sti
outsb
cltd
mov
aaa
aam
or
out
or
xor
repnz
pop
xor
or
ss
sbb
adc
mov
sub
out
jp
adc
imul
and
lcall
js
lahf
mov
insb
adc
test
je
mov
loopne
pushf
mov
lods
testl
cmp
cmpsb
test
mov
sbb
pop
dec
in
dec
or
popa
pop
dec
scas
mov
in
push
push
cmp
mov
add
add
jbe
mov
je
ds
out
pop
cmp
xchg
cmp
jecxz
ja
inc
cmp
aas
sbb
icebp
shrb
outsl
repnz
cmc
mov
test
push
mov
dec
outsb
outsl
out
adc
dec
xor
push
movsl
dec
in
mov
std
pop
loopne
jo
xchg
and
and
dec
mov
cmpsl
mov
mov
jle
jne
lret
jle
sbb
add
mov
xchg
pop
xlat
stc
test
scas
je
mov
mov
int3
mov
imul
sbb
and
arpl
sub
mov
xchg
shll
pop
adc
cmc
sub
pop
rcrb
mov
mov
add
stos
lret
stos
sbb
addr16
mov
sarb
sub
mov
roll
dec
sub
ret
pop
mov
test
mov
bound
jne
das
out
loopne
cmp
pop
les
push
push
sbb
lods
lea
fistl
icebp
sub
mov
pop
into
mov
nop
xchg
sbb
fldcw
pop
jle
xlat
pop
sahf
scas
and
repz
jg
pop
mov
cmp
mov
push
pop
xchg
out
add
mov
xor
ret
stos
mov
addb
pop
pop
mov
adc
mov
mov
jb
fcomps
push
mov
dec
and
mov
or
dec
iret
mov
add
adc
lock
mov
push
call
ljmp
loope
insb
iret
pop
scas
gs
xchg
je
xor
pusha
fists
shll
js
xor
icebp
idivl
mov
xchg
icebp
sar
fwait
out
and
adc
scas
sbb
shll
mov
adc
imul
adc
adc
sub
int
and
mov
jmp
pop
xchg
mov
in
jg
xor
fxch
lret
pop
in
loope
enter
add
ljmp
sarl
mov
mov
adc
sub
loop
clc
dec
icebp
gs
jg
scas
adc
repz
bswap
and
loope
testb
or
cmp
mov
mov
xchg
push
cmp
enter
dec
mov
rcrl
mov
inc
jae
mov
mov
fimuls
hlt
add
mov
movsb
sub
push
test
jl
cmp
adc
repnz
ss
or
testb
pop
push
loop
mov
shll
pop
and
pop
outsl
adc
mov
jbe
rorl
insl
add
psubusw
mov
or
and
fstps
inc
dec
adc
push
xor
ret
fcompl
mov
arpl
scas
les
repnz
xchg
mov
sbb
arpl
mulb
add
test
sbb
out
std
dec
fsubrl
popf
loope
test
cmp
pushl
aad
or
enter
lcall
mov
je
inc
and
cmp
push
jl
lea
imul
mov
xchg
and
pop
inc
pop
push
lret
push
movsb
lret
push
stos
and
and
cmp
inc
in
int
cmp
sub
cli
outsl
unpckhps
lahf
jno
mov
dec
pop
stos
cmp
sbb
popf
sub
gs
jbe
pop
inc
in
mov
lret
test
decb
bound
test
pop
mov
push
sub
cmpsl
testl
andl
mov
test
mov
xor
or
inc
icebp
mov
cwtl
punpckhbw
push
jge
cmp
nop
ficoml
fisubl
push
clc
cmp
and
jo
jecxz
jle
sbbb
enter
mov
xor
test
sub
or
shl
add
lcall
adcl
int
xchg
and
push
mov
stc
or
das
cmp
rcr
faddp
sbb
arpl
sub
out
ss
push
out
mov
push
sarl
jge
daa
push
push
popf
lea
mov
pop
popa
mov
jnp
mov
inc
jle
popa
test
pop
lret
pushf
into
outsb
lret
outsl
inc
sub
stc
dec
mov
xor
inc
jle
shrb
out
adc
inc
mov
push
inc
aad
xchg
sub
mov
xlat
jmp
iret
outsl
add
test
mov
xchg
stc
shlb
fcos
lods
iret
pop
out
jnp
or
inc
adc
jle
mov
mov
fisubrl
fmul
cmp
les
pop
cwtl
xlat
fcomps
jae
mov
push
xchg
into
xor
arpl
repz
jnp
mov
popf
or
sbb
test
sbb
jp
ffree
fwait
outsl
nop
xchg
int3
xor
adc
into
pop
fwait
mov
mov
daa
ret
mov
out
pop
pop
cmpsb
movsb
ljmp
jnp
pop
jno
mov
scas
xlat
into
add
bound
mov
cmp
adc
loop
icebp
rcl
out
jle
add
lock
adc
shrb
out
sbb
or
shrb
daa
sysexit
rol
xchg
mov
push
pop
outsl
les
pop
and
push
call
and
mov
je
mov
insb
push
xchg
mov
adc
sbb
cmp
ja
movsl
sbb
stos
inc
xorl
cmp
sbb
ljmp
loopne
scas
adc
pop
sti
rcrl
pop
addr16
or
push
das
repz
shrb
roll
test
cs
cmp
call
dec
adc
ret
sub
add
adc
xchg
mov
xor
rol
inc
dec
mov
push
mov
icebp
movsl
repnz
test
dec
jns
loope
pop
mov
xchg
push
scas
mov
jo
cmp
dec
pushf
sub
push
jge
je
xchg
and
les
sbb
outsl
into
stc
cmp
add
scas
pop
movsb
lcall
popa
push
int
pop
fucomp
mov
in
fdivr
mov
mov
imul
fsubl
xchg
hlt
sbb
push
jg
sub
mov
pop
aaa
mov
insb
cld
popf
mov
mov
ljmp
xlat
mov
fs
hlt
sahf
out
sbb
rclb
imul
cmpsl
repnz
xor
push
dec
es
nopl
push
jge
test
insl
xchg
out
je
push
outsb
popa
out
fimull
pop
test
out
jns
pop
pop
hlt
xchg
out
xchg
imul
imul
cs
test
gs
mov
dec
xchg
dec
adc
mov
popa
adc
cmp
clc
push
sub
ret
cmc
jo
subb
sbb
ja
push
dec
bnd
hlt
cmp
lds
mov
cmp
call
mov
mov
lret
cmp
loop
data16
stc
pop
sbb
or
inc
xchg
cld
dec
push
js
fistps
ljmp
dec
mov
cs
mov
lret
sbbl
pusha
dec
in
sbb
popa
loope
rclb
pushf
fstps
sbb
xchg
stos
push
in
cltd
sbb
test
sbb
scas
stos
imul
lods
ja
and
fwait
in
inc
push
mov
pop
push
sbb
addr16
jg
test
and
sbb
jno
add
cmpsl
push
pop
sbb
or
or
cltd
cmp
add
dec
push
dec
outsb
pop
xchg
not
mov
adcb
aam
pop
int3
lods
and
dec
int3
test
lods
stos
sub
test
scas
add
loop
pop
outsb
lcall
in
xor
in
pop
inc
push
dec
jo
js
jbe
mov
pop
xchg
shl
dec
lds
aas
xor
ret
cld
xchg
daa
adc
push
loop
call
pop
mov
out
gs
lret
rorl
outsb
out
xchg
push
sub
dec
lcall
mov
push
adc
call
push
test
cmp
add
dec
inc
shrb
bound
add
mov
ja
inc
push
or
pushf
cs
pop
fmulp
sbbb
stos
fs
jmp
gs
inc
sbb
add
fsubr
bound
lret
cmpxchg
and
sbb
jno
stos
push
das
pop
ret
sub
bound
icebp
cmp
dec
rorl
pop
inc
out
add
fldcw
enter
adc
imul
push
loope
xchg
xchg
in
jb
hlt
jg
out
fsts
aas
xor
push
rclb
mov
mov
push
mov
jae
adc
xor
sbb
mov
notl
clc
pop
fisubrl
adc
dec
hlt
cmc
jae
jo
or
in
pop
push
in
cltd
pop
xor
cmp
outsl
repz
xchg
jge
shrb
or
sbb
xor
fwait
pop
push
push
xchg
dec
rcll
push
mov
inc
fcomi
das
ficomps
cmp
out
mov
fcoms
sub
addr16
dec
xchg
adc
shrb
inc
insl
ret
push
ljmp
fmuls
out
lahf
cmpsb
cmp
in
sub
mov
adcb
lahf
push
call
mov
add
jecxz
and
cmc
mov
xchg
pop
dec
mov
insb
ljmp
and
or
mov
leave
fistl
pop
push
dec
sub
pop
push
call
rolb
pop
inc
jmp
jle
cld
data16
stos
stos
pushf
movsb
mov
mov
fdivs
xchg
jp
xor
std
inc
add
stos
nop
fadd
into
sub
mov
adc
and
add
sub
inc
and
jmp
and
pop
mov
enter
data16
sbb
ja
and
lcall
aaa
jmp
dec
sub
adcl
or
cld
jmp
and
dec
jl
popf
popf
lahf
popf
mov
cld
mov
arpl
and
jl
stos
dec
repz
out
andb
xchg
mov
lret
push
sbb
cmp
sahf
push
adc
adc
test
jg
leave
mov
dec
fs
jb
mov
or
or
cltd
addl
pop
adc
aam
jl
adc
push
and
mov
setg
and
fimuls
clc
cmp
sbb
sbb
sub
cltd
not
loopne
sahf
notb
insl
cli
enter
iret
or
out
into
xlat
scas
sbb
ss
aad
aas
test
into
xchg
lret
mov
xchg
lock
cmpb
xchg
iret
lea
rorl
jmp
xor
sub
sbb
outsl
enter
stos
imul
cmp
sbb
mov
lret
mov
test
cli
in
and
mull
dec
sub
xchg
mov
add
and
ret
cwtl
push
xor
fidivs
out
hlt
pop
orl
bound
cli
push
dec
lds
addl
call
imul
scas
xlat
xchg
add
mov
loop
mov
or
sbb
ss
xchg
iret
mov
stc
addr16
push
xadd
dec
mov
imul
mov
push
push
aaa
sub
lret
in
mov
xor
addr16
jge
mov
xchg
arpl
jbe
int3
aas
xchg
or
rclb
int
stos
scas
cmp
repz
lds
pop
mov
push
fdivp
cltd
mov
mov
cmp
cmpsl
xlat
testb
ret
js
stc
dec
imul
test
and
or
aad
andl
aas
bound
mov
mov
imul
cmp
and
dec
imulb
sbb
sub
xchg
xchg
pop
jg
jb
sub
cmp
jg
sub
xor
popa
xor
push
or
dec
aas
sbb
mov
test
les
ret
repnz
jae
daa
mov
push
test
dec
adc
push
outsb
or
dec
shll
cld
pop
call
out
add
mov
mov
mov
es
bswap
dec
imul
in
imul
pop
pop
mov
sbb
fnsave
test
mov
jg
mov
or
fidivl
hlt
arpl
imul
rolb
shl
pop
push
push
adc
out
sub
into
xchg
fsts
adc
mov
icebp
aas
inc
aaa
aas
push
jne
bswap
ret
movsl
sahf
lahf
xchg
xchg
or
pop
fwait
fadds
xor
jl
addr16
aam
or
fld
jg
lret
out
cmp
mov
movsb
sbb
fsubrs
xchg
add
sarb
test
xchg
in
or
xor
ret
pop
mov
ret
jge
add
roll
sub
pop
and
es
jno
mov
inc
nop
adc
push
xchg
xchg
fmuls
fbstp
stos
js
dec
cld
xchg
mov
clc
xchg
sbb
adc
pop
jecxz
sub
push
pop
sub
or
adc
test
out
inc
push
jno
jno
pop
or
idivl
push
aas
xor
in
popf
and
adc
psubusw
cmp
xor
mov
jecxz
xchg
mov
addr16
mov
xchg
mov
orb
stos
sbb
notb
xor
inc
push
sub
sub
out
inc
pop
push
and
inc
push
ljmp
stos
div
daa
fbstp
into
cmp
jmp
push
mov
xchg
mov
cwtl
mov
sub
pop
dec
into
cs
dec
xchg
mov
fsubrp
cmp
pop
push
add
ret
jo
adc
ja
in
jg
dec
test
nop
mov
xchg
xchg
lcall
push
aam
adc
fildl
adc
lret
repnz
lcall
repnz
sti
sub
mov
ss
dec
test
xchg
out
jo
ret
hlt
jmp
imul
int
stos
and
jnp
dec
add
or
je
pop
pusha
mov
jno
in
stos
adc
popf
cli
pushf
mov
xorb
jge
repz
push
mov
dec
or
inc
dec
xor
cli
loopne
ja
push
adc
test
and
mov
cmp
test
rclb
xor
sbb
test
dec
lcall
push
xlat
cmp
rorb
and
bound
adc
fildl
fbld
jecxz
cwtl
mov
pop
push
out
int3
pushfw
int3
scas
mov
call
ds
mov
or
and
lods
jno
push
std
sbb
jb
adc
cli
fiadds
mull
loopne
psubusw
mov
pop
or
pushf
mov
repz
pop
sti
aaa
pusha
cmpxchg8b
dec
in
push
xchg
mov
outsl
fmull
inc
sbb
enter
xchg
test
mov
daa
xor
rclb
fcmovnb
pushf
add
outsb
mov
mov
cmpb
lret
fldt
pop
sbb
pop
mov
inc
mov
push
jge
in
into
gs
jmp
pop
xor
orb
std
sbb
xor
xor
cli
xor
arpl
xor
insb
loop
js
add
shl
pop
and
jecxz
fmuls
inc
and
ret
jecxz
test
or
pop
sbb
mov
or
jno
adc
in
pop
sub
mov
mov
popa
rolb
idivl
adc
bnd
das
das
pop
inc
arpl
pushf
mov
js
ljmp
and
cmpsl
aas
lea
mov
int
popa
loop
or
mov
movsl
daa
lods
mov
sbb
ljmp
cmp
call
arpl
mov
scas
cld
mov
xchg
jmp
dec
jl
xchg
stc
call
push
popa
jae
pop
icebp
dec
sub
mov
mov
inc
xor
mov
ja
or
popl
fidivrs
ss
fcmovnbe
xor
cmp
fbld
cmpsb
lret
in
adc
add
xor
nop
stc
push
cs
mov
add
adc
jno
rcrb
push
xchg
mov
dec
dec
inc
mov
fwait
xlat
in
das
lods
sub
jns
pop
xchg
mov
xchg
xor
aaa
mov
cmp
and
shr
fbstp
aaa
mov
and
int3
cmp
jg
xchg
cmp
pop
aas
negb
mov
repz
xchg
ret
sbb
mov
and
icebp
mov
push
mov
out
jmp
js
jmp
mov
adc
lahf
test
mov
popa
jle
fstl
dec
enter
sub
cmpl
test
xchg
in
adc
sbb
addr16
xchg
testb
xor
cwtl
xor
adc
cmpsb
sbb
sbb
outsl
push
pop
dec
fildl
cld
and
cmc
into
sub
repz
rorb
into
int3
mov
mov
mov
fs
jp
data16
cmp
and
xchg
lcall
pop
lahf
scas
mov
jecxz
ficoms
sar
out
popa
callw
fwait
daa
mov
ljmp
and
pop
repnz
and
sbb
pusha
pop
scas
mov
adc
into
adc
and
aas
push
popa
inc
sub
mov
hlt
adc
pusha
or
imul
xor
in
mov
pop
pop
fbld
mov
pop
add
lds
mull
cs
and
into
pop
pop
push
pushf
js
out
test
and
mov
out
mov
out
imul
pop
sub
lea
push
inc
emms
aaa
sub
cmp
sbb
sbb
mov
fdivrs
cmp
je
test
sub
test
pop
cmp
adc
sbb
sub
les
add
pusha
ret
aam
cmp
gs
xchg
or
sub
das
inc
mov
xchg
or
pop
movd
mov
pop
repnz
jbe
stc
std
rcrl
cld
ret
mov
lea
sbb
data16
arpl
jo
mov
mov
or
fidivs
fistpl
xchg
pop
in
jns
lret
ds
imul
cld
cmp
inc
icebp
add
lret
insb
shll
movsb
pop
sbb
cmpsb
pusha
pop
es
dec
cmp
xor
adc
sub
or
arpl
and
movsb
push
or
adc
mov
hlt
mov
pop
cmp
lret
fwait
push
mov
lods
in
movsb
pop
inc
hlt
push
leave
in
jnp
clc
xchg
imul
jg
lea
add
es
pop
movsb
dec
leave
dec
in
test
cli
sub
stos
pop
or
pushf
sub
in
lret
popa
and
or
xchg
cld
fldl
stc
xchg
push
rol
adc
js
push
inc
addr16
mov
add
mov
cs
jmp
xor
fldl
pop
cmpsb
aaa
pop
mov
dec
add
lods
cmpsl
je
dec
aad
mov
push
imul
xor
push
sub
jmp
sgdtl
mov
mov
or
cmp
gs
xor
call
xor
std
ja
mov
fiaddl
sbb
les
lea
mov
push
es
xor
sbb
push
jbe
ss
ljmp
sbb
xchg
call
add
test
sarl
sti
ds
pop
add
lcall
addl
xchg
rorl
shrb
cpuid
pusha
adc
dec
push
push
fisubs
push
pop
xchg
jnp
cmpsl
lock
aam
and
mov
mov
mov
fdivp
mov
fcmovbe
sbb
sbb
iret
int3
xor
mov
mov
dec
add
out
int3
out
inc
add
gs
xorb
rcr
pop
sub
jp
push
sub
stos
sub
das
mov
js
out
scas
je
pop
sub
test
jno
es
test
sbb
jge
scas
loope
movsb
xchg
cmp
inc
xchg
bound
pop
out
nop
icebp
fidivrl
nop
or
int3
popf
in
mov
push
jp
fwait
mov
cli
xchg
sbb
in
lcall
jb
dec
mov
mov
movsb
in
lret
or
fpatan
nop
into
icebp
pop
fmull
mov
stc
inc
cld
int3
aam
push
test
ss
mov
fidivl
repnz
lcall
aad
jbe
jg
jmp
insw
jge
xor
push
jno
loop
inc
cmpl
or
cmp
push
adc
imul
data16
pop
sbb
mov
inc
ficompl
cmp
xchg
icebp
adc
insl
inc
dec
scas
int
push
pop
pop
ja
push
aas
aad
ss
imul
call
inc
pop
mov
movsb
push
in
pop
dec
mov
ret
add
pop
mov
bound
clc
stc
cmp
js
scas
inc
sbb
sbb
or
nop
movsb
and
dec
cltd
adc
mov
lock
xchg
jne
xchg
push
cmp
dec
in
scas
dec
int3
mov
test
or
rcll
jns
cmp
cs
enter
jo
pop
andb
inc
cmpsl
mov
push
pop
popa
push
int3
stc
ret
push
push
rorb
push
adc
cmp
sub
rcrb
xlat
pop
adc
mov
mov
jecxz
mov
in
pop
aaa
xchg
frstor
shr
lock
cltd
mov
aas
rcrl
aas
call
enter
jecxz
cmp
sub
cs
pushf
sahf
sbb
out
adc
mov
sbb
test
addr16
and
mov
lea
fsubrs
enter
jmp
fistpll
mov
clc
lret
in
popa
sub
outsb
or
sbb
mov
lcall
inc
and
jl
jle
add
out
scas
cmp
mov
and
lds
call
or
mov
pushf
push
xchg
mov
cmpsb
movsl
pop
jbe
popf
dec
cmp
pop
shrb
shlb
js
mov
add
lods
push
and
pop
xchg
inc
push
inc
mov
mov
adc
xchg
xlat
xchg
add
in
add
push
out
mov
sbb
push
mov
and
and
sti
imul
mov
scas
cld
test
mull
jo
std
sbb
or
mov
cmpb
in
out
add
pop
lret
stos
jl
push
inc
in
jae
cmp
out
push
cs
nop
out
sub
int
clc
jl
imul
aad
jmp
aad
dec
pusha
aad
pushf
jbe
in
pop
push
outsl
aad
lea
ret
inc
add
icebp
sub
and
inc
enter
cmp
cmp
lods
dec
inc
loopne
cmp
pop
lods
mov
xlat
icebp
mov
push
sti
jle
mov
add
cltd
or
popf
imul
movsb
clc
or
inc
into
shll
push
std
nop
mov
loopne
sti
daa
notl
cmpsl
xorl
iret
push
notb
sbb
fdivr
cmpsl
mull
repnz
inc
pop
nopl
adc
outsb
ss
fcmovnu
adc
push
imul
xor
out
loop
xchg
cli
xorl
push
xor
add
addr16
scas
cmp
sbbl
xlat
push
stc
jne
sbb
mov
aam
dec
sbb
lods
out
pop
xchg
rorl
loope
pushf
shrl
shlb
and
mov
mov
rep
adc
jmp
nop
xchg
mov
push
scas
outsl
xchg
push
add
dec
sub
movsl
cwtl
inc
outsb
pop
movsl
or
or
pop
test
xchg
pop
push
mov
push
stos
or
lea
out
mov
jo
jae
inc
mov
movsl
in
data16
aam
icebp
ljmp
stos
daa
mov
aaa
out
pop
mov
in
pop
inc
mov
pop
into
xor
inc
sub
ficoms
outsl
dec
inc
and
aas
or
arpl
popa
addr16
xchg
xor
push
inc
cmpsb
push
movsl
scas
push
vpmaxsw
gs
mov
lret
push
mov
and
push
cmpsb
fcoms
jbe
ffreep
test
insl
aad
sbb
cld
mov
jecxz
dec
push
or
stos
sti
push
jo
das
dec
pop
push
iret
xchg
outsl
ret
xor
pop
testl
outsl
pop
lahf
je
imul
cmpb
lahf
lret
cmpsb
gs
cmp
push
xor
lds
cmp
arpl
icebp
iret
ja
mov
or
dec
lds
adc
out
xor
and
movsl
sti
rcrb
cmp
shl
dec
lret
jns
mov
fwait
push
int
mov
sbb
push
cmp
negb
inc
fwait
aaa
pop
push
repz
mov
inc
lods
in
mov
out
test
sub
mov
paddsb
shrb
insl
cmc
outsb
jecxz
and
inc
add
outsb
or
je
data16
sahf
mov
xchg
ret
movsb
stos
sub
sub
xor
adc
ret
pop
fisttps
adc
push
inc
cli
sbb
inc
sbb
add
and
mov
stc
adc
pop
ret
inc
add
fisttpll
loope
xchg
xor
push
gs
cmc
mov
mov
xor
mov
dec
out
jle
jbe
fcompl
fwait
jnp
cwtl
cmp
jg
sub
shll
adc
test
push
pop
push
rorl
out
repz
cwtl
leave
and
popa
aas
lods
out
insl
inc
push
jb
rorl
or
push
xor
aam
mov
mov
adc
and
sbb
mov
dec
mov
mov
jl
xorb
fstpl
std
pushf
hlt
add
add
movsb
mov
push
sbb
push
popf
pop
or
clc
sub
mov
rol
fnsave
inc
dec
stos
stos
sbb
mov
insl
aad
aaa
icebp
pop
fwait
jo
shl
jge
andl
dec
scas
lea
mov
mov
jp
arpl
sbb
pop
pop
pushf
adc
jno
mov
test
in
test
imul
inc
jp
xchg
pusha
loopne
scas
test
fs
xchg
addb
cmp
dec
xchg
lock
cmp
inc
jp
fisttps
lahf
sbb
and
out
stos
jo
jne
aaa
imul
or
iret
and
dec
andl
aam
adc
fsubrl
add
dec
lods
jp
mov
pusha
inc
sbb
or
push
dec
jnp
cwtl
aad
shl
cmpsl
popf
xchg
nop
or
xchg
dec
fmul
mov
push
jne
icebp
mov
inc
rcl
mov
data16
cmp
fxch
fisttpll
fmul
jne
xchg
inc
jp
inc
int
stc
arpl
sub
rcrb
dec
ljmp
scas
push
jle
push
aas
outsb
jmp
sysenter
insl
xchg
scas
dec
dec
and
xchg
inc
dec
fistpll
jg
adc
lret
push
adc
std
or
ret
jno
stc
jns
push
stos
xchg
mov
jbe
xchg
icebp
and
js
clc
lahf
pop
shll
mov
sti
pop
adc
mov
jl
adc
cmc
clc
jnp
mov
popa
xorb
dec
sbb
sub
jb
adc
push
in
inc
aaa
insb
hlt
cmc
adc
or
fiadds
adc
xchg
lret
nop
stos
push
adc
cmp
xor
mov
add
cmpsb
shrb
fs
insl
pop
lahf
sub
mov
pop
push
mov
adc
cmp
mov
mov
test
and
pop
pop
cmp
and
or
mov
aaa
test
loope
lret
ljmp
imul
insb
cli
inc
shlb
scas
sub
and
int3
push
std
iret
in
jg
cmp
xorl
cld
fs
mov
pop
cmp
loop
int3
hlt
mov
add
dec
mov
das
repz
cli
arpl
sbb
ret
scas
push
mov
lahf
add
aam
ds
sti
pop
push
out
add
mov
mov
xorl
jae
loope
ds
pop
and
mov
or
adc
xor
pop
popf
rclb
mov
es
jmp
out
mov
les
popf
les
loopne
pop
fs
jne
es
add
nop
dec
cmpb
dec
daa
mov
imul
dec
into
lock
or
and
add
addr16
push
in
insb
lahf
repz
imul
ret
xchg
xor
pop
addr16
cmc
addl
out
mov
push
lock
mov
imul
or
incl
xlat
sbb
insl
and
loop
loop
pop
hlt
xchg
scas
in
dec
sub
push
ret
inc
test
sub
ficompl
cmpsl
mov
cmc
push
daa
aaa
mov
in
cmpsb
xchg
push
ret
mov
mov
sbb
dec
dec
sti
inc
jno
addr16
cli
lea
cli
xchg
popa
out
in
pop
popa
mov
or
push
les
aas
mov
mov
sub
leave
lds
fwait
sbb
ss
jmp
fdivrp
sub
lock
sub
lea
pop
and
lret
fmull
in
aad
cmpl
or
cld
dec
mov
scas
outsb
jne
xchg
sbb
sub
cltd
outsb
pop
push
hlt
dec
or
data16
xchg
sbb
lea
add
in
fbstp
orb
ss
xchg
repz
push
movsl
lcall
mov
pusha
repz
test
jmp
test
inc
stos
mov
sub
data16
andl
mov
fcmovne
adc
sbb
mov
cli
pusha
jp
ljmp
pop
mov
loop
into
mov
jl
daa
movsb
stc
mov
and
xchg
mov
mov
inc
out
and
pop
pop
nop
add
inc
in
mov
mov
lock
out
bound
stos
aaa
aad
or
test
jns
jae
imul
sub
inc
enter
xor
adc
cltd
scas
orb
frstor
mov
movsl
jne
lods
inc
mov
inc
div
sarl
inc
into
dec
test
mov
andb
sbb
dec
sub
icebp
inc
loopne
jno
call
push
das
movsb
arpl
cli
pushw
push
dec
push
xchg
dec
add
aas
push
movsl
pop
iret
mov
loope
or
adc
rorb
les
mov
mov
leave
add
mov
mov
in
call
mov
xor
inc
das
or
mov
fmuls
inc
pop
sbb
mov
jnp
test
and
cli
mov
icebp
inc
out
adc
lret
fs
xlat
mov
lea
aad
pusha
fsts
or
aad
pop
push
mov
cs
xlat
dec
loopne
dec
xchg
andb
je
pushf
mov
mov
push
push
inc
fmull
fists
outsb
mov
push
cmp
scas
mov
push
pushfw
fsts
jns
hlt
push
push
add
flds
inc
lds
push
push
add
mov
hlt
inc
pop
push
out
std
stc
add
pop
or
xchg
mov
mov
enter
jmp
fnstsw
rcl
mov
push
stos
test
jl
pop
cmpsb
stos
xor
imul
clc
jne
push
push
mov
mov
sub
pop
sbb
mov
in
mov
fmulp
stos
scas
mov
sahf
jg
mov
das
cmpl
pop
sbb
addl
pop
cmpsb
fsubrs
sub
sub
lcall
xor
out
mov
sarl
shrb
mov
inc
inc
cmp
sbb
xchg
stc
jp
cmc
scas
sar
xor
mov
repz
int3
push
sub
jnp
in
push
fstpl
sub
leave
jne
shrb
mov
xor
roll
scas
and
mov
and
loopne
sti
or
ret
popf
push
test
lds
push
pop
pop
push
enter
ret
jecxz
mov
dec
loop
push
mov
mov
mov
mov
jne
jbe
pop
inc
dec
cmpsl
inc
loope
or
xchg
ds
loope
daa
xor
xlat
cmpsb
jl
jle
cmp
push
nop
xchg
cmpl
jns
jp
dec
pushw
repnz
sbbl
mov
add
inc
push
in
cltd
filds
mov
jne
ja
lcall
lret
sarb
shlb
cwtl
int3
push
adc
lea
sahf
or
inc
into
sbbb
adc
add
push
add
scas
mov
sbb
rorb
xchg
cwtl
sbb
pop
movsl
jecxz
push
jb
xchg
mov
pop
repnz
push
pop
in
sahf
iret
xchg
jae
mov
add
aas
dec
sbb
insl
in
dec
push
mov
clc
es
xchg
hlt
pop
sahf
imul
pop
sarl
inc
pop
xchg
jmp
mov
mov
das
int
in
sahf
sub
xor
out
xlat
or
adc
cmp
mov
and
int3
lcall
mov
rcrb
xor
ret
lret
pop
pop
adc
outsl
sub
cmp
pop
sub
xor
pop
into
leave
out
add
and
dec
and
dec
inc
dec
cltd
fwait
mov
dec
xor
or
mov
cltd
inc
js
adc
adc
jmp
js
dec
imul
inc
sbb
adc
mov
fisubrs
sarl
push
add
inc
mov
mov
test
sbb
movsb
mov
sbb
mov
jo
imul
fsubl
out
fmul
je
pop
mov
cmp
pop
out
insl
push
mov
nop
xchg
pop
mov
xor
push
mov
and
pushf
repz
dec
sbb
xlat
dec
cs
std
sarl
sub
pushf
mov
pop
call
jl
lods
rcrl
push
outsl
mov
lcall
or
lret
sub
js
jp
ljmp
jg
imul
ret
dec
push
shlb
jmp
pop
mov
jp
mov
pop
cmc
xor
shlb
sub
jmp
dec
xor
rorb
sahf
jl
adc
aas
push
mov
outsb
test
adc
mov
insw
mov
shlb
movsl
std
jnp
jmp
mov
push
sub
mov
repz
push
xchg
fmul
stos
shlb
xchg
sbb
mov
dec
xchg
mov
add
aas
pushf
add
js
push
inc
lcall
xor
or
and
cmpsl
imul
sbb
sub
fisubs
flds
sbb
push
cs
inc
sub
rcrb
mov
repnz
push
sti
mov
jmp
xchg
xchg
push
in
aam
pop
negb
stos
lret
cmpb
or
fwait
mov
das
push
sbb
adc
push
jne
js
ret
xor
sub
push
fucom
lock
popa
cmpsb
sub
push
stos
iret
fsubl
jl
mov
dec
xor
mov
xlat
add
adc
mov
mov
lea
aad
ds
outsl
xlat
lahf
add
lcall
cmp
pop
enter
or
test
mov
pop
adc
arpl
out
pop
int
ds
insl
into
jne
int3
cltd
jne
mov
fcoml
cmp
int3
outsl
arpl
dec
push
jg
movl
push
dec
mov
in
pusha
dec
and
jbe
add
inc
sub
fmulp
std
push
mov
xchg
jo
pop
hlt
insl
and
repz
ss
mull
add
into
jbe
jmp
mov
cltd
rclb
into
xlat
testb
jmp
aas
push
sub
into
xor
int
lods
inc
cmpsl
cmp
decb
loop
dec
leave
neg
or
scas
test
sbb
adc
addr16
aam
lea
dec
sbb
push
xchg
dec
sarl
jbe
aam
iret
mov
inc
mov
shlb
out
imul
in
movb
jg
inc
mov
mov
stos
pop
ret
sbb
fnstcw
push
gs
xor
lods
test
mov
sbb
inc
nop
mov
cltd
int
cmpsl
add
lret
loopne
xchg
xlat
xor
je
cmp
arpl
mov
or
adc
inc
xchg
xchg
and
jb
div
mov
cmpsl
lock
xor
fisttpl
lahf
add
test
out
clc
es
pop
fidivs
cmpsb
push
mov
cmpsb
in
sub
mov
dec
dec
in
fcomip
lcall
fnstenv
aad
adc
sbb
jnp
cmp
scas
inc
lcall
push
test
into
jmp
xchg
push
or
ret
js
int3
int
add
mov
lods
push
aas
or
popf
sahf
push
pop
xor
cmpsb
jb
add
aas
jle
enter
sbb
mov
push
sbbb
aad
repz
subl
mov
mov
dec
jnp
and
and
fldcw
xor
mov
std
inc
dec
aaa
sbb
inc
mov
dec
push
mov
andb
mov
hlt
bnd
jg
push
scas
insl
movsb
dec
xchg
cmp
lcall
ret
xchg
add
gs
dec
push
or
lahf
mov
cmp
mov
push
fisubl
pop
push
adc
dec
adc
addw
fsubrs
fsubrl
in
dec
xchg
push
dec
icebp
mov
bound
pop
mov
lret
and
dec
daa
out
push
pop
adc
jnp
fs
in
icebp
or
push
adc
pop
lar
mov
mov
call
add
jecxz
mov
data16
call
rol
mov
movsb
adc
fnclex
jbe
insl
mov
adc
call
ds
jbe
sub
pop
pushf
fwait
shrb
outsl
xchg
jmp
push
dec
out
dec
sbbb
push
call
sub
or
adc
mov
sti
iret
repnz
push
outsl
daa
cmp
in
arpl
ss
mov
mov
jg
adc
mov
lock
jp
dec
mov
pop
cmp
ss
dec
add
aam
mov
cmp
scas
and
mov
data16
mov
dec
call
fisubrl
ljmp
enter
adc
cmp
les
iret
shrl
mov
cmp
adc
mov
cmp
pop
lret
mull
push
lock
cmp
mov
xor
out
adc
inc
call
pop
and
pop
jne
inc
fs
bound
or
cmpsb
scas
or
cld
in
repz
push
sub
gs
cli
fdivs
sub
push
push
or
cld
imul
stos
inc
lret
jecxz
mov
mov
iret
jmp
cmp
testb
jns
insl
push
jbe
adc
mov
ret
pop
inc
mov
ficoms
out
inc
or
lret
push
sub
or
test
push
add
cltd
loop
adcb
into
rcr
mov
fidivs
jae
pushl
bound
pusha
cwtl
dec
xor
jne
sbbl
xor
push
xor
inc
add
push
sti
cld
mov
out
cmc
sbb
out
cli
push
mov
push
out
call
xchg
and
in
mov
je
push
cmc
push
jle
rcl
mov
xor
icebp
imul
aaa
cmp
sahf
sub
cmp
or
xor
jne
fisubrs
movsl
cmpsl
mov
mov
xorl
mov
pop
xchg
and
fisttpll
and
sbb
test
jnp
sub
les
xchg
inc
vandps
sbb
jo
cmpsb
cld
scas
mov
mov
sbb
or
cld
mov
fimull
push
das
and
mov
cmp
jo
sub
adc
jo
clc
xlat
push
pop
das
mov
repz
pop
and
xchg
decb
flds
iret
jno
lret
sbb
cmp
sbb
loop
cmc
aaa
jbe
gs
jns
or
jb
xchg
push
popa
cltd
push
inc
pop
push
scas
shlb
test
jmp
iret
lret
xchg
jb
popf
icebp
mov
sub
pop
loope
dec
shl
hlt
cld
test
mov
and
mov
xor
xlat
sub
pushw
data16
push
or
add
or
mov
dec
out
sbb
mov
and
inc
andnps
gs
mov
ss
dec
and
popl
add
sub
xor
xchg
sub
int3
mov
push
aaa
rol
dec
jae
hlt
js
popf
xor
out
scas
cmp
mov
imul
jmp
inc
loop
rcrl
lea
cmp
jae
or
lahf
adcb
daa
rorl
push
out
xchg
xchg
pop
ret
std
inc
push
movq
daa
mov
mov
jl
adc
inc
fsubrp
and
add
mov
aam
push
inc
call
add
popf
mov
roll
jne
arpl
cmp
lcall
out
cmp
add
push
mov
or
inc
inc
icebp
jne
or
inc
in
loope
mov
mov
jae
fcmovbe
or
sbb
or
andb
subb
ljmp
push
mov
adcb
call
cld
aam
mov
aaa
jecxz
aas
rclb
or
jns
cli
sub
or
inc
pop
int3
ficompl
mov
mov
jbe
jno
cmp
ss
ja
imulb
scas
leave
aaa
ljmp
adc
sub
mov
inc
neg
sti
dec
filds
adc
clc
cmpb
jae
aam
mov
mov
and
mov
repnz
push
ljmp
inc
xchg
mov
lea
into
jbe
inc
sbb
pop
dec
sub
cmp
sub
cmpsb
ljmp
hlt
cmp
aam
roll
sbb
and
fistl
mov
icebp
ja
lret
int
loope
arpl
aad
mov
movsb
jp
push
ja
mov
outsb
cmp
daa
jmp
inc
std
ja
stos
and
sbb
dec
int
movsb
iret
push
inc
jmp
sub
push
les
inc
mov
pop
lds
clc
mov
pop
mov
push
jmp
int
jo
pop
mov
rolb
lret
bound
add
inc
iret
or
fsubs
daa
push
mov
mov
xor
jecxz
or
inc
cmc
mov
paddsb
xor
lock
cmpsb
call
and
add
testl
xchg
push
push
push
imul
mov
lock
dec
pop
das
andl
lret
inc
rorb
xchg
jae
dec
inc
cmp
out
pop
mov
ja
inc
ljmp
push
add
mov
push
cmpsb
mov
imul
xor
xchg
pop
popf
nop
movsl
add
xchg
cmp
push
pop
test
xchg
jns
andl
dec
data16
adc
lea
dec
add
daa
xchg
xchg
cmp
mov
dec
add
or
push
in
rolb
and
xlat
out
ficoms
inc
sahf
dec
rcrb
cmp
neg
mov
out
and
and
sbb
mov
cmpsl
sub
lods
mov
fiadds
lcall
popf
jmp
adc
sbb
push
lods
inc
rorl
out
push
sub
out
lcall
add
xchg
inc
subl
mov
aas
test
ret
inc
ja
cmp
adc
xchg
push
scas
jne
mov
jnp
ffreep
push
addl
cmpl
sub
ljmpw
mov
adc
pop
xchg
lcall
jb
inc
outsl
pop
repnz
xchg
movsl
sub
xchg
sub
mov
sar
add
daa
aad
std
nop
sub
enter
lret
dec
jns
xchg
movsb
or
fnsave
xchg
outsl
and
or
repnz
sub
mov
or
mov
mov
outsb
xchg
mov
aaa
xchg
xchg
cld
in
test
shr
jg
pop
in
lds
scas
lods
stos
clc
leave
jmp
ss
push
in
inc
pmaddwd
dec
das
shlb
int
push
icebp
fbld
scas
xor
bound
insb
inc
popf
inc
cli
sbb
xchg
aam
out
pusha
jo
xor
xor
inc
sub
jno
inc
add
clc
jge
sub
icebp
and
mov
add
pop
jo
test
xor
andb
fdivp
xor
adc
fists
sbb
fsubl
lret
cli
orl
insl
leave
loop
scas
xor
loope
cwtl
mov
jae
inc
sub
imul
ds
push
imulb
sbb
push
push
insl
ret
mov
movsb
mov
adc
lcall
movl
sarl
fwait
or
or
mov
sbb
cmp
inc
xor
push
pushf
jge
out
adc
jmp
pop
jbe
popf
sbb
add
movsb
xchg
mov
out
stc
xchg
mov
pop
andl
clc
jnp
sbb
xchg
scas
movsl
lret
adc
mov
dec
in
pop
je
xchg
mov
aam
or
stos
in
fwait
das
adc
sbb
dec
inc
outsb
ret
sbb
imulb
mov
pop
jmp
xchg
ret
mov
pushaw
xchg
dec
xorb
sahf
mov
pop
aas
mov
jmp
mov
stc
dec
mov
mov
sub
lret
subl
mov
sbb
imul
dec
insl
ljmp
hlt
cmpl
jae
mov
imul
xchg
xchg
jmp
jle
cmp
adc
adc
or
ret
xchg
jge
adc
adc
ds
enter
mov
and
lds
fidivrl
lods
ret
dec
xor
test
imull
loopne
nop
adc
jle
sub
pop
out
lcall
push
cltd
add
fstl
iret
lock
test
push
in
jmp
push
mov
inc
cmpsl
pushf
xor
jnp
push
imul
lahf
ss
inc
inc
loopne,pn
mov
sub
pop
push
xor
mov
test
xlat
mov
pop
mov
mov
add
xchg
xchg
bnd
arpl
subb
cmp
scas
xor
insl
popa
push
xchg
int3
out
div
jb
mov
outsb
pushf
lock
orb
mov
push
mov
xchg
dec
jmp
decl
ret
mov
jp
out
scas
in
lcall
pop
stc
ss
bound
mov
stos
or
and
inc
leave
lock
jge
addr16
std
sbb
and
dec
jnp
cmp
add
pop
sbb
fisttpl
int3
pop
fimull
jge
pop
aam
das
add
push
pop
pop
faddl
add
enter
push
xlat
mov
test
adc
mov
lret
sbb
out
icebp
pop
mov
loop
add
js
fwait
in
orl
adc
test
stc
fucomi
add
stos
fbld
lret
pop
cmp
xor
fdivrs
inc
lahf
rcrb
xor
jbe
jno
shrb
add
je
mov
sub
fmul
dec
popf
aam
es
xchg
rcrl
scas
jne
call
pop
jge
sbb
mov
repnz
dec
fiadds
cwtl
push
cmc
insb
clc
push
lods
fsubrs
push
hlt
inc
iret
dec
dec
sub
dec
aas
inc
repz
rcrb
push
ds
cmc
clc
filds
adc
into
and
adc
repz
stos
jb
scas
dec
mov
mov
mov
jl
xchg
cmp
aad
ret
push
adc
cltd
test
call
pop
addr16
test
sarb
push
test
cmp
rcr
jns
mov
pop
mov
cwtl
scas
mov
push
mov
or
insl
cwtl
sub
scas
lahf
xor
leave
jle
addl
fstl
stc
inc
pop
jb
mov
ljmp
insl
mov
fbstp
mov
and
sub
icebp
push
rcrl
push
push
xor
sbb
xchg
pop
icebp
mov
lret
sbb
push
cmpsb
jecxz
sbb
lods
idivb
cwtl
adc
ja
cs
push
decl
addb
jge
add
sbb
mov
mov
adc
cli
add
rcr
mov
mov
loope
push
xchg
pop
movsl
mov
mov
cli
sbb
pop
cld
dec
call
pop
push
push
and
dec
dec
jae
inc
test
add
cmp
mov
mov
cmp
gs
popa
mov
push
mov
arpl
bsf
jns,pt
jmp
bound
cltd
cmpsl
push
into
jo
xchg
ret
int3
out
mov
sub
dec
shrb
in
pop
out
call
lret
xor
call
adc
je
sub
or
std
outsb
sub
or
mov
mov
mov
jmp
int3
fnsave
fadds
jb
dec
out
cwtl
outsb
rorb
xchg
cmp
cld
xchg
loope
adc
dec
cmp
js
sbb
pop
and
push
paddsb
cmp
and
pop
push
add
dec
mov
test
add
aam
pop
call
sbb
lret
hlt
mov
outsb
xor
pop
pushf
flds
sub
jge
push
push
outsb
push
push
jns
test
lea
mov
push
add
rcrl
xchg
test
inc
mov
jle
sub
test
bound
sbb
cli
aad
cmp
inc
insb
fsubrs
jno
jb
test
mov
fistpll
xor
mov
stos
mov
xchg
in
ret
loop
fnstenv
mulb
jnp
xor
mov
xchg
inc
lds
adc
jnp
jbe
jecxz
loope
ljmp
dec
or
push
sbb
adc
in
fstpt
and
add
jo
xchg
xlat
jg
pop
jnp
das
dec
das
mov
jb
mov
or
push
iret
xchg
xchg
fs
cmpsb
imul
sbb
shlb
dec
out
and
mov
dec
fdiv
imul
ds
pop
pushf
add
and
push
movsl
lods
cwtl
testl
adc
sarb
or
dec
pop
push
pushf
mov
xlat
xor
xorb
pop
xchg
inc
lods
sbb
xor
call
aad
and
push
add
inc
outsl
xor
dec
stos
push
mov
jmp
jg
lret
cmp
pop
cmp
sarb
mov
filds
jns
xor
pop
sbb
jge
stos
lahf
cltd
inc
adc
jg
aam
inc
push
enter
ficoms
mov
mov
or
cmc
out
sub
repnz
jb
sub
inc
pop
sub
dec
cli
mov
jo
scas
notl
rolb
sbb
cmp
xchg
jmp
stc
ret
push
jl
cmp
inc
and
sbb
test
imul
mov
dec
pop
xchg
call
lods
js
cmp
test
pop
lods
in
mov
pop
in
movsl
test
mov
xchg
arpl
js
fbstp
lcall
out
scas
pop
lock
push
add
in
mov
mov
or
popa
adc
fdivl
dec
push
aaa
sbb
jae
mov
dec
mov
adc
xchg
ds
sbb
jbe
mov
hlt
pop
psubw
mov
inc
test
mov
or
int
and
and
jns
mov
leave
inc
mov
es
insl
and
dec
out
jmp
xor
cli
mov
call
inc
xor
outsl
jmp
fstps
push
jmp
jmp
aam
sbb
orl
jae
jle
add
neg
lods
jnp
fidivrl
lret
adc
mov
jno
stc
cmovo
sub
sub
ffree
imul
cmp
sub
ljmp
loope
js
push
mov
fwait
jp
mov
fsubl
mov
mov
clc
out
flds
out
aad
xor
daa
icebp
cli
push
sarl
sahf
mov
lods
jns
int
jo
cmp
sub
popa
and
jecxz
popf
mov
mov
in
test
lret
ljmp
cld
cmp
pop
or
shrb
movsb
adcl
xor
inc
push
pop
xchg
pop
pop
push
mov
in
in
mov
ret
push
sbb
mov
jp
lahf
sbb
inc
push
mov
movsl
pushf
mov
mulb
or
les
xchg
cltd
pusha
lock
mov
xchg
addl
lods
sub
inc
jbe
xchg
out
sbb
loopne
sub
out
sbb
into
adc
out
mov
lret
imul
mov
push
xchg
jns
inc
inc
pusha
outsb
jmp
jns
lods
loope
jnp
xchg
inc
call
mov
popa
cs
je
mov
xchg
mov
fnstcw
adcl
sbb
enter
shr
shl
fisttpll
or
xlat
xchg
mov
jbe
mov
popa
out
test
lds
cli
xor
adc
cmc
cmp
in
arpl
rclb
arpl
mov
rep
enter
leave
imul
or
rcll
cmc
cwtl
cmpsb
mov
sahf
push
inc
fs
rcr
aad
adcb
std
pop
js
cmc
arpl
sahf
fwait
loop
mov
inc
ja
mov
adc
inc
lret
ja
psubusb
push
push
xchg
dec
jp
add
adc
adc
mov
or
dec
xlat
ret
adc
xor
fidivs
jl
xor
xor
mov
mov
mov
sub
out
jecxz
lock
in
xlat
mov
mov
and
hlt
xchg
xor
out
out
cld
xchg
cmc
addb
add
push
jnp
aas
fcmovne
sub
xchg
jge
cmpsb
push
aas
jo
dec
ja
cmp
and
das
push
push
movsb
mov
insb
lds
daa
push
lds
rclb
push
mov
lahf
sub
les
test
mov
out
add
or
jp
push
jne
enter
ljmp
test
in
cmpsl
pop
jns
fsts
bound
mov
and
adc
icebp
cwtl
jmp
pop
sbb
inc
and
stos
sub
aaa
sti
dec
repz
sub
push
jmp
sub
outsl
fildl
dec
mov
sbb
and
push
mov
mov
dec
or
or
rcrl
or
outsb
pop
add
cmp
pop
js
and
adc
sbb
fs
lret
frstor
test
addb
call
mov
mov
dec
cmp
adc
sub
loopne
bound
mov
popf
cmp
mov
pusha
jmp
shrl
out
stos
dec
fiadds
nop
mov
or
mov
out
sbb
in
fsubs
push
hlt
fcompl
or
push
mov
push
imul
cmp
js
mov
popf
cmp
pop
rorb
and
dec
notl
in
andl
sbbb
and
mov
dec
fldl
jg
mov
xor
inc
cmp
push
or
imul
or
popa
sbb
mov
dec
push
pop
push
mov
dec
xlat
dec
jno
std
fcmovb
mov
jnp
jo
and
xchg
cmp
sub
inc
sarb
mov
hlt
sub
push
repz
shlb
loopne
mov
cmp
mov
lods
iret
or
xor
push
pop
sub
push
jg
xor
sbb
popl
js
pop
dec
test
sub
popf
aad
je
inc
scas
adc
push
push
mov
jne
aam
mov
mov
mov
mov
jnp
mov
stos
pushf
mov
adc
inc
enter
add
mov
mov
adc
pop
test
shrl
push
clts
mov
adc
mov
ljmp
cmpsl
imul
pusha
push
xchg
xor
dec
lahf
popa
sub
aad
ret
sbb
loop
mov
xchg
sbb
dec
push
mov
adc
cmp
repz
cmp
jmp
xchg
sbb
push
xor
adc
fidivl
xchg
sub
and
cld
and
inc
outsb
or
jg
insl
mov
fnstenv
xchg
stos
arpl
xor
or
inc
lea
popa
pop
pusha
mov
sub
shrl
test
test
and
sbb
jne
adc
in
push
sbb
mov
add
inc
push
pop
addr16
xchg
pop
dec
in
jl
jae
enter
cmp
ss
or
lock
ljmp
or
sub
rol
imul
shll
inc
and
push
push
sub
idivb
pop
mov
ret
aaa
lock
movsl
stos
lahf
xlat
stos
popf
dec
lods
jns
outsb
in
jb
inc
dec
add
fwait
dec
inc
pop
imul
in
fistl
aad
adc
or
fldt
mov
pop
aaa
insl
shlb
repnz
pushf
sbb
iret
add
push
shll
sub
dec
sbb
test
dec
bound
add
shll
mov
loop
xchg
sbb
and
incb
cmp
loope
jecxz
rolb
rorb
jg
out
inc
jmp
movsl
rorb
mov
loopne
int
jecxz
sahf
pop
arpl
xor
lea
pusha
jl
cmp
fwait
xor
ret
add
adc
pop
rorl
jno
pop
push
test
push
in
push
jg
and
dec
in
out
fildl
cmp
inc
mov
dec
sti
add
pop
adc
stos
mov
push
sbb
lock
hlt
cltd
cmp
xor
inc
push
lcall
inc
mov
mov
sub
imul
je
dec
mov
inc
iret
mov
sbbl
scas
or
das
push
test
inc
inc
or
enter
inc
adc
pop
mov
hlt
out
hlt
xchg
mov
cld
jns
jae
mov
pushf
and
add
dec
cmp
stos
test
js
and
pop
push
gs
xor
aam
xchg
cmp
inc
dec
fldcw
arpl
dec
dec
add
ret
imul
rcl
andb
xchg
inc
out
mov
and
push
push
pop
insl
pop
addr16
jno
dec
xchg
xchg
mov
movsb
mov
and
cmp
nop
mov
sbbb
xor
shrl
cmpsl
mov
lret
dec
mov
mov
or
mov
daa
out
mov
enter
push
sub
mov
adc
fimull
and
mov
push
push
mov
div
mov
repz
lock
test
sub
add
inc
ds
int
in
push
loope
ss
movsb
or
lds
xor
xchg
loop
bound
add
mov
push
jg
xor
imul
ss
and
jge
mov
push
clc
dec
xchg
fidivrs
jo
fldt
stos
or
xlat
out
pop
hlt
cmpsl
inc
jbe
sub
and
pop
sbb
rolb
or
xlat
out
leave
jbe
push
mov
int3
jno
rcr
xchg
movsb
addr16
sbb
push
and
jnp
push
pop
jno
mov
inc
lret
add
pop
cli
sti
sbb
sub
xor
inc
xchg
add
xor
cmp
sbb
and
inc
adc
cli
mov
in
jne
push
and
jecxz
outsb
or
lods
pushf
push
push
adc
adc
cltd
clc
fcmove
sbb
push
nop
adcb
fsubr
pop
add
mov
rcrb
insb
cmp
inc
mov
mov
push
push
pop
jl
cs
mov
int3
dec
sar
ja
xor
xchg
inc
cmc
lret
mov
movsb
inc
pop
dec
xchg
stos
jge
stos
stos
pushf
mov
out
mov
enter
adc
push
and
inc
mov
cmp
movsb
and
aad
std
rol
pushf
cwtl
xchg
insb
cmp
mov
dec
dec
adc
ss
addr16
cmp
fnsave
lods
nop
stos
add
das
decb
scas
mov
std
cmpsl
test
cmc
lret
jns
and
bound
dec
adc
or
repz
dec
idiv
shll
push
xor
push
add
jecxz
lret
fsubs
lret
xor
or
dec
sbb
and
lods
insb
cmp
push
cwtl
enter
push
jne
dec
jle
pusha
cltd
adc
ror
jg
or
jmp
fcomi
jns
sub
add
adc
test
out
sub
fldenv
loopne
stos
cld
stos
add
jae
sti
mov
or
daa
jmp
dec
mov
jge
mov
repnz
daa
pop
test
cltd
add
lret
inc
clc
cmp
push
add
inc
and
mov
xchg
jb
xor
shr
sti
les
mov
out
inc
sbb
cld
sbb
int
outsl
andl
scas
mov
scas
inc
push
in
hlt
and
fcmovnu
mov
aad
xchg
lret
je
and
inc
cmpsb
sub
cmc
mov
push
mov
mov
arpl
inc
mov
pop
xchg
rcrl
enter
ljmp
or
push
aam
dec
xor
or
add
xor
sbb
repnz
sub
and
repz
xor
out
ficoms
and
ja
repnz
sub
nop
add
in
push
insb
push
dec
ja
dec
lock
mov
stc
stc
jp
test
xchg
icebp
repnz
loop
push
lds
lea
bound
in
or
rorl
dec
loopne
jp
inc
pop
inc
stc
push
popa
test
fcoml
jnp
pushf
push
daa
and
insl
jbe
xchg
and
cld
inc
jecxz
pop
push
jle
pop
pop
imul
lock
outsb
data16
sub
aad
mov
jmp
push
xor
icebp
iret
xor
cmp
popf
movlps
mov
mov
movsl
cmpsb
jns
cmc
jecxz
adc
je
into
push
pushf
cmp
and
add
cmp
aad
push
jo
sbb
mov
addr16
ror
outsl
sbb
int3
jnp
test
pop
test
mov
repz
stos
arpl
icebp
les
subb
or
xchg
cld
add
and
movsl
mov
std
stos
daa
call
adc
mov
jge
daa
cmp
mov
push
push
mov
sub
movsl
test
pop
mov
and
cmp
incb
xor
pop
pusha
sub
ret
push
imul
pop
mov
jge
sub
push
imul
dec
and
call
adc
sub
neg
push
imul
js
xlat
call
rcr
je
pushl
jnp
je
ret
les
cmpsl
test
je
or
jb
cld
inc
xchg
in
in
push
shrb
imul
addl
jno
rcll
xchg
nop
in
scas
and
and
out
mov
inc
cmp
pop
adc
mov
bound
daa
cmp
imul
xor
mov
cmp
repz
jge
pop
test
bound
dec
fistl
xor
fimuls
js
int3
and
sub
les
jge
pop
ljmp
sbb
outsl
mov
leave
into
sub
ja
dec
cmp
inc
xor
jge
sbb
mov
xchg
pop
xchg
out
adc
ds
lea
jo
mov
scas
jo
lret
shl
lds
movsl
sub
mov
or
jno
adc
pop
lret
jo
dec
cmpsl
xchg
out
push
dec
pop
sub
jae
cli
push
jnp
lods
dec
sahf
cwtl
mov
imul
jmp
adc
stos
pop
jle
fsubrp
adc
push
std
sbb
test
adc
sub
and
aam
std
mov
je
and
jno
pop
rorl
ljmp
xchg
xlat
mov
sbb
and
xlat
jne
inc
insl
cmp
jmp
jg
lock
sub
add
cmp
or
aaa
loop
data16
leave
mov
test
addb
xor
gs
adc
adc
mov
lret
xchg
adc
repz
adc
mov
sub
mov
addr16
cmpsl
jecxz
pusha
dec
mov
mov
push
aam
adc
pop
fistpll
cwtl
aas
jmp
mov
and
sbb
mov
xchg
daa
mov
push
jno
or
add
mov
push
jle
rcrl
xorl
jge
jge
loopne
sbb
leave
fisubl
adc
or
jle
lds
into
insl
lods
adcl
pop
or
mov
pop
xor
and
dec
mov
jg
dec
cmp
or
push
push
sahf
aad
mov
xchg
mov
cmp
lahf
popf
das
fmuls
dec
out
adc
and
push
gs
sahf
cmp
mov
xchg
mov
jle
add
sub
or
faddp
aam
cmp
and
aam
add
push
inc
sub
aas
or
mov
scas
cltd
sbb
jnp
add
jo
fdivl
lahf
sti
and
out
jle
lods
cmp
cltd
sti
jns
fmull
lret
dec
idiv
gs
mov
popf
inc
mov
pop
push
aas
push
adc
aad
xor
les
cmp
xchg
jmp
or
insl
cltd
lock
cmpsl
lret
std
jbe
push
inc
inc
dec
jge
iret
fists
pusha
data16
and
iret
repz
pop
insb
jmp
jp
arpl
mov
sub
es
push
jno
and
addr16
or
js
movsl
enter
and
scas
orl
rcrb
and
fwait
mov
es
decb
push
add
push
xor
xor
lods
adc
inc
pop
mov
inc
inc
push
fisubrs
mov
mov
add
ror
jg
cmp
shlb
xchg
lods
nop
int
sti
push
out
xchg
add
cmp
pop
add
xor
push
fsubrs
aam
inc
cltd
pushf
pop
ja
inc
cmpsb
mov
adc
daa
sub
ficompl
out
mov
mov
or
aam
dec
jp
ror
mov
shll
repz
jge
jbe
mov
ja
xor
xchg
data16
movsb
pop
outsb
push
daa
xor
dec
loope
jne
fldt
and
jp
add
sbb
les
mov
mov
sbb
cwtl
and
jmp
pop
mov
or
mov
cmpsl
sbb
loope
rcrl
and
ss
leave
sub
iret
repnz
imul
ret
inc
rol
dec
outsb
inc
loop
shrl
mov
sbb
lock
in
pop
fldcw
movsl
test
test
cmp
repz
add
nop
js
int
loopne
xor
mov
jns
clc
inc
insb
aad
cmc
jne
cltd
pop
cltd
aas
mov
ret
sub
xchg
xor
push
movsl
lret
sub
mov
fildl
pop
mov
xchg
push
popa
xchg
popf
fneni(8087
jae
ds
adc
shlb
pop
pushf
jg
inc
adc
inc
or
fadds
inc
out
add
ljmp
or
loop
push
pop
subb
fnstenv
adc
stc
iret
sbb
lfs
imul
testl
in
sbb
push
imulb
repz
addr16
add
jns
popa
js
test
add
dec
mov
and
ss
jno
ds
xchg
xchg
sbb
add
push
or
outsl
fisubl
aam
lods
insl
stos
add
shlb
cmp
fs
mov
dec
mov
mov
movsb
lahf
mov
mov
and
mov
fucomip
mov
inc
icebp
daa
lret
std
test
fiadds
stos
or
lods
test
sbb
in
inc
bound
test
mov
ret
mov
filds
jb
push
mov
xor
nop
clc
mov
ja
sub
pop
mov
out
bound
jb
and
jno
rolb
add
cld
ret
pop
dec
mov
jae
inc
rclb
adc
cmp
dec
insl
mov
cli
mov
sbb
leave
stos
andb
mov
movsb
inc
inc
fs
pop
push
daa
rcl
clc
lahf
loopne
js
divb
lock
popa
aam
push
imulb
dec
lret
sbb
xor
pop
mov
test
xor
enter
jmp
mov
xor
pop
dec
jmp
idivb
int3
mov
cmp
dec
mov
xchg
ret
adc
fdivr
and
imul
dec
test
jbe
into
mov
lret
xchg
addr16
decb
jl
pop
xor
push
mov
cmc
fsubs
add
ja
lcall
gs
xchg
jae
popf
fnsave
pop
xchg
call
and
fwait
add
adc
jns
enter
loop
or
scas
inc
std
rorb
cmp
call
dec
pop
lods
cmpsl
sub
adc
movsb
or
lock
adc
adcl
jle
popa
sbb
or
into
cmp
jmp
push
push
sbb
mov
xlat
push
push
lcall
cwtl
call
jns
mov
xor
adc
fs
fistpl
ret
jle
decb
pop
ljmp
sarb
in
aaa
xchg
push
xchg
mov
push
stos
xchg
and
push
and
xchg
pop
cli
mov
je
outsl
scas
dec
cmp
imulb
scas
xchg
lcall
fdivr
inc
or
out
repnz
scas
cs
clc
push
dec
and
cltd
out
cmp
sbb
jl
dec
sub
push
mov
es
pushf
ss
je
je
inc
xchg
cs
dec
jecxz
mov
add
popf
rcl
loop
jp
or
mov
cli
lea
gs
and
shlb
dec
ficoml
push
and
rcll
movsb
ret
addl
cld
mov
repnz
push
jbe
push
inc
test
sbbl
dec
repnz
pop
or
cli
inc
shr
fcmovne
inc
lods
pop
lds
xlat
or
pusha
int3
leave
addr16
xchg
js
mov
jge
sub
jle
xchg
mov
out
mov
inc
mov
in
mov
sub
xchg
aam
pop
movsb
sbb
nop
loopne
outsl
and
cmp
dec
cwtl
cli
or
rcr
cli
cwtl
bnd
stos
iret
push
into
xchg
dec
dec
and
in
mov
sahf
andl
pop
mov
mov
inc
or
gs
sub
pop
outsb
dec
push
aam
int3
push
jecxz
jne
in
lock
xlat
scas
cmpsl
int3
sub
repnz
fldt
jp
loopne
push
mov
xor
aaa
add
cltd
repz
cmp
pop
and
aad
gs
jecxz
mov
leave
out
mov
sub
dec
test
inc
inc
aas
sub
or
and
mov
js
call
movb
testb
lods
and
in
cs
int
sbb
lock
pop
pop
std
adc
vcmppd
inc
clc
test
addb
xchg
in
adc
jge
inc
mov
in
inc
pop
imul
icebp
stos
pop
jo
and
xchg
push
orl
dec
jmp
lret
addr16
std
push
or
push
fildll
jnp
cmp
out
shrb
test
ljmp
jmp
xchg
and
ficoms
das
int
addr16
mov
adc
mov
arpl
rclb
and
mov
bound
or
jns
or
xchg
pop
scas
dec
mov
out
inc
lcall
in
scas
cmp
bound
daa
lods
negl
sbb
lret
int3
popf
dec
sbb
sub
pushf
and
movd
call
lea
pushw
scas
test
out
outsl
shr
ds
rol
dec
adcl
dec
cmp
and
loope
das
aaa
roll
sbb
mov
mov
sub
into
insb
aaa
lock
ja
mov
and
cmp
movsb
push
cmp
or
jmp
jbe
aas
cmp
mov
add
daa
rcl
mov
fprem1
sti
loope
pushf
and
jo
adc
std
mov
outsl
fiaddl
xchg
inc
and
dec
cmp
pop
sub
in
add
xchg
cmp
jbe
out
and
scas
mov
out
int
cmc
sub
pop
xchg
pop
jbe
sub
xchg
mov
aad
rorl
fdivrl
mov
pop
inc
mov
xchg
mov
and
icebp
adc
gs
aam
outsb
add
and
stos
jns
or
xchg
add
mov
mov
lock
frstor
movsl
andb
or
loopne
lret
pop
inc
and
or
dec
lahf
dec
sarl
jle
push
fwait
roll
cmp
xchg
add
mov
and
add
jae
xor
lea
outsb
jle
out
icebp
fiadds
mov
loopne
mov
int3
dec
or
out
jl
pop
sbb
mov
and
aas
loope
stos
lods
fwait
aam
mov
lds
les
out
add
adc
mov
push
ljmp
pop
mov
adc
mov
lret
or
sub
cltd
and
dec
scas
mov
pop
fwait
add
sub
testb
and
scas
xorb
sti
das
inc
mov
jne
sti
outsl
nop
lock
adc
jecxz
test
rcl
mov
shl
xchg
sahf
cmc
fwait
jg
loope
leave
sub
sti
rorl
ja
and
repz
add
out
mov
ss
push
sbb
into
ret
adc
mov
lock
inc
or
cmc
fcomps
loop
fwait
cmc
cmp
fstl
jge
shll
enter
cmp
inc
pop
sub
jle
arpl
mov
subb
xor
addb
or
xchg
xchg
insl
lret
pop
push
aas
roll
xchg
mov
jbe
or
iret
negb
ror
xor
cmp
mov
out
cmp
not
jns
xchg
data16
sbb
int
ljmp
xor
movsb
cmp
movsb
jb
adc
clc
jbe
in
adc
popa
adc
push
push
bndldx
outsb
adc
pop
bound
sti
push
sub
inc
dec
cli
ss
push
cwtl
pop
xor
xor
imul
int
mov
and
push
add
dec
push
xchg
add
jae
adc
mov
fstp
sub
iret
mov
mov
gs
push
and
orb
jns
add
jno
or
jno
rcrl
add
int3
push
xor
sbb
push
int3
pop
xor
orl
push
out
sub
repnz
sti
int3
and
mov
imul
or
aaa
aaa
mov
add
iret
adc
mov
add
push
sub
inc
xchg
fwait
xlat
shll
int
pop
mov
xchg
shlb
fcompl
sbb
lret
stos
adc
cltd
ljmp
sbbb
adc
inc
outsb
adc
je
repnz
jbe
add
ret
xor
xchg
pop
nop
aam
jbe
movl
xchg
nop
jb
add
xor
inc
loope
jnp
cli
jb
leave
inc
jns
push
mull
inc
lods
ljmp
push
or
xor
xlat
out
pop
cmc
cmp
cmp
imul
sub
dec
iret
lret
pop
lock
or
add
xchg
ja
and
push
and
push
mov
push
pop
cmp
call
test
cmp
mov
push
ret
das
shrl
ds
shll
and
xchg
inc
cmp
add
neg
sub
rclb
inc
lahf
cltd
xchg
jg
sub
mov
stos
cmc
dec
push
or
mov
popa
mov
push
bnd
inc
fdivrs
pop
inc
mov
sbb
mov
mov
shlb
inc
hlt
scas
push
test
ret
out
incb
push
push
push
xchg
sub
dec
lods
stc
inc
aas
dec
bnd
mov
push
jp
push
mov
xor
xchg
and
loop
fisttpl
mov
cmpsb
sbb
lret
in
inc
int
nop
enter
mov
jge
sti
sbb
adc
leave
mov
stc
insl
repnz
dec
lock
imul
aaa
test
dec
out
loopne
cmp
jmp
mov
ljmp
bound
xchg
sti
mov
fisubs
add
push
and
or
sti
mov
push
push
cwtl
repnz
add
or
mov
push
cmp
incb
lret
testl
cmc
jb
inc
push
sub
adc
lods
fwait
popa
pop
loop
stc
xor
mov
addl
aad
fyl2xp1
pusha
push
ss
scas
cs
push
push
cmp
fs
mov
jbe
fprem
out
aam
sbb
inc
jne
mov
aad
jb
icebp
jmp
mov
loope
cltd
test
and
push
dec
mov
mov
loopne
loope
mov
xchg
lea
add
pop
scas
test
or
mov
xor
nop
or
negl
mov
ljmp
stos
mov
dec
lea
mov
mov
test
mov
sub
pop
dec
inc
fisttpl
fnstsw
mov
repnz
popa
jns
xor
test
test
test
mov
lahf
add
cltd
pop
mov
sub
jg
je
comiss
and
ficoml
xor
sbbl
sbb
in
mov
inc
sbb
nop
adc
jbe
push
jnp
in
ljmp
mov
andb
rorl
xchg
pop
pop
popa
mov
jo
xchg
iret
mov
js,pn
lret
shrl
pushf
dec
fsubrs
stos
jle
jecxz
pop
lea
mov
push
movsl
aam
sahf
xorb
pop
mul
out
std
mov
jnp
fistl
test
mov
jbe
adc
push
cmp
pop
stos
cmc
lods
and
or
xor
and
or
and
out
push
nop
aaa
popf
add
packssdw
lock
in
addr16
lods
clc
sbb
push
add
jno
xchg
xor
cmp
inc
add
pop
insb
add
mov
jp
inc
cmp
mov
mov
and
lock
pop
sub
mov
xchg
es
negb
or
imul
mov
leave
test
dec
icebp
pop
and
or
dec
push
daa
xorb
aad
sub
or
lea
sub
fisubrs
lock
lret
and
push
outsb
mov
cld
cltd
pop
testl
les
rcrb
mov
mov
inc
movsl
bound
ds
push
test
in
xchg
cmp
push
mov
and
jae
cld
or
dec
stos
int
imul
sti
mov
int
cltd
pop
inc
mov
fidivrl
add
test
jp
je
fstl
ja
mov
mov
ljmp
popl
inc
fwait
mov
sahf
outsl
push
add
xchg
mov
push
cmp
pop
push
push
or
xchg
sbb
insl
lahf
inc
or
add
outsb
mov
and
movsl
xorl
pop
cs
sbbb
imul
divl
push
jg
pop
cltd
std
loop
popf
mov
int3
mov
sarb
clc
sbb
pop
into
mov
test
lock
pop
test
out
icebp
sarb
std
sub
dec
sub
mov
into
lcall
clc
rcrb
lcall
xchg
pop
sbb
mov
hlt
pop
cld
and
xchg
sarl
aad
and
fsubrs
subb
fwait
mov
jo
inc
xchg
jecxz
in
lock
jne
je
add
cmp
cmp
in
jno
sti
nop
and
adc
push
pop
maskmovq
das
lods
or
add
jo
inc
movsb
mov
int3
add
xlat
fs
pusha
mov
popa
mov
pop
mov
pop
xor
push
aas
push
jmp
les
xlat
out
test
or
push
inc
test
repz
sub
sub
stos
jo
icebp
xchg
ret
pop
stos
jmp
push
rclb
cmp
in
into
inc
push
or
or
insl
scas
and
xchg
mov
call
cltd
push
xlat
inc
outsl
inc
sti
aas
stc
push
dec
inc
sub
add
add
push
mov
sbb
jne
push
imul
pop
lret
icebp
arpl
inc
or
jno
cmc
stos
imul
or
iret
movsb
cmc
fsubs
cmp
push
mov
sub
inc
lret
insb
outsl
in
and
mov
mov
pop
dec
add
out
push
loop
enter
mov
cmp
idivb
push
push
mov
and
cmp
xor
lock
push
xor
dec
mov
or
ret
movsb
mov
in
test
mov
mov
add
lcall
dec
sub
dec
sbb
flds
mov
aaa
dec
es
pop
cmpsb
stc
in
rcr
leave
jb
pop
jbe
lea
stos
push
ljmp
scas
into
pop
or
repz
leave
push
leavew
pop
push
pop
dec
lds
pushf
ret
pop
push
and
sub
add
stos
xlat
dec
push
mov
mov
pop
mov
imul
mov
icebp
push
inc
and
outsb
add
mov
cmp
pop
jecxz
cmpb
lahf
loope
sub
testl
aad
push
les
jbe
les
out
ss
hlt
repz
iret
sub
data16
or
clc
push
add
mov
sub
loope
test
out
loop
imul
and
inc
repnz
les
add
cmp
das
pop
sub
sbb
stos
cmp
pop
sbb
test
push
cwtl
cmp
test
mov
jmp
aad
pop
push
sbb
xorb
push
pusha
int
daa
adc
lret
mov
mov
fisubl
hlt
fcomip
pop
sub
pop
out
or
mov
jmp
les
nop
js
loop
push
adc
cmp
dec
les
pop
jnp
jle
je
les
mov
push
dec
popf
ljmp
pop
push
popa
mov
inc
insb
xchg
sti
and
xlat
jo
cmp
adc
push
pushf
test
jae
fsubl
mov
adc
roll
movsl
jmp
mov
adcb
out
adcb
mov
dec
push
adcl
mov
rolb
fisttpll
out
pop
mov
inc
subl
das
adcl
movsl
lods
nop
les
cltd
or
mov
mov
mov
mov
and
andl
in
fnstsw
push
pop
stos
xor
shr
lret
xchg
mov
sub
jge
jge
pusha
or
lret
mov
int
sub
jae
dec
jne
xor
lods
inc
test
mov
mov
addr16
inc
dec
inc
loope
mov
inc
push
and
loopne
sbb
fldt
mov
inc
jg
xor
es
xor
add
sub
pop
imul
jmp
cwtl
sbb
pop
push
repz
pop
mov
mov
inc
mov
inc
stc
icebp
add
pushl
inc
imul
and
ret
shll
insl
xor
pop
pushf
fdivrl
cmp
sub
mov
add
mov
fiaddl
add
imul
mov
add
inc
add
xchg
ja
sbb
inc
push
flds
cmp
nop
out
fs
in
mov
mov
ret
xrelease
loop
push
sbb
xchg
adc
pop
flds
xchg
sbb
mov
in
and
add
inc
xor
bound
dec
js
jbe
ror
fnstsw
out
or
jae
dec
jmp
aad
in
insb
mov
push
cmp
push
mov
jmp
scas
in
push
push
pusha
dec
hlt
aas
pop
aaa
mov
jb
outsb
push
pop
ljmp
pop
outsl
fdivrs
jae
cmpsl
cmp
test
sbb
pop
fsubr
shl
andl
xor
ret
pop
gs
loopne
lret
xor
out
jbe
addr16
into
cmp
mov
pushf
adc
or
pop
mov
iretw
mov
jns
ds
stos
das
mov
mov
int3
addl
fisubs
jl
adc
clc
popf
inc
sub
add
push
fcmovbe
push
jbe
cmpsb
aad
pop
push
dec
ret
repnz
stc
add
mov
testb
pop
bound
sarl
popa
mov
stos
dec
add
mov
sahf
mov
ljmp
mov
xchg
cmpsl
clc
dec
xor
fcmovne
inc
loop
dec
xchg
pop
jb
fwait
jnp
shll
mov
push
inc
les
pushf
push
pop
shll
sub
clc
xchg
push
sub
pushf
sub
mov
and
push
push
cmpsl
in
inc
jae
lret
mov
lahf
enter
ret
mov
inc
in
pop
pusha
outsb
lcall
nop
xor
pop
fmull
mov
xlat
fsts
xchg
sti
stc
sbb
xchg
jecxz
add
pause
insl
or
pop
fisubl
mov
scas
hlt
je
or
adc
cmp
sub
sub
mov
push
nop
pop
or
das
data16
sub
add
adc
mov
ja
pop
inc
arpl
xchg
sti
pop
gs
pop
pop
outsb
fsubs
adc
jne
mov
pop
xor
mov
je
lcall
lret
adcl
push
or
mov
jmp
jno
add
and
cld
mov
push
in
dec
sbbb
das
jnp
in
jl
adc
jle
repz
leave
cmp
inc
push
add
pop
mov
xchg
xchg
add
mov
hlt
pop
mov
push
orl
jae
rcr
arpl
sub
mov
stos
pop
mov
pop
push
pop
addr16
cwtl
fs
movsl
pop
jp
jne
push
adcb
pop
xchg
aaa
fs
movsb
mov
adc
xchg
sahf
or
sar
es
push
jb
dec
je
in
sbb
fs
push
sbb
xor
sub
jmp
fwait
mov
cwtl
daa
dec
mov
into
fwait
xor
xor
divl
jae,pn
dec
mov
xchg
scas
in
pop
jl
test
pop
push
xchg
jns
int3
jns
lds
and
mov
dec
xlat
mov
mov
jns
pop
mov
das
ljmp
push
and
mov
sub
and
or
jle
je
fiadds
stos
bnd
iret
das
mov
jb
xor
clc
dec
dec
insl
enter
and
xchg
icebp
sbb
jecxz
sub
sub
rcll
push
jne
mov
int
into
cmp
xor
test
inc
shll
dec
test
mov
adc
jle
sub
pop
sbb
mov
lods
repnz
gs
dec
xchg
cmp
clc
mov
push
dec
xor
sbb
lds
push
xchg
sub
imul
lcall
cmp
adc
stc
call
adcl
idiv
decl
lret
mov
shlb
mov
shrd
adc
mov
cwtl
push
push
scas
or
stc
xchg
ret
cli
add
xchg
xchg
jns
mov
or
dec
lret
ljmp
and
add
fisubl
add
fs
nop
mov
lock
es
scas
aas
mov
int3
or
xchg
notl
mov
popa
or
in
iret
push
lcall
pop
push
jmp
xlat
jg
test
xchg
push
lock
ss
arpl
scas
js
mov
or
fyl2x
adc
add
shll
xchg
mov
pop
movsl
mov
idivl
mov
int3
push
adc
in
lods
pop
push
and
stos
leave
fwait
jp
mov
ja
ret
test
scas
push
mov
outsb
repz
iret
cmpl
pop
in
jl
pop
fsts
aaa
add
stc
pop
orl
decl
cmp
inc
jns
outsl
punpcklwd
aas
fs
addl
jnp
xor
cli
jp
hlt
es
nop
ss
cltd
out
sbb
aaa
aaa
mov
fstl
les
in
ret
mov
sub
rcrb
cmp
leave
mov
mov
nop
lret
and
movb
decb
in
outsb
in
add
fisubrs
push
cmc
das
jecxz
out
orb
push
jb
or
mov
cli
shl
lods
add
inc
mov
mov
xor
and
inc
std
or
scas
lock
loopne
xchg
and
ja
imul
fs
and
push
jne
test
and
lcall
inc
and
ror
adc
jo
sub
xlat
flds
mull
pop
ficoms
sbb
stos
and
inc
cmp
adc
fidivrl
dec
rcll
mov
inc
repnz
int3
clc
inc
lods
push
adc
dec
stc
pop
gs
rdpmc
xchg
mov
jg
jns
cmp
jb
aam
sarb
mov
push
andb
into
scas
pop
push
dec
add
dec
sbbb
push
jp
sbb
pop
aas
pop
dec
pop
mov
lods
int3
mov
pop
fs
mov
inc
lret
pop
mov
movsl
jmp
xchg
insl
or
jecxz
test
push
lea
lret
xor
addl
daa
loopne,pt
or
leave
mov
jg
decb
xchg
adc
test
test
sbb
adc
mov
xchg
sub
and
imul
pushf
imul
xchg
inc
add
mov
loopne,pt
dec
sbb
push
inc
sbbl
fstpl
in
push
cmp
outsl
sbb
out
addl
mov
sub
adcl
icebp
pop
mov
mov
pop
add
cmp
inc
das
xor
cmc
and
imul
xor
xor
jmp
ret
dec
notl
cmc
rol
aas
jle
inc
clc
mov
nop
sub
stos
add
adc
lret
imul
icebp
adc
push
mov
andl
addb
or
xchg
andb
pop
out
adc
xchg
pop
xlat
pop
out
or
dec
mov
cmc
adc
and
int3
test
adc
xchg
sbb
adc
cmpsb
xor
inc
lock
out
into
lds
cli
sub
divb
or
cmp
inc
rorb
xor
movsb
rolb
jecxz
je
xchg
aas
add
adc
clc
lcall
lock
or
lds
popf
shrb
stos
icebp
rcr
push
notl
mov
pusha
dec
and
add
and
add
xchg
dec
sbb
or
push
mov
xor
or
push
xor
jb
bound
sahf
outsl
jae
mov
xor
jge
out
fimuls
in
ljmp
ror
ss
lahf
decb
loope
enter
fiadds
cmp
into
add
xchg
mov
cmp
sub
mull
call
dec
cmc
push
adc
inc
or
out
fmuls
mov
and
push
sbb
movsb
xchg
cmp
cmp
test
rolb
pop
adc
movsl
adc
xor
leave
push
mov
xor
dec
mov
sub
or
cmp
and
xchg
add
inc
shll
fcomps
ret
repnz
imul
cmp
enter
pop
lret
jno
lods
sbb
mov
and
dec
fsubr
xor
fsts
cmpsb
cmpsl
xchg
add
push
movsl
clc
je
adc
jae
pop
cli
dec
or
cmpsb
out
sbb
icebp
lods
mov
jge
notl
jmp
aam
or
lret
call
cli
test
pop
xchg
or
xchg
aas
orps
mov
cmpsb
jo
cmp
pop
ljmp
and
fwait
test
inc
dec
xlat
std
shrl
add
cld
sahf
movsl
lret
push
mov
jmp
test
addr16
xor
add
test
inc
cltd
xor
ror
out
jae
sub
out
popf
ljmp
push
out
xor
sub
sub
js
rcll
cli
mov
adc
addr16
jnp
sub
sbb
fcompl
shrl
out
test
dec
mov
cld
dec
xchg
dec
fwait
cs
imulb
xchg
mov
jb
xchg
pop
dec
test
add
in
and
and
adc
push
cli
or
jecxz
out
sbbl
iret
cmpb
pop
test
mov
jnp
shlb
xor
cltd
fidivl
push
fstpt
scas
push
sbb
mov
ret
xor
mov
mov
into
jnp
movsl
lahf
ds
cmp
sub
jmp
imul
jmp
popa
cmp
mov
out
mov
dec
xchg
mov
call
jge
xchg
out
adc
std
ficompl
sahf
in
inc
sub
mov
lds
cmp
in
enter
mov
mov
fdivrl
jns
add
loopne
fwait
jle
lock
pop
pop
add
pop
pop
rorb
lods
pop
outsb
outsl
jnp
xor
push
ss
mov
mov
fistl
cltd
jp
mov
or
push
inc
pop
sti
ja
mov
mov
clc
xor
mov
pop
lods
inc
sub
les
pop
add
inc
insl
testb
jnp
jmp
inc
push
gs
popa
rorl
and
add
cwtl
sub
cmp
jne
adc
shlb
mov
outsb
xorb
mov
mov
pop
and
mov
scas
push
fcmovu
fistps
rcr
cmp
imul
push
pop
inc
dec
mov
adc
sbb
bound
nop
adc
jle
mov
push
js
jp
mov
in
mov
mov
pop
stos
scas
push
sbb
xor
adc
mov
sbb
mov
inc
mov
stc
dec
add
and
rcrb
popf
mov
sarl
xor
inc
popa
jo
push
and
insb
push
or
clc
sub
divl
xor
mov
mov
lea
loop
in
icebp
dec
pop
sub
push
pop
xchg
cmp
mov
fucomi
sbb
inc
insl
sub
fs
add
and
pop
ss
aad
in
fisttpll
mov
mov
sbb
lods
pop
insb
pop
jae
int
in
mov
mov
xor
test
movsl
jno
mov
orl
add
push
pushf
mov
sub
xor
std
dec
testl
cltd
push
sub
notb
push
loopne
pushl
fs
xchg
mov
iret
jo
fbld
mov
ja
pop
jbe
mov
sahf
fstl
dec
into
insb
mov
dec
sub
pop
jecxz
mov
sbb
mov
sbb
push
sbb
jge
hlt
repnz
add
jo
pop
push
mov
dec
mov
imul
and
fisubrl
stos
pop
dec
mov
in
insl
cmpsl
pop
pop
pop
cmc
gs
add
cmp
adc
fisubl
stos
cmp
loopne
jne
aad
in
adc
aam
and
addb
ljmp
data16
int3
leave
sbb
push
insb
or
repz
je
cmp
dec
mov
mov
insl
mov
mov
pop
sbb
mov
pop
sti
jae
jne
popf
pop
xchg
shlb
mov
cmpsl
icebp
pop
das
sbb
dec
loopne
rcll
repz
mov
pushf
int
lods
push
daa
fldenv
mov
and
xchg
out
cmc
or
mov
lahf
inc
ds
pop
and
roll
push
push
adc
aad
add
test
mov
repz
push
xchg
mov
sbb
mov
shlb
test
test
mov
add
pop
push
fistpll
dec
test
push
js
jbe
pusha
aas
ret
xor
mov
fldenv
mov
rol
movsb
aad
cmp
and
jo
mov
gs
xchg
aas
xor
xor
lds
lret
or
sub
int3
cli
jns
jne
push
mov
notb
sub
divl
inc
xchg
adc
sub
imul
daa
inc
mov
insl
mov
xor
repnz
pop
or
and
mul
imul
and
ret
mov
cmc
or
sbb
dec
add
cmp
imul
movsl
and
mov
lahf
inc
movb
sbb
sub
xlat
jb
adc
in
add
pop
fldcw
ret
icebp
add
popf
test
and
inc
cmp
fisubl
and
in
xlat
lods
jg
and
sbb
loop
push
inc
jno
imul
push
mov
xchg
bound
cmpsb
xchg
jnp
gs
cmp
cltd
sbb
enter
movsl
fimull
push
mov
pop
push
sbb
fidivl
repnz
or
jo
jle
or
jno
aaa
fidivrl
into
mov
xor
sti
push
dec
mov
cmc
mov
aaa
shl
adc
sbb
lret
mov
std
ds
repz
aaa
add
icebp
jp
hlt
fstpl
popf
mov
mov
add
pop
int3
sbb
call
ljmp
xor
pop
sbb
int3
dec
xchg
cmp
cmp
jns
sub
cmpsw
dec
popa
adc
xlat
jmp
sub
scas
xchg
cmpsb
xor
stc
sbb
fldlg2
sarb
fistps
inc
push
pop
in
lock
pop
movsb
xchg
adc
sbb
jp
jmp
adc
pop
add
xor
and
movb
cmpsl
lock
jmp
or
mov
lret
stc
pop
dec
das
jbe
aad
int
jl
fidivrs
sbb
negl
jl
repnz
repnz
daa
or
divb
fwait
push
fldcw
inc
repnz
inc
js
or
pop
push
jnp
rolb
mov
jae
daa
fcmovne
mov
push
cmp
dec
jns
cld
sub
mov
xchg
xor
mov
leave
pop
jo
fcomps
fists
jecxz
daa
sbb
sbb
ret
mov
mov
stos
lea
push
push
clc
negb
cli
dec
jbe
int
test
ret
stc
movsl
loopne
ret
inc
ret
into
rcll
jbe
cmp
or
dec
mov
enter
popa
sub
or
push
lret
and
jb
mov
mov
pop
mov
negb
stc
pop
scas
xchg
jmp
icebp
sahf
pop
pushf
jmp
cmp
inc
jnp
xchg
push
xlat
adc
add
je
iret
mov
call
fs
push
scas
scas
insb
adc
dec
pop
out
push
inc
stos
roll
and
mov
cmp
sub
cmp
movsl
dec
sub
pop
cmpsl
sbb
xchg
mov
fcomps
leave
outsb
rcrl
mov
inc
mov
jns
loop
pop
loopne
jg
rcl
sahf
inc
sbb
leave
and
lcall
dec
cli
jae
jg
movsl
lods
mov
imul
or
enter
ljmp
mov
rclb
aad
dec
mov
pop
push
mov
add
mov
inc
mov
arpl
sub
adc
repz
or
popa
mov
jae
dec
nop
roll
inc
pushf
rolb
data16
jb
addr16
and
icebp
dec
push
add
lea
inc
lea
sub
into
jno
cltd
andb
jne
cmpsl
filds
lcall
inc
xchg
sub
or
add
or
icebp
mov
in
sbb
jg
cmp
push
rolb
ret
adc
dec
mov
sbb
pop
mov
jmp
outsb
mov
jae
xor
inc
enter
sub
or
mov
call
aas
pop
cwtl
loopne
push
cltd
xor
fsubr
insl
xchg
jl
jge
icebp
adc
push
mov
and
sti
xchg
adc
lahf
adc
clc
push
lds
mov
insl
mov
or
and
stos
outsb
adc
outsb
jg
mov
in
out
addr16
dec
pop
mov
mov
test
clc
inc
fs
mov
sub
xchg
shrl
int
add
int3
lock
dec
cmpsl
test
popa
cmpl
pushf
dec
sub
sub
movsl
sbb
push
pop
es
pop
orb
cmpsl
add
adc
les
es
inc
in
push
push
stc
inc
mov
add
pop
jle
lods
pop
inc
push
adc
lret
pop
insl
rcl
popa
aas
mov
stos
pop
or
cmp
das
fistps
xor
cmpsl
cmp
mov
dec
sub
fistl
xchg
sbbl
cmp
int
cltd
mov
mov
push
hlt
add
aaa
mov
adc
dec
sbb
mov
adc
dec
mov
mov
cmpl
jl
je
out
mov
or
aam
or
movsl
sbb
mov
aam
or
sub
lock
shrl
mov
loop
cmp
repz
popf
int3
add
add
mov
scas
lock
aam
loope
mov
fcomps
xlat
mov
insl
dec
mov
inc
es
dec
mov
je
xor
mov
ss
mov
xchg
shrb
mov
mov
mov
repz
fs
sub
xchg
test
cmp
movsl
sub
aas
pop
mov
jmp
stc
sub
jae
ret
and
sbbl
inc
je
xchg
push
mov
out
int3
scas
or
ret
test
xor
xor
pop
ljmp
fdivrl
call
and
clc
loopne
jle
cmp
sbb
fstps
arpl
jp
mov
stos
add
int3
xor
dec
add
cmp
rcrl
pop
dec
add
adc
test
mov
shll
dec
into
add
enter
insl
popf
jl
je
fstpl
push
cmp
adc
jnp
pop
push
inc
push
push
ffree
add
in
jo
add
jle
outsb
pop
mov
in
mov
mov
jne
faddp
xchg
dec
in
mov
popf
enter
ja
fwait
rorl
sub
pop
scas
ds
jae
imul
lret
inc
movsb
jns
xor
xchg
mov
dec
mov
jne
sbb
lea
pop
gs
and
push
push
jnp
jg
jge
mulb
pop
xchg
jge
cli
ds
adc
inc
iret
and
test
mov
ljmp
xchg
into
push
les
lods
adc
sbb
or
and
fwait
or
mov
mov
popa
lret
mov
pop
std
mov
outsl
push
outsb
or
insb
mov
xchg
aas
lret
push
or
stc
mov
xor
jne
adc
sub
nop
loope
aas
iret
hlt
dec
sub
loopne
stos
pushf
push
lods
dec
lods
int
mov
scas
push
or
enter
out
inc
and
aaa
mov
outsl
mov
jnp
inc
sarl
pop
into
pop
pop
insb
sbb
or
sbb
mov
add
cmpl
sti
clc
stos
out
cmp
push
pop
lock
or
pop
out
push
xchg
cwtl
cmp
inc
or
push
hlt
fs
pop
cmp
out
mov
dec
imull
or
scas
out
pop
sbb
divl
ret
aas
add
lret
jno
into
sub
xchg
pop
hlt
movsl
mov
push
mov
add
mov
call
add
mov
js
std
adc
out
aad
jmp
je
sbb
inc
xchg
fcompl
outsb
inc
rolb
sbb
xchg
insl
aaa
mov
hlt
orb
cmp
popf
sub
testl
movsl
pop
adc
inc
mov
mov
pop
je
xor
jge
xchg
pop
add
jge
add
enter
stc
sbb
int3
push
clc
sub
aaa
push
ret
mov
aam
mov
rolb
movsl
sahf
sti
mov
jbe
hlt
mov
add
mov
ret
inc
mov
mov
jmp
out
push
mov
dec
sub
mov
leave
add
js
test
decb
adc
test
xchg
lods
out
mov
sbb
stc
inc
pop
lods
sub
add
xchg
mov
lods
xchg
test
gs
and
iret
mov
xor
mov
push
mov
adc
push
and
mov
orb
pop
and
test
div
mov
cmpb
scas
ss
push
mov
pop
jno
add
insl
push
test
sbb
pop
xchg
jp
std
in
sbb
xor
daa
pop
fimull
orb
je
xor
xchg
call
cmp
aad
arpl
cmp
cmpsl
stc
xchg
adc
int
in
test
add
xor
cmpsb
ljmp
cli
testb
xchg
int
es
lds
dec
out
jecxz
sti
fbld
mov
xor
out
nop
xor
jp
test
mov
les
ret
sarl
shrb
xor
xchg
inc
js
mov
jp
cwtl
xchg
aas
in
cli
xlat
mov
xchg
addr16
push
jae
cwtl
imul
ret
out
xor
repz
divl
sbb
inc
imul
push
cmpsl
and
cmpsl
cmp
int
jnp
push
dec
subl
pop
and
add
out
ret
lea
test
sbb
sub
inc
shr
jl
mov
cld
aas
fs
popf
das
addb
pop
fstps
fimuls
xor
les
and
dec
pop
les
mov
fsubr
xchg
sub
jp
jg
iret
adc
flds
stos
clc
jecxz
jns
add
in
pop
cmp
xchg
or
pop
je
xor
sub
cltd
mov
push
sbb
aad
pop
fs
mov
and
adc
or
loopne
idivl
loop
inc
aam
xchg
xchg
mov
stos
imul
cli
and
push
mov
pop
dec
sbb
lds
pop
rolb
ret
int3
or
movsl
in
push
das
fmulp
rclb
sbb
nop
xor
dec
or
in
xor
in
repnz
inc
aad
adc
mov
xchg
xchg
xor
imul
jle
repnz
cmp
lds
andl
cmp
xor
jp
in
fiaddl
loop
les
das
mov
mov
xor
jecxz
ficompl
fsts
imul
xchg
scas
stos
js
jmp
xor
int
add
in
add
sub
sahf
jbe
into
pusha
movsb
or
outsl
cld
popf
xor
sarb
sbb
push
adc
test
inc
jno
jge
push
loope
outsb
sub
jp
adc
xor
mov
scas
push
ret
push
mov
add
xchg
jnp
push
or
bound
or
push
lret
mov
mulb
fwait
mov
pop
mov
mov
in
dec
sub
out
or
call
mov
dec
sub
div
mov
aas
shlb
and
cmp
subb
add
lret
enter
jnp
lret
lods
popa
mov
mov
jno
test
dec
add
or
cs
cmp
sbb
mov
cmp
and
sub
out
mov
ds
lret
jmp
push
dec
or
pushf
jb
and
push
inc
lods
gs
sti
divl
movsb
push
mov
ficoml
into
sbb
pop
cmp
sahf
xor
push
repnz
cmc
add
popf
dec
es
fdivrs
adc
mov
inc
insb
sub
inc
xor
cli
xor
lds
xor
sqrtps
popa
mov
adc
lret
lahf
xor
jge
xchg
mov
loopne
addr16
mov
fwait
icebp
dec
push
out
aaa
out
mov
pop
push
roll
xorb
mov
mov
mov
stc
stos
xor
nop
fidivl
adc
and
ljmp
leave
enter
in
and
cmp
mov
lea
std
and
mov
inc
lcall
sub
jle
out
incl
fildl
cmp
lea
shl
adc
lods
or
add
ja
pop
imulb
push
lods
fwait
lea
bound
inc
test
jnp
sti
jns
loopne
push
mov
dec
jecxz
lret
loope
bnd
jecxz
xlat
pop
cwtl
jno
movsb
lret
lock
lahf
negl
cmc
addl
push
dec
arpl
sbb
iret
insb
mov
rcr
mov
ljmp
rorb
dec
xor
xchg
xor
jge
inc
shrl
lock
push
imul
push
inc
mov
mov
jle
std
std
lahf
adc
adc
aaa
add
shr
adc
and
jge
jbe
mov
xor
aad
xor
or
imul
into
add
mov
rcl
inc
fimuls
test
xor
xchg
jp
fwait
mov
adc
outsb
xor
adc
loope
xchg
fwait
xchg
iret
inc
or
xchg
add
xor
mov
jg
test
pop
cmp
addr16
pop
pop
pop
adc
enter
stos
in
pop
in
add
and
xchg
loop
mov
daa
dec
rolb
sahf
lods
inc
ret
mov
jl
mov
cmp
scas
push
repz
test
jmp
xor
dec
push
xchg
ret
aam
in
mov
cmp
inc
add
xor
cmp
in
test
movsb
or
xchg
pop
sbbb
cli
inc
and
cli
popa
in
and
push
pop
es
arpl
sub
leave
mov
jl
push
cmpsl
adc
sbb
mov
lock
popf
cli
push
ljmp
inc
imul
into
push
outsl
imul
xchg
sub
fsubs
addb
ret
cli
imul
mov
pop
push
jecxz
in
push
adc
shlb
xlat
decl
cmpsb
dec
enter
mov
lret
adc
and
dec
xchg
mov
fists
mov
test
sarl
push
mov
loop
add
in
test
ljmp
mov
push
stos
xchg
cli
or
test
fisttpll
mov
sbb
imul
sub
or
pushf
incl
xchg
sti
popa
sub
pusha
sub
into
fadd
sub
subl
xchg
jbe
stc
adc
scas
repnz
inc
xchg
sub
adc
aad
insb
pop
ret
ret
mov
jmp
mov
iret
jne
mov
lock
push
inc
movsb
mov
fwait
push
xchg
lcall
xchg
add
push
jl
cltd
sbb
ret
sbb
or
cmp
sti
sahf
shl
insb
sbb
xchg
and
dec
int
pop
inc
jo
out
hlt
push
mov
jecxz
in
pop
dec
pop
movl
cmp
mov
inc
nop
enter
data16
rcll
in
scas
add
ds
add
data16
push
stc
inc
jo
outsl
xchg
pxor
jnp
outsb
adc
icebp
cmp
mov
xor
cmp
cmp
push
dec
les
jmp
fldt
cli
stos
and
repnz
bound
testl
fisttpll
cmpsl
push
jmp
xchg
push
jle
xchg
cmp
jns
lea
enter
xchg
ja
pop
fistl
cltd
dec
mov
sti
lods
adc
lret
in
mov
in
push
mov
add
mov
push
jp
sbb
add
out
sbb
pop
sub
push
mov
daa
mov
xchg
and
pop
in
cltd
push
dec
test
cld
stos
inc
mov
rorl
mov
dec
shr
adc
mov
push
pop
lods
xchg
jmp
fcompl
mov
push
out
push
aas
jno
mov
jmp
cmp
sbb
xchg
pop
inc
jb
and
and
scas
mov
and
cmp
jb
push
clc
inc
into
cltd
sub
add
data16
das
jno
cmp
push
mov
and
call
push
lcall
adc
insl
pop
and
in
or
xlat
lock
nop
lock
imul
and
fmull
jne
cmc
loopne
ret
lds
sbb
adc
into
and
cs
xor
jne
stos
fwait
or
ror
cmp
data16
dec
mov
dec
ret
cwtl
loopne
mov
dec
cmc
aaa
fisttpl
mov
enter
push
imul
inc
xor
push
call
in
stos
shrl
inc
addr16
and
jp
mov
xor
outsb
mov
jmp
push
frstor
pop
mov
xchg
jge
mov
xchg
fcoms
mov
ret
adc
rorb
imul
dec
add
stos
in
jmp
shrl
mov
cmpsb
aaa
loope
dec
out
xchg
jge
and
ss
pop
fidivrs
or
jne
dec
cmp
lcall
lods
jecxz
sbb
in
cmp
push
jge
stos
out
out
out
pop
pop
jbe
in
pop
sahf
jae
mov
std
insb
mov
xchg
lret
stos
daa
scas
out
mov
cmc
test
notl
xorb
cmp
loope
mov
cmp
push
mov
xor
outsl
sub
add
mov
out
cmpsb
xchg
movsb
cmc
ret
jl
mov
mov
mov
lock
jno
arpl
xor
mov
push
sub
mov
sbb
lds
push
add
addr16
fldt
jle
push
mov
mov
pop
or
pop
dec
xor
daa
jnp
shl
push
pop
dec
stos
js
clc
inc
jg
xor
lods
lods
mov
fiadds
inc
cmp
mov
inc
icebp
sbb
cli
add
cmc
jns
shll
popf
mov
mov
enter
or
insl
inc
loopne
xchg
jae
or
and
pop
pop
lret
leave
lods
mov
mov
call
push
cli
jmp
inc
xorb
and
xor
pop
rorb
cwtl
cmp
orb
inc
xchg
aam
pop
les
dec
cmc
inc
lods
adc
enter
hlt
dec
into
jb
mov
cmp
dec
cli
cmc
push
cmp
test
mov
mov
outsb
outsl
xor
mov
ja
and
rcl
push
add
sub
outsl
mov
insl
cmp
and
ds
add
lods
pop
lret
add
callw
in
daa
jae
mov
lods
sub
test
mov
jne
add
scas
mov
daa
pushf
xchg
or
in
push
icebp
fimull
push
dec
jmp
mov
cmp
cmp
xchg
sub
test
sub
dec
out
or
adc
rolb
out
test
mov
insb
jbe
sub
imul
enter
fwait
xorl
je
fwait
xchg
test
imul
subl
pop
ljmp
mov
arpl
mov
out
sbb
pop
cli
push
repnz
push
loope
pusha
aaa
sbb
imulb
cmpsl
cltd
jl
movsl
mov
insl
adc
adc
pop
es
insb
xorl
pop
leave
mov
jne
or
xchg
lods
jl
mov
imul
inc
dec
push
dec
sarb
loopne
jne
push
ljmp
sub
add
test
mov
jns
jno
and
jb
inc
sarl
dec
pop
add
mov
xchg
sti
mov
jmp
pop
das
jle
movsl
cmp
sub
mov
or
fdivrs
hlt
insb
and
idivl
or
jmp
cltd
scas
sbb
adc
in
sub
sbb
jnp
adc
and
add
mull
cwtl
repz
lcall
xor
test
jae
cmpl
push
add
sarb
es
cmp
in
test
out
xchg
inc
outsl
or
fdivrl
cs
mov
mov
mov
pop
outsl
cmp
or
ja
out
sbb
js
adc
sbb
pop
xor
push
mov
cmp
pop
push
lea
cli
out
and
leave
sub
add
jne
rorl
pop
lods
inc
adc
dec
push
ja
xlat
mov
inc
cmp
loopne
dec
xchg
cmpsl
sub
call
loopne
xlat
insb
loopne
loope
mov
or
mov
cltd
xor
mov
dec
pop
mov
jne
xor
sbb
and
or
js
rorl
fisttpll
out
inc
cmc
nop
sarl
pop
shrl
pop
xor
lods
test
jae
and
lret
and
loopne
addr16
jae
outsl
dec
jb
push
in
adc
xor
in
stos
add
xchg
mov
rolb
cmc
aam
pop
ffree
jg
shl
push
cmp
lahf
inc
inc
cmpsl
xor
add
mov
sub
adc
out
and
cmp
pop
pop
dec
ret
popa
rcrb
test
mov
inc
cwtl
push
fistpl
jecxz
adc
ficoml
dec
xchg
lahf
mov
insl
jns
pop
pop
mov
adcl
cmp
cmp
out
ljmp
into
cwtl
push
cld
mov
add
sbb
jbe
fadd
sub
in
cmp
ja
sbb
sahf
rorl
xor
xchg
pop
push
icebp
aaa
mov
cmpsb
fs
in
testb
in
pop
rolb
pop
int
push
mov
shld
ret
or
fidivs
mulb
icebp
pop
popf
imul
mov
ss
xor
frstor
sbbb
jbe
loopne
xorl
mov
addl
dec
pop
xor
inc
cmp
dec
mov
les
andb
lcall
mov
push
mov
or
stc
scas
pop
repz
push
fisttpll
adc
adc
sub
cmp
mov
ret
add
push
or
shll
add
mov
ret
mov
cmc
shll
sbb
jbe
jns
xor
fisttpll
and
push
jo
sbb
aam
adc
xchg
mov
inc
mov
mov
jmp
mov
nop
cmc
or
jp
imul
dec
push
arpl
pop
add
test
push
xchg
ds
lret
inc
cltd
sahf
ja
rclb
cltd
out
cmp
imul
or
repz
xor
push
and
icebp
xchg
mov
sbb
adc
fildll
sub
test
fcompl
fs
pop
dec
test
pop
pusha
dec
mov
push
mov
out
mov
xchg
scas
inc
sbb
std
fmull
xchg
gs
stos
or
sub
mov
xorb
out
mov
push
push
shll
lret
lahf
imul
jbe
xlat
jnp
stos
lret
sbb
cwtl
lds
popf
mov
push
in
jbe
leave
push
mov
ljmp
jne
aas
iret
mov
mov
dec
jg
cmc
sbb
sub
adc
movsl
sbb
hlt
sarl
ret
cwtl
out
fcoml
pop
jo
lods
pop
jb
push
xlat
inc
movsb
rcrb
sahf
xor
das
out
sub
lcall
dec
inc
add
mov
sub
jns
adc
popf
xlat
add
mov
mov
pop
ljmp
inc
mov
cmp
sub
addl
mov
and
push
jae
lret
leave
cs
sub
out
test
std
add
add
std
ljmp
sub
sub
push
mov
clc
test
dec
ja
hlt
movsb
js
mov
dec
mov
mov
out
add
mov
dec
cmpsl
mov
loope
push
or
jle
lret
leave
pop
inc
mov
mov
push
sarl
es
in
cmp
and
cmp
sahf
xchg
adc
mov
std
mov
cmp
xchg
mov
jbe
lea
cwtl
les
dec
pushf
out
enter
cld
aas
or
xchg
pop
cmpsl
jecxz
subb
aam
mov
dec
loope
jl
jg
sti
lods
push
outsl
and
mov
cmp
in
or
jb
dec
insl
in
inc
jp
and
push
push
cmpsb
mov
lea
sti
testb
loopne
lods
faddl
fdivrl
frstor
ret
repnz
push
ret
loope
pop
loop
push
imul
inc
inc
jne
mov
rcr
daa
lahf
jno
dec
adc
sbb
push
bound
pop
mov
and
dec
cmc
mov
mov
lea
pop
inc
imul
insb
xchg
fcmovbe
push
mov
out
mov
popf
jle
mov
sub
idivb
aaa
lea
mov
arpl
sub
inc
xchg
test
outsl
inc
and
push
adc
mov
jecxz
repnz
cs
inc
imul
out
jp
lock
into
cmp
and
in
add
ret
out
leave
pop
xchg
push
jl
iret
aaa
mov
cwtl
movsb
mov
aam
loop
repz
pop
jae
fmuls
testl
pop
mov
lcall
repnz
and
push
xchg
imul
adc
dec
neg
scas
xchg
pop
out
mov
aam
sub
pop
dec
aas
and
push
sti
out
jo
fimuls
inc
mov
mov
fmuls
cltd
or
jne
adcl
xor
jle
pop
adc
pop
or
lds
fnstsw
lret
xchg
lods
xchg
fstl
or
sub
cmp
ljmpw
push
or
test
xor
mov
fildl
mov
mov
fs
fsubrs
out
popf
jp
jbe
test
xor
fwait
ds
pop
push
inc
test
cmc
inc
cwtl
insb
das
add
mov
sub
fdivs
push
in
out
lahf
popf
shlb
or
dec
mov
js
leave
inc
lret
aad
aad
and
imul
xchg
out
pop
push
in
in
in
cmp
pop
clc
pop
push
mov
inc
xchg
rol
push
lret
adc
adc
in
out
inc
es
pop
pop
xor
inc
das
pop
push
fildll
jae
xchg
rcll
mov
shrb
xlat
sub
lea
les
cmp
xchg
addr16
popa
jno
mov
addr16
ficoml
adc
and
gs
adc
insl
lret
mov
fistps
inc
in
push
subl
xchg
xchg
test
outsb
arpl
xchg
mov
jl
xor
and
data16
out
xor
arpl
adcb
xor
pop
insl
lret
mov
mov
mov
cmp
mov
xchg
jno
mov
fldl
fmul
xlat
das
mov
ror
rcll
popf
test
mov
xor
test
jne
ljmp
cwtl
mov
mov
andb
mov
mov
or
pop
cmp
addr16
in
test
stos
insl
adc
int3
xor
xchg
out
in
push
addr16
subl
int
je
cmp
add
or
sarl
ror
mov
adc
addr16
add
inc
data16
enter
inc
jl
pop
add
pop
dec
or
push
nop
sbb
in
lods
js
je
popf
adc
aaa
sbb
repnz
xchg
or
lods
addr16
pop
cwtl
fbld
hlt
push
mov
or
cwtl
and
add
jp
fwait
out
mov
std
jns
mov
jne
mov
inc
pop
imul
or
adc
sbb
add
lea
test
jg
aam
nop
sbb
fstpt
jae
push
inc
cmp
cld
dec
mov
add
aas
and
fnstcw
lock
lcall
jp
sahf
xor
popa
mov
pop
and
mov
xchg
dec
sbb
push
mov
cmp
scas
flds
dec
sbb
adc
dec
es
out
pop
mov
lea
cld
push
in
inc
push
cmpsb
xchg
or
add
sbb
sbb
jo
fcmovne
test
js
sbb
adc
pop
in
add
clc
cmp
adc
adc
jns
mov
ljmp
inc
mov
stos
call
sub
mov
or
xor
add
and
repz
mov
cmpsb
rclb
adc
inc
clc
mov
and
pop
out
add
xor
stc
xchg
jae
xchg
movb
dec
out
clc
xchg
xchg
mov
adc
sbb
xchg
push
or
in
sti
lds
aaa
jle
in
jo
ds
lods
pop
sub
push
xchg
jno
jg
mov
test
xchg
add
mov
push
or
mov
push
leave
mov
mov
fstpl
mov
or
mov
xchg
sahf
pop
lcall
push
xor
sbb
push
rorb
call
hlt
mov
in
fwait
dec
add
pushf
or
push
cltd
push
movsb
add
xor
push
or
sahf
imul
and
clc
sbb
push
movsl
and
rcl
out
adc
shr
ret
nop
insb
mov
dec
adc
pusha
repnz
imul
adc
stos
or
or
jecxz
add
inc
mov
pop
push
inc
xchg
popa
test
lds
push
mov
mov
jmp
push
js
pop
inc
add
pop
les
mov
pop
lods
cmc
mov
lock
mov
popa
loop
xor
fstps
push
jmp
ljmp
loope
fstps
xlat
sahf
xor
dec
pop
repz
sub
xor
adc
push
and
mov
shrl
sbb
sub
xchg
push
and
cltd
ret
nop
mov
rolb
xchg
lods
loope
lds
xchg
std
add
out
inc
daa
push
xchg
scas
mov
in
cmp
jp
ljmp
pop
add
dec
sbb
or
incl
adc
sub
or
mov
xorl
mov
lods
sbb
xchg
out
pusha
fisttpl
push
out
inc
xchg
add
out
ret
fstps
iret
pinsrw
std
push
hlt
fmull
xor
loopne
push
pop
scas
lcall
stos
lds
movsb
xor
fcoms
and
mov
in
loopne
pusha
xor
loope
xchg
jmp
push
sbb
pop
and
xlat
pop
pop
pop
or
mov
repz
in
sbb
sub
fisubrl
push
cld
shlb
jmp
bound
adc
cmp
fs
xor
out
lock
adc
test
adc
scas
or
dec
sub
adc
fildl
xor
and
jg
fmul
mov
add
push
jb
pop
fs
mov
gs
and
int3
push
and
push
out
nop
dec
pop
jge
mov
mov
mov
popa
adc
fdivl
inc
sub
mov
adc
xchg
mov
push
mov
test
push
mov
into
add
ficoms
sbb
cmp
jge
pop
mov
jle
or
iret
fcomps
pop
pushf
je
sbb
push
mov
clc
mov
sbb
in
add
js
push
inc
wrmsr
hlt
negb
push
cmp
cmp
pop
fs
jmp
scas
ret
jge
into
test
dec
fists
insl
sti
daa
dec
and
pushf
lret
rorl
ja
mov
rcrl
fst
shrl
in
xchg
andl
out
repnz
and
adc
scas
dec
call
iret
ss
push
mov
das
jnp
cmc
push
sbb
sbb
outsl
sub
xchg
mov
addr16
jp
add
insb
jl
nop
loope
icebp
or
hlt
jle
out
js
imul
scas
and
inc
cmp
push
nop
ja
in
mov
mov
push
dec
jmp
in
sahf
aaa
into
and
pushf
es
sub
js
mov
adc
cltd
jl
bound
inc
cmp
aad
xchg
outsb
add
push
inc
lret
adc
adc
in
js
push
fs
clc
fs
push
jp
add
stos
push
das
scas
cmc
popa
or
fnstcw
jno,pn
jne
jp
adc
and
fs
jmp
sbb
repnz
in
movsb
mov
outsb
adc
mov
pop
ret
mov
mov
xchg
jne
cwtl
daa
popa
fisubl
push
mov
xchg
lret
into
es
xlat
scas
pop
jns
dec
jb
fdivrl
jmp
fcmovne
sub
mov
lods
mov
cmp
repz
jns
xchg
sub
push
pop
pop
sbb
xor
cmp
lods
inc
jb
sahf
faddp
sti
popa
out
mov
ljmp
cld
push
push
in
mov
pop
cmp
inc
or
xchg
adc
pop
int3
adc
mov
insb
mov
cs
scas
insb
jno
lcall
mov
dec
inc
aaa
xchg
sar
test
push
inc
push
repz
sub
andl
xor
cltd
cmp
cmc
and
and
clc
iret
int
dec
testl
jbe
cmp
mov
add
pusha
repnz
inc
pushf
xor
es
pop
fadd
xchg
mov
dec
push
or
lahf
in
lods
pop
mov
filds
pop
and
test
lods
in
inc
pop
sbb
mov
out
cmp
aas
mov
jo
push
call
decl
mov
enter
mov
mov
dec
das
call
mov
sub
and
xcrypt-ofb
cmpsl
test
push
push
pop
or
or
std
les
ja
mov
cmp
dec
push
mov
jae
incl
outsl
ret
jp
or
pop
add
and
fcmovne
lret
sub
fsts
or
hlt
pusha
cmp
ret
xorl
or
xor
test
cld
es
xchg
rdpmc
mov
lcall
gs
idiv
fwait
adc
inc
xor
jle
pop
mov
in
cmc
inc
int3
es
xchg
mov
mov
mov
test
pop
ljmp
fwait
es
add
or
mov
pop
repz
std
push
stos
notl
arpl
xor
addb
leave
cmpsb
mov
push
sarb
mov
int3
ds
out
in
jnp
shrb
adc
ficoml
add
bound
movlps
lock
out
je
lret
mov
inc
xor
pop
jmp
xchg
ret
loope
mov
lret
in
lret
add
dec
bound
push
in
pop
sbb
cmpsl
ljmp
mov
sub
popw
pop
stos
inc
pop
dec
or
dec
or
cmpsb
fidivs
stos
dec
xchg
mov
ret
push
sbb
lret
shl
test
push
sar
orb
xchg
rclb
std
adc
push
dec
test
adc
bound
push
pushf
jle
subl
ret
addl
inc
call
ss
cs
mov
pop
sbb
push
xlat
jne
and
dec
sub
loope
mov
addr16
mov
pop
call
mov
aam
mov
lret
mov
xchg
ret
in
and
out
mov
inc
shrl
addl
fwait
jo
xor
mov
jmp
je
add
mov
cmc
fistl
mov
call
test
push
lods
and
test
jle
outsl
movl
insl
cmp
sub
or
jae
ret
jno
pop
adc
stos
movsb
mov
dec
inc
testl
dec
add
test
inc
shrb
mov
out
adc
lea
mov
jp
lahf
pop
test
int3
scas
test
fmull
jg
add
incl
nop
xchg
pop
pop
push
cld
lahf
loopne
aaa
popf
pop
sbb
jecxz
popa
mov
into
out
stc
xor
iret
daa
test
xchg
js
add
jecxz
pop
pusha
imul
das
into
cmpsb
inc
push
js
add
je
aas
mov
cmp
es
sub
pop
and
in
jns
mov
lds
icebp
and
lock
jmp
aad
call
xchg
mov
fldl
addb
mov
imul
xchg
ss
popf
or
cltd
mov
push
lds
imul
pop
lret
xor
int
push
jge
test
sub
movl
std
mov
les
mov
mov
mov
mov
or
rcrl
cltd
mov
jo
dec
xchg
inc
pop
mov
sarb
outsl
dec
leave
or
dec
jae
mov
mov
inc
popl
bound
pushl
sbb
das
rcrb
lahf
fsubrp
lcall
mov
mov
sub
dec
stos
repnz
in
lret
dec
mov
stc
cs
repz
sub
xchg
xor
pushf
inc
into
lahf
pop
lods
aad
jno
add
add
add
sar
test
sub
mov
jle
pop
xor
mov
jg
inc
sbb
dec
loop
imul
add
pop
pop
mov
sub
adc
mov
push
adc
loop
xchg
popa
dec
ljmp
dec
test
mov
out
bound
lret
inc
fcompl
xchg
gs
ljmp
lret
push
mov
pushf
int3
pushf
ret
fs
sub
push
cltd
add
inc
bound
xchg
cld
adc
test
and
add
cmp
fnstsw
bound
or
mov
jb
mov
push
icebp
mov
je
xor
lds
rcrl
adc
fmuls
repz
push
aas
lahf
cmp
pop
xor
lods
bound
subb
insl
add
jl
lods
push
add
ja
push
ds
repnz
pop
adc
mov
test
adc
inc
pop
ficoml
xchg
or
sti
jg
loopne
adc
push
mov
push
pop
xchg
daa
clc
dec
mov
stc
adc
sbb
icebp
xchg
insl
sarb
in
gs
cmpsb
fs
ja
shrb
or
pop
out
aad
and
push
loop
lods
and
dec
xchg
loop
sub
pop
shlb
xor
imul
mov
add
test
mul
lods
inc
xor
js
and
mov
adc
arpl
jae
popf
jl
cli
xchg
test
adc
inc
sub
stc
call
jae
aaa
pop
cltd
pop
dec
nop
in
stos
std
dec
cmp
inc
add
inc
jg
jge
pop
mov
and
push
push
pusha
outsl
xchg
jno
xchg
pusha
inc
aam
xchg
or
call
loop
add
shll
sarl
aaa
xchg
mov
push
jge
mov
out
pop
shlb
cmp
je
xchg
sti
mov
ja
mov
dec
add
or
jg
repz
mov
jg
dec
scas
out
cmp
add
pop
rcl
push
test
stos
inc
mov
inc
lods
loope
sub
xchg
jg
shll
cmp
sub
ss
test
mov
push
sbb
inc
pop
iret
loope
jge
adcl
int
pop
rcll
scas
pushf
cmpsb
add
dec
loopne
icebp
ds
and
out
test
push
mov
pusha
add
out
mov
sbb
sbb
scas
add
fs
add
cld
sub
and
dec
sbb
mov
subb
dec
sub
pop
push
insb
pop
aam
pop
std
pusha
mov
mov
and
pop
subb
pop
dec
mov
and
int3
pop
inc
push
mov
stc
leave
push
or
push
aam
je
sbb
inc
cmp
push
xchg
pop
lret
adc
addr16
sti
out
cs
fmull
movsl
rcrb
xchg
cmpb
inc
out
int3
mov
subl
xor
sub
sub
pop
pop
sahf
ss
cli
std
mov
jnp
mov
mov
cmpsl
mov
rorb
test
outsl
iret
mov
adcl
out
inc
dec
mov
addr16
sub
jecxz
imul
loopne
adc
jne
rcll
test
add
mov
mov
repz
jg
xchg
inc
jnp
in
cwtl
mov
bound
cltd
enter
int3
dec
adc
inc
lcall
sub
mov
inc
fisubrs
and
sub
adc
pop
addr16
mov
jno
mov
hlt
pop
subb
mov
mov
out
daa
adc
or
outsl
mov
inc
sub
sti
push
sbb
aam
and
xchg
jne
jae
add
jg
cltd
inc
pop
xchg
insl
push
test
mov
mov
jb
scas
call
mov
jl
jp
outsl
and
xchg
imul
enter
out
sbb
dec
nop
mov
mov
xchg
int3
xchg
jge
pop
test
jge
jmp
sti
dec
push
push
add
xchg
mov
leave
adc
repz
hlt
xchg
adc
pop
loopne
dec
out
cmp
mov
add
lea
and
lcall
sahf
outsb
test
shl
add
negb
jecxz
cmpsl
pusha
add
inc
shrl
xchg
outsb
push
pop
or
mov
mov
mov
call
mov
sub
mov
lods
mov
xlat
sub
imul
movsb
mov
mov
mov
pop
popf
mov
out
xchg
xor
das
insb
daa
popf
out
xchg
inc
lock
ds
sti
movsl
cli
mov
push
mov
xchg
xor
cmp
inc
xor
dec
sub
dec
jle
ret
and
sbb
jle
fistl
decl
or
fwait
adc
repnz
jecxz
mov
je
jl
rcrb
test
mov
push
fsubl
mov
jne
insb
lds
int
lods
leave
pop
mov
push
mov
fs
cmpsb
sti
ljmp
movsl
pusha
lds
inc
push
cmp
inc
lret
fisttpl
pushf
xchg
shll
pop
outsb
push
popa
clc
in
inc
sbb
in
sub
fsts
jp
pop
or
lret
cmp
lahf
mov
mov
std
lea
leave
dec
dec
mov
push
and
hlt
xor
dec
mov
lea
ljmp
inc
xchg
add
xor
sbb
arpl
scas
cmp
lods
mov
insl
pop
cmp
lret
jb
dec
popf
aaa
jp
lahf
push
test
lcall
jmp
jp
mov
arpl
jns
loopne
xor
loopne
repnz
lcall
stc
mov
lcall
aam
clc
push
cmp
xchg
pop
lods
push
jne
mov
cs
mov
decb
mov
or
cld
push
jge
arpl
dec
xchg
outsl
sub
call
cmp
push
mov
outsl
imulb
in
idiv
inc
int
jl
pushf
fnstcw
divb
stc
fiaddl
and
cmp
xchg
adc
pop
stos
rcrb
ret
cmpsl
pop
and
add
jecxz
lcall
lds
pop
sbb
sub
jg
xor
push
dec
scas
jle
jbe
mulb
or
xlat
sub
stc
push
fisttpll
or
repnz
loopne
pop
lods
pop
cmp
mov
lret
adc
gs
loopne
ficompl
mov
mov
dec
mov
fmull
sar
sbb
bound
shlb
insl
push
mov
popf
sbb
mov
xchg
gs
push
mov
sub
mov
inc
mov
js
cld
daa
add
cld
push
bound
cwtl
mov
movsl
or
dec
hlt
sbb
push
sub
aas
adc
cmp
fldt
fisttps
arpl
adc
mov
cmpsb
push
repnz
arpl
daa
jl
les
fistl
mov
cmp
xorb
repz
and
and
adc
fsubrp
push
imul
into
sbb
push
jb
fcompl
dec
add
jno
or
adcb
mov
sarb
mov
pop
subl
scas
call
das
outsb
mov
pop
dec
push
fucom
das
test
std
sub
negl
sahf
nop
sbb
push
sub
shll
sub
xlat
cltd
mov
stc
pushf
add
loopne
jb
xchg
and
xchg
fsubr
cmp
insb
jbe
push
push
data16
mov
mov
or
jns
insl
mov
fstl
sub
mov
icebp
in
int3
fwait
sbb
mov
int
movsl
dec
push
stc
int3
mov
mov
fwait
mov
ljmp
popf
loop
dec
lret
mov
xor
loop
xchg
sub
mov
mov
pushf
int
pop
aad
popf
jl
push
fisubs
out
mov
pop
lret
inc
pop
xchg
or
out
test
imul
insl
mov
jmp
jae
ljmp
insb
mov
shlb
ffree
inc
dec
jno
jno
push
data16
dec
or
test
jp
cmp
pop
lret
cmp
or
dec
shll
or
popa
out
lret
dec
jecxz
pop
sahf
pop
cmp
cmp
pop
xor
or
mov
call
aad
xchg
ja
cmp
aam
push
repnz
inc
and
arpl
popf
popa
cmpb
cwtl
shlb
in
mov
sub
repz
insl
fwait
push
adc
xchg
fldenv
mov
ret
sbb
and
xchg
ljmp
test
or
aad
mov
cs
jbe
mov
sub
loope
mov
jmp
cmp
or
pop
jg
or
movsl
js
xchg
or
lcall
jnp
cltd
cli
mov
loope
fcompl
in
addb
push
mov
das
movsb
gs
testl
into
inc
add
xor
test
mov
in
push
sub
mov
xor
mov
in
dec
mov
loopne
fwait
sub
test
leave
cmp
xor
dec
xchg
or
fidivs
movsb
es
divl
and
bound
fs
push
rorb
jb
subb
pop
adc
in
jmp
lock
pop
dec
shll
lcall
mov
sub
jnp
cli
add
or
outsb
cmp
dec
sbb
dec
dec
dec
cmp
or
push
cmpsb
xchg
hlt
xor
mov
jae
aad
imul
dec
pusha
pop
cli
outsb
shrl
shr
jmp
sbb
outsl
out
add
dec
jnp
popl
shll
loope
fwait
cltd
push
cmpb
stos
std
xor
pop
dec
mov
mov
jns
push
sbb
nop
movzwl
lds
xchg
push
js
xor
mov
repnz
fcom
sbb
or
je
or
pop
sub
add
test
lahf
push
mov
je
adc
scas
mov
and
outsl
push
roll
iret
mov
sub
in
mov
enter
in
sbb
bnd
jp
test
out
dec
xor
jl
nop
xor
xchg
cmpl
xor
jl
push
cmp
and
fs
sbb
rorl
out
in
push
xchg
in
push
lcall
arpl
adc
shl
push
insl
jl
jmp
xlat
pop
mov
add
orb
loop
mov
fwait
adc
and
mov
mov
jl
inc
sbbb
aam
xor
testb
or
inc
inc
xchg
lea
and
mov
bound
test
cmp
inc
fwait
add
out
jmp
and
lods
ja
test
inc
sub
dec
test
cmc
mov
jo
leave
push
shrb
inc
popaw
in
loopne
stc
cs
push
lea
sti
lahf
sti
fdivr
dec
xlat
add
jb
addr16
xchg
repnz
cwtl
sbb
mov
out
incl
cwtl
pop
sbb
mov
outsb
cmp
adc
pop
or
fs
sahf
cli
xchg
test
xchg
sbb
test
mov
cld
xchg
sbb
xchg
mov
cli
add
sub
sub
scas
fidivrs
scas
stc
xchg
mov
xchg
pusha
int3
ret
aaa
scas
jp
cmp
dec
insl
shll
xlat
inc
fldl
mov
inc
dec
fbld
jmp
pop
pop
inc
mov
imul
movsl
scas
lret
push
sub
mov
call
dec
call
and
int3
dec
test
in
arpl
or
fisubrl
push
push
lcall
inc
or
add
out
lods
fsubrs
nop
jge
pushf
jecxz
loopne
sahf
inc
or
and
stos
scas
xor
test
lahf
bound
lret
rorb
lcall
movsb
inc
aad
mov
mov
cmp
add
jmp
mov
add
loope
iret
jbe
push
repz
lock
shrb
pushw
mov
dec
imulb
mov
xlat
cmpl
loope
xchg
jo
mov
daa
test
jl
mov
fs
aaa
lret
sarb
mov
cmp
iret
insb
rcrl
imul
mov
je
out
adcb
mov
mov
sbb
mov
test
test
mov
push
loopne
and
and
daa
mov
or
movb
sbb
fwait
shll
lea
mov
aad
push
fcmovu
xor
mov
inc
fadd
pusha
leave
xchg
adc
clc
jle
mov
pop
add
mov
cmp
lahf
out
adc
pop
cmp
shr
push
dec
imul
pop
xlat
jnp
insb
in
je
mov
cmp
daa
xor
icebp
rcll
movsb
lock
sub
outsl
in
les
dec
sub
js
mov
imul
sub
in
mov
adc
sub
dec
arpl
add
xchg
xchg
lcall
pop
cmp
call
addl
loop
cmp
sub
mov
adc
pop
in
iret
sbb
aaa
das
outsb
aam
mov
mov
aam
loopne
js
stos
cli
mov
rclb
repz
sub
aad
mov
pop
sub
dec
or
pusha
adc
aam
xchg
ljmp
sbbb
lcall
sbb
lods
or
pushf
lods
jns
or
pusha
outsl
lods
leave
dec
cmp
insl
test
add
aam
adc
adc
or
je
outsl
popf
mov
in
mov
dec
lcall
mov
jl
mov
out
xchg
mov
mov
adc
jg
sub
lcall
pop
cld
jmp
adc
in
xchg
push
pop
repz
not
out
stos
pop
je
fsubrs
jnp
int
mov
ja
pop
xchg
adc
push
jae
xchg
sarb
xor
iret
xchg
popl
shlb
xchg
dec
stos
shrb
mov
aad
pop
xlat
mov
enter
rorl
jge
loope
xchg
gs
mov
mov
lahf
outsl
popa
dec
jmp
adc
lcall
mov
fwait
pop
xor
insb
cmp
sbb
jno
ds
push
mov
add
cs
push
cld
lret
sub
xor
mov
sbb
pop
fs
add
ret
sbb
mov
arpl
cli
loope
fnstsw
adcl
sub
filds
sub
pop
xor
xchg
dec
das
add
fwait
cmp
and
and
pop
cli
test
in
pop
shll
inc
fistpll
push
sbb
in
xor
lds
push
insb
inc
mov
push
fists
cli
gs
xor
mov
fistpl
jnp
outsb
adc
mov
int
push
fs
pop
inc
xor
add
pop
fwait
jl
daa
push
pop
addl
or
lahf
push
fs
test
hlt
push
mov
dec
jl
xchg
test
rclb
hlt
cmc
or
das
dec
cmp
pop
jo
pop
icebp
cwtl
dec
sbb
cli
jo
adc
andb
mov
or
push
add
adc
inc
cmpsb
mov
sub
mov
rcr
and
hlt
out
dec
imulb
cmp
repnz
dec
sti
pusha
pop
stc
mov
aas
ss
sbb
inc
lcall
aas
inc
fcoms
add
icebp
ret
insb
in
mov
arpl
dec
mov
push
push
out
fistpl
pushf
push
test
xchg
sub
and
xchg
out
cmp
xchg
adc
pop
addl
ret
xlat
inc
lds
loop
adc
sub
nop
fs
test
push
sbbl
shll
mov
outsb
jns
test
movq
test
test
stos
imul
dec
testl
xor
pop
outsl
push
in
sbb
pop
inc
mov
adc
inc
xor
jp
inc
insl
push
and
imul
add
imul
out
pusha
xor
adc
dec
or
cmpsl
cmp
push
mov
mov
cmpsl
push
pushl
jno
xchg
shlb
mov
or
shlb
outsl
int3
icebp
flds
ljmp
fcmovnbe
insb
mov
ljmp
cmp
shl
loope
andl
jle
mov
push
pusha
mov
sub
mov
ficoms
clc
sub
cli
cmc
mov
insb
leave
movsb
push
cmp
jae
mov
push
jmp
insb
sub
mov
dec
push
notl
and
cltd
outsl
push
rclb
inc
leave
mov
popf
lods
sub
addr16
rcr
add
push
adc
push
call
push
sub
and
mov
ja
mulb
and
and
fildll
cmp
jle
adc
xchg
cld
sbb
pusha
add
fdivrl
jmp
xchg
out
rcrl
jmp
pop
jmp
add
fstl
mov
fstl
lret
xchg
mov
cmp
hlt
jae
pushf
stos
in
push
mov
jb
mov
dec
pushf
cmp
pushf
lret
mov
arpl
dec
dec
adc
pop
lea
nop
out
daa
popa
stos
ret
imul
dec
sti
xor
and
pop
cmp
sbb
dec
out
stos
or
or
sub
cmpsl
mov
sub
inc
jb
popf
repnz
mov
cmp
pop
fcoml
out
in
xchg
xchg
cmpsl
mov
pop
scas
push
es
out
and
bound
and
cmpl
in
dec
pop
ljmp
fistps
je
dec
iret
and
std
mov
inc
repnz
test
sub
sbb
pop
dec
jl
pop
jnp
or
mov
xorb
adc
and
mov
aaa
ret
xchg
out
and
sbb
push
lods
std
cmp
test
loop
nop
push
push
jecxz
dec
aad
xor
pop
scas
cmp
je
pop
call
lock
inc
stc
lcall
and
das
je
jne
xor
repz
in
mov
sbb
ret
mov
add
add
adc
fdivs
mov
lcall
add
xchg
mov
imul
pop
scas
mov
cli
fsts
mov
in
or
out
hlt
fistl
pop
mov
rcrb
push
push
mov
gs
xlat
notl
daa
in
into
dec
das
hlt
mov
dec
pusha
sbb
push
mov
adc
aas
test
or
aam
outsb
je
pop
js
cmp
into
pop
or
bound
iret
or
sbb
popf
jo
shr
je
dec
in
push
pop
or
ucomiss
inc
sub
les
xor
jno
pop
sbb
repnz
aam
jb
scas
jns
out
orl
enter
addr16
insl
js
sbb
sbb
repnz
inc
stc
lcall
pop
xchg
or
js
into
add
int3
lret
mov
mov
mov
add
push
xor
pop
mov
daa
sti
pop
daa
icebp
sub
arpl
cld
xchg
imul
out
pop
sbb
inc
fsts
or
push
mov
ja
imul
std
cmp
ret
cmpb
lock
testl
pop
test
cmp
adc
inc
addl
push
bound
call
adc
les
dec
cmp
pop
push
or
repnz
in
divl
mov
fisubrl
int3
mov
pop
aaa
push
xchg
aad
enter
aam
inc
xor
add
mov
push
fs
cmp
sub
pop
add
sbb
and
dec
xchg
lods
xchg
cmp
in
ljmp
stos
out
je
sub
stos
lcall
push
cmpsb
xchg
std
sbb
and
cmp
leave
sub
fs
jmp
adc
xor
scas
jle
fdivrs
rorb
sbb
jbe
gs
or
punpckhdq
iret
mov
ds
fdivr
xlat
stos
repz
jecxz
dec
xor
push
xchg
call
out
int
inc
rorb
data16
movsl
xchg
xor
fidivs
fwait
mov
pop
sub
jecxz
ficoms
mov
mov
pop
xor
or
lret
pop
test
pop
inc
push
mov
sti
dec
and
test
pop
or
xchg
mov
icebp
es
jne
shlb
ficompl
das
insb
call
shlb
cld
out
adcb
xor
xchg
aas
std
popa
int
pop
xor
sbb
mov
icebp
jge
push
mov
adc
mov
pop
aas
mov
pop
cltd
jg
sub
std
pop
adc
sub
dec
mov
addr16
mov
xchg
mov
inc
add
inc
ficomps
lcall
sahf
xchg
push
xor
xchg
jo
and
push
add
daa
push
sub
into
loopne
add
pop
pop
or
or
xchg
dec
pop
sti
insb
or
addb
mov
mov
push
jg
js
mov
mov
add
gs
lea
and
rcrb
or
sarb
test
mov
pushf
adc
xchg
xorl
stos
adc
push
pop
pop
aad
mov
icebp
dec
add
dec
arpl
mov
adc
push
or
ds
ret
and
je
out
push
leave
mov
jae
xchg
jns
xor
push
dec
inc
into
imul
pop
repz
pminub
mov
lcall
std
imul
mov
push
cltd
sub
xchg
out
push
lret
out
daa
add
xchg
fdivrs
mov
mov
xor
ss
push
in
push
in
mov
inc
loopne
in
test
or
enter
mull
sbb
jmp
jo
fucomi
jecxz
jns
leave
cmp
or
mov
mov
sbb
and
call
outsb
push
test
les
xor
addr16
in
push
test
pop
lret
and
insl
jp
ds
xchg
aam
les
fs
sbb
cld
scas
inc
adc
ss
stos
aaa
inc
cmp
push
cld
rcrb
cmp
divl
and
stc
pushf
add
inc
sub
rorl
mov
xor
cmp
pop
xor
cs
push
cmc
mov
and
push
sbbl
pop
sbb
mov
ja
xchg
ss
jb
int3
aaa
das
mov
int
push
bound
inc
mov
lods
lret
inc
lcall
dec
push
mov
rorl
cmp
cwtl
sub
fistpl
and
js
ljmp
decl
xor
add
pop
mov
xchg
out
cmpsb
add
inc
pop
lock
cs
pop
into
xchg
push
xchg
movsb
lcall
ret
inc
out
rolb
call
outsb
bound
or
pop
dec
pop
push
mov
and
lret
push
xor
cmp
arpl
mov
add
enter
pop
in
fwait
jbe
fldl
pop
cmp
jp
xchg
add
jb
mov
cmp
mov
jge
pop
rep
movsl
pop
icebp
leave
incl
in
lret
test
lret
xor
adc
test
and
xchg
imul
inc
imul
or
enter
addr16
fisubl
adc
mov
xchg
hlt
lcall
jmp
roll
mov
and
mov
dec
jae
dec
adc
cld
push
jno
imulb
add
sub
fldt
cs
inc
inc
pop
jns
pusha
add
and
movsb
jle
int
add
mov
mov
pop
loopne
add
push
push
ds
and
cld
xor
adcl
xchg
xchg
jne
and
push
jo
stc
pop
and
add
push
sbb
and
cmpsl
cmp
xchg
shrb
jmp
mov
mov
js
and
test
lahf
out
jecxz
mov
add
and
push
fimuls
in
out
cltd
cmc
inc
iret
cmpsl
cmp
push
repnz
adc
rorl
call
push
loope
dec
mov
adc
lahf
ret
dec
jnp
mov
dec
sbb
inc
outsb
pop
pop
push
mov
cltd
mov
xchg
cmc
xlat
jmp
ret
out
in
xor
sbb
fsts
push
push
hlt
and
repz
repz
jns
dec
mov
mov
xchg
stos
out
push
mov
fldpi
je
cld
imul
int3
pop
fdivl
pop
add
sti
fwait
sub
mov
and
mov
test
lods
sahf
push
stc
in
jbe
daa
jp
push
jno
or
ds
push
pushf
call
pop
dec
push
inc
fcomps
adc
sub
cs
sbb
into
sbb
cmc
push
jns
rcr
push
ret
pop
dec
xchg
repz
or
push
mov
adc
enter
insb
cmc
push
add
push
inc
ror
push
inc
sbb
mov
inc
insl
mov
mov
adc
inc
int3
jmp
xchg
xor
or
dec
push
inc
scas
rcr
jmp
add
andl
jns
or
cld
mov
xor
stos
pop
lea
inc
pop
xchg
inc
addr16
sbb
imul
and
cmp
add
cmpsb
add
xchg
mov
mov
cld
and
jnp
stc
sbb
addr16
cmpsb
fwait
adc
clc
lea
jl
daa
and
shlb
dec
add
inc
xlat
inc
jns
test
push
popa
icebp
and
sbb
call
sbb
fwait
pop
jecxz
mov
mov
dec
nop
mov
cltd
test
stc
call
std
lods
dec
repz
sub
data16
lret
cmp
std
lret
test
jecxz
je
lock
pop
and
or
pushf
sbbl
and
adc
pop
stos
leave
and
pop
ja
in
mov
xor
dec
dec
test
jnp
das
stc
stc
dec
fcmovnu
mov
xchg
sti
mov
aaa
xchg
je
mov
cmpsb
xchg
out
aaa
loop
push
fdivp
jne
aaa
add
sbb
out
bound
daa
jbe
and
push
in
lea
aad
xchg
cmpsb
in
cs
shrl
push
jns
int3
mov
xchg
push
aaa
sub
pop
xor
sbb
pop
ss
movsw
jne
in
cmp
xor
mov
jge
stos
fildll
mov
add
fwait
xchg
inc
clc
sub
inc
jmp
subl
bound
mov
pop
insb
imul
dec
je
or
std
xchg
or
add
insl
movsl
iret
pop
sbb
movsl
fiadds
sahf
js
dec
lret
add
cmp
jmp
mov
cli
mov
pop
add
add
add
xor
mov
mov
ljmp
inc
mov
scas
xor
aam
adc
lcall
je
mov
shrl
push
jecxz
dec
cmc
mov
mov
fptan
cmp
ja
jns
jle
push
xorb
add
lds
xchg
sbb
pop
outsl
out
xor
test
or
sub
fisubl
sbb
mov
mov
jmp
hlt
inc
push
cmc
faddl
in
je
aad
jo
gs
cmp
adc
in
cltd
jne
sbb
bnd
pop
ret
mov
push
mov
mov
push
jns
pop
xor
lods
mov
fsubl
xchg
xchg
xchg
sbb
fst
out
mov
mov
out
xorb
insb
push
ret
xchg
jge
outsb
jne
gs
push
push
aam
mov
int3
xor
addr16
add
pop
xchg
cmp
leave
jne
ret
pop
pushf
out
shll
adc
mov
dec
in
dec
and
mov
in
lret
fsub
inc
out
js
dec
jno
movsl
or
sub
fidivs
mov
iret
pop
push
repnz
dec
and
rcrb
push
scas
int3
out
mov
mov
xchg
out
out
test
pop
xor
add
or
cld
es
repnz
xor
call
jl
addr16
xchg
cwtl
push
mov
lcall
mov
cmp
push
and
xor
fcompl
push
sbb
xchg
or
sahf
aaa
sarl
add
arpl
jbe
sub
mov
cs
test
cld
jo
and
pop
in
test
or
mov
ret
mov
pop
xchg
movsb
jb
jae
lret
sbb
inc
cmp
pop
push
and
dec
lds
out
scas
pushf
push
movsb
and
push
test
iret
out
dec
push
pop
mov
mov
xlat
mov
in
scas
shlb
inc
adc
inc
cmp
addr16
lods
test
std
dec
lods
jbe
lcall
ja
jge
gs
clc
js
lods
shlb
xor
xchg
orl
xlat
adc
and
adc
xlat
mov
fs
jmp
cmp
cwtl
das
shlb
popa
insl
aad
punpckhdq
lds
in
bnd
adc
rcl
adc
pop
imul
faddl
push
in
mov
mov
lcall
dec
push
scas
aas
or
test
iret
dec
lods
inc
lds
insb
scas
adc
lock
adc
dec
xchg
out
lods
loop
mov
and
std
sbb
adc
pusha
aaa
pushf
and
das
xor
xchg
ret
test
xor
orb
inc
outsl
ljmp
and
push
xor
dec
sbb
mov
mov
les
in
test
fwait
insl
push
sub
sub
mov
cmp
jb
out
jp
scas
mov
pop
inc
test
outsb
cmp
pop
pop
insl
mov
sub
stc
popa
in
out
jbe
in
loopne
sbb
jl
and
test
adc
jo
mov
sbb
dec
es
movsl
and
outsl
leave
mov
lds
lcall
sub
sub
inc
inc
sahf
ja
push
sub
jp
push
es
out
movsb
push
int
or
rclb
xchg
loop
jle
dec
push
popa
sub
fldenv
pop
mov
inc
je
xor
repnz
inc
sub
inc
xlat
inc
out
pop
cmpsl
ja
icebp
imul
std
mov
mov
not
in
ret
mov
push
fcompl
or
push
sub
sbb
popa
fdivrl
or
daa
and
ja
dec
andps
dec
jb
aam
scas
iret
pop
imul
clc
inc
mov
jl
das
pop
js
jp
cmpsl
jecxz
clc
stc
lret
add
mov
push
cmp
add
xorl
cmpsl
insb
lcall
aam
imul
mov
lahf
dec
mov
data16
pop
inc
ljmp
mov
add
fs
dec
xchg
scas
pushf
call
jmp
stos
pop
int
leave
push
lea
test
push
pop
std
dec
and
mov
or
jecxz
jnp
jecxz
sbb
jle
out
movsl
adc
adc
pop
lahf
cli
jno
subb
rorl
pop
cmp
test
mov
test
xchg
add
mov
cmpsb
adc
sahf
call
jne
mov
in
gs
inc
cmpsl
aas
orb
pop
dec
int
pop
jbe
adc
cmp
clc
xor
xor
push
or
int3
sahf
and
flds
test
cmp
jecxz
dec
leave
js
xchg
fmuls
mov
lret
cmc
sahf
loopne
add
mov
int
xchg
add
mov
movsb
lods
cmpsb
shlb
and
push
lret
ja
insl
enter
jle
mov
jo
mov
xchg
hlt
sarl
adc
fwait
adc
pusha
insl
jns
inc
ret
jne
push
push
jge
mov
push
cltd
mov
out
fcomps
mov
add
into
push
fs
mov
inc
daa
or
jge
push
xor
xchg
push
xlat
xchg
mov
pop
push
xor
out
das
out
xchg
cmc
dec
popa
in
orb
lret
xchg
jne
cmpsb
mov
fisubl
stos
and
or
mov
leave
mov
jne
lret
sbb
push
arpl
insb
and
aas
mov
ja
into
subb
or
pop
cltd
test
cmp
push
nop
insb
mov
or
xchg
xchg
or
daa
lahf
dec
pushf
mov
ss
xor
test
mov
jae
fistl
fwait
push
outsl
mul
repz
ret
pop
push
push
jle
cli
jo
imul
inc
outsb
shll
js
cmp
loop
stos
popf
test
adcl
stc
and
ss
mov
xchg
inc
mov
push
je
mov
and
lea
push
mov
jae
int3
test
out
aad
cli
cmc
xchg
lcall
inc
jle
into
outsb
cmp
data16
insl
test
fstp
inc
ret
dec
push
mov
jmp
nop
rolb
mov
xchg
clc
pop
push
sarb
adc
stc
and
je
xor
jb
dec
cs
sub
daa
jecxz
pop
xchg
les
mov
mov
jo
lea
mov
leave
lret
cmp
xor
sub
cmp
call
and
lds
mov
loope
lock
xor
insl
dec
icebp
or
and
mov
idivb
dec
pop
xchg
mov
cmp
and
sub
sbb
hlt
stc
jmp
test
arpl
insl
lock
cmp
mov
scas
and
das
sub
mov
or
pop
or
xor
fdivr
sub
or
pusha
ja
pop
out
idiv
cmpsl
fisttpll
in
pop
jb
cmp
adc
daa
xchg
dec
and
add
into
test
cmp
fstpl
in
je
jl
call
pop
sbb
dec
loop
and
sbb
cmp
imul
mov
shlb
dec
andl
xor
aad
dec
xor
iret
inc
into
cmp
into
insl
icebp
mov
dec
and
in
mov
out
testb
daa
add
dec
shl
xor
test
int
xchg
pop
cld
add
push
cmpsb
jg
mov
notb
into
std
popa
add
dec
fildl
mov
mov
pop
iret
xchg
lret
adc
hlt
cmp
rorl
enter
jno
and
sbbb
fdivp
in
lret
and
pop
lods
and
stos
fildl
sbb
imull
push
out
mov
mov
jecxz
loop
std
mov
sbb
add
aad
push
sbb
adc
int3
hlt
aas
adc
mov
jnp
popf
cmp
dec
data16
les
sub
cmp
cmp
pop
movsb
es
das
lods
mov
neg
jg
in
mov
and
jmp
dec
mov
mov
xor
push
sbb
fs
inc
dec
dec
pop
aad
sahf
inc
int3
mov
mov
stos
mov
xlat
mov
cltd
jl
addr16
cltd
jae
push
insl
std
cmpsl
sbb
jo
insl
pop
test
fldt
cmp
or
adc
inc
mov
je
scas
adc
data16
and
mov
jp
or
mov
lret
sub
mov
mov
add
inc
fidivrl
dec
lds
fildl
cmp
stos
cs
jge
fnstenv
cmp
jl
into
xor
cmp
out
inc
xorb
jl
test
int3
mov
sub
mov
jns
fildl
dec
rorl
scas
push
jg
sub
dec
pop
xor
daa
jns
sahf
aas
clc
cwtl
push
aas
add
mov
jnp
sbb
into
das
or
dec
add
mov
cmp
adc
dec
mov
xchg
dec
sub
cmpsl
push
mov
mov
sbb
inc
xchg
pop
pop
in
mov
mov
xchg
mov
loopne
andb
xlat
iret
xlat
fisubs
and
icebp
incl
popa
fwait
dec
lret
jo
or
add
mov
and
cwtl
mov
mov
outsb
push
sti
and
out
jmp
add
in
xchg
stos
addr16
jns
fisttpll
push
outsb
pop
pop
jnp
loop
in
adc
inc
xchg
sbb
sub
es
pop
xlat
jg
push
aad
insl
mov
mov
push
pusha
movsb
xchg
pop
jg
test
lock
cmp
inc
mov
cli
fisttps
std
aaa
xor
jg
in
subb
jmp
cmp
clc
mov
dec
sbb
in
imul
popa
and
pusha
pop
mov
xor
sti
mov
add
jno
mov
mov
dec
insb
adc
aaa
cmp
out
lods
inc
pop
cmp
sub
or
cmp
and
push
pop
subb
inc
dec
test
ss
fs
jle
sbb
mov
mov
out
cmc
xchg
loop
add
andb
lods
shll
ret
sbb
ss
push
jno
hlt
repnz
sub
popf
sarl
repz
add
outsl
roll
stos
lods
inc
sub
es
out
mov
mov
push
pop
dec
test
xchg
lret
fs
xor
cmp
imul
andb
push
sub
cmp
xor
fneni(8087
or
sbb
mov
das
repz
repnz
mov
stos
jge
aaa
cs
lret
xchg
pop
pushf
push
sti
cltd
dec
rolb
add
das
inc
push
cmp
push
test
movsb
lock
or
jns
ss
lds
inc
pop
cli
int3
mov
mov
in
in
out
pop
mov
push
xchg
mov
cmp
pop
test
mov
out
movsb
pop
pop
mov
sub
and
mov
push
fidivs
adcb
fisubrl
and
xchg
add
push
loope
push
outsb
repz
jmp
testl
test
mov
fisttpll
jno
jl
lret
xor
push
rclb
jmp
add
insb
sbb
rclb
stos
mov
sbb
xchg
mov
dec
xchg
fnstsw
mov
lcall
outsl
lods
push
xchg
scas
fdivrl
in
pop
or
sbb
mov
shlb
ss
es
jo
in
xchg
enter
mull
adc
push
pop
mov
int3
sub
sbb
inc
xchg
out
negl
stos
lods
mov
push
push
adc
std
add
and
pop
lods
add
adc
jle
decb
jecxz
scas
outsb
pop
sub
incb
xor
lea
in
clc
mov
jae
dec
lret
lods
enter
mov
iret
mov
cld
push
sbb
imul
in
call
mov
pop
roll
push
jmp
out
pop
mov
stos
mov
inc
daa
cmp
test
sub
stos
add
push
les
adc
mov
cmp
aam
mov
push
jns
imull
mov
ret
sti
adc
cwtl
jae
iret
mov
mov
ds
sbb
stc
adc
sub
xor
std
aas
cmpsl
push
add
lock
or
lea
movsl
pop
aad
clc
dec
stos
push
xchg
shll
dec
push
xor
adc
jne
ficompl
sub
xchg
mov
xchg
mov
int3
pop
xor
xor
cmpsb
xchg
add
jne
adc
fs
adc
lods
push
mov
inc
pop
xchg
sbb
sti
sbb
addr16
lea
js
loopne
jecxz
sbb
repnz
pop
inc
imul
aaa
ljmp
pop
lcall
je
sbb
jl
dec
cmc
pop
pop
jle
adcb
cli
jns
das
xchg
adc
cmp
nop
mov
in
out
dec
leave
fwait
int
inc
jecxz
mov
jne
lock
mov
sub
and
jp
or
pop
mov
and
int
test
rcrl
in
mov
push
jge
cmp
lret
xchg
lock
stos
shlb
aam
sbb
dec
aam
or
pushf
xchg
ljmp
add
js
cmp
mov
xchg
jmp
cmp
dec
inc
popa
les
inc
push
dec
jnp
dec
xor
or
xchg
sahf
dec
dec
jp
fldenv
addl
iret
int
or
mov
jp
or
aad
scas
mov
push
fidivrs
dec
and
sbb
mov
imul
mov
cld
and
insb
test
pop
push
jmp
jle
orb
popf
iret
addr16
pop
stc
sub
or
xchg
pop
iret
dec
ret
jecxz
inc
and
xlat
in
adc
in
push
leave
cmpsb
cmp
inc
ja
dec
dec
jnp
dec
pop
mov
adc
lds
lods
inc
stc
dec
aaa
and
push
jno
inc
lret
inc
addb
xchg
mov
test
mov
cmp
jg
test
xor
andl
cmp
or
pop
and
mov
jb
jecxz
inc
lret
lret
inc
inc
add
lods
mov
sbb
rcll
xor
in
dec
push
out
lods
cmp
inc
ds
lahf
jp
lock
xor
mov
jmp
pop
out
jb
jmp
ret
loop
scas
push
leave
cwtl
mov
gs
mov
push
adc
cmpsl
add
push
mov
shlb
ljmp
push
push
and
stos
out
rolb
jg
fst
adc
sub
inc
mov
leave
adc
stos
clc
cwtl
mov
inc
push
and
sbb
shrb
les
and
mov
pop
popf
sahf
lds
nop
push
inc
add
insl
iret
sub
add
mov
pop
fdivrl
dec
mov
stos
and
cmp
loope
push
push
adc
aas
sub
xorb
mov
in
sub
test
shrb
repnz
xor
stos
push
adc
cmp
adc
cmpsb
shr
out
stos
jmp
fmulp
ljmp
mov
pop
add
cmp
les
out
sbb
clc
and
imul
es
mov
jns
sub
movsb
fnstenv
flds
mov
outsb
aaa
adc
stos
pop
xchg
dec
jmp
lahf
sbb
sbb
sahf
mov
mov
push
or
imull
pop
jp
stos
inc
and
xchg
mov
es
cmp
test
sbb
das
mov
dec
inc
fadds
pop
xchg
ret
fisubl
jp
sbb
ja
sub
pop
cmp
mov
cmp
xor
rcrb
ret
cmp
cmpsl
shrl
shr
shrl
cmp
sub
push
xchg
push
dec
jae
push
inc
int3
scas
cmp
xchg
and
mov
call
pop
pop
inc
inc
sub
mov
add
xor
fcom
idiv
inc
ret
int
dec
jle
int
push
inc
sbb
sbb
cmp
mov
sub
push
cmp
dec
in
and
and
add
insb
sbb
les
jle
pusha
mov
mov
mov
add
jbe
mov
repz
repnz
sbb
test
and
rcrb
push
sbb
inc
jl
ljmp
out
sub
mov
dec
lret
xor
fsts
sahf
push
xor
repz
mov
jbe
mov
xchg
sub
jmp
push
out
push
and
addr16
aaa
aam
add
mov
aaa
pop
bnd
fdivrl
cmp
jmp
and
mov
xchg
cmpsl
inc
cmpb
cmpsl
sub
adc
and
rolb
adc
sti
xor
cmp
cmp
or
cmp
jo
pop
sub
add
cli
cmpsl
pop
rolb
je
adc
and
arpl
mov
and
cmp
mov
sarb
clc
ds
push
stos
add
addr16
movlps
mov
aaa
hlt
ds
fdiv
mov
aas
jne
outsb
pushaw
es
das
push
sub
and
dec
out
xor
push
sbb
pop
insl
cld
sti
popf
and
mov
test
jns
jmp
pop
lcall
fcom
mov
cmp
je
push
or
and
pop
in
add
loop
or
push
pop
xor
insl
mov
mov
xor
pop
inc
fisubrs
jnp
push
inc
je
and
ret
outsb
dec
mov
dec
push
sub
mov
movsb
sbbb
repz
dec
sub
fwait
jmp
mov
sarb
mov
int
push
xchg
adc
imul
xchg
rol
push
fdivrs
jno
push
jle
jmp
inc
dec
sahf
testb
das
gs
imul
inc
push
dec
push
inc
enter
inc
lret
and
cli
je
cli
mov
xchg
add
fmuls
mov
mov
add
push
into
cmpsb
insb
jae
sarl
enter
imul
aas
adc
mov
push
dec
ljmp
mov
mov
dec
or
xchg
add
dec
and
add
bound
fcomps
jae
push
xchg
xor
lahf
std
leave
fdivrl
das
mov
jnp
adc
out
jne
jns
add
out
nop
mov
iret
test
scas
call
jp
lret
xchg
aam
sub
jb
dec
into
repnz
pop
ljmp
and
add
ljmp
xchg
cmp
in
dec
fiaddl
dec
mov
mov
shlb
push
mov
jecxz
ljmp
jle
sbb
cmpsb
mov
pop
andl
pusha
mov
cmc
pop
mov
inc
sub
scas
sub
std
sub
nop
xchg
dec
jnp
mov
or
jge
add
es
push
outsb
xor
mov
mov
sti
adc
ret
push
popa
xchg
mov
mov
clc
loop
mov
out
cwtl
arpl
inc
cmp
sbb
mov
add
shrb
inc
andl
inc
sbb
dec
sub
mov
or
jl
and
xchg
roll
loopne
les
out
pop
jle
jl
leave
in
add
cmp
cltd
dec
xor
adc
cld
xor
out
and
ret
bound
cmpsl
cmc
es
imul
jmp
imul
imul
and
shrb
mov
sub
cmp
mov
fimuls
sti
mov
shll
filds
jle
xor
sti
data16
dec
sti
push
lcall
mov
sbb
sub
in
test
cmc
scas
xchg
iret
int
cs
push
aad
adc
rolb
lods
pop
rolb
mov
mov
sbb
xchg
popa
add
cld
mov
decb
add
lea
cld
mov
lahf
nop
push
inc
insb
fnstcw
dec
pop
xchg
pusha
mov
out
nop
loopne
lock
sub
adc
cld
out
dec
dec
push
push
add
mov
mov
orl
xchg
int
mov
mov
and
in
outsb
orl
imul
call
push
call
jg
cmp
mov
xchg
test
arpl
mov
mov
push
push
dec
adc
sti
aad
popa
mov
testl
push
inc
mov
cs
adc
xchg
icebp
cmp
adc
jge
lds
gs
inc
cmp
clc
nop
jno
stos
xchg
in
pop
dec
jp
pushf
cld
lds
jl
insl
cmp
xor
inc
sub
shlb
lods
sarl
enter
loope
dec
sahf
cld
pop
mov
scas
push
pop
hlt
fidivl
jge
arpl
addr16
lds
aad
mov
fmull
mov
push
sbb
shlb
rcr
push
inc
sbb
aas
mov
das
gs
ficoms
xor
roll
ret
ljmp
std
add
jnp
loopne
sub
in
stos
xchg
faddl
lods
sbb
inc
dec
cwtl
inc
mov
adcb
cmp
push
push
xor
xchg
jne,pn
sbb
mov
xchg
fadd
xor
mov
xchg
and
call
dec
dec
pop
or
push
push
aad
lahf
xor
pop
push
push
adc
sbb
outsl
dec
out
mov
arpl
adc
call
sbb
cwtl
push
mov
sti
dec
sub
sbbb
and
add
push
movsb
xchg
pop
nop
push
mov
cwtl
push
daa
inc
pushf
pop
imul
mov
add
inc
out
mov
jbe
cmp
pop
push
int3
das
pusha
scas
xor
notb
lcall
mov
rclb
arpl
push
push
pop
push
jmp
dec
mov
push
xorl
arpl
jo
mov
pop
mov
cmp
mov
loope
dec
test
movsb
ljmp
xchg
push
cld
loope
and
pop
mov
jle
mov
inc
mov
push
outsb
xlat
negl
sub
fcoms
cmp
nop
lret
xor
movl
insb
bound
add
mov
mov
dec
adc
loope
lret
jbe
fnstenv
pop
daa
xchg
push
add
movsb
cmp
fcompl
cwtl
mov
mov
fistps
and
jnp
dec
andl
cmpsb
push
ds
dec
int
push
add
addr16
cltd
rcll
lret
mov
pop
scas
outsb
pop
pop
xor
cli
stos
xchg
pop
jmp
aam
fwait
in
icebp
sbb
mov
shlb
call
mov
cmpsl
sbb
push
sti
imul
imull
icebp
push
dec
jns
push
cmp
push
and
dec
lahf
or
xchg
sbb
inc
repz
out
addr16
sbb
rolb
ljmp
jge
jle
mov
adc
ds
inc
cmp
lds
aad
sbb
call
push
sbb
repnz
inc
je
adc
mov
sub
inc
les
test
and
incl
enter
test
nop
scas
dec
out
popf
mov
sbb
and
dec
cmpsb
in
adc
cltd
mul
or
leave
or
and
cmp
jno
jno
int3
mov
imul
lds
jle
mov
imul
sbb
xlat
in
xchg
clc
fmul
daa
inc
enter
adc
dec
add
pop
push
out
sub
push
push
rcrl
fs
mov
jl
gs
sbb
repnz
ljmp
dec
ljmp
jp
je
pop
push
shll
cltd
inc
xorl
std
or
jbe
push
sbb
cmp
gs
dec
inc
jo
sbb
jns
hlt
inc
cmc
sub
sti
lea
testl
dec
xchg
jg
dec
es
fsubrs
cmc
rcrl
stos
and
xchg
arpl
add
and
cmp
push
and
and
add
and
sbb
ror
std
dec
inc
mov
adc
loopne
push
daa
cmpsl
push
shr
test
jno
mov
mov
out
fisubs
aaa
cltd
hlt
push
push
or
jl
in
imul
in
mov
stos
cltd
add
imulb
jecxz
push
lods
movsl
dec
jo
jge
sarl
xchg
in
xlat
mov
sbb
cwtl
adc
mov
pop
jae
inc
adc
push
and
fdiv
adc
dec
mov
adc
jmp
inc
test
cltd
or
adc
int
xchg
or
ror
inc
mov
inc
xchg
aad
mov
cmp
fwait
iret
test
jmp
jbe
cmp
adc
add
jmp
fidivrl
rclb
dec
in
out
aam
imul
aad
xchg
dec
mov
adc
fwait
push
inc
and
dec
test
in
sbb
test
mov
inc
inc
mov
add
adc
jno
popa
aam
es
std
arpl
mov
sahf
dec
cli
mov
les
int
ret
dec
push
sub
lret
mov
inc
jne
xchg
mov
testl
mov
shlb
xchg
add
into
fadd
push
mov
lods
and
rolb
sub
mov
cmp
add
orb
and
push
mov
xor
push
xor
sbb
in
xorb
jmp
push
int3
dec
cmpb
push
xor
xlat
fiadds
fiaddl
pcmpgtb
lcall
add
shrb
jae
out
inc
push
mov
pop
repz
xchg
fistpl
cmc
cmp
add
aaa
loopne
ja
jl
and
add
mov
orb
fstpl
stos
lret
jge
sbb
mov
mov
jne
inc
or
mov
popa
hlt
js
add
inc
out
jb
imul
aad
test
push
aad
mov
push
cmp
mov
lea
dec
ret
lahf
out
or
int3
incl
lahf
cltd
mov
sbb
sahf
xor
or
decl
xor
jmp
je
out
push
xor
sbb
jns
inc
call
jle
daa
mov
in
pop
rolb
fcoml
jge
aas
dec
mov
jbe
cmp
movsb
ljmp
fld
iret
sbb
jmp
jns
pop
sbb
or
mov
js
loop
add
push
ljmp
cmc
xor
jl
leave
bound
fs
fsub
leave
pusha
inc
fs
adc
outsb
xor
jbe
test
lcall
mulb
push
xchg
cmp
xchg
cmp
icebp
into
push
lock
sbb
add
dec
enter
pop
push
lods
xor
xor
shrl
loopne
int3
fucomi
mov
clc
sahf
sbb
pop
or
fwait
stc
add
outsl
stos
outsb
dec
xor
jo
imulb
ja
xchg
or
test
cmp
xchg
inc
sbb
je
fwait
into
sub
jae
imul
rcll
cmpsb
stos
fldl
cli
mov
sbb
stos
add
stos
int
stos
cmp
inc
sbb
stc
dec
outsl
into
jle
push
push
lods
pop
pop
imulb
mull
sbb
rol
outsb
mov
cld
and
fidivrs
icebp
sbb
clc
mov
loopne
in
iret
movsl
js
jl
inc
neg
push
inc
add
push
dec
pop
fwait
and
cmp
and
inc
adc
mov
repnz
push
mov
repnz
ljmp
or
arpl
fwait
adc
in
pushf
fwait
dec
xchg
aas
pop
shrb
les
push
and
lahf
movsb
dec
int
xchg
shrl
xchg
and
testl
enter
lret
adc
add
jae
es
arpl
push
fistpl
cli
test
sub
dec
and
sub
divl
inc
arpl
xchg
push
add
pop
xor
ret
sarl
loope
adc
mov
adc
jae
scas
dec
push
inc
imul
and
arpl
mov
ds
mull
bound
in
ljmp
push
cmp
jnp
out
sub
xchg
cs
in
bound
add
mov
popa
cli
adc
add
ja
cmp
sbb
mov
filds
or
data16
cmc
jae
mov
mov
push
mov
and
dec
enter
inc
xor
mov
fcomps
xchg
push
jmp
stc
scas
pusha
pop
add
pusha
js
xchg
dec
cmp
push
pop
pop
xor
mov
pop
adc
mov
cmc
lahf
jnp
add
roll
dec
push
push
dec
mov
insl
jmp
lods
mov
and
push
jecxz
dec
cmp
les
nop
js
cmp
xor
rep
fcmovnu
sbb
jle
ret
pop
sub
in
inc
loop
fistpl
insb
movsl
movsl
xchg
jmp
pop
sbb
dec
sub
xor
cld
dec
xlat
add
sarl
mov
rcrb
push
movsb
aam
inc
xorl
andb
popa
fcomp
inc
add
sbb
scas
xor
inc
in
das
rorl
push
imul
orb
sub
cmp
mov
out
sub
push
scas
xor
out
push
dec
lods
push
bound
add
xlat
lcall
pop
mov
movsb
pop
aam
lret
nop
sarl
mov
sbb
xor
nop
lea
fcomp
adc
roll
jmp
int3
testl
test
addr16
or
jg
mov
sub
jl
xchg
adc
je
neg
pop
jecxz
ds
or
or
aad
xchg
enter
filds
xchg
pop
xlat
es
andl
add
sti
pop
dec
adc
push
adc
jns
cld
cmc
dec
pushl
ret
or
in
push
or
xor
xchg
dec
mov
dec
int3
gs
and
test
push
in
jge
sar
call
pop
aaa
clc
or
jne
inc
sahf
xor
in
push
and
or
or
mov
ret
hlt
sub
lret
xor
jb
fwait
scas
mov
fldcw
adc
jl
lea
arpl
dec
adc
nop
pop
inc
jo
pop
cmpb
pop
repnz
scas
push
mov
call
lock
lret
cmp
movsb
and
or
cmp
inc
call
sub
xchg
ud0
add
loop
cld
push
lcall
sub
das
or
dec
jecxz
inc
cmp
push
inc
bound
lret
rcrl
mov
cmpsb
push
sub
in
and
jmp
frstor
mov
mov
mov
notb
adc
and
xchg
hlt
ret
add
pop
popa
mov
or
ret
subb
je
js
or
and
cmp
push
lods
inc
cmp
cmp
rolb
inc
mov
pop
sbb
out
pop
sub
mov
xchg
and
dec
dec
push
jno
testb
das
mov
ds
bound
mov
adc
mov
leave
cmp
std
push
lock
or
fwait
or
dec
jbe
mov
sti
jp
aam
fiaddl
popf
ja
roll
gs
and
out
and
pop
testb
cmp
push
or
popf
mov
add
lcall
in
inc
sarb
imul
inc
jp,pn
jae
stc
call
incb
je
lahf
shlb
push
push
jecxz
sub
mov
js
push
mov
fcmovu
xor
mov
pop
pop
sub
notb
imul
call
add
test
xchg
add
out
sub
mov
sbb
cmp
sbb
repz
fistl
xchg
ret
push
pop
shll
nop
stos
jl
dec
fistl
lcall
aas
test
or
inc
daa
fisubl
cmc
insb
mov
add
mov
cld
sub
push
hlt
xlat
xlat
or
lret
outsl
insl
inc
popa
ds
sub
imul
out
aas
shlb
or
cltd
or
aas
mov
mulb
jl
dec
fisubrl
jge
out
inc
push
jne
das
add
jnp
and
adc
pusha
stc
push
jmp
addb
mov
jg
lock
jae
iret
movsl
sbb
arpl
pushf
push
dec
jl
xor
and
mov
ret
sub
dec
sub
push
loopne
dec
aaa
or
and
xor
cmpl
adc
sbb
subb
jmp
or
pop
mov
jl
pushl
insb
out
lods
push
mov
mov
aam
add
cmp
dec
pop
mov
adc
js
sub
mov
sbb
inc
mov
cmpl
jmp
es
push
shll
call
imul
lods
push
bnd
jbe
cli
or
shrb
sbb
outsb
js
int3
xlat
or
cmp
ds
pusha
cmp
adc
or
cli
pop
adc
push
mov
jae
es
roll
cltd
sub
popa
and
adc
pop
push
jnp
daa
fildll
dec
and
cmp
scas
xchg
in
in
addr16
in
and
add
mov
mov
test
les
sub
and
loopne
bound
inc
xchg
pop
jp
push
sub
push
dec
in
jge
mov
dec
ja
insb
inc
in
fdiv
sbb
sbb
sbb
dec
inc
lods
and
nop
jle
xchg
insl
pop
push
jo
ds
out
mov
xor
jg
sbb
icebp
inc
sub
xchg
insl
inc
jl
or
in
lods
aas
or
in
xor
jb
xchg
push
add
xchg
fbld
xchg
test
iret
jl
xor
sub
xchg
jb
mov
fisubrl
movsb
mov
fbstp
outsl
and
push
stc
xor
fwait
cmc
shlb
fsub
sahf
aas
cmp
inc
out
cmp
imul
popf
shl
cltd
mov
aam
fcmovnbe
lea
push
outsb
push
add
lret
sti
cld
cmp
xchg
movsb
sbb
jns
movsb
mov
push
jb
mov
cmpsl
in
or
mulb
out
sub
inc
cmc
arpl
push
fadds
fiaddl
sahf
adc
lea
and
fsubrs
loope
les
imul
fsts
mov
jno
mov
push
adc
in
fcmovnb
fisttpl
sub
in
inc
sub
popa
in
jb
or
cltd
outsl
adc
push
add
roll
mov
das
cmpsb
scas
mov
dec
aam
inc
or
xchg
in
pusha
lea
mov
sub
jg
add
dec
sub
cmp
and
dec
mov
xor
add
cltd
xchg
mov
mov
mov
mov
rcll
orl
outsb
sbb
xor
daa
jo
jecxz
sahf
or
cmpsl
cmp
rcll
xchg
iret
jge
mov
fs
cs
sbb
rorl
in
jle
into
mov
xor
int
adc
push
adc
aam
movsb
lods
pop
sti
outsl
hlt
outsb
jne
int
rcrl
mov
nop
mov
pop
aad
pop
inc
cmpsl
mov
sbb
and
les
xor
iret
dec
lahf
decl
inc
push
into
ja
stos
ret
cmpsb
lds
push
sbb
dec
xchg
enter
dec
jle
repz
pop
ficompl
push
ret
repnz
add
pop
ds
xor
fwait
adc
xchg
mov
xchg
sbb
mov
repnz
int3
or
bsr
mov
adc
ffreep
sbb
rcrb
movsl
mov
adc
push
daa
ds
repz
dec
jo
inc
cmp
xchg
in
cmpsb
push
mov
mov
push
jbe
mov
std
mov
fbld
dec
or
movl
ds
inc
les
adc
xchg
inc
lock
cmpsl
pop
test
xor
xor
sbb
xchg
js
loop
add
test
hlt
dec
lea
popa
ficoms
and
les
push
mov
inc
cwtl
and
jae
aad
ret
sbb
xor
std
sar
fisttpl
mov
or
xor
scas
push
enter
dec
dec
mov
inc
repnz
int3
sbb
jae
popf
mov
loop
push
mov
cmp
js
mov
bound
jp
sti
sbb
jp
jae
xchg
pop
cld
sub
movb
or
cmpsl
jno
or
dec
or
mov
dec
jmp
scas
loope
cmp
or
ja
sahf
xor
cli
ds
dec
xchg
cmc
push
jmp
inc
cmp
xchg
sahf
call
out
sub
sbb
cmp
dec
movl
sbb
idivl
add
lret
xlat
pop
xor
imul
add
sub
les
mov
and
dec
lahf
cwtl
mov
stos
mov
out
pop
push
mov
push
dec
icebp
push
fisttpl
push
xchg
jae
cmp
mov
and
dec
pop
iret
jbe
es
push
fwait
jp
repz
add
push
imul
dec
pop
xor
push
or
and
mov
aad
dec
fwait
mov
sahf
sar
jb
mov
ds
scas
push
sahf
pop
test
fwait
xor
imul
das
pushf
push
jecxz,pt
test
fldl
add
mov
mov
add
or
movsl
repnz
cli
scas
xlat
frstor
dec
int3
daa
out
jne
mov
sbb
adc
mov
sbb
push
test
dec
xor
icebp
mov
or
inc
adc
sbb
push
repz
mov
cld
push
mov
out
mov
shrl
push
jg
out
or
orb
sub
stos
mov
or
add
adc
lcall
lock
hlt
sbb
inc
mov
ret
cmpsb
mov
mov
inc
in
mov
rolb
cmc
rclb
or
dec
leave
scas
push
pop
ljmp
loope
fwait
cwtl
loope
add
mov
hlt
lahf
enter
loope
mov
inc
mov
ja
xchg
jo
jmpw
jo
nop
aaa
cmp
xchg
sti
movsl
or
loope
fwait
mov
cmpl
sbb
mov
push
jno
add
jo
pop
subb
xchg
xchg
fcmovb
test
test
and
mov
fidivrl
rep
lds
insl
jne
push
sbb
xchg
jbe
cmp
xchg
xlat
stos
subb
fwait
sbb
jo
and
push
push
cli
push
test
xchg
cmp
subb
and
leave
stos
sbb
sbb
mov
insl
jp
js
rcrl
repz
dec
push
and
push
push
sbb
inc
push
or
fisubrl
cld
jmp
iret
into
imul
je
cmpsl
int3
leave
sbb
add
mov
cmp
lcall
jns
roll
bound
mov
add
aas
mov
aas
cmpsb
inc
negb
movsl
imulb
dec
pusha
sti
lret
shr
and
mov
test
dec
int
sub
jp
lret
sbb
sbb
data16
mov
sbb
mov
xor
roll
lock
and
jae
dec
dec
sub
pop
mov
or
mov
insl
mov
pop
leave
leave
shll
pop
mov
mov
cwtl
xchg
add
xor
sbb
xchg
mov
lret
imul
outsb
pop
and
mov
mov
inc
and
adc
jmp
xor
add
jb
cld
out
or
mov
cli
dec
sub
mov
test
je
rol
cmpb
jp
mov
or
xor
jne
in
xchg
mov
xchg
aaa
ja
cmp
mov
mov
into
test
push
out
cltd
jp
inc
sub
popf
clc
and
loope
jecxz
lahf
push
xlat
jl
mov
dec
add
fiadds
mov
or
mov
xchg
or
pop
ljmp
popa
bound
and
mov
sbb
mov
mov
fwait
jg
sbb
add
sbb
inc
xor
fstps
daa
sbb
aas
mov
std
out
mov
mov
sub
sub
jmp
ret
aam
int
ficoml
xchg
lods
cs
je
xchg
int
cwtl
lea
les
mov
xor
cmp
test
or
jb
adc
dec
in
lret
sarb
sub
hlt
imul
int
dec
dec
stos
push
fists
mov
popa
fstp
sbb
in
and
aad
mov
lds
iret
xchg
xchg
fidivl
loop
cmp
dec
inc
sub
cld
xchg
or
xlat
scas
cwtl
push
aad
xor
or
int3
sbb
mov
inc
clc
pop
or
ss
inc
aam
movb
add
mov
sbb
mov
push
mov
frstor
jnp
in
test
push
push
dec
dec
movsb
and
jmp
sub
int
dec
sbb
aam
ret
nop
sarl
sub
jns
and
adc
mov
int3
inc
sbb
xor
out
ret
pop
enter
lret
cs
pop
loope
loope
aad
shrb
clc
inc
fstl
sbb
cmpsb
mov
sub
mov
xchg
test
lea
out
push
sar
int3
jle
sbb
rcrl
dec
jb
or
jge
push
pop
mov
sbb
out
push
inc
pop
cld
pushf
mov
inc
addb
rsqrtps
out
cmp
xor
fdivl
mov
and
sub
mov
imul
mov
mov
test
popl
push
test
ficoml
lods
dec
cld
outsb
push
insl
stos
cli
pusha
xor
fmuls
mov
mov
fldcw
dec
out
mov
fcomip
jo
lds
mov
sbb
lahf
mov
push
cmpsl
je
imul
add
adc
inc
repz
jmp
cmpsl
jae
cmpsb
cmp
pop
stos
stos
stos
lock
ja
leave
pop
add
and
xchg
inc
and
ret
mov
xchg
daa
sbb
shl
jp
cmpsl
lock
jae
pop
mov
test
pop
icebp
pop
in
nop
lret
mov
jbe
lds
je
xor
sbb
xor
mov
inc
std
movsl
cmpsb
sahf
movsl
outsl
inc
bound
xchg
orb
push
mov
jg
test
fldl
orl
jp
lock
mov
dec
mov
cmp
arpl
pop
mov
or
mov
es
pop
or
adc
cmp
push
pop
dec
mov
cmc
cwtl
jl
cmc
mov
clc
fcoml
call
scas
push
pop
or
in
xor
jno
inc
jnp
push
icebp
xrelease
mov
jp
mov
and
imul
push
into
ret
xchg
xor
loope
sbb
mov
push
mov
jle
jl
cmpsl
sub
lods
mov
js
pop
into
mov
adc
nop
mov
inc
cs
test
push
xchg
add
imul
jae
imul
adc
and
daa
shl
xchg
jge
aam
cmp
dec
aad
idivb
or
insl
adc
aad
mov
jge
or
mov
stos
push
ljmp
loope
aaa
cli
addr16
cmp
outsb
pushf
arpl
cwtl
fucomp
sub
out
ret
push
fbld
das
dec
push
insb
xor
lea
jne
cltd
test
stc
or
xor
xchg
xor
cltd
popf
xchg
fisubs
rorb
fsubs
inc
cltd
cmp
and
mov
jo
ja
stos
nop
mov
iret
fcmovu
sbb
mov
es
test
repnz
pop
adcl
call
dec
cmp
mov
ss
push
cmpb
jae
mov
mov
push
cmp
cmp
mov
aas
loope
aam
mov
popf
es
xor
dec
in
stc
ret
test
jecxz
xor
cmp
mov
test
push
sti
add
popf
mov
mov
pop
cmovnp
sbb
rorb
pop
mov
mov
or
iret
loop
push
hlt
enter
mov
inc
mov
test
push
mov
fisubrl
push
test
pop
pop
or
sbb
aam
mov
cmpl
jmp
adc
dec
jo
xor
xor
add
shl
xchg
testb
adc
loop
xchg
clc
jb
xchg
shll
mov
pop
hlt
or
shrl
repnz
xlat
loope
ds
shrb
pop
test
add
mov
out
call
stos
and
mov
clc
jo
imul
sbb
insl
daa
loop
and
push
movsl
sbb
nop
outsl
lods
sbb
sbb
push
cltd
mov
cmpsb
lods
jnp
cmp
lds
incl
ds
mov
ss
lret
dec
and
xchg
add
out
cmp
mov
mov
scas
mov
fimull
xor
push
sub
xchg
loope
adc
inc
push
mov
jmp
jnp
pop
stos
cld
mov
adc
mov
js
mov
enter
cmp
adc
xor
inc
adc
scas
decl
fldl
ljmp
lea
gs
or
push
dec
adc
int
cmp
test
cltd
loop
mov
arpl
test
xchg
in
fldl
loopne
icebp
call
imul
dec
out
hlt
je
dec
testl
or
cmpsb
jl
add
in
mov
add
jp
mov
jecxz
cmpsl
mov
add
fbld
test
jb
decl
mov
cmpsb
mov
aas
adc
push
cmp
daa
mov
enter
dec
std
ljmp
push
out
sub
jnp
into
pop
fs
cmp
and
mov
stos
xchg
jmp
mov
std
into
sub
mov
addr16
inc
aas
out
cmp
xchg
mov
add
add
out
ret
data16
or
ds
sar
sbb
push
stos
jle
pop
rol
inc
ror
gs
test
jno
jnp
mov
stc
fimull
and
cmp
mov
orl
jno
aam
fnstsw
ss
add
adc
push
gs
ss
or
push
scas
bound
add
inc
mov
jno
inc
movsl
call
roll
sbb
push
cmpsb
stc
int3
mov
in
test
loopne
xor
or
mov
iret
test
mov
cmpsl
rcll
lods
movsl
fs
popa
lcall
inc
aaa
mov
lea
popa
xor
ja
or
mov
push
mov
and
and
popa
mov
fs
dec
es
mov
pop
sbb
aaa
add
ja
sbb
lea
cltd
add
pushf
sbb
orl
push
rorb
xchg
or
jnp
mov
adc
xchg
xchg
pusha
jle
inc
push
add
js
dec
test
jnp
jno
fnstsw
clc
rcll
icebp
mov
fcoml
scas
add
repnz
and
and
repz
sbb
mov
rcr
test
jecxz
dec
test
loope
push
faddl
rcrl
mov
je
iret
addr16
cmp
jae
ljmp
push
inc
cmc
adc
inc
xchg
mov
adcb
mov
xchg
fcomps
adc
cmc
aaa
inc
jmp
xchg
inc
insb
jmp
sbb
and
insl
pop
xchg
jecxz
and
xchg
cmp
jecxz
sub
lea
jo
ljmp
adc
ret
dec
mov
fmuls
loopne
adc
fdivr
movsl
mov
lods
lods
add
ret
roll
push
pop
aaa
lea
xor
fdivl
inc
mov
mul
aas
xchg
inc
lods
addr16
mov
xchg
lret
shll
mov
mov
std
mov
add
jle
xchg
xchg
jge
scas
gs
arpl
pop
sub
xchg
notl
adc
lea
cmpsb
fdivrs
popf
sbb
leave
adc
lock
fsubl
mov
mov
dec
or
jbe
add
in
shlb
pinsrw
movsl
fisubrl
xor
add
mov
fdivl
sahf
jp
dec
cmp
pop
enter
push
push
inc
adc
repnz
pop
pop
repz
and
les
and
inc
mov
sub
insb
mov
int3
movl
jg
mov
mov
inc
jp
or
adc
inc
or
std
orb
lods
mov
pop
pop
leave
push
test
sbbb
pop
sbb
pusha
lret
sbbb
out
enter
cs
xchg
dec
in
lret
cmp
ss
out
insl
mov
lods
mov
enter
flds
loop
inc
adc
inc
in
jbe
jne
dec
ja
fmulp
bound
add
xor
and
xchg
xor
imul
cli
jmp
adc
int3
scas
jne
insb
sbb
cmp
popl
rol
mov
imul
and
mov
and
inc
xor
pop
shr
jae
cwtl
and
add
xor
mov
sub
xchg
and
test
rcrb
dec
es
shll
or
aas
push
add
popf
pop
inc
mov
cli
movsl
notb
and
jns
push
jle
pusha
cld
imul
jle
mov
cmc
push
pop
jo
popf
jecxz
add
mov
and
cmpsb
jbe
clc
idivl
xchg
pop
dec
into
out
mov
popl
dec
mov
mov
xor
pushf
aam
lods
rol
les
push
mulb
subb
add
mov
mov
popf
jmp
sahf
bound
jo
ljmp
mov
push
andl
std
setne
or
cmc
xchg
daa
xor
std
push
inc
push
ljmp
adc
int3
dec
lahf
sbb
mov
xchg
push
inc
mov
lods
pop
and
pop
test
push
test
mov
data16
or
cmp
dec
dec
addl
mov
adc
pop
je
test
ret
mov
ss
push
or
daa
test
push
dec
xchg
andb
movsb
mov
nopl
push
cmpsb
inc
pop
mov
sbbl
sbb
pop
lods
add
sbb
jge
inc
bound
jne
sahf
test
insl
aaa
incl
fs
jle
mov
pop
dec
inc
mov
pop
push
call
cltd
pusha
popa
cmp
ljmp
repz
jno
leave
fmull
xchg
loopne
data16
lret
pop
xlat
fdivs
push
mov
aad
scas
dec
testl
push
and
sub
ja
shrl
push
pop
add
pop
inc
and
push
aam
notw
dec
jo
xchg
dec
and
adc
and
add
jp
out
in
jb
int
ffreep
push
out
enter
inc
add
ret
test
enter
das
rcrl
add
and
stos
or
stos
mov
jb
adc
sbb
cli
pushf
dec
xor
sbb
jge
mov
mov
fdivl
js
out
popf
pop
xchg
mov
mov
mov
mov
xor
bound
insb
dec
jmp
xor
movsb
xchg
js
adc
insb
pop
push
jo
lret
jno
sub
popa
sub
jl
sbb
test
push
push
into
ds
test
xor
inc
fwait
mov
inc
sub
mov
shlb
add
inc
ljmp
pop
jbe
sbb
std
out
sbb
mov
push
and
in
mov
lea
adc
add
mov
jnp
add
cmpsl
push
outsb
pop
cs
add
pusha
xor
jo
movsb
insl
cmp
push
movsl
aas
int
lea
dec
adc
mov
dec
insw
xchg
xchg
cli
nop
insl
repz
mov
xor
mov
notb
add
in
arpl
cmp
sbb
stos
jne
xor
adc
jecxz
jp
mov
xchg
stos
aad
jno
mov
or
push
outsl
sbb
pop
push
mov
fmull
mov
loope
faddp
mov
or
pop
inc
in
repnz
pop
loopne
push
xor
cmp
pusha
jl
dec
out
mov
loopne
mov
push
leave
shrb
xchg
push
rcrb
loope
sti
in
pop
push
mov
stos
scas
test
mov
fadds
aad
cmp
sti
test
mov
xchg
mov
xor
out
dec
adc
inc
add
push
mov
pop
jno
shrl
inc
movsl
jns
scas
repz
out
adc
dec
aad
inc
xor
xor
sbb
cltd
xor
xor
fs
mov
in
loope
add
lcall
cs
mov
sbb
push
mov
ret
inc
and
xchg
pushf
mov
movsb
test
aad
push
cmpb
inc
mov
ret
inc
mov
addr16
stc
addr16
call
icebp
out
sub
outsl
xchg
clc
xor
and
lcall
push
sbb
cmp
sub
jo
sub
inc
out
test
inc
hlt
lea
lret
out
xchg
repnz
in
ret
rcl
aam
jp
movsb
push
sbb
ss
mov
mov
loopne
or
sbb
rorl
add
add
aaa
les
mov
adc
jnp
push
inc
lahf
mov
add
jo
iret
dec
add
sub
xchg
mov
lock
pop
daa
jbe
mov
mov
xchg
or
cwtl
mov
jge
call
sub
aad
outsl
int3
mov
ljmp
dec
shlb
mov
sbb
inc
daa
jge
mov
and
and
pop
cmp
sbb
mov
inc
sahf
adc
mov
xor
test
sbb
sar
pop
stos
popa
je
pop
rorl
sub
faddp
movsb
and
loope
enter
pop
jle
sahf
shrl
xor
popa
dec
into
fisttpl
sar
push
and
adc
ficoml
mov
insl
mov
xchg
xor
push
xchg
jmp
push
scas
fnstenv
pop
jno
jnp
xchg
adc
ds
xchg
mov
daa
jb
aad
int3
pushf
pushf
xchg
fs
sbb
scas
xchg
cmp
push
jmp
push
or
popa
out
stos
cwtl
pop
push
fs
arpl
jp
and
fisttpll
xchg
and
mov
inc
loopne
push
iret
subl
bound
fsubrs
es
icebp
sbb
pop
dec
inc
dec
cli
or
repz
mov
inc
add
lcall
cltd
in
aam
loop
xchg
xchg
sbb
leave
or
clc
cmpsl
lcall
shlb
or
mov
nop
cmc
and
push
lea
orb
add
aam
xchg
fwait
insb
xchg
sub
popa
fistpl
pusha
in
xchg
jmp
cmpsb
mov
clc
mov
fsubp
lds
push
cltd
or
arpl
mov
scas
inc
enter
cmp
lds
outsb
int3
movhlps
mov
into
ss
jle
push
jne
insb
ja
mov
xchg
rcll
mov
lea
sbb
sbb
cmp
jle
cmp
mov
inc
xchg
mov
jo
leave
fstps
xchg
xchg
mov
repnz
mov
and
andl
lret
push
add
add
out
push
jp
xchg
fwait
add
and
mov
cs
pusha
push
cmp
enter
lret
scas
xchg
js
pop
push
mov
testl
mov
mov
call
xor
pop
jnp
sbb
pop
arpl
call
sub
inc
icebp
mov
out
push
int
and
sub
sub
cltd
dec
jne
mov
or
jbe
fsubrl
cmp
lcall
pop
iret
sbbl
stc
xor
outsb
mov
lock
mov
sbb
mov
inc
hlt
mov
and
lds
xchg
inc
sub
aas
clc
push
dec
imul
xchg
xchg
mov
cmpsb
out
push
xchg
ret
xchg
xchg
push
cltd
dec
jge
lcall
xchg
mov
das
wbinvd
sbb
push
jecxz,pt
shl
fwait
and
cmp
loope
sbb
cmp
add
rorl
sbb
xor
jmp
sbb
dec
jb
or
lcall
hlt
jmp
sub
fcom
pushf
mov
push
das
arpl
jg
pushf
addr16
out
outsb
lds
lds
stos
dec
xor
pop
push
sbb
frstor
adc
fwait
insl
fldenv
push
cmp
in
inc
mov
data16
outsb
cmp
dec
ror
shll
fisttpl
mov
cld
cmp
adcb
fisttps
dec
movsb
movsb
movsb
leave
imul
jp
dec
jp
data16
adc
outsb
or
repz
nop
ret
pop
in
sarb
mov
cmc
xor
rclb
enter
push
xor
fsubr
sbb
and
pop
int
mov
rcrb
dec
adc
dec
fdivr
into
pop
test
aaa
jge
or
mov
ja
jnp
push
lds
scas
scas
jle
addr16
mov
xchg
lcall
add
insl
lods
pop
push
dec
imul
push
cwtl
ljmp
mov
mov
jp
mov
or
out
rcll
dec
xor
sbb
sbb
stos
pop
loop
pop
or
xchg
jo
and
cwtl
js
fists
jp
mov
adc
mov
test
stos
jge
hlt
movsb
dec
shrl
mov
idivb
fnstsw
imul
push
ds
jns
push
mov
pop
test
out
sub
les
adc
out
fdivrl
pop
sbb
mov
inc
outsb
lret
pushf
xor
add
cmp
call
dec
adcl
and
mov
push
repnz
test
mov
jge
inc
xchg
push
loopne
jmp
adc
dec
mov
sarb
mov
sbb
sbb
data16
inc
inc
or
sbb
add
fwait
adc
pop
or
and
add
cld
ljmp
mov
sub
cwtl
jns
loopne
or
pop
bound
add
loopne
mov
orl
pop
clc
cmp
rclb
negb
push
mov
jp
int3
push
add
movsl
lods
jae
shll
add
out
sub
lock
jp
popa
xor
out
pop
clc
lods
or
mov
mov
or
mov
sbbb
pop
cmp
clc
jo
cmp
pop
or
and
imull
mov
lds
cmp
cmp
push
sbb
xchg
addr16
add
ljmp
adc
mov
cmp
fstpt
pop
adc
cmp
or
mov
push
mov
out
test
aad
insb
lcall
mov
xlat
jno
mov
in
inc
mov
add
inc
mov
stc
xor
or
pusha
jae
gs
fbld
fsubrl
xchg
cmp
and
push
fidivrl
insb
out
and
dec
int
add
adc
dec
call
aas
fisubrl
xchg
aas
fwait
aad
roll
dec
or
pop
adc
or
insb
inc
inc
mov
xchg
subb
stos
inc
push
clc
test
mov
cld
rcl
scas
lahf
popa
aas
nop
lcall
cmpsb
sbb
out
inc
mov
cs
push
bound
movsl
push
push
push
fisttpll
xor
pop
or
fcomp
pusha
aaa
inc
pop
daa
jb
mov
popf
mov
mov
cmp
mov
jo
pushf
push
xchg
popa
sbb
cmp
lret
arpl
jmp
jbe
mov
cmp
or
in
xchg
mov
or
pop
inc
mov
imul
pop
and
pusha
sbb
sub
xchg
cmc
xchg
dec
mov
je
mov
pop
inc
bound
out
pop
stos
jl
dec
sbbl
mov
sbb
stc
and
xor
xchg
mov
lcall
adc
cmp
in
xchg
enter
sbb
xor
jnp
ret
out
out
inc
pop
inc
sub
push
fimuls
push
mov
pushf
test
shrb
dec
dec
cld
aas
outsb
lock
cmp
mov
inc
mov
ds
rorl
jl
aaa
fidivrl
jb
xchg
jecxz
popf
jnp
insb
int3
imul
sub
xchg
inc
jecxz
cmp
idivl
jg
stos
add
inc
adc
jl
cmp
and
divb
orl
hlt
pop
dec
out
jmp
test
cmp
rolb
xchg
inc
cld
mov
xacquire
enter
pop
push
nop
js
jp
mov
ret
add
out
or
pop
adc
or
test
add
into
mov
dec
fnstcw
sbb
xchg
jg
push
cmp
shrb
or
cmpsb
incl
adc
adc
lods
jecxz
pop
inc
mov
and
inc
adc
push
clc
repnz
and
push
mov
mov
xor
or
and
jnp
nop
lock
mov
jne
mov
aas
mov
clc
xchg
push
scas
in
lods
test
lret
ret
ss
mov
xor
adc
mov
stc
push
push
lahf
push
mov
jne
xchg
insb
xchg
dec
sub
enter
inc
mov
mov
pop
out
into
cld
cld
or
call
pop
stc
add
push
sub
into
sub
in
mov
test
adc
ss
mov
and
lea
mov
dec
mov
xor
jns
mov
cmp
out
lahf
lahf
cmp
push
orb
or
adc
pop
pop
pop
xchg
fisttps
lods
lret
imul
inc
mov
cmp
push
out
pop
jge
add
fdivp
dec
aad
push
shlb
mov
insl
roll
hlt
sub
das
rcrb
rolb
lea
pop
jl
lods
push
loop
clc
jb
test
jae
aas
dec
mov
dec
adc
cmp
push
mov
sub
jl
insb
jmp
dec
xchg
dec
mov
mov
mov
mov
jmp
xchg
cmp
push
jns
xor
sub
xor
mov
fnstsw
int3
mov
cmpsb
push
add
dec
xchg
or
pop
dec
jae
fdivrl
xchg
xor
vmread
clc
test
iret
repnz
mov
cmpsl
idivb
mov
test
and
adc
fcomps
mov
push
push
jne
mov
dec
loope
adc
sub
xchg
fwait
lods
jl
pusha
pop
mov
add
jl
and
dec
and
out
mov
aas
insb
fwait
add
push
adc
pmulhuw
jbe
test
push
lods
shrb
dec
add
pop
ret
mov
scas
stos
je
lret
or
fisttps
cmp
xor
sub
shrb
loope
adc
or
and
or
add
nop
daa
ds
mov
adc
arpl
call
mov
or
and
adc
pop
mov
lcall
jne
aad
pop
test
hlt
js
cmp
lods
loope
test
aad
sbb
adc
push
pop
inc
or
and
sbb
cli
or
add
ds
ss
xlat
inc
mov
ds
cld
out
add
pop
or
repnz
xor
and
mov
xor
pop
or
adc
jo
nop
sub
mov
aas
dec
lock
adc
push
imul
push
inc
push
and
inc
dec
mov
xchg
cmp
sbb
adcb
jge
xor
mov
add
addr16
inc
pop
sub
jle
lock
xor
mov
sbb
jecxz
cs
mov
shlb
mov
push
aad
ljmp
fisubs
das
jg
add
push
mov
jle
fnstcw
push
jl
adc
and
jb
fcmovnu
xor
lcall
pop
shlb
inc
jmp
imul
mov
push
jmp
xchg
in
sbb
std
cwtl
test
jmp
inc
je
add
lcall
out
and
int3
insl
push
or
cmc
and
xchg
test
dec
jbe
jb
insb
mov
jns
mov
xchg
dec
popf
rclb
arpl
jl
int
shrb
mov
push
stos
add
mov
mov
inc
pop
mov
xor
data16
mov
dec
inc
mov
outsl
clc
push
rclb
stos
push
out
je
lods
leave
mov
in
cmp
mov
mov
xchg
call
test
push
sahf
enter
push
and
lds
cld
fsubs
mov
decb
movsb
and
cmp
int3
jg
outsb
hlt
into
shlb
and
leave
mov
andb
hlt
mov
aad
cli
jae
push
cmp
test
inc
inc
inc
movl
lock
jge
push
incb
leave
mov
into
out
jle
hlt
xchg
jns
push
jnp
pop
sahf
addl
sub
cmp
std
or
mov
mov
jl
inc
into
jle
mov
jo
inc
out
stos
add
adc
stc
mov
imul
mov
ret
mov
pop
push
stos
mov
daa
jge
cmp
add
addr16
scas
aad
mov
movsl
mov
push
xchg
sub
ficoml
stos
jle
jne
popf
push
pusha
lods
dec
jno
push
xorb
int
mov
fsubrl
lods
pop
and
jmp
movsb
popa
pop
flds
popf
cli
fwait
ss
xor
fisubs
cmp
call
ss
xor
mov
and
je
iret
fs
sbb
test
stc
jl
push
mov
mov
jb
std
and
loopne
shll
push
stc
out
xchg
or
mov
std
jnp
cwtl
add
outsb
fnstenv
cmp
push
adc
push
enter
icebp
or
jns
jbe
add
lods
mov
jns
in
mov
cmp
fdivrp
out
push
mov
and
filds
push
jb
scas
repnz
push
inc
cmp
sub
lcall
push
jno
insl
popf
enter
cmc
setno
pop
inc
dec
cmp
fnsave
aas
outsb
aaa
aas
lods
mov
cmpb
sbb
jb
dec
sti
arpl
imul
lds
repnz
xor
xor
int3
inc
ret
jmp
add
xchg
mov
mov
jp
in
mov
call
sahf
fidivrs
push
xchg
test
repz
lret
arpl
int3
stos
jno
sub
popf
push
pop
mov
es
sub
aaa
and
arpl
mov
cli
push
dec
pop
lret
jg
enter
xchg
js
es
movsb
cltd
insb
jge
sbb
jns
cmpsb
push
pop
mov
push
xchg
cwtl
add
adc
push
in
pop
sub
lea
repz
filds
sbb
push
or
inc
inc
repz
cmp
cmp
sub
pop
outsl
dec
inc
jne
scas
jno
xchg
test
and
mov
xor
mov
push
mov
xor
mov
cmp
stos
jae
lods
into
leave
inc
pop
mov
testl
add
test
iret
cld
fldl
imul
pushf
cmp
sahf
pop
in
pop
std
adc
push
sbb
sub
sbb
mov
mov
push
add
xchg
sub
mov
sub
jmp
lock
add
cmp
imull
add
pop
or
out
jp
test
pop
push
jg
inc
or
jmp
mov
aam
mov
aam
sub
ss
out
mov
pop
cld
and
clc
aaa
je
push
cmpsl
sub
xchg
cli
call
pushf
push
fldt
subb
xlat
jb
mov
add
cmp
clc
jl
pop
inc
iret
cmpsb
push
mov
push
sbb
or
add
fiadds
inc
int3
push
cmp
pop
mov
adc
imul
sarl
mov
push
xchg
outsb
dec
out
jle
lahf
xchg
sbb
shrl
div
aam
push
inc
dec
and
loop
filds
mov
arpl
mov
scas
rclb
rolb
cmp
test
orl
xchg
rorl
dec
or
mov
test
jmp
or
lret
inc
outsb
movsl
cmpsl
pop
sbb
test
pusha
sbb
ljmp
mov
adc
cwtl
ss
mov
push
icebp
dec
test
iret
jae
xchg
mov
lea
fyl2xp1
cli
pop
mov
inc
adc
jle
into
aas
mov
lret
adc
and
ljmp
pop
xor
fcmovnbe
push
notb
dec
std
pop
sbb
cmp
dec
fldcw
int
mov
rolb
inc
pop
mov
dec
mov
dec
daa
stos
loopne
mov
dec
in
pop
xor
pop
jecxz
decb
lret
stc
add
sbb
push
sbb
push
and
mov
int
pop
xchg
cmpsb
push
pop
pop
lods
adc
roll
xor
bound
mulb
aad
sub
hlt
cld
out
mov
jle
lret
dec
insb
mov
leave
js
out
jp
xchg
sbb
sbb
mov
shrl
popf
sahf
push
sar
push
hlt
dec
es
pop
xor
sub
sbb
or
cltd
dec
int3
shlb
out
nop
jmp
pop
add
cmp
push
imul
pop
hlt
xchg
adc
std
lret
mov
mov
gs
cmp
orl
add
and
xchg
rorb
in
cmp
dec
fistps
ljmp
rclb
loop
and
maskmovq
divl
xchg
jmp
add
incl
es
mov
cld
and
push
jmp
sbb
lret
inc
out
or
shl
and
mov
jle
jmp
and
ror
enter
std
mov
stc
hlt
lods
or
js
std
jle
mov
jns
jl
xor
dec
out
out
mov
cmp
mov
scas
jle
jmp
nop
cmp
and
int
cmc
inc
aaa
sahf
pop
dec
dec
cmp
das
mov
dec
gs
mov
adc
shll
sar
xchg
jnp
push
dec
mov
cmp
xlat
in
loope
jns
mov
and
shlb
enter
xchg
inc
pop
mov
pop
dec
adc
add
ljmp
cmp
jns
xchg
adc
call
in
pop
push
push
mov
inc
xor
add
shl
jle
adc
sti
fisubs
icebp
jmp
cltd
push
in
dec
sbb
loope
mov
lahf
cs
jp
in
ss
jae
loope
je
std
sbb
clc
and
mov
or
loop
xchg
cld
ds
mov
std
lcall
mov
cs
ret
inc
test
cwtl
clc
roll
aad
fwait
jle
cmp
mov
dec
mov
je
or
jno
sbb
lods
outsb
push
shrl
aam
es
and
mov
sub
dec
inc
xor
sbb
mov
mov
dec
mov
cmp
imul
aas
cmp
cmc
mov
and
dec
or
sub
test
xchg
mov
clc
cmc
jns
push
jno
shlb
aad
lea
lods
push
mov
jmp
sub
push
fs
int3
xchg
push
and
cmp
int
fnstsw
jo
out
lods
mov
mov
mov
mov
lcall
arpl
push
in
stc
repz
inc
int3
push
cmpsl
jmp
push
shll
jg
repz
enter
outsl
adc
xchg
cwtl
es
loope
or
adc
sbb
push
xchg
inc
fcoml
js
jle
rcrb
ljmp
and
jb
xchg
cmc
sti
lock
dec
loopne
test
mov
into
nop
sub
rcll
clc
push
decl
push
gs
xchg
bound
and
cmp
jle
repnz
ret
cmp
aas
inc
lods
sbb
pop
std
pop
subl
gs
dec
dec
shll
cmp
mov
das
mov
lret
cmp
sarl
and
loopne
lea
push
mov
mov
lret
cmp
scas
cmp
and
mov
xchg
test
adc
out
xchg
mov
in
mov
out
imul
adc
imul
mov
mov
mov
adc
cmpsb
loopne
test
faddl
adc
mov
sbb
das
rolb
lods
dec
pop
inc
shlb
mov
pop
insb
mov
sbb
or
loop
and
mov
nop
rclb
push
out
mov
jmp
ss
mov
sbb
outsl
xlat
pop
dec
in
outsl
push
push
push
mov
or
cmp
ss
lahf
insl
mov
lret
lahf
mov
pop
pop
inc
lcall
icebp
mov
stos
push
call
sub
adc
mov
popf
aas
repz
fdivrs
sbb
mov
jne
movsb
pop
gs
cmp
adc
add
xor
pop
aad
add
je
loope
jl
pop
movsl
adc
cmp
sahf
and
inc
cltd
loopne
dec
and
mov
adc
imul
mov
shll
iret
int
jle
add
aaa
out
shlb
jb
fwait
loope
fs
loope
push
mov
adc
mov
sbb
jp
push
inc
inc
sbb
xor
imul
push
pusha
xchg
aam
fs
add
dec
mov
jp
xlat
push
fisttpl
insl
xchg
cli
push
insb
mov
icebp
das
sub
fbld
cmp
push
and
ss
xor
out
jl
pop
test
jae
dec
or
icebp
lret
les
out
jle
jle
mov
in
and
mov
push
mov
fwait
mov
mov
mov
xchg
pusha
xchg
push
adc
pop
cmp
mov
and
leave
adc
cs
lds
loop
lods
pop
stos
es
xor
sbb
dec
jbe
push
es
imul
dec
lods
mov
jecxz
or
sub
in
dec
pop
sub
arpl
jge
outsb
push
dec
sahf
push
inc
and
enter
xchg
in
mov
push
lods
pop
je
or
push
cmp
cs
icebp
mov
xchg
pop
jge
xor
fimuls
out
sbb
leave
aad
fdivrl
fwait
mov
cmp
dec
sub
or
xchg
jecxz
or
cmp
adcl
mov
pop
data16
call
mov
cli
jmp
bound
push
std
pop
xchg
and
daa
sbb
mov
mov
cltd
pop
lds
ret
in
inc
sbb
and
mov
sbb
sub
sbb
sub
pop
nop
lret
or
repz
mov
xorl
adc
mov
xchg
cmc
dec
inc
in
imul
and
fwait
dec
rcll
push
and
and
pop
mov
and
outsb
inc
inc
and
lods
jle
mov
inc
xor
push
insb
pop
mov
pop
ljmp
outsl
xor
xchg
xorl
push
mov
data16
cmp
jbe
stos
xor
sub
xor
lcall
adc
inc
xor
std
in
or
push
xor
add
push
push
and
xor
jne
lock
ljmp
inc
mov
les
mov
pushf
in
sub
xchg
dec
mov
popa
outsb
xchg
cmp
enter
or
mov
rcr
xchg
leave
add
ss
adc
aas
outsl
mov
cmp
clc
sbb
cltd
add
cld
mov
lret
dec
repz
adc
pop
sahf
fdiv
xchg
add
loop
aad
push
mov
xchg
mov
scas
inc
jge
sbb
xlat
cli
daa
jno
dec
lds
and
xor
lret
and
adc
shl
fidivrs
or
mov
cmp
or
pop
sbb
addr16
push
pop
lret
jmp
mov
xchg
sub
int
dec
les
adc
popf
bswap
pop
mov
or
or
js
and
lods
test
lods
jbe
lds
insb
jmp
sub
ret
pop
mov
jne
sbb
pop
int3
imul
sub
inc
jp
dec
fnstcw
add
or
lret
fsubs
inc
out
sub
mov
cwtl
fimull
mov
stos
sub
pop
aas
cmp
popa
cmpb
push
cmpsb
push
mov
pop
jns
bsr
fistps
aam
add
es
in
aas
lock
sbb
and
fst
leave
pop
fistl
sbbb
loope
out
jns
xchg
push
ss
push
hlt
dec
push
out
mov
fistl
movsl
icebp
push
rcll
lea
negl
mov
pop
lock
ja
and
cwtl
sbb
inc
mov
gs
push
lea
cli
mov
push
pushf
scas
popa
test
xor
repnz
test
and
ds
dec
xchg
add
adc
std
add
ss
add
outsl
dec
dec
fiadds
icebp
jp
and
loopne
mov
xchg
jae
rcrb
inc
fmuls
leave
leave
cmp
lea
std
or
sub
jecxz
jo
push
cs
mov
jp
rorl
xor
mov
fimull
or
jle
sub
nop
lret
je
push
pop
sbb
pop
out
in
and
pop
jle
mov
pop
inc
cmp
aaa
fcomps
inc
loope
inc
shr
mov
lods
jbe
cmpb
add
jmp
mov
cmp
fs
fwait
push
sub
addl
ret
and
sar
sbb
loop
js
xchg
movsl
mov
fisttpll
sub
in
ret
sbb
pop
mov
adc
jae
sub
inc
push
or
xor
dec
insl
pusha
push
inc
in
in
inc
rorb
rcrl
out
clc
dec
xchg
into
push
sub
cmp
jle
cmp
sarl
push
mov
dec
xchg
and
mov
insb
sbb
push
dec
cmpsb
mov
out
mov
xchg
les
mov
or
push
pop
frstor
cwtl
xchg
adc
pop
ljmp
sub
mov
sbb
jbe
dec
jge
ret
jge
mov
sbb
add
aaa
add
mov
outsl
sti
xor
imull
ljmp
cld
sub
push
aas
push
sahf
subl
xchg
jmp
rorb
or
rclb
les
pop
mov
enter
jno
hlt
in
push
xchg
jg
movsb
mov
push
in
cmpsb
or
pop
mov
mov
xlat
sti
adc
jl
pop
jo
fsubrs
dec
inc
imul
or
test
xlat
scas
fcmovb
sub
jge
mov
adc
inc
cmp
inc
xor
scas
dec
jge
repz
jg
cmp
mov
mov
adc
push
mov
xchg
iret
insl
pop
push
push
and
jg
xor
shll
ret
popf
icebp
stc
pop
daa
mov
mull
pop
push
mov
fsubs
adc
mov
lea
xor
add
push
aad
sub
sbb
jbe
cmp
push
mov
pop
ja
mov
xchg
loop
mov
push
push
mul
in
jl
pushl
xchg
adc
popa
sub
or
add
sar
add
xor
xchg
lahf
pop
lret
jge
dec
popf
adc
lcall
stos
pop
push
push
fisubl
addb
movl
jle
pop
jp
push
push
hlt
xor
arpl
fwait
or
stos
jmp
mov
in
inc
sbb
lahf
not
sub
add
sti
les
push
dec
pop
clc
lods
mov
outsb
test
inc
or
and
jne
lock
addr16
popf
inc
sub
into
bnd
js,pt
cmp
xchg
lods
jmp
sub
mov
imul
into
dec
icebp
mov
enter
into
cli
fsubs
dec
dec
xchg
jl
and
shrl
pop
xchg
clc
pop
lahf
add
test
jg
hlt
xchg
cmp
lock
ss
dec
lods
repnz
xor
mov
jbe
pop
stos
cld
push
cmp
mov
mov
scas
xor
shlb
adc
in
out
dec
sub
fldenv
dec
mov
push
push
adc
cli
xchg
bound
push
sub
cwtl
insb
shll
cmc
ljmp
test
outsb
out
mov
imul
mov
cmp
pop
or
andb
mov
jge
xlat
inc
inc
xchg
fs
test
inc
xchg
mov
jnp
bound
cmpsl
pop
lahf
fstps
jg
mov
paddb
push
mov
sti
xor
rorb
xlat
arpl
rcl
mov
out
shl
in
mov
imul
cmp
loopne
sub
insl
lret
loope
cmp
or
mov
adc
jne
or
sbb
xor
jb
daa
ret
cmpsl
adc
and
sub
gs
inc
movd
int
mov
push
cmpb
pop
adc
aaa
shll
jl
or
mov
cmp
out
pop
xor
adc
dec
and
jmp
ljmp
and
pop
cmovg
sbb
fs
icebp
mov
imul
ljmp
sub
in
loope
inc
pushf
aad
fisubs
lds
test
dec
mov
scas
pop
xor
adc
lods
aaa
xchg
mov
scas
jo
stos
pop
nop
loopne
dec
cmp
sbbl
scas
jb
andl
sbbb
outsl
or
js
pop
push
ret
adc
mov
cmp
shrb
adc
dec
and
lock
subb
and
jmp
sti
mov
mov
push
add
mov
cmpsl
pusha
xchg
sbb
pop
ja
sahf
add
in
push
and
cmp
repz
or
inc
inc
cmp
cmpsl
add
cltd
es
gs
jp
mov
aaa
pop
and
daa
inc
xchg
dec
shrb
push
imul
jl
ljmp
mov
int3
aaa
fcomps
or
int
mov
dec
push
xchg
lds
lret
fbld
ja
pop
repnz
fnstsw
adc
adc
pop
cld
jo
in
pushf
push
mov
leave
push
loope
std
dec
pushf
and
mov
cs
out
test
add
int
ss
insl
loopne
in
lds
xor
stc
adc
xlat
add
mov
in
fisttps
jae
sbb
rorb
sub
inc
and
mov
dec
push
mov
pop
ficomps
push
adc
out
mov
cltd
popf
inc
lret
in
xor
or
jne
in
sti
dec
mov
loopne
clc
add
std
or
pop
inc
and
es
iret
mov
pop
adc
pop
adc
jb
push
in
xchg
push
lds
adc
bound
jae
adc
sbb
in
xor
adc
sub
jmp
sbbb
lds
push
lahf
adc
sahf
xchg
loop
filds
test
scas
lret
push
shrb
aas
icebp
xor
addr16
xchg
mov
ficoms
sbb
lret
sarl
data16
mov
xchg
lods
cwtl
mov
and
mov
and
in
rcrb
jbe
mov
shrb
dec
dec
clc
fwait
repnz
call
das
ret
adc
or
cmp
add
cwtl
sub
test
test
mov
push
mov
sbb
cmpsb
mov
lods
fistl
adc
in
subb
mov
lds
iret
mov
dec
jb
push
popf
adc
xlat
mov
ja
in
in
jbe
xchg
outsl
add
jno
push
jb
push
ret
shrb
xor
test
push
sbb
push
aam
add
stc
je
pop
popa
fs
lret
sub
mov
popa
sahf
sub
cmpsb
dec
in
dec
jbe
xchg
xlat
pop
iret
mov
cmp
das
pop
or
out
hlt
push
fwait
sbb
sub
sub
mov
dec
push
inc
sahf
push
dec
cmp
or
adc
mulb
push
push
xchg
cs
add
pop
pop
jecxz
mov
pop
jbe
pop
or
hlt
clc
nop
sbbb
mov
aad
mov
imulb
mov
mov
jb
les
xchg
movsl
add
dec
aam
dec
jmp
jmp
roll
dec
lcall
pop
jmp
test
sbb
testl
sub
fsts
push
sbb
aad
xchg
mov
test
scas
xchg
cmp
jne
mov
insb
out
fsub
testb
loope
loope
cs
cmpsb
adc
out
lods
fldt
or
call
fiadds
pop
mov
xchg
sbb
fs
inc
xor
repnz
aad
jmp
jp
mov
jo
inc
jne
push
mov
inc
pushl
cmp
mov
mov
mov
and
jle
jbe
sub
dec
data16
xchg
dec
pusha
adc
xor
push
and
xchg
pop
pop
mov
cs
push
les
bound
repnz
and
xchg
pop
inc
imul
cmp
and
fidivs
or
ljmp
pop
sbb
push
dec
fiadds
lahf
cmp
push
xor
inc
xchg
mov
xor
inc
pop
imul
mov
loop
movsl
push
xchg
test
push
pop
mov
and
int
mov
pop
hlt
mov
sbb
addr16
jp
cmp
jge
and
pushf
popa
wrmsr
mov
insl
sarb
das
add
cs
popa
sbb
pop
cmpsb
rorl
ljmp
add
lahf
or
out
pop
mov
sti
insb
or
imulb
cmpsl
jecxz
shrb
mov
icebp
in
jl
mov
lods
je
mov
popa
dec
cmp
sbb
pusha
es
or
out
jne
inc
mov
in
sbb
or
and
xchg
push
gs
push
xchg
data16
lret
xor
out
inc
push
jo
pop
dec
xchg
pop
push
imul
or
add
lea
es
or
lret
rcl
dec
dec
mov
mov
aad
pushf
add
xor
mov
sbb
pop
syscall
dec
push
ret
cmp
mulps
jns
mov
push
lods
leave
stos
pop
push
adc
fnstenv
into
push
dec
xor
xor
int
mov
xor
mov
hlt
sub
loopne
and
pop
out
out
and
xchg
out
adc
push
cs
jbe
aaa
or
pop
dec
lods
or
sahf
mov
out
lock
das
std
frstor
or
and
shlb
xchg
cmc
bswap
mov
fisttpll
and
and
cld
mov
sub
lcall
fucom
jo,pn
out
dec
xor
mov
lret
out
test
arpl
fnstenvs
in
clc
fidivrl
adc
daa
jo,pn
arpl
test
push
out
dec
xlat
flds
movl
cltd
and
aaa
mov
push
pop
ret
divb
int
fidivl
imul
mov
hlt
xorb
xlat
mov
es
push
gs
scas
push
inc
stc
mov
test
addl
push
pop
add
xlat
xor
push
ljmpw
inc
aaa
addb
jnp
lret
int3
or
and
test
or
xor
xchg
jae
stos
mov
rcrl
lcall
shrb
daa
popa
pop
pop
and
push
push
popa
inc
xor
mov
mov
adc
or
mov
sbb
lds
or
mov
aad
lods
mov
push
pushf
inc
cs
mov
rcll
test
aam
lock
mov
and
ficomps
dec
sahf
imull
loopne
xor
out
leave
stos
cmc
push
mov
cmp
insb
sub
shl
cmp
mov
sahf
movsb
movsb
jb
xor
testb
mov
es
inc
xchg
xchg
in
mov
test
pop
mov
or
das
mov
mov
pusha
rcll
pop
sub
cli
jb
fidivrs
pop
push
imull
or
test
xor
push
mov
pop
inc
inc
xchg
dec
fstps
xchg
mov
add
push
sysret
mov
xor
cmpsl
xchg
adc
cmp
test
sbbl
mov
arpl
cmc
and
pop
push
lret
popa
pusha
mull
lahf
mov
data16
add
scas
sbb
sub
add
aas
mov
repz
fldenv
mov
cmp
push
popa
sub
dec
pop
inc
cmp
mov
popa
mov
cmp
xor
adc
xchg
ljmp
aaa
cmp
inc
sbb
pop
addr16
mov
adc
sbbb
mulb
gs
jmp
test
fiaddl
mulb
test
fwait
dec
inc
daa
xor
sahf
or
mov
stos
bound
ja
in
fbld
xor
jno
cmp
add
aaa
xchg
and
dec
sub
notl
fmul
push
in
add
jmp
xchg
dec
jg
mov
insb
fildl
cmp
mov
insb
aam
mov
lds
ja
outsb
xlat
add
stos
sub
loope
push
arpl
lea
daa
cmp
iret
and
xor
xor
clc
xor
mov
sbb
aad
mov
push
and
jle
mov
jns
rorl
cs
std
lcall
jmp
cmp
ss
dec
jmp
cltd
jne
ljmp
sub
vpshufd
ss
and
mov
dec
ret
add
jno
and
or
imul
fisttps
aas
mov
ja
mov
hlt
pop
insl
fsts
sti
lds
or
cld
xchg
jp
xchg
mov
insl
lcall
divb
outsb
ds
scas
push
jbe
push
sub
aam
aad
cmp
mov
jb
jle
test
jne
cmpsb
or
push
add
mov
insb
push
test
cmp
pop
ja
pop
pop
aas
jle
jmp
fisttpl
int
pop
adc
mov
in
mov
xchg
pop
jle
adc
xor
adc
outsb
lods
jae
jne
cmp
and
push
test
cs
aam
mov
std
dec
cmp
pushf
enter
push
jno
mov
mov
sbb
push
shll
in
xor
xor
fsubrl
scas
inc
sbb
xor
sbb
add
sbb
lret
or
fcoms
test
inc
stos
mov
mov
and
mov
and
sbb
jle
add
sub
pop
xor
and
sub
pop
js
pop
shll
dec
icebp
pop
cmp
imul
cmp
pop
xor
cmc
xor
orb
mov
add
aad
sbb
push
cmpb
lock
out
movb
cs
dec
sub
outsl
jnp
add
and
adcb
or
pop
stc
xchg
push
test
leave
cmp
xor
jne
cmpl
jno
xchg
fucomi
push
adc
in
and
sub
leave
mov
push
int3
xchg
popa
in
mov
popf
cltd
jmp
pop
test
mov
in
sbb
pop
fwait
cmpsb
popa
sub
sub
push
cmc
mov
cmpsb
jo
loope
addr16
aaa
ficoms
or
adc
sub
in
dec
cmp
jg
insb
es
repnz
or
data16
mov
push
inc
cmc
add
addr16
and
into
rorl
xchg
repnz
leave
outsb
cmp
jns
leave
lea
lahf
icebp
std
mov
iret
inc
xchg
mov
dec
cli
lret
fdivs
sbb
lods
push
fnstcw
dec
je
cmpl
fisubrl
into
imul
sub
inc
movsl
xchg
dec
mov
lods
outsb
in
push
sbb
mov
loop
xlat
insl
mov
out
sub
sub
imul
das
xchg
sub
push
pop
adc
push
daa
bound
shll
movsl
push
xchg
mov
and
test
loopne
movsl
lds
jp
cmp
mov
loope
and
dec
sbb
filds
cmp
ja
lods
lret
cmp
fidivs
xor
adc
dec
mov
arpl
in
mov
stos
out
sub
out
lods
xchg
and
repnz
pop
or
cmc
stos
pop
repz
xchg
stc
lock
imul
add
cmp
lahf
xchg
ret
scas
push
ja
jl
xor
imul
lcall
in
hlt
scas
in
aas
add
mov
xor
ss
popa
jmp
lret
mov
or
add
pop
jnp
scas
push
sub
sti
shll
lea
pop
cmpb
and
notb
enter
ss
sbb
ja
dec
cmp
pop
dec
and
mov
mov
fistpl
nop
inc
imul
inc
sbb
jl
xchg
scas
je
fcoms
je
lcall
mov
adc
pop
cltd
lret
aas
mov
clc
pop
es
loope
mov
out
in
idivl
add
gs
lret
fs
movsl
pop
jmp
and
dec
add
adc
cmp
js
jle
cmp
pop
mov
nop
jae
fdivs
into
add
jbe
jo
mov
jge
lret
xor
jns
mov
xor
mov
mov
push
shrl
pop
add
or
push
sub
gs
pop
inc
jae
dec
mov
cmpsl
push
addb
push
cli
mov
lret
sahf
add
inc
sbb
shlb
test
jmp
push
mov
jno
addl
shlb
rclb
loope
scas
bound
sbb
or
call
jge
inc
scas
xchg
jae
inc
xor
fwait
scas
sbb
loop
cmp
mov
cmp
ffree
push
or
or
xor
fadds
lahf
push
jnp
sarb
cmp
test
xchg
sub
push
xor
outsl
mov
mov
and
cmp
mov
jp
inc
sarl
xor
inc
adc
push
scas
pop
movsb
sar
stos
lcall
xchg
sbb
daa
push
mov
add
push
fwait
and
cwtl
and
add
js
subb
adc
push
xor
dec
add
jle
push
out
dec
clc
ret
and
andl
test
dec
fnstsw
sbb
mov
scas
js
or
roll
test
fisubrl
sahf
jmp
test
xor
sub
lret
sbb
adc
push
outsl
inc
jecxz
sti
scas
bound
push
lret
pop
jne
xchg
inc
mov
aaa
call
fsub
lods
adc
ss
or
mov
loopne
mov
js
xchg
pop
imul
ja
repz
insb
mov
lcall
sub
jp
pop
test
push
sbb
inc
add
or
add
in
mov
push
push
in
adcb
jmp
into
pop
sbb
dec
lock
loop
loop
rcll
imul
std
popf
jne
cs
cmpsl
mov
movsb
jp
sbb
cs
push
or
incl
mov
outsl
or
mov
mov
popa
lret
pop
orl
jb
adc
cld
pop
test
shrl
mov
clc
xor
popa
negl
cmp
sub
and
or
xor
xchg
lods
push
xor
xchg
ljmp
test
or
xchg
std
fwait
jg
subb
xor
mov
jnp
pop
dec
jg
add
or
and
pop
addr16
xchg
mov
jno
les
sub
out
stos
stos
push
int3
adc
and
adc
inc
addb
fsub
fisubs
hlt
push
cmp
inc
adc
sub
xor
xlat
dec
push
decb
dec
push
fxch
js
ljmp
lods
add
or
jnp
adc
jno
push
fistpl
scas
adc
mov
push
adc
icebp
xorb
int
mov
xor
pop
pop
cltd
or
dec
daa
outsb
lret
scas
daa
dec
pop
test
je
jge
sub
stos
add
cmp
xor
iret
push
jns
mov
mov
leave
fimull
aas
sub
data16
jno
mov
jns
jnp
xor
in
iret
daa
sbb
or
or
cmp
data16
nop
push
in
out
push
adc
iret
adc
sub
or
jae
xchg
or
sbb
push
scas
jecxz
pop
negb
jbe
dec
xchg
jae
inc
cmp
iret
in
nop
cmp
aad
shrb
mov
sbb
outsl
ljmp
loopne
shl
outsl
leave
add
cwtl
imul
stos
pusha
imul
jge
push
bound
nop
dec
pop
push
inc
sti
fwait
imul
cltd
fisubl
pop
pop
xchg
add
push
adc
sub
xchg
repnz
loopne
pop
dec
or
jns
mov
ror
cwtl
loopne
push
adc
fwait
cltd
bound
sbb
movsl
test
outsl
adc
rorl
sub
sbb
dec
hlt
mov
pop
or
in
mov
xor
data16
push
xor
mov
xchg
data16
das
stc
sub
out
sar
cmp
inc
aas
inc
mov
scas
movsl
sbb
or
loope
xlat
push
pop
popa
rcll
mov
lret
sbb
mov
sbb
mov
push
sub
pop
shr
sarl
popf
push
push
stc
mov
fsubrl
lds
inc
sub
ja
adc
xchg
mov
shll
es
sbb
xchg
mov
push
pop
test
insl
lret
lcall
repz
popa
dec
inc
inc
push
xchg
pop
andb
xchg
xor
sbb
inc
les
imul
push
adc
js,pt
or
out
ret
add
jbe
pop
lock
mov
mov
dec
aam
xchg
bound
pushf
imul
mov
and
insl
xchg
repnz
ds
and
push
aad
mov
xchg
jecxz
cmp
aam
fldl
cs
jae
rorb
ljmp
lock
jb
pop
inc
pop
gs
cld
test
jecxz
xchg
sub
pop
jno
sbb
xor
into
xchg
xorb
scas
mov
and
inc
sbb
mov
add
in
dec
push
or
push
xor
pop
sub
pop
push
cmp
jo
pushf
lcall
idivb
scas
pop
mov
lea
or
outsb
adc
or
loopne
shr
in
cld
mov
in
pusha
aaa
sub
std
mov
fdivrs
rolb
pushf
xor
dec
cld
pop
xor
xlat
push
sub
xchg
movsb
or
sub
xlat
jns
fadds
mov
stos
lahf
sub
push
xor
xchg
pop
cmp
loope
in
and
mul
mov
lock
fildll
popa
clc
lds
lds
repz
fwait
hlt
std
bound
xchg
sub
leave
push
bound
aas
xlat
pop
test
add
push
push
popa
andb
mov
int
pop
addl
nop
out
jp
test
push
pusha
push
movsb
lods
fstpl
sub
mov
stos
fsubrp
mov
fs
fldt
loop
and
arpl
dec
shr
sub
sbb
inc
xorb
xchg
sbb
adc
arpl
out
jl
cs
lea
dec
clc
xorl
pop
lods
mov
sbb
adc
adc
shlb
mov
xor
shl
enter
mov
inc
sbb
pop
and
stc
sahf
inc
aaa
or
lds
push
and
in
cmova
shrb
mov
or
scas
aad
adc
outsl
ds
clc
imul
fbld
jmp
and
push
add
xor
jnp
outsl
sahf
xor
and
xchg
ljmp
push
loopne
call
push
dec
pcmpeqw
dec
sub
cmpsb
mov
lods
aad
negb
sub
and
iret
ret
ljmp
adc
add
jo
movsb
mov
hlt
call
popa
add
jmp
int
or
hlt
sub
fdivrl
into
jp
rclb
xor
xchg
sub
mov
cmp
cmp
mov
push
shlb
or
pop
hlt
imulb
popa
push
push
call
fwait
hlt
stos
das
inc
lea
sub
jae
or
adc
testl
mov
sti
cmp
aad
icebp
in
adc
call
lahf
add
pop
fs
ret
mov
aaa
dec
mov
pop
insl
inc
add
sbb
or
int
adc
mov
int
les
jl
xor
loop
mov
xor
bound
stc
cmp
xchg
imul
rcll
mov
test
lock
dec
sbb
rorb
dec
sbb
mov
sbb
push
imul
lea
xor
and
sub
shlb
mov
inc
out
sub
cmp
fmuls
pop
je
adc
sub
out
enter
push
mov
jno
push
enter
fwait
mulb
loope
jns
inc
mov
jbe
inc
stos
aam
sub
sbb
sbb
out
pushf
push
mov
and
mov
jns
lcall
add
iret
push
ret
sub
jl
ret
gs
push
negb
ret
cmpsb
shll
or
mov
push
pop
lcall
mov
xchg
jge
call
xchg
xor
mov
lcall
bound
cs
push
cmovb
popf
and
and
fisubrs
movsb
icebp
imul
lods
scas
das
sahf
scas
and
inc
dec
sub
jecxz
pop
mov
push
imul
sub
subl
cwtl
int
ds
inc
daa
xor
dec
ret
fwait
cltd
xor
ja
xchg
or
mov
mov
mov
into
sbb
sti
add
mov
mov
or
movsb
mov
jg
aam
lcall
sub
outsl
xchg
xchg
pop
inc
loope
pop
lock
les
jle
addb
push
int
jle
jle
mov
adc
cmpsl
mov
pop
loop
pop
shrb
ljmp
int
test
in
xor
inc
push
dec
std
insb
sbb
jae
pop
arpl
nop
stc
cmp
push
add
test
insb
les
dec
gs
jae
jno
movsb
and
scas
mov
xchg
sbb
mov
add
bound
mov
mov
mov
lahf
bound
jmp
sbb
mov
add
jge
clc
cmp
jb
lock
test
add
push
sbb
mov
cmp
test
cmp
iret
jnp
icebp
idivb
or
or
pop
in
xor
rorl
lds
fdivrl
outsl
adc
jl
imul
and
hlt
xor
std
js
dec
mov
jmp
sub
int
cmp
jne
out
clc
jne
iret
add
ss
and
insl
sbb
out
fstps
stos
lds
test
mov
sahf
mov
in
pop
add
xchg
jne
js
js
cmp
fs
sbb
dec
data16
loope
loopne
movsb
stc
inc
push
std
mov
add
sub
push
out
mov
fcomps
ret
mov
adc
imul
xor
shll
push
leave
andb
adc
sarb
imul
pop
lock
mov
testb
cltd
hlt
dec
clc
xchg
xor
mov
lock
pop
push
sbb
add
ss
cmpsb
sub
push
xor
lods
mov
icebp
std
lds
or
insl
cltd
dec
add
orl
dec
prefetch
movl
mov
mov
mov
mov
jns
pop
jmp
cmpsl
pushf
pop
mov
cmp
sbb
fmull
pop
and
or
int3
mov
dec
dec
ljmp
stos
dec
push
daa
inc
icebp
movsb
cli
movsb
in
sub
iret
inc
shlb
and
imul
mov
or
xchg
js
mov
push
xor
out
test
pop
mov
mov
cld
shlb
adc
cld
in
in
scas
out
inc
mov
enter
jnp
push
or
xchg
gs
pop
jb
stc
lds
and
mov
addr16
mov
popa
pop
lret
adc
xchg
inc
sar
inc
fbstp
pop
iret
es
jb
cmpsl
cmpsl
out
pop
pop
and
repz
pop
cmpsl
xchg
and
dec
inc
js
into
adc
cmp
pop
rorl
pusha
imul
jecxz
idivb
pop
lret
js
es
inc
sbb
rorb
aaa
and
mov
addb
push
mov
mov
jg
sbb
or
roll
fidivrl
leave
lret
xchg
fbld
inc
mull
fwait
les
pop
test
lods
insb
or
dec
jb
out
cltd
inc
clc
call
push
and
jecxz
xor
mov
add
sbb
outsl
inc
or
add
xorl
push
mov
pop
fs
cmpsb
xchg
mov
mov
jb
cmpsl
or
and
adc
sahf
mov
mov
adc
and
sub
cli
and
pop
push
es
pop
sbb
out
mov
enter
sbb
movsb
stos
mov
mov
sub
lahf
call
adc
adc
jmp
fsubrs
xor
lcall
push
mov
int
not
call
int
sub
dec
xor
push
mov
movsb
mov
mov
mov
jg
xor
and
xchg
adc
push
or
popf
sub
jns
jne
cmpsl
mov
inc
push
lock
jno
sub
cltd
mov
enter
add
adcl
pop
xlat
jle
cli
inc
pop
xor
sub
in
push
insb
movsl
mov
fcoml
pusha
mov
lock
daa
add
sahf
out
pusha
shr
inc
dec
fimuls
sbb
dec
lods
in
rorb
mov
decl
add
xchg
hlt
ljmp
enter
repz
rorl
lods
int3
mov
lods
test
int
or
nop
rorb
sahf
dec
clc
push
adc
sub
imul
adc
or
repz
daa
jno
fucom
loopne
mov
push
ds
jle
out
add
push
gs
mov
jmp
ficompl
pop
insl
stc
das
out
xor
fbstp
sbb
addr16
test
mov
lcall
in
push
int
sti
cmp
and
int3
aam
push
jae
shll
roll
xlat
mov
scas
jmp
mov
popa
inc
jl
xchg
lea
adc
xchg
iret
inc
fwait
xor
and
fimuls
dec
call
mov
inc
pop
ret
mov
outsl
add
lods
pop
hlt
shll
fbstp
cltd
mov
add
inc
ftst
hlt
enter
cmp
cmpb
nop
xchg
test
mov
ja
mov
sbb
and
xchg
lret
fcomp
push
sarb
ret
mov
lret
das
outsl
jge
inc
int
mov
cmp
ja
cmp
push
sahf
xor
shlb
and
dec
dec
lret
cmp
or
loope
and
in
aad
stc
cmp
push
addr16
xchg
mov
jbe
mov
nop
xchg
loopne
pop
jmp
jae
outsl
or
lods
add
ror
or
cld
xchg
fidivl
xchg
jnp
movsb
cltd
hlt
push
femms
push
je
fisttpll
inc
pop
sbb
push
pop
outsb
and
sbb
repnz
cmp
sbb
cwtl
pop
pop
cs
repz
movsl
hlt
jno
fistpl
stos
jge
bound
popf
push
stos
fwait
rep
pop
in
sub
jg
sbb
adc
and
imul
test
les
daa
inc
movsl
mov
pop
in
test
fisubrs
clc
std
add
cmp
out
divps
ja
fs
ret
xor
push
and
adcl
mov
xchg
dec
mov
fldcw
dec
pop
sub
imul
loopw
into
imul
xchg
dec
dec
fidivl
loopne
push
adc
push
imul
cmp
cld
data16
cmp
inc
int
ret
lcall
rcl
ja
or
jb,pt
lods
inc
shlb
inc
cmpsb
clc
sub
adc
jl
push
push
int3
and
jg
adc
call
fisubrl
call
mov
cld
subb
or
das
das
lds
sar
cmp
movsb
adc
lret
stos
xchg
mov
pop
mov
jp
sub
out
mov
comiss
inc
cmp
movsb
add
out
out
xchg
out
push
mov
add
or
cwtl
test
dec
or
add
mov
test
pop
test
arpl
iret
mov
jge
gs
cmp
lods
dec
pop
int
insb
dec
loop
lds
jge
inc
and
or
gs
fcom
push
mov
mov
jbe
bound
cltd
loope
ret
mov
scas
mov
cmp
fldenv
loope
dec
dec
mov
adc
daa
mov
dec
adcb
sarb
mov
clc
icebp
xchg
out
adc
adc
push
xor
push
push
lcall
clc
insl
mov
or
outsb
fwait
push
shl
mov
das
or
push
stos
loope
sub
mov
jp
loop
dec
mov
dec
lods
sub
popf
cld
jmp
ret
pop
sbb
sbb
mov
fcoml
faddl
js
sbb
inc
out
add
adc
int3
psubusw
dec
adcb
outsb
outsb
push
xchg
mov
repnz
out
test
das
arpl
leave
sahf
push
movsl
push
cmpsb
xor
cmp
loopne
cmp
jns
pop
xchg
jg
sub
dec
imul
jge
sub
cli
popf
dec
hlt
xchg
xchg
aas
pslld
mov
aaa
xchg
sysexit
xchg
and
rorb
xchg
mov
jne
fnstsw
nop
mov
loopne
pop
or
test
insb
insl
mov
insb
outsl
mov
das
sbb
or
les
cmp
fcompl
xor
xor
fnstcw
out
enter
dec
pop
aam
adc
jne
fldt
push
dec
pop
xor
js
xchg
insb
test
mov
sar
xor
or
in
adc
mov
mov
add
imul
bound
and
xchg
jg
cmpsl
cmpsl
jg
aaa
nop
bound
jecxz
sub
jnp
outsb
jnp
aas
jg
lret
mov
rcrb
xchg
pushf
jmp
mov
gs
xor
add
add
mov
data16
mov
jae
inc
or
movsl
or
and
mov
inc
dec
pop
out
in
call
lods
enter
stos
in
fidivrs
push
sbb
sbb
mov
test
pop
imul
out
test
xlat
popa
mov
push
jb
inc
shr
pop
jl
pop
or
pop
shrb
lods
sub
jne
mov
jl
into
add
mov
inc
pop
adc
rolb
out
out
xor
test
push
not
lahf
ret
outsb
jp
loope
sbb
pusha
pop
dec
lea
decl
rcrb
in
ffreep
mov
cmp
faddl
dec
cs
sbb
test
loope
aam
adc
nop
clc
ss
in
dec
push
scas
sbb
lret
jecxz
fstps
nop
std
pop
sarb
mov
js
divb
push
xchg
popf
in
inc
push
push
xor
shrl
fstpl
jns
das
rcrl
lcall
into
decl
jecxz
call
mov
insb
es
popa
in
cmp
in
shl
inc
sbb
orl
mov
test
imul
xchg
popa
xchg
xchg
cmpsl
adc
ret
xor
not
sbb
fucomi
or
pusha
dec
jb
sbb
push
aad
shlb
sbbl
lcall
adc
outsb
or
xor
sub
lea
push
xlat
shll
mov
xchg
and
xor
fisubrs
lods
adc
out
inc
aam
imulb
mov
daa
pop
sbb
jnp
jmp
cmc
push
inc
ret
xchg
and
pop
push
scas
aam
insl
cmp
jb
add
cld
push
int
divl
xchg
xor
mov
into
cmp
jl
cmp
test
call
sti
mov
push
inc
cmp
inc
fs
imul
sub
add
or
fisttpl
jno
cmp
in
mov
fwait
or
cmpsl
xor
xchg
push
jns
mov
xor
test
lds
xor
mov
inc
xor
inc
popa
divl
xlat
mov
lahf
icebp
xchg
mov
inc
and
xchg
rcr
add
stos
call
pusha
push
dec
sub
inc
xchg
jmp
out
rcrb
push
fstp
mov
and
jae
sbb
aam
loop
inc
fnstenv
call
sbb
enter
jno
jo
or
fimull
mov
aaa
jmp
in
divb
mov
loopne
test
data16
xor
pop
or
rol
repz
daa
arpl
test
cmp
faddl
sbb
notl
clc
lcall
lret
je
sbb
lds
inc
rcll
mov
sbb
int3
iret
inc
xchg
call
jnp
negb
cmp
ja
add
adc
mov
inc
outsl
cmc
jns
adc
fdiv
jl
mov
cld
or
sbb
sub
leave
lods
nop
ret
jl
pusha
pop
push
das
cmp
test
hlt
mov
movsl
enter
add
xchg
mov
mov
hlt
mov
stos
call
sub
sub
jl
push
or
and
aas
and
xchg
sbb
xchg
mov
dec
cltd
gs
aad
iret
lods
mov
mov
pop
jmp
push
push
pop
lods
cmp
pushw
leave
loope
mov
mov
push
ljmp
fs
push
sbb
ds
aad
andb
std
lret
mov
jno
push
mov
es
adc
gs
je
pop
push
push
cmpsb
psubd
out
out
inc
xor
or
aad
popa
icebp
outsb
into
and
or
mov
jb
and
xor
sbb
mov
imul
pop
cmpsb
mov
xchg
cmpunordps
aad
mov
inc
xchg
aas
cwtl
shl
mov
shlb
outsl
jecxz
repz
pushl
fwait
mov
fildl
lcall
sbb
mov
test
test
xchg
in
sub
ret
cld
xor
add
jp
or
cmp
push
test
jmp
pop
jle
pushf
push
cmpsl
addr16
scas
jle
or
mov
and
push
ds
outsl
jge
sbb
in
xchg
xchg
addl
loopne
sarl
adc
sbb
pop
sub
jb
lret
sbb
out
lahf
push
and
in
js
pop
xor
ljmp
lret
div
mov
cmp
mov
add
sub
mov
jns,pt
push
push
sbb
adc
test
stos
mov
or
mov
addl
test
data16
fs
and
and
fidivl
inc
push
and
sahf
add
pop
push
add
pop
xor
cmpsb
mov
and
cmp
call
fdivr
xlat
inc
sbb
js
cmp
movsl
daa
out
xor
sub
mov
jmp
dec
mov
notl
imul
jae
sbb
scas
jge
mov
shrb
push
loop
adc
jge
or
mov
adc
dec
xchg
mov
divl
cmp
mov
ret
aam
gs
insb
ficomps
out
jmp
dec
mov
cmp
or
adc
push
test
push
enter
inc
push
out
ret
push
nop
shll
xor
ret
mov
jns
movsl
lods
jge
test
add
or
jbe
add
push
mov
out
dec
in
mov
ds
xor
insl
jge
mov
movsb
mov
pop
inc
xor
gs
test
sub
mov
sahf
or
jmp
lret
ds
xchg
dec
adc
xor
xor
mov
push
add
pop
sbb
lds
sti
mov
bound
mov
in
xchg
pop
repnz
data16
or
adc
sub
mov
neg
movsl
cmp
push
jl
cmp
cmc
xchg
test
pop
adc
repnz
mov
mov
push
add
ret
fildll
repnz
xor
les
jns
and
push
loop
insl
xchg
insb
fwait
in
mov
fnstsw
hlt
mov
cmp
xor
pop
pop
into
repz
sub
pop
mov
insb
xchg
rorb
jl
xlat
mov
and
pop
jno
or
shlb
sbbl
scas
mov
test
int3
adc
cmp
enter
sub
pushl
push
sahf
lret
rorl
dec
call
or
mov
in
cwtl
dec
ss
adc
lds
adc
outsb
xchg
pop
fistl
xor
xchg
ds
cmp
enter
cmpsl
testl
pop
fwait
xlat
jnp
or
and
push
ret
and
sahf
adc
test
jno
movd
mov
lret
mov
adc
cmp
xchg
push
lret
xchg
or
sub
repnz
or
test
mov
jno
test
fcmovu
xchg
int
push
ljmp
dec
add
aaa
fsubl
xchg
ds
pop
and
jns
sahf
add
lahf
cmp
add
jno
push
inc
mov
mov
push
jmp
fimull
inc
push
shlb
jg
pop
cmp
sbb
ret
xchg
mov
dec
ljmp
rcl
out
and
lret
fadd
add
mov
repnz
in
lret
fcomps
mov
ds
data16
mov
sbb
cmp
or
mov
std
in
scas
sbb
sub
push
dec
aad
ret
xchg
sub
divl
adc
push
dec
mov
sti
lods
idivl
js
aam
popl
jns
iret
push
les
int
neg
fisubs
sub
mov
xor
jmp
mov
daa
out
pop
xchg
loop
add
add
pop
ficomps
and
out
cmc
mov
in
xchg
das
js
cld
cmpb
mov
sbb
negb
or
add
out
cmc
inc
sti
dec
jb
xchg
cmp
xor
int
arpl
push
xchg
sub
daa
sub
ljmp
sub
inc
cmp
test
mov
addr16
adc
sub
push
repnz
jne
stc
scas
lcall
xchg
inc
and
push
clc
push
jge
dec
mov
pop
aaa
jae
adc
mov
mov
or
imul
pusha
and
insb
push
sbb
nop
hlt
adc
mov
sahf
scas
push
jecxz
and
addl
je
mov
sub
pop
jb
mov
jo
jb
shrb
flds
cmpsb
nop
stos
xor
sub
insb
out
jae
cmp
test
cwtl
lods
call
jnp
push
data16
adc
cmp
repnz
jne
mov
iret
push
iret
lock
jb
xor
xor
xchg
test
adc
mov
mov
leave
cltd
jmp
adc
cmp
xor
adc
push
inc
lcall
pushf
pop
jmp
mov
mov
mov
cmp
stos
jae
mov
mov
pop
cmpsb
dec
or
out
xorl
sub
stos
int3
addr16
fbstp
lret
add
dec
fwait
sbb
imul
or
jnp
clc
cli
insb
in
popa
cmpsl
out
rorb
bound
mov
xchg
sbb
es
jl
mov
mov
fwait
pop
jae
fimull
pushl
lods
leave
aaa
ror
jbe
jg
cld
jbe
mov
ret
popf
jne
mov
subl
loope
mov
jp
cmp
sbb
mov
andb
loope
push
mov
lcall
jg
leave
xchg
xchg
cs
hlt
mov
xor
and
jg
mov
fsubrs
mov
add
aaa
push
push
leave
push
dec
aad
cmp
xlat
dec
adc
jmp
fimuls
xor
dec
gs
xor
pop
imul
clc
lods
jnp
jno
aam
xlat
inc
pop
add
jle
jp
sbb
ret
jecxz
pop
cmpsb
das
shrl
pop
xor
jmp
js
and
das
test
fcmovb
dec
jecxz
jp
lret
push
xchg
pop
lcall
cmc
lcall
sbb
inc
push
adc
sbb
fs
add
outsl
xchg
jg
das
mov
push
inc
fnstcw
inc
cmp
mov
hlt
mov
dec
sub
dec
mov
ljmp
scas
fmulp
das
push
shrl
push
cwtl
in
inc
stc
jecxz
cmc
ds
insl
cmp
sbb
imul
ds
add
int3
outsl
out
cmovle
jbe
pop
out
add
inc
pop
mov
mov
inc
shll
scas
inc
xchg
add
or
adc
push
fucomip
sub
std
jge
add
cmc
or
scas
fwait
and
push
rcrb
pop
out
inc
aas
sbb
rol
adc
gs
fbstp
aas
fisubrl
dec
aas
aad
dec
movsl
xchg
sbb
stos
push
inc
xchg
add
std
leave
adc
push
xchg
fistpll
stos
loop
mov
fnstenv
pop
push
fmulp
inc
es
or
and
and
mov
pop
add
ret
xor
jo
pop
mov
repnz
fsub
adc
lahf
jl
bound
inc
aas
jne
pop
mov
fnstsw
fists
adc
dec
movd
adc
xchg
and
sbb
push
nop
cmp
add
and
xlat
cmp
repnz
lret
out
jg
lods
stc
ds
inc
in
cltd
out
mov
or
lods
cli
mov
add
sarb
push
jecxz
push
sbb
and
ret
aam
push
push
imull
pop
mov
pop
pop
rol
movsl
pop
out
outsb
adc
sub
in
add
pop
pmuludq
aas
xchg
cwtl
push
fidivrl
jbe
cltd
fidivrl
je
lods
dec
xor
sbbb
movb
cmp
fwait
sub
inc
insl
divb
jae
lea
lods
into
ja
ljmp
sbb
cmp
pop
xor
jbe
fiadds
push
lahf
inc
dec
iret
jmp
out
scas
fwait
mov
popf
inc
fldt
js
adc
arpl
incb
pop
or
jne
adc
mov
loopne
sbb
imul
es
adc
nop
divl
lds
pop
xor
inc
mov
push
shr
lock
fistl
push
shll
inc
add
mov
pop
dec
mov
vrsqrtps
cld
or
aaa
sti
pusha
mov
imul
aam
adc
arpl
sub
push
inc
mov
dec
and
loope
push
dec
push
shrl
es
aas
mov
or
dec
cwtl
xor
aam
mov
adc
stos
mov
shrb
popa
pop
sub
cmp
and
cmpsb
fmuls
es
adc
cmp
mov
mov
mov
daa
rcrl
xchg
stc
jge
inc
ret
repz
jmp
mov
std
and
rcrl
subb
or
add
fsubrl
inc
and
pop
xor
repz
int3
jae
lds
pop
stos
xor
out
loop
test
aas
xorb
insb
sub
nop
mov
test
push
negl
mov
lret
fstpt
in
outsl
dec
movsl
jp
clc
push
in
js
addr16
cmp
fmull
lock
repnz
stos
jbe
mov
scas
or
dec
in
cmpsl
popf
out
add
inc
add
stc
in
sbb
lahf
and
out
ss
mov
leave
mov
mov
xor
dec
lcall
pop
lods
mov
sarb
dec
mov
push
cmp
loope
mov
and
out
orb
pusha
pop
stos
int
adc
sbbb
add
pusha
pop
fstpt
data16
push
mov
fstpt
test
insl
fcom
mov
jb
sbb
xor
pop
mov
push
or
in
mov
mov
mov
or
mov
sbb
mov
idivl
mull
ret
cs
jno
xor
push
scas
rorl
imul
push
fmull
jbe
popa
inc
xchg
stos
or
ja
out
push
bound
jbe
add
stc
scas
loope
daa
aam
add
lret
cmpsl
inc
leave
adc
cmpsb
cld
push
out
jp
enter
loope
out
push
ljmp
mov
mov
adc
mov
or
idiv
out
jp
rolb
adc
push
cmp
cmp
and
idivl
scas
in
cmp
or
stos
lret
subb
mov
xchg
lret
pop
mov
rclb
lahf
push
cld
pop
jl
ds
in
xlat
mov
or
inc
or
or
out
jl
das
push
testl
mov
rorl
test
push
mov
add
mov
jge
stos
sub
shr
xor
or
or
loop
into
aam
sbb
pop
or
mov
push
cmp
cmpsl
out
aaa
and
mov
jg
xor
mov
or
cmp
xor
dec
int3
mov
loop
dec
inc
xor
push
test
push
scas
scas
in
mov
mov
jge
fisttpll
mov
ds
mov
int
mov
jb
pushf
dec
aaa
loope
sub
and
adc
jl
cltd
add
call
dec
cmc
add
dec
inc
bound
mov
cmp
fucomp
cmc
shrl
and
andl
int
pop
inc
push
and
jg
test
and
and
adc
andb
and
repz
mov
dec
sbb
mov
xorl
jbe
je
mov
fs
mov
ret
loopne
mov
ret
dec
xchg
mov
sahf
jnp
push
inc
stc
inc
dec
jg
cmp
pushaw
lahf
mov
mov
jmp
jmp
cmc
lret
insb
or
jb
xchg
lods
jb
stos
or
inc
push
adc
inc
adc
js
mov
xchg
addr16
mov
iret
cli
mov
test
mov
xchg
sti
jmp
sub
divb
sbb
push
adc
cli
in
fildl
mov
or
jnp
pop
push
push
add
mov
xor
xlat
xor
or
mov
jns
cmp
and
sbb
sbb
imul
aas
push
adc
jo
inc
ret
call
ret
mov
xchg
ret
sbb
fdiv
jbe
iret
shl
sbb
mov
pop
mov
fistps
imul
jecxz
push
addl
cmp
ret
lods
jns
gs
xchg
repz
repz
xor
fldcw
add
push
pop
lret
cs
les
jg
xor
test
pop
push
iret
stos
xor
push
addr16
das
cmc
xchg
loope
adc
shl
jg
and
sub
mulb
aas
jb
push
adc
pop
xchg
inc
add
mov
pushf
mov
sub
nop
fiaddl
addr16
sub
push
fistps
sbb
mov
outsb
inc
xchg
in
fldcw
stos
sub
stos
push
mov
aad
or
xor
ret
pop
loope
fisubs
fsubrl
pop
int
stc
jb
add
ja
push
out
or
sub
push
cltd
push
addr16
adc
mov
or
sbb
lahf
gs
sub
xlat
cwtl
frstor
scas
inc
outsl
pop
inc
loope
cmp
out
out
cmp
jp
mov
inc
cmpb
dec
xor
cmp
jg
stc
ds
clc
cli
jno
mov
rcl
xchg
xchg
pop
inc
jb
iret
and
daa
adc
cmc
sbb
hlt
movsl
cmpl
inc
adc
push
sbb
adc
mov
xor
loope
stos
cmp
lret
jle
jb
jp
sub
add
stc
cwtl
cli
pop
in
mov
dec
andb
repz
dec
or
jbe
test
ret
lcall
lods
lods
sub
cmpsl
inc
lds
push
addl
mov
dec
sbb
push
mov
fisttpl
and
int
add
int
mull
xor
and
mov
pop
inc
or
adc
pop
scas
clc
je
dec
pop
loope
mov
or
int3
pop
inc
cwtl
sbb
sub
mov
repz
or
cld
mov
mov
xchg
fsts
pop
das
ja
add
in
lret
dec
lods
outsl
jp
xchg
fs
ret
sti
mov
lods
pop
inc
jecxz
ret
int
lods
xchg
cmp
push
sbb
and
xor
stc
mov
es
cmp
push
xchg
mov
mov
pop
mov
pop
push
dec
fnstsw
jg
push
sti
mov
mov
sbb
fsubl
imul
iret
pusha
out
cmp
add
mov
stos
int
ret
inc
jno
mov
sbb
ror
sub
and
push
jne
push
or
ret
fstps
sub
fiaddl
mov
push
idivl
in
jne
outsl
and
and
mov
fdivrl
arpl
lret
ljmp
mov
leave
mov
lods
les
ficoms
cmp
add
mov
sbbl
adc
mov
sub
iret
les
dec
pop
loop
rorb
push
push
jae
pop
pop
pop
push
mov
jb
mov
push
xchg
fsubrs
or
lea
add
dec
pop
iret
aaa
pop
movsl
loop
iret
ret
jl
test
jecxz
mov
test
mov
mov
or
lds
push
sub
jmp
cld
mov
lods
push
outsl
cld
subb
sahf
andl
gs
shrb
stc
aaa
mov
mov
mov
mov
cmc
inc
push
pop
pop
in
test
out
lea
push
cmpsb
sbb
mov
outsl
sbb
je
in
mov
les
fs
ss
sarl
outsb
mov
push
pop
and
pop
bound
adc
ret
stos
mov
adc
sbb
mov
shlb
ror
outsl
inc
insl
les
dec
or
testb
inc
jmp
fcomps
cmp
sub
sub
sbb
lods
insb
ret
into
adc
pop
int3
dec
add
loopne
jbe
popf
sbb
icebp
sub
data16
pop
ss
push
add
je
out
pop
lock
adc
pushf
jmp
pop
rcl
insb
fs
pop
cmp
mov
repz
inc
cmpsl
xor
mov
leave
xchg
push
cmp
cmp
imul
aad
je
push
lret
lcall
add
outsb
mov
jns
add
stos
push
adc
mov
mov
enter
test
push
inc
ja
cmp
dec
mov
into
les
xchg
sbb
jg
cltd
pop
mov
lock
imul
pushf
les
ja
pop
or
push
stc
aad
add
push
or
lods
push
sbb
call
dec
les
sub
push
add
push
push
es
jle
sar
ljmp
cli
mov
in
iret
les
subl
or
in
mov
or
add
notl
movsb
cltd
adc
fdiv
iret
cmp
and
enter
hlt
scas
dec
xor
adc
jnp
xchg
xor
cmpl
mov
sarl
inc
test
and
or
dec
mov
mov
aam
inc
xor
ss
clc
pop
les
and
inc
dec
push
repnz
adc
testb
inc
add
lret
fiadds
and
dec
pop
sub
mov
loopne
or
dec
out
adc
xor
cld
call
or
pop
dec
decl
gs
lahf
inc
fcoml
add
addps
jg
insl
cmp
pop
es
mov
call
xor
addr16
mov
lock
lret
sub
jecxz
incb
sti
dec
shl
and
add
in
js
gs
xor
shll
jb
fstps
pop
push
stos
fisubrl
arpl
sub
xlat
mov
mov
xor
lea
jbe
sbb
pushf
xchg
sub
jbe
enter
stos
loop
xor
fistpll
inc
ja
cwtl
outsl
dec
or
and
mov
in
adc
jmp
sub
cmp
push
scas
cmpsl
add
add
dec
push
fnstsw
and
cmp
jne
add
mov
mov
xchg
add
mov
mov
nop
test
in
test
call
add
imul
addr16
sahf
insl
mov
push
into
pop
pop
push
sbb
add
out
inc
jae
mov
sbb
mov
and
xlat
sub
push
add
movl
mov
jle
mov
leave
ljmp
lods
subb
in
mov
adc
and
add
sub
pusha
mov
outsl
or
add
dec
test
jno
std
cmpl
lods
cmp
hlt
fists
adc
pop
jne
xchg
xchg
dec
and
or
xchg
es
pop
dec
xchg
jns
ficompl
pop
call
inc
fstps
jl
inc
pop
inc
mov
ja
dec
addb
movsb
jmp
je
outsl
mov
sahf
jecxz
movsl
das
mov
pop
push
ret
pop
into
sub
into
fwait
jp
sarb
lcall
mov
pushf
inc
xor
movsb
sti
add
jl
push
addr16
dec
stos
push
dec
and
pop
nop
push
or
arpl
and
mov
add
rolb
jae
xor
pop
popf
jmpw
jp
and
lock
sub
sub
loope
aad
cmpsl
fisttps
fwait
adc
pusha
jp
cs
inc
add
movsb
test
pop
stc
int3
push
jo
mov
cld
dec
test
cli
mov
adc
int3
mov
adc
std
mov
in
push
ss
scas
add
push
pop
cli
scas
cmp
pop
ret
mov
aas
scas
dec
dec
inc
lods
in
std
inc
js
mov
sub
xlat
or
sub
jmp
dec
cmp
pop
fistps
cmp
in
or
ds
sti
lock
outsl
rcl
sbb
sub
sbb
in
outsl
out
or
jns
movsb
clc
fldl
mov
popf
inc
push
push
fistpll
fstp
and
fwait
jno
ss
std
mov
jl
faddl
jbe
divb
repz
dec
jl
out
int3
cmc
dec
inc
enter
imul
mov
mov
clc
ja
and
dec
inc
repnz
mov
xor
and
shlb
loope
mov
inc
sbb
sahf
xchg
mov
dec
and
cli
iret
or
test
xor
movsb
mov
mov
xlat
js
push
xchg
das
mov
xor
xchg
testb
mov
data16
and
pop
outsl
rcll
lret
dec
mov
jmp
dec
cmpsb
iret
mov
roll
xor
jne
fsubs
test
dec
and
push
xchg
add
aad
je
gs
aas
sti
lahf
xchg
cmp
xchg
sbb
mov
or
inc
pop
data16
aaa
scas
ror
inc
lods
movsl
mov
fdivrp
xchg
fldl
lods
adc
ljmp
aas
into
neg
sbb
sti
cmp
sbb
or
dec
jns
inc
les
push
and
xor
jo
jge
sbb
xor
add
mov
mov
sub
push
imulb
in
icebp
in
xor
mov
mov
xor
xlat
xor
das
dec
jnp
sub
pop
mov
rolb
mov
addr16
jp
stos
sub
adc
jae
and
les
lea
jbe
add
xor
add
insb
sub
test
dec
movsl
in
insl
les
dec
add
lahf
das
jns
sbb
inc
imul
sti
fs
xchg
dec
popl
push
push
adc
jge
push
out
adc
mov
and
f2xm1
jno
mov
gs
xor
inc
jmp
icebp
popa
sub
push
test
call
ss
test
jnp
adc
jg
sub
lret
pop
in
inc
xchg
scas
add
mov
shl
mov
lea
dec
lock
sbb
dec
xchg
jle
popf
mov
push
xor
out
inc
mov
pop
xchg
dec
inc
ret
imul
or
fstps
ljmp
mov
mov
int3
imul
mov
push
repnz
mov
mov
push
mov
ss
inc
jp
or
lss
push
clc
xchg
popa
mov
mov
ret
cmp
adc
mov
inc
xchg
sti
je
mov
jg
sbb
scas
dec
out
leave
aas
xchg
mov
sub
data16
push
imul
cmp
push
push
jae
jne
pusha
xor
sbb
mov
je
mov
xlat
data16
repz
push
andb
push
sti
rolb
dec
sub
cs
nop
in
repz
xchg
fcompl
test
or
pushf
fwait
xchg
shl
ss
loop
and
dec
push
sti
pushf
mov
lret
pop
dec
xrelease
inc
ljmp
and
jmp
pand
lret
aam
jbe
callw
icebp
xlat
movsb
int
pop
sbb
test
addr16
mov
ljmp
adc
daa
adcb
and
jb
sub
daa
ja
xchg
stc
inc
sahf
popa
mov
dec
jecxz
pop
adc
imul
jae
adc
mov
aaa
pop
fcomp
test
shlb
loope
mov
shl
cmp
xor
mov
push
jg
pop
fxch
xchg
push
mov
jae
mov
inc
jl
jmp
fwait
inc
jg
mov
mov
arpl
xor
push
mov
nop
add
subl
cmp
mov
pop
in
rolb
ljmp
shll
xchg
test
push
bound
insb
pop
sub
enter
jge
cs
movb
in
les
cltd
dec
into
push
add
push
xchg
inc
lcall
push
xchg
inc
insb
sbb
fwait
sbb
mov
sub
push
imul
ja
ficompl
cmp
ret
inc
push
bnd
adc
and
inc
fmul
cwtl
es
adc
push
ljmp
mov
mov
xchg
or
push
cli
xor
inc
ret
aam
stos
jecxz
xchg
fs
mov
outsl
in
lret
out
movsl
or
or
push
cmpsl
mov
sbb
xlat
xor
mov
push
jb
pop
ja
ret
adc
inc
test
repz
dec
les
adc
andb
cmp
dec
outsl
sub
cmp
mov
fstps
movsb
in
xor
or
and
lea
into
adc
mov
inc
mov
je
mov
jp
test
mov
int
ljmp
je
pop
cmpsb
mov
out
or
loop
or
adc
add
inc
push
dec
pcmpgtw
jb
lock
mov
adc
push
pushf
sahf
dec
adc
hlt
mov
ret
cmp
fsubl
add
cmovne
push
popa
enter
mov
loope
pop
mov
push
mov
in
popa
xor
push
lahf
js
jb
in
mov
jg
dec
push
cmp
add
cmp
sub
mov
lret
and
lret
jb
push
inc
outsb
popf
mov
mov
ds
pop
add
sub
xchg
clc
adc
sbb
inc
negl
movsb
sub
out
lds
lods
jge
fwait
jne
pop
xchg
fisttps
adc
test
sbb
jo
xchg
mov
sub
cmpsb
test
stos
ret
fisttps
and
sub
mov
adc
fildll
sbb
push
xor
movsb
cmp
mov
add
decl
adcb
outsb
sbb
jge
pop
gs
xchg
sbb
fidivs
xchg
mov
xchg
ljmp
push
lret
das
sbbl
fdiv
popa
insl
mov
jle
jg
xchg
test
outsl
sarb
push
cs
out
rorl
mov
dec
mov
fiadds
and
ffreep
sbb
addr16
or
pop
inc
or
mov
cmp
cld
outsb
jmp
pushf
pop
adc
inc
arpl
push
fwait
jns
test
pop
mov
mov
fcomp
fcmovbe
dec
pop
lret
je
add
cmp
mov
sub
fwait
push
sbb
mov
stos
dec
sbb
inc
jno
pop
push
cmp
ljmp
cmp
cmp
loopne
xor
cmp
mov
popf
xchg
adcl
dec
sbb
leave
fisubl
push
push
cmp
or
jno
cmp
aam
xor
xchg
dec
xor
out
mov
sbb
in
sahf
push
adc
mov
jo
mov
push
insb
sar
xchg
adcl
sahf
or
jbe
xor
bnd
outsb
cmp
pop
iret
loop
pop
mov
shrl
mov
sub
loope
jns
clc
cli
repz
movsb
jb
jo
lea
in
add
cmp
rclb
loopne
out
popf
or
adc
xchg
xchg
in
sbb
jnp
aam
dec
dec
lds
int
xor
jne
jecxz
repnz
dec
sub
xchg
insl
push
popa
pop
adc
cmpsl
pop
faddl
add
push
enter
xor
frstor
pop
popa
decl
out
outsb
es
inc
mov
push
and
rorb
and
divl
xchg
or
movsb
subl
rcrb
aas
stc
mov
movsl
daa
pusha
jae
mov
outsl
test
push
xchg
jno
iret
xor
mov
ret
jl
scas
cmp
mov
jae
pop
and
inc
rolb
xchg
rorl
cs
fcmovne
sarl
or
fildll
ret
cmpsb
push
mov
movsb
add
dec
ljmp
addr16
push
dec
jns
mov
pop
adc
xor
aad
xlat
jge
add
push
sbb
std
lea
dec
imul
sbb
and
imul
mov
mov
inc
ds
in
test
loop
les
cmc
or
dec
fisttps
in
insl
mov
cld
std
es
popa
daa
mov
mov
xchg
and
shlb
mov
cmpsb
out
in
fsubs
or
sbb
js
or
mov
jecxz
testl
les
sbb
jmp
and
sub
rolb
mov
outsb
rcrb
xchg
shrl
pop
sti
pop
in
andl
or
add
icebp
lds
ss
pop
mov
jl
int
outsl
sbb
fldlg2
mov
push
cmc
pop
cmc
jge
mov
ret
xchg
addr16
jle
call
sub
inc
fcomip
pop
jmp
lds
int
shll
fsubs
fwait
mov
mov
cmpsl
or
push
adc
cwtl
daa
jo
pushf
sbb
in
imul
sub
lret
fistpll
mov
lods
mov
dec
cmp
lds
mov
jo
or
adc
mov
repz
dec
popa
and
xchg
addr16
shl
sub
add
xchg
and
xor
jnp
lods
mov
inc
mull
scas
js
outsb
adc
aad
fisttpl
mov
add
push
mov
sti
mov
nopl
fcoms
mov
sbb
sbb
rcrl
dec
out
sbb
and
das
loopne
fs
mov
bound
pop
and
add
dec
ljmp
add
out
xchg
stc
cld
jno
roll
leave
les
pop
test
scas
cli
mov
mov
mov
lds
and
push
sbb
jo
sub
js
mov
stos
ret
adc
sahf
aaa
orb
and
fucomip
mov
sub
or
or
jno
scas
clc
cmp
cwtl
das
leave
ds
mov
xor
aad
outsb
repz
out
movsb
xor
fucom
xchg
mov
in
ds
mov
fstpl
adc
das
inc
mov
loope
mov
cld
jmp
loopne
jo
cmpsl
pop
cmp
scas
cmp
cwtl
or
add
popa
lock
rcrl
ret
and
and
outsb
insl
movsb
ljmp
addr16
test
leave
in
lret
dec
pop
mov
sub
sahf
aaa
test
mov
jo
or
test
push
jg
js
stos
push
adc
jbe
std
ret
pusha
xchg
pop
inc
mov
jge
mov
cmp
mov
les
lret
pop
xor
or
xor
sbb
push
popl
int
add
jne
sub
xchg
mov
data16
dec
jo
int
dec
sahf
xchg
xor
xor
leave
insb
sbb
push
cld
ds
xor
lods
lcall
lods
jge
lahf
rorb
ret
cmpsb
shlb
sbb
cmpsl
push
movsl
pop
and
pop
movsb
adc
es
dec
cmc
cltd
mov
cmp
rcrl
add
test
mov
dec
cs
sar
subl
in
out
fists
in
pop
clc
cmp
or
dec
jnp
in
jbe
ret
add
jbe
cmp
or
and
inc
outsl
enter
sub
scas
nop
movsb
stc
or
pop
pop
pop
imul
inc
pushf
mov
in
dec
mov
dec
adc
and
add
xor
or
and
repnz
nop
aam
add
and
insb
or
xchg
xor
pop
neg
cmovs
ficoml
repz
fstl
inc
lret
mov
sahf
dec
pop
lret
sahf
or
mov
lods
jmp
sbb
lahf
imul
loope
int3
fidivs
cld
loopne
test
outsl
sub
push
arpl
jge
aam
or
mov
jle
and
adc
iret
adc
mov
mov
loopne
clc
ljmp
shrb
fildl
cmp
jmp
test
mov
clc
pop
mov
lea
jl
inc
rcrb
bound
addr16
jb
das
insl
sti
bound
pop
lret
lcall
push
push
lahf
dec
inc
push
ret
sbb
push
ret
jecxz
pop
aam
nop
shl
sub
xchg
dec
inc
into
push
fsts
test
xor
jno
pushl
les
and
popa
ret
jo
ret
int3
lock
push
jne
push
ret
and
push
stos
xchg
shrb
jno,pn
test
ja
push
insb
xchg
cmp
popa
lret
jg
fnstenv
sub
repz
popa
cmp
cwtl
pop
mov
push
jmp
shll
cli
cmp
shufps
add
std
mov
inc
dec
sbb
xchg
test
or
push
xchg
inc
lds
setp
lods
mov
push
or
aas
cmc
stos
sub
xor
jns
and
in
sti
adc
arpl
mov
adc
mov
jmp
inc
fsubrs
mov
mov
or
in
shlb
or
inc
cwtl
and
sti
pop
fwait
inc
inc
jmp
imul
mov
and
dec
dec
lock
aad
cli
movsl
inc
fidivrl
inc
ss
mov
inc
dec
inc
shll
mov
imul
jmp
and
jns
and
sub
shll
jmp
dec
dec
adc
mov
ss
sub
push
or
fists
mov
adc
ret
ja
mov
scas
adc
mov
and
dec
xor
daa
sub
fs
sub
xchg
insl
fisubrs
inc
mov
pushf
out
add
push
cld
adc
xchg
das
xchg
xchg
or
xchg
xor
aaa
add
out
js
pop
xor
or
test
mov
cs
sub
jecxz
or
and
pusha
mov
sbb
push
clc
sub
inc
push
mov
push
add
stos
mov
jns
lret
andl
xchg
lcall
nop
lock
jmp
pusha
push
jnp
mov
inc
cmpsl
orb
shlb
shrl
or
or
jl
jecxz
imul
sbb
fidivrl
sbb
stos
stc
sub
in
in
mov
aas
xchg
aam
mov
roll
outsb
add
int
mov
fs
int
loop
mov
ret
or
xchg
push
jge
pusha
out
adc
out
mov
jo
dec
gs
in
nop
mov
jo
sar
sbb
pop
sahf
add
clc
and
sahf
or
sbb
shlb
out
or
fildll
sub
jae
or
lods
push
pusha
lret
call
int3
xchg
test
add
std
cmp
add
xor
dec
or
cmp
arpl
adc
jns
push
xor
inc
sbb
mov
fiadds
xlat
lcall
xor
enter
xor
fldenv
jmp
movsb
add
and
fists
sbb
lcall
call
test
enter
and
or
ret
mov
lea
sbb
arpl
fsubr
ljmp
jmp
jl
test
test
inc
mov
fcomi
pop
cmp
and
loop
sbb
rdrand
and
pmulhw
cs
in
aad
push
xchg
into
sbb
adc
mov
hlt
pop
imul
or
ret
push
xor
pop
js
adc
adc
rclb
cwtl
gs
mov
lods
jge
and
dec
addl
test
mov
mov
enter
or
inc
inc
stos
fwait
loope
adc
shrl
aam
mov
sti
outsl
lods
mov
roll
mov
push
insl
loope
mov
mov
gs
add
mov
sbb
jb
cmp
mov
pop
sub
cmpsl
and
movsb
jns
mov
push
adc
sti
arpl
inc
out
outsb
fisubs
lret
add
mov
dec
dec
es
outsb
lcall
pop
mov
pop
mov
pop
add
cmp
idiv
dec
jmp
xchg
push
dec
fisubrl
daa
sbbl
int
dec
xor
in
and
je
push
loope
sub
adcl
repnz
test
xchg
add
jnp
arpl
fcoml
aas
in
or
adc
push
in
cwtl
les
xor
adc
add
mov
pushf
jge
or
inc
mov
cmp
pop
repnz
mov
icebp
out
pop
push
lret
xlat
imul
sbb
sub
hlt
cmp
mov
mov
push
sub
push
cmpsl
lock
lret
into
ss
fs
add
fisubs
outsb
jnp
stc
or
adc
mov
sbb
cmp
xchg
cmpsl
dec
outsb
inc
dec
sbb
scas
incb
mov
nop
push
mov
sbb
and
loope
clc
dec
in
call
sti
inc
es
push
fwait
xchg
dec
int
push
pop
out
sbb
int3
mov
imul
or
push
sbb
sbb
add
gs
decl
xchg
and
cmp
pop
and
iret
and
leave
les
into
es
sub
popa
and
popf
mov
ffreep
aad
pusha
lahf
adc
add
push
popa
sub
jo
test
push
test
xchg
lock
cli
repnz
pusha
xor
or
sub
jb
std
in
lods
fmulp
ja
push
mov
mov
dec
je
push
outsb
inc
popf
mov
bound
push
ficoml
adc
cmc
das
jnp
mov
aad
insl
cmp
test
mov
scas
and
inc
div
add
mov
rcrl
out
out
push
sub
loope
sbb
add
jle
data16
data16
and
in
jns
xor
mov
inc
push
es
arpl
cmp
iret
sub
lret
movsl
insl
and
hlt
icebp
iret
xchg
lea
or
ja
mov
cmpsb
push
push
cli
scas
push
jge
stc
sbb
push
mov
jmp
xor
adc
cld
jns
mov
ja
sub
scas
inc
jmp
mov
imul
sbb
movsb
add
loop
pop
push
dec
stos
iret
add
inc
mov
in
ret
xchg
xchg
incb
rclb
lods
dec
test
fcoml
out
jg
jo
xor
stos
mov
movsl
adc
aam
sbb
movsl
dec
ljmp
mov
mov
sbb
lods
push
pop
cmp
insl
out
int3
lods
mov
mov
and
and
stos
ljmp
dec
mov
ret
ds
jg
fildll
mov
dec
xor
add
inc
mov
or
pop
mov
pop
sub
js
cmp
imul
repnz
les
mov
inc
ret
cmp
addb
in
cmp
or
sbb
inc
mov
in
rcr
cmpsb
inc
aaa
cmc
cmp
pop
adc
daa
movsl
and
cld
push
jo
dec
mov
insb
mov
out
repz
ds
cmp
pop
xchg
repnz
pop
inc
dec
xor
adc
dec
fdivr
mov
or
jmp
sub
cmc
hlt
sub
dec
insb
ss
popa
add
sbb
push
test
push
scas
dec
ljmp
mov
xchg
test
fs
out
enter
xchg
mov
sbb
lods
xor
inc
or
jo
jns
cmpsb
hlt
pusha
call
mov
xor
push
mov
lcall
pop
in
imul
ret
test
popf
loopne
xchg
aam
outsl
mov
in
sarb
iret
or
push
mov
xchg
xchg
jl
lahf
out
jl
adc
into
je
and
sub
fcmovnu
in
fdivp
lcall
push
lds
iret
pop
cli
add
mov
rolb
mov
adc
push
mov
out
xor
addl
jbe
inc
jle
dec
leave
push
out
in
lcall
pop
inc
enter
cmp
sbb
leave
sub
xchg
mov
scas
lds
icebp
xor
jle
pop
outsl
icebp
mov
dec
aas
roll
ss
mov
lahf
scas
fimull
icebp
ret
mov
ret
decb
pop
or
sub
gs
jecxz
push
mov
add
add
outsb
sub
fs
call
xor
jmp
and
loop
mov
mov
sahf
scas
inc
or
and
shrl
xchg
fildl
scas
mov
fisubrs
jno
sub
cmpsl
aad
loop
cs
test
imul
negw
rclb
movsl
mov
popl
xacquire
cmp
cltd
sahf
inc
push
or
imulb
cmpsl
int3
fptan
ss
and
mov
ror
addb
inc
or
pop
clc
mov
cmp
mov
ja
jp
mov
pop
jno
pop
gs
dec
cs
das
ds
or
push
cmp
pop
xchg
stos
cmp
mov
or
mov
jecxz
int3
add
xchg
lret
cltd
gs
test
das
mov
mov
cltd
inc
pop
mov
shll
clc
js
cmp
sub
and
fnstenv
xor
imul
ds
sbb
mov
inc
cmpsl
push
xor
or
sub
lret
add
das
xchg
cs
lret
out
jno
cli
movsb
lods
mov
jg
out
pop
push
cltd
rclb
fs
sub
cmp
fldl
mov
popf
mov
cmpsl
in
jmp
mov
outsb
call
jmp
ret
lret
adc
lods
hlt
nop
push
call
add
jns
xchg
adc
in
adc
loope
enter
pop
loopne
mov
adcl
cmpsb
inc
call
pop
mov
sbb
mov
sti
xchg
enter
add
in
ret
and
inc
adc
jno
ja
sub
fsubp
into
and
ficoms
cwtl
push
in
mov
xcrypt-ctr
cmpsl
sbb
repz
jg
cmc
add
inc
repz
rcll
jno
push
pop
scas
test
jg
lea
cmc
pushf
jle
xor
fisttpl
sbb
xorb
dec
lcall
cltd
xor
scas
and
int3
enter
xor
scas
pop
mov
out
negl
mov
into
insb
adc
dec
mov
pop
jnp
enter
xor
sub
inc
loop
setge
cld
fwait
sbb
insl
pop
into
ljmp
adc
aaa
cmpsb
in
inc
xchg
incb
add
fs
sbb
loop
popf
xor
jl
int3
push
jno
adc
popl
inc
push
jne
jo
xchg
mov
xlat
repnz
js
cmpsb
lea
loopne
jg
stos
outsl
lds
jae
in
popf
mov
fidivrs
imul
aam
pop
or
subl
xor
repz
cmpsl
out
enter
inc
data16
xor
sarb
jb
xor
jle
fbld
sahf
sbb
xchg
pop
stos
pop
mov
ror
sbb
test
add
test
je
dec
push
fldt
test
xor
cld
ss
add
lret
ljmp
xchg
inc
fwait
test
movsl
enter
jns
dec
add
filds
xlat
sahf
xor
xor
cwtl
shrl
stos
push
xor
or
test
push
pop
or
cwtl
sahf
cltd
mov
or
inc
test
pminub
xchg
ret
jbe
xchg
stc
push
and
sbb
sahf
cli
cwtl
daa
insb
mov
clc
lret
lods
sbb
mov
add
sahf
pop
sub
push
jle
test
add
negb
gs
mov
frstor
sbb
sets
jne
mov
jmp
dec
icebp
mov
addl
jge
daa
loopne
iret
out
scas
mov
cmp
fidivrs
xor
push
rclb
pop
mov
mov
mov
clc
xchg
sub
mov
lds
in
dec
inc
arpl
adc
movsb
ss
into
fucomip
ljmp
jp
xchg
loopne
mov
mov
dec
int
jmp
insb
mov
xor
mov
stos
mov
jnp
or
daa
push
xor
mov
je
jo
and
and
mov
out
cmpsb
xchg
jl
or
in
mov
lcall
mov
add
clc
ss
mov
xchg
jno
add
cmp
stc
cs
lret
sub
cmpsb
scas
pop
aas
pop
clc
push
pcmpgtb
jae
nop
scas
pop
mov
add
mov
xor
dec
bound
mov
mov
je
pop
pop
lcall
mov
adc
inc
lret
loopne
pop
and
stos
scas
shrl
cmp
loope
movsl
fdivs
jo
mov
in
jg
cmp
pop
jne
fcoml
xchg
imul
lock
adc
int3
xor
dec
popa
daa
ds
or
and
mov
sbb
outsb
pop
sbb
imul
aas
mov
xor
fdivrs
scas
ja
fisubrs
in
fcoml
xchg
and
mov
mov
or
outsl
int3
inc
mov
jmp
mov
cmp
not
xchg
scas
sub
sti
jg
out
or
and
adc
add
sub
std
testb
xchg
add
pop
jge
mov
loopne
pushf
ret
pop
cmp
fdivs
mov
push
pop
xchg
pslld
lret
mov
lret
sahf
adcb
xor
and
mov
push
arpl
gs
fsubr
rcrl
outsb
adc
andb
bound
fmuls
pop
loope
inc
pop
sbb
push
stos
cmp
test
mov
sarb
shll
fwait
daa
mov
arpl
ljmp
loop
repnz
inc
outsb
cmpsb
mov
mulb
not
xchg
sti
fisubl
movsb
inc
mov
push
ret
testl
fucomip
jae
test
mov
leave
xchg
xor
dec
cs
jnp
adc
orb
out
shll
sbb
push
iret
add
cltd
jae
pop
cld
je
mov
xor
jno
test
and
dec
pop
push
sub
lods
inc
ds
lods
jns
lahf
test
dec
idivl
fwait
mov
gs
sarb
sahf
loopne
adc
jbe
fsub
pusha
lret
add
xchg
mov
in
mov
pop
dec
lahf
icebp
mov
fiaddl
xor
cmc
lock
mov
packssdw
imulb
icebp
mov
adc
cs
rorl
pop
cmp
addr16
push
cltd
leave
add
and
xchg
mov
test
fidivl
adc
xchg
jb
mov
jl
push
cmc
inc
js
xchg
pop
jb
or
push
sbb
adc
les
test
add
sub
or
mov
out
xor
nop
mov
sbb
leave
fcompl
mov
dec
insl
jnp
dec
cltd
in
jne
pop
test
inc
add
addl
stos
push
mov
push
out
jb
xor
adc
repz
cld
arpl
add
fdivp
hlt
dec
in
ja
icebp
add
jp
bound
and
lock
jge
gs
mov
mov
lahf
pop
pop
int3
leave
xchg
xchg
inc
sbb
xor
pop
sub
pop
arpl
aad
inc
jno
out
xchg
xor
jbe
lahf
add
out
add
hlt
and
lcall
inc
pusha
xchg
cwtl
loopne
lds
call
clc
test
sahf
jns
outsb
popf
daa
test
test
xchg
mov
mov
bound
pop
gs
cmpsl
or
scas
sub
push
sub
int
sub
das
bound
inc
aad
xor
das
dec
push
fidivrs
adc
mov
sub
popl
and
and
ret
jmp
shll
jle
aaa
xchg
stc
leave
sub
push
cmp
and
jl
sub
add
testb
mov
sti
scas
and
jp
cmpsb
ret
lcall
inc
add
mov
rep
mov
inc
jecxz
roll
lock
cmp
addr16
fdivs
push
mov
pop
jne
xlat
rcll
iret
sti
cmp
aaa
xchg
adc
mov
negb
es
inc
add
mov
push
mov
fisttps
movsl
xchg
sti
mov
sarl
xchg
stos
call
lea
je
aas
sbb
out
bound
repnz
or
int
xchg
loop
minps
sbb
aad
cmpsb
xchg
inc
xchg
pop
out
adc
push
dec
imul
out
lea
jg
cs
jnp
adc
out
inc
or
cld
int
sbb
test
test
add
pop
int
and
sub
cmp
sti
sbb
add
mov
sbb
je
pop
aaa
lea
adc
hlt
push
add
call
mov
jne
lds
pusha
imul
xchg
fnstsw
daa
scas
pop
cvtdq2ps
call
adc
je
push
cmc
sbbl
jmp
pop
in
dec
fiaddl
lods
cmpsl
in
cmp
mov
fwait
imul
in
xchg
fdivl
lahf
jmp
cmp
dec
sbb
jg
mov
dec
repz
mov
jns
mov
inc
in
pop
out
jge
test
add
fiaddl
pop
sub
pusha
dec
xchg
cmpsb
loopne
lock
lret
inc
sbb
sbb
das
sbb
xor
sahf
and
jbe
mov
sbb
inc
push
test
dec
jle
insl
adc
push
add
jl
push
test
xchg
inc
xchg
cmp
push
xchg
fistl
and
mov
cmp
sbbl
cltd
fwait
mov
loop
notb
sub
xchg
mov
ficompl
gs
aad
es
jbe
cmpsl
insb
push
fistl
mov
dec
cltd
jmp
test
stos
int
push
pop
inc
int3
sbb
xchg
pop
testb
cwtl
inc
subl
pop
and
push
sub
fiadds
inc
or
adc
jmp
test
fwait
jne
sub
cli
ret
cmpsb
pop
call
call
jbe
je
mov
addr16
dec
add
movsb
movsl
adc
sbb
in
ficoml
cmp
add
aam
jmp
out
mov
es
stc
cmp
andb
les
inc
je
nop
push
out
aaa
push
sbb
pop
outsb
adc
inc
push
insb
pop
inc
cmc
pushf
lock
sarl
jecxz
push
fldt
sbb
into
mov
xchg
mov
out
sub
add
or
adc
inc
pop
shrb
mov
jmp
sbb
jl
dec
pop
repz
xchg
fcmovu
xor
sub
and
fbstp
cwtl
or
mov
push
mov
cli
ds
fisubl
insl
mov
outsl
mov
hlt
xchg
repz
popa
aas
nop
icebp
ret
mov
sub
inc
loopne
cmp
iret
cmp
push
push
lods
int3
xor
mov
les
lock
repnz
push
popa
sub
adc
cmp
movsb
mov
not
aam
or
data16
pushf
pop
mov
adcl
and
inc
sarb
popa
xor
loop
dec
xorb
xchg
inc
mov
push
imulb
cmpsl
jmp
mov
mov
add
mov
mov
lret
imul
mov
aad
rcrb
xchg
ss
movsb
fcmovnbe
and
imul
pop
pop
or
sbb
pop
cmc
filds
out
adc
loop
or
adc
mov
jb
shll
add
adc
cmp
dec
pop
addps
bound
jp
shl
pop
shr
cmp
stos
lahf
push
inc
add
out
pop
out
loope
loop
xchg
divl
ds
scas
ja
nop
lds
lret
add
mov
adc
pop
add
push
jle
and
push
pop
mov
pop
sub
dec
stos
fisttpll
outsl
es
jbe
mov
or
xchg
lock
cmp
mov
inc
xchg
push
ret
push
and
xchg
inc
icebp
xchg
addr16
xlat
xor
cmp
stos
js
mov
inc
rcrb
pop
nop
fadds
daa
dec
fdivr
push
inc
test
mov
int3
mov
fmuls
sub
shlb
jbe
insb
psrad
minps
jnp
test
imul
jecxz
lahf
mov
pop
in
jae
and
sbbb
fwait
cmpsb
scas
sti
pop
dec
dec
or
fnstenv
cmp
fsubp
insb
lret
jb
popa
sbb
lret
push
cmp
lahf
es
mov
lcall
out
cwtd
or
or
fstpt
repnz
mov
jo
mov
inc
orl
push
mov
jl
fimuls
sub
scas
push
lds
fistl
xchg
bound
ficomps
jge
sub
dec
jnp
int3
iret
pop
mov
jge
pop
sti
loop
dec
xor
enter
fisttpl
fcmovbe
ljmp
and
mov
shr
call
iret
jmp
jl
lods
in
sub
insb
mov
test
push
xor
aas
aas
lret
dec
icebp
prefetch
or
sbb
stos
adc
push
adc
push
je
sbb
xor
pop
jmp
cmp
mov
mov
int3
xchg
jne
or
and
rcl
int
cs
pusha
loop
sarb
insl
or
in
nop
mov
fiadds
mov
push
in
addb
sub
outsl
mov
pop
sbb
and
push
push
fcmovb
pop
popf
nop
cmp
sbb
inc
mov
add
jl
sbb
loope
loope
ret
aam
lret
add
cmc
mov
add
xchg
push
jecxz
rep
mov
lds
addr16
scas
jecxz
idiv
sahf
xchg
cltd
bound
mov
mov
mov
std
testb
mov
sub
add
pop
movsb
mov
mov
sbb
aas
in
jge
jg
mov
adc
dec
pop
inc
xor
and
pop
int
out
pop
or
inc
inc
fbld
jle
cmp
cs
adc
cmp
push
insl
adc
mov
outsb
push
pop
jb
push
not
cmp
adc
pop
pop
lret
jmp
outsb
xchg
add
inc
push
jne
fnstsw
mov
sub
dec
jmp
je
daa
mov
scas
imul
hlt
mov
pushf
cs
inc
imul
mov
push
test
jg
or
dec
sarb
movswl
jbe
cmpsb
xchg
dec
leave
xor
and
adc
into
sbb
mov
mov
jae
jecxz
lds
cmp
sbb
int3
and
xchg
out
jmp
xor
mov
mov
cmp
sbb
xchg
lods
inc
xchg
xchg
es
fsincos
sub
mov
cmp
jp
cmc
loopne
xchg
push
push
xlat
enter
and
pop
xor
fnstenv
in
dec
pop
adc
in
push
xor
push
fs
hlt
in
cs
sub
test
or
push
inc
scas
xor
pop
fcompl
imul
loopne
mov
mov
mov
adc
add
push
ja
xchg
adc
movsb
rorb
push
rolb
cmpsb
jnp
mov
mov
gs
xchg
xchg
repnz
sbb
push
mov
pop
xchg
jmp
fabs
std
sbb
les
test
mov
inc
rcrb
sti
pop
pusha
xlat
in
pop
jmp
mov
fsts
es
jl
add
mov
add
push
adc
insb
xor
cwtl
cmc
jl
rcl
call
lret
and
xor
lods
movsl
add
lea
lds
loop
xchg
pop
jne
sbb
push
int3
imulb
mov
popf
or
je
pop
cmp
jg
cmp
out
repz
out
fidivrl
ljmp
xchg
loopne
pop
shr
add
add
mov
nop
xchg
mov
fidivl
xchg
inc
push
sbbb
pop
mov
dec
add
cmp
adc
mov
imul
add
dec
add
inc
jmp
jecxz
iret
test
add
pop
iret
jo
inc
sub
cmpsl
sahf
push
fistps
mov
cmp
mov
inc
pusha
leave
mov
nop
sbb
jg
fldt
or
push
idivl
sub
rorb
dec
popf
je
test
jg
pop
jae
sbb
movsb
gs
xchg
jmp
enter
push
aas
hlt
mov
ret
int
jns
in
shrl
sub
outsb
and
aad
js
cmpsl
jg
pop
lret
or
cmp
in
dec
and
in
add
std
adc
daa
dec
and
fdivrp
jb
cmp
fnstenv
push
ret
nop
xor
jb
or
inc
or
and
or
sub
sbb
ret
sub
inc
arpl
daa
cmp
pop
jmp
pop
cmp
cmp
aam
ja
sub
popa
inc
arpl
clc
sbb
outsl
outsb
loop
ljmp
cmp
cmpsb
cmpsb
xchg
adc
pop
mov
mov
insl
fwait
leave
jg
out
xchg
jno
into
dec
sbb
xor
cltd
repnz
jns
ja
xor
div
int
sahf
mov
push
test
jne
or
push
push
pop
movsb
scas
sti
rcrl
add
and
ljmp
out
daa
in
popa
mov
scas
mov
outsb
das
and
mov
cmpsl
or
adcb
inc
jle
fdivr
inc
fbstp
or
aaa
aaa
popa
xor
arpl
ret
pop
jmp
inc
stc
cmp
xor
testl
inc
dec
rorb
and
mov
bound
sub
out
or
jle
push
imul
jb
pop
lret
and
andb
in
rep
into
ja
rcrb
pop
call
or
push
mov
jbe
mul
jo
dec
lret
dec
lret
popa
or
xor
inc
subl
std
xchg
lahf
mov
adc
stc
stos
push
outsb
xchg
adc
adc
mov
sbbb
fimuls
xor
data16
mov
nop
jecxz
mov
mov
out
push
addl
fdivrl
in
adc
leave
aas
mov
pop
inc
cmpb
leave
pop
dec
fwait
lret
mov
ficoml
xor
push
rolb
adc
sbb
sbb
shrb
es
ljmp
dec
cld
mov
int3
test
or
jo
sub
mov
iret
je
popf
fdivr
add
dec
xor
xchg
and
pop
jmp
add
lret
adc
movsl
mov
mov
lock
mov
arpl
popl
in
mov
push
inc
push
int3
mov
subb
ja
aas
movsb
cmp
addb
jb
jp
or
repz
fdivl
addb
pop
pop
pop
inc
in
pushf
enter
aaa
popf
jo
dec
lret
lods
mov
jg
aad
jno
sti
xorl
inc
sub
xchg
iret
adc
icebp
stos
push
push
mov
addr16
daa
adc
sbb
dec
push
dec
mov
and
les
jo
test
lods
sub
outsb
not
or
cmp
mov
movsb
mov
xor
rorl
gs
sbb
and
sbb
fidivrs
jmp
shlb
xchg
xchg
push
cmpsb
inc
push
adcl
push
insb
hlt
pusha
in
insb
push
sub
sbb
add
fstps
insb
lret
mov
or
scas
dec
shr
push
stc
andl
mov
mov
popa
mov
insb
cs
test
inc
and
stc
jae
cmp
shlb
mov
out
ljmp
pushf
adc
pop
aam
mov
aas
adc
scas
rcr
mov
lods
or
push
sarb
xchg
fxam
or
sbb
sahf
arpl
xchg
insl
data16
cmp
lds
and
ret
test
jle
and
test
sbb
sub
loopne
fstl
pop
fs
pop
jp
dec
jae
mov
mov
imul
ret
push
rol
stos
imul
test
fstpl
lret
sar
lret
cwtl
adc
addl
adc
mov
xor
dec
push
xchg
and
fisubrs
or
pop
in
push
jae
notl
dec
iret
faddl
fistps
pop
rcrl
fwait
loopne
cld
cmp
stos
mov
dec
dec
dec
test
adc
or
adc
data16
lret
andb
jne
movd
xor
pop
stc
sub
fucomip
push
or
add
iret
mov
insb
pop
jae
scas
push
xor
xchg
or
push
and
and
cld
iret
scas
stos
fucomi
lock
xor
jne
gs
clc
xchg
jns
pop
mov
xor
sbb
xchg
mull
or
mov
xor
mov
mov
aas
pop
insb
and
popf
push
scas
adc
xor
cmp
lcall
sub
cld
dec
cltd
incl
in
pop
mov
stos
rcll
je
sub
pop
adc
rorl
daa
sbb
add
rcrl
cltd
or
push
xlat
gs
jb
sub
and
mov
pop
xor
sbb
mov
popa
push
jle
push
clc
xor
sub
xchg
test
arpl
push
mov
push
mov
mov
add
sub
ja
sub
adc
adc
sbb
sbb
mov
dec
pushf
mov
cmp
cmpsl
mov
addl
iret
loop
cmp
popa
xchg
rcrb
lret
andb
and
add
je
inc
fdivrs
adc
mov
dec
fists
shrb
cmc
stos
les
fxch
fs
cmp
push
in
cs
jne
nop
daa
xchg
lock
mov
or
scas
push
leave
fists
test
leave
loopne
loope
and
pop
fsubrl
mov
dec
cmp
jo
outsb
mov
mov
call
pop
fisttpl
cmp
leave
insb
sub
pushf
push
and
ficomps
scas
cmp
lea
mov
fdivs
sbbl
xor
lret
push
sub
mov
adc
out
mov
jl
sti
hlt
adc
inc
xor
daa
nop
movsb
sti
mov
aas
je
lods
arpl
push
insl
cmpsl
fists
inc
pop
lret
dec
fisttps
inc
xlat
sti
xchg
rorb
dec
push
out
mov
pop
fldcw
sbb
repz
dec
imul
cmc
fistpll
adc
rolb
jbe
cmp
xor
jnp
pop
adc
js
pop
pop
lcall
sbb
sbb
mov
sbb
mov
ficompl
movsl
xchg
cs
cmp
adc
movsb
lods
inc
jae
sbb
push
std
push
ret
or
into
cmp
pop
inc
cmp
mov
lcall
sub
adc
jp
sbb
mov
adc
sbb
jp
sub
adc
push
fisttps
jge
jnp
das
jno
ja
test
sub
clc
pop
ljmp
jnp
std
xchg
out
gs
jecxz
incl
inc
or
and
jmp
fsubrl
xor
orl
jge
xor
je
xor
mov
jecxz
adcb
xor
or
lret
pop
int
repnz
je
sub
sbb
mov
daa
arpl
cmp
out
sub
daa
xor
mov
cld
negl
jge
fsts
les
and
jecxz
out
jno
in
daa
push
jle
mov
or
dec
pop
popf
or
incl
js
pop
pop
cld
jno
xchg
popa
cli
fs
pop
popa
jmp
jns
jb
push
cmc
gs
in
jns
xchg
dec
jnp
outsl
adc
les
test
xchg
sbb
pop
push
lahf
lret
add
push
cmc
mov
loope
pop
lea
out
xchg
pop
pop
filds
xchg
ds
cmp
or
push
imul
ss
sti
add
in
roll
pop
aas
mov
pop
jmp
xor
sub
mov
jae
and
or
adc
out
xchg
popf
bound
jae
cmpsb
cmp
fwait
mov
sbb
ds
aad
repz
cmp
inc
lcall
jl
pop
push
add
test
sub
sub
dec
mov
rclb
pop
push
mov
repz
adc
or
jp
das
or
and
add
pop
push
rorl
mov
in
aaa
jne
push
dec
call
adc
out
test
scas
mov
adc
dec
in
enter
ret
add
adc
mov
mulb
negl
test
outsb
lcall
scas
std
xor
mov
or
and
xchg
dec
and
shrb
jne
out
adc
testl
adcb
mov
push
pop
adc
scas
push
in
pop
insb
in
cmp
aad
dec
aaa
dec
inc
inc
in
daa
sbb
scas
pop
insb
call
hlt
shrl
dec
or
movsb
jl
ret
pop
loope
xchg
and
loopne
dec
roll
adc
sub
lahf
add
jmp
int
aas
mov
out
cmp
data16
sarb
cli
outsl
pop
dec
daa
jmp
or
call
lods
jle
or
xor
enter
cld
out
cli
repnz
add
add
pop
push
xchg
mov
les
cmpsb
or
or
shrl
pop
xchg
push
subb
lret
pop
loopne
cmp
jecxz
sub
sbb
xor
or
gs
adc
pop
mov
mov
xor
dec
in
pushw
jnp
daa
insl
outsb
dec
pop
and
andb
inc
adc
fwait
and
mov
aam
push
jo
mov
xor
shlb
aad
add
fnstcw
jo
dec
xchg
imul
inc
test
add
daa
dec
je
in
jge
loop
jmp
sub
or
rcll
or
cmp
mov
in
or
inc
mull
xchg
push
sub
es
mov
push
sarb
lods
mov
or
jb
negl
in
mov
dec
sti
xor
sub
scas
test
imul
lods
sbbb
sub
and
lods
sahf
or
mov
iret
inc
dec
mov
dec
sbb
jne
sub
seto
jge
xor
xchg
or
sub
fsub
andl
mov
sti
pop
popf
mov
movsl
test
test
push
dec
add
mov
inc
stc
in
mov
clc
pop
je
mov
cmp
sbb
sbb
mov
in
push
outsl
sti
jae
xor
inc
cs
cwtl
sbb
movsl
mov
aas
ja
inc
or
test
gs
sar
and
sbb
mov
cli
lret
sbb
shlb
cmpsl
mov
xorb
in
fwait
cvtdq2ps
nop
sbb
call
repz
or
addl
lea
out
std
bswap
adc
enter
lcall
int3
hlt
lods
cmp
ror
outsl
pop
cs
and
lret
inc
insl
mov
call
hlt
js
mov
movsl
aaa
xor
bound
je
orl
in
sub
mov
inc
fdivs
popf
movsb
push
fildl
or
test
pop
int
shrl
xchg
add
mov
jb
sub
fnstenv
jmp
adc
lret
push
fnstsw
sti
cmp
shll
add
inc
and
sar
in
int3
and
fbld
loop,pt
sub
dec
jecxz
rcll
and
rcrb
inc
adc
subl
into
mov
dec
je
jo
mov
pop
shrl
and
dec
js
int
push
or
add
je
mov
jbe
cs
lcall
jnp
test
leave
stc
stc
mov
pop
mov
dec
clc
std
sub
ret
sub
fcmovu
pushf
stos
popa
push
xchg
sti
icebp
repz
inc
cmpsl
out
xchg
jnp
enter
mov
add
add
mov
xchg
cs
leave
mov
std
xchg
push
loope
bndldx
dec
adc
cmp
sbb
es
mov
push
push
es
int
mov
add
and
jle
pop
push
xchg
sub
cmp
mov
dec
sbb
mov
movsb
adc
lock
inc
fs
fwait
cmp
out
loop
dec
cmp
leave
sub
lret
pop
outsb
sbb
push
push
inc
sub
inc
rcrb
fstp
in
repnz
mov
in
pop
and
cmp
inc
fmulp
mov
adc
icebp
jg
lret
push
lock
mov
pop
shll
data16
fsubs
xor
bound
out
or
enter
or
ja
idivl
loope
pop
fiadds
mov
adc
inc
sub
pop
sub
ss
mov
movsl
xchg
sbbl
inc
cli
pop
pop
fcmove
leave
movsl
int3
xchg
dec
or
push
fsubrs
jecxz
out
xchg
inc
push
dec
sub
push
fists
divl
cmp
or
xchg
or
je
in
cmp
movsl
xchg
testb
sbb
insl
cmp
push
mov
inc
fwait
pop
aam
cmp
push
loope
and
loop
test
pop
and
mov
ret
je
ss
stc
test
jne
xchg
fmuls
lods
mov
inc
jno
sbb
push
dec
or
call
push
dec
mov
popf
daa
int3
es
lea
pusha
enter
out
or
out
bound
adc
push
nop
or
test
loop
call
push
inc
scas
fadds
xor
xchg
jmp
push
push
dec
sub
sub
mov
cmp
out
mov
mov
in
mov
or
push
fisubs
cmc
jle
bnd
mov
or
and
mov
fs
daa
jmp
adc
lods
imulb
add
and
adc
sub
ficompl
lock
or
push
js
fadds
test
idiv
test
std
xlat
lock
in
cmp
cwtl
fbstp
jmp
scas
loop
sbb
or
push
xchg
das
pop
ja
fwait
pop
inc
xchg
imul
ljmp
leave
push
ret
iret
pop
jge
cmpsl
add
out
in
or
pop
test
les
test
hlt
sub
daa
sbb
popf
es
leave
int
mov
shlb
push
notb
leave
push
add
repz
sub
jno
xchg
mov
inc
adc
and
xchg
sbb
lds
lcall
popf
sbb
push
or
adc
dec
jl
arpl
je
lods
xor
sbb
fdivs
cs
add
rolb
lea
sti
lods
cwtl
sbb
push
sbb
xchg
in
scas
push
sbbb
out
xor
pusha
mov
mov
or
mov
mov
xor
jae
cmp
sahf
mov
repnz
aaa
mov
xchg
clc
fisubs
shrb
imul
stos
push
jo
cwtl
fidivrs
stos
aad
aas
or
imul
cmp
mov
lods
jl
mov
mov
into
inc
jg
test
sub
or
push
mov
cld
ljmp
jno
and
sub
lods
iret
out
int3
fdivr
rol
jbe
sti
out
push
dec
in
xchg
movsb
popa
addr16
ja
pop
mov
ja
sar
pop
pop
stc
xchg
mov
or
pusha
dec
leave
adcl
jle
ds
outsl
mov
mov
mov
mov
jmp
sub
mov
mov
cwtl
call
sbb
scas
or
push
aam
sub
sub
sub
xlat
and
shr
add
push
scas
sbb
push
outsb
rorl
cmpsl
fwait
sarb
stos
lods
add
iret
jg
scas
jno
xor
adc
nop
call
xor
iret
xchg
jle
sub
inc
loop
sub
out
fwait
xchg
mov
test
cmpsl
arpl
bound
adc
or
push
lret
lcall
push
and
mov
nop
dec
inc
or
fstpt
adc
inc
stc
psrlq
xlat
jecxz
lods
xchg
mov
cmpsb
icebp
dec
orb
mov
sbb
test
push
cmpsb
sub
push
notb
dec
xchg
xchg
xlat
xchg
shll
and
or
or
sbb
lods
sbb
in
repz
shlb
add
push
xchg
call
test
arpl
call
mov
lock
shlb
mov
push
or
push
outsb
jbe
mov
mov
int3
inc
aad
inc
pop
push
cwtl
jo
push
pop
sbb
inc
jo
xor
loopne
cmpsl
lcall
pop
test
je
mov
fists
or
xor
xchg
xchg
inc
int3
out
pop
cmp
outsb
push
sarb
sbb
les
data16
jns
aam
cmp
lcall
decb
call
sahf
xlat
xor
jb
pop
push
cmp
popf
mov
sub
xchg
push
adcb
pop
das
xor
aad
lahf
lods
mov
add
or
je
data16
lods
clc
push
push
jne
jmp
or
call
mov
cmpb
iret
pop
xchg
or
adc
shll
les
aaa
fdivrl
inc
test
filds
scas
xchg
inc
scas
rcll
hlt
sbb
xor
frstor
jb
jns
or
stc
clc
add
js
jbe
test
add
mov
sbb
nop
jle
adc
enter
test
cld
dec
popf
mov
and
mov
xor
sub
cmp
jmp
mov
ja
xchg
sub
dec
xor
sub
fcompl
dec
lahf
sti
das
aas
mov
dec
sbb
mov
mov
mov
jb
jae
add
dec
xchg
xchg
xor
inc
cld
dec
or
mov
add
pop
sub
inc
sbb
inc
xchg
pushf
lcall
sbb
cmp
lds
outsb
imul
pop
mov
jl
inc
cmp
add
es
je
icebp
jbe
jbe
mov
jge
mov
pop
std
xchg
jae
lock
shlb
mov
loopne
inc
push
and
xchg
mov
ljmp
or
imul
pop
push
sub
mov
jne
jge
mov
pop
jp
hlt
sbb
cmc
arpl
cld
push
jl
pop
and
mov
dec
sub
sbb
push
inc
in
push
out
lods
leave
jbe
cmp
adc
cmpsb
push
mov
push
pop
jnp
mov
cmp
cli
cmp
mov
pusha
dec
out
push
int
adc
jge
lock
mov
jle
cltd
inc
mov
cmp
subb
mov
cltd
cmp
inc
lretw
repnz
shll
push
mov
sbb
insb
pop
dec
inc
test
fwait
lods
das
mov
xchg
fisubl
inc
pop
inc
stos
ljmp
xlat
pushf
add
push
stos
cs
out
mov
es
jo
insl
fwait
and
adc
out
push
push
enter
repnz
push
ret
xor
xor
js
es
dec
ja
jecxz
shrb
outsb
jl
xchg
dec
cwtl
aad
aad
and
movsl
inc
insb
sbbl
loop
sbb
scas
cli
sub
shlb
mov
scas
adc
mov
jo
adc
cs
addr16
iret
je
sub
testb
scas
fadds
dec
mov
mov
test
les
loop
enter
enter
xchg
dec
cmp
lret
outsl
enter
sbb
cltd
jp
jno
xchg
mov
pop
ret
mov
cmc
ja
jp
cltd
pop
xlat
cltd
jae
add
movsb
cld
push
and
cmpsb
stos
xor
js
inc
popa
lea
or
stos
add
ljmp
mov
add
dec
popf
xchg
fldenv
or
xchg
fdivrl
dec
into
iret
jae
mov
bound
fstpt
ljmp
subb
push
mov
sbb
rcr
loope
xchg
or
xchg
dec
jmp
outsb
cmp
xchg
scas
cmp
pop
push
imul
rcrl
push
lea
add
fwait
mov
popf
xchg
fisttpll
and
jns
jg
and
out
mov
cmp
sbb
or
pop
pop
push
or
ja
pop
xchg
repz
fisttpl
enter
iret
cmp
or
adc
adc
sbbb
mov
jecxz
shrb
call
shll
fiaddl
loopne
lods
push
fistpll
mov
hlt
jne
xor
jb
mov
and
mov
inc
sbb
and
or
xchg
daa
or
cmpsl
negl
xchg
test
cli
xchg
test
add
mov
push
mov
mov
sbb
or
xor
and
sbb
add
jne
insb
inc
rcrb
out
in
mov
call
push
lcall
inc
imul
subb
cmp
shlb
insb
mov
push
sbb
pop
xor
pushf
push
xlat
inc
or
rolb
repz
mov
out
and
call
jnp
data16
mov
sbb
cmp
xchg
les
fst
in
or
out
in
mov
and
leave
std
mov
sbb
mov
mov
jp
push
push
shrb
xchg
fidivs
fwait
pop
in
rcll
stc
js
jl
pop
sbb
les
adc
sub
sub
in
push
pop
rcrl
xchg
aad
out
pop
sahf
xchg
movsb
not
out
rolb
rol
push
jl
jl
and
inc
cli
push
sbb
adc
pop
loopne,pn
mov
cmp
test
pop
jle
iret
iret
dec
sbb
add
jb
test
adc
loopne
add
je
inc
mov
mov
xchg
insl
loop
add
sub
xchg
add
sbb
and
pushf
add
xchg
push
das
lds
in
into
adc
fistps
xchg
outsl
shrb
mov
pop
testb
push
insb
test
jo
jl
jns
pusha
sbb
dec
mov
lret
add
push
and
test
jo
popa
bound
or
mov
jae
mov
gs
in
xchg
pusha
xchg
jge
sub
test
dec
iret
and
cli
test
mov
mov
fnstenv
jg
xchg
push
push
jecxz
movl
or
add
pop
pushf
inc
loope
sbb
push
out
mov
mov
test
and
xchg
push
rcrb
mov
mov
mov
loope
std
or
push
adc
or
xor
add
mov
add
dec
int
call
in
sbb
int3
pop
decb
adcl
pop
mov
rcll
or
push
insl
out
push
jbe
sub
sub
nop
cmpsl
outsb
mov
xor
and
int3
ret
push
jmp
xor
mov
daa
push
loop
sbb
pop
sub
mov
jne
dec
jbe
or
add
add
mov
sti
cs
pop
stc
xchg
or
push
cwtl
sub
loop
aaa
mov
dec
repz
pusha
pop
mov
cmp
aam
lret
enterw
mov
dec
xchg
jmp
sbb
inc
mov
sbb
xor
sub
sub
je
xchg
cmp
aad
jmp
das
cmp
pusha
mov
ja
icebp
mov
loop
int
dec
jne
pop
popf
test
fs
sbb
push
and
pop
ret
jns
outsl
mov
sbb
lods
xchg
jne
mov
adc
xor
mov
stos
fisubs
std
jb
aas
sbb
inc
xchg
fsubrs
pop
pusha
iret
xchg
sub
hlt
mov
mov
leave
movsl
mov
mov
jle
inc
adc
mov
sti
xor
scas
sahf
mov
repz
icebp
scas
sub
frstor
incl
aas
dec
xchg
adc
out
add
clc
inc
aaa
adc
mov
xor
outsl
sbb
fmuls
cld
dec
fwait
stc
stos
cmp
mov
ds
push
fcom
dec
xor
push
inc
pushf
bound
rolb
int3
mov
or
or
loopne
pop
mov
test
push
stos
push
rcrb
mov
xchg
push
xlat
leave
repnz
popl
pop
mov
push
cmp
or
shrl
test
daa
int3
mov
sbb
cmp
adc
in
cmp
mov
jmp
std
dec
test
inc
out
cli
mov
aad
xor
and
nop
scas
add
js
repnz
sahf
xor
ret
in
adc
mov
js
dec
adc
in
aam
jbe
xchg
jl
add
dec
fisubrl
mov
out
ja
test
outsb
dec
ja
outsb
dec
out
jno
les
jmp
rol
les
repz
orb
loope
mov
push
loop
scas
pop
lcall
push
adcl
dec
test
mov
xor
pop
sbb
cwtl
es
cwtl
sti
call
push
sarb
out
inc
repz
subb
inc
test
inc
test
mov
pop
xchg
add
add
aas
xchg
ret
push
dec
xchg
push
adc
ljmp
shll
mov
lds
cmp
das
movl
cltd
scas
das
jno
test
sbb
xor
test
sahf
sti
imull
mov
lea
imul
mov
je
inc
cmc
mov
insl
in
nop
and
xchg
pushf
aas
movsl
add
mov
sbb
out
dec
in
cmpl
int
jp
dec
inc
pop
popf
adc
lds
leave
adc
adc
fldt
lods
xchg
pop
ret
dec
xchg
lret
cmpsb
jbe
cmp
and
jns
add
pop
inc
fdivr
push
cmp
iret
cmpsb
adc
sub
rcrl
push
mov
stos
push
pop
lcall
ficoml
adc
dec
mov
xchg
fdivrl
cmp
adc
into
stos
mov
cld
xlat
mov
jo
push
lret
nop
push
cmp
icebp
jmp
leave
aas
divl
aas
adc
xorb
xchg
inc
xchg
cwtl
push
xor
jmp
or
rcll
dec
xchg
add
shl
mov
test
fsubrl
scas
stos
arpl
jmp
jmp
fcomip
adc
cmp
xor
frstor
xlat
mov
mov
cld
cmpsb
xlat
daa
out
lods
inc
xor
xchg
sub
mov
lea
mov
mov
fsubrs
es
popa
cmpsb
lret
jae
mov
jl
les
shrl
dec
shrb
cmpsl
lea
pusha
or
push
push
jg
xchg
leave
sbb
cmp
ss
cmp
bound
jns
inc
xor
mov
xor
cltd
mov
adc
dec
push
dec
negl
or
jbe
insl
cmp
testl
idivb
daa
xor
xchg
or
test
movsl
insb
inc
dec
fnstcw
mov
mov
out
in
mov
jae
and
mov
push
ss
stos
xor
push
and
and
cmp
insl
loop
pop
adc
or
jno
dec
iret
inc
or
mov
pop
jle
pusha
dec
call
outsb
movsb
and
adc
arpl
xchg
arpl
lret
jnp
mov
cmp
test
mov
insb
mov
in
cmpsl
push
mov
mov
mov
and
mov
mov
loopne
and
mov
and
stc
jle
sub
popf
test
mov
mov
sbb
fidivl
in
sub
xchg
daa
ss
inc
add
pop
jle
jmp
adc
testb
popa
insl
mov
add
movsb
or
aaa
cs
fdivl
cmc
pop
sub
test
xor
cli
push
in
push
jb
mov
addb
push
add
jne
dec
sbb
jg
xor
repz
ret
pop
icebp
xchg
push
inc
push
and
sbb
jbe
fs
nop
ss
call
sub
imull
shr
test
inc
xchg
pop
movsl
out
or
dec
test
jl
sub
pushf
adc
sub
lea
test
out
xchg
sub
int3
lea
clc
mov
aad
adc
xorl
add
addr16
add
mov
in
and
outsb
xor
jbe
lret
adc
mov
xchg
enter
stos
test
dec
scas
xchg
adc
decl
and
cld
push
cld
ss
movsb
sub
mov
inc
push
cmp
shll
mov
add
iret
aas
jp
adc
jle
mov
mov
sub
mov
add
or
sbb
pusha
aaa
in
inc
pop
inc
shl
in
push
sahf
testl
enter
jne
sub
pop
das
cli
hlt
jae
xchg
stos
stc
xchg
cmp
pop
fstps
inc
sti
jmp
sbb
jb
dec
adc
clc
into
mov
xchg
cld
mov
fimuls
daa
sbbb
add
in
add
out
mov
popa
jg
mov
push
out
xchg
movsb
xor
mov
jbe
cld
idivl
sbb
dec
or
add
fidivrl
fnclex
lods
dec
sysret
mov
or
out
es
test
dec
ljmp
cmpsl
mov
scas
and
rcr
dec
mov
cmp
out
cmp
popf
jb
lret
pop
jnp
inc
mov
mov
adc
jge
stc
addr16
pop
sbb
jle
xchg
add
test
fbstp
mov
jmp
in
int3
pop
in
popa
sbb
adc
mov
shlb
aaa
pop
das
inc
leave
cltd
lret
pop
out
pop
arpl
xlat
xchg
mov
jg
std
or
xor
cwtl
fisubl
loopne
sub
imul
cmpsl
xor
stc
adc
xchg
cli
xor
movsl
stos
stos
cmpsl
test
push
dec
pop
mov
rorl
or
rorb
jno
pop
arpl
lea
jb
in
add
xchg
mov
daa
xlat
stos
rcl
lock
pop
add
mov
je
pop
inc
xchg
out
loope
or
xchg
lcall
jno
lret
test
daa
outsb
cmp
ja
div
bound
mov
cmpsb
mov
cltd
lcall
xchg
or
sub
xchg
and
cmp
loopne
fdivp
cmpsb
movsl
test
cmp
cmp
lahf
insb
xchg
xchg
add
inc
aaa
addl
push
xchg
push
imull
mov
cs
nop
jg
mov
or
lahf
aaa
mov
fld
inc
fs
pop
sbb
test
pop
and
adc
dec
testb
mov
push
mov
and
xchg
dec
pop
cmp
fs
and
mov
icebp
sub
sbbl
fisubs
sub
cltd
or
pop
ja
roll
adcl
cwtl
into
test
inc
mov
dec
xchg
mov
mov
mov
cltd
call
fadd
and
pop
mov
push
jge
push
je
fistps
test
aaa
sub
incb
test
enter
mov
ret
loop
arpl
fldenv
dec
dec
pop
pop
inc
or
mov
popf
enter
aad
dec
movsb
pop
jp
aad
ljmp
sahf
mov
or
mov
mov
xor
clc
sbb
pop
jb
loope
jne
jns
jmp
scas
arpl
ret
ret
pop
clc
js
cmp
push
in
lods
inc
outsb
les
xor
xchg
push
xor
add
fistpl
outsb
pop
jnp
jge
sahf
mov
dec
cmp
in
test
adc
cmpsb
push
incl
jecxz
and
imul
pop
outsl
xchg
mov
dec
mov
inc
aas
add
pop
adc
adc
cltd
or
or
ja
jne
adc
shrb
jg
scas
inc
xchg
and
lock
cmp
scas
cs
add
xchg
pop
jmp
ret
pushf
xchg
xchg
andl
test
jmp
adc
pushf
jae
add
inc
test
dec
pop
and
add
movl
in
push
pop
imul
rorb
xor
test
add
mov
xor
or
mov
js
xor
pop
jmp
out
xor
mov
mov
imulb
pop
cmpsb
enter
enter
mov
fwait
sti
lods
jb
sub
mov
dec
ret
cmp
xor
lret
xor
push
stos
out
in
mov
add
sbb
mov
add
sbb
iret
std
in
aas
stc
leave
jae
add
mov
sbb
push
test
cmp
addr16
rorl
and
adc
fadds
push
jo
imul
and
inc
ja
pushf
adc
lret
adc
mov
outsl
cmp
push
repnz
scas
cltd
test
push
rol
das
mov
mov
add
popa
das
mov
jmp
aad
add
loop
or
pop
mov
push
test
repnz
inc
sub
and
adc
xor
inc
test
pop
jno
push
in
in
push
xor
filds
add
cld
lods
repz
cmc
insl
clc
sbb
insb
mov
ret
sub
adc
or
dec
movsl
test
adc
int
outsl
movsb
cltd
xor
pop
inc
testb
int3
jbe
mov
add
adc
imul
js
mov
pusha
jge
in
scas
xchg
test
xor
adc
call
cmp
arpl
mov
daa
mov
push
or
out
inc
daa
or
pop
xor
add
lods
push
xchg
pop
sbb
mov
js
mov
mov
or
pop
cmpsb
inc
cmp
pop
clc
ficoms
pop
dec
pop
out
movsb
xlat
pop
xlat
ret
iret
cmp
das
rcr
sub
push
rolb
or
or
mov
jno
mov
jmp
test
scas
daa
mov
imul
xchg
fmulp
mov
xchg
jmp
outsl
nop
stc
xchg
das
sub
cmc
popa
inc
or
arpl
or
dec
xor
fldl
jmp
inc
in
movsb
outsl
lret
lcall
pop
ret
mov
ljmp
pop
mov
mov
sbb
sahf
and
xchg
xchg
cmp
push
xchg
pushf
arpl
and
mov
mov
jge
push
inc
pushf
pop
mov
adcl
int3
jl
shl
pop
jns
inc
push
push
mov
jne
ret
jne
int
ss
add
xorb
dec
jno
nop
lea
or
push
rcrl
push
inc
cmc
incb
cmpsl
mov
in
push
jl
sbb
in
mov
or
das
sbb
sub
addr16
cmp
ret
xchg
jge
dec
gs
cs
inc
mov
shl
or
xchg
cmp
scas
xchg
gs
mov
sbb
mov
bound
cmp
pushf
and
fiaddl
jmp
jbe
or
outsb
sbb
pop
pop
mov
pop
sub
loope
add
stos
in
push
fadds
add
xchg
aam
mov
xor
lds
pop
aas
mov
imul
mov
jb
inc
test
mov
gs
mov
cmp
push
mov
mov
dec
xor
and
cmp
repnz
cmpsl
sub
mov
pop
jge
jg
loop
sbbb
ret
sbb
push
sbb
adc
js
loopne
xchg
sub
es
in
push
fdivrs
lcall
out
shl
add
in
imul
movsl
fadd
arpl
outsb
xor
notl
pop
arpl
test
movsl
add
daa
vmread
in
insb
mov
mov
jle
clc
sti
fadd
jae
jae
imul
std
mov
ss
sbb
ja
cmp
or
pusha
sbb
add
das
cld
jno
lcall
sbb
cmp
js
jecxz
or
fnstcw
enter
popa
dec
jb
xchg
cmpsb
icebp
lea
xchg
sbb
xorb
dec
out
xchg
xchg
and
aad
cli
lds
out
lret
shl
mov
inc
dec
idivl
hlt
xor
dec
sbb
pop
cs
pop
fiadds
sti
mov
cmpsb
shll
xchg
fstpt
mov
inc
sub
mov
xchg
add
dec
je
in
push
mov
mov
int3
push
sbb
loop
push
test
xchg
clc
cmpsl
mov
push
rorl
arpl
pop
sarb
adc
mov
dec
cltd
jmp
jnp
outsl
pop
and
icebp
stc
icebp
inc
psrld
sub
pop
ret
jbe
pop
lea
sub
out
xchg
in
pusha
pop
or
and
sahf
out
int
jnp
imul
xor
xor
aas
dec
in
push
jbe
cmp
outsl
and
add
int
stos
aad
sbb
enter
fiadds
adc
fcoms
add
insl
xchg
movb
or
mov
xlat
mov
mov
icebp
adc
adc
divb
scas
mov
cmp
das
aad
inc
ficoms
adc
mov
arpl
call
imul
popf
fidivs
dec
inc
add
dec
sbb
and
aad
sbb
scas
dec
outsl
cs
sub
pop
cmp
js
pop
add
out
js
sbb
push
pop
mov
inc
cmp
shrl
push
aaa
push
fsqrt
push
scas
mov
jle
mov
dec
dec
push
and
add
pop
add
test
sub
outsl
xchg
insl
add
jno
dec
dec
xchg
cmp
sahf
out
hlt
imul
pop
lret
cwtl
mov
pop
rorb
scas
inc
jmp
daa
mov
push
arpl
add
jae
inc
fists
sbb
movsl
ljmp
aas
sbbb
jbe
iret
inc
xor
call
cwtl
lods
out
xchg
mov
mov
cwtl
mov
add
in
nop
dec
jns
mov
clc
and
sti
jl
jo
sti
mov
adc
movsl
sub
cmpsl
jmp
mov
rorl
cmp
es
inc
lahf
mov
jbe
das
sbbb
sbb
cld
mov
and
lods
pop
mov
cwtl
inc
inc
and
stos
sbb
aam
mov
mov
movsb
dec
insl
std
sarl
test
sbb
popaw
sbb
mov
int
xchg
or
gs
pop
orb
sahf
fisubs
adc
add
pop
pop
push
jle
ljmp
pop
mov
lret
repz
sahf
hlt
out
andb
adc
into
stos
cmc
add
jb
and
mov
push
aad
setl
fcoml
dec
in
sahf
out
ja,pt
pusha
sahf
mov
cs
aad
int3
ja
adc
cmpsl
push
mov
dec
dec
mov
scas
fsubrp
imul
pusha
movsb
xchg
push
fnstsw
sbb
and
out
adc
cmc
or
cmpsl
in
mov
div
sbb
lods
outsb
repz
lcall
lods
add
dec
cmp
int
or
repnz
icebp
nop
and
push
mov
cld
insb
jnp
mov
inc
sbb
out
cmpl
sbb
rcll
andl
lahf
mov
add
inc
stos
test
popf
jo
lds
leave
push
lock
cmpsl
jge
dec
test
adc
sahf
scas
ds
xchg
rorl
lods
cli
lea
int
fbstp
stc
icebp
aas
frstor
xor
fisubrl
pushf
inc
ljmp
mov
adc
push
mov
les
mov
sub
dec
mov
cmp
icebp
mov
repnz
pop
dec
lea
sub
mov
or
jns
dec
sbb
fisttps
xchg
nop
add
jl
sub
mov
xlat
adc
int
and
cld
fimuls
retw
push
orb
out
sub
or
std
fs
ret
adc
insl
data16
and
and
or
or
add
inc
cld
or
mov
adc
ret
sub
pop
jbe
mov
mov
incb
push
cltd
cmp
out
fldenv
push
add
int3
jle
add
sub
mov
sbb
or
pop
add
mov
mov
movsl
ja
loopne
adc
xchg
xchg
scas
mov
jle
sub
or
fcmovu
mov
add
mov
mov
adc
addr16
negb
or
xor
call
push
rcll
das
and
cmc
imul
int3
clc
adc
cmpsl
pop
push
scas
ret
ljmp
mov
xchg
repnz
cmpsb
fnsave
xor
andb
dec
sub
ret
xchg
lahf
mov
dec
lahf
lahf
mulb
xchg
inc
mov
push
fmull
hlt
xchg
fistpl
cmpsb
jle
lret
push
cmpsl
lahf
fcoml
xor
loop
daa
insb
pop
cmp
cmp
pop
loopne
sbb
stc
xchg
add
into
pop
daa
aaa
pop
les
icebp
sbb
xchg
dec
int3
nop
xor
sahf
inc
mov
jno
lret
mov
xlat
out
lahf
push
repz
and
mov
mov
sub
push
rcl
jo
and
mov
lcall
das
cs
pop
iret
pop
mov
fbld
ficomps
push
sub
push
push
cmp
mov
push
mov
inc
cmpb
hlt
rcl
push
jecxz
pop
es
xor
fs
add
sbbl
int3
fcoml
dec
fstp
mov
dec
pop
inc
adc
mov
dec
push
mov
mov
sub
js
clc
cmpsb
int3
jnp
push
das
sub
adc
shlb
mov
cmp
adc
xchg
jb
and
repnz
stos
jae
and
jge
stos
incb
stos
leave
dec
das
movsb
xor
fisttps
arpl
negl
dec
popf
incl
into
inc
jns
mov
mov
xchg
lods
in
sub
cmp
sbb
and
adc
mov
jno
adc
cmp
pop
inc
cmp
stos
rclb
daa
sahf
pop
shrb
or
test
aam
and
fwait
ljmp
cmovle
sahf
or
aaa
and
or
cs
cltd
fwait
ja
mov
scas
add
adc
xchg
ja
out
rep
xchg
inc
mov
jle
call
movsb
pop
lea
sbb
dec
mov
pop
jmp
push
push
pop
and
xchg
dec
push
or
outsl
inc
shrl
mov
push
sbb
es
xchg
rcrb
xchg
mov
cld
out
push
sar
test
ja
bound
add
add
pop
push
lods
pop
cmp
pop
je
adc
jp
das
mov
sub
gs
fisttpll
icebp
mov
xor
fcoml
jbe
sbb
enter
push
scas
or
jo
cld
xchg
mov
cmpsl
iret
int3
add
cs
cwtl
sub
push
mov
push
imul
pop
sbb
dec
or
orl
cmp
inc
ja
repnz
jle
pop
popa
cmp
ror
cmpsl
fists
dec
or
int3
push
sbbb
mov
mov
shlb
int
loop
sbb
lock
movsb
jae
jb
xchg
mov
js
iret
fwait
loopne
jns
popf
jne
cld
roll
sub
xchg
fists
gs
fisubrs
pop
pop
sti
cmc
negl
in
outsb
push
pop
shll
adc
clc
jno
and
insb
lret
jecxz
out
mull
adc
lods
push
mov
pop
test
pusha
dec
push
pop
stos
cld
jmp
or
jae
int
jg
adc
pop
clc
scas
jmp
push
movsb
into
pop
in
mov
push
scas
sarl
push
add
sbb
in
push
aaa
icebp
call
mov
adcb
cmp
xchg
dec
xchg
out
sbb
pop
xchg
imul
icebp
inc
lods
push
mov
mov
adc
test
cmp
sub
cld
loope
stc
push
inc
inc
pop
xchg
cltd
mov
sbb
mov
mov
dec
inc
outsl
lds
ret
xor
or
push
into
mov
add
lods
adc
test
mov
lds
sub
mov
push
outsb
loope
aas
xor
mov
cmpl
fldt
xchg
fnstsw
push
sahf
sbb
jmp
sbb
pop
pusha
cli
sub
jp
loopne
dec
xchg
stos
aas
scas
jne
cmpl
bnd
pop
scas
adc
mov
jmp
hlt
aad
sbb
cmp
fs
inc
push
cmp
cmpl
push
mov
outsl
shrb
xor
mov
or
sub
lret
sbb
lods
icebp
xor
fdivrs
adc
jg
popf
mov
inc
dec
and
popa
ret
add
xor
pop
jl
xchg
lret
insl
out
shlb
pop
mov
sub
inc
cmp
mov
mov
mov
pop
mov
inc
shl
jl
pause
fmull
icebp
cmp
pop
jne
in
sahf
test
or
xor
add
pop
repz
hlt
add
xor
sub
mov
popa
xchg
add
push
imul
mov
push
xchg
sub
dec
sub
mov
lds
ljmp
push
sub
fwait
insl
sbb
out
les
pop
xor
out
ds
xor
aas
jp
mov
add
pop
mov
push
jae
pop
xchg
inc
in
fdiv
pop
notl
je
lea
in
dec
xlat
sub
hlt
adc
sbb
sbb
lcall
inc
sub
dec
dec
push
loopne
mov
adc
push
ret
icebp
shl
jnp
add
cltd
pusha
jg
xchg
pop
mov
jae
xor
out
out
fsubl
or
or
mov
cmc
stc
jg
fmuls
sbb
imul
xchg
jle
aam
or
inc
lcall
push
mov
inc
ss
and
jl
xorb
adc
add
and
push
les
ret
pop
cld
xchg
pop
loopne
push
gs
jecxz
mov
cmp
ja
mov
in
loope
out
jp
pop
movsl
mov
aam
hlt
inc
push
and
dec
fbld
les
movsl
idivl
pop
ds
sti
adc
imul
mov
adc
mov
aas
stc
rclb
lcall
repnz
push
push
sbb
mov
aad
cld
jnp
jae
test
stc
push
mov
or
lods
aam
xchg
std
int3
in
icebp
sub
jns
popf
xchg
popf
mov
aad
jo
cltd
aad
and
push
aas
jp
aam
cmp
pop
imul
lcall
add
test
scas
fcomps
cs
jmp
jmp
sbb
stos
addl
ljmp
lock
mov
cli
insl
mov
adc
mov
adcb
adc
scas
and
aad
sbb
lcall
add
mov
xor
nop
jnp
insl
imul
invd
scas
addr16
out
fldln2
insl
or
insb
cmp
mov
pop
push
fsubrl
scas
and
sbb
xorb
test
aas
mov
dec
jl
mov
pushf
gs
dec
enter
and
hlt
adc
pop
inc
cli
sub
push
add
imul
lcall
icebp
push
fst
mov
lret
jno
ljmp
lock
lods
jge
das
mov
ds
in
jno
xchg
lahf
and
sub
xor
pop
stos
cld
lcall
fcomps
loopne
js
push
pop
bound
lahf
dec
imul
arpl
rcrl
fldt
shlb
xor
sti
or
scas
jnp
std
sub
popf
nop
and
mov
cli
mov
jecxz
shlb
jne
inc
cmpl
mov
pusha
aas
push
fcoml
mov
sbb
mov
pop
fwait
lea
stos
stc
loope
xor
sahf
pushf
jno
loope
into
xor
out
shl
ret
pop
ret
movsb
mov
sbb
dec
pusha
dec
clc
sub
ljmp
stc
fsts
mov
fiaddl
pop
sbb
scas
jecxz
lahf
call
fists
and
fwait
and
mov
mov
sub
and
lea
and
adc
daa
mov
mov
xor
adc
icebp
inc
cmc
push
outsl
call
ss
ret
pop
mov
sbb
fs
sbb
jno
mov
lea
add
push
mov
jmp
sub
push
adc
shl
insb
adc
notb
pop
sbb
mov
nop
rorb
in
js
jge
xchg
mov
outsl
loop
xchg
push
loope
addr16
mov
sbb
leave
xchg
pop
push
scas
sahf
in
arpl
adc
jne
pop
push
ja
adc
insb
lods
cmp
sub
adc
ret
dec
into
les
in
imul
mov
mov
cmp
cmpsb
fs
repnz
dec
cld
mov
mov
pop
mov
sub
xchg
pushf
orb
inc
push
aas
jg
fistpl
adc
shll
dec
push
sbb
ss
fistl
sub
mov
das
sbb
dec
inc
aad
nop
outsl
icebp
rolb
fldl
push
mov
pusha
jo
and
jg
dec
arpl
jnp
addl
sbb
fsubs
jo
movsl
mov
movsb
insl
mov
mov
adc
fidivrs
adc
push
test
clc
push
test
ja
mov
push
dec
outsb
adc
movsb
clc
xor
iret
sub
lock
cmp
dec
jge
aas
sbb
jmp
daa
aas
stc
incb
dec
arpl
stos
lret
mov
push
fs
sub
sbbl
cmp
les
push
lahf
pop
mov
jno
jmp
mov
mov
cmp
cltd
in
je
add
test
inc
out
xchg
push
mov
sub
cmp
repz
popa
insb
pop
adc
fs
sub
add
shr
add
inc
inc
dec
fiadds
int
inc
xchg
ret
fwait
jo
insb
push
adc
cltd
jne
and
jmp
aam
cli
pop
es
stos
lcall
xor
pop
xlat
lsl
adc
pop
iret
jmp
mov
lds
dec
add
mov
pop
sbb
jle
sbb
jne
fwait
pop
mov
mov
enter
fs
adc
mov
jb
cmp
lret
push
sbb
xchg
add
mov
out
mov
int
ljmp
loop
sub
mov
dec
mov
and
lock
rcr
push
ss
and
inc
lds
jnp
or
sub
xchg
push
in
lret
in
lret
lcall
daa
cmp
jge
mov
jmp
cmp
xchg
fsubs
pop
and
mov
xchg
inc
leave
inc
xchg
and
mov
cli
xor
aas
mov
arpl
adc
dec
lcall
or
sub
cmc
inc
js
mov
loop
jnp
mov
dec
push
ret
inc
cmp
xor
sbb
loope
or
jae
cmpsl
pop
pop
add
mov
call
sub
dec
sbb
and
cld
test
shrb
or
subl
xchg
out
mov
orl
lock
adcb
pop
out
sub
or
cmp
mov
addr16
mov
cli
xchg
ds
inc
push
xor
mov
dec
out
xchg
add
jns
int
fcmovb
es
cld
xor
push
xor
data16
andl
int
int
or
mov
push
leave
and
and
pop
adc
xlat
fisubrl
fiaddl
lret
push
mov
orl
mov
jb
cli
incb
fld
xor
movsb
sub
lods
xor
cmpsb
jns
jnp
inc
outsl
dec
fsubrl
pushf
cld
mov
sub
sarb
xchg
sbb
incl
xchg
mov
fwait
movsl
shll
xchg
xchg
fsubrs
sbb
int3
mov
xchg
jmp
dec
and
fmul
xlat
out
aas
xchg
jg
icebp
add
jp
out
jo,pt
je
adc
pop
sub
pop
int
movsl
fwait
sub
dec
aam
adc
mov
xor
imulb
les
insb
je
sbb
adc
mov
jg
cmpsb
test
cmp
inc
divb
out
push
mov
sub
pusha
mov
test
push
mov
inc
mov
icebp
xlat
adcl
or
outsl
fdivr
insl
mov
insl
in
loopne
adc
sub
xor
out
jg
repnz
jecxz
mov
pushf
icebp
sbb
mov
dec
loop
lret
sti
negl
js
outsl
xchg
fs
add
sbb
and
call
push
add
inc
imul
scas
xchg
in
or
push
ss
lea
jnp
leave
in
fbstp
shlb
out
push
add
xor
aad
mov
adc
add
loop
mov
inc
inc
mov
jp
les
cmp
shl
outsb
mov
lods
cwtl
daa
ds
lock
loopne
and
lcall
cltd
and
inc
aas
clc
sbb
inc
pop
mov
rcrl
fdiv
adc
pop
arpl
rcl
lds
xor
mov
push
outsl
ud2
int
aaa
shlb
and
je
ds
ss
fists
out
dec
pop
andl
cmp
cs
repnz
movsl
lods
mov
lret
xchg
sub
inc
jge
fcmovnu
add
sti
icebp
pop
pop
or
mov
in
cmp
dec
push
cmpsb
sbb
pop
pop
aad
mov
dec
fs
movsl
data16
cmp
movhps
xlat
jns
popa
into
pop
add
mov
or
mov
orl
repz
out
nop
dec
ljmp
lds
jp
pop
add
mov
mov
xchg
mov
std
pop
dec
std
test
inc
and
addr16
sbb
inc
stos
sahf
mov
dec
jbe
jno
sbb
mov
pop
sahf
pop
push
sub
test
mov
push
std
fmul
imul
sbb
and
stos
and
add
ljmp
pushf
adc
stc
dec
fcomp
or
mov
lock
loop
mov
fstps
xchg
push
sahf
xchg
sbb
fwait
aas
push
popf
sbb
lret
push
icebp
xchg
mov
jecxz
dec
maskmovq
mov
bound
xchg
dec
adc
repz
push
add
lret
fmul
insb
in
mov
jl
cmp
int
sbb
and
xchg
mov
lahf
dec
and
test
lods
fldt
dec
mov
hlt
xchg
and
xchg
pop
push
sub
sub
cli
jne
lea
pop
cmp
sub
int3
jg
out
cmp
js
ds
loop
aaa
sub
pop
loope
fidivl
int3
lods
mov
adc
std
jle
xchg
test
enter
inc
hlt
cs
nop
push
mov
adc
cmp
int
mov
ret
mov
sub
cmpb
dec
mov
adc
push
jo
lock
out
push
adc
mov
mov
lcall
es
ss
fldl
pop
adc
xor
stos
mov
xchg
out
sub
push
pusha
lret
jae
add
push
xchg
inc
ljmp
xor
pop
fwait
into
pop
push
adc
adcb
scas
ljmp
mov
out
pop
repz
into
dec
fsubs
push
xor
fmuls
add
imul
fdivl
xchg
add
inc
pushf
sbb
cmc
jg
fiadds
jmp
mov
sbb
adc
or
sbb
cmpsb
cmp
out
add
aaa
xlat
mov
dec
push
test
bound
cmp
push
into
jmp
cs
mov
jnp
jle
aam
mov
and
out
mov
loopne
fs
inc
jbe
cmp
sub
test
push
jmp
cmpsb
mov
cmpsb
nop
xchg
cmp
push
mulb
dec
jno
aas
and
pop
dec
cli
out
rcrl
sub
xchg
or
add
lret
or
pushf
push
iret
push
cs
adc
mov
aas
mov
xor
sbb
pop
iret
addr16
lcall
sahf
test
xor
mov
popa
test
xor
clc
aam
rolb
jo
xchg
and
lock
sbb
out
pop
rclb
xor
popf
popf
xchg
push
lods
movsl
pop
xor
jae
fisttpll
push
iret
mov
gs
jle
cmp
xor
cmp
int
lock
pop
jo
push
sbb
jae
pop
pop
dec
sti
loopne
out
out
out
sti
jne
movsl
cmc
sbb
jl
pop
clc
loop
fucomip
ljmp
xor
divl
imul
loopne
in
lock
es
ret
jnp
gs
ljmp
jmp
mov
scas
call
les
adcb
push
je
push
xor
dec
ja
ds
scas
mov
stc
push
arpl
das
push
adc
fmull
sarb
xor
xchg
mov
dec
sub
lahf
loop
rclb
add
mov
mov
test
add
data16
sbb
inc
pop
shl
addl
ljmp
dec
aaa
mov
stos
stos
bound
cmp
push
pop
dec
movsl
sub
repz
pop
ss
push
popf
mov
inc
rolb
insb
mov
and
or
mov
ret
lret
mov
xor
clc
mov
cmp
iret
mov
adc
sub
jmp
mov
enter
sbb
push
clc
dec
lahf
fbstp
test
flds
aaa
out
mov
ljmp
xor
lret
pop
adc
push
mov
push
cwtl
lds
dec
mov
xorl
lret
js
jb
das
subb
mov
cs
les
ret
cmpsb
rcll
adc
sarb
adc
lcall
jns
xor
dec
inc
enter
arpl
dec
test
js
sub
pop
pop
les
add
test
jp
dec
test
shl
mov
add
sbb
loop
push
dec
popf
ret
fldt
jno
popf
xchg
push
lock
jecxz
inc
dec
in
jbe
inc
and
xchg
pop
mov
out
pop
pop
mov
pop
sti
les
xor
fwait
push
shrl
das
xchg
jno
mov
std
and
filds
xor
xchg
mov
xor
nop
cmpsl
bound
out
sub
push
hlt
loop
jmp
inc
ljmp
xor
push
mov
pusha
test
add
mov
int3
cld
mov
shlb
cmpsl
sub
lret
inc
add
pop
sbb
add
pop
push
insb
xchg
popa
jmp
std
xchg
xchg
cwtl
es
jle
loopne
sub
hlt
xchg
push
loopne
mov
jbe
ja
scas
add
ss
adcb
fstps
inc
daa
cmpsl
pop
repz
mov
mov
ret
test
cmpsl
icebp
push
gs
mov
or
fisubrs
sbb
decb
scas
xor
icebp
mov
ljmp
popf
mov
popf
sbb
add
xchg
dec
call
movsb
fidivrl
out
dec
inc
mov
adc
dec
mov
sub
add
cmpsb
loopne
outsb
lock
mov
xor
test
cmp
stos
loop
or
pop
ss
xlat
dec
add
mov
mov
outsl
clc
les
sbb
jb
dec
fistpll
mov
gs
loope
pop
and
cmp
add
and
jb
out
outsl
pop
out
and
dec
adc
movsb
or
cs
je
pop
jne
sub
push
clc
aad
pop
push
jne
scas
mov
imul
xor
outsb
mov
fbld
or
sbb
push
add
mov
ds
fwait
pusha
cmp
or
add
add
jl
lret
mov
inc
cmp
nop
rcl
adc
into
popa
sub
pop
adc
imul
inc
ret
mov
and
fidivl
cmp
test
ret
mov
and
or
ds
scas
stos
pop
jb
aas
adc
jg
loope
or
cmc
clc
mov
clc
dec
cmpsb
adc
pushf
aas
or
cld
cmp
sti
pop
mov
es
pop
jo
shr
mov
add
cmp
insl
fisubs
lret
sub
add
les
mov
sbb
sub
mov
scas
test
pop
push
sub
sub
repz
push
subb
sahf
shll
add
shrl
xchg
xchg
dec
imul
jne
push
movsl
push
addr16
lods
test
xor
sarl
fs
in
mov
mov
lahf
mov
stc
xchg
sbbb
icebp
paddq
ds
mov
ret
xor
insl
call
out
dec
pushf
std
aam
mov
push
xchg
dec
mov
mov
mov
shll
mov
pop
or
stc
nop
push
fdiv
or
jbe
rcll
sub
lret
imul
or
stos
mov
push
mov
mov
push
and
ljmp
cltd
push
jno
shrl
and
sbb
pop
das
cmp
mov
loope
clc
lods
mov
aam
loopne
sbb
dec
out
and
das
sub
mov
test
jecxz
mov
xchg
std
or
das
mov
shlb
lock
js
pop
push
cmp
push
data16
popa
inc
or
pop
std
jne
and
cmp
loopne
sbb
sahf
mov
inc
sbb
add
out
pop
shl
inc
lahf
out
sub
movsb
xchg
aam
pop
nop
ds
pop
dec
in
pop
dec
lahf
cli
add
pop
lods
in
out
mov
int
ret
sbb
sbb
or
in
call
mov
cmpsl
or
outsb
stos
aas
push
loop
es
and
loopne
cmp
jns
icebp
xor
pop
fwait
int3
mov
ret
xor
adc
cmpl
jnp
scas
xor
mov
adc
inc
or
dec
std
push
push
sbb
cltd
jp
cmp
adc
js
lods
sarb
test
and
lods
xor
mov
aaa
push
stos
out
arpl
pop
dec
aam
xor
stos
je
fldt
nop
lods
sub
rorb
addr16
sbb
cmp
cmpb
dec
cmpsl
push
mov
dec
pop
mov
pop
push
imul
add
jge
cmp
push
inc
leave
outsl
add
daa
push
mov
push
sbb
ror
xor
aaa
shrl
cmc
adc
lock
sub
lret
out
lahf
fwait
test
call
mov
clc
pushf
xchg
sbb
roll
push
dec
std
les
adcb
jl
cli
enter
cmpsb
xchg
cmc
cmp
subb
in
lret
push
fdivrl
mov
add
sbb
mov
fstl
push
mov
pop
lea
daa
dec
inc
cmpsb
ret
test
rcll
aas
dec
and
or
pop
test
mov
or
outsl
les
shll
mov
ss
mov
aas
xchg
cmp
adc
test
and
adc
jle
pop
fs
loop
fwait
pop
xchg
loopne
and
adc
sahf
test
mov
fmull
jns
cmc
add
dec
fcmovbe
dec
mov
shll
mov
cmp
inc
fbstp
pop
mov
stc
ffree
dec
dec
dec
insl
jbe
lock
imul
inc
add
or
cmp
add
sbb
gs
jmp
mov
pop
test
lcall
call
pop
dec
mov
rorl
mov
sbb
mov
sbb
test
pop
pop
cmp
mov
xchg
cli
cmpsl
adc
push
pop
pop
stos
test
pop
add
mov
mov
enter
in
stc
jg
je
mov
jecxz
pop
mov
jnp
nop
push
hlt
and
enter
sub
pop
xchg
movb
sbb
jge
lods
rcl
dec
insl
icebp
or
push
sub
fs
stos
cmp
outsl
xor
or
mov
add
inc
mov
icebp
daa
int
mov
scas
test
push
cmp
imull
dec
sub
into
test
ficomps
push
pop
into
dec
notl
movsb
js
ja
nop
fs
sbb
jg
lahf
xchg
je
clc
mov
nop
sub
push
jno
mov
js
out
xor
scas
add
dec
xchg
or
adc
xchg
jne
fistpl
pop
rcll
testb
mov
popa
in
cmp
repnz
shrl
fsubrl
add
push
out
je
adc
push
clc
pusha
fwait
sbb
mov
dec
dec
jecxz
pop
jnp,pt
inc
outsb
jae
cmp
cs
xlat
sar
and
iret
xchg
dec
xor
shlb
cwtl
in
cmc
lods
outsb
pop
out
decl
and
add
inc
in
xchg
pop
addb
xchg
xchg
cmpsb
gs
pop
fiaddl
xlat
sbb
xor
dec
inc
ss
movsl
mul
inc
mov
aas
int
pop
fsubs
loop
xchg
mov
daa
adc
adc
gs
cltd
jmp
push
outsb
lods
in
hlt
inc
pop
call
mov
adcb
xchg
int3
shll
and
ljmp
es
pop
and
lret
push
push
fstps
rol
push
out
xor
pusha
cld
jno
inc
mov
sbb
and
mov
rolb
mov
std
cld
std
insl
enter
sbb
or
mov
push
testl
sub
loope
xchg
xchg
sub
in
inc
push
mov
loop
sub
xor
sub
push
mov
adc
adc
cmpsb
aam
jbe
pop
loopne
dec
movsb
xchg
ljmp
inc
or
mov
push
rclb
xchg
std
adc
xor
sub
pop
sub
adc
or
xchg
inc
test
pop
xchg
addr16
jg
pop
push
fistl
mov
jbe
adc
add
push
fisttpll
sub
xor
adc
push
pop
test
out
ret
ficompl
aas
pop
fcmovnu
fcomp
pop
icebp
xor
in
bound
push
addr16
pop
rclb
add
mov
jl
dec
or
repz
push
sub
arpl
push
mov
into
jns
dec
in
or
les
adc
hlt
mov
xchg
push
jmp
mov
mov
sub
js
test
jae
pusha
int
arpl
xchg
mov
cmp
push
pop
xchg
adc
in
lea
jmp
fsub
sti
jg
push
insb
stos
repnz
mov
int
in
ss
js
jg
test
push
pop
icebp
dec
sub
movsl
sub
fimuls
mov
push
dec
xor
jne
pop
fildll
sub
lret
mov
outsl
adc
bound
ret
xchg
mov
xor
imul
hlt
mov
pusha
adc
test
test
push
aas
dec
pusha
mov
into
imul
dec
add
lahf
int3
cmpsl
xchg
push
pop
fdivl
mov
mov
jbe
not
das
sub
sub
push
mov
xchg
inc
in
insb
dec
jno
jno
or
ret
divl
or
ret
sahf
mov
addr16
push
mov
sti
cwtl
add
xor
popa
mov
data16
js
or
fwait
lret
and
sub
aam
scas
lcall
adc
in
insb
jnp
xchg
mov
rcl
bound
xchg
mov
into
nop
xchg
jns
add
sub
leave
testb
or
cwtl
inc
xor
jnp
mull
popa
outsb
xchg
fs
add
pop
cmp
stos
rclb
pop
or
add
cwtl
cmpsb
cmp
mov
mov
adc
xchg
mov
lahf
jmp
xchg
mov
movsl
outsb
arpl
mov
push
pop
ret
divb
test
fldcw
addr16
xchg
fdivrl
sbb
rol
push
mov
addr16
icebp
call
cmp
adcl
clc
add
xchg
adc
adcl
aam
hlt
jl
das
scas
das
mov
lret
sbb
psubusw
add
lea
cmp
adc
stc
xor
cmp
mov
sub
push
in
daa
lods
mov
cmp
dec
adc
ss
add
sti
loope
mov
add
or
pop
jp
and
lock
js
repz
inc
mov
sub
adc
stos
dec
and
jbe
mov
leave
add
add
push
mov
xor
cmp
inc
sbb
xchg
dec
jle
shl
lea
rolb
xchg
jg
jmp
insb
mov
and
inc
jp
cs
push
jecxz
scas
push
movsb
push
jnp
out
mov
inc
push
mov
test
ret
mov
fsubs
mov
addr16
fcmove
imul
jmp
mov
popf
hlt
rclb
push
mov
fisubs
pop
cmp
push
jne
cmp
mov
mov
dec
jmp
es
cld
sub
xor
dec
jmp
sub
cmp
adc
xchg
adc
jae
mov
or
sbb
dec
test
push
dec
addl
stos
out
cmpsb
in
jecxz
adc
stos
aad
mov
push
pop
loope
and
pop
dec
mov
dec
and
loop
push
jmp
in
rorl
call
jno
and
add
jo
pop
inc
imul
nop
mov
inc
xlat
add
jp
pushl
pop
mov
roll
outsl
mov
rcll
out
data16
xor
xchg
icebp
xor
or
jnp
dec
dec
sahf
and
mov
int3
clc
icebp
dec
push
shl
dec
nop
es
cmp
or
lahf
jbe
mov
fucomp
inc
ds
sbb
dec
lcall
push
negl
movsb
push
andps
pop
adc
mov
inc
lret
int3
jae
pop
or
jmp
jns
rorb
mov
jecxz
push
daa
out
adc
mull
aas
sub
pop
mov
mov
xor
shld
int3
dec
inc
xor
cmpsb
cmpsl
jns
xchg
push
insb
out
shlb
and
out
std
inc
xor
mov
mov
pop
mov
jnp
mov
out
dec
push
xor
sbb
filds
jl
mov
jnp
jl
xchg
push
mov
outsb
mov
mov
pop
mov
pop
rolb
ja
pop
dec
xorb
jae
xor
or
test
testl
inc
adc
xor
out
mov
lahf
adc
test
popa
mov
bound
sub
jmp
clc
mov
popf
subb
and
sub
inc
mov
jb
scas
dec
jae
push
sbb
je
daa
outsl
mov
shlb
cmc
xchg
mov
and
dec
lcall
inc
jb
push
cmp
ret
sarl
js
jbe
mov
pop
cmp
iret
fstl
nop
push
sub
push
stos
inc
dec
and
adc
sub
xchg
or
dec
xchg
cwtl
mov
ss
nop
in
mov
test
scas
sbb
enter
test
inc
jnp
dec
dec
rorb
pop
sbb
mov
inc
lods
mov
add
xchg
mov
jl
dec
add
lods
in
mov
arpl
sub
lahf
xchg
dec
mov
arpl
and
xlat
adc
ja
adc
and
sub
cmpsb
mov
cld
subps
std
cmp
push
outsb
xchg
inc
mov
js
add
ss
out
test
push
in
cmpl
push
lret
mov
xor
int3
cmpsl
outsb
jns
sub
mov
push
repz
gs
out
rorb
cmpsl
cltd
shrd
cmpsl
mov
lds
lcall
add
sbb
cmp
pop
xlat
xchg
enter
cld
rol
ljmp
cmp
cmp
xchg
call
add
adc
dec
jno
mov
cmp
sarl
leave
lahf
cli
fstps
pusha
or
int
mov
out
add
push
fimull
or
push
jo
mov
cmp
mov
cmp
mov
lods
mov
pop
xor
pop
sahf
push
jno
xchg
sub
stos
mov
sub
scas
cmp
add
sarb
mov
in
jge
inc
iret
push
push
jno
jnp
and
icebp
fsubs
adc
cld
or
fbstp
xchg
iret
adc
xor
mov
jo
mov
lock
add
rcrb
add
adc
outsb
fiadds
push
pop
shlb
pop
mov
fwait
or
or
lds
icebp
mov
orb
psllw
in
loope
and
aaa
pop
sbb
test
mov
scas
or
jmp
or
cmp
insb
xchg
xchg
repz
or
cs
mov
lock
push
sbb
add
mov
xchg
xor
or
fisubs
add
aam
sahf
outsb
test
cmp
sahf
mov
test
mov
pop
push
popf
pop
xlat
mov
pop
call
xchg
jecxz
outsb
lcall
mov
movsl
add
aad
cmpb
pop
xchg
cmpsl
push
pop
push
int3
in
pop
xor
inc
fidivrl
ret
dec
cmp
aas
pop
clc
sub
in
scas
mov
sbb
xchg
lea
inc
fisubrs
loop
mov
mov
movsb
sarl
jecxz
jne
lock
lahf
aad
daa
test
xchg
inc
mov
pusha
inc
test
pushf
jl
jno
adc
sub
loopne
lret
rorb
dec
cld
data16
mov
push
call
sbb
stc
jle
jae
inc
mov
lods
outsb
dec
cmp
rolb
cltd
dec
out
out
les
mov
test
push
leave
dec
adc
mov
jmp
cmp
test
jo
dec
scas
imul
out
faddp
mov
js
shlb
mov
fnstcw
rcll
movsb
fcomps
mov
mov
xor
dec
shl
sbb
push
or
lds
sbb
add
xchg
sub
jne
lcall
sub
xor
movd
mov
sub
mov
adc
lret
add
test
xor
inc
jo
fisttps
and
jbe
mov
pop
lret
lods
add
mov
mov
sbb
out
push
shll
cmp
or
aas
fwait
mov
int3
ds
sbbl
jno
adc
push
xchg
xor
repz
mov
add
jmp
sbb
icebp
pop
stos
movsb
scas
adc
jnp
pop
cli
and
jnp
ljmp
fistl
out
arpl
sub
sub
dec
bswap
cmp
mov
scas
dec
cmpb
fldln2
fbstp
inc
lock
arpl
pop
loop
xchg
scas
adc
inc
xor
fdivl
fwait
jge
sub
and
popfw
push
std
push
xor
sti
call
roll
pop
mov
mov
mov
sub
into
lods
xchg
sub
fldenv
dec
sbb
mov
sub
movsl
or
out
add
jge
jecxz
cmp
pop
stos
leave
movsl
and
dec
cmp
cmp
repz
cmp
aas
xor
cltd
hlt
shll
mov
cmp
dec
and
lds
mov
or
lcall
mov
cmpl
int
insb
cltd
cmp
testl
lcall
inc
es
inc
mov
fcomps
sbbb
shlb
xor
push
jg
popaw
outsl
ret
pushf
mov
mov
leave
inc
dec
jbe
bound
in
mov
sub
mov
inc
dec
loopne
fs
mov
rorl
push
pop
popf
sbb
call
fidivs
dec
mov
sub
cmpsl
jns
inc
sub
push
repz
push
lds
and
inc
shll
xchg
mov
mov
rcll
xor
mov
movsl
decb
ja
cmp
mov
fimuls
mov
lcall
lds
mov
or
xchg
insb
sarl
adc
cmp
jle
in
jl
or
jmp
mov
aaa
mov
shlb
mov
mull
addr16
cmpsl
loope
pusha
into
loop
sub
push
mov
testb
xchg
movsb
rorb
fildll
pop
inc
icebp
jno
test
jne
xchg
push
push
mov
mov
push
sub
scas
push
int3
push
xchg
roll
addr16
scas
mov
fs
mov
dec
xor
arpl
loopne
sbb
sbb
mov
xchg
js
jnp
enter
mov
lret
sub
mov
lret
cmp
push
xchg
mov
mov
jne
inc
scas
insb
ds
subl
mov
and
mov
stc
dec
dec
dec
int
imul
gs
call
stos
mov
loopne
add
adc
cs
rcrl
adc
push
out
sti
movsl
repz
mov
fdivrs
adc
addb
cmpsb
imul
scas
inc
clc
sahf
sub
loop
adc
inc
sub
mov
xchg
fidivl
or
subl
movsb
loopne
rcr
inc
ffree
sub
jle
out
jmp
mov
cmp
mov
rcl
push
pop
cmp
ljmp
cwtl
adc
pop
imul
pop
leave
inc
xor
mul
fistpll
fs
jbe
lods
add
cmp
sub
out
ja
lcall
xchg
addr16
sarb
sub
mov
mov
lock
jmp
bound
ja
dec
js
xchg
sub
insb
ljmp
jl
mov
fldt
cmc
std
andb
sbb
jne
rorb
sub
fldt
xor
pop
mov
hlt
and
mov
test
add
test
or
push
pop
jecxz
loope
in
mov
add
inc
daa
icebp
jmp
ret
sbb
dec
and
xchg
mov
push
in
push
lds
or
daa
or
sbb
push
test
cmp
adc
push
cmpsl
pop
sub
mov
dec
jle
adc
pop
add
rcl
inc
imull
pop
cmpsb
xchg
mov
inc
negl
movsl
push
or
pop
jno
adc
lods
adc
inc
dec
adc
inc
or
aaa
stos
jl
sbb
pop
and
pop
sbb
add
pop
out
mov
and
icebp
jle
je
in
mov
clc
pop
inc
pop
xor
cmp
in
imul
lods
test
or
stc
cmp
add
jns
sbb
pop
mov
inc
aad
fsubl
aas
sahf
cmpsb
fwait
xchg
stos
mov
clc
rclb
popf
ljmp
flds
aas
scas
xchg
ja
xchg
icebp
loope
cmpsb
addr16
jl
loopne
incb
es
int
ret
jo
pop
aaa
jmp
ret
call
cmp
div
mov
in
mov
dec
inc
in
push
add
lcall
popa
je
ret
lret
popf
inc
cmpsb
inc
lahf
inc
xor
movsb
jnp
and
and
sub
xor
add
mov
xlat
sub
jp
aaa
fs
mov
mov
sub
push
ja
mov
test
mov
lods
xchg
xor
mov
mov
stos
stos
sub
push
xchg
xor
add
push
scas
sub
sub
and
jmp
int
xchg
popa
dec
inc
sbb
test
daa
cs
leave
and
enter
icebp
xchg
mov
or
fs
and
test
xor
push
push
je
or
mov
pop
add
mov
add
repz
clc
mov
pop
pop
pop
ss
daa
xor
les
push
pop
jecxz
cltd
pop
fadds
xlat
mov
incl
ror
out
mov
lods
stos
sti
lods
jbe
jp
rorb
cltd
mov
popa
mov
jle
cld
cwtl
mov
outsl
jns
cmpsb
or
dec
test
fidivrl
jb
filds
xchg
sbb
push
xchg
insb
add
cmpsb
lea
sub
fs
lret
das
ret
aam
test
mov
add
cltd
mov
mov
or
ds
lahf
mov
sbb
fistpl
loopne
fwait
int3
mov
lds
repnz
sub
add
std
cmpsl
dec
mov
test
cli
xor
lock
or
xor
dec
sahf
adcb
cmp
and
mov
pop
pop
fucom
add
jb
mov
ja
mov
int
mov
or
xchg
xor
mov
cmp
pop
out
jg
and
mov
gs
sbbl
lock
int3
daa
jge
sub
daa
push
push
and
cmp
int3
fldenv
pop
test
sub
insb
repnz
sbb
sbb
aas
cmp
xor
push
xor
jmp
push
pop
add
out
dec
scas
test
push
in
mov
test
imul
xor
sub
gs
lret
movsl
hlt
mov
and
inc
cwtl
xchg
adc
outsb
outsl
test
jmp
push
dec
movsl
loopne
fstps
dec
loopew
mov
mov
loopne
xchg
roll
pop
fmulp
movntps
orb
test
mov
sub
in
inc
icebp
inc
repz
lahf
pop
mov
mov
aaa
push
adc
mov
sti
sbb
adc
leave
pop
jae
aas
lahf
mov
mul
loopne
cmp
dec
mov
sub
adcl
out
mov
cmpsl
sub
xlat
pop
loopne
xor
rorb
cwtl
mov
push
xchg
or
rcr
shl
sub
mov
xor
dec
pop
adc
sbb
hlt
pushf
and
and
mov
ljmp
mov
push
pushf
or
sarb
ss
flds
subb
jns
jne
or
add
mov
jp
fucom
jge
aaa
lahf
mov
mov
arpl
int
lret
or
adc
lcall
sti
mov
and
movntps
cmc
lods
pop
mov
int
int3
lret
mov
rolb
test
jmp
arpl
mov
push
lods
inc
sarl
or
mov
ljmp
mov
cmp
cmpb
push
aam
mov
mov
gs
xchg
mov
insb
pop
sbb
jmp
ss
inc
fldenv
and
test
jmp
pop
push
mov
sti
mov
sti
mov
addl
data16
cld
pop
incl
and
rolb
mull
out
jns
jae
lock
jp
aad
dec
sbb
mov
cmpsl
stc
sub
lds
into
pusha
inc
push
xchg
out
sbb
xlat
lahf
je
test
and
lea
int
roll
ret
mov
sub
cmp
stos
mov
int
adc
fwait
insl
outsb
cltd
push
adc
sbb
dec
addr16
cld
mov
fstpt
scas
rcrb
arpl
pop
insl
mov
and
jmp
aaa
movups
dec
pop
xchg
push
lea
or
jle
cmc
shll
fstl
jnp
negb
test
push
ljmp
jmp
xor
fstpl
mov
insl
imul
add
or
add
je
jecxz
addr16
cwtl
or
hlt
inc
popa
pop
rcrb
iret
loop
lea
aad
push
pop
sub
add
int3
mov
sbb
xchg
lahf
lods
mov
pusha
xchg
and
xor
out
inc
jnp
pop
mov
fisttpl
enter
add
scas
test
nop
adc
dec
jmp
jnp
repz
out
bound
enter
pop
mov
loopw
xbegin
mov
pop
mov
repnz
add
pushf
cmp
outsb
fidivrs
fwait
adc
jmp
int
xor
je
fbstp
xchg
or
clc
clc
xchg
and
movsb
cmpsb
shrb
push
cmp
pop
and
mov
hlt
add
jmp
sub
inc
dec
inc
or
push
mov
inc
jo
fsubrs
add
js
or
pushf
pop
andb
addr16
idiv
lock
loope,pn
pop
sbb
cmp
cltd
into
nop
rcrl
outsb
rcl
adc
cmp
in
loope
sarb
jno
mov
lods
mov
sbb
aas
add
jne
jle
mov
arpl
dec
pop
mov
sub
dec
or
and
pop
out
in
xor
fs
add
pusha
add
sahf
mov
rclb
xor
mov
mov
or
jecxz
jle
iret
add
stos
cli
dec
mov
decl
or
cmpsb
pop
push
addr16
hlt
test
push
jns
cmp
inc
shl
clc
inc
test
out
and
add
hlt
imull
lea
jo
jp
out
dec
and
dec
xor
testl
aas
pop
xchg
cmc
aaa
dec
icebp
leave
ret
and
adc
cmp
xor
in
in
jnp
test
adc
loopne
push
mov
pop
cld
repz
cmp
pop
adc
sub
int
xchg
and
stos
xchg
dec
test
cmp
mov
imul
sub
addb
xor
xchg
ds
pop
add
or
mov
fwait
jo
je
loope
lahf
inc
jecxz
push
in
ljmp
push
in
or
in
mov
xchg
mov
or
mov
dec
xor
push
cmp
and
sub
or
test
inc
outsb
and
cmpsl
jg
std
scas
cmp
pop
test
or
cmpsl
popf
movb
and
mov
movsb
lret
sub
xchg
mov
mov
mov
test
sub
mul
fs
lock
sbb
pop
daa
mov
mov
sub
movsl
jnp
dec
sbb
jl
roll
flds
int
fisubs
pop
int
setns
push
and
cmp
add
push
outsl
or
cwtl
inc
lcall
insb
xchg
mov
jecxz
sarb
cmp
or
push
xor
sub
or
xchg
out
arpl
rcll
mov
xchg
pop
insb
jbe
faddp
add
pop
mov
inc
enter
dec
loopne
mov
shlb
ljmp
mov
addr16
cmp
push
sti
pop
inc
aam
nop
push
and
mov
clc
leave
mov
lods
push
ja,pn
popf
call
bound
mov
orl
adc
xchg
ret
out
fdecstp
daa
insb
cmp
push
mov
push
rorl
jl
mov
cltd
in
mov
scas
aas
pop
cmp
pop
jb
mov
inc
cmp
enter
popa
repnz
mov
insl
stc
push
lods
das
jmp
test
stc
cs
mov
and
cmpsl
leave
es
bound
in
inc
mov
call
and
push
jle
into
outsb
sub
pop
push
and
cmp
les
aam
pop
push
sbb
dec
dec
sbb
bnd
sub
xchg
dec
inc
test
sbb
imull
bound
cmp
hlt
notb
pop
enter
into
arpl
mov
or
cld
inc
es
fdivs
repz
inc
rclb
shrl
push
add
lret
mov
pop
icebp
add
stc
cmp
mov
xchg
sbb
jnp
insl
sub
sti
pop
ror
pop
test
imul
cltd
out
mov
test
fsubs
movsb
aaa
lahf
imul
in
rolb
addr16
push
out
jne
push
jns
mov
pop
scas
aas
test
sahf
push
jl
sahf
cmpsb
outsb
stos
push
jecxz
arpl
mov
sbb
pop
pop
out
je
dec
adc
int3
iret
dec
dec
test
adc
inc
xchg
scas
in
and
pusha
mov
cwtl
dec
jmp
shlb
adc
adc
std
dec
inc
mov
adc
xor
ss
into
cltd
or
outsb
insb
jno
or
xchg
lods
mov
cmp
into
out
jne
cmp
inc
mov
and
push
outsl
mov
mov
xor
or
sub
sub
pop
jecxz
or
adc
scas
scas
pop
sbb
stc
rcll
lea
addr16
or
jnp
xchg
or
test
xchg
pop
push
stos
scas
test
fdivl
cmp
test
pop
jmp
stos
push
in
les
pop
mov
mov
adc
in
lds
call
dec
andb
insb
shll
or
and
lods
ss
scas
sbb
jno
pop
push
ret
dec
decb
xchg
xchg
rorb
jnp
and
aaa
inc
add
lret
jl
daa
popa
in
add
pop
stc
movsb
dec
pop
int
xchg
test
fld1
test
dec
or
call
gs
arpl
adc
addr16
mov
add
mov
push
inc
xlat
sbb
sub
ficoms
in
and
jge
outsb
addb
repnz
sub
outsl
loope
mov
repz
js
inc
lea
sti
das
xchg
gs
ret
lds
jle
cmp
std
aaa
jecxz
or
pop
cli
mov
in
ds
sub
inc
sub
adc
xor
test
xchg
push
cld
call
out
mov
xchg
push
pop
loope
outsl
scas
shrb
ljmp
push
dec
push
inc
pop
leave
xor
in
jno
jmp
pop
in
mov
iret
hlt
int
leave
stc
sbb
jne
aaa
mov
dec
mov
les
rol
dec
rolb
cmp
jge
xlat
leave
in
imul
ds
xor
mov
jne
mov
xchg
stos
sti
adc
out
push
dec
pop
dec
add
stos
mov
pusha
mov
push
idivl
xor
xor
sahf
lret
into
sbb
dec
dec
hlt
jbe
and
sti
sahf
ja
pop
notb
inc
fcoml
imul
lods
pushf
mov
jne
push
xchg
loopne
jle
xchg
addb
push
xchg
mov
mov
js
ret
mov
cmc
outsl
push
aad
lea
sbb
ljmp
fnstenv
push
mov
push
sub
addr16
sbb
pusha
inc
push
pop
cmp
stos
sbb
inc
icebp
xlat
stos
cmp
mov
dec
jns
movsl
movhps
xchg
jne
mov
dec
insb
aad
aaa
mov
dec
cmpsl
mov
jae
add
inc
mov
loope
mov
mov
stos
daa
pop
icebp
adc
cmpsb
les
jo
xchg
sbb
pop
cli
mov
mov
arpl
push
inc
cmp
jns
std
inc
inc
gs
pop
pop
pop
cmc
pop
je
lret
and
cs
add
imul
mov
jno
xor
or
push
mov
dec
dec
add
adc
icebp
push
insl
sub
and
or
add
sbbl
sbb
in
push
les
push
pop
popf
gs
dec
adc
sti
pop
das
jl
inc
lods
movsb
mov
xchg
das
dec
pop
jnp
dec
jno
jae
add
call
or
test
cmp
outsb
sbb
aaa
pop
mov
cld
xchg
aaa
out
fcmovnb
lock
sub
fwait
inc
xchg
dec
mov
and
jmp
mov
sti
mov
clc
ds
out
sub
push
stos
movsb
and
jb
dec
adc
jne
imul
inc
and
xor
mov
inc
mov
call
scas
adc
daa
clc
xor
scas
mov
mov
fdivrl
mov
outsl
pop
rep
shll
out
mov
cmp
jns
cwtl
xchg
mov
inc
push
arpl
and
cmp
fildl
lods
jno
jmp
mov
faddl
or
adc
xorb
pop
pop
out
add
and
pusha
lods
ss
inc
pop
mov
movsb
and
or
push
mov
mov
fucom
std
mov
and
mov
loopne
inc
imul
rcrb
es
push
and
aaa
inc
sbb
xor
ret
sub
stos
push
sahf
pop
in
les
xchg
mov
es
enter
pop
sarb
sub
in
push
icebp
xor
or
adc
push
int
inc
and
insl
jno
adc
outsb
jns
xor
xor
pop
sti
sti
scas
ss
add
xchg
cs
and
mov
lods
ret
mov
repz
xchg
xor
pop
xlat
and
mov
mov
fbstp
add
bnd
stc
test
lea
pop
mov
pusha
mov
mov
xor
in
and
xchg
js
dec
jl
fildl
in
mov
scas
dec
lea
mov
lcall
outsb
mov
adc
hlt
or
inc
dec
in
cld
std
push
loop
cs
cld
push
or
mov
rcrb
push
fstps
ss
and
inc
bound
and
mov
inc
aaa
shlb
int
sub
fsubrl
mov
test
out
icebp
icebp
scas
aam
out
aad
push
stc
aad
fidivl
mov
dec
jle
cmc
push
rclb
repz
mov
mov
mov
pop
or
or
mov
lods
push
add
push
loope
jne
movsb
lds
lock
xchg
test
je
inc
cmp
stos
xchg
jo
scas
fmul
sbb
lods
jbe
cmpsb
mov
pop
decb
mov
negb
inc
shrb
xchg
loop
mov
xchg
adc
jno
movsb
inc
rclb
mov
adc
shl
mov
cmp
icebp
into
out
lret
inc
ret
xor
inc
lahf
inc
adc
fists
mov
loope
inc
jmp
daa
hlt
mov
leave
aad
dec
fld
repz
mov
xor
xchg
movsl
xor
jmp
jbe
mov
push
mov
dec
cs
in
jae
lods
adc
push
and
test
enter
mov
lods
fstl
fsubp
pushf
lds
dec
lds
and
nop
aam
test
dec
dec
cmp
fidivrs
inc
movsb
std
push
movsl
pop
ret
fbld
cli
push
pop
leave
xchg
inc
mov
js
scas
pop
jecxz
lods
cld
mov
fistl
push
push
fsub
sahf
loopne
push
or
fstpt
xor
mul
add
ret
cmc
lcall
pop
push
ja
jno
push
mov
into
pop
nop
je
insl
cmp
xor
pop
pop
pushf
dec
cwtl
xor
jp
mov
inc
fmull
mov
push
sahf
pop
clc
pop
and
push
and
cmc
lret
sub
call
fsub
and
outsb
mov
out
mov
inc
push
mov
jecxz
mov
iret
bound
clc
in
lret
call
sbb
cmp
sahf
jb
sbb
lret
cmp
sub
add
dec
add
pop
xchg
orl
xor
sbb
out
movsb
shl
xchg
inc
push
sub
jl
mov
sbb
mov
rcr
negl
pusha
cmp
rcll
xchg
mov
lds
fmul
div
adc
jb
dec
cmp
mov
adcb
cmc
xor
push
bound
mov
xchg
xchg
into
mov
lods
imul
xchg
lods
inc
sub
push
or
iret
std
in
sub
out
mov
adc
lret
jns
dec
adc
lods
stc
sub
jp
iret
jb
test
icebp
push
inc
mov
mov
dec
push
jae
inc
sub
dec
push
inc
inc
pop
cmp
push
mov
mov
sahf
aaa
iret
jg
push
or
mov
lahf
mov
cmp
push
dec
or
and
cmp
test
adc
out
dec
or
and
in
dec
mov
mov
push
dec
test
push
shr
mov
xchg
mov
test
xchg
jmp
insb
adc
cmpsl
shll
pop
stos
into
fldl
out
pop
xchg
adc
jmp
dec
movsb
cwtl
pop
add
bound
xchg
push
mov
scas
mov
xchg
imul
lahf
iret
inc
xor
sbbb
mov
les
leave
inc
fidivrl
mov
bnd
cmp
pop
dec
cmpsl
lahf
xor
cld
leave
in
inc
or
xchg
fnstenv
stos
sahf
push
stos
enter
je
negl
xchg
push
and
ficoml
sub
fldcw
and
adc
movsl
sarl
push
inc
andb
rcrb
and
js
lcall
pop
fdivrl
push
lcall
inc
dec
push
xor
and
mov
loope
jl
jmp
test
xchg
movsl
popa
loope
es
fsubl
data16
xor
sti
dec
inc
test
jge
pop
xchg
popa
jne
sub
mov
dec
fs
add
repnz
aas
xor
cmpsb
int3
jno
sbb
out
xchg
adc
jmp
xchg
dec
lea
inc
cmp
add
mov
cmp
arpl
icebp
push
pusha
sbb
pop
mov
inc
out
pop
adc
test
int
dec
lods
ljmp
hlt
lods
mov
and
fadds
mull
mov
sbb
or
stos
sbb
aam
scas
push
inc
mov
out
das
imul
hlt
cmp
outsb
adc
jb
stos
repnz
cld
mov
and
outsb
pop
or
and
cli
push
sub
or
push
and
pop
mov
enter
mov
popa
pop
mov
adc
mov
repnz
cwtl
lahf
mov
frstor
std
jno
mov
jne
adc
out
mov
int3
movsb
clc
repz
call
adc
xchg
aas
cmp
popl
imul
add
sahf
pushf
sub
cmp
sbb
movsl
add
je
sub
mov
push
inc
inc
cli
adc
and
mov
and
jge
xor
icebp
adc
mov
sbb
cmp
pop
mov
or
inc
mov
jecxz
fsubrl
movsb
inc
cli
add
pop
jo
inc
push
mov
aad
push
mov
aas
in
adc
out
and
aam
imul
inc
into
or
xchg
fstl
nop
mov
jns
flds
pushf
jp
pop
xor
fcomps
js
rclb
test
jp
cli
xchg
test
push
add
push
mov
push
xor
ljmp
imul
cmp
btrl
in
hlt
or
ds
jmp
mov
xor
xor
jne
mov
xchg
mov
jb
sub
inc
fwait
jb
sbb
loope
mov
xchg
cli
add
adc
push
or
mov
xchg
mul
idivb
push
sbb
gs
clc
cmpsb
add
push
fstps
sub
shll
xor
ss
push
jl
add
inc
lods
or
pop
mov
scas
insb
mov
lahf
and
sub
aam
lods
jg
jp
jnp
dec
int
mov
pop
divb
mov
aad
aaa
jo
mov
fcoml
push
xchg
loop
test
xchg
xchg
jecxz
and
adc
mov
cmp
enter
pop
movsb
mulb
test
xor
imul
mov
std
test
in
mov
mov
mov
popf
dec
cld
std
xchg
shlb
loope
movsl
pop
std
out
mov
mov
mov
in
push
jl
fidivs
inc
stos
pop
sub
xchg
lret
mov
and
sub
insl
xchg
loop
push
in
mov
repz
ss
aaa
add
arpl
jno
add
inc
fdivrs
mov
mov
inc
out
push
ret
je
fdivs
push
stos
push
xchg
or
popf
sarb
sbb
aad
push
xor
rcll
aas
leave
pop
scas
ljmp
out
aaa
sbb
cmp
sbb
das
cmpsb
inc
inc
test
ljmp
dec
movsl
dec
mov
aas
inc
xchg
cli
std
sarb
mov
sti
xchg
std
es
fdivs
xchg
inc
mov
dec
lcall
test
fsubs
cmp
mov
fwait
pop
jne
les
stos
push
jb
inc
popa
ret
negb
xor
outsb
add
movsb
push
cmp
push
mov
cmp
add
xchg
adc
mov
xchg
xchg
aaa
fnstenv
push
inc
and
or
in
adc
enter
lcall
mov
jae
sub
jbe
adc
push
aad
jp
jle
inc
xchg
fwait
fs
lock
das
xor
outsl
dec
stos
mov
xlat
int
sti
mov
add
and
pop
pop
jns
push
cmp
or
or
or
jae
adc
clc
aam
sub
fiaddl
clc
push
movsl
adcb
xor
push
movsb
cli
adc
ret
adc
gs
inc
mov
jnp
xchg
and
std
or
pop
mov
cmp
in
and
cmp
fidivrl
jle
in
or
and
mov
icebp
mov
loop
std
jle
or
adc
mov
movsl
js
jmp
lcall
sub
scas
xchg
dec
daa
pop
and
repnz
cmp
mov
xchg
les
clc
xchg
push
in
sarl
arpl
and
mov
cli
sub
inc
bound
in
sbb
out
sub
data16
inc
ret
cmpb
xchg
xchg
arpl
pusha
xchg
test
push
mov
mov
pop
xchg
jp
adc
insb
lret
int3
adc
das
dec
daa
shll
shl
int3
call
cmp
mov
dec
and
adc
stos
xchg
pop
int
dec
call
adc
lock
sub
sbbl
dec
or
mov
sbbl
pop
ljmp
adc
popa
push
out
pushf
popf
dec
xchg
ljmp
stos
mov
xchg
pushl
inc
xchg
cltd
lock
cmp
fbld
or
jmp
sarl
popa
pop
mov
mov
out
pusha
pop
outsl
mov
roll
cs
add
sbb
insb
mov
scas
sub
cmp
mov
aas
xor
arpl
clc
pop
sub
fists
inc
iret
push
mov
mov
mov
adc
dec
mov
xchg
jb
fsubrs
sub
popa
add
addr16
push
stos
add
iret
cmp
loopne
xor
enter
mov
jg
aam
leave
dec
xchg
repz
xchg
and
push
scas
inc
xchg
cltd
mov
fidivrl
inc
push
subl
in
mov
xor
daa
sbb
cmp
enter
push
xchg
popf
adc
lcall
mov
icebp
fildl
stos
incl
cwtl
mov
movsl
ljmp
mov
mov
adc
mov
sub
bound
enter
ss
les
or
fs
insl
mov
rol
jb
cmpsl
and
cltd
loopne
dec
loopne
mov
push
addr16
cmp
adc
cmp
call
nop
lret
movhlps
lret
sbb
loop
scas
stc
lret
add
dec
repnz
enter
pop
mov
jb
cmpsb
in
mov
mov
pusha
mov
push
sub
outsl
push
jg
and
ja
adc
push
adc
pop
mov
test
cmp
shll
ret
sti
and
test
ficoms
ljmp
mov
lcall
mov
repnz
xchg
mov
mov
frstor
adc
clc
mov
xchg
shl
and
or
call
mov
nop
and
lret
jb
pop
dec
pushf
push
lods
and
dec
cmpsb
adc
jne
xor
push
xchg
mov
and
arpl
mov
xor
sahf
or
dec
sbb
sti
mov
push
adc
idivb
cmpsb
jb
sahf
cmp
adc
mov
pop
mov
inc
jmp
negl
dec
je
push
sbb
jecxz
xor
inc
clc
xlat
inc
mov
adc
xor
push
jno
js
mov
sbb
or
pop
cltd
push
mov
cmp
kmovw
aaa
fisubs
pop
cmp
sbb
ds
out
ljmp
jnp
adc
lahf
sahf
pop
push
andl
arpl
add
iret
mov
mov
fdivrs
jge
add
jns
rcl
inc
push
clc
dec
jnp
insb
js
scas
push
lret
or
jmp
sbb
pop
aas
iret
inc
ds
inc
mov
mov
je
push
and
imul
fidivs
sbb
popa
mov
adc
pushf
sub
xor
aaa
cs
pop
push
in
xchg
bound
push
inc
push
dec
dec
sub
rorb
mov
pop
cli
xor
js
cmp
push
push
dec
cwtl
push
js
xrelease
mov
push
add
rorl
out
lcall
add
popf
mov
and
movsb
xor
cmp
hlt
outsl
xchg
xor
xchg
inc
mov
pusha
insl
nop
mov
shlb
rcr
in
cs
lods
pop
in
xor
icebp
mov
addb
das
addr16
sub
test
test
stos
cmp
adc
pop
jnp
dec
xchg
out
scas
adc
cmp
sub
lcall
xchg
and
jo
mov
push
mov
outsb
arpl
cli
loopne
cmp
push
xchg
push
xchg
push
fwait
call
lcall
repnz
gs
pop
xchg
push
add
imul
cmp
ljmp
sbb
mov
jne
mov
je
or
data16
fbld
push
das
aas
lds
stc
adc
mov
stc
out
xchg
mov
adc
pop
adc
lcall
pop
pop
repnz
out
jl
ljmp
out
lcall
add
xlat
jo
addr16
jns
fistps
repnz
push
mov
jns
call
dec
neg
adc
fdivs
or
mov
jmp
dec
dec
icebp
lea
sti
pop
pop
fsts
and
packuswb
inc
xchg
test
in
test
arpl
addr16
cmp
pop
jno
jnp
flds
adc
jnp
mov
dec
pop
and
and
push
cmp
jecxz
in
stos
or
sbb
xchg
cmc
les
jbe
mov
leave
in
mov
adc
and
xchg
orb
xchg
mov
inc
sbb
sub
push
sub
out
xchg
loope
mov
aaa
push
in
pop
addr16
jmp
daa
fmuls
mov
inc
ret
aad
push
in
lods
dec
xchg
push
nop
in
lahf
in
mul
subl
jae
aad
xor
inc
cmp
decb
jmp
sub
je
xchg
rcll
fwait
test
mov
es
int3
adc
sub
mov
dec
das
add
or
or
xor
and
cwtl
jge
inc
iret
inc
dec
sbb
fnclex
xchg
push
mov
sahf
repz
inc
add
pshufw
inc
inc
and
xor
in
outsl
sub
test
lahf
or
mov
pop
jmp
mov
lret
xchg
pop
mov
in
lock
jmp
jno
rolb
int3
inc
jns
out
rorl
subb
leave
push
js
or
rcl
push
movsl
dec
aas
mov
out
cs
pop
sti
add
call
hlt
fdivr
test
aam
inc
mov
inc
lds
jo
repz
mov
mov
mov
mov
std
js
mov
cmp
cmp
pushf
jmp
shl
sbb
sub
xchg
pop
pop
in
mov
sub
xlat
aad
sub
adc
sbb
jmp
mov
lea
or
mov
lcall
in
pop
jno
in
lcall
xchg
pushf
and
stc
pcmpeqd
mov
andl
push
out
cmp
fsubrs
shr
insb
inc
xchg
dec
jo
mov
dec
push
mov
push
lret
test
roll
mov
xchg
inc
xor
adc
jbe
cmc
mov
push
sbb
call
mov
js
sub
adc
cld
push
dec
cmp
or
pop
mov
and
adc
or
jo
imul
and
or
pop
mov
dec
sbb
cmpl
lcall
xchg
inc
sbb
test
inc
mov
or
imul
inc
fldt
pop
fisttps
nop
and
cltd
mov
jg
mov
imul
xchg
mov
xchg
and
sbb
xchg
jbe
cmp
add
or
les
push
xchg
fsubl
out
push
fs
pushl
add
cltd
ljmp
data16
aas
cmp
test
cwtl
pop
cs
loope
fidivrl
movsb
ret
jnp
scas
repnz
or
pop
jb
cld
mov
leave
and
sub
add
icebp
scas
xchg
or
daa
into
jo
cmpsb
sbb
fnstenv
mov
mov
cli
pop
loope
xchg
jp
nop
leave
and
aaa
cltd
add
test
adc
push
inc
or
shll
sbb
and
adc
jge
dec
xor
cli
or
mov
mov
or
shl
adc
ljmp
add
fdiv
xor
and
mov
pop
mov
xchg
sbb
fs
pop
negl
and
bound
sub
arpl
cmp
addr16
rcl
mov
std
stos
cli
testl
and
lock
jmp
mov
sbb
mov
cs
cli
stc
jmp
imul
cmp
push
jbe
nop
pop
divl
stos
arpl
inc
sub
in
movsl
push
lods
add
adc
lock
ja
or
pop
cmp
add
insl
pop
inc
into
jle
xchg
pop
leave
stos
fwait
sub
pop
test
adc
add
dec
mov
loop
sbb
jmp
mov
pushw
outsb
mov
hlt
lods
xchg
xorl
negl
movsl
push
fistpl
cld
movsb
test
mov
ljmp
inc
sbb
pop
in
mov
cmc
test
js
adc
mov
lods
xor
push
popf
test
dec
jae
test
mov
mov
test
dec
sub
into
and
and
mov
push
jge
inc
xchg
jns
stos
pop
addr16
in
mov
jecxz
cmp
mov
jg
push
pop
scas
das
xchg
ret
or
int
xchg
ljmp
push
mov
cmp
push
ds
adc
push
jmp
movsl
ss
cmp
add
or
and
or
ds
mov
or
lods
jnp
push
mov
inc
stc
call
out
dec
inc
shrl
test
addr16
out
shll
daa
sbb
xchg
stos
and
hlt
pop
out
mov
cmpsb
sub
adc
inc
xchg
jge
inc
movlps
add
sbb
in
push
pop
mov
and
cmc
jmp
sub
cltd
sub
lret
mov
rcrb
and
mov
sbb
icebp
or
pop
or
mov
aas
clc
mov
sbb
jle
inc
xor
into
add
adc
int3
add
ljmp
adc
sub
nop
push
push
mov
aaa
ss
cmp
sbb
dec
adc
popf
aad
sub
and
sbb
mov
pop
int3
fcomps
int3
imul
fdivrl
sbb
in
and
pop
and
lock
cltd
pop
arpl
stos
orl
xchg
adc
mov
in
mov
jecxz
sub
mov
cmp
or
fidivl
daa
aaa
fcoms
push
jg
sub
adc
xlat
cmp
imul
jbe
push
push
and
cli
mov
jns
pusha
adc
sar
enter
daa
pushf
sbb
mov
adc
xchg
mov
dec
das
push
pop
xchg
jne
inc
lea
jnp
sbb
scas
xor
pop
pushf
xchg
std
daa
into
inc
daa
stos
idivb
fsubrp
mov
inc
imul
jmp
cmp
push
mov
loopne
inc
jmp
dec
loop
out
jecxz
xchg
mov
leave
or
in
xchg
xchg
xchg
inc
xchg
mov
cmp
jno
mov
insb
xchg
cld
mov
rorb
and
les
dec
fisttpl
jle
jnp
jle
rcr
icebp
inc
mov
test
popa
popa
push
push
loopne
adc
mov
shrl
mov
and
sub
add
xchg
inc
out
xor
inc
pop
daa
sbb
dec
mov
cmc
mov
sti
add
xchg
inc
cld
sub
jae
or
test
inc
out
orl
or
dec
lods
repz
and
stos
pop
or
loope
mov
dec
es
pop
adc
pushf
cwtl
cmp
pop
jp
lahf
dec
mov
rorl
dec
aad
push
push
fmull
pushl
or
lods
mov
in
adc
scas
jg
cmp
sbb
pop
push
mov
push
clc
mov
and
les
xor
testl
fwait
cmpsl
repnz
sub
xchg
cmc
cs
in
add
rolb
xchg
xchg
pop
pushf
fiadds
pop
add
sub
sub
orb
sub
push
xchg
mov
leave
dec
push
pop
sbb
insb
in
jle
shr
sub
cmp
mov
pop
jge
loope
and
push
xchg
fsubl
and
push
sti
mov
cmp
cs
jecxz
xor
popa
lahf
in
addr16
out
mov
mov
or
mov
mov
mov
add
push
lcall
movsb
ret
imul
vpandn
notb
sub
adc
mov
mov
fsubrs
xor
xchg
icebp
inc
jo
pusha
int3
int
les
xlat
ljmp
stos
shrb
stos
mov
ja
and
dec
mov
fidivs
arpl
mov
movsl
fstps
inc
jb
fsubs
rcll
pushf
ljmp
push
cld
mov
jnp
mov
sti
test
xor
sbb
push
hlt
xchg
sub
pop
adc
clc
xor
push
or
sahf
movsb
xor
int3
loop
out
adc
add
pushf
stos
xor
dec
sahf
adc
arpl
movsb
inc
leave
movsb
scas
test
in
jmp
jnp
in
cmp
jle
inc
lods
movsb
push
mov
bound
push
popa
mov
fdivs
cmp
pop
int3
jg
clc
jge
adc
cmp
pushf
push
out
lock
mov
pushf
cmp
lods
stos
and
dec
push
push
adc
inc
es
xor
outsl
adc
pusha
dec
xor
dec
pop
dec
ret
enter
es
dec
popa
mov
insl
xchg
shrl
xchg
inc
or
mov
pop
mov
jmp
repz
cltd
negb
out
bound
daa
ret
test
mov
mov
xor
dec
sarb
jo
mov
cmp
cmp
lock
pop
inc
dec
xchg
pop
mov
fbld
dec
loope
push
in
ficoms
cmp
xor
cmp
popw
es
bound
add
mov
mov
mov
sub
bound
adc
pop
inc
mov
dec
rcrb
imul
hlt
xchg
pusha
ljmp
pop
inc
xchg
dec
fbstp
dec
and
jne
daa
xor
pop
cmc
fisubrl
aas
jbe
push
sbb
add
xadd
pop
cmpsb
ja
dec
adc
cmp
out
out
push
loope
pop
test
sarl
cmp
das
popa
and
ret
xchg
cli
mov
sub
out
loopew
mov
or
pop
shll
add
mov
aas
xlat
addl
vpsrlq
sbb
push
dec
or
test
or
mov
dec
mov
cmp
xor
std
rclb
scas
dec
inc
test
ljmp
or
ds
bound
pushf
xlat
imul
mov
pop
popf
mov
cmp
sub
jl
call
sarl
fcoml
push
or
test
cmpsb
and
aad
sbb
adc
push
xor
scas
nop
fcoms
dec
std
mov
mov
stos
rcll
mull
cld
clc
adc
jg
js
into
jmp
in
aam
cmpsb
dec
xchg
and
pop
sarb
lret
inc
xor
jg
add
roll
in
mov
inc
icebp
ret
jne
lods
jl
fiadds
jp
add
mov
stos
push
out
test
xchg
push
stc
adc
mov
repnz
inc
jnp
negb
adc
xor
lret
int3
popf
fsts
addr16
jnp
cli
icebp
jb
bound
je
xchg
out
iret
pop
cmp
imul
pop
leave
xlat
mov
push
push
shlb
inc
stos
orb
sbb
xchg
lds
sub
or
sbb
adc
pop
fwait
jno
leave
mov
xchg
sub
call
out
jne
cmp
pop
cmpsl
mov
mov
movl
jle
test
mov
in
sarl
mov
dec
hlt
out
pop
insb
repz
jmp
mov
fstl
sub
mov
rol
stc
mov
adc
xor
push
push
add
movb
rol
jno
mov
mov
pop
sub
jecxz
xchg
push
stos
xor
loope
fsincos
adc
xor
bound
adc
push
and
lahf
frstor
outsb
scas
xchg
mov
cmc
je
xor
lods
subb
and
dec
or
push
fbstp
pusha
popf
jp
mov
pop
pusha
xchg
fcomip
cmc
ds
mov
stos
push
lahf
sub
inc
imul
cmp
adcb
inc
and
rcll
inc
mov
pop
out
aaa
push
push
and
testl
orl
sub
std
or
cs
push
sbb
cmp
or
jns
mov
xchg
aam
cmpsl
and
mov
out
inc
cmp
js
mov
dec
repnz
in
and
test
test
lret
imul
lods
push
lds
xchg
rcrb
bound
sarl
test
fisttpll
mov
les
mov
add
and
push
mov
sub
fst
les
inc
add
int3
iret
xchg
pusha
pusha
call
outsb
sbb
repnz
imul
stos
add
lock
add
xchg
jns
dec
sbb
push
lds
imul
pop
loop
pusha
xor
xchg
mov
ficoml
sbb
lcall
test
ja
int3
lret
add
call
mov
cmp
push
invd
leave
adc
xor
into
je
sbb
mov
pop
fsubrs
pop
add
adc
test
rol
adc
pop
mov
or
popf
xchg
popf
mov
lret
add
imul
call
out
ss
add
mov
and
cmpsb
insb
in
out
mov
mov
add
leave
sub
xor
sub
loope
xor
rcrl
xor
jl
mov
dec
sbb
lret
ficompl
shl
fimull
test
xlat
mov
and
push
int
jbe
movsb
mov
fsub
fisubl
xchg
mov
xchg
jnp
loopne
sbb
pop
pop
dec
call
movsb
mov
mov
jno
lea
int
jne
jge
xchg
ljmp
adc
and
or
dec
sbb
pop
das
ret
pavgb
daa
jp
out
imul
cmp
sub
or
and
mov
or
les
into
out
dec
xchg
mov
fcomp
call
pop
adc
scas
or
inc
lds
ret
mov
sbb
call
xchg
imul
pop
xchg
sbbb
jnp
push
fildl
jae
adc
add
sub
xchg
fists
fisubl
xor
pop
enter
hlt
in
xor
into
lahf
rorl
jg
adc
test
jns
test
mov
iret
enter
pop
outsb
dec
sbb
lods
ss
sub
mov
jne
mov
mov
scas
mov
mov
out
mov
mov
es
enter
or
fsubrs
scas
inc
ds
in
fmuls
repnz
push
hlt
outsb
mov
test
lret
jmp
adc
ja
loopne
shrl
ret
cltd
push
daa
jmp
and
mov
and
cmp
xchg
fcmovnbe
or
sti
rolb
cmp
bnd
out
scas
les
pushf
es
test
mov
addr16
cli
sub
mov
in
pushf
inc
xchg
data16
shlb
fildl
popf
adc
popf
pop
add
jge
and
adc
mov
jbe
pusha
pop
xchg
scas
aam
fwait
repnz
sub
hlt
add
out
in
or
and
call
bound
and
stos
scas
push
jge
into
lods
ret
mov
pop
push
loopne
push
sbb
add
dec
lods
aaa
test
loopne
inc
xchg
push
jl
and
mov
lea
mov
gs
mov
push
or
xlat
xchg
mov
sti
imul
call
push
bound
dec
ljmp
mov
shrb
in
repnz
enter
cmp
mov
cmpsb
ret
adc
fucom
scas
rcll
loop
mov
das
push
inc
in
daa
jge
add
imul
cmpsb
lea
test
fcoml
imul
sub
cmp
call
xchg
xchg
inc
or
pushf
push
sbb
pop
mov
es
test
pop
xor
flds
loope
cwtl
fisubrl
sub
or
mov
incl
in
jl
push
xchg
jg
scas
aad
ret
inc
loopne
jg
xchg
pop
enter
cs
cmpsl
xor
daa
jle
popa
ds
push
mov
fsts
sbb
or
fstpt
mov
repz
jns
and
subl
jo
fildl
outsb
and
jmp
fsubp
inc
xchg
mov
jno
push
sbb
sbbb
aaa
mov
outsb
pop
jl
cs
push
les
cmc
mov
sub
call
xchg
arpl
jecxz
or
sub
sbb
ret
cld
cltd
mov
popf
bound
push
clc
push
add
fs
adc
or
das
sub
adc
or
mov
ror
ret
push
push
mov
xchg
pop
mov
mov
mov
lds
test
pop
aad
xor
cmc
loopne
movsl
jbe
cmc
mov
dec
jmp
jg
adc
aaa
insl
and
inc
mov
jle
cmp
and
jmp
or
js
inc
cmp
mov
mov
dec
pop
outsb
xchg
jg
insb
jp
addb
roll
test
leave
out
bound
popa
sbb
or
cmc
test
mov
ds
cmpsl
pusha
dec
cmc
inc
lret
movsl
inc
testb
test
outsb
dec
lock
jl
nop
nop
sub
cs
add
pop
aad
cmp
adc
xor
push
xlat
aaa
adc
jmp
pop
push
sbb
jp
stc
in
aad
and
mov
push
jle
sub
leave
jnp
add
inc
movb
push
fiadds
fildl
push
mov
sahf
jo
sbb
sub
mov
pushf
cmp
leave
sti
jnp
scas
test
insl
inc
add
lods
test
pushf
add
adc
mov
cmpsl
mov
gs
pop
xchg
lods
aaa
sbb
pop
pop
fbld
out
pop
push
mov
xchg
jne
mov
je
jecxz
adc
push
mov
inc
mov
out
mov
insb
jnp
sub
jp
sbb
stc
dec
movsb
or
and
addr16
das
mov
in
or
out
into
out
add
jae
leave
lahf
xchg
jno
lea
fiadds
std
or
dec
and
sahf
cmp
cmpsb
pop
add
in
aam
popf
jg
je
mov
cmp
in
and
les
dec
leave
mov
out
mov
fnstenv
jle
or
inc
movl
ret
pop
into
add
push
lret
jle
and
test
cs
mov
adc
adc
std
fbstp
test
or
push
jb
cmpsl
sub
xor
out
jo
mov
add
addr16
jo
imul
lock
inc
sbb
jge
jb
fstpt
xor
stos
stos
or
arpl
fiadds
int3
shlb
inc
adc
dec
popa
push
fwait
imul
inc
imul
gs
jmp
sarl
out
mov
popa
push
sub
mov
fucomi
sahf
insl
popa
lock
xor
sbb
xchg
scas
sub
sub
sbb
loope
out
arpl
push
sarl
scas
or
cmp
adc
add
outsl
jnp
mov
xor
jle
pop
ljmp
xchg
fnstenv
dec
lds
in
testl
lcallw
enter
xlat
and
stos
jo
out
les
cmpsb
lea
jo
adc
fwait
rorl
rolb
mov
inc
in
pop
shlb
xchg
rclb
fiaddl
fisttpll
sub
inc
pop
mov
orl
xchg
pop
or
iret
fnstsw
out
pop
stos
icebp
adcl
lahf
andb
testl
outsb
or
sbb
xchg
cmp
aaa
adc
mov
inc
mov
imul
jb
push
sbb
xchg
and
ds
aad
adc
mov
push
imul
pop
inc
aam
mov
mov
sub
leave
lahf
pop
and
xchg
sar
je
cltd
repz
cmc
pop
sbb
jae
xchg
stos
idiv
lret
es
stc
add
mov
aaa
cmpsb
or
in
lea
xor
adc
jnp
int3
mov
test
and
ss
in
push
sbbl
notl
cmpsb
xor
push
add
mov
int
inc
cmovae
mov
jnp
iret
fistpll
mov
push
cmp
sbbb
repnz
out
insl
inc
jl
add
xchg
push
insl
xchg
mov
mov
dec
dec
int3
call
push
dec
into
xchg
mov
sahf
pop
insl
daa
jmp
mov
loopne
pop
sbb
pop
pushf
dec
mov
jae
and
out
lahf
test
imull
not
int
icebp
push
in
ss
stos
cld
insb
push
aam
and
add
dec
fwait
sbb
xor
int3
xor
and
add
lcall
lods
loop
iret
repz
jne
mov
xor
or
jno
push
mov
jg
mov
loope
sub
mov
mov
or
mov
mov
adcl
cltd
mov
fxch
sahf
icebp
push
scas
dec
pushf
je
ss
ds
movsb
outsl
cmp
mov
fs
out
in
xor
jecxz
aas
mov
inc
and
enter
and
xchg
in
add
call
mov
lods
in
xchg
mov
xchg
fisubrl
push
mov
gs
cli
xchg
fucomp
fld
invlpg
ja
test
ljmp
lahf
sbb
jae,pn
fs
adc
xchg
jmp
lret
mov
ds
fldl
mov
ljmp
push
fwait
decl
sub
cmpsl
add
lock
push
or
xor
stc
xchg
xchg
mov
jecxz
mov
cmp
and
lret
xchg
mov
adc
imul
arpl
sbb
in
adc
inc
mov
in
or
add
sub
inc
cmp
xchg
xchg
outsb
xchg
cmp
mov
push
mov
dec
or
es
movsl
sub
insb
enter
rcll
lock
xor
dec
cli
pop
stc
test
push
or
js
fwait
loope
mov
test
add
pushf
and
dec
aam
xor
adc
mov
out
int3
inc
xchg
fildll
xchg
sub
ljmp
dec
rorl
and
xor
lahf
mov
js
fsub
bound
mov
mov
push
mov
scas
xchg
into
stos
push
mov
rcll
pop
in
jecxz
adc
or
call
lods
pop
xchg
hlt
popl
out
fwait
mov
movsb
and
mov
or
jl
and
cmp
outsb
add
and
lods
pop
daa
decb
push
fisttpl
xchg
pop
and
sbb
cmp
cmp
loopne
stos
cmpsb
or
jge
inc
test
or
scas
push
rcr
orl
bound
adc
ds
mov
inc
mov
aam
mov
xchg
mov
loope
aas
jb
lods
enter
repnz
mov
ficoml
mov
sti
inc
addr16
pop
lods
pop
gs
out
cmp
shll
mov
aam
add
and
call
mov
dec
and
imulb
push
dec
mov
mov
inc
imul
subl
popa
push
cmp
pop
mov
stos
inc
mov
loop
mov
mov
addr16
rcl
es
loop
jecxz
test
adc
inc
jnp
and
and
cmp
push
xorb
pop
in
push
insl
xchg
sbb
aad
adc
xchg
call
rolb
decb
xchg
and
mov
outsb
cli
xor
jmp
dec
std
push
stc
sbb
xchg
sub
ficoms
in
lds
mov
push
mov
dec
jmp
mov
jbe
inc
push
pop
out
mov
dec
jle
jp
idivl
scas
xchg
and
push
cmpsb
fidivrs
pusha
mov
inc
xchg
xor
out
dec
jecxz
lds
xor
mulb
outsl
cli
pop
inc
loopne
jb,pt
out
addr16
repnz
notl
mov
inc
cmpsl
movsb
adc
dec
mov
push
fidivs
lcall
insl
push
xchg
lods
jle
jecxz
test
or
hlt
pop
lret
sub
pop
repnz
sbb
cmp
iret
cli
das
lods
pop
in
dec
fwait
mov
dec
or
pusha
movhps
inc
pop
mov
shr
add
jo
pop
mov
and
clc
cmc
xchg
fwait
or
push
imul
into
push
and
push
adc
lods
das
test
push
scas
ds
std
adc
test
mov
test
lock
xchg
xchg
stos
xchg
aad
pop
movsb
and
jae
add
mov
xchg
sub
or
inc
xchg
or
into
mov
dec
into
call
jmp
jo
dec
inc
mov
or
andb
mov
inc
test
adc
psubusw
iret
sbb
fldenv
dec
dec
sub
int3
hlt
adc
sub
mov
shll
fsubrs
dec
sbb
fsubr
inc
data16
mov
scas
sti
test
mov
cmp
and
add
js
mov
mov
adc
bound
mov
fisubrl
inc
fcoms
push
out
pop
mov
and
mov
sbb
and
dec
inc
out
add
and
jmp
popf
inc
aas
sub
mov
rorl
stc
push
push
sub
fiaddl
mov
jp
pop
xchg
inc
ss
outsl
xchg
cmp
ljmp
mov
dec
jb
xchg
push
jb
movsb
pop
pop
cmp
mov
lock
ljmp
xor
in
inc
cmpsb
jle
scas
clc
scas
pop
loopne
xchg
sbb
pop
inc
repnz
adc
or
ret
pop
cli
jnp
dec
lret
daa
ja
mov
or
mov
loop
inc
pop
insb
push
leave
out
mov
popa
xor
scas
xchg
stc
ss
hlt
pop
mov
sti
jno
repz
add
inc
mov
sub
inc
aaa
aad
loop
sahf
cwtl
in
sub
jo
push
out
jge
push
xchg
dec
into
stc
lock
bound
aam
or
push
fbld
scas
mov
push
ja
sbb
and
jne
mov
lahf
outsl
xchg
cmp
out
div
sbb
mov
adc
xor
or
sub
cmc
mov
sti
jg
call
xchg
sub
out
lret
xchg
add
and
adc
or
ljmp
inc
sub
lods
repz
repz
push
movsb
jmp
pop
lds
add
lret
sub
adcl
insb
bound
sbb
test
int
in
jl
jb
and
mov
push
inc
fwait
js
mov
mov
dec
add
xor
cmp
adc
jb
dec
adc
and
call
xor
xlat
ds
lahf
push
lods
je
cld
aaa
mov
mov
cmp
jns
and
test
lea
fwait
cld
stos
aas
fisubl
push
das
lea
test
call
or
inc
ds
pop
lcall
adc
pop
cmpb
xor
fstpt
mov
stos
repz
aas
jno
cmp
dec
add
mov
fidivrs
das
ret
repnz
xor
dec
pushl
fistpl
faddp
aas
pop
ds
cmp
or
cmp
and
loopne
ret
add
adc
xchg
xchg
sbb
jo
cmovnp
dec
addb
dec
mov
or
add
xor
les
jne
rcrl
pop
pop
gs
insb
in
cwtl
jmp
adc
shrl
clc
rolb
mov
fs
push
outsb
mov
cli
or
ret
loop
jb
mov
mov
jg
mov
xchg
aas
push
sbb
fldt
xchg
dec
in
test
fistps
dec
test
xor
aaa
into
test
aad
gs
xchg
jl
test
inc
addr16
rorb
cltd
pop
push
sbb
repnz
push
mov
sahf
push
je
ljmp
fstpl
sbb
dec
rorb
and
out
popf
fs
jecxz,pt
sub
lea
mov
cli
mov
mov
ficompl
int
cmp
rcrl
push
pop
aad
lods
nop
mov
clc
mov
jb
jmp
pusha
outsb
cs
mov
jo
xor
xor
bound
sub
ljmp
jnp
rorb
mov
jl
je
xor
pushf
in
jge
out
pop
sbb
jge
adc
dec
sahf
adc
add
bound
sar
cld
inc
ljmp
lock
mov
pop
pop
inc
inc
scas
pop
xlat
int3
xchg
sub
sbb
sbb
xchg
jbe
fldt
adc
psrlw
mov
lahf
jp
shll
add
xchg
mov
xorb
pusha
jbe
mov
push
pop
repnz
sarb
xchg
test
add
clc
sahf
jmp
mov
jg
fnstsw
in
insl
daa
lret
add
jnp
addr16
rclb
inc
lea
mov
cli
lcall
xor
push
in
xlat
adc
push
cs
fidivrl
js
and
inc
sub
aam
fists
fwait
push
iret
xor
lds
ret
sub
and
ss
mov
jle
cwtl
xchg
sub
aad
pop
dec
clc
inc
sub
enter
jno
stos
pop
scas
mov
jbe
enter
lret
inc
dec
lods
cmpsl
aas
lods
xchg
and
dec
iret
repz
cwtl
cmp
fdivrl
lods
mov
or
jg
jge
adc
mov
test
mov
jb
mov
mov
inc
adc
es
nop
inc
mov
outsb
or
xchg
daa
scas
mov
idivl
adc
mov
xchg
lret
push
jecxz
jb
lcall
mov
or
pop
dec
mov
lods
pop
mov
data16
int
dec
dec
mov
adc
cmc
pop
push
mov
pop
and
mov
test
sbb
ret
pop
jmp
pop
sbb
enter
fstps
out
push
ds
imul
out
cmc
in
mov
cmp
adc
mov
aam
gs
js
lds
cli
push
push
xchg
pop
stos
jne
mov
pop
xor
inc
inc
mov
lahf
dec
int
and
pop
mov
jnp
jb
into
push
repz
lock
mov
push
xor
outsb
jle
add
pushf
jmp
int
ljmp
push
in
mov
or
std
roll
icebp
jae
into
pop
adc
jbe
sub
shlb
iret
loop
bound
mov
dec
and
fcomi
jg
pop
js
sbb
iret
add
xor
cld
sub
cs
ljmp
aam
in
pop
popa
jnp
cld
call
mov
cwtl
lcall
ljmp
adc
out
shr
sbb
fbstp
push
mov
jmp
adc
lahf
lea
push
rcll
testl
lret
inc
enter
mov
test
call
sbb
popa
shlb
lret
stos
cmp
inc
sbb
pop
sub
cli
pop
mov
js
test
dec
mov
movsb
aad
loopne
mov
xor
loope
lcall
jge
pushf
cmp
mov
data16
loopne
in
push
push
adc
lock
sub
pop
cmp
push
push
loope
fld
lods
cmc
cmpsb
jge
push
arpl
jmp
out
lret
mov
sub
and
pop
cmp
mov
push
mov
clc
cmpsl
adc
pushf
xchg
add
out
jne
stos
cmpb
pop
lret
push
in
bound
aaa
or
jae
or
dec
mov
rclb
arpl
adc
xchg
lcall
push
icebp
stc
inc
push
inc
inc
mov
seto
mov
and
les
pop
fs
cmc
sub
cmp
xchg
mov
push
sbb
fcomp
mov
insb
clc
popf
add
push
orb
data16
scas
pop
bound
adc
adc
mov
test
xchg
ljmp
sub
add
push
adc
test
dec
xchg
mov
xchg
jb
fdivrs
and
and
cltd
cmp
or
mov
arpl
add
shl
lods
or
sub
mov
aam
movsl
leave
decl
xchg
cli
cmpsl
int
mov
mov
scas
cmpsb
push
push
mov
stc
sbb
cmpsb
mov
in
cwtl
xor
mov
lret
insl
cmpsl
aam
addr16
ret
add
xor
jo
sbb
jecxz
cwtl
xchg
or
bnd
int3
fsubrs
fldl
aas
cmp
cmp
sbb
jbe
push
jmp
out
mov
lret
fldenv
aam
push
adc
dec
mov
insl
out
rorb
pop
lahf
jmp
daa
lret
incl
repnz
movsb
sbb
xchg
iret
in
pop
sarb
ljmp
sbbb
lds
push
mov
mov
mov
or
jmp
push
adc
mov
fsubrp
mov
adc
and
mov
mov
lret
inc
mov
jle
fsubrs
loopne
push
mov
neg
and
jno
shrb
pop
test
inc
imul
cmpsb
or
iret
fs
or
cmp
push
pop
jle
jae
addb
cmp
int
movsl
add
ja
xor
std
sbb
xchg
or
clc
xor
loopne
ljmp
lret
jae
popf
cmp
jmp
ret
adc
inc
shlb
pop
mov
xchg
mov
int
insl
sbb
jno
push
xor
cmpsb
lcall
pop
or
cwtl
lods
out
pop
mov
jge
add
data16
cmpsl
int3
pop
pop
dec
adc
lea
xchg
inc
in
insb
pop
jmp
sahf
lret
daa
add
fmulp
out
mov
add
mov
pop
icebp
sub
sub
popf
movb
fisttpl
test
sahf
lock
jecxz
imul
cltd
adc
mov
rcrb
pop
mov
jp
xchg
push
imul
idivb
xor
cltd
shrl
and
aam
ja
out
push
push
jbe
shll
inc
pusha
jne
sbb
mov
jne,pt
stos
imul
xchg
mov
adc
mov
adc
mov
mov
push
add
sbb
ret
repz
mov
push
lods
adc
push
inc
adc
mov
sub
ret
ficomps
out
mov
dec
js
lea
jg
adc
pop
mov
pop
aaa
ret
pop
adc
mov
pop
cmp
roll
and
cmc
push
fadd
insl
and
pop
aaa
xchg
xor
xor
cmc
ret
adc
cmc
loope
ret
cld
xor
xchg
sub
jnp
sbb
lahf
andb
pop
pop
push
cmpsb
fisubs
inc
inc
loope
addb
or
fs
xor
faddp
ss
lods
paddsw
int
adc
outsl
loope
pushf
inc
inc
jmp
shlb
sbbb
movsl
lret
ret
mov
push
daa
or
sbb
bound
inc
adc
sub
fwait
xchg
pop
mov
pop
mov
mov
add
dec
fcoms
adc
or
cwtl
inc
lret
ja
hlt
bound
cmp
inc
xchg
mov
jae
cmc
jnp
cmp
xor
out
repz
adc
mov
lea
cmpb
dec
mov
cmc
push
and
jbe
xchg
and
xchg
hlt
xor
fsubr
arpl
push
hlt
test
xor
dec
add
or
insb
mov
cwtl
sub
aaa
sbb
sahf
inc
xchg
in
and
mov
call
movsl
cmp
mov
xor
icebp
xor
outsb
xchg
mov
ds
cltd
xchg
and
dec
scas
mov
aad
cmpb
and
cs
loope
add
lret
xor
xor
adc
jmp
xor
sbb
das
cmp
mov
adc
pushf
outsb
cmpsl
add
sahf
lods
cmpsb
dec
rcrl
push
cmovae
or
mov
and
jnp
notl
xchg
leave
mov
pop
mov
cmp
dec
or
xchg
call
jle
dec
add
mov
sbb
ss
mov
xchg
dec
cmp
and
addl
testb
add
xlat
test
shlb
outsb
mov
xor
push
loopne
or
ret
xchg
xlat
out
push
pop
sti
xor
leave
call
mov
std
and
fmuls
mov
adc
popf
lea
pop
push
jmp
push
mov
int3
add
cltd
sti
ljmp
push
mov
fnstsw
lea
adc
mov
movsl
mov
cli
add
lahf
pushf
cmp
les
or
sub
cmp
mov
or
in
mov
jno
adcl
push
jb
rclb
pop
lret
push
std
out
sbb
mov
mov
pop
in
jnp
mov
and
aaa
push
dec
imul
pop
icebp
inc
insl
mov
rolb
add
or
icebp
xchg
add
addr16
mov
repz
push
pop
sub
mov
inc
xchg
stos
ret
ret
pushf
pop
nop
sbb
mov
or
jne
inc
add
bound
push
cmp
lret
fwait
sbbb
in
mov
mov
out
fs
mov
in
insl
shlb
cli
mov
mov
es
insl
xor
iret
mov
dec
pand
stos
orl
xchg
jns
xchg
and
out
stos
mov
stos
ror
sub
adc
fadds
test
out
jno
mov
xor
insl
xor
mov
gs
inc
mov
jae
cmp
or
cmp
or
lea
cmp
jg
fisubrl
sub
scas
testl
outsl
mov
shll
xor
push
xor
fsubrl
sti
jp
push
xchg
add
pop
inc
loop
lds
mov
push
inc
lock
mov
xchg
imul
loopne
pusha
sbb
daa
push
push
add
add
pop
sbb
movsb
insl
ja
sbb
and
ja
mov
add
inc
push
cld
cmpsl
leave
and
cmp
dec
ljmp
fwait
repz
inc
ss
sbb
xchg
in
mov
cwtl
lahf
xorl
mov
dec
inc
scas
push
xor
lret
jnp
fwait
test
add
pop
pop
scas
adc
aam
and
test
mov
cmp
in
and
cmc
adc
mov
and
lret
xchg
ret
add
inc
fsubrl
out
adc
lods
mov
fsubrp
push
push
out
cmpsl
pop
pop
es
sbb
cmpsb
xchg
fwait
cwtl
mov
popf
shlb
arpl
mov
add
xchg
xchg
lods
mov
mov
addr16
jmp
pop
sarb
decl
jg
pop
lock
or
fucomi
mov
iret
mov
lret
inc
jne
mov
and
test
xchg
push
jns
push
lods
in
dec
inc
fsubrs
mov
mov
hlt
call
jl
mov
adc
mov
cmpsb
mov
je
imul
test
out
sahf
sar
scas
sub
mov
pop
gs
push
xchg
sti
inc
sbb
pop
mov
nop
cli
aam
aaa
outsb
pop
insl
fnsave
es
mov
es
outsb
ja
cmp
test
loope
inc
push
lds
cmp
xchg
pop
fidivs
out
in
cmpsb
call
xchg
iret
ljmp
add
cmp
pop
push
fwait
inc
push
jb
xchg
xchg
xor
cmp
in
hlt
mov
or
mov
std
std
std
addl
push
add
popa
jg
and
lods
ficomps
add
lcall
bound
push
xlat
testb
cmp
mov
lock
sub
js
fadd
mov
mov
lahf
loopne
je
pop
mov
inc
xchg
hlt
sbb
jne
jmp
sub
out
movsl
imul
or
sub
test
add
mov
imul
jnp
inc
movsb
mov
cld
sti
push
sub
int3
add
mov
jmp
xorb
lret
fcoml
inc
jb
xchg
cmp
mov
cltd
out
mov
pop
mov
xchg
fld
dec
mov
cli
or
iret
sub
cli
stc
clc
lea
sub
pop
pop
jo
pop
ret
sbb
jl
roll
or
xchg
xor
jmp
imul
add
push
xor
pop
fldl
movsb
pop
les
or
adc
inc
movsb
pop
push
sarl
xor
js
cmp
ljmp
movsb
mov
jno
sub
xchg
adc
rolb
jb
out
jecxz
cmp
incl
outsl
jecxz
loopne
ret
push
jbe
std
jp
xor
stc
loopnew
adc
and
popa
jle,pn
call
mov
add
cmp
imul
sbb
inc
test
and
je
outsl
cmp
push
mov
xchg
addb
add
mov
dec
lods
inc
jne
mov
push
jno
add
je
push
jg
ss
pop
lds
scas
leave
mov
xlat
xchg
lahf
pop
pushf
enter
nop
inc
xchg
xor
sahf
or
xchg
stos
push
fisubs
call
idiv
lahf
int3
mov
jae
in
jg
push
mov
out
pop
cs
addr16
loop
fnstenv
push
adc
xchg
add
shl
enter
sbb
notb
jg
ss
add
ds
push
xor
or
and
std
test
iret
mov
stos
lods
rorb
pop
mov
sbb
enter
inc
loop
sbb
mov
sahf
popf
pop
sub
push
mov
sti
arpl
cmc
frstor
push
push
popf
add
arpl
add
sbb
pop
adc
dec
jns
adc
mov
lock
or
cmp
gs
cmpl
into
pop
push
mov
jge
imul
mov
sbb
jp
rcrl
mov
pushf
js
push
shl
mov
xor
jns
iret
mov
mov
int
je
lods
jae
les
xchg
push
daa
fwait
push
add
in
xlat
xor
outsb
fcmovu
arpl
stos
cmc
or
push
push
insb
test
cmp
or
fdiv
and
pop
pop
push
dec
leave
test
shll
in
sbb
loope
pushf
fs
cmpsb
xchg
cmp
inc
add
push
insb
das
insb
gs
cli
sbb
mov
movsb
ret
cmpsb
aam
outsb
cwtl
inc
scas
bound
pop
movsl
inc
jno
fs
push
and
push
sub
outsb
nop
cld
jecxz
movsb
jae
mov
lods
outsb
and
mov
leave
dec
or
xor
test
or
xor
loop
mov
repnz
mov
in
cmp
xor
and
and
mov
inc
add
mov
mov
xchg
sbb
out
xor
fwait
ja
fmuls
sti
movsl
mov
sbb
loope
xchg
ljmp
cmpsb
pop
cltd
in
xor
out
mov
clc
mov
pop
mov
int
popf
mov
insb
push
push
mov
mov
aas
push
mov
dec
mov
out
inc
loopne
mov
push
and
in
out
sahf
adc
in
stos
mov
add
dec
jmp
push
je
aam
cmc
fldcw
mov
out
orb
adc
bound
shl
adc
adc
pop
xchg
dec
mov
hlt
mov
mov
xor
adc
shl
jnp
xchg
lret
setae
in
gs
imul
inc
in
mov
mov
lahf
pop
repnz
pop
adc
dec
mov
jnp
fsubs
rcl
add
enter
jmp
and
xor
loop
add
dec
xchg
lods
icebp
popa
mov
ja
scas
adc
mov
mov
pop
push
mov
imul
jl
mov
das
call
into
testb
cld
fstp
imul
scas
les
jb
mov
adc
pop
loope
dec
adc
sub
in
movb
std
cwtl
push
add
xchg
or
leave
mov
adc
lods
sbb
scas
insb
ret
dec
insl
cld
add
loope
lock
pop
mov
push
pop
leave
jle
xor
imull
ficoms
orl
jo
jp
lcall
mov
dec
push
dec
inc
cmp
jle
jo
int3
push
mov
inc
int3
pop
push
fisubrl
divl
cmpsl
out
push
orb
inc
fistpll
push
add
std
jp
lods
cmpb
or
xchg
sub
sub
cmpsl
into
cs
shlb
jl
dec
mov
mov
pushfw
pop
out
and
lcall
jae
dec
cld
inc
jmp
dec
push
jbe
data16
lods
lock
aaa
addb
adc
xor
mov
or
jbe
xlat
icebp
test
gs
xchg
dec
jl
fwait
mov
ret
jmp
out
repnz
sub
cmp
jno
lret
inc
daa
arpl
sub
in
pop
sub
stos
mov
cmpsl
mov
mov
sub
clc
fnsave
js
in
dec
and
hlt
pop
cmp
adc
jo
daa
std
mov
test
xchg
sbbb
aas
xor
sti
dec
je
les
fists
repnz
sbbb
mov
push
and
sbb
push
push
sbb
inc
fstps
push
shrl
pop
loope
cli
sbb
xlat
mov
shrb
in
dec
cmp
ds
in
mov
mov
mov
loopne
sbb
loop
sbb
cltd
push
mov
ror
jecxz
outsl
jecxz
rorb
lret
leave
jb
sbb
lcall
ret
das
stc
cmpsl
sub
dec
and
add
in
sbb
or
cmc
sbb
les
jl
sahf
add
test
jmp
push
iret
int
push
andb
sahf
imul
sbb
bound
dec
outsb
xor
popf
enter
ret
stos
dec
cmp
jle
mov
xlat
xlat
cs
mov
mov
jbe
ror
ljmp
fld
jmp
cli
or
sbb
mov
popa
out
and
in
cmp
pop
dec
jne
andl
dec
mov
test
cmovb
jb
pop
ret
cmp
sbb
xchg
repnz
add
pusha
xor
cmp
dec
xor
into
mov
fists
or
sbb
xchg
jb
icebp
sbbl
ja
fldt
push
repz
aad
lahf
dec
cmp
rol
std
ss
loopne
xor
jne
mov
rclb
push
das
push
mov
mov
outsl
insl
sbb
stos
shlb
lds
fimull
clc
or
popa
out
stos
rcll
sbb
bound
lret
adc
xchg
xor
dec
mov
sbb
stos
popa
repnz
push
out
repnz
sarl
test
mov
xor
es
loop
mov
push
mov
push
cmp
adc
mov
jns
int3
repz
lcall
or
cmp
inc
aam
lcall
ret
cmpsb
cmpsb
ret
jl
leave
pop
lret
push
pop
jle
jp
loopne
push
and
push
mov
fldt
movsl
int3
jb
vmovupd
mov
rcrb
adc
imul
inc
hlt
subb
pop
call
repnz
mov
or
ss
or
pop
pop
jg
popa
xchg
mov
push
mov
inc
cmpsb
es
cli
mov
and
stos
mov
popf
adc
jno
addr16
leave
lret
dec
jle
xor
test
sub
mov
les
dec
movsl
inc
cmp
int
cmc
out
shlb
lret
in
xchg
mov
add
add
in
scas
mov
sbb
insb
push
inc
push
mov
lret
or
push
inc
xchg
xchg
gs
sbb
cmp
pop
fs
sub
add
xchg
lods
rcrb
inc
or
inc
mov
mov
mov
addr16
insb
test
testb
jmp
push
xchg
call
dec
dec
lret
mov
mov
fcompl
das
xorl
jle
cmp
imul
pop
dec
sub
mov
repz
loopne
out
call
imul
mov
jb
enter
xor
aam
mov
push
dec
xor
adc
stos
push
rcrl
popf
pop
test
or
jne
je
loop
push
lds
sub
xchg
stos
into
jo
mov
test
cmp
jbe
sbb
loopne
xchg
cmp
test
pushf
ljmp
incb
mov
pop
test
mov
and
mov
inc
pop
sbb
push
stos
jmp
mov
clc
faddl
ret
jb
fdivs
sub
mov
mov
std
dec
mov
cmp
cs
cmp
clc
push
inc
notl
cwtl
pop
or
mov
mov
dec
xchg
jmp
sbb
mov
push
scas
into
adc
sbb
mov
sub
cmp
aaa
scas
aad
mov
in
jle
loopne
push
sarl
lret
hlt
and
pop
xchg
sub
jp
cmpsb
inc
xlat
push
xchg
call
mov
mov
aaa
pop
mov
push
xchg
data16
mov
scas
fisttpl
fnstcw
fs
xchg
push
mov
inc
jmp
jb
mull
xchg
inc
pop
rolb
pop
test
xchg
cmp
pop
scas
scas
loopne
push
sbb
push
dec
push
sbb
xchg
pop
xchg
lock
and
dec
clc
scas
pop
add
pop
test
fdiv
jns
insb
sub
dec
or
icebp
push
cmp
test
jns
jnp
mulb
cwtl
ljmp
out
mov
adc
inc
sahf
cmp
mov
jmp
jo
fdivrp
and
and
enter
push
cwtl
or
ljmpw
call
inc
lcall
int
sbb
lds
mov
mov
push
stc
adc
jns
pushl
adc
jo
test
cmp
or
mov
inc
insl
jb
adc
xor
rclb
mov
stos
scas
sbb
cltd
push
lods
ret
cwtl
cltd
cltd
jno
pusha
movsl
hlt
sahf
jmp
insb
or
push
adc
xor
cmpsb
xor
jmp
mov
adc
in
in
inc
cmp
mov
dec
push
movsb
stos
bound
mov
cltd
xor
push
xchg
lret
cld
das
jb,pn
lret
nop
loop
inc
inc
cmp
jno
shl
loope
push
or
pop
mov
mov
xchg
popf
xor
insb
lret
addr16
mov
sub
mov
int3
sub
ds
cmp
cmc
xchg
les
mov
inc
fdiv
xchg
jnp
or
mov
or
xor
xor
outsb
pop
mov
dec
mov
sbb
xor
enter
push
lock
aad
test
insl
sbb
repnz
pop
inc
ljmp
cli
into
cmp
scas
ljmp
daa
jmp
jecxz
test
xchg
ret
out
movsl
pushf
leave
pushf
mov
dec
loop
enter
mov
insb
outsb
and
push
stos
jle
das
roll
sbb
into
inc
add
imul
xchg
adc
or
jno
cmp
mov
adc
cwtl
out
inc
dec
jp
lcall
cmp
inc
sbbl
or
jecxz
jle
imul
shlb
fadds
jnp
fs
das
stc
mov
lcall
jo
mov
sub
add
jge
sbb
pop
xor
mov
inc
insb
add
js
imul
daa
mov
loope
test
imulb
out
in
repnz
ljmp
xor
dec
stos
das
pop
iret
or
frstor
test
ret
and
lds
sbb
add
loop
js
dec
fimuls
sbb
cltd
data16
pop
imul
cmpsl
cmp
sub
in
and
shll
icebp
int3
push
je
mov
sub
stc
dec
ljmp
dec
push
or
inc
jecxz
int3
dec
adc
sbb
mov
dec
cli
xor
mov
cmp
mov
jae
dec
cmp
cmpsb
mov
call
xchg
mov
shrb
push
dec
std
bound
pusha
xor
sahf
jns
sti
clc
sbb
gs
push
sbbl
inc
and
and
and
dec
fdivr
push
movsb
out
clc
data16
rorb
push
and
addr16
dec
xor
mov
test
bound
mov
mov
pop
cmp
fistps
dec
add
jne
adc
jb
jbe
cli
mov
add
sahf
or
and
fnsave
fs
cmp
aaa
xchg
dec
xchg
and
pop
cmp
dec
jns
ljmp
int3
add
pop
mov
es
ds
dec
stos
lock
outsl
sub
pop
fmul
loope
ja
lds
fiaddl
inc
fsubrs
mov
mov
xor
inc
sub
sub
or
inc
push
cmpsl
rolb
xor
adc
jmp
loope
push
out
mul
cli
inc
mov
inc
pop
push
push
sbb
push
sbb
fdivrl
arpl
test
sbb
mov
nop/reserved
and
roll
mov
aas
pop
jne
jno
inc
dec
dec
test
mov
mov
xchg
fistpl
popw
popa
or
pop
sbb
cwtl
repz
pop
arpl
or
adc
and
cmpsb
orl
sub
inc
sbb
jne
cmpsb
sbb
jg
dec
jb
mov
fsubrs
mov
add
adc
ret
jp
push
pop
out
mov
clc
mov
ds
jmp
jge
pop
popf
dec
jmp
into
icebp
ret
inc
xor
out
sbb
and
jle
mulb
mov
fcoms
pop
mov
outsb
leave
mov
inc
mov
mov
mov
lock
mov
insb
clc
or
lret
cmp
add
adc
sets
push
pop
enter
cld
jae
stc
imul
movsb
dec
and
and
jl
cli
nop
pop
out
repnz
push
outsb
and
adc
outsl
pop
sti
sahf
orl
mov
aam
iret
stc
arpl
rcrl
iret
sar
dec
xor
cmp
decb
sti
dec
stc
daa
cmp
mov
jnp
and
fwait
outsb
hlt
inc
mov
jg
sbb
mov
pop
scas
or
pushf
hlt
ficompl
adc
fs
rcl
fwait
sub
lods
mov
cld
add
ljmp
int3
aad
mov
mov
cmp
sti
popf
xchg
lds
fldcw
adc
aas
in
mov
sbb
mov
scas
cmp
dec
xchg
pop
mov
add
clc
or
sbb
les
or
fwait
ss
add
pop
push
cmpsl
pop
cli
cwtl
mov
shll
int3
aam
sbb
subl
add
cld
das
test
xchg
push
lcall
mov
xor
sub
loopne
sbb
xor
enter
addb
xlat
sbb
sbb
add
inc
ds
cs
loope
dec
jmp
cmp
fcompl
jmp
cld
cmc
aaa
or
sbb
and
shrb
cmp
cmp
sbb
fldenv
jmp
ja
cli
movsb
gs
imul
mov
sbb
addr16
gs
dec
dec
add
jb
or
shrl
sub
or
push
mov
dec
jg
inc
hlt
sub
test
movsb
data16
es
icebp
adc
into
fs
pop
jl
and
pop
mov
call
movsb
mov
add
mov
xor
sbb
addl
pop
adc
stos
js
mov
sub
pop
cmp
mov
mov
jecxz
inc
shl
jne
sbb
xchg
inc
cmpsl
cli
dec
lret
daa
push
or
div
sbb
jbe
daa
dec
mov
lods
stos
loopne
inc
adc
pop
xor
push
flds
insb
inc
cs
cwtl
and
xlat
ds
push
dec
popf
or
sahf
xor
xchg
in
clc
push
xchg
inc
sbb
pop
jl
xlat
add
mov
push
jno
jle
data16
iret
insl
jmp
sbb
in
mov
xor
push
and
and
lret
push
iret
pop
and
xchg
ret
or
push
and
add
mov
fldcw
mov
inc
pushl
pop
xorb
push
cltd
scas
dec
aas
fsub
fnstcw
push
clc
pop
xchg
push
mov
add
in
insb
in
push
cmp
sahf
or
arpl
andb
jl
mov
pop
outsb
loopne
xchg
xor
scas
enter
jl
dec
pop
jmp
or
sahf
mov
and
nop
jp
jnp
inc
sti
ficomps
rorl
sbb
stos
insl
ljmp
cmc
inc
cmp
mov
mov
inc
mov
insl
scas
in
pop
inc
movsb
pop
mov
icebp
movsb
and
push
xchg
mov
mov
sub
stos
push
sub
dec
imul
in
add
jbe
jp
lcall
mov
pop
fisubs
mov
jne
mov
call
clc
mov
pop
ss
fsts
lods
gs
shrb
xor
ret
pusha
cmp
ret
ds
mov
or
rclb
sbb
popf
xchg
and
sub
cld
in
mov
pop
andl
inc
rcrb
fsts
pop
dec
lock
cmpsl
fcoml
bound
sub
cmpsb
push
test
jle
popf
or
imul
cmp
push
lret
je
sub
push
xlat
jl
dec
cmp
mov
xor
adc
shlb
sahf
xchg
dec
mov
mov
sahf
int
inc
out
jne
jo
dec
sbb
xlat
sarb
xchg
and
pop
in
jo
xchg
loop
lea
xchg
mov
push
xchg
lret
mov
and
sbb
dec
push
xchg
leave
out
inc
lods
pop
fnsave
pop
pop
xchg
cli
mov
pop
sbb
pop
scas
inc
cltd
xchg
arpl
xorl
mov
into
sub
or
pop
cmpl
adc
add
call
push
sbb
xchg
divb
jmp
add
mov
xor
testb
or
push
xchg
ds
in
push
inc
fidivl
adc
pop
lret
xchg
xchg
xor
push
stos
dec
dec
xor
pop
std
divl
xchg
in
xor
test
fs
inc
outsl
adc
repz
jno
push
les
push
push
out
adc
push
jns
lds
inc
cwtl
outsl
orb
ja
and
test
xchg
inc
sub
iret
xchg
and
mov
cs
sarb
xor
arpl
pop
push
js
inc
pop
or
sub
xchg
addl
jge
or
jns
xor
cmc
outsb
fwait
lods
test
pusha
cmp
fsubrl
sbb
xor
lock
sbb
cld
fidivs
shlb
inc
popa
mov
fsubp
nop
dec
or
aad
push
fbld
test
sbb
jne
pop
sbb
idivb
fwait
xchg
or
inc
mov
jo
mov
sahf
sbb
push
mov
pop
or
inc
in
out
sbb
add
insb
fbld
lods
clc
inc
fstps
pop
mov
and
outsl
jp
test
or
test
addb
cmp
pop
dec
lret
cmovae
je
mov
xor
das
fcoml
out
jmp
int
mov
sbb
out
xor
pop
loope
xchg
dec
jge
push
loope
sub
into
sub
leave
jmp
test
inc
mov
aam
cmp
fldl
dec
jbe
xchg
jmp
loop
mov
outsb
mov
ljmp
push
fidivs
mov
or
push
cmp
in
rorb
push
clc
int3
mov
cld
pop
pop
imul
dec
fbstp
push
mov
sub
jle
lahf
repnz
push
xchg
lds
mov
es
mov
imul
add
dec
push
adc
fsubl
fidivrl
xchg
ss
pop
subl
loope
push
addr16
mov
mov
stc
mov
clc
pop
lods
dec
xor
call
push
adc
dec
jo
hlt
push
outsb
cltd
inc
sub
divl
adc
dec
call
dec
cli
shrl
les
add
xchg
jno
sub
pusha
ret
mov
test
fwait
gs
shrl
mov
adc
outsl
testl
out
daa
jne
jne
xlat
cli
jnp
decb
gs
aam
decb
jbe
push
pusha
popf
aam
dec
xor
push
add
push
xchg
jb
iret
push
push
leave
fstl
dec
push
ja
repz
jne
cs
mov
enter
jnp
xchg
aam
pop
sbb
out
adc
and
push
xchg
fmuls
mov
mov
mov
fnstenv
and
pushf
add
bound
xchg
and
dec
push
xor
sub
inc
andb
add
push
jmp
out
gs
fisttpll
dec
jbe
or
sbbl
test
loope
fstpt
or
ljmp
lret
xchg
and
push
mov
add
cwtl
add
jg
mov
xor
lcall
movl
mov
mov
add
cmpsl
std
dec
mov
ds
movsl
adc
mov
jb
daa
inc
pop
inc
mov
jp
jl
xchg
aaa
nop
fisttps
ja
adc
jle
mov
dec
and
insl
inc
clc
mov
mov
cmp
imul
mov
mov
jp
movsb
cmp
xchg
jl
mov
pop
jo
adc
lods
or
dec
add
hlt
mov
dec
sbb
xchg
inc
rorl
xchg
cmp
enter
mov
xchg
icebp
dec
pop
popf
std
mov
mov
mov
enter
outsb
mov
and
cmp
out
arpl
and
and
add
inc
xchg
cli
sub
adc
out
xorl
jnp
xchg
repz
add
fildll
lahf
adc
std
shll
call
jg
loopne
sbb
sub
sub
int
sub
pop
dec
movsl
ret
and
scas
test
aad
int
or
xchg
or
adc
add
loop
mov
lds
pop
scas
leave
xor
ja
push
mov
jo
arpl
std
xor
pop
movl
mov
ja
add
cmpsb
jmp
js
in
mov
andl
loop
inc
in
xorl
inc
popf
mov
xchg
scas
and
pusha
loope
inc
jmp
out
js
fists
inc
jmp
fistpl
and
leave
adc
sub
sbb
in
mov
and
xchg
bound
or
cmp
mov
in
mov
push
adcb
pop
cmp
inc
cmp
add
test
adc
jp
incb
inc
adcb
ljmp
mul
add
pop
and
pop
call
fiaddl
shll
loopne
into
imul
lahf
mov
mov
bnd
test
unpckhps
mov
jge
insl
loop
movsl
or
xor
mov
lock
xchg
outsl
sub
sub
or
add
mov
sbb
movsb
mov
bound
cmpsl
cmpsb
push
sub
mov
stos
and
scas
add
iret
into
ret
repz
pop
xlat
push
xchg
int
in
mov
adc
add
mov
add
mov
rorb
add
mov
sti
add
mov
inc
into
adc
in
mov
pop
inc
push
insb
cmp
das
jb
aaa
popa
in
hlt
jns
loop
adc
xchg
inc
jne
mov
sub
xchg
or
dec
test
cli
mov
repz
repnz
sbb
and
sbb
roll
aam
and
adc
sbb
data16
and
movhps
ret
cmp
cmp
clc
cmp
jns
dec
rcrl
adc
lea
lret
jle
in
dec
testl
add
cmc
xchg
inc
cld
out
xchg
mov
add
lds
int3
fstl
inc
push
mov
movsb
in
les
shll
aas
pop
or
loopne
xor
jg
sahf
dec
or
mov
xlat
shrl
add
mov
cmp
adc
pop
cmp
jg
lock
mov
outsl
out
mov
jnp
add
sbb
lahf
test
hlt
fnstsw
xchg
leave
and
jl
sbb
mov
sub
jne
mov
push
jmp
out
xchg
out
pop
lods
cmpsl
out
out
mov
mov
leave
adc
and
shll
jns
jle
add
daa
xchg
outsb
int
cmp
pop
push
lock
aam
lods
js
movsl
imul
add
mov
rol
movsb
call
call
aam
in
sbb
mov
testb
clc
push
jmp
cmp
idivb
iret
pop
mov
into
into
inc
sbb
dec
cmc
fisubl
or
jo
fbstp
cmpb
es
sbb
lret
call
adc
mov
out
int3
mov
mov
les
sub
xchg
mov
sub
xor
jo
jecxz
dec
fstps
adc
rcrl
push
adc
inc
lock
pop
jl
cmp
in
pop
scas
pop
inc
iret
mov
sti
add
je
repz
inc
sbb
xor
movsb
fcompl
add
fdivrl
xchg
add
aam
push
mov
push
das
scas
cmp
iret
add
int
fsubl
ficoms
cs
decb
adc
stos
jg
push
out
push
xchg
test
mov
repnz
movsb
faddl
jge
sub
scas
inc
push
xor
cwtl
mov
xchg
in
iret
mov
cld
outsb
std
and
jne
add
lock
dec
mov
sbb
sarb
cli
adc
test
ja
xor
mov
xor
cmp
xor
and
stc
in
test
jae
mov
mov
sbb
shlb
push
inc
stc
add
mov
adc
jno
cmc
jmp
mov
imulb
sahf
lret
lcall
repnz
or
inc
mov
fnsaves
popw
ret
das
cmpsb
lahf
popf
aas
scas
addb
add
fnstenv
mov
xchg
cmc
insl
test
jg
push
aas
xchg
cmp
aad
mov
xor
mov
pop
sub
repz
lds
and
xor
cmpsl
jae
leave
test
lds
adc
mov
dec
mov
pushw
mov
je
addb
push
sbb
dec
pop
ljmp
test
inc
push
mov
dec
xchg
fldt
sbb
push
in
loop
xchg
enter
repz
rorl
fadds
pop
jmp
ja
mov
pop
ljmp
gs
jge
dec
repnz
enter
ljmp
lahf
data16
pop
lods
xchg
xrelease
enter
lret
fistps
mov
fs
jle
cld
xchg
mov
adcb
or
mov
lret
aaa
xor
stos
in
xchg
cld
push
arpl
adc
jmp
xor
xchg
pop
ljmp
hlt
jb
jbe
ja
gs
int3
push
adc
cmpsl
jmp
gs
jae
jo
scas
pop
inc
mov
cmpsb
iret
outsb
lahf
push
incl
mov
jb
pcmpgtw
leave
lahf
into
inc
ja
add
push
daa
push
je
stos
sub
inc
arpl
rolb
test
std
and
inc
mov
ficoml
cmpsl
test
mov
adc
test
or
or
adc
dec
mov
add
push
mov
sbb
lcall
and
jne
jecxz
fs
lock
pushw
notl
aam
jmp
sub
push
pop
inc
loope
movsb
push
aam
test
xor
mov
lea
cmc
lret
or
loope
adc
ror
fistps
cld
xchg
push
sbb
cmp
or
arpl
pop
jle
aaa
and
mov
test
int3
sbb
push
mov
mov
lahf
icebp
cli
inc
fs
in
test
adc
cmp
movsl
pusha
outsb
mov
inc
insl
jne
jge
sbb
cwtl
jmp
xchg
jg
jle
arpl
mov
sbb
das
leave
pop
scas
hlt
outsb
mov
and
mov
pop
dec
mov
mov
mov
and
rorl
mov
test
mov
push
andb
xchg
xor
shr
jnp
sti
into
sub
stos
adc
jmp
popf
pusha
push
loope
jo
add
adc
inc
hlt
mov
push
leave
andb
movl
cmp
xor
into
xor
sub
fldlg2
sub
movsl
or
mov
mov
inc
sub
cli
bound
xchg
adc
stos
jle
sbb
cmovns
add
jle
push
push
scas
negb
ror
pop
mov
or
das
cmp
cmp
add
ds
enter
leave
decb
insb
jecxz
mov
cmc
sub
jl
out
clc
rcll
arpl
es
mov
push
repnz
loop
pop
cwtl
xor
in
das
dec
aaa
or
jb
adc
popa
rcll
xor
dec
xor
push
mov
xor
fs
addl
dec
les
lcall
push
icebp
fisubs
and
test
cmc
dec
ficoml
sbb
pop
add
sbb
dec
sbb
sub
adc
xor
out
mull
sbb
xchg
jge
out
daa
jecxz
lcall
and
rorb
sbb
jecxz
test
int
push
mov
stos
push
out
call
xor
icebp
leave
ret
mulb
xor
sbb
cmpsl
ds
mov
icebp
into
test
mov
outsl
mov
bound
adc
jl
adc
cld
iret
orb
jnp
xchg
lret
xchg
cmp
mov
mov
or
clc
gs
push
popf
cs
test
jae
inc
jecxz
mov
loop
mov
and
sbb
jmp
sub
ret
jmp
mov
pop
in
shrb
inc
xchg
jb
out
sbb
push
xor
lds
sbb
push
leave
mov
jbe
stos
adcb
les
mov
mov
sbb
scas
stos
pop
mov
pop
scas
out
loope
fsubrs
dec
xor
outsb
popf
mov
out
mov
xlat
test
jne
push
and
mov
jecxz
sbb
push
les
adc
cmp
add
lock
iret
rol
iret
xchg
idivl
inc
bound
mov
ja
or
insl
mov
cmp
pop
stc
rcl
mov
jp
pop
mov
push
outsb
jne
cmp
fsubs
dec
mov
adc
outsl
cmpsb
stos
lret
hlt
iret
shrl
push
sub
inc
lea
pop
cmc
xchg
mov
adc
mov
add
jp
sub
push
fcomp
into
out
dec
sub
std
mov
shll
jb
add
enter
cmp
jmp
daa
pop
aam
xchg
fmull
sub
jb
fwait
mov
fcoms
xchg
xchg
push
pop
test
ret
jmp
lock
fildl
push
outsl
pop
mov
dec
into
jl
jns
sbb
sub
fdivrl
data16
fidivrl
outsl
add
inc
mov
test
leave
add
mov
inc
aaa
test
mov
mov
mov
shlb
sbb
lcall
out
adc
mov
pop
push
pop
int3
cld
mov
inc
inc
leave
fadd
pushf
aas
mov
call
mov
fiaddl
cmp
sub
daa
fistl
xchg
jnp
sbb
sub
jl
add
sbb
lds
sti
jg
pop
sbb
inc
mov
xlat
push
pop
js
jne
sti
xchg
fadd
inc
cli
ficompl
movsb
mov
test
clc
loop
mov
ficompl
nop
sar
sub
inc
dec
leave
jae
insb
dec
dec
cmp
jl
fmuls
jge
scas
faddl
pop
push
ficomps
mov
pop
and
push
push
push
jp
insb
test
dec
mov
outsl
mov
cmp
lock
ret
xchg
sub
xchg
sub
ret
mov
pusha
mov
push
pop
ja
cmp
cwtl
adc
xchg
xchg
dec
xor
cmc
repnz
pop
fisttpll
out
sti
inc
lret
mov
adc
scas
mov
cmp
imul
data16
and
mov
jnp
or
mov
cmp
mov
stc
fidivl
sbb
fwait
inc
notb
jbe
mov
pushf
xchg
bound
push
mov
imul
outsb
iret
sbb
les
mov
rolb
aad
imul
popa
mov
xor
or
popa
cmp
or
cmpsb
mov
stos
ss
sub
or
in
sbb
push
lahf
insb
lods
jbe
pop
nop
gs
mov
js
shrl
xor
dec
jmp
inc
xor
inc
pop
insb
push
cmpsb
mov
jle
xor
add
jns
pop
inc
mov
xchg
fwait
divl
test
imul
mov
and
pop
xchg
add
gs
enter
popa
pop
mov
iret
xchg
iret
bound
sbb
dec
ds
lods
xchg
push
or
lods
xlat
shrb
popa
jns
mov
sub
cmp
mov
stc
shrb
push
rcl
std
mov
xchg
pop
mov
lods
out
pushf
lea
rolb
push
xchg
or
daa
rolb
cmp
sarb
dec
mov
xor
clc
mov
ljmp
ljmp
adc
lods
in
mov
sbb
cmp
or
cmpl
sub
loop
mov
neg
test
sub
es
jp
cli
aas
mov
sbb
lds
jmp
and
loopne
push
inc
fisubrs
shll
fs
leave
lret
push
andl
mov
push
fidivrl
push
pop
push
and
mov
sub
jbe
enter
and
repz
add
push
jl
fwait
and
out
lods
fsubrl
nop
je
rol
test
dec
cwtl
jnp
xor
or
pop
outsl
out
push
scas
xchg
imul
lcall
xor
mov
fwait
icebp
sub
adc
xchg
fs
cld
jg
push
andl
and
test
lret
or
test
je
push
lret
push
mov
stos
pop
xchg
out
ljmp
dec
adc
sbbl
inc
cmp
sub
fiaddl
addb
imul
in
cmp
cltd
push
andb
xor
mov
dec
loopne
in
dec
jp
and
jbe
xchg
je
fidivrl
pop
popa
cltd
aam
cli
aam
and
jae
sub
pop
ds
pop
das
pop
shr
arpl
pushf
cli
gs
ds
or
dec
mov
ficompl
icebp
iret
jle
dec
pop
inc
call
in
sahf
lods
cmp
cmpsb
or
je
scas
cltd
stc
sbb
jnp
bound
orps
pop
jae
das
dec
daa
xchg
icebp
xor
cli
xchg
mov
cmpsb
fdivl
pusha
xor
jns
cmp
cmpsl
add
add
mov
inc
bound
or
xor
add
add
xchg
btr
jno
mov
jle
arpl
outsl
jmp
add
js
lret
rcl
aaa
cwtl
dec
stos
icebp
and
js
jne
rcr
xchg
loop
jle
stos
data16
pop
mov
xor
fs
mov
scas
inc
sahf
into
push
push
fstpl
fs
mov
out
pop
scas
jg
pop
arpl
mov
mov
fnstenv
mov
dec
xchg
js
push
jno
and
sbb
mov
mov
sbb
out
sub
in
push
aad
aaa
jne
loope
or
data16
sbb
dec
inc
cmpsl
aam
decl
jmp
adc
mov
jo
xabort
cmp
sbb
add
cli
ljmp
nop
add
inc
clc
aaa
leave
push
out
push
out
pop
aaa
mov
lahf
cmp
xor
cmp
in
pop
ljmp
gs
scas
shrb
mov
scas
insl
jne
cmpsb
pusha
cmc
mov
call
mov
int3
adc
add
ja
rorl
fldl
pushf
movsb
adc
hlt
mov
imul
outsb
inc
cmp
aas
int
inc
inc
scas
push
ret
inc
mov
test
mov
pushf
adcb
mov
jnp
movsl
sub
sti
cmp
aaa
cmp
sahf
pop
loope
or
and
sbb
popa
notl
jbe
inc
divb
addr16
fmulp
mov
insb
scas
or
sbb
rol
or
pop
test
pop
daa
scas
dec
xor
or
sbb
add
in
lods
cld
mov
push
out
jo
and
sbbl
push
pushf
rcl
and
gs
mov
dec
and
cmp
cmp
jecxz
cmp
ret
lock
rcr
repnz
mov
mov
pop
mov
call
into
xor
xchg
fcmovbe
lds
sub
loopne
mov
nop
sub
iret
jnp
subb
mov
dec
lock
adc
adc
inc
add
ret
out
mov
sbb
les
icebp
mov
pop
push
sub
call
sar
and
xchg
nop
stc
ljmp
scas
xor
shlb
sarl
inc
clc
pop
sbb
shl
enter
cmp
cmpsb
xlat
cltd
mov
adc
out
insl
dec
pop
aad
xor
pslld
mov
pop
push
rolb
xor
stos
dec
sub
cmpsb
mov
inc
pop
mov
in
or
add
xchg
xchg
or
push
cmpsl
push
adc
cld
andb
push
xor
sub
in
xchg
pop
cmpsl
and
cli
mov
cmp
cmp
int
pusha
xchg
sbb
insb
addb
cmpsl
cmp
push
jo
or
mov
in
pop
fimull
mov
or
out
scas
sti
andb
adc
not
rolb
repz
jl
sbb
fs
dec
ja
icebp
adc
and
mov
mov
mov
je
outsb
add
jno
dec
fcmovnbe
mov
adc
jbe
fidivrs
hlt
in
push
mov
pop
mov
mov
sbb
or
cmp
fldl
out
cmp
cmp
testl
call
jecxz
pop
xchg
pop
sub
jne
dec
leave
xchg
loopne
addl
and
xchg
jnp
repnz
sbb
es
add
and
dec
mov
or
imul
cmpsl
test
fistps
cmp
pop
addr16
fnstsw
push
push
dec
fcmovbe
cmp
lock
add
fistpl
push
scas
xchg
sub
imul
lods
jnp
ret
out
mov
jmp
lret
in
fldt
jns
frstor
push
je
dec
repz
adc
out
sub
cld
ja
jecxz
adc
ret
js
sbb
popf
xchg
iret
lods
ret
and
jae
pop
push
push
imul
nop
loopne
inc
lahf
sbb
mov
mov
adc
fsubrs
cmp
das
jns
inc
jle
mov
inc
jbe
mov
test
mov
xchg
hlt
lret
rorb
sub
gs
ficoms
fisubl
ja
ja
jecxz
pop
sub
int3
cwtl
cwtl
mov
hlt
inc
lods
xlat
jmp
adc
lock
xchg
cltd
xor
add
stos
aad
fistpll
adc
test
and
cmp
jb
stos
jnp
test
loope
push
sarl
pop
insb
cmp
dec
pop
mov
jo
data16
add
push
out
push
fdivrl
adc
jnp
in
xchg
dec
add
adc
fildl
cld
xor
push
dec
pop
jno
mov
nop
and
mov
test
fcomi
push
mov
cmpsb
cmp
test
push
inc
inc
nop
dec
dec
push
xchg
loope
sbbb
jno
jle
rcrb
dec
pop
stos
pop
inc
inc
cmc
xor
or
dec
incl
or
inc
adc
lea
inc
enter
mov
inc
mov
stc
mov
test
jl
daa
int3
cli
jecxz
inc
leave
and
pusha
aam
or
je
sarb
mov
int
mov
adc
lcall
inc
xor
pushl
pop
or
xchg
dec
pop
scas
popf
jno
xor
daa
mov
xchg
jo
dec
push
pop
popf
out
xchg
je
punpckldq
pop
fwait
in
pop
xor
pop
out
xor
add
and
das
aad
mov
nop
adc
fisubrs
xor
mov
xchg
iret
push
cmpsl
pop
jns
add
jnp
push
cmpsl
leave
and
cmp
push
pop
adc
ds
lcall
cmovg
push
in
jb
or
cmp
vphaddubq
imul
push
outsb
xlat
adc
mov
ja
test
dec
nop
in
test
insl
xor
fdivrl
je
cmp
into
in
and
cld
test
lret
cmpb
fdivr
jecxz
sub
mov
add
or
loopne
jl
cmp
mov
mov
popl
xchg
add
stos
push
push
fs
lcall
and
inc
fildl
mov
push
popa
in
xchg
enter
mov
push
adc
fwait
mov
nop
dec
dec
add
xor
sarb
and
mov
ja
mov
jb
or
test
pop
dec
scas
mov
mov
xchg
cmp
subl
pop
jge
xchg
insl
vshufps
sti
mov
sbb
xchg
xchg
cli
jl
add
mov
inc
cmp
cmpsb
je
std
clc
test
add
jne
inc
or
outsl
or
mov
outsb
gs
jb
adc
movsl
andl
test
xor
mov
cmc
cmpsb
test
xor
mov
push
lcall
inc
bound
pop
push
icebp
repz
and
jns
or
fsubr
mov
clc
rolb
add
and
sbb
adc
stc
pop
adc
pop
nop
sub
call
xchg
sti
imul
mov
lea
add
and
daa
pop
out
dec
pusha
jg
cmp
cltd
and
dec
and
cltd
sub
xor
pop
add
fcomip
fs
aas
sbb
cmpsl
xor
shrl
dec
loopne
ja
ljmp
inc
xor
fwait
cli
xchg
add
loop
pop
and
test
jp
xchg
ss
test
jne
fmulp
mov
clc
inc
insb
fnstcw
pop
sarl
inc
imul
push
mov
loope
mov
jbe
xchg
or
daa
jecxz
adc
and
cs
jno
sub
fs
outsl
mov
or
mov
dec
test
sbb
add
wrmsr
int
les
push
mov
scas
add
lret
jb
sub
repnz
add
cli
mov
arpl
loope
mov
sbb
les
sub
add
inc
adc
subb
lods
loopne
mov
lock
outsb
pop
adc
jb
xchg
jg
lea
loop
xchg
dec
xchg
out
cmc
outsb
jp
pop
stc
jge
or
add
inc
push
cmp
decb
mov
lods
push
scas
sub
sbb
sbbb
outsl
push
and
fcmovnu
out
xor
cwtl
ud0
ja
cs
push
push
arpl
pop
jp
or
push
xor
or
fdivs
xchg
sbb
mov
dec
nop
pop
xchg
mov
cmp
xchg
int3
insb
insl
mov
mov
push
aad
push
out
push
add
jae
pop
sbb
div
fs
enter
lods
not
adc
in
xlat
jl
into
pop
push
or
lret
jg
adc
pop
clc
test
andl
mov
and
fs
clc
jecxz
flds
sub
popf
lock
iret
imulb
mov
inc
insb
mov
loopne
std
subl
fs
incb
mov
cmpl
xor
push
jno
dec
fcmovne
mov
mov
push
fidivl
subb
dec
loop
pop
adc
sbb
sbb
cld
mov
insb
sti
les
and
mov
cltd
or
jmp
push
int
and
sbb
repnz
push
subb
jl
adc
mov
pop
pop
lret
jmp
sub
sbb
inc
cmp
mov
mov
mov
jbe
imul
daa
data16
lret
sbb
mov
or
adc
inc
loope
das
jb
push
cld
push
ja
pop
clc
int3
add
das
jle
in
into
cmp
cmpsl
adc
mov
movsb
jo
popf
or
xlat
and
lds
xchg
xchg
push
dec
or
mov
adc
popa
sbb
bound
jmp
cwtl
stos
sahf
inc
lret
mov
sbb
test
mov
in
or
mov
jecxz
out
std
push
add
inc
sub
dec
cmp
fldl
mov
je
mov
cs
jo
and
or
js
jo
jo
sarb
add
cmp
pop
cwtl
add
or
mov
mov
insl
cmpsb
pop
adc
lock
fists
std
outsb
scas
insb
insb
adc
cmp
fwait
xchg
mov
mov
lret
mov
adc
cs
xor
push
or
rorl
jns
push
jmp
adc
scas
pop
aam
ret
imul
test
mov
in
mov
push
sbb
shlb
shlb
ljmp
insb
hlt
scas
cmpb
push
jo
sub
dec
outsl
aas
add
pop
call
loopne
rcll
clc
push
pop
or
add
dec
imul
sbb
es
mov
fnstsw
adc
push
push
mov
add
rcr
aad
xor
cli
and
shrb
xchg
sbb
fs
xchg
add
ds
aad
lcall
dec
adc
push
dec
das
andb
pop
and
pop
pop
mov
lahf
mov
cltd
dec
iret
test
sub
adc
dec
pop
inc
push
lods
jae
mov
insb
inc
jnp
sbb
or
push
add
stos
mov
or
mov
out
imul
cli
inc
adc
sbb
sub
jge
flds
xchg
mov
mov
pop
xchg
xchg
fcoms
lea
fs
cli
cld
push
xchg
in
in
jmp
pop
movsb
pop
ret
cmpl
lods
nop
cltd
mov
lds
lret
adc
jns
cli
shlb
cmp
mov
aaa
cs
add
xchg
fdivrp
cmpsb
add
shll
mov
stos
int3
adc
pop
loopne
push
aad
insb
inc
mov
jnp
sub
push
sub
and
mov
pop
insb
xlat
xor
jnp
dec
push
or
test
test
ss
mov
xor
xlat
push
and
gs
lcall
xchg
lods
mov
loope
xor
inc
mov
mov
push
aam
and
cmp
add
xlat
imul
in
mov
aas
cs
pusha
xchg
call
pop
jle
sub
fwait
test
scas
jle
sbb
out
iret
cwtl
outsb
adc
dec
stos
add
cmp
push
adc
cmp
std
dec
mov
aaa
fadd
into
mov
loop
sub
mov
mov
xor
inc
lahf
lods
dec
pusha
ret
cmc
aaa
push
mov
xlat
data16
ret
pop
movsb
int
lea
lds
xchg
gs
sub
fs
pop
sub
fists
mov
fldenv
sbb
cmpsb
lds
arpl
fs
xor
jns
or
rorl
ds
push
in
inc
insb
sbb
mov
cmp
adc
inc
rclb
popa
mov
inc
push
adc
xchg
aas
gs
lock
movsl
fdivs
in
cmp
ljmp
or
adc
pusha
aam
es
cmp
test
ljmp
xor
lods
inc
jo
add
xor
push
xor
adc
ss
mov
add
add
sub
out
sbb
mov
dec
pop
aas
adc
popf
cmp
lock
repnz
movsl
fidivl
dec
mov
mov
inc
or
inc
mov
mov
jle
pop
xchg
bound
jae
jl
xlat
gs
add
call
and
test
andl
mov
cmp
push
loope
aad
pushf
and
and
mov
loopne
add
sbb
and
lods
mov
fdivr
mov
js
mov
mov
in
adc
sub
jbe
jns
pop
pushf
push
test
pop
dec
in
loopne
mov
push
int3
and
jbe
add
mov
es
add
push
jg
test
xchg
in
loopne
push
loopne
pop
gs
mov
fistpll
mov
adc
or
mov
cltd
stc
mov
fstl
mov
dec
jge
pop
loopne
xor
inc
aam
or
fsubs
mov
cmp
xchg
scas
ja
xchg
out
outsb
xchg
cmp
dec
cmpsl
adc
sti
aaa
pop
adc
pop
dec
sbb
mov
mov
addb
and
pop
cmp
cmc
jnp
dec
add
je
xor
pop
std
sbb
dec
cltd
aam
push
pop
sbb
int
loop
pop
movsl
cs
clc
and
cmp
sbb
adc
add
or
lcall
inc
jbe
inc
pushf
lods
dec
xor
xlat
lods
cmp
xchg
pop
xchg
push
mov
popf
or
dec
in
aaa
cli
and
mov
sub
pop
mov
ljmp
sbb
sti
xchg
xlat
into
arpl
mov
divl
cld
mov
sbb
test
pop
pop
adc
push
movsl
gs
les
add
repnz
iret
test
in
test
in
xchg
imul
scas
popf
cli
push
push
add
test
jns
or
mov
mov
inc
adcl
adc
scas
push
lret
push
push
test
imul
fisubrs
xor
xchg
sti
jo
add
or
pop
in
data16
mov
adc
inc
jns
xor
jg
sub
xlat
cmp
mov
shlb
orl
mov
out
icebp
lret
imul
mov
int
mov
jp
push
cmp
xchg
push
in
jns
ja
lret
push
sbb
pushf
rorl
inc
cmc
xchg
daa
in
aaa
lret
xor
sub
lret
imul
pop
push
sub
xchg
out
cmpsb
shll
pusha
lea
xor
loop
sahf
stc
popf
cmp
dec
add
js
lcall
cmp
enter
or
and
fbstp
stos
rol
fwait
xchg
bound
xor
add
in
pop
andl
loop
rcl
mov
stos
les
je
cmpl
scas
sub
pop
or
es
sub
xor
fsubp
sbb
sarl
cmpsl
pop
mov
or
gs
inc
xchg
xorb
jle
sub
ljmp
or
sub
imul
test
add
cmp
sbb
cmpsb
mov
inc
pop
icebp
lods
sbb
inc
pop
popa
sbb
push
loope
xchg
pop
mov
cmp
jb
jl
xchg
inc
mov
mov
inc
and
jb
pop
sbb
mov
cli
ss
js
into
inc
push
out
fiaddl
mov
repz
jno
push
jl
xchg
inc
in
adc
int3
fdivr
fisubl
arpl
in
fdivl
lret
popa
shrb
xor
xchg
popf
jno
inc
and
or
xorl
lds
in
je
js
mov
or
or
js
adc
insb
ss
or
push
mov
mov
iret
add
add
jne
push
jle
dec
sbb
pushf
lret
inc
mov
or
cltd
jle
push
fcomip
repz
and
enter
sub
aas
je
test
arpl
movsb
pop
cmp
xor
adc
das
and
jge
ljmp
in
enter
adc
mov
cmpsl
xchg
outsl
sub
inc
nop
sub
stos
clc
jns
inc
pushf
arpl
in
mov
jno
xor
xchg
std
decb
push
inc
pushw
jne
push
inc
push
xchg
and
fmuls
pop
test
mov
into
data16
ficompl
subl
out
xor
daa
xchg
sarb
push
inc
add
push
add
cmp
sti
bound
xchg
sbb
mov
stc
data16
mov
xchg
or
loope
or
int
ss
movsl
fcoms
add
fwait
sbbb
mov
fidivl
stc
scas
adc
sub
insl
fimuls
dec
ret
loope
negl
mov
fistpl
mov
or
daa
in
loopne
xor
mov
cmc
shll
fisttpl
imul
xor
mov
sarb
insl
inc
aam
jns
adc
rorb
in
inc
push
push
push
icebp
add
loopne
jae
cmp
test
xchg
xchg
stos
dec
push
hlt
lret
push
sbb
gs
and
cld
add
and
push
cmp
sbb
and
sti
lds
stos
clc
and
mov
jb
push
lret
add
or
sar
xchg
pop
sub
pop
xchg
pop
sbb
mulb
lret
cmp
clc
imul
popa
neg
jae
jg
call
in
cmpsl
mov
jne
xchg
shl
lock
xchg
test
test
arpl
push
and
pop
loop
cmpsl
loope
test
mov
cltd
jg
jmp
cli
sbb
xor
lock
push
jl
fadd
cmp
in
mov
popa
ret
sahf
cmp
and
lods
inc
adc
lock
mov
sbbb
in
fildl
shll
fidivrs
xchg
jmp
dec
xor
aaa
sbb
sub
jmp
mov
and
mov
jle
mov
jge
pop
jo
push
adc
popf
jae
iret
dec
jb
adc
xchg
cwtl
test
sbb
imul
add
push
lcall
das
push
xor
mov
push
push
sbb
mov
add
jno
mov
je
inc
les
fsub
loop
xor
fadd
cli
lcall
mov
push
inc
jle
les
mov
cmp
out
lds
add
les
lret
and
jle
pop
popf
fistpll
stos
pop
jbe
lret
cmpsl
fidivrl
mov
popa
stc
call
cmp
pushf
lahf
mov
lds
movsl
hlt
out
sahf
push
push
stc
out
ficoml
gs
stc
out
mov
loop
inc
xchg
mov
add
mov
mov
arpl
push
cmpsb
cld
out
iret
movsb
xchg
ret
pop
push
or
addl
dec
mov
ss
mov
das
jae
pusha
imul
inc
cmpsl
xchg
mov
push
arpl
mov
cmp
dec
pop
movsb
xchg
sub
aad
jmp
mov
push
adc
repz
add
add
lock
movsb
out
cmp
fbld
dec
aas
testb
push
icebp
pusha
mov
mov
lods
shl
add
in
es
sub
pop
jge
jno
shll
push
sub
repnz
in
popf
iret
adcl
or
mov
or
pop
inc
sti
leave
adc
adc
aad
sbb
aad
xchg
cmp
and
sub
mov
frstpm(287
xchg
pop
out
nop
aad
xchg
popw
loop
cmp
adc
pop
loope
dec
sahf
movsl
popf
inc
mov
mov
int
mov
push
xchg
fnstenv
push
cltd
adc
lcall
sbb
leave
outsl
nop
imul
or
mov
cwtl
nop
jns
or
xor
out
cmc
mov
aam
in
push
push
subb
ljmp
adc
icebp
sbb
lods
mov
pop
daa
sub
loop
sbbb
jl
out
cld
and
jb
and
divb
adc
xchg
insl
jl
popa
jbe
in
test
inc
ljmp
out
fcompl
sub
sub
loope
dec
fldl2t
mov
dec
mov
hlt
mov
add
enter
jecxz
fstp
mov
or
push
xchg
mov
addr16
es
mov
int3
mov
mov
dec
push
icebp
sbb
and
sub
test
pop
or
std
pop
cs
movsl
add
and
je
enter
inc
and
cs
dec
xchg
lahf
sahf
test
jle
sahf
xchg
lret
xor
mov
or
mov
or
pop
pop
adc
dec
cmp
leave
ljmp
int
cwtl
xlat
push
fstps
pop
mov
mov
cmpsb
sub
mov
push
dec
mov
sub
xor
adc
ror
push
outsb
and
jg
adc
push
jmp
mov
adc
lret
sbb
mov
sbb
movsb
lahf
or
cmp
mov
mov
mov
in
frstor
outsl
mov
clc
mov
int3
cmpsl
es
ret
xchg
lods
sbb
mov
fs
jbe
mov
sub
clc
jo
scas
repnz
xchg
lcall
lds
xchg
dec
cmp
adc
push
adc
and
mov
cmp
xchg
xchg
gs
or
pushf
pop
clc
ds
jns
adc
out
nop
cmp
das
pop
add
and
clc
pop
out
pushf
incl
int3
jge
pop
int3
sbb
push
xorl
repz
cs
xchg
dec
dec
das
and
hlt
addr16
xchg
popa
cmp
cld
push
push
lret
iret
andl
and
sub
mov
push
cmp
sub
scas
mov
or
cmpsb
sar
and
and
jecxz
std
fcompl
test
and
pop
and
or
pop
sbb
dec
lock
or
cmp
test
dec
sarb
test
in
fiadds
scas
cmp
ss
out
fbld
sub
lea
sbb
push
shrw
cs
and
pop
divb
jb
add
add
push
fcoml
pop
out
push
mov
int
int
and
cmpb
jne
or
in
cmp
ja
dec
adc
imul
std
pop
movb
sub
cs
outsb
pushf
pop
push
jnp
xor
sub
jle
lcall
call
jg
test
sub
out
mov
xchg
lds
push
sarb
push
andb
inc
pop
mov
xchg
push
ljmp
inc
sbb
lods
outsb
xchg
sbbb
les
or
sub
and
in
dec
xchg
repnz
mov
mov
or
xchg
inc
xlat
sbb
stc
loopne
test
stos
pop
test
lock
mov
ret
imul
scas
xchg
xor
sub
inc
addb
and
sbb
pop
shr
jne
out
or
cmp
cltd
loope
jno
push
sub
cld
sti
xor
ror
sub
xchg
es
sub
insl
loop
push
cwtl
sub
push
xchg
xchg
test
nop
data16
pop
fstl
dec
lock
mov
jmp
int
test
mov
sub
mov
cmpsb
jle
xchg
pop
and
in
push
fisttpll
out
xlat
ret
xchg
shl
jns
mov
cli
je
in
xchg
popf
imul
xchg
jle
inc
movsl
mov
fstps
xlat
decl
ss
sbb
or
lods
dec
xor
inc
jl
fimuls
incb
outsb
movsb
roll
xor
xchg
mov
sub
pop
sbb
mov
adc
loop
mov
push
mov
cli
scas
mov
dec
mov
outsl
das
ds
add
ret
ja
pop
iret
push
stc
jecxz
mov
mov
gs
dec
dec
push
jns
jo
push
imul
mov
nop
cwtl
sbb
xchg
pop
incl
mov
adc
dec
add
int3
jb
and
push
scas
orl
fstps
dec
and
lret
pop
jbe
cmp
int3
cmp
jle
add
cld
xchg
sti
mov
xchg
fdivrs
popa
sub
pop
push
push
add
cmp
push
push
push
xchg
nop
mov
add
xchg
popf
push
sbb
int
lcall
scas
rcr
mov
sahf
or
push
mov
mov
sub
or
xor
cmpsb
or
xor
daa
in
cli
mov
loope
cs
icebp
mov
in
int3
loopne
lahf
cmpsl
dec
or
divl
mov
int
imul
inc
sbb
lgs
les
popf
shll
dec
jae
ret
xchg
rorl
popa
xor
stos
sbb
in
test
emms
pop
adc
push
xchg
and
ja
push
mov
data16
push
jg
into
faddl
fldt
adc
push
xor
testb
dec
and
add
int
sar
out
pop
cmp
jae
inc
adc
dec
gs
adc
mov
test
js
mov
mov
fstp
loop
jno
cmp
les
adc
icebp
mov
mov
or
pop
mov
push
test
push
les
lock
std
pop
xor
xlat
add
mov
mov
popa
pop
mov
orb
jl
gs
xor
pop
dec
cmp
adc
test
inc
push
bound
insl
mov
mov
mov
jmp
pushl
pop
lds
jo
sub
adc
inc
cmpsb
lret
inc
leave
and
jle
or
mov
and
cmp
les
je
mov
mov
mov
fistl
mov
pop
stos
pop
adc
mov
xor
mov
lret
xchg
stos
pop
lret
pop
shrl
add
out
pop
aaa
dec
iret
frstor
inc
scas
hlt
xchg
mov
adc
fidivrs
push
xor
mov
outsl
mov
mov
out
subl
cmc
fadds
pop
adc
jg
adc
ret
jl
mov
or
scas
adc
dec
ficoms
in
mov
xchg
ret
jo
test
std
add
aad
adcb
lods
sub
adc
sub
fsubrs
push
push
shl
cmp
imul
mov
sbb
push
imul
sub
xchg
popa
shl
push
cwtl
icebp
gs
gs
mov
leave
in
mov
popf
cmpsl
push
aas
xchg
mov
jge
dec
adc
xor
xchg
jg
cs
pop
mov
cmp
xor
add
xchg
sti
cmp
loope
pop
mov
pop
inc
fcomps
arpl
mov
and
ljmp
xor
lock
xor
sub
cli
fwait
stos
xchg
idiv
pop
in
push
jb
jecxz
ljmp
adc
push
int
mov
mov
js
vmaskmovdqu
loope
idivl
jecxz
ss
xchg
sti
ret
test
adc
out
pop
mov
mov
xchg
insb
repz
cmp
gs
push
outsl
test
pop
shll
jl
jge
lea
sarl
movsl
gs
push
add
iret
pushf
mov
dec
add
dec
and
lcall
movsb
mov
les
push
andl
out
add
sbb
mov
ss
fsubl
mov
jb
or
cmp
mov
dec
sbb
loop
dec
in
clc
mov
pop
inc
fs
and
dec
int
daa
andl
pusha
sbb
jge
sub
popa
js
jns
jo
lcall
imul
mov
scas
xchg
in
adc
movsl
push
lods
jp
movsl
lret
int
lods
aaa
xchg
arpl
orl
lret
and
psrad
adc
cmp
pop
fcompp
fildll
sbb
int3
std
jbe
sub
push
ja
ds
or
sbb
in
or
cmpsl
xchg
into
dec
es
fwait
enter
lods
jp
mov
push
push
push
popa
or
mov
testb
push
mov
push
add
leave
les
or
fucomip
out
insl
int
movsl
cmpsb
lods
insb
adc
cs
add
mov
rcll
xchg
push
jge
sbb
mov
inc
cmp
pop
ja
inc
mov
fistps
jb
insb
inc
pop
jp
jno
ficomps
or
leave
repz
fmuls
dec
pop
dec
add
pushaw
mov
adc
ret
mov
xchg
sub
add
lcall
inc
sub
and
or
xchg
fwait
cmp
pop
xchg
mov
dec
sarb
add
sub
dec
cmp
int3
into
xor
push
inc
jg
dec
inc
adc
dec
and
ret
adc
ret
mov
cmp
dec
adc
ljmp
pop
in
cmp
xchg
repnz
js
out
xor
jmp
shlb
movsb
popf
xor
rolb
pop
clc
imul
xchg
loopne
jge
aad
xchg
cs
dec
pop
aam
sahf
fwait
jae
or
xchg
mov
neg
inc
fucomip
ljmp
pop
push
adc
jmp
or
repnz
mov
mov
fcompl
outsl
jecxz
cs
fldl
mov
fldt
dec
loopne
add
pop
inc
cmc
push
sub
test
cmc
loope
outsl
xchg
push
push
mov
je
in
pop
adc
push
add
or
das
xchg
aam
mov
ret
inc
jge
out
xchg
ja
lock
rorl
fstps
fcompl
cmp
in
cli
out
dec
fldcw
push
subb
jb
cmc
lods
add
mov
fadd
adcb
mov
in
into
data16
push
sbb
ret
cmp
sub
imul
bound
rclb
out
push
sti
mov
in
add
or
insl
pop
ja
sub
shll
xor
jmp
push
jg
sub
inc
and
adc
cli
push
inc
leave
gs
add
das
fcmovu
pop
inc
fdivrs
jp
js
jb
jge
cmp
adc
sti
adc
ret
packsswb
das
jp
aad
stos
cwtl
mov
xor
jmp
inc
mov
mov
imul
push
ret
out
lret
mov
jge
jecxz
lock
jecxz
movsb
cltd
call
mov
pushf
sti
mov
das
lds
sahf
xchg
sbb
not
sbb
push
jp
adc
mov
jle
fldt
jb
into
filds
lret
lds
cmp
mov
sbb
sbbb
dec
clc
jecxz
push
or
jecxz
in
sbbl
addb
xchg
cltd
or
fmull
data16
or
xor
out
bound
fidivl
lret
mov
es
icebp
or
dec
adc
int
inc
mov
outsb
xor
or
ss
int3
pushf
lods
inc
cmp
pop
or
inc
push
fimull
test
cmp
push
or
jbe
or
pop
call
jae
loop
das
not
add
xlat
testb
add
mov
stos
and
xchg
bound
cld
mov
adc
adc
lock
ja
lods
sbb
adc
cmpxchg
shrb
andb
fs
movsb
popf
sbb
shrl
loope
mov
loop
lret
faddl
dec
push
cwtl
sub
stc
ljmp
lds
into
mov
stos
sub
dec
inc
inc
xchg
push
pop
test
pop
in
mov
ret
inc
loopne
adc
mov
cmp
push
and
out
jnp
loope
das
icebp
push
sub
shl
int
sbb
mov
scas
mov
and
das
lock
stos
shll
test
aam
jp
je
loope
pop
lods
or
sub
clc
jp
inc
sahf
stos
sbb
lahf
insl
sub
hlt
decl
cmp
jb
xlat
stc
ljmp
cmp
dec
outsl
bound
addl
mov
aam
xor
cltd
push
outsb
popf
lret
addr16
leave
aaa
scas
js
insl
sbb
out
and
push
jge
xchg
or
iret
iret
sub
mov
mov
mulb
loopne
dec
clc
cltd
xchg
push
call
lahf
insb
lods
jns
or
mov
inc
pop
pop
fcompl
clc
cmpsb
mov
shr
mov
or
ja
js
or
arpl
pop
mov
add
test
sbb
push
bound
incb
push
cmp
aaa
fcompl
aam
pop
inc
push
push
mov
fisubrl
jl
pop
dec
xchg
pop
sbb
mov
xor
add
xchg
push
les
call
push
idivl
mov
jnp
data16
jecxz
push
fs
jle
adc
in
mov
rorb
imul
xorl
mov
cmp
lea
adc
mov
pop
mov
pop
jb
adc
jge
into
movsl
pushf
mov
pop
jecxz
mov
stos
mov
add
test
mov
fnstcw
out
test
daa
jecxz
sbb
fcmovnu
jg
jle
hlt
idivb
pop
mov
ja
push
std
xchg
in
mov
inc
and
mov
push
out
mov
iret
ret
scas
add
sbb
mov
insb
push
fimull
mov
mov
addr16
int
in
inc
adc
xor
cmpsb
dec
cmp
pusha
pop
dec
xchg
push
jmp
xchg
pop
jl
mov
add
fbld
xor
and
stc
push
sub
cmp
adc
inc
push
add
ja
jae
ret
mov
leave
ret
and
call
jp
gs
xchg
and
mov
xchg
cmc
cmp
adc
mov
mov
sub
and
repnz
xchg
je
pop
inc
or
popa
push
push
cmp
sbb
mov
and
push
push
ffreep
cmp
in
shll
scas
mov
sbb
clc
ffreep
jno
xchg
mov
in
add
jb
pop
sarb
push
lock
push
add
in
test
jnp
cmpsb
je
mov
inc
add
or
out
lret
test
pushf
sbb
loop
dec
repnz
pop
mov
dec
fldcw
sbb
scas
push
divl
stc
and
or
or
lock
xor
fldt
pop
xor
and
mov
jo
lahf
addr16
rorb
sub
cmpsb
pop
adc
mov
or
dec
pop
mov
das
adc
mov
stos
movsb
sub
pop
aas
mov
push
xchg
out
push
test
add
and
jp
sti
inc
and
push
and
adc
fidivs
jg
shll
xor
sbb
mov
xor
mov
sbb
mov
lds
pusha
sub
pop
or
pop
jb
pop
sbb
jne
les
jecxz
dec
movsb
ret
inc
mov
inc
mov
pusha
scas
sbb
add
add
xor
ja
cmp
sbb
inc
aas
in
adc
lret
into
mov
push
inc
mov
mov
imul
pop
mov
cmpsb
pop
icebp
pop
popf
in
cwtl
push
movsb
shlb
cmp
shlb
pusha
add
mov
aas
sbb
rcr
rorb
jne
shrb
rolb
popf
mov
mov
xchg
out
lret
or
jns
daa
mov
daa
inc
arpl
jmp
xchg
push
jo
in
xor
lds
lcall
or
sub
inc
xchg
pop
jnp
mov
fsubl
lahf
pop
push
loop
ja
mov
jns
mov
jmp
arpl
sbb
ljmp
push
arpl
cs
inc
mov
xchg
aad
fisttpll
rcrw
mov
mov
push
sahf
cmp
mov
push
and
sbb
push
mov
iret
pusha
out
movsb
movsb
add
mov
cmp
sbb
icebp
lret
sub
imul
test
cmp
sbb
jecxz
rcrl
mov
pop
add
cmpsl
push
nop
inc
mov
loopne
dec
ror
push
mov
mov
push
stc
or
cmp
adc
cmpl
data16
dec
incb
dec
shl
in
push
lahf
inc
fsubs
lret
sub
sbb
int3
xor
pop
sbb
fs
pop
or
fwait
pop
test
and
xchg
filds
push
adc
or
dec
push
cmc
and
add
aam
dec
xchg
int3
dec
lahf
insl
xlat
mov
out
in
pusha
mov
aad
mov
js
ljmp
xchg
pop
add
inc
inc
sub
xchg
mov
and
addl
sbb
push
ds
fcomps
fistps
loop
leave
dec
inc
push
sahf
sti
ret
cli
or
inc
sbb
bound
mov
enter
or
loopne
lcall
mov
add
sbb
fstpl
xchg
push
lcall
imul
lock
ret
ret
jle
or
dec
mov
adc
pop
cmpb
mov
out
mov
jg
mov
orb
mov
mov
mov
es
adc
arpl
add
inc
xchg
fisubrs
or
test
ret
mov
stc
jbe
test
mov
fcmovne
inc
test
mov
movsl
lahf
mov
mov
ljmp
push
sti
add
lods
arpl
int3
sbb
addb
mov
into
mov
incb
pop
xchg
icebp
int3
mov
lds
cmp
xchg
jg
repnz
imul
test
sbb
aad
push
pusha
adc
pop
outsl
sub
mov
push
mov
mov
hlt
loope
bound
jns
sahf
sbbl
mov
xor
rcr
rcrl
mov
xchg
dec
push
cld
cmc
xchg
or
addr16
in
sbb
push
aas
lds
and
push
int
scas
or
mov
stos
nop
sarl
xor
pop
adc
shlb
cmp
mov
out
test
movb
fcoms
pop
or
pusha
mov
cmp
push
pushf
and
aas
adc
insl
jge
jl
call
inc
jbe
call
dec
lcall
aad
push
test
in
mov
adc
mov
fwait
in
inc
pop
loope
pop
jl
lahf
dec
pop
in
fld
add
and
mov
popf
lret
fldt
xchg
sbb
or
shl
jnp
rcr
fdivrp
sbb
push
daa
scas
fbstp
out
xor
ret
push
jbe
mov
add
push
idivl
dec
in
fimull
xchg
les
xor
rcll
movsl
xor
jb
dec
sub
mov
cmpsb
insb
nop
pop
jmp
mov
daa
inc
ret
pop
mov
js
xchg
sub
inc
jmp
add
push
jae
rcll
cmpsl
cmp
lea
or
mov
lods
adc
leave
add
add
mov
and
hlt
mov
sub
popa
enter
xor
push
incb
mov
push
lds
inc
les
shrl
lahf
test
data16
mov
jp
xor
cs
std
push
xchg
fcmovb
test
mov
pushf
inc
push
pushf
imul
xor
lock
cwtl
jmp
push
sub
out
int3
das
add
jnp
xchg
mov
xchg
adc
fnstcw
mov
push
pop
sub
push
dec
adc
jno
int3
leave
cltd
dec
push
pop
rcll
ljmp
pop
testb
or
pop
jno
sarb
cs
jbe
out
and
adc
movsl
insl
subb
and
inc
loop
xchg
and
stos
aam
jnp
andb
jbe
lahf
stos
scas
pop
inc
cmc
cmp
in
shll
movsl
push
jnp
add
xchg
sarl
sbbb
mov
dec
mov
mov
out
fistps
jge
push
pushf
testb
pusha
jb
mov
lods
cld
mov
or
inc
jb
mov
inc
sub
cmp
arpl
add
ret
adc
lcall
mov
push
rcrl
pop
ret
mov
and
test
sbb
or
pushf
jne
xchg
fsubl
inc
pop
mov
sub
imul
xchg
leave
xchg
test
insl
call
cs
mov
lcall
inc
test
or
movsl
and
pop
popa
mov
fwait
lret
in
mov
mov
loop
pop
loope
xchg
int3
dec
mov
jno
fcmovu
fadd
ds
in
cld
push
and
cmc
cwtl
js
jl
mov
cmp
jle
dec
lods
mov
call
mov
or
das
sbb
ret
scas
push
pop
addb
pop
mov
or
pop
jmp
jne
mov
fsts
sbb
repnz
adc
mov
in
out
sub
adcb
mov
inc
mov
bnd
in
outsl
mov
dec
xlat
aad
sti
test
push
xor
jp
aas
jmp
lods
cmpsl
sub
mov
imul
arpl
xchg
shll
subw
ret
mov
pop
movb
dec
leave
lahf
sub
in
mov
and
inc
aad
stos
sbb
pop
push
dec
cmp
rclb
pop
mov
lahf
mov
pop
ret
mov
inc
pusha
xchg
inc
fldt
sbb
sub
mov
leave
jge
or
add
jb
adc
jle
push
fld
xchg
sub
adc
and
das
push
inc
lret
pop
pop
int
lods
cmc
mov
jns
into
fldl
jmp
aam
xchg
int
in
mov
or
fists
scas
das
adc
lds
push
cmp
in
mov
dec
sub
testl
popa
jp
xchg
pushf
pop
ret
sti
arpl
xchg
leave
loopne
pusha
add
js
je
popa
xor
pop
xor
or
enter
daa
lcall
jo
int3
mov
stos
sub
mov
je
cmp
push
lods
jo
pushf
xor
aam
aam
push
lods
pop
xchg
xchg
or
movsl
loope
test
push
xor
jbe
lods
mov
adc
mov
lahf
jge
addl
dec
mov
jge
dec
adc
adc
sub
adc
adc
ja
mov
enter
data16
dec
push
outsb
mov
rcl
cmp
shlb
jns
and
inc
out
adc
fst
pop
addr16
mov
mov
dec
or
xchg
lcall
imul
es
xchg
movsb
push
dec
test
popa
mov
test
mov
repnz
and
xor
movsl
movsb
sbb
ret
xchg
jo
shrb
test
cmp
je
xor
xchg
daa
dec
xchg
pop
arpl
cmp
xchg
loope
loopne
loopne
std
cmp
sub
in
aam
inc
out
bound
mov
movsb
dec
femms
arpl
mov
cmpsl
test
adc
mov
daa
mov
jbe
push
fcoml
mov
xchg
insl
mov
xchg
push
xchg
cwtl
cmc
sub
push
sub
fmuls
nop
mov
pop
xchg
mov
dec
insl
mov
mov
jle
jo
sub
jnp
fsts
icebp
mov
and
adc
imul
sbb
ss
and
cmp
dec
movsb
jo
jge
sbb
sub
mov
xchg
ret
int3
data16
cmp
fldt
mov
in
shll
sbb
lret
xchg
push
ja
sub
and
xchg
dec
adc
bound
cmpsb
sar
cmp
inc
out
jbe
outsl
jo
ljmp
imul
fstps
pop
in
jne
int
mov
jge
push
lods
lods
dec
mov
add
xchg
fiaddl
out
cltd
lcall
push
mov
mov
jnp
sbb
xchg
repnz
orl
mov
loopne
repz
imul
rolb
xchg
cmp
fwait
out
stos
jbe
fucomi
pop
xor
andb
in
xchg
pop
lcall
mov
jne
xor
sbbb
popa
rolb
mov
fdivrs
shlb
mov
cld
mov
fdivrs
cld
das
icebp
shrl
mov
mov
adc
lcall
ret
mov
jecxz
mov
or
fadds
and
mov
imul
mov
mov
icebp
push
sahf
fsub
stos
pop
cmc
das
fwait
scas
jmp
cmp
cltd
sub
mov
cli
sbb
xchg
les
fldl
dec
loope
pop
sub
hlt
mov
mov
push
dec
dec
in
dec
rcrb
pop
sbb
ds
rcrb
sarb
xchg
push
roll
push
xchg
imul
lock
fadd
fimuls
dec
mov
repz
aad
jb
lret
shrb
jmp
lret
cs
add
mov
xchg
xchg
sbb
or
adc
xchg
enter
andb
mov
imul
jg
dec
ja
cmp
push
out
and
ss
xor
cmpsl
or
ljmp
test
cmp
outsb
jbe
repz
jmp
adc
xor
arpl
lds
mov
push
pop
repnz
aas
xor
stos
leave
loop
mov
xchg
add
push
push
pop
call
add
xor
fnstenv
push
sbb
add
cli
xchg
mov
or
cmp
repz
aaa
pop
das
push
adc
xchg
das
out
cmp
inc
mov
inc
fwait
mov
scas
fs
mov
jl
mov
push
sub
pop
out
addr16
insb
ljmp
hlt
mov
push
push
cs
mov
icebp
jmp
cmpsl
sbb
pop
push
shlb
jne
add
adc
adc
cmc
in
adc
in
rolb
jae
and
test
push
sbbb
sub
push
dec
in
bound
rclb
adc
out
subl
aaa
lcall
push
cmpsl
les
push
or
mov
jne
cmp
es
pop
pop
and
stc
adc
cmpsl
jmp
cmc
std
jne
sub
mov
shlb
adc
xor
in
imul
jne
push
cmp
inc
inc
test
inc
iret
aaa
lds
jl
sub
jmp
cmp
mov
sub
into
int
iret
cld
dec
out
push
and
sub
out
es
repnz
stos
pusha
or
mov
les
pop
mov
pop
fisttpll
xchg
sub
push
inc
pop
xchg
or
and
mov
mov
pop
mov
cmp
mov
out
sub
lea
pop
repz
jp
ja
out
dec
push
aam
mov
sub
aam
movsl
or
push
daa
or
aad
jge
movsb
xorb
inc
icebp
mov
add
mov
pop
fiadds
push
repz
xchg
insb
mov
jno
cmp
mov
pop
and
mov
lock
dec
loopne
sub
in
sub
cmp
push
aad
rorl
push
jne
and
mov
pop
in
sub
ds
mov
out
inc
pop
add
rcrb
jae
mov
mov
xlat
pop
mov
and
in
adc
in
scas
mov
xchg
jbe
jecxz
notl
es
popa
xchg
ds
mov
loopne
push
push
inc
in
push
sbb
xchg
sbb
mov
jle
rcl
xor
add
and
inc
xchg
ljmp
add
int3
jle
pop
lret
scas
add
add
jmp
jp
xor
lods
pop
pushf
shrb
mov
in
add
sbbb
add
les
jl
mov
repnz
dec
fyl2x
and
ljmp
push
inc
xchg
add
test
pushf
das
test
jnp
jbe
icebp
rcl
xchg
sar
in
int
aad
addr16
test
and
push
frstor
cmpsb
int
pop
add
dec
cs
aam
fdiv
imul
mov
xlat
rcll
and
out
fisubl
in
xchg
int
out
cmp
call
mov
add
push
fnsave
push
pushf
inc
hlt
sbb
push
mov
inc
fidivrs
jnp
jecxz
test
xchg
fs
pop
pop
sahf
into
lods
adc
negb
mov
pop
ret
test
lahf
out
cmc
mov
push
les
and
cmp
jg
xchg
call
cld
ret
lods
inc
cmc
fildl
fwait
out
jae
rcll
fidivs
loop
jae
imul
pop
cli
jecxz
sbbb
dec
popf
xor
jmp
psraw
and
dec
jl
lock
les
add
dec
ficompl
mov
sbb
movb
pushf
jle
pop
dec
mov
mov
adc
sbb
xchg
mov
sahf
push
js
add
xchg
jne
mov
push
and
je
jp
mov
adc
adc
gs
inc
je
xor
test
fld1
nop
imul
mov
and
cli
fdivrs
shrl
imul
insb
mov
cmp
addr16
mov
cmp
mov
test
imul
inc
ror
pop
sti
nop
fwait
fsubs
inc
mov
outsl
call
shrl
inc
or
pop
daa
in
pop
std
push
jp
mov
pop
add
pop
mov
adc
cmp
ds
sub
pop
mov
cmpsl
sub
jge
insb
and
icebp
or
lods
push
fisubrl
das
push
adc
mov
mov
rcll
in
imul
dec
jle
nop
andb
jb
or
dec
movsb
inc
jecxz
dec
loopne
fldenv
loop
xchg
jp
pop
arpl
addb
int
jge
pop
xchg
jno
cmp
bnd
dec
aas
inc
shr
test
loop
xchg
cwtl
dec
sbb
mov
sbb
in
daa
sar
dec
push
xor
shlb
mov
int3
inc
fldl
imul
cmpsb
jl
lods
shll
inc
rcrb
xchg
pop
clc
movsb
push
sbb
inc
mov
add
push
fsubrl
stos
mov
sub
int
xchg
pop
pop
enter
jnp
or
mov
daa
push
sbb
pushf
or
lods
pop
inc
fwait
jmp
shrl
adc
cmpsb
sbb
xchg
movsb
lds
dec
scas
popa
aam
jl
fbld
addr16
inc
inc
into
repnz
sub
push
add
ja
test
mov
subb
adcl
sbb
adc
xchg
stos
xchg
scas
pop
rcl
cmp
sbb
loope
cmpsb
pop
xor
fsubs
mov
std
test
leave
inc
inc
xchg
mul
push
push
push
rep
pop
mov
mov
sub
fs
xchg
loop
push
jns
jp
xor
fisubs
scas
pop
aam
mov
iret
xor
lods
pushf
jp,pn
inc
test
je
ret
sub
push
pop
push
and
adc
popf
fnstcw
or
repz
mov
aam
iret
and
jg
add
fstpl
jmp
fstpl
or
pop
imul
aas
psubsw
imul
sub
mov
mov
fisubs
aas
push
mov
pop
sub
push
lods
pop
das
shrl
shll
mov
ja
xchg
call
test
aaa
pop
and
inc
xchg
xchg
xchg
iret
fwait
xchg
inc
pop
dec
jle
fcmovne
aad
mov
push
adc
push
xor
repnz
push
repz
dec
sti
cli
push
aaa
aam
out
inc
inc
ljmp
cs
jo
xor
sub
mov
popa
lret
mov
bound
xor
int
sub
fs
lahf
imul
cmpsb
popl
cmpsb
mov
aad
sbb
lea
rorl
pop
shl
jl
cmpb
fbld
in
sahf
es
inc
mov
ret
cmpsl
leave
leave
cltd
and
cmp
fidivl
add
inc
insl
mov
stos
inc
in
out
int
fsubrl
mov
adc
adc
imul
dec
cld
mov
sub
sbb
sbb
sub
pop
inc
out
adc
iret
adc
fnstcw
xchg
insb
mov
aam
enter
cs
add
popa
cmc
and
aaa
dec
adc
cmp
outsl
cltd
mov
xchg
adc
dec
cmp
call
jae
sbb
scas
sbb
push
mov
inc
int3
push
into
add
int
xor
mov
inc
bound
and
inc
xlat
push
dec
pop
cld
stc
jno
aad
adc
cmp
data16
pop
pop
or
and
cmpsb
mov
movsl
mov
fsubrs
xor
popa
lods
out
fldenv
xor
ja
adc
mov
nop
call
mov
sub
adc
outsl
ffreep
push
sbb
cmp
repnz
cmpsl
or
cmovbe
loope
out
pop
sub
sti
pusha
rorl
inc
div
mov
mov
dec
aaa
lods
xor
outsl
pop
fucom
inc
fildl
pusha
icebp
jp
cmp
push
xor
xor
into
xchg
enter
mov
jne
fisttpll
sub
xor
aam
setp
mov
jae
call
cltd
or
cmp
mov
pop
pop
xchg
pop
shrb
pop
lret
cmp
pop
xchg
fimuls
jmp
repz
testl
adc
adc
mov
mov
lds
mov
push
jno
or
jb
js
pop
aas
lock
lods
pop
orb
shrb
sbb
faddp
mov
inc
dec
inc
out
rolb
cmp
jb
jns
xchg
sub
test
sbb
mov
and
cwtl
lock
mov
aam
xor
inc
ret
cwtl
adc
pop
pop
push
call
push
loopne
mov
in
sub
ljmp
jge
jnp
sbb
pop
xor
int3
out
push
icebp
adc
jns
stc
jmp
mov
sbb
test
test
xchg
cmp
imul
test
sub
inc
cmpb
jns
les
pop
push
addr16
rcl
lcall
loope
ds
out
adc
sbb
cli
int
or
jmp
jno
jbe
adc
sub
sbb
xchg
and
pop
mov
mov
pusha
cmpl
lock
bound
popa
ljmp
in
and
sub
mov
jecxz
fwait
ss
mov
cmc
adc
xchg
and
sbb
push
std
xchg
inc
xor
js
push
push
dec
xchg
les
adc
push
loopne
jle
fcos
xor
out
out
mov
pop
les
test
insl
mov
mov
loop
sbb
xor
ljmp
jnp
cmp
mov
out
jmp
cmp
rcll
sub
fdivrl
fnstsw
sbb
adc
mov
or
mul
push
cld
xchg
pusha
inc
and
dec
mov
pop
mov
rolb
mov
popa
dec
inc
gs
out
and
std
loop
test
dec
xor
mov
lret
adc
leave
cmp
test
sahf
into
mov
and
inc
sbb
div
fcoml
mov
rcrb
mov
repz
dec
sbb
rclb
push
and
mov
lock
push
imul
xchg
dec
das
jo
pusha
pop
xchg
add
int3
in
fs
mov
je
aad
lods
inc
ja
add
mov
in
jne
dec
lock
nop
mov
orb
sbb
in
sahf
adc
pushf
andl
mov
lea
je
push
stos
xchg
push
pop
pop
xchg
xchg
sbb
cmp
lock
aas
or
xor
loopne
hlt
stos
cltd
in
jne
mov
lret
in
or
sbb
xchg
idivb
sub
ret
push
sub
imul
out
test
xchg
sub
shrb
out
xchg
sbb
jne
cmpsb
adc
jbe
mov
aaa
int3
lcall
xchg
pop
faddl
and
add
scas
outsb
xchg
imul
push
iret
xchg
andb
pop
lds
js
jp
sbb
push
xchg
inc
lret
jo
mov
push
and
pop
mov
or
mov
sub
negl
sub
stc
pop
jge
dec
mov
jmp
mov
inc
test
xchg
ficoms
outsl
or
mov
sub
scas
push
enter
cmp
ficomps
adc
jl
out
dec
mov
xchg
dec
mov
pop
stc
rcrl
nop
mov
hlt
test
idivb
jle
inc
inc
neg
in
ds
outsl
outsl
out
out
sub
add
out
int
mov
cmp
pop
inc
inc
decl
pop
popa
pop
xor
mov
das
es
cmp
mov
cs
js
das
in
sbb
cmpsl
mov
ret
and
lea
push
jo
loopne
mov
sarl
lret
orb
pop
push
inc
inc
dec
das
sbb
xchg
xor
aad
imul
cmc
sub
add
leave
sbb
js
imulb
repz
rol
enter
and
daa
pop
push
inc
into
mov
add
ja
std
test
mov
insb
jl
mov
addb
xor
test
xor
dec
insl
es
insb
push
push
xlat
out
sbb
or
sahf
daa
out
imul
cwtl
pushf
lea
sub
ljmp
inc
shr
mov
aad
and
push
mov
push
mov
adc
push
pop
pop
repz
or
pop
sub
pop
mov
cmc
subl
stos
pusha
ss
stos
mov
xor
jae
push
inc
xor
fldt
xor
out
repz
lcall
xlat
or
je
rcll
lahf
inc
outsl
xor
shl
mov
sbb
pop
hlt
pop
sahf
jp
gs
mov
push
ljmp
aas
ret
call
and
jne
adc
movsb
push
jbe
cli
repz
and
xchg
lods
cmc
mov
je
popf
xor
fldcw
jne
out
mov
into
imul
push
dec
in
movsl
xor
mov
repnz
cmp
ror
testl
scas
add
aas
jge
cmc
xor
mov
cmpsl
mov
xchg
test
ret
jecxz
out
inc
les
add
sbb
jbe
repz
jns
movsl
push
sub
cltd
xchg
xor
dec
sub
jg
pop
xchg
mov
call
add
call
lret
rorl
push
push
das
js
xchg
cmc
dec
sahf
sbb
les
lret
pop
pop
push
shl
adc
cmp
sub
pushf
inc
xor
and
push
push
pop
xchg
enter
sub
adc
jmp
sub
std
fldl
movsb
mov
jge
or
mov
push
arpl
mov
pop
xchg
cld
inc
sbb
jp
jmp
jge
in
stos
outsb
and
adc
mov
add
icebp
inc
fsubrp
and
xchg
sbb
into
les
dec
jbe
sarb
cli
mov
jae
mov
mov
mov
hlt
xchg
xor
scas
inc
sub
push
mov
movsl
cmpsl
in
dec
loope
les
xor
roll
stos
bnd
adc
call
mov
lds
sbb
sbb
fs
js
pop
mov
insb
push
xchg
inc
pop
inc
aad
orl
js
pop
push
mov
aad
xchg
cltd
xor
pop
ret
rcr
jnp
jno
xchg
imul
lds
inc
addb
frstor
jmp
xorb
mov
mov
test
fs
sbbb
adc
pushf
jl
les
stc
adc
mov
imul
mov
and
loope
movsl
dec
cs
mov
mov
pop
add
outsb
repnz
je
adc
jl
push
into
mov
mov
inc
in
cmp
push
popa
push
xchg
cmp
movsb
fmuls
jecxz
and
and
jbe
and
jp
iret
stc
lods
xchg
cli
or
sti
pop
xor
lcall
mov
adc
dec
in
jno
cmc
aad
xlat
mov
xchg
out
aaa
adc
ret
dec
insb
lea
lcall
inc
fs
cmp
add
xor
pop
xlat
xchg
and
xlat
in
imull
fsqrt
pop
xlat
rcll
xchg
iret
sub
add
xor
jl
jecxz
add
adc
jns
lea
cmp
daa
and
cs
fidivrs
lret
mov
pushf
clc
ret
xor
daa
aaa
rorl
test
pop
xchg
and
sti
mov
adc
mov
punpckhdq
pusha
sub
dec
mov
imull
outsl
or
je
jbe
mov
xor
repz
sbb
cli
xorl
xlat
mov
daa
pop
xchg
cmpsl
cmp
and
ja
jle
in
sbb
out
sub
pop
inc
ljmp
sub
sbb
lahf
or
fs
data16
ljmp
dec
jns
cwtl
inc
cltd
push
cmp
popf
rorb
aad
sbb
pop
lahf
aas
mov
lds
int
popa
or
popa
mov
cmp
or
inc
mov
ljmp
jno
mov
popf
fsincos
into
outsb
test
mov
scas
push
push
adc
push
xor
xchg
adc
test
gs
cmpb
enter
sarl
inc
enter
iret
mov
adcb
ret
mov
in
jno
pop
mov
mov
rorb
dec
shr
daa
inc
jns
cltd
insl
or
out
in
mov
insb
jg
pop
xchg
push
in
loope
jnp
fsubrl
push
xchg
pop
daa
push
clc
sti
push
mov
sub
lcall
pop
nop
test
test
and
lea
mov
mov
push
insl
xchg
ss
adc
mov
iret
dec
adc
lret
lret
cmp
push
cltd
ss
int3
sbb
cmc
xor
jl
or
fidivl
mov
js
jg
adc
push
jl
mov
add
lcall
and
xlat
enter
stos
mov
mov
xchg
int3
mov
cmpsb
jo
in
bound
hlt
cmpsl
stos
xchg
and
mov
stos
cmc
xchg
mov
and
ret
in
pop
mov
in
cmpsb
pop
fsubp
in
fcmovbe
mov
dec
or
enter
lret
sbb
xor
dec
jecxz
cmp
sbb
sbb
jo
push
mov
repz
fstpt
ret
ljmp
pop
xchg
push
test
faddl
int
stos
xchg
cmc
adc
cmp
sahf
inc
adc
cld
sub
sub
add
mov
insb
rcrl
movsb
call
psubq
sub
pop
mov
je
xchg
xchg
ret
mov
fisttpll
adc
popf
out
and
pop
jno
mov
pushf
out
in
rcr
test
cmp
pop
xchg
addr16
std
lahf
stos
push
loope
fcmovnu
rol
enter
pop
sbbl
adc
into
pushf
insb
add
mov
jno
aad
jo
mov
pop
les
sub
inc
push
mov
jmp
jae
aad
add
fistps
adc
add
mov
xor
jne
je
push
pusha
jnp
nop
mov
loop
jecxz
add
outsb
mov
cmp
lret
adc
push
and
and
pop
lea
dec
cmp
add
lods
jge
sbb
in
mov
xor
fiaddl
addr16
aam
xchg
mov
stc
test
outsb
test
std
ss
xor
xchg
inc
lds
pop
call
sub
dec
clc
xor
mov
mov
add
lret
pop
in
push
or
fidivrs
jno
call
pop
movsb
ret
sub
fstpl
jge
and
mov
out
xchg
xchg
or
adc
pop
mov
mov
add
mov
loope
aas
out
push
jno
jae
in
mov
cmp
ret
mov
shrl
inc
dec
inc
sbb
shlb
jl
push
and
xchg
lret
repnz
xchg
mov
frstor
out
pop
mov
mov
fistps
sub
aad
aaa
jp
loopne
jnp
push
sarb
in
mov
fsubrs
fwait
inc
xor
pop
pusha
inc
loope
adc
mov
ret
mov
pop
inc
js
test
inc
dec
iret
xchg
mov
imul
out
scas
jecxz
sub
or
int
cmc
les
dec
cmp
jnp
cmp
dec
stos
xor
xchg
fldt
outsb
or
xchg
xor
jnp
sbbb
mov
or
jnp
jecxz
decl
xchg
cmp
imul
daa
add
pushf
rcrb
imul
rcl
sbb
and
shll
mov
jnp
sbb
push
or
inc
ficompl
shlb
imul
in
or
insb
out
push
cmp
into
mov
repnz
or
mov
lock
or
add
mov
inc
repz
inc
mov
or
and
jo
test
sbb
add
jmp
jae
pop
adc
imul
dec
and
mov
inc
es
mov
cmp
ret
mull
mov
in
push
ja
push
popaw
loope
je
sbb
pop
xor
xor
push
shr
sar
mov
hlt
pop
es
mov
mov
ficoml
lret
cmp
mov
add
add
sbb
pushf
mov
ljmp
test
xchg
adc
rcr
adc
loope
xorl
rcll
test
sub
pop
mov
cmpsl
bound
mov
shrl
jae
int3
repz
fimull
das
adc
mov
add
sub
xorl
cwtl
cmovb
into
aad
xchg
xchg
mov
pop
pop
dec
sub
add
adcl
dec
mov
pop
dec
insb
mov
cld
add
movsb
sub
out
add
int
pushf
imul
sbb
mov
dec
and
clc
mov
lds
xchg
pop
cmpb
daa
sub
jle
push
pusha
sub
inc
fcomps
jb
ljmp
sub
mov
or
lds
and
int
add
add
outsb
cmp
mov
add
je
enter
and
add
cmp
or
enter
daa
sti
pop
mov
stos
outsl
lret
enter
xorb
jg
bound
push
pop
xchg
lods
sbb
sub
aam
jae
arpl
pop
fwait
jns
or
cld
jb
pop
pop
and
mov
sbb
repnz
pop
fcmove
daa
adc
xor
subb
inc
adc
cmc
es
jle
cmpsl
loopne
pushf
or
and
xchg
test
and
push
test
push
dec
testb
add
cmp
in
sub
mov
gs
mov
stos
out
test
inc
or
shlb
xor
repnz
in
xchg
xchg
xor
sbb
xor
ds
ss
lcall
sti
lods
shr
push
xchg
push
jae
outsb
add
lods
sub
sarb
jno
out
mov
push
xchg
xchg
ljmp
out
xchg
call
jp
mov
loop
mov
jecxz
mov
dec
xor
sarb
mov
std
xor
cmp
mov
xchg
xchg
ja
roll
cli
scas
mov
iret
shr
dec
incb
inc
add
testl
mul
pop
or
lret
neg
sbb
xor
ljmp
int
or
insl
push
pop
mov
push
push
pop
cld
dec
daa
pusha
mov
jns
mov
ret
sbb
cmp
js
pop
mov
jns
mov
repnz
sub
push
xlat
sub
cmp
lcall
jne
bound
sahf
dec
xor
das
jecxz
xchg
idivb
mov
adc
in
cld
mov
cmc
imul
roll
push
pcmpgtw
add
pop
hlt
orl
mov
pop
int3
jns
xor
imul
mov
pextrw
push
add
pop
std
outsl
jg
add
and
sub
loope
shrl
mov
ds
sub
mov
icebp
add
call
insb
call
sub
xor
sbb
lahf
mov
mov
outsb
mov
xchg
clc
dec
loop
push
dec
fisubs
loope
mov
and
mov
leave
mov
xchg
loopne
daa
lea
and
mov
lret
push
fdiv
jo
sub
ss
fs
or
jno
sub
pop
cmpb
xchg
pop
fldenv
sub
in
sub
sbb
jmp
ljmp
or
mov
les
inc
clc
push
rclb
inc
sar
xchg
mov
sti
test
and
xor
rcrb
subb
sbb
xchg
pop
inc
sbb
cmpsb
xchg
sbb
cs
mov
push
xlat
push
add
jbe
rorb
shrl
or
inc
fldenv
xchg
inc
or
lret
out
mov
mov
iret
fildl
inc
lods
insl
xchg
and
mov
mov
xchg
add
fiaddl
mov
xchg
jp
rorb
loopne
cmpsl
mov
andb
outsb
or
out
sahf
jne
fisttpl
sub
je
inc
lcall
stos
lds
mull
jmp
mov
mov
jmp
jnp
lret
sarb
leave
sti
movsb
jg
cmp
movsl
lods
sbb
sbb
pop
mov
dec
stc
xchg
jno
mov
mov
shrb
and
out
cmp
sbb
xchg
sbb
leave
xchg
lock
sti
xchg
inc
outsb
outsl
leave
xchg
push
dec
xchg
add
or
dec
fadd
repz
cmp
cli
fidivs
sub
clc
or
mov
mov
pop
jae
cwtl
pop
mov
adc
daa
fldt
movsl
jns
pop
push
test
daa
test
sub
jle
add
idiv
imul
cmp
jns
mov
outsb
insl
jecxz
lret
jnp
cmp
jno
das
mov
pushl
dec
mov
add
mov
or
mov
and
inc
xchg
or
mov
cmc
mov
add
das
xchg
cltd
cmp
stc
gs
inc
and
jge
jnp
push
pop
in
into
shlb
imul
aam
jl
xlat
push
cmpsl
rolb
mov
push
and
lret
xor
mov
mov
push
ret
inc
cmp
lahf
adc
cmp
jmp
and
jae
mul
insl
jg
lret
jne
cwtl
stos
mov
inc
fildl
or
xor
dec
inc
arpl
pop
lock
iret
fmull
into
mov
xchg
xchg
xchg
push
rcl
sub
inc
push
lcall
xor
int
dec
shr
fwait
test
or
mov
mov
inc
hlt
leave
jle
pushf
xchg
popa
jno
sub
stos
lock
jmp
jmp
arpl
aam
lcall
xchg
jb
push
outsl
nop
leave
ljmp
dec
mov
cmp
jge
mov
in
jg
add
cs
lods
mov
push
push
pop
cmp
ror
push
sysenter
push
pop
out
mov
stos
test
xchg
xor
test
push
scas
mov
mov
popf
lret
imul
in
cmpsl
sub
rcl
insl
mov
pop
cmpsb
sbb
dec
mov
in
pop
in
dec
pushf
sar
loopne
cwtl
out
cmp
mov
cmp
cmp
bnd
pop
push
add
fistps
mov
xor
lock
nop
xchg
push
sbb
pushf
push
mov
lock
adcl
loop
jne
jno
pop
aad
std
loop
cmc
cmp
mov
cwtl
add
add
jae
push
fst
fs
cltd
cmp
nop
arpl
jmp
cld
jge
mov
jmp
jp
scas
not
andb
dec
mov
repz
xor
dec
cli
sub
inc
mov
mov
in
gs
mov
out
push
movsb
push
rcrl
rolb
jno
jmp
loope
mov
mov
jl
pop
call
xchg
sarb
je
rorl
pop
aas
out
loopne
out
loop
sets
pop
pop
daa
or
ds
xor
lret
xchg
or
in
inc
jp
mov
loope
rcrb
cwtl
fisubl
push
icebp
xchg
in
movsb
or
push
sub
lea
cmp
rcll
mov
pusha
inc
aaa
xor
pop
shl
andl
nop
pop
lret
push
je
cmp
jbe
rorb
in
jae
into
jp
stc
in
and
add
pusha
mov
shl
push
lret
int
sarl
cmpsb
retw
mov
repnz
fstps
fimuls
fsubrp
sub
cli
lcall
mov
jle
iret
test
ss
sub
ja
sbb
and
rsqrtps
adc
lods
or
loop
lret
push
push
sub
xor
les
pop
xchg
and
push
das
and
push
rcr
mov
push
cltd
cmp
xor
cmc
int
cltd
pop
push
xlat
sub
inc
xor
push
int
insb
jg
test
jle
lods
jo
rcll
out
mov
cld
int
sub
stos
mov
mov
add
cmp
or
jnp
pusha
jg
pop
lods
cmc
ljmp
cmp
push
adc
fwait
pop
call
shl
lods
inc
popa
ljmp
hlt
jno
arpl
and
jmp
scas
pop
and
and
dec
test
lret
mov
aad
sub
enter
mov
scas
icebp
in
cmpsb
sahf
inc
dec
lods
push
sti
adcl
mov
ret
xchg
jbe
jl
mov
js
mov
push
cmp
nop
inc
lds
aaa
imul
xchg
adc
pop
mov
cs
pop
adc
sti
into
inc
aam
inc
pop
jge
mov
mov
pop
rorb
and
das
aad
pop
and
fidivs
sti
bound
cltd
leave
lods
stos
push
mulb
jp
or
dec
aas
cltd
je
mov
mov
xchg
mov
cmp
out
dec
sub
test
mov
sub
out
test
mov
aaa
pop
lea
xchg
xchg
mov
sbb
xor
dec
lods
push
insl
and
out
mov
mov
inc
or
jge
push
adc
mov
mov
xor
mov
add
gs
mov
test
scas
jl
or
test
add
pop
xor
sbb
mov
mov
rol
ds
xchg
xor
cli
mov
fiaddl
inc
add
push
mov
shl
inc
jbe
call
setle
dec
xchg
push
mov
insl
aad
xchg
stos
and
mov
sti
cld
lahf
lcall
sub
dec
int
adc
ss
adc
test
pop
push
sub
pusha
mov
inc
nop
sbb
pop
push
jg
inc
push
sbb
sbb
bound
enter
push
stc
fldcw
xchg
add
popa
sbb
dec
inc
jae
xor
dec
adc
movsb
ljmp
rcr
jp
and
push
aaa
rorb
or
jle
push
out
adc
add
js
jg
ja
xchg
int3
pop
or
mov
cli
mov
jb
mov
add
mov
jns
dec
mov
mov
adc
outsl
iret
stos
imul
ss
in
or
cmp
push
pop
clc
xor
push
dec
push
mov
hlt
push
stos
lods
int3
xor
push
in
xchg
inc
lret
sub
dec
push
jb
mov
jg
xor
add
sbb
stos
add
and
out
filds
cmc
aaa
or
or
xchg
stc
in
dec
fsubrp
push
pop
mov
test
xorb
and
insl
mov
xor
enter
mov
jmp
pop
sti
or
push
popa
cmpsl
into
sbb
xor
pop
mov
cmp
jp
das
nop
movsl
mov
out
scas
mov
pusha
mov
je
cwtl
in
fs
or
mov
ret
movsl
rcrl
push
int
push
int
push
out
cmp
ds
jg
movsl
jmp
add
addb
in
xchg
jmp
and
mov
aas
xchg
rolb
pop
pop
push
inc
flds
aad
dec
sarl
push
push
or
pop
repz
mov
cwtl
cwtl
cld
pop
inc
add
lods
scas
lret
orb
sbb
pop
push
inc
popf
cmp
jp
mov
mov
jae
add
jmp
pushf
pushl
xor
movsl
inc
lcall
or
xchg
push
ret
push
xor
push
push
fists
jnp
push
push
add
pop
cltd
lock
sub
xchg
call
push
mov
es
dec
lock
mov
cmp
jnp
in
or
or
xchg
mov
dec
mov
cmpsl
sub
arpl
insl
in
xor
scas
fucomi
leave
pop
xor
adc
mov
mov
jns
cmc
cltd
sub
out
or
adc
imul
lret
jnp
scas
mov
add
icebp
or
stos
inc
mov
shll
lock
fld
out
xor
icebp
jnp
rol
scas
cmpsl
push
adc
dec
push
adc
xor
xor
roll
dec
xlat
repnz
mov
mov
mov
xor
push
sbbl
movsb
inc
jo
xchg
int3
xor
incb
sti
push
addb
aam
aas
pop
xchg
xor
pop
mov
adc
lods
mov
shll
insl
cmp
mov
pop
test
shl
xchg
mov
pop
inc
std
hlt
adc
mov
js
dec
sub
cmc
xor
movl
stos
imul
ja
fists
in
and
mov
stos
aad
sbb
repnz
pusha
mov
cli
movsl
fisubrl
scas
pop
mov
pop
or
mov
xlat
push
lret
xor
aam
jae
rorb
sub
push
push
inc
mov
cmp
mov
dec
mov
cs
xchg
cld
out
jp
lock
flds
mov
ficompl
pushf
mov
js
std
loopne
cmp
cmpsl
scas
pop
xor
sbb
adc
jmp
xor
sahf
fidivs
mov
mov
xor
inc
scas
inc
inc
xchg
into
fstl
data16
shlb
and
mov
in
dec
inc
shlb
sysenter
sub
jae
mov
cmp
ds
xchg
or
push
inc
fldcw
dec
jo
pop
jnp
fidivs
push
mov
cld
push
push
sbb
insb
or
aad
jnp
ja
xlat
mov
adcb
movsb
add
adc
shlb
jp
in
mov
add
out
mov
popf
push
lods
in
xchg
mov
add
out
aam
mov
dec
dec
mov
das
shlb
cmp
pop
push
ror
call
jmp
bound
call
ja
mov
jg
fstpt
dec
fdivr
dec
roll
ret
mov
xchg
jg
data16
lds
cli
mov
repz
jg
scas
xlat
outsb
imul
xchg
out
adc
xchg
xchg
dec
mov
out
cli
xor
shrb
fs
andb
cmp
out
cmpsb
cli
mov
and
std
cmp
or
adc
jp
mov
fdivrs
cmp
sbb
cmpsb
mov
fcomps
cmp
cmp
out
and
scas
adc
or
xor
inc
fsubr
fwait
push
sahf
movsl
in
jp
xchg
faddl
cmpsl
daa
xorb
scas
pop
pmuludq
inc
imul
fists
mov
and
mov
xor
lret
pusha
dec
sbb
mov
xchg
test
test
arpl
mov
xchg
dec
sub
out
mov
inc
push
bound
pop
adc
pop
dec
shll
jecxz
adc
leave
sub
cmc
stos
repz
push
test
pop
sub
sub
cmp
mov
loopne
add
jp
leave
and
sub
mov
aad
lahf
test
sub
ds
cmp
push
jl
cwtl
mov
dec
push
call
int3
shrl
mov
rolb
mov
sub
xchg
cmp
int
stos
lret
adc
mov
adc
push
and
add
in
idivl
test
in
mov
pop
inc
cwtl
fdivs
jbe
add
xor
jecxz
fcmovnb
fcomps
adc
jg
inc
stos
mov
xchg
int3
mov
push
dec
ljmp
das
dec
aas
xor
movsb
cmpsb
clc
pop
daa
inc
mov
ds
mov
sub
mov
and
in
fiadds
push
insb
mov
int
add
and
xor
push
lea
pop
scas
xchg
popf
push
test
pop
fsubl
mov
pop
mov
lea
or
lret
fucomp
cmp
inc
inc
fildl
xchg
inc
repz
dec
cmp
imul
xlat
arpl
xchg
add
xchg
pushf
pop
fwait
pusha
and
cmp
pop
aam
dec
aaa
cmp
or
pop
pop
hlt
pushf
xor
sub
jle
inc
orb
and
sub
sub
push
dec
fldl
lds
cltd
das
mov
inc
ljmp
nop
cld
nop
testl
push
mov
sub
stos
add
cmp
mov
push
mov
push
push
add
cwtl
dec
jecxz
inc
pusha
popa
xchg
rcl
outsl
push
in
fnsetpm(287
mov
in
fldcw
into
xchg
cmpb
stos
int3
or
movsl
push
clc
add
dec
fbstp
sti
jecxz
or
ficompl
inc
sub
iret
mov
loope
jo
xchg
mov
add
jne
xchg
pushf
gs
mov
and
int
daa
std
xor
ja
cmpsb
mov
cmpsw
shll
inc
cmpsb
and
rorl
jbe
dec
fstps
das
out
daa
sbbl
push
xchg
adc
aaa
cld
hlt
addps
popf
dec
mov
add
add
cli
cwtl
adc
addr16
xor
out
xchg
adc
das
mov
dec
mov
mov
add
mov
sub
jle
xchg
insb
xchg
repz
imul
jmp
add
mov
lahf
mov
test
aaa
sti
sti
cs
inc
lcall
lea
push
jge
sti
add
or
xchg
bnd
cmp
xor
inc
dec
fwait
cmp
mov
adc
iret
mov
lods
jmp
adc
andb
cltd
lods
jecxz
pop
pushf
sbb
cld
imul
add
out
push
loope
jle
mov
sti
add
xchg
sbb
add
addb
push
sti
loope
inc
test
and
push
add
xor
daa
xlat
iret
jl
test
cmpsl
cmp
gs
hlt
push
sti
fadds
aas
movsb
out
xchg
adc
outsl
rcrb
jle
or
cld
and
aaa
mov
jp
fildll
insl
push
arpl
test
cmp
loop
sbb
ljmp
xor
and
testb
loopne
dec
mov
mov
nop
fbld
mov
mov
sar
in
popa
fstl
das
or
sub
xor
push
fcomps
and
in
mov
leave
or
mov
xor
mov
dec
test
in
fdivrs
or
xor
pop
imull
aaa
imul
ds
out
fwait
sub
xor
mov
mov
jno
dec
fisttpl
es
aaa
mov
xchg
xor
jbe
cwtl
xchg
xchg
pop
inc
cli
mov
scas
pop
push
inc
jmp
pop
push
imul
sti
pop
pop
add
push
mov
dec
in
xchg
outsb
dec
or
mov
lret
scas
fadd
push
out
mov
mov
mov
sbb
inc
cmp
inc
pop
pop
sti
test
inc
orb
mov
xchg
jnp
xor
dec
lret
cvtpi2ps
out
popfw
cmp
aaa
enter
cmpsl
es
sbb
xlat
sub
xchg
cli
or
rcl
add
call
scas
mov
iret
mov
aad
xor
in
xor
test
out
push
and
mov
out
cltd
sbb
cmp
cmpsb
xchg
mov
enter
nop
rcrl
pop
mov
lock
aas
jle
xor
mov
sub
add
leave
outsl
ljmp
inc
rclb
jae
and
sbb
jecxz
lods
adc
test
cmpl
jnp
push
movsb
xchg
mov
popf
mov
and
std
mov
outsl
fiadds
bound
fwait
add
mov
sahf
push
popa
push
cltd
push
or
jmp
mov
movsl
fwait
mov
pop
pop
mov
loop
add
cmp
cmp
lock
aad
fadd
xor
mov
in
leave
nop
dec
xchg
or
sbb
add
lahf
rorl
test
pop
push
mov
xchg
jae
outsb
popf
lods
jb
add
stos
inc
ja
cs
sar
addr16
fnstsw
cltd
mov
subb
test
mov
mov
sub
sbb
bound
mov
mov
pop
xlat
lock
int3
mov
aad
pusha
enter
add
push
and
pop
cld
lret
ficomps
out
adc
mov
mov
push
push
xchg
jae
xorl
cmp
leave
mov
pushf
rcrl
inc
shll
sub
inc
sbb
pop
jno
dec
repz
cmp
lret
jno
xchg
dec
push
test
mov
in
movsb
enter
xor
out
jb
insl
mov
std
es
stc
adc
xlat
jmp
cmc
pop
in
jp
aas
iret
clc
push
add
mov
jbe
test
pop
cmp
mov
pop
pusha
mov
pop
lret
sub
mov
sub
sbb
lcall
mov
sub
xor
icebp
push
fildl
xchg
shl
pop
or
loop
daa
packsswb
fxam
ret
xchg
adc
jl
movsb
lret
cwtl
cltd
fwait
aam
enter
pushf
or
push
jno
aaa
orl
xlat
adc
push
adc
int
mov
inc
cmp
sub
push
xchg
xor
repz
mov
jo
jp
lret
sbbl
pop
xchg
dec
out
jp
andl
mov
pop
repnz
pop
mov
gs
or
stos
int
and
add
mov
out
loopne
inc
fsubrp
mov
mov
mov
mov
xor
mov
jl
popf
dec
iret
hlt
sub
mov
mov
inc
inc
push
sahf
mov
iret
xchg
shr
stos
loopne
arpl
aaa
mov
icebp
inc
sub
push
jg
out
ret
xchg
mov
imul
cmpb
mov
lods
mov
jl
add
adc
xchg
pop
and
arpl
insb
aad
negb
pop
mov
cmp
call
ja
pop
test
ret
scas
and
and
in
push
and
cmp
mov
arpl
test
mov
and
add
xor
stos
cmpsl
jge
mov
in
or
xor
je
test
sbb
jno
call
mov
and
mov
mov
xor
pop
pop
sbb
jae
mov
fisubl
aaa
ja
cltd
cmp
sbb
pop
jge
pop
xchg
add
dec
int
cwtl
fistps
lret
cs
loop
jp
or
xchg
pushf
cmpsl
enter
fwait
insb
sarl
sbb
mov
push
mov
pop
js
mov
imul
and
outsl
fdivrl
jb
sub
jg
repnz
mov
mov
sbb
aad
pop
test
in
imul
ss
fdivrl
cmpl
scas
aad
ss
pop
call
loop
hlt
pop
jns
xor
sbb
shr
and
lret
insb
pop
add
mov
bound
jns
push
adc
loopne
mov
roll
mov
lea
and
dec
push
sbb
or
jl
sub
out
push
ror
enter
int
int3
out
lea
xchg
push
mov
jo
sub
dec
pushf
pop
out
xchg
in
adc
jg
sbb
loope
arpl
and
pop
in
adc
and
push
pop
xor
cmpsl
dec
aam
repnz
push
adc
cmp
icebp
and
loopne
lcall
adc
push
test
cli
rorl
dec
mov
mov
lods
xchg
xor
js
inc
fistps
nop
je
stos
mov
adc
mov
push
cld
rclb
dec
sbb
mov
in
mov
in
into
adc
add
cs
daa
insb
adc
push
push
js
cmpsl
mov
xchg
lea
inc
sub
or
fstpl
or
clc
push
sub
push
push
hlt
jge
jp
out
jp
js
and
adcl
arpl
fcoml
clc
adc
inc
adc
or
out
lock
sbb
xlat
mov
xor
jbe
mov
js
dec
and
mov
push
int
xor
dec
jle
insl
dec
add
into
call
fs
cmp
push
sahf
jle
imul
hlt
mov
shl
test
xchg
testb
sbb
out
fldenv
lods
sahf
inc
jge
mov
enter
jge
fistps
or
pop
xchg
mov
jno
xchg
cli
sbb
fldcw
stc
and
cmp
mov
dec
mov
loopne
ret
mov
ret
jmp
mov
add
mov
adcl
xchg
mov
ss
pop
mov
or
jge
sbb
mov
popa
repz
pop
adc
pusha
sti
inc
daa
nop
or
out
or
aaa
mov
ss
imul
jo
scas
inc
xchg
cs
jle
add
pop
ss
sbb
and
or
sub
xchg
out
or
jl
stos
dec
sbb
mov
pop
repnz
push
jge
push
cmp
enter
popf
adc
sub
mov
lods
mov
loope
adc
aad
cli
mov
out
idiv
adc
push
in
orb
lds
inc
test
and
fidivl
jecxz
sbb
in
mov
lret
add
rcrb
cmp
xchg
cmp
xchg
xchg
test
jle
cs
ficoms
sub
sbb
dec
dec
movsl
mov
mov
in
mov
sbb
cwtl
stos
testb
pop
mov
clc
sbb
jae
mov
stos
mov
dec
pop
scas
sub
ret
xor
hlt
lret
insb
push
lods
lock
imulb
xor
neg
inc
mov
adc
imul
and
sub
shrl
mov
xchg
mov
adc
adc
or
mov
cmpb
pop
and
pcmpgtd
pop
enter
ljmp
test
push
or
iret
dec
mov
pop
scas
pushf
add
mov
iret
movsl
add
xchg
add
call
pop
divb
xchg
mov
int3
rcl
sbb
daa
xchg
push
int
mov
and
sub
jo
frstor
add
in
and
out
pop
inc
filds
sbb
mov
xorb
jno
jae
into
add
jmp
mov
mov
jo
sahf
enter
mov
xchg
cmc
xchg
das
dec
dec
lret
push
leave
mov
mov
or
movsl
sub
enter
testb
enter
push
jb
arpl
test
data16
cmp
aaa
or
lret
mov
daa
in
adc
cmpb
inc
fldenv
sub
popf
mov
scas
repz
cmpsb
or
lret
arpl
sub
sbb
movsb
bound
test
adc
mov
inc
lcall
xchg
mov
jl
test
dec
mov
push
mov
packuswb
and
test
jb
cmp
jbe
int
add
repnz
lods
inc
stos
fcomp
mov
shlb
pop
xchg
adc
outsl
cmp
es
es
mov
mov
xor
sbb
test
cmp
jge
imul
pop
add
subb
and
add
shr
test
adc
xor
cld
loopne
jns
test
out
cmpsb
inc
xchg
mov
cli
js
roll
ljmp
out
es
sub
mov
jnp
push
ret
cmp
int
cwtl
xor
das
aaa
std
cmp
push
data16
pusha
imul
repnz
stc
dec
ret
in
out
mov
stos
fs
mov
repnz
lret
mov
xchg
pop
ljmpw
pop
fstps
icebp
ds
adc
fs
push
jnp
or
xor
jns
sbb
hlt
push
in
mov
cltd
fsubrp
cltd
cmp
shl
add
test
xchg
call
pop
pop
pop
push
mov
test
fbld
pop
aas
test
inc
inc
mov
idivb
dec
lahf
xchg
and
inc
xor
mov
out
pop
lret
lret
cld
lock
jnp
pop
lahf
xchg
subl
jo
add
xor
fstpl
xchg
std
push
and
push
add
inc
xchg
jnp
jne
loop
mov
and
xor
or
jns
pop
bound
int3
push
cmc
pop
xchg
xor
add
jg
adc
inc
insl
inc
pop
mov
and
addr16
mov
adc
xchg
movsb
insl
sub
and
jns
fimull
add
gs
inc
jmp
test
mov
movsl
bound
inc
shlb
sbb
xor
aam
bound
or
jg
dec
into
jge
shl
ds
xchg
sub
mov
dec
push
xchg
jge
mov
into
xor
mov
mov
dec
mov
pushl
popf
gs
into
sar
add
xor
shlb
loop
xchg
nop
sub
push
out
jo
insl
int3
push
lea
xchg
bnd
push
xchg
rcrl
push
fdivl
sti
jo
aas
mov
xor
xchg
jecxz
aaa
dec
sbb
inc
mov
out
pop
xchg
gs
and
shll
call
and
out
push
jp
cltd
mov
cld
mov
mov
add
std
xchg
cmp
push
loop
push
movsl
les
lods
js
pop
lret
pop
outsb
cmp
cmc
mov
cltd
jecxz
dec
adcb
fldenv
push
andl
addl
icebp
stos
sbb
dec
lahf
pop
add
pop
rcrl
push
jmp
sbb
mov
out
mov
xorb
repnz
adc
add
shrl
cmp
dec
push
pop
add
or
or
rol
test
mov
movsl
and
out
clc
dec
add
mov
mov
pop
enter
cmp
aam
inc
popf
popf
fs
aaa
sbb
dec
pusha
fwait
push
xchg
push
test
out
push
push
mulb
mov
dec
jne
imul
cmp
das
sbb
clc
push
dec
fincstp
dec
or
cmp
mov
js
pushf
or
or
dec
sub
add
sbb
nop
xchg
cmp
xchg
cli
test
int
int
inc
fnsave
enter
xor
je
mov
int
stos
and
aaa
add
pop
dec
jl
loope
mov
xchg
rorb
in
into
mov
fcoml
les
dec
jecxz
jg
int3
test
das
add
cmc
lahf
int3
mov
daa
push
cmp
xchg
sbb
sub
jle
in
hlt
mov
sub
xor
pop
mov
bound
cmp
cmc
jp
aaa
rclb
lahf
xchg
icebp
fisttpll
sbb
xor
dec
sbb
dec
sbbb
push
cmp
fidivs
mov
sub
jo
sub
cmp
mov
dec
cmp
and
and
cwtl
rorb
mov
cmp
sahf
inc
mov
js
jnp
and
pop
test
sti
insl
jno
push
sub
mov
pop
pop
mov
sbb
fimuls
stc
dec
in
in
inc
xchg
mov
adc
sbb
xchg
xor
outsb
push
ss
aam
fdivl
sti
lret
dec
imul
aas
movd
cltd
jo
dec
push
enter
cmp
sbb
sbb
addb
outsl
in
pop
sub
mov
lods
or
xor
or
fldt
movsb
sub
mov
inc
loop
inc
imul
cltd
lret
xor
sub
ss
adc
jns
mov
xor
and
lods
jecxz
sbb
adc
lock
pop
inc
sub
xchg
and
dec
jle
xchg
mov
movsb
sahf
fwait
mov
pop
ljmp
pushf
pop
sub
fcmovnbe
addl
insb
sub
dec
mov
imul
int3
pop
sbb
cli
into
mov
loope
lret
lods
mov
sbbb
orb
or
cs
ss
ficoms
loope
and
nop
or
push
push
inc
notl
or
gs
fstpt
fbld
mov
ficoms
mov
mov
dec
pminsw
mov
out
pop
fdivs
xor
jg
and
insl
xlat
inc
cmc
adc
push
mov
cmp
in
dec
cmc
js
sbb
jle
mov
js
in
mov
clc
mov
scas
xchg
inc
aad
lret
pop
inc
loopne
jae
dec
mov
mov
jbe
adc
stos
sbb
aam
add
sbb
out
push
dec
cltd
ret
repnz
jge
jp
sub
pusha
xchg
lods
jg
xchg
xchg
pushf
icebp
data16
mov
sbbl
ror
nop
daa
ljmp
pop
pop
inc
insb
cld
push
ret
push
push
ret
cmp
daa
mov
ds
stc
negb
fwait
mov
cmc
int3
int
inc
push
or
lret
pslld
or
push
cmp
data16
ret
sbbb
stos
xchg
jnp
test
roll
daa
push
stc
popa
xor
out
push
inc
cmp
shrb
inc
out
ret
dec
clc
xchg
pop
add
sbb
sbb
sahf
mov
sbb
adc
cli
mov
dec
out
and
int
shl
xor
adc
cmp
popa
mov
iret
mov
mov
and
lahf
xlat
jo
aad
je
fs
cmp
mov
bound
fiadds
xchg
adc
shlb
daa
js
scas
in
repnz
sub
pop
push
cltd
imul
pusha
push
out
mov
ror
xor
mov
lods
xchg
aas
popf
jge
movsb
arpl
inc
mov
push
sahf
jno
push
aaa
or
test
fdivp
xor
and
mov
fnstsw
jmp
and
cmp
xchg
mov
push
leave
aaa
into
pop
andl
push
pop
jp
movsb
std
xchg
pop
dec
loopne
loopne
popa
mov
lcall
mov
xchg
mov
and
jo
dec
repz
mov
xlat
nop
jns
fdivrs
jne
repz
leave
pop
mov
sub
insb
xor
xor
ffree
fmul
push
xor
mov
mov
fsubrs
fsubr
pop
or
je
ja
lods
icebp
out
pop
stc
bound
inc
pop
std
test
jge
int3
icebp
dec
add
mov
stos
test
sbb
in
jnp
jmp
iret
inc
inc
stos
xor
aas
mov
jecxz
mov
not
push
ss
leave
dec
jmp
mov
xor
lret
add
dec
fs
xchg
and
inc
xor
adc
inc
xor
dec
sub
inc
cli
xlat
dec
js
xchg
pushf
fwait
testb
or
lods
add
inc
outsb
mov
filds
std
icebp
cmp
cmpsl
pop
xchg
xchg
nop
xchg
div
cvtdq2ps
mov
add
lods
insl
push
loope
mov
cmp
test
out
fstpt
push
or
or
imul
jle
bound
push
in
jl
add
clc
arpl
push
lret
ja
push
les
sti
movb
xchg
aam
mov
es
or
test
outsl
movsb
clc
in
call
jns
es
or
arpl
enter
lret
shrb
aaa
rcrb
jae
pop
adc
stos
inc
adc
ja
or
aaa
pop
add
jae
outsl
dec
or
fstp
add
iret
mov
dec
sub
aaa
sbb
xor
orb
jae
xchg
call
add
cltd
push
push
addr16
pop
notb
push
out
lret
or
jl
mov
inc
and
mov
daa
test
inc
lods
push
jo
int3
rcl
and
jbe
leave
xor
jle
jno
mov
stc
sbb
jb
sti
test
and
dec
cmpsb
clc
sub
gs
lods
leave
cld
mov
mov
fildl
pop
adcl
mov
enter
inc
inc
add
lods
je
faddl
inc
enter
push
ja
das
in
dec
fisttpl
or
mov
cmp
pop
mov
sub
rorb
movsl
jo
adcb
pop
outsl
xor
and
mov
xchg
call
cmp
xlat
in
gs
mov
cmc
pop
xchg
fistl
mov
fistpl
mov
pop
mov
jmp
jl
orl
in
mov
push
push
jns
mov
ljmp
aad
inc
sbb
sbb
mov
dec
jbe
int3
xchg
in
xchg
jns
js
push
sub
inc
jne
push
xor
in
add
cmp
sub
mov
pop
push
hlt
mov
dec
aam
mov
dec
and
sub
lcall
stos
pop
hlt
out
es
fs
insb
jg
popa
pop
into
dec
xchg
jae
pushf
rclb
push
sbb
mov
ret
xchg
and
and
pop
cmovo
push
mov
ss
sub
cmovs
push
push
pusha
sbb
sbb
inc
ret
int3
sub
dec
push
cmp
mov
not
incl
mov
and
shlb
jmp
divb
ja
and
mov
test
dec
add
cmpb
or
lock
fldcw
xor
xlat
push
subb
mov
adc
in
aaa
add
ret
sbb
inc
andl
jg
lods
or
les
lods
xchg
or
and
movsl
movsl
mov
push
enter
adc
cmpsl
add
into
ljmp
repnz
dec
dec
daa
and
cli
jg
jge
ret
jmp
pop
sbb
subps
or
inc
jb
cli
jae
imul
inc
add
inc
push
mov
or
sbb
sti
xor
call
stos
mov
lods
ret
prefetchnta
mov
sub
mov
sbb
insb
cmp
cmpsb
sbbl
dec
sub
arpl
pop
xchg
pop
inc
mov
pushf
push
aad
mov
xor
test
mov
dec
insl
inc
iret
ss
push
repnz
dec
sub
inc
cwtl
jge
jmp
push
xchg
adc
cmp
loop
pop
xchg
jne
and
lods
es
xchg
jecxz
cmp
je
insl
xchg
jns,pt
movsl
pop
mov
jae
sub
lds
push
dec
arpl
cmp
push
sub
fsts
fbld
and
imul
mov
stos
mov
notb
daa
and
fisubs
data16
push
scas
mull
insl
push
mul
mov
stc
repz
jb
xchg
in
mov
inc
out
push
gs
loop
or
inc
cltd
pop
ret
mov
inc
imul
iret
push
fstl
push
mov
filds
jg
push
pop
mov
add
scas
mov
out
jae
mov
lret
push
in
push
fldcw
mov
xorb
hlt
pop
and
adc
ljmp
jecxz
mov
aam
push
dec
shrl
mov
or
and
cwtl
or
jle
cwtl
adc
cmp
pop
mulb
shlb
and
pop
mov
rorb
xchg
aad
loope
and
pushf
xchg
cmp
insl
mov
sub
popf
sub
mov
xchg
dec
mov
ret
in
mov
inc
mov
push
fcomps
in
xlat
rcrb
mov
jecxz
pop
add
imul
sub
fiaddl
daa
dec
stos
dec
and
cmp
adc
loope
shll
adc
mov
cwtl
std
faddl
jmp
xchg
sbb
adc
ja
sub
mov
lahf
mov
push
fwait
ss
cmp
testl
jecxz
xchg
and
aam
lock
inc
xor
or
xchg
out
jbe
ficomps
sbb
cltd
int
test
and
das
inc
scas
lahf
les
lret
fildll
repnz
dec
in
jle
and
or
les
add
jo
lock
inc
push
aam
arpl
sti
fstl
mov
adc
out
test
jp
pop
xor
pop
repz
mov
mov
jge
mov
sub
or
inc
pop
and
mov
mov
jmp
arpl
mov
sbb
cmp
cmp
pop
loope
lds
or
xchg
insb
je
loop
pop
mov
jne
cli
mov
roll
popa
push
negl
bound
jp
stos
les
repz
stos
add
fcomip
xchg
push
stos
mov
out
xor
sbb
pop
pop
lea
pop
push
outsb
shrb
pop
test
popa
add
mov
lahf
and
inc
arpl
mov
loop
clc
pusha
in
or
sub
out
mov
outsl
lock
sub
push
sbb
sub
push
cmp
out
pop
je
inc
dec
sti
loopne
ljmp
inc
idivb
cld
stc
jbe
scas
mov
xchg
mov
xchg
and
or
mov
test
or
loopne
cmp
fistl
insl
shll
cmp
lds
rol
test
outsl
popa
inc
adc
cmp
xchg
test
lret
xor
jnp
icebp
popa
add
or
push
cmp
dec
push
int3
movb
lock
push
ret
subb
fcomi
pop
gs
jmp
pop
push
cmp
fdivrp
in
jmp
mov
clc
lods
sbb
push
mov
push
inc
push
cli
lea
dec
xchg
pop
push
in
add
cltd
in
mov
xor
cmp
jp
cmc
jle
popf
in
mov
xor
mov
clc
mov
cmc
arpl
push
mov
repnz
mov
mov
xchg
sub
mov
sub
mov
inc
jecxz
xlat
cli
adc
cmp
out
jbe
movsb
test
jne
xchg
or
inc
nop
ret
sub
movsl
dec
cmp
divb
repz
int
xor
pop
mov
jmp
test
jb
daa
cmp
mov
arpl
jae
sahf
or
adc
repz
repnz
mov
push
int3
jb
fldcw
aad
fcomps
orl
add
jae
adc
jne
dec
mov
jne
mov
lcall
sbbb
ljmp
inc
movsl
popf
es
fnclex
sbb
mov
push
jnp
sbb
lahf
ja
stc
mov
negb
mov
mov
xchg
mov
and
ds
pop
insb
push
jle
inc
jmp
dec
movsb
pop
call
or
rcll
je
shrl
adc
mov
fbstp
mov
sbb
cmp
in
dec
sti
pop
fnstenv
into
xchg
stc
push
daa
les
in
leave
cmpsb
dec
aad
jns
push
cmp
sub
sbb
mov
sarb
jbe
cld
das
je
mov
lods
sbb
js
ss
add
sbb
mov
or
jmp
jecxz
sub
or
fisttps
das
mov
jnp
stc
push
stos
sub
js
and
dec
negl
sbb
push
adc
aas
xchg
stc
push
sbb
imul
sub
cmp
ret
jp
bound
pop
xchg
add
lret
add
mov
movsl
fs
inc
xchg
mov
cmp
add
xchg
fs
jnp
mov
mov
jmp
scas
bound
jge
mov
int3
xor
lahf
jns
lock
add
jbe
or
add
or
xchg
xor
sbb
stos
or
ficoms
sbb
ja
ja
mov
in
push
int
mov
insl
push
mov
sbb
fstps
jbe
fisttps
push
dec
jno
sub
ss
xor
scas
pop
les
sub
push
inc
jl
lods
call
fisttpl
nop
jmp
mov
cltd
out
sbb
fistl
roll
je
mov
push
sub
jge
xchg
adc
cmc
ljmp
stos
dec
clc
rorb
mov
mov
leave
mov
arpl
and
sti
ret
push
pop
sbb
inc
jmp
adc
inc
add
and
xchg
inc
mov
cltd
test
ret
out
inc
inc
xor
mov
cmpsl
icebp
mov
jo
dec
pop
jb
push
and
mov
mov
shll
adc
call
mov
adc
aas
movups
insb
mov
out
mov
int
cmp
xchg
adc
popf
or
les
std
cmp
push
dec
out
cmpl
sarb
sar
test
add
and
push
cwtl
popa
les
stos
sub
xor
xchg
add
push
sub
adc
jge
inc
aad
fs
dec
and
add
dec
stc
mov
pop
sub
fstpl
and
mov
filds
pop
xor
pop
mov
ficoml
movsl
dec
inc
insl
das
mov
mov
sti
sbb
int3
pop
xchg
pop
ja
sub
loope
push
push
scas
add
clc
out
cmp
adc
jg
xchg
outsl
aas
das
xchg
bound
sub
push
cmp
fnstenv
sbb
ds
sbb
cmc
mov
cld
idivl
je
lods
pushf
pop
sti
xchg
add
ret
je
xchg
mov
sbb
loope
cmp
adc
add
sub
jmp
xchg
int3
xchg
xchg
xchg
into
xor
out
sub
movsb
cmp
sarb
dec
orl
fstpt
aam
fs
mov
mov
shll
lods
xchg
aam
ret
shrb
push
mov
test
pop
xchg
icebp
inc
mov
push
push
pusha
int
mov
daa
cmpb
sub
insb
cli
mov
mov
or
or
into
in
dec
pop
ret
adc
clc
rcrb
outsb
push
and
add
inc
ffree
xchg
mov
dec
push
in
or
and
dec
pop
popaw
pop
lcall
lea
push
and
cmpsb
scas
sahf
das
std
in
sbb
adc
pop
fldt
pushf
and
ficompl
xchg
pop
mov
js
arpl
js
test
js
rorb
aad
lds
ret
cmc
dec
popa
fs
test
push
sahf
or
sbb
fadd
loop
lret
or
fdivs
mov
pop
cmc
mov
sub
fsincos
gs
xor
mov
pop
push
adc
ret
jecxz
inc
int3
daa
cvttps2pi
dec
sub
pop
mov
aas
inc
cmp
fistl
mov
mov
jmp
dec
in
in
adc
rep
lcall
popa
push
lods
out
cmpsb
lods
push
inc
mov
ret
or
mov
lods
repz
and
daa
or
fmulp
nop
dec
push
adc
bound
xchg
lods
clc
stos
inc
mov
andl
out
mov
das
popf
pop
or
add
xor
lock
add
mov
add
xor
cli
mov
out
push
out
pusha
fcmovb
shll
fs
push
mov
mov
mov
rorb
and
lds
sbb
and
add
sub
dec
fs
jb
push
cmpsl
int
pusha
jg
sbbb
xor
push
aad
pushf
lods
stos
dec
sbb
xlat
mov
shll
outsb
sub
xor
ret
pop
or
ret
in
dec
cmpsb
ljmp
pushf
mov
jb
clc
out
jp
hlt
enter
rorl
ja
sub
add
iret
adc
jge
push
outsl
inc
sbb
dec
sbb
inc
in
pushf
mov
jge
inc
xchg
mov
and
jbe
lret
and
and
cmp
xchg
stos
xlat
mov
cwtl
andb
ljmp
lock
sti
in
incl
pop
mov
shll
ret
add
dec
aam
sbb
mov
aam
jmp
in
adc
xchg
push
mov
dec
int
mov
out
lea
sbb
sbb
add
in
fs
out
ds
dec
ljmp
scas
push
mov
mov
mov
pop
xor
push
icebp
sub
pusha
orb
testb
cld
je
jp
faddl
jecxz
inc
jmp
mov
adc
sub
cmpsb
pop
ret
ret
in
cmpsb
mov
xlat
aaa
test
mov
dec
in
mov
hlt
hlt
pop
push
ret
rclb
ja
test
daa
insl
fadds
mov
mov
adc
loopne
cmp
fsubrs
rorl
ds
mov
sahf
jmp
jle
scas
rcl
leave
xor
js
lock
rol
insl
jl
dec
bound
imul
fisttpl
and
ret
xchg
jl
test
pusha
mov
sub
jp
test
mov
push
imul
ret
cmpsb
dec
xchg
xchg
out
icebp
pop
fisttpl
aaa
pushf
jo
mov
pop
or
mov
or
ret
outsl
push
cmp
push
arpl
or
out
rcll
movl
inc
cmp
inc
push
sbb
enter
sti
sbb
xor
inc
and
cmp
insl
out
movl
insb
stos
cmp
and
in
icebp
stos
dec
loopne
lcall
sbb
pop
add
bound
bswap
add
inc
xrelease
fldcw
inc
pop
jge
stc
adc
test
fsubr
movsl
add
loopne
or
dec
and
xchg
push
fs
mov
lds
jecxz
lock
or
cli
es
xor
mov
lods
arpl
scas
cmp
xor
in
inc
mov
loopne
mov
scas
pop
fcmovnu
xchg
cwtl
jne
push
arpl
fwait
jo
inc
icebp
arpl
cmc
inc
outsl
fsts
loop
inc
pop
jbe
aam
inc
ljmp
jle
push
sub
xchg
cld
mov
sbbl
repnz
pop
movsb
dec
push
stc
dec
jne
das
sarb
ret
dec
aaa
gs
negb
les
repz
cs
jmp
mov
int
xor
xchg
and
lds
cs
lods
ljmp
inc
mov
jo
sub
nop
jge
sti
into
pusha
sub
inc
shll
jecxz
popf
shrl
ss
daa
add
jg
mov
mov
cmpsl
inc
xchg
popa
cmp
push
or
lods
jp
sub
cmp
ja
ds
mov
inc
adc
xchg
jo
adc
xchg
xor
push
into
add
pop
sbb
into
sub
xor
dec
in
ljmp
pushf
jne
stc
xor
rcr
insb
push
lea
dec
xchg
jo
jae
bound
ljmp
mov
in
xor
dec
aad
out
mov
jne
mov
cmpsb
aad
xlat
cmp
jp
cmp
xor
push
mov
dec
in
mov
or
jl
adc
lock
fcmove
sti
dec
jne,pn
push
aad
dec
mov
out
jl
mov
adcl
aam
mov
push
xor
leave
pushf
stc
jge
xchg
mov
bound
push
cmpsb
mov
xchg
xlat
mov
cmp
rcll
or
xchg
cmc
das
mov
sub
sub
jl
cmp
sbb
icebp
js
lods
daa
outsb
popa
fimuls
jo
push
dec
jl
lret
dec
rclb
rcl
push
loope
jnp
loopne
pop
adc
inc
les
sbb
xchg
popa
fcomps
and
mov
fistl
setae
xor
jne
popa
jno
test
push
out
add
sarl
es
mov
test
insb
std
sbb
shll
fwait
inc
or
inc
imul
call
mov
mov
push
stc
sub
sub
dec
icebp
jecxz
cmp
lcall
insb
pop
cmc
outsb
imul
mov
outsb
insl
jns
jge
dec
mov
nop
cltd
shl
cmc
jbe
in
cmp
popl
jns
cwtl
and
sub
adc
or
test
xor
mov
push
stos
xor
popa
ljmp
sahf
repnz
pop
fstpl
loop
add
test
lock
ljmp
mov
sbb
mov
lahf
xchg
fnsave
push
in
std
pop
outsb
xlat
mov
sti
jbe
jge
sub
push
pop
xchg
sub
icebp
rep
call
lahf
aas
adc
lcall
inc
xchg
ljmp
repnz
ljmp
and
rorl
cmp
mov
sub
vmovapd
lahf
add
aas
xchg
jmp
adc
mov
mov
xlat
mov
mov
mov
fwait
les
pop
nop
fsubp
cmpb
int
jge
and
les
lret
es
cli
roll
sbb
addb
sub
push
iret
je
shlb
iret
fcoms
loopne
loop
xchg
sbbb
jmp
loopne
pop
xor
test
xor
mov
aam
fadds
xchg
enter
ficomps
fimull
sub
ja
adc
inc
loope
sbb
mov
call
clc
mov
sbb
adc
lods
and
mov
push
adc
xor
xchg
mov
ret
lock
push
outsb
in
movl
cmp
lock
test
inc
add
mov
mov
push
das
scas
push
pop
pop
rcrl
jle
add
test
lret
xchg
push
pop
and
shrb
sub
pop
test
fprem
cmp
xchg
pop
cmp
lahf
adc
jge
hlt
sti
scas
pop
lret
xchg
loopne
inc
js
arpl
ds
std
idiv
addr16
push
shll
incl
add
sub
loopne
xchg
shrl
out
mov
addr16
out
rclb
arpl
jnp
lret
imull
xchg
je
gs
cli
adc
add
mov
stos
repnz
gs
lret
sub
xor
ja
sbb
outsl
add
inc
fwait
divl
sub
push
mov
and
push
adc
push
in
pusha
mov
xchg
imul
jl
mov
push
sbb
lcall
aas
jns
dec
mov
nop
pop
jecxz
bound
add
add
mov
lods
subl
mov
push
pop
jo
shlb
nop
aas
into
mov
mov
into
adc
popa
nop
enter
push
jge
jae
sbb
fldt
mov
add
mov
jns
xor
fdivs
xchg
xchg
orb
stos
push
push
movb
stos
stos
inc
ljmp
adc
pop
out
and
sub
mov
mov
and
daa
popa
push
push
scas
insb
insb
dec
jmp
dec
pushf
in
sbb
xlat
dec
lea
sub
sarb
pop
add
sub
loopne
cmpb
aad
in
push
pop
out
rolb
shrb
clc
mov
movsb
cmp
hlt
fucomp
scas
aad
hlt
pusha
inc
frstor
inc
pop
lret
xor
mov
adc
outsb
xor
das
mov
fsubl
std
into
cmp
fdivrs
dec
orl
mov
lahf
add
sub
shlb
xor
mov
push
pop
shrl
mov
or
or
mov
fidivs
inc
inc
ds
or
lds
dec
or
sarl
sub
inc
aam
inc
int3
pop
stos
aaa
bound
push
sbb
add
mov
jl
xchg
cmp
je
and
sbb
cmp
ret
out
inc
in
out
mov
mov
sbb
fsubrl
xchg
pop
mov
cltd
scas
xor
push
test
add
dec
or
dec
and
filds
xor
cmp
scas
lret
fucomip
push
pop
jae
in
lods
push
ja
imul
in
pop
imul
sub
jge
iret
or
outsl
inc
mov
add
xor
enter
sarb
cmpsb
lods
cmp
or
jecxz
lret
mov
ja
imul
push
movsb
lea
pop
data16
push
ljmp
fistl
shlb
ljmp
xchg
push
cwtl
xchg
pushl
popa
add
and
and
pop
cmp
loope
or
fs
dec
xor
mov
add
mov
add
add
fcmove
mov
cmp
push
and
das
aad
sub
rcll
sub
pop
adc
pop
into
nop
push
movsb
add
movsb
popa
inc
jmp
nop
lock
sbb
shrl
mov
cmc
ja
int
fs
stc
sbb
rolb
out
enter
in
movsl
sbb
js
iret
test
jae
cmp
loope
loop
xor
fildll
mov
ret
test
adc
mov
js
push
imul
das
dec
jmp
lds
mov
inc
ja
jp
ja
lock
xor
shlb
add
adc
incl
fs
sbb
stc
mov
or
lock
in
jne
std
sarb
imul
or
push
jle
in
das
push
lret
lahf
add
inc
pusha
fsub
xchg
inc
in
rcll
add
sbb
jecxz
inc
aad
or
cld
push
dec
arpl
sbb
and
jp
xor
adc
lds
and
loop
xchg
xchg
xchg
lret
mov
in
in
xchg
sarl
call
sti
negl
mov
or
into
nop
scas
filds
mov
sbb
insl
sub
mulb
inc
inc
push
sub
sub
adc
sub
xor
adc
mov
aad
les
xchg
daa
fld
rorb
jmp
add
adc
out
adc
mov
sub
mov
lods
das
cmp
enter
je
push
xchg
sahf
sysenter
pop
outsl
imul
lcall
int
push
dec
cmova
out
mov
jns
jbe
adc
pop
shlb
rorl
out
or
pusha
xor
fisttpll
pop
fmul
loopne
or
adc
cmp
and
push
in
cmp
aas
inc
cltd
push
ret
daa
addl
or
jg
add
into
shlb
or
mov
shrb
nop
sub
roll
xor
mov
test
xchg
das
add
xchg
push
insl
mov
out
in
in
fisttpll
jnp
xor
aam
arpl
xor
dec
push
adc
int
mov
xchg
push
stos
jmp
frstor
dec
mov
sub
idiv
sahf
rolb
push
inc
push
xor
adc
xchg
or
sbb
into
movsl
xor
or
addl
vunpckhps
dec
push
jp
mov
lods
inc
fistpl
inc
jb
ror
push
jmp
xchg
insl
sqrtps
dec
loopne
sub
sub
and
xchg
pushf
inc
and
push
jnp
scas
mov
jmp
lds
icebp
mov
lahf
dec
into
aaa
jle
es
nop
sub
jno
jnp
push
or
sub
movsb
jp,pn
das
into
arpl
mov
shl
sub
or
xor
jge
repz
mov
sbb
neg
addl
xor
sti
repnz
xlat
dec
dec
or
inc
mov
inc
push
mov
loope
push
or
daa
orb
mov
or
or
sahf
mov
loope
mov
mov
jge
je
inc
and
push
or
jecxz
adc
mov
sahf
jnp
inc
hlt
adc
push
mov
xor
adc
lea
or
adc
pop
pop
mov
lahf
mov
cmc
imul
fdiv
dec
jl
dec
inc
add
pushf
mov
movsl
and
dec
clc
in
and
mov
punpckhdq
insb
inc
adc
scas
pop
sbb
push
loopne
jnp
js
mov
push
sbb
icebp
xor
test
jg
push
cwtl
lock
and
adc
dec
adc
ret
pushf
mov
xchg
push
imul
mov
lods
lods
movsl
jb
push
jnp
insl
mov
xor
sub
xor
jecxz
movsl
adc
pop
cmp
rcrb
orl
js
sbb
fwait
inc
add
mov
jb
jae
sbb
mov
rcl
mov
outsb
lret
and
les
ret
jae
adc
inc
fldcw
jne
imull
arpl
int
pop
adc
ss
stc
push
push
push
outsb
lret
insl
stc
inc
sbb
cmp
cli
adc
sbb
add
insl
fadds
clc
popf
and
mov
sub
xchg
mov
lds
mov
data16
sbb
push
pop
neg
adcb
roll
inc
movsl
imul
notb
out
insb
gs
ja
cmpsb
xlat
mov
pop
mov
xchg
xorw
cli
mov
push
add
roll
jnp
mov
lret
jecxz
daa
in
scas
repnz
lret
pushf
push
shrl
adc
push
mov
or
mov
adc
into
sbb
sub
push
adc
jp
mov
cmp
ljmp
sbb
mov
xchg
jne
and
sbb
aaa
es
or
jmp
push
pop
sub
cs
test
dec
add
mov
pop
mov
subl
flds
mov
cmp
int
stos
test
mov
push
sarb
pusha
dec
fisubs
cmp
repnz
imul
and
testb
pop
aad
rcl
jle
icebp
cltd
xchg
addl
dec
mov
out
add
xor
push
jno
cmp
lods
clc
das
jnp
adc
out
pop
mov
int
mov
push
mov
xor
sbb
and
jl
data16
fisttpll
xor
and
imul
out
into
jge
mov
dec
adc
pop
inc
neg
xor
pop
test
pop
test
mov
jl
sbb
fwait
mov
dec
std
leave
lret
mov
lret
sub
mov
aas
inc
sub
adc
and
idivl
jecxz
pusha
mov
enter
xor
jp
in
in
out
loop
jbe
pop
clc
popf
sbb
mov
flds
xchg
jmp
rcr
push
and
xchg
mov
insl
scas
scas
push
mov
rorl
dec
add
mov
pop
cmc
test
cli
cld
pop
dec
push
inc
jge
mov
jg
pop
dec
pushf
loope
pop
dec
jne
or
daa
test
adc
jg
sbb
cld
enter
aas
cltd
mov
and
jmp
stos
sbb
xchg
aad
sbb
rolb
int3
sbb
scas
frstor
mov
in
or
mov
xor
rcrl
pop
adc
test
lock
or
mov
cmpsl
sub
cmc
imul
cli
mov
mov
xchg
mov
pop
mov
mov
ljmp
loopne
test
push
mov
push
and
shlb
jne
sbb
repz
lds
inc
mov
fisttpll
cli
leave
add
orb
push
imul
out
cwtl
stos
mov
dec
add
idiv
inc
cmp
xchg
xchg
int
scas
mov
dec
mov
or
ficoml
nopl
es
stos
inc
lds
movsl
mov
test
repnz
outsb
push
clc
pop
imul
cmp
repz
frstor
adc
mul
les
jl
cwtl
cmp
mov
les
jmp
dec
ffree
es
insb
aam
pop
mov
iret
dec
pop
pop
inc
push
pop
scas
lret
lods
sbb
push
lods
or
inc
add
rolb
jmp
xlat
xchg
push
leave
xchg
loopne
xor
ret
inc
inc
test
fimuls
inc
cmp
or
or
stos
loopne
push
xchg
outsb
ja
in
xor
outsb
adc
lcall
sbb
scas
and
sbbl
xor
and
add
lea
inc
lea
outsb
fiadds
imul
push
pop
hlt
lea
popf
popa
and
cmp
or
dec
hlt
loopne
in
mov
pop
mov
mov
mov
and
xor
mov
fs
jl
lock
jmp
sbb
mov
dec
pop
test
xchg
sub
leave
xor
xor
data16
xchg
mov
inc
lock
insb
popf
mov
das
clc
dec
movl
out
add
jne
rclb
ds
sub
xchg
aaa
pop
jl
jmp
jle
fs
add
sbb
ret
movsb
mov
ffreep
fidivrs
leave
out
xlat
int3
mov
inc
lahf
js
sub
shl
je
mov
push
das
out
notb
sbb
xor
mov
pop
mov
mov
jg
add
mov
jnp
sbb
imul
int3
xchg
cld
mov
sahf
dec
mov
xchg
cmpb
aad
arpl
cwtl
pop
fimull
jmp
pop
dec
xchg
and
jbe
adc
dec
mov
sbb
ss
sarb
es
lret
and
loopne
notl
xchg
daa
fldenv
rorl
push
push
sub
xor
xchg
or
cmp
sub
dec
xchg
dec
in
sbb
fwait
mov
pusha
cli
ds
and
pop
add
mov
movsl
insb
out
push
or
inc
xlat
inc
aam
jg
mov
arpl
fildl
lahf
shlb
mov
sub
cwtl
movsl
jb
xchg
into
inc
daa
sahf
mov
jg
pop
xchg
inc
mov
jecxz
mov
xchg
jne
pop
loope
jae
push
js
clc
imul
lea
cmpsl
sub
jae
xor
dec
scas
cmp
adc
iret
addb
lahf
sub
pop
add
or
inc
sarb
insb
fucomp
insl
push
movsb
sbb
push
ret
cmc
jo
in
repz
inc
shlb
out
and
cld
jb
inc
jl
cmc
int3
fidivrs
aaa
inc
gs
fdivrl
aas
clc
dec
iret
inc
cmpl
sbb
test
jle
jg
lods
xlat
cmp
out
popf
cli
add
add
mov
lcall
daa
test
orl
sbb
outsb
out
sbb
in
movsl
sub
iret
push
testb
adc
and
imul
shll
or
iret
mov
pop
inc
dec
sbb
call
cmp
push
hlt
cmp
mov
in
movhps
cld
les
cmpsb
dec
lods
lea
mov
mov
inc
push
out
cmp
repz
mov
notl
cmp
xchg
inc
fsubs
lcall
lret
push
inc
adc
mov
and
adc
sarl
fsubrl
lods
mov
and
push
lcall
jno
repnz
sub
jnp
xlat
or
jb
cmp
pusha
jo
leave
cmc
test
add
mov
in
jl
aas
das
lock
rolb
pushf
xchg
in
cmp
lret
adc
orl
pushf
aaa
mov
sahf
movsl
sbbl
push
inc
dec
mov
cltd
push
sar
inc
rcr
andl
dec
pop
or
pop
js
roll
xchg
sub
mov
xor
pop
imul
push
mov
mov
pop
and
jne
xchg
or
push
pop
mov
pop
ljmp
add
sbb
div
data16
mov
sbbw
sti
cli
enter
nop
leave
adc
cli
lret
adc
ds
icebp
push
inc
cmpsb
ja
stc
pop
cmp
pushf
add
dec
insb
xlat
xor
fstl
ret
xor
movsb
adc
sbb
outsl
cwtl
xlat
mov
mov
inc
ljmp
sarl
mov
cwtl
or
xor
or
ds
jno
push
sbb
mov
into
xchg
ja
sbbb
lods
fxch
aad
pop
jae
test
sub
dec
sbb
sub
popf
adc
in
nop
mov
adc
cmp
mov
nop
aas
in
loope
jns
lea
push
lcall
push
daa
cltd
push
sbb
orb
ss
inc
ljmp
cmp
repnz
loop
xor
cs
xor
xor
push
add
mov
add
and
sub
mov
cmpsl
rolb
mov
sub
or
movsb
dec
sarl
movsl
mov
mov
repnz
aad
addr16
adc
inc
xchg
cmp
or
repnz
int
xor
adc
mov
fstpt
hlt
test
xorl
adc
inc
xlat
mov
dec
addr16
add
out
inc
sbb
and
cmc
jnp
jle
fbld
popf
mov
xchg
test
popf
adc
adc
pop
nop
cld
fcompl
cmp
cld
cltd
inc
mov
and
stc
subb
jl
add
sbb
cmpsb
xchg
cli
notl
jmp
lods
pop
out
add
push
inc
adc
mov
add
repz
xor
mov
ret
loop
push
xchg
fmuls
pop
sbb
dec
sbb
push
iret
cmp
pop
ret
sbb
mov
mov
and
sub
sahf
inc
push
pop
shl
aaa
mov
fdivl
dec
inc
sbb
filds
sub
sub
jg
dec
lret
es
dec
enter
repz
les
cltd
adc
cmpsb
repz
mov
or
mov
insb
adc
ja
les
pop
testl
pop
dec
push
mov
das
push
popa
arpl
cmp
sbb
es
in
add
jnp
rcrb
xchg
or
mov
push
jle
fisttpl
movl
fsubs
adc
or
lahf
and
cli
popa
movsb
pushf
cltd
dec
sub
jo
aaa
pop
icebp
pop
mov
popl
ja
fidivrs
repnz
push
stos
add
mov
test
out
xchg
push
mov
loopne
cmpsb
mov
cmpsb
mov
or
hlt
adc
iret
and
loopne
push
ss
fistl
shll
and
xchg
lods
mov
adc
mov
popa
enter
push
or
gs
test
cmc
cmp
shlb
cmp
rcll
dec
cmp
mov
push
mov
nop
xor
test
mov
xchg
inc
mov
cmc
push
daa
sti
and
fisubrs
add
dec
mov
fstps
pop
lret
fisttps
gs
jb
push
les
stc
pop
fmuls
sub
test
sarl
loope
cltd
mov
clc
xchg
jg
push
dec
mov
inc
mov
xor
in
lret
push
xchg
add
pop
fistps
lea
loopne
jmp
mov
xchg
out
cmp
pop
ja
push
fstpl
ss
push
pop
shrl
and
idivb
cmp
dec
and
sub
movsb
dec
sbb
mov
or
out
mov
movsb
mov
xchg
jnp
add
and
test
lock
lods
jmp
frstor
movsb
or
out
test
stos
push
pushf
dec
pop
inc
cmp
push
push
sbb
lock
out
and
pushl
sbb
fimuls
jbe
sahf
cmp
arpl
mov
imulb
or
pop
or
arpl
je
xchg
sub
out
out
pop
cld
cmp
notl
sbb
jmp
mov
and
mov
adc
jns
push
sub
pop
dec
adc
inc
xor
mov
push
pop
or
pop
adc
int
dec
lret
mov
lods
ss
jno
jbe
out
int3
push
xor
jl
pop
inc
ja
or
shrl
jp
or
add
mov
call
mov
shrb
lret
sbb
xor
xchg
or
jns
js
ja
pop
movsw
push
repz
or
mov
add
fs
jb
data16
out
repz
mov
adc
sbb
jp
and
sbb
repnz
rorb
enter
sub
mov
hlt
test
stos
sub
js
stos
xor
ja
lret
inc
and
scas
iret
and
jmp
or
and
or
and
xlat
fisttps
pop
cld
adc
fisttpl
jge
jp
push
jp
cmp
aaa
fimull
int
enter
sub
fs
loope
lds
rcr
mov
sbb
xor
xchg
push
mov
xor
sbb
jg
sbbl
imul
dec
xchg
add
lcall
jb
inc
fldt
inc
dec
clc
pop
sub
das
imul
adc
into
stos
arpl
jae
adc
gs
fld
test
xchg
inc
sbb
add
xor
and
mov
repnz
cmp
test
shll
fsubl
add
lods
andb
mov
stc
add
incl
clc
add
insb
push
pop
cltd
outsb
inc
add
mov
sub
mov
jle
adc
sbb
jnp
outsb
adc
loope
sbb
cltd
in
rolb
jle
cmpsb
sbb
loopne
and
xor
cs
mov
pop
imul
loop
in
fwait
std
pop
mov
pop
push
ljmp
sub
add
test
data16
ret
call
jae
rcl
add
nop
cwtl
and
inc
push
jae
test
xor
stos
scas
cmp
dec
sub
lahf
cmp
xor
iret
mov
dec
inc
xchg
test
lret
push
jmp
ret
fistl
mov
mov
dec
insb
dec
js
push
enter
or
sbb
les
dec
inc
popf
lods
in
fisubs
adc
adc
mov
inc
cmp
mov
pop
mov
jle
push
stos
and
xlat
test
shlb
lahf
push
mov
test
imul
testl
fldcw
push
mov
inc
into
xchg
xor
mov
push
imul
jmp
and
mov
xlat
cmpsl
inc
dec
mov
int3
push
xorb
jns
scas
inc
sbb
pop
add
jge
xor
fs
icebp
sar
push
and
xor
dec
sahf
stc
cli
pop
not
jge
jge
cld
mov
xor
sahf
out
into
dec
mov
add
dec
ljmp
lret
adc
cwtl
into
popf
scas
sti
add
lahf
xorb
adc
inc
out
mov
xor
mov
icebp
and
inc
adcb
jns
rcrb
and
icebp
add
pusha
jno
xchg
or
lea
xor
inc
sub
dec
loope
fsubrl
xor
mov
scas
xchg
and
ljmp
and
aam
cmp
sbb
jge
mov
pop
pusha
pop
fimuls
xlat
sub
mov
push
fadds
jmp
fcos
ret
and
jle
or
and
dec
jno
jnp
adc
in
ficoms
decl
imul
dec
push
xchg
cmp
lds
xchg
adc
int3
bound
adcw
pop
mov
inc
xchg
sbb
jle
sub
bound
or
in
arpl
in
inc
stos
jbe
push
xchg
rol
inc
es
pop
sbb
jb
fnstsw
sub
lret
dec
out
loope
jbe
xchg
std
jg
cs
push
int
inc
notl
add
and
and
mov
adc
adc
inc
cmc
clc
fs
xchg
lea
sbb
add
inc
mov
dec
out
xchg
lcall
ja
cltd
stos
insl
jo
fisubrl
xchg
pop
push
hlt
add
push
outsb
xor
adc
or
data16
cmpl
sbb
pop
dec
jns
add
es
cltd
sub
lods
addr16
pusha
mov
adc
xor
gs
call
imul
addr16
clc
in
add
test
push
xor
iret
or
ds
or
inc
out
adc
scas
test
or
out
cmp
jae
jmp
es
mov
int3
cmp
shrb
lds
xchg
inc
loop
ret
xchg
fsubrs
rorb
mov
fsubrp
push
or
insl
insb
push
sub
dec
cwtl
ljmp
mov
sub
sbb
repz
push
bound
jmp
lods
pop
out
ljmp
ljmp
push
jno
fwait
cmp
out
int
mov
test
mov
nop
or
icebp
insb
xor
ds
and
imul
nop
jns
mov
sbbl
push
movsb
mov
in
stos
adc
sbb
mov
outsl
aam
enter
add
push
mov
pop
sub
fists
sub
hlt
sbb
jge
or
outsb
sti
cli
sbb
jg
mov
test
dec
adc
adc
mov
hlt
ret
jmp
mov
shl
pop
lock
je
nop
cmpsb
test
xchg
dec
lea
mov
mov
fwait
cmp
and
adc
mov
and
jne
adc
popl
xlat
mov
ss
dec
movsl
out
mov
adc
loop
repnz
mov
leave
jae
ret
aam
jge
cmp
enter
xchg
sbb
rolb
pusha
mov
icebp
lret
test
cmp
jg
dec
lock
fisttps
bound
push
mov
das
iret
dec
adc
fdivrs
cmpsl
sahf
dec
push
jl
ja
daa
xchg
cwtl
add
and
cli
cwtl
jp
sub
and
shll
mov
fistpl
ror
in
fnstcw
or
popf
xchg
call
out
lcall
mov
or
in
push
xchg
es
iret
js
mov
movsl
stos
std
insl
lret
mov
mov
arpl
mov
daa
shrb
outsb
fldt
or
or
inc
pop
negb
insl
pop
or
shll
mov
pushf
test
push
lea
mov
push
ja
jecxz
sbb
test
inc
inc
mov
fstpt
int3
push
sub
mov
jno
lds
sub
push
test
icebp
jbe
mov
mov
mov
ret
icebp
andl
cltd
sbb
and
xchg
std
jnp
lret
loope
out
jns
fiaddl
and
push
jl
and
jns
cmc
or
adc
das
xor
imul
in
out
inc
or
dec
mov
push
andb
sbb
shrb
mov
hlt
popl
adc
mov
mov
jne
push
cmp
das
mov
adc
dec
lods
mov
mov
adc
mov
xchg
or
pop
xor
mov
bound
mov
mov
pushf
icebp
in
sub
inc
xchg
adc
loope
dec
jl
lods
lock
mov
fldcw
out
int
imul
sub
xchg
push
repz
pushf
popf
lret
nop
sar
enter
and
jecxz
into
out
xchg
jmp
sub
mov
mov
bound
int
and
inc
std
add
or
je
leave
fwait
aad
sub
cmp
cmp
movsl
and
pop
test
mov
mov
xlat
adc
mov
lods
adc
scas
push
add
es
repz
push
adc
sub
mov
and
dec
jge
fstl
pop
ret
scas
arpl
sub
push
into
inc
lods
or
in
jb,pt
xor
addr16
jns
or
cwtl
inc
cmp
pop
cmp
xchg
loopne
aaa
adc
or
push
xor
cmc
ficompl
andb
mov
dec
divl
dec
lods
xchg
sbb
adc
scas
mov
je
sbb
ja
mov
popa
fistps
sti
and
mov
sbb
in
adc
movsl
out
add
ret
imul
mov
js
cs
mov
xchg
cs
inc
jne
push
scas
mov
mov
insl
ja
lahf
jg
lret
out
shl
popf
mov
outsb
cmp
test
xchg
mov
push
fdivs
mov
sub
mov
repnz
sbb
inc
xchg
hlt
call
test
xor
inc
xchg
sub
cld
jbe
lret
movb
mov
testb
inc
and
lcall
or
push
inc
mov
xor
dec
sub
inc
adc
push
mov
js
jle
dec
test
pop
mov
imul
jg
cmp
iret
lods
pop
xor
xchg
adcl
xor
loopne
xchg
or
andb
sahf
in
mov
insl
pop
aaa
mov
xor
jb
ja
enter
insl
out
jmp
stos
jo
mov
pop
add
bound
dec
mov
sbb
sbb
pop
fdivr
test
ljmp
addr16
inc
movsl
and
and
adcb
xor
dec
xchg
adc
adc
jl
mov
push
xor
jg
xchg
std
jo
dec
test
lret
xchg
jb
in
xor
in
mov
adc
xchg
bound
jg
sbb
xorl
xlat
inc
insl
push
and
push
jl
and
les
sbb
adc
adc
or
daa
inc
mov
mov
push
cwtl
call
sahf
imulb
xchg
rcr
lock
xor
sbb
add
and
jns
daa
daa
ss
and
jle
ret
adc
push
fnstenv
sub
push
loopne
inc
test
mov
mov
dec
test
xchg
mov
cmp
aaa
sbb
mov
xchg
xorl
or
lahf
addr16
shl
jnp
mov
mov
xchg
xor
mov
dec
call
and
xor
pop
mov
mov
orl
push
arpl
jnp
imul
add
into
inc
loopne
push
xchg
cmp
in
and
rorb
dec
outsb
insb
pop
jns
sub
call
nop
mov
imulb
cmp
or
xchg
xor
lock
notb
incb
and
jne
sub
push
mov
mov
fwait
ljmp
sbb
aas
mov
jnp
sub
fidivrl
and
push
cmpl
push
xlat
and
cld
inc
inc
pop
insb
xchg
insl
out
mov
mov
into
pop
mov
xchg
jne
cmp
jo
jno
push
xchg
inc
jg
stos
xchg
xchg
jae
dec
fisttpl
push
stc
fucom
orl
mov
repz
nop
adc
imul
rorb
rcr
pop
pop
xchg
xchg
repz
daa
jbe
jmp
xchg
mov
push
dec
mov
jbe
dec
loop
cs
cli
ljmp
jg
pop
or
or
xchg
push
iret
xor
cmpsl
inc
push
and
xchg
cmpl
cmp
jb
fwait
dec
inc
xchg
or
maxps
inc
test
mov
adc
jns
jno
fisttpll
push
mov
or
or
xor
int3
scas
push
int3
cmc
mov
data16
xchg
dec
out
insb
or
pop
and
sbb
sbb
mov
and
mov
ret
aaa
repz
stos
das
pop
add
scas
dec
jge
pop
pop
xchg
jge
fnstcw
cmpsl
jbe
mov
inc
pop
jg
call
dec
cs
in
cmpsl
fdiv
popa
pusha
movsl
sub
mov
push
test
pop
mov
insb
in
aaa
adc
lods
int3
mov
mov
mov
mov
movsb
mov
sub
inc
hlt
or
aas
mov
les
out
fadd
shll
filds
xchg
or
dec
hlt
or
test
or
insl
popa
loopne
out
mov
scas
inc
leave
sub
sub
xchg
fidivs
imul
mov
jmp
push
mov
adc
out
and
mov
std
mov
pop
cltd
stc
rcrb
pop
xchg
ret
xor
sbb
mov
jbe
iret
pop
dec
sbb
or
jg
ss
mov
fadds
sbb
cld
outsl
cmp
xor
sbb
xchg
jle
arpl
mov
cmp
popf
xor
aad
out
call
scas
jae
aam
xor
ret
inc
cmc
fildll
lret
dec
faddl
adc
mov
rclb
sub
push
mov
pop
mov
fxch
sbb
lds
fstl
sub
mov
jo
jle
nop
ds
imul
pop
jne
outsb
push
fnstenv
mov
cmpsl
pop
and
test
fcompl
xchg
push
mov
test
push
sub
addr16
sti
js
sub
addr16
rorl
mov
sahf
add
lahf
cmp
fisubrl
mov
loope
ja
outsl
add
jbe
adc
mov
pop
add
ljmp
je
cmp
adc
imul
and
ja
xor
and
fs
data16
scas
flds
add
jo
cmp
ret
jmp
pop
stos
je
aad
pop
rcl
les
dec
arpl
mov
mov
lret
enter
scas
sahf
xchg
mov
mov
mov
mov
dec
mov
adc
and
pushf
xor
in
scas
inc
enter
outsb
jle
cmp
rolb
dec
loope
lods
lcall
dec
mov
add
in
aas
popa
arpl
adc
stc
insb
sub
push
outsb
pop
out
dec
mov
lea
lods
or
fisubrs
or
imul
add
mov
cs
adc
rcll
imul
mov
jmp
jae
jns
stos
aaa
lahf
push
pop
mov
test
or
push
mov
movsl
pop
mov
xchg
jp
adc
rcrb
mov
loopne
fistps
packssdw
out
sub
movsl
pop
jbe
xchg
fnstsw
push
add
jno
pushf
push
inc
add
cmp
cmp
imul
and
gs
dec
cs
cmp
sub
movsl
inc
inc
sub
stos
ds
icebp
pop
push
xchg
lods
and
mov
dec
stos
fidivrl
add
inc
lock
jle
in
jge
fstl
rcrb
imul
jae
divl
hlt
loope
out
inc
mov
imul
scas
inc
inc
sahf
jecxz
dec
cmp
cld
or
inc
cmp
inc
data16
cmovs
mov
mov
ret
mov
iret
mov
pusha
push
push
sbb
clc
insb
scas
sbb
or
lods
mov
mov
sub
sub
cmp
flds
cmp
push
add
lock
jns
rcll
push
xor
shrl
std
test
mov
fwait
out
mov
mov
xchg
popf
jl
cmp
sub
xchg
icebp
call
das
inc
pop
sub
popf
mov
popf
jp
cmpsl
int
adc
cwtl
aas
push
jne
mov
push
addb
call
xchg
pop
out
or
or
xchg
dec
popfw
jg
cwtl
adc
je
punpckhbw
mov
clc
stc
sub
jbe
mov
fs
pop
mov
xchg
dec
outsw
std
pop
popf
cld
jns
add
sub
pusha
jae
jbe
xlat
and
testb
shrl
mov
xor
mov
push
fwait
mov
incl
addr16
out
fwait
xchg
in
out
lret
inc
andl
mov
fdivr
icebp
enter
aam
push
sub
sub
add
out
jle
jo
sub
roll
inc
in
ficompl
dec
cs
mov
inc
push
sti
xor
jp
push
loope
mov
pop
js
lods
sub
sti
jnp
int
in
imul
leave
mov
clc
jge
xchg
cltd
es
cmpsl
fiaddl
and
jb
and
movsb
in
nop
aas
rcrb
cmp
or
mov
mulb
or
and
testl
in
and
out
xor
or
aam
mov
push
fs
std
std
sti
lock
add
add
add
cmpxchg
xchg
ljmp
xor
stos
jl
xchg
lea
sbb
xor
dec
aad
and
add
push
cmp
mov
fisubrl
sbb
insl
cmp
xor
mov
outsb
gs
add
popa
mov
bound
push
push
xor
iret
and
pop
jae
in
lods
icebp
push
adc
sbb
xchg
mov
imul
dec
jp
fs
push
faddl
mov
fucompp
in
adc
into
xor
js
cmp
sahf
pop
pop
fs
jmp
in
sbb
inc
in
stos
mov
adc
cmp
bound
push
sahf
xor
fs
mov
mov
loopne
lea
inc
cld
sub
shrl
push
push
out
cmpsl
jmp
daa
sub
mov
mov
addr16
cmp
mov
rol
dec
or
clc
jg
insl
pop
add
lcall
xchg
icebp
sub
addr16
imul
jl
xor
cmc
sbb
cli
mov
xchg
sbb
mov
lods
jb
xchg
mov
nop
shlb
xchg
aaa
into
test
xor
mov
movsl
push
clc
ret
shrl
or
sub
loop
sti
push
imul
push
daa
or
inc
es
push
inc
xor
repnz
rclb
pop
repnz
shlb
pop
nop
mov
stos
xor
dec
xchg
sbb
or
push
mov
or
stos
xor
mov
sub
shr
jbe
mov
dec
setp
or
inc
push
push
je
xchg
push
dec
cmp
xchg
lds
push
int
test
daa
inc
jbe
lods
movsl
or
lods
out
jbe
jae
jo
inc
or
fistpl
xchg
mov
pop
cmp
push
push
or
xorb
data16
aad
nop
sahf
cltd
stc
adc
dec
mov
iret
inc
imul
rcrl
sub
icebp
dec
out
adc
sti
pop
xchg
push
stos
mov
ret
lock
mov
sbb
xchg
mov
mov
repnz
dec
push
ret
xchg
xchg
or
add
cmp
add
sbb
sbb
outsl
sahf
loopne
pusha
xor
fiaddl
fisttpl
or
sbb
adc
mov
jnp
push
adc
pop
iret
sub
sub
test
push
sub
sub
outsl
rdtsc
test
pop
inc
lahf
fmul
orl
sub
scas
mov
cmp
or
jae
xor
addb
stc
xchg
js
pop
sub
in
mov
mov
mov
repz
addb
xchg
pop
sub
jge
or
out
jl
mov
in
int3
test
or
push
in
adc
or
mov
pop
mov
sahf
repnz
push
pop
out
sti
stos
push
push
cmp
jno
mov
push
in
or
jne
mov
nop
adc
stc
enter
dec
es
xchg
or
in
hlt
test
dec
push
xor
dec
or
jo
ds
fcompl
mov
xor
imul
mov
repz
ljmp
xchg
add
js
shrl
xor
pusha
dec
sbb
mov
pop
cli
mov
aas
nop
testb
lea
sub
mov
in
lods
iret
sbb
movsl
add
push
dec
and
and
mov
daa
dec
and
cwtl
jp
es
fimuls
add
mov
add
aad
lahf
iret
cmp
mulb
cmp
int3
shl
in
adcl
sub
or
pusha
fdivrs
fiaddl
out
in
add
enter
push
pop
xchg
jb
add
dec
jmp
pop
lods
jnp
cltd
outsb
sub
xchg
in
leave
stc
aas
pop
pop
rorl
iret
add
adc
sub
cmp
mov
or
out
inc
nop
cmpsl
dec
stc
push
and
push
negl
mov
sbb
add
sub
test
ja
and
loop
nop
push
loope
rep
sbb
sub
clc
incb
mov
jmp
ret
stc
das
rclb
rcrb
xchg
pop
xor
xchg
mov
pop
jnp
push
in
iret
fmuls
js
cld
sbb
pop
sbb
ret
mov
rclb
cmc
mov
imul
scas
and
mov
shrl
scas
jb
nop
sub
mov
ss
pop
or
je
jle
mov
mov
es
insb
push
xlat
xchg
fisubs
mov
mov
sub
jmp
in
mov
xor
xchg
leave
arpl
ja
add
sti
int3
push
data16
rolb
nop
aad
cmpsb
aas
scas
cmp
jae
sbb
dec
daa
mov
inc
cwtl
mov
xchg
sub
lods
mov
or
ficoms
cld
insl
xchg
push
mov
mov
cld
aas
dec
xchg
xchg
addl
aaa
imul
adc
in
lahf
push
cs
or
in
fs
adc
sub
sub
aas
mov
or
dec
clc
out
jbe
popf
test
mov
cld
push
sti
popa
cmpb
mov
je
xchg
lods
pop
ficoml
popf
iret
jo
and
pop
or
add
in
popa
mov
stc
pop
push
out
test
loop
cltd
sub
std
adc
outsb
pop
pop
loope
xchg
add
mov
inc
outsl
xchg
add
lock
fcomip
and
lock
rcrb
pop
fidivl
jno
mov
add
fld
cmp
shll
sarb
in
push
shlb
push
sbb
pop
xchg
pop
imulb
out
repz
shr
flds
xchg
into
loope
fs
cmpsb
dec
inc
lret
jl
in
dec
cld
jns
test
mov
xchg
test
jl
ljmp
repz
mov
rcr
popf
xor
aad
xchg
mov
mov
imul
movsb
sub
loop
loopne
into
adc
int
loop
jns
divl
mov
stos
aam
mov
xchg
cmp
cmpsl
iret
push
mov
lds
jle
stos
cwtl
add
int
int
out
lock
es
ret
inc
add
test
stos
ja
shr
and
negl
pushf
ret
inc
outsl
outsl
sub
xchg
out
or
stos
push
inc
push
scas
dec
inc
addl
test
outsb
clc
int
pusha
mov
mov
adc
cmc
inc
scas
imul
sub
pop
xor
fbld
addr16
out
loopne
push
popa
sub
hlt
out
mov
clc
std
adc
bound
cld
mov
inc
insl
sub
or
mov
push
xor
sbb
lods
lds
push
iret
xor
adc
mov
sbb
lods
or
pop
movsb
cli
stc
daa
or
bnd
adc
int3
mov
fsubr
push
pop
lds
xchg
jae
dec
mov
je
in
cltd
push
fucom
imul
xchg
out
cmp
mov
lods
push
mov
sbb
dec
sti
popf
push
fstps
sub
mov
fnsave
or
push
ljmp
imul
sub
orl
dec
dec
in
pop
xor
cmp
icebp
subb
cld
mov
int3
gs
outsl
int3
inc
add
adc
lods
cmp
xchg
inc
shrl
push
and
mov
mov
frstor
nop
adc
je
mov
idivl
jecxz
gs
filds
cli
push
adc
adc
lock
push
in
iret
mov
shrl
sub
movsb
inc
or
inc
je
and
clc
sub
pop
mov
xchg
adc
xor
dec
and
jae
aad
aad
and
push
xchg
lods
mov
or
jnp
mov
loope
insl
sub
xchg
test
dec
lods
bound
lods
fisubrl
les
loopne
je
fs
xor
lea
push
push
mov
push
push
or
xchg
test
mov
in
inc
pop
inc
jns
inc
cmp
or
hlt
dec
pushl
inc
mov
pushf
adc
mov
clc
inc
mov
push
repnz
test
int
lods
loop
mov
repz
testb
fisubl
and
sub
std
cmp
jns
mov
push
dec
inc
push
mov
fstpl
in
xchg
pop
push
scas
xchg
cmc
dec
cmp
push
or
imul
popa
mov
jg
clc
rcr
fdivl
push
inc
push
or
das
leave
mov
fadds
neg
pop
dec
cmp
lods
loop
int
dec
fbstp
je
loop
dec
fldt
incl
cli
xchg
cmpsb
or
es
push
scas
dec
and
decb
adcl
rol
xor
sub
fiadds
mov
aas
leave
into
into
or
out
divl
inc
jae
ljmp
pop
jb
mov
xchg
pop
lods
xor
scas
les
sbb
subl
dec
fidivl
mov
ljmp
test
imul
call
dec
mov
lds
lds
add
call
out
shlb
sub
pop
stc
popf
jmp
inc
into
or
or
out
into
ljmp
ss
push
add
dec
push
scas
pop
jp
filds
sarb
dec
pop
fdivrs
addb
fwait
xchg
inc
and
filds
ljmp
pop
dec
sti
jmp
aam
push
jns
cmovne
ss
mov
mov
in
sbb
sbb
xor
in
adc
ljmp
cmpsl
repnz
xchg
or
or
popa
add
lret
add
push
clc
cmp
rcrl
xlat
loopne
nop
dec
fdivl
xchg
cltd
mov
jle
push
mov
outsl
cld
lret
loop
sbb
mov
jno
mov
push
notl
xor
aad
imul
mov
sbb
outsl
testb
lds
subb
jns
in
cwtl
mov
cltd
mov
sub
adc
pop
xchg
cmp
jecxz
repz
and
loope
mov
mov
lock
in
subl
xor
add
inc
lods
in
roll
clc
sbb
mov
lret
test
roll
test
push
xlat
hlt
jecxz
xor
mov
repnz
fucomip
sub
mov
mov
xchg
sub
mov
adc
mov
outsl
add
xchg
ljmp
xlat
insb
testl
cmpsb
xor
or
loop
jae
push
sub
jb
sub
xor
pop
add
jp
jl
imul
or
cld
adc
lods
xchg
or
or
shlb
rolb
cmp
sarb
fidivrs
in
and
mov
dec
sub
cli
push
pop
mov
insl
push
lods
sub
nop
mov
gs
loop
orb
mov
setno
out
add
xchg
add
cltd
pop
and
pop
mov
xor
sahf
into
sahf
dec
scas
mov
sahf
pop
clc
int
repnz
and
sub
clc
lds
stc
int
pusha
scas
popa
ret
xor
sti
adc
push
add
cmp
mov
push
pushf
and
aad
push
sbb
movsl
and
mov
jecxz
test
repnz
mov
imul
sbb
insb
stc
or
cli
jnp
dec
jns
mov
mov
in
aam
enter
xor
and
push
adc
mov
hlt
xchg
aas
movsl
mov
inc
incb
sahf
subb
cmp
repz
test
add
lcall
arpl
stc
mov
pop
mov
xlat
ds
mov
lods
xlat
daa
inc
push
hlt
and
pop
aad
and
out
lcall
aam
xor
push
in
addb
fs
cmpsl
cs
xchg
imul
lahf
jp
out
jmp
add
aam
lret
std
shrl
clc
or
mov
cmp
dec
pop
cmp
push
rcr
dec
sub
inc
and
push
jb
rorb
mov
mov
cmp
daa
or
aad
mov
push
xor
mov
inc
aam
add
dec
out
jecxz
pop
or
jb
mov
inc
ljmp
xchg
mov
inc
cltd
push
dec
jge
movsl
pop
dec
sub
lret
repz
mov
lock
addr16
or
test
mov
int3
add
or
out
xchg
sbb
jl
testl
xchg
outsb
adc
sbb
mov
leave
leave
or
xor
test
test
rorb
das
add
jg
mov
push
xchg
into
arpl
xor
xor
pop
rcrb
mov
pop
out
mov
mov
cmpsl
gs
leave
sbb
adc
mov
aaa
subb
ljmp
mov
pusha
mov
xor
mov
js
cmpsb
stos
and
data16
stc
sub
cmp
mov
and
cmc
scas
mov
std
ds
cmp
push
mov
je
dec
std
out
mov
jne
leave
or
ja
lock
test
sbb
mov
loopne
mov
xor
and
sub
cld
daa
mov
enter
pop
stc
cld
mov
dec
xlat
das
mov
mov
xchg
rcr
loope
pop
pop
or
dec
jg
xor
cmp
pop
mov
leave
push
mov
pop
push
xchg
inc
and
push
mov
pop
pop
jne
adc
pop
xchg
xchg
shll
out
fisubl
xor
movsl
dec
or
imul
lods
fwait
shrb
movsl
push
ret
push
dec
cld
adc
js
or
push
ret
faddl
dec
test
add
pop
dec
inc
popf
pop
mov
dec
sub
pusha
aas
insl
and
pop
test
fbstp
jle
lahf
divb
insb
dec
pop
aas
push
iret
xchg
sub
jb
sbb
fwait
int
or
pop
jne
scas
mov
or
push
aam
cmp
lret
xchg
rclb
out
addr16
pop
add
adc
add
and
jns
sbb
push
mov
add
dec
dec
lods
inc
jno
dec
push
push
pop
add
aad
jmp
ffreep
roll
dec
call
sbb
icebp
pusha
shlb
movsb
cmp
push
push
cwtl
in
pop
pusha
push
dec
xor
iret
insl
clc
sub
pop
xor
aad
loope
mov
int3
dec
mov
cmp
push
and
xor
jge
add
adc
cmp
inc
xor
pop
and
pop
xor
nop
addl
dec
jmp
add
sbb
mov
and
dec
pop
jge
cmp
fs
test
adc
sahf
dec
pop
in
mov
cli
dec
sub
xchg
sbb
dec
movsl
lock
sbb
pop
test
ja
xor
test
xchg
push
mov
sub
outsb
sbbb
mov
mov
inc
clc
in
cmp
jns
xchg
cmpsl
dec
or
sbb
or
sub
into
jp
jne
dec
cli
js
cmc
cmpb
jnp
add
clc
je
mov
dec
sub
idiv
test
jb
lods
jne
imul
cmpl
hlt
pop
int
sbb
hlt
mov
rclb
fidivrs
out
out
xlat
into
jge
test
jno
es
and
stos
icebp
sarb
xor
add
mov
pop
jmp
inc
inc
cmp
das
inc
cmp
jbe
adc
std
sub
rcrb
mov
mov
fidivl
gs
rolb
inc
loop
mov
push
sbb
mov
xchg
jae
sub
stc
stos
pop
adc
scas
fmull
push
sub
cmp
repz
scas
clc
shrb
push
pop
jl
rol
daa
shrl
js
outsl
js
jmp
arpl
push
shrl
fmul
sti
jl
in
je
lea
inc
cmpsl
mov
jmp
shl
inc
and
lret
movsl
in
add
sbb
ss
mov
mov
sbb
lea
mov
pop
and
push
jecxz
pop
mov
jae
jo
fstp
adc
push
lock
mov
inc
xor
repz
sub
sti
dec
mov
mov
pop
or
and
xlat
cwtl
jmp
test
mov
pop
adc
cmp
push
dec
dec
cwtl
loopne
dec
add
popa
outsb
or
outsl
xchg
pushl
inc
and
jnp
outsb
mov
cmp
int
mov
dec
mov
lods
push
icebp
adcb
cmp
das
and
xchg
push
jp
bswap
cmpsb
mov
outsl
add
inc
push
test
sub
mov
sub
mov
sub
inc
xchg
sub
pop
fs
test
cwtl
push
lea
inc
inc
xchg
add
rolb
pop
lret
add
push
push
pop
test
and
dec
mov
ja
mov
mov
push
add
test
push
bound
out
pop
repz
out
js
fisttps
xor
adc
addr16
lret
lret
and
int
clc
and
arpl
adc
aaa
fstl
jno
negb
es
sbb
subb
cltd
add
aaa
jns
arpl
out
rorb
cmp
pushf
add
movsl
pop
mov
jb
or
pushl
mov
pop
lods
lcall
push
outsl
or
jle
push
add
mov
stos
mov
cwtl
scas
xchg
je
out
push
int
mov
sbb
bound
inc
mov
sahf
aaa
push
lods
jns
ljmp
test
lret
dec
jnp,pt
stc
dec
and
pop
xchg
lcall
sbb
aam
xchg
or
dec
cmp
push
push
lea
pop
mov
pop
or
xchg
loopne
inc
data16
xor
mov
mov
sar
mov
push
leave
jmp
pop
mov
pop
xchg
es
in
in
aas
arpl
adc
mov
fbstp
push
or
outsl
mov
stos
ds
rcrb
mov
mov
add
or
pop
push
push
cmpl
or
mov
pop
das
mov
dec
hlt
outsb
pop
lcall
or
enter
adc
jmp
js
comiss
dec
shlb
nop
push
or
xorl
xlat
andb
adc
mov
and
ja
insb
inc
es
add
daa
rcrb
xchg
xchg
mov
mov
lea
insl
push
outsl
daa
sahf
fucomi
xchg
jo
loope
jl
dec
fldcw
mov
pop
sbbl
mov
push
lods
stos
lahf
sbb
pop
dec
xchg
dec
addr16
sti
push
xor
push
ret
cmp
cmp
xchg
fisttps
shlb
sub
xlat
push
xchg
std
adc
sub
test
inc
mov
adc
or
loopne
nop
cmp
push
mov
pop
push
mov
stos
les
dec
or
cmp
push
mov
rcr
mov
sbb
mov
cld
xor
aam
sbb
nop
pop
in
decb
cld
nop
mov
int
push
push
pop
shrl
insl
es
sbbb
popa
fst
ret
xchg
xchg
addr16
push
loopne
mov
repz
jnp
xchg
cmp
aam
sub
dec
xor
xchg
mov
ja
test
insl
pop
or
sbb
lret
aaa
fwait
jp
bound
push
movsb
pusha
movsl
ret
cmpsl
push
pop
addl
lods
jns
aad
sbb
test
mov
xchg
mov
nop
mov
shlb
loope
add
mov
das
loope
mov
loopne
sub
xor
pusha
mov
ret
and
movsl
xor
cmp
pop
add
mov
push
imul
ljmp
sub
lock
test
sti
xor
hlt
mov
or
imul
test
sahf
xchg
sbb
data16
sbb
mov
not
loop
loope
insl
sub
jbe
icebp
xor
loop
xchg
cmp
mov
jg
jne
imulb
sbb
ret
xchg
leave
sbb
push
sbb
or
inc
jbe
add
into
mov
sti
pop
aaa
mov
sbb
xchg
lods
ret
into
and
adc
jae
pop
push
scas
xchg
mov
mov
and
inc
pushf
add
cmp
clc
insl
or
dec
mov
mov
sub
xchg
cmp
jmp
xor
frstor
out
push
rcll
mov
lds
push
js
mov
fbstp
adc
push
mov
sbb
add
lcall
push
xchg
ds
sbb
sub
sbb
cmp
std
cmp
cmc
or
ljmp
mov
mov
push
cmp
stc
out
sti
xchg
push
push
adc
xchg
xchg
rorb
flds
sti
and
push
push
lret
mov
adc
cmp
or
fcmovbe
mov
and
sbb
aad
stos
add
fcomip
loop
or
lea
dec
dec
call
lock
shll
lock
push
or
and
pusha
inc
mov
push
daa
fs
jge
or
pop
movsb
jo
jae
jg
loopne
mov
sbb
lret
cmp
or
jbe
cli
hlt
lods
es
sbb
mov
mov
mov
movsb
loope
stos
ljmp
pop
aam
inc
iret
scas
xchg
cmp
into
int3
push
add
xchg
dec
addb
ja
mov
push
ret
jmp
fs
imul
inc
gs
xlat
sti
test
lea
lret
push
fcmove
and
or
mov
lds
and
inc
pushf
fadds
daa
int3
or
es
scas
mov
ljmp
adc
mov
mov
imul
aad
data16
cwtl
sbb
out
scas
cwtl
jle
or
mov
jl
addl
mov
dec
jno
dec
icebp
das
and
and
push
adc
pop
inc
xchg
jecxz
cmp
shlb
scas
aam
jae
lods
and
dec
mov
gs
fadds
int3
mov
fnstsw
scas
insl
daa
xchg
fwait
cmp
std
std
test
pop
pop
push
dec
fldl
sbb
pop
push
in
mov
cmp
std
cmpsb
mov
xchg
test
ret
or
mov
xorb
imul
incb
push
mov
xlat
dec
sarb
push
test
sub
jbe
lcall
add
push
jge
dec
dec
mov
adc
aam
sahf
cmpb
adc
mov
cmp
mov
movsl
mov
out
daa
mov
lds
lret
rcl
sbb
dec
and
mov
out
or
push
mov
mov
or
cmc
lret
fldcw
iret
inc
mov
out
call
dec
mov
push
test
aam
popf
dec
sahf
mov
fs
push
add
mov
scas
push
xchg
mov
xor
repz
xchg
test
mov
xor
inc
orb
hlt
pushf
aas
add
fsubr
add
or
jg
xchg
punpckhwd
jmp
stc
sbb
pop
mov
loopne
sub
cmp
xor
sub
in
jg
push
inc
sub
push
push
xor
aas
mov
shr
jecxz
inc
in
hlt
repnz
addr16
arpl
negb
lds
dec
test
mov
popf
push
sbb
hlt
ret
in
xor
jle
outsl
xor
outsb
push
sub
sar
cld
and
and
inc
test
mov
push
push
roll
subb
xor
outsb
push
sub
stos
dec
scas
xlat
loope
insl
fdivrl
cld
jge
pop
insb
int
and
ss
mov
es
insl
inc
inc
mov
cli
jle
arpl
pushf
and
fidivrl
int3
pop
idivb
sbb
mov
stc
inc
adc
xchg
xor
aas
mov
lret
test
out
mov
cs
int3
mov
sti
loopne
push
mov
sub
xorb
sub
jae
sbb
cmpsl
pop
pop
dec
les
push
sub
nop
stos
nop
sarl
push
jo
jge
add
pop
mov
clc
push
imulb
out
sub
push
stos
movsl
fsts
add
shll
daa
inc
mul
icebp
inc
push
lahf
pop
or
jno
loop
lea
inc
or
sahf
pop
int
or
sub
jnp
xor
sbbb
xchg
pop
sub
xor
sub
sahf
ficompl
dec
mov
sub
inc
add
xchg
xor
loope
mov
leave
ljmp
fsubrl
sbb
push
data16
mov
xchg
xchg
mov
mov
les
dec
and
sub
gs
dec
fmul
sub
mov
stos
or
iret
cmp
imul
mov
cmp
push
xor
in
adc
or
subb
lret
adc
jecxz
sbb
mov
in
adc
jno
pop
sti
mov
aad
pop
and
imul
mov
dec
xor
pop
enter
jnp
mov
cmpsb
or
lea
in
mov
pop
ds
cld
sub
pop
dec
pop
call
sub
sti
jbe
stc
nop
jge
leave
mov
in
test
les
cmp
cmp
and
pop
xor
in
clc
jbe
ja
sbb
push
stos
sub
fstpt
pop
cmpsl
movsb
cmp
movb
mov
mov
mov
mov
adc
jo
cmp
jb
negl
xchg
int
sbb
pop
flds
xorb
pop
arpl
add
and
dec
fwait
mov
mov
and
out
xchg
nop
inc
sub
add
out
mov
jg
es
inc
xor
outsb
aaa
fwait
jbe
popf
mov
das
adc
ja
cmp
sahf
or
and
xchg
in
cmovge
lret
dec
push
sub
mov
fmuls
cmc
push
orb
lret
sub
push
mov
into
fdivrp
sbb
push
sbb
pop
cs
jns
sbb
sbb
adc
add
pop
mov
pushf
mov
push
pop
nop
bound
push
in
inc
jmp
hlt
lcall
jp
mov
sahf
leave
call
push
enter
dec
iret
sti
jmp
pushf
je
mov
jmp
aaa
bound
cld
sahf
cld
cmp
popa
mov
mov
mov
mov
push
mov
shl
jbe
ret
push
seto
gs
dec
push
push
mov
aas
test
mov
inc
xchg
sbb
jmp
dec
testl
hlt
jb
mov
int3
mov
and
adc
jbe
pop
das
and
sub
push
lcall
packssdw
inc
xlat
mov
inc
fbld
stc
sub
fbstp
into
aam
fisubl
test
mov
lret
cltd
pop
test
ljmp
comiss
rorl
scas
sub
add
xor
xchg
rclb
and
shrl
movsl
mov
dec
divb
mov
push
and
in
xorb
sub
jnp
loope
data16
xchg
xor
fneni(8087
in
xor
enter
test
pop
test
mov
inc
sti
and
push
inc
addr16
outsb
lret
pop
mov
movsl
cmp
leave
sbbl
addr16
sub
push
xchg
scas
sbb
loope
into
bnd
fildl
std
dec
fmull
push
mov
gs
out
push
or
fwait
icebp
jl
mov
fnstsw
adc
pop
pop
int3
mov
mov
mov
push
in
sbb
xchg
sbb
subl
and
ret
push
stos
push
mov
nop
outsl
scas
push
xchg
scas
and
loopne
pop
and
xorb
idivb
push
sti
dec
mov
pusha
xchg
nop
adc
cltd
lahf
rorb
lods
or
test
and
pop
lods
out
push
hlt
pop
or
push
jbe
sub
push
lea
loop
stos
dec
cmpsb
xor
rcrl
aas
push
push
pop
xchg
and
sub
sbb
js
dec
cmp
sub
cmpsl
cmp
jb
push
lahf
lcall
push
int
clc
push
add
fistps
int
xchg
push
in
outsl
pop
pop
cmpsb
mov
in
push
adc
cli
adc
addr16
scas
or
pusha
mov
test
mov
int
inc
scas
mov
test
jecxz
sub
jmp
rol
shl
add
dec
int3
mov
ret
and
push
dec
iret
popf
popf
inc
lcall
rclb
mov
int
je
nop
push
into
ss
pop
add
cmpsb
lahf
mov
testb
and
insb
cmp
push
jg
test
push
out
rorl
ret
mov
jae,pn
xchg
sbb
push
lea
outsl
cwtl
lea
mov
add
cmp
fbld
add
inc
mov
or
out
loope
push
sub
test
fisubrl
orl
sbb
sbb
cmpb
mov
jge
push
mov
sub
sbb
jle
nop
mov
enter
jne
or
add
or
int
add
nop
aaa
std
sarb
sbb
push
test
test
in
inc
insb
sbb
xchg
leave
bound
push
aam
ret
jecxz
out
push
adc
and
int3
jbe
push
scas
jl
jae
jmp
shl
imul
call
popa
testl
test
sub
int
cwtl
sbb
leave
pop
in
lds
inc
dec
lcall
cmp
mov
movsl
fmuls
or
xor
add
data16
dec
cmp
cmp
push
push
add
sub
leave
inc
sub
pop
sub
sbb
out
mov
cltd
jg
out
repz
call
fdivl
jbe
movsb
xor
popa
jmp
nop
js
ffreep
nop
test
cli
inc
xchg
sti
adc
push
iret
jge
gs
sub
shr
sbb
lea
or
xchg
xor
lret
sbb
in
jg
push
push
lea
xor
mov
cmp
mov
push
aad
push
repz
lock
xlat
negl
pop
xor
jbe
pushf
sub
aaa
fisttpl
repz
jo
aad
lods
dec
adc
lea
rcl
lea
loop
mov
push
push
lds
dec
mov
xchg
lock
push
mov
mov
sbb
jle
clc
mov
jb
and
scas
pop
pop
jne
or
das
mov
xor
imul
xor
pop
or
jns
stc
jmp
fld
imull
pop
fbstp
je
xchg
nop
cmp
popf
pop
cmp
push
lahf
xor
sarb
les
jp
js
adc
mov
mov
jbe
pop
sbb
nop
adc
cmp
push
mov
cwtl
mov
mov
lods
xchg
cmpsb
xor
roll
or
push
push
jno
dec
hlt
push
and
ljmp
jb
dec
xor
pop
pop
sub
daa
and
xchg
pop
inc
inc
sbb
dec
jle
fsubrs
out
mov
js
jp
cmpsl
push
cmp
pop
ja
xor
adc
loopne
push
fdivr
rcrl
syscall
in
xchg
insb
mov
kmovw
loope
mov
movsb
nop
pop
loope
arpl
fsub
daa
cs
fstl
outsl
iret
mov
loop
or
cmp
pop
pop
cmp
fs
stos
adc
pop
out
testl
mov
cli
sub
sub
mov
push
fwait
mov
lcall
inc
adc
pusha
stc
out
js
mov
movsb
cs
loop
fstps
inc
xor
repnz
inc
fidivl
addb
and
testb
pop
or
mov
fs
and
inc
sub
add
mov
lret
pop
nop
lret
daa
adc
je
je
cmp
jns
push
arpl
shll
cs
hlt
xchg
mov
lahf
ds
lock
jns
fnstenv
test
or
push
push
lea
xchg
lock
int
cmp
sbb
lds
sub
xor
lahf
dec
andb
fdivl
mov
mov
mov
adc
test
sbb
in
imulb
adc
push
and
icebp
inc
std
mov
mov
mov
mov
mov
shlb
mov
or
mov
iret
sub
jecxz
push
mov
pop
sbb
int
adc
mov
inc
popf
pop
out
lea
and
xor
and
cmc
movsb
dec
scas
lods
rorb
jb
dec
push
es
shlb
addr16
push
inc
sbb
leave
mov
xlat
stc
xorb
fwait
push
out
fistpll
and
xchg
in
scas
insb
mov
dec
dec
int
loop
je
in
ds
cmpsb
repnz
call
aas
jl
aam
repnz
sub
ja
in
lds
sti
push
xchg
aad
jecxz
sbb
dec
call
fistps
test
mov
dec
cli
sub
inc
mov
jge
fs
inc
and
in
sub
mov
lea
out
xor
enter
pusha
adc
cmp
mov
adc
sbb
inc
aas
mov
or
bound
dec
insl
push
out
je
lods
clc
subb
std
lods
cmpsl
aad
loope
jecxz
sub
xor
and
lods
pop
jge
jg
hlt
mov
cli
cmc
fwait
cmp
jmp
or
push
sbb
int3
dec
jge
add
cmp
ud1
pusha
stos
testb
xchg
pop
inc
ds
es
jecxz
mov
ds
add
cs
cwtl
sub
xor
pop
je
jnp
mov
and
sbb
push
mov
jne
mov
inc
sbb
mov
es
dec
loopne
xchg
js
push
jp
adc
cwtl
cmp
dec
orb
stc
pop
sub
mov
mov
mov
and
pop
bound
mov
pop
pushf
dec
xchg
pop
push
cld
pop
xchg
pop
cmp
sahf
stos
lods
and
div
insb
test
add
imul
shll
pop
dec
mov
stos
sbb
out
insl
cmp
mov
iret
movb
mov
flds
sub
dec
fmull
insb
fsubrl
cwtl
jmp
pop
nopl
stc
mov
out
testl
fcoms
push
and
les
mov
lahf
xor
iret
jle
mov
mov
pop
push
leave
push
mov
stos
jg
inc
sbb
into
lock
mov
das
sbb
rcrl
imul
pop
dec
insl
shlb
xchg
shr
adc
mov
aad
or
push
pop
sbb
lock
jmp
rcr
cmp
fsubrl
pop
shlb
mov
aam
fmuls
out
fwait
popf
pop
pusha
mov
loop
cwtl
adc
outsb
jnp
sub
cmpsb
or
push
iret
xchg
inc
les
repnz
mov
cwtl
iret
adc
test
jo
out
in
mov
cmc
lcall
inc
out
dec
add
arpl
notl
push
jns
push
mov
and
xchg
mov
xchg
icebp
sub
pop
mov
dec
hlt
flds
xchg
add
mov
inc
fbld
scas
loope
not
or
std
fnsave
mov
or
jno
in
dec
sbb
gs
or
test
xchg
fs
idivl
mov
add
and
mov
test
pusha
test
outsl
jne
mov
mul
aas
xchg
lock
out
js
mov
sbb
xlat
sub
sub
xchg
pop
mov
mov
outsb
rcpps
xchg
mov
add
sub
std
or
inc
pop
inc
std
xor
nop
in
fs
add
lcall
push
das
cmp
stos
or
push
pop
adc
xchg
and
mov
aaa
outsb
mov
jbe
stos
mov
mov
sahf
popf
aas
xchg
dec
fsubrs
cmpb
fldt
adcb
rorb
xchg
cmpb
sbb
push
push
or
les
pop
lcall
cmp
xchg
mov
sub
adc
or
ja
inc
fsubl
sbb
mov
mov
fisubl
ret
sub
out
or
nop
or
iret
jbe
aas
sub
fcmove
mov
and
mov
les
out
andl
push
xchg
mov
dec
imul
addl
daa
shlb
or
jp
popf
js
xor
sbb
les
jp
jg
sahf
push
lods
hlt
rcll
inc
cmpsb
divb
inc
rolb
das
ljmp
les
int3
lods
xchg
stos
mov
mov
mov
or
lahf
mov
outsb
es
pop
popf
jp
fiadds
data16
fs
mov
ja
popa
shr
out
cmp
dec
movsl
push
xor
inc
xchg
pop
mul
jbe
rcrl
dec
ss
outsb
in
rclb
gs
aas
and
xchg
test
xor
jae
int3
xchg
cmp
add
pop
jb
out
mov
enter
sbb
sub
in
data16
lret
int3
cmp
daa
jle
dec
push
jbe
nop
jns
jb
dec
mov
mov
data16
stc
arpl
inc
out
xlat
movl
push
das
cmp
push
or
xchg
arpl
sti
mov
or
lret
push
pusha
inc
or
inc
movsl
fwait
pop
ss
push
fmuls
btc
or
rcll
or
popf
incb
adc
jp
or
push
push
xchg
sub
repz
jle
cmp
outsb
subl
and
dec
cld
shll
stc
jmp
sbb
xlat
ja
test
es
sub
sub
sbb
not
test
outsl
jae
pop
pop
xor
into
popf
adc
inc
push
push
sbb
and
movsl
sti
ret
pop
das
adc
fs
mov
jecxz
sbb
pop
out
pop
mov
dec
sarb
mov
daa
in
xor
sub
push
or
add
movb
aas
inc
and
enter
lcall
xchg
loop
mov
stc
or
cmp
sub
xlat
mov
adc
xor
cmc
out
mov
repnz
jb
dec
jb,pn
push
inc
sub
or
dec
mov
mov
es
outsl
gs
mov
int3
test
int3
jge
dec
fisubrl
dec
xor
pop
mov
iret
shll
mov
insl
dec
jge
xchg
gs
or
je
cld
stc
dec
xchg
fucom
dec
and
test
inc
stos
or
sarb
mov
vunpcklps
out
rorb
ja
cmp
mov
mov
or
int3
or
inc
movsb
in
test
sbb
push
mov
push
pop
rolb
lret
popf
pop
push
dec
xor
push
dec
xchg
outsl
jmp
repnz
les
jl
pop
bound
lods
jl
add
addl
cmp
inc
cs
mov
mov
mov
iret
add
fsts
inc
popa
mov
xor
inc
jbe
rorl
in
rclb
aad
mov
imul
cltd
std
push
inc
in
cmc
xchg
cld
cltd
lock
lods
movsb
cmpsb
arpl
dec
lcall
mov
sub
add
pop
mov
sahf
mov
pop
jmp
inc
fs
jnp
pop
je
and
lahf
mov
mov
mov
mov
xor
das
sti
mov
mov
or
rol
adc
xor
ret
das
ret
cmpsl
jmp
xbegin
and
push
mov
xchg
push
xor
sub
jle
ret
cmp
clc
aam
xchg
inc
inc
jmp
and
cmp
adc
ret
aad
sub
mov
add
jp
leave
xor
lock
testw
cmpsb
add
push
mov
fidivs
pop
test
inc
sub
aam
dec
addl
cmp
dec
aad
shr
addr16
cmpsl
in
jbe
rorb
sbb
push
sub
test
adc
add
mov
scas
adc
test
push
sbb
jge
sub
fildll
lock
lock
test
mov
aad
or
pop
mull
cmpsl
lcall
push
inc
aas
popf
pop
mov
sub
or
mov
mov
mov
sbb
mov
pop
inc
mov
mov
jbe
daa
pop
and
pop
fists
xchg
and
xor
dec
push
outsb
test
shrl
ret
push
mov
mov
mov
xchg
int3
je
adc
sbb
cmp
cmp
jg
xorb
ljmp
lret
pop
loop
jns
repnz
dec
mov
js
test
and
mov
addr16
mov
aas
dec
jnp
pop
loope
cmp
mov
mov
push
fldl
int3
pop
lods
out
shlb
cld
pushf
inc
cs
mov
and
cli
sub
pop
push
and
imul
stos
adc
cs
aaa
jbe
mov
dec
roll
xor
out
sbb
inc
jns
dec
cli
imul
fsts
inc
cmp
cmp
stc
cmp
dec
ficoms
jl
cwtl
in
cltd
mov
xchg
mov
cmp
rolb
or
push
mov
mov
lock
js
sub
push
mov
cld
mov
fsubs
sbb
xchg
and
and
into
mov
iret
adc
loop
popf
scas
adc
lret
leave
cmpl
fwait
sahf
jo
aam
out
fdivp
addr16
into
in
push
dec
xorl
pop
xchg
xor
test
mov
sbb
movsbl
adc
icebp
and
push
iret
adc
pop
cmp
mov
cmpsl
stos
pop
dec
or
dec
mov
pop
fst
mov
ljmp
push
mov
popf
in
add
clc
dec
lods
test
sahf
movsb
dec
lea
dec
mov
jbe
push
mov
dec
xor
cltd
hlt
cmpsl
dec
sarl
inc
cmp
dec
dec
mov
into
push
adc
mov
xchg
and
andl
sub
xor
jge
outsl
xlat
fsubs
sub
rcrl
out
cwtl
popf
xchg
add
inc
lret
xchg
and
jnp
jns
dec
iret
cmpsb
dec
sbb
xchg
jl
mov
scas
sbb
rcll
mov
das
aaa
mov
jp
lock
pushf
call
xchg
in
push
adc
jp
std
mov
shlb
shlb
inc
arpl
shrl
jb
cmpsb
dec
loope
dec
cli
xchg
mov
mov
js
int3
lds
push
into
cmp
push
xchg
fidivs
icebp
mov
add
les
jl
sbb
es
fnstenv
and
or
imul
int3
int3
out
jmp
mov
jns
mov
insl
dec
xor
stos
inc
out
dec
ss
inc
or
cmpb
xor
sub
jbe
sarb
lods
inc
or
push
mov
lahf
ret
mov
mov
jl
and
fsts
idivb
push
in
mull
cli
adc
loop
push
xor
push
xor
inc
xor
jae
notb
xchg
inc
sbb
aam
cmpsb
fbld
test
xchg
adc
dec
insl
push
sub
pop
or
fsubl
mov
xor
push
mov
and
pop
sarl
cld
movsl
or
enter
pushf
addl
insl
leave
fdivp
push
repz
dec
movsl
add
rolb
lret
scas
roll
and
or
dec
adc
scas
cmp
in
sbb
test
add
xchg
push
pop
in
mov
js
xchg
sbb
jns
mov
fs
aas
push
cmpsl
push
mov
les
data16
jbe
dec
push
aas
das
jge
mov
push
adc
mov
fwait
cmpsb
rsm
inc
push
loope
lea
sbb
pushf
ljmp
jno
fnsave
xor
xor
jmp
nop
int
pop
lret
lret
mov
outsl
subb
or
xor
mov
lret
adc
jg
stc
sub
lcall
sub
cmp
add
adc
lret
add
icebp
out
xchg
pop
pop
jno
test
and
enter
push
mov
sbb
nop
mov
stos
sub
dec
cld
push
or
dec
inc
sub
int
inc
jp
pop
jne
sub
dec
xchg
data16
push
cwtl
and
out
test
arpl
xor
mov
pop
les
enter
data16
pop
fwait
jb
sbb
lahf
xchg
fabs
popf
mov
mov
stos
and
push
inc
cmpsl
or
repz
push
xchg
mov
call
add
arpl
jg
adc
adc
test
ljmp
imul
xor
in
inc
inc
cwtl
add
adc
mov
or
out
push
into
data16
pop
sub
adc
dec
jecxz
inc
fidivs
cmp
movsl
mov
hlt
aam
adcl
mov
cmp
outsl
rcl
sub
jl
fwait
scas
cmpsl
sbb
pop
ret
push
stos
movsb
cltd
jo
pop
jmp
pusha
inc
pop
pop
jmp
add
push
scas
aad
xchg
mov
inc
push
push
xchg
pop
pop
fiaddl
sub
or
push
mov
shl
jns
mov
int
dec
mov
enter
sub
cmc
inc
mov
add
jns
and
pop
jns
jne
add
jb
test
cmpl
cli
insb
sub
test
mov
xchg
lahf
cmpl
mov
push
pop
xchg
popf
push
pop
mov
int
jne
adc
push
test
sahf
rclb
jge
push
or
shll
fdivl
cli
or
jg
into
and
loopne
pop
mov
pop
insb
or
ret
pop
popa
adc
fiadds
mov
fadds
je
jbe
mov
mov
pop
and
test
cmp
mov
movsl
push
shll
push
adc
xchg
sti
lods
rol
adc
mov
shlb
fldenv
aad
stos
into
dec
aad
sbb
jne
lods
popl
fistpl
enter
add
and
roll
adc
add
push
cmpps
jecxz
cli
mov
mov
leave
enter
pushf
mov
xchg
jns
add
jg
fldl
leave
pop
popf
fdivr
mov
xchg
scas
adcb
imul
jae
popa
aaa
jle
data16
rorl
mov
ret
imul
out
dec
pop
pop
idivb
ret
inc
hlt
je
and
and
frstor
or
sarb
xchg
push
loop
pusha
mov
lock
pusha
or
add
push
imul
into
loop
out
fidivrs
das
mov
test
popl
leave
adc
icebp
daa
inc
sti
add
lods
jnp
rcl
mov
sub
push
in
lods
sub
or
push
shlb
mov
jmp
lock
in
std
adc
adc
movl
or
adc
pop
cmp
cltd
inc
shlb
out
dec
ret
mov
add
mov
stc
dec
xchg
ss
dec
mov
rcll
sub
cltd
lret
xchg
or
inc
in
insl
out
incb
dec
sub
das
cmp
sub
loope
negb
sahf
mov
movsl
je
aas
jg
add
sbb
mov
sub
mov
jno
cmp
aas
insl
mov
and
loop
leave
fidivrl
mov
test
and
push
sahf
pop
hlt
rorl
lret
cmp
fdivrp
sub
jecxz
adc
xchg
into
cmc
ret
shr
dec
mov
xchg
mov
fsubrp
fldt
stc
pop
push
and
jge
movsb
rol
cltd
mov
mov
pop
iret
lret
insl
adc
test
mov
sahf
inc
inc
jne
push
push
push
mov
aad
imul
add
rcr
hlt
icebp
mov
jae
std
adc
lret
push
es
pop
imul
lods
mov
pop
fdivrs
add
icebp
pop
or
testb
faddl
and
arpl
fnstcw
div
lods
fs
jo
in
daa
mov
xchg
lds
call
data16
or
cmc
xchg
add
rolb
jl
adc
or
adc
push
inc
mov
loope
popf
cmpsb
int3
push
dec
push
gs
lcall
cltd
dec
mov
xchg
mov
mov
ss
inc
push
setle
push
mov
ja
or
push
call
testl
xor
in
cwtl
movsl
sbb
add
add
sbb
popa
inc
addr16
cmp
push
inc
icebp
iret
inc
lahf
push
mov
push
rorl
mov
addr16
cmp
in
fwait
pop
pop
sbb
call
inc
fldl
and
nop
inc
inc
or
inc
repz
shl
lret
push
hlt
cmp
aad
in
popa
daa
js
into
jo,pt
in
cli
push
jb
pop
sbb
outsb
lret
and
lret
stos
lea
and
outsb
inc
in
xor
mov
cmc
xchg
dec
pop
mov
pop
insb
lds
jp
popl
pushf
and
sub
adc
xor
lcall
icebp
sbb
cwtl
sub
iret
out
jb
xchg
jnp
mov
add
fistps
pusha
xor
add
inc
ja
pop
jae
mov
xchg
xchg
sbbb
cmp
push
sarl
push
mov
and
dec
add
mov
push
jl
fstpl
dec
sub
int3
xlat
outsl
sub
inc
popa
enter
int3
lods
fwait
or
xlat
pop
ret
pop
lret
pop
out
cmp
mov
fmull
and
xchg
subb
fiadds
insb
inc
out
mov
fistl
sti
dec
sbb
inc
scas
or
jecxz
testb
pushw
inc
data16
lods
xchg
and
aad
dec
lock
inc
mov
adc
lods
mov
pusha
dec
and
jnp
mov
mov
xchg
xchg
dec
cmp
je
in
lods
mov
inc
out
mov
xchg
sbb
pop
sub
jg
sub
jge
sbbl
es
push
rorl
mov
push
mov
aaa
stc
repz
and
mov
adc
loopne
inc
js
dec
test
add
dec
dec
cmp
shrl
test
mov
mov
cmpsl
mov
dec
pop
cmpsb
jae
adc
cmpsb
les
jbe
xor
jg
addl
imul
gs
adc
xorl
std
loopne
jb
jbe
and
lahf
or
lret
leave
sahf
lds
out
sbb
push
iret
mov
mov
insb
pusha
out
popf
xchg
xchg
loopew
ficompl
in
pop
mov
dec
mov
add
jl
pop
cmp
push
jne
clc
cwtl
dec
sbb
mov
adc
cmpl
cmp
xor
shll
mov
adc
and
push
push
pop
sbb
cmp
jae
or
decl
mov
sarb
mov
inc
mov
lret
stc
sbb
aas
xor
pop
mov
mov
mov
mov
mov
push
jns
xchg
mov
subb
jl
pusha
xchg
jns
mov
push
jmp
mov
dec
ljmp
gs
jl
inc
repz
inc
push
sahf
aaa
push
jle
xchg
lea
popf
adc
mulb
outsb
and
mov
adc
xor
daa
pop
daa
fdivl
mov
push
ret
aas
and
fisttps
pop
movsl
xor
pop
js
xchg
xor
inc
jno
mov
sbb
dec
jp
outsb
dec
and
or
and
sub
ret
daa
dec
insb
insl
je
xchg
mov
inc
mov
divl
xlat
add
int3
xor
mov
xor
jle
xor
jb
or
mov
cmc
mov
movl
rcrl
xchg
fisttpll
and
jecxz
and
jae
xchg
decb
xchg
jmp
jmp
cmpsl
lea
xor
into
out
sbbl
addr16
stos
cmp
sbb
enter
inc
rolb
cmp
lods
add
sbb
lods
sahf
mov
mov
or
or
pop
test
clc
inc
pop
sub
or
int
jle
lret
sbb
and
mov
ret
out
sti
dec
subb
push
rcrl
add
cltd
fs
mov
push
dec
ds
fnstenv
push
add
push
jmp
repz
add
push
gs
push
int3
lods
stos
ljmp
call
mov
adc
dec
xlat
inc
dec
sbb
out
mov
jno
loopne
mov
push
popf
push
cmpsb
and
mov
lock
xor
jbe
shll
xor
sbb
popa
adc
test
ds
cmp
push
mov
leave
or
lods
lds
add
or
ret
aaa
dec
out
pushw
pushw
mov
mov
jp
push
fneni(8087
cld
push
sbb
aad
xchg
cmp
sbb
fstpl
lret
push
mov
pushf
jle
sub
or
mov
add
daa
mov
dec
add
xchg
inc
insb
pushf
out
sbb
cmp
inc
mov
pusha
jle
dec
fdivr
psrlw
xchg
xchg
or
cmp
mov
pusha
rorl
pop
sbb
mov
mov
inc
cld
jp
or
push
mov
stc
mov
in
dec
xchg
inc
insl
rcrl
push
mov
push
mov
jp
mov
mov
dec
sti
in
cmc
push
and
movsb
inc
mov
pushf
adc
cmp
stos
xchg
add
push
insb
sahf
push
neg
lcall
in
cs
xlat
xor
pop
mov
xchg
jae
mov
lods
aad
ret
fbstp
not
mov
leave
or
test
push
out
pop
aam
cmc
in
out
xchg
xor
in
mov
stos
mov
push
aam
xorb
es
dec
sbb
cmp
movb
pop
xchg
add
dec
fisttps
movb
push
rorb
lods
mov
les
dec
fisubrs
std
in
sub
ficomps
out
shlb
test
fildll
nop
xchg
sub
orb
insl
pushf
or
cli
push
subl
loopne
push
icebp
cmp
popa
sub
mov
or
popa
push
push
cmp
rcrl
outsb
in
mov
sbb
xchg
ret
sbb
xchg
xorb
imul
push
in
sub
inc
and
leave
jmp
push
xor
or
jb
add
cmp
cltd
cmp
mov
add
jmp
xchg
scas
xchg
movsb
cs
rcr
std
sbb
pop
mov
adcl
pop
shll
pop
jb
jns
scas
jle
xchg
xor
leave
test
mov
inc
outsb
sbb
or
ret
add
fcoml
mov
mov
jbe,pn
mov
jge
cs
dec
push
scas
mov
int
cmp
fsubr
scas
popa
mov
inc
cld
outsl
aad
inc
pop
inc
mov
shrb
pusha
add
pop
sub
movsl
push
leave
aam
cld
mov
jge
jne
add
cmp
loop
mov
nop
inc
les
in
or
cmovl
in
ficomps
lds
negb
rorl
hlt
shlb
push
adc
push
adc
aaa
mov
sti
nop
xchg
mov
jb
pusha
test
xor
addr16
adc
inc
mov
mov
or
cmpsb
or
in
punpcklbw
jb
xor
pop
js
xor
jge
gs
addr16
cwtl
hlt
xor
out
dec
jl
jo
mov
adc
xchg
mov
enter
jno
movl
mov
das
scas
add
adc
xchg
push
inc
fiaddl
push
cmp
push
stc
push
out
fsubl
pop
pop
data16
cmp
mov
sbb
lret
mov
dec
ret
add
imul
jg
imul
out
xchg
or
out
xchg
xor
fwait
cwtl
mov
filds
addr16
lret
icebp
jno
mov
dec
das
incl
pop
bound
xchg
jnp
jge
dec
out
jecxz
pop
cs
std
cmp
int3
das
add
outsl
fcomps
repnz
or
cwtl
mov
es
mov
mov
adc
mov
int3
jmp
jb
mov
test
jb
adc
out
inc
mov
bound
fdivr
xchg
lock
int3
dec
sbb
mov
jp
mov
jg
fdivl
jecxz
sbbl
push
xorl
push
push
filds
andb
repnz
xchg
sbb
scas
ret
cmp
xchg
push
enter
icebp
fmulp
arpl
dec
test
pop
pop
hlt
mov
push
jnp
mov
jns
adc
xor
insl
lahf
cld
push
sbb
cs
mov
cmp
sbb
andb
icebp
push
pop
dec
repz
push
out
push
mov
ret
sub
cmp
adc
mov
in
outsb
in
nop
adc
sub
cmpsb
arpl
xor
movsb
fs
arpl
mov
sub
xor
lock
cld
xchg
cmp
jbe
nop
and
test
xor
adc
sub
popa
and
arpl
sub
int
cmp
jecxz
testl
push
xor
fcoms
cmp
ja
push
dec
push
mov
cwtl
lahf
jns
repnz
sub
jno
jp
inc
cmp
mov
push
xor
jg
orl
cld
xchg
pop
inc
inc
cmp
scas
pop
mov
leave
adc
dec
insb
mov
icebp
mov
loopne
cmp
mov
pop
lods
rcr
cmc
dec
cmc
mov
jb
imul
mulb
pop
push
jecxz
jnp
repz
stos
out
mov
inc
mov
add
push
or
jnp
or
xorb
int
lret
push
push
test
add
jl
adc
gs
aas
cwtl
or
daa
pop
fdivrs
add
jecxz
aad
push
arpl
test
shll
gs
xor
cmp
test
mov
inc
es
orl
pop
pusha
add
roll
dec
fst
loop
and
pop
mov
add
pusha
inc
jbe
rcr
lods
movsl
shlb
xor
add
outsb
lods
push
seto
xchg
pop
sbb
xlat
in
pop
jne
pushf
cmp
outsb
pop
test
movsl
mov
xor
hlt
add
add
in
stc
xchg
pop
stc
inc
adc
jmp
cwtl
test
aam
cmpsb
jp
test
sub
pop
leave
push
repz
xchg
enter
std
test
dec
xchg
in
rcll
ja
rolb
sub
loope
scas
stos
jge
pop
pop
fwait
push
mov
pop
jp
xor
adc
push
fldenv
shlb
pop
add
dec
cs
push
xlat
loop
mov
push
inc
lret
sarl
jge
out
jmp
jp
std
pop
das
push
xchg
mov
xchg
pop
xchg
jnp
lahf
xor
xor
test
jb
adc
sbb
inc
sbb
sub
mov
push
cmp
repnz
lahf
mov
and
mov
jg
and
push
std
aas
jno
xor
mov
adc
or
ja
xor
push
scas
mov
es
movsl
inc
xchg
data16
xchg
stos
movsb
jo
lcall
sub
mov
xchg
mov
jecxz
test
out
push
and
sub
xchg
sub
insl
and
pop
pusha
shr
cld
or
call
mov
orb
pop
enter
cmp
or
xor
fdivs
test
inc
pop
jg
ss
lods
dec
movsl
cmp
adcb
pusha
in
dec
mov
in
and
pop
loop
mov
mov
xor
push
mov
ja
add
lcall
mov
mov
fcoml
xchg
ror
adc
jmp
sub
jge
div
in
imul
add
loopne
jae
fcoml
jl
cli
mov
fstl
xor
push
inc
cmp
sbb
and
nop
or
into
mov
xchg
sti
sub
ss
ret
movsl
iret
push
es
lret
add
inc
sbb
sub
or
sub
dec
insl
lds
push
shl
sbb
mov
icebp
cmp
inc
or
imul
int3
stos
xchg
cmc
neg
test
mov
sbb
fists
jmp
scas
or
xor
mov
sbb
sub
push
jae
mov
leave
xchg
sbb
inc
out
lahf
dec
adc
cltd
and
inc
ljmp
daa
sbb
clc
scas
add
xor
dec
hlt
push
repz
sbb
cmc
or
inc
push
jnp
jo
enter
xchg
addb
imul
shl
loopne
stc
ret
lods
cmpsb
mov
mov
pop
push
sbb
xchg
sub
xchg
loope
frstor
es
jp
orb
mov
mov
sub
xor
scas
jge
rcrb
lods
jbe
jecxz
insb
fld
inc
cmp
pop
pop
jb
mov
mov
test
loopne
scas
call
xchg
push
adc
cmp
cli
pop
insb
or
jp
insb
push
or
sub
push
repz
mov
mov
movsb
inc
pop
imul
or
cmp
or
daa
pusha
lea
mov
inc
push
daa
aam
fcmovnu
adcl
sbb
or
jns
jl
ret
add
shlb
mov
dec
cmp
rcll
push
cmp
aas
cmc
and
push
imul
push
and
inc
mov
push
into
fwait
adc
iret
xor
xchg
insb
repnz
into
mov
rcll
mov
add
icebp
jo
imul
and
subl
mov
in
push
scas
mov
out
xor
mov
mov
repnz
aaa
xor
mov
cmpsl
loop
adc
stos
sub
in
pushf
sbb
fidivrs
arpl
aad
push
sub
pop
imul
inc
pop
or
xor
popa
pop
cs
push
dec
je
mov
sbb
mov
loop
fisubs
cmp
shll
dec
mov
sarb
dec
ret
xor
pop
xchg
xchg
jl
test
inc
ds
mov
subb
xor
jecxz
sahf
xchg
icebp
mov
sbb
and
test
daa
add
or
dec
lret
pop
mov
dec
or
add
xchg
hlt
test
and
out
mov
cmp
xchg
and
inc
mov
xlat
jmp
cmpsb
test
test
stos
and
mov
insl
xchg
pop
roll
rcrl
sbb
inc
test
pop
pop
test
fsts
rclb
mov
insb
or
rorb
xchg
pop
lret
or
cmp
ret
in
nop
in
fidivl
xor
add
and
lret
fiaddl
xorps
dec
int
xor
shll
cmp
sbb
pusha
cmp
jl
or
xchg
data16
int3
mov
push
cmp
leave
dec
repnz
out
fstp
jge
or
sbb
pushf
loopne
pusha
mov
add
adc
jno
add
pop
sbb
adc
lea
sub
jne
sbb
shlb
mov
js
mov
adc
repz
fsubrs
leave
sbbl
out
dec
aaa
and
sbbl
cmp
fs
out
out
mov
pop
dec
mov
and
cmp
jge
aad
inc
or
inc
jge
test
cld
dec
fadds
das
xchg
pop
sub
lds
negl
shlb
cli
pop
ficompl
mov
ret
sbbl
dec
cmpsb
js
arpl
out
fcoms
inc
lds
fidivrs
mov
mov
cwtl
das
dec
add
fistl
lea
lret
divl
movsb
inc
lret
iret
hlt
out
and
xor
sbb
xlat
xor
jge
fstps
inc
xchg
dec
pushf
push
or
in
fidivl
gs
and
outsl
xchg
cmpsb
outsl
outsb
clc
imul
decl
mov
push
fcompl
cmp
stos
loope
jbe
inc
jb
sbb
lds
aad
xlat
leave
ret
cwtl
sbb
inc
fnstsw
dec
mov
aad
cmp
mov
xor
xchg
add
dec
iret
ret
ret
into
dec
sbb
mov
xchg
sbb
or
add
das
int3
push
push
dec
adc
enter
xchg
hlt
sbb
mov
sbb
mov
das
xor
jecxz
or
lock
test
scas
popa
ljmp
mov
std
das
inc
or
xchg
js
or
add
inc
jg
xchg
lret
in
adc
xchg
cmp
mov
jge
fldenv
cmp
pop
xchg
fldcw
mov
pop
push
pop
ror
es
sbb
sarb
lods
cmp
add
jno
aam
and
xchg
dec
faddp
sarb
or
push
jge
add
mov
fldcw
and
jb
or
dec
addb
sbb
popf
dec
pop
sahf
adc
in
call
inc
gs
std
and
int
dec
iret
push
pushf
add
nop
in
cmpb
xchg
test
pop
adc
adc
mov
mov
rcr
mov
jl
rorl
fs
sbb
or
mov
adc
xlat
pop
dec
mov
pusha
or
mov
jecxz
fwait
push
cmp
dec
pop
mov
sbb
sub
scas
xor
xchg
mov
insl
aad
shr
mov
test
jg
inc
test
push
mov
lods
add
lock
or
dec
call
mov
repz
stc
popf
mull
xchg
dec
pop
jecxz
lret
addb
popa
dec
loop
push
and
xchg
cli
xor
insl
repz
mov
fcmovnbe
cs
out
loop
inc
iret
add
imul
fs
iret
mov
xor
cmp
jge
lret
je
ljmp
sahf
aaa
inc
mov
fdiv
int
jne
insb
lods
xlat
lods
fcoml
adc
ret
push
and
leave
adcb
mov
mov
sub
stc
aam
or
and
jne
adc
mov
bound
xchg
pmaxsw
dec
sub
xor
scas
arpl
inc
cmc
lret
lods
push
pop
jno
nop
pop
pop
hlt
add
jns
out
lods
std
adc
lcall
jnp
fsubrs
gs
lret
mov
imul
popa
bound
lcall
rorl
sarb
xchg
loopne
xor
xor
push
je
push
inc
cmpsl
cmc
push
pop
cmp
pop
rcl
je
les
cli
pusha
mov
cli
arpl
cmpsb
and
lea
push
inc
pop
mov
rol
lret
push
jle
outsl
in
cwtl
mov
xor
fsubrp
cwtl
dec
mov
lds
cmp
jns
cmc
pop
fists
nop
sbb
inc
andl
in
aad
fdivs
sub
xor
sbb
dec
inc
inc
divl
pushf
xor
mov
ds
cmp
test
int3
ret
fdivr
sbb
cltd
sahf
push
jl
sbb
in
cltd
mov
test
outsb
pusha
xor
cwtl
ds
es
rcl
fnstenvs
push
add
add
stos
inc
call
pop
xlat
daa
not
fldenv
mov
daa
inc
aas
popf
sbb
mov
sbb
fadds
push
ljmp
push
cmp
decb
mov
fnstsw
rcll
cmp
mov
pop
mov
and
mov
es
imull
jg
jno
jns
sbb
xchg
popf
sete
in
enter
xor
out
pop
pop
pop
inc
pop
mov
lods
mov
dec
mov
mov
xchg
jns
call
cli
xchg
push
mov
loop
inc
int
pushf
cmp
je
pop
dec
jle
popa
mov
xchg
jno
pop
xchg
int
stos
pop
push
imul
and
aam
test
adc
add
and
xor
andps
shll
xchg
pop
sbb
pop
push
icebp
mov
je
dec
ror
fstpt
movsl
cmc
mov
inc
mov
jge
mov
mov
sub
cld
inc
dec
or
mov
sahf
fists
loopne
dec
leave
out
ss
or
mov
fnsave
sub
dec
pushf
add
mov
or
push
dec
jle
daa
mov
jo
jmp
jno
cmp
test
cmp
das
mov
mov
pop
pop
in
pop
mov
adc
jo
inc
shlb
movsb
jp
in
xchg
pop
outsl
cmp
xlat
jl
es
mov
push
xor
je
mov
jo
mov
push
outsl
data16
xchg
jecxz
fadd
sti
das
inc
mov
jb
adc
ss
or
xor
inc
ljmp
gs
pop
mov
shrb
dec
xor
inc
fs
int
jl
inc
sbb
cmp
das
icebp
mov
lds
data16
call
ljmp
and
cmp
sub
sahf
rcll
jbe
pop
jl
dec
xchg
stc
pop
inc
cs
mov
pusha
out
decb
jnp
nop
cmpsl
outsb
or
lcall
test
ljmp
xor
jle
add
or
loop
out
push
lods
movsb
mov
push
xchg
nop
mov
inc
sbb
iret
xchg
js
fsts
xchg
mov
int
adc
adc
mov
xchg
mov
add
sub
and
or
xchg
or
loopne
xor
dec
mov
movb
ljmp
inc
pop
or
adc
subl
lret
cmp
cmp
or
xor
je
jns
ficoms
mov
cmp
hlt
push
scas
xor
loopne
movsl
data16
loop
cwtl
jle
popf
xchg
ficoms
movsl
adc
mov
adc
cmp
ss
mov
sub
xchg
lcall
icebp
addb
xlat
xor
or
mov
es
cmp
sbb
std
mov
sub
cmp
or
test
push
outsl
ds
adc
aaa
in
inc
icebp
mov
xor
sbb
mov
mov
sbb
jmp
or
or
jl
jl
lret
xchg
fidivs
and
out
shrl
push
mov
sub
adc
cmp
mov
xor
jge
ret
xlat
cmp
sbb
mov
outsb
push
daa
push
lea
cli
ret
mov
ret
pop
arpl
xchg
iret
cmpsl
js
jmp
push
dec
fisubs
mov
je
mov
mov
int3
mov
fisubrl
ds
xor
sub
jl
sarl
leave
and
inc
xchg
lahf
int3
pop
cmc
sub
cmp
pushf
push
fs
mov
sbb
in
dec
mov
ffreep
inc
jmp
bound
sbbl
mov
mov
sbb
popf
cmp
mov
pop
repnz
ds
xor
push
ret
sahf
pop
cs
adc
test
cmp
jne
fimuls
fbld
dec
mov
inc
cmpsb
cltd
fs
mov
pop
repz
cmc
mov
popa
xchg
push
adc
fdivr
and
jnp
jg
int3
push
mov
and
lock
daa
jecxz
iret
ret
stc
les
dec
sbb
mov
push
push
inc
mov
pop
sbb
stc
loop
and
sbb
ret
lods
arpl
scas
cmpsl
sub
pop
xchg
and
repnz
mov
pop
mov
add
mov
imul
mov
cmpsl
xor
popf
pop
xor
out
push
repnz
in
jae
xor
push
mov
sarl
xor
addb
mov
or
cwtl
or
mov
scas
push
adc
imul
divl
insl
adc
outsb
mov
inc
test
cmp
stc
aam
movsl
shr
outsl
mov
pop
xlat
push
lods
jnp
insb
fs
jnp
sbb
sbb
cmp
notl
sbb
dec
test
inc
xchg
mov
jne
repz
movsb
stc
cmp
add
lods
in
inc
gs
iret
fiadds
xor
fldl
mov
jne
pop
popf
clc
jl
lcall
cmp
js
xor
lock
in
jae
repz
imul
pop
and
dec
fs
stos
dec
out
adcl
and
daa
in
insb
adc
xchg
adc
push
jb
push
je,pt
stos
lret
jle
dec
fdivrl
mov
imulb
and
stos
daa
outsb
ret
pop
sub
mov
mov
or
es
mov
jbe
and
repz
cmp
out
sub
mov
xor
inc
push
cmp
roll
pop
lcall
mov
cmpsl
fs
xor
lea
xchg
filds
adc
mov
push
mov
bound
sahf
lea
outsb
test
test
mov
pop
inc
inc
mov
fs
movsl
xchg
or
es
jb
sti
jl
cmp
popa
adc
jne
add
loope
in
cmpsb
adc
pop
aaa
adc
nop
jecxz
out
jle
movsb
mov
pop
insl
pop
pop
imul
dec
icebp
test
shll
mov
movsb
pop
push
lret
push
sbbb
or
mov
xchg
cmc
cmpsb
shrb
rep
push
sbb
jmp
xchg
ret
loop
daa
and
pushf
lods
lahf
stc
enter
mov
add
mov
shlb
cmp
fs
and
or
rorl
cmpsb
movsl
cld
add
into
mov
fadds
lret
cltd
mov
dec
loope
pop
mov
fistps
insb
push
jp
rolb
aas
paddusw
test
in
mov
fimuls
bound
aam
xchg
push
add
add
movsb
push
xchg
cld
pop
xor
pop
test
popa
inc
adc
mov
xchg
ret
mov
dec
inc
or
negb
fldt
xor
dec
int
sub
add
cmp
lret
jns
inc
mov
mov
sbb
mov
movsb
xchg
mov
push
in
pop
jle
outsl
jb
cmpsb
or
push
dec
je
int3
jae
push
lds
sahf
fwait
mov
mov
xor
subb
mov
mov
pop
push
cmp
xor
pushf
and
rcrb
lahf
pop
sbb
add
or
fwait
pop
push
and
cmpsb
sbb
test
lcall
repz
xchg
daa
ret
enter
cmp
add
outsl
std
lret
je
or
push
subl
or
loopne
mov
fstpl
xlat
mov
lds
movsb
push
dec
jae
pushf
iret
xor
repnz
pop
jo
imul
and
pop
jge
dec
lret
aad
int
inc
sbb
popf
xor
icebp
aad
sub
jge
adc
adc
dec
add
movsl
into
mov
imul
add
sub
out
les
push
fcmovnb
pop
cli
fsubrl
jle
lods
in
imul
aam
push
lods
sub
cmpsb
aas
mov
pop
loope
push
add
js
ffreep
pop
pop
pop
cld
aad
int
push
dec
mov
pop
ds
outsl
in
js
adc
test
pop
out
loop
daa
aad
pop
out
cmpsb
pop
lret
fs
test
push
inc
scas
hlt
iret
fsubrl
nop
addr16
pop
pop
sbb
or
sub
test
sbb
push
xor
cs
outsb
add
jp
adcb
movb
clc
les
mov
or
gs
xchg
cli
scas
xor
shrl
push
cmp
outsb
xor
loop
loop
fdivrs
adc
and
das
dec
mov
adc
idivl
cmc
pop
mov
das
hlt
push
scas
jle
sarb
cmc
test
pop
sub
mov
sub
out
pavgw
cmp
jle,pn
adc
dec
in
pop
mov
sub
sahf
jle
test
fucomp
sub
sub
in
inc
add
dec
or
xchg
in
xor
xor
mov
mov
cli
lods
mov
xchg
mov
lcall
push
sub
inc
mov
inc
pop
add
adc
pop
bnd
rcrb
xchg
xor
test
pop
cmp
pop
xor
fstpl
cltd
jo,pn
add
add
mov
jp
daa
push
shlb
cmpsb
xchg
mov
dec
das
inc
scas
adc
push
mov
xor
cmpsl
sbbl
and
push
adc
xorl
in
jnp
mov
movsb
roll
xor
mov
mov
lea
pop
dec
push
lds
cli
cmp
ds
push
loopne
pusha
int
sarl
inc
and
jbe
ss
mov
lods
jns
sbb
pop
ja
outsb
loop
out
fistl
cmp
pop
enter
adc
out
xchg
dec
mov
push
or
push
xchg
aad
ss
repnz
pop
insl
sbb
dec
inc
mov
dec
mov
ret
push
leave
mov
add
data16
cwtl
xor
jp
fs
lcall
ljmp
adc
aaa
or
sub
mov
in
loope
lahf
inc
mov
mov
mov
mov
loope
out
sbb
dec
andl
adc
in
adcl
mov
jmp
push
fcoms
dec
jp
mov
and
sub
fsubrs
inc
test
int3
aad
dec
cmpsl
loopne
adc
cli
jg
push
fdivp
cltd
push
xchg
sub
or
mov
je
or
mov
lahf
pop
aam
inc
repz
xchg
ret
ret
xlat
in
fcoml
nop
add
in
je
mov
iret
cmpsl
into
sbb
outsl
pop
sub
push
das
lret
adc
cmp
jbe
loop
and
and
into
in
adcl
mov
lds
xor
mov
lea
inc
pushf
add
and
inc
xor
adc
pop
jmp
imul
inc
btr
adc
jg
jg
gs
adc
mov
das
mov
mov
enter
inc
test
out
jp
inc
div
repnz
cmp
xchg
loopne
mov
imul
adc
mov
ja
jle
sbb
daa
mov
into
mov
ljmp
or
push
adc
andl
push
jns
and
bound
jmp
jg
shlb
aam
inc
das
pop
int
jecxz
pop
add
adc
hlt
hlt
addl
adc
notl
jo
lea
or
lret
shll
dec
scas
lret
lahf
xlat
hlt
cs
jg
mov
adc
fldt
mov
xchg
enter
xor
sbb
outsb
or
dec
xor
lcall
jge
enter
sub
dec
lock
mov
inc
mov
jl
pop
cmp
stc
lock
call
popf
fwait
loopne
test
fcomi
xchg
sarl
jg
pop
aaa
dec
lahf
cmp
pop
jmp
fucomip
push
push
sub
icebp
sahf
mov
aaa
les
jb
divl
mov
mov
arpl
idivl
pusha
push
sbb
cltd
jp
dec
jg
pop
in
lods
inc
pop
push
insl
and
fisubl
add
mov
pop
or
push
push
mov
pop
and
and
xor
jb
in
mov
scas
jmp
jecxz
ljmp
int3
mov
stos
or
or
sbb
or
push
in
fnsave
and
scas
dec
subl
and
imul
popa
stos
adc
lods
inc
out
clc
adc
or
inc
mov
lret
aam
push
ret
lret
aas
xor
arpl
sub
sub
xor
sub
stos
dec
xor
jge
int3
std
jbe
mov
add
jp
jo
cld
mov
imul
into
lock
dec
out
std
mov
mov
add
xlat
test
test
sub
or
jmp
pop
mov
or
push
les
ret
fidivrs
and
lret
fcoms
add
add
stos
cmp
ja
pop
data16
xchg
add
push
repz
xor
sub
xor
icebp
push
inc
xor
je
loop
mov
mov
jbe
mov
push
sar
dec
movsb
call
fs
mov
pop
xchg
inc
test
inc
aas
cld
mov
fildll
insl
dec
test
bound
enter
sahf
stos
add
cmovb
test
pop
pop
in
shrl
add
inc
aaa
in
sarb
mov
jnp
lods
inc
ja
push
inc
mov
jg
cmp
or
ret
mov
cmp
ja
mov
or
jbe
xchg
cmp
cs
mov
js
xchg
xchg
fistpl
test
and
xor
ret
bound
pop
and
lods
sub
adc
fs
ss
add
sarl
mov
mov
jae
inc
xorb
fs
stos
call
sub
stos
test
addr16
xchg
mov
xor
sub
adc
jp
sub
loopne
mov
lret
mov
decl
sub
mov
idivb
addl
test
arpl
and
mov
shlb
sbb
push
aaa
pop
xor
add
in
push
repnz
or
pop
jbe
or
insl
addl
inc
imul
fs
movsl
in
push
insl
sub
arpl
xor
out
cmp
ljmp
mov
sbb
cmp
push
jmp
cwtl
sbb
mov
in
jbe
mov
dec
mov
es
sbb
ret
mov
jl
mov
scas
sbb
cmp
jmp
sar
int3
dec
and
jmp
fbld
xlat
xor
push
xor
xchg
scas
push
mov
add
imul
push
test
add
pop
adc
mov
fsubrs
xor
xchg
mov
xor
add
imul
testb
or
cmpsb
mov
push
jmp
pusha
xor
into
jb
dec
mov
test
jns
mov
insb
or
jg
fdivs
test
jg
pop
jmp
iret
pop
push
dec
cmp
outsb
enter
cli
push
ljmp
cmp
fwait
dec
sbb
scas
andl
and
cmp
and
add
call
jmp
xchg
les
pushf
mov
add
pushaw
data16
nop
js
inc
fwait
push
cmc
push
xchg
xorl
cmp
in
std
pop
jle
das
push
dec
mov
adc
cmp
addb
push
mov
decl
lcall
and
in
ret
add
icebp
lret
sbb
mov
mov
push
mov
ljmp
push
jns
mov
push
or
push
mov
insb
xlat
repnz
and
and
mov
and
add
mov
aad
or
cmpsl
in
dec
movb
out
sbb
clc
add
adc
or
stc
fsubl
xchg
aaa
push
icebp
test
adc
pop
cmp
inc
das
insb
jecxz
fnstenv
in
sbb
inc
loope
sbb
mov
push
pop
or
pop
sahf
adc
jns
and
add
xchg
jge
sbb
sub
repnz
jecxz
xchg
cmp
cmovl
cmpl
pop
insb
gs
div
mov
lods
lods
sub
cmpsl
in
iret
xchg
xchg
and
cmp
xorb
inc
imul
cld
imull
pop
repnz
inc
jl
sbb
loope
mov
xchg
jne
add
jbe
xor
adc
andl
add
jmp
int
mov
inc
adc
leave
cmp
jnp
aad
imul
xor
mov
in
test
sbb
push
add
adc
mov
cmpsb
xchg
imul
cld
orb
sbb
repz
xlat
dec
sub
dec
jmp
jne
cmp
in
pop
jbe
rcl
mov
std
das
and
mov
mov
jb
cmpsb
gs
lret
cmp
mov
clc
xchg
addr16
xchg
cltd
inc
and
je
mov
popf
push
sbb
cmp
into
fsubl
pop
adc
test
lods
add
mov
push
psadbw
xor
cmp
insb
mov
jg
dec
aaa
sub
fldt
inc
mov
lock
xchg
mov
mov
mov
cmp
mov
mov
jns
xchg
out
pop
mov
pop
hlt
sbb
jb
xlat
or
jo
pop
pop
outsl
daa
stos
xor
dec
push
imull
fwait
sarl
sub
scas
xor
cmc
inc
jne
xchg
mov
aaa
add
xchg
js
jg
test
loope
sbb
push
adc
dec
push
inc
stos
adc
xorl
lahf
test
xchg
daa
rcrl
lret
mov
sub
mov
fwait
mov
daa
push
in
pusha
jno
mov
or
pop
push
shl
sub
mov
push
movsb
xorb
xor
loope
les
xor
enter
fwait
inc
sbb
pop
pusha
xchg
sub
lods
push
inc
push
imul
mov
inc
aaa
insb
push
jecxz
mov
in
pop
mov
lcall
xor
in
outsb
pusha
inc
pusha
cmpl
sub
mov
enter
insb
xor
cli
sub
push
push
in
ror
imul
cmp
ds
xor
sbb
xor
mov
fs
push
movsl
pushf
dec
jb
pop
jp
cmp
jno
mov
inc
jns
dec
dec
sahf
cmp
loope
sahf
pop
cmp
fisubs
sbb
dec
jbe
cld
adc
mov
sbb
mov
loopne
leave
daa
dec
cwtl
push
sub
aam
imul
cmp
inc
jmp
inc
mov
jg
fisttpl
outsl
mulb
mov
out
rcrl
out
xor
add
pushf
or
pop
mov
jae
js
jg
push
lahf
push
cli
or
fistpll
push
lods
mov
insb
push
cli
ja
cmc
cs
cmpsl
lahf
popa
repz
bound
dec
popf
xor
dec
sbb
jecxz
pusha
push
cmc
push
into
jp
dec
sbb
mov
xchg
cli
or
hlt
js
aas
cmpsb
test
adc
test
ficoml
jns
cmpsl
test
mov
adc
cmp
enter
aas
xchg
adc
movl
jb
call
movsl
adc
mov
push
cmpsl
shr
dec
lcall
sbb
inc
in
inc
jnp
negl
ret
xchg
repz
xchg
push
jnp
stos
xchg
icebp
cmp
fld
jbe
mov
movsl
mov
fpatan
pop
sub
cmp
pusha
rcl
and
repz
stc
cwtl
lea
shl
dec
push
sbb
popa
dec
insb
cmp
pop
inc
xchg
or
ds
jb
les
mov
dec
jle
sbb
xchg
clc
cltd
sub
pop
jo
add
out
imul
cli
mov
pop
fcoml
rcrl
cmp
frstor
mov
and
loope
xchg
shll
push
and
mov
jmp
cmp
mov
hlt
loopne
cmp
out
xchg
data16
rcrl
dec
adc
or
mov
int
dec
xchg
mov
cmpsb
outsl
mov
push
sub
push
cmpsl
jno
sub
fbstp
std
or
cmp
sbb
cmp
lcall
scas
sti
arpl
mov
ljmp
mov
dec
xor
jmp
inc
fnstsw
pop
fwait
lcall
arpl
mov
dec
add
outsb
test
addr16
pop
mov
outsb
data16
sbb
loopne
enter
movsl
mov
sti
test
dec
movsb
and
and
inc
movsb
or
rcl
inc
adc
adc
dec
cmp
add
fs
push
out
lcall
adc
add
sub
lcall
movsb
out
push
and
cltd
xchg
inc
stc
test
dec
mov
inc
lahf
xor
shll
dec
or
push
inc
movsb
cwtl
or
sub
and
and
mov
xor
mov
dec
xchg
mov
sbb
ja
out
movsb
pop
data16
lods
sbb
rol
cld
imul
outsl
testl
test
mov
push
mov
mov
mov
cmc
jle
imul
pop
xorl
xor
imul
sbbl
fistpl
ds
and
in
xchg
imul
xchg
popa
aam
push
dec
dec
inc
insl
xchg
jbe
int3
outsb
xor
mov
movsb
insb
icebp
sbb
mov
imul
aaa
jecxz
xchg
sarl
movsl
dec
cmc
fnstenv
cmovnp
dec
mov
cmp
outsb
or
fs
cmp
aam
cmp
pop
xchg
mov
mov
inc
or
xor
xor
subl
lods
add
xor
sbb
xchg
fimull
push
shr
dec
test
ret
fidivl
pop
adcb
movsl
js
inc
imul
int3
sub
cmpsb
push
cmpsb
les
jns
imul
cld
cmpsl
mov
je
push
or
cmp
adc
xchg
sbb
stc
fdivrs
pop
stc
pusha
xchg
cmp
pop
leave
cmp
sub
xor
jg
lret
mov
fsubrl
push
lcall
ja
dec
mov
mov
pop
mov
movsb
daa
idivl
xor
xchg
jle
xchg
ret
cli
pop
sahf
sahf
mov
addr16
insl
imul
or
cld
push
xchg
pop
cmp
pop
push
test
or
cmp
or
dec
jmp
in
cmp
sbb
xor
jp
or
bound
jp
rol
push
mov
es
add
outsl
xchg
lods
xchg
les
xchg
insl
lret
add
clc
into
mov
dec
fadd
rorb
movsb
pop
adc
out
and
mov
addr16
pop
add
popf
xor
push
xlat
inc
jo
mov
je
insb
lret
cli
xchg
mov
imul
dec
dec
ljmp
enter
push
and
pop
pop
je
jne
test
les
imul
add
dec
sub
inc
mov
lods
pop
subl
add
or
icebp
cmpl
inc
cltd
es
jmp
push
jecxz
ljmp
add
xchg
xor
jg
jae
daa
and
cmp
inc
scas
ret
sub
in
xchg
lahf
and
pop
xor
pop
pop
pop
and
lds
mov
fisttpll
hlt
fsubrs
mov
inc
jle
push
popf
outsb
mov
mov
pop
movsb
adc
es
xor
mov
icebp
loope
shl
sub
arpl
loop
flds
cmc
sub
mov
cmp
mov
push
sub
xchg
dec
loopne
mov
dec
scas
or
sub
cs
dec
xchg
shlb
stc
mov
xchg
sbb
push
out
dec
mov
jmp
fisubrs
out
and
mov
push
lds
push
push
dec
pop
jp
shlb
dec
js
push
cwtl
es
in
int3
stos
jp
pop
fwait
outsl
jnp
je
std
lods
outsl
in
pop
push
sub
idivl
fisubs
popa
sub
mov
sbb
sbbb
xor
adc
xchg
scas
repnz
in
and
adc
ds
out
es
test
sub
adc
repz
ret
subb
jne
arpl
add
xor
dec
pop
jo
stos
cs
inc
fwait
out
and
push
or
adc
jnp
fwait
popf
mov
cmp
insb
jns
adc
dec
push
das
adc
adc
push
pusha
sbb
mov
inc
pop
movsl
clc
jecxz
mov
mov
add
es
loopne
push
mov
push
std
inc
adc
loope
sub
aad
inc
adc
fwait
in
add
mov
xor
shr
mov
test
rcrl
sbb
mov
mov
lea
adc
inc
fwait
pop
or
roll
cmp
lea
int
lcall
inc
cmp
push
sti
outsl
adc
lds
sub
and
jg
inc
mov
xor
or
dec
sub
outsl
shrb
scas
jae
jb
sbb
pop
rcrb
in
icebp
std
icebp
mov
inc
push
cmpl
xor
add
lods
call
outsl
mov
mov
push
orl
fwait
das
push
pop
push
mov
int
fistl
cli
aam
insb
pusha
cld
lahf
jecxz
rcrl
cmp
or
jge
int
xor
shll
loopne
lcall
mov
jmp
lahf
push
lret
mov
jnp
mov
aas
xchg
cmp
mov
ret
xor
popf
sub
lods
jns
push
cmp
icebp
adc
fstps
jge
gs
mov
bound
std
lcall
test
int3
dec
push
out
out
insb
mov
sbb
add
ficoms
ficoms
divl
insl
fdiv
mov
fcom
sti
push
and
mov
xor
adcb
adc
test
nop
xchg
xor
jecxz
pop
jge
in
push
inc
and
and
fisttpll
shl
sbb
imull
xchg
sti
pop
ret
xor
aam
je
jns
pushf
mov
divl
jnp
test
sbb
ret
out
mov
or
loope
sub
jle
aam
fwait
and
or
mov
sbb
andb
mov
sub
fnstenv
rcrl
fs
cwtl
xchg
mov
jne
mov
xchg
pop
lahf
fildll
cmp
inc
xor
push
and
jmp
xchg
xchg
dec
mov
jg
xchg
sub
cltd
xor
or
lcall
jmp
outsb
mov
lds
jge
push
idivl
xchg
mov
pop
fiadds
push
scas
xchg
sub
sub
repz
or
rol
xchg
mov
push
sub
pop
faddl
mov
hlt
pop
sbb
cld
data16
pusha
mov
fwait
mov
mov
xchg
cmp
mov
sbb
jmp
insl
mov
jg
cmc
ficomps
inc
pop
xchg
pop
xchg
mov
sub
xchg
std
xchg
cmp
mov
cmp
ja
pop
inc
xlat
pop
leave
mov
inc
or
loope
imul
incb
adc
stc
push
icebp
and
mov
adc
push
cmp
dec
pand
cwtl
sbb
lds
sub
inc
mov
mov
insl
dec
xchg
mov
sub
jno
out
add
xchg
lcall
sub
mov
mov
adc
je
inc
xchg
inc
mov
xchg
mov
push
fistl
lcall
stc
inc
out
pop
xor
pop
inc
sbb
cmpl
and
insb
stos
and
loope
fs
add
adc
sbb
test
adc
jnp
jae
cmp
push
add
cmp
scas
sub
loop
mov
divl
push
mov
cld
adc
mov
xor
mov
cwtl
push
fwait
inc
test
xchg
or
fcmovb
aam
cli
lret
jg
mov
inc
imul
test
cmp
fbstp
push
lea
daa
outsb
adc
mov
jae
inc
mov
fs
cmp
mov
adc
fwait
sarl
mov
stos
dec
inc
repnz
shlb
fsubl
push
js
je
mov
mov
inc
dec
sbb
sbbb
dec
imul
cmpl
shlb
je
mov
scas
lods
jp
push
push
lea
xchg
into
lods
cmp
sbb
push
xchg
pop
or
iret
scas
cmp
std
xor
leave
data16
or
adc
jl
or
cld
insl
cld
shrl
inc
arpl
mov
xchg
loopne
iret
mov
pop
outsb
rorl
mov
lret
idivl
inc
adc
add
faddp
sbb
out
jns
leave
enter
xchg
cmp
add
push
std
jg
loop
test
pop
stos
push
data16
fs
dec
xchg
pop
je
sub
xchg
in
jl
ficompl
insb
cltd
fcmovnu
fisubrs
fs
fucomp
hlt
cwtl
cmp
or
dec
add
adc
fstpt
fs
rcrb
movsb
adc
inc
xchg
inc
int
push
push
jg
add
or
adc
test
rcl
into
dec
test
dec
pop
scas
ret
outsb
nop
inc
ja
cmpsl
and
push
adc
inc
pop
fsts
adc
sti
pop
test
and
fsubrs
cmp
cli
mov
rep
ret
push
mov
jns
cwtl
aaa
stc
shrl
nop
mov
xchg
xor
hlt
test
sub
gs
fwait
sbb
adc
add
push
sub
or
xor
sbb
imul
pop
in
popf
pop
xchg
lods
xchg
pop
mov
cltd
inc
xor
jno
xchg
icebp
mov
mov
jle
inc
cltd
adc
popa
movsl
sbb
lea
push
int3
lods
sub
xor
int
dec
cmp
xchg
imul
aam
pushw
lahf
inc
xchg
or
mov
out
aad
mov
mov
cmpsb
add
sub
cmp
mov
inc
pop
mov
adc
movsl
test
mov
loopne
push
xchg
xor
xor
pop
cld
rorl
mov
bound
inc
push
mov
inc
hlt
cmp
lret
sub
jnp
or
or
rcrl
jp
vmovdqu
dec
mov
sub
inc
pop
and
or
xor
popa
and
fcmovnbe
pop
jg
hlt
cmp
imul
jne
jbe
jmp
clc
push
in
sub
ret
vpsrad
fidivs
xor
movsl
pop
ja
dec
shrl
lret
add
xchg
jns
fisubrs
xchg
js
stc
jmp
cmp
sahf
icebp
daa
sub
pop
add
xchg
sarb
mov
loopne
insl
xor
fildl
jne
loop
lock
pop
subl
sbb
adc
jne
stc
inc
jbe
cmpsb
outsl
mov
or
xorb
lret
jle
and
push
adc
fstl
jecxz
negb
xchg
shl
ret
or
jbe
pusha
mov
mov
fbstp
xor
stc
jbe
mov
xlat
push
insl
clc
cmp
and
test
mov
call
adc
add
pushl
aad
into
mov
in
push
jae
xlat
fstpl
shll
push
in
inc
sti
aaa
jmp
test
mov
inc
fimull
scas
mulb
or
stos
test
adc
lods
push
iret
scas
jl
stos
cltd
xchg
insl
mov
roll
pop
or
mull
insl
mov
out
aas
xchg
mov
cmpsb
std
cmovno
cmc
lods
in
rclb
mov
cmpsl
sub
mov
into
in
fstp
add
ljmp
fmull
sbb
sub
out
add
adc
shl
cmpsl
push
lods
push
mov
mov
jp
imul
mull
xor
lret
push
out
adc
lahf
mov
jecxz
mov
shrb
aaa
inc
movsb
fists
xor
lods
jo
pop
call
push
push
fadd
jecxz
xchg
lea
outsl
cmpsb
enter
outsb
inc
std
hlt
je
loop
imul
jne
adc
adc
in
mov
mov
push
mov
jbe
and
dec
jnp
mov
add
insl
xchg
mov
cmp
pop
sub
mov
cli
add
dec
ror
pop
push
adc
test
cli
adc
cli
xor
outsb
mov
fmul
cld
aas
jb
add
pusha
ja
cmp
pop
push
idivl
xchg
jnp
sarb
fdivrl
negb
xor
xorl
imul
sbb
xor
xor
adc
outsl
pop
rcrl
inc
hlt
push
add
rcrb
adc
stc
loopne
dec
push
xor
xchg
inc
add
testl
aad
push
cltd
popa
push
js
cld
and
xchg
arpl
mov
pop
jns
adc
dec
adc
test
subb
loop,pt
lock
cmpsb
mov
lret
jns
cmpsb
scas
mov
cmp
xchg
sbb
push
add
push
xchg
insl
call
dec
sbb
lods
sbb
mov
scas
sub
and
fbld
addr16
jb
mov
jge
or
dec
jg
inc
and
cmpsl
mov
jnp
cmp
inc
mov
aas
xchg
dec
xchg
jne
and
lock
push
cmc
lods
jecxz
pop
sub
xchg
xor
jecxz,pn
pop
jle
xor
in
ror
jecxz
cltd
mov
adc
insl
ds
add
mov
fiaddl
mov
mov
imul
ret
lods
fs
mov
in
xor
xchg
popa
in
inc
std
sub
adc
pop
lods
and
iret
out
adc
es
push
fldt
add
js
es
outsb
insl
or
out
mov
lcall
int
roll
mov
rol
idivb
sub
fidivrl
fldcw
jo
gs
jo
in
jmp
scas
cmpsb
mov
lds
push
mov
push
xchg
or
adc
dec
xchg
cmp
and
fs
int3
xchg
dec
das
xor
mov
cmc
xlat
push
xlat
xor
and
push
pop
pop
mov
xchg
fwait
push
adc
dec
cltd
iret
inc
mov
test
xor
lcall
pop
stc
jns
mov
pop
in
fsubl
mov
movsb
mov
push
mov
mov
xor
push
scas
jmp
mov
xchg
adc
sub
wrmsr
out
mov
out
lods
mul
leave
in
aaa
mov
adc
rorl
js
scas
jo
mov
shll
lret
mov
add
leave
push
inc
into
or
sbb
cmpsl
push
push
or
out
push
leave
push
pop
add
mov
cmp
mov
and
adc
fldenv
jl
pop
cli
daa
into
shlb
jae
xchg
leave
mov
or
pop
xor
dec
push
mov
in
push
test
cmp
out
fmuls
push
push
fs
test
hlt
int3
mov
enter
inc
xchg
in
push
lods
or
xchg
subb
mov
or
ret
inc
cli
push
xchg
jo
jp
test
xor
ds
jp
test
xchg
call
dec
cli
imul
xchg
sub
or
out
cwtl
sarl
or
and
mov
int3
in
xchg
push
add
adc
scas
xchg
push
pop
mov
push
leave
xor
ficoml
mov
add
mov
stc
sbb
add
bound
inc
pop
sbb
push
sub
leave
add
or
xor
ljmp
push
clc
xchg
xchg
rol
jle
adc
sbb
imul
inc
loop
cwtl
ja
push
jmp
divb
mov
push
orb
mov
dec
push
mov
sbb
mov
scas
gs
or
sub
out
loope
addr16
pop
mov
dec
adc
lds
lods
xor
divl
mov
push
adc
loopne
in
push
fists
jecxz
jmp
rolb
movsl
add
out
fisttpl
jno
pop
mov
test
test
fwait
sbb
push
cmc
scas
pop
das
lret
mov
lock
fimull
dec
aad
cmp
sbb
aam
enter
sbb
cmp
int
int
iret
call
inc
inc
sub
sbb
lahf
aam
popa
cmp
xorl
push
cmp
xchg
mov
popf
ds
mov
hlt
lahf
scas
aam
xor
fwait
js
out
enter
jge
pop
pop
xor
dec
movsl
les
aaa
adc
aas
outsb
adc
mov
cmp
sarb
loop
test
imul
daa
lret
dec
mov
xor
ret
out
mov
imul
cmpsl
fs
sub
cld
cmp
repnz
mov
or
stos
fdivr
ficoml
or
push
add
ja
mov
in
fdivrs
sbb
sbb
dec
add
jge
dec
es
xchg
enter
mov
or
decl
iret
out
or
and
jnp
push
jl
dec
pop
adc
add
sbb
sbb
scas
push
sub
mov
fs
jge
or
xor
les
fptan
mov
add
xor
std
mov
jmp
dec
dec
xchg
in
fiadds
pop
push
fistpl
xor
aam
xor
lret
clc
mov
mov
adc
push
and
mov
jbe
xchg
cmp
xor
or
pop
lods
lret
popa
stos
shlb
fsubs
push
mov
and
mov
fstpl
out
test
test
cmpsb
imul
push
dec
cmp
adc
aam
jl
leave
popf
aas
mov
sub
shll
movsl
push
adc
inc
outsb
dec
sbbb
add
sarl
fsubrp
ss
cmpb
insb
sbb
add
adc
mov
sub
and
icebp
cmp
leave
xchg
inc
mov
xor
xchg
cmp
lret
stos
mov
mov
xchg
sub
das
lcall
jne
mov
cli
ret
xor
aad
mov
xor
jmp
mov
mov
lahf
pop
adc
mov
xor
sub
lock
inc
xor
cs
push
inc
aam
push
xchg
in
push
cmpsl
jo
or
xchg
push
mov
sub
xor
add
mov
adc
xor
lea
sbb
fistl
mov
xchg
add
dec
and
inc
inc
jecxz
dec
xchg
cs
rcrl
sbb
mov
mov
mov
xlat
mov
sub
in
std
inc
fscale
or
adc
xchg
popa
es
jne
dec
dec
xchg
repnz
mov
cmp
mov
jne
cmp
call
mov
cltd
dec
leave
pop
movsl
fwait
enter
xor
sub
fcomps
and
popa
push
jb
cmpsb
or
sahf
xchg
mov
dec
insl
xchg
xchg
inc
add
mov
or
nop
shrl
push
and
lret
and
adcb
loopne
jnp
sbb
jl
cmp
loope
adc
out
add
popa
lret
leave
fsubl
mov
push
sbb
push
sbb
xchg
shrb
pop
lock
pop
in
and
int3
outsl
push
fwait
mov
jbe
ffree
and
pop
dec
aas
dec
push
mov
icebp
cmp
stos
add
xchg
fs
int
inc
outsb
int3
pop
sbbl
sbb
sahf
in
les
cmp
adc
out
stos
sti
inc
out
xor
aam
ret
movb
sub
xchg
out
dec
mov
les
lods
pop
fs
push
cmp
mov
or
sub
mov
arpl
bound
arpl
nop
sub
shll
cmpsb
lret
xor
mov
mov
sub
jge
mov
add
mov
test
xor
mov
leave
test
sbb
push
movsb
add
mov
lcall
adc
push
aam
add
pop
add
pop
cmp
xchg
xchg
fdiv
mov
adc
and
and
ljmp
adc
and
jg
pop
aam
out
pop
push
test
loopne
pop
or
jle
push
sarb
sbb
data16
xor
inc
aas
loope
mov
inc
jmp
and
stos
mov
xchg
incb
jge
or
pop
pop
jbe
xor
inc
cmpsb
xchg
pop
arpl
dec
aas
add
and
push
lcall
push
in
rcrb
stc
mov
das
mov
cld
lret
dec
push
aad
sbb
jnp
test
stc
ja
cmc
jmp
or
jmp
mov
scas
call
xor
int
or
ljmp
mov
or
arpl
inc
mov
mov
lret
test
gs
mov
sbb
mov
ljmp
fistps
push
aaa
pop
xor
sbb
dec
pop
xor
jo
call
cmp
inc
adcl
adc
out
imul
jne
lock
icebp
stc
out
xlat
testb
test
lds
add
rcrl
imul
sarb
xchg
adc
mov
push
mov
cmpsb
imul
push
jl
idivb
or
mov
inc
cmp
pushf
out
xchg
lcall
pop
jle
rcr
mov
mov
insl
ret
sub
fmull
and
sub
pop
stc
sbb
adc
inc
dec
add
and
jnp
sti
shll
hlt
mov
jae
jnp
xchg
mov
and
adc
or
mov
dec
imul
sub
and
or
fmul
xlat
mov
sub
mov
push
cmp
cmp
adc
imull
push
ret
dec
xchg
out
decl
test
ror
adc
cld
icebp
movb
cli
adc
mov
in
sbbl
cmp
pop
mov
mov
sub
rep
lret
cmp
cmpb
int3
xchg
xor
testl
fucom
ds
adc
seto
pop
orb
leave
lods
cmp
cmc
pop
cmp
lea
wrmsr
pop
mov
fwait
div
mov
das
push
repnz
mov
stos
movsb
sbb
push
xor
push
bound
std
pusha
xchg
ss
mov
jp
loope
imul
hlt
xchg
sbb
mov
je
inc
popf
cltd
mov
jg
xchg
shlb
push
ret
or
ret
mov
insl
mov
cs
js
push
hlt
cmp
rorb
mov
mov
in
mov
in
or
xchg
mov
mov
xchg
mov
jge
rorl
xchg
xorl
push
int3
bound
pop
mov
cmp
je
ss
mov
push
daa
ffreep
loope
aaa
call
out
push
pop
sub
sub
mov
out
loop
sbb
lret
lods
cs
in
dec
jns
insb
iret
xlat
or
jno
jae
xchg
ljmp
insl
inc
movsb
enter
mov
dec
xchg
jg
fidivrs
dec
inc
cmpsb
and
cmpsl
rclb
xchg
pop
idivl
icebp
xor
jnp
xchg
pushf
adc
jns
dec
movsb
insl
lods
mov
cmpsb
inc
outsl
scas
int
xlat
dec
jl
scas
pop
xor
jnp
cmc
divl
pop
pop
gs
repnz
gs
icebp
cmp
add
fidivl
xchg
enter
ss
or
repz
hlt
jge
dec
cltd
mov
xchg
mov
movsl
ret
fstp
cmp
jb
jne
mov
bound
insl
int3
jl
fidivl
dec
mov
std
jno
sbb
test
inc
jb
adc
inc
cmp
pop
and
mov
stos
xlat
movb
rcrl
sbb
jne
test
lcall
push
lret
cltd
fcoml
scas
dec
push
lret
sar
cmpsl
in
or
jl
fimull
jno
jmp
inc
fdivrs
xchg
loop
jnp
mov
popf
push
add
outsb
int3
lods
stc
stos
xlat
addr16
ds
jmp
shrl
lret
les
fmul
rolb
push
adc
les
add
ja
pop
jnp
push
or
mov
scas
gs
xchg
jmp
jae
mov
sbb
cwtl
mov
nop
cwtl
dec
sbbb
xor
repz
call
sbb
rcll
lods
insb
inc
mov
mov
push
lds
mov
int
add
jg
inc
sub
jo
scas
push
mov
sti
mov
cld
pop
mov
xchg
and
ss
add
and
bound
mov
mov
jo
pusha
xor
push
inc
cwtl
sbb
lock
add
pusha
rolb
arpl
sub
xor
jl
out
sarb
lret
mov
adc
inc
add
sub
xchg
mov
cmp
iret
gs
pop
shrl
aam
cmp
fsubl
xor
push
pop
dec
out
sub
pushf
movsl
cwtl
movsb
fwait
loopne
sbb
mov
mov
xchg
mov
jge
sbb
arpl
dec
loope
and
out
add
fiaddl
cmp
mov
pop
mov
incl
or
or
sti
stc
aam
or
or
pop
sub
sbb
outsb
arpl
cmp
mov
pop
pop
call
pop
mov
pop
push
sub
pop
cmp
xchg
push
fidivrs
dec
aaa
jle
sbb
sti
pop
add
mov
mov
mov
std
mov
and
scas
push
cmc
and
in
or
push
xchg
aam
clc
cmp
ficoml
addl
dec
lea
xchg
inc
push
and
shrb
pushf
outsl
dec
data16
adc
adc
arpl
lret
orl
in
adc
loop
mov
aam
lcall
sub
mov
in
mov
movsb
addr16
push
test
and
xchg
dec
in
imul
movsl
test
pop
hlt
popf
aas
pushf
sub
push
mov
adc
push
addb
fldt
icebp
adc
test
mov
mov
xchg
loopne
std
pop
push
nop
hlt
xchg
push
xchg
cltd
leave
pop
imul
shlb
or
xchg
lahf
xor
push
jo
jge
cmpsb
fidivrl
jmp
pop
call
xchg
loop
hlt
jmp
xor
or
mov
pop
je
lret
hlt
mov
xchg
xor
jge
rclb
push
mov
jg
sub
mov
mov
adcl
or
leave
shlb
mov
and
sub
aam
fsub
xorl
inc
and
and
mov
jo
in
xor
out
and
out
xor
or
sub
insb
loope
mov
mov
mov
jmp
je
lret
push
mov
pop
push
mov
iret
arpl
mov
sub
jb,pt
jg
shlb
add
pop
pop
dec
fcmovnu
into
aam
pop
incb
fs
cwtl
in
inc
inc
add
mov
jge
mov
push
daa
icebp
xlat
arpl
dec
lock
cwtl
std
mov
scas
orl
dec
xchg
cmp
mov
push
jbe
pop
and
xchg
hlt
imul
lock
pop
xchg
xchg
aas
pusha
cmp
jns
sub
dec
pop
lcall
adc
clc
test
insl
pushf
inc
je
test
ljmp
cmp
adc
jo
sbbb
inc
sbb
sub
les
cmpsb
lea
sub
rcll
popa
cld
data16
mov
in
push
imul
pop
add
jnp
adc
add
push
pop
leave
dec
pop
lcall
xchg
outsb
scas
jmp
xchg
dec
mov
adc
lods
mov
push
inc
mov
dec
stos
popa
or
rcrb
mov
loop
and
inc
sub
cmp
jns
jmp
dec
add
jae
push
iret
cmp
mov
movsb
jb
sub
xchg
cmp
pop
cltd
mov
loop
pop
pop
add
in
imull
mov
dec
aaa
xchg
lock
inc
xor
gs
push
sarl
pop
mov
pop
and
pusha
repz
sbb
adc
jbe
or
pop
xchg
testb
cmc
in
enter
fsts
adc
add
fcoms
push
pushw
loope
out
imul
bound
push
mov
in
cmp
mov
dec
cld
cmpsl
test
jle
outsb
or
ja
bound
pop
xchg
loopne
pop
dec
je
dec
sub
sbb
inc
adc
ja
inc
mov
cmpsb
bound
xchg
dec
ljmp
lods
jo
mov
out
mov
and
push
addr16
jbe
pop
daa
sbb
lock
push
gs
test
mov
push
rorb
sbb
jo
sbb
push
or
push
cld
push
fcomps
sti
and
outsb
dec
insb
add
lods
ss
js
outsb
outsb
idiv
in
cmp
pop
out
rol
add
loope
mov
push
jmp
sbb
outsl
sbb
idivb
divl
xchg
pop
call
pop
aas
push
cmp
subb
add
addr16
add
notl
fidivrs
test
lds
inc
mov
add
ljmp
idivl
mov
aaa
cmp
inc
inc
sub
loop
rolb
ret
mov
cmp
mov
mov
adc
mov
jnp
sbbl
jg
inc
inc
jg
dec
mov
sbb
pop
loope
xor
fstl
call
call
rolb
jno
arpl
rcr
sahf
adc
dec
jns
out
fs
xchg
pop
push
bound
cs
rorl
sarb
lret
stos
sub
enter
mov
adc
dec
or
cmpb
cld
in
pop
out
fdivr
lret
rcpps
frstor
push
clc
adc
repnz
scas
sbb
push
lret
rol
dec
ja
jne
mov
cmpsb
enter
or
daa
aad
test
adc
in
out
sti
shr
lods
inc
inc
in
sub
push
or
add
inc
inc
add
fs
cli
mov
in
aas
lods
jae
xor
aam
hlt
push
jne
sbb
out
or
sub
dec
mov
pushf
or
ret
or
push
clc
mov
cmpl
or
jae
or
mov
and
fldcw
sbb
pushf
push
inc
leave
scas
jecxz
popf
xchg
lret
aas
xchg
mov
pop
cwtl
test
mov
push
call
arpl
popfw
jecxz
mov
insl
xor
in
test
mov
scas
mov
xchg
into
call
dec
sub
jecxz
repz
lcall
mov
pop
out
sbb
dec
test
repnz
adc
sahf
cld
xor
add
mul
jbe
or
in
lret
xchg
popa
pop
mov
pop
sti
mov
jo
add
lods
movsb
nop
out
movsb
push
mov
and
testb
sti
adc
mov
xchg
shr
scas
xchg
in
mov
jmp
imul
push
les
cwtl
fwait
popa
xchg
fdivs
jecxz
sbb
shrb
sub
sahf
ja
adc
repz
lock
testb
mov
jns
jo
mov
add
push
sti
pop
pop
fistl
dec
repnz
ljmp
xchg
outsb
mov
aaa
fcompl
mov
stos
or
dec
cmp
lret
stos
mov
jno
mov
call
nop
pop
dec
insb
pop
iret
mov
sub
js
or
pop
sbb
mov
xor
cmp
daa
pop
and
pushf
cmpsb
or
push
fcomps
and
or
mov
fsub
inc
sbb
hlt
and
loopne
nop
insl
inc
push
push
fidivl
push
sub
or
cltd
push
cmc
clc
mov
mov
dec
pop
in
pop
add
jno
sarb
je
inc
dec
mov
adc
push
fwait
sbb
cmp
add
pop
jns
out
daa
mulb
jae
mov
loope
std
stc
popf
test
sahf
and
dec
sbb
mov
inc
add
in
nop/reserved
lret
jns
and
pop
repnz
pop
ljmp
push
jp
aad
pushf
mov
out
cmp
mov
mov
and
das
adc
jnp
stos
inc
aam
es
inc
add
and
inc
sbbl
fists
mov
mov
jbe
lods
fisttpl
sub
out
jnp
lea
in
fists
in
lcall
xor
loop
inc
sub
bound
outsl
dec
js
adc
popa
xor
sub
dec
xor
jmp
xor
push
pop
add
and
imul
in
ja
sti
movsb
popa
sbb
pop
and
and
push
movsl
movsb
dec
pop
das
mov
sbb
sarb
xor
adc
fisttps
cmpsb
xchg
arpl
push
lret
fbstp
push
in
or
adc
pop
repnz
jle
movb
push
sbb
pop
add
cld
mov
and
adc
out
push
enter
inc
pop
jecxz
cltd
insb
pop
iret
icebp
shll
cmpsb
outsl
jp
ja
add
jb
sub
lahf
clc
fldenv
fimull
stos
sub
pop
sbb
adc
xchg
dec
jns
les
ds
aam
jno
add
add
dec
jbe
fcompl
andb
xchg
mov
push
push
sbb
sbb
cmp
in
out
stos
mov
xor
neg
add
mov
sbb
mov
xchg
pop
in
cld
fldt
xor
xchg
stc
dec
mov
or
jg
out
mov
mov
lret
in
test
pusha
lock
dec
in
inc
jbe
mov
mov
in
jno
mov
push
pusha
and
js
push
lahf
lods
ljmp
out
jae
xchg
add
fcomi
inc
stc
inc
hlt
jl
hlt
lcall
jmp
sbb
bound
loope
and
fs
adc
jl
xchg
xchg
and
negl
inc
mov
pop
push
add
xor
push
scas
cmp
leave
dec
into
test
enter
movsl
sub
pop
xor
gs
cmp
xor
add
adc
popa
adc
mov
in
dec
lahf
adc
sub
jb
push
loopne
adc
add
std
push
mov
lcall
iret
pop
add
nop
xor
jle
mov
jo
push
pop
movsb
or
addl
dec
and
cmp
cmp
mov
imul
xchg
das
stos
or
adc
js
xor
sub
add
std
data16
pop
mov
mov
and
push
xchg
sbb
inc
push
shll
add
adc
ljmp
sub
push
xchg
data16
lods
testl
es
jae
inc
jns
inc
xor
pop
pop
dec
ret
test
jne
std
mov
int3
push
push
hlt
xchg
ja
pop
cmp
inc
mov
out
sub
test
aaa
out
xchg
push
lret
cmp
and
mov
pop
leave
xchg
cli
xor
out
cmp
stos
js
loope
mov
pop
cs
test
jmp
iret
push
dec
out
pop
aam
lret
cmp
pop
enter
adc
imull
mov
push
das
icebp
xchg
and
rcrb
out
ja
mov
jno
mov
mov
add
jnp
xorb
movsl
testl
cs
cmpl
js
mov
xchg
jae
test
or
adc
popl
rcr
dec
cmc
or
push
lds
xchg
cmp
xchg
ret
setno
sbb
mov
push
iret
pop
popl
sub
leave
out
insb
mull
clc
fsubrs
cmp
cmp
int3
push
sbbl
sub
cltd
mov
add
outsl
jp,pt
stc
bound
les
subb
imul
push
pop
adc
add
cs
loop
mov
rcrl
stos
mov
xorl
scas
sbb
pop
jecxz
jo
fs
cs
cmp
mov
ljmp
push
pop
leave
add
fisubl
mov
roll
pop
lock
pop
aaa
sarl
test
repnz
sbb
test
xchg
push
stos
das
inc
aam
fucomp
mov
mov
ss
out
cmp
orl
cltd
fcomp
jp
movsb
cmp
sbb
sbb
cmp
jno
xor
test
cmp
les
mov
mov
shld
cmpsb
scas
negl
xchg
push
out
xor
xchg
pop
pop
xchg
jl
std
minps
aaa
cmp
mov
ret
jo
sahf
cld
cwtl
dec
xor
inc
push
push
xorl
cs
shr
or
fisubl
js
jmp
and
orl
outsl
mov
pop
mov
adc
jge
xor
jp
mov
scas
cld
inc
xor
or
aas
enter
outsb
loope
bndstx
lds
test
lock
sti
in
cmc
mov
fwait
sbb
dec
aas
pop
cmp
jge
sbbb
or
test
das
push
cli
inc
movsb
xchg
push
loop
enter
jae
dec
stc
dec
rcrl
out
inc
pop
xor
add
mov
inc
cmpsl
dec
test
or
inc
loope
jne
sbb
xor
lea
das
outsl
mov
inc
jg
pushf
mov
xchg
imul
inc
or
iret
stos
xchg
mov
push
sub
ds
jp
mov
insl
popa
and
adc
push
movsl
pop
cmp
fsub
pop
dec
ss
fistpll
fldpi
js
lea
nop
ret
push
add
jg
jbe
stos
sbb
jl
cwtl
out
jbe
inc
nop
and
xchg
das
add
shll
shlb
fbstp
lret
add
cwtl
xor
inc
or
cmp
pop
cs
scas
add
sub
test
test
dec
add
add
sbb
push
push
or
or
adc
or
cmp
sbb
cmp
mov
mov
cmp
cwtl
shl
mov
xor
adc
push
fs
mov
mov
scas
movsl
mov
fnstcw
dec
dec
fbstp
cli
add
push
mov
sub
mov
test
ret
in
mov
jg
inc
adc
notb
call
pop
insb
fists
rcll
jo
fldcw
je
xchg
idiv
and
rolb
sbb
and
mov
or
push
xor
cli
cmp
daa
xchg
rclb
mov
mov
mov
hlt
loop
cld
cmp
jmp
mov
test
xor
sub
ret
test
dec
in
inc
xchg
test
popf
sub
sbb
aam
and
xchg
push
jns
int
mov
sbb
lds
dec
adc
setl
std
loopne
mov
insb
add
push
mov
hlt
mov
pop
enter
push
mov
lret
mov
fnstenv
jae
jg
ljmp
jae
pop
scas
sbb
sbb
or
and
roll
dec
pop
arpl
iret
xchg
pop
jecxz
inc
add
es
or
cmp
std
xor
xchg
cmp
pop
in
adc
lahf
inc
int3
mov
ret
jmp
mov
repnz
ficoml
pop
xor
jle
cli
enter
sbb
and
aas
xor
jns
jo,pn
inc
xchg
imul
leave
pop
movsl
shr
lock
int
test
jo
and
inc
fmuls
adc
ja
ss
in
push
loope
xor
jge
push
push
outsl
cmpsl
cli
lahf
pop
jle
cli
cmp
pop
and
test
cmp
lret
adc
xlat
testb
inc
scas
inc
xchg
sub
andb
mov
push
int
sbb
inc
inc
xor
cmp
test
push
icebp
arpl
xchg
jae
mov
xchg
add
fildl
mov
imull
cwtl
mov
jecxz
test
stos
push
jg
inc
repz
adc
les
lds
inc
inc
adc
in
aas
leave
sbb
popa
int3
or
into
push
lret
jne
mov
shrl
xchg
xor
add
leave
xor
mov
jae
enter
inc
and
mov
pop
xchg
loope
imul
scas
lods
ret
xchg
sbb
outsl
into
in
inc
sub
jae
pop
mov
mov
jo
mov
out
jp
xor
push
pop
test
mov
mov
dec
dec
fisttpl
ret
jae
cmpsl
jmp
mov
push
mov
shlb
sbb
bound
cmp
xor
outsb
es
cli
js
sub
gs
lock
add
dec
in
cmp
out
addl
dec
cli
hlt
adc
adc
in
in
js
and
and
or
or
inc
lea
jns
push
or
fwait
lret
mov
popf
fwait
shl
andl
lods
cmp
push
lret
cmpsl
sub
lahf
sbb
mov
push
int3
inc
inc
mov
in
test
sbb
mov
xor
xchg
aaa
nop
pop
lods
xor
popf
es
pop
mov
out
pop
pop
or
outsb
popa
stos
stc
ds
push
lret
pop
xchg
setge
pop
mov
dec
enter
in
inc
xor
jge
or
pushl
jo
loope
or
addr16
imul
jbe
mov
addr16
aas
ja
clc
mov
mov
jp
shl
insl
jno
add
xchg
lcall
or
lds
xor
addr16
cmp
jge
mov
mov
cli
push
pop
imul
ret
enter
jmp
scas
in
adc
lods
jle
dec
or
scas
xchg
push
lods
lock
jl
xor
pop
call
fbstp
in
xchg
dec
sbb
data16
inc
mov
int
inc
add
push
addb
outsl
cmp
fwait
pop
test
cmp
daa
mov
xchg
and
mov
out
pop
lret
jbe
xor
fiadds
xor
mov
insb
xor
sbb
push
repnz
dec
xchg
mov
xchg
cmc
push
mov
pop
push
push
aas
out
sbbb
aas
aad
dec
inc
cmpb
add
fldcw
pusha
or
sub
mov
out
inc
bnd
inc
sbb
add
and
adc
push
jg
xchg
dec
add
add
pop
lret
aam
xchg
adc
scas
inc
rcll
inc
inc
push
xchg
jns
ljmp
cmc
sbb
pop
dec
push
mov
fisubrs
and
in
mov
addl
inc
stos
insb
inc
adc
dec
in
xchg
push
push
fsubrp
pop
fadds
jnp
xor
notl
adc
dec
call
inc
cmc
jae
inc
pop
push
fwait
sarb
dec
sub
lahf
pop
cmpsb
adc
neg
xchg
xor
and
cmp
jp
cs
cli
mov
jno
sub
push
and
out
sbb
mov
into
pop
mov
pop
mov
les
mov
mov
add
aaa
or
xor
popf
rcrl
iret
out
mov
sub
sti
dec
movsl
jp
lock
adc
push
or
inc
jo
sahf
xchg
fldcw
mov
shr
stc
imul
or
in
fnstenv
cmp
loope
je
or
in
sub
mov
jne
aas
and
ret
test
mov
mov
jp
out
inc
imul
xchg
mov
scas
fmuls
fstl
mov
lret
mov
mov
add
adc
adc
test
mov
xchg
into
fdivrs
jle
outsl
aad
and
cmp
adc
scas
dec
hlt
out
sub
fdivl
mov
push
mov
icebp
in
mov
fdivl
ret
pusha
popa
and
push
aaa
pop
popa
push
cmp
inc
mov
or
mov
xor
mov
push
movsl
sub
insl
mov
sbb
bound
and
push
jb
mov
mov
stos
pop
push
dec
mov
sbb
xchg
fcomps
scas
nop
aaa
daa
sub
dec
sub
and
sbb
cmp
fldenv
cmc
jecxz
xor
ljmp
mov
and
aad
shrb
ud0
inc
sarb
loopne
jno
cmp
rorl
jns
xchg
mov
lret
cltd
mov
and
add
in
out
leave
sub
enter
push
sbb
arpl
pop
ljmp
lcall
sbb
mov
or
inc
lret
lods
js
out
movsb
leave
pusha
push
mov
or
je
push
and
les
cmp
adc
jg
jo
sbb
or
mov
push
arpl
ret
out
xchg
cwtl
iret
cs
mov
or
pop
mov
test
push
push
iret
mov
outsl
adc
rcrb
mov
xlat
arpl
stos
pushf
push
test
sub
into
aam
daa
jmp
fisttpl
fisubrs
cld
xchg
ficoml
pop
ds
cmp
loop
lds
mov
dec
xchg
ret
jecxz
mul
push
lods
lds
push
pop
xbegin
sbb
cmpsl
out
mov
cltd
sbb
cmpsl
out
dec
aad
cld
inc
jle
cltd
adc
xchg
inc
scas
lea
xlat
adc
cwtl
aaa
ffreep
push
push
les
adc
sbb
stos
gs
dec
fs
outsb
jmp
mov
popa
cli
lcall
fistpll
cld
ret
cmc
outsb
pop
cmc
ss
imul
int
stc
mov
pop
lea
lcall
jnp
mov
mov
sub
or
or
inc
xchg
pushf
dec
popf
fcoms
sahf
outsb
aam
inc
out
mov
je
or
cmp
lahf
pop
or
cli
sbb
push
fstpt
mov
rorb
sbb
cmp
popf
pop
cmp
mov
sub
pop
clc
lcall
insl
sub
in
stos
vshufps
fwait
push
fwait
in
adc
mov
pushf
lret
sub
cmp
ret
adc
cmp
sbb
loop
or
aad
ja
inc
add
scas
stos
repnz
push
notl
or
aas
ds
std
mov
pop
call
xchg
out
test
mov
loopne
jns
cmp
mov
stc
js
dec
call
aaa
clc
mull
mov
es
mov
sub
or
lods
loopne
lock
mov
mov
movsb
mov
dec
imul
cmc
adc
mov
lahf
inc
rolb
xor
inc
jno
mov
pop
lds
sbb
mov
cld
jge
jl
mov
cmp
lcall
and
xchg
int
lea
dec
das
jge
xchg
rolb
mov
dec
add
cmp
push
leave
mov
aaa
in
lret
xchg
inc
xor
dec
xchg
hlt
sbb
jbe
jl
and
sub
orl
andb
cwtl
movsb
shlb
cmpl
xchg
dec
or
push
aad
xchg
enter
pop
jp
ja
and
fisubrl
stc
sbb
xchg
daa
pop
inc
mov
fwait
jl
mov
and
scas
es
dec
xchg
cmc
aaa
pop
push
or
sub
enter
ss
jnp
into
in
aas
jno
jp
in
add
push
insb
pop
call
xor
test
mov
andb
inc
mov
sub
mov
cld
aad
mov
aam
add
sbb
mov
inc
movsl
mov
or
lods
inc
adc
pop
movb
xchg
nop
fisubs
filds
fbld
jbe
mov
jns
rolb
lret
add
cli
test
adc
pusha
cmp
daa
mov
ja
mov
pop
add
test
add
mov
dec
adc
iret
push
mov
and
push
adc
add
and
les
dec
into
fstl
aad
jb
add
test
rorb
sub
cmp
push
jp
xchg
sbb
jmp
push
fiaddl
push
movsb
adc
test
filds
pushf
rolb
sbb
add
fucomip
xor
lods
dec
jecxz
cwtl
adc
push
fisttpl
leave
js
inc
pushf
push
mov
fs
cmp
icebp
cli
bound
adc
cli
jle
outsl
mov
pop
mov
clc
xor
mov
popa
je
push
daa
fdiv
cmp
nop
aaa
and
dec
movb
jbe
xchg
jb
shll
xchg
call
subl
dec
fstps
fstpl
jbe
daa
mov
add
pushf
mulb
xorl
mov
and
jns
sub
push
jns
jg
out
sbb
cmpl
flds
js
dec
sub
add
lock
mov
lcall
add
mov
fcmovb
ja
stos
loop
xor
sbb
push
jmp
nop
dec
or
mov
insl
lods
mov
mov
ret
cmpsb
hlt
and
sbb
add
push
push
sbb
add
clc
mov
or
add
sbbl
lahf
pop
mov
mov
pop
dec
call
jne
inc
jno
enter
test
insl
jns
xchg
fcos
inc
cmp
or
cmp
ret
push
dec
add
or
sub
or
mov
stos
stc
scas
mov
mov
dec
jae
icebp
faddp
stc
ror
mov
push
mov
movsb
stc
xchg
jecxz
mov
or
imul
gs
test
das
inc
mov
fistpll
jecxz
and
pop
xchg
and
push
daa
in
cmpsl
in
mov
jg
xchg
clc
adcl
push
add
jle
jmp
std
stc
jmp
pop
cmp
andl
adcb
mov
adc
cmp
mov
test
aam
pushf
ficoml
cmpsb
incb
stos
adc
sub
pushf
adcb
pop
aad
das
jmp
jl
negl
repz
ja
stc
cld
cmp
mov
into
mov
xchg
mov
pop
inc
rorb
push
or
pop
inc
movsb
cld
adc
ljmp
xor
gs
pusha
dec
inc
cmp
or
sbb
cmpsl
jmp
pop
mov
testl
adc
adc
shlb
enter
or
push
cmpsl
sbb
loope
pusha
ficompl
fdivrs
ds
sub
outsb
loopne
add
stos
stos
push
xorb
lret
aad
jns
pusha
lcall
dec
jae
dec
fcomp
mov
in
jnp,pt
lret
and
call
jb
movsb
cmp
outsb
inc
daa
mov
sub
lcall
mov
push
pop
push
inc
call
mov
sub
pushf
int3
or
aam
in
xlat
mov
ret
cmp
and
nop
cwtl
incl
and
dec
lret
imul
ljmp
sbb
inc
push
jp
jg
pushf
mov
xchg
or
push
lods
ss
fnstenv
push
or
and
pushf
int3
dec
mov
fsubrs
pushf
scas
cmp
out
imul
lcall
cmp
xor
push
mov
stc
leave
test
push
mov
mov
mov
or
jge
out
imul
xchg
in
push
rcrl
iret
outsl
or
dec
ror
cmpsl
dec
push
lods
xor
xlat
jmp
and
or
ret
sub
jae
xlat
mulb
xchg
mov
xchg
ja
fmuls
adc
pop
out
movsb
and
push
outsb
pop
shrb
dec
mov
xchg
sti
cltd
push
call
stos
movsb
cli
lods
push
popf
jl
rorl
dec
mov
sbb
andl
inc
fcmovnbe
inc
loope
push
jp
sbb
jp
lcall
mov
loope
mov
add
or
outsb
movsb
and
rcrb
push
inc
mov
pop
cmp
les
fisubs
fprem1
bound
cmp
mov
push
mov
jg
ja
lea
ret
lds
daa
mov
pop
mov
call
out
or
dec
pop
std
lods
ficomps
dec
popf
add
std
outsb
bswap
ret
les
pop
rcr
pop
js
pop
pusha
inc
lcall
mov
dec
adc
js
fidivrl
mov
addr16
push
fcomp
hlt
insb
ret
sbb
das
or
push
sarl
add
pop
push
push
xchg
sbb
rcr
sub
fimull
jo
mov
push
mov
dec
add
jecxz
push
cmp
jnp
popa
notb
mov
repnz
mov
movsl
mov
lahf
imul
stc
mov
jno
xor
testl
sbb
std
cmp
dec
test
sbbl
or
mov
mov
mov
arpl
sub
lods
cs
xchg
mov
cmp
sbb
cmp
jmp
and
cmp
notb
mov
cmp
mov
push
insl
int3
lods
in
cwtl
inc
fimull
dec
cmpl
inc
cs
lret
addr16
cmp
cmc
pushf
mov
insl
ret
out
xor
pop
fistpll
ja
add
aas
ds
data16
mov
roll
adc
repnz
bnd
outsb
xchg
fcomip
testl
aad
add
fsub
sbb
imul
clc
addl
mov
push
xor
ret
or
push
insb
jae
xchg
leave
addw
je
fdivrl
roll
std
push
jns
clc
sbb
mov
cli
xor
jb
mov
or
sub
lcall
loope
out
inc
or
cmp
adcl
sti
jb
pop
ficoms
ja
mov
call
loope
mov
push
outsb
fwait
test
addr16
loopne
mov
fsubrs
fcompl
adc
fimuls
fisubrl
jecxz
inc
mov
mov
lods
scas
je
push
xor
insl
jecxz
mov
jge
xor
loopne
lock
test
shr
cmp
lds
xchg
mov
adc
jg
mov
fs
or
push
jle
jge
mov
inc
icebp
mov
test
adc
int
out
xchg
cs
inc
xchg
inc
mov
jl
dec
xor
inc
xchg
das
out
cmp
fcoml
js
iret
inc
lret
mov
addr16
adc
jae
in
cmp
movsl
arpl
mov
lahf
pop
bswap
mov
jge
push
repnz
ret
out
mov
and
pop
adc
xor
shr
push
add
sbb
scas
inc
sbb
inc
in
lcall
loop
lret
fidivrs
jne
push
sbb
add
mov
add
lret
cld
cmp
jnp
dec
adc
jmp
xchg
cwtl
mov
mov
lods
mov
insb
mov
popf
mov
sahf
xchg
adc
popa
sbb
mov
push
pop
lcall
pop
push
aaa
daa
int
test
jp
sub
movsl
sub
or
sub
jecxz
je
mov
call
sarl
imul
inc
scas
test
lahf
xchg
lret
cld
mov
in
cmpsl
fdivrp
repz
push
icebp
pop
aam
adc
addr16
bound
or
mov
xchg
negl
jne
ljmp
ljmp
pop
cmpsb
mov
mov
xchg
std
subb
pop
jns
rorb
orl
dec
cmp
sti
lods
ja
lock
jmp
sub
in
add
popa
push
push
mov
jbe
xchg
cmp
pusha
jmp
in
dec
adc
add
sbb
sbb
cld
xor
jle
xorb
in
mov
shrb
mov
repz
jge
fcomps
xchg
push
jbe
movsb
sub
lret
pushf
push
lcall
xchg
sub
or
jmp
xchg
mov
and
scas
push
loope
mov
mul
arpl
xchg
test
clc
push
fmuls
sub
pusha
int
shl
inc
jbe
std
aad
mov
ror
fidivrl
loope
outsl
cmc
bound
mov
and
mov
mov
imul
je
daa
lock
fstpl
mov
mov
ja
shl
lret
cmpsl
scas
pop
loope
xlat
cmp
xorl
decl
pop
xchg
insl
pop
mov
adc
fwait
and
enter
scas
daa
add
inc
cltd
mov
fs
cmc
arpl
ret
push
addr16
pop
or
push
xor
inc
icebp
stos
pusha
adc
xlat
sbbl
in
das
pop
scas
jl
inc
push
imul
jle
sbb
imul
lods
stc
mov
orb
pop
mov
push
and
rcrb
popf
lret
dec
scas
push
hlt
xchg
les
mov
arpl
popf
xchg
inc
or
pop
outsl
aas
push
pop
std
push
repz
fsubs
cmc
add
mov
jae
sahf
aaa
mov
inc
push
loop
stc
pusha
sbb
xchg
lret
jmp
jg
xchg
cli
mov
xchg
cmp
test
scas
jecxz
das
fisttpll
lock
lock
sub
outsl
sub
popf
adc
mov
dec
cmp
adc
in
inc
lret
and
subl
jecxz
mov
xor
and
out
jbe
push
icebp
cwtl
jbe
sahf
dec
test
mov
nop
sbb
cmpsb
in
fwait
mov
cmovne
mov
fdivr
or
aas
or
dec
clc
mov
fdivrl
mov
loope
test
loop
mov
push
jge
adc
mov
cli
push
ror
call
push
mov
lret
push
and
add
lahf
mov
and
in
ljmp
or
and
dec
lret
mov
jnp
pop
mov
jmp
cmp
push
pop
movsb
daa
sbb
or
xchg
mov
cltd
popf
addl
nop
cmp
daa
xor
xorb
out
adc
mov
cmp
xchg
out
insl
xor
orl
in
pop
pop
xchg
repz
stc
mov
mov
cmp
testl
inc
rolb
xorl
push
lret
mov
andl
cmp
lret
mov
pop
nop
jmp
and
in
mov
lea
pop
fidivrl
rep
ficoms
xor
mov
adc
and
cmp
cmp
dec
rcl
mov
or
arpl
mov
jle
adc
xor
cs
adc
in
xchg
pop
adc
popa
popf
arpl
into
and
mov
ja
loop
push
push
addb
xchg
js
outsl
int
mov
sub
dec
dec
mov
mov
xchg
dec
pushl
cmpb
or
pusha
ret
loope
stos
inc
stos
ficoml
pushf
loopne
sbb
bound
stc
mov
mov
movsb
jg
push
fwait
mov
mov
jle
test
fiaddl
or
sarb
jle
bound
outsb
mov
push
mov
mov
push
jnp
or
ss
inc
out
or
jo
es
ret
mov
rol
mov
insb
sub
nop
push
jmp
test
or
stos
jecxz
es
mov
lds
out
ja
stc
pop
test
jne
bnd
negb
scas
in
cmp
mov
jns
rorl
xlat
aad
mov
test
movsb
test
icebp
mov
mov
push
cli
pusha
sub
aaa
mov
mov
lea
scas
addr16
mov
call
mov
jb
dec
push
ret
ss
dec
xchg
jle
mov
sbb
test
inc
loope
andl
pop
pop
scas
mov
mov
fisubl
fs
push
xorb
call
shl
cmpsb
gs
out
stos
in
les
out
pushf
push
or
jns
adc
leave
dec
je
mov
jno
int
lea
hlt
fnstcw
sub
outsl
push
pop
daa
xchg
sbb
ret
xchg
jecxz
iret
jnp
mov
jne
push
shrl
xchg
sub
dec
stc
popa
insb
test
stos
push
jp
push
rclb
xor
mov
mov
stos
cmpsb
mov
sub
mov
in
lret
mov
and
push
sbb
dec
repnz
les
xor
sbb
dec
jne
shrb
jb
lret
outsb
int3
cmp
fnstenv
adc
dec
stos
out
dec
aas
stc
ds
fmuls
out
inc
push
xchg
lret
adc
repnz
test
pop
inc
push
ret
dec
adc
mov
cmp
daa
aas
out
rclb
addr16
pop
push
mov
inc
lcall
xlat
jmp
popw
xchg
push
inc
cmp
movsl
test
imul
out
mov
das
push
iret
sub
iret
insl
push
in
aam
cmpsb
jno
filds
xchg
cmp
adc
fwait
jg
scas
test
or
sbb
mov
popa
shl
sahf
push
xor
add
push
iret
inc
fists
incb
cmpsl
sbb
stos
addr16
movsb
push
mov
fsub
repnz
mov
imul
jmp
xor
jns
jo
xchg
es
pop
ljmp
cmp
mov
mov
inc
inc
out
nop
mov
pop
je
cmp
subl
sbb
lock
mov
and
dec
lock
xchg
pop
xchg
shll
xchg
out
cmp
sahf
inc
push
jo
adc
pop
scas
dec
loope
xchg
push
arpl
das
mov
call
mov
insl
pop
pop
sbb
mov
gs
jp
shll
push
sbb
pop
dec
add
push
divl
popl
adc
or
add
xlat
imul
mov
xchg
outsb
pop
pop
and
mov
movsl
call
pop
push
jne
cmpsl
sub
cmp
ret
movsl
mov
test
fisubrl
loop
mov
jg
cmp
and
xchg
jnp
jl
xchg
add
push
jl
add
mov
dec
inc
inc
inc
pop
add
pop
mov
cld
into
int3
mov
mov
jns
loopne
jb
js
adc
mov
std
pop
xchg
jb
sbb
xchg
sti
in
jge
pusha
sub
cmp
test
sub
push
xor
push
mov
fists
add
inc
push
push
scas
in
rclb
xor
push
adc
push
jle
iret
iret
add
xor
mov
jp
mov
cmpsb
data16
les
mov
rcll
push
push
shll
shlb
mov
pop
fs
mov
sti
in
fstpl
stc
fdivr
stos
dec
sbb
dec
cmp
add
add
cmpsb
leave
daa
lds
mov
iret
loope
fsubs
fstpt
shlb
aad
push
stos
fldz
jecxz
push
cld
jb
dec
lret
mov
dec
jp
dec
aaa
push
and
or
pop
pop
mov
xor
mov
fwait
adc
pop
xchg
pusha
mov
xchg
mov
pop
and
sbb
sub
dec
shll
xchg
adc
adc
leave
cmpsb
lret
xor
insl
mov
dec
dec
test
xor
scas
xchg
pushf
fs
stc
dec
dec
xchg
pop
mov
inc
push
jp
lret
movsl
insl
adc
push
pop
rorb
jg
xor
rolb
pop
mov
jo
test
pop
push
mov
mov
sub
adc
mov
mov
out
xchg
fldt
adc
lods
cmp
es
imulb
loop
jns
sti
ret
out
aam
mov
repz
and
mov
cmpsb
faddl
mov
imul
repnz
test
outsb
icebp
push
push
leave
movsb
icebp
inc
shlb
adc
fnstsw
jecxz
sub
jl
inc
sub
cmp
cmp
jo
push
push
or
jmp
jmp
adc
in
or
leave
jg
inc
hlt
out
adc
stos
scas
and
addb
cmpsb
mov
mov
fnstsw
jl
pop
js
frstor
pop
mov
pusha
jl
push
repnz
jo
loop
jae
or
pop
aam
sbb
lods
sbb
popf
inc
xchg
and
lahf
add
das
mov
adc
sbbb
pushl
movsl
lcall
jne
subl
dec
push
fs
icebp
jg
xor
jno
inc
dec
cmp
ret
mov
add
push
or
mov
mov
sbb
stos
sbb
cmp
cwtl
mov
mov
shlb
or
pop
add
and
xor
notl
into
and
mov
popf
pop
jae
in
insb
mov
mov
jns
jb
cmpsl
repnz
cltd
cmc
sub
bnd
add
data16
addr16
sub
cmp
sbb
fisttpl
jb
mov
mull
push
pop
lret
mov
xchg
int3
stos
cmp
sbb
push
pop
cmp
lea
or
int3
clc
test
out
mov
fcoms
mov
iret
and
adc
lcall
adc
cmp
or
pop
dec
bound
popf
jecxz
scas
sahf
push
decl
bound
add
xchg
xchg
insb
mov
mov
xchg
insb
xchg
push
pextrw
out
mov
xchg
and
sub
dec
notl
push
cmp
pushf
lods
je
jmp
xchg
mov
popa
pop
mov
jp
lods
jbe
mov
out
pop
xchg
add
loopne
jne
imul
push
xor
fmull
mov
testb
adc
loope
inc
mov
xor
xor
pop
repz
sbb
dec
sub
mov
shlb
lcall
inc
sub
mov
xor
mov
movsb
fnstcw
pop
scas
lea
jnp
sbb
sahf
dec
pop
dec
scas
mov
sbb
jno
add
imul
popf
mov
imul
sub
cld
push
inc
jmp
adc
inc
gs
xor
mov
mov
fdivr
jg
pmaxsw
not
nop
leave
sbb
or
in
pop
mov
mov
mov
out
shlb
mov
jl
bound
mov
dec
jge
or
push
imul
cmp
fldenv
insb
mov
std
push
push
or
xor
mov
jecxz
call
ret
stos
out
xor
mov
test
in
cmp
sti
sub
stos
jnp
jbe
ret
int
nop
insl
cmp
xor
pushf
mov
jae
sub
lea
mov
jne
out
sbb
mov
movsb
arpl
hlt
sub
pop
add
sti
ss
add
pop
dec
push
jg
sarb
in
jns
jp
fidivrl
imul
pop
dec
inc
testl
cmpsb
dec
push
fcmovb
xor
sbb
dec
test
pushf
and
fwait
push
push
dec
jns
inc
inc
sub
push
jp
stos
ss
cmpsb
gs
push
xlat
dec
and
push
fs
sti
aad
les
adc
sbb
push
in
cmpsb
add
lds
adc
sti
xor
sbb
dec
jo
sbb
shl
shrb
add
add
dec
and
xor
pop
and
aas
pop
sbb
lahf
clc
popa
dec
dec
xor
pop
inc
adc
jo
mov
stos
enter
mov
dec
cld
mov
dec
inc
xchg
and
ret
lret
unpcklps
loop
test
and
insl
mov
push
pushf
in
and
or
mov
js
xor
out
sub
mov
or
push
lea
mov
dec
mov
in
daa
int
scas
jmp
jmp
cli
xchg
cmp
pop
lock
and
shll
fwait
sbb
lds
adc
test
mov
push
sbb
mov
pop
subl
and
xlat
mov
mov
pop
mov
repnz
aas
jge
adc
push
xchg
test
jg
fcomp
push
popa
xchg
int
dec
pop
loopne
into
cld
mov
push
dec
out
jae
cmp
mov
fs
es
mov
adc
out
dec
xchg
push
push
dec
dec
ja
mov
in
addr16
in
adc
mov
mov
imul
das
dec
sub
sub
xor
cmpsl
adc
pop
push
into
mov
test
push
jg
fs
sub
sti
push
dec
jle
xchg
int3
bnd
mov
push
or
pop
ja
mov
jbe
sub
and
ljmp
xor
test
xchg
fwait
cmp
js,pn
jnp
mov
add
and
popf
insl
inc
mov
adc
pop
push
xchg
fstpt
push
insb
cmpl
fsubrs
add
out
adc
xchg
loop
xor
and
cmpsl
push
into
mov
cmpsb
sbb
push
cmp
adc
int
mov
mov
push
pop
out
or
mov
repnz
rcl
int
and
mov
sub
add
add
aaa
jbe
ret
jg
jns
add
jecxz
rcrb
outsb
je
add
fnstcw
testb
sar
icebp
inc
mov
imul
push
sub
repnz
inc
mov
shlb
inc
out
stos
outsl
test
movsb
stc
pop
jbe
js
xor
xchg
imull
fwait
and
arpl
xorl
out
fsubl
faddl
adc
jns
cli
push
xchg
dec
inc
and
dec
fstl
in
mov
mov
aas
ljmp
out
call
mov
add
push
xchg
hlt
pushf
xchg
insb
jnp
iret
push
daa
loop
xchg
repz
cs
and
inc
test
outsb
fisubrs
mov
push
out
jb
bound
jbe
cld
inc
sbb
jno
mov
jae
push
mov
cmp
sahf
dec
out
out
sub
clc
xchg
mov
pop
push
xchg
lock
xor
inc
inc
cmp
pop
int
data16
lret
mov
shll
je
retw
lret
lods
adc
mov
jecxz
jno
ja
xorb
in
sbb
adcb
das
pushf
mov
cld
xlat
sub
cmp
add
mov
or
shlb
rcrb
cli
data16
fdivrs
mov
jns
mov
or
arpl
adc
into
xbegin
mov
lret
ss
mov
inc
bound
mov
jne
cli
ljmp
inc
or
hlt
popa
cmpsb
push
mov
js
mov
xor
cmp
cmc
xor
arpl
xor
loopne
jno
jmp
movsb
push
out
inc
cmp
pop
popa
add
aad
mov
in
mov
push
or
push
sub
add
testl
jl
roll
icebp
fadds
push
inc
fisubrl
push
xchg
sub
cld
outsl
test
cmp
clc
pop
dec
mov
jecxz
pop
or
xchg
mov
fwait
int
xchg
or
shlb
xor
hlt
mov
in
jno
dec
mov
adc
or
icebp
pop
data16
jbe
lret
inc
mov
stc
xor
jmp
es
out
jecxz
les
cmp
sub
pop
mov
dec
hlt
enter
add
test
add
movsl
jge
push
jns
lds
daa
jg
mov
push
mov
sarb
pop
in
sub
aas
aad
cmpsb
or
dec
xchg
mov
sbb
adcb
loopne
xchg
fs
push
add
test
pop
pop
lret
pop
mov
addl
sahf
mov
mov
int3
adc
shrb
repnz
inc
rolb
mov
jecxz
lret
out
push
mov
pop
lahf
rep
xchg
cli
jns
and
add
dec
cmpsl
repz
sub
xor
mov
pop
pop
mov
dec
adcb
pop
mov
call
xchg
fsubl
rol
jge
jg
push
xor
pop
xlat
lods
fisttpl
sub
xor
jae
adc
push
iret
cmpsb
adc
inc
scas
pop
incb
orl
aas
and
push
jmp
xchg
pop
popa
imul
sti
clc
outsb
repz
movl
shr
push
idiv
xchg
xor
xchg
out
and
loope
stc
mov
mov
mov
sbb
sbb
mov
roll
int
add
and
cmp
push
mov
mov
ja
mov
leave
ljmp
xchg
mov
fdivp
adcb
shll
mov
pop
mov
iret
daa
push
xor
cmp
inc
lcall
bound
dec
sbb
call
dec
pop
cld
jne
repz
dec
rcrl
mov
leave
rclb
jmp
roll
inc
mov
mov
in
stc
xorb
jmp
enter
leave
cmpsl
daa
scas
sub
jmp
push
sahf
jl
xor
into
push
es
aas
xchg
mov
jne
cmp
mov
lods
ret
aaa
pop
xchg
fmuls
ds
jbe
dec
mov
scas
xchg
out
je
inc
cmpsb
dec
ss
pop
and
push
popf
lds
adc
pop
sahf
enter
cmp
adcl
in
xor
mov
mov
mov
sub
fcmovnb
adc
add
fsubrs
arpl
jne
in
or
mov
out
lahf
mov
aad
insb
pop
jb
cld
xchg
movsb
jbe
pop
ljmp
lods
sub
in
pop
pop
mov
std
stos
cmpsl
addr16
push
xchg
aaa
outsl
adcl
addr16
add
push
push
or
push
xchg
loopne
test
fbstp
push
loopne
xchg
aaa
and
mov
inc
mov
push
pop
ljmp
scas
add
mov
fnsave
mov
pop
inc
hlt
cmpsl
repz
movsb
push
dec
xchg
xor
xchg
nop
sbb
jle
jno
fcmovnbe
je
push
inc
push
mov
sti
add
jmp
and
pushl
scas
test
jl
out
rcrb
push
push
clc
test
fcoms
stc
imul
mov
push
push
aam
mov
jnp
cmp
xchg
and
cmc
xchg
mov
jl
ja
aaa
xchg
and
inc
xor
inc
push
mov
sahf
imul
sub
adc
arpl
adc
adc
xor
mov
add
lock
sarb
cmpsb
insb
test
je
sti
mov
mov
mov
sbbl
pop
pop
in
loop
call
pop
ds
popl
sub
or
push
jnp
pop
repnz
mov
mov
testl
imul
mov
xor
xor
cmpl
push
imul
out
add
or
inc
sub
cltd
pop
es
je
adc
sahf
pop
push
lcall
add
adc
pop
or
insb
outsb
mov
fisubrs
lods
fwait
lods
xchg
adc
js
rcl
clc
daa
shlb
int
dec
xor
sbb
fcoms
or
push
add
xchg
push
adc
mov
mov
cmp
push
in
xor
mov
pop
jmp
stos
jns
cmp
and
jnp
mov
cli
jno
push
adc
in
cmp
mov
into
pop
out
mov
movsl
scas
adc
mov
int
enter
push
xchg
xchg
test
movsl
inc
dec
mov
mov
lock
loopne
mov
loop
jp
pop
push
in
stc
stos
lcall
push
and
mov
fcoms
shl
std
sbb
xor
mov
popf
or
mov
xchg
xchg
add
orb
or
or
cmp
pop
mov
add
xlat
add
mov
je
fisubrs
sbb
popf
mov
in
lahf
add
addb
data16
dec
lahf
sub
inc
daa
push
adc
push
mov
pusha
jge
pop
cli
mov
cmpsb
dec
xor
mov
fadd
sbb
jae
mov
ljmp
stos
xchg
xchg
and
repnz
pop
sbb
out
mov
ficomps
pusha
sbb
stos
push
sub
jns
aas
sub
adc
outsb
push
into
and
icebp
adc
mov
sbb
sahf
es
imul
fstl
xlat
dec
adc
gs
addr16
fldcw
mov
sbb
mov
sbb
push
push
inc
and
lock
movsl
push
inc
out
mov
inc
call
pop
adc
insb
cmc
insb
in
jge
mov
sbb
mov
divb
loopne
mov
out
fdivs
inc
test
push
je
jne
jb
xlat
aad
dec
nop
pop
test
test
into
mov
fwait
mov
jb
addr16
sbb
repz
aas
cmpsb
pushf
cmc
pushf
mov
hlt
jp
dec
dec
pop
sbb
inc
dec
push
add
leave
out
outsl
and
sub
xor
xor
push
addr16
jmp
adc
rcr
rclb
adc
lock
and
jne
rorl
ja
andl
push
adc
inc
sub
adc
dec
cmpsl
stc
gs
fbstp
pop
fcmovu
sub
ljmp
int
mov
movb
xchg
lahf
daa
push
jnp
lods
rorb
jno
dec
mov
xchg
or
sub
push
jle
out
lahf
cmp
pop
sbbb
mov
dec
xchg
add
jg
push
aam
mov
mov
scas
cmp
gs
mov
std
je
cmp
jne
jmp
pop
xchg
xor
in
xchg
repz
pop
adc
push
sarb
movsl
lcall
mov
shrb
xlat
add
jae
fsubr
xor
out
cltd
mov
sti
add
push
outsb
mov
dec
lcall
gs
jp
and
mov
jns
add
mov
loope
ljmp
imulb
or
sbb
or
aad
sbb
imul
and
mov
xchg
mov
xlat
mov
pushf
ret
xor
lahf
lock
hlt
out
jmp
pop
jle
popa
mov
sar
push
push
jbe
xchg
xor
add
ficoms
shrb
mov
stc
popf
mov
xchg
lock
push
or
ljmp
adc
xchg
mov
adc
imul
xchg
mov
mov
repz
lock
and
push
push
sbb
push
mov
sbb
mov
aad
sbb
xchg
inc
mov
and
outsb
pop
iret
popa
pop
incl
inc
xor
jno
lahf
int
fmuls
imul
inc
movsb
mov
push
test
jge
cltd
popa
sbb
push
test
mov
mov
jl
stos
rcl
mov
jmp
xor
sarl
mov
sbb
jmp
in
add
xchg
pushf
jl
shlb
clc
or
ret
pushf
cltd
int3
pop
dec
adc
int3
mov
into
push
stc
and
stc
push
jl
outsl
pop
pushf
jno
inc
fdiv
leave
int
and
jg
cltd
jbe
sbb
jno
jo
and
jne
dec
or
shlb
imul
inc
pusha
lcall
fimull
jo
shl
push
sub
push
pushl
loop
idivb
pop
pop
jmp
jno
sub
mov
xchg
nop
and
pop
bound
mov
fnsave
inc
mov
int3
adc
pushf
cmc
jl
bound
mov
ss
dec
ja
xlat
leave
add
mov
call
push
movsl
pop
test
or
imul
ja
push
shll
mov
add
xchg
jg
cmp
out
out
sahf
data16
push
pop
sbb
add
mov
push
pop
rcll
repz
mov
cmc
mov
inc
adc
test
add
mov
lcall
xor
sbb
test
shrb
sub
clc
fsubrl
mov
std
lcall
fldt
sahf
js
pop
mov
fdivp
fildl
adc
test
repz
mov
loope
cmpsl
ljmp
gs
jmp
lods
push
out
mov
clc
mov
mov
adc
jmp
xor
hlt
cmp
add
jns
pop
xchg
outsb
hlt
add
sbb
movsl
in
pop
xor
dec
cmp
fisttps
int3
hlt
or
and
sub
mov
or
fisttpll
xchg
dec
cli
adc
fsubs
mov
loope
add
pushf
cmpsl
les
cld
push
mov
or
sub
shlb
bound
add
fdivrs
jb
lahf
je
imul
cmpsl
js
lods
jae
xor
xor
jmp
das
arpl
sbb
and
inc
mov
in
in
fcomp
aam
arpl
dec
xchg
stos
cmp
in
jne
andl
pop
add
rorl
adc
fnstsw
xchg
popf
jp
dec
enter
push
dec
fisubs
xchg
jbe
pop
or
push
mov
push
scas
rcll
cmp
sahf
add
jb
add
in
push
push
lahf
shrb
stos
roll
mov
decl
jmp
cltd
sbb
dec
add
dec
mov
pop
les
mov
dec
mov
lret
cmp
pop
icebp
sbb
push
jb
pop
sub
xor
imul
jge
dec
js
inc
jg
xchg
lret
inc
fcmovu
dec
lret
add
rcrl
add
decl
int3
shl
in
jne
shl
push
pop
daa
and
nop
xchg
and
or
sbb
cmp
push
stos
sbb
jg
pop
mov
sbb
ret
adc
pusha
imul
stos
test
sub
jae
cli
cmp
test
bound
faddl
test
out
mov
std
pop
sbb
sbb
inc
sbb
and
inc
sbb
sbb
jle
rorl
repnz
cltd
shlb
pop
clc
jg
in
or
test
mov
cmp
nop
addr16
push
cmpsl
push
aad
adc
sahf
test
dec
jg
lcall
mov
mov
call
pop
cwtl
mov
in
adc
push
fidivs
pop
inc
lds
push
pop
js
inc
push
sahf
stc
push
test
cmc
sub
inc
iret
xor
lock
xchg
xchg
aaa
push
add
aas
mov
mov
lods
repnz
je
repz
mov
cmp
sub
push
dec
jle
jge
jno
out
mov
jns
loop
and
ret
mov
cmpsb
std
jl
sub
jns
inc
lret
mov
pop
aas
sub
scas
mov
rclb
popf
stos
in
sub
mov
jo,pn
ja
mov
lea
xor
jp
sbb
gs
mov
test
or
les
aaa
imul
loop
sbb
in
mov
outsb
jg
sti
xor
loope
cmpsl
fstpl
ljmp
loopne
xlat
cmc
cmp
push
lret
jb
pop
fwait
and
sub
sub
test
sub
sbb
xor
mov
adc
add
outsb
ret
jb
adc
ret
or
into
pop
std
pop
ds
int
cltd
ret
icebp
cmp
into
clc
fnstenv
gs
xchg
fadds
orb
iret
fstps
adcl
test
fmuls
jecxz
lods
push
repnz
jno
inc
pop
popf
jg
dec
xor
add
int
mov
clc
insb
adc
sbb
inc
cmp
sub
dec
or
jmp
pop
ljmp
push
push
adc
inc
scas
sbb
scas
cltd
aam
imul
sub
mov
movsl
lock
mov
loope
sub
dec
cld
movsb
addr16
shlb
gs
sub
mov
les
aas
dec
jl
les
mov
stc
mov
shll
mov
xorl
pop
sbb
outsb
loope
and
sub
lahf
ljmp
lea
jmp
jg
sti
fisubl
add
dec
mov
xlat
push
and
mov
aas
inc
fadds
sub
cwtl
xchg
adc
sub
push
mov
lods
ja
cmp
jmp
dec
cmpsb
fwait
iret
popa
test
out
mov
jno
mov
daa
xor
inc
outsb
and
fldl
mov
jle
sub
inc
movsb
add
push
imul
das
je
test
scas
fidivrs
or
and
popa
cli
dec
cld
add
mov
mov
mov
out
mov
cwtl
stos
bound
icebp
push
and
jmp
mov
or
xchg
dec
into
and
aam
iret
ret
aaa
or
lret
jne
imul
sbb
cs
insb
pop
in
mov
sub
jb
pop
adc
add
orl
dec
sbb
ljmp
xchg
clc
shr
sti
stos
loop
ret
and
and
jge
push
movsb
cmp
push
loopne
enter
dec
popa
mov
js,pt
int
push
jle
rcrb
pushf
pusha
les
dec
call
outsl
and
jbe
lcall
fstpl
xchg
aad
in
mov
sbb
out
lea
dec
pop
icebp
cmp
mov
mov
or
cmp
shlb
and
and
ficomps
test
jne
fs
jge
mov
or
outsb
jl
shrb
popf
in
stc
fs
in
add
push
nop
inc
push
lds
mov
aaa
dec
mov
fldl
add
jne
cmp
xchg
das
dec
or
fimull
xchg
push
outsb
jl
inc
inc
mov
mov
repz
add
push
ljmp
mov
stc
enter
rclb
xor
outsl
xchg
pop
jg
xchg
out
in
scas
dec
int
inc
xchg
pop
ja
mov
mov
stc
rcr
rolb
mov
movb
cmp
jle
add
push
fscale
test
aas
push
addr16
repnz
mov
mov
loope
int
insl
test
aam
cwtl
adc
xchg
push
xchg
xor
add
add
rcrl
cld
imul
push
stos
ds
cmpsb
fdivs
imul
leave
test
jno
or
adc
cmp
push
add
xor
dec
jae
js
dec
cs
insb
or
inc
call
shlb
lock
out
loope
add
xor
cmp
jae
push
sbb
call
inc
dec
imul
inc
paddw
push
mov
call
in
test
sub
lea
mov
dec
and
fiadds
push
bound
sahf
inc
aaa
pop
dec
xlat
push
sub
nop
lods
jmp
mov
inc
lods
xor
cwtl
adcl
push
push
add
loopne
in
xor
sahf
push
sarl
cmp
inc
cli
clc
nop
jo
aam
add
mov
sbb
jns
fwait
sbb
mov
jmp
add
sub
cs
imul
divl
sub
es
jo
and
xchg
adc
push
adc
test
fwait
jnp
push
jg
push
push
push
inc
cmp
arpl
add
xchg
std
jae
std
xor
jae
push
lret
sar
push
das
sbb
sbb
sahf
dec
test
sarb
in
scas
lahf
nop
xchg
and
adc
jne
and
xor
insl
mov
mov
int3
mov
ljmp
mov
leave
icebp
test
test
stos
xchg
rcr
out
sbb
lret
pop
popf
dec
xchg
sub
adc
in
subb
jle
jp
lret
sub
mov
sub
push
and
pop
dec
cmp
lods
fiaddl
xchg
add
das
dec
stos
add
ds
lds
in
hlt
sti
dec
sub
stos
mov
push
les
outsb
fwait
sub
outsb
into
cmp
cs
in
dec
ret
xorb
adc
lret
pop
sahf
adc
dec
push
dec
dec
loope
repz
test
pushf
lea
mov
imul
push
fildll
add
shrl
pop
add
int3
xor
pop
jg
iret
lret
repnz
pop
mov
subl
add
inc
sbb
mov
mov
push
push
cmp
dec
adc
lods
inc
mov
xor
mov
mov
jp
inc
jg
jno
int
rcll
lock
test
popf
das
mov
cwtl
jo
or
jns
pop
addb
push
dec
data16
mov
les
adc
test
and
shlb
xchg
test
push
fidivl
sbb
dec
lea
inc
sub
test
leave
jle
es
aad
lea
mov
aam
loopne
aas
xchg
jg
in
mov
sbb
xrelease
mov
stc
dec
inc
into
ret
xor
clc
loop
cmp
pop
mov
inc
mov
int3
ret
in
cmp
rclb
sbb
lods
xchg
in
fsubrs
pop
popa
xor
fstpt
inc
data16
clc
bound
jne
fwait
or
cmp
xchg
cmp
rol
mov
insl
daa
in
pop
xorb
push
sub
addr16
cmc
jo
inc
fsubp
movsb
aas
mov
in
lock
mov
adc
cmpl
std
sbb
pop
das
push
sub
pop
call
pusha
mov
mov
pop
jne
and
push
cmp
loop
jno
pushl
movsb
or
rcrb
std
xchg
sub
decl
mov
sub
lds
adc
mov
pop
or
and
fnstsw
inc
jp
dec
inc
aas
pop
pushf
js
int
adc
fisubrl
leave
jae
test
subb
out
pop
jl
fdiv
mov
addr16
lea
mov
or
adcl
daa
test
jmp
lock
and
push
shlb
or
fbld
sbb
and
enter
sbb
repnz
ljmp
sub
pop
mov
add
arpl
jne
cli
mov
or
push
cmp
mov
cmp
je
inc
aaa
pop
xor
sbb
pop
mov
cld
cmp
push
cwtl
pushf
enter
push
subps
cmp
adc
mov
cmc
int
cmc
dec
and
sbb
jge
push
nop
call
out
sub
sbb
ret
in
pop
cmp
aam
push
adc
out
jbe
test
xor
push
pop
aas
cmp
cwtl
mov
dec
mov
repz
roll
jne
int
dec
test
shlb
data16
stos
mov
xor
sbb
leave
lds
arpl
adc
mov
cmpsb
out
pushf
mov
fdivs
or
xchg
mov
out
mov
mov
rolb
mov
and
addr16
or
cld
fs
cmpsl
and
sbb
adc
or
mov
outsb
ficoml
mov
xor
xor
dec
bnd
shlb
dec
rorb
push
or
lods
bound
sbb
pop
fadd
lods
push
mov
jg
test
call
sbb
insl
xchg
aad
or
mov
cmovge
jns
imul
xchg
mov
mov
cmp
mov
xorl
daa
pusha
loopne
pop
inc
push
icebp
sub
mov
xor
nop
leave
adc
rcl
dec
mov
je
idivl
mov
push
frstor
adc
in
sub
scas
cs
std
cmp
add
psrlw
mov
lock
repz
add
mov
rclb
dec
into
iret
fists
out
push
push
mov
xchg
pop
cwtl
cmp
xor
jmp
dec
sti
jp
fistpl
ret
cmp
xchg
mov
fsubrp
cmpb
gs
mov
movsl
add
nop
dec
out
cs
pop
insb
jg
jne
dec
sahf
iret
popa
test
ret
dec
xor
mov
ret
pop
rcl
rolb
mov
imul
arpl
jle
cmc
fcomps
lcall
inc
cltd
xor
push
mov
cmpsl
lods
popa
aad
mov
jle
aaa
cmp
jmp
fildll
ret
mov
mov
mov
shrb
cmp
clc
cmpsb
punpckhwd
iret
movsb
daa
es
movsb
cmp
or
enter
ja
in
dec
and
into
mov
mov
popf
sub
inc
cmp
and
sub
popf
mov
jge
jg
inc
mov
xor
lock
out
daa
lods
mov
addb
jo
in
add
mov
adc
push
xor
pushf
lds
in
movb
test
pop
inc
xchg
icebp
dec
sbb
flds
in
cmp
fbstp
stc
sub
shll
stc
pop
lods
aas
jbe
adc
in
mov
rcrb
outsb
scas
dec
mov
sbb
sar
cmp
movsb
aad
adc
shrl
lret
leave
dec
push
lcall
push
loope
aaa
pop
xchg
adc
pop
sub
inc
fdivrs
imul
jecxz
dec
popa
aad
xchg
dec
cltd
dec
sub
and
xor
test
out
sbbl
lods
push
nop
pop
mov
icebp
jb
and
fcoms
inc
mov
in
dec
out
leave
rcr
dec
jb
mov
inc
lret
and
dec
pop
and
das
xchg
xor
movsb
adc
or
jmp
lret
push
pop
sub
das
pop
std
aas
push
cld
jecxz
test
loope
push
mov
dec
test
xlat
mov
pop
jle
fwait
pop
and
pop
popa
into
pop
rolb
int
pop
arpl
outsb
mov
add
sbb
mull
fnsave
cwtl
das
and
mov
mov
fisttpll
add
dec
repnz
cld
dec
sub
push
ds
add
in
ds
adc
call
pop
mov
outsl
fcoml
cmp
push
out
push
pop
and
shl
insl
loop
jae
sbb
arpl
bound
mov
xor
outsl
in
inc
push
xor
pushf
lock
in
mov
adcb
arpl
sub
imul
adc
jecxz
sub
out
mov
shlb
and
sbbb
push
xchg
push
shrl
push
imul
mov
add
xchg
add
or
lret
ss
aad
insb
in
mov
sbb
xchg
mov
cmp
fistps
dec
adc
les
cmp
sub
icebp
lods
cmp
fdiv
mov
sahf
ret
orl
add
and
adc
std
cmpsl
and
dec
mov
sbb
push
pop
mov
mov
aaa
fimull
test
dec
pusha
js
icebp
mov
xor
cltd
inc
insb
sbb
lds
push
cmp
enter
mov
add
loopne
cmc
cltd
jbe
jmp
mov
jmp
clc
push
fadds
fcomip
push
adc
inc
xor
cmpsl
insb
stos
call
xchg
dec
jo
sub
mov
in
es
dec
enter
mov
mov
in
push
and
or
pop
cmp
xor
mov
fs
inc
rcll
pop
mov
popa
cmp
cmp
xchg
fcmovne
xor
mov
pusha
push
jle
arpl
imulb
in
mov
mov
jle
jmp
in
jp
stc
rcrl
push
dec
adc
and
cmp
xchg
sbb
or
mov
fdecstp
pop
add
adc
sbb
jo
jno
lods
adc
or
jae
clc
cltd
and
fwait
or
in
repz
rcrb
xchg
daa
sbb
jle
pop
pop
sbb
sbb
imul
lcall
xor
mov
lods
pop
mov
or
in
aad
xor
sbb
mov
mov
fisubs
pop
mov
fnstenv
mov
loop
push
push
loop
cmp
xchg
jp
stc
stc
out
out
xchg
test
mov
insb
sub
loop
icebp
test
subb
and
leave
or
pop
sbb
jg
repnz
lret
jmp
iret
icebp
add
push
fsubl
cli
cmpsl
popa
add
in
lock
push
mov
ja
push
idivb
imul
lcall
test
push
ss
lret
pusha
inc
in
fmul
fdivrs
test
push
icebp
xor
sbb
jecxz
cld
pushf
je
mov
call
aaa
jp
test
cmc
loope
fwait
add
jle
ja
ror
cld
inc
and
adc
dec
inc
xchg
test
pop
enter
pop
add
push
out
adc
in
popa
bound
pop
push
adc
lock
lcall
std
lock
xor
xchg
mov
rcrb
in
test
sbb
je
loopne
lret
fisubrs
pop
jne
xchg
aaa
lea
mov
das
sbb
push
arpl
loop
leave
lahf
xor
jnp
inc
fisttpll
bound
sbbb
cmp
inc
clc
mov
int3
push
sahf
ficompl
push
and
ja
or
rorb
std
jecxz
inc
jo
popa
mov
xor
popf
sti
lret
cmp
imul
and
popf
or
and
adc
out
lds
int
xchg
shlb
inc
push
lahf
cmc
repnz
out
lds
sub
es
lret
xchg
fbstp
insl
div
insb
imul
pushf
push
sti
addr16
xchg
jmp
ret
stos
adc
or
incb
adc
dec
sbb
cmp
inc
add
jo
push
into
mov
repnz
add
add
cmp
mov
loopne
repz
xchg
mov
idivb
fadds
xchg
test
push
add
cmc
mov
scas
sbb
movsb
int
mov
xor
jg
adc
xor
ret
mov
mov
das
mov
in
lods
mov
adcl
dec
fidivrl
fisubl
sbb
iret
add
jecxz
xchg
inc
adc
pop
lahf
mov
mov
jg
rcll
sbb
add
xchg
stc
ss
xor
xchg
sbb
dec
xchg
sysenter
in
out
pop
xor
ret
bound
xorl
jp
jb
gs
add
in
push
add
test
aaa
out
dec
je
sbb
sbb
xchg
insb
push
je
jge
adc
push
fcomps
js
cld
cmp
jae
clc
repz
aaa
xchg
push
shl
ret
in
mov
dec
add
mov
cmp
inc
rcrl
add
mov
jge
aaa
adc
inc
inc
xor
push
stc
mov
xchg
roll
xchg
fwait
test
ds
dec
pop
ss
and
mov
cmp
div
jo
adc
cmp
scas
lods
pop
dec
mov
mov
jecxz
jns
es
dec
movsl
ret
cli
in
mov
and
test
add
sahf
cmp
adcl
pushf
shll
mov
cmp
or
jle
fists
mov
cmp
pop
mov
std
or
push
xlat
xchg
pop
push
or
sub
and
mov
enter
out
loope
fcmovnbe
mov
sar
sbb
out
popf
xor
and
pop
test
jbe
repz
clc
pop
push
in
mov
dec
pop
sub
outsl
andl
mov
rcrl
sti
divl
es
addr16
ret
out
dec
adc
push
pop
in
mov
lods
xchg
fs
pop
rcl
adc
xchg
mov
sub
das
addl
jns
push
les
test
roll
cltd
ja
inc
nop
sbb
lock
cmpsl
fistpl
jne
mov
or
ljmp
adcl
push
aaa
gs
sysexit
aad
inc
cmp
lret
add
pop
xchg
sub
push
inc
add
sub
add
aam
or
xchg
lret
push
aas
jge
ret
es
adc
sbb
movsl
mov
cmpsl
sub
mov
xchg
ret
mov
aam
icebp
data16
addb
es
sub
cmovno
adc
out
jae
scas
lahf
dec
mov
cmpb
mov
dec
cmpsb
dec
iret
pop
pop
pop
lret
jg
jae
mov
xorl
fucom
popa
lods
mov
jecxz
add
push
xchg
ret
add
lret
enter
rorb
fisubrl
lret
daa
mov
xchg
in
xchg
dec
sub
or
dec
lcall
movsb
sbb
lds
lds
mov
xchg
xor
cld
jl
scas
ja
popf
xchg
mov
xlat
jne
sub
xchg
push
ret
or
dec
sub
mov
and
out
ss
lahf
mov
sbb
mov
push
xor
fsubrs
and
inc
xchg
push
inc
pop
in
dec
pop
sbb
xor
sbb
lcall
rcrl
push
pop
stos
scas
or
lahf
mov
pop
push
or
stos
in
clc
scas
fcom
mov
lock
jb
inc
in
jbe,pt
sub
jle
mov
aam
mov
mov
repnz
iret
aam
rcll
jle
stc
cmp
mov
hlt
xchg
scas
jno
hlt
sub
adc
outsb
fdivl
fwait
movsb
xor
inc
aaa
daa
les
pop
imul
scas
testb
cwtl
out
inc
out
xchg
inc
pop
insb
imul
mov
daa
xchg
stos
push
xor
lret
mov
or
test
das
mov
jb
jns
lods
cmp
push
js
inc
test
repnz
push
int3
in
nop
inc
fs
fimull
inc
repz
test
das
jnp
mov
jae
cmp
out
bound
es
ficompl
shlb
cwtl
fldt
lret
sti
icebp
fs
outsb
int
ror
mov
mov
jbe
into
daa
cmp
and
lahf
pop
lret
ja
into
push
add
lcall
dec
ss
mov
mov
aas
sbb
adc
test
sub
lds
pop
cli
mov
push
xchg
test
repnz
mov
or
mov
jbe
pop
adc
fwait
xchg
out
or
shlb
and
adcl
stc
pop
inc
mov
cs
in
ljmp
xchg
mov
testb
clc
adc
cmp
jecxz
movsb
xchg
leave
mov
shlb
aas
adc
mov
scas
push
xchg
cld
lods
call
pop
pop
cmp
mov
in
and
pop
cmp
jle
xchg
jae
ffreep
mov
aaa
das
in
insl
mov
repz
imul
xchg
call
pop
and
clc
inc
mov
push
xchg
scas
lret
ljmp
fsubrl
pop
adc
xchg
or
push
fs
xchg
ret
cmp
mov
sub
ja
fwait
lea
jle
ljmp
push
ret
icebp
or
adc
mov
cmp
setle
inc
pusha
jp
sub
sub
mov
mov
cmp
movsl
dec
sti
rolb
outsl
orb
pop
xor
pushf
in
gs
or
sbb
or
pop
add
and
xor
test
in
xchg
mov
push
xor
orl
rcrb
add
outsl
or
or
dec
cwtl
les
dec
or
xchg
int
int3
sbb
lret
sbb
adc
dec
sbb
xchg
adc
adc
sub
sbb
cmpsl
sub
mov
cmp
mov
cmp
mov
stos
push
addb
pop
fsubrp
or
cmp
mov
sti
jne
jmp
std
jecxz
pushf
in
jne
mov
pushf
jno
gs
xchg
mov
mov
pushf
mov
loop
cltd
mov
fsubl
adc
xorl
push
xlat
and
rorl
fucomi
pop
push
imul
adcb
aaa
out
insl
push
dec
sbb
test
mov
out
icebp
push
jb
sub
cmp
sub
mov
pusha
in
fs
jns
pop
lods
lahf
out
enter
push
roll
lcall
dec
xor
sbb
xchg
imul
sbb
outsl
stos
mulb
hlt
xchg
shl
or
push
add
pusha
and
xor
fcmovnb
arpl
xorl
push
or
in
mov
fwait
push
out
adc
pop
movb
jle
mov
pushf
es
xchg
in
loope
jo
cmc
cli
inc
jmp
negl
fnsave
or
sub
mov
jge
cmc
push
jmp
test
aam
xor
cmpsb
pushf
leave
cmp
lods
jb
stos
fs
jbe
scas
movsl
in
sarl
pop
std
mov
or
inc
cmpsb
out
mov
outsb
stos
xchg
or
jae
mov
adc
push
push
jl
dec
and
sahf
test
stc
std
mov
rclb
inc
out
or
iret
test
push
fimuls
out
or
into
and
mov
rcr
stos
push
test
jae
loopnew
repnz
mov
mov
or
jb
xor
enter
nop
imul
dec
lods
arpl
pop
scas
and
inc
xchg
insb
xor
cli
sub
push
pop
inc
inc
mov
jnp
xor
sub
mov
xchg
test
stc
xor
scas
int3
outsb
iret
out
add
lea
pop
loopne
cmpsb
aas
imul
imull
and
mov
mulb
cltd
or
fidivrl
cmp
fidivrl
fcom
out
push
cmp
mov
fwait
js
out
scas
pop
sub
jne
push
fnstcw
fsub
aam
rcl
fisttpll
add
or
pop
idiv
je
arpl
dec
or
aaa
leave
loope
add
inc
fidivl
aaa
outsb
ret
push
popf
pop
add
pop
fisubs
mov
dec
js
mov
ja
add
push
xchg
xor
cmp
movsl
mov
daa
inc
mov
sbb
in
movsb
leave
xor
mov
jbe
dec
stos
xchg
in
nop
sub
fldt
out
jae
xor
push
push
pop
sub
popf
aam
ret
rcr
jmp
xor
imul
mov
cmp
push
push
xor
dec
sub
ret
cld
and
xchg
or
and
add
jne
add
push
sub
lock
lods
dec
aam
mov
mov
cmp
mov
lahf
and
dec
int
ljmp
fs
aaa
mov
testl
mov
ja
inc
and
movsb
push
xchg
into
push
movsb
and
cmpsb
cmp
sbbl
jecxz
pop
push
inc
stos
xlat
icebp
cmpsb
pop
xchg
adc
xlat
xchg
jmp
cld
out
add
inc
xor
sub
inc
lock
sbb
mov
test
test
push
repnz
push
jmp
insb
scas
xchg
xchg
ds
fwait
add
fiadds
cs
aam
fnstsw
cltd
call
xor
hlt
pop
call
in
add
inc
adc
mov
pop
jge
fucomip
divb
dec
dec
nop
popf
push
sbb
and
popf
lcall
mov
scas
push
shl
jge
sti
pusha
push
icebp
aam
leave
rorl
sahf
jecxz,pn
shrl
bound
pop
xor
pop
push
loope
xchg
testl
aaa
inc
imul
nop
out
bound
inc
sarb
mov
cwtl
dec
pop
sahf
ret
lock
xchg
jecxz
popa
and
mov
fisttpll
xchg
pop
dec
xor
inc
and
adc
jl
ja
xchg
mov
imul
inc
and
leave
jmp
jno
or
js
pop
rcrb
jecxz
add
dec
mov
cmc
pop
and
pusha
add
and
jmp
loop
insl
orb
orl
sub
add
je
cld
outsb
cmpsl
inc
repnz
stc
rol
add
stos
mov
cld
daa
out
jae
js
push
jno
out
inc
fldenv
shlb
pop
outsl
popa
mov
dec
je
jbe
jo
adc
or
and
bound
mov
ret
fsubrl
jbe
fidivl
nop
xchg
rol
sti
rclb
or
mov
cs
sub
mov
or
out
stc
mov
adc
pop
int
push
andl
pop
ds
xor
fucomip
fistps
dec
pop
inc
std
xchg
movsb
cs
sbb
pop
pusha
insl
push
or
or
incb
lahf
mov
mov
sahf
fsubs
mov
subb
ret
mov
adc
sub
and
sub
xchg
mov
sub
gs
cmp
int3
xor
sub
jg
fldcw
inc
inc
jle
iret
pop
mov
loope
mov
int3
scas
incl
pop
and
sub
push
inc
test
into
sahf
lock
mov
outsl
dec
xor
std
or
push
dec
call
mov
int3
adc
sub
iret
cld
adc
sub
adc
and
cmp
fistpll
cltd
or
lds
icebp
and
inc
ja
dec
push
out
sbb
enter
jbe
pop
roll
sub
fildl
sti
push
adc
mov
dec
leave
in
sbb
sbb
clc
inc
in
clc
je
mov
jp
loop
imul
sti
adc
loop
shll
inc
inc
dec
jmp
into
pop
repz
adc
mov
outsb
mov
push
mov
icebp
mov
xor
add
lret
sbb
movsl
test
cmpsl
dec
xchg
and
inc
push
int3
outsl
aam
xchg
aam
jl
pop
pop
scas
mov
cmpsl
fdivs
pop
outsl
cmpsb
mov
fwait
adc
inc
inc
xor
imul
jbe
adc
sub
out
pop
sbb
mov
pop
mov
iret
add
mov
in
add
or
nop
adc
xchg
mov
ret
or
notl
or
xchg
stos
push
outsb
lds
sub
adc
xchg
and
pushf
mov
notb
movsb
in
push
mov
jns
dec
push
xlat
xchg
addl
sub
and
int
sbb
lods
in
pusha
fcmove
iret
jp
push
sbb
mov
mov
aad
lock
push
mov
xchg
js
sahf
jp
jg
and
mov
mov
popf
enter
pusha
shll
leave
decl
cmp
mov
mov
lock
sub
or
and
add
push
pop
push
sbb
ret
mov
movsl
fdivp
mov
add
inc
loopne
daa
mov
lret
mov
js
xchg
movsl
mov
nop
sbb
repz
sbb
iret
test
lcall
sbb
xchg
mov
pop
cmpsl
nop
push
ss
dec
xchg
add
pop
jo
sbbl
iret
adc
sbb
movsl
lahf
dec
pop
sbb
idivl
lcall
mov
dec
or
in
inc
mov
insb
sbbb
pop
lret
aaa
cmc
xchg
cmp
cli
sub
cmpsl
les
jae
jae
adc
insl
xchg
pop
loope
cs
sub
adc
mov
dec
test
lds
jno
ret
cmp
dec
arpl
adc
js
testl
ficompl
les
imul
imul
xchg
hlt
mov
icebp
mov
sub
xchg
xor
stos
push
mov
pop
fmul
call
or
lea
daa
jnp
das
or
mov
cmp
xor
and
in
sub
je
xor
test
adc
jbe
repz
imul
sahf
out
inc
sbb
cmp
lret
mov
dec
push
out
mov
sub
dec
inc
mov
sbbl
fisttpl
mov
sbbb
je
lcall
jb
pusha
idivb
xchg
sti
shrb
ss
fsubrs
test
mov
fiaddl
push
jns
sub
test
mov
loope
and
pop
xchg
xchg
mov
iret
add
call
push
fmuls
out
fcompl
add
fildll
mov
xchg
gs
out
test
into
mov
sub
stos
jl
test
out
jmp
fnstenv
pop
ja
jae
lahf
int
add
shl
rorl
add
sub
pop
mov
xchg
mov
cmp
addr16
or
std
dec
or
lock
sbb
mov
jecxz
jnp
fisttpll
pop
dec
push
shlb
jecxz
pop
mov
jbe
sub
mov
dec
xchg
or
shlb
mov
add
add
inc
and
mov
mov
in
cmp
xchg
mov
bound
movsb
pop
cs
or
cmpsl
je
jge
sbb
mov
or
push
mov
pop
shll
mov
cmp
pop
jg
mov
cmp
mov
xchg
out
sub
das
arpl
mov
and
add
aaa
decl
andl
xchg
mov
pop
mov
jns
int
aam
xchg
arpl
sub
and
pop
ss
into
cmp
ret
imul
subb
xor
aaa
test
lea
adc
mov
insb
pop
push
outsb
insb
and
cmpsb
or
jae
xchg
inc
pop
ret
mov
add
xchg
mov
jnp
out
jae
mov
jg
adc
lcall
jmp
and
add
sub
test
ret
sub
cmp
incl
mov
sbb
inc
inc
cltd
adc
in
cmp
das
cmp
add
cwtl
dec
lds
rorb
mov
dec
shrl
xchg
jnp
hlt
jecxz
cmpl
iret
push
test
popf
push
gs
xor
lcall
out
rol
dec
nop
fwait
arpl
loope
aaa
in
stc
dec
dec
dec
test
add
push
sbb
cmp
sub
inc
and
add
push
mov
push
divb
imul
nop
and
push
int3
dec
stos
cmpsl
pop
push
sahf
jge
pusha
push
inc
mov
mov
add
cmp
lret
mov
cmp
test
ret
dec
pop
mov
mov
outsb
jmp
push
in
cltd
and
mov
mov
jp
iret
cmp
outsl
cmc
xor
stos
ss
mov
jo
mov
or
inc
adc
jnp
lcall
adc
mov
and
lcall
dec
xchg
xchg
push
sub
push
das
es
repnz
xchg
push
and
mov
push
cmp
inc
std
mov
das
mov
jns
pop
adc
jno
dec
or
jb
test
ljmp
mov
mov
loopne
in
fadds
xor
loope
inc
shlb
lcall
mov
push
sub
mov
int
rdtsc
dec
jle
mov
es
popa
push
push
sub
pop
jo
sub
fmul
cmpsl
int3
or
pop
mov
pop
mov
cmp
loop
fwait
inc
and
mov
aas
cwtl
inc
pop
clc
das
call
add
ds
jmp
jmp
ja
dec
sub
imul
pop
out
fwait
sub
and
mov
and
xor
aam
inc
jmp
inc
jmp
scas
out
aad
lods
pop
lock
xchg
push
cmp
popa
and
lock
cs
push
adc
lds
and
jo
out
mov
std
ret
fbld
popa
jecxz
pop
sbb
pop
and
sahf
dec
sbb
jo
in
xlat
pop
xchg
mov
push
fdivl
lret
mov
sahf
icebp
and
pop
pop
mov
xchg
mov
adc
pushf
jg
add
addr16
insl
or
push
jmp
fidivs
sub
cltd
xchg
bound
sbb
jae
mov
scas
cltd
in
jp
mov
aaa
subl
clc
sti
stos
mov
fcompl
cltd
hlt
sahf
inc
jmp
lret
aas
daa
out
adc
lea
les
in
or
leave
mov
es
fsubrl
idiv
jno
or
jns
leave
sub
insl
and
and
add
add
cmp
cmpsb
push
mov
pop
mov
mov
test
sub
test
orb
and
lock
push
pop
insb
data16
mov
pop
pushf
pop
sbb
xor
loope
push
pushf
pushf
xchg
push
xchg
xchg
fcom
test
jae
sub
inc
add
mov
in
lcall
dec
mov
add
shlb
mov
enter
add
cmp
and
and
aad
jl
lret
pushf
lock
mov
jle
pop
les
sub
or
dec
xchg
roll
cmp
sbb
clc
push
sbb
sub
lahf
mov
jns
fsub
push
sub
popf
test
push
add
test
ret
mov
ffreep
dec
pop
sarl
scas
jmp
sbb
ljmp
lret
sub
les
push
dec
push
xor
inc
ljmp
popf
xor
xor
in
xchg
dec
mov
popa
xchg
sbb
or
aaa
insl
lods
in
xchg
repz
shl
ret
out
mov
repnz
sub
push
test
fistpll
cs
lock
jmp
aam
dec
mov
xchg
mov
out
or
loop
icebp
mov
xor
rcl
pop
mov
es
add
adc
fmul
sahf
scas
push
dec
inc
in
out
sub
fidivs
imul
test
cli
cltd
int
out
in
nop
ror
hlt
pop
out
iret
xor
dec
and
outsb
xchg
aaa
sub
push
cmp
movsb
pop
into
shrb
mov
cmp
addr16
loope
jp
add
jmp
inc
dec
adc
neg
cmp
xchg
je
xor
and
mov
jno
fsubrl
mov
sbb
jo
sti
xchg
lods
push
inc
mov
mov
cld
daa
outsb
imul
lds
add
mov
addb
aaa
in
lret
cmp
jb
addl
jecxz
js
mov
lret
cmp
push
loopne
add
mov
idivb
std
out
loop
mov
or
adc
sub
inc
cltd
pop
xchg
xor
mov
cmp
lahf
jmp
mov
shlb
jg
cltd
ret
jmp
data16
push
mov
js
rcrb
mov
mov
mov
sub
sub
ret
jno
mov
int
jae
sti
dec
inc
sbb
jl
sbb
loope
xchg
outsl
mov
pop
scas
daa
push
mov
push
sahf
sbb
std
xor
cmpb
add
mov
xchg
inc
jae
insb
imul
pushf
xchg
fdiv
lock
xor
lds
ret
or
shll
or
std
xlat
shlb
aad
vphaddubw
sbb
mov
add
jno
rcrb
loop
leave
loope
adc
je
pop
jae
shrl
sbb
out
test
mov
mov
std
push
or
xor
hlt
mov
xor
jg
dec
mov
in
cmp
dec
inc
lods
push
mov
outsb
cld
push
jg
call
mov
push
jle
mov
aaa
jle
fnstenv
jne
cmp
and
jae
cmp
or
testb
push
out
or
mov
pushl
jmp
insl
aad
mov
adc
xchg
mov
int3
fistpll
divl
into
test
or
dec
fisubrl
ljmp
test
lcall
push
mov
lds
fs
xor
mov
fdivrl
fucomp
mov
pusha
sub
adc
dec
loopne
das
xor
mov
jbe
repnz
sub
xor
fistpl
pop
adc
dec
in
dec
aas
andb
call
cmpsb
fisttpl
xchg
fisubl
add
push
and
mov
test
pop
jo
int3
mov
aaa
scas
imull
inc
pushf
mov
fistps
push
movsb
fwait
test
leave
popa
cld
pop
test
bts
cli
cmp
mov
adc
fildll
xor
scas
mov
dec
xor
je
mov
fwait
xchg
cmpsl
outsb
imulb
sub
fmul
cmp
jbe
cmp
cmp
lea
inc
sbb
cmp
insb
test
xchg
adc
mov
rclb
aad
adc
icebp
mov
push
jge
nop
mov
xchg
or
or
loopne
subl
inc
mov
mov
std
or
mov
pop
add
cmp
dec
fsubp
nop
jecxz
pop
inc
xor
idivl
cmp
mov
sbb
out
scas
jle
xchg
mov
adc
xor
sbb
mov
inc
outsl
daa
das
mov
push
and
dec
jbe
in
mov
and
mov
xor
das
cwtl
jmp
ljmp
adc
inc
mov
sahf
sahf
jb
rorl
pusha
jns
dec
sub
sbb
mov
mov
sbb
pop
lods
sbb
mov
aad
add
sub
imulb
push
add
aad
mov
ret
jp
call
inc
sti
ret
out
sub
pop
aaa
cmp
fs
or
mov
adc
jns
sar
dec
pop
jecxz
sbb
je
mov
movsb
dec
dec
mov
scas
and
imul
int3
ja
fwait
push
addr16
out
sub
push
mov
jecxz
pusha
mov
mov
mov
lods
mov
cmpb
pop
push
xor
mov
lea
roll
and
movsb
xchg
je
jge
dec
fiaddl
addl
cmp
or
movsb
mov
leave
jne
cmc
jno
lret
jns
cmpb
sub
idivb
mov
pop
repz
loopne
dec
push
push
lret
mov
pop
scas
data16
out
in
cmp
mov
jmp
insb
mov
js
repz
adc
push
dec
pop
push
inc
xchg
push
fldt
stos
push
addr16
mov
cmp
mov
fdivs
push
sub
dec
movsb
mov
and
push
das
rorb
sbb
test
insl
add
ret
pop
daa
loop
pusha
call
sub
loopne
jae
push
inc
xchg
push
and
daa
dec
mov
test
jns
fdivl
stos
into
stc
add
arpl
pop
sub
negb
and
jmp
adc
cmp
xor
jns
mov
mov
sub
enterw
mov
xchg
mov
jmp
inc
out
inc
addr16
and
sbb
push
cmp
xchg
fcmovb
iret
mov
mov
jae
or
xor
mov
mov
movsl
outsl
xor
cld
clc
pop
jecxz
test
jl
cwtl
clc
fsubrl
jo
cwtl
add
jae
dec
jg
ret
stos
rcrl
mov
int
in
in
call
inc
or
loopne
and
mov
out
push
xchg
je
sahf
stos
jl
add
dec
jl
sbb
jl
mov
cmpsb
ret
in
cmp
push
lret
cmp
scas
ret
pop
and
jb
push
push
or
adc
xor
xchg
push
aad
pushw
insl
sbb
test
repnz
sbb
pusha
out
xchg
insl
outsl
mov
cwtl
xchg
xchg
mov
adc
push
and
sub
adc
ret
es
es
call
fistpl
cmc
scas
push
rorb
mov
adc
loopne,pn
or
xorps
out
insb
pop
xor
scas
add
and
in
jne
push
pop
pop
imulb
push
adc
sbb
cmc
lods
fs
in
in
inc
lds
cmpsl
repz
sbb
push
push
in
mov
xor
andl
fs
fst
inc
cmpsl
movsl
cld
cmpsb
inc
push
iret
aam
pop
cmp
movb
in
cmp
out
inc
inc
mov
push
out
jle
inc
int
jns
popf
adc
jge
cld
sahf
push
adc
fadds
shlb
jmp
in
ss
push
loop
rolb
bound
push
xchg
mov
and
jbe
cs
add
leave
mov
popa
sub
scas
push
and
fsubs
cmc
sub
popf
arpl
pop
in
sub
rolb
cmp
mov
nop
out
dec
inc
xchg
cmp
jae
jg
lret
jnp
push
xchg
inc
or
jbe
adcl
movsl
mulb
loopne
cmp
mov
cld
jnp
mov
test
pop
popf
in
sarb
aas
stos
outsl
out
add
xchg
mov
mov
jmp
or
jle
divb
lock
iret
test
sti
lock
adc
sub
mov
push
xchg
push
insb
movsl
add
mov
add
xor
jecxz
fsubs
cmp
mov
adc
add
aaa
mov
mov
out
or
fildll
sti
hlt
lea
popa
jg
jbe
jo
jnp
mov
test
in
loop
push
mov
popa
jle
mov
nop
popa
loopne
add
sbb
lock
in
jge
outsb
or
imul
xchg
icebp
je
jge
stos
cmp
push
push
and
mov
sbb
xchg
repnz
test
cmp
inc
mov
jb
and
daa
ret
mov
sti
loopne
pushf
incb
adc
add
test
jb
and
jmp
cmp
cmp
cmp
push
and
jae
add
lock
mov
push
inc
or
roll
insb
pop
and
sti
push
mov
dec
inc
sbb
sub
mov
inc
enter
jno
inc
and
sarb
cmp
inc
xor
lock
mov
push
insl
or
inc
aaa
test
mov
push
ret
xor
cmp
add
in
inc
out
test
loopne
jae
add
push
js
js
cld
ds
fwait
xchg
loopne
and
pop
or
repz
lds
scas
xor
int3
mov
arpl
test
ss
subb
adc
push
lds
aad
in
push
shr
test
leave
fidivs
push
mov
push
jmp
sbb
lock
dec
xchg
xor
mov
inc
mov
inc
addb
push
xchg
in
jo
test
push
leave
ds
popf
int
outsl
movsb
imul
loopne
pop
daa
shl
into
cmovge
adc
cmpsl
fdivl
push
test
subl
clc
hlt
imul
mov
add
imul
push
or
push
mov
fdivrs
es
js
sbb
jge
mov
fiadds
or
mov
xorl
imul
jmp
xor
testb
das
cmp
sbb
mov
cmp
rcrl
adc
or
jns
rcrl
in
xchg
mov
jbe
jne
shl
out
adcl
fwait
outsb
and
cltd
test
jmp
in
inc
das
pop
mov
icebp
sub
xchg
loop
mov
scas
repnz
and
jb
insl
pop
jge
pop
sub
jg,pn
add
mov
xchg
loop
mov
sub
fbstp
into
cmp
notb
inc
jb
push
es
incb
mov
push
test
xor
in
cwtl
xor
push
popa
lods
sub
xor
mov
sbb
xor
sar
jle
xchg
scas
mov
and
imul
xor
cwtl
addr16
adc
jle
push
cld
and
int3
insb
jb
mov
jbe
lret
insb
push
repnz
adc
int
xor
lret
adc
lock
xchg
mov
shrl
test
and
jmp
push
jge
push
mov
or
and
repz
inc
arpl
xchg
push
jg
pusha
mov
imul
cld
mov
pop
xchg
fwait
jmp
orb
loop
fsubs
dec
in
inc
and
push
mov
xchg
mov
shlb
inc
testb
xchg
clc
push
inc
pop
mov
fdiv
arpl
pop
cwtl
nop
push
std
fisubrs
inc
incb
in
mov
lret
ret
or
clc
jnp
inc
ja
jle
daa
adc
push
repz
cmpsb
and
sti
jns
std
movsb
lods
dec
sbb
mov
jecxz
xchg
prefetchwt1
or
pop
ds
push
or
out
lahf
ror
dec
cld
lahf
data16
mov
jno
or
fs
je
sbb
test
mov
mov
test
mov
divb
leave
cli
icebp
pop
pop
js
xchg
cltd
sub
shrl
add
xchg
mov
sbb
adc
cltd
add
inc
aaa
and
iret
push
pop
js
and
movsl
pop
dec
in
sub
ja
idivb
jo
mov
ret
add
and
pop
jl
aad
mov
and
sub
mov
adc
rolb
call
add
xor
scas
jno
jb
sbb
clc
cmc
mov
loopne
call
sahf
or
push
jae
pop
mov
mov
dec
addl
loopne
and
leave
ljmp
enter
mov
mov
out
mov
jecxz
cmpsl
gs
pop
popf
lods
fildl
dec
jmp
fbstp
xor
push
mov
mov
imul
sahf
sbbl
aas
rorb
pushl
aas
rcll
xchg
popf
popf
push
pop
mov
test
jns
and
mov
sub
pop
mov
mov
faddl
inc
push
pop
roll
jmp
adc
add
pop
and
ret
adc
pop
gs
cmp
in
push
or
rcrb
out
mov
push
mov
jl
push
xchg
mov
rolb
dec
jg
popl
dec
test
in
decb
cmpsb
addr16
mov
xchg
jmp
or
sbb
cmpsb
pop
mov
dec
std
lret
push
out
outsl
adc
xor
jns
aaa
int3
jl
out
sub
in
lret
rcrl
sub
fcomps
dec
mov
adc
popf
in
dec
adc
cmp
jb
xchg
xchg
lods
out
leave
jecxz
pop
andb
mov
lcall
cmpsl
push
mov
in
sub
jbe
mov
sbb
mov
outsb
stc
jo
add
cmp
pop
sub
sbb
cli
test
hlt
mov
shll
lock
sbbl
sbb
dec
jle
or
mov
cmp
cmpsb
and
add
dec
pop
sub
loop
aam
mulb
cmp
leave
or
pop
cmpsb
cmovbe
fstpt
fcompl
incl
bound
jl
mov
fcoms
adc
das
subb
lcall
push
and
dec
sbb
cmp
sarl
loopne
call
and
and
test
push
mov
cwtl
insl
jle
xor
rolb
mov
jae
subb
fcom
mov
sub
adc
xor
or
pushf
loope
roll
test
idivb
fists
in
cmp
push
xlat
mov
daa
loop
clc
or
js
iret
cmp
mov
ds
or
iret
popa
fistl
enter
in
and
imul
test
push
and
mov
mov
out
je
rol
push
out
and
adc
jge
outsb
add
jmp
dec
xor
daa
push
cli
sub
mov
repnz
movsl
es
dec
into
or
leave
mov
aaa
adc
loope
push
ret
mov
cmp
cmc
movsl
jo
mov
inc
mov
or
stos
mov
arpl
sub
clc
js
add
xor
mov
mov
sbb
pop
xor
inc
push
pusha
outsl
pop
mov
inc
or
bound
cli
rcrb
in
add
mov
or
cld
dec
movd
inc
fldt
loopne
adc
jmp
cmpsl
xor
inc
nop
cltd
and
aad
in
dec
mov
pop
lea
icebp
repnz
cmp
js
enter
add
lea
cmp
call
jle
jo
shl
sub
mov
jg
fwait
jnp
jns
sahf
std
lods
sub
add
loop
fwait
dec
insb
dec
cmc
and
loop
movsl
loop
lret
rcr
inc
and
or
lea
mov
out
mov
dec
addr16
inc
xchg
call
int3
adc
jg
push
pop
dec
xchg
mov
clc
dec
push
out
xor
pop
lods
rep
aam
jge
mov
test
scas
and
and
mov
xor
jp
lcall
scas
sub
mov
movsl
ja
push
repz
cmp
dec
pop
or
adc
or
cmp
jne
dec
jle
nop
and
mov
mov
insb
sahf
mov
xchg
jle
or
ret
sti
jae
xor
add
xor
mov
loopne
clc
out
stos
scas
mov
push
jmp
icebp
or
cmp
mov
or
dec
and
std
xchg
or
jmp
loope
dec
stos
neg
pop
push
push
xor
sub
and
js
mov
mov
pop
and
and
sub
mov
rolb
add
push
dec
jmp
fldenv
mov
sti
sbb
or
dec
mov
hlt
cmp
clc
loopne
push
mov
cmp
mov
adc
jecxz
popa
pop
add
movsl
jecxz
addl
xor
je
or
sbb
pushf
xchg
cmp
pop
push
xlat
ret
into
dec
mov
rcl
dec
sarb
mov
insl
aaa
out
lods
cmc
movsb
jbe
out
xor
lret
loope
call
mov
inc
insl
jns
jae
mov
jae
xor
sbb
gs
fldenv
fisttps
sahf
rolb
fstl
or
scas
mov
jmp
inc
int3
iret
in
lret
push
push
jg
mov
aas
int
jns
arpl
orb
push
push
call
flds
popf
cmp
jno
mov
fdivrs
mov
cmp
pop
add
stos
push
adc
jmp
mov
loopne
lea
sub
iret
pop
out
add
nop
xlat
sub
mov
or
mov
jne
out
pop
scas
jl
push
mov
inc
adc
cmp
cmp
aaa
fdiv
push
xchg
pop
sbb
pop
mov
push
pop
ja
mov
cmpsl
scas
xlat
pushf
lcall
mov
rorb
xor
pop
and
push
sub
test
test
loope
sbb
push
xchg
adc
bound
fistps
sub
pop
push
dec
mov
test
mov
inc
sbb
xchg
stc
mov
dec
add
xchg
out
cmp
cmp
xchg
iret
push
int
inc
adc
rdpmc
jmp
data16
cs
push
xor
sahf
ret
aad
fmull
jecxz
insl
mov
imul
sbb
add
out
cmp
clc
mov
add
xor
dec
mov
mov
or
aas
faddl
lock
daa
das
or
pushf
mov
push
aaa
xchg
pop
pop
insb
test
ret
cltd
jae
repz
pop
hlt
jo
cmp
add
pop
dec
test
xchg
sti
les
sbb
cmpsb
aaa
int3
je
repz
je
or
sub
movsl
outsl
dec
xchg
inc
pop
daa
roll
pop
inc
pop
or
mulb
xchg
inc
das
pop
xlat
iret
sub
sahf
jno
push
sub
clc
mov
out
addr16
movsb
out
sub
sbb
pop
test
jp
lahf
int3
xorb
or
xchg
scas
add
test
push
inc
rorb
dec
pop
push
mov
xchg
jnp
int3
mov
jmp
out
xchg
push
sub
inc
out
xchg
and
add
push
push
dec
xlat
mov
out
loop
sahf
push
cmp
shlb
cmp
dec
leave
decl
xchg
ljmp
filds
pop
into
add
xor
inc
mov
addr16
pop
les
inc
test
dec
push
ret
imul
dec
sbb
pop
ja
pop
or
xor
notl
arpl
xor
jne
sbb
scas
popa
scas
push
faddp
push
cltd
test
cs
or
rolb
imul
jge
adc
not
clc
xchg
pop
pop
pop
arpl
enter
ds
outsb
adc
out
jp
loope
or
xchg
sub
ds
jg
stos
and
imul
incb
cmpsl
push
fistl
or
adc
incl
dec
lahf
xor
aad
dec
xor
ret
pop
mov
lds
and
mov
adc
imul
lods
stos
xchg
jae
or
add
add
into
ljmp
mov
fcompl
push
imul
test
sbbb
rcrb
jo
fwait
mov
inc
jg
add
pop
push
adc
mov
cs
jmp
stc
cmp
out
sbb
pop
jge
shll
call
xchg
jg
sbb
jb
imul
pop
rcll
dec
push
fs
or
cltd
push
shlb
out
repnz
sbb
mov
scas
mov
xor
mov
dec
cs
pop
inc
lods
fisubrl
aam
das
and
add
ret
test
scas
add
sarl
subl
dec
sahf
movsb
cli
pop
xchg
scas
cmp
jne
dec
pop
push
test
pop
push
movl
xlat
jno
popa
pop
pop
ret
je
fsubp
icebp
mov
jg
or
jecxz
push
xlat
add
jno
std
sub
lods
in
jle
movsb
mov
test
mov
shll
mov
decb
mov
bt
xchg
push
xchg
and
into
std
clc
icebp
clc
push
dec
es
mov
add
jnp
daa
push
addr16
mov
inc
sbb
inc
repnz
xchg
lock
ffreep
lods
cli
test
pop
outsl
mov
sub
lods
adcl
aad
inc
xor
and
lock
test
addr16
xor
or
movsl
cmpsl
sti
push
inc
lds
dec
mulb
fbld
stos
and
loop
js
sub
cli
lret
push
lock
ret
movsl
das
lcall
xor
pop
fdivrl
pop
push
pop
les
jae
loop
and
sahf
and
daa
inc
repnz
stc
into
dec
dec
pushf
es
sub
je
sub
jne
rcr
xor
lahf
and
jmp
inc
fbstp
fbstp
in
mov
setno
mov
jecxz
cmp
out
cmp
mov
bound
in
and
stos
dec
lcall
adc
xor
int
lods
mov
sub
rclb
scas
mov
push
imul
int3
enter
insl
fsubr
adc
sub
jge
sub
add
popf
jmp
in
sub
mov
popa
call
fs
pop
and
jp
or
cmp
adc
nop
cmpsb
mov
sub
insl
cmp
mov
es
in
cmp
popf
mov
mov
cwtl
movsl
lods
loop
push
lods
lea
repz
adc
ror
or
out
pushf
jp
add
xor
push
push
cmp
fistpll
mov
mov
jmp
dec
cld
sub
sbb
sti
mov
push
stos
int
pop
fisttps
in
dec
or
bound
vpaddusb
xchg
cmp
lock
in
test
jb
dec
lahf
es
outsl
sbb
mov
jg
jge
aaa
push
sti
rcll
cli
ljmp
jmp
lods
cmp
sbb
cmpsl
or
arpl
push
arpl
add
mov
popf
sti
fbld
pop
xor
xlat
sarl
cmp
not
pushl
add
xchg
lods
into
pop
lea
or
mov
pop
dec
rolb
pop
xchg
lahf
scas
sti
adc
mov
sti
pop
mov
cmc
xor
hlt
xor
mov
push
lahf
out
test
push
sbb
dec
xorb
push
subl
pushf
jge
mov
xor
and
mov
cld
mov
popa
fwait
adc
icebp
jmp
inc
push
arpl
arpl
shll
and
mov
popa
mov
call
dec
fldl
xchg
pop
push
icebp
xchg
and
xchg
cwtl
test
mov
clc
popa
js
mov
loope
inc
or
lods
fidivl
inc
in
push
and
mov
or
sub
shl
lea
pushf
not
sbb
jmp
call
sub
and
nop
mov
insb
sub
xor
push
and
xchg
and
sub
aas
imull
mov
pop
aad
mov
mov
or
xor
mov
dec
and
pop
lock
mov
mov
push
push
push
pop
push
sbb
mov
fildl
or
jg
test
lods
inc
add
add
cmp
or
jecxz
cmp
test
jnp
fwait
lahf
fwait
xor
mov
outsb
inc
inc
test
sahf
sbb
arpl
popa
lret
test
clc
lds
xchg
int
lahf
aaa
or
das
dec
dec
lods
and
pop
dec
lret
adc
jo
mov
gs
fstp
push
aaa
cmpsl
mov
push
dec
and
inc
imul
mov
xchg
test
pusha
fnstcw
mov
clc
lds
add
mov
mov
outsb
mov
das
sti
nop
in
movsl
pop
jnp
inc
out
cmp
adc
push
dec
jo
adc
push
mov
sahf
sbb
adcb
pop
cmpsb
aam
push
rcl
andb
arpl
incl
clc
cwtl
and
imul
jg
inc
lods
sbb
ficomps
mov
cmpsl
pop
aaa
cmp
pop
jge
es
or
movsl
mov
sub
inc
and
jb
imull
lret
mov
insb
xchg
cli
sub
mov
sub
mov
inc
mov
popf
lods
movsl
inc
add
or
mov
xchg
stos
or
in
dec
mov
ret
jb
push
aad
imul
pop
es
adc
test
jae
lret
pop
pop
or
rolb
pop
mov
mov
mov
gs
jmp
roll
mov
fdivs
xor
decl
daa
scas
incl
push
jo
dec
test
and
mov
sbbl
xor
cmp
cmp
or
or
decl
lock
mov
mov
imul
pop
push
fs
lret
jnp
xor
jle
cmp
pusha
sbb
and
gs
pop
sub
dec
pop
mov
sub
pusha
nop
loope
scas
sbb
popa
cwtl
xor
int3
stc
hlt
outsb
xor
adc
mov
or
xchg
inc
sbb
je
lahf
jnp
xchg
fcoms
xchg
adc
mov
inc
cltd
decl
rolb
fdivl
cmp
inc
mov
insb
loopne
mov
mov
jno
mov
sub
ss
jle
push
add
mov
data16
and
out
les
cmp
inc
dec
mov
adc
inc
mov
aas
or
bound
repz
push
mov
es
fmull
stc
imul
adc
inc
rol
xor
in
rorb
jae
sbb
inc
xchg
jl
cmpsl
pop
jns
xor
sub
lahf
mov
sbb
sub
jnp
inc
jo
std
push
mov
adc
and
pop
or
jns
in
pop
xor
cmp
inc
cmc
jns
sub
jbe
xchg
jg
nop
shlb
out
loop
dec
sub
out
xchg
sahf
repz
test
mov
jmp
loopew
mov
and
mov
shlb
xchg
pop
mov
xor
add
in
sahf
test
icebp
push
cmpsl
and
stos
bound
dec
or
or
mov
xchg
sbb
rorb
adc
dec
pop
mov
xchg
jb
dec
sub
shl
test
pop
pop
and
sub
imul
adc
push
subb
out
sub
adc
cmp
and
js
cltd
fcomps
int
sub
nop
aam
adc
jbe
test
jle
mov
add
or
add
sbb
jbe
and
sbb
push
sbb
fidivs
mov
int3
push
into
sbb
lods
outsb
pop
jne
mov
adc
ret
cmpb
idivl
lea
jle
cmp
mov
push
jb
jne
repz
mov
out
inc
dec
int3
pop
cltd
mov
jg
out
pop
out
ds
xchg
push
lock
mov
pop
xchg
and
mov
dec
enter
jo
fldt
cs
out
test
in
pop
push
xchg
ffree
sbb
test
jl
bound
push
xor
jp
aad
dec
lods
andl
push
andl
jg
cli
inc
test
popf
mov
repnz
ds
fdivr
xchg
and
mov
sbb
in
cmpl
mov
lock
orl
lahf
xchg
adcb
aas
sub
lock
or
inc
xchg
mov
mov
jae
jns
int3
mov
inc
add
out
ljmp
stos
mov
jb
cli
mov
lret
push
push
imul
hlt
cmp
int
or
cmp
incb
in
dec
aam
inc
push
test
inc
jecxz
pop
repz
ret
into
jns
repz
in
pop
push
or
sub
mov
fisttpl
pop
inc
sbb
sub
lock
cmpsl
das
or
pop
out
iret
loopne,pt
push
xlat
jl
je
mov
ss
adc
pop
not
cs
test
out
mov
lahf
jae
add
cmpsb
add
mov
or
mov
jae
push
jae
in
arpl
rcrb
mov
jb
mov
mov
gs
ja
inc
inc
dec
andb
mov
cwtl
daa
cmc
shlb
in
jne
outsl
test
push
cmpsl
jo
xor
mov
mov
push
sarl
sub
icebp
pop
imul
fucomp
mov
jns
add
jo
leave
cmpsl
popa
xchg
xor
cld
dec
mov
insl
xchg
in
xlat
out
call
inc
iret
sub
aam
ljmp
sub
xlat
inc
push
jbe
fs
sub
nop
xor
js
out
mov
push
enter
cmpsl
out
cmpsb
shlb
or
iret
rclb
adc
lods
fcoms
push
xor
test
adc
cli
clc
imul
add
sub
add
inc
mov
aas
icebp
sbb
sbbb
fs
adc
int
dec
mov
inc
jecxz
add
sbb
fdivrs
dec
mov
push
lahf
sub
ljmp
inc
or
stos
mov
xchg
movsl
lds
faddp
pop
rcrl
fisubl
jg
mov
aas
add
aaa
pop
inc
dec
and
lock
mov
and
out
pushf
fistps
fwait
cmp
cmp
icebp
aas
add
out
sbb
in
sub
jae
dec
xchg
cmp
or
mov
pop
xchg
loope
ds
jp
je
stc
dec
and
adc
pop
sub
cmc
cmpsl
mov
mov
les
cld
lock
cltd
mov
adc
pop
push
push
movsl
out
arpl
outsb
inc
jno
inc
and
lock
jns
loop
int3
mov
cmp
out
xor
pop
push
dec
or
adc
xchg
jnp
inc
repnz
sbb
and
ret
movb
out
test
movsl
iret
mov
int3
pop
mov
jle
or
inc
jl
cltd
iret
jnp
out
les
fbld
push
or
cmp
or
rolb
lods
sbbb
jecxz
es
sub
or
inc
add
testb
popa
mov
data16
push
lahf
scas
jg
cld
push
icebp
and
mov
imul
inc
aaa
sarb
fsubr
lret
shr
sbb
int3
dec
jmp
int3
pop
jmp
scas
mov
ja
mov
gs
push
dec
ret
cmp
jne
cmpsb
pop
mov
xorb
sahf
mov
mov
push
xor
in
cmpsb
fsubrs
popa
rclb
cltd
or
mov
adc
sub
lds
xchg
pop
mov
lods
scas
dec
sahf
or
pop
out
cwtl
pop
stc
sbbb
mov
lock
ret
jg
or
sti
mov
imul
fstpt
push
mov
xor
mov
std
add
pop
sti
outsb
push
push
ja
dec
mov
pop
in
aaa
movsb
test
lock
pop
ss
mov
pushf
inc
xlat
aas
push
mov
scas
sub
sbb
rcll
xor
imul
popa
scas
sbb
lret
cmp
jbe
inc
fcomip
dec
fs
and
or
pop
aad
cs
int
lock
in
movb
sbb
xchg
loop
mov
xor
and
and
dec
mov
pusha
dec
add
out
pop
dec
jecxz
movsb
jns
xor
jno
cmp
inc
jp
fldenv
and
pop
push
lea
rcl
xchg
push
mov
popa
push
inc
loopne
sti
js
rcl
push
or
je
ficompl
xor
bound
sbb
push
add
mov
cmp
jns
mov
je
jne
push
or
and
es
push
xchg
inc
in
or
jmp
out
lea
jno
mov
mov
mov
push
test
fcmovu
jno
adc
dec
icebp
addr16
mov
or
icebp
mov
cmp
fidivrs
and
jae
mov
aaa
jmp
xchg
sub
push
jno
push
xchg
out
xchg
in
loope
mov
test
cmp
mov
inc
inc
ret
jb
fucom
popf
in
addl
xchg
push
ljmp
lods
mov
push
mov
mov
inc
push
lret
adc
jl
test
sarl
mov
adc
pusha
outsl
mov
sbb
dec
add
push
ja
adc
or
mov
adc
mov
xor
icebp
dec
das
xchg
add
sbb
inc
mov
pop
lods
fistpl
xor
dec
sbbb
jno
xorl
es
pop
sbb
pop
and
out
jne
mov
cmp
fimull
sarb
jg
jnp
xor
into
sub
add
add
xchg
cld
scas
jbe
xchg
xchg
enter
sbb
test
aam
lahf
xchg
lods
mov
shrb
sbb
testb
mov
cmp
clc
adc
stos
pop
cli
push
scas
dec
mov
data16
jne
ret
inc
mov
sahf
cmpsl
pop
adc
imul
testb
mov
shlb
decl
int
clc
orl
shll
add
cwtl
dec
std
and
addb
mov
push
add
cli
repz
adc
or
mov
dec
push
dec
leave
sahf
lock
cmp
lret
sbb
mov
xchg
pop
add
repz
lea
movsl
lock
mov
inc
inc
xor
std
pop
push
je
cltd
or
in
mov
lods
test
push
cmp
xchg
rcr
add
pushf
scas
push
xchg
in
stos
pop
jg
sbb
stos
push
stos
fwait
mov
jmp
fsubr
lock
ret
fnstenv
scas
into
out
cmc
fstpl
and
add
xchg
xchg
sti
or
xor
imul
das
jbe
loope
dec
add
mov
sbb
ret
jle
cmc
scas
call
scas
imul
pop
cltd
daa
popf
jns
cltd
loop
jecxz
mov
hlt
push
or
or
mov
inc
andl
xor
dec
mov
and
rcrb
data16
imul
mov
jns
out
loope
std
pop
scas
adc
rorb
repz
pop
adc
cmp
pop
push
jo
mov
jns
mov
lret
inc
and
sbb
jp
shll
sub
lcall
in
jge
enter
das
cmpsl
pop
test
or
fildl
popf
pusha
daa
cmpsb
lret
orb
sub
jge
xor
in
push
negb
test
jle
jle
sbb
push
push
out
mov
push
lret
dec
lahf
divb
adc
and
sahf
in
add
loop
mov
vmread
xlat
mov
mov
aas
pushf
fimull
mov
lret
xchg
dec
iret
or
dec
ret
jno
push
mov
mov
jae
mov
jo
das
pop
adc
xor
lock
je
cmpsb
test
mov
cwtl
add
ret
mov
aam
icebp
orl
or
pop
sub
call
dec
jnp
cwtl
inc
idivb
sbb
fst
out
dec
dec
adc
or
std
mov
test
in
xchg
ja
pop
cmp
out
sbb
and
jo
inc
clc
xchg
repz
pop
sub
fadds
mov
test
add
pop
pop
test
mov
enter
movsb
mov
sub
lea
and
xor
fmuls
ret
mov
xchg
mov
stos
shlb
jo
and
push
clc
mov
inc
clc
xor
lods
lret
or
adc
push
add
push
cmp
nop
movsl
shl
mov
push
mov
mov
in
jle
sub
sub
addr16
jb
lds
aam
sub
sub
jnp
cmp
test
mov
cmc
clc
cmpsb
loope
or
ja
jne
xchg
shlb
lea
ret
pop
out
arpl
mov
pop
in
lahf
lock
xchg
sbb
in
shlb
xchg
insl
and
ss
xchg
aam
dec
mov
push
mov
jae
pop
cltd
and
fistpll
aad
push
sub
movsl
lret
push
xchg
imul
push
fcoms
lods
ret
jbe
jl
push
repz
insb
push
jnp
or
mov
inc
sub
pop
cmp
imul
push
loop
and
xchg
clc
pop
xlat
fisttpll
push
jbe
loope
jbe
sub
xlat
cli
std
bound
in
test
inc
mov
subb
int3
xor
or
sbb
lds
push
stc
aad
mov
fistl
pop
jg
pushf
add
pop
jg
xorl
arpl
push
repz
test
dec
insb
je
mov
xchg
std
scas
loopne
scas
mov
jno
in
or
push
loop
xchg
and
jp
cmp
aas
sti
repnz
clc
jmp
lea
dec
or
adc
jecxz
inc
cmpsb
or
push
mov
cmp
cmc
js
fdivrs
fdivrp
pop
mov
xchg
cli
xchg
xlat
es
sub
xlat
adc
adc
xor
and
jl
mov
fldl
xchg
mov
and
test
or
mov
in
mov
cmpsb
lahf
xor
pusha
arpl
mov
push
popf
mov
push
add
inc
int
nop
pop
mov
cwtl
loope,pt
out
cmp
jmp
pop
xor
sub
mov
inc
dec
int
mov
sub
mov
bound
stos
cmp
sub
xchg
push
mov
xor
jmp
mov
insl
dec
insb
add
push
out
sahf
pop
hlt
jo
dec
fs
inc
cmp
push
xchg
inc
mov
mov
jl
int3
sbbb
shlb
adc
sbb
sub
dec
es
inc
rcl
ja,pt
push
jp
mov
jmp
xlat
xor
xchg
in
hlt
mov
mov
arpl
out
stos
jae
adc
shrb
mov
or
xchg
inc
aaa
pop
and
sbb
and
xor
dec
in
movsb
cmc
inc
dec
add
cli
cmp
call
into
orb
lods
lods
addr16
pop
add
xchg
sub
mov
push
add
mov
push
mov
cmp
sub
add
dec
das
sbb
pop
pop
repz
sub
cmpsl
lods
fucomip
add
std
mov
sbb
push
sub
movsb
add
mov
out
clc
jmp
nop
sub
jns
mov
fnsave
in
pop
out
inc
jnp
xchg
inc
jae
push
cmc
xchg
dec
xchg
stc
push
mov
sub
in
lock
outsl
inc
push
add
aaa
adc
jnp
push
pop
lret
popa
iret
repz
inc
mov
mov
adc
les
fistpll
iret
dec
ds
aaa
daa
xlat
xor
xchg
movb
pop
mov
test
fimuls
mov
mov
pop
clc
xchg
inc
dec
or
jno
scas
jmp
lea
dec
movsb
stos
pop
ret
popa
push
xchg
fs
add
sub
dec
rorl
dec
push
sbb
js
aas
pop
test
cmp
xor
cmp
sub
and
xchg
jae
sub
pop
lea
push
test
cmpsb
fcoms
aad
aam
pop
pop
mov
lods
iret
daa
jl
pop
adc
stos
loopne
mov
movsl
outsb
sub
das
scas
fnstsw
insb
fisubs
inc
dec
adc
fsin
and
dec
repnz
inc
jecxz
adc
jg
pop
arpl
hlt
dec
xchg
daa
add
je
pop
imul
xchg
lret
enter
push
pop
cmc
insb
inc
adc
and
push
xchg
ret
inc
cld
in
xchg
call
out
gs
mov
push
mov
inc
cwtl
push
or
scas
xchg
mov
outsl
outsb
pop
add
out
leave
out
or
inc
shr
rcrl
in
pushf
shl
push
adc
aad
daa
mov
push
sub
popa
jne
lcall
pusha
mov
int
and
negl
in
push
repz
into
sbb
inc
dec
aaa
sub
lods
xor
daa
adc
cld
dec
lock
loopne
fsts
pand
orl
xchg
or
mov
push
fbld
movsl
movsl
fstpt
icebp
push
push
arpl
add
mov
fwait
adc
push
outsl
ss
iret
cmp
int
xchg
push
xchg
test
stc
rcrb
in
cmp
cltd
addr16
in
add
sahf
push
or
adc
sub
cmp
aad
test
repz
cmp
rcr
sbb
repz
push
mov
ljmp
mov
push
dec
das
jecxz
jo
jns
sbb
leave
push
addr16
add
aad
gs
js
mov
add
or
mov
mov
shlb
add
xor
jmp
adc
push
jns
divb
scas
dec
sub
push
fiadds
or
pop
lret
repz
mov
dec
shll
xchg
and
dec
ret
xor
push
ljmp
xor
aas
lcall
push
sub
fists
data16
fbld
in
and
test
addr16
inc
mov
fbstp
fsubl
clc
aam
mov
sub
jmp
inc
dec
xchg
and
and
mov
arpl
push
cwtl
mov
push
jne
xchg
pop
hlt
jp
nop
or
imul
js
int
xor
scas
loopne
insl
lock
pop
repnz
dec
ret
pop
adc
fimuls
pop
loopne
mov
push
pop
gs
xor
inc
xchg
xchg
mov
jmp
mov
cmp
dec
xchg
ja
aam
dec
leave
cli
push
imul
addr16
and
movsb
stos
or
fcoml
or
jns
orb
jge
pushf
sbb
lret
orl
in
lea
push
lret
stos
enter
sbb
mov
enter
cs
mov
movsl
push
and
in
lret
mov
inc
push
rol
mov
pop
ret
adc
into
add
cwtl
stos
adc
out
pop
imul
sar
mov
loopne
ja
sbb
mov
mov
push
add
add
ds
jge
data16
std
inc
int
dec
mov
xchg
iret
xchg
cmp
xchg
and
and
aas
add
pop
repz
or
das
sub
ljmp
push
in
and
or
sbb
js
icebp
insb
dec
xchg
pop
sub
mov
inc
int
jg
fdivrl
std
testb
mov
std
xchg
mov
pop
gs
lcall
mov
cmpsb
mov
adc
jecxz
mov
decl
add
mov
sub
cmpsl
popa
mov
fsubr
jmp
mov
sbb
xlat
fimuls
xchg
idiv
jge
ret
sbb
or
negl
and
xchg
loope
and
push
sub
mov
adc
adcb
xchg
sbb
dec
stc
shrl
pusha
mov
bound
lods
test
xor
outsl
out
jae
mov
aas
xor
xchg
sub
or
cmp
arpl
sub
or
rclb
aam
lods
fs
int3
cmc
call
or
negl
ss
sub
faddl
xor
das
daa
sbb
push
and
xchg
out
sub
scas
clc
pop
adcb
dec
data16
cld
test
test
icebp
mov
mov
scas
pop
or
jo
outsl
popf
xchg
cld
pop
cmp
or
push
push
ljmp
das
mov
stos
sti
movl
es
adc
mov
movb
fsubrp
xchg
cwtl
mov
xchg
sbb
inc
lahf
jae
cmp
push
or
insb
jno
shlb
loope
pop
add
inc
insb
mov
push
clc
data16
lret
mov
orl
mov
aaa
insb
rcll
cwtl
notb
shlb
iret
aas
and
pusha
cwtl
jns
in
xchg
pop
cmpsb
jl
ror
pop
xchg
jae
jle
mov
xchg
mov
xor
jl
pop
mov
xor
add
xchg
cmp
adc
loopne
imul
test
or
orb
cs
loope
ss
je
cld
repz
xlat
mov
pop
aad
dec
pushf
test
jge
sbb
sbb
cmp
loope
and
sub
inc
jl
jle
cltd
icebp
cs
adc
lahf
cmp
jg
ja
aaa
mov
sbb
outsb
aaa
cli
andb
pop
sbb
int3
dec
movsb
push
mov
push
cwtl
mov
rol
pop
inc
imul
in
or
cmp
or
data16
aam
ficoml
xchg
in
xchg
jge
xchg
push
aaa
mov
mov
ret
in
cmpsl
or
sub
fmuls
mov
loope
in
movsl
test
rorl
add
mov
cmp
xorl
dec
cmp
push
nop
cmpsl
aam
dec
in
push
clc
mov
das
test
and
pop
ds
les
arpl
push
addb
mov
sbb
and
filds
adc
les
idivl
xchg
arpl
inc
lahf
ret
add
ds
jecxz
je
pop
mov
arpl
out
insb
inc
fnstenv
ja
sbb
dec
cltd
inc
inc
sub
cmp
xchg
inc
add
push
insl
clc
sub
scas
cmp
xchg
imul
or
imul
call
inc
ret
add
push
jl
jo
nop
fxch
inc
push
insb
popf
shrl
adc
or
lods
sub
test
jbe
jge
lods
jp
rcr
dec
or
into
pop
sub
fwait
shl
sbb
daa
fcomi
andb
pop
sahf
lret
gs
loop
fcmovnb
inc
add
test
ret
repz
mov
jl
push
shrb
sti
lahf
dec
pop
pop
fidivs
xor
ljmp
bound
mov
xchg
call
hlt
inc
jne
or
jo
dec
jae
pop
push
cmpsb
pop
push
push
stos
fs
sahf
mov
lret
daa
mov
mov
mov
outsl
psubusw
pop
dec
jns
hlt
int
lods
xchg
retw
loope
mov
jmp
lcall
fcoml
das
pop
pop
fildl
and
out
or
push
sub
dec
inc
sub
aad
inc
aam
popa
xor
sbb
loopne
fmul
subl
mov
fyl2xp1
stc
xor
adc
ja
adc
or
mov
sbb
inc
sbb
add
sbb
jno
add
add
fisttps
push
pop
jae
dec
mov
fwait
sbbl
std
xor
or
scas
jno
in
into
pop
xchg
inc
test
push
pop
add
rorb
fldenv
sub
scas
jle
jmp
into
add
push
and
dec
fcoms
mov
jbe
nop
std
lods
ds
xor
mov
pop
rorb
jge
out
push
daa
arpl
xchg
in
das
das
lret
jg
test
add
mov
call
mov
or
adc
add
pop
ret
xchg
push
cmp
out
mov
xchg
mov
jg
add
jnp
adc
xor
popf
mov
insb
pusha
mov
dec
fbstp
mov
and
cmc
lock
jg
push
jnp
cmpsl
jo
xor
adc
jne
jecxz
jno
outsb
insb
gs
aam
lods
adc
xchg
ja
gs
shl
mov
and
scas
push
sbb
mov
ret
pop
cld
xchg
mov
mov
lcall
aas
mov
testb
sbb
jo
idiv
movsb
dec
repnz
negl
mov
andl
sbb
insl
mov
sub
xchg
int
iret
lret
sub
adc
mov
cmpsb
mov
push
loopne
or
mov
popf
mov
jo
cmp
dec
loop
jne
in
pop
pop
push
add
sub
pop
dec
movsl
mov
fwait
pop
test
add
mov
aad
mov
mov
jbe
xchg
dec
cltd
outsb
mov
jno
pop
lock
jnp
ret
xor
roll
mov
sbb
insl
xchg
xor
leave
sti
subl
cmp
mov
push
jl
cltd
loop
and
rcr
or
in
repnz
mov
mov
dec
out
or
sar
hlt
push
or
mov
xchg
xchg
mov
lods
cmp
push
in
aaa
ss
mov
or
adc
outsl
stos
fmull
xchg
mov
xor
mov
cmp
cmp
test
aas
mov
imul
jns
inc
push
mov
je
insl
adc
fildl
lods
roll
sbb
jbe
pop
rorb
stos
pop
push
push
xchg
and
mov
or
pop
pusha
mov
mov
dec
dec
iret
xchg
into
stos
jns
daa
jp
and
idivb
arpl
movsb
rep
scas
lea
xchg
in
lock
out
jecxz
mov
mov
xchg
in
inc
lds
fadd
and
test
sub
loopne
lock
sub
ficoml
fs
repz
imul
sub
js
push
mov
push
jno
pushf
aad
mov
xlat
cltd
mov
lret
loope
ja
pop
sbb
jnp
dec
pop
out
mov
xchg
or
adc
fmuls
cmp
inc
test
imul
fwait
or
pop
lahf
xor
movsl
aam
inc
mov
cmc
inc
out
mov
sub
mov
mov
ret
shl
shrl
adc
pop
adc
jnp
mov
push
push
movsl
lret
xchg
imul
into
loopne
cmp
jge
push
mov
lods
or
iret
out
adc
repz
pop
push
in
inc
call
mul
nop
xor
js
popf
mov
addr16
call
dec
xor
xchg
push
mov
jp
bnd
lods
jns
loop
aaa
popa
sub
clc
jbe
div
sub
lods
nop
in
cs
dec
lds
mov
insl
repz
xor
lahf
inc
fldt
adc
mull
pop
fwait
sti
mov
loope
lods
lret
and
ror
xchg
dec
mov
cs
push
sbb
loopne
ljmp
dec
push
jge
or
cmpsl
stos
add
mov
imul
daa
lods
adc
out
test
sarb
loopne
fwait
cltd
mov
cmpsl
loop
jb
jo
rcl
inc
and
movb
lahf
lret
int3
nop
sub
dec
stos
push
jmp
adc
inc
push
cmc
imulb
aad
pop
das
out
shll
repnz
aaa
cmp
jle
fcmove
nop
movsb
in
lods
mov
pop
and
addr16
lock
jl
jo
pop
mov
push
fisubs
movsl
insl
jl
sahf
pop
sbb
daa
add
adc
bound
lret
dec
scas
fwait
mov
mov
repz
mov
sub
pop
insl
push
xchg
daa
lahf
add
xor
adc
iret
clc
ds
in
fbstp
jmp
xchg
fucomp
gs
mov
mov
test
arpl
inc
fadd
fwait
imul
iret
mov
pop
sub
out
icebp
int
sub
jge
aaa
and
sbb
inc
xor
rorl
icebp
pop
jle
lret
lret
pop
jo
sbb
dec
or
shll
xchg
aad
mov
lods
pop
jle
mov
mov
fbstp
out
test
popa
aaa
xor
sbb
rcl
mov
cmp
fwait
jp
sbb
repnz
in
icebp
dec
xor
mov
stc
pop
or
cltd
nop
sub
int3
insb
pop
add
xchg
arpl
fdivl
es
orl
adc
sub
jle
fiadds
adc
xlat
inc
fnstsw
cmpsb
ja
out
leave
stos
cmpsl
sbb
sbb
iret
add
xor
sbb
in
push
xchg
ja
adc
fstpl
cmp
pop
push
pop
clc
add
push
or
cmp
lcall
dec
push
daa
mov
cmp
daa
and
notl
cmpsl
ss
pop
aam
pop
cmp
lahf
push
insl
dec
push
fistpll
rorb
cmpsb
int
xchg
push
arpl
and
lahf
mov
jmp
mov
push
sub
mov
inc
hlt
and
add
fs
jnp
movsb
stos
mov
popf
or
cmp
movsb
cmpsl
dec
push
xchg
dec
test
cmpsb
xor
mov
fdivr
xchg
icebp
stc
inc
push
pushl
pop
xchg
jo
scas
outsb
test
inc
mov
push
jl
xor
mov
dec
push
and
sub
call
daa
adc
add
ljmp
sti
sbb
dec
inc
scas
and
mov
je
mov
mov
mov
ljmp
cmc
sub
rcr
sbb
lods
and
mov
mov
dec
cmp
fists
pop
jg
loop
lret
or
scas
inc
cmpsb
into
aaa
int3
sbb
cmp
lods
mov
sahf
cmpl
shr
dec
lods
mov
scas
inc
add
fwait
inc
adc
xchg
cmc
mov
movsb
add
dec
aam
or
lahf
and
adc
in
xlat
outsl
fldenv
cmp
mov
and
fiaddl
sub
cs
test
out
cli
adc
out
sbb
or
mov
ret
fs
inc
and
xor
sub
orb
push
das
outsl
loop
push
leave
lret
xor
add
fstps
pop
sub
push
add
jno
rcrb
sub
pop
rorl
mov
mov
xor
out
push
adc
cltd
xchg
adc
jg
cmpsl
xchg
cvtps2pi
rclb
and
int
pushf
dec
jmp
push
push
mov
fcomp
dec
sbb
test
out
xchg
jmp
mov
cmc
rorl
xor
imul
xchg
lcall
adc
sbb
out
dec
lods
sarl
clc
pop
addr16
sub
jb
out
add
fistps
mov
pop
test
pop
or
cmpsl
adc
shll
xor
push
int3
popa
inc
stc
iret
jnp
sbb
mov
adc
ljmp
xchg
in
outsb
jle
jle
inc
sub
imul
lods
xor
out
xor
push
mov
fbstp
xor
leave
adc
push
mov
xchg
and
jp
es
mov
mov
mov
ljmp
lret
cmp
mov
add
stos
mov
out
lea
out
push
neg
mov
lods
fcoms
ds
rol
mov
arpl
into
jnp
mov
cld
jl
xlat
jg
loopne
fisttpll
add
into
jl
cwtl
mov
jbe
pop
xchg
outsl
lahf
imul
data16
add
adc
pusha
push
clc
cltd
xchg
addr16
pop
sbbb
mov
push
push
mov
fwait
out
dec
sub
ds
dec
inc
adc
cmp
inc
mov
sbb
int3
push
in
inc
add
mov
xchg
dec
push
inc
pop
sbb
dec
inc
dec
xchg
test
jbe
sbb
shr
xor
mov
xchg
movsl
push
mov
cmp
mov
mov
mov
fmull
and
xor
pop
gs
push
or
lods
popa
sbb
xchg
orb
iret
loopne
into
push
out
push
mov
mov
mov
sub
xchg
dec
fidivs
sbb
cmpsl
xchg
mov
roll
jns
mov
dec
mov
jle
cmp
mov
mov
lock
daa
cmp
cld
pop
cmc
lods
sbb
inc
sbb
mov
pop
cmp
or
push
orb
rolb
and
jns
pop
lds
test
inc
or
dec
sbb
rcrb
test
arpl
outsb
jno
inc
xor
fmuls
or
daa
dec
mov
sbb
aaa
movsb
icebp
pop
sub
lods
push
movsb
mov
xor
add
mov
sbb
stc
lcall
out
out
xchg
daa
fldenv
inc
scas
push
push
data16
mov
xchg
je
rorb
jecxz
xor
cli
lock
jp
push
or
push
mov
ja
in
push
insb
ja
xchg
leave
add
xchg
jmp
xor
push
xor
mov
sti
daa
das
ljmp
js
subb
pusha
xchg
loopne
pushf
sbb
lret
xor
pop
nop
imul
inc
xchg
sahf
xchg
nop
divb
sbb
jp
push
test
fcomps
and
push
xor
dec
leave
push
mov
cli
push
mov
sar
jae
test
inc
ljmp
insl
outsb
dec
or
rclb
pop
enter
jbe
stos
mov
imul
xchg
aas
or
jmp
mov
test
cmp
and
fdivrl
mov
sti
sub
inc
sbb
jno
lods
scas
frstor
pop
pushf
pop
cli
sub
mov
cli
xchg
data16
push
cmp
ds
arpl
cmpsb
loopne
leave
inc
mov
mov
cmp
inc
xor
add
add
fimuls
adc
rorl
sbb
es
adc
xchg
jl
repnz
cmpsl
test
or
call
insb
sub
push
sahf
dec
cld
test
lcall
sub
sbb
sti
dec
jns
clc
push
xor
movsl
push
cltd
js
cltd
nop
imul
fst
cmpsl
aas
cmp
push
dec
jp
cmc
xchg
lahf
pushf
out
inc
out
push
xchg
or
xor
out
out
adc
xor
sub
cmp
leave
leave
mov
inc
dec
cmp
stos
aas
mov
in
imulb
andb
pusha
lock
jnp
sub
jmp
add
xchg
imul
nop
add
sub
jae
lcall
xchg
or
gs
xchg
sub
scas
mov
push
out
inc
mov
push
adc
cmc
jbe
mov
sub
jbe
push
cmp
jnp
or
jge
sub
inc
daa
cli
inc
push
inc
shlb
jno
stos
sbb
and
xchg
outsb
xchg
xchg
cs
nop
push
mov
xor
cmovns
loop
inc
push
lods
pop
push
push
das
ret
jnp
scas
hlt
xor
test
ret
addr16
xor
xor
aas
rcrb
fcmovnb
cld
xchg
mov
loopne
pop
call
cltd
mov
add
shrb
jmp
dec
push
imul
stc
dec
iret
inc
inc
mov
push
jnp
jne
cs
mov
lret
movsl
pop
mov
dec
mov
rcr
inc
push
mov
stos
adc
loope
test
shl
fcompl
sbb
jns
sysenter
shr
cmpsl
or
mov
sbb
fmull
ds
stc
dec
imul
push
js
inc
loopne
push
xor
ljmp
add
jl
lods
je
push
xor
jecxz
pop
adcl
xor
inc
mov
inc
push
sahf
pop
mov
outsl
jmp
sub
bound
xchg
std
mov
xlat
addr16
or
in
cmpl
fbld
sbb
mov
movsl
test
dec
lret
cwtl
sub
dec
and
rcrb
test
inc
adc
out
push
mov
incl
xchg
jle
mov
or
xchg
jo
pusha
xor
outsl
sub
jmp
aaa
rorb
xor
outsl
cmp
insb
add
mov
mov
push
insl
lcall
fstps
cmpb
push
js
mov
ret
add
jae
mov
push
push
out
jg
mov
stos
mov
add
pop
inc
lea
cmp
xor
push
pop
jnp
popa
addb
sub
pop
jne
das
xorb
dec
push
jnp
adc
ficoms
add
sahf
mov
add
repnz
les
adc
add
and
xor
test
je
add
data16
into
xor
mov
and
outsb
pop
xchg
inc
fmull
roll
mov
sub
stos
cmp
negb
pusha
jb
cmp
out
faddl
jecxz
inc
sub
adc
jae
push
and
mov
sbb
mov
andl
lods
push
mov
sahf
push
inc
push
sub
xchg
dec
enter
jnp
mov
pusha
mulb
test
add
ss
cltd
or
dec
dec
loop
cmp
pop
icebp
and
adc
or
testb
dec
stos
mov
clc
rcrl
push
jae
pop
inc
xorb
xchg
int3
xchg
inc
daa
mov
in
mov
add
repz
mov
fs
test
or
pop
xor
rcll
jne
jne
lds
cmpsl
and
fnstenv
fisttpll
ljmp
inc
rclb
popf
or
xor
push
shll
push
loopne
test
movsl
push
popa
pop
sbb
lret
movsl
xchg
enter
or
push
and
in
xor
adc
inc
mul
insb
daa
cmp
cs
lods
sub
std
out
mov
les
or
ds
cmp
test
push
daa
outsb
jb
dec
mov
inc
les
and
icebp
jbe
loop
movsl
add
xor
jae
testb
inc
xchg
and
mov
mov
test
adc
dec
loopne
ror
jnp
ret
insb
add
divl
cmpl
push
xor
jge
paddw
or
adc
flds
xchg
dec
mov
fimuls
popa
cmpsb
and
adc
mov
nop
sahf
imulb
mov
pop
push
cs
icebp
jo
and
sbb
jle
dec
rcrl
outsl
mov
rcrl
xrelease
mov
lods
adc
or
pop
lods
lret
mov
lods
jbe
repz
stc
imul
jmp
test
in
mov
xlat
sbb
push
int3
movsl
jmp
mov
shll
cs
and
cmp
sub
dec
andl
mov
xlat
jb
add
mov
jns
push
cmpsb
fldcw
and
sbb
sbb
push
xchg
icebp
push
jbe
adc
imul
in
jmp
cmp
mov
sub
sub
xchg
fidivs
gs
adc
inc
cmp
in
dec
inc
leave
jmp
dec
js
lcall
arpl
push
jnp
mov
push
aaa
in
push
dec
add
pop
mov
daa
or
xlat
jp
insl
fdivrl
sahf
es
add
push
mov
loope
mov
and
sbb
push
xor
out
dec
loop
mull
cmp
cmp
jne
cmp
test
scas
or
addb
sbb
mov
and
adc
movsl
pop
rclb
jle
popl
jl
dec
lock
mov
push
cmc
inc
jp
cltd
popf
mov
dec
test
clc
xor
movsl
add
mov
clc
in
mov
lret
push
push
shl
ret
pusha
sub
in
xchg
inc
push
mov
int3
jp
dec
and
sbb
sub
scas
fwait
cwtl
sbb
stc
sub
sub
stc
std
dec
xor
ss
pop
xor
clc
sbb
int3
icebp
insb
ljmp
or
mov
mov
int
rcrl
jae
jge
mov
stc
xchg
dec
bound
or
faddl
xchg
fistps
cld
popa
push
sbb
lahf
es
clc
mov
sar
and
movsl
addl
and
daa
out
jno
fnstcw
pop
or
jmp
cmpb
and
outsb
mov
sbb
inc
jbe
add
sub
iret
push
lds
push
add
in
bound
mov
mov
jg
mov
mov
repnz
jmp
int3
nop
xchg
or
lcall
or
out
pop
inc
and
loopne
xchg
call
jbe
stos
iret
pop
mov
jno
cmp
add
jmp
addl
xchg
stos
adc
add
add
int
inc
jno
fistl
test
fisttpl
adc
mov
xchg
gs
xabort
cli
xor
or
repnz
jnp
lcall
mov
jno
and
adc
arpl
pop
pop
sbb
clc
and
sbb
lock
repnz
into
dec
jmp
or
jle
mov
fldl
mov
dec
jecxz
cli
repz
outsb
imul
iret
rclb
loopne
stos
sbb
push
pop
jae
imulb
adc
mov
out
mov
push
idivb
push
lret
dec
mov
incb
push
cmp
divb
arpl
fstp
cli
inc
adc
cli
nop
sub
mov
addr16
cmpsl
aad
push
or
jmp
or
push
xorb
inc
aaa
adc
mov
jno
sbbb
iret
in
cmpsb
rcrb
jo
lock
jl
ret
mov
out
xor
add
repz
clc
das
test
lock
pusha
mov
call
bound
push
scas
mov
jbe
pop
mov
int3
and
gs
ss
or
out
cmp
mov
clc
test
dec
add
popf
fidivl
sahf
and
stos
jp
xor
imul
mov
xchg
mov
sub
repz
popf
jae
notl
imul
pop
mov
cmp
sbb
enter
xor
int
sti
cmp
add
cmp
inc
inc
jge
xchg
vmwrite
add
insl
sarl
adc
and
push
mov
dec
stos
into
ljmp
mov
or
les
clc
dec
shl
loope
jmp
or
inc
fldl
sbb
pop
and
pop
js
fiaddl
or
fwait
sub
inc
jne
adc
fwait
cwtl
lock
lcall
sbb
out
mov
jnp
pop
popa
mov
xor
xchg
sbb
xor
mov
push
call
xor
pop
movsb
push
scas
bound
pop
movsl
lods
mov
adc
mov
std
or
mov
mov
cmp
mov
out
inc
dec
ja
shlb
xchg
enter
lock
fistpll
jecxz
out
jp
inc
jmp
pusha
sub
movsl
aad
xorl
ja
xchg
ljmp
jo
aas
mov
insb
or
shr
cmpsb
mov
jb
aas
dec
pop
out
jmp
ret
mov
inc
dec
sub
iret
xor
ficompl
add
fnsave
pop
sbb
cli
mov
jb
data16
shlb
les
mov
and
cs
jp
jp
jae
fldl
inc
push
add
cmp
sub
das
in
dec
jne
jge
frstor
push
mov
enter
and
inc
push
data16
repz
fisubs
mov
insl
arpl
push
mov
and
mov
or
inc
xor
adc
int3
cmp
out
ljmp
push
daa
push
ret
xor
cmpl
loope
lcall
inc
jne
jmp
pop
mov
movsl
in
sarl
fistps
adc
dec
imul
mov
stos
lock
fsts
sti
cmpsl
inc
sbbb
adc
push
cmp
xlat
xor
fmul
shll
pop
xor
pop
pop
in
mov
fisttps
xchg
call
test
sbb
or
adc
inc
mov
mov
inc
xchg
movsb
push
push
rorb
in
or
sarl
xchg
int
dec
jbe
adc
frstor
pop
enter
fsubrp
sahf
mov
fstpl
jmp
pop
push
inc
inc
ret
pusha
push
js
xor
frstor
mov
adcb
adc
mov
jo
ret
inc
mov
orb
dec
hlt
or
mov
nop
lock
sbb
rcrl
hlt
mov
ljmp
jnp
stos
and
ficompl
faddl
movsb
jnp
sub
fstps
daa
mov
pop
test
jp
sahf
outsb
mov
loope
push
stos
or
inc
fsts
lret
xchg
pop
repz
push
sub
or
test
pop
xchg
or
inc
adc
jne
lock
and
gs
adc
pop
sbb
mov
cmp
mov
mov
rorl
xchg
add
or
cmpsb
xchg
and
mov
mov
or
adc
lahf
stc
cmpb
xchg
stos
or
inc
push
and
hlt
sbb
jg
cmp
ret
dec
pushf
add
add
or
mov
call
pusha
cmc
lret
mov
jo
test
xchg
mov
cld
jg
test
lret
dec
out
cmpsl
cmp
lds
inc
insb
in
sarb
ds
mov
test
or
dec
cmp
sub
mov
or
aam
lea
dec
aas
jmp
repz
std
mov
in
cmp
and
dec
cs
roll
inc
daa
aas
and
jmp
lea
and
outsl
jl
fdivrl
enter
arpl
ja
pop
inc
jp
lea
dec
cmpsb
pusha
sub
xchg
comiss
das
xor
mov
and
fimuls
push
decl
popa
cld
lds
adc
dec
imul
insl
fnsave
out
or
mov
into
xchg
insl
pop
or
add
insl
jl
jo
enter
push
xchg
pop
gs
es
jbe
ja
test
cmpsl
aaa
icebp
nop
inc
das
pop
rolb
cmc
push
sbb
stos
xor
daa
scas
es
fnstenv
push
add
xor
lcall
outsl
stos
xchg
nop/reserved
repnz
fs
dec
fld
fucompp
cs
addr16
aaa
es
lahf
xor
cwtl
daa
ror
xchg
jnp
enter
adc
inc
in
rcr
imul
repz
cltd
xor
insb
add
fildl
fs
inc
add
jne
sub
mov
xchg
mov
ret
ret
in
push
ljmp
mov
sub
adc
cmc
mov
pop
hlt
or
cmpsl
ret
mulb
jp
push
jecxz
sbb
jp
clc
pop
sarl
scas
pop
push
test
mov
pop
enter
mov
adc
leave
cltd
pop
inc
shlb
rcrl
and
inc
mov
xchg
gs
and
pop
mov
into
mov
sub
icebp
mov
pop
pushf
stos
sar
xchg
mov
jp
pop
imul
call
lods
xchg
jmp
ret
insl
adc
xor
mov
cmp
add
pop
jmp
cmp
pop
clc
lahf
adc
out
into
pop
sbb
das
xchg
int3
adc
lahf
repz
push
mov
mov
mov
clc
aad
lea
aaa
sub
movb
cmp
ss
dec
push
xchg
xchg
mov
or
push
out
aaa
jnp
stos
xchg
xor
mov
daa
outsl
xor
push
enter
xor
dec
adc
adc
loopne
or
out
pop
imul
push
mov
xchg
or
out
lahf
cmc
jne,pn
ds
lock
mov
and
or
in
add
filds
sbb
lock
ret
mov
lret
in
xchg
cld
dec
mov
sbb
cmp
dec
xchg
fstl
aas
std
sbb
nop
daa
jmp
sbb
cmp
loop
aam
cmpsl
inc
xchg
insb
adc
and
cmp
sarb
jg
bound
sahf
and
sbb
cmp
inc
ljmp
ds
mov
ret
cli
sbb
pop
iret
sbb
dec
in
pop
cli
or
dec
adc
aad
cmpsl
popa
orb
push
fcoml
popf
cmpsl
js
fildl
xchg
out
jns
mov
movsl
sti
xor
jbe
mov
notl
mov
push
icebp
ds
push
test
test
repnz
pushf
sub
int3
dec
sub
and
pop
mov
push
fldenv
xor
inc
imul
jbe
stc
daa
xchg
stos
xchg
mov
or
adc
pop
jl
inc
and
mov
lods
lea
sti
addr16
loop
mov
pop
mov
je
cmp
cmp
inc
push
mov
pop
les
stc
mov
sbb
roll
imul
mov
mov
and
push
inc
cmp
stos
pop
push
je
push
cmpsb
loope
iret
int
stos
and
pop
shll
fsubl
push
addl
sbbb
cmc
loopne
dec
push
icebp
pop
jo
dec
add
in
stc
add
fistpll
jle
aaa
sbb
add
call
push
movb
std
cmp
xchg
movsl
dec
cli
aam
or
and
cltd
ds
test
mov
lods
dec
xchg
shll
in
pop
arpl
pop
push
cs
pop
fimuls
adc
insl
cs
movsl
push
test
sbb
xor
out
bound
lea
push
jmp
inc
rcrb
pop
dec
sarl
inc
lcall
in
adc
add
icebp
sub
addb
mov
loope
ja
xchg
pop
xchg
pop
daa
fisttpl
hlt
jp
imul
mov
sub
icebp
add
cmp
pop
mov
frstor
ljmp
sub
add
ret
mov
pop
pop
xor
xchg
sub
xchg
jbe
jns
stos
pop
movsb
and
mov
push
push
sbb
xor
clc
insb
sub
sbb
push
push
mov
sub
sbb
pop
jge
inc
pop
cmp
push
xsaveopt
into
dec
fisttpl
push
push
cmp
mov
mov
dec
inc
rcll
adc
mov
in
insb
jb
fs
mov
jno
and
das
data16
movsl
pop
sbb
push
dec
sub
add
jb
loope
fidivs
xchg
maskmovq
idivl
daa
leave
sbb
dec
adc
mov
popa
sbb
jge
ljmp
xor
shlb
or
jp
punpckhbw
fadd
addl
es
and
std
dec
push
arpl
scas
mov
jge
xchg
push
sbb
fwait
push
push
or
leave
cmp
pop
and
push
xchg
xchg
sub
mov
lret
in
cli
add
outsl
ss
testb
or
mov
js
daa
stos
mov
iret
cltd
cmp
call
pop
cmpsb
pop
dec
in
xor
cwtl
sbbb
inc
xor
push
enter
inc
in
test
sub
xchg
cmp
push
pop
xchg
scas
mov
xor
testl
add
push
stc
xlat
pop
test
rorb
or
lds
sub
xor
popf
sbb
enter
cmp
jns
data16
mov
jo
jo
pusha
mov
xchg
add
xchg
sbb
in
dec
adc
sub
jecxz
push
jnp
cmp
test
and
mov
and
pop
mov
mov
sbb
jecxz
fdivrs
and
js
in
aam
fwait
mov
pop
jecxz
push
lahf
popf
ficomps
and
aam
cmp
xor
cmpsl
sbb
mov
xchg
jnp
xchg
mov
sahf
xor
pop
xor
cld
mov
imul
xor
pushf
dec
adc
cmp
xor
mov
add
sub
mov
movsl
clc
sub
mov
jns
cwtl
loopne
xor
sbb
dec
mov
xchg
inc
ss
jg
pop
call
jmp
jbe
lret
stos
add
push
inc
jb
fwait
pop
call
sbb
outsl
sti
mov
inc
cld
pop
jecxz
into
add
push
pop
mov
inc
xor
fsubs
mov
mov
pop
push
ret
shlb
push
out
imul
shl
lods
gs
jmp
lea
dec
iret
fdivr
jmp
jbe
xchg
xchg
clc
ret
mov
hlt
cmp
push
shr
mov
sub
inc
push
arpl
mov
mov
lods
test
loop
ds
adc
std
mov
or
out
ljmp
mov
sarb
jae
xchg
and
cli
pop
out
xchg
cmp
xor
fldl
xchg
and
mov
inc
shll
add
cmpsb
pusha
stos
fmull
mov
push
mov
mov
sbb
adc
inc
div
movsb
sub
jge
cmp
popf
xor
loop
leave
ss
sbb
cmp
mov
pop
das
or
dec
fldl
leave
pop
pop
mov
cs
movntq
incl
incl
pop
les
jbe
mov
pop
cmp
xchg
adc
sbb
enter
outsl
sahf
pop
sbb
adc
insb
adc
stc
fsubrl
jns
pop
sbb
or
lea
ss
in
ja
jge
and
cmc
je
xor
in
lahf
cmp
mov
add
mov
xchg
or
xor
jno
out
movsl
xchg
ja
adc
rolb
or
jo
xchg
lds
movsb
push
xor
inc
dec
mov
es
jae
mov
cmp
sbb
sub
jns
mov
and
es
inc
popa
or
cltd
jns
imul
movsl
sbb
jecxz
loope
out
mov
cmovle
gs
dec
cltd
sub
repnz
aaa
push
jo
data16
in
lds
scas
inc
inc
ds
jecxz
les
dec
dec
xor
lret
cmp
in
or
mov
fmull
inc
insl
dec
cmp
sbb
lods
sub
xor
loope
repz
xchg
shrb
or
cmp
xorl
inc
cmp
or
pop
xor
mov
in
pop
icebp
sar
dec
pop
pop
xchg
sub
stos
add
std
leave
popa
inc
js
aad
xchg
mov
imul
mov
sub
mov
jns
bound
test
jo
pop
dec
loope
fisttps
fabs
xor
and
mov
lock
xchg
mov
sbb
lea
cwtl
frstor
cmc
sarl
movzwl
popa
xor
mov
sub
je
push
or
int3
and
jns
fs
test
fimull
mov
and
inc
insb
adc
popa
and
jb
popa
adc
popa
sbb
sub
mov
cmpsb
shlb
cmp
mov
dec
jmp
fwait
imul
sub
into
sbb
push
mov
outsb
mov
push
popf
pop
cli
das
fsub
xchg
adc
xor
pop
sbb
data16
scas
xorl
je
gs
inc
mov
and
xchg
lods
loope
out
imul
out
stos
pop
loope
jns
dec
mov
outsl
stos
add
repz
pop
xor
pusha
cmpsl
sbb
jecxz
pop
daa
pop
inc
stc
mov
mov
xor
cmp
and
ja
sub
push
sti
add
sub
mov
sub
inc
decb
push
mov
loop
xor
ficomps
adc
or
pop
lods
jmp
mov
mov
test
cmpsb
xchg
in
push
push
xchg
repz
fcmovne
outsb
or
xor
mov
xchg
cmc
sahf
or
mov
pop
pop
jmp
insb
scas
xor
adc
jg
cmp
lods
gs
inc
repnz
add
in
push
ja
dec
or
sub
sbb
jns
call
pop
ret
push
lea
xor
test
jp
in
adc
test
mov
mov
mov
inc
add
or
addl
or
xchg
mov
dec
jmp
mov
add
ret
outsb
jbe
inc
or
pop
test
sbb
insl
lods
scas
pop
repnz
dec
ret
movb
sub
adc
jmp
sub
subl
popa
aad
inc
fsubs
scas
mov
nop
jnp
dec
adc
in
aam
push
xor
jo
lods
xlat
jecxz
aad
pop
mov
ss
int
lock
mov
add
mov
lds
jno
xor
pop
adcb
inc
std
stos
jns
mov
adc
imul
pusha
int
cmp
fiadds
xchg
pop
xor
into
addps
loope
jno
jmp
dec
add
push
sub
fnstenv
add
inc
into
mov
inc
dec
xor
pop
adc
pop
xor
mov
push
outsb
notb
mov
or
jno
shlb
inc
mov
xrelease
xor
sbb
push
ljmp
dec
in
mov
leave
mov
and
jmp
fwait
subb
stos
out
popf
iret
pop
test
mull
jmp
or
mov
outsl
dec
push
iret
mov
outsb
pop
mov
lcall
inc
sbb
xor
cli
push
shl
fstl
stos
pop
insb
jno
inc
loop
or
fbld
adc
and
jo
je
test
int
inc
bound
in
jge
addr16
mov
ret
xchg
pop
insb
jb
pop
popa
jnp
sbb
test
and
cmp
mov
sub
push
jge
lret
negl
xchg
push
mov
jae
adc
ret
sub
sti
test
repnz
xchg
lcall
jnp
iret
add
popf
enter
mov
xchg
mov
test
shll
popl
pop
mov
mov
push
push
or
xlat
sbb
div
idivl
test
adc
cli
xor
and
rclb
sbb
icebp
popf
and
push
cmc
dec
mov
add
lods
pop
dec
int3
dec
add
dec
data16
cmp
sbb
aaa
outsl
push
in
fdivrl
xchg
pop
imul
jmp
xchg
cmp
push
and
sbb
or
insl
neg
insl
pop
jmp
jmp
pop
pop
fisttpl
mov
aaa
and
xor
mov
push
inc
mov
jp
or
sub
test
xchg
popw
dec
pop
jl
mov
jecxz
jge
inc
sub
pop
and
lods
jmp
lods
sbb
mov
xor
dec
aaa
outsb
ret
xor
xacquire
popf
mov
pop
pop
mov
xchg
fs
int
std
push
pop
or
or
push
aaa
pop
pop
clc
mov
int
inc
test
daa
lcallw
push
and
test
or
hlt
arpl
push
inc
jae
popa
cmp
push
adc
add
pop
leave
dec
mov
mov
loopne
mov
popa
cs
and
jmp
mov
or
nop
adc
jnp
adc
addb
xchg
ror
jns
gs
test
test
aaa
paddw
cmpsl
or
inc
inc
mov
mov
mov
stos
pop
sahf
and
ret
jp
mov
ret
insl
hlt
xchg
mov
and
xor
or
mov
jl
arpl
dec
bound
adc
push
ja
ljmp
lock
pop
xor
les
sub
push
loopne
stos
es
xor
jns
mov
xchg
arpl
movsb
inc
sahf
stos
cmpsl
cmp
fisubrs
ret
dec
das
mov
testb
insb
add
shlb
lods
aad
dec
fidivrl
aas
and
lcall
icebp
mov
hlt
icebp
arpl
push
xlat
or
push
in
nop
push
in
lock
hlt
fs
jnp
adc
popf
jne
xchg
ja
sbb
mov
adc
fsubrp
jmp
adc
sarl
mov
pop
xor
in
xor
mov
imul
mov
inc
out
mov
das
sub
push
mov
pop
adc
mov
shl
cmc
mov
mov
adc
xchg
sub
sub
int
jbe
bound
and
or
lret
dec
lcall
aam
xlat
sub
ss
mov
mov
test
xor
imul
gs
rcrb
or
icebp
insb
and
dec
push
cld
push
dec
dec
pop
jne
mov
add
xchg
out
clc
lret
in
jp
push
xor
push
insl
sarl
arpl
ds
mov
fwait
dec
clc
enter
clc
in
inc
jbe
cmp
jmp
xlat
inc
cwtl
mov
pushw
stos
addl
stos
ljmp
mov
out
popf
jnp
pop
mov
rol
pop
jecxz,pn
stc
mov
xor
jl
sbb
fdivrl
push
subb
test
pop
in
adc
add
ja
addr16
adc
mov
cmp
push
jecxz
jmp
lahf
mov
inc
in
mov
pop
add
sbb
imul
int3
mov
and
add
nop
xchg
or
dec
xor
inc
xchg
cmp
push
inc
cmp
test
scas
push
jle
lds
adc
jns
push
or
sbb
ret
repnz
add
aam
loop
xor
loop
cmpl
fmull
roll
jle
dec
jge
lea
jg
cmpsb
sahf
dec
dec
arpl
and
push
push
push
aas
xor
insb
fmull
push
or
push
outsb
fstpl
arpl
cmp
loope
add
outsb
jp
dec
dec
jae
cmp
int
push
push
fcomps
sbb
jnp
nop
dec
pop
lods
je
sub
mov
bnd
ja
lock
ret
fsubl
arpl
pmullw
addr16
jmp
das
bound
jbe
push
pop
jge
jmp
xor
cmp
orl
mov
pop
aam
into
out
rcll
xchg
mov
cltd
jmp
sub
dec
stos
or
push
xchg
mov
mov
and
xlat
in
xchg
xlat
test
mov
adc
out
call
mov
xchg
sbb
roll
xchg
or
les
add
shl
test
sub
inc
fs
pop
cld
cmp
lods
inc
pop
mov
jbe
jle
repz
les
jno
test
andb
filds
adc
fistpll
leave
lds
aaa
fidivrs
sub
idivl
jge
jae
jae
sbb
inc
std
les
push
xor
mov
imul
lods
cld
push
into
sahf
sbb
cwtl
std
out
pop
popf
aam
adc
mov
push
push
pop
add
cmp
pop
jmp
xchg
inc
xor
push
cmp
int
mov
lods
movsb
lahf
inc
mov
inc
mov
sahf
jge
add
fwait
mov
jl
dec
shrl
ffreep
dec
test
dec
fstl
test
and
mov
arpl
cs
aas
lds
orl
loop
sub
and
fidivrl
in
dec
jo
pop
mov
std
addr16
fiaddl
aam
xlat
adc
mov
ljmp
jb
aad
mov
push
sarl
out
inc
sarl
cmpsb
scas
mov
push
popa
les
ds
out
enter
js
cli
pop
mov
outsb
sar
stos
xor
inc
pushf
test
repz
fadd
jno
or
cmp
lea
push
mov
loope
rorl
jl
cli
dec
scas
sub
adc
inc
xchg
outsb
mov
bnd
inc
push
loop
and
inc
popa
jl
aad
cmp
or
jno
pop
cmp
cli
push
pop
inc
add
pop
sbb
shrb
mov
mov
mov
cmc
and
pop
fcmovne
nop
push
pop
or
pushf
rcrb
jge,pt
imul
aad
mov
cmp
push
mov
adcl
insb
test
jne
bound
or
pop
call
dec
mov
lahf
xor
ljmp
xor
xchg
adc
mov
mov
jle
and
das
or
lock
imul
int3
add
in
xor
dec
sub
pusha
sub
xchg
in
xchg
and
adc
mov
cmp
lds
adc
scas
sbb
inc
test
cmpsb
int
cmp
aas
rorb
mov
push
or
sub
push
popf
lcall
mov
lahf
idivb
enter
cwtl
addr16
fstp
popf
xor
add
adc
sbb
and
lcall
mov
mov
fimuls
jno
test
movsb
inc
test
mov
mov
inc
out
lcall
bound
cwtl
mov
mov
loopne
adc
add
inc
psllw
inc
in
nop
mov
xchg
mov
inc
push
test
sub
das
jge
mov
clc
test
cmp
dec
inc
sub
fwait
int
inc
outsl
aam
push
cmc
sbb
cmc
push
mov
cmp
inc
or
inc
aas
fs
fcoms
mov
inc
sbb
and
movsl
mov
sbb
pusha
pushf
imul
dec
data16
dec
inc
enter
mov
jo
sbb
ja
xor
push
aad
xchg
clc
mov
mov
adc
ret
xchg
mov
mov
mov
push
nop
mov
sub
fbstp
mov
stos
mov
test
inc
mov
ffreep
push
gs
inc
dec
pop
push
ljmp
pop
or
adc
lahf
dec
in
push
push
ljmp
ficoml
ficoms
jae
inc
adc
dec
mov
push
movhps
and
in
inc
insl
clc
mov
int3
push
inc
loope
xchg
cmp
xchg
cmpsb
iret
push
dec
push
test
push
daa
mov
or
aas
outsb
fs
imulb
mov
mov
ret
or
stc
or
cli
shl
imul
cmp
add
ds
loopne
cmp
fchs
jns
jo
mov
lods
les
dec
cmp
push
jl
lods
repnz
imul
xlat
xlat
inc
orw
sbb
mov
cmp
add
add
inc
out
pop
in
and
mov
push
leave
cmp
adc
dec
mov
sarb
mov
lea
xor
sub
push
outsl
insl
hlt
dec
ljmp
or
and
jo
jb
inc
xor
jg
in
mov
pop
call
push
xor
pop
sbb
mov
xchg
jle
gs
imul
xchg
xchg
cltd
sub
test
adc
adc
and
push
jns
lds
gs
pushf
pop
lret
gs
mov
les
add
aad
add
inc
inc
mov
loop
lret
push
xor
xchg
jb
ja
jle
into
pop
lods
mov
fcmovnbe
or
stos
jno
aad
popa
inc
cmpsl
lcall
mov
lcall
addb
in
mov
test
daa
sbb
cmpsl
dec
mov
mov
iret
es
jnp
cli
ds
push
in
mov
pop
mov
nop
push
xor
push
mov
pushf
push
loop
lret
dec
sti
jge
mov
adc
mov
fmul
out
in
pop
add
mov
pop
lea
xchg
sub
cwtl
repz
aaa
push
lcall
xchg
fldenv
push
cmp
xor
pop
je
push
call
pop
daa
mov
testl
sub
int
mov
mov
hlt
cs
jae
loopne
sbb
daa
mov
mov
mov
testb
xchg
cmc
lock
scas
mov
mov
xchg
push
cmpsb
dec
pop
sub
inc
pop
sbb
inc
rcll
and
inc
test
stos
sbb
in
xchg
xchg
cmpl
dec
cwtl
sbb
pusha
int
movsb
js
rclb
insb
sbb
xchg
je
pop
pop
stc
test
mov
xor
out
xor
push
mov
and
mov
insb
pop
arpl
rcrb
stos
outsl
inc
xlat
mov
in
pop
std
jl
out
xchg
mov
xchg
test
sti
mulb
dec
aad
xchg
push
mov
hlt
les
xor
adc
xchg
loope
mov
sbb
pop
pushf
xchg
sbb
push
push
loopne
mov
sbbb
das
popa
jg
daa
adc
xor
jg
dec
bound
popf
scas
cmp
xchg
out
lret
mov
into
scas
lcall
hlt
lea
repz
xorb
dec
stos
jp
roll
and
jnp
bswap
fldt
jno
repz
imul
mov
aaa
xchg
inc
adc
fcmovu
fadd
out
lret
jb
jnp
and
mov
in
cmp
in
lods
int
lahf
pop
les
add
cs
fiadds
adc
jle
test
xlat
bound
es
sbb
inc
mov
in
jge
sbb
inc
or
xchg
sub
mov
mov
int3
sub
sub
je
sbb
jnp
mov
hlt
push
pop
pop
sbb
or
cmc
adc
lret
dec
inc
test
inc
add
sub
insl
or
jno
pop
push
pop
push
mov
inc
ds
pop
pusha
data16
nop
inc
insl
mov
nop
mov
test
jg
lds
pop
loope
imul
xchg
jle
test
push
outsb
or
in
lahf
push
sub
sub
inc
into
enter
aaa
aaa
das
mov
or
test
cmp
push
fcomps
js
inc
xchg
cmp
add
cwtl
je
dec
jmp
repnz
mov
lods
mov
iret
sub
pop
cmp
es
cmovs
pop
insb
loopne
mov
add
push
push
dec
mov
outsl
jne
subl
jb
out
xlat
sbb
lret
xchg
pop
mov
push
test
cmc
cs
mov
divps
mov
mov
pop
adc
or
mov
es
fsts
frstor
mov
fstps
jl
push
xchg
sub
adc
xchg
jge
inc
mov
outsb
shlb
inc
std
mov
lret
push
dec
mov
out
pop
sbb
outsl
pop
shrl
pop
pop
jb
stos
mov
cmp
popl
mov
les
jno
shlb
push
stos
xchg
daa
icebp
dec
or
and
pop
movhlps
push
in
dec
jp
int3
sub
fmuls
fwait
popf
cwtl
xlat
addr16
cmpsl
inc
aaa
stos
popa
std
pop
pop
out
sbb
mov
adc
cmpsl
mov
fldl
lods
jnp
mov
jnp
lret
xor
inc
cmp
shrl
mov
inc
out
xor
lock
ret
cmp
sbb
sub
cmp
mov
ret
daa
divl
movsl
and
daa
in
mov
out
iret
mov
roll
fcomip
lods
xchg
or
and
or
paddb
mov
sti
mov
stc
sub
fiaddl
cmp
shlb
fs
inc
daa
push
rorl
push
xchg
inc
mov
xor
xchg
dec
push
mov
xchg
aad
sub
loope
test
sbb
jns
lods
jo
lds
dec
test
rolb
leave
pushf
test
out
rclb
rclb
dec
adc
test
and
ds
data16
xor
add
xor
push
inc
roll
sti
mov
faddp
inc
push
mov
rcrb
cmpsl
cmp
flds
andb
xor
jo
lods
lret
fcompl
xchg
inc
insb
jae
rorb
cmc
push
jns
enter
mov
dec
jmp
dec
and
sbb
add
xor
dec
mov
and
insl
loope
nop
ss
xorl
xor
xchg
lret
pushf
lods
ljmp
push
popf
fistps
sub
mov
sbb
sbb
lcall
scas
xor
test
movsl
jne
jnp
data16
mov
jb
cli
jle
pop
hlt
or
test
loopne
ror
pop
loop
inc
xchg
mov
sarl
inc
mov
adc
adc
int
cltd
jno
repz
aaa
repnz
loope
repnz
loope
frstor
sbbl
push
pop
jo
sti
imulb
mov
scas
lock
sahf
and
sbb
pop
or
call
les
sahf
cmp
fiaddl
lods
jmp
xor
add
mov
fidivrs
jmp
insl
cmp
lds
hlt
push
lods
jmp
cmp
jecxz
push
sbb
ss
sbb
outsb
ret
out
push
inc
push
rorl
jbe
mov
jnp
movl
dec
cwtl
cmp
sub
sbb
cld
mov
rclb
or
test
insl
pop
fsubs
xchg
and
push
out
pop
stos
out
dec
mov
loopne
mov
xchg
mov
xchg
or
aam
and
cmpsb
cmp
sub
mov
xchg
or
jge
push
rolb
stos
jge
imul
jge
xchg
push
stc
or
lcall
sub
ficoml
lret
cltd
rcrl
in
mov
es
jne
jle
xchg
clc
push
std
scas
inc
push
jg
idivb
sub
test
and
pop
mov
ds
lcall
in
cmp
mov
shll
cs
fimull
stos
ss
sub
dec
movsl
lret
cmp
stos
xor
push
popf
cwtl
data16
dec
sub
jns
cmc
push
out
mov
faddl
sub
idivw
jmp
sti
and
sbb
sub
mov
loopne
subl
mov
adc
or
enter
mov
sub
lods
or
cwtl
xlat
jbe
pop
add
cmpsb
cmc
or
popl
outsb
shr
xchg
loop
mov
pop
mov
ret
repz
std
dec
inc
test
add
mov
pop
jge
xchg
in
arpl
sbb
xchg
xchg
and
dec
lahf
push
xchg
xor
cmp
nop
lods
ss
sub
rcrb
and
or
lods
insb
pushf
ret
mov
cmp
movsb
mov
repz
mov
hlt
jg
insl
pusha
int
and
aad
pop
or
popa
lods
push
lea
rcr
inc
pop
jae
lea
arpl
xor
lods
pop
and
jae
jmp
pop
jno
xor
pop
mov
xchg
scas
loop
movsl
fs
in
imul
mov
aas
roll
in
push
sbb
leave
ret
adc
decl
pop
jns
aas
mov
pusha
and
fmuls
lods
ds
mov
insl
inc
mov
and
fldenv
pop
mov
pop
mulb
stos
aam
sub
in
sahf
test
repnz
addl
add
mov
sub
int3
and
sbbb
pushf
and
aad
insb
pop
adc
pop
jle
fwait
pop
int
pusha
addl
mov
cld
jo
push
jb
fstps
mov
jne
or
or
dec
push
mov
xchg
test
xor
scas
xor
loopne
stc
and
add
inc
lret
cld
mov
jo
add
into
mov
push
jle
xchg
or
enter
inc
popf
hlt
mov
and
pushf
ja
sub
sbb
jb
clc
push
adc
inc
fadds
aas
mov
cmp
dec
xchg
lods
daa
adc
sbb
pop
insl
rcrl
push
xchg
neg
lret
arpl
push
mov
popa
xor
int3
or
test
shr
loop
sahf
inc
icebp
cmp
mov
mov
movsl
push
jp
bound
scas
adc
xor
lret
testb
daa
cmp
cmp
xor
lahf
fsubr
and
xor
dec
mov
icebp
out
adc
mov
push
fmull
pop
fimull
imul
lret
ret
flds
or
mov
add
fdivp
mov
stc
inc
sub
sbb
push
pop
sbb
nop
add
lretw
xchg
out
mov
rolb
adc
pop
and
ret
scas
mov
leave
jle
in
cld
in
cwtl
sbb
cld
push
mov
and
mov
mov
mov
lock
sahf
int3
lahf
aas
in
push
ss
xchg
push
xor
pop
int
sub
push
insb
mov
stc
mov
scas
fisttps
daa
orb
enter
inc
call
mov
jnp
shlb
clc
in
into
or
bswap
shrl
inc
aad
stc
gs
jno
idivb
insb
int
xchg
cmp
sub
xor
imul
push
pushw
xchg
adc
sbb
add
cwtl
xchg
leave
call
data16
sbb
cmpsb
inc
jns
sbb
mov
push
int3
sbb
iret
add
fmul
aad
ss
adc
sub
daa
xor
dec
mov
xchg
aam
pop
ja
mov
lods
es
outsl
mov
in
idiv
add
mov
inc
in
test
divl
insb
adc
pop
mov
push
pop
flds
mov
jge
call
lock
fadds
push
sub
xchg
jbe
nop
jne
or
mov
push
lcall
int
mov
scas
std
into
sbbb
jg
roll
adc
xchg
push
xor
xlat
jnp
rcrb
es
push
mov
xor
jp
movsb
cltd
jns
stc
mov
sbb
ficomps
pop
sbb
pop
mov
inc
sbb
jg
aad
pushf
ds
inc
xchg
jg
fcompl
mov
inc
and
outsl
mov
mov
adcb
mov
mov
fisttpll
in
mov
push
adc
xchg
test
cmp
aas
lea
or
push
push
cmp
inc
mov
jl
xchg
add
std
fdivs
loopne
xlat
jp
mov
mov
fldl
xor
enter
andnps
movsl
mov
int
ljmp
sub
pop
adc
fisubl
sbb
xlat
xor
mov
enter
movsb
push
pop
and
xor
xor
mov
aas
out
mov
popf
out
adc
enter
in
push
testb
mov
lahf
jnp
insl
int3
cli
xor
jecxz
int
icebp
fists
pop
rcrb
inc
pop
ret
jnp
xchg
push
fidivs
nop
stos
mov
psubsb
sub
mov
xlat
bound
pop
mov
or
js
cs
test
scas
mov
lods
clc
dec
xor
out
imul
in
int3
and
sbb
test
mov
or
jle
xchg
xor
or
push
xchg
jne
mov
lahf
mov
jnp
stos
iret
xor
dec
fcmovnbe
testl
push
inc
je
rcll
test
fcompl
lods
iret
sbb
sub
add
cmp
adc
leave
jo
cli
mov
call
mov
repz
or
and
jle
pushf
fadds
jl
push
pop
gs
mov
sti
sbb
pop
inc
sub
sbb
jmp
dec
xchg
mov
sbbl
xchg
nop
xchg
popf
fldenv
pop
int3
dec
push
repz
xor
imul
mov
out
mov
push
and
adcl
xchg
cld
mov
pusha
push
xchg
mov
rorb
mov
adc
aam
push
stc
lods
out
dec
mov
mov
mov
je
lea
mov
jne
outsl
sbb
cmp
push
push
lret
fdivl
adc
mov
jecxz
or
push
xor
sarl
push
sub
adc
repnz
mov
out
push
int
add
dec
inc
xlat
push
sub
cmp
mov
push
sarl
or
push
push
shl
lret
in
push
xchg
jnp
imul
sub
pushf
rcrb
call
xor
jns
cs
lds
les
pop
xlat
call
xor
jecxz
cmp
adc
hlt
gs
jge
call
fwait
out
jo
test
lods
das
cmpsl
inc
dec
adc
or
mov
mov
scas
cmpsl
xchg
push
xchg
push
dec
out
mov
mov
xchg
mulb
sbb
imul
adc
push
rcrl
in
ja
xchg
xlat
jbe
or
mov
inc
adc
push
inc
scas
jp
aaa
cltd
aaa
test
xor
pop
outsl
subb
jg
orl
push
lods
xchg
xor
push
outsl
xchg
cwtl
shl
rol
push
inc
mov
cmpsb
mul
rorb
jb
jp
or
and
jp
xlat
loope
push
stos
sarl
outsb
cmpsl
es
shl
dec
sbb
sub
push
in
add
lea
push
dec
lock
iret
mov
ljmp
cmp
sub
fwait
rclb
add
xor
int3
push
mov
out
sub
fcoml
lock
loopne
jbe
sub
movsb
fwait
add
sbb
pop
cmpsl
les
pop
daa
mov
mov
pop
pushf
outsb
cmp
enter
xor
in
inc
outsb
push
fucomp
mov
out
mov
push
mov
dec
dec
fs
das
lea
stos
out
fincstp
and
scas
sbb
jg
loopne
dec
sti
and
stos
inc
dec
jne
or
push
leave
outsb
scas
call
dec
lahf
je
out
imul
sub
mov
adc
xorl
dec
out
adc
sbb
loopne
out
fiaddl
outsl
data16
xor
push
cmp
push
es
fisttpll
addb
faddp
xor
jo
cmpsl
popa
xor
jp
js
mov
test
adc
jne
mov
push
iret
or
nop
jno
loop
sub
mov
pop
jae
push
scas
push
inc
ss
dec
pop
adc
sar
movsb
test
cli
jle
cld
pop
aad
sbb
push
mov
sbb
mov
cmp
rcl
xchg
scas
fsubrs
lds
sti
loop
xor
sub
fmuls
and
and
fistps
xchg
jg
shrb
mov
bound
nop
in
repz
int
and
in
dec
dec
adc
mov
popa
imul
divl
subl
mov
push
mov
adc
mov
enter
repz
lock
ljmp
repnz
shl
rorb
mov
add
stc
mov
test
pop
std
daa
mov
addl
bound
iret
jge
test
popa
mov
ret
imul
add
leave
xchg
pop
mov
sbb
xor
xor
sub
xor
imul
dec
push
repz
jp
je
fsubrl
jmp
shrl
jmp
lock
repz
addl
sbb
sub
sbb
icebp
mov
arpl
pop
icebp
push
xchg
mov
lds
pop
popa
cmp
xlat
mov
xor
xchg
mov
pop
sbb
stos
push
xor
pop
cmc
fbstp
pop
sahf
aad
sub
and
inc
push
cld
push
lret
jmp
dec
scas
xor
push
in
mov
cmpsb
push
pop
gs
xchg
add
pop
addr16
cld
sbb
repnz
fldenv
inc
and
add
jp
lcall
in
int
bound
rorl
or
mov
xor
xchg
leave
push
inc
adc
jge
aas
jg
xor
jmp
dec
es
pop
stos
sbb
inc
ss
pop
push
out
aaa
popa
in
filds
pop
push
cmp
jno
sarl
push
lret
xor
loope
cmpsl
jo
je
sub
repz
test
cmp
dec
scas
loope
mov
and
call
inc
add
repz
cmp
cmp
sbb
cmp
adc
and
daa
loope
mov
hlt
xor
push
jo
lret
movlhps
out
add
cltd
mov
xorb
clc
test
sahf
push
std
sub
ja
xor
test
jg
outsb
out
mov
mov
popa
dec
insb
push
push
mov
iret
xor
arpl
jns
push
stos
xchg
ljmp
add
push
pop
inc
mov
ss
negb
xchg
movb
test
mov
dec
xchg
cs
mov
jl
push
call
test
insl
mov
mov
sbb
jbe
sbb
mov
and
pop
sub
loop
rclb
push
mov
daa
rcll
scas
ljmp
lds
mov
push
fxtract
fadd
adc
dec
pop
inc
or
clc
std
outsb
inc
inc
mov
cwtl
cwtl
icebp
ret
lret
pop
push
sbb
loopne
mov
sbb
pop
add
jb
or
in
and
dec
add
cld
sbb
adc
inc
sub
xor
sahf
insb
push
jnp
mulb
scas
sub
rol
test
dec
xchg
ds
sahf
shl
imul
das
jmp
mov
cmp
mov
das
push
cmp
stos
dec
xchg
adc
push
push
lahf
sbb
fsubs
lcall
arpl
mov
clc
adc
pop
out
aaa
push
insl
pop
movsb
lods
lods
test
jnp
sbb
jno
es
call
mov
fstps
loop
mov
cmp
sub
dec
jp
push
mov
loop
insl
daa
push
mov
push
popf
mov
and
loope
cmc
sti
xor
add
jle
loope
leave
shlb
imul
mov
sbb
fs
ret
sbb
arpl
nop
int
jbe
adc
cmp
repnz
into
push
mov
call
int3
cmp
outsl
cmp
adc
mov
or
adc
sbb
fstpt
mov
leave
cmp
outsl
das
cmp
mov
cmpb
jge
xorl
add
mov
fdivs
xor
pop
pop
cld
hlt
dec
ret
ret
add
add
dec
sbb
inc
call
in
enter
out
push
fldl
jle
das
add
cmp
jecxz
movsl
in
push
xlat
fbstp
fisubs
push
cld
std
repnz
push
mov
pusha
adc
mov
iret
mov
mov
ja
push
and
adc
cmc
xchg
jle
cltd
mov
jne
xor
sub
pusha
push
aam
jle
aam
aad
and
push
jl
cs
mov
xchg
xor
popf
inc
pusha
decb
mov
lret
mov
cmp
int3
shr
lret
push
or
and
in
nop
adc
stos
fwait
jne
sub
inc
pusha
hlt
sub
ss
adc
push
test
jns
jbe
push
mov
lock
sbb
adc
cmp
jnp
pushl
fs
xchg
sub
or
pop
stos
and
stc
push
enter
jne
in
ss
jns
pop
sti
outsb
and
add
cld
mov
loop
sbb
xor
lds
rol
pop
shll
lods
adc
jnp
cmpsl
cmp
fcmovnbe
out
jle
ss
dec
cmp
test
shrl
cltd
jecxz
xor
push
adc
sbb
cmp
in
inc
je
push
or
sahf
sbb
and
int3
or
loopne
pop
dec
xchg
movsb
shr
cmc
decl
sahf
call
fistpl
mov
cli
in
mov
dec
int
and
push
sbb
inc
pushf
cmp
repz
cld
sbb
pusha
das
push
mov
jnp
adc
inc
push
push
push
mov
mov
mov
in
dec
shll
andb
mov
push
das
and
inc
inc
and
push
dec
pusha
and
adc
fiaddl
dec
fisttpll
pop
mov
ficoms
cmp
out
out
adc
sbb
aaa
add
rol
mov
jp
xchg
adc
adc
negb
test
push
or
aad
aad
lret
adc
outsl
cmp
ret
ljmp
rolb
int3
cmpsl
testb
out
popa
lcall
push
mov
mov
cmp
adc
and
xor
cli
mov
adc
jmp
cltd
xchg
pop
jl
xor
add
cltd
cmp
push
dec
mov
clc
push
mov
mov
enter
or
inc
inc
fldl
sbb
js
xchg
pop
cmp
aaa
shrb
ja
sbb
cmovp
dec
add
push
jp
push
jno
mov
mov
das
insb
pushf
adc
dec
sbb
setl
mov
add
sbb
xor
and
inc
mov
ret
jp
mov
sub
pop
jp
cmpsb
pop
js
jne
sarb
add
cmp
adc
add
shll
loop
repnz
inc
data16
jo
jbe
xor
jo
pcmpeqd
jg
cs
cmp
mov
call
add
cli
inc
mov
sub
jae
lds
pushf
pusha
out
mov
mov
push
fnstcw
pop
mov
dec
in
jle
int
sub
ljmp
xor
fwait
xor
sahf
add
mov
and
dec
gs
jo
mov
bound
test
pop
push
jae
xchg
lea
jecxz
mov
addr16
add
sub
push
or
and
push
sbb
dec
inc
xlat
xor
pushf
push
mov
in
out
int3
in
movsl
jmp
pop
lods
iret
iret
stc
flds
xchg
cmp
jmp
cltd
loop
stos
push
mov
push
enter
dec
test
cwtl
out
in
je
jbe
sub
lds
cs
js
jmp
adc
mov
and
popf
arpl
shrl
mov
mov
sub
lcall
outsl
cld
jle
std
pop
sbb
arpl
or
jp
sbb
std
insb
nop
gs
and
sub
adc
insl
xor
and
lea
push
repnz
adc
jae
pop
xor
xor
mov
or
sbb
pop
cmc
insl
or
cltd
lds
push
cmc
cmp
je
sbb
inc
pushf
arpl
dec
pop
fidivrs
mov
ret
call
cltd
xor
xchg
ljmp
clc
loop
iret
pushf
xor
or
adc
sahf
repz
sbb
push
shrl
fwait
sbb
xchg
adc
mov
jno
or
push
xor
push
sbb
mull
add
out
pop
addr16
repnz
adc
xchg
lock
not
ret
imul
adc
sub
mov
push
cltd
pushf
pop
bound
es
inc
clc
insl
and
shr
mov
fstpl
outsl
dec
lcall
cmp
fisttpl
adc
push
aad
pop
int
es
xchg
in
movsl
fadds
roll
sbb
data16
mov
sub
pop
subb
push
xor
sbb
outsb
ljmp
lcall
mov
fidivrs
mov
cmpsb
ret
shll
outsl
xchg
sub
jne
xor
pop
cvttps2pi
pop
outsb
frstpm(287
jle
je
inc
adc
fnsave
inc
sbb
xchg
aas
mov
in
jo
stos
mov
xor
sarb
fisubs
push
sub
out
dec
mov
scas
sub
dec
lcall
les
pop
hlt
insb
notl
cltd
xchg
mov
lods
jbe
adc
hlt
bound
mov
xchg
pop
clc
ljmp
dec
add
pop
dec
mov
fldt
gs
dec
cmp
xchg
les
fistps
push
inc
test
push
je
sub
les
mov
cmp
jns
pusha
cs
aad
lret
repnz
dec
cmpsl
push
mov
jg
aas
pop
lock
inc
lods
xchg
push
rorl
lret
push
mov
or
push
jp
xor
shlb
add
cmp
push
pop
sbb
dec
shlb
and
lods
rorl
mov
and
push
repz
hlt
int
in
push
cmp
pop
ss
int3
repnz
out
dec
lds
outsl
imul
insb
repnz
rclb
push
inc
gs
adc
push
sbb
in
mov
inc
mov
sbb
test
loope
out
sbb
sbb
in
hlt
out
lret
sub
push
mov
dec
arpl
mov
daa
clc
mov
ret
dec
sub
lea
out
pop
jle
mov
lods
jbe
testb
bswap
cmp
test
pusha
into
mov
mov
and
push
into
jl
frstor
lcall
xor
push
or
push
push
cmp
icebp
in
mov
cltd
inc
add
jmp
add
dec
das
jecxz
ret
fadds
dec
gs
jnp
xchg
sbb
pop
jl
pop
aas
mov
add
enter
adc
jl
lock
popf
imul
movsb
xor
pop
insb
jno
movsl
inc
pop
jge
inc
jno
sub
sub
rcrl
popf
enter
xchg
sbbb
mov
xchg
pusha
enter
dec
add
push
fistpl
hlt
repnz
mov
ss
jle
arpl
cld
lret
xacquire
pop
in
inc
push
shl
mov
fisttps
pushf
and
enter
sub
pop
lock
repz
push
adc
mov
fnstsw
inc
orb
in
int3
mov
stos
jecxz
pop
mov
dec
arpl
dec
repz
or
dec
inc
sbb
xchg
pushf
or
das
test
test
mov
popf
imul
int3
insl
and
movsl
jge
xor
add
xchg
sbb
jg
inc
dec
ret
gs
sbb
test
jns
dec
adcl
fsub
fstpl
loope
dec
arpl
add
push
pop
push
mov
insb
stos
inc
jb
jno
ss
cld
int
cmp
cmp
push
push
push
jge
aaa
inc
push
pop
mov
gs
mov
das
jbe
aaa
push
cmp
cld
pop
divb
inc
jmp
push
xlat
jnp
jne
div
or
pop
jge
jno
clc
or
adc
loop
cmp
outsl
inc
popf
fistpl
repz
mov
imul
and
ss
jmp
pop
jmp
mov
dec
pop
int3
adc
cli
cwtl
push
ja
leave
inc
sbb
adc
dec
xor
stc
sahf
inc
sub
shlb
pop
and
sub
leave
cmp
fdivl
cmp
xlat
mov
insb
test
mov
test
clc
mov
mov
or
mov
mov
mov
mov
and
cs
stos
sub
pop
loop
fdivs
pop
and
dec
dec
lahf
test
pop
mov
dec
jbe
cmpsb
cmp
insl
std
jnp
incb
pop
xchg
or
rorb
out
ds
test
bound
das
adc
out
push
sbb
ror
out
inc
pop
test
push
nop
mov
adc
mov
stos
clts
les
mov
lds
jae
mov
fcoms
je
iret
dec
mov
test
add
pushf
sarb
cmpsb
je
mov
jnp
outsl
pop
cmp
loopne
ficoml
jb
popa
xor
leave
in
fadd
inc
ja
loope
or
jb
cmp
int
and
push
jecxz
xchg
add
jno
lret
pushf
and
sub
test
rclb
fldt
cmp
push
movsl
dec
jge
mov
xor
hlt
xchg
setl
mov
test
inc
loope
out
jb
popf
adc
into
push
xchg
out
xor
cmp
fistpll
fisubrs
xchg
movsl
es
cmc
lds
cmpsl
or
jmp
lahf
out
sub
pmullw
inc
dec
add
ret
imul
xor
mov
mov
cmpsl
xchg
push
sub
mov
jle
js
and
push
std
jge
shrb
test
and
outsl
pop
mov
dec
std
mov
daa
insl
loop
mov
ja
lret
ljmp
aad
cld
ja
pop
outsb
movsb
mov
lcall
mov
enter
fmuls
dec
fisubs
iret
inc
sbb
aad
xchg
jns
adc
lock
gs
mov
lock
movsb
mov
cmpsl
je
movsb
cmc
cmpsb
xchg
into
pop
add
je
and
lahf
pushl
lods
rol
sub
cmp
addl
les
xchg
xlat
sbbb
xchg
outsb
sub
je
xchg
fdivs
movsb
jae
sbb
mov
xorl
adc
lret
or
test
push
out
repnz
aaa
jnp
arpl
pop
clc
or
inc
push
adc
pop
arpl
enter
pop
push
out
pop
das
adc
icebp
popf
insl
stc
cld
sbb
mov
inc
lret
xchg
insb
mov
arpl
inc
mov
shrb
xchg
xchg
mov
push
cld
mov
fisttpll
mov
mov
shrl
lock
into
and
sub
xchg
mov
or
loop
pop
mov
xor
dec
cmp
loope
movsl
add
add
xchg
pushf
lahf
push
add
push
loope
xor
dec
cmpsl
mov
clc
jecxz
lea
push
xor
mov
sub
aad
call
mov
in
repnz
dec
fstp
fdivrl
jbe
in
or
std
out
test
lret
dec
lret
hlt
stos
mov
xchg
mov
or
or
dec
sub
xchg
mull
sub
lahf
std
mov
test
push
add
ljmp
cmpsl
xchg
sbb
mov
adc
mov
pop
mov
inc
out
iret
repz
stos
jne
jge
sbb
push
lods
pop
mov
sub
cmc
push
fdivrl
sbb
std
outsb
pop
outsl
push
xor
xchg
push
xchg
outsl
shll
sbb
loop
mov
in
jmp
mov
push
mov
jecxz
mov
in
mov
loopne
adc
mov
pop
shr
outsb
scas
popf
sarb
nop
sub
adc
xor
mov
and
inc
jp
push
lods
test
mov
or
add
aaa
cmp
mov
push
sbb
aam
enter
jmp
movsl
fidivs
idivl
jb
mov
int3
xor
cmp
push
jp
aas
xorb
in
mov
in
push
clc
outsb
pop
test
pusha
push
sub
inc
sub
fmulp
xchg
push
add
sub
adc
out
in
and
shr
mov
sub
sahf
loope
xchg
call
out
mov
mov
push
or
adc
sbb
xchg
mov
and
sub
inc
sbbb
mov
mov
ljmp
leave
ss
cltd
imul
nop
adc
inc
jecxz
out
xor
add
jp
sti
repnz
xlat
jo
mov
pop
jnp
addl
inc
mov
data16
int3
hlt
jg
hlt
lret
sti
mov
notb
aaa
scas
pop
fcom
pop
rcrl
dec
mov
ret
mov
xor
and
inc
push
add
imul
fidivrl
mov
xchg
xchg
add
sub
mov
fwait
xlat
ret
adc
xchg
pushl
xorb
jp
imul
jno
test
aam
push
push
cld
jnp
fs
int3
dec
lea
mov
add
pusha
xchg
add
sub
push
add
fwait
inc
and
mov
data16
dec
cmp
sub
arpl
jb
fcmove
sbb
and
pop
pop
aaa
sub
mov
sbb
mov
mov
cmp
or
into
lods
jmp
push
sbb
xchg
push
fildll
cmp
push
setae
cmpsb
scas
mov
fs
and
icebp
cmp
dec
push
mov
cmp
xor
cltd
push
arpl
insb
mov
js
sub
ret
aam
outsl
cmpsl
stc
xchg
ret
xchg
stos
jle
xchg
push
add
orl
call
ret
xor
dec
and
xor
sbb
mov
dec
adc
push
and
and
iret
fstpl
fstp
cmpsl
xor
idivl
das
sbb
lds
inc
push
ds
jl
pop
mov
adc
hlt
jnp
addb
cli
pop
inc
ja
mov
or
test
cmp
mov
imul
add
mov
rclb
sbb
or
cwtl
pop
fstpl
shr
mov
fmulp
sbb
adc
hlt
orl
pop
fxch
popf
mov
mov
lret
inc
ljmp
nop
arpl
push
imul
mov
aas
add
jo
fcompl
aam
popa
data16
pop
push
jno
sub
mov
or
adc
mov
xchg
pop
and
fldenv
mov
lret
mov
lret
xor
mov
cld
lret
stos
and
sbb
movsl
divl
sti
mov
push
lret
fnstenv
jmp
aaa
fcmovnb
lods
lea
rclb
jp
jl
or
fucomip
daa
fcomps
xor
xor
push
cmpsl
enter
jecxz
ljmp
popf
lcall
cmp
dec
cmpsl
rorl
repz
sbb
das
pop
test
adc
dec
push
pop
inc
flds
jge
cmp
jae
or
shlb
adc
loope
scas
and
cmp
lock
jecxz
push
pushf
mov
inc
or
mov
jns
jbe
fs
out
daa
xchg
xchg
add
sbb
sti
push
outsl
lods
cmp
xchg
sbb
inc
rcrl
dec
or
cli
add
add
jle
jnp
and
aaa
repnz
jno
adc
add
jle
std
ror
in
lea
decb
push
mov
je
cmpsb
adc
sbb
push
js
clc
fistpl
add
fisubl
movsb
in
loopne
sar
xor
xchg
aam
repz
mov
push
shlb
int3
sbb
mov
push
test
pop
repz
cmp
inc
cmp
jns
mov
mov
push
sbb
jne
loope
pop
test
push
jb
sbb
xor
insl
pushf
gs
pop
std
xchg
addl
out
xchg
repz
div
pop
mov
and
stos
dec
jle
jmp
dec
xchg
cmpsl
sub
inc
rcrb
pushf
xorb
dec
sub
push
and
es
xchg
jg
xlat
adc
push
js
nop
fs
or
leave
inc
movsl
aam
xchg
adc
arpl
and
clc
test
dec
jg
jp
push
pusha
inc
and
sbb
loope
pop
int3
xor
movsb
imul
cld
out
push
jns
mov
test
idivb
in
pop
push
scas
ficoms
xchg
push
fdivrs
xchg
mov
jg
push
jae
dec
mov
adc
mov
subb
pop
mov
xor
lahf
into
jae
xchg
ljmp
cmpsl
cmpsl
sub
fs
jp
call
arpl
xchg
xchg
scas
mov
cmp
and
ret
ret
adc
shrb
inc
sar
in
adc
out
pop
and
popf
in
jns
repnz
test
push
xchg
pop
sbb
std
dec
inc
mov
fistpll
aad
std
xchg
xor
jb
divl
dec
in
mov
add
xor
ss
push
xor
rorb
jae
shll
add
sbb
and
out
xchg
dec
inc
push
push
fldcw
ret
sarb
push
das
sub
shrb
mov
aam
fisubs
mov
mov
repnz
push
mov
insb
icebp
das
pop
add
and
sub
out
outsl
enter
and
ret
dec
rep
out
cwtl
sub
inc
jmp
stc
cmpsb
xor
jle
sub
cmp
lods
mov
push
lds
outsl
jg
lcall
jecxz
dec
dec
push
mov
or
ret
imul
das
out
mov
inc
lfs
sbb
jmp
test
outsb
dec
arpl
ja
rcr
scas
sub
insb
jns
xchg
cmc
cmc
icebp
add
mov
out
outsb
or
mov
push
pop
pop
arpl
cmpsl
rol
fldcw
dec
lahf
int3
mov
xchg
or
jmp
jp
lods
inc
xchg
stos
sar
inc
adc
adc
cmpsb
stos
fstpl
jg
outsb
mov
mov
into
sbb
negb
stc
sbb
loopne
mov
pusha
enter
jmp
push
dec
loope
dec
in
jmp
out
fldt
cmc
sub
adc
imul
sub
cld
mov
jl
divl
add
dec
xor
sub
inc
pop
cmp
idivb
outsl
or
mov
add
mov
add
sbb
cmp
lret
xchg
inc
pop
xor
loopne
out
adc
mov
add
movsl
push
test
xor
mov
aam
dec
jne
or
stos
lds
cmp
cmp
icebp
mov
mov
mov
add
mov
shlb
jb
xlat
sub
pop
ret
addr16
scas
mov
xchg
movsb
iret
addr16
mov
lods
lahf
pop
enter
xchg
mov
outsl
mov
sub
inc
mov
jbe
push
pop
xor
add
xchg
sti
or
pop
push
cld
inc
and
je
imul
inc
mov
add
add
xor
fiaddl
fisubs
mov
in
pop
push
dec
mov
shrl
cltd
in
sbb
mov
iret
add
cmp
inc
xchg
add
inc
int3
lahf
and
cltd
into
outsl
in
adc
fbstp
pop
add
mov
daa
dec
pop
xor
mov
addr16
pop
hlt
jo
popf
mov
or
mov
inc
push
int
stos
fistpl
andl
out
inc
mov
jno
lret
dec
jecxz
movsl
and
adc
stos
icebp
xchg
lcall
xchg
int
dec
divb
adc
movb
ret
or
sar
fistpll
in
jo
push
es
jb
shll
adc
xlat
fsub
push
cwtl
mov
mov
scas
pop
push
iret
lods
das
mov
push
pop
cmpsl
subl
adc
fldcw
outsb
cli
mov
jle
outsb
out
js
fiaddl
popf
inc
lods
shl
ss
push
jl
lret
sarl
nop
and
sbb
sub
pop
cmp
fidivs
pop
fwait
mov
fwait
xchg
in
mov
lret
ja
pushf
mov
pushf
inc
inc
adc
push
lock
popf
imul
sub
pop
mov
hlt
aad
imul
test
dec
cmp
das
ja
adc
enter
inc
mov
out
roll
add
pop
pop
daa
into
in
mov
inc
jb
das
adc
loopne
iret
pop
xchg
fsubrl
push
movsb
inc
push
pusha
mov
or
sub
nop
mov
arpl
int
pop
sbb
aad
lock
adc
clc
cmpsb
pop
jne
sti
jg
mov
xor
mov
roll
mov
jno
lea
xlat
test
mov
cmc
daa
inc
xchg
loopne
fbld
loopne
mov
loopne
add
and
out
pop
push
stos
jae
loopne
mov
call
cmp
fxsave
jg
test
pop
and
ficomps
or
sub
pop
push
xlat
push
pusha
xor
test
cmp
aam
cmpb
leave
xor
rep
pop
popf
or
imul
das
jae
mov
out
insl
sub
pop
out
cmc
test
xchg
ljmp
jg
test
cmp
cmp
pop
push
fistpll
push
or
out
mov
nop
sub
cmp
ret
jl
imull
ljmp
sbb
xor
sbb
cs
scas
out
mov
test
data16
mov
fwait
add
flds
push
pop
test
js
pop
les
mov
push
popa
dec
mov
xor
mov
hlt
scas
es
hlt
inc
test
fdivr
jl
push
mov
mov
je
cmp
jecxz
jg
pop
out
adc
mov
cmpsb
dec
jno
cmpsl
xor
mov
and
das
cmpsb
mov
jo
and
sahf
mov
lret
fcomps
in
xlat
sub
int3
cmp
out
mov
mov
mov
push
lea
push
lds
in
push
lahf
or
repnz
xor
fstpt
addb
mov
push
mov
pop
xchg
xor
hlt
cmp
cmc
jae
inc
pop
sub
sub
scas
popf
pop
or
jge
add
call
enter
push
ret
lods
inc
fists
mov
bound
scas
adc
dec
lods
mov
cmp
mov
cld
call
fldl
imulb
aam
arpl
push
xor
pop
xor
jg
fs
cmp
fwait
enter
notb
cmp
adc
cmpsl
and
ljmp
in
leave
jecxz
jmp
ret
xor
jnp
xchg
mov
or
mov
sub
arpl
sbb
xchg
enter
sarb
lock
ljmp
movsl
daa
call
outsb
mov
adc
imul
dec
push
and
jns
inc
mov
pop
mov
sub
call
rcll
sub
rclb
icebp
subb
pop
push
loopne
or
loopne
jmp
test
and
push
mov
jb
pop
repz
out
xchg
pop
pop
fildl
add
arpl
sub
adc
jmp
nop
dec
int
loop
pop
mov
jnp
pop
cmp
int
maskmovq
aad
mov
mov
cmp
pop
loop
xchg
or
xor
rorl
add
mov
loope
add
stc
imul
outsl
in
xlat
dec
pop
and
sbb
cmp
lds
scas
push
adc
cs
pop
cld
lods
inc
mov
aad
ss
lahf
inc
sub
subb
mov
push
iret
or
mov
adc
repz
dec
jo
mov
movsb
nop
xchg
movsl
mov
mov
pop
mov
cmp
outsb
mov
outsl
ja
ret
std
xchg
push
sbb
leave
int3
je
cltd
mov
mov
lret
adc
sarl
rolb
hlt
test
fwait
inc
test
scas
int3
rclb
dec
sbb
adc
stos
pop
adc
jb
popa
out
inc
dec
xor
es
jp
ds
xchg
jp
adc
mov
dec
into
inc
xchg
cmp
mov
cmovs
enter
imul
lahf
ja
dec
rcrb
ror
repz
mov
hlt
negl
rcrb
mov
pusha
hlt
adc
xlat
notb
xchg
lock
fwait
xor
push
das
jno
sub
call
mov
loopne
xor
stos
mov
fs
mov
sti
sbbb
enter
cmp
dec
lds
xor
nop
lret
xchg
ljmp
mov
cmp
cmp
inc
nop
popf
and
bound
dec
mov
add
addl
inc
xchg
mov
inc
insl
mov
cltd
push
sbb
jmp
dec
icebp
aaa
mov
fwait
add
lahf
inc
pop
sti
js
lock
jns
mov
lods
xlat
and
shrb
mov
in
xchg
jae
andb
aad
shll
aas
inc
push
add
fs
iret
fmulp
xchg
dec
pop
and
sti
cmp
pop
scas
sbb
cmc
xchg
rsqrtps
insb
outsb
lret
xchg
subl
sbb
daa
fwait
leave
push
fst
mov
roll
sub
mov
shlb
mov
mov
jbe
push
fcmovb
cmc
mov
sbb
cmc
stos
imul
cmc
pusha
or
into
pop
push
mov
in
stc
mov
pop
adc
jnp
inc
fnsave
call
dec
cmp
pop
mov
jge
stc
insb
sub
dec
sub
outsb
dec
xor
xor
or
test
call
ror
push
mov
add
adc
jl
cli
cmp
loopne
notb
cmp
fldt
and
jg
lods
sbb
pop
subb
and
cltd
mov
push
lods
sub
rclb
xchg
cmp
fiaddl
cmp
adc
add
pop
sub
adc
mov
mull
in
call
negl
or
rolb
inc
sub
jmp
dec
add
stos
jns
ja
sbbb
push
inc
jno
out
add
std
repz
jl
rolb
xor
push
pop
mov
push
cmp
inc
into
mov
sahf
cli
stos
or
loop
sbb
test
and
nop
jns
ret
scas
in
push
inc
dec
sub
pop
push
jg
cmpl
jge
ss
hlt
pop
inc
inc
pop
xchg
mov
in
xor
icebp
xchg
sbb
sti
sbb
aad
mov
lods
test
mov
int
pop
mov
popf
je
jbe
cmp
mov
xchg
into
xor
xchg
pop
ds
mov
sub
push
xchg
sub
add
pop
out
ds
pop
pop
lahf
cs
hlt
jno
movsb
test
xchg
aas
rorl
arpl
lods
dec
push
imul
pop
test
test
icebp
pop
mov
lods
push
sub
test
sub
mov
push
es
testb
jmp
lcall
mov
std
mov
cli
sbb
mov
repnz
ja
cmc
enter
sub
xchg
repnz
outsb
xchg
loope
jl
clc
pop
lea
mov
sbb
call
pop
push
ror
mov
xor
pop
xchg
stos
std
inc
mov
in
ficoml
jnp
mov
mov
mov
mov
push
stc
mov
jbe
rcll
mov
call
mov
aaa
jl
stos
mov
jge
in
mov
ja
pop
lret
mov
push
cmp
dec
or
push
sbb
sbb
jecxz
add
mov
bound
jbe
int3
and
push
sahf
call
clc
lock
mov
xchg
cmc
push
in
dec
into
sbb
xorb
jns
testl
popa
push
dec
and
mov
mov
div
or
inc
lahf
loopne
add
or
out
es
int
push
push
hlt
inc
inc
in
insl
adc
push
mov
in
xchg
movsb
cmp
and
jge
jp
in
cltd
mov
shl
sahf
cmp
jmp
or
imul
jno
icebp
xchg
and
mov
sub
mov
add
out
sbb
arpl
in
add
int3
mov
movb
fimuls
lret
inc
adc
mov
jge
in
cli
cmp
shl
mov
jmp
out
jbe
subl
movsl
mov
arpl
lods
data16
pushw
jne
shll
ljmp
and
sub
aas
jns
and
xlat
jae
aam
je
pop
movsl
sbb
lods
dec
jle
pusha
dec
mov
mov
test
in
dec
shlb
cmp
push
cltd
mov
push
sbb
rolb
mov
cltd
jns
std
push
and
cmp
sub
movsb
fbstp
jbe
push
into
add
test
inc
sarl
inc
es
pop
add
cmpsl
lea
sti
in
fstps
mov
sub
cmc
lock
xchg
cli
imul
jbe
out
sub
jmp
in
cs
inc
scas
jmp
add
ffreep
push
and
ljmp
aam
sbb
mov
pop
int
push
loopne
hlt
andl
roll
dec
mov
es
dec
jns
in
adcl
outsb
cwtl
jmp
xchg
push
adc
cltd
xchg
jg
loopne
imul
add
jecxz
adc
pop
add
jge
push
mov
outsb
pop
sub
add
test
push
sub
filds
into
push
mov
sub
xor
rclb
movsl
dec
pushf
test
idivl
inc
and
or
add
sbb
movsl
popa
mov
mov
xlat
mov
sti
and
icebp
sbb
jl
adc
sti
into
pop
or
js
ret
cmc
pop
or
jno
lret
lcall
int
ja
das
sbb
and
add
insl
or
leave
jl
xchg
cs
int
inc
xor
jmp
dec
push
jl
in
push
mov
xchg
inc
out
daa
lret
jl
ds
xchg
and
subl
xor
fists
lret
inc
pop
sub
cmp
test
je
movsb
lds
cwtl
sbb
jmp
cwtl
mov
cmpsl
in
icebp
mov
inc
sub
je
add
sub
scas
test
adc
roll
outsb
pop
std
sahf
mov
sub
jbe
leave
rcl
stos
mov
cmp
pop
idivl
push
pushf
enter
xchg
loope
inc
cmc
pop
mov
xchg
mov
sti
gs
pop
xchg
sbbl
xor
xchg
jle
sahf
pop
push
xchg
jl
cltd
inc
or
xor
mov
movsb
mov
jle
scas
es
xor
std
test
add
dec
popa
jge
jne
ficoms
daa
lret
fidivrs
movsb
sub
sub
dec
paddw
inc
inc
sbb
push
aad
dec
test
or
fistpl
nop
dec
cmpsb
dec
lods
cmp
ficoml
adc
xchg
sti
mov
inc
rclb
aam
xor
push
int3
mov
lahf
push
dec
jmp
es
add
mov
je
xchg
add
fs
sbb
pop
adc
adc
jo
andl
cmp
mov
pop
or
push
push
shll
dec
sub
cli
pop
mov
stos
push
imull
xchg
xorl
xchg
lock
rorl
loop
mov
pop
pop
arpl
jl
shrl
mov
or
xor
and
jl
add
xor
cmp
pop
sub
orl
call
sbb
pop
lret
jo
sahf
jbe
iret
sub
sub
dec
outsl
cwtl
push
sub
aad
or
mov
sub
mov
bound
push
pop
xchg
inc
pop
xchg
mov
sarb
mov
out
mov
add
cmp
lds
add
lahf
rol
jmp
xchg
add
jg
xchg
sbb
mov
dec
les
in
cmp
pop
stos
int3
cmpb
lea
dec
or
fistpl
roll
test
fldcw
loop
pop
push
lods
or
rcrb
lret
repz
pop
mov
xor
mov
mov
and
icebp
idivl
pusha
or
shrl
bound
jmp
sbb
int
and
cmpsl
popf
lea
xor
add
test
xchg
xor
inc
fcomps
hlt
or
inc
jno
xlat
js
es
add
arpl
lods
xor
je
mov
mov
outsb
adc
and
mov
xchg
fstpt
lret
xor
cld
dec
add
xor
movsl
mov
lahf
int
mov
add
out
sti
pushf
pop
in
inc
and
popf
jg
xor
mov
clc
inc
push
and
xchg
push
inc
stos
pop
arpl
jl
pop
adc
mov
xorb
in
into
test
pop
xchg
cmpsl
movsb
jmp
mov
call
pop
fldlg2
inc
loop
jmp
arpl
cmp
mov
cmc
inc
mov
into
repnz
xorb
fisubs
mov
add
cmp
mov
fisubs
mov
cmp
gs
and
mov
mov
mov
movb
jge
ret
fs
fcompl
add
test
repnz
movsl
es
es
push
rcll
das
sub
push
addr16
pop
and
roll
pop
repz
pop
scas
mov
sti
mov
cmp
sbb
in
out
add
jl
dec
dec
xchg
xchg
fidivl
loop
div
mulps
mov
call
sub
popf
jne
test
repz
scas
sub
int3
cmp
mov
or
push
mov
jl
pop
xchg
fstpl
outsl
pop
xor
xor
sbb
push
popa
sub
mov
stc
sub
mov
jmp
pusha
cmp
adc
push
aam
stc
jle
pop
adc
ds
test
call
test
mov
lds
mov
mov
incl
test
jae
pop
cmp
pop
mov
jbe
dec
fidivrs
pop
lret
mov
lret
xchg
out
dec
push
jecxz
push
popa
ret
outsb
test
dec
jno
pop
lret
imul
mov
daa
enter
orb
adc
cwtl
dec
xchg
jnp
mov
idivl
mov
cwtl
mov
jmp
sub
loopne
jbe
in
pop
and
xchg
addr16
cmp
adc
loop
ds
pop
pop
dec
sbb
xchg
int3
je
scas
sbb
ficomps
test
fs
sti
adc
push
test
enter
sbb
int3
sbb
cmp
xchg
push
fisttps
pop
mov
into
shrb
mov
sbb
xor
jbe
xchg
and
or
inc
mov
push
mov
rcrl
repnz
and
push
push
jge
aas
xchg
sbb
mov
cmp
xor
add
cwtl
mov
stc
pop
in
cltd
or
push
lods
cwtl
cli
scas
sub
std
lock
lods
mov
testl
repnz
mov
xor
lret
loop
ja
dec
mov
jecxz
lret
jl
mov
pop
pop
cmp
sub
mov
daa
add
adc
imul
loope
pop
subl
xlat
or
xchg
stos
xor
loope
mov
cmp
lods
sti
cmp
lods
notl
add
mov
xor
stc
pop
mov
int3
cmpsb
inc
mov
dec
adc
or
mov
sub
and
enter
sub
mov
sahf
roll
into
mov
in
lahf
cmp
pop
popa
jb
inc
int3
sahf
subb
pop
repnz
orl
and
cmp
daa
jnp
fldt
push
sbbl
cmp
jle
mov
pop
sbb
xor
add
jle
push
and
rcll
add
jno
dec
mov
addr16
outsb
sbb
fcomps
sub
decl
hlt
sub
jno
ss
je
mov
mov
dec
push
xchg
xor
pop
sub
xor
cmp
and
jnp
insb
sub
mov
pop
stos
mov
cmp
mov
mov
jnp
push
add
sbb
fdivr
or
pusha
nop
icebp
in
pushf
insb
imul
aad
arpl
add
or
idivb
pop
jne
and
out
pop
adc
repnz
inc
dec
sarb
aaa
shll
pusha
ss
cmp
insb
stos
xchg
pop
lds
movsb
aad
outsb
add
outsb
nop
jbe
into
sbb
or
sub
mov
outsb
pop
cld
test
sub
sbb
pushf
pop
mov
je
rol
out
icebp
push
lods
lods
rclb
out
out
enter
sub
fst
lds
cmp
jns
cmc
jno
lds
scas
rol
mov
sbb
stos
jge
sub
lahf
adc
dec
jmp
call
xor
and
pop
mov
rorl
adc
loop
int3
test
dec
js
xchg
pop
imul
repz
mov
scas
sub
enter
jnp
loop
mov
mov
xor
adc
scas
lcall
xchg
imul
xchg
ss
std
pop
or
xchg
xchg
xchg
hlt
out
mov
movsb
dec
je
and
imul
js
aas
push
mov
push
std
cmpl
xchg
daa
leave
pop
jbe
xchg
sbb
pop
pop
xchg
pop
stc
push
cli
cmp
ljmp
xor
jle
xchg
add
js
cltd
and
push
fs
mov
jo
or
call
lods
adc
cmp
push
test
xor
fsts
aad
popl
sub
lahf
push
mov
scas
lock
inc
cmp
adc
jmp
rcrl
push
out
push
in
fwait
std
or
pop
stos
mov
add
jecxz
dec
xor
aad
mov
leave
imul
push
or
ret
mov
rolb
in
loope
orl
adc
xor
jmp
lahf
cmpsl
lret
fcmovb
sub
and
cs
outsb
scas
lret
fmull
mov
cmp
insl
push
std
jmp
jns
jbe
or
xchg
aam
push
imul
fstps
mov
push
lea
call
and
jp
mov
sbb
movsl
cs
jg
stos
xor
mov
cmp
aad
les
sahf
imul
sbb
and
jae
popa
mov
movsb
minps
pop
rolb
mov
sbb
xchg
and
xchg
jecxz
mov
or
call
nop
fdivs
lret
mov
cmpsb
push
xchg
jge
loope
inc
cmp
xchg
mov
cmp
adc
out
in
repnz
xor
cmpb
cwtl
js
xor
int3
insb
es
push
add
cmp
rcl
cs
out
pop
popf
cld
insb
push
and
test
jb
and
iret
jb
mov
xchg
loopne
in
popa
fldt
push
adc
shr
inc
into
jge
test
sbb
adc
adc
mov
mov
flds
stos
in
ds
jnp
cmp
outsl
arpl
fsubrs
jns
fldt
dec
jbe
xchg
mov
in
jp
pop
xor
sub
adc
testl
mov
cmp
aas
and
xor
test
mov
mov
scas
scas
ret
xchg
outsl
mov
dec
cmc
lret
into
xor
stos
shlb
int
adc
popf
xlat
mov
ja
gs
mov
je
jo
daa
dec
out
mov
lret
sub
push
loopne
aam
sub
cmc
scas
daa
fwait
aad
sbbb
xor
in
ret
out
lahf
push
or
cmp
call
jb
xor
jo
push
cmpsl
inc
jg
jb
icebp
loopne
les
mov
inc
jns
jmp
sub
icebp
mov
inc
sub
push
cmp
sbb
cld
out
mov
jbe
mov
ds
pop
jno
pusha
sbb
sub
mulb
mov
test
pop
mov
pushw
stos
pushf
ss
fisubrs
mov
cmp
lea
test
xchg
xorb
cmp
pusha
lcall
or
popf
sub
fistpll
jl
mov
cld
xor
dec
mov
jp
push
aaa
scas
int
lods
adc
jle
inc
sti
adc
and
cmp
in
out
sub
pushf
cltd
adc
and
mov
mov
jo
lcall
mov
das
cmp
sub
lods
cmp
mov
add
jae
add
xor
je
dec
or
push
psubd
xchg
pushf
and
mov
mov
aas
adc
fcomip
fs
lahf
aas
lds
popa
or
xchg
xchg
dec
leave
pop
push
inc
mov
in
lds
popf
popf
loop
enter
cmp
insb
push
sub
xor
insb
es
aam
sbb
mov
inc
pop
jnp
pop
sbb
cld
mov
lods
xor
xor
xchg
mov
pushf
iret
sub
repnz
mov
test
adc
xor
jle
push
xchg
pop
outsl
ss
cmpsl
jno
imul
repnz
or
sbb
push
push
fmull
es
int3
test
jne
fwait
or
repnz
jle
push
loop
xor
sbb
fadds
pop
pop
jne
lods
xor
dec
in
inc
xor
test
xchg
dec
push
mov
and
add
loopne
out
insb
cltd
sub
fsubr
adc
cmp
jle
jge
mov
mov
fisubrl
jmpw
or
and
jae
pop
out
test
sarb
notb
cmp
outsl
xchg
and
leave
mov
cmpsl
in
cmpsb
add
stc
mov
sti
ljmp
adc
imul
inc
mov
jle
mov
sbb
push
push
add
and
std
cmc
jno
jae
add
fstl
mov
or
adc
fsubr
mov
add
gs
or
and
aaa
movsl
push
test
mov
stos
inc
imul
sbb
add
cs
out
xor
fnsave
xor
mov
jecxz
cs
push
scas
popa
jmp
mov
add
dec
repz
outsl
mov
sub
bound
inc
test
xor
or
scas
or
iret
jle
dec
bound
add
push
xor
lds
jmp
rorl
cmpsb
push
push
mov
xchg
loopne
pop
cmp
jnp
cmc
stc
in
adc
push
pop
js
pop
adc
in
cld
cmp
push
adc
shll
xchg
sbb
add
push
pop
mov
sbb
call
sub
adc
push
jl
fcmovne
xchg
imul
in
je
mov
lret
mov
lahf
into
mov
jge
dec
cld
mov
mov
cwtl
fisubrl
xor
mov
mov
bound
push
int3
pushf
lods
push
dec
mov
fmul
mov
bound
repz
cmp
xorl
cwtl
outsl
jle
mov
pusha
mov
sub
loope
faddl
fbld
push
mov
dec
rcrl
add
mov
add
movsl
sti
or
mov
clc
js
pop
imul
dec
lret
mov
test
test
divl
lods
fs
in
jb
add
ja
sub
lock
xchg
and
mov
aas
jbe
add
ss
sbbl
xor
js
jo
sub
or
push
out
aaa
out
dec
and
xor
in
mov
xor
mov
call
mov
cmp
mov
mov
testl
pop
clc
mov
jmp
add
scas
adc
pusha
xchg
nop
adc
jge
and
add
orl
int3
jo
sub
jb
shlb
out
scas
fiadds
dec
mov
fwait
xor
scas
xchg
js
add
scas
jge
mov
jbe
jge
xchg
push
mov
add
xor
mov
adc
dec
fs
test
out
push
cmp
repz
pop
push
sbb
sbb
sbb
jmp
jle
push
mov
dec
pop
sub
and
cmp
pop
lds
cmpsb
out
cmpsl
cltd
xchg
mov
outsb
stos
push
pusha
into
fldcw
shrb
repnz
pop
push
dec
inc
mov
dec
jecxz
arpl
dec
jno
stc
ja
inc
xchg
push
pushf
loop
pop
outsb
imul
jae
jo
fsubs
jp
mov
sub
inc
ficoms
test
lret
std
and
data16
pop
data16
fwait
and
aad
das
rolb
cltd
jbe
mov
dec
dec
dec
andb
jno
adc
inc
xchg
jmp
sbb
arpl
hlt
sub
jo
fisubrs
cmp
push
fwait
pop
pop
aaa
jns
and
mov
adc
mov
stc
sub
jb
mov
jo
inc
add
cli
das
add
stos
cmp
and
jnp
push
cwtd
dec
fldcw
xchg
cmp
daa
xor
xchg
and
cmp
dec
cld
pop
dec
jle
push
jge
jecxz
jmp
jmp
push
xchg
mov
push
fdivrs
mov
lahf
push
mov
fwait
jg
mov
fstps
push
sarl
inc
ret
and
sahf
jle
cmc
xor
dec
and
mov
and
ret
pusha
popf
cmp
adc
xor
xchg
dec
push
adc
push
jbe
orl
scas
aaa
cmp
and
ss
cmp
or
or
cmp
cmp
push
popa
xchg
mov
mov
movsl
add
cmp
insl
adc
call
iret
xchg
or
pop
es
imul
lea
adc
vphadddq
xchg
je
pop
cld
push
cmpsb
push
outsl
or
or
rclb
lods
cwtl
and
mov
xor
fstl
inc
xor
sahf
xchg
fwait
and
arpl
std
stos
mov
mov
lea
sbb
mov
xchg
cmp
jmp
test
lret
nop
add
sub
jo
adc
push
jecxz
loopne
scas
jge
mov
pop
mov
jmp
in
scas
sbb
sar
clc
enter
inc
fnsave
jne
cld
dec
sahf
cmpsb
push
lods
rorl
addb
out
dec
loop
mov
shlb
popf
jp
fwait
push
or
push
and
popa
cmp
xor
orl
mov
cmp
in
and
jne
push
cmp
pop
pushf
notb
sahf
inc
cmp
add
xchg
rolb
out
test
push
push
pop
xchg
test
jmp
or
aas
fs
sub
aas
dec
loop
div
insb
dec
pop
sbb
shlb
or
in
mov
repz
je,pn
or
mov
int
repnz
jne,pt
in
adc
jne
and
clc
or
fld
mov
mov
out
out
jp
sbb
add
mov
movl
movsl
mov
xor
movsb
or
dec
jo
enter
mov
out
and
sub
out
and
sar
xor
ljmp
mov
nop
hlt
and
je
inc
in
iret
pop
frstor
cmpsl
sbb
lea
ficoms
and
jne
in
fbld
cmpsb
sti
ss
sub
mov
xchg
adc
sub
xor
rcl
push
stc
bnd
leave
cmp
rolb
fistpl
pushf
sub
cs
mov
sub
jb
shlb
stos
pop
fsub
rcrb
pop
pop
xlat
fstp
or
pop
ror
push
xchg
icebp
push
ret
fldl
scas
add
sub
and
xor
mov
pop
xor
mov
jp
enter
pusha
insb
mov
inc
inc
mov
out
pushf
fnstcw
out
jbe
leave
xor
add
mov
adc
clc
adc
iret
xchg
orl
jno
and
sub
cmp
push
dec
scas
push
test
or
mov
add
or
inc
cwtl
jl
imul
pop
jno,pt
adc
sub
jb
movsb
jnp
ret
cwtl
aad
fidivrl
lahf
fsubs
aaa
rcll
test
scas
addr16
fst
ffree
mov
test
ret
xor
adc
aas
cmpsl
fdivl
cwtl
dec
push
mov
call
or
cli
xor
lahf
out
push
xor
scas
inc
mov
xlat
mov
in
mov
pusha
cmpsb
aaa
mov
pop
jecxz
add
lods
pop
fisubs
mov
dec
cmp
decb
sahf
gs
test
mov
and
inc
push
lds
sub
xchg
mov
mov
adc
fs
repz
dec
lret
mov
sbb
es
clc
je
frstor
cs
test
pusha
dec
mov
mov
popa
push
adc
loopne
enter
pop
repnz
inc
sub
mov
add
mov
lcall
iret
shlb
std
jecxz
cld
adc
push
cmp
adc
inc
cltd
mov
addb
sub
aam
adc
xchg
shrb
pop
std
daa
adc
and
fstl
clc
jecxz
cmp
xchg
sub
xor
pop
pop
les
dec
xchg
sbb
sahf
inc
fptan
je
push
sbb
add
jmp
bound
pop
scas
test
add
xchg
int3
lea
dec
js
mov
fcomi
add
mov
mov
sub
or
cmp
fs
mov
loope
cltd
test
fmuls
cli
sub
pop
push
or
cmp
xchg
xchg
mov
lods
jb
scas
insb
dec
xor
and
loop
dec
cwtl
lock
dec
cwtd
aam
int3
or
xchg
clc
xchg
ss
and
push
mov
movsl
xchg
and
test
mov
fcompl
xchg
mov
cmp
mov
sbb
mov
lahf
cmp
cld
xchg
pop
cmp
sbb
imul
jl
xchg
gs
pushf
jp
mov
arpl
cld
xchg
pop
aam
jnp
aam
dec
jecxz
mov
cmpsl
movsb
arpl
mov
js
insb
add
xchg
jg
out
jbe
arpl
mov
shll
ja
xor
xchg
and
cmp
jne
roll
cmp
iret
pusha
pop
jge
les
mov
fmul
or
bound
dec
adc
sub
mov
xorb
pop
sbb
iret
jae
xor
dec
and
outsb
jmp
loop
xchg
scas
inc
movsl
mov
or
sti
aas
or
push
rorb
pop
xor
scas
xor
mov
jecxz
xlat
jl
cmp
scas
popa
in
fisttpll
xor
xchg
fstpt
insb
sub
popa
lods
ljmp
xchg
push
push
test
or
sbb
movsl
adcb
and
ds
das
pop
jae
dec
push
xor
push
cmpl
add
jb
fnsave
inc
sahf
roll
inc
adcl
cmp
push
loopne
cmp
sti
cmp
mov
in
int3
pop
push
push
out
and
lcall
ret
jo
xchg
mov
leave
push
ja
xor
ja
mov
push
adc
dec
sub
pushf
xorb
add
xor
jns
lahf
dec
or
jmp
pop
sub
mov
dec
rolb
add
jno
pop
movsl
mov
dec
shl
and
lods
inc
inc
push
push
sbb
sbb
loop
mov
or
mov
stos
jecxz
shrb
fwait
js
scas
addr16
test
stos
test
and
or
lret
pusha
mov
and
sub
adc
pop
sbb
in
adc
repz
dec
jmp
dec
test
inc
dec
mov
mov
sar
popa
mov
ss
push
jg
andl
push
jmp
loopne
and
pop
aad
and
int
add
cmp
pop
lcall
out
ret
push
mov
cmp
pop
mov
js
mov
enter
int
pushw
push
push
pop
add
xchg
inc
sub
jnp
mov
cs
sbb
sub
arpl
cwtl
lret
popf
cmp
addr16
dec
sbb
loop
fcomi
cwtl
sbb
insl
xor
int
push
test
add
jnp
push
aam
or
addr16
and
and
mov
xchg
mov
xchg
ret
fisubrs
dec
push
sub
hlt
roll
or
popf
cltd
jmp
and
jo
out
jg
push
push
adc
rorl
xor
aad
or
xor
or
fadd
imul
sti
lret
lcall
xchg
xchg
insb
mov
daa
cs
sbb
mov
and
mov
mov
ret
inc
dec
das
ret
inc
ljmp
outsl
push
cmp
je
jp
inc
cli
push
minps
mov
pop
fdivs
icebp
dec
push
adc
mov
pushf
mov
dec
xor
in
jmp
mov
push
fbld
addr16
xchg
inc
les
or
rclb
movsb
sbb
jno
mov
mov
pop
aad
sahf
adc
or
cltd
test
xchg
sbb
icebp
scas
enter
pop
adc
xor
mov
mov
fnstenv
faddl
icebp
bound
sub
pop
bound
or
jecxz
or
mov
jno
push
rcrl
outsl
mov
dec
jmp
mov
dec
sti
loope
out
repz
push
mov
in
xchg
aad
rep
mov
mov
jge
xor
scas
leave
mov
cmpsl
cwtl
inc
js
test
mov
cld
pop
lds
shrb
adc
push
int3
adc
int3
mov
ret
dec
jo
jle
and
fisubrl
mov
cmpsb
mov
or
pusha
mov
add
pushf
xchg
aam
pop
mov
push
jb
int3
js
mov
fldcw
aam
and
and
mov
enter
jns
inc
push
mov
xor
mull
or
pop
loopew
jb
sbb
insb
pop
or
xor
mull
ds
push
jb
movsl
jb
add
lea
cmp
inc
repz
and
add
aas
sbb
test
mov
jno
cmp
dec
or
mov
out
adc
js
xor
push
xchg
push
js
lea
lahf
xchg
gs
mov
xor
pop
jns
jg
and
ret
add
loope
lret
inc
mov
mov
test
cmp
xor
enter
test
loopne
lret
jmp
lahf
leave
out
cmpsb
popf
add
jecxz
dec
sbbb
fisttps
adc
aas
daa
sub
sub
jb
push
stos
rcl
push
push
sbb
mov
mov
sarl
mov
and
sub
and
push
pop
loop
and
fidivl
cltd
fcompl
fidivrs
rol
rolb
xor
dec
dec
fsub
mov
mov
pop
icebp
sbb
orb
mov
cmp
sbb
leave
loopne
pop
xchg
aam
repz
pop
dec
out
xchg
inc
sub
dec
aaa
or
cli
fwait
loopne
add
outsb
outsb
fwait
daa
xor
and
pop
leave
push
inc
xchg
sub
ret
test
push
inc
pusha
jl
adc
mov
add
jle
xor
in
mov
mov
daa
shrl
rol
and
sbb
ret
mov
xchg
negl
lds
inc
cmpsb
pop
jno
pusha
imul
test
fs
add
mov
js
stc
mov
in
nop
mov
loopne
mov
stos
jl
int3
int3
cmp
test
mov
daa
mov
dec
xlat
dec
sub
out
dec
jbe
jl
pusha
faddl
jp
push
jnp
test
inc
sub
adc
imul
xor
popl
or
push
sbb
push
pop
sbb
in
out
insl
or
clc
lret
jb
jg
lahf
pop
sub
test
add
lds
std
push
sbb
dec
repnz
fidivrs
sti
sarb
mov
and
scas
aad
jmp
inc
das
xor
test
sti
jbe
cmp
push
lds
movsl
sbbl
adc
jae
popa
and
inc
cmp
dec
mov
cmpsl
int3
pop
pop
ret
mov
dec
outsl
mov
sbb
outsb
or
ret
xchg
sbb
mov
add
dec
cmc
data16
cmc
add
dec
in
and
cmp
cmp
xchg
mov
ja
jmp
fisttpll
xchg
insb
or
and
xchg
inc
stc
daa
mov
movsb
mov
sbb
fldt
fwait
cld
sbb
shll
push
imul
out
cmp
ds
sbb
mov
dec
mov
dec
pop
jg
sbb
ret
fisttpl
mov
cmp
lods
push
inc
sbb
hlt
push
jle
inc
xor
pop
clc
xchg
pop
cmp
cmp
lock
mov
lahf
mov
xchg
fimuls
pushf
inc
jmp
jns
test
adc
dec
sub
mull
dec
mov
gs
cmp
mov
add
test
dec
movsb
pop
jnp
pop
or
xchg
add
dec
out
jecxz
aas
dec
loopne
xor
and
sbb
imul
cmp
sub
sbb
mov
jmp
lock
xchg
ret
dec
shll
adc
mov
sbb
fwait
jle
or
incl
sbb
aaa
pusha
shr
out
mov
push
mov
pop
clc
sbb
dec
sbb
sub
stc
loopne
or
lock
sbb
mov
addb
pop
jb
loopne
sbb
andl
js
mov
in
lcall
sub
incb
xchg
dec
test
sub
jle
dec
call
daa
inc
popa
mov
sub
dec
fadds
mov
sbbb
jge
mov
fucom
imul
inc
mov
sbb
pop
xor
inc
cld
dec
sbb
xor
pushf
adc
cmp
push
mov
jb
jns
and
push
sub
pop
inc
jno
xchg
xor
pop
mov
fnstsw
imul
dec
and
dec
mov
mov
dec
or
aaa
orl
jle
add
test
sub
mov
stos
call
dec
adc
sbb
mov
xchg
out
mov
pop
std
insb
cmpl
and
fdivs
fisubrs
and
in
xchg
mov
jo
sbb
cmp
jecxz
sbb
mov
ret
or
ss
imul
jnp
adc
push
sbb
dec
sbb
xor
aas
test
cmpsb
leave
pop
and
test
in
mov
jae,pt
arpl
je
out
adc
mov
adc
sbb
sub
inc
push
pop
mov
dec
push
into
fld
rorl
and
sti
movsl
dec
lea
icebp
xchg
xchg
dec
cmp
bswap
add
addb
jno
shlb
xchg
shr
pop
movsb
push
jecxz
cmp
pop
rcll
xor
inc
and
dec
les
xlat
mov
rcll
push
out
fldt
mov
popa
movsb
out
xchg
js
dec
cmp
dec
push
dec
mov
adc
loop
mov
inc
inc
test
icebp
xor
cmp
sbb
push
cld
xchg
xor
jmp
jne
lcall
sbb
cmp
pop
jbe
imul
orl
shrl
loopne
aam
call
jnp
mov
inc
inc
cs
lret
mov
lds
sub
subl
xor
or
mov
jmp
jnp
into
pop
lods
sti
dec
rcrl
dec
or
cmp
repnz
mov
xor
outsl
icebp
dec
adc
fs
and
in
mov
testb
push
jb
sti
dec
adc
inc
addr16
cmp
adcb
push
and
pusha
cld
inc
ret
inc
mov
leave
mov
subb
clc
cmp
fwait
mov
pop
push
out
jns
mov
mov
jns
mov
rcr
dec
cmp
das
jnp
inc
sbb
stc
aam
mul
int
add
movsb
in
lahf
subb
or
inc
lods
test
cmp
aaa
icebp
lods
xchg
aas
jp
or
inc
xchg
cmpsl
or
jne
xor
jno
cmp
xchg
xor
dec
and
or
xor
popa
xchg
and
xor
enter
ds
and
cmp
jo
loop
repz
sub
mov
call
push
lret
sbb
cmpsl
aam
sub
jb
les
mov
lds
adcl
mov
mov
mov
mov
mov
add
in
jns
mov
mov
out
cli
insl
xchg
das
dec
adc
shl
shl
cmp
push
push
dec
mov
jge
xchg
lods
fcmove
leave
int3
popf
xor
dec
pop
push
mov
adc
dec
or
clc
outsl
and
cmc
or
cmpsl
pusha
add
aas
insl
push
adc
add
mull
mov
fmuls
pop
je
sub
fimuls
iret
aam
clc
xor
push
aaa
sub
mov
push
inc
mov
push
fwait
sbb
sbb
lds
xchg
jmp
xor
xchg
pop
mov
rcll
adc
ja
xchg
ret
push
adc
loop
lods
dec
push
rcrb
dec
jle
out
out
sub
insl
fwait
stc
xor
push
mov
xchg
mov
and
lds
mov
or
pop
jnp
mov
sti
leave
jl
push
das
in
jne
or
aaa
jno
inc
fmul
movsl
mov
cmpsb
mov
repnz
sbb
xchg
cmp
push
add
xchg
jp
mov
std
js
jecxz
rcll
icebp
cmpsl
movsl
or
mov
cmpsl
imul
insb
xor
rolb
rolb
cmp
jmp
test
pusha
movsb
inc
mov
scas
push
and
xchg
fidivl
mov
or
mov
pop
lret
jbe
outsl
scas
push
push
xchg
ljmp
enter
jae
sub
stc
adc
or
stos
fcmovb
lea
shlb
hlt
out
lsl
sbb
outsl
int3
xchg
or
jmp
out
fs
dec
repz
dec
add
cmp
adc
xchg
xor
xchg
lock
stos
rorl
nop
lods
leave
mov
adc
pop
xor
cmc
inc
cmpb
jns
jne
lock
and
cld
fildl
psubq
jae
les
lods
or
sub
pop
mov
xchg
jo
sub
add
xlat
and
xor
imul
dec
cmp
dec
mov
sar
fcmovne
xor
xchg
or
sub
int
sub
aam
ret
mov
sub
aad
imull
inc
stos
fildll
or
cltd
mov
sub
cli
mov
dec
enter
cmpsb
lods
mov
out
xor
fsubrs
in
lcall
push
xlat
inc
jmp
inc
fdivr
push
jb
loop
imul
mulb
jne
mov
test
add
mov
xchg
adc
roll
jecxz
lock
xlat
push
rcl
scas
rorl
or
mov
insb
mov
dec
or
or
push
ficoms
inc
and
inc
fcmovbe
and
xchg
sahf
jbe
mov
imul
pushl
or
xor
test
popf
mov
movsb
in
insb
mov
in
outsl
cmp
mov
mov
insb
xor
xchg
cs
xchg
nop
cmpsl
daa
ret
lods
leave
out
cwtl
hlt
out
dec
xchg
xlat
lret
adc
mov
push
xchg
mov
aas
push
sbb
xchg
loop
xor
int3
adc
dec
dec
mov
push
cmpsl
lds
sbb
fsts
sub
push
cmp
mov
jbe
mov
ret
aas
xchg
xor
aam
lea
mov
mov
cmpsl
cmp
inc
xchg
int
imulb
cmc
jp
mov
push
aaa
aad
or
mov
or
push
dec
stc
shrl
out
xor
inc
stos
insl
cli
shr
jle
jno
icebp
dec
add
lret
pop
and
pop
add
into
jns
jp
jmp
inc
or
pop
arpl
inc
jae
mov
inc
cmpsb
lcall
clc
aam
pextrw
pop
sti
shrb
jnp
xor
pop
mov
sub
dec
out
out
and
jecxz
imul
sar
or
cmpb
mov
sti
fldl
xor
inc
inc
sbb
or
sahf
and
out
inc
push
rolb
lcall
mov
popf
pop
pop
sti
repnz
ja
cmpsl
push
test
pushf
pop
xchg
cmpl
daa
jmp
stos
shr
xchg
lds
std
push
rcrb
cld
mov
repnz
pop
aad
add
fs
inc
xor
pop
mov
call
aad
inc
adc
sbb
pop
mov
fmull
pop
mov
movsl
mov
pusha
pop
in
leave
popa
sub
imul
cli
sbb
inc
sbbb
bts
sub
pop
into
hlt
popf
test
das
mov
xor
pop
inc
aas
sarl
pop
inc
rolb
fidivrl
jl
pop
jl
ja
gs
in
dec
and
dec
adc
call
mov
inc
push
pop
js
inc
xchg
jmp
push
inc
adc
push
mov
jp
adc
lahf
mov
cmp
cltd
xor
xor
dec
and
ljmp
or
shll
out
dec
jmp
or
clc
push
loope
fs
dec
out
stos
add
dec
popa
or
enter
xchg
repnz
jne
icebp
add
jne
mov
pop
lds
out
pop
ja
fstl
es
fwait
scas
cld
pop
test
test
pusha
mov
push
scas
gs
stos
and
mov
imul
push
stos
fildl
loopne
fimull
stc
xor
cmp
inc
mov
loope
stos
in
cwtl
pop
subl
adc
pop
or
mov
inc
sti
mov
and
fwait
sbb
and
adc
adc
mov
out
jg
cs
lcall
fsubrs
fdivl
aad
movsl
xchg
push
or
cmp
inc
inc
push
push
fildl
xchg
adc
inc
bound
sub
fwait
orl
dec
xchg
mov
adc
xchg
cmp
adc
mov
ds
inc
adc
add
int3
or
dec
loopne
adc
scas
dec
stos
sbb
add
rol
sub
fs
fisubrl
test
and
push
xlat
sahf
push
psubusb
mov
push
fildll
and
and
lock
fcomip
mov
mov
shrl
cmp
push
ja
cmp
scas
mov
xchg
xchg
or
dec
jae
aad
ss
cmc
push
call
sti
sbb
stc
clc
cmp
fs
movsl
dec
push
loop
dec
cmp
push
xchg
lcall
mov
and
sbb
lret
mov
das
jbe
sbb
cwtl
ds
pop
pop
aad
aas
jl
idiv
insb
inc
movsl
test
push
in
jnp
push
inc
inc
cmp
add
mov
dec
push
movb
and
and
mov
popf
pop
mov
jnp
out
xchg
jge
jmp
inc
pushf
adc
fdivrs
adc
xchg
and
out
sbb
and
xor
xchg
les
cmp
push
xor
in
mov
xlat
fnsave
cmp
adcb
inc
cmpl
pop
push
iret
push
into
xchg
and
mov
aas
popf
sarl
push
pop
aaa
popa
insb
test
pop
test
pop
int
stos
jae
flds
inc
orb
out
rclb
shrl
fs
mov
dec
mov
in
dec
cli
repz
and
iret
sar
xor
push
ret
xchg
fsubs
push
mov
adc
call
pop
pop
mov
loop
mov
es
out
aad
clc
sahf
imul
adc
cmpsb
repz
sbb
ja
pop
jo
test
decw
call
aas
insl
xor
gs
mov
ficoms
leave
pop
add
inc
jge
dec
and
out
scas
rcrl
push
repz
in
fimull
push
cmpsl
movsl
adc
dec
outsb
int3
mov
testl
push
jne
lea
adc
pop
dec
xchg
movsl
or
lcall
imul
mov
daa
insb
cltd
roll
dec
and
outsl
cmpsb
inc
popl
dec
xor
sub
adc
aas
fiadds
prefetcht1
mov
loope
ret
in
jne
pop
xor
flds
adc
shr
and
ss
jp
jmp
jne
xor
push
fwait
mov
ja
xchg
mov
test
adc
repz
fbld
jns
xor
inc
cmpsb
insb
push
scas
btcl
shl
inc
xor
xchg
not
cmc
sbb
sbb
int3
push
adc
inc
out
repz
jno
loope
loope
fcomps
js
push
pop
dec
sub
or
loopne
mov
out
pop
sub
cmpsb
xchg
push
dec
test
sub
adc
lahf
lret
pop
xlat
mov
mov
test
sub
push
out
in
dec
ss
in
fsubs
or
xchg
xor
inc
enter
inc
lods
lahf
inc
mov
hlt
das
enter
movsb
push
notl
pop
clc
xchg
pop
das
add
mov
std
push
loope
inc
rolb
bound
ja
cmp
test
jo
negb
adc
jbe
sbb
or
mov
mov
jnp
jae
lret
or
rorb
iret
cli
jnp
push
fnstcw
es
ljmp
mov
pusha
pop
inc
mov
into
sti
sti
inc
fcmovu
loop
fsubr
aaa
inc
mov
or
jmp
ret
inc
call
jle
sar
lret
push
mov
arpl
in
into
icebp
mov
flds
out
mov
imul
loopne
adc
mov
xor
adc
mov
mov
xor
movsl
insl
lock
mov
stos
and
dec
or
int3
mov
jecxz
incb
rclb
mov
xor
push
add
jns
adc
stc
cmpsb
inc
xchg
loope
and
and
pop
dec
std
push
inc
sbb
mov
cmp
inc
dec
xchg
cmp
call
adc
rcl
outsl
mov
push
ja
fcom
xchg
jo
in
push
mov
push
outsb
pop
add
rol
adc
shl
xlat
xlat
push
imul
dec
mov
jnp
sbb
iret
xchg
ja
dec
adc
jmp
aam
xchg
in
adcb
jl
int
dec
lret
fadd
lds
push
cmpsl
mov
add
jl
jae
ficoms
test
pop
inc
sbb
das
inc
cli
outsb
lret
fdivrs
sbb
dec
notb
push
push
leave
push
push
sub
mov
cwtl
sub
xchg
sub
mov
test
mov
cli
mov
ret
in
sub
jle
jmp
movsl
mov
and
out
cmp
ljmp
adc
andb
pusha
pop
dec
jg
xchg
and
sbbb
in
sti
test
jl
pop
or
jecxz
mov
subl
loopne
insl
mov
fstpt
cmp
pusha
pop
mov
inc
ret
ss
scas
push
nop
mov
fisttpll
dec
jle
int
pop
sub
decb
and
jno
add
jne
jp
jb,pt
cmpsb
out
movsb
adc
js
int3
push
call
sbb
sub
inc
jl
jmp
add
mov
daa
mov
jne
aas
scas
fcoms
rorl
sbb
push
push
sahf
mov
and
inc
jns
mov
adc
mov
mov
flds
fidivl
pop
fisttps
mov
mov
xacquire
xchg
add
mov
outsl
xor
js
jno
or
pop
xchg
loop
fwait
repz
ret
cld
nop
mov
push
es
add
shrl
or
mov
adc
mov
xchg
mov
push
data16
inc
and
inc
popa
aas
xorb
pop
sbb
xchg
test
bound
add
lds
push
lahf
add
in
lret
sti
clc
xlat
mov
loop
dec
sub
call
xor
and
xchg
sub
outsb
cmp
das
dec
in
mov
cli
aaa
fldcw
lods
dec
out
and
push
sub
iret
dec
cli
hlt
mov
lret
sbb
popf
pop
scas
pop
aad
mov
pop
xchg
loopne
mov
cmc
movl
push
jl
mov
mov
fadds
cmp
sbb
rorb
xchg
in
in
or
lahf
loope
mov
lahf
cmp
dec
pusha
cltd
ss
mov
jl
jmp
jnp
and
cltd
xchg
aaa
pop
and
or
mov
leave
and
push
fmul
xchg
loopne
pusha
pop
xor
rorb
add
xchg
insb
sub
dec
xor
jno
add
jg
mov
subl
popa
dec
push
js
xor
es
cmp
jg
ja
loope
shl
lret
out
adc
or
inc
sti
mov
sub
shlb
push
xlat
push
push
jmp
and
cli
test
fiaddl
fwait
fs
int
xchg
mov
imul
fadd
enter
sub
in
add
clc
scas
mov
mov
ret
ret
xor
fsubrs
cmc
enter
movsl
leave
popa
push
outsb
dec
pop
lret
ret
repz
sbb
arpl
sbb
sbb
mov
mov
dec
sbb
outsb
jns
adc
lret
divl
jmp
mov
and
sarl
dec
mov
sbb
push
sarb
jbe
sbb
sub
or
jae
popf
cmp
repnz
sbb
ret
lret
imul
mov
js
fldl
add
neg
addr16
out
sub
stos
dec
xorb
sarb
mov
pop
inc
add
cmpsl
jecxz
ret
mov
cmpsb
pushf
pop
call
push
nop
mov
fcmovbe
sbb
fsubrl
loopne
stc
pop
lock
mov
ljmp
lret
aas
dec
adc
cli
outsl
adc
lahf
repnz
cwtl
test
or
push
push
inc
or
mov
mov
sbb
shlb
lock
and
loop
lods
mov
aad
inc
pop
rcl
fcmovb
cwtl
andb
cltd
outsl
fmulp
cld
and
ss
jecxz
lods
mov
or
lock
mov
nop
test
dec
arpl
div
inc
inc
mov
icebp
loope
jbe
dec
dec
fidivs
dec
cmpsb
inc
lods
ja
nop
xchg
xchg
add
cli
push
imul
call
int
xchg
pop
lds
add
movsl
mov
out
bswap
or
xorl
imul
jl
mov
mov
enter
shl
adc
or
dec
cmp
push
out
je
leave
pop
inc
imul
sbbl
sub
pop
xor
jmp
loopne
pop
repz
dec
push
xlat
sbb
and
add
push
mov
push
cmp
call
xchg
int3
push
iret
pop
and
sub
dec
push
jp
es
jmp
out
dec
dec
jno
sbb
fs
push
sub
ret
dec
xchg
push
fistps
sti
inc
mov
sub
flds
outsb
loope
and
sbb
fcompl
pushf
jecxz
mov
mov
clc
inc
mov
dec
cmpsl
divb
jb
js
inc
sbb
dec
mov
push
mov
in
shl
sub
adc
cli
mov
mov
mov
out
jns
test
pop
shrl
cli
arpl
jne
pop
cmp
sub
push
mov
cli
push
push
mov
adc
jmp
xchg
sub
mov
push
or
pop
inc
pop
dec
inc
loopne
mov
jo
adc
jo
mov
pop
mov
and
test
cmpl
and
pop
fmul
lcall
lods
pop
mov
sub
dec
cmp
repnz
sbb
xchg
xor
and
push
in
int
out
jle
sbb
sti
ljmp
bound
cmp
sahf
popf
sub
jp
and
mov
js
add
sbb
xchg
pop
in
scas
sbb
inc
xchg
outsb
inc
pop
lea
mov
jmp
enter
pop
xchg
testb
and
mov
cmp
test
fs
in
cmp
xchg
cmp
dec
clc
mov
into
movsl
mov
jne
sti
push
fwait
outsb
gs
mov
push
daa
ret
sbb
push
inc
in
add
fdivs
push
fistps
pop
mov
sbb
enter
movb
dec
aas
push
or
mov
aas
and
xchg
cli
add
in
or
js
nop
add
sbb
add
xchg
jp
and
pop
adc
je
xor
xchg
subb
out
pop
mov
adc
mov
popf
dec
and
cmp
cmp
sbb
mov
push
xchg
icebp
mov
out
mov
push
xchg
imul
add
sub
pop
test
dec
mov
movsb
xchg
and
test
mov
jle
pop
arpl
sub
push
ja
jmp
pop
and
push
ljmp
lret
pop
adc
pop
pop
pop
mov
jnp
mov
sub
add
fnstcw
idivl
fisubs
push
fstpt
je
lods
or
mov
out
jg
add
loope
stos
aas
das
lret
cs
imul
sbb
or
pushf
cmpsl
iret
imul
pop
sbb
fabs
arpl
out
xchg
lret
jo
dec
xchg
sbb
fldcw
sbb
jmp
jg
pop
dec
das
iret
shld
jp
dec
imul
in
and
mov
in
adc
pop
clc
sub
dec
call
fwait
popa
adc
xchg
in
pop
fdivr
and
xor
jecxz
cmp
shlb
pop
and
loop
mov
push
je
mov
inc
out
test
jb
mulb
fdivs
lcall
mov
or
fbld
mov
sub
jno
sub
pop
enter
cmpsb
mov
mov
and
adc
cmp
fwait
repz
sahf
pop
dec
into
inc
xchg
sub
adc
and
push
add
cmp
bswap
adc
mov
stos
sbb
cmp
pop
inc
fbstp
push
and
sahf
outsb
sub
es
push
movsl
dec
inc
inc
adcb
sub
das
xor
scas
in
imul
jb
pop
jecxz
push
andb
mull
cmp
movsb
pop
add
ret
mov
add
mov
pop
mov
decl
sub
test
sub
mov
adc
sti
xorb
mov
nop
add
mov
push
add
add
dec
and
imul
mov
dec
xchg
mov
rcll
fsubr
into
or
out
out
mov
lret
jbe
sbb
lods
and
fimull
push
mov
or
jo
mov
cmpsb
lcall
xchg
fisttpl
mov
out
outsl
out
push
push
fisubrl
or
aam
adc
or
cmpsl
mov
leave
adc
push
fidivs
cld
popf
into
jecxz
sub
pushf
pop
bound
inc
jp
mov
mov
push
add
fcompl
inc
xlat
cmc
and
cmp
and
imul
mov
popf
dec
cmp
adc
outsl
dec
push
jmp
dec
stc
add
add
adc
mov
and
lcall
lea
popf
jns
pop
inc
lds
xlat
subb
push
jbe
dec
mov
ret
iret
and
test
std
test
dec
mov
in
mov
cmp
pop
lret
imul
clc
jae
cli
or
loop
in
loopne
xlat
addl
pusha
pop
shl
push
in
add
push
jle
push
push
xor
pop
push
cmp
repz
mov
jmp
cmp
mov
mov
jg
idivl
pusha
jo
loop
rcrb
lahf
dec
shlb
push
mov
or
nop
cmpsl
bsf
sub
mov
inc
sub
mov
or
fisubs
cmp
mov
mov
lret
fadds
mov
jnp
cmpsl
repnz
cmp
jne
mov
xchg
jge
mov
sub
add
int
dec
jae
sbb
imul
mov
repnz
mov
mov
xor
in
sti
or
jp
push
lcall
in
mov
push
inc
rcrl
pop
xor
push
lcall
mov
pop
xchg
add
mov
repnz
push
repnz
ds
pop
jecxz
sbb
aaa
outsb
xor
rcr
les
fcoml
xor
jmp
and
pop
bound
add
xchg
sbbl
jmp
xchg
sub
cs
test
mov
pusha
ds
fstp
mov
test
mov
mov
push
aaa
lcall
mov
cmpsl
popa
xor
rclb
fcmovbe
sahf
lea
repz
imul
or
imulb
aas
popa
or
jbe
adc
pop
imul
outsb
out
int3
loop
stos
ret
out
js
mov
inc
dec
lds
pop
out
mov
in
mov
and
and
adc
lods
jae
push
scas
ret
dec
add
out
pop
xor
movsb
shlb
add
jne
jno
and
in
jo
rclb
in
xor
andps
cli
mov
adc
int
scas
mov
add
lret
hlt
incl
pop
aam
mov
jg
in
adc
orb
fwait
jmp
outsl
mov
lcall
clc
xor
pop
data16
sbb
repz
movsb
mov
shr
lods
add
jge
dec
pop
or
movsb
xchg
jne
daa
lock
and
mov
and
dec
mov
lret
mov
xchg
ljmp
or
addb
popf
and
cmp
fsub
data16
clc
push
xchg
and
lret
leave
dec
mov
stos
lds
in
into
fists
mov
or
mov
into
shrb
pop
xchg
xlat
sbbb
popf
cltd
je
add
ds
js
mov
out
jne
out
adc
lods
aad
sbb
lods
lods
xor
mov
cld
pusha
push
xor
add
inc
popf
addb
dec
loopne
int3
jp
push
clc
xorb
adc
add
pusha
and
add
mov
cld
cmpsb
sti
and
xor
addr16
fwait
je
popf
push
ror
movsb
or
dec
add
out
fs
adc
cwtl
in
mov
xchg
mov
je
cmp
movsl
rorb
fdivs
sub
jne
mov
es
add
add
pop
xchg
jo
jg
ret
adc
std
call
aaa
push
shll
gs
dec
xorl
rolb
xchg
test
std
dec
rcrl
hlt
fs
xor
in
dec
mov
inc
loop
push
pop
rcrb
bound
sbb
shlb
xor
movsl
and
adc
and
scas
pop
push
rcr
pop
cmp
push
jae
xchg
adc
or
pop
push
out
xor
sahf
adcb
stos
fwait
cmpsb
out
pop
pop
rol
lret
sub
inc
mov
jecxz
jmp
push
jle
loope
in
jo
lock
mov
push
sub
jecxz
stos
lahf
or
bound
pushf
dec
jbe
adc
pop
fdivrs
sbb
into
sbb
subl
push
pop
aad
add
mov
or
add
enter
mov
xchg
and
mov
test
ret
or
mov
jb
mov
inc
pop
cmpsb
out
jle,pt
ret
jg
bound
fidivrs
jo
daa
lods
cmpb
cwtl
xchg
and
push
lods
pop
call
cmc
xchg
and
mov
lds
fadd
push
mov
int3
add
fbstp
pushf
gs
cli
xor
pop
pop
or
rorl
mov
dec
aad
and
dec
scas
jg
pop
dec
mov
adc
stc
loop
cltd
out
in
inc
jmp
outsl
jg
jne
ja
addr16
mov
out
dec
jg
scas
or
into
lcall
jp
adc
adc
popf
adc
rorl
ja
rcrl
xchg
xchg
cltd
jae,pt
add
iret
imulb
cli
imul
jb
cmpsl
mov
mov
adc
fadds
jno
mov
add
imul
subl
mov
subb
out
xchg
jmp
sub
fstpl
mov
pop
std
xchg
std
add
cmp
fwait
sub
in
xor
ficoml
je
out
faddp
dec
or
push
add
jae
dec
ret
roll
jge
outsl
xor
ljmp
stos
jmp
jne
sbb
ds
mov
push
or
xchg
sbb
mov
inc
jle
test
in
fs
out
int
outsb
dec
imul
pop
fwait
push
xchg
mov
test
mov
in
mov
cli
jmp
jno
xchg
or
add
idivl
inc
loop
or
addr16
dec
xor
push
adc
insl
mov
pop
ret
inc
nop
cwtl
imul
lods
scas
pusha
sub
or
pushfw
adc
outsl
int3
mov
dec
imul
pop
push
push
aad
icebp
push
pop
in
or
test
mov
mov
mul
in
aaa
pushf
stos
loope
sbb
lcall
rcrb
movd
int3
cmp
fs
mull
cmp
adc
outsl
xor
shl
out
stos
mov
add
pushf
cs
pop
testl
leave
js
push
rcrl
ljmp
dec
mov
stc
movl
ret
jl
in
xorb
aam
xchg
sbb
in
cmp
and
lret
mov
jns
and
and
jb
mov
fsubr
add
sub
inc
jns
add
icebp
jno
mov
inc
dec
dec
push
ja
loop
orb
out
mov
fnstsw
xchg
jge
or
inc
inc
mull
lock
xchg
inc
ss
mov
pushf
movsl
arpl
cmc
mov
xchg
push
xchg
jns
push
bswap
inc
cmpsb
int3
inc
push
test
imul
pop
call
outsl
mov
mov
sbb
sahf
sbb
pusha
cld
xorb
and
inc
ss
out
jb
orl
jmp
out
addr16
xlat
xor
mov
and
sbb
dec
mov
inc
scas
jae
xor
push
test
pop
jno
bound
xchg
pop
push
popf
push
rorb
cld
popa
outsl
xlat
jmp
xor
pushf
lods
and
pop
faddp
adc
xchg
cld
and
push
or
or
pop
xchg
fdivl
pop
int3
sahf
dec
mov
sti
xor
mov
movsb
iret
add
fidivrs
jmp
ret
sub
inc
mov
mov
xchg
dec
push
clc
gs
sbb
pop
xor
notb
cltd
push
or
mov
inc
fildl
cmp
fldcw
add
test
test
mull
cs
ss
inc
rol
outsb
bound
inc
inc
cmp
lods
xchg
sti
notl
lock
cli
add
ror
pop
sbb
mov
mov
jns
pop
xorl
xchg
dec
jl
out
pop
loop
push
aam
jo
pop
jecxz
or
dec
mov
push
jns
push
inc
insb
mov
mov
testb
lea
push
add
xor
in
sbb
adc
dec
jne
jg
mov
jmp
sbb
jns
test
add
sub
clc
sbb
pop
cmc
jo
decl
test
fcmovnbe
imul
xlat
or
aad
pop
idivl
rorb
jno
sub
clc
out
add
popf
push
pop
jnp
sub
sbb
outsb
push
sbbl
add
jbe
ficompl
jo
loopne
push
cwtl
or
mov
cli
test
mov
sbb
fsts
fincstp
test
jecxz
pop
loope
push
push
hlt
rolb
cli
inc
pop
dec
and
cwtl
mov
jl
cmc
ror
test
adc
inc
int3
jecxz
stos
pop
imul
or
loop
sub
adc
adc
xchg
and
ret
mov
jnp
adc
cmp
ja
sbb
add
xchg
hlt
test
pop
adc
xchg
out
cmp
into
les
inc
or
mov
call
mov
mov
cmp
jl
arpl
cld
and
xchg
xor
outsb
or
push
imul
sets
adc
orl
jae
into
js
dec
in
cmp
dec
daa
sbbb
pmaxub
enter
xchg
dec
fildll
call
mov
and
leave
push
in
xor
mov
into
add
call
inc
mov
or
or
imul
push
ds
xchg
sub
std
insb
cld
sbb
mov
dec
fdivs
cmp
enter
jnp
xor
in
imul
sub
pop
xchg
mov
jecxz
pop
xor
scas
fucom
test
decl
and
aam
xor
jecxz
daa
es
test
sub
inc
orl
jnp
jne
dec
inc
ret
add
and
pop
movsb
test
aaa
icebp
mov
xchg
mov
mov
fs
mov
mov
lret
push
sub
mov
adc
pop
mov
push
movsl
dec
xchg
in
mov
and
lcall
sub
xor
fidivl
jb
inc
aad
add
cli
fcom
ss
lea
mov
lods
push
ret
testl
or
sbb
ss
popa
aas
pop
movsb
add
mov
cmp
fs
out
cmp
lcall
push
aas
dec
in
iret
lods
xor
mov
aam
push
mov
jne
pop
mov
dec
xchg
mov
dec
jmp
or
sub
or
stos
addr16
or
push
push
inc
test
iret
sbb
sahf
pop
inc
wbinvd
mov
pop
push
mov
popf
lods
push
pushf
push
pop
sarl
mov
dec
ret
and
or
lea
mov
mov
push
push
lret
imul
inc
sub
mov
shl
jb
pslld
ret
pop
sbb
clc
mov
sub
jae
xchg
cli
cltd
gs
cmp
xchg
dec
xchg
jmp
mov
or
pop
sub
ret
xchg
mov
ja
add
arpl
mov
or
adc
pop
fisubrs
xor
in
jbe
pop
scas
lods
adc
jge
daa
mov
cmp
mov
and
mov
inc
aam
or
cmp
and
lds
mov
dec
lret
pop
out
sub
lcall
int
push
cld
add
loope
xor
dec
or
es
inc
mov
inc
fildl
dec
push
fmulp
mov
out
mov
dec
je
fcompl
cld
adc
xchg
pop
jp
push
fld
cmp
loopne
dec
mov
mov
jbe
inc
pop
dec
mov
push
loop
add
dec
js
push
xchg
insl
scas
mov
mov
nop
or
xor
lods
sub
notb
ret
xorb
gs
push
imul
or
jb
bound
aas
pop
pop
in
jne
stos
insl
lret
or
cmp
mov
andl
push
jmp
mov
pop
call
aam
loopne
arpl
fwait
mov
dec
push
fisubrl
clc
bound
fnstsw
subb
jl
ljmp
mov
out
adc
jno
js
stos
jg
jecxz
cmp
jle
ljmp
sub
stos
jne
jge
jnp
cmpsb
mov
out
enter
mov
popf
sbb
sarb
or
fdivrl
shrl
fistps
cmp
xchg
pop
or
mov
mov
push
or
jnp
pop
sub
loope
inc
fdivs
ret
pop
adcb
inc
aaa
push
dec
push
or
sbb
mov
test
sahf
xor
ret
out
pushf
lea
mov
pop
fs
gs
shrl
push
pop
sbb
mov
inc
fsts
mov
xchg
or
int3
jo
add
cs
aad
lahf
inc
in
xchg
ja
addb
xor
jne
pop
mov
loop
sbb
sti
sub
cmp
pop
test
xchg
sub
out
mov
in
int
ja
orb
add
int3
into
inc
adc
jns
fisttpll
add
jne
lea
or
add
xchg
add
push
xchg
cs
pop
xchg
outsb
pop
push
pop
lret
xchg
sub
cli
cmc
aaa
sti
dec
and
das
push
jbe
std
dec
lock
ja
std
outsl
lock
sub
jae
shll
cmc
hlt
in
adc
aam
mov
mov
test
repz
daa
scas
mov
mov
mov
add
jo
xchg
les
cmpsl
cld
xor
lock
xchg
fs
and
xchg
fbstp
rorl
je
mov
jle
adc
rcrb
sub
pop
test
adc
jecxz
adc
mov
negb
in
scas
enter
jl
sub
mov
inc
pop
stos
hlt
cs
jle
and
sti
mov
idiv
push
lret
jb
xchg
aas
or
xchg
adc
push
mov
aaa
and
xchg
sahf
push
mov
mov
fidivl
push
pop
cwtl
mov
insl
sbb
rorl
push
mov
push
push
bound
adc
cmp
pop
push
repnz
aaa
cmp
bound
dec
orl
sub
int
enter
loope
dec
mov
mov
test
out
les
add
push
es
daa
enter
fcom
fisttps
mov
dec
cmc
jnp
stos
adc
orb
pop
jecxz
and
cmp
lea
cwtl
gs
fidivs
xchg
fcompl
aaa
jns
fildl
mov
push
int
push
push
jns
xlat
stc
cmc
into
add
addr16
or
xor
ss
in
cmc
dec
dec
adc
mov
add
xor
xor
mov
xchg
fisttps
mov
jle
aas
adc
jbe
loopne
dec
frstor
out
adc
push
imul
jnp
push
inc
dec
xchg
fbstp
imul
clc
sbb
adc
jg
or
sti
fistpll
sub
mov
icebp
jns
mov
sub
push
and
loop
fcoml
mov
insl
add
mov
sub
pushf
push
int3
mov
xlat
xor
adc
daa
or
in
cmp
push
add
xchg
dec
sbb
xchg
out
loopne
loopne
cmp
push
dec
adc
cmpsl
xor
or
cmp
inc
inc
push
jne
pop
and
fs
push
sbb
out
sbb
xor
arpl
rcl
dec
je
enter
mov
dec
pop
cmpsl
mov
mov
and
cmpb
cmp
fstpl
pop
push
dec
adc
movsl
nop
fsubl
xchg
lret
inc
add
rcll
jno
pop
mov
iret
das
mov
add
pop
pusha
adc
adc
mov
and
mov
and
sub
pop
outsl
divl
push
imul
inc
ss
mov
xor
push
adcl
aad
loope
insl
mov
xchg
xor
cmc
xchg
into
xchg
lret
aas
loopne
int3
cmp
sub
outsb
ss
xchg
enter
aas
pop
shrl
ret
mov
mov
clc
mov
push
jmp
inc
lods
mov
xchg
pop
lcall
adc
add
or
sbb
cmp
int3
xor
push
inc
inc
jo
rcrb
pusha
dec
sub
inc
test
adc
pop
push
push
xor
rcrb
ret
or
lock
mov
add
imul
jo
xor
xor
mov
repz
xchg
jge
test
add
bound
jmp
dec
in
fsts
fimull
adc
lret
imul
dec
fildl
sub
ret
rolb
mov
mov
and
xorl
dec
mov
pop
inc
add
lea
rcrl
int
adc
add
stos
out
xorb
sub
xor
xchg
jb
mov
push
jp
daa
psrlw
ljmp
mov
sub
scas
test
sub
xor
loopne
ljmp
inc
xchg
cmc
fisubl
out
shl
and
cld
adc
dec
iret
insb
add
sub
movsl
mov
test
fisubl
lar
fdivp
fsubrs
into
sub
shr
popf
clc
in
sub
jp
mov
push
sub
lret
cmpsb
lds
ja
xchg
xchg
xchg
mov
xor
jl
or
sbbl
mov
cmpsb
xchg
es
and
aam
cwtl
ss
ljmp
pinsrw
adc
sbb
stos
in
mov
push
movb
push
adc
xor
fwait
rcl
and
mov
push
lahf
mov
lret
push
movsb
and
sub
rcll
jge
js
aaa
cld
sub
daa
sbb
in
xchg
cmp
xor
cs
dec
xchg
pop
sbb
shl
aad
lcall
dec
mov
scas
jno
daa
add
push
xor
outsl
push
push
stc
pop
inc
xchg
incb
es
cmp
lods
dec
push
loope
aad
and
in
jmp
leave
shrl
shrb
or
mov
dec
insb
or
jb
repnz
mov
dec
or
mov
int3
div
add
in
faddl
add
in
add
aaa
pop
ja
int
repnz
cmc
sbb
add
mov
and
and
ficompl
mov
mov
sbb
xor
sub
sti
jae
dec
in
sbb
stos
mov
inc
mov
dec
mov
repnz
lods
adc
jno
push
mov
mov
imul
stos
cmp
and
inc
decb
jne
xor
add
xor
xor
int
push
inc
mov
mov
dec
jle
push
lcall
addr16
lcall
lea
cltd
test
stos
inc
jecxz
fiaddl
or
cmp
std
jg
rcrl
pop
xchg
push
sbb
push
xlat
and
jb
cmp
mov
jbe
jbe
or
inc
icebp
push
movsl
mov
sub
adc
mov
insl
and
rclb
ja
cld
mov
call
loopne
cmp
dec
mull
cmp
pop
mov
movhps
ret
lods
aam
pop
in
mov
pop
lahf
icebp
rolb
xchg
mov
cmp
sbb
addr16
sub
repnz
add
xchg
xor
push
push
js
neg
pop
outsb
xlat
imul
imul
xchg
shlb
mov
pop
rorb
iret
dec
dec
mov
push
out
push
sub
fimull
fstpt
xchg
fsts
icebp
inc
out
mov
cld
xchg
sub
dec
sbb
ret
xor
push
outsb
outsl
sbb
bound
lods
sub
cmp
inc
add
mov
mov
adc
popa
movsl
sbb
loope
adc
orb
cltd
inc
xchg
test
ror
test
adc
cmp
outsb
add
idiv
mov
in
mov
cli
sbb
add
or
and
adc
jno
mov
pop
lock
mov
pusha
pop
lock
leave
popa
and
mov
out
cs
sbb
stos
xor
cmp
shlb
pop
ret
sub
sar
cmp
adc
std
cwtl
mov
xchg
fs
sbb
mov
sub
movsb
xchg
inc
fisttpll
sbb
inc
test
loope
mov
add
inc
mov
dec
inc
out
mov
dec
negb
jnp
and
pushf
ret
sahf
test
pop
pop
fnstsw
pop
pop
gs
rcl
out
sbb
xchg
jno
cmp
stc
pop
sub
xor
cmp
ljmp
fldl
lcall
iret
addb
fs
mov
xlat
mov
and
ret
mov
add
jle
dec
les
insl
or
mov
out
pop
mov
test
popf
test
pop
pop
lcall
bound
leave
pop
outsb
sahf
ficomps
fcoml
arpl
dec
mov
inc
pop
pop
xor
cwtl
fs
arpl
pop
fs
push
icebp
das
cmp
lods
mov
mov
push
cmpsb
xor
ljmp
or
testl
scas
xchg
notl
cltd
iret
js
cltd
mov
popf
jbe
fs
cli
dec
add
jno
adc
lcall
push
xor
dec
leave
jp
xchg
push
adc
data16
jp
outsl
sbb
cmp
push
cwtl
fsqrt
inc
push
xchg
add
and
gs
add
jne
cltd
and
adc
mov
pop
es
stc
mov
loopne
jnp
outsl
and
xchg
daa
fistl
mov
sub
push
movsl
rorb
rcrl
das
mov
fnstcw
cmp
out
gs
sbb
pop
push
or
cwtl
fwait
and
sbb
add
mov
ret
rcrb
pop
js
push
pop
sbb
dec
int
mov
aam
pop
jmp
jp
lcall
add
mov
xor
adc
dec
sub
jno
jge
xor
loop
mov
ret
and
in
xchg
jecxz
clc
or
xlat
test
test
push
adc
cmp
aas
mov
dec
or
cs
repnz
mov
push
cmp
hlt
sbb
iret
inc
jnp
and
in
mov
xlat
mov
xor
pop
jne
mov
and
sub
scas
jg
je
cmp
add
popa
stc
and
ret
pushf
sub
das
xor
stc
jnp
push
loope
dec
loop
jecxz
daa
mov
ljmp
inc
xor
jle
imul
or
mov
push
ret
cld
mov
push
xor
adc
in
imul
or
lahf
in
adc
mov
lahf
xchg
fiaddl
and
adcl
and
xchg
icebp
jb
dec
lods
or
aad
fucomp
cs
dec
movsb
outsl
ret
or
pop
jno
jle
rorl
mov
dec
loope
cmp
inc
aaa
jg
sub
jno
adc
inc
mov
mov
es
loope
mov
mov
sahf
in
pop
push
imul
sub
mov
fistpl
mov
lret
mov
xor
push
jp
adc
unpckhps
mov
cmp
aam
outsb
cwtl
push
mov
or
dec
aam
inc
dec
test
cmp
push
push
mov
xor
jg
push
rorl
push
fwait
add
jbe
lea
sbb
in
cwtl
test
leave
push
arpl
push
xchg
movl
ds
mov
into
or
xchg
in
aam
add
mov
ret
cmp
ljmp
int
sbb
sub
inc
jl
lcall
push
xchg
das
pop
push
imul
xor
andl
mov
insl
mov
popfw
mov
iret
int
mov
jo
lea
sbb
adcb
lea
push
xor
xchg
int3
js
std
int
icebp
sub
and
lock
fs
outsb
test
jae
and
sahf
inc
cmpsb
jp
out
fs
loopne
aas
jp
jns
adc
dec
dec
test
loopne
rcrb
adc
mov
in
and
fsubl
lahf
sub
mov
loopne
fistpl
popf
loope
mov
mov
cmpsb
cmp
mov
int
out
lds
rorb
in
fs
lret
ret
nop
aad
cmp
cwtl
lahf
push
cs
ja
int
adc
movsb
or
fmuls
fbstp
fldenv
aad
mov
sub
sub
faddl
dec
cmpsb
jmp
inc
ljmp
pop
std
mov
shl
mov
mov
shl
sub
push
outsb
enter
mov
sub
aaa
scas
push
leave
jb
cld
xchg
adc
jne
pop
xchg
push
mov
movsb
aam
adc
sbb
icebp
incb
or
cmp
mov
lret
loop
mov
test
inc
xchg
ret
cmp
outsb
cmp
xchg
cltd
out
push
enter
push
dec
dec
ds
cmp
rorb
jae
jecxz
ret
jge
movsb
dec
lock
mov
popf
out
mov
incb
loope
jge
popa
adc
inc
jns
pextrw
add
iret
adc
or
xor
filds
push
pushf
in
stos
push
mov
dec
mov
mov
dec
push
and
scas
iret
add
fisttps
lea
mov
jo
test
fcmovnb
inc
cmpsb
adc
jge
ret
sbb
rorl
mov
push
xchg
mov
movsb
stos
inc
mov
into
ss
ljmp
add
pop
xchg
imul
and
cmpsl
stos
xor
mov
cmpsb
addr16
clc
scas
dec
and
adc
pop
sbb
add
shr
std
popa
and
cmpsl
pop
fcmovnb
push
pop
mov
cmp
repz
int3
xchg
jmp
add
lds
cmp
dec
mov
ds
and
or
and
add
loopne
gs
jae
loopne
jne
jb
sub
leave
stos
pop
mov
push
loopne
sahf
pop
jge
mov
ret
bound
test
dec
sub
add
mov
call
cltd
adc
dec
jmp
stc
cs
mov
fsubrs
push
mov
pushf
add
outsl
subb
mov
mov
ds
sub
push
and
outsl
dec
sbb
adc
sti
inc
addl
lea
and
add
in
dec
cmp
fstl
int3
daa
mov
push
daa
jae
xor
loop
dec
cld
or
out
aad
mull
xchg
xor
lret
push
mov
mov
and
jg
mov
dec
push
cltd
mov
mov
mov
adc
mov
adc
movsl
test
enter
fsubrs
repnz
scas
xor
jnp
ret
dec
push
lock
xchg
jns
orb
pop
into
ret
jnp
xchg
mov
ja
aam
xchg
pop
sbb
and
mov
les
jle
fstl
out
dec
das
dec
add
push
ret
in
or
lods
xchg
sub
movsl
mov
lock
ja
adc
pop
xchg
in
jne
aad
push
adc
loope
shlb
inc
lds
adc
frndint
or
mov
sbb
mov
xor
dec
cmpsb
sub
mov
jecxz
mov
mov
xor
pop
adc
outsl
xchg
les
sub
sbb
inc
dec
jmp
cmpl
in
insl
inc
stc
adc
and
dec
jmp
cld
sub
add
dec
aad
push
out
cmp
inc
or
imul
xor
xchg
nop
jno
clc
jmp
enter
push
sbb
inc
lods
jns
stc
cli
push
cmp
push
mov
mov
es
daa
pop
jmp
pop
xor
imulb
daa
push
cltd
cmc
insb
repnz
repz
pop
mov
and
add
aad
push
jbe
fstl
xchg
leave
cmc
mov
mov
push
jg
pusha
mov
and
add
bound
test
add
push
pop
inc
push
wbinvd
sub
out
mov
ficoml
imul
inc
xchg
jb
lcall
cmp
push
testl
pop
imul
hlt
je
sbb
mov
xor
xorl
lcall
mov
inc
lods
pop
and
lret
shrb
xchg
mov
jno
xchg
shlb
fwait
stc
rcrl
inc
pop
rcr
lock
jns
mov
xor
inc
sbb
loope
ficomps
inc
and
cltd
daa
lahf
jmp
cmp
bound
repz
repnz
jae
mov
pop
jnp
fidivrs
or
push
mov
mov
jb
lea
xchg
imul
jnp
pop
sub
fs
out
shlb
pop
inc
xor
or
add
lods
xchg
adc
adc
inc
lock
or
js
cmp
movsl
pushf
das
popa
shrl
pushf
and
lret
pop
sbb
fbstp
jb
and
inc
pop
or
int3
sbb
push
xor
jns
mov
xchg
jle
pop
mov
lret
and
jno
sbb
mov
xor
lret
movsl
pop
sub
sbb
mov
pop
push
pop
iret
and
xor
xchg
shrl
sub
fs
cmpsl
pop
and
jge
cmp
pop
push
jo
or
sbbb
dec
pop
sti
push
outsl
pop
cmp
or
nop
mov
je
mov
mov
jg
jns
lret
push
iret
sti
mov
or
cmp
push
mov
notl
jbe
inc
dec
in
push
and
xor
notb
mov
mov
mov
daa
dec
push
jg
fdivl
sbb
mov
jp
inc
and
aad
fisubs
push
jge
sbb
adc
int
call
inc
into
push
js
hlt
mov
sbbl
mov
cltd
nop
mov
push
lds
test
jecxz
and
loopne
lods
subb
in
push
dec
push
movb
sti
loop
test
push
xor
xchg
xor
push
cld
cmpsl
lds
adc
lret
aaa
mov
jmp
add
popa
dec
fwait
cmp
mov
cli
inc
adcl
inc
in
insb
push
orl
ret
fld
push
sub
cs
pusha
ficomps
cmpsl
jmp
or
imul
xlat
push
cmp
stos
cmp
data16
push
gs
loopne
cmp
lgs
dec
xor
mov
cltd
shlb
xor
shr
fs
sub
dec
push
iret
pop
rolb
sub
xor
push
sbb
outsb
inc
ds
mov
aas
pop
in
repnz
fildl
fmull
xchg
in
sbb
popl
ja
cwtl
pop
testb
or
mov
inc
shrl
popf
cmpsb
leave
loop
bound
sbb
ret
cld
or
mov
mov
pop
and
xchg
unpcklps
loop
out
movsb
xlat
pop
inc
in
jnp
sub
mov
pushf
and
add
sbb
and
or
add
fst
mov
adc
in
cltd
imul
std
jo
cmp
push
popf
jb
das
in
xchg
or
and
mov
lahf
pop
shl
pushf
xchg
pop
dec
cltd
cmc
aaa
data16
inc
inc
inc
sbb
icebp
add
push
and
xchg
and
inc
adc
test
out
or
fstpl
inc
scas
mov
orb
aam
xchg
jmp
cld
popf
sbb
mov
sahf
cltd
in
rolb
popa
outsw
xor
dec
push
mov
jbe
or
push
lds
sub
xchg
mov
mov
int3
push
cmp
xchg
dec
inc
adc
and
push
mov
cmp
ss
mov
mov
sti
mov
add
enter
xchg
pop
push
dec
stos
inc
popf
mov
dec
mov
cmpsb
ret
inc
mov
cmc
or
jmp
je
push
fwait
adc
popa
and
xchg
cmpsl
push
pop
cwtl
nop
repnz
int
dec
lahf
jbe
push
cs
lahf
jge
imul
sbb
repnz
outsb
fnstenv
scas
sti
push
mov
xor
pop
daa
cmp
dec
scas
jbe
outsl
and
ret
adc
add
jl
mov
pop
int3
cltd
shlb
dec
pop
inc
push
test
mov
and
ror
clc
ja
sti
lods
inc
jns
pusha
bound
mov
pop
and
dec
dec
dec
dec
jbe
xor
cmpl
mov
cmp
pushf
stos
cmpsb
dec
test
outsl
sbb
in
movl
loopne
popf
decl
push
adc
dec
dec
test
in
inc
outsb
pop
out
ret
sub
adc
mov
imul
jne
dec
std
mov
sti
fs
mov
push
push
and
fucomi
inc
mov
dec
mov
adc
add
jle
xchg
xorb
insl
dec
mov
frstor
lods
mov
das
nop
lds
lcall
pop
mov
pop
popf
scas
pop
mov
shll
fsubl
mov
jmp
adc
test
sub
scas
in
xchg
hlt
inc
unpcklps
sub
loop
scas
repz
mov
jbe
outsl
dec
or
sbb
jb
aas
sarb
adc
cmp
cmpl
push
adc
popf
push
cmp
popa
aam
ja
lds
leave
test
xchg
sbb
aad
and
repz
add
pop
pop
stos
add
js
mov
pop
xchg
or
and
std
add
ret
call
or
push
sub
shll
jge
int3
fistpl
sub
adc
subl
push
mov
and
mov
push
inc
out
sub
fs
cwtl
adc
jns
mov
pop
sub
ds
loop
dec
fimuls
cmc
inc
cmc
cld
lods
add
pop
das
sbb
jo
mov
std
add
out
ret
std
aas
adc
test
sub
push
xchg
scas
push
int
dec
scas
mov
repnz
xorb
insb
push
push
xlat
and
push
mov
adc
pop
outsb
mov
sbb
cmp
sub
test
mov
ret
bnd
add
xchg
dec
outsl
sbb
xor
jmp
jae
add
and
movsb
and
cld
add
inc
mov
test
fiaddl
pop
lods
pushf
cltd
inc
mov
inc
popf
scas
or
ja
call
je
insl
fsubrs
loop
push
iret
sbb
out
data16
add
je
adc
jo
inc
sub
sub
das
adc
or
push
pop
pop
cmp
ss
xchg
mov
mov
cltd
push
movb
pmaddwd
cld
dec
xchg
shlb
gs
pop
test
bound
pop
sub
scas
mov
inc
lods
pop
popa
inc
fwait
push
cmpsl
out
mov
pusha
jmp
ds
inc
loopne
and
mov
xor
cmc
shll
add
int3
dec
cmpsl
cmp
mov
adc
jp
arpl
mov
les
xor
cld
cltd
mov
jne
les
imul
push
pushfw
add
push
inc
jmp
add
scas
push
nop
xor
test
ret
adc
sub
loopne
jg
mov
es
rclb
insb
inc
ret
and
cmpl
nop
data16
xlat
add
aas
adc
bound
je
inc
lcall
push
lahf
xor
mov
jbe
dec
ja
pop
push
sub
mov
out
mov
adc
aas
daa
fdivp
xchg
adc
inc
xchg
xchg
jmp
cli
outsb
and
dec
in
cltd
std
insb
jge
jmp
in
loopne
mov
nop
cmp
mov
add
fisubrl
in
mov
jae
cmp
pushl
inc
push
or
jo
outsl
cmpsl
xchg
push
insb
dec
dec
push
xor
out
stc
int
mov
outsb
out
lahf
call
std
inc
mov
into
notl
andb
pop
cmp
mov
jbe
ret
xor
sbb
vucomisd
stc
lret
mov
insl
cmp
push
test
pop
jns
xor
adc
negl
inc
dec
jb
sbb
add
mov
or
mov
int
pop
sbb
mov
cmp
jmp
xor
ret
scas
loope
movsl
test
in
mov
mov
ficompl
adc
jae
cmpsb
fwait
adc
jbe
call
sub
stos
push
stc
mov
aad
mov
mov
clc
sub
mov
or
test
roll
mov
fsubl
rcll
test
pop
psrad
xchg
dec
je
add
push
inc
in
data16
and
adcb
decl
cli
mov
aas
hlt
fcomip
cltd
adc
cmp
repz
call
inc
lods
cmp
int3
jns
sahf
aaa
pop
xchg
cmp
idivl
add
jae
inc
fstpl
push
imul
movsb
adc
push
adc
xor
push
jo
and
xchg
test
pop
adc
aam
and
lret
and
jbe
adc
push
jmp
pop
add
add
mov
loop
mov
nop
push
call
cwtl
rorb
iret
shll
arpl
mov
push
lods
pop
dec
shlb
call
add
jns
dec
call
mov
mov
clc
mov
fstpl
sarb
rcr
pop
cmpsl
out
rclb
daa
std
out
idivl
cmp
xchg
test
cmovl
shr
test
mov
jle
jnp
shll
adc
ss
inc
sahf
icebp
dec
cmp
mov
stc
jns
sub
dec
pop
loopne
push
fiaddl
sub
dec
ss
jno
ret
out
in
mov
xchg
ja
sub
mov
addb
xor
xchg
mov
aas
mov
cmp
mov
arpl
jnp
cwtl
fadds
scas
cmpsb
pop
jo
push
mov
xor
xlat
push
sarl
jno
insb
addl
jo
rclb
aam
inc
inc
push
mov
js
cld
jne
xor
add
push
adc
aad
push
push
xchg
jge
insl
rcll
ljmp
inc
scas
movsb
mov
arpl
nop
mov
cmp
mov
sub
adc
and
push
and
movsb
inc
cltd
mov
mov
mov
cmpsb
cmc
sbb
sub
dec
ss
xor
ss
mov
inc
pop
sbb
cmpsb
ja
dec
lcall
lea
in
movsb
sub
aas
test
adc
cmpsb
scas
ret
aaa
xor
push
and
pop
dec
jo
ficoms
mov
icebp
out
sub
or
test
add
clc
or
adc
rcll
inc
shrb
mov
pop
or
add
decb
jnp
jns
insb
mov
pop
sahf
jnp
arpl
push
out
pop
fstl
mov
xor
add
pop
daa
fwait
mov
rcl
inc
or
loop
mov
in
pop
lahf
inc
and
insl
mov
fcmovnu
sub
cmpsl
add
arpl
and
movsb
cmp
rcrb
daa
mov
enter
imul
outsb
scas
dec
mov
adc
in
popa
dec
insb
movzwl
xchg
gs
mov
fwait
and
scas
push
add
inc
fistpl
or
mov
cmp
shll
not
jl
xor
and
test
int3
mov
jmp
xor
data16
xor
or
fwait
mov
inc
movsl
sub
xor
filds
loope
or
xchg
sbb
xchg
fcomps
dec
dec
jge
dec
push
loopne
cmp
lock
mov
sub
inc
aaa
xchg
push
out
pop
lock
inc
repz
jno
push
xchg
or
enter
int3
addr16
loope
dec
jge
and
sbbb
outsb
mov
inc
fildl
clc
scas
es
or
mov
pop
sbb
xchg
push
out
ficoms
fdivrl
hlt
sbb
test
jge
mov
jb
lods
lock
int
xchg
mov
fucomi
adc
nop
bound
js
imull
cli
lret
rcrl
jb
sarb
jecxz
ret
push
imul
pop
jle
sbb
mov
je
int
xor
adc
test
push
lds
cs
push
std
ds
mov
sti
push
pop
xor
ficompl
mov
cwtl
jns
or
int3
gs
or
testb
jo
and
add
add
fcomip
data16
xor
lahf
out
sub
mov
add
popf
aam
cli
sbb
fsubrs
mov
pop
xor
mov
icebp
imul
mov
pop
pop
icebp
loop
popf
orb
repz
xchg
mulb
jmp
and
pop
xchg
mov
test
mov
out
cmp
add
mov
lcall
std
repnz
add
xchg
dec
mov
mov
std
outsb
lret
push
loopne
lret
mov
sarl
and
mov
lds
loop
std
ljmp
call
aad
jbe
bound
mov
add
inc
jb
pop
aam
lcall
imulb
adc
pop
adc
aad
stc
xchg
mov
and
in
lock
out
pop
push
push
xchg
cmc
sub
inc
ja
stos
nop
push
sub
fs
add
imul
pushf
repz
xchg
popf
xlat
pop
xor
sbb
jno
and
int
or
adc
lret
push
rorl
in
dec
xchg
pop
or
mov
lea
add
xor
int
repz
mov
sbb
mov
pushl
and
test
shlb
faddp
pop
shll
lea
xchg
fstpt
cmc
cmp
imul
in
in
and
push
jnp
adc
repnz
outsl
or
pushf
out
out
idiv
clc
push
fwait
outsl
mov
cmp
dec
dec
add
stc
stos
adc
sarb
pop
loop
adc
pop
mov
cmc
push
jp
cmp
and
dec
es
call
imul
outsb
pushw
jnp
fdivl
imul
outsl
ficoml
fists
fs
jp
lods
mov
mov
inc
sub
jno
std
adc
fdivl
cmp
leave
hlt
sbb
bound
dec
dec
test
iret
fmull
daa
sub
cli
daa
lock
pop
je
in
mov
jne
pusha
push
mov
pusha
dec
dec
ds
mov
sub
loope
mov
sbb
loope
cmpsl
xor
mov
xchg
lret
cmc
bnd
imul
ljmp
dec
push
and
loope
add
dec
push
js
rolb
icebp
mov
scas
std
mov
das
xchg
fsts
movsb
inc
ljmp
lahf
add
sbb
adc
push
push
cmpsb
inc
es
sbb
out
xor
rclb
push
push
pop
jno,pt
ja
fistpl
loope
dec
cltd
inc
cmp
xchg
mov
popf
mov
mov
movsb
movsl
int
xchg
push
push
pop
pop
js
inc
scas
jle
es
clc
adc
scas
aas
fbstp
dec
js
sbb
jnp
xor
and
sarl
cmp
addr16
push
mov
lret
scas
loop
shll
sbb
sar
decl
stc
xchg
pusha
mov
jmp
ss
add
mov
mov
adc
jle
hlt
cmpsl
insb
pop
pop
dec
and
sub
jbe
insb
push
rolb
repnz
adc
sbb
xor
adcl
xor
lahf
mov
cmp
adc
call
mov
mov
test
cmp
ljmp
es
push
in
dec
mov
xchg
in
mov
inc
enter
jno
sub
add
sbb
sub
push
notl
push
mov
push
lods
or
mov
ljmp
js
scas
std
into
sahf
ret
in
adc
daa
rolb
adc
dec
dec
stos
dec
sbb
sbb
mov
and
or
stos
xor
ljmp
dec
insl
js
and
adc
push
loope
adc
lods
ja
gs
fwait
sub
sub
sbb
mov
pop
cmp
fisubrs
pop
sub
fldt
or
push
fsts
stc
dec
out
aaa
mov
add
inc
push
xlat
xlat
add
push
lcall
lret
pop
or
std
stc
ja
jne
and
add
jb
lods
mov
sti
xor
notl
popa
shrb
icebp
jmp
mov
add
popa
pop
les
gs
mov
icebp
jnp
xchg
jns
icebp
or
dec
popa
mov
mov
push
xchg
ljmp
mov
jb
mov
rcrb
xchg
int
subl
insb
sub
in
jne
mov
aaa
xor
dec
cmc
scas
popa
sarb
mov
rcrb
or
aad
out
jmp
dec
call
outsl
call
cmp
pop
inc
cmp
jnp
and
dec
xor
adc
mov
inc
mov
push
mov
das
inc
or
mulps
gs
mov
clc
jae
std
and
mov
xor
jnp
mov
rcl
and
pop
xor
cmp
mov
rep
int3
in
and
adc
adc
push
cs
test
ja
and
or
cmp
loop
das
imul
pop
sbb
pop
hlt
sub
adc
pop
sub
push
icebp
shll
outsl
pop
cmpsl
xor
xor
nop
pushf
leave
inc
sub
push
out
cmp
ja
movsl
mov
addr16
adc
fsubl
sbb
inc
xchg
out
aam
mov
loope
lahf
cmp
pop
fstpt
outsb
jmp
pop
inc
or
and
scas
cmp
sti
insb
inc
fucomi
imul
and
push
arpl
cld
cmpsl
jbe
jmp
lcall
mov
gs
dec
pusha
popa
sbb
inc
xor
mov
cmp
push
pop
inc
shlb
pop
adc
cmp
adc
mov
xchg
in
mov
fdivrs
sti
das
dec
cwtl
sub
mov
adc
mov
sub
dec
lods
push
lret
cld
lods
cli
jg
push
cmp
clc
test
cmp
out
insl
data16
in
ret
jns
adc
aas
inc
ror
push
mov
push
scas
sub
cmp
pushl
adc
add
pop
ss
cli
mov
cmp
dec
rcrb
test
or
adc
std
add
mov
mov
push
mov
push
imul
cli
push
mov
push
popa
repz
mov
push
test
cmpsb
pushf
ja
add
cmp
push
insb
ret
enter
mov
into
loop
inc
scas
adc
adc
cmp
jno
mov
mov
fdivl
repz
shr
sbb
in
aas
movsb
jne
popa
sub
push
mov
and
out
xchg
pop
fs
inc
dec
dec
fdivrp
mov
loop
and
pusha
imul
lods
jmp
leave
out
and
lret
push
mov
mov
arpl
pop
int3
sahf
mov
sbb
and
js
lock
push
xchg
xchg
fidivrs
dec
adc
or
xchg
add
xor
icebp
test
fsubs
clc
lret
or
dec
test
add
mov
mov
test
adc
push
add
xor
iret
push
cmpsl
mov
and
data16
inc
into
test
not
mov
xchg
pusha
ss
jmp
mov
sbb
clc
scas
out
daa
in
inc
inc
xchg
cli
dec
inc
out
scas
push
testl
mov
popf
inc
lods
add
or
xchg
outsb
xchg
clc
in
mul
jno
cmp
and
xchg
pop
fisubl
aaa
movsb
sbb
push
lret
push
fstl
rcll
in
add
in
xchg
jg
cmpsb
movsb
fldt
inc
lods
xor
test
cmp
fnstenv
and
es
sbb
das
mov
repz
out
push
mov
sub
aad
int
mov
sbb
or
out
adc
push
popf
shl
and
ret
add
mov
and
insb
rcll
pop
cmp
cmp
scas
cmpsl
pusha
leave
loop
aas
push
arpl
fwait
xchg
and
ret
int
adc
add
jb
scas
sub
xlat
mov
ficoms
out
and
js
dec
fs
sbb
pop
pop
test
call
subb
ss
cltd
loopne
add
xor
mov
gs
ret
fildl
sub
sub
or
mov
mov
mov
imul
adc
cmp
lea
jne
sub
and
and
mov
cmpsl
mov
xchg
or
in
adc
mov
lea
adc
or
mov
inc
or
das
sbb
mov
xor
test
test
mov
push
dec
lahf
add
mov
adc
jnp
ja
or
xchg
test
ret
and
arpl
fidivrs
sbb
cmp
mov
andl
cltd
lods
daa
bound
ss
inc
clc
test
lahf
aad
ljmp
shrl
outsl
adc
or
pop
rcrl
or
jnp
pop
push
jne
mov
pop
cs
cmp
xchg
pop
mov
jecxz
bound
mov
cmpl
popf
fisubs
or
ljmp
fdivl
ljmp
repnz
xor
jno
mov
out
push
fsubp
stc
dec
fistps
inc
mov
je
popf
out
scas
xor
insl
lret
das
arpl
xor
dec
outsl
sbb
mov
mov
xchg
cs
push
jp
push
test
jno
xchg
ljmp
xor
and
push
adc
aam
in
mov
push
and
cmp
imul
mov
fwait
xchg
jmp
mov
mov
cmp
rcll
nop
mov
dec
dec
addr16
sub
cld
pop
or
or
xor
std
sub
fisubs
sub
daa
aad
loopne
enter
rcr
pop
xor
push
dec
iret
js
enter
or
xchg
xchg
loop
shrl
mov
jge
adc
lods
rcrl
mov
insb
pop
cmp
push
mov
pop
enter
in
cmp
inc
inc
mov
xchg
cmp
mov
or
out
xor
out
or
repnz
rcrb
and
push
btr
xor
shl
mov
pop
sub
add
andl
pop
pop
in
xor
sub
pushf
push
cmpsb
sti
adc
outsl
jg
inc
and
out
arpl
decb
xchg
jmp
outsl
mov
lea
mov
mov
xchg
pop
scas
pop
repz
push
stos
xchg
adc
xor
popl
je
fs
mov
xchg
xor
sub
cltd
mov
stos
movsl
out
dec
jb
cmp
jo
dec
iret
xchg
es
rcrb
xor
js
out
and
into
dec
push
and
mulb
push
jmp
cmp
sbb
jg
nop
and
stos
leave
xor
push
xchg
cmp
push
in
jg
inc
out
sub
ja
xlat
dec
xchg
out
xchg
add
xchg
out
cld
shrl
or
jg
shrb
rclb
mov
lock
mov
add
mov
cmp
push
rcll
mov
sub
mov
jb
out
pop
loope
js
push
stos
fstps
push
clc
adc
lock
sbb
lods
shlb
cltd
cmp
push
test
shlb
sbb
pop
cmp
mov
jno
and
mov
cld
mov
xchg
push
mov
cltd
leave
loope
fs
cli
mov
or
xchg
mov
cwtl
adc
and
cmc
lods
mov
ret
or
orl
out
loopne
push
out
rclb
or
ror
int
inc
sbb
lea
and
lods
lcall
movsl
and
pusha
or
mov
xor
and
inc
sbbl
adc
gs
mov
aam
cmp
popa
cs
jns
xchg
xor
fimuls
shr
fidivl
call
andb
xor
or
in
in
cmc
push
push
dec
mov
add
xorb
sub
popf
add
cmp
fcmovu
rcll
test
add
pop
xor
add
ret
xchg
and
jp
push
outsl
ret
xchg
sbb
dec
sub
and
fidivrl
jg
js
sbb
test
mov
jnp
sbb
insb
push
pop
jno
popa
cwtl
pushf
shll
xor
sahf
xor
sahf
lods
push
xchg
pop
bound
add
mov
dec
mov
xlat
jmp
pop
enter
pop
cld
test
push
testl
mov
sbbb
xor
aas
adc
push
jbe
add
mov
xchg
and
cmp
cli
sahf
aas
lret
mov
lea
movsl
or
inc
inc
push
in
scas
rorb
repz
mov
out
adc
lret
pusha
or
pushl
jno
stos
mov
inc
pop
andps
cmc
xor
adc
xor
and
push
mov
insb
aas
clc
pop
fwait
dec
mov
push
or
imul
sar
or
or
fistpl
scas
cmc
add
std
sub
je
pop
xchg
outsb
push
hlt
push
lods
icebp
cmp
bound
call
pop
mov
push
jns
xor
add
pop
fisubrl
mov
xor
cltd
ret
insb
out
cwtl
arpl
icebp
jl
inc
and
sti
pop
or
jle
sbb
pop
mov
mov
imul
jge
dec
push
mov
xchg
lahf
sbb
jae
cmpl
scas
das
outsb
cmp
sahf
adc
pop
shrb
scas
daa
insl
adc
cmpsb
sbb
sbb
jecxz
xor
jecxz
fdivp
loopne
inc
or
inc
add
stos
push
mov
and
jmp
rorl
lret
push
inc
movsb
sbb
xor
imul
pop
jne
loop,pt
das
mov
push
sub
or
push
in
lcall
arpl
lods
scas
fldl
sbb
jbe
mov
xchg
hlt
nop
cmp
mov
inc
cmp
adc
fsubrp
inc
push
into
pop
out
fbld
shrb
das
fstps
sub
movswl
outsl
test
mov
cmp
or
jno
popf
inc
pusha
clc
push
repnz
popa
test
mov
in
aam
pop
int3
or
or
mov
pop
xchg
inc
dec
loop
jmp
fistpl
ret
sub
adc
xchg
int
movsl
outsb
xor
cmpsl
movsb
ret
sbb
dec
push
adc
rolb
call
cmp
xor
pop
lds
rcr
sbb
inc
push
mov
clc
rclb
jge
enter
sub
sbb
adcb
sub
pop
push
div
cmpsl
mov
jb
sub
rcll
shl
adc
loope
les
adc
call
cmp
movl
cmp
add
loop
aam
jns
das
add
out
dec
insl
test
sub
jg
mov
xchg
jle
orb
jmp
push
stos
xlat
push
jns
stos
in
test
das
out
movsb
insb
add
push
jge
push
jae
xor
mov
inc
shlb
adc
xlat
repz
adc
shll
sahf
gs
ds
or
out
pop
adc
aam
push
nop
loop
push
les
mov
testl
cmpb
mov
scas
mov
cmpsb
add
dec
push
cli
scas
mov
jae
scas
xor
push
jl
popa
lahf
sub
bound
outsl
inc
xor
shll
out
mov
std
ljmp
bound
ficompl
pop
repnz
xlat
dec
and
fidivrl
jmp
sti
xchg
hlt
test
mov
jp
mov
inc
ret
jne
add
lock
icebp
insb
out
mov
mov
or
xchg
mov
xchg
insb
pushf
je
bound
push
and
popf
mov
jne
movsb
fsub
mov
dec
aaa
xor
inc
outsl
jge
jb
and
xchg
cmp
test
aam
dec
rorb
loopne
clc
ja
inc
mov
rorl
jne
add
fnsave
mov
xchg
ret
push
es
pop
inc
data16
std
sti
iret
in
and
xchg
jae
jb
mov
jmp
cltd
sbbl
fwait
repnz
jle
ret
pop
and
outsb
inc
and
pushf
fs
mov
push
push
sbb
xlat
jno
aad
outsb
arpl
or
ja
cli
outsb
aad
aaa
mov
les
jecxz
adc
fdivs
pop
orb
out
xor
sarb
jns
dec
pop
sti
sub
inc
dec
arpl
std
mov
enter
pop
jmp
insl
int3
pop
cmc
rol
fidivrs
cmp
sbb
dec
lcall
out
movsl
enter
mov
out
sbb
xor
xchg
pop
xchg
push
add
jbe
dec
jb
cmp
add
mov
cmpb
push
mov
pop
pop
movsb
pusha
fidivrl
int3
sub
movsl
or
fists
sbb
sti
rep
inc
jno
addb
int
popa
xchg
cli
push
bound
js
fstl
lea
xchg
sbb
sub
and
lcall
orl
cltd
into
dec
in
loope
popf
aas
pop
ret
data16
adc
sub
pop
xor
lret
push
fidivs
cmp
int3
sbb
dec
mov
push
add
cmc
movsb
jae
test
leave
fnstsw
cmp
jno
pop
cld
jp
in
test
mov
dec
adc
adc
push
cld
outsb
mov
adc
nop
sub
and
orb
push
ds
cs
lret
repnz
popf
mov
push
add
aam
sub
add
fldt
test
loopne
jp
xlat
scas
push
in
inc
add
fidivl
cmp
cmpsb
incb
imul
xor
cmp
adc
mov
cltd
shrl
push
sub
js
clc
vmovntps
inc
jns
lods
add
fisttpll
jg
cmp
mov
fisubl
stos
pop
mov
fadd
push
and
inc
lret
and
mov
js
sqrtps
jle
imul
mov
cmpsb
sub
pusha
das
movsb
arpl
mov
lds
cmp
mov
cmpsl
jmp
xchg
inc
imul
dec
call
test
jp
sti
dec
or
push
add
xor
mov
lahf
ja
sub
das
mov
sti
sub
in
jo
mull
push
mov
push
mov
jp
inc
int
mov
mov
sbb
xor
popa
xchg
in
xchg
push
xchg
cs
jns
jns
or
mov
mov
ficomps
jg
sbb
push
mov
cmc
aad
push
test
stos
outsl
aas
push
dec
rclb
out
inc
aam
insl
or
add
sbb
ljmp
je
ret
push
mov
xchg
push
mov
push
test
out
fdivs
cmp
orl
sahf
and
adc
inc
cs
mov
fnsave
jns
pop
dec
ficoml
jle
jbe
pop
insl
dec
sbb
add
stos
dec
sub
mov
in
aas
imul
push
icebp
fcoms
sbb
aas
push
add
call
dec
enter
mov
clc
les
arpl
push
mov
cli
mov
icebp
cwtl
sub
call
add
mov
lds
or
testb
pop
push
jg
dec
jl
xor
push
xlat
mul
pop
cld
pop
mov
in
fsubs
test
cmp
mov
sbb
out
push
sbb
loopne
adc
or
adc
gs
mov
hlt
cld
cmp
push
rorb
mov
cmpsb
mov
test
pop
adc
enter
fucompp
fcompl
mov
aam
popf
loop
les
jbe
push
sbbl
mov
mov
cmp
sub
inc
inc
dec
cs
sub
inc
add
sub
mov
pop
xchg
outsb
cld
dec
mov
push
cld
mov
outsb
push
pop
xchg
dec
pop
hlt
or
push
leave
mov
stos
and
add
push
add
sub
dec
dec
pop
sbb
imulb
shrb
shrb
into
xchg
cs
movsb
fsubr
xchg
xor
lahf
popa
dec
sbb
or
jle
mov
fimuls
aad
mov
mov
cmpsl
movsl
sahf
hlt
mov
mov
dec
mov
dec
pop
cs
in
xor
push
mov
ret
mov
dec
add
lcall
dec
jnp
subb
testl
lret
into
aad
in
mov
daa
into
adc
add
fs
push
cmc
icebp
clc
test
or
or
or
pop
stos
in
fnstcw
pop
fdivl
imul
rorl
into
es
mov
and
dec
add
pop
or
push
jp
shrb
call
mov
iret
dec
push
imul
cmp
loopne
repnz
iret
out
popf
lea
add
sbb
incl
mov
hlt
hlt
insl
adc
frstor
inc
jnp
je
sub
sbb
sbb
iret
mov
push
rcl
dec
dec
cmp
out
or
loop
arpl
sub
xor
sar
lods
add
jl
mov
and
icebp
adc
inc
mov
and
subb
cmc
cmp
sub
rolb
popf
sahf
int3
ja
mov
into
cmpsl
jb
xchg
fwait
or
mov
shl
fisttpl
sub
data16
and
in
mov
aas
add
dec
cmpsl
daa
xchg
xchg
bound
mov
dec
movsb
movsb
xchg
js
push
cmpsl
fsubp
call
inc
test
gs
cmp
sub
int
fisubl
sbb
pop
pushf
push
mov
testl
pop
xor
xchg
push
sbb
jle
cmpsb
leave
add
inc
push
notb
pop
or
xchg
repnz
into
push
ds
insb
lcall
imul
loope
lock
imul
stos
int
inc
arpl
cmp
fnstcw
jl
mov
sub
sbb
add
lcall
xchg
dec
xchg
mov
lods
cmpsl
fwait
rorl
pop
push
je
mov
push
cltd
xchg
adc
ffreep
or
add
sub
sub
mov
fdiv
lahf
test
idivl
push
lret
pop
push
cltd
push
push
dec
inc
jecxz
in
pop
imul
sbb
arpl
or
xchg
in
sar
jne
imul
stos
push
mov
test
pushf
ljmp
scas
mov
xor
pop
test
movsl
ja
in
sub
jo
cltd
pop
sub
out
sbbb
ret
or
and
jb
int
cmp
push
outsb
out
div
aad
in
jle
add
sub
jmp
inc
aam
and
or
scas
jne
icebp
jg
scas
sub
mov
test
mov
mov
cltd
push
test
aam
pop
push
mov
sub
bound
js
xor
mov
mov
int
ss
push
jp
dec
clc
xor
imul
jmp
and
sbb
push
das
push
xor
lods
frstor
std
iret
clc
out
pop
popf
loop
mov
out
lcall
aam
in
fiadds
add
mov
jp
dec
scas
xor
or
and
lods
mov
jb
out
iret
nop
sbb
addb
aas
fistpll
punpckhbw
repnz
xchg
cwtl
icebp
loopne
mov
inc
popf
das
xor
mov
aam
xor
stos
mov
xchg
stos
je
aam
cmpsb
cltd
lea
jl
push
shlb
les
adc
ss
mov
mov
cmp
aas
repnz
scas
jmp
sub
fs
ret
fdivrs
js
fwait
or
ds
repnz
xor
adc
and
mov
aam
jmp
insb
fs
mov
and
mov
test
outsb
lea
mov
push
call
dec
stos
push
and
jns
rcr
xchg
mov
testb
enter
stos
lahf
dec
push
ds
jnp
lret
adc
pop
in
mov
xchg
pop
imul
lds
sbb
aas
leave
xor
inc
out
xchg
push
mov
test
jecxz
mov
xchg
push
inc
push
out
stos
and
clc
xor
pop
test
aas
add
push
xchg
in
sbb
xor
pop
mov
out
inc
lahf
mov
xchg
data16
daa
in
add
inc
test
mov
mov
jne
dec
cli
push
popa
in
out
inc
xor
insl
xchg
jno
add
inc
add
cmp
mov
dec
mov
jae
addr16
mov
mov
add
xchg
cmp
cltd
and
dec
popa
leave
ja
jge
sub
sub
dec
xor
jae
nop
push
ss
xchg
cmp
fwait
or
es
and
mulb
in
dec
stc
jecxz
jb
in
nop
sahf
push
dec
int
sbb
ljmp
cs
jecxz
jo
mov
inc
loope
mov
add
je
or
enter
xchg
lret
rcll
add
shrb
das
test
jge
cltd
jnp
xchg
out
jp
mov
add
xorl
jle
push
pop
mov
mov
test
mov
add
dec
mov
fwait
add
scas
mov
movsl
dec
push
push
xchg
das
adc
iret
dec
jmp
jns
push
icebp
xchg
decb
adc
out
xor
mov
aaa
mov
cmp
aam
mov
fdivp
clc
xchg
dec
lock
adc
pop
inc
sbb
adc
es
cmp
inc
shl
test
addr16
jge
int3
les
repz
sub
pop
aaa
inc
maxps
aad
lea
movsb
fists
imul
daa
movsl
xchg
and
mov
jbe
jns
sbb
nop
imul
push
ret
in
pusha
jmp
std
clc
jmp
sbbb
jmp
jbe
test
or
mov
sub
mov
dec
push
xchg
sbb
pop
imul
loope
inc
adc
fs
push
sbb
inc
pop
inc
xchg
pushf
lods
or
inc
jnp
les
sub
and
mov
out
ds
cmp
daa
in
xchg
dec
and
cmp
jnp
and
xor
repz
repz
push
fsub
std
icebp
pop
cmpsl
aas
add
popf
dec
js
add
xor
mov
cmp
adc
hlt
dec
sub
push
sub
scas
ficomps
sub
out
and
fs
sbb
sbb
dec
mov
daa
cli
push
mov
mov
hlt
and
sub
mov
dec
push
js
sub
push
mov
ljmp
mov
pop
push
push
loopne
movsb
push
inc
stc
std
dec
dec
push
sti
mov
aad
xlat
mov
dec
and
stos
push
inc
movsb
pop
xchg
je
insb
loope
mov
add
out
popf
dec
mov
hlt
fcomip
jno
push
xor
jo
sub
pusha
int
mov
xchg
movsb
sbb
mov
and
and
rcl
inc
xchg
push
jecxz
and
cwtl
pop
stos
in
jo
leave
dec
push
and
pop
push
xchg
in
das
xchg
repz
loopne
sahf
cld
andl
loopne
jle
xor
or
push
das
cmpsb
or
pop
mov
rcl
in
call
cltd
outsb
inc
subb
dec
fs
rolb
push
test
dec
cmpsl
clc
not
jno
out
xchg
adc
or
pop
rorl
adc
shll
aam
in
rolb
mov
jge
shll
dec
pop
inc
jne
sbb
mov
loopne
dec
and
dec
test
stos
jl
cmp
mov
xor
ret
xor
std
out
aad
mov
push
add
test
imull
xchg
add
or
mov
push
js
pop
xchg
out
insb
push
lea
insl
mov
jno
mov
push
mov
sub
stos
inc
jo
mov
mov
sbb
pop
negl
xchg
movsb
lods
cli
and
aad
mov
movsl
iret
mov
xchg
lret
popf
popa
push
out
test
cli
and
sub
in
subb
pop
call
movsb
fwait
mov
lock
or
push
jo
nop
adc
adc
addr16
lea
gs
sbb
sub
aad
mov
scas
push
mov
in
or
xor
mov
xchg
mov
sbb
stc
imulb
add
nop
mov
bound
mov
xchg
in
aas
lahf
pop
arpl
je
aad
inc
pop
hlt
sbb
popf
cmp
mov
push
pusha
addl
jns
arpl
in
jge
dec
cmp
insl
dec
js
push
pop
dec
dec
jl
std
pop
cmp
aas
push
test
xor
gs
ret
push
jg
call
push
xchg
dec
jb
lret
xchg
mov
adc
ret
mov
add
leave
xchg
mov
xchg
inc
mov
xchg
repnz
jge
jg
xlat
loope
dec
in
push
andl
gs
test
stos
add
pop
mov
push
rcrl
les
push
push
xchg
push
shll
lahf
fs
out
dec
hlt
mov
cmp
mov
pusha
div
mov
pusha
lcall
jne
add
int3
aam
lods
test
push
pop
mov
movsb
add
adc
push
xor
push
scas
loopne
xlat
xchg
add
inc
or
pop
jmp
pop
jnp,pn
mov
xchg
mov
adc
ret
mov
push
jecxz
sbb
cltd
inc
sub
xchg
lcall
in
sub
leave
pop
insb
fwait
adc
or
fsubs
mov
loop
addb
jae
fwait
adc
aad
and
test
jnp
add
lock
sbb
cltd
dec
fdivrl
addr16
out
mov
addl
pushf
fwait
push
or
fisttpll
movsb
inc
mov
scas
icebp
add
inc
mov
jns
dec
out
inc
stc
add
cmp
push
jecxz
and
inc
adc
mov
mov
push
xlat
jmp
cld
and
aas
pop
sarb
xor
and
fwait
enter
adc
cmp
push
adc
lods
mov
sbb
sti
pop
outsl
add
mov
fiadds
mov
adc
inc
pop
xor
push
arpl
lret
out
push
or
cmp
or
rol
xchg
daa
add
mov
adc
or
js
jbe
xchg
test
jns
lcall
sub
mov
repnz
jge
arpl
lahf
xor
xchg
cmpsb
out
pop
aas
daa
jno
in
outsb
ljmp
or
mov
mov
std
lds
orl
sub
and
mov
dec
push
sub
mov
dec
ret
xchg
dec
xlat
fldenv
jmp
pop
and
rep
cmp
sbb
pop
fwait
inc
jp
int
sbb
dec
jno
sub
mov
cmp
dec
dec
mov
add
lret
dec
hlt
lods
mov
loope
test
inc
add
cmc
mov
aas
mov
sti
out
nop
test
cli
inc
aas
push
xchg
fcmove
sti
add
cmp
shr
jge
jecxz
jno
lret
sbb
jae
push
movsl
pop
inc
fistps
mov
jp
daa
adc
jnp
mov
aas
outsb
add
xchg
jle
inc
rclb
cmp
std
xlat
adc
mov
push
xchg
push
xor
mov
inc
xor
mov
mov
mov
test
and
and
pushf
addr16
sub
or
ret
mov
push
popa
out
test
jle
pop
decl
mov
or
psrlw
add
mov
ds
xchg
repz
int
jno
cmp
push
lcall
xchg
in
mov
roll
or
out
cmc
mull
cld
fistl
movsl
add
das
push
mov
mov
cmc
jb
bound
fwait
add
adc
mov
sbb
inc
jo
mov
inc
cmp
sarl
test
xchg
mov
movsb
lcall
mov
shl
push
inc
addl
pop
fwait
pop
in
xor
or
bswap
jge
xchg
sub
xchg
pop
add
int
test
outsb
mov
lods
stos
cmpsb
dec
or
jbe
outsb
mov
clc
cmp
cmpsb
lahf
ret
adcl
dec
add
xor
rcrl
adc
push
mov
jb
sbb
jecxz
in
xchg
sbb
mov
add
inc
cmpsb
mov
push
cmp
push
xorl
adcl
push
xor
fcomi
add
dec
mov
xchg
popa
pop
bound
test
xlat
cwtl
mov
aaa
imul
idiv
hlt
cmc
and
push
jno
out
adc
xchg
add
shll
scas
movl
divl
std
sub
push
mov
cmpb
aas
fildl
push
testb
dec
push
rcr
pop
aaa
mov
xor
gs
cli
rolb
scas
lods
out
inc
repz
fs
push
add
fdivs
sbb
lcall
int3
je
dec
fs
xor
dec
stos
dec
cwtl
shll
xlat
mov
and
jecxz
mov
push
sbb
push
push
leave
inc
fadds
cld
sbb
cmpsb
andb
push
jnp
iret
jo
push
mov
mov
scas
into
jnp
sub
jge
mov
jl
inc
aaa
cmpsb
mov
outsb
pop
xchg
push
cld
jecxz
popa
and
dec
mov
lods
arpl
inc
fs
xor
jmp
sbb
leave
shlb
ss
mov
jb
aas
push
inc
out
dec
imul
and
sbb
and
test
cmp
clc
stos
iret
mov
inc
dec
xor
pop
dec
cld
push
negb
adc
std
scas
adc
jecxz
mov
lcall
cmp
mov
xchg
out
or
mov
jle
or
insb
mov
ja
jb
inc
test
sub
in
fcoms
or
sub
xchg
sar
jne
mov
ret
add
dec
movsl
mov
bnd
outsb
mov
fiadds
push
mov
mov
lods
jb
std
push
insl
dec
fisubs
leave
pushf
add
mov
jne
insl
fmul
pop
ljmp
lds
sub
icebp
jo
icebp
mov
lcall
loope
cltd
test
pop
hlt
jno
test
lret
popf
sti
push
ss
xchg
mov
repz
add
add
leave
sub
sub
pop
shl
xchg
sbb
nop
xlat
jbe
dec
or
stos
test
and
or
dec
or
xchg
push
outsl
divb
mov
out
adc
xor
rclb
int3
push
ret
test
sahf
cld
ret
addr16
ret
sbb
out
push
jle
sub
mov
jle
sbb
popf
je
jg
mov
sbb
les
fld
pop
lock
aas
mov
into
inc
or
out
push
das
enter
mov
cltd
cld
push
mov
sti
push
or
mov
aad
js
js
cmp
cmc
aas
movsb
or
push
cmp
mov
shl
dec
or
pop
jbe
cmp
test
jle
xor
daa
xor
xor
mov
pop
mov
cmp
push
jg
dec
sub
orl
outsb
mov
lcall
and
ret
ret
adc
stos
inc
xchg
sbb
add
roll
push
dec
lcall
mov
or
out
add
jge
mov
or
xor
scas
icebp
inc
lock
pop
test
fsub
pop
std
mov
loope
add
cmp
fldcw
xchg
or
push
adc
jg
add
mov
jl
notl
pop
pop
inc
cs
cmc
xor
add
popf
addl
add
fdivl
mov
shlb
pusha
in
jecxz
push
rcrl
pop
daa
sbb
arpl
adc
inc
test
movsl
or
push
cmc
pop
rolb
testl
and
js
ficoml
les
push
and
inc
addr16
shlb
outsl
fistpl
scas
cmp
stos
inc
adc
sbb
push
sti
dec
imul
jle
mov
popf
dec
dec
aam
sbb
xchg
xchg
sub
mov
dec
out
out
shl
or
cwtl
iret
sbb
sub
leave
dec
cmpsb
cmpsl
add
sahf
mov
pop
push
inc
movsl
lods
outsl
or
pop
cmpsl
aas
je
push
jle
sbb
bound
sti
cmpsb
mov
dec
and
and
add
scas
xor
or
dec
and
loopne
xchg
aam
cmpsl
test
jle
fldt
mov
mov
sub
aad
add
std
std
mov
push
push
leave
bound
xchg
ja
mov
jle
dec
dec
rcr
or
or
xor
inc
cld
imul
sbb
call
cltd
dec
cmpsb
fsubrp
rclb
loope
dec
or
pop
and
js
adc
loopne
stos
js
outsb
ror
aam
pop
xor
clc
mov
test
xchg
inc
add
into
loope
pusha
int3
jmp
and
aad
dec
fs
sbb
cs
adc
sbb
pop
jecxz
push
inc
mov
xor
repnz
xchg
fbstp
xor
jo
push
adc
lock
mov
aad
sbb
mov
mov
lret
hlt
dec
leave
dec
out
mov
or
xor
rcll
shll
or
outsl
cmp
in
jo
push
or
movsl
int
fisttpll
stc
loop
mov
stc
repnz
pushf
cmp
out
sbb
push
decb
mov
jg
in
inc
lahf
sub
or
pop
ret
xor
lea
add
adc
icebp
xlat
pusha
leave
lahf
lods
xchg
xlat
inc
in
pop
push
cmp
pop
test
ljmp
push
bound
mov
push
cmpl
movl
xchg
dec
xchg
mov
daa
cmp
es
out
es
in
mov
inc
xchg
or
rorl
std
jmp
xchg
push
mov
mov
in
dec
xchg
mov
scas
adcl
negb
clc
jne
outsl
xor
test
or
jb
jg
bound
sbb
add
daa
fcomps
lock
lea
std
mov
pop
dec
stos
insb
pop
push
subb
and
cs
int
cld
mov
loopne
imul
mov
or
repz
cmp
jle
jecxz
loop
xor
fstps
xor
mov
lret
mov
gs
icebp
sbb
sub
addl
out
outsb
cmp
iret
sub
stc
add
mov
adc
mov
push
outsl
cmp
ja
mov
dec
dec
fstps
push
mov
je
pop
push
or
inc
leave
jmp
mov
js
bound
inc
or
loop
mov
lods
jg
cli
aam
add
push
cld
and
pop
loopne
int
daa
inc
inc
lahf
cmc
mov
xchg
dec
out
je
gs
sub
out
and
iret
cmpsb
lods
inc
xor
pusha
loope
xlat
mov
mov
xchg
and
adc
scas
mov
xchg
leave
jae
cli
add
jae
xor
xor
pop
rorl
push
inc
sbb
cmp
sti
xchg
testl
iret
stos
jmp
push
xor
scas
lock
mov
loopne
jge
cmc
iret
mov
call
inc
fcompl
xchg
inc
sbb
dec
pop
inc
outsl
pop
cld
cmp
popa
mov
xor
int3
js
mov
pop
or
fimull
push
or
or
jnp
dec
xor
mov
jne
ja
add
or
out
xchg
sub
push
adc
mov
sub
mov
movsb
insb
push
rol
lret
es
adc
push
mov
mov
xor
pop
outsl
xchg
rcrb
dec
ret
ret
pop
and
stos
pop
pop
sbb
adc
dec
mov
out
movsb
adc
mov
pop
xchg
aad
mov
push
orb
inc
dec
adc
sbb
cwtl
inc
add
adc
jnp
sbb
ljmp
jg
xor
dec
aam
sub
cmc
into
jmp
adc
ljmp
in
add
sbb
sti
add
shrb
cli
inc
test
cs
test
arpl
lods
mov
and
test
incb
aam
stos
and
dec
inc
jp
or
aad
subb
int3
pusha
push
out
xchg
sub
repz
jmp
or
mov
inc
stos
dec
outsb
jmp
mov
imull
in
cmp
add
mov
jp
mov
mov
adc
mov
push
hlt
push
mov
dec
jecxz
dec
lock
popa
and
fadd
pop
int
sarb
mov
cs
sahf
adc
stos
push
imul
sbb
xor
in
adc
jg
and
leave
jmp
mov
aam
inc
filds
jb
mov
dec
into
adc
push
fstl
outsl
clc
push
js
inc
in
or
push
pop
std
and
sbb
repz
mov
js
or
outsl
fs
enter
out
dec
fs
inc
mov
add
xor
mov
mov
dec
shlb
mov
inc
add
aas
sub
sahf
aas
mov
inc
pop
hlt
push
dec
push
sbb
inc
mov
xor
push
sub
ror
mov
nop
pusha
in
xchg
xor
in
xchg
jecxz
imul
movsb
sub
sub
insl
sbb
mov
stos
fnstsw
ret
pushf
dec
adc
scas
jns
sub
pop
cmp
pop
lods
int
cmp
mov
pop
xchg
fildll
mov
xor
inc
dec
notb
fwait
addr16
push
mov
movsl
cmpsl
das
js
cs
jns
or
jae
insl
inc
mov
mov
jg
pop
lahf
mov
push
dec
loop
inc
mov
add
or
in
xchg
xchg
jo
dec
jmp
stos
pop
sbb
mov
dec
pop
sub
sub
mov
shufps
xlat
test
leave
xor
cmp
ss
mov
push
pop
push
fxtract
repz
jge
jae
pop
cmpsb
dec
adc
lcall
mov
pop
lods
xchg
ss
jns
or
aaa
push
loopne
sub
push
xchg
xlat
stc
into
ret
mov
pushl
jnp
hlt
addl
mov
ret
add
les
and
add
shll
adc
sbb
je
mov
outsl
mov
mov
adc
adc
pop
xlat
popa
mov
sub
wbinvd
pop
lea
push
lret
scas
pusha
xlat
inc
pop
push
out
pop
lret
xchg
inc
push
inc
lret
test
stc
ljmp
fs
or
pop
inc
lods
hlt
cmp
xchg
mov
shrl
dec
or
xchg
lahf
gs
outsl
inc
arpl
clc
cmp
out
sub
mov
adc
out
outsb
sbb
or
adc
and
call
sub
int
loope,pn
sahf
xor
jo
mov
jbe
cmpsl
sub
jmp
subl
sub
xchg
push
cmpsl
add
fstpt
mov
sbb
scas
dec
pop
pusha
push
jmp
sub
fiaddl
cmp
imulb
lods
jae
or
popa
mov
testb
mov
and
fidivl
inc
outsl
divl
push
pop
push
jl
fstl
cld
xchg
clc
adc
xorb
jbe
cltd
push
sub
push
ret
outsb
shlb
mov
hlt
cli
jg
jg
in
xchg
sbb
mov
mov
sub
push
mov
out
gs
cmp
popf
inc
pusha
fstpl
das
xchg
adc
or
imul
mov
dec
test
lods
and
movsb
cmp
sbb
push
sarb
jmp
push
mov
mov
jo
inc
cwtl
data16
ljmp
pop
fmull
push
inc
jnp
xchg
adc
dec
adc
mov
sbb
pop
pop
pop
jo
ds
push
pop
in
daa
mov
int
lret
sub
fisttps
push
repnz
jbe
xor
jno
xchg
mov
aas
xchg
mov
sahf
ds
sbb
mov
pop
shlb
jmp
jle
xor
push
clc
xchg
and
jp
push
rorb
mov
outsb
test
out
cmp
je,pn
dec
cmc
sahf
mov
hlt
push
popa
add
push
mov
jmp
xchg
addb
adc
or
xchg
les
cmpsl
std
mov
ds
or
pushf
dec
xor
std
sub
or
cmp
sub
scas
jmp
incb
push
cmpsb
testb
jo
lods
pushf
jae
mov
mov
mov
imulb
mov
cli
mov
push
pop
cmp
pop
lret
pop
pop
loope
ficoms
dec
sub
imulb
xor
pop
push
data16
test
inc
cmpb
sub
iret
mov
xor
add
out
stc
add
jp,pn
sub
cmpsl
adc
xchg
les
repnz
sbb
jb
movsl
bound
inc
mov
je
popf
mov
addb
sub
add
push
pusha
xchg
fcoms
jns
sbbl
roll
int3
in
or
dec
shrb
icebp
pop
std
xor
bound
xor
cmpb
es
pop
mov
stos
sub
insl
adc
es
dec
cmpsb
push
mov
lods
negw
dec
imull
les
movsl
sti
jl
fndisi(8087
std
mov
push
jb
ljmp
cld
iret
xor
lcall
pushf
cmpl
xor
iret
push
repnz
push
jmp
pop
fstps
mov
popf
dec
push
add
dec
cmp
cmp
or
or
pop
sbb
cmpl
rcrl
xchg
cmp
sbb
mov
mov
sbb
push
movsl
cld
insl
sub
insl
enter
sub
cltd
outsb
cmp
push
repz
ja
out
cwtl
je
in
sub
jb
and
xchg
pop
jmp
inc
xchg
lret
fwait
sub
rcrb
add
cwtl
inc
push
add
add
xchg
or
iret
inc
call
sub
fwait
cltd
shr
push
mov
push
pop
cmp
lret
add
mov
push
lret
loope
xlat
jns
pop
xor
mov
sbb
loop
sub
js
aaa
jbe
js
mov
std
ljmp
pop
add
enter
mov
cmp
add
pop
sbb
lds
leave
testb
dec
mov
fwait
jle
or
inc
sub
cltd
repnz
and
sarb
dec
xchg
sub
xchg
int
hlt
clc
popa
lock
out
out
fnsave
call
push
or
adc
cmp
pop
fcmovu
push
mov
xor
mov
and
lret
jbe
mov
or
mov
cmc
fldenv
sub
xchg
stc
cli
dec
insl
or
mov
sub
and
jp
sbb
sub
push
push
push
sahf
mov
rorl
das
mov
and
adc
cld
sub
clc
mov
jb
pop
mov
int
testb
push
outsb
and
push
mov
push
push
xor
hlt
pop
roll
cltd
pop
out
mov
push
sahf
ret
mov
inc
in
lea
pop
xlat
mov
ret
fincstp
lods
xchg
sarb
orps
cmpsl
add
sahf
into
loopne
lret
repz
fdivs
rorl
ss
push
int
jg
cmp
add
ret
in
pop
jnp
je
enter
jne
fwait
adc
push
int3
sbb
lahf
ds
xor
jne
je
rolb
sarl
mov
loop
jl
ret
clc
test
sarb
inc
fdivl
addr16
xlat
int3
nop
rcl
imul
in
inc
in
scas
out
cmpsl
rcrb
repz
enter
ja
mov
test
cld
rep
add
dec
scas
mov
mov
sbb
sbb
sub
fnstenv
and
sti
cli
mov
sbb
or
adc
fucom
pop
dec
add
fwait
cltd
enter
jle
adc
gs
iret
faddl
mov
jge
xchg
adc
push
mov
into
jp
lret
sub
fldenv
push
push
sahf
in
adc
out
in
or
loope
mov
mov
push
jne
ret
mov
in
sahf
test
push
insb
mov
shr
cmp
fimull
mov
add
xor
xchg
or
roll
sbb
adcl
push
inc
pop
test
loop
pop
dec
in
leave
add
dec
jge
rcrb
imul
xor
dec
sbb
jmp
arpl
mov
es
pusha
lret
loope
jno
inc
lcall
je
cmp
sub
sub
mov
inc
sub
adc
icebp
sbb
scas
jl
pop
xchg
fadd
cs
and
add
scas
mov
mov
mov
pop
cmpsb
or
test
fcompl
mov
addr16
cli
not
and
lds
sub
adc
mov
lods
rcr
inc
test
popa
repnz
pusha
out
dec
fdivr
imul
adc
pushl
push
mov
pop
test
and
push
adc
pop
enter
push
je
and
push
repnz
je
cmp
fwait
lcall
sbb
call
jecxz
jg
jae
lahf
loope
ret
lret
jo
lcall
lret
test
mov
jno
add
or
inc
jle
sub
and
push
xchg
ss
jmp
push
cmp
cli
movsl
lods
cwtl
loop
pop
mov
mov
ja
push
xlat
sub
add
inc
aaa
jg
jb
cli
mov
jnp
cs
sub
cmp
test
xchg
inc
dec
out
les
arpl
mov
cmpsb
not
and
inc
jle
mov
int
xchg
ja
call
cmp
adc
add
ret
adc
jno
icebp
mov
adc
push
mov
lock
xchg
mov
aas
mov
jns
aam
insl
or
push
push
xchg
fmull
outsl
cs
jno
add
ret
les
dec
int
mov
pop
std
cmpsb
sbb
ds
push
push
sub
repnz
jp
add
add
imul
dec
pop
lcall
std
test
out
rcll
leave
js
add
roll
mov
idivl
mov
mov
push
push
ja
hlt
rorb
lock
sbb
xchg
inc
std
out
jno
xor
adc
jl
sbb
mov
je
mov
lret
fdiv
rclb
hlt
lods
outsl
pop
shrb
mov
xor
aas
movsb
sahf
dec
jecxz
insb
shlb
or
sbb
leave
dec
leave
cli
out
jno
jne
mov
jae
imul
outsb
pop
stos
fs
cli
mov
sub
xchg
or
fstl
stc
pop
inc
mov
cs
fsubr
jo
outsl
mov
movsl
fcoml
push
sbb
iret
jl
nop
jnp
fs
cmp
mov
xlat
out
imul
pop
ret
cmp
sbb
mov
xchg
sub
test
sbb
add
iret
push
roll
mov
push
das
inc
hlt
pop
cmc
movsl
mov
xor
mov
xchg
fimuls
adc
jnp
call
das
loop
lahf
cli
sub
jmp
popa
aad
fistl
add
fdivs
mov
aam
add
and
and
ljmp
dec
inc
movsb
and
sbb
test
aad
sahf
aaa
fistl
ljmp
aaa
in
pop
mov
inc
inc
or
and
fidivs
add
and
add
shll
mov
cmc
std
sbb
aad
dec
xor
rorl
or
xor
inc
lods
leave
orl
mov
pop
jg
and
inc
outsb
push
mov
mul
ss
dec
xor
shlb
ret
dec
loop
push
inc
dec
pop
inc
inc
mov
mov
cmc
jbe
loopne
aad
mov
hlt
imul
rclb
in
es
mov
cli
fdivl
mov
adc
pushw
int
call
in
fwait
mov
xor
inc
int
dec
cmp
jno
push
pushf
outsl
jmp
add
outsb
insb
andb
int
das
aad
es
aad
adc
out
dec
jne
das
cmp
xchg
lods
stos
xor
xor
add
mov
lahf
rcrl
in
jecxz
xchg
sub
cld
fs
lea
pop
mov
out
movsl
cmpb
scas
sti
sub
push
popa
xchg
push
push
mov
aam
mov
mov
mov
iret
or
add
cmp
cmp
or
dec
outsl
add
jns
cwtl
into
jno
adc
xor
fstp
out
mov
dec
pop
call
out
add
dec
test
cltd
loope
xor
int3
std
stc
gs
xor
cmp
cmc
shll
cld
jns
sub
mov
jl
adc
push
fstpl
pop
xor
hlt
hlt
lods
rcrl
inc
popa
push
leave
lret
lahf
inc
cltd
inc
adcl
rcrl
jp
stc
ss
loope
std
push
test
push
lea
ss
js
std
mov
xchg
shlb
cld
int
add
cltd
sub
je
xchg
cmc
sub
lods
mov
test
and
or
mov
sub
ret
leave
sub
mov
iret
xor
pop
hlt
xchg
out
pop
push
fs
and
and
mov
add
pop
pop
fistl
or
adc
inc
call
ja
push
jle
popa
icebp
xlat
repz
test
movsb
pmaddwd
lret
sbb
cmp
iret
fsts
push
jb
xchg
jmp
mov
jl
loopne
inc
cmp
lahf
add
inc
jl
out
sbb
cmp
mov
sahf
call
test
push
out
pop
mov
movsl
leave
stos
int3
xchg
cmpsl
lea
lods
jnp
xor
lods
mov
xchg
mov
xchg
lahf
inc
sbb
jb
xchg
inc
setle
mov
stos
stos
pusha
add
jbe
stos
mov
and
movsl
pushf
mov
mov
ret
aad
scas
jns
mov
inc
in
nop
cmp
jecxz
xor
jnp
cmp
xlat
test
iret
leave
hlt
mov
adc
mov
pop
cmp
sti
jle
bound
push
mov
scas
push
push
je
test
xchg
dec
das
aad
pushf
outsb
test
andw
or
subb
inc
nop
leave
pop
fs
sbb
ljmp
pop
ficomps
lds
ror
into
jne
dec
jne
cwtl
mov
mov
push
mov
xor
cwtl
cs
adc
xor
in
push
pop
lea
cld
or
rolb
mov
aaa
push
jmp
fstpt
cwtl
pop
repz
fiaddl
mov
mov
sbb
nop
loope
jmp
mov
jmp
xchg
xlat
and
ja
aad
cmp
lea
mov
dec
push
cs
add
mov
jl
push
mov
rcrb
mov
xchg
xchg
shrb
ret
stos
cmp
test
push
out
jge
leave
stos
movb
dec
xor
pop
sbb
xor
mov
orb
aam
sbb
pop
pop
adc
lcall
aaa
pop
jnp
sub
fiaddl
mov
and
lods
movsb
or
lock
push
adc
pop
sbb
cmp
test
cmpsb
adc
mov
xor
shrl
mov
stc
gs
and
pop
pop
push
inc
mov
adc
arpl
push
adc
hlt
shr
shrl
subl
xor
xchg
inc
arpl
in
mov
test
and
cld
cmc
divb
push
push
data16
adc
insl
and
hlt
and
outsl
sub
adc
adc
pop
push
fbstp
lcall
pop
popl
lret
fsubrs
int
xchg
add
sbb
rorb
dec
xchg
lret
fs
ds
test
pop
jmp
fdivl
adcl
pop
stos
in
lcall
jae
filds
add
jne
shlb
lcall
push
xchg
inc
push
jg
dec
int3
sub
mov
xchg
mov
out
pop
decl
pushf
pop
mov
inc
testb
add
jne
inc
pusha
mov
out
pop
mov
icebp
std
hlt
ds
dec
jmp
loop
jo
das
jg
sti
inc
mov
cld
push
call
ljmp
dec
les
cmp
dec
stc
cmp
rol
mov
ja
jg
and
fwait
scas
push
lret
add
cs
inc
dec
cs
dec
push
push
das
dec
push
push
mov
daa
xchg
pushf
mov
cmp
ficomps
ret
xchg
cmpsb
pop
and
rorb
cli
repnz
divb
or
loopne
jno
ds
out
into
mov
jge
and
das
or
sarb
sub
mov
jg
inc
imul
xchg
cmpsb
or
adcb
in
pop
adc
lods
js
ljmp
insl
stos
xchg
ljmp
dec
dec
and
mov
lea
aam
cmpsb
ljmp
dec
sub
rcl
mov
dec
clc
sub
icebp
rolb
jno
mov
push
or
xor
ja
ds
int
or
mov
push
xchg
std
icebp
mov
decl
bound
adcb
sti
mov
sub
pop
out
std
aaa
jecxz
dec
nop
cmpsb
cmp
lea
mov
mov
jg
loope
mov
stc
test
fisubs
sbb
mov
lcall
les
xlat
mov
je
cmp
mov
pop
lds
adc
int
sub
cmp
ficoml
or
adc
int
and
adc
mull
cld
cmp
addr16
bound
mov
sbb
test
sub
imul
mov
scas
ficompl
or
xor
and
xchg
les
push
pop
fsts
sahf
or
xor
jb
out
jbe
test
scas
fwait
mov
sub
mov
cld
jge
jb
pushw
outsb
lods
movsl
jns
sbb
pop
into
sti
xor
enter
pop
mov
flds
iret
jle
out
repnz
inc
pop
add
in
ficoms
inc
in
into
push
push
cpuid
ss
stos
inc
adc
movsb
mov
lds
addb
daa
adc
lcall
loopne
jbe
add
xchg
or
inc
and
jnp
add
inc
dec
jbe
add
pop
popf
sbb
shrl
pop
lods
dec
push
jnp
daa
and
cli
shll
or
in
sbb
in
jmp
lret
ljmp
loopne
push
pop
cmp
pop
fdivr
pop
mov
out
pop
pushf
fisubrs
pop
xchg
mov
cmpsb
jg
in
cmc
pop
lds
push
fisubrs
xchg
inc
sbb
ret
repnz
jmp
imul
dec
jne
lret
cmp
inc
std
mov
in
es
stc
add
fidivrs
sub
cmp
fiadds
rclb
adc
pop
sub
movsl
fsubr
jnp
lret
lds
mov
iret
push
popf
mov
dec
xchg
ja
mov
test
rcr
dec
std
xor
stc
movq
push
sbb
ret
lahf
pop
add
pop
sarl
jno
ret
sub
vpinsrw
adc
stos
rcrl
loope
pop
push
aad
xor
mov
and
push
jae
lret
jns
sub
fwait
pushf
sub
mov
cs
or
pop
sbb
jmp
lods
cmp
lock
stos
and
pop
sbb
es
rcrb
inc
insl
lcall
mov
call
sub
addl
mov
and
ljmp
jae
inc
mov
loopne
in
pop
loope
jb
ficomps
lds
sub
imul
push
mov
dec
dec
inc
push
add
pop
and
or
out
call
adc
insb
pop
pop
movsb
adc
pop
lret
mov
mov
lcall
push
pop
jle
ss
or
add
ljmp
cmp
arpl
fcompl
push
dec
and
sub
adc
daa
mov
aas
mov
test
xchg
lods
js
push
pop
dec
rclb
mov
aad
xor
in
repz
or
sbb
movsb
push
imul
rcl
and
and
scas
jmp
in
ljmp
cmp
icebp
pop
scas
loope
addr16
std
xchg
lock
stc
mov
push
push
arpl
mov
fisttps
xchg
inc
push
mov
in
xor
push
js
in
dec
or
fwait
or
push
push
mov
hlt
mov
stc
push
es
mov
gs
call
cli
mov
in
loopne
repnz
in
imul
int3
pop
pop
mov
shlb
inc
sbb
jo
pop
popf
xchg
push
or
pop
and
ret
inc
adc
adc
ret
sub
xor
mov
and
pushf
cmc
scas
inc
out
and
mov
inc
sbb
mov
adc
lods
faddp
adc
push
rorb
fisttps
mov
mov
mov
pop
pop
movsl
mov
scas
adc
xchg
loope
add
ret
dec
movsl
rorl
push
movsl
push
mov
cmp
popa
sahf
leave
push
out
mov
sub
hlt
loope
jp
sbb
sub
mov
inc
xorb
mov
mov
test
xor
sahf
mov
aas
into
in
add
sub
repz
cld
xor
mov
in
les
in
jne
test
fmull
xchg
mov
pop
dec
shlb
int3
sub
inc
sti
cld
add
pop
sahf
pop
push
jne
sub
xor
add
push
aad
out
outsb
sbb
jmp
mov
loope
lods
push
js
mov
data16
adc
adc
cs
jge
cmp
iret
sub
js
pop
pusha
xor
inc
push
xchg
xchg
cs
bnd
mov
ljmp
jp
addr16
hlt
adc
out
jmp
lar
loopne
call
repnz
adcb
out
xor
dec
and
loop
push
cmpsb
std
inc
mov
mov
push
aad
mov
scas
and
xor
cmc
clc
add
cs
js
jl
sahf
popa
das
mov
in
dec
int
adc
pop
sbb
adc
and
cmp
dec
fadds
imul
or
lea
xchg
and
or
mull
outsl
or
arpl
push
out
jne
add
sbb
rorb
mov
jmp
mov
fucomp
adc
jb
bound
mov
sub
out
scas
jg
out
push
lods
daa
pop
inc
pop
mov
rorl
sub
andb
cmc
cwtl
mov
and
push
ja
in
sbb
pop
mov
and
std
jae
jge
in
cmc
mov
jl
push
push
adc
jno
inc
fs
jecxz
mov
mov
mov
into
imul
inc
sub
xor
cltd
nop
test
out
xor
pop
in
inc
stos
mov
into
mov
out
lea
insl
test
in
fucomi
inc
sti
lds
sub
add
in
mov
jb
xchg
mov
mov
loop
cmp
or
mov
cmp
scas
cmp
cli
loop
push
les
mov
add
dec
dec
test
dec
add
mov
rcr
imull
add
test
test
inc
test
and
or
sbb
dec
mov
out
out
out
cmove
xor
cmpsl
mov
ret
dec
push
test
dec
and
sub
je
stos
sub
add
or
leave
dec
xor
adc
aad
push
mov
dec
xchg
sti
sub
mov
mov
out
jne,pt
aam
js
jecxz
jp
lock
insl
test
outsb
test
cmpsl
cmp
cli
dec
mov
rdpmc
stc
dec
repz
inc
xor
imul
mov
sbb
sbb
and
xor
out
pushf
cmp
sbb
sbb
lods
in
and
inc
ds
inc
push
inc
dec
pushf
fldenv
sub
and
dec
outsl
mov
xchg
or
dec
xchg
adc
adc
sub
int
push
nop
shlb
gs
xchg
and
fcmovnb
fstps
pop
into
insb
imul
or
cmpl
xorb
sahf
fiaddl
mov
cmp
repz
shlb
dec
dec
and
idivb
imul
xchg
rclb
or
push
aam
dec
xor
and
sub
push
push
or
or
pop
loop
jmp
jmp
sbb
pop
mov
stos
xlat
aad
testb
jecxz
stc
cmp
lds
hlt
loope
and
cmp
jae
xchg
xchg
jg
mov
pushf
jb
push
cli
mov
in
enter
inc
nop
mov
stc
sub
fsubl
adc
add
sub
push
pop
flds
or
mov
pop
imul
mov
or
sarb
and
clc
flds
clc
push
push
push
inc
vshufps
dec
cs
adc
shl
xchg
jmp
into
adc
shl
fnstenv
lret
cmpsb
or
xchg
lahf
popf
mov
imul
add
sbb
mov
fimuls
test
call
call
jb
inc
add
arpl
xchg
jl
sbbl
mov
jae
mov
add
sub
mov
das
cld
clc
loop
add
add
jnp
in
sbb
ja
sti
push
pushf
data16
cli
and
scas
mov
push
jo
repnz
lods
xor
cli
int
adc
sbb
divb
clc
pop
lcall
xchg
lea
pop
jle
xor
cmp
cmpsl
add
lea
dec
push
dec
call
adc
xor
xor
dec
lods
cmp
in
inc
out
lahf
push
pop
mov
fldenv
loope
fdivl
pop
adc
sbb
nop
dec
jg
aaa
leave
pop
mov
mov
jmp
pop
aam
push
or
aam
dec
sub
lret
mov
fistpll
mov
imul
rcrl
sub
mov
mov
gs
sti
aam
xor
jb
dec
mov
jnp
xor
clc
adc
xor
pop
push
add
daa
mov
shrb
fistpll
adc
cli
out
ret
jns
dec
mov
ret
repnz
iret
dec
data16
xor
movsl
fwait
shll
test
xor
and
leave
push
ja
imulb
pop
sub
mov
into
jecxz
cmp
inc
icebp
pop
outsb
fs
mov
lahf
enter
mov
xchg
ret
jae
or
pushf
jae
fstpl
daa
sbb
push
sub
or
mov
insl
or
add
in
push
mov
push
scas
push
add
in
jae
jle
dec
loopne
push
push
int3
inc
aam
push
fisubrs
adc
pushf
icebp
inc
mov
xchg
cmp
xchg
mov
int
cmp
orb
outsl
mov
pop
xor
popa
xchg
push
shrb
lahf
sbb
push
fstpt
enter
movsl
dec
add
lods
adcl
push
xor
fimuls
sbb
es
cmp
mov
rcrl
pop
stos
jno
gs
xchg
loopne
insl
loop
dec
add
mov
dec
mov
out
ret
fwait
add
jne
pop
jns
sub
push
xchg
jno
xor
jecxz
sysret
lcall
daa
push
loope
mov
push
xor
add
out
jg
push
icebp
fcomi
jmp
iret
leave
pop
sbb
sbb
aad
cmpsb
mov
pushf
or
mov
push
cwtl
jecxz
insb
scas
xchg
loopne
je
iret
jo
negl
jmp
add
jne
dec
push
clc
ds
insl
shrb
cvtps2pi
cld
xchg
jecxz
push
mov
mov
dec
pop
lods
mov
outsb
jle
push
cmp
mov
mov
jnp
mov
jnp
add
sbb
imul
mov
test
cmp
push
mov
dec
pop
adc
push
icebp
inc
add
loop
mov
ds
cmp
jnp
dec
in
inc
test
inc
cld
xor
dec
imul
outsb
cltd
rorb
or
sbb
xchg
mov
and
repz
clc
mov
add
fucomip
pop
dec
cld
mov
imul
mov
sub
cmpsl
leave
xlat
add
cld
dec
lods
mov
scas
mov
aaa
xchg
pop
jno
mov
push
ds
lods
mov
loope
fidivrs
sbb
leave
imul
fs
mov
pop
int3
push
loope
rcr
rolb
and
roll
filds
mov
adc
stos
pop
out
popf
stc
je
shlb
mov
in
jl
xchg
sahf
pop
subb
mov
andb
mov
cmp
insb
pop
int3
push
push
int
aam
jle
xchg
int
or
add
test
aam
add
cmpl
inc
push
mov
mov
sbb
in
jno
pushf
lds
fisttps
outsb
imul
ljmp
ljmp
sti
pop
std
imul
test
push
mov
test
outsl
jle
and
outsb
and
mov
xchg
out
faddp
sbb
test
lods
data16
movb
mov
mov
mov
bound
mov
jb
jns
pop
jmp
inc
cs
aaa
jmp
inc
inc
fisttps
cs
mov
lcall
adc
pushf
nop
clc
call
aad
push
sub
or
push
push
inc
les
sbb
sbb
sbb
jbe
adc
mov
push
fisubrl
lods
test
fcmovb
das
cli
fcomp
and
aaa
xor
divb
popl
imul
and
jle
scas
jge
pop
sub
push
cwtl
push
cld
das
fldcw
and
pop
lahf
movsl
jmp
outsl
mov
subb
stc
ret
push
adc
lret
cmp
sahf
fisttpll
sub
xchg
mov
out
or
mov
clc
mov
insl
es
dec
pop
clc
xor
pushf
rorl
pop
sti
jae
mov
dec
scas
dec
cmp
and
cs
fisttps
push
adcb
jp
mov
jmp
xorb
pop
or
push
je
negl
adc
inc
aad
mov
aam
and
fildl
ret
add
fs
add
sub
loopne
adc
test
imull
rcr
mov
pusha
outsb
dec
mov
jmp
add
dec
pop
jecxz
adc
jbe
xor
shll
loope
mov
test
fbstp
lods
sbb
fsubrl
push
lea
xchg
sub
mov
xor
cmpsl
in
ret
repz
push
pusha
jge
cmpsb
inc
sub
push
das
push
repz
scas
dec
push
loopne
cli
cmp
int3
jo
lcall
sbb
movsb
mov
sbb
pop
jns
add
sub
fstpt
fs
xor
mov
adc
jnp
pop
jo
pop
mov
xchg
and
popf
test
popa
fstp
pop
clc
xchg
sti
cltd
sbb
aaa
ds
fistl
adc
xlat
pop
popf
dec
sub
outsl
xchg
xor
stc
and
bswap
xchg
gs
jmp
inc
mov
mov
into
add
stos
pop
pop
cmp
pop
and
xchg
jnp
add
mov
add
jl
pop
sub
push
in
pop
and
and
xlat
pop
add
xchg
lcall
shlb
sbb
testb
inc
cwtl
lahf
icebp
or
ret
mov
sbb
and
mov
pop
ret
xor
mov
cwtl
and
and
call
lcall
or
xchg
cltd
jb
push
lock
jnp
mov
aaa
sub
xor
mov
jg
and
je
in
sbb
jbe
ror
sub
in
ss
and
mov
mov
adc
push
repnz
test
sub
xor
xchg
inc
add
push
jbe
sbb
js
subb
dec
xor
dec
dec
scas
test
sub
xchg
jmp
pop
aad
cwtl
cmpl
repz
lods
sub
hlt
aam
adc
sub
inc
mov
or
or
aad
push
jmp
pop
xlat
cmp
adc
and
decb
les
dec
or
sbb
ss
rcr
ret
out
rcrb
data16
das
fisubrl
in
mov
outsl
jnp
dec
jno
test
adc
test
addr16
cli
mov
lret
add
lock
mov
shrl
mov
fcoml
xor
ret
imul
pop
shrl
out
test
popl
push
shlb
push
mov
mov
bound
mov
lcall
adc
xchg
pop
in
xchg
mov
add
mov
pushf
sti
gs
sub
adc
xchg
cmp
fsubl
pop
stc
outsb
fdiv
imul
ret
loopne
int3
data16
dec
xlat
outsl
ret
out
sub
and
mov
mov
cli
nop
mov
adc
out
xchg
scas
dec
add
xor
jp
loope
sbb
mov
pop
push
lret
mov
jecxz
add
adc
lock
mov
adc
in
jb
fwait
idivb
mov
fs
xchg
mov
xor
ljmp
not
ror
push
iret
add
nop
fldt
aad
clc
push
pusha
sub
outsl
cli
cmp
push
mov
mov
mov
clc
mov
cmpsb
or
jbe
sarl
dec
sub
jae
push
pop
lret
arpl
pop
sti
rcl
lds
mov
and
clc
ss
sub
in
mov
cld
mov
mov
movsl
cmp
in
push
nop
daa
lea
cli
xchg
shlb
pop
rcl
pop
lcall
inc
je
xchg
cmpl
aaa
mov
lock
scas
sub
xchg
and
ljmp
lahf
push
outsb
dec
xchg
mov
clc
push
xchg
lahf
loop
lahf
add
fiadds
add
pop
sbb
dec
call
xor
xor
and
xor
ficoms
notl
cmp
pusha
cwtl
fcmovu
add
jl
insb
or
ja
cmpsl
sub
notb
or
dec
ficomps
and
push
inc
sahf
push
imul
shrl
cmp
imul
mov
mov
aad
popf
int3
cld
out
loop
arpl
rcr
mov
in
in
repnz
lods
push
outsb
mov
bound
pop
fsts
inc
aad
in
add
adc
and
pop
popf
ljmp
jns
mov
out
pop
and
iret
dec
popa
add
sbb
fcmovu
inc
mov
inc
test
fimuls
pusha
jg
js
adc
loop
jne
movsl
sub
lods
cwtl
test
jp
inc
sbbl
icebp
mov
cmp
inc
dec
mov
jo
add
or
mov
orb
pop
inc
mov
cmp
icebp
pop
inc
sbb
in
cld
je
js
mov
jbe
lods
scas
arpl
xchg
or
jae
in
bnd
jecxz
pop
lcall
cmp
inc
pop
popa
xchg
mov
in
sbbl
or
add
mov
ret
xchg
cmp
loope
adcb
sub
mov
add
mov
adc
ja
inc
repnz
sbb
shl
inc
sbb
imul
adc
mov
sbb
imul
outsl
icebp
bswap
mov
adc
dec
mov
dec
and
les
xor
and
in
fs
sbb
fdivr
push
and
adc
cltd
inc
cmpsl
jg
push
push
and
lods
jg
gs
inc
jns
cwtl
fisttpl
inc
ficoml
outsl
adc
push
dec
jle
fisttps
data16
push
or
nop
sbb
mov
dec
scas
mov
mov
pop
push
leave
jb
push
mov
insl
repnz
cwtl
xchg
in
and
int
xor
scas
jle
sbb
dec
lods
add
or
cmpsb
sub
out
pop
popf
push
pop
xor
jbe
add
cmpsl
addr16
roll
push
popf
mov
call
push
fdivp
sahf
mov
cmpsb
pop
stc
mov
lcall
cmp
sub
push
jns
push
jns
shll
cmpsl
fsubrl
cwtl
sbb
in
pushf
push
sbb
mov
dec
jnp
fwait
clc
imul
dec
int3
sti
andb
sbb
lret
das
sbb
sub
addr16
jne
adc
gs
clc
ficoms
inc
mov
xor
inc
imul
stc
mov
pop
mov
jb
xor
icebp
xchg
js
lock
jae
js
mov
aas
sarb
xor
jnp
mov
js
cmp
mov
dec
jl
cmp
push
mov
pop
outsl
adc
fbstp
sahf
sub
sti
cmpsl
inc
movsb
lock
inc
fs
mov
test
jmp
mov
sub
fmull
loope
pop
dec
int
cmpsl
lahf
test
adc
mov
xor
xorl
imul
sti
sarb
cs
sbb
add
push
cmpl
sti
sub
andl
test
xor
and
mov
add
ja
jns
pop
jp
fildl
idivl
int3
imul
pop
or
mov
inc
mov
dec
jmp
add
jns
iret
aaa
aam
ret
push
xor
inc
jl
ja
sahf
mov
dec
mov
jnp
scas
fidivs
jns
lods
adc
repnz
jne
or
jo
sub
shrl
mov
test
mul
lods
and
mov
les
dec
test
and
xchg
cmp
stc
lret
sub
aad
mov
xor
sub
pop
xchg
dec
sub
out
std
ret
xor
sub
adc
push
xchg
xlat
mov
imul
test
jb
ret
sbb
xor
sub
mov
sbb
mov
ljmp
xchg
sub
add
push
pop
xchg
sbb
lcall
int
fwait
inc
inc
or
sti
das
and
out
push
push
pop
stos
sbb
or
pop
xchg
mov
and
mov
dec
pop
int3
into
stos
jnp,pt
push
enter
inc
int3
cmp
in
xor
leave
cmp
in
popf
bound
popa
popa
andl
fdivrs
cmp
faddl
mov
test
jae,pn
loope
pop
hlt
popf
ret
jo
mov
pop
inc
orb
filds
in
lret
ljmp
stos
sub
mov
lock
jmp
jp
in
cwtl
sbb
cmpsb
inc
fimuls
lahf
aad
xchg
sbb
arpl
jae
adc
lret
dec
inc
fs
xor
dec
mov
cmp
lea
add
xor
inc
sub
xchg
adc
or
push
imul
cs
les
push
into
and
jmp
cld
or
cltd
mov
cltd
sbb
adc
rcr
subl
cmp
push
rcr
enter
xor
jb
dec
subl
cmp
cmp
mov
popl
out
icebp
push
sbb
sbb
sbb
cmpsl
pop
pop
dec
cmp
or
mov
xchg
sub
push
iret
cs
adc
mov
lock
dec
mov
sub
mov
inc
fs
mov
and
nop
into
or
xchg
outsl
inc
outsl
cmp
rorb
cmp
lret
jbe
inc
inc
sti
pop
xchg
sbb
jmp
pop
mov
and
adc
in
loope
inc
xor
sbb
inc
inc
frstor
adc
jnp
daa
inc
add
mov
mov
and
subb
jo
sbb
repnz
insl
jp
icebp
icebp
fldcw
je
scas
xchg
lea
cmp
test
imul
sbb
dec
fisubrl
imul
iret
add
ret
mov
and
inc
add
mov
in
fldenv
ret
xchg
mov
rorl
rcl
and
or
push
dec
ljmp
sbb
movsb
or
mov
dec
lock
test
mov
aaa
add
out
xchg
lock
xor
adc
nop
adc
shlb
hlt
push
enter
fabs
cli
and
sub
inc
cmp
hlt
add
and
push
jmp
and
pop
push
pop
les
mov
sahf
lock
mov
decb
loop
and
pop
shlb
jo
pop
lret
js
push
loope
mov
and
faddl
add
lods
sub
or
or
fsubrs
es
addr16
fsubrp
shll
repnz
test
sub
in
jecxz
sub
in
mov
stos
ds
xlat
or
jae
jns
jl
cs
test
push
sub
in
shll
sub
jmp
aam
mov
mov
xchg
lea
mov
icebp
push
mov
cmpsl
in
push
mov
data16
jg
xorl
push
jmp
push
int
cld
sbb
ds
in
push
sbb
mov
xchg
sub
lods
lea
out
and
hlt
sahf
sub
xchg
or
movsb
stos
push
lret
jmp
push
xlat
cmpsb
test
negl
aas
mov
in
and
sub
das
push
xor
ret
cmc
mov
repnz
mov
and
jns
adc
xchg
insb
mov
sbb
fstpl
jp
pop
dec
js
sbb
shrl
fstps
fsubl
into
or
or
dec
cmp
push
lret
adc
call
adc
imul
lcall
mov
push
jp
cmp
les
ret
xchg
cmpsl
in
outsl
and
mov
xchg
dec
cmp
lds
movsl
mov
test
lret
ret
xchg
sahf
popf
add
xchg
ret
adcb
pusha
jb
cld
pop
sbb
cmc
sbb
loop
subb
jae
xchg
adc
adc
lret
scas
push
dec
nop
xor
loop
and
xor
into
push
inc
cli
inc
mov
pop
iret
pop
xor
push
dec
std
adc
mov
lret
lods
mov
ret
gs
lcall
sarl
fbld
dec
sbb
andb
jne
bound
cmp
mov
sub
pop
xor
cmp
ja
mov
popf
shr
xor
xchg
mov
add
push
and
in
inc
push
cmp
stc
notb
push
ret
into
cmc
leave
add
movb
je
push
ret
fistps
xchg
das
push
pop
lcall
sarb
call
loope
cwtl
dec
jbe
cmp
dec
iret
iret
adc
pusha
and
pop
pop
les
xchg
fcoms
and
lcall
lods
push
imul
mov
popa
mov
scas
mov
mov
xchg
fdivrp
fdivr
nop
bound
movsl
orl
sahf
das
mov
push
dec
add
sahf
lret
sbb
jp
lods
incl
in
call
ja
ljmp
filds
sbb
ja
insb
inc
fdiv
leave
inc
adc
xchg
out
lock
lods
ficoml
fsubrs
pop
roll
out
aad
lock
inc
loope
outsb
frstor
ss
test
xor
int
cld
or
das
cmp
ret
xchg
loope
in
scas
movsb
jmp
cli
scas
jae
fisubs
sbb
fisubs
sahf
js
push
cmp
lea
icebp
enter
dec
pop
push
sbb
jl
out
test
mov
and
sbb
in
mov
out
fwait
in
testb
xchg
sub
push
dec
jno
mov
or
pop
inc
enter
adc
inc
or
or
ds
pop
inc
sbb
out
ljmp
push
jp
jae
pop
cli
pop
movsb
xchg
ret
sub
arpl
jp
jns
mov
sbb
fcmovbe
daa
xchg
mov
stos
mov
xor
ror
or
daa
sub
adcb
ret
out
pop
jno
adc
sbb
rcrb
out
pop
mov
das
fsubrl
daa
and
cs
cltd
and
sbb
inc
cmpsb
js
mov
add
jl
imul
adc
adc
adc
pusha
pop
cmp
dec
imul
ss
ja
mov
lret
jl
mov
mov
jl
adc
inc
cltd
gs
mov
lret
lods
imul
sub
out
pop
out
add
cwtl
hlt
push
aad
mov
mov
pop
sti
xchg
mov
leave
push
orl
lahf
cmp
fnstsw
adc
fwait
pop
xchg
cld
mov
scas
xchg
lea
in
sub
push
out
and
out
dec
fdivr
add
aas
aam
cmp
add
addr16
xor
mov
or
or
xchg
aaa
fldenv
out
add
mov
cli
and
mov
loop
dec
out
mov
out
stos
jno
lods
cltd
adc
div
imul
xor
xchg
nop
sub
xchg
push
aas
orl
repz
xchg
inc
mov
jg
shl
pop
xchg
add
xchg
and
push
mov
cmp
lods
dec
notl
and
push
cmp
jp
mov
jno
and
in
or
cmp
mov
adc
mov
fcmovu
inc
jp
insb
sub
iret
ret
cmp
out
xchg
scas
inc
aam
jno
and
mov
xchg
or
test
mov
movsl
fldenv
mov
or
mov
xor
imul
enter
into
mov
jo
and
adc
sbb
mov
mov
stos
into
cmp
xor
pusha
mov
xor
fsubl
mov
dec
mov
mov
add
inc
popa
pop
or
aaa
stos
add
lock
or
mov
scas
sahf
sti
cmpsl
sub
pop
push
or
cmp
std
mov
and
push
neg
aad
add
jb
imul
pop
outsb
pop
dec
daa
es
lods
pop
mov
popf
sbb
lds
pop
jo
out
inc
mov
pop
sub
into
xchg
es
inc
mov
add
bndstx
cs
adc
insb
cld
jp
xor
pop
mov
sub
pop
add
inc
lahf
ret
outsl
mov
jns
push
loop
icebp
dec
xchg
sbb
test
out
pop
jge
nop
mov
xchg
pop
jb
mov
xor
out
lds
xor
stos
and
sbb
cld
push
xor
rcrb
inc
stos
hlt
sub
inc
cmp
add
ret
mov
push
sbb
xchg
popa
repz
jle
and
inc
jno
or
dec
pop
sbb
cmpsb
or
dec
incb
nop
fwait
cs
out
xchg
fwait
mov
ljmp
xor
outsl
sub
push
leave
jb
je
ret
xchg
pop
aaa
push
pop
aad
mov
xorb
dec
aaa
repnz
sbb
adc
repz
pop
bound
loop
jge,pn
stos
adc
cmp
add
sbb
lds
add
pop
and
out
sbb
rcrl
out
js
imul
inc
mov
and
movsb
fistpl
mov
fldlg2
lret
xor
cwtl
roll
pop
subl
xchg
imull
or
mov
aas
rorb
cmc
loopne
adcb
push
gs
sahf
mov
lcall
jmp
and
mov
lds
push
bound
dec
inc
pushf
jmp
movsb
jmp
out
push
push
enter
cmp
enter
xchg
sbb
in
mov
push
inc
shlb
pop
or
lds
inc
loopne
mov
cmovne
mov
push
and
pop
aas
mov
sarl
mov
mov
adc
int
in
mov
fistpl
jbe
aad
xchg
jnp
adc
adc
gs
int
jb
fwait
rclb
xor
xchg
inc
inc
sbb
orb
aad
fcompl
jne
push
fsubs
arpl
jge
sbb
popa
adc
mov
jae
aas
cmp
mov
mov
lds
pop
arpl
pop
mov
lods
and
ret
ret
loopne
xchg
out
xchg
pop
xor
dec
xchg
adc
int3
xorl
xchg
push
mov
scas
xchg
xchg
inc
jo
jg
frstor
cmpsb
mov
xor
test
push
sbb
dec
adc
lock
mov
sbb
xchg
mov
pop
rcr
xor
push
add
test
hlt
jno
fcmovbe
je
sub
outsl
adc
sbb
cwtl
pushf
cmp
xchg
push
stos
mov
mov
push
mov
xchg
js
dec
inc
add
xor
dec
icebp
stos
sahf
inc
or
push
push
cli
fwait
xor
test
inc
sub
aas
sub
mov
xchg
mov
shl
lret
out
imul
test
jmp
xchg
fdivrp
mov
mov
pop
sub
mov
jbe
std
je
in
lret
push
pushf
sub
adc
xchg
in
mov
jmp
cmp
jb
cmp
ror
mov
out
test
push
xchg
mov
orl
cmpsb
aaa
nop
mov
notl
push
inc
dec
adc
ret
sbb
sbb
je
dec
sti
mov
sub
xchg
les
xchg
sar
ja
mov
sarb
sub
push
mov
shll
dec
mul
in
lock
sub
test
pusha
jbe
andl
inc
inc
mov
or
in
push
sub
sbb
cmp
sarb
das
shll
stos
cwtl
in
xchg
je
popa
test
pop
jns
inc
xchg
arpl
lock
ret
inc
outsb
adc
mov
out
test
or
jns
les
cs
jae
and
mov
xchg
push
test
bound
pusha
push
addl
sub
aam
xchg
shr
fwait
cwtl
jns
pushw
js
and
lcall
inc
jno
pusha
fisubrs
addr16
pusha
repz
and
push
aaa
inc
xor
dec
scas
shr
and
pop
cmc
pop
cmp
fldt
sti
lcall
sbb
adc
pop
cmp
mov
data16
mov
daa
xchg
mov
xchg
push
aas
sete
andl
sub
fisttps
mov
xlat
repz
mov
cmp
mov
test
sbb
icebp
push
rol
xchg
shll
jecxz
xor
addr16
sbb
pop
xchg
pop
fptan
fs
fdivs
jl
sub
mov
jmp
insl
mov
mov
push
outsl
out
aaa
ficomps
gs
popa
cmpsl
fistpll
jae
push
mov
push
cmc
mov
push
push
inc
push
stos
popa
add
aam
push
fldcw
dec
cmp
shl
xlat
xor
js
repz
sub
aad
mov
out
loopne
mov
fsubl
dec
fbstp
mov
and
into
inc
lret
or
call
sub
push
dec
mov
or
ja
lock
and
mov
and
pop
xor
inc
add
fistps
jb
rolb
push
call
les
dec
mov
jle
fwait
popf
fisttpll
lret
in
push
popf
out
sub
xchg
lahf
xchg
daa
sbb
cmc
ficomps
jmp
sub
inc
out
or
out
out
jecxz
lret
xchg
cmpsl
xchg
outsb
or
and
push
jno
test
inc
scas
and
nop
push
xlat
mov
out
mov
enter
icebp
sub
mov
nop
jbe
xchg
faddl
cld
cli
test
mov
lcall
shr
and
out
pop
repz
mov
into
ja
adc
cli
sub
push
mov
arpl
out
xchg
fcomp
dec
or
push
ret
mov
adc
pop
pushf
xor
ds
push
xchg
adc
in
cmp
stc
leave
xor
dec
in
sbb
pop
cmpsl
sub
cmp
sub
aas
or
in
add
xor
pop
jbe
push
sub
test
and
mov
mov
mov
lds
sarb
and
out
xlat
add
push
out
push
inc
hlt
dec
ds
sti
sarb
stos
stos
js
insl
jo
push
fisttpll
dec
adc
repz
add
mov
jle
int3
movq
lock
jbe
sub
adc
adc
out
rorb
sub
mov
loopne
and
inc
hlt
out
sbb
sbb
sti
icebp
loope
inc
aam
push
mov
dec
andb
out
pushf
outsl
adc
cld
mov
sub
pop
pusha
dec
push
mov
inc
sbb
pop
ret
repz
jl
jb
push
inc
pop
dec
test
push
pop
rclb
lahf
xor
int3
or
push
test
mov
cmp
andb
inc
pushf
lret
fs
pop
cwtl
ret
fists
adc
add
std
jge
hlt
fdivs
leave
mov
in
cmp
fsubs
sub
push
sbb
sub
dec
rorl
dec
pushf
pusha
mov
leave
adc
adc
lds
or
ds
cmc
popf
test
lahf
pop
cmp
cli
fidivrl
test
and
cmp
inc
pusha
dec
cmp
xor
fidivrl
test
aam
out
aas
mov
mov
pop
jmp
nop
jecxz
shlb
cli
ret
and
jb
mov
mov
sbb
mov
push
ljmp
mov
and
js
and
cmp
movsb
dec
neg
pop
adc
fsubrs
add
aas
jo
adc
fstl
movsl
inc
out
imul
sub
mov
ret
out
ds
int3
xchg
push
mov
test
stos
orl
inc
mov
outsl
cmp
pmaxub
sub
repnz
das
ss
arpl
jecxz
stos
xor
pusha
mov
mov
dec
mov
jns
xchg
mov
mov
mov
jae
subb
rol
pop
sbb
std
incl
inc
sbb
push
jg
push
pop
push
cmp
jmp
inc
icebp
cmp
xchg
out
adc
ljmp
out
dec
jbe
mov
dec
shrb
inc
jb
repz
push
add
repz
pop
add
mov
push
xchg
out
and
loopne
cli
test
aad
loopne
xor
adc
stos
inc
sub
fnsave
jle
rorl
lods
sbb
and
les
repz
clc
push
das
movsl
inc
or
push
ret
add
mov
cmpsl
and
xchg
jle
mov
lods
jne
or
in
out
cmc
cwtl
pop
in
adc
shll
cmp
mov
push
dec
faddl
into
dec
xchg
mov
imul
mov
into
frstor
cmc
movsb
in
dec
daa
and
in
dec
js
jb
and
stos
add
mov
loope
jecxz
test
jnp
rorb
lds
xor
mov
testl
push
shr
mov
call
pushf
shll
xor
adc
mov
stos
add
cmc
mov
negl
add
or
roll
daa
ljmp
cmpsb
bnd
adc
insl
std
add
lock
mull
jmp
jbe
pop
inc
fiadds
mov
rcrl
xor
leave
loop
xchg
incl
push
rolb
and
inc
lahf
lret
xor
mov
jmp
loope
in
lret
xor
sbb
fisttpll
test
popf
and
int
push
lods
add
daa
inc
dec
add
in
rcrb
jl
pushf
and
sbb
push
jge
mov
clc
imul
dec
mov
cmpsb
loope
out
je
out
popf
aaa
cmc
mov
cmp
or
data16
imul
out
fprem
sub
out
popa
push
mov
shll
xor
xchg
push
mov
cmp
insl
add
ds
addl
sub
xor
shrl
mov
mov
mov
arpl
mov
and
aaa
shll
leave
in
arpl
andl
pop
clc
push
out
in
jl
xchg
jl
mov
sarl
xchg
loope
cli
test
pusha
mov
popa
push
pop
popa
fmuls
nop
insb
inc
cli
nop
enter
in
sub
xchg
sub
mulb
sub
inc
sub
or
sub
dec
mov
pop
outsl
jns
les
xchg
sub
test
mov
mov
lods
and
xor
test
mov
aad
int3
cmpl
xlat
inc
jnp
arpl
in
xor
inc
int3
aam
cs
mov
rcll
and
xchg
in
and
mov
aam
mov
push
push
sahf
ret
lret
adc
sbb
cwtl
sub
popa
outsl
cmp
sub
push
imul
loop
and
pop
pop
jo
iret
mov
mov
dec
sub
xor
mov
cmp
imulb
inc
adc
add
pop
icebp
cmpsb
ficoml
mov
ret
xchg
fiadds
cmp
add
sbb
out
imull
aam
fs
dec
lahf
pushf
scas
xor
es
iret
xor
pop
test
lcall
stc
xor
les
sub
xchg
inc
es
mov
dec
cmc
xchg
arpl
lret
cld
jg
or
mov
inc
mov
xchg
shlb
cmpsl
cltd
testb
xchg
xor
stos
xor
movsb
int
inc
jmp
cmc
xor
fdivs
cmp
mov
push
lods
jle
add
cmp
xchg
test
movsb
fxch
testb
inc
adc
cmp
stos
dec
popa
scas
shl
stos
mov
test
sti
add
or
jne
jl
cmp
dec
out
pop
mov
jbe
mov
and
pusha
ucomiss
dec
mov
cmp
pop
or
inc
ret
je
stos
inc
addr16
sub
dec
mov
daa
jl
jns
hlt
into
push
stc
test
sub
lret
insl
out
lret
xor
insb
cwtl
clc
fadds
mov
testb
pop
popf
jmp
ss
xor
dec
mov
xchg
jmp
push
jne
shlb
dec
xchg
jne
mov
and
pop
out
inc
loop
std
addr16
loope
cmp
int3
pop
jl
adc
jno
jmp
pop
int
pop
add
stos
cwtl
cmpl
inc
fiadds
cmp
mov
ret
test
lods
push
stc
mov
pop
adc
outsb
into
adc
jge
lret
mov
mov
nop
xchg
cmp
adc
in
bound
push
lods
sub
xchg
xor
movsb
out
dec
mov
add
xchg
jl
dec
test
sahf
popa
inc
inc
mov
out
arpl
xchg
mov
sbb
push
in
ss
iret
cmp
sbb
xchg
pmaxsw
in
inc
jno
outsb
push
xchg
push
xchg
cld
in
mov
dec
adc
pusha
mov
inc
cmp
dec
iret
cmp
test
jo
pop
sub
out
aas
imul
imul
lret
sbb
fmul
loopne
and
and
sahf
cmp
bound
movsl
cmp
fcoms
in
add
lret
jmp
out
test
shll
sbb
mov
xor
dec
push
pop
cmpsl
add
fsubrl
rol
ss
jp
jns
roll
cmpsb
dec
xor
jmp
pushf
andb
xor
add
icebp
insl
insb
dec
sub
jecxz
int
push
and
push
jmp
popa
cmc
ljmp
xchg
dec
dec
mov
xor
fdivs
push
dec
outsb
or
mov
xor
add
std
mov
fsubr
negb
lods
xchg
sbb
jbe
jo
les
push
fwait
mov
xchg
dec
push
gs
mov
and
push
jns
test
and
inc
push
jne
mov
pop
scas
add
loope
jno
push
je
inc
mov
mov
int
fmull
mov
sub
mov
pop
lret
cmp
dec
add
sti
mov
scas
dec
mov
and
mov
test
insb
inc
cmp
je
ret
jge
pushf
xchg
ds
add
jle
xor
add
fcoml
aaa
xchg
cmp
xor
fsubrp
sub
cmp
fnsetpm(287
bound
mov
mov
push
jle
dec
int
decb
add
mov
xchg
or
sbb
adc
sarl
mov
aad
out
cmpsb
xchg
dec
cmpsl
cmpsl
jecxz
addr16
cmp
mov
inc
add
scas
inc
ds
or
arpl
push
pop
testl
in
inc
cmp
mov
cli
loop
mov
adc
jmp
into
sbb
push
jns
add
push
mov
xchg
adc
fcomps
test
pop
das
ja
xchg
adc
rclb
jp
xor
pop
outsl
xchg
adc
xchg
fdivl
in
movsb
sbb
repnz
fs
xor
xor
lret
push
out
sbb
adc
push
cmp
push
sar
out
leave
nop
jb
mov
cmp
sub
lret
sbbl
cmc
iret
jae
jp
xor
jae
mov
and
jmp
inc
xchg
inc
mov
inc
cmpsb
ljmp
mov
xchg
add
fstpt
add
fildl
hlt
in
dec
imul
dec
das
add
rolb
pop
push
pop
bound
aad
outsb
add
inc
test
or
xor
addr16
add
xor
mov
mov
jp
mov
xchg
das
sbb
xor
lret
or
adc
enter
inc
push
loope
hlt
sahf
xchg
sub
sbb
ret
clc
xor
push
and
repz
cs
sbb
cs
in
mov
in
loope
push
push
jno
xor
xchg
pop
inc
lahf
dec
xor
jp
sub
push
pop
cmpl
fdivrs
adc
push
dec
daa
inc
add
mov
push
inc
jb
xchg
mov
lods
fdivs
adc
xor
xor
push
stos
scas
in
inc
push
mov
jnp
cmp
cmpsb
sub
popa
jne
stc
inc
subb
jecxz
or
loopne
dec
or
lahf
add
rcrl
cmp
dec
sbb
lds
fwait
cmpsl
sub
sbb
fnstenv
fldl
ret
sub
pop
cmpsb
sbb
sarb
adc
cli
mov
out
jp
mov
inc
scas
add
adc
inc
add
jge
je
push
sbb
xor
xchg
out
cmp
lock
addr16
nop
test
jno
xorl
stos
iret
push
icebp
std
jno
mov
pop
lods
dec
xor
and
sbb
push
mov
pop
adc
lods
jmp
fndisi(8087
cmp
xchg
push
or
pop
es
mov
addr16
sbb
cmpsb
dec
mov
std
lret
inc
sbbl
inc
add
mov
movsl
clc
aad
cltd
bound
sbbl
push
test
and
scas
aas
arpl
xchg
ss
push
xor
cmp
sarl
pusha
call
mov
xchg
add
mov
les
scas
scas
sub
xchg
sti
js
out
jmpw
scas
subl
lods
aaa
stc
or
xchg
hlt
shrb
cmpsb
clc
jno
dec
xor
cmpsb
adc
aam
es
pop
ffree
mov
clc
dec
call
jmp
and
mov
js
sbb
mov
sbb
in
dec
scas
jae
xlat
xchg
xchg
out
sub
stos
add
push
inc
and
dec
out
add
dec
inc
xchg
mov
xchg
and
sbb
dec
loop
mov
test
cmpsb
push
adc
in
fildl
pushw
test
xor
and
fnstsw
rcrl
stc
sub
jns
xchg
mov
or
aad
test
aaa
fimuls
mov
mov
mov
mov
sbb
jae
fwait
out
test
inc
push
jnp
fisubrl
mov
xchg
cmpsb
mov
pop
and
popf
lret
lcall
sti
jns
pop
mov
daa
push
fistpl
rorb
testb
aaa
pop
fdivs
mov
test
int3
cmp
jne
sub
dec
mov
ljmp
push
popf
mov
dec
or
push
fdivs
jp
ds
xchg
into
sub
out
push
fldl
mov
js
xchg
push
imulb
clc
pop
mov
loopne
call
daa
push
xchg
pop
psubsb
mov
orl
adc
jbe
pop
daa
in
mov
xchg
sub
or
cmp
ret
and
movsb
fbld
sbb
into
inc
rolb
into
mov
stc
hlt
inc
mov
pop
jle
mov
imul
aaa
jge
pop
mov
adc
and
cmp
add
popf
mov
imul
sub
inc
es
or
in
cmpsl
in
jb
cmp
out
xlat
add
push
push
sub
adc
pop
enter
out
divl
aas
imul
jno
cmp
add
jb
mov
mov
mov
enter
pusha
scas
sub
cmc
loopne
inc
popa
inc
fstpl
rcll
cli
xchg
ret
jmp
in
push
jo
jb
ss
lock
sbb
repz
insb
test
sbb
mov
cmp
jle
outsl
xor
leave
fisttpll
mov
inc
dec
sbb
scas
mov
mov
flds
xchg
adc
mov
int
jecxz
xlat
jne
jg
xchg
f2xm1
lds
jmp
lds
pop
and
xchg
jo
movb
jecxz
jbe
xchg
jns
movsb
arpl
les
inc
add
add
in
js
and
dec
xor
and
sbb
xor
movsb
mov
lods
jae
imul
and
mov
sbb
rclb
sub
or
mov
mov
repnz
lods
cmpsb
add
mov
aas
lds
mov
fst
and
in
cmpsl
sbb
test
ret
pop
xchg
push
mov
dec
jbe
popf
lret
jecxz
sbb
imul
mov
sub
jge
int
inc
xchg
mov
mov
es
ljmp
jae
and
fstcw
hlt
adc
or
cltd
fsubl
cmp
cmp
xor
repnz
aad
shlb
lret
xor
dec
ss
ja
inc
inc
ret
dec
setp
mov
divl
ljmp
inc
shlb
inc
out
sub
loope
movsl
sti
push
std
fidivl
xor
push
cmpsl
jns
stos
inc
hlt
hlt
in
imul
mov
sbb
sub
fistpl
inc
push
mov
cmc
jge
sbb
cld
pop
push
jp
add
addr16
jbe
cli
in
idivl
jbe
cmc
das
dec
sbb
std
int3
adc
mov
xchg
lret
fisttpl
cmp
loop
push
js
icebp
out
pop
scas
lret
xchg
xchg
add
lcall
leave
push
out
enter
fimull
popa
or
repnz
call
iret
mov
dec
mov
xor
mov
in
add
sbb
or
jb
sahf
mov
mov
xchg
cs
lds
mov
adc
stos
lock
test
adc
out
in
rolb
inc
lds
and
sub
divl
iret
mov
js
popa
xor
or
in
mov
push
stos
stos
loopne
shrb
sbb
test
dec
mov
sub
enter
xor
lea
inc
mov
add
pop
pushf
test
jb
push
inc
mov
inc
and
add
mov
sub
fwait
xchg
push
les
pop
cmpsb
ret
fs
into
push
or
ror
movb
dec
sub
pop
adc
adcb
gs
andl
int
cmp
inc
jge
in
xchg
xchg
fsubrs
ss
jmp
shr
fdivrs
sahf
cli
and
movl
testb
and
jmp
les
arpl
aaa
dec
dec
jbe
arpl
sub
jbe
inc
dec
xor
push
sahf
cmp
adc
movsb
ret
stos
das
mov
mov
jmp
rcl
mov
fadd
stos
and
stos
mov
je
and
aaa
je,pn
inc
xor
push
callw
cmpl
cmpsb
imul
dec
inc
mov
add
lcall
pop
mov
scas
jecxz
stos
scas
xorl
cmp
scas
setg
add
ret
loopne
rcrb
pop
dec
xchg
pop
push
xor
adc
fiadds
mov
sbb
rol
jle
mov
mov
leave
rolb
cmp
jg
out
leave
arpl
sub
mov
int
loopne
mov
xchg
int
dec
notb
daa
xchg
popf
mov
sub
push
xlat
jne
imul
ds
fildl
daa
test
iret
cmpsl
sbb
xchg
shll
push
out
pop
cmp
pop
xchg
loop
data16
enter
inc
test
and
pop
lret
inc
popf
loop
push
sbb
cmp
jns
jns
mov
movsb
dec
mov
leave
fdivr
and
jne
dec
and
and
pushf
lea
fsts
ja
xchg
jge
inc
in
scas
popf
loop
inc
mov
mov
test
mov
mov
jge
mov
imul
andl
repz
in
and
mov
push
dec
xor
mov
shlb
dec
icebp
jecxz
sbb
sbb
ficomps
inc
mov
xor
inc
stos
xor
dec
sub
outsl
sbb
dec
pop
loop
lcall
mov
shll
scas
jno
or
mov
push
inc
inc
bound
dec
cmp
push
mov
jns
sub
mov
rorl
lods
mov
imul
in
fnsave
pop
dec
mov
jg
leave
inc
cld
and
xchg
xchg
cmp
jo
xchg
pop
mov
mov
fimull
mov
in
sub
add
pop
or
jmp
adc
enter
xchg
sti
mov
mov
imul
xor
add
sub
fistps
and
sub
sbb
adc
jg
xor
sub
mov
in
insb
lea
xchg
fbstp
dec
cltd
pusha
sbb
jnp
ficoms
sbb
shr
push
pushf
mov
rcrl
inc
in
or
and
jge
fdivrs
ljmp
mov
push
and
cmp
loopne
jae
daa
sbb
jno
cld
mov
pushf
mov
stc
lret
mov
lahf
inc
aad
xor
push
pop
lahf
gs
add
push
into
xchg
fldl
aad
cmpsb
loopne
pop
std
movsb
xor
ljmp
pop
cli
ret
xor
icebp
in
mov
pop
ret
arpl
sub
mov
in
test
rorb
pop
mov
dec
popa
inc
aas
inc
sub
push
sub
or
in
cmp
xchg
movsl
pop
in
and
mov
xchg
aam
inc
aas
and
pop
ret
mov
aam
insb
les
dec
lcall
adc
mov
xor
cmc
scas
dec
lds
repz
mov
lods
jl
ret
lahf
dec
inc
cld
jmp
mov
hlt
pop
gs
scas
mov
cmp
dec
xor
test
out
mov
cwtl
dec
sub
ljmp
movsb
cmp
mov
jecxz
push
push
das
fisttpl
jb
push
xchg
inc
fimull
dec
aaa
pushf
mov
dec
add
push
sbb
std
out
jecxz
out
mov
cli
xor
mov
jne
mov
mov
mov
pushf
fadds
call
dec
mov
mov
stos
xchg
stc
cwtl
out
mov
es
icebp
bound
pop
mov
jae
lds
pop
outsl
dec
int
adc
ss
imul
jmp
dec
adc
mov
cmp
popf
xchg
ret
fidivrs
icebp
xor
or
pusha
aas
dec
out
divl
cmpsb
lret
pushf
hlt
rclb
jnp
fisttpll
pop
and
push
mov
push
pushf
ds
scas
mov
incl
andl
fdivr
sahf
jno
dec
or
mov
or
cmpsl
cmp
dec
push
or
jecxz
sbb
movsl
add
clc
test
jbe
pop
rorl
adc
into
ss
in
jecxz
xor
dec
push
mov
daa
cwtl
mov
pop
cs
cmpsl
popa
and
xor
popa
xor
cmpps
int3
sub
ret
adc
cld
sarb
test
enter
add
push
shl
icebp
mov
inc
es
daa
repz
jae
mov
in
test
add
mov
inc
and
lock
sti
add
loop
cmp
mov
push
pop
mov
mov
pop
sbb
pop
xchg
push
scas
push
and
fwait
sub
in
scas
decl
negl
ljmp
mov
pop
int3
mov
mov
bound
scas
scas
lods
cmc
cmp
pop
jecxz
std
inc
jae
add
sbb
xlat
sti
test
xchg
test
sbb
inc
or
jmp
jo
iret
pop
mov
mov
out
mov
pop
mov
or
cmp
fsub
lcall
aaa
mov
sahf
mov
outsl
sub
and
dec
fcomip
or
mov
mov
leave
push
push
mov
shll
stos
andl
cs
rol
and
pop
popa
movl
xchg
mov
pop
aaa
into
mov
xor
push
or
adc
stc
nop
cld
xorl
push
fldcw
loopne
in
aam
sub
lods
xor
cmp
cmp
push
out
mov
xchg
adc
out
in
cmp
addr16
mov
insl
imul
jb
cmp
jg
and
xor
dec
mov
push
loop
or
xchg
inc
inc
mov
int
test
and
movsl
shl
ror
lcall
pushf
imul
sahf
cwtl
inc
push
push
addr16
aam
sub
pop
rorl
out
shr
rol
pop
repnz
pop
addr16
cmp
js
ss
jle
sub
lahf
andl
push
or
xor
pop
cmpsb
mov
push
test
scas
jge
and
stos
outsb
pop
pop
mov
or
pushf
pop
xchg
out
jmp
sbb
stc
out
test
scas
jmp
clc
icebp
ficoms
mov
test
jmp
dec
jmp
cld
xchg
xor
sbb
stos
in
pop
push
pop
sbb
pop
and
sbb
jae
jl
scas
xchg
ja
shll
stos
or
aam
pop
sbb
push
ret
pushf
in
add
je
ja
pop
aaa
xchg
xor
xchg
adc
dec
mov
adc
out
mov
sbb
and
and
in
adc
lods
addr16
negl
and
pop
xor
mov
or
xchg
out
pushf
fiaddl
aam
fisttps
js
daa
add
fisubrs
test
dec
adc
cmp
jp
enter
pop
ret
dec
pop
rcll
sub
cmc
cmp
sbb
addr16
inc
jp
mov
fstpt
and
push
insb
cmpsl
fcoml
dec
xor
cmp
mov
mov
pop
and
mov
sub
add
cltd
jl
cmp
inc
mov
test
sub
mov
mov
add
xchg
std
nop
xor
aas
and
push
in
and
outsl
xchg
push
pushf
rcll
xchg
mov
iret
add
fwait
bound
jge
push
out
sar
repnz
sub
mov
jecxz
xchg
imul
pusha
cmc
mov
loop
sbb
jbe
test
jb
mov
pop
iret
cmp
push
dec
jne
fldcw
push
out
and
xor
push
repz
jecxz
insl
jle
inc
fistps
lret
xchg
adc
mov
hlt
fwait
add
cmp
scas
jl
cmp
inc
cmp
test
outsb
jle
inc
or
stc
sub
int
lret
in
test
pop
fwait
xchg
sub
cmpl
imul
pop
xchg
ret
shll
lret
int
je
push
cmp
pop
outsl
fistl
or
and
outsb
sub
scas
or
rcll
jle
ljmp
jg
mov
push
lcall
pop
and
cmp
test
and
and
rcrb
rcll
jo
in
aam
xlat
jecxz
lcall
and
adc
insb
add
mov
xchg
repz
xchg
add
loop
cmp
cmpsl
mov
incb
iret
dec
or
adc
sbb
and
loopne
outsl
adc
or
inc
hlt
adc
push
test
pusha
mov
loope
mov
sarb
fisubrl
cmp
mov
lea
clc
pop
add
lods
dec
cmp
xchg
mov
sub
test
mov
imul
notb
in
les
inc
mov
clc
jno
xchg
push
jg
stos
decb
mov
sbb
out
or
js
movsl
scas
aas
in
cmp
mov
stos
mov
mov
mov
scas
jg
xor
loope
in
sbb
js
out
fdivl
jmp
fwait
inc
dec
fiadds
or
nop
mov
adc
shlb
fiadds
sahf
sbb
cmp
mov
lea
cwtl
dec
and
cld
add
push
cmp
dec
jmp
iret
inc
push
arpl
jo
mov
cmp
dec
fildll
cmpsw
cmp
pop
jmp
jle
or
in
xor
dec
dec
in
mov
xor
add
ss
cmp
mov
fistpl
cmovae
mov
xchg
lods
add
xor
jl
xchg
jne
enter
push
mov
out
fisubl
movsl
xor
mov
roll
fcomps
lea
mov
cmp
mov
lcall
outsl
jb
subl
test
mov
fldenv
adc
add
aas
xchg
leave
cld
fxtract
mov
outsl
mov
popa
jmp
add
sbb
push
dec
shll
cmpl
enter
mov
ret
in
push
push
push
ret
fnstcw
push
sbb
rol
js
mov
jnp
aaa
cmc
mov
mov
inc
pop
hlt
sti
shlb
shlb
popf
sbb
mov
dec
ret
push
jle
in
xchg
jb
nop
stos
in
in
data16
mov
pushf
scas
lret
and
pushf
xlat
pop
sarl
sub
test
icebp
mov
call
adc
dec
les
addl
adc
mov
addr16
or
orb
inc
pop
and
mov
lods
fwait
xor
pusha
inc
xlat
jae
arpl
lods
push
jle
push
push
dec
test
sub
xor
mov
or
sarl
stos
mov
sahf
in
ret
xlat
aas
into
sarl
pop
mov
std
jp
fistps
les
lret
mov
data16
es
pop
inc
xor
jle
mov
addl
bnd
and
mov
addl
push
in
inc
jns
daa
inc
push
mov
test
push
pusha
ja
mov
pop
loopne
inc
jge
repnz
push
stos
sub
dec
xor
xchg
mov
jecxz,pt
xor
jns
mov
fsubl
push
cmp
mov
xchg
sub
imul
in
daa
into
mov
mov
inc
jnp
scas
adc
and
mov
cmp
jbe
cmpsb
xor
sti
xchg
push
jns
jp
xchg
ljmp
xchg
sub
jbe
shr
pop
stos
cmp
add
sub
ret
ljmp
lock
push
sbb
xor
cmp
jp
cltd
stc
outsl
fidivrl
mov
push
jbe
mov
icebp
mov
test
fsubl
dec
mov
dec
imulb
cmp
loopne
mov
dec
jae
mov
lea
fbstp
pop
out
imul
sti
lret
imul
into
xor
aam
add
xor
mov
and
aad
rcl
xchg
bound
or
pusha
sbb
xor
mov
in
push
hlt
aaa
and
enter
addr16
das
mov
icebp
int
jmp
jle
push
cmpsb
inc
fistps
into
test
es
out
test
mov
fildl
std
push
stc
or
push
dec
dec
scas
pushf
decl
push
mov
pushl
add
daa
inc
push
fwait
loop
scas
movsb
xor
sub
ja
inc
dec
push
sub
inc
adc
imul
push
jp
into
adc
mov
mov
loopne
sub
roll
les
addr16
mov
cmp
jge
push
inc
aaa
and
aaa
aas
adc
mov
jge
mov
mov
in
shll
add
xchg
xchg
sub
sub
pop
in
dec
insb
lea
cmpsb
add
jle
mov
and
inc
inc
iret
popa
pusha
into
jnp
je
pop
mov
xchg
mov
shll
jmp
aaa
push
pop
scas
push
or
mov
mov
cwtl
xchg
inc
std
movsb
lods
xchg
mov
lss
gs
push
sbb
out
insb
call
or
hlt
xor
data16
mov
or
sbb
add
dec
add
adc
daa
jge
inc
inc
jecxz
xlat
iret
inc
loop
test
xchg
shrl
mov
dec
add
and
sub
icebp
into
ds
jno
mov
push
mov
mov
mov
cmp
fnstsw
sub
cmc
jp
jg
pop
outsl
push
jecxz
mov
or
jecxz
pushf
cmpsb
int
rclb
xor
and
insl
outsb
ja
pop
loope
adc
pop
or
jmp
jecxz
movsl
or
stos
pop
pop
jns
adc
stos
jg
clc
cmp
negl
shr
in
leave
xor
out
pop
cmp
and
pop
cmp
repz
aam
ret
sahf
push
lahf
fdivl
jle
shll
outsl
cld
jno
mov
push
mov
mov
mov
xor
imull
aas
divl
insb
push
mov
int3
lret
cmpsl
fistpll
in
cli
leave
icebp
mov
jmp
xchg
das
lret
adc
ror
sbb
xchg
movntps
inc
adc
rcl
xchg
dec
jl
or
lods
fisubs
das
push
ds
test
mov
in
dec
arpl
adc
movsl
push
inc
int
mov
mov
test
out
imul
inc
inc
add
jne
ds
imul
sbb
lea
dec
ret
and
mov
and
imul
lcall
int3
mov
rcr
das
bound
xchg
je
xor
fimull
sub
mov
out
add
fidivrs
add
jge
push
nop
sbb
ret
cmp
test
ljmp
push
xor
push
shrb
dec
fcmovbe
inc
mov
cmc
sub
jo
icebp
leave
lcall
decl
and
mov
push
mov
or
push
jg
xchg
mov
sahf
test
jb
dec
ret
lret
jo
dec
sbb
fcompl
shrb
rcr
lock
vdivsd
jae
call
arpl
xor
or
adc
mov
subb
sbb
xchg
jne
dec
xchg
push
sbb
push
mov
cld
mov
pop
mov
jge
push
es
scas
notb
mov
ljmp
adc
imulb
sti
inc
cmp
push
ljmp
add
popf
inc
fcmovne
lods
xor
in
xor
dec
inc
cltd
scas
ret
pop
fs
mov
popa
mov
imul
sarl
repz
es
pop
enter
lds
fisubrl
and
mov
adc
insl
adc
insb
popa
mov
xlat
insl
jg
jo
adc
lds
ret
mov
add
in
sub
dec
stos
loop
pop
jne
or
ficoms
repnz
jno
cli
outsb
xchg
push
or
mov
ss
cmpsb
dec
call
mov
mov
jno
mov
pop
aaa
mov
js
mov
cmp
add
shl
or
sbb
inc
sahf
loope
movsb
cmp
je
or
cli
mov
adc
fs
pop
in
cs
mov
and
or
sbb
inc
fwait
jo
call
mov
and
mov
int3
aaa
popa
int
xchg
adc
jmp
pop
out
push
pop
xor
imul
stos
fisubl
fistpl
jl
popf
insl
mov
pop
xrelease
jmp
add
cmp
jns
decl
cmp
mov
pop
sbb
stc
js
aad
pop
and
push
mov
push
xchg
aam
scas
mov
pusha
lods
insl
int
fstps
scas
ljmp
jle
je
out
daa
mov
shrl
div
data16
sahf
xchg
push
sub
shrl
outsb
add
lea
fwait
dec
in
xchg
mov
into
sar
mov
repnz
jmp
into
aas
add
sub
and
xchg
mov
mov
xchg
lods
sub
add
stos
adc
mov
gs
sbb
add
xchg
jge
andb
push
lods
pop
jle
orl
cwtl
gs
int3
icebp
out
xor
out
roll
mov
fbstp
mov
jb
inc
cli
insb
jae
mov
pop
iret
dec
push
bound
aaa
inc
cmp
shl
jne
and
lret
cmpsl
lds
js
lret
sub
lock
jae
pop
popa
sbb
cmpsb
sti
dec
lds
pushf
mov
cmp
in
outsl
int3
fdivs
push
dec
or
bound
and
mov
mov
push
sarl
pop
adc
adc
divb
ljmp
and
daa
jmp
fidivrl
push
cld
inc
les
push
or
xchg
cmp
cmp
loop
andb
mov
inc
push
sub
mov
icebp
jle
or
gs
pop
shll
rcll
mov
xor
stos
xor
enter
aas
pop
scas
je
call
xchg
lahf
pop
jg
ljmp
mov
adc
call
add
mov
mov
pusha
out
fisubrs
lods
aam
jle
sbb
dec
je
mov
or
mov
pop
imul
jae
pop
dec
sarb
lahf
fdivrl
add
fisubrl
sub
test
imul
add
cmpsb
cli
pusha
ret
movsb
mov
sub
in
movsb
fldl
lods
movsl
cmp
pop
add
ret
dec
xchg
fwait
out
jl
mov
int
inc
push
daa
movsb
add
jns
loopne
push
lods
cmc
movsb
push
xor
and
dec
les
dec
mov
mov
sub
push
dec
jbe
insb
xor
icebp
dec
xor
lcall
add
les
mov
sbb
cld
fnstenv
loope
mov
or
call
data16
fstpl
inc
sbb
popa
xchg
into
or
pop
sarl
push
push
jo
cli
inc
scas
popf
xchg
outsb
loop
stos
rcrb
adc
push
xor
out
adc
jecxz
cltd
inc
arpl
mov
mov
jg
mov
push
je
sbb
mov
cld
ficomps
inc
adc
cmp
xchg
xor
inc
mov
loopne
out
popa
adc
jne
add
into
jmp
cwtl
add
fisubrs
nop
sub
xchg
jns
mov
pop
cmp
out
loope
dec
push
cmp
jnp
out
adc
rorl
adc
sbb
xor
push
out
xchg
pop
sub
lahf
dec
fdivl
out
lret
mov
push
push
or
dec
scas
push
mov
xchg
mov
xchg
mov
inc
mov
repz
cmpsl
frstor
repz
push
inc
mov
arpl
fisttpll
add
stos
dec
aas
sub
mov
and
repz
sub
pop
adc
test
in
mov
lcall
inc
in
ret
add
or
and
mov
mov
sahf
icebp
in
or
adcb
push
xchg
add
inc
and
xchg
jno
mov
mov
mov
jg
lcall
adc
shll
or
xchg
test
add
xlat
cmp
inc
adc
js
stc
aas
enter
iret
mov
jb
shlb
aas
repnz
adcl
pop
xchg
push
mov
sarb
ficompl
sub
add
or
sbb
jg
add
jg
add
push
inc
mov
mov
mov
out
pop
sbb
and
js
jns
jne
cltd
and
sub
xchg
std
fwait
dec
xlat
mov
pop
jb
fs
mov
mov
mov
repnz
push
inc
cmp
aam
xchg
leave
rcrl
pop
xor
xor
insl
cs
push
dec
ja
adc
jp
jbe
inc
sub
shrl
pop
arpl
test
jle
daa
dec
dec
mov
popa
ja
jb
xor
int
add
pop
sbb
or
and
cs
cmpsl
push
cli
cmc
adc
scas
das
outsb
jne
stos
mov
negb
repz
cli
scas
mov
and
rorl
sbb
cld
mov
or
inc
mov
idivb
pop
loop
and
sub
mov
and
dec
adc
lret
lds
fsts
xchg
jns
push
cmpsl
push
cmpsl
loop
dec
jo
hlt
mov
sahf
jne
outsl
stos
lahf
mov
xchg
fldln2
xor
xchg
int3
and
xchg
add
mov
sbb
sbb
popf
ljmp
add
add
fcmove
roll
aaa
ss
stc
xlat
pop
pop
push
stc
mov
aaa
mov
and
in
sahf
lods
mov
out
pop
sbb
out
sub
enter
fsubp
jb
sub
int3
xchg
mov
lea
adc
mov
lea
fwait
mov
jge
xchg
nop
xchg
fdivr
into
add
mov
xorb
mov
mov
dec
or
inc
sti
jl
repz
xchg
mov
pop
out
cmp
xchg
adc
and
pop
pop
fdivs
je
enter
pushf
or
jp
add
or
cmp
add
cmp
jl
and
pop
mov
das
push
mov
cwtl
jecxz
sub
mov
add
or
cmpsb
jb
mov
push
push
push
jo
jecxz
push
lods
test
imul
mov
jge
fldcw
jl
sub
popa
outsb
mov
cwtl
stos
lcall
cmpsw
sbb
icebp
mov
loopne
cs
xlat
or
scas
mov
mov
mov
jp
sub
mov
inc
add
pop
cltd
cwtl
aad
insb
enter
lea
push
fsub
lods
cmpsb
shrb
pop
out
daa
lahf
mov
rclb
jnp
pop
pop
data16
cwtl
jmp
pop
pushf
das
les
mov
dec
dec
push
add
rcr
dec
jnp
aas
mov
in
in
sbb
jle
cmp
jmp
movsl
shll
das
sub
add
push
add
out
rolb
dec
aad
adc
inc
inc
mov
or
hlt
insb
and
popa
push
das
arpl
inc
inc
vprotd
stos
sbb
mov
inc
scas
xorl
adc
lahf
mov
test
imul
add
sbb
xchg
cmpsl
lahf
shll
pushf
daa
stos
fmul
pop
sbb
std
in
push
enter
jmp
js
dec
lods
jg,pn
cs
fisttps
out
jg
mov
xchg
outsl
push
addb
ss
out
add
push
test
rcrl
stc
aaa
xchg
sub
das
sub
mov
cwtl
mov
inc
movq
mov
cmpsl
and
jge
stc
add
fsubs
mov
push
out
push
push
push
cs
test
pop
cli
pop
jg
push
push
mov
jge
insb
out
insb
lods
mov
aad
std
or
mov
push
sub
push
lcall
add
stc
nop
arpl
cmc
repnz
or
cwtl
loop
pop
push
cld
mov
sub
dec
cmp
push
jo
cmp
sti
fs
push
adc
jmp
add
dec
xor
mov
push
inc
and
aad
aas
mov
test
sub
imul
and
add
rcl
cli
inc
or
adc
flds
roll
in
das
dec
test
outsb
dec
dec
xchg
cwtl
lea
outsl
inc
cld
mov
xor
lret
cmpsl
and
jns
cltd
dec
aas
xor
sub
into
fadds
sbb
cmpsl
or
pop
add
mov
mov
push
out
push
cli
lea
add
or
mov
cmovo
add
jno
fldz
fiaddl
movsb
sub
aam
js
or
rcr
jbe
adc
jg,pt
cmp
push
cmp
test
push
ret
or
dec
stos
mov
mov
lock
out
xchg
cld
or
jnp
fs
aas
test
call
push
repz
adc
in
xchg
test
mov
out
xchg
push
sub
inc
icebp
aas
add
int3
push
out
mov
xchg
mov
insb
enter
xor
stc
out
mov
or
pop
shl
faddl
cs
outsb
rolb
data16
pop
negb
test
bound
in
add
xchg
mov
push
ja
mov
loop
orps
outsb
mov
mov
adc
sbb
inc
fcmovnu
mov
dec
loopne
xchg
out
inc
add
repz
ss
mov
xchg
adc
dec
inc
loope
or
lods
test
stc
xchg
pop
adc
cwtl
add
or
xchg
pusha
scas
and
popf
adc
cmpsl
andb
mov
cmp
mov
push
int3
adc
pop
and
cli
jns
movsb
pop
pop
js
stos
xor
in
mov
std
push
cmp
xchg
repnz
lahf
or
pop
jno
dec
mov
and
pop
out
insb
jl
cld
clc
mov
pop
jns
idiv
jmp
inc
lds
mov
es
push
lds
rep
in
pop
sbb
loopne
cmp
or
pop
fisubrs
ret
sub
jns
ret
jle
fwait
jb
cmp
add
test
iret
aam
leave
subl
pusha
incb
pop
sbb
adc
add
divb
adc
mov
stos
es
xchg
test
mov
cmp
es
mov
and
push
cli
iret
pop
mov
xor
mov
cltd
sub
movb
hlt
std
std
mov
xor
lret
push
rolb
ljmp
jns
adc
mov
mov
xchg
rcrl
pop
cltd
fnsave
cmpsl
xchg
out
pop
clc
adc
loope
dec
mulb
xor
mov
pop
sub
sbb
cmpsb
push
test
add
mov
inc
dec
sub
pop
jg
jne
test
cmp
jae
xchg
test
or
adc
out
enter
adc
jg
mov
leave
scas
xchg
jo
dec
sbb
jns
push
ljmp
sbb
mov
or
xchg
push
jae
adc
add
dec
mov
and
jp
jmp
sub
rep
rcrb
dec
test
jae
sbb
jns
ds
adc
repz
int
jp
imul
gs
aaa
lea
xor
cmc
out
jp
test
mov
push
pop
inc
rorl
test
jne
loopne
icebp
jmp
addr16
sarb
movsl
xchg
repz
jp
pusha
aaa
pop
add
adc
pop
test
mov
outsb
dec
hlt
xchg
xor
mov
mov
call
ret
push
push
and
in
data16
push
js
jnp
dec
js
xor
mov
push
mov
popf
stos
pop
rolb
imul
or
outsl
mov
pop
ret
lret
inc
adcl
inc
mov
lock
mov
xchg
xchg
jle
iret
inc
sub
je
aam
push
push
adc
andl
push
mov
pop
mov
gs
sbb
outsl
lea
xchg
cmc
popf
call
or
jg
add
mov
test
or
sbb
xchg
in
xor
push
rclb
pusha
out
negb
push
sbbl
jbe
mov
loopne
pop
inc
in
lds
rcr
rcl
mov
and
cmc
insl
mov
xchg
jns
mov
add
mov
sbb
cltd
and
mov
outsl
mov
shll
mov
xor
in
mov
testl
sub
dec
popf
test
scas
shl
or
shlb
int3
push
sbb
iret
and
ljmp
lahf
mov
or
ljmp
pop
mov
fs
lahf
or
mov
orb
add
jge
scas
push
push
mov
mov
mov
ljmp
or
mov
inc
cltd
movsl
cmp
add
mov
xor
dec
out
mov
mov
lods
mov
es
jb
mov
or
aas
arpl
mov
mov
mov
bound
cltd
jbe
pop
scas
sahf
xor
push
add
adc
sti
stos
adc
xor
lds
cmp
pop
push
mov
leave
mov
pushf
test
sub
add
cmpb
mov
iret
dec
daa
dec
shl
icebp
add
repz
mov
mov
out
imul
mov
jne
adc
sbb
rorl
sub
jg
add
adc
dec
test
fdivl
cmpsb
movsl
ja
push
les
sbb
rclb
adc
fistl
je
rcr
inc
push
mov
mov
std
cmpsl
imul
gs
outsb
imul
scas
mov
push
ret
push
sbb
outsl
scas
lret
cmp
cmp
or
xchg
imul
dec
repnz
out
shlb
inc
jae
push
fisttps
add
out
xchg
sub
addr16
push
dec
cmp
xorl
repnz
push
pop
dec
jmp
clc
cmpsl
adc
ljmp
and
adc
mov
jno
icebp
pop
push
pop
add
adc
out
enter
loope
daa
jno
dec
fs
sti
add
scas
ljmp
cmpsb
outsb
sbb
jl
bound
cmp
xchg
sub
ret
callw
sub
jbe
sbb
sbb
add
xchg
jp
mov
roll
jg
je
dec
jmp
mov
pushl
lcall
roll
push
jle
fadds
call
lods
mov
push
mov
inc
insb
xlat
popa
lcall
faddl
inc
rcrb
push
sub
arpl
fucom
es
sbb
loope
shlb
seto
jg
cmp
ficoml
mov
repnz
and
ljmp
test
xchg
subl
fildll
jge
stos
lds
ds
push
fnsave
daa
push
push
lcall
mov
add
clc
mov
and
cmp
dec
aad
cmp
repz
add
and
jno
out
mov
xchg
in
loop
or
pop
mov
push
dec
mov
in
cmp
sub
adc
push
scas
testb
stc
shll
loope
and
xchg
dec
ret
negl
push
mov
pop
cmp
sub
fisubrl
push
jbe
pusha
push
cltd
and
imul
adc
xor
out
dec
aad
push
cmc
adc
dec
dec
push
push
xchg
repnz
xchg
adc
dec
insb
xor
push
subb
dec
leave
mov
cld
lcall
inc
jno
and
imul
push
cmp
dec
movups
rolb
rcll
xor
inc
sar
dec
in
sahf
addr16
sbb
test
push
jne
lods
out
into
or
xchg
mov
lods
icebp
cs
adcb
mov
add
popa
dec
sti
adc
and
sbb
xor
iret
push
cmp
mov
in
int
lods
mov
into
arpl
pop
cmp
jecxz
lcall
stc
je
movsb
movsb
push
pop
fsubrl
and
flds
cmp
lods
sbb
fildll
xor
sub
inc
out
cmp
imull
loop
cmpsl
int3
ss
mov
fsubrl
push
xchg
add
insl
mov
jo
lahf
inc
jne
xchg
lods
jne
push
add
sbb
fnstenv
out
push
sub
popf
lahf
dec
arpl
pop
add
daa
pushf
sbb
sbb
jg
in
dec
cmp
out
pop
or
mov
loop
lret
xchg
scas
dec
lds
jle
in
dec
mov
and
nop
aaa
mov
andl
sub
mov
inc
dec
pushf
jge
jno
pusha
xor
sbb
iret
xchg
mov
imul
jbe
mov
push
jl
dec
xor
sahf
cmpsb
aaa
or
mov
mov
lea
push
gs
adc
jecxz
dec
mov
push
add
shr
mov
cli
bswap
mov
aam
mov
dec
dec
mov
xor
and
dec
and
shrl
pop
pop
xchg
rcrl
test
sub
es
loop
je
call
inc
push
sub
test
mov
ret
es
jns
and
lret
push
sub
loop
pop
mov
lock
shr
mov
outsb
dec
es
mov
inc
xchg
mov
dec
jmp
int
adc
popf
pushf
stos
aad
push
lock
faddl
in
dec
shrd
pushf
or
or
aad
into
ds
xlat
xchg
mov
push
xchg
mov
ret
ds
dec
test
icebp
idiv
inc
aas
inc
cmpsl
push
scas
cmp
mov
incl
pop
fsubs
mov
movsl
cs
ret
icebp
push
stos
scas
push
test
jp
lret
std
inc
jae
jo
or
cli
cmc
lods
mov
iret
sbb
fmuls
mov
mov
xor
xor
mov
adcl
mov
push
sub
jnp
inc
push
out
mov
xor
or
xor
sets
or
jae
pusha
dec
jecxz
or
enter
push
idiv
jo
adc
ds
mov
mov
or
jecxz
pop
pop
out
mov
inc
push
push
movd
jmp
mov
inc
push
jbe
cmpsl
stos
hlt
out
repz
cmp
xor
shll
jl
cmpsb
pop
and
mov
pop
arpl
jle
sbb
mov
test
lahf
mov
push
jo,pt
lret
fisubrl
or
ret
js
rclb
rcrb
shr
rorl
add
int
xchg
into
pop
mov
psllq
aas
aas
sbb
pop
jp
leave
mov
adc
push
xor
mov
roll
jo
sbb
sbb
mov
sub
pop
xchg
fcmove
dec
jp
inc
push
cmp
arpl
lcall
daa
jno
xchg
lea
repz
ror
add
incb
mov
push
js
add
add
lods
xchg
inc
xchg
xchg
cmovo
insb
fcom
xlat
adc
pop
jmp
add
in
xor
mov
shl
orb
push
and
fwait
dec
ljmp
inc
aaa
xchg
push
or
pop
lds
push
jmp
xchg
mov
mov
and
push
mov
push
mov
dec
int3
sarl
insl
mov
and
inc
scas
pusha
cld
adc
xchg
rcrb
das
rorb
lcall
pop
push
lods
jns
js
outsb
pop
pop
push
xchg
push
sbb
add
aam
xor
aaa
fsubrs
popf
xchg
pusha
mov
out
or
push
shrb
add
push
and
test
jmp
mov
test
nop
pop
push
nop
pop
fptan
push
pop
inc
addr16
fdivl
dec
jle
jo
out
lds
jo
push
imul
sub
cld
daa
cmc
xor
cmpsb
fsubrs
push
push
leave
nop
pop
imul
cwtl
inc
pop
inc
in
imul
xor
mov
pop
fldl
xor
clc
jl
and
fmull
pop
dec
repz
das
shrl
ficoml
mov
mov
mov
sbb
cmp
imul
sbb
scas
mov
lea
icebp
out
fwait
fwait
out
lcall
or
icebp
scas
lahf
sub
add
cmp
add
sbb
and
insb
push
sahf
xor
add
mov
dec
outsb
clc
lods
mov
lret
pop
icebp
push
pop
xchg
leave
add
pop
xchg
scas
pop
rorb
shrb
sbb
in
ds
sub
or
int
dec
daa
movsb
adc
in
test
pop
subl
lret
movnti
fidivs
jbe
push
xchg
loope
inc
popf
idivb
das
stc
cmc
sbb
xor
adc
daa
xor
xchg
pushf
inc
sbb
xlat
gs
lods
aam
pop
cld
push
jne
inc
jo
or
mov
aas
push
pop
ljmp
adc
enter
gs
lock
cmp
push
andl
inc
cwtl
mov
scas
stc
mov
cmp
pop
push
stc
mov
dec
mov
mov
dec
adc
lds
adc
xor
loope
jbe
adc
repz
add
fdivs
popf
and
and
fs
push
das
negb
std
pop
mov
or
or
hlt
dec
or
addb
movsl
xchg
cmpsb
in
mov
neg
xlat
rolb
or
mov
inc
pop
dec
push
mov
ljmp
popf
push
inc
or
out
cwtl
test
js
cmpsl
add
jb
rcr
pushf
add
sarl
out
sub
jle
mov
mov
push
xchg
lret
loop
or
imul
sbb
addr16
push
push
lock
test
adc
sub
jno
push
xor
bswap
cltd
icebp
in
sbb
sar
mov
insl
xchg
jecxz
sub
clc
push
negb
sub
pop
sahf
jb
mov
sub
push
and
movsb
dec
and
dec
xlat
inc
sbb
pop
cmp
pop
loope
ret
xchg
or
sub
notb
ja
jo
test
insb
push
test
fcoms
ljmpw
jbe
cmp
fdivrp
mov
cs
jg
mov
and
add
pop
adc
xchg
and
xlat
pop
scas
aas
xor
in
sub
and
cmp
ficomps
int
fwait
das
inc
clc
orb
in
cmp
jecxz
adc
cmp
cmc
push
sti
sub
idivb
rolb
fldcw
sub
outsb
addr16
insb
inc
sub
lcall
cmpsb
jle
lods
out
dec
mov
or
mov
lods
cld
push
dec
std
mov
shlb
mov
xor
lock
inc
mov
ljmp
or
bound
das
mov
add
ja
mov
jle
jbe
fld
push
icebp
repz
movb
xor
or
xor
fadds
pop
pop
mov
add
pop
ja
rorl
in
test
push
das
dec
push
inc
pop
sti
adc
pop
call
and
setnp
sbb
dec
stos
dec
into
jge
jno
lds
adc
jne
or
sbb
lret
or
test
fwait
adc
int
mov
adc
rcll
jl
dec
fisttpll
sub
mov
scas
jmp
and
jae
jg
and
imul
push
or
jp
xchg
cmp
and
leave
call
xor
and
scas
adc
ds
xchg
or
adc
mov
fs
mov
push
xchg
mov
or
insb
mov
out
in
inc
andb
sbbb
cmp
bound
orl
int3
sahf
xchg
test
fsubl
xor
dec
inc
roll
addr16
movb
sbb
lods
iret
test
jg
ret
xchg
lods
and
cmpsl
pop
aam
jl
inc
aam
cltd
jo
mov
lods
test
xchg
stos
push
rcrb
les
push
ljmp
ljmp
adc
in
xor
mov
mov
add
pop
shrb
mov
inc
push
adc
fwait
in
mov
rclb
inc
lods
sub
mov
lods
push
dec
add
shlb
test
mov
ss
push
xor
dec
jg
jno
jnp
dec
movsl
cs
test
int
loop
repz
jae
adc
pop
repz
inc
out
aam
add
jb
inc
fsubrl
fsts
or
gs
nop
jno
ja
push
gs
lds
lds
popf
pop
mov
sub
sbb
outsl
int3
sbb
jg
rcrb
push
ljmp
daa
rep
into
arpl
addr16
xchg
out
fwait
push
inc
jp
mov
in
inc
xchg
ja
adcl
jp
dec
outsb
jne
js
mov
jnp
std
or
jg
mov
lods
add
ljmp
add
cltd
ljmp
stos
inc
adc
int3
mov
cmp
mov
fwait
sub
loope
in
das
stos
push
loope
fildl
movsl
loopne
jle
mov
rcr
cmpsl
cltd
movsb
mov
pop
mov
loopne
popf
xorb
outsb
xchg
cmp
push
inc
js
and
inc
mov
jp
fwait
clc
mov
add
and
push
imul
cmp
divb
push
aas
shr
fdivl
idivb
pop
es
adc
loop
inc
les
imul
sbb
cmp
mov
cmp
mov
mov
decb
sbb
or
pop
inc
pop
das
inc
mov
in
mov
cmp
cmp
sub
mov
inc
cmp
int
enter
fisubrs
repnz
mov
int3
addl
mov
lock
jmp
insb
push
jns
nop
sti
jae
into
jno
jecxz
inc
sbb
leave
push
dec
mov
inc
jecxz
test
adc
inc
mov
jnp
iret
mov
jmp
fildl
in
pushf
ja
stc
jne
out
sub
cli
out
loope
enter
sub
out
popa
fists
xor
vaddpd
add
xor
or
mov
das
loopne
adcb
fidivl
mov
ret
std
xchg
cmp
jmp
cmpsw
es
loope
adc
test
lcall
mov
push
lds
mov
push
lea
mov
lods
gs
mov
pop
inc
jp
pop
lock
in
stc
pop
dec
pushf
mov
test
movsl
cld
loopne
jns
add
mov
ss
pop
out
sbb
add
ja
les
add
ret
add
add
sub
shlb
or
cmc
mov
dec
sahf
jne
pusha
mov
pop
pop
fistpl
xor
sub
mov
loop
mov
inc
pop
xchg
test
hlt
ss
in
xchg
mov
stos
sbb
sub
jg
jnp
fsubrp
mov
fildl
ja
mov
in
into
repnz
add
mov
cmp
pop
fs
jge
dec
xor
dec
add
into
cld
lods
jecxz
imul
pop
and
ja
inc
mov
sub
lea
dec
scas
jo
int3
popa
sbb
inc
adc
cmp
and
adc
stos
jnp
cld
arpl
lea
cmp
mov
pop
and
push
sbb
push
test
sub
jg
cli
leave
mov
negl
push
or
adc
or
xchg
lock
pop
sub
mov
cmp
push
add
ljmp
lods
dec
jg
jne
flds
addl
xchg
imul
aad
enter
out
or
push
stos
mov
imul
sbb
or
push
ret
or
inc
mov
inc
popa
or
pop
sbb
adc
or
pusha
js
xor
inc
xchg
mov
push
pushf
pop
das
xchg
insb
ljmp
push
scas
arpl
or
insb
pop
cmc
fidivl
jl
cmp
pop
fst
punpcklbw
cli
push
mov
in
insb
into
call
cs
mov
cmp
xchg
dec
mov
or
into
daa
nop
or
dec
mov
inc
mov
jnp
testb
jge
in
jo
lock
out
gs
push
andl
mov
enter
xor
jecxz
test
add
jb
xchg
or
push
sbb
sahf
icebp
xor
push
pushf
inc
jge
in
ds
pop
mov
sub
jae
cli
cwtl
xchg
cmp
loop
push
mov
push
adcb
cmpsl
lock
lret
lea
mov
mov
mov
sub
leave
mov
or
and
push
add
fnstenv
xchg
testl
cli
or
mov
mov
mov
call
pop
pop
xchg
repnz
cmp
xor
sets
jge
mov
sbb
cmc
test
loop
es
lcall
pop
xlat
vphsubdq
xrelease
push
adc
stos
inc
sarb
jno
loop
subb
lcall
icebp
push
mov
sbb
sub
aam
mov
adc
bound
arpl
pop
mov
adc
mov
test
lret
movsl
das
shlb
mov
fdivl
dec
xor
add
mov
push
xor
and
pop
mov
cli
pop
jge
xchg
inc
pop
mov
into
mov
jns
pusha
push
sbb
push
test
mov
xor
popf
popf
out
mov
loope
jmp
pop
aas
sub
rorl
cmpsl
push
xchg
mov
outsb
data16
into
inc
dec
dec
scas
scas
mov
ja
jg
fadds
outsb
jne
adc
sub
xor
filds
rclb
jmp
mov
xor
fldcw
pop
push
scas
pop
in
insl
adc
jmp
mov
adc
add
mov
pop
scas
lods
pop
or
daa
inc
das
loope
mov
inc
aas
sbb
out
push
sbb
mov
sbb
sub
cmpsl
adc
jb
in
test
xchg
dec
mov
fiaddl
mov
pop
pop
sub
mov
call
cmpsl
mov
aas
jo
push
cmp
test
cwtl
mov
pop
jg
and
and
push
push
fs
mov
cld
push
push
cmp
jb
dec
xchg
mov
jg
clc
cld
je
nop
sub
test
mov
jnp
pop
mov
out
aaa
int3
cmp
xor
nop
cmp
adc
test
repnz
lcall
jmp
jp
dec
pop
lret
mov
popa
dec
mov
mov
ljmp
xor
fs
jno
pop
into
outsl
cmp
ret
jb
pop
or
rcrl
lds
mov
inc
test
dec
add
ja
stc
lret
adc
adc
test
pop
test
ret
es
adc
cmpsb
adc
push
mov
xchg
insl
and
ror
movsl
xchg
push
mov
jle
les
jle
bound
scas
iret
mov
out
test
movsl
xchg
push
jg
push
jmp
lahf
and
sub
subb
jns
in
gs
and
sahf
xor
sub
mov
jle
data16
push
push
or
or
cmp
scas
push
add
sahf
adc
fs
xchg
mov
sbb
stc
inc
ds
dec
xor
or
inc
imul
mov
fidivl
jmp
pushaw
xchg
jne
outsl
xchg
add
mov
movsl
fdivr
xchg
xlat
cmc
out
xor
xlat
add
addr16
or
movsl
pop
imul
add
lret
clc
pusha
inc
pop
loopne
jge
add
lcall
fildll
pop
add
lahf
mov
jne
adc
inc
in
test
insl
insl
sub
sarb
pop
dec
jbe
add
fiadds
jmp
neg
and
rolb
dec
inc
xchg
xchg
sub
cmp
pushf
sub
mov
or
mov
out
xlat
sub
pslld
sbb
jge
inc
out
aaa
out
jge
in
pop
jl
push
sub
mov
and
sbb
jle
fistpl
enter
mov
addr16
lret
ret
sbb
dec
sbb
stos
jno
or
int3
mov
xor
mov
sbb
aas
push
int
shrb
popa
adc
cmp
das
cmp
cmpsb
sbb
js
inc
das
sbb
mov
cmp
sbb
mov
sti
cmp
js
icebp
sub
xor
mov
adc
ja
and
pop
test
pop
and
sbbb
jg
test
push
and
or
dec
push
js
int
adc
sub
cmp
sbb
adc
cmpsl
or
movsl
clc
adc
mov
fs
mov
mov
setbe
cli
pop
inc
lcall
leave
ret
repz
cwtl
push
adc
leave
sub
xor
data16
add
popa
aaa
jbe
mov
jp
sahf
out
shlb
cmp
mov
mov
nop
dec
add
mov
and
mov
lret
xchg
pusha
inc
push
test
outsb
repz
mov
jnp
std
xchg
test
fwait
xchg
aad
sti
mov
mov
fsubrl
pop
mov
mov
sbb
hlt
mov
cmp
mov
popf
lret
and
nop
test
adc
cwtl
mov
inc
adc
mov
pushf
test
clc
js
stc
cmpsl
pop
adc
lock
push
out
mov
mov
test
jno
xor
test
cwtl
scas
arpl
in
test
mov
push
dec
adc
add
and
adc
jo
push
in
mov
movsl
stos
flds
popl
add
or
popf
jge
mull
into
test
sub
sbb
xchg
dec
dec
cltd
inc
lea
lods
std
pushf
ljmp
or
mov
sbb
je
jge
jno
push
and
xor
dec
lods
pop
add
ds
push
xchg
adc
rol
test
dec
and
fwait
push
adc
shrb
lods
add
insb
jae
cli
push
xchg
lock
mov
sbb
xor
and
sub
fsubrp
lods
push
adc
cmp
sbb
sarl
push
out
push
scas
sbb
jnp
push
dec
adc
xchg
mov
mov
and
mov
fprem1
les
cmc
jnp
and
cltd
mov
popa
cmp
mov
lea
adc
sbb
xchg
mov
insl
sbb
loope
inc
lods
pushf
in
xchg
dec
mov
repnz
es
add
sub
leave
scas
inc
aas
es
jp
and
hlt
pop
hlt
add
xchg
pushf
cmp
push
mov
jns
adc
popf
or
lret
adc
fstpt
mov
insl
dec
cld
jo
shl
cmp
repz
mov
incl
cmp
lds
mov
imul
mov
lcall
ja
and
in
xlat
cmp
icebp
out
inc
mov
mov
cmpsl
xor
loopne
and
or
daa
fcomi
int
pop
hlt
mov
xchg
std
cmc
test
subb
add
lods
jb
xchg
insl
flds
xchg
mov
and
pop
fisubrl
repnz
sbb
aas
rorb
push
inc
les
mov
js
clc
mov
adc
lock
mov
in
inc
stos
cmpsl
fstpt
push
les
xor
sub
lcall
adc
lret
xor
clc
movsb
mov
mov
outsl
cmp
dec
push
data16
push
sbb
mov
sub
scas
cmp
push
cmp
xor
int3
fs
xchg
push
xchg
xchg
xor
mov
jns
or
daa
and
sub
test
and
inc
outsl
mov
add
fdivp
push
lds
sub
lret
mov
fidivrl
dec
jge
data16
scas
fs
ret
notl
xchg
mov
sub
mov
insb
add
stos
sub
iret
mov
push
movsb
cmpsb
insb
ret
push
sub
test
mov
mov
fwait
cld
jno
dec
push
pop
mov
and
push
icebp
xchg
fsub
test
popa
pop
ss
push
roll
mov
out
scas
fs
add
aas
dec
ror
sbb
push
and
les
inc
dec
mov
mov
addl
mov
loope
ss
mov
add
sbb
shrb
or
xor
add
js
cltd
mov
repz
or
sbb
or
sub
mov
sub
jp
leave
push
adc
cmc
adcb
insl
scas
lret
inc
outsb
leave
lods
std
out
jns
and
add
imul
lcall
mov
rcll
xor
cld
hlt
mov
push
lods
movsl
push
and
loop
movsl
dec
mov
js
mov
or
arpl
repz
push
movsl
pop
xchg
insl
sub
fsubrl
incb
pop
mov
mov
aam
data16
sbb
loopne
loop
sub
push
dec
scas
fstps
jmp
pop
stos
loopne
xor
pop
mov
fisubrl
mov
sbb
cli
mov
sbb
andb
mov
shll
pop
sbb
je
inc
dec
movsbl
sub
sub
ret
js
xchg
loopne
aaa
test
sbb
push
or
push
mov
mov
call
cmp
mov
shrl
popf
je
mov
and
call
jbe
aaa
mov
pop
push
ret
inc
clc
jle
cmp
push
imul
jae
aad
and
push
jge
lahf
js
or
out
xor
and
in
pop
mov
fidivs
mov
dec
sbb
dec
test
push
push
mov
mov
pushf
xchg
ret
negb
cwtl
dec
xchg
popf
pop
or
mov
push
inc
stc
iret
pop
cli
mov
dec
fisubrl
or
adc
arpl
ja
in
pop
mul
pop
test
cmpsb
mov
imul
jecxz
xchg
push
out
inc
sub
pop
sub
arpl
popf
and
xlat
pop
or
ds
xchg
mov
cmp
int3
jl
insl
dec
add
sub
mov
push
adc
sti
sub
pop
aad
loop
mov
aam
je
jg
ds
xor
pop
roll
jmp
jnp
push
mov
outsb
in
cmp
movsb
mov
push
sbb
aaa
xchg
imul
subl
dec
mov
mov
push
lahf
fxch
mov
mov
fcomip
dec
dec
in
jl
std
pop
jge
stc
mov
push
xor
push
sarb
dec
test
rolb
inc
mov
and
outsl
xor
adc
xor
push
inc
fs
adc
out
sti
es
out
rcr
sbb
jmp
pop
mov
mov
lods
leave
mov
das
mov
leave
xor
xchg
test
lods
and
push
test
mov
jg
mov
lea
hlt
mov
push
mov
lds
inc
xor
sbb
das
daa
mov
jmp
and
pushf
arpl
or
jmp
shl
fdivp
xchg
mov
push
popa
mov
insl
xchg
dec
jb
push
xchg
push
fdivl
lret
push
jae,pt
shl
bound
add
cmp
dec
aad
push
fcmovb
mov
xor
mov
lret
aad
ja
icebp
pop
scas
add
sahf
cs
xor
pushf
jnp
mov
xchg
cmp
adc
cwtl
dec
in
and
mov
jae
ffree
jnp
in
sbb
clc
or
sub
icebp
adc
dec
cmp
add
in
xor
lods
movsl
cmp
ljmp
and
imul
inc
jp
dec
dec
mov
sbb
scas
mov
ds
adc
das
js
daa
xor
dec
test
daa
lods
fwait
jo
pushf
sbb
cwtl
hlt
ss
clc
addr16
mov
jecxz
inc
dec
je
jno
jl
test
cmp
data16
loop
repnz
dec
lcall
dec
fdiv
mov
dec
ret
inc
insb
popa
shl
aam
adc
pop
fcomp
mov
fsubrl
shlb
out
pop
out
jno
and
sub
jnp
rep
cwtl
enter
rcll
mov
into
jg
xor
push
push
mov
test
push
xor
dec
rcrl
jl
out
sbb
std
inc
cmpsb
arpl
add
add
push
add
mov
mov
sub
repnz
adc
dec
std
mov
mov
or
sub
mov
xor
xchg
mov
or
mov
push
pop
ficoms
inc
push
dec
decl
adc
fwait
call
cmp
gs
mov
inc
xor
shlb
lahf
shll
fs
push
mov
mov
imul
xlat
loopne
mov
incb
sub
movswl
mov
lret
mov
xchg
inc
je
mov
out
sub
ret
insl
mov
xchg
es
dec
lods
cli
mov
mov
bound
cmp
jb
fisttps
dec
push
cmp
std
and
cmp
xor
mov
pop
ret
mov
test
in
jmp
cmp
addr16
arpl
clc
cmp
movsb
xlat
das
dec
or
insb
jb
fdivrs
mov
xchg
push
arpl
fimuls
mov
jge
adc
lahf
pop
push
sbb
pop
mull
push
dec
dec
xchg
push
int3
sub
or
jae
aaa
jge
or
jp
inc
xchg
test
test
xor
jbe
mov
add
sti
lret
push
pop
pop
add
jle
add
mov
rol
xchg
cld
dec
add
push
mov
lret
aaa
inc
dec
push
add
out
xor
xchg
shlb
xorb
aas
xchg
out
outsb
xor
dec
stos
mov
and
enter
test
jecxz
cmpsl
outsb
subb
and
jbe
or
pop
insb
lret
dec
sarl
out
cli
gs
adc
stc
movl
fsubl
mov
or
push
xor
mov
ja
les
and
and
inc
xor
xor
xchg
stos
cmp
int
xchg
nop
rcl
and
mov
dec
sub
sbb
cs
sub
push
fsubl
inc
xor
sub
inc
ljmp
pop
hlt
nop
dec
movups
mov
and
add
push
test
mov
clc
nop
ja
xchg
int
aaa
cmp
sbb
cmpsb
vpand
xchg
sahf
cmp
lods
shr
pop
mov
push
xor
push
push
sbb
outsb
call
aam
enter
loope
cmp
aaa
or
in
cmp
push
jo
xchg
lcall
xchg
and
push
pop
mov
outsl
sbbb
iret
inc
sub
pop
mov
imul
popa
push
sti
sub
fmuls
xor
xor
in
insb
sbb
cwtl
xchg
lods
lea
idivl
or
call
imul
adc
xchg
dec
add
inc
fnstcw
clc
insb
xor
je
insb
and
or
jns
dec
xor
jnp
addr16
sbb
sub
inc
popl
sub
jl
ret
lret
pop
xchg
or
hlt
sarb
sub
jne
xchg
sub
jl
dec
or
sub
and
cltd
mov
sbb
into
jno
out
fdivrs
test
mov
mov
out
outsl
jbe
or
cmpsl
mov
cmc
into
or
fsubl
inc
rolb
add
outsl
lahf
inc
mov
test
sub
imul
shll
jne
xchg
add
jl
pop
dec
aad
pop
and
jno
fwait
notl
sub
lock
add
adc
xor
dec
push
xor
sbb
jg
shlb
faddl
or
insl
mov
push
mov
pop
mov
pusha
push
xchg
add
adc
or
fucomp
loopne
out
ret
test
bound
lcall
les
cmp
mov
rcrb
jle
enter
orb
pop
out
cmovno
mov
mov
std
shrb
stos
lahf
add
mov
pop
inc
sti
mov
mov
xor
mov
jno
lds
cmc
and
out
mov
push
sub
and
mov
outsl
push
fisttps
xchg
adc
add
outsl
aas
mov
jb
fiadds
xchg
pop
out
adcl
sub
bound
stc
aaa
out
out
mov
pop
add
out
xchg
addr16
sahf
lock
bnd
fdivrs
int
loope
push
test
mov
add
icebp
out
mov
cli
and
adc
dec
cltd
sub
xor
daa
subl
pop
mov
movsb
add
aad
pop
mov
dec
jmp
push
sbb
or
pop
mov
xor
cmp
fadds
lods
or
dec
test
or
sahf
movsb
iret
je
lcall
pop
outsl
movsl
xor
iret
fdivrl
mov
xchg
not
stos
pushf
pop
cmc
sbb
cmp
int
lret
add
sar
xor
into
loopne
orl
loopne
add
fs
int
arpl
scas
push
xchg
popa
shl
in
mov
dec
dec
fwait
std
xchg
sub
mov
adcl
test
int
test
xor
pop
jle
push
jg
mov
dec
sub
jae
mov
xchg
or
bt
dec
out
sub
pusha
xor
je
pop
xlat
popf
ds
andb
mov
int3
dec
adcl
add
bound
jb
pop
mov
pushf
pop
adc
push
fwait
inc
addb
lret
push
mov
jns
jno
lock
shll
sbb
xchg
adc
dec
dec
pop
test
pushf
stc
cmp
push
jb
popf
mov
mov
jno
pop
mov
jp
mov
sbb
pop
push
adc
inc
dec
pusha
jl
cmpsl
xchg
xor
sub
cmpsb
dec
lret
cmc
or
jmp
mov
inc
cmp
jl
adc
and
ficompl
adc
cli
xor
fbld
arpl
adc
ss
data16
test
add
fwait
icebp
stos
inc
xchg
pushf
sbb
ljmp
mov
xchg
sbbb
fisubl
nop
subl
xchg
ror
adc
cwtl
adc
repnz
add
hlt
loope
cmp
mov
push
cmpsb
clc
mov
or
push
fdivrl
cmp
pop
jg
sub
lret
adc
into
icebp
and
repnz
inc
xor
inc
out
jo
shll
stos
xor
movsb
inc
pop
je
ret
lret
orb
xchg
fidivs
push
arpl
push
jne
aam
pop
fistl
insb
mov
mov
add
xchg
fsub
sbb
mov
fisubrs
inc
orb
pop
cmp
mov
xlat
test
in
inc
jns
sub
pop
fsubp
lret
lds
cmpsb
jge
pop
popa
stos
mov
cmpsb
rol
jnp
test
push
cmpsb
sub
xchg
cltd
dec
push
mov
and
push
inc
xor
hlt
inc
in
popa
dec
sbb
ljmp
sub
pusha
and
add
or
lods
sarl
movsb
test
daa
jno
ds
std
pop
push
mov
js
and
outsb
and
mov
hlt
cmp
in
cs
sbb
cmp
cltd
mov
pop
daa
sbb
cs
gs
fcoms
sub
sti
pop
sahf
cmpsl
gs
lcall
fs
jae
stc
imul
call
in
jl
push
sbb
test
das
jmp
lahf
jmp
sbb
out
push
jo
and
cltd
dec
dec
dec
push
aaa
arpl
jge
dec
jmp
fsubrs
and
sub
mov
popf
dec
aad
push
incl
jge
cmpsl
xor
add
sbb
lea
lock
sbb
lods
mov
push
inc
loop
push
inc
pop
cld
mov
dec
sbb
aam
int
out
leave
call
jmp
insb
and
mov
aad
test
imulb
push
adc
andb
ret
or
and
mov
cmp
mov
cmpsb
pusha
adc
sub
xchg
jge
jae
adc
popf
inc
leave
push
stos
inc
sbb
in
push
les
and
mov
pop
xlat
daa
js
movsl
jb
push
inc
sbb
add
add
pop
jle
pop
push
js
inc
cmpsl
xchg
rol
subb
sub
pop
jbe
xorl
aas
mov
add
mov
jne
repnz
cli
ret
mov
loop
test
pop
and
pop
mov
data16
adc
imul
pop
and
pop
push
add
notb
mov
xchg
xor
adc
pop
jb
ss
jge
mov
js
ret
test
outsb
mov
imul
push
orb
sbb
sbb
mov
fdivrl
adc
sub
scas
sub
pop
xchg
movsb
test
fnstsw
dec
es
jb
mull
mov
jb
mov
pop
sbb
mov
out
mov
sarb
mov
bound
cmp
xchg
inc
push
jge
push
mov
repnz
xchg
add
mov
in
fsts
cmc
pop
lcall
dec
dec
imul
push
hlt
loop
xchg
jle
xor
cmpb
xchg
in
sahf
add
mov
mov
or
imul
and
xchg
sub
mov
stos
pop
arpl
cmp
in
and
xlat
pop
fsubl
aas
lret
xor
jnp
dec
cmp
jg
gs
pop
shl
inc
inc
sub
leave
shr
push
addr16
dec
stc
cld
jns
pop
mov
into
paddusb
or
jmp
sbb
dec
and
and
xchg
imul
push
adcb
adc
bound
cmpsl
mov
data16
lods
hlt
in
push
and
loop
add
and
xchg
aam
jo
sub
test
jne
jno
in
cld
xor
pop
movsb
inc
test
sbb
sub
loop
cmp
lea
xchg
add
xor
std
repz
mov
adc
mov
stc
and
mov
jnp
mov
in
stos
push
cltd
rcr
or
pop
pop
and
sbb
stos
mov
std
hlt
jo
out
mov
jmp
je
rcrl
mov
in
push
ljmp
push
test
lcall
mov
pop
cli
sbb
mov
aad
cmp
out
mov
sub
ret
test
push
cmpsb
cmpsl
pop
aam
push
and
or
mov
lahf
sbb
jmp
or
cltd
out
stc
out
popf
and
or
nop
cwtl
sub
sbb
sbb
test
movsl
xor
cld
push
int
testb
lret
testb
jbe
sbb
mov
push
cmpsb
xchg
in
sbb
inc
sub
inc
lds
sub
hlt
pop
lcall
filds
xor
mov
inc
mov
loopne
add
jmp
add
test
cld
sti
scas
jp
adc
mov
xchg
inc
fbld
xor
jns
sbb
insb
stc
add
mov
in
mov
cmp
jb
outsb
mov
inc
aad
dec
mov
jp
push
popl
out
xlat
loopne
pusha
cwtl
rcll
jl
mov
xchg
rcrb
test
mov
cmp
test
fdivrl
mov
ss
mov
or
stos
addb
insl
adc
setb
pop
sub
inc
enter
cmpsl
push
lahf
cwtl
push
jmp
das
out
insl
fxch
mov
cmp
mov
imul
push
clc
notb
mov
dec
push
push
xor
lret
sbb
sti
adc
jne
cltd
rclb
jmp
stos
or
ja
xchg
sahf
jno
mov
js
mov
mov
or
jle
mov
cmp
cmp
pushf
les
loopne
jb
adc
loope
fnstsw
andb
mov
and
ffree
or
cld
push
xchg
shl
jp
mov
sbb
ss
dec
push
dec
mov
sub
test
add
sbb
pop
mov
ja
jp
add
push
mov
aam
test
and
or
sahf
mov
add
das
sahf
nop
lcall
mov
fimull
inc
mov
sbb
mov
iret
inc
mov
fldenv
fistpll
scas
mov
mov
adc
add
xchg
jge
mov
mov
repz
loopne
cmp
arpl
bound
mov
sub
aas
out
and
mov
clc
pop
cmpsl
repz
lret
or
ret
pop
fnstenv
adc
fmuls
ficomps
das
sub
jbe
jns
add
xlat
pop
sahf
jecxz
adc
jp
sub
fstl
pop
popa
push
or
imul
fmuls
cli
pusha
mov
push
mov
enter
lret
sbb
lods
jg
inc
or
mov
pop
ret
aam
sbb
ret
cmp
scas
in
xchg
or
cmp
dec
push
repnz
sub
mov
cmp
outsl
mov
sub
popa
rcr
roll
pushf
shrl
mov
repz
imul
mov
mov
and
sbb
out
jb
insl
add
cmpsb
dec
jno
aaa
inc
es
imul
adc
mov
xchg
adc
loop
ja
mov
in
inc
mov
dec
push
dec
xchg
shl
adc
mov
push
lcall
inc
lret
insb
cltd
pusha
mov
das
jae,pt
fwait
int
lcall
dec
push
mov
jg
xor
pop
xor
enter
mov
dec
adc
lcall
js
dec
mov
push
jbe
das
test
push
xchg
inc
test
push
inc
das
or
enter
sub
aaa
sbb
dec
adc
stc
and
inc
inc
fcmovbe
and
jecxz
add
push
xlat
repz
in
ret
adcl
inc
nop
rolb
sub
clc
xor
lds
jns
stc
xor
bswap
cmp
fstp
jle
pop
cmp
negl
jne
sbb
xchg
dec
mov
or
ljmp
jle
mov
mov
xchg
push
jge
mov
test
lahf
xchg
adc
js
mov
out
loope
loop
cmpsb
mov
lret
pop
movsb
lahf
mov
ss
jno
pop
pop
shlb
ljmp
cmpsl
and
sahf
xchg
mov
pop
in
pop
jae
xchg
cwtl
add
mov
jl
lahf
in
hlt
mov
push
pop
pop
imulb
mov
rcrl
inc
popf
adc
push
push
je
lahf
in
int3
and
adc
filds
pushf
lods
xor
pop
jmp
pop
push
in
lahf
xor
jns
ftst
dec
call
pop
repnz
xor
mov
mov
push
pushf
jmp
imul
jecxz
xorl
inc
cs
mov
dec
cmc
cli
lret
loop
jge
mov
fs
test
mov
mov
cmpsl
or
mov
pushf
insb
pop
push
imull
jmp
test
sbb
lcall
lahf
call
aaa
notl
xchg
es
jne
pop
je
adc
inc
push
or
xchg
xchg
sbb
popf
lods
repnz
test
cmp
cmpsb
sub
gs
dec
mov
mov
iret
pop
jecxz
pop
aad
shlb
xor
xchg
andl
gs
jecxz
add
mov
jge
out
mov
inc
loop
lcall
push
or
mov
sub
xor
cmp
adc
in
ljmp
insl
lds
push
addl
pusha
popa
push
and
jnp
ret
fcompl
pusha
scas
adc
data16
sub
sub
mov
jb
test
rcr
cmpsb
pop
and
dec
loop
imul
scas
xor
mov
gs
mov
jbe
jo
xor
and
fdivr
cld
or
dec
pop
and
test
ljmp
cmp
sub
loope
adc
dec
shrl
jno
aas
ss
mov
jb
mov
inc
gs
lea
ret
or
pop
int3
les
dec
adc
xchg
cmp
imul
or
sub
jl
mov
xorl
push
fdivr
rcrl
fnsave
mov
fnsave
int3
mov
sbb
ss
test
jecxz
rcl
sub
xchg
leave
xchg
inc
jle
and
jp
aam
mov
pop
inc
jp
clc
shld
into
mov
int
fsubr
jp
mov
push
lea
push
pmulhw
jp
and
ficoml
shll
das
xchg
xor
jecxz
shr
jo
fwait
repnz
inc
mov
int
ficoml
xor
cmp
stc
cmpsl
divb
insb
mov
push
adc
cmpsl
test
out
sbb
aas
call
and
push
int
scas
fwait
out
mov
je
aad
mov
pop
fimuls
aad
insl
fisttps
fwait
pop
pop
in
test
pop
jne
sahf
sahf
and
mov
push
jo
movl
insl
test
mov
sti
bnd
ss
fidivl
inc
mov
es
dec
pop
sbb
cmp
andb
sub
aad
and
mov
je
in
mov
leave
mov
pop
sub
jno
out
or
mov
iret
hlt
cld
mov
in
pop
mov
js
mov
pop
in
jp
cmpsl
out
push
int3
cmp
inc
add
mov
in
rolb
and
mov
pop
sbb
cmpl
insl
fldcw
test
mov
fs
or
add
imul
inc
inc
jns
test
ja
or
loope
popf
xor
dec
cmpsw
or
out
in
shll
ja
or
mov
xchg
sbb
xor
mov
dec
loopne
sbb
xor
mov
mov
add
mov
pop
mov
mov
cli
inc
jnp
pop
mov
pop
push
push
pushf
notl
mov
lods
mov
pop
pop
mov
ret
adc
lcall
add
push
int
cld
pop
scas
cli
fldt
lret
xabort
lcall
jns
push
pusha
inc
xchg
lcall
stos
mov
int
fildll
xor
imul
mov
mov
movaps
and
xor
dec
mov
mull
xor
dec
push
cli
cli
in
mov
fsubp
xchg
inc
xchg
push
mov
and
cmpsl
or
adc
sub
les
mov
jne
and
xchg
xor
add
and
jmp
ret
cs
mov
fistl
sbb
je
xor
and
bound
arpl
inc
mov
in
inc
mov
leave
or
mov
imul
les
stc
incl
or
mov
mov
mov
mov
lret
cmp
and
inc
in
dec
inc
adc
and
aad
mov
pusha
jb
leave
push
cltd
pop
lret
repz
sbb
insl
cli
push
pop
rcrl
push
movsb
test
test
jg
jecxz
scas
and
jle
aad
testb
loope
cs
dec
lahf
inc
inc
into
lret
mov
arpl
lds
cmp
or
pop
in
enter
push
inc
sub
mov
add
mov
rcrb
mov
test
push
rcrb
mov
sbb
mov
lds
lods
add
mov
rcll
and
jns
sti
ss
pop
leave
shll
xchg
mov
xchg
adc
jle
sub
or
mov
jl
lahf
cmp
sti
cmp
lea
leave
xchg
je
gs
add
jmp
mov
into
xor
push
jae
adc
mov
jno
fildll
ja
jbe
pop
daa
mov
add
push
inc
das
push
adc
cmp
sbb
stos
cmp
adcb
inc
xor
mov
in
shrb
out
mov
repz
subb
pop
sub
push
loope
test
and
loop
mov
jns
xchg
pop
outsb
mov
mov
movsb
ljmp
out
cmpsl
gs
push
or
iret
test
fcmovnu
test
dec
mov
scas
stos
push
inc
jecxz,pn
push
push
repnz
mov
je
out
je
mov
addr16
pop
cmovbe
xchg
mov
push
insl
out
xchg
in
imul
insb
dec
test
mov
dec
add
sub
xchg
dec
mov
enter
xchg
xchg
add
std
and
mov
movsb
adc
test
dec
stc
test
sub
fwait
das
inc
fisubl
dec
cmp
sbb
andl
xchg
clc
popa
gs
arpl
push
out
xor
fnstcw
sar
adc
out
push
ret
ljmp
jno
mov
adc
xor
std
fdivs
mov
lret
inc
mov
imul
and
lahf
push
xor
fdivrs
int
out
pop
pusha
dec
push
leave
mov
in
adc
subl
pop
sbb
imul
fwait
mov
sub
lahf
mov
xor
cld
stc
sbb
xor
imul
imul
mov
jb
push
push
or
push
lea
inc
xorb
lcall
mov
stos
data16
cmp
or
mov
xchg
mov
push
sub
adcb
xchg
hlt
fidivl
add
add
mov
jp
loopne
lock
popa
mov
mov
sbb
lods
lea
lock
in
cmp
imul
inc
cmp
loopne
dec
xchg
leave
push
xor
sub
add
xor
mov
dec
ficomps
mov
aad
inc
adc
mov
bnd
scas
andl
jge
movsl
and
xchg
mov
inc
icebp
push
test
js
clc
int
shll
out
mov
pusha
iret
out
sub
sahf
xlat
test
dec
adc
xor
push
mov
mov
fsubrp
cld
or
pop
rcll
or
cli
das
jne
lret
jb
rorl
movsb
sub
lea
add
shrl
call
xor
pop
sub
fcom
mov
stos
mov
cmpsl
xor
jecxz
dec
fiaddl
sub
sarl
mov
xchg
or
sub
xchg
sbb
mov
or
sub
cmp
jge
divb
jne
fstps
cmp
test
cltd
adc
lahf
in
mov
pop
stos
jle
lcall
in
out
sbb
mov
adc
jo
scas
mov
js
mov
outsl
adc
rcl
dec
out
cs
sub
add
shll
and
xor
insl
jne
insb
cmp
push
mov
jge
sbb
repz
cwtl
jne
inc
ffree
jmp
sub
ror
adc
or
testb
inc
mov
or
lret
ficoml
sub
repz
or
sahf
xchg
cmp
and
inc
push
push
sub
adc
dec
and
lahf
mov
push
inc
insl
roll
dec
addr16
cwtl
std
jge
adc
cmp
mov
jbe
push
sbb
addb
mov
pop
jle
imul
or
lock
or
sub
sahf
out
push
fistps
sbb
push
insb
sbb
sbb
push
push
push
cmp
and
in
mov
and
aas
or
push
nop
popf
js
mov
or
out
mov
sarb
mov
pop
in
cli
rolb
jge
out
stc
xchg
jge
lcall
sti
into
xchg
cwtl
sub
xor
out
xchg
jecxz
imul
shl
in
in
sti
pop
inc
outsb
xor
pop
sbbl
fimull
inc
push
push
cmp
inc
push
dec
sbb
imul
cmpsl
stos
jmp
ror
pop
jbe
insl
lea
scas
js
and
sbb
fistpll
loope
int3
jns
inc
lock
scas
int3
out
mov
and
xchg
das
xor
inc
sar
or
stos
scas
inc
test
sbb
movsl
call
outsb
je
inc
cmp
add
lcall
stos
inc
mov
repnz
xor
sbb
adc
cs
lds
out
push
jno
lcall
ret
mov
pop
cmc
fldl2t
xor
jecxz
andl
sbb
call
dec
xchg
sahf
xchg
in
movsb
adc
push
jae
push
jmp
inc
xor
dec
fcoml
ret
imul
dec
bound
jl
int3
add
imul
iret
test
push
nop
push
xor
das
add
sti
popl
push
dec
mov
pushf
jge
pop
xchg
and
add
mov
adc
adc
push
and
or
hlt
sbb
cltd
lcall
and
jp
movb
int3
adc
shlb
dec
add
push
add
testb
sub
jge
loopne
sub
lret
mov
dec
js
std
jae
add
ds
cmp
dec
scas
in
mov
aas
jecxz
lods
test
xchg
mov
dec
adc
es
repnz
ja
jo
jns
repnz
popf
into
cs
xchg
mov
sbb
jno
push
lea
jp
nop
jae
arpl
jecxz
leave
xchg
pop
sub
add
daa
mov
push
add
and
inc
ss
mov
inc
ljmp
mov
stos
jno
xchg
aaa
jns
aas
inc
insb
cmp
lock
fchs
insb
fnstcw
or
insb
fwait
add
test
jbe
nop
push
test
or
and
leave
popf
dec
mov
add
ret
xor
jp
imul
movsb
and
or
stc
push
adc
xor
outsl
sahf
push
mov
jl
or
iret
shlb
fsts
pop
rclb
mov
sub
stc
push
arpl
add
jnp
rorl
adc
jmp
and
sarb
mov
xor
xor
or
and
movsl
scas
pop
pop
out
mov
jnp
mov
mov
enter
dec
pop
fcmovne
sub
pmulhw
and
jmp
outsl
jmp
and
fisttpll
mov
fbld
lret
sbb
popf
ret
pop
push
xor
cmp
xor
rorb
mov
rolb
lds
adc
scas
sbb
push
imul
data16
sbb
dec
fs
adc
fiadds
dec
add
jmp
sub
adc
mov
cmpsb
fimull
mov
aam
sbb
lahf
pop
out
loope
dec
inc
pop
stc
add
fdivs
lret
incl
aas
or
mov
sbb
add
in
sub
repnz
roll
xlat
sbb
and
mov
adc
inc
push
dec
cmpl
ss
xor
add
xor
lods
test
stos
mov
dec
push
adc
popf
mov
mov
test
sbb
ljmp
jae
pop
pop
mov
rol
data16
inc
dec
jmp
lods
aad
cmp
cmp
jne
mov
inc
inc
test
add
and
xor
add
stos
in
inc
push
or
sub
insb
lret
nop
or
mov
push
jbe
lds
addb
dec
adc
jns
cmpsl
adc
mov
pop
int
jb
jno
pusha
or
add
push
mov
mov
call
jne
add
pusha
in
mov
ja
mov
fwait
shrb
pop
fnstenv
add
leave
jae
or
and
xchg
mov
mov
fdivrs
mov
push
mov
push
cmpsl
shlb
lds
push
clc
add
mov
sub
movsb
mov
mov
lret
sarl
enter
pop
adc
testl
imul
inc
adc
sahf
lret
stc
or
jle
fsubrs
ret
andl
adc
mov
fs
cmp
sub
insl
loop
shlb
stc
push
iret
add
addr16
shll
insl
in
sub
loope
enter
shl
pop
and
mov
cmp
daa
cmp
shll
jmp
fistpll
cmpl
flds
and
inc
out
fsubs
sbb
imul
adc
dec
loopne
push
outsl
mov
arpl
add
mov
mov
js
dec
ja
stos
ror
mov
call
push
pop
sti
adc
mov
mov
gs
subl
ljmp
sbb
fs
fisubrl
shrl
dec
push
adc
mov
mov
xor
jecxz
dec
ja
daa
jecxz
mov
mov
and
adc
js
shl
fistps
loopne
filds
jno
xchg
mov
mov
and
mov
dec
cmp
das
and
les
lret
push
push
fwait
ret
pop
pop
inc
pop
push
xchg
mov
xchg
fmul
inc
mov
ja
inc
pop
insl
aaa
adc
jmp
xchg
xor
cs
xchg
dec
cmc
mov
xor
inc
jae
dec
sbb
push
jmp
sbb
push
jne
mov
sbb
popa
jp
mov
sahf
jne
push
and
leave
jmp
out
sti
mov
mov
jmp
xchg
push
clc
push
mov
ja
or
and
ljmp
js
adc
jns
adc
notl
in
aaa
cmc
std
rol
mov
mov
fmuls
mov
push
daa
sbb
mov
jne
daa
xchg
dec
mov
mov
mov
xlat
jp
sbbb
pop
test
and
mov
mov
mov
pop
mov
mov
popa
fldcw
clc
mov
jmp
aaa
loope
sbb
setg
mov
pop
sub
fwait
sub
push
inc
imul
sahf
sub
ret
or
sbb
cmp
pop
mov
aas
ljmp
and
dec
gs
inc
fbld
pushf
shrl
or
or
push
hlt
out
mov
loop
jle
cmp
xchg
pop
test
xchg
sub
push
push
sbb
mov
cmpsb
mov
pop
cmpb
jnp
loop
mov
sbb
fisubrl
fistpl
inc
sub
sbb
es
lea
fs
aaa
lahf
mov
pusha
fcomip
xchg
add
pushf
rclb
je
insl
je
push
int
sbb
xchg
sarb
scas
pop
cld
fadd
inc
dec
fs
mov
sbb
cld
outsl
xchg
shrl
jmp
cld
jne
cltd
dec
stc
test
std
pop
xor
and
or
pop
mov
outsb
xor
xchg
int
push
sbb
dec
int3
and
xor
xchg
popf
test
out
push
mov
rclb
xor
push
xchg
out
out
imul
xor
dec
xor
lret
pushf
icebp
cmp
mov
outsl
cld
mov
mov
xchg
jge
mov
sahf
jecxz
mov
icebp
pop
in
or
jp
daa
mov
cmp
sbb
or
mov
ret
repnz
mov
gs
pop
aad
push
enter
loopne
out
clc
js
das
ds
popa
pusha
xchg
cmp
and
out
gs
das
xlat
ljmp
repnz
outsl
mov
repnz
scas
ret
pop
pop
aam
divb
or
stos
in
inc
or
push
and
pop
inc
in
lret
cs
mov
das
je
jo
adc
lcall
sub
jmp
mov
mov
sahf
mov
lds
cmc
mov
mov
mov
xchg
dec
jmp
fcomps
and
in
aad
xchg
inc
sbb
xchg
sbb
cs
mov
push
xor
sarl
pop
jb
dec
lcall
callw
cmp
mov
fs
xlat
mov
imul
leave
add
push
int
shll
ja
xchg
aaa
add
sarl
mov
xchg
xchg
stc
mov
aam
lods
dec
aaa
jmp
lahf
in
jmp
sub
xchg
shlb
mov
stos
xchg
fnstsw
lahf
jecxz
inc
mov
cmpsl
lea
inc
add
push
pop
enter
es
and
add
dec
mov
pushf
jl
cld
mov
in
repnz
dec
fbld
mov
push
sub
lods
jbe
push
mov
in
sub
dec
cwtl
sbb
out
data16
lret
roll
push
mov
ret
mov
dec
mov
lods
adc
xchg
mov
dec
and
push
xchg
or
or
dec
dec
lock
add
je
jo
inc
fcomp
mov
aad
pop
aad
add
lcall
stc
cmp
clc
std
nop
jne
aad
cmp
inc
fstl
scas
or
mov
push
mov
mov
xor
leave
fisubl
rcrl
insb
data16
push
fadds
and
cmpsl
jle
add
subb
cmpsl
mov
iret
sbb
push
and
xchg
sub
lods
xchg
outsb
in
sahf
cli
inc
lret
fstl
inc
push
dec
or
movsb
aam
lds
mov
mov
mov
xor
test
mov
pushf
push
jmp
dec
mov
push
xorl
cmp
cmp
adc
test
xor
xor
arpl
cs
sbb
int
das
xchg
push
add
movsl
mov
pop
negb
and
lahf
fisubl
nop
inc
add
aad
bound
push
nop
inc
arpl
dec
je
jb
cwtl
in
dec
mov
mov
loop
aas
sub
sub
cmpsl
sbb
gs
cmc
out
xchg
out
sub
js
sbb
fldcw
cmp
call
test
outsb
rolb
lock
notl
mov
mov
or
out
mov
mov
adc
fsubs
jl
sti
mov
jbe,pn
rcrl
or
dec
mov
jne
cmpsl
sbb
rolb
inc
xor
out
hlt
int3
xchg
shl
int3
js
push
sbb
inc
stos
and
sub
faddl
push
pop
lock
fmul
xor
adc
fdivs
shll
jbe
pop
mov
adc
aaa
mov
jb
test
and
jl
lret
pop
jmp
imul
push
rol
sbb
sahf
pop
mov
dec
scas
sbb
inc
or
adc
adc
test
xlat
push
lock
or
fld1
icebp
lods
jmp
repz
popf
les
cmp
adc
and
dec
cli
fsubr
mov
jg
push
adc
loop
mov
xchg
cmc
lock
mov
cmpsb
clc
enter
je
pop
xchg
adc
sbb
stos
sbb
xchg
and
mov
jmp
inc
and
dec
cmpb
xchg
imul
sub
sbb
add
dec
ret
les
pop
cltd
add
leave
mov
jmp
push
jno
xchg
clc
lods
into
pop
fidivs
jne
dec
ss
mov
das
ret
lds
adc
jecxz
mov
negb
adc
cmpsb
popf
stos
xchg
outsb
repnz
lds
jg
push
jb
lods
imul
or
xor
jg
push
pushl
sub
les
jg
add
insl
push
adc
lahf
out
lods
xchg
inc
les
lahf
xchg
inc
pop
mov
jl
and
sbb
pop
stos
push
addr16
xor
pop
arpl
data16
mov
adc
insl
cmp
push
jnp
lcall
mov
outsb
mov
cltd
test
mov
cmp
pop
out
outsl
mov
cwtl
mov
std
js
es
out
imul
mov
mov
cwtl
sbb
push
or
mov
pop
xor
ljmp
lea
es
mov
xor
movsl
adc
xchg
dec
in
cmpsb
in
push
sub
inc
dec
shll
mov
pop
xor
stc
push
dec
mov
sbb
or
pusha
xor
and
mov
jbe
out
inc
inc
popa
icebp
sbb
repnz
arpl
je
mov
lods
xchg
dec
rolb
mov
jbe
out
sub
push
xor
subb
adc
scas
push
stos
dec
xor
mov
mov
pop
int
sbb
cltd
xchg
inc
pop
inc
add
dec
cmp
pop
mov
push
dec
fwait
cmp
mov
mov
push
repz
pop
pop
adc
mov
adc
push
js
stc
les
mov
pop
mov
xor
fmull
rcrl
xchg
icebp
imul
aad
outsl
aad
and
hlt
hlt
orb
out
rorb
lret
push
aas
fisubs
or
cld
loope
add
adc
les
xchg
mov
loopne
push
jnp
and
xor
aam
push
dec
cs
pop
xor
mov
adc
sub
push
popa
mov
inc
and
call
mov
repnz
out
imull
dec
fcomps
test
scas
leave
or
out
and
and
or
mov
push
adcb
dec
cwtl
mov
sbb
inc
pushf
out
cmp
addr16
cltd
aad
sub
xlat
mov
pop
jg
push
push
add
sub
xchg
sub
mov
xchg
xchg
pcmpgtd
jb
jmp
and
mov
pop
sub
jge
pop
mov
ljmp
adc
sbb
fstpl
adc
mov
test
movb
cmp
xchg
push
mov
mov
inc
mov
clc
inc
fisubl
mov
xor
xchg
clc
push
stos
push
or
cmp
popl
addr16
cld
in
mov
sub
cs
mov
nop
sti
rcr
mov
nop
mov
xchg
cmp
sahf
in
lahf
aam
sub
fs
push
imul
xchg
lea
stc
sub
inc
cs
sarl
xchg
into
int
sub
adc
push
mov
adc
in
mov
out
lods
clc
mov
push
fadd
jecxz
daa
shl
xor
mov
mov
imulb
rcll
in
or
sbb
iret
sti
xchg
pop
outsl
push
xchg
aam
xchg
movsb
sahf
in
int3
pushf
andb
fisttpl
popa
cmp
lds
push
sbb
mov
cmc
aam
pop
lret
jecxz
enter
test
mulb
jne
add
test
lods
mov
sti
xor
test
outsl
test
inc
iret
pop
pushf
jbe
mov
dec
subl
lods
add
jnp
jg
sbb
inc
sahf
repz
fmull
lods
push
jge
mov
jl
pop
jns
mov
jg
lcall
xor
mov
inc
mov
xchg
cmp
fcmovbe
sub
daa
ljmp
enter
jne
test
mov
add
cld
in
inc
cmp
add
rcl
repnz
imul
in
fs
das
adc
jle
icebp
mov
pop
call
test
mov
inc
fists
mov
xor
pushf
ror
xchg
pop
in
scas
and
lcall
fcmovne
mov
hlt
push
loop
inc
das
rcr
ja
ljmp
push
pop
jno
xchg
lds
outsb
clc
std
popf
jp,pn
shr
addr16
sbb
into
imul
jae
into
push
jb
imul
jnp
stc
lea
cmpsb
sub
es
sub
insb
or
xchg
hlt
jbe
push
aaa
gs
loopne
jl
fidivrl
cli
xchg
sbb
sub
inc
mov
add
xchg
aam
mov
jbe
inc
xchg
push
sub
jo
mov
lahf
dec
aaa
mov
cltd
xchg
ret
rcr
adc
fidivrl
cltd
and
in
xor
lcall
pop
xchg
push
inc
cmp
out
mov
inc
test
fidivl
nop
popa
shlb
jne
in
lds
add
pushf
mov
mov
and
and
adc
jl
mov
mov
mov
jl
add
pop
imul
adc
jge
mov
ljmp
sub
sub
add
into
sub
or
cli
and
jb
jmp
lods
push
or
testb
pusha
insb
xchg
and
cmp
filds
daa
mov
icebp
xchg
shr
mov
xor
xor
mov
arpl
adc
mov
loop
and
in
mov
test
cmpsl
pop
sub
jl
xchg
movsb
jns
mov
push
test
jno
cld
push
sbbl
test
rcl
add
mov
and
xchg
or
push
jg
lcall
dec
push
mov
push
pop
nop
pop
insb
adc
dec
xor
mov
das
pop
dec
fcoml
or
test
inc
xchg
add
repnz
xchg
lret
jo
jmp
rcl
test
pop
lret
movsl
leave
and
xchg
cmp
scas
aas
and
mov
mov
dec
inc
fsts
aam
push
inc
sahf
out
fmulp
dec
out
mov
incb
mov
imul
jg
pop
test
ja
call
mov
xchg
in
pushf
mov
sub
fwait
mov
sub
pop
int
inc
dec
xchg
ljmp
sbb
lea
js
pop
mov
enter
sub
int3
test
outsb
pop
into
pop
mov
sbb
xchg
repnz
mov
sub
and
mov
data16
outsl
icebp
fwait
pop
out
scas
dec
ret
inc
pop
jecxz
fwait
addr16
mov
and
out
into
push
sbb
mov
jb
out
lcall
loope
mov
inc
adc
sbb
movb
ret
in
rorl
stc
cmp
push
lret
mov
sarb
fcmovbe
loop
mov
fstps
incl
adc
insb
das
dec
ja
sub
je
inc
test
xchg
test
fisubrl
pop
inc
daa
jo
insl
adc
movsl
or
cs
add
jle
pop
jo
aaa
lcall
pop
adc
lahf
or
mov
roll
insl
sbb
fwait
xchg
xchg
shrb
fnstsw
cltd
jecxz
mov
push
adc
cmpxchg
aaa
and
aad
fldenv
mov
js
xchg
adc
addb
dec
pop
andb
pop
inc
mov
fbld
adc
xchg
lds
push
jae
ret
loope
xorb
pop
xchg
test
pop
mov
mov
pusha
mov
addl
pop
scas
push
test
sar
adc
ljmp
dec
push
in
xchg
hlt
push
pop
lcall
jge
into
clc
and
fdivrs
call
out
mov
or
mov
cmp
jecxz
mov
out
fisubs
sbb
lock
pusha
add
mov
mov
mov
int
imul
addb
push
mov
lahf
stc
push
shrb
fiadds
xchg
ss
add
xor
mov
sbb
das
outsl
push
pop
and
lods
sub
dec
xor
loop
dec
adc
sub
push
or
fsubr
push
repz
jne
cs
cmp
insb
mov
jmp
mov
mov
out
push
ss
lret
lods
idivl
inc
mov
lea
hlt
rcrb
lret
xor
sbb
and
jb
mov
xchg
adc
loope
dec
push
mov
mov
xor
adc
ret
push
dec
loopne
cmp
in
int3
pop
fadds
loop
int3
xor
andl
cltd
les
fstps
sbb
sbb
push
jg
mov
shr
mov
adc
mov
xchg
test
cli
bound
sbb
pop
lock
or
lret
mov
ds
push
jae
pop
imul
xor
dec
inc
push
push
stc
lret
jmp
stos
jno
push
jns
imul
pop
das
cld
xchg
sarb
int3
and
xor
push
inc
mov
addr16
adcb
imul
adc
dec
adc
inc
push
mov
inc
jle
mov
outsl
mov
sbb
add
sub
pusha
sbb
int3
test
idivl
aam
pop
bound
in
jnp
push
pop
push
out
xchg
sbb
rcl
test
xchg
mov
pop
and
lahf
imul
fwait
lahf
adc
cwtl
adc
jle
roll
or
push
dec
outsb
insl
add
mov
cwtl
xchg
jbe
add
mov
and
mov
mov
xor
add
or
pop
daa
mov
mov
mov
stc
or
cmc
mulb
cs
pop
dec
or
iret
and
or
jp
ljmp
movsl
leave
lock
jmp
sbb
push
xchg
push
mov
mov
insb
xchg
ret
adc
cs
rorl
mov
aam
cwtl
mov
cwtl
movsb
repz
pop
mov
outsl
mov
rclb
sbb
outsb
xorl
mov
pop
add
pusha
scas
ljmp
inc
xor
or
cmp
js
xlat
loope
arpl
and
push
xlat
xor
mov
add
cmc
or
push
inc
cmc
inc
call
mov
sub
gs
mov
dec
add
push
int
mov
jge
ss
jmp
jne
pop
inc
imul
xorl
pop
fs
dec
sbb
dec
rep
push
icebp
fwait
jns
cmp
pop
test
mov
hlt
movsl
test
adc
sti
mov
pop
sti
iret
rcr
enter
sbb
mov
pushf
jl,pn
pusha
in
dec
xlat
cwtl
inc
inc
jae
and
push
jmp
pop
xor
sub
adc
dec
cld
mov
mov
call
in
rcr
pop
mov
cmpb
sti
lcall
mov
inc
jmp
pop
outsb
pushf
sbb
dec
cmovns
or
jno
mov
dec
loope
pushf
mov
mov
cmp
loop
and
movsl
mov
sti
adc
xchg
pop
jo
pop
loop
int
cmp
mov
mov
dec
push
orb
cmp
push
ss
mov
mov
xchg
mov
dec
fs
cli
hlt
hlt
add
mov
or
sub
addl
push
add
mov
xor
test
rcrl
push
je
inc
jne
jnp
cli
sbb
add
jmp
stos
inc
divl
adc
mov
mov
push
and
cmp
jecxz
shr
add
mov
sub
inc
xor
push
cwtl
sahf
jecxz
loopne
lds
loopne
jo
xlat
fwait
sub
fnstenv
sbb
pop
xor
xchg
stos
test
dec
call
andb
mov
cltd
clc
fwait
pusha
cmp
push
stos
add
pop
outsl
push
mov
xchg
orb
jmp
pushf
clc
ljmp
mov
ljmp
mov
or
mov
repnz
jno
jne
cmpsb
or
out
cld
sbb
data16
insb
call
add
inc
shll
scas
stos
dec
adc
xchg
mov
pop
mov
lock
arpl
aam
js
orl
xchg
out
xlat
mov
pop
xor
test
mov
xor
jmp
pushf
ljmp
repz
push
and
ret
sbb
mov
xchg
push
sub
push
jns
pop
pushf
jo
dec
mov
sbbl
negl
movsb
jb
aas
mov
sub
push
ja
inc
add
xorb
cmc
dec
or
imulb
pop
call
mov
stos
lcall
enter
mov
pop
lods
hlt
mov
jg
cmp
adc
mov
aas
cs
or
mov
imull
insl
out
nop
and
cwtl
xchg
or
iret
gs
and
in
and
mov
ret
pop
into
mov
xchg
jmp
imul
and
stos
sub
insl
mov
stc
sbb
jg
iret
fwait
adc
pop
add
or
cmp
pslld
push
pop
popw
pop
stos
lds
xchg
add
fnsave
mov
sahf
dec
cmp
icebp
cmp
mov
lock
hlt
rolb
push
jge
pop
testl
sbb
icebp
xchg
sub
stos
cltd
mov
push
xchg
dec
leave
ret
jns
mov
pop
and
shrb
enter
fidivs
lock
sub
es
shrb
lcall
mov
push
mov
outsl
xchg
push
das
scas
and
fadds
push
js
xchg
lcall
call
or
lahf
push
push
clc
dec
or
inc
xchg
jg
or
out
fs
rol
aam
cmp
cmp
jmp
push
outsb
sahf
jp
sub
das
leave
mov
push
fistpll
aad
cmpsl
loopne
lods
int3
jo
popf
mov
sbb
hlt
filds
xchg
inc
xchg
xchg
rcll
adc
or
addb
das
and
bound
jne
dec
mov
dec
scas
sub
fists
outsl
mov
mov
shrl
andb
mov
xchg
scas
rclb
imul
popf
mov
push
push
sbb
sbb
or
dec
and
ja
jmp
cmpsl
sti
and
into
jp
loope
outsl
push
insb
movsl
negb
add
xchg
dec
dec
test
aad
and
loope
mov
mov
cld
jmp
ret
mov
hlt
sub
mov
or
dec
mov
cmp
mov
daa
mov
dec
pop
xor
push
scas
pop
pop
inc
imulb
inc
loope
mov
cmc
lret
inc
leave
cmp
mov
jecxz
sbb
lcall
xor
cmp
icebp
sub
sahf
test
dec
add
cmp
lcall
cli
dec
xchg
lret
jp
mov
push
jle
dec
test
push
jnp
inc
xor
in
sbb
popf
ss
xor
aam
arpl
sti
fistpll
add
inc
movsb
lods
add
aaa
fs
repz
lds
jecxz
xchg
jno
xlat
jl
push
popf
bound
jp
jne
cmpsb
scas
xchg
mov
cli
xchg
mov
or
enter
out
add
push
add
cltd
pop
int3
sbb
jecxz
repz
fadd
stos
test
int
sti
lahf
insl
mov
lods
aad
mov
imul
cmp
add
rcrl
pop
xor
xor
sbb
shlb
aad
std
popf
sbb
mov
imul
divb
jne
jnp
pop
cmc
test
sahf
mov
cmp
push
dec
stc
add
lret
push
sbbb
fdivl
push
mov
out
fldl
outsb
std
aaa
fs
pop
aaa
ret
nop
jne
movsl
cld
loop
adc
les
or
fildl
mov
sub
fistpl
sti
adc
repz
cmp
xor
mov
jo
push
stos
push
sub
cmpsl
mov
mov
mov
pushf
clc
int3
ds
jae
adc
mov
sub
dec
jp
and
outsb
and
int
jns
push
repnz
xor
in
adc
pop
xor
popa
in
cmc
and
and
insb
cmc
jb
sbb
dec
out
push
je
jae
mov
mov
nop
and
cmp
push
ljmp
std
adc
sub
call
push
mov
push
adc
jge
movb
push
cmp
pop
dec
stos
jmp
movsb
cmc
adc
xor
nop
sub
sub
in
test
push
xchg
pop
insb
enter
imulb
xchg
out
in
mov
mov
test
or
popa
lock
dec
adc
dec
push
shll
or
notl
push
aas
in
imul
mov
fdivl
mov
lds
lea
in
pop
jb
inc
leave
xchg
mov
sub
stos
inc
pop
hlt
subl
inc
popa
xlat
je
fisttps
pushf
not
sbb
xchg
push
shl
js
sbb
stos
lock
dec
decb
repnz
aam
xchg
pop
dec
inc
inc
iret
pop
sbb
icebp
dec
or
dec
cld
push
adc
orb
add
fisttpll
je
mov
pop
or
cli
jbe
fstpt
pop
mov
inc
fisubl
inc
scas
and
inc
int
jecxz
mov
into
add
call
popa
xor
aaa
orl
cmp
jl
pop
and
in
mov
out
js
or
xchg
push
dec
add
pop
aam
sbbb
daa
cmp
test
bound
fs
xchg
inc
rorb
movsb
push
loope
cmpsb
cmp
mov
add
push
mov
sub
int
sarb
lods
lret
mov
dec
lods
sbb
mov
rcr
mov
add
aad
das
push
stc
test
xchg
cmp
mov
xor
push
sbb
in
addl
adc
fstps
cmp
popa
sbb
les
in
stc
movsb
cmc
xchg
test
shlb
mov
mov
pusha
faddl
adc
jmp
into
push
inc
mov
jle
loopne
xchg
push
vandnpd
fs
dec
and
fsubrs
or
aad
in
imul
jns
outsl
mov
popa
push
cmp
or
stos
jp
jnp
rcrb
jne
lret
popa
pop
mov
xor
lods
mov
lock
lret
fists
js
mov
mov
pop
shrb
adc
and
lock
inc
adc
xor
or
xor
pop
jmp
stos
es
std
jo
in
fucom
rolb
mov
sbb
pop
dec
fldt
fwait
xor
fwait
negb
jl
mov
dec
lds
inc
inc
mov
into
push
inc
push
sarl
and
add
xchg
or
repz
lret
dec
mov
mov
add
adc
xor
out
aad
add
mov
lret
sub
mov
xchg
or
outsb
mov
inc
inc
xchg
rcrb
ss
fidivrs
aad
std
pop
inc
or
je
pop
adcb
xchg
cmp
push
sbb
dec
jno
jg
mov
mov
or
pop
rolb
lret
pushf
push
push
pop
mov
pop
cmp
popa
pop
das
aas
cmp
cmp
pop
fldcw
cltd
xchg
sarl
and
inc
outsl
or
jo
push
mov
mov
std
sarb
test
cltd
xchg
sti
sub
test
xlat
add
mov
xchg
jns
and
add
sbb
insl
sbb
mov
sub
imul
inc
cwtl
cmp
clc
sbb
je
and
inc
in
scas
out
xor
mov
fsubr
call
loope
shl
fidivrl
mov
mov
mov
inc
mov
iret
fstpl
jmp
add
inc
sbb
std
cmp
rcl
pop
pop
repz
leave
mov
test
lock
sbb
dec
bound
mov
xchg
rcrb
test
dec
flds
jg
sbb
pushf
pop
dec
sahf
pop
cmpsl
pusha
insb
and
aam
pop
out
das
push
sub
shll
add
mov
ror
lock
gs
fidivs
and
xchg
jg
fildll
in
pop
outsb
jl
nop
loop
inc
lock
mov
cmp
jg
push
repnz
insl
rcl
jmp
jbe
mov
sub
into
loop
adcb
fcmove
insb
pop
and
movsb
mov
fsubrs
loope
daa
ds
cs
add
loope
xlat
dec
jno
mov
push
mov
aam
scas
lcall
add
and
loop
jns
add
inc
insb
gs
arpl
es
sub
test
repnz
ljmp
lea
mov
dec
xchg
ret
fidivrl
mov
and
jns
push
sti
push
and
mov
xchg
mov
pushf
cwtl
and
stos
jg
fnstsw
xchg
ss
add
sbb
out
cli
nop
jae
int3
inc
jl
lds
inc
ret
aad
fsts
test
cmp
lds
mov
sub
cmp
sarb
mov
sub
test
push
dec
mov
pop
adc
sarl
inc
imul
das
adc
push
xchg
cmp
int
cli
sbb
fldt
fmulp
mov
loopne
add
mov
cld
mov
sub
push
sbb
sbb
dec
mov
sahf
cmc
leave
push
push
inc
jp
add
or
sub
shlb
stos
and
stc
sbb
shr
int
sbb
and
mov
data16
ss
stc
mov
xchg
push
pop
and
pushf
jg
cmc
pop
mov
pop
outsb
xor
jne
pop
mov
cmp
lods
repnz
and
add
lret
adc
int
dec
outsb
sbb
jge
pop
out
dec
aaa
pop
mov
sbb
cwtl
hlt
push
int3
stos
push
jb
bound
ja
iret
mov
dec
pop
jg
repnz
push
pop
stos
es
cs
pusha
jo
xchg
mov
movsl
cmc
outsl
adcb
jne
adc
mov
lcall
inc
xor
cmpsl
hlt
push
add
inc
xchg
xchg
dec
in
jmp
xor
inc
test
sbb
imul
xchg
fucomi
nop
lds
mov
lcall
fidivs
mov
inc
int3
das
mov
cmp
mov
repz
and
push
or
movsb
sbb
mov
jns
enter
mov
sahf
fisubrl
mov
cmp
filds
clc
push
xchg
out
inc
mov
scas
leave
arpl
xchg
pop
sbb
enter
xchg
or
jb
inc
jbe
sbb
xchg
mov
pusha
sbb
call
ret
test
jnp
push
in
bound
mov
inc
xchg
and
dec
scas
add
add
repz
xchg
cmp
ss
mov
jno
sbb
push
or
add
sbbb
lea
dec
sub
cmp
cld
rcll
xchg
push
mov
rclb
adc
xor
or
rcll
push
jo
int
adc
addb
je
mov
outsb
mov
dec
fmuls
sti
xchg
cmp
mov
lret
mov
bound
xchg
fdivrl
lods
push
int3
fcoml
jnp
pop
pop
sub
and
fadds
cmp
rcl
les
lods
or
mov
dec
into
call
ret
add
test
xchg
loop
fcompl
jnp
daa
mov
in
mov
mov
je
mov
lds
mov
repz
jmp
daa
jmp
fsub
jg
sbb
cmc
add
cmp
aaa
sub
rorb
hlt
aad
stc
dec
addr16
loope
mov
or
add
rcl
pop
sub
mov
add
ds
mov
and
lods
rolb
pop
sub
push
imul
aas
cmc
and
mov
loope
rol
test
pcmpgtd
and
mov
mov
sbb
sub
cltd
mov
bound
inc
cmp
fnstenv
mov
int3
pusha
mov
std
int3
xchg
inc
add
mov
pop
stos
mov
and
repz
add
mov
jns
push
rorb
int3
sub
inc
sub
pop
mov
or
xchg
cmc
mov
xchg
jne
mov
insl
pop
cmpsl
sbb
not
xorb
jne
jb
push
xor
sbbb
inc
mov
inc
aaa
dec
add
enter
pop
cmp
shr
lcall
adc
faddl
es
mov
aas
mov
fs
negl
imul
and
lcall
inc
and
mov
sub
pop
dec
sbb
dec
and
sar
lahf
pop
shl
loop
in
and
ds
dec
sbb
aad
push
cmp
xor
mov
xchg
xchg
test
jecxz
and
cmpsb
jmp
leave
ljmp
push
jne
xchg
pop
sbb
notl
or
mov
incb
loope
jo
scas
imul
dec
cld
pop
mov
push
pop
jmp
lods
push
in
mov
push
test
cmp
outsl
mov
popa
repnz
pop
mov
xor
cmp
pop
stos
dec
cmp
jno
push
ficoms
movsb
test
aam
insb
jge
mov
std
pop
xchg
and
adc
loopne
gs
push
push
sbb
jne
mov
notb
out
or
mov
int3
nopl
sbb
mov
or
into
sarl
mov
enter
push
rcll
mov
insb
jno
pop
mov
fcmovne
dec
pushf
mov
test
jae
sub
push
adc
push
stos
out
inc
lahf
das
pop
stc
or
mov
pop
popa
or
inc
and
pop
mov
pop
xchg
enter
inc
testb
fidivrs
inc
inc
lcall
pop
jnp
loope
fs
push
rol
pop
adc
mov
mov
scas
lods
out
push
xchg
mov
jl
sub
sbb
gs
adc
andb
mov
outsb
iret
aad
mov
out
inc
fildll
in
clc
negb
xor
imul
cmpsb
sub
mov
adc
cwtl
sbb
dec
jnp
cmp
pop
leave
fs
xlat
leave
imul
gs
cmp
adc
mov
cld
test
or
xchg
inc
xchg
movsl
shll
sub
xlat
push
cld
pop
out
add
ss
insb
push
ds
in
mov
add
xor
or
std
icebp
mov
cld
icebp
popf
mov
push
enter
mov
mov
out
ds
fildll
adc
mov
push
int
out
pop
ja
insb
out
flds
mov
pop
gs
es
loopne
sahf
mov
xor
pop
push
std
jbe
pop
inc
mov
mov
rcr
mov
cwtl
jae
and
pop
jae
loopne
jns
lods
ss
mov
and
xor
insb
sbb
dec
push
inc
jno
data16
cltd
scas
fisttps
shlb
ljmp
push
fsubrs
or
faddp
psrlw
add
dec
mov
adc
mov
adcl
ljmp
rcll
cli
lods
and
loopne
xlat
flds
mov
pop
lahf
jl
xchg
lods
es
cmpsb
push
mov
jno
jmp
xor
xchg
int
repnz
enter
pushf
fwait
add
bound
repz
std
divb
and
xchg
cmc
xchg
lea
in
pop
sub
jle
daa
adc
and
jg
test
paddsw
dec
out
xor
mov
loopne
jge
dec
incb
test
lcall
call
inc
and
popf
jno
jae
cmp
pop
mov
push
jns
add
sbb
xchg
repnz
jle
and
sub
cmp
je
or
mov
ret
flds
loopne
lock
pop
movsl
or
movsl
cwtl
bound
mov
mov
arpl
sbb
clc
out
adc
mov
imul
test
mov
or
push
or
in
jnp
fs
inc
xchg
mov
xchg
xchg
inc
sub
ljmp
adc
ret
mov
scas
lret
out
adc
cmp
sarb
mov
mov
sti
jns,pt
addr16
adc
jb
and
das
jae
jecxz
fisubl
mov
add
dec
mov
iret
movsb
pop
sub
loop
enter
adc
std
pusha
pop
adc
fldl
in
testl
test
cmpsb
das
mov
mov
jp
clc
mov
ljmp
in
fidivl
adc
popa
xchg
dec
addr16
je
pop
arpl
mov
rclb
xlat
jg
jmp
sbb
cmpsb
inc
lds
dec
clc
out
mov
inc
mov
or
cmpsb
cmp
push
push
fidivl
jo
xchg
test
lcall
cld
cs
add
xchg
fwait
mov
ljmp
push
fwait
mov
pop
hlt
inc
gs
pop
in
ficompl
loop
jne
in
xor
pop
les
comiss
out
push
mov
sub
ret
pop
mov
xchg
mov
xchg
xlat
inc
dec
imul
sub
scas
icebp
or
inc
cmp
dec
xlat
mov
adc
sbb
shl
shl
bound
mov
sbb
aas
add
cmpb
fmul
sub
lock
test
negl
xchg
and
mov
sbbl
in
mov
sbbb
dec
adc
mov
mov
xor
push
add
jge
lahf
mov
ds
fistpl
lock
fidivl
pop
insl
xchg
movl
lret
rorl
js
mov
sbb
jno
push
sbb
aaa
bndldx
or
mov
jns
mulb
mov
adc
aam
repnz
sbb
push
shll
pop
rcll
sub
ret
cmp
out
clc
fmull
lock
fnstenv
xchg
and
jle
jns
imul
mov
inc
xor
add
jmp
dec
adc
mov
jbe
push
jo
push
pop
jo
gs
inc
push
in
or
sar
push
xchg
shll
cmp
cwtl
fstp
lods
rcr
subl
push
out
repnz
jmp
test
or
mov
pop
or
lea
jbe
sbb
dec
pop
xor
movsb
jge
dec
add
inc
xchg
fucomip
int
popf
push
fxam
push
xchg
ja
mov
das
cld
dec
sub
pop
lret
push
fcmovbe
pop
jmp
mov
or
lea
inc
jecxz
pop
sbb
push
aam
push
pop
mov
push
test
iret
lods
pop
and
das
xchg
dec
test
add
pop
dec
jmp
mov
mov
push
cs
std
and
xor
stos
cmp
pop
cmpsl
insb
mov
mov
jg
xchg
pop
inc
mov
adcl
xchg
dec
ds
jmp
mov
jmp
aad
shrl
push
pop
out
xlat
sbb
addr16
ds
movsb
push
add
sub
in
test
pop
test
inc
xor
jne
lahf
pop
xchg
lds
adcb
adc
sbb
stos
mov
inc
add
ja
lods
inc
lcall
ret
stc
mov
in
in
xor
xchg
stos
test
pcmpeqb
mov
cmp
stos
jns
insb
sti
mov
bound
sahf
lock
push
stc
mov
sbb
mov
mov
jge
dec
enter
pop
sbb
jg
mov
leave
pop
push
fsubrs
pop
loope
adc
dec
arpl
mov
jno
cmp
sbb
or
jp
test
bswap
jns
test
scas
jg
ret
or
test
adc
orb
and
and
shll
xor
cwtl
mov
inc
and
repz
jns
out
loop
popf
and
mov
inc
shlb
adc
fcos
mov
lods
push
mov
lock
mov
dec
cvtps2pi
mov
movsb
mov
cmp
xor
test
stc
lret
mov
xchg
in
sbb
aam
xor
out
cli
or
xchg
cmpsl
push
fcomps
or
xor
ss
xchg
repz
sub
jo
jae
or
out
xor
cltd
js
cld
mov
dec
jbe
sbb
dec
stc
pop
lahf
test
mov
ss
insl
mov
aaa
xchg
popa
inc
sbb
test
mov
js
mov
test
ja
ficoml
bound
jg
stos
add
xor
cmpsl
pop
add
and
fwait
jb
pop
lahf
cmp
lahf
fs
jns
jae
xor
inc
push
add
push
push
jge
pop
movb
dec
loopne
ret
pushf
sub
push
scas
dec
cmpsb
xacquire
mov
inc
clc
jno
xchg
imul
cmp
sbb
pop
xchg
adc
adc
subl
aam
cmpsb
and
addr16
inc
jbe
cltd
jno
insl
mov
pop
arpl
ffreep
xchg
dec
in
es
cltd
ret
mov
outsl
dec
xchg
fistpll
adc
dec
xor
sbb
add
lcall
pop
aad
push
cmp
aad
fs
xchg
pop
push
ja
pop
addr16
das
xlat
sub
mov
lock
aad
aam
mov
js
fldl2e
sbb
jno
loop
imul
cmp
popf
push
cmp
xchg
jecxz
mov
sub
adc
in
sbb
xor
insb
add
pop
inc
adcb
dec
je
xor
nop
xor
je
sbb
stos
fisubl
and
mov
jp
cmpb
xchg
jnp
repz
pop
cmp
cmp
loop
push
push
push
sub
and
in
jmp
xchg
mov
cmp
out
outsb
xchg
cmpsl
pop
pop
lods
mov
cmp
sub
jae
jge
lds
shl
xchg
lock
lea
int
sbb
inc
or
outsb
or
sub
add
fdivrs
lcall
mov
shlb
mov
lahf
ja
out
jle
rcrb
daa
out
sbb
adc
sbb
pop
lahf
aad
jle
mov
sbb
in
rcrb
push
or
fwait
add
stc
sub
insl
push
jge
and
push
xor
mov
lret
cmp
inc
dec
cltd
test
xchg
or
lods
mov
adc
adc
mov
lea
add
jle
pop
lock
loope
push
ja
scas
ret
mov
out
cld
inc
fdivrs
inc
inc
test
inc
push
hlt
enter
in
icebp
addr16
sub
cmpsl
and
cmpsl
mov
sub
mov
jle
cld
add
addl
or
jne
loope
and
cmp
mov
pushl
jecxz
lcall
out
ret
adcl
addr16
repz
icebp
cs
mov
mov
pop
and
mov
pop
jecxz
je
push
sarb
pop
addr16
mov
pop
mov
div
shlb
cmc
push
push
data16
push
pushf
jo
xchg
mov
loopne
pop
into
push
push
jne
lret
cmp
stos
or
insl
jle
xchg
movb
lret
in
adc
cmp
ss
call
out
clc
inc
dec
fdivl
iret
std
rol
and
lea
jle
jl
sub
and
dec
addl
lock
pop
push
pop
xorb
jo
push
dec
enter
outsb
add
adc
cld
and
jo
adc
imul
fdivl
rol
inc
cmp
jae
sub
notl
in
test
pop
imull
iret
cmp
inc
mov
in
nop
jg
call
push
xor
xor
jge
mov
xchg
pop
dec
xor
xchg
push
jo
sbb
sbb
loopne
arpl
popf
inc
add
jb
and
add
icebp
int
xor
js
add
push
shll
repnz
je
inc
psubusb
jg
inc
adc
sub
pop
aad
nop
inc
push
insb
and
mov
xchg
adcb
and
or
adc
inc
xlat
fidivl
mov
sbb
adc
push
jmp
hlt
mov
js
inc
dec
aaa
cmp
insl
lea
and
adc
push
lea
jg
orl
push
sti
cmp
test
pop
push
xor
dec
lea
sbb
outsl
enter
sub
xchg
mov
sarl
dec
pop
jecxz
daa
js
pop
pop
push
inc
inc
adc
xchg
push
ret
sub
insl
pop
fidivs
pop
fcmovnbe
dec
loopne
mov
pusha
in
push
hlt
bound
xchg
test
add
int
ljmp
dec
arpl
lds
jb
sahf
lods
nop
pop
jns
xchg
jle
fmull
jb
jle
mov
loopne
jle
sub
std
xchg
shrl
dec
stos
mov
mov
loope
dec
int
repnz
adc
pushf
lea
xchg
cwtl
mov
flds
push
in
repz
jae
call
mov
mov
out
shll
cmp
xchg
fisttps
ret
mov
mov
add
ljmp
or
and
jnp
push
subl
jno
nop
jbe
pop
xchg
sbb
jmp
data16
and
cmpsl
cmp
push
adc
loopne
addr16
ja
adc
test
jle
mov
pop
cs
ja
cltd
test
mov
fsubp
dec
fisubl
mov
dec
in
jo
mov
rcrb
repnz
or
push
lea
xor
out
or
cltd
jb
inc
notl
mov
jb
inc
lods
xchg
add
mov
dec
out
test
stos
sbb
ljmp
lcall
outsl
xchg
dec
pop
dec
lcall
lret
cmp
lret
aaa
fistpll
repnz
pop
insb
cmp
aaa
je
dec
out
pusha
mov
dec
sbb
dec
addr16
pusha
mov
mov
mov
sbb
mov
cmp
cmpsl
mov
mov
jo
mov
loop
mov
sub
movsb
test
or
jge
push
cmpsb
inc
lods
icebp
fwait
decb
lods
xchg
mov
jnp
in
aad
jecxz
inc
jae
push
mov
dec
call
insb
push
notl
jp
pop
jo
jl
pop
sbb
loop
ljmp
inc
inc
dec
xor
mov
out
repnz
cmp
inc
mov
mov
push
test
pop
outsb
or
mov
mov
mov
jae
popa
inc
dec
xor
fwait
stos
jge
mov
aam
lods
daa
rclb
repnz
xchg
rorl
loop
mov
mov
mov
lea
test
cli
out
aaa
xlat
push
inc
ss
shl
pushf
adcb
adc
nop
loope
sbb
mov
mov
pusha
mov
jle
out
aaa
xor
pop
mov
pop
cmpsb
inc
int
cmp
mov
pushf
call
mov
xor
fnstsw
inc
add
adc
xlat
popf
sysenter
cwtl
out
sub
jle
imul
lahf
inc
inc
test
pop
xor
add
shl
repnz
icebp
inc
out
pop
add
mov
xor
das
test
push
in
mov
nop
xchg
out
ss
inc
push
mov
cmp
pop
into
enter
daa
call
push
push
mov
and
push
xchg
rorb
inc
or
sub
divb
pop
dec
mov
mov
fidivrs
cmpsb
inc
inc
mov
fmull
sar
and
sarl
or
mov
nop
cmp
lods
outsb
lds
xchg
sub
mov
dec
es
lret
mov
sub
inc
push
hlt
outsl
mov
fwait
pop
push
cld
imul
push
or
lahf
pushf
xchg
lret
sti
dec
sbb
aas
jnp
xor
roll
adc
adc
xchg
mov
bound
inc
cld
stc
jmp
sbb
lret
xor
jno
loope
dec
insl
sub
mov
pop
jecxz
adc
xor
std
jmp
adc
out
lret
mov
cltd
fstpl
push
push
mov
cmp
in
fwait
xchg
out
adc
fwait
and
and
rclb
jle
lds
inc
test
icebp
outsl
shrb
jg
push
push
test
pop
jl
or
sub
aas
push
aad
stos
rorb
push
sub
repz
cld
sub
xor
add
enter
sahf
lret
pop
frstor
out
push
ljmp
cmpsb
ds
sub
cmp
pop
test
lea
call
mov
movsb
jb
dec
aad
and
inc
je
mov
loopne
mov
mov
push
fs
popf
xor
popa
mov
xchg
cltd
xchg
or
adc
cmp
dec
mov
fsubrs
pop
dec
scas
push
jnp
cltd
adc
lahf
rorb
shll
inc
xchg
adc
ret
push
mov
xchg
mov
adc
sbb
push
aaa
ljmp
negb
and
clc
sahf
rolb
lcall
mov
jl
stos
lcall
add
mov
push
xor
dec
cmp
fdivl
ja
shr
pop
pop
les
mov
clc
loope
pop
mov
das
inc
add
cmp
into
dec
xchg
and
sub
fiadds
sbb
lret
mov
adc
or
ljmp
inc
cmp
les
pop
sbb
inc
sbb
xorb
xor
pop
xchg
xchg
out
sbb
adc
movl
pop
cmp
mov
push
negb
jne
cmpsb
push
das
push
or
ret
dec
xchg
int3
stos
out
orb
push
cmp
das
pusha
in
adc
mov
je
xchg
adc
test
jp
mov
adc
je
fcompl
cmp
push
roll
inc
dec
fucomi
mov
push
mov
xor
loope
les
push
and
mov
inc
ficoml
fidivrl
sub
xchg
xchg
lods
shl
js
in
sbb
xor
mov
push
jecxz
addl
xchg
and
add
mov
add
stc
dec
inc
cmp
imul
add
pop
jp
shll
out
jle
in
sbb
push
stos
mov
cmp
and
sti
xchg
mov
xor
mov
inc
add
test
and
and
inc
loop
pop
dec
pop
or
aam
lahf
fadd
cwtl
mov
in
xchg
adc
ret
pop
out
push
push
or
cmp
lret
ja
push
xchg
push
addr16
jmp
test
es
insb
fmuls
popa
jg
dec
pusha
mov
loopne
ljmp
sbb
push
cmpsb
outsl
push
lds
popf
mov
dec
and
call
mov
inc
xor
scas
and
and
adc
movlps
int3
push
leave
and
out
lods
decl
test
mov
inc
sub
push
nop
int
fcomps
pop
jns
sbb
sbb
sti
inc
mov
xchg
leave
xor
call
stc
mov
jg
push
movsl
iret
mov
add
cmp
jmp
sub
lret
mov
mov
gs
inc
es
clc
shrb
lods
mov
jno
adc
aad
lahf
movsl
hlt
pop
ret
inc
mov
dec
sub
data16
popf
not
ret
push
adc
leave
xchg
and
push
fmulp
adc
decb
addb
into
xor
xchg
lret
jno
add
insb
shll
lea
test
inc
adc
mov
xor
dec
push
pushf
cmpsl
clc
and
scas
push
xchg
addb
or
aas
xor
cmpsl
mov
orl
arpl
push
inc
loop
and
je
add
add
xchg
xchg
fsts
cld
dec
xchg
or
shrb
hlt
out
mov
adc
push
leave
mov
inc
arpl
lods
popa
jae,pt
xchg
dec
pushl
adcb
and
cmpsl
dec
icebp
ja
cltd
jns
jge
cld
cmp
dec
fldl
push
inc
sub
cmpsl
shll
push
pop
add
or
push
pushf
cmp
push
add
and
jo
outsl
ja
xchg
pop
xchg
xchg
lock
lods
negl
or
jl
stos
cmc
stos
mov
das
clflush
sbb
icebp
xchg
and
xchg
shr
into
mov
out
pop
fxtract
ljmp
mov
test
pop
sahf
gs
int
mov
jo
mov
jo
pop
neg
sub
mov
cmp
mov
imul
lock
test
enter
dec
subb
out
pop
out
das
pop
dec
push
xchg
sub
or
sub
push
daa
lds
push
nop
aas
push
sub
aam
clc
sti
into
cmp
and
or
and
pushf
xor
icebp
ret
lret
lea
inc
cmp
lahf
adc
out
add
stos
test
jnp
int3
test
test
jb
inc
aas
out
imul
lret
insb
lret
inc
test
pop
push
inc
lret
mov
mov
mov
pop
mov
add
sub
std
xchg
out
sub
bound
aas
out
std
sub
pop
xchg
scas
push
test
push
inc
shlb
add
push
movb
gs
neg
out
out
lods
data16
add
out
and
mov
push
stos
flds
dec
push
push
sbb
mov
lret
ljmp
mov
in
aas
cmp
lea
pop
push
jns
in
inc
arpl
movsl
sarb
loop
loope
call
out
scas
ret
ss
mov
rolb
sub
mov
xchg
mov
or
in
ret
push
in
popf
jecxz
int
add
adc
mov
add
stos
add
dec
jnp
imul
outsb
cmpsl
int
sub
dec
sbb
add
fmuls
nop
push
sbbl
add
test
dec
icebp
cwtl
mov
arpl
dec
xor
dec
mov
adc
jno
mov
push
push
insl
xchg
fldpi
shlb
or
data16
sub
mov
lea
cmp
pop
add
push
push
mov
out
dec
cld
loop
leave
js
inc
jns
sbb
mov
daa
push
mov
data16
int
das
xchg
adc
das
stos
push
xchg
jg
es
stos
shll
lret
js
push
or
cmp
mov
mov
inc
outsb
stos
add
pusha
xchg
fists
sbb
rol
adc
sbb
adc
lds
dec
cmp
jno
dec
pop
push
jns
out
idiv
lahf
es
pop
cmp
jle
push
sbb
into
pop
mov
popf
inc
cld
out
pop
adcb
loope
sbb
jge
jge
jp
fimull
lahf
add
push
sbb
pop
inc
add
lcall
stos
rep
scas
mov
push
insb
lahf
jnp
inc
aad
cmp
xchg
inc
cltd
cmpb
ret
jne
inc
cmp
push
pop
sub
sub
mov
fnstenv
push
jnp
mov
pushf
or
mov
mov
es
jmp
repz
jnp
dec
jb
cmp
daa
out
imul
ds
jmp
mov
dec
mov
adc
repz
jbe
jle
out
sub
lds
push
pop
jmp
mov
popf
mov
sahf
pop
popa
movsb
dec
arpl
jl
and
pusha
jmp
mov
addl
jge
or
adc
pop
ljmp
mov
sahf
mov
xchg
jmp
andb
fwait
or
mov
cmpsl
orl
inc
inc
movsb
dec
std
xchg
scas
sbb
and
fdiv
dec
out
xchg
pop
pop
mov
sub
fwait
xchg
and
movsb
stc
cltd
insl
inc
add
out
subl
or
inc
into
scas
jnp
jmp
mov
xchg
out
rcr
dec
jg
outsl
pop
xchg
xchg
pop
faddp
or
sbb
cmc
loopne
mov
imul
xchg
insl
jns
mov
sbb
pop
clc
add
jbe
add
outsb
fmull
push
sub
stc
mov
mov
call
mov
pop
adc
inc
lods
sub
lcall
repnz
pop
fstpl
pop
dec
cmp
loope
inc
push
test
pop
push
mov
mov
jmp
int
pop
dec
aam
aam
cmp
mov
movsb
test
cwtl
xor
aad
and
push
ror
mov
testl
mov
stos
xor
cmp
dec
mov
add
push
filds
loopne
and
out
mov
std
arpl
pop
inc
sti
adc
repnz
int
mov
push
jecxz
inc
je
adc
xor
pop
shrl
xor
add
adc
stos
lock
movsl
cmova
inc
or
lcall
sbb
add
bound
aam
aad
jg
cmp
cmp
daa
ret
mov
fdiv
orl
sbb
push
pop
imul
lret
aas
dec
sti
dec
xchg
mov
test
call
push
mov
dec
adc
cmp
push
pop
cmp
mov
lods
jp
xor
pop
dec
sub
sub
xchg
and
lods
ret
cmp
jl
mov
and
jno
jmp
ss
jle
clc
xchg
or
pop
xchg
pop
ss
into
cmc
add
loopne
inc
loope
xor
dec
ds
fcomps
hlt
cmp
mov
jne
cmpsb
add
mov
dec
mov
ja
cmp
cltd
pop
and
mov
and
dec
sub
out
push
cmpsl
pop
xchg
out
adc
iret
mov
dec
dec
and
or
scas
xor
scas
dec
adc
das
or
lahf
jp
sarb
int3
inc
or
movsb
ret
mov
jo
in
xor
stos
add
lahf
sbb
mov
sarb
cwtl
xchg
or
push
push
mov
xchg
pop
or
adc
or
fs
jb
lock
mov
lret
fwait
mov
ljmp
dec
push
fs
or
push
lea
sbb
loope
sub
add
cmp
and
mov
dec
xor
int3
sti
xor
xchg
mov
push
js
mov
mov
mov
pushf
shrb
sub
cli
mov
pop
mov
popa
in
mov
and
imul
es
movb
cmp
xor
inc
mov
cmp
popa
fsubrl
push
movsl
lahf
jbe
dec
jg
jne
out
cltd
mov
cmp
aas
mov
movsb
or
je
int3
in
fnstsw
dec
lahf
leave
dec
fstpl
sbb
es
pop
pusha
icebp
in
ds
push
inc
iret
push
jg
adc
sub
push
sub
sbb
add
mov
and
add
push
mov
ret
test
xor
dec
push
jne
push
rol
pop
cs
push
stos
sub
push
adc
mulb
mov
push
aam
dec
sub
pusha
lret
lods
or
aam
dec
ret
pop
repz
scas
sub
dec
sbb
xchg
int
or
xchg
xchg
popa
cs
inc
jmp
adc
mov
xchg
mov
std
aaa
std
adcb
rcrb
push
aaa
push
mov
lods
repz
mov
out
sub
ret
sbb
js
movsl
fs
mov
rclb
aaa
or
scas
ja
and
cmp
loop
xor
das
sub
insl
ret
les
xor
stos
fwait
lret
jecxz
sbb
mov
cmp
sub
movsb
cmp
fs
mov
fstps
pop
loope
jns
lock
stc
in
dec
mov
push
inc
adc
add
adc
adc
addr16
or
cmpl
sbb
les
in
cmp
or
and
push
lret
mov
pusha
scas
jae
mov
push
lock
mov
fdivs
stc
rorl
add
je
adc
add
rcll
mov
push
xchg
sub
popf
es
popf
xchg
push
sbb
in
jno
into
ss
jl
scas
xchg
and
jge
insl
incb
mov
dec
dec
js
aam
xchg
xchg
fmull
popl
repz
cmp
or
mov
sub
inc
adcl
mov
cs
cld
adc
add
sbb
or
xor
add
insl
roll
and
lea
pusha
mov
inc
mov
lea
jmp
inc
scas
cmp
int3
mov
sub
add
mov
xchg
stc
or
aaa
int3
jecxz
shlb
xchg
xor
xchg
jle
repz
fcompl
das
push
sahf
cmp
lea
fcompl
sbb
add
lea
cs
add
dec
and
mov
popa
lcall
cmp
shll
cltd
popf
sub
add
cmpb
std
nop
adc
sbb
pop
std
cmp
addr16
jmp
mov
ret
hlt
add
stc
inc
insb
mov
mov
rcl
mov
or
and
jb
icebp
jne
pop
popf
sti
nop
xchg
repnz
sbb
retw
xchg
xchg
clc
test
nop
mov
mov
imul
mov
jg
adc
fists
pop
xorl
adc
int3
dec
xchg
xchg
jb
xor
mov
xor
addr16
fs
sbb
sub
mov
jg
lds
mov
in
adc
and
xor
je
scas
adc
xor
or
or
lds
mov
rolb
push
cs
adc
mov
or
pop
ret
xchg
xorps
fbld
mov
into
add
mov
mov
int3
xchg
nop
cmp
jle
mov
popa
push
imul
pop
push
xchg
rcll
in
fnstenv
cltd
push
xchg
push
je
jbe
loopne
mov
into
ja
mov
inc
xchg
sarl
test
fsubl
inc
dec
outsl
jge
popl
sub
xor
lahf
cmp
pusha
sahf
mov
int3
xor
rclb
dec
mov
fisubl
inc
hlt
mov
add
cwtl
jns
out
aad
filds
mov
test
lcall
les
pop
mov
idivb
mov
std
push
and
movsl
inc
jmp
sub
mov
jno
stos
imul
hlt
lods
lcall
aam
xlat
andl
sbb
or
arpl
pop
or
mov
popa
sub
cmp
inc
add
dec
iret
cld
loope
sub
pop
or
jo
sbb
cltd
cld
mov
sub
ret
outsb
push
push
bound
retw
pop
push
in
pop
sahf
imul
or
stos
lret
jp
popf
in
cs
call
fs
pusha
sub
pop
cli
xchg
jmp
clc
lahf
test
mov
dec
ljmp
push
push
lahf
mov
fistps
sub
daa
mov
pop
insb
jmp
inc
push
fsts
push
cmp
cld
repnz
ss
xlat
sarb
inc
add
ret
sarl
stc
pop
divps
outsl
add
mov
add
out
into
pop
jmp
idiv
mov
mov
cmp
push
cmp
loopne
or
and
pop
xchg
xchg
sub
dec
push
movsl
dec
in
mov
js
pop
pop
cmpsl
adc
sbb
cmpsb
push
mov
stos
in
dec
repz
into
cmpsl
int3
dec
test
imul
in
leave
adc
testb
out
push
sbb
sub
cwtl
jnp
into
and
negb
mov
das
clc
add
push
inc
jo
outsb
push
sar
xor
pop
insl
aad
pop
repz
xor
mov
orb
scas
pop
jno
lods
push
jl
mov
in
or
xchg
cltd
bound
push
mov
out
es
addr16
out
sub
fsub
stos
and
lret
dec
cmp
test
inc
sbb
dec
inc
mov
xor
insl
inc
mov
scas
repnz
fistps
lods
cs
sbb
loope
adc
int
icebp
inc
enter
aas
or
fnsave
sub
cmp
push
push
adc
jge
into
adc
daa
jmp
pop
movsb
dec
pop
inc
shlb
or
aam
rcrl
incb
sub
adc
jge
iret
loope
frstor
xlat
inc
xchg
pusha
mov
mov
mov
mul
inc
and
sarb
fs
test
mov
dec
ret
in
enter
mov
lret
cmc
fdivrl
out
ret
jb
cmp
fadds
push
lahf
mov
popa
mov
iret
dec
movsl
mov
pop
dec
pop
pop
pop
mov
mov
push
push
cmpsb
test
mov
sbb
mov
in
rolb
sub
lcall
leave
xor
cmp
imul
pop
lods
jne
add
mov
outsb
arpl
push
xchg
lahf
add
or
out
movsb
lods
ret
push
loop
aam
xchg
xchg
fcoml
pop
in
jae
imul
xor
inc
xchg
out
aam
dec
shl
push
xlat
ljmp
sub
shl
sahf
mov
int3
pop
arpl
dec
pushf
xor
rclb
mov
mov
shrb
rcll
les
pop
inc
adc
testl
je
push
or
xor
sbb
mov
mov
lods
and
cmc
mov
sub
cmpb
push
xor
push
pop
in
out
addl
push
dec
push
cmp
shrb
shlb
out
sub
repz
lods
adc
pop
mov
inc
cmp
mov
fcmovu
xchg
push
lahf
mov
mov
addr16
jmp
xor
jmp
mov
pop
add
xor
repnz
nop
je
fisubl
push
imul
and
popa
dec
mov
sub
xchg
push
nop
test
add
mov
insl
clc
fdivrl
sti
rcrl
insb
repnz
mov
xchg
add
push
xchg
cmp
ljmp
push
add
or
cmpsb
or
push
fdivs
jle
popf
dec
out
arpl
imul
repz
cmpsl
scas
mov
pop
cmp
sbb
xchg
push
outsl
cmp
lods
inc
fisttpll
sub
ja
mov
lock
outsl
sbb
ds
mov
and
mov
and
dec
subl
push
fs
lock
leave
aaa
pop
pop
jmp
sub
xchg
mov
in
stos
xchg
js
aam
mov
dec
leave
inc
mov
mov
pusha
lret
ret
push
xchg
xchg
mov
dec
sub
call
inc
push
insb
push
xor
add
test
loopne
pop
dec
cmp
inc
pop
pop
xor
lods
out
jmp
mov
rcl
fs
inc
inc
movsb
mov
clc
push
ret
jp
jge
dec
addb
ficoml
div
inc
mov
jnp
repnz
jnp
sub
aas
in
xor
imul
xor
fnstcw
mov
scas
mov
jge
jecxz
cmpb
popf
negb
psrlw
test
pop
outsb
push
jmp
xlat
and
jg
lea
cmp
movsb
or
aaa
push
and
lcall
mov
mov
jl
test
xchg
pop
or
std
stc
cmp
rolb
xor
and
sahf
mov
mov
cmp
inc
clc
mov
pop
pop
data16
lock
inc
pop
fwait
mov
sbb
rcll
xor
cmp
cmp
cld
cmp
or
arpl
jmp
subl
and
pop
sub
aas
movhps
push
fs
rol
mov
cmpsl
cld
sbb
inc
mov
push
adc
add
clc
or
into
pop
mov
push
jo
push
xchg
adc
in
cli
dec
pop
sub
das
imul
int3
das
mov
xchg
push
mov
negb
mov
arpl
jo
repz
sbb
mov
adc
fcoml
in
outsb
xor
mov
stos
int
mov
dec
jno
xor
jp
push
scas
mov
aam
xor
lcall
cmc
popa
xchg
sub
sbb
add
jmp
inc
in
in
shll
jno
repz
pop
sbb
leave
mov
pop
fcmovnb
push
outsl
sbb
xchg
popa
test
rorl
xor
mov
cmp
push
scas
imul
dec
jge
sub
and
fcomi
or
jp
shr
sub
cs
push
xchg
xor
mov
dec
and
inc
xchg
cmpb
inc
xor
inc
popa
xchg
pop
mov
test
mov
lock
inc
cmp
dec
inc
jno
gs
gs
mov
int3
enter
xor
and
push
add
add
mov
xor
arpl
insb
pop
inc
popf
icebp
lahf
movsb
sbb
negb
adc
mov
rorb
data16
popa
sar
fstpt
cmpsb
cld
out
addr16
test
int
lea
ljmp
xor
in
mov
outsl
and
ja
clc
mov
inc
adc
std
shll
push
enter
mov
popf
mov
imul
loop
imul
shl
mov
insb
daa
mov
add
fstl
jg
jg
mov
mov
dec
out
adc
bound
mov
jmp
shrl
adc
xor
int3
je
imul
cltd
mov
adc
repz
sbb
xor
in
mov
mov
shlb
aam
xchg
pop
popf
jge
ds
xchg
fmulp
push
and
inc
cmpl
cli
push
shll
xchg
ret
ret
rorb
mov
ds
call
or
sub
push
sub
out
and
pop
jp
sbb
jae
mov
lods
jns
lods
mov
mov
push
orl
mov
pushf
dec
out
pushf
das
daa
inc
sarl
test
cmp
dec
jecxz
test
cmp
imul
adc
iret
xor
push
pop
call
and
es
and
fiadds
lods
xchg
inc
clc
int3
mov
cltd
jge
out
jmp
fisubrl
sbb
xor
push
ja
mov
and
xor
aam
cld
mov
xchg
cli
add
pop
cs
xchg
push
xchg
hlt
lret
dec
mov
push
pop
dec
pop
movsl
scas
inc
sbb
inc
inc
in
cmp
pop
or
push
mov
int
test
cli
and
jmp
loope
mov
xchg
xor
repz
mov
pop
dec
inc
aam
add
mov
xor
sarl
dec
adc
insb
adc
add
pop
xchg
dec
clc
insb
pop
bound
cmp
dec
push
sbb
lcall
test
cmpb
jmp
test
insl
xor
cmp
mov
cld
sar
push
jp
pop
cmpb
cmc
mov
js
gs
jl
lods
mov
cmp
in
stos
shrb
and
jnp
or
aad
mov
cmc
pop
mov
push
jl
pop
fwait
adc
cmp
pushf
out
fdivrl
in
addb
jae
jae
mov
xchg
enter
cmp
les
cltd
lret
xchg
leave
call
adc
sbb
adc
pop
push
xchg
jo
lret
bound
in
push
sbb
and
or
sub
lods
mov
movb
enter
test
mov
fsubrs
mov
shrb
aas
je
adc
mov
imul
push
pop
sbb
mov
iret
and
add
icebp
mov
lret
stc
jg
stos
ret
into
mov
add
and
fnsave
neg
or
pop
mov
pop
mov
pop
clc
cmp
pop
pop
mov
push
dec
out
lea
cld
sub
sbb
mov
rcrl
push
js
mov
xchg
daa
sub
adc
inc
mov
push
mov
sbb
cmp
mov
ficompl
sbb
xchg
mov
idivl
vpaddw
pop
arpl
xchg
imul
mov
insl
stc
std
rcrb
mov
or
fildll
jb
push
aam
push
jge
mov
pop
push
jmp
xor
jmp
movsl
xchg
ret
jmp
pop
inc
dec
xor
mov
mov
xchg
shr
mov
push
pushf
in
or
cmp
add
aas
sbb
xor
cmpl
gs
lret
bound
push
dec
xlat
and
insb
push
das
push
inc
dec
jae
mov
push
dec
adc
pop
sub
push
out
insb
je
xchg
mov
add
gs
mov
adc
sarl
es
out
sub
push
lret
fstpt
sahf
lea
adc
or
pop
mov
mov
mov
push
push
xchg
outsl
mov
xchg
enter
xchg
clc
leave
mov
xorl
adc
adcb
lahf
xchg
xchg
js
rolb
push
xchg
sub
ljmp
dec
sub
js
popa
bound
pusha
and
sub
mov
xor
and
nop
arpl
shlb
rol
out
dec
mov
cmc
push
rcr
xchg
sub
push
stos
mov
pop
xor
gs
push
mov
and
fstl
cmp
aad
stos
out
movsb
movsl
xchg
add
or
data16
pop
out
std
test
pop
jno
jno
or
decl
in
pop
jmp
sahf
arpl
mov
repz
mov
jge
test
paddusb
pop
leave
imulb
cmpsl
mov
jl
int
in
call
mov
mov
push
or
dec
xor
push
xchg
and
mov
sti
ljmp
sbbb
mov
add
jne
ret
out
dec
cwtl
and
fwait
aad
push
or
ja
sub
ja
js
fstl
sbb
hlt
jecxz
movsl
bswap
add
dec
sub
pop
adc
xchg
in
daa
movsb
pop
nop
inc
inc
rcrl
dec
in
push
cmp
xor
lea
mov
scas
or
mov
ja
and
jle
xchg
mov
jae
cli
cmp
jne
in
mov
mov
sbb
repz
aad
jecxz
aas
negb
daa
dec
xchg
dec
jnp
or
push
xor
in
cmp
add
test
shrb
cwtl
mov
or
mov
negl
sahf
mov
mov
or
into
insl
repz
mov
in
in
add
daa
js
insl
xor
adc
sub
cltd
out
xor
push
mov
dec
jl
push
pop
insb
imull
pop
mov
cmp
mov
mov
mov
xchg
lock
sbb
xor
adc
sarb
dec
dec
je
or
sahf
pushf
andb
ret
ja
lock
or
pop
lea
data16
cmp
xlat
shrl
mov
mov
pop
test
or
inc
call
xchg
jmp
mov
jne
and
jb
sbb
scas
xchg
adcl
pop
xchg
fst
or
subb
add
imul
mov
xchg
mov
aam
jge
je
pusha
jo
and
adc
inc
push
insb
lahf
sbb
push
jmp
inc
mov
scas
ds
ret
pop
js
pop
stos
mov
mov
or
cmp
sbb
cwtl
movsl
mov
sbb
es
jae
mov
dec
ljmp
lret
push
lds
mov
push
cmp
ficompl
repnz
je
push
dec
fsubl
pop
sub
repz
jmp
subb
cltd
test
fsubrl
push
cmp
rcll
and
rcrb
cli
jb
ss
cmp
add
test
aaa
iret
xchg
or
pop
dec
adc
pop
sbb
fidivs
pop
ljmp
cwtl
std
sbb
sti
mov
sbb
dec
adc
cmpsb
in
test
pop
lret
nop
filds
push
add
lret
jl
jno
mov
jnp
outsb
sbbb
sub
stos
sbb
dec
sub
push
ljmp
icebp
inc
xor
jae
cmp
mov
sub
test
and
cmp
xchg
push
shlb
xlat
cmp
cwtl
cmpsl
insb
xchg
outsb
xchg
lcall
xchg
push
icebp
mov
mov
mov
fldt
fbld
and
dec
and
xchg
les
push
and
sub
cld
mov
sbb
sbb
xchg
xchg
jmp
and
decb
xor
testl
adc
mov
sub
mov
in
dec
ljmp
out
ret
xor
inc
fsubr
imul
xchg
cltd
aam
lea
push
xchg
das
push
cs
in
inc
movsb
lock
imul
aad
cmp
scas
out
nop
add
mov
sub
adc
inc
in
jecxz
sub
xchg
add
sub
pusha
popf
jecxz
sbb
mov
push
jnp
pop
out
pop
cs
sbb
mov
adc
into
adc
aam
xchg
jg
push
mov
mov
dec
aaa
xchg
test
pushf
pop
mov
addr16
sbb
mov
inc
sub
mov
xor
dec
repz
push
adc
decl
jno
dec
push
outsb
mov
jp
movsl
nop
add
ss
or
add
pop
bound
mov
inc
out
adc
lods
in
dec
lds
addl
popa
pop
fisubs
push
push
icebp
jmp
stos
push
shll
sub
and
mov
divl
adc
or
pusha
inc
cld
or
or
sbb
push
and
cmpsl
push
clc
cmp
mov
lret
ret
cltd
fdivrl
bound
rorl
pop
pop
repz
jns
inc
es
dec
out
mov
popf
or
pop
lahf
add
pop
xor
in
rclb
cs
adc
adc
fildll
add
repnz
xor
and
negl
stos
mov
jle
xchg
in
adc
push
dec
mov
inc
adc
imul
test
loopne
into
in
inc
inc
aad
lea
jb
jno
int3
mov
divb
out
jno
mov
cmpsl
in
jmp
jne
cmp
cmp
movsl
xor
pushw
addb
pop
out
jb
mov
out
ret
subl
push
ss
in
sbb
movsb
push
add
pop
adc
adc
mov
fadds
push
cmpsl
mov
push
mov
mov
arpl
push
bound
mov
mov
sub
lea
imul
fcmovbe
out
xchg
mov
cli
xor
push
mov
sbb
ret
inc
ror
add
fs
mov
cmp
lret
inc
jecxz
lods
push
adc
aad
cmp
and
sub
arpl
fwait
in
jge
cmpsl
pop
mov
sbb
out
cmpsb
xchg
mov
mov
cmpsl
out
push
add
sbb
sub
mov
dec
scas
add
loope
mov
stc
jge
xchg
inc
iret
mov
cli
fisttpll
fnsave
in
fisubl
gs
jnp
mov
icebp
in
xor
cmp
fstps
push
mov
xchg
clc
mov
add
jecxz
dec
adc
mov
test
pop
les
dec
dec
fdivl
jg
fcoml
test
add
aaa
lds
mov
sbb
fmul
mov
pusha
cmp
inc
notb
loope
pop
cmpsb
inc
hlt
mov
fsubr
test
test
push
mov
xor
mov
addr16
cltd
loope
xchg
fistl
sbb
loopne
out
mov
pop
shr
js
hlt
andl
das
ljmp
cli
outsb
sub
fwait
xchg
loopne
or
sub
and
je
pop
lret
popa
cmpsl
aam
sub
xchg
cmp
dec
adc
pop
dec
adc
push
aam
mov
les
xchg
adc
test
pop
test
scas
push
cwtl
add
push
int3
orb
push
mov
loope
nop
es
loop
adc
cld
xor
cmp
les
mov
push
push
fcoms
cmp
dec
mov
sbbb
shr
sahf
jecxz
jl
arpl
ljmp
cmp
sub
jecxz
out
jno
test
je
mov
pop
sbb
dec
or
fldcw
scas
mov
ljmp
enter
into
sub
cmp
sbb
add
pop
xor
pop
int3
dec
sti
jo
cld
push
imul
add
xchg
sbb
pop
lea
je
jo
push
pop
xchg
nop
pop
test
pusha
dec
adc
jb
push
jmp
repnz
rclb
sbb
lock
push
icebp
shlb
sbb
fwait
jle
cmp
add
adc
mov
lods
jge
mov
sbb
lods
sub
dec
lods
insb
test
jl
fsubrs
mov
inc
adc
mov
cmpsb
or
and
push
jns
dec
stos
repz
jge
pop
icebp
sahf
adc
jno
cltd
out
popf
sub
insb
orb
in
nop
aam
das
push
cmp
mov
je
flds
xchg
je
int
mov
jg
inc
sbb
jb
mov
push
or
loope
push
mov
negl
push
ljmp
popf
dec
xchg
fsub
mov
cmpl
sbb
or
inc
stc
nop
inc
and
jge
jle
icebp
popl
pop
push
and
adc
cmpsb
mov
int3
mov
xor
lret
ret
push
stos
int3
popf
aam
add
xchg
or
push
pop
xchg
jae
adc
popf
pop
mov
push
jecxz
pop
out
sti
fsubrl
subl
cmpsl
sbb
aad
stos
inc
ja
cmp
adc
aaa
mov
xor
mov
push
and
sbb
les
lock
jns
cwtl
push
les
jecxz
popa
gs
pop
lea
rorb
cmp
cmp
test
xchg
in
sbb
jae
pop
movsb
test
push
cmpsl
jle
sbb
lea
cmp
add
imul
pop
pop
shll
shlb
incb
inc
out
jns
push
adc
jo
stos
pop
clc
popa
and
cmp
push
mov
aaa
mov
pop
out
jo
inc
fisttpll
cmp
incl
lahf
dec
call
mov
push
in
xor
inc
cmpsl
sub
xchg
addr16
sbb
cmp
call
lock
in
aad
mov
jne
loop
add
pop
dec
ret
pop
sbb
xor
cmp
shrb
add
jmp
movsl
je
shrl
mov
fs
xchg
cmp
mov
jne
or
inc
inc
xor
sti
and
mov
int3
arpl
popa
xchg
sub
mov
mov
xor
mov
rorb
jle
loopne
cmp
pop
push
dec
dec
mov
or
stos
sbb
push
and
sbb
sti
and
or
je
push
in
xor
andb
lcall
dec
icebp
push
imul
cmpsl
ss
or
sub
and
stc
enter
cltd
or
push
test
pop
adc
fprem
and
or
std
ljmp
push
lret
lahf
data16
sub
adcl
test
enter
mov
repz
enter
inc
stc
xchg
jns
popf
pop
cmp
mov
and
loop
divb
cmc
xchg
cmp
adc
in
xchg
addr16
pop
sbb
mov
add
fs
rcrb
cmp
cli
cwtl
sbb
int
pop
sub
cltd
iret
icebp
popf
rclb
mov
mov
adc
push
add
pusha
cld
ja
loope
mov
outsl
in
xorb
cld
push
add
jecxz
sub
rcrb
xchg
xchg
pop
inc
mov
xchg
fs
loopne
sub
pusha
jmp
pop
repnz
mov
inc
ljmp
sub
fldt
mov
stos
adc
jb
sbb
sarl
pusha
clc
mov
sub
push
push
cmp
add
xchg
ljmp
nop
pop
es
stos
dec
pop
arpl
cli
movsl
bound
cmp
call
adc
mov
movsb
repz
mov
mov
repz
cmpb
test
jp
adcl
sub
je
stos
pop
cmove
jge
fcmovnbe
movsl
mov
aam
aaa
popf
ret
mov
push
cmp
loope
add
scas
cmp
mov
pop
mov
in
sbb
dec
stos
test
mov
lret
or
pusha
addr16
dec
jnp
add
push
add
jg
mov
and
and
pop
or
inc
inc
xor
aaa
mov
pop
daa
or
inc
dec
xchg
mov
cmpsb
in
and
sub
mov
and
cmp
inc
test
call
lods
mov
jmp
rcl
movsb
test
hlt
test
mov
lock
inc
sahf
mov
inc
movsl
lcall
mov
test
js
ss
ja
mov
push
into
mov
ficoml
mov
and
mov
adc
jne
pusha
scas
mov
sub
arpl
out
std
and
cld
jle
push
lods
cmpsb
stos
test
adc
data16
test
std
fdivr
inc
orb
test
cmpsl
rorb
out
lock
mov
sub
cmpsb
and
mov
rclb
gs
dec
dec
stc
in
pop
jle
mov
sub
mov
push
popf
pop
outsl
adc
addb
pop
cmp
je
movsb
mov
inc
mov
int3
out
pop
pop
jl
lea
pop
enter
shl
inc
inc
lret
das
jbe
call
lods
nop
pop
ret
aam
inc
pushf
dec
pop
cmpsl
loop
je
jb
leave
push
sub
and
popa
cmp
xor
in
adc
pop
inc
jnp
inc
push
clc
xchg
shll
lods
aas
push
and
insb
es
mov
or
shl
fs
pop
hlt
inc
imul
and
jnp
or
stc
push
pop
dec
repz
sbb
mov
dec
jo
xor
push
dec
pop
push
mov
push
mov
dec
sub
pop
repz
jo
or
adc
icebp
jae
mov
js
nopl
jge
mov
xor
iret
enter
test
gs
and
leave
push
imul
arpl
dec
inc
sub
repz
sarl
sbb
outsb
sti
js
inc
loopne
rorl
push
push
ss
mov
sbb
or
adcb
mov
cld
gs
cmp
sbb
lahf
mov
mov
mov
daa
push
rolb
addb
lahf
iret
adc
test
lea
xlat
ud1
daa
xchg
xchg
push
std
pop
stc
xchg
call
lahf
mov
fldl
pop
or
out
std
or
pop
lret
jnp
out
pop
mov
mov
adc
ja
lods
ljmp
cmp
dec
fdivrl
mov
mov
ljmp
lret
mov
repnz
mov
lahf
pop
sbb
pop
mov
lcall
int
mov
add
pop
mov
xor
pop
push
xchg
fnstsw
and
iret
sub
stos
lock
test
clc
bound
jp
push
add
push
mov
or
out
dec
add
and
xchg
adc
jb
dec
pop
mov
imull
pop
cwtl
mov
movsb
xor
je
xchg
leave
aas
ss
push
out
and
repnz
rep
cmp
jnp
jge
repnz
fstpl
add
ret
mov
rcr
fwait
sub
push
inc
mov
pop
aam
outsl
lds
push
lcall
lods
or
lock
cltd
xor
outsb
fstpl
xchg
push
adc
push
dec
mov
addr16
insb
mov
cmp
shlb
push
arpl
mov
or
insb
insb
pop
or
cmp
and
xor
ja
nop
pop
adc
dec
jge
fsubrs
sarl
xor
push
out
insl
addl
dec
sti
xor
mov
cmp
int3
push
inc
cld
scas
mov
jg
pop
cli
jp
pop
icebp
cmp
mov
fcomps
and
mov
sub
lds
loope
mov
icebp
jne
cmp
outsb
pop
rcrl
shlb
dec
inc
pop
cmp
sub
push
mov
stc
mov
xchg
scas
mov
lret
outsb
mov
jp
xchg
sbb
xchg
loop
filds
jnp
xchg
outsl
test
xchg
iret
xor
leave
add
out
fldl
xchg
jnp
gs
pop
mov
mov
xchg
or
sub
shl
scas
jno
fwait
icebp
push
addr16
faddl
icebp
add
mov
xor
fcmovnb
ljmp
in
pop
test
test
push
push
push
into
inc
enter
sti
shl
ror
lea
jb
pop
arpl
and
lods
mov
inc
push
aad
inc
sbb
jp,pn
iret
inc
lea
dec
das
xor
sbb
cmp
push
jb
imul
cmp
push
mov
movsl
sbb
out
out
sbb
popf
bound
mov
and
aas
inc
add
sahf
mov
mov
adc
cmpsb
loope
jb
dec
push
in
das
incl
jge
jae
pop
insb
ds
push
push
or
jb
cmp
pop
pop
lea
mov
mov
hlt
cmp
adcb
inc
xor
sub
cmc
clc
mov
adc
jns
scas
sbb
pusha
push
mov
and
mov
add
mov
sti
push
xchg
add
adc
js
lret
fidivl
cmp
pop
mov
arpl
xor
aaa
fdivp
rol
pop
push
out
push
pop
cmp
cmp
jmp
mov
mov
in
add
sub
fisttpll
inc
lock
push
jne
push
mov
sub
ret
insb
xchg
sarb
es
inc
ret
pshufw
jno
pop
dec
repnz
lods
addr16
iret
pop
aas
out
mov
es
rcrl
out
sub
xchg
ljmp
mov
push
out
ret
mov
mov
or
sub
fisubrl
adc
ds
in
cwtl
and
pop
stc
fldl
and
sub
add
mov
mov
xchg
fwait
push
xlat
push
out
aaa
fwait
cwtl
dec
mov
popl
cmpsb
outsl
fucomp
lret
ss
xchg
idivb
aam
or
aad
testb
cltd
add
pushf
sbb
notb
into
lods
jae
xor
fisttpl
adc
mov
movsl
shlb
movsl
lock
xchg
not
inc
std
roll
nop
mov
xchg
pop
and
pop
lods
lock
fs
lds
xchg
xorl
xchg
xchg
xchg
inc
call
or
cltd
shrb
push
shlb
addr16
jo
outsl
gs
push
mov
loope
test
and
or
push
fistl
and
pop
sarl
aam
mov
mov
or
inc
sbb
sbb
cs
sub
rcll
outsl
es
sbb
sub
rclb
sbb
cmp
ja
xchg
shlb
lcall
hlt
xchg
insl
mov
cmc
adc
stc
mov
leave
xchg
jns
js
sbb
and
in
pop
jl
icebp
popa
cmp
mov
inc
cmpsb
mov
inc
bound
imul
cli
gs
add
pop
adc
add
inc
xchg
in
mov
mov
and
mov
mov
insb
int
int3
mov
jb
int3
push
adc
outsl
fstps
sbb
mov
add
icebp
mov
dec
pop
inc
jl
enter
push
cltd
jb
fisttpl
cld
dec
dec
push
add
cmp
sbb
push
notb
push
outsb
dec
leave
jmp
sub
push
mov
push
rol
xor
ljmp
jae
mov
scas
pop
jo
cmp
notb
cmpsl
cmp
out
sub
xchg
or
inc
pop
dec
or
adc
mov
add
cmp
jl
sti
test
mov
dec
lahf
shll
xor
imul
adc
ret
out
add
outsl
push
and
cmpsb
jb
mov
mov
jge
popa
sbb
or
jb
xchg
or
cli
fidivrl
pop
pop
adc
add
cmp
ret
test
add
jp
imul
sub
dec
outsb
xor
jmp
adc
push
test
xchg
add
add
loope
cwtl
scas
shll
lds
adc
call
sarl
mov
ss
adc
xchg
mov
adc
ds
arpl
push
movl
xchg
xor
xor
aas
scas
fwait
cli
mov
lods
or
sarb
adc
jecxz
mov
push
mov
add
push
mov
push
adc
and
jb
repnz
push
out
pop
test
cmp
mov
fwait
iret
mov
mov
loopne
mov
xor
mov
subl
pop
cmpsb
xor
pop
mov
cmp
testb
adc
cmp
mov
cli
pop
icebp
lcall
cmp
pop
ret
xchg
cmpb
or
mov
xor
inc
pop
xchg
mov
xchg
jg
cld
pop
xorl
push
imul
test
scas
sbb
enter
into
add
fadds
inc
mov
scas
and
xchg
mov
mov
push
fmuls
scas
and
xor
in
pop
ret
mov
gs
ja
push
sbb
push
fwait
xor
jne
or
ljmp
xchg
cmp
push
or
mov
sbb
pusha
xor
dec
pop
or
gs
adc
lahf
sbb
add
lods
push
jno
movsb
sub
das
sbb
outsb
icebp
adc
rcll
mov
cmp
xlat
pop
pop
pop
add
test
in
sbb
adc
sbb
iret
test
xchg
das
sub
in
jmp
pop
add
pop
bound
sbb
cmp
jb
inc
gs
xchg
mov
push
and
mov
cmp
inc
imul
filds
mov
ss
hlt
add
sub
mov
ret
push
or
sbb
std
and
mov
pop
loop
dec
imul
bound
outsl
and
stos
ret
test
mov
lods
cmpsl
xchg
jb
jmp
cmp
mov
mov
inc
jecxz
adc
push
inc
ret
imul
sub
clc
cmp
jae
cmp
jae
dec
cmc
cmc
fwait
lret
lock
add
je
lahf
xorb
jl
inc
adc
push
loopne
push
icebp
loopne
mov
call
adc
dec
movb
sahf
test
mov
push
jae
jecxz
sbb
and
sbb
cmp
sub
imul
ret
leave
mov
jge
je
cli
xchg
orl
jle
out
insb
addr16
mov
mov
jo
out
sahf
pushl
fcmove
push
push
cli
mov
pop
pop
pop
jns
xchg
enter
in
stos
or
pop
adc
loopne
dec
jge
adc
imul
jo
js
jmp
jp
mov
inc
or
loopne
lock
jp
dec
pop
mov
sti
add
in
fdivrs
adcb
and
stos
jmp
xor
xor
mov
sub
push
fisttpll
jbe
test
pop
js
pop
xlat
addr16
sbb
lahf
std
xor
ret
call
push
or
or
js
jo
mov
push
inc
cmpsl
mov
fmull
push
sub
ror
scas
test
add
mov
inc
out
lods
in
leave
shlb
xchg
sub
sbb
or
vcvtpd2dq
add
movsl
jb
xchg
fwait
repnz
test
out
adc
mov
lock
lcall
nop
cmpb
stos
das
and
jo
aaa
outsb
test
mov
inc
movsl
sbb
rolb
sti
es
sub
in
mov
aad
add
lods
lock
sbb
pop
cs
mov
mov
lds
js
dec
aaa
and
popf
xchg
jl
push
push
cmpsb
mul
pop
push
xchg
pop
sti
adc
jmp
int3
std
rorb
mov
cli
popf
xchg
cmp
sahf
ret
imulb
fcomi
fstpt
xchg
sahf
test
push
add
test
xchg
out
xchg
int3
int
pop
add
xchg
dec
sbb
popf
cmpsb
add
ja
mov
sbb
and
mov
or
icebp
lret
xchg
and
stos
test
cmp
jg
sti
enter
arpl
pop
xor
aas
sub
xor
pop
add
sub
dec
adc
mov
inc
out
sbb
test
dec
xor
push
mov
out
int3
mov
pop
lret
and
or
xor
test
and
and
mov
addr16
test
dec
push
icebp
int
leave
cld
aad
test
hlt
ja
pop
ret
sub
xchg
xor
mov
outsl
xchg
inc
sub
inc
inc
cltd
inc
outsl
mov
or
and
push
out
pop
xchg
pop
push
shrl
sbb
or
outsb
push
cmc
das
mov
ds
jge
inc
sti
cmc
out
push
push
jmp
es
xor
dec
sub
aas
bound
mov
pop
or
test
mov
jp
jecxz
mov
insb
rol
mov
insb
popl
into
addr16
movsb
mov
pop
clc
jo
xchg
adc
rcrb
popf
out
xor
es
and
dec
into
sub
sbb
xchg
test
mov
add
push
jne
movsb
notl
add
loop
cmp
cwtl
pushf
fcompl
jmp
xchg
test
mov
popf
loope,pn
push
or
fbstp
cmp
adc
icebp
sub
xlat
ss
and
mov
std
outsl
mov
out
insl
mov
add
sbb
xchg
mov
iret
adc
sbb
lcall
cld
mov
ret
loope
sbb
add
sub
aam
pusha
in
pusha
or
mov
cmc
dec
jne
mov
sbb
sub
aas
adc
jbe
dec
mov
sahf
adc
inc
mov
xor
dec
push
mov
test
test
mov
add
jb
dec
std
je
ja
stos
xor
adc
filds
aam
std
pusha
jb
jne
jo
jmp
orb
fnstsw
jp
and
inc
es
repz
gs
pop
cmp
sub
scas
fs
jbe
and
les
out
popf
xchg
add
andb
das
xchg
xor
mov
pop
test
sahf
mov
xchg
xor
leave
add
es
fadds
stos
nop
out
es
mov
lock
outsl
xchg
lods
or
iret
dec
lret
dec
lods
jns
push
jg
in
inc
movsl
jmp
rclb
shl
imul
faddl
or
xchg
pushf
aam
adc
divl
aam
pop
bt
push
mov
pusha
dec
js
repz
imul
jns
push
lods
cs
mov
lcall
loopne
mov
xchg
cltd
test
out
mov
das
lds
mov
arpl
xor
mov
mov
mov
sbb
adc
push
mov
sub
jae
mov
push
pusha
cld
roll
add
fistpll
jp
scas
add
pop
xchg
in
mov
xchg
dec
test
jno
ds
sarl
sbb
jno
sub
nop
leave
orl
hlt
fadds
cwtl
inc
jne
or
popf
loop
inc
icebp
aam
inc
xchg
fisttpl
inc
addr16
jo
sub
sarb
add
out
stc
mov
jg
add
xor
enter
test
imul
dec
js
pushf
inc
or
cmpsl
and
test
push
push
adc
mov
in
xchg
xor
in
fwait
jl
ret
cmp
mov
out
scas
push
add
add
std
mov
repnz
fnstenv
add
cmp
add
fs
adc
movsb
inc
inc
inc
in
aam
sub
idivl
xlat
push
call
inc
mov
andb
cli
enter
cmpsl
test
shrb
daa
ja
add
xor
pop
xchg
mov
jbe
xor
push
cld
sti
xchg
int3
sti
stos
fs
push
stc
adc
and
fbld
dec
psrld
sahf
fbstp
mov
jle
add
xchg
fistpll
notrack
leave
dec
sub
fwait
push
rorl
jbe
divb
mov
dec
xchg
add
add
cmpl
mov
or
das
push
mov
je
cmpl
adc
cmp
mov
ss
comiss
jnp
push
aaa
mov
jo
scas
add
ficoml
test
xchg
xor
sub
into
xor
mov
xchg
les
or
adc
mov
xchg
xchg
mov
out
bound
iret
int3
jno
nop
mov
xor
push
ficoml
push
mov
jo
inc
mov
push
xchg
lret
and
cwtl
xor
repnz
imul
popf
pop
sahf
cmc
push
or
inc
daa
sarl
ljmp
insl
enter
icebp
or
add
pop
xchg
les
jle
pop
mov
stos
mov
fistpll
icebp
mov
movsb
lret
pop
mov
out
xchg
xchg
mov
sub
mov
cli
jns
mov
jns
flds
hlt
cwtl
scas
xchg
aas
insl
imul
in
and
shl
adcb
xchg
fstpt
scas
or
fwait
adc
je
sbb
repz
mov
pop
fsubrl
add
mov
jno
cmpsl
std
mov
insb
adc
sbb
cmp
lea
fsubrl
pop
xor
add
mov
addr16
jp
popf
mov
inc
sub
mov
fidivs
pop
bound
lahf
xor
je
fisttpll
mov
aad
mov
in
jmp
loope
loop
fwait
pop
loop
mov
or
dec
ret
lcall
mov
shrb
sub
mov
repz
dec
add
popa
sbb
mov
cmp
mov
lahf
jns
xchg
aas
pop
test
bound
mov
cmp
adc
adc
test
sub
add
xchg
aas
sbb
add
pushf
in
xor
inc
or
and
cs
sti
repz
int
cmp
add
imul
xor
outsl
mov
push
aaa
adc
icebp
clc
mov
mov
and
mov
push
data16
test
dec
ret
data16
xchg
shll
test
out
mov
int
mov
lcall
loope
cli
or
rcrl
or
shrb
xchg
xchg
pop
call
push
dec
imul
jmp
mov
repnz
int3
cmp
call
jb
pop
cmp
xchg
call
xor
popf
jae
mov
stos
push
ror
jge
loope
cmp
push
or
movsb
iret
sub
stos
insb
iret
jmp
jl
dec
jbe
push
pop
jae
arpl
js
jmp
xlat
xor
mov
movsl
stos
mov
int
pop
mov
outsl
xchg
scas
dec
xchg
mov
push
fiaddl
add
pop
xor
sbb
ficoml
insl
scas
inc
negl
out
scas
mov
in
insb
xor
push
movsb
or
jecxz
jl
cld
pop
sub
jmp
lahf
push
arpl
negb
mov
ficoml
mov
in
roll
and
jnp
jmp
ficompl
stc
aaa
and
mov
or
in
fisttps
mov
fmuls
add
xor
out
sbb
clc
daa
stos
ficoml
inc
push
push
push
adc
orb
jg
adc
sbb
push
lds
test
mov
pop
add
movsb
in
mov
nop
xlat
adc
in
dec
and
mov
ds
mov
cmp
subl
test
fcmovbe
es
dec
ljmp
in
ss
and
scas
fdivrp
mov
or
jne
mov
insl
xor
push
jmp
outsl
or
and
movb
pop
lock
cmp
xor
push
jp
rol
shl
sub
push
sub
or
loope
negb
in
ret
push
jo
inc
hlt
fldenv
fs
fadd
rolb
test
out
mov
xchg
dec
movsb
orb
xor
inc
inc
adc
and
adc
lret
test
out
cmp
mov
movsb
push
pop
jmp
cmp
adc
xchg
stc
in
or
sbb
cltd
push
push
cmp
cmp
jb
sub
mov
xlat
cwtl
add
insl
lods
notb
psubb
pushf
mov
xor
dec
cmp
test
add
mov
imul
xlat
or
mov
cmpsb
imul
scas
cwtl
iret
mov
lock
adc
std
mov
push
fcomps
jge
cltd
pop
dec
lock
into
mov
pop
movsl
xor
sub
push
cmp
lods
pop
testl
inc
mov
imul
stc
mov
add
outsb
or
or
fldz
sbb
xchg
mov
cmp
dec
out
pusha
mov
aad
jmp
insb
xchg
das
jg
dec
sbb
test
lret
xor
xchg
fcmovnb
and
or
cmp
faddl
fcomps
insb
in
jp
fstl
jbe
fmuls
mov
and
outsb
mov
outsl
aad
daa
push
stos
mov
mov
roll
dec
xchg
mov
lret
icebp
daa
inc
adc
fwait
cwtl
insl
adc
cmpsb
imul
jae
cmc
ljmp
or
xor
jne
in
popl
sub
xor
mov
mov
outsl
lods
mov
sub
insb
das
sbb
sbb
repz
sub
sub
push
shr
mov
add
mov
mov
outsl
and
repnz
mov
fisubs
mov
out
jne
or
mov
sbb
xor
mov
sbbl
arpl
dec
aaa
pushf
push
sub
mov
shll
repz
stos
call
add
push
fdivl
push
mov
mov
lahf
idivl
dec
pushf
fsub
inc
mov
jae
push
adc
mov
and
xor
test
mov
xchg
movlps
movsl
leave
arpl
mov
pop
leave
jmp
movsl
aaa
and
imul
addr16
add
xchg
pop
stos
adc
adc
and
cwtl
aad
sbb
ret
push
insl
lock
inc
pop
iret
ss
cwtl
cs
cmpsb
cmc
cmp
fwait
xlat
andl
fwait
inc
repnz
and
fcompl
mov
jp
sub
out
fistpll
and
mov
test
sbb
pop
ret
inc
mov
loope
adcb
ss
inc
push
xchg
fists
movsl
in
std
inc
aaa
lcall
sub
scas
popa
in
pop
sarl
xchg
pop
push
xor
test
push
mov
ss
repz
pop
mov
repz
adc
mov
fdivrl
dec
out
shlb
fsub
fcmovne
cmpsl
cmc
pusha
mov
rcr
repnz
out
adc
mov
sub
arpl
dec
mov
repz
ret
mov
cwtl
aam
test
je
xchg
loop
mov
add
cmc
mov
lods
mov
and
add
add
mov
sub
mov
jg
jecxz
insb
mov
dec
jnp
add
mov
jecxz
dec
hlt
push
xor
sub
mov
out
jne
xchg
mov
mov
outsl
pop
cmp
push
cmpsl
enter
mov
and
push
jmp
cwtl
movsb
inc
mov
aas
cmp
jo
outsb
add
test
jo
fldt
jecxz
or
movsb
cmp
push
in
scas
push
mov
push
rolb
lret
cmc
sbbb
xor
imul
or
nop
xchg
jmp
repz
inc
repz
xchg
out
loope
cltd
out
movsl
cltd
sub
ss
adc
mov
xchg
pop
loopne
mov
lds
sbb
dec
lods
add
notl
xchg
decl
xor
add
jle
sub
scas
sub
test
mov
sub
cmp
ss
push
jmp
or
adc
stos
xchg
fidivl
push
scas
inc
in
jge
nop
sub
dec
mov
jg
dec
ret
cmp
cs
cwtl
mov
out
push
int
test
aas
pop
push
shlb
clc
mov
xchg
or
xor
push
xor
sbb
rolb
xchg
loopne
js
iret
pusha
fiadds
jle
jl
push
in
shl
mov
xor
aad
aam
sub
cmp
cmp
std
in
sbb
dec
pusha
fdiv
lea
repnz
pop
addr16
mov
or
xchg
pusha
out
push
into
mov
jbe
movsb
data16
mov
pop
sub
int3
or
imul
lret
xor
mov
adc
adc
pusha
stc
xchg
icebp
addb
dec
lds
shll
pop
ljmp
push
cltd
jp
lods
mov
mov
rcll
divl
adc
insl
mov
xchg
cmp
xchg
mov
insl
jl
pop
in
pusha
fwait
lcall
adc
daa
sub
ret
pushl
jp
imul
js
push
jp
and
cmp
adcl
pushf
movsl
push
push
xchg
ja
test
sahf
negl
popf
test
mov
xlat
mov
jmp
mov
fmulp
mov
xorl
cwtl
in
mov
iret
adc
adc
xchg
push
xchg
or
mov
arpl
cwtl
pop
inc
xchg
dec
add
fstpl
push
iret
pop
idivb
mov
mulb
push
into
fcoms
push
imul
or
xchg
shrl
or
incl
nop
incb
dec
jno
imul
fs
ljmp
les
es
push
loope
fwait
or
or
repz
ljmp
jbe
stc
jge
jecxz
pop
sbb
nop
pop
xor
cltd
les
mov
sbb
pop
int
ds
add
fistpl
or
mov
mov
jbe
orl
stos
data16
jo
mov
fistps
pop
mov
adc
mov
shlb
es
loop,pn
in
xor
jno
pop
mov
or
adc
adcb
decb
lahf
dec
mov
pop
imul
test
je
and
or
leave
adc
cli
gs
sub
ds
adc
cmp
jnp
dec
pop
clc
movsl
insb
mov
inc
xor
mov
jge
js
dec
lret
inc
mov
das
pop
icebp
iret
jl
add
xchg
lods
rcr
pop
out
std
jg
lds
rclb
xchg
fistpl
mov
bound
mov
cmp
sub
arpl
mov
mov
icebp
pop
inc
dec
xor
or
sti
push
js
ret
int3
loopne
add
loopne
sbb
icebp
xor
cld
hlt
cmp
shr
out
in
or
or
jns
mov
and
or
jle
dec
lea
in
movsb
lods
int
add
xor
pop
jl
or
inc
adc
rorb
sub
xchg
ret
cs
dec
gs
loope
pop
dec
push
jp
adc
popf
fs
and
test
add
cmp
outsl
add
add
out
out
ret
pop
xchg
add
insl
or
cwtl
push
push
push
fdivs
xchg
inc
out
xchg
push
cs
leave
add
jge
sub
in
dec
hlt
sbb
or
std
nop
nop
pop
imul
stos
das
xor
xor
inc
push
sub
sbb
jge
dec
fcoms
jns
outsl
dec
in
fsts
sub
dec
cmp
or
ss
stos
inc
pop
sahf
xor
lret
mov
push
adc
cltd
xchg
dec
cli
pop
sub
cmp
ljmp
int3
jnp
push
pushf
push
pop
sbb
les
mov
cmp
movsb
movsl
sbb
or
cmc
xchg
jno
fisttpl
pop
push
jg
push
jp
mov
inc
adc
aas
dec
movsl
leave
xlat
nop
leave
xchg
jg
lock
xlat
pop
lods
imul
mov
adc
jp
mov
or
mov
push
orl
outsl
popf
xchg
add
lcall
cmp
or
add
ret
cmp
lret
rclb
dec
mov
adc
call
clc
movsb
cmp
inc
and
mov
fwait
es
push
pop
std
popf
jno
inc
movq
sahf
inc
sub
fwait
pushf
int3
dec
inc
in
inc
push
xchg
test
add
imul
les
inc
pop
into
cmp
jbe
imul
sub
mov
adc
fwait
mul
aam
adc
test
icebp
movsb
mov
jbe
sti
enter
mov
out
sbb
dec
ljmp
fcomip
xchg
cmp
fcoms
inc
pop
test
ret
jecxz
out
test
lock
and
jmp
sub
je
sub
test
push
cmp
inc
jmp
mov
sbb
and
xor
jle
lret
adcl
add
stos
add
xor
mov
pop
push
imul
mov
pop
clc
lret
push
aas
cmp
sbb
mov
sbb
jo
add
pushf
aad
mov
mov
dec
insl
push
pop
sbb
es
stos
repnz
xchg
cmc
fdivrs
rol
sub
pop
cmpsb
inc
lcall
or
addr16
dec
mov
cmpsl
ds
stos
cmp
and
outsl
in
jp
lcall
sub
adc
jle
sbb
mov
mov
lahf
call
std
nop
adcl
lahf
cmp
jmp
rcr
mov
enter
dec
cmp
sbb
mov
pop
push
or
cmp
aam
mulb
xchg
mov
and
cmp
dec
xchg
lods
test
lahf
push
mov
jp
cmp
addr16
xor
loop
jae
inc
jo
mov
xor
pushf
push
pop
mov
mov
mov
xor
xchg
mov
or
and
dec
pop
sarl
mov
pop
loop,pn
lods
pop
jne
dec
xchg
push
dec
cmpl
int3
loop
test
and
sbb
shl
stos
sub
cmp
dec
dec
decb
cmp
mov
cltd
ja
decl
or
stos
imul
inc
daa
and
outsl
sub
stos
pop
mov
lock
jae
adc
out
sarb
adc
in
jp
pushf
insl
fidivl
sub
mov
jb
sbb
mov
insl
jne
cmp
je
mov
lock
popf
lods
js
stos
je
or
pop
jmp
inc
dec
mov
scas
pusha
pop
addr16
movsl
cmp
jno
test
inc
push
mov
cmp
inc
push
xchg
mov
cmpsb
push
push
mov
dec
movsb
hlt
cli
arpl
add
stos
ljmp
lock
mov
push
in
mov
aad
jno
idivl
aas
lods
mov
mull
pop
dec
rclb
adc
loopne
sbb
ja
cmp
sub
repz
lods
fistl
loope
scas
nop
sub
push
test
lods
xor
mov
pop
aad
jmp
les
test
mov
pop
popf
mov
int3
fwait
pusha
leave
js
mov
xor
cmc
xchg
subl
xor
lds
mov
lcall
cli
scas
pop
ret
pop
push
sti
loop
sbb
xor
or
sub
dec
jns
ss
inc
adc
ret
cmp
mov
cmp
call
add
cwtl
gs
adc
jle
aad
pushf
int
lcall
add
test
int
fst
aaa
jge
sahf
movsl
sahf
lods
adc
cmpsb
ja
call
loop
fucomi
fiadds
adc
xor
adc
in
ret
fnstenv
or
call
jae
sub
mov
lret
shrb
jne
or
rorb
sub
frstor
iret
pushf
out
push
or
repz
jae
and
imul
sahf
std
fcmovu
cmpsb
cmc
sbbb
dec
push
jle
mov
xchg
gs
and
and
inc
lcall
lea
adc
dec
mov
sub
push
std
adc
xor
pushf
xchg
mov
mov
xor
xchg
aad
mov
popa
inc
imul
sbb
aaa
pop
sbbb
push
fbstp
mov
inc
or
out
scas
sarl
incl
dec
rcrl
iret
cltd
xchg
das
scas
scas
subl
add
sbbb
dec
lret
add
fisttps
adc
lods
fnstcw
sarb
loopne
fwait
xchg
mov
sub
es
xorl
sti
arpl
push
push
cmp
hlt
xchg
ret
divb
call
dec
iret
ss
fldl
pop
jecxz
leave
roll
mov
or
dec
bnd
mov
cltd
test
jbe
mov
in
xlat
jp
sub
shlb
and
pop
ret
and
pushf
push
cltd
mov
out
scas
clc
xchg
gs
ret
nop
xchg
add
sub
ja
cs
sbb
in
rorl
repnz
pusha
mov
inc
mov
or
jns
xchg
mov
jbe
pop
dec
lea
hlt
cmp
or
movsl
fiaddl
loop
mov
stos
jmp
xchg
xchg
out
or
mov
mov
dec
dec
std
iret
and
sub
pusha
mov
xchg
mov
xchg
ss
sahf
hlt
in
outsl
push
push
scas
jp
out
loop
aas
cmc
dec
pop
ljmp
jl
xor
mov
scas
jecxz
add
je
add
jl
loope
aaa
or
repz
inc
add
adc
cmp
ss
or
and
sbb
rcr
or
into
mov
inc
xchg
je
pop
fistpl
dec
mov
fs
hlt
loopne
mov
jecxz
xchg
fistl
mov
rol
pop
cwtl
popa
lret
rcrl
ja
mov
xlat
cld
clc
fcoml
mov
add
leave
lret
cs
hlt
pushf
loop
mov
sub
mov
mov
test
sbb
enter
movsb
xchg
int3
stos
dec
add
aam
pop
movsb
lods
outsl
xor
jnp
xor
out
or
fidivs
sub
fidivl
xor
pushf
fcoms
pop
jo
test
and
sbb
or
clc
loope
dec
std
repnz
or
fistps
or
pop
fwait
jne
jo
sub
push
push
push
xchg
jns
sbb
push
cmp
mov
xchg
xchg
loop
xchg
pop
mov
cli
xor
sbb
adc
mov
jne
int
push
mov
shl
mov
pop
movsl
xchg
pop
sti
dec
push
sti
inc
lcall
js
xor
xchg
xchg
shlb
xor
mov
xor
in
jb
jmp
loope
xor
push
in
jmp
push
inc
xor
dec
in
add
and
pop
outsl
jbe
fldt
xor
cld
fwait
jmp
imul
mov
cmp
js
push
pop
and
movsb
push
adc
test
out
dec
cmpsb
lods
xchg
lods
mov
pop
jp
pop
scas
xchg
adc
jns
or
in
mov
testb
push
xchg
push
fwait
lcall
mov
jbe
test
fstpl
and
cli
repnz
mov
xlat
ja
test
xor
repz
out
mov
fcoml
xor
imul
jb
test
testb
stos
cmp
mov
xchg
xchg
inc
cvtps2pd
mov
mull
mov
xor
cwtl
cmc
xchg
hlt
cmp
or
mov
call
movsb
mov
lock
nop
nop
fldl
sbb
xchg
std
jo
cmpl
xor
fmull
push
movsl
aaa
xor
inc
cld
cmp
insl
incb
das
sahf
xlat
xchg
sub
xor
mov
repnz
lahf
xlat
lds
sbb
in
adcl
jmp
jl
mov
into
jmp
inc
mov
sbb
bound
test
fcmovne
jl,pn
xor
imul
imul
jns
cmp
xchg
scas
outsb
popa
mov
sub
sti
pop
test
and
imulb
dec
xchg
pushf
and
fstps
cwtl
mov
mov
js
xorb
jae
sub
push
xor
loope
loopne
movsl
pushl
push
stos
cmpsb
inc
leave
repnz
xchg
std
pusha
push
sub
mov
arpl
xchg
imul
sub
jae
xor
mov
aaa
inc
mov
adc
dec
push
loopne
cs
addb
add
fiadds
mov
icebp
pop
fsubrl
scas
jno
cmp
inc
adc
cmp
xchg
push
mov
les
sbb
push
inc
inc
and
push
fdivl
mov
inc
sbb
mov
or
lea
and
inc
pusha
popa
pop
or
aas
lret
lahf
mov
imul
std
adc
icebp
push
push
std
scas
adc
repz
push
pop
aam
mov
test
mov
dec
insl
push
movl
fnstcw
sti
loopne
cmpb
jns
popf
mov
pop
rcll
movsb
dec
push
js
fnstenv
out
mov
adc
push
out
push
dec
cwtl
lea
test
push
in
xor
jg
mov
adc
jbe
and
mov
int3
pusha
sub
nop
push
xor
jge
imul
fwait
pusha
mov
push
hlt
pushf
movsl
push
pushf
cmpsb
clc
std
fstl
repnz
pop
mov
pop
jp
pusha
movsl
in
hlt
push
jle
mov
push
adc
mov
inc
cmc
lds
pop
fincstp
xrelease
les
mov
sub
xchg
decb
pop
lods
jmp
cmp
mov
xor
jl
and
leave
dec
lods
fistpl
mov
mov
insl
push
xor
insl
faddl
movsl
mov
dec
mov
mov
lods
cmp
sub
pop
lock
xchg
xchg
pop
int
imul
jg
push
pushf
inc
push
aas
fwait
pop
cmp
cld
fmuls
push
pop
push
push
std
es
test
in
shrl
xchg
mov
mov
lock
iret
pop
dec
movswl
mov
dec
lcall
js,pt
nop
popf
push
int3
push
ljmp
jecxz
mov
jno
test
cmp
or
shll
call
leave
int3
test
mov
out
mov
jmp
or
mov
test
std
xor
xor
cmp
daa
test
lahf
int3
pushf
pop
lahf
push
sarl
bound
dec
inc
jle
mov
push
mov
stc
dec
pop
inc
mov
jo
setne
push
mov
xchg
mov
pushf
fsub
adcl
mov
push
xchg
imul
lcall
mov
inc
xchg
test
inc
xor
jl
je
add
adc
mov
add
jmp
push
adc
xor
rcrb
daa
push
jle,pn
dec
jp
pushf
je
test
adc
out
arpl
mov
loop
sbb
scas
dec
iret
and
mov
int3
or
test
pop
sbb
out
leave
lret
call
lods
jno
jecxz
mov
mov
inc
pminsw
lcall
out
xchg
shll
jl
add
mov
mov
xchg
cmpb
scas
loop
pop
ljmp
xor
add
push
sarb
and
push
jns
popa
jns
jno
mov
or
fdivrs
lds
push
mov
xor
xchg
adc
and
or
mov
inc
xlat
negl
repz
pop
sub
jmp
jno
pop
cwtl
add
dec
lahf
clc
rclb
sbb
push
data16
cmp
outsl
push
shlb
cmp
xor
aad
pop
xor
jb
adc
sbb
scas
in
cmp
xchg
bound
scas
push
mov
aad
mov
data16
jo
jb
iret
push
mov
xor
cs
jge
pop
push
cltd
in
cld
cltd
test
add
call
cmp
dec
mov
lods
dec
stc
jmp
mov
mov
inc
pusha
cwtl
es
movsl
jmp
aas
outsl
push
stc
scas
stos
mov
push
xor
mov
outsl
mov
repnz
mov
lea
sbb
ret
mov
dec
jle
insl
and
jmp
and
out
inc
adc
into
sbb
push
dec
sbb
inc
add
pop
in
pop
fildll
xlat
shll
and
xchg
push
pop
es
add
lahf
add
sub
adc
ds
fld
dec
mov
ret
and
das
nop
lods
jbe
sub
addr16
movsb
or
cmpb
iret
int3
xchg
into
push
lahf
insl
stos
jno
cltd
addl
mov
mov
clc
pushf
fcmovnbe
mov
imul
loop
or
fmuls
rcll
js
push
mov
push
mov
jnp
iret
sti
inc
cmp
scas
jecxz
cmp
jns
test
cmp
mov
ftst
jle
pop
inc
scas
outsb
dec
fcmovnu
dec
mov
mov
lcall
aam
negl
scas
outsb
leave
mov
call
out
push
push
outsl
mov
cltd
sbb
mov
mov
loope
xchg
xchg
aaa
sahf
push
cld
dec
adc
mov
fildll
aaa
mov
out
mov
jno
pop
push
sti
cmp
jg
xchg
cli
xor
sbb
rorl
sub
stc
in
cmp
sbb
or
stc
andb
adc
or
fs
imul
aad
rorl
push
and
sub
rorb
pushf
lret
loopne
sti
cld
fcoms
pop
sbb
xor
sbbl
cs
fs
adc
mov
cmp
cmpsb
jmp
sbb
pop
mov
out
pop
and
fbstp
popf
mov
dec
and
or
xlat
sbb
mov
pop
inc
lcall
mov
adc
sub
fsubrl
push
nop
mov
dec
push
inc
mull
in
dec
add
push
add
sub
shll
cli
cmpsl
mov
pusha
push
roll
ja
pop
inc
sbb
ficoms
and
lret
xor
bound
xchg
mov
sbb
js
sub
lcall
lret
sbb
fwait
arpl
mov
jge
lahf
or
mov
cwtl
outsb
mov
pop
sub
repz
sub
sbb
add
icebp
mov
stos
push
lahf
movsb
sbb
xor
xchg
cld
mov
xor
xchg
lret
jg
cltd
add
mov
xchg
xchg
in
push
test
xor
mov
fistps
dec
pop
pop
imul
fimull
add
and
nop
push
push
inc
movsb
les
enter
scas
cmp
pop
out
lods
push
in
icebp
jge
test
jnp
and
fistpll
sub
mov
mov
fdivrl
ret
sub
out
cmc
mov
out
pop
mov
iret
sti
adc
cmp
adc
inc
pop
jl
mov
test
repz
mov
inc
hlt
dec
lea
test
mov
clc
xor
inc
test
pushf
push
xchg
xor
xorb
push
mov
dec
and
adc
leave
jae
sub
push
jo
mov
pop
out
pop
loopne
insl
pop
pop
adc
push
push
sbb
mov
add
fucomp
jne
popf
int3
sub
and
aad
add
fs
ljmp
pop
push
aas
adc
dec
pop
rcr
adc
mov
xchg
lret
rcrb
jg
stos
test
adc
aaa
in
mov
movsl
mov
dec
xorl
aam
push
push
mov
orb
xchg
aam
es
and
and
int3
or
sub
cmp
mov
adc
ljmp
ret
xchg
repnz
insb
or
pop
pop
das
pop
lahf
mov
sub
sbb
fistpl
pop
imul
push
mov
daa
dec
mov
and
mov
in
xchg
ret
mov
popa
in
xchg
popf
fs
adc
xchg
inc
loopne
pop
and
adc
out
subl
and
jbe
lret
pop
in
cmpsl
inc
sub
and
sub
lret
adcb
es
xor
icebp
in
adc
sbb
mov
pop
sbbb
nop
lcall
pop
adc
mov
movsb
sub
sbb
loopne
or
movsb
jb
fwait
cmc
in
int
xchg
or
pop
mov
and
pand
sbb
and
fwait
lret
pop
adc
xor
xchg
sbb
rclb
or
and
mov
sbbb
pop
jge
mov
movsb
repz
or
xchg
lret
mov
outsl
scas
add
addr16
sub
add
in
add
ret
and
jp
pushf
std
dec
mov
jns
int
sub
mov
in
inc
insb
test
rcr
pushf
adc
repnz
xor
cmpl
xlat
mov
jbe
jb
imulb
test
mov
or
mov
sbb
push
push
adc
int
pop
test
shll
aam
jne
and
punpckhbw
aaa
mov
daa
adc
mov
frstor
insb
loop
pop
ror
mov
scas
cmp
sbb
mov
jecxz
movsb
das
and
out
mov
push
mov
or
jmpw
lcall
call
push
inc
mov
scas
xchg
clc
mov
xor
push
cli
mov
jae
outsl
sub
or
lret
loope
xor
leave
lcall
mov
ret
ret
leave
pop
addl
jb
push
jg
mov
out
cmp
cli
jns
adc
cmpb
sti
arpl
pop
scas
sub
cltd
cmp
addr16
fdivrs
mov
cmpsb
and
xlat
movsb
adc
dec
aaa
push
xor
mov
out
jmp
repnz
pop
test
pop
rolb
sahf
lock
push
mov
inc
popf
and
movsl
fwait
sbb
cmp
imul
movsl
jne
cltd
jb
clc
pop
jmp
rcrl
pop
dec
stos
jmp
mov
adc
pop
pusha
loope
jge
mov
gs
lret
push
lcall
push
nop
mov
push
push
fst
clc
mov
lock
mov
fwait
cmp
jno
xchg
test
rolb
fnstenv
xchg
cli
push
or
cmp
jno
add
mov
mov
ja
add
cltd
aaa
out
imul
or
sub
jo
mov
add
xchg
mov
mov
gs
jmp
mov
sti
dec
mov
jp
dec
add
sbbb
cmp
lea
dec
sub
stos
adc
fs
mov
fisubs
xchg
lret
cmp
and
in
in
repnz
cmpsw
xchg
fs
shrb
inc
mov
cs
test
or
shl
in
pop
clc
movsl
dec
sahf
movsl
dec
or
outsb
mov
jnp
stos
push
std
ds
jle
mov
xchg
ljmp
xor
mov
xor
and
addr16
push
adc
int
xchg
mov
in
in
mov
sarl
flds
push
pop
jl
xorl
out
sti
loope
adc
pop
subl
inc
stos
xchg
jp
push
fdiv
mov
es
sbb
xor
mov
or
js
jl
sub
inc
jge
jp
loopne
adc
add
push
test
aaa
in
or
cmp
aad
push
xchg
or
lcall
pop
out
xchg
and
lcall
mov
pop
ja
aad
aad
lods
mov
ret
pop
dec
insl
adc
xchg
dec
jg
xor
out
daa
sbb
jmp
sbb
sbb
inc
aad
mov
mov
lcall
ljmp
faddl
or
xchg
jae
inc
repz
jg
mov
or
out
cmp
add
mov
pop
xchg
mov
and
gs
int
rclb
jo
push
dec
gs
stc
xor
testl
mov
push
sbb
decl
je
rcl
mov
adc
fstps
dec
dec
pop
cli
sbb
jnp
or
daa
test
sub
ss
pop
dec
js
pop
cmp
pusha
bound
arpl
es
or
insl
lea
in
in
ret
fimuls
or
out
inc
cmpsl
sbbb
and
dec
sti
inc
fistpll
es
cmp
jmp
pop
stos
pop
scas
push
data16
into
push
in
fsubrs
lret
inc
dec
add
and
ja
dec
mov
stc
pusha
ljmp
dec
out
out
push
jb
add
pop
jno
pop
mov
out
sahf
jns
pop
out
pop
and
popf
mov
dec
pop
lahf
lods
xchg
mov
jbe
jge
scas
pop
mov
ljmp
incl
xchg
xchg
mov
into
dec
lods
popa
dec
mov
sbbb
dec
adc
adc
adc
dec
or
sbb
shll
fmull
lret
nop
shrl
mov
cmc
adc
xchg
ljmp
dec
shl
lret
daa
mov
or
jne
xor
outsl
outsl
xor
imul
jbe
lahf
jns
jno
outsl
jnp
cmpsl
aad
test
pop
sbb
mov
outsl
mov
push
pushf
sub
arpl
jbe
fwait
cmp
cmp
lea
push
dec
xor
mov
pushl
repnz
cmp
ror
fs
mov
std
std
roll
pop
fsubrl
jl
cs
xor
fisttps
and
mov
orb
testl
sbb
scas
or
out
ret
inc
dec
adc
imul
dec
fucomp
fucomp
and
inc
xchg
mov
mov
mov
imul
loop
lock
out
call
ret
xor
imul
xchg
add
jbe
or
dec
clc
jle
sbb
mov
push
cs
jmp
movsb
add
mov
sub
inc
stos
inc
pushf
adc
inc
cmp
stc
jns
cmp
jne
test
popa
mov
add
xchg
popa
inc
cmp
mov
notl
insb
clc
fadds
sub
decb
neg
in
cld
jg
add
shll
negl
xor
push
adc
lret
aas
jno
xchg
fldenv
sub
lods
nop
rclb
cmp
out
or
pop
stos
inc
inc
mov
sbb
pusha
stos
jae,pt
pushf
sahf
into
jmp
and
lret
cmpb
repz
jl
int
mov
mov
ljmpw
and
cli
mov
dec
imul
repnz
sbb
pop
fwait
outsb
pushf
xor
addb
js
adc
sahf
add
call
gs
jge
fwait
or
pop
push
or
adc
mov
cmp
push
mov
outsl
popf
mov
cs
dec
lds
dec
pop
jns
and
mov
test
fcomps
jp
mov
add
ret
je
adc
xor
or
push
pop
and
lods
adc
jae
mov
in
push
mov
inc
dec
je
xor
addr16
inc
ret
sub
sbb
adc
and
sub
ljmp
dec
inc
addb
sbb
decb
fisttpl
inc
xchg
mov
lea
push
push
pusha
pop
jo
out
jp
gs
sub
mov
mov
call
mov
jg
mov
sbb
xor
leave
mov
sub
xlat
movsb
xchg
fildl
in
cmp
cwtl
lock
adc
mov
mov
fnstenv
mov
jae
xor
cmpl
dec
imulb
shll
insb
lods
stos
jp
push
bound
xchg
xlat
leave
cld
cs
shll
push
push
mov
cli
xor
cmp
add
mov
or
sub
cltd
dec
or
leave
dec
inc
or
xchg
mov
mov
jecxz
mov
cmp
or
lahf
stc
mov
cmp
jmp
test
jbe
test
mov
mov
jb
loopne
mov
sub
push
mov
pop
in
xlat
pop
cltd
push
push
jae
or
sbb
add
and
mov
bound
jmp
aaa
out
shr
add
or
movsl
out
push
push
jge
jns
jle
test
stc
imul
cli
std
dec
push
inc
sub
rorl
mov
leave
pop
cld
jb
xor
sti
xchg
jne
mov
jg
pop
fxch
mov
pushf
rolb
fcmovb
xorb
sbb
dec
mov
or
mov
pop
leave
dec
mov
call
xchg
cmp
jge
push
jns
mov
out
frstpm(287
dec
xchg
bound
push
adc
call
jge
lods
cmp
mov
push
xor
int
pop
outsb
fstps
or
xor
xor
fdivl
pop
loop
inc
es
add
call
xor
cmp
dec
test
sub
divl
movsb
sti
jl
push
cmp
fsubrl
inc
jnp
add
and
lock
cmp
push
ret
aaa
gs
mov
xor
push
pop
push
dec
leave
loope
aad
sbb
jne
pushf
in
lahf
mov
jecxz
icebp
jne
imul
xchg
out
jecxz
pop
cld
dec
xchg
adc
push
pop
pop
add
mov
cmpsb
sub
dec
inc
push
lea
stc
inc
xchg
inc
clc
ds
mov
inc
hlt
mov
mov
std
sahf
cmp
lods
popf
push
mov
mov
and
sbb
sbb
fcomps
lea
jbe
lret
xchg
add
std
ds
jle
push
or
js
and
hlt
jae
call
adcb
jo
sub
ja
pusha
les
lea
adc
sbb
push
add
out
sbb
pop
sbb
push
xchg
add
adc
or
ljmp
mov
push
xchg
into
in
mov
mov
fistpll
and
js
pop
adc
jecxz
xchg
mov
and
sub
jns
mov
inc
les
add
fnstsw
sub
stos
aad
imul
dec
mov
jns
dec
inc
js
aas
mov
jb
es
mov
sti
lods
enter
lods
sub
out
jns
cs
rcll
jae
cmp
out
pop
shrl
jnp
cmp
test
stos
pop
imul
and
aad
push
aas
repz
pop
aam
xchg
or
fwait
mov
fstpl
fs
negl
push
add
dec
test
xor
std
rcrb
cmp
outsb
inc
jo
call
rorl
adc
dec
mov
pop
sar
enter
jge
inc
das
dec
sub
add
adc
sahf
mov
lock
sub
shlb
jge
cmp
jnp
cmp
add
xor
loop
xor
je
mov
jns
dec
ss
add
push
dec
jmp
mov
fldcw
pop
jecxz
cltd
inc
adc
mov
push
negb
adc
or
nop
sbb
xchg
iret
aad
xchg
scas
push
je
xor
pop
xor
jg
jns
js
jae
popf
out
orl
mov
movsb
push
stos
daa
nop
mov
cmpsl
add
popa
test
adc
loopne
imul
jecxz
negl
or
mov
iret
in
add
orl
xor
stos
cmp
pop
stos
xchg
add
sahf
popf
repnz
sti
int3
inc
sbb
inc
cmp
sti
lahf
mov
fisubs
outsl
or
daa
mov
ret
add
xchg
jo
vmwrite
inc
mov
xchg
int3
test
adc
loop
fists
mov
rcll
jecxz
push
pop
inc
inc
test
pop
jecxz
push
or
call
adc
inc
fs
jno
add
sbb
sbb
ret
cmp
jge
out
aas
pop
stos
mov
pop
ljmp
sub
dec
lds
inc
mov
cmp
pop
rcrl
addl
cmc
mov
xchg
mov
enter
adc
sub
sbb
add
subb
jns
and
popf
adc
mov
mov
jle
push
cmp
fnstcw
movsb
cwtl
rol
jmp
outsb
push
xor
xchg
dec
sbb
fucomp
in
mov
add
icebp
cmp
mov
test
out
pop
imul
sbbl
push
adc
pop
cmpl
leavew
dec
or
test
je
out
subb
es
dec
in
cs
jo
inc
rcll
jno
jmp
repz
inc
stos
push
loop
jmp
push
movsb
sbb
pop
mov
or
mov
xorl
cli
sbb
cmp
sbb
and
mov
imul
xchg
mov
inc
stc
pop
pushl
mov
test
push
in
fwait
in
jns
and
mov
nop
jae
mov
push
push
jp
sti
repnz
jae
adc
fidivl
adc
inc
xchg
and
jg
cmpl
inc
shlb
ds
adc
mov
je
mov
shrl
cltd
movsb
aam
in
mov
cmp
and
and
cmp
add
xor
inc
jp
int3
in
adc
aad
jb
xlat
pop
xor
bound
jno
add
daa
cmp
push
addr16
cmp
or
out
adcb
push
cmp
mov
sbb
outsl
push
js
pushf
pusha
dec
das
xchg
jbe
hlt
jb
adc
mulb
test
lock
adc
pop
push
adc
xlat
loop
mov
push
fcoml
pop
push
subl
jo
mov
int3
mov
mov
inc
xor
es
inc
adc
pop
icebp
sub
inc
mov
sub
mov
out
outsb
sar
push
cld
shrl
and
push
jb
test
push
mov
aas
call
in
xchg
add
pushf
fcomps
xchg
sbb
bound
icebp
and
pusha
inc
cli
push
aaa
fs
movsb
arpl
xchg
sbb
jl
cmpsb
in
jmp
lret
call
xchg
sbb
es
jnp
and
cmp
out
mov
sbb
dec
pop
adc
xlat
xchg
out
lea
xorl
stos
ret
adc
mov
cmp
popf
xchg
xchg
dec
jl
and
ret
xor
call
jmp
ret
outsb
adc
cs
aas
int3
test
int3
cld
xchg
mov
mov
cmpsl
test
inc
lahf
daa
iret
cmp
adc
xor
and
cli
adc
test
jge
cltd
mov
sti
inc
and
lock
leave
mov
jo
fs
ljmp
xchg
and
mov
sbb
shll
mov
les
int3
xchg
mov
jne
cmp
jnp
pushf
cltd
mov
sub
sub
sub
jns
cltd
mov
js
mov
aaa
stos
test
sbbb
rcrl
pop
push
popa
mov
xor
movsl
inc
lock
inc
inc
pushf
jae
pop
cli
ret
call
jnp
std
test
or
xchg
inc
test
sub
lcall
cmp
mov
dec
push
xor
dec
iret
stos
dec
shr
xlat
lods
mov
or
in
test
sub
not
pop
push
and
adc
xor
sub
and
sbb
hlt
sub
mov
int3
sahf
cltd
push
testb
or
ret
push
mov
add
outsb
inc
lret
mov
shrl
fwait
sbb
mov
les
addr16
or
sbb
xchg
das
out
jne
push
and
mov
lahf
xchg
jge
fisttpll
subb
jb
rcrb
push
jp
cmp
sub
mov
cwtl
repz
js
xchg
ja
repnz
or
std
or
add
mov
jo
testl
stc
mov
add
nop
fwait
gs
je
mov
lret
mov
or
push
stc
fisubrs
push
sub
mov
fcoms
iret
push
addb
ljmp
jp
jne
test
in
jns
push
cld
adc
popa
jne
xor
negb
xchg
outsb
mov
push
outsl
or
ret
mov
out
jo
js
stos
adcb
fdivl
data16
pushf
jp
mov
les
lcall
jbe
mov
dec
push
mov
sti
jle
mov
sbb
push
mov
jae
mov
xor
xchg
sub
in
mov
mov
cmp
inc
push
xchg
ja
sahf
cli
or
jnp
dec
add
xor
mov
xor
cmp
push
xlat
adc
xor
and
mov
adc
fdivrl
mov
xchg
lret
repnz
movlhps
sbb
and
pop
mov
mov
popa
mov
stos
mov
aad
pop
mov
add
jmp
add
add
bound
mov
and
dec
xchg
jo
add
stc
outsb
push
add
fildll
adcb
mov
sub
or
sbb
cmc
call
popa
add
shlb
push
addr16
push
inc
mov
stos
scas
out
pusha
mul
shr
pop
jg
cld
mov
push
xchg
xchg
ret
sub
test
hlt
mov
cmp
insb
clc
fisubrs
dec
notb
xchg
or
xchg
lcall
loope
lret
lds
out
inc
mov
cmp
loopne
scas
lcall
out
scas
jo
in
fstpt
pop
mov
and
in
inc
mov
repnz
imul
rcrb
pushf
add
imul
jg
xor
ret
movsl
add
insl
dec
in
out
lret
mov
and
push
pop
mov
push
out
lret
lret
insb
jecxz
push
cmp
adc
adc
and
push
test
jp
adc
gs
pop
pop
mov
sti
inc
stos
or
stc
mov
or
loopne
adc
in
in
sbb
cmp
mov
pop
movsb
fstp
push
sbbb
add
stc
pop
inc
sahf
mov
dec
test
mov
mov
push
xor
jl
xchg
fucomip
fstpt
les
push
adc
call
loopne
pop
in
xor
jae
arpl
sbb
mov
sbb
mov
jno
sub
mov
inc
dec
out
fadd
and
jge
mov
inc
repnz
arpl
loop
mov
fistpl
and
roll
adc
shll
stos
lds
mov
xor
cltd
mov
add
into
or
nop
call
cmp
and
jb
fisttpll
or
mov
lret
cmpsb
mov
jmp
mov
notl
inc
in
inc
out
xor
lods
out
adc
push
int3
jmp
mov
std
imul
and
movsl
cmpsl
dec
push
inc
in
mov
and
jp
mov
out
adc
repz
bound
scas
and
xor
xor
xor
popa
bound
xlat
test
dec
push
mov
push
sbb
sub
pop
stos
add
inc
cmp
outsl
pushw
out
mov
cmc
out
or
pop
not
sub
push
lds
dec
sbb
xchg
hlt
shr
shrb
pop
add
xchg
clc
inc
jge
and
push
mov
mov
sub
insb
dec
out
or
push
lods
insb
inc
mov
js
lods
pop
ror
leave
in
lock
popf
and
es
mov
add
scas
mov
mov
pop
mov
gs
dec
leave
outsb
pop
or
and
jg
mov
push
mov
addb
push
mov
inc
das
sub
fmull
jmp
jnp
sub
dec
cwtl
ror
cmp
dec
and
mov
cmp
pop
xor
imul
ret
add
mov
aaa
dec
pushf
ja
add
push
mov
xchg
push
shrb
dec
in
lea
popf
ss
pop
je
xor
xchg
dec
andl
mov
lock
daa
insb
push
in
mov
mov
xor
xchg
cs
dec
test
mov
in
fsubl
xlat
cmp
jp
and
jmp
xchg
sub
scas
jnp
test
xchg
enter
fidivrs
adc
xchg
xchg
inc
and
lea
add
xlat
stos
push
and
add
xchg
repz
and
inc
sub
loope
ljmp
mov
flds
pop
push
repnz
cmp
in
xor
jp
or
sbb
sbb
pop
and
cltd
lds
aas
push
pop
pop
jns
push
dec
sub
pop
aad
stos
dec
pop
sbb
and
cltd
lods
adc
push
xchg
sbb
jmp
in
imul
stos
dec
fbstp
jp
lret
adc
push
inc
jg
pop
test
ret
pop
fnstsw
insl
sub
or
daa
xchg
loop
roll
sbb
sahf
adc
shr
or
cmp
imul
loope
xchg
or
xor
bound
into
pushf
mov
or
add
cmc
pop
je
lret
mov
xchg
pop
leave
mov
cs
sub
push
mov
cmc
jecxz
adc
pushf
push
adc
negb
sub
lds
adc
call
out
xchg
stc
pushf
push
leave
lods
pop
cmpxchg
sbb
and
aas
mov
mull
pop
sbb
repz
add
aam
push
out
ss
loop
cli
jnp
pop
and
outsl
cli
jbe
jecxz
lret
adc
int
cld
fists
leave
push
aas
repz
aaa
jbe
rcll
lds
outsl
xor
sbb
dec
lahf
cmp
es
cmp
add
cmp
test
in
cltd
scas
aaa
repnz
lret
add
pop
dec
fcoms
pop
lea
push
hlt
nop
xlat
out
or
outsb
add
xchg
xor
fldt
call
and
or
pop
clc
aaa
xchg
rclb
lret
faddl
call
lock
pop
sub
mov
sub
jno
push
out
fs
fs
adc
adc
sbb
adc
pop
fbstp
xorb
inc
xor
imul
inc
lcall
push
clc
pop
inc
cmp
dec
mov
pushf
daa
lock
loop
mov
ja
mov
roll
test
scas
jl
jge
sbb
push
insl
in
jg
mov
shl
adc
addr16
inc
pop
aas
adc
xchg
lock
test
popa
push
xor
push
jne
push
push
xor
pop
or
pop
mov
fistl
push
xor
sub
scas
dec
jle
ja
das
push
push
mov
xor
push
and
dec
xlat
stos
cmpsb
push
das
notl
jge
or
imul
loop
sub
or
movsb
sub
das
xor
jmp
data16
cmp
xchg
idiv
push
scas
addr16
shlb
push
test
inc
popa
ds
inc
adc
loopne
jge
xchg
aam
mov
xchg
push
mov
xchg
xor
pop
popf
inc
or
xlat
sbb
adc
pop
je
fs
dec
insb
ficoml
addr16
loope
sti
xor
add
imul
jbe
sbb
mov
push
fdivrl
stc
mov
add
stos
jge
jl
add
pop
mov
jno
adcl
sbb
sbb
sbb
rcll
or
int
mov
stos
xchg
into
cmp
adc
sahf
push
or
std
stos
iret
mov
mov
mov
sahf
cmpsl
mov
push
mov
rolb
inc
dec
inc
inc
scas
cmpsl
pop
cmpsl
mov
shll
mov
or
cmc
mov
mov
add
xchg
sbb
mov
loop
mov
sbb
xchg
push
int
inc
adc
pavgb
into
inc
faddl
dec
pop
fbstp
mov
dec
pushf
cmpsl
fsubl
inc
iret
fisubrs
push
rcrl
stos
cs
dec
xchg
nop
faddp
push
jmp
in
call
nop
js
fwait
loope
add
je
xchg
mov
jecxz
outsb
je
mov
mull
inc
iret
sbb
xor
out
lcall
sbb
xchg
subb
push
sbb
pop
push
cltd
cmp
ret
outsl
gs
or
js
outsl
push
daa
or
xchg
movsb
mov
mov
and
nopl
sbb
push
xor
stc
movsl
xchg
int
insb
fwait
dec
mov
cmpsl
mov
mov
int3
push
adc
test
dec
dec
mov
loopne
jo
sub
sbb
xchg
mull
pop
stos
scas
popa
jb
dec
jg
cltd
xorb
push
iret
in
xchg
jno
ret
out
sub
and
push
stos
inc
das
iret
lods
outsb
jbe
adcb
into
or
sahf
jae
jecxz
pop
in
push
adc
adc
cmp
icebp
movsl
test
push
and
int3
dec
daa
or
add
lahf
pop
push
imul
decb
push
daa
rcrb
mov
pop
cmpsl
mov
add
ret
shrl
aas
xchg
movsl
sub
and
push
pop
lahf
mov
add
arpl
inc
fmull
inc
test
loope
mov
and
cmp
mov
mov
xchg
push
or
sub
xor
jg
sub
ret
mov
lret
cmp
and
in
jp
pop
sub
cs
xchg
pushf
outsl
nop
or
jns
push
mov
scas
sbb
fstps
ds
arpl
xchg
push
mov
push
add
cld
out
xchg
scas
sbb
jmp
mov
inc
in
cs
jns
enter
jne
shrl
pop
inc
jecxz
sbb
popa
arpl
xor
insb
pop
jle
pop
icebp
adc
adc
loopne
xor
adc
and
cmp
push
mov
inc
lock
xchg
sbb
jno
adc
js
stc
enter
cmpsl
inc
fs
add
stc
mov
adc
or
outsb
in
jne
xchg
sbb
mov
or
sbb
shlb
pop
adc
inc
add
pop
xor
inc
lret
shll
lods
sbb
push
ret
xchg
out
mov
hlt
sarb
cmp
ljmp
addr16
and
add
pop
xchg
cmp
mov
sub
rorb
jnp
fildll
lret
dec
inc
sub
add
dec
mov
stc
loopne
andb
adc
dec
bound
sub
int3
or
xorl
dec
pop
xor
mov
inc
xor
dec
imul
and
mov
adc
mov
cmc
out
stos
out
std
imul
mov
out
mov
ja
dec
hlt
xchg
cmpsb
js
test
mov
int3
add
cmp
cli
pop
into
popa
sub
jp
xchg
movsl
inc
push
test
pop
test
mov
fisubrl
mov
pop
fisubl
ret
dec
xor
rcll
cli
mov
pop
xor
data16
outsl
daa
scas
arpl
ret
in
mov
insb
pop
inc
fsubr
outsl
insb
movsb
mov
repnz
mov
push
xchg
push
sbbb
test
jmp
cmpsb
xor
inc
aas
fistl
test
imul
xchg
xor
and
int
loop
imul
sbb
popf
push
stos
ficoms
cmp
sbb
in
icebp
ror
jnp
jmp
and
and
shll
lret
daa
and
or
push
xchg
jle
es
and
outsb
xchg
pop
xor
out
add
adc
mov
out
insb
adc
fs
cmp
aaa
inc
mov
push
cmpsb
push
lds
lods
or
jmp
aaa
mov
dec
in
lret
loopne
xchg
rolb
inc
dec
jmp
inc
lods
sbb
add
mov
mov
xor
movl
aaa
xor
or
sbb
mov
clc
sbb
pop
std
lods
jns
repnz
or
rorl
ja
insb
fsubp
cmp
cmc
movsb
adc
hlt
pop
cli
std
xchg
and
arpl
mov
aam
scas
push
outsl
jns,pt
sub
pop
out
lahf
pop
std
mov
push
inc
je
push
or
mov
dec
repnz
rcrb
addr16
sahf
insl
imul
mov
sti
in
sti
sbb
sbb
adc
sbb
jecxz
inc
mov
orb
call
and
mov
jns
insb
call
pop
pushf
mov
mov
pop
stc
xchg
mov
push
mov
hlt
jns
cli
ja
add
and
ret
or
in
shll
xor
add
cmp
or
dec
movsl
push
enter
push
add
mulb
pop
mov
pop
add
out
or
icebp
cld
fdivrl
sbb
cmpsb
fcmovb
cs
test
clc
xor
lock
pop
icebp
pop
jno
sahf
add
sub
xor
pop
lret
sub
subl
inc
mov
lock
jns
enter
sub
test
scas
xchg
mov
lahf
rcr
xchg
insb
dec
sbb
rol
sub
icebp
add
mov
mov
lds
pop
xor
xor
mov
push
dec
mov
insb
rcrb
mov
adc
aaa
ja
call
or
div
int
aad
push
push
les
ret
hlt
mov
lods
or
gs
test
xchg
xor
frstor
xorb
daa
pop
fiaddl
push
push
sar
or
popa
shrl
add
inc
rcr
inc
enter
fsubp
add
ret
push
cmpsl
xchg
in
xor
xchg
mov
jl
or
sbb
pop
push
fldenv
sar
in
push
fs
in
push
mov
xor
int
ds
idivl
mov
shlb
fisttpl
mov
xchg
enter
xor
loopne
xor
sub
push
push
and
int3
movl
in
and
test
outsl
inc
into
mov
jg
jno
and
out
hlt
sub
mov
shll
int3
push
dec
les
bound
push
in
jo
and
xchg
cs
xchg
dec
mov
inc
es
jne
xchg
dec
push
imul
aaa
sub
xor
mov
mov
dec
rcl
pushf
test
cltd
icebp
adcb
popa
scas
mov
ret
fisttps
push
in
mov
mov
rcl
or
jle
pop
xchg
aas
mov
jl
stos
mov
push
imul
xchg
mov
pusha
push
lds
inc
mov
lret
push
lret
and
icebp
in
ss
pop
in
pushf
jbe
mov
cmp
insl
inc
fcmovnb
xor
mov
inc
stc
ljmp
test
mov
xchg
mov
movsl
shrb
loope
mov
sbb
fsts
jb
movsb
jecxz
repz
movsb
cmpl
mov
and
sub
jae
fwait
lcall
out
mov
addr16
jo
out
ja
xor
ja
sahf
jns
push
in
out
mov
sub
mov
out
pop
sbb
and
scas
lods
adc
lcall
cmpsb
aas
sbb
jge
test
out
add
arpl
icebp
pop
xor
loopne
sbb
xor
pop
mov
jmp
out
ret
mov
mov
movsb
inc
imul
add
and
pop
xchg
outsb
flds
in
sbb
rcll
ret
rcl
in
outsl
fwait
xchg
cli
lods
popf
lret
or
mov
inc
fistps
jge
lret
mov
cmc
xor
scas
scas
enter
jl
adc
cmp
jg
outsl
adc
pop
and
xchg
out
xchg
mov
repnz
enter
jmp
imul
adc
and
and
adc
sub
cmp
mul
sub
sbb
dec
mov
cmpsb
loopne
jecxz
sbb
mov
sub
pop
pop
inc
int3
shll
repnz
fucom
arpl
inc
mov
inc
loop
mov
inc
popa
xchg
ret
xchg
gs
in
jecxz
sub
adc
testb
mov
inc
sbb
and
out
xor
jle
jb
nop
fwait
jae
mov
scas
dec
mov
xor
push
fsubrl
jb
jecxz
outsl
mov
xor
or
movsb
fs
or
jno
and
mov
shlb
lret
addr16
sub
sbb
out
bound
std
push
xchg
je
sub
pop
inc
lahf
inc
add
dec
stos
mov
into
sub
movsl
add
xchg
inc
leave
add
outsb
ja
sbb
xor
jno
stc
dec
cmpsl
cmpb
push
das
ljmp
pop
pop
fsubrs
out
mov
lahf
push
hlt
out
mov
mov
testl
push
xor
out
adc
jo
test
mov
or
in
rep
sti
aad
mov
jge
xor
inc
icebp
ret
sub
add
in
mov
xchg
sub
je
push
rcll
mov
shlb
xor
add
or
cmp
dec
adc
pusha
dec
scas
dec
aad
jecxz
pop
popf
cld
adc
mov
adc
call
sbb
push
or
test
rolb
mov
xor
jne
sub
sbb
aaa
jnp
mov
stc
xor
testl
maxps
getsec
out
or
sbb
push
pop
mov
ljmp
mov
out
push
icebp
rcrl
mov
std
ret
sbb
test
inc
clc
xchg
popa
stos
adc
push
mov
ss
cmp
pop
lock
adc
xchg
cltd
add
push
sub
mov
push
add
inc
pop
adc
mov
xchg
les
jge
mov
add
pop
sub
jl
mov
jnp
sub
jecxz
mov
arpl
daa
fldcw
int3
and
imulb
and
adc
pop
ss
cmp
adc
pop
cmp
pop
push
lods
xchg
sub
lahf
pop
push
xor
jmp
ror
add
push
fprem
pop
ret
or
ds
jne
jns
and
inc
or
mov
adc
jg
sbb
mov
vunpckhpd
nop
imul
mov
lret
xchg
fwait
and
clc
iret
xchg
out
xorl
xlat
fs
or
outsl
loope
loop
loopne
imul
jl
sub
push
jp
aam
push
stos
ret
jmp
xchg
inc
out
call
or
fistl
mov
data16
xor
lds
or
outsb
mov
addb
mov
xor
and
js
mov
test
push
xor
cmpb
mov
and
lock
fsubr
jmp
inc
rolb
adc
xor
push
out
mov
push
mov
push
add
ljmp
aad
data16
xor
adc
mov
mov
test
jecxz
in
pop
dec
xchg
cs
xor
push
jmp
xor
jno
shrb
into
std
cmp
fcmovu
mov
arpl
out
insl
repz
sub
call
and
mov
sub
loope
out
adc
in
xchg
jmp
mov
xchg
sbb
xor
inc
xor
mov
cmc
or
add
push
cmp
pusha
mov
pop
ss
xchg
adc
lock
aad
divl
jns
cwtl
ret
adc
aad
adc
ja
jle
mov
repz
test
lcall
push
mov
or
xor
mov
jo
pop
das
in
sub
push
movsl
push
into
push
lcall
dec
jbe
inc
xchg
call
push
sbb
imul
cli
push
sbb
xchg
les
loop
xchg
cwtl
mov
pushf
in
mov
std
out
xchg
xor
cmp
push
test
sbb
or
adc
hlt
out
cmpsw
add
mov
push
jae
cmp
adc
daa
mov
dec
dec
ds
mov
sbb
inc
je
push
mov
fadds
and
sub
or
jae
add
xchg
jne
dec
in
fcmovnb
inc
pop
and
lea
lods
mov
shl
rcrb
pop
sbbb
mov
aas
call
pop
out
cld
es
sub
jg
jle
je
popf
dec
movsl
mov
mov
push
cmpsl
pop
cltd
enter
fstpl
lods
movsb
rorb
jp
inc
rolb
lock
fwait
add
fldt
pop
rcr
jo
xchg
ret
xchg
ja
fmull
push
push
sarb
sbb
addr16
sbbl
out
gs
jmp
scas
pop
inc
dec
add
stos
dec
push
pcmpgtw
jo
push
js
jns
xchg
aam
es
dec
les
gs
add
or
jecxz
sub
mov
add
leave
or
notl
ret
lods
or
mov
sbbb
dec
push
lods
xchg
loope
cmp
and
or
sarl
jmp
mov
loopne
js
inc
push
mov
jns
pxor
rcrl
rdtsc
imul
loope
push
fs
frstor
pop
mov
and
xchg
xchg
stos
dec
test
lret
dec
or
mov
mov
js
pushf
cmpsl
leave
call
add
rcll
pusha
xchg
ja
adcb
mov
inc
cli
or
or
push
sbb
int3
cmpsl
stos
mov
mov
pop
dec
xchg
pop
fs
adc
push
call
dec
cltd
mov
roll
cmp
sbb
cli
inc
loope
ljmp
cli
mov
adc
test
mov
jnp
or
inc
test
test
pop
inc
inc
pushf
nopl
mov
repz
xchg
test
aas
cmp
add
sub
push
cmp
test
xor
test
fdivs
sarl
dec
clc
inc
mov
shll
and
mov
in
mov
fimull
inc
mov
cmpsl
cmp
cmp
adc
jmp
sub
cmp
and
push
inc
das
pusha
push
sub
test
adc
dec
cli
pushf
mov
arpl
sbb
pop
pop
inc
aad
pop
negl
xor
adc
stc
lods
sub
andb
sarb
add
pop
sti
pop
test
dec
xor
call
and
mov
inc
xchg
add
pop
fxch
sub
jecxz
xchg
mov
imul
sub
mov
fistpl
xor
lret
xchg
addr16
mov
iret
inc
sbb
push
std
dec
and
nop
mov
mov
pop
repz
cmpsl
sbb
cltd
mov
mov
arpl
imulb
push
lds
inc
sub
lods
mov
aam
or
adc
lea
lcall
cmp
sbb
sbb
fcomip
rcrl
push
cmp
jle
inc
dec
xadd
xchg
sub
push
mov
arpl
cs
mov
mov
mov
int
pop
sub
ror
dec
xor
rorl
scas
mov
jmp
jp
ret
pop
mov
test
jp
jge
into
sbb
repz
daa
cwtl
inc
and
loop
jns
mov
pop
clc
mov
pop
and
rol
dec
sahf
mov
aaa
sub
xor
and
pop
adc
in
rorl
mov
jne
bound
sbb
mov
push
adc
mov
nop
das
jecxz
outsb
arpl
mov
sbb
arpl
popf
stos
lock
lea
push
mov
inc
pop
popf
sbbl
mov
inc
push
in
cltd
fdivr
dec
sub
icebp
int
imul
mov
push
scas
mov
sbb
call
dec
inc
js
or
pop
mov
inc
popf
adc
mov
loopne
inc
sbb
xchg
jg
js
fs
das
insb
std
ss
popf
insl
call
pop
dec
aad
lahf
imull
or
inc
in
aas
xor
add
orl
cwtl
xchg
cmpl
lret
subb
popf
xchg
icebp
jp
and
push
adc
test
aam
pop
push
out
inc
mov
andb
sub
lds
pop
xchg
js
dec
fs
sbb
cmpsb
jle
push
push
jno
ret
xor
in
mov
lret
in
jg
std
aas
pop
jecxz
addr16
cmp
xchg
dec
out
scas
add
mov
jg
call
dec
mov
inc
test
pop
xor
xorl
and
push
stos
and
jp
sub
fcompl
ficoml
jl
and
adc
jne
cmpsl
push
sbb
inc
mov
pop
into
movsb
jge
popf
add
ficompl
js
jb
xchg
cs
xchg
movsl
mov
popa
inc
mov
leave
cwtl
rorl
pop
int3
cs
sbb
mov
sti
jnp
lret
repnz
cmp
in
or
lret
xor
ss
ret
mov
or
arpl
loope
or
push
lods
inc
js
and
insb
jnp
push
lret
jmp
js
push
in
and
leave
pop
negl
data16
push
sbb
pop
dec
std
jg
rol
jge
mov
call
pop
cmp
mov
lods
adc
lea
aas
cs
daa
sbb
das
adc
mov
dec
push
mov
shll
fcomp
cmp
pop
xor
adc
mov
sbb
pop
pop
aam
mov
inc
fisubs
mov
cmp
dec
rcll
mov
das
cltd
pushl
xchg
xor
out
pusha
xchg
mov
fsubrl
dec
dec
jg
test
test
sbbb
mov
mov
hlt
mov
sub
in
mov
pop
imulb
in
mov
inc
pop
xchg
nop
fsubs
push
aam
dec
lock
sub
cmp
and
das
add
pop
incl
sbb
dec
sbb
push
int3
mov
sbb
xor
cmp
pop
mov
push
sbb
imul
add
adc
cmp
lds
out
outsb
and
sbb
orl
out
lods
sub
sahf
shlb
pop
fisubl
sbb
std
add
test
push
js
push
outsl
cmp
mov
xor
ljmp
cmp
jge
test
jecxz
and
xchg
ds
gs
cmpb
stos
mov
js
push
cmp
push
and
jl
jne
je
fnstsw
inc
ss
inc
loop
pusha
mov
enter
repz
mov
bound
test
aaa
or
push
jl
xchg
push
push
push
adcl
hlt
decl
inc
pop
and
xchg
sarb
sub
decl
cmp
push
jmp
pop
in
sub
icebp
jno
popf
roll
cli
mov
leave
mov
sbb
mov
ja
sbb
jge
jp
test
sbb
mov
or
jae
lret
xor
test
loop
out
sbb
or
jecxz
sub
and
jmp
ret
mov
xor
inc
stos
cmp
icebp
testb
shrl
sbb
scas
subb
aaa
sbb
cs
pop
inc
add
jne
call
xor
aaa
orb
push
hlt
mov
sub
dec
cs
jg
inc
mov
sahf
cld
pop
lea
pusha
add
cli
or
or
js
jmp
add
mov
pop
mov
adc
push
loopne
push
or
mov
push
cwtl
lcall
inc
add
sti
push
fidivrs
int
cld
outsl
xlat
or
dec
cmp
and
or
cmp
inc
or
leave
cmp
imul
adc
call
lock
push
or
fidivrl
pop
sub
bound
in
cli
shlb
xchg
mov
gs
test
fst
mov
ftst
jb
sbb
jmp
pop
mov
inc
mov
int
push
push
or
movsb
jo
sub
out
lods
push
push
and
lcall
xchg
lret
aad
jb
or
inc
xchg
xor
mov
push
push
cmpb
jne
hlt
dec
sub
ret
jg
loopne
lock
cmp
add
lcall
push
mov
stos
rcll
or
cmp
push
flds
xchg
pop
out
mov
adc
xchg
cld
inc
sbb
push
bound
stos
push
pop
je
pop
imul
shrb
lock
xor
int3
jb
and
pop
das
je
cmc
test
mov
pop
call
outsl
cltd
in
mov
je
push
lock
popf
data16
add
cli
std
das
jb
sub
into
inc
loopne
sbbb
mov
flds
gs
fldt
jb,pn
jl
fcmovnbe
mov
adc
addb
mov
fcomi
push
rcrb
push
out
xor
ret
test
dec
ds
loope
out
dec
hlt
dec
mov
into
add
leave
push
push
outsb
js
adc
jmp
subl
push
add
mov
shlb
xchg
jle
or
adc
dec
and
in
inc
xchg
test
xchg
cmp
jge
jmp
cld
mov
in
xchg
xchg
pop
mov
add
arpl
loopne
daa
mov
lock
pop
inc
and
sbb
and
fstl
sub
scas
or
shll
adc
inc
pop
or
into
cmc
and
jecxz
roll
out
dec
add
mov
mov
das
loop
mov
xchg
into
inc
leave
call
rclb
cmp
adc
or
ret
ret
push
push
packsswb
xchg
or
push
cmp
pop
push
cmp
rorl
std
or
out
xchg
xor
inc
arpl
test
pop
movsl
test
jnp
stos
push
push
cmp
mov
pop
and
jle
sbbl
mov
mov
cld
mov
cmpsl
cmpsb
dec
or
mov
xor
mov
push
sbb
lods
frstor
push
out
shll
das
sub
loop
enter
pop
bound
fisubrs
adc
bound
and
fisubrs
mov
or
adc
and
pop
cmp
movzbl
push
popf
mov
fidivrs
mov
xchg
fdiv
in
jl
push
mov
scas
data16
and
loopne
or
add
lret
into
repz
das
xor
mov
cmp
push
xchg
test
pop
push
mov
adc
sub
sarb
into
pop
mov
pop
aaa
fbstp
mov
mov
repnz
cmp
lods
loop
mov
insb
pushl
push
inc
jl
bound
or
jo
dec
mov
add
or
aas
sub
pop
daa
inc
push
out
push
sub
pusha
push
int3
mov
mov
out
jno
jl
cltd
mov
mov
out
mov
jns
mov
xchg
leave
cld
adc
dec
dec
in
nop
mov
push
jp
sbb
dec
jae
fsubs
or
test
lods
addr16
imul
xchg
mov
in
orl
mov
out
mov
gs
aaa
int3
xor
sbb
sub
sti
insl
aas
sbb
mov
leave
cmpsb
push
push
sbb
mov
jge
jb
lods
sub
lahf
test
jae
sbb
cmp
leave
outsl
xor
imul
jp
lock
adc
xor
fisubrs
pop
in
adc
loope
ss
mov
shll
dec
mov
es
sbb
ja
push
mov
notl
dec
mov
imul
gs
and
cmp
insb
icebp
aam
into
cmp
jecxz
stos
int3
cli
push
dec
mov
cmp
mov
iret
rcrl
rol
lock
xor
xchg
test
mov
lcall
jb
or
jle
sub
pop
cmp
jecxz
cmp
movsb
std
xchg
lahf
mov
xor
mov
test
test
or
mov
outsb
cli
fisttpll
xchg
fcmove
popa
mov
out
add
cli
fmull
lret
jno
add
pop
imulb
scas
xchg
jb
add
push
inc
sbb
mov
out
scas
daa
jg
xor
jge
imul
cmpsb
sbb
xchg
push
mov
or
mov
pop
push
sbbl
pop
xor
sub
stos
int
pop
mov
pop
out
jns
int
xchg
adc
scas
lods
sbb
fistpl
dec
test
xor
jno
push
inc
insl
mov
insb
sub
les
mov
cwtl
push
fdivl
or
jmp
mov
push
jno
add
icebp
mov
cli
in
xchg
dec
xchg
cmp
adc
adc
xchg
pop
test
loop
xchg
movsb
adc
dec
dec
lods
imul
dec
mul
mov
pushf
lret
jge
mov
mov
fcompl
cmp
arpl
popf
fs
sub
js
mov
push
mov
fwait
lahf
in
xor
push
enter
sbb
insb
sub
not
cmp
xchg
fstps
and
cmp
mov
dec
cmp
sahf
jge
dec
sti
or
or
stos
es
hlt
imul
std
mov
mov
or
mov
mov
fsubrl
testl
push
lret
mov
sahf
mov
cmp
pushf
xchg
or
lahf
sub
xchg
cltd
or
and
jg
ficomps
test
sbb
push
ror
loope
cli
inc
sub
cmp
or
fs
rclb
add
pop
fldl
mulb
xchg
inc
jnp
push
adc
jge
mov
pop
imul
dec
or
mov
xchg
ljmp
jl
in
in
lods
fwait
add
mov
jmp
cltd
daa
aam
mov
xchg
push
stos
into
pop
xchg
movsb
inc
ss
mov
adc
xlat
mov
lahf
insb
xor
mov
inc
lock
add
std
mov
lahf
test
mov
es
pusha
inc
mov
stos
xor
jns
add
lea
icebp
jne
jmp
jmp
out
loope
jno
popf
cltd
rorb
or
rolb
xor
js
scas
inc
or
inc
in
cwtl
push
xlat
je
movsl
out
aas
mov
jp
jl
add
arpl
pop
add
xchg
push
ds
jnp
hlt
movsb
mul
into
xchg
fiaddl
iret
lret
push
add
or
scas
xlat
leave
scas
sarb
sub
es
in
fistl
sub
popa
mov
je
mov
push
add
int3
inc
jecxz
imul
xchg
lret
pop
ljmp
fcomps
xor
ljmp
mov
mov
dec
mov
test
mov
daa
jle
mov
mov
mov
cmpsb
mov
ror
cld
sub
fidivs
jmp
sub
pop
int
in
adc
xchg
repz
inc
mov
ror
push
test
xor
loop
mov
out
lods
test
pop
jp
aas
orl
hlt
loop
pop
popa
jp
xor
ret
loope
mov
call
jecxz
dec
cmp
jle
les
cmp
scas
mov
mov
xor
push
and
xchg
or
pop
push
mov
lea
les
imulb
lret
fwait
ljmp
or
imul
in
and
lahf
fisubs
inc
add
jg
daa
xchg
pop
inc
mov
pop
jb
repz
sub
dec
mov
fsts
mov
jo
mov
cli
adc
aaa
and
es
and
sbb
push
repnz
pusha
add
outsl
scas
repnz
pop
lock
xor
aas
lret
pusha
xor
in
push
hlt
seto
jg
aad
sbb
movsl
test
push
lret
lea
add
pop
sub
movsb
fists
xchg
inc
lds
inc
xor
jae
dec
adc
outsl
pop
pusha
test
jmp
mov
stc
fstl
adc
or
adc
cs
ja
in
ss
jmp
out
cwtl
in
shrl
push
mov
mov
je
inc
pop
jp
mov
add
pushl
dec
ds
pop
nop
xchg
lea
xchg
cmp
mov
hlt
cmp
out
pop
mov
das
inc
push
les
cld
cld
inc
cmp
fimull
bound
test
in
and
jp
shll
xchg
mov
ds
pop
or
les
shl
and
adc
sbb
stos
jg
inc
cmp
andl
outsb
adc
xor
dec
subl
flds
or
push
dec
out
adc
sub
pop
jmp
enter
mov
cli
mov
jb
shl
pop
jg
adc
and
ljmp
leave
and
mov
push
adc
sub
rorl
push
dec
jge
pop
xchg
mov
into
iret
and
mov
rclb
scas
iret
bound
mov
adc
sbb
push
cmp
or
js
out
or
or
or
cld
or
outsb
subb
mov
in
pushf
repz
hlt
and
rcl
outsl
mov
insb
sub
sub
mov
pop
popf
out
testl
mov
xchg
mov
push
xchg
stos
xor
push
sbb
mov
mov
mov
jne
jno
out
test
cmp
popa
testb
or
test
jb
iret
mov
jno
mov
push
scas
ja
fwait
jg
mov
and
xor
sbb
jle
jge
es
sti
lcall
xchg
mov
mov
cltd
std
inc
in
pop
inc
adc
js
jnp
adc
pusha
and
mov
cli
mov
movsl
push
push
ds
sti
addr16
out
in
pop
ret
ret
dec
loop
pop
mov
inc
inc
nop
mov
stos
lds
lods
push
cmpsl
out
loope
sub
out
mov
pop
sbb
mov
lods
cmp
jae
loope
sti
or
xor
test
push
aaa
nop
cwtl
xor
mov
jge
ds
test
adc
push
bound
jno
pop
cld
lods
out
sub
loop
jne
mov
call
lcall
xchg
popf
gs
cmp
and
in
lock
loopne
xchg
dec
ljmp
leave
shll
fwait
xor
jp
pop
aas
int
stos
adc
jne
adc
pop
pop
imul
jo
cmp
out
lahf
sbb
inc
js
clc
jmp
insb
lods
andl
clc
push
pop
scas
mov
xchg
mov
adc
mov
xchg
imul
pop
cld
loope
push
je
out
mov
mov
out
xchg
jge
loopne
jl
cmp
adc
faddp
push
push
adc
pop
push
and
add
scas
lcall
mov
xorl
pop
shrb
fucomp
dec
pusha
aad
test
xor
daa
fcmovne
movlps
or
dec
pushw
cltd
ja
outsl
lods
mov
mov
cld
cmp
rorb
cli
stc
mul
mov
nop
jne
or
ljmp
in
and
je
xor
adc
jge
popf
cmpsb
daa
add
mov
adc
jmp
xor
inc
or
xor
pop
and
push
test
xor
dec
adc
das
mov
push
xchg
loop
clc
xchg
lods
push
pop
jne
cmp
or
shrl
mov
in
fadds
jmp
mov
dec
pop
or
jo
jmp
xor
jp
inc
or
mov
jmp
iret
cmp
out
pop
and
sub
xchg
orl
sbb
cmp
jg
ret
insl
xchg
inc
lret
shl
mov
repnz
or
sub
pop
jnp
pop
popa
fistpll
jmp
out
mov
push
and
sbb
xchg
and
insl
sbb
jg
push
ret
mov
daa
call
in
and
hlt
xor
outsl
sbb
and
lods
or
and
dec
jecxz
ds
push
std
mov
je
sub
push
mov
bound
out
arpl
and
testl
add
sbb
nop
lcall
imul
shrl
stos
mov
les
or
sub
out
movsl
xchg
cmpsb
and
pop
mov
jbe
into
test
fisubl
adc
adc
lret
mov
fimuls
lods
mov
subl
inc
push
js
fbld
lret
mov
mov
xlat
sbb
lcall
std
pushf
cmp
jle
rolb
jecxz
sub
pop
sbb
push
xchg
jae
cmp
dec
outsl
inc
enter
sub
adc
cmp
xor
push
adc
jbe
ret
stos
and
lcall
dec
fnstsw
jle
sub
inc
enter
mov
xor
add
sub
ficomps
mov
ja
mov
jns
mov
lock
jp
out
ficoml
sbb
enter
and
add
ljmp
mov
addl
lock
aam
js
pop
sarl
scas
adc
enter
fs
cmp
cwtl
stos
push
ja
inc
sbb
and
fmul
dec
insl
scas
xor
cwtl
adc
pop
xchg
sub
cwtl
shl
nop
test
mov
fwait
add
or
repnz
inc
aaa
jmp
nop
and
push
iret
push
jae
out
pop
shr
aam
pop
rolb
cs
cmp
and
pop
inc
push
mov
in
inc
mov
fnsave
pop
cmc
inc
dec
jle
test
add
insl
mov
gs
xchg
ds
push
xchg
cmpsl
leave
test
push
mov
loopne
cs
ror
and
jl
in
pop
push
std
mov
out
outsb
ret
je
into
mov
dec
mov
hlt
out
push
xchg
mov
cmp
shl
sahf
loope
bound
mov
cli
pop
or
add
push
sub
icebp
pop
mov
add
and
in
xchg
jecxz
cltd
dec
aad
je
push
cmp
insl
mov
pop
cmp
mov
ds
mov
iret
mov
push
rcl
lods
push
push
aad
js
gs
icebp
mov
dec
fucomp
jg
sub
mul
push
arpl
clc
sbb
rcll
inc
push
cmpsl
in
add
sub
sub
cmp
cmp
popa
stos
mov
fdivl
hlt
and
cs
or
sbb
lret
ljmp
push
sub
cmp
push
popa
adc
xchg
or
mov
loope
mov
pop
rclb
dec
and
inc
or
inc
popf
pop
mov
inc
stos
imul
sbb
fdivs
inc
mov
mov
pop
pop
xchg
adc
mov
mov
je
jnp
adc
jge
aam
dec
fcmovnb
lcall
mov
push
adc
and
ret
sbb
and
lods
loopne
add
push
popa
dec
xor
jb
in
sub
dec
jp
js
cmp
mov
xor
ret
incl
mov
int3
fnstenv
pop
inc
movl
fs
std
je
stos
rcll
movsb
stos
lods
add
cmp
fucomp
adc
mov
pushf
imul
je
js
push
outsl
mov
jmp
inc
aas
or
fcomps
push
scas
mov
shlb
in
push
add
rcr
jae
test
fwait
inc
sbb
push
jnp
daa
and
imul
cwtl
dec
inc
dec
call
mov
fs
enter
inc
sub
add
mull
mov
mov
xchg
in
decb
add
mov
data16
sub
jmp
cld
sbb
dec
cmp
add
sub
in
stc
mov
jb
xchg
add
in
aam
cmovns
aam
shlb
mov
mov
dec
push
shll
dec
into
dec
cld
je
xchg
sbb
push
in
lahf
dec
push
xchg
out
push
or
add
mov
inc
test
lcall
push
inc
vpsubusb
pop
adc
sahf
xchg
outsb
repnz
rol
repnz
sbb
pop
dec
insb
pop
std
jmp
ja
shrb
gs
mov
loope
call
addr16
adc
les
mov
test
xor
mov
jne
and
sbb
aam
popf
adc
dec
lods
or
pop
xor
adc
sbb
mov
pop
imul
xor
push
jns
adc
daa
addr16
push
mov
xorl
lahf
and
jg
out
inc
and
pop
shl
lods
testb
sub
out
cld
push
test
fisubrl
pop
xor
mov
cmp
push
das
hlt
call
fistps
leave
into
push
inc
fcoms
xchg
in
int
or
movsl
or
lds
add
sub
fwait
cmp
push
fwait
aaa
test
lods
in
lea
jecxz
std
std
rol
dec
dec
mov
js
lods
xchg
jle
shrl
cmp
and
lock
xchg
pop
jge
push
jbe
rcrb
mov
roll
cmp
movl
mov
jge
lods
pop
out
outsb
jmp
mov
lea
nop
mov
mov
icebp
aas
sub
out
out
pushf
test
xchg
jecxz
xor
in
push
push
pop
cmpsl
xor
inc
inc
scas
mov
mov
out
inc
mov
shlb
push
adc
cmpsb
inc
loope
out
sbb
jo
push
test
mov
inc
lahf
sbb
scas
scas
adc
lcall
sbb
mov
xchg
jl
add
mov
and
adc
aas
mov
cmp
popf
das
adc
mov
mov
out
mov
push
jns
pop
out
xchg
jl
push
shl
setbe
dec
or
cwtl
sbb
je
add
mov
outsl
daa
popa
sbb
cmp
insb
or
int3
adc
cmpsb
sub
repz
xor
jmp
jnp
mov
lcall
fwait
mov
mov
icebp
xor
mov
in
sbb
sub
repnz
gs
fisubl
das
mov
outsl
cmpsl
mov
fwait
movsb
pop
cltd
test
ret
arpl
add
jae
ss
les
in
lahf
mov
lret
out
mov
push
mov
fstps
mov
dec
mov
mov
das
fld
insl
loopne
cmpsb
mov
into
mov
loope
sub
gs
cwtl
add
into
adc
add
gs
ljmp
rolb
pop
icebp
fsubrs
aaa
adc
lcall
testl
mov
and
mov
mov
lods
or
jns
loop
in
das
pop
in
cwtl
jecxz
movsb
inc
mov
push
pop
xor
lock
roll
inc
rcrl
insb
or
dec
adc
jnp
lods
and
ret
push
pmaddwd
adc
cmp
jecxz
inc
xor
mov
pop
in
loope
imulb
pop
pop
loop
xchg
mov
xchg
fxrstor
test
in
xchg
test
inc
sarb
push
pop
mov
int3
outsb
clc
roll
aad
js
fdivrs
or
inc
cs
push
lock
mov
mulb
mov
imul
xchg
test
and
mov
int
dec
inc
xor
icebp
mov
divb
sar
jb
packsswb
mov
jmp
sub
scas
insb
mov
into
pop
sub
inc
mov
or
sti
push
pop
push
in
das
xor
mov
mov
sbb
xlat
stos
int3
dec
push
xchg
sbb
loope
pop
sbb
scas
mov
movsl
repnz
or
inc
fsubl
cmp
test
test
lds
das
lods
addr16
jp
sub
insl
int3
add
xchg
xchg
or
inc
inc
jns
jmp
add
sbb
push
scas
mov
dec
mov
pop
pusha
sahf
xchg
jmp
stos
pop
sbb
cmp
mov
fmull
fistpll
daa
lahf
push
in
add
dec
faddl
loop
mov
xlat
mov
push
std
or
dec
push
test
jnp
cli
lret
popf
inc
aam
sbb
mov
repnz
stos
push
roll
cmp
js
dec
pop
outsb
fldenv
ret
mov
icebp
rorl
push
lods
ficoml
cld
into
mov
cmpsb
lods
mov
push
rorl
jnp
push
pushf
pop
mov
cwtl
push
popa
andb
dec
shll
xchg
es
scas
push
dec
fbld
enter
xor
movsl
lret
mov
inc
sarb
jge
sub
insb
sahf
mov
mov
adc
push
mov
scas
cs
out
lods
mov
jnp
xor
lods
insb
jae
mov
cmp
mov
scas
loopne
fwait
jne
xor
std
arpl
cmpsb
leave
lods
dec
adcl
jecxz
fcompl
cmpsb
out
out
es
enter
pusha
lods
leave
je
inc
add
out
xor
mov
mov
push
inc
sub
lods
mov
mov
cs
pop
jns
int3
pop
call
xchg
clc
pop
pop
lods
lret
fdivr
add
lahf
xchg
test
mov
stc
insb
jbe
movsb
ss
jmp
iret
adc
shlb
imul
in
or
xchg
in
fsts
sahf
lods
jo
or
adcb
mov
adc
cmpsl
add
imul
stos
or
mov
mov
rorl
orl
sbb
mov
xchg
mov
and
repnz
mov
or
iret
or
mov
inc
std
xchg
and
add
mov
lds
das
jb
movsb
dec
pop
lahf
jns
negl
and
push
popa
shrb
mov
sub
fsubr
push
mov
sbb
aad
shrl
test
mov
push
push
pop
nop
mov
ljmp
rorb
xchg
xchg
push
dec
mov
add
out
sub
push
lahf
jno
cmp
cmpsl
scas
adc
cmp
shll
push
inc
jo
lret
xor
imul
scas
xchg
and
adc
cwtl
xor
jp
hlt
adc
or
and
sbb
rcrb
scas
iret
shr
push
push
mov
mov
xor
rolb
adc
outsb
cmp
imul
sbb
xchg
enter
xchg
aaa
cmp
loop
push
fwait
and
sbb
or
repz
mov
dec
lock
ds
mov
sub
jns
add
movsb
stc
std
subl
out
pop
add
pop
jge
xor
jno
in
jecxz
pop
mov
bound
mov
data16
sbb
xchg
mov
push
xor
push
fcoml
test
jmp
jmp
pusha
stos
stos
sti
aam
ss
cwtl
xor
inc
cmp
ret
xchg
addb
mov
aam
movsl
sub
push
fcmove
inc
inc
fdivrp
subb
arpl
nop
inc
add
movsb
fsubr
push
popf
pop
mov
mov
test
adc
nop
ds
stos
add
xchg
sahf
inc
cmc
or
pop
jae
enter
loop
xor
cmp
push
cmpb
shl
nop
xlat
jnp
or
out
dec
inc
sbb
jbe
dec
loop
es
mov
mov
das
lds
push
in
insb
adc
push
xchg
shll
icebp
call
jecxz
das
in
nop
sbb
or
pop
das
pop
or
adc
fnstenv
ficoms
pop
push
jae
fs
dec
push
inc
aad
aas
dec
sbb
mov
jo
data16
or
fsub
jge
cs
imul
jno
xor
outsl
push
jmp
mov
cmp
push
push
jl
call
or
jmp
imul
stc
iret
sbb
mov
mov
and
sbb
mov
ret
pop
iret
arpl
xor
mov
shlb
cmpsb
xor
jb
pop
xorb
xchg
and
cmp
cli
cli
outsb
jmp
and
mov
mov
mov
int
das
jl
pop
mov
enter
xor
mov
add
inc
stos
jmp
push
jge
dec
jae
stos
mov
pop
cmp
test
xlat
jmp
jae
sub
push
push
cmpsl
dec
xchg
xor
cmp
test
addr16
jb
sahf
mov
xchg
add
popf
adcb
lods
frstor
insb
mov
xorl
or
cmpsl
inc
adc
adc
dec
dec
rcrl
stos
in
or
clc
pop
mov
fldl
jns
inc
mov
es
test
dec
mov
push
xor
xchg
jne
cmpsb
or
or
divb
cmc
out
jmp
shrb
jmp
decb
add
aas
clc
loopne
xor
stos
shrb
mov
xor
sbb
jg
mov
ret
push
cmpsb
test
bnd
bound
repz
ljmp
xchg
pusha
jns
mov
lods
mov
cmp
test
divb
mov
addr16
adc
jp
out
mov
cmp
mov
enter
pusha
push
repz
adc
mov
lret
jge
xlat
push
xchg
add
iret
insb
clc
shrb
aad
xchg
jne
and
mov
das
pop
adc
pop
adc
das
xor
in
jns
pusha
add
add
sbb
or
pop
add
imul
in
xchg
je
iret
sub
pop
cmp
jmp
mov
aam
ja
test
sti
mov
insb
xor
add
fdivr
mov
dec
mov
jne
jp
or
rcpps
jnp
mov
lods
in
imul
add
mov
jg
mov
cli
cmp
push
xor
push
push
aaa
mov
out
mov
and
fisubl
insb
sbb
xchg
dec
int
jbe
inc
jge
add
sahf
and
je
jle
mov
divl
in
pop
shlb
bound
int3
stos
imul
dec
xor
pop
mov
xchg
push
js
jmp
cltd
push
lds
cmp
xchg
clc
pop
sarb
cwtl
xor
inc
nop
sbb
or
loop
or
mov
pop
inc
test
cmc
stos
lcall
movsl
bound
fistl
sbbl
es
in
inc
sahf
xchg
cli
stos
test
test
and
repz
cmp
xchg
and
and
loop
and
cld
shlb
sahf
sub
movsb
mov
insl
mov
jmp
test
pushf
movq
push
jp
mov
wbinvd
in
sbb
dec
or
pop
adc
pop
and
sbb
jno
ret
mov
push
or
inc
loop
imul
push
mov
test
into
lock
stc
mov
nop
mov
aam
push
out
mov
out
push
pop
idivl
lret
sbb
movl
mov
mov
cmp
cmc
mov
fadd
sub
pop
fwait
push
pop
inc
lret
pop
pop
jecxz
jne
test
dec
dec
add
cmp
iret
ficoml
stc
test
stos
pop
add
bndldx
and
imul
fdiv
imul
fwait
rcl
xchg
js
mov
jns
lods
pusha
jmp
adcl
lds
data16
push
and
mov
and
dec
xor
sbb
pop
mov
addr16
and
add
repz
cld
icebp
enter
iret
mov
mov
cmp
jno
xlat
cmp
hlt
sub
mov
loop
loop
adc
xor
test
ficoml
mov
dec
adc
stos
mov
fistps
xor
sbb
dec
mov
mov
xor
cltd
std
and
das
je
sbb
stc
std
dec
shlb
inc
cmpsb
jl
jmp
fwait
sbb
leave
mov
inc
sub
add
sub
push
scas
cmp
push
lods
add
lock
nop
cli
pop
pop
test
cmc
cmc
and
jne
inc
and
insl
loope
sti
dec
xchg
test
add
jl
pop
lods
out
std
pop
ret
cmpb
or
not
jno
stc
or
inc
xor
or
jg
iret
mov
lods
and
cwtl
int3
or
popf
call
jmp
inc
imul
int
sub
sbb
imul
lods
xchg
add
xor
xlat
cmp
mov
xchg
or
adcl
lea
inc
cmpsl
and
shrl
popa
pop
stos
ljmp
cli
call
js
clc
add
call
insb
xor
push
pusha
arpl
xor
mov
lods
mov
mov
test
xor
repz
out
mov
call
inc
jecxz
xor
pop
setnp
test
or
mov
adc
jg
daa
test
xchg
mov
or
pop
into
incl
mov
lret
pop
xchg
sahf
cmp
movsb
movsl
xor
mov
aaa
sbbb
dec
bound
ret
add
cmp
xchg
call
pop
call
add
mov
incb
xchg
inc
xor
mov
push
ret
in
jl
push
mov
arpl
icebp
leave
add
xor
inc
mov
sub
xor
int
add
add
cmp
test
into
mov
jle
ffree
dec
nop
and
and
mov
hlt
mov
out
jmp
insl
inc
xchg
jmp
aad
add
push
fistpl
out
gs
dec
cli
sahf
sbb
test
mov
mov
pop
sub
lods
ja
jle
in
popw
xchg
imul
daa
lret
or
nop
xor
and
jp
mov
out
out
fbstp
cltd
mov
clc
hlt
jae,pt
xchg
lea
sbb
int
int3
fcomp
mov
add
decl
xor
loopne
add
cmc
push
mov
dec
push
xchg
test
jmp
cmp
imul
lea
xor
jp
pop
mov
xchg
pop
jmp
dec
fsubl
clc
cmpsb
outsb
xchg
sbb
or
xchg
aam
lret
cmp
xchg
loop
xlat
dec
and
into
fmul
sbb
fldenv
aam
mov
mov
imul
jge
lock
in
pushf
mov
and
adc
addl
dec
or
and
aad
in
ffreep
sub
fmuls
movsl
inc
or
xor
bound
mov
lods
hlt
test
add
or
mov
rep
inc
jge
ret
int3
in
dec
pop
test
popa
or
jae
hlt
cmp
rorl
in
dec
cltd
xchg
push
adc
and
iret
xor
sbb
fdivrs
insl
dec
and
shll
xchg
xchg
push
cmpsb
mov
dec
adc
jbe
push
cmp
call
loopne
jmp
xor
stos
ljmp
rep
xchg
dec
out
xchg
stos
sub
inc
mov
pushf
test
divl
test
mov
sub
lds
insl
push
inc
cld
and
out
roll
sbb
add
xchg
jl
mov
add
stos
mov
cmp
imul
push
cmc
out
mov
das
leave
lahf
mov
inc
hlt
adc
sti
movsb
dec
and
rolb
in
pop
jo
mov
mov
mov
jp
add
add
nop
sbb
xor
aam
and
lods
lock
sub
or
addl
xchg
test
or
fnstenv
insl
mov
xchg
xor
push
xor
movl
test
and
mov
ret
fs
sub
or
push
lret
jo
out
fists
cmc
jecxz
icebp
dec
pop
out
mov
inc
enter
adc
mov
or
inc
mov
in
or
repz
push
ja
pop
jp
jp
xchg
mov
dec
je
outsb
into
pop
jbe
pop
cmp
cwtl
les
xlat
enter
data16
out
test
test
pusha
cltd
and
cmp
movsb
int
shlb
out
xchg
jo
push
add
aaa
inc
and
cmpl
in
or
push
jp
lahf
sub
out
mov
fdivl
cmp
scas
dec
je
repnz
dec
sub
loopne
xor
pop
cmp
cwtl
adc
sbb
add
push
jb
mov
mov
aas
cmc
repz
out
aam
adc
mov
cmp
push
and
lret
ss
mov
into
adc
dec
nop
or
adc
xlat
xor
aaa
xlat
pushf
pop
popa
imulb
cli
orb
jne
add
jo
ja
or
js
outsb
cli
dec
xchg
roll
mov
shr
out
dec
pop
dec
mov
mov
shll
sbb
add
xchg
xor
push
sti
pusha
xchg
mov
data16
xchg
and
pop
test
das
push
and
dec
cmp
pop
mov
icebp
shlb
inc
xor
stos
arpl
mov
dec
test
outsb
mov
fimuls
inc
rcll
jne
cld
lcall
in
mov
inc
dec
icebp
data16
xchg
ja
sahf
das
into
jno
cmp
xchg
and
daa
mov
mov
cmp
mov
xor
arpl
js
adc
push
mov
xchg
xlat
xorl
push
repz
adc
mov
sbb
xchg
outsb
or
cmc
jbe
lahf
out
jne
mov
adc
and
in
jle
jbe
xchg
and
mov
hlt
jmp
loopne
jne
xor
faddp
sbb
stos
sub
xor
mov
scas
or
sub
dec
dec
mov
ja
in
xor
pop
jnp
xchg
movsl
push
push
mov
mov
clc
sbb
rclb
and
pop
mov
mov
pop
nop
mov
cmc
jne
mov
into
and
call
mov
dec
imul
idiv
xor
ficomps
icebp
push
js
cmp
aad
mov
inc
ret
mov
push
stos
mov
jo
xchg
ror
imul
cltd
jo
push
int
in
sub
pop
scas
inc
fmuls
stc
jo
lods
insl
mov
jne
out
insb
jb
int3
lahf
data16
pop
pusha
ret
dec
fwait
dec
lea
clc
add
nop
push
push
adc
data16
cmp
jmp
xchg
and
ja
mov
mov
push
les
pop
ja
pusha
aad
sbb
and
int3
in
in
cwtl
mov
leave
adc
cmp
push
push
xor
push
push
cmp
inc
test
rorb
and
cld
push
fucomip
pop
into
int
push
cld
xchg
jecxz
gs
cmpsl
xchg
lock
mov
cltd
push
stc
fidivs
cmp
xchg
sbb
test
mov
cmp
and
daa
jl
repz
adc
es
xlat
addr16
lret
neg
sarl
jb,pt
add
pop
xor
pop
jle
mov
movsl
sub
pop
test
addr16
call
xchg
mov
icebp
pop
inc
jge
mov
mov
outsb
pop
cwtl
stc
aaa
stos
mov
cmpl
insl
sbb
or
cmp
adc
inc
pusha
roll
jle
ret
es
loop
in
fistpl
cmc
mov
jge
dec
xorb
xor
hlt
pusha
lock
sahf
jecxz
and
pop
out
pop
cmp
jecxz
add
repz
mov
enter
js
dec
in
pop
dec
out
in
add
add
push
push
xchg
add
stc
pop
sub
movsb
jb
pop
jp
sbb
pushf
mov
add
iret
mov
test
stos
mov
mov
and
dec
xchg
push
push
out
sbbb
pop
jb
test
jbe
imul
jp
xchg
aas
ficoml
lods
test
hlt
adc
cltd
lods
mov
adc
push
in
inc
out
jl
fcomi
mov
pushf
rcr
sbb
xchg
inc
int3
adc
cli
sub
outsl
cmc
adc
enter
das
xchg
cmc
dec
and
adc
mov
repz
lret
cmpsl
adc
cmpsb
pop
mov
mov
movsl
loopne
aas
xchg
addr16
add
xchg
inc
pop
aad
push
call
call
ljmp
mov
or
adc
add
sbb
pop
mov
inc
jbe
mov
pop
sbb
pop
mov
test
xchg
pushf
sbb
and
and
repnz
js
xor
inc
jae
jecxz,pn
fs
mov
lods
ret
je
mov
jnp
movsl
push
cld
lods
adc
dec
cmp
cmp
push
add
lods
jmp
pop
sbbl
sbb
fildl
test
or
dec
sti
mov
sub
repz
sub
fwait
setne
or
scas
popf
addr16
sbb
lcall
mov
jmp
xchg
ror
sbb
or
rcrb
insb
mov
scas
int3
loopne
stc
cld
add
sub
xor
mov
pop
dec
jne
sbb
rolb
testl
loope
and
push
cmpsb
xchg
clc
jle
stos
pusha
fcomps
push
xor
inc
xchg
sub
arpl
cld
mov
les
rcr
push
lret
sub
mov
push
cld
ficompl
inc
into
lods
test
hlt
or
fwait
inc
cltd
sti
repz
mov
cmc
scas
jne
xchg
or
mov
adc
lcall
iret
and
jne
xor
xlat
inc
or
xchg
movsb
jmp
add
xchg
mov
sub
cmpsb
adc
mov
jne
sub
sub
mov
mov
jge
add
adc
frstor
arpl
fistpl
loop
mov
jo
sbb
mov
inc
sbb
mov
mov
fucomi
cwtl
mov
idivl
xchg
insb
daa
dec
adc
jp
iret
movsl
mov
mov
repz
lods
dec
or
scas
jge
mov
stos
adc
cmp
aaa
mov
rorb
xor
aad
hlt
pushl
push
add
rol
loope
faddl
push
lcall
sarl
or
push
cld
lret
pusha
cmp
stc
sti
cwtl
pop
stc
out
enter
adc
mov
jl
andb
je
fst
add
ficoml
insb
test
sub
call
lea
popa
sub
adc
mov
sbb
fiaddl
jge
into
jb
stos
mov
rclb
movsb
sub
pop
adc
hlt
flds
fcmovb
es
xchg
ret
int3
lods
stos
push
mov
jns
xchg
outsl
jecxz
movsb
mov
enter
or
xor
out
xor
push
pop
mov
lret
push
push
je
jge
sub
insl
jg
sbbl
ja
jbe
int
popf
movsb
cmp
dec
inc
clc
push
xor
sub
pop
cwtl
jb
mov
aas
iret
or
sub
dec
ffreep
mov
mov
add
xchg
mov
cltd
mov
in
pop
xlat
dec
add
rcr
mov
das
dec
out
fwait
adc
jle
cmc
int3
add
or
cmpsb
sbb
divb
mov
fimull
push
shrl
iret
pop
sti
inc
aad
test
fdivs
lret
mov
inc
cs
imul
out
out
pushf
pop
push
test
xchg
xor
inc
sub
daa
and
loope
dec
cmp
je
inc
and
loopne
mov
pop
inc
pop
mov
push
ret
jae
push
pop
fstpt
and
data16
xchg
pop
repz
out
jg
out
mov
out
idivb
pop
fsubr
mov
in
pop
sub
inc
pop
mov
inc
xchg
xchg
fiadds
inc
scas
jo
adc
cmp
pop
movsl
lcall
fsubl
sarb
das
dec
orl
adc
rol
mov
sarl
aam
loopne
mov
push
push
std
pop
push
stos
push
fldcw
dec
testb
shl
lcall
xchg
sbb
sub
ret
pop
sbb
std
push
test
aam
fucomip
or
jnp
shlb
int3
add
icebp
inc
cmp
loopne
xchg
pop
bound
inc
mov
dec
xchg
pop
push
or
xorb
mov
ljmp
call
sbb
cmp
inc
push
push
or
ret
inc
lods
jae
outsl
or
xchg
push
jo
dec
xchg
stos
scas
orl
dec
xchg
jp
in
test
mov
scas
fwait
and
loopne
lret
mov
ds
imul
xchg
xor
mov
or
sub
leave
jns
outsb
mov
in
adc
scas
mov
insl
cld
jo
repz
sub
pop
pop
mov
inc
lret
ud0
jl
dec
lahf
movsl
inc
rclb
cmpsb
dec
sbb
sub
xchg
adc
jae
repnz
xchg
and
xor
adc
sub
clc
or
js
mov
imul
fisubl
mov
cmp
leave
das
iret
jnp
icebp
ss
mov
jnp
aam
popf
pop
add
stos
pop
mov
sbb
push
pop
fbstp
mov
adc
sti
lock
inc
les
outsl
repz
lret
inc
movsl
add
cmp
push
fstpl
cli
and
cmp
mov
rcrb
int3
out
out
mov
mov
push
fiaddl
aam
mov
inc
or
or
push
pop
inc
rol
sub
shl
sub
add
xchg
xchg
mov
roll
inc
cmp
mov
enter
testb
mov
or
pop
cmp
fwait
and
adc
stc
stos
mov
cld
xor
jbe
pop
jbe,pt
or
or
stos
inc
cmp
mov
inc
out
icebp
jae
mov
outsl
pusha
pop
inc
testb
test
rorl
push
arpl
loopne
lods
and
adc
sub
xchg
xchg
popf
cmp
daa
push
push
mov
lcall
stc
jg
imul
fstps
xor
dec
jae
jae
push
arpl
mov
push
ljmp
sub
into
arpl
cs
adc
pop
mov
mov
pop
popa
xchg
inc
rcl
hlt
dec
daa
pop
adc
mov
xchg
insb
fdivrs
push
lods
xchg
scas
in
dec
adc
test
xchg
test
pop
jno
lds
inc
rcrb
stos
xchg
js
cld
ret
notl
or
mov
inc
daa
lods
cmp
push
cli
mov
mov
pop
jnp,pn
test
xchg
loop
bound
mov
mov
popa
jp
lahf
adc
addr16
fidivl
jnp
cli
and
lds
and
inc
mov
test
popf
hlt
sub
jo
inc
pop
dec
jnp
cmpb
popa
aam
loope
mov
lods
mov
insb
scas
paddb
fiadds
jp
enter
inc
cmp
lahf
push
bound
or
inc
lret
cmpsb
cmp
pusha
jnp
fnstenv
jmp
dec
clc
and
and
dec
sbb
jle
push
out
inc
add
add
icebp
push
inc
sub
push
mov
icebp
mov
adc
inc
jp
cmp
aaa
sahf
jns
int
dec
sbb
push
cmp
xchg
xlat
filds
inc
aam
inc
frstor
push
dec
dec
int3
leave
loop
adc
lock
das
cmp
test
sbbb
movsl
xor
fstpl
shll
push
popw
les
adc
ja
xor
inc
jne
cld
pop
push
repnz
push
in
cmpsl
leave
mov
sub
popf
stc
adc
vmwrite
jecxz
mov
xchg
out
leavew
mov
cwtl
and
xchg
test
jp
pop
jle
rorl
jg
aas
fisubrl
dec
pextrw
inc
int
xor
pusha
mov
mov
mov
ja
add
jo
cmpsl
sahf
mov
jb
sbb
add
out
sub
mov
or
push
pushl
sub
dec
pop
mov
int3
addb
pop
ret
mov
inc
jbe
sbb
mov
ljmp
test
pop
add
pop
mov
xchg
jmp
ja
cmp
fstpl
ret
mov
out
popa
inc
mov
pop
mov
and
imull
std
outsb
subl
mov
mov
mov
inc
cmp
and
mov
push
adc
pop
movsl
fnstsw
aas
cmp
loop
icebp
adc
add
add
dec
lcall
lret
jbe
push
adcb
pop
sub
ss
push
out
mov
rcr
inc
and
cmp
pop
push
adc
adc
into
push
jl
andb
call
lea
stos
jae
sub
xchg
bound
jo
out
add
es
cmp
dec
out
shrb
sti
xorl
mov
pop
out
orb
lock
mov
ret
push
or
ss
sub
jne
push
xchg
push
sub
or
cld
push
lret
sub
dec
cmpsb
or
mov
jne
stos
xchg
in
adc
lock
push
sbbl
jge
inc
int3
mov
xor
fbstp
ret
stc
jge
pusha
repnz
loope
rcl
xor
xchg
addl
lds
pop
lcall
outsl
imul
add
movsl
push
inc
ja
ja
and
xchg
orb
or
xchg
inc
xchg
repz
push
push
mov
add
adcb
add
int
jo
aam
jp
cltd
es
adc
add
sub
ss
mov
movsl
adc
jp,pt
lcall
mov
inc
inc
mov
cmp
pop
cmpsb
add
test
xor
push
out
jne
mov
and
mov
gs
fadd
cmp
sbb
andl
leave
adc
mov
popf
push
add
push
lcall
andl
imull
stos
and
dec
test
int3
dec
iret
jp
push
mov
cmp
jns
test
mov
jp
movsl
mov
sub
pop
jg
out
imul
dec
xor
mov
push
movl
roll
dec
jb
ljmp
negb
or
jp
push
jns
mov
mov
imul
sti
xchg
add
testl
mov
nop
push
dec
stos
xchg
pop
vpunpcklwd
xor
mov
jns
adc
movsb
test
into
movsl
inc
ret
inc
push
mov
inc
in
or
push
pop
dec
test
xlat
sub
lods
shrb
pop
adc
push
or
mov
jl
or
pop
pushf
pop
jp
rcl
ficompl
shll
mov
repz
sarb
fs
inc
mov
je
scas
push
cmpb
cmc
mov
pop
arpl
sbb
xor
pop
sbb
lret
jecxz
loop
or
xchg
dec
icebp
push
movsb
mov
jbe
sbb
cmp
idiv
mov
push
dec
xchg
dec
test
mov
mov
cmc
cs
xchg
xchg
inc
shl
xchg
pushl
lock
lcall
or
and
enter
add
pop
add
pop
into
pop
pop
out
sbb
aaa
dec
aad
sbb
hlt
test
mov
pushf
lahf
dec
into
xchg
jp
xchg
jbe
adc
in
lock
and
lcall
scas
mov
add
push
xor
orb
shrl
ljmp
xchg
int3
dec
loop
sbb
push
pop
jmp
call
xor
dec
inc
push
in
lds
add
add
jg
ret
lods
js
sub
test
fs
mov
jbe
xchg
cmpsb
outsl
pop
mov
test
cli
sub
push
xor
leave
push
testl
repnz
xchg
int3
lea
add
mov
sbb
xchg
ja
or
cmp
repz
iret
vunpcklps
pop
cwtl
sub
rcl
insb
lods
cld
fildll
or
inc
scas
pop
cmc
push
sbb
shrl
pop
xchg
pop
inc
add
mov
push
mov
add
mul
jnp
inc
pushf
jbe
adc
ret
cmp
clc
fadds
lds
inc
jge
das
repnz
sbb
and
movl
daa
mov
test
out
adc
sti
mov
or
js,pn
loopne
stos
jle
aad
bound
mov
cmp
xorl
dec
cmp
stos
mov
xchg
sub
clc
dec
push
fs
test
xor
mov
mov
and
mov
out
jae
xchg
mov
ss
jnp
ret
cld
insb
scas
jb
sbb
and
cmp
aad
xlat
daa
or
push
or
xor
scas
xchg
adc
ja
cmp
xchg
push
inc
rcrb
mov
lret
rcrb
loope
adc
imul
mov
imul
lock
icebp
popl
dec
jp
cmpsl
addb
dec
xorb
imul
rolb
sbb
mov
xlat
mov
add
loopne
or
sub
mov
inc
pop
add
ficomps
outsb
dec
nop
popf
out
out
inc
rclb
outsl
in
lcall
and
inc
mov
sbb
jl
inc
push
mov
call
jecxz
jp
rcrb
dec
roll
addr16
jge
cmp
push
mov
lock
push
in
faddl
aas
cmp
aad
xchg
inc
pop
cmp
cs
popf
addr16
dec
lea
xor
jne
adc
call
sub
aaa
mov
adcl
or
pop
push
nop
fucom
add
sub
movsb
into
test
and
push
inc
lea
lret
xchg
test
lock
stos
xchg
mov
mov
mov
in
stos
jmp
in
pop
mov
fcomps
pop
pusha
in
sbb
lret
js
rol
aam
cli
jno
lret
xchg
cs
ds
data16
fs
jle
xchg
in
iret
jge
mov
mov
ss
lcall
js
aas
fstps
sti
lcall
aad
xchg
rol
push
jns
pop
inc
xor
mulb
dec
push
sub
pop
shl
add
inc
and
cld
test
stos
mov
imull
push
in
mov
push
fidivrl
push
sar
push
fsubr
push
insb
sbb
adc
test
jnp
lods
xchg
lds
jns
dec
mov
jns
mov
std
xchg
loope
sar
mov
push
andb
fnsetpm(287
into
pop
or
or
mov
add
xor
add
pop
pusha
lods
jle
sub
divl
xor
sahf
test
aam
pop
inc
adc
push
imul
decl
dec
imul
pushf
xor
pop
cli
push
cmp
mov
in
int3
sbb
insb
outsb
or
mov
push
stos
xor
dec
lea
push
xlat
cwtl
popf
lods
fs
adc
popf
inc
pop
push
loopne
test
scas
mov
fwait
std
ljmp
icebp
lods
int3
mov
int3
je
pop
mov
daa
movsl
xchg
dec
cwtl
cmp
add
cs
or
fucomp
sbb
pop
pop
fildll
imul
jne
psrld
std
and
in
push
inc
jb
aam
xor
and
popa
fwait
pop
movsl
push
dec
bound
movsb
dec
addb
inc
inc
in
mov
add
push
icebp
dec
xor
lahf
cmpl
cld
ja
xor
push
sti
inc
sbb
xlat
in
lds
lods
xor
xchg
call
lods
xchg
or
test
js
jo
in
xor
sub
mov
mov
clc
pop
jne
xor
scas
dec
inc
insl
stos
push
clc
fsts
inc
add
pop
outsb
xor
mov
inc
cmc
adc
inc
cltd
mov
dec
sub
inc
in
add
sbb
dec
popf
add
cmp
rcl
inc
pop
sbb
cli
push
das
or
stc
je
lahf
inc
orb
adc
dec
imul
imul
je
sub
lods
lret
test
dec
or
xchg
ss
inc
dec
jbe
and
mov
jno
std
xor
pusha
cltd
mov
sbb
inc
popf
movsb
stc
xchg
cmp
mov
cli
pop
loopne
jnp
aaa
mov
mov
jo
movsb
rolb
sub
int
mov
fldenv
cmp
addl
lods
cmp
out
and
fsubrl
pushf
call
push
or
mov
cmp
pusha
mov
negb
mov
sub
push
arpl
les
cmp
dec
or
add
scas
out
fdivrs
out
push
inc
test
pop
cmpl
inc
fsubs
dec
lea
fnstcw
jne
mov
sbb
sbb
sub
mov
mov
xlat
aad
pusha
rolb
cmp
lods
adcb
dec
xchg
push
push
mov
jle
adc
fcoms
scas
mov
cs
cmpb
jne
mov
add
pop
inc
div
sub
xchg
nop
mov
or
call
iret
adc
mov
aam
xchg
shll
fstp
lods
adc
lea
fadds
lock
add
subl
nop
in
mov
push
stos
add
push
dec
push
aam
cwtl
enter
hlt
inc
xlat
mov
push
in
inc
sub
xchg
or
push
cs
repz
push
xchg
xchg
aas
les
adc
adcb
adc
dec
test
scas
xor
or
or
mov
and
scas
dec
in
mov
dec
cmp
xchg
mov
push
adc
push
ret
jecxz
gs
push
push
dec
sbb
rcrl
stos
aad
add
in
push
cltd
scas
or
test
loopne
fcom
stc
or
dec
or
mov
imul
insb
adc
lahf
test
ja
lcall
xchg
stos
dec
mov
adc
jne
cld
jno
in
add
pop
popa
sti
fidivl
pop
jp
mov
dec
inc
jp
jae
dec
cmpsb
add
xchg
cmp
lods
fbld
xchg
jl
sbb
inc
cmc
insb
inc
push
in
push
mov
mov
rcl
xor
int3
fs
inc
and
fnsave
loop
mov
inc
mov
shlb
fidivl
cmp
xor
push
in
adc
pop
mov
or
into
adc
mov
pop
fadds
test
pop
sub
pop
mulb
dec
movl
int
add
addr16
je
loope
into
add
lods
mov
fisttpll
aas
shll
movb
or
xchg
sahf
mov
and
push
fdiv
xchg
fs
daa
and
ja
adc
mov
in
adc
insl
jne
js
nop
aam
daa
xchg
orb
repz
inc
adc
sub
std
lods
sbb
aaa
out
push
cmp
mov
cmp
xor
mov
insl
sbb
cmp
or
push
lds
mov
mov
or
sub
add
lods
aad
or
mov
icebp
pushl
fidivrl
rcrb
out
fidivs
imul
fistpll
pushf
mov
lret
mov
or
pusha
fldl
jne
incl
in
jl
aam
push
adc
sbb
sarb
jbe
pop
jecxz
dec
icebp
hlt
inc
faddp
lock
aam
fldenv
xchg
aam
mov
stc
loope
dec
out
dec
scas
mov
sahf
loopne
jb
loope
imul
and
mov
adc
push
ret
call
xchg
lods
nop
sbb
dec
pop
addr16
adc
loope
add
mov
aam
xor
int3
mov
cmp
dec
or
fidivrs
mov
sbb
cltd
cmp
cmp
and
addr16
jmp
jp
xlat
jnp
enter
loop
mov
out
ret
cltd
int
xor
lea
fisttpll
out
cmp
adc
sbb
scas
ja
inc
add
ret
stos
push
jp
or
dec
stc
pop
sbb
add
mov
add
sub
push
sbb
jge
mov
jbe
out
pop
popf
push
jl
aaa
loop
nop
sahf
fdivr
xchg
xchg
pop
call
sbb
xchg
popl
jmp
adc
rsqrtps
fiaddl
test
pop
push
sub
test
push
fs
jns
test
jl
push
or
std
std
cmp
sub
aas
and
outsb
mov
in
popf
lret
ja
frstor
aad
cmpsl
fildl
jecxz
cmp
inc
loopne
xorb
mov
stos
int3
xlat
aaa
lcall
mov
dec
fabs
lcall
xor
mov
repz
jp
loope
pop
cmp
pop
pop
fcomps
inc
dec
ljmp
push
arpl
xor
mov
imul
sbb
fmull
xchg
jbe
scas
or
out
inc
mov
cli
mov
cmp
ror
inc
test
xorl
xor
in
adc
cmp
and
data16
sbb
push
nop
in
xchg
loop
adc
cmp
or
push
and
jno
lds
pop
xchg
mov
cs
sub
imul
cltd
lret
mov
pop
add
sahf
jo
jg
ja
bound
dec
xor
xchg
cmpsl
mov
in
inc
in
insl
bound
in
sub
incl
mov
xchg
bnd
ret
pop
mov
sbb
stos
aaa
loope
nop
ja
movsb
je
mov
pop
mov
icebp
push
movsb
xor
orl
xchg
popa
or
and
push
jg
cmp
in
xchg
aam
loop
test
rcrl
or
aam
dec
sbb
push
dec
xchg
mov
xchg
cmc
adcl
aad
inc
xchg
fisttps
jmp
das
faddl
push
mov
shl
mov
nop
cs
and
push
lret
jbe
stc
cmp
fcmovne
inc
pop
and
mov
and
mov
mov
outsl
das
ja
mov
sbb
mov
inc
fwait
ds
scas
out
hlt
adc
inc
lcall
lcall
mov
pop
cmp
and
scas
xchg
xchg
iret
cmp
sbb
pop
gs
leave
es
or
testl
lahf
jg
dec
rclb
jo
pop
scas
lcall
and
xchg
adc
loop
mov
xor
stos
int
mov
sub
nop
out
dec
xor
jne
inc
cld
jg
rcll
lcall
out
mov
dec
jmp
je
out
push
push
sahf
icebp
sti
js
test
loop
mov
push
imul
mov
xchg
int
js
sub
data16
push
idivl
jno
sub
frstor
pop
out
push
imul
jp
jecxz
repz
pop
aaa
xchg
push
out
or
shl
ficomps
icebp
mov
and
xchg
sbb
lahf
hlt
sbb
dec
xlat
dec
push
movsb
jge
jecxz
clc
rorb
es
int
aad
push
add
jp
shll
mov
test
orb
jo
cmp
mov
push
cmp
ds
or
ret
and
leave
in
fldl
test
dec
add
stos
push
dec
inc
ljmp
test
pop
fcmovbe
lret
push
cmp
dec
out
movb
adc
jbe
int3
ret
and
arpl
in
cs
cmp
shlb
loopne
loop
xchg
lcall
pop
dec
sarl
lea
mov
lret
mov
imul
outsl
orb
test
int3
sbb
es
aad
add
cmc
mov
sahf
sbb
idivl
push
jno
aad
imul
xchg
outsb
mov
push
push
xlat
sub
ja
pop
xchg
loope,pn
push
fistps
or
frstor
push
mov
popf
sti
int
scas
inc
pop
andb
cmp
dec
es
mov
iret
mov
imul
lea
push
pusha
lds
data16
inc
sub
in
jge
iret
mov
negl
sub
jo
fcomps
mov
adc
and
data16
sub
xchg
inc
inc
xchg
sub
xorl
out
xchg
xor
and
sarl
mov
loop
jns
add
iret
cmp
cwtl
xacquire
or
insb
mov
ja
push
add
or
cwtl
jo
mov
imul
mov
and
mov
adc
int3
int3
ds
fcom
pop
xchg
push
outsb
mov
ror
and
and
ds
adc
jbe
jg
cmp
dec
and
xor
cmp
sbb
ret
les
mov
scas
dec
rcr
push
clc
sbb
xchg
imul
dec
sub
lea
insb
push
adc
inc
jl
push
mov
xor
lahf
sub
pop
mov
lods
stos
in
jno
adc
jns
enter
andl
mov
dec
lods
negl
iret
mov
add
stos
sbb
aaa
inc
in
inc
in
adc
dec
or
mull
test
jno
insl
mov
jbe
shrb
in
bound
in
outsl
in
call
lahf
pop
loope
jbe
loope
sub
inc
mov
jg
sbb
aas
adc
push
mov
data16
loopne
or
xor
xchg
ss
mov
push
dec
xchg
aas
jnp
sub
fiadds
cmp
flds
jge
scas
xchg
and
pop
mov
incb
push
aam
xlat
out
ja
push
test
pop
out
or
int
add
rep
rolb
cmpsl
pop
ds
stc
addr16
icebp
clc
sub
loopne
stc
pop
sub
pop
pop
mov
insl
fsubrl
jg
and
mov
ss
imul
pop
cltd
out
cmp
mov
push
push
jp
inc
or
fxch
dec
movl
enter
inc
dec
xorb
xchg
cs
sub
rol
mov
repz
jg
mov
jge
xchg
mov
inc
jns
and
popf
dec
jnp
xor
lahf
jo
dec
rep
imul
aaa
adc
in
sub
inc
sbb
popa
xchg
inc
shll
mov
jmp
mov
inc
adc
add
or
dec
xchg
lea
cmp
dec
jg
and
dec
pop
xchg
mov
push
adc
int3
enter
ss
xor
mov
mov
or
filds
testl
push
cld
lods
cmp
flds
sbb
dec
outsb
xchg
lret
xor
mov
inc
adc
stos
js
and
pop
fs
cmp
insb
inc
lea
stos
rcll
pop
pushf
dec
scas
aaa
fldcw
fimuls
daa
sub
mov
push
insb
push
mov
ret
das
mov
nop
sub
or
shlb
sbb
test
idiv
xchg
aad
in
jns
xor
movsl
das
sbb
cmp
ds
cmpsl
jbe
adc
aad
jecxz
movsb
adc
adc
das
mov
mov
add
adc
mov
adc
sahf
out
insl
out
inc
inc
mov
les
cmpsl
inc
sahf
andl
jns
fmull
cmp
jne
pop
adc
push
aam
cmpsb
movsl
mov
jmp
pushf
mov
loop
cmpsl
sub
mov
mov
les
sub
popf
add
stos
adc
in
xchg
fbld
xchg
cmp
jno
jge
loopne
sub
fisubrl
dec
mov
add
shlb
jecxz
call
movsl
pop
xor
mov
aas
imul
hlt
ficomps
push
xlat
jb
fs
mov
repz
lds
jo
sbb
xlat
jno
xchg
into
iret
and
notl
test
dec
push
pop
cmp
int
hlt
fidivs
aad
mov
pop
xchg
and
cmp
cmp
aaa
cmp
imul
ljmp
add
andl
mov
xchg
xchg
mov
fdivr
shll
xchg
pop
adc
add
mov
adc
mov
push
push
jl
mov
int3
mov
or
dec
jmp
xchg
repz
scas
mov
fucomi
mov
movsl
mov
xor
xor
je
adc
out
aad
sub
fldcw
xor
fwait
and
pop
xchg
sbb
cmp
push
test
mov
add
cmp
cmpsb
xchg
in
cmp
fcoms
clc
mov
jmp
pop
addl
ja
fsts
sbb
inc
shll
push
nop
scas
xchg
adc
loope
sbb
pop
imul
imul
mov
mov
jl
mov
dec
gs
popa
icebp
xor
sahf
cli
add
xchg
out
test
pop
adc
fisubs
or
ffree
and
cli
ret
orl
xchg
data16
ljmp
dec
rorl
dec
cmp
rorl
cmp
leave
gs
add
sbb
aam
int
pusha
inc
insl
xchg
lret
adc
es
test
push
lret
andb
or
jp
outsb
sbb
push
in
ljmp
fucom
lcall
push
sbb
movsl
lcall
jo
lods
mov
dec
and
imul
xor
and
adc
insb
pop
arpl
scas
int
xor
aas
cmpsl
das
idivl
shrb
sbb
inc
insb
pop
cmp
fnstcw
ficoms
aaa
out
lds
cmc
mov
std
lahf
idivb
pop
sbb
rorb
lock
lcall
cmp
jmp
rcl
js
xor
jge
xchg
aam
lods
fdivrl
mov
sbb
int3
mov
push
push
and
xchg
fldenv
loop
cwtl
xor
dec
jae
andnps
arpl
sbb
nop
pop
push
dec
scas
inc
sahf
rcrb
add
push
mov
andl
lods
push
pop
jl
mov
inc
and
pop
or
cmp
lcall
scas
add
insb
xchg
mov
insb
rorl
loop
xchg
faddl
lret
sbb
mov
imul
xchg
jle
pop
push
aam
pop
or
inc
imul
dec
imul
cmp
inc
out
loopne
or
lods
test
daa
push
add
mov
cmpsb
insl
into
push
fst
or
xor
jecxz
lock
ja
push
std
mov
into
out
scas
in
fmul
cmp
dec
cs
lcallw
add
je
fmuls
dec
call
and
or
adc
ds
sbb
xchg
ret
mov
mov
or
dec
inc
dec
inc
icebp
cwtl
xchg
sarl
xchg
cld
mov
in
outsl
ss
or
cmp
les
cmc
jmp
add
sbb
push
aam
mov
sbb
mov
push
aas
push
jns
adc
jge
add
mov
dec
lea
adc
mov
mov
loope
aad
inc
lods
imull
aad
and
adc
push
inc
lcall
cmp
mov
scas
mov
addr16
sub
jg
test
mov
insl
rorb
pop
sbb
jo
aaa
cmp
popf
clc
pop
push
inc
xor
mov
je
dec
dec
dec
jo
movsb
int
mov
pop
cmp
inc
shl
mov
cmp
adc
es
pop
adc
into
mov
xor
inc
ljmp
test
gs
add
add
sub
lcall
pop
cmp
jge
in
test
jae
aad
push
mov
orl
cmpl
insb
insl
adc
add
lret
dec
xor
jle
push
call
nop
es
das
and
jl
cmp
out
enter
adc
add
xchg
push
nop
imulb
clc
arpl
aas
je
or
xor
fwait
mov
jne
push
rcr
sbb
outsb
xchg
sbb
xchg
or
xchg
xchg
xchg
jle
rcll
inc
shl
adcl
sub
xor
pop
inc
mov
imul
sarb
insb
push
jmp
xor
dec
rcll
or
add
lods
faddl
and
jecxz
sbb
pushl
push
or
or
inc
mulb
mov
andl
xchg
aad
lock
ret
das
pushf
add
xlat
leave
mov
or
pop
xlat
fistps
jg
sub
mov
mov
fidivrs
pop
mov
sbb
pop
xchg
movsl
jl
fldenv
add
push
and
pop
mov
fstps
outsb
and
sbb
cmp
jns
call
jnp
mov
popa
and
xor
jns
lcall
and
stc
ret
rcl
sub
add
xchg
shrl
outsl
mov
les
pop
jmp
popf
aas
xchg
ljmp
addr16
movsl
jnp
stos
fs
ret
jg
pop
daa
js
fcmovb
jbe
loope
inc
sti
call
push
aam
mov
test
ret
gs
mov
pop
sub
leave
mull
mov
das
jp
hlt
in
jmp
pop
je
jne
int
push
scas
hlt
push
repnz
lret
xor
push
push
lds
in
rorl
cmpsl
popa
sub
jae
inc
lret
xor
push
sbbl
imul
adc
or
adc
inc
loop
pushf
and
idiv
test
jecxz
ss
adcl
and
filds
aad
cli
and
das
xchg
mov
cmc
or
into
cmpsb
mov
pop
popf
rol
cli
test
xor
lret
ret
pop
jno
popa
sbb
loopne
lea
cmpsl
inc
icebp
loop
inc
aam
js
inc
mov
pop
daa
xor
mov
fiaddl
inc
cmpsb
pop
add
loop
or
push
shrb
xor
or
fbld
stos
popa
adc
fs
mov
test
lret
scas
pop
es
sub
xor
cmp
sbb
dec
ret
push
xchg
iret
lcall
ret
sbb
in
jl
mov
faddl
cmp
and
push
repz
enter
xor
data16
repz
shrb
outsb
pop
inc
xlat
jae
push
fcomip
adc
daa
cmc
mov
add
notb
lret
mov
stc
cmp
mov
in
lds
mov
push
shlb
push
cli
adc
mov
cmp
int3
or
out
sub
mov
jmp
outsl
rolb
sbb
or
push
sarl
int
or
dec
shrb
pop
fbstp
or
jl
pop
xchg
insb
testb
add
inc
test
imul
dec
push
sbb
in
shlb
sti
gs
fdivr
movsl
repz
and
pop
fwait
mov
mov
cmp
jno
nop
aam
pop
mov
push
mov
and
push
ja
or
pop
xor
popf
and
inc
pusha
push
sub
mov
xchg
into
and
and
push
rcrb
xchg
jecxz
sbb
mov
jnp
insl
jo
add
and
stos
out
fnstenv
jge
mov
inc
repz
lods
vshufps
icebp
and
imul
or
jp
or
mov
fwait
sar
bound
jb
enter
jge
test
cld
jl
sbb
loopne
loopne
aad
pop
mov
add
aam
fdivr
rolb
andl
mov
adc
jg
imul
or
dec
bnd
pop
loopne
add
pushf
and
sbb
sbb
jle
mov
filds
jb
jne
pusha
cmp
ss
lahf
repz
jns
orb
push
xchg
jmp
add
push
cmp
push
mov
adc
mov
xchg
sahf
lods
cmp
xor
ret
mov
sub
pop
cmc
mov
mov
lea
sub
adc
js
repnz
loopne
sbb
jl
repnz
or
sbb
and
xchg
pusha
push
xor
jg
pop
fldl
mov
dec
jmp
or
icebp
push
ret
lods
xor
roll
test
fldenv
push
pop
mov
inc
lea
mov
fnsave
cmp
push
fsts
jle
mov
mov
pop
cld
pop
ret
and
dec
jne
cmp
sbb
or
mov
sahf
and
xor
nop
or
ror
fbstp
ret
push
es
cmp
aaa
xacquire
add
cmp
das
sbb
dec
jb
or
inc
icebp
movb
inc
daa
pop
mov
push
xchg
sahf
jne
jecxz
or
xor
insb
dec
pushf
cmpsb
mov
inc
int3
out
inc
mov
jo
cmp
cmp
and
scas
lret
push
mov
negb
and
subb
in
dec
rcrl
lcall
add
mov
stos
idivl
cmp
stc
dec
sbb
and
addr16
and
sar
stc
jmp
jb
loopne
lret
adc
repz
cmp
mov
cmp
and
lcall
jo
cmp
pop
jb
mov
fisttpll
andb
jb
pop
stos
inc
dec
aas
xchg
ret
pushf
mov
sbb
popl
lock
xchg
push
sbb
mov
mov
gs
push
adc
inc
sub
fcomi
data16
roll
sub
mov
imul
das
pop
fisubrs
add
pop
cvttps2pi
mov
xor
mov
and
push
imul
loope
pop
adc
cmp
les
adc
xchg
loope
sub
loopne
das
scas
inc
xchg
stos
xor
into
push
cmp
jecxz
cs
push
mov
mov
push
xchg
and
sbb
mov
fdivs
xor
lret
sub
xlat
push
arpl
add
rclb
das
popa
sbbb
mov
pop
inc
es
and
jno
jo
cmp
cmpb
mov
mov
das
loope
cld
popa
pop
xchg
fcomps
pop
and
mov
xor
ljmp
dec
aad
std
mov
mov
cmp
push
popa
lea
inc
imul
jg
fwait
loope
inc
test
sub
insb
mov
and
ja
int3
idivb
scas
lods
mov
cmp
push
push
dec
mov
push
sub
push
dec
lds
pop
loopne
push
sbb
clc
push
xchg
daa
jge
paddusb
outsl
ljmp
faddl
pop
adc
scas
into
pop
iret
xor
pushf
bound
ss
cmc
pop
cmpl
fsts
incl
jnp
bound
xor
sahf
pop
jne
mov
loop
sti
and
xchg
and
aad
mov
fs
lea
rorb
push
out
jne
imul
or
loop
xchg
inc
adc
jbe
das
sbb
fs
orl
aam
test
in
or
mov
sahf
xor
xchg
jle
fstl
sub
xor
dec
in
pop
mov
lods
jnp
sbb
movsl
sti
jl
push
aas
icebp
mov
push
loop
out
pop
dec
xchg
push
xchg
enter
out
jecxz
mov
adc
lods
sub
pusha
scas
cmp
xlat
je
int3
or
cld
outsb
popa
cmpsb
pop
std
mov
dec
sarb
cltd
in
xchg
inc
pop
inc
ret
movsb
xchg
outsb
insb
lods
or
xor
push
and
mov
adc
adc
ret
or
sub
cmp
adc
push
mov
mov
not
stos
xlat
jbe
push
fsub
add
jmp
cmpsb
hlt
fadd
mov
psubusw
repz
xor
sub
cmp
xlat
loopne
data16
adc
dec
fisubs
cmp
repz
popa
das
adc
je
fcompl
imul
subl
inc
or
mov
sahf
repz
notb
or
jl
pop
or
por
xchg
dec
cmp
sbb
aam
xor
xchg
das
sti
aad
and
jne
inc
lods
jne
mov
pop
jbe
sbb
mov
jae
cs
cmpsb
sub
lahf
mov
in
or
dec
cmp
xor
iret
in
dec
scas
jmp
sub
adc
call
xlat
pop
dec
call
lods
mull
cmpsb
notl
mov
adc
cmp
in
ds
jp
stos
pop
xchg
loop
cli
addr16
push
sbb
fistpl
dec
xor
adc
or
inc
test
cmc
std
in
fimuls
dec
movsb
lods
push
adc
jae
jnp
mov
mov
push
or
pop
mov
sub
pop
mov
es
cmp
fsubrp
call
orb
aam
push
das
repz
push
cmc
hlt
sahf
xchg
mov
and
movsb
push
or
data16
decb
mov
mov
push
pop
ljmp
or
pop
repnz
fmulp
mov
ljmp
mov
in
stc
enter
adc
fwait
or
pop
lcall
orl
stc
out
pop
out
lods
and
repnz
push
xchg
cmp
dec
lea
push
movb
push
pop
fucom
fisubl
incl
repnz
fsubrl
inc
mov
test
pop
daa
mov
cmp
sarb
xlat
popf
lds
outsb
push
fldcw
loope
inc
sub
push
pop
sbb
adcl
test
es
cld
inc
push
xchg
mul
push
fstpt
push
adc
imul
or
icebp
inc
mov
lods
orb
jp
fsubs
leave
in
popa
lds
cmp
push
pop
add
imul
add
inc
test
push
mov
insb
out
and
fldt
sbb
and
sbb
in
pop
inc
test
push
imul
and
ret
fldl
aaa
ss
mov
test
xchg
adc
in
insl
nopl
pop
testb
mov
jmp
and
subb
dec
mov
jmp
mov
pop
dec
sbb
icebp
sbb
push
dec
cmp
adc
insl
rorb
jecxz
rcrb
stos
das
es
out
xchg
or
movsb
sti
dec
or
mov
inc
rolb
pop
jl
cmp
inc
loop
fs
aam
imul
stos
or
mov
cmp
sbb
mov
or
call
lock
aam
jne
add
dec
jne
mov
mov
dec
mov
lds
push
fnstenv
push
xchg
mov
xchg
arpl
jae
fimull
mov
push
inc
pop
jno
lods
pop
mov
addl
sub
xor
out
dec
je
shl
mov
jg
sub
scas
stos
jg
push
push
outsl
xchg
cmp
and
lods
inc
cmp
dec
pop
or
je
mov
and
add
push
mov
sbb
inc
pop
mov
mov
dec
push
lods
in
xor
outsl
sbbb
cmpsb
pop
cmc
pop
sbb
out
mov
ret
int
xchg
push
inc
dec
cmp
rcrb
cmp
fdivrs
jae
jecxz
lds
mov
pop
cmp
sahf
cmp
ret
pop
sub
jns
lret
test
aam
ss
inc
push
movsl
outsl
xor
mov
lock
dec
push
in
xchg
shlb
mov
jle
lock
enter
les
lods
or
and
test
ffree
mov
or
fdivl
stos
ss
dec
add
in
pop
and
subb
add
stc
std
push
pop
xor
inc
ficoml
sbb
and
les
push
lret
xchg
rclb
mov
xor
cmp
mov
jge
jno
push
lock
add
inc
fistpl
xchg
xchg
push
xchg
xchg
xchg
movsl
or
ficomps
int3
xchg
push
addl
xlat
inc
enter
push
repz
ret
sbb
cmc
push
push
cmp
xchg
hlt
in
jmp
loope
pushf
movsl
outsl
mov
mov
inc
inc
sub
push
mov
pushl
inc
mov
pushf
sti
sub
cmp
xchg
xchg
dec
pop
sub
mov
out
mov
push
add
dec
clc
xchg
popf
cmp
pop
sbb
cwtl
xchg
cmp
dec
inc
in
push
sbb
push
scas
mov
push
scas
insl
dec
add
cmp
imul
jecxz
dec
test
mov
imulb
sub
cmpsb
dec
into
xchg
xor
dec
adc
cmp
mov
adc
dec
adc
fnstsw
iret
push
xchg
xchg
orl
fs
cli
leave
ds
dec
jecxz
jge
lret
jecxz
std
std
jo
loope
ret
sub
loope
sbb
or
sti
arpl
cmpl
xchg
xchg
icebp
cmp
pop
pop
adc
pop
push
jne
adc
rolb
cmp
push
mov
adc
adc
push
cmpl
cli
incl
and
repz
cmp
mov
adc
lahf
or
cli
and
jo
lods
adc
mov
add
adc
test
fbld
push
cmc
mov
xchg
dec
inc
and
sti
pop
pop
mov
mov
stc
hlt
js
ja
and
push
aam
sub
mov
dec
stc
pop
mov
add
mov
and
popa
xchg
std
ret
aas
mov
pop
out
or
les
pop
sahf
adc
mov
cmp
push
out
jg
dec
add
xchg
mov
or
push
or
psadbw
jp
and
jmp
flds
dec
sbb
jae
aaa
xchg
or
andb
dec
loope
add
stc
push
cli
cmp
xor
push
dec
jnp
shr
mov
pop
testl
cs
insb
fcomip
pusha
rcrb
adc
inc
xchg
popa
fdivrl
cmp
fstpl
rorb
minps
dec
pop
jnp
jecxz
mov
fistpl
jge
pop
inc
jb
push
sub
lds
movsl
stos
and
es
leave
das
cli
adc
lcall
sbb
sbb
mov
cld
insl
mov
fcom
mov
notb
mul
jnp
sub
scas
push
test
adc
shrb
lret
nop
or
and
cmpsl
aaa
mov
ret
imul
xchg
xor
pop
cli
cmp
push
inc
cmpsb
in
add
outsb
push
pushf
int3
pushf
ret
out
inc
punpckhbw
stc
fnsave
fimull
fmull
jno
cltd
cmp
sub
adc
mov
mov
adc
outsl
fs
insl
jmp
inc
sbb
aas
adc
mov
cmpsl
imul
cmpb
aad
sar
pushl
enter
hlt
adc
adc
addl
fdivl
and
dec
movsb
test
adc
and
jl
imul
jbe
rcrl
icebp
scas
and
add
push
repz
testl
add
fs
mov
gs
mov
in
popa
xlat
loop
jp
jmp
imul
mov
filds
sub
fdivl
sbb
and
push
xchg
rolb
mov
call
mov
fstpl
pop
add
push
aaa
pop
in
xchg
clc
cmc
jmp
cmpsb
dec
arpl
outsb
and
rclb
inc
in
popa
jmp
iret
or
jb
pop
stc
mov
mov
test
nop
cmp
test
stos
lea
push
notl
add
das
or
adc
lods
insb
jp
fsubl
idiv
rclb
add
call
adc
xor
rcll
lock
add
jl
xchg
dec
xor
or
leave
test
or
jle
xor
mov
movsl
in
add
add
fisubl
fcoms
xchg
mov
inc
xor
lret
xchg
xchg
imul
mov
push
fisubrl
jp
mov
pop
xor
dec
aad
xor
mov
adc
cld
sahf
cmpsl
jge
rorb
or
mov
add
xor
push
adc
in
mov
push
sub
ds
in
sub
loopne
pop
or
mov
add
pusha
jnp
int3
shll
adc
push
sti
cwtl
and
add
push
aaa
cmp
aaa
push
adc
inc
popa
xor
xor
mov
in
insl
cmpsb
aad
xchg
outsb
jnp
fiaddl
push
push
scas
ficompl
loop
jne
sarl
pop
iret
inc
js
or
and
ror
and
jnp
filds
pop
mov
pop
adc
addr16
fnsave
cmpsb
sbb
xorb
dec
mov
mov
jle
ljmp
sub
int3
push
test
fidivrl
push
out
xchg
jg
inc
mov
test
leave
push
aad
mov
and
xor
cld
cmp
aaa
mov
pop
pop
pushf
int
insl
les
or
icebp
hlt
lret
or
or
mov
imul
aad
aam
and
cli
out
lcall
aam
mov
pop
js
in
lds
fs
iret
mov
loopne
sub
jae
rclb
movlps
jb
mov
imul
ss
dec
les
popa
cmc
sbb
data16
daa
mov
add
mov
sahf
ds
cmpsb
xchg
imul
sahf
and
enter
xorb
scas
fdivrl
lea
fstpt
fcomps
or
cmp
mov
outsl
into
and
xorl
out
dec
xchg
ds
addr16
lret
movsb
cmp
imul
cld
aaa
adc
js
cmpsb
ja
mov
adc
lea
dec
fnsave
pop
clc
aaa
nop
mov
add
test
mov
dec
movsl
pop
mov
lods
sbb
sbb
cmpl
popf
aam
inc
inc
add
and
sahf
in
add
xor
repz
cld
fbstp
out
pop
int3
iret
jb
icebp
mov
fsqrt
jmp
in
mov
aam
test
inc
dec
daa
jmp
sub
sbb
popa
mov
test
dec
stc
or
sub
pop
stc
mov
in
xor
xchg
mov
mov
sbb
mov
push
popf
sub
cs
mov
insb
push
lods
push
mov
mov
inc
bound
cmc
ficompl
xchg
mov
push
mov
iret
outsl
fmul
mov
sbb
add
adc
push
repnz
ja
jg
inc
inc
push
mov
icebp
outsl
inc
pushf
divl
in
repz
dec
pushf
fwait
mov
push
dec
inc
pop
out
filds
jecxz
sahf
adc
mov
push
int
inc
pusha
loope
xchg
jbe
mov
jb
inc
addl
stc
gs
les
inc
add
pushf
and
ret
les
inc
scas
mov
loope
push
bound
xchg
bound
jno
rorl
fstpt
insb
jle
cmpsl
mov
sbb
and
push
ja
sti
stos
arpl
lcall
or
jnp
push
xor
mov
dec
cs
cmpsl
mov
xchg
sub
xor
or
clc
xor
sub
sbb
and
imul
cmp
add
das
dec
jmp
inc
sahf
mov
jnp
cmp
movsl
push
fimull
cmp
out
push
lock
xchg
mov
pop
test
stos
je
jo
repnz
push
movsl
jns
adc
mov
hlt
dec
xor
loop
cmp
inc
fmul
outsb
repz
scas
ljmp
enter
popf
mov
dec
shll
push
adc
xchg
pop
stos
aad
lea
dec
icebp
adc
shr
jecxz
adc
pop
xor
cs
pusha
out
mov
add
mov
lret
lahf
scas
cld
xorb
ret
push
popf
add
sub
fwait
clc
out
mov
mov
add
sbb
inc
and
inc
leave
push
ficoms
or
aad
stc
scas
pop
cmp
jecxz
loopne
jl
push
sahf
pushf
mov
or
dec
bound
mov
adc
sti
mov
subl
lcall
xor
sub
pop
or
arpl
adc
lahf
out
lahf
jg
test
stos
add
mov
dec
and
and
aas
xchg
jnp
jle
pop
das
mov
in
mov
sbb
cltd
out
cld
mov
jge
stc
mov
mov
xchg
cmp
sub
loop
int
add
daa
dec
in
icebp
add
mov
jns
push
mov
js
fwait
fs
xchg
jmp
imul
jge
pop
shll
push
xchg
leave
lret
ljmp
xlat
push
fsubs
aad
push
daa
test
je
pop
ss
flds
movb
cmp
mov
fdiv
popf
adc
mov
sbb
lahf
mov
ja
and
or
dec
ja
adc
jno
nop
ljmp
jno
out
lods
addb
lcall
test
scas
hlt
cmp
mov
data16
dec
push
sbb
aaa
push
xor
sti
call
test
js
inc
push
inc
mov
and
scas
andl
push
or
mov
sbbb
clc
sbb
sbbb
xchg
cmc
or
push
sub
pop
push
out
pusha
or
fs
test
dec
aad
mov
jmp
stos
jle
fstps
push
dec
out
add
in
rcrb
pushf
pop
out
push
inc
in
into
xlat
imul
ret
loop
sbb
xchg
nop
adc
pop
shr
push
xchg
aaa
decl
notb
mov
rol
adc
jno
jg
xor
pop
pop
xor
ds
pop
or
dec
mov
movb
outsb
cwtl
lock
fdivs
dec
cmp
pop
nop
pop
and
sbb
jmp
dec
cmc
mov
xchg
lret
or
mov
mov
add
sub
adc
imul
aas
xor
clc
es
xchg
out
sub
add
mov
cmp
push
mov
fnsave
fdivs
xchg
xchg
xchg
pop
xor
in
xlat
cmpsb
xor
xchg
jge
inc
push
inc
cmp
jmp
popa
cmp
pop
inc
jae
shrl
cld
adc
fiaddl
inc
hlt
fsubrp
int3
insl
rcrl
in
inc
pop
pop
jae
mov
insb
pop
jmp
ja
incl
cmp
pop
fidivrs
and
push
test
or
stos
imul
xchg
and
insl
or
std
call
adc
add
lods
or
mov
das
mov
lock
adc
movsl
repz
and
sbb
cmc
out
jno
jne
cltd
pop
rcrb
xchg
jne
pop
addl
out
push
add
inc
fldenv
movsb
imul
mov
outsl
shll
push
popa
ret
inc
mov
rcl
xor
xlat
xchg
push
mov
pop
add
mov
lcall
jmp
xor
lret
mov
lret
sub
mov
jae
sti
cmp
pop
mov
repz
xchg
cmp
hlt
adc
add
lret
stos
hlt
es
pop
shll
xchg
sar
sbb
push
je
ds
fisubrs
push
sub
test
mov
outsb
mov
call
xchg
std
jb
sub
xchg
cmpsl
aaa
xor
push
shll
sbb
mov
lds
xchg
cmp
test
cs
cmp
insl
pop
sub
push
sbb
and
bound
pop
aad
pop
test
add
mov
mov
ror
xor
mov
sbbl
pop
jle
push
push
aaa
test
dec
inc
daa
jns
test
fistpll
lock
mov
scas
mov
in
das
das
sub
in
call
inc
loope
mov
lcall
pop
mov
lret
aaa
hlt
aaa
sbb
pop
xchg
test
lcall
or
jo
out
cmp
je
es
and
inc
xchg
mov
sbbl
jge
out
sub
push
push
jp
sarb
neg
iret
test
gs
xchg
and
and
sahf
popa
not
cmp
leave
and
cs
adc
movsl
xlat
pop
sbb
dec
mov
pop
repz
xchg
or
sub
sbb
sub
mov
hlt
adc
add
pop
out
push
sub
xor
cltd
push
jecxz
mov
xor
mov
aaa
cmp
xor
sub
popf
ret
pop
inc
or
lret
push
xorl
popl
inc
fidivrl
lock
arpl
push
xchg
cmpsb
cmp
test
sub
adc
add
insb
out
into
jmp
xchg
ja
jle
lahf
mov
mov
outsl
inc
cmp
mov
lret
cmp
icebp
jae
int
inc
jne
movsl
pop
das
mov
and
inc
add
cmpsb
pop
push
movsl
ret
sub
adc
and
jle
cld
inc
aas
sub
sbb
ret
pop
jg
and
cld
and
and
inc
lods
shlb
out
in
push
sbb
mov
mov
xchg
lea
rcr
inc
test
arpl
push
fs
shll
aam
xor
xchg
dec
mov
lock
outsb
jle
in
jb
pop
and
es
in
ret
js
sub
pop
cmp
vunpckhpd
stc
ss
xor
rorb
fmuls
loopne
push
test
mov
inc
icebp
inc
and
lds
idiv
dec
pop
add
mov
inc
pop
mov
das
inc
es
xor
es
or
jns
data16
ljmp
dec
out
mov
aaa
xchg
xor
sbb
imul
mov
pushl
and
adc
xor
ja
jb
gs
and
jae
bound
cmp
mov
outsb
hlt
cmc
mov
push
ja
idiv
lahf
dec
or
mov
and
push
sahf
leave
ljmp
mov
lret
cmp
lcall
mov
fs
fbstp
pop
push
sbb
mov
push
push
leave
mov
jmp
sti
test
imul
negb
push
push
notl
cltd
pushf
outsl
xchg
xchg
out
jmp
xor
pop
and
push
add
cli
jle
std
push
insb
ret
push
mov
pop
fwait
inc
pusha
and
xchg
mov
mov
lock
int
xchg
adc
movsl
push
mov
mov
adc
mov
adc
jno
lret
or
push
or
repnz
ds
fcomps
jecxz
dec
sbb
adc
aaa
jne
jp
shl
and
push
lea
xchg
enter
in
cmp
test
jl
shlb
inc
das
pop
mov
dec
imul
pusha
push
leave
scas
aad
imul
jp
cmp
es
iret
mov
and
mov
inc
dec
ret
adc
inc
inc
cltd
sbb
and
outsb
inc
fcompl
outsb
xor
ja
adc
adc
adc
xchg
leave
lahf
mov
and
push
inc
adc
sbb
shlb
mov
push
in
daa
pop
mov
mov
sub
or
and
daa
in
or
inc
fistpll
pushf
loopne
jae
mov
in
les
and
mov
xor
jl
and
mov
xchg
mov
pmaxub
out
dec
and
in
inc
scas
dec
cmp
mov
scas
icebp
sahf
mov
test
cmp
mov
inc
test
sub
nop
mull
repz
aad
sub
dec
xchg
mov
pop
les
jae
lcall
push
jl
lods
cmp
dec
sbb
push
jg
or
jbe
sub
push
cmpsb
pushf
fmuls
sbb
lcall
inc
lods
jg
xor
sbb
xor
hlt
cmpsl
xchg
inc
jo
mov
hlt
or
mov
jbe
clc
sbb
pusha
adc
ret
pop
stos
xor
rol
push
mov
or
insb
and
cmc
pop
jecxz
jmp
aam
mov
cmc
dec
cwtl
testl
into
push
scas
test
xor
out
jnp
es
movsb
jae
sub
enter
mov
mov
pop
adc
mov
add
sub
push
push
out
sub
and
stc
adc
xlat
call
mov
pop
lock
scas
mov
mov
cmpsb
xlat
mov
cli
mov
cs
xchg
cli
pop
dec
mov
push
cld
or
jp
lock
sbb
or
jnp
int3
imul
movsl
data16
subl
or
icebp
decb
repz
pop
rolb
popf
add
adc
sub
or
jo
sbb
push
sahf
mov
popf
pop
xchg
push
ret
sub
adc
out
pushf
in
jle,pn
mov
push
mov
stos
jl
inc
fisttps
popa
stc
std
leave
sbb
cmp
dec
call
xchg
jmp
mov
cld
int3
sahf
into
inc
pop
mov
ret
mov
mov
mov
adc
mov
cltd
cwtl
dec
pop
and
lret
sbb
pop
nop
popa
out
xor
mov
stos
xchg
or
cs
ret
movsb
push
lcall
bound
adcb
lea
jle
pop
push
inc
mov
in
sub
push
scas
jmp
in
xchg
adc
pop
mov
mov
xchg
out
adc
nop
jle
ret
mov
jnp
xlat
mov
or
push
pushf
add
cmc
or
push
clc
and
idiv
test
in
mov
add
jae
or
jge
iret
lock
ficoms
lods
mov
sahf
xchg
sbb
repnz
inc
movsl
lods
lahf
xchg
cli
xchg
dec
scas
dec
sbbl
bound
and
jecxz
insl
push
xchg
inc
fwait
stos
aam
inc
mov
icebp
scas
pusha
xchg
test
xor
cwtl
jbe
ret
jnp
push
ja
test
outsl
wbinvd
push
and
push
dec
mov
ret
mov
lods
cmp
fnstenv
filds
cmp
inc
nop
int
int3
push
push
mov
or
icebp
push
sbb
enter
mov
pop
fistps
and
mov
pop
mov
add
in
pop
pop
xor
roll
lahf
dec
fs
dec
enter
inc
mov
inc
repnz
adc
adc
gs
or
dec
and
mov
dec
push
dec
push
mov
sub
sub
outsl
pop
push
out
mov
adc
dec
pop
fdivrs
test
cwtl
nop
xchg
les
stos
fwait
daa
push
mov
mov
aas
mov
mov
lods
push
les
xor
jmp
jg
fldcw
enter
dec
ret
jo
frstor
dec
add
xor
in
mov
and
jae
xor
mov
sbb
popa
pop
or
leave
pop
dec
xor
mov
cltd
imul
mov
shrb
mov
push
adc
test
cmp
outsb
jbe
ja
rol
ljmp
lea
adc
data16
or
pushf
mov
pop
mov
sahf
enter
xor
addr16
je
ror
mov
fcomi
movsl
cs
and
addr16
das
adc
jg
or
push
js
rclb
push
das
jle
dec
dec
aam
add
sar
and
fs
mov
bound
adc
into
cmpl
mov
lea
push
ds
call
add
push
jnp
scas
data16
or
lods
sub
in
inc
push
mov
add
dec
stos
add
add
ret
arpl
test
js
and
add
addr16
movsl
sbb
lcall
dec
jae
push
mov
popa
leave
xor
adc
dec
lcall
in
xchg
lods
jge
or
hlt
enter
push
pop
pushf
push
push
lret
roll
lods
je
sub
jnp
add
dec
ljmp
add
xchg
into
sbb
out
add
je
jb
sub
outsb
sub
pop
push
ss
or
les
jge
xor
sub
lods
stos
mov
shrl
pop
xchg
mov
mov
mov
mov
jmp
loop
idivl
cmp
rcll
sub
repz
sbb
push
or
and
jnp
pop
filds
insb
jnp
lds
std
sarb
mov
push
shlb
mov
jp
push
lahf
lea
cmp
inc
or
cmpsl
inc
add
call
adc
js
xchg
mov
mov
push
dec
into
scas
popl
aam
cwtl
and
js
push
repnz
repz
push
or
shl
mov
scas
or
dec
int3
mov
dec
rorl
test
xchg
sub
push
add
xor
push
das
jge
and
jecxz
xchg
mov
fs
inc
add
push
xchg
sbb
int
xor
out
xchg
xchg
cld
xor
push
loop
sbb
mov
sbb
hlt
pop
jmp
in
xor
cli
add
or
popa
pop
sbb
push
data16
ss
adc
mov
mov
jp
jl,pt
xor
add
mov
movsb
mov
cmp
nop
lods
sbb
sbb
sti
leave
daa
imul
dec
xchg
mov
jne
pushf
inc
add
pop
xchg
out
xor
xchg
sti
cmp
mov
scas
add
ficompl
pop
mov
xor
pop
xchg
pop
mov
sub
dec
xchg
sti
arpl
popf
fistpl
mov
jo
jae
mov
xor
mov
lahf
mov
sahf
in
jne
jmp
stc
das
sti
movsl
in
pop
mov
or
outsl
mov
imul
dec
js
mov
jle
test
gs
inc
ja
and
pop
into
push
xchg
jbe
adc
test
add
jg
into
cmp
sbb
fsubr
fisttpl
xchg
into
and
repz
xchg
push
std
adc
mov
cmc
mov
sbb
jl
xchg
enter
and
rcrl
fstpt
icebp
and
adc
adc
jno
mov
aam
and
or
inc
outsl
push
leave
or
fwait
jo
popf
adc
push
xchg
fildll
int3
or
int3
xor
or
mov
scas
jns
dec
mov
pop
add
stos
mov
jbe
jmp
in
stc
fs
pop
push
ljmp
or
pusha
mov
and
jb
mov
dec
lret
xor
cli
loop
cmp
pop
jp
je
pop
mov
mov
push
cwtl
mov
xor
js
sbb
andb
and
adc
insl
shll
ss
jnp
xor
jl
cmp
dec
or
mov
pop
pop
aas
mov
addl
fnstcw
dec
jo
pop
or
and
pushf
lock
jge
testl
cmpsb
lods
cmpsl
push
push
pusha
fxch
lcall
xchg
sub
jle
les
aad
jp
aad
jge
or
push
mov
stc
add
outsl
ds
sub
inc
sbbl
mov
adc
mov
and
sti
pop
jecxz
orb
pop
jge
sub
repz
cmp
subps
dec
dec
push
les
cwtl
rcl
fisubrl
divb
clc
mov
mov
mov
icebp
sti
daa
mov
mov
sub
add
lods
cmc
jmp
mov
cmp
ret
js
inc
mov
sbb
ror
mov
loopne
inc
inc
js
test
jnp
dec
imul
dec
jno
pusha
xchg
repz
add
mov
out
ss
test
push
jb
in
mov
mov
das
cli
xchg
fidivrs
cmpb
lret
mov
mov
adc
inc
icebp
aam
inc
adc
cld
pop
mov
or
xchg
lds
pushf
dec
xchg
sub
adc
jecxz
stos
imul
rcr
leave
cmc
xchg
mov
pop
push
out
push
jo
mov
mov
lds
stos
lret
cltd
jl
data16
ret
mov
in
in
test
xchg
ja
mov
cmpsl
mov
out
imul
push
out
jnp
aaa
cmp
sbb
outsl
stc
js
imul
add
movsl
xor
or
js
into
jbe
cmp
push
jg
js
add
test
mov
push
gs
bound
pop
jmp
xor
aas
loopne
push
adc
cmp
aas
mov
and
add
adc
mov
xchg
inc
fisubs
push
addr16
inc
stos
aaa
cld
push
sbb
mov
jge
std
and
pushf
call
nop
jle
pop
in
inc
mov
pop
mov
xor
jns
jbe
xchg
fwait
bnd
xchg
push
pop
sti
push
xchg
inc
ljmp
jnp
rcrb
loopne
mov
movsl
dec
lds
sub
icebp
jp
in
sbb
popf
lcall
pop
lods
in
and
insb
adc
mov
jge
push
push
pushf
add
or
dec
rcl
sub
push
xchg
enter
test
jle
fsubrs
push
mov
shlb
mov
sbb
insb
jl
adc
mov
aaa
pop
lock
fisubl
mov
adc
int3
stos
inc
jnp
xchg
test
ret
jmp
push
cmp
inc
mov
ret
pop
adc
dec
aad
test
ret
pop
dec
cmp
shr
lock
cmp
xchg
adc
std
mov
inc
cmpl
push
fcompl
jne
lcall
mov
push
imul
or
cltd
push
lea
mov
loope
popa
and
mov
mov
add
lahf
and
or
cmpsl
popa
inc
leave
jne
decb
sbb
aam
or
fldenv
clc
in
ret
movsl
outsl
lods
dec
adc
insb
test
add
lcall
add
jp
xchg
leave
mov
mov
inc
in
pusha
jo
pop
or
dec
gs
lds
lcall
dec
lods
outsb
inc
adc
add
add
push
cltd
lret
mov
out
mov
in
fsubrl
rclb
aas
jle
stos
inc
adc
inc
push
pop
mov
lret
lret
inc
scas
pop
or
outsl
cmpsl
mov
rcrb
and
inc
adc
loop
iret
sbb
test
adcb
push
scas
and
lret
push
sub
cmp
in
mov
sub
inc
aam
adc
sahf
dec
jne
bnd
dec
test
mov
and
out
mov
insb
xchg
test
jae
jne
pop
dec
add
mov
inc
inc
arpl
lahf
outsb
push
push
mov
mov
push
mov
fstl
sub
aam
leave
and
xchg
notb
pop
cmp
sbb
dec
icebp
je
xchg
push
and
ret
movsl
pop
lds
jne
adc
add
dec
push
rorb
jmp
fdiv
xlat
add
add
jnp
and
jns
add
and
inc
mov
jb
pop
dec
jne
fucomp
divb
pushf
enter
inc
sub
clc
dec
sbbb
mov
rorl
xor
xchg
xchg
and
adc
push
aaa
test
xor
cld
xchg
xor
bound
std
xchg
sbb
and
std
cmpsl
push
imul
dec
cmp
subl
cs
push
sub
sub
ljmp
cmc
lahf
jle
sti
dec
insl
push
xchg
aaa
xchg
pusha
dec
or
cmpsb
cmc
jmp
push
shr
sub
imul
ret
int3
pop
cld
ficomps
lods
inc
push
mov
push
push
aam
jbe
mov
push
lcall
out
imul
das
in
int3
daa
add
mov
jb
int3
sub
inc
and
inc
push
iret
pop
std
movsl
stc
push
mov
shrb
xor
lcall
mov
inc
inc
loope
nop
mov
in
push
jnp
sub
inc
jae
pop
mov
rcrb
mov
gs
and
jae
dec
loopne
dec
add
adc
jns
push
rep
lea
aas
mov
mov
xchg
and
xor
movsb
jnp
in
aam
stos
mov
xchg
adc
xor
sbb
rclb
push
inc
sub
push
ja
add
popf
inc
jge
or
mov
bound
sbb
or
aas
sub
sub
jne
inc
xchg
jg
divl
pop
sahf
lret
jp
push
pop
push
jno
fs
jo
pop
scas
out
jmp
repz
xor
inc
ret
sbb
out
add
jg
ss
push
mov
sub
fdivrl
ficoml
js
cmpsl
decl
nop
fbld
xchg
ljmp
mov
dec
enter
scas
outsb
cld
sbb
pop
jae
cmpsb
cmp
add
xor
lcall
xlat
icebp
xlat
dec
adc
push
xor
into
mov
nop
aad
int
pop
subb
and
repz
ret
mov
test
je
pushf
mov
sub
mov
std
push
ja
xchg
lods
add
lods
sbb
lcall
cmp
ljmp
dec
ret
iret
mov
sbb
lods
push
testl
xchg
xor
inc
ljmp
leave
lahf
into
inc
jge
jge
les
add
dec
loopne
test
mov
inc
or
xchg
ja
add
adc
push
cld
jnp
fsubrl
popf
fimull
push
or
xor
mov
mov
mov
push
lods
orb
sarl
dec
ret
fsubrl
and
arpl
jecxz
jbe
jg
mov
push
add
pop
hlt
cwtl
cltd
repz
out
and
int
sub
sub
movsl
adc
dec
mov
mov
mov
stos
ss
xchg
hlt
inc
std
push
in
and
cltd
cmp
popa
out
je
ret
push
push
adc
adc
sbb
lret
leave
outsl
push
inc
adc
into
stc
sbb
fimuls
adc
inc
jge
pop
inc
and
sub
xchg
aam
in
out
mov
inc
mov
add
aaa
mov
cmp
addr16
mov
jp
and
and
or
pop
mov
cld
sbb
inc
add
jbe
sub
jg
mov
testl
dec
loopne
pop
and
fcomp
inc
dec
pop
dec
outsb
sub
jae
dec
cmp
insb
mov
dec
sub
lret
sub
imul
or
mov
mov
loope
loope
sti
mov
mov
arpl
xlat
adc
loop
sub
addr16
xor
or
xor
lods
pop
dec
jnp
iret
push
inc
jle
cltd
or
add
mov
inc
shrl
clc
jae
push
push
pop
jl
sub
jge
popa
test
jb
outsb
pop
cmp
popf
lret
cmp
cmp
xor
and
mov
inc
popf
inc
xchg
nop
mov
rorb
shlb
repnz
mov
sbb
jno
adc
outsl
popa
out
mov
pop
loopne
inc
rorl
inc
aaa
sub
mov
cmp
cmpsb
repz
push
jb
in
xchg
mov
rolb
jo
jae
mov
aas
adc
ret
pop
fildl
xlat
inc
xor
orb
in
jns
pop
mov
out
inc
repz
stos
pop
in
bound
ret
inc
pusha
inc
push
adcb
das
cmpsb
sub
mov
aaa
stos
fisubs
int3
cmp
lock
test
hlt
mov
insb
scas
pop
jle
mov
cld
out
jmp
fistpl
dec
pop
dec
fmull
std
lahf
lea
push
inc
adc
es
loope
inc
jp
ja
adc
sbb
lret
ret
lods
jp
inc
out
sbb
ljmp
and
ljmp
xchg
stc
push
dec
mov
rcrl
fstl
jl
sub
fistl
lret
movsb
and
jns
subl
dec
std
xchg
out
dec
push
adcb
icebp
xchg
jl
lcall
iret
jl
xchg
add
sbb
cmpsb
push
scas
adc
shrb
and
push
push
jmp
cltd
shl
es
pusha
adcl
jge
mov
push
js
mov
jno
push
fistpll
jle
push
cli
out
orl
inc
jnp
dec
scas
out
out
icebp
adc
push
in
sti
jp
test
jge
jge
scas
daa
xchg
mov
dec
mov
adc
fisubrs
mov
lret
mov
sti
je
add
pop
pop
push
popa
rcrl
jne
sbb
dec
cmp
mov
or
lock
lds
popa
test
and
cli
and
iret
fisubrl
aad
cmpsl
pop
inc
sbb
jbe
mov
lcall
mov
cmpb
insl
push
divl
lock
pop
mov
nop
in
lcall
or
stos
enter
outsb
xchg
jmp
mov
inc
mov
les
and
lods
sbb
inc
lea
pop
pop
jnp
xor
cmp
add
pop
mov
mov
pop
mov
ljmp
adcl
and
lret
xchg
pusha
xchg
mov
jge
push
ja
xchg
cmc
cmp
shll
adc
adc
push
in
sti
fwait
sbb
mov
push
outsl
repz
mov
xor
xor
cmpsb
mov
lret
dec
fisttpl
sti
jne
cmc
shlb
lods
rorb
mul
adc
int3
sbb
jns
sbb
jbe
into
add
and
adc
pop
js
pop
sub
xor
sbb
xchg
clc
push
out
mov
adc
fst
or
inc
pop
sarl
cmp
mov
jl
pop
push
sub
insb
ficoml
add
das
push
jae
cmp
mov
lock
adc
adc
inc
dec
mov
inc
orl
pop
pop
inc
adc
cs
test
int3
mov
push
js
lret
pushf
and
ret
jbe
or
shrl
pop
int3
enter
js
push
cltd
pop
pop
mov
pop
sbb
arpl
cwtl
adcl
inc
loopne
inc
add
push
or
sub
mov
das
cmp
dec
mov
lods
dec
and
and
jb
add
iret
mov
in
lock
dec
dec
adc
ljmp
jbe
or
rolb
int
sahf
ss
shrb
in
pusha
test
xchg
jmp
sbb
adc
fstl
adc
mov
cs
xchg
and
jge
mov
add
stc
iret
pop
call
or
fadds
clc
std
scas
cmpsl
imul
bswap
sub
pop
xchg
movsb
jge,pn
and
jns
mov
mov
stos
inc
adc
pop
or
out
or
call
xchg
lcall
push
inc
xor
xchg
shrd
hlt
daa
aas
mov
jg
mov
mov
sub
in
add
in
sub
pop
out
gs
or
out
fwait
or
in
mov
push
lods
lods
das
nop
pop
es
in
test
add
mov
es
mov
or
jnp
repnz
or
sub
pop
sbb
jns
lock
fstps
add
xchg
cmp
xorb
cld
popf
xor
iret
popa
sub
pop
into
mov
das
dec
int
rclb
rorl
leave
dec
arpl
xchg
imul
jmp
adc
cltd
pop
dec
stc
jge
dec
in
fidivl
test
pop
out
mov
jecxz
or
sbb
pmuludq
mov
sub
dec
pop
or
clc
sub
jne
cmp
inc
js
push
out
inc
jp
aas
and
xor
andb
push
mov
mov
push
notl
or
hlt
jo
mov
rclb
cmp
aas
outsl
jmp
int
movsb
les
out
ja
popa
pop
pop
arpl
icebp
fidivl
insl
out
pop
dec
aad
xchg
aaa
xchg
repnz
and
or
jne
int
mov
and
cmpsb
out
fsubrl
sbb
jp
sti
cmp
xchg
cmp
fidivrl
jge
mov
iret
jl
inc
mov
push
jnp
loopne
jnp
outsl
out
mov
mov
leave
mov
mov
imul
lcall
loope
lcall
lock
gs
aas
leavew
push
push
sbb
pop
lds
push
sub
mov
sub
addb
adc
xor
sub
jne
or
test
add
dec
shll
inc
test
iret
mov
mov
xor
and
adc
lock
and
inc
outsl
jnp
cli
fisttps
out
or
xchg
and
popf
or
sarl
xor
mov
lods
leave
fmul
in
les
std
enter
cmc
fistpl
push
push
loopne
repnz
into
adcl
push
cmp
popf
pop
int
sub
ja
cli
test
insl
mov
jne
aad
int
inc
std
jmp
aam
xchg
and
fs
out
loop
repnz
dec
lea
dec
xor
lahf
mov
cmp
les
aad
inc
pop
mov
push
insl
xor
lds
not
or
xchg
xor
add
loop
mov
cmpsl
lock
shr
mov
add
mov
movsb
adc
mov
or
cli
mov
in
and
pushf
push
dec
loope
jge
push
shlb
sub
xor
xor
xchg
rcl
imul
xor
pusha
mov
sbb
inc
inc
cmc
icebp
lret
cmpsl
fldt
mov
push
adc
iret
cld
adc
test
pop
lea
or
subl
js
int
pop
push
out
notb
scas
pop
pushf
push
jno
ret
jne
adcl
sar
xor
pop
sub
cmpsb
nop
add
pop
add
je
mov
movsb
push
in
push
scas
test
sbb
mov
pop
subl
dec
xlat
mov
icebp
lahf
cs
in
xchg
xor
mov
jl
lock
jge
es
push
sub
call
lods
dec
push
jno
loope
inc
push
jge
xchg
std
shrl
push
fwait
inc
gs
xor
inc
xlat
out
scas
pop
gs
mov
cmpsb
addr16
shll
push
lods
iret
insl
dec
ss
test
dec
inc
mov
cli
sti
mov
mov
daa
in
push
fsubs
aas
imul
sub
rep
and
loopne
adc
addps
dec
imul
icebp
mov
push
iret
int
out
out
lret
push
mov
testl
in
lcall
xchg
xchg
rclb
xchg
jb
and
scas
out
aad
sub
sub
xlat
push
incb
ds
ds
out
testl
sbb
out
ds
pop
stos
std
cwtl
push
int3
cmp
mov
push
sbb
pop
bound
jbe
pop
out
push
cld
test
lea
mov
ds
cli
mov
or
lahf
dec
dec
mov
in
cmp
push
sub
or
out
dec
fucomp
leave
push
pop
rclb
or
inc
stos
das
add
pop
faddl
cld
jo
sbb
out
pushl
insb
sbb
iret
push
xchg
lret
mov
add
push
add
popa
cld
jne
mov
sub
loope
popl
bound
sbb
out
insb
or
mov
sbb
cltd
aaa
adc
xor
inc
lea
test
es
inc
leave
stos
clc
mov
test
xchg
je
push
mov
mov
test
ret
sbb
cmp
push
mov
inc
mov
inc
push
push
enter
adc
sub
int
adc
in
in
cld
inc
mov
jns
sahf
adc
mulps
sbb
pop
or
sbb
cmp
xchg
insb
pop
int3
xor
lea
mov
cmp
adc
push
push
add
adc
sbb
adc
in
mov
shl
adc
push
cmp
cmp
lahf
aas
sub
into
mov
dec
sbb
mov
test
dec
lds
xlat
xchg
sahf
mov
mov
add
mov
dec
cmp
jg
sub
cmpsb
cmp
sub
push
pop
pop
imul
cmp
xor
pop
ljmp
mov
pop
popf
pop
and
ret
and
fsubrs
sbbl
lret
adc
iret
push
adc
xor
dec
rclb
dec
mov
in
pop
xor
fnstcw
adc
jns
xchg
mov
jecxz
jle
mov
adc
rcl
jmp
mov
pop
lods
push
sbb
adc
int3
dec
adc
jp
movsb
mov
out
mov
cmp
lods
mov
sub
pushf
pushf
shll
divb
inc
aaa
imul
fisttpl
loope
jle
and
adc
fisttpll
jno
icebp
xlat
jmp
dec
addr16
in
ljmp
inc
test
rcr
js
mov
lar
xor
mov
dec
dec
cwtl
or
aaa
std
mov
sti
add
in
aas
test
cltd
scas
jb
movsb
into
lcall
pusha
push
or
mov
mov
sbb
call
mov
pop
jne
lcall
shrb
adc
loopne
rcrl
jne
xor
xor
cld
jmp
sbb
out
mov
ja
push
jae
add
push
xor
xor
aaa
cld
xor
pop
rol
mov
outsb
jmp
arpl
hlt
push
jb,pt
jne
addb
jbe
and
push
in
arpl
movsb
aaa
push
insb
movsl
les
fidivs
aad
mov
loopne
ret
mov
push
mov
sbb
pop
in
repz
std
mov
lret
ljmp
jle
pop
sbb
pushf
cmp
shl
and
jnp
xchg
dec
sbb
inc
mov
movsl
xchg
add
adc
or
inc
mov
divl
arpl
xchg
xlat
pop
cmp
add
jl
adc
fsubl
or
inc
cmp
jo
push
push
push
rolb
pop
test
or
sub
or
pop
lods
pushf
pop
flds
and
push
pop
je
adc
xchg
pop
cmpsl
cmp
xor
sbb
sub
mov
mov
sub
xor
movsb
pop
fst
xor
shrb
mov
lods
cmpsb
imul
push
or
rol
jecxz
mov
xor
test
push
push
psadbw
pop
mov
in
push
cmp
fwait
stc
ds
lcall
mov
add
repnz
sbb
jp
dec
adc
loop
xchg
popf
aaa
pop
mov
push
ret
jo
jb
aam
cmp
adc
xchg
cmpb
repz
enter
fdiv
rorl
in
movsb
push
leave
cmpsb
out
stos
dec
frstor
out
push
jne
and
pop
pop
push
jnp
shr
addb
and
out
cmc
jle
push
mov
push
call
push
fisubl
xchg
in
xchg
mov
push
adc
rorb
xor
jns
pop
and
mov
xlat
int3
inc
mov
movsb
inc
pusha
xchg
rclb
subl
das
roll
inc
dec
inc
fiaddl
pushf
loopne
cmp
push
mov
notl
mov
sub
enter
xor
into
push
mov
mov
imul
fistpl
cwtl
lret
pushf
scas
repz
dec
fnstcw
mov
stc
and
out
dec
fwait
jecxz
dec
js
out
daa
push
mov
cmp
sti
mov
je
push
and
fidivl
js
xchg
mov
outsl
insb
push
jp
fbld
or
fisubrl
sti
inc
dec
idiv
scas
lcall
mov
in
arpl
imul
and
dec
adc
xor
std
stc
inc
pop
jae
sbb
add
mov
add
cmp
sub
adc
fmuls
rcll
pop
movsb
dec
fldenv
xchg
dec
ss
adc
add
jbe
push
cmp
aad
in
sbb
cmpsb
push
dec
sbb
xor
mov
lret
jl
in
lret
sub
sub
push
pop
or
das
push
mov
test
inc
pop
scas
mov
stos
jge
push
mov
push
rorl
in
fadd
loope
or
jb
xlat
test
aad
fstpl
mov
xchg
shlb
js
mov
mov
or
scas
mov
pop
mov
es
aas
shlb
cltd
fcoml
sahf
aad
ljmp
out
xchg
sbb
mov
jg
scas
jae
and
insb
and
jno
mov
cltd
add
cmc
mov
movsb
aam
mov
andl
repz
aaa
fcomps
xor
call
test
iret
dec
pop
sbb
and
mov
cmp
leave
or
aaa
mov
lds
push
push
rcr
pop
sti
add
lea
cltd
into
js
push
daa
js
addr16
mov
push
mov
add
mov
dec
pop
xor
xchg
or
xorl
inc
jb
sbb
cltd
lods
jb
pop
jns
jae
icebp
out
lret
jns
and
xchg
pop
cmp
xchg
pop
hlt
loopne
popa
js
mov
xchg
pop
sub
mov
inc
inc
add
inc
cmp
fisttpl
inc
or
je
in
test
pop
mov
outsl
jmp
add
into
jbe
mov
sahf
xor
pop
mov
fwait
rcrb
test
pop
xor
sbbl
loop
js
cs
xchg
loope
aam
mov
shlb
data16
ret
ficoms
add
adc
pop
jle
pop
das
push
inc
fwait
hlt
sbb
in
mov
stc
add
lock
ret
jg
lods
inc
mov
inc
aas
imul
add
fiadds
or
mov
dec
mov
out
mov
jmp
mov
push
leave
jle
inc
dec
sbb
sub
pop
fisubl
cmc
sub
mov
jmp
mov
inc
popa
cltd
movl
insb
pop
je
sbb
popa
jg
arpl
pop
jne
dec
cmp
movsb
and
adc
clc
nop
sbb
mov
fcoml
mov
fcomps
inc
bnd
jmp
cmp
addr16
pop
add
dec
repz
shlb
or
push
vphadduwd
les
jmp
dec
sbb
add
ja
clc
int3
push
pop
dec
xchg
hlt
add
lahf
loopne
mov
push
inc
push
jno
pop
andb
fiadds
scas
mov
jnp
xchg
add
nop
sbb
dec
cmpsl
mov
mov
rcll
adc
fldl
aam
lahf
jno
dec
jbe
insl
mov
inc
imul
lods
sub
mov
arpl
inc
dec
mov
add
add
ss
das
ficoml
dec
pop
mov
jb
ds
push
xchg
pop
sub
push
sbb
ds
repz
push
in
mov
mov
stos
xor
sahf
adc
and
xchg
pop
popf
ja
push
fistl
fidivrs
fcoms
xor
sub
mov
mov
or
adc
dec
mov
int
xchg
es
fsub
pop
ret
push
xor
mov
repnz
out
sbb
mov
cmpsb
xchg
ret
leave
lahf
xchg
lahf
in
mov
jp
push
push
lret
andb
mov
call
dec
add
iret
xor
into
jle
adc
sbb
lret
jge
mov
imul
mov
push
inc
push
xor
push
adc
jle
pushf
jle
adc
lret
rcll
sbb
mov
movsb
jg
jl
push
pusha
clc
ret
repz
jne
add
mov
jmp
and
jae
xchg
xor
push
push
sub
mov
loopne
push
stos
sbb
lret
aaa
push
mov
sbb
gs
loop
jo
jle
decb
test
mov
sub
cmpsl
outsl
sub
sbb
adc
and
mov
push
in
mov
scas
sbb
iret
into
or
pop
add
stos
out
pop
push
js
adc
dec
std
sbb
lahf
in
pushl
imulb
repz
es
xchg
adc
push
movsl
daa
cltd
sahf
fldpi
shrl
aam
pop
or
xchg
sub
out
lea
test
movl
lea
xchg
inc
out
push
pop
xchg
sbb
inc
neg
insb
jle
cmp
or
movsb
xchg
imul
sbb
adc
sub
stos
aad
ds
jns
popf
mov
and
or
outsl
dec
iret
fisubrl
mov
aaa
mov
dec
cmp
stos
sbb
hlt
imul
loope
jmp
jae
repz
adc
mov
inc
mov
leave
dec
movb
movsl
jl
outsb
rcrb
ljmp
and
imul
jb
xchg
repz
dec
enter
cmp
in
jno
cs
adc
xor
xor
fs
sti
xor
fdivl
aad
mov
mov
outsb
jae
lret
lret
jo
addr16
arpl
mov
cmp
mov
lahf
or
in
jge
rcrb
push
mov
andb
in
lock
dec
or
jne
push
sbb
jle
push
nop
mov
add
pop
jecxz
xor
add
jmp
rcll
and
rcrl
inc
adc
mov
push
mov
xchg
jns
popf
add
push
jcxz
fistpll
loop
cmp
mov
rorb
sbb
adc
out
fists
xor
mov
and
mov
lods
leave
jb
inc
xchg
jg
popf
inc
push
dec
test
out
xchg
imul
std
and
mov
or
adc
test
rcll
mov
jo
rorl
mul
xchg
adc
loop
xchg
jne
jmp
cmp
daa
fs
test
push
push
xlat
sub
xor
mov
jb
fidivrs
imul
mov
idivb
jno
cmpsb
lods
push
stc
xor
jmp
jmp
xchg
into
sahf
scas
xchg
mov
sahf
pop
into
add
js
xchg
out
fidivrl
mov
mov
add
testb
push
shlb
rorb
mov
das
pop
rorb
xchg
xchg
or
mov
ret
lock
dec
jnp
and
ret
dec
jnp
imul
insb
xchg
sbb
jecxz
cmp
push
fcmovnu
add
adc
cmp
inc
aaa
and
cmc
popa
adc
xchg
sbb
cs
jo
jecxz
mov
jbe
mov
hlt
mov
sbb
fisubrl
push
js
and
sahf
into
js
ljmp
addr16
aam
test
mov
sbb
mov
lods
paddw
stos
pop
dec
dec
lcall
mov
addr16
fwait
push
ret
aaa
orb
test
subb
mov
adc
and
adc
xor
loop
xor
enter
stos
sti
cli
imul
jmp
mov
mov
andb
pop
mov
push
scas
insb
mov
mov
int3
push
rolb
in
sbbl
ljmp
addr16
stos
push
xchg
mov
mov
aaa
out
jo
scas
mov
lods
andl
out
dec
fwait
outsl
nop
out
ret
into
sbb
test
jae
clc
xchg
inc
into
dec
add
stos
ss
stc
jmp
pop
mov
mov
push
push
jnp
dec
sahf
xchg
push
mov
mov
js
dec
sub
push
pusha
lods
sarl
std
mov
stos
test
lea
test
lock
loopne
dec
sub
lds
sbb
sti
push
jl
xor
xchg
adc
adc
xor
push
lret
xchg
pop
push
mov
imul
jo
xchg
shll
bound
pop
mov
lret
inc
lods
fistl
imul
out
mov
popf
test
int
pop
jnp
adc
iret
xchg
cmp
add
sub
shl
data16
xor
mov
adc
fs
outsl
xor
cmpsb
mov
lret
cli
jmp
mov
mov
mov
aam
sbb
lret
mov
or
and
cmc
jae
inc
push
clc
insb
cs
dec
jnp
and
or
into
pop
jmp
adc
push
cmc
clc
hlt
or
cmp
in
popa
push
cli
sub
and
mov
fstps
pop
mulb
adc
xor
shll
or
ja
es
insb
push
add
dec
cmp
mov
gs
repnz
adc
push
test
pop
xchg
pop
mov
or
movsl
push
inc
jbe
pop
icebp
or
pusha
dec
jo
xor
xchg
test
cmp
fsubr
ret
cli
fiadds
mov
or
xchg
cmp
or
add
fdivl
mov
loope
pusha
loop
pop
jae
sbb
mov
cmpsl
pop
inc
cli
mov
incb
push
inc
in
mov
ss
jg
mov
ret
jg
adc
xor
mov
mov
or
xchg
iret
lret
push
cs
lods
jle
int
std
insb
inc
inc
int3
int3
pop
jmp
iret
fstps
jbe
adc
aam
inc
add
mov
pushf
test
mov
fsubl
mov
notb
pop
int3
xor
or
iret
in
fsincos
mov
lods
lcall
xchg
add
sbb
lods
ds
xchg
jno
sbb
and
push
movsb
or
cmp
mov
shl
lret
jb
sbb
mov
add
jns
push
sub
lahf
sysret
shlb
imul
mov
aad
int3
mov
fimuls
pop
push
mov
sub
out
test
scas
dec
leave
fsubl
sbbl
and
mov
push
popa
stc
in
cli
test
sub
cmpb
nop
mov
das
dec
push
popf
lcall
xchg
xchg
es
fcompl
incl
push
addr16
ss
ljmp
lods
out
aas
in
inc
into
mov
stos
lds
sbb
das
push
sar
dec
inc
inc
hlt
pushf
cmp
pop
fldt
stos
mov
jbe
leave
jge
cmc
sub
mov
pop
lea
sbb
push
cmc
clc
xchg
ret
stos
shll
loop
sbb
xlat
lods
das
inc
xor
insb
jne
xor
cltd
dec
std
fisubrl
out
and
aad
jg
add
sbb
push
aas
mov
pop
cmp
inc
dec
fwait
lcall
addl
dec
ja
stos
pop
adc
jae
add
lret
add
sub
mov
mov
dec
xchg
adc
inc
or
and
and
or
sbb
sbb
loop
xchg
mov
dec
mov
jp
adc
pop
jbe
bound
sbb
sbb
js
mov
cmp
imul
roll
add
sub
rcrb
jne
xchg
sbb
fcoml
cmpsb
cmpsb
sub
mov
xor
data16
sbb
lds
imul
dec
leave
div
movsl
sub
mov
push
test
and
or
stos
repnz
pop
pop
cs
loope
mov
inc
cmp
cmc
pop
mov
adc
mov
leave
or
in
lcall
push
shrd
cmc
inc
sub
bound
mov
adc
mov
lods
adc
xor
lret
push
add
jg
pusha
out
push
insb
sbb
mov
scas
push
enter
xchg
sbb
sub
lret
scas
lcall
sbb
test
ss
sbb
lds
out
cwtl
inc
xchg
cmpsl
shlb
add
loop
and
or
mov
jmp
rcrb
aam
gs
inc
int3
std
scas
gs
test
pusha
fldcw
xchg
out
mov
adc
aas
scas
icebp
jb
inc
nop
pop
sub
cmpsl
in
cmpl
imul
xor
pop
lret
or
mov
subl
mov
xor
andl
mov
jg
and
xchg
jmp
arpl
int
xor
xor
jl
mov
adc
test
lds
lret
ljmp
lret
adc
jg
aam
mov
shll
sub
push
lahf
cmc
out
dec
es
xor
stc
adc
jge
fcoms
mov
cmp
int
xlat
jb
cmp
test
mov
in
iret
lahf
pop
dec
push
sbb
cli
cmp
mov
loop
in
lahf
shl
pop
sub
pop
dec
daa
dec
xchg
incl
inc
pusha
mov
mov
pop
sub
outsl
lods
iret
sbb
jge
test
into
fsubl
fisttpll
int3
in
mov
inc
daa
jae
pop
push
inc
push
push
push
rcrb
cltd
insl
in
testb
dec
ss
dec
mov
or
test
sub
sub
mov
xlat
popf
and
jo
inc
or
xchg
lds
int3
aad
popa
xchg
lock
test
aas
sbb
sbb
movsb
movsb
fldl
jmp
gs
jne
mov
dec
pop
cmp
sub
mov
addl
cs
xchg
in
mov
inc
sbb
in
out
jmp
in
sub
ficoms
imulb
adc
xchg
outsb
sub
push
fimull
lods
shlb
jo
adc
mov
mov
mov
clc
andl
push
shlb
jb
lea
lea
sub
xchg
pop
and
aam
xchg
sub
xchg
fsubl
mov
mov
add
mov
fimull
lea
shll
pop
cmpb
jl
and
jl
pushf
mov
sahf
lahf
jbe
cs
aam
jno
xlat
loopne
lahf
in
clc
cmp
mov
add
nop
out
and
repnz
push
pop
movsl
xorb
sbb
push
sti
mov
jns
mov
mov
jmp
mov
lahf
aas
pop
cltd
pop
pop
cmp
cmp
mov
out
inc
sti
add
lock
and
stc
loope
adc
xor
dec
xor
cmp
mov
lahf
loopne
add
out
sbb
arpl
lds
test
fwait
jnp
int
orl
mov
push
addl
jne
fdivs
call
mov
sbb
mov
dec
andb
jle
mov
shrb
lds
jns
cmp
ja
mov
ret
pop
popf
cmpsb
iret
ficoml
cmovs
inc
mov
sbb
xchg
cmp
add
insb
ficompl
fiadds
fldt
pop
pop
mov
insl
xchg
and
push
filds
cli
stos
dec
ljmp
and
test
inc
lea
loope
lods
cmp
adc
dec
push
cs
add
mov
sarl
sbb
xor
rolb
pop
ljmp
sti
repz
mov
decb
mov
sbb
aad
jns
cmpsl
ficomps
dec
cs
add
jne
in
xchg
mov
popa
add
xchg
cmp
mov
lock
lahf
mov
shl
dec
sbb
adc
xchg
aas
hlt
orb
loop
dec
int3
or
das
sub
sbb
ret
xchg
mov
movsb
scas
add
repnz
sahf
sbb
lods
xchg
push
pop
jecxz
xor
fldenv
mov
push
faddl
shrl
sub
fucomip
xor
lret
push
jns
icebp
in
sub
dec
out
je
mov
mov
aam
add
ljmp
adc
cmp
or
xlat
test
notb
inc
cmc
adc
and
adc
mov
cmp
add
call
add
mov
dec
add
xor
fimull
dec
iret
ja
sbb
adcl
lcall
loop
in
bswap
jns
clc
test
xor
or
and
aaa
and
inc
xchg
jb
push
mov
lea
andb
ja
xchg
adc
je
inc
push
cmp
pop
jmp
xchg
sbb
ret
xchg
cmp
mov
lcall
xlat
mov
inc
aas
test
sub
push
xchg
movsl
mov
and
push
mov
insb
insb
lcall
mov
pop
xor
sbb
idiv
mov
add
es
mov
xor
mov
cmp
addr16
jne
push
popf
push
das
nop
dec
dec
cltd
stos
inc
mov
lret
push
ja
in
push
dec
aaa
and
sub
and
lret
daa
lea
das
out
mov
pop
adc
je
pop
out
cld
push
mov
mov
cs
or
loope
scas
inc
nop
idiv
pop
inc
sub
xor
or
jbe
sti
pop
lock
repnz
add
pop
insl
mov
pushf
or
xor
or
popa
pop
std
addb
insl
jmp
pop
xchg
pop
mov
pop
sti
jae
inc
scas
aam
xor
sbb
pop
popf
jnp
pop
push
in
push
jl
mov
mov
lcall
inc
js
popa
add
scas
xchg
dec
and
js
xor
bound
clc
aad
xchg
sbb
and
scas
xor
add
or
jle
popf
jb
inc
out
clc
arpl
push
lahf
rorb
mov
daa
js
and
and
jl
mov
push
scas
xor
aaa
jl
adc
xor
mov
pop
clc
fcmove
jg
sub
inc
pusha
adc
sbb
in
pop
je
xchg
inc
push
and
bound
dec
dec
push
xor
fdivs
xor
in
inc
push
out
loopne
imul
and
lods
lretw
daa
pop
cmp
dec
into
jno
jb
fldlg2
jno
pop
add
test
xor
je
and
cmpsb
sahf
dec
into
dec
pop
xor
shl
add
pop
jp
call
xor
adc
add
pop
sahf
or
mov
fs
sub
lcall
hlt
cmp
loop
cwtl
mov
loop
fildl
or
loop
adc
pop
pop
bound
sbb
dec
cmp
test
xchg
pop
xor
arpl
xor
pop
cmp
fisubs
or
mov
jae
test
xchg
add
shrb
jmp
xor
loopne
dec
mov
sbb
out
mov
cmp
ss
mov
das
fldl2t
addr16
bound
inc
inc
add
xor
es
mov
sub
add
pop
mov
xor
aam
push
lods
mov
sub
fcmovne
sbb
lcall
clc
jae
xchg
mov
rclb
pop
push
adc
push
out
adc
jmp
sub
bswap
inc
adc
jo
jmp
pop
xchg
outsl
inc
xchg
test
cmp
addr16
or
adc
pushf
out
rorl
xor
ljmp
cmp
mov
addr16
inc
jns
cmc
push
add
fildll
into
cmp
aas
mov
pop
rolb
rep
push
sahf
sub
xchg
sub
shrl
xchg
mov
or
mov
cli
std
iret
cmc
gs
mov
repnz
ds
and
sbb
popf
movsl
scas
jecxz
mull
add
pushf
lahf
pushf
push
jne
ds
addr16
xchg
pop
sbb
lcall
jno
add
mov
outsb
pop
jmp
push
xchg
in
in
rcrl
pop
pop
and
xorl
mov
push
subl
lret
jns
cli
andl
jnp
dec
inc
daa
xchg
aaa
call
cmpsl
mov
test
mov
adc
push
movsb
in
mov
mov
sub
test
pop
pop
xchg
mov
add
mov
cli
xor
pop
sub
xchg
pushf
and
iret
jb
sub
ret
lods
in
fnsave
push
popa
and
xor
fidivrs
add
nop
and
xorb
dec
or
imul
push
sbb
sti
rol
daa
iret
mov
pushf
mov
callw
xchg
out
test
in
loop
and
int
hlt
fiadds
xor
push
es
faddl
mov
mov
pop
lods
shll
je
lods
or
test
pop
jb
test
divl
mov
push
fisttps
inc
and
mov
shll
out
loop
enter
inc
movsl
mull
addr16
xor
movsl
pop
into
jo
stos
popa
jo
or
in
or
outsb
fsubrl
int
repz
mov
sbb
ret
cltd
mov
call
dec
inc
fsubp
dec
icebp
imul
pop
pop
les
xchg
mov
iret
bound
jl
lea
cmpsb
scas
pop
popf
fadds
mov
inc
mov
mov
mov
jne
and
ret
iret
ret
loop
lea
pushf
out
leave
mov
cmp
xchg
xchg
lds
or
test
jg
idivb
adc
mov
aaa
sub
dec
mov
add
jbe
adc
mov
sbb
push
xchg
sahf
mov
mov
xchg
and
imul
xlat
mov
mov
add
cmp
inc
mov
and
adc
and
fidivl
out
mov
rorl
and
adc
lahf
pop
or
notl
xchg
xlat
pop
mov
int
cmp
test
push
mov
add
pop
fiadds
rcll
lea
ss
mov
xchg
mov
pop
out
repnz
push
pop
mov
add
and
xchg
sbb
sub
jp
inc
in
add
icebp
adc
jbe
pop
xor
and
int
xchg
sti
xor
push
mov
push
mov
icebp
jae
arpl
fs
lock
xor
inc
gs
sbb
mov
shll
ja
mov
arpl
dec
cmp
pop
out
loop
js
mov
test
stc
test
stc
or
daa
aas
fwait
insb
cmp
mov
rclb
clc
rorl
xor
jp
mov
aas
push
in
test
data16
or
dec
mov
mov
shl
sub
adc
test
push
nop
xor
inc
in
sahf
cmp
pusha
pop
xchg
cmp
jg
pop
fcomps
sub
fs
xor
mov
nop
shlb
in
popf
xchg
xor
adc
mov
cmpsb
addb
ret
insl
jmp
mov
pop
add
outsb
aaa
push
or
pop
add
mov
out
hlt
xchg
adc
seto
js
cwtl
and
dec
cltd
push
insb
xchg
mov
fsubrl
imul
mov
mov
cmp
push
cmc
lea
mov
dec
aam
les
dec
mov
fs
dec
bound
push
adc
xlat
inc
sub
push
shl
cmp
dec
push
pushf
fcmovb
out
in
xlat
int
rcrl
imul
and
js
jb
pop
add
sahf
nop
je
xor
rcrb
mov
pop
insb
enter
cmpsl
jle
cwtl
adc
or
pop
jecxz
or
pop
sub
pop
out
jns
bnd
scas
outsl
leavew
in
fnsave
scas
lds
add
gs
int
cmp
cli
sub
cmp
in
loopne
mov
lea
mov
and
imul
aas
popa
test
jne
jbe
fildll
xor
movsl
sbb
jp
pop
popf
sub
fsub
fcomip
adc
in
shlb
js
pop
outsb
and
push
push
insb
out
sbb
loope
gs
jmp
jnp
jp
clc
mov
mov
mov
cmc
rclb
int3
int3
adc
in
insb
out
fcomi
cmp
pop
add
pusha
mov
or
es
inc
pushf
lret
or
sbb
cmp
cmpsl
or
out
push
sub
fildl
lret
ss
dec
xlat
lea
push
cmp
or
stc
cmp
int3
sub
in
jb
inc
push
mov
pop
popa
or
cmp
rcr
in
xchg
enter
repz
xor
cmp
mov
cmp
jp
push
fdivrp
aad
cmp
and
mov
fisubl
out
mov
push
rcll
js
loopne
sbb
leave
xor
fcomi
sbb
addl
sub
scas
add
mov
inc
or
mov
in
adc
popa
fldl
sub
jae
mov
or
fmuls
int
sub
adc
jmp
pop
adc
in
add
int
lahf
in
pop
cmp
mov
mov
mov
or
scas
aas
cmp
push
adc
jle
push
mov
adc
xchg
sub
xor
movsl
fcompl
lret
fdivr
and
loopne
les
pop
push
popa
ds
insl
or
adc
lods
fwait
test
mov
mov
sbb
cmp
push
repnz
mov
inc
inc
mov
inc
cmpsb
std
xchg
fstl
jg
add
ja
xor
mov
ss
addr16
jno
mov
subl
adc
push
lahf
fsubr
stos
mov
inc
xchg
push
loopne
push
sbb
iret
push
pop
cltd
fstps
push
xor
sbb
push
ljmp
and
mul
int
fnstenv
mov
cli
and
rcrb
ret
sub
xchg
call
inc
in
add
sbb
sbbl
in
push
jmp
stc
das
inc
add
xor
add
jno
push
add
mov
cli
out
in
adc
std
cmovno
push
dec
push
sub
sub
lods
sbb
pop
and
adc
push
int
jne
std
or
aas
inc
pop
push
inc
iret
or
icebp
movsl
int3
movb
xor
mov
jo
outsb
xchg
jo
add
add
jae
xchg
dec
dec
cmpsb
sub
pop
and
cmp
pop
int
fistps
adc
mov
or
in
andb
rorl
mov
fnstenv
cmc
pop
sbb
loope
pop
cmp
adc
push
pop
dec
mov
mov
test
or
xor
inc
pop
pop
adc
jl
add
or
pop
jecxz
pop
pushf
mov
mov
jbe
jno
hlt
insb
sbb
mov
lret
xchg
xorl
lods
mov
pop
cmp
cmpsb
inc
and
and
lods
addr16
mov
outsl
sub
mov
push
add
outsb
outsb
scas
mov
loopne
mov
ljmp
ljmp
or
inc
sahf
inc
iret
in
pop
out
cmp
movsb
dec
andl
aas
pop
push
sub
jnp
ret
or
add
add
sbb
xor
pushf
imul
idivl
sub
shlb
lret
jne
inc
stos
and
and
movsb
lcall
inc
les
jg
xor
scas
push
mov
leave
mov
mov
aam
pusha
sub
xlat
mov
xor
mov
mov
test
mov
jne
add
pop
lahf
fistpll
xchg
add
pop
xor
test
movsl
xchg
and
lcall
jbe
inc
sub
add
inc
pop
or
aaa
das
jmp
out
mov
test
cmp
lods
and
fcoms
push
nop
xor
pop
push
pop
push
lea
vpshab
mov
pushf
dec
pusha
enter
js
scas
cmpsb
sbb
lahf
pop
sbb
imul
sahf
imul
jae
push
roll
aas
jne
xlat
fs
sti
adc
dec
jo
mulb
sahf
cmp
add
push
insb
mov
jle
nop
mov
ja
xlat
inc
pop
lods
xor
push
adc
cmp
push
sub
enter
aam
pop
pop
mov
jl
add
cmpsb
sbb
xchg
test
jns
and
outsl
pop
out
cli
dec
mov
andb
stos
or
cmp
cmp
les
lods
jne
cli
shll
mov
and
lcall
cltd
mov
mov
push
ja
jns
sub
movl
dec
push
and
out
fwait
pop
loopne
addr16
cld
loop
dec
in
in
sbb
jmp
adc
push
inc
lret
notb
xor
sbb
jne
jecxz
mov
mov
add
lock
hlt
pop
or
inc
xor
mov
pop
jae
jecxz
lahf
mov
iret
leave
mov
loopne
mulb
cmp
add
and
or
mov
mov
loopne
stc
dec
mov
movsb
imul
xchg
jle
je
pop
mov
and
cmp
pop
in
loopne
lret
push
xchg
mov
leave
and
pop
pop
imul
xchg
lcall
ror
dec
add
rorl
leave
ss
je
push
cmp
lcall
mov
lahf
jns
mov
inc
iret
mov
in
or
std
sub
or
fs
adc
mov
or
lods
iret
add
aam
mov
arpl
jg
sub
rcrl
and
out
mov
lahf
int
lret
rcrb
xchg
bound
fidivs
jbe
ficoms
jb
fs
ljmp
pop
fs
imul
or
xorl
inc
push
mov
adc
int
icebp
jbe
mull
and
mov
jb
sub
lods
lock
dec
mov
and
mov
pop
dec
mov
popf
mov
cmc
popf
ja
clc
cmpsl
mov
movl
add
fsub
xchg
mov
outsb
shr
dec
cmp
mov
xchg
jbe
jecxz
ds
pop
dec
jmp
push
xor
or
pop
scas
adc
pop
scas
into
rorb
ds
jle
stos
adc
jmp
cmp
cwtl
mov
jp
jle
aad
aas
adc
dec
mov
sub
sbbb
stos
xor
add
xchg
enter
or
pop
mov
lret
or
arpl
sbb
adc
push
fwait
insb
adc
stc
and
pop
mov
test
add
pop
and
bound
mov
dec
dec
inc
into
sti
adc
and
sbb
pop
out
ror
fdivrl
les
cmp
sti
cld
or
insb
sub
bound
cmc
push
sbb
stc
lret
inc
mov
scas
sub
adc
dec
leave
les
je
sbb
rorl
sbb
das
std
stos
into
cmp
mov
fdivr
lcall
imul
pop
mov
lods
cmp
xchg
rcll
fidivs
dec
les
and
lds
sub
jno
pop
cwtl
pop
pop
aaa
cmp
icebp
add
es
sub
rcrb
xchg
mov
cmp
jecxz
std
xlat
addr16
movsl
call
addr16
stos
pop
arpl
inc
gs
sbb
out
popf
testl
sbb
pushf
push
cld
push
jne
cmpl
lods
or
out
loope
fcoml
push
inc
and
icebp
pop
xor
or
scas
aam
cltd
mov
in
or
aaa
loopne
adcl
stos
fnstcw
imul
and
in
push
inc
fninit
cmp
lret
pop
or
int
mov
jmp
repz
push
cli
jmp
add
dec
subb
mov
fcomps
in
addr16
cli
pop
in
and
mov
leave
shl
or
xchg
loop
xlat
and
ss
pusha
push
dec
lods
in
xchg
aad
sub
sarl
test
stos
pusha
aad
sub
or
bound
and
testl
push
in
sbb
mov
cmp
push
add
shlb
push
ja
mov
mov
add
adc
pop
sub
mov
sahf
loop
mov
mov
jl
rcl
adc
jge
fwait
xor
pop
mov
out
daa
enter
insl
stc
push
sahf
repnz
mov
jp
aaa
dec
leave
popa
jecxz
or
jp
lods
add
std
movsb
lcall
or
push
jnp
xchg
subb
jg
out
repz
sbb
popa
xchg
das
lds
mov
push
les
loop
idivl
movsb
sbb
orl
cmp
xchg
adc
add
int3
jp
sbb
xor
lea
cmp
push
xor
repnz
cli
push
xchg
pop
push
imul
sahf
cmp
sbb
cmp
iret
sbb
fcomi
scas
cmp
sbb
mov
mull
jbe
scas
mov
test
icebp
mov
mov
pop
lcall
mov
outsl
insl
orl
xchg
aam
xchg
pop
or
cmp
sub
adc
xchg
mov
mov
jge
loope
sub
out
lret
insl
frstor
lahf
out
insl
stos
ret
sub
js
mov
notb
mov
xchg
cmp
sbb
jbe
and
cmp
fldl
inc
adc
aaa
pop
xchg
scas
gs
xchg
lret
ss
xchg
adc
or
pop
cmp
push
mov
jb
add
xchg
negl
pop
and
jmp
mov
xchg
or
out
cmp
mov
sbb
sbb
mov
dec
fstpt
and
mov
popf
aaa
jp
insb
leave
push
nop
cmc
add
in
insb
adc
lea
jp
xor
sub
aaa
movsl
jae
add
or
adc
add
xchg
inc
xor
fwait
pop
loop
push
sbb
lret
bound
push
cs
or
out
jo
bound
pop
rcll
inc
jp
inc
ret
xlat
ja
pop
ja
outsb
push
xchg
cmp
lret
mov
push
pop
mov
cmp
push
jecxz
add
out
repz
jge
jmp
imul
fyl2x
fstpt
or
loopne
int
xor
outsl
loop
cmp
clc
xlat
add
cltd
and
xor
mov
dec
jns
loope
test
negb
cmc
inc
and
dec
dec
sbb
pop
add
pop
bswap
scas
adc
js
mov
mov
xor
adc
add
imul
outsl
xchg
ss
adc
out
jns
mov
fisubl
in
xor
jnp
cmp
ret
mov
sbb
push
mov
or
ret
js
std
mov
ljmp
or
mov
mov
ljmp
cwtl
jo
mov
mov
or
fs
push
pushf
enter
les
int
pop
lret
dec
sub
pop
jle
mov
jo
or
or
adcl
loope
repz
lret
rorb
fistpl
push
push
inc
sbb
sbb
loopne
sbb
mov
stos
and
mov
in
inc
jg,pt
inc
roll
scas
mov
repnz
push
insl
inc
jmp
xor
cmp
dec
mov
push
add
sub
sbb
mov
inc
loope
sub
test
cmp
lods
mov
xor
pop
mov
test
dec
popa
imul
pop
lods
sub
xor
pop
mov
call
add
lret
js
mov
lcall
ds
mov
dec
mov
cmp
aam
adc
or
mov
sbb
xor
jne
mov
mov
sahf
pop
xlat
std
or
addr16
loope
pop
or
cmp
into
scas
scas
xor
inc
inc
ja
jne
jb
fcoms
scas
clc
xchg
mov
jae
add
inc
xlat
imul
mov
mov
imul
push
mov
push
pop
mov
mov
mov
inc
add
or
jle
ret
push
mov
xchg
jnp
xchg
jne
fisubrs
jnp
cmc
push
fcom
aad
loope
fnsave
mov
clc
mov
fsubrs
js
xor
cmp
mov
sub
fs
fldl
jbe
add
mov
bound
fdivs
repz
mov
cli
outsl
ss
cltd
lds
imul
js
cltd
enter
sbb
mov
xor
out
test
sbbb
xor
cmp
sarl
jl
test
mov
je
pop
scas
push
xchg
out
ret
popa
outsb
push
shlb
inc
inc
xor
outsl
mov
fisubl
fs
mov
cmp
sub
fwait
or
cmp
push
sbb
mov
mov
dec
push
repz
xor
loopne
mov
cld
push
sti
xor
int
mov
and
mov
call
xor
pop
mul
out
cmp
inc
jmp
or
jnp
push
mov
movsb
add
mov
int3
scas
test
jns
cli
call
jno
test
shrl
test
dec
add
push
inc
add
mov
incb
jl
loop
add
dec
in
mov
and
ja
stos
mov
lock
dec
mov
test
mov
rclb
loopne
xor
sbb
push
stos
ret
or
add
mov
inc
sub
aas
mov
stos
into
lcall
dec
out
lcall
dec
ljmp
or
rcr
pop
mov
adc
cwtl
xor
xor
push
add
xor
and
pop
mov
ja
push
and
pop
push
pusha
das
push
jg
inc
stos
sbb
pop
lret
push
pop
daa
icebp
cs
outsl
mov
jecxz
pop
lock
inc
mov
mov
movb
movsl
mov
aas
aad
push
outsl
inc
sbb
mov
inc
dec
arpl
ret
cld
cli
mov
inc
lret
rorl
sub
mov
pop
mov
mov
fbstp
sbb
jg
iret
mov
insb
fwait
mov
adc
cmp
gs
mov
or
sub
add
sbbl
cs
or
xor
push
js
dec
scas
out
das
mov
jae
stos
shrl
in
cmp
data16
push
pop
imul
pop
rclb
pop
rorb
sar
xor
lea
ret
in
movb
mov
sbb
loope
add
push
jp
and
insl
sbb
mov
dec
sub
pop
jbe
cmpsb
pop
add
push
mov
mov
sbb
frstpm(287
scas
inc
mov
xchg
jmp
cmp
in
or
jg
popa
aad
dec
xchg
outsb
mov
lods
push
popf
cmp
jne
sbb
mov
cs
rcrb
push
mov
iret
loopne
imul
int3
iret
add
rolb
movsbl
or
int3
aam
dec
mov
inc
fnstenv
pop
mov
cmp
sbb
add
dec
les
sbb
loopne
out
jge
enter
pop
shlb
sub
sbb
dec
and
fadd
dec
pushf
in
into
xor
aad
sbb
popf
add
filds
jae
sbb
je
or
mov
sub
dec
or
sbb
xor
addb
add
pop
negl
mov
and
jecxz
xchg
jb
ljmp
sbb
or
jb
dec
ret
cmp
ljmp
out
ret
jne
hlt
inc
mov
ret
pop
xor
xor
insb
test
int3
out
jne
cmpsl
mov
in
sbb
or
dec
sbb
leave
in
adc
mov
subb
out
mov
pop
in
xor
outsl
mov
cmpsb
rcr
sbb
loope,pt
out
je
cmp
or
or
pop
xchg
jns
cmpsb
shrb
and
or
or
sbb
pop
mov
jno
sub
xlat
shll
cmp
ret
dec
and
in
aaa
stc
decb
ja
cmp
fsub
fwait
inc
test
xor
stc
mov
inc
lret
and
nop
cwtl
outsb
sub
icebp
xlat
xor
mov
in
outsl
cltd
enter
cmp
jnp
aas
mov
clc
push
sti
mov
aad
or
jno
jecxz
or
cmp
dec
pop
mov
push
movsl
mov
ja
mov
cmp
in
or
and
mov
mov
out
test
inc
lret
je
loope
fnsave
mov
int3
sahf
aas
std
sub
mov
pop
sbb
scas
and
icebp
inc
insb
mov
leave
mov
and
mov
adc
jns
dec
mov
xor
in
insb
cmc
inc
inc
out
dec
stc
out
xlat
mov
roll
push
les
push
js
sub
cld
movsb
pop
or
sbb
movsb
push
jnp
movzbl
add
sarl
lods
jmp
mov
sub
and
mov
mov
jg
fdivrs
pop
or
mov
xchg
lcall
xchg
outsl
repnz
lret
sahf
lds
mov
fs
xor
sub
ret
push
jecxz
adc
cmp
mov
cld
pushf
sbb
fucomp
jl
icebp
xor
and
imul
ret
test
push
test
adc
pusha
stc
lcall
loope
mov
xor
jle
rorl
fbstp
dec
pop
flds
sub
jg
inc
jb
sarl
arpl
pop
stos
ja
sahf
push
cmp
inc
scas
pop
or
fwait
je
in
inc
add
loope
call
xchg
xor
scas
or
lods
push
cmp
out
mov
in
gs
adc
cwtl
xchg
fwait
or
jle
push
gs
jns
imul
add
inc
cmp
pop
popf
mov
mov
pop
push
push
jecxz
pop
push
cmp
inc
xor
add
adc
int3
das
pop
imul
test
lcall
jns
mov
mov
out
xchg
and
jo
mov
stos
push
xchg
xor
fisubrl
push
in
jno
sub
add
dec
lock
and
cmp
mov
pop
sbb
fdivrl
lahf
inc
pop
js
es
pop
stos
addr16
adc
mov
jns
inc
fs
iret
movsl
push
and
dec
and
jecxz
cmp
xchg
out
int
imul
inc
or
xchg
imul
fstl
leave
fs
fnstsw
test
popf
sti
or
out
mov
sti
mul
xchg
insl
popa
mov
movsb
xchg
fs
lock
sbb
mov
aas
mov
movsl
xor
mov
test
mov
in
inc
or
xor
xor
push
fwait
into
mov
cld
fld
and
ret
subl
jp
mov
cli
cmp
inc
ss
pop
xor
fsubl
add
push
testb
fbld
gs
sbb
and
add
fwait
cwtl
movsl
out
dec
out
inc
in
lods
addr16
pop
lret
mov
xor
cld
popa
call
orl
in
push
push
sbbl
jae
inc
push
pop
ljmp
lahf
jne
lcall
mov
in
mov
loope
mov
and
jne
inc
out
mov
stos
mov
fs
cmp
addr16
cmp
int3
pop
add
pop
sub
into
lods
ret
roll
imul
cs
adc
push
and
popa
xchg
adc
mov
into
jnp
pop
add
cmp
je
cmp
int3
lcall
or
neg
push
js
inc
rorb
mov
push
push
and
mov
jo
fs
cwtl
outsb
adc
xchg
xchg
aas
in
test
mov
int3
popa
es
jno
and
imul
jne
mov
cmc
mov
bnd
pop
xor
lret
xchg
movsl
shl
pusha
push
rcr
cld
push
cltd
adc
push
imul
or
xor
ret
xor
cmp
int3
les
shlb
push
sbb
fs
out
in
sub
ds
add
ficoms
mov
cmp
das
sbb
popa
repnz
or
jns
pop
nop
sti
add
mov
xchg
jecxz
cwtl
leave
decl
orl
push
pushf
push
loope
bound
dec
push
pop
sbb
pop
inc
test
gs
add
lods
inc
enter
mov
subl
push
jmp
in
dec
fiadds
inc
repnz
mov
ja
cmp
push
push
negb
mov
popf
cmpsl
fisttpl
pop
add
repnz
test
popa
and
add
in
nop
and
mov
inc
sub
sbb
ljmp
popf
pop
js
add
mov
insl
cmp
negb
test
mov
jb
shll
lods
imul
loop
xchg
sub
and
lret
adc
gs
out
hlt
xor
mov
fdivl
or
add
add
jmp
jae
pop
sbbl
lret
enter
std
mov
sub
xchg
in
push
sti
mov
sub
xchg
repnz
orb
sahf
int
jo
jl
imulb
sub
adc
lds
pop
sarb
mov
mov
scas
sahf
ret
adc
int3
jbe
test
test
sbb
mov
testl
shl
xchg
pushf
icebp
jmp
mov
addr16
scas
ret
jmp
js
sbb
xor
inc
mov
in
jae
out
sti
mov
push
pusha
repz
jnp
mov
adc
sub
or
dec
lea
ror
xchg
sub
rolb
sarb
mov
jae
xor
lods
push
cmpsl
outsl
addr16
js
fsubl
pop
inc
and
aas
aas
and
dec
cli
fld
aam
sbb
add
addr16
dec
mov
mov
jle
jg
pop
mov
das
cltd
and
enter
cmpsl
in
cli
cmp
fnsetpm(287
xor
pop
in
xor
dec
push
or
and
ret
popf
pushf
xor
push
pop
sub
dec
dec
xor
and
jl
in
addr16
je
xchg
inc
cs
add
xor
pop
and
into
mov
or
mov
scas
xchg
jmp
rcrb
pop
aas
add
cltd
or
imul
insl
fidivrs
ja
add
pop
pop
dec
pop
fidivl
lds
adc
cmp
mov
mov
mov
push
inc
dec
es
jne
and
push
inc
sub
outsl
ljmp
adcb
bound
out
adc
stos
cmp
cmpsb
cmpsl
jmp
sub
loop
lock
jae
fnstsw
insl
mov
mov
xlat
fnstenv
aas
cld
push
fiadds
lods
sbb
fwait
mov
cmp
scas
mov
lods
fwait
jb
or
stos
fdivrl
mov
movsl
mov
data16
or
xchg
scas
cmpl
cli
and
aaa
sub
bound
dec
push
jnp
sub
int3
fwait
stc
sbb
adc
lcall
repz
inc
or
call
jae
das
test
sub
pop
add
insb
lods
ret
outsb
push
lods
and
push
push
int3
leave
xor
aaa
ljmp
ret
adc
and
mov
int3
mov
adc
mov
imul
inc
loope
mov
or
sti
adc
dec
sbb
xchg
inc
fisttpl
inc
fsubl
mov
lea
dec
xchg
movsl
or
add
fcomps
rorb
jg
pop
sub
inc
add
leave
scas
sahf
repnz
mov
sub
cli
cmp
jge
fidivs
xorb
call
mov
stc
rorb
dec
sub
dec
les
je
ljmp
negl
inc
pop
movb
ret
cmp
sbb
cld
repz
in
inc
push
xchg
out
sub
negl
scas
scas
inc
adc
cwtl
inc
mov
sub
aaa
das
mov
mov
repnz
in
pop
imull
out
jecxz
and
into
and
rcr
fsubl
dec
out
leave
pop
fnsave
out
mov
popa
dec
adc
testb
push
xchg
cmpsb
and
mov
lret
adc
aad
out
or
in
jnp
mov
mov
pushl
and
xor
sarl
lret
mov
lret
xor
jecxz
xchg
dec
pop
mov
xchg
leave
inc
jno
add
loopne
ljmp
insb
ror
push
insl
xorl
mov
jg
test
dec
fcmovbe
add
pop
es
adc
imul
call
inc
loope
leave
jnp
sub
or
les
sbb
je
sarb
fcomi
fdivp
mov
xor
mov
mov
testb
cmc
imul
lahf
dec
xchg
gs
test
divb
gs
add
rcll
shlb
int3
cmp
cmp
rclb
flds
nop
add
dec
sti
movb
adc
cmpsb
loope
or
push
sub
mov
test
mov
xor
dec
fisubrs
lds
dec
push
cmp
ss
add
stos
mov
pusha
sub
ret
imul
add
cli
enter
push
pop
in
mov
xor
jb
cmp
sbb
mov
jns
and
push
mov
push
jecxz
fldt
xchg
ret
add
mov
fildll
sub
popa
test
inc
adc
xchg
push
xchg
lret
sbb
sub
dec
aaa
scas
imul
xor
mov
daa
cmp
cmp
sub
stc
leave
data16
jecxz
sbb
jp
test
scas
aam
aas
xchg
lret
mov
outsb
xchg
mov
pop
adcb
jg
jp
adc
out
into
xor
jge
push
lea
fiaddl
enter
adc
lock
adc
ja
icebp
lods
cmpsl
imul
adc
gs
and
mov
cwtl
int
cmp
lret
inc
mov
or
cmp
lret
inc
jge
add
outsb
push
fwait
dec
xlat
mov
or
xchg
mov
or
sub
sti
out
shrb
ja
mov
cmc
rcr
cld
mov
jnp
stos
cwtl
into
jne
aaa
push
imul
fnstsw
test
push
int
add
cmp
mov
in
and
rcll
in
and
scas
sub
pushf
add
fdivl
enter
pop
jp
dec
dec
iret
test
push
mov
xor
lahf
sbb
xchg
pop
cwtl
push
xchg
xorb
or
loope
mov
es
into
js
pop
xor
mov
dec
insl
je
sub
das
stc
out
adc
xchg
into
call
mov
adc
icebp
loope
rolb
out
cmp
aam
test
in
cmp
enter
jbe
or
pop
inc
xor
mov
cs
cmp
lea
pop
dec
in
lret
jle
mov
and
pop
mov
adcb
dec
rclb
jp
test
sub
ljmp
scas
pop
imul
and
ror
inc
xchg
loop
int
aas
xor
daa
adc
pushf
xlat
push
mov
xor
fisubs
lock
in
mov
ljmp
cmp
and
dec
lock
fcmovnbe
mov
popf
push
xchg
jl
jbe
jbe
push
and
jns
lods
jp
xlat
push
or
test
nop
mov
jg
clc
push
rcl
jno
repnz
xor
fmull
daa
lock
outsb
ficomps
push
fldt
repnz
mov
add
xor
xor
or
gs
gs
jbe
and
insb
or
mov
enter
lods
push
push
jbe
pop
xor
xchg
mov
out
add
cmp
mov
out
nop
andb
cltd
pusha
mul
or
out
daa
xor
cmp
sbb
and
ret
jo
test
push
out
xchg
mov
in
leave
add
dec
and
lods
insl
pop
xchg
dec
lahf
ds
stos
icebp
ja
movsb
jne
pusha
fsubrs
xlat
dec
shll
jno
sbb
mov
mov
jl
std
cli
pop
inc
lahf
xchg
jo
xchg
mov
sbb
cmp
xor
lret
add
std
add
xchg
outsb
inc
movsl
out
fs
hlt
cmp
lahf
and
in
lret
popa
in
mov
iret
add
sub
incb
aad
repz
hlt
shlb
outsl
fidivrl
sarb
lea
pushf
out
inc
ret
testb
jmp
sub
addr16
push
insl
push
adc
or
adc
push
insl
call
cmpsl
sbb
push
out
fidivs
mov
and
xchg
cli
sub
sbb
push
add
push
bound
rcll
and
mov
bound
cmc
cmp
and
push
push
out
add
mov
loopne
or
inc
jne,pn
add
push
jnp
in
shrb
sub
adc
test
jecxz
push
lcall
or
push
je
push
mov
mov
lods
insl
sbb
jg
mov
xor
fcmovbe
cmpsb
mov
outsl
mov
xor
je,pn
mov
mov
adc
cmp
jle
sbb
pop
dec
hlt
add
pop
sub
je
roll
clc
call
scas
pop
cs
pop
dec
and
outsb
leave
xchg
ja
sub
scas
hlt
insb
xchg
bound
popa
xor
mov
ljmp
or
or
fcoms
in
loop
mov
pop
mov
enter
jno
aam
bound
cmp
sti
pop
pop
test
mov
xchg
lcall
jecxz
or
sub
mov
mov
mov
jns
addr16
dec
lock
adc
ss
les
jl
jb
jne
insb
pop
stos
aad
mov
or
ss
ret
push
cmp
sbb
adc
shrb
imul
dec
mov
sbb
lods
scas
push
sub
add
iret
mov
int3
ficomps
shlb
repz
cmpsl
adc
pop
mov
or
fbstp
mov
xor
jno
pop
xor
out
inc
xor
jbe
pop
ds
xchg
fwait
add
or
mov
jmp
push
xor
loope
dec
jbe
or
cmp
aaa
sbb
sbb
movsb
sbb
and
fs
lock
scas
imul
or
dec
cmp
adc
xlat
je
jbe
pop
out
aas
aam
jnp
clc
and
nop
sti
xlat
out
stos
jbe
scas
push
lods
jns
lods
inc
jno
popf
add
test
pop
lret
mov
daa
adc
shlb
inc
rolb
lea
inc
int3
pushf
mov
cmp
addl
outsl
out
sbb
sbb
out
or
sub
mov
mov
in
aaa
xchg
xchg
mov
bnd
lds
shl
int
dec
scas
push
xor
ss
dec
push
into
loopne
in
shrl
dec
sarl
xchg
pop
sub
sbbb
mov
out
loopne
mov
in
xchg
adc
pop
test
jae
pop
loop
aaa
mov
cmpsb
xlat
cs
mov
cltd
jecxz
mov
add
fidivrl
xor
jg
xchg
pop
add
jecxz
pop
and
notb
filds
xchg
leave
leave
mov
mov
mov
lcall
xor
mov
aas
and
add
cmpl
or
in
and
or
push
imulb
xor
pop
pop
xor
dec
pop
mov
add
repnz
scas
pop
jae
pop
lcall
aad
sbb
mov
stc
dec
cld
or
shrb
in
mov
outsb
out
and
push
xor
inc
aaa
dec
jae
mulb
out
jmp
aad
push
arpl
mov
xchg
sub
inc
cwtl
mov
add
add
ficoml
mov
xchg
mov
adc
push
add
dec
scas
sub
lret
jb
ret
mov
fidivrl
pushf
xchg
imul
pop
add
xor
and
lods
push
jecxz
repz
movsb
or
push
sub
es
out
xchg
jbe
ljmp
lods
push
lcall
mov
movsb
mov
mov
cmpsb
xor
test
mov
leave
popl
lock
dec
sbb
stc
or
subb
mov
hlt
mov
pop
sti
pop
mov
aas
jg
inc
dec
add
fucomi
pop
sahf
clc
imul
dec
fwait
mov
outsl
jmp
mov
out
add
sub
jnp
cs
pop
mov
repz
rclb
push
loope
push
push
push
shlb
daa
in
mov
jbe
and
adc
xor
mov
sub
in
iret
jns
inc
and
xor
outsb
jnp
cmc
jae
mov
adcb
out
mov
aaa
mov
xor
aaa
aam
and
fwait
adc
xchg
inc
inc
popf
mov
test
mov
mov
adc
cmp
lcall
mov
loope
pop
mov
in
es
inc
mov
lcall
or
adc
xor
inc
clc
mov
js
mov
insl
loop
push
sub
jcxz
fcomps
jp
call
dec
test
in
adc
scas
mov
repnz
ret
mov
loope
cli
clc
jge
mov
in
daa
lds
les
pop
mov
push
sub
adcb
and
enter
leave
xor
adc
mov
and
push
inc
pop
cwtl
inc
fcoml
cmc
sti
mov
mov
aam
inc
lcall
add
lock
out
mov
andb
inc
push
xchg
pop
sub
cmp
jmp
fsubrs
fs
into
sti
adc
cmp
popa
push
repz
xchg
mov
sbb
mov
cmpb
sahf
xor
mov
lret
inc
stc
jmp
lea
sub
mov
inc
test
xor
push
movsb
loopne
xchg
cmp
push
pop
adc
jo
insb
jg
lea
inc
or
pop
or
and
adc
subb
out
pop
jb
cmp
imul
add
ja
stc
out
and
fmuls
out
stc
repz
jo
pop
stc
push
jb
ds
jp
rorb
jl
mov
fwait
cmp
mov
sarb
adc
mov
sub
jo
mov
mov
mov
jb
shl
adc
popf
stos
addr16
push
inc
stc
test
ret
sbb
repnz
xor
movsl
sub
push
icebp
imul
xor
movsb
jo
and
cmpsb
out
es
in
pop
test
outsl
aas
xor
movsl
cmp
push
push
fldl
add
cwtl
aad
push
jae
mov
cwtl
cmpsl
ret
or
push
jp
sbb
jne
iret
xchg
xor
rcl
cmp
xor
xchg
mov
adc
mov
imul
mov
sahf
aam
cmc
test
ds
ja
xchg
xor
mov
pusha
orb
outsl
push
enter
cmp
sarl
pop
cmc
mov
xor
mov
test
and
inc
inc
insb
pusha
pusha
fs
popf
ret
int3
fmuls
stos
iret
inc
dec
movl
sub
ja
lock
cmp
fsubl
in
push
pop
iret
lcall
inc
cmp
or
int3
pop
mov
ret
movsb
add
push
and
sbb
or
sbb
aam
popf
mov
les
cs
fildll
sub
pop
std
data16
jg
add
lahf
xor
mov
xlat
push
icebp
cmpsl
loop
ss
in
pcmpeqw
xor
cmp
mov
mov
cmpb
pop
xchg
cmp
sub
mov
data16
xor
xchg
mov
sub
pop
sar
movsl
scas
jmp
stos
pavgw
jmp
clc
jno
es
inc
adcb
loopne
arpl
and
push
cs
and
std
mov
mov
stos
test
mov
cmp
lods
imul
adc
jge
mov
sbb
jl
pop
test
xchg
lcall
sub
seta
sahf
cwtl
clc
cmp
sbb
not
pop
jmp
imul
add
and
sub
movsb
movsb
loope
fs
fistl
loop
arpl
jbe
sarl
and
mov
sbb
leave
or
cmpb
clc
fnsave
cmp
fidivrs
sbb
dec
inc
mov
pop
dec
pop
ss
lods
adc
jg
popf
xchg
adc
sbb
stos
inc
sub
cmpsl
push
cmp
push
repnz
pop
shr
outsb
xchg
call
mov
xor
adc
jecxz
out
mov
in
adc
cmpsb
and
cmp
add
loop
sbb
mov
mov
scas
insl
cmp
leave
arpl
insb
jbe
int
aas
pop
mov
add
cmpl
sub
imul
jno,pn
stc
push
fnsave
daa
lods
jge
mov
shlb
mov
rol
sbb
aam
xor
pop
sbb
sarb
sub
or
push
leave
pop
in
xchg
mov
or
out
stc
or
cmpsl
cwtl
pop
scas
jbe
dec
xor
inc
das
cmp
cmp
mov
pop
pop
pop
inc
clc
cmpsb
mov
or
addr16
lea
jbe
and
std
stc
xor
cmc
pop
xchg
inc
mov
nop
inc
inc
pop
mov
insl
lods
into
stc
stos
js
push
and
lret
pop
mov
jb
mov
sbb
stos
sbb
sbb
lods
cltd
xchg
mov
xor
adc
push
iret
in
pop
popf
shlb
push
sub
aaa
scas
outsb
es
jle
sahf
imul
mov
imul
and
pop
lods
pop
pop
jae
insb
test
cld
xor
popf
mov
fnstenv
inc
lods
mov
mov
mov
pop
outsb
ljmp
loop
out
test
push
insl
jmp
loopne
push
mov
int3
jecxz
fbld
fists
jecxz
xchg
xchg
jb,pn
xor
xchg
add
mov
fldenv
icebp
inc
mov
or
test
lret
dec
dec
roll
sbb
xorb
mov
ret
sahf
mov
rorl
dec
mov
push
xchg
loope
push
aam
lock
test
dec
push
inc
xchg
sbbb
fimuls
xchg
xchg
aam
mov
movb
inc
xchg
fldenv
stos
cmp
aad
xchg
push
inc
jae
mov
inc
notb
ja
data16
call
sbb
gs
pop
aad
dec
mov
jns
mov
enter
sahf
mov
sti
dec
das
inc
pop
sub
loopne
adc
jmp
jae
jno
push
in
fdivr
lcall
mov
inc
mov
andl
test
lcall
mov
push
jl
sbb
out
mov
mov
xchg
xchg
fistpl
rcr
lahf
imul
in
bound
cltd
es
pop
hlt
subl
sbb
dec
xchg
mov
lock
lret
sahf
icebp
stos
sbb
mov
xor
ret
pop
mov
mov
cmp
or
das
push
adc
adc
mov
jnp
adc
or
and
jle
or
push
dec
pop
icebp
rolb
fsubrs
fldcw
push
pop
xchg
clc
sti
push
xchg
pop
addb
pop
push
mov
jl
sbb
jg
push
leave
or
mov
dec
jbe
cmp
fisubrl
add
fdivrl
or
pop
fdiv
fwait
sub
dec
and
push
xor
lcall
jg
mov
hlt
mov
push
add
arpl
popf
mov
shr
pop
push
ret
loop
js
das
xchg
inc
rcr
mov
push
mov
jnp
jecxz
outsl
and
mov
jl
mov
and
pop
fwait
or
mov
pop
aas
lcall
pop
decl
movsl
into
clc
scas
rcr
in
pushf
mov
arpl
pop
in
sbb
or
inc
jo
mov
adc
mov
movsl
and
daa
jecxz
in
iret
inc
pop
mov
subl
cmp
dec
cmpsb
push
test
sahf
lds
addr16
cmpsl
jecxz
pop
sub
rcl
push
movsb
xor
sarb
ds
aaa
pop
test
xlat
lods
sub
jo
mov
or
addl
shlb
cmpsb
xchg
and
out
inc
push
int3
push
test
pop
ret
dec
in
cmp
push
scas
and
cltd
xchg
dec
inc
mov
and
cmpsl
cwtl
xor
adc
lahf
lds
dec
mov
fdiv
imul
fldl
outsb
pop
dec
arpl
jge
push
xchg
rorl
sub
mov
mov
test
sub
inc
inc
dec
test
pop
cmp
inc
clc
lret
mov
mov
adc
popa
das
xchg
popf
dec
insb
addl
cmp
sbb
mov
pop
mov
pop
cmp
sbb
jl
dec
adc
frstor
or
stc
enter
filds
js
and
or
xor
ljmp
shrb
cmpsb
xchg
add
lods
clc
ja
les
inc
lahf
es
xor
push
into
xchg
ret
jle
test
loope
sub
sub
sbb
fildll
jmp
enter
sti
repz
xor
out
inc
adc
js
xchg
sbb
jb
fsubrl
test
pushf
sahf
mov
pop
adc
test
int3
add
xchg
inc
jne
inc
ss
adc
cwtl
lea
movsl
mov
jecxz
imul
sbb
into
xchg
inc
jp
jo
push
sbb
popa
inc
lods
dec
or
add
and
das
fadd
imul
push
clc
mov
xchg
fcoms
push
add
cmpsb
mov
stc
or
lds
cwtl
aad
dec
xchg
jle
dec
jbe
in
lods
xor
push
add
sub
loop
cmp
lea
and
pushf
push
cmpps
fistps
vpavgb
fldl
mov
and
test
xor
dec
aad
mov
cs
iret
add
dec
xor
jo
and
push
cmp
pop
mov
mov
and
xor
xchg
jecxz
pusha
adc
out
les
adc
scas
sbb
popf
clc
pop
or
jmp
fstp
iret
or
data16
dec
xchg
test
mov
pop
xor
sbb
sbb
and
iret
bound
nop
xor
jno
sbb
ffree
jo
inc
mov
and
jle
jge
and
test
push
mov
leave
dec
jecxz
dec
out
mov
popl
mov
or
cmpsb
lahf
out
addr16
shll
cltd
mov
xchg
out
sub
jge
jmp
pop
push
push
cmp
xor
jmp
sub
xchg
and
cmpsb
lahf
call
mov
inc
int3
out
lret
push
loopne
cmp
je
mov
stc
leave
mov
les
aad
sti
inc
movsb
fstps
dec
fcmovne
pop
cmp
mov
stos
mov
out
aam
push
es
in
inc
fistl
mov
out
and
test
add
xchg
cmpsl
mov
shlb
mov
lcall
mov
inc
cmp
dec
subl
sbb
cmp
jge
shrb
mov
xchg
stos
dec
sahf
pop
out
add
out
inc
jnp
cmp
push
imul
and
cld
jns
inc
scas
cmpb
mov
mov
lods
or
out
loop
rcrl
xchg
fdivl
ljmp
cmp
jae
or
sub
mov
incl
mov
add
xchg
jg
bound
dec
pop
sub
inc
imul
push
daa
les
jecxz
sbb
jle
adc
sarl
xor
xchg
cmc
jl
popf
push
in
dec
cmpsb
fisttpl
sbb
add
xchg
xor
lahf
mov
inc
das
dec
push
inc
inc
or
mov
xchg
lods
add
lea
mov
mov
pop
ror
js
pop
movsl
insl
add
push
cmp
pop
aad
or
pop
rclw
popf
ljmp
insb
mov
ja
push
jae
stos
fisttpll
pop
add
push
adc
out
mov
jmp
or
jmp
test
mov
mov
add
jge
fcoml
stos
mov
mov
xchg
repz
push
xchg
sarb
decl
aaa
in
adc
adc
addr16
mov
outsb
fimull
mov
cmp
test
xor
daa
sub
adc
lods
shlb
xorl
cwtl
sbb
xor
lret
inc
mov
cbtw
inc
and
imul
ss
pop
add
xlat
inc
push
mov
mov
jecxz
jmp
je
icebp
fdivrp
addr16
cli
xchg
std
daa
pop
outsl
test
lcall
fisttpll
roll
mov
enter
mov
jecxz
dec
test
cs
inc
mov
pop
insl
scas
sbb
xor
pop
mov
mov
push
xchg
pusha
cmc
gs
mov
lock
and
pop
xchg
out
popa
stos
dec
pop
shlb
je
popa
jg
pcmpeqb
imul
aad
push
lahf
xlat
xchg
jge
mov
aaa
ss
dec
jb
xchg
push
mov
stos
pushf
jge
push
pop
pop
fnstsw
xchg
inc
cltd
out
sahf
leave
and
xchg
or
ret
push
ss
pop
xor
fnstcw
push
cmp
lea
icebp
ss
sbb
sub
push
adc
cltd
int
mov
pop
fwait
stc
pushf
push
cmp
ret
pop
sbb
iret
xor
jmp
cmp
xor
push
and
pop
lds
sahf
add
jl
fimull
push
dec
jns
outsl
pop
pusha
sub
xchg
popa
xchg
push
lds
pop
cmp
xor
cbtw
push
test
nop
cmc
sbb
cmp
in
mov
xchg
xchg
mov
shll
jo
push
push
inc
sbb
jle
xchg
repz
or
ja
int
or
and
bound
stos
mov
outsb
pushf
mov
jmp
sbbl
orl
shll
fsubr
cmp
out
jg
insb
sahf
push
movsb
shlb
insb
add
inc
cmp
in
jno
orb
iret
test
xlat
push
xchg
mov
ds
aaa
lock
in
adc
ret
pop
aam
bound
sbb
jmp
xchg
add
std
incl
outsb
out
xlat
outsb
ja
push
xchg
sub
pop
cmp
icebp
loop
clc
sti
cli
cmc
jne
add
subb
icebp
jno
sub
jb
mov
push
cltd
cmc
sub
idiv
pop
cmova
push
idivb
out
mov
jne
sidtl
fs
repz
push
push
addr16
lret
push
rcrl
lret
jb
fcompl
lret
pop
push
mov
adc
movsb
sahf
mov
lret
push
les
dec
mov
in
pop
repz
mov
adc
cmp
cltd
mov
cmp
sbb
add
jmp
mov
into
sbb
fildl
mov
xchg
mov
cli
pop
xchg
cmp
mov
pop
scas
xor
jle
ret
and
xor
xchg
pop
sub
inc
mov
adcb
popf
fstl
push
loope
movsl
add
popf
aam
fcmovnb
mov
inc
jge
hlt
ret
repz
push
cmp
dec
sbb
dec
out
sbb
add
lcall
fdivl
inc
test
lea
add
mov
adcl
or
xlat
add
mov
sbb
sub
data16
mov
xor
lcall
inc
lds
cmpsb
pop
sub
sbb
push
and
addr16
jae
outsb
loop
or
xor
dec
pop
popa
lds
rcrl
inc
lds
mov
and
ret
adcb
aad
out
adc
push
test
fimull
jmp
inc
repz
mov
sbb
sub
int3
jo
shll
adc
arpl
in
adc
sbb
fs
movsl
sti
adc
and
repz
insb
xor
xor
jo
scas
ja
dec
jecxz
add
adc
mov
out
ds
mov
pop
xlat
movsb
sbbb
in
test
push
cmp
ss
push
jns
sub
pop
aam
jp
mov
cmpb
hlt
add
xchg
outsl
test
push
mov
jge,pn
ficomps
fldcw
insl
cmp
imulb
movsb
xor
loopne
jl
movups
xchg
adc
fs
xchg
out
sub
das
popa
lcall
movsb
cltd
push
mov
jmp
orb
xchg
daa
nop
xchg
dec
xlat
or
js
shll
mov
mov
or
std
and
lret
and
js
inc
das
dec
or
shlb
or
js
jno
jecxz
fldcw
cmp
fsubrl
cmpsl
pushf
adc
mov
outsl
pop
fstpl
cltd
fadds
mov
stos
addr16
addr16
mov
out
daa
test
adc
fldt
notl
adc
dec
add
sub
jl
cmp
sahf
mov
rcrb
sahf
and
outsl
imulb
ss
sub
mov
fdivs
icebp
xor
jmp
mov
inc
xor
dec
popa
xchg
adc
outsl
sub
dec
mov
dec
sbb
jecxz
std
fmull
movsb
xchg
mov
pop
jno
xor
std
push
xor
mov
sub
mov
sub
scas
rolb
hlt
es
dec
sub
call
xchg
mov
inc
inc
and
in
adc
movsb
mov
out
gs
je
dec
in
mov
cld
neg
daa
cmpsl
push
test
scas
lods
test
fwait
test
aam
cmp
rclb
xchg
xor
dec
bound
mov
insl
mov
das
xor
fucom
sbb
out
cli
jnp
shll
pop
mov
mov
ret
add
xchg
lcall
sub
insl
and
hlt
cmpsl
adc
cmp
push
push
loopne
idiv
lahf
shl
jb
cmc
adc
stos
lock
popa
xor
stos
dec
pop
mov
sbb
ljmp
adc
cmpsb
mov
add
test
das
mov
pop
mov
ljmp
inc
sbb
mov
idivb
inc
cs
add
imul
lods
stos
aam
push
dec
adc
jmp
dec
push
sub
add
shll
lods
xlat
mov
shlb
das
push
std
mov
jbe
sbb
cmp
stos
pushf
push
and
out
mov
ss
jns
pop
cmp
pushf
mov
mov
mov
cmp
jle
je
lret
mov
dec
pop
and
movsl
rcr
inc
sbb
lret
repnz
mov
dec
lret
sysexit
mov
incb
cld
filds
nop
lcall
lret
ficoml
jns
cmp
aaa
mov
into
adc
leave
fadd
int3
pushf
jecxz
jge
iret
neg
lods
mov
scas
mov
lcall
or
dec
leave
mov
call
sub
out
inc
insl
and
movsb
xor
sub
lods
xchg
mov
ds
cld
les
and
mov
iret
scas
fdivl
fucomp
jmp
das
out
xchg
add
xchg
xor
fcoms
jl
lret
dec
clc
sub
and
test
cmpsb
pop
jno
pop
mov
test
mov
cmpsl
mov
sbb
jo
addr16
movsb
adc
outsb
lds
rolb
jbe
out
icebp
test
pop
daa
pushl
add
jnp
fisttpl
cmp
mov
mov
in
pop
push
mov
ljmp
add
test
push
dec
dec
movsb
fmuls
lock
stos
mov
fidivs
jo
jae
xchg
xchg
add
xor
sub
outsb
arpl
shll
pop
mov
insb
pop
incl
cs
repz
or
ret
out
cwtd
idiv
inc
add
lret
push
sub
jle
sbb
ljmp
inc
lret
mov
push
fdivl
or
insb
jne
in
and
xor
cld
sub
adc
mov
outsl
inc
hlt
xchg
adc
inc
scas
xchg
sti
mov
push
add
and
cltd
scas
call
es
jnp
xor
loop
mov
bndstx
inc
lock
lcall
stc
mov
mov
bound
cmpsb
mov
inc
push
sbb
int3
xor
pop
pop
add
jge
and
pop
mov
and
lods
jl
je
and
jns
sbb
mov
ret
pushl
outsb
sarl
cmp
dec
movsl
and
pop
iret
jnp
sub
or
in
test
aad
sbb
xchg
jo
cmp
add
ja
test
or
outsb
repz
pusha
xchg
mov
mov
cltd
push
xchg
dec
imull
and
inc
iret
popf
xlat
or
push
lret
int3
mov
sub
cmp
clc
out
cs
das
push
jmp
sub
push
adc
cwtl
push
gs
mov
sub
repnz
ret
cmc
push
push
mov
jnp
push
ret
mov
xor
xchg
out
push
dec
negl
leave
sti
push
xchg
push
cmp
push
rcrb
and
fwait
lds
jo
jl
add
dec
or
daa
cmp
fsubrs
iret
lcall
cmp
test
in
out
sub
fldcw
pop
jl
jnp
rcr
mov
ret
sub
mov
adc
es
mov
sub
out
push
adc
sub
imul
lcall
dec
shrb
enter
add
pop
popa
loop
jmp
sarl
cld
add
fmuls
aaa
xchg
insl
test
push
dec
arpl
dec
mov
mov
lock
adc
add
or
pop
notl
repz
test
std
test
jmp
sbb
in
mov
sub
call
pop
cmpb
mov
lahf
pop
mov
pop
pop
in
inc
sub
mov
add
outsb
sbb
pop
mov
adc
aaa
dec
mov
jg
mov
rorb
sbb
inc
xchg
fnstsw
stos
dec
push
sahf
insl
mov
xor
neg
shlb
int3
add
fwait
inc
imul
fsubrp
mov
push
or
mov
shrl
jmp
add
inc
out
loop
xlat
adc
imul
clc
cmp
mov
cwtl
ja
sbb
push
mov
int
movsb
loope
xchg
and
cmp
aaa
add
and
push
mov
hlt
ds
adc
iret
clc
loope
inc
mov
jae
lahf
pop
jmp
imul
into
jno
or
push
jbe
test
lods
arpl
aaa
inc
loopne
sub
sbb
sub
test
add
mov
in
dec
mov
mov
lcall
lds
push
and
rclb
jae
sub
lahf
xor
sub
dec
dec
cmp
and
cmp
fisubrs
jle
dec
and
in
adc
push
or
jnp
shrl
cmp
pushw
icebp
mov
lret
pusha
mov
push
push
fnstenv
inc
mov
pop
stos
or
adc
push
push
roll
push
insl
out
ja
mov
mov
fdivs
lcall
gs
rcr
push
pushf
fs
mov
test
jmp
mov
dec
jle
in
clc
or
test
shll
loope
jnp
dec
mov
nop
pop
repnz
std
cmp
cmp
scas
fwait
addr16
and
mov
jb
cmc
bound
bound
push
adc
mov
aaa
xchg
pop
xor
xor
icebp
sbb
add
jp
jbe
int3
frstor
hlt
cltd
cmp
loopne
fs
popf
dec
in
stos
in
push
sbb
fwait
jae
sub
in
push
sti
push
push
dec
push
inc
or
cmp
fstpl
rcrl
jne
in
mov
outsl
jmp
push
repnz
xchg
inc
std
push
outsl
and
cmp
es
rolb
gs
or
xchg
icebp
gs
ret
in
jmp
out
pop
xchg
xchg
iret
mov
jns
cmpsl
xchg
cmp
out
insb
repnz
mov
xor
int3
test
addr16
movsl
dec
inc
mov
mov
push
sbb
inc
stos
fbld
jne
sbbl
mov
adc
ret
test
cmp
sarb
sub
dec
stc
jnp
mov
push
mov
ljmp
xchg
inc
inc
int
mov
cmpsb
imulb
int3
mov
lea
xchg
inc
addl
imul
xchg
out
shll
test
stc
bound
xor
mov
push
xorb
xchg
inc
lods
imul
push
ja
loop
and
inc
jle
inc
lret
xlat
test
mov
test
shlb
or
jg
cmpsb
xchg
in
into
stos
push
test
sbb
xor
sub
push
test
pop
pop
lds
push
repz
push
pop
mov
bnd
pop
and
call
jns
push
or
cmp
and
bound
add
sbb
dec
aam
stc
loope
pop
cwtl
push
andl
push
and
aas
pop
sbb
mov
xchg
rclb
jl
adc
cli
xchg
push
test
cmp
xorl
inc
push
xor
popa
cmc
xchg
ret
mov
cmpsl
in
outsl
adc
in
pop
sub
gs
mov
repnz
loop
lret
int
xor
cmc
push
loopne
into
faddp
adc
in
mov
xchg
sti
push
dec
add
das
xor
out
call
jl
or
jecxz
andl
adc
jg
pop
push
hlt
adc
fsubl
jecxz
cmp
push
cld
ret
mov
arpl
out
sub
sahf
pop
dec
aad
push
dec
repnz
sbb
cmpsb
leave
mov
xchg
push
push
inc
imul
ret
adcb
imul
in
es
daa
fcomi
jge
pusha
sub
or
cmp
mov
shlb
xor
jae
repnz
mov
sub
and
movsb
mov
and
xchg
sub
fwait
mov
adc
dec
xchg
lds
lcall
rol
add
pop
jne
insb
fwait
in
sbbl
and
xor
fucomip
jp
js
push
jnp
out
stos
jg
add
sbb
jmp
fdivs
push
insb
add
call
movsb
mov
xlat
in
mov
test
sub
sbb
mov
xchg
roll
pop
movsb
push
mov
fs
inc
scas
outsb
shl
xchg
mov
xchg
fbstp
hlt
imul
mov
je
sub
xchg
jnp
in
pop
shrb
or
dec
cmp
adc
out
sub
mov
mov
push
cmpsb
das
mov
je
mov
mov
movsl
jae
les
mov
push
stos
ljmp
adc
jg
add
pop
add
dec
insb
loopne
cmpsb
jg
fisttpll
fsubrp
cmpsl
jecxz
mov
ret
dec
xor
fsubrs
addr16
push
jmp
test
in
fistl
andb
or
mov
jg
xor
xor
xchg
and
lods
jge
aad
in
ret
dec
and
inc
push
mov
iret
cmp
xlat
sbb
pmuludq
ror
push
xchg
jae
mov
cmc
sub
sub
push
imul
repnz
out
jp
addr16
mov
dec
adc
movsl
negb
test
aam
mov
popa
call
or
pop
pop
outsl
in
testl
jmp
fdivl
fcompl
inc
pop
xor
lea
jb
icebp
ret
addl
add
inc
test
sub
es
mov
pop
or
push
sarb
cmp
test
push
mov
sti
mov
je
jne
cmp
push
subl
fimuls
pop
fisubrl
xchg
and
aas
xchg
sar
insb
lods
aad
add
mov
pop
ret
enter
mov
jp
lods
insb
push
ss
ja
loopne
mov
inc
daa
adc
jbe
push
fwait
add
adcb
mov
pop
lahf
push
insb
cmpsb
inc
or
outsb
add
xor
push
mov
lret
ds
push
xchg
jecxz
ds
mov
sarb
adc
repz
imul
lods
ljmp
pop
out
iret
sub
adc
test
mov
les
insl
shll
pop
call
pop
jne
cli
rorl
cld
lods
xchg
cwtl
aam
sbb
sub
test
loopne
ret
sbb
mov
and
dec
pop
mov
mov
cld
sbb
jb
cs
out
dec
inc
bound
adc
cmp
fcmovnu
aam
dec
jecxz
xor
push
push
sbb
xchg
nop
sub
sub
mov
sbb
dec
ret
push
xor
adcb
arpl
inc
and
pop
hlt
mov
stc
into
mov
aaa
aad
dec
fisubl
jae
sbb
mov
add
imul
add
jnp
cmp
push
fistps
fldenv
dec
dec
test
push
jns
cmpsl
in
dec
leave
pop
add
jle
push
loopne
mov
mov
mov
cmc
jno
lods
pusha
call
cli
daa
jno
mov
cmp
hlt
inc
int
pop
iret
ja
push
lods
jge
jecxz
outsl
mov
jno
out
lret
add
dec
mov
mov
lock
gs
cmovno
movsb
lret
ret
int
jle
stos
cmp
inc
inc
adc
pop
mov
push
adc
pusha
pop
rcll
in
cmp
loop
sti
leave
fimuls
imul
or
mov
fstps
and
in
aaa
cmp
sbb
and
shlb
xchg
push
pop
cmp
arpl
sbb
movsb
cs
stc
imulb
xlat
cmc
inc
jp
aam
push
test
push
imul
lods
mov
cmp
ss
sbb
dec
imul
cwtl
inc
hlt
lret
lret
stos
push
mov
shlb
mov
jl
and
push
mov
popa
and
adc
enter
lock
mov
adc
outsl
mov
clc
ja
fs
or
mov
xchg
xchg
inc
push
das
sbb
xchg
pusha
mull
mov
outsb
jns
pop
jo
jg
dec
sub
or
imul
inc
pushf
mov
hlt
and
fistpl
pop
adc
jg
call
loope
sbb
push
and
imul
xor
mov
push
push
fucomi
push
ret
lret
xor
sub
popa
test
clc
adc
dec
and
pop
push
ret
out
push
push
or
fists
mov
add
repz
jl
cmp
inc
out
mov
rorl
lahf
stos
or
bound
sbb
aam
js
insb
fadds
das
popf
gs
jge
out
ljmp
jp
mov
inc
arpl
xchg
in
adc
inc
addb
ds
scas
dec
lea
sbb
xor
xchg
lea
loope
mov
inc
jle
push
imul
mov
movsl
pop
and
inc
mov
xchg
adc
mov
adc
hlt
dec
lret
mov
push
lock
dec
jp
mov
and
and
inc
mov
dec
stos
es
jmp
push
jns
adc
test
and
scas
and
lahf
push
out
jno
arpl
mov
cmp
add
fwait
mov
repnz
icebp
mov
sub
pop
jp
test
daa
mov
mov
add
call
sub
test
nop
das
mov
mov
je
loope
cmp
cmp
inc
cmpsl
inc
jecxz
xchg
cmpsb
adc
mov
lahf
mov
insl
jae
shll
icebp
sub
pop
popf
mov
stos
mov
jne
jbe
mov
add
lods
push
push
std
outsl
sub
daa
sub
mov
mov
mov
aas
cltd
lcall
lahf
pop
dec
sub
mov
enter
jb
lcall
dec
or
fidivrs
js
xor
inc
rorl
divb
or
ret
mov
pop
dec
mov
rorl
jl
xchg
sub
pop
int
jmp
sbb
sbb
addb
push
stos
xor
test
or
jb
popf
fildll
loope
das
dec
mov
mov
xchg
mov
dec
test
adcl
mov
xor
push
in
aam
sti
mov
push
lcall
ret
sbb
fcomi
jbe
les
scas
inc
in
out
filds
sbb
xchg
cmpsl
sti
cmp
pop
and
std
ds
push
xlat
push
mov
imul
popa
push
mov
xchg
mov
es
mov
pop
add
jb
pop
arpl
ret
les
xor
rcl
sub
nop
das
and
repnz
mov
les
mov
push
int3
js
xlat
ficoml
xchg
int
or
bound
popa
inc
cmp
in
out
icebp
das
dec
ds
pop
insl
mov
cmp
hlt
cmpsl
out
xchg
xor
mov
cmp
outsb
adc
into
cwtl
xchg
idivb
lock
adc
xchg
and
cld
and
xor
mov
add
push
inc
sahf
repz
call
add
inc
mov
lret
xchg
xchg
xchg
mov
sbb
pop
mov
mov
lods
cmpb
cmp
negl
jge
jb
push
jmp
or
arpl
fsubs
mov
xorb
test
int
repz
loop
xchg
jecxz
cmp
stos
mov
mov
fstl
push
mov
pop
mov
mov
pop
sbb
pop
and
jb
mov
and
fnstcw
imul
cmp
and
std
sub
pop
xor
add
pop
outsl
divl
mov
mov
and
sarl
sbb
dec
mov
jle,pt
ss
aam
lcall
sti
or
daa
daa
xor
cli
jle
stos
dec
test
mov
xor
pop
jns
xor
mov
add
xlat
ja
xchg
xor
cs
push
cmp
cmc
xchg
push
cmp
lahf
outsl
cmpl
inc
cmp
lret
adc
repz
mov
xchg
or
adc
add
cmp
or
std
and
push
lods
xchg
cmpsl
jecxz
rorl
mov
dec
ljmp
mov
dec
jae
mov
lds
lret
outsl
dec
push
rclb
ret
es
jg
fldl
in
dec
push
fsubr
xor
scas
push
and
push
ja
pop
lret
cmp
mov
cmp
roll
cmpsb
out
inc
add
jnp
jmp
mov
add
mov
pop
add
ja
nop
xchg
lds
sbb
push
call
scas
push
jl
test
je
es
push
test
cmp
cmp
push
add
cli
push
xor
jle
mov
dec
insb
popf
js
sub
insl
adc
fdivrs
sti
icebp
fidivrl
popa
mov
sub
fidivrl
xchg
mov
dec
popf
mov
aaa
cltd
push
in
mov
pushf
stos
inc
hlt
cli
push
sub
mov
addb
add
repz
xchg
xchg
add
ja
adc
mov
out
inc
sub
cmpsl
pop
cmp
iret
jecxz
mov
ffreep
test
xor
xchg
xchg
add
sbb
inc
dec
call
int
push
clc
inc
or
ficompl
rcrb
jecxz
int
push
std
mov
out
sub
mov
and
mov
sbb
nop
lods
xor
jecxz
lock
mov
push
mov
jns
iret
and
jp
mov
and
push
jns,pt
popf
dec
dec
enter
mov
push
xor
push
popa
rclb
cld
mov
in
inc
test
cmp
test
adc
lret
and
add
in
scas
sbb
mov
nop
hlt
sbbb
mov
lods
cmp
hlt
pop
out
test
xchg
mov
push
cwtl
rolb
ss
sbb
ljmp
icebp
ret
cmp
loope
jb
xorl
pusha
outsb
jb
inc
dec
shrb
pusha
adc
push
enter
dec
add
cs
cmp
negb
sub
and
out
xor
pop
fistps
lods
cltd
scas
pop
mov
push
std
out
daa
insb
pop
xchg
pop
stos
lods
pushf
inc
repz
add
pop
testl
push
xchg
jnp
lds
xchg
mov
or
test
jmp
shr
pop
pop
cmp
std
fsubr
sbb
lahf
movsl
mov
sbb
aam
pop
jne
inc
sbb
xchg
and
scas
jnp
addl
jmp
dec
rorb
mov
rep
and
mov
and
repz
jl
movsl
inc
fisttpl
inc
rcll
nop
cmc
push
ret
test
inc
jg
cmp
push
mul
and
outsb
aad
mov
scas
icebp
push
orl
xor
or
xchg
hlt
into
adc
les
rorb
mov
cmp
pushf
jnp
pop
inc
movsb
xchg
mov
out
out
rep
mov
adc
cmovge
cli
mov
fidivs
add
jg
adc
add
jge
mov
in
and
or
mov
mov
fiaddl
mov
inc
mov
in
loopne
aam
xor
dec
orb
dec
clc
mov
adc
jbe
pop
jle
jae
shlb
outsl
mov
xchg
ja
pusha
lahf
jl
cmpsl
xchg
addl
sahf
in
jo
push
or
outsb
nop
movsl
stos
enter
insb
push
mov
lds
call
gs
in
xlat
outsb
mov
movsl
dec
movsl
cld
mov
ds
sbb
fs
push
aaa
aam
mov
jae
ljmp
adcl
adc
push
pop
inc
push
cmp
xor
insl
into
sbb
or
xchg
inc
push
loope
add
sahf
clc
repnz
js
mov
sub
hlt
mov
lods
xor
mov
inc
push
mov
adc
jg
rclb
jp
out
pop
xchg
or
fwait
sbb
scas
adc
addr16
cmp
icebp
adc
adc
fildl
mov
xor
out
mov
cs
clc
xchg
call
adc
adc
sbb
ret
stos
movl
hlt
xchg
mov
cmpsl
push
mov
cmovge
sbb
jns
push
jg
lcall
aad
imul
enter
icebp
xlat
mov
test
inc
push
inc
jl
call
push
jno
inc
pop
adc
pop
push
mov
xor
xchg
mov
insl
push
dec
imul
cltd
ds
leave
stc
push
add
mov
dec
jae
icebp
testb
mov
dec
add
je
mov
out
mov
adc
movl
outsb
and
and
lods
sub
aas
mov
cli
aaa
addr16
sbb
or
cltd
xchg
mov
and
movsl
sub
mov
xchg
fistpl
inc
ret
cmp
popa
aad
in
cmp
and
je
arpl
xor
test
inc
scas
es
jae
ret
test
lcall
bound
pushf
cmpsl
jae
mov
mov
mov
dec
ficoms
inc
adc
push
pop
stos
testl
mov
jl
repnz
into
lret
sbb
mov
push
fisubrs
mov
aas
sbb
outsb
mov
cmp
clc
imul
sti
push
inc
inc
sub
xor
jecxz
push
loop
pop
insl
jae
loopne
cmp
mov
xor
pop
dec
test
std
jmp
shr
int3
emms
cmp
jl
push
mov
pop
shr
push
xor
jb
jle
cltd
hlt
adc
int
push
push
adc
dec
repz
add
out
push
pop
xacquire
or
js
sub
imul
test
aad
out
push
je
mov
inc
jl
mov
mov
test
sbb
pause
mov
pop
pop
mov
or
dec
mov
add
call
cs
mov
sbb
push
lret
push
mov
pop
mov
outsb
sbb
jle
jno
pop
push
pop
jns
fsubp
call
cmpsb
xchg
cmp
xchg
cmp
add
inc
cmp
mov
and
adc
sub
push
add
sbb
mov
xchg
xor
sub
push
imul
push
xor
adc
std
xchg
or
mov
movsb
outsl
and
jnp
mov
mov
jne
fadds
jecxz
add
add
ja
jno
inc
and
or
sub
dec
jp
cltd
stos
mov
or
into
in
add
outsl
and
push
lret
sub
mov
adc
test
movsl
out
inc
push
pop
out
dec
add
adc
mov
sub
jnp
fildl
in
and
iret
push
fsubp
fs
insb
lret
inc
mov
mov
dec
mov
jbe
cmpsb
popf
xchg
daa
clc
sbb
xor
cmp
adc
in
xchg
lret
jnp
je
addb
or
inc
mov
and
popf
push
je
xlat
in
negl
call
cmp
mov
push
scas
push
mov
jp
inc
dec
mov
dec
cmc
js
inc
push
inc
sarb
dec
or
out
cmp
mov
test
jb
daa
mov
arpl
push
xchg
movsl
icebp
sbb
or
xchg
xor
das
mov
arpl
fcos
idivl
ds
enter
sbb
stos
fldenv
int3
pcmpgtb
je
mov
mov
aas
adc
xor
inc
fmull
inc
mov
xor
add
sahf
mov
xchg
xor
sub
mov
js
push
push
ss
pop
lds
push
lds
icebp
or
shll
fcoms
xor
sbb
jg
xor
add
or
jecxz
in
insl
sbb
push
mov
xor
mov
dec
sbb
inc
push
push
test
mov
sub
push
xlat
pop
mov
scas
sbb
mov
test
adc
adc
cmp
sbb
divl
inc
mov
sarb
icebp
mov
inc
mov
aam
lea
jae
and
mov
jp
dec
push
test
sahf
cwtl
pop
bound
pushf
insb
icebp
adc
inc
call
inc
mov
add
bound
xchg
sub
mov
ret
sub
add
ds
xchg
inc
dec
xchg
arpl
test
pop
lock
xchg
sbb
inc
xchg
or
rcr
push
push
xor
sub
imul
jae
scas
addb
int3
or
imul
iret
rcr
xor
fwait
mov
jmp
push
dec
add
push
xchg
sub
movsl
daa
or
inc
fsubr
mov
add
testl
xor
fsubrs
and
jne
pusha
jl
lret
jl
xor
ds
push
int3
mov
sbb
sti
rep
jecxz
nop
mov
mov
arpl
jns
dec
mov
scas
inc
mov
pop
jno
jae
loope
inc
popf
mov
cmp
jp
push
mov
lods
imul
push
inc
pop
or
mov
xchg
cwtl
ret
sbb
shrb
push
jne
movsl
jge
aam
iret
imul
push
cmpsb
pop
jl
and
jmp
rcrl
sbb
jle
mov
cmp
push
daa
lods
mov
cld
xchg
das
jae
sbb
add
lahf
or
shlb
sub
pusha
add
adc
mov
xchg
push
out
xchg
fcomip
imul
pop
jg
jb
inc
mov
mov
cmp
lods
mov
in
or
inc
sbb
push
and
inc
inc
aaa
addl
je
out
push
fs
push
xchg
adc
or
jae
andl
ljmp
push
or
sub
push
fldl
fstpl
std
add
lret
cmp
push
mov
sbb
jae
push
mov
inc
test
sahf
pop
int3
lahf
sub
mov
mov
adc
cs
and
dec
cld
add
stos
mov
call
mov
insb
mov
push
pop
scas
loop
dec
mov
pop
inc
xchg
jbe
sub
mov
and
pushf
lock
ds
mov
jmp
add
pop
sbb
push
loope
or
mov
mov
push
fisttps
dec
or
xor
out
insb
pop
or
mov
aad
arpl
add
xchg
fbld
mov
push
aad
pop
mov
push
fadds
mov
pop
fucomp
xchg
xchg
test
or
dec
adc
xorb
je
fisttpll
ficoml
pop
or
testl
aam
jne
or
push
sbb
dec
pop
xchg
xchg
cmp
push
data16
xor
out
mov
adc
out
cli
rorb
inc
mov
out
fldenv
add
jg
jge
lock
pop
fisttps
ret
jo
mov
lret
add
js
or
jg
jmp
and
mov
stos
or
punpckhdq
mov
jnp
sub
mov
pop
push
or
data16
fimull
jo
mov
pop
push
cld
add
insl
cmp
jecxz
sbb
xor
sub
mov
dec
push
sub
push
pop
mov
movsb
rol
mov
scas
nop
aas
fld
movsl
push
in
sub
jp
or
int
cmc
or
sbb
stos
movsb
jg
push
add
repz
enter
aam
lret
movsb
inc
and
dec
insl
inc
push
xor
subb
test
divl
adc
dec
aas
sti
inc
sub
jecxz
in
or
lahf
pushf
sbb
movsl
inc
out
adc
or
mov
push
push
mov
fmuls
loop
lret
lahf
dec
lret
je
xchg
call
and
lds
mov
leave
push
enter
int3
mov
pop
cmp
sbb
push
sbb
sub
push
iret
lahf
in
rcrl
arpl
fwait
pop
pop
mov
adc
sbb
in
imul
ljmp
idivb
jg
push
mov
mov
push
jle
movsb
cmovb
mov
pop
adc
lods
add
ret
mov
mov
mov
xor
aam
sbb
ror
and
lret
lds
ret
cmp
or
pop
lods
jmp
xorb
xchg
and
add
jmp
cmpsl
nop
push
jo
rol
cmpl
mov
fistpl
jle
clc
fadds
or
scas
mov
cwtl
les
cmp
sbb
or
fwait
jecxz
inc
mov
pop
mov
push
mov
adc
leave
in
sbb
sbb
arpl
int
sub
xchg
ljmp
pop
lret
xchg
call
scas
shll
ss
bound
out
cltd
shrl
xchg
std
outsl
mov
fdiv
js
sbb
mov
jp
push
das
iret
push
inc
out
jmp
leave
movsb
aaa
rcrb
adcb
pusha
xchg
mov
mov
or
sbbb
sub
into
mov
cmc
add
test
pop
mov
inc
xor
or
and
add
sahf
pop
cmp
push
xor
pop
sbbl
clc
xchg
mov
cs
scas
movhps
lods
js
or
cmp
mov
cli
push
sbb
out
or
ja
pop
scas
push
sti
mov
sbb
repz
fcom
xchg
inc
mov
int
cmovbe
adcb
or
arpl
pop
nop
mov
test
push
xorb
shrb
and
addl
outsb
push
and
inc
lret
fs
into
pop
dec
mov
mov
pop
pop
push
add
int3
jbe
incl
or
xchg
jg
adc
dec
test
mov
xchg
clc
mov
xchg
aaa
nop
inc
lret
fucomi
push
movsb
call
push
xchg
xchg
and
test
mov
clc
mov
lock
les
ljmp
sub
add
inc
sbb
add
inc
mov
data16
nop
mov
mov
or
pop
mov
and
popa
xlat
mov
ret
or
push
add
icebp
cmp
mov
cli
push
rorl
sub
add
lcall
mov
adc
adc
mov
cmpl
xor
arpl
pop
das
mov
std
vpmullw
jno
hlt
icebp
pusha
dec
int3
pop
outsl
inc
inc
mov
jg
cmp
mov
pop
insb
inc
inc
imul
fisttpll
cs
cmp
dec
inc
xor
adc
adc
scas
mov
mov
xlat
in
hlt
push
dec
or
lock
movsb
inc
add
stos
scas
ret
mov
or
cmp
sub
das
pop
mov
aaa
jnp
shlb
sbb
test
xchg
jmp
bound
xor
inc
mov
jne
addb
xor
mov
xor
dec
dec
mov
imul
mov
lds
mov
sbb
fidivs
pop
push
hlt
mov
lea
dec
cs
add
jge
or
or
mov
dec
sbb
aas
jno
cld
push
gs
xor
and
xorb
out
push
jecxz
and
xor
mov
push
pop
out
jno
ljmp
sbb
inc
rol
jns
xchg
jg
mov
push
pop
in
mov
jmp
dec
inc
or
mov
je
dec
mov
pop
aas
dec
sbb
loopne
xor
xchg
dec
and
dec
icebp
mov
dec
popa
dec
lret
add
or
outsl
int3
repz
fmuls
mov
popf
pop
cmp
popa
loope
add
jmp
test
xchg
daa
imul
push
daa
out
xchg
xchg
jo
imul
in
movsb
and
xchg
and
mov
mov
mov
aam
inc
or
iret
popf
mov
xor
fmull
cld
loop
mov
outsb
call
popf
sub
cmp
cmp
fs
loop
dec
pop
movsb
outsl
mov
jno
and
xchg
lock
jle
leave
mov
enter
dec
sahf
jnp
push
mov
mov
stos
add
add
xor
out
fstps
adc
and
mov
popf
adc
lahf
mov
pop
mov
mov
in
cmp
int
add
or
push
out
jo
loop
lea
xchg
repnz
xchg
xchg
out
leave
dec
int
je
mov
jl
inc
je
mov
pop
mov
fcmovu
ja
test
and
bound
lcall
jno
scas
dec
sub
sbb
test
pop
mov
xchg
mov
pop
fstps
andb
mov
dec
fcomi
fcmovu
add
repz
jnp
sub
xchg
fstps
stos
inc
dec
jnp
xchg
in
lret
outsl
outsb
lods
test
dec
imulb
add
test
popa
and
sub
test
mov
dec
scas
insb
mov
dec
xlat
dec
mov
sub
push
inc
clc
orb
out
aas
adc
jge
in
aam
out
imul
sub
ja
cmpsl
sbb
mov
mov
test
adc
pop
fnstsw
sahf
dec
and
adc
sarl
dec
lods
mov
faddl
lret
adcl
sub
ret
mov
fstl
rcl
dec
pop
out
fdivrs
mov
loope
push
adc
int
inc
fimuls
pop
test
lock
fwait
aad
and
inc
add
aad
jge
mov
ljmp
cmc
arpl
sbb
push
ret
out
mov
sbb
dec
jae
cli
lcall
int3
or
test
jo
call
test
dec
and
and
pop
cli
mov
and
sti
push
adc
insl
call
inc
cmpsb
sti
or
stos
hlt
add
out
push
add
repz
and
pop
dec
sub
testb
ss
xchg
push
pusha
or
sbb
dec
popf
jns
mov
scas
xor
or
sbb
pop
into
cmpsl
gs
push
aaa
mov
add
adc
adc
add
adc
into
pop
mov
popa
leave
jno
inc
scas
cwtl
gs
imul
sahf
mov
subb
fisubs
std
pop
stos
incl
mov
fs
adc
popa
push
sub
push
pop
mov
xchg
hlt
cmpsb
xor
ret
fstl
sub
sbb
fcmovnu
adcb
out
mov
mov
cmp
pop
add
push
leave
popa
lock
lods
xlat
mov
push
xchg
push
cmp
inc
cmp
cmp
mov
adc
pop
inc
or
cli
xor
adc
xor
mov
xchg
mov
jp
adc
fstpl
cmp
add
stos
in
daa
xor
xchg
mov
lcall
push
insl
jle
sub
cltd
jbe
push
das
jle
sbb
mov
jmp
inc
inc
cmp
jnp
repnz
in
xor
mov
or
lahf
sarb
and
xor
aaa
je
lock
adc
mov
lods
cmp
xchg
bound
loope
or
cli
dec
in
cmpsl
or
and
pop
in
xchg
push
sbb
mov
inc
lods
mov
aaa
sub
test
ret
jne
stc
ljmp
pop
negb
add
out
jl
inc
sub
mov
cmc
adcl
dec
pop
ficompl
or
and
mov
je
sub
mov
stos
ds
mov
pushw
mov
repnz
cli
das
sub
sbbb
add
jno
xor
sbb
cli
adc
adc
lock
or
mov
cmpsb
ja
es
ret
push
movsb
cmp
into
aam
xchg
xlat
mov
sub
lock
fisubrs
clc
mov
and
fcoms
in
out
sbb
mov
cwtl
xor
jae
xor
subl
das
adc
mov
sbbl
clc
lret
xchg
sahf
imul
xchg
rorb
fcomps
sbb
imul
scas
mov
xor
scas
lock
adc
push
insb
jmp
inc
call
mov
loope
pop
xlat
cmp
icebp
nop
mov
inc
js
sahf
fsubl
mov
fwait
mov
in
sti
mov
ficoms
je
xor
leave
sbb
jg
mov
ret
mov
popa
push
lahf
test
out
add
cmp
push
pop
cs
outsb
rolb
xor
imul
notl
lea
sahf
pop
mov
add
sub
imul
mov
xorb
push
dec
sti
push
cmp
or
jp
push
popf
cmp
push
je
into
andb
adc
std
jbe
mov
fdivrs
js
lahf
mov
add
cltd
push
dec
iret
mov
sti
mov
insb
and
jle
es
jmp
adc
jne
movsl
cwtl
cmpsl
les
test
jbe
push
stos
les
cmpsb
outsb
sub
dec
cmpsl
inc
lods
jp
scas
lds
mov
dec
jnp
cmp
loopne
xchg
sbb
loop
movsb
and
xor
adc
aas
adc
sub
in
dec
jecxz
shl
or
cwtl
sahf
or
mov
std
jno
insl
out
cmpsl
jl
cmp
mov
fnstcw
inc
enter
mov
jge
pusha
das
push
inc
pushf
push
push
movsl
shll
add
push
jl
and
push
xor
es
fistl
mov
mov
adc
call
imul
add
out
jbe
ljmp
dec
sbb
test
push
or
or
out
mov
or
pusha
iret
scas
inc
and
in
repz
std
inc
add
movsb
stc
xchg
jle
hlt
ja
or
mov
jmp
dec
sbb
xor
xchg
jo
inc
pop
icebp
in
inc
cmp
push
sbb
xchg
xchg
aad
push
bound
cmpsb
add
mov
dec
pop
fistps
xchg
mov
outsl
sub
dec
add
cmp
div
dec
pop
or
in
fwait
lcall
mov
inc
sub
sbb
data16
jp
imul
mov
iret
cmp
jns
jne
lods
mov
aas
push
repz
stc
jg
fidivs
sti
in
aaa
add
push
fdivp
mov
scas
push
or
or
sub
inc
test
mov
or
sbb
jbe
inc
aam
shr
repnz
sub
jmp
test
adcb
or
xchg
lods
push
or
scas
les
mov
fstl
dec
pop
bound
sbb
dec
les
enter
shll
paddsb
sub
test
jge
in
rcll
into
push
mov
and
add
mov
jo
sub
and
frstor
sub
out
and
mov
enter
adc
sub
in
add
lock
xchg
mov
dec
hlt
fsubrl
jmp
xor
add
xchg
imul
sbb
xchg
xchg
cmp
pushf
sub
add
inc
into
pop
xor
pop
and
lea
dec
insl
popf
xlat
pop
push
mov
movsl
ljmp
stc
imul
fstpt
ret
ss
inc
gs
arpl
lods
cmpsl
cmp
icebp
les
dec
das
push
pop
adc
in
mov
test
flds
dec
cmp
pop
dec
ja
ja
push
jb
cltd
mov
iret
sbb
jo
ret
or
xor
pop
jae
outsb
in
mov
pop
pop
xchg
call
loop
xchg
xor
sbb
shrl
pop
xchg
push
jecxz
jo
mov
xchg
addb
sarl
sub
shlb
jmp
pop
inc
cmpsl
test
fs
jecxz
jp
pop
sbb
adc
cmp
loopne
xor
pop
pop
jae
dec
insb
std
aam
xchg
lret
popa
imul
sahf
adc
pop
emms
sarb
fs
aas
mov
inc
ljmp
out
cwtl
ss
out
inc
cs
xchg
ss
mov
pop
arpl
add
movsl
imul
xor
ss
xlat
sbb
xchg
sbb
add
scas
jo
xchg
fisubs
mov
imul
sbb
pop
out
mov
xchg
aas
int3
and
push
xor
shlb
jp
lea
in
ficomps
cli
sbb
lret
sub
push
ljmp
push
inc
leave
sub
in
or
test
test
shl
xlat
repnz
ficoml
cmpsb
inc
mov
hlt
jmp
jnp
int
lea
pop
lcall
xchg
clc
pushf
mov
jae
inc
lahf
pop
int
mov
push
jmp
cltd
cmp
aam
daa
fldt
jg
add
push
mov
add
lret
frstor
aam
and
movsl
stc
dec
sbb
mov
adc
sahf
das
leave
fidivs
or
insl
xchg
mov
cmpsb
pop
jle
je
dec
dec
sbb
cmc
das
mov
dec
lahf
lret
push
gs
cmp
lret
mov
fmulp
pop
pop
dec
push
aas
pushf
xor
test
lds
jns
ret
and
out
sbb
cmpsb
add
sti
inc
or
cmc
ja
mov
inc
mov
sarl
mov
mov
mov
es
ret
test
dec
loope
add
test
lea
adc
aas
pop
jge
and
fdivl
dec
jnp
push
cmp
cltd
js
lods
popf
ljmp
idivl
ja
add
fsub
mov
movsb
sbb
mov
fstl
jecxz
lcall
pop
lds
xor
dec
mov
jle
mov
pop
jo
cwtl
sbb
out
push
xor
jge
xchg
rcrb
inc
sbb
adc
in
inc
ret
jno
push
andb
cmpsl
cltd
xor
mov
and
iret
push
out
push
dec
xor
int
data16
add
fstps
por
xorl
fimuls
sub
rcr
sbb
xchg
icebp
push
cmpsb
cmp
idivl
test
lahf
cmp
and
mov
adc
hlt
repnz
cmc
cmp
push
sub
stos
push
sub
jmp
jg
sub
push
jnp
push
or
or
pop
inc
ja
push
loopne
push
pop
and
add
jp
lds
or
or
inc
or
inc
call
pop
imul
rcl
cltd
cmp
dec
div
mov
and
movsl
cmp
sub
inc
sbb
pop
shr
add
lret
jbe
fisubs
adc
loop
xor
cmc
push
outsl
aad
hlt
or
mov
and
inc
pop
cmc
mov
push
pop
inc
sti
test
push
cwtl
sahf
aas
daa
movsb
dec
jmp
xchg
mov
mov
pop
orb
add
gs
dec
inc
in
stos
adc
int
roll
pusha
xchg
lea
cmp
test
sub
xchg
ljmp
push
sahf
push
mov
shrb
loopne
fcomip
hlt
rcrb
adc
xchg
pop
gs
fmul
ror
xlat
sldt
fidivrl
add
ficoms
ja
bound
test
test
repz
sbb
les
fwait
jmp
and
leave
ret
dec
adc
arpl
pop
xor
notb
mov
je
cld
test
jl
cmc
add
add
aaa
fwait
iret
bound
push
sbb
mov
sbb
fiadds
lret
mov
sub
stos
and
int
xchg
and
adc
jl
mov
push
lret
mov
pop
xor
mov
mov
incl
xchg
jmp
insl
sub
push
mov
clc
pushf
dec
cmp
sub
jg
leave
lahf
dec
stos
and
push
test
cmp
stos
jge
dec
movsl
scas
and
or
jnp
mov
pop
lods
add
fwait
imul
test
out
mov
cmp
sbb
lock
inc
gs
not
inc
jne
dec
or
stos
scas
movsl
aas
imul
sbb
repnz
push
lds
pop
gs
cmpb
add
adc
scas
dec
cmp
mov
mov
mov
mov
push
lea
je
ss
xchg
dec
add
arpl
mull
jae
push
mov
ja
xor
test
nop
xchg
lds
sub
out
xchg
cwtl
aas
cmp
flds
out
push
mov
shrb
shrl
pop
mov
mov
xchg
scas
pop
xchg
ret
sub
sub
xor
jne
insb
cmp
ret
or
pop
aas
out
and
sti
aad
add
ja
pop
aaa
dec
sysret
js
or
sbb
fucomp
add
hlt
push
lahf
push
out
jo
mov
movsl
xchg
push
mov
sarl
dec
setno
dec
jbe
push
fadd
ret
popf
cmp
sahf
xor
jge
xor
pop
sbb
cmpsb
icebp
ror
fidivs
pop
xchg
mov
test
imul
and
mov
or
push
ss
jmp
das
imulb
movsl
mov
lods
cs
paddb
mov
jno
adc
cmp
mov
xchg
call
iret
iret
loope
and
das
incb
mov
and
ja
mov
xchg
mov
enter
ret
out
lods
sbb
addb
insb
jg
mov
jl
cltd
push
int3
popf
add
rcrl
xchg
ja
int3
dec
sarb
mov
cwtl
jge
push
in
sub
push
mov
push
mov
pop
xchg
push
mov
lea
cmp
inc
xchg
leave
loopne
mov
xchg
into
je
gs
mulb
cmp
lret
lea
lods
loopne
inc
sbb
div
jge
add
add
mov
inc
adc
or
mov
xorl
fsubr
dec
push
popf
xor
stos
cli
pop
lea
add
dec
sahf
dec
adc
aas
adc
sti
dec
cmp
and
loopne
iret
cmp
std
dec
test
inc
fs
xor
sub
movsb
xchg
mov
xlat
add
or
lret
pop
pop
rcr
cmp
inc
jecxz
leave
mov
mov
xor
out
cld
push
js
les
inc
xchg
mov
pop
dec
sbb
adc
cmp
leave
ds
in
jle
mov
add
add
aad
push
sbb
xchg
pop
popa
adc
dec
les
jno
pushf
mov
enter
movsb
enter
nop
addb
pop
fs
pop
xor
xchg
fildl
addb
lcall
push
pop
mov
cmp
into
popa
jg
out
or
add
push
loopne
cli
mov
js
xchg
mov
push
xchg
stos
rcrl
cmpsl
inc
xor
daa
and
xchg
xchg
andl
dec
pushf
and
mov
nop
or
std
sbb
and
sarl
or
iret
xor
mov
add
jb
mov
sbb
sbb
fidivrl
xchg
dec
xor
cli
sub
cld
push
pop
pop
fstp
lcall
mov
lods
jecxz
iret
sahf
or
or
imul
imul
pop
xor
pop
add
pop
daa
inc
mov
jp
push
push
mov
or
cmc
mov
xlat
pop
add
cmp
cmp
jo
or
inc
std
mov
mov
fnstsw
out
sub
decb
les
or
pop
ss
push
aad
push
xchg
ror
mov
loopne
sub
inc
sbb
xor
hlt
repnz
xlat
push
into
xchg
outsb
push
loope
outsl
or
int3
sbb
cmpsb
jo
or
jne
addr16
inc
cmp
cld
cwtl
gs
cmp
popa
push
sub
mov
mov
leave
out
pusha
mov
iret
pop
lret
push
mov
cli
cmpsb
loop
mov
sbb
xchg
add
mov
loop
leave
shlb
mov
cmp
and
in
push
xchg
mov
sahf
mov
fs
test
insb
xchg
cmp
ret
cmp
call
inc
pop
sarl
or
call
pop
jecxz
and
lret
inc
sbbb
jb
int3
mov
push
add
mov
push
sbb
ja
dec
or
jecxz
test
cltd
icebp
or
popa
je
iret
pop
lea
ljmp
mov
int
xor
push
andb
mov
add
leave
ljmp
or
jne
xchg
push
fldenv
leave
cmp
aam
inc
adc
dec
mov
xchg
xchg
loop
push
jg
inc
add
les
out
xchg
jnp
inc
mov
movsb
popf
enter
dec
sahf
movsl
xchg
jl
pop
or
out
cmp
pop
shlb
pop
mov
ret
shlb
iret
mov
mov
rorl
mov
dec
mov
xor
fs
add
test
scas
adc
into
jge
inc
pusha
add
pop
push
sub
stos
push
int
iret
mov
cmp
ljmp
ljmp
popa
ret
in
mov
mov
shlb
sub
andl
mov
jbe
sbbl
in
lret
push
or
lods
cmp
xchg
mov
xchg
jnp
cltd
pop
std
ret
xorl
sub
dec
add
pop
xor
outsl
mov
mov
in
cwtl
ret
addr16
mov
loop
pop
sub
mov
dec
mov
adc
pop
dec
adc
mov
leave
fadds
inc
call
adc
leave
test
mov
mov
fs
pop
pop
out
pushf
lret
mov
scas
daa
mov
mov
push
mov
bound
test
shlb
fwait
adc
sub
xchg
sti
adc
and
inc
sub
scas
push
mov
mov
mov
pop
cmp
fstl
shl
outsb
cmpsl
test
mov
add
lret
cli
push
lods
sahf
data16
cmp
js
cmp
sbb
sub
cmp
je
mov
cltd
mov
hlt
leave
imul
mov
out
push
daa
xchg
pop
xor
jnp
jmp
pushf
addl
lock
scas
cmp
ret
pop
inc
push
dec
leave
scas
adc
jg
pushf
jae
jno
nop
cli
xor
adc
fxsave
and
out
sti
fucomip
or
dec
sbb
jge
push
aas
inc
out
outsb
rcrl
cmp
test
fucomip
inc
leave
mov
call
adcl
rcrl
xchg
shll
inc
push
fisttps
and
roll
sub
mov
jb
dec
push
cmp
pop
add
pop
pop
push
mov
stc
push
arpl
cld
cmp
mov
and
leave
jp
adc
pop
jns
push
xor
sub
push
xchg
cwtl
pop
sar
mov
mov
test
pop
cli
lods
sub
fidivl
adc
xchg
out
icebp
sbb
or
dec
and
and
jne
pop
mov
hlt
out
sub
loop
adc
jne
js
sbb
xlat
sub
pop
pop
xchg
dec
out
shll
int
aad
lods
add
add
and
test
jne
mov
loopne
hlt
fwait
popa
xchg
rolb
jge
test
out
in
adc
lods
mov
popa
cmp
loopne
test
das
aaa
push
adc
add
sub
std
jmp
fists
mov
pmulhw
or
inc
adc
cmp
jecxz
test
mov
pop
and
cwtl
jg
mov
ficoml
aaa
lret
adc
and
pop
cli
shrb
and
imul
jl
call
jnp
out
clc
mov
cmpsl
xchg
jg
push
jnp
subl
pop
pop
push
lds
add
lods
clc
adc
mov
mov
jae
fldcw
push
xor
adc
push
lods
imul
sbb
adc
nop
scas
mov
cmp
std
pop
test
mov
ja
int
dec
out
pop
mov
fcoms
mov
insb
mov
ss
adc
mov
mov
sbb
adc
adc
popf
mov
test
jns
test
test
xchg
cmp
lcall
cltd
lret
xor
outsb
ds
cwtl
xor
mov
sahf
rcrb
cmp
int3
mov
and
mov
mov
push
lret
pusha
dec
les
cld
clc
cld
inc
mov
mov
ss
dec
pop
cmp
ret
sbb
and
cmp
movsb
mov
fs
ror
out
fcomip
mov
lcall
popa
push
call
std
ret
lock
bound
fcompl
or
fisttps
repnz
xor
pop
rolb
add
push
repz
or
movsl
mov
es
xor
loopne
push
pushf
and
mov
cmp
cmpsl
cmp
aas
add
or
clc
pop
lea
jae
mov
mov
cmp
lods
int3
cmp
cwtl
jne
push
fcom
jb
arpl
icebp
or
enter
call
sub
pop
push
mov
xchg
push
jp
daa
jns
xchg
test
pop
sbb
inc
xor
jo
arpl
add
and
hlt
push
stos
sbb
imul
int
mov
fdivrs
imul
mov
mov
lods
test
push
movsl
aaa
fnsave
movsl
test
mov
jmp
clc
inc
add
xorl
xchg
mov
xor
js
test
daa
add
sub
xor
inc
insl
cmp
sti
dec
xchg
xor
in
xchg
cmp
pop
aas
sarb
mov
addl
cmp
dec
seta
das
lret
repnz
sub
test
inc
mov
push
xchg
dec
cmpsl
ss
xchg
push
rol
mul
aad
sub
and
repnz
fnsetpm(287
pusha
xor
enter
or
movsl
aad
xor
cmpsl
mov
jle
xchg
xchg
cmp
mov
loopne
sbb
js
fstps
pop
jo
lret
mov
sbb
pop
sub
nop
fdivs
mov
xchg
jge
mov
dec
sub
cmp
enter
sbb
pop
rcl
ret
lods
mov
sbb
in
mov
icebp
ds
add
mov
mov
scas
cmp
dec
in
xor
add
push
sbb
mov
jl
adc
nop
sbb
inc
testl
inc
cwtl
adc
or
fwait
enter
jnp
mov
lods
sbb
cmp
mov
rcrl
xorb
xorb
cmc
adc
dec
adc
nop
xlat
imul
outsl
xchg
pop
sub
mov
adc
sahf
mov
imul
test
lret
fidivrl
add
jnp
cmc
pop
fildll
xor
add
and
ja
cltd
dec
or
inc
dec
pushf
xchg
mov
outsl
sub
dec
cmpl
sahf
and
mov
pop
repz
testl
out
outsl
test
repz
cwtl
js
les
cmp
ss
jno
adc
es
sub
iret
jbe
pop
xchg
ds
cmc
out
jnp
or
cmp
in
and
mov
cmp
hlt
pop
adc
sbb
mov
dec
adc
test
xchg
pop
push
dec
repnz
imul
xchg
xchg
repz
mov
fbld
out
icebp
data16
sub
out
stos
xchg
or
es
mov
ds
gs
mov
xchg
lahf
mov
fnsave
adc
jle
aad
inc
sub
icebp
cmp
jle
mov
sub
leave
add
xchg
sub
outsl
scas
pop
mov
notl
shrb
cmpsl
sub
rorb
mov
scas
xor
arpl
add
jb
fistpll
cli
cwtl
cmp
xchg
inc
sub
leave
mov
rclb
ljmp
mov
mov
and
in
xor
out
fadds
mov
push
out
clc
pop
pop
push
sbb
daa
jl
hlt
mov
add
add
pop
cltd
adc
cmp
xor
ret
imul
shrb
and
int
subb
dec
dec
inc
or
push
and
repnz
iret
idivb
loopne
or
push
mov
and
dec
cltd
mov
sbb
jae
mov
mov
push
mov
daa
dec
scas
insl
pushw
mov
lret
xchg
hlt
aaa
xchg
ds
pop
inc
rcrb
cmp
dec
xor
cmp
sahf
add
mov
neg
or
adc
aad
cmp
mov
lods
mov
jecxz
decl
mov
inc
push
dec
push
mov
hlt
fs
lods
stos
ljmp
in
jp
lea
mov
cwtl
cmp
mov
mov
inc
cmp
push
and
flds
sub
jae
sbb
xor
stos
sbb
or
sahf
sbb
mov
adc
les
xchg
dec
jo
xor
dec
push
pop
mov
mov
cmp
ljmp
adcb
fbld
aaa
cli
xor
pop
cmp
aaa
mov
inc
scas
sbb
add
aaa
or
or
shrl
es
push
adc
ret
sbbl
adc
stos
lock
mov
es
mulb
mov
jne
add
adc
fdivs
aas
cli
roll
dec
lock
out
js
push
sbb
into
jae
pop
stc
jle
mov
loope
shr
adc
insb
sbb
incb
push
mov
popf
mov
fstl
pop
in
enter
fbstp
push
jl
sarb
lds
xchg
mov
insl
add
addr16
fdivr
scas
mov
mov
xchg
into
jle
cmp
push
int
inc
cs
xor
cwtl
inc
fidivrl
mov
xlat
xchg
inc
jl
push
insl
subb
negb
xchg
enter
frstor
inc
insb
stos
fcmove
mov
movsl
jge
cmc
sub
lea
sub
popl
sbb
nop
push
fimull
or
mov
psrld
push
push
mov
pop
jge
jg
sub
mov
and
jbe
push
and
mov
lret
inc
or
cmp
or
jno
add
sarb
pop
icebp
stos
stos
and
and
ror
pop
mov
sbb
pop
jl
cmpsb
push
out
mov
mov
lahf
loopne
scas
xor
xchg
lods
stos
or
and
inc
push
push
sub
daa
dec
in
dec
mov
data16
addb
jmp
xor
shll
data16
lret
hlt
or
push
sarl
dec
popa
inc
je
or
iret
sbb
sbb
aas
repz
cli
sbb
shrb
pop
lcall
loopne
sbb
in
std
aaa
ds
movsl
jp
push
jecxz
mov
pop
mov
stos
adc
jae
pop
xchg
ficoms
mov
sti
mov
jns
cld
jae
je
rorl
cmovo
sbb
pusha
ja
addr16
imul
push
aam
out
jle
shrb
shrl
push
mov
cmpsl
or
shr
mov
or
sarb
xor
flds
call
add
cwtl
iret
popa
jo
push
mov
xrelease
xlat
or
sti
xchg
lret
xchg
pop
xlat
andb
or
adc
push
push
hlt
es
add
in
push
fucomp
xor
stos
sub
aam
stos
cmp
xor
aam
mov
pop
ret
ret
xchg
lea
fs
dec
jp
std
pushf
or
push
aaa
jl
or
fdivp
dec
adc
fisubrl
mov
push
js
test
mov
std
dec
sub
arpl
xor
aas
bound
xchg
jle
add
mov
leave
mov
jno
hlt
je
sbb
adc
flds
or
in
mov
cwtl
push
ret
mov
mull
and
xchg
dec
jae
nop
das
fwait
sub
cmpb
adc
test
leave
outsl
sti
pop
fdivl
sbb
dec
sahf
lods
mov
xlat
sti
flds
ret
lret
sbb
lea
jp
mov
and
je
popf
lahf
cmp
mov
in
in
imul
rcrb
pop
or
mov
int
pop
push
cmpsl
cmpsl
pop
ds
mov
add
mov
into
clc
repz
xchg
pop
xor
mov
mov
mov
pushf
cmp
push
jg
shll
andb
clc
mov
xchg
xchg
inc
and
fidivrl
push
enter
shll
and
sbb
pop
pushf
in
les
sbbl
mov
jno
repnz
lret
and
push
in
in
cld
orb
outsb
sub
xchg
xchg
dec
inc
fsubrl
ljmp
push
dec
out
fs
xchg
add
pop
xchg
mov
jecxz
int3
jae
jl
push
push
mov
push
cmp
stos
shrl
je
dec
push
fwait
jg
in
sahf
movsb
push
mov
insl
mov
es
gs
call
sub
jb
push
scas
inc
popf
xor
loope
ret
mov
add
testb
sbb
xchg
jmp
jb
punpckldq
out
cmpl
mov
mov
xchg
adc
mul
ret
cmp
int
sbb
int
and
in
data16
sbb
mov
pop
push
sub
xchg
icebp
in
daa
push
mov
and
mov
in
shll
imul
or
icebp
pop
stc
mov
iret
es
testb
cmp
fwait
pusha
push
lcall
sbb
cld
and
cld
and
adc
jl
adc
jecxz
clc
std
bound
jl
gs
sub
pop
xchg
into
ret
xchg
lahf
inc
mov
xlat
xorl
pop
lds
stos
rcll
insb
or
fdivl
in
jg
lret
and
fmuls
push
xchg
popf
cs
sbb
rclb
sar
or
xchg
push
outsl
push
xor
xor
mov
cwtl
jns
ds
mov
pusha
jo
cmpsl
out
out
cmp
pop
ds
mov
adc
pusha
sub
add
add
pop
scas
leave
xorl
jl
pop
push
std
test
jl
xchg
popa
mov
lret
iret
jp
inc
xchg
scas
xor
pop
es
lods
sub
add
fwait
stos
outsb
incb
gs
stc
xchg
mov
sub
or
stos
es
addr16
fsub
jp
es
in
arpl
aad
dec
cli
xchg
mov
lret
inc
cli
in
pop
xchg
sbb
mov
inc
xlat
test
pop
mov
pop
loope
ret
adc
lahf
and
xchg
xchg
in
xchg
outsb
setl
sub
rcrb
call
rolb
push
mov
out
les
mov
sub
mov
dec
aas
lret
repnz
shl
scas
fwait
in
aas
or
mov
lret
jg
sbb
xchg
jle
andl
insb
jns
std
or
outsl
jmp
xchg
adc
fidivl
lahf
inc
cltd
aas
cli
and
push
sbb
in
mov
mov
jge
ds
orl
dec
mov
subb
mov
adc
pop
or
loop
ja
mov
cmp
imul
xor
dec
push
push
cs
sbb
test
loope
xor
movsl
pop
add
and
das
adc
test
dec
shl
pop
out
inc
andb
jl
push
push
xchg
nop
or
fldenv
call
mov
sbb
sbb
lret
jg
or
aad
mov
test
mov
mov
loope
sub
add
test
ret
pop
xchg
nop
cmc
stos
in
stos
dec
stos
insb
push
push
adc
jne
sahf
sarl
inc
mov
shl
fwait
pop
inc
jb
inc
xlat
pushf
fwait
lahf
icebp
sbb
add
inc
mov
das
cmpsb
sti
xor
cmpb
aam
aam
mov
adc
or
mov
or
loop
xor
pushf
adc
sub
push
lock
cmpsl
cli
fdivrs
jns
and
mov
scas
test
xchg
mov
xor
xchg
push
sbb
xchg
xlat
xor
cld
out
loope
lahf
out
cmp
cmp
repnz
sub
adc
pop
xchg
jge
ret
popf
arpl
inc
clc
and
mov
or
aad
jbe
shrl
pop
sub
jl
cwtl
adc
xchg
jp
xchg
xor
sub
loop
push
rclb
int3
adc
das
jecxz
negl
mov
adc
push
dec
pop
insl
xchg
xchg
aas
ljmp
xor
jne
loop
sbb
fnstenv
gs
or
and
adc
xchg
test
mov
or
dec
and
inc
mov
andb
mov
fbstp
add
pusha
xchg
mov
mov
and
ja
sub
push
repz
call
sub
dec
outsl
scas
cmp
leave
out
or
ret
dec
cmp
jp
lcall
sbb
stos
out
fld1
int
mov
mov
and
bound
idiv
hlt
cmp
ss
push
sti
pusha
repz
push
mov
adc
xchg
clc
loopne
push
adc
jne
inc
jne
lds
outsb
js
and
or
pop
pop
vmptrld
sbb
lahf
and
mov
pop
outsb
jnp
pusha
aas
jnp
and
shll
filds
ljmp
add
inc
addb
cmp
dec
dec
adcb
add
icebp
rcr
pusha
ss
xor
jb
je
cmp
xor
adc
and
mov
dec
dec
adc
adc
lock
scas
pop
aaa
xor
fisttps
adc
jne
ljmp
jmp
test
std
lods
or
mov
sub
rorl
sbb
jge
xchg
add
xchg
and
cmc
lea
scas
stos
add
and
rcll
out
call
mov
mov
repnz
mov
cmpsl
insb
test
cmc
nop
lret
outsl
les
arpl
stos
dec
push
jmp
in
xchg
loopne
sbb
mov
shrl
insl
and
cmpsb
add
sbb
fdivs
add
mov
int
ror
mov
mov
lahf
cmp
and
cmpsb
lods
test
popa
xlat
jle
cmp
xchg
push
ss
stos
xor
lret
jne
inc
aad
sbb
fcoml
loope
lcall
fwait
into
test
shrb
movsl
ss
js
call
push
pop
ss
jmp
jmp
out
xchg
mov
xchg
dec
add
adc
jecxz
adc
insb
icebp
in
lret
arpl
xchg
xchg
xor
loope
movsb
push
sub
andb
mov
xor
jl
in
fimull
out
pop
aam
mov
sub
pop
xchg
adc
mov
ja
mov
jo
sub
inc
xor
cmp
dec
js
mov
xor
imulb
das
mov
xchg
ds
and
inc
fdivrs
xchg
pop
testb
fnstsw
mov
add
fmul
rol
sti
test
test
insb
jne
sti
push
pushf
mov
mov
sbb
sti
sub
cs
mov
outsb
mov
mov
xor
outsl
lret
jmp
rorl
test
jle
xchg
js
push
idivl
repz
fstp
push
xchg
cmc
in
test
adc
dec
fidivrs
xor
test
mov
out
repz
lds
dec
and
cs
out
in
inc
jg
mov
stos
mov
data16
mov
xor
push
cmp
dec
mov
loope
or
fwait
mov
jecxz
jbe
scas
rcrb
js
sbb
push
jle
sub
push
out
imul
cltd
enter
repnz
imul
loop
subl
mov
fcoms
xlat
in
xchg
imul
inc
dec
dec
std
jl
lret
inc
pop
xchg
hlt
daa
aas
adc
jl
imul
mov
dec
je
cmpsl
andl
push
outsl
stos
sub
test
adc
imull
lahf
sbb
lods
ror
sbb
push
inc
mov
inc
aad
jp
mov
add
shrl
xor
scas
ret
out
movsl
push
jle
dec
mov
cmpsl
sbbl
sbb
dec
lret
jno
pushf
lret
lock
cld
and
mov
sahf
and
push
sub
mull
pop
lahf
incl
jg
push
pop
jg
ror
sti
add
mov
mov
fldcw
or
gs
cmp
hlt
cmc
sbb
cmpsl
adc
fcompl
push
pusha
imul
stc
outsb
xor
les
add
movsl
xor
pop
in
adc
cwtl
dec
dec
push
das
stos
sbb
je
mov
repnz
or
popf
out
lahf
out
pop
movsb
clc
je
idivl
in
jle
pop
sar
jne
cmpsl
insl
lret
cmp
repnz
sarb
inc
ljmp
or
push
mov
add
jns
test
pop
push
shlb
mov
xor
and
nop
cwtl
push
pop
fimull
push
inc
int3
sbb
testl
xor
bound
cmp
mov
dec
out
sbb
mov
lods
out
mov
int3
out
bound
inc
jecxz
pop
insl
adc
addr16
adc
sarl
push
pop
movsl
jb
adc
inc
push
cmc
jno
mov
sub
mov
cmpsb
sbb
cmp
push
sub
mov
dec
mov
adcl
inc
xor
loope
push
mov
sbb
mov
mov
rorb
ret
dec
hlt
and
repz
cmpsb
int
pop
clc
stc
add
mov
or
jge
inc
insb
jbe
dec
jmp
mov
clc
out
cmp
nop
mov
mov
xor
enter
add
test
cmpsb
push
test
mov
cmp
cwtl
ficoms
icebp
dec
das
rcrb
xchg
push
xchg
imul
pop
imul
enter
adc
mov
inc
sbb
bnd
clc
ss
push
mov
dec
cwtl
jb
xor
mov
cmp
adcb
cmp
sbb
outsb
push
sub
pop
pop
mov
decl
pop
repz
mov
sub
pop
pushf
mov
daa
adc
mov
mov
mov
notb
cmc
pop
into
hlt
adc
test
lcall
iret
sbb
psrlw
jne
add
inc
subl
in
mov
jae
scas
hlt
xchg
lahf
sbb
xchg
stos
mov
xor
cwtl
dec
and
shrb
cwtl
xor
scas
mov
dec
cli
bound
pop
and
adc
outsb
adc
jge
test
push
leave
pop
shr
in
xor
jo
cmpsl
js
jne
outsl
inc
jge
push
sbb
xor
xor
out
mov
mov
cmp
sbb
mov
sarl
js
jb
add
cmp
cmp
jns
repz
cmp
rcrb
idivl
push
mov
xor
pop
pop
xchg
adc
out
lods
and
in
jmp
push
add
inc
fnstcw
shr
mov
mov
adc
cmc
arpl
add
ret
jmp
cs
sbb
ljmp
pop
pop
and
push
cmp
lahf
in
mov
aaa
xchg
fcmovnbe
pop
out
inc
aam
jge
repz
mov
rolb
hlt
xlat
adcl
rcll
xchg
sub
cmc
ss
cmp
outsb
mov
xlat
ret
leave
ja
scas
sti
dec
jns
clc
xor
dec
sbb
sti
lods
and
xor
test
mov
cmpsl
cmc
dec
es
cmc
sbbb
xor
inc
rorl
rcll
pop
pusha
adc
mov
cmp
cmpsb
dec
mov
inc
pop
jae
test
xor
aad
idiv
dec
push
jmp
dec
pop
xchg
cmpsb
clc
and
jl
mov
adc
out
adc
leave
sub
cmpl
pop
push
jnp
xlat
test
hlt
inc
call
int
jae
lds
jecxz
inc
in
mov
loop
mov
rolb
mov
repnz
push
or
int3
out
test
addr16
out
xchg
jecxz
sbb
cld
cmpb
pop
mov
mov
sub
push
mov
mov
jnp
pop
dec
sahf
pusha
adc
mov
pop
sbb
sar
push
ror
scas
aaa
out
sti
add
xchg
cmp
loopew
sbb
js
mov
inc
test
pop
loope
xor
inc
jne
pop
push
jb
xor
sbb
sub
test
jmp
mov
jbe
cmp
mov
aam
xlat
pop
push
and
xchg
sub
sahf
call
adc
insb
push
int
cmc
hlt
loopne
xor
jns
stos
xor
mov
out
inc
pop
int
and
lret
add
mov
in
loopne
xor
mov
imul
pop
mov
hlt
jle
loop
push
mov
mov
add
xchg
jno
pop
cmpb
mov
lcall
xor
sub
repz
leave
cli
repz
jae
xor
and
out
xor
push
lock
jae
inc
pop
mov
sub
jg
in
iret
jns
fdivs
pop
push
and
xor
xchg
jno
cmp
cmp
dec
fwait
add
dec
imul
push
xor
or
mov
icebp
nop
inc
and
clc
mov
cmc
fstl
lods
xchg
adc
mov
mov
in
inc
or
pop
or
dec
add
pushf
in
sbb
fisttpll
push
mov
xor
test
push
lea
inc
push
pop
xchg
sub
xchg
aaa
mov
aad
out
mov
mov
jge
out
xor
add
je
adc
sahf
out
xchg
in
lds
mov
enter
outsb
sbbl
pop
andl
mov
jl
or
cmc
inc
xor
jbe
add
in
jns
xchg
mov
aaa
sub
pop
repnz
mov
jb
or
stos
jae
pop
cltd
stos
lods
imul
adc
test
in
cmpsb
pop
dec
cs
insb
fildl
mov
aad
cmp
xor
xor
mov
sbb
daa
cmpsl
stc
jl
sbb
ds
mov
sahf
mov
jle
push
fstpt
cmp
iret
ds
out
dec
js
into
xor
cld
clc
cmp
jl
js
inc
aad
sahf
jmp
inc
xchg
pushf
add
jns
jbe
cs
pop
push
div
xor
push
push
push
arpl
lock
sbb
or
xchg
aas
shlb
neg
mull
sub
pushf
xchg
aam
xchg
inc
aam
mov
lea
out
sbb
or
aas
inc
icebp
sbb
fadd
rol
lock
ljmp
pop
test
push
and
in
xlat
pop
jns
inc
repz
ja
mov
push
jae
xor
insb
cwtl
push
fstpt
mov
scas
xor
jmp
sub
int
decl
jns
outsb
cli
sub
inc
scas
and
inc
mov
sbb
faddl
jne
enter
inc
xchg
push
inc
lock
fnstenv
orb
mov
dec
push
mov
call
addr16
in
cltd
xorb
sahf
pop
pop
add
xor
clc
ljmp
ss
div
jp
dec
xor
sahf
xor
jnp
int3
mov
add
push
jge
xchg
mov
pop
xor
lret
lahf
sbb
mov
dec
bound
lock
mov
neg
iret
arpl
mov
xchg
popa
push
push
jne
mov
mov
mov
pusha
outsl
lret
neg
sub
dec
dec
cli
in
push
out
dec
adc
fcmovne
cmc
sub
and
or
adc
shlb
xor
cmpsb
shrl
jae
jl
cld
sbb
popa
out
in
adc
jp
repnz
call
pop
cwtl
cld
sbb
jae
in
movsl
inc
test
movsl
shll
mov
push
stos
push
popa
movsb
ss
test
pop
pop
mov
test
insb
mov
in
mov
mov
mov
ret
test
test
xchg
fidivl
xchg
push
jno
int
cmp
cli
push
movsb
ss
and
lock
mov
fwait
js
fwait
cmc
notb
aaa
dec
cmp
mov
shll
mov
ret
fucom
xchg
mov
pusha
xor
insl
lds
cltd
fxam
mov
or
out
xor
cmp
mov
movsb
adc
cwtl
cli
pushf
mov
lahf
and
lods
xor
mov
push
pusha
ja
lock
push
inc
lret
or
adc
mov
push
flds
or
pop
cs
icebp
sti
jecxz
test
les
sbb
pop
push
out
fwait
arpl
outsl
jae
leave
fwait
or
push
rcrb
mov
pop
les
and
adc
mov
fdivl
xor
push
fwait
out
ja
iret
out
add
std
faddl
push
lods
insb
inc
push
dec
aam
addb
lea
test
cmp
xchg
mov
mov
jo
mov
es
repnz
cwtl
fsincos
mov
jecxz
cmp
shlb
push
xchg
stc
pusha
idiv
nop
sti
jo
stos
inc
cmp
loop
dec
je
movsb
lea
gs
inc
push
call
and
lods
jae
fisubs
push
mov
lahf
aam
aad
pop
inc
jne
pop
dec
sbb
or
arpl
imul
jae
xor
ret
adc
ret
pop
or
adc
in
popa
jle
gs
les
xor
xchg
lret
fmull
mov
rclb
bound
mov
sbb
xchg
arpl
inc
push
pop
out
ds
sub
int
jnp
push
in
sahf
pop
mov
rcrb
mov
aad
test
cs
clc
pop
lret
xchg
pop
rcrl
in
mov
repnz
sub
adcb
hlt
fisttpll
jae
push
mov
inc
add
or
repnz
mov
repz
pcmpgtb
push
icebp
dec
jg
stos
xchg
shl
in
mov
int
xor
scas
inc
sbb
mov
jl
jmp
push
pop
inc
mov
sbb
dec
stos
pop
sub
stos
or
push
inc
pop
ss
sahf
mov
loop
ficomps
mov
dec
add
sub
push
push
sbb
push
jmp
inc
imul
pop
incl
sbb
arpl
push
imul
dec
push
cli
out
ljmp
in
jne
xor
lods
out
je
std
mov
in
xchg
gs
lret
add
add
or
ljmp
test
lods
fidivs
hlt
sbb
aaa
dec
insb
fiaddl
les
add
sahf
cmpsl
and
repnz
aaa
pop
movsl
cmp
or
ret
pop
mov
cmpsl
xchg
sub
push
aam
push
push
xor
cmp
push
xchg
push
and
jle
cmpsb
xchg
loopne
aaa
jmp
dec
les
je
sahf
adc
xor
repz
nop
push
jmp
bound
icebp
pop
cmp
mov
sub
xchg
add
jo
fcmovb
adc
outsl
mov
mov
xchg
test
stos
jle
jp
popa
and
es
popfw
push
in
dec
xchg
jmp
cld
fcmovb
cmp
and
or
out
cmpsl
push
lahf
xchg
push
ja
cmp
mov
dec
inc
cmpb
mov
cli
jbe
inc
mov
mov
ret
int
sbb
sahf
cmp
add
dec
aad
and
nop
adc
lods
test
jb
leave
int
enter
mov
push
lds
jnp
mull
inc
in
cmp
js
xor
mov
xchg
push
mov
mov
pop
add
mov
mov
das
loopne
arpl
fdivrp
in
lods
outsl
xchg
xchg
mov
xchg
dec
rolb
xlat
and
or
es
dec
add
fldl
std
mov
out
push
adc
xchg
cmpsl
fildl
push
and
adcl
sahf
stos
outsb
loop
ret
jnp
aaa
cmp
and
mov
push
ret
in
and
ljmp
add
push
cmpsb
int3
inc
xchg
rcrb
mov
mov
out
lret
mov
xchg
stos
repnz
sub
mov
mov
aad
std
out
hlt
xor
stc
pop
mov
data16
testl
mov
loopne
add
mov
inc
pop
inc
push
addr16
push
jge
stos
in
and
dec
outsb
gs
mov
sti
or
shll
out
lahf
mov
in
ficoms
insl
popa
or
jmp
dec
and
xor
lret
scas
bound
pop
fcoms
sub
or
mov
or
aad
add
out
sahf
mov
mov
loope
out
xchg
mov
pop
loope
movsb
mov
loope
pushf
mov
test
adc
pop
test
ljmp
fisubs
jp
loop
andb
aas
scas
ds
popa
aam
jne
loopne
test
mov
mov
movsl
push
les
aad
in
jne
aaa
fcmovu
gs
ficoms
outsl
push
jo
mov
lods
leave
xor
arpl
lea
loope
insb
ja
jnp
xchg
mov
pop
xor
pop
lea
scas
lahf
or
aas
imul
mov
lds
mov
mov
or
flds
xchg
mov
outsb
fnsave
bound
cwtl
icebp
aas
mov
add
jge
test
xchg
mov
outsb
in
adc
incl
sbb
jl
stos
fildll
xor
xor
jae
lods
inc
shrb
loope
push
aad
and
xor
push
lcall
and
push
push
mulb
mov
stos
pop
push
loope
cmp
add
incl
xlat
lods
xchg
mov
pop
xor
fldenv
les
and
imul
in
mov
int
sbb
mov
test
stos
mov
cwtl
inc
js
xlat
stos
subl
dec
stos
icebp
iret
fldenv
mov
add
inc
xor
jo
mov
das
pop
mov
or
pop
fbstp
fidivrs
idivl
pop
xchg
gs
push
notb
push
cmpsl
loopne
repz
outsb
icebp
in
out
sbbl
push
lret
imul
insl
out
aam
das
push
push
inc
rcrb
adc
cmpl
pop
gs
pop
mov
enter
sti
sbb
pop
push
push
jae
js
int3
insb
mov
adc
push
jno
mov
rcrb
adc
lods
pop
mov
mov
pop
out
push
fs
dec
bnd
popa
jo
inc
sub
mov
and
jmp
cmpsl
outsb
cmc
test
aas
insb
aaa
xor
xchg
cmp
cmpsb
pop
jp
int
out
mov
pop
adc
imul
shrb
adcl
mov
xor
aas
pusha
test
repz
iret
jae
jp
pushf
fistpll
lds
xchg
push
or
xchg
in
cmpsb
enter
pop
mov
fimull
and
es
xchg
movsb
pop
xchg
xor
inc
mov
xor
jle
cmp
cmc
fwait
aam
xor
mov
loopne
out
insb
iret
dec
daa
fs
mov
adc
mov
pop
mov
shlb
bound
jmp
mov
xlat
cmp
stos
stos
lret
into
loopne
sub
add
jge
mov
xchg
xchg
test
pop
mov
int3
and
jb
xchg
scas
jecxz
xor
aas
inc
lret
test
movsl
cmp
dec
jmp
mov
aaa
inc
nop
hlt
stos
lret
pop
mov
dec
add
add
imul
shll
pop
or
fists
push
hlt
dec
dec
mov
push
test
pop
sub
add
sub
xor
lret
pushf
test
adc
cwtl
lret
aad
fnstcw
outsl
test
rcll
or
push
inc
sbb
or
insb
daa
shlb
mov
sbb
jp
and
sub
stc
enter
inc
out
pop
jmp
xchg
dec
or
sbb
sub
jne
cmp
sub
int3
or
bound
pop
jle
jnp
fwait
cmp
xor
fwait
into
cmp
pop
dec
fnstcw
jne
aam
adc
add
jmp
sub
jb
fldenv
push
ljmp
and
dec
pop
push
shlb
fdivl
adc
fdiv
aad
sub
xchg
and
and
dec
sahf
enter
xor
mov
dec
test
int
jno
pusha
xchg
push
pusha
aam
addl
xchg
adc
jae
icebp
gs
xchg
insl
stos
sbb
ss
hlt
dec
or
mov
adc
sub
leave
cltd
xor
cmp
sti
inc
add
push
ret
mov
jno
pushf
xchg
arpl
dec
addr16
cld
scas
lds
sahf
xlat
jne
mov
roll
bts
enter
cmpsb
xchg
in
cmp
gs
mov
cmp
rcrb
push
popa
or
pop
dec
mull
xchg
pop
sbb
in
xor
cmp
lret
repz
xor
call
mov
mov
jg
push
mov
pop
stos
dec
sub
dec
fs
adc
clc
bound
cmp
or
xchg
fsubr
dec
sbb
lods
fcmovu
jbe
in
jl
xchg
mov
push
movsl
and
insl
lret
push
mov
leave
and
pop
js
mov
cmp
pop
inc
cmp
nop
nop
inc
inc
and
aas
lea
pop
ss
sub
xorb
iret
int3
push
xchg
popf
les
pop
test
daa
leave
lock
bound
bound
mov
mov
xor
adc
iret
dec
dec
adc
or
repnz
imul
or
jecxz
inc
pop
call
roll
cld
push
imul
push
loope
xor
jne
shll
push
xlat
repnz
sub
jge
adc
lcall
jle
ljmp
cmp
inc
inc
or
inc
mov
dec
xlat
and
out
cs
cmp
jmp
test
mov
mov
pop
inc
fmuls
sarb
jne
cmp
pop
cli
mov
cmpsb
pop
lods
and
jo
push
inc
jmp
sub
add
movsb
mov
dec
loop
loop
stc
stos
mov
out
leave
push
mov
fdivl
sbb
cmc
xchg
adc
les
repz
push
std
ljmp
mov
pop
mov
push
pop
lds
orb
call
std
aam
sub
pop
leave
clc
insb
xor
add
fsubr
adc
or
andl
sbb
mov
jmp
add
stc
stc
std
inc
fucomi
mov
stos
imul
add
rcrl
pop
mov
testl
lret
out
inc
dec
add
mov
ljmp
mov
fwait
icebp
cli
push
lods
insb
idivb
mov
mov
mov
stos
mov
sahf
lds
js
mov
in
sub
adc
fcompl
dec
sub
jle
adc
clc
push
stos
and
sub
cmpsb
pop
call
jo
lcall
outsb
xchg
out
xor
ret
sbb
lret
sbb
mov
aas
push
jl
leave
shrl
pop
or
ljmp
cvtdq2ps
aad
es
xor
pop
jl
int3
and
push
int
sbb
cltd
leave
pop
inc
xchg
insb
test
ja
repz
mov
lret
ss
pop
lea
ljmp
fucomi
cmpb
fwait
js
jg
fwait
lock
outsb
arpl
adc
add
push
outsl
sbb
jb
bound
in
or
adc
unpckhps
cmc
mov
and
push
add
out
cmpsl
mov
xor
outsl
pop
scas
mov
sub
out
jl
sbb
jno
fildl
aad
xchg
ljmp
js
ret
adc
clc
es
jbe
sti
ss
jno
repz
mov
pop
jae
pop
insb
xchg
and
xchg
int
xor
mul
jo,pn
pushf
mov
dec
sti
jo
push
mov
adc
push
inc
and
outsl
mov
xor
mov
adc
add
icebp
xlat
mov
aaa
fisubrs
aad
adc
imul
fwait
jge
fsts
mov
jno
pop
inc
jmp
int
sub
xlat
jb
js
push
in
cmp
out
movsl
inc
inc
or
js
je
adc
sbb
jl
cltd
mov
gs
cmp
sti
xor
rclb
sbb
sub
cmpl
jmp
jns
or
cmp
inc
inc
mov
insl
xor
loope
or
imul
andb
into
in
repnz
add
and
and
xchg
int
stos
inc
hlt
dec
mov
out
ja
sbb
outsl
mov
push
sub
xor
xor
fisubrl
dec
fadds
pop
gs
inc
mov
inc
xchg
push
dec
mov
inc
stos
sbb
adc
push
out
mov
jg
mov
rclb
mov
pop
mov
call
sbb
nop
adc
mov
mov
scas
cwtl
lea
jae
sbb
inc
sbb
nop
jmp
adc
cmp
mov
cs
push
mov
imul
and
test
push
cmp
outsb
int
aam
sbb
cmp
ficoms
jno
cld
jne
push
jecxz
dec
into
mov
jge
loop
mov
movsl
xor
aad
cli
and
pop
cli
xor
sub
rorl
mov
sbb
popa
or
and
jbe
int3
data16
mov
fcom
mulb
popf
mov
push
packssdw
outsl
ret
pushf
jp
fucomp
pop
pop
push
lods
mov
iret
and
lea
push
and
cld
ljmp
pop
adc
addr16
xor
dec
lds
and
ljmpw
aaa
push
loope
mov
into
rclb
dec
imul
jmp
lods
or
xchg
xchg
out
push
pop
inc
lret
mov
xchg
out
jnp
and
and
jle
bound
sbb
fisttps
mov
in
movsb
xor
or
pushf
jle
push
mov
cmpsl
jmp
lock
dec
aad
sub
or
mov
in
jecxz
hlt
or
sub
scas
arpl
mov
adc
xlat
mov
jae
iret
shlb
mov
cli
inc
fwait
jns
iret
mov
pop
sbb
xchg
iret
ret
out
ret
icebp
js
cmp
ljmp
and
jo
push
push
idivl
sub
fs
cwtl
dec
xchg
cmpsl
sub
xchg
int3
adc
sbb
mov
or
jne
fcomps
sub
out
std
lcall
test
fs
mov
in
dec
cmp
lea
inc
daa
jb
cmp
stos
adc
loop
jle
xor
call
test
pop
out
nop
mov
fnstsw
aaa
mov
and
and
std
mov
cmpsl
test
mov
cmc
xorl
xchg
ret
cmp
and
mov
inc
loopne
mov
test
add
ja
data16
xor
dec
addb
pop
sahf
adc
dec
ror
mov
cmp
sarl
jns
sahf
sbbl
cmp
or
pushf
out
jp
lock
lcall
mov
out
movsb
sbb
jecxz,pn
xor
fcoms
inc
pop
add
stc
popa
jp
or
mov
mov
xchg
jb
add
push
mov
pop
pop
enter
pusha
add
inc
cli
xor
mov
negb
repnz
call
xchg
sub
rorb
adc
fimull
jo
dec
pop
mov
rcr
aam
adc
mov
int3
loop
cs
or
and
xor
insl
sbb
dec
shlb
sbb
mov
stc
cmpsw
mov
jns
lods
rol
sbb
cmp
mulb
xlat
jbe
jp
cltd
xor
mov
push
push
mov
xchg
xchg
das
xor
xchg
jno
lahf
movsl
jnp
pop
pushl
lods
inc
jb
loopne
aas
or
push
aaa
push
jmp
jmp
faddl
sbb
sub
rcl
fidivrl
adc
stos
shrb
pop
mov
mov
mov
aam
pop
jl
aas
xchg
out
es
jmp
inc
push
mov
mov
add
ds
sub
mov
jge
lods
ret
mov
int
pushf
push
xchg
lret
sbb
sub
xchg
aam
ret
lahf
adc
add
sbb
inc
jo
ljmp
scas
sti
ja
outsl
cmp
mov
mov
mov
sub
sbb
mov
inc
stos
inc
sub
out
xchg
mov
sarl
ja
pop
ret
xor
and
loopne
fldl
loope
cmp
jae
pop
jp
sahf
push
push
out
frstor
sahf
cmp
or
pop
xchg
jmp
das
icebp
or
sahf
cmp
or
xchg
mov
add
cltd
and
xor
out
cs
les
call
push
fidivl
outsb
ljmp
stos
mov
add
fnstenv
call
mov
mov
cmc
add
les
lods
mull
lret
dec
push
dec
das
mov
sbb
pop
push
repz
mov
in
mov
mov
xchg
add
push
loop
fstpl
mov
fnstcw
push
xchg
jge
cmp
insb
xor
les
sub
cmc
iret
mov
mov
adc
and
int
jecxz
push
cld
data16
and
inc
jno
outsb
iret
xor
dec
ret
add
cld
arpl
xor
inc
pop
mov
sbb
add
ss
and
add
pop
push
xchg
add
adc
subb
sbb
pop
dec
int3
clc
xor
sub
pop
inc
fs
addr16
out
pop
or
mov
cli
push
nop
pop
adc
clc
or
ss
pop
mov
rep
aad
andnps
add
mov
push
sbb
pusha
dec
out
leave
shr
stc
dec
jle
jae
jl
fcomp
xchg
addl
push
shl
pop
and
jno
scas
xchg
in
cld
sahf
inc
xchg
dec
addb
and
in
stc
push
jnp
sub
pop
adc
imul
jnp
mov
push
ds
mov
push
pop
xchg
xlat
inc
jge
add
sbb
rolb
lcall
popf
in
jnp
inc
jns
loopne
dec
dec
test
test
lods
ja
dec
shl
xor
jecxz
std
cmp
xchg
imul
mov
jmp
mov
jmp
cli
dec
out
pop
pusha
insl
cltd
cmp
pop
push
pop
lods
hlt
mov
jmp
rcrl
stc
int
sbb
jns
xor
dec
stos
std
das
jg
into
pushf
cmpsl
leave
mov
nop
sbb
xor
pop
push
or
leave
adc
inc
fs
mov
and
cmpsl
inc
jb
loopne
nop
repnz
je
pushf
arpl
pop
mov
insl
cld
adc
lret
cmpsb
dec
push
jg
mov
xor
mov
test
in
ja
jne
ret
inc
lcall
push
in
adc
push
jl
add
ficompl
ja
sbbb
push
pop
icebp
stos
adcl
adc
jecxz
sbb
push
jge
das
addr16
scas
aas
andb
dec
mov
sbb
pop
js
xchg
dec
aam
or
ja
jmp
sbb
sub
push
pop
popa
and
pop
and
sbb
xorb
mov
cli
fstpl
test
jbe
pop
add
xchg
arpl
ds
cmp
ds
and
ret
cmp
dec
iret
xchg
adc
pop
lods
ret
inc
leave
xchg
inc
xor
pusha
xchg
std
push
inc
pop
mov
jno
lret
test
push
push
outsl
insb
lret
das
add
dec
movsl
loop
int
scas
faddp
add
cwtl
add
inc
call
push
popa
call
lret
shll
push
sub
into
xchg
lret
aas
cmp
jb
jnp
jo
xorl
sub
mov
or
push
mov
xlat
in
adc
jno
mov
push
sbb
and
ss
testl
sbb
and
pop
stos
into
mov
test
lret
sub
ret
mov
cli
xchg
fs
sbb
sarl
test
xchg
add
addps
movsb
movsl
scas
push
leave
data16
icebp
mov
or
scas
mov
mov
mov
sub
jnp
add
lock
cltd
dec
int
mov
sub
js
adc
xchg
pusha
iret
xor
push
sub
mov
cli
jge
mov
add
rorb
cli
xor
fs
jne
adc
cmp
seta
loop
sti
mov
mov
movsb
push
xchg
popa
lods
lock
xchg
push
xchg
movsb
jne,pn
fsubrs
xor
push
daa
and
xchg
imul
xchg
movl
dec
mov
icebp
inc
sub
sbb
and
push
rorb
jge
mov
rorb
imul
push
inc
add
rcr
lods
lahf
shlb
pop
xor
sub
mov
out
hlt
fdivrs
jne
xorl
out
clc
and
and
loop
add
xchg
and
aad
in
cmp
jb
dec
sub
adc
enter
mov
push
pop
lret
iret
in
addr16
in
mov
in
dec
pop
pop
repnz
fs
mov
loop
out
mov
add
inc
scas
roll
mov
fadd
push
mov
popa
pop
mov
bound
cmp
repnz
and
ficompl
or
shlb
push
pop
shll
pop
jb
push
fnstcw
shrl
pop
and
ret
and
insb
cwtl
push
cmp
decl
cmpsl
jg
add
xchg
adc
movsl
cmp
mov
cmp
jl
xor
icebp
test
stos
insb
sub
inc
mov
xor
xchg
sub
scas
outsb
jbe
mov
int
add
pop
iret
adc
push
mov
cmp
cmpsb
test
dec
or
cmp
je
mov
stos
xor
jbe
or
mov
cmp
mov
in
cmp
fisttpll
push
mov
shr
aam
test
test
dec
ror
cli
cs
outsb
jle
shl
dec
jmp
addl
fwait
xchg
adc
sub
xor
mov
icebp
or
adc
pushf
and
cmpsl
rol
aam
ret
scas
inc
push
lea
data16
adc
mov
mov
pop
ljmp
cmpsl
cltd
cs
jg
xor
cmc
pop
iret
sbb
mov
mov
mov
xchg
lds
push
sbb
loopne
pushf
fsubs
mov
pusha
movsl
jmp
xchg
cmpsb
test
pop
or
lock
stos
testb
and
push
dec
stos
je
mov
data16
inc
add
shlb
sub
repnz
add
hlt
icebp
push
fcmovbe
inc
stos
out
bound
loopne
mov
repnz
hlt
popa
hlt
sub
adc
arpl
xor
dec
mov
add
mov
div
popa
cwtl
cmp
mov
or
pop
sahf
cmp
pop
aam
or
pop
call
out
dec
fiadds
mov
ret
mov
lock
in
dec
add
jne
xchg
mov
cld
push
in
out
clc
xlat
insb
mov
fsqrt
mov
jae
rorl
js
xchg
pop
sub
push
xchg
int
mov
stos
subb
xor
fildl
vpbroadcastq
fistl
and
xchg
ret
xchg
push
out
dec
mov
popa
jmp
inc
add
into
sahf
pusha
popf
dec
xor
insl
sbb
outsb
into
pop
sahf
lahf
add
pop
sbb
mov
insl
lock
sub
xchg
std
fwait
push
loope
mov
loopne
loop
ja
mov
mov
and
sub
xchg
cld
xor
cmp
push
out
and
jb
arpl
dec
and
inc
ds
imul
out
test
insl
sti
bound
in
push
js
adc
loop
mov
push
in
rcll
mov
or
into
add
int3
hlt
sbb
pop
popa
pushf
mov
fdivs
hlt
inc
mov
mov
add
adc
mov
outsb
push
cmpl
fs
dec
jg
jns
xchg
xor
dec
je
inc
dec
mov
outsl
es
jge
push
cld
into
pminsw
bound
shlb
ret
ss
xchg
sbbw
ss
ss
das
adc
aas
stc
xchg
sub
mov
adc
fisttpll
mov
adc
cld
orb
jmp
mov
mov
pop
hlt
insb
stc
ret
sbb
add
scas
lds
stos
stos
and
push
push
mov
mov
cmpsb
icebp
bound
aaa
fbld
in
ds
sbb
sub
and
add
jo
js
mov
mov
inc
dec
mov
dec
inc
outsl
push
loope
jns
lret
outsl
cmpsl
or
loop
dec
test
mov
incl
repnz
loopne
xor
pop
aaa
and
cmp
insl
rcrl
push
gs
cmp
mov
jo
or
dec
mov
adc
aad
in
cmp
mov
arpl
inc
mov
sbb
outsl
and
call
popf
les
cmpl
dec
out
icebp
lods
mov
mov
std
sti
in
fcmove
push
lock
test
dec
loope
int3
fisubrs
sub
sub
sahf
jne
loop
insl
mov
js
scas
jne
mov
push
push
and
cmpsb
dec
cmp
es
rclb
jecxz
out
jnp
ja
pop
xchg
mov
mov
sub
sub
pop
inc
std
lret
and
in
push
out
mov
cmp
or
mov
and
jg
hlt
das
jno
jnp
shr
ja
lock
or
in
decl
dec
add
out
js
lods
fcmovbe
rcrl
pushf
test
cmp
fsubrl
pop
sub
mov
movsl
sub
and
or
or
loope
add
sub
push
add
jmp
or
outsl
popa
test
push
das
je
fcomi
pusha
inc
cs
mov
imul
fidivl
inc
add
mov
stos
in
xchg
or
mov
das
pop
call
or
jae,pt
mov
vmovhps
cltd
aaa
adc
cmc
adc
jge
push
add
shl
add
leave
roll
jnp
pop
dec
inc
in
gs
adc
imul
scas
into
repnz
test
pop
sbb
or
jae
in
idiv
nop
jns
inc
orl
mov
and
pop
adc
add
sbb
xchg
loop
inc
bound
jo
cld
and
popa
cli
repnz
inc
sarb
cmp
push
icebp
jb
dec
jb
fsub
sub
add
shrl
rcrb
sbb
xchg
xchg
sbb
add
lock
cmp
xchg
xchg
sbb
es
test
pop
in
out
int3
adc
ja
mov
push
loop
push
adc
lock
mov
add
mov
call
in
mov
mov
xor
mov
jge
sub
jb
ss
iret
jmp
inc
push
xchg
daa
jne
fsubl
pop
dec
aad
xor
cmp
pop
xor
and
scas
data16
scas
fiadds
pop
inc
add
sub
jo
pop
mov
dec
add
pop
cltd
gs
mov
mov
and
mov
test
jae
inc
mov
fbld
pop
inc
and
mov
test
lods
inc
fdivrs
mov
push
pop
push
addr16
add
mov
mov
mov
out
fildl
arpl
xchg
mov
sub
sub
inc
jecxz
mov
aaa
pop
mov
xchg
das
fsts
rolb
add
jmp
mov
xor
sarl
es
or
andb
das
mov
sbb
xor
and
int3
sarl
cmc
jo
push
out
stos
and
cmp
dec
and
xchg
or
push
mov
push
inc
enter
mov
push
aas
sbb
arpl
dec
push
aam
out
paddb
loop
lods
outsl
enter
cld
adc
cmp
dec
out
and
pop
int3
rol
arpl
test
out
ret
hlt
pop
pop
gs
add
sub
test
dec
or
sbb
jb
das
popa
push
data16
mov
stc
push
push
imul
xchg
mov
test
and
or
sub
sub
jbe
in
jo
sbb
lret
cmp
dec
sub
lods
sbb
xchg
sub
lods
in
repnz
sbbl
mov
sbb
js
iret
inc
jle
xchg
add
lahf
movsb
xchg
enter
cwtl
imul
cld
aad
les
stos
xchg
adc
leave
mov
js
jge
nop
mov
daa
mov
cmp
adc
adc
mov
push
adc
xchg
jl
pushf
popl
push
into
insb
and
mov
ja
sbb
mov
ljmp
les
pop
mov
mov
adc
bound
std
jno
pop
push
popf
sahf
pusha
pop
mov
cmp
sub
cmp
add
cltd
repnz
and
pop
out
js
add
daa
stos
mov
fwait
jl
mov
stos
jmp
imul
cld
push
jmp
xor
mov
lahf
cmp
dec
ja
mov
xor
push
mov
dec
sbb
jbe
cmp
push
pushf
adc
mov
mov
stos
into
pop
and
jo
popf
stos
es
pop
xchg
pop
mov
ffree
cmpsb
or
cmp
jle
xchg
fstpl
aam
fldenv
mov
pop
popa
aam
das
mov
push
sub
jmp
jns
mov
iret
shlb
daa
sahf
pop
lds
or
inc
xor
dec
out
out
push
pop
push
loop
leave
pop
inc
testl
mov
sbb
adcb
cli
aaa
mov
rorl
cld
dec
scas
insl
xchg
sbb
push
into
sbb
loop
loop
cmc
dec
enter
mov
scas
xor
outsl
pop
and
clc
fsub
pusha
loopne
mov
dec
push
sbb
xor
push
pop
pop
jmp
push
out
aaa
mov
fldenv
cli
and
xlat
sub
jl
out
sub
xchg
iret
jae
icebp
rcll
pusha
and
xchg
jne
jns
dec
cmpsl
sub
xchg
mul
adc
mov
imul
std
push
push
addr16
cmc
bound
inc
out
lret
push
xor
notl
and
dec
add
xchg
jb
jo
push
xor
sbb
in
sub
inc
pop
insl
out
adc
dec
jge
push
je
cli
in
scas
mov
dec
and
cmp
xor
insl
push
outsl
dec
push
or
mov
pop
cmp
lods
inc
push
lods
jecxz
pop
jge
std
pop
sub
daa
dec
sub
mov
sbbb
xor
jl
xor
int3
ret
pop
into
cmp
rclb
jae
test
mov
xchg
mov
xchg
pop
sub
and
mov
mov
dec
icebp
scas
push
pop
lcall
inc
mov
cs
jg
aaa
vandnps
ja
fisubrs
sub
push
push
bound
ret
scas
mov
push
aas
adc
icebp
lea
int
lahf
or
pop
cmc
jp
sbbb
shll
loope
pop
jbe
addb
rcrl
pop
cmp
mov
fwait
mov
dec
test
lret
xchg
test
ret
leave
push
std
mov
inc
pop
xchg
js
lcall
inc
adc
inc
subb
pop
mov
sbbb
add
xor
and
rorl
lahf
cltd
mov
stos
sub
pop
pop
mov
mov
mov
push
push
test
pop
mov
push
negl
sbb
cmp
dec
xor
fcomps
je
jns
adc
jb
xor
sbbb
pop
loopne
movsl
add
mov
inc
jae
loope
jmp
mov
popa
test
pop
loopne
cld
mov
mov
xor
cmpsb
hlt
pop
xchg
add
mov
jmp
clc
add
mov
into
daa
add
mov
mov
scas
push
cmp
addr16
mov
jle
cmp
xor
sub
inc
inc
sub
fcomp
xor
dec
pop
adc
mov
jb
xor
xchg
inc
mov
push
movsb
sti
jmp
jl
ljmp
jle
adc
mov
xor
stc
sbb
mov
pop
jecxz
push
test
ljmp
int3
push
pop
cmp
fmull
in
int3
insb
jns
mov
cmpsb
pop
lcall
icebp
mov
out
and
dec
mov
mov
lcall
push
mulb
dec
sbb
and
neg
callw
mov
xor
pop
inc
rolb
nop
pop
and
stos
sahf
sbb
mov
gs
lods
add
mov
outsb
xor
mov
mov
call
add
inc
pop
push
push
lret
in
mov
push
and
jmp
mov
lret
inc
mov
pop
xorb
mov
and
outsb
xchg
xor
mull
mov
and
pop
add
jno
cmp
sub
cmp
mov
iret
mov
out
stc
jle
gs
inc
pushf
scas
push
leave
rorl
sarl
cmp
lock
ficomps
loopne
mov
ljmp
sbb
sbb
push
mov
push
dec
pop
scas
ljmp
dec
dec
sub
gs
xchg
test
clc
ss
xchg
inc
cli
or
pop
outsb
push
ss
and
adc
mov
aam
mov
mov
sbb
stos
das
mov
jle
dec
ss
mov
bound
ds
push
movsb
pop
inc
mov
loopne
gs
into
loope
dec
loope
adc
or
sbb
xor
or
aaa
push
xor
lea
mov
inc
xor
cmp
lret
adc
inc
xor
in
xchg
add
int
nop
movsb
mov
shlb
leave
lahf
pusha
pop
clc
and
scas
mov
xor
rcll
push
movsl
ret
pop
xchg
sbb
out
stc
pop
mov
sahf
push
push
push
xchg
lret
ret
in
aas
cmc
int
cmc
xchg
stos
push
mov
sub
dec
lods
sub
imul
sbb
mov
jl
movsb
leave
out
xchg
imull
pushf
mov
fstpl
jl
fnstsw
ja
adc
mov
pop
insl
ret
cmp
pop
jae
mov
jl
test
das
jge
mov
imul
inc
movsl
icebp
push
stos
movsb
scas
pop
sar
call
rorb
int3
and
stc
popf
push
pushf
aaa
add
fadds
nop
rcrl
insb
cmp
mov
dec
fcmovnu
jl
inc
lock
xchg
mov
xor
add
jl
int3
push
in
inc
bound
jo
mov
pop
adc
push
imul
in
jo
or
xchg
leave
inc
mov
jb
push
add
out
std
mov
aas
inc
test
jne
ret
mov
pushf
lahf
scas
pop
movb
aam
test
jmp
jnp
add
xchg
lock
das
js
loopne
mov
mov
sub
pop
enter
or
lods
xchg
scas
xchg
adc
cwtl
ds
inc
cmp
cmp
mov
sahf
sbb
sub
int3
cmp
push
inc
jecxz
xchg
inc
add
dec
divb
sbb
mov
into
mov
xchg
push
adc
in
pop
lods
cmpsl
mov
xor
fwait
xor
jb
add
inc
lcall
and
xlat
cmp
jo
cmp
push
and
jnp
mov
popf
mov
bound
mov
adc
fidivs
jp
and
xor
or
cli
or
mov
push
inc
hlt
inc
pusha
icebp
leave
daa
test
pop
xor
lret
mov
loope
aam
scas
popf
stos
dec
jbe
fsubl
lods
sarl
mov
cltd
xlat
push
sub
mov
mov
imull
js
add
inc
lret
lret
push
dec
dec
mov
ds
mov
pop
popf
call
cmp
movb
insb
sarb
daa
mov
out
jecxz
je
nop
jle
pop
push
xchg
pop
xchg
ds
jbe
in
daa
iret
stos
test
xchg
fbld
add
test
aaa
push
push
pop
sbb
jo
insl
xchg
testl
inc
push
test
paddd
les
movsl
add
xor
mov
leave
add
das
faddp
add
es
xchg
movaps
adc
cmc
js
push
dec
loopne
pop
mov
cmpsl
jae
xchg
xchg
jno
shlb
aaa
das
sbb
outsl
mov
mov
push
into
pop
sbb
mul
sub
xchg
xchg
das
mov
xor
outsb
xchg
pop
fiaddl
cmp
mov
lret
hlt
jo
bound
adc
ds
ffreep
jecxz
cmp
mov
or
lods
adc
leave
stos
mov
cld
xchg
dec
inc
ds
sub
jno
mov
cmp
inc
sub
mov
pop
pop
ja
or
sub
sahf
test
stc
sti
jbe
mov
sbb
or
dec
cmp
xor
mov
mov
pop
cld
xchg
cld
add
sub
bound
push
mov
out
insl
test
or
xor
aad
adc
in
shlb
icebp
pop
negb
out
js
jmp
mov
shlb
xchg
leave
and
ret
testl
xchg
push
shlb
jnp
addl
dec
fisubrl
cmpsb
nop
daa
cltd
xchg
pop
cmp
push
lods
sub
add
xchg
rcrl
fsts
mov
pop
push
incb
and
push
push
leave
roll
cmp
sub
insl
test
dec
mov
fistps
jns
loopne
int3
sbb
or
insl
in
dec
and
dec
mov
adc
stos
inc
mov
push
push
xor
cmp
ret
sub
jg
add
pop
sub
cld
cmp
cmpsl
push
mov
lret
stos
push
push
jns
jle
addr16
sub
sub
jne
loope
jl
fcomp
or
pop
jns
xor
shll
jmp
dec
push
mov
mov
in
loope
fs
rcl
cli
call
pop
or
and
cli
cmp
push
xor
repnz
divl
jae
jno
adcb
and
mov
or
add
pop
ret
push
lock
sub
je
aam
push
xlat
enter
arpl
push
outsl
inc
gs
xchg
mov
test
cmc
jmp
push
jb
dec
lcall
jns
mov
dec
shl
jbe
mov
aam
arpl
cld
cmpsl
jno
sub
inc
jmp
loop
out
stos
or
inc
dec
leave
aas
adcl
push
call
pop
aas
sbb
mov
fst
outsl
and
clc
repnz
mov
push
mov
pop
inc
sub
mov
pushf
mov
mov
sub
int3
add
cwtl
sti
mov
push
mov
dec
mov
test
shll
stc
and
subl
rcrb
out
push
push
jnp
nop
and
div
mov
push
fimull
push
test
add
in
subb
pop
mov
mov
lods
push
or
xchg
ljmp
sbb
jge
push
hlt
popa
nop
mov
testl
je
xor
mov
sub
xor
and
xor
idivl
mov
push
xchg
ret
xchg
mov
je
pop
test
sub
dec
inc
dec
cmp
and
inc
imul
dec
sbb
and
push
pusha
mov
stos
mov
lcall
add
cwtl
xor
call
jno
jo
add
push
lea
jecxz
cmpsb
pop
xor
xchg
insb
out
jae
fsubs
sub
outsb
sub
loop
sbb
arpl
movsb
cmp
ljmp
loope
fadds
mov
fidivl
outsl
jns
icebp
je
mov
mov
pusha
fnsave
cmpsb
mov
rcl
lock
mov
xchg
xchg
push
movsb
rcrb
pop
and
scas
nop
cltd
aaa
js
pop
jl
ret
fcomp
push
add
inc
call
push
loopne
lret
movsb
arpl
xchg
mov
psllq
sbb
rorb
jle
dec
test
sbb
ss
cld
sub
and
pusha
es
pop
ret
jge
insb
mov
int
jbe
lea
cmp
insb
aas
in
rcll
pop
mov
and
gs
fs
xor
jb
int
lock
push
lods
jnp
inc
push
lret
xchg
xchg
dec
add
mov
or
xchg
sahf
out
insb
std
mov
jle
gs
mov
in
shl
or
aaa
ret
cmp
imul
lahf
mov
or
pusha
cmp
pop
jne
mov
adc
jge
out
push
push
xchg
clc
out
bswap
cmpsl
pop
cmpsb
mov
pop
pop
dec
ja
ja
ljmp
pop
pushf
mov
cmpsb
xchg
mov
popf
or
out
je
jmp
and
aam
inc
inc
dec
mov
or
inc
inc
test
jo
dec
adc
mov
lock
push
mov
jnp
lret
orb
mov
ret
fdivs
mov
cli
out
sbb
jmp
xor
aad
rcrl
movsl
js
cmp
stos
sbb
push
and
cmpsl
xor
cli
add
vmwrite
insl
sub
push
test
adc
loop
cmp
or
dec
add
mov
popf
outsb
in
mov
push
push
fwait
rorb
stos
lcall
icebp
ja
mov
xlat
adcl
jge
insl
movsb
cmp
jae
popf
mov
das
inc
mov
mov
sbb
mov
in
add
outsb
fidivrl
leave
jmp
xor
add
push
xchg
pop
popf
push
adc
xchg
jecxz
lds
lods
mov
inc
and
out
nop
and
stos
mov
inc
ja
fisubs
cmc
xchg
and
pop
dec
addl
mov
add
sbb
fadds
sub
enter
movsl
jnp
fs
push
pop
sub
dec
insl
or
add
xchg
scas
sub
sub
jno
or
stos
lcall
call
jle
push
add
nop
jb
add
sub
xlat
je
xor
mov
mov
dec
sbb
mov
out
xor
out
dec
std
inc
pop
mov
test
sub
jmp
inc
sub
int3
test
ds
dec
inc
std
or
xchg
mov
push
or
add
push
inc
jno
add
mov
jmp
xor
cltd
out
xchg
leave
pop
sub
sbb
mov
out
sarb
and
pushf
aam
jo
jns
aam
cmpsb
dec
gs
sahf
mov
or
sub
ljmp
test
mov
add
sub
aad
adc
mov
std
or
adc
mov
daa
sbb
push
scas
pop
xlat
lods
jmp
bound
leave
addb
mov
sarb
xchg
adc
aaa
pop
xchg
orps
dec
push
repnz
pop
movsb
jo
int
pop
dec
sub
mov
cmp
call
movsb
jg
cld
adc
popa
out
inc
lcall
movsl
pop
pusha
sbb
leave
scas
cmp
outsb
data16
mov
movsl
jmp
dec
ds
shr
shr
enter
mov
in
cld
push
sbb
out
je
jne
cmp
xadd
loop
notb
pop
aad
mov
xor
pop
test
pop
cmc
sbb
leave
nop
adc
dec
jbe
scas
xlat
add
imul
aad
fnstenv
popa
das
add
or
outsl
jmp
ret
xor
fldcw
shlb
xorl
push
jl
lea
jmp
inc
jg
sahf
dec
xor
leave
cld
dec
int3
push
adc
icebp
mov
clc
outsb
pop
std
emms
adc
rcll
mov
imul
and
mov
adc
adc
loope
das
daa
lret
mov
xchg
adc
repz
jmp
sarb
jp
scas
sbb
cmp
inc
in
mov
inc
push
ret
sbb
push
xor
cmp
or
addb
ret
movsl
mov
ss
mov
in
scas
std
rcrl
adc
dec
roll
adc
dec
dec
push
les
ret
pop
sub
pop
testb
divb
fsubrl
pushl
dec
iret
cmpsb
xor
push
aas
fnstsw
or
dec
jnp
in
addr16
je
push
int3
dec
movsl
cmpsl
imulb
ficoml
lods
test
ret
xor
shrb
or
xchg
fsubl
cwtl
push
ret
or
in
adc
imul
push
jae
nop
mov
pop
mov
mov
mov
stos
inc
adc
sbb
or
es
or
loop
mov
push
sbb
sub
rcrb
pop
dec
xlat
negb
xchg
addl
mov
sub
mov
loopne
mov
xor
roll
and
and
dec
sbb
adc
idivl
enter
mov
aaa
mov
xchg
ds
inc
add
insl
inc
jp
xor
or
jl
pusha
out
or
add
cmpsb
push
or
cmp
lahf
jl
push
stos
jl
push
mov
into
adc
mov
insl
mov
dec
mov
mov
fbld
pop
jg
and
in
fcmovnb
push
jg
cmp
int3
popa
fwait
pop
mov
inc
lret
xchg
mov
fimull
push
sbb
div
and
fwait
inc
push
sbb
or
out
jge
mov
cmp
test
insb
ljmp
mov
push
mov
hlt
rcrl
insl
mov
xchg
scas
pop
into
pop
leave
incl
cmp
push
pop
rcrb
jns
jbe
adc
sub
and
out
mov
adc
cmp
and
mov
fdivs
xchg
xchg
hlt
xchg
xor
mov
sbb
xchg
sbb
std
cltd
and
test
and
popl
imul
cwtl
pushf
adc
into
xor
jg
push
jle
mov
pop
or
mov
xor
int3
mov
pop
mov
mov
cmp
or
dec
xor
outsb
jl
dec
cwtl
add
push
es
js
add
pop
jcxz
enter
daa
add
mov
out
insb
movsb
pushl
ret
popa
jae
cmp
mov
sti
pop
stos
dec
mov
scas
insl
fnstsw
in
and
test
xchg
mov
mov
sub
push
lock
iret
fwait
out
inc
adc
adc
lret
sbb
cmp
push
aad
cmp
jne,pn
fcomps
mov
push
bound
cmp
mov
adc
jle
push
adc
mov
stc
mov
outsb
repz
test
pop
imul
sbb
outsb
sub
mov
or
pop
cmp
insl
dec
mov
xchg
ret
jge
lret
ss
pop
jo
pusha
stos
adc
sub
mov
cli
mov
orb
mov
sub
jne
jae
pusha
pop
loop
xchg
jo
mov
xor
pop
inc
fxtract
jne
sbb
icebp
test
cmp
repnz
aam
cmp
arpl
sar
in
add
test
lods
inc
xor
dec
xor
aas
and
nop
push
mov
mov
stos
sub
push
lcall
pop
push
and
mov
push
icebp
push
fwait
arpl
cmp
ret
lcall
jns
mov
add
mov
mov
and
cvtps2pi
cltd
int3
or
stos
fnstenv
add
cmp
push
pop
sub
push
insb
mov
sub
clc
pushf
pop
das
push
cli
cmp
mov
mov
sbb
adc
mov
out
mov
inc
lea
sbb
sbb
mov
rclb
lock
and
sbb
xor
cmp
insb
lret
inc
xchg
mov
or
jae
and
or
push
xor
adc
adc
sub
movsb
iret
pop
or
add
daa
add
pop
cmp
pop
sub
xor
and
jbe
xor
fstpl
pop
add
mov
imul
inc
shl
fisubl
cmp
jnp
sbb
nop
push
sbb
lods
arpl
negb
xchg
or
js
pop
insl
lock
imul
imul
int
adc
out
lods
cmc
mov
test
pop
xor
add
test
pop
ljmp
jp
jbe
fsubr
and
leave
imull
leave
xchg
loope
pop
jl
xchg
lods
scas
daa
imul
out
jle
xchg
shll
cwtl
xor
rep
cmp
jle
push
fnstenv
mov
lcall
mov
xchg
add
ret
add
dec
icebp
jb
sub
xchg
dec
cmp
scas
jecxz
repz
imul
repz
ficomps
adc
xchg
sub
mov
push
mov
test
outsb
in
cmc
jo
mov
xchg
out
adc
xchg
add
lods
ret
or
mov
dec
ffree
and
inc
mov
inc
push
add
pop
xchg
cwtl
or
cmp
push
or
and
add
jbe
outsl
mov
pushf
sub
imulb
lds
pop
call
mov
push
jo
sub
lods
cmp
add
clc
or
add
dec
mov
inc
movsl
lds
movsl
push
shl
inc
imul
les
ds
outsl
mov
repz
imul
inc
aas
dec
ljmp
cli
sbbl
dec
jnp
stc
cmpsb
hlt
sub
out
pop
xchg
shll
rol
rcr
xor
lock
adc
xor
mov
jne
fisubrs
push
push
paddw
push
inc
sbb
aaa
pusha
pushaw
fbld
jg
aas
imul
mov
jo
adc
mov
add
shll
js
xor
adc
push
mov
jne
out
std
rcl
push
sbb
cmp
push
js
add
jl
fsubrp
xchg
ficompl
jno
mov
mov
je
imul
les
arpl
stos
idiv
or
ficompl
insl
add
jnp
test
gs
add
add
stos
icebp
inc
addr16
fnstcw
incl
cmp
in
popf
nop
sub
iret
daa
dec
adc
outsb
dec
adc
push
daa
xor
cmp
test
icebp
sub
xchg
ds
mov
jmp
lods
mov
test
mov
sbb
popf
daa
dec
sub
cs
ds
sub
or
ja
stos
mov
syscall
xchg
or
call
sti
imul
sahf
cmpsl
push
cmc
pushf
sub
adc
fcmovnb
mov
out
pop
pop
stos
sbb
sub
push
aas
and
and
push
fadds
stos
daa
jno
push
movsb
adc
in
jmp
or
jo
daa
pusha
negb
iret
cli
mov
push
jnp
mov
cli
rol
xchg
popa
fdiv
scas
leave
mov
in
mov
dec
sti
pop
jne
imul
outsl
fsub
sub
jmp
mov
test
mov
xor
sbb
pop
xor
stc
mov
arpl
lock
subb
or
push
jns
repz
std
lods
push
push
mov
mov
dec
cmc
ja
xlat
lods
and
add
sub
xor
mov
and
add
stc
jecxz
jno
or
cmp
jno
pushf
or
mov
and
inc
mov
dec
movsb
jp
and
ljmp
loop
dec
add
push
xchg
negl
aad
rol
pushl
dec
ret
push
and
jp
dec
insl
cli
push
xor
push
dec
es
js
shl
add
jbe
imul
insb
adc
jge
jl
inc
xchg
gs
bound
cmpsl
mov
jbe
xor
daa
test
cli
fsubs
ficoms
popf
or
pop
and
pusha
add
dec
jle
mov
push
mov
jecxz
fwait
cli
gs
push
inc
sbb
inc
fsubrs
lea
call
scas
dec
inc
inc
xor
mov
ljmp
push
mov
fdivs
adc
inc
xchg
lock
xlat
pusha
cmp
mov
jno
pop
mov
mov
into
cmpsl
xchg
test
mov
mov
mov
ret
repz
gs
mov
movzwl
or
or
psrld
sub
and
cmp
loopne
sbb
lock
mov
sbb
push
dec
inc
addl
inc
mov
stc
and
add
aam
repnz
xchg
adc
les
inc
mov
addr16
mov
jl
stos
adc
sub
ss
loope
add
dec
cmp
test
out
xor
cld
mov
lock
push
or
addl
imul
into
sarb
aad
jae
cmp
out
inc
mov
sbb
push
stos
cltd
ret
mov
mov
shr
movsl
cmpsl
loope
imul
fs
sbb
cmp
shrl
dec
icebp
cwtl
sbb
repz
pop
push
inc
icebp
sub
pop
aas
nop
loope
or
pop
sbb
xchg
ret
xor
shr
jecxz
int3
mov
adc
and
test
mov
sub
xchg
xchg
stos
test
fisubs
dec
lahf
cltd
xlat
test
add
fsubl
stos
jns
mov
jbe
mov
imul
mov
jg
out
lcall
jg
or
sub
jbe
push
xchg
sbb
test
es
pop
ret
jns
loop
mov
sbb
cli
or
dec
cmpsb
dec
inc
push
fiaddl
inc
outsb
sub
outsb
or
inc
sbb
mov
roll
mov
rol
js
pop
xchg
arpl
jmp
movsl
push
push
aaa
repz
cmp
xchg
xchg
imul
sti
pop
jbe
xor
sub
addr16
int
xor
mov
push
test
cwtl
enter
xchg
mov
xchg
std
mov
dec
mov
loop
sub
fcomps
pusha
data16
sbb
sub
mov
jge
or
fsubs
mov
stc
sub
faddl
fs
and
adc
push
out
rolb
scas
cld
xchg
aaa
iret
je
push
mov
pop
xchg
inc
jne
aaa
dec
xchg
clc
add
add
inc
or
xchg
fucompp
mulb
popf
aas
lret
cltd
push
jmp
mov
loopne
xchg
adc
bound
stos
dec
pop
in
and
imul
in
mov
and
xor
sub
testl
ljmp
mov
mov
sub
fcmove
mov
pop
xchg
add
mov
mov
add
lea
sub
out
adcb
cmc
sbb
ffree
cld
pushf
lods
lret
and
and
mov
pop
sbb
or
adc
rclb
pop
sbb
loopne
fwait
and
and
sub
add
xchg
shll
or
mov
mull
in
insl
jp
lsl
push
sti
jns
sti
out
cmpsl
cmpsb
das
inc
cmp
loop
sahf
jecxz
add
jbe
rclb
lea
cmp
add
lcall
lret
cmpsl
sbb
cmc
arpl
mov
pop
xchg
push
loop
pusha
loope
out
lds
stos
push
shll
out
sub
jbe
pop
mov
out
iret
inc
ret
idivl
xor
ret
iret
push
in
popl
ds
cwtl
mov
xchg
test
inc
mov
mov
fisttpl
sahf
cmp
xchg
sbb
adc
loope
pusha
in
fcompl
hlt
add
xchg
pop
pop
jb
leave
clc
xchg
cmp
lret
jmp
xchg
push
xor
mov
popa
push
sbb
lock
fsubrs
xchg
inc
sbb
iret
scas
fnstenv
push
cmc
or
arpl
jg
xchg
fstpt
adc
and
xor
mov
nop
clc
mov
pusha
andl
sbb
daa
rclb
inc
rcrl
test
ficomps
ja
jp,pt
scas
rcrl
cwtl
push
cmpsl
sub
jmp
cwtl
scas
in
mov
jmp
movsl
mov
push
mov
arpl
into
xor
sbb
pop
das
sub
sbb
lret
mov
jmp
pop
cmc
mov
pop
call
outsl
and
xor
pop
xchg
cmpsb
insl
ret
sbb
ror
jle
subb
xor
inc
movsl
scas
outsb
cmp
mov
pop
js
sbb
cmpl
negb
test
mov
jmp
pop
xchg
in
push
bound
cmpsb
popa
aas
int
push
test
dec
into
mov
jmp
test
fiadds
outsb
pop
adcb
add
sub
xchg
inc
pop
adc
imul
loop
les
addr16
aaa
repnz
sub
out
rolb
cmp
jl
fwait
bound
jno
add
cltd
insl
cmc
adc
imul
jae
jg
and
sub
sub
sub
jl
fwait
test
sub
xor
xlat
pop
adc
iret
lds
xchg
lahf
push
int3
and
aad
leave
sbb
add
leave
aaa
iret
xor
cmpl
mov
mov
cmp
cmp
ss
ja
scas
sub
jns
cmpsb
push
andb
enter
fistl
xchg
mov
mov
fsubrs
stc
push
dec
mov
xor
inc
mov
cmpsb
mov
cmp
es
nop
adc
imull
sbb
mov
out
stc
push
xchg
dec
mov
lcall
mov
mov
jecxz
lret
stc
cwtl
je
mov
test
lahf
add
inc
sbb
sahf
out
iret
pop
jne
arpl
rol
jno
cmc
shl
fistpl
mov
ret
adc
push
cld
rcr
in
adc
ja
ret
idivl
sahf
mov
loop
and
jle
sbb
in
mov
imul
out
sbb
adc
incb
sbb
or
mov
adc
cltd
and
dec
adc
mov
inc
xchg
mov
inc
arpl
push
pop
jbe
xor
add
xchg
and
ljmp
lret
es
pop
sub
ja
jnp
mov
popf
mov
xor
loopne
gs
rcll
mov
test
mov
mov
xor
sti
inc
jl
out
cltd
add
xor
push
hlt
test
jge
inc
jns
xchg
push
pop
cltd
xor
dec
cld
cli
fnstenv
push
xorb
inc
mov
lea
incl
movd
xchg
add
fs
sbb
insl
sub
adc
xchg
add
and
mov
pusha
pusha
leave
loop
and
and
dec
mov
and
mov
push
iret
sub
cli
cmp
enter
cmc
popf
push
push
fiaddl
addl
or
or
dec
push
stc
mov
mov
xor
ja
add
popa
cs
shll
je
inc
jo
cmp
sub
daa
stc
mov
pop
ret
test
jp
clc
imul
xchg
rclb
inc
dec
out
loopne
xchg
bound
mov
lcall
push
lods
xchg
fimull
lret
cmp
addr16
stc
xor
mov
cmp
or
ss
out
addb
cmc
sarb
addr16
fwait
arpl
mov
mov
xchg
nop
jmp
sbb
out
adc
aas
sbb
mov
data16
jge
push
push
pop
push
fmuls
lahf
dec
aaa
pop
xchg
cmp
sub
stos
outsl
and
test
repnz
cltd
popf
push
das
cmp
adc
add
decb
pop
stos
repnz
sarb
je
dec
call
jg
loopne
aaa
stos
ljmp
ret
daa
adc
data16
cmp
xchg
mov
addb
fwait
jp
cwtl
test
xchg
out
sbb
sub
push
push
jge
sbb
outsl
or
jae
mov
sub
adc
cmp
adc
pusha
push
xchg
cli
mov
repnz
movsl
dec
dec
jp
xchg
dec
mov
sahf
popf
lock
cwtl
sbb
sub
mov
cmpsl
lds
mov
xchg
and
sub
rcl
cmp
jo
xchg
cli
and
dec
pop
lock
cmpsb
cmc
lea
adc
mov
xlat
lods
add
test
add
push
push
cmp
cltd
cli
xor
iret
shrl
sbb
push
lea
fwait
push
lret
adc
sbb
xchg
aaa
mov
lods
sarl
xor
stos
pop
pusha
mov
jae
nop
and
imul
lret
sub
cmc
xchg
jge
lods
xor
pop
lcall
sahf
jo
clc
addr16
pop
mov
push
mov
or
out
in
imul
and
in
out
bound
add
and
mov
pop
paddusb
inc
cmpb
add
push
shlb
movsb
arpl
inc
add
bound
daa
into
xor
and
int3
popa
std
mov
mov
xor
push
mov
clc
adc
mov
pushf
xchg
shll
fisubs
push
sbb
daa
cltd
mov
mov
out
or
pop
enter
add
push
mov
sub
or
and
gs
push
sbb
inc
add
mov
mov
enter
push
lea
pop
cmpsl
hlt
addl
xchg
push
mov
faddl
mov
lret
push
jmp
pop
in
fldt
mov
js
mov
xor
mov
les
dec
mov
mov
push
loop
adc
push
fnstenv
xor
xlat
cwtl
sbb
push
sbb
cmp
xlat
sub
or
jmp
xor
jne
ret
ja
loop
cltd
jno
push
push
mov
inc
test
jp
xor
shll
add
int3
cmpsb
adc
add
cli
fdivs
lcall
cltd
xlat
and
pop
test
cmp
out
sbb
pop
push
xchg
mov
lods
sbb
ret
push
add
jbe
jbe
mov
dec
pop
mov
shrl
mov
data16
in
sbb
hlt
inc
xlat
stos
fistps
dec
fcos
inc
push
xor
mov
xlat
sbb
ds
hlt
sbbl
pop
push
mov
dec
mov
les
dec
sub
and
pop
daa
into
adc
and
aas
fcmovnu
fimuls
data16
mov
push
sub
pop
jmp
iret
mov
inc
mov
push
or
and
sbb
pop
lahf
addr16
cmp
and
pop
repz
dec
cmc
inc
mov
loop
sbb
mov
sbb
jle
push
cmp
pop
cmp
js
inc
sub
nop
xor
pop
adc
fs
mov
test
mov
fdivl
lods
mov
and
sbb
xor
ret
pop
adcb
jbe
repz
pop
pushf
sarl
jle
pop
xor
adc
push
sub
xor
adc
dec
push
and
lds
cltd
pop
add
and
push
jecxz
enter
mov
adc
xorl
lcall
dec
pop
adc
adc
jae
sbb
mov
mov
mov
fisttpl
lods
out
add
jnp
or
int3
js
stos
dec
pop
and
scas
cs
xor
inc
and
es
and
into
aad
fsts
arpl
cwtl
mov
dec
mov
or
imul
pop
mov
push
dec
inc
jmp
in
cltd
popf
mov
pop
mov
cltd
lret
fiadds
sbb
outsb
int3
shlb
call
pop
sbb
jno
adc
mov
mov
std
sub
pushf
mov
jmp
shll
loope
jbe
sbb
or
ret
das
inc
mov
and
pushf
rolb
ror
xchg
inc
test
mov
cmp
ss
in
mov
js
cmpsb
in
mov
cmp
push
mov
mov
sub
addr16
aas
orb
push
cmp
ja
sub
clc
faddp
int
dec
lods
negb
enter
adc
pop
pop
aaa
push
or
xor
cmp
movq
jg
arpl
or
inc
add
mov
inc
sbb
fldt
addr16
xor
stos
or
lea
test
out
bound
adc
pop
dec
or
inc
sub
out
ss
insl
adc
lret
jp
sahf
sub
pop
fistpl
or
lcall
push
jg
ss
fs
cmpsb
dec
inc
and
inc
loope
xor
adc
into
mov
xchg
add
scas
repnz
push
xor
sbb
push
or
push
loope
mov
ror
lcall
or
or
enter
dec
dec
dec
sub
sub
aam
push
push
dec
loopne
xor
jno
jmp
andb
adcb
out
push
mov
mov
insl
rcrb
hlt
mov
xchg
pop
adc
cmp
subl
xor
cwtl
cmpsl
lcall
or
inc
pop
das
or
daa
incb
bound
dec
scas
int
adc
or
clc
push
jb
enter
pop
jle
xor
mov
mov
inc
out
ds
adc
xchg
adc
aad
push
int
arpl
push
mov
jmp
mov
jno
stos
mov
lods
mov
jbe
std
aad
icebp
or
cmp
dec
fsubl
cltd
outsb
leave
cwtl
xor
cmp
adc
pop
ja
aad
pusha
orl
in
insl
xor
js
xchg
sbb
imul
mov
fnstenv
xchg
and
pop
jmp
mov
add
xchg
shlb
fsubs
inc
cmp
jecxz
ss
pusha
clc
dec
mov
mov
test
xchg
les
dec
or
call
loope
inc
mov
cmp
sti
and
add
jns,pt
imul
fdivl
sbb
mov
in
xchg
push
aad
xchg
pusha
pop
xchg
pushf
aas
mov
ljmp
pop
lret
xor
movsl
xchg
sarb
popa
lods
cmp
outsl
mov
out
xor
std
mov
shll
jge,pn
sub
add
or
imul
aad
inc
add
and
bound
mov
movsb
sub
sub
push
mov
jne
cmp
and
mov
push
popa
popa
popf
iret
adc
cmp
decb
daa
out
add
mov
ja
scas
inc
ror
sti
mov
je
icebp
dec
scas
or
pop
jge
sahf
repz
cmpsb
mov
or
adc
leave
das
fadds
xlat
pop
je
pop
and
jae
jbe
cmp
jne
sbb
cltd
xlat
mov
jne
push
xor
movsb
cli
add
aam
sbb
xchg
fmuls
add
adc
mov
adc
cli
sbb
push
test
xor
ss
xor
mov
enter
cli
dec
add
ret
jecxz
dec
and
test
push
dec
push
cld
insb
mov
flds
stos
stos
or
cmpsl
mov
sub
incl
cltd
sub
or
jne
sbb
subb
sbb
pop
jb
mov
mov
jge
pop
sbb
cmpsl
push
inc
daa
xchg
pop
and
scas
sub
ret
pushl
cmp
pop
dec
sub
testb
adc
adc
das
rcr
fmul
scas
mov
dec
pop
daa
stos
xchg
sub
cli
hlt
xchg
jge
mov
cmp
shll
jb
loop
xchg
cmp
pop
enter
pop
or
and
jg
pop
add
mov
ret
sub
out
and
jbe
aaa
inc
les
mov
shll
mov
into
pop
inc
fdivs
sub
sbb
int
addl
subl
fdivrl
shll
xchg
inc
arpl
in
mov
adc
or
jecxz
adc
mov
mov
loop
nop
xor
divl
mov
pop
sarb
jnp
mov
cmp
pop
pop
mov
rorl
fcmovbe
inc
inc
lock
mov
inc
mov
add
gs
ret
xchg
inc
mov
mov
jg
bound
js
sub
dec
lods
push
push
sbb
cwtl
xor
ljmp
nop
pop
pop
adc
lret
imul
pop
dec
pop
paddq
movsl
jo
mov
jmp
and
repz
xor
mov
cmp
pop
mov
dec
push
pop
or
imul
jg
and
add
pop
xchg
jle
adc
add
pop
nop
testb
xchg
insl
sub
int
scas
lods
xchg
cs
or
add
arpl
sub
out
sbbl
int3
inc
sub
jle
jno
bound
sti
xor
sub
dec
jp
int3
push
pminsw
mov
orb
add
jbe
in
pop
bound
rcl
sub
int
orb
ss
scas
in
test
push
lds
cmp
idivb
mov
enter
fimull
sbb
push
movsl
pushf
sbb
sbbb
fucomp
jno
jo
scas
dec
outsl
popa
imul
jg
lcall
repnz
mov
out
cmp
push
insb
loope
shrl
subl
inc
outsl
xchg
outsb
daa
sbb
lock
insl
frstor
adc
movsb
xchg
rcrl
lds
pusha
hlt
xchg
or
stos
in
add
fildl
outsl
inc
add
mov
xlat
vpavgw
add
xchg
aad
inc
mov
mov
or
or
push
fstpt
stos
mov
add
pop
jl
push
add
sub
xchg
test
shlb
in
subl
aam
out
mov
add
xchg
jne
les
jae
lcall
sarb
arpl
test
dec
push
aad
rcrb
sub
notl
add
mov
in
jnp
add
and
cltd
push
cmp
ror
xchg
dec
mov
mov
xchg
pop
pop
outsb
in
xor
cmp
iret
icebp
push
push
ja
mov
cmp
icebp
enter
popf
pop
sub
xchg
sbb
stc
mov
mov
mov
fdivr
push
fisttpl
lret
xor
jnp
shr
mov
repnz
mov
xor
mov
notb
pop
cmpsb
mov
stos
mov
or
push
mov
cmp
shll
pop
sub
push
movsl
cli
push
dec
lret
inc
imul
fidivrl
sub
jnp
in
lods
push
push
or
push
es
jge
push
in
dec
shll
jmp
stos
cli
add
mov
or
pop
sti
add
loop
lret
rcrb
and
ret
aas
mov
pop
daa
cmp
scas
fnsave
or
or
stc
insb
mov
dec
pop
rclb
xchg
pop
movl
adcl
dec
cmpsb
mov
jg,pt
subb
mov
push
and
sar
mov
shl
int3
or
xor
nop
popa
in
mov
scas
repnz
dec
push
xchg
inc
cs
ss
add
addb
inc
icebp
or
adc
mov
movsl
or
das
sub
mov
inc
insl
jge
rorb
jge
icebp
or
dec
pusha
and
lcall
js
pop
jg
mov
pop
jb
lea
mov
int3
in
mov
psraw
movsb
mov
mov
cmp
jp
sbb
or
lods
and
nop
in
mov
outsb
int
test
or
mov
ljmp
sub
sub
push
pop
jg
insl
push
cltd
pop
xchg
and
shl
mov
dec
not
mov
idivl
movsb
xchg
dec
pop
stos
xor
push
pop
xor
fsub
inc
pop
lcall
or
pop
inc
pop
aam
jno
repnz
insl
movsb
outsb
ret
pop
pusha
xor
xchg
xchg
popl
lcall
push
aas
lock
pushl
or
mov
add
lret
push
cmc
or
insb
cmpsb
cmp
punpckldq
aaa
cmpl
imul
lea
cmc
shll
adc
hlt
popf
shrl
bound
pavgb
bound
mov
push
xchg
mov
in
xor
sti
fistpll
cmpsl
jg
mov
aam
js
and
das
lods
popa
bound
out
mov
iret
call
mov
mov
testb
movsl
add
int
sbb
ret
or
cmpsb
out
push
dec
loope
ret
fisubrl
out
bts
subb
fisubl
and
mov
aas
or
popf
inc
in
and
sub
or
lret
sbb
sarl
mov
adc
cmpb
mov
jl
push
cli
daa
in
add
lea
sbb
lret
jl
push
xchg
dec
or
sub
cmp
fs
xchg
nop
stos
outsl
scas
jo
fidivrs
inc
enter
mov
jno
mov
ljmp
jl
jne
jnp
jbe
push
mov
lret
repz
mov
lret
outsb
adc
cld
inc
push
stos
cmpsl
cmpsb
ljmp
mov
push
lods
inc
int
movl
add
jno
mov
adc
sbb
cwtl
mov
push
leave
icebp
add
outsl
push
sub
out
imul
fwait
rolb
sbb
cmp
mov
clc
ds
arpl
mov
dec
pushf
cmpsb
jecxz
incb
cld
xor
into
mov
pop
or
loop
call
sarl
xlat
sub
in
xchg
mov
jge
mov
jb
clc
dec
in
in
inc
ret
loop,pn
mov
insl
mov
jne
movb
out
push
in
dec
sub
sbb
mov
stos
add
cli
add
cmp
cs
xor
ljmp
and
hlt
fnstsw
xchg
cmp
jle
dec
fnstcw
cltd
or
repz
loop
jp
add
test
pop
push
cld
dec
xor
dec
adc
add
shl
sbb
sbb
or
add
or
popa
cmp
push
ret
sbb
xchg
cmpsl
mov
dec
pop
xchg
pop
mov
lahf
std
xchg
test
fldcw
sub
ror
push
xchg
popf
fwait
or
insl
push
ret
mov
and
jo
dec
xchg
cmp
mov
xchg
test
shrl
xchg
push
sarb
dec
into
xchg
and
push
icebp
das
mov
mov
mov
lret
stc
sahf
lret
inc
dec
adc
mov
imulb
sbb
jecxz
idiv
fsubs
test
cmp
pushf
mov
push
sbb
inc
cld
mov
mov
pop
mov
pop
jge
cmp
mov
pusha
lret
js
and
pop
pop
fcmovne
arpl
mov
jg
sahf
ja
repz
adc
push
test
lea
add
sub
fdivl
cld
and
pusha
pop
ret
loop
and
pop
insb
into
mov
adc
jb
adc
inc
xchg
lods
mov
push
dec
adc
loopne
and
sub
add
nop
leave
mov
mov
aam
or
mov
scas
mov
insb
dec
xor
aam
xor
es
and
adc
out
push
daa
mov
jns
mov
mov
pop
xchg
jbe
ficomps
loop
hlt
dec
xor
and
arpl
fildl
cmp
pusha
fimull
dec
sbb
push
jb
add
push
jp
jbe
test
xor
mov
sub
add
test
push
mov
push
xchg
sub
adc
add
xor
ss
inc
bound
sub
jbe
jmp
jae
mov
lods
insb
lret
inc
std
push
insl
stos
jo
dec
pusha
mov
inc
pop
sub
adc
mov
xchg
and
dec
mov
or
pop
mov
call
sbb
xor
call
mov
jne
rol
cmpsl
mov
mov
sbb
add
pop
pushf
fidivs
add
popa
test
out
add
sahf
stos
xor
je
xchg
jbe
add
scas
pushf
jno
sarb
adc
rep
mov
jmp
and
xchg
xor
inc
dec
push
arpl
repnz
adc
loop
dec
pop
xlat
mov
jnp
imul
or
and
pusha
adcb
sub
mov
mov
add
mov
js
xor
pop
test
gs
ret
daa
mov
repnz
fwait
mov
aas
lds
popa
aad
jecxz
les
mov
rcrl
fildl
nop
out
cmp
and
mov
and
or
jno
mov
cwtl
adc
stc
dec
in
pop
cmp
inc
cld
movsl
movsb
sub
adc
int
addr16
mov
inc
cmp
mov
icebp
ja
js
inc
jno
popf
sbbb
add
call
pop
mov
int3
and
xchg
ret
enter
ret
out
mov
jo
sbb
jo
repnz
xchg
or
inc
xchg
push
test
pcmpgtd
inc
jo
cmp
jg
test
mov
jmp
rorl
fisttpll
out
add
pop
mov
add
into
aaa
pop
ds
push
and
movsb
std
xchg
rcll
pop
insl
and
or
and
jmp
mov
adc
addr16
or
sbb
push
mov
sti
push
inc
xor
inc
pop
stos
push
dec
lcall
cmpsl
add
test
and
idivb
push
sub
push
cmp
push
ds
movsl
addr16
scas
rorl
sbb
shlb
js
in
cwtl
int
jae
idiv
lea
xorb
pop
pop
sub
sbb
or
push
xor
enter
pushf
mov
xor
ror
out
xchg
fs
dec
cltd
mov
enter
mov
or
adc
lcall
dec
gs
cmpsb
cmpsl
push
xchg
pop
jle
loop
std
sub
jo
sbb
fdivl
cwtl
insb
mov
jno
out
lret
lds
fisttpll
sbb
out
xchg
mov
cmpl
lods
push
jnp
ja
in
addr16
out
orl
ds
pushl
sub
push
roll
adc
jae
mov
sub
sub
push
cmp
iret
arpl
mov
push
stc
sbb
shlb
xor
loop
push
pop
addr16
push
xor
xor
aad
cli
or
pop
mov
xor
mov
mov
pop
push
nop
enter
jb
xchg
inc
std
xchg
and
xor
fldl
out
test
loope
fwait
and
popf
out
iret
data16
jbe
nop
rol
icebp
jne
xor
lcall
in
out
xor
and
sub
add
mov
and
mov
shll
push
jbe
cmp
inc
xchg
pop
rcll
push
stos
sub
aas
gs
sbb
inc
pop
loop
pop
in
out
nop
fnstcw
xor
jnp
adc
inc
lret
inc
push
cmp
jle
and
orb
inc
outsb
sbb
mov
pop
and
cld
jl
rcl
ss
sbb
dec
fsubrs
xor
insb
sbbb
andb
shrb
sti
out
out
mov
ret
jns
inc
xor
std
inc
push
cmp
dec
mov
fsubrs
add
mov
xor
shlb
popa
or
cld
arpl
add
nop
movsb
pop
and
add
pop
into
sub
cmc
mov
push
aad
out
cld
mov
push
and
out
in
das
adcb
in
cmp
or
pusha
xorl
push
mov
mov
cmpsb
in
movsb
pop
pop
in
inc
pop
xor
into
or
mov
shll
andl
in
js
jno
jno,pn
xchg
mov
iret
add
jbe
mov
addr16
pop
rcrb
lahf
adc
sti
sbb
decl
aaa
shrl
loopne
cmp
mov
int3
movsl
xchg
dec
lods
fnstenv
cmp
jb
jo
jg
insb
hlt
push
lds
daa
adc
mov
shlb
add
gs
xor
jb
and
icebp
cmp
inc
lret
cmp
jmp
aam
cmpl
fcoms
shr
pushf
inc
fwait
mov
and
movsl
in
pop
jae
mov
sub
dec
inc
push
in
push
mov
cmc
push
xchg
call
insl
or
jae
dec
fstpl
or
push
and
cwtl
ret
movsb
or
ss
sbb
fwait
out
sbb
mov
enter
lock
mov
add
scas
fnstcw
xchg
ja
pop
loopne
sub
ja
push
jae
xor
xchg
stos
sbb
test
cs
push
pop
das
or
jne
flds
mov
into
mov
jnp
cmc
scas
aad
in
xor
push
icebp
stos
xor
pop
jmp
mov
adc
adc
fcomps
rcrl
or
or
pop
fdivs
add
outsb
mov
cmpl
cmp
dec
mov
add
cmpsb
in
xor
shll
popa
test
lcall
cmc
stos
jmp
xchg
adc
cmp
push
jno
lcall
mov
sub
rcrb
outsl
mov
add
add
sbb
les
jb
idivb
lahf
pop
pop
cmp
das
push
mov
out
inc
loop
daa
inc
std
sbb
adc
jbe
push
stc
lock
test
out
in
ja
mov
loopne
and
push
xchg
adc
insb
inc
mov
imulb
push
popa
cld
lahf
movb
and
lret
cltd
popa
daa
jl
lods
push
sub
outsl
loopne
adc
loope
xor
jno
daa
dec
jle
ds
add
cmp
repz
jmp
lock
xor
test
lret
fnstcw
cmc
mov
add
fldl
icebp
std
and
fcomps
gs
xchg
xor
test
test
add
pop
pushf
sbb
leave
add
xchg
sub
inc
push
mov
jnp
mov
aaa
cltd
mov
fwait
clc
sbb
inc
lock
jae
fmul
mov
test
sbb
mov
cmp
jne
pop
in
jmp
sbb
jle
or
aam
push
dec
mov
jg
pusha
insl
fs
pop
mov
test
loopne
pusha
imul
inc
pop
add
pop
mov
push
idiv
test
icebp
dec
sahf
inc
push
je
cmp
pop
out
mov
xchg
enter
int3
lods
sub
movsb
mov
fistpll
push
ljmp
adc
xchg
icebp
lcall
addl
pusha
mov
fs
add
fldenv
adc
ja
and
mov
inc
xor
and
pop
ret
mov
sub
add
cmpsb
cmp
push
jbe
xor
test
mov
mov
shr
sub
fsubrl
or
arpl
fcmove
xchg
add
fdivs
jne
push
int
out
jp
sbb
add
mov
sub
or
push
inc
pop
aam
pushf
cs
push
in
xor
sub
xchg
and
adc
ret
arpl
movsl
xor
aad
sti
jnp
jecxz
and
jne
sub
xchg
repnz
gs
loopne
pop
mov
shl
cwtl
push
push
jae
lock
imul
je
fldt
mov
push
fdivl
imul
push
jge
outsb
jmp
mov
into
and
js
mov
sarl
rcl
mov
orl
inc
adc
repnz
mov
mov
pop
lahf
mov
imulb
inc
das
push
js
sahf
call
ja
push
xchg
arpl
test
jge
rorl
sub
jmpw
xor
aas
mov
and
rcr
xchg
pop
push
insb
sbb
sbb
xchg
roll
cmp
and
adc
push
xor
adc
in
jge
cmp
cmp
cmp
subl
inc
mov
xchg
cmpsb
mov
bound
fmul
dec
mov
cmpsl
arpl
mov
sub
sti
stos
push
inc
and
out
leave
mov
lcall
push
in
pop
test
mov
push
popf
call
lcall
cli
push
and
pop
cli
fcoml
pop
push
jg
pop
sahf
pop
sbb
cmp
fptan
xchg
or
cmp
das
mov
push
or
fcmovb
lcall
outsb
push
ja
mov
js
inc
rcll
les
xchg
and
movl
adc
subb
fwait
push
push
adc
add
adc
fldenv
lods
rorl
sub
arpl
mov
inc
clc
cmp
add
dec
imul
add
aas
out
pop
psrld
sub
ss
test
rcrb
shrl
push
ret
mov
ss
mov
outsl
fs
jae
movsb
or
sbb
jle
nop
aad
add
mov
outsb
mov
push
jmp
or
into
xchg
sub
pop
test
or
fists
pushf
gs
mov
add
inc
add
pop
popf
outsb
cmc
push
aaa
or
push
lock
cmpl
imul
and
pop
mov
arpl
fsub
stc
in
adc
fdiv
dec
xor
pop
fcmove
inc
outsb
popf
xor
int3
or
dec
pop
jecxz
cmp
and
testl
in
sbb
pop
sarl
aam
cmpsl
in
jmp
cmp
arpl
out
mov
xor
scas
cs
mov
out
fildll
xor
mov
or
scas
pushf
pop
and
xchg
out
jns
pop
jbe
push
xchg
cli
cmpsl
std
jb
or
add
sbb
lea
cs
aas
in
mov
inc
lret
add
sub
lods
mov
jge
daa
push
sub
stos
dec
movsb
adc
enter
mov
lret
sub
scas
adc
test
jle
sub
or
mov
or
dec
bound
mov
not
fs
sub
mov
sbb
mov
jl
pop
mov
imul
pop
cmc
scas
xor
mov
icebp
andl
jne
mull
adc
adc
mov
imul
xchg
pop
add
popa
cmpsl
push
adc
push
dec
add
cs
xor
inc
cwtl
je
dec
jge
inc
ficoms
lea
fs
mov
test
sub
push
gs
pop
lds
or
mov
adcl
out
adcl
jge
mov
test
je
sbb
mov
test
sti
xor
jne
push
test
adc
loop
xchg
scas
add
fucomp
ljmp
fimuls
xchg
jb
adc
gs
std
cmc
and
in
inc
dec
pop
repz
mov
sub
mov
cld
ds
inc
insl
mov
mov
dec
sbb
push
clc
and
in
les
dec
sub
adc
inc
mov
dec
xchg
xchg
in
inc
fcmovu
inc
outsb
andb
sbb
lahf
rcrb
in
push
mov
hlt
sbb
in
xor
es
add
xchg
call
fisttps
sub
xor
pushf
popf
in
int
pop
sbb
add
imul
inc
cmpsl
in
int
test
movsl
aas
pop
push
repz
push
mov
cld
sbb
push
mov
addb
ficompl
call
add
aad
cmp
push
fimuls
movsl
ret
lock
ret
mov
fstpt
shl
ja
lcall
sbb
jmp
inc
push
pushf
test
sbb
mov
arpl
push
das
pop
popf
or
xchg
xchg
mov
sub
xchg
adc
add
jo
inc
or
cmp
pop
xchg
or
bound
aas
lock
add
punpckldq
leave
cmp
jbe
repz
sub
sub
iret
sbb
fcoms
sbbl
lods
jbe
xchg
or
mov
adc
sub
mov
popf
test
cli
aad
cmp
xor
call
xorb
aaa
mov
insl
popf
int3
xor
dec
lock
adc
jb
icebp
push
clc
into
sbbb
fistpl
imul
mov
mov
push
int3
inc
mov
mov
rcr
rcl
push
out
xchg
jnp
push
shll
pop
lds
xchg
dec
test
pop
mov
mov
loopne
push
leave
cmpsb
movsb
xor
jl
add
push
jns
jge
xor
jle
pop
in
mov
pop
flds
or
orb
push
sub
adc
shlb
enter
lcall
call
pusha
les
jmp
loope
jg
lock
sbb
inc
fcomps
xchg
sbb
lods
in
sbb
sahf
dec
les
adc
outsl
stos
cmpsl
jle
inc
fcoml
jns
lret
sarb
jle
cmp
mov
sti
mov
fstpl
add
or
ret
jno
arpl
pop
xchg
jno
mov
push
jmp
dec
popf
cmpsl
mov
shll
sbb
icebp
mov
test
clc
into
mov
or
mov
popf
mov
lds
lea
and
cmp
inc
scas
daa
and
sbb
sbb
mov
adc
leave
shlb
gs
inc
cmc
cmp
xchg
lret
mov
mov
mov
scas
push
aam
xchg
pop
stos
push
jb
xchg
pop
lds
jp
xchg
imul
in
lret
cli
pop
test
outsl
dec
xchg
popf
mov
add
or
adc
ja
cmp
mov
cmp
push
dec
sbbl
inc
cmpb
ss
subl
add
or
xchg
std
test
mov
loopne
test
out
imul
xchg
xchg
mov
add
jno
adc
jbe
inc
imul
sub
add
mov
aas
inc
sbb
mov
add
addr16
pop
mov
jne
xor
pop
adc
popa
add
xchg
cmpsb
call
test
lahf
cmp
mov
js
leave
divl
sub
push
mov
shrb
mov
cmpsb
ljmp
push
adc
movsl
and
or
cmc
inc
aam
push
or
adc
or
mov
push
jns
ss
mov
or
clc
pop
and
mov
inc
sbb
cmp
xchg
sbb
outsl
nop
loopne
fisttpl
xchg
mov
movsl
ret
push
insl
or
lds
inc
fcmovnbe
inc
adc
js
mov
xchg
push
orps
cmp
sbb
dec
lods
aaa
cwtl
testl
push
mov
sbb
xor
pop
test
adc
mov
fnstsw
gs
sub
inc
test
cmpsl
pop
inc
stos
adc
dec
push
jae
xchg
dec
push
adc
push
dec
in
sbb
movsb
pop
sbb
lods
scas
push
cpuid
xchg
inc
jae
or
jle
adc
and
push
in
gs
cs
aam
aas
cltd
movsl
mov
xchg
sub
inc
ret
dec
pop
fcmovb
inc
je
shll
fimull
sbb
push
cmp
mov
xchg
cmp
cmc
push
add
mov
pop
and
mov
movsb
movsl
inc
in
mov
iret
pop
repz
mov
or
outsb
addl
leave
mov
dec
idiv
dec
push
std
lret
nop
add
rorl
or
std
pop
popf
andb
jle
stos
jl
dec
pop
scas
mov
jle
inc
cmp
scas
in
push
sub
nop
and
sahf
xor
sub
call
xchg
mov
mov
jp
adc
and
iret
xchg
das
jle
loope
xor
int
iret
hlt
cmp
clc
jno
mov
push
jns
pop
insl
cmp
mov
insb
sub
insb
push
pop
sbb
aas
inc
dec
out
repnz
mov
jae
mov
ljmp
add
pop
add
pop
icebp
add
sub
ljmp
in
shlb
sub
add
enter
enter
fldcw
imul
or
pop
xchg
mov
out
xlat
movsl
ljmp
lret
nop
xchg
or
out
mov
mov
cld
in
popl
test
mov
jno
test
ljmp
insb
in
aam
or
jno
ds
leave
add
inc
or
stos
fcoml
lcall
xchg
sti
mov
cmp
lret
popl
xchg
jbe
push
or
mov
lret
idiv
mov
scas
push
push
mov
loopne
rcll
inc
jne
loop
xchg
mov
ret
dec
out
ret
lea
imul
outsl
and
xchg
or
jmp
mov
mov
jnp
fidivrl
lods
mov
pop
lcall
in
test
mov
ss
xchg
stos
fsubl
mov
fcmovbe
jne
lret
jns
mov
gs
xchg
lds
push
icebp
aad
loop
lahf
xchg
enter
mov
adc
int3
insl
adc
or
shrl
mov
and
in
jmp
push
cwtl
fisubs
fs
ss
js
sub
sbb
cmpsl
aaa
xchg
jecxz
sbb
inc
dec
lret
pop
cmp
adc
call
cmp
and
add
xor
jno
xchg
gs
aam
scas
cltd
dec
sub
mov
outsb
xchg
mov
mov
mov
dec
je
xchg
pop
or
cmp
pushf
or
xor
sbb
or
lds
jnp
aad
insb
mov
insb
shll
xor
jae
mov
hlt
insl
mov
sbbl
inc
fndisi(8087
cmpsl
pop
outsl
in
sub
sbb
cwtl
xchg
orb
jge
inc
dec
sub
or
push
rcr
mov
or
pop
mov
mov
cwtl
sub
xor
stos
sahf
cmp
mov
jl
cmpsl
mov
jmp
mov
pop
test
jbe
popf
mov
loopne
xlat
fsts
sbb
cmp
insl
loope
daa
cmc
andl
test
test
pop
push
sarl
mov
mov
mov
jle
push
arpl
ret
decb
push
cli
fwait
testb
popl
push
lock
mov
cmp
xchg
or
mov
dec
rcrb
je
cli
cmp
sub
sar
pop
call
mov
cmpsl
shrl
daa
cmp
je
shll
pop
jne
xchg
push
imul
arpl
scas
pop
into
insb
mov
imul
jmp
repz
loope
jge
call
leave
ficoms
je
sub
push
popf
cmp
addr16
iret
inc
loope
in
inc
jo
gs
xchg
jge
out
jbe
pop
push
mov
popf
fxch
push
mov
mov
and
aad
mov
int3
jl
or
xchg
xor
mov
pop
xor
sbb
sub
ds
dec
out
not
mov
mov
jb
ja
lds
out
stc
push
in
outsl
cwtl
inc
mov
add
inc
orl
jbe
jne
pop
jb
jb
fbld
call
and
lcall
imul
popf
xlat
or
lds
or
test
stos
dec
or
ret
jno
jmp
enter
bound
imul
or
xchg
rcrb
ljmp
sbb
imul
mov
cmp
pushf
sbb
pop
push
cmp
fiaddl
test
jle
dec
mov
aas
sahf
cli
inc
mov
adc
or
xor
sbb
test
and
pop
mov
in
inc
nop
dec
scas
jmp
and
push
sub
out
sub
xor
adc
repz
les
les
push
lcall
push
cmpsb
mov
sbb
mov
cwtl
jb
aam
daa
sbb
xor
and
ja
insl
mov
imul
pushl
cmpb
mov
mov
add
mov
or
in
out
in
out
jo
sti
fwait
sbb
hlt
adc
pop
adc
iret
mov
fwait
aad
xchg
jb
aam
dec
pop
xlat
pop
ljmp
das
inc
lock
pop
enter
or
mov
mov
mov
mov
lods
fisubs
or
sub
rcrb
xor
inc
dec
sahf
pop
js
pop
adc
outsb
or
xchg
or
jbe
adc
push
sbb
test
sbb
jb
shlb
jge
mov
adc
in
movsb
pop
xor
outsb
push
lahf
pusha
inc
cmp
adc
sub
cld
or
or
sbb
jns
rcll
sub
xor
or
inc
test
xchg
mov
add
pop
mov
mov
mov
dec
xchg
std
lods
xchg
mov
dec
adc
add
pop
insb
lds
sbb
mov
jp
and
aas
mov
xor
pop
lea
or
out
cmp
mov
xchg
mov
imul
sub
mov
popf
pop
push
xor
xor
insb
cmp
mov
outsl
cmpsl
clc
nop
jmp
pusha
cld
mov
xor
in
out
adc
pop
cmp
sub
lock
neg
xchg
lods
dec
aam
movsl
sbb
sub
mov
cltd
fistps
cmc
jecxz
mov
push
insl
jl
push
movsb
hlt
sub
fnclex
pop
fwait
ja
mov
push
inc
pop
rclb
mov
bound
fildl
lea
in
cmp
stos
xchg
es
ficompl
sti
jge
sub
insl
cmp
les
shrl
iret
divb
xor
out
pcmpgtw
jmp
xorl
jo
pop
mov
xchg
push
jb
push
sub
xor
roll
sbb
pop
lahf
cmp
fldenv
hlt
outsb
stos
imul
sbb
or
inc
lds
push
nop
sarl
cmp
lods
add
push
enter
sti
sub
jp
xlat
sbb
pop
jl
scas
push
xchg
and
mov
jmp
into
pop
add
movsb
cmp
popa
insb
pop
jge
gs
xor
jne
push
adc
es
popf
ljmp
popa
mov
dec
rorb
lods
push
mov
fidivrs
or
stos
mov
lds
call
mov
xorl
jb
cmpsb
adc
mov
jg
rclb
xchg
repz
jae
out
sub
imul
pop
fsubs
pop
or
jge
ret
lahf
cld
pop
or
pop
xchg
shll
pop
nop
jl
popf
mov
xor
out
inc
outsl
imul
inc
les
lahf
push
add
addr16
pop
cmp
cmpl
xchg
lret
jne
dec
or
or
aaa
imul
ljmp
push
dec
mov
jecxz
test
dec
push
mov
jmp
sub
pop
jle
ret
and
lock
dec
jp
add
bound
sub
xor
mov
into
xchg
dec
mov
jmp
dec
repz
sti
dec
push
xchg
data16
in
xlat
cmp
cmpsl
addb
jmp
and
cwtl
outsl
xor
les
aas
add
call
lods
mov
cwtl
inc
mov
add
xchg
push
or
aas
stc
sbb
fidivl
pop
xchg
imul
lods
test
sbb
or
dec
dec
je
ss
mov
rcrb
mov
push
lret
icebp
or
cmpl
fsubr
je
lahf
lock
iret
cmp
push
movsl
in
je
sub
inc
enter
test
xorb
or
push
subl
mov
scas
ret
ss
jbe
mov
lret
pop
sbb
push
xchg
pushf
adc
sbb
int
bound
or
push
push
adc
sahf
and
sbb
mov
or
shlb
push
mov
sbb
pop
sbb
xor
lret
xchg
ret
nop
in
jl
cs
lods
inc
lahf
arpl
mov
hlt
jae
sub
cld
sti
jne
std
and
push
dec
xchg
es
std
xchg
dec
test
mov
cmp
or
xchg
and
adc
adc
lret
incb
repz
mov
hlt
push
and
cmp
popf
adc
lret
pop
cmp
push
mov
sbb
lea
add
or
pop
lcall
lcall
cmp
popa
dec
mov
xchg
lcall
fisubl
xchg
lret
les
imul
ds
fidivrl
outsb
push
cmp
in
xor
inc
lahf
bound
sbb
jmp
sub
mov
dec
fwait
or
testl
mov
mov
xchg
ret
add
jae
inc
dec
insl
cwtl
fdivl
adc
sub
popa
leave
test
repnz
stc
mov
ret
jne
adc
pop
test
pop
or
cmc
jbe,pn
xor
stos
jp
cmp
adc
and
mov
test
or
cmpsl
pop
ds
hlt
fisubrl
inc
pusha
cmc
stos
sar
cmpsb
jne
cmp
cltd
jg
movsb
mov
xor
mov
test
test
adc
add
pop
pop
or
test
call
cwtl
es
dec
push
mov
hlt
sub
test
mov
jno
movsl
adc
adc
push
mov
lcall
mov
push
push
jae
xchg
add
jbe
and
into
insb
aaa
mov
fwait
push
jne
push
push
in
push
xchg
mov
and
cmp
or
fistl
push
loopne
mov
in
add
jg
fldt
push
in
sub
pop
mov
sahf
psubusb
mov
rcl
fistl
stos
rorl
xchg
xor
js
sahf
out
imul
lret
popa
push
push
fadd
jl
lock
mov
xor
arpl
inc
int
ret
pop
lea
mov
cmp
je
jecxz
sahf
icebp
pop
push
sti
cmpsb
rcrl
jl
xchg
mov
pop
popf
push
pop
pop
jge
callw
push
xor
in
lea
push
cli
andb
jp
addr16
xor
subb
call
lahf
xchg
xchg
mov
pushf
and
push
pop
adc
and
add
gs
addr16
add
mov
test
and
dec
and
xchg
test
cs
lds
stos
cmp
scas
lock
and
or
cli
mov
cmp
ret
add
in
push
dec
add
pop
add
fdivl
dec
ss
pop
inc
aas
add
jmp
pop
jge
push
push
fnsave
imul
repz
test
repnz
hlt
mov
mov
imul
and
sub
arpl
mov
test
cmpsb
add
aad
add
fdivl
stos
js
test
mov
das
and
fdivrl
mov
fwait
sbb
xor
insb
adc
adc
mov
sub
and
dec
repnz
insb
push
jmp
shll
sub
lcall
enter
sbb
addb
mov
int
data16
lods
or
mov
lret
pop
or
ret
jp
lret
pop
cld
in
loop
fldcw
sub
mov
jge
sti
push
adc
sbb
adc
sub
jg
aam
dec
adcb
jl
fsubr
xor
lahf
pusha
adc
test
fsubp
daa
inc
fs
repz
fadds
mov
in
imul
mov
aad
cmp
ret
outsl
xchg
sub
mov
cli
jnp
jp
cs
scas
stc
lds
into
pusha
jno
icebp
call
mov
lahf
movsb
cmpsb
or
mov
xor
neg
jge
mov
mov
xchg
adc
push
cmp
sysexit
adcb
cmp
add
and
outsl
push
adc
in
test
xchg
stc
jle
jns
out
pushl
sbb
cmp
pop
xor
mov
cltd
ljmp
jnp
sbb
test
inc
push
fwait
jg
clc
and
cmp
cli
adc
out
test
lea
and
stos
mov
fwait
out
out
jmp
inc
xor
or
call
shll
mov
mov
fcoms
ret
mov
mov
ret
xchg
pusha
pop
mov
es
dec
mov
sbb
cmpb
cmp
or
jns
cs
mov
xchg
cli
inc
xor
loopne
or
dec
xchg
pop
fadd
decb
cmc
push
cs
mov
dec
pop
xlat
test
fdivr
add
shrl
sbbb
ljmp
mov
xorl
mov
inc
out
lea
jne
pop
flds
cmp
jmp
lahf
or
jae
pusha
mov
mov
mov
adc
lock
rcll
ds
push
add
xchg
inc
int
adc
pushf
sbb
ficoms
mov
int
sbb
pop
xchg
jp
mov
adcb
icebp
bound
jmp
push
sbb
scas
sbb
jl
movsl
clc
mov
hlt
dec
stc
inc
dec
jbe
pop
inc
arpl
push
sbb
cmpb
push
xchg
in
sub
adc
fistps
and
lds
push
cli
andl
mov
ss
icebp
imul
arpl
jne
lods
test
lock
lahf
jg
aaa
aas
sbb
sub
adcb
pusha
ja
aad
jno
jg
je
xchg
jbe
or
sub
push
sbb
mov
pusha
je
push
sbb
sbb
push
sbb
inc
adc
jae
fdivl
aad
cli
dec
shrl
mov
imul
out
jecxz
pop
dec
pop
rolb
scas
cld
movsb
das
sub
adc
xor
push
mov
mov
and
fsub
pop
sbb
fbld
xchg
test
nop
adc
fstps
in
fcoms
movsl
std
adc
fisttpl
mov
popa
mov
sub
aam
cld
adc
jo
aas
add
adc
xchg
adc
nop
in
jmp
xchg
sbb
push
jno
and
sahf
pop
mov
cs
les
sub
push
mov
scas
adc
shrl
push
mov
mov
push
xor
in
mov
inc
pop
test
inc
sub
pop
mov
popa
sbb
push
add
dec
fwait
push
fisubrs
sbb
dec
jae
flds
mov
sarl
xor
rorl
cmp
call
movsb
and
mov
push
dec
dec
fs
sarl
pop
js
xchg
lock
xorb
out
jge
mov
in
inc
es
lea
mov
fsubrs
das
push
jg
mov
test
and
dec
test
sarl
ret
fadds
movsb
sbb
mov
xchg
push
and
lahf
dec
aam
data16
cmp
fidivrs
clc
push
test
leave
enter
push
pop
add
push
sub
fcoms
push
lods
lret
addb
popf
nop
sbb
or
mov
jnp
fsubrs
mov
cmpsl
sbb
xchg
push
push
cmp
into
icebp
scas
sub
js
or
ficompl
ret
cmp
xlat
mov
sbbl
shll
push
push
push
mov
xor
xchg
fdivl
cmp
mov
sbb
lahf
mov
jo
data16
repz
leave
mov
jmp
nop
out
lea
cmp
add
test
iret
inc
mov
mov
out
or
push
push
insb
hlt
std
mov
sub
jp
stos
xchg
setbe
sbb
adc
or
mov
mov
adc
shl
cmp
inc
mov
mov
sti
xchg
addr16
ret
add
add
sub
pop
adc
push
rorl
inc
and
lea
pop
jbe
inc
mov
mov
add
add
mov
ret
std
mov
arpl
cmp
adc
fst
mov
sarb
mov
rolb
test
dec
jae
inc
je
sti
add
test
pop
js
incb
je
mov
cmpl
push
cmp
sbb
aad
xor
cmp
xor
movsb
mov
adc
xor
sub
das
movsl
inc
outsb
pop
mov
cmp
add
mov
fmull
jnp
je
push
sahf
aam
decb
mov
in
leave
xlat
into
es
daa
inc
sub
cmpsl
cmp
test
jae
xor
outsb
leave
scas
punpckldq
ljmp
pop
adc
mov
inc
int3
pop
scas
in
test
mov
push
int3
mov
imul
fcomps
test
das
or
insl
add
adc
jl
popf
int3
rcrb
mov
fcoms
lds
sub
icebp
hlt
loopne
mov
cmpb
mov
sub
or
loopne
jo
movsl
xor
rcll
adc
fidivs
jp
add
outsl
sub
inc
lcall
ret
shl
out
push
out
jmp
ss
outsb
repz
push
je
push
cmp
lods
in
mov
add
and
loop
jae
sbb
add
sbb
inc
sahf
lcall
fildl
jb
mov
jecxz
fstl
in
ret
ror
mov
mov
xorb
xor
add
hlt
loope,pt
leave
sbb
imul
pop
sub
pop
jo
sbb
mov
push
addr16
pop
push
xchg
sti
test
dec
lret
js
push
cmpsl
in
xchg
sub
sub
pop
jecxz
mov
mov
fidivl
sarl
data16
mov
mov
and
xor
mov
out
xchg
sahf
mov
dec
ss
cmp
xchg
or
mov
add
adc
pop
fisttps
cmp
jle
or
fisubs
push
pop
jae
push
xor
in
or
jnp
jecxz
sbb
movsb
or
mov
daa
ss
sub
jo
cmpl
jb
jne
add
mov
jb
mov
push
lds
mov
loopne
sbb
dec
loopne
adc
je
lock
cmp
pop
lods
push
out
frstor
aaa
or
sbb
xchg
sub
sbb
pop
dec
mov
inc
lret
in
push
ss
repnz
jecxz
or
jp
popa
inc
in
pop
frstor
add
addr16
popa
nop
dec
arpl
out
push
ja
push
leave
movups
ret
adc
jae
rcrb
into
pop
fstpt
and
sbb
push
insl
push
mov
jne
mov
loope
rorb
adc
idivb
shll
pop
sahf
pushf
xor
cmp
es
out
ljmp
and
movb
shrb
pop
aas
xchg
push
pop
mov
dec
movsl
sub
push
or
jmp
xor
loope
fists
repnz
cmp
imul
in
mov
pop
icebp
pusha
push
push
andb
fidivs
dec
push
or
add
popa
jle
cmp
mov
jne
and
pop
addr16
lret
push
lahf
std
xor
pop
fisttpll
insl
cs
gs
jmp
cmp
or
leave
dec
int
xchg
xchg
inc
push
mov
test
dec
ficompl
mov
into
adc
mov
jg
pop
jle
mov
push
pop
inc
adc
out
push
xor
and
xor
push
jo
xchg
aam
aad
pop
xor
pop
xor
add
xlat
inc
cltd
shrb
repz
call
push
int
ret
mov
pop
clc
push
daa
add
leave
sbb
cld
mov
in
mov
fimull
mov
decb
xor
lods
cmc
movsb
jle
loop
mov
sbb
mov
and
repz
jbe
pop
repz
je
mov
push
jns
out
and
lahf
leave
repz
or
jl
dec
jns
loop
add
pop
cmc
or
push
push
ja
push
sarl
cmp
loopne
or
outsb
ror
mov
xchg
xor
pop
gs
test
daa
std
insl
ds
pop
or
cmpsl
jbe
into
jno
rorb
dec
jno
pop
pop
inc
decl
pop
add
lret
dec
xchg
fidivrl
adc
pop
push
les
fs
lret
xchg
jmp
clc
lock
mov
xlat
movsl
mov
jno
pop
stc
push
and
cmp
pop
and
lahf
scas
push
xchg
xchg
dec
lods
shll
mov
sarl
jle
data16
lds
ss
cmpsl
adc
call
fldcw
pop
call
or
notb
add
pop
mov
push
lods
sbb
sahf
fbld
sub
ret
pop
jno
aam
adc
or
xor
push
pop
pop
repz
pushf
roll
push
sbb
enter
gs
dec
ds
in
hlt
inc
out
je
ret
jg
sti
sub
dec
pop
mov
jno
rorb
dec
stos
jae
notb
gs
mov
jns
jg
and
movl
movsb
mov
xchg
dec
mov
leave
sub
clc
pop
insl
pop
and
mov
aam
xchg
jbe
xor
cld
dec
xor
mov
add
outsb
and
jo
inc
mov
pop
xor
int3
das
jp
add
and
icebp
js
xor
xor
push
mov
lcall
adc
fbld
inc
mov
ficoms
int3
or
push
dec
out
xchg
inc
or
ljmp
dec
fistpll
ljmp
adc
jne
lea
jecxz
mov
and
jne
insl
mov
lahf
push
shlb
lock
cld
inc
inc
cmp
mov
mov
adc
lcall
andb
dec
loop
jmp
xor
shrl
outsl
jge
or
and
pop
das
testb
repz
inc
push
xchg
fwait
sti
jbe
xchg
add
inc
push
mov
cmp
decb
test
dec
adc
cmpsl
xchg
outsl
out
jle
mov
inc
ret
jbe
mov
push
xchg
sub
popl
jge
xorb
ret
lea
pop
repnz
bound
lea
xchg
out
js
iret
int3
adc
mov
movsb
dec
aaa
mov
out
enter
sti
mov
xchg
dec
add
pop
dec
sub
jns
jb
pop
les
dec
fwait
inc
xchg
fcoml
add
xchg
das
push
inc
push
xor
bnd
sbb
pusha
or
arpl
mov
jle
mov
cld
lahf
sub
inc
xor
test
or
push
cmp
add
sub
xor
mov
scas
daa
adc
and
hlt
into
xor
push
movl
sub
xchg
pop
mov
pop
cmc
ficomps
lcall
mov
lcall
add
fwait
cli
popf
aam
das
movsl
jg
movl
push
jp
stc
adc
fidivrs
push
xor
pop
xor
imul
fwait
ret
loope
ror
arpl
sbb
sti
mov
mov
test
cwtl
sahf
adcb
stos
inc
call
inc
inc
push
xchg
lret
push
pop
jnp
pop
inc
mov
mov
sub
xor
mov
inc
out
and
frstor
repz
mov
push
push
adcl
mov
out
cld
sahf
dec
sbb
cwtl
sbb
inc
pop
and
mov
outsl
addl
mov
mov
jne
xchg
popa
cmp
sbb
and
test
cmp
sarb
dec
lds
lods
dec
loope
adc
jno
popa
popf
subb
lret
pushf
and
leave
adcb
sub
fs
push
xchg
lcall
lcall
es
pushw
dec
xor
icebp
out
cmp
xor
scas
pop
insb
jp
push
ljmp
mov
das
add
shlb
push
ljmp
in
les
xor
inc
mov
fwait
xchg
adc
sahf
pop
out
or
popf
or
insl
out
xchg
pop
push
lret
mov
cli
shlb
inc
or
push
lcall
leave
notl
call
outsl
mov
adc
fadds
xor
push
push
rorb
mov
fadds
aas
jb
mov
inc
and
cltd
inc
sbb
xor
jne
fiadds
std
add
mov
je
out
and
pop
pushf
mov
test
jb
addl
das
pop
out
xchg
das
fs
ja
cmp
or
ss
sbb
mov
fwait
push
pop
inc
xor
push
stos
push
sahf
test
mov
movsl
int
jns
out
mov
cmp
stos
xchg
cmp
in
fdivrp
mov
lea
pop
push
icebp
inc
lahf
pop
sub
data16
mov
cmp
dec
test
push
or
aaa
mov
mov
adc
cwtl
imul
aad
dec
jle
push
data16
adc
mov
orl
pop
mov
push
dec
ja
sar
shrb
outsb
int
std
xor
test
xor
pop
out
sti
out
mov
add
mov
xchg
pop
adc
xorl
scas
push
out
fs
jo
dec
sbb
je
clc
popf
pop
insl
dec
in
lock
cwtl
jne
fldt
xor
xchg
test
xchg
push
sub
sar
fcompl
mov
in
mov
xor
popf
jmp
xor
out
mov
inc
cmc
das
xchg
push
push
test
mull
stc
addl
xchg
dec
cmp
cld
ljmp
cmc
xchg
ja
shll
int3
lcall
cmp
and
jo
and
ret
inc
pop
dec
in
dec
push
mov
push
cmpsl
lcall
pop
push
pop
ds
call
push
enter
mov
subb
out
adc
inc
push
daa
test
and
adc
je
and
popa
sub
into
cmp
lret
aas
push
ljmp
lret
imull
xchg
xor
out
cmp
cltd
int3
jp,pt
xchg
xor
addr16
pusha
jbe
sqrtps
lret
mov
rcl
cmp
imul
dec
popa
aad
push
fistpll
inc
sbb
pop
rorb
jle
insb
out
pop
inc
out
sbb
data16
out
fdivl
popa
mov
add
jnp
data16
mov
pop
fldl
sub
xor
les
test
xor
xchg
jae
inc
hlt
jl
jle
dec
xchg
repnz
push
scas
sarb
or
clc
cmp
fisttpl
adc
mov
cli
mov
lock
inc
mov
dec
lods
mov
cmc
enter
loopne
inc
push
sbb
fstpl
pop
pop
shrl
stos
lods
fisttpll
jbe
jl
lds
mov
shlb
mov
jg
callw
repnz
jnp
scas
xchg
adc
mov
pop
xor
scas
jg
mov
mov
add
sbb
sbb
mov
jl
sarb
inc
sbb
clc
xchg
jmp
mov
vpcmpgtb
pop
je
outsl
xlat
movsb
mov
in
or
pop
lea
cltd
pop
adc
dec
std
push
sub
or
add
cmp
js
adc
or
and
data16
sub
test
lea
pusha
fwait
bound
inc
mov
pop
lea
cmp
inc
jae
cs
sub
dec
mov
orl
addb
ljmp
mov
inc
jo
aam
das
scas
lret
push
mov
or
lods
add
mov
fiadds
cmp
cs
lcall
inc
xlat
repnz
fstps
push
mov
in
mov
xor
jmp
je
or
repz
add
xchg
add
scas
push
sub
sub
cmp
sub
loopne
cmp
test
and
jecxz
add
mov
pop
es
mov
sub
mov
lret
aam
ljmp
mov
inc
push
repz
jns
nop
xchg
add
shl
add
mov
jne
lcall
sub
test
clc
popa
cmc
adc
xchg
or
dec
lock
in
insb
inc
cltd
clc
les
nop
lahf
xor
jmp
xor
mov
mov
push
sbb
xlat
test
adc
or
repz
or
fbld
xchg
cmpsb
mov
push
nop
cmp
data16
mov
jp
aas
int
imul
mov
cs
jns
fisttpll
sbbl
test
aam
add
in
scas
outsl
mov
and
xchg
dec
and
add
inc
push
cltd
scas
popf
mov
mov
lock
in
mov
pop
dec
xor
outsl
outsb
fadds
dec
push
lds
insb
xchg
lea
jb
mov
popf
mov
lret
xlat
jmp
cmp
push
inc
fnstcw
pop
mov
pusha
stc
push
push
xchg
in
inc
sub
push
or
fisttps
test
add
loopne
add
add
xchg
lds
loope
iret
in
nop
dec
arpl
pop
fmuls
repz
xor
stos
sub
out
xor
das
xor
or
jg
das
xchg
popf
shlb
fcom
or
aam
mov
popa
out
lods
and
movsb
mov
hlt
test
pushf
mov
pop
xchg
xor
pushf
jno
xor
push
add
inc
sub
mov
imul
rorl
fwait
mov
adc
imul
test
shlb
repz
cmp
jne
je
daa
xchg
push
rol
pop
cli
jnp
clc
das
jne
jp
inc
fwait
or
mov
xchg
pop
dec
inc
stc
lret
add
cwtl
stos
mov
push
fadd
xor
jl
mov
mov
sub
add
in
repz
xchg
rcrb
cmp
fcmovbe
stos
dec
jl
movsl
sahf
loopne
addr16
sub
fs
out
inc
scas
jnp
xchg
mov
sbb
mov
xchg
fstps
xchg
adc
clc
rolb
loop
int3
mov
addr16
jle
jne
push
cmp
push
dec
leave
cmp
and
popl
xchg
cmc
pop
push
xor
imul
sbb
aas
cmp
cmp
and
xor
mov
test
xor
jne
sub
aaa
jne
mov
out
aam
add
push
and
inc
xor
and
stos
dec
adc
jl
loopne
cld
pop
test
call
ret
xor
fwait
sbb
pop
insl
push
or
sbb
sbb
aam
lahf
xchg
cltd
cmpsl
jp
add
lret
repz
jno
sub
jp
stc
test
orb
xchg
nop
push
sahf
dec
and
dec
push
push
push
adc
jle
imul
sub
nop
les
jbe
inc
adc
pop
cmp
movsb
loopne
lret
or
sbb
xor
das
imul
xchg
cli
mov
jbe
push
les
mov
pop
mov
pop
add
sub
out
cmp
jns
std
dec
mov
fistl
xor
mov
daa
cltd
push
bound
movsl
dec
aaa
cmp
outsb
shrl
jnp
or
jnp
scas
into
cmc
movsl
jo
or
fdivrp
dec
add
mov
mov
mov
lods
xor
lods
pushf
add
scas
mov
xchg
xor
push
xchg
dec
sahf
stos
cmpsb
xchg
mov
pop
add
mov
adc
lret
push
ds
loopne
mov
ret
aas
bound
pushf
mov
lret
inc
insl
push
flds
aad
inc
mov
int
lds
cs
pop
ret
sarl
sub
div
leave
sbb
and
addl
notb
out
es
mov
negb
cmp
scas
int3
cmp
adc
pop
add
adc
sub
popa
mov
divl
xchg
addr16
mov
jne
in
push
pop
mov
in
das
lock
adc
aaa
in
outsl
lds
xor
lods
mov
dec
cmp
xchg
or
add
xchg
rcll
sub
paddusb
fisttpl
mov
mov
cmpsl
imull
add
test
fimuls
movsb
jno
ret
and
lods
inc
jge
mov
jne
loop
ret
adc
sar
mov
sti
outsl
jns
cmp
iret
mov
mov
dec
stos
int3
in
shr
rcrb
and
rolb
jecxz
or
pop
shlb
jp
fsubr
in
mov
sahf
xor
dec
lret
jg
jo
cmc
outsl
sub
xchg
add
or
shl
inc
xor
jns
mov
pop
shrb
dec
sahf
stos
loop
data16
cmp
inc
dec
cwtl
gs
leave
stc
out
movsl
les
cmp
cmpsb
sbbl
xchg
jbe
sub
push
rorl
stos
push
mov
imul
imull
sbb
cmp
mov
std
outsb
sti
das
leave
cs
stos
incb
ja
test
fldl
and
repnz
mov
aad
cbtw
scas
int3
cmp
mov
pop
add
test
cwtl
es
add
mov
int3
mov
push
dec
push
xor
sarl
out
add
imul
stc
push
push
or
pop
in
lods
mov
fldcw
jmp
pop
nop
dec
in
push
insb
mov
cmp
adc
es
adcb
outsl
lcall
jb
xor
stc
movsl
sar
inc
sub
sub
aas
pushl
xchg
test
lds
mov
outsb
xor
rorb
std
scas
lcall
popa
imul
fmulp
xor
stc
dec
sub
test
shll
sbb
aam
or
pop
lret
mov
stos
cltd
ss
adc
inc
push
push
xor
adc
jo
loopne
sub
fiadds
lret
leave
out
adc
mov
stos
mov
into
and
add
in
add
xlat
enter
sbb
popf
jno
push
mov
in
xor
cmp
jae
inc
inc
out
sub
in
add
push
or
fimuls
add
mov
pop
mov
outsl
in
dec
mov
mov
jle
mov
or
cmpl
lea
lahf
jb
scas
fwait
cs
xchg
mov
cmpsb
aam
push
sbb
cld
xor
out
ret
hlt
push
pop
lret
pop
stc
movsb
push
ljmp
idiv
fcompl
mov
mov
adc
adc
repz
dec
addr16
adc
mov
adc
pop
imulb
cmp
jbe
cmp
jbe
imul
mov
cwtl
mov
push
ret
lret
jae
push
xor
ss
push
inc
push
or
and
xchg
testb
testl
fisttps
cli
mov
and
mov
repz
jge
decb
mov
pop
loope
repz
jmp
test
mov
push
daa
cld
mov
pop
ficompl
xor
push
mov
pushf
rcrl
sbb
jp
xor
or
lods
mov
jbe
mov
popl
fs
fdiv
mov
cmp
mov
stos
shll
fcomps
cwtl
cwtl
mov
jae
bnd
mov
test
mov
adc
inc
cld
imulb
icebp
sbb
popf
imul
pop
gs
mov
popf
jg
jne
sbb
xchg
mov
xchg
idivb
inc
sub
mov
es
cmovns
push
or
sub
ljmp
cmpsl
adc
sbb
scas
sti
jnp
test
jecxz
test
ret
dec
inc
push
inc
stc
inc
mov
mov
aad
sub
test
push
dec
sbb
or
push
mov
in
imull
pop
inc
fwait
push
pop
ret
push
ja
jl
push
add
inc
in
adc
inc
xchg
repnz
inc
inc
daa
push
mov
pusha
dec
call
insl
repz
arpl
lahf
out
sti
icebp
push
idivl
aaa
mov
fs
shrb
push
movsb
dec
and
cmp
lea
lahf
mov
fimuls
cs
jge
mov
out
inc
jecxz
cmp
jb
xchg
mov
mov
test
adc
int
fstps
repnz
or
add
popa
inc
pop
sub
icebp
add
dec
sbb
in
dec
or
jns
test
mov
pop
cmp
in
and
bound
les
dec
insb
int3
fcmovnu
pusha
cli
push
mov
cmp
push
fst
xchg
push
enter
mov
sti
or
fimuls
pushf
cmp
jle
sbb
stos
jg
fcompl
mov
lods
test
popf
cmpsl
repz
jle
pushf
lcall
shlb
mov
mov
decl
inc
xchg
cmpsb
je
pop
pop
leave
mov
stos
inc
popf
daa
lret
pop
jge
sbb
arpl
jb
iret
xchg
sbb
pushl
push
jb
xchg
adc
mov
rolb
mov
push
loopne
and
xorl
ss
dec
repz
test
sbb
xor
and
bound
push
cmp
push
push
es
nop
loope
adc
sbb
push
aas
repnz
add
jno
jo
sbb
mov
jg
cmpsb
out
lods
jle
mull
dec
xchg
lret
loope
in
aam
loopne
int
dec
dec
lahf
rorl
ja
shll
in
and
mov
les
xchg
jne
roll
mov
fisubs
push
adc
mov
xchg
cld
imul
mov
mov
sarl
scas
or
cmp
push
mov
test
shll
mov
inc
addb
cwtl
notb
lret
inc
outsb
pusha
and
sub
adc
push
adc
enter
jge
sbbl
call
xor
rorb
shr
lret
lcall
clc
mov
or
push
add
add
pop
aas
jnp
push
sub
ss
movsl
or
adc
ljmp
adc
add
hlt
insb
inc
rorl
jbe
dec
cmc
ljmp
dec
lea
push
data16
sbb
cltd
into
loop
jle
hlt
push
mov
cmp
pusha
xchg
mov
hlt
hlt
cli
mov
cmp
cmp
pusha
sbb
mov
mov
add
mov
out
and
and
xchg
xor
nop
xchg
push
data16
loop
cmp
push
push
sti
or
and
fisttpll
add
or
add
ja
lea
cmp
jmp
repnz
adc
popf
leave
jecxz
sub
inc
pop
lret
fcomi
push
inc
mov
dec
and
xlat
mov
std
outsl
xor
imul
xchg
dec
iret
cmp
imul
and
adc
insl
rcl
into
sbb
stos
dec
push
xor
inc
repz
aad
pop
mov
test
ret
and
add
int3
cmpb
leave
outsl
fnstcw
or
jno,pn
fdivs
or
pop
sbbl
push
inc
jo
add
push
jmp
int3
sahf
mov
movb
inc
call
xchg
push
int
in
mov
adc
adc
adc
cmpsb
and
popf
and
js
frstor
ja
pop
mov
std
mov
xchg
cs
daa
sahf
xor
lds
jmp
in
mov
lcall
pop
mov
incl
inc
sub
orb
xor
int
jle
mov
sar
mov
icebp
mov
or
sub
inc
adcb
aam
fbstp
roll
mov
pop
stos
mov
movsl
mov
xor
jbe
enter
or
jle
mov
cli
movsb
int3
scas
das
test
jle
stc
push
mov
jbe
inc
enter
xor
add
rclb
inc
push
rcrb
add
imul
inc
adc
ret
adc
jp
xchg
add
mov
jno
clc
das
add
adc
into
rcr
aaa
mov
into
lock
shlb
jle
lods
arpl
fcompl
aam
xchg
shlb
dec
cmp
clc
testl
lahf
jnp
test
add
push
dec
insl
scas
jnp
mov
std
lcall
popf
and
jae
mov
push
fsubr
rorb
pushf
test
ret
sti
rorl
aad
xor
repnz
test
push
mov
xorl
test
xor
les
cwtl
jnp
pop
popa
mov
push
lock
out
xchg
mov
sub
push
fs
jns
test
inc
jge
out
cmpsb
jmp
loop
out
xor
repz
fsubrs
cli
cmpsb
and
addr16
lock
test
sbb
dec
nop
jge
push
std
cltd
and
jno
pushw
ret
mov
cmp
lock
arpl
dec
add
test
sub
jge
cltd
cmpsl
push
sub
xchg
push
or
loope
cmpl
xor
mov
mov
sbb
jg
xchg
and
jl
sbb
addl
push
mov
nop
sbb
dec
outsb
mov
inc
pop
pop
test
add
dec
fwait
into
ljmp
inc
addr16
add
xor
psraw
shrb
pushf
dec
jns
jmp
int
mov
rorl
mov
mov
sbb
das
xchg
cmp
cmp
mov
push
daa
arpl
and
repz
mov
test
lods
adc
cltd
or
mov
movsl
pop
cmp
mov
cltd
or
xor
xchg
mov
xor
popa
dec
lcall
adc
loop
int3
inc
fdivrl
pop
adc
xchg
xchg
adc
dec
stos
iretw
scas
outsb
and
and
test
jnp
and
sbb
cmp
pop
ret
movsb
push
stos
mov
sbb
lea
orl
in
das
push
sub
aaa
or
cmp
lods
shll
inc
inc
push
subl
cmp
and
jge
ja
lret
mov
je
sahf
orl
daa
xor
xor
inc
adc
and
xor
cld
push
shll
ja
jno
mov
daa
cmpsb
test
mov
mov
jno
and
sub
loopne
ss
inc
fldenv
xor
dec
rorl
movsl
and
call
ret
or
and
fnsetpm(287
js
push
pop
notl
jmp
mov
adc
xor
push
shrb
in
imul
mov
sbb
mov
push
in
xor
xchg
imul
inc
inc
imul
xchg
jns
flds
je
clc
and
lods
push
inc
pusha
pop
outsl
pushf
aas
jns
repz
loope
lods
mov
mov
dec
jle
pop
add
inc
outsb
mov
in
pop
addl
jo
das
mov
movsl
js
xor
dec
mov
jo
imul
adc
push
xorl
rorb
mov
out
pushw
cli
enter
cmp
out
lret
sbb
cmp
mov
sbb
data16
sub
cli
pop
fs
fcomps
and
pop
sti
std
and
cmpsl
popf
xchg
mov
in
mov
daa
mov
or
jecxz
loope
cli
repnz
push
add
xchg
fwait
icebp
popl
lds
fwait
cmp
mov
mov
add
mov
cmp
popa
add
outsb
cmp
add
lret
sub
jecxz
dec
sub
xchg
les
sbb
push
icebp
imul
xchg
sub
pop
loopne
into
sub
cmp
push
enter
add
aas
push
icebp
sbb
movsb
fistps
scas
xchg
add
xchg
in
jmp
adc
jns
mov
popl
test
jmp
data16
fcmovbe
cmp
out
popa
xchg
adcl
mov
push
xor
jnp
fs
int3
mov
orb
cs
roll
aam
out
repz
sbb
cmp
adc
add
test
leave
cmpsl
xchg
in
pop
adc
mov
or
daa
dec
out
mov
and
stos
loopne
and
mov
cmp
dec
shll
push
jp
push
in
imul
je
pop
into
dec
aad
je
dec
xor
sub
cmc
pop
adc
adc
adc
hlt
pop
mov
mov
loope
adc
xor
xchg
dec
dec
ja
push
outsl
jb
into
insb
fadd
in
icebp
dec
aas
xlat
sbb
call
mov
ja
rcl
jl
dec
adc
scas
cmpb
pop
jne
arpl
sub
jmp
fs
fildl
in
push
push
int
push
inc
stc
enter
popf
jb
lds
sbb
lret
hlt
pop
out
dec
in
clc
jmp
cmp
mov
lods
ret
rcrl
sub
sbb
mov
xchg
enter
jo
mov
xor
sahf
and
xor
loope
mov
adc
shll
mov
jge
inc
lds
insb
jge
cmpb
out
stc
mov
pop
sahf
mov
and
inc
mov
scas
icebp
or
dec
adc
inc
data16
dec
mov
loopne
aaa
inc
popa
les
xor
cld
sahf
and
sub
pop
add
popa
sbb
mov
rcrb
stos
cmp
lahf
test
pop
cmc
movsb
inc
dec
xchg
add
mov
and
sti
cmp
mov
pop
imul
push
push
mov
popf
jne
arpl
jg
rcr
out
imul
lock
adcl
dec
adc
in
inc
stc
out
maxps
dec
loop
aad
arpl
inc
leave
shrl
sbb
lods
mov
mov
add
cmp
call
nop
and
add
mov
mov
adc
xchg
in
leave
push
dec
cmp
mov
call
pop
dec
mov
push
push
mov
and
mov
mov
and
mov
xchg
mov
xorb
das
repnz
cld
scas
push
xchg
jns
ds
and
adc
test
xchg
push
xor
mov
mov
mov
lock
sbb
jle
cmp
cs
shrb
imul
and
sub
mov
ret
pop
pusha
jmp
in
clc
pop
leave
nop
dec
xchg
pop
das
xor
cli
mov
mov
stos
lret
dec
xchg
loopne
outsb
pop
addb
subb
fstpl
jb
ds
jecxz
pop
mul
aad
loopne
and
dec
cmp
mov
in
xor
or
or
mov
sub
push
push
movsb
dec
adc
xchg
xchg
xchg
mov
outsl
sub
xchg
lods
xchg
sub
pop
roll
mov
sub
gs
add
inc
gs
push
sbb
repnz
mov
push
aad
pop
adc
orl
push
in
xor
xlat
dec
add
out
xor
adc
rorb
jecxz
cmp
aam
test
and
jns
xor
lds
or
adc
sub
pop
ds
adc
fistps
imul
cld
dec
mov
out
push
inc
rclb
in
xor
mov
push
sbb
sbb
xor
pop
pop
inc
ficoms
mov
cmp
and
out
mov
or
and
sarl
mov
jmp
fists
lods
mov
jg
movsl
mov
test
andb
sbb
jo
mov
pop
jne
inc
dec
negb
push
push
mov
adc
loope
add
cmp
stos
int
pop
mov
repz
push
xor
and
mov
loopne
jp
in
push
in
push
mov
pop
dec
xchg
fsubl
pop
sahf
outsb
cmc
mov
cmp
sbb
sbb
mov
jge
jmp
sub
cld
aad
ja
mov
pop
mov
stos
adc
push
sub
fbstp
clc
push
push
push
push
ret
rcr
adc
lock
mov
into
sub
mov
add
les
lahf
and
add
out
mov
mov
fiadds
roll
lods
movsl
stc
mov
lret
ja
addr16
push
inc
fnsave
mov
xor
jge
cltd
mov
daa
mov
or
xor
mov
add
jl
xchg
outsb
cli
js
pop
in
or
mov
pop
pop
xchg
and
sub
das
mov
cmp
lock
jo
inc
stos
jo
jbe
xor
outsl
add
or
es
push
insl
leave
jae
scas
lds
xchg
xor
dec
push
cli
loope
dec
shll
dec
lahf
xchg
jmp
stos
adc
ljmp
aad
cld
pop
jne
dec
jl
mov
shrl
adc
test
mov
or
pop
push
add
or
adc
sbb
adc
cmp
or
mov
mov
lock
mov
push
or
jne
add
sbb
adc
js
fisttpll
lds
sub
fnstenv
jecxz
aaa
xor
clc
mov
cmp
popf
adc
sbb
scas
push
xchg
sbb
xorb
and
inc
mov
sbb
lahf
xlat
ja
mov
inc
xchg
cwtl
push
mov
push
in
inc
mov
lods
mov
sbb
and
mov
push
jge
dec
js
jecxz
stos
icebp
mov
aas
adc
fistl
inc
mov
inc
push
pop
ja
hlt
lock
loopne
xchg
inc
adc
dec
adcb
ja
lods
add
scas
in
xor
adc
rorl
push
loopne
sbb
enter
xchg
movl
jne
ss
int3
stc
rcrl
xor
test
push
dec
cs
inc
addr16
les
inc
ljmp
std
adc
leave
imul
dec
push
push
daa
fcoml
jbe
outsl
push
adc
ret
jmp
sub
and
mov
loopne
dec
cs
pusha
push
jno
mov
mov
inc
pop
sub
adc
fldenv
and
or
shlb
dec
xlat
nop
add
mov
mov
pop
jmp
mov
out
mov
lret
mov
mov
push
popa
test
shll
add
pop
or
inc
mov
jo
icebp
xor
fpatan
loope
add
push
pop
sbb
or
inc
mov
pop
inc
jp
xchg
in
inc
pop
aaa
in
xchg
dec
inc
push
dec
inc
pusha
inc
push
adc
mov
pop
push
loopne
aas
rcrl
mov
mov
pop
dec
rcll
addr16
cltd
sbb
mov
dec
xor
inc
cmp
fcmove
popf
adc
push
push
mov
cltd
xor
into
enter
and
xchg
pop
test
imul
shll
fdiv
jae
aam
movsl
dec
rcrl
lock
loope
add
sti
push
bound
push
pop
outsl
cltd
cmpl
fidivs
pop
test
scas
out
inc
das
aas
cmpsb
out
rclb
addr16
sbb
popf
std
pop
inc
sbb
lcall
fs
js
sbb
es
mov
xchg
push
xchg
adc
mov
mov
out
jp
stos
fldenv
fisttpll
scas
ret
inc
jg
cmp
xlat
inc
jecxz
daa
fisttpll
in
xor
dec
ja
push
xchg
or
lods
les
or
aad
xlat
and
mov
daa
dec
addr16
jg
aas
xchg
dec
loop
or
stc
popa
dec
out
cmp
cmp
iret
into
jne
xchg
fisubrl
mov
ds
dec
nop
call
ja
push
std
mov
add
or
stos
lock
sbbl
adc
adc
fdivrl
clc
andl
clc
aam
mov
adc
jne
mov
sub
insl
mov
into
fiaddl
pop
or
fstps
inc
push
je
out
mov
mov
mov
xchg
fwait
or
push
inc
lock
mov
popf
dec
icebp
daa
xor
xor
or
fwait
sbb
xchg
repz
mov
popa
aaa
xchg
sub
shl
cmpsl
ds
mov
jns
movsb
push
gs
jbe
cmp
inc
or
insb
movb
sbb
dec
imul
jmp
repz
data16
data16
pop
inc
ss
daa
negl
sbb
cld
iret
loope
push
cmpsb
adc
in
push
push
xchg
xchg
loop
dec
cli
xchg
xchg
inc
mov
popa
xor
insl
int
imul
jbe
insl
mov
add
push
mov
mov
in
insl
mov
dec
dec
shll
aad
repnz
leave
lock
mov
mov
add
mov
adc
mov
jle
jno
push
lret
pop
test
sbb
push
cmp
int3
iret
xchg
repz
xchg
jbe
fisubrl
cmp
jo
mov
xchg
push
insb
mov
ret
decl
xchg
cmc
xorl
ljmp
jbe
ja
cmp
int3
ret
ss
pop
int
sub
int3
aad
xor
cmp
mov
jo
jg
ss
jg
pop
xchg
jb
mov
insb
jg
ja
fs
push
inc
xor
mov
inc
test
les
scas
sbb
push
pop
xlat
mov
pop
icebp
arpl
lcall
clc
mov
adc
jno
mov
jl
cmc
cmp
clc
test
push
imul
mov
cmc
aaa
pop
push
clc
sbb
stos
sbb
jbe
mov
in
inc
mov
ss
push
loop
push
mov
jle
sbb
sbb
mov
daa
cltd
lea
cmpsb
jb
fs
mov
jg
or
mov
lret
cmp
adc
adc
mull
cmpsl
repz
mov
outsl
pop
lcall
test
xchg
or
hlt
xchg
lods
sub
push
jmp
rolw
mov
jp
rcrl
jbe
mov
sbb
bound
or
pusha
ret
push
mov
inc
outsl
mov
test
in
or
cmpsl
out
push
rorl
rol
movsl
fdiv
and
cmp
and
sub
mov
push
and
shlb
adc
and
shll
adc
cltd
mov
sbb
xor
ja
xchg
scas
adc
hlt
repnz
add
ret
in
pop
inc
xor
stos
incb
xchg
cmpsl
call
ljmp
sbb
xor
and
xor
in
mov
lret
rdtsc
in
divb
add
add
leave
xchg
cmpsb
adc
jne
jae
das
jmp
add
sar
jle
ds
pusha
fwait
idivl
xchg
jb
stos
jp
push
arpl
pop
in
repz
and
xchg
push
and
repz
jb
cmp
mov
or
adc
bound
sti
int3
push
add
cmp
and
lret
dec
and
push
push
aam
call
out
jge
jo
pop
or
cld
inc
pop
les
xchg
out
xor
adc
pop
mov
and
ja
pop
outsb
lods
cmp
xchg
fstpt
and
shrb
insb
push
and
xchg
or
xor
and
jnp
ficompl
test
mov
mov
imul
xor
lahf
mov
jnp
cmpsb
imul
mov
jge
and
fcmove
xchg
mov
lea
jge
je
andl
dec
cmpsb
test
and
in
or
jns
jne
cmpsl
shrl
js
mov
js
lds
mov
jbe
push
aaa
loopne
xor
push
mov
xchg
mov
jnp
sub
test
clc
cld
adc
fistpll
sub
orb
out
dec
sbb
ljmp
addl
sub
scas
popa
ja
sub
xor
test
mov
imul
jns
into
rol
sbb
adc
arpl
or
push
xor
aad
outsb
rcll
imul
jo
cmc
mov
inc
and
es
ret
mov
mov
outsb
loop
and
stos
scas
mov
data16
cltd
rclb
or
stos
fwait
xchg
in
hlt
movsl
push
fdivr
jno
outsb
jp
cmp
popf
xor
pop
jmp
rcrl
outsl
cld
and
xor
pop
push
xchg
dec
aam
push
test
icebp
xor
cmp
les
pusha
jp
xor
mov
stos
xchg
je
or
out
mov
xor
inc
jne
out
or
fs
cltd
jns
pop
stc
add
dec
mov
clc
in
lahf
jmp
push
xor
pop
into
imull
icebp
fst
jno
and
push
xor
xor
jno
or
jg
das
add
dec
int
dec
jge
insb
int3
out
es
sub
rcrl
mov
jmp
sbb
lds
in
push
inc
add
shl
pop
jecxz
add
icebp
xlat
in
out
push
pushf
adc
lcall
mov
fnsave
and
jno
ret
push
jg
jae
lcall
cli
repz
mov
addr16
es
lret
sub
mov
xor
ljmp
hlt
mov
call
add
xchg
in
mov
inc
jnp
movsb
enter
outsl
or
icebp
xor
mov
cmp
ret
sahf
js
sbb
dec
push
sbbl
movsl
cmp
add
cmpsl
pop
aaa
jmp
dec
mov
stc
popf
jo
mov
add
dec
mov
adc
test
jl
repnz
iret
pop
je
test
xor
ret
pushf
jmp
mov
and
int3
push
jp
stc
int3
clc
mov
sub
xchg
ljmp
xor
sub
mov
jno
jge
adc
repnz
test
fcompl
xchg
xor
mov
xchg
fucompp
enter
push
xor
pop
sbb
xchg
out
add
xchg
lds
dec
das
push
or
xchg
or
mov
pushf
loope
mov
mov
xchg
fidivs
xchg
adc
rorl
mov
scas
mov
mov
xchg
outsl
mov
or
mov
mov
cmc
push
jmp
inc
test
dec
cwtl
sub
push
pop
xchg
aaa
clc
popf
inc
sub
outsl
mov
aam
rcrb
or
inc
nop
jge
fs
test
xchg
clc
cmp
dec
mov
push
and
je
mov
pop
lret
in
lret
fidivrl
and
mov
out
push
scas
xchg
adc
jle
shll
inc
mov
pop
mov
jno
fwait
and
andl
mov
out
or
jns
adc
push
aam
mov
loopne
pop
call
add
xor
dec
xchg
divl
mov
sbb
sub
sub
sbb
pop
adc
mov
cmp
pop
aam
cli
loope
imul
mov
push
mov
cltd
pop
jnp
jmp
repnz
push
adc
leave
mov
push
xchg
pusha
and
adc
inc
add
xor
jg
loop
popf
dec
enter
outsl
cmp
xchg
sub
sbb
test
mov
inc
mov
out
or
loop
cmpsb
int
adc
mov
mov
repnz
jne
add
cmpl
or
sahf
jno
inc
mov
gs
lods
add
pop
out
shlb
mov
lret
push
stos
das
or
and
pop
movb
pop
sub
bound
sbb
mov
ret
push
fbstp
mov
sub
xchg
jecxz
mov
aaa
mov
mov
and
jno
cmp
jecxz
rorb
sbb
les
aaa
cmp
jg
iret
mov
mov
or
jae
jmp
sarb
ss
or
mov
sbb
xchg
test
or
sti
and
fdivl
and
dec
xlat
roll
or
enter
xor
mov
insl
out
daa
dec
aad
std
clc
mov
hlt
hlt
pop
sbbl
or
fcomi
and
fildl
dec
cld
in
jp
jmp
lods
bound
loop
imul
test
push
sbb
roll
jb
xor
pop
ret
and
jmp
lods
into
mov
cli
mov
fbld
or
mov
lods
fwait
shrb
pop
loope
adc
in
imul
shlb
pop
xchg
loope
inc
sahf
adc
aas
push
cmpsb
pushf
adc
ja
in
add
scas
jecxz
jne
and
sub
xor
loopnew
dec
loopne
notb
inc
add
mov
dec
lcall
sbbb
mov
in
push
xchg
call
sbb
adcl
in
sbb
xor
ret
pop
ret
sbb
testb
xor
mov
int3
insb
xchg
stc
test
adc
sub
ret
insl
call
xchg
add
and
jne
dec
push
cmp
sub
mov
sub
jnp
aas
int
sub
sub
cmp
xlat
enter
cmp
mov
adc
and
jno
fsubrp
sub
scas
mov
mov
fcomps
dec
jne
pop
fstps
cmp
pop
dec
arpl
popa
fistps
movsl
insb
pusha
adc
xor
dec
jae
repnz
lcall
imul
imul
ret
insl
fs
dec
sub
sub
jns
ja
cmp
jae
or
shrb
movsl
imul
imulb
aas
lea
xor
mov
inc
in
adc
xchg
jmp
and
lods
bound
inc
xor
es
movsl
mov
frstor
mov
popa
jge
movsl
jne
sbb
xor
mov
push
pop
and
mov
nop
stc
push
cs
cmp
xor
test
pop
aad
in
pop
add
pop
addb
pop
std
jg
jo
fisttps
dec
dec
jge
out
jo
sbb
cmp
ficompl
out
les
mov
lds
rcl
test
jmp
push
pushf
into
xchg
or
sub
cmp
inc
jnp
or
andl
out
cmpsb
sbb
dec
push
inc
add
sbb
mov
adc
or
lock
xor
xor
push
loope
xchg
add
jle
mov
dec
stos
fldcw
mov
bswap
inc
xchg
jo
out
dec
jbe
push
cltd
mov
mov
sub
loop
ljmp
cmp
mov
push
xchg
add
xor
and
movsb
mov
pop
ljmp
jl
pop
es
mov
and
pop
mov
xchg
pop
out
sahf
mov
jp
inc
xchg
fs
mov
mov
mov
pushf
cmp
icebp
je
fwait
sbb
sbb
push
aam
scas
push
cmp
iret
cmp
jae
leave
cltd
fisttps
sbb
sbb
out
repnz
repnz
loope
dec
mov
ja
bound
dec
cmp
xchg
movsl
sub
loope
mov
rorb
pop
out
aas
cmc
and
out
mov
lods
inc
cmpsl
jo
stc
out
es
jge
repnz
inc
in
ja
xchg
push
or
rcl
cmp
sahf
push
or
dec
dec
scas
push
iret
sarb
mov
jmp
cltd
je
adc
dec
aam
jmp
fstpl
push
mov
lods
int3
mov
mov
mov
cmp
cltd
push
mov
loope
mov
aam
int3
and
test
das
out
int
adc
data16
xchg
mov
imulb
jae
jns
shll
mov
out
adc
cmpneqps
cmc
fildl
rcl
adc
adc
xchg
aad
or
insb
pop
outsl
mov
adc
in
pop
push
out
cmp
add
adc
sub
pop
sub
mov
movl
out
into
out
test
pushf
aad
sub
xor
add
mov
push
mov
ds
ret
cmp
pop
mov
and
add
push
push
pop
cmpsb
or
jmp
xor
sahf
call
jns
nop
outsb
inc
pusha
sub
mov
dec
loope
cmp
add
jb
rcll
jl
jle
aas
mov
pop
dec
ljmp
ljmp
cwtl
scas
or
bound
fildl
xchg
lret
dec
push
test
insl
inc
push
mov
pop
xor
lods
int3
add
aad
add
in
sub
int3
xchg
mov
leave
neg
into
mov
ret
in
repz
pop
inc
mov
or
xor
lock
cmp
cmc
xchg
jne
in
mov
mov
add
push
mov
sti
push
jae
aad
subl
insl
xchg
adc
je
lahf
pop
insl
xor
mov
test
outsl
subb
add
popf
aad
mov
lahf
dec
aad
mov
adc
fisubs
jb
in
lock
xchg
or
mov
xchg
lcall
xor
ret
xor
ds
in
cmp
outsl
cmpsl
addl
test
jbe
lds
lea
fwait
das
popa
ret
mov
mov
cmp
pop
cmp
sub
mov
out
jge
xchg
push
incb
inc
inc
stos
fidivrl
inc
lret
pop
shr
xorl
inc
jg
lret
into
pop
in
sahf
xchg
xchg
arpl
fisttps
orl
mov
cmp
nop
leave
jns
movsb
pop
lret
sub
je
xchg
lods
dec
outsl
aam
daa
push
lcall
in
out
sub
xchg
and
xor
dec
loope
ja
sub
je
rep
popf
gs
fildll
xor
adc
ds
sbb
mov
lds
pop
xor
mov
jecxz
inc
mov
cs
sti
xchg
aas
jb
pushf
sub
xchg
dec
mov
xor
xor
mov
lods
insl
pop
pop
mov
mov
js
sub
clc
mov
or
add
xchg
pop
jle
stos
clc
mov
jecxz
pop
scas
sti
addl
xlat
adc
inc
mov
push
and
xor
cmpb
and
ret
push
loope
les
lods
stc
cltd
scas
fidivrl
jns
fstl
push
xor
sbb
and
jno
sub
mov
and
xchg
sbb
inc
fnstsw
enter
lret
fidivrl
leave
mov
jmp
push
and
or
mov
xchg
lock
ja
enter
or
add
push
pop
mov
xchg
fwait
adc
mov
jg
mov
sub
leave
pop
imul
pop
in
lea
pushf
in
inc
xchg
mov
ret
mov
mov
dec
out
mov
roll
addl
jno
xor
sti
je
sub
stos
cltd
push
shlb
lcall
testl
inc
and
scas
xor
push
cltd
out
fdivr
adc
jno
rcl
mov
cmp
lock
push
fdiv
mov
ja
push
das
test
inc
jp
sub
leave
inc
and
stc
lret
sbb
xor
push
lock
dec
jmp
dec
pop
popa
and
push
or
inc
pusha
frstor
sub
sub
fs
lods
inc
mov
push
aas
add
jae
outsb
mov
and
pop
dec
xor
movsl
push
cmpsb
adc
mov
xchg
das
push
pop
stos
clc
xor
mov
jnp
es
or
sti
or
sbb
test
fsubrs
cmpsl
and
jae
inc
mov
inc
jl
lret
mov
out
and
mov
cmp
lcall
bound
push
int
push
cmp
adc
mov
and
jno
push
addr16
xor
incb
inc
cmp
pop
fwait
pop
dec
mov
add
popa
and
xchg
and
in
xor
rclb
push
dec
add
mov
cwtl
xor
pop
xchg
mov
std
gs
lret
pop
cmp
rcll
push
jb
sbb
movsl
call
push
addr16
jl
imul
mov
xchg
xchg
lock
fildll
or
cmp
cmc
mov
pop
and
decl
dec
pushf
ljmp
xor
add
daa
movsb
fcmovu
call
nop
loop
ss
in
sbb
loop
fstpt
in
add
mov
je
add
sahf
mov
imul
mov
sbb
cmp
or
mov
mov
je
stos
sbb
push
enter
out
and
pop
jl
dec
xor
popf
in
push
xor
movsl
mov
je
cmp
pop
orb
shrb
push
movb
sar
xchg
fsubp
and
push
out
hlt
clc
mov
aam
sbb
rcrb
stos
and
cmc
push
ret
mov
dec
int
pushf
sbb
jns
jno
sbb
push
outsb
pop
xor
addb
lds
dec
rorl
shll
inc
jle
mov
popf
je
popa
cmp
add
and
jecxz
bound
pop
cmp
lods
push
and
sbb
dec
repz
repz
xor
cmp
add
fcmovnu
fadd
xor
clc
mov
clc
add
and
xchg
cwtl
in
jle
icebp
int3
lcall
pushf
fidivrs
repz
ss
rcl
lock
mov
lods
push
push
xchg
idiv
sti
insl
aam
sar
daa
sbb
lea
add
aas
xchg
mov
imul
rolb
out
or
push
outsb
imul
in
lea
xchg
cmp
inc
mov
adc
jmp
cmp
rolb
pop
inc
in
pop
mov
push
or
filds
cmp
cmpsl
pop
bound
inc
jns
adc
movsl
sub
out
sarb
lock
stos
repz
out
inc
push
xchg
add
add
jo
xlat
fdivr
aas
adc
jle
cmp
dec
test
sub
les
jbe
and
mov
or
add
mov
movsb
or
int3
pop
mov
dec
jle
jns
es
jg
jmp
int3
test
push
jno
addl
or
cli
out
jmp
lret
shlb
pusha
jnp
pop
lods
adc
shll
inc
mov
in
ficoms
sbb
adc
gs
mov
pushf
ror
and
test
jne
imul
ljmp
and
fucomi
mov
ror
add
imul
xor
xchg
inc
popf
and
xchg
jmp
sbb
adc
xor
and
xchg
repnz
repz
xchg
pop
repnz
pop
inc
sub
pop
sar
jle
pop
daa
push
mov
add
mov
pop
jns
popa
xchg
push
es
push
stos
mov
fwait
stc
sbb
mov
mov
retw
insb
mov
mov
stos
sub
xchg
inc
mov
add
mov
sub
cmpl
dec
or
xchg
ror
loope
mov
cmp
and
cwtl
push
popa
ret
add
inc
cwtl
leave
xchg
sahf
adc
cmp
adc
testb
add
mov
test
mov
fwait
daa
xchg
mov
bnd
or
sbb
adc
xor
adc
mov
xchg
scas
mov
mov
pop
add
ds
loop
or
or
ret
lods
jne
adc
push
nop
xor
arpl
sarl
xchg
mov
inc
cmp
xor
push
lahf
and
movsl
mov
xchg
push
inc
lret
in
inc
shll
sahf
inc
insb
mov
ret
test
inc
add
adc
stc
sahf
fcoml
pop
or
in
insb
fdivs
lret
or
push
mov
aas
xor
sbb
movsl
es
fs
push
pop
ret
dec
add
push
sbb
xchg
int
or
dec
stos
push
cmpsb
add
loopne
mov
enter
mov
pop
mov
jle
js
inc
ss
sti
or
inc
movsb
rcrl
and
das
scas
js
and
mov
inc
adc
lods
fcomps
test
fstp
fs
lea
data16
jb
popa
js
or
jb
inc
subb
daa
mov
fcomps
loop
inc
lret
cs
insb
push
mov
cmp
fiadds
push
xchg
adc
movl
sbb
fsubl
pop
sub
xor
sub
jecxz
icebp
out
into
mov
pusha
je
lcall
cmpsl
rorl
ret
jnp
scas
cmp
pop
jmp
scas
xor
in
cs
push
inc
adc
inc
js
mov
mov
mov
fmull
inc
xor
ret
xchg
or
jg
cld
cltd
push
dec
xor
jnp
mov
xlat
lahf
jg
add
rcrb
std
mov
scas
mov
les
sbb
pushf
or
nop
mov
pop
sbb
or
push
sarl
imul
ja
popa
dec
adc
stos
lods
inc
sub
inc
mov
out
enter
loope
stc
bound
xor
fdivl
rolb
aam
ds
shlb
out
pop
aam
fmuls
mov
inc
jne
push
jnp
adc
push
cmp
push
xor
repz
popf
loope
enter
loopne
scas
xchg
jbe
and
cld
jge
enter
mov
mov
xlat
mov
cmpsb
addb
mov
add
pop
and
push
and
xchg
pop
in
insl
out
xor
xor
pop
and
and
sbb
cmp
dec
cmp
add
jo
xor
in
in
mov
lret
or
in
jo
fisubrl
mov
inc
mov
adc
imul
xor
ror
xchg
in
push
and
jp
mov
inc
cmpsb
mov
jmp
and
aad
stos
inc
clc
mov
and
std
std
xchg
shlb
jecxz
jae
lcall
aas
inc
jno
push
xor
pusha
or
sbb
cld
dec
lods
repz
imul
mov
adc
scas
andb
in
js
cmp
call
aam
adcb
test
ss
cld
pop
stos
mov
outsl
das
mov
sahf
outsb
push
inc
lods
pop
xchg
fcoml
push
jmp
ljmp
jae
call
rcrl
pop
inc
enter
mov
and
inc
jg
xor
jnp
mov
stmxcsr
aam
popa
inc
mov
test
ret
cmp
les
and
adc
imul
ja
sbb
lock
push
fmuls
adc
inc
std
sub
mov
xor
in
xchg
out
std
xchg
sbb
inc
mov
loope
adc
and
movsb
daa
push
cmp
mov
iret
ds
inc
sbb
xor
cmp
add
rorb
jle
jg
lahf
and
mov
fcom
xchg
ja
cld
pop
jecxz
mov
mov
push
pop
daa
fildll
sub
outsb
xor
cmp
pop
addr16
cli
scas
cmp
mov
push
dec
call
pop
pop
jmp
add
scas
push
rcrb
mov
sbb
das
loop
inc
call
imul
out
lret
mov
test
push
mov
aad
push
std
mov
mov
jmp
in
pop
sbb
nop
cmpsb
sbb
sbb
mov
into
mov
rcll
xchg
mov
or
xor
xchg
loop
js
mov
sbb
scas
jmp
xchg
aas
mov
lods
orb
mov
aad
fisubl
int3
mov
sbb
xor
popf
jae
inc
repnz
hlt
and
xor
sub
add
jl
icebp
popa
or
or
add
pop
mov
xchg
std
subb
mov
mov
dec
les
mov
push
sub
dec
test
pop
outsl
stos
into
add
sub
pushf
negl
xor
push
sub
test
daa
and
clc
pop
dec
ss
js
or
cmp
int
jecxz
xchg
xchg
xlat
mov
inc
xchg
adc
mov
jbe
test
sub
mov
add
jne
mov
adc
xlat
nop
push
repz
mov
cltd
orl
mov
mov
jbe
clc
sbb
clc
sub
stos
add
fwait
lahf
fstpt
add
push
xchg
sbb
push
test
lahf
jg
imul
stos
ja
rorl
cld
xor
es
xchg
push
das
arpl
jns
jmp
xchg
popa
mov
pop
pop
dec
or
arpl
sub
out
sub
mov
push
shlb
insl
hlt
or
aam
jle
dec
add
lods
in
test
jo
or
cwtl
mov
xchg
pusha
xchg
mov
ss
clc
les
lahf
sbb
arpl
or
shrl
imul
or
ficoms
out
fucom
push
jle
mov
repz
cmp
and
pop
jae
xchg
add
mov
inc
adc
pop
mov
cwtl
xlat
gs
js
xor
fbstp
pop
ljmp
test
sub
scas
pop
sbb
movsl
lahf
and
add
inc
cs
mov
out
ljmp
fs
sub
jmp
dec
adc
or
test
cli
jo
sbb
add
pop
mov
mov
lods
in
outsl
outsl
mov
subb
sub
fprem1
cld
jo
push
and
xlat
pop
jle
and
data16
stos
cmp
in
pop
xchg
inc
sbb
les
mov
pop
cmp
popa
mov
movzbl
sbb
dec
loope
mov
mov
pop
jno
scas
mov
adc
sub
mov
jne
adc
mov
xor
lods
push
push
mov
dec
out
mov
add
mov
push
push
push
xor
and
push
scas
nop
inc
xor
xor
xchg
add
dec
jbe
pushf
mov
lret
arpl
mov
lods
fcom
mov
or
jmp
inc
orb
cmp
dec
push
sbb
sahf
jo
mov
jle
xchg
aas
add
or
out
test
clc
sub
aaa
pop
cltd
xor
addb
sbb
popf
andb
xchg
call
xchg
scas
and
and
addr16
xchg
sbb
or
fwait
pop
inc
xorl
cmp
ljmp
xchg
out
iret
xor
mov
jmp
and
push
sub
ss
mov
jo
ja
roll
xlat
push
shrb
cmp
xchg
jns
dec
sarb
in
daa
cmp
cwtl
or
iret
mov
addl
xchg
and
mov
fwait
test
stos
fcomps
loopne
ljmp
out
in
jmp
sarl
mov
mov
or
pushf
pop
lock
cld
inc
insb
and
xchg
adc
mov
mov
mov
stos
ror
icebp
mov
xchg
es
and
sahf
xor
ds
das
and
in
imul
push
data16
pop
or
dec
mov
and
ds
lret
shlb
shll
sbb
fldenv
xchg
push
jmp
jnp
inc
test
jle
mov
lret
and
mov
and
test
jne
movsb
les
push
ljmp
fstpl
call
push
or
dec
cltd
xchg
jp
cmp
pop
sbb
mov
sti
cli
push
inc
sahf
or
dec
cmp
push
out
fidivrs
jb
pop
es
jae
js
into
cmp
cli
loop
dec
loope
loope
in
fnsave
insl
fildl
lret
inc
out
out
and
jnp
or
dec
sub
push
add
dec
inc
test
mov
in
and
jecxz
in
repnz
test
fistpll
cwtl
pop
lock
xchg
rorb
movsb
push
repz
popa
inc
out
cltd
add
cwtl
xchg
cld
and
and
imul
push
pop
mov
pop
pop
add
inc
xchg
pop
push
adc
push
imul
pop
or
inc
mov
adc
xor
pop
jmp
xor
es
popf
push
daa
pop
pop
push
sbb
xchg
mov
cmp
cmp
sub
mov
mov
stos
jle
dec
push
mov
pop
mov
ss
rolb
pop
cmp
pop
outsb
pop
stos
sub
cmp
xchg
or
ret
pop
cmpsb
push
testl
cltd
mov
shll
push
scas
fcmovne
adc
jp
mov
aaa
mov
pop
mov
test
jnp
loope
push
mov
rol
int
ljmp
scas
dec
dec
sbb
outsl
mov
loope
dec
xor
scas
jge
jno
push
push
leave
mov
push
mov
jb
cli
xor
ret
leave
je
mov
hlt
inc
rclb
adc
cmp
ja
mov
push
xor
pusha
dec
push
adc
jae
cs
push
lahf
push
push
jp
xchg
push
push
out
inc
popf
cmp
jle
xlat
push
push
sbbb
loop
in
cmp
in
lock
fs
xor
sti
fbld
lcall
mov
mov
xchg
jnp
inc
jle
ja
mov
add
and
loope
add
push
pop
xor
add
mov
sbb
es
popa
mov
dec
arpl
mov
mov
pusha
pop
mov
incb
jbe
cmp
adc
pop
xchg
inc
iret
jg
sahf
mov
and
adc
xchg
movsl
cmp
mov
int
int
aas
cmc
dec
dec
sub
jno
xor
mov
jecxz
scas
sbb
mov
dec
test
adc
pop
outsb
ja
ljmp
repnz
jecxz
sub
lret
icebp
add
cmp
or
leave
in
add
int3
mov
add
fldt
lods
fs
adc
dec
sbb
std
movsl
idivl
inc
push
test
std
mov
sbb
aam
pop
pop
inc
lea
bound
ret
lea
dec
mov
mov
loopne
add
imul
in
push
mov
in
jnp
fsubrp
sar
sbb
nop
xchg
sub
push
pop
or
fs
push
push
leave
iret
icebp
xchg
cmp
mov
xchg
pop
mov
fwait
mov
sbb
cmp
cmc
popf
push
pop
or
sbb
frndint
fimull
test
leave
pop
mov
lahf
mov
hlt
cmp
xor
call
mov
mov
sub
adc
repnz
xor
mov
pop
mov
mov
mov
cmp
sub
test
inc
dec
or
fbstp
dec
outsl
jge
pop
cwtl
loopne
stos
repnz
dec
and
cmp
xchg
xor
insl
fcmovbe
xchg
aad
mov
cmpsb
jne
cmp
inc
or
mov
dec
lret
sbb
movsl
jl
push
xlat
cwtl
in
pushf
test
xchg
pop
mov
cmp
cmc
adc
aam
ret
fsubrp
sbb
rclb
xor
xchg
fs
hlt
inc
sbb
adc
and
xor
stos
test
shlb
out
cmpsl
jl
loop
mov
cli
or
xchg
sbb
out
movsl
stos
dec
xor
pop
ljmp
sbbl
int3
clc
js
sarb
dec
ja
and
pop
daa
push
inc
stc
jae
call
mov
das
sbb
mov
rorb
ljmp
dec
dec
outsl
add
push
addb
mov
test
pop
sub
xchg
push
sub
dec
xchg
cmp
xchg
jno
pop
mov
jo
inc
mov
lds
xchg
sti
and
adc
mov
xchg
xchg
adc
push
movsb
mov
sub
inc
dec
jbe
dec
mov
fdivp
push
rorb
xchg
pop
notb
test
xor
mov
mov
push
cld
aad
rcr
addr16
mov
mov
jo
pop
xor
adc
mov
add
and
repnz
js
cld
adc
in
xorl
jae
pop
nop
ret
mov
shlb
loopne
out
or
jb
in
add
jb
or
dec
mov
push
dec
mov
mov
outsl
push
test
pop
test
mov
cmpsb
mov
insl
popa
mov
je
inc
xchg
pop
fdivl
ljmp
mov
in
push
push
aam
inc
pop
mov
push
inc
mov
add
xchg
call
je
popf
and
sbb
std
add
inc
loop
xchg
stos
stos
xor
int3
sub
and
in
repnz
lods
les
mov
push
sbb
jbe
cmp
sbb
movsb
and
in
push
fistl
xchg
mov
cmovno
jo
push
lods
dec
mov
orl
push
loop
dec
mov
xchg
xchg
or
sub
or
out
jg
mov
test
sub
nop
loop
pop
pop
mov
sahf
push
push
outsb
dec
into
and
xor
int
mov
cld
jo
std
aaa
ljmp
mov
jae
outsb
mov
and
sbb
lods
push
mov
jecxz
dec
jnp
bound
out
jne
or
sbb
pop
loop
pop
data16
sub
addb
sub
sub
stos
insl
xorb
mov
mov
adc
jle
dec
punpcklbw
lods
mov
rcll
inc
lods
inc
lcall
xchg
sbb
std
jg
xchg
popf
fstpt
cmp
pop
imul
ljmp
pop
int
cmp
pop
mov
mov
or
and
mov
mov
xor
in
pop
ljmp
bound
repz
cwtl
dec
sub
std
sbb
fstl
aas
testl
cmpsl
jmp
and
push
movl
mov
movsb
jg
out
ret
mov
pop
sub
sub
aam
aaa
cmp
cmc
loope
adc
xchg
cmpsb
jno
jmp
push
mov
decb
adc
loop
push
psrad
scas
add
jb
jae
dec
cltd
jne
mov
hlt
shlb
inc
mov
ss
sub
and
stos
push
inc
pop
fstp
leave
shl
and
inc
jb
pop
cmp
xchg
mov
inc
dec
and
ss
dec
sbb
mov
sub
in
pop
mov
jmp
pop
xchg
aad
lcall
cmp
adc
mov
xchg
in
mov
fbld
sar
scas
mov
adc
loope
mov
pop
fnstenv
rorb
inc
mov
dec
cs
pop
jbe
pop
jmp
mov
notl
lods
mov
dec
dec
popf
imul
lret
loope
push
adc
adc
jecxz
bound
add
mov
test
mov
pusha
inc
fnsaves
lods
out
sub
fs
jnp
jns
test
xor
outsb
pop
pop
rorb
add
or
insl
dec
imul
add
nop
cmp
insb
xlat
aaa
mov
inc
adc
mov
cmp
out
std
das
xchg
iret
xor
inc
xchg
and
inc
stos
inc
dec
adcl
cmp
mov
mov
fsubrl
xor
out
xor
aas
push
pop
sub
push
push
pop
sbb
cmp
xchg
sahf
xchg
fimuls
mov
setno
cmpl
cmp
mov
xchg
xor
inc
fwait
test
test
std
popf
aas
fldt
stos
clc
mov
add
push
lret
icebp
out
push
movl
scas
inc
adc
push
xlat
jns
and
jle
add
sbb
out
xor
and
iret
lock
xor
push
add
jae
mov
cwtl
or
sti
imul
movsl
icebp
mov
mov
lcall
pushf
adc
jnp
test
aas
fmull
leave
cmp
mov
loopne
mov
adc
insb
cmc
sbb
mov
dec
mov
mov
pop
cmp
pop
inc
mov
shl
cmp
stos
adc
jmp
test
sbb
pop
inc
leave
and
test
xor
push
in
xchg
xchg
stc
inc
push
mov
and
jbe
cld
bound
xchg
and
mov
sbb
push
data16
pop
cmpsl
jno
cmp
sbb
outsb
cwtl
sub
addb
cld
and
xchg
mov
popf
sub
mov
jo
adc
sarb
mov
sub
aam
pop
push
cld
pop
sbb
fwait
adc
test
stos
pop
je
mul
push
jmp
push
lock
bound
pop
je
xchg
xor
cmpsb
movsl
gs
push
das
xchg
pop
jg
insb
addb
fs
xchg
and
aaa
aam
scas
popl
cwtl
pop
xchg
xchg
outsl
cmp
mov
sbb
pop
xchg
xor
lret
fwait
xchg
xchg
js
xchg
out
jne
popf
out
scas
arpl
xchg
jge
dec
insb
dec
pop
mov
xor
sarb
adc
rcrb
dec
jbe
push
pushf
add
or
loope
xchg
movsl
movsb
repz
nop
addr16
sbb
dec
add
fistps
test
ss
xchg
pop
xchg
cmp
inc
sbb
pushf
or
icebp
mov
or
mov
pop
mov
xchg
jo
mov
mov
scas
pop
mov
dec
or
mov
rorl
dec
arpl
int
stos
fisubrs
fistl
jmp
out
mov
mov
xchg
mov
mov
mov
pop
test
sub
pop
or
xchg
sarl
call
mov
inc
jns
iret
and
xor
cmpsl
fdivrl
loop
mov
mov
aam
xchg
out
jmp
fisttps
imul
and
orl
sar
fldcw
pop
and
mov
repz
es
mov
xor
shlb
mov
mov
and
cltd
or
fwait
push
icebp
jnp
mov
mov
jmp
mov
dec
stos
dec
cmpsl
call
mov
pop
xchg
pop
pushf
push
sarl
cmc
fisubrs
pop
jmp
fadd
gs
aam
fldenv
test
xchg
jnp
movsl
sub
faddl
leave
sbb
push
les
jmp
je
inc
rolb
inc
dec
mov
lea
insb
xchg
mov
jle
int
fwait
aad
lahf
push
stos
mov
lods
add
pop
fmulp
arpl
std
push
push
in
or
xlat
jg
sti
xor
js
jmp
shrl
sbb
jg
sbb
movsb
push
xor
xchg
test
pop
gs
ds
les
and
inc
and
push
fbld
xor
lahf
xchg
subl
jp
cmp
xor
repnz
lea
mov
popf
jne
sub
cmp
mov
pusha
cmpl
in
jg
sub
rorl
push
repnz
xor
test
push
and
mov
mov
ljmp
sahf
xor
mov
push
cmp
pop
loopne
xor
mov
mov
xchg
fsubrl
dec
mov
or
mov
mov
mov
pop
bound
pop
mov
inc
test
mov
cmp
and
pop
or
push
sbb
out
cmpsl
cmp
dec
push
jb
add
orb
sub
mov
popf
in
mov
jmp
inc
mov
cmp
rorb
push
lock
or
dec
out
jg
fs
dec
push
fists
outsb
mov
lock
sahf
xor
add
daa
add
aad
dec
ja
mov
pop
nop
xchg
mov
jne
xchg
je
xor
stos
push
loopne
dec
daa
pop
aam
icebp
mov
jg
mov
sbb
xlat
in
outsb
sub
sub
testb
xlat
and
mov
mov
cwtl
outsl
cmpsb
xor
sbb
push
rclb
pop
jne
push
xchg
cwtl
pop
and
jb
sub
ja
pop
out
xlat
inc
inc
or
icebp
rclb
mov
mov
call
in
mov
xor
stc
out
scas
pop
mov
in
rcrb
test
inc
insl
sub
vmovhps
aad
xchg
adc
daa
cmp
fstl
mov
and
xor
lods
mov
mov
shl
mov
xchg
mov
add
fs
testb
mov
idiv
out
insb
push
fidivs
xor
insb
mov
push
stos
or
sti
lea
movsb
scas
xchg
pop
and
cld
mov
pop
adc
xlat
orb
adc
or
push
xchg
ja
pop
inc
repnz
in
outsl
aad
js
pushf
adcl
leave
imul
push
pushf
pusha
arpl
sbb
xlat
lock
pshufw
dec
ljmp
faddl
in
dec
lods
in
scas
xchg
lods
filds
cmp
push
test
pusha
or
ds
jmp
add
jb
sub
push
mov
cli
lahf
push
mov
sbb
dec
test
add
lds
push
popf
xchg
mov
sbb
adc
into
fwait
iret
lret
imul
data16
sub
test
jl
call
or
inc
and
dec
mov
push
cmpsl
pop
call
fnstenv
xchg
icebp
jl
fstpl
hlt
and
nop
fsubp
test
aad
notb
and
jne
in
test
and
sbb
into
imul
fwait
add
pop
dec
lods
pushf
cmc
ret
int
mov
stc
fsubl
orl
fwait
xchg
add
sbb
xor
fimuls
mov
lds
daa
sbb
sbb
mov
addr16
push
xor
cmp
xor
scas
jmp
fists
and
push
andl
jnp
add
jmp
dec
and
mov
aad
ret
cmc
dec
addb
enter
xchg
push
ljmp
cmp
lret
push
ds
ss
dec
pop
outsb
cmp
or
mov
outsb
gs
mov
fsubs
nop
and
sub
adc
push
daa
mov
pop
mov
or
mov
out
pop
hlt
lds
addr16
loopne
push
cmp
shlb
int
test
pop
movsb
inc
repz
loop
cmc
xor
or
fcmovnb
lea
inc
loope
bnd
imul
sbb
dec
arpl
movsb
inc
ret
jnp
pusha
push
add
and
lcall
lods
push
jecxz
imul
cli
outsl
dec
mov
dec
es
jg
stos
inc
fstl
or
mov
xlat
cmp
mov
je
dec
xchg
mov
pop
and
xor
dec
xchg
lds
paddusb
lahf
std
or
push
js
cmp
cs
sbb
mov
cli
pusha
add
dec
scas
ja
jle
aam
xchg
push
gs
xor
pop
stos
fdivrp
xor
or
aam
mov
add
sbb
cmp
out
add
or
xchg
sbb
outsl
std
es
cld
and
push
mov
enter
icebp
adc
xchg
sti
out
pop
cld
lods
pop
mov
adc
hlt
cmpsb
outsb
addr16
int3
ljmp
mov
sub
inc
cmp
imull
inc
xor
arpl
mov
pop
and
loopne
jle
das
sub
pop
popa
aam
pop
sbbb
mov
into
xchg
push
dec
dec
mov
cld
xor
xchg
inc
hlt
rcrl
sbb
mov
dec
jo
cmp
clc
cwtl
stos
shll
jp
ss
push
pop
xlat
pusha
fidivl
mov
pop
push
pushf
popa
push
cmpsb
push
xor
in
ss
add
pop
and
outsb
fdivl
int3
cli
test
dec
sub
mov
jecxz
icebp
popf
ficomps
pusha
xchg
mov
mov
mov
arpl
xchg
fimull
aad
dec
cli
mov
mov
imul
mov
clc
aas
data16
sub
gs
ss
xchg
daa
stc
imul
scas
dec
dec
stos
icebp
les
jno
jo
push
mov
dec
xor
cmp
and
fwait
mov
jns
sbb
dec
leave
cmp
mov
aad
mov
pop
dec
lds
lock
mov
mov
push
sbb
mov
xor
dec
movsl
outsl
hlt
mov
lock
and
in
and
push
jge
jbe
inc
jnp
das
mov
and
shl
push
dec
or
pop
aad
mov
dec
jl
xlat
jbe
rcll
xor
addr16
sbb
add
mov
xor
ret
mov
sbb
mov
inc
pop
jb
cld
icebp
pushf
mov
inc
sub
mov
sub
insl
cli
mov
inc
cld
pop
sbb
std
dec
movsl
fwait
imul
hlt
dec
ljmp
rorb
cmp
jecxz
ja
add
ss
sbb
jle
fiaddl
xor
orl
cmpsb
ret
or
jp
mov
test
push
mov
jmp
clc
cmpsl
aas
add
dec
dec
loop
jne
xchg
push
jmp
hlt
shlb
cmpsl
sbb
inc
rorl
stc
aas
inc
dec
pop
call
add
mov
and
mov
jns
dec
fnsave
cs
or
jmp
cli
add
pop
pop
fs
test
mov
icebp
roll
mov
ja
cld
mov
mov
in
cmp
dec
cmp
and
cmpb
xor
js
fadd
adc
inc
xchg
scas
sub
jg
outsl
sti
sahf
and
movsl
in
jne
cmpl
dec
jno
js
push
cmp
jmp
and
in
or
push
adc
or
push
iret
push
and
push
dec
lods
cmp
jnp
adc
lods
arpl
cwtl
sarl
xchg
mov
lods
mov
aas
out
add
jo
inc
and
or
push
mov
rorl
rcrb
adc
ss
into
clc
adc
sti
scas
jge
xor
and
lods
cmp
fdivrl
jne
push
lods
sub
adc
gs
mov
xchg
jle
clc
adc
push
pop
imulb
add
sub
jle
dec
cli
xor
push
daa
jp
add
mov
adc
mov
out
push
sbbl
add
outsl
stc
pop
jbe
pop
test
xchg
movsl
jp
icebp
lods
out
ds
xchg
push
std
je
flds
push
divb
jg
jo
xchg
pop
in
outsb
dec
add
and
pop
sbb
jl
jge
fidivl
pop
or
and
lock
xor
in
xchg
aas
pushf
xchg
add
sbb
pop
jnp
jl
ret
push
das
inc
mov
inc
cld
orl
xor
clc
cmpsb
loop
jle
jbe
popf
ret
fcmovb
xlat
sarb
mov
in
jle
and
out
insb
xchg
cmp
mov
int
sti
and
push
mov
adc
outsl
sub
mov
or
mov
and
mov
cld
add
popf
xor
lea
fbld
mov
test
lods
mov
push
cmp
lahf
shrl
or
mov
or
pop
lods
jecxz
loop
dec
mov
loopne
fs
inc
add
test
test
xor
lds
mov
cmp
push
daa
push
test
jge
test
add
push
ss
bound
aas
or
lods
lods
je
adc
out
dec
jp
hlt
pop
push
sub
int
sarl
test
adc
outsb
or
call
aas
out
cwtl
cmp
and
sub
or
push
xchg
mov
pop
jmp
test
xchg
daa
cli
jne
adc
push
imul
mov
mov
shlb
push
sbb
in
hlt
fwait
and
xchg
xor
mov
dec
sbb
imul
loopne
jno
rcrb
lcall
fsubs
inc
inc
sub
lcall
jg
xor
and
idiv
outsb
inc
imul
fst
loope
sub
arpl
pusha
jbe
push
in
sbb
lret
xor
jg
int3
fimull
movsb
sbb
mov
mov
push
paddd
sbb
daa
stos
jl
adc
dec
js
lahf
cmp
and
xor
pop
pushf
or
cli
movsl
xor
jo
adc
sub
mov
ror
mov
jae
lret
cmp
fimull
dec
stc
sbb
std
push
rorb
push
les
xorl
sar
dec
mov
cmc
xor
push
mov
aam
mov
xchg
inc
adc
and
and
repz
jecxz
jle
je
mov
push
movsl
test
lea
hlt
inc
aaa
lods
ljmp
push
jns
les
dec
negl
ja
jmp
mov
and
popf
adc
lcall
fsubp
dec
xlat
movsb
mov
sub
push
out
shl
cmpsl
in
sarl
xchg
into
sbb
inc
sti
push
xlat
insb
jno
fsubl
rclb
dec
lret
mov
sahf
daa
sub
push
out
shr
mov
mov
mov
cmp
icebp
jnp
push
jmp
out
cmp
pop
mov
push
and
rorl
ss
ja
jbe
jbe
sub
xchg
negl
jge
cmc
jp
insl
inc
jg
xor
ja
cmp
fldenv
xor
sbb
or
jb
icebp
and
add
cld
es
hlt
in
pop
jecxz,pt
mov
fldcw
idivl
pushf
fcomps
sarb
lahf
out
cwtl
push
ret
leave
rorb
cmpsb
mov
fnstcw
lret
popa
or
xchg
push
aas
sub
sarb
push
adc
pop
stc
rcrb
cmc
or
rcl
mov
cld
or
mov
mov
stos
in
or
or
jmp
test
out
ja
inc
stos
jns
lea
add
fwait
add
mov
sub
xchg
sub
pop
add
cwtl
mov
out
pop
mov
ret
xor
adc
lods
add
dec
pushf
clc
stos
push
cwtl
lea
sbb
shlb
add
mov
loope
test
test
icebp
daa
ja
int3
enter
lock
mov
xor
sti
je
addr16
out
ss
test
pop
or
pop
push
lahf
fs
aaa
jb
adc
mov
push
jmp
inc
subl
sub
push
pop
jns
or
or
inc
cmpsb
mov
stos
fiadds
lea
add
inc
jbe
sub
cmp
std
and
stos
push
mov
lds
push
iret
xor
fiadds
mov
lds
add
inc
cmpb
loope
aas
dec
mov
sbb
call
popf
add
jbe
push
adc
in
inc
ret
sub
add
or
aad
add
push
pop
adc
cmpsl
add
push
pop
pusha
int
xchg
in
jg
in
or
xchg
gs
mov
cltd
mov
xchg
fstpt
push
pop
sub
mov
mov
into
int
pop
xor
dec
inc
js
inc
lret
pop
dec
jo
cltd
insl
sbb
sub
ret
int
popf
filds
in
divl
xchg
lcall
in
jbe
pop
push
pusha
test
inc
scas
sbb
out
stc
mov
inc
or
lret
push
lret
int
fistps
rcl
dec
stos
or
dec
mov
imul
sub
jecxz
jp
jg
fcmovnu
das
push
dec
push
mov
push
cmpsb
out
add
jg
int3
das
je
xor
scas
pop
imull
repnz
cmp
insb
sub
in
push
pop
je
push
adc
mov
das
dec
lods
divl
fcmovne
jo
push
adc
fmul
rorb
jl
push
rclb
mov
imul
ret
repnz
mov
in
or
sar
ret
pop
xchg
sbb
jge
xor
cmp
push
mov
push
loopne
sub
xchg
les
pop
fstpt
or
or
movb
lcall
gs
jge
mov
arpl
scas
stos
xor
cmp
sbb
xchg
loop
push
aas
int3
mov
orl
mov
js
sub
ret
mov
sti
jle
and
add
leave
ds
js
xchg
mov
std
dec
push
jne
repnz
lahf
jae
adc
jg
and
ficomps
mov
jno
dec
les
xor
sahf
mov
and
xchg
pop
jp
mov
cmp
pop
mov
inc
lcall
hlt
and
sahf
sub
xorl
gs
and
ja
and
popa
ret
addr16
push
scas
cmp
popl
dec
mov
jbe
sahf
xorb
sub
test
inc
mov
xchg
dec
xchg
mov
addr16
ds
push
imul
js
push
fsub
out
jg
cmp
push
mov
push
test
outsb
daa
mov
cli
jno
dec
push
in
xchg
cwtl
cmp
cmp
mov
sub
movsb
in
les
dec
sbb
push
aas
xor
imull
lods
icebp
adc
jp
scas
push
jnp
cmpsl
or
ss
jb
sbb
sbb
push
xchg
mov
cs
scas
enter
pop
mov
pop
das
dec
je
scas
test
mov
loope
sub
jno
sti
pop
sbbl
cmpl
push
mov
fs
dec
ret
or
insl
out
push
sub
mov
or
idiv
insb
ret
or
ficoml
fucomip
ret
repz
fsubrl
add
mov
and
pop
mov
addb
in
sbb
adc
xor
or
adc
es
pushf
cli
xchg
imul
mov
mov
sahf
sub
shr
inc
rclb
mov
jb
mov
adc
jp
mov
sbb
cmpsl
nop
dec
mov
ljmp
in
iret
outsl
shll
adc
push
imul
adc
insb
sahf
jo
cmp
jecxz
sub
divl
sbb
hlt
ret
bound
and
xor
shll
mov
in
mov
pop
cld
lret
scas
pop
adcl
andl
dec
cmp
add
pushf
or
popl
sahf
push
xchg
xchg
cmp
stc
adcb
gs
gs
in
push
loop
popa
dec
mov
cs
pop
daa
sbb
dec
fidivl
jbe
adc
inc
int3
pop
ss
movsb
lds
pop
or
sbb
in
pop
divb
dec
ds
jae
scas
or
in
push
std
sub
jns
aam
and
test
add
jmp
inc
mov
pminsw
rol
mov
push
stc
and
and
ljmp
or
dec
jg
aas
lds
in
and
dec
pop
push
xchg
pop
jg
add
mov
imul
ret
dec
sbb
rolb
sahf
mov
xchg
stos
inc
dec
popf
addl
nop
adc
push
out
pushf
push
neg
ret
dec
mov
fisubl
out
ret
call
test
dec
add
int3
nop
daa
xchg
icebp
scas
push
and
sub
sarl
xchg
mov
shrb
push
rcl
dec
xchg
cmpsl
or
in
add
sbb
push
jno
mov
push
and
push
arpl
jb
leave
aad
lcall
mov
sub
into
data16
mov
xor
xorb
push
mov
das
xor
lret
pop
fbld
dec
bound
scas
add
xchg
cld
jmp
call
and
pushf
fs
mov
add
loopne
rcr
sub
jb
jae
xor
push
fsubs
pushf
in
popa
shrb
pusha
js
sub
adc
xchg
mov
xor
jne
mov
push
into
imulb
addb
xorl
mov
mov
mov
add
mov
mov
ljmp
ret
mov
cmp
cmp
movsb
movsb
inc
and
rcr
insb
mov
pushl
mov
mov
repz
enter
rolb
test
dec
pop
inc
out
stc
cmpsl
pop
adc
addr16
ficomps
aas
leave
int3
sbb
xor
imul
popa
shlb
fnstsw
xchg
xchg
or
mov
push
je
adc
cmc
stos
loope
jecxz
jb
mov
stos
mov
dec
mov
call
mov
out
push
aam
mov
fs
sbb
out
aam
cmp
pop
repz
scas
mov
out
clc
lods
fcomps
insl
pop
or
xchg
push
jnp
jns
cs
rcll
jmp
test
sarb
xor
pop
adc
aam
pop
adc
xlat
test
sub
xchg
lret
lods
dec
cltd
mov
sub
stos
cmpsl
mov
xor
xchg
lahf
mov
push
adc
jo
jmp
xchg
out
mov
in
dec
dec
or
add
inc
sbb
pushf
ret
in
mov
outsb
fnstcw
cwtl
bound
outsb
lods
dec
daa
test
das
aad
sub
push
inc
xchg
pop
pop
mov
jne
sub
mov
and
dec
jo
jnp
insb
mov
ds
sub
pop
and
inc
mov
lahf
push
and
fmuls
daa
xchg
mov
cmpsl
add
nop
hlt
dec
mov
sub
call
adc
lcall
mov
in
pop
cmp
int3
ret
imul
scas
xchg
xor
cli
mov
or
and
dec
cwtl
xchg
insl
xchg
fldl
push
xchg
cmp
in
outsb
nop
aad
mov
fistpll
dec
dec
in
dec
out
dec
rcll
jge
stc
fsubs
and
xchg
cwtl
push
fwait
fs
sub
xchg
je
sbbl
out
nop
or
mov
mov
outsb
das
nop
pop
cltd
xchg
adc
pop
ret
sbb
int3
in
mov
je
push
das
call
or
fisubrl
push
pop
subps
scas
popf
scas
test
push
imul
sti
popf
cmp
xchg
inc
lods
dec
push
scas
ret
xchg
add
loope
pop
fbld
lret
movsb
movsl
cmpsl
leave
sub
push
pop
and
mov
sbb
and
pop
lea
jne
dec
mov
and
push
push
add
sub
arpl
sbbb
lds
js
adc
jb
sub
xchg
xchg
pop
cmp
sbb
push
mov
sahf
sar
call
mull
orb
popl
add
pop
push
int3
jbe
mov
loopne
mov
repnz
gs
pop
pmaxsw
push
sub
xor
test
nop
jmp
cwtl
aas
cmp
aad
jno
or
test
or
push
fiaddl
lea
ret
adc
jbe
mov
or
fidivs
stos
fwait
pxor
rclb
jl
and
pop
cmpl
sub
dec
stos
sub
lret
push
rclb
insb
dec
dec
dec
ret
std
shr
or
and
insl
push
movsl
adc
jge
adc
mov
fmul
les
lahf
jecxz
sub
int3
mov
lret
in
divl
idivb
push
jnp
cltd
sbb
sub
push
mov
sti
cmp
mov
addb
inc
stc
push
fistps
jae
lea
jecxz
pop
fbld
pop
pop
gs
test
pop
xchg
or
jae
iret
mov
sbb
pop
pop
add
xchg
repz
cmp
in
push
xchg
testl
mov
les
pop
and
mov
jne
cmpsb
jae
cmpps
call
jmp
inc
test
xchg
jae
and
xchg
nopl
adc
pop
popf
lock
xchg
incl
push
ret
xor
mov
push
outsl
movsb
lods
je
or
jo
push
out
inc
xchg
cmpsb
xchg
dec
mov
loope
cmpsb
rol
mov
mov
xchg
test
loop
das
scas
sub
jns
sbb
inc
ret
xchg
sbb
test
add
ficoms
mov
jle
xor
dec
test
mov
je
in
ficomps
jmp
pushf
mov
dec
sbb
popa
pop
add
inc
lret
fsubrl
xor
push
cmp
mov
add
lods
imul
ds
aaa
xchg
dec
aam
dec
xchg
jae
pminub
mov
cmpsl
inc
sub
lock
iret
pop
pop
mov
int3
or
fwait
sahf
cld
aad
faddl
scas
insb
sub
jno
inc
scas
std
lock
aam
or
jp
ss
cmpsb
int3
cmp
xchg
out
xchg
lahf
xlat
shlb
loope
push
pushf
orb
das
ret
mov
popa
out
iret
pop
jl
xor
adc
daa
xchg
xor
pop
sbb
pop
lea
push
je
sbb
mov
cmpsb
mov
xlat
adc
aaa
xlat
xchg
jmp
daa
push
enter
cltd
sbb
andl
ret
mov
sbb
push
push
xor
leave
mov
aaa
and
daa
sarl
jno
daa
outsb
xor
push
pushf
sbbl
stos
mov
or
cmpsl
fwait
pop
mov
dec
dec
icebp
xchg
sbbb
and
sbb
fisttps
gs
or
pop
stos
or
rclb
push
sub
scas
decl
in
ljmp
push
xchg
sbbb
cmp
pusha
es
repnz
imul
sbb
cwtl
adc
inc
mov
xchg
loopne
inc
outsb
pop
jg
jbe
cld
sbb
mov
int3
mov
push
repnz
mov
sub
pop
bound
pushf
mov
jle
jecxz
sbb
add
psubd
scas
in
mov
pop
out
push
test
pop
test
out
mov
jle
push
insl
xchg
hlt
pop
and
push
mov
or
loop
fadds
shl
or
sbb
out
jbe
scas
jns
inc
sub
test
cmpsb
hlt
xor
dec
and
sarb
push
mov
mov
call
and
dec
push
sub
sub
in
xchg
mov
bound
lds
jmp
mov
xor
add
pop
xlat
jnp
push
inc
add
out
adc
xchg
test
nop
xchg
sbb
ret
mov
pusha
mov
pop
or
sbb
mov
rol
scas
rcrl
fwait
mov
xchg
adc
mov
or
mov
imul
es
rcrl
xchg
in
mov
mov
js
sti
xor
jecxz
jle
in
dec
fucomp
inc
push
dec
xor
dec
test
cltd
ds
mov
jnp
aaa
lahf
subl
out
push
cli
push
jno
dec
sahf
hlt
fistpl
lahf
jg
aas
pop
sbb
pop
pop
stos
mov
push
ljmp
rcr
pusha
fsub
shrl
mov
xor
jg
push
pshufw
clc
aas
aad
inc
es
jns
dec
aad
mov
mov
xchg
icebp
rcll
lea
adc
xor
jno
int3
adc
push
scas
or
mov
and
aaa
sbb
sub
ficomps
mov
mov
jne
daa
test
data16
jae
ret
pop
sub
lock
push
ret
fisubrs
pop
push
fsubr
push
stos
arpl
dec
xchg
xchg
das
cs
cmp
pop
fstl
cltd
jle
push
xor
mov
inc
sbb
sbb
jmp
jp
fcoml
fisttpl
push
mov
loope
or
xor
sbb
je
dec
scas
xor
dec
out
cmp
dec
iret
push
or
and
or
fs
xor
mov
xchg
pusha
repz
or
addr16
mov
add
push
sbb
in
gs
cmp
fnstcw
xchg
push
sbb
mov
xchg
inc
daa
mov
mov
and
fwait
mov
hlt
cwtl
fidivl
dec
push
out
pop
mov
push
mov
jle
cmp
cmp
lahf
jle
sbb
cmp
icebp
push
jo
jecxz
and
cmp
push
mov
scas
ret
mov
or
test
lock
sbb
jo
push
cld
arpl
inc
je
dec
sbb
repz
lods
cmp
inc
repnz
mov
cld
pusha
popa
fadds
aas
ds
sub
sub
lcall
mov
mov
dec
pop
fistl
ja
lret
cwtl
out
sti
fxch
and
daa
adc
adcl
or
imul
push
movsb
ljmp
popa
sti
inc
and
inc
test
xor
fcmove
inc
and
mov
in
incl
xor
and
xchg
sbb
cmp
ss
int
push
push
adc
adc
xchg
repnz
adc
push
daa
test
mov
or
mov
sbb
xor
sbb
jno
std
sub
lahf
xchg
lods
add
hlt
mov
sub
addr16
sub
mov
xor
fisttpll
fsts
cmp
or
pop
jp
fsubrs
mov
stc
pop
pop
hlt
sub
cmp
jb
nop
xchg
or
push
mov
sbb
add
cmp
jno
sbb
xchg
insl
xchg
lods
shr
daa
cmp
imul
in
in
lret
push
and
inc
mov
push
cmpsl
push
xor
dec
ret
shlb
mov
pop
out
sahf
sbb
repnz
pop
dec
loopne
push
aam
in
fistl
ss
mov
jecxz
fmul
sti
add
adc
xor
ret
dec
int
mov
popl
jae
and
add
inc
sub
aam
out
push
sub
xchg
out
int3
xlat
pushf
push
jno
out
test
pop
gs
dec
mov
fimull
push
jbe
jb
inc
cltd
pop
pop
sub
pop
iret
test
and
flds
test
arpl
int
mov
inc
pop
sti
test
ret
repz
xor
mov
mov
sub
dec
ret
in
fldt
push
adc
lods
mov
in
adc
xchg
imul
mov
jle
int3
sti
dec
mov
xor
sub
xchg
outsl
cwtl
xchg
rcr
dec
rolb
cs
int
push
mov
cmp
or
ja
jle
les
insl
lods
cmp
dec
test
out
ret
stos
js
cs
or
push
fwait
outsl
call
inc
scas
test
aaa
loop
jb
xor
sbb
sub
shll
fidivl
test
data16
adc
jmp
daa
or
push
push
fldenv
mov
push
es
mov
pop
cmp
adc
ja
adc
fcoms
pusha
ficoml
adc
mov
jno
fdivr
jnp
cmp
jae
push
cmp
add
pushf
outsl
add
out
dec
mov
sub
enter
rol
out
mov
or
adc
xchg
or
or
jbe
repz
incb
and
pop
pop
add
test
mov
mov
imull
xchg
test
sbb
out
and
jl
cs
jae
bound
test
pop
fdiv
push
imul
mov
xlat
pop
jnp
mov
sbb
movsb
xchg
das
stos
mov
jle
mov
jnp
inc
loop
les
xchg
lret
scas
mov
xchg
pop
mov
inc
adc
xchg
sub
fucomp
fsubrs
inc
fisttps
icebp
jle
icebp
mov
jmp
pop
jns
xor
adc
notl
inc
mov
jo
jae
xchg
outsl
fdivrp
cwtl
mov
and
mov
aad
daa
push
push
fs
inc
inc
in
orl
scas
xchg
push
insb
push
sbb
insl
xchg
sub
xchg
adc
in
xorl
ljmp
pop
sbb
jne
lahf
pop
ficoml
xchg
loopne
cld
xchg
or
das
roll
push
iret
test
push
add
xchg
mov
sti
sbb
dec
adcb
xor
mov
aam
xchg
adc
mov
in
jnp
rorb
fimull
xchg
cmp
sub
add
jae
fistps
dec
imul
repz
clc
push
pop
cmpb
push
roll
das
inc
pop
push
jecxz
sarl
mov
jb
sahf
dec
pop
lret
xchg
fucomi
mov
insl
sub
popf
xchg
sub
mov
lret
or
out
sub
pop
and
ror
lds
sub
or
mov
hlt
iret
mov
incb
inc
and
sub
data16
mov
loopne
push
inc
push
pop
rcrb
mov
inc
lods
cmp
in
jmp
push
lods
inc
push
lret
sub
iret
cmpb
data16
jno
ja
add
arpl
in
or
jns
push
mov
or
shll
cld
daa
mov
pop
data16
mov
mov
mov
add
ljmp
dec
sti
rcl
cld
sbb
mov
cmc
shrl
in
idivb
fwait
push
xlat
hlt
and
rclb
mov
push
mov
ss
add
ss
mov
test
aad
lea
mov
or
aaa
mov
test
pop
test
scas
imul
fldenv
push
add
rorb
mov
pop
fsts
ret
out
mov
arpl
mov
test
pop
and
fst
hlt
add
dec
cli
mov
insl
mov
pop
xchg
xchg
mov
imul
in
mov
lret
xor
add
dec
scas
jnp
fs
mov
adc
movsl
sbb
jbe
loope
lcall
imul
mov
fildll
out
mov
cmp
or
push
xchg
fisubl
jle
sbb
push
scas
jp
sub
xor
lahf
lea
mov
insl
cwtl
push
in
mov
test
sbb
ja
add
fistps
add
push
cmpsb
mov
les
dec
add
ret
push
fbld
sbb
call
xorb
add
lahf
mov
cltd
mov
add
ljmp
das
rcl
orps
loope
bound
fidivrs
es
fstps
mov
mov
adc
mov
fadd
aam
xchg
iret
mov
sub
cmp
push
repz
jns
mov
sbb
dec
or
test
push
mov
lea
xchg
dec
cmp
xchg
ds
sti
subl
inc
xchg
sbb
mov
data16
out
rcl
xor
adc
test
cmpsb
cld
aad
f2xm1
adc
loopne
popa
icebp
lret
add
push
fidivrs
ret
mov
loop
ljmp
out
mov
jnp
sahf
insl
add
pop
xchg
movsb
xchg
cli
fimull
jmp
sbb
shll
ja
rorb
bound
mov
fsubr
or
jge
adcl
call
cwtl
and
push
dec
shll
push
push
adc
pushf
popf
popf
shlb
negb
sbb
loop
adc
sbb
cltd
addr16
cltd
push
mov
gs
dec
ljmp
outsl
mov
adc
test
stos
mov
pop
cs
movsb
mov
test
sub
adc
bound
xor
dec
insl
xor
int
aas
decb
add
xor
sahf
mov
pop
jno
sub
xchg
gs
pop
insb
ror
sbb
arpl
mov
rol
stos
dec
lahf
push
pop
outsl
js
mov
push
cs
shrl
mov
fildl
addl
je
call
lahf
mov
pop
daa
popa
into
sar
inc
loopne
mov
frstor
adc
inc
push
xor
sub
mov
dec
mov
xor
test
xchg
or
push
push
cli
pop
xchg
jb
jmp
jns
inc
addr16
js
jmp
data16
ret
int
popa
sub
inc
dec
dec
out
into
add
pop
jge
push
aam
push
sbb
pusha
xor
test
out
incb
fldt
mov
int3
jmp
push
bound
mov
repz
cli
adcl
xlat
cmc
std
mov
jb
test
adcb
pushf
xchg
cmpsl
dec
or
cmpsl
arpl
jb
lods
xor
dec
rorb
inc
pop
inc
mov
mov
popa
mov
push
out
mov
test
inc
fwait
ret
xchg
scas
out
into
add
xchg
jne
mov
lcallw
and
fmull
call
bnd
imul
ja
mov
mov
call
sbb
sbb
adc
stos
push
add
mov
fwait
lock
xor
sti
cwtl
mov
rorb
js
hlt
mov
je
xchg
cwtl
adc
push
mov
cmpsl
out
sahf
jmp
and
fbld
lcall
jmp
lods
jge
dec
out
xor
push
mov
scas
je
mov
addr16
pop
imul
stc
cwtl
cmp
stos
mov
ret
dec
add
cmp
add
mov
pushf
dec
fstl
icebp
into
dec
shlb
in
lcall
cmp
shl
adc
andl
loopne
cmc
ljmp
scas
jne
mov
stos
jg
mov
mov
arpl
xchg
jg
sti
fs
dec
aaa
aad
test
fldenv
dec
addr16
fiaddl
push
hlt
lahf
cmp
sbb
xchg
push
call
cs
pusha
sti
sbb
fsubrp
test
mov
movsl
sbb
cs
fmul
add
jae
arpl
out
iret
insl
imull
data16
inc
je
popa
dec
mov
addr16
in
add
or
lret
out
add
ret
push
mov
push
cmc
jbe
fstps
imul
cmpsl
and
leave
cltd
sbb
push
into
cmc
movsb
les
mov
xchg
js
cltd
icebp
sbb
ret
aaa
xchg
pop
loop
aas
insb
mov
pop
test
add
mov
xor
scas
jbe
inc
ret
pop
jl
jbe
fwait
inc
lds
jmp
loop
loopne
out
in
push
fisttpll
fwait
cmp
sub
dec
lret
rolb
dec
dec
sub
incl
mov
xchg
sti
pop
dec
jl
jg
loop
rcll
xchg
adc
jge
mov
xchg
xchg
jecxz
pop
mov
xor
icebp
les
mov
push
add
lea
sub
jnp
xchg
insb
jo
lods
int3
cwtl
loop
mov
in
insl
sbb
xlat
movsl
or
push
out
ret
aam
xchg
adc
sbb
lea
mov
test
cmp
inc
insb
push
repnz
sbb
xlat
cld
mov
dec
je
outsl
pushf
xor
les
pop
sub
mov
inc
mov
dec
cmc
js
pop
xchg
cmpsb
pop
stos
xchg
xchg
xchg
dec
lods
out
pop
add
and
sub
add
mov
pusha
push
nop
std
sub
xchg
mov
mov
filds
je
addr16
cmp
xor
xchg
adc
sbb
fs
gs
inc
and
dec
dec
addr16
mov
xor
pop
jno
inc
mov
lds
mov
fisubl
jno
push
lods
in
push
mov
mov
sbb
sbb
mov
leave
dec
add
lcall
test
cli
loopne
dec
dec
fisttpll
pop
add
xchg
dec
add
mov
push
imul
add
mov
sub
not
mov
dec
dec
jns
mov
aam
clc
xchg
mov
test
jge
mov
mov
lahf
pop
addr16
es
outsb
mov
adc
xchg
nop
mov
test
ja
and
subl
sbb
dec
push
xchg
cmp
stos
lret
iret
sahf
pop
push
cmpsl
xor
push
pop
bnd
repnz
mov
mov
dec
add
rcrb
fucomi
fdivr
xchg
mov
out
mov
loopne
test
sahf
xor
mov
stos
or
jae
adc
movsl
sbb
cmp
add
bound
lret
adc
xchg
cli
push
and
outsl
je
lahf
pop
cld
icebp
stos
pop
sbb
popa
lahf
ss
and
xchg
imul
jnp
dec
xchg
sbb
cmp
es
or
xchg
push
in
mov
dec
or
not
pushf
mov
sahf
mov
jp
pop
mov
fst
inc
cmp
pop
lret
pop
push
adc
or
and
xchg
or
xor
jmp
jl
xchg
sahf
mov
mov
cmp
jns
adc
repnz
jae
inc
jle
loopne
jmp
notb
test
adc
fstpl
cmp
dec
dec
jg
pop
xor
inc
sbb
push
mov
sbb
out
inc
int3
movsl
xchg
xchg
in
or
jnp
add
or
shll
test
in
outsb
flds
push
jl
addr16
lahf
xor
sahf
arpl
clc
pop
push
ja
push
mov
insb
inc
jo
lods
push
shll
loop
xchg
cmp
jbe
push
lock
push
mov
in
push
adc
mov
mov
mov
inc
movsl
sub
xchg
test
out
push
mov
ja
push
int
cmp
jp
and
cwtl
outsl
sub
xchg
push
into
filds
out
mov
cld
xchg
sahf
popf
loope
cmp
mov
aam
fdivs
mov
lahf
test
insl
lret
and
sbb
sbb
adc
int
jg
inc
or
cld
adc
les
insb
dec
xchg
and
sarb
and
mov
xchg
icebp
pop
insl
pushf
mov
sbb
rolb
jg
xchg
push
in
std
mov
stos
inc
subb
sub
xor
stc
pop
lods
pop
push
cwtl
call
aad
pop
fldcw
jne
js
mov
int3
xchg
lea
inc
push
jg
mov
mov
inc
xor
cmp
js
xchg
shrl
sub
frstor
jns
imul
mov
dec
cld
in
addl
jp
adc
aad
or
out
dec
and
or
negb
int
repz
ret
out
xlat
jecxz
add
jl
aas
mov
imull
xchg
dec
arpl
lret
and
addb
mov
push
rclb
faddl
xor
scas
pop
sarb
lret
mov
pop
push
lds
jo
sbbb
sub
lods
test
push
lahf
inc
and
or
jb
add
repz
mov
pusha
rcrl
gs
inc
jne
and
mov
cmpsl
daa
xchg
sarb
imull
sbb
inc
scas
dec
cmp
cmc
nop
daa
add
pop
and
imul
mov
loope
dec
rcrl
into
pop
xor
or
xchg
test
xlat
pop
scas
in
aas
xchg
mov
mov
das
dec
data16
lcall
enter
push
addb
xchg
jbe
inc
mov
add
lcall
je
sub
xlat
adc
inc
mov
dec
xchg
aas
push
sub
mov
cli
insl
pusha
mov
jae
mov
and
fistps
fiadds
push
or
adc
aas
loop
mov
sarl
dec
stc
or
aam
fst
mov
mov
out
mov
mov
add
rcrb
leave
push
add
add
ror
mov
pop
fisubl
sub
pop
pushf
push
ds
jne
ret
loopne
mov
or
xor
add
xor
jmp
nop
mov
jo
fimuls
pop
add
xor
pop
insb
lcall
lods
jne
cmp
adcl
fldl
arpl
sahf
sbb
adc
int3
fs
aad
loop
cltd
test
adc
scas
mov
sub
xlat
ja
dec
sub
lods
fld
fadds
fwait
push
mov
sbb
loopne
push
cmpsl
cmpb
cli
mov
mov
jne
loope
dec
jecxz
in
ljmp
jnp
addb
pop
push
popf
adc
popa
pop
sbb
xchg
jno
xor
sbb
lods
pop
and
int3
pop
push
mov
xor
aad
add
push
clc
jle
pop
pop
fwait
int3
dec
inc
pusha
outsb
scas
insb
inc
mov
jns
jl
data16
xchg
cmp
imull
push
imul
in
out
or
mov
stos
jb
imul
in
push
cmp
popa
sbb
mov
xor
aas
mov
or
sub
add
inc
data16
test
adc
inc
xchg
cmp
dec
test
or
pop
outsb
dec
das
or
sbb
fisttpl
cmpsl
push
add
sbb
call
cmc
mov
int3
test
sub
cmp
aaa
jo
mov
inc
push
or
ja
sub
cmp
loope
mov
lret
imul
fwait
jae
add
jecxz
cmp
lds
pop
mov
mov
icebp
or
outsb
and
mov
mov
das
lds
push
das
cwtl
std
out
les
xor
ljmp
cmpb
loop
es
lret
sbb
sarl
mov
jb
pushw
into
push
ror
call
lods
push
mov
and
xchg
push
dec
dec
lock
or
mov
mov
push
mov
lds
push
dec
mov
negl
or
leave
jmp
es
lods
pop
sub
sub
mov
sub
pop
lret
jmp
fcomps
or
aad
ds
adc
sbb
mov
inc
mov
lock
mov
push
mov
enter
nop
and
sub
sub
push
cmpb
cmpsb
scas
std
add
subl
imul
add
and
stos
arpl
inc
flds
xchg
mov
icebp
and
call
out
mov
mov
jns
adc
pop
stc
icebp
mov
icebp
sahf
jns
add
test
inc
sub
enter
sub
data16
sysret
notb
mov
push
mov
shl
out
repz
cmp
aaa
or
mov
movsb
or
pusha
push
scas
push
mov
jne
mov
jns
stc
test
xchg
jecxz
outsl
loope
paddusw
mov
repnz
js
xlat
movsl
stos
jo
aaa
sub
clc
fwait
popf
jmp
sti
and
ret
xor
prefetch
fsubs
rorb
xor
inc
popa
adc
fisubrl
add
sub
cmc
jmp
dec
mov
insb
loopne
test
adc
pop
leave
mov
or
inc
dec
ffree
ret
jo
push
push
in
xlat
cmpsl
sub
adc
test
mov
roll
pushf
or
mov
sbb
jp
enter
ds
test
decb
rorb
je
jno
test
and
jnp
jl
mov
in
mov
add
movsl
mov
cmp
repz
jecxz
xor
vmwrite
push
andb
testb
fninit
jbe
mov
stos
shl
fs
push
xchg
mov
and
sub
loope
jmp
movsb
or
push
or
loope
adc
xor
jns
pushf
push
xchg
in
cmp
les
pop
int
lret
movsb
test
das
sarl
mov
dec
and
dec
faddp
hlt
dec
inc
add
xchg
mov
lahf
jmp
cwtl
outsl
inc
in
divb
cmp
adc
repnz
lock
cwtl
lret
adc
cltd
xor
cwtl
mov
mov
xor
enter
push
mov
pop
outsb
jno
int
repz
sbb
inc
fwait
hlt
sub
fmuls
movsl
push
ficompl
fsubrl
cmc
inc
popa
into
shll
dec
movsl
or
test
sahf
bnd
push
sbb
add
add
jp
and
cmp
insb
js
std
and
mov
es
int3
insl
insl
out
jmp
cld
inc
dec
sub
aaa
cmp
mov
jno
fnstcw
shll
inc
pop
or
push
adc
das
jb
push
xchg
xor
push
fbld
jge
cmpsb
les
push
or
shll
mov
out
repz
negb
jns
push
faddl
mov
pusha
sbbl
cmpsb
jle
in
adc
push
xchg
push
jmp
or
xlat
int
setae
or
mov
mov
lahf
mov
pop
adc
pop
aam
cmp
cwtl
loopne
aad
mul
rcr
gs
ret
and
js
ljmp
push
js
not
jb
mov
xor
cmp
and
cmp
xchg
jle
and
mov
js
fbld
adc
test
add
xchg
mov
je
xor
test
cmc
jecxz
jecxz
daa
daa
jno
xlat
sarl
mov
push
dec
xor
mov
arpl
add
mov
xor
sub
push
jmp
enter
mov
test
push
es
sti
xchg
sbb
xorb
mov
sbb
mov
sub
enter
xor
mov
fisttpll
in
sbb
sbb
std
mov
pushl
jns
dec
ror
daa
sti
cmp
ret
push
push
rcrb
cmp
mov
inc
in
sub
cs
mov
and
nop
fnstcw
insl
mov
dec
and
or
lret
cmp
adc
xchg
and
and
push
xchg
aad
push
cmp
rorb
ret
shlb
outsl
lret
out
inc
gs
mov
pop
adc
xchg
jbe
xor
and
hlt
mov
add
cmc
lahf
cmp
and
cmp
pop
icebp
jg
add
and
mov
hlt
ret
sub
sub
ljmp
js
mov
loopne
and
imul
xor
iret
insb
jle
adc
mov
shr
lds
jo
outsb
mov
or
ss
ret
adc
das
jnp
bound
bound
xor
movsl
xchg
dec
loop
xchg
insb
inc
cld
xor
inc
aaa
test
xor
mov
inc
fisttpll
adc
xor
sub
sub
pop
mov
xor
dec
xchg
movsb
xor
xchg
sbb
xor
pop
aaa
in
stos
pop
leave
lret
fs
pop
add
cmc
add
jecxz
xchg
nop
in
adc
loop
pop
inc
lea
lods
dec
ficomps
cmp
sub
popa
sbb
xchg
mov
roll
rcll
popf
cli
inc
lret
mov
out
sbb
outsb
in
inc
mov
pop
out
mov
ror
sti
push
add
pop
lods
pop
or
pmulhuw
cmp
lret
sbb
pop
mov
rorb
inc
lods
aaa
scas
lds
add
mov
xchg
mov
ficoms
dec
je
jo
lahf
cmpsb
jle
pop
sub
push
sub
pop
push
push
iret
pop
test
add
mov
sub
lock
cmc
ss
jno
mov
dec
aam
add
outsb
call
fs
mov
mov
jl
mov
out
movsb
mov
stos
cmp
out
loop
cmpsb
sbb
fs
xchg
cmpsl
cmp
pushf
aaa
jle
shrb
and
cmp
add
add
scas
lea
sahf
int
mov
mov
pop
repnz
push
into
push
out
jmp
adc
cmp
notl
jbe
pop
add
mov
divb
aas
jno
out
scas
push
inc
add
inc
dec
sbb
out
test
jno
jae
in
icebp
mov
cs
fisttps
push
sbb
ficomps
out
xchg
rcrb
pop
loop
pop
inc
rcrl
fcmovnbe
stc
sub
loope
and
push
sub
movsb
mov
add
cmp
je
data16
mov
iret
sub
mov
add
in
pop
push
ret
enter
mov
jp
out
enter
and
sbb
loope
ret
je,pt
xor
pop
inc
jb
bound
notl
pop
pop
out
sbb
mov
dec
push
xor
xchg
mov
mov
cmpsb
jno
iret
call
pop
fs
test
push
imul
mov
data16
or
ljmp
mov
adcl
add
mov
and
mov
outsb
stc
add
ljmp
mov
adc
pushf
aad
xchg
xor
fwait
sbb
in
sub
popf
dec
jno
addr16
inc
leave
xchg
xor
les
out
mov
rcrl
data16
pop
loopne
fmuls
mov
or
movsl
int
xor
sub
ror
and
insb
leave
jp
scas
mov
xchg
dec
add
or
ljmp
sahf
jp
xchg
xchg
dec
dec
xor
lret
jecxz
gs
mov
outsb
lea
jmp
xchg
adc
adc
imul
push
push
jb
out
mov
mov
mov
sub
cmp
xchg
mov
sub
mov
icebp
xchg
pop
or
fidivrs
lock
mov
cmp
and
call
scas
jl
test
adc
popa
loop
xchg
inc
cmp
cli
repz
sahf
fcmovb
xlat
movsl
std
inc
leave
mov
cltd
jo
pop
dec
loopne
cmp
lea
in
dec
loop
jmp
cmpsl
orb
mov
xchg
lock
or
and
lock
jb
add
gs
rorb
xor
or
push
jecxz
jbe
cmp
sahf
add
notl
inc
sub
cmc
imul
xor
jno
cmpsb
mov
cmp
cwtl
enter
add
inc
push
outsl
push
cmpsl
subb
mov
cmp
or
sbb
cltd
cltd
lods
int
fnstsw
xchg
jne
or
cltd
outsl
dec
imul
lret
sbb
pop
push
fucomip
fcomps
jle
xchg
vzeroupper
sahf
xchg
sub
or
jecxz
pop
add
je
cmp
pop
push
psrad
mov
xor
and
sbb
loopne
fcoml
adc
add
and
movsb
scas
mov
xor
movsl
testl
imul
in
lret
xchg
mov
jp
pusha
push
out
mov
cmpsl
aas
popf
sarb
push
cmp
and
lods
inc
jle
pop
std
xlat
test
push
adc
cmp
dec
mov
inc
add
push
popa
mov
dec
inc
in
out
aam
push
aam
inc
cld
or
jo
adc
or
scas
rolb
mov
sbb
neg
push
sbb
leave
jbe
sbb
sti
imul
inc
mov
add
adcl
mov
ljmp
pop
cmp
xchg
bound
pop
fiadds
cmc
sahf
mov
dec
ret
ja
dec
in
pop
outsl
bound
mov
or
fwait
ret
out
hlt
sbb
fs
push
and
roll
xchg
hlt
clc
dec
pop
dec
adc
inc
dec
xchg
fdivs
and
xchg
push
or
mov
pop
es
cmp
in
in
xor
out
jae
push
jnp
mov
pop
fnsave
sbb
shll
outsb
es
dec
in
lret
test
out
pop
mov
and
leave
push
xchg
imul
lret
stos
or
shl
xchg
inc
fmul
ret
fisttpll
iret
xor
std
push
fistpl
jecxz
jg
inc
xorb
ds
enter
in
mov
push
fldt
cmp
test
cld
mov
sub
mov
jae
pop
jmp
sub
fiaddl
sbb
adc
mov
mov
mov
arpl
push
mov
add
repnz
pop
into
mov
jmp
pushl
push
xchg
xchg
xor
or
stos
shr
aad
insl
xchg
imul
push
xchg
add
sub
adcb
pop
cmp
lahf
dec
sbb
je
insb
jle
fsub
adc
pop
aad
data16
insl
leave
les
adc
ret
sub
mov
pop
dec
pop
sub
or
or
jl
and
shll
push
icebp
int3
fcomip
sbbb
stc
mov
shl
loope
sub
fidivrl
xor
sub
out
dec
in
fiadds
xchg
xchg
xlat
cmp
xchg
lods
loopne
xchg
fmuls
and
push
rorb
sahf
adc
cmp
mov
ss
xchg
dec
leave
call
mov
enter
xor
cmpsb
sahf
adc
push
insl
sbb
xchg
inc
jns
cmp
stc
mov
in
ret
cmp
xchg
mov
in
push
fs
jmp
aaa
test
push
lds
fcoms
shrb
out
into
xchg
addr16
rclb
xor
insl
push
les
add
fldenv
mov
inc
add
in
movsb
lods
dec
sub
xchg
das
inc
dec
cmp
xchg
test
lods
dec
sarb
jns
fdivrs
int
xor
push
loope
jg
xor
out
aad
inc
rclb
cmpsl
aaa
rcll
cmp
sbb
out
in
sbb
jp
inc
movsl
leave
xchg
xchg
push
jae
mov
ror
inc
pop
mov
mov
movsb
jbe
inc
cmp
and
or
imul
shl
scas
mov
test
test
jg
mov
cmovs
dec
adc
cmp
mov
ret
sub
outsb
addr16
push
pop
fs
mov
int3
shl
bound
jne
xchg
dec
jp
flds
fistps
sbb
movsb
xchg
cmp
loopne
dec
pushf
jne
jne
js
xchg
in
and
or
jmp
popa
dec
ds
pop
addl
xchg
mov
or
and
mov
js
jo
fidivrl
mov
lret
jne
or
into
jg
cwtl
mov
insb
push
mov
data16
sarb
xchg
fldpi
and
mov
ljmp
sbb
pop
frstor
into
cmp
pop
xchg
push
adc
cld
ret
int
and
sub
add
bound
add
shll
add
mov
je
ljmp
out
xchg
pushf
scas
inc
inc
xlat
fsts
mov
fstpt
scas
mov
jg
xchg
int3
int3
xchg
adc
cmp
enter
add
pushf
negl
xchg
xor
or
rclb
adc
arpl
es
jae
popa
arpl
cmp
add
or
pop
mov
or
mov
decb
sbb
add
cs
pop
ror
mov
mov
push
movsl
jne
cmpl
clc
sub
jae
add
jnp
je
push
mov
lcall
shll
cmp
mov
adcb
jle
mov
xchg
mov
rorb
lock
lcall
insl
mov
add
stc
in
out
stos
cmp
mov
mov
pop
fcmove
fsts
push
repnz
mov
and
test
or
adc
mov
prefetch
add
or
mov
jp
outsb
dec
mov
xchg
inc
xor
rolb
loope
adc
movsl
shr
xchg
jo
dec
mov
or
in
gs
out
fs
mov
clc
mov
loope
cmp
sub
mov
orl
scas
and
mov
or
mov
pop
cld
mov
dec
jmp
pop
stos
xor
loop
cmp
mov
adc
mov
add
cld
aas
andb
dec
mov
shr
xchg
xlat
lahf
sub
or
and
jge
sub
or
pop
dec
ret
sbb
data16
mov
daa
dec
xor
into
cmpsb
dec
shll
pop
bound
and
out
mov
arpl
iret
or
stc
ret
mov
js
fdivrl
pop
lret
daa
arpl
shr
jne
ljmp
and
cmp
adc
into
js
mov
mov
mov
cmp
imul
jno
lock
lods
push
sarb
in
sahf
adc
in
xor
fdivl
xchg
mov
and
pop
outsb
jl
sbbl
mov
lods
lods
mov
jl
jnp
mov
jo
sbb
xorb
mov
adc
decl
or
jmp
aam
mul
jae
and
mov
loopne
clc
mov
add
sub
popf
popa
mov
push
add
cmp
ljmp
lods
nop
mov
les
sbb
mov
iret
dec
xor
pusha
pop
dec
cmp
movsl
dec
add
dec
xchg
pop
stc
sti
lods
loope
pop
sbb
stc
dec
mov
xor
ds
jns
dec
aas
xor
mov
or
lds
vandnps
cld
lcall
movsb
test
pop
or
inc
subl
stc
cmp
add
pop
pop
lea
sahf
repnz
ret
push
ss
jnp
mov
jmp
jno
popa
xchg
testb
ja
jne
push
mov
push
ljmp
loopne
push
das
xchg
cmp
je
adcb
nop
pop
push
pusha
mov
aad
movsl
xchg
inc
push
cld
jb
cltd
or
mov
mov
mov
popf
cld
lods
push
fwait
loope
fimull
fsubrl
jg
mov
and
into
lock
out
js
push
stc
popf
adc
fbld
add
dec
xchg
mov
mov
adc
insl
fsts
mov
jo
mov
or
cwtl
jnp
push
int
test
add
inc
test
and
xchg
xchg
decl
test
sbb
roll
test
lds
jno
dec
sbb
das
fisubrs
push
add
dec
jg
jle
xor
bound
pop
aad
mov
pop
jp
hlt
arpl
xchg
pop
cmp
cmp
loopne
clc
repnz
test
call
movsb
aam
or
lock
das
cmp
shll
xchg
jg
movsb
aam
push
and
add
aaa
punpckhbw
sub
xor
cmc
pop
daa
daa
adc
pop
icebp
int
cltd
adc
push
push
mov
test
jg
test
aas
ror
mov
dec
sbb
mov
frstor
daa
sti
xorl
ds
jno
enter
mov
add
xchg
fstpt
stc
cli
adc
divb
push
cmc
sahf
lret
inc
cmpb
sbb
outsb
pushf
in
movsl
jmp
pop
inc
adc
cmp
jmp
mull
push
mov
jg
mov
adc
cwtl
fxch
xor
arpl
roll
cmp
jecxz
push
adc
stc
lcall
lcall
dec
outsb
pop
xchg
cmp
pusha
cmc
pop
push
repnz
std
call
jle
jb
add
fcomps
or
bound
xlat
mov
cs
iret
insl
gs
or
imul
xor
std
mov
out
and
outsl
and
pop
jo
sbb
aas
aad
cwtl
dec
shl
push
and
jo
fs
cmpsb
xchg
or
out
fwait
cmc
add
sub
repz
jnp
jo
mov
sub
jl
mov
push
int
add
cmc
inc
psrlw
or
xor
pop
pop
inc
pop
clc
jl
cs
jmp
inc
adc
out
xlat
adc
jns
jge
pop
iret
pop
test
mov
fcoml
mov
es
mov
xor
fsubrl
or
mov
cmp
pop
negb
rol
or
jb
ret
jmp
cmp
enter
jmp
add
or
and
jno
pop
inc
sti
adc
mov
push
sbb
jp
jb
fistl
nop
mov
jae
call
aas
dec
gs
loopne
mov
adc
push
pusha
lcall
sbb
mov
adc
aaa
ljmp
push
movsl
dec
lret
mov
shrl
sub
es
xchg
aad
sbb
in
sbb
pop
imul
add
stc
dec
hlt
push
jno
popa
nop
push
mov
mov
jmp
sub
jae
das
xchg
push
and
or
pop
mov
or
jmp
ret
rcrb
ret
cmpsb
sub
ds
push
dec
cmp
pop
push
sbb
enter
sub
cld
lods
mov
xchg
and
pop
xor
inc
ret
jl
es
xchg
xor
ja
rcrl
fnstsw
sbb
dec
das
jb
in
mov
jl
icebp
cmp
loop
sar
shr
mov
adc
xchg
cltd
dec
popf
push
jecxz
mov
cld
pop
call
leave
addr16
shll
jne
jbe
sbb
fistps
fdivrl
dec
stos
mov
mov
xlat
insb
adc
mov
or
adc
push
lods
add
bound
imul
lods
jmp
nop
lcall
dec
mov
add
cmp
mov
sub
or
hlt
mov
mov
int
sbb
cmp
repz
mov
adc
jae
push
and
mov
lret
xchg
daa
insl
rcrb
xchg
lods
sbb
add
jmp
sub
push
add
roll
movsb
pusha
sbb
and
pop
xchg
add
jle
fstl
cmp
cld
mov
and
enter
shlb
jmp
rcl
test
fnstenv
sbb
or
mov
inc
sbbb
jae
xor
pop
iret
icebp
jg
mov
in
xlat
clc
mul
mov
mov
and
inc
clc
push
hlt
mov
jge
mov
jle
aas
loope
add
sub
xchg
jae
divb
out
pop
mov
jno
sub
mov
popa
das
xor
scas
arpl
les
or
mov
push
es
shl
popa
push
sbb
lods
ja
mov
dec
mov
add
sbb
lock
imull
adc
mov
cwtl
cli
mov
into
xchg
cmp
jl
pop
sub
mov
xor
repnz
jo
sarl
push
out
dec
cmp
stos
inc
push
test
sub
aas
repnz
sbb
iret
stc
inc
loope
adc
cwtl
push
pushf
je
lds
lods
cltd
popa
mov
push
in
push
mov
jne
jo
imul
pop
fsubrl
fsubr
divb
jnp
rcrb
push
jmp
push
inc
dec
test
xor
cmc
add
das
int
fldcw
inc
mov
mov
sti
aam
or
sbb
andb
jmp
xchg
xor
bnd
pop
inc
jo
in
test
xchg
imul
dec
pop
xlat
jne
mov
lret
jns
cs
std
cmp
xchg
pop
or
cwtl
lret
dec
xor
cltd
mov
repnz
pop
fistpl
test
sub
sub
push
aas
pop
daa
test
mov
in
pushf
movsl
adc
mov
mov
call
in
adc
cmpsb
fxam
aad
fldenv
inc
push
aaa
pop
arpl
sub
adc
lock
pop
outsl
in
pop
xchg
fdiv
pop
jp
lock
and
in
out
adc
lcall
movsl
push
jp
cmp
aas
mov
add
iret
dec
arpl
movsb
cmp
repz
cmp
addr16
push
xlat
inc
pop
das
jle
pop
out
lahf
cmp
inc
xchg
inc
cmp
or
addb
lahf
loop
lods
mov
lods
loopne
popf
pop
stos
push
sbb
xor
sbb
jns
mov
xorl
testl
adc
popf
inc
mov
popf
loop
repnz
pushl
pop
lods
imul
dec
push
aaa
outsb
daa
xor
outsb
imulb
pop
movb
jmp
mov
dec
xchg
sub
sub
js
int3
sbb
jge
xor
push
push
jb
test
pop
fldz
jae
sub
xor
adc
cmpsl
subb
fwait
push
mov
or
movsl
mov
mov
imul
leave
imul
dec
out
sbb
jns
xlat
gs
insl
mov
loopne
mov
sub
inc
mov
test
adc
sub
mov
push
cmp
push
mov
mov
dec
out
lock
jnp
les
cmc
lds
xchg
xchg
test
cmpl
mov
out
jmp
aaa
pushf
mov
fstps
pop
ret
mov
adc
dec
jno
mov
push
push
mov
cwtl
outsl
jnp
fsubrp
sbb
sub
scas
inc
xchg
mov
or
shll
ss
jge
dec
cmp
inc
xor
mov
in
mov
loopne
inc
sar
sbb
xchg
pushf
into
sub
and
test
arpl
sbb
fidivrs
addr16
mov
mov
mov
mov
cmpsb
add
add
mov
stos
call
out
test
call
or
mov
mov
inc
lcall
or
and
clc
pop
iret
shlb
cmp
filds
idivl
shrl
sbb
pop
js
cwtl
test
fisubs
and
lcall
cld
push
js
insl
mov
data16
in
lock
daa
sbb
ljmp
clc
pop
jmp
stc
pop
mov
nop
pop
xchg
aas
movsb
and
mov
fisttpll
inc
rolb
xor
and
fcoms
sub
push
push
shll
mov
out
lcall
cmc
sub
jbe
push
mov
outsl
stc
insl
hlt
clc
arpl
jbe
and
fbstp
sub
adcb
fs
cmpb
test
pop
sti
pop
nop
mov
clc
fs
int3
ds
pusha
jg
xchg
fcmovnu
mov
mov
cmp
nop
lods
insl
push
adc
inc
and
dec
sahf
push
push
mov
add
pop
xchg
lea
dec
mull
inc
cmpsb
inc
in
push
cmp
and
mov
cmc
push
push
dec
cmpb
cmp
xor
loopne
test
iret
jmp
push
ret
pop
and
loop
popa
test
fadds
cmpl
inc
scas
mov
pop
es
in
jp
ret
xor
loope
inc
xchg
jmp
loope
xchg
adc
sbb
sub
mov
push
push
addr16
jmp
hlt
pop
lds
mov
cmp
bound
add
or
in
stc
sub
and
xchg
std
in
adc
rorl
dec
pop
pushf
adc
or
or
xchg
push
or
int3
dec
mov
sahf
sbb
push
pop
jae
dec
cmp
cmpsb
cmp
push
mov
cmp
adc
mov
and
nop
mov
add
push
adc
cwtl
cmp
push
addr16
popa
adc
mov
pushf
fisubs
dec
rcll
and
dec
cs
push
aad
insl
call
rcrb
jo
ss
push
aam
aam
repz
cli
jmp
cmp
push
nop
clc
cs
cmpsb
popf
gs
push
movsb
cmp
ror
out
cld
pop
mov
pop
int3
cmp
jne
push
sub
adc
xchg
movsl
mov
cmp
pop
into
or
xchg
and
shlb
aam
mov
mov
lret
sbb
jp
pop
test
adc
in
sarb
xchg
mov
sbb
push
mov
les
sub
lea
sub
push
fs
stos
mov
std
out
scas
jle
scas
cmc
lahf
cmp
scas
ja
movsb
cmpsl
push
mov
pop
lods
outsb
jg
inc
cmp
std
sub
movsl
pop
ljmp
xor
push
movsb
fs
pop
aaa
call
outsl
js
cmp
test
mov
sub
jl
jnp
sbb
int
test
xchg
mov
outsl
dec
in
sti
out
mov
in
jne
rorb
inc
pop
sub
aam
rcr
cmp
cmpsb
push
inc
mov
loopne
xor
cli
push
jecxz
mov
repz
add
add
fisttpll
fsubrl
insb
pop
xchg
mov
cmpsb
pop
sbb
in
loopne
icebp
fldl
cltd
push
in
pop
dec
mov
ficomps
mov
mov
sbb
mov
rorb
fsubl
sahf
cld
jb
xor
mov
mov
sti
in
pop
push
or
arpl
gs
or
std
mov
out
loopne
insb
inc
push
and
mov
sbb
push
subb
sub
mov
pushf
pop
and
cmp
sbb
stos
adc
cmpsb
fdivrl
jnp
mov
adc
cmp
lret
jecxz
sub
lods
xor
jo
ljmp
pop
iret
call
mov
inc
ret
and
fldenv
sub
test
adc
add
bound
inc
add
in
sbb
fmull
movsb
in
sarb
pop
xor
loope
sbb
addr16
scas
and
mov
jb
movsl
push
in
xchg
mov
cmp
xchg
mov
out
mov
ret
bound
inc
int
add
insl
jbe
jmp
dec
dec
and
mull
cmp
xchg
xor
add
pop
dec
jle
test
adc
pop
or
hlt
pushf
std
daa
out
adc
test
rcrb
cli
push
sub
loope
shr
and
push
pop
and
add
enter
push
shrl
out
mov
sysexit
mov
pop
mov
in
rcll
mov
ret
lods
pop
jg
pop
clc
mov
shll
subl
stos
std
and
mov
pop
jecxz
or
lret
aad
pop
stos
mov
out
outsl
xor
imulb
cmp
add
dec
scas
sti
stos
scas
movsl
jmp
faddp
xchg
andb
test
xchg
xchg
repnz
rorb
cmp
mov
jae
sahf
mov
mov
push
outsb
decb
fs
fiaddl
sti
sbb
cli
xor
mov
mov
lret
sbb
sbb
scas
sti
xchg
sub
mov
test
mov
push
cmpsl
cmpsb
jmp
fidivrl
movsbl
data16
sbb
fidivl
pusha
data16
data16
imul
mov
and
push
test
adc
adc
fs
out
cs
mov
popf
cmc
jmp
imul
dec
inc
pop
sbb
adc
movsb
fsub
dec
and
fstpt
and
stos
imul
or
pushf
or
aam
jmp
xchg
add
and
lods
push
mov
mov
out
imul
jmp
mov
fildl
sub
out
xor
mov
sub
cmp
orb
nop
divl
pop
and
cmpsb
jbe
into
mov
adc
rorl
lcall
inc
jmp
movsl
ja
lret
fwait
sbb
adc
popa
jae
mov
movsb
jmp
shll
and
into
lods
jne
mov
xor
stc
cmc
inc
xchg
push
ret
cmc
addb
bound
mov
sub
xlat
bound
inc
sbb
push
push
xchg
inc
cmp
xchg
notl
inc
aam
mov
shrl
sbb
dec
es
cmp
cltd
mov
scas
jne
aas
pop
jno
push
push
idivb
lret
pop
xlat
lret
fs
push
jno
subb
test
xchg
mov
enter
mov
stos
pop
popf
xor
in
add
ds
ljmp
jg
sub
and
mov
xor
xor
enter
adc
jno
fildl
push
add
pop
dec
jl
pop
sbb
rorb
adc
and
loope
lods
lret
xchg
scas
push
testb
pop
jecxz
pop
ret
push
sub
and
jmp
data16
ror
push
or
xor
push
push
cmc
push
aad
jmp
xchg
test
add
int3
push
outsb
dec
pushf
and
ror
jo
pop
repnz
in
xor
push
stc
insl
lods
xchg
push
dec
pop
add
push
adc
mov
adc
movsl
xor
pop
addl
mov
lods
jbe
mov
push
xor
fstps
in
push
fmull
repz
add
int
push
fisubs
or
icebp
add
faddl
or
loope
xchg
jle
mov
cmc
data16
fisubrl
mov
adc
rcl
pop
push
inc
sbb
or
dec
scas
js
shl
std
adc
xlat
pop
sub
pop
cwtl
pop
into
fcmove
sbb
pop
xchg
pop
jns
inc
dec
std
jle
dec
sahf
sbb
cmpb
push
xor
xor
in
loope
fldt
das
lds
data16
ja
xchg
mov
imul
stc
push
mov
push
or
and
mov
lods
cld
call
jae
add
gs
cli
inc
jo
mov
add
push
fbstp
push
fsubr
mov
in
or
in
loope
push
mov
lcall
in
mov
xchg
mov
cmp
repz
mov
nop
mov
inc
inc
dec
xor
mov
rcr
es
jle
pop
or
sarb
mov
jne
inc
stc
fisttpl
lods
imul
imul
rclb
iret
mov
adcb
pop
add
or
test
fs
lret
mov
fadds
pop
cmpsb
pop
push
lcall
cmp
jb
adc
inc
adc
cli
sarl
xchg
inc
dec
xchg
mov
iret
push
pop
mov
cltd
mov
and
rclb
mov
fmulp
push
cs
repnz
ljmp
xchg
and
flds
push
fucom
sahf
mov
mov
sbb
rorl
xchg
out
test
push
or
fistpll
pushf
test
outsb
ficompl
sub
stos
xchg
or
sbb
aad
mov
cmp
jge
daa
hlt
fucomip
divl
mov
sbb
das
cmp
clc
inc
push
pop
sti
stc
or
fstps
test
jns
mov
je
mov
adc
lods
jmp
xor
stos
jge
xor
outsb
daa
mov
dec
push
xchg
daa
sub
js
ja
scas
sti
sub
test
push
ret
add
push
mov
adc
fwait
mov
outsb
xchg
negb
and
inc
dec
fnstenv
sub
fdivl
cmpsb
adc
les
xchg
cmp
pop
mov
testl
nop
xchg
pop
int3
movsl
push
xchg
movsl
mov
iret
in
sahf
pusha
jle
or
push
sub
sahf
inc
cmp
inc
lods
fld1
add
cmp
into
mov
jmp
jge
cmp
mov
adc
mov
incl
jno
out
mov
dec
cld
jl
shll
mov
mulb
mov
adc
test
dec
mov
xchg
xor
cmp
xor
jge
inc
loope
push
fnsave
mov
and
cmp
les
sbb
pop
dec
inc
out
dec
je
mov
add
rorl
inc
sbb
xor
push
imulb
xor
clc
hlt
sbb
mov
dec
xchg
fidivl
mov
inc
push
fbld
and
add
mov
es
pop
add
pop
push
mull
imul
aaa
addb
lods
mov
aam
popf
jnp
cmpl
sbb
xorb
mov
and
cmc
pushf
sti
sarb
dec
out
mov
out
dec
inc
jbe
in
jnp
adc
mov
negb
call
fsubrp
push
test
fwait
rcrb
mov
and
cld
jnp
or
outsb
xchg
xchg
adc
push
enter
pushf
xchg
mov
and
mov
push
gs
and
arpl
out
aad
cmp
and
pop
pop
daa
mov
sbb
lds
imul
mov
mov
lods
lret
jmp
pop
mov
int3
leave
mov
rorl
insb
mov
mov
jno
xor
arpl
jl
cmp
sar
push
cmpsl
out
dec
stos
andl
mov
in
out
or
mov
aam
pop
loopne
pop
cli
ror
sub
xchg
fstps
mov
je
ficoml
int3
push
push
mov
cli
loop
pop
sti
push
adc
dec
cmp
pop
ret
test
inc
aam
add
in
rclb
gs
insw
icebp
xchg
xlat
fldcw
shlb
sbb
mov
rclb
rclb
and
in
mov
cltd
popa
fmul
dec
mov
lock
std
cld
mov
mov
mov
ljmp
imul
scas
adc
arpl
out
push
jae
cmp
pop
inc
dec
addr16
xor
cmp
lret
cmp
icebp
out
mov
lcall
fsubrl
dec
mov
sbb
mov
sbb
add
enter
hlt
lret
adc
push
pop
push
mov
popf
jle
dec
mov
sahf
ret
insb
mov
rcll
les
mov
mov
sub
adc
stos
data16
inc
pop
fcmovne
jle
and
jp
sbb
sbb
mov
or
call
aad
sbb
aaa
shll
mov
sti
push
inc
hlt
mov
mov
mov
lretw
or
inc
dec
jl
hlt
jne
mov
les
int3
movsl
movsl
mov
mov
mov
repnz
add
jo
aaa
jp
mov
int
lock
jle
pop
adc
push
sbb
fldcw
pusha
pop
xor
test
dec
sub
and
push
int
lds
cmp
mov
fwait
cltd
sahf
add
and
lods
push
mov
int3
repnz
jp
cmpsl
jb
sbb
loope
loopne
cmpl
mov
or
adc
cmp
int3
sbb
sub
lock
xor
mov
inc
les
ficomps
outsb
imul
or
pop
cmp
inc
out
dec
stc
and
mov
scas
test
jbe
xchg
and
lds
mov
mov
pop
gs
inc
icebp
outsl
adc
cmpsl
jmp
mov
outsl
xor
cltd
js
ja
or
pop
out
jb
mov
lock
inc
fs
int3
int
mov
gs
jne
lcall
insl
xor
push
sub
andl
xchg
adc
aaa
mov
pop
cmp
pop
mov
mov
pop
mov
xchg
std
outsl
cmpl
push
xchg
outsb
dec
cmpsb
xchg
test
mov
lods
push
mov
pop
xchg
inc
stos
aad
inc
insl
mov
out
cmp
arpl
lods
inc
shll
pop
mov
adc
and
xor
lret
je
sbb
movsb
push
sub
push
add
add
push
add
loope
cmp
test
fs
inc
lods
sub
popa
or
aas
movsb
mov
mov
jbe
mov
xor
sbb
mov
popa
mov
pusha
aad
inc
test
dec
out
filds
inc
in
jl
add
push
inc
or
rcrb
jl
je
outsb
fstp
jae
addr16
clc
dec
pop
jb
out
inc
leave
and
test
and
xchg
fistps
nop
sysexit
sub
add
mov
cmp
popf
add
or
add
mov
xchg
es
mov
shrb
insb
pop
pusha
orl
lret
stos
ret
pop
push
subl
mov
xor
sti
and
mov
inc
jle
xor
adc
add
inc
in
lahf
jb
pop
push
cld
mull
lcall
sahf
das
add
sub
fimull
mov
insl
insl
push
insb
push
pop
bound
pop
mov
and
xchg
scas
mov
adc
xlat
jp
push
inc
jecxz
fnstcw
out
push
mov
xorb
cmpsl
test
lods
addb
and
loope
out
ja
inc
das
xlat
fists
jns
push
out
lcall
mov
cmpsl
and
push
add
sti
jb
add
xor
fldcw
sbb
pop
sbb
cmpsl
inc
xchg
sbb
test
adc
out
call
in
xor
sti
ds
notl
ret
add
dec
sahf
imul
jb
in
fsubs
out
dec
fisttpll
mov
pusha
cmp
je
pop
jg
insb
jnp
sahf
pop
adc
test
repnz
or
sub
dec
mov
xor
xor
mov
cmp
data16
push
icebp
das
stos
jg
out
push
jecxz
jo
pushf
mov
outsb
pusha
inc
jg
xchg
movsl
sbb
lods
sbb
hlt
and
ljmp
inc
and
inc
fwait
js
dec
fcoms
xchg
sbb
add
stc
ss
aas
popf
outsl
xlat
notl
pushf
out
adc
mov
inc
xchg
subl
sti
xchg
outsb
sbb
pop
aam
aas
or
jecxz
lret
es
flds
loope
je
jecxz
fsubs
push
xor
inc
mov
out
mov
xor
xor
addr16
push
popa
xchg
cs
jg
movsb
push
je
push
mov
push
inc
decb
scas
rclb
das
mov
dec
movsb
lds
add
lock
cmp
cmp
iret
fbstp
lcall
incl
adc
test
mov
adc
mov
lods
or
sbb
jp
mov
outsb
into
mov
scas
stos
mov
push
dec
sub
mov
push
adc
fisubs
jmp
sbb
mov
xchg
push
enter
xchg
pop
push
push
jl
push
insb
out
arpl
test
xor
pop
sbb
xchg
sbb
sbb
jbe
mov
sbb
push
gs
jmp
sti
pop
in
test
jb
loope
sub
enter
jecxz
pop
mov
mov
and
pop
lock
xchg
inc
insl
mov
repz
mov
dec
outsb
ret
out
dec
xchg
xchg
test
adc
xor
mov
shll
lock
sub
mov
sbb
mov
loope
add
dec
pop
insb
je
push
adc
cmpb
repz
clc
negb
jne
and
pop
stos
rcrl
sub
data16
inc
mov
clc
inc
adc
mov
cmp
mov
cmp
jmp
hlt
imul
sub
xchg
sub
xor
push
int
loope
sti
mov
fld
das
daa
jae
add
fstps
mov
jg
xor
outsb
insl
das
arpl
dec
xor
lods
ret
jl
aam
cs
sbb
divl
mov
inc
sahf
insl
xchg
insb
mov
push
add
sti
test
stc
inc
sub
adcb
negb
xor
xchg
loope
cs
sahf
popf
push
dec
inc
movsl
fwait
sbb
cli
jge
sbb
mov
sar
push
ret
fdivrp
jae
inc
mov
jno
pop
jns
out
add
add
mov
xchg
xor
jnp
push
sub
jo
cltd
shrb
out
mov
ds
scas
sub
cmc
xor
inc
adc
sub
mov
je
xor
dec
mov
pop
jae
cmp
cld
sbb
cmp
push
mov
dec
lods
mov
out
lds
insb
mov
cld
add
inc
popf
inc
or
mov
mov
lds
cmp
xchg
sti
jmp
aam
mov
data16
jno
lahf
cmpsl
cs
scas
sub
mov
lcall
sub
cwtl
mov
fdivrs
andl
dec
mov
aam
xor
pop
jmp
das
xchg
loop
daa
cmp
call
repz
les
fidivs
scas
loope
cmp
in
add
adcl
xor
mov
repnz
bound
adc
aam
lds
mov
sahf
aad
xchg
enter
adc
stos
fdivrs
rorb
add
incl
int3
cmpsb
in
mov
jo
fsubr
js
jno
icebp
int
leave
push
sbb
mov
sub
aam
orb
lahf
inc
lea
test
test
pop
adc
cmp
lock
cmp
loope
cli
subb
sbbl
and
cs
or
xlat
inc
jl
mov
push
xchg
sbb
sub
adc
inc
xchg
inc
pusha
lret
aaa
add
aad
movsb
addl
outsl
xchg
rclb
out
lcall
mov
aas
sub
pop
inc
rclb
fadds
sbb
cmp
pushf
sub
xchg
insl
cmovo
loop
out
stos
das
adc
test
and
mov
mov
enter
ljmp
inc
in
or
rorl
ror
icebp
ret
mov
or
shlb
std
cmp
aad
cmp
pop
mov
xor
push
test
sbbb
inc
in
stos
prefetch
sub
mov
mov
cltd
cwtl
pop
add
cmp
hlt
inc
imul
jle
jmp
mov
xchg
mov
cmc
call
xchg
dec
shll
aas
add
pop
notb
mov
adc
test
fsts
shrl
in
int3
sbb
mov
je
lret
cmc
dec
lahf
shl
sub
inc
aad
adcl
push
stc
rclb
jno
sbb
out
xchg
cmpl
daa
cmp
sbb
cmpsb
mov
xor
push
mov
rcrb
insb
sub
aaa
notl
js
es
push
std
subb
pusha
fidivl
mov
test
mov
std
mov
stc
cmp
pop
aas
push
inc
cs
dec
pop
push
lods
shr
dec
and
inc
mov
dec
lock
push
in
cmp
sbb
inc
popa
mov
push
rcrb
push
jno
mov
add
xchg
push
inc
cmp
bound
and
fldcw
fldenv
cli
mov
call
es
hlt
mov
adc
ljmp
jge
mov
cmpsb
push
cwtl
test
push
sti
jle
lcall
bound
mov
lds
clc
lods
std
and
roll
or
inc
nop
mov
aad
test
out
inc
ds
adc
shl
sub
outsl
je
sarb
int
or
es
mov
div
repz
add
or
mov
pop
aas
ret
cmp
push
inc
mov
xor
xor
adcl
inc
mov
add
lods
inc
inc
push
clc
lret
mov
adc
inc
mov
push
jbe
mov
add
or
daa
xchg
aaa
in
jecxz
scas
les
mov
imul
adc
lret
push
stos
jl
push
push
push
or
sub
icebp
pop
jno
push
out
push
cmp
cs
aam
pop
hlt
cmpsb
outsb
je
pop
orb
pop
mov
cmp
push
cs
cmp
aam
in
cmp
je
in
sub
mov
jae
clc
sub
shll
aam
into
fmulp
movsb
xor
sub
mov
add
rorl
xchg
jns
popa
std
jnp
sarb
jb
or
and
lret
outsb
sub
movsb
dec
adc
inc
sbb
cmpsl
mov
cmpl
push
dec
gs
dec
movsb
lds
ljmp
cmp
dec
call
aas
push
mov
jnp
add
dec
leave
and
pop
fs
mov
jl
mov
subl
or
subb
notb
movb
pop
stos
lret
pop
xchg
xchg
movsl
adc
test
sbb
inc
inc
xor
scas
fisttpll
out
rorl
aam
or
cli
jo
pop
jge
std
das
popf
daa
outsb
das
jmp
pop
shll
add
sbb
sbb
imul
lret
sti
test
xor
ja
pop
nop
inc
ficompl
jmp
xor
xor
jo
sbb
xchg
mov
addr16
add
andb
test
sub
adc
fiadds
push
adc
aaa
jne
insb
and
mov
ja
xor
mov
mov
cli
push
movsb
sub
call
sbb
fcoml
push
arpl
imul
ja
adc
sub
pop
pop
cltd
and
call
push
pop
nop
xchg
add
mov
lret
mov
adc
inc
push
cmp
fisubl
stc
add
add
mov
pop
daa
mov
adc
daa
movsl
sub
popa
je
pusha
hlt
incl
pop
or
jecxz
gs
fwait
in
sub
mov
xchg
cmp
addr16
loope
ror
ret
pop
jle
xchg
out
mov
test
xchg
add
mov
inc
mov
sub
pop
xchg
rcrb
mov
cwtl
jl
mov
adc
xchg
stos
cli
and
test
sbb
mov
cmp
mov
mov
push
mov
xlat
mov
loop
push
jg
ss
pop
sti
and
mov
in
sbb
inc
pop
mov
std
jno
inc
imul
jae
pop
push
es
inc
dec
mov
xchg
lods
testl
into
xor
addr16
ljmp
dec
adc
cmp
out
jl
add
aaa
ffree
and
dec
pop
and
or
or
out
sub
cld
stc
mov
ret
das
sub
xchg
mov
mov
cpuid
cmp
sbb
adc
call
out
es
loopne
scas
jl
xlat
addr16
inc
xor
data16
mov
scas
add
xor
xchg
in
cmp
cmpsb
repnz
das
mov
sbb
mov
jae
jle
sbb
leave
xor
xchg
ds
mov
and
sub
xchg
popf
or
addl
inc
repnz
jecxz
jnp
lahf
and
xchg
or
adc
je
sub
pop
ret
pop
xchg
xchg
mov
decl
or
int3
add
sbb
adc
fidivrl
sbb
push
leave
sbb
shlb
loop
sbb
cmpsb
lock
out
cld
mov
pop
xchg
lock
pop
adc
mov
jo
mov
std
daa
add
cmp
scas
mov
and
in
and
pop
fdivr
dec
iret
inc
into
inc
in
push
push
inc
mov
ss
lcall
insb
add
adc
sbbl
mov
icebp
and
lret
popa
jne
pop
stos
out
push
mov
nop
mov
sbb
loop
push
int
lret
jge
fwait
sbb
adc
add
jge
jno
arpl
pop
stc
mov
das
xor
mov
pop
mov
xorl
jge
ss
jb
test
and
aad
ret
aam
mov
jmp
sbb
imul
int3
out
rcr
pop
jge
mov
add
mov
jne
jmp
push
rcll
repz
pop
xchg
fldt
dec
dec
nop
test
mov
sbb
movsl
mov
bound
jmp
mov
push
out
push
cwtl
xorb
fstpl
cmpsb
scas
fldenv
or
rorb
xchg
test
out
jns
daa
sbb
repz
movsb
add
into
jo,pt
pop
lods
xor
addr16
xchg
mov
call
sub
fistpll
push
notb
hlt
testb
rorl
nop
adc
or
or
mov
push
es
dec
mov
scas
stc
pop
fdivl
or
insl
inc
push
cmp
sbb
lret
push
and
les
pop
stc
cmp
repz
fldcw
mov
xor
inc
into
mov
pop
adc
cmp
aas
jle
lds
cltd
in
in
push
scas
in
xchg
and
mov
bound
or
roll
daa
push
aaa
popa
aad
cmp
pop
fiadds
enter
pop
push
pop
fcomps
shlb
hlt
sub
jno
xor
sbb
add
mov
xchg
add
xor
addl
int
mov
sarb
xlat
enter
sub
mov
sub
das
ss
inc
sbb
cmp
out
stos
mov
fdivs
insb
pusha
sbb
xchg
data16
test
mov
mov
cmp
or
mov
cmc
jl
or
test
sbb
pop
out
ljmp
icebp
mov
inc
mov
dec
inc
fimull
and
test
mov
jb
stc
pop
add
add
add
lock
xor
push
and
arpl
int
sbb
in
movsl
mov
jmp
sbb
jb
lahf
addb
data16
ljmp
lcall
lret
adc
lock
out
xchg
inc
mov
sbb
mov
out
mov
dec
mov
testl
xchg
fcmove
sub
rcll
pop
inc
addr16
sbbl
jmp
mov
cmp
sbb
pop
xchg
xorl
jo
fsubrp
sbb
mov
sub
hlt
negl
cld
adc
mov
pop
sub
in
cwtl
add
clc
rclb
ret
inc
jo
iret
out
ret
mov
lahf
out
loopne
popa
movzbl
je
out
and
dec
sarb
pushf
test
aas
jne
imulb
fsubl
and
adc
movsl
push
neg
pop
test
icebp
xchg
fs
jb
dec
clc
pop
mov
push
sbb
imul
or
add
jo
and
mov
cmp
cltd
mov
mov
pusha
push
cmp
mov
jg
cmp
ds
inc
adc
out
shll
outsl
test
xchg
sub
movsl
add
push
dec
and
sbbb
movsb
ds
lret
xor
dec
xchg
mov
lods
xchg
lods
pushl
and
sahf
in
ja
add
insl
cmpsl
xchg
in
jbe
adc
or
stc
arpl
dec
push
dec
add
jp
repnz
dec
adc
out
imul
or
leave
dec
xlat
cmpsb
stos
in
mov
push
aad
adc
push
mov
push
and
lea
js
loope
push
cltd
push
xor
into
mov
inc
and
loopne
xchg
pop
mov
mov
pop
mov
push
pushf
int3
cmp
adc
jae
out
sbb
test
das
cmp
out
ja
aaa
pop
add
push
ds
push
outsb
mov
rol
insb
jl
test
jo
cmp
pop
push
jge
daa
jae
lds
int3
push
outsl
out
xchg
add
fimuls
rol
gs
aam
lock
call
movsl
test
push
pop
out
add
ss
mov
rcrb
cmpsb
js
jl
mov
ljmp
das
in
sub
jne
mov
sub
mov
insb
push
jnp
mov
iret
stos
xchg
xchg
es
push
addr16
arpl
pop
rclb
clc
pushf
out
mov
pop
mov
cli
call
jno
cmp
xchg
sbb
ljmp
pop
mov
cwtl
lock
mov
or
insb
std
mov
dec
stos
inc
mov
aam
daa
lea
cmp
inc
mov
imul
dec
loop
jne
into
mov
pop
inc
fcmovb
push
cli
jns
push
and
lds
adc
gs
cmp
fmull
addr16
jo
hlt
icebp
jae
clc
addr16
mov
cmc
adc
popa
sbb
jno
xor
imul
mov
mov
dec
jnp
fistpll
ret
lock
pushf
ds
fsubrl
push
inc
popf
ss
push
mov
std
xchg
int
push
ljmp
enter
popl
pushf
mov
push
leave
sub
rorl
testl
jns
mov
mov
push
pusha
fcomip
dec
xchg
pop
js
mov
js
pop
insl
in
roll
popa
in
xchg
cmc
stos
out
jp
xchg
mov
dec
mov
js
jnp
scas
xchg
jne
dec
and
pop
ror
mov
test
repnz
inc
rcl
dec
cs
call
add
dec
ja
xchg
push
js
push
shlb
xor
pusha
mov
or
jle
rcrb
cmp
fidivrl
push
mov
push
int3
or
jge
or
les
cmpb
je
or
cltd
fdivs
sahf
cmp
inc
adc
aad
mov
test
mov
dec
mov
outsl
add
and
in
icebp
cmp
adc
mov
fidivl
dec
xor
sbb
cmovs
and
xor
shll
xor
clc
cmp
dec
jb
xorb
push
call
insb
in
out
cmc
push
cmp
jecxz
mov
into
aaa
ret
stos
ret
lods
vmovsldup
dec
cltd
xchg
test
fldt
xchg
mov
inc
push
movsl
dec
cmpsl
mov
pop
push
mov
xor
andb
call
xlat
jb
push
jmp
jg
jnp
cmp
xchg
sub
loop
push
popa
fisubl
mov
cmp
mov
mov
and
pop
pop
test
and
adc
push
scas
repz
stos
push
stos
mov
pop
mov
xor
je
repz
stc
sbb
les
mov
mov
jge
loopne
cmpsl
mov
pop
call
mov
daa
pop
inc
mov
sahf
dec
orb
jo
stos
enter
dec
and
addr16
test
mov
cmp
aas
out
das
cs
jge
leave
iret
data16
adc
push
jmp
aaa
mov
lcall
cs
sbb
movsl
adc
popf
mov
mov
ja
add
push
je
hlt
pop
push
out
fstp
enter
test
in
int3
xor
les
mov
or
dec
leave
repnz
rcll
mov
ds
and
mov
loopne
and
jg
std
cmp
enter
add
int
add
xchg
jle
sbb
mov
mull
andb
lock
and
dec
jle
lahf
xor
mov
cmp
and
mov
xor
loope
imul
scas
imul
enter
xchg
fs
push
shrb
adc
inc
dec
pop
adc
fildl
iret
aaa
xlat
mov
add
bound
or
out
aaa
pop
sub
mov
dec
stos
pusha
sbb
mov
movsb
add
stc
or
rcrb
in
cmp
pop
inc
pusha
jg
jae
or
push
lret
mull
in
enter
ja
pop
push
xchg
pop
jp
pushf
pop
xchg
test
bound
jmp
or
mov
adcb
add
js
and
aas
pushf
mov
add
popf
ljmp
int3
jno
je
out
test
ds
mov
pop
gs
xor
lret
fsubrl
xchg
sub
pop
mov
mov
pop
pushf
fcompl
movsl
test
sti
or
dec
imull
sbb
cmp
jge
js
adc
xchg
pop
movsb
es
sti
jge
dec
and
movsb
cmp
xchg
insl
out
push
cmp
test
inc
test
mov
jo
jmp
das
cli
mov
and
xor
dec
cmp
cmp
shl
jnp
jmp
test
inc
adc
hlt
test
push
pop
cmp
mov
jo
xor
in
pop
xchg
imul
mov
dec
ret
sti
int3
loop
mov
push
mulb
jp
or
jg
xor
dec
pop
mov
ljmp
fs
fdivp
adc
dec
mov
or
cmp
sti
pop
andl
lahf
scas
cld
or
outsl
jb
vmovaps
and
sbb
mov
mov
shl
xor
divb
mov
jo
lock
mov
out
dec
inc
nop
mov
je
mul
sub
lret
fwait
leave
test
or
jecxz
lret
jne
push
and
and
pop
xchg
repz
cli
mov
jl
cli
add
insb
adc
data16
cmp
jge
mov
cmp
out
inc
mov
and
aad
push
adc
in
gs
inc
ss
pop
test
or
add
das
ja
repz
std
incb
pop
loope
adc
lock
dec
jno
fcoml
fisttpl
int
hlt
repz
xor
mov
int
mov
push
inc
inc
xchg
pop
sub
add
icebp
pop
mov
outsb
push
cli
rclb
cwtl
xor
sub
sti
mov
mov
adc
lret
push
sbb
loope
dec
in
ja
jb
mov
aaa
int3
iret
jp
push
sub
push
xchg
sub
das
aam
dec
addr16
aaa
push
jno
mov
mov
cmp
add
xchg
adc
pop
icebp
and
clc
ds
cmp
ss
outsl
out
sub
mov
lds
sub
pushl
inc
add
imul
ljmp
into
call
sbb
inc
stos
out
popl
sbbb
fstpl
ss
cmpsb
std
sub
sarl
lret
pop
push
sarb
and
jmp
adc
adc
movsl
into
aam
ljmp
repnz
pop
pop
lret
and
mov
xor
add
lcall
aas
shlb
lods
or
cmp
jb
jnp
push
cmc
je
adc
in
cmc
insl
je
testb
test
sub
int3
aas
mov
sar
dec
ss
das
sub
leave
out
cmpsl
aas
push
into
mov
mov
pop
fs
lret
dec
js
jge
es
jo
addr16
out
dec
loope
psubsb
jp
int
mov
pop
in
dec
aas
xor
stc
add
push
outsb
jne
movsl
into
jmp
sbb
add
nop
add
add
mov
jg
mov
adc
or
fcmovne
xchg
or
mov
cmc
pop
jb
loope
xchg
mov
cmp
inc
enter
arpl
pop
pop
push
dec
jle
dec
ret
cmc
jecxz
movsb
icebp
int3
pop
aam
loopne
popf
ljmp
cmp
add
int3
push
aam
add
mov
aad
stos
add
ficomps
loop
pop
cmp
aam
mov
loopne
adc
push
pushf
mov
mov
mov
cli
movsb
fdivrs
cli
je
leave
mov
les
pop
xchg
int3
rcrb
ja
ret
mov
sbb
movsl
mov
mov
jg
mov
adc
nop
incb
subl
nop
pop
jg
push
adc
inc
lods
dec
mov
roll
stos
pop
cmpsb
push
les
fidivs
adc
lea
sbb
xor
or
xor
scas
mov
push
push
cmp
fninit
jns
xlat
je
inc
daa
cmp
push
push
xchg
inc
sbb
stc
push
push
or
jbe
push
or
pop
das
push
mov
pushf
test
mov
cld
ret
pop
dec
test
mull
sets
pop
jae
mov
xchg
push
jmp
rcrl
push
call
dec
jo
movsl
repnz
mov
lcall
aad
in
jns
call
movl
cltd
jnp
jns
inc
lea
movsb
ss
test
pop
fiadds
insb
test
jne
in
cmpb
out
jae
xchg
xor
in
test
mov
pop
xchg
push
xor
and
movsb
repz
cs
in
or
lret
push
into
mov
pop
adc
dec
imul
je
imul
add
in
popf
addr16
outsb
fadds
idivb
sbb
insl
aad
rol
xor
sbb
dec
repz
mov
sub
sub
dec
mov
pop
lahf
xlat
inc
sbb
mov
mov
jae
mov
js
stos
js
lock
dec
mov
rorb
adc
ss
insl
dec
roll
xor
or
into
out
lea
adc
sbbb
xchg
xor
pop
adc
cmpsl
add
mov
loopne
jle
jge
mov
in
xchg
and
dec
jp
nop
xchg
repnz
jo
dec
add
dec
or
arpl
pop
and
jl
fsts
shl
xor
sahf
in
xor
adc
mov
lea
push
push
xor
add
mov
call
nop
or
push
adc
add
sub
aas
inc
sub
cmp
and
in
cltd
push
lods
and
sub
jo
cltd
aam
lret
or
jo
jo
xchg
lcall
dec
out
call
sub
sahf
lahf
andb
dec
in
mov
xchg
mov
inc
push
mov
cmc
mov
sub
daa
andl
mov
enter
call
aas
adc
out
add
imul
in
cmc
pusha
cmp
pushl
jecxz
add
cmpsl
fiadds
outsl
jbe
and
stos
or
idivl
jno
loopne
mov
push
xlat
mov
push
shl
push
loopne
pop
mov
lret
add
xlat
test
dec
mov
mov
mov
xor
mov
mov
mov
aaa
dec
arpl
lods
mov
xchg
inc
adc
mov
cli
jnp
push
iret
jbe
jg
sub
sbb
cmp
dec
rcll
xor
inc
cmp
jne
lahf
add
int
push
pop
hlt
jb
adc
jo
arpl
mov
fists
shll
mov
les
jecxz
mov
adc
jecxz
pusha
sub
test
jne
cmp
shll
mov
inc
fstpl
mov
jo
ret
ror
insb
sbb
or
call
movsb
subb
push
outsb
pop
clc
sub
jge
stc
sbb
inc
lea
push
pop
xor
jmp
xchg
xchg
mov
mov
mov
mov
hlt
lret
adc
pop
xchg
or
xor
test
iret
mov
les
mov
loopne
mov
mov
push
aad
leave
inc
into
xchg
or
adc
inc
loopne
mov
lds
out
mov
mov
pop
shrb
flds
sub
popf
repnz
cmpb
adc
dec
xchg
movsl
sub
mov
dec
and
lea
in
in
popf
stc
sahf
jne
jbe
enter
adc
fisttpl
cltd
scas
sub
dec
inc
mov
push
or
in
into
and
xor
int
pushf
or
mov
mov
loope
dec
and
daa
addr16
vmovaps
out
call
sub
push
idivb
pop
shll
dec
test
mov
sti
jnp
mov
lods
iret
in
mov
addb
cltd
loopne
xorl
stc
imul
clc
inc
out
sar
cmpsl
push
dec
movsl
lds
pop
adc
fnstsw
imul
cs
pop
movsl
fisttps
adc
sbb
sbb
adc
in
xlat
xchg
outsl
bound
pop
aas
fsubl
repnz
xor
push
inc
jp
jae
ret
and
std
nop
in
or
out
insl
xlat
and
scas
push
ljmp
orl
mov
addr16
test
in
inc
leave
inc
ljmp
mov
out
out
cmp
hlt
scas
jmp
lret
mov
outsl
cmp
mov
mul
cmpsb
cmp
cmpl
push
cmpsl
xor
loope
and
out
fdivr
ret
scas
mov
jbe
inc
arpl
ja
cmpsl
inc
add
test
bound
mov
pop
test
inc
movsb
push
push
add
push
inc
loope
roll
sbb
inc
and
icebp
cmp
popf
pop
mov
xor
test
xor
loop
mov
inc
push
pop
xor
and
xchg
sti
xchg
pop
lcall
daa
shrb
push
dec
lods
cmp
dec
notb
loop
jecxz
sbb
push
cli
pushf
dec
mull
lret
loopne
push
mov
jge
push
pop
pusha
cwtl
xchg
adc
and
les
fsubrs
movhps
push
enter
push
mov
xchg
mov
popa
enter
pop
xor
fstpt
repnz
cs
pop
dec
test
cld
iret
jbe
jg
or
outsl
cmpsl
cltd
jge
or
mov
lret
out
iret
cmpsl
push
jecxz
scas
js
subl
jge
sbb
out
out
dec
pop
push
inc
dec
lahf
mov
cmpsb
out
add
sub
iret
and
clc
xchg
lds
bound
js
xchg
hlt
pushf
shrl
add
cmp
jl
ret
test
jbe
cmpsb
das
adcl
lock
inc
mov
mov
ret
inc
ds
jge
dec
rcll
mov
cli
cmp
xor
jle
cmp
mov
push
jl
mov
mov
inc
inc
mov
push
fbld
mov
xor
daa
xchg
cmp
push
loopne
sub
cmp
adc
fcomps
lcall
add
into
imul
loop
xchg
xchg
push
push
mov
imulb
or
xchg
cmpsb
or
daa
cmp
mov
call
popa
push
movsl
sbb
cmpsl
jo
xor
inc
cmpsb
mov
xchg
xchg
aas
pop
xchg
shll
fbstp
xchg
adc
shll
sti
test
dec
pusha
lahf
cmp
push
sub
or
push
or
dec
addb
jne
mov
dec
call
nop
andb
mov
xchg
hlt
gs
test
outsb
lret
movsb
in
je
pop
divb
inc
inc
xor
dec
lret
xchg
cmp
pop
mov
mov
jg
cmpsb
addr16
sarl
scas
jmp
ljmp
lcall
add
pop
lea
hlt
je
sbb
sub
push
repz
add
sub
ja
ret
loopne
out
mov
jne
inc
mov
lret
pop
adc
lret
and
xchg
loopne
test
fimull
or
add
xlat
cld
fisubs
int3
push
xchg
jnp
in
push
xor
lcall
sti
test
xchg
jbe
ss
shll
dec
mov
test
cmc
test
add
pop
fcomip
in
pop
and
scas
ja
iret
clc
push
dec
clc
sub
sub
roll
dec
or
icebp
pop
insl
ljmp
add
gs
or
stos
push
pop
stos
or
xchg
xor
lea
pop
xchg
inc
mov
add
cmp
adc
fwait
jmp
xchg
stc
imul
cld
notl
lock
test
lretw
dec
lds
gs
data16
cmp
dec
out
pop
mov
gs
jae
sbb
cmc
movb
insb
imul
add
jnp
test
pop
fwait
pop
pop
mov
in
stc
outsl
push
cltd
repnz
add
adc
push
xor
inc
or
hlt
insl
push
cmp
test
clc
scas
dec
les
mov
dec
mov
sub
iret
lret
divb
lea
xor
push
jne
mov
or
lds
add
out
cmp
movsb
scas
imul
fisubs
and
fs
pop
xlat
js
scas
xchg
xor
xor
pop
dec
addl
mov
mov
pop
clc
inc
push
sub
aas
ja
out
adcb
push
inc
sub
sbb
lods
jecxz
loopne
cmp
and
sbb
and
lret
fbld
and
sbbl
mov
sahf
xchg
pop
fistpll
jae
push
or
mov
in
test
push
outsb
adc
pop
and
in
shll
and
inc
adc
jno
pop
or
mov
and
adc
lret
aam
pop
xchg
in
and
repnz
pop
inc
int3
scas
addr16
iret
jge
push
xchg
clc
jne
lret
sub
push
pusha
push
inc
inc
xlat
push
add
aas
cmp
xchg
jno
orl
es
push
jns
mov
cmc
out
pusha
cmpsl
leave
pop
and
sbb
add
mov
pop
sbb
xchg
stos
inc
les
pop
sub
cltd
imul
movsl
mov
repnz
enter
adc
imul
ror
pop
mov
in
outsb
loope
adc
xor
cs
inc
scas
scas
dec
adc
filds
jnp
lcall
fmuls
push
dec
rcrl
ret
push
mov
cmpsb
jl
fyl2x
scas
mov
mov
xorl
dec
sbb
aaa
test
imul
bound
insb
pop
stc
sub
sti
dec
sahf
fdivs
pop
and
inc
push
iret
jns
pop
push
out
jne
ljmp
lret
or
jmp
xorb
test
xchg
cmp
mov
shl
cwtl
push
dec
scas
push
inc
arpl
xor
pop
ret
sahf
xor
lret
adcl
clc
jne
test
lret
cli
aas
sti
xorb
enter
xchg
imul
sbb
xor
jg
iret
imul
and
jb
stos
lods
add
je
mov
push
adc
push
aad
insb
push
mov
sub
call
sub
adc
fbstp
mov
gs
leave
sbb
xchg
xchg
lahf
inc
xchg
push
dec
xchg
xchg
adc
mov
jbe
popa
dec
mov
cmp
inc
dec
mov
ficoms
mov
push
fistpll
push
in
inc
stc
cs
pop
push
outsb
cmp
aad
leave
inc
pop
cmp
imul
pop
inc
lahf
mov
cmp
mov
sbb
mov
cld
lcall
xor
jmp
pushf
push
xor
loopne
sub
mov
ret
cmp
ret
or
or
in
push
xor
imul
out
imul
pop
sub
lds
shll
jns
mov
loopne
mov
ffree
clc
mov
inc
jle
inc
mov
inc
sub
pop
and
test
mov
mov
lods
cwtl
pop
movsb
imul
jno
in
xor
push
in
cld
sbb
push
xlat
mov
dec
push
aas
movhlps
inc
in
push
pop
arpl
mov
xchg
mov
repz
call
loopne
pop
movsb
movsb
push
xchg
xchg
add
les
aam
popa
dec
push
test
cmp
push
fnstcw
inc
mov
jns
scas
xor
mov
insl
mov
cmp
lock
test
dec
adc
push
int3
sbb
out
add
cmpsl
roll
xchg
jbe
ret
sub
bound
cmp
inc
mov
jle
mov
das
jo
mov
adc
xchg
pop
outsb
invd
adc
xor
int
imul
ja
push
test
pop
insb
jl
ss
cmp
fadds
vmread
call
fsubs
sub
nop
les
xlat
jnp
mov
cmpsb
lock
jmp
jg
inc
pop
sbb
jo,pn
cmp
pop
xchg
xor
push
in
mov
jo
mov
jo
adc
mov
clc
sbb
lcall
sbb
icebp
dec
cmc
inc
stos
daa
push
clc
fwait
pop
jecxz
xor
xorb
andl
sub
rorl
mov
sub
movsb
add
sti
mov
mov
jmp
jae
clc
mov
inc
loope
pop
mov
xchg
xor
fstl
inc
cltd
out
lahf
es
stc
inc
dec
pop
add
cltd
sbb
jnp
sarl
xlat
cmp
xor
leave
push
in
repnz
push
cmpsl
mov
cmp
lret
lahf
jne
mov
pop
aas
mov
cmc
imul
std
arpl
xor
and
push
jmp
clc
mov
in
add
mov
push
js
lea
xor
ret
inc
dec
jmp
inc
xlat
lods
sub
push
adc
loope
mov
push
cmpb
mov
pop
aas
iret
icebp
dec
mov
pop
dec
jno
xorb
dec
jecxz
xchg
mov
lret
sarl
push
mov
or
fcmovb
xchg
add
xor
movsl
push
popa
jne
int
xor
cmp
outsl
or
stc
pop
xchg
mov
jno
jge
and
mov
in
ljmp
jmp
shrb
sbb
sub
push
mov
mov
mov
sbb
pop
push
mov
pop
adc
loope
test
dec
push
inc
dec
cmp
mov
push
ret
out
adc
push
jp
faddl
test
mull
sbb
jle
xor
pop
call
test
dec
mov
inc
lds
mov
cmp
jmp
push
mov
xchg
dec
jmp
and
mov
inc
sub
and
insb
mov
mov
xor
test
iret
pop
das
pushf
mov
das
ret
sub
dec
andl
mov
cmp
push
mov
push
push
xchg
xchg
adc
sahf
and
cmp
cs
xor
xchg
mov
sbb
stc
clc
sub
cmp
icebp
dec
jno
pop
cmpsb
pop
dec
sbb
movsb
mov
mov
roll
or
outsl
sbb
jnp
daa
cmc
and
in
sbbl
out
push
test
mov
inc
sub
mov
insb
and
lods
or
hlt
xchg
push
hlt
and
mov
std
add
nop
inc
mov
xor
repz
repnz
adc
lock
je
les
in
and
test
mov
mov
test
mov
shll
inc
jb
movsb
sahf
add
leave
pusha
cwtl
adc
mov
cwtl
insb
call
iret
and
jge
pop
add
add
jp
enter
jg
pop
bound
jo
jo
call
enter
mov
gs
jp
adc
test
jbe
adc
adc
scas
or
xchg
sub
adc
pushf
jmp
lock
test
adc
adc
and
test
add
jb
popa
out
add
add
add
add
out
mov
xchg
jp
insb
rcll
or
test
add
insb
jle
push
fwait
mov
test
sub
and
mov
sbb
test
imul
inc
loopne
dec
lret
add
mov
sbb
out
or
cmp
and
mov
or
loope
mov
inc
and
mov
and
aas
mov
and
or
pop
mov
inc
cmp
out
add
sub
lcall
push
test
mov
push
mov
pop
dec
pushf
inc
ffree
adc
into
mov
xchg
out
sub
jmp
testl
cltd
incl
movsl
add
inc
ja
test
les
test
sub
dec
aas
out
into
inc
dec
mov
cld
inc
add
inc
and
sti
lock
gs
mov
xor
lods
pop
lods
push
int3
fisubrl
movsl
in
mov
lahf
pop
jg
add
out
push
popf
or
mov
pop
mov
lret
outsb
xor
or
inc
jg
je
jbe
insb
pop
dec
dec
es
mov
in
loopne
or
and
imul
out
xchg
cmpsb
sbbl
test
inc
dec
inc
mulb
hlt
push
fisttpll
push
pop
pop
je
outsb
add
ss
pop
stc
fwait
lret
ljmp
xchg
jge
push
mov
shll
cmp
js
fnstenv
test
jne
js
insb
rorb
in
xchg
sahf
mov
xor
sbb
movsb
outsb
cmp
orl
iret
or
repz
dec
fs
insb
mov
cltd
dec
js
jns
aaa
loope
int
pop
testl
repnz
pop
mov
fiaddl
mov
imul
or
push
sbb
shlb
jno
dec
sub
sub
add
je
xor
and
addb
mov
push
arpl
repz
sub
fnsave
enter
sbb
xlat
loope
xor
into
mov
dec
jg
xchg
cltd
xchg
mov
icebp
divl
lods
jg
imul
jo
lret
pop
push
add
cmp
enter
stos
push
mov
add
orl
aam
sti
push
imul
jmp
scas
insb
push
scas
jecxz
add
test
fmul
sbb
in
ss
mov
out
jmp
insl
int3
xchg
lret
cmpsl
sbb
push
jle
cmp
or
ret
xor
jns
movl
cmp
xlat
mov
mov
xchg
xchg
mov
dec
add
or
enter
movq
dec
inc
pop
sub
push
sub
and
and
movl
in
mov
shr
fcoms
mov
leave
xor
and
inc
fcmovne
stc
mov
push
and
jae
cltd
in
push
lcall
ja
and
aas
imull
int3
rcrl
sub
mov
aam
mov
adc
cmp
and
xor
loopne
mov
dec
fcoml
jmp
push
sti
xchg
aaa
enter
pusha
jp
pop
popf
cmc
dec
jno
dec
mov
fistpl
mov
nop
add
lcall
or
aas
add
outsl
cltd
xor
push
cmp
ljmp
pop
lods
mov
mov
xchg
hlt
add
call
mov
data16
stc
sbb
mov
sbb
sarl
jno
aam
pushf
dec
es
mov
add
mov
jp
dec
pop
movl
xchg
push
lods
jge
in
mov
mov
mov
xchg
inc
les
jmp
or
dec
and
dec
pusha
aad
sar
mov
pop
ret
fwait
xchg
mov
pop
insb
leave
stos
je
jo
jne
mov
lods
mov
pop
or
icebp
fwait
jmp
test
cli
cmp
pcmpgtd
outsl
call
xor
iret
cld
scas
repnz
xchg
lahf
enter
out
outsl
pop
in
iret
jle
or
adc
test
mov
mov
aas
hlt
shlb
outsb
sub
cmp
inc
cltd
fistps
test
mov
adc
cli
hlt
adc
aad
jns
jo
cld
shlb
aaa
data16
mov
cs
adc
push
rcll
in
mov
push
jmp
call
pop
rol
inc
shlb
pslld
mov
in
mov
mov
fisubrl
mov
movsl
test
outsl
shrl
mov
sbb
lds
sahf
dec
daa
es
mov
cmp
lret
imul
dec
xchg
cmp
into
in
fdivrl
popf
or
push
xchg
push
xchg
shlb
into
fldt
adcb
jg
mov
xorb
pop
ss
push
inc
cmp
push
in
add
xorl
int
gs
cmp
xor
ds
adc
out
sub
dec
js
movsl
aaa
pop
fmull
sub
bound
jl
lcall
sbb
test
fcos
addl
cli
rep
sub
ficoms
repnz
inc
js
out
int3
int3
repnz
sbb
and
mov
cs
dec
push
adc
dec
mov
aaa
inc
and
xchg
mov
jo
inc
repz
dec
sti
insl
orb
fstl
fildll
cmpsb
push
push
test
jno
mov
aas
mov
lahf
sbb
test
inc
loope
icebp
stc
push
fildl
jno
mov
stc
xchg
daa
jae
insl
jbe
repz
inc
cli
pop
out
jl
call
stc
lods
popa
pop
sahf
or
push
icebp
xchg
popa
fwait
and
leave
xchg
mov
pop
icebp
test
std
jb
fsubrl
sub
pushf
pushf
xor
rcrl
adc
push
addl
push
push
outsl
xchg
popf
filds
pop
stos
push
dec
push
mov
pop
xchg
add
popf
es
movsl
leave
lock
ret
mov
ret
std
add
xchg
aas
and
imul
fnstenv
inc
rcrl
or
cli
sahf
cltd
mov
movsb
push
in
adc
xor
lds
push
mov
add
aaa
movsl
xor
push
in
out
cmp
push
mov
or
mov
push
bnd
inc
xchg
push
incl
cmp
jae
cmp
in
sub
repnz
es
aad
js
xor
fstl
jp
cmpsb
and
es
inc
adc
into
xor
sarb
cmpsb
imul
and
addl
sahf
mov
cmp
mov
int3
xor
mov
sti
insl
jno
int3
push
or
push
mov
dec
sar
cmpsl
loop
push
jbe
jb
bound
fwait
into
mov
rcrl
or
xchg
lret
imul
push
mov
cli
out
xchg
and
ret
xchg
jnp
or
lret
and
mov
mov
dec
sbb
sti
push
sti
test
xor
leave
out
mov
push
pushf
adc
adc
jne
pop
pop
clc
lock
sub
scas
or
xor
mov
fs
inc
xchg
test
repz
add
addr16
gs
add
pop
xor
jge
and
shrl
std
cmp
hlt
add
fnstcw
sbb
cld
aas
jno
mov
mov
mov
mov
rcll
jecxz
jg
test
insb
mov
mov
mov
mov
stos
into
mov
cmp
mov
jl
lods
inc
xchg
push
inc
fldt
aas
xor
add
movsl
cmpsl
add
mov
and
ret
aaa
call
cld
add
popf
aas
fdivrs
int
dec
dec
int
inc
push
js
mov
mov
push
lock
xor
sbb
sbb
out
dec
sub
push
dec
push
cmc
scas
push
xchg
mov
in
imul
in
fwait
loop
test
aas
xorb
out
push
clc
inc
jmp
arpl
ss
je
push
bnd
sbb
adc
ss
dec
mov
repnz
scas
jno
push
push
cmpsl
pop
jb
lds
xchg
mov
sbb
inc
popa
push
fiaddl
cmp
insl
mov
cmp
adc
push
subb
lret
cli
je
mov
push
daa
inc
mov
inc
loope
out
lock
push
ds
sub
movsl
and
adc
dec
inc
sbb
scas
fwait
sub
mov
lahf
dec
popa
jne
fwait
imul
or
or
dec
mov
lea
pop
popf
or
jg
cmp
pushf
sbb
je
neg
xor
or
cmpsb
push
inc
lock
xchg
scas
xor
xchg
mov
es
push
jecxz
sub
arpl
test
pop
mov
jp
stos
aaa
scas
loopne
jae
xchg
clc
lea
xor
test
mov
push
je
dec
fcmovb
xor
aaa
mov
les
jbe
push
mov
xor
fs
cmp
ret
pop
and
xor
cmpsl
mov
movsl
and
mov
add
xor
pop
add
mov
mov
cmp
add
jb
cltd
dec
push
sbb
pusha
dec
push
jbe
pop
adc
aam
pop
movsb
push
jnp
cld
icebp
fsubs
inc
mov
outsl
cmp
pop
lock
add
scas
jo
jmp
mov
stos
pusha
jle
lahf
rolb
loopne
xorb
push
popf
jo
push
or
mov
loop
mov
and
aam
sti
xchg
xchg
jns
imul
cmp
mov
jmp
sahf
repz
adc
cmpsb
mov
and
leave
mov
ficoms
push
and
arpl
sbb
cmp
cmp
pop
add
mov
sub
push
push
sbb
mov
dec
jns
std
test
and
scas
cmp
sbb
cmp
or
inc
ss
add
dec
and
mov
sbb
inc
les
sub
jp
in
ret
bound
lods
mov
and
enter
cmp
aas
and
cmp
insl
shll
mov
addr16
add
bound
mov
dec
mov
add
aad
push
xchg
or
inc
dec
ljmp
repnz
push
rcrb
mov
pushf
andb
xor
mov
nop
int
sub
loope
outsb
sbb
xchg
jno
cmc
mov
jp
push
dec
mov
aaa
xchg
add
lahf
push
or
fstpt
psubb
mov
into
mov
sub
dec
or
sbb
fcoml
pop
or
adc
hlt
je
mov
stc
iret
aas
mov
sbb
daa
inc
dec
and
or
dec
adc
xchg
cwtl
and
add
jmp
dec
cmpsl
je
cld
scas
ret
xor
or
loop
fldcw
ror
push
pop
repz
out
movsb
xor
add
xchg
dec
js
pop
sub
xchg
add
outsb
add
mov
ja
jmp
adc
test
jae
add
xchg
in
cmpsb
dec
test
add
and
jns
sbb
into
sbb
test
scas
cmp
jno
movsb
xlat
xchg
into
and
stc
mov
ja
add
sub
mov
add
rol
push
movsl
adc
jmp
cmc
inc
aad
jno
jns
cmpsl
clc
jl
sbb
call
lds
popa
js
mov
sbb
into
jmp
cli
notb
mov
sahf
mov
mov
mov
xchg
hlt
cmc
xor
aad
test
jp
jmp
pusha
bound
sbb
or
xlat
jg
push
add
in
dec
push
loopne
ja
lret
push
fs
adc
adc
hlt
mov
popa
stc
add
cmp
mov
jp
and
pop
mov
adc
lea
inc
inc
out
pop
lahf
dec
adc
xchg
mov
sbb
ss
popf
or
and
adc
cmpb
pop
rclb
or
mov
mov
es
aad
lret
jno
rep
sub
lret
loope
fwait
and
push
xchg
addl
or
mov
jmp
mov
push
xor
addl
inc
xor
pop
push
in
wbinvd
lahf
call
sbb
jg
mov
mov
lds
adc
fisttpll
movsl
cmp
out
jle
adc
scas
jp
movsl
and
lahf
test
inc
cmpl
hlt
inc
loope
out
dec
into
sar
pop
nop
or
lea
inc
lds
dec
fwait
loope
inc
pop
and
fst
push
dec
inc
clc
lret
dec
les
sbbl
sbbb
cmp
iret
mov
xchg
fists
iretw
iret
je
das
repnz
mov
std
rcl
popf
sub
inc
xor
jge
jecxz
cld
loope,pn
xchg
xor
dec
mov
mov
sub
pop
arpl
ret
mov
cmp
lods
js
nop
int3
test
xchg
in
js
cmc
push
add
and
dec
push
arpl
lahf
je
imul
cmp
xor
dec
and
jge
mov
xlat
pop
cld
mov
sub
sti
loopne
jns
fcmove
imul
mov
iret
mov
inc
xchg
fdivl
add
gs
dec
or
xchg
xor
jg
adc
int3
rcrb
inc
dec
leave
jno
push
repz
adc
mov
jg
push
mov
add
or
or
mov
add
mov
or
mov
clc
int3
shrl
cmc
scas
push
adc
cmp
fistl
sub
and
sub
fmull
sbb
push
mov
dec
stos
add
gs
out
bound
adc
xchg
cmpsl
fildll
fildl
add
jl
js
push
popl
sbb
mov
jns
jmp
lahf
inc
mov
lret
js
loopne
stos
inc
cmp
mov
or
fsub
stos
xlat
mov
or
popa
sub
pushl
clc
pop
pushf
sub
mov
xchg
jp
mov
test
push
loopne
mov
adc
test
or
mov
outsb
loope
add
cmp
mov
out
testl
outsb
dec
stos
lret
or
stc
mov
cmp
lock
adc
add
jle
into
mov
loop
mov
dec
daa
stos
sub
jns
push
mov
pop
jbe
cmp
call
add
out
mov
mov
aad
mov
or
xchg
enter
ret
in
daa
bound
mov
clc
jns
add
cmpsb
ss
mov
sahf
mov
mov
mov
sub
or
push
popa
push
sti
xor
jo
xchg
xchg
xchg
xchg
pop
push
and
daa
movsl
call
mov
stos
cmp
inc
sete
and
adc
xchg
jle
loopne
icebp
mov
dec
inc
aaa
xor
or
xor
pop
fnstcw
xchg
lahf
add
cltd
decl
xchg
in
fnsave
inc
inc
in
imul
ds
stc
lods
push
repnz
cwtl
mov
pop
mov
xlat
addl
outsl
cld
xchg
push
or
inc
in
mov
xchg
pop
stc
ret
add
inc
push
pop
pop
pop
daa
rorl
lock
jg
add
mov
add
pop
into
inc
idivl
sbb
movsb
sbb
and
popa
push
dec
js
xor
sub
dec
xor
adc
and
test
imul
insb
lcall
push
cltd
ffree
and
repnz
mov
sbb
mov
stc
add
mov
push
inc
sahf
add
and
into
inc
andl
inc
insl
push
lahf
insl
cmpsl
add
push
sbb
jae
lods
std
mov
loopne
in
pop
inc
movsl
andb
cs
mov
cmc
loop
mov
inc
mov
pop
outsl
cmp
sbbw
lahf
test
and
mov
pop
imul
sbb
xchg
dec
stos
nop
lods
bound
adc
cmp
stc
mov
dec
insb
mov
xchg
ret
add
mov
js
lods
icebp
into
push
pusha
add
push
js
dec
cltd
shl
sti
inc
lea
and
les
out
cmpsb
dec
aas
gs
out
mov
push
xor
shrl
sub
push
or
push
fs
xchg
shll
xchg
jmp
or
adc
in
stos
push
pop
lds
decl
inc
jge
pop
jp
lock
lea
enter
push
dec
or
or
popa
mov
mov
inc
scas
mov
cwtl
or
idivl
push
dec
ficomps
shll
sbb
jno
add
fistpll
cmpsl
pop
data16
fdivrp
xchg
cmpl
rcl
add
insb
jp
enter
les
mov
nop
fcomps
inc
stos
mov
jo
mov
lcall
push
mov
mov
push
dec
mov
popf
mov
dec
iret
dec
xlat
cmp
std
or
loopne
mov
push
inc
sub
and
lret
inc
fldenv
add
js
loopne
mov
movsb
jp
out
shll
cwtl
orb
lds
jl
cs
inc
mov
xchg
ret
pop
push
push
dec
mov
pop
add
jmp
mov
push
xchg
gs
ljmp
sub
or
cmpsb
push
sbb
jmp
data16
in
mov
pop
stos
stos
dec
jns
test
sahf
insb
rcrl
adc
pop
dec
and
inc
xchg
xchg
xchg
mov
cs
rcll
add
cmpsb
loop
sahf
cmp
dec
cli
jle
push
fxch
xchg
stos
cs
jnp
xchg
mov
add
aam
adc
sbbb
arpl
mov
push
scas
inc
push
repz
outsl
jge
stos
or
stos
leave
std
push
dec
mov
aaa
jb
clc
leave
bound
cmc
jle
dec
sarl
jl
add
mov
pop
xchg
lcall
loope
addr16
sub
cmp
mov
and
push
mov
xor
out
add
jl
cmp
fbld
push
or
pop
inc
and
lods
ret
mov
or
shlb
test
dec
adcl
add
lahf
cmp
jp
cltd
mov
fcmovu
or
mov
lcall
jmp
jecxz
stc
incl
inc
push
jne
sti
imul
adc
and
dec
rcrl
bsr
repz
and
popf
jg
adc
cli
cmp
or
bound
data16
mov
xor
dec
daa
mov
sahf
call
mov
in
sarl
ja
mov
dec
push
pop
push
scas
bound
mov
mov
loop
out
in
xorl
dec
sbb
rcll
pop
scas
add
mov
dec
loop
sti
mov
push
xchg
xchg
pop
ffree
rolb
dec
hlt
loop
fwait
test
out
pop
add
or
mov
mov
lret
stos
dec
pop
ret
jns
lcall
adc
xchg
clc
push
pop
xlat
test
negl
in
aaa
sub
xor
sub
shl
testl
incb
js
dec
add
lock
xlat
lret
stc
push
sbb
jg
imul
push
out
fwait
daa
sbb
sbb
lret
sub
mov
mov
mov
mov
jae
rclb
lea
ficoml
xchg
daa
cld
outsl
orb
pop
pop
add
movsl
xor
test
sub
shl
rcll
mov
adc
dec
mov
loop
mov
je
mov
mov
dec
fldl
mov
xchg
les
sbb
add
rolb
aas
popf
scas
add
jbe
das
dec
inc
nop
pop
mov
fwait
sub
stos
xchg
fsubl
test
pop
mov
stos
mov
lahf
ds
add
pop
in
fnstenv
in
add
test
popa
ljmp
aas
pop
mov
or
mov
hlt
ljmp
inc
stos
sbb
pushf
sub
stos
sub
jns
mov
scas
xor
add
mov
test
cli
hlt
pushf
mov
dec
lahf
icebp
pop
fs
lock
push
adc
ja
in
sub
mov
and
outsb
popa
adc
dec
ret
push
faddl
test
fnstenv
jb
or
nop
or
call
negb
mov
mov
out
cmp
inc
or
pushf
jecxz
push
les
mov
lea
adc
xchg
mov
dec
inc
pushf
pop
cmp
daa
lret
cli
and
jge
adc
insb
repnz
add
ss
outsb
cmp
shll
xor
adc
xchg
call
adc
push
inc
pop
lods
xchg
das
mov
sbb
sub
roll
push
fdivl
push
popa
rclb
adc
push
cmp
mov
cwtl
cmp
or
hlt
scas
iret
and
rcrb
aaa
xchg
xor
mov
jmp
popf
add
or
sbb
ljmp
ret
ss
fnstenv
loope
add
pop
cmp
xchg
aaa
pop
mov
mov
push
xchg
xchg
fisubrl
ss
cmp
scas
or
inc
in
shl
mov
push
adc
pop
pop
mov
iret
sahf
cmpsb
adc
mov
mov
leave
lcall
mov
pushf
out
lret
and
nop
jge
test
test
outsb
sahf
mov
nop
ljmp
cs
cmpsl
lcall
mov
push
je
aam
dec
mov
dec
pop
clc
pushf
add
inc
jmp
and
inc
inc
repnz
or
cli
int
into
push
xchg
cmp
lods
inc
inc
and
jae
outsl
push
cli
xchg
sahf
cmp
stc
xor
lea
push
insb
adc
xor
pop
push
dec
fidivs
pushf
imul
adc
cmpsb
mov
mov
mov
dec
push
inc
dec
ja
test
loope
inc
test
push
add
jb
test
nop
mov
and
inc
push
lret
jge
flds
adc
push
stos
cmp
xchg
mov
leave
add
dec
test
xorb
aaa
xchg
mov
jge
popf
cmp
pushf
rcr
call
jno
int
mov
pop
jg
push
pop
ljmp
out
inc
sub
cmp
jbe
pop
push
test
lea
cmp
nop
mov
or
dec
push
aas
mov
cmp
xchg
push
shll
call
push
jge
or
inc
filds
cmc
adc
or
xor
inc
aad
mov
pop
cmp
mov
xor
sub
or
arpl
sbb
std
xchg
sub
in
mov
idivl
xchg
add
mov
in
stos
rclb
or
jns
mov
cmc
jge
sbb
add
xchg
mov
das
xchg
xor
sahf
pop
xchg
push
lcall
pop
in
xor
sbb
xchg
mov
jbe
push
popf
adc
andb
jge
ret
nop
popf
clc
sub
and
in
or
dec
and
jge
inc
pop
xchg
xor
jnp
lcall
in
into
inc
js
outsl
sbb
sar
pop
xchg
dec
lods
jae
mov
push
repz
jecxz
movb
dec
stc
sbb
fsubs
addb
in
push
pop
arpl
dec
xor
ror
pop
dec
test
sbb
adc
xchg
cmp
les
sbb
or
cmp
fcmovne
or
cmp
test
inc
popa
mov
lret
xor
cmc
mov
jl
sub
arpl
jne
rorb
cmp
scas
jg
inc
xor
repz
add
sub
scas
push
xor
pop
testl
lcall
push
jl
cwtl
xlat
xchg
cmp
jae
adc
lods
dec
outsb
repnz
sahf
mov
pop
frstor
call
pop
push
inc
cmp
and
jmp
fs
iret
daa
call
push
lock
pop
mov
or
xor
xchg
imul
dec
xor
inc
popa
stos
insl
mov
sub
inc
je
call
adc
loope
mov
hlt
adc
mov
lds
insl
push
stos
cmpsb
aam
clc
negb
sbb
jnp
push
inc
ljmp
pop
jle
xchg
or
ss
ret
stos
repz
pop
adc
xchg
insb
pop
lcall
daa
mov
xchg
repnz
sub
push
sub
sbb
mov
fwait
int
sub
sub
adc
sbb
adc
dec
cmp
test
icebp
iret
fsubrp
push
sbbl
push
or
sbb
jne
aam
iret
pop
ret
cmp
dec
adc
lret
xchg
fbstp
cmp
outsl
pop
ret
data16
pop
add
cmp
jns
and
and
lcall
sarb
mov
sbb
and
arpl
sahf
loop
xchg
mov
shlb
in
sbb
sbb
and
or
or
ljmp
xchg
mov
int
rcrl
push
lods
dec
xor
hlt
repz
ret
les
add
cmp
adc
jge
scas
shl
and
cmp
faddp
mov
aas
pop
add
xchg
push
test
mov
fcmove
nop
ret
movsb
push
sub
lods
xor
jmp
inc
std
mov
xor
jle
lcall
sbb
xor
push
aaa
cltd
outsb
and
movsb
sbb
adc
sub
fists
roll
daa
or
inc
push
xor
mov
sbb
fisubrs
xchg
jle
fdivrl
js
in
fisubrs
dec
bound
push
or
pushf
lret
aad
pusha
push
cmp
sub
sub
outsb
dec
pop
loope
sub
mov
pop
xchg
js
push
jae
jns
xor
mov
loop
ss
bound
pop
xchg
xor
hlt
cmc
jne
add
sub
mov
sub
jo
fdivs
pop
xchg
push
cmp
or
jbe,pn
pop
lock
add
test
push
bndldx
clc
shll
push
icebp
fstpl
xor
jns
cmpsb
xlat
ja
mov
jle
add
in
xchg
sbb
add
fsts
xlat
or
mov
inc
sbb
repz
push
xchg
pusha
push
aas
cs
stos
ja
sbb
fcomps
pop
push
adc
jne
inc
mov
mov
xchg
sti
xor
clc
scas
sbb
ds
lret
divl
mov
push
sbb
push
sub
popf
insl
dec
xchg
cmp
cld
add
imul
sub
arpl
bound
push
mov
out
mov
lods
jle
inc
int
jae
mov
add
mov
jae
in
and
pop
mov
jno
mov
aam
sub
or
gs
test
jle
jg
lret
push
test
pop
lods
sbb
addl
es
sbb
popf
push
mov
pop
ss
cmp
int
out
push
jp
fstl
push
js
insl
mov
pop
mov
xlat
pop
cmp
mov
or
ja
arpl
push
test
sub
dec
sbb
es
enter
xor
jmp
fldenv
jno
mov
mov
push
sub
push
insl
or
xor
adc
or
call
dec
pop
out
out
test
add
mov
fwait
cmpsb
into
insl
sub
or
rcrb
mov
push
andl
mov
dec
sub
add
pop
icebp
std
mov
mov
jl
sbb
mov
movb
popa
enter
loopne
in
cwtl
mov
incl
les
add
fwait
vmovhpd
leave
pushf
push
jle
mov
mov
out
mov
das
into
mov
xchg
fidivrl
rorl
aam
popf
xor
call
inc
stc
notl
dec
jl
shlb
faddl
lods
mov
push
sub
ds
nop
jl
insl
scas
xchg
cmpsl
std
adc
mov
sbb
arpl
inc
repnz
sbb
je
movsb
cs
aam
nop
jb
daa
mul
jl
inc
mov
fidivs
jl
fildll
pushf
lahf
imull
push
pop
fistl
xchg
ret
mov
clc
jnp
ss
or
inc
ss
test
lock
and
idiv
sbbl
popl
sbb
dec
int
sub
or
xchg
add
mov
cli
jecxz
fimull
in
movb
mov
and
lahf
lods
sub
pop
in
frstor
aaa
gs
sub
pop
scas
cmc
loopne
insb
loope
call
or
adc
lret
push
mov
imull
pop
out
shlb
inc
idivl
sarl
push
out
inc
pop
push
test
add
push
adc
stos
mov
lods
cli
sarl
in
popa
jns
stos
sub
js
xor
and
inc
or
add
and
pop
mov
out
inc
jle
push
sbb
mov
imul
hlt
push
adc
pop
ds
aam
repz
subb
enter
pop
adcl
sub
fsts
cmp
mov
xchg
cmp
das
xchg
repnz
ds
ret
insl
call
cmp
mov
aaa
lods
jle
and
mov
cld
mov
ret
jmp
les
mov
aam
cmp
xchg
mov
push
fcmove
js
or
cli
int
lret
or
popf
mov
inc
ss
jecxz
adc
sub
push
mov
mov
inc
repz
insl
insl
notl
mov
sarb
ret
sub
mov
sbb
pop
mov
cmp
mov
cmpl
insb
ja
aam
nop
lds
push
jo
cmp
out
movsl
lods
call
inc
mov
test
aam
xchg
mov
cmp
xor
jl
imul
inc
dec
xor
movsl
mov
repz
inc
cli
jp
inc
push
inc
push
loop
repz
xchg
mov
pop
push
mov
jae
pop
loop
std
movsl
ljmp
loop
arpl
loopne
pop
test
pop
push
or
mov
ficomps
jne
inc
dec
xor
fldcw
adc
sbb
cmpsb
dec
sbb
stos
pop
xchg
mov
mull
add
aas
add
dec
inc
mov
enter
insl
stos
sbb
clc
lret
push
jno
outsl
xlat
or
int3
sub
cmp
cwtl
jecxz
inc
sahf
xchg
pushf
sti
cmp
push
jnp
add
mov
jge
out
push
jp
sti
ret
in
adc
das
int
lret
js
mov
sbb
pop
push
mov
dec
inc
daa
dec
xor
scas
inc
pop
xchg
cs
pusha
push
xchg
sahf
sub
clc
pusha
xchg
leave
aaa
popl
cmc
add
lods
adc
push
push
cmp
insl
hlt
std
add
cmpsb
or
test
lret
mov
in
xchg
std
jb
xlat
adc
out
sub
sbbl
inc
add
and
es
push
cmpb
xchg
test
jnp
cltd
in
sbb
mov
aam
cmp
movhps
gs
addl
scas
scas
xor
pop
or
push
inc
jbe
xchg
cmp
out
fcmovnb
inc
mov
fnstenv
loop
mov
negb
insb
shl
jbe
and
test
jne
dec
outsl
mov
lret
adc
and
sti
adc
sbb
pushf
out
xor
dec
or
fbld
lods
add
loope
dec
std
les
cmc
lds
fwait
lds
sub
or
push
xor
notl
lcall
inc
jp
jg
xchg
sbb
or
pop
jo
jle
fwait
lods
sbb
and
or
jno
dec
and
xor
jnp
inc
cmp
int
xchg
arpl
adc
sbb
sbb
or
pushfw
mov
out
arpl
js
loope
lcall
mov
and
inc
mov
imul
push
xor
push
ret
mov
push
add
clc
out
leave
notl
popf
imul
stos
jge
lret
ret
or
pop
pop
xor
cs
fisubs
pop
loopne
jle
xchg
inc
cmp
popa
mov
push
loope
leave
shrb
adc
paddb
push
das
pop
aad
pop
mov
sbb
jae
mov
adc
movsl
fs
out
roll
xor
pop
popa
gs
clc
stos
sbb
inc
inc
daa
in
lods
mov
jl
dec
ja
add
dec
xchg
rcrb
mov
rorb
loope
je
push
lcall
adc
mul
push
push
mov
cmpsb
sbb
int3
add
in
fwait
test
out
xchg
sub
test
jmp
inc
jns
insl
stc
into
movups
pop
or
stc
test
lock
cmp
mov
pop
ficoml
cmp
dec
fwait
xchg
xor
push
test
ret
nop
fnstcw
pop
xor
jbe
mov
xchg
lea
xchg
and
xchg
pop
sub
sbb
mov
and
xchg
out
sub
xor
push
mov
outsb
bound
push
sbb
jno
das
data16
out
andl
lcall
ror
cmp
mov
mov
cmpsl
jae
ljmp
dec
push
mov
sbb
dec
stc
imul
xchg
mov
mov
cmp
mov
sahf
js
fs
ret
mov
out
js
mov
mov
cwtl
rclb
dec
test
gs
and
ss
rorb
mov
arpl
push
in
cmp
sahf
mov
sbb
out
pusha
pop
cld
adc
inc
jl
jmp
xor
add
sub
mov
mov
in
mov
das
pusha
test
dec
inc
bound
inc
je
int3
pop
mov
fiadds
push
mov
pop
add
jg
scas
mov
call
loope
rol
dec
xor
mov
cmp
aas
mov
push
outsb
mov
jnp
xor
sub
daa
call
or
outsl
mov
es
inc
inc
push
int3
jne
pop
jbe
inc
in
add
mov
std
xor
or
test
loope
xchg
fldl
push
icebp
pop
inc
or
mov
inc
sbb
movsb
inc
lods
pextrw
scas
dec
adcb
aam
sub
xchg
mov
paddusb
daa
mov
in
sbb
mov
sbb
and
mov
xor
lahf
ret
fnstsw
add
push
lahf
repz
jae
insl
shrb
mov
push
add
leave
into
mov
in
jmp
shll
mov
in
jle,pn
dec
jnp
test
push
loop
xor
pop
pop
mov
mov
in
sbb
js
xchg
test
jmp
mov
lahf
xchg
pusha
mov
out
addb
jae
inc
gs
add
mov
js
pop
in
xchg
ret
pusha
mov
loopne
cmpsb
cltd
mov
xchg
dec
push
pop
cli
sbb
jne
das
cld
xor
push
xor
sub
mov
sti
jmp
add
inc
mov
pop
scas
inc
jge
pop
cmc
ljmp
scas
inc
mov
or
repnz
jle
sbb
nop
mov
jmp
fistpl
aam
push
popa
pusha
dec
icebp
loopne
xchg
aad
fstpt
or
push
push
jecxz
test
inc
iret
pusha
push
outsl
pop
lret
push
xor
sub
in
adc
cmp
mov
add
ljmp
or
lcall
and
mov
inc
mov
mov
jno
cmp
pop
jg
leave
push
add
xchg
mov
rorl
sbb
mov
lahf
hlt
add
inc
fiaddl
icebp
cmp
shrl
lahf
cmpsb
mov
hlt
stos
out
fsubr
pop
xchg
jne
and
lret
subl
add
std
xor
pop
mov
call
or
in
jns
jns
mov
stc
and
sbb
pop
xor
cs
test
aad
sbb
mov
int
neg
push
ror
xchg
add
or
popf
jmp
loopne
jecxz
mov
decl
inc
pop
xchg
je
fimuls
xchg
pop
sbb
xchg
mov
je
xchg
mov
lahf
jb
dec
fwait
xor
pop
mov
jns
shlb
mov
lret
pusha
dec
adcl
pop
es
fs
sbbl
mov
sbb
and
dec
lret
lahf
push
mov
and
xchg
nop
test
nop
neg
lahf
sbb
push
ljmp
push
in
out
jb
and
sub
negb
imul
jno
sub
and
sar
int3
out
sub
ret
sbb
scas
or
sub
aad
or
mov
mov
pop
xchg
mov
push
xchg
adc
lods
mov
sbb
and
sbb
push
mov
sbb
push
dec
lods
rcll
fdivrs
out
jne
bound
std
mov
sahf
pop
inc
fnstsw
lahf
into
mov
lods
pop
fdivs
sbb
xlat
sub
jmp
cmc
mov
in
ja
push
xor
cmp
mov
pop
cwtl
cld
ss
jo
jb
movsl
inc
sub
jmp
mov
nop
xor
call
cltd
jmp
xor
orb
sub
jg
mov
cld
loope
dec
sbb
hlt
imul
adc
daa
das
mov
mov
jl
inc
mov
xchg
stos
out
jo
sbb
mov
ja
cwtl
cld
popa
bound
imul
fstps
inc
iret
movsb
pop
into
and
pop
or
out
test
xor
gs
stc
lret
pop
cmp
fwait
test
and
mov
add
sub
add
add
shrb
mov
test
fistpl
popa
xor
inc
int3
jo
cmpsl
jmp
jecxz
push
ret
test
data16
adc
shll
push
rorl
into
xor
dec
xor
in
orl
in
jmp
xor
fistpl
leave
push
stos
subb
stos
xchg
adc
adc
pop
ror
cmp
pop
daa
xor
sbb
and
mov
and
int3
outsb
cmp
xlat
test
cmp
and
scas
fisubl
aas
xchg
xor
add
cwtl
sbb
jg
mov
int3
and
into
aam
sub
mov
lahf
inc
popa
push
pop
out
xor
mov
or
xchg
imul
sbb
xchg
imul
fs
inc
xchg
dec
or
push
cmp
jbe
nop
stc
daa
js
xor
ss
sub
push
test
and
or
repz
bound
jle
inc
push
and
fnstsw
jge
aas
bound
cs
es
push
sbb
sub
mov
fwait
repz
scas
repz
cmp
add
sbb
hlt
ljmp
jg
xchg
mov
jnp
cmp
xor
js
sbb
sbb
pop
add
cmp
vmread
xorl
bound
call
scas
movsb
lret
pop
push
push
call
cmc
cmpb
lock
push
pop
push
int
mov
cmp
popf
mov
lret
fimull
inc
insl
jne
or
add
shlb
lds
mov
mov
pop
mov
sti
sarl
mov
movsb
lcall
out
ret
and
sub
cmp
subb
push
cmpsl
test
in
dec
sub
push
sbbb
fwait
xchg
mov
fnsave
or
es
ror
mov
scas
mov
jp
bnd
scas
hlt
push
adc
mov
sahf
mov
mov
daa
arpl
sbb
sbb
push
sub
lds
stc
dec
js
pop
lods
popa
or
ret
pushaw
cmpsb
mov
mov
xchg
push
aam
rolb
mov
push
jle
sbb
jbe
xor
ficompl
cmp
iret
and
push
loopne
push
pop
sub
adc
mov
xor
pop
fxch
shr
out
rorb
sub
add
out
mov
adc
lret
les
add
xchg
mov
push
in
jge
dec
mov
add
mov
icebp
add
and
add
rcrb
fistps
jnp
in
icebp
aad
xorl
negl
xor
jo
dec
imul
cmc
push
nop
jne
ret
and
fs
pop
call
mov
ret
scas
lret
or
inc
pop
nop
dec
daa
dec
mov
pop
cltd
mov
dec
addr16
pop
adc
dec
jp
adc
xchg
je
rclb
in
pop
mov
pop
dec
iret
aaa
fcmovbe
std
ja
test
enter
xor
in
pop
xorb
fstl
mov
icebp
and
mov
dec
idivb
ret
mov
fisttpl
xchg
jmp
fwait
insl
imul
fcoml
scas
les
inc
int3
mov
jbe
sbb
mov
mov
cld
xchg
mov
call
lahf
int3
repz
and
inc
mov
sub
inc
in
std
mov
mov
mov
mov
insl
stos
pop
test
and
add
popf
pushf
jg
sub
popf
pop
std
lea
rcrb
std
xchg
call
and
dec
or
sbb
inc
notb
arpl
sbb
push
pause
les
cltd
ja
xchg
test
cmp
cltd
sarl
jmp
test
add
aam
inc
fidivrs
aad
jecxz
xor
fldt
addb
lret
xchg
imul
nop
dec
dec
nop
fstps
jnp
cltd
sti
out
addr16
js
addr16
rcll
mov
sub
pop
mov
push
jecxz
jno
mov
iret
push
mov
rorl
stc
fwait
adc
and
ljmp
subb
add
lret
xor
int
xchg
jle
inc
ret
xor
imul
dec
mov
mov
movsb
add
dec
dec
mov
jle
cmp
mov
sub
sbb
sub
fsubrs
push
xor
cmpsl
daa
ja
or
jnp
xlat
adc
mov
dec
jecxz
mov
sub
and
and
pop
xchg
out
shlb
cmp
push
mov
nop
sub
daa
jb
mov
cmp
xor
or
mov
lahf
xor
add
or
ficoml
rcl
loop
leave
and
enter
out
jecxz
outsl
cld
xor
ret
insl
mov
inc
jbe
ja
push
icebp
clc
jle
cmc
hlt
and
notl
xchg
xor
gs
add
sub
dec
mov
mov
xchg
test
xchg
gs
jge
in
lea
or
push
push
and
icebp
sbb
pop
mov
or
add
int
xchg
add
enter
push
cmpsb
hlt
sub
test
std
js
push
shlb
pop
out
loopne
jbe
xchg
jp
data16
mov
xorl
cmp
insl
adc
inc
push
pop
mov
test
mov
sti
sbb
mov
inc
mov
dec
lods
repnz
and
in
sub
jg
mov
sbb
jnp
imul
gs
and
je
arpl
mov
adc
mov
je
xchg
setne
mov
decb
inc
mov
and
mov
in
inc
sub
sbb
mov
mov
adc
mov
test
call
stos
cmp
or
mov
pop
push
sbb
pusha
jns
and
sub
mov
mov
call
dec
cli
mov
leave
jb
inc
add
cmp
aad
adc
mov
aas
cwtl
pop
sub
inc
in
je
test
xchg
lret
ret
mov
clc
pushf
xor
icebp
scas
mov
cmpsb
inc
pushf
lea
add
mov
iret
scas
inc
pushf
sbb
fs
leave
testl
test
jge
in
cmp
into
inc
inc
xor
pop
lods
lahf
push
adcb
scas
js
insl
stc
jge
bound
mov
movsb
ss
lock
push
mov
bound
inc
mov
add
pop
inc
inc
jp
pop
movsb
sti
mov
jmp
outsl
sub
fnsave
ret
jp
xchg
es
lds
pusha
mov
stc
cli
add
mov
pop
inc
mov
daa
cmpsb
mov
push
pop
jp
sub
xchg
mov
xchg
xchg
repz
icebp
ljmp
fdivl
mov
arpl
test
mov
in
cld
mov
nop
inc
mov
dec
in
les
add
cwtl
dec
stos
ret
movsl
insb
movsb
pusha
jle
lods
and
inc
cld
mov
add
adc
cld
aaa
test
test
insb
xchg
and
loopne
mov
pop
add
dec
rolb
cld
dec
fcompl
pop
mov
stc
push
outsb
mov
push
push
cli
arpl
movsb
inc
push
scas
push
movb
adc
mov
and
pop
mov
pusha
cmc
adc
cmpsb
daa
jne
jg
js
xor
loopne
cltd
dec
inc
dec
daa
mov
add
mov
xor
loope
rol
lcall
outsl
mov
jb
movsb
jne
test
jae
fstpl
ret
sbb
xchg
insb
fs
sub
into
loopne
popf
ret
pop
out
mov
call
imul
jb
xor
lcall
pop
mov
cltd
outsl
sbb
jp
das
aaa
loop
movsb
mov
in
xchg
mov
hlt
sub
push
out
jbe
sbb
sbb
inc
test
scas
inc
test
std
xchg
jmp
xor
imul
sbbb
jl
jp
cli
insl
add
fnsave
out
fistpl
jne
loop
push
aas
or
popa
add
int3
inc
mov
sub
and
rcl
ds
mov
sarl
pop
push
add
aam
jb
imul
xchg
rcll
dec
fidivl
mov
push
jge
test
jg
push
mov
xchg
lahf
mov
push
mov
dec
inc
xchg
jecxz
add
test
ret
inc
push
dec
fdivrs
dec
pushf
aaa
inc
inc
inc
outsl
adc
mov
or
sbb
push
pop
out
pop
inc
jae
sbb
xor
lods
jbe
imul
dec
or
jge
add
lock
outsl
testb
add
aam
push
dec
rorb
ficompl
sub
aaa
lret
inc
sub
push
mov
or
shr
mov
push
lcall
lcall
ss
ds
xor
lcall
fcomp
mov
sub
movl
pop
inc
jg
push
rcll
scas
mov
mov
orl
mov
xchg
ffreep
test
gs
xor
ja
hlt
mov
test
jbe
xchg
pusha
rcr
sub
mov
das
fidivrl
lds
adc
sub
adc
scas
inc
mov
pop
mov
inc
pusha
test
xchg
inc
mov
inc
lods
pusha
cmp
aam
mov
hlt
jecxz
and
adc
mov
xor
jmp
and
inc
pop
inc
mov
push
jecxz
fsubrl
mov
cmpsb
push
inc
sub
shll
jbe
inc
dec
std
mov
fildl
stos
pop
mov
sbb
rol
cltd
repnz
testb
pop
dec
mov
sub
rol
xchg
repnz
not
bound
rolb
fsubl
loopne
stc
enter
or
jo
xor
shl
sub
test
inc
or
cmc
push
xchg
ret
pop
add
shr
xor
jb
imul
inc
dec
ret
cmp
mov
inc
movsb
inc
jp
adc
xor
xchg
sub
sbb
jecxz
lods
std
xor
pop
cli
mov
xor
push
cli
repnz
fldt
mov
add
ror
out
popw
push
sbb
ja
call
scas
xlat
fsubl
push
rorb
das
push
mov
inc
sahf
adc
xor
lret
out
fisubl
loopne
fstl
push
outsb
cmc
inc
nop
and
add
jne
cld
adc
ds
fwait
pop
fimull
add
sub
push
mov
inc
scas
xor
stos
and
lock
gs
cld
sahf
push
cmp
push
fdivs
inc
xchg
and
adc
repnz
mov
std
and
insb
xchg
mov
lcall
pop
mov
lds
mov
sub
add
arpl
add
dec
pop
lods
cmp
pop
rcll
ficomps
js
dec
notrack
out
icebp
rcr
jecxz
loopne
push
fmuls
push
out
dec
sub
rcrl
test
push
sub
xor
jp
loop
lret
fadds
jecxz
mov
mov
icebp
xchg
lcall
aam
adc
push
mov
cli
push
mov
or
sbb
mov
mov
xor
in
jns
sbb
pop
jo
jl
arpl
cmp
mov
push
add
xchg
cmpsb
mov
enter
loopne
in
scas
mov
lcall
cmp
pop
cmp
cmp
fisubrl
je
fsub
xlat
testl
cmpsl
xchg
cmp
repnz
sbb
cmp
frstor
jb
xor
push
cs
lock
mov
in
mov
iret
dec
xor
popa
xchg
fld
popa
dec
mov
and
orb
inc
xor
mov
cs
dec
aas
inc
adc
mov
stos
not
mov
jae
in
dec
add
fs
inc
cmp
jb
inc
cli
imul
add
push
mov
pop
adc
jo
sbb
xorl
jbe
sbb
pop
data16
imull
push
or
inc
cmp
push
xor
idiv
jge
xlat
cvtps2pi
cli
push
xor
push
mov
dec
jl
pop
ss
xchg
clc
jo
inc
push
push
pusha
mov
mov
fstpl
into
inc
cwtl
aad
add
outsb
jnp
sub
out
xor
ret
xchg
sub
lcall
and
outsl
in
daa
mull
mov
dec
in
push
popa
xor
or
loopne
mov
mov
pop
outsb
in
push
xor
sbb
pushf
add
xchg
jle
add
lret
inc
add
icebp
jle
jae
cmp
dec
imul
push
fisttpl
or
jmp
cld
mov
enter
or
faddl
inc
idiv
and
cld
popa
pop
repz
ja
sbb
or
adc
lret
inc
cmovne
data16
leave
adc
mov
fcmovnbe
xor
add
jno
mov
push
add
jge
inc
sbb
loop
stos
add
sahf
pop
xor
and
push
faddl
inc
cli
xchg
popa
xchg
test
lret
sub
nop
adcl
push
scas
dec
cmp
icebp
cmp
dec
imul
in
aas
mov
imul
inc
and
adcl
mov
testl
xor
xlat
mov
ss
adc
and
inc
xchg
ljmp
jle
icebp
push
cmpsl
loop
addr16
ds
xchg
add
in
das
movsb
sbbb
lods
outsb
rcll
cmpsl
pop
cmpsl
ds
repnz
sbb
idivb
rcrb
sbb
clc
inc
rcrb
int
rol
sar
jae
mov
sub
lea
cs
inc
loopne
cmpsb
mov
xor
sahf
popa
loop
int3
aad
mov
xchg
inc
jg
xchg
sub
pop
ja
pop
mov
stos
pop
loopne
das
fdivs
mov
mov
stc
dec
popa
mov
into
mov
rcll
jb
fcoml
movsl
sub
jbe
add
inc
dec
in
mov
cmpsl
xchg
loop
popf
hlt
aas
pop
jmp
inc
push
shr
pop
dec
dec
jne
or
sar
jbe
add
in
ror
push
fs
inc
in
cltd
ljmp
pop
xor
fnsetpm(287
loop
ss
enter
xor
push
push
dec
stc
rcll
lea
and
dec
popa
jmp
jo
mov
mov
jl
cmp
icebp
xchg
sub
pushw
cmpsl
loope
lret
sti
mov
sbb
icebp
aad
jp
sub
mov
adc
add
imul
xor
mov
out
ja
pop
loope
mov
adc
aam
dec
call
sub
adc
insl
adc
xor
push
lret
push
leave
xchg
fstl
and
adc
adc
orl
leave
cmp
test
sti
adc
scas
add
ror
pusha
xor
jbe
gs
and
or
arpl
fstpl
rorl
and
mov
fisubrl
dec
addr16
repnz
and
rcr
inc
aam
and
sarb
sbb
stos
xchg
bound
addr16
mov
jl
addr16
cmp
fnstsw
pop
push
lods
inc
xor
and
dec
inc
inc
fiadds
js
adc
int3
jp
xchg
cmp
cltd
xrelease
js
loopne
xor
mov
mov
adc
bound
and
pop
shrl
hlt
out
sub
add
fsubrp
jb
sbb
cs
cmp
test
lret
mov
jmp
and
mov
cmp
mov
pop
cwtl
mov
es
out
insb
insb
pop
or
mov
out
fistpl
int
aad
mov
shrb
sbb
out
jns
scas
xlat
lds
arpl
es
int3
int
lret
stc
stos
push
out
pop
inc
and
pop
jp
adc
add
sub
daa
xchg
cmpsb
nop
cmp
call
xchg
movsb
mov
imul
xor
mov
int
movsb
scas
adc
ret
fstpl
dec
cld
pop
inc
cs
inc
cmp
inc
or
cmp
stos
leave
push
rcrb
dec
push
adc
ret
int
and
cmp
lock
lods
ss
pop
jl
adc
and
shlb
aaa
das
sbb
mov
adc
jnp
xor
in
into
dec
pop
inc
jae
inc
sbb
push
ja
call
xchg
sub
and
mov
mov
push
mov
testl
insb
pushf
arpl
inc
push
pop
pusha
jecxz
scas
ret
stc
sbb
dec
adc
loope
adc
add
lea
sarb
lea
adc
xlat
lret
push
loopne
lret
test
pop
jle
dec
test
xlat
jno
dec
dec
repz
xchg
pop
in
dec
popa
das
fwait
and
lret
xchg
roll
sbb
aad
pusha
xor
and
cltd
repz
pop
in
fstpl
adc
loop
mov
je
mov
cmpl
icebp
sbb
push
gs
mov
call
xchg
push
test
enter
arpl
inc
xchg
cmp
test
mov
xor
pop
jne
je
lahf
mov
dec
lea
jns
repz
sub
cmp
jge
and
clc
das
xchg
or
push
push
or
and
sbb
sbb
arpl
pop
imul
cs
leave
insl
cmp
mov
insb
pop
inc
add
xchg
xchg
pop
push
add
iret
aam
xor
shll
xchg
jle
cmp
lcall
sub
mov
jnp
jns
dec
push
mov
clc
xor
sbb
loop
test
loopne
insl
mov
dec
icebp
je
rcr
lock
fwait
enter
mov
cmp
mov
sub
or
dec
and
out
nop
out
fisubs
bound
je
sarb
fs
add
push
fwait
pop
and
xchg
repnz
addr16
repnz
insl
and
inc
arpl
mov
aaa
repz
cmp
pop
mov
movsl
icebp
sbb
mov
and
lret
lods
add
and
mov
mov
mov
cld
nop
sub
fsubr
pop
pop
pop
arpl
aad
movsb
add
cmp
mov
adc
ficoml
testl
adc
cwtl
add
lcall
mov
ret
mov
mov
loope
lcall
sub
aad
out
mov
push
dec
aaa
mov
fcomps
jbe
cmp
cmp
push
loope
pop
cmp
xor
sub
push
jns
jnp
or
mov
or
push
xor
in
lds
xorl
clc
insb
pop
mov
ja
sub
popf
imul
scas
xor
idivl
jp
int3
push
rorb
gs
stos
dec
aad
xor
ret
push
aad
jl
cs
push
cmpl
in
or
and
sub
adc
into
inc
std
lcall
into
lahf
mov
mov
jnp,pn
cmp
xlat
bound
ret
push
jae
sbb
call
fldcw
push
xor
stos
jl
aam
jg
fistl
jo
ret
aaa
adc
dec
es
lock
inc
xor
xchg
xor
xor
aad
jbe
mov
push
cltd
push
popw
xchg
push
aas
pop
aas
cmc
sti
dec
xchg
mov
or
fs
ficompl
mov
rcll
dec
clc
outsl
dec
fcoml
pop
loopne
sub
push
ja
pop
push
pop
orl
pop
movsl
dec
xor
ret
mov
add
daa
sub
pusha
gs
popf
dec
jge
dec
test
lret
sarb
sbb
pop
hlt
out
das
sub
push
rorb
icebp
xor
adc
icebp
push
lds
mov
adc
shll
lret
stc
incl
fnsave
xchg
xchg
mov
or
les
aas
mov
inc
aam
pop
or
cmpsl
test
lds
sub
es
mov
push
inc
sub
notl
les
cmp
jns
lods
movsl
and
into
mov
mov
adc
ljmp
and
stos
xor
repnz
icebp
cltd
stos
fstps
std
cmp
cmc
xor
rep
inc
leave
xchg
ret
dec
mov
aaa
ja
nop
pop
mov
or
je
in
aad
jbe
sbb
jnp
mov
and
and
adc
mov
xchg
mov
jle
cld
mov
sbb
dec
ds
loope
dec
mov
push
sti
mov
call
lret
fld
jb
fistps
cmp
cld
jnp
cmpsb
in
mov
push
dec
fxch
popf
lods
aam
inc
ret
adc
mov
xchg
negl
jle
lret
dec
lds
push
and
inc
pusha
mov
pop
ss
dec
cmc
pushf
xor
cmpsb
sub
mov
xchg
inc
or
pop
fsts
call
or
xor
jmp
popf
mov
pop
stc
xchg
call
sahf
xchg
inc
fisttpl
test
popf
inc
rcrl
cmp
jae
mov
mov
dec
idivl
loopne
psubsb
out
dec
fwait
push
and
or
xchg
bound
cld
scas
sbb
fildl
fstps
jae
jno
dec
stos
dec
lods
mov
dec
inc
jge
jns
pop
shl
fwait
repnz
sbb
loopne
dec
arpl
call
sahf
add
stos
and
xchg
ss
or
roll
pop
arpl
lahf
js
add
or
xor
mov
icebp
xchg
and
inc
inc
and
outsl
incb
cltd
out
dec
jnp
jmp
adc
add
in
xlat
fidivs
xchg
push
ja
jb
cmp
jns
mov
sub
sub
push
icebp
pop
mov
sub
xlat
and
subb
outsl
add
xchg
ror
and
or
ss
pop
fadd
jecxz
and
subb
or
test
repnz
popa
ja
add
shll
or
sub
leave
mov
shll
xchg
or
insl
jbe
xor
push
push
adc
xchg
mov
pop
jecxz
xchg
jge
mov
mov
inc
inc
jecxz
clc
cmp
imul
cli
fnsetpm(287
jg
stos
pop
add
mov
mov
dec
popf
loop
aam
pop
fbld
mov
rorl
imul
mov
in
imul
cmpsb
clc
mov
scas
loopne
out
inc
xor
sub
and
pop
mov
pop
ret
test
mov
cmp
mov
mul
popf
or
aam
jb
scas
mov
pop
pusha
inc
fcmovnbe
stos
cmp
in
or
xchg
dec
rcll
jbe
aas
jns
mov
loop
adc
mov
push
jnp
push
les
jb
add
jge
pop
fwait
pushf
or
dec
cli
rcrb
sub
or
sahf
call
jle,pt
fwait
cmp
cmp
adc
mov
and
loope
decb
dec
mov
jnp
nop
repnz
inc
push
rclb
adc
or
cmp
ja
xchg
fucomip
orb
sub
sbb
stos
xchg
mov
pushf
xchg
pop
pusha
push
dec
dec
or
push
pop
push
and
push
sbb
dec
enter
out
adc
daa
loop
out
jle
rolb
pushf
add
sbb
lret
fsubp
es
add
mov
rol
mov
cltd
pusha
inc
inc
pop
xor
gs
jns
or
jge
mov
xor
clc
push
xor
es
outsb
sbb
insb
pop
xor
jmp
add
sahf
pop
sub
push
out
mov
sub
dec
jmp
dec
iret
addr16
push
ffree
rcr
loop
pop
inc
add
cli
pop
jae
mov
cld
or
jne
inc
ja
xchg
rcl
sahf
mov
xchg
in
mov
pop
fstpt
jb
sahf
or
mov
mov
aas
push
in
dec
jl
xlat
in
bound
sbb
insl
int3
push
loope
pop
aam
xchg
cmp
loope
stos
decb
mov
jle
cmp
mov
lret
je
sbb
xor
test
les
movsb
call
jo
int
and
xchg
repz
ret
stc
add
and
push
addr16
jo
adc
cltd
mov
and
dec
dec
cmp
add
or
adc
addl
aaa
nop
test
xor
jno
fs
mov
cwtl
pop
adc
popa
jl
inc
gs
fcoml
xchg
sub
cmpsb
cmp
out
jp
adcb
cmp
fs
xor
push
ss
jecxz
mov
sbb
dec
popa
lock
mov
repnz
inc
cmp
push
jo
xor
mov
pop
fsubrl
mov
mov
and
xor
mov
push
enter
notl
xchg
icebp
xor
fnsave
arpl
push
push
hlt
test
or
push
popa
push
mov
mov
in
dec
int
jnp
dec
jge
outsb
int3
pop
and
lock
ljmp
lret
call
add
or
jne
arpl
icebp
dec
into
lds
sbb
mov
pop
ss
js
jmp
imull
or
push
mov
fcmovne
sbb
mov
sbb
xchg
xchg
ret
ret
rorl
cwtl
iret
add
pmuludq
mov
pop
repnz
int3
sub
and
mov
data16
loop
and
sub
mov
stos
ret
inc
frstor
fwait
pusha
loope
pop
aaa
movsb
xor
mov
repnz
in
lods
push
fstps
out
ret
mov
mov
in
cli
push
cmpsl
xor
out
addr16
and
add
jbe
adc
push
test
ret
mov
pop
mov
xor
lret
push
cmp
loopne
or
in
push
das
push
push
negl
sbb
test
xlat
jne
dec
das
adc
cmp
pop
pop
add
and
arpl
pop
lret
jbe
jnp
mov
and
push
cmp
test
cmp
test
mov
dec
cmpsb
jmp
inc
push
nop
out
sbbb
xchg
mov
jo
mov
pop
and
push
fdivr
popa
call
cmp
aad
jnp
loop
jo
int
pop
dec
add
dec
cmp
fdivrs
push
ffree
xor
adc
ljmp
jp
pop
push
je
add
lret
inc
adc
add
lea
leave
mov
test
cli
fs
mov
maskmovq
mull
dec
cmp
cli
movsl
inc
mov
insb
lock
iret
or
add
push
out
std
dec
mov
push
push
cmp
test
push
inc
adc
xchg
jns
xchg
pop
jae
imul
xor
mov
mov
dec
out
dec
xor
or
adc
in
mov
or
mov
test
orl
jecxz
sub
add
sbb
stos
lret
push
leave
mov
add
push
or
dec
inc
cld
dec
mov
in
arpl
or
mov
add
push
pop
jmp
sbb
add
xchg
inc
push
cmp
xchg
mov
lahf
popa
hlt
rolb
nop
pop
mov
push
or
adc
imul
movsb
outsl
adc
lds
sub
int
cmp
pop
xor
jmp
cmp
arpl
cmpsb
xlat
pop
loop
fs
int
insb
adc
addr16
mov
cmp
xor
or
repnz
repz
ret
imul
dec
pop
jae
cmp
fwait
sti
mov
in
dec
adc
incb
rorl
test
fcom
ret
add
jb
jle
sub
mov
jg
cmpsb
mov
les
pop
imul
js
repz
and
or
xchg
imul
arpl
out
mov
inc
shll
mov
jecxz
rolb
adc
sbb
scas
cmp
sti
inc
int3
inc
ret
xor
mov
idivl
loope
popa
daa
cmp
xchg
lret
mov
test
mov
sbb
ret
addb
cmp
dec
sub
data16
lret
in
shl
push
div
mov
xor
imul
repnz
pusha
imul
or
add
jno
out
and
mov
rorl
fincstp
cmp
das
outsl
dec
cmp
dec
mov
or
sbb
comiss
movl
int
flds
insb
mov
xor
cmp
adc
sub
xchg
sub
data16
cmpsb
push
inc
and
sub
daa
push
icebp
shr
add
out
push
dec
cwtl
inc
push
ret
jl
iret
adc
out
xor
mov
push
sar
aam
add
jnp
dec
mov
sarb
clc
sbb
fwait
or
fs
jle
mov
mov
sbb
push
lds
pusha
xor
pop
inc
mov
dec
mov
in
fdivrl
stos
cmp
cmc
mov
push
xchg
repz
mov
push
int
jae
pop
xchg
or
mov
in
push
fbstp
fwait
lods
mov
mov
xorl
pop
cmp
movl
in
dec
or
sbb
push
xor
cld
and
sbb
or
lret
mov
cmove
xchg
int3
or
imull
aad
out
stos
lds
xchg
stos
clc
mov
cmc
add
mov
xorl
out
popf
rcll
or
loopne
adc
and
jge
out
pushf
outsl
sbb
jecxz
addr16
push
adc
mov
mov
jbe
dec
outsl
sub
mov
add
or
cmc
jb
test
sti
add
jecxz
jmp
lods
push
pop
jmp
xlat
nop
fsubr
jmp
xor
pop
call
addb
push
xchg
pop
xchg
cvtdq2ps
pop
ds
mov
mov
pop
pop
les
adc
aam
cmc
jp
push
or
enter
in
cmc
mov
sbb
adc
jbe
lds
cld
dec
mov
xchg
mov
add
xor
inc
loop
dec
aaa
adc
repz
rcll
mov
xor
rcll
sbb
ret
bound
jae
mov
mov
xchg
popf
stos
andl
pop
inc
adc
mov
xchg
icebp
cmp
or
jb
mov
cmpsl
je
dec
std
loope
xlat
jnp
adc
jb
fwait
inc
enter
es
push
push
xor
sub
push
push
xor
jl
or
movsl
or
lret
loopne
in
mov
add
xor
mov
xchg
push
inc
mov
jae
jmp
dec
lret
stos
mov
cltd
lret
les
cmp
or
adc
scas
mov
and
data16
sub
repz
and
push
or
push
jns
lods
mov
inc
sahf
jmp
jae
add
inc
mov
mov
jmp
mov
xchg
lahf
cld
xor
jecxz
or
jb
movsb
and
dec
sub
push
jmp
xchg
inc
add
ja
nop
mov
sub
adc
mov
ja
popa
cmp
test
setg
or
mov
mov
xor
sbb
lret
into
sub
shl
inc
outsl
shr
mov
or
xor
rcr
scas
inc
mov
sbb
jg
adc
adc
imul
dec
ret
mov
scas
scas
xchg
sbb
xchg
mov
sbb
in
xchg
dec
aad
in
jg
in
hlt
aam
xor
popl
inc
adc
inc
push
test
sbb
les
mov
pop
mov
subl
lds
xchg
sub
and
and
or
adc
mov
enter
outsl
stos
daa
test
lahf
ret
cmp
add
test
cmp
sahf
jg
les
fidivrs
data16
notl
out
xchg
mov
jmp
repnz
nopl
xchg
insl
push
sub
les
fldl
bound
xchg
scas
adc
xor
icebp
mov
sub
in
in
iret
mov
gs
ret
iret
iret
sbb
pop
arpl
ror
push
jne
sub
pop
sbb
add
pop
xchg
cwtl
imul
pop
mov
pop
sub
sbbb
pop
addr16
data16
bound
test
fidivrs
lds
mov
and
xorl
nop
jp
jno
lods
adc
scas
test
test
inc
mov
pop
ljmp
in
fs
ss
ret
mov
ss
mov
dec
xchg
sbb
popa
xchg
fnsave
jg
mov
pop
sti
push
xchg
pop
cld
ret
xor
jp
xor
inc
enter
xchg
and
jecxz
popa
jl
sahf
dec
imul
mov
pop
and
or
add
cltd
addr16
dec
sbb
imul
inc
pop
xorl
inc
jno
rclb
push
lret
int
out
shll
das
in
stc
mov
pop
jp
repnz
in
hlt
mov
enter
cmp
dec
mov
stos
lea
xor
sub
test
mov
ljmp
sbb
and
rcll
aaa
mov
lahf
aam
mov
or
sbb
mov
jae
push
sbb
movsl
cmovp
dec
mov
and
and
pop
test
ja
jmp
adc
pushf
out
call
daa
or
shll
insb
xchg
inc
enter
jns
int3
roll
dec
stos
loop
pop
dec
scas
cmp
lods
push
jp
inc
push
arpl
xchg
stos
push
addl
es
push
sbb
jge
xchg
or
mov
lods
adc
pop
cmp
in
ret
dec
pop
cltd
dec
jb
xchg
sahf
lcall
mov
std
pop
cmp
ret
test
jne
fisubrs
lock
loop
cli
mov
das
sbb
mov
aad
inc
mov
push
test
nop
ficoms
jmp
jl
jne
ss
mov
or
mov
mov
int3
xchg
popf
xor
sahf
cld
pop
es
pop
cmp
cmp
mov
and
push
ret
xchg
push
aas
ficomps
jg
dec
pop
loopne
mov
imul
sbb
addl
imul
js
pop
fwait
sbb
xorl
in
mov
jge
push
shlb
push
mov
jo
add
and
daa
cld
sub
xor
sti
scas
movsb
out
sub
in
and
addl
xor
shlb
vcvttps2dq
mov
jge
xor
pop
mov
divb
mov
adc
or
push
push
dec
scas
shl
out
fwait
inc
jg
int
adc
cwtl
jl
or
mov
and
push
sbb
adc
jl
insl
xchg
js
jge
adc
sbb
push
adc
aam
sti
cmp
loop
and
mov
xor
mov
inc
xlat
sbb
pusha
inc
jge
cmpb
je
add
push
jp
push
outsl
test
sbb
fidivl
test
push
rol
sub
sbb
mov
mov
cmp
sbb
in
outsb
popa
lcall
sub
push
in
or
test
inc
rorb
popf
sub
cs
icebp
in
mov
lods
pushf
pop
cmc
jns
fs
dec
ds
or
mov
add
notl
sbb
sub
and
repnz
jmp
ret
add
inc
adc
mov
leave
or
xchg
sub
dec
sbb
jnp
pusha
jnp
outsb
test
or
adc
xor
mov
in
xchg
and
jmp
test
inc
aam
dec
mov
leave
iret
imul
pushl
xchg
pop
mov
aaa
push
or
xlat
movsb
inc
ds
xchg
mov
popf
xor
xchg
sbb
and
sub
out
xor
cmp
ds
xor
xor
adc
fdivs
push
xchg
mov
or
out
or
xorl
imul
xor
loope
sti
pop
lods
mov
cmp
mov
xchg
dec
fistps
adc
push
outsl
call
mov
cmpsb
mov
jnp
repz
mov
call
pop
cmpsl
add
pop
dec
jmp
lods
inc
or
cmp
pop
dec
or
lea
mov
lret
aas
mov
or
sub
jbe
push
jg
lretw
out
or
adc
ficomps
xchg
cmpsb
dec
jp
adc
cmp
cld
loope
filds
sub
test
and
mov
dec
popa
shll
sahf
and
cmpsb
es
xor
shl
and
or
mov
adc
xor
cmp
sub
dec
cli
jecxz
sbb
or
cmp
clc
cmp
xchg
push
leave
push
mov
push
fnstcw
mov
or
mov
sbb
jae
or
cs
icebp
in
push
jge
stc
or
sbb
aad
pop
mov
es
cmpsl
push
and
subb
sub
pop
data16
xchg
sbb
inc
imul
insb
mov
in
jp
mov
ja
fs
iret
insb
cli
jmp
mov
cmp
mov
fs
dec
lock
or
lret
inc
adc
and
or
adc
xlat
popa
es
cmp
cld
dec
or
jmp
bound
cli
mov
outsb
xor
cvtps2pi
idivb
jne
test
and
pop
in
clc
lods
roll
idivb
mov
pop
mov
xor
xchg
arpl
dec
nop
jnp
rorl
cld
repz
imul
imul
cltd
cmp
test
ja
push
inc
sti
sub
mov
xor
mov
repnz
int
in
and
stc
sarl
loope
fmuls
xlat
and
daa
repz
dec
jo
mov
jg
cmc
xor
lcall
sbb
lret
mov
lahf
mov
cmp
mov
push
push
mov
std
xchg
inc
fs
add
mov
jbe
mov
cltd
out
lret
mov
fdivs
push
ds
xchg
mov
jmp
rolb
pop
jecxz
mov
test
adc
ja
jg
mov
mov
ret
mov
gs
and
dec
aaa
sub
push
test
fiadds
inc
lods
fwait
jbe
out
cmp
jb
sahf
inc
subl
mov
jle
pop
cmp
adc
pop
xor
lahf
mov
add
outsl
das
int3
cmp
fxam
test
push
add
out
inc
mov
sbb
mov
jns
push
pop
inc
jp
or
sbb
in
aas
test
adc
je
fisubl
jb
gs
cmpsl
stc
push
xchg
or
das
loope
stos
and
mov
test
ljmp
js
add
dec
jbe
or
stc
dec
jb
mov
out
jo
pop
int
repnz
and
lahf
sarl
mov
push
cltd
add
sub
clc
add
repz
add
insb
jbe
sub
ss
repnz
push
or
lcall
adc
fdivrs
mov
fcomps
pusha
mov
sub
insl
cmpsb
enter
and
aam
mov
sbb
imul
xchg
je
cmp
call
mov
js
icebp
cli
cmp
loop
loop
iret
jp
jb
cld
inc
pop
call
rorb
out
arpl
jp
int
test
or
gs
pushf
push
ljmp
popf
jae
nop
cmp
addr16
daa
xor
adc
adc
arpl
popa
mov
xor
cld
shll
pop
cmp
sarl
push
mov
ficoml
fs
and
or
loope
shll
popf
cmpsb
mov
sahf
cmp
int3
or
jbe
mov
lds
xchg
shr
sub
pushf
into
cltd
or
cmp
dec
psubsb
cmp
out
adc
das
push
stos
jle
daa
mov
cmp
out
lds
mov
shll
mov
into
mov
lock
mov
mov
lods
jbe
jne
mov
test
or
sahf
mov
bound
and
sbb
loop
mov
cmp
test
js
cs
sub
mov
mov
repz
dec
pop
mov
mov
sbb
adc
push
push
in
and
enter
mov
inc
inc
sub
jmp
repnz
in
pop
inc
cmpb
xlat
add
movsb
xorl
ficoml
sub
pop
inc
jns
pop
add
push
cmpsl
sbb
push
jmp
xchg
sub
pop
and
mov
lods
dec
sub
aad
push
loop
mov
in
aam
std
xchg
dec
dec
and
in
shrb
sub
cmp
mov
je
lods
loope
mov
dec
out
lret
adc
dec
xor
fidivrs
imul
lods
test
pop
mov
adcb
and
jns
dec
mov
jmp
popw
xchg
outsl
scas
cmpsb
dec
jmp
adc
mov
sub
ljmp
or
aad
test
lods
sahf
dec
dec
mov
addr16
inc
bound
xchg
vmptrst
mulb
jo
pop
repz
out
cltd
dec
pop
pop
cmp
test
scas
dec
out
insl
xor
addl
testl
popf
xor
push
push
xor
cmp
xor
and
cmp
mov
sbb
daa
cmp
out
mov
aaa
insb
mov
hlt
insb
mov
sbb
sahf
pop
or
sbb
shr
lcall
cli
add
lret
rcrb
out
sub
mov
imul
enter
mov
dec
repz
and
addr16
jge
int
add
or
xor
hlt
or
movsb
notl
add
dec
sahf
pusha
in
or
dec
and
das
mov
das
sub
rcll
ss
in
cmp
sti
pusha
jnp
xor
sub
addr16
pushf
shll
mov
seta
mov
dec
cmp
pop
mov
clc
outsb
fwait
lds
jne
cwtl
add
pop
ret
sub
or
inc
jecxz
mov
mov
pop
outsb
iret
cld
popf
sti
nop
pop
adc
mov
cmp
dec
or
orb
xchg
cs
cmp
lcall
or
jne
jnp
pop
mov
jns
cmp
sub
js
das
adc
andb
mov
sbbl
and
sub
int3
inc
iret
addr16
movsl
ret
or
lret
push
je
pushf
push
or
das
pushf
cmp
gs
lods
stc
or
cwtl
arpl
call
test
mov
xor
dec
ret
test
aam
mov
cmp
sbb
jge
dec
mov
xchg
neg
sub
adc
ja
outsl
dec
mov
imul
inc
js
rorb
in
inc
ja
or
dec
or
out
jo
cmpb
jb
add
inc
push
subb
dec
pop
pop
xchg
add
inc
add
outsb
inc
fwait
cwtl
or
lods
push
lahf
lods
or
or
sti
mov
flds
bound
sbb
dec
jbe
pop
sahf
jb
int
mov
les
in
push
mov
fs
insb
mov
mov
dec
rcll
aad
sbb
jge
testb
push
fsubrs
adc
adc
and
cli
and
subb
or
ds
pop
sub
out
push
clc
xchg
pop
fwait
icebp
inc
shlb
push
lock
mov
repnz
jp
mov
adc
adc
add
pop
mov
sub
data16
aad
cmpsb
repz
int
push
sarl
pushw
lcall
inc
and
jno
pop
lcall
push
xchg
pop
dec
jb
mov
xchg
stos
cld
mov
popf
xchg
xchg
xor
enter
lods
adc
or
cltd
fistpll
fs
sub
xchg
add
and
mov
sbb
sub
jge
cmpsl
scas
popa
push
rorl
lds
mov
rclb
cs
mov
loope
pop
or
rclb
loope
lcall
jb
push
mov
sub
xor
ja
inc
test
or
push
xor
mov
rcll
mov
mov
pop
rol
xchg
xchg
fisttps
arpl
push
cmp
into
loop
loop
mov
int
rep
jg
lcall
xchg
dec
fwait
pop
lahf
sbb
push
rolb
and
movsb
gs
iret
push
cmpsb
xchg
push
pop
push
jo
lods
cmp
jmp
or
and
jl
pop
push
pop
out
jae
mov
dec
insb
out
cmp
jmp
cmp
pop
inc
sub
sbb
test
or
scas
xchg
sbb
jo
or
aaa
lcall
pop
pop
mov
cs
scas
mov
dec
call
mov
mov
enter
inc
in
arpl
or
jae
cltd
xor
subl
mov
test
idiv
std
stos
xchg
lcall
nop
adc
pop
mov
subb
mov
popa
push
mov
in
add
ret
and
sub
jecxz
jno
and
inc
dec
out
cli
in
mov
sbb
sub
sbb
mov
sahf
and
inc
or
jno
jg
std
mov
xchg
test
inc
stc
lret
mov
push
xchg
inc
mov
sti
dec
test
mov
hlt
enter
repnz
xor
filds
cmpsl
xchg
jnp
cmp
xchg
dec
mov
int3
push
loop
push
pop
stos
fsubs
movl
into
mov
or
dec
sbb
cmp
daa
cmp
xor
xchg
stos
pop
leave
inc
add
jo
xor
in
int
mov
addr16
rclb
fs
and
xlat
push
scas
dec
rcrl
and
sbb
pop
xchg
inc
ret
test
ficomps
cwtl
cmp
push
aad
insb
mov
cs
dec
aad
or
mov
leave
add
scas
and
jae
sub
mov
sahf
fstpl
dec
outsl
and
pop
fidivrl
add
ss
mov
loopne
cmpsb
mov
out
xchg
pop
mov
jl
fstpl
mov
xchg
out
jecxz
ljmp
mov
mov
pop
mov
inc
pop
aas
leave
rolb
scas
xchg
in
loope
lock
jg
push
subb
cmp
dec
jp
fisttps
outsb
mov
out
inc
mov
mov
mov
inc
out
sahf
or
mov
loopne
push
lret
push
or
push
add
dec
mov
clc
jg
out
int3
push
rorb
push
pop
cwtl
fldenv
jmp
and
loop
jb
xchg
ret
daa
sub
jb
jg
test
dec
jbe
or
and
mov
lret
out
sahf
inc
add
push
pop
bound
and
nop
jp
call
dec
int3
add
out
adc
aam
pop
in
stos
nop
call
mov
mov
psubd
pop
aad
js
jl
rclb
cmp
mov
inc
push
push
mov
jb
dec
xor
sti
test
rclb
push
mov
mov
mov
ljmp
dec
inc
sub
imul
xor
ret
xchg
push
insl
imul
shrl
filds
mov
inc
jno
popf
adc
testl
mov
lea
push
adc
ret
ss
sub
inc
push
addr16
movsb
adc
mov
jae
rorl
data16
cmp
mov
mov
jmp
int
push
lahf
sbb
xchg
mov
or
pop
sub
iret
pop
bndldx
icebp
aad
push
iret
and
ljmp
and
xor
aam
cltd
jne
mov
int3
cli
imull
je
adc
pop
xchg
push
xor
or
pop
push
mov
fisubl
jae
xlat
mov
mov
jne
cld
les
mov
push
mov
aas
inc
loopne
mov
pop
push
sbb
pop
and
sti
cld
xor
mov
and
test
out
in
mov
gs
testl
sti
dec
fimuls
add
orl
stc
out
verr
lods
sub
pop
mov
cli
xchg
shll
mov
sbb
aad
cmc
lret
mov
jbe
xor
jp
inc
xor
ret
adc
movl
pop
pushf
push
pusha
lcall
cmp
dec
or
and
add
jmp
jne
jge
push
add
pushf
mov
mov
jo
arpl
data16
les
and
mov
or
repnz
in
lock
sbb
xchg
call
mov
pop
jno
jmp
add
decb
fistps
ret
xchg
mul
ljmp
cltd
pop
clc
stos
mov
ret
arpl
cmp
ret
lret
int3
aas
int3
test
insl
pop
mov
xor
dec
xor
popf
arpl
sti
or
xor
or
jne
mov
ds
repz
push
pop
cmp
jp
shll
xchg
loope
call
insb
insl
bound
add
imul
xchg
aas
test
and
aas
push
pop
fwait
repnz
mov
out
outsl
rcr
xor
jle
add
test
mov
test
jle
jne
loope
sbb
xlat
cs
movsl
icebp
or
mov
mov
rclb
cmp
push
stos
inc
out
add
das
adc
xor
enter
and
movsl
cmp
dec
in
cltd
pusha
jbe
sbb
rcll
cmc
dec
mov
mov
ds
mov
rolb
xor
pusha
outsl
ret
cmpsl
adc
icebp
iret
or
ljmp
xlat
cmp
jbe
xchg
ds
and
fsts
mov
mov
push
dec
movsl
xchg
les
or
stc
jge
test
daa
movsb
outsb
mov
push
dec
insl
sbbb
xor
int
sub
add
leave
cmovp
das
xor
and
xor
scas
out
ror
and
pop
shl
shrb
in
jmp
adc
sub
add
push
pop
mov
pushl
inc
or
xchg
cmp
ljmp
cmpsl
je
inc
adc
inc
xor
cmp
jecxz
rcrb
pop
mov
lods
jmp
movsb
adc
xor
in
popa
inc
cmp
stos
jge
pop
aad
xchg
push
aas
aas
jnp
ja
std
dec
int
orl
jb
sub
mov
push
adc
outsb
push
iret
orl
scas
fst
arpl
scas
or
mov
lret
pop
daa
jecxz
aad
in
fidivl
inc
mov
fsubl
inc
mov
mov
dec
es
xchg
stc
adc
mov
ret
int
jo
int
out
adc
jne
scas
inc
and
cmc
sbb
push
in
movb
fyl2x
out
push
push
in
cmc
mov
xchg
aaa
lds
inc
sbb
sbb
xor
fldl
ds
scas
addb
xchg
inc
push
lock
mov
jp
cmp
inc
fcoml
jp
sbb
es
loope
sbb
xorl
test
roll
and
outsl
clc
loope
cmp
inc
fistps
adc
insb
rolb
dec
xlat
repz
cmp
push
sbb
mov
xorl
in
push
nop
jbe
xchg
jmp
inc
mov
loopne
mov
shll
jb
xchg
jbe
mov
jp
push
bound
mov
mov
mov
xchg
lds
lock
cltd
rolb
cmc
mov
mov
les
push
rcl
rcrb
xchg
loopne
cmpsl
fs
dec
test
lahf
dec
dec
mov
adc
lods
cmp
addr16
jge
or
sbb
mov
xchg
in
ret
lods
lret
jl
in
cmp
add
pop
sub
push
cmp
fs
inc
addb
sub
imul
shrl
xor
sbb
jl
mov
xchg
cli
cs
xchg
scas
sahf
push
jmp
push
jnp
xchg
iret
inc
jnp
jb
lods
cmp
sub
jle
mov
and
out
pop
jno
jns
das
jle
pop
adc
nop
outsl
scas
mulb
sbb
dec
pushf
popf
lret
sub
rcrb
add
and
bound
sbb
popf
inc
jg
sub
mov
cmc
push
nop
call
test
out
sarb
adc
push
push
fimull
and
cli
or
push
xor
fiaddl
out
mov
pop
push
mov
fldt
dec
inc
push
ret
inc
addr16
mov
inc
in
ret
std
popa
lret
insb
mov
stos
sbb
mov
out
mov
imul
mov
xchg
lahf
xchg
xorl
xor
lahf
lret
test
sarl
call
hlt
fwait
divb
mov
inc
mov
call
clc
mov
mov
adc
xlat
pop
fisubrl
push
jbe
fcmovnbe
cmp
scas
and
sub
xor
push
movsb
ret
xor
dec
mov
cmp
cmpsb
or
jmp
jp
adc
push
mov
mov
outsb
test
stos
lods
repz
inc
fimuls
dec
mov
ss
mov
jl
sub
les
dec
mov
xchg
test
icebp
cmp
pop
add
dec
add
shll
cld
fmulp
out
add
call
mov
pop
add
cmp
cmc
pusha
inc
mov
mov
mov
mov
jmp
jns
cmpsl
push
xchg
adc
andl
cmp
sbb
stos
ret
fisttps
ljmp
dec
or
mov
fmull
orl
nop
jle
pop
fwait
inc
mov
aam
icebp
sbb
scas
das
xlat
ja
aad
mov
popa
rol
cmp
cli
fmull
adc
test
dec
inc
nop
cltd
ds
xchg
stc
mov
lods
lock
stc
add
ds
mov
in
arpl
lret
mov
jne
cs
jno
xor
push
cli
repz
cltd
dec
add
push
nop
and
data16
pop
pop
ret
ds
sti
mov
mov
cmp
sbb
rcrl
scas
sub
jecxz
gs
imul
and
mov
cmp
xchg
stos
xlat
mov
js
ss
inc
insb
pop
mov
sbb
jecxz
out
test
or
push
mov
adc
sbb
arpl
sbb
mov
loop
jge
sbb
mov
pop
push
mov
mov
in
aas
xchg
iret
cmp
out
add
xor
xlat
mov
fstpt
xlat
dec
jg
jmp
int3
mov
or
cmp
mov
add
int3
scas
and
pushf
add
andl
repz
xchg
imul
std
dec
les
jae
dec
dec
test
mov
push
push
and
orl
mov
sbbl
or
dec
mov
or
xor
add
sarb
out
dec
in
scas
and
into
dec
fdivrl
cmc
aas
pop
xchg
pop
inc
addb
xchg
jae
xor
sub
adc
stos
pop
pop
sub
stc
es
stos
jl
mov
xor
adc
adcl
sbb
jecxz
cmp
cmpsb
shlb
int3
fldt
stos
push
or
movsl
add
inc
nop
xchg
pop
push
pop
pop
pop
xlat
pusha
fsubp
add
pusha
mov
xor
repnz
inc
mov
insb
outsl
loop
es
in
stc
cmp
jecxz
aaa
fadds
out
adc
in
push
dec
mov
pop
sub
or
test
shrb
filds
addb
xchg
mov
faddl
shrl
cmpb
add
in
sub
fdivp
or
ja
js
imul
xchg
push
pop
out
xchg
movsl
sub
stos
xor
imul
pop
cmpsl
lock
add
cmpsb
daa
push
arpl
sbbl
mov
pop
iret
mov
mov
cmp
mov
cli
xor
pop
xor
mov
cltd
adc
ss
mov
pushf
cmp
insl
mov
addr16
sub
sbb
pop
push
in
xor
neg
repnz
mov
sub
mov
test
or
push
push
pop
mov
and
out
lcall
adc
sub
test
ret
shrl
add
jne
popa
inc
sub
cmpsl
xor
sahf
dec
call
pop
je
inc
aaa
repz
inc
mov
insb
dec
jle
je
daa
dec
out
out
lds
cwtl
aaa
pop
pop
idivb
cltd
hlt
push
loope
sub
popf
mov
enter
mov
mov
loopne
mov
fldenv
mov
xor
lds
cmc
cmp
outsl
jl
push
jnp
in
dec
push
cli
jbe
add
xchg
mov
mov
cmpb
cltd
pop
push
mov
mov
push
sti
mov
push
jle
aad
popf
out
rol
sbb
cmpsl
cmpsl
insb
or
mov
jmp
pop
mov
out
dec
pushf
insb
popa
stos
add
mov
and
rcrl
icebp
cli
sub
jb
xchg
xchg
call
pop
jae
movl
mov
and
sbb
inc
dec
fs
mov
mov
or
or
push
jmp
sbb
or
add
xor
xor
rcll
adcb
mov
js
ret
in
xor
and
stos
jecxz
lods
je
lret
pushf
pop
popa
push
shlb
movsb
push
mov
mov
cwtl
jnp
add
lods
push
mov
mov
mov
and
dec
cmpsb
jp
iret
iret
jnp
cmp
mov
aad
sbb
leave
sbb
mov
pop
cmp
mov
loopne
das
xlat
inc
sbb
lods
add
loop
fcomip
mov
sub
clc
push
pop
pop
jne
jne
mov
or
out
inc
fwait
dec
xchg
sarl
loopne
repnz
out
movsl
add
pop
sbb
mull
std
add
das
cmc
jge
sbb
test
bound
push
sub
sbb
ss
iret
mov
leave
nop
mov
adc
sbb
sti
adc
push
shrb
int
mov
mov
mov
in
or
je
lods
incl
dec
pop
cmp
mov
pop
mov
jl
pop
ljmp
out
mov
pop
cli
inc
repnz
push
xorb
test
xchg
mov
and
jb
pop
jns
dec
loope
dec
minps
das
sbb
int
dec
add
add
cs
in
mov
mov
mov
sbb
cltd
and
out
adc
stos
inc
jle
inc
aad
in
mov
xchg
sub
cli
dec
adc
jg
dec
push
mov
icebp
pusha
pushf
xor
lcall
sbb
xor
ja
xorb
test
nop
jae
sbb
inc
addb
loop
push
dec
mov
push
sbb
jmp
aad
cld
roll
das
mov
aaa
enter
ds
pop
nop
mov
push
cmp
or
or
mov
inc
daa
sub
addr16
inc
push
xlat
in
inc
out
xor
call
cmp
dec
mov
ds
std
sbb
or
mov
xchg
test
insl
jg
sarb
xor
adc
bound
stos
mov
cmp
daa
adc
sarl
stos
or
fwait
mov
shlb
mov
cmp
mov
or
in
or
cmpsl
in
xchg
mov
data16
stc
jns
xor
insl
push
cs
jae
jg
xrelease
mov
and
jno
jmp
add
mov
mov
sub
cltd
cmp
add
pop
mov
lret
dec
icebp
ss
inc
out
mov
cwtl
cs
cmp
js
sahf
ljmp
insl
mov
scas
lock
mov
fdiv
movsb
lods
mov
xor
sub
fstpt
lods
ret
in
or
mov
sahf
es
mov
xor
mov
lea
cmpsl
mov
mov
rolb
mov
mov
in
lds
and
mov
adc
sti
add
movsb
movsl
mulb
mov
sarl
dec
mov
vaddps
mov
and
insl
jae
and
lahf
xchg
inc
dec
lcall
mov
repnz
rep
push
adc
roll
lret
jb
cs
or
mov
leave
aas
xchg
ds
sbb
inc
pop
xchg
pop
inc
push
test
xchg
push
out
jg
xor
add
fcmovnb
mov
ret
add
int
push
cmp
cmp
test
xacquire
ror
std
outsb
in
mov
jge
icebp
into
lar
xchg
mov
into
mov
push
pop
inc
fcmovbe
cmp
fadds
push
std
dec
and
pop
lcall
fstl
mov
cmp
pusha
leave
in
xchg
fmuls
push
imul
hlt
movsb
push
fsubl
pop
and
sbb
xchg
sbbl
lds
decb
push
pop
push
dec
aad
testb
movsb
xchg
inc
or
pop
add
popf
pop
test
roll
sarb
stos
negb
lahf
and
imul
loope
adc
sbb
test
outsb
idiv
mov
add
cmp
faddl
lret
arpl
jne
adc
sbb
rcll
daa
movb
test
jne
cld
shrb
and
leave
mov
gs
adc
out
xchg
or
inc
cmp
cmp
jo
pop
push
jb
fisubrl
dec
aas
repnz
aaa
addr16
aam
stc
jbe
psrld
and
inc
and
lcall
shr
cli
or
testb
fnsave
in
jmp
hlt
xor
subb
insl
mov
xchg
call
stos
adc
test
add
jg
add
add
jmp
out
adc
inc
gs
inc
das
in
inc
or
sbb
addl
mov
pop
mov
push
push
sbb
arpl
push
scas
out
daa
xchg
in
into
xor
dec
or
dec
lock
sub
outsl
cmp
mov
bound
pop
out
subl
mov
adc
jl
jmp
lods
test
cmpsb
cs
mov
fwait
fs
fidivl
stos
pushl
sub
je
mov
cmp
imul
push
test
xchg
mov
das
pop
fidivl
ljmp
cmp
sti
roll
mov
fidivl
pop
pop
mov
push
push
ds
push
jl
idivb
jmp
pop
enter
test
jnp
sar
pushf
enter
push
mov
push
notb
adc
push
sub
jno
test
pop
add
scas
mov
jp
mov
mov
and
pop
je
ret
lret
fstl
pop
test
mov
in
cltd
xor
jge
pop
mov
sub
clc
imulb
popf
pop
scas
jns
orb
mov
ficomps
fwait
ret
xchg
inc
mov
sbbl
xor
push
mov
mov
xchg
mov
out
fcomip
repnz
or
add
add
sub
test
test
inc
sti
or
loop
fdivs
fwait
jecxz
fistl
repnz
repz
iret
xor
mov
xchg
ret
cmc
or
xchg
cmp
scas
js
ds
jbe
insl
pop
push
cli
cmp
cmp
cmp
lods
mov
cld
cmp
insb
mov
aaa
push
xchg
xor
xor
btsl
xchg
shl
leave
fmull
jae
dec
adc
popa
pop
pop
imul
mov
dec
or
sub
repz
test
adc
mov
mov
test
fbstp
arpl
movsb
mov
adc
inc
fisubrl
pop
test
dec
jne
xor
add
and
pop
mov
sub
pop
pushf
xchg
mov
fucomp
inc
out
mov
mov
negb
or
and
fimull
sbb
jae
fbstp
add
dec
movsb
add
popf
mov
xchg
iret
out
ret
add
ss
mov
adc
pop
xchg
mov
rorl
jmp
call
push
ret
pushf
addr16
call
dec
mov
or
adc
pop
clc
outsl
mov
push
xchg
imul
ljmp
sbb
test
dec
enter
add
outsl
cmp
stc
leave
push
mov
sbb
ss
mov
jnp
mov
push
dec
dec
dec
cmp
or
jae
sub
cld
leave
jmp
xor
cmp
fsubr
ds
pop
cmpsl
push
nop
lock
fsubrs
mov
lret
bt
push
sti
pop
adc
shll
xsaves
adc
popf
aad
mov
xor
test
call
aas
bound
xor
mov
fsubs
ljmp
mov
in
xchg
rcrb
vmovsd
pop
xchg
mov
je
ljmp
movsb
xorl
pop
pop
ret
movsb
xor
mov
mov
in
cmp
loope
cmpsl
mov
or
sbb
push
inc
pop
cmp
push
movsl
xor
push
andb
je
test
pop
out
pop
sbb
xor
cmp
or
or
jns
xchg
imul
mov
push
pop
and
push
xchg
xlat
mov
and
mov
push
or
cwtl
cmp
stos
imul
push
pop
fiadds
adc
mov
in
jbe
and
aad
cmp
ljmp
cltd
rcll
adc
repz
jp
pop
sub
orb
xchg
cmp
les
scas
test
mov
cltd
xchg
fldt
push
xchg
scas
mov
jmp
int3
jl
xchg
test
fidivs
insl
sub
pop
jp
pop
xchg
and
or
pop
scas
fistpl
jg
add
xchg
cmp
xchg
lret
mov
fcoms
mov
inc
push
xor
fs
insl
test
jns
jp
popa
or
mov
cmp
or
xor
out
fcmovne
sbb
test
lock
push
sub
mov
push
std
or
jmp
gs
imul
xchg
pop
pop
or
pop
inc
js
test
in
je
negl
shlb
call
push
dec
sahf
and
rcr
or
into
or
xor
ds
mov
mov
les
mov
inc
movsl
push
mov
dec
insb
add
ja
pop
sub
cmp
icebp
stos
and
pop
and
sub
cmp
out
cwtl
repnz
adc
xchg
lahf
daa
jae
cs
push
fidivrs
enter
pop
out
mov
scas
out
push
lahf
dec
stos
fsts
lock
mov
dec
push
std
jg
adc
cmpb
sarb
fwait
adc
add
fists
pop
aaa
aaa
pop
icebp
xor
aam
call
imul
cwtl
test
pop
stos
in
fadds
aam
jl
xchg
xchg
and
inc
lods
add
push
sbb
cmpsb
cmpsl
xor
jle
inc
mov
lret
push
push
subb
inc
hlt
push
fstpl
ret
mov
cmpsb
inc
mov
pusha
test
xor
xorl
pop
mov
mov
ret
repnz
mov
xor
mov
cltd
push
push
push
aam
int
dec
xchg
xchg
pushf
stos
fsubs
test
push
cltd
pop
out
push
and
xor
fsubl
nop
mov
stos
adc
push
dec
add
mov
mov
fsubs
mov
repnz
dec
mov
call
int3
in
or
mov
jb
mov
movsb
rcrl
sbb
movsl
and
lea
out
inc
outsb
das
jb
dec
cmp
add
xchg
mov
mov
hlt
sahf
inc
pop
in
into
pop
fisubs
mov
gs
aam
push
adc
jns
mov
push
adc
shl
and
into
repnz
lcall
inc
subl
pop
inc
mov
push
fisttps
outsb
call
incb
cmp
loopne
xor
scas
lret
xor
in
rcr
sub
or
xchg
je
push
cwtl
call
imul
adc
sbb
lret
dec
idivb
xlat
cmp
push
ret
pop
mov
out
cli
mov
das
add
pop
jmp
mov
sar
sub
js
adc
dec
mov
jmp
mov
xor
rolb
adc
pop
pop
sub
fwait
mov
mov
mov
or
or
test
popa
js
insb
iretw
pushf
and
xor
scas
test
call
lock
addb
pop
ret
hlt
mov
popa
mov
sbb
cmpsl
cli
jmp
cmp
cmp
and
inc
aam
sarl
mov
or
mov
rcr
das
jge
adc
and
out
xor
xchg
loop
cmp
cmpsl
int3
sbb
pop
gs
andl
pop
inc
cmc
imul
lock
xchg
stos
jbe
adc
daa
cmovno
push
repnz
arpl
add
jns
cld
je
cmp
jp
add
and
jge
pop
das
ret
scas
hlt
mov
stc
insl
popf
ret
jmp
mov
jnp
cld
dec
mov
cld
int3
pushf
push
dec
div
or
mov
xchg
add
and
xor
xor
jmp
mov
cwtl
mov
add
mov
push
fwait
mov
shll
sbb
jb
aam
dec
pop
push
and
into
jne
push
iret
test
add
inc
arpl
cltd
push
cli
sub
js
mov
ror
xor
sub
js
cmp
mov
inc
or
addr16
cmpsl
out
cmpl
test
pop
or
pop
sub
lds
inc
cmp
out
xchg
scas
pop
cmp
jg
pop
mov
pop
pop
xchg
fidivs
leave
inc
push
jnp
nop
jmp
insb
stc
outsb
scas
add
xchg
dec
push
sarb
sub
push
jbe
cli
aas
push
inc
sahf
call
popa
cli
int
rcl
sbb
fcompp
jg
push
gs
movsb
add
out
and
mov
out
and
jecxz
and
leave
ffreep
rcl
xor
ds
fs
and
adc
jecxz
xchg
dec
inc
mov
push
rorb
pop
mov
out
mov
xchg
mov
mov
outsl
jge
cmpsb
or
imul
inc
cmc
push
sub
adc
out
popf
lcall
pop
lods
dec
bound
sbb
cld
int
popf
pop
xchg
jp
int
incb
iret
dec
or
rcrl
inc
pop
movsl
or
and
sub
test
lock
xchg
cmp
lcall
mov
cli
idivb
shl
shlb
fwait
jl
jge
call
sahf
fisubrl
movsl
outsl
pop
gs
clc
push
je
dec
jmp
out
jae
mov
sub
emms
sub
jle
gs
sub
and
aaa
mov
add
hlt
sbb
mov
faddp
movl
sbb
pop
sub
xor
lahf
out
sub
fimuls
iret
push
lods
sahf
jns
pop
lcall
sbb
das
cli
test
mov
imul
sbb
fcomps
adc
test
lea
mov
fwait
adcl
mov
enter
push
add
outsb
insb
rcl
scas
push
popf
icebp
push
dec
jo
xchg
loope
ds
imul
out
stc
loope
push
pop
test
subb
cmp
popf
pop
shr
test
dec
repnz
mov
lods
xchg
stos
aaa
scas
in
mov
add
mov
jmp
dec
cmc
sbb
daa
push
push
sbb
shrl
stc
add
pop
in
popf
scas
push
nop
insl
pop
adc
mov
in
push
inc
scas
or
inc
and
adc
lods
push
mov
lods
jecxz
icebp
out
mov
push
inc
dec
pop
push
cwtl
int
out
arpl
sub
xorl
mov
dec
adc
cmpsl
or
xor
lret
add
pop
sub
pop
jge
sbb
inc
add
ljmp
xchg
xor
cli
ja
push
mov
arpl
cmp
imul
inc
or
aad
fisubrl
ret
push
pop
xchg
imul
mov
sbb
jno
cmc
dec
out
cmp
out
movsl
fcomps
mov
pop
outsl
fs
clc
and
xor
aaa
cmpsb
xchg
pop
mov
icebp
sub
cmpsb
movl
push
push
jno
nop
subl
in
mov
test
mov
fnstenv
adcb
sub
pop
mov
push
pop
add
pop
adc
mov
mov
pop
and
bound
icebp
push
fisubs
sbb
cmpb
popa
daa
jnp
add
push
pop
lock
or
lea
jns
dec
stc
sbb
lods
in
dec
pop
adc
pop
mov
pusha
cltd
pop
xchg
call
imul
stc
jno
or
xor
adc
in
sub
rclb
xor
inc
cmp
or
mov
jbe
mov
and
push
push
faddp
stos
jge
fs
mov
ljmp
loopne
scas
bound
add
popf
clc
aad
mov
bound
or
jae
push
daa
js
cmpsb
mov
ret
pushf
cli
shrl
xchg
sub
push
cltd
sarl
faddl
aad
push
mov
adc
shr
xchg
es
jno
out
xlat
cmpsl
imul
pop
dec
and
rcl
sub
shlb
xchg
roll
mov
mov
std
out
mov
and
jl
sbb
stos
jmp
outsl
adc
cmp
xchg
nop
insl
jecxz
das
mov
jnp
in
and
in
lret
dec
xchg
pop
cmp
mov
sarl
push
push
cmp
mov
outsl
xchg
pop
and
jmp
ljmp
xor
inc
jno
nop
mov
imul
cs
les
popa
repz
push
loopne
popa
bnd
aas
jle
jg
push
mov
js
repnz
xchg
fnsave
sbb
ret
mov
repz
pop
xchg
or
std
push
fadd
mov
xlat
lods
iret
pusha
insb
rcrl
pop
cmp
mov
call
sti
jle
adc
or
push
into
sub
mov
js
jns
out
xchg
hlt
adc
repz
jno
xchg
mov
xor
jno
mov
imul
shlb
or
hlt
mov
push
fwait
cltd
dec
adc
adc
daa
cmp
cs
xor
xchg
lea
ret
imul
add
cmpl
jge
subl
lea
mov
sub
hlt
int3
roll
sbb
cwtl
jle
repz
aam
cmc
pop
cmp
sbb
pushf
mov
cmp
lds
call
mov
test
aad
iret
sub
test
loope
es
and
pop
mov
imul
inc
scas
cmp
scas
cmp
jecxz
pop
repnz
inc
xor
mov
jns
adc
push
cmpsb
jno
ds
inc
and
cmp
in
adc
add
sub
lahf
fildl
add
lea
loop
xor
mov
push
add
into
pusha
dec
out
fdivrs
outsl
adc
push
cmpsb
out
arpl
sub
out
push
push
insl
mov
out
iret
push
mov
mov
and
scas
and
sbb
cld
inc
pop
inc
add
mov
mov
xchg
pop
imul
ljmp
popf
mov
mov
imul
sub
outsl
js
mov
cmpb
cmp
push
adc
jge
pop
push
sbb
rolb
loope
mov
pop
and
inc
mov
cmpsl
push
push
fst
fldenv
adc
ljmp
xchg
inc
and
push
addr16
mov
into
mov
int3
cltd
leave
pop
lret
jae
jne
mov
mov
dec
inc
and
jns
pop
cmp
inc
lods
and
hlt
xchg
lahf
mov
mov
fadd
sahf
dec
es
and
pop
cwtl
jae
cld
add
sub
loop
push
nop
je
push
xchg
ret
fdivr
movsl
pop
hlt
jl
jl
out
push
cmc
ja
loop
in
and
mov
and
cmc
incb
sub
test
outsb
sbb
or
pop
ja
clc
dec
shll
movsl
fidivrs
push
sub
call
lcall
push
inc
mov
xchg
pop
test
std
mov
adc
idiv
push
ljmp
jb
push
imul
mov
inc
mov
mov
xor
loopne
mov
imul
add
aaa
fdivl
mov
dec
jl
xor
sub
mov
jmp
das
push
lds
mov
jns
mov
mov
mov
out
dec
test
call
lods
sub
pop
jns
mov
pop
loope
in
mov
mov
xchg
inc
cltd
sub
mov
bound
aas
inc
fwait
lods
inc
jmp
push
jae
dec
push
std
int3
imul
push
push
fmul
pop
dec
xchg
push
mov
cmp
subb
mov
dec
in
aas
in
jo
push
sbb
fadds
mov
nop
ret
mov
jne
scas
lods
sbb
sbbl
loopne
mov
insl
dec
adc
fadd
cmp
scas
inc
sub
or
clc
adc
popf
inc
or
inc
push
sahf
iret
adc
dec
repz
lods
and
inc
cmp
adc
pop
push
cmp
inc
or
aad
add
sbb
xor
push
aaa
in
dec
sub
lock
xchg
arpl
pusha
rorb
dec
popa
pop
add
data16
subl
ret
sbb
lahf
sbb
pop
adc
lock
in
je
call
mov
lods
sub
pop
jb
mov
push
xor
mov
daa
out
inc
cmp
aad
mov
pop
rolb
mov
rorl
and
rcrb
cmp
lret
jmp
lret
icebp
mov
insl
mov
pop
mov
adc
or
mov
mov
and
ret
lods
stc
xorb
inc
mov
add
xchg
ret
mov
and
fcoml
out
cli
das
clc
data16
xchg
jae
mov
mov
xchg
cld
sub
test
xchg
repz
insl
cltd
dec
inc
imul
call
inc
mov
test
fmul
jg
pop
into
ret
pop
adcl
test
mov
mov
call
sar
aad
mov
xchg
mov
dec
add
lods
push
xlat
lret
jns
fsubrl
das
fiadds
push
mov
or
ja
cli
cltd
push
and
jnp
in
or
nop
dec
mov
loope
bound
rol
xor
jecxz
lods
cmp
dec
out
aas
mov
sbb
jno
bound
inc
pop
pop
fs
sarb
push
hlt
and
add
test
and
dec
cmp
push
cmp
aas
fstpl
lds
push
or
dec
sbb
push
inc
ljmp
repnz
add
or
add
pop
push
dec
movsb
les
push
push
sbb
rclb
sbb
loope
fwait
mov
add
sub
mov
adc
stc
or
mov
lcall
push
push
jge
inc
or
lcall
cmp
pop
aad
xor
nop
xchg
movsb
lods
mov
je
xor
adc
jae
enter
cs
aaa
inc
lds
int
or
lea
mov
pop
jecxz
jle
mov
push
xor
mov
mov
enter
mov
repnz
and
add
and
stc
pop
mov
test
xchg
mov
or
fisubl
loop
mov
fucomi
dec
aad
stc
or
mov
iret
lds
jle
popf
rcrb
mov
adc
inc
and
jns
push
out
and
mov
test
push
and
push
ss
add
dec
rclb
pushf
push
fstpl
sbb
ja
pop
in
pop
adc
fsubs
bound
mov
icebp
subb
lock
es
cmp
sub
mov
cmp
mov
mov
ror
and
lods
jge
int
jle
dec
test
jno
in
fwait
xlat
xchg
outsb
xor
dec
and
mov
pop
add
dec
lock
in
cltd
pusha
scas
cmp
dec
jnp
xor
aad
aad
push
ds
adc
jecxz
loope
mov
mov
xchg
in
aad
mov
inc
test
pop
ffreep
inc
pop
inc
add
out
jno
in
cmp
cmp
xor
shlb
sbb
ret
fistpl
cmp
pop
loope
rcrl
js,pn
jbe
mov
std
mov
ret
out
jp
add
movsb
outsl
xor
cmp
pop
int
push
dec
rcrb
test
add
mov
fiadds
xchg
and
rcr
sbb
test
cmp
sub
cmpl
aaa
daa
sub
idiv
mov
lcall
out
adc
dec
jge
mov
push
or
xchg
cli
out
pop
daa
add
int
or
or
in
sub
dec
lock
jl
gs
insb
inc
or
negb
add
add
lahf
das
icebp
inc
iret
pop
popa
dec
test
add
cltd
or
sub
test
ds
pop
jno
pop
push
outsl
hlt
sub
stc
scas
or
jmp
aas
jg
nop
jp
inc
adc
adc
sub
pop
or
mov
dec
aas
add
pop
in
add
push
in
fcompl
pop
js
scas
roll
xchg
push
inc
xchg
inc
aam
and
addb
or
push
dec
lea
cmc
outsb
leave
jle
jge
push
mov
mov
xchg
lret
mov
ret
mov
pushl
and
jmp
and
pop
outsb
popa
xchg
xchg
and
cmp
aam
mov
mov
test
mov
push
mov
daa
lods
jae
loop
mov
mov
scas
sub
orl
cmp
or
inc
inc
or
out
adc
imul
inc
movsb
dec
or
or
sub
rcrb
insl
mov
jp
iret
inc
scas
jp
dec
push
out
popa
and
sti
push
sbb
adc
test
fiaddl
lea
insl
fwait
imul
xor
dec
cmc
xchg
mov
clc
xchg
outsb
mov
or
xor
lea
icebp
xchg
pop
push
xor
mov
sti
mov
xchg
lods
mov
mov
int3
repz
aam
dec
cmpsb
cwtl
inc
pop
jb
pushf
adc
fs
or
xchg
mov
aam
push
mov
add
idivl
adc
adc
mov
pop
fsubl
test
test
jecxz
cmp
mov
lahf
cmpsl
in
or
outsl
jg
in
stc
push
scas
mov
pop
dec
std
out
test
cmp
int
gs
ljmp
aas
xchg
push
lahf
mov
enter
and
xor
aad
out
insb
pop
pop
fmull
xchg
pop
jp
and
xchg
cmp
jmp
dec
push
and
aad
inc
out
cwtl
dec
jl
lds
dec
jl
xor
icebp
in
xchg
mov
pop
int3
arpl
punpcklwd
sub
xor
shll
add
mov
lret
sbb
cmp
lret
mov
outsl
scas
push
fists
cmp
xor
fisubs
dec
mov
lock
arpl
pop
rorb
hlt
or
fidivrl
lock
loop
test
je
std
insl
dec
repz
push
insl
rcl
lret
orl
push
scas
mov
movsb
jns
inc
inc
int3
or
mov
mov
repnz
sub
mov
sbb
mov
loopne
pop
repnz
cmp
gs
faddp
xchg
shlb
test
sub
das
sub
push
data16
inc
ficoml
mov
popl
pop
lock
lret
xor
aad
or
pop
fsts
xor
pop
mov
enter
in
or
in
mov
mov
sub
icebp
jne
push
mov
mov
insb
xchg
movsb
xor
imul
xchg
xchg
mov
mov
push
leave
int3
lret
lea
lods
cmp
pop
push
xor
mov
pop
lret
add
push
ss
pop
fcmovnb
in
jl
popa
jbe
fwait
inc
push
jmp
push
xor
imul
bound
or
out
notl
cld
sti
mov
int3
cs
mov
and
movsl
mov
xlat
call
xor
mov
aam
pop
dec
add
lea
pop
xchg
mov
cmp
iret
mov
push
pop
xchg
pop
push
mov
jnp
les
in
pop
mov
ljmp
push
lods
xchg
mov
inc
sub
arpl
xor
arpl
sub
stc
popf
bound
pop
push
or
inc
repnz
je
ja
lret
adc
mov
xor
and
xor
fsubrl
fsubl
sub
outsb
in
movsl
in
xor
cmp
jae
lds
mov
dec
mov
sbb
mov
shrb
ljmp
movsb
pop
fs
or
xor
aaa
xchg
pop
mov
out
test
outsb
rcrl
mov
mov
sub
inc
jp
cmp
push
push
and
xchg
mov
fimuls
je
cmp
and
push
ja
cmc
cmpl
jae
xor
and
clc
add
ljmp
mov
icebp
ja
jmp
dec
cmpsl
or
cwtl
push
push
outsb
pop
sbb
incb
mov
in
aad
cmp
sbb
ss
adc
pop
pop
ds
mov
iret
lret
mov
nop
push
sbb
and
adc
aas
xchg
push
cmp
dec
xchg
xchg
test
lcall
ret
or
out
leave
popl
cmp
sbb
sahf
mov
in
cmp
push
repnz
jne
nop
hlt
loop
pop
dec
rol
ss
jge
jns
int3
adc
or
jb
jle
adc
xchg
shll
mov
sub
mov
fstps
xchg
or
cltd
lahf
cli
mov
fnstsw
es
push
sbb
incl
add
ljmp
fistpll
sbb
xchg
sub
aas
or
test
mov
je
fdivrs
jge
add
adcb
xchg
cmp
ret
add
in
aam
mov
stos
fsubs
fwait
pop
sbb
lret
fsubs
or
ficomps
pop
jecxz
cs
add
loopne
movsl
xor
mov
scas
sub
imull
push
bound
jmp
shrb
jl
int
fsubp
imul
fadds
sbb
and
jae
mov
inc
push
imul
push
call
pop
xlat
push
xor
push
fwait
repz
loop
cmc
scas
pop
xor
test
adc
sub
iret
lea
or
mov
inc
push
mov
test
jmp
in
outsb
out
repz
xchg
outsb
enter
call
jae
sbb
rorb
or
inc
inc
test
jnp
xchg
mov
jno
xchg
fdivrp
fsubs
int
cltd
xchg
pop
and
lods
je
in
jb
mov
popa
aas
movsb
xor
aad
stos
mov
sub
das
adc
ljmp
pop
xlat
lcall
gs
aaa
mov
subb
sub
sub
pop
punpcklbw
mov
cmp
das
sbb
repnz
or
and
push
push
pop
sbb
out
fstpl
push
adc
push
mov
out
or
popa
push
icebp
addr16
into
adc
imul
cmpsb
ret
push
call
xchg
xchg
push
lods
mov
xchg
adc
shr
sbb
inc
and
push
jns
and
mov
imul
icebp
out
nop
and
repnz
and
out
aam
cwtl
imul
add
xchg
popa
pop
aam
fistps
arpl
sub
dec
add
sub
inc
or
cmp
sti
mov
fcmovnu
xchg
lret
sbb
arpl
push
adc
fidivrs
xchg
test
xor
or
repnz
les
cmp
lock
mov
mov
out
jnp,pt
subb
cs
es
mov
fld
inc
aas
push
enter
xor
jae
jle
mov
mov
addb
es
inc
scas
push
inc
mov
cwtl
lea
lea
adc
jae
cmpsb
inc
dec
sbb
pop
test
dec
sbb
ret
jmp
popf
jns
sbb
mov
push
xchg
lea
js
mov
add
mov
mov
dec
aaa
pop
adc
mov
cmp
mov
dec
and
lahf
adc
inc
add
cmp
jne
mov
pop
sbbl
jmp
xchg
xor
jmp
and
out
dec
and
shl
insl
mov
jle
subl
pop
sbb
cmpsb
dec
popa
xchg
fadd
leave
shr
dec
rcrb
test
cmc
pop
out
or
sub
ja
mov
xchg
aam
xchg
or
lods
sub
xchg
sub
cli
add
or
rcrb
cmp
inc
lret
out
clc
enter
pop
xchg
push
imul
imul
pushf
xor
cmpsl
xchg
test
lret
hlt
xchg
dec
xchg
or
lea
out
sub
test
in
add
aam
mov
lock
jmp
pop
out
jne
ds
jmp
sahf
loope
mov
je
adc
cli
in
or
in
loopne
mov
es
test
mov
cmp
xor
jge
pop
sbb
xor
rcll
jnp
addr16
add
cmp
mov
in
push
or
push
sub
dec
enter
aas
mov
sub
jbe
and
sub
adc
mov
push
add
push
ja
push
insb
out
dec
sub
dec
dec
push
add
sbb
and
out
cmpsb
push
ss
pop
insl
inc
das
repnz
xor
jne
mov
pop
mov
inc
out
loope
call
aas
fs
fcmove
shl
lret
jns
jge
inc
test
fwait
shrl
lea
in
lock
push
ss
and
pusha
jge
loopne
mov
xor
jmp
or
xchg
or
xor
mov
rcrl
movsl
and
pusha
jmp
cmp
enter
sbb
andb
fildll
in
adc
addr16
fisubrs
iret
bound
mov
cmp
je
inc
and
imul
mov
add
stos
pop
std
xor
mov
mov
dec
sub
push
mov
push
jge
je
shrb
push
test
sarl
jmp
dec
cmp
les
mov
jnp
cltd
fcomps
lret
fiadds
aas
xchg
ja
imul
jmp
nop
imul
bound
ds
dec
cwtl
fildl
sarl
xor
cwtl
test
pop
shl
and
dec
je
dec
loop
push
add
shlb
sub
jbe
stos
mov
mov
jo
rol
cli
in
jae
das
mov
xlat
mov
repz
movaps
insl
jo
sub
in
push
xlat
adc
lock
dec
jle
mov
add
or
add
inc
dec
enter
mov
sub
cld
jne
daa
fsubrs
mov
fisttps
sub
jl
pop
sbbb
sub
jl
push
mov
cs
cltd
cmp
ja
pop
test
mov
jg
addr16
popf
sbb
cld
into
ljmp
jle
push
fmuls
inc
push
arpl
lea
add
xor
mov
push
fs
movsl
push
movsb
pushf
ja
lods
cmp
movsb
jp
and
push
or
inc
lea
nop
loope
push
add
push
movsl
mov
mov
je
inc
sbb
sti
test
mov
jbe
fnstenv
enter
dec
lds
push
and
push
pop
call
lahf
lods
pop
pop
xchg
pop
pop
inc
test
jecxz
into
imul
mov
loopne
mov
inc
pop
inc
and
fs
jp
xchg
xchg
mov
lock
popa
lcall
sub
xchg
mov
gs
icebp
push
les
push
sbb
int
arpl
mull
les
aad
pop
xlat
popf
xor
es
adc
popa
ss
lock
outsl
pop
and
ds
test
inc
int3
ficomps
scas
sub
leave
push
pop
fadd
xchg
inc
test
js
in
adc
jecxz
pop
test
and
insl
xor
and
dec
pop
dec
fdivl
xor
loop
xorb
xchg
sub
cmp
push
enter
or
sbb
loope
mov
lods
rclb
lea
xchg
xchg
fstl
aas
leave
popa
mov
sti
repz
push
call
cmp
test
repz
das
arpl
mov
lods
aam
inc
addb
pop
in
jp
sub
mov
fnstsw
in
neg
add
lret
fs
es
sti
iret
mov
dec
icebp
lcall
add
inc
shrl
mov
test
test
inc
sbb
fwait
cwtl
jb
fs
fidivrl
jmp
out
mov
push
xchg
and
call
lods
scas
sarl
jecxz
imul
cmpb
test
push
mov
sub
fidivrl
xchg
jbe
xchg
lahf
or
add
loop
icebp
pusha
call
ffreep
mov
lods
jmp
adcb
adc
adc
je
push
cmp
sub
sbb
into
and
sub
in
lret
adc
daa
int3
push
in
cmp
mov
fstcw
cmpsb
xchg
into
scas
xchg
inc
enter
movsb
jmp
add
ja
fs
fisubs
inc
cld
add
mov
in
das
mov
int
jno
ljmp
inc
fstps
pusha
sub
pop
mov
out
xor
sub
xchg
cmp
movsl
mov
jle
sarl
es
sbb
push
adc
fiaddl
inc
loope
pop
out
dec
pop
divl
push
loope
cwtl
sbb
and
in
ret
push
call
cmp
push
leave
add
jb
stc
jge
and
ss
add
pop
fildl
mov
jae
hlt
clc
xlat
arpl
sub
fcomps
sub
mov
divl
loopne
out
cltd
lahf
arpl
jle
xlat
incl
mov
push
xchg
icebp
fwait
pop
adc
ss
out
in
jecxz
fwait
adc
add
xor
sbb
jl
and
and
ljmp
sub
add
xchg
add
sahf
fcomip
cmp
inc
mov
add
fcoml
repnz
insb
ds
pop
testb
test
fnstenv
push
fidivs
xchg
push
imul
jne
mov
stos
movsb
mov
adc
cli
pop
dec
popl
xchg
jne
sbb
subb
mov
dec
rcr
pop
lret
lods
push
movsb
ret
pop
dec
or
aas
outsl
xor
push
add
clc
movsl
std
mov
in
cmpsl
cli
das
lods
fistl
pop
stos
stos
mov
test
fnstenv
in
sub
imul
pop
and
je
cwtl
ja
adc
adc
shlb
xchg
mov
push
je
mov
js
inc
mov
mov
cs
and
cmp
in
xor
xlat
fisubs
movsl
in
pop
call
ss
and
sbb
lahf
out
add
aaa
pop
hlt
mov
adc
cmpsl
fisttpl
inc
enter
xchg
lds
ljmp
cld
movsb
pop
neg
pop
popa
fdivrl
sub
xchg
mov
mov
mov
mov
pop
xchg
inc
jg
in
frstor
jnp
inc
pop
jbe
pop
inc
mov
int3
aam
add
cmp
add
test
mov
add
addr16
add
sub
xchg
push
testb
jb
pop
mov
lods
not
cmp
mov
mov
lret
cmp
push
pusha
push
outsl
das
out
shll
lret
or
mov
sbb
testl
cmp
outsb
mov
xlat
pop
repz
and
inc
jmp
lret
mov
inc
sahf
out
or
call
sub
lcall
iret
adc
shl
or
push
mov
push
ror
cmc
pop
mov
in
pop
imul
adc
ss
das
push
cld
adc
push
addb
dec
aad
and
test
pushf
outsl
pop
xor
sub
daa
ljmp
and
or
or
pushf
popa
dec
cmc
mov
add
jne
dec
out
adc
das
dec
push
in
pop
in
or
frstor
imul
rclb
cli
mov
lea
cmpsl
cld
jns
xor
sub
aaa
je
fsubl
pushf
idivl
les
sub
inc
cmpl
dec
sub
push
adc
or
cmp
in
or
incl
ljmp
cmpsb
insb
repnz
jns
stos
into
cmpsl
mov
inc
sub
sbb
call
push
mov
xor
sub
cltd
pop
vmwrite
outsb
sub
adc
push
out
pop
ja
mov
outsb
adc
sahf
lcall
in
push
rol
stos
call
sbb
fisttps
sub
fdivs
and
inc
mov
frstor
inc
nop
loope
mov
jae
movb
adc
inc
xchg
ret
xchg
andb
dec
pop
or
out
push
sarl
inc
add
inc
mov
dec
jbe
push
cmp
scas
arpl
xchg
sub
xlat
jl
in
sahf
fldcw
adc
cltd
xchg
outsb
fsubrl
push
mov
loopne
popf
push
iret
mov
gs
and
push
mov
divl
push
pop
mov
xchg
pusha
push
hlt
or
pop
mov
js
jge
out
loop
xchg
mov
cmp
xchg
xlat
shl
shlb
out
cmp
subb
mov
xlat
sbb
lods
push
out
xor
pop
mov
cmc
js
popa
sahf
inc
mov
loope
pop
cli
inc
pop
incb
frstor
mov
rol
sub
add
jmp
orl
sbb
cmpsb
orps
sub
movsb
in
int
push
aam
push
or
scas
stc
cld
cmp
fmulp
xchg
mul
lock
inc
adc
pusha
xlat
jmp
lret
adc
outsl
mov
test
fcmovnb
call
add
jno
repz
hlt
cmpsl
dec
daa
pop
mov
mov
dec
les
push
shll
adc
cmpsl
xchg
sbb
push
hlt
loopne
das
in
sbb
fdivrp
cmpsb
popa
push
mov
int3
add
data16
xchg
mov
icebp
pushl
out
sbb
lds
inc
lods
add
scas
rcrl
pop
push
fcompl
mov
adcb
push
stos
imul
gs
inc
ljmp
mov
adc
arpl
push
aad
add
mov
andb
jo
mov
pop
jbe
dec
xor
gs
and
mov
xor
test
adc
fstps
aas
aad
mov
adc
add
in
pusha
jge
testb
call
insb
add
jmp
push
push
aad
and
test
out
aaa
mov
aam
mov
es
sbbl
push
mov
mov
xor
rorb
jno
xchg
lods
add
mov
stos
in
fbld
inc
aas
xchg
sbb
ret
pop
or
fst
mov
mov
fbstp
cli
repz
rorl
dec
cmp
mov
lds
dec
aad
dec
lret
pop
mov
inc
add
jp
inc
cmpsl
subl
jne
cmp
cwtl
sub
cmp
push
sbb
xchg
in
les
push
das
or
xor
pop
adc
cmpsb
imul
enter
push
dec
lods
lcall
adc
mov
mov
mov
cmpsb
flds
sbb
ret
idivl
sahf
xchg
jge
out
pop
std
cs
xchg
das
lea
jp
mov
sub
push
cld
xor
mov
pop
add
xor
mov
xchg
imul
sub
in
loop
pop
xchg
imul
rcrl
pop
dec
cmp
jmp
mov
or
pop
rcll
adc
testl
add
fdivrp
sbb
xchg
inc
sahf
sub
or
cmp
jno
push
testl
jns
and
ffreep
arpl
sti
idivb
sub
gs
ret
popf
inc
inc
hlt
cmp
aas
jp
or
xor
jle
jmp
mov
scas
and
adc
adc
fsubl
mov
fmuls
dec
jg
adc
jmp
inc
notb
jo
lret
add
cmpsl
fs
imul
int3
fcos
jae
pushf
outsl
xor
sbbl
aaa
jp
jo
aas
mov
sti
or
sub
cwtl
imul
and
sbb
mov
imul
xchg
push
jb
lds
jnp
xchg
loop
movsl
lock
xchg
pusha
mov
in
push
rolb
cltd
sub
mov
sbb
js
aas
xor
inc
xchg
push
jecxz
mov
into
xor
sub
stos
mov
scas
test
sub
mov
jns
scas
inc
rcr
xchg
jecxz
push
add
cmp
fwait
imul
adc
loope
mov
xor
inc
xor
imull
inc
adc
imul
sub
es
push
jmp
ret
jge
into
push
push
cmpsl
dec
insb
xchg
clc
add
or
mov
sub
imul
xor
in
in
out
test
mov
cmpsl
jbe
pushf
sub
test
push
and
mov
add
js
xchg
aaa
sub
cmp
mov
mov
pop
xchg
push
not
jp
loope
adcl
mov
scas
and
sub
jmp
bound
ds
into
insl
dec
jae
test
scas
fnstenv
push
mov
nop
sub
es
cli
jg
mov
ljmp
movsl
xor
mov
aas
push
in
lods
adc
mov
cmpb
loop
bound
cmc
jae
shlb
sbb
inc
jae
sub
shl
cltd
push
cltd
mov
or
movsb
out
ja
cmpsl
and
mov
xchg
dec
jnp
sbb
pop
inc
adc
sbb
pop
xchg
cs
mov
xor
mov
add
pop
xchg
popf
std
push
clc
mov
out
cmp
push
sarl
jp
sti
mov
lods
push
orb
sub
stc
fstpl
fldenv
jne
pop
xchg
fnstenv
mov
push
xor
cwtl
or
loop
ljmp
xor
dec
out
push
enter
mov
jmp
fldcw
push
cmpsl
cmp
fidivl
clc
rolb
ds
sbb
lret
xchg
xchg
mov
add
pusha
or
mul
daa
dec
dec
lcall
outsl
mov
lods
add
ja
repnz
xchg
add
popf
dec
lret
sbb
clc
inc
xchg
cmp
in
adc
inc
pop
enter
sti
pop
rcll
out
leave
fiaddl
jne
repz
pop
cwtl
mov
sbb
and
pop
xchg
insb
pop
mov
cmp
mov
cmp
cmp
mov
jmp
dec
push
loopne
mov
and
aas
outsb
mov
in
out
pop
inc
lahf
ret
aam
scas
pop
dec
mov
xor
ljmp
cwtl
fldl
sbb
shr
pop
ror
adc
inc
add
cmpsl
push
sub
xor
lods
sbb
dec
inc
adc
mov
cmc
inc
mov
cmp
lahf
aaa
nop
das
jmp
adc
jp
aam
cmc
enter
outsl
mov
xor
push
xlat
xchg
adc
mov
data16
xlat
leave
xor
in
adc
mov
stos
sub
mov
xor
dec
insl
push
scas
testl
fwait
dec
sub
mov
jne
iret
in
out
xor
mov
push
jne
dec
pop
add
fildll
lods
jle
stos
out
adc
and
arpl
mov
sub
out
fwait
jbe
bndstx
pop
jle
ret
adc
push
push
xor
mov
fimull
negl
dec
push
outsl
lods
hlt
mov
subl
adc
sahf
test
inc
pop
pop
add
xor
imul
cmpsl
rclb
adc
xor
pop
lods
lods
aaa
or
mov
mov
push
xchg
cmp
push
data16
jmp
cmp
loop
stos
xor
jae
and
outsb
xchg
pushf
pusha
sub
push
or
adc
jg
test
lahf
ret
fs
sub
inc
sbb
cmp
movsb
call
adc
push
add
cmp
ror
in
xor
cwtl
daa
lcall
inc
jmp
jecxz
jno
subl
jae
push
movb
pop
xor
add
outsl
sub
jmp
adc
jnp
pop
iret
push
sub
add
pmaxsw
sbb
mov
int3
xlat
jnp
mov
or
adc
mov
lcall
mov
out
lahf
loopne
aas
mov
enter
fcmovu
push
dec
loopne
xchg
test
mov
jne
inc
out
dec
xor
mov
ds
add
rcrl
jb
lods
dec
pop
stos
dec
cmp
or
adc
mov
inc
fwait
mov
aaa
fimull
mov
inc
xchg
dec
les
or
inc
xor
mov
repz
das
cmp
sti
pushf
lret
leave
xor
outsb
dec
add
jns
mov
cmpb
in
test
dec
loope
mov
add
xchg
mov
leave
mov
ja
dec
fiadds
out
sub
dec
mov
stos
sub
jmp
and
mov
xor
dec
sub
dec
jbe
and
stos
jo
inc
test
divl
roll
sbb
leave
movsl
xchg
aaa
inc
fwait
jb
push
mov
push
xchg
lods
jge
mov
rclb
mov
and
loopne
out
push
popa
mov
jecxz
rcr
and
cs
je
xor
icebp
lock
pusha
cwtl
ljmp
nop
lcall
imul
in
adc
data16
xor
cmp
dec
shll
sarl
je
shl
insb
sub
out
int
gs
xchg
pop
sarl
insl
jnp
cmp
leave
lcall
pop
mov
or
test
ret
popf
pop
cmpsl
xlat
mov
xchg
push
or
mov
test
jnp
pop
jp
jle
loop
inc
lcall
and
xchg
ds
sub
nop
dec
sub
or
dec
ret
add
testb
xchg
shll
mov
test
aas
sub
add
cmp
in
mov
fmuls
outsl
inc
fimuls
test
aad
in
shlb
loop
or
loop
test
pop
xchg
xchg
je
mov
mov
call
jmp
lret
xor
lods
iret
ja
pop
ret
push
adc
mov
cmp
mov
cmp
mov
stc
repnz
xchg
movsb
imul
in
mov
and
ret
pop
mov
add
mov
sbb
xlat
mov
test
cmp
push
aad
xor
jl
mov
loopne
jp
imul
icebp
rclb
loope
ret
xor
sub
xor
dec
mov
jno
and
adc
push
ds
pop
dec
xchg
fadd
xchg
shrb
aad
push
mov
xor
jecxz
cmp
sub
scas
stc
popa
insb
icebp
sub
fcmovnb
std
sbb
mov
dec
jecxz
xor
push
mov
or
pop
leave
xchg
cmpsb
xchg
mov
lds
shlb
and
cmp
data16
addl
test
imul
or
mov
add
cli
outsb
dec
gs
cmp
imul
pop
lahf
lods
push
xor
dec
sub
test
aad
mov
mov
popf
jmp
mov
pushf
and
or
cwtl
inc
sti
jnp
or
add
out
jo
std
or
cmp
xor
mov
loop
outsl
gs
jne
push
fwait
rcll
add
and
stc
sbbl
xchg
dec
lea
test
xor
add
xorb
xchg
cltd
jg
les
daa
jae
negl
mov
test
pushf
test
das
xchg
jo
push
jbe
sahf
xlat
adc
repz
rorl
push
gs
cmc
sahf
dec
dec
xchg
shlb
out
int
popf
jl
pop
sbb
inc
fsubrs
outsb
cwtl
int3
test
pop
cmc
fisubrl
xor
lock
out
push
ret
mov
fdivr
into
and
stc
cld
mov
aam
inc
or
or
popa
push
xchg
mov
or
jecxz
jb
loope
pushf
mov
and
dec
nop
pusha
fldenv
addr16
or
daa
and
lret
inc
mov
insl
jno
fwait
xor
pop
rolb
cmc
daa
mov
push
repnz
push
sub
adcb
dec
sub
out
xchg
cwtl
inc
mov
jb
or
mov
push
ds
loop
mov
dec
mov
arpl
xchg
adc
mov
stc
jge
decl
sub
int
xor
sub
sahf
in
xor
and
and
push
lods
add
hlt
dec
mov
xor
imul
scas
xor
mov
leave
pop
movsb
test
and
repnz
in
and
insb
pop
movsb
mov
push
mov
addr16
and
sbb
das
mov
jge
mov
lcall
ror
cmpb
add
dec
into
lret
dec
ljmp
and
sub
and
pusha
leave
jl
mov
ja
xor
hlt
sbb
xlat
xor
push
aam
loop
mov
in
xor
mov
xchg
loopne
push
stos
jne
lret
push
push
push
ret
cwtl
adc
nop
es
cmpsl
jp
repz
mov
mov
xor
push
jno
js
addr16
cs
mov
lods
adc
jp
and
dec
fsubl
add
jle
fucomp
cmpsb
mul
adc
mov
pop
in
into
int3
sarl
clc
js
clc
aas
enter
xor
in
cmp
or
insl
sbb
rol
in
cmpsl
loopne
in
in
xchg
jns
loopne
insl
sbb
out
in
sub
push
sub
daa
and
pop
and
sbb
dec
push
mov
adc
and
mov
les
mov
stc
aad
in
lods
inc
js
pop
push
xor
pop
int3
mov
daa
aas
or
in
push
pop
outsl
mov
iret
pop
cmc
cmpsb
mov
es
jb
data16
and
mov
lahf
lea
jnp
imul
in
adc
jbe
in
mov
jecxz
shrl
push
adc
mov
cmp
int3
aaa
add
cltd
push
jg
xor
mov
testl
fmuls
sbb
or
add
mov
add
mov
adc
push
cmp
push
leave
jle
jecxz
push
mov
add
test
or
push
xchg
xor
cmp
int
jo
fidivl
mov
cs
adc
jg
dec
jnp
fdivrp
movsl
test
fwait
scas
inc
jg
and
pop
mov
movsl
sarb
jne
scas
push
icebp
mov
faddl
adc
fistpl
mov
mov
cmpsb
shl
out
lcall
repz
loope
shrl
sub
aas
xchg
mov
jmp
icebp
lret
xchg
xchg
in
sub
xchg
insl
ss
loop
dec
sbb
jle
cmp
sbb
dec
jge
dec
inc
cmc
mov
movb
es
lahf
push
sub
scas
xchg
jnp
cwtl
or
adc
dec
add
cli
imul
and
jns
pop
push
xor
jb
shrb
dec
xchg
repnz
icebp
clc
xchg
mov
dec
sbb
fidivs
pop
xchg
pop
jo
rcrb
outsl
jae
sub
mov
test
and
movd
loope
and
loop
xor
je
enter
jmp
pop
cwtl
aad
jecxz
push
pop
movsb
jo
aad
lea
push
or
sbb
cltd
movsb
fldl
inc
aad
hlt
inc
ja
std
sub
or
mov
inc
ja
ds
nop
shll
mov
push
ret
repnz
mov
ret
push
pop
in
pop
mov
sbb
cmc
movsl
paddsw
loop
xchg
loop
sbb
in
std
cmp
add
sbb
imul
leave
sub
adc
pop
cmpsb
sbb
sbb
inc
out
divb
daa
xlat
push
sbb
cmp
daa
mov
cmp
xor
popf
inc
inc
loopne
std
push
es
xchg
sbb
inc
push
inc
ret
xchg
inc
fwait
loop
cmpb
inc
mov
lods
gs
adc
in
test
cmc
xor
cltd
add
sbb
cmp
push
jb
ljmp
ja
mov
cmp
maxps
clc
popf
jno
push
bound
jae
xchg
int
icebp
shl
add
pop
sbb
psubd
xchg
andb
push
adc
pusha
adc
pusha
and
mov
xchg
out
dec
cwtl
lcall
pop
xor
rcrl
into
jle
sub
push
sbb
and
mov
cmp
arpl
insl
test
sti
mov
sahf
mov
les
int
adc
adcl
loopne
mov
mov
cmp
movsl
mov
add
sbb
mov
cmp
data16
jne
aad
inc
pop
mov
ret
sti
ja
lods
pop
add
push
jge
pop
xlat
out
sub
xor
leave
mov
out
pushf
dec
or
add
xchg
or
inc
aad
fldl
pop
mov
sbb
mov
test
punpckldq
ja
push
andb
xlat
jno
cmp
mov
repz
jge
fdiv
ja
and
pop
dec
and
icebp
mov
xor
jl
movsl
enter
push
je
pop
xchg
in
mov
ja
lods
xchg
xor
add
jae
or
inc
test
push
mov
jmp
adc
notl
dec
jecxz
repnz
scas
data16
push
int3
shll
shlb
cmpl
pop
aas
arpl
pop
push
mov
add
std
js
mov
push
xor
mov
xchg
aaa
mov
jg
pop
aaa
bound
inc
sub
jp
stos
sbb
jp
test
sahf
pop
fisubrl
mov
loope
jno
std
inc
cmp
jmp
adc
and
imul
xor
jle
insb
gs
cs
fidivl
mov
jle
pop
ret
xchg
xchg
xor
sbbb
dec
dec
pusha
push
fdivrs
xchg
mov
fstpt
fwait
add
mov
lds
ret
push
pusha
daa
dec
and
sub
mov
xchg
push
nop
push
hlt
add
jl
test
ja
mov
nop
das
orb
xchg
push
movsb
mov
add
imul
push
imul
iret
mov
pop
xorb
inc
jo
scas
fcoml
ja
adc
lret
insl
or
cmp
push
push
inc
push
jb
in
mov
push
push
leave
test
jecxz
jmp
cwtl
pop
lcall
int
mulb
in
stos
subl
fildl
orb
ds
cmp
sub
call
aad
inc
mov
insl
mov
sbb
pop
fs
lods
pusha
shlb
jo
pusha
mov
jmp
sbb
shll
sti
pop
call
xchg
lea
jb
mov
xor
aas
outsb
and
mov
or
xchg
fsubr
es
sub
test
je
mov
stos
or
cs
lods
ss
hlt
mov
stos
and
fdivl
push
xlat
jno
adc
repz
jbe
jmp
mov
inc
push
mov
mov
mov
imul
flds
jl
or
jo
icebp
jnp
sub
xor
jl
cli
sbb
push
negl
mov
daa
cli
out
aam
mov
add
test
adc
jle
test
cmpsl
jge
cmp
xchg
ds
jg
cmp
xchg
add
jmp
sub
out
mov
push
add
scas
andb
int
clc
and
sub
sbb
stos
inc
or
sub
cwtl
push
cmp
aas
popl
add
adc
jge
inc
push
jg
sub
test
mov
inc
mov
push
insb
xchg
aam
push
pop
sbb
shll
ret
jecxz
fldt
inc
sub
add
add
les
pop
mov
outsb
mov
aam
ljmp
mov
jge
xchg
out
lds
mov
cmpsl
mov
xchg
repz
sbbl
jo
mov
aad
add
xlat
mov
std
test
repz
ret
sbb
dec
out
aam
repz
or
lods
and
test
xchg
lahf
lahf
sub
dec
jp
add
and
cmp
push
add
inc
dec
into
movsb
cmc
xchg
push
xor
xchg
idiv
add
inc
pop
pop
das
xchg
dec
push
leave
sbb
sub
pop
into
sbb
mov
push
shrl
inc
scas
push
iret
xchg
das
jne
fnstsw
jae
or
nop
mov
cld
das
sar
push
and
out
jb
pop
lock
mov
jns
jnp
adc
pop
leave
dec
push
pop
inc
rol
lahf
push
data16
and
push
inc
dec
popa
push
or
lret
mov
push
mov
adc
mov
xor
mov
jb
aaa
add
dec
in
adc
mov
icebp
push
sbbb
push
or
mov
jle
sub
rcll
addr16
push
mov
inc
add
lods
scas
lret
mov
andl
lahf
sbb
popa
ret
mov
push
add
test
cmp
sub
cmp
and
stos
in
data16
fcoms
mul
xchg
lods
sub
xor
xchg
adc
mov
mov
insl
addr16
lretw
fiadds
jge
sub
rclb
lds
and
and
and
sbb
mov
shlb
scas
js
addl
insb
insb
xlat
shrb
inc
pop
rcr
mov
sar
or
stos
mov
out
lods
jg
add
add
dec
enter
icebp
sub
add
push
pop
mov
dec
das
addr16
mov
mov
cmp
in
lahf
inc
push
movsb
cwtl
inc
sub
jle
push
pop
xchg
sub
out
jle
push
pop
and
pop
int
add
inc
ds
scas
dec
dec
enter
test
push
adc
lahf
cmc
test
std
xor
sti
mov
sbbb
dec
lods
adc
ds
insb
dec
int
in
add
push
or
sar
xorb
ret
stc
aad
mov
insl
fchs
dec
outsb
and
add
ljmp
shrb
mov
mov
in
movsl
in
dec
sub
xor
fcmovb
in
push
js
mov
push
and
ret
xchg
fsts
push
mov
div
pop
pop
pop
cmpsl
in
jae
xchg
js
je
lea
cmp
xchg
cmp
cmp
adc
push
pusha
xor
sbb
je
and
lea
shrl
jno
sub
test
jae
dec
test
sti
movsl
or
push
mov
mov
aas
sub
mov
or
movl
icebp
stc
repnz
inc
mov
push
cltd
ficoms
jp
cmpb
push
sbb
insl
xchg
ret
iret
out
or
out
icebp
jp
dec
mov
stos
and
sbb
adc
loop
ret
fwait
test
push
inc
xor
mov
xor
mov
xchg
jo
ds
cmp
and
loopne
inc
cmp
fimuls
daa
and
push
add
push
lret
pop
int3
sbb
jge
addb
mov
fcmove
in
fstpt
and
loopne
pop
mov
mov
lahf
sub
leave
notb
pop
or
test
push
rol
lea
lock
sarl
cli
xchg
mov
insl
std
sarb
int3
movb
cmp
jecxz
pushf
outsb
inc
xchg
mov
pop
aad
push
add
fimuls
push
cmp
jne
hlt
xchg
and
repnz
mov
add
aad
inc
push
in
divb
fisubrl
mov
sub
loop
cmpsb
divb
push
daa
gs
ja
std
push
cmc
ss
in
inc
insb
int
or
adc
mov
adcb
dec
loope
ja
mov
outsb
pop
cmp
pusha
into
ljmp
push
fstps
ss
push
in
mov
mov
add
cmp
out
mov
clc
ja
clc
inc
lret
cmc
test
js
xchg
test
jmp
shll
mov
dec
xlat
arpl
lea
or
loop
cs
dec
push
adc
stc
mov
inc
jbe
es
in
aad
sub
jbe
cs
rcrl
mov
insl
xor
inc
mov
imul
jle
mov
addl
test
sbb
cmp
jecxz
fs
lahf
sbb
mov
mov
fs
add
stos
push
loope
pop
pushf
and
iret
mov
and
jbe
pop
mov
enter
xor
pushl
cli
mov
lcall
xchg
jg
add
push
test
inc
ffree
jle
lahf
test
fisttpl
outsb
js
xchg
ss
test
rol
push
das
dec
push
pop
push
mov
xchg
outsb
add
mov
dec
bound
xchg
xchg
repnz
mov
dec
fisttps
pop
inc
mov
scas
jmp
add
jp
fs
pop
mov
loopne
xchg
sti
stos
lcall
arpl
xor
pop
pop
mov
outsl
in
je
mov
push
out
mov
or
enter
mov
pop
stc
xor
nop
das
mov
inc
adc
leave
hlt
and
add
lret
sub
shll
hlt
dec
out
les
xor
xorl
popa
pop
xor
cld
lods
mov
pop
nop
sbb
ror
fildl
adc
fbld
subl
movsb
stc
cmp
out
rcll
pop
int3
add
out
popl
jmp
add
fst
dec
mov
or
ret
cmpsb
in
and
icebp
mov
and
sub
dec
mov
popf
jb
xchg
cltd
cmpsl
cwtl
loop
lods
int
cmpsb
mov
sbb
mov
xchg
cmp
dec
imul
testl
mov
xor
or
push
fnsave
stos
or
movsl
sbb
xchg
lcall
out
test
mov
and
popa
in
xchg
loop
mov
xor
sbb
push
jg
sub
cltd
mov
fildll
adc
push
into
inc
xchg
in
ljmp
mov
push
test
loop
pop
mov
stos
dec
pop
test
or
pop
inc
test
leave
out
mov
inc
repz
sbbb
clc
addl
cmp
pop
jbe
or
mov
mov
mov
dec
mov
mov
add
popa
mov
mov
and
and
or
sub
adc
xor
mov
pop
mov
sub
sti
ret
pop
aam
xor
push
dec
out
sub
mov
repz
test
shll
mov
xchg
push
jne
insl
mov
shl
push
shl
add
repnz
call
aaa
mov
sbbb
dec
lahf
std
sub
jne
ds
daa
ja
add
push
push
mov
adc
mov
stos
push
es
and
mov
mov
xor
stc
cmpsb
std
test
popa
int3
dec
sti
xchg
hlt
mov
idivl
mov
xor
inc
fs
adc
femms
lods
in
adc
es
mov
aam
or
push
ficoms
rcll
cmpsb
fisubs
dec
es
imul
aaa
and
adc
or
push
mov
cli
addb
in
xchg
loop
sub
sbb
ja
add
bound
adc
mov
aas
push
movsb
inc
push
dec
in
xchg
repnz
xor
jl
sti
and
pop
add
or
stos
cwtl
or
pop
rcr
dec
push
stos
lahf
inc
or
rcll
jb
cwtl
int
popf
push
mov
mov
mov
in
jmp
lcall
shlb
mov
das
std
jo
pop
mov
cmp
fs
fwait
repz
dec
or
aaa
in
push
insl
push
scas
adc
les
inc
xor
adc
and
jmp
repz
mov
ljmp
movsb
enter
push
mov
pusha
xor
mov
xor
push
movsl
and
les
sbb
std
arpl
sbb
xchg
addr16
push
lea
jl
adc
add
xor
inc
pop
sti
fyl2xp1
xor
rol
lahf
and
mov
jne
repnz
ljmp
xlat
ret
sahf
or
jbe
push
rolb
loop
mov
fimull
and
les
scas
lret
loopne
pushf
fldenv
jle
xor
add
lods
dec
out
or
lock
adc
push
push
cld
inc
sbb
inc
fmul
xor
mov
movl
adc
mov
add
dec
dec
lret
std
lahf
sbb
pop
stos
xchg
je
gs
dec
mov
sbb
subb
fnstcw
sub
push
sbb
adcl
cltd
jl
mov
int3
sbb
pop
mov
sarb
mov
int3
ss
fdivrl
fs
iret
push
movsb
jecxz
inc
inc
jl
inc
outsl
in
dec
mov
aaa
mov
cld
clc
adc
aad
push
in
ja
mov
hlt
jnp
add
and
popf
cmp
insb
pop
sub
hlt
lods
cmp
and
inc
mov
inc
scas
in
ljmp
insl
enter
test
and
cltd
ja,pt
dec
and
dec
test
inc
xor
mov
inc
popf
stc
mov
inc
cltd
inc
aaa
in
mov
jbe
pop
cmp
mov
gs
sbb
aad
mov
test
dec
mov
cmp
cmpsl
lret
stos
bound
nop
mov
fiaddl
int3
jnp
jle
lcall
sbb
mov
stc
lock
int
out
and
icebp
hlt
aaa
outsb
mov
inc
popf
fucom
jbe
sti
cld
and
pop
push
jns
cltd
into
pushf
xor
xor
dec
pop
push
stos
or
or
fstps
xchg
sbb
xlat
das
pop
ja
pop
fs
fcmovnbe
imul
ret
loop
inc
pop
sub
clc
add
cmpsl
lock
je
push
mov
dec
or
imul
cmpsl
mov
loope
and
mov
sub
sub
stos
xor
push
mov
mov
loope
cwtl
cli
xchg
or
cltd
fsub
pop
inc
push
aas
js
int3
cltd
hlt
mov
roll
outsl
pop
cltd
mov
mov
cltd
out
ja
or
jl
out
xchg
lods
dec
and
enter
sub
jecxz
or
push
pop
cmp
dec
cli
cmp
lret
inc
xor
dec
lods
or
loopne
sbb
adc
mov
fildl
xchg
xchg
loopne
imul
jge
and
lret
mov
push
mov
mov
cmp
dec
push
insl
mov
pop
jmp
bound
xor
mov
and
fisubs
pop
xchg
xchg
bound
add
xchg
or
pop
jl
and
test
stos
mov
pop
cmp
push
jb
das
push
fisttps
and
pop
cs
add
movsb
jnp
inc
inc
pushf
sbb
add
sbb
mov
loopne
jl
enter
xchg
adc
pop
rclb
cmp
fabs
and
ficoms
std
or
adc
test
pop
test
xor
insb
out
mov
outsb
pop
xchg
lahf
xor
sarb
rorl
add
cs
mov
outsl
aam
mov
andl
std
mov
and
addl
nop
call
xor
mov
loope
not
mov
das
jle
xchg
rorl
repnz
aad
lods
orl
jp
dec
ret
bnd
pop
shlb
les
xchg
dec
push
or
cmp
xchg
into
ret
lcall
inc
scas
cmpsl
pop
cld
cmpsl
jne
jmp
stos
xorl
scas
push
and
mov
shrl
pop
sbb
mov
sub
repnz
mov
imul
ret
repz
mov
dec
pop
mov
sbb
cmp
jo
int
xor
sbb
inc
sub
aaa
nop
rcrl
test
stc
xchg
lea
mov
pop
pop
rorl
mov
push
lea
test
xor
fstpt
sbb
mov
sbb
hlt
cltd
jne
mov
lock
aad
xor
cmp
cmc
push
clc
or
dec
xor
pop
ret
sub
fs
popa
cs
dec
add
andb
popa
popf
inc
xor
dec
add
xor
test
and
out
pop
imul
mov
in
cld
test
rolb
xor
in
aaa
cmp
push
mov
cmp
jle
rorb
fadd
insl
stos
mov
add
push
mov
les
push
sub
mov
inc
mov
les
dec
inc
add
cltd
adc
mov
jb
aaa
dec
outsl
pop
int3
xchg
mov
jno
outsb
mov
repz
pop
divb
cmp
fisubl
dec
xchg
aam
adc
ss
xor
mov
pushl
pop
and
mov
sbb
sub
mov
xchg
sbb
mov
les
mov
sarb
push
test
in
pop
push
mov
ja
stos
push
xchg
in
mov
and
out
stc
push
sbb
pop
stc
int3
add
and
dec
pop
jge
jbe
mov
add
push
call
scas
sar
roll
sahf
sub
repz
ds
test
hlt
movsb
cli
cmp
insb
sub
jmp
fcomps
or
scas
adc
pop
addr16
dec
cmpsb
pushl
ret
sbb
mov
push
cmp
das
push
roll
jnp
idivl
inc
mov
adc
pcmpeqb
adc
std
addl
cs
daa
push
sub
int
inc
mov
sub
loopne
and
adc
dec
notb
es
or
jecxz
daa
shlb
xchg
test
data16
in
faddl
fistps
jne
call
mov
les
inc
rorl
push
les
idivl
xchg
out
sbb
je
icebp
cmp
inc
mov
in
js
jnp
insb
xchg
sub
mov
jge
xchg
int
sbb
bndldx
popa
adc
mov
imul
sbb
push
loopne
leave
lret
cs
mov
stos
sub
hlt
rcrl
hlt
sbb
aam
and
jb
sub
das
cmp
pop
mov
mov
add
aad
mov
out
xchg
jno
popa
and
stos
scas
jbe
sub
out
adc
jmp
fsts
cmp
xchg
mov
sbb
or
jl
jns
mov
mov
icebp
decb
movsb
outsl
sub
push
mov
cmc
push
mov
jmp
pop
fmull
cmpsb
or
lods
je
inc
cs
mov
cmp
or
push
fstl
jg
jl
mov
push
rcl
pop
and
xchg
in
lahf
sbb
in
and
fwait
or
ret
ret
dec
lock
pop
movsb
in
add
inc
lahf
xor
rcl
aad
dec
cmc
pop
pop
clc
jbe
fldt
adc
dec
stc
in
add
test
out
pusha
pop
dec
sub
mov
xchg
sbb
lret
pop
pop
rorb
jns
out
and
jae
scas
repnz
inc
lods
mov
scas
movsbl
inc
push
sbb
lea
adc
cmpsb
sub
or
lods
lret
testl
or
inc
jae
decl
loop
pop
or
pushf
aam
pop
and
or
fdivrl
inc
clc
fmul
xchg
out
int
sbb
sti
sbbb
jbe
jl
popa
mov
pop
mov
sbb
adc
inc
insb
or
cmp
hlt
pop
cmp
push
xchg
movsl
push
jge
cmpsb
add
inc
xchg
stc
mov
leave
or
insl
mov
mov
jb
sbb
imul
mov
lea
push
out
mov
lock
lahf
or
dec
dec
test
pop
sub
mov
sbb
ror
sarl
bound
in
push
xchg
or
jp
stos
fists
ljmp
push
loope
movsl
aas
lret
or
xchg
pop
xchg
and
push
mov
add
cmp
lret
inc
cmp
pop
jno
mov
mov
mov
push
mov
loop
and
sbb
jge
xor
jb
adc
dec
mov
adc
ret
clc
cltd
mov
cs
cmp
xor
bound
mov
ja
mov
adc
ss
mov
fwait
jl
int
mov
sub
fs
insl
loopne
adc
cmpsl
aam
out
push
jmp
cltd
call
lods
xor
sahf
jl
lods
add
movsb
in
push
push
lret
in
lock
jp
xchg
adc
push
rolb
lds
nop
push
adc
add
mov
jle
mov
das
mov
cmp
test
ret
nop
out
rclb
shlb
mov
cmp
hlt
sarl
js
ja
fdivs
sti
loope
sub
repnz
inc
inc
adc
das
sub
or
movsl
js
mov
scas
inc
push
sbb
xor
push
add
sti
jmp
sub
push
inc
sbb
fucomp
movsl
mov
aam
fstpt
cs
xor
and
icebp
addb
ret
inc
mov
hlt
es
ret
sbb
out
sub
mov
jle
repnz
or
in
adc
in
jle
pop
sbb
or
mov
ret
cmp
lret
sub
sub
add
adc
and
in
and
mov
mov
or
adc
les
aam
sbb
call
pop
and
aad
repz
push
addr16
inc
lock
jno
je
in
and
das
xor
sbb
ja
ret
pushf
loope
je
sub
sbb
jmp
jg
sbbb
xor
mov
jo
xor
outsl
jns
out
push
and
in
stos
xor
lcallw
mov
orl
dec
stc
xchg
sbb
test
int3
in
out
xchg
and
mov
inc
cld
cmp
ss
clc
xor
jecxz
flds
fstl
movsb
dec
mov
lds
push
cmp
add
scas
xor
into
fldt
mov
sbb
sub
dec
mov
stos
or
dec
sbb
and
mov
nop
mov
stos
and
adc
popf
mov
daa
mov
dec
or
shll
outsb
inc
push
push
aam
in
jmp
mov
pop
nop
int
mov
push
aaa
das
cmp
xchg
sub
jns
scas
mov
mov
push
and
scas
gs
repz
insb
mov
sub
pop
xchg
cmp
shll
push
movsb
mov
mov
mov
pop
out
shrl
stos
mov
add
test
cmp
adc
cmp
es
sbb
subb
xchg
repz
mov
out
pop
mull
jge
shrl
xchg
and
xor
lea
jae
inc
mov
roll
dec
and
mov
inc
mov
inc
jp
mov
popa
outsb
mov
clc
cmc
bound
xor
negb
icebp
es
out
aad
push
clts
push
mov
jl
push
xchg
fs
xlat
and
mov
leave
cmp
loopne
and
icebp
fistl
dec
sbb
daa
stos
call
push
jp
mov
cltd
fcomps
out
nop
xchg
out
push
fsubp
fwait
or
pop
mov
push
int
sbb
stc
cs
loope
addr16
movsb
sbb
pusha
or
push
cmc
imul
push
lock
idivb
out
pop
mov
ret
xlat
inc
cmp
mov
roll
scas
or
rcrl
sbb
sbb
out
enter
in
inc
shlb
fs
xchg
add
push
imul
scas
dec
push
out
jne
lret
test
push
shlb
mov
nop
add
icebp
sub
cwtl
adc
pop
stos
mov
mov
lret
ljmp
mov
setno
xor
or
xchg
into
sar
and
jg
scas
call
pop
fldcw
or
xor
lret
cltd
rcrb
insb
popa
fs
outsl
jne
sbb
test
jae
into
inc
jne
imul
inc
call
into
daa
icebp
mov
add
push
xchg
and
ja
rcll
sbb
pop
dec
fiaddl
cmp
js
xchg
push
cld
push
pop
das
mov
lods
cmp
ds
pop
mov
je
repnz
or
jo
dec
popl
and
sbb
insl
out
push
fsubrs
pop
cmp
mov
pushf
jmp
movsb
pop
fcomp
xchg
add
mov
jb
inc
jnp
push
sarb
int
in
xchg
sbbl
cmp
xorb
push
sub
dec
cli
arpl
into
pop
inc
gs
mov
jp
and
std
push
jecxz
repnz
out
add
aas
mov
mov
mov
das
add
pop
mov
out
and
mov
test
adc
pushf
mov
mov
aaa
hlt
mov
dec
into
call
mov
push
andb
sbb
loop
sub
ja
mov
jmp
add
sahf
and
jno
xchg
xchg
add
cmc
out
std
imul
cmc
xchg
fisttpll
in
sub
dec
popf
adc
push
add
dec
dec
inc
lret
js
pushf
cwtl
rorl
mov
testb
sub
add
dec
cmp
in
mov
loope
pop
xchg
adc
xchg
mov
adc
mov
mov
movsb
dec
push
mov
cmc
add
lds
aas
xor
add
jns
out
cmpsl
add
jp
add
push
insb
out
jg
call
push
mov
shrb
mov
xchg
sub
cld
int
f2xm1
jne
das
jbe
jg
ljmp
arpl
scas
sub
mov
outsl
mov
popf
push
jno
es
ret
lock
rcrl
inc
push
sahf
push
cs
outsb
aam
cld
popa
dec
out
aad
stc
jnp
jb
xchg
adc
or
jbe
inc
jne
arpl
fwait
push
fsubs
insl
stc
lods
mov
push
fsts
popa
sbb
sahf
push
pop
xchg
stc
rcrl
mov
push
daa
insb
xchg
cmp
mov
inc
lret
pop
popf
rcrl
into
hlt
into
ljmp
aam
push
adc
xlat
loopne
pop
jns
or
fildl
in
sub
repz
inc
mov
xor
stos
aaa
jb
pop
call
repz
gs
in
sti
stos
lahf
inc
ljmp
shll
insl
adc
push
pusha
in
jae
fimuls
test
or
mov
hlt
cmp
test
mov
mov
repz
int3
mov
or
movsl
fistps
xchg
xor
leave
pop
or
sbb
daa
or
push
jae,pn
sbb
mov
and
and
sub
into
and
pop
jg
cmc
ds
je
adcb
and
outsb
in
and
enter
mov
sbb
or
inc
jmp
jnp
dec
or
pop
enter
pop
cltd
stc
mov
xor
jo
sarb
mov
sti
mov
push
roll
adc
jne
out
pop
scas
outsb
shll
push
inc
loope
or
lock
inc
movsl
iret
testb
in
adc
in
mov
icebp
push
js
mov
cmc
inc
ret
mov
ds
sbb
xor
out
ffreep
mov
add
scas
loope
dec
sub
lock
je
pop
pop
jae
and
pop
subl
cmp
inc
dec
dec
stc
iret
out
fsub
add
int3
cmp
and
loopne
mov
js
stos
xor
cmp
cmpsl
imul
sahf
arpl
jge
jbe
mov
cmc
fdivl
pop
sbb
or
mov
or
jno
sub
and
adc
mov
movsl
adc
and
test
jnp
sub
psubd
in
lahf
scas
sbb
out
push
cmc
xor
cmpsb
aaa
dec
push
outsb
outsb
std
lea
push
push
jo
std
add
lahf
inc
xor
rcrb
pop
scas
bound
hlt
cmp
mov
add
mov
sarb
sbb
enter
jno
sub
pop
push
cmp
pop
out
and
adc
pop
lods
ret
nop
cmpsl
fisttpll
andl
xchg
pop
push
in
adc
mov
lret
or
adc
loope
in
adc
sets
dec
and
lods
inc
jl
popf
icebp
pop
stos
inc
xchg
mov
enter
mov
repz
ljmp
cmp
cwtl
movsb
and
dec
push
aas
mov
movsl
test
lock
fldl
xor
and
sti
adc
dec
jae
js
jmp
mov
repnz
push
cmp
mov
lock
mov
scas
nop
xor
jae
pushf
sub
xchg
fmuls
in
lret
addr16
mov
xchg
movl
mov
js
mov
jb
mov
cmp
lds
inc
scas
xchg
xchg
subl
push
xlat
sti
loopne
hlt
test
fdivrl
xor
js
mov
jbe
adc
inc
mov
test
xor
jmp
pop
jns
sbb
cmp
jecxz
adc
sarb
pushw
gs
mov
pop
pop
stos
cwtl
inc
les
or
lret
push
pcmpgtb
fwait
pusha
add
out
mov
adc
cmp
ret
push
adc
mov
mov
sbb
cmp
push
outsl
je
push
mov
xchg
mov
lock
repnz
scas
inc
cwtl
aad
shlb
ja
and
push
xchg
sbb
sub
int
movsb
cmc
shll
scas
dec
sbb
int3
lcall
mov
movl
negb
or
lods
push
in
int
jne
ret
pop
push
mov
cmp
jns
or
lret
cmc
mov
pushf
adc
cmc
or
and
jle
pop
test
repnz
sbb
adc
push
or
pop
les
pop
sbb
xor
jmp
ss
sub
mov
pop
cmp
pop
xchg
clc
add
sub
out
xchg
sbb
fbld
mov
mov
ss
stc
popf
negl
jns
or
jg
inc
popf
popf
or
inc
xchg
dec
lcall
inc
ja
out
cmpsb
ffreep
push
dec
xchg
pop
sub
jno
push
ds
add
insl
repz
mov
in
jbe
cwtl
mov
int3
ss
push
xor
nop
scas
pop
sbb
stos
clc
mov
andl
loope
push
je
and
jno
adc
cmc
pop
push
mov
inc
and
sub
adc
pop
and
mov
xchg
and
sub
sub
cs
jge
xor
sub
daa
inc
pusha
bound
test
jno
mov
push
ret
cs
daa
inc
and
das
fldenv
push
in
pop
outsb
push
inc
push
push
push
outsl
cs
lahf
rcrl
pusha
jo
jl
imul
cmp
dec
cmpsl
test
push
aam
daa
sbb
popa
rclb
jle
sub
lea
pop
cltd
sbb
mov
mov
mov
mov
jl
xchg
decb
mov
lahf
add
mov
dec
call
dec
sub
and
loope
xchg
shlb
insl
sbb
add
xor
ss
inc
mov
out
pop
sub
mov
or
cwtl
bound
stos
or
mov
mov
cs
sub
test
adc
arpl
push
jae
mov
lods
mov
mull
shr
int
fwait
pop
add
gs
or
push
push
sbb
aad
inc
hlt
scas
out
lahf
sub
or
notl
pop
lea
es
ja
cmpsb
movsl
aam
mov
ss
popf
pop
insl
xor
stos
mov
lahf
sub
int3
pop
popa
and
mov
sbb
mov
sbb
arpl
cmp
mov
int3
cmp
add
popf
ror
jnp
fs
pop
mov
repnz
jmp
rolb
sarb
jl
ja
mov
aad
pop
loopne
into
dec
insb
push
es
cmpb
pop
lret
iret
sub
and
cwtl
add
aam
jle
sbb
ret
hlt
dec
add
push
pop
push
jge
add
inc
jmp
mov
inc
in
ds
or
mov
adc
insb
ret
scas
add
daa
movsl
inc
shrb
std
mov
jmp
rcrb
jne
cltd
xor
sub
cmp
pop
ljmp
or
xor
xlat
jae
mov
xor
loope
xchg
cmp
int3
cmpsl
data16
sbb
pop
sbb
mov
pop
pop
sub
inc
pop
test
pop
hlt
repnz
jmp
hlt
hlt
push
fdivl
dec
cld
cmp
jb
loopne
ljmp
clc
xor
lahf
push
dec
sti
aam
dec
jne
ret
ja
sbb
inc
push
sub
int
loope
mov
and
add
std
ret
and
cmp
dec
mov
into
mov
jne
or
xchg
inc
les
push
ljmp
out
push
jns
jp
test
lret
sti
jg
mov
sbb
xchg
jg
orb
or
pop
cmp
ficoml
mov
stos
out
lahf
scas
ja
cld
push
movsl
cmpsl
dec
or
pop
cs
mov
jp
inc
mov
push
mov
mov
adc
adc
mov
rcrl
andl
inc
cmp
sarb
xchg
pop
aad
xchg
aad
fcmovne
jle
fiadds
in
aas
lea
clc
insl
push
and
fstl
cld
fsubrs
mov
pop
clc
mov
ret
ret
mov
dec
push
xchg
and
adc
sub
test
pop
push
mov
lods
xchg
fistpll
cmp
inc
cmp
fcmovu
pop
push
mov
mov
subb
aad
xchg
lcall
fsub
lret
lcall
scas
xorl
shlb
ds
mov
leave
rcrb
incl
sti
dec
lds
ja
frstor
stc
enter
inc
out
jle
lcall
stos
adc
stos
ret
jae
out
inc
mov
lahf
js
dec
xor
gs
cmp
dec
lahf
into
cmp
cli
mov
fildll
sub
push
insl
insl
test
or
je
lret
push
in
jb
std
jbe
nop
in
push
pop
cld
sti
jns
popa
lret
inc
jnp
jae
lock
mov
jae
pop
jmp
cmp
xor
into
sbb
adc
and
cmp
inc
into
dec
fucomp
mov
repz
scas
mov
pushf
inc
call
push
sub
imul
adc
lret
fwait
or
aas
mov
out
jl
inc
std
in
push
les
cld
in
aas
mov
sbb
inc
fwait
xchg
dec
clc
aaa
mov
inc
lods
sbb
xchg
andb
sub
ror
or
pop
cmp
rcl
dec
mov
jbe
or
roll
and
das
and
add
loope
adc
mov
pop
aaa
ds
call
loope
sbb
xorl
or
bound
not
xor
pop
jp
imul
fwait
pushf
pop
es
fdivrp
jne
subl
aas
pop
mov
mov
add
push
dec
nop
subb
int
sub
aam
sub
mov
jecxz
inc
repz
lret
js
pop
xor
xor
push
jg
fs
outsb
mov
pop
out
iret
lea
pop
mov
add
jp
jl
dec
pop
or
jno
xchg
dec
fs
pop
pusha
dec
lea
push
xor
rcl
and
sbb
out
mov
rorb
in
data16
xor
sti
cmp
xor
push
and
aad
adc
popl
inc
ss
js
insl
ror
mov
push
repz
mov
xchg
dec
push
mov
cld
and
cwtl
mov
outsl
hlt
pop
aaa
push
push
insl
stos
popa
mov
xor
sbb
jmp
ljmp
outsb
mov
les
cmp
push
shlb
xchg
int3
int3
data16
pop
aad
xchg
repnz
jbe
lcall
lock
sbb
add
push
jmp
lcall
sub
data16
test
xchg
add
inc
push
sub
pushf
cmp
push
cmp
imul
inc
aas
pop
arpl
aam
js
and
sahf
xchg
inc
enter
inc
leave
cmc
nop
cwtl
push
jecxz
dec
ss
imul
aad
cmp
push
pusha
dec
out
or
lahf
or
aaa
addr16
cmpsb
push
test
into
sbb
iret
ljmp
inc
pushf
out
jbe
sbb
pop
aad
sbbl
xchg
sbb
and
pop
shlb
inc
cmp
adc
lods
sub
jns
or
or
add
test
imul
test
das
mov
scas
enter
inc
cli
imul
out
ror
jb
push
addr16
mov
pop
icebp
sbb
in
jo
sbb
dec
jb
aas
mov
add
jp
mov
add
sbb
push
scas
icebp
in
xor
pop
add
jge
mov
sub
shrl
pop
sbbb
sbb
xor
ja
pop
scas
pop
sub
inc
fisubrs
outsb
sbb
pop
aad
imul
aas
cmp
pop
inc
sbb
ret
dec
xchg
push
inc
iret
stos
jg
fucomi
jne
mov
les
or
mov
lret
jnp
jl
stc
scas
jecxz
aas
aad
pushf
negl
xchg
jb
sub
xchg
lea
xchg
mov
sbb
in
jge
outsl
and
cmp
push
mov
xor
dec
bound
jo
sti
dec
xchg
xor
clc
daa
or
stos
cmpsl
add
sub
bound
pop
jnp
int
pop
cmp
cmpsb
adc
lea
cmp
pop
aaa
dec
pusha
xlat
mov
scas
lods
pop
mov
daa
add
sub
cltd
jno
testl
sub
jge
pop
mov
fsubrs
adc
scas
xchg
mov
stc
xor
mov
in
fstps
iret
imul
stos
test
mov
push
dec
js
ss
jecxz
int
xlat
cli
jp
or
in
das
inc
stos
lret
xor
pop
cmp
mov
push
rcrl
push
jnp
roll
xor
xchg
jnp
mov
sub
mov
mov
inc
clc
rcll
test
cmpsb
lds
lods
mov
mov
xchg
xchg
or
push
xchg
sti
push
mov
inc
inc
repnz
sar
loopne
cmp
aad
mov
sub
add
shlb
jp
leave
pop
test
mov
ret
xor
mov
pop
sub
add
scas
xchg
xchg
into
enter
in
dec
push
mov
lidtl
outsb
andl
das
add
jl
mov
jnp
push
dec
dec
or
out
mov
pop
jo
das
out
cwtl
sbb
daa
insb
rcr
ret
fistps
mov
dec
and
in
shrl
adc
and
push
push
pop
mov
mov
xlat
push
sbb
and
push
fnsave
clc
lds
cld
xor
sub
add
xchg
mov
jl
cmp
repnz
xchg
rcll
xchg
lret
xor
stos
imul
xchg
dec
iret
dec
mov
sub
sub
shl
push
mov
cmpsl
xlat
mull
cltd
push
inc
dec
or
rcrb
push
mov
out
mov
cmp
je
ret
imul
jae
ret
or
pop
cltd
ja
insl
mov
fadds
cli
or
ds
push
pop
cmp
stos
sahf
add
cmp
popf
int
fnsave
fsubrl
mov
dec
inc
sbb
mov
lahf
adc
sub
mov
add
adc
mov
bswap
xchg
std
dec
scas
xchg
and
test
jbe
mov
add
fbld
sub
cmp
lcall
xchg
ja
hlt
hlt
enter
push
cmp
mov
and
push
es
out
mov
popa
sbb
push
push
adc
loope
xchg
insl
cmpsb
pop
sarb
js
ds
jl
mov
fisttpl
add
pop
and
xchg
xor
lret
xor
cs
pop
imul
sbb
add
rcrb
mov
sbb
mov
clc
mov
xchg
push
cmp
fisttpl
in
fisubrl
int3
mov
ret
insb
xchg
das
xchg
pop
inc
jecxz
cmp
push
jle
enter
mov
push
lahf
aas
imul
ficomps
lahf
adc
test
push
lret
shr
mov
loopne
gs
pop
or
mov
jmp
mov
out
mov
js
stc
into
subl
daa
clc
insl
inc
dec
into
pop
pop
out
fimuls
add
dec
inc
popa
xlat
ret
mov
push
lcall
inc
inc
or
sbb
sub
ret
xchg
xor
push
xchg
sub
ljmp
in
jg
les
push
mov
sti
mov
out
mov
insb
inc
dec
call
mov
push
pop
pop
jo
ffree
and
pop
cs
arpl
out
ret
mov
pop
dec
cmc
mov
and
fists
dec
mov
lea
cltd
lods
push
pop
inc
rorb
sub
adc
cld
xchg
lcall
cli
mov
mov
cltd
movsb
sub
aas
in
mov
repnz
imul
notl
cltd
pop
sub
push
insl
and
and
and
mov
popa
cmp
dec
inc
xchg
fidivs
aam
cmp
add
lea
addr16
jb
and
pushf
test
rcrl
test
jne
mov
ret
movsl
iret
mov
lret
inc
dec
loop
inc
xor
or
lahf
outsl
loop
insl
mov
mov
int3
xlat
lea
mov
fidivl
adcl
shrb
xchg
inc
fucomi
adc
fldt
mov
in
xor
enter
je
add
jecxz
in
jo
mov
pop
iretw
lods
test
xchg
enter
scas
xor
mov
mov
das
out
jo
dec
filds
insl
sbb
or
push
add
insl
sbb
rcr
aad
mov
aad
inc
jbe
and
pop
cltd
adc
add
mov
xchg
push
in
push
fstpl
sub
lds
dec
cmpl
pop
imul
movsb
dec
push
repz
mov
xor
ljmp
or
mov
mov
lret
push
xchg
imul
into
aad
repz
bound
call
leave
cwtl
leave
outsb
cmp
icebp
popf
repnz
sub
mov
loopne
subb
sub
out
xchg
ret
in
mov
jg
mov
loopne
mov
lods
mov
pcmpeqw
mov
and
outsl
xor
js
sbb
or
push
jbe
lcall
or
mov
lock
mov
lret
jecxz
rcl
jb
or
jle
mov
outsl
dec
mov
dec
sub
icebp
mov
lahf
cs
mov
push
dec
imul
jmp
xchg
shrl
insb
mov
push
mov
fstps
fadd
jg
cmp
iret
pop
in
jle
aas
pop
push
nop
jo
inc
rclb
jbe
jp
test
sub
ljmp
mov
imul
lds
mov
iret
push
out
in
arpl
out
outsl
lods
in
js
dec
fldl
nop
insb
jecxz
xorb
mov
pop
movsl
mov
xor
sub
cs
nop
dec
xchg
insb
jmp
mov
dec
pop
mov
xchg
inc
inc
popa
cltd
scas
jp
aaa
fcmovbe
lea
mov
dec
movsb
jl
jp
sub
adc
xchg
push
out
repz
ss
sub
sub
ret
je
inc
xor
add
adc
add
adc
icebp
out
aad
fdivr
fcomps
push
jl
insl
adc
ror
test
add
repz
push
das
ret
mov
pop
adc
jmp
fcmovne
faddp
xchg
xor
xchg
shl
idiv
jnp
pop
rcr
arpl
add
mov
mov
icebp
or
xor
rcll
pop
xor
sar
cmpsb
shlb
pusha
cltd
lcall
imul
mov
push
push
pop
lea
fldenv
sub
mov
jnp
inc
std
sbb
aas
aam
jle
xchg
dec
or
shll
mov
repnz
shlb
call
pop
push
dec
repnz
fcompl
test
inc
ret
icebp
fsubrl
jg
lods
scas
push
or
hlt
push
mov
ret
adc
dec
add
cwtl
shlb
daa
out
lret
popf
ljmp
popl
lods
sbb
addr16
inc
stos
jnp
lods
fistps
add
lods
ss
cmp
sub
mov
ds
fucomi
sahf
mov
idivl
lods
xchg
test
movsb
in
adc
push
mov
std
test
aam
out
push
repnz
out
cltd
ret
sti
mov
je
fdivp
movsl
int3
add
nop
sahf
or
or
push
rorb
pop
inc
push
push
jne
or
in
add
scas
pop
xor
popa
sbb
addr16
cmp
mov
dec
jbe,pn
add
sar
mov
sub
or
mov
dec
pop
xchg
mov
jle
movsl
ret
pushf
adc
inc
mov
pop
scas
sbb
mov
sbb
repz
push
cltd
fmull
js
add
push
cmp
in
mov
pop
mov
std
in
orb
mov
lret
push
enter
fwait
inc
aaa
scas
mov
stc
jg
paddsb
add
daa
add
push
cltd
cwtl
sbb
test
addr16
test
inc
andb
ret
pop
pop
xor
mov
mov
jbe
lods
jg
adcb
lret
cmp
pop
icebp
mov
scas
pusha
nop
scas
sbb
jae
sbb
std
jl
repz
cmp
jmp
pop
mov
jae
xchg
lret
mov
int3
test
pop
stos
addr16
adc
xchg
test
pop
sub
xchg
clc
mov
mov
sahf
dec
add
dec
arpl
pop
aam
mov
push
add
pusha
aam
lahf
shl
imul
popa
push
cmpsl
or
add
in
push
and
in
jo
and
mov
fsubp
imul
sbb
and
stc
fistpl
add
add
xchg
mov
inc
add
pushf
fisubrl
jl
jmp
sub
xlat
adc
jge
test
push
test
xchg
sbb
arpl
cmpsl
sbb
scas
xor
jb,pn
mulb
test
cli
dec
xchg
hlt
std
scas
mov
test
cwtl
mov
and
outsl
mov
adc
fcomps
xchg
orb
stc
fdiv
loopne
sub
xor
insl
adc
pop
hlt
xchg
or
xchg
pop
aaa
xchg
mov
or
mov
repnz
add
jle
cltd
sub
inc
sahf
cmp
inc
repz
xlat
add
sbb
fucomp
add
divl
idivl
mov
call
leave
sbb
jecxz
mov
jbe
fmull
adc
lret
lock
add
cmp
int3
push
dec
enter
loopne
nop
shll
sbb
push
das
jo
sbb
push
xchg
ficompl
mov
cmp
lahf
shrb
shll
cld
mov
pop
cmpsb
dec
inc
lods
and
insl
cmc
dec
jbe
jge
sbb
cmp
sbb
aas
push
mov
imul
push
stc
stos
roll
jle
cmp
out
rep
mov
dec
rcrb
scas
and
inc
pop
outsl
addr16
inc
sub
adc
adc
adc
sub
xchg
adc
inc
cmp
mov
push
and
loope
add
mov
sbb
lods
inc
das
cld
mov
inc
test
sub
fidivl
mov
pushf
sbb
xchg
les
xlat
inc
outsb
fiaddl
jne
jns
pop
sub
adc
xchg
or
cltd
mov
ljmp
stos
mov
pusha
sahf
aad
jp
mov
dec
mov
add
js
mov
xchg
inc
pop
add
leave
sbb
lds
jo
aaa
xchg
fldcw
ds
jl
arpl
mov
push
jae
sbb
xchg
lods
fsubrs
push
jbe
inc
iret
sub
sbb
aam
daa
xor
inc
xlat
or
mov
inc
sub
flds
enter
call
nop
stc
fistl
ja
or
sti
mov
inc
add
xor
ds
daa
jg
cmpsl
push
out
push
adc
mov
cld
rorb
pushf
push
lea
aaa
lret
daa
push
cmp
xchg
test
pusha
lods
testl
inc
sti
outsb
mov
daa
xlat
cwtl
adc
ret
iret
iret
fdivr
and
mov
add
add
enter
dec
ljmp
int
fnsave
or
scas
subb
inc
imul
imul
std
movsl
out
mov
push
push
fdivrs
fistpl
das
rclb
mov
loopne
dec
bound
push
into
jp
negb
mov
out
pop
test
xchg
xchg
out
das
aad
pop
adc
mov
xchg
ds
mov
stos
xchg
add
aaa
aaa
gs
xchg
mov
fs
inc
into
int
icebp
jns
mov
lods
inc
loop
mov
pop
jno
fnstsw
je
mov
imul
mov
inc
and
lods
xchg
and
ret
xor
push
pop
sub
xchg
xchg
or
add
adc
fcomip
inc
sbb
loopne
insl
mov
sbb
fwait
xor
xor
sbb
xor
xchg
dec
bound
xorl
mov
jns
into
out
add
pop
stc
pop
loope
sub
out
push
dec
mov
cmp
sbb
shlb
sarb
fisttpll
pop
stc
sbb
leave
and
pop
dec
fmuls
push
add
in
lcall
ficomps
push
push
ljmp
cltd
mov
or
sbb
lret
push
imul
int3
movsl
ljmp
dec
out
dec
sub
push
cld
sbb
jmp
ja
into
std
insb
mov
inc
pop
gs
rclb
mov
arpl
ds
out
sub
outsb
lcall
lods
lods
xor
jbe
in
and
pop
cmp
mov
lock
mov
out
or
mov
or
scas
and
lret
popf
inc
add
scas
leave
mov
outsl
loopne
pop
jae
mov
xchg
mov
add
leave
int
adc
lods
cli
jle
xor
or
adc
and
fwait
or
sbb
mov
inc
jo
sbb
sub
push
and
icebp
and
pop
movmskps
sbb
or
cmc
push
mov
int
sub
sbb
std
mov
xchg
imul
inc
mov
movsb
xor
mov
mov
dec
mov
add
aad
or
mov
das
dec
adc
jne
dec
dec
aad
scas
lcall
inc
xlat
inc
mov
xor
popa
or
test
and
clc
adc
push
mov
adc
mov
pop
shlb
adc
ja
mov
xchg
loop
clc
cli
hlt
jmp
xor
jnp
jb
mov
jns
mov
mov
aam
mov
adcl
pop
sbb
jmp
filds
jl
push
push
cmp
repnz
ljmp
int3
ffreep
mov
add
jle
and
iret
dec
cltd
push
jp
cli
sahf
jmp
sbb
pop
xchg
or
fisubs
shlb
inc
fs
jne
ret
cmp
bnd
shll
or
sbb
xchg
pop
shll
mov
scas
das
out
pop
gs
lahf
hlt
pop
in
or
jecxz
sub
jno
imul
mov
scas
cwtl
mov
mov
push
dec
jae
aaa
adc
outsl
sbb
xchg
mov
sahf
loopne
sbb
mov
fwait
mov
dec
fidivrs
sbb
push
fsts
aaa
sbb
xchg
fmuls
jno
xchg
cld
rolb
outsb
dec
jg
arpl
dec
sahf
out
mov
rorb
std
push
lahf
daa
pop
imul
cmc
push
mov
iret
mov
sbb
sahf
adc
das
pop
sub
es
clc
imul
add
loop
jecxz
lods
insb
fs
mov
mov
jns
insl
testb
sti
call
jg
cmp
xchg
mov
mov
adc
lea
fidivrs
mov
rorb
mov
cmc
fwait
mov
inc
into
jno
bound
dec
add
push
lret
or
ffree
repz
sub
mov
push
lahf
arpl
mov
jno
inc
mov
cmp
cmp
loop
lret
repz
adc
sub
dec
push
stos
jo
ret
repnz
xor
jp
cli
jno
dec
lahf
cmc
mov
les
imul
mov
mov
pop
icebp
and
jnp
imul
xchg
aad
cmp
jne
sub
arpl
push
mov
jo
ret
movsb
xor
ljmp
dec
jnp
lret
enter
movsl
xlat
inc
cmp
aam
dec
jmp
lds
sti
push
xchg
loopne
mov
lahf
insl
xor
inc
and
addb
hlt
inc
sbb
push
popa
push
popa
cmp
mov
lcall
in
pop
xchg
mov
fs
adc
test
add
test
xchg
fsubrl
sbb
push
cmp
test
push
push
dec
dec
cmpb
or
mov
loope
pusha
out
jo
arpl
mov
and
xchg
jg
stos
cli
enterw
es
stos
mov
sbb
ss
cltd
pop
sub
dec
sbb
in
outsl
xchg
movsl
sti
js
sti
xchg
clc
insl
rcll
push
add
sbb
jl
nop
ret
out
and
push
lret
adc
mov
lea
lea
mov
adc
out
sbb
stos
jae
mov
sbb
pop
fwait
dec
mov
rolb
std
pop
enter
sub
lret
bound
add
add
jb
lahf
fsts
outsb
xchg
sub
into
fimull
popl
xchg
dec
xchg
jg
or
adc
ja
repnz
dec
es
xchg
fs
in
sub
nop
xlat
and
call
out
inc
mov
sub
mov
dec
sbb
or
sub
movl
pushf
cmp
sbb
sbb
mov
scas
push
mov
mov
mov
and
push
pop
xchg
mov
cli
ds
ret
adc
inc
adc
fxch
and
shlb
ds
data16
addr16
xchg
adc
cmp
mov
lock
push
push
aam
xchg
jp
sti
add
dec
outsb
clc
imul
mov
xor
arpl
shl
imul
xor
out
cmp
jle
or
push
dec
sub
push
out
cmpsb
push
adc
cmp
cli
jo
pop
jne
jns
int3
arpl
lcall
jecxz
add
mov
xlat
sahf
shll
dec
stos
xorb
xrelease
sbb
mov
stos
push
mov
shll
scas
daa
xor
mov
xchg
hlt
cld
dec
daa
inc
pop
enter
mov
in
sbb
pop
cmp
xchg
xchg
jp
jmp
ljmp
sub
sarl
mov
fildll
cmp
pop
bound
jge
mov
mov
jge
movsb
xchg
iret
dec
movsl
cmp
adc
das
cld
xrelease
hlt
dec
or
cmpsb
and
sahf
shrl
xorb
jmp
iret
jo
cmp
and
sub
out
clc
les
pop
push
push
mov
push
xlat
out
adc
aas
or
push
stc
and
cmp
bnd
stos
push
out
stos
push
or
mov
add
xor
mov
repz
jnp
cmp
int3
or
scas
leave
fs
mov
sub
or
xor
mov
mov
dec
mov
pop
pushf
rol
iret
out
mov
repz
icebp
add
fildl
xchg
stc
lods
je
jl
push
jnp
mov
enter
fwait
outsl
rcpps
mov
dec
xor
mov
pop
sub
sbb
into
push
cli
fs
jmp
mov
mov
jmp
adc
adc
lds
jno
pop
jmp
lods
or
fistl
in
sbb
decb
jnp
cmp
push
add
sub
mov
incb
mov
adc
inc
shlb
mov
lahf
jnp
push
inc
int3
imul
xor
dec
add
push
cltd
je
sarl
cmpb
add
iret
insb
push
jae
push
in
push
push
push
fsubs
test
mov
pop
xor
ljmp
mov
fildll
sub
out
leave
jmp
adc
je
ss
mov
sub
std
sub
popa
xchg
shrl
loop
gs
pop
icebp
xor
mov
mov
enter
jl
mov
ljmp
bnd
mov
in
sar
push
sub
dec
lods
arpl
ds
sub
mov
shlb
sub
in
insl
scas
jnp
mov
sbb
movsb
gs
mov
mov
orl
mov
bnd
stc
add
out
movsl
cwtl
shlb
lret
cmpsl
sub
push
pop
shrb
daa
push
push
pop
or
mov
mov
ret
jle
call
dec
xlat
cmp
cs
test
add
les
and
scas
xchg
push
jns
fmull
add
mov
outsl
icebp
inc
mov
push
iret
cmpsb
adc
addr16
dec
sub
adc
xor
stos
xor
dec
add
jge
mov
lcall
jns
in
jno
push
mov
in
sbb
pop
cmp
jmp
mov
cld
pop
jnp
xor
ret
movsb
je
and
cmp
sti
aam
adc
aad
aas
scas
mov
adc
mov
sub
pusha
andb
mov
arpl
cmc
mov
jmp
call
rcrl
sbb
sub
aaa
test
dec
mov
mov
inc
fisubs
push
aas
inc
mov
sti
sub
inc
out
or
hlt
and
ret
fldl
sub
pop
xchg
inc
pop
movq
std
mov
sbb
loopne
mov
repz
bound
lahf
sub
mov
add
cltd
push
in
mov
dec
aas
sub
xor
pop
xchg
push
pop
pop
mov
push
xor
adc
inc
dec
cmp
sbb
mov
or
nop
lahf
dec
test
inc
repnz
cltd
test
loop
xchg
push
stos
pop
aad
xchg
cmp
inc
std
pop
cmp
cld
cs
ja
xchg
divl
aam
mov
movsb
outsl
fwait
pop
into
lock
push
mov
movsb
adc
pop
adc
les
jmp
xor
adc
sbb
dec
nop
and
aaa
arpl
addr16
ret
mov
pop
sub
mov
mov
fimull
ret
push
data16
pop
cmp
mov
push
sub
adc
jp
shlb
loope
je
dec
fcomps
push
shrl
pop
insl
dec
in
insl
ret
rorb
data16
lds
idivb
inc
data16
shrl
lret
arpl
mov
dec
pop
fisubl
xor
popa
mov
mov
cmp
push
js
mov
ret
insb
pop
ljmp
fimull
sub
cltd
ret
push
es
out
iret
push
cs
dec
outsl
mov
imulb
das
fdivrl
arpl
sub
add
cmp
mov
sbb
xchg
shlb
daa
dec
loopne
into
out
loopne
sbb
mov
in
mov
inc
jle
and
int3
jns
cmp
inc
mov
sahf
push
popf
out
ret
inc
rcll
hlt
inc
dec
xchg
mov
sbb
hlt
cli
mov
aas
push
movsb
ja
nop
mov
or
orb
shll
mov
mov
mov
jns
or
dec
je
mov
pusha
push
cmc
test
adc
arpl
lret
adcl
sarl
idivl
xchg
dec
sub
push
jnp
xchg
sbb
sbb
je
lcall
int3
mull
push
arpl
pop
adc
cmp
pop
pop
xor
jnp
xorl
pop
xor
movsl
mov
loope
sti
cmp
sub
jnp
das
outsl
push
lods
push
push
push
movsb
lret
outsb
popl
xchg
test
subl
rorl
pop
push
mov
or
cmpb
add
iret
lods
pop
xor
pop
hlt
lods
jns
jnp
jle
sti
or
sti
inc
mov
sub
stos
dec
xchg
pusha
mov
arpl
cs
out
cld
les
sbb
xchg
add
mov
into
sbb
adc
inc
mov
subb
sub
repz
xor
addr16
call
mov
push
pop
mov
aas
sbb
arpl
ja
insl
dec
or
inc
out
stos
scas
sbbl
shll
movl
xchg
mov
or
mov
bound
cmp
or
pop
mov
push
sub
data16
xor
out
fucomip
and
and
fcoms
fsqrt
inc
pmullw
or
lret
aaa
sahf
cld
stos
gs
stc
test
addr16
cmp
mov
adc
dec
imul
fs
and
sub
lret
loope
xlat
cmp
jne
pop
mov
push
outsl
xor
call
ja
xlat
mov
js
rclb
jle
dec
mov
lock
loope
jno
mov
gs
adc
addl
scas
or
mov
cmp
dec
test
dec
test
aaa
pushf
xchg
lea
or
sbb
mov
dec
fcom
ljmp
pushf
inc
out
fwait
pop
pop
dec
shll
or
nop
loop
push
jmp
into
pop
xlat
idiv
jns
and
cmp
mov
mov
cmp
ret
cmp
fidivs
xchg
pusha
pop
sbb
and
imul
stos
push
sbb
loopne
add
mov
mov
fidivrl
es
jl
icebp
jge
push
jb
mov
add
jecxz
outsl
insb
hlt
jb
xchg
mov
and
mov
imul
add
push
xchg
pop
inc
sbb
add
dec
imul
test
mov
xchg
push
imul
sbb
sbb
in
fsts
cwtl
mov
dec
lahf
lret
and
cld
mov
and
jecxz
sub
ja
in
mov
and
ljmp
mov
insb
ljmp
jmp
pop
out
cmp
mov
int3
movb
cmp
test
data16
mov
sbb
sti
arpl
ja
lods
inc
push
inc
dec
fimull
pop
imul
push
mov
pop
cltd
adc
aaa
mov
add
sti
or
mov
out
xor
push
pop
push
xchg
inc
cmp
mov
je
leave
loopne
mov
aam
je
into
lds
jmp
push
or
mov
sti
jns
xor
push
imulb
cmp
push
mov
stc
xchg
out
xor
jae
push
fwait
xor
scas
jnp
addr16
xor
sub
mov
or
mov
aam
insb
sbb
mov
ss
add
shlb
push
xor
dec
and
xchg
adc
sub
ret
shlb
lods
movsb
pusha
xor
mov
insb
nop
daa
adc
xorb
repz
inc
jne
test
adc
jbe
jecxz
sbb
loope
pop
pop
adc
lock
add
dec
aas
inc
out
jge
sub
fwait
stos
aas
imul
pop
loopne
outsl
cli
dec
test
mov
and
fidivrs
faddl
data16
pop
add
rdmsr
ret
pusha
pusha
out
sub
icebp
push
push
in
in
push
stos
lret
pop
or
adc
jmp
jecxz
or
inc
leave
push
push
adc
dec
mov
push
sbb
jp
popa
mov
dec
in
imul
jae
dec
and
scas
repnz
dec
push
in
rcll
jmp
lock
mov
std
cld
cmpl
jp
and
jno
cmpsl
add
pusha
xlat
sub
mov
pop
mov
out
lahf
out
fstpt
cmc
pop
push
out
shl
jmp
sub
push
or
pop
outsl
cmc
lods
int3
cmp
jno
fadds
repnz
push
mov
fnstsw
push
or
add
cmp
cmpsl
mov
inc
jb
sbb
mov
call
test
fwait
nop
outsl
sub
in
negl
add
mov
xchg
mov
pop
incl
lods
add
aad
xor
cmc
or
jg
scas
cmp
mov
jb
push
adc
into
dec
push
sbb
divb
loop
fwait
sbb
cld
jns
inc
fcoms
repz
xor
call
inc
jns
sbb
andb
push
jb
cmp
push
inc
mov
pop
push
cld
clc
test
pop
push
jo
shr
aad
sub
cmc
rcl
loopne
add
mov
jecxz
adc
sahf
adc
pop
mov
or
sbb
mov
pushf
mov
repz
mov
and
imul
sub
movsl
dec
aam
loopne
cmp
push
lods
repz
mov
push
jl
jl
cmc
push
xlat
sbbl
das
lods
pop
leave
dec
xorb
pminsw
stos
jmp
jo
and
push
push
movsl
int3
dec
cmp
jmp
jle
test
mov
pop
aas
pop
lods
clc
and
fs
rorl
jge
arpl
pop
add
push
adc
pop
in
mov
pop
ja
test
hlt
cmp
cld
jb
push
lds
dec
sti
sub
pushf
jp
xchg
jno
pop
jno
imul
inc
sub
ffree
push
ja
int
icebp
repnz
jecxz
shr
xor
push
aad
fst
and
mov
pushf
inc
pushf
gs
sub
push
cli
cld
jmp
inc
insb
push
mov
pop
xchg
pop
shrl
sub
dec
jle
pop
cmp
jl
imul
mov
jnp
mov
jne
je
addb
clc
loop
addr16
add
add
cmp
test
into
sub
sahf
xor
xor
adc
imulb
or
dec
int
ljmp
aas
insl
xlat
jo
pop
mov
sbb
inc
cli
mov
jg
dec
inc
rclb
xchg
mov
fld
push
dec
iret
test
insb
inc
cmp
inc
push
int3
inc
adc
push
iret
notb
scas
jp
add
rolw
push
dec
ficoms
fnstsw
jo
push
pop
jle
push
daa
in
dec
bound
or
test
push
mov
out
pop
mov
popf
cli
pushf
jno
call
and
les
and
cmpsl
dec
mov
mov
fistps
cmpb
repz
decb
lock
or
andl
push
xor
push
jl
xor
loope
stc
sub
cmp
jl
adc
and
add
mov
xchg
sbb
and
jb
popf
mulb
cli
lret
pop
dec
fcomps
fwait
cld
loopne
jp
or
call
jb
mov
dec
out
addr16
xchg
test
imul
sbb
sbb
jmp
jbe
fsubs
idivl
sub
dec
push
arpl
je
and
mov
pushf
lret
pop
sub
push
scas
sub
movsl
xchg
out
fwait
push
mov
lods
aas
loope
test
stos
xor
mov
mov
dec
je
in
push
add
mov
neg
adc
les
shrl
push
sub
inc
cmpb
push
je
and
mov
inc
push
cmp
aam
xor
lahf
jl
ret
movsl
and
fiaddl
popa
jmp
and
sti
stc
ret
aaa
cmpsb
push
outsl
mov
out
enter
jl
div
popf
sub
mov
adc
lods
sbb
imul
sbb
imul
cli
push
inc
inc
loope
pop
inc
dec
mov
incl
sti
insl
push
pop
sbbb
pop
xchg
icebp
jge
imul
xlat
div
xor
cld
xor
stos
inc
sub
mov
add
xchg
push
xor
in
jg
xor
sbb
shll
mov
cmp
mov
mov
movsb
std
scas
push
or
and
test
fadds
jge
pop
lret
aad
mov
scas
xchg
aam
xchg
bound
add
out
ja
add
flds
clc
sbb
test
inc
mov
sub
inc
push
outsb
lret
and
je
cmpsb
xchg
scas
dec
add
mov
mov
mov
clc
mov
or
movsb
daa
xchg
sbb
test
mov
pop
xchg
sbb
add
test
mov
lahf
jnp
xchg
cli
dec
xchg
mov
out
mov
out
xor
xlat
jl
jns
and
xchg
or
iret
jae
lahf
arpl
push
adc
aaa
xchg
shrb
imul
jae
dec
gs
scas
inc
gs
call
out
lahf
fcomps
adc
inc
shrb
xchg
arpl
pop
inc
xor
loopne
cmp
mov
in
ljmp
sbbb
test
fimull
xorb
repnz
and
stc
std
loope
and
mov
test
loopne
pop
call
outsb
dec
xchg
out
adc
mov
cltd
push
enter
mov
inc
sub
lods
sahf
fnstcw
mov
and
aaa
test
and
dec
push
test
mov
adc
iret
out
in
decb
jl
push
lods
les
cwtl
pop
divl
pop
xor
sahf
mov
push
cmp
mov
arpl
pop
pop
and
out
test
xchg
and
mov
movsl
lret
int
mov
pop
sub
mov
xor
into
xchg
dec
ret
lock
out
jo
test
dec
add
rcrl
outsl
xchg
pusha
xor
aad
aad
test
sub
pop
shll
lret
push
inc
push
xchg
mov
nop
xchg
roll
pop
in
movsb
and
push
mov
lock
or
popf
pop
punpckldq
shrb
mov
dec
mov
pop
out
mov
push
sub
imul
xchg
cli
jmp
cmp
rorb
or
icebp
push
leave
ss
inc
adc
xor
enter
sub
cmp
mov
pop
icebp
mov
jmp
or
sbb
xchg
jl
fmul
xchg
pop
lcall
test
mov
inc
xor
adc
xchg
mov
sahf
push
or
dec
pop
out
sahf
imul
inc
int
outsl
cmp
xchg
iret
adc
or
pop
and
sub
mov
das
movsb
mov
or
sarl
pop
mov
lea
loop
dec
int3
aam
add
icebp
ds
xor
inc
xchg
xchg
xor
dec
movsb
pop
push
enter
push
cmp
ja
cmp
inc
lods
scas
lock
mov
ja
fwait
add
push
negb
cltd
ja,pt
inc
mov
jl
or
shll
mov
dec
sbb
pop
test
cmp
sub
jb,pt
out
sbb
jecxz
xchg
xor
fidivrl
cmpl
lods
ficompl
aad
jns
and
es
xor
sub
mov
dec
cs
mov
shll
lock
lret
out
test
out
enter
pusha
subb
insl
jmp
jb
jnp
rolb
std
add
cs
es
adc
pushf
popa
sbb
fistpll
std
sbb
xchg
enter
lds
shrb
push
sbb
ljmp
pusha
sahf
add
and
mov
mov
pop
stos
mov
out
aas
pop
iret
pop
add
sti
inc
les
ja
gs
cltd
ds
ljmp
loopne
xor
jne
or
in
pop
jge
cld
add
fisttpll
xlat
rol
adc
dec
rorl
sarb
stc
mov
adc
mov
pop
push
mov
sub
popf
fcompl
mov
fs
les
popa
hlt
cwtl
mov
xchg
xchg
lcall
dec
faddl
lods
inc
icebp
lret
fists
dec
rorl
fcomp
cmp
jae
jbe
je
adc
or
lods
mov
pop
ret
movsb
mov
aam
movsb
lods
or
aaa
and
add
dec
jne
jb
shll
in
scas
jl
and
mov
push
jg
pop
in
mov
icebp
insb
push
push
mov
nop
pop
scas
pop
je
ficoml
and
les
push
outsl
mov
in
ja
jno
or
jg
jle
cli
scas
or
fdiv
cmp
mov
js
inc
and
js
sbb
mov
xchg
add
lea
loopne
ljmp
cld
test
push
adc
cltd
push
or
add
cmp
push
mov
lds
push
lds
jecxz
adc
cwtl
xor
jo
out
jl
or
jae
or
arpl
out
mov
repnz
lret
nop
jb
sbb
mov
lods
mov
sti
pop
cmp
cmpsl
daa
outsb
cld
fadd
sub
lcall
outsl
lods
pop
mov
pusha
mov
loope
push
adc
mov
dec
cmp
cmpsl
mov
jne
arpl
mov
pop
sub
jnp
jecxz
data16
shl
ja
jge
jg
jae
push
shrl
je
imul
dec
scas
pop
xor
cld
jge
dec
insl
pop
push
jl
cmc
and
xlat
jns
or
cmp
push
fcompl
add
ljmp
mov
cli
push
fmull
lret
push
jp
push
cmp
dec
aas
fisttpl
add
mov
clc
push
cmpsl
rcll
push
pop
and
cmp
lcall
addr16
inc
push
test
imul
lcall
push
outsb
cltd
daa
lahf
mov
dec
ret
aad
ja
pop
push
inc
xchg
pop
dec
aad
mov
jp
test
mov
cwtl
jmp
pop
es
aas
scas
inc
jo
imul
jae
jecxz
lds
ljmp
cld
ficomps
scas
xchg
cmp
xchg
je
jle
push
push
daa
or
das
sahf
ret
lahf
outsl
xor
outsl
mov
mov
or
ljmp
popa
sub
rcrb
pushf
lods
mov
mov
movsb
leave
and
jg
in
imul
mov
mov
js
stc
xor
stos
insb
dec
sbb
sub
adc
test
mov
cmp
out
jecxz
pusha
mov
scas
rolb
js
and
sbb
push
test
and
push
mov
lods
mov
mov
pop
inc
sbb
xorl
dec
sbb
fsts
cltd
pop
mov
lahf
fwait
sub
mov
test
stc
cmp
shrb
add
push
stos
add
add
in
jle
or
and
lea
cld
and
das
dec
shrl
jne
xchg
test
jae
lods
test
cmp
sub
or
fs
ljmp
mov
out
inc
push
jl
ja
loop
scas
mov
and
mov
std
jle
addb
lods
inc
xchg
push
mov
cmpsb
cld
fprem1
into
adc
roll
jb
and
jmp
cmp
add
in
sbb
xor
gs
cwtl
decb
mov
in
cs
mov
jecxz
push
dec
inc
aad
fcmovnu
push
icebp
xchg
adc
cld
mov
pusha
mov
aam
fistps
mov
addr16
scas
fcomps
jb
mov
sahf
aam
push
pushf
out
push
shlb
jmp
in
add
jle
mov
loope
shll
push
sbbb
jo
sbb
cmp
xor
stos
xchg
cmp
frstpm(287
out
pop
lods
add
push
testl
bound
pop
lods
push
pop
dec
lods
out
popa
or
out
xchg
pop
lahf
or
test
test
js
jl
test
sbbb
aas
mov
std
xchg
aam
fdivr
mov
xchg
lahf
sbb
jecxz
aas
cmp
cwtl
cld
fsts
lret
push
jae
add
fisubrl
jne
cwtl
and
in
inc
mov
add
xorb
rorl
rcrl
ret
fsubrl
in
adcb
push
and
popa
and
or
xchg
adc
dec
cmp
rolb
add
add
rolb
inc
in
xorb
add
sub
xor
or
insl
out
sub
sbb
sahf
stos
push
inc
push
fwait
pop
hlt
sub
mov
int3
outsl
int
mov
cs
iret
enter
mov
fdivrs
adc
and
ljmp
or
mov
ja
jae
pushf
inc
cmpsb
inc
push
mov
mov
pop
jno
dec
pop
mov
rorb
xchg
add
push
outsb
inc
ja
jnp
cmp
lods
hlt
push
xchg
add
or
mov
xchg
cmpsl
mov
std
gs
sub
sbb
inc
dec
test
loope
shll
dec
nop
jmp
adc
adc
jmp
in
xor
addr16
inc
emms
or
pusha
cmp
adc
dec
add
fmuls
push
and
add
lock
ss
xor
xchg
dec
std
push
inc
aas
sti
pop
test
add
xor
push
xor
mov
movsb
out
push
aad
stc
jg
pop
das
lods
pop
dec
add
mov
les
xchg
or
push
inc
adc
repnz
es
mov
popf
push
inc
lock
mov
or
mov
add
push
mov
sbb
jo
xor
mov
subl
js
ficoms
sub
insb
add
pop
out
push
movsl
or
bts
in
int
lret
xor
mov
das
xchg
ficomps
jl
adc
nop
ret
in
mov
xor
adc
imul
lret
sti
arpl
insl
loopne
xchg
movsb
dec
sub
xor
mov
mov
xor
mov
cwtl
iret
mov
add
lret
xchg
or
push
xchg
mov
and
jmp
push
push
push
xor
sub
cwtl
jns
sbbb
pop
lcall
out
out
fsts
lret
arpl
sbb
aaa
add
call
dec
jl
scas
xor
adc
iret
mov
pusha
fmuls
lret
jae
lcall
test
sarb
and
sbb
cmp
push
mov
dec
sbb
hlt
test
jbe
pushf
jp
mov
inc
add
call
sbb
xchg
xchg
sbb
fdivr
mov
pop
mov
add
outsl
out
jno
loop
in
call
addl
popf
scas
in
mov
nop
frstor
push
push
add
or
inc
repz
inc
cmp
dec
popl
inc
mov
jp
fldcw
lods
outsb
push
cmp
inc
pop
imul
cmp
and
mov
fnstcw
sbb
or
adc
sub
stc
jo
cmp
imul
or
movsl
inc
testb
xchg
inc
inc
mov
pop
cmp
xchg
mov
jbe
mov
mov
cmp
stos
adc
loopne
adcb
les
out
loopne
arpl
xor
jl
mov
test
fldenv
repnz
cltd
add
sbb
outsb
fidivl
xor
mov
les
push
popa
push
repz
pop
stos
rclb
cltd
jge
pop
jae
lret
add
lret
add
add
aaa
neg
dec
push
mov
mov
xlat
or
xor
dec
cwtl
cmp
faddl
lods
and
orl
push
dec
leave
cld
cmp
movsb
and
popa
xor
sbb
enter
in
mov
cmp
fdivrl
add
fidivs
and
push
jnp
fistps
sbb
xchg
mov
in
fdiv
sbbb
adc
je
into
jbe
dec
das
pop
stos
dec
into
out
ja
or
adc
enter
cmp
jns
or
cmc
loopne
jl
mov
or
sub
sahf
dec
pusha
adc
and
mov
leave
mov
mov
ret
jp
or
sub
push
jae
sbb
loope
mov
xor
outsl
xor
mov
mov
add
sbb
jne
repz
sub
xlat
xchg
test
push
ja
in
lock
xchg
std
in
sbbb
aam
jp
hlt
ja
pop
hlt
int3
adcb
jmp
jecxz
cli
xor
lods
movsb
jnp
bound
fsubs
ret
xchg
cwtl
aaa
out
xchg
addr16
es
dec
dec
out
pop
sti
nop
xor
lcall
sbb
adc
add
subl
imul
xor
add
cmpsl
rorl
xlat
aad
pop
stos
cmp
orb
add
pop
push
cmp
or
bound
inc
movsb
pop
ja
or
aas
sub
in
data16
mov
xchg
and
mov
fcoms
sub
or
sbb
mov
shrb
pop
push
add
fs
cmp
mov
loope
push
jp
cs
inc
inc
xchg
push
xor
out
push
adc
push
popf
xor
and
mov
cmp
adc
mov
push
loope
push
stc
jmp
in
and
test
jmp
mov
and
adc
movsl
loopne
xchg
shrb
inc
test
mov
sbb
test
shr
xchg
pop
out
ss
mov
mov
lret
xchg
out
xor
rcrl
iret
shll
mov
or
mov
or
inc
push
arpl
inc
popa
aam
call
inc
stos
mov
pusha
xlat
inc
leave
sbbb
xlat
jecxz
sarb
sub
mov
mov
mov
and
cmp
mov
ja
sub
ret
pop
sti
adc
pop
mov
repz
inc
sub
fwait
mov
push
pop
stos
push
pushf
cld
out
icebp
xchg
push
pop
jnp
pusha
or
loope
out
mov
les
faddl
out
jns
sbb
or
insl
jecxz
and
fldcw
int
cmp
sarl
aam
ffree
mov
mul
in
in
sbb
notl
les
jle
lret
ficoml
shr
in
mov
xchg
push
jno
into
mov
dec
hlt
aam
sbb
jae
add
xchg
call
jns
jmp
arpl
lahf
rcrl
sarl
test
fsubrp
mov
dec
std
call
data16
lock
cld
and
mov
sbb
inc
out
mov
jb
lea
mov
pop
cli
int
sub
lret
nop
inc
xor
outsl
push
jmp
fwait
mov
fidivrl
add
sbb
test
mov
mov
inc
jo
sub
icebp
outsl
xorl
orl
out
or
dec
orl
iret
test
or
xchg
pop
in
add
mov
shlb
lahf
daa
int
cli
xchg
jae
pop
ds
pop
pop
push
inc
add
js
sub
xor
and
sub
inc
aaa
push
push
pop
cmp
jecxz
xor
enter
and
mov
cmc
test
jmp
add
lret
ret
jmp
push
inc
xlat
push
pop
xor
les
inc
dec
fildll
imul
or
mov
mov
repz
inc
sbb
cld
mov
mov
add
sti
xor
outsb
daa
imul
call
test
cwtl
cld
cmp
xor
sti
inc
xor
mov
inc
xchg
lret
or
mov
sub
daa
push
aad
ljmp
adc
sbb
jmp
mov
ja
mov
jle
sbb
mov
in
repnz
roll
cli
mov
lock
cmp
and
jmp
ljmp
dec
fnstenv
dec
push
enter
mov
movsb
fs
insl
xor
outsl
push
and
xchg
stos
inc
stc
adc
gs
shrb
dec
jge
sbb
sbb
stos
leave
add
adc
jmp
test
lds
mov
lret
pushf
ret
xor
jg
jle
jecxz
xchg
pop
pop
sbb
ret
jecxz
dec
ret
das
fidivrs
inc
dec
test
or
cmp
push
test
cli
sub
jge
pop
adc
insb
xchg
adc
xchg
enter
mov
lret
cmp
sbbb
cmpl
out
pop
dec
cld
mov
mov
jne
and
pop
or
aam
dec
xlat
cmpsl
add
imul
inc
mov
rclb
sbb
jae
cmp
mov
aaa
mov
sbb
adc
xorl
out
cmpsl
or
xchg
mov
arpl
push
pop
push
aad
in
pop
dec
push
sahf
or
pop
fldcw
pop
push
dec
mov
mov
out
cmp
xor
stos
and
not
add
mov
xlat
sbb
pop
sbb
out
fldl
gs
imul
xor
in
popa
sahf
dec
orb
shl
aaa
sub
loop
cmp
int
loope
into
gs
lcall
sbb
ss
cmc
fwait
inc
push
jnp
cmp
fdiv
into
dec
xor
ret
push
push
push
jo
out
call
push
and
in
clc
mov
sbb
in
mov
or
adc
sbb
or
add
outsl
lods
psubusb
pop
out
daa
push
lds
pop
adc
mov
addr16
cmp
dec
out
cmp
out
outsl
xor
xchg
inc
int3
loopne
sahf
outsl
jp
scas
jg
stc
and
sbb
insb
mov
je
out
push
movsb
pop
enter
lahf
aad
dec
outsl
mov
push
pop
xlat
js
outsb
mov
insb
sbb
adc
test
jno
fstpl
hlt
xchg
fwait
loop
cwtl
std
adc
addr16
sub
mov
mov
mov
cmp
xchg
test
cwtl
mov
into
push
cmpsb
test
repnz
jle
fsubl
test
imul
pusha
push
mov
lcall
stos
orb
daa
repz
xor
dec
xchg
pop
cmp
loop
in
xchg
test
test
sarb
repz
ret
mov
adc
xor
cld
icebp
in
jno
push
mov
movsb
adcb
xchg
cmp
jp
inc
cmp
mov
adc
mov
xor
pop
mov
pop
add
loopne
popa
and
mov
xchg
repnz
fistpll
cmpsb
minps
or
test
sub
mov
into
dec
jp
hlt
lock
xor
jb
jne
adc
xchg
xchg
mov
das
or
incl
insb
rol
xchg
shll
cld
repnz
add
and
pop
add
lret
ret
scas
std
pop
or
ds
xor
fsubr
xchg
inc
xchg
push
or
nop
jns
nop
lods
and
dec
xor
mov
pop
xor
jns
andl
shlb
adc
test
mov
stos
fnsave
iret
test
xor
mov
sbb
or
sbb
pop
aas
push
add
lcall
shlb
cmpb
aaa
fnstcw
jle
dec
jns
fisubrs
pusha
jnp
lcall
fs
lds
jbe
leave
xor
dec
xlat
in
scas
insl
push
pushf
sub
sub
movsl
nop
icebp
push
aam
imulb
lea
jmp
adc
cld
and
sbbl
push
push
sub
rorl
inc
pop
jp
push
cmpsl
mov
cmp
adc
mov
push
scas
loopne
repnz
rcr
cmpsl
mov
mov
out
and
pop
mov
xlat
les
pop
sub
or
test
or
idiv
xor
decb
rcr
dec
or
mull
sbb
xor
lods
loopne
pop
inc
lret
dec
out
push
sbb
push
sbb
fiadds
sbb
push
push
je
addr16
insl
jle
mov
mov
jmp
in
std
cmp
and
and
lret
or
scas
pop
and
and
adc
icebp
cmpsl
test
fstps
jmp
fcmovbe
scas
arpl
outsb
adc
mov
mov
loopne
je
jne
sbb
popf
pop
push
frstor
imul
mov
cltd
mov
test
test
in
or
aam
idivl
jno
inc
sahf
xlat
cmp
ja
das
xchg
pop
pop
gs
push
jecxz
cmp
adcb
clc
lods
mov
dec
loop
mov
movsb
int
cmpsl
lret
ljmp
pop
mov
data16
inc
stc
mov
cmp
xlat
adc
xchg
repz
and
clc
xlat
dec
dec
push
jmp
xchg
leave
stc
mov
xlat
ss
push
hlt
mov
sub
sbb
pop
mov
mov
aad
cli
test
jb
xchg
sbb
aad
bound
les
out
lods
ja
dec
mov
sbb
fistpll
jecxz
inc
lock
dec
in
enter
pop
and
or
pop
outsb
push
mov
test
push
std
cmp
lock
inc
or
adc
movsb
je
inc
test
dec
outsb
daa
test
jmp
stos
mov
in
test
inc
adc
xchg
mov
adc
jle
pop
xchg
adc
call
xchg
loop
sub
and
repnz
les
in
loopne
loop
lahf
in
mov
mov
inc
dec
cmpsb
xchg
inc
std
shlb
xchg
jns
test
xchg
mov
jcxz
in
sahf
mov
iret
and
jno
jecxz
push
ss
lcall
xchg
loopne
sahf
inc
icebp
dec
mov
and
hlt
test
sbb
pop
movsb
call
and
imul
test
loop
rcr
mov
rcl
or
test
dec
in
xor
sub
and
pop
call
lods
mov
dec
leave
or
in
push
xlat
push
dec
aad
lret
mov
mov
dec
adc
es
and
jle
push
std
stos
or
mov
pop
push
imul
jg
push
loop
add
mov
enter
xchg
mov
enter
lcall
lods
pusha
rcrb
dec
leave
cmp
leave
mov
fcomp
insb
jnp
jo
jb
mov
loope
js
test
imul
fnstenv
out
adc
aad
jae
dec
int3
adc
outsb
popf
xchg
mov
pop
cmp
lock
imul
fmull
in
sahf
rolb
cmp
stc
xor
movsl
adc
imul
test
mov
xchg
mov
inc
add
cmpsl
ffree
xor
movsl
aam
cmp
adc
add
add
sarl
sbb
insb
xchg
mov
shll
ss
call
mov
adc
sub
cmc
xchg
xchg
test
rcr
pushf
movsb
mov
sub
or
popf
dec
stc
daa
lods
xchg
mov
fs
jne
in
mov
ljmp
mov
or
push
data16
cmpsb
idivb
iret
and
popa
or
xchg
add
add
pop
loope
mov
ja
mov
dec
jnp
jnp
lods
out
in
adc
loop
jo
pop
inc
push
xchg
fwait
sbb
je
push
push
pusha
jnp
jb
mov
nop
int
mov
test
pop
inc
enter
pop
jns
aaa
mov
push
push
mov
and
gs
rcr
dec
inc
stos
lret
aaa
scas
in
jl
jge
movsl
mov
sbbl
add
pop
std
mov
or
dec
in
loop
mov
xchg
jmp
jb
pop
loope
rcl
inc
in
sti
push
das
insl
and
nop
jne
cmp
dec
sub
fimull
and
push
xchg
dec
sahf
mov
rcl
fistpl
lea
std
jge
push
dec
cltd
sub
int3
mov
popa
mov
pushfw
leave
jno
jecxz
sarb
mov
add
pop
dec
xor
xchg
xchg
hlt
lret
leave
push
sub
sub
or
or
mov
pushf
into
dec
pop
sbb
sub
or
dec
sbb
mov
lret
dec
jo
call
pushf
lcallw
fdivp
in
pushf
daa
dec
mov
test
push
int3
push
sub
outsl
and
ret
aas
lods
sbb
mov
aaa
pop
mov
lret
mov
cmp
push
push
imul
in
out
mov
mov
cmpb
pop
pop
std
movsb
dec
int
jno
je
push
sahf
cmp
ss
pop
in
addr16
push
out
je
dec
inc
adcl
cld
imul
xor
repnz
xchg
insb
ficomps
nop
stos
sub
in
pop
rolb
xchg
jle
cld
xorl
aas
ror
mov
nop
push
test
stc
sbb
das
das
addr16
hlt
xor
rclb
sbb
push
push
adc
pusha
push
enter
pop
xor
jge
mov
out
mov
imul
or
jg
push
daa
loopne
fdivrs
adc
jle
mov
jge
cmp
daa
mov
xchg
lcall
xchg
sbb
adc
sbb
jg
mov
fbld
roll
xor
jle
loop
inc
aad
ss
jae
test
push
lock
icebp
or
jmp
popf
sub
mov
sub
sahf
jle
cmp
jbe
mov
inc
cld
inc
es
cmp
xchg
dec
mov
js
dec
xchg
mov
mov
xor
push
test
and
shrl
push
pop
lcall
and
ret
and
aaa
lods
jae
shlb
fsts
inc
inc
mov
fisttpl
adc
cltd
shlb
add
and
lcall
dec
dec
jns
cmp
xor
cmc
adc
or
lahf
pop
and
loopne
push
add
and
in
adc
rol
jbe
fidivrs
mov
int3
ret
fmul
sbb
imul
mov
pop
clc
enter
outsb
xchg
insl
sarb
cltd
ds
pop
jo
xchg
add
and
ds
stos
out
fisubrs
mov
stos
xor
stos
cmp
cmp
xlat
mov
lcall
push
mov
fcomip
pop
outsb
inc
xor
dec
mov
test
cmp
dec
cld
mov
or
or
sbb
adc
or
insl
inc
cwtl
adc
xchg
int
push
cwtl
dec
insb
pop
xchg
scas
cmc
adc
push
or
or
in
jo
rolb
adc
dec
mov
xlat
cwtl
jb
inc
mov
leave
pushl
mov
push
sub
shlb
mov
jo
repnz
adc
mov
jle
nop
jg
xor
push
dec
ret
lock
xor
fdivs
mov
repz
hlt
mov
jg
inc
adc
xor
filds
loope
or
orb
mov
outsb
rcll
sbb
aam
je
ficoml
mov
mov
or
pop
fstpt
inc
lahf
es
adc
and
push
dec
xchg
imul
ret
in
push
inc
mov
mov
push
cmp
jns
mov
xlat
cmp
decl
jns
mov
or
cld
sbb
outsl
xor
fs
enter
mov
dec
ds
dec
aam
out
repnz
cli
and
push
push
xchg
cwtl
jne
les
push
outsb
dec
push
mov
aaa
cmpsl
std
test
push
mov
inc
mov
mov
out
xchg
loope
jp
repz
dec
lods
loope
xor
cltd
in
push
lods
es
cwtl
dec
mov
addr16
call
or
movsb
divb
dec
xabort
jecxz
push
leave
jns
cmc
xor
sbb
aam
sbb
movsb
or
cmp
add
shl
sbb
inc
inc
dec
pop
es
adc
and
inc
pop
add
decb
aam
rcrb
gs
ret
popa
scas
addr16
dec
cmp
pop
arpl
jecxz
mov
pop
fwait
sbb
faddp
mov
cmp
or
push
inc
cmp
push
je,pn
or
jb
jb
xor
mov
je
data16
les
outsl
sub
push
adc
adc
out
rcll
scas
popf
push
sbb
or
mov
mov
test
mov
movsb
pop
movsl
sar
cmp
mov
jo
test
pop
les
das
inc
aad
jp
lds
inc
dec
ret
popa
dec
arpl
adc
xchg
add
test
jbe
jns
push
les
pop
mov
sbb
jne
push
jns
jle
ljmp
out
ja
fistps
xor
inc
push
and
cmp
pop
pop
mov
adc
mov
sub
and
scas
xor
aas
cld
mov
mov
dec
popa
dec
jecxz
xchg
data16
sbb
ja
jle
adc
or
xor
andl
cld
inc
mov
or
jnp
sbb
aas
int3
in
xchg
sub
xchg
stos
push
jno
add
ja
out
rclb
dec
jg
mov
xchg
aam
jecxz
jl
mov
cmpsb
cmp
aaa
repnz
sub
mov
mov
cmp
fstps
mov
xor
inc
xchg
mov
mov
scas
outsb
scas
pop
mov
pop
mov
imul
sbb
xchg
imul
or
mov
das
ja
dec
inc
call
arpl
push
lds
mov
stos
push
cwtl
mov
mov
mov
not
in
out
and
outsb
push
jp
fdivl
cmc
mov
mov
out
in
xchg
cmpsl
daa
andb
pop
leave
xor
jb
imul
dec
aaa
xor
shrb
adc
divb
or
movsb
and
hlt
pop
aaa
push
pushf
mov
stc
cmpsl
pop
jbe
addr16
pop
lret
fidivs
cli
aam
insb
inc
push
jmp
gs
xor
repnz
mov
lods
xor
adc
lret
jge
aas
dec
call
push
rcrb
jp
push
inc
sbb
stos
call
push
es
out
push
out
or
into
push
push
mov
pop
arpl
imul
push
mov
inc
aas
fdivs
inc
push
test
push
xchg
out
daa
push
call
xchg
pop
lea
das
lret
adc
push
movl
adc
sbb
lret
fsubr
jns
pushf
mov
xor
icebp
sarl
stc
jle
push
pop
push
dec
push
xchg
mov
hlt
adc
dec
movsb
scas
sbb
push
pop
add
lret
filds
pop
add
and
push
int3
cmp
mov
inc
sub
stc
push
add
add
test
mov
adc
cwtl
jmp
dec
jle
js
xor
insl
sbb
mov
aaa
inc
lods
push
test
add
dec
cld
jnp
and
inc
test
cli
das
mov
loop
push
pop
push
mov
inc
jne
stos
je
sbb
sub
leave
icebp
xor
lea
xchg
pusha
push
iret
mov
add
popa
nop
pop
dec
es
dec
pop
sbbl
int3
sub
dec
xchg
sarl
sbb
out
jno
sub
inc
xchg
out
cli
push
das
add
dec
pop
jae
push
xchg
loop
pop
insl
inc
lods
jg
add
cmp
jmp
aaa
add
xor
sub
mov
or
mov
aas
repz
cmp
mov
cmova
fldt
mov
cmp
cmc
in
xchg
lcall
in
ror
jno
mov
dec
mov
enter
push
adc
mov
add
push
loop
aam
xor
jne
ror
xor
adc
daa
xor
mov
or
jmp
fptan
xchg
divb
cmp
mov
push
or
ret
loope
xor
aas
mov
jg
inc
rcrl
sbb
outsb
enter
dec
roll
inc
xor
sub
push
dec
dec
imul
xchg
nop
test
enter
mov
jb
cmp
mov
repz
push
adc
divb
loop
xor
out
mov
jmp
mov
sahf
xchg
in
and
sarl
popa
out
movsl
test
scas
sahf
rcll
iret
gs
adc
cwtl
xlat
imul
cmp
js
mov
popf
jmp
push
mov
pop
fwait
out
loop
orb
loopne
adc
aas
incb
lret
pusha
sub
mov
je
cmc
lcall
test
sti
aad
mov
ljmp
int3
xchg
ret
xchg
xchg
add
cmpsb
cld
cmp
push
push
jb
push
push
outsb
jle
mov
mov
mov
push
iret
cltd
nop
add
or
out
push
cltd
push
stos
lock
xchg
aam
bound
sub
jbe
ret
iret
add
lds
rcrb
lds
ret
cmp
mov
xor
int
push
jae
mov
in
cmpsl
js
in
mov
gs
jo
mov
mov
and
lcall
and
cmpb
into
enter
dec
push
mov
push
xor
inc
data16
xchg
fwait
sub
sbb
cltd
jmp
xchg
cmp
out
data16
mov
jbe
jo
cmp
ficoms
mov
mov
push
add
pop
jae
mov
imul
mov
out
rorl
pop
test
xchg
les
das
iret
lahf
pop
mov
fsubrl
mov
sub
mov
inc
fimull
cmpsb
fisttpll
in
cs
aam
jmp
mov
out
ret
leave
fiadds
mov
fs
lds
out
mov
jo
les
pop
outsl
in
adc
mov
ja
sbb
adc
les
sbb
out
add
lods
sub
add
addr16
push
lret
push
cmc
rorb
call
pushf
cmc
mov
mov
cmc
jnp
es
fdivs
pop
pop
inc
stos
push
mov
bound
dec
jns
push
outsb
stos
mov
adc
mov
repnz
int
and
out
adc
mov
dec
mov
int3
rclb
sbbl
loope
je
pop
push
dec
jmp
mov
cmp
call
xor
mov
fildl
icebp
dec
out
aaa
mov
in
push
ja
cld
int3
jbe
or
clc
mov
lahf
aas
nop
add
das
inc
arpl
dec
data16
lods
inc
xchg
mov
push
jb
popa
scas
popf
clc
xlat
jne
cmp
mov
psubsb
inc
xor
into
cli
fidivrl
int
pushf
and
mov
sbb
sbb
addr16
inc
or
ja
push
mov
jle
inc
sub
mov
icebp
test
push
mov
aas
loopne
lcall
push
rcll
xchg
jbe
xchg
ljmp
add
and
push
cmp
dec
xchg
leave
mov
stos
add
jmp
push
sbb
cmp
pop
jle
shrl
mov
xor
js
pop
mov
push
shll
enter
in
int
mov
and
fldt
fcoms
lret
mov
sarb
aas
testl
jle
add
shll
or
sarb
lock
push
decl
popa
in
sub
dec
sbb
sub
mov
scas
mov
sti
ficoml
pop
rorb
call
mov
imul
pop
push
loopne
adc
sub
imul
sti
aad
jae
sbb
nop
sahf
mov
inc
push
stos
mov
loopne
clc
mov
sbb
pop
imul
push
es
cmpsb
sbb
stos
addr16
repnz
inc
xorl
sub
dec
cmp
rorb
sbb
mov
in
lahf
lret
sbb
jae
add
js
les
fisubrl
push
push
inc
pop
or
aas
ss
or
jns
sub
pusha
aaa
pop
in
pop
mov
xchg
pop
jle
pop
or
rcll
add
stc
mov
pop
enter
in
mov
sbbl
leave
pop
clc
mov
push
lods
pushf
clc
pop
outsl
or
inc
ljmp
jno
jp
jne
xchg
inc
jno
adc
jl
inc
rcr
inc
ret
stos
addb
mov
jae
mov
dec
jo
cs
inc
mov
jge
imul
loopne
testl
xor
movl
nop
pop
arpl
pushf
mov
loopne
outsb
and
mov
mov
pusha
mov
pop
dec
push
and
jmp
push
mov
sbb
mov
lea
xchg
push
lea
cltd
mov
xchg
or
xor
ja
fsubp
adc
or
xchg
xchg
jecxz
mov
addr16
xor
sbb
mov
stc
sub
pop
sub
cmp
pop
int
rorl
insl
mov
imul
adc
movsb
cltd
jne
adc
fnstsw
pop
push
and
stc
sar
sub
mov
dec
push
xchg
lds
dec
cs
gs
sbb
dec
add
mov
mov
leave
sbb
mov
or
popf
inc
push
mov
xor
arpl
in
shll
sub
jae
push
xchg
lds
mov
pop
ss
pop
aad
jmp
negb
push
add
mov
xor
call
cltd
add
xor
jb
shll
into
xchg
pop
xchg
cmpl
add
xor
add
add
enter
pop
lock
in
push
sbb
mov
and
sub
mov
sbb
cmp
mov
and
pushf
jne
aam
addr16
ds
jnp
arpl
clc
daa
mov
and
inc
test
movsl
js
inc
in
mov
inc
out
fimull
inc
gs
mov
push
adcb
jb
lcall
scas
adc
lods
adc
popf
sti
push
fs
push
scas
nop
pop
idivb
fisttps
lds
mov
scas
popf
jmp
insl
daa
mov
and
pop
mov
lahf
ret
push
add
jmp
pop
jnp
dec
cmp
lahf
ret
movsb
mov
pusha
cmp
mov
cmp
faddl
in
mov
jecxz
pop
in
mov
rorl
pop
pop
sbb
xorl
adc
mov
sub
out
push
cltd
lcall
mov
mov
ficoms
leave
and
and
adc
scas
pop
shrl
out
xor
mov
mov
imul
imul
mov
scas
fldl
scas
inc
push
xchg
sub
adc
fwait
addr16
inc
outsb
fmull
mov
push
stc
jns
insb
into
out
jmp
dec
xchg
lahf
outsl
sub
mov
mov
sub
sbb
and
fldl
movsl
mov
je
fdivrl
sbb
dec
mov
xchg
cmp
aas
mov
scas
mov
fdivs
lahf
inc
je
and
out
clc
movsbl
add
arpl
xorl
testl
mov
mov
and
mov
imul
pushl
add
pop
cltd
push
push
ljmp
pop
fs
call
ja
arpl
ljmp
ficomps
mov
jle
pop
xchg
out
cmc
mov
inc
mov
push
push
xor
jb
mov
pop
mov
popa
iret
in
sub
rcrl
call
inc
mov
lock
sarb
adcb
sbb
jp
jne
icebp
pop
adc
out
sbb
stos
dec
hlt
js
loope
xchg
dec
xchg
adc
and
lret
cmp
inc
jnp
outsb
sub
cmp
or
xchg
and
adc
ficompl
push
mov
movsl
dec
iret
leave
je
jmp
outsb
stc
sub
or
rep
xlat
popa
dec
int3
xchg
cli
addr16
pop
and
popa
pop
inc
fwait
enter
lahf
int3
pmulhw
push
xchg
testb
ljmp
je
mov
mov
pop
dec
out
es
into
inc
dec
xchg
sub
jecxz
call
xor
clc
movl
and
rcl
lds
insb
es
iret
pop
cmp
test
xchg
mov
xor
sbb
or
fistpll
hlt
dec
pop
pop
mov
xchg
xchg
mov
pop
xor
pop
fs
icebp
or
jge
sbb
jmp
in
pop
cs
jle
xchg
fiadds
push
jecxz
or
fidivs
es
xor
push
and
cmp
fists
jae
add
cmp
push
js
xor
sub
movsl
test
xor
adc
jle
ja
aam
iret
insb
push
mov
add
das
ja
or
sub
loope
jns
insl
jbe
or
lret
les
icebp
imul
jp
jne
cmpsb
pop
mov
arpl
pop
loop,pt
xchg
aas
pop
imul
test
je
inc
push
inc
fildl
sbbl
es
aad
sbb
sar
xor
imul
xchg
addr16
jno
int3
cmp
pop
stc
movsb
outsb
adcl
dec
cwtl
dec
mov
xlat
jae
jne
insb
mov
push
add
cmp
in
cmpsb
mov
out
xor
pop
sub
fdivp
or
aad
mov
push
push
enter
jb
and
cmp
xor
nop
es
inc
leave
mov
mov
ffreep
les
pop
mov
cmp
inc
sti
sar
pop
xchg
pop
int
cmp
mov
gs
loope
mov
int3
in
xor
mov
inc
dec
mov
stc
xlat
loopne
sbb
mov
push
loop
xlat
not
pop
popf
and
aad
xorl
add
mov
push
js
and
xor
sub
iret
sbb
mov
int
outsb
sub
xchg
mov
data16
loope
outsb
enter
outsl
movsl
mov
lea
ret
push
xchg
mov
pop
push
aas
shll
addl
xor
inc
cmp
aad
arpl
adc
cmp
movsb
add
mov
cmp
stc
js
push
push
add
or
mov
push
loop
pop
out
leave
sub
pop
push
xor
mov
mov
iret
fcomi
test
adc
xor
jo
sbb
lods
inc
sub
jmp
jecxz
out
push
and
insb
arpl
pxor
xor
js
dec
pop
enter
ret
add
pop
incl
stos
inc
cmp
mov
mov
shl
jp
jb
ficoml
ja
icebp
mov
ss
jnp
repz
jae
out
ja
dec
dec
cmp
xor
cmp
call
xchg
enter
mov
jg
xchg
les
aaa
mov
arpl
and
leave
push
sbb
xchg
xor
test
es
add
xchg
sub
clc
sbb
adc
cmpsb
push
in
jecxz
cmpsl
sbb
rolb
add
fwait
out
gs
orb
out
mov
mov
mov
sahf
subb
test
iret
push
push
pop
stos
pop
or
mov
lds
xchg
mov
sbb
pop
ss
pop
stos
out
mul
outsb
pop
aas
xchg
repnz
sti
push
push
aaa
jle
sub
in
je
xchg
jbe
fiadds
sub
aam
sub
and
adc
mov
in
test
push
subl
jae
cmc
loop
imul
outsb
xor
flds
call
mov
aam
scas
pop
popa
popa
jmp
mov
fisubs
or
scas
pushf
xchg
rorb
pop
add
out
push
test
pop
adc
jne
mov
cmp
mov
or
cmp
inc
pop
mov
push
xor
enter
inc
loopne
jecxz
push
cld
xchg
pop
cltd
ljmp
shrl
aaa
mov
or
sbb
rcll
mov
cltd
fildl
scas
mov
jg
pushf
aas
inc
cltd
add
lret
add
scas
out
jae
test
lret
jb
rcll
lds
adc
and
pop
add
xlat
add
test
fdivrl
cmp
movl
and
out
inc
xchg
test
out
inc
inc
mov
mov
int
cmpsl
js
sub
pop
test
pop
mov
aam
std
jno,pt
add
mov
jns
rclb
mov
dec
lret
xor
ret
cltd
sbb
aam
dec
fidivl
inc
test
pop
faddl
lfs
out
adc
stc
sub
adc
test
mov
fs
sbb
and
jo
or
lea
mov
xchg
sbb
lods
out
jns
push
jp
pop
adc
mov
hlt
push
out
mov
mov
cmp
test
sbb
int
xor
andl
mov
out
fsub
fisttpll
adc
inc
cmc
adc
mov
fistpll
push
add
inc
repz
hlt
clc
inc
pop
out
out
popf
std
aaa
sub
aam
xlat
jle
sbbb
pop
das
and
fsubl
inc
pminsw
popf
lea
xchg
repz
sub
jae
jle
dec
fisttpll
add
jne
in
and
in
add
jno
sub
mov
push
push
ret
xor
stos
mov
jbe
int3
imul
test
data16
test
sbb
jno
vcvttsd2si
out
dec
jge
pusha
push
sbb
pop
dec
sub
inc
sub
daa
and
lds
cmpsb
enter
mov
outsl
pop
mov
loop
addb
mov
mov
mov
adc
das
cmc
adc
push
dec
mov
mov
mov
jmp
sbb
sbb
push
shl
nop
leave
movsb
dec
daa
mov
xchg
xor
mov
addr16
lcall
out
stos
push
out
or
iret
pop
mov
nop
xchg
inc
fistpll
jg
pop
push
sbb
lds
loope
and
lods
xchg
leave
jmp
int
lock
dec
push
push
jnp
gs
pop
lret
imul
popf
pop
daa
icebp
int3
mov
nop
inc
or
jmp
int3
sub
out
ljmp
in
rcll
icebp
sar
add
or
jp
sub
mov
push
repz
mov
cmpsb
addr16
cs
aad
lahf
std
shll
fstps
in
fidivrl
nop
mov
lcall
popa
add
sub
in
mov
or
jbe
sub
lret
add
out
inc
push
push
mov
gs
inc
sar
and
sbb
loopne
rcrl
xor
lea
stos
aaa
and
adc
dec
xor
mov
push
ret
js
shlb
movsb
daa
push
loope
add
clc
in
sub
stos
insb
das
inc
sub
gs
imul
jnp
test
loop
or
stos
xchg
cmp
jl
mov
xor
sub
fadds
lret
fnstcw
mov
sub
adc
rorl
add
fwait
xor
mov
jb,pt
pusha
lds
notb
sbb
mov
or
cmpsb
push
es
fcoms
mov
or
xchg
pusha
and
ljmp
aam
mov
leave
les
movsb
cmp
add
ja
and
mov
notb
sub
int3
gs
sbb
popf
sbb
aam
dec
adc
sub
sbb
mov
xchg
imul
sub
xchg
leave
shrl
or
xchg
dec
mov
lcall
insb
movb
sarl
jge
push
pop
adc
sahf
aad
test
mov
repz
xchg
stc
int
das
jae
cmc
mov
bound
xchg
fldenv
cli
inc
lret
repnz
fcmovnb
int
jnp
imul
sbb
xchg
daa
jnp
inc
out
and
push
xchg
and
and
mov
gs
push
pop
fdivrl
push
subl
sub
ss
dec
sti
mov
mov
and
sbb
push
lea
fcomps
lds
or
stc
push
scas
xor
test
popl
add
mov
pop
sbb
data16
aad
sub
iret
push
arpl
popf
jge
ljmp
popf
cmpsb
add
adc
mov
push
call
pop
pop
and
mov
and
stos
pusha
in
lret
cmpsl
aas
jbe
pop
int
pop
jne
and
inc
cmp
jl
push
adc
jecxz
xchg
inc
dec
imul
fistpll
pop
lock
pop
mov
in
and
mov
lock
nop
xchg
mov
repz
inc
xchg
out
shlb
add
fdiv
xor
push
dec
in
pushf
movsl
fs
and
or
fisttpll
pop
xor
mov
inc
or
xchg
dec
jge
fsts
andb
rcl
sarl
fcomp
push
lds
pop
cmpsb
out
dec
loope
repz
or
xchg
repz
mov
cmp
sbb
and
call
int3
sub
jb
mov
mov
das
das
push
adc
jecxz
aas
mov
mov
fstps
mov
inc
mov
mov
add
pop
repz
xor
mov
mov
movsb
fsubrs
jg
notb
test
js
and
sbb
mov
mov
mov
mov
aad
mov
sbbl
repz
jb
xchg
xor
push
sahf
cltd
nop
dec
jp
sbb
jp
icebp
test
sub
ret
lret
dec
dec
xor
sub
lock
outsl
xchg
mov
arpl
and
add
inc
mov
push
sub
sbb
jb
jns
sahf
lods
adc
ss
aas
pop
xchg
orl
jns
push
xchg
jo
sub
in
jae
xchg
jb
call
leave
mov
lock
lds
push
imul
ja
push
enter
les
out
pop
les
mov
push
cmp
nop
xor
lret
pushf
movsl
push
lds
and
in
int
adc
xchg
push
cli
mov
push
xor
or
cltd
jno
cwtl
scas
cmpsl
and
scas
leave
cmp
mov
sbb
nop
sti
jmp
inc
into
pusha
mov
cs
jg
into
icebp
lret
or
das
out
pop
mov
out
sti
cmp
dec
cmp
push
test
std
jge
and
fldcw
inc
mov
add
sub
cmc
out
sub
jmp
inc
lods
in
mov
fcoms
negl
test
inc
stos
mov
arpl
push
push
les
jno
jle
loope
cmp
cmpsl
add
and
pop
mov
push
fsts
xchg
cli
stos
pop
dec
mov
jbe
bound
mov
loopne
cld
mov
mov
cmp
or
mov
adc
cmp
push
sahf
clc
dec
cli
jmp
cmpsl
jnp
idivl
jns
lds
add
aas
in
repz
mov
xchg
jmp
and
fmull
lret
sbb
sub
xchg
or
call
loopne
mov
ffree
mov
xor
jo
aaa
sub
cmc
xchg
sti
aad
sub
lcall
push
dec
popa
call
hlt
divb
sub
push
mov
test
adc
xor
repz
sbb
mov
sbb
xor
push
inc
jns
dec
adc
hlt
push
enter
sbb
testb
mov
cmp
pop
repnz
xor
lods
rcrl
in
jne
cltd
mov
jbe
mov
in
repnz
mov
sub
or
hlt
push
leave
and
test
mov
int3
xchg
xchg
sbb
jle
mov
xor
mov
or
sar
cmp
lods
imul
inc
add
adc
adc
inc
lods
xlat
cmp
inc
pop
shll
pop
lods
fsts
rorb
push
pop
adc
enter
jnp
fistpll
mov
aad
pusha
and
ljmp
in
adc
push
xor
pop
push
xchg
xchg
mov
cld
jb
mov
jns
mov
lret
inc
shll
or
pop
mov
xchg
xchg
xor
imul
loopne
pop
mov
or
imul
or
into
jp
adc
xchg
and
adc
dec
sub
mov
add
xor
adc
push
scas
repz
cmp
mov
lahf
in
jge
mov
les
jno
cmp
mov
cmc
je
push
jbe
sbb
mov
fildll
mov
jns
mov
repz
inc
and
cli
aad
arpl
loopne
add
pop
ret
dec
sub
les
fiadds
callw
in
mov
fs
and
outsl
pop
push
xor
or
das
outsl
pop
xchg
push
and
pop
push
push
test
xchg
repnz
imul
lcall
test
xchg
dec
outsb
pop
xor
ss
repz
cmp
insb
bound
pop
lret
xchg
pop
mov
or
popa
mov
fldl
mov
lret
mov
xchg
rol
jns
add
jge
pop
sbb
loop
sbb
mov
pop
dec
cmp
imul
add
xchg
iret
push
pop
xchg
fisubs
popa
shll
outsl
pop
pop
xchg
mov
adc
mov
bound
in
cli
pushf
mov
add
cs
sbb
sub
das
add
das
mov
push
adc
add
inc
mov
xor
rcr
mov
es
push
in
xchg
test
out
mov
add
mov
sub
in
mov
add
popl
dec
in
dec
jle
mov
aaa
mov
ss
ret
insb
sbb
or
rcrb
mov
cs
aam
mov
out
dec
daa
test
jle
jb
lds
test
add
xchg
mov
push
popa
test
jb
sub
stos
sti
cmpsb
jae
call
lock
repnz
mov
scas
lcall
sub
pop
mov
arpl
stos
cmp
adc
xor
cld
jno
mov
lock
and
in
sub
push
testb
pop
adc
dec
add
push
lods
mov
push
jo
and
fs
pop
in
xchg
cltd
sub
les
insb
in
cltd
mov
push
data16
les
push
pop
sub
jae
xchg
imul
xchg
add
push
popa
push
inc
and
jmp
add
pop
dec
int3
or
sub
and
les
push
cmp
out
lret
pop
cmp
dec
leave
jbe
dec
in
push
scas
pop
ret
shlb
xchg
pop
jb
mov
xorb
sub
cmpsb
cwtl
mov
fidivs
inc
xor
push
mov
mov
jge
mov
inc
mov
fimull
mov
mov
push
add
add
inc
sti
stos
in
fstpt
sbb
jmp
pop
push
xor
arpl
popl
pop
xchg
or
cmpsl
lret
push
or
loope
sbb
pop
std
scas
popa
inc
or
pop
xor
adc
lea
mov
pop
fisubrl
imul
shlb
inc
mov
dec
push
movsb
sbbb
sti
or
call
test
jno,pt
mov
dec
dec
jg
js
in
fidivrl
or
notb
lcall
inc
push
scas
and
pop
std
inc
ficoms
rcll
or
ja
std
jp
and
lret
dec
sub
add
or
fisubrl
or
adc
lcall
clc
add
daa
push
adc
inc
jg
xchg
pop
adc
mov
xchg
daa
cld
push
add
add
aas
imul
loope
lds
xor
aad
xlat
out
aad
rolb
cmp
dec
xlat
fldcw
lods
push
aaa
xor
or
add
es
stc
and
mov
lcall
jmp
ss
pop
data16
cmp
sub
fisubrl
cmpl
insl
mov
insb
lock
mov
adc
jo
add
xchg
xchg
pop
les
mov
arpl
push
sub
mov
sub
jl
xchg
imul
orl
inc
std
sbb
dec
xchg
sti
jno
pop
inc
call
mov
test
fimuls
orl
test
inc
test
and
fwait
mov
stos
leave
mov
dec
mov
or
fs
mov
cmpl
lcall
fsubs
outsb
adc
pushf
inc
xchg
push
std
das
cltd
xor
test
cmp
mov
mov
hlt
lds
outsl
jo
mov
xchg
call
adc
fcmovne
xchg
jle
lahf
xor
jmp
sti
mov
mov
lret
int
shll
lods
pop
in
loope
repz
lcall
pop
jnp,pt
aad
sti
mov
push
mov
jo
scas
adc
test
xchg
add
sub
xor
lahf
rcr
xchg
test
push
mov
push
dec
xchg
inc
imul
inc
scas
sub
pop
and
jo
fucom
lock
xchg
bound
fs
jne
clc
or
xchg
push
int
add
pusha
repnz
nop
pop
rcll
mov
cmp
imul
cli
fstl
outsl
gs
push
or
add
test
sub
fmull
or
pop
mov
push
dec
push
inc
or
rcrb
or
pop
mov
sar
sub
je
mov
test
loope
mov
cmp
jo
or
jae
stos
test
movb
and
dec
sti
imul
test
add
imul
subb
test
dec
in
inc
lds
jge
ret
add
and
test
lock
push
loop
cmp
test
jo
movsl
movsl
push
ret
outsb
mov
dec
imul
packuswb
and
jge
jbe
xor
popa
clc
shlb
adc
xor
cmp
clc
out
in
stos
imull
and
and
ja
insb
push
loopne
pop
ljmp
mov
cli
into
dec
and
cmp
adc
jecxz
add
xor
xchg
mov
pop
idivb
add
or
movsl
or
outsb
mov
imul
jl
arpl
xchg
inc
mov
lock
add
leave
hlt
push
daa
sub
aaa
cld
jmp
das
and
int3
jmp
imul
es
add
clc
xchg
jb
lea
jmp
mov
mov
inc
rolb
rep
jg
pop
pop
xchg
xchg
dec
mov
addr16
out
popf
and
fcmovnb
jmp
push
mov
jbe
cmp
pop
outsb
cs
add
frstor
mov
ljmp
rcr
sbb
fstpt
pop
aam
sub
fsubrl
sub
and
stos
or
into
jg
push
xor
es
jmp
int3
in
push
sub
jmp
jne
fbld
xorb
out
je
add
xor
mov
cwtl
jp
add
sbb
xchg
mov
ret
mov
les
push
lcall
decb
std
jge
push
addl
outsl
insl
nop
fdivrl
cmp
lahf
test
outsb
jg
lret
sbb
sub
fs
dec
jo
jge
int3
jl
adc
pop
add
add
cs
cmpsl
cwtl
fcompl
or
lds
push
or
push
mov
mov
dec
movsl
jl
mov
cmc
adc
or
rcrl
dec
in
xor
or
xchg
dec
push
push
psubsb
lock
jno
add
xor
data16
push
push
cmpl
pop
lods
aam
ret
clc
data16
pop
lret
jp
rep
cmpsl
push
aad
sbb
or
dec
and
clc
jae
test
lods
pop
rorl
outsb
lods
hlt
es
les
adc
pop
test
std
or
cmp
rolb
mov
sub
mov
je
sub
mov
stos
add
sbb
xchg
mov
push
out
out
pop
xor
fwait
out
pop
cmp
stc
lahf
mov
push
jo
js
cmpsb
mull
test
push
test
jb
test
sbb
xlat
loop
inc
out
lret
inc
pop
fsts
test
fisubrs
divb
test
mov
mov
mov
call
movsb
jg
mov
push
in
sub
or
mov
insb
pop
sbb
sbb
jne
call
xchg
iret
lods
cmp
ret
test
and
fcomp
and
icebp
mov
or
fcmovb
add
cmp
mov
imul
and
enter
fildl
lock
leave
pop
xchg
lods
sub
xchg
inc
sbb
sbb
inc
xchg
xlat
cld
stc
inc
mov
aam
mov
cmp
dec
dec
sub
mov
sub
jmp
or
comiss
xor
cli
imull
out
mov
jo
adc
enter
lahf
sub
push
inc
sub
adc
cli
or
scas
movsb
dec
push
arpl
xchg
iret
mov
mov
daa
pop
imull
loop
test
scas
sahf
imul
pop
push
sahf
mov
mov
imul
aad
mov
fists
je
stos
ficompl
ss
pushf
jae
push
cmp
out
mov
dec
xor
mov
jae
pop
fistpl
adc
lahf
pop
xchg
push
dec
out
das
inc
mov
mov
mov
jle
adc
adc
and
inc
lea
or
addr16
sub
or
aas
mov
jp
xor
outsl
pop
sub
test
or
out
mov
lahf
mov
les
mov
or
inc
pop
adc
sub
sbbb
mov
cmp
push
popf
pop
insl
add
jno
outsb
nop
in
pop
lods
adc
lcall
ffreep
stos
inc
int
or
pop
xlat
sbb
lds
pop
dec
xor
and
add
adc
push
add
sbb
xor
adc
inc
lods
xor
adc
push
xlat
test
out
adc
mov
cmp
push
rorb
cld
xor
shlb
fimuls
or
dec
fistpl
popf
xlat
xor
rcl
js
push
daa
push
or
xor
popa
xor
cmc
cmp
and
in
ljmp
jbe
fcoml
mov
sbb
cmc
or
pop
mov
aas
in
push
jae
out
inc
pop
jge
mov
mov
sub
pop
test
daa
or
mov
loope
jge
mov
push
mov
gs
mov
cld
ja
jns
popa
sub
in
shll
out
mov
mov
mov
xchg
enter
lea
sbb
ds
mov
hlt
xchg
icebp
xchg
jno
inc
and
dec
ds
push
lahf
inc
cmpl
stos
imul
sub
or
push
ljmp
jne
add
fs
cmp
jecxz
or
sahf
ret
shrb
ljmp
xchg
and
std
inc
cmpsl
jecxz
mov
movsl
jo
inc
stc
popf
xchg
pop
push
dec
fwait
gs
mov
in
bnd
outsl
or
mov
dec
push
cmp
xor
gs
roll
icebp
jne
fcmovu
mov
lods
jae
test
int3
sub
mov
subb
movsb
mov
mov
movsb
xor
pop
daa
jae
sti
pusha
xchg
sbb
adc
dec
repnz
fstpl
sub
sti
push
iret
dec
sahf
movsl
jp
mov
inc
inc
dec
sbb
pop
lret
shl
cmp
sbb
repz
sbb
pop
movsl
push
cmp
mov
test
popw
repz
push
ret
in
jne
test
fs
dec
into
push
mov
loope
shrb
cmp
cmp
mov
je
shll
repnz
add
rcll
ds
jmp
sbb
inc
pushf
adc
loopne
hlt
pop
popf
outsl
adc
cmc
insl
popf
fnsave
std
cmc
outsb
fcomps
idiv
jae
imul
nop
mov
dec
mov
mov
mov
cltd
in
fmuls
add
ss
sub
leave
stc
push
ja
jecxz
adc
aaa
mov
xchg
test
or
leave
out
push
ficomps
outsl
lods
jne
dec
daa
fimuls
mov
adc
or
iret
in
cs
aaa
aaa
sarb
pop
stos
outsl
fimull
add
pusha
shrb
dec
test
pop
outsb
dec
scas
loopne
xor
xchg
mov
push
stos
mov
movsl
out
xlat
out
mov
addb
adc
mov
in
cmp
mov
sub
xor
jge
mov
inc
inc
aaa
pop
ja
or
in
inc
cmpsl
mov
pop
cmp
test
push
rol
dec
shll
mov
icebp
pop
repnz
mov
pop
xchg
push
xchg
mov
mov
mov
push
int3
cld
leave
jae
or
mov
sbb
repz
adc
lods
or
repz
mov
jecxz
int
ss
cmp
xor
shll
push
jge
bound
lods
jbe
fbld
pushf
or
xor
mov
popa
hlt
push
test
sub
pop
cmp
or
jo
sbb
std
rclb
jb
shlb
inc
loope
aad
cmpsb
lds
loope
ficomps
es
pop
cmp
xchg
insb
cli
iret
sub
pop
dec
mov
jp
xchg
insb
push
push
pusha
out
mov
fnsetpm(287
mov
push
jae
xchg
sbb
pop
test
out
xchg
adc
jle
and
mov
sub
fidivs
xchg
and
pop
mov
push
adc
sub
in
mov
scas
ja
inc
cs
sti
adc
sbb
xchg
adc
mov
clc
push
inc
mov
sahf
jne
outsb
jb
movsl
xchg
imul
jnp
jns
mov
jl
out
cmc
mov
pop
icebp
shl
je
sub
or
pop
into
test
inc
mov
sub
stos
dec
jmp
mov
or
push
outsl
and
xor
pop
insl
push
jne
and
imul
imul
fwait
adc
int
push
repz
xchg
adc
sbb
dec
or
sub
aam
pop
nop
addr16
jae
out
jp
adc
imul
fldenv
lods
test
pop
jecxz
xor
jecxz
test
dec
adc
jle
scas
jp
sub
movsb
push
dec
insl
push
std
adc
xor
mov
fnstenv
dec
notb
pop
stos
xor
mov
pop
sub
dec
and
repz
iret
lea
or
loope
sub
xlat
fwait
cmp
jle
adc
xor
sub
mov
mov
pop
ss
shrl
mov
xor
test
and
sub
movsb
cmp
and
sbb
jno
xchg
xlat
subl
cld
outsb
ficoms
jbe
inc
xor
mov
mov
test
clc
out
fadd
and
cli
fs
imul
es
sub
jne
or
test
pusha
notb
daa
pop
mov
cmpl
pusha
xchg
into
lret
dec
xor
xor
and
xchg
xchg
mov
sub
test
or
decl
mov
inc
mov
sbb
dec
push
gs
push
or
jno
pop
repz
lret
adc
fldcw
jp
xlat
sub
dec
shlb
shl
out
lcall
ss
push
loopnew
mov
xchg
aad
imul
push
xor
push
cmp
imul
sub
add
jecxz
cmp
in
cltd
bound
sbb
nop
repnz
dec
or
inc
mov
aam
mov
lea
or
mov
dec
and
jbe
ljmp
push
pop
inc
arpl
dec
jne
or
adc
sub
sub
popf
xchg
in
dec
fcomp
push
jne
xlat
clc
ror
or
pop
out
out
mov
outsb
rolb
in
stos
dec
mov
insl
inc
xchg
daa
push
cwtl
fwait
jecxz
mov
jb
push
sbb
mov
mov
fstpt
jbe
jp
cmc
sbb
pop
dec
sti
add
mov
imul
in
pop
mov
stc
xor
ret
ja
add
cmp
popl
mov
push
push
loop
je
cwtl
cs
ja
xchg
test
not
xchg
faddl
mov
pushf
lock
rcll
push
push
fsubrl
fwait
or
inc
jmp
in
cltd
mov
scas
jae
or
jb
xor
repnz
fsts
cli
xor
inc
stc
shll
cmpb
cmpsl
or
jle
loope
lea
cs
sub
mov
xor
ja
pop
mov
inc
movsl
pop
sahf
mov
sbb
shrl
xor
in
mov
fldt
imul
or
jo
adc
adc
ds
xchg
ds
push
inc
dec
and
clc
pop
pop
cwtl
jl
dec
xchg
popa
iret
sbb
and
test
mov
pop
adc
or
fldl
jle
lahf
addr16
in
jg
ret
mov
push
mov
add
or
push
std
mov
or
fwait
fs
xlat
aas
data16
push
add
dec
mov
jle
inc
lret
jns
cwtl
into
inc
mov
fs
and
out
out
shll
adc
sub
add
pop
sarl
es
pop
jb
repnz
xor
dec
cmpsb
jne
xchg
popf
popf
bound
add
sub
mov
cmp
addr16
jne
lock
mov
jnp
mov
dec
jp
enter
xor
sub
push
das
ljmp
xor
enter
or
scas
and
adc
lret
addr16
jge
fucom
cld
jmp
aas
inc
jnp
and
loope
outsl
loop
cmp
stos
rcrb
mov
lea
in
sub
mov
push
gs
adc
hlt
mov
enter
cmp
cmp
call
push
aaa
mov
xchg
sub
stc
jnp
pop
pusha
xlat
cmpsb
add
push
pop
sbb
test
adc
or
cli
arpl
sub
cmp
cmp
inc
mov
and
adc
lds
lahf
xchg
xor
ss
or
jl
aaa
faddl
dec
lret
fdivs
jge
outsb
out
mov
in
gs
pop
jle
push
in
mov
and
mov
inc
into
push
pushf
fistpl
nop
lods
mov
jnp
add
test
adc
test
ss
test
xor
xor
sub
cmc
add
das
lds
and
mulb
outsb
cmpsl
dec
mov
push
inc
jae
test
sahf
xor
in
push
and
pop
dec
add
ja
lea
and
push
or
pop
call
or
cmp
sub
xor
cmp
pop
testl
inc
push
mull
sub
jo
jg
pop
imul
mov
mov
and
jl
jl
dec
or
sbb
clc
inc
push
sarb
cmpsb
push
cmp
mov
popf
jle
lea
out
leave
inc
adc
mov
test
pusha
jo
or
adc
jae
or
xchg
sbb
xchg
pop
push
xor
or
dec
pop
push
repnz
xor
adc
jbe
jb
cmp
popa
fisttps
jbe
lds
add
xorb
cwtl
lods
mov
and
mov
lahf
and
add
sub
scas
std
push
or
cmp
fsubrs
aas
testb
cmp
sbb
xor
xor
aam
or
scas
cld
shll
cmp
cs
sub
loope
dec
lret
pop
out
mov
jle
int3
pop
pop
mov
add
xchg
pop
std
push
pop
pop
in
add
mov
pop
ljmp
addr16
inc
outsb
cmp
jno
sti
popw
pop
jne
sbb
movsb
xor
mov
lret
testl
icebp
xchg
push
or
xchg
mov
loop
mov
rorl
jmp
add
pop
ss
push
hlt
pop
leave
xor
jecxz
jae
or
cld
mov
psrlq
leave
stos
pop
leave
mov
aam
and
ss
jmp
xor
repnz
xchg
lahf
lret
test
pop
jbe
idivl
insb
cmp
jnp
or
ret
pop
mov
lea
or
insl
jo
add
jp
aad
mov
sbb
ret
jecxz
sub
mov
pop
sahf
mov
imul
ret
dec
jnp
sbb
aas
sub
inc
stos
mov
inc
sub
pop
jo
dec
inc
sub
iret
mov
and
sub
outsb
mov
cmpsb
arpl
test
call
cmp
mov
jg
scas
dec
sbb
and
ret
lcall
jno
and
sbb
jmp
lahf
push
scas
insl
faddl
out
hlt
mov
pop
adc
mov
aas
mov
push
jmp
outsb
cmc
int3
sub
in
cmp
cmpsl
js
roll
fcompl
pop
into
loope
adc
loop
or
cs
mulb
lret
jae
test
lret
loope
xor
movsb
js
popf
addr16
xor
push
and
jnp
mov
pop
cs
testb
inc
mov
popa
mov
repz
xchg
es
mov
mov
add
dec
mov
stc
pop
xchg
sub
add
insl
xor
lret
into
sub
fldenv
fsubs
dec
pushf
pop
enter
jo
in
push
push
push
sub
pop
or
push
pop
or
lods
in
gs
cmp
ds
loope
dec
addr16
xlat
imul
cmp
xor
adc
mov
xor
and
cmp
pop
push
xlat
lret
pop
mov
stos
mov
sub
sbb
mov
xchg
xchg
call
pop
mov
or
mov
add
pushw
add
rorb
pop
loopne
stos
lods
push
rcll
xchg
rcrl
out
call
and
shlb
jne
pop
pop
mov
stos
and
xor
ret
pop
loopne
test
or
shrl
lea
cmpsb
and
inc
pop
xor
jnp
ja
fsubl
inc
loopne
pop
outsb
sarl
movsl
push
push
push
ja
jp
pop
jns
push
xchg
scas
push
movsl
mov
dec
sbb
inc
mov
sub
cmp
mov
out
jo
jae
dec
mov
repnz
in
adc
mov
xor
fldpi
inc
repz
stos
add
inc
dec
inc
in
cld
fsubrl
mov
or
or
push
xchg
xchg
adc
pop
call
je
pop
xorl
mov
lahf
jno
jle
mov
xor
cmp
sub
hlt
jl
sbb
jl
jp
addl
adc
lret
imul
fwait
and
cmp
dec
mov
push
adc
lcall
cmc
sub
mov
fwait
mov
out
movsl
fdivrs
jecxz
shrb
sub
mov
lds
xor
and
in
ret
pop
mov
push
jne
mov
lods
lock
mov
or
mov
push
xor
out
int
mov
fiaddl
push
mov
or
or
xchg
cld
cmp
std
push
and
mov
cmp
xor
int
jns
iret
mov
jp
mov
cmp
cwtl
mov
fs
js
std
lods
sbb
jne
dec
stos
pushf
imul
jge
cmp
mov
xor
cmc
mov
fs
into
push
std
cs
adc
mov
testb
jmp
int3
insb
mov
int3
fnstsw
test
fwait
cmp
xor
imul
nop
or
jo
out
aad
cmp
popa
sub
xlat
jo
daa
addl
cmc
pop
and
movsb
jle
push
stos
mov
or
xchg
cmp
jns
push
push
inc
mov
rclb
xchg
or
fsubrp
mov
sbb
or
pop
sub
fisubl
hlt
push
dec
out
cli
daa
pop
fcmovne
xchg
loope
push
fisubrl
pop
mov
adc
cltd
jb
push
fldt
test
cmp
addb
mov
adc
add
iret
es
ds
in
inc
imul
sub
addr16
xchg
fadd
jae
popf
movsl
hlt
mov
subl
add
lods
sbb
sbb
inc
cmp
popa
jns
mov
fcompl
loopne
cli
ficoml
aad
inc
jne
int3
daa
add
movsb
cld
cmc
dec
and
jl
rclb
orb
jae
cmp
mov
and
add
aaa
sti
mov
dec
sbb
shrb
lret
mov
mov
jbe
sahf
and
movsl
inc
pop
adc
or
int3
fs
mov
mov
jnp
push
mov
sbb
xchg
mov
inc
mov
popf
test
or
stc
mov
ret
xor
jno
testl
jns
mov
lods
jecxz
scas
int3
enter
sbb
xchg
fidivl
popa
out
add
pop
lcall
cmpsl
mov
cmp
xchg
xchg
mov
das
gs
sbb
push
adc
int3
aam
dec
in
mov
test
cmp
ret
cmp
cmp
inc
cmpsl
addr16
clc
loop
xor
push
and
bound
adc
lock
out
jl
dec
xlat
hlt
out
lds
nop
loopne
call
test
and
inc
mov
in
lods
jmp
shrl
mov
or
ficomps
push
shll
roll
pop
std
mov
daa
jb
and
lret
les
sub
jmp
jmp
ss
xor
repz
sbb
rcll
inc
ficompl
repz
mov
orl
int
mov
xor
jmp
mov
dec
mov
test
lods
or
pop
lock
jecxz
ljmp
mov
scas
mov
aas
pop
clc
movsb
int3
mov
call
mov
dec
imulb
loope
scas
fisttps
test
icebp
mov
xor
add
sub
jnp
int3
xorb
mov
cmc
and
mov
pushf
mov
fsubrs
pop
test
imul
add
fistps
arpl
shlb
movsl
test
dec
std
mov
ret
aaa
bsf
insb
fstl
mov
pop
fnstsw
pop
push
out
sahf
clc
mov
lock
xchg
fnstenv
xchg
int
test
mov
fucomp
movsl
lods
clc
xor
and
push
xchg
lea
xchg
push
icebp
push
rcll
fdivrl
push
jecxz
pop
mov
fldt
inc
or
sub
into
and
call
lret
pop
movsl
xchg
add
or
jl
fsubs
shr
jle
int3
shl
movl
and
callw
sbb
vcomiss
xor
loop
out
inc
lds
sti
lret
add
add
fsubrl
push
movsl
ja
adc
rorb
push
movsl
xchg
push
sbb
mov
enter
mov
lods
cld
jnp
jae
jge
cs
push
xor
mov
dec
sub
in
cmpsb
cmp
or
in
push
test
ret
mov
pop
in
js
jno
mov
mov
xchg
sbb
fildll
das
mov
sbb
cmpl
xor
inc
add
ja
fisttpl
jns
or
test
lret
fucom
xchg
fwait
aas
dec
pop
int3
cmp
push
or
cmp
inc
inc
push
xchg
fcom
cmp
inc
cmp
sahf
shll
mov
shrb
sbb
dec
cltd
je
xchg
mov
jge
ds
push
aam
scas
mov
int
or
nop
jle
jle
movsb
jo
mov
rorl
jo
dec
or
sub
leave
rclb
sahf
mov
mov
cmpsb
and
lret
dec
ret
push
sbb
sti
push
add
or
jecxz
cmp
xlat
bnd
mov
mov
xchg
or
popa
ja
popa
ss
repz
adc
pushf
inc
adc
and
jo
repnz
in
mov
adc
test
pop
sub
std
into
push
out
sbb
adc
or
mov
cmc
inc
push
xor
adc
jns
sbb
sub
mov
outsb
shl
sub
sub
out
mov
repz
repz
jno
je
jne
and
dec
fisubs
xchg
xchg
push
mov
inc
jle
or
stos
dec
cmp
xchg
movsb
lock
mov
xchg
cmp
and
fnsave
mov
clc
fildl
pop
and
insb
mov
pop
call
aad
adc
lcall
call
outsl
idivb
fcomps
ret
stc
mov
mov
pop
mov
mov
mov
xchg
loop
rcl
lret
out
fmull
mov
xchg
mov
sti
gs
inc
xchg
and
sbbl
push
add
mov
hlt
sub
cs
xor
inc
sub
iret
and
mov
data16
cmp
negb
imul
and
mov
sarb
or
jle
jne
mov
stc
loope
out
stos
sbb
ror
cmp
jb
cwtl
sbb
mov
push
push
jbe
cmpsb
data16
jae
sub
hlt
int3
scas
std
jnp
lods
mov
dec
jg
mov
nop
cli
xchg
fildll
lods
leave
add
lods
fisttpll
jns
into
sub
imul
jno
cmpsb
xor
mov
rol
or
or
push
addl
jl
sbb
xchg
out
mov
sub
into
pop
add
dec
je
lahf
test
test
jg
jnp
and
and
cmpsl
cmpsb
out
jne
idivl
inc
pop
jle
rcll
mov
and
mov
clc
idivb
out
adc
push
push
pop
leave
jmp
lret
fcmovnbe
mov
adc
out
or
mov
jne
or
testb
fdivl
dec
sub
rcll
aad
gs
mov
test
in
inc
lds
leave
mov
je
xor
mov
shll
vpshuflw
idiv
stos
or
pop
addr16
xchg
jnp
jmp
jl
in
popf
filds
rclb
repnz
dec
pop
ds
dec
pop
push
cmc
hlt
in
or
and
das
push
sahf
cmpsb
jo
push
roll
mov
stos
xor
push
aam
add
pop
and
mov
mov
jg
int3
cmp
mov
pop
inc
xchg
insl
and
stc
and
testb
fsubl
mov
pop
push
inc
add
lea
enter
and
mov
dec
arpl
aas
mov
subb
mov
dec
push
or
lcall
aam
xchg
std
sbb
fisttpl
xlat
pop
mov
test
insb
mov
fsubrs
mov
inc
inc
push
loop
mov
sbbb
push
xor
or
sub
movsb
movl
das
aas
cmp
jae
add
pop
cmp
mov
stos
or
sub
mov
mov
mov
jnp
lock
xchg
cmp
es
cs
push
into
fucomip
add
adc
mov
add
pop
xchg
in
jmp
add
add
push
or
mov
lahf
lcall
or
push
test
ret
dec
mov
push
addr16
pusha
cmpl
rorl
ja
mov
or
sbb
je
xor
sub
add
fdivs
das
outsb
rcrb
dec
jo
imul
sbb
cmpsb
int
ja
cld
imul
adc
imul
inc
hlt
push
sbb
loopne
mov
inc
jmp
cli
and
mov
add
dec
push
jle
dec
sbb
dec
adc
dec
sub
jge
xor
jge
push
aaa
adc
pop
mov
nop
or
dec
lods
and
pop
xor
sahf
sub
pop
and
mov
pop
aam
pop
xlat
ficompl
dec
xchg
lea
sar
inc
mov
enter
pusha
jl
out
inc
inc
sub
mov
popf
sub
sbb
icebp
jno
add
sti
test
decb
jbe
and
push
push
fisubrs
mov
cmpsb
add
push
int3
loop
adc
js
sarl
popf
popa
cmpsl
sub
mov
in
mov
in
mov
cmp
ds
fisttpll
into
lret
daa
popa
cmpsl
divb
xlat
insb
push
add
sub
shl
xor
and
pop
xchg
shr
cmpsl
and
pushf
add
aaa
add
dec
xlat
mov
add
adc
dec
dec
jl
cmp
jle
aaa
decl
mov
cmp
outsb
jnp
jecxz
js
faddl
scas
bound
cmpsl
in
sub
push
dec
xorb
fistpll
cli
insl
xor
jnp
sahf
pop
es
mov
pop
xchg
andb
popa
mov
sahf
jb
cmc
sbb
insb
push
sbb
dec
xchg
repnz
push
test
inc
sti
xchg
fisubs
xor
push
xchg
mov
cld
lock
jne
int3
leave
comiss
inc
out
shl
ljmp
push
xchg
push
push
adc
out
xchg
jo
arpl
scas
lds
xor
outsb
cld
cmp
lea
or
lea
lea
outsl
arpl
bound
xchg
xor
divl
adc
inc
add
dec
shll
movsl
movsb
in
scas
xchg
fimuls
lret
pop
ja
scas
testl
out
into
aas
movsb
popf
xchg
popf
aad
std
into
cld
imul
stc
call
leavew
pop
mov
adc
popf
mov
pop
cmpb
int
sub
repz
xchg
or
xor
test
push
outsl
movsb
push
mov
inc
push
jne
mov
mov
add
loope
out
and
jbe
mov
jno
int
xorl
out
add
div
jo
insl
clc
lds
sbb
push
pusha
ficomps
and
or
mov
push
les
enter
cmp
adc
jmp
jecxz
mov
sbb
push
icebp
mov
jg
sbb
mov
mov
subb
cltd
cld
ret
xorl
pushf
inc
lds
inc
out
push
sarl
mov
push
dec
adc
in
in
ds
nopl
and
jge
and
mov
pop
rcrl
ret
les
fisubrl
inc
pushf
or
sarl
sbb
push
fisubrl
push
rcll
sbb
movsb
adc
and
test
out
mov
and
xchg
sbbb
push
and
push
or
xor
fcoms
je
xlat
enter
jmp
dec
or
mov
push
aad
js
xchg
adc
shl
adc
push
loopne
jl
out
subl
push
pop
or
jns
inc
jo
and
xchg
mov
add
outsl
sbb
pop
pop
out
push
dec
lret
jns
adcb
jmp
inc
movsl
or
aaa
repnz
cmpsb
imul
into
inc
cmc
mov
sarl
icebp
adc
shll
sub
mov
push
in
fwait
lods
or
add
mov
jne
inc
mov
cmp
out
mov
jecxz
out
push
dec
outsl
movsb
mov
insb
scas
mov
int3
stc
push
cs
mov
mov
arpl
es
in
cmpsb
stos
cld
ja
sub
pushf
aam
mov
cmp
xchg
jge
sub
and
mov
pop
mov
xor
jle
sbbb
mov
inc
ret
sbb
xchg
pushl
push
mov
mov
jno
stos
and
mov
pop
popa
leave
insl
test
mov
push
inc
int3
aad
push
xchg
hlt
daa
punpckldq
xor
sub
add
cmc
push
insb
cmc
or
inc
sub
mov
cld
sbb
adc
loopne
dec
push
scas
jle
lock
jne
mov
dec
pushf
jno
sub
retw
sbb
mov
push
arpl
pop
and
sbb
sbb
ja
adc
nop
cli
pop
loopne
lahf
mov
inc
jnp
and
ljmp
fidivrs
insl
aad
and
sub
inc
xor
aam
xchg
push
aaa
jnp
dec
cmc
scas
lcall
sarl
lahf
gs
push
fmull
lahf
lcall
or
mov
leave
rolb
fiaddl
pop
jg
and
lret
adc
ja
pop
mov
or
subl
cmp
adc
cld
jnp
scas
cmpsb
pop
ja
ficompl
sub
mov
fimull
pop
inc
imul
and
jbe
inc
jne
not
xor
sahf
fstps
clc
dec
data16
dec
jo
mov
cmp
jae
in
aas
mov
ss
jns
add
adc
and
add
push
lods
xorb
jne
pusha
inc
xor
xchg
lods
adc
int3
arpl
dec
mov
xchg
mov
jnp
mov
jno
mov
ret
aam
sub
mov
or
bound
in
jno
lods
std
sbb
xor
icebp
out
movsb
stos
jne
pop
cmpsl
push
scas
cmp
cmpsl
or
and
sub
insl
das
jno
ds
push
jne
and
pushf
std
test
test
scas
clc
fiadds
xor
clc
sti
pop
fsubrs
xor
pop
lods
cltd
push
sbb
lea
testl
cmp
adc
scas
jbe
pusha
mov
hlt
dec
sub
inc
jl
out
fwait
cmp
stc
jmpw
inc
lcall
movsb
cs
sub
repz
int3
cmpsl
inc
movsl
pusha
mov
fnsaves
frstor
mov
push
cwtl
loope
fistpll
imul
mov
and
fs
jl
cmc
jg
fdivrs
jo
loopne
xchg
ret
fstps
rcrb
mov
mov
mov
cmp
movsb
arpl
sub
inc
inc
sbb
outsl
cmp
push
les
mov
repnz
sbb
jecxz
int
jle
jns
jg
push
pop
aas
jnp
in
popf
push
xor
and
or
mov
mov
adc
dec
out
pop
sti
jbe
mov
fidivl
mov
jo
jecxz
rol
mov
fldcw
sub
sbb
stc
or
popf
add
lods
sub
add
fisubrs
and
xchg
jl
cmp
push
sti
arpl
loop
mov
jne
sti
sub
fdivrs
mov
mov
push
push
mov
out
pop
out
jo
fsubrs
mov
mov
lret
iret
rorl
ja
mov
xchg
pop
jl
fdivs
addl
addr16
repz
jo
fidivl
shll
imul
lret
gs
mov
inc
bound
inc
shrb
jo
mov
icebp
loop
cmpsb
insl
cmp
outsb
dec
in
clc
stc
daa
jb
sbb
subl
enter
sbb
jle
fsts
int
sbb
aas
fstpl
cmp
pop
cmpsl
imul
push
push
aam
and
sti
adc
push
lods
pop
xchg
xchg
xchg
test
pop
jecxz
out
dec
andb
mov
xor
daa
rolb
test
hlt
mov
in
mov
and
inc
or
sti
push
enter
outsl
dec
int
sbbb
enter
sbb
int
cli
roll
jbe
jnp
push
pop
gs
aas
sub
inc
mov
decl
mov
push
test
cmp
insl
test
sbb
aaa
jecxz
imul
daa
mov
xchg
mov
rcrb
push
dec
sbb
or
aaa
aam
ss
add
inc
je
testl
pop
hlt
mov
push
push
push
sbb
imul
sub
push
idivl
call
xchg
lcall
pop
stc
cmpsl
or
lahf
fs
xor
out
xchg
xchg
pop
add
movb
sbb
in
cwtl
fcmovnb
pop
gs
xlat
es
and
cs
push
push
xchg
pop
fmuls
jo
lret
or
jbe
sbb
adc
mov
cmp
or
orl
xchg
dec
out
aaa
bound
jb
cwtl
sbb
scas
loope
cmp
js
inc
popa
xchg
mov
xchg
mov
mov
xor
mov
fcomi
push
xor
or
hlt
ja
cs
loop
outsl
sbb
or
sub
mov
dec
cs
repz
push
push
push
out
adc
adc
dec
mov
mov
sbb
cmp
movsb
pop
cmp
jbe
icebp
pop
xchg
cld
pop
jp
lods
inc
out
sti
and
push
cmp
mov
in
xor
es
call
outsb
test
jb
out
xchg
lret
jbe
mov
lock
mov
push
movsb
mov
ss
add
dec
subl
nop
dec
fnstsw
aam
cmc
adc
sub
mov
js
sub
mov
push
stos
jns
dec
loopne
test
cli
shlb
xor
jo
ficoms
rcrl
xchg
jle
rcrb
cltd
jecxz
jne
flds
lea
pop
cmp
jo
mov
xchg
sub
lock
arpl
mov
test
outsl
cld
clc
addr16
out
out
movsb
dec
lahf
mov
imul
cltd
sub
test
mov
int
sahf
inc
xchg
movsb
scas
jge
sub
fadd
mov
test
ja
lcall
fwait
adc
pushl
leave
mov
jb
xchg
inc
ds
fstps
xor
lret
imul
dec
std
das
mov
orl
xor
push
mov
andb
inc
loop
mov
xchg
inc
out
dec
push
cld
jecxz
xchg
mov
fimull
add
adc
adcb
stos
rcrl
gs
add
enter
lret
xor
mov
in
pop
in
jnp
insl
shlb
pop
push
andb
adc
sub
adc
cmp
je
cmp
sub
aad
cltd
popa
inc
push
addr16
es
in
sub
push
stc
out
clc
aas
xchg
jecxz
and
mov
inc
stos
addr16
enter
mov
popf
outsl
mov
push
andb
cmp
cwtl
push
mov
daa
insl
sbb
or
test
fsts
fstl
dec
sub
ret
xchg
add
jb,pn
jne
xor
mov
inc
insb
mov
mov
cmp
int3
daa
or
add
cld
lods
sub
addr16
add
ja
xor
lock
push
rcll
xchg
adc
loope
xor
outsb
jl
imul
cmc
ret
mov
and
lret
fcomps
adc
mov
jl
ds
mov
inc
sub
fwait
pop
sbb
xchg
ja
sub
in
mov
cmp
jle
add
push
dec
pop
xlat
orl
cltd
cmp
sub
mov
inc
pop
das
jae
cwtl
xchg
xor
mov
and
or
cmp
addl
lcall
test
dec
lret
jbe
mov
cmp
fdivl
in
nop
sub
lcall
movl
insb
imul
jg
mov
imul
push
dec
jle
push
movsb
mov
mov
jg
sbb
adc
gs
mov
nop
call
sbb
loope
rep
cmp
xchg
xchg
xchg
cmp
xorb
mov
scas
push
pop
icebp
pop
stos
inc
data16
je
sub
fsubs
pusha
pop
jo
dec
mov
pop
fadd
xchg
cmp
or
and
sub
mov
fidivs
xchg
arpl
mov
push
xchg
cmpsl
pop
in
xlat
dec
ds
add
xchg
push
push
inc
dec
jmp
ja
xchg
sti
rclb
enter
xchg
aad
call
add
in
mov
sbb
call
sub
lcall
xchg
push
ja
and
scas
lods
sub
mov
jne
and
bound
jmp
or
xchg
pop
fwait
loopne
cwtl
stc
jbe
xchg
negb
rcll
jmp
test
imul
cmp
nop
nop
je
ss
subb
daa
xchg
cmc
jmp
inc
xchg
bound
imul
lret
xchg
mov
cmp
and
sub
inc
or
xchg
das
insl
mov
adcb
addr16
nop
jmp
pusha
xor
sub
fstsw
jne
insb
scas
iret
jl
or
cs
adc
fsubrp
sub
adc
stc
cmpl
jle
in
pop
scas
scas
push
dec
aas
adc
push
mov
dec
pop
addr16
jae
xchg
mov
add
decl
cmp
ljmp
test
pop
out
mov
cmpsl
in
cs
mov
addr16
dec
inc
fs
and
aam
adc
sbb
mov
pushl
fildll
jle
fistpll
mov
mov
je
xchg
adc
subb
mov
cltd
push
ret
xchg
fcomp
movsb
call
arpl
cs
insb
xchg
loop
push
xor
rcr
aam
mov
xchg
pop
xor
je
in
lret
or
mov
cmp
pusha
adc
mov
dec
sbb
pop
add
pop
sub
sub
inc
jmp
sub
mov
add
add
cld
jl
or
lds
add
clc
mov
adc
mov
fs
xlat
push
sub
jne
scas
les
mov
leave
cmp
mov
icebp
mov
lods
jl
xchg
push
ja
cmpl
sar
mov
add
jge
mov
in
and
mov
cmp
inc
int
out
aam
xchg
das
test
aad
sti
add
dec
addr16
mov
mov
push
daa
sub
inc
gs
push
sbb
jnp
push
jge
cmpsb
jbe
mov
cmc
nop
mov
and
adc
lret
mov
pop
fiaddl
sub
adc
xor
fs
and
repz
inc
les
jp
mov
cmpl
cmp
dec
push
icebp
mov
outsb
cs
or
movsb
pop
xor
dec
jp
fiadds
sbb
inc
sub
jg
jnp
gs
mov
cmpsl
sub
cmp
adc
scas
lods
aam
push
jns
cs
fidivs
sbb
icebp
dec
xchg
cmp
fsubl
jne
inc
mov
in
outsb
out
mov
jmp
sub
and
sbb
and
dec
arpl
dec
and
notb
lahf
pushf
dec
or
iret
movsl
daa
pop
adc
out
enter
lcall
aad
jg
sub
out
mov
les
mov
pushf
into
mov
das
ja
leave
mov
int
push
lahf
sti
adc
or
fs
repnz
repz
jns
mov
sub
shl
test
sub
aas
sti
push
mov
mov
shrb
outsb
sub
and
pop
mov
cmpb
push
pop
xor
roll
bound
sbb
inc
push
cmp
pop
or
orb
mov
in
lcall
or
imul
mov
or
mov
arpl
dec
andl
lret
add
xchg
push
inc
mov
je
xchg
xchg
jp
jae
pop
push
fnsave
scas
sahf
cmpl
call
lods
repnz
cmp
into
lcall
sub
in
mov
fadd
movsl
jl
aas
bound
adc
cltd
xchg
and
popf
and
rsm
psrlq
popa
ds
xchg
pop
int
andb
mov
mov
frndint
into
int
test
out
jae
add
push
das
sub
lret
sbb
dec
lods
sbb
in
inc
testl
movsl
insl
adc
out
sbb
mov
or
pop
pop
dec
dec
dec
add
inc
les
ja
dec
fsubr
in
pop
out
add
mov
dec
int
or
jno
jmp
pop
xchg
fbld
fcomp
loop
imul
xchg
push
inc
mov
mov
loope
cmp
movsl
mov
scas
sbbl
sbb
rcll
ss
daa
xchg
mov
xor
push
in
sub
push
mov
push
outsb
push
ret
mov
jne
push
cmpsb
rcll
xor
addr16
gs
mov
leave
xchg
mov
imul
pop
or
pop
fwait
mov
popa
jl
lock
insb
inc
outsb
mov
xchg
jecxz
jecxz
inc
sub
xor
push
sub
xor
fbstp
ja
mov
bound
mov
pop
mov
iret
jp
mov
in
mov
sub
sbbb
push
fistpll
mov
sub
loope
cmpl
ret
cld
loope
xor
dec
ss
mov
mov
mov
mov
xor
out
sahf
push
jecxz
ss
dec
inc
das
lret
jmp
push
jae
hlt
loope
cmp
sti
insl
enter
scas
loop
cmpsl
les
xor
xchg
imul
xchg
movsl
mov
enter
push
ljmp
xor
shlb
inc
cmpsl
sub
rclb
orb
sub
iret
jge
dec
incb
gs
test
xlat
in
dec
pop
mov
pushl
hlt
jo
repnz
pop
push
call
mov
sub
adc
sti
mov
push
add
daa
test
jbe
xchg
mov
or
mov
ret
mov
movsb
dec
mov
scas
dec
jle
adc
sarl
mov
add
jae
lret
stc
fdivr
iret
daa
xor
jl
xchg
xchg
push
repnz
lock
sub
inc
mov
ljmp
in
mov
lret
shlb
cmpb
stc
aam
mov
lret
insl
arpl
out
incb
mov
fisttpl
test
mov
and
fisubrs
jge
movsb
inc
inc
out
dec
cmp
jg
xchg
inc
cmpsl
lret
jp
sahf
sbb
movsb
ss
ljmp
out
push
test
xor
lcall
add
pop
sub
sti
adc
hlt
inc
in
sbb
scas
jb
ret
mov
sahf
aaa
mov
sbb
inc
adc
dec
ljmp
dec
jmp
inc
pop
adc
dec
sahf
rcll
jmp
push
imul
mov
sti
dec
aam
call
mov
dec
lods
xlat
or
jae
lahf
jnp
mov
bound
in
popf
sub
fdivrl
in
rcll
mov
xlat
movsl
jmp
inc
ss
xchg
push
aaa
jp
push
fsubrl
stc
out
js
fbstp
int
shll
xchg
push
cmp
jb
fnstenv
xchg
mov
cmp
dec
adc
mov
outsb
imul
sbb
push
les
fwait
sub
mov
mov
inc
or
inc
lds
and
jmp
add
lahf
or
mov
loopne
add
jne
and
mov
mov
dec
jge
adc
lahf
jns
mov
out
in
add
mov
jne
lea
in
repnz
xchg
shl
mov
out
mov
mov
dec
repz
add
mov
lea
lahf
or
mov
mov
jle
jp
sbb
sbb
std
sbb
aas
and
mov
lcall
push
es
loopne
pop
cmp
fnstsw
inc
dec
jmp
push
cmpsb
lret
das
or
enter
pop
sbb
push
stos
pop
mov
sbb
cmp
out
add
cmp
inc
mov
mov
mov
and
cld
lods
ds
movsb
lock
xchg
jb
insl
jns
xchg
add
ficoml
mov
ret
imul
fcompl
add
aas
push
shl
sahf
cmp
and
mov
xchg
mov
mov
mov
inc
or
scas
lcall
xor
pop
xchg
sub
ss
cld
repz
bound
fmull
pop
pop
add
xor
outsl
pop
pop
les
lahf
cmp
pushf
out
scas
cmp
outsl
xor
popf
in
movb
jmp
leave
arpl
xor
mov
fldcw
dec
lods
jmp
inc
dec
pop
sti
sbb
stos
jae
cmp
push
pop
pop
pop
jnp
mov
mov
sbb
push
aaa
fistl
add
outsl
das
sub
ljmp
pop
and
push
cwtl
push
add
test
int3
pop
add
adc
out
xor
std
fsts
pop
scas
test
adc
sbb
ret
movsl
andl
sbb
sbb
fwait
push
xchg
nop
loop
xor
fbstp
sahf
std
sbb
lret
xchg
sbb
pushf
ja
xlat
pop
les
mov
inc
push
js
lcall
jg
mov
pop
subl
nop
psubb
fwait
sti
lods
arpl
stos
or
push
adc
mov
xlat
xchg
push
aam
fiaddl
fldl
ja
cs
mov
xor
and
push
lods
or
cmp
or
push
xor
popa
inc
push
mov
mov
and
pop
ds
mov
int3
lret
js
insb
sbb
sahf
mov
fsts
push
sahf
rolb
sbb
cltd
loope
xor
pop
stc
cmp
xor
dec
or
stos
jne
jae
xlat
jae
jbe
fsubrs
xchg
cmpsb
sahf
sbb
pop
je
cmp
jbe
es
cwtl
mov
sub
sbb
lahf
sub
mov
push
xor
jp
pushf
outsl
lret
dec
jl
and
jae
push
repz
fstps
jbe
or
icebp
movsl
pop
mov
jmp
lock
sahf
nop
cmpsl
sub
and
addr16
in
fidivl
add
rorb
int3
xchg
mov
daa
jne
andb
sbb
orl
add
add
jo
jp
push
mov
in
lahf
pop
sbb
xchg
fs
mov
ljmp
data16
adc
faddp
or
mov
lds
inc
add
jo
xchg
lock
fiaddl
and
in
cmp
jo
fbstp
inc
in
sub
sub
movsl
popa
sbb
mov
fsubs
imul
mov
inc
leave
testl
jnp
fldl
jg
mov
xchg
lock
ds
and
movsb
cmp
mov
out
sbb
insb
sbb
sub
mov
or
nop
jb
je
pop
and
mov
pop
in
movsb
es
fs
fsubl
jbe
cmp
call
rcll
cmpsb
mov
inc
mov
pop
and
push
out
sub
jb
cmpsl
jno
cli
imul
push
pop
mulb
mul
mov
or
or
xchg
imul
insl
or
in
cmp
lock
dec
and
jp
ss
cwtl
add
movsb
and
incl
mov
icebp
xchg
adc
push
jb
mov
mov
leave
add
dec
cmpsl
dec
add
push
jns
pop
sbb
shrb
movsb
repz
mov
scas
imul
jmp
andnps
push
notb
icebp
xor
je
in
loopne
imul
mov
xchg
add
adc
cmp
add
xchg
xchg
cmpsb
ds
push
rclb
push
xor
mov
andb
cmpl
fiadds
mov
nop
stos
inc
das
cltd
jns
in
cmp
sahf
mov
cmp
inc
mov
lcall
or
inc
sbb
xchg
ljmp
sub
xchg
test
push
mov
push
movsl
ljmp
jbe
adc
cmc
or
sub
xor
lds
fucomi
in
adc
sahf
jno
lret
jnp
shrb
pop
jnp
pusha
pop
push
mov
jns
inc
mov
cmpsb
pop
not
loope
imul
neg
xchg
jbe
cmp
movsb
les
inc
fsubl
in
mov
pop
xchg
mov
aas
outsb
aad
out
sub
ss
inc
pop
ror
daa
test
aad
mov
repnz
inc
mov
pop
or
out
cmpsb
cmpsb
cmp
add
test
fwait
xor
nop
sub
xlat
nop
or
int
xor
insl
inc
sar
jno
xchg
icebp
lds
insl
test
xchg
cwtl
push
mov
add
add
adc
xchg
mov
adcl
mov
insl
add
or
sbb
dec
sbb
rolb
fbstp
adc
pop
popa
push
add
lahf
test
sahf
test
jge
icebp
into
jne
aad
sub
int
push
fisubrs
xchg
xor
jmp
loope
lret
pop
jl
mov
mov
shrl
cmp
inc
inc
std
arpl
or
cmp
mov
fisubs
pop
loop
scas
into
cmp
pop
xlat
lods
mov
xchg
push
sbb
sahf
jge
mov
xor
inc
push
clc
out
push
cwtl
jne
xchg
xchg
lods
repz
and
push
out
bound
andb
int
push
out
jge
cltd
movl
imul
mov
leave
ret
cli
lret
adc
sub
in
mov
inc
addr16
sti
xlat
and
lcall
cs
cli
pop
add
sub
mov
adc
fsub
sub
mov
dec
mov
push
or
inc
cmpsb
test
mov
mov
and
loope
sub
adc
inc
into
xchg
xchg
call
sahf
stos
shl
ljmp
loopne
sti
mov
sbb
dec
or
movsl
hlt
xchg
data16
iret
fistpll
fnstenv
sbb
adc
mov
or
xchg
stos
je
fists
out
cmp
stos
inc
mov
jb
jg
movsl
push
clc
pop
sub
insl
int3
dec
hlt
inc
and
xchg
add
push
mov
xchg
les
mov
pop
int
xchg
lds
adc
xchg
mov
xorb
fbld
rorb
iret
lods
xchg
cwtl
aaa
fdivrs
pop
mov
sub
push
add
dec
aaa
fcmovnbe
inc
jmp
je
mov
push
les
or
aaa
push
aam
mov
pushf
add
lahf
sbb
lods
pop
pop
ret
push
cmp
cli
ret
cmp
cmp
inc
mov
inc
test
push
in
fwait
push
sarl
hlt
inc
push
int3
popa
aam
and
outsl
out
xor
fcmovu
push
aam
jge
fildl
addr16
jne
movsl
add
loop
ja
dec
shrb
aas
into
xor
insl
or
mov
sub
movsb
or
or
xchg
jnp
sbb
jns
xor
adc
mov
push
jl
cmp
jmp
push
inc
sub
and
pop
out
setnp
testl
jo
inc
jp
xchg
mov
xchg
out
out
lock
inc
mov
adc
fs
xchg
inc
movb
cmpxchg
ljmp
pop
cmp
mov
dec
mov
xlat
imul
adc
adc
lret
loop
cs
cmp
loope
jp
mov
cli
xchg
cld
movl
mov
and
insb
xchg
int3
mov
xor
inc
cmpb
mov
jae
sbb
adc
mov
mov
cmp
xchg
adc
jge
loope
stos
hlt
and
xor
jecxz
mov
sarl
push
xor
jp
aas
mov
jg
in
mov
std
rolb
cmp
jecxz
iret
mov
out
inc
mov
dec
xchg
jge
pop
cmp
dec
nop
or
daa
test
add
mov
jo
mov
dec
sub
sahf
or
adc
fwait
mov
mov
cwtl
xor
mov
sub
mov
repnz
cmp
inc
leave
or
cmc
shlb
jge
push
or
pop
shlb
push
mov
leave
std
ja
jne
clc
and
adc
or
or
cmc
mov
lahf
icebp
or
push
add
cld
xchg
shrb
inc
and
cmp
cmpsb
xor
cmp
add
jg
cmp
fistpll
ss
les
ja
dec
pop
jg
lea
adc
shrl
repnz
aam
insb
pop
pop
shrl
mov
mov
add
add
dec
enter
add
daa
insb
xchg
loope
orl
shll
push
outsb
in
ffree
int3
in
mov
push
jns
iret
lds
fnsave
repnz
fstpt
jbe
jno
lret
push
sub
mov
push
sbb
sti
mov
decl
popa
push
push
or
xlat
ret
adc
dec
ja
ficoml
xor
mov
out
scas
mov
inc
repnz
xchg
xchg
mov
xchg
jge
lods
and
inc
cmp
gs
mov
decb
push
rcr
dec
sti
je
mov
sbb
jb,pn
fcoms
repz
arpl
xor
mov
lds
call
xchg
lea
daa
in
popa
arpl
push
adc
sub
add
inc
lea
mov
int3
aas
jno
sbb
sbb
xchg
xor
sub
sbb
xchg
inc
out
mov
sub
gs
rcl
dec
arpl
fadd
adc
cmpsb
mov
sti
mov
jecxz
sub
xchg
mov
inc
insb
or
xchg
push
cwtl
xor
and
sub
mov
cmc
subb
pusha
push
int3
adc
mov
lea
jae
dec
sbb
mov
dec
std
loope
stos
movsl
fldcw
jecxz
inc
inc
push
mov
sbbl
in
add
or
nop
popa
out
lret
rorb
in
ret
pop
rolb
jnp
dec
and
loopne
xchg
movsl
mov
inc
imul
jbe
lods
ret
push
imul
jne
pushf
push
pop
jp
in
lret
fists
and
inc
add
leave
mov
push
mov
fdivrs
add
mov
xor
and
mov
mov
xchg
lahf
je
clc
add
int3
xor
repnz
mov
sbb
idivb
mov
xchg
sahf
ss
das
imul
adc
push
inc
aas
lods
pop
cmpsb
xchg
xor
cmp
add
adc
xchg
mov
lahf
pop
mov
repnz
jmp
faddl
cmp
xchg
insl
mov
mov
inc
pushf
push
ljmp
mov
addr16
mov
ljmp
lods
movb
inc
aaa
ret
andl
push
lcall
mov
jle
and
add
les
popf
dec
shrl
lcall
outsl
add
or
lock
pop
and
xchg
add
pop
notb
add
scas
scas
je
push
jno
cmp
int
mov
lock
rolb
insl
fstpt
jle
gs
lcall
mov
sub
push
fucomp
inc
cli
xor
ja
add
in
ds
cmpsl
jbe
pop
xor
inc
push
push
test
mov
inc
cmpsb
sub
add
add
out
cmp
xor
inc
test
inc
and
mov
mov
sahf
sbb
pop
dec
sbb
xchg
dec
bound
or
rclb
xchg
push
inc
dec
mov
or
xchg
shlb
cmp
and
or
jmp
test
out
fwait
pop
fldt
or
or
test
sbb
and
ficomps
sbb
xor
xchg
mov
xchg
cmp
sbb
jne
mov
cmp
sub
inc
cld
mov
and
and
and
imul
cmp
emms
out
in
pop
clc
hlt
movsl
mov
int
call
ret
jb
inc
jmp
push
test
xchg
xchg
inc
in
mov
add
or
fstl
and
jp
movsl
bound
je
fstpt
push
out
lret
push
sbb
in
mov
cmpsl
xchg
fdivrs
fstps
dec
sub
push
test
ror
adc
push
adc
mov
idivb
jg
ljmp
aad
mov
popa
dec
push
adc
fwait
lahf
add
push
dec
xorl
add
pushf
mov
scas
mov
or
in
xor
jl
call
sub
jecxz
pusha
inc
pop
sarl
cltd
stc
jg
cli
cmpsb
lahf
lods
test
in
xor
mov
push
xchg
cmp
jo
push
dec
arpl
xchg
adc
adc
or
fisubl
in
in
pushf
or
mov
or
or
jae
sub
pop
test
push
pop
insl
out
imul
push
mov
or
scas
xor
push
push
cwtl
repnz
pushf
pushf
je
fsubs
xchg
sbb
out
cmc
addl
mov
jns
fldl
dec
sbb
bound
push
mov
and
adc
jp
lods
push
dec
inc
shrl
or
and
in
dec
sbb
stos
nop
fsub
pop
loop
lret
outsl
movsl
mov
mov
roll
lock
and
shl
jbe
or
scas
lret
mov
push
mov
jp
mov
cmp
jmp
mov
inc
clc
int3
in
and
cltd
dec
imul
pop
adc
adc
das
cmp
pop
jb
add
push
and
jnp
daa
add
nop
sbb
push
mov
xorb
aas
jae
or
cmp
xor
mov
push
enter
add
sbb
sub
std
mov
loop
es
lods
cmp
mov
push
pop
pop
dec
sbb
jge
lret
sti
in
push
dec
pop
push
or
xchg
in
arpl
les
nop
popa
add
jns
lods
and
dec
jg
cs
orb
cmp
sarb
imul
sti
pop
cmpsl
push
mov
js
dec
int3
or
movsl
cmp
negl
and
loopne
mov
fcompl
cmpsl
scas
ss
mov
fmuls
pop
lods
lock
mov
cmp
stc
fisttpl
or
xor
cmp
add
push
sub
hlt
xchg
xchg
or
dec
sub
mov
inc
jg
jecxz
cmpb
add
inc
je
lods
cltd
pop
add
adc
push
arpl
sub
lret
pop
push
cld
ljmp
dec
popf
jmp
pusha
mov
cmp
bound
fisubl
stc
adc
call
pop
bnd
fnstsw
pushf
cmp
and
pop
iret
adc
xchg
mov
sbb
jnp
mov
mov
fnstsw
scas
repnz
mov
in
pop
int
in
je
shrb
rcl
stc
sbb
loope
sbb
cmp
push
jo
subl
xor
sub
mov
mov
or
push
add
adc
int
shl
inc
and
in
xor
icebp
clc
mov
adc
cltd
cmp
repz
lcall
or
mov
fisubrl
enter
rolb
insb
in
daa
or
jbe
fldl
mov
or
pop
inc
lret
push
out
sahf
adc
popa
mov
inc
xchg
adc
sub
cmp
js
xor
and
push
divb
fwait
pusha
movsl
mov
mov
cmp
mov
inc
mov
icebp
in
movl
ss
aas
dec
fidivrl
in
add
sbb
shlb
push
mov
jg
ss
and
movsl
pusha
or
rorl
inc
out
push
lcall
push
mov
outsb
pushl
sbb
mov
loope
mov
mov
sbb
negl
pop
test
outsl
addr16
sub
shll
xchg
xchg
insl
xchg
or
imul
loope
or
sbb
cs
scas
sub
jne
jle
fcoms
mov
cmc
imul
jae
mov
call
jbe
inc
cmp
add
scas
popa
jo
xabort
jecxz
je
jle
lret
das
outsb
adc
or
imul
fwait
push
add
rcrl
add
lods
or
cmc
pop
xchg
sub
out
inc
mov
out
shl
sbb
fldt
aad
inc
pslld
pop
xor
add
dec
outsl
xchg
push
aam
xchg
fisubrs
dec
xor
aas
insb
push
imull
xchg
out
xchg
lock
out
or
aas
pop
add
cmc
adc
xor
jge
and
sub
adc
push
fcomp
insb
sbb
add
pop
jmp
or
das
xor
in
xchg
loope
cmp
pop
xchg
test
mov
mov
add
pop
sub
fdivl
je
lods
and
dec
inc
or
sub
inc
mov
mov
call
sbb
mov
sbb
mov
int3
les
stc
mov
xchg
rcll
shl
xor
mov
popf
out
imul
sbbl
jb
cli
pop
sub
mov
push
es
jge
pop
popf
fnstsw
test
sbb
jns
lea
add
mov
add
or
ret
mov
test
in
pop
nop
add
ds
mov
scas
sbb
cmp
push
into
pop
xchg
out
fstpt
das
ljmp
mov
outsb
mov
gs
xor
loop
rorl
jbe
fwait
scas
adc
cmovle
das
jmp
xchg
nop
sub
and
lods
jns
dec
pop
or
pop
add
xchg
adc
int3
add
cmp
pop
dec
mov
pushf
dec
and
inc
das
xor
cld
push
pop
es
sbb
mov
arpl
and
popf
lret
in
mov
add
and
add
xor
arpl
in
add
fs
out
push
ret
mov
jb
lret
ljmp
std
push
rcrl
inc
scas
insl
movsl
lahf
add
pop
repz
jae
out
test
cmpsb
jb
movsl
jp
rolb
pop
imul
jecxz
fmul
enter
xchg
out
cmpsb
sub
or
lock
or
xchg
sti
jno
int3
cmpsl
iret
dec
ss
mov
sbb
mov
into
add
in
dec
mov
rcrl
sbb
mov
jns
call
xor
hlt
daa
cwtl
int
push
cs
push
mov
inc
cmpsl
mov
fildl
outsl
jns,pn
roll
inc
and
inc
push
jns
jnp
repz
je
mov
jge
lock
inc
xor
lods
into
push
mov
inc
cmp
add
imull
add
sbb
pop
push
loopne
pushf
mov
cmp
or
sbb
movsl
dec
push
mov
lods
rolb
mov
pop
outsb
or
fistps
mov
mov
pusha
icebp
imul
inc
movsb
push
add
and
movsl
and
and
enter
rclb
mov
lret
repnz
dec
xlat
pop
sti
sbb
pop
rorb
inc
pop
sub
ror
jne
xchg
lcall
clc
push
pop
and
int3
int3
cld
in
clc
jbe
cmp
push
scas
das
iret
les
sub
jne
fcomip
sub
outsl
inc
mov
mov
out
push
lods
outsb
inc
push
mov
bndstx
jmp
popa
pop
sbb
mov
test
insb
fcmovu
nop
adc
enter
xor
mov
insb
ss
cmp
mov
cwtl
into
ret
cmp
pusha
pop
jns
jno
mov
lds
enter
les
cmpsb
mul
sti
and
inc
repz
jge
int3
test
inc
in
xchg
mov
out
pop
lcall
or
adc
jle
mov
pop
scas
dec
out
mov
jge
add
or
push
fildl
test
imul
xchg
inc
push
and
adc
fidivl
shl
xor
push
test
adc
outsb
mov
test
or
push
xlat
inc
loope
cmc
loop
add
cmpsb
cmp
jae
shlb
push
cmp
lcall
cmp
icebp
sbb
push
movsl
xchg
mov
jl
std
imul
in
cmp
pop
aaa
jbe
ss
mov
insb
jmp
sbb
je
shll
nop
mov
sub
int3
daa
aaa
xor
and
inc
neg
dec
inc
jp
fwait
pop
das
mov
mov
push
xchg
lcall
and
aam
xorb
pop
lahf
das
hlt
push
lds
inc
pop
loopne
push
shlb
cmp
shll
and
repz
mov
notb
add
and
into
call
and
push
add
mov
ret
nop
jle
loop
call
sub
xchg
popa
or
aas
daa
popa
sub
jecxz
cli
push
fnstcw
mov
fs
rolb
mov
add
or
out
fs
pop
call
dec
add
adc
adc
cmpsl
mov
cmpsb
mov
outsl
push
vpshaq
int3
gs
pop
xchg
jg
das
mov
sti
sub
pop
arpl
idiv
aaa
mov
sbb
mov
shl
mov
sar
xor
inc
xor
xor
lock
lods
lods
test
jne
cmpsl
popf
popa
mov
mov
mov
add
fwait
pusha
xor
in
mov
lds
ja
mov
cmp
insl
push
pop
pop
mov
inc
dec
cmp
fisubrl
pop
push
cmp
pusha
push
push
inc
push
out
or
xor
pop
push
ret
test
aam
dec
fsts
ret
pop
mov
sbb
jb
daa
mov
xlat
mov
xor
shr
sub
loope
xor
ror
shlb
int
loop
dec
mov
rcl
xchg
je
cmpsl
add
dec
inc
push
ljmp
loopne
pop
pop
call
loop
mov
xchg
xchg
mov
jecxz
aaa
sub
push
pop
push
and
mov
mov
jmp
xor
and
add
xchg
inc
sub
sbbl
outsb
inc
inc
popa
mov
out
sbb
jg
pop
cmpsb
xchg
xchg
pop
test
pushf
push
jbe
lret
shrl
mov
and
lret
fisubrs
and
inc
rcl
push
xchg
sbb
mov
mov
jge
sub
loopne
sbb
jge
or
jb
add
push
shlb
pop
xchg
jmp
sbb
xchg
hlt
mov
cli
cmpb
aam
out
into
add
sub
push
std
and
ja
xsha1
sbbb
sub
out
pop
dec
fdivl
rorb
inc
loopne
add
lret
subl
adc
arpl
aam
add
xchg
ljmp
or
cmp
popl
ja
in
mov
jp
mov
popf
aas
dec
push
sub
pop
daa
in
or
fs
mov
lahf
push
sub
outsl
jae
mov
negl
loope
lcall
mov
add
pop
or
lods
inc
popf
mov
stc
daa
cmpl
push
cltd
in
ret
xchg
or
jne
pop
ds
jmp
ja
inc
pop
stos
div
leave
stos
xchg
andl
fs
mov
ror
mov
push
or
pop
push
mov
arpl
xchg
pop
gs
cmp
pusha
sbb
xlat
and
fwait
imul
adc
push
sub
mov
mov
cmp
call
xchg
pop
cld
popa
call
pop
lock
sbb
dec
dec
scas
out
adc
push
push
jno
or
fnstsw
push
test
imul
iret
nop
mov
fidivrs
adc
lock
pop
int
imul
out
push
adcb
mov
mov
in
mov
leave
ss
imull
inc
inc
inc
sub
stc
pop
mov
xchg
sub
sub
in
mov
lock
push
cmpsb
push
sqrtps
lea
enter
in
jp
rolb
push
cmp
jae
cmp
loop
insb
cli
jb
inc
pop
add
sbb
mov
and
pop
ret
add
sahf
pop
jle
sub
lret
stos
adc
scas
sub
jp
sub
push
movsl
xchg
adc
cvtdq2ps
es
ja
or
sar
paddw
mov
pop
aam
out
inc
add
enter
loop
repnz
mov
pop
enter
xor
pop
popa
nop
mov
ss
loope
mov
loop
mov
push
test
push
shl
movsb
inc
mov
mov
sub
aaa
add
addr16
cmc
gs
mov
cmpsb
stos
adc
add
in
mov
sbb
adc
insb
cmp
in
push
dec
and
push
es
push
pop
cmp
pusha
push
scas
les
sbbb
int
add
push
pop
pop
xor
mov
das
mov
in
push
aam
adc
pop
jecxz
pop
add
cmp
clc
cld
out
out
sub
jle
or
mov
rcrl
je
mov
add
jg
jecxz
mov
pop
std
xorl
shrl
in
sub
repnz
test
cmp
mov
or
popa
les
lods
xor
out
add
jo
pop
js
inc
test
fidivl
popa
mov
sbb
stos
cwtl
stc
xchg
aaa
sub
xchg
push
pop
cld
inc
mov
repz
mov
jae
cmp
sbb
movsb
mov
xchg
mov
adc
std
mov
outsb
fidivl
aas
and
insb
pop
pop
test
and
pop
add
add
in
push
mov
in
push
sub
lret
inc
and
pop
add
sbb
adc
mov
cmpsl
ljmp
cmp
mov
sahf
pop
push
gs
cld
jno
mov
mov
aad
push
jle
adc
xchg
inc
xchg
test
pop
iret
jg
test
jmp
ss
and
insl
pop
cmp
fstpt
xchg
pop
fs
pop
imul
cwtl
pop
jb
add
inc
and
cld
push
js
sub
cwtl
pop
lods
stos
xchg
outsl
leave
out
mov
out
data16
inc
ja
lock
push
stc
push
xor
inc
leave
xor
xor
shl
lcall
jl
jno
adc
loop
fstpt
mov
popa
out
xlat
es
and
lods
ja
jns
and
daa
inc
out
dec
dec
mov
mov
dec
icebp
int
sbb
adc
push
outsb
jo
dec
push
into
sub
lahf
or
sub
daa
pop
stc
mov
roll
and
pop
sbb
rcll
sub
inc
je
mov
push
shr
jbe
loop
inc
sub
dec
inc
xor
pop
lahf
push
mulb
jle
or
cmp
addr16
jg
push
push
cmp
push
pop
loope
test
xchg
cltd
dec
in
cmp
lcall
mov
add
lcall
sub
and
mov
inc
jne
arpl
pop
xor
inc
mov
pop
cmp
xor
xor
dec
pop
jb
or
and
jno,pt
test
sub
mov
mov
mov
jmp
sub
push
xchg
cmp
bound
cs
insl
add
add
popf
or
xor
data16
cltd
xor
sbb
imulb
data16
fwait
ss
mov
out
leave
dec
int3
and
fsts
dec
mov
std
jg
mov
cmp
frstor
push
pop
arpl
dec
or
neg
ss
shlb
popa
sbb
stos
out
dec
add
stos
sar
lahf
nop
lret
jge
sbb
lahf
in
add
testb
mov
adcb
insb
and
lahf
lret
and
leave
and
movsl
in
mov
pop
or
outsl
mov
aam
mov
cld
add
pop
in
dec
out
sub
or
cmp
lcall
ret
xor
popf
mov
mov
ret
test
xlat
jle
xor
int3
mov
xchg
insl
jge
das
inc
jge
inc
xor
test
mov
xorb
inc
test
lock
cmp
cmp
inc
sub
mov
and
stc
mov
xor
cmp
mov
jl
cmova
lahf
insb
int
in
push
pop
sub
fidivl
and
repz
mov
aad
repz
mov
cmpsb
in
sti
mov
mov
movsb
repz
sub
pop
dec
scas
mov
incl
shr
rolb
popa
inc
pop
jecxz
rcr
mov
sub
ret
mov
add
subl
jmp
mov
sbb
pop
lds
fcmovbe
or
lods
cmp
or
inc
inc
daa
hlt
cmpsb
jecxz
ljmp
jns
push
clc
cltd
and
inc
repz
xchg
test
sbb
jmp
xlat
add
jp
fcoml
push
adc
mov
mov
gs
and
cmp
test
fxch
data16
push
push
repnz
in
or
in
loopne
mov
cmp
cmpl
pop
lret
mov
lock
sub
fs
std
lret
sbb
es
or
dec
pop
jae
push
dec
inc
cli
sarl
or
sbb
imull
mov
fcmovb
pusha
xor
sbb
cmp
push
xchg
je
mov
loopne
imul
xchg
mov
jnp
out
push
push
std
inc
pop
xchg
xorl
scas
cld
fs
cs
std
mov
aas
repz
push
inc
or
mov
in
and
mov
sahf
ljmp
aaa
sub
xchg
sub
mov
in
inc
fidivl
push
lds
push
rorb
fdivrs
xchg
popa
outsl
xlat
mov
xchg
mov
jno
lods
les
or
rorb
jbe
out
cmp
outsl
leave
daa
or
bnd
ret
jnp
dec
inc
lret
push
dec
ja
sub
xor
pusha
out
mov
lret
outsb
pop
fwait
outsb
in
outsl
or
mov
int3
aam
mov
pop
loopne
adc
leave
aam
out
in
xor
push
push
sahf
int
push
xor
mov
xchg
xor
subl
aas
adc
pop
mov
ds
adc
mov
call
adc
call
idivl
xchg
dec
pop
ja
les
mov
leave
mov
into
jns
fistpl
outsb
inc
xorb
ja
loop
nop
in
adc
or
stos
gs
inc
xlat
out
repnz
and
jmp
mov
dec
fisubs
popa
lret
stos
dec
jmp
icebp
jl
adc
aad
push
add
xchg
or
cmp
jle
pop
jge
pop
and
and
xor
inc
jmp
xchg
xor
ficomps
test
and
lods
cs
leave
outsl
xchg
push
pop
adc
lcall
mov
cmp
out
and
test
decl
movl
outsl
mov
sahf
sub
pop
movsl
test
sahf
xor
adc
mov
cmp
fidivrs
test
nop
cmp
push
cli
gs
jecxz
int
test
dec
push
imul
jge
aas
xchg
test
rcrb
leave
push
mov
xor
xor
mov
lock
divb
inc
xchg
out
xchg
scas
outsl
push
stc
iret
mov
mov
jnp
sbb
lods
mov
xchg
and
mov
mov
lea
imul
pop
push
jp
gs
add
out
clc
iret
lods
add
lea
das
jmp
loopne
loop
aaa
in
xchg
repnz
cld
and
outsb
lcall
call
sbb
rol
mov
dec
jnp
test
adcb
jmp
out
pop
cmp
inc
and
jmp
dec
jb
loop
lret
cmc
andb
or
inc
aad
xchg
out
test
orl
shlb
mov
test
sbb
and
pushf
cmp
iret
test
mov
mov
js
jo
add
or
aam
dec
push
inc
dec
dec
popa
mov
shrb
movsl
and
push
push
add
jg
out
sub
cmp
jle
cmp
push
or
xchg
lea
int
aam
mov
sahf
xchg
sub
push
inc
add
adc
mull
sti
cmp
mov
cmp
push
hlt
mov
lcall
in
adc
pop
xchg
jle
xchg
in
stos
cmp
aam
mov
sub
cmp
int3
pop
in
add
call
push
inc
test
ret
mov
mov
shlb
dec
mov
push
int
scas
rcrb
int3
cmp
lods
mov
test
fsubr
sub
in
fldenv
or
in
dec
mov
subb
sahf
inc
mov
xchg
pop
clc
sub
adc
or
or
jae
insb
arpl
add
shll
cli
mov
loopne
jge
xchg
cli
addb
and
fidivl
push
shlb
outsl
mov
cmp
push
and
inc
or
and
ficomps
enter
movsbl
mov
sbbb
or
xchg
push
nop
lea
push
ret
cvtps2pd
push
movsb
inc
xchg
dec
cmp
mull
sbb
pusha
dec
sbb
and
in
loop
sbb
je
popa
loope
fdivrl
sub
adc
mov
push
mov
jl
mov
pop
adc
pushf
xchg
es
sub
in
jle
testl
mov
shll
ret
mov
xor
push
roll
adc
adc
aam
aad
mov
push
adc
cmpsb
pop
xchg
push
push
sbb
push
test
push
and
popf
movsl
xchg
xchg
xchg
cmpsb
lock
mov
xor
adc
aas
jge
orb
pop
pop
jmp
xchg
repz
fldenv
sub
add
pop
rcl
das
mov
cmp
loopne
mov
aam
sbb
test
inc
iret
jmp
and
icebp
adc
jne
pusha
pop
loope
mov
mov
push
mov
out
adc
dec
in
lods
adc
push
mov
mov
fdiv
enter
sbb
movsl
push
test
loopne
add
mov
ljmp
push
fcmovbe
cli
sbb
std
pop
std
ss
fwait
cmp
fidivrl
xchg
test
adc
mov
icebp
jg
or
jno
push
loopne
add
cmp
repnz
jae
pop
lods
mov
fldl
in
loope
cmp
cltd
fisubl
ret
cld
repnz
mov
inc
and
jnp
nop
pop
and
sti
into
notb
add
adc
iret
or
in
fildl
fcomip
shlb
jae
subl
shll
cltd
addr16
movsl
push
and
mov
daa
repnz
jne
ljmp
fmull
mov
jecxz
and
lds
push
scas
xchg
cmp
stc
ds
in
into
push
out
inc
xchg
xor
jne
push
test
cld
mov
xchg
or
bound
mov
or
or
push
dec
stos
in
mov
movsb
inc
test
test
ficompl
sub
imul
dec
dec
adc
das
adc
int
ret
mov
add
mov
notb
pop
repz
or
out
jo
cmp
mov
lahf
movaps
je
fldenv
out
test
jg
js
fwait
xchg
cwtl
ja
div
xchg
and
mov
sub
xor
sahf
dec
dec
rcr
push
pop
out
jne
fcmovb
cmp
mov
mov
fstl
int
inc
inc
js
and
mov
mov
cwtl
jnp
add
ret
mov
push
xor
insb
sbb
ret
mov
insl
stc
pop
scas
incl
int
lahf
sub
popf
mov
lret
or
xor
push
mov
sar
and
cmp
incb
sub
push
xor
adc
stc
arpl
outsb
push
lods
lret
aaa
lret
pusha
divb
aaa
fildl
xchg
and
movsl
push
shlb
cmp
xor
sub
pop
sahf
cmpsb
pop
inc
shlb
xchg
lds
adc
in
in
or
in
xlat
insl
lock
stc
inc
adc
mov
nop
pushf
test
sub
cld
dec
fisubrl
mov
cmp
push
hlt
push
test
mov
test
inc
dec
je
mov
ret
lea
out
sbb
dec
mov
insb
psubq
fs
les
jle
notl
push
mov
jmp
push
mov
jae
fildl
std
push
pusha
push
mov
mov
inc
daa
sbb
sbb
mov
pop
fs
das
repnz
mov
sub
push
inc
shrl
and
addb
into
es
bound
jbe
lret
sbb
jge
xor
xor
mov
inc
loopne
jl
add
sti
jae
std
movsl
or
lds
jns
pop
call
sub
mov
aas
xchg
pop
out
xchg
inc
cmp
cmp
cmp
sbb
adc
inc
sub
or
je
lock
mov
or
ds
inc
pop
mov
into
scas
push
jae
lret
jbe
cmp
insb
punpckhbw
loope
imul
or
aaa
mov
xchg
sub
sbbl
mov
pop
pop
pop
or
into
adc
jno
adc
inc
jecxz
rcrb
mov
call
or
fs
es
loop
fnstenv
loop
jnp
data16
dec
push
lahf
mov
pop
push
push
mull
add
data16
push
mov
js
daa
push
cmp
dec
outsb
push
bound
imul
push
bnd
cmp
push
add
scas
int3
or
pop
add
push
and
sbb
jl
mov
mov
cmpsl
loop
jl
inc
pop
cmp
ja
cli
scas
xchg
into
ja
je
cmpsl
sub
adc
jb
loope
mov
dec
fdivs
jnp
and
fstpl
out
les
imul
pushf
adc
mov
pop
and
add
cmp
js
and
rcrl
ficoml
rorb
sti
inc
lods
adc
ret
sbb
sub
fwait
sarb
push
xchg
sbb
data16
sub
mov
inc
sub
push
push
add
push
addr16
scas
mov
pop
pop
push
fcompl
pop
insl
mov
scas
shr
mul
sti
imul
dec
fldt
pop
stos
mov
test
push
stos
shlb
loope
pop
sub
imul
sub
and
inc
jbe
push
push
movsl
imul
push
cmp
lods
bound
sub
push
lahf
dec
xor
mov
idivb
test
sbb
mov
lock
jnp
dec
adc
or
stos
test
xor
je
pop
mov
add
sbb
mov
cmp
sti
sub
mov
jecxz
add
sub
cmpsb
xor
mov
in
js
in
sarl
add
mov
mov
fcmovb
dec
mov
aaa
jecxz
ret
adc
jbe
push
cmp
hlt
rcll
jmp
dec
xchg
out
or
lret
fidivs
in
subb
outsb
clc
out
xchg
inc
not
xchg
lcall
filds
imul
mov
sbb
into
enter
test
lret
cmp
and
or
sbb
adc
insb
xchg
add
adc
dec
cmpsb
cltd
fists
in
sub
ja
lahf
xor
daa
mov
aad
mov
push
xor
mov
mov
imul
add
xchg
sub
out
leave
pop
sub
cli
jo
aas
add
sarb
sub
add
mov
lret
je
add
mov
shlb
loopew
mov
pop
dec
aaa
bound
push
sbb
scas
pop
xchg
or
mov
mov
adc
clc
adc
movsb
mov
cmp
andw
or
adc
dec
jno
dec
lds
outsb
mov
inc
sbb
mov
or
adc
fiaddl
mov
scas
jne
add
mov
and
js
out
sbb
push
sbb
pop
insl
push
adc
inc
mov
sbb
popf
xchg
dec
push
push
dec
xchg
flds
sub
mov
out
dec
adc
sub
pop
shl
popf
cmc
rolb
aam
mov
dec
and
add
fcoml
cmp
in
xorb
iret
push
push
leave
stos
xor
pop
jno
adcb
sar
rcrb
mov
lods
cmpsl
mov
cmp
jne
mov
hlt
mov
push
mov
jbe
test
aaa
xchg
daa
push
xchg
loope
cli
add
cli
mov
cmp
pop
out
jae
sarb
xchg
cld
add
aam
mov
cmp
inc
mov
dec
int3
arpl
jl
sub
sbb
push
jp
xchg
in
lock
mov
mov
xchg
shlb
scas
add
push
xor
out
les
cmp
jge
lods
andb
jg
add
pop
or
aad
push
movsl
adc
pop
mov
into
pushf
push
mov
jnp
sbb
outsl
sub
lds
test
inc
xchg
xchg
inc
add
je
sub
and
orl
or
xchg
arpl
aad
xchg
leave
cmpsl
ja
and
ret
xchg
push
cwtl
jo
jnp
mov
test
pusha
push
sbb
rorl
lret
mov
pop
stos
sub
ret
xchg
cmp
cli
sbb
rorl
repz
cmp
cmp
xor
inc
ror
loope
outsb
sti
sbb
jo
rorb
lret
mov
fadd
mov
sbbl
loope
pushl
mov
fstl
xchg
add
out
inc
and
sub
iret
jbe
fsubrs
call
lock
mov
std
adc
leave
sub
mov
pusha
rorb
adc
push
mov
jmp
shrl
testb
in
cld
mov
fst
int3
adc
push
std
add
mov
sub
data16
ljmp
xlat
dec
and
leave
cmp
cltd
xchg
jp,pn
mov
push
enter
scas
lods
aam
mov
xchg
push
sbb
or
mov
mov
test
popf
jecxz
scas
js
adc
les
xor
cmp
out
jmp
lods
andb
push
mov
mov
inc
aas
adcb
pop
daa
cmp
loopne
mov
subb
and
ja
push
fisttps
out
xchg
loope
jmp
rorl
xlat
dec
jg
xchg
xor
test
dec
aaa
iret
es
xor
mov
pop
mov
pop
rcll
pop
nop
lods
js
mov
push
loope
or
mov
sbb
cmp
xor
out
or
cmp
loopne
stos
sahf
loope
sbb
nop
jmp
add
dec
adc
pop
pop
mov
outsl
rcrb
jge
xlat
adc
repnz
sarb
or
xor
sub
jge
imull
setae
mov
push
sub
pop
arpl
or
ret
mov
mov
enter
sub
add
out
stos
stos
jbe
push
sahf
out
sbb
dec
push
sub
add
cwtl
jb
or
je
xchg
xchg
cmp
mov
add
push
xchg
mov
lcall
cmp
push
xchg
imul
int3
cmp
mov
pop
lods
imul
stos
sti
imul
outsl
outsl
rcll
xchg
test
into
scas
dec
ret
iret
popf
mov
add
jmp
gs
jns
jno
mov
ljmp
xchg
daa
js
vpcmpgtd
sub
jl
roll
cmp
jnp
or
xchg
pop
cmpsl
int
sbb
mov
mov
add
mov
ja
scas
xchg
addr16
sbb
insb
mov
or
dec
mov
xchg
push
mov
inc
xchg
dec
pop
push
mov
clc
in
mov
das
repnz
fisubrs
adc
and
cmp
mov
in
cmp
push
dec
and
adc
movsb
inc
jecxz
test
mov
xor
lea
add
mov
call
cld
sbbb
sti
push
sahf
in
ret
add
out
test
push
les
mov
insb
cmpsl
ja
gs
dec
xchg
stos
adc
inc
add
imul
ret
in
std
fwait
xchg
shr
mov
repnz
int3
pusha
ja
adc
fs
or
sub
imul
sub
push
sahf
mov
es
leave
or
push
bound
sbb
loopne
add
lds
ret
leave
cmc
cmp
test
jle
add
outsl
imul
movsl
in
jge
fcompl
and
mov
cmp
out
add
cmp
aas
data16
mov
popa
inc
cmp
sub
rsm
gs
adcl
lret
dec
in
insl
subl
aad
lcallw
inc
adc
mov
fistpll
in
and
loop
outsb
lea
mov
inc
std
fcomps
into
mov
jge
pop
mov
dec
push
push
ss
faddl
aaa
adc
stc
xchg
mov
mov
int3
insb
adc
push
das
push
repz
xchg
ss
adc
inc
fildl
adc
stos
mov
and
push
push
out
pop
mov
mov
mov
nop
sub
add
cmp
arpl
cmp
sbb
test
and
je
or
or
cs
inc
pop
clc
aas
push
sbb
or
inc
mov
jle
mov
sahf
cmp
xchg
xchg
xor
inc
ror
andnps
sahf
lods
mov
adc
fimuls
mov
fimull
cltd
lret
jnp
xor
movsb
mov
lcall
inc
fnsave
cmpsl
jecxz
in
mov
pop
icebp
cwtl
adcb
sbb
pusha
push
push
push
inc
dec
xchg
iret
add
dec
les
jmp
jl
or
mov
shrb
and
pop
inc
xor
jp
sbb
jmp
sub
mov
pop
jg
jecxz
jmp
call
jbe
cmp
adc
dec
xchg
lahf
std
push
ret
imul
clc
fs
jo
pop
stos
push
pop
sbbb
xchg
lahf
jae
je
call
int
sbb
mov
lret
hlt
xor
jecxz
fwait
xorl
xchg
mov
pushf
test
sarl
fimull
sbb
orb
or
xchg
mov
mov
cs
cmc
dec
add
cmp
cmp
negb
aam
sub
aaa
je
mov
lret
lea
mov
mov
and
push
jae
sbb
and
out
ja
mov
fwait
push
icebp
faddl
mov
mov
sub
sbb
push
sub
ror
xchg
xchg
push
in
jecxz
les
loope
xlat
enter
inc
aaa
inc
pop
jne
call
mov
mov
sahf
stc
and
rol
adc
lea
js
icebp
jge
cmp
jecxz
addr16
in
mov
dec
xchg
dec
out
data16
lods
or
scas
jb
pop
pop
lock
test
int
xor
enter
jns
mov
ss
inc
js
popa
out
nop
fs
add
ficoms
jae
sti
pop
iret
cmc
cmp
push
mov
fs
nop
mov
ja
aad
xchg
and
idiv
test
ss
mov
pop
mov
fwait
or
int
ds
ret
sbbl
mov
pop
inc
repnz
pop
fsts
adc
sbb
sub
iret
stc
inc
orb
inc
dec
mov
dec
add
leave
test
inc
add
sub
or
insb
fisttpl
mov
pop
xor
ficoml
es
xor
cmc
push
jecxz
mov
or
and
or
cmc
xchg
cmp
loope
mov
dec
or
inc
mov
push
cld
movsl
jl
add
xchg
mov
loopne
sbb
sbb
test
push
xor
dec
dec
cmp
sub
call
icebp
cmpsb
pop
mov
dec
pop
sbb
push
out
sub
repz
cmp
sbb
xchg
mov
mov
fcomip
cmp
lds
push
or
cltd
push
movsb
test
jae
fs
ret
sti
sbb
adc
in
mov
loope
pop
mov
dec
cmp
sarl
bound
stos
and
mov
xchg
sub
loope
lods
push
dec
xor
pop
mov
add
jbe
test
aad
scas
fwait
outsb
andb
je
sbb
pop
cmp
cld
out
or
jnp
xor
sub
or
inc
in
lock
insb
add
mov
testb
jbe,pt
push
cmp
cmp
ds
lret
iret
outsl
test
ret
pushf
inc
or
push
sbb
movb
mov
or
cltd
lret
inc
mov
mov
subl
icebp
jns
inc
xchg
and
sub
pop
or
pop
clc
in
mov
popa
cmp
sub
and
push
mov
jmp
es
pop
dec
cltd
jb
aaa
hlt
jl
stos
jbe
or
jnp
and
xchg
jp
push
roll
out
adc
xor
cmpb
jecxz
loopne
std
int
dec
aaa
and
sti
mov
negl
enter
loopne
jne
and
into
or
out
jo
sarb
addb
cmp
js
and
push
popf
or
popf
adc
xchg
push
sarl
inc
or
push
mov
fwait
test
and
jle
xchg
vhsubpd
insb
sub
pop
or
cli
fsubrp
dec
mov
adcl
sbb
ficoml
push
pop
gs
ds
lret
cld
jl
pushf
jbe
add
mov
out
push
fildll
mov
jno
sbb
lahf
scas
lcall
insb
roll
in
addr16
pusha
pop
push
inc
mov
dec
jmp
sub
scas
sub
sub
push
mov
fucomi
aad
mov
pop
mov
aad
jns
pop
dec
or
fnstcw
das
jmp
mov
push
xchg
sub
lea
add
add
in
pop
mov
mov
adc
stos
dec
imul
adc
pop
aas
int3
cmc
push
ficomps
nop
or
adc
mov
inc
shlb
mov
xlat
mov
lea
cmp
push
in
push
sub
jl
adc
add
loop
rcrb
imul
clc
dec
mov
add
pushf
inc
or
lgs
mov
rcr
and
xchg
or
jae
sbb
push
or
cs
stos
sbb
jno
fistl
lret
nop
stos
push
in
rcrl
shll
mov
negb
mov
mov
dec
or
mov
clc
js
leave
icebp
repnz
push
push
xchg
jl
cmp
sbb
das
movsb
pushf
imul
icebp
cmp
pop
adc
stos
int3
mov
cmpl
mov
sub
push
scas
das
leave
loope
sti
cmpsb
push
jne
push
sbb
inc
mov
sub
xchg
loope
cmp
je
daa
push
scas
xchg
jge
lcall
mov
aad
mov
mov
xor
push
mov
movsb
test
cmp
imul
add
mov
in
test
in
push
ret
ljmp
mov
adc
or
cmp
mov
and
outsb
mov
es
inc
imul
icebp
popa
sub
add
jne
shll
sbb
xor
in
push
dec
pop
mov
fs
xor
dec
mov
mov
adc
xchg
jnp
xchg
clc
sbb
fcomps
test
in
fcmovu
pop
data16
shlb
shrb
xchg
insl
aas
inc
dec
pavgw
adc
fidivrl
cmpsl
jne
xchg
ret
in
inc
mov
fisubs
int
cmpsb
scas
aaa
mov
lret
cmpsl
mov
inc
cli
xchg
sbb
pusha
lcall
mov
clc
test
and
es
cmp
pop
fwait
push
pop
jno
pop
ret
xlat
dec
mov
lock
mov
in
ljmp
test
jno
lock
mov
clc
push
je
and
sub
mov
decb
inc
test
scas
pop
xchg
push
mov
cmp
adc
filds
fiaddl
pop
sub
std
subb
aaa
adc
mov
adc
inc
sar
das
test
or
push
iret
jge
cmc
pop
cld
jae
push
repnz
shrl
inc
add
lret
nop
popa
scas
cmp
fstl
jnp
xorl
outsl
jge
push
cmpsb
movsb
std
jns
pop
int
jg
xchg
push
test
sub
lock
pusha
fcmovb
nop
jge
lahf
movsl
out
aaa
insl
enter
lea
sub
arpl
xchg
dec
mov
inc
inc
test
push
xchg
scas
xor
or
sti
mov
fisttps
push
sbb
dec
test
stos
or
mov
aad
aaa
aad
out
lock
inc
sbb
mov
dec
pop
loope
lcall
dec
shlb
push
stc
xchg
fiadds
xchg
mov
jecxz
add
cltd
stc
jp
and
out
test
shrb
push
test
jmp
or
pop
adc
scas
aad
fistpll
ds
add
jmp
xchg
mov
inc
dec
mov
xlat
ret
cmpsb
or
ljmp
xchg
repz
pop
in
sbb
push
jmp
mov
mov
adc
addr16
inc
add
cs
push
lds
dec
mov
test
cmp
call
push
imul
fdivs
aaa
cmp
sub
movsl
pop
fimuls
repnz
scas
and
xchg
push
arpl
xor
jl
xor
push
ljmp
ss
xchg
int
addl
inc
inc
mov
mov
jns
mov
mov
ds
sub
mov
in
aam
bound
push
xor
into
jmp
enter
inc
and
pusha
and
cltd
outsl
das
pop
std
ljmp
pushf
or
imul
aad
cmc
jo
jle
add
xchg
cs
cmp
in
shll
pop
cmp
sbb
ret
jmp
dec
xor
jp
mov
popa
cmp
dec
mov
sub
xor
js
and
cmp
push
pop
insb
popa
mov
pop
daa
loope
fcomi
in
enter
ja
xor
pop
dec
dec
call
xlat
cwtl
cmp
mov
inc
stos
sub
aas
xchg
sbb
cld
xor
cmp
or
cmp
addl
cmpsl
jns
and
and
icebp
or
shlb
daa
dec
sbbl
xor
pop
pushf
ds
imul
jle
and
lock
cli
dec
shlb
add
fcmovne
sub
icebp
scas
cmp
lret
rcr
sub
adc
sahf
stc
gs
push
shrl
lcall
lds
test
hlt
nop
add
xor
xor
dec
aad
xor
les
add
pushw
sbb
mov
mov
sbb
mov
in
pop
sbb
lods
push
mov
mov
mov
and
aam
dec
scas
hlt
cmp
cmpsl
add
sub
mov
outsb
test
mov
pop
stos
pop
push
icebp
out
mov
les
push
inc
cmp
repnz
dec
mov
bound
loope
xchg
inc
aas
dec
dec
call
xlat
push
sub
push
in
dec
mov
pop
ret
mov
sbb
jle
shlb
mov
push
mov
mov
insl
js
stos
sub
scas
and
xlat
push
daa
xchg
xchg
dec
testl
pop
das
jae
adc
sahf
daa
lcall
dec
cmc
mov
test
jecxz,pn
pop
int
mov
paddq
outsl
iret
push
and
dec
fiadds
adc
dec
js
sbb
fldenv
aad
xor
jmp
rcll
jne
fnstcw
daa
mov
fmull
scas
jge
and
or
aaa
adc
pusha
dec
mov
les
pop
mov
or
shrb
inc
lods
test
mov
jecxz
dec
sub
ret
adc
mov
push
inc
xchg
mov
dec
loop
loope
ljmp
outsl
xor
add
sbb
rcll
jb
dec
mov
lods
dec
pop
stc
mov
jp
enter
cld
mov
aad
test
cli
and
pushf
lock
mov
fidivl
scas
xor
js
mov
lret
mov
and
nop
popf
cmp
pop
js
xchg
outsl
imul
shrb
rclb
pushf
dec
test
push
and
mov
ffree
stc
hlt
mov
dec
ret
scas
cmpsl
lret
push
lcall
jnp
jmp
popf
in
jo
movb
rcrb
mov
cld
cwtl
cmpsb
insl
jle
inc
inc
ret
mov
pusha
out
jb
push
addr16
dec
sbb
stc
int3
mov
fstpt
jns
cmp
shll
mov
packuswb
sub
jp
stc
inc
std
mov
shrb
out
inc
jo
je
clc
mov
shrb
lods
insb
add
push
inc
fistpl
lahf
sub
vpavgw
xchg
adc
iretw
cmc
int3
dec
out
sbb
pop
add
mov
dec
std
scas
pop
les
lods
mov
mov
sub
fs
jmp
push
ret
addr16
popf
scas
adc
sbb
inc
nop
ja
lret
mov
inc
add
testl
jle
pop
lret
mov
mov
fsubrp
cmpsb
and
lods
mov
dec
sub
incl
mov
xchg
and
sub
lahf
cmc
inc
jl
sbb
hlt
mov
adc
add
lahf
push
repnz
or
jae
test
adc
cld
in
pop
andb
sub
adc
pushf
xor
inc
xor
stc
mov
xchg
mov
jecxz
popa
xchg
inc
add
test
mov
ljmp
adc
pop
cmp
movsl
sub
xor
sbbl
pop
add
loope
lcall
mov
push
cmp
xorb
aaa
das
mov
pop
jg
into
outsl
sub
loop
mov
xchg
je
pusha
lret
xchg
cmp
mov
iret
lods
cmpsl
adc
stos
mov
adc
or
stos
sahf
fcompl
cmp
xchg
out
adc
inc
loope
psrad
ds
shll
arpl
loopne
ljmp
mov
test
pop
sbb
dec
insb
loope
movsb
orb
fiaddl
std
aam
jecxz
adc
mov
inc
in
jo
mov
add
cltd
shr
or
push
cwtl
dec
jg
inc
or
xlat
add
xor
in
sub
insl
jp
xchg
pop
cmpl
jle
cmp
adc
out
pop
pop
imul
cld
jae
orl
das
test
iret
out
js
rcrl
xchg
repnz
inc
mov
mov
mov
ljmp
cmp
mov
push
sub
cli
xor
dec
pop
shrl
cmc
sbb
dec
push
mov
ret
push
imul
loopne
cwtl
andl
push
and
int
int3
xor
xor
filds
push
mov
test
iret
add
mov
in
imul
pop
ror
jbe
scas
cli
fs
loope
xchg
aas
mov
add
xor
gs
pop
ficompl
xchg
aam
add
cmp
gs
aad
push
sbb
jle
xchg
repz
xchg
repz
jecxz
push
aam
fxch
and
fiadds
ljmp
rorb
ret
pushf
inc
push
xchg
mov
xchg
push
adc
cli
pop
rol
popf
sbb
popf
lds
cli
repnz
hlt
div
and
stos
sbb
mov
movsl
dec
int3
adc
pop
loopne
in
dec
loope
repnz
pusha
jle
xchg
cmc
dec
enter
jbe
adc
movsl
mov
pop
popf
jns
loopne
pop
push
xchg
das
bnd
int3
addr16
mov
xor
fdivp
lds
lcall
sbb
xor
push
adc
jns
roll
xchg
shll
loop
sbb
lea
jg
jmp
xor
mov
push
dec
push
jne
leave
sbbb
ret
dec
jb
les
xchg
jnp
in
lods
cli
jae
clc
or
test
das
push
out
fcmovu
or
test
xchg
dec
push
xchg
mov
adc
mov
cltd
movsl
inc
xchg
or
sahf
popf
and
push
mov
out
cmp
sub
out
jp
lahf
add
xchg
inc
pop
loope
call
jmp
loopne
mov
xor
add
add
das
mov
sbb
and
adc
lret
push
mov
xchg
lods
rolb
sbb
sub
insl
mov
je
push
xlat
int
sarb
repz
and
jne
mov
nop
pop
cmc
mov
push
inc
into
insl
sbb
sub
xor
xlat
popa
sbb
lret
popf
push
lret
lret
and
pop
pop
mov
add
dec
orl
jmp
insl
test
cmc
jne
jae
jb
mov
jb
dec
pop
jb
cltd
daa
fimuls
fisttps
or
mov
data16
test
push
movsl
jne
xchg
movsl
sub
and
hlt
dec
lods
gs
add
push
mov
mov
scas
mov
push
cmp
pushl
sbb
cmpsb
int3
add
in
fsubr
xor
xchg
daa
or
outsl
mov
addl
and
int3
mov
icebp
cmp
sub
icebp
xchg
lret
sti
adcl
dec
jne
fs
pop
popf
adc
mov
mov
mov
arpl
push
pusha
inc
sbb
xchg
ficoml
jnp
in
adc
je
mov
ret
mov
mov
call
mov
and
out
test
mov
mov
je
test
ror
inc
popf
sahf
mov
fidivrl
or
sub
test
cmp
sub
icebp
jo
mov
push
mov
mov
inc
mov
in
leave
and
xor
decb
push
loop
jb
sbb
xchg
jecxz
pop
and
das
pop
pop
jmp
push
fistl
jp
push
pusha
hlt
mov
scas
xor
dec
leave
mov
mov
xor
in
ret
dec
adc
mov
sub
icebp
adc
test
pop
xchg
dec
add
mov
mov
add
xchg
push
push
inc
fwait
vmovhps
mov
pop
cmpsb
nop
clc
shl
insb
xchg
sbbb
jo
mov
and
lret
and
add
aam
enter
imul
xchg
scas
jg
je
jmp
call
jne
mov
iret
jns
lahf
fwait
inc
fimuls
adc
movsl
ffree
xor
xchg
pop
sbb
sar
pop
pop
pop
mov
sahf
icebp
push
dec
jp
enter
cli
push
mov
pop
insl
frstor
add
xchg
fcomps
sub
std
nop
das
data16
test
xchg
loopne
pminub
repnz
cmp
aad
mov
cmc
shr
mov
orb
pop
popl
pop
cli
insl
imul
out
jmp
data16
loop
sub
and
hlt
fcompl
pop
xor
push
jp
push
lret
out
and
push
clc
or
sub
push
cmp
movl
jle
adc
mov
inc
repz
fmull
test
lret
push
push
in
dec
pop
sahf
popf
cmp
and
cmp
outsb
mov
adc
test
push
repnz
jge
imul
xchg
aam
lret
ja
or
pop
stc
mov
mov
adc
cmc
loopne
push
fnstcw
or
shll
mov
jecxz
mov
clc
xor
xor
pop
jo
shll
not
mov
sbb
sbb
daa
sbb
orb
aaa
pop
add
sub
adc
popf
dec
insb
mov
xchg
jmp
sbb
movsl
aaa
mov
nop
adc
jmp
sub
mov
add
cltd
std
jge
fwait
pop
push
stos
repnz
fcomip
popa
ret
ror
adc
idivb
jmp
les
cmp
dec
js
mov
inc
movsb
scas
sbb
test
push
mov
cs
adc
pop
mov
fiaddl
xor
lret
daa
out
ficoms
mov
cmpsb
out
fsubrl
out
lcall
out
cli
or
shll
pop
ja
mov
scas
xlat
es
loope
mov
xor
jmp
push
cmp
sub
nop
or
pop
lret
sub
push
adc
dec
pusha
lock
ja
mov
loope
inc
stc
sti
add
rclb
xchg
xchg
aas
movsb
xorl
pop
sahf
cld
jp
shr
ret
int
mov
xchg
popa
loope
push
scas
insl
sub
jne
lcall
loope
add
ret
bound
loopne
insb
mov
xchg
inc
xlat
sarb
cmpsb
or
sub
orl
push
pop
jno
cmovno
dec
stos
mov
stos
dec
repz
das
daa
gs
aad
xchg
inc
stos
mov
out
lods
and
into
xchg
cmp
cmp
adc
stc
jle
xchg
fmuls
or
mov
push
repz
xchg
mov
jb
fadds
xor
outsb
pop
add
xchg
sahf
pushf
adc
add
fwait
testb
bound
setns
mov
sbb
test
xor
jge
xchg
aas
adc
and
mov
push
xor
push
xor
mov
sbb
cmpsb
dec
test
test
xchg
adc
sahf
push
xchg
push
pop
es
adc
xchg
jmp
jge
das
or
jmp
mov
outsb
jl
sti
lea
adc
js
rorb
out
mov
inc
cmp
push
shll
mov
subl
cmp
xchg
mov
jo
shrb
and
jp
hlt
mov
mov
lret
in
rolb
and
mov
xlat
mov
cmc
sub
into
xor
mov
cli
jb
xlat
xor
add
ss
sbb
repz
icebp
sarb
mov
pop
push
pusha
xchg
push
dec
es
mov
dec
inc
clc
mov
in
int3
mov
sub
mov
cmpl
lods
jmp
test
jae
cmpsl
lret
mov
xchg
push
lock
popa
xchg
outsl
xchg
add
popf
dec
inc
incl
cmp
mov
sub
pushf
out
aas
cs
inc
push
pop
and
sbb
imul
inc
push
mov
aas
jle
shr
bound
arpl
push
cmpl
mov
cld
mov
pop
fistpll
cld
ret
xchg
inc
add
adc
inc
mov
adc
sbb
sub
repz
or
aas
daa
inc
loop
xor
adc
std
or
lds
lea
and
dec
push
shll
xor
not
out
or
mov
and
addb
shlb
cmp
aam
add
aad
xor
pop
cmc
jge
xchg
insb
jo
andl
imul
jae
popf
jge
aam
jle
or
jmp
in
and
pop
ret
lds
les
cmp
lret
bound
sbb
leave
popa
pop
jle
mov
ret
jge
xchg
repnz
fldt
fistps
mov
add
xchg
xor
xchg
fwait
jb
dec
leavew
jnp
add
sahf
xor
cld
or
pop
dec
or
scas
ja
and
or
mov
dec
mov
out
pop
push
mov
push
out
stos
mov
lds
pop
sbb
data16
inc
push
pop
into
mov
xor
shll
mov
orb
sbb
jno
pop
push
iret
push
fistpl
adc
sahf
mov
adc
mov
mov
xor
adc
xchg
ret
inc
jl
loopne
mov
jmp
cmp
aaa
sbb
addr16
fcmovu
leave
mov
jnp
push
push
pop
mov
shl
imul
jbe
fisubs
sub
dec
and
fcoms
rolb
and
rclb
push
pop
fdivs
aas
sub
dec
mov
int3
cmp
rcrb
mov
mov
pop
push
imul
das
add
mov
out
mov
test
push
std
test
cmp
divb
sbb
in
aad
or
inc
push
jo
pop
push
popa
and
lahf
adc
daa
sti
cmc
repnz
imul
mov
mov
scas
sbb
xor
rcll
mov
or
lret
or
ds
call
jle
fwait
adc
rcr
call
push
cmp
test
std
sub
out
bswap
mov
fstl
iret
test
std
imul
fstpl
inc
jmp
sub
mov
test
aas
push
mov
popa
push
adc
sub
fsubrs
lret
es
xchg
push
or
pop
loop
cmpsb
es
mov
inc
add
rcrl
dec
adc
daa
in
arpl
out
orl
adc
cli
xchg
push
and
std
jno
or
repz
push
cmpl
aas
push
into
mov
inc
dec
dec
sbb
sub
insb
and
scas
loopne
pop
xor
mov
mulb
leave
cmc
jg
and
jecxz
call
push
aas
jecxz
in
jo
loopne
xchg
push
jle
xchg
daa
push
sbb
stos
test
shrb
in
arpl
ret
pop
icebp
dec
adcl
jle
pop
cwtl
push
adc
add
addr16
sbb
sbb
mov
nop
add
andb
fistpll
shlb
dec
enter
sbb
add
test
mov
ret
adc
repnz
stos
mov
lea
out
sbb
sbbl
test
pop
stos
jns
faddp
addr16
mov
xor
cmp
ljmp
stos
fdivrl
shr
test
mov
je
das
aas
and
fldcw
lahf
mov
or
and
mov
out
sub
aas
daa
dec
testl
mov
jmp
sbb
jnp
jmp
out
pop
mov
xchg
lret
test
jl
arpl
cmp
aam
sub
sarl
ljmp
cmp
mov
xchg
ss
and
sub
adc
cmp
sarb
shrl
shr
or
int
inc
xlat
and
pop
iret
inc
add
xchg
out
add
sbb
aam
inc
pop
fxam
and
aad
pop
ljmp
jge
adc
jp
scas
mov
dec
dec
xor
lock
xlat
pop
shl
jb
dec
xchg
push
ljmp
je
in
iret
xor
mov
or
push
call
inc
test
xchg
outsb
mov
mov
inc
xor
rclb
jae
mov
repnz
push
ror
cltd
or
int3
fsubl
ret
pop
xor
in
stc
mov
insb
aaa
jl
cmc
mov
jle
xchg
hlt
push
cld
ret
xor
outsl
xchg
add
mov
push
rcrb
in
xlat
or
sbb
xor
sti
out
das
addl
cwtl
xor
mov
icebp
dec
pop
pusha
scas
icebp
sub
ljmp
shr
inc
dec
sbb
pusha
inc
or
xchg
sub
adc
out
pop
test
xlat
repnz
adcl
push
mov
dec
jae
mov
aad
es
and
insl
and
cmp
cmpsl
push
loop
mov
nop
inc
stos
mov
inc
add
pop
xor
push
roll
rorl
sarb
or
lcall
and
sbb
push
lea
and
shl
je
or
inc
fs
aaa
mov
jbe
lock
pop
lods
outsl
xor
scas
stos
orl
lret
call
and
mov
sbb
cmp
adc
sub
sub
stc
mov
adcl
inc
dec
lods
pop
xchg
and
pop
adc
push
loopne
jge
ja
inc
jno
xlat
adc
xor
jmp
pusha
test
mov
loop
mov
scas
cwtl
pop
insb
mov
push
sahf
fiadds
mov
fmull
pop
lods
sbb
jns
xor
movsb
pop
imul
fldlg2
cmp
rcrb
cmp
je
xor
sub
mov
cwtl
popf
xor
dec
dec
and
pop
das
repz
cmpsl
jns
push
push
dec
push
push
pop
rcr
popa
test
fisubl
scas
je
add
ljmp
xor
jns
xchg
jbe
pop
iret
iret
sti
sbbb
lret
mov
stos
cs
mov
rclb
enter
adc
cmp
sbb
outsl
iret
and
push
dec
mov
subl
jmp
dec
in
loop
andl
pop
rol
outsl
adc
xor
ret
or
jae
pop
popa
popf
movsb
xchg
mov
add
inc
negb
hlt
iret
data16
push
dec
je
inc
adc
clc
pop
repz
sti
inc
sbb
stos
test
loopne
cwtl
int
sbb
in
cmp
fnstcw
xor
xchg
dec
mov
movb
mov
nop
loopne
fisubs
imul
imul
repnz
mov
aas
aaa
pop
sahf
repz
mov
inc
sub
or
rorb
mov
xor
mov
xchg
cltd
jmp
mov
out
test
xor
les
mov
out
add
jp
pop
ljmp
div
dec
mov
dec
adc
mov
mov
pop
mov
out
enter
dec
mov
bound
lock
push
add
and
push
xor
imul
mov
scas
push
hlt
pushf
jne
leave
bound
inc
adc
pop
xchg
or
add
insl
mov
sub
mov
scas
xchg
scas
arpl
dec
in
push
ljmp
repz
call
adc
cld
pop
pop
idiv
xchg
sti
mov
bnd
insl
pop
pop
repz
jbe
cltd
jmp
inc
pop
stos
inc
loope
test
fcmovnu
lods
mov
and
outsl
dec
arpl
dec
pop
xor
and
jb
sbb
xchg
xchg
mov
jl
je
imulb
in
dec
inc
daa
push
mov
enter
dec
adcb
leave
es
rorb
and
xchg
mov
idivb
sub
adc
cmp
lea
lret
or
cmp
sbb
jg
add
jns
cwtl
or
sub
fs
rcrb
or
mov
mov
mov
addr16
ja
sar
popa
xchg
ds
jg
cli
cld
mov
mov
dec
lret
sbb
mov
and
mov
test
cmpsl
jo
sbb
mov
jmp
aaa
xchg
call
icebp
ljmp
cli
mov
or
and
lret
mov
dec
push
push
xchg
fs
lods
leave
shl
cmpsl
jmp
sbb
cmpsl
jle
fst
lods
cmp
dec
add
aad
lods
and
pop
or
cmp
mov
in
movsb
push
mov
jmp
sub
dec
je
out
cmp
adc
sbb
sub
sar
push
je
cmpsb
push
daa
cmpsb
and
call
xor
in
rorb
add
mov
hlt
gs
cmp
mov
inc
xchg
sub
icebp
inc
push
in
mov
or
ud1
call
mov
or
push
jge
cmp
movl
push
or
rclb
mov
dec
sub
xor
push
pop
loope
test
xor
movsl
dec
xchg
mov
pushf
fcmovnb
frstor
loop
dec
jnp
inc
inc
pop
push
shlb
lcall
test
out
mov
or
pop
mov
and
nop
cmp
cmpsl
cltd
xor
jae
push
mov
add
repnz
cmpsl
xor
pop
pop
mov
popa
sbb
sbb
add
loop
jge
mov
and
mov
mov
rcrb
out
nop
fwait
loope
std
xorb
push
add
ret
add
xchg
xchg
lds
sbb
stos
sbb
jbe
mov
rcr
dec
pop
push
dec
and
sub
and
dec
stos
jp
xchg
sub
xchg
fsub
inc
mov
mov
lods
sbb
lcall
loope
sbb
fninit
sti
mov
mov
loop
leave
sbb
aas
add
stos
and
and
sar
mov
inc
jge
inc
push
sbb
ss
cmp
lea
pop
pop
stos
sub
lock
andnps
xchg
jmp
lahf
mov
dec
push
out
xchg
and
xchg
insl
sbb
cmp
dec
mov
ret
lret
push
movl
push
mov
ja
js
gs
stc
cmpsb
imul
and
out
ret
loope
pop
jae
push
cld
add
cmp
mov
lcall
jg
ror
push
adc
test
hlt
push
pop
popf
mov
pop
js
mov
inc
sbb
lds
xlat
inc
je
lods
push
xchg
push
lahf
push
dec
test
in
addr16
jmp
cmp
mov
push
mov
cmp
mov
mov
mov
mov
jmp
fcmove
es
or
sti
pusha
adc
pop
movsb
sub
cltd
jo
pop
sub
aas
mov
rcr
adc
inc
dec
pop
bound
jl
lea
std
arpl
dec
in
xchg
jmp
push
mov
or
mov
adc
iret
push
stos
orb
test
fildll
loop
shrl
push
xor
popf
xchg
cmpsb
mov
jnp
lods
mov
jno
xchg
mov
mov
and
xor
cmp
pinsrw
adc
aaa
aaa
movsb
push
mov
js
dec
jne
ja
jmp
sub
add
idivl
lods
rolb
jle
push
loop
ja
adc
ret
loope
pop
repz
cltd
sbb
jbe
push
sbb
adc
xchg
push
gs
push
add
loop
sbb
inc
stos
adc
sbb
or
pop
add
lds
je
call
stc
push
in
xor
xchg
jae
in
dec
add
and
addb
fldl
frstor
aas
xor
sub
add
sbb
mov
scas
sbb
mov
mov
or
std
or
xor
jecxz
add
jnp
jns
lcall
call
add
xchg
ljmp
dec
push
mov
sar
adc
lcall
and
xorb
andl
xor
sbb
sub
fistl
pusha
insb
fucomi
cmp
int3
inc
push
jle
pop
jne
push
cmp
lcall
addb
mov
adc
daa
aad
or
imul
daa
mov
xchg
inc
jl
cwtl
subb
cmpsl
jp
lcall
mov
mov
and
pop
pop
and
sub
mov
fyl2x
rclb
adc
push
adc
ss
bound
das
mov
test
adc
cwtl
adc
pop
lock
enter
movsb
push
out
and
shl
inc
or
aaa
js
jmp
clc
sbb
cmp
mov
mov
idivl
cld
inc
jl
push
scas
int3
mov
addr16
xchg
out
pop
xchg
andb
pop
and
les
adc
fidivrl
sub
mov
loopne
mov
mov
fwait
pop
js
xor
sub
lcall
lret
cli
daa
dec
mov
movsl
lcall
dec
cmp
ja
lahf
mov
sbb
ficomps
mov
add
sbb
mov
push
rcl
sub
movsb
stc
jge
cmpsb
pop
cmp
adc
sub
xchg
js
subl
mov
xor
sbb
cld
jnp
or
psrad
lret
into
decb
xor
xchg
gs
add
jae
sbb
int3
in
notl
mov
add
xchg
and
xchg
int3
aam
and
dec
cmpsb
mov
xchg
mov
aaa
and
popa
push
adc
call
sub
cmpsl
push
and
jbe
and
in
jle
lret
jp
inc
xchg
fiadds
repz
shl
outsb
inc
idivb
cltd
out
lsl
mov
xor
pop
mov
inc
push
add
jle
inc
pop
sub
sub
call
hlt
xor
sbb
inc
pop
and
std
sub
repz
addl
popa
imul
inc
inc
add
repz
cmp
adc
daa
mov
push
clc
fdivrp
jge
cwtl
push
xor
or
mov
sbb
jnp
outsb
shll
repnz
stc
or
adc
pop
mov
cwtl
std
adc
hlt
push
insl
stc
jmp
mov
cmp
inc
repnz
push
scas
inc
jo
or
xor
sub
mov
or
gs
test
mov
insl
ja
in
lea
add
lock
mov
pop
jnp
push
inc
out
adc
roll
push
mov
jmp
xchg
arpl
and
insl
jb
std
dec
sbb
xor
and
in
mov
inc
icebp
mov
push
pop
adc
in
dec
aad
lahf
popa
push
mov
fwait
pop
lods
xlat
nop
pushf
aaa
push
mov
test
scas
or
fisubrl
jmp
inc
inc
outsl
mov
mov
sub
lods
out
cmpsb
fs
sbb
sub
rol
addr16
rorl
repz
mov
ss
adc
test
xorb
sbb
adc
mov
inc
xor
sbb
and
emms
jge
subb
inc
mov
cmp
out
cmpsb
ret
lds
mov
sub
jp
xchg
mov
sbb
pop
jl
stc
push
in
pop
daa
out
repz
fidivrs
scas
mov
ret
xchg
inc
aas
sub
inc
in
lret
jbe
aam
aad
hlt
test
mov
dec
sbb
or
insl
cli
sbb
cmc
inc
sbb
fiadds
mov
mov
ljmp
adc
pop
inc
lret
jge
lahf
mov
mov
pop
scas
pop
rcl
pop
push
mov
inc
jle
sti
cmpsl
lret
inc
mov
mov
lods
sub
cltd
ja
outsb
or
dec
pop
xor
into
jb
lcall
xor
testb
inc
push
cmp
rorl
or
idivl
xorb
int3
cmp
xor
adc
mov
push
cmc
js
sub
or
repz
push
mov
ficomps
push
push
jp
xchg
in
out
clc
jb
pop
mov
sub
xor
xchg
fs
add
xlat
add
hlt
and
push
adc
shlb
aas
shr
dec
sub
pop
imul
nop
inc
push
push
inc
push
or
icebp
jecxz
ds
les
or
loopne
andb
leave
sub
push
or
mov
ja
test
insb
in
int3
and
xor
and
into
xorl
lock
out
jmp
lods
sti
and
ss
dec
out
in
clc
adc
xor
das
inc
adc
stc
cmp
test
test
addr16
sbb
sub
stos
sub
push
mov
pop
jnp
or
cmp
imul
add
inc
ds
xchg
sub
cmc
int3
sub
ljmp
scas
and
data16
movsb
lcall
ds
std
dec
insb
pop
bound
or
push
jp
jecxz
sub
adc
sahf
jno
dec
push
js
jo
sbb
lea
jp
xor
fiaddl
or
les
mov
ret
fsts
fldl
inc
repz
or
add
xor
lcall
xor
fwait
sub
pop
or
inc
frstor
shl
addl
cmp
jecxz
jbe
scas
and
cwtl
cmp
ja
filds
ss
mov
decl
in
inc
shrb
fwait
es
mov
leave
or
lret
pop
inc
mov
ss
dec
rclb
unpckhps
push
cmp
push
repz
mov
or
lret
cmp
xchg
popw
mov
adc
fstl
fldt
sbb
fs
pop
mov
dec
adc
stc
rorl
dec
xlat
stc
mov
inc
adc
pop
or
fisubrs
dec
sbb
popl
pop
dec
dec
cmp
dec
mov
test
dec
stos
movsl
iret
inc
jp
dec
adc
cmpsl
mov
stos
dec
xor
sbbl
pop
adcl
pop
fs
das
and
sub
push
stc
lret
popa
push
sub
mov
ja
pusha
push
push
out
sbb
sbb
dec
gs
stos
test
pop
cs
rorb
dec
lret
lods
sub
mov
fcompl
xchg
mov
mov
xchg
daa
insl
cmpsb
in
xchg
jne
push
clc
xchg
adc
mov
fmul
bound
filds
mov
push
ret
mov
ja
inc
addr16
cmpsb
mov
xchg
outsl
sub
ret
leave
pop
lcall
jne
jb
xlat
add
cmp
jle
jecxz
mov
and
bound
mull
hlt
and
dec
pop
icebp
into
clc
das
mov
mov
or
mov
mov
mov
xchg
adc
aas
gs
mov
cmpsb
push
shld
xchg
xor
cmpsl
and
cmpsb
xor
imul
mov
jns
ret
ljmp
imul
inc
mov
into
aad
push
jns
jnp
sbb
pop
mov
adc
lret
jp
imul
mov
mov
or
into
mov
push
mov
jp
mov
xchg
xchg
stos
fcmovnu
jb
sbb
xchg
lods
mov
loope
jno
popf
push
dec
test
adc
sub
push
mov
sbb
pushf
push
popf
das
insl
pop
daa
js
lds
das
mov
sahf
inc
subb
adc
xchg
sbb
testb
pop
push
jg
push
in
popf
popf
shl
popl
call
stc
push
pop
sbb
push
insb
dec
and
mov
and
dec
or
loopne
in
aad
fcmovne
and
jecxz
jge
inc
mov
cmp
cmp
out
out
jg
fadd
ja
in
pop
out
xor
sarb
dec
xor
xchg
and
lret
cmp
mov
jo
es
push
jle
push
fcompl
push
lods
jmp
fdivl
cmp
lea
inc
jb
jl
mov
jbe
mov
popa
mov
mov
pop
xchg
or
stos
or
pop
es
or
xchg
cmp
mov
rolb
mov
xchg
add
icebp
push
loope
cmpsl
test
je
mov
mov
mov
aaa
outsl
and
xchg
add
sbb
push
inc
adc
mov
ret
cmp
les
iret
scas
addr16
imulb
mov
pop
and
js
cmpsb
jbe
loopne
cmp
push
pop
mov
mov
add
add
into
inc
ret
add
cmp
ficompl
dec
iret
mov
in
jae
push
pop
xor
jl
xor
pop
jnp
sub
fildll
out
enter
fucomip
in
fs
aaa
mov
sbb
rorb
xor
pop
popa
cli
cmp
outsl
into
adc
gs
iret
cmp
mov
test
cltd
fwait
push
lods
mov
push
repnz
testl
mov
add
or
dec
es
lahf
sub
lods
insb
and
sub
fldt
mov
rolb
jge
das
jg
gs
test
orb
std
xchg
in
inc
aam
push
inc
pop
test
scas
xor
test
push
test
icebp
cwtl
dec
mov
cwtl
fwait
popf
or
push
cmp
xchg
add
xor
xchg
mov
sysret
test
push
and
push
bound
aad
pop
xchg
or
scas
mov
xor
stc
scas
push
in
cli
mov
rolb
or
cmp
inc
jecxz
popf
test
data16
nop
in
sbb
push
xchg
mov
push
pushf
xor
int3
jb
arpl
push
push
jnp
stos
out
aam
mov
inc
sbb
shll
pop
das
divl
inc
das
inc
sub
xchg
out
xchg
movsb
int3
popa
aas
incb
pop
cmpsl
xchg
subb
out
stos
push
lret
mov
cs
stos
pop
jge
or
pop
inc
jge
fs
pop
hlt
adc
mov
dec
dec
cmpsb
jecxz
mov
js
xchg
xor
sahf
xchg
push
dec
imul
bound
cmpl
pop
inc
cmp
mov
or
je
jns
mov
test
scas
push
lret
movsl
stos
pop
cmp
lret
push
push
lds
mov
loopne
into
xor
aad
inc
out
stos
sahf
jp
add
cltd
jb
mov
or
jmp
jns
mov
sbb
mov
loop
sub
fimull
cmpsl
mov
loopne
dec
lahf
mov
gs
popf
popa
sti
into
dec
iret
adc
test
xchg
cmp
fs
mov
jl
movsb
push
fsubr
out
push
inc
dec
inc
adc
pop
jg
cmpsb
push
pop
out
mov
rorl
push
data16
cli
sbb
sub
sbb
pusha
std
imul
push
xchg
xor
stos
jno
test
sahf
adc
dec
test
lret
insl
add
jp
fwait
call
adc
add
inc
xchg
scas
xchg
jbe
jecxz
scas
xor
fldt
mov
pop
mov
xchg
cli
pop
das
ljmp
insl
lahf
jecxz
decl
jno
or
mov
and
push
push
push
and
movsb
inc
fcoml
sbb
test
bound
shl
notl
jno
dec
js
ja
cmp
es
cld
jae
inc
fistpl
jecxz
add
outsl
lock
mov
inc
push
aad
cmpsl
pop
movsl
push
dec
inc
sub
mov
pop
mov
jnp
scas
push
call
push
ljmp
out
int3
lock
mov
jnp
push
mull
stos
mov
push
dec
nop
mov
jecxz
jp
mov
jl
and
mov
ficoml
fsubl
mov
push
test
mov
pusha
popf
pushf
xchg
jno
push
lret
or
faddl
ljmp
sbb
ret
testb
mov
addb
sti
dec
push
cli
sub
xchg
fs
adc
movsb
data16
sbb
outsl
cmc
cld
out
imul
hlt
cmpsl
shll
inc
andl
xor
push
repnz
fs
in
jb
xchg
mov
imul
stos
jb
xor
es
icebp
xchg
rolb
jp
add
xchg
mov
xchg
mov
loope
xchg
mov
add
dec
jae
pop
ds
jo
mov
cmpl
lea
out
sub
outsb
xchg
mov
stc
mov
add
into
fisubrl
adc
xor
jg
sub
hlt
cmp
inc
mov
mov
push
push
push
repnz
mov
hlt
dec
mov
fadds
lret
sub
cli
pushw
pop
mov
mov
faddl
iret
inc
decl
xor
aad
sbb
repnz
mov
sub
imul
out
sub
add
dec
xor
ja
sbb
dec
adc
cmp
xlat
xor
insb
cmp
jno
outsl
leave
bound
imul
fisttpl
push
imul
xor
js
xchg
or
xor
fiaddl
sub
lret
xor
add
and
loope
or
push
or
repnz
push
push
in
pushl
imul
mov
ds
cmp
pushf
pop
add
sarl
or
push
orl
mov
lahf
pushf
flds
mov
test
sahf
inc
jo
dec
mov
push
inc
in
xchg
sub
icebp
out
add
into
push
out
push
add
stos
dec
adc
scas
imul
addr16
cmp
cmc
jl
aas
movsl
shll
lods
int
into
sahf
in
xchg
dec
pop
dec
rol
cmpl
xor
and
push
ret
shr
int
push
xor
and
subl
sub
push
std
dec
adc
pop
jne
popa
mov
mov
or
mov
ret
dec
push
mul
je
aaa
loop
sbbl
xchg
dec
ds
lahf
push
jl
mov
data16
push
pop
inc
pusha
arpl
sub
or
das
idivl
fcomps
sbb
cltd
sti
inc
dec
dec
and
dec
dec
or
xor
inc
xchg
pcmpeqd
test
cmp
or
push
mov
cmpb
in
add
adc
neg
mov
es
idivl
cmpsl
push
aam
xor
fs
jo
pop
das
sub
sub
fisttpll
push
jl
add
cmp
pop
cld
adc
mov
fs
dec
xchg
add
dec
ljmp
loope
mov
mulb
pushf
dec
push
ss
int3
mov
push
aaa
pop
push
dec
or
or
and
in
sbb
in
xlat
xor
push
fadds
dec
cmp
pop
xchg
imul
jle
pop
negb
xchg
and
dec
fdivs
enter
mov
fcmovb
pop
mov
mov
push
enter
dec
fsubr
pop
mov
lcall
push
in
jl
mov
pop
pop
lods
mov
or
inc
xchg
adc
adc
push
outsl
lods
fdivrp
dec
lcall
daa
jnp
les
mov
or
push
push
sub
or
fidivs
adc
adc
mull
lds
xor
mov
add
xor
push
imul
int3
cmp
loop
or
adc
pop
jbe
push
test
sbb
xchg
pop
xor
cmp
add
sub
pop
inc
adc
in
fsubrl
mov
bound
jle
cmpsb
lcall
fmull
sub
cmp
movsb
jmp
outsb
mov
inc
xchg
fsubr
mov
push
cltd
dec
jl
pop
ret
jp
sahf
setnp
and
addl
mov
inc
movsl
inc
mov
xchg
fmull
bnd
in
push
inc
xchg
mov
rcll
mov
mulps
repz
pop
push
test
mov
ret
inc
sahf
ds
sti
rol
push
aaa
xchg
aad
pop
sbb
add
ret
out
adc
repnz
cwtl
xchg
cmp
lret
je
loope
loop
or
mov
or
out
mov
mov
jle
xchg
cli
jl
subb
push
dec
mov
xor
pushf
jae
pop
rorb
cmpsb
mov
mov
xlat
into
jmp
inc
fsubrl
int
push
mov
enter
pop
lahf
orl
scas
hlt
shlb
dec
mov
adc
mov
movl
jge
aad
and
rclb
sub
mov
ljmp
popf
leave
mov
dec
loopne
pusha
jge
aas
sub
test
mov
je
ss
sti
lcall
or
mov
mov
ds
lret
dec
pushf
popa
arpl
adc
insl
aad
outsl
adc
push
cmp
cwtl
pop
pop
pop
lods
mov
lcallw
test
xor
bound
rorb
xchg
popa
cmpsb
cmpsl
mov
aaa
mov
in
cmpsl
fcomi
mov
bt
sub
and
push
dec
xchg
pop
int3
push
pop
insb
jnp
jle
xor
dec
jne
out
outsb
pop
xchg
cmpsl
sub
nop
popa
lcall
ret
xchg
out
mov
cmp
or
jmp
add
jmp
frstpm(287
jae
jmp
int
cmp
pusha
fwait
cmp
cmpsb
mov
ret
xchg
rcrl
fs
sti
jne
xchg
or
rorb
and
sub
fadds
repz
push
shll
cmp
pop
sub
ss
cli
pop
and
cmpsl
xchg
jmp
iret
or
les
movsb
jle
imul
test
daa
test
fmull
repz
shlb
cmp
xorl
xorl
mov
fdivs
jae
and
mov
sbb
inc
clc
mov
mov
cmp
and
add
cmc
test
pop
in
cmp
loop
pop
js
xor
adc
xchg
push
dec
sbb
cmc
sub
vrcpss
outsl
hlt
sub
or
mov
push
insb
jo
mov
jecxz
adc
and
push
rclb
pop
jne
loopne
jge,pn
and
enter
and
pop
pop
in
cld
inc
mov
imul
aas
lock
into
dec
and
adc
stos
sub
loopne
fiaddl
inc
sub
jnp
sbb
lock
pop
ss
mov
cmc
or
popf
mov
int
sbb
cwtl
jbe
inc
or
xchg
bound
xor
out
outsl
imul
out
mov
sub
stos
xchg
dec
xchg
enter
or
pusha
jmp
sbb
arpl
outsl
les
mov
mov
es
ds
ftst
sbb
jge
lret
rorb
testb
pop
std
xlat
shlb
clc
rclb
cmp
mov
ss
mov
push
mov
xor
adc
xor
mov
dec
mov
pop
test
daa
iret
or
sub
popl
cld
push
test
cmpsb
mov
out
sbb
call
insb
or
xor
dec
cmp
cs
sbb
nop
fwait
leave
cs
jge
stos
in
std
dec
xchg
fs
fimuls
lods
pushf
es
mov
inc
jg
jge
filds
inc
dec
add
test
push
in
mov
push
aam
cmp
mov
fistps
rorl
pop
sub
shl
repz
sbb
add
test
rclb
mov
mov
loope
mov
xorl
push
jae
rcll
fwait
push
enter
out
out
in
in
pusha
jmp
inc
sbb
adc
outsl
rclb
mov
out
imul
not
push
in
xchg
xor
push
sub
mov
jl
iret
mov
mov
lcall
push
sbb
mov
push
addr16
mov
xlat
test
mov
mov
aas
jecxz
inc
sub
jge
lret
loop
and
jo
imul
xor
jnp
cwtl
das
mov
gs
mov
repnz
mov
jge
mov
inc
lahf
outsl
imul
jge
adc
shll
mov
xor
enter
jecxz
push
cmp
repnz
mov
das
hlt
mov
jbe
es
data16
push
push
sbb
jne
pusha
iret
push
xor
pop
push
sub
mov
loop
rcr
lods
or
mov
add
ret
and
push
adc
lods
xor
ja
cld
gs
inc
cld
adc
stos
dec
push
jmp
enter
mov
cwtl
mov
xor
in
sub
inc
sbb
cmp
jnp
movsb
jp
or
inc
test
push
cs
ljmp
in
idivb
push
pop
cmp
rcrb
dec
and
dec
outsb
rol
cmc
sub
nop
nop
hlt
mov
cltd
jns
idivl
scas
xchg
mov
iret
dec
add
out
icebp
nop
push
sahf
data16
out
mov
xchg
insb
aam
mov
or
rorl
rcrb
dec
mov
cmp
test
xchg
jno
popa
push
or
push
inc
daa
imul
inc
insl
icebp
mov
adc
pop
mov
cli
vandnpd
scas
cld
mov
jle
aad
jmp
and
repnz
fsts
inc
movsl
pop
mov
aaa
rclb
pop
adc
sbb
stos
inc
std
push
ficompl
mov
inc
jb
xchg
sbb
lahf
lock
dec
cwtl
lods
dec
add
int
cmp
cltd
shlb
sbb
cwtl
mov
pop
push
aad
mov
lock
scas
push
jns
inc
cmpsb
cmp
cmp
es
jbe
push
pop
andb
nop
out
sub
xlat
adc
call
jns
and
jno
ror
loop
imul
jns
inc
inc
les
sti
and
jg
fsub
das
mov
xor
mov
mov
dec
mov
jmp
packsswb
stos
pop
das
outsb
xchg
xchg
lock
dec
mov
adc
icebp
cld
out
cmp
mov
testb
and
ret
jbe
mov
adc
aas
cmpsl
ljmp
sahf
jecxz
mov
stos
lcall
mov
orl
mov
mov
mov
inc
and
in
pop
aas
lret
pushf
test
mov
and
xor
cmp
iret
jmp
mov
lahf
dec
pop
decl
adc
add
xchg
psllq
pushf
sub
repz
scas
mov
scas
std
xchg
cmpsl
xchg
or
adc
fsub
pop
sub
mov
fsubl
fwait
and
out
mov
scas
lret
pushf
jns
out
iret
popa
jmp
cmp
jo
adc
fsubl
addr16
fisttpl
inc
mov
hlt
enter
insb
test
mov
mov
cwtl
sub
lods
push
and
mov
cltd
and
aaa
rcr
mov
and
cs
inc
pop
cmp
movsl
jno
push
jbe
test
cmpsb
dec
jo
imul
dec
aas
pop
jg
nop
add
add
push
add
mov
shl
fcomps
arpl
setno
or
je
bound
add
mov
icebp
dec
inc
jno
push
dec
mov
push
mov
sbb
outsl
mov
enter
push
arpl
or
jbe
mov
fists
insb
fidivl
mull
add
scas
pop
mov
out
jne
mov
mov
xor
test
mov
fisttpll
xchg
mov
repz
sbb
stc
out
es
or
xchg
xor
pop
xchg
cmp
sbb
sub
movsb
cmpsb
sub
xor
xchg
fucomi
js
xchg
push
pop
insb
test
cmp
xlat
mov
stc
mov
or
cs
stos
pop
ret
sbb
xchg
pop
sbb
enter
cmp
gs
inc
pop
fidivrl
daa
mov
and
fidivrl
ljmp
out
in
stos
jge
rolb
jg
or
icebp
int
sbb
outsb
fnstsw
test
mov
xor
les
pop
pop
jle
sti
fidivrl
and
xchg
push
mov
mov
hlt
fsub
out
dec
sbbb
sbb
xor
mov
in
xor
adc
inc
push
cmp
and
addr16
fldl
jge
xchg
imul
leave
lret
or
out
and
cld
pop
fs
loopne
rcrl
icebp
xchg
lahf
cli
add
mov
mov
fcoms
aad
fisttps
imul
std
cli
jle
cmc
pop
int3
push
inc
mov
sbb
pop
nop
push
mov
sub
jge
std
push
add
dec
cwtl
fldcw
xor
lahf
cs
xor
and
push
sbb
fnsave
sub
pushf
push
sub
or
pushf
mov
lea
add
notl
or
dec
shlb
mov
adc
jnp
sbb
xrelease
movsl
jns
rcrb
push
mov
insl
cmp
clc
hlt
out
inc
test
fcomps
orl
lret
jg
inc
int
sub
cmpsl
mov
jg
idivl
jb
lret
mov
cmp
adc
sbb
sub
daa
mov
popa
sub
lret
enter
jno
and
fwait
xor
push
int
xchg
inc
scas
mov
and
insl
cld
dec
int
xor
inc
push
cmpsl
sbb
out
les
aaa
inc
leave
xor
das
push
jno
inc
adc
xor
mov
sti
imul
ret
andb
out
jns
pop
lret
add
scas
pushf
in
cmp
sub
hlt
or
xchg
inc
nop
xchg
mov
jp
or
call
cmp
lcall
mov
mov
push
fdivrs
xchg
add
xchg
popf
hlt
jl
std
stc
mov
inc
loope
nop
push
mov
fstps
adc
stc
loop
movsl
sbb
mov
stos
fistpll
dec
mov
xlat
sub
ret
sahf
xchg
mov
add
push
sbb
scas
xchg
dec
push
adc
push
daa
adc
and
mov
pop
mov
shll
push
mov
mov
icebp
inc
les
js
lahf
or
shlb
fstl
xor
movsb
cmp
mov
xor
call
mov
sbb
out
mov
mov
dec
adc
push
nop
mov
into
pushw
fistpl
pop
ret
aad
insb
adc
jge
mov
pushf
adc
lods
push
jo
cmp
mov
adc
cmpb
push
insl
push
cs
data16
push
in
repz
daa
mov
aaa
in
sbbl
dec
sub
mov
popa
out
ds
pop
dec
lret
scas
cmpsl
jnp
mov
fnsave
sub
gs
push
cmp
adc
lea
inc
loop
std
inc
add
cmp
or
dec
add
push
ds
shl
jne
pop
pop
mov
test
dec
mov
or
ss
sub
rcrw
add
gs
arpl
inc
and
aas
daa
sub
les
cmc
testb
xchg
push
dec
cmpsb
sub
mov
dec
aad
and
movhps
aam
dec
inc
xor
lods
sbb
sub
push
pop
fsts
repz
repz
mov
xchg
loope
or
mov
mov
cmp
ja
popf
in
push
cmpsl
mov
add
jmp
cmp
dec
push
mov
jns
sti
nop
rcll
or
add
jmp
or
int
ja
push
int3
in
shll
xchg
bound
callw
sbb
imul
sbb
or
sub
sbb
jne
arpl
sub
ret
mov
ljmp
arpl
out
add
ss
out
sbb
xor
mov
cmp
push
jnp
cld
testb
test
sti
adc
out
mov
add
cli
bnd
insb
stos
inc
ret
dec
repz
cwtl
arpl
adcl
int3
sub
inc
iret
sub
and
dec
jo
sarl
iret
ret
xorb
cmp
jnp
xchg
call
dec
sub
inc
ret
adc
jne
dec
in
push
mov
xor
pusha
out
repz
jo
jmp
xchg
sbb
in
add
mov
movsl
ljmp
xchg
repnz
insb
xchg
gs
mov
pushf
popa
pop
arpl
xor
mov
fmulp
out
jg
ja
sub
push
add
pop
mov
das
ljmp
paddusb
pusha
push
sahf
push
cmpb
push
filds
lds
in
jno
mov
ja
xor
adc
les
xor
aam
cmpl
lods
jnp
adc
mov
jp
outsb
in
movsl
push
lock
jnp
mov
mov
pop
lretw
fs
dec
mov
mov
sub
ret
cmpsb
mov
dec
rcrb
jno
inc
jle
out
lret
in
jbe
shlb
cmp
mov
stos
subl
rol
sarl
sub
aam
cltd
cmp
push
xor
pop
rol
pop
cs
mov
jp
jp
dec
inc
leave
cmp
pop
int3
push
test
mov
jge
adc
xchg
es
repnz
pop
fst
cwtl
in
pushf
jmp
lret
mov
mov
iret
mov
pop
dec
dec
add
scas
xchg
std
mov
mov
lahf
sub
fimuls
stos
sbb
mov
dec
push
add
cld
nop
jae
loopne
mov
aaa
xchg
jle
mov
es
dec
xor
push
and
and
stc
mov
xor
push
fiaddl
push
mov
loopne
jecxz
mov
pop
fistps
mov
mov
int
jns
ljmp
pop
sub
xchg
in
jmp
sub
jl
xor
leave
pushf
push
mov
aaa
mov
xor
mov
subl
lret
mov
sub
int3
int
out
sti
outsb
shr
dec
es
shlb
cli
lcall
and
xchg
jecxz
cmpsl
ret
adc
xor
sbb
movsl
lods
out
dec
mov
dec
cmc
dec
push
ljmp
sub
iret
rorb
and
loope
mov
lods
xchg
aaa
std
or
cmp
xchg
sbb
push
xchg
mov
int3
sbb
test
pop
lret
sbb
add
push
mov
push
pusha
jo
cli
out
ret
jecxz
lret
sbb
sub
or
jmp
outsl
sbb
lods
ja
lea
mov
orl
adc
dec
mov
xchg
lock
dec
and
das
cld
addb
cli
adcl
sub
jae
mov
mov
mov
mov
xor
push
pop
sub
push
shlb
in
inc
fdivs
icebp
cmp
cmp
xlat
pop
adc
jno
movb
es
shll
jmp
mov
nop
mov
jns
jo
scas
in
fiaddl
push
out
inc
sub
lods
ret
push
dec
fcoml
lret
xchg
and
xlat
pop
test
stos
les
in
cs
and
arpl
test
enter
sub
sbb
es
fwait
sub
orl
es
sub
aaa
lar
and
popa
movsb
idiv
loope
ret
dec
push
rcl
sbb
icebp
rcrb
das
sub
cmc
sub
int
jnp
cli
fisttps
outsl
sbb
inc
xor
mov
movsl
push
shrl
loop
cmc
testb
pop
sub
outsb
out
cmp
mov
test
repz
cmp
inc
gs
outsb
pusha
pop
mov
inc
add
or
lret
push
sub
push
leave
pop
dec
in
push
dec
iret
pop
scas
push
cli
mul
xchg
hlt
adc
std
sbb
mov
sbb
add
xchg
xor
idivb
jmp
dec
dec
clc
repz
ror
insl
jbe
fcmovnu
in
iret
fwait
cmpl
add
iret
cld
lds
data16
sub
fcom
iret
mov
cmp
pushf
dec
addr16
pop
mov
jno
mov
incb
in
mov
or
roll
repnz
and
lock
hlt
data16
jno
xor
daa
inc
push
mov
addr16
mov
inc
pop
xor
cmpsb
sbb
xor
jno
mov
fadd
add
inc
dec
imul
outsb
je
mov
outsl
data16
pop
mov
push
call
inc
stc
in
pushf
clc
sbb
and
leave
dec
clc
das
cmp
popf
scas
cmp
xchg
fisttpl
cmc
fwait
scas
push
mov
cmp
push
adc
jle
fstl
imul
movsb
xchg
mov
into
jge
outsl
mov
sub
dec
pop
mov
stc
mov
lea
pusha
pop
add
jns
repnz
iret
inc
push
or
loope
xchg
and
adcl
add
mov
fistpl
cmpsl
push
shlb
call
adc
mov
cld
shlb
in
xchg
imul
fldcw
xchg
leave
add
or
in
lods
aad
inc
mov
jb
sub
fdivrl
loopne
dec
scas
xchg
or
xor
movsl
movsb
mov
sbb
mov
andb
loope
popf
insb
ja
push
add
lock
sarb
jp
add
or
aas
xor
rorl
push
js
or
cld
xchg
xchg
or
jbe
pop
mov
sbb
ss
stos
aas
dec
ljmp
inc
adc
loopne
repz
fadd
push
or
aas
mov
js
scas
push
inc
push
dec
cwtl
in
int3
adc
cmp
inc
ficompl
fimuls
hlt
fldl
les
stc
insb
add
xchg
cmp
cmp
jno
xor
rcrl
mov
shlb
stc
popf
sahf
add
out
loope,pn
inc
jae
cltd
sbb
mov
fwait
sti
dec
and
mov
in
inc
lret
inc
and
popf
and
mov
and
sbb
jae
call
cmp
pop
repz
jns
pop
pop
jg
adc
loop
jmp
nop
in
into
mov
cmpb
xchg
movsl
icebp
call
mov
jns
addr16
mov
cltd
adc
rcl
mov
dec
imul
in
js
lods
pop
lahf
jp
iret
movsl
push
jl
and
mov
or
js
push
loopne
mov
jle
jbe
sti
rcrb
push
cld
jno
cmp
inc
sub
in
adcl
aaa
ret
jae
fldenv
add
loopne
xor
imul
leave
nop
pop
movsl
push
test
outsl
icebp
shrb
jmp
cmp
aam
adc
fidivl
data16
xchg
xchg
ljmp
mov
cmp
jp
dec
jge
ja
or
add
sti
or
add
cmp
push
dec
sub
fs
cmpsl
fwait
xor
mov
idivb
cs
dec
iret
int
lea
in
test
das
fwait
fwait
pop
std
adc
sub
cmp
mov
fimuls
inc
jg
ds
adc
je
or
aad
pop
mov
pop
push
lret
aam
add
mov
sbb
or
scas
shl
rcll
inc
fdivs
dec
repnz
sbb
push
add
nop
mov
shlb
add
sarb
jne
sbb
mov
jg
test
pop
mov
fcoms
insl
lret
pop
hlt
adc
scas
mov
lret
inc
lods
das
hlt
lods
mov
and
aaa
je
xor
mov
mov
xchg
adc
jns
mov
mov
mov
mov
cmp
cltd
rolb
xor
xchg
sub
arpl
lret
call
lock
add
scas
push
aaa
clc
and
jge
nop
int
sub
cmp
dec
push
lock
mov
xor
call
lods
or
xchg
add
je
mov
push
or
push
mov
xchg
add
cltd
cld
and
dec
lret
inc
out
add
jg
loop
and
into
push
xchg
adc
sub
popa
mov
hlt
fcmovb
or
in
pxor
lcall
jmp
inc
cmp
dec
mov
adc
xor
or
das
xor
dec
test
rorl
fldl
dec
xorb
std
sub
inc
mov
lcall
push
repz
imul
shll
inc
sub
bound
xchg
lock
scas
pop
enter
cmp
dec
mov
inc
mov
add
adc
adc
jmp
or
or
add
mov
and
push
in
pusha
addb
pop
xorb
ret
mov
push
sub
stos
out
and
or
in
push
xchg
xchg
xor
sub
mov
mov
filds
fwait
adc
outsl
mov
ss
pop
adc
mov
cld
iret
fcoms
dec
fcmovb
lods
pop
lods
jne
adcl
jb
fisubrs
mov
pop
icebp
std
cmp
push
mov
fistpll
jne
mov
out
es
notl
add
in
leave
mov
jg
xor
pcmpeqb
push
out
pushf
ljmp
fistpl
test
arpl
mov
adcl
cmpsl
imul
test
shlb
add
sbbl
mov
shll
pushl
cs
movsl
sbb
movsl
xor
rcrl
sbbl
mov
fsubl
jle
ds
xchg
divps
sahf
test
inc
imul
shlb
inc
test
mov
ror
mov
and
fbstp
out
and
adc
gs
cmp
test
stos
aaa
xlat
mov
push
pop
jmp
mov
movsb
push
lods
adc
fcompl
pop
aaa
mov
mov
jo
test
add
push
iret
mov
dec
mov
iret
xchg
dec
xor
fsubs
add
or
sbb
pop
push
fidivrl
xchg
jl
cmp
push
jne
frstor
dec
adc
cs
cmp
and
or
sub
inc
adc
sahf
loope
call
mov
cli
cmpsl
add
fcompl
cmp
dec
xchg
sub
or
jae
mov
pushf
int
cmp
dec
iret
jp
pushf
pop
sub
in
adc
and
jae
shll
jp
inc
jbe
and
stos
cmp
bound
ret
adc
lods
js
sub
mov
jbe
fsubl
inc
lret
fildl
ss
and
push
loope
sub
in
iret
mov
or
lahf
and
cmpsb
sub
add
jne
stos
xor
xor
sub
jecxz
or
dec
sub
xor
jg
cs
rol
neg
icebp
jp
loope
xchg
jne
and
cmpsl
or
in
sub
test
popa
cmp
jo
addr16
scas
jae
mov
jb
movsl
cs
xor
pop
enter
mov
dec
arpl
icebp
es
aad
daa
in
fnsave
inc
loop
pop
repz
cmp
mov
repnz
pop
sub
mov
sub
xchg
mov
adc
in
xor
xor
cmp
cld
xor
out
dec
dec
js
lret
icebp
xlat
in
popa
aam
push
test
sti
shlb
les
push
or
rol
push
aas
mov
fidivrl
mov
inc
xchg
cmp
sub
ret
shll
xor
inc
mov
add
inc
in
test
fstps
mov
sti
lret
sub
push
fidivl
adc
push
xchg
out
push
xchg
daa
into
jmp
xchg
cmpsl
mov
clc
add
shlb
sub
fwait
and
call
sub
mov
xchg
lret
pop
pop
scas
lods
jb
pop
das
mov
das
pop
pop
pusha
ja
in
enter
push
push
xor
fistpl
add
aaa
daa
ljmp
jle
push
hlt
subb
and
xor
fstps
push
in
mov
xor
jo
inc
popa
push
orb
sbb
mov
fld
xor
imul
or
xchg
xor
cmp
lahf
jo
adc
jecxz
ficoms
sbbl
out
aam
or
js
adc
mov
lret
or
imul
lret
addr16
clc
xchg
clc
cwtl
adc
push
enter
popa
inc
sbb
sar
outsb
sbb
int
cmp
or
lret
cs
pop
lret
rclb
jb
rcrb
mov
pusha
mov
adc
jge
insb
cmpl
mov
add
cli
mov
or
out
dec
rolb
xor
xor
in
movsl
shrl
jnp
and
xlat
jecxz
stos
mov
ja
xor
or
es
out
sub
push
pop
mov
in
in
scas
xchg
and
pop
mov
rclb
sbb
adc
jle
cmp
cmp
dec
les
cmp
jae
mov
dec
sbb
fsts
mov
pop
inc
cwtl
mov
ljmp
fistpll
adcb
test
push
jne
and
xchg
ss
sub
clc
add
sbb
jb
cmovl
sbb
pop
fisubl
ja
lods
fwait
mov
push
ljmp
out
add
decb
push
mov
add
addr16
out
mov
pushf
sbb
push
pop
mov
or
xor
fsubrp
adc
xor
push
xor
lcall
stc
cwtl
mov
pop
ret
loopne
pop
sub
nop
push
fcoml
pop
cs
ja
sahf
push
dec
pop
ds
dec
mov
jl
and
sarb
lahf
mov
inc
sbb
shll
lahf
sub
icebp
ss
cltd
out
mov
cmp
jle
mov
pop
fcomi
xor
addr16
lods
pop
stos
adc
lods
leave
lods
mov
jno
mov
mov
lahf
sub
sub
aam
xchg
dec
mov
ret
repz
sub
mov
clc
pop
sahf
or
movsl
sbb
adc
adc
ret
sbb
leave
inc
lods
pusha
outsl
inc
out
or
mov
sub
outsb
xchg
ja
pop
lcall
daa
xchg
inc
adc
out
push
insb
mov
mulb
jo
and
pusha
sbb
xchg
mov
dec
clc
call
xlat
mov
daa
lock
mov
sti
aad
fisubl
adc
sub
adcb
xchg
mov
dec
xchg
or
xor
jge
jmp
movsl
daa
mov
mov
ja
sbb
lea
add
test
mov
jp
xor
xor
pop
dec
jns
pop
push
lret
cmp
xchg
cmp
sub
pop
jl
push
inc
cmp
adc
mov
cwtl
lock
or
pop
pop
jmp
adc
pop
and
xchg
add
sbb
aas
push
enter
shrl
adc
out
aas
leave
xchg
add
cmp
loop
test
cld
jge
xchg
sub
insb
add
sbb
xor
add
xchg
mov
xor
rcr
mov
xor
icebp
daa
jg
orb
xor
mov
cmp
pop
out
mov
movsl
xlat
sbb
pop
ljmp
and
pop
mov
pop
cmpsb
push
jmp
mov
xchg
movsl
adc
mov
mov
jbe
daa
sub
mov
jl
leave
testl
cmpsl
insb
mov
xchg
imul
pop
rolb
shlb
rcl
andl
aas
mov
jmp
ficoms
push
jbe
imul
pop
mov
mov
nopl
outsl
pop
orl
mov
fwait
mov
pop
lcall
ds
xorb
out
out
js
fstp
push
pop
jno
sbb
test
loopne
cld
std
mov
pop
ja
in
es
lcall
shr
xor
push
aad
lock
push
in
jns
fistpll
loop
dec
in
leave
dec
lcall
and
notl
pop
add
inc
pushf
xchg
mov
mov
jbe
jae
fwait
in
jo
xchg
fdivl
mov
push
pop
dec
lret
adc
fistps
inc
testb
jne
cwtl
stos
outsl
lahf
in
mov
movsb
iret
xor
out
or
pushf
adc
out
pop
inc
test
ret
movsl
push
mov
add
fstpl
fsts
pop
fimuls
xchg
mov
sahf
or
push
cli
mov
pop
cmpsb
das
loope
mov
rcrb
pop
mov
sahf
fstpt
insl
sub
stos
mov
stos
add
cmp
xchg
aad
daa
jp
add
xchg
pop
stos
arpl
ficompl
jo
out
aaa
mov
fnstcw
push
movsl
sub
jecxz
je
and
push
mov
mov
jge
pop
cmpsl
into
out
lahf
mov
or
sbb
xor
mulb
ficompl
out
lds
sahf
xchg
inc
rcl
jno
rcll
xlat
stos
inc
movsb
hlt
loop
xor
sti
sbbb
xchg
jg
sub
fisttpl
dec
sbb
pop
sbb
shlb
adc
sbb
cmp
dec
ja
in
enter
insl
sub
fisttpl
push
mov
lret
mov
sub
call
dec
inc
scas
rolb
stos
loop
iret
test
addb
rcr
movsl
nop
nop
cli
clc
out
shlb
jbe
mov
movsb
mov
sub
sub
xchg
mov
movb
sub
shrb
jne
ficoml
lds
out
cmpsl
repnz
and
adc
cs
test
and
pushf
or
imulb
mull
add
dec
aaa
pop
mov
repz
adc
test
inc
dec
add
or
in
xchg
sbb
mov
mov
subl
out
add
adc
das
leave
push
cwtl
enter
repz
xor
mov
adc
mov
insb
inc
movsl
and
jne
lds
sbb
jl
stos
and
jo
xchg
call
int3
lret
push
lcall
je
push
xor
addr16
push
je
or
sti
pop
push
dec
loopne
xor
jns
sbb
dec
stc
xor
add
loope
xchg
or
jg
bnd
and
or
add
jnp
out
push
inc
jnp
loopne
mov
aaa
out
cli
mov
addl
fcomps
loopne
pop
clc
mov
jl
mov
les
out
xlat
lods
stos
mov
test
push
mov
push
pop
mov
out
add
pop
mov
daa
sub
mov
jns
int
sub
sub
push
push
xchg
pop
xor
mov
sbb
popf
ffreep
pop
xchg
into
pop
stos
jbe
inc
push
jg
cmp
imul
sbb
stos
and
xor
fiaddl
cmp
mov
fistpl
popa
enter
jb
stos
sbb
push
inc
std
jle,pn
mov
dec
inc
test
test
mov
jo
lods
dec
push
bound
fcoml
das
or
xorl
imul
jecxz
sub
mov
xlat
xor
loopne
push
cld
aaa
sbb
ficomps
bound
lahf
cmpsl
cwtl
xchg
jp
insb
fs
push
clc
mov
lock
pop
lret
inc
int
into
add
popa
dec
bound
push
cmc
jae
xor
sbb
jae
push
push
shlb
cmp
mov
call
cmp
mov
stos
dec
frstor
cld
inc
add
je
cmpsl
ss
ficoml
pop
cmpb
mov
shlb
lock
cld
ss
imulb
hlt
cmp
dec
nop
pop
mov
icebp
sub
cmp
scas
shrb
lret
aas
sub
fs
pcmpgtb
orb
xchg
pusha
jmp
int3
movsb
mov
adc
fcmovu
jecxz
adc
hlt
loop
inc
aaa
in
or
dec
dec
xchg
inc
mov
jmp
stos
icebp
js
repz
cwtl
adc
pop
jecxz
xor
js
cmp
inc
dec
add
pop
out
ljmp
sub
mov
loope
jge
nop
sub
out
mov
js
mov
pop
mov
ror
jmp
imul
testl
push
dec
mov
jp
es
fstps
mov
sbb
test
inc
das
lods
mov
in
popf
out
js
rolb
sub
out
sub
cmp
pop
pop
fnstsw
lahf
fisttpl
clc
aad
fwait
fs
push
insb
inc
add
test
stos
push
scas
pop
insb
aam
jge
and
mov
pop
add
adcl
ja
cltd
sbb
add
mov
and
push
inc
adc
inc
rcll
faddl
cwtl
mov
shrb
in
push
imul
jne
sub
and
arpl
aaa
test
inc
aas
jge
gs
fucomp
adc
fadds
jecxz
in
shll
mov
aam
dec
jbe
lret
pop
in
and
pop
or
add
mov
scas
pusha
mov
and
in
push
pusha
bound
std
mov
cmpb
lret
fsubl
fdivrs
xor
mov
xchg
sbb
js
jmp
dec
mov
push
jp
mov
icebp
cmp
xchg
out
rol
or
xchg
mov
fimull
inc
loope
fiaddl
lret
sahf
pop
frstor
pop
mov
int3
and
pop
scas
ror
cld
or
insl
add
xchg
push
mov
imul
pop
add
and
test
mov
jle
daa
fisubl
idivl
jne
and
std
out
mov
rolb
pusha
ljmp
sbb
pop
mov
pop
fisttpl
sbb
mov
outsb
movswl
movsl
loopne
cltd
mov
les
test
into
dec
push
stos
in
push
ficoms
popa
movsl
jne
aas
inc
rcll
and
xor
or
movl
mov
lahf
xchg
cld
cwtl
mull
rclb
cmp
add
roll
sbb
xor
mov
into
mov
icebp
pop
jl
stc
mov
fwait
push
leave
xor
pop
cmp
inc
and
and
repz
push
sahf
movsl
xor
out
ds
scas
mov
inc
pop
xor
jns
sahf
push
lock
fwait
sub
adc
mov
push
in
dec
stc
cmc
lcall
xor
mov
lret
nop
in
aas
stos
push
add
insl
adcb
pop
jecxz
test
mov
mov
lock
xchg
add
jle
mov
lock
mov
call
jb
lcall
jns
nop
in
stc
mov
data16
das
std
std
test
push
les
test
data16
in
std
imul
repz
addb
stos
mov
dec
mov
lods
or
xchg
cmp
sbb
sbb
mov
jmp
dec
and
addl
add
add
fbstp
loopne
lods
jne
hlt
sar
ljmp
fldl
xor
jb
mov
mov
mov
imul
lods
ljmp
mov
callw
int
sbb
jbe
jg
out
fsubp
push
testb
inc
sbb
push
mov
adc
inc
cmp
aas
pop
into
popf
imul
es
divl
add
push
sub
sub
jl
dec
aas
xor
sub
orb
mov
les
enter
clc
ret
clc
ljmp
jnp
jno
fsubs
dec
cmpsl
popa
mov
mov
sub
mov
inc
push
je
adc
sub
notl
jne
pop
fiaddl
mov
out
push
out
lcall
push
ror
xchg
mov
loop
xor
jp
xor
or
nop
xor
mov
fisubrl
xchg
dec
aam
sub
fistl
mov
enter
fbld
cmpsl
fmuls
andl
dec
mov
cmpl
push
insl
fdivs
mov
lods
jnp
rcl
jp
shl
sahf
aas
adc
push
int
dec
mov
xor
mov
leave
js
hlt
cmp
cli
adc
pop
and
mov
out
pop
mov
es
sub
jno
aaa
cmp
mov
sub
jge
inc
rorl
adc
je
push
dec
in
jnp
mov
rclb
jge
push
popf
xor
cld
das
pop
mov
sbb
shrb
xchg
inc
pusha
lahf
sub
and
xor
push
enter
jne
imul
jae
ret
cmpsl
cli
insb
das
divl
cmpsl
sub
pop
lret
rolb
out
je
lret
sbbl
xor
cmp
inc
ljmp
mov
pop
jge
fsubl
mov
dec
icebp
mov
jno
or
lock
dec
dec
out
lea
sbb
mov
cmp
gs
add
test
sbb
addr16
xor
push
dec
cmp
outsl
push
push
push
dec
pop
int3
ja
jecxz
xchg
addr16
leave
xchg
sub
xor
daa
dec
vmwrite
cmp
lahf
popa
jl
sbb
and
loope
aad
xchg
push
jo
xor
aam
ret
bound
stc
xchg
jbe
cltd
push
out
aam
ja
or
or
lahf
in
xchg
jnp
fmuls
cwtl
loop
in
and
push
xor
or
das
dec
inc
aaa
inc
imul
ret
sbb
push
mov
mov
mov
dec
data16
sub
add
xor
rcr
pop
mov
dec
and
ljmp
lidtl
scas
das
pop
lds
xor
lock
pop
add
aad
mov
loope
push
xchg
mov
popf
xchg
inc
les
jbe
popl
xor
pusha
fstpl
icebp
mov
push
mov
xorl
sbb
movsb
aam
or
push
fisttpl
call
mov
lds
movsb
rcr
dec
shlb
lcall
add
push
sub
mov
arpl
pop
fwait
or
and
lock
nop
jne
xor
rcl
jbe
adc
jne
inc
push
lods
pop
subl
pop
or
ds
cmp
fnstcw
mov
fsubp
loopne
jno
das
xchg
test
add
sbb
clc
rclb
lea
iret
xor
cltd
dec
add
adc
jmp
jmp
cvtps2pi
pop
ss
in
mov
dec
ljmp
div
mov
fcomps
mov
fwait
mov
loope
imul
sbb
jp
sbb
stos
xchg
and
das
lock
test
orl
es
cli
mov
or
xlat
pcmpeqd
dec
ljmp
scas
into
mov
pop
int3
sub
and
dec
fldcw
test
stc
pop
lahf
cmpsl
cmp
in
adc
push
and
mov
jns
sbb
dec
xchg
scas
xchg
movsl
cmp
in
adc
cmc
in
mov
jo
lods
shrb
jae
adc
jp
stos
int3
addl
fidivs
mov
fistps
mov
test
scas
repnz
loope
inc
push
push
js
dec
mov
jp
adc
mov
ja
xor
das
mov
cmp
jmp
inc
push
sbb
dec
test
cmpsl
outsb
pop
popa
leave
mov
movsl
and
mov
rolb
inc
push
sub
push
gs
jecxz
inc
lods
lods
sti
aas
filds
pop
test
pop
rorb
inc
jno
sahf
dec
inc
xchg
push
jnp
xor
stos
or
stos
test
jne
mov
jne
fidivs
call
push
andb
add
dec
pop
aas
ret
and
rcr
insb
inc
cmp
pop
cmp
sbb
and
xor
pop
lock
sbb
sub
decl
lock
ljmp
sbbl
xor
repnz
mov
mov
popa
les
push
mov
fidivl
into
and
ss
shlb
mov
sub
push
inc
mov
loop
fwait
inc
pop
and
push
out
mov
add
jmp
js
mov
lret
mov
es
mov
mov
push
sbb
mov
push
cmp
add
xchg
add
pop
ror
out
frstor
jl
ljmp
int
aas
push
inc
xor
popf
cmp
inc
aaa
ror
inc
ds
bswap
and
shll
ss
ss
mov
in
xor
pop
inc
cmp
adc
jle
jmp
pop
xchg
addr16
nop
inc
xchg
in
jae
gs
cmp
imul
mov
dec
loopne
popf
stc
mov
dec
inc
iret
je
push
mov
test
into
xchg
pop
mov
inc
jns
sub
push
inc
mov
icebp
sahf
mov
jecxz
or
add
leave
adc
inc
mov
jno
adc
jp
xor
xchg
jecxz,pt
arpl
push
add
lret
gs
stc
mov
pop
nop
aad
lret
and
lahf
popa
push
push
pop
mov
mov
aam
rcrl
js
xchg
xchg
dec
cmp
leave
rcl
out
insb
cmpsb
es
lock
inc
add
adc
adc
cli
outsb
test
es
ret
dec
xchg
jne
daa
lahf
sbb
sbb
mov
repz
xchg
mov
ret
sbb
data16
jbe
aaa
gs
push
daa
loopne
nop
dec
dec
fsin
jge
sti
ss
jns
sub
lods
dec
xchg
dec
xlat
outsl
pop
dec
sbb
cmp
sub
fdivs
pop
lahf
sbb
push
or
adc
push
push
mov
hlt
push
cmp
cld
mov
push
inc
jb
xchg
addl
lods
mov
cld
fiadds
fnstcw
loopne
aam
push
mov
test
outsb
out
ficompl
bound
push
jne
dec
mov
inc
ret
lods
dec
xor
out
insb
sahf
lods
stc
jo
arpl
mov
add
cli
push
xor
mov
nop
sbb
and
aam
jge
xchg
dec
icebp
imul
mov
cltd
nop
jg
jo
bound
int
sbb
pop
push
ja
lods
push
sahf
in
mov
test
pop
ja
dec
in
das
dec
adc
scas
loop
cli
mov
into
and
test
dec
mov
mov
xorb
cmpsl
call
inc
bound
ret
mov
in
jbe
bound
jmp
jge
mov
sbb
push
or
sbb
mov
jnp
aam
call
or
add
and
stos
mov
je
int
cmc
movsb
add
add
mov
jmp
xor
scas
pop
rorl
mov
aam
ret
jecxz
sbbb
inc
xor
in
adc
cmp
fistpll
pop
cmc
stc
push
mov
repz
and
jns
movsb
out
xorb
jns
pushf
adc
pop
mov
push
jg
xchg
fnsave
sub
inc
jno
in
lock
pop
shrb
mov
jecxz
lds
xor
imul
xchg
push
aas
sbb
sub
outsb
leave
jno
mov
and
loop
fwait
dec
addr16
or
pop
mov
lret
js
pop
in
inc
or
stos
lahf
and
inc
mov
dec
shl
adc
push
cmpsl
dec
fsts
jmp
xor
insb
sbb
lods
and
std
imul
pop
fs
and
stc
addr16
cmp
dec
jne
roll
in
xchg
mov
out
scas
test
arpl
mov
hlt
int3
mov
aas
dec
or
pop
mov
add
arpl
pusha
sub
mov
in
call
and
add
pop
notl
sti
inc
xchg
ljmp
or
shlb
xchg
cltd
insl
std
test
loopne
xor
mov
push
insl
push
loopne
decl
jge
lods
hlt
mov
pop
inc
lret
pop
ret
inc
jg
and
mov
push
ret
and
std
mov
adc
mov
dec
pop
loope
cmpsl
mov
dec
mov
movsb
stos
adcl
push
jb
mov
push
je
push
js
add
lea
adc
pop
cmp
dec
fisubs
test
cmp
hlt
dec
popf
or
outsb
cmp
jne
lock
rcrl
jmp
test
shrl
dec
call
mov
int3
divl
pop
add
leave
out
in
mov
jns
mov
mov
test
outsb
jns
xchg
nop
clc
call
mov
add
sub
jmp
popf
popf
push
push
mov
sbb
fs
scas
rcrl
inc
cmp
sbb
inc
cwtl
inc
or
loopne
test
add
aad
mov
loop
dec
clc
sub
pop
inc
dec
cs
rclb
mov
out
mov
sbb
pop
iret
das
icebp
sbb
jo
cltd
js
add
pop
push
adc
pcmpeqd
in
dec
mov
jle
test
movsb
repnz
mov
xor
mov
mov
lret
inc
fcoms
loop
scas
in
xchg
mov
xor
xchg
test
mov
into
xchg
or
out
jl
in
in
pushf
and
add
and
push
popf
inc
movsb
fstpt
rcr
adc
imul
outsl
ret
bound
ljmp
sbb
xchg
mov
inc
loop
push
int
push
out
push
jle
rorl
xor
jo
mov
adc
sbb
cmp
push
ljmp
mov
int
popf
inc
xchg
sbbl
out
lods
mov
jo
sub
dec
pop
punpckldq
and
testb
mov
jge
sbb
stc
aad
adcb
mul
mov
or
jo
jmp
leave
or
adc
push
add
aam
add
fidivs
inc
gs
inc
mov
test
mov
pop
pop
scas
jbe
in
pop
xchg
push
xchg
cli
pop
and
dec
mov
out
mov
xchg
gs
jno
cmp
cmp
xor
bnd
xor
mov
push
xor
movsl
mov
loopne
frstor
mov
xchg
std
mov
mov
int3
cmc
dec
and
leave
in
ret
imul
sbb
mov
lods
mov
sti
jno
mov
movsb
adc
jecxz
sub
mov
out
and
add
sbb
shlb
sub
add
lret
dec
js
setnp
jno
jg
mov
mov
addr16
mov
mov
into
inc
xchg
daa
add
movsb
frstpm(287
mov
out
mov
stos
mov
leave
xchg
nop
rcll
cmpsl
sub
inc
popl
pop
mov
dec
into
mov
add
out
les
test
inc
xchg
pushf
retw
scas
das
push
pop
cmp
into
das
popa
movsb
gs
sbb
pop
std
sub
test
fidivrl
mov
movsb
iret
add
sbb
lcall
int3
pop
jb
sbb
clc
cmp
push
ss
loope
addr16
lods
lret
out
pusha
sbb
dec
repz
leave
inc
inc
clc
cmp
orl
push
xor
lock
jae
andb
sbb
loop
xchg
jl
sub
decl
jnp
in
sbb
int
mov
sbb
in
xchg
fwait
movb
mov
or
imul
xchg
jnp
leave
fdivr
jo
iret
push
into
ret
xor
fdivrl
dec
mov
mov
sub
push
or
loopne
lcall
movsb
cmp
fidivrl
mov
sbb
push
outsb
inc
mov
push
xchg
flds
inc
jnp
repnz
in
adc
neg
lods
xor
and
test
fdivr
std
int
mov
mov
dec
sub
xchg
inc
out
or
cmpsb
mov
fisubs
incl
ja
lods
movb
imul
pop
dec
xchg
lock
mov
or
shll
popf
enter
pop
xchg
push
mov
and
dec
or
jmp
adc
inc
lods
sahf
jns
fwait
nop
into
and
mov
or
lret
mov
aas
fists
clc
add
decl
pop
xor
je
mov
stos
in
jb
pop
lds
loop
mov
adc
imul
aam
and
into
test
mov
dec
xor
inc
add
aad
lods
mov
mov
sbb
es
jg
pushf
add
out
shll
inc
cltd
xor
pushl
add
rcll
lcall
mov
inc
push
or
scas
loopne
cmp
fisubl
mov
and
retw
jecxz
pop
int
push
in
lcall
xor
push
js
clc
adc
dec
jbe
add
pop
xchg
pop
and
xor
lock
bound
fbld
sub
imul
outsl
ja
cli
push
shl
sti
mov
mov
sub
loopne
mov
sub
mov
mov
pop
xchg
insl
in
sub
enter
in
daa
in
ss
dec
add
push
mov
xchg
pop
sarb
push
repz
sbb
push
jbe
push
pop
and
inc
or
test
xor
sbb
test
mov
add
inc
and
clc
inc
aam
xchg
dec
mov
stos
or
and
scas
mov
adc
in
add
fldenv
pop
lock
inc
mulb
test
adc
push
es
push
aas
addr16
pop
or
dec
mov
add
and
sub
jmp
add
stos
push
inc
mov
and
sbb
pop
fdivrs
inc
sub
in
dec
imul
adc
mov
add
pop
test
and
jne
popf
pushf
mov
loopne
xor
or
push
jl
hlt
lahf
adc
sahf
or
dec
mov
fidivrs
sbb
cli
nop
or
movsl
mov
in
cmc
and
add
pop
or
xor
and
inc
jp
inc
or
sbb
lret
test
rcrl
idivl
cmp
lods
ds
add
imul
and
mov
out
push
sub
fimull
or
sbb
dec
stos
popf
fwait
jno
cli
rcrb
stc
mov
adc
push
dec
cld
adc
movsb
mov
scas
xchg
mov
pusha
jns,pt
pushf
jmp
and
imul
push
mov
adc
add
push
pop
or
je
test
xchg
or
adc
insb
clc
push
imul
mov
inc
pop
insb
test
push
out
lds
add
mov
cmp
pop
test
leave
fnstcw
pop
test
xchg
pop
jne
push
fiaddl
jecxz
mov
inc
push
fwait
std
sarb
xchg
pusha
or
stc
adc
add
xchg
ret
sti
pop
mov
lods
mov
loop
mov
int
pop
sub
xor
and
pop
stos
stc
insb
sbb
push
gs
adc
fstl
fisttps
std
mov
jae
xchg
dec
out
test
mov
outsl
or
xor
stos
stos
repnz
roll
sub
push
mov
sahf
data16
movsb
popa
icebp
ret
into
lahf
and
ds
push
adc
cmpsb
mov
aaa
pop
rol
popf
arpl
jo
xchg
stc
xor
dec
pop
jbe
daa
insl
or
dec
je
mov
jno
cmpsb
mov
mov
das
add
adc
addl
adc
or
pop
sub
adc
xor
push
loopne
sbb
fstl
push
ficoml
inc
in
mov
dec
mov
lds
hlt
mov
cmc
sbb
aam
jmp
sub
pop
xchg
adc
fidivl
outsl
dec
clc
int
test
cld
rolb
scas
iret
andb
xchg
aaa
push
inc
jp
dec
push
mov
or
add
flds
cmp
movsl
pop
mov
scas
movsl
mov
ret
mov
mov
pop
sub
mov
add
jmp
fisttpl
xor
movsl
aad
jae
xchg
sahf
lahf
repz
push
adc
add
aam
xchg
jo
mov
xchg
fucomi
dec
ds
push
cmp
xchg
push
test
cltd
sub
lea
cmp
fxch
shrb
mov
adc
divb
or
add
adc
cmp
lcall
add
adc
or
enter
sti
push
loop
ficompl
popf
mulb
mov
fiaddl
faddp
adc
cwtl
xor
mov
mov
addr16
std
and
push
popa
repnz
push
out
and
jp
rcrl
lods
mov
inc
div
mov
push
cmpsb
add
testb
sub
out
sbb
stos
cwtl
fpatan
sub
lods
pop
mov
div
mov
xchg
inc
cltd
xchg
out
test
dec
xchg
dec
jecxz
scas
push
loop
mov
jmp
outsl
sbb
jne
aaa
movsl
pop
pop
lcall
jae
mov
pop
rcll
das
das
in
push
mov
adc
imul
cmc
push
pop
out
adc
rcrb
mov
addr16
jl
jge
xchg
popf
pop
sub
in
popa
mov
adc
cmpsb
lret
ljmp
imul
add
jp
test
movsl
add
outsl
rolb
imul
rorl
inc
cmp
xchg
mov
xor
loop
cmp
loop
icebp
aas
push
push
add
inc
pop
xor
push
test
outsb
or
cs
jmp
xchg
jbe
xor
dec
fldt
push
ljmp
scas
sub
js
lea
les
adc
jne
inc
fs
lcall
xchg
jl
test
mov
pop
jne
in
inc
sbb
movsl
adc
enter
data16
bound
out
fcomps
stos
mov
adc
rol
daa
jp
pop
push
push
sahf
fdivrl
in
aaa
push
lds
cmp
or
mov
push
mov
push
shll
cmpsl
sub
ds
je
adc
ret
rcl
xor
sub
lret
sub
push
jae
in
insl
ss
out
imul
lcall
mov
xchg
push
popa
jnp
xlat
push
repz
or
ss
mov
push
outsl
mov
shlb
daa
movsb
mov
ja
loopne
jne
adc
or
test
in
push
sbb
mov
mov
data16
nop
scas
fisubs
jae
shr
mov
popa
and
mull
cmp
outsb
stc
repnz
mov
sub
mov
pop
pop
pop
scas
lcall
dec
or
mov
mov
dec
es
fsts
pop
les
push
push
pop
xor
jbe
adc
ljmp
xchg
pop
dec
push
add
data16
inc
rclb
hlt
sbb
negl
sub
fs
add
and
and
bnd
add
dec
push
mov
lea
lahf
jg
mov
dec
inc
push
cmpsb
mov
pop
movsl
cmp
inc
and
test
jbe
add
test
inc
call
jne
jmp
dec
push
loopne
jo
js
mov
xor
xor
mov
aad
xchg
mov
mov
mov
out
inc
out
in
adc
adc
lods
gs
inc
dec
repz
mov
aas
cmp
xor
mov
push
mov
adc
ljmp
addl
sub
subb
dec
je
sti
cs
mov
cmpsb
out
test
in
adc
xchg
xchg
jbe
lds
push
and
mov
push
pop
hlt
mov
lret
sbbl
loopne
stos
pushf
push
jno
sbb
out
sbb
repz
add
or
ss
push
mov
cltd
add
mov
jge
mov
in
cmp
xlat
add
int
adc
aam
push
les
adc
mov
jae
sub
lock
adc
push
scas
mov
pop
test
jne
std
jle
pop
push
sub
and
pop
or
fbld
or
fbld
add
lcall
xor
aaa
push
test
sub
pop
mov
push
push
push
xchg
std
fistl
movsl
pop
cmp
push
fwait
cmp
idiv
sub
add
loop
loopne
mov
dec
cmp
adc
or
sbb
andb
mov
aad
and
pop
daa
enter
movsl
outsb
arpl
xor
js
pop
fwait
mov
shll
pop
sbb
popf
lods
pop
push
inc
xor
jp
imul
and
test
jp
sub
lea
sub
inc
sbb
cltd
iret
addr16
sahf
cwtl
enter
in
icebp
shrl
popa
sub
sbb
or
int3
jbe
repnz
out
sbb
inc
fistps
imul
or
pop
pop
jno
cmp
fidivrs
adc
ret
mov
mov
adc
stos
lret
stos
jnp
inc
jecxz
xor
jne
outsb
fldlg2
out
mov
out
in
sbb
push
movsl
call
outsb
in
xchg
sbb
mov
mull
jne
adc
jnp
out
or
outsb
enter
xchg
xor
fcomp
sbb
push
fimull
ret
push
popa
and
cli
xchg
ss
add
push
push
mov
les
icebp
xor
cmp
mov
adc
or
rcll
das
xchg
dec
fildll
movsl
mov
lea
pop
pop
push
lods
jecxz
imul
cli
enter
fbld
stos
push
arpl
shll
pushf
xchg
mov
inc
mov
push
ficompl
lock
xor
int
mov
lods
dec
and
fldl2t
les
outsb
lods
cmp
push
dec
repnz
fidivrl
mov
mov
xor
aam
jne
xor
or
cmp
je
cwtl
pause
arpl
inc
outsb
xchg
add
mov
repnz
jnp
test
repnz
scas
mulb
cmp
xor
out
movsl
mov
insl
jle
inc
loop
inc
cld
mov
das
inc
mov
sub
lods
sub
insb
mov
inc
icebp
sub
adc
insb
or
lock
xchg
stos
testb
scas
push
jo
xlat
sbb
mov
jnp
ja
xchg
jnp
adc
sbb
dec
xor
jl
and
dec
mov
mov
dec
mov
std
insl
xor
enter
or
pop
sbb
jnp
stos
cmp
aas
sub
inc
or
mov
and
pop
in
inc
fadds
bound
in
mov
icebp
loope
xor
scas
sbb
rcrl
test
dec
xchg
xchg
out
outsb
xchg
enter
dec
cmpsb
imul
insl
xchg
fsub
xchg
add
xchg
lcall
mov
in
xchg
dec
mov
setne
mov
xor
hlt
push
mov
out
jne
dec
pmaxsw
mov
inc
sbb
mul
mov
je
imul
add
js
leave
lret
jg
sub
rcrl
jg
dec
repz
inc
dec
jno
xorb
dec
sbb
xor
icebp
sub
hlt
mov
sbb
clc
gs
add
bound
movsb
jne
sbb
push
mov
push
mov
cmp
jnp
or
jmp
fwait
mov
sub
xchg
mov
cmpsb
test
adc
in
stos
cmp
loop,pn
jmp
mov
mov
cmp
es
cld
xchg
rcl
mov
sbb
and
push
and
stos
xchg
sbb
mov
out
fistps
inc
jl
popf
ja
mov
and
inc
ret
dec
and
adc
cmpsb
cmp
scas
in
adc
clc
fidivrl
inc
mov
outsl
sub
jge
icebp
xor
shll
sbb
test
jo
shlb
imul
pop
mov
repz
and
imul
fstps
in
jae
xor
testl
repz
ds
shl
in
dec
jle
pop
fisubl
popf
bnd
push
fs
js
popa
stos
sub
flds
adc
dec
addr16
dec
push
rcrb
leave
movups
popa
nop
pop
bound
mov
std
sahf
jg
cltd
cmp
push
or
sub
push
adc
int3
push
dec
dec
xchg
mov
push
sti
add
mov
pop
leave
pop
aad
pop
fsubl
dec
jle
pushf
add
scas
add
push
and
inc
sbb
lock
push
arpl
popf
push
mov
cmpsb
jbe
notb
imul
mov
jno
dec
and
xlat
clc
cmp
mov
gs
sub
jecxz
sbbb
inc
push
sub
mov
loop
inc
dec
fdivr
jno
cmp
scas
cmpsb
fldl
push
sbb
jb
lcall
add
sar
cmp
push
lods
cmp
push
push
aaa
and
aam
and
add
xchg
shrb
test
arpl
daa
loop
shlb
stos
dec
flds
mov
push
outsb
loope
dec
xor
xlat
call
jecxz
pop
mov
popf
sub
mov
cmp
inc
adc
xor
dec
inc
mov
mov
stc
fiadds
rorb
adc
test
and
mov
cli
stc
scas
cmp
adc
xchg
pop
pop
shlb
pop
push
mov
jnp
fs
mov
mov
jo
aad
push
ret
popa
fldt
jns
or
leave
push
outsl
incb
je
inc
fbld
int
int
popa
xlat
pop
mov
fimull
xchg
cs
adc
cmpsb
ret
fimuls
jno
test
aam
jbe
add
in
adc
push
pop
adc
inc
test
cmc
test
mov
or
push
jg
sub
shlb
adc
push
add
ret
push
or
add
xor
stos
fcomps
dec
xor
mov
ja
and
addr16
jne
add
push
movsb
rclb
fadd
mov
test
mov
cli
pop
fwait
negb
je
gs
jo
into
xor
mov
mov
test
dec
pop
mov
lods
out
sbb
mov
rorb
les
pop
in
andb
js
mov
stc
icebp
dec
xchg
inc
icebp
or
adc
cltd
orl
mov
dec
jns
dec
dec
das
movsl
aam
ja
aaa
mov
jae
dec
movsl
bound
sub
xlat
scas
test
fwait
test
mov
lret
cltd
popf
inc
scas
push
mov
push
mov
and
std
sbb
imul
xor
out
insl
mov
adcb
pushf
lods
dec
mov
jne
into
scas
rcrl
mov
lret
pop
adc
xchg
pop
xor
lea
repnz
cmp
call
insl
in
aad
mov
jp
mov
cmp
cmpsl
push
fbld
je
xchg
icebp
xor
mov
sbb
std
aam
iret
mov
popf
add
mov
ss
xchg
push
xlat
xor
pop
mov
filds
out
ja
jo
js,pt
push
jae
pop
mov
xchg
negb
in
cli
loop
mov
iret
stos
cmpl
data16
sub
stos
mov
pop
mov
imul
je
cwtl
loopne
daa
punpckhwd
dec
cmp
and
xor
lods
mov
push
mov
fmuls
mov
push
lods
dec
loop
es
lret
jo
cmpl
lret
jno
pop
xchg
or
outsl
jge
mov
enter
insb
mov
jecxz
xor
jns
out
sub
daa
jae
idivb
fsubrs
jb
stos
add
ret
in
ss
lods
or
enter
xlat
xchg
push
cs
add
mov
xor
int3
clc
xchg
cmp
dec
sarl
es
in
aad
push
js
mov
jecxz
mov
popa
jns
jmp
or
test
inc
mov
sub
punpckhdq
add
popl
bound
lahf
and
sbb
inc
std
sbb
out
sub
add
loop
dec
push
stos
mov
mov
mov
ret
xchg
pop
fucom
iret
popf
push
adc
cld
popf
data16
sub
mov
lds
jp
lods
lods
jo
sarb
test
lahf
pop
insb
mov
jge
pop
addb
ljmp
test
daa
roll
xchg
fwait
std
pop
or
xor
and
or
mov
js
or
lret
push
test
adc
mov
sbb
fnsave
arpl
mov
mov
shrb
scas
in
inc
and
push
push
ror
movsb
sti
dec
lcall
shll
loopne
clc
lods
mov
push
in
jbe
dec
cltd
fadd
sarl
mov
adc
sub
adc
gs
cmp
mov
mov
push
mov
mov
call
mov
pop
add
or
lea
push
jp
fs
cmp
mov
sti
jb
xor
test
and
js
jmp
lret
fdivs
sbb
add
stos
mov
jb
rcr
jp
mov
xor
mov
in
stos
int3
leave
push
pusha
mov
shll
push
push
sub
dec
sub
mov
push
hlt
xor
jg
bound
hlt
lahf
sbb
inc
xchg
xor
pushf
es
fcmove
mov
lea
mov
jp
dec
out
sahf
xchg
mov
dec
jecxz
sarb
xchg
jle
sub
test
test
dec
jbe
cmp
jle
and
out
mov
lahf
iret
xor
sbb
xchg
loope
aas
jg
cmc
pop
in
mov
adc
push
popa
or
icebp
push
push
pop
xchg
test
popf
loope
rclb
clc
sub
mov
shlb
clc
rcll
pop
sub
push
mov
lret
sub
push
pop
adc
pop
xchg
out
test
ss
das
adc
dec
loopne
test
or
push
enter
fdivrs
icebp
lahf
cmp
adc
mov
pusha
fdivrp
pop
scas
push
sahf
push
mov
outsl
call
test
dec
xchg
lea
push
out
shlb
das
or
fbstp
filds
xchg
scas
and
jecxz
js
lods
popf
push
mov
movsl
mov
xchg
mov
mov
fwait
in
push
movsl
inc
mov
xor
out
aam
inc
out
jns
das
mov
aas
es
fldenv
stos
mov
js
jge
adc
sbb
dec
pusha
mov
std
xor
add
popf
cli
or
inc
insl
shll
lcall
pop
sub
hlt
pop
and
mov
push
insl
sbb
jg
adc
in
push
inc
dec
call
sti
pop
sub
jle
pop
adc
pop
aaa
adc
dec
addr16
dec
scas
mov
ljmp
pop
push
testl
dec
scas
cmp
and
lahf
pop
cmc
mov
fwait
out
jbe
cmp
sub
js
loope
test
jo
and
enter
lods
das
adc
and
inc
in
mov
stos
and
scas
nop
jp
ret
out
pop
or
aaa
je
pop
or
add
dec
jae
sub
mov
addb
out
fmulp
test
cltd
xlat
add
hlt
shll
cmp
pop
mov
aaa
push
stc
adc
push
cmp
add
pop
xor
lock
jnp
scas
xchg
dec
cwtl
rcll
push
mov
addl
jge
js
imul
push
push
inc
cltd
pop
xchg
imul
shrb
sti
inc
fcomp
aad
data16
ljmp
outsb
pop
cmpsb
mov
mov
leave
aas
scas
push
cli
cmp
lock
iret
inc
mov
cmpsl
ja
mov
xor
and
shrl
cmp
pushf
inc
sahf
fildl
xchg
sarl
rolb
inc
and
mov
jae,pt
xorl
inc
adc
xor
sub
test
les
cmp
mov
out
mov
stos
ffreep
popf
and
or
pushl
ret
out
in
push
push
mov
outsb
fcom
lret
inc
rorl
sbb
lods
insb
and
mov
sub
ss
add
pop
mov
aam
stos
insl
in
in
pop
sub
int
dec
or
jge
aaa
sbbb
jg
mov
dec
and
cmp
or
mov
ret
push
arpl
mov
add
mov
mov
repz
sbb
xchg
xor
aam
test
jle
mov
test
lods
outsl
adc
pop
mov
sahf
mov
jo
cld
push
jns
push
add
fisttpl
jle
test
pop
movsb
jae
cmovne
add
fists
inc
cwtl
sahf
xchg
clc
sbb
adc
pop
cs
in
sub
stos
and
fcoms
push
sbb
test
lret
jbe
dec
fcmovb
pop
ljmp
mov
push
scas
dec
push
outsb
lcall
dec
dec
pop
imul
push
lods
xor
and
or
stos
popa
rorl
lret
mov
in
mov
stc
notl
es
in
mov
jns
push
aaa
gs
test
cmpsl
mov
loope
push
adc
cld
mov
inc
mov
adc
int3
inc
sbb
xlat
dec
add
dec
fwait
xor
fxch
test
jmp
add
pop
mov
add
jae
out
jl
leave
push
and
mov
or
ret
inc
or
loopne
mov
dec
frstor
fs
and
pop
stos
jmp
jbe
dec
lock
testb
cmpsb
inc
cmp
mov
push
mov
jg
sub
popf
enter
sub
fmull
mov
push
jge
test
cltd
adc
cli
mov
mov
xchg
mov
jns
jg
ret
rcrb
adc
sbb
movsb
sbb
cmp
push
in
stc
je
adc
xchg
jb
mov
mov
aad
in
cmp
push
push
mov
add
aad
test
imul
test
cmpsl
add
xchg
movsb
ficoms
cwtl
pushf
jno
ds
cltd
jg
out
sub
mov
pop
pop
jmp
fidivl
jne
les
dec
cmpsb
into
std
add
adc
rorb
inc
and
or
push
add
pop
or
outsl
add
add
sbb
jae
stos
push
xor
mov
enter
xchg
test
add
add
xchg
das
neg
adc
aaa
fnstsw
xor
sub
xchg
mov
mov
inc
pushf
xor
cmp
les
movsl
inc
ret
inc
xor
leave
cmpsl
in
lahf
xor
xor
inc
cltd
xchg
adc
fst
jo
or
mov
popa
outsl
mov
sbb
sbb
xchg
add
mov
sbb
jb
cmpsb
rcrb
jmp
ljmp
les
call
inc
ds
xchg
push
mov
push
cmp
jo
test
cmp
xor
in
xor
push
inc
dec
sti
xor
add
jns
adc
pop
js
jge
in
jmp
inc
mov
ljmp
fisubrs
pop
and
out
sbb
ja
shrl
daa
into
bound
push
push
cmp
popa
pop
sub
mov
mov
dec
inc
pop
xor
xor
jg
jmp
out
dec
cmp
pop
adc
sarb
aam
add
push
imul
xor
loope
fxch
dec
andb
fdivl
repz
lret
mov
dec
push
jmp
stos
dec
jmp
orl
add
arpl
mov
mov
aam
mov
loopne
gs
mov
ljmp
outsl
cwtl
sub
fwait
fwait
aam
sarl
outsl
cmp
push
jl,pn
dec
in
cli
cwtl
rcll
popl
aad
mov
mov
xor
sub
push
sbb
adc
imul
mov
push
cmpsl
adc
shrb
push
pusha
push
inc
lret
ret
add
fwait
arpl
iret
dec
test
adc
shrl
push
mov
out
pusha
jg
loop
out
loop
and
cs
in
xor
lahf
xchg
rorb
jae
mov
push
xchg
mov
repz
clc
mov
imul
aas
fwait
inc
push
pop
mov
and
aam
insl
or
out
inc
add
inc
add
xor
sub
sbb
sbb
mov
daa
xor
inc
inc
cmp
mov
pop
or
ss
jb
add
jl
push
insl
inc
fs
cld
negl
xchg
sub
cmp
xchg
push
pop
xchg
das
pop
sbb
roll
insb
cmp
insl
push
inc
dec
and
mov
mov
jle
fisubrs
push
adc
xchg
imul
popf
sub
and
out
mov
push
mov
add
jecxz
lret
out
sub
inc
sahf
fstpt
xor
cmpsb
out
fs
cmpb
repz
cld
jo
pop
pop
xchg
jmp
dec
adc
cmp
fsts
lcall
sbb
pop
add
lret
pop
loop
mov
xor
popf
mov
mov
shr
rcr
adcl
pop
mov
into
scas
in
adc
enter
imul
dec
rol
inc
nop
sub
inc
dec
fnstenv
cwtl
fldenv
gs
inc
out
daa
or
addr16
cmp
lock
shrb
xchg
cmpsl
repnz
enter
push
into
and
out
std
dec
out
repz
daa
mov
jns
inc
addr16
cmpsl
inc
or
scas
mov
sbb
adc
xchg
mov
mov
loope
sbb
lock
pop
clc
enter
mov
lcall
in
popa
pusha
inc
jmp
mov
mov
pop
sub
xchg
cs
and
dec
push
push
push
mov
sarb
arpl
xchg
popf
negl
mov
ljmp
dec
xor
jle
ret
mov
mov
in
and
mov
js
mov
subl
int
mov
jg
adc
mov
adc
cltd
xchg
or
movsl
jb
loope
lods
pop
aaa
scas
addr16
xchg
test
jecxz
mov
aas
jl
or
jae
xor
inc
test
mov
xchg
popf
div
rorb
fmuls
ror
loop
shlb
mov
jl
or
push
mov
sarl
adc
push
iret
dec
popa
dec
add
jmp
jb
popa
push
mov
add
fisubl
dec
adc
scas
lcall
mov
pop
in
int
push
jne
sbb
ja
pop
mov
dec
mov
sub
cltd
clc
dec
pop
stos
mov
dec
test
cmp
mov
xchg
or
or
xchg
jp
push
xchg
aaa
shl
gs
int3
adc
lods
and
sbb
loop
mov
sbb
mov
jbe
aad
push
cmpsl
lcall
cmc
outsl
push
rcll
ret
int3
add
lcall
in
add
push
sbb
jnp
addr16
mov
xor
push
fdivs
mov
dec
cmp
inc
cli
dec
xchg
xor
popw
dec
cmpxchg
push
and
push
out
outsl
xor
lcall
mov
insb
int
jbe
popf
mov
cmp
pop
fisubrs
cld
pushf
mul
cmpsl
xor
ret
fldenv
mov
rcll
jg
test
test
in
jno
aam
mov
repnz
sbb
pop
mov
dec
jmp
or
lock
xchg
cli
test
bound
punpckhdq
adc
fldenv
and
mov
xchg
mov
cwtl
lock
sub
or
jb
xor
dec
lods
push
xor
push
xor
ror
sti
inc
pop
push
shll
sub
outsl
bound
push
dec
incl
addb
mov
push
pop
jne
lcall
sub
lds
popf
cli
mov
test
cld
jg
mov
and
and
cmpsb
dec
cmp
arpl
pusha
jb
pop
rcll
movsb
xchg
sbb
fstpt
or
aam
cmp
jge
mov
jmp
push
xor
dec
rolb
loopne
dec
shll
sub
mov
and
xchg
dec
nop
fst
mov
pop
daa
dec
fsubrp
xlat
adc
xchg
xor
sbb
jae
rcrl
ja
stos
mov
mov
and
jecxz
or
push
shrl
int
xchg
jb
and
rcrl
fsubs
pushl
pcmpgtd
xor
sti
dec
pop
push
dec
dec
sub
les
sub
push
or
xor
jmp
add
test
loop
lea
popf
pop
test
mov
cmpb
test
dec
pop
sbb
mov
xor
adc
outsb
bound
push
movsb
lcall
add
xorb
mull
arpl
aaa
scas
jae
cmp
mov
imul
mov
das
inc
or
xchg
lock
jle
inc
mov
add
fcmovnb
add
mov
adc
dec
lcall
fdiv
add
inc
pop
fldt
test
jno
test
lret
cmpsl
mov
fstl
out
mov
jae
prefetchwt1
das
pushf
div
jg
sub
push
jnp
and
xor
out
sub
data16
jmp
inc
ret
movd
cmp
add
mov
movsl
cmp
mov
mov
or
xchg
jge
xor
daa
stos
pop
fisttps
jmp
push
popa
in
test
sarb
lret
shrb
sub
mov
jae
mov
add
in
sti
stos
loopne
push
test
rcr
fcmovu
out
mov
adc
inc
fstl
adc
loopne
lods
icebp
jns
push
cld
aam
dec
jbe
inc
into
push
call
dec
outsl
mov
mov
test
mov
dec
or
ds
mov
or
imul
sub
insb
pop
mov
mov
inc
lahf
popf
or
lret
les
aam
cli
xor
mov
push
scas
arpl
mov
cmpb
xchg
int3
lods
cwtl
lods
jbe
mov
inc
lea
ja
ljmp
daa
insl
push
rcrl
cld
out
loop
dec
push
arpl
add
push
push
sbb
xor
push
pop
movsl
cwtl
xor
jo
xchg
sbb
mov
cmp
dec
fldpi
lcall
stos
mov
shll
outsb
fistpl
lods
sahf
enter
int3
shl
inc
pop
clc
and
or
push
int3
loop
std
cmp
cmpsb
sti
push
test
dec
in
repnz
and
push
mov
mov
cmp
aaa
xchg
and
inc
aam
pop
insb
inc
sti
jg
lcall
pop
cmpsb
sbb
iret
into
addr16
cltd
out
ss
or
inc
inc
std
sub
setge
cmp
test
dec
pop
cwtl
push
mov
sub
hlt
xchg
and
push
and
loope
pusha
sub
out
popa
aam
jp
int
dec
push
mov
mov
xor
pop
and
in
inc
jns
roll
outsl
movsb
xchg
push
pusha
call
fwait
cmp
jle
dec
jge
mov
aam
jg
outsb
mov
loop
imul
mov
dec
dec
or
daa
sbb
insb
or
inc
mov
xor
clc
mov
scas
mov
out
xchg
push
or
pop
cs
inc
cmp
cmp
out
test
mov
je
in
inc
xchg
add
sbb
adc
mov
inc
add
pop
ss
je
nop
pushf
cli
xorl
pop
mov
push
push
jae
jp
jne
jo
imul
inc
std
scas
scas
subl
leave
js
cmp
lods
js
sub
add
hlt
mov
lahf
rorb
dec
stc
cmp
sub
and
stos
cwtl
fcompl
lds
add
ret
mov
nop
mov
cwtl
mov
leave
xor
sbb
ss
lret
xchg
mov
faddl
sub
imul
daa
inc
mov
scas
js
imul
fs
in
scas
inc
lret
sahf
test
negb
lcall
sbb
xchg
in
sub
dec
dec
pop
jb
add
outsl
xlat
jg
adc
call
push
mov
pop
gs
mov
pop
les
mov
inc
and
mov
je
mov
pop
test
dec
mov
adc
pop
mov
ficompl
inc
xchg
out
mov
add
jmp
sub
add
jle
into
mov
xchg
imul
and
mov
pop
inc
jno
jns
popa
inc
or
xchg
std
and
icebp
mov
mov
arpl
in
add
sbb
pushf
sti
adc
or
xchg
in
xor
icebp
ret
out
lods
mov
dec
cmc
xchg
hlt
adc
pop
cmp
shll
inc
fidivl
ret
sbb
push
addr16
data16
jge
test
pop
dec
adc
jg
popf
in
push
loope
repnz
cmp
fildll
mov
sbb
aad
pop
in
push
xchg
pop
in
js
into
fdivrl
sub
mov
inc
mov
mov
gs
and
pusha
orl
fmull
dec
dec
and
sub
andl
addb
popa
or
push
rcr
lock
jns
cmc
mov
aaa
jae
pop
xlat
fstp
jmp
pop
leave
sub
aas
movsb
iret
mov
xchg
out
ss
or
push
jno
js
test
add
imulb
jg,pt
stc
mov
mov
pop
scas
ja
fadds
mov
or
mov
outsl
add
popf
outsb
mov
or
inc
hlt
out
faddl
cli
sub
arpl
aas
je
push
out
inc
sbb
outsb
add
pop
and
test
cmp
test
lcall
xlat
jle
shr
mov
repnz
aas
inc
inc
repnz
test
xor
xor
scas
fsubrs
xor
mov
into
and
and
dec
testl
insb
test
sbb
xlat
cmpsb
rol
sub
push
push
jnp
jp
inc
pop
dec
repnz
xor
or
and
or
jp
sub
and
insb
mov
push
andnps
xsave
push
jno
add
pusha
sti
mov
into
mov
push
jl
mov
or
mov
int3
pop
jbe
mov
cmp
mov
inc
inc
sbb
lret
dec
jae
ret
add
int3
int3
sub
scas
or
mov
dec
cmpsl
mov
test
mov
inc
nop
push
sarl
es
adc
stos
mov
cmpsb
dec
mov
inc
inc
mov
mov
dec
sub
lea
hlt
and
jno
pop
pop
push
jo
das
pop
repz
data16
fdiv
dec
in
mov
lds
jecxz
mov
cmp
pushf
dec
call
mov
test
dec
mov
xchg
push
mov
xchg
mov
jo
jg
mov
xor
sub
push
test
pop
sub
pop
push
gs
scas
push
or
and
lea
dec
jmp
pop
push
ss
lea
inc
loopne
jecxz
xor
jne
sbb
xchg
nop
sbb
cmp
push
pop
les
imul
scas
insb
cmc
cmpsl
mov
jno
popf
frstor
pop
push
adc
sbb
inc
pop
jl
xor
xor
cmp
push
push
mov
push
and
subb
notl
sqrtps
fldcw
orb
adc
sub
stc
jno
push
jnp
cmc
std
in
scas
lea
and
mov
cmp
dec
imul
push
pop
outsl
popf
add
mov
pusha
xchg
mov
mov
jmp
mov
insb
mov
test
lahf
loop
rcll
pop
cmpsb
insb
sbb
repnz
mov
push
mov
gs
pop
mov
jnp
mov
pop
jb
fstpt
mov
jne
in
lret
push
push
xchg
js
in
insl
pop
xchg
sbb
aam
std
or
jae
push
stc
xor
std
rcrl
mov
dec
lahf
jecxz
jb
mov
mov
sbb
dec
stos
xchg
inc
test
inc
aam
fidivrs
ss
dec
xchg
das
insb
out
push
jp
mov
mov
jge
jo
sub
ja
xor
out
fdivl
clc
enter
dec
bound
xor
mov
mov
sub
jno
xchg
cli
push
sbb
push
das
or
pop
jno
lods
adc
lock
sbb
sbb
fisubl
out
dec
movsl
xchg
inc
repnz
adc
jle
jbe
jle
dec
pusha
das
lahf
xchg
stos
enter
and
adc
push
and
mov
popa
sub
mov
jne
push
nop/reserved
mov
mov
sbb
std
call
pop
sub
push
test
jp
xchg
xor
imul
jno
cmc
bound
lret
lcall
and
sbb
pop
inc
xchg
loop
cmp
mov
fsts
mov
jmp
xor
sarb
pop
add
fstl
adc
adc
clc
int
dec
jge
push
je
mov
sarl
pop
and
jb
stc
movsb
pop
test
cmpsb
out
cli
fs
ds
jge
cs
mov
jl
mov
push
push
daa
xchg
out
lahf
daa
in
cwtl
fld
rcrb
cmp
pop
add
in
inc
std
cmpsb
call
ret
adc
aas
mov
cmp
insl
sbb
sub
and
xchg
lods
mov
adc
sbb
push
cmp
in
pop
mov
rcl
mov
cmp
pop
mov
xor
dec
sub
hlt
adc
mov
sub
jno
xchg
adc
in
adc
adc
xchg
xchg
inc
rcr
aas
cmp
int
push
mov
arpl
in
movsl
in
mov
cmp
sbb
sub
or
out
es
xor
jae
dec
sahf
in
data16
divb
push
ret
aam
pop
sub
cmp
sarb
fcompl
mov
lcall
sahf
mov
iret
enter
in
test
std
and
add
pushaw
fcompl
or
movsb
lods
retw
inc
stc
out
popf
sbb
test
push
dec
xor
ret
bound
dec
das
or
clc
call
in
icebp
add
sub
pop
sub
jb
andl
dec
add
stos
pushf
mov
push
mov
pop
jecxz
add
negb
push
push
fdivs
push
inc
mov
and
cmp
in
adc
mov
out
mov
push
fbld
faddl
int
stc
add
add
dec
xor
pop
pop
loop
imul
mov
scas
pop
imul
lds
int3
iret
jle
call
or
in
xchg
mov
sbb
add
bound
daa
xor
inc
scas
rcrl
pop
sbb
lahf
in
and
dec
add
cmp
les
movq
nop
add
insb
adcl
xchg
dec
xchg
fidivs
sub
fcoml
add
hlt
shlb
nop
stos
mov
sbb
stos
test
out
out
push
ret
mov
popa
mov
jns
push
pop
fcmovbe
dec
das
push
xchg
sub
test
into
adc
xor
fnsave
mov
push
jp
stos
lock
mov
sub
xchg
mov
inc
les
adc
les
mov
adc
xor
popa
js
mov
sbb
xor
rorl
mov
or
push
enter
stc
pusha
arpl
jae
sbb
data16
stos
repz
dec
mov
adc
and
sbb
cmp
sub
sub
push
and
inc
jnp
mov
js
je
mov
push
bndstx
cmp
loopne
sahf
pop
jge
icebp
iret
mov
push
cli
outsl
sbb
cmpsb
fimull
xchg
push
cmp
push
sub
inc
push
sete
subl
xchg
out
call
inc
rol
inc
loop
adc
or
dec
stc
popa
and
or
movsl
mov
or
push
jo
cs
jo
aad
inc
aam
xor
lcall
popa
sbb
stc
pop
push
lods
push
jb
mov
and
push
clc
loopne
lcall
xchg
icebp
cltd
push
mov
outsb
imul
jmp
mov
out
icebp
and
mov
call
add
and
mov
out
push
xchg
dec
pop
sbb
das
enter
pop
adc
xchg
pop
push
push
lods
pop
outsb
out
xchg
mov
repz
nop
pop
stos
rorl
aaa
ljmp
adc
mov
xchg
or
sahf
rorb
scas
push
jp
mov
scas
inc
push
mov
insb
sub
lret
cmp
lret
loope
pop
fisttpl
mov
pusha
sbbb
mov
into
insl
add
push
mov
pop
mov
jle
push
mov
iret
enter
fs
rcl
pop
mov
mov
lcall
shrb
cltd
inc
imul
pop
mov
sbb
in
xor
nop
sub
es
mov
loop
test
out
xor
jmp
les
jno
mov
xor
mov
out
aaa
test
pop
outsb
cmpsl
mov
push
stc
aaa
mov
pop
adcl
dec
std
stos
test
fst
jg
addb
jmp
dec
stos
and
cmc
nop
movsl
sbb
or
mov
or
sahf
push
pop
ds
shl
sub
std
add
mov
ja
lods
fisttpl
sub
nop
adc
sti
adc
add
sbb
xchg
andb
dec
dec
sbb
lock
sbb
popa
out
cmp
add
and
sbb
xorl
das
pop
mov
mov
xchg
mov
or
mov
jmp
pushf
loope
jmp
xor
subb
into
sub
and
sub
cmp
jp
mov
int3
adc
lea
sti
pop
movsl
ljmp
jnp
in
sbb
into
jp
jbe
xchg
into
cmp
ret
std
sbb
xchg
in
pop
cmpsl
ljmp
outsb
or
pop
inc
fildl
pop
sub
add
push
add
rcrl
aad
push
jp
cld
mov
inc
fcoml
jbe
adc
pop
add
push
ret
sbb
lods
js
sbb
and
addb
inc
mov
aad
int
and
or
adc
call
stc
incb
ja
adc
inc
test
pop
mov
inc
xchg
jae
aad
cmp
insl
jmp
lock
xor
aas
pop
inc
ljmp
cltd
es
hlt
xlat
mov
cli
inc
and
call
outsl
or
jno
jmp
jo
add
add
mov
mov
lock
adc
cltd
cmp
pop
fwait
decb
es
add
push
negl
dec
mov
xlat
outsl
mov
pop
test
and
sub
sub
xchg
pushf
xchg
add
push
adc
xchg
cld
lock
leave
pop
clc
outsb
pop
xor
pop
mov
xchg
into
insb
jno
sub
aad
lcall
sarl
mov
mov
xchg
sub
fnclex
int
mov
push
loopne
mov
fisubs
clc
cmp
add
or
aas
mov
adc
aad
rcrb
xchg
xchg
je
int3
bound
mov
sbb
jl
xchg
cmp
push
cltd
call
push
lcall
popf
sbb
dec
cmpsb
subb
jmp
ficoms
xchg
jo
xchg
cmp
jmp
aad
sbb
int
push
jno
jle
mov
mov
sub
arpl
out
outsl
mov
clc
cmpb
sbb
mov
icebp
cwtl
test
shld
pop
mov
add
dec
lods
push
push
les
arpl
cmp
aaa
pusha
clc
fsubs
aas
ds
enter
nop
cmp
in
mov
mov
in
adc
xchg
pop
fnstcw
add
pop
daa
jg
add
bound
data16
xlat
pop
nop
pop
sub
adc
push
xchg
jae
loope
mov
and
adc
rcrl
cld
addl
dec
mov
ret
adc
lock
lret
adc
test
xchg
mov
sahf
push
and
in
shll
push
imul
pop
dec
shll
rorb
sbb
xchg
rorl
and
into
lods
push
cli
cmp
inc
test
jae
jle
mov
insl
jg
stos
insl
jp
dec
cs
push
imul
mov
dec
pop
lcall
cmpsb
push
fmuls
inc
add
or
and
ret
jp
jb
leave
mov
int3
sbb
pop
movsb
mov
outsl
cmp
fisttps
repz
mov
lea
out
out
out
sbb
fdivs
hlt
or
sub
pop
lods
push
xchg
stos
mov
les
mov
loop
fcmovne
in
nop
scas
add
jae
cmpsl
add
jp
nop
inc
xchg
cmp
mov
hlt
pop
sti
jne
jb
shll
push
xchg
fwait
push
mov
sub
outsb
pushf
sub
cs
mov
movsb
cmp
stos
push
push
jbe
pop
aam
lret
enter
cmpb
into
xrelease
xor
mov
mov
xorb
add
xchg
out
sbb
add
mov
dec
inc
ret
imul
push
jnp
inc
arpl
inc
imul
pop
jno
and
das
shll
mov
repnz
pop
pop
sbb
ret
push
jne
cli
enter
stos
and
mov
shll
pop
adc
rcll
aas
xor
mov
push
add
mov
xchg
xor
sub
jle
inc
es
lret
rcrb
data16
add
leave
imul
loope
pusha
cld
loopne
and
int3
mov
ret
pusha
jae
dec
pusha
mov
adc
pop
cmp
outsl
cmp
cmp
sbb
repz
pop
and
lods
jge
divl
ret
xchg
dec
repnz
sbb
mov
pop
jno
cld
fsubs
cmp
cmpsl
xor
push
pop
adc
int3
xchg
and
cmp
fcompl
shlb
mov
shll
inc
scas
xchg
cwtl
shl
mov
out
test
in
jmp
faddl
push
into
xchg
das
stos
out
dec
test
ds
jl
ljmp
repnz
dec
jge
sub
and
cmp
mov
mov
sbb
fcoms
pop
inc
and
fwait
in
jmp
add
in
push
fildll
dec
bound
push
test
jbe
jle
push
lcall
fs
xchg
and
aas
gs
xor
mov
andl
test
cltd
fisubrs
hlt
and
insl
mov
push
out
arpl
outsl
popf
push
rorl
xchg
cmp
sbb
jl
idivl
jp
mov
lret
rcr
xchg
xor
sahf
ja
mov
mov
mov
lahf
stos
push
repnz
inc
sub
mov
mov
or
rorb
cld
inc
ja
xchg
sbb
xchg
jae
push
loop
cmp
repnz
lock
add
pop
mov
xchg
push
fdivrl
repz
cmp
pop
notl
loop
sbb
idivb
outsl
ja
mov
and
jno
and
adc
dec
ljmp
fstpt
out
xchg
push
lret
cmp
aad
xorb
lock
pop
jo
out
push
andb
push
notb
mov
stos
neg
outsb
shlb
leave
outsb
cmp
pop
xor
div
shl
mov
ja
mov
nop
sahf
pop
jp
mov
xchg
int
int
push
fs
aad
mov
ret
or
jnp
push
or
bound
insl
add
pop
jbe
pop
lret
lods
movsb
or
xor
mov
push
fcmovne
popa
sbb
or
xor
loop
test
xchg
jmp
push
adc
adc
ds
mov
push
cwtl
inc
sub
ss
ret
sbb
mov
adc
mov
out
and
pushf
push
roll
lcall
add
pop
xlat
lret
jb
cmp
cmp
iret
mov
jge
in
pop
inc
shll
lret
pop
ss
sub
sub
imul
lods
aam
in
sbb
aaa
cwtl
pop
test
pop
xor
mov
out
push
lods
js
enter
ss
pop
ret
xor
add
jge
pop
push
dec
push
sub
dec
cs
sub
sbb
lahf
dec
mov
and
jg
adc
push
leave
cmp
fildll
fcoms
jae
pop
jl
aam
mov
lcall
add
lea
lcall
jle
mov
loopne
sbb
mov
mov
movsl
daa
xchg
movb
fstpl
mov
sar
in
lods
fsubs
pushf
outsl
sbb
cmpsb
adc
pop
push
or
in
sti
fbld
in
in
lea
int3
daa
xchg
sbb
repnz
shl
or
xchg
shl
imul
push
mov
aam
and
add
stc
cwtl
cmp
gs
jmp
lock
loopne
or
icebp
mov
mov
push
pop
mov
add
ljmp
mov
ja
inc
outsl
inc
xor
sub
test
jb
js
addr16
pop
sarb
call
int3
xlat
loop
sbb
ds
dec
sahf
and
inc
decl
mov
mov
je
lret
and
fcompl
adc
ja
mov
test
out
inc
lock
cmp
fcmovbe
inc
mov
pop
call
pop
mull
int
pop
cmp
mov
jecxz
jne
shl
mov
or
dec
push
xchg
mov
lods
xorl
inc
loope
jbe
and
jb
lret
adc
sti
push
sub
jns
shrl
mov
mov
test
dec
dec
pop
pop
cmpsb
ret
pop
and
add
or
pop
pop
movsb
mov
push
fcom
mov
xchg
inc
push
mov
out
adc
js
out
mov
dec
push
sti
push
cs
xor
fnstsw
xorl
cli
fcompl
xchg
std
std
sub
test
lock
jo
cmp
ds
mov
fistpl
fisubrl
repnz
enter
pop
adc
sti
jmp
mov
mov
mov
pop
clc
loope
push
jae
mov
jne
je
mov
xchg
call
stos
pop
jns
and
cmpsl
inc
and
fwait
jp
jbe
jo
addr16
or
sub
es
mov
cmc
adc
gs
push
adc
outsb
adc
out
mov
out
into
jge
push
jne
dec
lds
and
ret
or
mov
aas
push
jl
out
mov
scas
pop
push
insl
stos
xchg
stos
push
adc
in
add
sti
mov
adc
dec
push
mov
in
add
outsb
mov
daa
jecxz
fwait
jb
mov
aas
add
aaa
mov
dec
int3
sti
ja
or
sub
dec
cmp
lret
stos
gs
sub
xchg
sbb
jne
insb
lret
xchg
lods
aam
pop
fisttps
dec
adc
pop
rorl
sbb
fcmove
cltd
mov
icebp
sub
mov
push
jmp
lods
enter
les
in
mov
out
add
sbb
cmpsb
jg
insb
lock
xor
jle
es
adc
leave
mov
cmp
gs
jae
fdivrl
mov
es
cmp
das
xchg
jb
filds
fidivrl
or
mov
decb
std
int
mov
dec
mov
push
xchg
scas
fs
adc
jle
cld
inc
xor
test
scas
aad
xor
cs
push
data16
xor
mov
sbb
data16
dec
popf
loop
xor
hlt
outsl
shrl
scas
mov
pop
insl
pop
mov
xor
ret
xor
dec
addr16
sub
insl
sti
outsl
lock
les
sub
shll
divb
popa
fnsave
imul
cwtl
scas
hlt
xchg
scas
dec
pop
xor
adc
inc
lahf
mov
push
es
notb
loope
lcall
mov
shll
mov
dec
stos
lock
and
jne
leave
movq
bnd
adc
cmpsl
cmp
inc
imul
jl
and
sti
ja
sbb
jecxz,pn
and
ljmp
rcll
test
adc
lret
sbb
dec
push
outsl
in
lods
xchg
out
aad
add
in
fldcw
stos
loopne
js
mov
std
notb
mov
in
add
out
xchg
imul
je
push
popf
add
neg
popf
mov
andb
add
pop
cmp
adc
dec
in
xor
xchg
subb
loopne
sub
popf
and
out
xchg
and
repnz
pop
lods
push
or
xchg
jne
or
and
pushf
sahf
xor
loope
push
sub
je
cmp
or
add
mov
leave
jb
fs
mov
push
dec
pusha
mov
outsl
mov
xchg
inc
arpl
repnz
mov
xchg
xor
mov
push
mov
into
sub
es
add
cmp
stos
add
push
fnstcw
ljmp
repz
test
and
and
and
xchg
stos
or
inc
push
ja
xlat
or
jg
in
pop
cmp
fs
lret
int
jmp
idiv
push
and
popf
mov
rorl
stos
inc
popf
pop
sub
loop
hlt
testl
sbb
pop
fnsave
ss
sub
les
and
sbb
adc
and
mov
and
adc
inc
lea
mov
inc
scas
mov
inc
add
movsb
fst
pop
test
jnp
loopne
xchg
jb
and
pusha
jbe
mov
mov
pop
xchg
div
push
aam
cli
add
xor
sub
cs
aaa
adc
lret
sub
stos
test
mov
mov
push
xor
xchg
xchg
mov
xchg
pop
leave
shll
outsl
xor
xchg
cld
lcall
adc
mov
dec
pop
jns
or
dec
stos
jecxz
hlt
adc
push
push
fsubrs
cmc
cmpsb
pop
cmp
inc
and
fdivrl
jne
sub
adc
push
xchg
and
mov
inc
popa
bnd
stos
ret
xor
es
pop
ret
lcall
mov
push
icebp
dec
sbbb
inc
xor
xor
mov
test
movsb
mov
psubd
jb
movsl
pop
and
js
aaa
out
int3
clc
jns
cmpsl
pop
sub
outsl
std
xchg
inc
sbb
jo
sub
movsl
mov
push
pop
dec
shll
imul
add
in
cmp
in
dec
sub
lock
cli
loope
pop
cmp
rorb
inc
in
sti
cmp
jb
adc
out
sub
dec
add
mov
add
ret
xor
mov
inc
mov
repnz
loopne
icebp
dec
add
aad
add
mov
stos
pop
sbb
imul
cmpsl
sub
and
pushf
lods
cld
push
aam
mov
adc
xchg
in
mov
ljmp
fwait
mov
jge
sbb
mov
into
push
inc
sti
dec
add
int3
sbb
lcall
out
dec
ret
outsb
das
jl
pushf
dec
fisttpll
jge
sub
clc
and
push
jmp
mov
mov
mov
adc
in
int
stos
xor
cmpsl
nopl
inc
push
and
dec
cmp
out
vpsubw
rcll
lret
push
stc
xchg
mov
imul
or
pop
adc
mov
dec
jl
xor
decb
add
cli
mov
test
pop
leave
push
xor
mov
les
xchg
lahf
decb
adc
popf
lcall
cmp
ja
cmp
out
data16
scas
or
dec
push
cmpsl
cwtl
pop
pop
call
cmpsl
dec
jnp
push
xor
in
mov
ljmp
adc
adc
mov
in
lods
mov
or
jl
rcrl
test
or
jmp
lods
ficompl
nop
inc
jno
arpl
and
jmp
dec
out
jbe
fisttpll
and
or
xchg
daa
ret
movsl
out
jnp
xor
rorb
roll
clc
mov
cltd
mov
cli
jle
out
inc
adc
dec
cmp
inc
jbe
mov
stos
shlb
leave
data16
cmp
in
add
or
jl
frstor
mov
rorb
icebp
shll
and
push
bswap
push
sbb
lds
ss
pause
je
das
ljmp
mov
jnp
inc
mov
mov
pusha
xchg
imull
call
push
inc
adc
and
cmp
xlat
fldcw
mov
sub
mov
mov
les
and
dec
pusha
call
pop
clc
inc
pop
jae
xor
cs
scas
es
cmp
sub
stc
sub
imul
inc
xchg
addl
cmp
cmp
fldl
popa
movsb
notl
scas
popa
es
sbb
xchg
rorl
rol
xor
in
push
push
xchg
mov
iret
pop
xchg
out
mov
add
arpl
cmp
aam
cwtl
mov
int
dec
repz
lock
xor
sub
data16
stos
add
lods
sbb
cld
dec
into
cld
jae
fwait
lcall
je
sti
sbb
fld1
push
ret
add
popf
xor
mov
out
adc
cmp
inc
lret
mov
push
cmp
mov
pop
xchg
jg
bnd
ja
rorl
pop
pop
scas
in
sub
test
aam
sahf
test
test
pop
loope
sbb
adc
clc
int
in
lcall
in
orb
add
stos
lods
inc
push
mov
mov
daa
inc
cs
ds
enter
test
and
pop
add
dec
cmp
push
mov
cs
jae
je
and
popa
call
jp
fdivrl
add
in
or
sub
adc
push
test
dec
mov
dec
sti
xchg
pop
xchg
lock
pop
sahf
mov
lea
inc
adc
xor
outsl
pop
dec
jo
inc
sbb
jnp
push
sub
jl
jge
imul
movsl
sub
push
aam
lcall
loope
mov
xor
jne
adc
das
xchg
shr
xchg
mov
mov
scas
lret
test
dec
or
pop
movsb
out
loope
jl
shl
push
add
push
out
push
cmc
bound
mov
ja
test
outsb
xchg
lcall
dec
in
lods
xor
gs
fimull
cmc
jo
fcmovne
bound
stc
call
jmp
es
mov
jns
insb
shll
adcl
cmp
push
fprem1
dec
scas
pop
dec
test
xchg
inc
xchg
enter
sub
aam
or
pop
pop
jbe
add
stos
and
push
ret
push
mov
mov
or
nop
inc
sti
dec
xor
addr16
fiadds
lock
cwtl
enter
ljmp
xchg
xlat
nop
push
iret
stos
lds
push
repnz
repz
inc
ret
enter
ds
fnstenv
sbb
loop
add
in
push
push
pop
les
fstpl
clc
cmp
and
or
mov
outsb
icebp
ja
add
lea
dec
jmp
fisubl
out
stos
fwait
enter
jmp
pop
pop
inc
cmp
adc
outsl
push
push
or
cmpsb
xor
and
ss
or
add
pop
adc
sub
aad
out
ljmp
mov
ret
fndisi(8087
mov
mov
push
es
stos
xor
insb
add
sbb
mov
jg
je
fdivl
jae
xchg
test
mov
push
lods
bound
mov
lods
sahf
mov
mov
add
push
lds
jge,pn
add
mov
xchg
sbb
sbb
jns
gs
mov
data16
inc
js
dec
enter
xor
out
out
xchg
jne
xchg
dec
pop
jge
xor
pop
pop
or
aad
pop
jns
arpl
inc
mov
aaa
data16
sbb
stos
das
push
loope
mov
fsubrl
jg
gs
cmp
loopne
push
mov
cmp
aas
inc
sar
loope
lahf
add
adcb
out
pop
nop
out
leave
call
fmull
inc
repnz
out
daa
pop
cltd
pop
hlt
int
pusha
out
cwtl
mov
das
stos
push
test
fiadds
xor
cmpsl
push
jo
lea
aaa
or
jb
outsl
in
testl
scas
lret
leave
xor
xchg
push
daa
outsb
shl
js
pop
mov
aas
inc
aaa
outsb
xlat
cld
pop
sbb
jo
sub
test
cmp
jp
cmp
mov
adc
xchg
in
xchg
jbe
add
inc
stos
inc
aaa
mov
lea
mov
int3
sbb
adc
clc
fistps
sahf
fucom
repz
mov
lret
out
ret
mov
push
push
int3
ja
fst
cmp
and
mov
and
xor
sub
movsb
out
push
fwait
cs
sub
outsl
ja
jo
int
cli
pop
push
lods
shr
test
push
jg
or
ffreep
pop
push
in
cmp
fimull
adc
cmpsb
addb
das
sbb
cmp
xchg
mov
push
popf
sahf
push
adc
stos
int3
lds
ror
and
jecxz
cmp
inc
mulb
jo
sbb
mov
stos
mov
xlat
call
jl
fcomip
add
lods
sbb
or
bound
enter
and
jne
pop
xor
sub
dec
sar
imul
in
shll
roll
or
jae
movsb
sarl
cmpsl
push
rorb
mov
into
lret
xor
dec
inc
cmc
stos
xchg
xor
andl
loope
jecxz
adc
or
orb
fs
mov
sub
shrb
add
xchg
movsl
or
pop
cmp
push
sub
jle
shll
or
cmp
mov
or
and
cmp
into
push
push
out
inc
sbb
inc
pop
adc
xorb
sahf
lods
jo
bound
xchg
shll
mov
or
lods
cmc
bound
cmc
push
js
pop
loope
mov
jecxz
xor
movsl
in
iret
mov
adc
or
lahf
jbe
cmp
test
aaa
push
dec
mov
fldcw
inc
mov
dec
or
call
mov
ficompl
lcall
pusha
or
call
sbb
mov
test
push
std
and
iret
xchg
inc
leave
popa
rorb
pop
cmp
xcrypt-ctr
cmpsl
sbb
pop
leave
fistl
das
lods
xchg
out
ljmp
idivb
out
scas
test
sbb
sbb
cld
sub
and
test
scas
aam
fwait
ds
rclb
leave
aas
pop
scas
cld
push
pop
dec
mov
jmp
mov
ljmp
xor
fsubs
imul
sbb
lea
or
out
aaa
das
iret
pop
pushl
xor
jg
sarb
pop
pop
or
ja
sub
push
jbe
pushf
adc
xor
pop
daa
mov
adc
xor
xchg
ja
scas
and
add
scas
jg
mov
repz
pop
xor
pop
push
jnp
push
fcoml
mov
imul
aad
subl
sbb
sbb
dec
lret
mov
rorb
push
mov
sub
mov
push
call
and
pop
data16
push
add
outsb
and
adc
jle
data16
addr16
push
mov
icebp
mov
daa
adc
aas
xor
mov
fnstsw
push
jmp
sbb
adc
int3
imul
stos
jns
test
dec
pop
popa
jl
push
xchg
stos
sub
cmpsl
lds
imul
pop
add
sub
insb
xchg
shrl
clc
shl
jecxz
mov
push
add
icebp
stos
rcll
movsl
jb
test
std
mov
or
sbb
mov
push
insl
fs
in
mov
pop
adc
or
xorl
fisttps
test
adc
outsl
shl
lret
in
push
std
push
scas
loop
test
ds
xchg
stos
ss
or
dec
pop
jb
adc
fmull
int3
push
xchg
xor
lret
adc
lahf
sbb
pop
push
loop
jo
scas
pop
sub
rep
inc
icebp
sub
push
fwait
push
push
push
pop
sbb
and
ret
xchg
lret
fnsave
popa
xor
popf
outsl
push
xchg
leave
dec
mov
push
insl
int
cmpsb
pop
and
sti
push
pop
push
fadds
mov
ret
inc
sbb
rorb
data16
lret
mov
cmp
test
sbb
sub
js
out
fmuls
cmpsl
outsl
mov
or
outsb
pop
adc
jns
jb
push
lcall
les
and
stos
lods
push
fdivrs
inc
popf
aaa
lcall
add
xchg
or
icebp
and
test
pop
cmp
ljmp
aam
filds
sub
scas
bound
adc
popa
dec
push
in
adc
push
xor
sbb
xor
push
mov
in
jne
jae
add
and
mov
sbb
rcll
mov
dec
shrl
cmp
in
pop
jnp
mov
pushf
ret
and
mov
stos
loopne
jae
dec
jmp
and
imul
test
inc
loopne
adc
out
jnp
dec
addr16
bnd
jb
rorb
shrl
not
and
icebp
daa
jbe
push
cmp
cli
outsl
inc
push
iret
out
jae
mov
sbbl
mov
lret
pop
arpl
outsb
xchg
sub
nop
cmp
jbe
popa
pop
cmp
or
testb
pop
mov
fucomp
ror
jb
bound
jns
push
or
jp
loope
inc
outsl
cmp
popa
mov
inc
sbb
repz
bound
es
jl
mov
jae
je
push
and
dec
xchg
and
shrl
or
adc
es
mov
out
cmpsl
add
sarl
iret
scas
cmp
jae
mov
push
fstpl
adc
lret
push
pop
in
jns
jmp
sbb
js
pop
sahf
test
mov
sbb
test
movsb
mov
jge
out
push
clc
or
or
add
sti
mov
ficoms
and
inc
push
cwtl
pop
mov
shrl
cwtl
insb
cmpsb
dec
push
ja
mov
sbb
xchg
daa
jbe
cmpsl
adc
jb
mov
jo
xchg
xchg
test
in
jge
or
fldt
or
lods
gs
inc
out
shlb
negl
dec
sahf
bound
jge
mov
pusha
mov
lea
stc
icebp
pushw
mov
leave
or
loop
push
insb
inc
xor
aad
lahf
test
mov
xor
xchg
and
inc
dec
jbe
sbb
mov
inc
push
pop
xor
xchg
cmc
clc
push
dec
push
dec
dec
ljmp
sub
dec
loopne
scas
xor
inc
dec
mov
cmp
mov
push
inc
sarb
cmp
dec
or
mov
and
push
mov
push
outsl
adcb
push
imul
jge
push
jno
dec
adc
fdivr
daa
mov
pop
out
pop
add
jp
pop
or
adc
ljmp
or
xor
pop
fs
dec
jmp
shr
sbb
sahf
mov
popf
xchg
out
fmuls
adc
sub
test
adc
push
in
rcl
shll
cmpsb
pop
loope
mov
lock
test
insl
push
push
adc
sub
pop
mov
movsl
fcomps
gs
daa
stos
fdivr
subb
and
inc
clc
mov
cli
mov
adc
repnz
sbb
stos
lods
sub
adc
js
push
loope
sub
xchg
jmp
rolb
and
cmp
and
cmp
pop
scas
xchg
inc
jge
and
imul
cmp
pop
int3
lcall
inc
add
adc
xchg
hlt
jge
jp
dec
push
sbb
push
mov
xor
or
stc
rol
arpl
dec
ds
pop
sbb
imul
andb
loope
pop
movsl
loopne
and
push
pop
cmpsl
stos
mov
adcl
jge
ret
jno
inc
cmp
cmpsl
add
mov
add
and
fists
jp
sub
sub
lock
call
push
jecxz
cld
cltd
outsl
jg
push
repnz
loopne
out
inc
aas
sbb
push
lds
aad
outsb
adc
sti
je
scas
pop
out
loop
sub
mov
jl
into
inc
loopne
outsl
stos
and
repz
cltd
xor
ror
iret
aam
aad
add
jmp
aas
or
in
je
jae
popa
inc
xor
int
sahf
push
sbb
rcrl
and
cmc
dec
add
add
incl
fmuls
jge
push
ja
in
xor
dec
add
xor
roll
xchg
dec
lods
adc
inc
add
xorl
or
or
ss
adc
mov
xorl
mov
std
stos
jmp
insb
es
add
and
inc
cmp
fldcw
sbb
or
push
mov
push
stc
adc
lahf
inc
fstps
ret
xchg
imul
jecxz
pop
or
fsub
pop
enter
ror
adc
sbb
imul
sbb
mov
jo
push
pop
and
push
in
mov
mov
out
inc
insl
imul
dec
ss
scas
dec
test
insl
lds
pop
jb
lahf
push
and
cli
outsb
mov
inc
xchg
pop
pop
addl
lcall
mov
adc
into
add
orl
mov
add
or
insw
jecxz
jbe
rcrb
pop
push
adc
movl
adc
cmpsl
stos
xchg
repnz
cwtl
mov
aaa
flds
jmp
xchg
fiaddl
push
inc
mov
sub
xchg
popa
repz
fldenv
cli
lcall
mov
xor
mov
push
xchg
xchg
inc
fistpl
xor
and
xchg
xlat
icebp
push
pop
sub
xor
test
stos
popf
stos
aam
loopne
add
nop
mov
pop
sbb
pop
cmpsl
in
xor
sbb
fucompp
enter
adc
push
pop
jne
movsl
nop
mov
imul
dec
sub
jl
sbb
insb
fnstenv
jnp
popa
and
sub
jg
inc
mov
mov
sub
cwtl
scas
dec
pushl
lods
cmp
sbb
cli
test
imul
sub
lea
push
cmp
mov
fsubp
loop
dec
cltd
push
jl
mov
sbb
inc
sahf
xchg
inc
shll
adc
push
dec
hlt
jge
push
sti
xchg
cmp
jns
and
imul
lahf
or
pop
add
addr16
jbe
or
popa
scas
and
clc
push
outsb
cld
add
adc
scas
das
movl
push
sbbl
mov
cmp
pop
movsb
or
mov
movsl
sub
mov
mov
outsl
jge
aam
inc
mov
fcoms
idiv
pop
ljmp
popf
xlat
scas
loop
loope
sbb
xchg
push
sub
sbb
jle
ret
rclb
pop
cli
popa
sub
fdivrp
push
sbb
sti
inc
pop
imul
xor
pop
mov
mov
pop
mov
movsl
xor
into
push
jle
test
loope
loopne
inc
scas
inc
aad
xchg
insb
out
mov
ljmp
shlb
andb
shl
push
jecxz
mov
adc
xchg
data16
aas
jns
fidivrl
add
clc
sbb
cmc
mov
or
outsb
xchg
js
pop
mov
out
movsl
xchg
test
addb
scas
add
sahf
dec
lock
stc
cmp
mov
jle
repz
fbstp
mov
call
out
stc
pop
stos
xor
pop
mov
sahf
mov
arpl
mov
inc
inc
push
or
stos
pop
dec
shll
je
or
xchg
bnd
mov
shr
xor
popf
add
fstps
scas
or
dec
bswap
adc
mov
mov
cmp
push
pop
int
int
mov
negl
or
mov
xor
sub
insb
mov
nop
ret
mov
cmpl
add
inc
add
or
movsl
mov
out
aam
aas
addr16
scas
mov
pop
lahf
loope
and
aas
cli
imul
fsubrs
push
xor
jne
mov
jno
cmp
imul
test
int3
xchg
popa
jnp
loop
bound
mov
ds
popa
lret
enter
pusha
or
xor
xchg
insl
push
sub
imul
pop
pop
out
sbbb
mov
xor
aad
loop
rcrb
nop
je
aas
stc
pop
adc
jne
xchg
les
pop
repz
stos
jle
push
idivb
testb
adc
pusha
jmp
arpl
cmc
pop
xchg
icebp
loope
mov
sub
jbe
and
add
in
jmp
es
or
jb
subb
lds
ret
pop
jnp
fisttpl
add
xchg
lcall
mov
loope
fiadds
cmp
ljmp
ds
inc
scas
out
ja
adc
pushf
imul
pusha
push
in
movsb
xor
push
adc
cmpl
cli
adc
mov
in
jecxz
icebp
push
bnd
aaa
jbe
dec
and
jmp
repnz
into
pop
inc
push
popf
inc
in
arpl
sub
mov
mov
inc
or
dec
and
mov
adc
repnz
xchg
push
scas
lcall
ja
mov
inc
cmp
cmp
xchg
stos
or
cmp
dec
pop
mov
and
inc
jae
loopne
cmc
stos
push
into
imul
outsl
rcrb
mov
imul
pop
mov
lahf
outsl
sub
adc
adc
in
xor
xchg
lea
loop
cmpsl
cmpsb
nop
jnp
fmul
into
lret
int3
push
in
lock
jns
ds
xor
adc
addr16
xchg
js
and
push
and
xchg
dec
daa
mov
out
cmp
push
dec
roll
hlt
sbb
jg
adc
pop
mov
test
fs
icebp
sbb
mov
and
loop
pusha
daa
fistps
xor
and
cmp
mov
lahf
jge
mov
pop
xor
lock
lahf
loope
inc
mov
mov
call
xor
cld
mov
sbb
pushf
fsubl
mov
sub
sahf
inc
stos
add
push
mov
arpl
xor
dec
cmpsb
fildll
shll
mov
cmp
sbb
mov
push
xor
mov
sbb
lods
test
xor
sbb
pop
push
loopne
sub
xchg
cmpsb
aam
fwait
push
pusha
jge
cmp
scas
mov
popf
aaa
insb
nop
jge
and
push
fildll
sub
outsb
insb
aaa
and
ret
test
arpl
lods
test
jmp
pop
call
hlt
push
fsub
rorl
loopne
adc
and
xlat
inc
mov
mov
fistl
mov
lcall
arpl
pop
inc
and
jns
mov
dec
je
jl
insb
out
mov
mov
pop
dec
adc
xchg
push
pop
shr
js
imul
int
mov
das
mov
icebp
and
add
sarb
mov
ja
jmp
daa
pop
mov
test
sub
in
mov
addl
jmp
fdivs
lea
movsb
push
jg
ja
cmp
xchg
fisubl
mov
mov
int
rorl
mov
int
inc
shrl
fildll
out
push
xor
shrl
repz
xor
pusha
mov
out
in
fdivl
xchg
push
addb
add
push
in
cmc
pop
push
cmp
into
push
dec
push
cmc
jg
notl
in
fdivs
in
fs
adc
adc
ja
lahf
and
sub
xor
cmpsl
dec
rcrl
xlat
nop
mov
add
cltd
add
fistpll
ljmp
mov
inc
cmp
movsb
mov
scas
repz
fnsave
mov
jnp
mov
ljmp
mov
adcb
mov
stos
das
cli
pushl
out
ljmp
push
push
and
addr16
sbb
out
mov
sub
mov
ficomps
add
insb
and
fisttps
aam
lcall
sahf
data16
xchg
ret
dec
sti
fimuls
xor
sbb
mov
pop
inc
sub
add
adc
adc
xchg
adc
test
push
fisubs
inc
outsl
adc
stc
div
pop
adc
mov
mov
mov
cmp
mov
sbb
ret
movsl
cmp
xlat
push
dec
jne
mov
cmp
mov
xor
notb
test
dec
fldt
fsubrs
add
mov
jb
xor
cltd
inc
add
mull
insb
and
sti
sbb
inc
push
push
aad
or
push
add
hlt
adc
ret
cmp
xor
stos
xchg
ljmp
push
xchg
mov
pusha
jns
mov
mov
mov
jmp
sbb
mov
or
sbbb
mov
adc
outsl
imul
adc
inc
fstp
outsb
test
cmpsl
adc
into
and
push
xor
andb
push
mov
cmpsb
lods
aad
popl
push
inc
inc
movsl
jne
push
clc
mov
cmp
ljmp
cmpsl
inc
std
push
dec
mov
dec
insb
mov
mov
popf
repnz
scas
sub
ret
mov
cmpsl
add
faddl
push
fistpl
xchg
cmp
cmpsb
testb
out
iret
fisubrl
mov
es
mov
dec
push
adcl
in
in
loop
xchg
or
bound
dec
scas
pop
in
push
dec
cli
and
push
lret
int
sbb
sub
push
xor
xchg
fcompl
pop
and
add
shll
lods
jmp
lahf
dec
in
add
gs
mov
loop
clc
frstor
lock
shlb
int3
dec
scas
sbb
cmp
imulb
int
in
xorl
add
pop
jb
pushf
stos
ds
adc
loope
push
lcall
pusha
xchg
hlt
aam
shlb
xor
ret
test
pop
or
push
ficompl
dec
aad
pop
fnstenv
gs
mov
or
aas
sti
std
ret
std
movsl
int
mov
aas
push
jbe
lock
movsb
mov
or
sub
mov
adc
jecxz
xchg
inc
pushf
cltd
and
inc
hlt
je
arpl
cltd
inc
push
jp
lcall
leave
mov
mov
lahf
stos
outsb
mov
push
mov
or
dec
ja
jp
pushf
sbb
mov
in
adc
loope
notb
mov
cli
pop
cwtl
dec
test
push
mov
mov
in
lea
mov
jne
test
dec
cmp
ds
nop
pop
and
xor
mov
hlt
stos
aaa
jg
movsb
clc
push
mov
fdivp
enter
mov
bndstx
pop
dec
dec
add
lret
push
xor
sbb
sub
arpl
mov
jnp
daa
pop
sub
dec
fists
pop
out
in
cmp
out
inc
inc
cmc
fidivs
jb
sub
pop
inc
pop
push
call
mov
or
mov
jl
arpl
pop
nop
fidivrl
into
mov
jb
loop
pop
cmpsl
sahf
out
or
enter
jnp
fdivl
rorb
mov
jp
shll
mov
add
loopne
stos
imul
lods
sub
mov
mov
xchg
int
dec
or
nop
sub
fldcw
insb
fmull
ret
xchg
loopne
jp
xor
mov
xchg
lods
sub
dec
sbb
test
push
mov
push
jbe
loop
cmpsl
pop
jmp
out
cmc
int
cmp
dec
cwtl
stc
mov
movsb
mov
add
inc
jae
mov
stc
arpl
cltd
xchg
lods
mov
es
das
jge
mov
into
out
pop
jnp
mov
mov
dec
lret
ret
mov
mov
lret
inc
pop
test
mov
xchg
push
popa
rorb
xor
xchg
int3
fildll
push
dec
jg
pop
jmp
ret
jne
lahf
imul
in
or
xchg
and
jg
mov
repnz
push
push
imul
mov
mov
push
cmp
arpl
mov
lret
cmpsl
xor
into
outsl
push
push
test
xor
sbbb
dec
sub
adc
leave
mov
fnstcw
or
sub
jne
fwait
mov
stc
sub
aas
jnp
icebp
aam
notl
inc
mov
jnp
imul
popf
mov
aad
pop
jbe
sbb
sbb
jle
mov
inc
mov
dec
xchg
sub
sbb
push
in
pop
xor
repz
dec
pop
pop
sub
mov
int3
ljmp
imul
xchg
ret
or
sub
pop
outsl
and
das
int3
cmp
sub
daa
cwtl
add
les
adc
inc
and
in
imul
scas
dec
xchg
xor
xor
adc
add
pop
dec
xchg
imul
shrl
sbb
pop
or
xlat
cmp
jmp
jle
xor
adc
sub
fstps
addr16
jecxz
mov
nop
cmp
js
mov
dec
fisttpl
push
mov
test
out
je
into
mov
insb
inc
pusha
sbb
xchg
das
jo
and
adc
adc
andl
fcompl
xchg
push
xchg
in
jmp
int
mov
insl
push
cli
adcl
pop
movsb
idivl
cmp
dec
ss
push
pop
je
scas
cltd
xchg
stc
or
add
test
mov
jns
ds
xchg
aas
pop
pop
push
jmp
dec
adc
pop
in
jns
pop
or
popa
dec
imul
xchg
push
mov
cmp
outsl
gs
lret
push
fwait
push
or
mov
int3
testl
ljmp
mov
pop
cld
mov
stos
dec
js
cmp
mov
cld
fldcw
stc
stc
xor
dec
and
add
cmp
jb
adc
mov
pop
mov
xchg
add
push
nop
fstl
adcl
inc
pop
mov
add
xchg
xorl
add
les
cmp
add
aas
adc
pop
daa
push
or
mov
inc
pop
mov
pop
sbb
mov
test
cmpsl
lea
pop
jl
gs
bound
inc
clc
mov
mov
jno
add
aaa
add
xor
outsb
inc
sub
adc
repnz
std
ljmp
or
lret
xchg
xor
jae
icebp
and
out
adc
lea
mov
les
aas
rorb
xchg
push
mov
xchg
push
inc
push
jb
jnp
ja
adcl
loopne
xor
xor
lcallw
xchg
inc
jbe
pop
test
mov
lretw
adcb
dec
or
xchg
push
popf
sub
sbb
jo
pmaxub
cmpsl
sub
add
cmp
push
ret
pmulhuw
ja
loope
call
inc
rorb
addl
xor
sarb
mov
cmp
call
inc
jb
jae
sbb
inc
push
icebp
stos
jle
or
inc
inc
test
xchg
aam
mov
and
or
pop
dec
jnp
loopne
ret
js
movsl
popf
mov
in
lds
fbld
push
lret
outsb
repz
xor
mov
mov
bound
popf
cs
mov
lea
dec
mov
push
sbb
out
hlt
loopne
sbb
pop
jne
out
mov
adc
addl
scas
jmp
in
xchg
fs
xor
shlb
add
repnz
cmp
pop
and
or
xor
in
lret
bswap
push
es
cmpl
sbb
xchg
sbb
mov
or
cli
aad
push
pop
fwait
lods
in
jecxz
or
addr16
ljmp
or
and
lock
jle
nop
pop
gs
cmp
jg
inc
cmp
testl
lret
shll
ret
stos
xchg
mov
add
fisttpl
nop
add
out
outsb
xor
pop
stc
lret
repnz
lock
adc
xchg
mov
push
pop
scas
mov
xor
setno
xor
addl
repz
notl
in
outsb
push
push
jnp
in
into
int3
ret
imul
sbb
pop
push
test
std
sbb
popa
data16
cmp
push
shll
arpl
adc
in
inc
orb
jmp
adc
clc
inc
sar
mov
or
pop
dec
fs
sub
ja
jp
scas
jno
js
gs
imulb
mov
pop
sbb
push
pop
xchg
mov
and
add
sarb
inc
aas
mov
push
inc
fsubl
in
aam
or
fsubp
js
sbb
jmp
ja
xchg
or
fidivs
cmp
xor
bnd
push
and
pop
mov
notl
icebp
push
rclb
sarl
stos
or
fwait
xlat
stos
mov
test
sar
hlt
xacquire
mov
sahf
dec
mov
outsl
cmp
data16
jge
jns
pop
sub
cmp
xor
mov
jnp
jle
mov
dec
inc
push
and
push
jno
mov
dec
out
and
out
je
flds
jo
inc
dec
int
cld
pop
scas
fs
pop
adc
mov
mov
les
sub
sub
fildl
push
and
push
leave
sbb
movsb
call
addr16
shll
clc
and
add
addl
jno
sub
mov
jb
lods
lcall
jmp
push
in
add
aad
out
int3
insl
add
jp
addr16
mov
push
imul
movsl
sarl
lds
xchg
lods
sub
popa
test
popf
ss
sbb
sub
xor
nop
gs
shrb
ja
test
mov
inc
mov
add
dec
fnstcw
out
stc
sbb
addr16
mov
leave
sti
fwait
mov
iret
add
cmp
roll
repz
xor
bound
adc
and
mov
ds
mov
fbld
mov
or
cmp
mov
pop
icebp
aam
outsl
sub
ror
cmpsl
fucom
and
rcrl
icebp
cmpsb
lret
inc
mov
push
lock
lret
lods
jbe
xchg
outsl
pop
in
push
fadds
les
test
and
push
cmpsl
push
loope
in
ret
outsl
or
dec
and
icebp
fwait
stc
push
loope
dec
ds
movsl
push
insl
pop
loope
push
cwtl
cmpsb
sbb
or
xor
push
fs
es
jae
dec
push
or
dec
cltd
xlat
mov
adc
lret
add
shl
xchg
fs
jno
out
push
out
sti
mov
into
bound
xchg
jmp
pop
stos
add
fsubl
sbb
divb
adc
flds
sub
pop
sub
dec
mov
cmc
jo
aas
push
scas
cmpsb
mov
sub
add
or
cmc
leave
fbld
sub
jns
inc
sub
lea
and
sar
int3
lea
in
jns
inc
or
dec
push
andb
xor
push
ljmp
scas
icebp
pop
and
lahf
or
clc
add
repnz
popa
pop
cmpsl
scas
arpl
test
shrl
or
mov
xchg
and
out
mov
push
fs
or
aam
mov
mov
mov
pop
push
aas
je
aad
push
mov
nop
pushf
sub
js
dec
faddp
movl
inc
jg
adc
jo
jns
aaa
sahf
cld
fs
clc
sar
pushf
sbb
shlb
shl
cmp
out
push
test
pop
add
repnz
pop
pop
mov
mov
je
sbb
cmovl
push
mov
clc
ror
or
aam
psllw
push
mov
cmp
pop
mov
dec
and
pusha
mov
mov
es
cmpsb
hlt
dec
sub
or
les
mov
js
jno
adc
rcl
cmpsl
dec
sti
mov
sbb
and
or
add
jns
add
cmp
es
and
int3
dec
add
call
and
mov
ljmp
bound
loopne
daa
cmp
sbb
xor
pop
sub
mov
out
xor
xlat
or
rclb
or
stc
ja
xchg
mull
aas
cmc
lret
sbbb
sbb
push
sbb
sbb
xor
mov
sbb
jp
mov
mov
xor
addr16
dec
stc
gs
mov
sub
test
frstor
out
outsb
in
je
mov
dec
imul
repnz
push
test
adc
scas
sti
mov
sub
mov
jno
adc
mov
movsl
imul
mov
fnstcw
mov
xchg
pop
test
lahf
ja
push
sbb
pop
jne
shrl
mov
stc
sbb
mov
inc
loope
mov
hlt
fmuls
icebp
sub
pop
ret
dec
repnz
fwait
mov
xchg
and
pop
mov
xor
imul
fists
lret
fwait
stc
ret
popa
pop
icebp
sub
and
add
xor
jns
dec
aam
dec
pop
and
psrlq
inc
inc
mov
xchg
mov
xchg
insb
mov
mov
adc
int
or
inc
and
ror
mov
rcr
adc
scas
pop
sti
filds
js
mov
dec
mov
in
xor
xchg
sbb
mov
add
hlt
cld
jns
add
fiaddl
popa
pushf
movsl
pop
divb
xlat
mov
jecxz
push
rcrb
loopne
outsl
xchg
xor
out
xor
test
sbb
xor
popf
test
fistl
mov
mov
mov
gs
loopne
es
dec
pop
mov
leave
sbb
insl
or
icebp
or
sub
mov
or
xlat
mov
ret
sub
mov
imul
push
lret
cmp
mov
je
xchg
scas
lcall
sub
mov
adc
jmp
sub
push
stos
imul
inc
fstpl
fldl2t
xorb
rorb
repnz
or
cld
mov
mov
adc
cs
xchg
adc
mov
push
ja
aaa
cmp
adc
and
xor
jno
movsl
xchg
fdivrp
pop
test
inc
jge
inc
sub
inc
aaa
xchg
adc
hlt
inc
aam
in
push
xchg
jp
push
rcll
in
or
adcl
lcall
lods
stc
mov
aas
mov
mov
cld
xchg
cwtl
fstl
out
inc
inc
pushf
leave
pop
jne
sbb
inc
mov
sti
push
rcrb
fs
and
cld
mov
mov
push
popa
sti
popa
rorl
mov
jnp
daa
add
in
and
mov
xor
mov
or
mov
movsb
insl
fistps
sahf
push
xchg
jnp
and
mov
mov
xor
mov
outsl
movsl
pop
push
cli
dec
sbbb
repnz
das
cld
sub
pop
push
jmp
ljmp
and
fadds
push
inc
mov
test
dec
pop
mov
iret
cld
repnz
insb
jmp
dec
pusha
and
jns
jl
sub
mov
push
or
xor
movsb
lcall
add
inc
hlt
sbb
add
mov
push
push
or
ficomps
hlt
push
fistl
fs
es
xor
loopne
fdivrp
lcall
loopne
int3
arpl
dec
lds
xor
push
inc
lcall
icebp
mov
insb
insb
dec
aaa
add
lods
ds
sbb
icebp
call
xor
dec
push
leave
outsb
and
and
fwait
jp
stos
das
push
fwait
lret
loopne
lahf
data16
pop
inc
jb
cs
jmp
test
test
mov
push
mov
popf
add
mov
or
mov
aad
or
xchg
int
xchg
adc
pushf
nop
sub
xor
inc
stos
daa
sub
stos
push
sti
inc
xchg
push
imul
adc
ret
sbb
pop
sbb
int
idivl
or
dec
idivb
mov
push
shl
int
out
push
pop
sub
fistl
push
mov
cmp
and
sub
jae
add
sbb
loope
xchg
arpl
mov
or
sub
ffree
loope
es
push
fwait
movsb
jae
mov
cwtl
shr
dec
mov
jno
add
xor
mov
jno
push
lret
adc
dec
jmp
lock
mov
push
adc
jbe
js
out
lcall
jl
jl
xchg
pop
sub
dec
gs
fcos
xchg
push
cmpsb
xchg
mov
add
jno
les
pop
mov
imul
push
jmp
out
arpl
sarb
sbb
sbb
rorb
or
dec
jae
or
adc
test
std
lea
popf
iret
jno
enter
jae
xor
gs
nop
popf
stos
pusha
push
lret
nop
pop
cmp
test
sbb
sarl
mov
and
mov
das
push
lcall
addb
cmp
add
and
insb
in
mov
sbb
insb
sub
pop
jb
mov
inc
dec
cwtl
and
scas
xor
mov
add
inc
pop
lcall
add
xchg
out
aas
div
jbe
movsb
ret
lock
xchg
push
jecxz
add
test
add
sarl
push
ret
xchg
insb
adc
call
and
sbb
push
movsl
or
fs
xor
clc
sti
aas
or
stc
sbb
mov
daa
inc
push
movsb
add
adc
or
je
aas
outsl
and
mov
xchg
dec
pop
gs
cmpsl
inc
jno
sbb
mov
mov
or
mov
xchg
notl
adc
mov
scas
ljmp
mov
jmp
ljmp
imul
mov
push
adc
les
push
sbb
lods
pop
insb
and
and
and
shlb
fidivl
mov
or
mov
cmpsl
inc
jns
mov
pop
scas
loopne
sub
fs
push
mov
stos
jmp
jg
or
jmp
fidivrs
lahf
mov
fsts
sbb
adc
fimull
cltd
pop
xchg
add
xchg
add
and
inc
push
xchg
inc
fs
mov
mov
mov
sub
out
push
in
lods
jg
stc
pop
sbb
test
std
nop
mov
xor
outsb
sahf
pop
xchg
or
lahf
loopne
stc
lods
fwait
das
jl
outsb
dec
lret
dec
dec
xor
stos
jno
mov
in
sbb
xor
push
data16
ss
test
mov
aad
ljmpw
pop
test
in
int
pop
rcrb
stc
xchg
mov
enter
cmpsl
aad
sbbb
insl
pop
and
sbb
xor
xor
mov
ja
dec
dec
jge
jg
cmp
and
out
xchg
and
fnstsw
hlt
out
inc
loopne
mov
repnz
into
sub
fisttpll
pusha
and
mov
add
fsubrl
pop
pop
popa
imul
cltd
jae
scas
push
cltd
dec
ja
insb
mov
lcall
fsubs
inc
jne
and
js
clc
jg
xor
add
dec
loope
cli
add
inc
xchg
test
sub
lea
loopne
mov
xchg
dec
sub
pop
sub
push
cmp
shl
sahf
mov
stc
mov
fsubrl
mov
push
daa
lea
cli
mov
jge
fucomip
dec
cmp
in
push
xor
pop
sarl
ss
daa
mov
xchg
jge
andb
scas
ficoms
push
into
push
push
aam
jnp
and
pushf
pop
stos
shrl
hlt
cltd
fsubp
xor
cmp
cmp
jmp
testb
jmp
sti
cli
sahf
into
or
sti
mov
pop
jne
push
push
jb
xchg
adc
adc
xchg
fwait
mov
jmp
inc
es
aam
dec
sbb
mov
clc
sub
adc
les
shll
jg
mov
and
mov
notl
pop
adc
daa
sbb
push
repnz
push
and
jmp
adc
rorl
push
xor
add
loop
out
or
jb
sbb
lock
xor
fisubs
sbb
call
fwait
mov
in
adc
fcoms
mov
pop
push
sub
outsb
sbb
nop
sti
insl
mov
add
xchg
roll
dec
lcall
inc
jno
lods
je
and
psllq
pop
fistpl
imull
dec
cmp
xor
sub
xor
xchg
in
xchg
xor
xchg
dec
or
sarl
addr16
cld
cmc
ja
cmp
cs
sub
cmc
call
or
lcall
popa
sub
in
xor
mov
mov
dec
jecxz
or
out
push
adc
rorl
inc
aad
jnp
lods
push
dec
outsl
mov
popf
dec
sbbl
add
xor
stc
sub
aaa
dec
xorl
or
shlb
pop
inc
jbe
stos
aad
icebp
outsb
fs
push
aam
repz
arpl
xor
imul
scas
les
dec
lea
xchg
sub
stos
movsl
mov
mull
sub
loop
xchg
fs
fdivrs
mov
inc
cld
xchg
pop
sahf
stc
xchg
int
in
movsb
adc
push
sbb
add
push
xchg
fwait
test
aaa
fcmovbe
sub
mov
or
scas
inc
in
imul
and
push
pushf
jg
into
push
std
or
xlat
sbb
add
fsubrs
push
cmp
pop
pop
jge
xor
shl
xchg
pop
or
jecxz
imul
jmp
add
les
add
xchg
inc
mov
pushf
push
mov
stos
nop
jp
push
icebp
add
mov
call
mov
pop
xchg
adc
js
or
outsl
mov
pop
or
xchg
xor
add
sub
mov
test
xchg
cmpl
aam
mov
sub
mov
loop
xchg
pop
faddl
pop
test
jae
pop
xor
fisttps
jne
mov
dec
or
mov
inc
xor
mov
scas
cmp
das
push
pop
or
aaa
jp
mov
into
lcall
adc
push
mov
jb
and
ret
scas
into
ret
cmp
aas
cmpb
clc
aas
out
mov
adc
sarl
pop
push
mov
and
roll
dec
xor
push
fsubs
insl
mov
lock
out
xor
fwait
jp
loopne
and
cmp
gs
jns
lret
into
neg
mov
ret
repz
dec
and
push
pop
daa
inc
adc
jae
ret
fldenv
mov
push
and
fsubrl
push
es
cmp
and
add
in
xor
and
add
inc
js
sbb
movsl
cwtl
inc
mov
mov
xchg
cs
sub
jns
or
shll
stc
outsl
push
cli
loop
inc
enter
pop
cmp
test
push
mov
std
dec
movsb
gs
stos
inc
movsl
int3
mov
enter
mov
or
data16
adc
iret
cmp
ljmp
fisttpll
aad
icebp
and
ret
inc
pop
dec
sbb
mov
jg
cmp
sbb
ds
mov
mov
sahf
lods
bound
gs
dec
sub
sti
aam
mov
cli
fdivr
add
insb
call
cmp
shlb
push
jnp
test
and
sahf
pop
add
inc
in
fbld
push
xchg
pop
add
xorl
or
ret
inc
aam
clc
jge
arpl
pop
mov
imul
sub
push
mov
mov
roll
dec
insb
ja
mov
sbb
mov
mov
pop
inc
jbe
add
aad
mov
cmpsb
aam
adc
dec
mov
mov
mov
pop
pop
ds
pop
addr16
mov
enter
mov
jb
mov
inc
ret
sahf
inc
rcll
mulb
adc
lret
rorb
and
cli
clc
mov
mov
js
shll
pop
je
inc
pop
jnp
imul
fs
std
nop
sub
popf
shrl
and
shr
mov
or
lds
int3
inc
scas
xchg
jmp
jbe
fcomp
mov
cmp
scas
aad
ret
rol
push
lds
xchg
xor
or
loopne
and
xor
movsb
jae
sub
pop
bound
and
adc
sbb
in
dec
or
pop
subl
push
sub
pop
outsl
cmp
adc
adc
cmp
test
loope
shl
popl
mov
rclb
mov
mov
int3
flds
cmp
xchg
jmp
shr
scas
xor
fnstcw
fdivrs
in
cltd
in
in
sbb
jmp
or
inc
jmp
sub
push
mov
and
cmp
aas
call
xchg
mov
mov
cmp
pop
dec
pop
jl
sti
mov
mov
daa
dec
in
out
nop
push
lahf
mov
dec
test
iret
mov
enter
inc
mov
xchg
nop
inc
xor
mov
nop
repnz
lock
rclb
jg
push
sahf
lock
in
insl
push
enter
adc
mov
inc
shl
mov
inc
add
sbb
xchg
inc
int3
imul
subl
outsb
jo
push
mov
xchg
adc
xor
jp
dec
sub
and
daa
jle
or
lret
pushf
mov
idiv
inc
test
jle
jnp
add
lods
dec
stc
out
cmp
pop
and
out
pusha
lcall
jecxz
mov
sbb
repnz
and
test
xor
mov
insl
mov
repz
mov
pop
cltd
in
mov
cmp
je
leave
in
addb
or
xchg
inc
sar
test
cli
adc
aas
cs
sub
sub
pushf
cld
and
hlt
or
andb
dec
cmc
cld
mov
and
or
sbb
adc
cltd
jmp
daa
ss
into
inc
cmpsl
das
int
adc
imul
xchg
pusha
ds
cmp
inc
imul
lcall
mov
pop
and
mov
mov
jnp
in
mov
ja
dec
xor
loopne
xor
add
and
lret
rol
push
xchg
push
dec
sbb
or
add
xor
imulb
mov
inc
fidivrl
inc
test
repnz
and
dec
xor
jp
xor
sub
jl
jmp
xor
mov
adc
cmp
imul
repnz
mov
push
decl
or
sbb
jp
cld
cld
mov
fidivs
ljmp
imul
inc
mov
lods
ret
aad
popa
movsl
jb
in
ss
out
mov
mov
nop
push
pop
xchg
or
bound
leave
std
loopne
mov
jbe
int
popa
push
sbb
jg
test
dec
push
out
sbb
ret
sbb
mov
dec
cmc
mov
dec
push
enter
adc
xlat
rcrl
cmp
sbb
xchg
mov
xor
cmc
shlb
lods
sbb
inc
in
xor
add
xor
icebp
test
stos
xlat
dec
or
mov
jbe
daa
ja
xchg
shll
push
testb
std
jae
stc
sahf
mov
out
testl
je
test
adc
ja
and
push
pop
mov
xor
mov
inc
push
xchg
mov
jle
pop
shlb
shll
and
lock
sub
mov
xor
shlb
lds
jecxz
les
mov
mov
fisubl
std
jecxz
das
ficompl
add
ss
mov
sub
mov
mov
push
call
fbstp
inc
or
mov
cmp
mov
mov
jbe
adcb
into
ja
loopne
sti
leave
icebp
jno
and
arpl
mov
mov
movsl
mov
cwtl
sbb
rcrl
pop
lods
popf
loopne
push
and
push
data16
jb
adc
aas
sub
and
icebp
dec
push
test
xchg
pusha
call
loopne
repnz
sub
mov
jg
and
mov
lea
hlt
cmpsb
loopne
cmovo
push
push
mov
jecxz
xchg
fcmovnu
insb
popf
inc
loop
pop
push
fcoml
inc
push
in
test
insl
pushf
push
sbb
mov
dec
inc
scas
aad
inc
pop
int
insl
lret
std
and
loop
mov
pop
mov
pop
inc
and
scas
sub
loop
xchg
in
es
imul
repnz
push
push
rcrl
mov
add
ret
cs
lods
fwait
lods
push
subb
lods
cld
ficompl
pusha
in
outsb
xchg
ss
nop
pushf
scas
sub
push
imul
push
enter
iret
fwait
xlat
dec
or
jb
or
pushf
in
jae
push
or
test
adc
cld
fdivr
xor
cli
insb
in
shrb
lds
fwait
cmp
cmpxchg
mov
fbld
sbb
pop
scas
push
lods
test
push
rcrb
xchg
sbb
stc
xor
lahf
and
add
push
adc
lods
xor
jbe
cltd
mov
cmc
inc
jecxz
nop
cmpsw
cmp
loope
fwait
sbb
fs
idivb
jbe
or
out
and
lahf
pop
ret
out
imul
cs
nop
lcall
rsm
fnsave
sub
xchg
xchg
and
test
sbb
hlt
add
lea
xchg
in
sbb
mov
sbb
sub
lock
jae
ret
jno
mov
into
enter
ja
loopne
test
mov
dec
cmpsl
xchg
cmp
ror
sbb
stos
mov
call
mov
and
push
inc
dec
incl
cli
cmp
cmp
fdivl
shrl
push
jecxz
add
test
sbb
insb
fmul
xchg
bswap
push
or
mov
out
aad
outsb
cmpsl
mov
lret
movsb
inc
push
arpl
sbb
and
jne
pop
icebp
mov
and
jo
dec
dec
dec
fstpt
mov
sub
scas
xor
jne
dec
ja
hlt
movsb
stos
xor
jmp
jno
negb
fisttpl
jno
dec
movb
stos
add
xchg
push
mov
push
stos
sbb
pop
mov
push
jle
mov
inc
idivb
fwait
jne
sub
lret
nop
mov
adc
mov
dec
rclb
cld
insl
das
insb
scas
mov
mov
xchg
jge
lret
popf
stos
repz
pop
test
ret
sub
add
inc
in
imul
sbb
sub
mov
leave
loopne
mov
in
rclb
es
pop
into
mov
call
jno
mov
cwtl
pop
lds
fidivrl
repnz
cmp
test
ds
and
pop
sti
cld
lock
sbb
add
movsl
dec
push
sbb
cwtl
and
pop
push
sbb
fisttpll
cld
mov
mov
in
iret
dec
pop
addl
adc
mov
cmpps
xor
fstpt
inc
jmp
ffree
lret
push
test
add
xlat
mov
fwait
sbb
std
pop
outsb
daa
mov
scas
mov
xor
jp
aam
rol
xchg
lock
mov
jg
inc
fwait
mov
dec
sub
add
pop
fwait
jne
rcr
subl
in
jge
lods
or
in
mov
xchg
movsl
clc
sahf
and
sub
or
cmp
xlat
xor
imul
cmp
adc
nop
push
test
aam
xchg
in
ret
jmp
xor
jg
mov
mov
add
fstsw
imul
into
xor
cmp
and
test
fiadds
jno
xchg
hlt
jae
sbb
xor
cltd
cli
loopne
xchg
xchg
fiaddl
call
jbe
inc
hlt
sbb
pop
push
jb
bound
adc
inc
xchg
lret
lods
push
jp
sbb
hlt
pop
lods
sub
stc
or
jl
outsl
stc
test
jno
mov
popf
aam
add
cmp
fimuls
lcall
in
adc
ja
mov
mov
mov
imul
in
clc
lds
nop
cld
ret
jge
adc
mov
psubusw
jmp
xchg
int3
inc
xor
fsin
pop
sbb
adc
add
rcl
mov
inc
clc
in
ja
mov
addr16
or
xor
mov
out
gs
sbb
add
stc
xchg
mov
or
repz
in
mov
ljmp
in
cmpsb
xchg
dec
orl
lds
mov
jecxz
mull
notb
jge
xor
loopne
adcb
fsubrp
repnz
xchg
mov
jo
stos
cmp
jmp
push
cld
cmpsl
fadd
push
mov
rcl
push
xor
popf
mov
xchg
les
xor
mov
loop
jb
stos
sub
xchg
sti
fldt
inc
movsl
jnp
fdivl
cmpsb
iret
mov
sbb
dec
test
jo
xor
ljmp
rcl
and
and
es
jl
call
cli
arpl
cmp
insl
xchg
jp
out
mov
pop
or
fcmovb
sbb
add
push
lret
push
mov
dec
data16
cmp
lock
pushf
imul
dec
jmp
adc
out
fwait
divl
adc
push
out
xor
cmp
stos
out
fadd
pop
jmp
mov
or
je
pop
in
mov
aas
mov
cmpb
jl
ljmp
jg
inc
lods
cmp
mov
fwait
mov
or
movsb
mov
jg
or
dec
shlb
sbb
jno
bound
mov
xchg
or
aad
imul
cltd
ljmp
andl
mov
dec
sub
aad
xchg
jge
in
xchg
fistl
imul
push
pop
jno
ficoms
mov
imul
or
aad
loopne
jne
or
dec
scas
xor
out
dec
and
mov
cmpsl
loope
adc
insb
sub
popa
scas
add
inc
push
sbb
add
sbb
insb
stc
push
js
fs
rol
push
loope
jl
sbb
mov
lock
sbb
cmc
inc
icebp
pop
cs
out
and
jl
xor
push
sbb
mov
int
lahf
sbb
cmc
test
es
test
es
xor
test
cwtl
sub
cwtl
insl
fdivp
push
xor
or
out
jo
mov
femms
jl
scas
iret
enter
mov
lret
icebp
mov
hlt
push
pop
pop
pop
dec
lds
call
adc
xchg
adcl
leave
aas
stc
iret
pop
mov
popa
mov
or
daa
lahf
mov
neg
inc
jp
push
cs
inc
xor
out
cmp
push
xor
fxch
sahf
xor
mov
call
insl
call
mov
outsb
cmp
insl
into
cmp
cltd
or
push
repnz
inc
inc
ror
push
lret
jae
out
sbb
xchg
movsb
dec
adc
add
inc
repnz
in
lea
xor
add
in
mov
fnstsw
jne
or
loopne
pushf
test
cltd
cmc
inc
cli
scas
pop
out
cmp
pop
pop
rdtsc
mov
cmp
in
int
sbb
cmp
jnp
push
mov
lock
adc
insb
xchg
loopne
jecxz
nop
lret
jb
adc
das
popa
insl
push
add
loopne
ret
mov
in
dec
addl
mov
jae
mov
push
or
ja
ljmp
hlt
mov
xchg
xor
dec
je
dec
mov
mov
or
or
dec
sahf
int3
cmp
mov
adc
fadds
fidivs
mov
in
mov
add
or
bound
xchg
pop
lea
jmp
enter
les
out
cltd
cmpsb
gs
xchg
push
sbb
cli
repnz
inc
shrb
cwtl
mov
fiaddl
fmull
sbb
xchg
pushf
xlat
cmpsb
notb
mov
stos
cmp
mov
sbbb
fcom
jo
xor
cltd
or
cmpsb
imul
clc
and
cmpsl
push
aaa
sub
jp
xor
mov
push
jne
cmp
mov
add
cmp
push
mov
push
xchg
xor
test
pop
stos
sub
ljmp
xchg
fadds
mov
loop
or
jo
ljmp
fiadds
xchg
ss
pop
lods
bound
int3
add
xchg
or
mov
dec
adc
dec
loopne
pusha
inc
mov
hlt
cmp
and
cmpsb
cmp
test
popf
loope
fiadds
xchg
loopne
imul
ss
fists
leave
or
cmp
mov
push
and
ds
pop
cwtl
jecxz
mov
cs
gs
es
imul
dec
les
hlt
jmp
mov
scas
dec
int
popa
sbb
sub
cmp
jne
in
fiaddl
clc
in
push
cld
flds
es
adc
add
lret
inc
sbb
cmpl
and
pop
into
cmp
cli
in
int3
adc
lock
cmp
leave
fsubp
movsb
jne
loopne
lahf
push
in
aad
call
mov
roll
mov
cli
sbb
dec
arpl
movsb
mov
out
iret
mov
test
mov
cld
popa
add
mov
int3
roll
inc
xchg
mov
mov
or
mov
push
sbb
pop
fistl
rolb
cld
ret
dec
mov
cmp
ss
jecxz
inc
jne
pop
push
imul
loopne
or
stos
xchg
sub
push
outsb
inc
in
pop
xor
jno
cmpsl
pop
mov
ja
cmpsl
test
in
xor
and
popf
outsl
out
lods
mov
and
in
in
xlat
aaa
in
fildll
data16
cld
ret
inc
add
inc
push
loop
iret
into
das
sahf
xchg
and
imull
cmp
inc
jnp
lret
dec
adc
sbb
das
xor
js
jl
out
loop
test
fwait
xchg
jnp
shll
repz
movb
push
and
int
sbb
mov
cmp
inc
jns
and
xor
push
je
ror
rclb
cmp
ret
jne
push
les
cld
and
and
lods
outsl
cmp
fdivl
ss
mov
lods
lock
dec
jp
lahf
xchg
cwtl
mov
movsl
daa
icebp
push
bound
and
fcmovnbe
aad
loopne
repz
out
popf
pop
fwait
sbb
loope
pop
les
scas
stos
jb
sbb
inc
add
add
pushf
sbb
stos
pop
push
addr16
cmp
cltd
inc
xor
adc
dec
jg
incb
test
mov
jmp
pushf
call
cmp
and
popf
inc
adc
mov
pop
pop
push
sbb
and
sbb
mov
inc
push
cli
mov
mov
dec
mov
js
mov
sub
std
aaa
inc
and
push
and
nop
mov
sbb
mov
fisubs
iret
insl
fwait
push
pushf
adc
xchg
push
add
sub
lods
test
imul
dec
divl
xchg
imul
mov
stos
hlt
std
scas
mov
lret
insb
sub
test
clc
sub
jl
jmp
rol
dec
out
jmp
xchg
jae
xor
pop
aam
fdivrl
aas
push
push
mov
outsl
xor
stos
daa
lret
push
pushf
addl
lods
loopne
sub
push
popf
push
icebp
sbb
dec
aam
ficompl
or
jo
lahf
push
enter
xchg
inc
in
shlb
stos
mov
js
aam
cmpsb
mov
loopne
out
dec
xchg
test
xor
enter
xchg
imul
jns
jnp
test
out
or
orl
nop
dec
cmpsl
insb
or
jne
movsb
ja
cs
push
xor
daa
mov
adc
mov
lods
pop
lret
and
push
xchg
pop
popa
mov
push
xor
xchg
lea
fiadds
cmp
fimull
shlb
fwait
test
sub
les
inc
fmuls
lds
cmpsb
pop
movsb
mov
test
and
clc
jbe
pop
lahf
cld
sbb
jle
xorl
xor
loopne
call
sbb
xchg
xlat
push
dec
shl
test
jecxz
pop
mov
sarb
rorb
adc
add
jnp
in
mov
in
scas
int3
xchg
ror
sbb
int
add
jne
push
jb
pop
push
les
mov
dec
jl
or
stos
jmp
and
sbb
dec
leave
fcmovbe
int
repnz
jae
sbb
and
and
xchg
lea
push
and
loopne
fisubl
repz
add
xchg
arpl
lds
in
pushf
sahf
cmp
or
cmpsl
sti
div
cltd
pusha
xlat
int3
sbb
fists
hlt
jne
sub
stos
cmpsl
mov
clc
lods
inc
xchg
test
jmp
mov
enter
sbb
sbb
cmp
or
mov
fstpl
nop
bound
push
xor
push
lods
out
shl
or
test
add
ds
mov
repz
jb
js
aas
mov
sarl
test
mov
mov
mov
push
test
xchg
jg
or
jg
lods
push
fistl
into
lahf
repz
add
jmp
adc
mov
lahf
adc
pop
lahf
push
mov
pusha
sbb
test
and
pop
mov
iret
mov
cmpsb
xor
xor
sbb
lea
sub
cmp
das
or
mov
popa
jl
push
jecxz
aas
addl
jl
cs
push
add
mov
stos
add
pushf
sbb
and
sahf
stos
pop
mov
ja
sbb
inc
ret
lock
sti
mov
stos
mov
lret
mov
jecxz
mov
aad
gs
sbb
inc
test
xchg
inc
mov
mov
lea
leave
out
fbstp
inc
outsb
jb
pop
rol
mov
inc
xchg
sub
aad
push
pop
icebp
jmp
xchg
adc
enter
shrl
jb
mov
lret
pop
mov
lea
out
inc
xchg
loope
mov
dec
and
sbb
repnz
sahf
mov
add
and
js
das
cmp
add
in
js
imul
scas
adc
outsl
imul
rol
mov
sbb
dec
or
movsl
or
adc
jge
sbb
cmp
jp
mov
in
push
and
aaa
add
into
push
pop
fcmove
cmp
sbb
rcl
sub
cmp
xchg
xchg
lahf
push
jns
xchg
fdivr
gs
les
mov
adc
xchg
das
jl
and
sub
cld
pop
lret
and
hlt
push
ss
pop
mov
jno
jne
xchg
pop
mov
and
icebp
mov
mov
cltd
cmp
fxch
lret
popa
mov
pop
mov
fcoml
sti
out
xchg
mov
mov
ror
iret
inc
outsb
sbb
sarl
jmp
ret
sbb
jbe
loop
daa
stos
arpl
inc
das
push
out
push
loopne
lret
sub
dec
dec
fcomps
loop
cli
cwtl
dec
movsb
sahf
jno
sbb
jp
pusha
sub
sbb
xchg
push
cmp
push
jno
aas
push
fisttpl
lds
xor
xor
or
xor
xchg
repnz
dec
add
xchg
dec
dec
pop
add
xchg
mov
stc
cmp
cmpsb
mov
test
jp
or
or
inc
push
lds
hlt
push
das
popa
mov
insl
das
sub
fldcw
testb
stos
pop
push
cwtl
mov
sub
lea
inc
push
jne
xor
js
imul
fadds
pop
pop
inc
rorl
insb
cmc
fisttpl
add
xor
add
or
sbb
xor
daa
inc
push
lret
ret
mov
popf
inc
je
and
dec
jmp
ror
addr16
fdivr
or
dec
int3
hlt
or
cmp
push
xchg
stos
icebp
adc
mov
call
mov
xor
cmp
sbb
jbe
sub
std
pop
fidivl
fsts
adc
ss
push
adc
push
or
mov
fnsave
out
fistps
xor
xchg
xor
insb
stc
pop
test
mov
dec
adc
mov
lret
cmp
setb
xchg
xor
inc
xor
ret
cmp
ja
test
icebp
push
inc
lods
test
sbb
pop
add
mov
xchg
shrl
pop
lds
lods
loope
iret
shlb
call
out
pop
jo
pop
js
xchg
jle
mov
stos
rclb
mov
mov
int3
ljmp
or
push
lret
add
mov
lds
lods
aas
sub
addr16
inc
jno
push
sub
psubb
sbb
push
insl
dec
mov
adcb
scas
dec
jb
add
xlat
pop
stos
repnz
xlat
mov
ss
pop
jl
lea
dec
shlb
sti
pop
cltd
rcll
or
sbb
nop
jecxz
mov
inc
pop
loope
inc
in
fistl
mov
add
ss
call
lock
bound
jo
mov
fmul
jb
cli
sub
mov
and
jg
or
push
out
aad
call
jno
push
mov
repz
mov
push
outsl
pop
out
dec
adc
mov
mov
call
dec
pop
jno
inc
jno
pop
xchg
pop
push
aaa
pop
mov
sar
std
scas
mov
or
sbb
jp
decl
mov
in
inc
jo
inc
mov
das
push
insl
pusha
clc
inc
sub
call
push
adc
jle
adc
push
adc
adc
xchg
xor
dec
jecxz
dec
sti
stos
popf
jae
and
lret
nop
and
jg
leave
ds
push
idiv
mov
jnp
sbb
or
ds
sahf
push
pop
ljmp
cmp
lods
sub
mov
leave
lahf
push
xor
and
xchg
out
pop
push
test
sbb
loope
mov
push
daa
push
pop
arpl
mov
and
lea
movsl
adc
in
dec
inc
push
jp
xor
jg
lcall
mov
cmp
lret
mov
lahf
data16
test
and
mov
test
jbe
lds
sbb
and
lea
movsb
imul
mov
gs
sub
add
divb
xchg
mov
inc
das
jl
or
sub
call
in
cmp
call
es
adc
lods
xchg
cmpsl
outsl
movsb
fistpl
lret
inc
push
or
pushf
bound
popa
jp
push
stc
jns
rorl
dec
in
mov
lret
in
xchg
ljmp
mov
shr
clc
int
adc
cmp
dec
test
inc
and
lret
xor
es
rolb
mov
shll
stos
jge
mov
jo
and
pop
and
sub
popa
loope
iret
das
test
iret
pop
and
rcr
pop
pop
mov
push
ss
ljmp
cmc
sbb
int3
xchg
dec
or
xchg
incl
lds
dec
js
inc
fldenv
and
inc
ja
jl
dec
fs
in
dec
in
in
inc
rdmsr
push
mov
lds
movl
jecxz
pop
mov
stc
mov
arpl
jnp
pop
cmc
sub
mov
lahf
hlt
stos
testb
jo
mov
and
adc
add
sahf
psllw
iret
mov
mov
cmp
adc
sub
jbe
mov
jle
imul
sbb
aam
lock
test
shlb
fs
jge
mov
in
imul
loopne
imulb
xor
and
adcb
mov
in
xor
sbb
push
or
ret
xchg
xchg
cmp
divl
xchg
pop
adc
cmc
adc
sahf
in
pop
movsb
sbb
icebp
xchg
mov
mov
cmpb
push
ljmp
rcrb
loope
test
xor
and
repz
adc
or
data16
and
fildl
mov
shlb
pop
in
cmp
dec
mov
test
and
dec
xor
in
pushf
icebp
mov
inc
pop
sbb
pop
mov
push
push
mov
xchg
shl
pop
cmp
les
dec
outsb
pop
in
call
fs
cwtl
ja
add
sbb
outsb
push
mov
and
xchg
jno
fwait
sub
push
jb
sub
into
mov
lret
out
andl
xlat
xlat
out
popf
addr16
loope
or
arpl
sbb
jg
sub
jg
dec
call
mov
add
sub
fldcw
movsl
inc
pop
repnz
mov
and
jp
sbb
or
add
inc
mov
fisubrl
subl
xchg
mov
shrl
push
inc
lea
sbb
popa
aaa
adc
add
adc
or
inc
lds
outsb
movsl
add
jl
jg
fidivrs
dec
sub
xchg
adc
lret
lahf
lods
ds
inc
stos
cwtl
lods
test
xor
sub
push
sbb
jge
lret
test
mov
inc
scas
and
mov
ret
movsb
pop
out
test
outsl
inc
lock
decl
or
mov
cld
addr16
mov
imul
test
push
jg,pt
das
jl
outsl
xor
js
lock
xlat
stos
xchg
cmpl
bound
mov
xchg
enter
popa
adc
xor
fadd
mov
in
out
push
xchg
cmp
in
int
lret
push
sbb
mov
test
jge
insb
sbbl
or
inc
cmp
push
cld
adc
push
mov
test
lahf
lods
xchg
pop
in
xor
push
test
mov
ss
dec
cltd
pop
push
cmp
inc
mov
aam
inc
aam
stc
aaa
mov
jmp
aaa
pop
cld
int
je
pop
mov
and
jg
mov
push
fnsave
jnp
dec
sub
pop
popa
or
xor
add
cltd
and
andb
std
cmp
loop
int3
push
inc
adc
xchg
inc
xor
fstps
out
mov
adc
cmpsl
adc
out
mov
push
or
sbb
out
mov
dec
inc
jl
addb
push
jb
mov
jno
inc
push
push
insb
fidivl
dec
push
inc
and
inc
pop
fdivr
mov
mov
add
cltd
mov
cmp
and
dec
or
push
fwait
scas
jp
xorb
sbb
or
aaa
inc
and
jae
cld
jl
cmp
incb
stos
pop
lcall
rcll
jg
aaa
or
mov
pop
add
mov
pop
iret
pop
inc
sub
dec
sbbb
mov
aad
adc
xchg
mov
mov
pop
cmp
scas
xchg
push
lea
push
lods
subb
call
push
xchg
iret
test
shll
cwtl
sub
pusha
insb
roll
pop
daa
test
in
sub
dec
pop
in
and
insl
or
daa
movsb
or
int
sbb
jb
sub
mov
lock
sbb
jmp
adc
sti
mov
stc
mov
addr16
in
push
dec
lret
popa
cmp
mov
xor
dec
jl
aas
test
mov
jl
movsb
mov
sub
or
outsb
push
push
shlb
cmc
sti
or
ret
fcmovbe
incb
mov
dec
jae
push
xchg
push
mov
xchg
shl
std
mov
hlt
cli
out
cs
test
push
fwait
push
sarb
cmpsl
lds
stc
xlat
push
pushl
icebp
xlat
pushf
mov
mov
jb
clc
mov
adc
into
pop
icebp
sbb
aas
and
pushf
scas
inc
in
mov
movsb
mov
adc
ss
xor
outsl
mov
mov
mov
rclb
inc
mov
mov
push
sbb
out
scas
push
and
pop
dec
add
inc
push
repz
test
pop
xlat
adc
inc
xor
test
subb
lds
lret
fmull
stos
cmpsl
mov
mov
mov
mov
adc
nop
ds
dec
pop
in
arpl
adc
xor
out
jecxz
bound
out
fcom
sbb
and
xlat
and
aad
mul
or
aaa
mov
shrb
sbb
push
pop
arpl
sbb
aam
mov
jne
into
cmp
jb
push
out
loopne
sub
dec
ret
jge
outsb
push
sub
into
daa
jecxz
fisttpll
addr16
mov
fucomp
add
jecxz,pn
cmp
pop
les
test
jl
fcom
fs
and
andb
jmp
dec
test
dec
push
movsb
pop
test
dec
mov
lods
push
cmc
rcr
cmpsl
adc
rcrb
aaa
jp
ret
inc
stos
sub
xchg
push
mov
jnp
ficompl
mov
or
push
mov
in
cmp
inc
es
sbb
or
dec
gs
pop
testb
mov
jg
test
mov
pop
fsts
mov
or
sbb
ljmp
xor
negl
stc
mov
cmp
fsubl
test
and
lds
xchg
into
adc
xchg
inc
pop
adc
sub
int3
sbbl
sub
lahf
pop
mov
popa
jae
xchg
cmc
push
xchg
fs
in
icebp
lahf
ret
jl
or
rorb
cs
adc
xor
xchg
cmp
xor
sahf
mov
sub
aad
stos
fsts
fsub
loop
dec
mov
ret
xchg
cwtl
loope
mov
out
cs
dec
sbb
mov
aam
xorb
mov
addb
jmp
xchg
test
sbb
cwtl
mov
push
pop
jo
and
sahf
dec
insb
inc
fs
mov
cltd
add
dec
add
popa
add
insb
mov
inc
jbe
movl
push
rolb
bound
int3
jmp
nop
or
xor
divb
adc
dec
push
daa
test
xor
sbb
mov
ret
mov
movsl
cmpsb
out
aaa
iret
cmpl
gs
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
fsub
dec
pop
push
mov
ja
mov
pop
fs
push
mov
push
sahf
cmp
ljmp
movsb
pop
jns
in
xor
pop
pop
repnz
jl
mov
lcall
sbb
aaa
sti
in
sub
ds
pop
fdivrs
jo
shll
or
jns
push
std
sti
adc
dec
ljmp
nop
aaa
xor
or
jo
xor
push
stc
fdivl
sbb
insb
je
pusha
scas
daa
ds
lea
push
loop
call
xchg
les
cmp
push
pop
ss
lahf
cmpsl
inc
xor
lret
mov
sub
shl
xchg
xchg
cmpsl
mov
lock
mov
mov
aad
imul
fldcw
shlb
xor
jge
cmpsb
movsl
cmp
js
dec
cmp
jnp
push
ret
pusha
xchg
sub
sti
mov
xlat
cmp
cmp
mov
xchg
fucomip
pop
or
je
scas
fwait
push
popf
aad
dec
push
lds
fcomps
sub
mov
push
adc
adcl
add
dec
dec
cli
push
dec
jge
jnp
ret
sub
pop
pop
push
adc
and
push
scas
mov
mov
xchg
mov
mov
loopne
es
std
or
int3
dec
lock
rorl
push
cmp
es
cli
out
repnz
repnz
out
xchg
jnp
sbb
lret
fst
cmp
and
xchg
pop
roll
je
xchg
lahf
push
mov
cmp
sub
mov
cmp
rclb
xchg
pop
mov
jo
gs
es
jb
int
test
lods
int
dec
dec
addb
xor
shl
dec
rcrl
adc
mov
xchg
xlat
scas
and
push
dec
jle
lret
dec
push
xchg
cld
push
pop
mov
add
adc
idivb
or
lea
sub
cmpl
das
fdivrl
imul
test
mov
adc
mov
cmp
dec
arpl
lock
mov
sarb
rcrl
pushf
mov
add
sahf
lods
inc
shlb
int3
cmp
mov
addr16
in
lock
into
xchg
in
mov
jl
clc
into
std
jl
sbb
dec
sbb
push
clc
mov
push
test
outsl
adc
xlat
cmp
jecxz
lods
jecxz
adc
frndint
mov
cld
mov
daa
add
or
stos
dec
xchg
lods
push
out
xchg
pop
jmp
mov
test
sti
mov
or
add
jle
cmp
dec
idivl
pextrw
pusha
add
aas
loopne
push
xchg
mov
jge
jmp
insb
cmp
sbb
ret
sub
ret
mov
rcll
push
xchg
rorb
xlat
adc
fisubrl
mov
or
xchg
ret
in
sub
sahf
out
dec
loope
xor
daa
mov
arpl
adc
add
icebp
mov
push
and
xor
xchg
dec
rcl
popa
ljmp
xor
out
or
add
and
xor
push
or
cmpb
mov
pop
outsb
inc
test
rcll
pop
xchg
stos
adc
sbb
mov
aas
movsb
pop
add
inc
push
or
mov
mov
loopne
out
cmp
and
cmpsl
inc
mov
xchg
sbb
dec
cmp
mov
insl
mov
lock
repnz
and
in
mov
mov
movsb
sub
test
push
stc
ss
fnstenv
imul
mov
ds
je
cmp
leave
mov
ret
sub
xchg
pop
mov
cmp
mov
in
sbb
cs
repz
jb
add
lret
popa
sbb
mov
aad
add
push
sarb
addr16
inc
jae
mov
jb
dec
jbe
bound
or
cmpsb
dec
xchg
scas
fcom
fs
jl,pn
dec
fmuls
iret
mov
dec
pop
push
dec
ja
push
imul
adc
or
test
mov
sbb
inc
insb
xchg
dec
inc
cmp
cmp
pop
jne
jle
ljmp
mov
aad
aam
bt
sub
mov
loopne
fnstenv
pushf
outsl
test
imul
imul
dec
sub
ljmp
pop
adc
pop
jb
sub
adc
adc
es
aad
out
pop
iret
or
mov
jb
jmp
inc
push
out
or
fldcw
sbb
jb
dec
adc
call
mov
dec
mov
mov
insl
xchg
int3
mov
pop
loop
notb
daa
or
shl
fadds
push
je
jmp
enter
inc
mov
adc
mov
loope
mov
pop
test
push
sbb
imul
fwait
mov
push
int
cs
mov
gs
pop
add
or
mov
jl
push
dec
scas
mov
xchg
in
mov
xor
pop
and
fcomps
lret
divb
orb
pop
mov
xor
mov
xchg
xchg
pusha
enter
cmp
sbb
mov
dec
sysret
cmpsb
xor
lahf
mov
mov
daa
xchg
cmp
das
cmp
call
mov
je
idiv
and
stc
stc
dec
xor
mov
adc
and
mov
mov
jle
clc
std
or
ret
daa
cmp
les
arpl
scas
adc
xchg
call
scas
pop
ljmp
ret
hlt
or
jl
add
mov
lock
inc
mov
jnp
test
iret
lock
scas
pop
jmp
and
or
sub
dec
fistpl
dec
sbb
dec
pop
pusha
rclb
fstpl
xor
mov
scas
mov
or
pop
std
sbb
mov
jnp
pop
and
out
xchg
and
mov
push
dec
stos
jne
sbb
cmp
lcall
adc
outsl
test
sbb
jle
clc
fstl
mov
or
add
rolb
sahf
push
cltd
push
and
shr
aad
cmp
push
test
or
dec
pop
xor
pop
cmpsl
in
xchg
dec
bound
pop
test
adc
mov
xor
push
popl
adc
xchg
xchg
mov
repz
je
xchg
enter
inc
or
jmp
test
jmp
sahf
test
rcr
imul
sti
add
cmp
mov
adc
rcrl
add
pop
in
or
dec
sti
dec
aad
dec
cmp
inc
add
adc
push
in
pop
adc
dec
or
sub
cld
inc
loopne
sub
movsb
or
mov
sbb
pop
nop
xchg
popa
sahf
fimull
xor
adc
out
xchg
mov
aas
dec
sub
sbb
sbb
mov
sbb
xchg
popa
movsl
clc
adc
fnsave
and
adc
push
pop
sub
out
outsb
int
cs
cmp
xchg
nop
push
mov
out
fdivr
adc
repz
adc
jg
mov
mov
stc
sub
into
les
dec
or
test
sub
in
cwtl
imul
or
out
cltd
xor
daa
adc
fildll
cmc
push
pop
adc
test
addb
ret
sub
outsl
cli
lods
and
mov
and
cmp
orb
and
jecxz
add
xor
sahf
fisubrs
mov
ljmpw
and
imul
sbb
add
fwait
jne
call
inc
loop
jle
popa
or
imul
pushf
mov
into
adc
push
xchg
jbe,pt
mov
sbb
push
lahf
shrb
sub
stos
pop
out
adc
roll
mov
sbb
sbb
div
and
jno
sbb
adc
aad
xor
mov
imul
imul
jo
repnz
mov
adc
loopne
sbb
pop
xor
ss
push
hlt
jns
sti
enter
inc
sarb
xlat
pop
cmp
daa
xchg
and
addr16
jmp
jge
mov
imul
xchg
jnp
push
sbb
push
ret
insb
cmp
aad
inc
sbb
push
mov
jo
lcall
mov
cltd
and
out
adc
push
pop
insb
pop
loopne
mov
popf
xor
dec
ds
sbb
sahf
test
insb
enter
pop
push
int
inc
sbb
gs
cmpsl
loopne
sahf
insb
cli
add
movsl
repz
cmp
mov
sub
into
xchg
jge
lcall
push
sbb
mov
adc
scas
cmp
push
sarb
jo
scas
fidivrs
pusha
inc
into
rcl
adc
dec
daa
xor
loopne
xchg
push
idiv
adc
ret
push
popw
movsl
sbbl
imul
or
and
xor
out
jecxz
stos
pushf
std
out
data16
xor
and
and
push
shrb
fidivrl
rcll
add
mov
jle
hlt
and
aad
aam
jmp
les
jbe
subb
call
fisubrs
gs
iret
les
stc
out
add
sub
cmp
mov
fs
mov
enter
les
fwait
sete
add
mov
movsb
dec
adc
xor
fisubs
pop
lea
ljmp
mov
dec
outsl
push
mov
inc
add
lea
ja
mov
push
bnd
pop
data16
sub
mov
aaa
pop
add
or
das
xor
imul
fnsave
adc
iret
imul
repz
mov
pop
fsubr
inc
add
ss
mov
jbe
jns
cld
adc
lahf
ja
cmpsl
mov
push
sbb
fucomp
mov
jnp
lds
jbe
sbb
jge
jmp
cmp
movsb
push
push
adc
imul
mov
lcall
adcb
out
pop
aam
outsl
inc
pop
xlat
jp
js
and
pop
pop
rcrb
out
sbb
jmp
stos
subl
sub
in
mov
aam
pop
inc
jns
push
fiadds
mov
and
lret
lods
sbb
mov
add
cmp
das
jae
mov
add
lret
jno
sbb
imul
lock
push
inc
push
test
sbb
outsl
gs
addr16
sub
nop
push
fsub
cmp
adc
cmp
xchg
xchg
jle
or
daa
insl
lret
xchg
mov
mov
sbb
mov
ja
dec
test
mov
mov
sbbb
cmp
dec
arpl
mov
mov
mov
aas
push
sbb
int
mov
push
mov
pop
add
pop
xchg
mov
inc
sahf
jmp
outsl
daa
jle
sub
or
lds
pop
cmpsb
or
insb
call
or
cmp
aas
pop
and
aas
mov
cmc
cmpsb
push
out
lret
and
es
adc
jne
jp
push
je
test
mov
pop
jecxz
scas
or
es
push
mov
repnz
out
sub
and
popf
sbb
pop
jl
out
lock
adc
xchg
dec
adc
pop
sbb
push
xchg
lret
xchg
jns
loop
xchg
sub
mov
mov
or
mov
fsts
and
insl
cmpsl
imul
call
cmpsl
out
xor
lahf
jbe
loopne
jae
dec
data16
mov
je
data16
jo
push
cmp
or
imul
cld
or
lds
test
push
inc
xchg
inc
mov
xor
adc
int
mov
je
outsl
aam
iret
xchg
sub
dec
ljmp
loop
in
pop
push
and
bound
mov
mov
movsl
aam
dec
xor
xchg
js
dec
dec
imul
push
mov
sbb
inc
adc
shrb
int3
mov
daa
ffree
xchg
aam
orb
and
xchg
insl
xchg
cli
xchg
mov
mov
call
sub
mov
test
xchg
adc
aam
jle
mov
out
pop
lcall
mov
jl
sbb
adc
fimull
pushl
mov
and
mov
mov
ljmp
jb
mov
test
pop
mov
ret
xchg
cltd
daa
cmp
sbb
cmp
push
movq
ret
inc
add
sti
test
cs
and
mov
dec
loopne
loopne
in
aaa
test
xlat
and
std
push
jle
pop
cmp
or
mov
outsb
pop
xchg
xchg
mov
mov
jmp
pop
scas
in
push
xchg
iret
jo
xor
mov
mov
mov
dec
in
sub
mov
add
fdivrs
sbb
pop
xchg
mov
cltd
push
sub
adc
enter
dec
pop
and
pusha
add
sti
cmp
aas
rorl
xchg
out
and
xchg
mov
mov
call
or
dec
push
push
lea
jge
movsb
fmuls
sahf
xlat
or
sub
jle
xchg
mov
nop
sbb
cmp
cwtl
lock
cmp
fistpll
sbb
mov
aad
es
mov
sub
mov
outsb
inc
cmp
push
sub
cmpsl
gs
popa
negl
mov
mov
insb
ret
and
aam
adc
enter
movsl
inc
fistl
xchg
add
or
cmp
int
ljmp
jmp
dec
arpl
test
inc
or
into
mov
es
sub
pop
push
cmpsb
and
add
mov
push
subl
jle
dec
dec
adc
mov
dec
fmul
dec
outsb
sub
mov
fs
push
push
mov
in
shlb
dec
gs
movsb
imul
cmp
xor
stc
cwtl
aad
push
mov
mov
shll
add
scas
inc
in
lods
lcall
dec
dec
sub
sbb
ss
lret
ret
popf
push
test
pushf
dec
mov
sbb
push
pushf
pop
add
dec
jns
mov
xchg
and
sbb
loop
adcl
mov
sbb
int
xchg
stc
mov
sbb
inc
xor
jecxz
jb
xchg
cmp
testl
icebp
lahf
js
scas
lea
mov
leave
ljmp
mov
and
xchg
mov
xchg
sbb
jns
jns
mov
mov
pop
pusha
or
cmpsb
pop
jbe
mov
jp
shrl
mov
test
xor
cmp
pop
mov
iret
sub
pop
fcmovnb
add
dec
ja
in
pusha
movsl
std
outsb
ret
or
sbb
xor
es
xchg
sbb
xor
mov
dec
movsl
dec
vxorps
pop
pop
mov
add
lcall
xchg
push
sbb
lret
cmp
dec
dec
lret
mov
jmp
enter
cli
mov
lahf
pop
mov
dec
imul
jle
and
leave
cmp
and
std
mov
test
push
lock
ja
das
bswap
out
lods
inc
mov
imul
shlb
push
lea
dec
mov
jecxz
lret
test
mov
push
xchg
iret
sub
push
sub
es
popa
add
addr16
outsb
and
shrb
push
mov
jmp
mov
xchg
shr
inc
cmc
push
add
and
pop
ja
movq
xor
sub
inc
and
push
stc
pop
ffree
out
jmp
mov
pop
inc
aas
aaa
xchg
mov
and
stc
loop
xor
inc
subl
repnz
mov
sbb
sti
xor
mov
ds
xor
test
jae
mov
jp
out
into
mov
jno
pop
lea
adc
adc
or
gs
mov
adc
mov
mov
rcl
adc
jne
hlt
loopne
sub
incb
jmp
sub
push
add
les
pop
push
movsl
mov
in
rcl
adc
je
push
dec
sbb
arpl
inc
dec
in
sub
cmp
fsubl
push
sti
or
jmp
pop
xchg
sbb
inc
loop
mov
movsb
hlt
mov
repz
mov
aad
test
inc
xor
cmpsl
and
insl
mov
push
cli
lcall
dec
dec
and
dec
xor
shll
sahf
or
stos
pop
lea
jmp
sub
iret
scas
jge
xchg
xor
xchg
fbstp
push
mov
addb
test
jno
jbe
stos
dec
adc
cltd
cmc
test
das
inc
fwait
shll
roll
push
and
jmp
xlat
leave
in
bound
dec
xlat
add
andl
mov
in
mov
int
push
mov
mov
or
inc
mov
popf
mov
cmpsb
push
pop
mov
inc
xor
addr16
adc
fsubrs
pushf
popa
lahf
jl
stc
or
lret
outsb
adc
push
push
out
lret
in
pop
sbb
mov
es
mov
inc
push
into
dec
pop
mov
wrmsr
lcall
pop
xor
rolb
xor
arpl
cli
cltd
test
rolb
pop
pop
push
rcrb
lds
cmp
ljmp
out
ficoml
gs
sti
nop
sahf
dec
mov
mov
cmpsl
outsl
sub
int3
loopne
dec
pop
adc
jb
xchg
pop
fimull
movsb
ja
repz
mov
cmc
std
nop
pop
divl
xlat
sarb
addr16
nop
mov
iret
add
test
es
adc
mov
sbb
mov
jge
aaa
imul
mov
cwtl
mov
sbb
shl
cmp
jne
arpl
mov
pop
nop
data16
mov
cs
adc
add
xchg
invd
jo
fcmovnu
inc
or
pushf
fistpl
jns
pop
sbb
push
fs
out
sbb
xor
mov
and
inc
addl
mov
daa
in
jbe
or
cmp
jge
jecxz
int3
sub
pop
outsb
loopne
push
int3
xchg
lcall
lods
std
test
repnz
cmc
push
imul
mov
dec
loopne
out
mov
pusha
das
aas
add
sbb
mov
lahf
cmp
fnstsw
int
out
imul
fidivrs
addb
ljmp
or
movsb
jnp
mov
jmp
xchg
rorl
xor
push
imul
je
pop
pop
cmp
pop
lahf
cs
cmp
imul
mov
jmp
pushf
sub
sub
mov
iret
push
ds
out
adc
cmp
cmpsl
mov
imull
push
push
call
lret
fstpt
inc
lock
adc
hlt
xchg
out
jp
dec
mov
mov
pop
mov
push
cmpsb
in
std
adc
push
nop
std
cmp
inc
jmp
pop
mov
and
mov
popf
in
sbb
clc
xchg
test
xor
arpl
hlt
or
xor
rcrb
sbb
repnz
les
mov
addr16
addr16
lods
cs
cmp
fs
lret
pop
int
cmpsb
mov
cli
sub
mov
addr16
sarl
xchg
or
and
dec
and
testb
adc
inc
pop
mov
mov
js
pop
testl
jle
sub
pop
pop
das
adc
sub
xlat
hlt
jns
daa
push
mov
orl
lret
lahf
push
fldenv
rcrb
pop
rorl
xor
clc
lods
xor
movsl
dec
fcmove
rorl
mov
inc
xchg
shll
stos
mov
or
sbb
jmp
je
mov
fisubl
ret
sbb
dec
das
jb
das
adc
jo
mov
push
ror
adc
push
in
sub
xchg
mov
in
loop
dec
mov
ja
js
mov
jecxz
mov
loope
inc
mov
sbb
or
in
dec
jle
cmp
insb
dec
pop
cmc
andb
stos
jnp
ljmp
add
loope
add
jmp
cmpsl
jae
mov
mov
gs
mov
sub
rolb
or
add
insl
pop
push
pop
sbbb
rclb
ret
xor
rorb
xchg
mov
inc
fucomip
mov
fwait
and
call
cmp
pop
mov
cmp
fisubl
mov
lahf
imulb
cwtl
clc
adc
pop
gs
dec
scas
sahf
push
mov
xchg
mov
inc
mov
pop
push
cmp
xor
cmpsb
xor
lock
mov
pop
xchg
push
sub
pop
popf
adc
or
xor
cli
or
jge
dec
mov
jae
shr
imul
mov
aas
push
inc
mov
xchg
fs
fildll
jne
mov
jae
rorb
cwtl
rol
mov
call
mov
add
shl
jle
loope
es
cmpsb
in
vandnps
aaa
and
movb
add
pop
shll
out
xor
dec
rol
jnp
push
test
movsl
stos
mov
dec
xchg
xchg
lods
mov
addr16
xor
sub
pop
cmp
add
mov
sub
rclb
xor
loop
std
test
scas
push
test
xor
jecxz
dec
mov
inc
jge
test
arpl
pop
xchg
repz
and
jbe
push
push
leave
pop
pop
inc
enter
imul
push
movsb
and
int
push
rclb
rol
xor
pop
jle
repz
bound
aas
jno
xchg
stc
stc
pop
js
fxch
test
push
dec
xor
push
cmp
xor
sbb
push
mov
inc
adc
popa
out
cmp
inc
shlb
pop
int3
cmp
ljmp
loop
enter
lret
pop
inc
cmp
sbb
xchg
xor
mov
test
or
jnp
sub
xchg
jg
dec
adc
call
jnp
pushf
adc
xor
mov
bound
pop
iret
pop
test
aad
cmpsl
jmp
push
jnp
and
cmp
rclb
and
mov
cmp
lret
mov
lds
iret
in
mov
mov
push
add
sub
mov
mov
push
mov
stos
rcrl
mov
mov
mov
sti
and
popf
test
sbb
outsb
ljmp
hlt
cld
push
add
idiv
add
sbb
jae
stc
mov
test
jne
jmp
fcoml
ret
xor
test
mov
push
cmpsl
fildll
and
test
pop
mov
cs
sub
xor
pop
repnz
adc
mov
lods
loope
xchg
add
scas
sub
fnstenv
push
adc
jno
push
or
adc
in
fistpl
out
mov
adc
xchg
mov
xchg
add
push
cmp
int3
in
adc
add
loopne
pop
leave
dec
cwtl
cmp
dec
das
out
shl
nop
fsubrs
lret
xor
jg
mov
out
ficoms
sub
or
imul
and
cmpsb
mov
jg
into
xor
jg
daa
das
ficomps
xlat
cmc
lea
jp
mov
movsl
cmpb
mov
jno
add
push
mov
sbb
sahf
jne
jmp
xor
lds
jmp
pop
or
pop
dec
mov
pop
clc
or
data16
xor
push
sahf
inc
test
lret
jae
and
std
les
enter
xchg
and
xchg
xchg
jb
mov
xor
mov
fisubl
stc
sbb
cmp
jbe
out
inc
pushw
das
repz
push
inc
dec
xor
jno
ja
fsubrs
pop
outsl
sub
xchg
es
sub
rcll
mov
or
fs
jle
lods
mov
mov
or
dec
or
dec
aad
out
insl
shrl
lock
sbb
add
sti
insb
mov
fsubr
jne
fisubl
out
inc
fsubl
jo
jb
fst
insl
bswap
daa
dec
cld
js
or
add
fdivrp
add
sub
add
clc
xchg
and
or
add
cmp
test
loopne
aam
pop
mov
int3
imul
dec
push
loope
push
adc
in
clc
ret
subl
mov
adc
iret
aam
outsl
add
adc
pop
jnp
push
in
sub
push
adc
add
mov
push
jp
outsb
stc
and
xchg
mov
mov
mov
nop
fadds
dec
add
push
dec
push
mov
shll
xchg
popf
sub
imul
add
jb
paddw
fistpll
test
test
out
adc
iret
pop
mov
mov
filds
out
jmp
test
fwait
cmpsl
add
mov
rorb
js
hlt
std
push
xchg
hlt
adc
je
inc
mov
stos
in
fwait
out
jmp
xchg
sub
adc
xchg
or
pop
pop
mov
sub
push
rclb
add
push
and
fldcw
out
xchg
pop
add
add
dec
fcomp
aas
cmp
rcll
push
pop
lods
hlt
pop
cmc
mov
mov
cmp
jb
mov
data16
clc
xchg
dec
pushf
sub
xchg
orl
inc
sbb
lock
popa
mov
les
add
imul
add
ja
pop
idivl
pop
adc
sti
cmp
jge
add
add
add
add
inc
xchg
add
sub
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pop
addr16
addr16
pushf
mov
